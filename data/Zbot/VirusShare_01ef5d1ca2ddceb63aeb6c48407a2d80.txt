push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
push
mov
sub
push
push
push
movl
mov
pusha
call
movl
movl
call
test
je
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
movl
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
add
mov
add
mov
mov
cmpl
jne
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
mov
mov
push
lea
push
call
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
movl
movl
movl
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
mov
mov
add
mov
mov
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
movl
mov
push
mov
push
call
push
call
mov
lea
push
push
push
mov
push
push
call
test
jne
mov
jmp
jmp
call
xor
jmp
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
cmp
inc
add
inc
add
add
inc
add
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
je
inc
add
inc
add
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addb
addl
addl
addb
addl
addl
addl
addl
addl
addb
addl
addl
addl
test
lock
hlt
test
clc
test
cld
test
lock
add
inc
add
inc
add
inc
add
inc
add
test
sbb
inc
add
test
sbb
inc
add
inc
add
test
cld
test
or
inc
add
inc
add
test
or
inc
add
test
or
inc
add
inc
add
test
adc
inc
add
test
clc
test
sub
inc
add
inc
add
test
xor
inc
add
inc
add
test
adc
inc
add
inc
add
inc
add
inc
add
inc
add
test
sub
inc
add
inc
add
test
sbb
inc
add
test
adc
inc
add
test
adc
inc
add
inc
add
test
xor
inc
add
inc
add
test
in
test
cld
test
add
inc
add
inc
add
inc
add
inc
add
test
adc
inc
add
inc
add
test
in
test
add
inc
add
inc
add
test
sbb
inc
add
test
cld
test
js
inc
add
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
add
inc
add
test
or
inc
add
test
adc
inc
add
test
sbb
inc
add
test
and
inc
add
test
sub
inc
add
test
mov
test
cmp
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
test
mov
add
test
xchg
test
cwtl
test
test
inc
add
inc
add
inc
add
addl
test
mov
inc
add
inc
add
inc
add
test
int3
addl
test
int3
test
rolb
add
test
faddl
add
test
in
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
test
push
test
mov
test
insb
test
jo
inc
add
add
add
test
js
inc
add
add
add
test
mov
inc
add
inc
add
inc
add
test
rolb
inc
add
inc
add
inc
add
add
scas
ljmp
xor
xchg
xor
fstps
xor
test
add
ljmp
into
sub
cmp
bound
jns
inc
mov
cmp
aad
cmp
imul
aas
sbb
pushf
aas
add
add
scas
cli
add
add
ficoml
add
fisttpl
add
xor
into
xor
jmp
xor
fdivs
xor
fcomps
fdivrs
sbb
mov
dec
fld1
xor
divl
mov
xlat
and
xlat
xor
rcl
dec
xor
xor
jp
daa
fcoms
xor
fsub
xor
xlat
sti
xor
fs
fidivrs
sub
xor
fistps
xor
faddp
xor
fmulp
xor
xor
fsubp
xor
fdivrp
xor
fiadds
xor
fcomp
pop
xor
cmp
mov
xor
inc
fldl
ss
adc
ss
inc
ss
ss
je
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
add
add
jne
mov
mov
mov
test
jb
arpl
cwtl
js
xchg
stos
add
jp
pusha
fs
arpl
cwtl
js
jbe
add
jno
jne
push
mov
mov
fs
scas
ljmp
inc
popl
inc
popl
sbb
jne
scas
ljmp
pop
test
stc
xchg
inc
imul
cltd
js
scas
ljmp
leave
mov
mov
fs
scas
ljmp
lcall
add
out
add
inc
add
inc
add
out
add
jne
jl
bound
mov
pop
xchg
add
push
pusha
bound
js
inc
test
jae
dec
xchg
xor
mov
scas
ljmp
sbb
das
sbb
insb
jae
lahf
add
add
das
rolb
insb
arpl
xchg
add
loopne
jae
mov
xchg
scas
ljmp
fwait
mov
mov
add
arpl
add
add
andl
jae
pop
mov
pop
xorl
sahf
add
jbe
pusha
jo
xchg
dec
ljmp
adc
xor
xchg
scas
ljmp
cld
andl
setnp
add
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
out
ljmp
mov
ljmp
mov
add
lods
in
jmp
jnp
add
lods
ljmp
popf
ljmp
lods
stos
add
mov
add
add
jmp
add
lods
jmp
add
insl
out
jmp
lods
ljmp
xchg
adc
xchg
sti
add
xchg
jmp
add
jmp
add
add
push
jmp
add
add
addl
in
add
push
jmp
add
add
inc
jmp
add
jmp
add
jmp
add
jmp
add
sti
add
add
jmp
add
jmp
add
jmp
add
ljmp
ljmp
xlat
ljmp
ljmp
xchg
ljmp
scas
out
add
scas
add
add
add
add
add
add
and
add
scas
scas
add
add
add
pushl
add
add
add
add
cmc
popa
popa
andb
add
add
add
add
add
add
add
and
arpl
scas
ljmp
stos
ljmp
lods
ljmp
scas
ljmp
scas
test
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
xlat
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
push
out
add
add
inc
out
add
add
push
out
add
add
inc
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
add
add
lds
add
lea
add
aaa
lret
and
mov
add
mov
mov
add
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
out
in
add
in
add
in
add
out
in
add
out
in
add
out
in
add
outsb
in
add
outsb
in
add
outsb
in
add
lods
ljmp
lods
ljmp
adc
add
add
add
in
add
in
add
in
add
add
add
pop
in
add
pop
in
add
inc
in
add
pop
in
add
scas
push
add
lret
push
add
cltd
push
add
mov
push
add
das
pop
add
jae
add
or
pop
add
aaa
push
add
cmp
add
cmp
add
cmp
add
add
jne
add
imul
add
or
add
popf
push
add
xchg
add
add
add
cmp
add
add
icebp
cmp
add
cmp
add
cmp
add
lods
mov
scas
test
mov
scas
cmpsl
mov
scas
outsl
mov
scas
movsl
mov
scas
push
mov
scas
inc
mov
scas
jno
add
stc
roll
xor
add
in
add
cmp
add
das
ret
add
add
mov
aad
scas
arpl
add
dec
aad
scas
adc
add
in
add
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
push
jmp
add
jmp
add
push
jmp
add
inc
jmp
add
sbb
add
adc
add
or
add
adc
jmp
add
jmp
add
push
call
add
pop
call
add
inc
call
add
and
add
sbb
add
call
add
clc
out
add
cmp
add
pop
cmp
add
in
cmp
add
aas
add
or
add
jmp
add
adcl
call
add
iret
sbb
add
sbb
add
out
add
out
adc
add
mov
out
add
sub
add
add
scas
sub
add
inc
add
jmp
inc
add
lret
inc
add
out
add
repz
add
loope
add
movl
add
cmp
add
pop
mov
add
and
add
push
mov
add
mov
add
mov
add
adc
add
add
add
add
add
and
add
inc
roll
dec
roll
std
rolb
inc
add
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
insl
in
add
insb
in
add
insb
in
add
insb
in
add
insb
in
add
in
add
in
add
in
add
out
in
add
out
in
add
out
in
add
in
in
add
in
in
add
in
in
add
ljmp
xlat
ljmp
in
in
add
in
add
in
add
imul
and
add
icebp
and
add
sti
and
add
or
add
sbb
add
add
outsl
add
std
and
add
sti
and
add
lret
sub
add
add
pop
sub
add
add
jno
add
mov
add
sub
add
sub
add
sub
add
sub
add
inc
add
and
add
add
adc
sub
add
sub
add
ret
ret
add
add
rol
scas
adc
add
add
add
fcmovnbe
add
mov
rolb
scas
mov
roll
scas
lods
rolb
scas
iret
rolb
scas
loope
add
and
rolb
scas
popa
rolb
scas
jns
add
adc
scas
imul
add
add
add
cmp
add
ljmp
lods
ljmp
scas
push
add
push
add
ljmp
scas
push
add
ljmp
lods
ljmp
lods
ljmp
scas
push
add
push
mov
ljmp
scas
push
add
push
add
push
mov
ljmp
scas
push
add
push
aaa
pusha
jmp
sbbl
lods
ljmp
jg
add
jg
add
jmp
add
pop
jmp
add
cld
call
add
cld
call
add
fucomip
add
lods
ljmp
daa
jmp
add
push
jmp
add
add
add
add
add
call
add
xchg
call
mov
push
mov
dec
aaa
shl
out
push
sahf
cmp
pop
in
testl
sub
sbb
add
add
jmp
das
mov
xchg
cltd
mov
or
repz
repz
test
data16
std
and
cmc
pop
inc
sub
dec
jo
xchg
sub
hlt
std
mov
jp
xor
fsts
std
mov
scas
pop
jne
mov
jp
add
cltd
es
inc
ret
icebp
jae
cld
mov
outsb
mov
mov
outsb
dec
call
sbb
mov
mov
sahf
xchg
sbb
dec
dec
in
cmp
jnp
iret
ja
loope
xchg
and
ja
sbb
mov
fisubrl
dec
aas
movsl
mov
fs
lahf
pop
and
jge
into
fimull
push
fsubrs
jl
pop
xlat
movsb
notl
jnp
jae
fcoml
scas
sub
int3
fwait
cli
push
jo
fdivl
scas
inc
call
daa
mov
fcoml
lods
es
push
jo
fdivl
scas
inc
call
fcomps
cmp
inc
call
popf
mov
scas
inc
call
add
into
jmp
push
stc
scas
inc
call
enter
clc
add
adc
ljmp
add
inc
lea
jmp
cs
and
inc
inc
inc
insl
lcall
scas
pop
bound
gs
sbb
sbb
xchg
add
shrl
jge
mov
into
mov
push
push
dec
jno
fcmovb
sbb
push
repz
and
mov
sbb
insb
cmp
adc
insl
add
cli
aad
dec
add
mov
jbe
fnstenv
insb
mov
add
mov
dec
das
add
jmp
mov
xorb
xor
lods
mov
add
dec
push
mov
jbe
xchg
inc
mov
in
add
incl
rclb
ficompl
cld
ljmp
mov
adc
add
dec
xor
incl
cmc
iret
adc
adc
adc
js
pop
loopne
sarb
enter
jle
xchg
hlt
adc
lahf
lahf
lret
enter
inc
pop
sahf
jb
mov
add
lret
add
jno
cmp
lahf
pop
mov
outsb
dec
mov
sbb
xchg
mov
adc
or
mov
lahf
mov
add
sbb
sarl
dec
add
dec
jns
fwait
inc
xor
lahf
ljmp
es
scas
ljmp
insb
ljmp
mov
dec
add
in
add
ljmp
test
enter
or
in
ljmp
sahf
ljmp
sahf
ljmp
in
ljmp
cs
add
ljmp
scas
jmp
add
ljmp
scas
out
pop
add
enter
add
lods
jmp
jmp
ljmp
lods
ljmp
mov
add
mov
add
movsl
fiaddl
aad
jns
jp
jmp
mov
loopne
jmp
movsl
lret
mov
ljmp
movsl
stos
add
mov
in
add
mov
add
movsl
rolb
jmp
mov
add
mov
add
movsl
mov
jmp
mov
add
mov
add
pop
loope
add
out
add
loope
add
loope
add
loope
add
out
add
jmp
add
loopne
add
loopne
add
loopne
add
jmp
add
loopne
add
loopne
add
in
add
loopne
add
out
add
add
add
loopne
add
in
or
push
loopne
add
sbb
add
push
add
jge
inc
loopne
add
flds
scas
out
push
pop
scas
add
insb
scas
add
sub
add
or
add
mov
add
clc
scas
icebp
add
scas
add
push
scas
add
adc
adc
jb
add
add
add
les
add
bound
add
movsb
scas
add
add
add
inc
scas
add
in
icebp
add
scas
add
pop
scas
add
sbb
adc
or
ljmp
add
cli
add
ljmp
ljmp
mov
call
or
add
add
or
jmp
call
or
ljmp
inc
ljmp
jp
stc
add
ljmp
enter
pop
jmp
or
jmp
or
ljmp
mov
call
or
jmp
jo
jmp
mov
add
stos
aad
jmp
movsl
rolb
mov
add
mov
add
movsl
pusha
add
movsl
mov
add
ljmp
movsl
fildl
aam
insl
add
lods
roll
jmp
movsl
mov
add
lods
in
jmp
movsl
lret
add
mov
jmp
jmp
movsl
stos
add
mov
add
add
add
inc
in
add
xchg
add
add
js
inc
in
add
add
in
adc
pop
in
add
in
add
fidivs
add
in
add
in
add
add
jmp
add
in
add
in
add
in
add
jmp
add
in
add
in
add
in
or
xchg
add
fildll
add
in
add
jmp
scas
icebp
add
scas
add
pop
scas
add
sbb
scas
or
or
add
cmp
scas
repz
scas
add
insl
scas
add
sub
scas
add
or
scas
add
dec
scas
add
cli
scas
icebp
add
scas
add
push
scas
add
adc
adc
and
add
xor
repnz
scas
add
arpl
add
cmpsb
scas
add
add
ljmp
dec
ljmp
cmc
ljmp
sbb
faddl
in
ljmp
in
call
add
ljmp
aad
call
or
ljmp
fsubr
clc
add
ljmp
scas
ljmp
cmp
call
or
stc
add
jmp
or
ljmp
movsl
in
jmp
mov
add
mov
add
scas
jecxz
jmp
mov
add
mov
add
scas
mov
jmp
mov
add
mov
add
scas
roll
jmp
mov
add
mov
add
movsl
fldl
jmp
mov
add
mov
add
in
std
jmp
mov
add
mov
add
mov
jp
jmp
mov
add
cwtl
jecxz
jmp
xchg
loope
add
add
add
loope
add
inc
add
loopne
push
in
add
inc
loope
add
sbb
push
ficoms
add
jns
pop
loope
add
add
in
adc
pop
loope
add
loope
add
fidivs
add
loope
add
loopne
add
add
jmp
add
loopne
add
loopne
add
loopne
add
jmp
add
loopne
add
add
add
fs
add
and
add
add
add
test
add
pop
scas
add
pop
scas
add
sbb
add
push
scas
add
jl
add
cmp
add
push
scas
add
insb
scas
add
sub
add
or
add
mov
add
add
add
stc
scas
icebp
cld
add
add
adc
adc
and
ljmp
jae
stc
cld
movsb
ljmp
int3
ljmp
lods
ljmp
in
ljmp
test
call
or
fdivr
in
ljmp
in
call
cld
mov
ljmp
inc
ljmp
xor
call
or
jmp
call
or
ljmp
mov
add
mov
add
movsb
mov
clc
xchg
stc
add
mov
add
mov
add
movsb
xchg
add
movsl
lock
mov
add
mov
add
movsb
xlat
add
push
repz
mov
add
mov
add
movsb
xchg
fnsave
dec
add
mov
add
mov
add
movsb
movl
jmp
mov
add
movsb
cmpsl
add
movsl
clc
add
mov
add
in
add
add
ljmp
xlat
in
add
in
add
hlt
sbb
xchg
in
add
out
add
in
add
out
add
in
add
inc
add
loopne
push
hlt
add
push
in
add
sbb
inc
out
add
add
in
add
in
add
out
add
hlt
adc
pop
in
add
in
add
out
add
in
add
in
add
in
add
in
add
add
add
sar
adc
ret
stc
add
sar
je
sar
xor
sar
lret
or
scas
sar
and
sar
stos
scas
sar
add
sar
test
sar
ljmp
stc
pop
scas
sar
sbb
sar
lcall
stc
jl
sar
cmp
sar
fisubrl
sar
insb
scas
sar
sub
sar
mov
scas
sar
mov
ljmp
lods
ljmp
pushf
ljmp
int
ljmp
ljmp
mov
ljmp
ljmp
lods
ljmp
in
ljmp
mov
ljmp
add
add
fimuls
insl
ljmp
aam
ljmp
ljmp
ljmp
in
add
in
add
aad
add
aam
add
mov
add
lds
add
mov
add
mov
std
fidivl
pop
add
xchg
sbb
add
mov
add
test
jmp
je
add
gs
add
gs
add
push
sub
add
mov
add
inc
inc
add
xor
test
fnsave
gs
adc
lds
sti
mov
add
add
loop
add
loope
add
loope
add
loope
add
loope
add
out
add
repnz
mov
repnz
int3
repnz
xchg
push
add
add
repnz
add
repnz
jg
add
pop
repnz
push
repnz
test
or
jge
add
pop
repnz
repnz
inc
repnz
cmp
addb
repnz
dec
repnz
push
repnz
icebp
add
sbb
bound
adc
add
jecxz
add
fisttpl
add
or
sahf
rorl
scas
mov
or
scas
adc
add
loope
add
fiaddl
push
scas
movl
add
fldl
add
lret
add
scas
les
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
mov
loopne
movsl
out
testb
call
ljmp
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
add
in
add
shr
add
in
add
fucomi
or
pop
out
add
out
add
out
add
out
add
or
stos
out
add
out
add
out
add
or
stos
out
add
or
lret
out
add
or
aad
or
scas
xchg
add
scas
adc
add
or
xor
add
scas
gs
or
add
add
movsl
add
scas
and
add
scas
in
or
pop
add
scas
or
add
scas
std
add
or
stos
add
scas
jmp
or
sbb
or
stos
add
scas
sub
or
pop
add
scas
ljmp
mov
lods
add
add
add
ljmp
cmpsb
ljmp
mov
je
mov
mov
add
ljmp
cmpsb
ljmp
mov
insb
add
ljmp
cmpsb
ljmp
mov
inc
add
ljmp
mov
jl
mov
xor
cmpsb
ljmp
mov
cmp
mov
add
lods
repnz
repnz
lods
repnz
repnz
stos
repnz
mov
add
lods
repnz
repnz
lods
repnz
repnz
stos
repnz
stos
repnz
repnz
lods
repnz
lods
repnz
repnz
mov
add
mov
add
lods
repnz
repnz
lods
repnz
mov
add
mov
add
outsb
ljmp
pop
ljmp
pop
ljmp
or
or
mov
or
mov
ljmp
push
or
or
or
jp
or
cmp
or
mov
ljmp
pop
jmp
or
ret
add
or
xchg
out
add
out
add
out
add
out
add
out
add
or
mov
or
add
or
scas
push
push
or
cmpsb
add
scas
push
push
or
dec
push
or
loopne
or
pusha
pop
or
addb
scas
add
or
add
add
rolb
scas
rolb
scas
inc
push
or
pusha
add
scas
pusha
push
or
loopne
or
fadds
or
dec
push
or
sbb
or
mov
or
ljmp
cmpsl
ljmp
mov
syscall
cmpsl
ljmp
mov
incl
mov
incl
ljmp
mov
lahf
add
ljmp
mov
filds
mov
filds
ljmp
mov
jg
mov
jg
cmpsl
ljmp
mov
jmp
mov
jecxz
cmpsl
ljmp
mov
sub
ljmp
stos
icebp
add
lods
icebp
add
lods
icebp
add
icebp
add
icebp
add
stos
icebp
add
lods
icebp
add
lods
icebp
add
lods
icebp
add
lods
icebp
add
icebp
add
icebp
add
lods
icebp
add
stos
icebp
add
lods
icebp
add
lods
icebp
add
lods
icebp
add
icebp
add
icebp
add
icebp
add
icebp
add
lods
icebp
add
lods
icebp
add
lods
icebp
add
lods
icebp
add
icebp
add
jecxz
add
out
or
enter
dec
out
or
sub
or
pop
out
or
push
in
or
test
or
mov
in
or
sub
or
enter
test
or
cmp
or
mov
in
or
dec
out
or
cmp
or
mov
in
or
or
or
fsubr
or
pop
in
or
js
or
sub
or
pop
in
or
fsubr
or
fsubr
or
xlat
in
add
xchg
add
scas
jecxz
pop
scas
and
pop
scas
mov
pop
scas
repz
pop
scas
adc
pop
scas
fildl
pop
scas
sbb
pop
scas
stos
add
scas
jmp
pop
scas
lret
add
scas
or
pop
scas
fwait
add
scas
fildl
pop
scas
movl
pop
scas
out
pop
scas
scas
add
scas
mov
pop
scas
jg
pop
scas
xlat
add
scas
lahf
add
scas
les
or
test
or
movsb
add
scas
and
or
in
or
ljmp
mov
repnz
ljmp
mov
into
add
ljmp
mov
lock
add
add
ljmp
mov
int3
add
ljmp
mov
icebp
add
ljmp
mov
int
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
test
lock
cmpsb
out
add
mov
or
mov
or
movsb
loope
lock
loope
jecxz
in
jecxz
in
rep
in
repz
jecxz
loop
jecxz
repnz
jecxz
repnz
out
fnsave
out
in
mov
out
fnsave
out
in
mov
in
fdivl
in
in
mov
in
fdivl
out
or
ret
or
loope
or
sar
push
sar
push
xchg
cld
or
cmp
or
cmp
or
popa
cld
or
cmp
or
push
cld
or
cmp
or
inc
cld
or
push
sti
or
pusha
sti
or
inc
sti
or
inc
sti
or
adc
or
add
or
and
or
add
or
adc
or
loopne
or
add
or
add
or
scas
int3
adc
mov
adc
test
les
ud1
add
lahf
mov
adc
ficomps
adc
mov
mov
pop
mov
mov
sbb
xchg
jmp
sbb
ficompl
sbb
ficompl
sbb
lret
cmpsl
mov
add
movsb
mov
pop
sbb
sbb
fstps
sbb
sbb
movsb
mov
sbb
xchg
ljmp
vpxor
vpxor
mov
fistps
mov
fistps
movsl
icebp
pop
mov
testb
xchg
idiv
pop
lret
pop
ret
pop
mov
neg
pop
stos
not
pop
mov
add
add
idiv
pop
lret
pop
ret
pop
mov
neg
pop
stos
not
and
cmc
add
and
cmc
cmc
and
cmc
in
and
cmc
frstor
stos
cmc
add
into
cmc
push
int3
into
cmc
push
add
cmc
push
cld
mov
push
hlt
mov
push
in
mov
push
in
cmc
push
fmull
call
add
movsl
loope
repz
or
mov
or
mull
jecxz
fstps
cli
adc
pushf
stc
adc
mov
clc
psubq
notl
ficompl
adc
std
cltd
adc
cld
mov
std
push
add
sti
push
adc
loope
adc
loope
adc
icebp
cld
adc
loope
adc
loopne
adc
loopne
adc
lock
adc
loopne
adc
fucomip
sbb
fucomip
sbb
scas
negb
sbb
negb
sbb
negb
sbb
cmc
sbb
pop
cmc
sbb
scas
cmc
sbb
scas
cmc
sbb
pop
cmc
sbb
pop
cmc
sbb
dec
cmc
sbb
dec
cmc
sbb
pop
hlt
pop
sbb
pop
sbb
hlt
pop
sbb
add
add
fstpl
sbb
sbb
movsb
mov
sbb
xchg
in
sbb
sbb
fcompl
sbb
int3
sbb
movsl
int3
sbb
mov
ret
scas
lds
add
mov
add
scas
roll
scas
enter
lret
add
scas
int
add
roll
scas
roll
add
lret
add
scas
scas
add
scas
mov
add
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
test
add
sub
std
jmp
movsl
ljmp
popf
ljmp
or
iret
std
jmp
ljmp
fucomp
je
xchg
loopne
inc
pop
loope
sar
cmp
jb
or
xor
sbb
mov
test
scas
jnp
push
mov
jno
mov
or
jl
push
xchg
in
mov
xchg
pop
fwait
dec
jg
add
mov
test
fcomps
sub
fildll
inc
hlt
enter
pop
jae
adc
imul
add
jae
mov
add
add
xor
or
mov
outsl
cmp
sti
push
mov
sbb
mov
or
psrld
cmp
mov
shrl
inc
sub
mov
xor
in
fsubr
aad
stos
scas
daa
icebp
fmuls
inc
push
xlat
jbe
and
stc
push
lods
mov
mov
mov
push
push
jns
lret
mov
call
cmp
inc
push
out
scas
in
and
pop
lds
fldt
mov
jl
aas
pushf
insb
mov
pop
mov
mov
push
clc
mov
or
lret
cltd
push
pop
or
add
add
into
cli
insb
mov
jnp
lret
push
int
lahf
push
lds
and
lret
add
fadds
pusha
scas
icebp
sub
test
inc
mov
jl
popa
mov
sbb
inc
mov
cmp
pop
xchg
shll
push
add
jg
add
stos
pusha
rcrl
adc
xchg
push
sarb
scas
cmpb
fcompl
pop
sub
jnp
mov
cmp
out
inc
mul
cmpsl
mov
fstp
aad
in
inc
bnd
mov
int3
mov
cmp
lock
inc
mov
out
lods
pop
jno
mov
or
mov
cwtl
pop
push
jns
mov
xchg
nop
ret
xchg
out
push
cmp
cwtl
cmc
setne
arpl
cltd
jbe
jo
call
cld
xorl
sti
cmpsb
inc
loope
xchg
add
xor
mov
or
divb
cmpl
add
cwtl
add
mov
sbb
data16
imul
jo
push
ja
rorb
lret
and
addr16
test
mov
dec
aam
cmp
mov
adc
in
mov
cmpsb
push
mov
mov
scas
jge
or
call
dec
add
xor
add
xchg
cmpsb
pusha
mov
addr16
popa
xchg
or
add
add
dec
jb
jne
andb
shrl
andl
or
lar
clc
fildl
popa
cli
mov
cmp
pop
mov
iret
sub
in
ret
sbb
fidivs
ret
fs
dec
bound
mov
decl
dec
cwtl
out
or
mov
clc
pop
scas
out
push
add
imull
ds
add
cmp
dec
cmpb
jnp
pop
mov
jne
mov
cmpsb
pop
mov
or
sbb
adc
data16
pop
aam
pop
loop
dec
mov
fistpl
mov
lahf
scas
xchg
push
jns
popa
dec
ret
inc
dec
cmpsb
ret
xchg
movsl
mov
std
aad
add
add
cmp
ja
add
mov
dec
shlb
pop
cmp
test
lods
lods
repz
inc
mov
int3
xchg
es
jge
nop
sbb
xor
add
enter
push
inc
enter
daa
mov
iret
adc
push
sahf
les
mov
ret
dec
jmp
add
add
pop
sub
pop
repz
das
test
insb
or
cs
mov
or
das
sub
jg
jge
push
pop
push
dec
fs
dec
popl
enter
sar
in
cli
cmp
mul
push
sub
mov
cmpsl
sbbb
loopne
dec
inc
into
ficoml
cmc
js
add
add
sub
popa
lret
cs
nop
mov
fdivrs
lcall
jae
cmp
add
lea
jne
repz
pushl
inc
aam
in
push
int
xor
sbbl
adc
sub
cmp
lahf
in
aad
xchg
xchg
insl
das
je
fs
pop
jecxz
xchg
inc
repnz
imul
lods
jo
add
add
insl
push
xor
lahf
clc
push
movsl
imul
sbb
or
ret
push
jo
test
and
sub
xor
sbb
loopne
pop
push
sbb
cltd
pop
jl
test
shrl
stos
cld
daa
repz
push
cmp
inc
ljmp
jmp
out
inc
inc
mov
insb
fisubs
and
jge
add
add
ja
pushf
int
test
enter
mov
sbb
lods
xchg
cmp
loope
jb
and
subb
and
push
dec
cmp
negb
push
mov
incb
sbb
lods
cmp
add
mov
mov
out
movsl
ja
and
mov
add
int3
fisttpll
lcall
dec
movsl
addr16
fs
jle
mov
push
test
pop
add
sub
or
xor
xchg
xchg
scas
mov
sub
icebp
addl
pop
rcl
jmp
stc
adc
add
std
movsb
icebp
push
mov
fiaddl
cmp
xor
jecxz
jnp
sub
push
cmp
in
out
jmp
rcl
ljmp
sbbl
nopl
test
jo
cmp
es
subl
pop
aad
insl
sbb
ret
je
fcoms
test
inc
ljmp
jne
nop
popf
xor
push
lea
mov
cmp
movsl
shll
mov
jl
pop
push
dec
scas
outsb
pop
stc
add
xor
sub
add
scas
mov
lock
scas
xor
mov
mov
ljmp
fnstcw
sub
stc
push
iret
xor
sahf
sub
out
imul
jge
or
repnz
inc
mov
fstl
je
pop
call
repz
mov
lods
addr16
test
jle
popa
lahf
xchg
sbb
push
pop
mov
xor
lods
call
cs
dec
mov
jmp
sti
sub
jmp
xchg
fwait
out
push
pop
push
test
loopne
xor
jmp
roll
fldl
arpl
aam
add
add
aaa
jbe
ret
outsb
xchg
mov
loopne
js
xor
pop
jb
inc
sub
in
jecxz
mov
scas
jmp
sti
gs
mov
sub
inc
stos
scas
pop
push
int3
cs
shlb
mov
bound
mov
xchg
add
lods
push
out
sbb
incb
pop
inc
int3
mov
dec
mov
add
add
les
pop
cwtl
jns
mov
pusha
ficompl
das
fwait
inc
pop
ss
test
add
call
xor
or
fidivl
inc
lods
icebp
and
push
or
iret
call
int
xchg
mov
jb
leave
shll
jmp
lret
fistl
push
lea
sldt
add
add
push
xchg
aas
ficomps
enter
in
or
loope
fcompl
jl
call
aam
notl
or
in
cmp
xchg
jmp
add
fnstsw
add
inc
add
and
pop
lods
movsl
leave
push
and
fisttpll
sbb
push
ror
rorb
dec
aas
xchg
or
jbe
push
or
xchg
sbb
mov
fimull
cmp
sub
scas
loope
es
or
mov
mov
sbb
in
movsb
adc
stos
cmpsb
push
insl
imul
outsl
loopne
mov
popf
dec
cmp
hlt
cmc
std
mov
mov
dec
jbe
in
scas
or
add
add
ja
inc
ror
jge
enter
ret
add
cld
and
mov
rcrb
mov
inc
int3
xchg
jle
nop
sbb
stc
mov
sahf
lds
inc
js
or
dec
lret
add
aaa
mov
lock
or
mov
or
mov
or
jo
adc
leave
and
lods
and
adc
pop
pop
movaps
std
push
cmpl
adc
adc
push
cmp
dec
sarb
hlt
jne
xlat
fidivrs
pop
mov
ss
push
enter
outsb
cmc
cmp
or
imul
jnp
mov
jp
lret
pushf
hlt
mov
outsb
data16
cmp
cmpsl
push
add
inc
shrb
imul
es
imul
lea
mov
adc
repnz
loope
addr16
push
inc
data16
lret
hlt
xchg
dec
notb
dec
mov
pop
dec
sbb
dec
cmc
int3
pushf
dec
and
and
data16
daa
cmpsl
inc
jle
in
add
testb
pushf
addl
inc
test
or
add
dec
inc
cmp
inc
ja
repnz
mov
xor
inc
ja
push
scas
mov
mov
cmp
jmp
push
ret
push
outsl
into
jecxz
cwtl
sbb
pop
push
bound
cmp
pop
rcll
pop
aam
sub
insl
pop
sub
ss
div
loopne
je
loop
dec
jno
cmp
ds
scas
cld
out
fnstsw
add
fnstenv
es
pushf
loope
push
fildl
pusha
inc
lods
mov
in
push
aaa
in
stos
inc
push
dec
imul
shll
inc
sbb
adc
sub
add
xchg
push
pop
testb
ret
in
fisubs
inc
or
outsl
fcmovne
mov
or
add
mov
sub
cld
je
mov
jno
dec
xchg
sbbb
not
mov
jge
dec
lahf
push
sbbl
mov
pushf
adc
sahf
or
scas
les
divl
cmpsl
dec
popa
lods
jo
sbb
jbe
lahf
stos
adcl
add
insb
mov
out
cmp
movsl
mov
test
sub
into
push
test
lea
xchg
cmpsl
adc
inc
lds
xchg
push
xchg
xchg
inc
icebp
dec
xchg
fisttpl
xchg
movsb
sub
xchg
shll
popf
sahf
fistpll
pushf
pop
popa
add
or
mov
fwait
xor
sti
cwtl
sbb
mov
out
add
add
daa
push
out
adc
test
mov
imul
xchg
or
orl
adc
xchg
push
sbb
in
fwait
lahf
test
int
jbe
or
stos
scas
cld
movsl
stos
add
call
scas
jne
insl
lods
stos
movsb
scas
lods
pop
outsl
repz
pusha
mov
cmpsb
cltd
icebp
jbe
xchg
mov
sbb
cmc
mov
fisttpll
mov
mov
mov
mov
inc
inc
mov
lcall
cmp
or
mov
add
mov
leave
push
push
mov
dec
fdivrl
sub
mov
roll
scas
outsb
sub
add
add
mov
pop
js
xor
faddp
lods
inc
imul
dec
mov
mov
dec
push
or
and
mov
popa
cmp
hlt
mov
xchg
sbb
dec
push
bound
pop
movsb
push
xchg
adcb
mov
lods
insb
mov
jnp
cmc
push
xchg
test
jb
out
xor
sti
nop
and
mov
movsb
xchg
pop
mov
xor
lods
iret
movsb
adcl
jmp
xor
jecxz
jo
mov
sub
loopne
add
jns
fcomi
add
leave
xchg
xlat
outsl
fs
clc
mov
mov
and
insl
repz
ror
sbb
mov
jg
dec
fwait
aad
cmpsl
addb
ror
adc
sub
jge
ja
pop
or
scas
out
outsb
lahf
add
ljmp
pop
lea
sti
cmp
and
mov
jnp
mov
stos
aam
ficomps
aas
sbb
mov
fiadds
xor
add
mov
shl
and
xor
or
dec
insb
or
add
xor
testl
rorl
enter
jno
call
jb
jl
inc
inc
pop
sbb
in
add
xchg
push
movsb
enter
jb
mov
addl
flds
ss
iret
sub
mov
xchg
xchg
pop
and
xor
cwtl
sbbl
sub
mov
or
ss
stc
or
add
add
dec
push
or
jne
dec
cvttps2pi
mov
and
mov
lds
push
push
inc
arpl
lods
adc
add
popf
pop
in
mul
pop
inc
push
push
dec
mov
ljmp
mov
inc
xorb
cld
call
pop
sbb
add
xor
cwtl
push
pop
mov
push
push
icebp
fdivrp
jmp
insl
out
or
inc
xchg
xor
mov
xchg
push
ds
in
out
push
test
adc
rolb
and
test
stos
pushf
call
cmc
push
xor
mov
ljmp
cmp
mov
insl
data16
sub
lret
xchg
xchg
outsl
inc
xlat
cmp
xchg
jl
dec
adc
xchg
int
out
cli
add
mov
or
adc
adc
stos
cmp
lahf
loop
fwait
rcl
arpl
cli
dec
fwait
pusha
or
jbe
sti
jmp
mov
jo
pushf
iret
mov
jecxz
fiaddl
jmp
fisttpl
scas
cmp
mov
test
stc
lods
xor
inc
pop
mov
enter
push
cmpsb
cmp
in
push
test
sub
dec
pop
je
and
int3
je
sub
cbtw
xchg
add
mov
pop
inc
ret
add
push
sahf
sbb
jmp
pop
lret
daa
or
mov
mov
xchg
pop
or
cmp
jo
push
and
push
ret
in
pop
mov
mov
aaa
test
sbb
cmpl
jb
ljmp
in
jg
or
cmp
std
movsb
mov
sarb
jge
inc
lret
les
jl
test
les
jp
pop
lea
mov
repz
into
test
adc
inc
sarb
push
stos
pushf
push
pop
and
lcall
scas
and
sub
outsl
sar
pop
shll
xor
mov
or
mov
shrl
outsb
lds
fildl
add
add
addr16
pop
cwtl
outsb
mov
jnp
or
cs
js
add
scas
pop
add
and
or
dec
push
push
xor
sub
xchg
xor
hlt
cmp
and
pushf
sbb
jmp
es
test
push
jl
ljmp
mov
inc
add
js
jg
addr16
outsl
nop
sarl
rol
pop
mov
sbb
xor
sub
stos
inc
es
xor
out
filds
push
pop
enter
and
jecxz
outsb
or
mov
sub
mov
push
and
dec
and
cmp
jge
mov
or
push
mov
push
es
mov
push
aaa
sub
sti
cmc
loope,pt
addr16
lds
int3
push
pop
lock
iret
push
sti
lods
cmp
mov
sbb
ds
mov
pop
andl
mov
test
pushf
scas
enter
test
ret
es
xchg
test
int3
iret
test
iret
ds
pop
sub
popa
cmp
mov
js
addr16
pushl
xchg
cmpsl
sar
xchg
xor
mov
ss
fildll
sbb
btc
add
sub
xor
pop
add
arpl
or
fdivs
add
lods
xchg
in
cld
in
jnp
fdivp
roll
fcmovnb
lds
jmp
cmp
mov
jl
jno
filds
add
add
js
repz
jp
gs
sbb
pop
sbb
hlt
adc
je
rdmsr
loop
jne
inc
sbb
xlat
xor
insl
adc
idiv
scas
add
jmp
inc
push
sbb
lock
mov
popf
mov
sbb
jns
or
add
movsb
add
and
adc
int
mov
mov
pop
aam
add
add
je
stc
mov
xor
test
pop
push
cmp
das
or
pop
aad
pop
insb
inc
out
or
push
mov
rorb
xor
mov
cmpsl
push
mov
adc
out
mov
mov
fdivs
test
es
in
inc
sub
or
stc
ficoms
and
add
push
std
xor
add
dec
cwtl
in
cld
inc
adc
out
stos
jl
orl
int
test
push
mov
xor
mov
lret
xor
les
mov
pop
push
xchg
movsb
cld
dec
pop
mov
sarb
sbb
scas
lods
mov
cmp
repz
push
inc
gs
loopne
mov
add
add
add
hlt
sub
cltd
roll
js
daa
lds
mov
mov
mov
xor
mov
xchg
xor
add
sub
in
fwait
pop
cmc
sub
pop
inc
nop
popf
pop
adc
sub
movsl
je
mov
mov
pop
pop
pop
jb
lods
mov
mov
shll
or
cmc
add
cmc
cmc
test
push
adc
cmp
js
in
aas
sub
test
fwait
ljmp
mov
pop
frstor
cltd
popa
rcl
es
loopne
lahf
pop
mov
rclb
outsb
push
cmp
int
aaa
and
add
inc
ja
cmpsb
pop
out
in
addr16
add
add
repnz
in
or
fwait
stos
imul
or
inc
scas
xor
loope
loope
rorb
stos
add
insb
cmp
es
add
push
popa
fistpl
inc
jecxz
and
jo
push
pop
mov
or
mov
dec
scas
jge
dec
sahf
repz
xchg
rcrl
aas
push
repnz
add
add
mov
fdivl
push
cmp
hlt
scas
or
nop
int
dec
testb
lods
sti
and
inc
and
cld
lea
rorb
add
add
scas
ljmp
shl
cld
stos
pop
imul
sbb
cmp
inc
and
mov
mov
pop
mov
push
jno
jne
cwtl
xor
fs
stos
mov
pushf
cmp
stos
int
add
outsl
jl
popa
stc
cmp
push
sar
push
insb
sbb
imul
pop
add
mov
xchg
fidivl
dec
movl
cmp
fdiv
fwait
jl
iret
lahf
pop
jmp
dec
fsubrs
aas
add
add
add
movsb
add
in
pop
push
ret
jo
addr16
push
test
in
jmp
aaa
ret
lock
adc
cmpsb
repz
mov
fdiv
cmpsl
enter
popf
jae,pt
lret
xor
cltd
cmc
dec
cld
stos
mov
sarl
mov
ss
ds
fbstp
js
add
aas
in
cmp
incl
add
add
dec
mov
outsl
pop
sub
lock
add
lds
das
xchg
mov
cli
jmp
inc
and
fcmovb
lahf
push
or
cmp
push
into
mov
pop
xor
jo
mov
xor
fs
outsb
adc
xchg
xchg
cmp
push
adc
add
jnp
clc
shlb
leave
xchg
scas
shll
pop
test
out
push
xor
test
call
test
and
loopne
and
jbe
pop
mov
mov
lret
scas
or
add
notl
into
outsb
in
or
iret
inc
or
mov
dec
cmp
dec
cmovbe
add
add
outsl
sub
lods
int3
js
mov
sbb
repz
cmp
sub
sbb
or
mov
arpl
mov
es
mov
loopne
push
je
pop
pop
dec
loop
push
or
iret
adcb
leave
imul
pop
fs
pop
jne
xchg
sahf
sti
xor
stos
mov
add
mov
fsubrs
pushf
daa
roll
test
adc
add
pop
fisttps
in
dec
add
lods
pop
jmp
and
add
xor
andl
fdivr
xor
xlat
aad
pop
stos
push
fists
das
fsts
or
rcll
test
and
insb
dec
xchg
pop
push
jns
inc
mov
jmp
jle
stos
gs
imul
out
sbb
add
sub
dec
imul
popa
sub
or
jmp
popf
out
je
cmpsb
fnstenv
jl
rclb
push
mov
add
into
cmp
xchg
jnp
inc
imul
push
jg
lcall
lcall
xor
std
loop
ss
cmc
dec
daa
xorl
int3
jae
dec
mov
in
scas
popa
mov
mov
xchg
cltd
and
or
push
jb
lret
xor
inc
mov
cmp
lcall
push
fisubrl
rcl
enter
into
les
add
add
cmp
xor
mov
cmp
fs
bound
rorl
push
dec
cmpsb
dec
cltd
arpl
sub
and
mov
call
popa
fstps
or
orb
sbb
xchg
rclb
xor
mov
xor
pop
lcall
test
pusha
jns
inc
inc
dec
push
outsb
jbe
mov
jg
shll
mov
dec
jmp
mov
or
mov
divps
sahf
int
sub
and
mov
popa
add
push
and
and
or
push
ss
xor
sbb
inc
pop
mov
sub
ja
jp
jmp
scas
ljmp
jp
jmp
add
inc
in
cld
or
out
jbe
pop
out
mov
fdivl
sub
add
add
push
repz
int
repnz
aas
cmc
cmovl
dec
mov
out
pop
sbb
std
sub
div
lods
shll
or
add
cwtl
lret
cmp
cld
les
faddl
add
add
push
aad
push
insb
js
stos
xchg
mov
into
aam
and
mov
pop
xchg
mov
scas
das
or
push
dec
sbb
cmp
test
pop
push
xchg
pop
insl
add
push
shll
xchg
stos
add
fstpt
in
imul
jecxz
out
repnz
lea
icebp
mov
leave
in
dec
dec
cmc
or
and
out
mov
lods
sub
pop
mov
mov
jno
stc
sbb
ret
pop
insb
lret
mov
pop
inc
shl
mul
xchg
pop
scas
aad
xor
rcr
sub
bnd
pop
cltd
inc
scas
xor
cmp
rcr
iret
fiaddl
push
sbb
mov
cs
sahf
pop
inc
sub
int
clc
in
xchg
pop
jmp
push
lods
mov
push
jg
mov
adc
adc
pop
xlat
bound
jecxz
xor
mov
lret
mov
mov
call
inc
cmpsl
arpl
in
jne
sub
add
add
jns
insb
push
inc
sub
adc
push
test
sub
pop
pop
sub
and
ds
push
cmp
shrl
fstl
clc
icebp
pop
mov
outsb
sbb
pop
pusha
mov
inc
xor
mov
cld
mov
mov
lcall
les
repz
mov
add
or
or
imul
push
sub
imul
movsb
in
push
or
cmp
mov
lret
shl
out
sbb
xchg
push
aam
xchg
xchg
ds
lea
push
pushf
jle
in
jae
ljmp
push
cmpsb
inc
popa
xchg
mov
dec
pop
insb
outsb
jge
fsubs
cmp
inc
adc
inc
mov
pop
mov
aaa
bound
hlt
loope
add
mov
cmp
cmp
shl
cmpsb
dec
in
repz
out
cmp
mov
shll
es
int3
xor
jb
xor
sar
adc
add
add
adc
jle
xchg
int3
adc
ds
xchg
mov
int3
loopne
test
push
lahf
fists
ficoms
add
mov
lods
rcrl
shr
sub
out
adc
loope
fiaddl
xor
sub
inc
sbb
ljmp
ret
or
lods
jmp
ss
dec
cmp
add
insb
aaa
mov
imul
xor
mov
adc
jo
push
mov
xchg
aad
or
sbb
arpl
fimuls
mov
ficompl
xchg
int3
fimull
xlat
movsl
or
aam
pop
fsub
inc
data16
inc
and
adcb
add
add
xchg
inc
outsl
push
cmp
pushf
and
mov
int
je
repz
add
and
jnp
scas
mov
repnz
dec
roll
inc
pop
mov
cmp
test
popa
cmp
out
adc
rcrl
mov
ds
pop
int3
add
fwait
lock
add
add
flds
jne
gs
cltd
mov
pop
inc
fsubrp
jmp
sbb
addr16
mov
inc
in
dec
adcb
lcall
xchg
mov
dec
stos
daa
mov
mov
lods
outsl
add
fs
mov
mov
out
cmp
aas
popf
adcl
ja
sub
xchg
jae
ret
push
lret
dec
scas
fdivrl
add
jb
mov
inc
mov
adc
rcrl
and
and
lods
pop
cwtl
inc
leave
neg
lods
ds
jl
pop
pop
xlat
fs
arpl
shrb
xor
or
mov
loop
or
test
dec
fsub
mov
jnp
pop
rcr
aas
in
or
add
xchg
mov
jecxz
add
mov
mov
int3
xor
xor
mov
or
jp
ret
mulb
mov
or
sbb
sub
sbb
add
cmp
leave
out
sbb
aas
notb
nop
add
mov
into
xlat
dec
test
add
add
lea
sub
movsl
jo
lods
and
pop
push
scas
mov
ret
out
sub
jg
enter
inc
cmc
inc
push
dec
adc
or
mov
jmp
dec
mov
xchg
ret
push
push
lcall
ljmp
in
shll
mov
dec
push
ds
icebp
out
adc
push
out
js
rcrb
lcall
rclb
fnstcw
fistpll
flds
push
mov
je
push
aad
stc
xchg
fwait
mov
call
mov
jl
fildl
leave
enter
push
ja
sub
stos
xor
mov
add
dec
cmp
adc
bound
fadds
cli
jge
lret
sahf
or
hlt
and
jb
mov
enter
cmp
adc
mov
adc
sub
mov
and
add
xchg
mov
xchg
cmp
add
fnstenv
mov
loope
into
mov
test
outsl
push
repnz
add
lahf
sub
jo
dec
dec
cmc
enter
je
xchg
das
les
sbb
sahf
scas
movsl
adc
rcrb
movsl
mov
les
jns
outsl
xchg
xchg
stos
lret
repnz
jl
mov
xor
mov
out
fldenv
and
add
add
cmp
popa
lea
movsb
mov
sbbb
or
xchg
repz
xor
dec
sub
sar
test
xor
lods
mov
call
fildl
sbb
scas
sbb
enter
icebp
int3
rcrb
xchg
icebp
stos
cmp
inc
adc
jno
in
test
outsl
mov
add
add
mov
inc
inc
lcall
loop
pop
mov
mov
jg
pop
mov
mov
mov
push
xor
and
add
xlat
int3
sub
cmp
iret
push
jae
insb
call
cld
mov
mov
mov
call
xchg
lret
inc
fs
sbb
insb
out
cmp
mov
leave
push
cmp
es
xor
mov
jl
nop
sub
daa
dec
dec
mov
or
rolb
dec
xchg
addb
ljmp
xchg
addb
outsl
sarl
outsl
iret
cmc
movsb
iret
imul
aad
lods
cs
pusha
push
dec
loopne
push
cmp
xchg
mov
rcrb
sti
rorb
xchg
xor
push
loopne
rcrl
inc
sbb
and
xchg
aas
scas
call
add
lods
call
add
lods
in
loop
fldl
fisubrs
testl
or
roll
add
out
add
add
loopne
aad
add
ljmp
ljmp
xlat
ljmp
xchg
adc
movsl
ljmp
xchg
ljmp
arpl
adc
add
push
add
ljmp
inc
ljmp
push
ljmp
push
ljmp
imul
xor
out
add
addb
scas
addb
lods
cmp
mov
or
mov
andb
sahf
add
dec
addl
scas
xchg
add
scas
xchg
add
scas
mov
adc
mov
adc
mov
adc
scas
mov
pop
scas
fwait
add
scas
mov
sbb
mov
add
add
add
inc
add
dec
jmp
iret
psubsb
adc
jno
pop
fdivl
adc
jo
adc
fs
or
mov
daa
and
pop
inc
lock
incl
mov
push
jecxz
add
loopne
add
ljmp
scas
ljmp
cs
sub
filds
mov
shrl
outsb
add
add
add
cmp
scas
loop
sub
rcrb
add
jmp
scas
lret
imul
ljmp
test
sbb
loop
loope
ljmp
lods
ljmp
sbb
add
push
sub
mov
sub
cmpsl
jmp
add
fldt
add
shrl
add
xor
add
adc
pop
fs
xchg
add
xchg
jno
lahf
sbb
cwtl
adc
mov
insl
mov
lods
incb
lods
or
enter
lds
sti
add
lods
add
inc
out
add
inc
add
insb
inc
add
inc
add
inc
add
aas
inc
add
inc
add
insb
inc
add
insb
inc
add
inc
add
inc
inc
add
out
add
out
add
out
add
mov
out
add
cmpsl
icebp
pop
or
stos
xchg
incl
into
add
push
out
add
out
add
add
add
add
cmp
pop
scas
sbb
pusha
scas
sub
add
add
jns
jge
jo
jnp
bound
add
lods
add
inc
scas
push
add
scas
add
pop
scas
sub
lods
or
popa
scas
sbb
add
das
add
fsubrl
jnp
sar
push
scas
aam
add
sar
add
scas
mov
call
scas
iret
lcall
scas
call
cmp
mov
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
movl
mov
rolb
jmp
add
test
jmp
add
jbe
xchg
add
push
jmp
add
pop
ljmp
ja
mov
shr
mov
lret
push
mov
jmp
add
iret
add
int
pusha
test
add
out
push
test
add
hlt
add
test
add
lret
test
add
push
add
stos
es
mov
add
stos
icebp
add
mov
add
stos
in
mov
mov
add
mov
add
and
inc
mov
add
ret
add
faddl
push
test
add
adc
cmp
roll
lahf
test
add
test
add
sub
inc
add
lock
add
lock
fwait
lock
cwtl
lock
add
lock
add
outsl
add
add
add
lock
in
add
lock
sub
jmp
adc
cmp
sub
ss
inc
add
in
xor
push
in
jo
or
push
sub
push
and
ljmp
gs
xor
repnz
repnz
xor
repz
xor
repz
mov
mov
pop
or
sahf
push
or
sahf
sbb
or
jle
or
jle
or
faddp
or
fidivrs
add
lods
mov
pop
add
mov
push
add
sahf
push
add
mov
jle
add
sarl
ficoms
ficoms
enter
lret
add
fsubrp
sub
jne
and
jb
and
imul
pop
jns
das
pop
jl
es
cmpl
pop
gs
cmp
pop
mov
sbb
pop
pop
or
push
pop
adc
mov
or
mov
mov
add
mov
xchg
or
mov
les
and
mov
dec
or
in
test
stos
cmpsl
enter
movl
and
int
das
cmpsl
int3
add
cmpsl
lret
add
mov
add
mov
add
cmpsl
rolb
and
add
aad
daa
cmpsl
aam
push
cmpsl
roll
sbb
mov
add
cmpsl
mov
mov
mov
add
cmpsb
mov
add
cmpsb
rolb
cmpsb
sub
mov
add
mov
add
cmpsb
daa
add
cmpsb
cs
cmp
inc
push
sub
inc
push
sub
inc
push
das
repnz
push
fdivp
dec
push
inc
push
in
repnz
push
mov
dec
push
add
dec
push
icebp
repnz
push
lock
push
xchg
repnz
push
cmpsb
repnz
push
movsl
repnz
push
out
dec
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
push
add
in
pop
add
in
pop
add
in
push
add
in
pop
add
in
pop
add
in
xchg
add
in
pop
add
in
pop
add
in
adc
scas
and
stos
pop
add
mov
add
stos
mov
add
mov
add
mov
add
stos
dec
add
mov
add
stos
pop
add
mov
add
stos
incl
or
testb
stos
adc
mov
add
stos
roll
dec
mov
add
stos
aad
xor
movl
xor
mov
pop
xor
dec
pop
cmp
cmp
cmp
inc
pop
cmp
popa
pop
cmp
and
add
popa
out
add
out
out
add
in
out
add
shl
add
ljmp
add
mul
push
add
out
or
icebp
out
add
mov
or
mov
out
add
mov
out
add
out
add
out
add
add
add
out
add
fiadds
xchg
lods
loopne
cltd
lods
loope
cwtl
lods
roll
jp
leave
add
jl
lret
add
pop
lods
faddl
push
lods
roll
inc
lods
rolb
xor
roll
lods
aam
dec
lods
push
add
jno
dec
lods
je
inc
lods
push
add
outsb
add
jo
nop
lods
push
add
lods
add
aad
add
lods
add
scas
add
add
lods
add
movl
push
in
int
in
into
add
in
enter
mov
fsubr
lret
add
xchg
add
in
popl
in
nop
add
in
xchg
add
in
xchg
add
add
add
in
lcall
in
cwtl
add
in
sahf
add
in
fwait
add
in
pushf
add
in
mov
add
movsl
add
aaa
add
lods
dec
add
lods
mov
mov
jae
mov
je
mov
insl
add
insl
add
lods
imul
lods
push
mov
lods
sbb
mov
lods
mov
add
lods
ret
add
lods
ret
lods
loope
ret
lods
loopne
ret
add
lods
add
lods
jge
lods
je
lods
jnp
enter
leave
lods
ljmp
movsl
movl
sti
mov
test
scas
mov
push
lret
or
push
sti
or
lret
inc
leave
ds
inc
leave
push
sti
cmp
dec
sti
xor
inc
sti
push
leave
cmp
push
leave
cmpsb
sti
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
lret
dec
xor
mov
adc
mov
add
add
push
add
cli
rcrl
mov
ljmp
pop
mov
pop
add
ret
movsb
mov
push
and
mov
pop
daa
mov
lock
dec
jnp
and
inc
imul
inc
arpl
es
pop
in
es
push
lock
dec
fsubs
aas
inc
shlb
cmp
sbb
add
add
inc
and
sub
and
add
mov
and
stc
jle
and
movq
and
xor
addb
sub
add
sub
or
pop
orl
and
adcl
and
andl
and
adcl
adc
add
add
and
adcl
sbbl
mov
adcl
and
sub
sub
sar
pop
iret
vcvttps2dq
into
cli
pop
iret
ret
cli
pop
iret
cmp
and
aaa
clc
adc
pop
clc
mov
xor
lret
clc
scas
xchg
popa
clc
pop
mov
sbb
inc
clc
sbb
aaa
clc
sbb
iret
inc
clc
xor
pop
clc
xor
dec
clc
sbb
pop
clc
stos
lret
addr16
mov
lret
mov
imull
xchg
and
stos
mov
clc
mov
das
clc
mov
stos
rolb
iret
lret
push
rolb
cli
pop
rclb
cli
push
rclb
cli
movsl
sar
stc
mov
rcl
stc
mov
int3
stc
push
rcr
stc
rcl
stc
mov
lret
pushf
sarl
stc
dec
rcrb
out
rclb
stc
stos
rolb
stc
mov
lret
xchg
lret
xchg
lret
movsl
ljmp
xchg
int3
xchg
clc
mov
sub
sbb
add
inc
dec
and
ss
ss
daa
sbb
and
loope
sbb
push
dec
and
push
movsb
daa
sbb
icebp
and
test
shll
and
test
loope
leave
sahf
lcall
sahf
pushf
pop
mov
sahf
pop
mov
mov
pop
xchg
sahf
xchg
pop
sbbb
pop
push
sahf
xchg
pop
dec
mov
xchg
pop
aas
mov
fcmovu
add
xchg
loope
xchg
loop
jne
filds
ret
add
rcr
add
scas
fucompp
add
std
out
add
xor
fildl
push
xor
add
push
xor
add
xor
add
das
fisttpl
push
pop
fimull
push
std
fiaddl
push
in
fimull
push
fcmovnu
or
push
stc
fimull
push
call
ficoml
push
push
ficoml
push
inc
fimull
push
scas
push
adc
test
adc
notb
adc
mov
adc
test
adc
mov
or
sbb
and
adc
mov
adc
test
adc
mov
inc
or
and
inc
or
es
or
add
cmp
sub
push
or
sub
mov
or
xor
in
setl
aaa
setge
ss
sbb
vmread
sbb
and
inc
movntq
out
inc
pmulhuw
xor
fsub
sub
shl
or
outsb
in
movq
or
insb
in
sldt
add
insl
in
push
jb
lds
imul
push
jo
ret
push
imul
rorl
ja
rorb
in
push
gs
push
cli
in
push
repz
push
in
push
jmp
js
fsub
ja
fucom
add
push
or
mov
sbb
push
mov
or
test
or
mov
mov
xor
lahf
mov
add
mov
mov
xor
mov
push
lahf
mov
push
lahf
mov
inc
lahf
mov
cmp
mov
mov
xchg
sub
js
sub
jnp
sub
jp
sub
jne
xor
xor
sub
pop
test
xor
and
add
in
xor
in
xor
dec
xor
in
xor
add
add
dec
xor
dec
xor
in
xor
in
xor
in
xor
in
xor
in
xor
in
xor
in
xor
in
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
adc
stos
adc
cmpsl
adc
add
add
cmp
lods
lahf
dec
shrd
pop
imul
cmpxchg
mov
lfs
pop
movzbl
sub
push
mov
mov
jmp
push
mov
lahf
call
push
sarb
or
mov
add
add
xor
jg
or
jg
or
jg
or
fucomip
popf
push
sub
push
and
push
jle
orb
fdivl
inc
lret
inc
icebp
adc
jmp
icebp
cld
jmp
icebp
fldpi
mov
lret
mov
lret
mov
lret
xchg
lret
dec
and
lret
inc
and
lret
dec
and
lret
inc
and
add
add
push
and
lret
push
and
lret
aas
and
lret
ds
lret
repnz
scas
ljmp
scas
ljmp
scas
ljmp
push
ljmp
add
add
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
loop
add
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
mov
add
ljmp
je
add
stos
out
add
add
test
add
mov
out
add
adc
add
add
adc
add
add
or
add
adc
add
add
aad
add
data16
add
in
add
cmc
jmp
add
adc
add
add
jmp
add
jmp
add
add
icebp
jmp
add
add
lock
add
adc
add
scas
cmc
push
add
or
scas
loop
add
jecxz
add
jge
add
add
scas
or
scas
lahf
add
scas
sub
scas
jmp
add
pushf
add
scas
gs
add
push
pop
add
addr16
add
sbb
scas
pusha
push
add
popa
add
scas
mov
add
mov
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
lods
ljmp
lods
ljmp
imul
add
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
mov
add
mov
add
ja
add
in
add
es
add
adc
add
adc
add
add
outsb
adc
add
out
add
add
add
in
add
add
mov
adc
add
adc
add
call
add
push
call
add
xlat
cmc
inc
add
call
add
xchg
cmc
inc
add
call
add
scas
cmp
scas
outsl
add
scas
mov
add
xchg
add
scas
cltd
add
scas
loope
inc
scas
jp
add
test
scas
jbe
add
fwait
add
scas
push
test
xor
or
adc
pop
scas
inc
test
sbb
add
sub
scas
mov
inc
scas
lret
add
inc
scas
adc
adc
cmc
addl
add
inc
scas
popf
add
scas
ljmp
outsb
ljmp
stos
ljmp
stos
ljmp
mov
out
test
mov
xchg
flds
ljmp
test
lcall
ljmp
lods
ljmp
popf
ljmp
movsb
ljmp
test
dec
xchg
ljmp
out
ljmp
out
ljmp
outsb
ljmp
xor
add
lods
in
add
stos
out
add
lods
repz
stos
sbb
add
stos
add
lods
icebp
add
xor
add
xor
add
stos
cld
add
stos
or
test
lods
out
add
stos
add
stos
or
push
xor
add
xor
add
xchg
in
or
add
sbb
imull
add
inc
add
jno
add
inc
add
ljmp
out
adc
add
out
adc
sub
add
in
adc
aas
imul
out
add
daa
imul
out
or
pop
imul
in
or
add
add
in
add
push
call
push
add
inc
add
popf
jge
scas
rolb
inc
scas
insl
push
pop
scas
xchg
jge
scas
sbb
adc
scas
je
or
add
scas
inc
jge
scas
mov
adc
xor
jl
scas
pop
push
adc
popl
or
cmp
ldmxcsr
push
pop
scas
leave
jnp
scas
outsl
add
test
add
scas
lds
scas
nop
add
scas
sarl
ljmp
out
ljmp
out
ljmp
outsb
ljmp
ljmp
mov
pop
jl
ljmp
outsb
ljmp
outsb
ljmp
outsb
ljmp
outsb
ljmp
outsb
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
shrb
add
stos
add
lods
in
add
stos
add
mov
add
stos
add
std
add
xchg
stos
add
test
add
mov
add
gs
add
add
rcll
add
mov
add
inc
stos
add
lods
cli
add
es
add
ss
add
mov
add
lods
adc
add
es
add
imul
add
jb
add
jmp
inc
add
adc
add
add
jb
add
jmp
inc
add
jno
add
add
add
jb
add
jno
add
add
call
add
adc
iret
call
inc
add
out
aas
insl
inc
add
sbb
inc
add
xor
mov
iret
add
inc
scas
and
or
sub
or
sub
pop
scas
icebp
addl
add
dec
xchg
xchg
add
push
xchg
aad
add
sbb
add
add
add
jmp
add
inc
scas
jo
add
add
push
scas
orl
inc
scas
xlat
add
scas
leave
mov
addl
scas
rorl
stos
ljmp
test
push
out
ljmp
out
ljmp
out
ljmp
out
ljmp
mov
ljmp
outsb
ljmp
outsb
ljmp
outsb
ljmp
outsb
ljmp
outsb
ljmp
outsb
ljmp
outsb
ljmp
out
ljmp
out
ljmp
ss
add
stos
out
add
stos
add
lods
cmc
add
add
add
stos
add
xor
add
stos
std
add
stos
lock
ss
add
sti
add
stos
lock
xor
add
xor
add
cs
add
stos
testl
lods
testb
das
stos
add
cs
add
cs
add
mov
imul
in
sbb
lahf
imul
in
and
arpl
add
push
add
imul
out
add
imul
out
add
imul
in
add
fldt
add
imul
in
add
subl
fucomp
pop
add
inc
add
in
dec
add
imul
in
pop
add
imul
in
sub
xlat
push
add
inc
add
and
push
adc
lea
push
scas
fldl
sbb
scas
sub
and
mov
xchg
testl
add
scas
mov
or
out
add
inc
scas
aam
sub
scas
inc
add
scas
xor
add
inc
scas
push
push
or
fiadds
or
ljmp
outsb
ljmp
loope
cmpsl
add
ljmp
shr
add
ljmp
mov
ljmp
xchg
ljmp
mov
out
lret
mov
lret
add
lret
pop
add
ljmp
mov
ljmp
mov
sbb
mov
ljmp
xchg
ljmp
negl
add
in
add
lods
repz
lods
jmp
add
lods
ljmp
lods
ljmp
jg
add
ljmp
mov
add
inc
lods
add
ljmp
mov
add
mov
add
mov
add
mov
add
ljmp
mov
add
stos
add
out
add
inc
add
add
sbb
add
add
add
inc
add
ljmp
imul
add
cmc
inc
inc
add
jmp
inc
add
jmp
inc
add
jmp
inc
add
jmp
inc
add
jmp
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
add
ss
inc
add
add
dec
pop
inc
add
mov
inc
scas
movb
scas
adc
inc
scas
fstpt
scas
push
add
scas
push
add
scas
sbb
scas
push
add
scas
adc
inc
scas
push
push
add
push
push
add
push
push
add
push
add
scas
dec
add
lods
dec
add
lods
dec
std
add
dec
add
lods
dec
add
inc
add
lods
dec
add
lods
dec
add
mov
std
add
jmp
add
in
add
out
add
out
add
out
add
jmp
jmp
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
pop
pop
and
add
jmp
xchg
or
fstps
adc
shll
ljmp
into
les
shrb
int3
insb
pop
fstp
jo
jns
je
jne
add
lods
mov
pusha
inc
imul
push
sbb
jo
jns
je
jne
add
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
xlat
in
add
xlat
in
add
in
add
in
add
xlat
in
add
xlat
in
add
in
add
in
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
push
in
add
push
in
add
inc
in
add
sub
cld
mov
scas
cld
dec
scas
cld
decl
rolb
test
call
mov
incl
add
add
sbb
add
inc
stc
pop
inc
push
inc
add
lods
dec
cld
add
inc
call
out
cli
or
pop
inc
mov
dec
inc
ljmp
inc
inc
lcall
xor
mov
mov
inc
pushl
inc
ljmp
inc
jmp
inc
lcall
inc
call
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
mov
add
stos
jmp
add
stos
jmp
add
stos
jmp
add
stos
jmp
add
stos
jmp
add
stos
jmp
add
lods
jmp
call
lods
jmp
call
lods
jmp
call
lods
jmp
call
lods
jmp
call
lods
jmp
add
add
push
ljmp
inc
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
xlat
jmp
add
jmp
add
xlat
jmp
add
jmp
add
xchg
jmp
add
xchg
add
xchg
add
xchg
jmp
add
xchg
add
xchg
add
push
jmp
add
scas
inc
add
scas
inc
add
scas
insb
ds
test
call
fisubrl
mov
xchg
adc
dec
ret
sub
out
add
pop
aad
aad
minps
sbb
pop
adc
out
push
and
inc
jae
xchg
dec
fimuls
sub
mov
push
dec
negl
and
jns
fs
lds
ds
xchg
into
add
mov
addr16
jmp
sti
xlat
clc
roll
add
add
bound
das
jae
jge
jmp
scas
test
add
or
sbb
iret
and
cmp
sub
push
jo
das
push
inc
lods
push
and
vpsubsw
sbb
inc
inc
push
pop
dec
addl
aaa
push
bound
hlt
sub
int
or
push
ficompl
cmpsb
dec
jne
rcrb
mov
aad
mov
outsl
loope
stos
sbb
pop
cmp
or
fisubrs
mov
lret
stc
add
dec
sbb
ret
push
pusha
xor
stos
adc
or
fstps
nop
add
xchg
lcall
inc
jmp
lods
ljmp
stos
ljmp
mov
ljmp
test
add
lods
ljmp
lods
ljmp
lods
ljmp
scas
ljmp
mov
add
ljmp
sub
add
loopnew
add
out
add
push
in
incl
push
jmp
pop
or
or
addr16
movlps
adc
pop
cmc
pop
sbb
lock
mov
and
mov
daa
daa
scas
inc
sub
or
das
pop
pop
xor
add
aaa
call
fistl
aas
pop
lea
xor
imul
outsl
outsl
inc
pushf
jae
inc
cwtl
ja
aas
xchg
jnp
cmp
pop
pop
testl
test
adc
adc
jno
pop
mov
stc
sbb
jge
ret
jg
sub
lret
xchg
xor
add
sbb
mov
fwait
sahf
inc
arpl
dec
cmpsb
dec
imul
iret
imul
xlat
jae
cmp
ja
and
add
in
push
inc
jmp
out
dec
into
icebp
repnz
rcr
notb
fsqrt
push
fiaddl
jmp
and
mov
sub
nop
inc
mov
xor
add
add
mov
fs
scas
cmp
jmp
lods
jmp
add
jecxz
or
sti
adc
repz
sbb
out
or
iret
or
loope
pop
add
xlat
add
call
mov
pop
repz
cmpsl
adc
clc
mov
lret
xchg
push
ret
jle
push
mov
jbe
cmp
add
add
add
pop
lea
test
inc
and
dec
sbb
arpl
push
adc
int
imul
push
mov
pusha
lea
jl
push
push
js
push
dec
je
dec
inc
jo
mov
mov
jge
subb
jle
mov
push
mov
add
mov
and
jp
leave
sbb
xchg
mov
rcrl
scas
xlat
or
jecxz
out
jecxz
outsl
add
jmp
push
in
out
aaa
sbb
repz
repz
adc
sti
adc
cld
incl
std
incl
add
push
ljmp
inc
ljmp
pop
ljmp
pop
ljmp
loope
add
icebp
jmp
add
pop
ljmp
xlat
jmp
add
jmp
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
xor
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
pop
cmp
mov
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
lods
mov
ljmp
popf
cmp
mov
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
ljmp
leave
dec
adc
rorl
int3
ljmp
ljmp
scas
ljmp
mov
orl
scas
ljmp
scas
ljmp
scas
ljmp
scas
push
ljmp
ljmp
scas
ljmp
adc
scas
ljmp
scas
push
add
ljmp
lods
ljmp
lods
ljmp
stos
jmp
add
lods
ljmp
lods
ljmp
lods
ljmp
sub
push
in
out
sbb
aad
ljmp
mov
pop
add
psubq
clc
pand
clc
subl
lock
add
psubq
add
add
clc
movlps
stc
jo
out
add
out
add
out
add
out
add
out
add
out
add
xchg
add
xchg
add
xchg
out
add
xchg
out
add
xchg
add
xchg
add
push
out
add
push
out
add
inc
out
add
inc
out
add
push
out
add
push
out
add
inc
out
add
inc
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
pop
cmp
pushf
dec
adc
dec
pusha
mov
movsl
clc
out
cli
pop
aam
shlb
pop
push
addr16
and
lcall
pop
inc
rcrl
add
xchg
or
inc
push
frstor
mov
dec
sbb
lret
mov
aad
aam
daa
jle
add
mov
push
in
aam
mov
ljmp
out
or
fisubs
ret
ja
xchg
mov
outsl
in
dec
mov
cwtl
mov
pop
dec
mov
clc
cmp
add
add
lea
int3
aas
scas
mov
popf
aad
pushf
or
rclb
sarl
jae
in
jp,pt
dec
iret
fldl
icebp
test
or
cli
jp
cld
outsl
insl
scas
roll
sahf
mov
mov
iret
mov
inc
lock
or
inc
jecxz
add
adc
adc
add
xor
add
xchg
sbb
pop
in
ljmp
int
aam
and
ficoml
sbb
sbb
pop
mov
xchg
jae
ror
lahf
inc
dec
out
or
jecxz
aam
movsb
mov
push
faddl
and
mov
dec
or
cmp
add
jecxz
mov
jecxz
cltd
loop
jl
xor
add
icebp
mov
das
sahf
pop
mov
xchg
mov
add
sar
sbb
cmp
fnstenv
stos
cmp
stc
xor
jp
dec
xor
stc
pop
iret
loopne
scas
call
sub
sub
dec
xor
aas
jns
fstpt
mov
sti
aas
cltd
xor
inc
test
rolb
add
add
mov
jo
pop
out
call
xchg
not
jbe
cmc
sub
jg
cmp
xchg
cmc
dec
mov
aaa
cmc
imul
fwait
test
xchg
int3
xor
mov
pop
sub
stc
fildl
sti
loop
hlt
or
pop
hlt
sbb
mov
push
jg
mov
jmp
add
add
lret
dec
lods
add
test
mov
fwait
xlat
repz
sub
negb
mov
xchg
repz
or
ss
jle
shr
add
ds
frndint
dec
clc
add
push
clc
loope
inc
clc
sub
cmc
hlt
ret
push
lock
outsl
pushf
sahf
aam
cmp
add
pop
fdivrp
std
mov
jmp
add
sub
add
cmp
test
or
roll
call
mov
add
push
or
aad
sub
lods
inc
hlt
ds
fdivrl
outsl
js
fidivs
dec
sbb
psrad
xchg
jbe
xchg
icebp
loope
outsl
test
ds
inc
ds
ds
faddp
ds
pop
or
or
mov
dec
push
push
mov
cwtl
data16
sub
jns
ret
jle
cmp
subl
cmp
mov
jle
lahf
mov
add
sub
push
shrl
mov
and
out
mov
inc
cmp
xor
add
add
cmp
mov
mov
rcll
dec
mov
or
or
push
bound
jbe
xor
cmp
push
sarb
xchg
cmp
dec
lret
cmp
xchg
mov
ret
mov
and
out
mov
mov
mov
cmp
cmp
cmp
cmp
stos
aas
insl
in
out
lds
or
mov
jge
mov
jbe
jge
jo
in
push
call
pop
in
fstenv
mov
mov
lahf
jmp
fidivrl
loopne
rcr
pop
lds
inc
shll
pop
cmc
jno
cwtl
stc
in
hlt
sub
popa
ljmp
incl
add
mov
mov
rclb
scas
adcl
jmp
add
ret
jmp
add
cmp
lcall
ja
and
mov
out
jl
adc
xchg
inc
aam
pop
roll
mov
jae
ljmp
dec
cli
xchg
fs
mov
add
or
push
roll
add
add
std
dec
lock
cld
test
negl
mov
adc
jge
pushf
bound
pop
inc
mov
and
mov
repz
mov
out
ss
push
cmp
inc
mov
adc
push
push
jge
xchg
push
inc
jg
mov
adc
cmp
adc
ds
pop
pusha
aas
sub
test
add
out
pop
ljmp
push
inc
iret
pop
inc
or
sahf
mov
xor
out
nop
mov
stos
xor
add
push
mov
sbb
ficoml
ljmp
push
outsl
mov
jmp
sbb
jmp
xor
add
add
inc
push
dec
jmp
cld
push
add
in
push
mov
jmp
mov
or
inc
push
leave
call
jg
leave
call
mov
call
aaa
push
scas
sbb
add
push
inc
add
push
inc
add
push
lret
scas
mov
jno
aad
inc
add
jmp
cli
movb
cmp
out
inc
add
aam
mov
xchg
cmpsl
loop
xchg
inc
add
push
add
scas
xor
add
dec
add
scas
jecxz
jmp
jecxz
add
gs
addl
insb
scas
ljmp
jl
int3
add
jmp
add
jmp
add
int
icebp
mov
enter
cmp
push
add
ljmp
xchg
ljmp
xchg
ljmp
sarb
pop
cwtl
xchg
ljmp
jb
cld
lcall
inc
xchg
int
popf
stc
cmp
sahf
jl
fcomps
cmpsw
les
dec
aam
outsl
into
lret
movsb
push
ljmp
lods
into
add
lods
or
lea
ljmp
sub
and
pusha
mov
arpl
dec
mov
pop
push
fcompl
or
or
inc
inc
mov
std
dec
mov
add
bswap
imul
daa
repnz
add
add
repnz
fsubrl
or
daa
cli
pxor
jmp
lods
movl
add
mov
or
lret
add
cli
out
add
call
add
lock
push
sbb
xor
add
push
sbb
push
adc
std
call
push
sti
jp
push
fistpll
fs
mov
nop
mov
test
popa
xchg
mov
andl
xchg
js
insl
jp
dec
add
mov
rcrl
jo
js
dec
mov
out
add
mov
rorb
fs
outsl
scas
sub
sahf
jns
push
add
scas
test
jae
jle
dec
mov
jno
inc
add
scas
nop
popf
push
push
push
cmpsb
jne
jnp
pusha
or
outsb
fnstsw
add
pop
ret
or
inc
pop
sbb
sub
inc
add
scas
or
push
jle
lock
scas
add
sub
loop
and
fs
or
ljmp
pop
ret
mov
xchg
pop
mov
mov
xchg
or
xchg
test
int3
adcl
std
popf
jbe
push
leave
mov
scas
ljmp
scas
ljmp
scas
ljmp
fsubrp
cs
ljmp
je
rolb
jnp
cs
ljmp
pusha
ljmp
mov
cmc
add
mov
add
push
stos
add
push
lods
add
push
lods
add
lods
ljmp
cltd
stos
add
shrl
or
mov
stos
add
stos
add
fwait
stos
add
add
test
add
stos
add
test
add
mov
add
test
add
mov
add
stos
int3
add
sahf
out
jne
lret
out
push
add
out
add
pop
in
add
ret
add
jmp
add
jmp
add
out
jno
stos
out
jo
jmp
add
outsb
add
add
int3
in
add
in
add
in
add
in
add
loope
add
loope
add
add
inc
jmp
add
add
push
jmp
add
adc
inc
add
cmp
testb
testl
bound
iret
lahf
ret
out
jg
pop
sbb
mov
fcmovnb
repz
mov
pusha
inc
shll
lahf
iret
lahf
ret
mov
imul
pop
jae
lahf
iret
mov
jge
pop
cmp
faddl
shll
sbb
or
pop
iret
sarb
std
pop
push
cmp
jg
rcrb
ljmp
scas
ljmp
outsb
ljmp
outsl
ljmp
jmp
add
add
lret
fnstenv
enter
aam
dec
ljmp
inc
ljmp
imulb
lea
scas
ljmp
jmp
mov
out
jle
fadd
daa
mov
fucomp
sub
out
inc
xchg
mov
xor
add
subb
jge
stos
add
push
mov
dec
call
outsl
adc
mov
jp
dec
gs
adc
add
add
dec
mov
or
push
ljmp
gs
lods
xchg
add
lods
ljmp
lods
ljmp
lods
mov
add
movsb
add
lds
inc
mov
add
lods
ljmp
ret
add
inc
add
andl
xorb
push
std
dec
andl
test
mov
jp
pop
call
inc
jb
lea
and
std
decl
pop
inc
jb
mov
and
jb
pop
insb
arpl
pop
jo
dec
pop
push
jne
pop
jp
sub
jno
or
data16
out
add
xorb
pop
popaw
repz
popa
scas
cltd
decl
test
arpl
movsl
mov
xor
cltd
inc
xchg
pusha
mov
mov
scas
sub
fs
loop
je
inc
add
scas
inc
add
scas
rolb
push
scas
je
inc
scas
outsl
add
jge
dec
scas
sub
arpl
add
add
jo
outsl
scas
and
je
pop
add
pop
add
add
push
add
and
dec
scas
dec
add
add
mov
jb
add
ljmp
fsubr
push
add
ljmp
fsubrp
cmp
ljmp
mov
ss
ljmp
shr
pop
add
ljmp
jl
or
ljmp
ja
aad
dec
ljmp
dec
ljmp
scas
ljmp
jecxz
xlat
inc
jle
incb
mov
loopne
mov
enter
lods
repz
or
imul
ss
jne
and
pop
inc
adc
sub
mov
add
lods
ljmp
adc
jne
inc
jmp
enter
int3
insb
cld
adc
std
cmp
icebp
add
icebp
add
and
add
lods
ljmp
stos
dec
mov
movsl
add
pop
mov
add
push
xor
movsb
cwtl
popf
inc
test
lods
dec
add
sub
sbb
add
adc
inc
inc
pushf
and
inc
in
add
xchg
pop
inc
inc
jnp
push
dec
fwait
insl
std
call
jp
mov
pop
std
call
sub
aam
std
inc
js
push
xchg
and
add
js
push
mov
add
add
add
and
inc
dec
add
add
add
add
push
and
pop
xchg
add
pop
jne
inc
scas
jle
add
js
push
scas
test
dec
clc
jle
push
scas
push
mov
scas
stc
ret
inc
add
scas
std
ret
cmc
ret
movsb
test
shlb
jmp
icebp
xchg
outsb
xchg
or
bound
int
outsb
nop
inc
add
scas
in
insl
jp
cmpsl
jae
in
insl
dec
xor
add
pusha
inc
adc
fs
mov
push
scas
jbe
data16
popf
fs
and
mov
adc
xchg
mov
add
adc
out
ljmp
out
ljmp
out
ljmp
out
ljmp
outsb
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsb
ljmp
scas
ljmp
scas
ljmp
outsl
ljmp
lods
ljmp
shrb
add
ret
stos
add
mov
stos
add
stos
add
mov
stos
add
mov
add
ja
add
stos
add
int
add
xchg
add
mov
add
stos
ret
add
lods
movl
pop
mov
add
lods
lret
add
lods
mov
add
lods
ret
add
call
push
add
outsl
add
imul
call
insl
add
call
arpl
sbb
pop
add
xor
and
jns
jb
xor
mov
jns
mov
es
out
add
call
jne
jne
pop
call
inc
add
add
int3
inc
add
inc
add
pusha
inc
add
push
inc
add
add
add
add
add
adc
inc
scas
sahf
sub
inc
or
scas
xchg
or
scas
inc
add
jo
gs
jo
push
scas
pop
add
mov
outsb
scas
push
add
push
jbe
lcall
scas
sahf
add
inc
scas
add
add
repnz
js
int3
sarl
push
add
ja
fldl
add
add
cmpb
jge
shl
sub
icebp
jmp
aaa
xor
and
jns
adc
inc
jmp
cmp
xchg
sbb
adc
and
add
pop
fs
data16
jae
add
bound
xor
jo
cmp
arpl
scas
ljmp
loop
cli
jmp
fwait
dec
jmp
int
add
dec
dec
dec
dec
pop
insb
jns
push
jo
inc
push
push
imul
scas
pop
das
dec
lods
push
sub
add
out
mov
scas
in
dec
rclb
push
dec
xchg
gs
and
inc
sarb
jbe
dec
stos
sbb
pop
mov
mov
add
add
cmpsl
ss
imul
pushf
into
xchg
or
jmp
jmp
in
add
jmp
sub
in
cmp
in
push
jmp
ljmp
and
inc
sub
inc
and
adc
cmp
mov
inc
cmp
in
add
sub
mov
aas
mov
mov
xchg
add
cmpsb
cmp
xor
cmp
fimuls
out
mov
push
daa
adc
dec
push
or
sbb
es
mov
sub
cmpsl
add
fwait
mov
dec
mov
add
mov
sub
inc
lret
scas
subl
loopne
outsb
daa
dec
sahf
daa
int
lahf
or
add
movsl
push
and
aaa
xlat
repz
int3
in
pop
sti
mov
add
inc
out
test
inc
jmp
flds
stos
dec
lds
inc
out
sbb
arpl
push
testl
xchg
add
sbb
and
mov
jbe
push
add
scas
lcall
sub
dec
mov
dec
ljmp
scas
ljmp
cwtl
rol
out
popf
loopne
mov
or
leave
int3
sbb
ljmp
fcmove
les
fmuls
scas
ret
mov
lock
ljmp
mov
cmp
add
jg
les
push
incb
add
add
loope
in
out
sbb
fucomip
cltd
ss
pop
jle
and
add
jg
lret
lahf
lret
pop
stos
push
fs
mov
sbb
pop
adc
jge
daa
out
jo
hlt
pushf
mov
xchg
aas
rclb
push
xor
and
mov
lds
push
aas
repnz
in
dec
pushf
push
mov
xchg
dec
stos
cmp
pop
mov
mov
add
in
xor
sub
inc
ret
lods
in
loope
pushf
or
aam
sub
call
dec
inc
rcrl
scas
sub
xlat
or
mov
inc
jnp
dec
popa
inc
lods
cmpl
std
jmp
cmpsb
dec
jb
mov
scas
scas
xor
mov
call
mov
mov
shlb
add
leave
fildl
jo
jg
je
jp
jge
pusha
loopne
jl
fildl
gs
jns
pop
xorl
jg
cs
push
scas
cmpsl
lea
jecxz
jl
mov
jl
fldl2e
call
cmpl
stc
mov
je
jecxz
popa
mov
sub
pop
mov
dec
sub
out
push
add
scas
push
cli
jle
or
push
push
call
lods
pop
mov
popf
addr16
dec
cmp
cmpl
ret
jge
sub
out
fistpll
xor
xor
jecxz
fsubrl
pop
in
test
cli
repnz
ret
mov
add
scas
ljmp
push
and
inc
fsubr
xor
pop
test
mov
adcb
add
xchg
fldl
scas
fdivs
scas
ljmp
jmp
fadd
divb
in
or
out
add
in
in
stos
mov
sti
cmpsb
repnz
stos
stos
repz
add
ret
xchg
add
add
add
ljmp
and
mov
adc
pop
cmp
fwait
arpl
and
lock
ljmp
inc
xor
hlt
pop
xor
jmp
cmp
rcll
mov
sbb
mov
push
or
add
push
outsb
cmp
xor
xchg
jmp
int
call
sub
add
ret
daa
ret
ljmp
dec
repnz
mov
loope
scas
push
ljmp
and
push
inc
in
add
rol
mov
test
mov
mov
cmpsb
push
lea
add
rcl
movsl
lret
ret
fcmovnb
dec
fldlg2
movsl
rcr
lock
aam
insb
pop
dec
pop
lret
dec
lcall
push
cmpsb
dec
pop
dec
xlat
in
add
xchg
mov
mov
push
shlb
sub
mov
add
mov
mov
sub
mov
scas
std
adc
pop
fmull
cmc
inc
add
push
adc
add
xchg
inc
outsl
lret
jmp
fwait
mov
mov
outsl
mov
sbb
mov
pop
int3
mov
je
lret
fnstenv
push
mov
adc
pop
mov
scas
not
and
sbb
sub
icebp
in
aad
fisubs
adc
add
mov
cmp
pop
fs
pop
jmp
scas
ljmp
call
ljmp
mov
aad
movsl
add
add
es
sub
xor
jbe
cmp
dec
je,pt
cmp
aaa
ljmp
inc
inc
jbe
cmp
pusha
outsl
and
jle
add
outsb
cmpsl
fs
lcall
popa
jge
dec
dec
mov
scas
ljmp
leave
cmp
shrl
add
add
push
les
xchg
ljmp
push
into
sbb
jmp
lea
rcl
xchg
xor
lret
add
and
xor
lods
out
fcomps
push
or
lods
ljmp
sub
ljmp
pusha
jb
insb
jge,pn
aas
mov
jb
es
jle
lods
ljmp
mov
ljmp
or
lahf
mov
xchg
jmp
jne
cmp
bound
jmp
and
cmp
pop
sbb
adc
add
test
add
dec
cld
loopne
div
add
call
add
gs
jg
add
mov
pop
subl
add
add
lods
int
xor
enter
add
in
call
test
aas
fildll
add
scas
mov
subb
and
add
scas
fnstsw
and
add
scas
and
adc
scas
insl
sbb
and
out
sub
cmp
adc
add
add
add
paddb
jl
into
cmc
jne
aad
adc
add
inc
ss
jnp
xlat
clc
adc
add
jo
repnz
cltd
add
out
shr
aas
test
xchg
dec
push
add
inc
pop
dec
push
push
xor
and
dec
dec
dec
mov
adc
xorb
jb
push
sub
jnp
incl
scas
ljmp
cld
push
ss
dec
dec
pop
cmp
bound
jae
dec
pop
pop
sahf
and
ljmp
or
sbb
and
pop
incl
xchg
push
scas
ljmp
push
mov
ljmp
xchg
jmp
mov
and
std
pop
in
xor
sub
cmp
outsb
movsb
cs
push
lods
ljmp
out
das
xchg
sbb
cmp
add
dec
sti
jmp
pop
add
lods
ljmp
mov
ljmp
ja
scas
jb
inc
movsl
js
pop
lods
andb
pop
push
mov
push
pop
lcall
outsb
sub
ljmp
out
adc
clc
ss
or
in
sbb
ficoml
cs
mov
adc
xchg
adc
xor
mov
add
push
sbb
nop
adc
or
pop
add
add
fwait
out
hlt
mov
repz
inc
clc
jecxz
insb
in
lcall
pusha
bndldx
pop
prefetch
out
push
push
pop
adc
std
lcall
mov
add
mov
inc
sahf
mov
cmpsb
jge
mov
scas
test
add
andb
pop
movsb
adc
dec
mov
inc
jne
mov
insl
inc
mov
push
shrl
js
jp
and
scas
dec
scas
rclb
scas
push
mov
jnp
inc
xchg
insb
shlb
mov
cmp
push
lods
pop
es
pop
xlat
inc
sti
dec
sbb
add
or
cld
shl
pop
into
aam
dec
int3
aam
popa
in
jmp
jae
xchg
daa
xor
jno,pt
test
cmp
das
jo
add
lods
and
scas
ljmp
mov
mov
sbb
sub
fistl
adc
xlat
outsl
xor
and
adcl
mov
loopne
hlt
push
mov
cs
scas
ljmp
ret
or
stos
std
sub
mov
fcoml
mov
out
bound
add
xchg
repz
outsb
mov
add
jno
adc
xchg
ljmp
mov
cmp
lcall
jmp
imul
add
xor
cmp
ret
sub
sbb
fs
push
mov
fdivs
sub
add
inc
pop
call
add
loope
inc
inc
sar
ss
sbb
js
cs
jmp
int
jnp
mov
jno
mov
jmp
lods
mov
jo
popf
mov
jle
mov
jne
fwait
mov
movsb
mov
inc
mov
cmpsl
sub
nop
test
dec
jge
or
jmp
pop
and
jmp
test
fisttpl
mov
mov
inc
mov
out
inc
adcb
pop
mov
mov
scas
je
subb
xchg
mov
movsb
xchg
cwtl
popf
mov
iret
adc
test
add
test
xchg
and
nop
mov
addl
mov
fwait
mov
jno
add
cs
dec
shlb
push
add
inc
in
pop
pop
add
push
dec
pop
repz
pop
or
add
add
jbe
inc
fildll
jns
cmp
xor
fsubs
gs
dec
cmpl
push
imul
div
push
mov
clc
rcll
inc
inc
orl
in
xor
iret
addr16
lret
jb
lret
ds
fisubrs
fcmovu
adc
or
mov
mov
jmp
mov
push
mov
sti
call
in
adc
out
mov
int3
lcall
rorl
outsl
mov
aad
and
in
std
xlat
mov
pop
and
fnsave
push
and
mov
mov
adc
or
dec
add
xchg
leave
ljmp
jno
xor
xchg
dec
push
scas
addr16
inc
mov
gs
xchg
insl
adc
jae
subl
xchg
addr16
outsl
xchg
dec
inc
js
jge
aaa
mov
add
call
in
loopne
lods
call
jecxz
fwait
pushf
stos
or
loopne
sbb
sti
lock
mov
aam
xor
mov
faddp
cmp
enter
jmp
icebp
and
cwtl
fdivr
lds
dec
out
into
daa
cmp
aad
das
fs
jbe
pop
fisubl
and
aad
xor
testl
cmp
jge
sbb
cmp
sbb
dec
mov
pop
push
outsb
out
pop
push
scas
jno
subl
add
add
add
test
mov
adc
je
lea
add
test
mov
add
add
into
sbb
arpl
hlt
outsl
jl
out
jp
cmp
js
scas
je
clc
push
cli
cld
inc
add
add
jg,pn
stc
xor
je
and
jo
push
inc
inc
scas
imul
imul
sbb
inc
push
sub
cmp
xor
fists
adc
cmpsb
mov
inc
jae
pop
xor
fucomi
adc
xchg
ljmp
das
aas
test
cmp
stos
push
ds
add
ljmp
xor
jnp
xchg
movsb
arpl
add
add
add
xchg
ljmp
ljmp
ja
inc
in
jnp
xor
scas
ljmp
mov
mov
lods
ljmp
out
scas
add
jmp
sub
pop
sub
lds
xor
ret
xor
mov
add
cmp
cmpsb
minps
test
add
add
pop
repz
loopne
fwait
mov
das
shll
pop
or
mov
pop
push
hlt
outsb
pop
ds
jmp
mov
std
call
push
add
jne
xchg
fidivrs
xchg
add
or
nop
and
xchg
cmp
xor
repz
js
mov
ss
mov
mov
sub
test
add
add
cld
repnz
clc
out
add
scas
jmp
gs
sarl
dec
nop
mov
dec
fsubl
inc
inc
shlb
or
add
add
pop
mov
lret
lret
fcmovnbe
sub
ficomps
xchg
and
mov
lock
scas
scas
es
lcall
cmp
cmp
cmp
test
jp
sar
sub
ljmp
xchg
jecxz
and
scas
dec
mov
add
sbb
and
rcrl
and
sbb
jl
ljmp
out
ljmp
add
add
add
add
fsubp
adc
cmc
movsl
push
jecxz
arpl
in
add
mov
ljmp
cli
xor
les
mov
pop
ljmp
bound
adc
mov
sbb
in
out
jg
loopne
jnp
xor
mov
inc
mov
add
jp
ljmp
fiaddl
leave
sub
lods
ljmp
lods
ljmp
xchg
and
mov
dec
pop
or
dec
sbb
loopne
inc
add
jmp
mov
ljmp
imul
add
ja
add
mov
add
data16
inc
out
mov
ljmp
fildll
mov
inc
or
mov
cmp
rorb
iret
sub
outsl
out
add
pop
sti
std
jmp
lret
sub
into
push
out
add
stc
js
adc
ljmp
inc
movsl
mov
sub
xchg
push
out
add
xchg
rolb
leave
sub
incl
add
add
or
or
out
add
cs
push
dec
fsubr
add
pop
xchg
push
xor
movsl
scas
jae
jno
xor
imul
cmp
out
pop
jno
clc
ljmp
mov
jge
call
push
sbb
sbb
add
dec
push
or
inc
dec
inc
aad
dec
push
or
sbb
and
jmp
sub
rcrl
xchg
gs
xchg
jbe
push
imul
mov
adcl
scas
mov
fcmovnu
xor
inc
into
xor
adc
add
adc
add
jmp
jmp
scas
ljmp
jl
pop
mov
inc
inc
mov
imul
pop
jmp
test
imul
adc
jmp
pop
loop
mov
outsl
out
int3
fs
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
js
push
push
scas
ljmp
scas
ljmp
stos
in
ljmp
add
add
add
mov
push
ret
icebp
and
mov
icebp
pop
sbb
jge
stc
sbb
add
adc
lods
ljmp
int
add
lods
ljmp
imull
dec
lods
out
mov
cwtl
sti
fwait
push
xchg
out
pop
shl
pop
mov
lea
aad
orb
popf
jns
jp
jge
jle
xorl
mov
sub
lods
ljmp
imul
and
xorb
test
cwtl
js
repz
and
aas
xchg
inc
inc
ffreep
inc
dec
lret
stos
dec
dec
mov
dec
push
mov
shlb
pop
cmp
cltd
popa
popa
jne
gs
imul
mov
push
ljmp
pop
ljmp
fs
ds
cs
xchg
out
add
scas
into
add
inc
scas
lahf
add
outsb
scas
movl
gs
loope
outsl
scas
movb
scas
testl
gs
adc
add
xor
add
scas
sub
insb
scas
add
sbb
outsb
scas
das
add
inc
add
inc
add
pusha
add
adc
add
and
aaa
scas
inc
add
scas
adc
add
addb
scas
ljmp
sub
and
xchg
push
loope
ljmp
outsl
ljmp
jge
fidivl
ljmp
lret
scas
ljmp
out
mov
fcompl
push
add
popa
les
or
add
ljmp
mov
xchg
add
ljmp
xchg
ljmp
test
cmpsl
add
cmpsb
cmpsl
add
adc
add
add
add
cmpsl
add
jl
dec
cmp
push
sub
insb
or
jne
lods
ljmp
add
jmp
cld
mov
add
fsubl
add
or
jmp
push
test
lcall
add
lods
lcall
lods
xchg
add
lods
lea
add
out
add
out
add
data16
out
add
out
add
out
add
test
jnp
push
lock
adc
hlt
mov
xlat
pushf
mov
pop
je
add
push
je
cltd
mov
test
test
add
adc
adc
xlat
out
jl
add
jae
cltd
add
imul
lret
pop
adc
or
add
add
add
dec
mov
add
sub
add
inc
js
stos
rorb
stos
adc
add
aam
and
adc
dec
test
or
adc
test
mov
or
mov
or
jge
mov
outsl
pop
add
insl
mov
jmp
jl
mov
lahf
incb
add
add
pop
xor
test
push
jno
stc
out
lods
add
cmc
jecxz
xor
inc
push
jl
test
jp
test
jb
and
stc
jnp
cmc
jo
mov
bound
lds
jb
xchg
ljmp
cwtl
jmp
mov
incb
sahf
stos
ljmp
and
xor
roll
jno
imul
add
ljmp
test
repnz
ljmp
mov
mov
ret
outsl
repz
cmpsl
push
or
jmp
mov
loopne
add
addr16
bound
mov
mov
cmpsb
and
dec
lods
ja
sahf
add
mov
or
add
jmp
ds
inc
jbe
sbb
sub
icebp
lods
xchg
add
out
jmp
jns
sub
add
inc
jmp
lods
clc
inc
lds
ja
jmp
dec
adc
jmp
scas
ljmp
sub
push
loop
ljmp
pop
cmpb
sbb
mov
add
add
inc
repz
mov
jle
and
out
add
jmp
movl
ljmp
insb
push
lea
cwtl
add
and
out
push
xchg
jle
movlps
inc
and
lcall
jae
jmp
mov
adc
adc
sbb
mov
add
out
push
stc
inc
pop
flds
adc
xorl
inc
add
sahf
fs
stos
mov
or
add
insl
mov
adc
lret
add
adc
addr16
adc
lea
lock
scas
adc
arpl
je
mov
ljmp
add
add
je
shlb
push
ljmp
add
push
sti
xchg
insb
ljmp
imul
out
mov
ljmp
cmpsb
call
xchg
aas
mov
and
jno
pop
ret
fsubrl
sub
or
jl
fsubrp
sub
push
lret
mov
scas
stos
outsl
mov
daa
and
sarb
cmp
adc
add
jg
clc
mov
ljmp
andb
cmp
or
enter
ljmp
lods
hlt
test
lea
push
enter
ljmp
lods
cmp
icebp
lods
ljmp
cwtl
addr16
ljmp
pop
insl
inc
lds
ljmp
cmpsl
jmp
and
icebp
mov
or
mov
add
mov
or
jp
cld
jmp
lods
jmp
xchg
stos
ljmp
adc
sbb
mov
add
fisubrs
jp
add
dec
push
pop
out
xor
add
add
adc
jbe
shrb
cwtl
pop
out
push
pushf
test
adc
xchg
add
incl
add
rolb
jp
jg
and
out
add
test
out
xor
mov
test
out
mov
ja
and
out
add
scas
mov
into
xchg
add
add
add
push
mov
lret
or
jl
adc
or
xor
push
add
incl
push
add
xorb
in
stos
andl
push
inc
lea
inc
call
sub
repz
jmp
incb
shlb
cld
add
scas
test
lods
scas
add
xchg
cmp
mov
add
add
cmp
sbb
test
add
stc
xor
push
adc
add
ds
addl
sbbl
sub
movsbl
movsl
ljmp
shr
ljmp
mov
add
xlat
add
mov
out
ret
sbb
mov
mov
popf
js
popf
mov
mov
jbe
and
sbb
add
sub
pop
jge
lret
outsb
sahf
mov
pop
in
loop
mov
ficoml
sub
mov
stc
adc
mov
fnsave
cmp
jne
jno
xchg
pop
stos
jns
push
bound
lahf
addr16
inc
stc
jbe
gs
std
inc
dec
gs
fs
jns
cli
insl
add
add
jp
loop
lods
ljmp
xchg
scas
adc
js
cld
decb
stc
cld
mov
jnp
aas
rclb
out
lods
mov
inc
cmc
cmp
aad
adc
pop
lcall
test
adc
pop
in
add
push
pop
xor
cmp
push
clc
xchg
or
or
add
add
icebp
or
pop
jmp
sarb
jge
jmp
adc
fiaddl
les
cmp
mov
xor
test
add
jmp
push
sbb
loopne
pushl
jmp
mov
popa
cld
jg
ffreep
jmp
out
dec
lea
add
and
sub
loopne
mov
pop
or
add
add
int
movl
add
test
rcr
inc
ret
cmp
mov
int3
loopne
add
cmpsl
add
mov
out
adc
lcall
add
lgdtl
loopne
push
pusha
pop
loopne
xchg
xor
loope
pop
clc
fdivrs
loopne
add
add
rcll
cltd
aaa
in
repz
cmp
lret
ss
repnz
cmp
mov
imul
adc
lods
leave
imul
sub
mov
lods
pop
dec
stos
arpl
pop
ret
jmp
lods
sahf
xor
cmc
aad
mov
in
clc
jns
popa
dec
in
dec
mov
mov
jecxz
mov
loop
adcb
xor
push
push
enter
popf
push
pusha
outsl
xchg
cld
hlt
push
faddl
xor
push
jo
xchg
xchg
pop
adc
sub
jmp
fucom
mov
mov
jge
jo
repnz
add
push
fnsave
xor
stc
jo
testb
fdivrp
fdivrl
add
add
jg
ds
jmp
and
jecxz
mov
mov
das
data16
ljmp
js
addr16
and
add
in
xor
iret
hlt
je
push
xorb
xor
dec
xchg
jno
leave
and
lea
inc
mov
xchg
push
xorb
leave
add
add
add
add
test
dec
jno
out
rorb
arpl
movsb
sbb
ja
popa
divl
hlt
call
mov
jno
pushf
fwait
jno
fwait
popf
ljmp
mov
scas
js
sahf
xor
pop
mov
rorl
mov
scas
add
enter
lret
cmp
xchg
nop
out
add
mov
mov
in
push
or
and
decl
inc
inc
imul
mov
add
sub
mov
dec
and
add
ror
shrb
jp
adc
js
dec
push
mov
inc
adc
jmp
push
daa
outsb
sahf
or
stos
ljmp
loop
inc
jb
repz
daa
filds
mov
fisubs
pop
lcall
cmp
jo
mov
mov
sub
sbb
xchg
scas
in
ljmp
mov
xor
bound
fsubrp
ljmp
test
aaa
ffree
lret
test
mov
xor
sbb
add
add
ja
push
fsubs
mov
ljmp
sub
sti
decb
in
add
lods
shlb
gs
and
fucomip
out
jmp
add
shr
or
insl
test
in
jne
pop
in
xchg
arpl
xlat
jbe
outsb
pop
inc
sub
loope
xor
pop
add
adc
out
ljmp
pop
into
xor
clc
pushaw
mov
add
jbe
insl
add
sub
inc
sbb
icebp
inc
pop
nop
loop
sbb
inc
pop
scas
shlb
fwait
incl
fisttps
push
inc
fcmovne
mov
pop
and
inc
xlat
fadds
add
out
xchg
pusha
cmc
shrl
in
je
mov
xor
out
mov
out
cli
xor
add
dec
and
add
push
mov
outsb
cmc
ljmp
std
and
repz
add
inc
add
inc
push
aad
add
push
sub
test
cli
hlt
inc
add
mov
hlt
inc
add
icebp
jmp
scas
aam
and
rol
mov
xor
or
adc
cmp
in
scas
aam
add
lock
adc
xor
roll
scas
js
rclb
enter
lods
imul
and
outsb
or
push
jbe
sub
sub
dec
fisubrl
hlt
push
mulb
les
fincstp
in
xchg
pop
out
fwait
xchg
mov
test
add
lcall
fisttpll
mov
js
fcmovb
out
inc
scas
add
mov
shrb
scas
and
add
xlat
mov
test
mov
aaa
lea
xchg
cmp
scas
ja
cltd
dec
mull
add
in
add
jmp
add
dec
add
test
in
testl
out
in
cmp
ljmp
fisubs
ljmp
cmc
cld
sbb
and
lahf
mov
out
iret
andb
fnstenv
xor
jmp
cli
arpl
repz
jmp
mov
lahf
movsb
jbe
in
push
out
jo
cmc
mov
call
cld
dec
mov
push
inc
mov
pop
pop
test
add
add
jne
add
lock
lcall
add
pop
pushf
adc
dec
add
dec
pop
call
dec
inc
decb
or
dec
xchg
out
inc
out
dec
inc
mov
std
mov
add
add
divb
pause
insl
pop
add
push
cmc
push
adc
adc
scas
into
and
test
pop
add
add
gs
out
add
scas
cwtl
add
rep
loope
out
add
scas
andb
sbbb
xor
inc
cld
sub
jmp
mov
add
add
insl
repnz
imul
fwait
mov
addr16
cld
je
add
daa
adc
repz
xorb
pop
decb
sbb
insl
mov
add
push
inc
xchg
shll
mov
mul
lea
push
push
jmp
aad
mov
cli
pop
dec
sub
pop
inc
mov
stos
imul
jmp
jg
imul
ja
lock
or
sbb
int
bnd
push
mov
and
cmp
or
mov
cld
rolb
jmp
jne
and
push
add
es
cli
sub
adc
and
jg
js
cld
push
push
add
add
pop
pop
jb
testb
xchg
or
cs
mov
fsubrp
ljmp
inc
loope
dec
mov
pop
pop
adc
sub
adcb
pop
or
arpl
cs
loope
and
mov
cwtl
mov
ljmp
imul
push
lock
call
or
mov
add
jg
pop
sbb
sub
add
mov
add
fldcw
xchg
out
add
jno
add
jae
call
mov
inc
popl
addr16
add
std
adc
mov
fbstp
fmuls
in
push
call
push
push
add
fdivrs
add
out
dec
add
scas
test
add
xor
pop
mov
aaa
std
adcl
in
push
adc
popa
loopne
mov
sub
add
adc
add
pop
loop
flds
aaa
push
test
adc
mov
add
ret
pop
sub
aam
sarl
ljmp
push
outsb
sarl
dec
imul
sub
mov
scas
ljmp
scas
cmp
mov
scas
ja
stos
xchg
out
xor
push
add
push
jmp
popf
xchg
scas
ljmp
ja
scas
scas
ljmp
lods
ljmp
scas
ja
add
insl
inc
push
scas
ljmp
cmp
or
shlb
add
call
jno
fldt
out
shll
lds
pusha
jbe
addr16
fsubp
cld
out
movsl
or
inc
mov
ljmp
lods
ljmp
cli
test
stos
mov
add
add
ja
xor
push
ljmp
in
inc
jmp
lods
ljmp
lods
ljmp
lods
cmp
push
push
add
lods
ja
jns
ljmp
lods
ljmp
iret
arpl
call
xchg
repnz
imul
jmp
add
out
popl
mov
add
mov
add
add
fiadds
push
call
cld
jae
test
data16
call
add
mov
call
cmpsb
add
call
incl
sbb
xlat
xchg
stos
or
pop
shl
push
call
adc
inc
leave
add
add
add
push
xchg
add
addr16
mov
dec
jge
dec
addb
add
adc
scas
sbb
or
outsb
sub
and
sarl
mov
add
aam
addl
mov
add
jl
ret
stos
pop
jns
scas
roll
lea
push
add
rorl
add
dec
adc
test
ljmp
sub
mov
fs
adcb
ljmp
pop
sub
jmp
add
ljmp
ljmp
cs
repnz
ljmp
jns
jp
scas
ljmp
pusha
rorl
shrb
div
xor
out
repnz
mov
arpl
dec
jnp
add
mov
sti
and
pusha
fildll
inc
test
cmp
xor
adc
lods
ljmp
push
push
or
outsb
and
cltd
cs
in
int
lods
jne
loope
rolb
jmp
stos
leave
dec
movsb
lods
ljmp
lods
jne
add
sbb
jmp
lods
ljmp
lahf
cmp
std
std
mov
push
sbb
adc
in
ljmp
popf
and
xchg
adcb
sub
push
or
push
cmpsb
add
in
push
jmp
inc
adc
pop
bound
mull
scas
in
add
or
rorb
shr
popa
dec
and
add
add
sbb
jnp
add
in
xor
mov
sbb
mov
push
push
push
dec
out
ret
leave
clc
mov
hlt
pop
inc
in
clc
jae
sub
inc
or
shlb
std
adc
scas
dec
inc
and
dec
xchg
scas
roll
xor
nop
add
ret
jecxz
ljmp
add
add
add
stc
pop
cmp
lea
and
add
rcll
fildl
test
pusha
or
push
test
rorl
ret
sbb
jns
fsubrp
incl
leave
xor
push
incl
aad
add
pushf
xchg
fdiv
xor
lret
xor
mov
push
and
inc
fstpl
cmp
ljmp
add
add
add
add
out
out
shr
jl
lcall
adc
cmp
scas
cli
stos
add
loop
ss
out
ss
xchg
sti
sub
ljmp
cmp
scas
jae
cld
pop
out
push
stos
push
out
test
rcll
xchg
mov
jns
sbb
add
aaa
aaa
std
fstl
add
xchg
lret
stos
push
movsl
iret
dec
mov
dec
ds
add
cmp
inc
loope
pop
or
subl
call
pop
cmp
pop
xor
in
pushf
jbe
es
sub
shr
lods
ljmp
push
mov
push
in
push
cltd
imul
mov
rcrb
jb
cmpsb
adc
stos
outsl
xchg
jno
cld
cmp
mov
sti
inc
jmp
dec
fdivrp
scas
mov
sbb
xchg
addr16
inc
add
mov
movsb
ret
push
rcrb
push
xchg
pop
mov
fcomps
je
dec
cmpl
sub
mov
push
inc
shlb
adc
test
add
add
mov
jne
scas
pand
adc
jno
add
or
sbb
xchg
call
adc
mov
adc
push
aas
fiaddl
push
stc
inc
lock
jmp
inc
pop
xchg
fmuls
shlb
push
leave
jge
jle
stos
mov
inc
andl
stc
inc
icebp
xchg
test
cmpsb
mov
add
mov
dec
and
xor
lret
icebp
dec
test
call
sbb
add
lea
je
jecxz
arpl
inc
lcall
or
ss
mov
inc
add
xor
aaa
cld
pop
fimuls
mov
cmp
scas
ljmp
std
insl
sub
ret
mov
add
add
aas
mov
test
out
sub
mov
in
fstpt
mov
add
ljmp
push
lcall
jmp
popa
add
mov
sub
cmpsl
addr16
scas
push
loope
xor
mov
fisubrl
sti
jnp
lcall
xor
add
add
cmp
popl
inc
add
arpl
inc
ror
cli
mov
test
cmp
in
sbb
cld
insl
in
pop
adc
out
ja
daa
leave
push
adc
sbbl
inc
sub
fs
jne
sub
sub
ljmp
pop
out
jne
incb
add
aas
ljmp
loop
shr
add
enter
pop
iret
pop
add
add
add
push
push
outsl
das
adc
push
push
dec
and
push
add
inc
in
xor
pop
in
or
pop
lods
or
mov
sbb
add
jge
ret
or
inc
fnstcw
pop
sub
dec
jecxz
xor
aam
adc
xchg
sarl
add
add
hlt
subl
fbstp
add
push
jno
fldt
sbb
repnz
in
xchg
inc
and
frndint
ljmp
fldenv
scas
rcr
add
sub
ljmp
ljmp
jmp
dec
and
and
cli
stos
pop
inc
ret
mov
loope
incl
add
add
inc
pop
and
shll
ds
roll
push
in
dec
push
ds
add
jno
add
roll
pop
lods
call
xchg
test
add
cmpsl
ret
cs
std
jmp
shll
ljmp
xchg
incl
inc
jmp
push
ljmp
xchg
es
lcall
add
add
add
in
push
clc
adc
clc
add
test
jmp
inc
shrb
xorl
jmp
clc
add
xchg
ljmp
in
ljmp
ljmp
icebp
cli
jmp
add
ljmp
scas
popa
cmpsb
out
add
out
ss
icebp
push
test
add
add
sub
rorl
cld
into
shr
mov
xchg
sahf
daa
repnz
cli
aad
in
sub
xchg
dec
mov
and
out
mov
mov
ss
imul
inc
pop
imul
es
in
es
imull
fldcw
mov
lods
ret
out
aam
add
into
cmpxchg8b
into
and
push
sub
adcb
ltr
es
mov
add
and
adc
stos
xor
lcall
adc
aam
add
or
std
test
call
xor
icebp
push
fs
pop
adc
add
xchg
inc
and
call
inc
add
loop
call
push
data16
pop
push
jl
push
push
dec
xor
lret
call
xor
xor
jecxz
push
mov
pop
push
add
add
push
clc
adc
fnstsw
jns
shll
test
test
adc
std
je
sbb
testl
add
inc
add
scas
push
xor
sub
shll
cld
jae
addl
addr16
leave
push
inc
test
not
cltd
xchg
xchg
adc
sub
stc
nop
jecxz
loop
popa
mov
mov
mov
adc
in
push
sub
adc
addl
cmpl
add
lcall
add
sbb
push
pop
sti
push
loopne
sbb
adc
ljmp
mov
jo
mov
jmp
or
pop
idivl
scas
pop
lods
mov
out
icebp
add
jnp
repnz
and
adc
pop
lret
add
add
sti
es
mov
add
push
inc
shr
lods
gs
inc
insb
out
add
cmp
cli
jno
rorb
in
push
mov
cmp
mov
into
gs
in
mov
inc
xchg
mov
ret
pop
arpl
sub
pushl
popf
shll
cmp
add
adc
push
sub
xlat
gs
and
lods
jo
mov
or
xlat
cmp
in
fsubrp
add
and
ret
inc
mov
mov
jle
sub
arpl
add
cli
sub
mov
das
pop
leave
add
lcall
inc
push
or
sbb
fidivs
push
mov
or
inc
in
push
push
inc
cmp
jne
sarl
jmp
add
fstpl
push
call
aaa
xchg
pop
cltd
push
cmp
sub
mov
popf
jae
enter
sub
dec
dec
cld
and
rolb
mov
lds
add
sub
shll
test
addr16
add
out
insb
push
push
sbb
in
adc
fsubp
mov
mov
add
sub
scas
xor
testl
lods
ljmp
pusha
iret
xchg
or
xlat
sarl
ljmp
dec
hlt
mov
popf
shl
mov
xchg
loope
add
fs
gs
iret
ret
lods
out
cmpsb
jmp
inc
add
ss
leave
shr
add
inc
jmp
lods
ds
xor
out
cld
adc
arpl
lods
push
adc
movsb
mov
mov
es
cltd
add
sbb
jmp
lret
sub
add
add
push
loope
ljmp
lods
ljmp
jne
push
mov
cld
test
fidivrs
cmp
pop
pop
into
cld
push
mov
cli
push
test
scas
test
add
lods
pop
inc
icebp
fldl
testb
sbb
inc
push
lret
outsl
pop
ljmp
nop
sbb
subl
incl
add
add
mov
jg
ret
dec
std
add
jmp
sti
lcall
pop
add
lahf
ret
cmp
add
cld
add
arpl
popa
xchg
sti
mov
dec
hlt
pushf
test
or
fsubr
mov
sbb
lcall
call
test
scas
jne
incb
add
add
rolb
stc
add
mov
adc
ret
scas
ret
jg
push
xchg
push
jae
sbb
jnp
addl
lea
mov
lock
roll
pop
mov
je
jge
je
je
xor
pop
leave
insb
movb
jo
scas
push
and
pop
cmp
fcomps
cmp
push
sbb
dec
xor
xchg
test
hlt
push
mov
cmp
inc
pop
pop
add
cmp
inc
cmp
mov
push
stc
sub
stos
idiv
fsubl
push
or
lret
outsl
cmpsb
pusha
mov
or
and
out
mov
lods
mov
mov
sarb
mov
cmc
or
out
ljmp
xchg
push
int
xor
rorb
ljmp
scas
aaa
sbb
movsb
xlat
ds
cmpsb
sub
sub
cmp
cld
fs
and
aas
scas
push
sbb
jo
add
fsubp
cld
stc
movsl
pop
or
enter
add
push
fisttpl
pop
sub
push
adc
lods
ret
and
cld
mov
jle
push
es
push
push
lahf
mov
test
lods
and
dec
push
sbb
rorl
xchg
inc
ds
cli
in
ljmp
xchg
jmp
add
mov
add
sbb
mov
shl
inc
inc
mov
pop
mov
cmc
inc
pop
xor
add
add
add
scas
jb
xchg
mov
ret
jl
sub
push
and
jmp
lods
push
mov
inc
mov
and
mov
mov
inc
ret
cld
jae
sub
jb
mov
addb
xchg
jne
adc
add
scas
stos
adc
mov
addb
add
in
in
rorl
pushl
roll
cmp
lcall
call
dec
inc
and
test
inc
xchg
roll
mov
test
rcl
add
mov
out
xor
add
mov
imul
cmp
adc
icebp
jge
jge
and
mov
cmp
cmc
lods
shrl
or
push
shrb
adc
repz
add
xchg
jmp
sub
out
and
pop
loop
push
mov
stos
and
ljmp
sub
mov
push
movsb
rep
or
scas
jno
adc
icebp
pop
inc
mov
sub
lock
call
shll
adc
aas
add
mov
out
mov
das
mov
add
push
pop
stos
pop
sub
in
scas
cmp
in
mov
repnz
xor
lods
shrl
fidivs
les
pop
iret
int
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
fs
mov
mov
lods
ljmp
fcom
cld
mov
push
mov
jmp
sub
sub
outsb
cld
fidivl
insl
add
adc
scas
or
call
aad
adc
mov
ja
bound
push
ljmp
outsl
jae
je
inc
push
sub
sub
mov
out
mov
add
xchg
fidivrs
xor
cmp
add
cmpl
sub
cmp
jo
mov
push
xor
jmp
aas
add
iret
incb
mov
call
ds
add
xchg
dec
ret
add
popf
addb
push
inc
xor
xor
jns
dec
call
cmp
sti
popa
mov
push
fwait
movsb
enter
mov
scas
sarl
fidivrs
test
fs
jle
mov
scas
roll
add
xchg
push
push
xchg
add
dec
sub
jmp
xchg
cmpsl
fldenv
in
add
scas
roll
lea
ljmp
ret
inc
scas
adc
add
test
add
scas
ljmp
xchg
push
push
add
jp
pushf
pop
jmp
ss
and
sbb
ljmp
fpatan
je
cmp
jbe
sbb
incb
adc
scas
and
test
ljmp
xor
stos
clc
ret
mov
jae
outsl
sub
frstor
adc
sub
cmp
xor
jmp
imul
push
call
rol
push
std
div
lahf
adc
repnz
or
ficomps
in
ljmp
mov
cld
mov
mov
pop
cld
cmp
imul
fs
cmp
jmp
add
adc
push
fs
jp
xchg
push
cld
sbb
outsb
push
jbe
les
jecxz
add
xorl
jbe
push
or
call
insb
mov
in
out
test
xchg
jl
mov
xchg
sti
decl
pop
leave
aad
add
mov
add
add
pop
into
and
mov
sbb
cmpsl
sbb
add
xchg
sti
call
out
xchg
sbb
add
out
xor
loope
addl
mov
out
add
jb
cld
mov
adc
sarl
ficoml
mov
rorl
push
adc
cmp
add
sahf
movsb
adc
roll
inc
scas
roll
push
xor
std
jns
dec
sti
scas
aad
xchg
cmp
push
scas
je
push
sub
inc
ja
adc
movsl
inc
add
sarl
and
scas
dec
andl
incb
inc
jae
stos
sub
add
add
mov
fwait
ljmp
loop
std
pop
mov
and
cmp
mov
rcrb
push
jp
dec
ja
mov
xchg
insb
push
sbb
decb
push
loopne
jo
mov
push
add
ljmp
ret
inc
scas
gs
cld
sub
gs
in
inc
cmp
push
cmp
push
adc
ljmp
scas
sbb
js
xorw
jae
js
rolb
adc
jmp
repnz
add
add
jmp
jmp
insl
idivb
inc
shrl
jle
rclb
pop
je
mov
xor
imul
xor
pop
outsb
leave
jno
ljmp
push
jmp
pop
push
aad
stos
ljmp
push
sar
in
lret
stos
fbstp
push
xlat
push
aaa
jge
fadds
push
mov
jmp
adc
push
sub
daa
add
fiaddl
inc
or
cmc
inc
aas
inc
or
mov
inc
xlat
aas
inc
adc
lock
aas
inc
adc
mov
inc
sbb
and
push
mov
testb
clc
nop
xchg
mov
pop
sbb
xor
sbbb
and
lock
inc
inc
jle
pop
fcoml
xchg
xchg
xor
ljmp
cmp
scas
inc
sub
jbe
rorl
cmp
incl
adc
fsubr
jmp
add
lahf
cwtl
push
imul
cmc
insl
shll
inc
scas
mov
add
or
mov
add
add
nop
add
add
nop
add
mov
xor
ss
cmc
in
rorl
cmc
mov
adc
xchg
sbb
sbb
inc
aaa
mov
mov
sub
fdivs
stos
xor
aaa
fstpt
gs
push
sbb
push
adcb
jle
in
outsb
enter
sbb
mov
jo
into
outsb
lods
outsl
sarl
add
movsl
call
xchg
jmp
rclb
scas
ljmp
sub
insl
xchg
imul
ljmp
adc
pushf
and
scas
jle
jmp
insl
mov
aas
ljmp
ljmp
repnz
add
add
cmp
xchg
jo
or
jmp
addr16
jmp
ljmp
pop
adc
scas
dec
ljmp
cmpsb
addr16
jmp
ljmp
sbb
xchg
mov
addr16
lods
insl
inc
add
outsl
les
inc
push
mov
push
in
addr16
stos
jmp
lock
ljmp
dec
cmp
add
push
mov
mov
insl
push
out
jge
aas
xlat
call
pop
call
add
mov
out
xchg
jp
xorb
add
addr16
xlat
mov
out
mov
mov
add
or
push
push
jns
loopne
out
add
pop
imul
mov
add
inc
faddl
add
add
scas
jo
sub
es
push
lret
dec
mov
add
test
or
lret
mov
add
cmp
scas
add
push
cmp
jae
pop
stos
lds
dec
shll
hlt
scas
add
mov
cltd
mov
jae
ja
cmpsb
push
mov
add
push
hlt
out
adc
add
incl
or
mov
std
setns
inc
or
ljmp
mov
ret
inc
mov
daa
clc
and
jecxz
loop
out
and
aam
ret
scas
ljmp
jno
std
adc
ds
fwait
add
add
stos
testb
add
add
cmp
inc
xchg
ljmp
movsl
mov
ljmp
xchg
out
popf
std
jae
add
test
cmp
insl
mov
daa
xchg
jmp
jmp
add
adc
xor
pop
sarl
addr16
shrb
cmp
mov
mov
cld
xor
rorb
test
dec
outsl
repz
and
popa
inc
in
cmp
jb
into
mov
adc
outsb
or
add
aam
dec
xor
pusha
outsb
add
cmp
cmpsb
mov
lods
gs
xor
arpl
cltd
dec
adc
enter
sub
add
outsb
repz
gs
jle
scas
jmp
and
sub
push
shrb
cs
push
add
jno
inc
jmp
shr
mov
hlt
jmp
mov
add
pop
data16
add
xor
jmp
outsl
call
sub
ret
push
mov
outsl
call
mov
fisttps
call
dec
pop
test
xor
pop
cmp
inc
repz
or
pop
out
mov
add
gs
push
scas
jo
je
jmp
popf
scas
ret
lea
jae
imul
jmp
mov
adc
mov
or
jmp
xor
mov
cmp
clc
aad
or
push
push
or
call
hlt
xchg
dec
sbb
xchg
or
add
ljmp
clc
jge
xchg
add
ret
add
imul
push
rcrb
scas
ret
mov
scas
ljmp
cmpsb
mov
repz
xor
popa
movsl
divl
cli
pop
lret
out
add
cmc
mov
pusha
mov
dec
test
outsb
ljmp
loop
not
mov
outsb
les
pushw
push
mov
add
add
push
repz
scas
popa
jb
xor
out
insb
ljmp
mov
rcll
lods
sbb
aam
fiaddl
ret
dec
mov
push
jns
pop
lods
adc
cs
cmpsl
push
xchg
cmp
es
mov
icebp
inc
sub
jb
adc
fistps
mov
add
cltd
add
cld
insl
in
aaa
es
fcomip
sub
fiaddl
push
cmc
mov
stc
xchg
mov
push
pandn
fldt
pop
and
jns
sarb
jp
aad
jge
mov
fimull
mov
add
repnz
pushl
lret
or
pusha
stos
cld
call
iret
cmp
faddl
addb
add
das
aam
je
decl
adc
pop
xchg
jl
fucomi
push
je
pusha
sub
rclb
xchg
push
sti
je
jle
testb
adc
jle
ret
pop
out
adc
xchg
or
daa
add
add
inc
hlt
mov
call
in
xchg
scas
xchg
testl
xchg
lock
mov
add
incb
jne
add
mov
mov
add
mov
jmp
call
push
add
lret
xchg
pop
xor
mov
dec
inc
and
dec
inc
and
add
daa
xor
dec
inc
and
push
sbb
iret
xor
add
and
rcrl
cwtl
dec
cmp
add
ljmp
inc
push
add
daa
pop
in
sub
mov
fisubrs
mov
arpl
xor
ljmp
xchg
add
icebp
jmp
nop
aad
scas
cmp
jno
scas
mov
push
sbb
add
out
xlat
mov
popf
xchg
pop
dec
lret
popf
jge
xlat
pushf
lcall
adc
and
pop
inc
lds
mov
pop
fmul
fnsave
ljmp
xchg
adc
cltd
xchg
pop
lods
arpl
ljmp
test
mov
enter
mov
jae
std
mov
fldl2e
add
jnp
enter
add
scas
ret
and
mov
and
dec
arpl
jmp
loop
inc
add
mov
jl
imul
push
or
stos
jo
dec
iret
and
fdivrs
es
test
rcr
mov
xchg
sbb
mov
lea
jmp
test
add
add
xlat
dec
mov
pop
dec
pop
jmp
call
int3
fldl
push
push
fisubl
ret
add
int3
rorl
call
out
mov
push
jo
scas
pop
inc
sub
inc
repz
lcall
mov
pop
add
out
xlat
aaa
pop
and
shll
rolb
arpl
add
add
mov
sbb
dec
pop
test
outsb
or
repz
ss
jne
jmp
push
dec
cmp
xor
adc
pushf
add
push
push
sbb
out
xchg
xchg
pop
push
inc
cmpsb
mov
scas
ss
aam
insb
adc
jge
mov
into
pop
ljmp
scas
sbb
repnz
lcall
pop
lods
mov
rcr
xor
inc
cmp
andl
sub
jmp
mov
stos
lcall
or
push
sub
sub
imul
sbbl
movsl
fwait
push
xor
add
stos
adc
xor
ljmp
test
pushf
or
add
add
mov
popa
dec
mov
cmp
clc
and
jb
mov
inc
mov
mov
inc
in
in
or
jmp
add
inc
or
lods
ljmp
pop
addr16
adc
cld
cs
pop
dec
cmc
mov
ljmp
mov
push
sub
add
add
add
jmp
insb
jae
cld
out
xor
push
jmp
jne
push
out
add
pop
pop
roll
call
push
repnz
push
xchg
push
cmp
sbb
cld
jne
pop
out
push
lods
stos
pop
call
mov
cmp
loop
stc
pop
push
sti
xchg
stos
adc
mov
dec
push
je
push
jne
sbb
add
or
sbb
and
inc
or
in
or
incl
mov
test
inc
or
in
or
mov
pop
inc
je
imul
roll
scas
cld
xor
jle
add
in
loope
cmp
std
sub
test
out
rolb
mov
testb
mov
jmp
pop
rcll
add
add
xchg
mov
xchg
insb
lea
inc
cld
sub
add
add
push
sub
and
push
xchg
ret
scas
mov
add
jno
sub
add
adc
inc
je
add
aam
adc
jbe
cwtl
ficoms
retw
lcall
sub
add
stos
pop
rorb
xchg
push
sub
scas
insl
stos
out
shll
stos
hlt
jne
cwtl
and
out
xchg
inc
mov
stos
imull
xor
outsb
sub
outsl
ss
inc
xor
lods
ljmp
xor
out
mov
push
imull
add
xchg
adc
sub
jmp
movsl
imul
push
xor
push
add
in
inc
es
jne
sarl
cld
scas
imul
mov
add
push
out
add
int
inc
in
jne
int
inc
icebp
loope
subl
stos
ljmp
cs
push
lods
fcmovnb
sub
decb
xor
add
add
mov
testl
sub
adc
in
arpl
clc
jmp
xor
stos
push
mov
push
adc
rolb
out
add
aad
test
scas
add
sub
add
push
or
out
test
add
push
leave
add
xlat
jb
or
push
inc
stc
push
jle
rclb
mov
sub
testb
cld
xlat
out
inc
out
call
je
cld
add
sti
ldmxcsr
daa
shlb
add
lods
mov
hlt
in
xchg
xorl
or
add
rcrb
push
jle
sbb
jnp
xor
test
jle
inc
shlb
add
aaa
cltd
mov
jg
jle
dec
lock
pop
int
inc
mov
cli
dec
mov
or
test
add
sbb
xor
xchg
lret
fldl
jmp
int3
sar
jmp
or
mov
adc
add
push
cmp
lahf
xchg
andb
ljmp
sub
add
repz
cmc
xchg
dec
imul
scas
xchg
das
push
or
jp
stc
movsl
ljmp
movsl
ljmp
xchg
sqrtps
movsl
outsl
dec
ficoml
daa
add
movsl
std
mov
sti
push
sbb
cwtl
in
ljmp
rorb
call
aam
bnd
bound
add
add
movsb
cld
out
xor
stc
lods
jno
adc
sub
push
sbb
inc
gs
add
lods
jmp
cld
mov
ljmp
jb
adc
jno
ljmp
add
subb
ljmp
and
popa
aam
jbe
les
pushf
cmp
addl
mov
mov
cwtl
add
push
test
add
mov
out
add
scas
ds
psrlq
add
inc
in
int3
addl
andl
add
adc
pushf
push
in
mov
add
fcmovnu
add
mov
lods
adc
add
les
std
decl
add
cld
incl
add
add
mov
inc
lock
mov
and
or
subb
cmpsb
push
xchg
add
scas
xchg
add
jbe
lcall
or
add
adc
add
xchg
sub
jmp
push
or
mov
js
push
or
and
loope
inc
pop
inc
sub
add
add
fnstsw
add
push
js
into
mov
mov
leave
frstor
cmpsb
ja
mov
into
cltd
sub
xchg
sub
jne
add
sbb
pushf
cmp
add
testl
repnz
inc
adc
add
xchg
pop
xchg
dec
mov
test
add
sbb
lret
add
repz
inc
lret
add
dec
xchg
adc
jmp
insl
lahf
mov
lock
loop
lcall
inc
pop
jne
xchg
and
xlat
jp
mov
cmp
sub
jae
icebp
xor
out
das
in
push
add
mov
aaa
cwtl
jge
popa
ljmp
adc
mov
add
add
adc
jmp
cmp
inc
cmp
push
sub
push
adc
ljmp
les
stos
lods
mov
add
or
hlt
adc
inc
xorl
insl
ljmp
xor
or
stos
insl
lds
ret
int
pop
stos
xchg
fistl
dec
negb
sbb
pop
mov
pop
jmp
sub
insl
adc
push
sbb
jno
arpl
cld
adc
fmull
les
idiv
cmp
push
lcall
adc
test
clc
inc
stc
adc
add
call
add
pop
pop
in
mov
add
adc
sub
out
fistpll
pop
insl
pop
inc
mov
cmp
mov
add
aad
call
sbb
fs
inc
push
test
xchg
sub
pop
insb
test
push
loopne
xchg
jg
scas
add
call
nop
fld
aaa
inc
sbb
mov
test
enter
mov
mov
adc
xchg
cltd
imul
xchg
das
mov
add
add
dec
clc
inc
std
decb
jae
mov
xchg
inc
scas
ljmp
aam
push
into
js
cmc
lahf
sub
fwait
dec
xchg
jnp
sub
jae
popf
adc
sbb
xchg
arpl
mov
cmpsl
add
inc
inc
sti
push
stos
jb
scas
ljmp
movl
mulb
stos
scas
lds
add
add
push
mov
data16
ljmp
lret
inc
scas
in
push
sbb
ljmp
jmp
add
imul
jp
ljmp
jg
cld
xchg
or
xor
imulb
mov
std
cld
xor
inc
jmp
and
icebp
pusha
mov
pushf
jne
lcall
hlt
test
pop
xchg
popa
pushf
jbe
shlb
cld
adc
clc
mov
cmpsl
cld
pop
and
call
pop
dec
add
in
or
icebp
call
mov
orl
jne
pop
sub
sbb
mov
shr
add
add
jae
clc
aad
add
mov
jae
or
mov
hlt
inc
call
pop
pop
cld
jnp
ret
mov
scas
pop
and
mov
add
scas
test
add
inc
and
inc
add
inc
and
xor
adc
jo
inc
pop
xlat
imul
insl
xchg
daa
pop
sub
or
and
cmp
rdmsr
clc
add
scas
or
xor
add
test
scas
xchg
stc
test
add
add
xor
add
scas
push
cmp
and
stc
jbe
lods
xchg
mov
scas
or
and
xchg
add
inc
not
add
ljmp
scas
adc
xchg
push
xchg
fwait
ss
xchg
stos
dec
jmp
fisubl
add
push
iret
xlat
xor
ljmp
loopne
add
das
psubsb
out
add
push
jecxz
lods
jmp
les
xor
mov
adc
add
push
out
cwtl
and
ljmp
and
xchg
into
push
scas
ljmp
lods
ljmp
xchg
cltd
cld
jmp
mov
into
pop
ror
aaa
add
jb
or
int
jmp
fs
push
cltd
cld
jmp
mov
inc
ljmp
data16
test
fwait
mov
add
sub
dec
sahf
cli
cld
mov
cld
ljmp
test
imul
jl
jne
dec
xchg
imul
out
add
adc
lea
cli
jnp
pop
adc
push
aam
jo
mov
dec
xchg
push
in
mov
testb
je
adc
call
cld
jne
add
add
adc
pop
rcll
jmp
adc
mov
fdivr
je
call
and
lock
je
repnz
in
sbb
add
cmp
inc
mov
mov
adc
pop
mov
push
push
jne
cmp
xchg
push
inc
and
jmp
jns
lret
mov
cmp
pop
and
sub
js
push
jp
std
sarl
inc
xchg
leave
popf
lds
add
arpl
sbb
jmp
sti
sbb
jg
test
mov
cltd
cs
cli
push
sar
movsl
add
jge
ljmp
or
mov
mov
cmpsl
add
std
lock
roll
sbb
add
xorb
xchg
addr16
push
add
cmp
add
sub
xchg
jmp
xchg
push
add
andl
in
jl
scas
sbb
out
arpl
fistpll
ljmp
mov
sti
addb
add
cli
out
andb
adc
xor
imul
mov
pop
lods
fld
test
movsb
popa
les
outsb
iret
jne
arpl
insl
jae
cmp
adc
out
addr16
addb
add
call
and
shrb
or
push
jne
jge
mov
sub
imul
add
in
jne
and
mov
lods
add
shr
mov
inc
push
push
lock
rcrb
cld
fisttpl
add
lds
cmp
nop
xor
in
popf
adc
xchg
aad
jle
clc
mov
pop
and
inc
push
insl
xlat
bswap
sub
inc
out
icebp
dec
xchg
adc
jg
push
data16
pop
xor
mov
and
sbb
xchg
pop
add
pop
mov
add
scas
aaa
shll
sbb
add
pushf
or
aam
jne
ffreep
pop
les
push
sbb
mov
mov
cli
add
call
jne
testl
adc
jno
dec
je
pop
push
addl
add
out
sbb
outsb
add
stos
ret
repz
cmp
int
dec
test
lods
iret
es
xor
test
pop
mov
pop
xchg
cmp
test
xorb
sub
rolb
inc
push
and
ljmp
test
jg
mov
xchg
outsl
dec
push
es
pusha
pop
adc
ljmp
push
aam
sub
scas
mov
ljmp
xchg
ljmp
pop
sub
add
cmp
xchg
cmp
aaa
sub
ljmp
sub
fidivs
xchg
xchg
jg
insb
stos
stc
movsb
xchg
sub
cmp
mov
sti
adc
mov
mov
cld
aam
gs
in
mov
hlt
cmp
insb
cmpsb
pop
inc
imul
add
aam
out
mov
or
jb
and
add
sbbb
ljmp
cmp
xchg
jmp
jb
in
sub
in
shr
add
add
cltd
ljmp
xchg
pop
daa
or
jmp
xor
and
sbb
rcrb
ljmp
sbb
add
or
inc
mov
xchg
or
adc
nop
repnz
rcrb
push
call
fs
cld
jne
adc
adc
lods
cld
mov
scas
leave
ret
add
in
push
mov
push
sbb
mov
mov
jns
inc
xlat
popa
in
orl
cmp
mov
sbb
scas
addl
fwait
iret
cmovo
adc
inc
cmpsb
mov
inc
and
imul
inc
add
jno
adc
out
orl
mov
jb
fstl
add
add
mov
push
les
sar
call
add
imul
fwait
lea
inc
scas
incb
stos
repz
ljmp
repz
icebp
mov
add
ljmp
mov
ljmp
cld
pop
and
negb
sub
xchg
out
jl
add
add
data16
scas
pop
jmp
push
ret
add
ljmp
pop
lods
jnp
add
jmp
mov
data16
jbe
add
cli
sub
and
inc
sbb
clc
fs
icebp
pop
popl
fmull
xchg
ja
int
inc
popf
jns
jne
faddl
mov
cltd
jne
daa
daa
sbb
repz
faddl
sbb
push
mov
sub
add
sbb
mov
sarb
push
std
ffreep
mulb
stc
insl
mov
sub
cmc
mov
out
and
lods
sbb
cmp
fiaddl
jmp
test
ljmp
push
cli
into
mov
out
mov
call
add
adc
fdivs
jge
push
mov
push
les
cld
test
or
cmp
int
lcall
push
std
push
add
lret
pop
call
xor
repz
cmp
bound
inc
mov
inc
add
inc
add
jmp
dec
cld
scas
cli
in
pop
bound
int
jl
jp
mov
cmp
pop
int
push
mov
cmpl
test
jne
lea
push
mov
setbe
incl
xor
ljmp
jp
push
and
add
repz
add
scas
add
test
inc
mov
jne
fsubr
pop
xchg
or
aas
scas
jno
cltd
jo
add
add
pop
or
adc
sub
andb
ljmp
mov
cmp
js
cli
mov
js
mov
imul
ljmp
add
add
ljmp
xor
jns
push
aad
jno
aad
push
ljmp
sub
xchg
mov
clc
ret
cmp
sub
jno
mov
out
loope
add
sbb
pusha
add
js
jmp
jno
add
lods
xor
push
mov
inc
roll
jle
pop
mov
add
mov
add
jge
push
pop
and
outsl
bound
fildll
insl
mov
in
lcall
ss
mov
ja
jno
jne
inc
imul
es
lods
ljmp
pop
and
pushf
mov
push
fnstcw
jno,pn
adc
mov
adc
add
add
add
lcall
cld
jl
loopne
lcall
lcall
add
add
mov
pop
cmp
in
pop
sub
push
or
adc
rcrb
push
test
decl
cmp
cmp
pop
ret
sbb
or
push
push
add
cmpb
cli
hlt
add
add
add
in
xchg
scas
addr16
and
adc
xchg
add
out
pop
inc
or
lahf
cmc
add
push
jp
loope
aad
arpl
adc
lahf
sar
push
jp
rcll
inc
jnp
aas
scas
sub
add
jbe
incb
adc
or
fistpll
sahf
addl
add
ficomps
add
scas
xchg
jl
fimull
xor
addr16
add
or
adcb
cmp
mov
and
ja
mov
add
pop
mov
add
scas
jne
mov
xchg
shll
outsb
xchg
jbe
xchg
jne
push
test
jbe
mov
xchg
xchg
inc
xor
jmp
leave
add
add
add
orb
scas
sbb
jne
scas
addb
add
mov
ljmp
xchg
xchg
add
mov
imul
add
lods
jne
jge
mov
add
add
hlt
and
addl
outsb
mov
jge
push
push
cld
inc
jmp
pop
faddp
sti
in
xchg
jmp
push
and
pop
push
cmpsb
xchg
push
adc
mov
vpsubusb
push
je
inc
push
push
das
outsl
xchg
jae
test
daa
cmp
data16
xor
add
lods
lods
inc
inc
mov
add
inc
and
fcomps
fsubr
call
sti
jmp
xor
dec
mov
ret
push
mov
add
cld
addr16
test
or
cld
outsl
cmp
xbegin
xorl
mov
jae
je
jae
je
push
cld
out
cld
inc
xchg
rcll
sub
sub
jne
das
fiadds
add
mov
jmp
cmp
add
add
add
pusha
fimull
scas
pop
jnp
mov
aas
scas
in
imul
add
aas
scas
test
mov
jnp
addr16
sar
jecxz
inc
fisubs
push
add
mov
add
scas
js
push
sub
push
or
mull
xchg
add
add
jb
sub
test
lods
ja
lods
jmp
pop
jmp
add
xchg
ljmp
test
je
fildl
jge
xchg
ja
push
jno
jp
inc
lcall
jle
mov
fidivs
clc
ret
jmp
sub
dec
gs
iret
push
push
jl
fiadds
add
add
cs
ror
push
push
add
mov
add
insl
jno
scas
ljmp
sub
mov
insl
addl
jo
cmp
mov
std
cmp
popf
adc
mov
orl
inc
cmp
lock
mov
out
jmp
fiaddl
pusha
add
int
idivl
push
lds
pop
mov
cs
insb
negl
cld
xor
adcl
inc
mov
decb
bound
jae
add
es
dec
cwtl
das
rclb
add
xor
and
cld
push
mov
xchg
pop
push
add
add
xchg
push
das
add
out
test
cmp
xor
lods
push
cmp
mov
adc
add
jp
push
fisubl
rorb
add
pop
add
daa
pop
pop
subb
test
cwtl
add
movsb
add
sti
test
or
addr16
mov
testl
xchg
test
cmpsb
ret
add
add
aad
mov
rorl
push
xchg
ja
mov
inc
xor
inc
je
sub
add
xchg
ja
jge
iret
fwait
ja
inc
pop
sbb
cmp
push
fcomps
jne
inc
inc
ljmp
inc
inc
mov
add
scas
sub
sar
subl
inc
pop
mov
std
je
jmp
roll
add
add
in
aaa
rcrl
out
mov
mov
mov
out
ljmp
cmpsb
jae
pop
mov
ljmp
and
aam
jnp
and
out
das
not
stos
add
stos
sahf
add
jg
adcl
sbb
pop
stos
pop
test
sbb
push
es
sub
add
add
adc
loop
scas
ljmp
cs
jmp
je
lods
jg
mov
xor
inc
mov
add
jg
imul
out
and
add
cmp
ja
push
shll
jmp
inc
mov
push
cs
cld
cld
jns
inc
jmp
insl
lock
insl
dec
icebp
fcoml
dec
cltd
push
or
lods
ljmp
mov
xchg
pop
stos
ljmp
xlat
dec
cld
inc
dec
cmp
and
test
addb
jle
lea
adc
ljmp
xchg
ret
inc
jg
add
xchg
push
mov
xchg
jnp
mov
mov
add
add
jmp
js
std
mov
ud0
fcoms
inc
add
jp
push
add
push
pop
adc
push
xchg
jle
lret
mov
add
std
shll
scas
or
pop
std
adc
testb
xchg
popa
adc
sti
scas
jle
push
add
fcomps
roll
sub
sbb
sqrtps
add
mov
xchg
sar
mov
inc
ljmp
shlb
enter
push
xor
push
jnp
pop
push
jae
mov
ljmp
shll
clc
sub
roll
ljmp
scas
adc
ljmp
jo
add
idiv
fisttpll
xchg
push
out
ljmp
iret
insl
and
sti
add
pop
hlt
test
sub
out
ljmp
xor
jmp
and
sub
stos
xor
out
notb
inc
jge
add
fdivrs
out
and
cmp
jge
push
mov
addb
pop
imul
inc
add
pop
ljmp
lods
ljmp
in
test
es
stos
jns
push
bound
imul
inc
addb
jmp
bound
add
lods
ljmp
push
add
add
jae
es
test
add
lods
adc
add
dec
cld
jle
lock
cmp
mov
push
lock
dec
push
adc
sar
add
out
push
inc
test
add
push
jl
pushl
faddl
sbb
jno
or
in
cmp
add
push
cmpb
add
push
mov
push
loop
call
hlt
or
push
in
scas
cld
test
aaa
inc
jae
lahf
jmp
test
inc
add
stos
sti
add
push
fwait
stc
pop
arpl
xchg
sar
cmp
pop
mov
stos
fwait
or
cmpl
ror
in
xchg
add
mov
lret
and
jnp
add
add
roll
sub
xchg
into
insb
arpl
repnz
popa
jle
jecxz
fs
sbb
dec
and
mov
cld
rcrl
ds
clc
mov
fs
sbb
outsb
inc
popf
out
push
add
in
fmuls
pop
decb
add
cli
pop
dec
ljmp
stos
push
add
add
add
into
rcrl
pop
in
sub
sub
das
ret
jg
call
fcoml
mov
clc
ret
andl
fsubrl
loop
das
sub
add
adc
ljmp
fsubs
addr16
ljmp
mov
fs
or
je
daa
add
add
clc
and
xchg
adc
lahf
push
stc
divb
arpl
inc
out
shlb
push
push
jae
aaa
aaa
mov
push
insb
push
add
scas
mov
cld
mov
aad
sbb
lahf
sub
push
bnd
out
sub
jmp
jb
outsb
cld
aad
gs
push
pop
and
sar
or
call
mov
push
jg
shlb
dec
lret
hlt
add
rclb
add
add
mov
ret
cmpsl
xchg
inc
push
cld
movsb
xchg
sbbb
xchg
cld
jne
or
test
cmp
rorb
jno
dec
je
adc
out
cmp
xchg
sub
test
cld
fcoml
xchg
arpl
inc
lret
ds
pushl
cld
jne
or
subl
dec
ljmp
add
out
pop
ret
mov
push
and
outsl
pop
lcall
incb
xchg
sar
hlt
mov
or
mov
mov
inc
xchg
push
mov
add
add
push
inc
je
xor
add
push
and
test
ret
out
add
daa
pop
test
push
inc
std
cld
incb
mov
notb
ret
bound
jb
fdivrs
stos
mov
and
popa
movsl
pop
adc
adc
add
mov
mov
dec
out
fldl2e
mov
movsl
sbb
ret
rcrl
or
and
pop
stc
add
pusha
sbb
popa
mov
shlb
std
ret
mov
insl
inc
std
leave
pop
iret
jne
jbe
pop
sbb
div
popa
add
popa
pop
insl
iret
popf
cld
fdivl
pushf
adc
jae
xor
pop
xor
add
add
add
add
add
adcb
cs
jmp
mov
rcll
push
push
bound
add
insb
jmp
je
out
clc
pop
mov
incb
rclb
stos
addr16
inc
xorl
movsl
jmp
lret
adc
sbb
adc
jae
add
xlat
subl
jbe
int3
lods
or
pop
fwait
add
or
adc
rclb
ret
push
mov
call
xor
data16
cmp
fbstp
cmp
add
out
jne
arpl
mov
pop
inc
hlt
sbb
or
paddsw
add
clc
sbb
or
std
jns
ror
sbb
cmp
loop
popf
xchg
add
cmp
jg
pop
clc
scas
or
sti
xchg
add
out
mov
xor
cmp
test
addl
repz
add
stos
sub
scas
cld
pop
test
mov
mov
adc
add
jmp
xchg
scas
orl
scas
cmpl
adc
pusha
fwait
outsb
add
inc
jo
divb
add
stc
fwait
lret
addl
scas
ljmp
xchg
add
adc
adc
add
testb
jg
add
stos
fisttpll
les
push
pop
movsb
pop
jge
aad
mov
xor
enter
add
bound
imul
enter
das
lret
sub
mov
pop
enter
fisubs
sbb
pop
lcall
sbb
mov
daa
add
add
pop
jno
sub
push
fcoml
dec
add
and
addr16
addl
movsl
outsl
push
jno
mov
insb
clc
mov
jne
cmp
or
sbb
add
adc
out
call
pop
mov
inc
jmp
clc
rorl
lods
ljmp
stos
add
jmp
cmp
add
testb
std
out
dec
and
add
inc
cmc
jmp
push
pop
rcrl
add
jl
jne
add
mov
pusha
dec
cld
call
and
pop
imul
push
mov
cmp
push
pusha
pusha
jle
inc
fs
fdivrs
adc
xor
sub
je
bound
or
jno
mov
clc
jbe
push
inc
xor
xor
xor
add
pop
cli
cmp
jne
scas
cwtl
repnz
add
add
jnp
loopne
mov
jae
xor
sti
xor
fwait
leave
jns
pop
ljmp
lea
clc
mov
add
lahf
out
push
fdivrp
rolb
inc
outsl
call
ret
mov
ja
adc
nop
add
mov
inc
pop
gs
mov
sub
scas
in
add
push
rolb
or
out
shr
dec
lahf
sub
push
aad
xor
shlb
bound
mov
jbe
mov
adc
jne
mov
jbe
lock
sub
mull
jmp
out
mov
in
pop
scas
div
push
addr16
mov
out
lret
mov
decl
movsl
popa
adc
ljmp
mov
stos
incl
mov
lcall
popa
fldt
in
jecxz
ljmp
add
sub
push
sar
and
pop
sub
mov
insl
insb
mov
or
mov
sub
in
stc
cmp
mov
ljmp
test
bound
push
imul
insb
outsb
enter
ljmp
shr
jmp
push
or
dec
insb
cld
jmp
lods
mov
fs
enter
sub
add
adc
hlt
cmc
cmpsl
cld
mov
test
cmp
mov
jmp
je
aaa
dec
call
or
mov
pop
inc
and
in
sti
jne
add
add
out
pop
cld
xchg
and
add
cld
lea
adc
in
sti
je
ss
push
out
test
fwait
cmp
ss
inc
out
test
fwait
sub
sti
lret
std
push
add
aam
xor
out
add
loop
lock
mov
testb
add
scas
dec
push
jmp
add
lret
cwtl
arpl
clc
bound
mov
dec
push
xor
inc
add
add
adc
data16
add
lcall
push
push
jne
jnp
sahf
scas
push
ljmp
fwait
sar
sub
stos
imul
sbb
ljmp
sar
pop
and
negl
add
pop
ljmp
aad
jmp
scas
and
repnz
ljmp
repz
jecxz
insl
ja
fs
jne
imul
lret
push
sub
ljmp
fistpl
jmp
and
jmp
arpl
push
add
push
and
sbb
dec
jmp
lds
stos
add
add
add
fisttps
orb
mov
rclb
add
push
cs
rclb
test
push
out
mov
jae
cld
pop
push
shl
fmulp
xchg
scas
mov
jmp
popa
mov
mov
dec
mov
mov
test
cmp
jb
dec
ds
add
sbb
xor
loopne,pt
jmp
lods
push
cld
ljmp
das
sub
pop
and
mov
aaa
jae
call
insb
and
sbb
aaa
hlt
lea
mov
add
inc
cld
call
jb
jmp
sub
movsb
in
bnd
push
js
or
push
mov
or
dec
mov
dec
call
shrl
inc
mov
jo
aam
adc
mov
lea
shlb
inc
data16
xor
int
xor
mov
mov
mov
xor
push
loope
push
add
push
add
leave
adcb
int
lret
inc
mov
mov
inc
incb
std
cltd
xor
push
decl
push
addl
push
mov
xchg
dec
inc
jb
int
scas
imul
scas
push
jle
push
push
dec
incb
jge
das
call
ljmp
stos
ljmp
add
add
sub
scas
ja
pop
xchg
sbb
stos
sar
flds
scas
outsb
sub
mov
sub
ljmp
test
ljmp
or
sbb
ljmp
sbb
enter
addb
ret
cmc
je
imul
push
pop
push
mov
rolb
add
pop
shr
subb
add
fs
bound
sub
ljmp
nop
in
mov
mov
in
mov
pop
push
pop
mov
lods
mov
add
push
icebp
jbe
clc
shlb
push
sti
addr16
mov
notl
dec
sar
mov
push
sub
add
add
dec
mov
fs
inc
add
sub
sbb
jl
jmp
pop
dec
and
push
mov
clc
inc
call
ljmp
aam
add
mov
cwtl
add
out
cmp
jl
push
call
cld
incl
jg
mov
cltd
push
leave
xchg
repnz
mov
add
out
lea
in
push
ljmp
outsb
rorb
jo
mov
jmp
psubb
sbb
std
out
push
jmp
in
and
out
data16
cmp
scas
push
add
testl
add
cltd
pop
cs
jl
stos
ror
add
into
inc
jae
rolb
xchg
dec
mov
jno
mov
fwait
xchg
cli
aas
scas
rolb
adc
je
rolb
xchg
mov
bound
jno
adc
jae
ffree
and
shr
add
push
pop
adc
push
add
mov
push
jle
ljmp
mov
stos
fsubs
cli
sbb
lcall
add
insl
add
sub
cmc
jb
daa
cld
aam
iret
cmp
jae
add
inc
pop
mov
xchg
pop
cs
add
in
andps
adc
dec
sub
mov
stos
mov
xor
jns
aam
adcb
aam
xor
jno
je
add
mov
test
lods
shr
sub
jmp
cs
scas
jbe
adc
lods
ljmp
sbb
in
and
fldl
loope
shl
call
or
mov
call
add
push
out
pop
jbe
rclb
sub
imul
addr16
cmp
pop
pop
rcr
xor
jbe
repnz
lods
push
dec
add
daa
add
xchg
sti
iret
pop
xor
ret
add
hlt
mov
test
je
cmpsl
add
dec
imul
jmp
repz
aaa
add
push
aas
jb
pop
ret
adc
push
add
cmpsb
add
aaa
cld
ljmp
cld
jg
jmp
add
loope
pop
sbb
xchg
inc
lret
adc
inc
call
xchg
jmp
rolb
mov
scas
push
add
adc
out
pop
jnp
xchg
dec
adc
inc
sar
sbb
imull
xchg
add
scas
aam
pop
scas
add
pop
cmp
aam
out
push
pop
movaps
mov
incl
scas
push
sarl
xor
imul
and
mov
sub
test
jl
mov
jns
lods
ds
mov
cmp
inc
cmpsb
jmp
leave
mov
fadds
cmp
scas
push
mov
and
sbb
shr
fstpl
adc
mov
clc
sub
sub
adc
scas
ljmp
and
idivb
pop
push
sub
pop
ljmp
pop
addr16
clc
mov
fisubrs
loop
pop
in
leave
mov
xchg
stos
sub
add
test
lcall
imul
ljmp
add
lods
fnstcw
sbb
mov
insb
jo
push
add
add
jmp
or
jle
push
shll
jmp
popa
cli
imul
cld
pop
push
adc
in
add
pop
push
or
sub
ljmp
mov
push
inc
mov
lea
pop
sti
pushf
aad
inc
and
sbb
fs
sbb
sbb
add
or
dec
lcall
push
lea
mov
pop
jmp
addr16
call
add
icebp
inc
or
out
inc
adc
ret
or
xchg
cwtl
roll
xchg
cld
cmp
mov
add
imul
mov
decl
push
or
pop
ffreep
pop
push
cmpsb
or
sbb
call
add
push
adcb
push
adc
sti
jne
dec
mov
scas
push
orb
inc
fwait
push
lock
scas
into
inc
je
dec
lret
pop
cltd
mov
mov
add
je
sub
inc
sahf
adc
test
add
scas
xchg
lret
sti
popa
ss
ret
inc
adc
sub
dec
push
fcomp
or
adc
lea
add
add
mov
cmc
lahf
dec
je
fisubl
pop
add
dec
aad
adc
dec
and
popf
sti
mov
ljmp
and
add
daa
jle
and
jge
cld
pop
jne
cwtl
and
sub
push
hlt
xor
cli
jp
pop
popa
cld
and
jge
push
iret
cld
push
sub
pop
and
xor
and
inc
loope
sbb
and
cli
stos
add
and
add
lock
cs
icebp
mov
cs
inc
lods
ljmp
or
notb
add
lods
outsl
repz
sub
cmp
dec
inc
pop
ret
add
push
roll
add
add
mov
jbe
addr16
ljmp
call
cld
jmp
stc
sbb
jb
icebp
es
je
and
aam
or
inc
jae
cmp
adc
sbb
imul
jb
jne
clc
lahf
inc
cmc
push
mov
add
scas
in
push
adc
push
ljmp
inc
fistpl
push
fsubs
push
lods
out
or
mov
pshufw
inc
jnp
sub
add
push
jmp
adc
cld
ljmp
int3
jmp
pop
mov
dec
lods
in
insb
push
or
push
imul
into
pop
das
rorb
push
sbb
addr16
adc
nop
fistpll
cmp
fstpt
cmp
scas
sbb
adc
pop
pop
aas
scas
push
pop
aas
scas
dec
pop
aas
scas
xor
aas
scas
or
push
pop
aas
scas
es
aas
scas
xchg
pop
aas
scas
xchg
pop
aas
scas
push
pop
aas
scas
jbe
jmp
push
mov
clc
sbb
fistl
mov
mov
adc
inc
ja
sub
push
sub
add
scas
test
mov
mov
mov
add
push
mov
fwait
inc
push
xor
add
scas
ljmp
jb
mov
hlt
sub
ljmp
mov
das
mov
pusha
popf
arpl
ljmp
stos
ljmp
outsb
add
scas
ljmp
fadd
call
add
add
add
push
fstpl
stos
ljmp
or
add
ret
inc
outsl
stos
mov
loope
stos
ljmp
mov
bound
adc
insb
aas
jcxz
bound
insl
aas
push
inc
daa
inc
mov
in
jmp
jo
ja
cmp
cld
xchg
jne
shll
add
add
cmp
data16
leave
lods
es
lcall
jbe
pop
mov
push
mov
in
fnstcw
add
jne
sub
mov
push
jbe
pushf
mov
or
jmp
xchg
hlt
cli
fcoml
inc
pop
test
or
sar
ljmp
mov
or
fdivl
hlt
incl
add
add
repnz
pop
jmp
adc
push
mov
jmp
sbb
pop
xchg
cmp
mov
lods
adc
push
mov
fsubs
sti
jne
stos
adc
mov
lahf
ret
cmp
or
ljmp
inc
cmpl
lock
add
add
test
xor
cmp
test
mov
addl
inc
scas
into
inc
jae
into
repz
negl
out
pop
hlt
mov
daa
lahf
cmp
fwait
popf
adc
movb
push
mov
cltd
cmp
sbb
mov
into
inc
je
cmp
sti
jno
test
out
inc
test
std
repnz
dec
add
mov
ljmp
repnz
jg
jge
das
dec
in
mov
outsl
test
sub
gs
lods
add
jmp
pop
sub
aad
call
ljmp
push
gs
cmp
ljmp
xchg
movsl
aas
stc
push
jge
clc
jmp
pop
sub
jbe
xor
inc
mov
inc
shlb
sbb
fldl
repz
push
push
in
xchg
jbe
sub
cld
xchg
test
cmp
gs
insb
loope
adc
sub
mov
shll
jecxz
push
jne
add
mov
pop
jmp
daa
xchg
loope
cli
insl
scas
mov
add
mov
jbe
lahf
xchg
call
aad
push
push
addl
ljmp
pop
leave
sub
insl
push
push
push
add
xchg
dec
jb
call
sub
add
out
into
sbb
xchg
xor
ret
xchg
pop
jbe
push
lods
mov
add
in
add
add
add
in
cld
adc
dec
adc
mov
std
in
into
cwtl
std
mov
cmp
add
in
repz
jecxz
add
in
add
sub
inc
or
in
ja
out
shl
mov
scas
adc
push
mov
mov
or
cld
adc
inc
mov
push
jns
add
pop
repz
fmuls
aam
lods
pop
aam
xchg
push
adc
pushf
inc
jae
jle
add
add
xor
adc
outsb
inc
test
movb
jmp
inc
repnz
inc
cmp
sar
sbb
or
push
rolb
faddl
fistpl
or
scas
ljmp
fstpt
add
cld
mov
shll
out
cmp
mov
adc
adc
cmp
mov
movsb
aad
out
lods
mov
cmc
aas
adc
xor
xor
data16
arpl
shl
mov
popf
or
test
xchg
adc
add
inc
mov
mov
comiss
loop
scas
ljmp
xor
mov
fsubl
hlt
add
mov
je
push
fidivs
dec
cld
fs
aas
mov
loop
cmc
lds
mov
cltd
fldl
jmp
in
adc
inc
addr16
mov
inc
jmp
in
dec
repz
xchg
sub
jmp
mov
sub
add
add
inc
divb
decb
or
in
popf
fxam
mov
je
or
pop
mov
xor
sub
rolb
icebp
mov
dec
ret
push
pop
cwtl
cmp
or
add
mov
add
inc
mov
mov
inc
inc
jge
push
pop
dec
xchg
add
pop
pop
push
dec
cld
mov
dec
add
add
add
jmp
sti
je
loop
out
out
mov
xor
inc
add
fldt
add
call
in
aaa
jmp
lods
push
xor
ficoml
xchg
test
mov
call
nop
jns
inc
pop
aad
add
es
adc
and
sub
add
add
iret
mov
lret
shll
fcmovb
and
lret
enter
fcmovb
and
inc
js
cltd
inc
add
jb
adc
mov
adc
xchg
jno
and
inc
sar
addl
mov
scas
aas
fmull
mov
sbb
dec
lcall
into
pop
xor
push
sbb
cmpsb
push
sbb
pusha
add
ljmp
push
mov
icebp
dec
cmc
inc
cmp
test
imul
inc
sbbl
stos
ljmp
scas
ljmp
jbe
ljmp
daa
mov
fisubrs
pop
scas
loopne
jl
add
pop
jecxz
fadds
add
add
movsl
add
and
dec
cld
scas
mov
test
jg
push
in
outsb
lods
ljmp
movsl
ljmp
and
add
xor
fmull
sbbl
push
mov
xchg
and
cld
jmp
lods
popf
mov
ret
add
loope
or
jne
loopne
clc
jb
out
cld
sbb
mov
inc
add
dec
mov
in
pop
pop
test
add
pusha
je
lea
xchg
sbb
orb
inc
shll
jb
add
push
lahf
nop
push
in
call
rolb
cld
dec
pop
je
or
or
mov
inc
and
inc
in
push
mov
add
add
add
cmp
testl
in
cwtl
in
add
pop
aaa
push
mov
imul
add
loopne
ficompl
mov
into
inc
jae
stos
dec
lea
jmp
mov
mov
cmp
add
or
jmp
repnz
push
push
sub
loope
lcall
aaa
jae
and
add
and
pop
in
dec
add
outsb
sub
aam
or
mov
stos
add
out
mov
mov
fistl
push
scas
movsl
shlb
leave
jne
es
and
sub
repnz
add
sub
add
outsb
adc
mov
inc
jne
cmpl
pop
lcall
stos
dec
outsl
imul
rorb
je
scas
sub
sub
js
add
pop
daa
ficomps
enter
pushf
mov
xor
adc
xchg
lea
jmp
xchg
add
ret
js
jmp
movsl
aam
pop
add
push
cs
jbe
daa
mov
add
sub
jmp
dec
fldenv
mov
adc
jbe
push
inc
pop
adc
jae
bound
icebp
add
push
add
ja
fnstcw
push
cmp
push
push
shll
push
jb
lcall
push
out
cld
hlt
dec
faddl
pop
lds
jl
clc
push
repz
imul
bound
pop
add
jle
add
sbb
call
gs
mov
push
lea
mov
and
ficomps
push
adc
push
push
test
call
faddl
les
add
adc
test
add
mov
clc
jmp
insb
mov
mov
inc
xchg
pushf
rorl
imul
das
adc
and
jmp
jnp
jge
into
mov
pop
aaa
mov
fwait
push
inc
scas
and
add
sub
inc
inc
ljmp
stos
mov
inc
add
mov
dec
jnp
adc
add
add
add
xchg
and
in
and
xlat
cmp
pop
sbb
inc
mov
sbb
push
sub
push
jge
inc
xlat
pop
xor
xor
or
sub
jl
outsl
lods
sbb
and
add
xchg
imulb
ljmp
pop
adc
scas
mov
pop
les
pop
scas
sub
loop
mov
add
add
pop
add
jp
add
ljmp
jbe
repnz
outsl
push
addl
xchg
jl
fwait
outsl
cmp
pop
add
scas
int3
sub
dec
dec
inc
ljmp
insl
add
inc
cld
inc
mov
ret
insb
cmp
push
pushf
jno
ljmp
sub
sub
das
or
mov
or
push
inc
cld
jmp
sub
jmp
je
cli
call
movsl
jne
jb
jb
jmp
fildl
cwtl
add
add
inc
jmp
insl
ljmp
mov
mov
scas
lea
dec
roll
stc
fstps
pop
outsb
ret
imul
xchg
cmpsb
add
add
add
js
aam
cmp
sbb
jg
aam
mov
in
cmp
add
mov
pop
pop
cmp
ret
and
add
inc
xchg
clc
aam
mov
and
mov
cld
mov
add
add
lcall
scas
or
jae
sti
mov
sub
push
add
scas
mov
sub
xor
push
add
add
add
jmp
lcall
scas
push
add
lods
push
cmpsb
xorb
pop
ljmp
inc
out
shll
push
sub
pushf
pop
icebp
mulb
inc
subb
mov
xor
notb
pop
leave
cld
aam
add
ljmp
or
jns
data16
xor
and
jo
dec
cmp
sbb
jae
add
mov
test
sbb
jmp
and
inc
scas
ljmp
fcoms
popa
scas
mov
stos
ljmp
mov
movsl
ret
popa
add
test
add
jb
and
cmpsl
jne
mov
jno
lea
xlat
or
gs
out
aaa
ljmp
pusha
xchg
add
xchg
or
xor
je
int
mov
shll
jmp
inc
out
mov
je
addl
add
add
add
add
xchg
add
jbe
or
sub
inc
dec
insl
data16
push
testl
dec
mov
ljmp
xor
icebp
jo
inc
mov
cld
push
add
or
add
cmp
jmp
inc
stos
add
jge
jmp
jnp
push
pusha
add
les
add
push
add
add
mov
sbb
jnp
adc
call
mov
sub
cmp
mov
jp
mov
or
aam
xchg
fcoml
nop/reserved
repz
jmp
xchg
xchg
cld
incl
mov
push
loope
movsl
scas
aam
mov
das
je
in
out
xchg
ljmp
in
popa
dec
jnp
cmpsb
mov
adc
push
jle
push
js
add
clc
jle
sub
inc
ljmp
push
cli
adc
mov
scas
idivb
push
push
add
dec
rclb
mov
mov
scas
push
jns
ret
pop
xor
push
add
add
add
lea
inc
scas
ljmp
sbb
cmp
insl
out
insl
inc
std
loop
add
cmpsb
lcall
mov
inc
mov
ljmp
loope
mov
aad
ljmp
ljmp
or
push
jnp
push
mov
jmp
inc
aam
or
add
ljmp
fcom
fisttpll
inc
fisubrl
insl
cmp
jno
mov
aam
add
adc
sub
jnp
jmp
jnp
sub
ljmp
lods
ljmp
jecxz
les
jno
fxch
xor
xchg
call
lret
shrl
mov
add
lods
outsl
add
lods
insl
push
test
add
jb
inc
cmc
jecxz
ljmp
lods
ljmp
inc
cmpsb
mov
imul
cmp
xor
add
add
add
add
ljmp
out
addr16
rorl
mov
in
fucomp
add
ret
cld
call
jge
push
inc
xorl
push
cld
inc
lcall
jp
xor
dec
adc
rcr
jmp
punpcklwd
push
and
xchg
jmp
add
call
test
sub
add
ret
jae
fdivrl
jae
fnstsw
je
int
pop
and
movl
add
loopne
push
imul
ja
mov
add
add
push
and
test
jg
inc
add
fnstcw
daa
jmp
sub
addb
js
cmpsb
mov
add
sub
fstl
mov
pop
add
std
pop
dec
lret
out
imul
lret
out
pop
gs
or
imul
add
ljmp
inc
push
push
xchg
cmp
mov
in
jmp
out
mov
push
mov
add
cmpsl
push
adc
in
jnp
push
js
arpl
adc
scas
push
or
and
xor
inc
add
fldt
loopne
inc
data16
add
cmp
inc
jno
add
mov
addl
add
insb
jmp
mov
repz
mov
jmp
jmp
lods
arpl
and
lods
imul
gs
in
pop
cmp
sbb
jo
sarl
jae
cs
add
aaa
inc
in
cs
push
fidivs
imul
out
ljmp
and
cmp
in
rorb
mov
add
xchg
repz
leave
mov
mov
xchg
dec
ret
nop
add
ljmp
xlat
ljmp
mov
jne
sub
or
ljmp
test
or
ret
push
mov
call
add
push
cmp
cmp
fnsetpm(287
mov
pop
adc
into
and
push
pop
inc
lock
push
push
mov
leave
mov
or
jo
scas
pop
lcall
inc
add
pop
add
pop
mov
adc
add
adc
mov
adc
ret
add
sbb
mov
ret
inc
mov
call
jnp
scas
push
pop
je
fucomi
fildll
call
leave
mul
cmc
mov
push
and
shrb
pminsw
fldl
ljmp
lcall
insl
push
enter
cmc
add
xchg
repz
add
es
into
imul
lods
adc
in
push
mov
icebp
in
subl
in
in
push
add
ret
lods
inc
in
js
pop
adc
cmp
ljmp
xor
add
mov
sub
insl
jmp
out
xor
cmp
scas
ljmp
sub
jmp
cmp
repz
cli
jae
std
ror
inc
push
xor
xlat
cmpsl
and
out
mov
jg
mov
inc
push
xor
jmp
lods
jecxz
subb
push
jb
jecxz
pop
push
call
push
in
orl
adc
scas
and
add
adc
fs
push
xor
add
int
dec
push
or
mov
fidivl
adc
cld
jbe
addb
fwait
inc
adc
xchg
inc
adc
adc
lcall
sbb
jne
adc
and
gs
mov
dec
sbb
cmp
add
inc
and
data16
mov
jbe
popa
vmread
fildl
add
or
mov
or
dec
mov
int3
sub
mov
dec
adc
cmp
in
test
add
addb
shll
scas
xor
aam
inc
add
out
sbb
push
and
pop
mov
push
decl
pusha
out
stc
mov
lcall
fcmovnbe
add
inc
add
scas
enter
add
add
loope
pushl
aam
test
pushf
mov
xchg
scas
inc
add
mov
or
mov
int
out
adc
add
add
dec
mov
incl
push
xchg
movb
xor
xor
cli
mov
and
adc
outsb
inc
sbb
push
xchg
jmp
dec
clc
inc
add
pop
inc
mov
ljmp
arpl
pop
sbb
ljmp
xchg
push
sub
sub
add
add
test
out
cmpl
ljmp
arpl
mov
sbb
add
add
sub
testl
ljmp
imul
sub
bound
and
mov
cmp
cltd
call
push
call
cld
add
das
cld
gs
xchg
test
jne
adc
jmp
xchg
jmp
dec
cltd
adcl
lods
inc
adc
fbld
jbe
push
fs
loopne
sub
fwait
movhps
mov
add
aaa
jg
imul
je
into
jo
dec
jl
adc
pop
ss
rorb
xchg
and
mov
and
add
mov
aas
dec
push
dec
repz
negb
xchg
cld
inc
sbbb
out
inc
fsubrs
cld
out
inc
add
ds
out
cmp
add
iret
xchg
cld
xchg
ljmp
aaa
iret
xchg
and
inc
mov
clc
jae
nop
mov
add
and
push
sbb
add
notl
push
xchg
shl
aas
scas
repz
xor
dec
aaa
out
sbb
aas
scas
mov
lods
cmp
push
lea
lahf
mov
add
add
sub
sub
sti
mov
mov
sub
xchg
xchg
divl
push
sub
push
pop
mov
xchg
xchg
lds
scas
inc
mov
or
or
and
ret
ret
popa
clc
adc
repnz
lcall
ret
loop
inc
mov
mov
lcall
sub
and
jg
sub
repnz
add
add
jmp
addr16
mov
inc
dec
pusha
or
ljmp
pop
sbb
sbb
out
add
inc
mov
ret
cltd
addr16
movsl
les
test
mov
enter
xor
pop
xor
jecxz
mov
scas
pop
dec
add
adc
add
add
in
lods
pop
add
xchg
fwait
or
xor
stos
push
popa
in
cmp
in
je
xor
jecxz
cld
sbb
shlw
inc
movsl
and
mov
cwtl
cld
sbb
lcall
mov
jge
jbe
pusha
icebp
stc
das
mov
std
sub
icebp
cmp
add
out
add
pop
pop
push
enter
push
out
data16
add
xchg
out
push
add
adc
xorb
push
pop
jg
inc
push
jmp
nop
inc
out
fstpt
repnz
in
lea
jbe
jne
shlb
imul
es
xor
jmp
lods
in
push
pop
insb
fcoms
pop
or
add
cld
inc
jl
incl
add
add
mov
or
mov
add
mov
mov
mov
sti
cli
xlat
scas
add
or
add
stc
mov
imul
jmp
adc
inc
sahf
jecxz
data16
add
fimull
mov
sbb
add
mov
and
add
add
adc
rclb
add
sub
cmp
leave
ror
je
pop
or
cwtl
adc
scas
ljmp
scas
jne
mov
cmp
adc
xchg
scas
ljmp
jne
pop
xchg
test
ljmp
ret
stos
ljmp
mov
fadd
cmp
sub
cld
pop
inc
loope
pop
mov
scas
insl
xor
cmp
adc
xchg
stc
sub
mov
ljmp
cs
ret
ljmp
shrb
subl
rcll
xor
pop
sub
mov
leave
xrelease
xor
mov
pop
push
xchg
sub
xor
xchg
sub
add
add
adc
scas
ljmp
outsb
cmp
out
inc
mov
cld
hlt
push
std
inc
jmp
outsl
clc
test
lods
ljmp
es
frstor
jg
lahf
shlb
adc
sar
pop
cld
inc
add
test
jne
jo
add
jg
call
sbb
aam
ja
inc
mov
sar
mov
sti
jne
std
adc
adcb
cld
push
lret
sar
inc
push
loopne
in
test
push
sbb
lcall
roll
inc
jmp
clc
sahf
adc
add
test
insl
out
add
pop
push
inc
js
adc
je
fcompl
jo
push
mov
add
sbb
add
outsb
adc
lret
mov
mov
xor
push
mov
adc
or
xor
fists
je
int
pop
mov
or
add
test
add
inc
mov
sub
std
mov
nop
dec
or
mov
fisubrs
add
sub
or
out
fwait
aas
repz
scas
ljmp
rcrl
out
mov
xchg
negl
rcll
pushf
sub
out
cs
gs
xchg
dec
adc
in
inc
or
xchg
jnp
or
adc
sub
pop
nop
jmp
cmp
rorl
in
bound
outsl
pop
and
pop
dec
cmp
adc
stc
or
adcl
xchg
out
cli
jg
icebp
xchg
mov
or
hlt
int3
add
add
add
hlt
xchg
out
mov
in
shlb
in
icebp
mov
dec
cmc
push
fs
jg
loopne
cmc
not
ss
ffree
mov
jmp
inc
lock
add
ljmp
mov
repz
lahf
ss
mov
rorb
xchg
lock
xchg
cmpsl
xor
mov
pop
stos
push
mov
fwait
rcr
or
stos
insb
inc
ret
scas
push
sub
and
push
ja
in
xor
aam
mov
nop
scas
mov
pop
outsl
xor
into
aam
add
nop
fidivs
in
add
add
rcll
cmp
dec
ret
movsb
jbe
clc
cmp
sar
nop
dec
jge
mov
mov
lock
push
shrb
mov
test
stc
cmp
and
pop
sbb
ret
pop
xchg
xchg
add
push
scas
in
or
into
sub
mov
adc
push
aaa
testb
pop
dec
adc
sbb
ljmp
popf
add
dec
mov
mov
ret
fildll
pop
call
mull
aaa
adc
test
in
push
fldl
lcall
int
fucomi
jl
cld
movsl
cli
push
stc
jnp
inc
in
lods
cli
inc
jmp
lods
enter
mov
fldl2e
inc
add
stos
ljmp
ljmp
lock
push
dec
mov
xchg
sub
leave
stc
jb
scas
xchg
xchg
push
addr16
mov
popl
ljmp
cltd
scas
mov
cmp
jo
xor
in
ljmp
xchg
ljmp
cmp
and
inc
mov
cld
je
outsb
inc
fstpl
jmp
test
mov
loopne
push
and
jl
cld
xor
je
std
fsub
add
mov
je
jb
call
add
pop
mov
mov
xchg
test
jmp
mov
ljmp
mov
push
jne
je
jae
aam
mov
ljmp
cmp
xor
pop
cld
je
insl
ds
jnp
sti
jne
mov
inc
add
mov
fmull
and
js
es
lds
lock
pop
cmpsb
jo
js
lea
xchg
lahf
cld
xchg
jmp
rcrb
nop
rolb
hlt
std
lock
dec
call
jmp
or
nop
push
in
and
add
je
add
push
scas
pop
addr16
ficompl
ljmp
xchg
mov
mov
mov
popl
scas
adc
cmpsb
adc
push
push
adc
aas
scas
lcall
repnz
inc
mov
or
sti
hlt
pop
and
cmc
mov
mov
adc
loope
sarl
inc
leave
mov
push
jnp
jmp
xchg
mov
pop
fcoml
add
scas
ljmp
aaa
push
add
gs
add
add
add
xor
add
daa
negb
cmp
add
ljmp
scas
mov
out
lods
jmp
add
and
xor
xor
jmp
sbb
cwtl
jmp
cmp
jae
pop
in
pop
push
test
mov
or
xor
sub
scas
ljmp
insl
mov
and
outsb
dec
sub
pop
stc
ljmp
add
mov
ljmp
push
sbb
inc
jmp
ja
inc
inc
xor
cmp
add
mov
out
jmp
jl
mov
in
jmp
pop
sbb
add
out
mov
fs
sti
dec
movsb
and
dec
jne
pushf
jne
lret
add
fmull
push
add
ret
call
shlb
sti
lcall
mov
aaa
call
add
push
add
add
xchg
test
jmp
out
dec
mov
add
add
repnz
xor
cs
je
and
je
pop
das
testb
test
mov
xchg
data16
js
sbb
stc
outsl
insb
add
iret
scas
pusha
stc
mov
mov
push
or
sbb
iret
inc
icebp
je
adc
cli
mov
clc
add
xchg
mov
test
or
stos
xchg
lods
cmp
nop
xchg
jae
nop
cmp
daa
hlt
cmpsl
ret
ja
xchg
dec
mov
mov
adc
cmp
or
sar
add
decl
dec
mov
aaa
subl
shrb
or
stos
ljmp
div
pop
add
sbb
inc
mov
sbb
lcall
mov
lods
gs
xor
mov
cmp
push
ljmp
mov
stos
mull
sub
lds
rcll
cltd
gs
shl
outsb
stos
testl
out
add
sbb
in
jl
inc
mov
sbb
popf
xor
and
add
icebp
jmp
add
sbb
pusha
xor
les
lods
xor
out
inc
jmp
scas
stos
add
or
lock
sbb
scas
insl
out
test
xor
out
inc
jmp
sbb
rcr
int
call
sti
cwtl
jns
stos
sahf
add
lret
jmp
insb
in
add
add
lock
add
add
add
add
sbb
add
cld
scas
xchg
lods
lods
add
cld
gs
add
jnp
mov
das
negb
out
mov
loop
lds
pop
sbb
cli
fs
aaa
sbb
inc
data16
in
adc
pop
push
lods
lods
add
mov
hlt
bound
mov
clc
mov
and
roll
add
shlb
add
shlb
mov
pop
mov
xchg
jno
scas
add
mov
insl
push
jo
clc
push
adc
xor
pushl
inc
xchg
add
lahf
js
xchg
test
stos
hlt
inc
aas
insl
mov
popf
rcrl
les
cwtl
idivl
inc
add
inc
jmp
mov
sub
jb
sbbb
call
add
rdmsr
outsl
add
scas
pushf
or
add
daa
cmc
test
add
mov
add
daa
out
mov
repnz
loopne
bound
cli
jge
cwtl
fsubs
mov
adc
frstor
ljmp
repnz
lock
pop
push
popa
xchg
add
add
xchg
pop
xchg
cmp
xchg
mov
mov
mov
out
add
mov
sub
mov
shrb
scas
adc
ds
cwtl
cli
add
mov
out
or
add
pop
add
shl
test
shrb
popf
lods
fld
cmpl
out
adc
subb
icebp
ljmp
sbb
jo
pop
mov
fisubl
inc
fsubrs
add
lods
cmp
lods
dec
rol
xchg
fdivrs
add
cmp
mov
mov
loope
call
sub
popa
mov
jbe
lods
sahf
or
call
out
neg
cld
sub
fmuls
out
mov
out
add
jp
jo
scas
out
addl
daa
jmp
inc
adc
out
test
insb
dec
cld
fsubs
in
cli
xor
pop
sub
dec
cld
cwtl
fadd
call
xchg
jmp
push
xchg
popl
jmp
mov
gs
cmp
and
test
add
add
popf
pop
orl
testb
add
les
add
icebp
add
inc
loopne
inc
jns
xor
int3
adc
in
loope
lods
xchg
je
ljmp
xchg
push
add
push
jns
loopne
fisttpl
mov
lcall
dec
add
sbb
or
add
mov
xchg
pop
cld
std
fadd
in
and
inc
mov
outsb
sbb
ljmp
pop
bound
mov
push
add
or
ljmp
loop
popa
jbe
data16
cmp
xchg
rorb
in
test
jle
add
add
gs
or
mov
movsl
call
das
sub
in
pusha
outsb
sub
inc
and
ret
out
sub
movsl
call
sbb
call
mov
mov
aad
pop
stc
push
lods
gs
ljmp
inc
jmp
push
out
in
add
add
add
push
jns
stos
push
adc
rcll
sbb
push
pop
pushf
stos
add
xor
lods
ljmp
pop
shlw
stos
add
mov
add
cmpsl
xor
lods
adc
adc
test
dec
leave
add
cmpl
add
stos
fimuls
ret
add
iret
in
push
mov
add
repz
stos
fdivrp
jae
mov
inc
test
add
mov
in
push
add
xchg
in
movb
xchg
inc
add
stos
imul
jp
mov
push
shl
cmc
adc
in
cmpl
test
sub
mov
insl
cmc
add
aaa
or
in
ret
add
scas
add
ret
jmp
dec
cld
pop
xchg
push
xchg
pop
add
add
jae
pusha
jns
flds
xchg
push
adc
mov
aad
push
sub
mov
addr16
js
insb
mov
adc
std
mov
jns
sub
mov
or
xchg
add
movb
add
lock
decl
dec
test
andl
fisubrs
mov
lods
pop
aaa
sub
ret
pushf
mov
daa
jmp
jmp
ljmp
stos
orps
push
jmp
fisttpll
fnsave
js
fsubrl
push
add
xor
test
push
and
out
pop
xchg
movsb
jmp
push
fwait
clc
into
adc
out
ljmp
call
sub
cmpsb
ljmp
cmp
daa
cld
mov
arpl
mov
cs
out
cld
cmp
inc
jmp
xor
adc
sub
jg
movhps
mov
add
scas
imul
pop
hlt
addr16
movhps
pop
out
aam
add
add
inc
jmp
sub
or
movsl
stc
push
in
ljmp
and
jg
divb
idivl
push
push
lahf
stos
add
push
bound
push
add
and
push
push
push
jg
lcall
inc
shlb
daa
pop
jmp
add
bound
aaa
pop
inc
or
add
add
jmp
and
ret
je
int
int3
add
inc
inc
out
mov
adcl
adc
sub
test
xor
mov
ret
mov
sub
jne
std
out
sbb
jl
scas
in
add
stos
std
push
fisubrl
decb
adc
push
enter
sub
std
scas
add
jae
mov
add
inc
das
cmp
out
add
addl
idiv
push
push
add
scas
call
movb
mov
jbe
push
dec
addb
shr
adc
mov
pop
in
leave
dec
je
sub
pop
add
shr
add
incb
lds
cmp
dec
je
xor
rcll
roll
shll
add
xchg
cs
add
add
add
cli
ret
pop
inc
push
daa
and
lret
push
or
aam
cmp
popa
lods
idivl
cmc
mov
sarb
popf
or
xchg
out
mov
adc
sbb
mov
xchg
mov
mov
jecxz
inc
add
xchg
loop
insl
push
ret
push
pop
hlt
sub
es
insl
push
sbb
cmp
add
add
stos
ljmp
sub
incl
jnp
outsb
mov
fadds
push
mov
cmp
fistps
jmp
gs
jg
xchg
loop
jmp
insl
in
jle
ficomps
addb
jge
xchg
popf
mov
xor
notl
push
add
add
out
cmp
addb
mov
shll
stos
add
lods
ljmp
mov
rorl
add
adc
add
cmp
jp
ljmp
stos
rcll
jp
jne
jb
shlb
je
or
fucomp
and
xchg
jmp
insb
js
pop
cltd
aam
cmp
adc
inc
sub
mov
lock
cmpl
sub
out
jb
add
jecxz
decl
jne
out
lret
clc
incl
mov
je
out
mov
adc
pushl
push
imulb
ja
clc
adc
out
cmpb
loope
std
loopne
repz
shlb
cmp
inc
and
je
adc
adc
push
add
scas
fmull
std
ret
dec
push
inc
scas
mov
call
pop
or
mov
js
ret
dec
mov
xchg
jmp
push
js
jae
xor
dec
idiv
inc
adc
test
or
cs
jmp
add
loop
xor
cmc
addl
ret
jo
gs
repnz
imul
das
int3
mov
adc
pop
jno
out
add
jae
orl
add
insl
pushf
hlt
and
nop
add
xor
lods
ljmp
das
cs
jmp
add
gs
push
jecxz
mov
mov
ret
xchg
push
addr16
mov
popl
bound
arpl
and
sahf
mov
fisttps
xchg
outsl
sar
pop
push
sbb
ljmp
lods
push
xchg
jge
add
shr
les
pop
inc
xor
lods
mov
movsb
or
fucomi
mov
lods
call
adc
sbb
fldl
mov
jae
icebp
aam
sbb
lock
sar
cmovs
test
inc
int
add
std
cmovo
push
shll
lock
xchg
idiv
enter
push
mov
repz
rolb
jne
pop
int3
pop
call
ret
jne,pn
mov
ljmp
mov
inc
add
wrmsr
loope
add
xlat
testl
mov
or
xlat
fwait
adc
scas
loopne
pop
pusha
int3
mov
add
mov
or
ret
add
clc
jmp
mov
adcl
mov
jmp
decb
ret
or
add
xchg
cltd
fstpt
mov
sbb
jae
daa
add
data16
sub
push
and
jmp
mov
xorl
fidivl
je
cmpsl
dec
fdivl
ljmp
das
xchg
icebp
inc
push
jp
pop
movsb
pop
mov
sbb
add
add
ljmp
lcall
loopne
outsl
mov
sub
jnp
push
outsl
inc
cmpsb
sti
inc
or
mov
jge
lock
add
out
mov
cmc
ljmp
add
pop
sti
fdivl
sub
add
into
push
add
sbbl
sti
adc
cmpsl
inc
add
lods
ljmp
add
sti
out
xchg
mov
call
hlt
rcr
jmp
lods
jge
jbe
repnz
fwait
mov
jmp
jmp
inc
scas
aad
shr
movsb
popa
jle
insb
push
xorb
push
sub
add
fldt
call
push
cwtl
into
adc
inc
out
ljmp
adc
push
sarb
or
je
out
je
out
jno
adc
in
lods
add
insl
stc
call
in
push
mov
in
sub
test
jmp
adc
dec
jns
add
jp
imul
mov
push
mov
fldenv
mov
add
push
jb
jne
idivl
aam
jns
cmp
xor
loopne
adc
pushf
inc
jne
adc
scas
pop
je
mov
jp
icebp
adc
xor
or
adc
das
cld
adcb
push
pop
xor
and
adc
jbe
mov
std
sbb
jmp
xor
or
adc
add
jp
hlt
sub
add
xlat
in
outsb
and
cld
fildl
addl
pop
clc
cld
mov
jl
addl
ja
push
jmp
jmp
xor
dec
mov
bnd
adc
and
push
adc
add
js
daa
movsl
out
iret
jmp
add
out
imul
cmp
add
add
pushl
adc
js
in
sbb
stos
aad
sub
add
xor
ja
call
jnp
adc
outsl
mov
adc
add
lods
loop
ficomps
ds
out
add
add
ljmp
shr
add
imul
cld
faddl
add
add
inc
jmp
push
mov
aad
xchg
add
aad
stos
push
inc
mov
jne
xor
std
mov
stos
neg
shrb
lret
ljmp
sub
imul
lods
add
push
fucomi
ljmp
lods
jns
inc
jl
sti
dec
xor
jne
push
daa
add
add
loop
add
or
mov
adc
lea
hlt
ljmp
stos
add
cmp
inc
psrlq
lahf
call
push
dec
push
cmp
jp
sub
jo
movsl
sub
xor
ret
push
dec
sbb
lret
pop
push
ljmp
push
xchg
xor
ror
push
loop
add
push
mov
incl
cmovo
xchg
inc
add
mov
adc
inc
scas
or
ds
lds
push
arpl
adc
pushf
push
add
lods
jmp
clc
push
std
mov
jp
clc
sub
loopne
jmp
rcl
push
std
loopne
dec
lcall
push
fstpl
push
daa
iret
std
xchg
gs
sub
je
dec
rcl
cmp
jne
jg
decb
mov
ljmp
lcall
push
adc
ljmp
pushf
jmp
adc
ret
jp
add
adc
pop
scas
ljmp
rcl
sbb
outsb
ljmp
icebp
sub
add
test
mov
stos
jmp
aaa
and
add
sti
cld
out
xor
xchg
add
lods
jno
jno
sub
shll
ret
xchg
cltd
cld
hlt
pop
fiaddl
stos
cli
jg
xchg
aaa
fscale
subb
add
jmp
addr16
ja
repz
cmc
xchg
jmp
mov
popf
fadds
pop
and
sarb
push
imul
cmp
mov
mov
push
sub
lods
add
sbb
jmp
insl
insl
jg
cmpsb
jo
testb
out
aaa
or
or
inc
pushf
adc
add
jo
int3
mov
inc
cld
daa
out
add
outsl
lahf
idiv
rcrb
inc
stc
lods
add
push
test
mov
or
inc
mov
cld
enter
push
cmp
dec
push
xchg
and
imul
and
inc
xchg
inc
add
out
jo
scas
imul
jno
add
sarb
add
pop
repz
add
adc
add
ljmp
push
and
clc
mov
jge
add
cmp
jae
fmul
sub
sbb
arpl
jl
loop
pop
adc
stc
lds
push
std
cmp
loop
dec
stc
aas
add
sbb
inc
pop
addr16
clc
cli
mov
sbbl
rorl
add
popa
and
not
loop
adc
sub
push
aaa
xchg
repnz
mov
inc
es
jp
loop
push
daa
mov
jl
push
outsl
inc
lcall
add
add
add
scas
or
scas
ljmp
scas
test
jbe
adc
in
push
lods
aas
mov
lret
mov
sub
out
insl
sti
jmp
andb
clc
sub
cs
call
popa
hlt
jo
add
pusha
roll
mov
jae
insb
jns
push
push
shl
xlat
sub
adc
add
in
or
inc
add
adcl
pop
jno
or
lods
idiv
jmp
aad
sti
testb
pop
rcrl
xchg
mov
jne,pn
mov
adc
sar
std
jne
test
push
xchg
jbe
movlps
add
xchg
psrld
push
jae
in
shrb
jnp
sub
jg
inc
jne
jae
lock
lods
jle
incb
ljmp
pop
ljmp
aaa
testb
pop
je
jns
push
adc
add
inc
repz
sbb
jne
cmp
lds
out
pop
adc
xor
add
add
add
add
add
scas
pop
sub
push
je
insb
pop
adc
into
mov
jae
test
ja
inc
add
lods
add
add
movsb
enter
daa
add
scas
add
addl
cmp
ljmp
imul
pop
daa
dec
aam
stos
lds
scas
add
lock
jmp
addr16
mov
jg
loop
inc
clc
add
scas
mov
insb
fucomip
cmp
cli
stos
or
sub
lds
sub
add
push
call
pop
push
test
jmp
cmp
repz
jecxz
js
ljmp
scas
jecxz
mov
add
add
loop
mov
scas
adc
pop
in
addr16
jge
mov
add
ss
out
iret
out
add
lods
addr16
push
lahf
popa
aam
jl
xchg
mov
sti
shl
popf
add
sub
in
daa
test
dec
mov
add
add
lods
add
jns
cld
je
inc
cltd
out
call
mov
jns
lods
mov
sbb
repz
sahf
cld
mov
sbb
repz
ljmp
cld
popa
add
loop
shrl
out
mov
jg
inc
xlat
imul
jmp
out
pop
jg
add
stc
addr16
xlat
out
inc
lahf
lds
jg
repnz
jne
mov
xlat
add
or
add
jo
shlb
add
pop
ret
jmp
mov
push
test
icebp
cmp
mov
fucomip
add
inc
adc
test
orl
jmp
data16
xlat
shrl
add
sub
adc
xchg
xor
push
jle
mov
out
pop
sub
aaa
add
lret
or
addl
add
add
add
add
xor
mov
test
and
roll
insl
hlt
int3
push
mov
pop
inc
add
pop
sbb
sub
xor
dec
jecxz
mov
stos
fiaddl
ret
scas
add
add
sbb
mov
add
push
sbb
fistl
mov
inc
add
ret
pop
add
ljmp
out
bound
jbe
xchg
or
enter
out
ljmp
stos
fsubrs
ljmp
lods
ljmp
ljmp
scas
jne
jmp
lock
fidivs
sub
push
das
es
ljmp
scas
jmp
xlat
inc
scas
pop
lds
pop
shll
test
std
mov
insl
ret
lcall
add
arpl
mov
ja
loopne
ljmp
lods
nop
shlb
icebp
bound
dec
mov
jbe
adc
imulb
sub
lahf
sub
and
sbb
sbb
mov
sub
in
adc
stos
ljmp
sub
cltd
cld
sbb
in
xor
stos
imul
mov
sbb
outsl
cltd
cld
hlt
test
mov
hlt
cltd
fiaddl
jne
fdiv
in
test
add
int3
fld
cmp
fbstp
mov
or
cmpsl
imul
xlat
ljmp
jb
lock
xlat
stos
cmp
cwtl
fmull
imul
mov
pop
inc
fidivs
add
add
jo
push
movsl
std
adc
ljmp
addr16
push
push
add
lock
mov
hlt
push
adc
cmp
add
xlat
push
fdivl
mov
jmp
fimuls
mov
rolb
xor
push
aam
pop
in
std
leave
jbe
mov
add
add
hlt
push
or
out
std
mov
lds
mov
std
xor
add
add
add
ja
jns
aaa
mov
into
ret
xor
lods
add
push
sub
inc
rolb
mov
inc
ljmp
sbb
addr16
sbb
mov
insl
negb
fldt
sub
add
jbe
iret
push
ljmp
jb
add
in
jl
jge
add
ljmp
lcall
add
pop
and
ja
cld
xchg
adc
stos
or
push
ljmp
ljmp
xor
add
jmp
add
ljmp
adc
imul
test
sub
mov
lods
ljmp
lcall
sar
sub
jl
add
jmp
add
repz
mov
loopne
mov
rep
ljmp
rorl
add
test
lret
push
add
add
jmp
shlb
pusha
inc
add
dec
push
jge
pop
into
mov
sbb
mov
jne
sbb
sbb
pop
out
pop
mov
pop
mov
mov
pusha
shll
push
add
push
push
sbb
sbb
out
push
mov
out
lock
sbb
das
pop
adc
mov
cmp
or
std
adc
test
add
scas
dec
mov
outsl
out
xor
sahf
pop
call
push
jns
or
shl
inc
jecxz
lcall
xchg
dec
sbb
movzbl
movl
push
js
incl
out
xchg
out
add
shrl
add
clc
das
add
add
add
add
and
fwait
out
xchg
sar
mov
jge
xchg
add
xchg
jnp
jmp
and
mov
daa
sbb
add
pop
and
mov
cmp
sub
mov
and
xor
cs
cs
lods
ljmp
xor
jmp
and
mov
add
add
lods
sahf
mov
imul
ljmp
jmp
adc
jecxz
sbb
out
pop
loopne
and
shll
ret
pop
jne
add
cwtl
sub
test
jb
mov
out
or
lds
adc
dec
add
pop
out
sbb
stos
or
add
and
mov
cmp
add
ljmp
subb
jle,pn
jmp
and
mov
push
push
inc
jp
add
lods
imul
arpl
inc
sub
dec
sbb
jb
xchg
jns
push
popa
mov
pop
xor
cmpb
fiadds
pop
and
push
add
std
call
add
push
xor
push
jns,pt
out
inc
call
adc
pop
push
jmp
inc
mov
test
jo
pushf
pop
repnz
mov
mov
ljmp
daa
cli
mov
sbb
push
movsbl
dec
call
jne
jno
push
mov
push
push
push
scas
or
add
mov
or
out
jae
adc
push
push
shrl
sar
pop
inc
cmpsb
and
inc
or
cld
aam
stos
and
push
out
dec
mov
mov
jecxz
push
insb
dec
add
fs
sbb
xchg
dec
sbb
fucomip
mov
cs
mov
out
out
ss
std
xor
adc
cmpsb
dec
add
sahf
pop
push
loope
cmp
pop
lret
mov
pop
hlt
cs
popa
lea
in
ret
call
lock
sbb
std
ljmp
scas
push
cmc
dec
out
ljmp
jle
mov
subl
inc
shlb
in
xor
imulb
mov
aaa
xorl
out
pop
sbb
test
inc
scas
rorb
or
pusha
int3
loope
adc
and
in
subb
rcrb
jo
daa
mov
dec
sub
outsb
insb
mov
in
jmp
jl
add
jge
or
loop
loope
in
loope
in
push
mov
jecxz
bound
add
add
repz
pusha
out
xor
ljmp
inc
leave
stos
jbe
out
push
lods
cmp
jmp
jmp
sub
sti
push
ret
fldl
in
aad
stos
jbe
xor
jmp
cs
push
subl
mov
or
mov
adc
xchg
cmp
push
nop
push
push
xor
ret
pusha
ja
insb
fsubrl
add
xor
jne
adc
sbb
lock
ret
jmp
pop
std
jne
and
push
pop
insb
ret
inc
std
lea
push
push
call
pushf
mov
push
xchg
and
push
jo
adc
push
adc
cli
mov
mov
arpl
push
mov
add
sbb
je
push
arpl
scas
ja
mov
dec
cs
adc
jl
xchg
es
mov
fildl
cmpl
or
mov
fwait
decl
jecxz
xchg
sarl
or
ret
mov
dec
xor
lret
push
sub
testl
mov
add
add
dec
leave
call
sub
iret
xlat
pop
mov
cld
pop
mov
call
sub
ljmp
mov
into
gs
sti
push
or
rclb
jmp
add
ficompl
stos
xor
or
shrl
jmp
xor
je
int3
push
cmp
mov
insl
lods
inc
loope
jp
outsl
ss
push
jmp
sub
fisttpll
sbb
jmp
add
daa
push
jnp
outsl
mov
pop
cmp
addr16
sub
add
lods
ljmp
stos
ljmp
xor
add
lods
cmp
fists
ljmp
test
adc
je
imul
add
add
add
add
sti
sbb
fimuls
lods
aam
push
je
push
sahf
js
push
lods
sbb
cmp
push
insb
insl
push
push
mov
icebp
jae
imul
shlb
push
addr16
aam
inc
ljmp
sbb
xlat
sarb
pushf
aaa
add
cmp
cli
cmp
jbe
and
sbb
jns,pt
jmp
push
aaa
push
test
sbb
adc
or
xchg
mov
add
scas
outsl
lock
mov
les
jo
add
cld
jmp
out
inc
mov
jne
mov
push
ljmp
mov
push
scas
test
push
rep
inc
lock
add
xlat
shrl
and
cwtl
mov
mov
call
mov
les
and
pop
xchg
cwtl
and
mov
imul
push
xchg
addr16
mov
popf
cmp
add
jp
decb
cld
inc
ret
int3
std
push
jle
hlt
mov
adc
inc
push
imul
scas
sarl
add
testb
add
lods
test
sbb
ljmp
scas
paddw
jmp
cltd
js
ficoms
loop
xor
pop
sar
test
sub
xor
repz
ss
cltd
int3
stc
mulb
mov
lahf
int
frstor
xorb
mov
icebp
jle
xor
xor
jno
int3
add
and
mov
cmp
add
outsl
aaa
pusha
fcom
into
jne
scas
ljmp
inc
pop
lret
divl
movsb
sbb
inc
add
sti
outsb
in
dec
out
mov
pop
shrb
jl
jns
or
outsl
push
cmc
mov
fists
fs
imul
sbb
scas
xchg
sub
pop
out
sub
fbstp
xchg
mov
jo
into
fs
push
jmp
int
rolb
pop
lock
mov
inc
ljmp
push
outsl
pusha
out
rcrb
aas
dec
std
jmp
pop
aas
fdivrl
mov
fcmovne
adc
mov
or
pop
jo
jg
out
mov
sbbl
push
call
sub
mov
bound
in
dec
or
pop
push
hlt
outsb
adc
je
cmp
pop
call
nop
sub
mov
push
mov
push
adc
mov
mov
outsl
cmp
add
fdivr
stos
scas
mov
scas
je
aaa
sarl
jne
imul
jg
sar
ljmp
inc
sub
add
add
push
xchg
dec
add
adc
add
mov
add
adc
xor
clc
sub
scas
sarl
cmp
je
jbe
ss
std
fmuls
xchg
lahf
sahf
add
addl
mov
sbb
cld
fildl
in
addr16
ljmp
les
mov
mov
xchg
sub
and
enter
gs
or
xchg
mov
aas
adc
add
rcrb
jl
gs
pop
cmp
jle
fsts
mov
std
sbb
fsts
jbe
sub
in
jmp
std
stos
jecxz
call
add
pusha
adc
sarb
pop
ljmp
sar
push
aam
out
xlat
pop
das
aad
shl
cmp
mov
and
push
gs
imul
ret
loope
insl
dec
dec
icebp
push
jo
daa
lahf
ljmp
mov
add
std
push
icebp
cmp
ss
add
sarl
gs
fdivr
jmp
add
mov
sub
sahf
add
lods
imul
cs
add
push
in
mov
push
or
sbb
push
test
loope
xchg
inc
in
add
xor
ret
call
pushf
adc
push
push
les
loopne
call
pop
cmp
mov
push
mov
shrb
call
insb
pop
or
xor
jo
call
or
push
mov
push
aam
aaa
mov
xchg
xchg
jmp
test
pop
mov
xchg
push
shr
stos
inc
pop
hlt
scas
cmp
cs
xor
inc
sub
fmull
jle
outsl
xchg
scas
sar
out
mov
inc
lds
sub
mov
mov
sub
std
xchg
sub
jae
dec
sub
xor
dec
xor
shl
mov
adc
fsubl
leave
pop
add
jmp
dec
out
ljmp
imul
xor
pop
in
scas
imul
les
fstl
fdivl
outsb
add
pusha
lea
mov
jmp
js
fisubrl
cmpsb
cmp
mov
pusha
mov
shll
shrl
dec
lods
aam
pop
inc
addr16
fists
and
ds
mov
push
ret
xchg
aad
insl
insl
pop
add
inc
inc
jae
mov
pop
rorl
repnz
sub
cmp
sub
shl
sti
mov
stos
jbe
outsl
stos
xchg
jbe
cli
adc
arpl
xor
add
in
pop
or
mov
xchg
arpl
mov
mov
xchg
xchg
push
loope
ret
or
sub
xlat
push
loope
add
add
ljmp
mov
add
insl
adc
lahf
cmp
push
lret
call
adc
fs
in
push
xchg
xor
adc
sbb
xchg
ja
sti
incl
xchg
mov
xor
scas
add
pop
insl
cli
incl
insb
mov
imul
out
call
inc
and
push
in
out
push
lea
std
call
popl
adc
sarl
add
add
adc
mov
push
xor
call
mov
mov
xchg
mov
clc
pop
push
push
push
inc
inc
lock
rclb
mov
adc
add
add
inc
xor
rorl
imul
fimuls
insb
add
jae
mov
pop
inc
fdivrl
inc
xor
loope
push
mov
enter
ljmp
sar
icebp
jmp
call
add
stos
roll
push
les
stos
subb
xor
insb
out
push
aaa
mov
call
cs
ss
ret
inc
sar
gs
push
and
rclb
scas
ljmp
das
sarl
out
add
out
out
scas
gs
jmp
adcb
adc
ljmp
push
xchg
add
arpl
mov
mov
adc
jmp
lock
push
pop
call
insl
ret
fwait
add
lods
arpl
and
cmp
adc
cmp
pusha
iret
sar
sbb
push
add
lods
arpl
xor
cmp
fstps
xchg
inc
pop
into
sbb
and
insb
ljmp
push
stos
push
fiadds
add
add
sbb
add
in
mov
or
in
and
testl
add
or
ljmp
cmp
add
arpl
add
or
push
aaa
dec
test
loope
out
in
add
pop
iret
adc
xchg
mov
push
in
cmp
lea
add
add
out
mov
loope
cwtl
pop
in
add
fucomip
jbe
scas
repz
mov
shll
and
sub
pop
add
test
cmp
std
sbb
or
cs
clc
xchg
xlat
jmp
add
dec
std
fwait
imul
je
sub
add
sub
dec
pop
mov
push
sub
mov
mov
adc
xor
rdtsc
out
clc
add
sarl
imul
imul
call
mov
push
inc
stos
fbld
lret
into
cmp
out
scas
mov
cmpsb
cmp
int
mov
sub
inc
mov
mov
mov
or
dec
jp
ficoml
int
sbb
sub
mov
popa
fsubs
jecxz
mov
inc
into
fsubl
jecxz
mov
push
push
and
mov
pusha
or
sbb
xor
add
pop
shlb
mov
test
in
push
bound
dec
out
sub
pop
aaa
push
mov
testl
lods
arpl
pusha
fmul
test
mov
ljmp
inc
jl
call
lahf
pop
ror
cmc
add
sub
jle
push
ljmp
sti
sbb
out
add
lods
arpl
insb
ja
push
ds
cmp
fs
add
std
incl
add
add
call
or
aaa
push
jmp
inc
cmp
push
daa
nop
dec
adc
cmpsb
or
add
out
mov
add
inc
call
ret
dec
add
xchg
mov
push
cmp
call
push
or
jo
ljmp
imul
lock
add
mov
jle
push
scas
inc
xchg
inc
adc
push
xchg
rorl
lret
pop
lods
add
or
xor
fnstenv
std
mov
ds
inc
mov
or
inc
cltd
sar
outsb
insl
adc
outsb
imul
mov
aad
sub
movsb
inc
mov
loop
xchg
scas
ss
repz
pop
push
lods
subl
xchg
lea
ficoms
mov
xchg
lea
pop
cs
jns
insl
les
and
insb
adc
jmp
icebp
mov
pop
mov
inc
sub
stos
fistpll
mov
dec
xchg
jmp
repz
fwait
lret
nop
lret
mov
subb
lret
idivb
fldenv
pop
outsl
and
sub
and
jecxz
ret
add
sbb
jbe
in
jle
in
add
out
inc
pop
rorl
mov
add
push
stos
jg
lods
push
or
xchg
aam
outsl
divl
add
cli
shrl
jne
mov
pop
inc
sahf
imul
out
iret
imul
popw
mov
ds
sub
lock
in
call
mov
xchg
lods
ds
js
incl
and
mov
repz
inc
aaa
xor
shrb
divl
mov
push
jne
cmp
add
add
insb
cld
incl
fildl
inc
testb
xlat
ret
mov
pop
sbb
or
xlat
in
add
pop
jg
or
adc
xor
movsb
lods
jg
inc
cmpsb
mov
or
cmpl
push
mov
or
jnp
or
lods
or
push
in
add
faddl
sub
incl
push
inc
scas
cltd
xchg
sarl
mov
mov
xchg
or
pop
inc
add
shrl
push
and
rorl
add
jb
imull
dec
mov
dec
mov
mov
out
into
or
ret
cltd
call
push
jg
leave
pop
add
add
add
adc
mov
clc
ljmp
mov
add
and
sbb
jne
outsl
ljmp
scas
imul
adc
insb
int
ljmp
xor
notb
scas
mull
ljmp
rol
push
jg
cmp
mov
repnz
mov
cmp
out
imulb
ljmp
add
jmp
push
in
in
add
ljmp
and
add
imul
add
testb
lods
call
adc
scas
divl
out
mov
fsubr
out
jge
in
lods
ljmp
stos
or
push
ljmp
add
mov
add
sbb
or
sbb
ljmp
fsub
stc
mov
hlt
push
ljmp
add
stos
jg
xchg
lods
pop
ljmp
cmp
call
push
fldcw
in
cmp
std
adc
lock
pop
xchg
jns
clc
inc
sub
pop
xchg
lods
adc
cwtl
imul
arpl
cltd
repnz
add
call
add
in
les
data16
pop
jmp
add
push
das
sti
xchg
call
ret
sbb
push
xor
repz
xlat
pop
std
adc
inc
cli
and
ljmp
add
and
std
decl
scas
jbe
pop
inc
bnd
adcl
add
jmp
add
add
add
adc
adc
inc
scas
add
adc
sarb
cmp
ljmp
dec
scas
sbbl
adc
mov
xor
repz
stos
int
call
sar
out
cmp
clc
mov
and
das
mov
push
pop
std
inc
movsl
mov
sahf
add
or
xchg
cld
mov
ljmp
sub
mov
sub
test
ljmp
repnz
pusha
ret
in
jge
and
mov
sbb
aaa
lcall
add
cmp
sbb
popf
repnz
add
sub
sub
ds
call
hlt
ss
pop
cmc
imulb
mov
mov
add
push
pusha
or
jo
jecxz
lods
mov
sub
add
mov
std
push
aas
sub
pushf
lea
push
cmpsb
fbld
xchg
push
ds
cwtl
out
cli
push
dec
mov
add
insl
hlt
inc
dec
lret
mov
test
loopne
cli
sbb
lret
ds
mov
out
cli
cld
cmc
leave
pop
jl
rolb
lods
sbb
xchg
mov
jb
cmp
sbb
clc
adc
clc
or
sbb
inc
xchg
adc
jbe
scas
js
add
ds
mov
into
pop
adc
decl
and
add
into
add
push
nop
outsl
and
fldl
add
call
les
jmp
jne
nop
cmovl
sub
cmp
loop
jmp
test
push
stos
std
and
mov
lret
push
stc
xor
xchg
xchg
adc
sarl
sahf
cmp
or
movsl
testl
add
add
es
add
dec
inc
and
dec
mov
scas
sar
mov
shll
scas
mov
adc
lahf
or
outsb
rcll
cltd
sbb
inc
mov
mov
scas
rcll
movsl
fbstp
push
push
jmp
ret
mov
ljmp
shrb
maxps
mov
mov
add
add
xlat
outsl
lret
aaa
shll
fsubrl
jp
bnd
sbbl
fnstsw
jb
mov
mov
sarb
lods
mov
aad
add
stos
faddl
nop
imul
lods
xor
ljmp
jmp
in
scas
ljmp
icebp
cmp
nop
add
add
mov
add
imul
cld
test
jbe
test
jbe
das
rolb
in
xor
gs
aaa
add
sbb
rcl
xchg
xchg
jne
hlt
and
pusha
sarl
jo
shl
loop
and
add
and
insb
call
adcb
stos
imul
mov
imul
add
insl
sbb
lods
jno
sbbl
jno
or
add
out
adc
dec
and
sub
pop
push
hlt
jmp
repnz
bound
push
std
jne
jecxz
lcall
std
adc
jo
pop
leave
aam
mov
ss
aas
or
dec
add
push
sbb
adc
add
test
cmp
insb
test
xor
or
adc
push
roll
lret
add
jmp
movb
call
pop
icebp
scas
push
stos
add
inc
cld
pop
sar
inc
mov
push
add
pop
arpl
scas
shll
mov
adc
sarl
xchg
xor
aaa
mov
add
add
pop
push
add
xchg
jl
lds
and
imul
jmp
cmpsb
jnp
fistpl
adc
adc
test
sbb
subl
es
insb
scas
sar
mov
movsb
sahf
cmpsl
outsl
es
es
and
add
mov
ljmp
pop
xor
mov
mov
lret
push
pop
outsl
into
getsec
mov
call
stos
stos
call
imul
jae
loope
mov
outsl
and
cmp
ljmp
sub
cmp
shr
fwait
rol
test
push
jg
or
mov
addr16
imul
mov
test
lods
ljmp
popa
in
add
lods
arpl
ds
adc
movsl
xchg
xlat
inc
jmp
jb
sti
mov
mov
mov
xor
adc
rorb
push
daa
adc
jne
data16
cltd
push
ds
testb
sti
cmp
mov
icebp
push
ds
jns
sti
add
xor
sbb
cli
call
mov
in
pop
out
add
push
in
add
push
xchg
je
outsb
stc
add
pop
outsb
repz
stc
mov
cmpsb
shll
ss
or
add
cmp
xor
xchg
mov
xlat
cli
imul
add
add
add
add
add
call
push
call
int3
clc
sbb
cmpsl
sbb
mov
add
sbb
cwtl
and
arpl
add
frstor
add
jecxz
add
clc
lds
xchg
push
add
incl
push
or
sbb
out
add
ret
shll
add
ret
add
jmp
or
incl
add
pop
imull
enter
ljmp
out
ljmp
pop
jle
bound
clc
mov
or
cli
sub
add
jae
mov
ljmp
cwtl
out
cmp
mov
add
ljmp
imul
insl
sbb
scas
ljmp
xchg
jb
mov
ljmp
dec
ljmp
imul
insb
pop
mov
add
ljmp
repnz
test
out
std
cli
into
dec
or
jmp
cmpsl
stos
and
in
movb
add
xchg
stc
rep
jmp
mov
ja
fs
pop
xlat
ja
insb
and
and
loop
rolb
inc
push
sbb
lcall
push
ficoml
jge
nop
std
mov
xchg
xchg
inc
add
jne
fdiv
adc
adc
stc
call
pop
or
aas
or
push
sub
xor
cli
push
imul
inc
sbb
jne
xor
sub
push
xor
xor
call
rolb
lcall
or
sub
mov
jmp
inc
adc
cld
incl
adc
add
aad
add
mov
add
iret
sub
add
decl
scas
ret
js
push
inc
sbb
mov
or
cwtl
or
in
add
or
or
scas
ret
mov
inc
sub
mov
or
pop
or
in
mov
or
push
dec
scas
ret
mov
xor
add
ret
decl
scas
ret
inc
scas
ds
xor
inc
mulb
ja
addl
ljmp
scas
ljmp
outsb
jmp
mov
cltd
shlb
push
clc
rcr
add
stos
pop
or
cs
push
outsb
les
lds
rcll
outsb
ds
je
sbb
add
jbe
inc
scas
inc
ljmp
push
andb
mov
add
jo,pn
mov
pop
push
clc
mov
stos
mov
or
mov
inc
inc
movsb
ds
out
mov
movsb
inc
mov
jmp
push
xor
icebp
stos
push
jmp
xchg
ljmp
adc
add
add
test
lods
ljmp
out
stos
std
lods
ljmp
mov
ret
testl
xor
in
and
jae
fldenv
mov
into
xchg
dec
and
ljmp
pop
iret
xchg
ja
add
push
sub
mov
rorb
orl
je
add
add
push
push
aas
in
call
adc
adc
add
push
jg
call
mov
jp
stos
push
call
xchg
sti
cmp
jne
mov
imul
sub
cmc
inc
fildll
imul
dec
fdivr
lea
push
ljmp
add
add
xchg
cli
xchg
sub
push
fstl
movsb
scas
ret
jmp
push
mov
inc
mov
adc
std
js
mov
mov
incl
xchg
mov
sub
std
mov
dec
cwtl
std
and
add
sbb
scas
ret
daa
add
xchg
inc
inc
repz
pop
fwait
std
loope
push
add
fldl
call
mov
fists
hlt
cmpsb
mov
call
lahf
popf
fldl
jnp
add
sbb
pop
xchg
rcll
insl
adc
in
lods
add
mov
push
arpl
add
ljmp
adc
test
add
ljmp
mov
icebp
stos
push
call
out
ss
int
sub
ficomps
jb
outsl
mov
or
pop
ljmp
ljmp
in
lods
push
jmp
and
scas
fucomp
ljmp
mov
sub
push
incl
jmp
lret
lods
lods
popa
dec
lds
add
add
ljmp
mov
addr16
ljmp
dec
stc
out
add
stos
out
aas
mov
incl
jmp
es
es
cltd
cmc
cmp
xlat
push
push
cltd
clc
xor
andl
testl
lods
push
add
mov
adc
push
push
cld
dec
std
adc
add
outsl
add
cwtl
fwait
mov
pop
mov
ljmp
dec
cmp
sub
jbe
add
mov
scas
imul
sbb
push
xor
jb
stos
scas
dec
sahf
std
popf
cmpl
rcll
mov
in
cmp
lret
ret
cmc
stos
adc
je
sub
cs
ret
add
sbbl
add
ret
fdivrs
ret
jecxz
mov
xor
cmc
pop
mov
ss
push
jle
xor
add
cmpsl
inc
sbb
shll
loope
fwait
add
addl
add
add
add
add
int3
jmp
cmp
xchg
in
lcall
jp
mov
ss
stos
push
cli
call
testl
imul
mov
jmp
add
out
xor
aaa
lds
add
fbld
adc
lock
aad
add
mov
stos
dec
lods
in
aaa
movsb
cmp
in
xor
aaa
add
loopne
stos
xor
cmp
fsubp
adc
stos
popa
cli
or
sti
xchg
xor
ret
test
out
pop
sub
or
adc
cli
fcompl
lods
adc
bound
lods
sti
jb
or
add
loop
push
mov
scas
jne
and
push
lahf
and
push
aam
ljmp
inc
lods
xchg
push
stos
mov
fs
std
je
imul
enter
ret
insl
mov
add
sti
idiv
decl
sti
adc
add
mov
testb
jns
and
add
add
ja
insl
lock
call
pop
jmp
push
or
push
incl
outsl
or
scas
outsl
dec
lret
dec
scas
loopne
add
repnz
mov
mov
push
jmp
adc
outsl
or
pop
sti
sbb
add
scas
daa
scas
xchg
decl
outsb
xchg
decl
out
rol
mov
lcall
add
add
add
add
imul
scas
xchg
xchg
sub
mov
scas
push
sti
cli
sbb
adcl
mov
movsl
add
aaa
pushl
rorl
test
or
push
aaa
outsl
inc
and
cmp
enter
ljmp
lret
jae
test
add
xor
rol
mov
push
fmull
ljmp
mov
xchg
pop
add
and
jae
fistpll
test
mov
mov
test
adc
add
stos
outsb
xchg
add
ljmp
lock
popf
fistpll
jmp
add
jmp
add
jmp
adc
flds
call
daa
pop
es
inc
test
and
push
std
cmpsb
jbe
add
add
inc
cmpsb
mov
sub
es
xchg
mov
and
add
and
push
insb
mov
or
outsb
and
es
and
or
mov
or
cltd
into
and
scas
jae
add
pop
test
jb
cmp
mov
jbe
mov
xrelease
push
jnp
movmskps
sbb
rcrb
je
mov
shll
std
mov
jno
and
jno
push
adc
or
pop
mov
inc
data16
and
inc
jnp
outsl
cmp
movsb
mov
pop
call
or
and
push
jns
ljmp
jg
or
or
pop
push
fsubl
scas
popa
daa
enter
out
adc
add
pushf
or
or
cmp
les
and
mov
xchg
je
ret
xchg
and
mov
std
jg
test
cmpsl
dec
int3
xchg
decl
cmp
repnz
scas
test
je
or
push
mov
not
out
xor
mov
or
and
adc
xchg
incl
jmp
push
lcall
xchg
popf
sahf
testl
sub
add
mov
add
scas
lods
out
jg
sub
repnz
jmp
inc
scas
jmp
xchg
popf
mov
mov
movsb
ret
scas
cmc
insl
nop
scas
ljmp
das
divl
aaa
and
jno
lahf
sub
jns
jbe
decb
mov
loopne
add
mov
add
ljmp
lods
outsb
mov
mov
mov
dec
push
inc
and
test
push
xchg
outsb
mov
stos
ljmp
data16
push
push
jp
inc
jmp
jp
repnz
negb
adc
cmp
jb
mov
jmp
imulb
push
xchg
add
sbb
sti
std
xchg
xor
test
mov
push
call
lods
fpatan
adc
daa
mov
pop
js
mov
xor
push
out
mov
je
push
aam
and
call
shlb
jo
movsl
pusha
jmp
cmp
out
enter
or
sub
sub
jmp
outsb
pop
fsubr
sub
add
sti
in
call
insb
and
add
xchg
out
fdivrs
ret
pop
out
push
mov
push
jg
add
ljmp
push
decl
into
jns
std
fildl
decl
idivb
push
frstor
mov
test
std
mov
or
aad
adc
xchg
mov
nop
adc
add
add
cmpsb
aas
add
fdivrp
cld
ret
mov
aas
scas
push
inc
std
scas
lods
add
adc
lcall
cmp
fwait
shl
aas
scas
fcoms
add
push
inc
std
add
mov
cmpsb
xchg
xor
sub
lahf
fsubrp
call
negl
fldl
in
mov
bound
push
cmp
cmc
mov
jno
jae,pt
lahf
das
mov
add
sub
jmp
push
and
pop
stc
sub
into
out
scas
mov
jmp
add
outsl
adcl
scas
ljmp
mov
mov
ret
jns
adcl
fldz
add
insb
shr
ljmp
mov
ljmp
xor
jmp
aas
sahf
sti
xchg
mov
add
pop
cmp
add
loop
fisubrs
jne
jmp
fidivrl
ljmp
mov
jbe
test
out
cmpsl
ljmp
add
add
cmpsb
mov
push
jb
das
mov
bound
ljmp
shrb
or
call
outsl
hlt
aaa
add
and
or
mov
dec
fwait
jo
call
or
add
jo
mov
std
dec
stos
jbe
fnstenv
std
add
and
pop
jmp
incl
imul
incl
mov
insb
std
push
loopne
icebp
cli
lcall
dec
jae
incl
add
add
insl
outsl
lock
jge
popf
xorb
cltd
call
xor
mov
leave
mov
cltd
mov
enter
mov
xchg
xchg
mov
inc
fisttpl
mov
push
clc
je
add
lock
jg
inc
mov
push
or
scas
int3
add
out
xchg
incl
add
add
inc
mov
scas
xchg
mov
cld
scas
xchg
aas
add
xchg
ljmp
sbb
xchg
push
add
ljmp
xchg
push
faddl
test
stc
mov
pop
rcr
call
pusha
adc
dec
add
scas
cwtl
popf
fucomip
push
scas
ljmp
scas
push
or
outsl
pop
popa
rolb
add
add
sti
loop
adc
adc
scas
repz
jne
xor
call
out
mov
mov
adc
rolb
stos
jo
mov
rolb
mov
call
scas
imul
stc
cs
jbe
xor
out
lds
jmp
and
jbe
bnd
insl
push
push
jb
xchg
daa
bound
repnz
fmul
clc
inc
jmp
cs
jbe
enter
inc
pushf
sti
mov
adc
jmp
cli
fwait
sti
push
sahf
pop
lahf
enter
lods
addr16
push
out
loopne
pop
push
call
jle
ljmp
push
outsl
wrmsr
cmc
daa
add
in
jbe
mov
add
add
out
test
sbb
addb
inc
xchg
add
lea
je
test
push
xchg
add
push
fimull
lock
dec
cmp
adc
cmp
jmp
cmp
outsl
inc
dec
roll
push
aam
call
pushf
mov
dec
push
sbb
or
mov
add
scas
push
adc
cmpsl
cs
jae
sbb
or
pusha
adc
sarl
js
aad
jle
lds
je
push
push
push
scas
cmp
sbb
pop
repz
jmp
or
dec
fistps
out
xor
dec
sub
add
add
mov
je
pop
or
les
mov
mov
pop
push
das
mov
add
add
cmpl
mov
and
xchg
in
mov
ljmp
jmp
shrd
mov
imulb
dec
out
inc
std
sub
repnz
std
sub
cmp
add
ljmp
stos
ljmp
mov
fsubs
sbb
pop
rclb
push
jmp
xchg
adc
sub
add
add
sub
mov
jmp
test
sub
aaa
xchg
cmpsb
in
call
xchg
cltd
mov
cmpsb
or
scas
ljmp
mov
mov
sti
fisubrs
sbb
cld
into
sub
test
cwtl
ljmp
in
bound
mov
sti
sbb
mov
sti
std
jns
jmp
pop
insl
bound
cmpl
xchg
push
cld
cli
fisttpll
xchg
sti
cmpsb
insb
bound
push
xchg
sub
inc
lds
arpl
sub
sti
xchg
add
xchg
xor
std
jmp
lods
dec
mov
outsl
out
or
arpl
incl
fdivr
jne
adc
or
sbb
incl
add
add
pop
ret
adc
adc
push
pop
imul
je
mov
lret
lods
dec
mov
outsb
out
adc
add
sti
stc
pop
pop
into
addr16
jae
push
lock
mov
les
add
out
xchg
cmc
addb
aas
adc
js
out
outsb
add
adc
push
sti
adc
add
test
test
pop
ss
clc
pop
add
jmp
cmpl
push
test
pop
pusha
jmp
popf
roll
mov
test
sbb
js
stos
sbb
or
adcb
insl
nop
lds
pop
sub
push
std
and
bsr
cmp
fnstcw
inc
pop
cmc
mov
add
add
jmp
std
jbe
sahf
jmp
xchg
ds
inc
scas
xchg
jle
adc
xchg
in
leave
ljmp
pop
jmp
inc
mov
out
fldcw
add
adc
ret
pop
rcrl
scas
add
test
xchg
xchg
js
imul
unpcklps
jbe
scas
sbb
mov
sub
jle
pop
out
in
repnz
lods
push
xchg
inc
andb
cmp
popa
inc
adc
adc
fs
sbb
mov
xchg
adc
shrb
push
add
add
out
add
jnp
dec
call
push
call
stos
ljmp
int
leave
stos
xchg
push
lods
cmp
mov
fs
add
inc
jmp
ljmp
test
lods
ljmp
les
inc
push
pop
sti
call
pop
mov
inc
pop
mov
xchg
outsl
or
add
add
push
orb
call
adc
add
add
lds
dec
cmp
xor
in
add
shr
add
mov
imul
add
cld
inc
add
sub
fs
clc
cli
push
std
add
cmp
mov
mov
sub
ja
push
sub
mov
cltd
mov
xchg
add
or
cmp
cmp
add
mov
xor
dec
loope
in
cwtl
call
clc
cmp
mov
dec
or
jmp
xchg
cmpsl
adc
mov
xchg
inc
adc
stc
push
add
lods
push
inc
scas
jo
push
lock
rcrl
fmuls
scas
jmp
jbe
addl
clc
loop
xchg
sub
mov
add
add
mov
pop
sti
sub
repz
or
arpl
pop
daa
and
mov
cli
outsl
lret
mov
lods
push
aam
push
loop
push
mov
shll
adc
loop
inc
outsb
arpl
or
sbb
call
cmpb
mov
rcr
fsubrl
and
add
add
out
pop
scas
ljmp
lods
aaa
sti
aam
loopne
jmp
fwait
stos
jmp
bound
xchg
in
lock
call
lods
ljmp
mov
sti
push
jns,pn
jmp
sub
add
lods
arpl
jo
rolb
jmp
sub
out
ljmp
mov
ljmp
out
add
mov
add
xor
or
and
lods
popa
inc
add
ret
pop
push
push
xchg
mov
fs
in
pop
jle
sti
add
jmp
data16
sti
mov
in
add
je
pop
jecxz
or
in
push
lcall
pusha
adc
gs
or
jnp
xor
add
add
in
add
and
test
jp
movsl
sti
insl
test
add
inc
inc
xlat
cmpl
xchg
out
cmc
mov
cmp
mov
jp
or
jmp
cld
fidivrs
dec
mov
push
mov
mov
aaa
lods
or
outsb
push
inc
add
or
add
mov
dec
ret
lods
mov
add
add
test
jno
mov
andb
stos
inc
push
and
push
aam
adcl
jmp
xor
and
xchg
in
jnp
scas
orl
pushl
cltd
out
scas
cmp
aam
jmp
add
mov
adc
jg
jge
addr16
jg
add
add
divl
rclb
movsl
jl
bound
lock
fcompl
loop
cmp
rcrl
clc
leave
popa
mov
movsl
imul
jmp
es
add
cmp
jmp
jecxz
test
stos
in
out
rorl
inc
in
insb
jne
call
mov
lods
pusha
mov
xchg
add
fadd
movsb
shl
cmp
push
lods
aaa
jg
xchg
cmp
aam
popa
test
sti
mov
jge
add
pop
bound
push
bound
jmp
std
push
lcall
push
fldl
gs
push
push
in
in
sub
movsb
shl
add
add
jle
cmp
inc
mov
inc
add
mov
mov
pop
push
fcomps
insl
push
xlat
out
les
mov
call
adc
or
add
cltd
add
lods
adc
call
es
add
xchg
decl
add
jns
call
push
hlt
fdivr
and
inc
iret
lret
shlb
cmpb
je
test
inc
scas
pcmpeqw
test
add
decl
xchg
mov
sub
pushf
jno
add
push
mov
mov
repnz
or
xchg
test
aas
scas
jns
jno
mov
leave
icebp
add
scas
pop
std
jecxz
addr16
lahf
cmp
push
inc
dec
dec
std
mov
pop
ret
ljmp
sbb
mov
dec
jmp
jbe
pop
std
jnp
data16
cmp
push
jmp
ljmp
jo
mov
rcrb
or
jle
aam
xor
or
add
jns
mov
or
add
xor
in
mov
idivb
xchg
aad
imul
mov
scas
imul
cmp
imul
mov
hlt
test
sub
test
mov
adc
mov
jge
or
ljmp
jnp
fildl
add
in
leave
stos
movsl
ljmp
lods
dec
loop
stos
dec
out
sub
jle
push
incl
insb
in
incb
cmp
ficoms
adc
xchg
jg
in
out
fnstsw
add
jae
add
sbb
aam
adc
inc
dec
stc
cli
mov
xchg
cmpsb
fstpl
and
xchg
and
jmp
add
adc
push
mov
or
outsb
inc
and
pushf
dec
push
jge
jmp
mov
mov
push
add
jno
clc
jae
or
cld
adc
sbb
outsl
add
sub
or
mov
cld
into
dec
ljmp
inc
fwait
mov
les
adc
movsb
cs
stos
ret
push
loopne
repz
cld
jne
pushl
lcall
in
or
xchg
add
lea
rolb
sti
mov
mov
roll
sbb
je
mov
je
mov
decl
out
xchg
insb
fadd
push
insb
fsubrs
push
and
adc
mov
jns
jae
or
std
ret
mov
inc
scas
push
aas
jae
adc
std
inc
xchg
mov
ds
or
inc
xor
jbe
xlat
repnz
xchg
repnz
insl
xchg
int
ret
ljmp
data16
add
popa
sbb
subl
sbb
in
inc
outsl
outsl
ljmp
outsb
ljmp
ja
ss
pop
les
add
add
sub
cmp
cmc
jmp
add
add
test
aas
pushf
sub
mov
cmpsl
test
orb
aaa
or
lock
fidivl
insl
push
loop
insl
push
and
or
sbb
cli
xchg
sbb
mov
add
sub
mov
in
test
in
js
jmp
dec
jge
jmp
and
fucom
out
test
jmp
out
test
pop
cmp
stc
fldt
pop
mov
stos
jne
test
jne
mov
adc
shr
adc
std
inc
jmp
mov
jge
jmp
jg
out
ss
int
add
in
push
call
and
shl
pop
ret
add
pop
jmp
out
sub
mov
jge
jno
test
add
add
test
jp
iret
push
xchg
es
call
repnz
shr
cmpb
mov
in
xchg
jp
mov
lahf
jne
stc
roll
pop
call
aas
fadd
imull
fsubs
add
pop
mov
add
repz
push
ljmp
cmp
inc
inc
bound
mov
push
dec
mov
movsb
lret
int3
clc
or
pop
idiv
mov
push
incl
jmp
push
add
pusha
fdivr
mov
adc
xchg
rcrb
dec
sti
lcall
pop
dec
std
inc
cli
pop
mov
xchg
test
xchg
in
cmp
jo
mov
fildl
add
xlat
ljmp
jg
fisttpl
je
push
ljmp
inc
adc
jb
notb
dec
and
cmpl
stos
mov
pop
push
xchg
ds
adc
jb
stos
mov
fdivs
xchg
push
push
das
add
popa
pop
daa
jnp
add
add
add
push
hlt
and
or
mov
xorb
repz
ret
cmp
push
cld
and
int
incb
add
testb
scas
adc
inc
testb
imul
sub
adc
and
addr16
sahf
std
adc
and
scas
adc
push
stc
fisttpll
push
imul
push
sbb
adc
sti
add
std
or
sbb
fldl
mov
jg
in
lock
inc
sub
add
mulb
stc
insl
cmp
add
add
sbb
add
ret
dec
mov
data16
adc
inc
idiv
hlt
mov
add
add
add
add
in
add
dec
adc
ror
cli
cld
test
jns
lea
push
lea
std
jmp
test
aam
hlt
pop
inc
mov
jnp
and
ja
cmp
sti
jae
mov
in
addb
sub
inc
or
cwtl
dec
ljmp
mov
inc
scas
push
inc
je
add
add
dec
stc
add
leave
or
stos
or
call
sub
call
lret
pop
not
or
daa
cltd
jle
stos
push
leave
sti
push
xchg
add
add
in
das
jle
add
bnd
fldl2t
add
rcll
insb
std
pop
sbb
cld
subl
push
add
add
add
lret
mov
test
add
xor
insl
xchg
add
adc
pop
push
das
jmp
outsl
fwait
xchg
adc
scas
ljmp
pop
sbb
std
jmp
sbb
lcall
out
mov
mov
ljmp
stc
sbb
inc
pop
jae
sbb
jmp
pop
mov
test
daa
jp
enter
mov
jg
outsl
lcall
js
shlb
mov
sub
pop
jno
push
scas
imul
inc
jmp
add
inc
adc
push
outsb
fstpt
cwtd
or
test
ret
ret
mov
popf
push
jmp
add
add
ljmp
fdivs
push
ficoml
mov
add
in
jge
and
enter
cmp
repnz
add
leave
cmp
add
xchg
inc
xchg
mov
popa
mov
cmp
add
mov
cmp
dec
cmpsb
into
push
mov
dec
or
add
add
out
daa
add
ds
mull
pushf
mov
arpl
mov
ror
cmovo
or
enter
mov
add
arpl
je
shlb
aaa
jle
jge
test
xlat
call
arpl
xchg
push
mov
scas
les
jnp
xor
adc
mov
mov
xchg
inc
insl
mov
int
scas
xchg
aam
add
add
push
xchg
aam
xor
cmp
pmaxsw
mov
sub
adc
and
std
or
jae
xlat
scas
xchg
jnp
jnp
fisttpll
cmp
push
popa
push
cld
mov
or
shr
pop
pushf
sub
lods
scas
jmp
xor
hlt
mov
scas
ljmp
movsb
fidivrs
xchg
shlb
adcb
test
adc
jl
xorb
sub
stos
fstl
and
jnp
jle
sbbb
xchg
inc
push
scas
ljmp
xor
dec
fldl
sub
das
cmpsb
in
js
scas
mov
add
mov
js
ss
fst
jp
fsubl
stos
jne
xorb
daa
mov
popa
inc
push
test
add
cwtl
int
pusha
scas
pop
sub
jge
in
add
arpl
mov
mulb
xchg
lea
ret
cld
scas
mov
add
mov
ljmp
adc
cld
stos
lods
jno
call
lods
gs
sti
jne
add
test
scas
jno
add
mov
push
dec
stos
pop
data16
out
data16
or
pushw
stos
or
sbb
iret
push
inc
sbb
fadds
mov
out
xor
or
add
popf
push
mov
je
jne
out
rclb
mov
outsb
or
mov
call
mov
sbb
add
sbb
add
mov
inc
into
in
mov
push
sbbl
scas
fistl
sub
lods
jle
scas
pop
cmpsb
repz
andl
jmp
fcmove
cld
jnp
or
cwtl
test
jnp
cli
xchg
inc
push
mov
repz
addl
adc
sbb
call
cli
mov
add
xchg
daa
jns
push
cmp
ds
add
outsb
sub
mov
testb
pop
inc
shr
xchg
data16
add
popf
jb
ret
rorl
xor
pop
dec
jl
add
xor
mov
ret
xchg
sbb
fidivs
xor
lret
pusha
push
das
mov
add
ffree
adc
ljmp
xchg
subb
ljmp
xchg
loop
xor
ljmp
lods
ljmp
lcall
popf
arpl
jmp
mov
lods
add
dec
push
lds
pop
jbe
test
into
pop
add
lods
sbb
hlt
and
inc
jmp
gs
sub
sbb
cld
cltd
fadds
loopne
and
jmp
stos
ljmp
lods
scas
inc
lds
add
add
insl
inc
add
fisubl
add
mov
fidivs
rclb
test
xor
call
repnz
and
cmovne
inc
stos
pop
adc
cld
xor
cmovg
xchg
inc
mov
xchg
push
ror
or
push
out
dec
dec
mov
mov
sldt
add
add
add
push
xor
test
jmp
jg
inc
jmp
test
push
jmp
add
sbb
test
scas
mov
scas
cmp
stos
cmp
cmp
sbb
push
rclb
mov
adc
mov
andl
faddl
scas
xorl
add
add
jbe
jmp
sub
fmull
inc
shr
insl
push
test
mov
sub
ja
pmaxsw
mov
ret
stc
scas
jne
mov
add
add
into
ljmp
in
outsb
mov
out
adc
cs
jae
enter
adc
out
cmpl
outsb
lods
lods
movsl
daa
mov
repnz
pop
mov
stc
gs
xchg
repnz
add
ljmp
int
popa
leave
scas
pop
sub
or
cs
xor
mov
into
sub
lock
in
jecxz
or
popa
adc
jae
lods
leave
shlb
add
add
je
or
cli
bnd
popf
rorb
imul
sti
es
popa
inc
loope
es
and
je
dec
and
jmp
out
adc
jmp
push
jae
mov
cwtl
ljmp
data16
sbb
jo
into
and
into
and
sub
add
add
xor
pop
dec
and
push
je
pop
inc
and
out
mov
leave
and
les
and
jmp
hlt
sub
stos
data16
les
cld
out
dec
std
decl
je
jge
repz
add
in
mov
sbb
cmp
js
add
mov
add
add
in
add
or
add
push
add
cmp
cmc
call
subl
jno
add
lea
test
cmp
ffree
in
add
fidivrs
mov
push
test
add
push
aas
je
cld
rorl
sub
popa
xchg
lods
push
testl
push
adc
xchg
add
test
in
and
and
add
mov
pop
inc
shlb
sti
xchg
add
ljmp
fwait
sbb
lret
loop
pop
mov
mov
ljmp
pop
scas
ljmp
loope
and
int
sbbl
add
add
add
add
ljmp
cmpsl
test
movsl
daa
mov
nop
push
fdivs
xor
xchg
jl
mov
sub
lods
jo
sub
js
mov
or
mov
or
mov
jecxz
dec
insl
sti
jb
mov
adc
pop
mov
pop
in
sub
add
ljmp
add
add
add
es
jbe
pop
jmp
sub
ret
leave
ret
loopne
sti
insb
insl
testb
jmp
lret
insb
loop
out
mov
test
ljmp
pop
popa
repnz
testb
lret
mov
ljmp
aaa
in
test
push
xchg
sbb
imul
xchg
pcmpeqd
add
add
add
ja
adc
mov
sti
inc
jae
incb
mov
add
roll
jl
push
jg
pop
add
test
lea
sbb
pop
jle
lahf
popa
pop
and
out
jbe
jns
dec
fistpll
test
mov
bound
fldt
pop
pop
cmp
push
ret
dec
mov
aaa
imul
std
out
jmp
addl
fidivrs
lods
inc
scas
cmp
ret
jnp
aas
scas
je,pt
clc
ret
mov
xchg
or
push
popl
xor
xor
mov
mov
cli
int
and
inc
push
or
push
outsb
adcl
imul
jae
cwtl
aas
cmc
lahf
fildl
add
add
lds
push
daa
ljmp
orl
andl
cmp
push
pop
cmp
sub
pop
andl
popf
sub
in
loope
sub
imul
pop
addb
jbe
mov
pop
inc
jmp
push
imul
mov
mov
fmulp
mov
mov
add
cmpsl
mov
pop
cmpl
mov
mov
pop
pop
bound
pop
push
push
pop
out
popa
mov
bound
pop
data16
push
lea
mov
out
pop
add
push
cmpsl
pop
jle
cmp
xor
lods
pop
mov
cs
lods
movsl
inc
or
stos
arpl
insl
fs
lds
addl
lods
ljmp
lods
xor
jns
ljmp
mov
pop
sti
push
mov
es
lods
ljmp
sbb
insl
xchg
movsb
inc
call
in
flds
ss
pop
inc
and
popa
inc
and
ja
and
jae
and
jne
and
jno
and
jne
and
add
add
inc
and
out
ja
xchg
add
push
ja
and
dec
mov
ret
fcoms
add
mov
add
outsb
mov
arpl
sub
sti
cmp
and
pop
rorl
mov
xchg
out
add
pop
jne
and
ret
cmpsl
pop
icebp
je
jbe
and
ja
lea
or
push
scas
movsb
in
das
pop
clc
shll
bound
inc
je
lret
mov
fs
adc
pop
and
lds
jmp
scas
mov
cli
out
sbb
jns
and
subb
cmpb
mov
mov
jge
adcl
push
xchg
aas
scas
mov
jae,pt
cmp
add
mov
mov
je
ljmp
ss
int3
sti
sbb
mov
ljmp
mov
jne
and
jae
mov
mov
icebp
mov
imul
in
ljmp
push
dec
jbe
and
push
xchg
mov
add
add
ljmp
clc
das
lods
pop
into
push
ffreep
or
add
push
jo
int
jo
xor
mov
test
push
arpl
or
push
test
sbb
insl
push
or
outsb
or
call
jle
and
mov
add
xor
and
sub
daa
movb
cmp
and
add
inc
jne
mov
sub
icebp
inc
addr16
in
sti
adc
popf
jno
adc
daa
add
push
inc
or
aaa
scas
and
arpl
or
jg
push
punpcklwd
pop
dec
jp
add
adc
add
enter
idivl
cwtl
js
pop
inc
in
mov
xchg
mov
rclb
mov
add
mov
ljmp
cmp
add
sub
add
int3
movsl
add
mov
add
test
add
sbb
xor
in
daa
push
and
mov
repz
add
add
das
jae
jne
cmovae
mov
fstl
inc
orl
inc
inc
mov
testl
push
scas
push
inc
std
cli
testl
jecxz
adc
xchg
icebp
adc
lds
mov
ds
ret
inc
les
jmp
add
push
adc
ljmp
lahf
imul
and
lds
sahf
mov
insl
inc
bound
pusha
lds
fucomip
mov
imulb
add
sahf
cmp
scas
arpl
add
or
call
xchg
jmp
jmp
ss
jp
fs
pop
outsb
mov
out
loopne
test
add
add
pop
cmp
ljmp
scas
lock
outsl
add
imul
adc
out
xchg
jecxz
push
pusha
xlat
push
ret
movsb
gs
inc
flds
jno
aad
cmc
xchg
imul
add
fistpl
pop
xlat
push
ljmp
lds
lock
adc
shl
inc
jmp
lods
pop
inc
add
daa
dec
dec
fsubrl
sub
jmp
shll
lea
push
ds
fisubs
and
out
jl
pop
xor
repz
call
out
mov
or
mov
add
xor
loopne
aam
xlat
out
push
cmp
jecxz
iret
mov
mov
or
cmp
add
add
add
out
in
add
cmp
cli
lock
addb
je
jmp
inc
movsl
push
add
push
dec
call
jmp
or
call
sahf
outsl
add
mov
das
sbb
test
lret
push
or
jp
sbb
std
xchg
add
imul
fstps
jge
mov
add
xor
mov
push
push
jae
int3
mov
inc
rclb
mov
rcrb
push
shr
add
and
xchg
roll
push
cmp
sbb
push
jl
xchg
repz
inc
mov
cltd
js
ljmp
daa
int3
out
jle
mov
int
outsl
movl
add
add
add
add
mulb
int
rorb
fildl
xor
add
pop
shrb
scas
mov
call
daa
cmpsb
jmp
or
and
shll
pop
sub
add
test
dec
mov
jg
mov
jae
mov
mov
call
scas
ljmp
out
call
cmp
add
add
add
push
inc
ret
jmp
mov
add
aaa
pop
jbe
movsb
call
mov
scas
push
outsb
inc
add
sub
or
fldl
or
push
cltd
jo
sbb
push
push
add
arpl
icebp
xor
push
push
cli
out
movsb
cmc
rolb
push
xchg
mov
in
daa
mov
jb
out
inc
fsubrp
xchg
cs
push
add
insb
pop
cld
inc
in
cld
push
lods
push
push
lahf
xchg
mov
xchg
mov
pop
shrb
inc
in
sti
mov
jecxz
push
xor
outsb
sub
ja
and
jecxz
push
xor
add
push
stos
outsb
sbb
in
push
cli
jle
inc
pop
mov
cmp
sub
push
and
push
incl
push
jp
or
inc
or
js
fadd
pop
clc
cld
pop
pop
dec
lea
ds
push
je
shl
sti
scas
enter
outsl
scas
cld
fwait
aas
mov
inc
mov
adc
sub
add
mov
add
push
cmpsb
enter
les
or
cld
jg
jp
xor
pop
adc
xor
cld
xchg
out
call
dec
jae
in
or
enter
add
outsb
ljmp
mov
dec
imul
pop
xlat
in
adc
aad
test
sbb
or
aaa
in
dec
fdivp
sub
mov
mov
jo
test
mov
pop
lds
loope
add
inc
or
xor
or
dec
rcl
or
scas
sub
iret
inc
scas
ljmp
or
xchg
das
fildll
mov
js
push
add
add
in
movsl
outsl
push
push
icebp
out
ljmp
daa
in
pop
bound
jmp
add
inc
jmp
in
push
jb
outsl
inc
stc
pop
pop
jne
je
adc
gs
aam
push
daa
ljmp
inc
stc
cmp
pop
adc
fs
add
shrl
pop
jne
je
or
jl
ret
ret
pop
sub
add
add
movb
xchg
dec
or
xchg
jnp
xchg
add
push
hlt
shrl
mov
loop
data16
pop
ret
popf
imul
add
mov
xchg
mov
call
fs
stc
inc
pop
push
jne
cmc
shr
out
add
add
xor
push
fsub
es
push
cli
popa
imul
insl
and
test
sub
add
jmp
mov
inc
scas
addr16
insl
mov
std
mov
stc
add
movsl
std
jno
inc
jae
cmc
inc
out
inc
incl
jmp
mov
add
inc
jle
ficoms
stc
stc
insl
inc
push
lds
add
add
xor
lret
aas
scas
repz
xchg
int
scas
mov
jmp
fdivr
fnsave
cmp
orl
scas
fs
insl
ljmp
jmp
push
test
dec
repnz
xchg
pop
adc
dec
aam
add
ljmp
add
int
ljmp
mov
movsb
mov
adcl
adc
dec
outsl
ljmp
outsl
ljmp
outsl
ljmp
inc
jmp
add
xchg
daa
fnstcw
ljmp
push
sti
gs
fiadds
push
dec
stc
stos
lods
push
push
mov
lods
cwtl
sub
push
jecxz
xor
xchg
dec
mov
test
adc
loop
inc
lock
sti
mov
lods
push
add
iret
inc
mov
or
add
fistl
cmp
out
outsb
scas
and
lahf
or
add
add
cltd
mov
mov
jmp
aaa
cmp
pushl
repnz
xlat
push
je
xchg
xor
jmp
mov
out
repnz
xchg
inc
add
jp
call
out
pop
ret
lds
jp
dec
jmp
add
orb
push
std
sub
imul
test
ret
shrb
pop
sub
imul
mov
add
push
jmp
lea
fwait
imul
mov
test
push
aam
inc
incl
insl
inc
hlt
xchg
outsb
sbb
scas
xchg
js
das
pop
push
inc
mov
mov
scas
inc
jg
mov
testb
cwtl
adc
enter
aam
push
mov
stos
dec
std
cmp
fiadds
add
add
ja
std
jle
aas
push
jle
call
or
cmpsl
adc
jl
subl
pop
ljmp
jle
inc
xor
ljmp
jge
ds
outsb
dec
mov
sub
mov
xor
ljmp
stos
test
bound
rcrl
imul
add
add
add
sar
push
push
sub
andb
in
add
mov
inc
stos
ljmp
stos
ljmp
adc
sub
ret
add
sahf
xor
sahf
sub
fucom
inc
jmp
scas
scas
add
push
into
lods
lods
int3
sahf
leave
scas
scas
add
sbb
movsl
lods
push
adc
push
add
add
out
push
lret
std
out
sti
adc
sti
stc
stos
jge
popf
out
jmp
lods
popa
les
stos
dec
pop
cwtl
pop
mov
xchg
push
sti
rcrl
pop
sti
mov
lods
ljmp
lods
adc
jmp
push
cmp
mov
or
ret
add
dec
lret
cmp
test
push
jge
add
add
xchg
arpl
sub
mov
idiv
cmpb
mov
xlat
testl
mov
cmpsl
idiv
adc
add
adc
fucomip
inc
dec
cli
adc
sar
sti
mov
lahf
idiv
jo
adc
les
repz
cld
addr16
out
subb
add
adc
icebp
add
cld
mov
enter
lret
mov
jge
leave
sti
jle
mov
sti
leave
stos
into
push
sarl
sarb
mov
fcmovne
idiv
lock
sti
cmp
rolb
test
xlat
add
outsb
repz
mov
mov
inc
call
cmp
cs
in
inc
push
ss
jl
scas
call
lds
push
mov
out
repz
stc
push
ficomps
stos
call
mov
inc
sub
push
inc
push
pushf
sub
inc
inc
jmp
movsb
add
push
mov
pop
jmp
dec
outsl
mov
xor
inc
adc
scas
mov
add
ss
lock
push
insl
or
sub
adc
repnz
out
ljmp
dec
push
insl
inc
mov
adc
call
mov
or
cli
dec
adc
dec
jno
inc
jmp
outsb
std
jno
in
push
mov
popa
enter
lods
inc
add
mov
hlt
stos
lods
push
imul
lods
mov
add
xor
or
jmp
jo
stos
lods
dec
aam
aad
inc
jmp
mov
push
xchg
mov
add
and
adc
jno
cld
cld
lods
clc
inc
jmp
in
push
sti
into
sub
aam
cli
jne
cmp
inc
test
cli
aam
cld
adc
test
roll
ret
out
mov
in
lods
or
fwait
paddw
das
in
lcall
ret
pop
js
outsl
or
idiv
js
ret
dec
js
punpcklbw
sub
mov
mov
push
sbb
add
xchg
adc
cmp
filds
sub
int3
leave
add
inc
mov
inc
daa
out
lods
inc
call
scas
inc
decl
add
add
push
cmp
insl
inc
jle
scas
add
sar
push
nop
xchg
sub
cmp
iret
cmp
imul
shlb
xor
cmpsb
inc
mov
adc
std
sarl
or
add
inc
call
loopne
in
ret
sub
jp
push
inc
incl
scas
mov
fsubr
sarb
cs
ljmp
pop
jns
scas
ljmp
int
inc
lods
and
pushf
cmp
scas
popa
mov
lret
jl
outsb
enter
stos
call
ljmp
daa
pop
outsb
ss
hlt
dec
pop
push
stc
test
jne
jmp
aad
not
adc
ljmp
sti
popa
and
es
mov
mov
mov
xchg
imul
sahf
cmp
and
jmp
mov
pop
cmp
dec
mov
ret
out
dec
jecxz
and
sti
inc
daa
dec
pop
stos
mov
imul
fmuls
cmc
sub
or
xor
arpl
xchg
stos
add
lcall
adc
shll
cli
clc
inc
jmp
cwtl
int3
add
lods
or
insl
dec
xor
sub
mov
lods
push
dec
mov
dec
mov
stc
inc
inc
xor
std
jmp
ret
push
mov
add
push
push
mov
movq
xor
push
adc
dec
aad
sti
test
inc
lcall
add
or
in
mov
xor
lock
and
sub
dec
stc
inc
xchg
jge
add
xchg
ss
push
mov
jle
scas
outsb
add
jmp
shlb
les
stc
in
inc
lods
add
dec
dec
stc
sub
pop
xor
add
inc
push
aaa
std
adcl
add
cmp
hlt
sub
test
cmc
add
jae
cmp
fiadds
incl
incl
int3
mov
subl
shlb
inc
rorl
frndint
inc
dec
cmpsl
incl
call
lea
push
mov
mov
xor
repz
adc
adc
jne
movsb
add
add
add
adc
sub
pop
outsl
mov
push
stos
in
call
mov
fidivs
mov
sub
sbb
outsb
ljmp
or
cmpb
fcmovb
icebp
pushf
adc
jmp
add
imul
mov
sub
cmp
add
add
dec
add
jno
inc
jmp
jp
test
mov
add
lods
ljmp
jle
cli
pop
sub
push
pop
or
test
push
and
jmp
in
ljmp
lods
jae
sbb
lods
lea
xchg
in
add
sub
mov
pop
pop
dec
add
xchg
mov
lods
jno
or
pop
pushl
insl
fstpl
jge
and
imul
push
in
jle
filds
lea
dec
lea
jl
mov
test
incl
std
je
inc
lds
sbb
jne
jno
insb
std
in
pop
call
pop
jp
call
mov
mov
add
mov
pop
in
jmp
push
lcall
push
jae
jo
push
cmpsl
lods
push
sub
lods
in
xchg
and
pushf
cmp
std
ljmp
test
mov
xor
fmuls
scas
push
add
mov
clc
scas
jbe
mov
push
jge
add
add
add
or
scas
pop
je
mov
call
cltd
mov
adc
daa
mov
add
add
mov
sar
xchg
add
lcall
hlt
push
xchg
rorb
lods
push
call
sub
add
stos
call
ss
ljmp
xchg
fptan
ss
jecxz,pn
lods
ljmp
xor
pushf
mov
and
std
imul
mov
mov
test
push
mov
add
mov
sbb
cld
and
rolb
inc
jmp
dec
mov
mov
loope
xorb
add
cmp
jae
add
add
call
int
addl
jb
je
sahf
test
mov
mov
inc
jg
shr
mov
sti
push
pop
jb
adc
sti
loope
jbe
es
orl
jne
sarb
aaa
inc
je
inc
inc
push
pop
in
mov
push
dec
and
xchg
mov
add
add
shr
inc
or
mov
jbe
jecxz
cmc
call
dec
xchg
repz
imul
stos
pop
jmp
cmc
push
push
int
pusha
add
push
insb
jns
sti
or
pop
mov
sbb
sti
push
cld
or
push
inc
sti
pushl
push
push
adc
or
sbb
jne
int3
imul
ds
out
add
push
cmp
add
jae
inc
add
add
ss
inc
pop
cmpsl
loope
pop
call
add
pop
out
or
scas
push
mov
xchg
orb
push
in
shlb
xor
push
ret
pushl
sbb
mov
jb
imul
push
pop
or
add
sub
or
into
pop
cli
and
cs
stos
loope
inc
scas
push
push
add
in
sub
scas
pusha
aam
ss
fcompl
lods
scas
push
cmp
ds
jmp
sbb
or
adc
cmp
jmp
jno
lods
jno
cld
cmp
pop
fldenv
jae
inc
testb
out
mov
test
sti
cmp
fistpll
mov
mov
les
xor
ljmp
jno
rcl
mov
leave
jle
dec
add
pop
dec
sub
inc
dec
pop
inc
scas
call
mov
xor
sbb
out
call
cmp
out
jmp
into
out
call
fnstsw
jne
lods
cli
jmp
in
inc
xchg
lahf
mov
sti
jmp
lods
jne
pop
cmpl
add
je
test
pop
ljmp
inc
add
negl
adcl
sub
jbe
xor
jge
jb
cltd
sahf
frstor
insl
inc
push
out
add
xchg
mov
mov
adc
in
add
lods
mov
add
add
outsb
or
imul
jge
dec
inc
inc
sti
push
mov
and
pop
add
js
std
call
jne
lods
out
and
cli
cld
call
pop
in
call
in
cmpsl
jmp
test
ja
push
sti
push
fsubs
sti
mov
xor
jne
mov
cld
dec
adc
add
mov
add
outsl
out
pushl
int
lcall
mov
push
xor
in
xor
push
jne
test
inc
es
xor
cmpsb
aas
scas
pusha
hlt
out
pop
sub
cmp
mov
inc
push
add
jmp
mov
aad
js
loop
mov
adcb
xchg
push
incl
insl
shll
add
add
ja
jbe
xchg
or
mov
in
or
call
decl
repnz
mov
inc
mov
fmulp
mov
loop
mov
jno
int
rclb
aas
lods
jp
jno
call
lods
or
call
fnstcw
nop
pop
daa
mov
les
shr
call
add
xchg
pop
ljmp
jmp
gs
int
cwtl
fwait
rcr
js
xchg
push
lods
out
fwait
jle
adc
rcrl
jae
stos
add
les
test
inc
push
jmp
ljmp
cmpsb
loope
cli
in
cmp
add
xchg
cli
lcall
inc
jmp
add
add
jmp
inc
sarb
stc
sub
xor
jmp
es
insl
jb
dec
insb
ds
add
lods
ljmp
jle,pn
aad
ljmp
add
add
or
add
jmp
jmp
sbb
adc
shrb
pop
xor
test
sti
xor
add
add
arpl
call
out
sbb
push
idiv
out
out
sub
bswap
cmp
subl
sub
imul
push
arpl
mov
sub
fwait
idiv
call
pop
pusha
cmpsl
pusha
sti
imul
sub
mov
fs
je
pop
adc
cmp
shrl
loopne
sti
rorb
push
dec
inc
adc
nop
lcall
scas
sub
ljmp
dec
test
push
ljmp
imul
xchg
adc
aas
scas
push
decl
scas
push
iret
xor
sub
stc
test
rorl
sub
std
sahf
adc
push
add
ds
mov
lcall
scas
push
and
jl
stos
cmpsl
ret
cmp
inc
scas
xchg
jmp
mov
cmp
daa
scas
ljmp
scas
ljmp
xchg
push
pop
sub
cmp
mov
ljmp
pop
cmpsl
call
xchg
sahf
cmpsl
call
sub
ljmp
cmpsb
cli
xchg
jmp
call
fbstp
push
lcall
shl
jmp
js
cmp
ljmp
imul
add
mov
dec
stos
adcl
test
lea
sub
arpl
xchg
stos
add
test
arpl
push
jno
or
cmpsb
cli
add
add
add
or
xlat
fucomp
fucomi
cmp
fs
int
stos
addr16
fnstsw
in
cmp
jmp
sbb
cli
std
loope
cli
xchg
xchg
push
pop
jmp
or
ret
add
out
add
mov
das
dec
mov
and
jb
push
in
xchg
pop
pop
or
ficomps
add
add
rorb
and
cmc
push
xchg
cmpsl
jmp
test
jg
pop
in
add
jmp
add
add
dec
out
sti
mov
add
in
add
push
in
sti
dec
cmp
push
adc
add
out
das
idivl
mov
mov
lods
jne
loope
cmp
scas
mov
sub
fwait
divb
les
add
cli
dec
mov
add
outsl
xchg
scas
push
adc
aas
jnp
out
inc
enter
mov
leave
sahf
in
add
cmp
and
push
sbb
dec
or
inc
pop
push
in
inc
push
stos
push
sub
fcomps
cltd
jmp
ret
scas
pop
in
or
test
mov
push
and
ljmp
push
add
mov
inc
daa
mov
addr16
xor
jno
pushf
not
aaa
sbb
fcmovu
test
clc
xchg
and
sub
mov
frstor
shll
inc
push
dec
js
aaa
shll
das
mov
and
xor
mov
xor
fdivrl
add
add
ljmp
sarb
sub
popa
push
xor
xchg
add
in
cs
pop
in
mov
pop
sti
push
test
or
jmp
jmp
dec
arpl
jl
sbb
fidivs
mov
sti
repz
jmp
sbb
test
jg
scas
imul
push
mov
add
dec
jae
adc
sti
mov
pushf
dec
inc
jb
shll
xchg
adc
jne
das
mov
std
call
sub
add
mov
fistl
cld
jne
xlat
xlat
add
xchg
jnp
cld
aaa
loopne
std
adc
jle
cmp
das
shlb
cmp
add
add
jp
test
in
adc
jmp
aad
inc
daa
jecxz
dec
jmp
dec
push
fcoms
call
mov
pop
adc
xor
or
incb
mov
add
scas
or
mov
add
rol
jae
jo
jmp
sahf
enter
cltd
data16
mov
add
add
inc
pop
xchg
xchg
movsl
and
pop
loopne
inc
or
testb
add
stos
or
dec
pop
and
incl
test
inc
cltd
add
mov
push
leave
aaa
std
sbb
inc
or
scas
aam
jae
sbb
aad
jl
sarb
inc
ljmp
mov
add
add
pop
lret
mov
gs
in
nop
insl
sbb
jecxz
cmp
adc
xchg
pop
leave
test
mov
jnp
xor
sub
lods
lock
ss
add
stos
enter
stc
ret
lods
jmp
jns
repz
movsl
inc
mov
scas
ljmp
popf
inc
pusha
dec
adc
add
sbb
mov
sub
repz
lods
clc
sarl
sub
loope
xchg
xchg
inc
adc
xor
adc
add
jbe
push
mov
int3
imul
ss
xchg
cmpsb
std
sti
pop
fimull
mov
mov
mov
scas
stc
popa
jle
hlt
sub
add
add
mov
push
out
xchg
das
xchg
out
xchg
enter
icebp
pusha
hlt
jmp
addb
jl
mov
mov
jecxz
pop
and
mov
cld
push
push
push
sar
je
addr16
out
rol
jl
mov
cmp
or
rolb
jbe
adc
push
fistpll
xchg
test
or
or
xor
sti
orb
push
call
insb
mov
cld
je
xor
pushf
sahf
jmp
mov
inc
test
jp
dec
incl
mov
data16
lcall
pop
add
dec
xchg
sahf
hlt
mov
and
push
sub
add
add
lret
scas
fmuls
rcrl
push
ficomps
sbb
pop
mov
add
mov
repz
pop
cld
jecxz
lds
psubsb
mulb
std
sub
xchg
push
les
inc
ss
mov
std
sub
test
pop
cld
aaa
test
shrl
mov
loopne
and
add
mov
rep
ss
add
xchg
cwtl
cltd
mov
sbb
popa
cs
cmpsb
jl
in
fdivp
push
sbb
and
mov
jg
push
nop
scas
dec
insb
loop
adc
jg
xor
xor
jno
movsl
popa
lods
repz
incl
arpl
mov
loop
into
movsl
arpl
jecxz
imul
and
out
cmp
xchg
test
ret
roll
cmp
ret
mov
imul
aaa
dec
xchg
cli
mov
rcr
ss
in
stos
sub
mov
arpl
push
sti
sbb
pop
sub
jbe
push
mov
stos
cmc
cltd
nop
hlt
cli
fcoml
sub
sub
std
in
fildll
and
add
ljmp
into
test
mov
jl
fcmovnu
ja
sbb
push
mov
push
lock
cmp
lcall
add
pop
cmc
xchg
out
add
ja
adc
or
add
push
push
xor
push
and
add
add
inc
je
and
test
out
add
out
inc
xchg
icebp
push
pop
jmp
mov
imul
pop
sti
call
outsb
inc
test
inc
scas
movsl
fadd
fwait
shrb
std
fwait
jnp
aas
scas
call
test
inc
scas
cld
mov
mov
fcmovb
inc
inc
or
lahf
add
sub
jnp
push
std
sbb
fld
and
mov
jb
scas
xor
fstps
mov
cmp
jmp
daa
pop
push
jmp
add
lock
sub
push
cwtl
stos
call
sbb
fdivrp
cmc
imul
stc
sbb
sbb
xchg
aaa
mov
add
add
idivb
out
aas
lahf
sub
add
xchg
mov
scas
clc
add
pop
shll
in
xchg
out
add
or
gs
xor
scas
pop
xchg
xchg
push
add
pop
xor
jmp
in
xchg
ljmp
test
clc
jmp
imul
add
adc
sub
movsl
ljmp
clc
mov
pop
sbb
add
xchg
cli
hlt
inc
aad
jmp
sub
jmp
cltd
mov
xchg
pop
ss
push
out
mov
cs
push
sub
mov
in
fwait
dec
adc
jne
jns
dec
jmp
idiv
adc
jmp
cmpl
xor
adcl
ljmp
mov
jns
or
decl
jp
push
call
out
add
pop
adc
pop
lods
call
pop
mov
test
jne
add
pusha
out
add
inc
or
ljmp
add
push
ljmp
popl
das
faddl
push
or
scas
adc
or
mov
call
incl
outsb
aam
push
adc
ret
inc
inc
sbb
inc
cmp
scas
xchg
adc
mov
sbb
mov
dec
int3
fldt
stos
out
aas
scas
cmp
push
push
adc
xor
add
add
adc
push
outsb
adc
pmullw
adc
scas
xchg
ds
sti
or
inc
scas
cwtl
jmp
mov
insb
fstp
lods
ljmp
jb
or
aam
cmp
test
lods
add
shl
ljmp
lods
ljmp
ljmp
and
test
fldl2e
call
mov
push
out
sub
pop
repz
dec
push
cmp
pop
jmp
mov
fidivrs
lods
mov
sarb
ss
out
cmpsl
int3
repz
sti
mov
sub
add
mov
mov
mov
out
mov
jno
out
and
sub
jmp
mov
push
shll
add
and
mov
sahf
and
addl
xchg
pop
sub
jmp
mov
sub
fiadds
loopne
adc
mov
cli
aam
std
inc
jmp
fdivs
xchg
scas
fld
aas
insb
out
add
or
cli
rcrb
lret
or
icebp
jl
xchg
je
cmp
push
inc
push
inc
ja
xchg
jl
xor
pop
pop
ret
or
sarl
or
cld
je
out
cld
adc
in
ret
push
push
out
pop
pop
or
or
jmp
xor
mov
push
ljmp
orps
adc
add
movsb
shll
cmp
cmp
add
call
add
gs
add
add
cmp
cld
in
jae
cmp
jmp
addr16
pop
dec
call
call
out
in
mov
jmp
outsl
arpl
jb
xchg
gs
adc
aas
scas
cmp
outsl
cmp
jb
aad
add
icebp
adc
inc
jns
adc
incl
add
add
adc
add
inc
pop
adc
mov
mov
mov
mov
mov
mov
mov
and
mov
adc
inc
std
out
bound
lods
cwtl
xor
lods
push
ljmp
and
outsl
mov
std
mov
aas
mov
xchg
lcall
xor
test
js
bsf
cmc
mov
lods
in
aad
stc
and
or
jmp
add
lahf
sub
push
xor
scas
cmpsl
lcall
sbb
sub
jns
jge
sar
lods
pop
inc
jbe
lock
jno
push
mov
xor
inc
cmp
add
and
sti
insl
ljmp
cltd
mov
sbb
lods
ljmp
jmp
and
jge
and
cli
jmp
popa
push
lcall
adc
mov
in
call
in
add
mov
mov
mov
imul
in
push
mov
call
cmp
jp
addl
add
cs
pop
leave
xor
jae
outsb
jp
lea
ljmp
add
push
out
add
mov
stc
dec
jb
cmpl
jmp
out
push
je
repz
add
repz
imul
add
repz
in
add
mov
add
out
add
dec
cmp
or
mov
add
js
ljmp
xchg
and
stc
xorb
test
mov
adc
ljmp
or
xchg
mov
fstpt
xchg
jle
call
jecxz
push
cli
in
push
pop
jmp
lods
adc
ljmp
or
and
in
in
lods
adc
ljmp
add
add
jmp
cmp
divl
ljmp
test
xor
sub
testl
mov
fisttpl
mov
stos
call
repnz
iret
xchg
shrb
adc
or
sub
jmp
lea
ljmp
stc
sub
cs
mov
leave
and
add
lods
jmp
int
faddl
scas
ljmp
lret
out
fstl
and
jmp
sub
add
jmp
insl
push
xor
loopew
sub
dec
sbb
cmp
mov
mov
pop
sub
mov
insb
out
jmp
push
sub
add
jmp
jecxz
jb
imul
push
add
inc
xorb
out
test
mov
pop
cmp
ss
add
pop
jmp
pop
dec
lods
addr16
lods
cmp
lods
dec
ret
cmp
push
out
xor
mov
pop
jb
cs
push
cmp
jno
add
ljmp
jo
jg
xor
cld
subb
outsl
mov
push
jbe
lods
sbb
cmpb
inc
push
ljmp
iret
sbbl
sbb
rcl
leave
push
dec
test
pop
test
and
sub
std
mov
xchg
dec
enter
jp
cltd
and
xchg
int
in
out
xchg
pop
aad
std
mov
xchg
inc
enter
add
jg
xlat
std
jg
add
add
mov
lret
das
rolb
or
add
and
add
xchg
sub
pushl
push
call
push
dec
sub
mov
sub
ljmp
test
add
add
add
imul
and
jno
repz
jno
sti
pop
jno
sarb
jae
call
mov
jae
call
sub
or
inc
mov
mov
adc
cmp
push
addb
adc
stos
xchg
test
and
xchg
outsl
test
sub
aad
daa
sub
mov
xor
add
dec
addr16
out
movsb
adc
loop
mov
and
pop
inc
add
in
add
xchg
movsb
add
xor
sbb
jo
enter
fisttps
pop
scas
arpl
shlb
notb
and
or
adc
popf
add
sub
jb
mov
add
add
add
stos
ljmp
add
add
sub
adc
lods
sbb
inc
add
stc
or
push
out
sti
dec
and
cmp
add
orb
xchg
xchg
dec
setae
cli
call
cmp
mov
test
mov
int3
and
test
call
pop
sldt
add
inc
loope
add
test
add
sti
lcall
sbb
pop
movhlps
pop
add
out
ret
inc
xchg
inc
outsl
test
daa
mov
cmp
mov
cmp
sub
test
std
mov
inc
fildl
mov
push
ja
rorb
clc
subb
fistl
scas
cli
mov
add
sbb
add
cmc
sbb
sub
call
pop
or
roll
mov
scas
add
out
sub
cmpsb
and
add
cmpsl
mov
cmp
jae
push
aas
jmp
outsb
arpl
or
ljmp
jmp
insl
inc
loop
pop
cmp
push
mov
mov
cmp
sbb
mov
stos
lock
jo
int
jecxz
call
scas
int3
repz
scas
in
sbb
add
scas
insl
into
clc
jl
out
mov
xor
lock
cli
mov
sub
xchg
popf
loopne
fisubs
loopne
add
jl
into
sarb
aam
adc
loopne
std
loop
xchg
cli
add
add
add
int3
sbb
jmp
dec
or
loop
and
dec
aam
and
repnz
outsl
dec
in
insl
cwtl
fsubrl
fdivrs
movsl
add
or
push
sti
push
xchg
xchg
or
sti
test
xor
xchg
shl
es
test
scas
test
loop
daa
ror
cmc
lret
outsl
inc
inc
mov
or
mov
adc
sbb
mov
push
add
jmp
cmp
push
test
adc
fstpl
and
adc
jmp
mov
add
sbb
inc
jmp
into
add
rorb
inc
sbb
jl
push
xchg
inc
pop
lea
and
xchg
inc
and
and
adc
add
lcall
incl
push
jne
nop
add
push
cld
xchg
repz
cmp
push
test
cmp
leave
add
scas
push
inc
repz
into
std
cld
sub
mov
jae
test
or
test
out
orb
add
add
ret
faddl
std
fldcw
add
ljmp
bound
jp
add
lds
cld
out
aaa
ljmp
or
ljmp
sub
stc
xchg
add
push
scas
add
lds
clc
out
jmp
add
jecxz
mov
out
inc
adc
aam
fs
jae
jmp
add
jecxz
mov
pop
loopne
fsubs
fcmovb
fld
adc
test
mov
inc
testl
mov
add
insb
idiv
icebp
adc
mov
mov
shl
fsts
shl
loope
aam
repz
out
mov
jle
add
cli
ret
daa
lods
out
mov
cmpsb
lret
shrl
jmp
xor
xorb
roll
lods
bswap
inc
push
or
bound
iret
scas
push
fs
fisubl
add
out
shrb
and
add
xchg
or
jmp
jns
push
jmp
or
cmc
rolb
aas
mov
push
popa
inc
add
subl
or
add
icebp
imul
push
add
add
cmpl
inc
jl
add
pop
adc
je
addr16
and
clc
loop
dec
out
sbb
outsb
or
into
or
inc
addr16
or
bound
or
out
inc
push
push
or
add
jge
adc
cli
pop
jmp
push
adc
rcpps
or
data16
or
add
jg
add
mov
jecxz
pop
mov
inc
or
cmpb
scas
add
mov
scas
dec
dec
add
lret
jns
sub
pop
jae
sub
dec
jae
sub
add
add
or
push
dec
sbb
adc
sbb
push
call
push
leave
inc
cwtl
add
dec
lock
sbb
add
push
in
ds
add
pop
ss
add
jecxz
inc
clc
xor
mov
call
adc
jmp
repnz
cli
push
push
out
dec
mov
sti
push
or
push
mov
fs
mov
call
mov
jns
test
cs
mov
mov
jmp
stos
add
ljmp
loopne
sbb
call
mov
sub
pcmpeqd
sub
sub
add
add
pop
push
call
mov
test
mov
add
cmpsb
adc
test
add
lods
push
jecxz
mov
arpl
je
ja
adc
push
and
jmp
mov
fwait
or
ja
push
adc
psubq
sub
push
mov
dec
repnz
add
add
dec
xchg
pop
add
imul
shlb
xlat
jmp
inc
mov
jmp
sub
outsb
sbb
adc
pop
add
bound
jmp
inc
jns
call
je
imul
push
cmp
or
or
push
push
ret
inc
cmp
call
bswap
hlt
pop
add
and
aas
addb
add
int
outsb
and
or
clc
pop
jbe
jo
push
jmp
arpl
jg
jge
sub
jo
adc
mov
clc
add
add
stos
sbb
jg
hlt
or
jo
adc
nop
inc
xchg
push
pop
scas
add
into
adc
shlb
pop
add
or
inc
mov
test
jns
push
lea
mov
push
ljmp
jae
int3
lea
ljmp
imul
lock
ror
push
adc
ja
push
push
imul
jmp
sub
stc
movsb
test
pushf
fnstsw
lods
mov
sbb
or
scas
popa
in
pop
sub
cmpsb
add
xchg
sub
xchg
xchg
out
mov
cmc
add
mov
add
testl
out
xor
notb
add
vpminsw
in
movsl
ljmp
scas
out
jmp
sub
inc
call
mov
add
test
or
shlb
jmp
xor
xchg
andb
call
lods
ljmp
popa
psubq
sbb
add
sub
dec
decb
es
add
loop
adc
add
clc
cwtd
sti
enter
imul
arpl
push
clc
ret
inc
push
shl
shl
add
cmp
incl
test
add
xlat
bound
stos
fisttpll
pop
or
push
fistpll
xor
pop
inc
adc
cli
sub
mov
add
ffree
inc
xchg
loop
push
out
sbb
or
gs
incb
cli
or
pushf
testb
add
add
add
add
sub
xchg
mov
add
lds
xor
mov
mov
mov
leave
pop
inc
scas
test
or
cmp
scas
cmpb
add
and
aad
sbb
imul
lods
add
inc
scas
repz
sub
xchg
out
and
or
scas
push
inc
add
adc
inc
lods
sbb
rolb
add
mov
inc
call
adc
ljmp
stos
add
scas
ljmp
lret
stos
call
xor
pusha
mov
lock
pop
jecxz
scas
or
mov
mov
aaa
pop
stc
push
ret
jecxz
int
shrl
sub
add
mov
push
scas
ljmp
mov
cmp
cmp
lock
cmp
ljmp
out
call
sti
in
push
outsb
sbb
sti
jmp
xor
test
mov
add
lock
add
out
scas
filds
add
lods
or
mov
push
sub
sti
jmp
xor
test
add
add
cmc
out
scas
jb
jmp
shlb
aaa
cmp
test
adc
test
out
in
pop
nop
pop
in
add
ja
out
addl
push
cmp
cmp
and
inc
cltd
inc
or
or
es
decl
push
add
pop
add
popf
mov
sbb
je
lock
cmp
cltd
sbb
mov
sti
lcall
imul
imul
lock
xlat
jmp
inc
aad
loop
lret
sbb
outsb
dec
pop
enter
fwait
and
test
jg
test
jp
mov
push
push
mov
lret
subb
mov
sub
andl
add
add
add
add
sub
addl
sbb
lcall
mov
adc
jmp
test
adc
sahf
cs
and
call
nop
testb
xchg
ljmp
aad
adc
or
dec
lret
inc
scas
add
or
jmp
pop
imul
and
ljmp
fst
pop
dec
mov
pop
aas
xchg
fimull
ret
sub
bound
outsl
movsb
jo
push
shrb
ljmp
lods
rorl
es
add
mov
push
push
in
es
call
jo
sub
add
adc
sbb
or
jno
or
fldenv
mov
sub
push
out
or
cmp
lahf
push
or
mov
in
or
jmp
mov
pusha
mov
mov
lods
ljmp
scas
hlt
call
std
mov
xchg
sub
sub
decl
sahf
out
add
andl
add
add
add
testl
test
cli
out
ret
aaa
lods
jo
in
lea
in
ja
jmp
adc
in
mov
jmp
test
add
repnz
psrlq
add
push
adc
sti
addr16
test
int3
mov
mov
add
mov
add
or
out
mov
inc
in
sub
pusha
dec
mov
jb
call
aam
adc
in
popf
or
inc
xchg
add
pop
out
or
int
add
cmp
and
scas
nop
in
cld
mov
adc
cmpsb
jp
or
fiadds
add
mov
add
mov
add
add
mov
push
jl
jg
or
cmpl
pushl
add
add
cmp
sbb
lods
and
xchg
add
out
gs
dec
push
xor
adc
inc
lods
ja
add
ljmp
leave
and
sti
xor
call
repnz
imul
mov
into
add
scas
ljmp
scas
ljmp
scas
push
std
mov
add
mov
aad
call
repnz
imul
addr16
add
lods
fildl
scas
ljmp
aaa
cli
cmp
mov
adc
leave
imul
ja
mov
add
insl
jg
ljmp
scas
ljmp
mov
in
add
sub
in
add
out
add
test
shrl
in
add
sub
fimull
call
ret
loop
push
cli
jle
mov
rorl
sub
or
in
add
ret
xor
gs
cli
push
test
adc
mov
cli
sub
or
xor
repnz
in
lods
clc
inc
imulb
ljmp
xchg
add
jmp
add
ret
jge
or
adc
xchg
jle
xchg
jmp
ret
insb
data16
add
je
xor
andl
jecxz
js
call
fisubrl
outsl
or
add
add
mov
cmp
aaa
cld
incl
call
mov
push
test
std
call
jg
adc
dec
xchg
or
add
loop
nop
cli
std
subl
testl
jb
and
inc
and
sahf
add
scas
adc
fs
adc
std
test
adc
mov
mov
push
or
add
add
add
xchg
add
scas
xchg
out
fisttpl
lds
aas
fiadds
adc
or
push
js
jbe
inc
add
mov
jb
xchg
out
mov
and
lds
cmp
test
pushl
ljmp
lods
sub
or
and
lods
out
pusha
call
mov
scas
ljmp
das
ja
add
push
out
stos
dec
add
mov
and
mov
jmp
add
ljmp
sub
jle
push
jb
cld
cs
add
push
and
push
out
sub
addb
ljmp
sahf
jno
cmpsl
add
loope
daa
ljmp
pusha
lock
in
xchg
and
push
sub
loope
jns
pusha
push
sbb
in
inc
out
ret
add
outsl
repnz
mov
scas
jns
cmpsl
lock
cmp
repz
fdivrl
dec
pushf
cmp
sbb
call
jae
jne
cltd
and
fsts
std
shlb
pop
arpl
add
add
and
add
xchg
les
lds
xchg
lock
imul
out
adc
or
push
pxor
test
gs
es
add
aas
and
cmpl
cmp
shlb
ljmp
push
or
and
jmp
jg
js
fldl
push
call
mov
insb
mov
int3
jmp
gs
pop
jae
pop
add
xlat
jl
scas
lea
les
test
cld
or
adc
pop
mov
inc
adc
xlat
ljmp
jbe
or
push
xchg
or
cld
sbb
xor
push
and
sbb
add
call
cmp
mov
jg
scas
adc
add
outsb
pop
into
sbb
in
sub
inc
mov
mov
ljmp
repz
cmp
sbb
inc
jle
roll
mov
pusha
inc
mov
cli
outsb
inc
ret
jae
mov
rol
mov
add
add
jnp
or
jmp
lea
pop
xchg
gs
outsl
enter
sub
cmp
adc
sub
cmp
ficomps
jg
cli
mov
jge
loope
jg
out
pusha
inc
mov
jmp
add
jbe
leave
lods
jle
jb
out
test
xchg
iret
xchg
mov
and
add
add
sti
arpl
insb
push
jmp
scas
adc
outsl
fistpll
cs
cld
push
les
int
ljmp
in
jge
bound
sbb
ret
and
sti
mov
adc
add
fcomip
das
lahf
ja
fs
idiv
cmpsb
jmp
adc
hlt
xchg
xchg
scas
addl
out
bound
add
add
out
lock
incb
inc
in
and
push
in
push
xchg
mov
xchg
out
push
in
sbb
push
in
orb
in
pop
mov
in
mov
mov
in
add
out
add
out
add
out
pop
mov
out
add
out
pop
mov
out
pop
mov
ret
add
sbb
ret
add
mov
inc
dec
xor
inc
in
and
inc
lcall
xor
sub
pop
and
cwtl
xor
fbstp
inc
decl
sub
or
inc
jmp
push
inc
lcall
sbb
aas
sbb
pushl
add
add
add
add
add
sub
ret
aas
ret
sbb
add
sbbb
add
add
pop
sub
sub
sub
sub
sub
sub
sub
gs
add
gs
add
push
stos
add
fs
out
ljmp
jnp
sub
push
mov
rclb
shrl
push
mov
jo
imul
adc
test
xchg
jmp
addb
and
repz
in
xchg
mov
aaa
aad
fs
fiaddl
pop
mov
ljmp
xor
add
xchg
jmp
add
idiv
pop
in
shrl
shlb
push
ljmp
lods
pusha
add
mov
loop
ljmp
add
rcrb
scas
adcb
aam
sub
and
test
sub
mov
add
add
pop
or
push
imul
jl
cmc
cli
push
shrl
std
lret
sbb
daa
outsb
loope
cmc
sbb
inc
jae
cmpl
push
pushf
push
push
inc
xchg
cld
xor
adc
jp
sbbl
call
stc
add
call
outsb
in
mov
cmp
jae
mov
lods
pop
leave
push
movsl
mov
add
daa
push
scas
shr
mov
add
add
imul
pop
out
jns
out
mov
add
mov
inc
repz
push
pop
or
lahf
roll
scas
add
imul
sbb
mov
mov
dec
push
xchg
lods
in
rclb
aas
add
ret
or
jns
arpl
cmpb
lds
add
sub
add
add
jle
ljmp
ljmp
mov
fsubrl
mov
sub
insl
scas
addr16
or
fldcw
mov
bnd
pop
jo
aas
outsb
mov
in
dec
in
jno
jge
adc
in
push
sbb
pushf
out
dec
fstpl
push
fdivl
push
jecxz
insb
sub
pop
scas
or
add
add
daa
push
repz
pusha
scas
mov
mov
fidivrl
push
in
jne
loop
xchg
insl
mov
add
aaa
xor
xor
inc
aas
lods
std
cmp
fwait
addr16
mov
sbb
push
nop
enter
push
bound
out
xor
into
lock
ljmp
vpsubd
adc
add
add
or
fcompl
jge
bound
mov
and
mov
cli
gs
jge
cli
in
mov
lods
mov
cli
es
add
movb
movl
sbb
inc
imul
jae
addr16
cmpsl
out
aas
movsl
es
pusha
push
das
rcrb
incl
add
add
xchg
mov
sti
call
xchg
jmp
cmp
cltd
fmuls
adc
int3
cmp
xchg
inc
mov
xchg
mov
add
jns
or
dec
fldcw
add
outsb
js
and
and
mov
adc
mov
xchg
push
std
xchg
xchg
cld
subl
xchg
scas
add
cmpsl
mov
loope
inc
loopne
cld
push
jge
and
mov
add
xor
sbb
out
out
mov
push
or
ss
xor
adc
lock
stc
ss
test
jne
mov
and
scas
ljmp
scas
arpl
sub
ljmp
cltd
gs
push
mov
pop
insl
sub
add
ljmp
and
add
xor
fmuls
aaa
loop
outsb
ret
mov
lds
mov
scas
add
inc
scas
ljmp
mov
xchg
pop
jmp
pop
arpl
add
fwait
add
iret
in
cli
adc
jmp
push
popf
adc
lods
frstor
adc
out
repnz
ljmp
pop
test
cmc
cmp
push
xor
cmpb
lcall
jo
add
add
cli
jmp
pusha
out
testb
ds
pop
data16
or
cli
pop
xor
jbe
loopne
std
dec
push
imul
add
xchg
cmc
mov
loop
fs
mov
adc
pop
cld
cwtl
xchg
cmc
call
sbb
mov
jnp
jmp
cmp
dec
ja
xchg
fiadds
sahf
lods
icebp
push
pop
movsb
ds
cmpxchg
paddd
outsl
mov
sti
call
and
jmp
pop
loope
sub
jo
aas
inc
loope
cwtl
pop
fstpl
mov
add
mov
popf
fdivr
or
arpl
rclb
sub
andb
xor
jge
jle
or
add
add
jnp
add
push
imul
scas
add
jmp
cmpsl
icebp
mov
jge
add
js
hlt
xor
add
cld
jmp
fimuls
sbb
xchg
scas
fucomp
jmp
loope
imul
mov
push
pop
push
ljmp
add
aam
mov
add
add
pop
cmpsb
fbstp
sbb
call
fmul
movsl
sbb
insb
out
out
jbe
in
call
insb
in
in
cli
jmp
fcmovnu
insl
fmull
cmp
fildl
xchg
pop
aam
and
fisubrl
jbe
mov
loop
in
sbb
call
cmc
fistpl
in
jbe
call
add
sub
cmp
mov
test
push
pushf
dec
mov
mov
ljmp
jle
xchg
mov
loope
mov
es
ret
xchg
lods
arpl
pusha
out
sbb
cmc
jne
cmp
mov
je
jle
xchg
jmp
ljmp
in
xchg
test
add
mov
mov
ljmp
fs
das
insb
insl
pop
sub
push
xchg
das
sbb
std
decl
xor
pop
or
push
mov
push
pop
movsl
loop
jbe
std
mov
xchg
add
in
xor
lahf
xchg
bound
and
pop
test
push
sbb
push
push
loopne
std
lock
add
xchg
int
push
jle
ja
adcl
data16
push
add
cmc
mov
mov
cmp
lcall
jne
daa
pop
pop
adc
mov
xchg
push
xor
neg
ss
pop
sub
push
pop
xor
loope
imul
in
push
outsb
roll
jb
sub
cld
insl
push
shll
add
add
pop
cmp
popa
lods
mov
mov
xor
xchg
pop
cltd
push
jl
push
shlb
pop
dec
and
mov
jnp
icebp
int
rclb
shr
les
scas
dec
cmp
dec
inc
and
ljmp
ja
sbb
cld
imul
xchg
mov
cltd
out
arpl
push
or
imul
jae
pop
mov
inc
jo
xchg
repnz
das
stos
loopne
das
stos
lock
jmp
add
imul
rolb
imul
je
mov
out
xchg
mov
out
stos
push
mov
xchg
mov
jb
test
xor
add
sbb
xchg
and
pusha
xchg
cmp
add
add
loop
jmp
roll
out
cmp
sub
je
ljmp
or
insl
ljmp
movsb
in
cmp
in
push
aaa
movsb
frstor
mov
loopne
cli
insl
ljmp
sub
push
cmp
mov
adc
nop
add
add
add
repnz
sub
jae
loope
sub
add
sub
cmp
dec
add
mov
call
xlat
out
pop
pop
jns
rolb
aas
cld
xchg
test
push
call
sub
jp
mov
add
jno
mov
or
ret
pop
std
lcall
push
mov
mov
xor
pushf
adc
leave
xor
mov
into
mov
jo
imul
add
sub
jno
add
aad
push
scas
adc
xorl
rolb
decb
push
cmp
ret
sar
jmp
dec
mov
cld
sbbl
iret
out
add
cld
aaa
xchg
cli
mov
cmp
sti
icebp
cmp
add
imul
xchg
jl
std
mov
push
ret
shll
jmp
dec
inc
or
jae
jl
shll
push
and
rorb
adc
in
xchg
pop
outsb
inc
xchg
cmp
aad
repz
scas
lods
pop
sub
loope,pt
jae
sbb
ret
stos
subl
insl
notb
add
cmp
aad
push
fildl
movsb
pop
call
fwait
mov
and
push
call
cmpsl
and
sub
stos
stmxcsr
imul
jecxz
push
mov
mulb
sbb
pop
or
int
cli
out
mov
rcrl
fldl
cli
flds
add
add
cs
sub
sbb
imul
scas
lods
inc
sahf
stos
cmc
mov
dec
cmp
pop
or
jg
add
test
lods
inc
outsb
stos
jo
mov
sub
loop
sub
cmc
mov
mov
inc
in
stos
cmp
repnz
mov
adc
aas
fucom
out
ret
stos
test
push
icebp
cli
add
mov
add
add
xchg
call
rorl
movsb
and
mov
inc
out
xor
scas
sbb
jle
stc
cld
mov
dec
or
sub
call
lods
loop
inc
inc
push
xchg
push
std
adc
xchg
test
adc
mov
cmp
ljmp
or
rolb
ret
add
add
out
pop
add
adc
cmp
addr16
inc
inc
add
sarb
add
push
testb
or
fldt
xchg
or
and
test
push
mov
sub
add
jae
icebp
push
push
jp
in
xor
and
or
testl
testb
add
lcall
shr
cmp
imul
aad
and
pushl
mov
mov
popa
jno
push
and
out
loopnew
insl
mov
rcrl
cs
jle
into
add
and
pop
mov
insl
and
dec
mov
out
mov
test
push
iret
inc
loopne
cmp
add
add
insl
pop
pop
xor
fstl
jg
nop
xchg
cltd
fistpll
sub
jb
add
insb
test
test
scas
stos
mov
shl
cmp
sar
rcl
lahf
inc
add
add
pop
ds
mov
fdivrp
mov
cmc
gs
pop
sub
mov
flds
xchg
push
cwtl
jns
popa
cwtl
jmp
lods
ljmp
jo
cli
sub
shll
inc
inc
push
add
imul
addr16
cs
test
jmp
ljmp
loop
jp
jmp
ljmp
call
pop
stc
add
stos
pop
pop
jle
jp
push
roll
inc
das
push
dec
xchg
inc
xchg
sbb
adc
pop
cld
xor
pusha
ret
js
jle
add
andl
subb
add
sub
pop
das
cli
inc
push
test
std
decl
sbb
je
adc
test
mov
push
lods
out
add
insb
icebp
sub
mov
inc
adc
scas
rcrl
sub
testb
add
sbb
les
subl
imul
mov
cs
pop
gs
cmpsl
push
ret
or
dec
inc
and
add
cmpl
jecxz
inc
mov
jnp
xchg
add
ror
dec
inc
sub
or
pop
in
pop
pop
sub
add
ret
fcomip
aas
scas
pop
jmp
mov
inc
inc
or
inc
jmp
arpl
bound
fiaddl
dec
imul
pop
stos
outsl
stos
out
imul
data16
and
subb
jp
add
push
movsb
push
fnstcw
push
cltd
jle
lcall
inc
mov
in
out
xor
add
outsl
cmp
pop
xchg
xor
add
and
repz
scas
shll
test
addr16
mov
and
loope
pop
imul
sahf
mov
mov
or
movsb
imul
fnstcw
and
es
jmp
or
jmp
jle
mov
sub
fs
mov
lock
push
cmp
arpl
call
arpl
inc
inc
pop
test
arpl
test
cmp
iret
orb
sbb
aaa
mov
jne
mov
call
adc
mov
xlat
pop
jmp
je
pop
mov
rcll
xor
incl
add
add
out
or
xor
pop
mov
sbb
test
movsb
std
call
push
add
push
lahf
fildl
adc
jno
decl
std
jne
pop
inc
or
stos
adc
push
cmp
mov
movsl
outsl
adc
xor
call
ljmp
dec
les
test
jmp
roll
cmpsb
mov
mov
cwtl
dec
insl
sub
stos
rolb
mov
dec
shlb
lahf
scas
ret
jne
dec
sar
fsubrl
std
jge
pop
or
dec
mov
add
add
adc
jns
cmpb
dec
ret
decb
fsubr
fldl
outsb
aas
bound
loopne
decl
push
imul
add
add
add
add
mov
jle
pop
and
fsts
hlt
xchg
in
push
cs
loope
jge
jnp
icebp
pop
mov
mov
in
jns
or
gs
inc
loop
enter
sti
popa
gs
aaa
sub
add
stos
pushf
repz
pop
scas
xlat
lcall
flds
leave
loop
xor
lods
ljmp
cs
or
pop
fcomps
mov
gs
mov
dec
in
and
add
adc
lock
fs
pop
pop
push
push
push
jmp
into
or
cmc
add
jne
int
ds
not
test
jo
sti
aad
or
call
xlat
cli
bound
inc
add
out
shll
add
add
add
jg
icebp
adc
ljmp
mov
ljmp
stos
ljmp
in
ljmp
mov
outsl
sbb
cmp
push
clc
cmp
jmp
sar
jne
mov
adc
add
push
loopne
push
push
add
mov
in
dec
in
add
xchg
scas
outsl
xor
incl
cld
jne
add
add
cmp
jmp
into
std
jne
scas
outsl
adc
cmp
push
ficoms
add
inc
xchg
push
inc
sub
scas
or
add
push
fldl
xchg
jle
mov
add
cmpb
or
or
add
scas
stos
sub
mov
cmp
ret
xor
mov
push
outsb
ret
cmpl
flds
push
sub
jp
scas
ret
push
pop
dec
or
repz
jmp
les
sub
dec
jle
incb
cli
insl
ret
ja
stos
inc
xorb
sbb
dec
test
jb
add
or
xchg
cld
ljmp
mov
add
add
and
les
add
ljmp
lods
fcmovbe
inc
scas
cli
push
jle
int3
cmp
insl
jg
xlat
mov
jns
repz
into
movsl
lds
lods
adc
jmp
les
test
pushf
inc
jmp
add
pop
or
inc
mov
sbb
stc
test
pop
xor
aas
xorb
ret
xchg
js
ret
mov
les
mov
int3
or
inc
scas
aaa
fwait
js
xchg
sub
pop
jmp
je
xlat
adc
sub
aaa
imul
jne
je
push
or
dec
hlt
imull
stos
popa
fldcw
push
fs
pop
push
insb
jmp
dec
push
ljmp
jno
mov
pop
jmp
cmc
fldt
repz
aam
jmp
xchg
and
fsincos
insl
ljmp
imul
pop
call
insl
rcrl
stc
lods
cs
fcmovnbe
adc
jg
add
push
or
rclb
push
aas
and
push
inc
and
xor
ss
or
call
sub
add
adc
idivl
stos
dec
mov
dec
mov
xchg
xchg
ds
outsl
sub
add
jo
push
lcall
movsl
jae
add
iret
out
mov
lcall
dec
jmp
add
out
add
or
lcall
divb
dec
std
ret
push
sbb
inc
lret
test
test
call
inc
std
inc
dec
dec
clc
sub
mov
cmp
mov
add
add
lods
iret
pusha
scas
ret
lea
int
jb
mov
call
sub
std
sbb
push
cmp
cmp
push
push
inc
cmp
jge
sbb
incb
cmp
push
add
sub
addr16
cld
add
cmp
adc
shll
mov
stc
out
nop
fxch
jnp
aaa
loop
int3
and
pop
out
mov
sar
fcmovb
aad
ljmp
scas
ljmp
nop
mov
add
ljmp
or
cmc
sbb
push
jne
or
imul
push
pop
lods
mov
jmp
popa
addr16
scas
lods
mov
push
mov
call
test
add
pop
sub
repnz
cmpsb
inc
icebp
lods
addr16
in
xor
or
or
jecxz
cwtl
inc
adc
mov
iret
add
sub
mov
out
into
xchg
ss
xchg
aam
cli
sahf
xor
adc
mov
ljmp
cmp
out
into
cli
sbb
cld
jge
insl
ljmp
sbb
testb
sbb
jmp
mov
out
mov
add
loop
les
loop
cmp
test
push
cmp
lea
or
add
cmpsb
outsl
add
in
ret
ja
lret
shrl
cmpl
popf
rcll
sub
lcall
add
repnz
out
shrb
jne
arpl
adc
cmp
xlat
push
std
subl
add
jge
add
push
cmp
pop
xchg
sbb
inc
mov
push
or
hlt
cmp
add
sub
xchg
mov
pop
push
sbb
and
ret
incb
outsb
xor
repz
pushl
xchg
cmp
subl
pop
pop
testl
xchg
cmc
xchg
fnstenv
imulb
add
fsubrp
push
mov
fnstsw
ret
mov
lret
sbb
inc
sub
das
and
out
sub
adc
add
mov
cmp
xor
jb
jmp
adc
shr
cmpsb
popa
sub
pushf
and
int
rorb
roll
test
pop
int
mov
or
xchg
mov
lock
int
jae
les
add
sbb
outsl
loop
mov
bound
in
fbstp
movsb
movsl
iret
xor
in
add
sbb
mov
xchg
lods
ljmp
fcmovb
clc
mov
iret
mov
repz
sbb
rclb
add
ss
adc
or
outsb
les
push
mov
adc
cmp
xor
sub
into
cli
xchg
jmp
roll
pop
cli
pusha
inc
popa
pop
ret
xchg
out
test
adc
cmp
and
adc
and
push
pop
mov
fstpt
imul
or
sar
jb
addb
push
mov
idivb
dec
add
sub
pushl
out
add
pusha
aas
enter
test
std
decl
aas
sti
inc
pop
aas
int3
into
sbb
cmp
addl
add
add
add
add
add
add
push
fmuls
xor
sbb
jmp
push
push
cmp
addr16
jmp
incb
inc
and
outsl
dec
xchg
dec
xor
dec
inc
int
xor
scas
mov
dec
xlat
rolb
mov
repz
or
sar
orb
add
mov
notl
pop
popa
jmp
and
cld
xchg
stos
jne
push
rorl
mov
adc
jmp
push
outsb
roll
ret
jge
and
scas
add
repnz
leave
lahf
add
ljmp
aaa
xor
out
movsl
jmp
mov
cmpsb
jmp
dec
jl
cmp
push
fnstsw
xchg
sbb
call
mov
dec
pop
xchg
add
ljmp
mov
sbb
push
leave
call
mov
out
das
sub
aaa
and
in
cmpsl
or
stos
mov
mov
mov
rcll
sbb
sub
xchg
les
not
enter
add
add
cli
jmp
and
scas
out
das
cmp
cmp
cmp
insb
test
arpl
cwtl
mov
sub
imul
test
push
add
daa
daa
sti
mulb
insl
sub
iret
cmp
repnz
sbb
or
jge
pop
lea
jne
in
sub
pop
subl
or
decl
pop
mov
std
test
sbb
call
fstpt
push
lea
std
lcall
xchg
cmp
xor
std
call
lods
outsb
sbb
sbb
mov
out
mov
inc
jo
sub
cmp
cwtl
sbb
test
jmp
mov
xchg
add
imul
dec
iret
add
jmp
add
jle
test
sar
pushl
push
mov
sbb
mov
hlt
push
in
add
fdivl
jae
sub
fs
adc
lds
std
mov
push
ret
adc
push
jno
mov
cmp
and
ficoms
push
xor
lods
test
mov
add
scas
shlb
mov
add
add
jecxz
rolb
mov
jmp
iret
dec
aad
add
jg
ds
inc
push
sbb
loop
ljmp
adc
mov
lods
adc
mov
jbe
mov
mov
ljmp
fstpt
test
pushf
inc
roll
imul
pop
push
lret
stos
ja
jmp
stos
sub
jmp
mov
shr
call
inc
xchg
scas
mov
lds
pusha
pop
in
fiaddl
mov
test
ljmp
jne
pop
stc
roll
lea
jae
push
mov
sbb
aam
faddl
cs
or
sub
add
add
cmp
xchg
mov
or
xacquire
shrb
lods
ljmp
arpl
mov
ljmp
lods
sbb
hlt
leave
faddl
ss
push
lock
xchg
addr16
insl
aas
cwtl
daa
jg
push
or
xchg
pop
ljmp
int3
idiv
lock
sti
push
nop
sub
pop
call
cmp
push
jg
jne
nop
xor
inc
jg
inc
cmp
pop
pop
push
stos
push
add
out
add
add
or
adc
pop
loope
incl
jae
pop
aad
cli
push
cmp
mov
xchg
mov
fcmovnu
xor
out
outsl
adcl
add
pop
push
std
loopne
cmpsb
ljmp
add
add
add
arpl
scas
cld
rcl
loop
aam
cld
sarb
inc
sub
movsl
xor
js
ss
or
inc
mov
push
call
pop
cs
rcrl
dec
mov
mov
add
jmp
push
mov
mov
jle
mov
repz
adc
aam
mov
in
dec
mov
add
add
cmp
sub
call
pushf
xlat
sti
sbb
cmpsb
sbb
lods
shlb
scas
ljmp
jl
iret
cmp
adc
add
pop
mov
ljmp
jno
cmp
cmp
push
stc
xorb
push
jecxz
add
outsb
ljmp
leave
cmp
add
aaa
sub
sub
sub
sub
sub
sub
sub
je
and
pop
daa
into
addr16
rcrl
add
cmp
jl
lods
xchg
jmp
mov
ljmp
hlt
sbb
aam
fadds
sub
jle
jmp
add
inc
movsb
outsl
jmp
xchg
sub
push
mov
add
add
add
cmp
psrad
aaa
or
pop
cmp
adc
sub
jo
sarb
hlt
icebp
cmp
mov
lret
lds
aad
idivl
aad
int3
xchg
jne
add
push
add
xchg
in
jle
inc
call
cld
jne
pop
jae
mov
pop
imul
jns
jne
pop
arpl
cmp
shrb
rclb
add
add
mov
xchg
pop
adc
sub
gs
jmp
gs
in
xchg
sbb
push
cmp
clc
xor
xchg
xchg
sbb
jp,pt
test
clc
and
stc
adc
jne
jnp
or
fdivr
decl
outsl
hlt
sbb
add
xchg
out
cmc
mov
xor
dec
jmp
xchg
mov
call
push
or
cld
popa
mov
decb
outsb
cltd
pop
mov
or
cld
sub
xchg
sub
adc
pop
rcl
add
js
and
loope
adc
test
mov
ja
inc
xchg
fldl
test
jge
mov
mov
and
xlat
push
rolb
jb
sti
push
stos
add
scas
fwait
out
fwait
mov
xor
add
test
scas
jb
out
sub
cmp
loope,pt
push
adc
loop
daa
or
add
cld
sahf
mov
test
xor
rclb
ret
sbb
stos
cs
or
aaa
mov
paddb
add
add
jo
add
jo
cmp
stos
dec
xor
loope
call
cli
jmp
mov
pop
inc
cli
pop
add
sti
jae
cltd
cmpsl
sub
mov
xor
test
cwtl
repnz
vpsubsw
sti
repz
jecxz
push
insb
jmp
jno
lds
sub
mov
add
dec
movsbl
insl
repnz
inc
add
mov
add
lods
ljmp
in
mov
jge
add
lea
fildl
and
pusha
sarb
mov
adc
addr16
rcl
jne
inc
ja
xchg
rol
jbe
inc
outsl
and
inc
aas
and
jno
scas
inc
ljmp
add
add
ds
imul
inc
cld
and
je
loop
pop
pop
std
lret
rclb
call
add
xor
or
inc
arpl
mov
cmp
sbb
imul
mov
faddp
push
and
ret
std
jnp
cmc
xor
xor
mov
lock
jle
xchg
add
add
adc
jb
xor
mov
xor
xor
clc
lods
push
adc
push
sar
xorb
incl
sti
mov
rcll
stos
cmp
xor
cmp
lock
mulb
add
dec
cmp
jle
jno
push
jno
pop
shll
les
add
subl
mov
mov
push
adc
pop
push
stos
xchg
ret
ret
cltd
mov
insl
cmp
popf
jb
addr16
mov
fmul
nop
fldt
adc
inc
loopne
adc
ljmp
sub
mov
gs
fwait
add
aas
mov
cmp
inc
cmp
cli
cmpsb
jg
cmp
test
lods
jno
movsl
inc
cmp
xchg
es
xor
push
ljmp
out
push
inc
jp
sti
dec
sub
addr16
gs
insl
fnsave
add
in
movsb
inc
mov
jge
shrb
add
sub
jo
cmp
mov
mov
add
ret
mov
cmp
ret
repz
data16
pop
ss
or
call
push
scas
or
add
add
out
cmpb
sbbb
push
mov
or
orl
subl
rolb
inc
mov
lods
push
cmp
add
add
push
jo
fdiv
jmp
test
out
add
push
cli
incl
xorl
push
cltd
xbegin
adc
inc
or
cmp
lods
nop
dec
std
fwait
sub
inc
scas
inc
mov
xor
ja
out
or
sub
aaa
out
insl
out
pop
test
xchg
int3
jmp
add
add
inc
mov
mov
jge
fidivrs
out
xor
andb
ljmp
push
lcall
dec
ret
fldt
subb
cwtl
scas
sar
imul
jp
out
outsl
insb
xchg
jmp
ret
cmpsb
add
xchg
insl
sbb
call
adc
cmp
jns
cmp
sub
call
push
outsb
ljmp
cmpsb
gs
lahf
mov
xlat
insl
addl
inc
jmp
jp
ret
push
mov
sub
fstpt
jmp
add
mov
fwait
adc
call
cmpsl
inc
aaa
bnd
ret
idivl
jo
inc
jns
hlt
adc
push
sbb
arpl
add
add
mov
testb
addr16
fwait
pop
mov
imul
test
add
mov
inc
mov
cli
jle
mov
jbe
inc
add
pusha
dec
sub
push
add
and
aam
out
push
sub
inc
push
mov
pop
aad
cli
jmp
push
mov
or
add
add
sti
call
mov
sub
std
stc
lcall
test
inc
pop
push
or
pop
or
lret
jbe
jbe
call
and
inc
add
std
add
cmc
mov
aaa
mov
sbb
add
incl
call
outsl
fsubr
pop
cmp
lock
cld
repz
push
cmp
in
mov
add
imul
cld
xor
xor
and
mov
repz
mov
xchg
movsl
sub
cmc
mov
xchg
or
lods
movsl
orb
jns
testb
imul
mov
movsl
cld
jge
cmpsb
jb
add
add
cmp
push
pop
dec
cmp
and
pop
jae
push
outsl
push
loope
cmp
mov
dec
xchg
icebp
ja
bound
shlb
mov
add
sub
ucomiss
xor
or
clc
lods
jecxz
adc
shll
call
cmp
add
dec
stos
adc
mov
jo
cs
mov
cmp
pusha
lods
es
in
divb
jnp
xor
int
ss
pop
xor
lods
mov
inc
scas
ret
jp
outsl
pushf
sub
mov
aam
add
scas
cli
insl
push
sub
in
ret
or
flds
push
stos
ljmp
add
adc
aaa
imul
or
xchg
es
or
mov
jmp
push
scas
cli
push
pop
lds
scas
test
mov
add
lods
ljmp
lods
ljmp
fsubl
push
call
shrl
add
mov
mov
inc
dec
std
jmp
test
rcrb
push
leave
adc
addb
es
fxam
call
fildl
add
pop
mov
mov
jnp
das
nop
cli
incl
adc
in
cli
call
insb
jbe
and
mov
jmp
ret
call
mov
inc
roll
lods
jae
mov
shl
push
and
and
leave
enter
incl
and
roll
lds
mov
xchg
push
lock
repz
or
idiv
jno
ljmp
test
int3
mov
leave
cmp
add
pop
aam
ja
xchg
push
xor
ljmp
mov
push
sti
ljmp
subb
add
sti
sub
sub
ljmp
inc
scas
sbb
xchg
scas
shrl
add
les
scas
pop
inc
mov
dec
add
mov
inc
scas
arpl
add
iret
scas
mov
sbb
lods
sub
cmpsl
ljmp
jns
les
scas
popl
xchg
movsb
add
movsb
inc
push
mov
pop
pop
and
mov
fucomi
ljmp
out
stos
rep
dec
ljmp
add
inc
jmp
mov
stos
cli
push
xor
ljmp
scas
ljmp
aad
stos
jp
arpl
sar
cli
cld
xchg
mov
mov
mov
jmp
sub
sti
xchg
and
int3
push
scas
cli
add
stc
xor
pop
sub
psubd
add
add
pop
inc
adc
add
add
pop
aas
cld
ljmp
mov
aas
sti
incl
aas
cld
pop
pop
outsl
lock
rclb
lret
xor
call
mov
cwtl
fidivrs
pop
call
xor
sti
xchg
jge
xchg
loopne
jle
pop
jne
dec
paddb
sub
test
aad
lea
dec
std
mov
scas
inc
cmp
pop
pushf
xchg
add
add
add
movsb
pop
sub
test
cld
mov
cmp
popf
cmp
fists
jg
ljmp
jnp
cld
pop
cmp
scas
add
inc
ret
xlat
test
daa
test
mov
lods
sub
jmp
inc
push
decb
lds
cli
ds
test
out
setle
daa
pushf
ljmp
jl
xchg
mov
ret
pop
or
lret
out
out
ss
mov
call
xor
loope
lds
std
rep
push
test
jnp
popf
push
movsl
mov
xorb
repnz
pusha
sbb
jbe
stos
xlat
mov
scas
pop
insl
repz
add
shrl
push
adc
jae
mov
add
adc
or
pop
sub
jno
fs
stos
add
loop
stos
sahf
jecxz
xchg
fwait
dec
add
sub
or
jno
mov
xchg
sub
dec
pop
jns
mov
movsl
cli
xor
jo
imul
sbb
cli
pop
add
lods
jae
push
test
jmp
jo
jge
fwait
decb
cmpb
cld
test
stos
jnp
ss
and
loope
mull
and
mov
es
sub
fsubr
xchg
std
test
cmc
mov
mov
lods
fs
inc
in
add
in
xchg
pop
cmpsb
cmp
xchg
call
add
inc
lods
mov
jmp
and
jnp
push
out
add
fsubrl
or
sahf
fistl
leave
push
cmp
fimuls
lcall
and
call
jb
and
stos
ds
in
jmp
mov
mov
scas
push
adc
cmp
mov
imull
fsts
cmc
dec
push
pop
cld
rcll
jae
sbb
and
push
sbb
or
and
jns
xchg
cltd
sub
cmc
add
cltd
xor
jns
cmpsb
xchg
outsb
inc
cltd
adc
or
push
testb
or
or
dec
out
mov
inc
or
pop
push
xchg
push
cli
call
mov
rorl
add
mov
add
cmpsl
call
shr
sub
mov
sbb
daa
mov
aad
mov
pop
aas
andl
xchg
sub
scas
jae
jle
imull
cmpsl
call
mov
into
clc
stos
adc
cwtl
sub
ljmp
dec
js
cwtl
dec
adc
lea
sub
xchg
lret
xchg
add
add
cmpsl
insb
ret
mov
ljmp
adc
test
lods
ljmp
dec
jle
xchg
xrelease
or
shl
pop
add
lods
jae
int
ss
imul
int
inc
push
bound
into
push
push
add
pop
sub
es
add
add
ljmp
mov
ss
imul
int
inc
push
add
adc
push
and
ljmp
out
push
xchg
push
rcll
mov
fisubl
mov
ja
xlat
jmp
xchg
dec
call
or
jg
mov
cltd
push
push
fsubr
pop
or
add
out
adc
lahf
mov
and
jmp
jmp
or
jl
push
out
cmpsl
mov
pop
jno
mov
repnz
ljmp
out
xchg
jle
mov
call
adc
sbb
jge
or
scas
mov
xor
add
test
jp
pushl
iret
loope
pop
sbb
and
jnp
nop
test
or
addl
cs
xor
lock
jae
mov
cmpsb
xor
push
es
ficoml
inc
sbb
adc
and
xchg
add
add
xchg
data16
and
sub
add
add
jmp
jg
hlt
fs
stos
adc
outsb
ljmp
fldenv
cmpsb
add
loope,pn
inc
sbb
lods
inc
jo
add
stos
jecxz
push
ljmp
mov
sbb
subl
imul
cmc
sub
aaa
push
push
aaa
ljmp
push
and
popf
stos
movsl
je
xlat
adc
xchg
jno
jmp
sub
rorl
es
xchg
sub
sbb
scas
jmp
insl
ljmp
jmp
ljmp
sahf
into
xor
jmp
ljmp
cmp
pop
jmp
lods
ljmp
ret
sbb
jge
mov
cli
sbb
mov
add
cmp
mov
in
cld
xor
push
jmp
xor
fstpl
mov
ret
dec
mov
loop
push
sub
xlat
push
xor
jl
xor
outsl
inc
dec
xor
add
cmp
add
add
cli
call
sbb
cmp
ret
mov
cli
push
sub
cli
push
mov
scas
outsl
adc
add
push
or
or
out
sbb
and
aaa
call
jmp
aad
add
or
addb
bound
xchg
xor
mov
addl
cmp
add
out
mov
faddl
adc
in
scas
adc
hlt
scas
orb
imul
cld
mov
xchg
mov
jns
fsubs
cwtl
xchg
jb
imul
cld
sti
test
cli
jno
arpl
mov
xchg
xchg
pop
jne
sub
push
insb
dec
add
aaa
xor
cmpsb
insl
lods
xchg
jle
adc
mov
into
nop
pushf
mov
jge
ss
nop
jl
jecxz
insl
out
cwtl
sbb
ljmp
fwait
jl
lret
nop
jb
cmpsl
sub
lods
in
add
les
scas
cmp
cmpsb
lahf
xchg
xor
cltd
call
nop
pushf
and
inc
scas
xor
mov
lahf
cli
jmp
inc
movsb
cli
pop
popf
cmp
test
add
testb
sti
aam
cld
inc
jmp
mov
cmc
and
sahf
push
adc
cli
push
xor
fcoms
sahf
push
adc
cli
divb
pop
jne
push
sbb
jb
out
insb
aaa
fwait
cld
sub
ljmp
je
mov
sahf
cli
sbb
sbb
mov
lods
cmp
add
xchg
and
add
outsb
push
div
imul
je
movsl
aas
clc
dec
ljmp
out
repnz
push
addl
add
ljmp
mov
enter
imul
insl
std
push
mov
cli
or
cmpsl
imul
xchg
sub
cld
test
push
push
subl
dec
insb
outsl
add
test
repnz
fnstcw
lea
div
imul
out
aas
scas
adc
or
xchg
and
xor
shrl
loop
fnstcw
dec
mov
xchg
pushl
lea
xchg
add
sub
jnp
xchg
and
icebp
xchg
sub
mov
xor
scas
xchg
push
js
jp
push
add
inc
lds
decb
or
call
add
mov
push
inc
scas
xchg
pushf
outsb
sbbb
jo
call
subl
es
pop
shrl
jmp
add
mov
inc
inc
jo
fistpl
and
add
push
sbb
insb
xchg
sbb
fwait
jmp
scas
fwait
pop
or
and
call
inc
scas
gs
popf
insl
and
aas
mov
adc
lahf
fildl
insb
insl
out
test
ljmp
cmp
or
in
popf
push
orl
je
mov
jmp
lods
ljmp
call
pushf
cli
jmp
je
cli
insb
in
push
adc
xchg
or
out
mov
cmp
push
jb
xorl
sub
divl
xchg
or
fwait
cli
jmp
outsl
mov
daa
add
xchg
aad
incl
add
add
andl
std
mov
jle
mov
mov
lods
gs
jmp
scas
cld
rorb
clc
mov
daa
or
inc
out
arpl
xchg
sbb
jno
mov
mov
mov
rolb
pop
pop
fsubr
out
gs
test
sti
push
mov
clc
cli
mov
gs
mov
add
add
fs
xor
jne
dec
scas
rolb
stc
push
repz
mov
xchg
or
push
stc
cld
cltd
js
mov
mov
lock
int3
add
lock
and
and
test
xchg
sbb
add
sub
addb
add
out
jne
gs
pop
mov
mov
jb
mov
clc
mov
dec
or
jbe
pop
cmp
aas
lret
add
mov
mov
push
addr16
add
out
add
add
das
ja
jnp
sub
jmp
sub
insl
test
cwtl
xchg
std
lahf
ss
sbb
mov
add
outsb
aas
jp
inc
lds
dec
jge
mov
pop
xor
mov
es
mov
iret
ss
mov
aas
push
out
addr16
push
in
addr16
cli
loop
pop
or
jmp
aam
add
arpl
push
jne
pop
out
push
ficomps
xchg
cwtl
cli
jmp
lods
ljmp
lods
ljmp
adc
xrelease
shrl
add
lods
outsl
lea
cwtl
cli
jmp
lods
ljmp
lret
sub
filds
jmp
movsb
imul
xor
add
lods
imul
imul
fsubrs
push
rolb
vdpps
add
add
add
xchg
pop
push
ret
mov
add
cld
insl
std
pop
mov
ret
ljmp
pop
xor
xchg
ljmp
lock
jbe
xchg
out
addb
push
outsl
add
scas
jmp
pop
xchg
fisttpl
push
mov
out
add
mov
fimuls
pop
enter
out
addb
add
ret
jmp
mov
pop
cmpsl
les
add
scas
cmpl
mov
repz
mov
ljmp
xorl
cmp
xor
sbb
cmc
mov
xorl
push
mov
push
imul
push
cmpl
xor
repz
fildll
or
sub
repz
add
movsb
add
xchg
or
insl
ret
mov
ljmp
mov
xchg
push
xchg
mov
test
movsb
imul
test
xor
scas
push
sub
xchg
xchg
ffreep
or
sbb
aaa
mov
call
add
es
inc
popa
xchg
call
lds
cs
cmc
add
out
stos
icebp
andb
xchg
xchg
fwait
push
nop
cmp
lods
ljmp
lods
subl
jmp
ficoml
inc
lods
ljmp
lods
pop
shrb
add
inc
xlat
lods
imul
sti
sub
xchg
inc
mov
sub
imul
and
jmp
or
cmp
into
lods
ljmp
mov
jle
mov
dec
mov
lods
popa
jle
lods
ljmp
mov
adc
xchg
cmpsl
outsb
or
pop
fwait
dec
incl
movups
outsb
aas
clc
mov
stc
cmp
sbbb
add
add
add
add
data16
mov
outsl
push
add
out
jne
psubb
cmpsb
cli
pop
mov
out
jnp
push
push
or
mov
arpl
call
std
test
xchg
add
das
out
enter
shrb
sti
incl
addl
pmuludq
popa
xor
add
add
add
lret
mov
ss
repz
stc
dec
and
bswap
imul
clc
aaa
and
mov
mov
sahf
or
repz
mov
sahf
sub
into
mov
in
aad
mov
add
or
inc
stc
pop
and
jle
lock
punpcklwd
cmp
imul
jmp
outsb
jle
fnsave
test
dec
dec
mov
or
or
add
std
mov
xchg
add
cmp
ss
pusha
add
daa
icebp
cmp
scas
push
out
jbe
call
sbbl
pop
sbb
and
addl
add
nop
fstl
add
cmp
xchg
pop
add
orb
push
mov
cli
pop
ss
jne
push
arpl
jmp
pop
call
out
mov
lods
ljmp
sbb
hlt
xchg
jo
bound
lcall
shr
rcl
push
pushf
mov
lods
ljmp
bound
push
fdivr
adc
stos
adc
ljmp
stos
cmp
fimuls
add
sbbb
xor
ret
add
push
push
loopne
imul
pop
jmp
push
loopne
add
orb
popa
sar
call
add
mov
add
add
jmp
mov
push
adc
pop
test
ljmp
pop
in
add
ljmp
xchg
pop
pushf
pop
xchg
ljmp
jae
test
or
ljmp
add
add
cmp
cmp
mov
adc
add
add
add
inc
xchg
test
or
orl
incl
inc
and
scas
ja
push
push
insl
scas
cld
icebp
or
in
jg
push
js
add
mov
add
cs
scas
cmp
xor
jge
incb
jnp
sub
sahf
cmp
lcall
sahf
xchg
pop
in
cs
imull
add
add
pop
call
fistpl
call
jae
sub
nop
sub
jmp
push
xor
add
ljmp
xor
ljmp
cmp
lcall
add
ljmp
loopne
call
mov
jmp
add
mov
add
push
test
sbb
add
add
add
add
mov
shll
popl
jmp
mov
cli
insb
ljmp
jbe
dec
jne
jg
enter
cmp
das
imul
inc
jmp
lods
ljmp
cmpsl
jmp
insl
push
inc
bound
xor
jmp
xor
cli
jmp
inc
rcll
ds
fisttpll
add
sbb
push
add
in
jp
add
pop
xchg
add
jb
adc
and
std
jne
push
adc
jne
cli
mov
out
jmp
mov
mov
mov
testb
fmul
stc
lea
add
add
les
out
adc
hlt
cwtl
hlt
cmc
adc
out
negb
repnz
insb
mov
call
popa
scas
cmp
jle
scas
sub
ljmp
mov
and
stos
ret
into
cld
mov
adc
or
push
lock
xor
xchg
mov
push
insb
daa
mov
add
add
std
adcb
incb
jae
add
jb
in
mov
scas
xchg
jno
adc
cld
scas
decl
imul
loop
adc
mov
mov
pop
out
add
arpl
adc
or
arpl
shll
xorl
add
stos
rorl
add
call
add
out
stos
sarb
or
leave
jmp
mov
fisubrl
test
cmp
ljmp
xor
mov
mov
inc
in
adc
sarb
fisubs
lock
in
and
ljmp
mov
pop
leave
fiaddl
testl
ret
sub
add
add
mov
dec
std
mov
bound
sar
push
std
mov
jns
xchg
call
sub
leave
stos
lret
push
cmc
xor
xchg
mov
fldenv
pusha
add
lods
outsl
inc
push
and
or
sub
cltd
xchg
insl
jb
push
ds
xchg
add
mov
jmp
add
add
jle
lods
sti
cs
repz
pop
loopne
inc
push
add
dec
scas
add
inc
dec
out
push
pop
lock
xlat
ret
call
add
jmp
mov
jo
push
mov
push
cld
mov
dec
dec
negb
xor
or
mov
les
cmp
jne
mov
mov
into
mov
add
iret
pushl
mov
jmp
bound
movsb
aad
add
scas
pop
pop
lcall
andl
jae
xchg
ljmp
fchs
imul
repz
daa
or
into
jno
jae
cmp
mov
mov
ficoms
clc
scas
dec
shl
pop
adc
mov
jge
inc
push
pop
dec
dec
std
xchg
sub
test
jmp
dec
inc
dec
xor
xor
sub
mov
aaa
lods
cmpb
xchg
mov
ljmp
out
adc
pop
leave
jbe
jae
jmp
stos
adc
sti
test
mov
xchg
int3
inc
mov
xchg
out
jmp
jno
lret
mov
add
add
subl
xchg
je
int3
imul
ljmp
adcb
mov
repz
test
test
out
mov
xor
mov
sbb
push
test
xchg
sub
movsb
ja
xchg
or
adc
lahf
sub
imul
push
add
arpl
stc
jmp
test
inc
xchg
icebp
cmp
cmc
sti
insl
test
dec
lods
ljmp
fldl
and
adc
loope
mov
jl
sarb
inc
add
and
insb
inc
in
ss
jmp
push
xchg
adc
insb
imul
mov
push
je
add
add
push
fs
call
xor
jl
jecxz
cmpsl
std
std
incl
cld
adc
pop
inc
stc
pop
sub
dec
mov
mov
lock
arpl
xchg
out
sar
cli
mov
std
adc
or
pop
add
outsb
cli
call
les
out
mov
mov
clc
mov
add
add
hlt
int3
lods
repnz
incl
out
ret
sub
mull
jp
mov
sub
cmp
pushl
mov
jmp
nop
out
mov
ljmp
or
mov
xchg
aad
pop
dec
outsb
cld
xor
push
rorl
add
add
daa
rorb
jmp
add
sti
dec
jp
push
jge
cld
pop
adc
in
test
add
out
inc
lahf
adc
xchg
jl
xor
ret
lods
lock
call
push
outsb
ljmp
out
inc
es
daa
fnstenv
addr16
cmpsl
ljmp
xchg
call
negl
add
add
movb
inc
ljmp
mov
push
jmp
daa
push
in
call
jge
jo
scas
ljmp
scas
test
call
sub
ljmp
stos
ljmp
mov
add
jne
lods
ljmp
sub
add
xor
sub
ja
mov
subb
jne
or
leave
test
add
adc
sbb
je
or
lods
ljmp
sbb
es
sub
mov
fiaddl
add
cmpl
jl
hlt
cmpb
pushf
mov
push
push
in
or
inc
stos
mov
add
sahf
or
pop
sti
aam
fwait
ljmp
and
push
mov
enter
test
call
push
sbb
add
add
adc
std
std
jle
cmp
cli
std
cmp
xchg
aas
ja
xchg
add
add
cld
jmp
test
cli
call
mov
scas
pop
jno
outsb
cld
mov
std
inc
add
pop
inc
xchg
push
cmp
pop
jmp
xchg
into
or
adc
call
xchg
into
cld
mov
adc
cld
andb
jae
js
mov
shl
adc
push
out
leave
out
orl
jge
scas
xchg
pop
mov
scas
xchg
cmp
cld
add
scas
pushf
subb
decb
scas
js
jb
js
jae
ljmp
pop
xchg
js
in
xabort
mov
jno
xchg
test
icebp
divl
push
daa
mov
leave
jmp
enter
mov
scas
rcll
sub
outsl
insb
sub
jmp
add
add
add
jp
ret
outsb
pushf
sbb
mov
sub
sub
call
daa
pop
ljmp
sub
mov
scas
ljmp
jo
jmp
das
imul
mov
cmp
sub
sub
cli
outsb
imul
push
fistpll
bound
mov
shlb
jge,pt
jmp
sbb
shr
ljmp
std
xchg
in
add
lods
jno
vmovntdq
jmp
sbb
jae
fiadds
jbe
adc
push
add
pop
dec
xor
cmp
jne
sti
jle
jecxz
add
out
add
mov
add
mov
jle
fimuls
call
mov
cmc
test
ljmp
imul
xlat
out
punpckldq
jg
enter
mov
xlat
mov
lahf
xchg
mov
or
decb
outsb
cli
ljmp
xchg
ss
scas
mov
frndint
jge
jmp
xchg
repnz
dec
inc
jnp
mov
insl
mov
adc
push
ret
and
inc
insl
aam
xchg
and
test
repz
into
stc
nop
jnp
lret
ljmp
inc
and
add
pop
lods
lret
sbb
lcall
dec
cld
cli
lods
cmp
add
add
ljmp
shr
rclb
lret
jns
iret
pusha
add
ljmp
or
pusha
popa
add
cmp
xor
ljmp
inc
sbb
or
out
ljmp
and
sbb
xchg
out
out
lret
lock
jns
divl
mov
scas
pop
jp
jge
jbe
inc
imul
push
add
add
pop
adc
jg
arpl
mov
mov
das
add
gs
or
xchg
sub
lods
ljmp
pop
adc
jmp
mov
insb
repz
jg
push
sub
insb
rorl
pop
ljmp
fs
adcl
add
js
fs
popa
inc
frstor
xchg
outsl
shrb
std
fs
std
lret
imul
arpl
dec
ljmp
mov
adc
andb
imul
or
stc
jmp
cli
dec
jo
insl
push
out
mov
outsl
mov
add
lods
add
mov
loop
cltd
add
mov
xor
add
push
std
ljmp
add
insb
sbb
push
mov
or
lea
dec
mov
les
cmc
jmp
add
adc
test
add
shrb
jge
pop
push
jge
and
adc
mov
mov
lret
cwtl
imul
add
add
outsb
adc
jge
jns
insl
cld
sti
test
scas
cmp
testl
add
cs
loope
loopne
xor
xor
pushf
out
out
in
js
push
and
xor
xlat
mov
inc
inc
pusha
pop
jge
jp
mov
mov
mov
lds
and
inc
ljmp
push
ljmp
stos
arpl
test
call
push
test
jbe
insb
sub
push
adc
sbb
mov
fldenv
fwait
addr16
popa
loop
leave
push
add
addr16
sti
jns
cmpsl
pop
jne
imul
fmull
adc
in
jp
jne
sti
pop
xor
scas
ljmp
dec
stos
add
dec
cli
jne,pn
das
sub
pop
push
xor
mov
dec
push
in
pop
push
sahf
loope
stc
and
adc
lret
fcoml
ja
sub
jle
jle
or
mov
ret
push
ficoml
es
enter
insl
jne
pop
outsb
in
dec
adc
sub
mov
int
sti
outsb
push
loope
lods
mov
ljmp
insl
stc
push
add
icebp
ds
adc
adcl
push
sbb
cld
je
jl
push
aad
add
jl
inc
xchg
jmp
test
adc
scas
or
in
fiadds
push
sub
imul
les
pop
inc
nop
or
cli
imul
andb
subl
adc
and
cld
je
fdivrp
je
fsubrp
bound
mov
lret
fucomp
mov
mov
stc
cld
mov
int3
lret
out
sub
xor
adc
ficomps
add
dec
jns
add
stc
ljmp
jp
jb
push
mov
dec
cmpsb
push
cmp
outsl
ds
clc
or
and
roll
or
fisttps
push
jae
clc
mov
in
in
sbb
dec
sub
test
ljmp
sub
test
das
scas
hlt
pop
scas
add
push
jmp
add
mov
xchg
js
sbb
or
mov
out
stos
mov
call
pop
scas
pop
js
es
jmp
ss
add
leave
sbb
sub
sub
mov
not
fnclex
cmp
fwait
arpl
sub
leave
xor
add
lock
arpl
add
add
gs
jle
popa
jno
sbb
jno
ret
test
outsl
cli
sti
insl
cmpb
ret
jmp
mov
outsl
cli
insl
jb
and
out
xchg
pop
ljmp
std
adc
jmp
lea
sbbb
int3
cld
stc
shll
cli
mov
stos
pop
adc
in
lods
imul
clc
push
push
fisubl
mull
add
jb
adc
out
inc
or
inc
or
int
inc
stos
mov
call
push
adc
sub
push
cli
add
inc
leave
incl
xlat
in
outsb
xor
scas
std
je
jl
adc
sbb
imul
sbb
loope
inc
stos
fcos
ljmp
cmp
gs
fisubs
aad
adc
les
push
pop
icebp
sahf
ljmp
pop
fnstenv
lcall
adc
shr
in
jg
cmp
lcall
enter
sbb
mov
or
and
mov
fldl
scas
dec
mov
clc
inc
pop
xor
outsw
jecxz
movsw
ret
adc
xchg
std
adc
and
or
out
aam
cld
shlb
aas
scas
mov
ret
mov
and
add
aad
cli
loope
addr16
movsl
sub
sub
daa
lea
outsl
call
add
add
add
push
add
fwait
cmp
sbb
in
sub
jmp
outsb
lock
int3
addb
or
push
add
adc
repz
add
jecxz
subb
jno
pusha
push
jb
cmp
mov
addl
or
xadd
lods
mov
push
stos
shrl
add
push
sbb
in
mov
inc
push
outsb
mov
insl
sti
mov
add
fs
add
shll
daa
push
in
ljmp
and
sub
lock
dec
sahf
jns
dec
mov
mov
jmp
out
push
sbbl
jbe
es
out
lods
and
add
insb
jno
inc
mov
add
mov
call
pop
mov
repz
jle
or
jbe
pop
arpl
pop
adc
sbb
adc
pop
sbb
add
inc
pusha
jmp
adc
inc
dec
xor
jl
pop
cltd
dec
inc
or
scas
mov
mov
fcmovb
jmp
add
add
inc
push
test
add
cwtl
xchg
push
adc
mov
jecxz
adc
scas
or
call
pop
dec
clc
mov
insb
mov
push
xor
inc
pop
xor
add
mov
add
inc
xchg
les
in
scas
cmp
inc
pop
jle
ljmp
sub
ljmp
adc
js
test
pusha
mov
mov
test
fidivrl
scas
jmp
inc
add
insb
add
pop
scas
push
mov
sti
ljmp
std
rcrb
add
mov
data16
call
fsubrs
jo
popf
gs
popf
pop
sub
jns
or
push
push
jb
adc
xlat
lods
cmp
mov
out
adc
outsl
pusha
pop
lods
or
xor
outsl
out
add
scas
ljmp
call
call
test
jbe
mov
loopne
loope
xor
dec
xlat
addr16
negb
mov
jne
xor
fisubrs
dec
add
lods
imul
out
enter
add
rorl
bound
or
cli
jmp
xchg
mov
cli
hlt
mov
je
push
cld
imul
fnstenv
out
stc
mov
sub
aad
data16
gs
test
ljmp
xchg
fnstcw
addr16
mov
shl
xchg
les
or
jae
js
pop
nop
inc
add
outsl
shrl
pushl
mov
add
js
cld
sbb
dec
add
mov
inc
fs
cmp
inc
repnz
les
aas
scas
incl
push
cli
mov
loop
dec
std
test
std
mov
popf
cmp
jg
jbe
dec
sub
and
test
add
in
cmp
cltd
cld
mov
cmc
sbb
scas
mov
mov
filds
pop
imul
or
pop
xor
xchg
push
mov
mov
inc
sahf
push
xchg
lret
aaa
sbb
xchg
lret
push
push
je
jmp
cld
jnp
addl
addl
push
cmpsb
jmp
cmp
push
inc
mov
shlb
push
mov
mov
add
mov
scas
int3
or
rorb
xorb
outsl
out
call
inc
mov
push
les
aaa
movsb
pop
addr16
and
call
pop
inc
jne
and
sub
iret
movsb
stos
call
add
mov
outsl
movsl
mov
push
add
pop
jno
cmc
push
pop
jo
pop
test
pusha
mov
xor
add
std
jno
inc
cmp
jne
push
fscale
sub
push
insl
push
mov
fdivr
xchg
out
aaa
or
fcoms
push
jmp
nop
ljmp
and
out
or
sub
sbb
jmp
out
adc
jo
mov
xchg
std
cli
push
push
dec
mov
andl
and
insb
inc
fnsave
scas
sbb
mov
mov
pop
sub
ljmp
mov
fdivr
decl
push
add
jmp
or
push
inc
jmp
add
dec
test
add
test
incl
push
push
mov
outsb
and
shll
rclb
sahf
jge
out
addb
test
jmp
add
inc
jbe
sub
add
pop
xchg
mov
das
pop
cli
incl
mov
and
in
jne
mov
mov
decl
push
inc
mov
fnstcw
scas
mov
add
leave
and
std
mov
xchg
imul
push
pop
and
push
cmc
insl
push
lret
xchg
sbb
xor
lret
or
cmp
add
inc
insl
sub
push
pop
xor
add
add
push
lods
push
sbb
and
and
inc
pop
mov
into
push
jge
ljmp
lods
fdivp
jle
mov
cmc
xchg
outsl
sub
scas
outsl
and
mov
pop
push
lcall
out
xchg
lahf
mov
jg
in
dec
sub
out
scas
call
xchg
daa
lods
ljmp
jae
pop
test
insl
cmp
add
add
outsl
xor
sub
movsl
xor
call
mov
ljmp
out
cmc
add
dec
jb
sbb
mov
sub
lods
ljmp
xor
jmp
cmp
jmp
add
gs
faddl
in
out
sub
jmp
ljmp
cmp
dec
icebp
daa
lods
or
jmp
lods
ljmp
loop
dec
mov
mov
outsl
add
test
std
aaa
jge
and
sahf
jb
xor
xor
ret
je
mov
push
call
push
cmp
add
push
mov
cmp
add
push
out
mov
pop
jmp
add
add
sarb
add
loopne
xorl
push
mov
test
push
in
add
fidivrs
out
je
jae
jle
loope
call
lret
lods
outsb
fs
lock
lea
in
inc
lock
and
test
fcmovb
sti
aaa
push
mul
mov
jmp
out
add
scas
faddl
xchg
jnp
mov
push
dec
jb
fcmovne
shufps
mov
leave
divl
inc
dec
jb
jmp
stos
call
mov
rolb
xchg
std
jno
mov
insb
push
push
xor
and
scas
sbb
jnp
cmp
pop
addb
inc
adc
je
push
sub
pop
mov
cmp
pop
aad
test
call
ret
jmp
pop
mov
pushf
cs
xchg
scas
jmp
push
call
mov
sbb
cmp
daa
xchg
popa
cld
push
mov
inc
ljmp
inc
lods
ljmp
push
push
in
add
pop
std
xchg
mov
cmc
pop
repnz
add
stos
pop
cli
jo
shlb
stos
add
cs
lods
ljmp
fimull
or
pop
inc
lods
pusha
jle
mov
fwait
mov
jnp
ljmp
lods
ljmp
sub
dec
mov
insl
pop
aaa
sub
add
add
lea
inc
pusha
jne
sub
insb
xchg
sbb
dec
jecxz
lea
scas
imul
aaa
loop
add
dec
call
ret
xchg
push
icebp
shlb
shll
jbe
cmp
add
js
adc
inc
clc
lea
idiv
dec
xchg
std
adc
dec
jae
std
js
dec
incl
add
add
add
aas
jo
fisttps
je
xchg
xchg
outsb
mov
xchg
jmp
mov
adc
jo
add
sbb
aam
int3
lock
scas
mov
addb
jge
mov
into
lret
mov
cmpl
out
imul
mov
add
add
pop
sub
std
dec
lcall
push
rol
in
inc
push
xor
je
cmp
sbb
fdivr
scas
push
push
call
ja
xchg
decl
repz
fxch
cld
xchg
ljmp
mov
fucomi
lock
in
outsb
push
out
outsb
stos
sub
es
imul
add
add
add
add
call
fisubl
outsl
insl
adc
pop
fwait
mov
pop
loope
or
jnp
pop
jne
and
sbb
ljmp
scas
push
xchg
insl
movsl
imul
testl
sub
add
stos
call
sbbb
pushf
stos
add
insl
pop
test
jns
mov
cli
ficomps
jl
int
push
cli
in
shll
pop
mov
xchg
and
pop
lods
push
repnz
dec
xchg
imul
test
jmp
out
test
sbb
dec
jl
lods
rolb
insb
call
mov
cmp
pop
cli
push
repz
fdivr
mov
add
add
stos
xchg
loop
test
xchg
mov
jmp
ret
dec
mov
aam
cld
xchg
add
out
add
pop
push
adc
fidivrl
cld
mov
mov
sub
test
push
mov
test
repz
addr16
add
add
dec
orl
scas
add
out
jne
mov
loop
out
add
mov
mov
jno
clc
push
mov
add
cwtl
adc
push
xor
aas
scas
je
pop
lret
adc
mov
adc
inc
pushl
inc
mov
jge
inc
aad
test
movd
inc
aad
test
repz
add
aad
rorl
lock
and
stc
inc
fdivrl
pop
sbb
xchg
mov
and
mov
faddl
pop
int3
inc
mov
out
aas
scas
jae
inc
mov
mov
and
and
or
jmp
add
dec
inc
cld
out
xlat
inc
xchg
adc
in
push
rorl
outsl
call
call
rolb
add
lea
cmp
push
or
inc
gs
mov
ljmp
jmp
orb
mov
sub
push
aad
mov
gs
mov
call
add
push
add
cmpsl
sahf
inc
add
outsb
or
xchg
add
lahf
mov
add
lods
mov
add
lods
mov
cmp
xchg
and
shrl
sbb
and
outsb
push
jne
push
cmpsl
imul
mov
cmp
jbe
test
into
in
mov
aad
and
data16
push
pop
fdivrs
test
mov
pop
add
fistps
test
sbb
lahf
push
mov
push
push
jmp
pop
std
jne
pushf
std
adc
ficoms
or
add
or
push
ljmp
inc
imul
ret
mov
cmp
or
icebp
add
ljmp
push
out
add
das
push
mov
add
sarb
and
cltd
std
adc
std
and
ljmp
test
incl
jae
pop
cmpsb
out
jl
ljmp
iret
and
scas
inc
out
testb
mov
and
xchg
repz
daa
sbb
mov
jae
andl
faddp
jp
pop
inc
fisubrs
and
add
add
sahf
mov
pop
xor
cld
mov
test
add
xchg
es
jmp
enter
fmul
push
dec
ljmp
lea
test
aad
test
xor
inc
jmp
xchg
push
xlat
cmp
bound
pop
xchg
and
dec
lods
add
add
add
push
jl
mov
push
pop
and
inc
mov
cmp
in
ljmp
subl
add
cmp
out
test
loop
mov
arpl
orl
ljmp
and
cli
xchg
mov
ss
rcr
pop
lock
sbb
push
ds
insl
push
cmp
mov
fidivs
xchg
pop
cmpsb
add
test
jae
add
and
or
lcall
out
sbb
ja
push
xchg
jecxz
and
mov
repnz
outsb
out
dec
inc
jg
push
xchg
dec
mov
inc
add
icebp
xchg
jmp
je
das
or
lods
std
incl
dec
fcmove
pop
pop
aam
lds
inc
sub
add
sbbl
inc
add
cmp
das
cmpsb
jae
xchg
inc
adc
xchg
mov
sbbl
pop
sub
adc
push
scas
cvttps2pi
cli
mov
pop
mov
inc
out
add
dec
cli
lcall
dec
and
enter
fadds
add
out
mov
scas
sbb
push
and
inc
cmc
push
push
lcall
xlat
out
mov
cld
xor
inc
dec
lahf
add
push
imul
push
std
int3
movb
xchg
cmp
mov
jns
xchg
in
mov
stos
inc
leave
testl
pop
xor
add
add
int3
clc
cmpb
sbb
mov
adc
call
add
ds
mov
mov
lret
cmp
xor
in
xchg
pop
jmp
dec
push
fdivrs
sbb
cmpsb
rol
mov
and
arpl
fists
cmp
xlat
xlat
xchg
out
xchg
loop
dec
jns
xchg
ret
jno
movsl
aas
push
out
test
jmp
rclb
mov
arpl
or
loop
sub
jbe
inc
sub
loope
or
bound
cmp
cmpb
cld
imul
sahf
popa
or
jecxz
cmc
sub
mov
mov
lcall
xor
sub
sti
cli
filds
add
add
lar
jnp
je,pt
mov
dec
das
sub
jle
bound
mov
add
add
xor
stc
repnz
bound
jle
sahf
dec
or
push
cli
jmp
and
test
ret
add
jmp
les
mov
std
add
ljmp
aas
sbb
stc
mov
pop
pusha
outsb
lea
fs
xchg
test
ljmp
sbb
add
pop
popa
add
and
sub
popa
stos
subl
mov
cmpsl
dec
incl
pop
or
test
cld
ss
hlt
icebp
adc
out
or
cmp
inc
scas
ret
sar
pop
in
fsts
adc
mov
sub
adc
mov
fs
scas
shl
sar
cmp
mov
cmp
mov
jle
add
inc
decb
cli
mov
push
push
pop
test
dec
adc
es
dec
in
cmp
jecxz
in
xor
add
add
or
and
ljmp
mov
dec
and
dec
mov
stos
decl
push
iret
sbb
dec
repnz
or
add
testb
bound
les
adc
inc
lods
dec
sub
enter
adc
stos
lock
loop
stos
imul
push
xchg
aas
dec
cmp
push
xlat
add
icebp
pop
stos
or
sub
sbb
hlt
test
aaa
movsb
lock
xor
lods
fmull
add
mov
xchg
mov
inc
xchg
int
dec
das
test
insb
jecxz
inc
into
ret
out
dec
loop
dec
cli
push
push
add
sub
jmp
adc
mov
add
add
pop
add
sbb
je
aaa
jecxz
mov
xor
gs
fcomp
fisubrs
lret
add
lods
popa
add
mov
inc
push
stos
push
add
aad
out
dec
mov
adc
mov
inc
adc
pop
xchg
lock
mov
jg
sar
je
add
add
popa
aas
or
and
incl
mov
mov
hlt
or
jo
dec
and
call
dec
cmpsl
outsl
add
outsb
ja
mov
inc
mov
mov
adc
call
push
mov
inc
aas
fsubrl
idivl
std
jmp
daa
xor
xor
inc
mov
add
add
sbb
mov
and
sub
or
pop
cwtl
mov
sub
cmp
hlt
iret
jmp
insb
add
sti
jle
or
push
cmpl
mov
into
sar
stos
stos
push
scas
push
cmpl
pop
int3
rcl
ljmp
jae
sbb
mov
addr16
ljmp
sub
jnp
xor
in
rcll
inc
add
outsl
test
xchg
dec
pop
push
or
jns
sbb
xor
sub
cmp
fadds
scas
add
cmp
jo
cmp
xor
mov
sarl
test
xchg
in
std
cmp
inc
loop
sub
aad
cmp
inc
sub
cmc
sar
inc
mov
xchg
push
add
les
movsb
movsb
cltd
jmp
insb
outsb
inc
push
add
lds
jmp
xorl
test
ja
cli
push
inc
add
jae
int
push
std
sbb
ljmp
cmp
movsl
jae
movsl
fimull
xor
ljmp
pop
cmpsb
push
mov
and
mov
push
push
mov
jmp
shrl
push
fsubrl
aas
mov
push
std
adc
push
mov
cmpl
aas
hlt
daa
adc
cmpsb
mov
sub
adc
sub
cmp
cwtl
idiv
xor
inc
pop
inc
ja
xor
jne
add
add
add
adc
sub
cmp
cli
outsb
sete
cld
jne
add
adc
sub
xor
and
lods
add
pop
sbb
xlat
jae
or
jg
je
add
or
push
add
cmp
lods
or
popf
xchg
incb
add
into
cmpl
mov
jmp
jb
lret
js
jmp
popf
xchg
ss
cmp
cld
pop
or
jp
sbb
xor
clc
mov
lret
jl
sub
pop
out
xor
adc
sub
je
and
adc
xchg
les
lret
mov
ljmp
cltd
out
fcoml
das
inc
out
lods
add
add
jo
adc
inc
into
mov
clc
sub
or
in
aaa
scas
int3
pop
and
out
jne
movsl
stc
repnz
scas
inc
mov
push
add
mov
mov
jecxz
fstps
outsl
int3
icebp
mov
mov
xor
jmp
add
jp
mov
push
add
inc
push
add
scas
ljmp
sub
sbb
or
push
in
jmp
dec
add
call
cmpsb
sub
cli
insl
inc
dec
push
push
in
xchg
es
loope
dec
and
test
or
sub
imul
sahf
pop
in
jle
push
mov
je
sub
add
fldl
add
mov
test
stc
std
inc
jne
mov
add
incl
mov
inc
jmp
push
push
push
iret
incl
push
pop
mov
and
add
jb
cmp
mov
std
subl
cmpb
add
jno
and
inc
cmp
xor
push
mov
out
mov
jno
pavgw
inc
pop
ret
mov
push
imul
mov
jno
or
lea
cwtl
add
cld
xchg
jo
bound
pop
push
aas
orb
pushf
xchg
jp
inc
cmp
dec
mov
mov
inc
mov
cmp
sub
shrl
stc
cmpsb
and
xchg
cmp
mov
dec
xchg
adc
pop
insb
push
incb
stos
jg
inc
scas
and
xorb
mov
jp
jae
xchg
add
sbb
cmp
mov
sub
fcomps
sub
subl
cmp
push
xlat
inc
addl
ror
lods
call
mov
stos
addr16
mov
out
jle
add
add
cmp
sub
push
stos
sahf
jo
adc
lods
call
xor
mov
or
in
lods
add
cmp
xchg
in
mov
mov
popf
xchg
fidivs
jnp
out
sbb
mov
xor
test
jl
out
jno
mov
sbb
xor
and
or
scas
lcall
add
jo
add
push
push
xchg
in
xor
stos
cmpsb
add
jge
or
inc
sti
aam
flds
fdivl
cli
push
fdivl
jmp
ds
fsubr
out
cs
cli
bound
or
pop
sbb
push
adc
fwait
add
in
mov
add
ljmp
and
add
add
add
add
push
jg
ret
call
mov
dec
add
test
dec
add
stc
std
mov
pop
sti
inc
sbb
mov
mov
or
cli
xlat
ret
aas
clc
out
push
jns
call
cmpsl
or
add
daa
or
les
inc
je
data16
add
and
cmp
or
andb
andb
xchg
sbb
jne
cmp
out
sbb
mov
pusha
sbb
inc
jge
jo
scas
or
xor
outsb
push
push
xor
outsl
xor
in
es
inc
dec
jge
pop
push
ret
xchg
aaa
add
je
pushf
mov
cmpsb
xchg
adc
insl
pop
xor
jbe
mov
pop
loop
test
outsl
mov
pop
push
push
std
fstpt
xor
in
mov
fsub
shl
fdivr
inc
adc
fcomi
ljmp
test
movsl
jmp
add
cmp
call
add
ljmp
scas
out
cs
mov
ret
rorl
add
mov
add
ljmp
fildll
pop
inc
sbb
pop
sbb
fisubs
sub
stos
out
inc
fisttps
xorb
pop
hlt
push
test
or
sub
ljmp
icebp
cmp
fcompl
clc
imul
or
call
push
mov
notb
add
xchg
add
sbb
cmp
sti
mov
dec
ss
adc
in
cmp
mov
cmp
pop
call
cmp
ret
xchg
lock
and
repz
inc
cmpsl
test
test
and
ret
movsl
dec
fildl
adc
lds
mull
add
inc
adc
add
call
cli
incb
add
add
sti
inc
pop
or
sti
inc
pop
das
pop
push
lock
adc
out
inc
stos
inc
push
pop
mov
push
or
adc
xor
mov
mov
sub
xchg
push
push
cld
adc
mov
arpl
je
fildll
sarb
xchg
push
xchg
push
push
add
cld
nop
xchg
jg
cmp
cmpl
enter
cmpsb
out
mov
mov
in
push
jnp
sarb
lcall
js
add
mov
addr16
ret
pop
ja
jle
ret
inc
sar
insl
push
sub
mov
pusha
adc
push
xorl
jmp
cwtl
test
mov
inc
sbb
loopne
xorb
jnp
pop
push
int
inc
imul
xchg
adc
ljmp
out
ljmp
xchg
jmp
jno
pop
inc
imul
mov
or
add
les
jns
sahf
and
pushf
call
mov
xchg
nop
addl
add
pusha
ljmp
dec
mov
mov
xor
add
fcoms
jns
cs
xorl
inc
test
mov
call
lods
sbb
fs
sub
xchg
ss
scas
aaa
dec
xchg
and
mov
aad
vmovmskps
lods
les
pop
movsl
pop
rorl
add
xchg
mov
arpl
popf
mov
ss
mov
mov
mov
push
test
ret
js
test
data16
sub
cmpsl
xchg
les
mov
add
ret
jns
inc
add
sbb
inc
ret
sbb
lock
dec
fidivrl
pop
lahf
mov
add
dec
lea
inc
push
call
cmp
and
lods
aaa
in
add
shll
sbbl
aas
jo
in
add
sub
dec
push
and
lcall
mov
xlat
and
test
test
push
shlb
mov
push
or
dec
mov
fbstp
jp
add
test
inc
pushf
add
mov
mov
dec
sub
push
jno
in
pop
xlat
sub
addr16
scas
jb
pop
enter
scas
in
pop
jge
das
sbb
test
inc
sar
orl
or
push
or
vpaddd
inc
jge
repz
call
sub
int
repz
shl
incl
add
add
outsl
ja
cmpsb
insb
fisttps
scas
inc
test
xchg
jmp
jg
jmp
add
shl
pop
bound
lret
insl
push
mov
ljmp
dec
pop
mov
scas
shlb
xor
jno
mov
div
sub
call
sti
es
jnp
bound
adc
imull
push
add
add
add
ljmp
icebp
outsl
mov
add
outsb
jae
scas
ljmp
mov
add
ljmp
sub
cli
jmp
pop
movb
add
jne,pn
clc
out
in
jge
cmp
lods
ljmp
mov
popf
pop
push
ss
movsb
daa
push
insb
addr16
jmp
push
dec
jb
inc
xchg
push
fs
sbb
mov
js
mov
ss
push
loope
mov
jnp
mov
dec
int3
mov
push
test
or
add
pop
sub
unpckhps
jmp
rolb
lcall
jecxz
or
sti
mov
add
add
or
pop
mov
test
out
or
in
pop
ljmp
aaa
or
repnz
adc
dec
mov
xlat
push
test
or
hlt
inc
fucomi
jne
push
mov
std
and
dec
call
jae,pt
test
jnp
push
scas
repz
fwait
test
inc
scas
mov
jb
cmpsb
inc
cmp
mov
and
xor
mov
xor
jo
jb
jno
adc
adc
clc
dec
and
test
les
mov
mov
out
cld
jle
fcompl
xor
mov
scas
jo
aas
in
cmp
push
xor
rcll
lods
inc
push
push
shll
mov
push
add
add
add
scas
sti
jle
cmp
inc
or
cmp
and
leave
jp
push
lds
push
adc
jns
sub
fldl
std
lret
dec
sbb
fildll
pop
lods
fucomip
arpl
lods
arpl
imul
in
scas
ljmp
int
jmp
enter
add
ljmp
out
dec
sbb
dec
imulb
test
test
push
jo
or
add
mov
push
andl
jp
dec
icebp
sub
xchg
mov
dec
pop
sub
in
add
inc
mov
add
and
push
add
cli
push
cmp
pop
sub
push
lea
push
pop
divl
je
cmp
push
mov
jmp
sbb
jle
setb
out
lea
sbb
lcall
jne
lret
mov
add
xchg
popa
rcll
lcall
in
sbb
aaa
push
call
jo
std
lcall
sub
xchg
jb
in
pushl
push
xor
add
in
add
les
andb
or
in
cld
adc
mov
sbbl
fnstenv
push
mov
add
ss
outsb
inc
lods
daa
js
mov
stos
add
inc
cs
adc
loop
dec
or
add
add
and
ljmp
repnz
adc
mov
sti
lea
jb
nop
repnz
ret
mov
dec
imul
push
jp
out
inc
cmpl
xor
add
cmp
call
ljmp
std
bound
and
add
add
fs
cmp
and
sbb
movsl
fs
imul
rcll
popa
sub
dec
outsl
xlat
call
daa
jns
push
xlat
cs
add
jae
pop
pop
fldcw
fistpl
call
mov
sbb
fisubs
ljmp
and
sub
and
lock
repz
lods
ljmp
cld
bound
or
inc
or
stos
ljmp
es
mov
sub
sbb
call
mov
inc
in
mov
cmp
imul
pop
lods
das
je
pop
test
adc
or
mov
jmp
xchg
xor
sbb
push
leave
push
or
mov
incl
imul
out
add
add
pop
ds
jbe
inc
lret
call
incb
pop
inc
and
jne
inc
jmp
mov
popf
out
call
push
and
sub
or
fnstenv
xor
push
and
cmp
sub
and
call
dec
call
lret
cmpsl
or
add
std
aaa
lahf
aaa
xlat
nop
pusha
repnz
sbb
jae
in
and
sub
and
dec
fsubrl
and
cltd
and
lock
xchg
std
cmp
in
mov
scas
adc
jmp
jmp
cld
test
aad
mov
sbb
cltd
and
jl
push
scas
inc
cld
mov
movb
enter
add
jae
in
cltd
and
push
es
ljmp
sub
adc
das
sub
sbb
nop
push
jmp
add
add
lret
repnz
and
cltd
popa
sub
cmpsb
add
xor
sbb
mov
jmp
cmp
ljmp
scas
call
inc
xor
jnp
in
divb
lahf
movsl
insl
in
scas
sahf
testl
fdiv
push
leave
das
sub
add
lret
push
in
mov
ljmp
jmp
lods
daa
adc
pop
ljmp
inc
ret
xchg
sub
jmp
lods
sahf
push
ds
xor
mov
sub
xor
add
addr16
das
inc
out
mov
jg
mov
add
into
xlat
add
mov
xor
insl
sub
xor
stc
dec
add
xchg
jnp
pop
lds
loope
out
add
lods
ljmp
add
ret
push
jp
cmpl
movb
inc
in
outsb
adc
fldcw
dec
pusha
push
push
jbe
or
xor
lea
mov
bnd
jmp
jno
or
pop
loop
or
idivb
sub
shr
cli
inc
jno
adc
imul
add
mov
incl
insb
std
jne
aam
fdivr
add
mov
push
xchg
pop
xchg
pop
push
pop
jno
adc
scas
adc
cld
mov
xchg
push
inc
cmp
pop
subb
cltd
sti
mov
bound
into
andl
push
rorb
sbb
mov
add
add
cmp
cld
mov
xlat
or
push
sti
stc
cld
and
es
mov
cmp
clc
testl
xchg
cmp
jno
insl
inc
fucom
ret
ljmp
jmp
dec
fimuls
lock
mov
inc
jmp
jmp
adc
insl
out
daa
or
xchg
es
sub
xor
sbb
cmp
push
sbb
cmp
ljmp
xor
mov
mov
mov
lcall
mov
idivb
test
jb
pop
and
dec
jo
lret
or
cli
push
fldenv
gs
in
add
cmp
cli
ss
xor
fwait
adc
jmp
test
hlt
inc
sahf
sub
lods
daa
adc
sti
in
push
lret
les
add
lods
push
in
popa
imul
lods
imul
and
inc
add
into
mov
and
jmp
mov
mov
aam
cli
incl
add
add
scas
outsb
adc
push
xor
jmp
loop
cmp
jnp
sub
push
adc
jo
and
ja
and
push
je
jbe
and
rcrb
inc
inc
or
inc
sti
out
add
sbb
lea
sti
inc
add
outsl
das
fcomp
sub
addr16
call
lds
jns
lcall
push
sub
orl
pop
out
flds
sar
xchg
push
xchg
je
pop
mov
daa
imul
imul
inc
cld
adc
add
scas
test
adc
inc
mov
or
scas
adc
mov
std
adc
in
jle
push
push
inc
adc
jae
mov
sahf
pop
adc
cld
pop
add
mov
repnz
ss
inc
scas
fs
add
mov
pop
dec
scas
ljmp
cltd
dec
cmp
ljmp
jmp
ljmp
jo
jno
std
test
ljmp
stos
decb
mov
into
fmuls
jne
int3
sub
and
xchg
ljmp
scas
addr16
test
popf
repz
fucomi
loope
sub
in
mov
enter
insl
into
loopne
cmp
bound
mov
ss
and
ds
sti
inc
jmp
test
cli
jbe
sub
or
add
add
add
movsl
lods
xchg
repz
call
inc
add
lods
cmpsb
add
lock
sti
in
and
jge
and
bound
into
adc
int3
pop
sub
jmp
adcl
add
orl
fsubrs
outsl
or
adc
xchg
in
mov
add
push
std
jne
cld
outsl
or
and
jne
sahf
outsl
or
xor
push
or
push
and
outsl
or
std
pop
aam
std
jne
pop
std
and
sbb
out
xchg
dec
std
call
cmp
cmp
sbb
push
je
test
incl
std
jne
cld
outsl
or
addl
inc
scas
adc
sahf
mov
dec
sub
stc
dec
pop
pop
cltd
pop
fisttpll
mulb
dec
test
pop
mov
jmp
pushf
sbb
lcall
subl
xor
mov
in
aaa
mov
orl
ljmp
cli
les
mulb
scas
adc
call
pop
jmp
int
shlb
loop
bound
xchg
jmp
ljmp
rclb
loopne
pushf
outsb
ffree
mov
jno
call
sarl
mov
jo
decl
sbbb
or
xchg
fdivrl
loopne
scas
jae
add
add
fdiv
pop
xchg
mov
pop
cmc
pop
pushf
stos
call
inc
popf
ljmp
cs
aam
adc
sub
leave
insl
lods
out
loope
jl
add
out
add
repz
out
jmp
lahf
pushf
or
mov
cmpsb
lcall
pushf
xchg
jmp
xchg
idiv
adc
jne
adc
js
add
lret
cmp
adc
mov
add
enter
cli
sub
cli
mov
and
jno
icebp
cli
xchg
add
cwtl
adc
mov
cmpsb
adc
mov
push
push
mov
push
push
lock
fsubr
jecxz
push
jb
je
add
add
and
out
adc
out
mov
pop
in
outsb
add
xor
adc
rorb
test
lcall
mov
std
xor
jne
cmp
sbb
xor
je
pop
dec
cmp
outsl
adc
dec
adc
stc
or
cld
xchg
sar
aas
scas
outsb
inc
fidivs
js
mov
leave
xor
mov
jae,pt
mov
mov
xchg
sbb
cmpsb
mov
adc
scas
dec
fdivrl
adc
jno
push
cld
jecxz
or
mov
pop
push
pop
push
out
adc
and
fmull
sub
in
cld
fwait
xor
mov
adc
call
push
and
cwtl
stos
mov
test
test
fadds
jge
aam
icebp
xchg
fisttpl
pop
mov
int3
mov
cmc
mov
jmp
adc
or
xchg
cli
cwtl
dec
shl
push
fsubrp
and
das
mov
outsl
mov
scas
xchg
loop
cltd
jno
test
clc
test
jecxz
lods
or
es
xor
push
sub
add
xchg
or
or
lahf
or
xchg
cld
in
sbb
xchg
adc
cli
insl
push
or
or
aaa
or
movsl
cld
in
sbb
test
xchg
adc
testl
test
mov
add
add
sub
stos
mov
inc
jmp
ljmp
lods
ljmp
imul
adc
pop
in
imul
jmp
call
enter
lcall
cwtl
stos
rolb
out
add
xlat
in
cmp
pop
push
push
push
xchg
pop
push
push
call
out
cmp
imul
outsb
or
push
jge
inc
mov
jne
cmpsb
les
xchg
in
jmp
ret
mov
pop
push
call
shrb
shll
mov
in
add
scas
add
mov
lds
cld
and
or
jo
add
test
add
sub
xchg
push
pop
jmp
push
scas
add
cmp
ret
flds
adc
loope
adc
out
repnz
add
jb
cmp
cld
mov
cmp
decl
lds
negl
mov
daa
push
lds
hlt
mov
outsl
adc
fsubr
pop
mov
pushf
add
ret
sub
pop
aad
add
pop
std
out
sahf
stos
call
inc
jge
pop
mov
out
jno
push
ljmp
lahf
sub
call
mov
clc
addl
mov
fildl
mov
std
mov
sbb
daa
add
popf
repz
sbb
cli
cs
pmaxsw
call
jl
pop
add
cmpsl
cld
stc
sti
insl
pop
push
pop
lcall
icebp
sub
jmp
lods
ljmp
mov
addr16
lods
or
xchg
add
cli
je
adc
mulb
out
pop
mov
adc
mov
jecxz
cmpsl
xchg
rclb
mov
pop
mov
loope
sbb
add
jmp
push
add
cmp
xchg
pop
icebp
lgdtl
xchg
das
lods
xchg
rcrb
or
stos
dec
call
lcall
push
out
inc
sti
inc
pop
jb
call
push
adc
cwtl
rcrl
mov
jmp
add
xchg
stos
sti
incl
pop
outsl
stc
scas
xlat
cli
call
push
std
add
pop
loopne
dec
lea
xlat
idiv
pusha
div
push
jae
rorl
and
imul
adc
push
pop
popf
dec
jle
stos
xor
mov
push
stos
xlat
xchg
xor
aas
scas
addb
mov
jae
sub
add
pop
cwtl
mov
jge
out
testl
jmp
xchg
adc
mov
add
cmp
cmp
mov
sub
cld
test
lcall
jmp
lods
push
fsubrp
adc
xor
iret
nop
mov
ljmp
push
addb
add
scas
ljmp
imul
ret
lock
push
jns
mov
stos
lock
add
dec
orb
call
js
iret
mov
ljmp
insl
into
in
loop
lock
mov
jmp
jne
clc
mov
jmp
jmp
lods
test
call
loopne
mov
or
adc
insb
ljmp
cmp
cmpsl
and
int
mov
jmp
subb
and
out
pusha
add
lods
sarl
jmp
add
int
pop
pop
lds
pusha
mov
inc
ljmp
scas
ljmp
sub
cmc
inc
add
inc
sub
cli
pusha
and
or
add
pop
xchg
sbbl
insl
mov
add
adc
or
mov
ds
out
xchg
push
imul
je
xchg
sub
lret
pusha
push
out
add
insl
xchg
ds
repz
mov
jp
push
pusha
push
out
add
mov
inc
mov
cmp
push
and
add
std
in
std
ljmp
test
xchg
repz
leave
sbb
xchg
or
sti
jns
mov
xchg
push
push
xor
out
push
cwtl
incb
mov
add
and
push
aad
cmpl
sti
ds
or
jg
stc
out
xor
push
pop
int
mov
pop
xchg
sub
das
fbstp
add
inc
or
mov
xor
push
xor
mov
xchg
sbb
mov
cmpsl
add
incb
xchg
adc
call
add
cmpsl
int3
sldt
add
shr
cmp
mov
imul
out
pop
sub
mov
add
cmovnp
xchg
add
add
adc
xor
mov
shrb
xor
lcall
or
cmc
nop
sbb
add
ficoms
lret
xchg
cli
out
ljmp
cmp
dec
cmp
add
add
mov
mov
add
inc
or
test
scas
xchg
add
movsl
add
sub
test
in
push
adcl
pop
fs
push
jb
jl
lods
lahf
je
xchg
ljmp
in
add
xor
addr16
adc
add
sub
je
lret
aam
jmp
jmp
add
xlat
add
cld
shr
std
jne
pop
fld1
call
daa
push
pop
inc
out
push
sbb
dec
push
in
ret
push
xchg
or
jp
cmovo
movsb
std
push
lods
sub
xor
std
mov
fs
jne
fadd
jmp
pop
inc
cld
les
and
pop
addr16
jne
jmp
push
lret
fisttpll
sbb
push
leave
push
jl
jns
scas
pop
test
add
inc
pop
add
jle
fcompl
adc
cwtl
inc
jle
pop
xchg
inc
rcl
bound
loopne
out
test
mov
sti
ja
or
sub
fstpt
mov
fstpt
push
and
cwtl
dec
or
add
add
push
xlat
push
or
ds
push
push
out
sti
sbb
or
jns
add
cwtl
cli
sti
stc
jmp
mov
imul
loop
hlt
jge
sub
ss
jne
pop
add
mov
pop
neg
or
les
scas
rorb
sbb
adc
in
xor
add
pop
shlb
adc
mov
add
sub
inc
inc
xchg
js
repz
bound
add
stc
and
xchg
inc
jmp
out
add
xchg
cmp
xor
add
add
inc
lret
pcmpeqb
pop
unpcklps
mov
xchg
fistpl
jmp
ret
jecxz
cli
pop
je
lds
call
lcall
cs
mov
stos
mov
mov
mov
mov
add
aaa
sbb
and
ljmp
dec
test
mov
inc
pop
test
mov
arpl
adc
jnp
ret
rorl
add
pop
ds
push
adc
loope
add
adc
jp
scas
shl
jb
add
push
mov
pusha
inc
lcall
lods
push
leave
test
add
sti
jns
lahf
out
dec
push
add
jp
jnp
outsl
das
push
imul
mov
pop
testb
mov
inc
or
xchg
cltd
add
jmp
push
mov
pop
testb
xchg
cltd
add
out
sub
scas
stos
leave
stc
sbb
push
add
ljmp
arpl
scas
adc
out
int
sti
xor
pop
mov
pop
adc
repnz
jae
ja
cli
outsb
cmpsl
jl
or
adc
push
call
fstl
leave
insb
paddd
mov
dec
push
cli
sub
rolb
add
mov
fbld
sbb
je
dec
jl
test
push
cli
sub
ljmp
push
mov
sti
adc
pop
mov
out
mov
call
add
sub
aaa
out
sbb
movsl
mov
mov
mov
ret
push
cmp
call
std
mov
outsl
repz
push
and
scas
aam
sub
outsl
cld
jge
gs
clc
icebp
dec
jp
loope
jecxz
jno
xor
or
adc
je
or
ret
cmc
test
lds
into
add
lods
mov
push
mov
mov
add
sub
push
dec
or
cli
ds
cmpl
out
das
sub
int3
push
xchg
dec
jmp
jmp
aad
cli
mov
add
add
and
push
cmp
ud2
subl
cs
cmpsl
mov
add
sbb
pushf
mov
lcall
cmp
xor
push
nop
cmp
jnp
repnz
xchg
jne
les
hlt
adcb
sti
mov
adc
jno
cmpb
add
jbe
push
es
mov
sahf
arpl
clc
call
jp
mov
jmp
hlt
sbb
test
ret
je
xor
jae
mov
or
test
incl
xor
subl
add
add
fwait
jne
fisubrl
jne
mov
pop
push
sti
fisttpl
out
mov
add
add
lock
inc
mov
fs
movsl
stc
push
and
out
sahf
mov
xchg
cwtl
or
das
out
stos
mov
pop
test
pop
in
paddd
mov
stc
jb
fucomi
imul
xchg
daa
pop
cli
mov
xchg
test
data16
int
in
adc
push
cs
cs
call
js
lods
mov
shlb
sub
js
ret
fcmovnu
rorb
jmp
push
shrl
cmp
repnz
outsb
imul
les
pop
popa
push
imul
add
out
call
pop
mov
mov
ffreep
out
int3
xchg
ficoml
outsl
test
mov
incb
add
add
std
xor
ljmp
sub
add
mov
xorb
mov
bnd
stos
sgdtl
and
xchg
and
xor
mov
xchg
bnd
cmc
shll
jne
je
ljmp
push
testb
insl
idivb
out
sub
jb
ljmp
clc
fstp
fildl
add
add
xchg
sbb
in
sub
pushf
arpl
loope
roll
mov
jmp
adc
xchg
sub
pushl
lcall
cs
jmp
jno
add
mov
add
decl
push
jne
mov
pop
ljmp
lcall
push
cmovo
push
or
add
add
sahf
add
push
shr
add
add
push
shr
or
mov
pushf
push
ret
push
mov
add
lods
xchg
inc
out
or
push
idiv
mov
testb
mov
push
scas
sbb
fcompl
sbbl
cli
lds
jae
adc
push
decb
or
add
add
gs
adc
pop
mov
inc
add
push
add
imul
mov
add
sti
sub
pop
jmp
sti
or
arpl
cli
jmp
sub
lcall
je
call
or
leave
out
xchg
adc
sub
or
pop
cmc
shlb
ljmp
add
xchg
add
add
popf
xor
ja
jle
add
sub
scas
add
xlat
les
out
ljmp
xor
call
cld
sub
cld
daa
ret
dec
mov
out
push
les
call
add
fisttpll
mov
jbe
add
add
sub
add
outsb
ljmp
lcall
fucomp
ljmp
clc
cli
dec
fidivs
in
xchg
and
jb
sbb
rolb
cli
mov
sti
stc
xor
pop
sbb
repnz
cli
stc
adc
pop
in
test
add
stos
jo
in
repz
sub
pop
pushf
push
cli
cld
jg
aad
jno
or
stos
ljmp
cmc
addr16
push
mov
mov
sub
pop
jg
and
into
inc
adc
jno
add
fadds
or
adc
stc
cmc
xor
mov
cmc
mov
xorl
int
bswap
aam
add
jl
push
ja
push
xor
call
sub
and
add
jle
or
xor
call
addb
fwait
mov
jmp
test
jmp
add
nop
andb
scas
fdivrs
sub
xchg
cmp
dec
and
adc
lret
jl
rcr
jl
sbb
cmpb
push
jo
sub
scas
cmp
push
cmp
sub
enter
enter
mov
out
aaa
cmp
fs
cmp
dec
mov
dec
push
sub
and
adc
sub
or
sub
lea
cmpsl
icebp
sti
sub
jb
jmp
inc
and
scas
ljmp
lds
adc
scas
les
movb
popf
ja
andl
fildl
and
jecxz
lret
dec
rol
sarl
lret
mov
ret
xabort
jp
mov
xor
sbb
xchg
out
push
std
adc
mov
pop
pop
inc
std
pop
dec
xchg
sub
mov
jae
jecxz
call
jbe
or
fcoml
add
outsl
aam
xchg
adc
icebp
cmc
cld
cmc
ret
test
add
sub
ljmp
xor
test
lods
ljmp
push
add
lcall
addr16
jns
jo
sub
iret
mov
jo
xor
scas
dec
fs
jo
xor
stc
and
sub
pop
int
out
test
mov
add
mov
add
jg
jne
sbb
add
ja
add
pop
call
add
xlat
push
and
xchg
mov
jmp
mov
shl
cmovae
add
xchg
or
and
push
and
or
and
push
shlb
out
je
sarb
mov
add
ret
rolb
add
hlt
add
add
hlt
xor
add
cmp
rclb
mov
rclb
and
out
add
test
inc
mov
adc
call
adc
call
lds
daa
inc
xchg
ss
lea
inc
push
push
les
xchg
mov
sub
fwait
lds
inc
scas
jp
and
mov
mov
in
adc
push
cmp
xor
shrb
inc
imul
call
pop
add
or
and
aad
xchg
daa
adc
push
outsb
lds
sti
jp
and
andb
daa
sbb
ljmp
in
scas
or
scas
stc
mov
daa
xchg
jmp
daa
mov
in
das
sub
add
dec
cmpsl
sbb
lds
daa
movsl
ljmp
xchg
push
add
movsl
fs
cwtl
mov
add
imul
sbb
stc
cmp
mov
scas
pop
gs
mov
xchg
ret
stc
mov
fildl
adcl
fldenv
dec
push
push
add
bnd
adc
jecxz
call
add
jo
movsb
repz
add
js
loope
outsl
mov
adc
das
sub
subps
scas
ljmp
mov
add
jmp
out
add
adc
add
call
push
cmp
push
lods
cmpsl
cs
or
fsubrl
popa
out
or
add
add
add
pop
jns
add
lds
jnp
lcall
pop
jno
add
imul
jb
in
xor
call
dec
sub
test
out
add
push
push
std
mov
pop
add
sbb
call
or
xor
jmp
dec
lea
and
jmp
push
call
fisubrl
jne
les
in
mov
dec
push
mov
cli
xchg
pop
frstor
addr16
sti
fildl
inc
scas
mov
adc
out
push
push
sub
sti
and
call
js
jnp
fnstcw
arpl
scas
add
and
ljmp
out
push
test
add
add
dec
and
scas
add
jb
inc
cmp
scas
lret
inc
sti
add
out
jg
add
sub
inc
notb
mov
repz
adc
xor
jmp
and
jp
imul
pop
stc
and
pop
sub
fcoml
popa
cltd
mov
cmp
out
cmc
xchg
fildl
add
add
ds
sub
fisttpl
ret
lea
call
push
xchg
and
mov
adc
cmc
cli
mov
sub
add
sub
popa
sub
xchg
jno
out
pusha
cmpsl
dec
xor
call
out
out
call
or
mov
cmpsb
lahf
push
adc
mov
stc
insb
dec
jle
xor
fldcw
push
adc
add
add
fisttps
sub
push
pop
lahf
push
adc
ljmp
sarb
cltd
push
pop
adc
inc
xor
cli
popf
xchg
out
dec
xorl
stc
outsl
out
add
add
add
jmp
nop
xor
in
push
push
call
mov
sbb
testb
add
add
add
add
paddusw
aad
add
int3
cmp
add
dec
sarl
lret
push
mov
cld
or
sarl
lahf
xchg
cmp
addl
outsl
jecxz
and
daa
pop
mov
jb
fadds
nop
pop
cld
add
mov
cvtps2pi
or
rorb
or
xlat
xchg
mov
inc
or
decl
add
scas
add
dec
sbb
sti
or
dec
jecxz
pop
rcl
add
sti
inc
mov
adc
sub
and
stos
jecxz
sbb
and
mov
mov
mov
sti
icebp
xor
mov
add
out
jle
rcr
mov
push
movb
leave
arpl
mov
add
arpl
jg
fmuls
std
cmp
lret
push
movsb
add
xchg
mov
scas
add
cli
ljmp
inc
in
gs
xchg
loop
pop
test
call
jns
nop
cmpsb
decl
fcoms
xor
push
add
out
fisttpl
mov
pop
in
cmpsb
lcall
xchg
outsl
xlat
xchg
fildl
pop
cltd
jno
cli
gs
hlt
das
inc
call
sub
repz
jmp
add
js
stos
cs
add
and
add
test
js
out
cmp
ja
pop
mov
cmc
stc
mov
jbe
jo
loop
popa
sahf
sub
inc
jmp
repnz
test
in
test
pop
xor
add
ljmp
push
imul
or
mov
push
cmp
xor
movsl
arpl
in
add
es
dec
test
int3
hlt
xchg
xchg
roll
adc
xchg
shrb
leave
inc
call
jns
jg
in
mov
add
add
add
mov
push
outsl
pusha
inc
sub
inc
aas
cwtl
pop
adcl
adc
and
or
std
call
imul
loopne
dec
mov
jmp
lcall
call
push
call
dec
sub
nop
xchg
and
sbb
fcoms
mov
add
add
test
out
xor
in
inc
or
add
test
add
push
and
in
adc
xchg
or
or
mov
push
adc
mov
jae
or
jne
adcb
push
lds
lret
scas
xor
jne
cmpsl
push
or
add
add
add
mov
and
loope
imulb
xchg
jae
loopne
popa
daa
cmp
sbbb
frstor
lea
data16
ljmp
mov
jbe
scas
ljmp
inc
mov
push
mov
jmp
popa
out
ljmp
mov
stos
hlt
addl
add
addr16
lea
or
imul
mov
sub
dec
xchg
mov
out
add
idivb
shr
call
xor
jmp
xchg
test
imul
les
jmp
daa
mov
icebp
subl
sub
add
add
lret
cmpsb
cmp
enter
cs
out
in
pop
sub
sub
jmp
push
repnz
push
loop
mov
and
fcmovb
jmp
push
and
out
add
popa
shll
call
mov
movsb
add
mov
add
add
in
dec
cmp
ret
xor
cmp
xchg
adc
push
push
divb
add
cmp
out
pop
insb
pop
in
push
in
push
mov
jg
pop
ljmp
aam
dec
test
test
daa
fsubrl
leave
scas
jle
or
mov
ljmp
repnz
cmpb
out
push
data16
fnstcw
shlb
xchg
mov
jle
push
jle
adc
ret
std
ja
add
inc
mov
mov
out
lock
sub
cmp
addr16
sub
mov
jle
fucomi
xchg
sti
popa
andb
imul
add
add
jne
xor
aam
lock
ljmp
push
jmp
test
and
stos
ljmp
das
xlat
xlat
add
cmpsb
in
cwtl
mov
push
fists
sbb
jmp
jmp
add
out
jmp
sub
jmp
jmp
outsb
pop
int
ljmp
lock
insl
inc
rorb
cmp
mov
stc
dec
repz
sub
ljmp
pushf
jno
in
adc
iret
loope,pn
aad
dec
test
pop
or
mov
jmp
mov
lods
add
inc
out
pop
jb
dec
jg
add
xor
je
push
or
ljmp
lods
ja
or
popf
jno
cmp
add
add
outsb
push
adc
cmp
shrl
add
sub
jle
add
push
or
push
push
add
jb
and
jne
and
js
or
push
adc
in
add
push
xabort
and
outsl
ret
jo
or
push
or
es
add
jno
and
call
ds
aam
movsl
mov
pop
ret
leave
push
ret
arpl
adc
idiv
scas
inc
scas
dec
xor
test
aaa
add
push
jno
add
jns
or
out
pop
add
leave
add
adcl
add
xchg
dec
inc
or
fcmovu
push
xor
roll
stc
leave
loopne
add
roll
mov
pop
mov
popf
sarb
scas
roll
clc
mov
or
xor
ljmp
roll
bound
dec
addl
push
pop
inc
hlt
and
test
ljmp
ljmp
xor
add
test
ljmp
outsb
adc
scas
ljmp
scas
ljmp
xor
and
xchg
inc
fnstenv
ljmp
movsb
cmp
leave
jae
or
mulb
scas
ljmp
add
ljmp
jb
sbb
pop
out
or
repnz
pop
out
aaa
clc
add
lret
xchg
xor
sub
stos
popa
add
cli
mov
test
mov
or
sub
hlt
mov
ret
push
in
lods
add
fs
stc
jmp
and
mov
loope
insl
in
pop
push
xchg
es
lea
test
inc
adc
cmpl
lods
popa
insl
inc
in
xor
mov
ljmp
push
in
into
out
out
add
mov
idiv
or
decb
mov
jmp
mov
testb
mov
mov
dec
ljmp
xchg
adc
cmpl
orl
add
add
out
arpl
or
repnz
in
les
xchg
add
lret
add
dec
imul
lock
dec
inc
lock
inc
cld
mov
dec
cli
cmp
lcall
mov
jp
pop
adc
xchg
in
add
scas
add
push
out
or
jg
add
add
cltd
xor
sbbl
das
out
or
scas
pop
pop
aad
jns
cmpsl
dec
push
or
push
cltd
sbb
mov
stc
test
jns
js
sti
mov
pop
in
ljmp
inc
jge
add
rol
jmp
mov
rcrb
fbld
add
add
jmp
fwait
add
sub
jle
cmc
insl
stos
dec
mov
pop
inc
aad
rcrb
add
sub
sub
rolb
aas
bound
iret
push
jo
scas
ljmp
jle
jbe
xor
call
jmp
xlat
add
jl
aam
enter
lods
loope
jno
jmp
or
jmp
jmp
fsub
sbbb
outsb
lret
xchg
testb
scas
cmp
aam
cld
inc
jmp
in
push
or
out
sub
out
daa
mov
mov
inc
jge
mov
xor
adc
les
push
jb
or
adc
add
add
add
jb
insl
add
in
cli
lds
mov
inc
push
push
or
into
push
sub
scas
sub
imul
sbb
add
fidivl
pusha
sbb
hlt
xchg
xor
call
mov
ljmp
mov
call
ljmp
adc
mov
add
add
mov
ljmp
jno
jne
mov
xorl
lahf
pop
xchg
scas
roll
sti
fcomps
call
xor
call
sub
loop
pop
mov
sti
testb
scas
mov
ffree
or
sub
out
add
popa
dec
movb
add
add
imul
mov
cmp
je
push
pop
inc
rcr
adc
in
pop
mov
and
add
rclb
mov
cmp
fcoms
imul
mov
mov
inc
pop
insb
loop
imul
push
out
stos
inc
in
shr
out
ja
and
push
jecxz
pop
mov
pushf
jg
mov
inc
xchg
mov
pop
jge
jmp
sub
lcall
dec
insb
int
push
flds
insb
scas
mov
out
mov
test
fsubr
inc
roll
call
add
mov
je
rcr
jg
out
or
dec
jg
xor
je
add
add
call
add
sbb
dec
sub
cmp
inc
lock
or
jmp
or
pop
sti
fnstcw
pusha
fs
push
add
push
out
xchg
add
cmpsl
push
lret
jle
ljmp
ret
icebp
inc
jae
shl
add
lods
test
add
push
jmp
add
xchg
pop
vfmsubaddps
xchg
jmp
push
or
mov
ljmp
in
push
int3
mov
add
leave
add
pop
out
or
lods
push
xchg
js
adc
test
or
or
out
add
test
dec
mov
pop
jns
pop
out
inc
dec
push
std
jne
inc
add
pop
add
aad
adc
mov
lds
dec
mov
leave
insb
fiaddl
dec
fcomps
xchg
cli
and
or
sub
rolb
scas
sarl
scas
iret
add
add
push
cmp
clc
enter
add
sub
add
sub
dec
dec
pop
fs
jnp
adc
test
fnstcw
rcll
add
outsl
loope
testl
mov
xor
add
repnz
outsl
sbb
mov
outsl
adc
imul
push
sahf
insl
mov
into
push
stos
pop
xchg
fisttpl
sahf
fistl
sahf
xor
push
xor
ljmp
adc
outsb
icebp
lds
push
lods
cld
icebp
xor
mov
iret
pop
mov
push
fimuls
hlt
add
pop
loopne
cs
iret
scas
int3
or
adc
shl
pop
pop
in
cs
xor
scas
mov
mov
scas
xor
push
outsl
jecxz
pop
push
in
jp
push
fucomi
ljmp
push
cmp
adcb
mov
popf
cwtl
call
and
outsb
add
pop
sbb
sbb
pop
push
icebp
ret
ret
repz
in
mov
ret
in
pop
jbe
sti
icebp
add
cli
shr
push
fcmovbe
cld
je
loop
adc
stc
pop
add
clc
test
inc
push
call
or
outsb
and
sbb
std
pop
andl
decl
bnd
cli
shr
push
fcmovu
cld
je
cld
adc
int3
mov
ret
mov
pop
pusha
movsl
jg
fcmovnu
push
fisttpl
push
push
pop
test
jmp
add
add
ret
xor
add
add
inc
aam
outsb
pop
jmp
mov
inc
push
or
mov
adc
adc
mov
sbb
in
cmp
lods
cmp
rcrb
jp
leave
xchg
js
cmpl
push
xchg
daa
sti
imul
lds
jl
add
inc
dec
and
shll
fstps
aas
ss
xchg
out
aas
scas
inc
enter
int3
je
mov
shll
jmp
jle
data16
jmp
ret
cmc
xlat
pop
ret
sti
jae
jno
out
pop
ret
xor
dec
adc
lds
sub
push
xor
lock
stos
add
stos
mov
mov
add
lock
lcall
xchg
pushf
add
aam
push
test
clc
add
pop
loope
in
adc
dec
arpl
stos
ja
daa
pop
cmp
insl
mov
adc
mov
push
loopne
in
aam
pop
add
pop
rcr
pop
and
pop
shl
insl
ret
gs
jmp
adc
stc
pop
mov
sub
mov
add
fucomi
ljmp
in
push
lahf
mov
rolb
jmp
xchg
xlat
sub
push
cld
lock
push
add
daa
movsl
cmp
das
mov
jbe
lcall
into
test
jp
or
xor
imul
cli
cli
and
rcll
iret
xor
loope
jle
dec
push
mov
arpl
mov
add
push
push
xor
cmovo
xchg
dec
jns
sahf
cmp
push
adc
mov
jbe
aam
incl
sbb
jbe
aam
incl
jge
ret
ljmp
push
test
ljmp
adc
pop
test
sbb
add
scas
test
cs
sub
mov
add
jl
mov
arpl
scas
inc
and
or
push
clc
test
add
jle
shlb
sub
xchg
fnstcw
inc
dec
hlt
scas
dec
inc
lock
push
or
rorl
push
sahf
jne
inc
movsl
repz
hlt
xor
pop
cmp
inc
leave
xor
iret
test
ljmp
data16
ljmp
jl
mov
addl
das
xchg
cmc
pop
in
adc
outsb
stos
dec
mov
push
clc
scas
pop
xlat
jp
pusha
push
enter
xorb
sub
inc
inc
movsb
rorl
jmp
aas
inc
lcall
movb
sarl
add
add
add
cmp
ljmp
cli
scas
gs
push
mov
add
lods
and
pop
push
and
mov
sub
cmp
jmp
sub
push
sti
lock
andl
jmp
add
push
cmp
stos
mov
ljmp
cmp
imul
and
iret
arpl
ja
mov
sub
push
sti
lock
out
and
adc
xor
add
incl
movsb
push
fsubrs
sub
ret
jmp
sub
outsb
stc
pop
lods
add
xor
cli
mov
push
mov
orl
add
add
add
add
pop
push
lret
in
add
aas
cmp
push
push
ret
push
shll
cli
shrl
inc
add
mov
decb
ret
std
push
push
or
cmp
ret
cmpsb
aas
clc
cld
add
inc
sub
mov
loopne
xchg
jmp
or
mov
add
sarb
sub
test
sbb
sub
icebp
mov
sub
or
imul
add
rorb
jp
ljmp
jp
jae
inc
mov
pop
movb
rol
add
enter
mov
aaa
insl
mov
aaa
insl
flds
or
xchg
js
inc
mov
add
in
ja
mov
xor
mov
add
push
in
inc
loop
or
rcl
cmp
ljmp
in
in
adc
leave
mov
repnz
adc
cmp
xchg
pop
outsl
imul
pop
fcoms
xchg
in
ret
mov
cmp
imul
in
jae
mov
pop
rdpmc
out
add
add
add
ss
xor
fnsave
push
inc
jmp
cmpsb
into
lea
add
or
rorb
jne
sarl
loope
sub
mov
rol
sar
and
aas
mov
adc
mov
stc
push
rcrb
mov
test
pop
push
mov
xor
sarb
or
jecxz
pushf
stos
ljmp
mov
pusha
sub
mov
mov
or
mov
addr16
or
arpl
jmp
add
mov
js
push
sti
mov
xor
jne
jg
add
hlt
sbb
or
pop
inc
or
pop
outsl
hlt
mov
call
subl
add
jbe
jmp
pop
mov
data16
xlat
adc
fs
push
inc
mov
std
xor
divl
call
lods
mov
je
test
add
mov
bound
mov
test
test
or
inc
inc
sti
inc
aam
mov
fstps
leave
insb
fildl
fnstcw
mov
push
and
stos
lea
dec
scas
test
adc
sbb
imul
fprem1
or
out
add
das
out
imul
adc
ljmp
sbb
inc
cmp
sbb
jge
add
mov
add
add
mov
jge
adc
jge
add
push
inc
mov
sti
cmpb
loopne
xor
repz
arpl
paddusw
iret
gs
aaa
cmpsl
pop
stos
mov
dec
into
push
xor
lock
lcall
inc
mov
call
pop
mov
imul
and
icebp
xchg
xchg
stos
pop
je
add
add
loope
or
pop
mov
loop
mov
mov
lea
push
push
xor
push
iret
jmp
lods
ljmp
insl
sub
pop
lods
ljmp
lods
ljmp
mov
clc
fcompp
incl
mov
sbb
cmpsb
shlb
xor
mov
add
add
cmp
sbb
cmp
add
inc
or
jns
rorl
leave
mov
mov
jae
or
jl
and
sbb
jg
inc
in
mov
divl
aam
clc
orb
loope
push
shl
xor
hlt
pavgb
adc
insb
jns
or
lret
ret
add
add
sub
in
cmpsb
jae
or
testb
xchg
ret
test
pop
ljmp
movlps
mov
jl
adc
cs
mov
push
jg
sub
or
and
and
xchg
add
bound
xlat
ds
insl
mov
cmp
or
lods
ret
in
test
add
xchg
push
dec
fldenv
adc
push
push
mov
fwait
mov
adc
cld
rol
ret
add
in
pop
push
and
scas
loope
inc
mov
neg
ret
sub
lods
lcall
mov
hlt
ja
mov
enter
cs
repz
xor
fs
add
add
and
jae
mov
negb
xor
sbb
push
ds
andb
addb
mov
xor
aaa
add
push
cmp
jne
mov
push
orl
sub
sbb
xor
jne
movsl
adc
jo
insb
pop
inc
or
jle
ljmp
add
add
add
add
stc
xchg
movsl
outsl
aas
jne
or
outsl
rol
xchg
pop
dec
loope
push
push
push
push
mov
in
push
inc
inc
xchg
xor
idiv
mov
out
clc
cld
xor
jg
xchg
adc
ret
outsb
int
push
jmp
lods
ljmp
scas
insl
ret
sbb
mov
sub
pusha
insb
repnz
push
xchg
clc
xor
add
add
mov
push
xchg
je
or
lock
add
xchg
rorb
jg
ret
pop
or
add
gs
arpl
add
clc
push
xor
arpl
xlat
or
and
xchg
add
pop
mov
xor
xor
push
push
add
mov
adc
sbb
cmp
add
add
in
outsb
pop
xchg
pushl
rolb
or
adc
xor
fldl
adc
add
cmpsb
jne
pop
mov
das
in
mov
push
and
dec
cmp
xor
push
inc
shlb
xchg
movsl
call
sub
sub
icebp
call
mov
add
add
dec
pop
sbb
xchg
rol
mov
mov
and
jp
lds
cmp
inc
adc
xchg
mov
jo
or
stc
mov
daa
aaa
xlat
lea
fs
stos
jo
or
in
adc
mov
add
stos
cmp
mov
cli
addr16
jg
jmp
fldt
jo
or
mov
add
add
out
push
xchg
mov
pop
lds
subl
cmp
xorl
pop
dec
and
in
push
mov
mov
sbb
ficomps
adc
ljmp
pusha
sbb
aam
fiadds
and
mov
fistl
mov
lea
in
outsb
or
mov
add
add
xor
out
sub
stc
xchg
add
lds
cmp
mov
push
clc
mov
in
mov
cs
pop
pop
push
in
insl
push
dec
cmp
inc
icebp
test
ds
dec
call
sbb
out
cmpsb
clc
sub
add
jl
hlt
mov
out
or
add
mov
hlt
inc
adc
mov
adc
jno
or
inc
or
xor
pop
iret
jo
add
aas
int3
test
divl
sarl
push
cmp
pushl
adc
push
adc
rclb
cltd
dec
call
out
ds
add
mov
loopne
or
push
add
jne
fdivr
add
sub
add
call
fsubrl
ljmp
add
add
add
add
inc
mov
sti
xor
shr
dec
shrb
cli
adc
mov
dec
and
lods
mov
mov
rorb
or
mov
mov
dec
sub
test
inc
add
push
xor
scas
dec
dec
clc
and
or
add
add
mov
daa
shl
std
stos
or
add
adc
lods
mov
sub
imull
repnz
xor
add
xor
bound
mov
sbb
test
push
pop
push
adcl
dec
cmpsb
aad
jle
ret
leave
in
inc
jg
dec
jb
push
test
xchg
jmp
les
in
cmp
add
add
lods
std
rclb
pop
fs
cmpsb
roll
jecxz
in
mov
aaa
fldcw
mov
sub
mov
aaa
add
jo
jecxz
call
lret
sub
push
dec
mov
add
sub
add
jnp
jo
mov
call
and
add
dec
add
out
jmp
ljmp
mov
ss
jmp
data16
fs
stc
jbe
ret
outsl
fstpl
push
out
mov
push
dec
je
bound
ret
add
fisttps
inc
push
jb
jne
mov
jmp
mov
jmp
rolb
std
ljmp
add
add
sbb
xchg
stos
or
cli
int
outsb
and
mov
int3
ret
sahf
ret
jbe
cmovl
decl
jns
rorl
out
xchg
cmpb
inc
aas
mov
adc
add
ja
incb
push
cmp
std
push
scas
inc
inc
aam
sub
test
nop
inc
mov
add
add
jmp
dec
mov
cmpl
pop
add
outsl
dec
inc
in
popf
jbe
mov
adc
push
aad
jge
push
jmp
in
pop
add
std
aaa
arpl
add
movsb
adc
ret
xchg
mov
mov
sar
mov
inc
inc
add
ja
mov
shl
out
mov
xor
jge
add
add
ljmp
aaa
daa
sub
cmp
xlat
pop
jne
cs
ljmp
repz
xchg
pop
pop
add
cmp
add
daa
dec
jl
sahf
aam
add
addr16
daa
cmp
les
movsb
es
scas
ljmp
jae
cmp
scas
jae
pop
aaa
pop
jg
ret
mov
inc
scas
push
stos
scas
jno
mov
cmp
enter
fdivr
mov
add
es
outsl
add
mov
add
mov
mov
decl
fistpll
outsl
cmp
ss
or
loope
in
ljmp
imul
push
subl
clc
je
fs
push
dec
cwtl
cmp
add
add
add
mov
clc
hlt
inc
in
inc
jmp
stos
insl
inc
lods
xor
shrb
mov
add
jmp
fisubs
pop
add
xchg
out
pop
aas
add
mov
xlat
cmp
repz
lds
add
loop
adc
mov
iret
push
adc
mov
std
jne
adc
inc
add
add
shrb
into
call
hlt
adc
adc
add
mov
mov
rolb
inc
dec
lea
les
daa
add
ret
push
mov
outsl
in
bnd
adc
mov
push
pushf
and
xor
inc
lds
rol
add
cmp
inc
scas
dec
inc
or
js
pop
sbb
sti
jns
push
sti
mov
xor
mov
lock
inc
hlt
stos
jg
cmp
fbstp
add
test
cmpsb
jne
jmp
adc
mov
pop
xchg
jmp
cld
or
sbb
pop
sbb
stc
ret
cmpsb
jne
test
clc
mov
inc
cmp
and
mov
push
vcmpsd
ljmp
fwait
cmpsb
sti
inc
scas
fs
pop
out
mov
mov
mov
dec
jle
loope
jne
pop
lods
jecxz
cltd
lods
mov
sbb
and
icebp
and
ss
mov
jmp
out
ds
jnp
mov
pop
sbb
cli
test
xor
pop
cld
pop
and
ficoms
push
mov
add
in
stos
xor
mov
cld
push
mov
xchg
clc
insl
ljmp
rclb
adc
pop
dec
jle
jo
loope
in
mov
mov
inc
in
mov
sub
push
stos
mov
jb
loop
out
iret
or
mov
pop
icebp
lods
mov
add
jg
outsb
int
add
add
repnz
notb
jge
shr
hlt
xor
inc
jmp
fadds
jmp
push
add
xchg
lret
sbb
add
out
pop
ret
dec
mov
jp
out
xor
add
sbb
call
adc
add
cld
adc
int3
jnp
mulb
out
xor
add
add
adc
add
shll
or
fcmovbe
adc
jmp
inc
dec
test
cld
jne
test
inc
test
call
cmp
mov
out
push
sub
jbe
xchg
leave
sub
push
repz
mov
jmp
cli
fwait
insl
adc
je
pushf
xor
add
int
sti
mov
in
add
adc
add
and
lahf
jecxz
cmp
add
sbb
in
ret
stos
adc
xor
or
mov
incb
xor
pop
stos
adc
push
ljmp
pop
popa
push
loopne
ds
jp
mov
push
aad
data16
add
add
cmpsl
push
and
sub
stos
paddd
jecxz
mov
stos
inc
mov
sbb
mov
adc
sti
sbbl
pop
stos
mov
out
xor
jecxz
fiaddl
adc
ds
test
outsb
in
aas
scas
mov
xchg
outsl
sbb
xor
lcall
ljmp
outsl
out
pop
shl
shll
adc
cltd
pop
push
into
nop
loop
fsubr
flds
mov
clc
aas
lret
inc
sahf
and
inc
jmp
stc
scas
jo
in
popa
inc
in
fidivrs
mov
and
clc
fcompl
scas
cmovns
adc
lea
out
icebp
xor
ljmp
mov
ljmp
ds
push
pop
push
cld
adc
mov
idivb
xor
sti
push
lcall
cld
jbe
mov
add
cld
adc
push
add
add
push
lcall
fadds
lods
out
cld
jbe
xor
push
sbb
adc
or
je
inc
ss
sbb
add
add
fidivrl
push
jne
add
push
pop
lcall
xlat
cld
jne
sbb
adc
jno
push
ret
dec
mov
ret
das
frstor
in
in
mov
stc
mov
push
outsb
shl
scas
roll
scas
addr16
roll
xor
in
mov
push
lahf
lea
add
add
add
call
aad
sub
nop
jo
jbe
dec
push
fnsave
mov
add
xor
enter
cli
fidivrl
loop
outsb
stos
jl
sub
movsl
mov
jmp
scas
or
adc
push
sub
inc
cmp
lock
jle
scas
fsubs
add
add
mov
jnp
sub
das
rcrb
movsb
pop
inc
outsb
cmp
xchg
rcr
nop
sbb
adc
ja
push
push
xchg
xlat
push
push
out
ljmp
sub
movsl
jne
jb
arpl
adc
ljmp
sbb
lcall
jg
or
pop
dec
addr16
add
add
inc
adc
inc
adc
push
fs
cs
lods
sbb
add
push
sbb
push
into
xlat
enter
addr16
pop
stc
decl
popf
fsubrs
jmp
xchg
jp
add
loope
lds
mov
out
sbb
lods
fucomi
ljmp
lods
mov
gs
push
add
pop
in
cld
xlat
mov
in
loopne
shlb
push
adc
mov
push
in
outsb
xor
stos
shrl
mov
sub
scas
adc
in
add
call
cmc
call
daa
add
xlat
mov
mov
daa
add
lock
add
std
cld
rol
adc
jno
clc
sub
stos
xor
add
add
ret
adcl
pusha
out
sti
arpl
add
xchg
or
inc
scas
rcll
dec
dec
hlt
push
ret
call
xchg
sti
ret
sbb
lds
decl
mov
xchg
mov
xchg
mov
sti
and
push
sti
leave
outsl
cs
xor
push
mov
sti
scas
inc
sbb
scas
dec
rcll
out
inc
hlt
sahf
mov
sti
stc
mov
or
ljmp
test
loopne
mov
fcomps
out
movsb
sahf
loope
xor
ss
ret
loop
negl
stos
hlt
mov
sbb
sub
xchg
fstpl
scas
ljmp
xchg
push
sub
es
sub
scas
ljmp
lds
mov
cmpsb
inc
cmpsl
mov
ss
add
ljmp
mov
add
lds
stos
addr16
fs
stc
sub
ljmp
sbb
insb
jmp
lods
ljmp
push
xlat
popf
clc
insl
ljmp
jo
lock
insl
aaa
das
lcall
ficomps
insl
ljmp
cmp
call
cmp
inc
jmp
push
daa
ficomps
adc
call
xor
jmp
or
xchg
repz
cmp
xor
dec
push
or
addl
add
add
add
add
les
ret
out
add
aad
mov
les
push
lock
adc
push
fs
add
addb
dec
and
movsl
add
pop
sub
jb
std
ljmp
hlt
roll
add
jnp
sbbl
xchg
pop
ds
idiv
rcrl
or
jne
pop
inc
adc
cmpsl
push
push
push
mov
adc
add
add
out
shrb
xor
mov
stc
dec
jns
mov
mov
iret
mov
cli
loopne
mov
push
xchg
loope
xor
in
xchg
xchg
dec
inc
and
cmp
adc
test
daa
sbb
mov
cmpb
dec
push
int3
mov
icebp
pop
aaa
mov
sub
xchg
add
add
inc
mov
lods
roll
pop
scas
mov
in
mov
xchg
push
test
icebp
inc
lods
dec
or
ja
test
ja
xchg
xchg
lea
fs
xor
sti
add
cli
dec
pop
mov
add
pop
lcall
add
test
add
or
std
pushf
add
test
jmp
idivb
outsl
add
popa
jmp
scas
pop
loopne
sbb
daa
inc
je
xchg
cmp
ret
stos
test
mov
pop
ja
aad
aas
lea
cmc
and
lret
movsl
mov
jb
popf
in
call
stos
mov
movsl
xor
ret
lods
stc
inc
inc
xchg
cli
and
lods
cmp
cmp
jmp
test
out
lret
cs
stc
out
push
icebp
lcall
in
sub
in
out
xor
push
add
repnz
sahf
jno
push
ficoml
fldl
inc
jecxz
xchg
filds
fdivrl
inc
or
cmp
movlps
add
xchg
jns
or
cmpsb
cmpb
lds
repz
mov
cmp
jl
sbb
cmp
add
incl
jl
icebp
js
in
ficoms
xchg
cmp
mov
scas
or
add
repz
sub
jb
cld
cmp
push
add
test
scas
movsb
mov
sti
shll
add
jns
cmp
inc
mov
clc
jb
mov
fcompl
sti
sti
dec
lock
movsl
sub
pushf
out
arpl
test
fadds
jmp
push
push
rorl
cli
ret
leave
in
xor
pxor
fwait
sti
add
rorl
push
xor
and
jg
test
dec
stos
mov
mov
ljmp
aad
insb
pop
sahf
ljmp
pop
cmpsl
cs
mov
inc
bnd
jno
or
xor
lods
insl
cli
xchg
cmp
ljmp
call
mov
jg
test
cltd
inc
and
xor
add
cmp
rolw
add
scas
ljmp
xor
add
fiaddl
jg
and
xchg
xchg
negb
fcomps
adc
pop
fstps
jmp
mov
add
ljmp
push
mov
jmp
insl
insl
push
jp
rcrb
sub
cmpsb
cmp
sbb
stc
insl
insl
push
bound
add
add
and
popa
ss
pop
mov
jge
outsl
cmc
push
call
fsubr
ljmp
xor
push
mov
test
stos
outsb
mov
mov
adc
dec
roll
rcll
out
jle
jnp
arpl
xchg
jge
incl
push
call
daa
out
loopne
add
push
call
shr
cld
pushl
pop
pop
mov
jno
xor
cltd
js
pop
jno
cmp
add
jns
dec
rcl
out
mov
mov
push
cli
push
mov
out
add
cmp
xor
cmp
jns
scas
cld
adc
lods
xchg
add
call
imul
adc
add
add
mov
clc
lea
push
pusha
push
xor
fs
push
add
hlt
mov
xchg
add
sti
mov
cwtl
sar
jle
xchg
adc
fsubs
or
cmpsb
or
adc
xchg
fadd
shr
out
mov
mov
lds
mov
jp
mov
add
xchg
mov
add
add
adc
xor
sub
xchg
cwtl
xchg
in
pop
ret
cmc
imul
ljmp
add
ljmp
mov
aaa
loopne
mov
test
sub
fsubr
fiadds
stos
lods
or
adc
sub
clc
sub
fwait
insb
xchg
push
pop
add
or
insb
aad
add
add
insl
out
dec
nop
mov
xlat
xor
add
adc
test
cmpsl
cmp
hlt
inc
jmp
cmp
pushf
es
push
cwtl
sahf
cmp
or
sbb
clc
je
repnz
ss
movsl
outsl
loope
and
pusha
mov
sti
inc
jmp
cs
shrb
add
ret
imul
scas
and
jmp
add
add
movsb
jo
adc
jae
insl
push
icebp
test
push
or
cli
clc
filds
test
and
xorl
jbe
or
nop
or
inc
stos
push
fcompl
or
dec
jmp
cmp
jl
mov
push
outsb
adc
jne
rorb
call
add
add
add
call
pop
add
call
sbb
pop
pop
in
pop
mov
mov
in
mov
popf
hlt
pop
add
jnp
and
sub
mov
addr16
pushl
sub
jno
cmp
shl
sahf
hlt
sub
ja
adc
xor
sbb
mov
push
mov
dec
cwtl
push
add
add
mov
cli
sub
shlb
xlat
rclb
jmp
add
xchg
cmp
xchg
std
adc
xchg
shl
test
jbe
decb
xchg
jb
or
jo
or
xchg
aaa
insl
sahf
std
xchg
lea
ret
push
aaa
cmp
out
scas
insl
push
daa
cmp
into
out
mov
adc
push
mov
pop
insl
pop
daa
stc
sahf
adc
cmc
adc
xchg
fwait
fadds
jecxz
sbb
out
inc
pop
jae
adc
sahf
pop
push
and
pop
and
push
sbb
insl
push
in
add
sahf
nop
xchg
jne
insb
mov
sahf
js
add
add
add
add
add
add
aaa
lea
popl
call
mov
dec
bound
data16
cmc
test
add
sub
xor
mov
push
sbb
loope
lods
ljmp
je
std
ret
out
xor
mov
stc
fisubs
push
shrb
cli
xchg
stc
scas
fstl
xor
fs
stos
push
add
fs
loopne
push
push
jp
or
add
adc
sub
enter
leave
lds
outsb
repnz
std
xor
sbb
hlt
mov
insb
std
lcall
outsl
or
data16
add
loope
dec
in
jmp
add
add
jecxz
in
loopne
push
xor
add
lcall
cmp
mov
outsl
std
je
imul
add
push
pop
xor
adcb
cmp
mov
popa
xchg
cmc
lods
sti
mov
loopne
sti
das
cwtl
push
add
push
les
sti
and
adc
mov
mov
mov
jg
lea
pop
mov
sbb
aad
outsb
xchg
test
rcrl
pop
in
daa
addr16
inc
add
sbb
or
js
sbb
push
inc
add
jmp
dec
dec
xchg
sub
fstpl
jmp
lret
inc
scas
adc
outsl
mov
stos
out
add
std
mov
sub
add
ficoms
dec
clc
and
stos
add
cmp
fdiv
jmp
xor
jmp
add
in
std
cwtl
stos
stos
ret
adc
add
sti
es
imul
sbb
xchg
out
out
xchg
jl
scas
ljmp
pushw
add
and
and
jmp
sub
xchg
xor
push
out
xor
repnz
lea
sbb
sub
loope
lret
add
outsl
out
add
cmp
stos
out
ljmp
leave
xchg
add
loop
stc
xor
arpl
or
jb
lea
xchg
stc
push
das
sub
push
das
fiadds
int3
xor
jmp
scas
add
mov
jmp
push
add
add
xchg
add
sbb
or
xchg
jne
add
in
mov
jb
xor
mov
inc
and
inc
cld
sub
aas
in
dec
inc
add
ljmp
sub
call
int3
add
xor
ja
inc
ficoms
fiadds
inc
pcmpgtd
call
jle
fiadds
loope
mov
add
pop
mov
push
jns
cmp
add
cwtl
scas
addl
xor
xor
xchg
mov
adc
addl
add
or
inc
dec
sbb
nop
rcrb
inc
add
or
xchg
rorb
inc
add
cltd
js
push
or
dec
pop
mov
js
inc
sbb
inc
push
mov
and
jo
and
jo
and
jo
and
jo
and
daa
xor
jg
scas
bound
arpl
insb
fldcw
sti
xor
test
into
sti
mov
jmp
cmp
lods
sti
imul
sub
inc
inc
xor
scas
imul
scas
add
jle
loop
rcll
sti
add
popa
cmpsb
lahf
adc
sbb
outsb
stos
je
push
scas
sahf
lahf
ss
xor
sub
ljmp
add
sbb
ljmp
sub
das
icebp
lods
ljmp
jb
lds
add
dec
jae
mov
aaa
outsb
aas
lds
sbb
lods
push
call
out
add
xor
imul
and
jbe
out
and
xchg
xor
out
add
mov
jp
stos
daa
push
pusha
lods
adc
adc
out
push
inc
sub
mov
movsb
xor
add
jmp
or
xchg
sbb
add
xchg
inc
add
dec
add
push
mov
ljmp
xchg
cltd
daa
rcl
push
push
ds
jno
psubusb
clc
lds
stc
ret
ret
push
mov
xchg
sub
add
cmp
flds
sbb
cmp
data16
psubsw
mov
pop
jmp
cmp
add
add
dec
data16
divl
fisubrl
push
mov
inc
pushf
fisubl
mov
pop
mov
aam
fdivr
mov
pop
scas
orl
mov
or
push
xor
out
jne
sti
stos
xor
std
clc
outsb
jnp
add
lahf
std
gs
jl
cmp
add
add
cmp
cmp
aad
sti
aaa
inc
std
or
dec
icebp
xchg
ljmp
and
sti
decb
mov
pop
sbb
enter
out
mov
cli
fimuls
sub
mov
mov
mov
mov
cli
pop
or
sub
mov
loop
mov
add
add
jecxz
jle
bound
mov
loop
mov
mov
cli
pop
or
sub
pop
cmp
or
or
or
cmpsb
jecxz
jle
cld
mov
repnz
lret
jecxz
in
pusha
pusha
xchg
cld
or
testb
loop
sbb
mov
loop
or
push
subl
jmp
lahf
jb
mov
mov
jp
add
out
mov
test
mov
orb
das
jb
outsl
icebp
xchg
imul
jg
mov
sub
insl
nop
inc
add
mov
add
addr16
sub
test
out
add
les
or
clc
adc
add
in
mov
xor
or
js
xchg
loopne
mov
mov
nop
xor
shl
add
mov
ljmp
dec
jmp
add
js
push
loopne
mov
insb
stos
outsl
or
nop
xor
xchg
out
ljmp
ret
add
scas
mov
add
ret
lret
cmp
add
lea
jbe
cmp
pop
cmpsl
mov
xchg
test
add
mov
sbb
dec
add
ret
jne
inc
or
lods
xchg
xchg
ret
incl
mov
mov
mov
sbb
popa
push
and
es
ljmp
add
shrl
std
jb
out
adc
sub
out
jp
cmpsb
add
iret
in
adc
in
movl
into
pop
lahf
sub
jmp
inc
shr
fnstcw
ljmp
add
add
ljmp
pusha
push
loopne
scas
ljmp
cltd
addr16
aas
nop
sub
jmp
adcl
faddl
mov
xchg
pop
push
cmp
push
dec
js
ljmp
insl
jns
sbb
adc
stc
push
xor
lea
mov
daa
mov
out
stos
lods
jmp
adc
lods
xor
loope
add
sub
mov
jl
cmp
dec
inc
iret
add
sub
in
fucomi
mov
inc
cwtl
inc
jmp
fstl
outsb
divl
enter
mov
scas
mov
out
sub
xchg
adc
stos
xor
stos
jns
out
cmpsb
mov
fldt
xchg
cmc
test
outsb
xor
ljmp
pop
rclb
nop
jp
stc
je
add
std
shrb
cmp
mov
pop
adc
xchg
cmc
adc
add
cmc
stc
adc
ljmp
lods
std
fidivl
or
into
mov
xlat
out
lcall
into
mov
cld
cmpsb
sti
mov
cltd
out
add
out
add
add
std
in
addl
testb
in
dec
xchg
das
pop
or
scas
sbb
push
lods
mov
rorl
push
shll
rorb
pop
sbb
iret
lcall
imul
sti
xor
jge
mov
jl
sti
scas
addl
add
addl
jg
pop
iret
jle
ljmp
icebp
xor
clc
rcrb
sbb
nop
stos
jg
jmp
fldcw
push
repz
pop
rcll
xor
mov
push
lods
mov
jl
fisubrs
mov
loope
xor
mov
ret
jle
mov
pop
xchg
xor
out
mov
push
in
and
add
fbstp
and
add
out
lcall
sub
mov
xor
out
jl
outsl
stc
ds
mov
popa
push
aad
bound
test
outsl
jge
lds
test
dec
push
jmp
push
xchg
stc
aam
outsl
icebp
xchg
sub
js,pt
fiaddl
gs
arpl
push
testb
or
flds
add
add
mov
popf
arpl
jb
ret
lret
fcomip
test
mov
sbb
pop
stos
mov
adc
lds
test
loope
cld
divb
dec
mov
mov
xorl
lds
dec
addb
stos
sar
out
pop
std
call
outsl
faddl
cli
push
mov
dec
push
xchg
outsb
push
cs
dec
outsl
jl
ljmp
cli
mov
or
xor
xchg
cmpl
cmc
push
std
mov
push
xor
adc
cld
jne
adc
std
jne
jb
or
jg
mov
into
add
sti
loope
pop
call
sub
pop
and
mov
ja
xor
add
add
das
outsb
call
add
pop
push
vmread
sbb
or
mov
inc
cmpsb
xchg
add
cli
out
sbb
loope
lock
call
and
leave
testl
or
aas
jbe
test
jmp
or
sub
fisttps
lods
out
add
add
add
jae
test
sbbb
scas
sbb
shll
push
repz
jbe
add
xchg
dec
jp
mov
xor
add
or
ret
jmp
mov
xchg
cmc
jno
call
jae
outsl
ret
movsb
std
lock
lret
dec
xorl
jmp
add
fiaddl
push
ljmp
adc
ret
and
ljmp
lods
repnz
fdiv
or
xor
sub
xchg
test
and
cmp
xchg
addb
adc
outsb
fisubs
psrlw
jno
stos
or
jmp
or
add
outsl
or
fimuls
cli
loop
mov
cmp
loope
inc
les
je
jne
or
js
xchg
out
leave
cli
repnz
pop
or
jo
sbbl
xor
add
or
push
inc
das
mov
fdivl
orb
dec
or
orb
lret
je
add
add
cltd
js
pop
lcall
xchg
sub
mov
add
jl
add
nop
add
nop
pop
scas
adc
mov
out
jecxz
mov
aad
and
jo
cli
cltd
pop
inc
je
sbb
mov
mov
jg
mov
jmp
cli
popa
push
stc
incl
add
add
js
ficoml
test
jne
sti
inc
sbb
scas
add
cvtps2pi
imul
xor
jnp
adc
ret
xchg
js
jp
xchg
and
les
adc
scas
or
in
nop
repz
add
fcoms
xor
ljmp
movsl
test
and
imul
add
scas
outsl
fldt
mov
adc
mov
cmpsb
jmp
imul
stos
lock
stos
sub
jle
ljmp
outsl
mov
sahf
aad
push
ja
mov
ljmp
jmp
cmp
xor
jge
mov
add
aaa
cmp
add
add
add
inc
stos
add
lods
imul
sub
add
out
outsb
fdivs
ljmp
outsb
lock
or
jmp
lods
ds
jle
test
jne
shl
stc
xchg
inc
jecxz
jmp
xor
lea
mov
ljmp
mov
insl
stc
aad
imul
imul
cmpl
pop
imul
adc
ret
outsb
inc
inc
daa
rclb
inc
sub
sub
xchg
pxor
test
mov
adc
inc
sbb
rcll
jp
inc
xchg
or
daa
outsl
sbb
ljmp
inc
jnp
xorb
jg
mov
jmp
outsb
push
orl
add
sub
sub
mov
dec
push
shl
and
testb
adc
cmp
add
mov
mov
add
hlt
mov
outsl
add
out
sub
loopne
and
mov
xor
in
xchg
outsb
adc
xchg
ljmp
std
cli
fwait
lahf
adc
mov
add
or
scas
pop
lods
iret
std
ss
lret
nop
add
sti
inc
cmovne
cmpsb
or
xor
sub
aad
adcb
sar
insl
ljmp
jno
mov
push
push
in
cmpsb
add
out
shl
cmc
push
sbb
xchg
call
mov
xchg
fiaddl
addl
add
mov
mov
out
xchg
or
in
push
add
testl
aam
out
adc
or
lret
add
adc
push
xor
into
in
cs
mov
xor
jl
into
ja
sub
jmp
xlat
mov
lods
lods
or
leave
test
add
into
clc
dec
mov
repnz
in
add
push
inc
movsl
xor
es
cs
jg
cld
inc
lock
jmp
xchg
push
addl
js
push
jb
out
fisubrs
jmp
insl
in
repz
stos
ljmp
stos
ljmp
lods
adc
jno
clc
hlt
mov
xchg
js
mov
cmp
add
in
orl
cld
add
jmp
cmpsl
stc
mov
sbb
add
out
jmp
fs
nop
cmp
je
push
and
push
movsl
add
cld
cld
lea
adc
pop
push
out
jmp
cs
out
rcr
xor
std
adc
xchg
inc
inc
std
cmp
mov
scas
push
mov
es
add
sti
and
stc
and
inc
into
out
xchg
jb
xor
mov
cmpsb
stos
insl
xchg
jb
out
inc
sub
scas
xchg
add
pop
movsl
push
loope
jb
in
dec
mov
stc
adc
xchg
add
push
xlat
incl
mov
lret
mov
add
add
out
mov
scas
xchg
aad
cmp
add
movsb
cli
pop
popa
xchg
add
xchg
add
jle
clc
scas
ljmp
ret
js
sub
pop
mov
mov
xor
add
insl
fisubrl
int
mov
jo
jge
adc
sub
rolb
test
add
aaa
fnstenv
div
fadds
add
add
out
sti
popf
sub
jl
jb
sti
xchg
js
jo
addr16
lods
outsl
sub
jmp
add
jl
xchg
jmp
add
jl
imull
in
outsb
lods
cmc
cs
jnp
fdivl
mov
lea
shr
insl
loopne
xchg
add
mov
std
xchg
stos
add
sbb
ljmp
xchg
orl
add
add
jp
int3
in
stc
mov
icebp
jnp
ss
adc
lods
adc
jbe
jnp
das
jg,pt
mov
sbb
stc
fcoml
jae
out
js
pop
ret
stc
pop
addb
xor
and
les
push
out
mov
dec
push
int3
addb
sbb
aad
xchg
out
inc
sbb
add
mov
jge
and
and
pushf
adc
fistl
aam
sbb
dec
adc
les
adc
xor
and
test
add
insl
cmp
std
shl
cmpl
pop
jbe
push
pop
xchg
adc
je
out
pop
roll
cwtl
je
stc
test
test
std
out
fdivrl
xchg
jl
xor
inc
enter
idiv
fimull
jg
test
push
xchg
scas
push
fisttpll
ljmp
inc
scas
aam
inc
sub
mov
sar
inc
inc
push
jge
data16
or
ret
leave
sahf
jge
outsb
addl
adc
adc
add
js
shll
aam
sti
aaa
ljmp
movsb
gs
mov
imulb
das
mov
pop
xor
cmpsl
js
jle
out
mov
les
mov
jg
adc
mov
divb
les
adc
idiv
sub
fstps
inc
mov
arpl
lds
xor
loop
rcl
mov
insb
mov
test
js
out
jb
lods
arpl
scas
test
lea
jno
mov
xor
in
or
pop
stos
inc
out
stos
scas
insb
loop
jns
adc
lock
add
xchg
ss
std
or
xor
add
jae
adcb
jb
jnp
lods
test
sub
fistpll
fcompl
aaa
outsb
repnz
adc
mov
sbb
cs
jae
sbb
xchg
test
add
dec
push
cmp
insb
fs
stc
test
jns
push
cltd
popa
jmp
and
push
call
adc
call
cwtl
aad
call
jp
call
mov
mov
add
cltd
xor
shll
lock
inc
cwtl
add
add
inc
add
outsl
and
cmp
jp
cmp
jl
cmp
js
cmp
xchg
cmp
xchg
add
pop
ffreep
lret
adc
lcall
add
sti
mov
es
imul
add
jo
cmp
aas
repnz
nop
or
mov
imul
scas
xorl
stc
add
test
scas
addl
add
or
adc
ljmp
sbb
jge
xorl
sub
sub
incl
add
add
in
push
scas
ljmp
adc
stos
enter
push
sub
lods
es
sbbl
add
add
xchg
out
ljmp
outsb
loope
repz
pop
sbb
ljmp
cmp
imul
sti
xlat
push
mov
add
add
addr16
or
je
inc
arpl
inc
mov
mov
adc
ja
outsl
mov
pop
inc
jmp
adc
inc
imul
mov
jge
mov
jne
mov
pop
xchg
imul
les
and
scas
add
push
xchg
lahf
pop
adc
sbb
insl
aas
mov
sub
out
sbb
je
mov
xchg
and
clc
sub
imul
arpl
out
das
mov
lea
stos
add
sub
jmp
icebp
icebp
push
mov
sub
into
xor
add
rcll
mov
jp
xchg
mov
jmp
addr16
xor
jo
stc
mov
add
add
outsb
sbb
push
inc
jae
addr16
cmp
addr16
call
xorl
adc
ja
sub
lret
xchg
or
flds
sub
lret
arpl
cs
and
fdivrp
shrb
or
das
lods
add
les
or
dec
lds
and
add
sub
pusha
sti
xchg
dec
rol
mov
xchg
cmpsl
std
data16
test
push
loop
pop
mov
pop
pop
push
and
stos
sub
cmp
ret
xor
mov
jp
pop
jg
nop
cmpb
out
or
sti
fwait
push
adc
scas
or
adcb
js
loop
mov
sbb
add
lcall
add
xchg
cwtl
jp
jb
cmp
sub
pop
jnp
adc
mov
mov
jmp
insl
adc
pop
fucomi
fisubrs
adc
out
ljmp
out
push
sbb
into
mov
jmp
outsb
not
js
outsb
imul
mov
jg
ljmp
hlt
sti
dec
xor
add
add
adc
leave
imulb
jbe
scas
div
jb
jns
lods
mov
icebp
pusha
pushf
mov
pop
rcl
mov
xchg
xchg
jne
inc
in
xor
jecxz
in
sub
in
and
stc
jmp
jns,pn
jp
arpl
or
iret
push
jno
lea
out
adc
sbb
insl
cmc
xor
adc
data16
and
out
jb
ja
xchg
test
push
push
ret
add
sbb
clc
cli
xchg
stos
clc
add
jne
or
out
or
xchg
cld
add
jmp
add
fisttps
dec
into
add
cmp
call
xor
push
rclb
inc
xchg
pusha
outsl
or
mov
add
dec
filds
jae
aaa
add
and
push
xor
adc
aam
push
mov
loope
jge
add
fimull
sbbl
pop
jae
add
incb
jne
xchg
xchg
dec
scas
cmp
jb
add
add
fimull
shll
movd
sub
dec
fs
add
add
outsb
or
mov
orl
inc
mov
js
push
xor
mov
cli
xor
inc
push
arpl
or
sti
xor
dec
mov
bound
or
mov
mov
arpl
pop
shll
pop
sbb
std
or
in
jb
fldenv
adc
pusha
jmp
scas
popa
push
andl
ja
sub
xchg
mov
punpckldq
sub
not
mov
outsb
je
xor
rolb
mov
sbb
shll
push
mov
push
fidivrs
push
fcompl
in
inc
fiadds
stc
push
jno
pop
daa
jo
popf
addr16
leave
mov
or
sbb
insl
jbe
and
or
jge
lock
jne
pop
and
add
push
cmp
out
add
sahf
dec
jno
xchg
and
push
stc
lods
adc
push
bound
pop
stc
jl
outsl
sar
arpl
mov
rcrl
jg
orb
add
cmc
or
push
push
adc
add
mov
aas
cld
mov
outsb
inc
aas
fs
cmp
test
xor
sub
sbb
js
cmp
loop
cld
adc
js
add
jns
push
sbb
fidivl
add
pop
add
xchg
jmp
leave
enter
mov
add
add
push
std
decl
push
leave
push
or
sub
out
add
repnz
scas
cmp
imulb
sti
jl
scas
xorl
insb
icebp
inc
pop
test
jnp
jg
addl
je
add
jb
test
mov
mov
add
out
add
add
out
cmp
pop
cmpsb
push
mov
sti
mov
sti
test
adc
cltd
push
add
add
das
jmp
xchg
popf
xchg
add
je
ljmp
push
jmp
mov
les
adc
imul
imul
pop
sub
push
pop
scas
mov
mov
imul
pusha
xor
jo
push
lret
mov
jne
mov
dec
or
imul
add
scas
andl
xor
addr16
stc
mov
dec
fwait
pop
fwait
cli
add
insl
imul
jmp
add
leave
std
arpl
insb
in
rcrb
bswap
pop
sub
cmpsb
sar
adc
stos
outsb
int
rolb
add
ljmp
test
fdivr
adc
lods
lcall
mov
dec
bound
push
push
pusha
add
mov
inc
xchg
ss
and
insl
push
push
fs
push
subl
roll
movl
rcr
jns
inc
cmp
dec
jle
inc
aas
pushf
cld
jne
pushf
pop
add
add
cmp
jne
popf
loope
out
cld
xor
movsl
add
mov
add
mov
push
xor
xchg
push
ret
cmp
ret
insl
sub
lds
lret
shll
jo
xor
mov
cld
adc
jmp
add
scas
outsb
add
scas
push
call
scas
test
jne
clc
pop
pop
inc
push
insb
pop
add
cli
mov
and
push
dec
pop
test
or
mov
adc
aas
scas
into
inc
je
fs
inc
in
dec
add
in
ret
cs
mov
mov
lea
js
call
scas
push
cmc
push
jge
inc
push
rcrl
adc
xchg
sti
inc
jne
test
ret
call
not
ljmp
scas
notb
lcall
sarb
pop
gs
mov
pop
add
jae
or
sub
xor
jae
testb
and
add
add
push
or
add
out
leave
ljmp
push
gs
or
jmp
lock
pop
xlat
adc
decl
testb
out
ret
mov
cmp
sub
mov
mov
xbegin
cs
pusha
add
insl
xor
pop
outsb
loope
fucomip
roll
add
add
pusha
stc
fsubp
push
sbb
aas
test
mov
out
add
push
cmpl
mov
ud1
and
push
popa
outsb
add
cmp
ljmp
mov
stc
gs
fistps
shr
jmp
cmp
idiv
call
call
cld
call
push
enter
add
mov
call
pop
mov
les
imul
incl
pop
inc
inc
imul
dec
push
add
pop
lahf
push
incl
adcb
pop
jae
in
mov
call
or
cmp
push
aas
mov
jne
ds
ljmp
scas
popa
sbb
scas
mov
jae
xchg
add
cli
mov
dec
adc
lock
mov
shrb
scas
push
add
xor
xor
push
call
sub
add
add
push
add
fcomp
or
es
sti
mov
mov
jae
mov
push
add
scas
push
insb
addr16
pop
push
call
and
jmp
ljmp
in
ljmp
outsl
pop
imul
add
jne
mov
lds
adc
xchg
push
jmp
or
push
ljmp
bound
ret
iret
mov
arpl
movsl
mov
add
xor
rorb
mov
xor
mov
mov
insb
jg
scas
ljmp
xor
add
pop
xchg
mov
stc
pop
cli
outsl
in
cmpsl
cmc
imul
and
insb
repnz
adc
gs
mov
add
xchg
push
pop
lods
dec
out
cs
pop
push
add
je
enter
mov
xchg
mov
jmp
inc
lods
outsl
jg
andl
sub
sbb
das
lahf
pop
sahf
pop
adc
enter
lret
xor
push
mov
std
out
pop
cld
fucomp
xchg
mull
lock
inc
push
lock
adc
jge
xchg
fwait
loope
popa
mov
negb
add
aas
jnp
in
add
mov
in
les
pop
stc
incl
aas
adc
imul
ja
aas
fdivl
ds
mov
push
pop
sbb
inc
push
aas
fadd
mov
push
icebp
jo
leave
xor
ds
in
inc
add
in
mov
xchg
js
cmpsb
mov
push
sti
fstpl
adc
mov
ds
jne
xlat
add
xchg
xor
stc
push
fnstsw
mov
mov
push
or
cmp
dec
dec
mov
nop
xor
xor
inc
or
dec
ljmp
sub
inc
lods
or
sbb
faddl
inc
hlt
inc
xchg
ljmp
scas
ljmp
jae
aad
xor
cmpsb
xor
data16
ljmp
inc
in
inc
aaa
scas
ljmp
jne
add
loope
fiadds
fs
pop
inc
ret
or
add
add
add
fwait
ljmp
in
gs
scas
ljmp
mov
push
mov
sub
insl
mov
add
lock
stc
jmp
out
stc
jmp
sbb
add
sbb
or
ljmp
cmc
lock
lods
ljmp
popf
outsb
jg
popa
stc
cltd
in
add
add
fbld
out
xor
and
stos
cmpsb
add
xchg
jae
adc
ljmp
mov
imul
outsl
push
into
jle
test
push
popa
ljmp
pop
dec
push
fdivrl
test
cmpsb
fcompl
mov
incl
xlat
call
jge
call
repz
cmpsl
fnstsw
dec
mov
add
pop
lcall
ret
movb
xchg
jmp
inc
loope
xchg
add
ljmp
test
loope
enter
push
pop
call
ret
inc
push
in
cltd
push
call
ds
adc
incb
je
fdivrs
repz
sub
jae
or
jnp
dec
adc
aam
dec
jo
fmul
pop
ds
xlat
test
fildl
lock
lds
loopne
out
fcmovbe
aaa
mov
mov
inc
pop
lret
and
inc
addb
pop
in
push
cld
dec
test
mov
ret
cli
fwait
add
das
mov
stc
or
ret
inc
aas
inc
cmp
jmp
lods
iret
jno
flds
add
add
sub
mov
push
pusha
ljmp
inc
add
movsl
stos
mov
mov
dec
cmc
gs
fdivrs
sbb
dec
aad
stos
scas
ja
mov
enter
mov
ljmp
xor
leave
jl
in
out
jmp
mov
add
out
ljmp
popa
loopne
pop
lock
arpl
lods
sbb
mov
cmp
push
push
jnp,pt
icebp
hlt
in
pop
jle
sbb
in
ljmp
push
push
stc
cmpsb
inc
mov
inc
jmp
xor
add
rcr
mov
bound
bound
jb
stc
fdivrl
push
stc
pusha
sbb
stc
dec
repz
adc
jmp
stc
push
lock
ss
push
or
out
add
push
pop
stc
call
mov
in
cld
adc
int3
cmpsb
xor
mov
in
ljmp
into
xorb
cld
jne
sahf
loope
in
movsl
cld
cmpl
or
add
add
jl
loope
ret
adcl
pushl
cmpsb
mov
aam
faddl
add
add
in
pop
popa
sti
call
add
shrl
mov
dec
sti
push
mov
add
fnstcw
shll
decl
lods
insl
sbb
cld
ljmp
jg
cli
ret
dec
out
aas
scas
into
inc
or
lar
scas
dec
iret
out
icebp
stc
xor
inc
inc
push
ret
scas
sub
aad
xor
incb
add
add
inc
jp
icebp
jp
lret
sti
pop
adc
cli
jmp
push
sti
ret
insl
repz
scas
fmull
inc
jne
out
mov
jne
mov
dec
jg
lods
inc
add
sti
cltd
mov
cmp
cmp
sbbb
bound
call
adc
insl
fisttpl
push
adc
iret
imul
ret
repz
add
xor
dec
xor
push
fmuls
cmc
hlt
dec
and
paddsw
scas
push
push
scas
out
call
mov
out
sbbb
xchg
xchg
push
push
push
sub
dec
aad
sbb
jle
dec
lds
pusha
loope
xchg
outsl
dec
movsl
push
clc
shlb
push
inc
jl
jae
dec
test
lods
frstor
inc
push
add
lods
addr16
hlt
push
stc
mov
pop
push
add
aas
stos
add
mov
dec
out
pop
add
lods
mov
or
add
sub
ficoms
int3
adc
or
jg
ja
stc
inc
add
in
cmp
push
stc
cmp
icebp
in
lods
ljmp
call
ljmp
mov
jne
lods
ljmp
stos
pop
or
sbb
add
xchg
cltd
xchg
cwtl
xchg
ss
sbb
mov
cmc
ljmp
inc
lea
sbb
ds
fcmovbe
cld
dec
mov
adc
aam
setb
add
pop
inc
xor
ds
cld
stos
insl
adc
jp
mov
add
add
sub
incb
add
call
call
push
mov
mov
jle
scas
mov
mov
jle
out
sti
xorl
jl
sahf
hlt
dec
sti
popa
ja
sti
ret
xor
sbb
pop
cli
mov
inc
add
popa
daa
sbb
sub
add
xor
or
ret
out
incl
inc
pop
add
test
xchg
ror
fldpi
jbe
subb
aad
scas
inc
add
sti
mov
aam
push
out
xlat
mov
insl
testl
xor
inc
stc
xlat
js
sbb
daa
push
ss
push
popa
sahf
push
rcll
imull
pop
sub
sbb
xor
test
es
mov
ja
ficoml
inc
lods
mov
xchg
push
cs
and
inc
in
cmp
ds
jns
repz
inc
js
int
add
mov
jbe
push
ljmp
mov
cmc
mov
ret
addl
lods
imul
out
es
call
mov
add
mov
clc
jl
push
paddsw
add
outsl
aad
out
xor
jae
cmp
xlat
insl
cli
int3
mov
test
es
imul
pop
sub
mov
dec
add
lods
ret
imul
aam
ljmp
fadds
jmp
push
fcoml
fadds
push
repnz
add
inc
xor
mov
stc
cld
inc
popf
xchg
push
call
shlb
repnz
pushl
xchg
push
mov
inc
cmp
cld
ljmp
dec
push
push
mov
cld
incl
add
add
ret
add
cmpsb
orb
xchg
inc
cmpsb
cld
mov
aas
aas
sti
leave
repz
xor
call
dec
mov
std
adc
inc
js
mov
sti
sti
cltd
mov
in
mov
cmp
repnz
lods
add
bound
sti
and
inc
add
add
add
scas
xchg
inc
bound
add
jne
mov
aad
out
inc
sti
adc
fmull
test
inc
sti
and
ljmp
scas
ljmp
pop
inc
jnp
lds
cmp
dec
ljmp
pop
cmpsb
push
incb
pop
xchg
dec
fs
or
push
pusha
addr16
cmp
fldl
outsb
fs
je
subl
inc
fnclex
add
dec
add
ret
jecxz
mov
push
out
inc
and
mov
inc
mov
and
add
add
movsl
cld
jmp
xchg
popa
rcrb
outsl
push
outsl
out
movsl
lock
nop
sbb
xchg
data16
jbe
aad
sbb
add
add
out
pop
in
int
call
mov
jmp
push
lahf
int
ss
mov
ljmp
stc
push
in
xlat
flds
xor
push
xor
jle
jb
stc
imul
cmp
outsl
push
outsl
leave
outsl
xlat
lock
outsl
push
outsl
add
add
cmp
jmp
mov
inc
js
lret
stos
insl
cmp
es
push
dec
and
or
add
cmc
dec
push
inc
jmp
js
call
sbb
inc
xchg
in
mov
add
inc
mov
add
xchg
orb
mov
pop
aas
hlt
inc
stos
outsb
or
cmc
add
pusha
iret
ljmp
adcl
out
xlat
inc
leave
in
xor
in
cmpsb
inc
add
pop
adcb
stos
mov
stc
std
mov
inc
das
shl
add
sub
aam
lods
add
inc
out
mov
scas
shll
jne
cmpsl
add
xchg
push
push
jne
sti
pop
movb
add
inc
jmp
test
mov
sti
scas
fcoms
inc
xor
mov
scas
ljmp
test
sub
or
sub
inc
jae
and
add
ljmp
fdivrs
scas
aas
lds
mov
es
movsb
dec
push
lds
dec
pop
add
ljmp
xchg
rolb
test
xor
pop
cmp
fcompl
push
fs
sub
ss
aas
ret
out
ret
push
sub
fnstcw
mov
or
scas
or
out
cmp
push
cmp
sti
and
sbb
lret
shl
pop
aas
into
fldl
fidivl
dec
paddusw
shrb
pop
scas
notb
fiadds
add
add
add
jmp
out
insb
jmp
mov
imulb
jne
mov
mov
insl
add
mov
pop
inc
mov
mov
adc
stc
push
xor
mov
sbb
pop
dec
sbb
std
mov
insb
std
add
xchg
push
xchg
push
loope
sbb
std
mov
mov
call
inc
pop
std
jne
jb
or
xor
pop
cs
loope
pop
or
mov
cli
sbbb
lret
xchg
dec
push
push
adc
cmp
jg
outsl
loopne
cmp
outsl
loopne
sahf
sar
nop
imul
inc
jno
ljmp
push
mov
jo
cmp
and
cmp
pop
dec
mov
jae
lahf
mov
mov
into
mov
aaa
push
pop
call
and
dec
xorl
sub
cli
shll
jmp
std
iret
dec
loop
sti
mov
cmp
out
data16
xchg
sub
shr
mov
shl
test
test
push
mov
jg,pn
push
ficompl
pop
mov
aad
rclb
or
or
sub
sarb
arpl
sub
add
jne
add
jae
pop
push
xorb
xlat
ss
lea
adc
jae
lock
inc
jne
lods
ljmp
xor
jmp
adc
add
add
je
cltd
imul
mov
sbb
shlb
je
repnz
test
xchg
xor
add
lods
jo
pop
cmp
call
lock
add
das
inc
outsb
enter
sti
or
std
scas
outsl
push
add
ljmp
cmp
pop
lret
sub
mov
ret
loope
add
add
lods
or
testb
ljmp
jg
int3
push
xor
out
scas
clc
jmp
xor
add
cmc
movsb
inc
inc
add
aas
loopne
xchg
out
add
jnp
psllw
icebp
mov
bound
or
adc
jns
adc
call
out
adc
repnz
add
add
outsl
lds
xchg
jge
add
repnz
in
outsl
fmuls
push
or
add
pop
pop
bound
gs
jae
mov
or
inc
xchg
clc
mov
outsb
ja
xchg
xchg
and
scas
gs
bound
jecxz
mov
push
or
enter
ror
int
enter
sub
lret
adc
pop
scas
mov
jle
push
jle
stos
push
or
imul
enter
and
enter
pop
mov
inc
dec
or
add
neg
cmp
jnp
ss
add
and
test
add
out
sbb
xlat
jno
jno
mov
stos
ljmp
mov
outsb
ret
outsb
inc
inc
xor
dec
andl
ja
insb
inc
xor
cwtl
inc
fbstp
jo
es
scas
rorl
lock
mov
jne
cmp
sub
cmp
dec
filds
call
add
es
mov
dec
lods
jne
jo
add
and
in
arpl
cmc
outsw
aaa
mov
xor
jb
lret
int
sti
fdiv
das
mov
ds
mov
aas
loope
pushf
lret
ljmp
mov
sti
call
mov
rep
hlt
aas
mov
sbb
inc
xor
aaa
pop
stos
add
push
into
inc
pop
or
mov
inc
test
sub
aaa
mov
sahf
mov
cmp
in
popf
mov
inc
pop
dec
xor
push
mov
stc
mov
pusha
mov
cld
std
scas
add
daa
inc
data16
mov
neg
std
cmp
rolb
int3
and
mov
jg
push
mov
dec
mov
jae
add
add
add
jbe
add
rolb
pop
xor
call
orb
pop
pop
dec
lods
or
jg
add
xlat
imulb
iret
push
add
testl
orb
mov
scas
push
lods
std
scas
push
add
cli
sbb
add
ret
jmp
inc
scas
aam
or
dec
add
add
dec
int3
je
lret
aaa
arpl
add
aam
add
lods
aam
push
adc
mov
sub
mov
aam
mov
mov
sub
sbb
sub
adc
or
hlt
inc
mov
xor
das
xor
icebp
sub
jg
dec
movl
in
lds
jne
ljmp
jmp
ror
fdivs
mov
mov
sub
add
add
sbb
sub
popa
test
sub
shr
int
jae
sub
inc
xor
inc
mov
mov
jae
mov
outsl
aaa
inc
inc
adc
mov
sbb
inc
add
and
scas
ljmp
repnz
lret
jae
jp
xor
jecxz
and
xchg
mov
add
add
jnp
inc
jmp
cmp
test
aas
dec
xchg
sub
clc
xchg
xor
mov
mov
fldl
insb
ljmp
insb
ret
mov
jo
roll
jmp
cli
in
mov
dec
bound
ljmp
fwait
aas
jne
cmp
sub
repz
fsubl
or
add
add
inc
jb
subb
mov
out
add
pop
in
sti
cld
mov
sbb
and
mov
add
mov
inc
dec
je
jg
adc
addb
sbb
call
fdivrl
pop
add
out
add
mov
mov
cwtl
clc
loopne
cwtl
jns
mov
add
add
cld
jmp
sbb
adc
cmc
cli
sbb
add
sbb
add
mov
add
jne
shrb
pusha
add
loope
and
sti
pop
out
add
icebp
mov
xor
sub
std
ss
jbe
test
inc
inc
xor
mov
push
js
stos
xorl
jb
adc
aaa
lea
mov
cmp
insl
pop
fiaddl
sbbb
lock
xor
rcll
adc
xchg
add
ljmp
xor
sub
ljmp
push
sub
aad
jno
jle
out
sbb
push
out
mov
notl
fsubs
test
xchg
mov
fdivs
movsl
fidivrs
mov
popf
xchg
cmp
adcb
movsl
fidivs
gs
out
adc
ljmp
scas
dec
call
lcall
test
in
xchg
arpl
dec
in
test
out
fbstp
mov
int
inc
psllw
mov
push
cmp
add
add
outsb
inc
stos
mov
aas
lgs
pop
loope
data16
lods
ljmp
mov
add
outsb
jno
cs
xchg
lods
ljmp
test
insl
repnz
mov
mov
mov
lcall
mov
push
dec
outsb
stc
push
sahf
or
mov
inc
inc
push
addl
add
sarb
verr
inc
add
loop
adc
push
push
adc
sub
out
ljmp
mov
fiadds
dec
in
dec
adc
or
jmp
cs
mov
or
adc
stc
adc
out
pop
mov
ret
push
push
cld
adc
out
dec
push
add
add
lock
cld
inc
pop
and
adc
inc
or
inc
imul
cmp
sub
sub
pop
lds
mov
or
mov
lods
or
arpl
lds
xlat
insl
add
idiv
pusha
adcb
dec
into
cli
mov
mov
leave
push
pop
test
xchg
add
add
add
jo
push
mov
xor
stos
aas
scas
aam
dec
xor
mov
cmpsb
inc
mov
xor
add
mov
inc
jg
ljmp
cmp
fisttpl
fists
outsb
ljmp
lods
push
inc
jbe
and
in
pop
ss
adc
mov
fistpl
mov
fucomip
sub
in
sub
xor
fsubrp
mov
out
ja
in
jp
xchg
daa
inc
cmpsb
ljmp
xchg
push
ljmp
mov
call
add
adc
jecxz
enter
cmpsl
call
aad
add
sub
cmp
imul
or
pop
pop
xor
mulps
add
add
mov
insb
push
or
insb
mov
bnd
insl
int3
mov
cld
ss
ja
imul
push
insb
jecxz
add
xchg
pop
stos
xchg
aaa
jle
ds
jns
stc
sbb
aad
stos
dec
fcompl
push
add
addl
test
and
pushf
stos
pop
jmp
ret
push
add
imul
in
jle
xor
es
mov
leave
addl
or
pushl
cmp
ret
add
jp
mov
push
stc
insl
or
jl
mov
sub
js
xchg
mov
test
add
add
add
mov
inc
shll
cmp
sub
inc
insl
push
scas
dec
test
jno
leave
ja
inc
call
add
adc
jb
stc
je
sub
addb
stos
jno
mov
pushl
lock
shll
popf
sub
imul
sub
cmp
dec
je
mov
add
xor
add
xor
ds
add
stos
cmpsl
ljmp
enter
ljmp
add
ljmp
inc
ljmp
xor
in
popa
sahf
not
xor
lcall
jle
mov
imul
stos
mov
cld
mov
xor
add
add
push
add
push
inc
dec
arpl
jl
loop
inc
cmp
popa
or
scas
cmpsb
leave
pop
and
pop
ljmp
scas
lods
imull
scas
test
sub
sub
sub
stc
xor
imul
movsb
jae
cltd
jle
add
xor
test
insb
adc
ljmp
sub
xor
stc
xor
aas
adc
aam
dec
bound
dec
repz
das
jg
inc
cli
jle
inc
out
mov
sbb
loope,pt
fcomps
lods
mov
lret
roll
imul
mov
jns
movsl
das
stc
add
and
in
xchg
and
inc
add
repnz
fisubrs
add
jecxz
std
incl
add
add
scas
jns
ret
lea
das
loope
orl
cs
jns
cmp
outsb
xor
incb
sub
xchg
aam
lea
iret
sbb
mov
xchg
push
addb
aam
xor
scas
lock
or
outsb
add
shrl
ret
adcb
inc
scas
pop
adc
or
add
add
insb
and
jns
jl
lret
inc
xchg
xor
cli
stc
xchg
out
lahf
pop
sti
insl
dec
jl
fists
jge
inc
mov
negb
add
fnsave
out
ficompl
sti
and
inc
insl
push
scas
dec
test
pop
les
cli
scas
icebp
test
push
sbb
sti
push
faddl
mov
inc
ret
add
imul
mov
aad
cmp
inc
mov
lahf
and
xchg
mov
js
fiaddl
sub
and
jo
jle
imul
scas
mov
and
lods
xor
insb
nop
mov
gs
inc
data16
inc
je
mov
sahf
sub
loop
inc
adc
js
fwait
cltd
addb
add
jnp
ljmp
push
lods
sub
shlb
mov
imul
adc
add
cmp
cmpsl
push
jo
call
dec
call
stc
push
push
jecxz
jle
xor
xor
stc
push
int3
in
pop
fldcw
outsb
sbb
loopne
mov
mov
ljmp
add
add
add
add
imul
xchg
mov
ja
lods
mov
push
pop
cmp
push
add
pop
and
add
pop
xor
imul
addr16
loope
ljmp
xchg
inc
or
push
and
adc
and
cmp
out
xchg
jmp
push
cld
sub
push
nop
jle
nop
xchg
out
rol
lock
clc
jbe
icebp
out
cmc
clc
clc
popa
ret
jge
push
fidivs
add
jg
fimull
std
push
lcall
call
adc
pop
aas
or
add
lea
idiv
enter
ljmp
scas
inc
add
mov
pop
and
mov
mov
incb
rolb
add
sbb
clc
scas
pop
pop
add
pop
and
sahf
xor
test
dec
pushl
mov
push
inc
cmp
ljmp
enter
mov
lods
cmp
and
hlt
mov
xor
mov
mov
and
pop
jo
test
and
pop
fucomi
lock
shlb
incb
add
add
push
cmp
lds
das
iret
xor
test
sbb
jae
xor
das
cmp
and
fisubrs
jns
cmp
or
movsb
loop
fimull
outsb
xchg
pop
and
inc
imul
fnstenv
xor
gs
das
xor
js
daa
mov
sub
pop
jo
add
add
sub
loop
es
stc
sub
sub
add
mov
in
loop
and
test
mov
rorb
gs
mov
insl
ljmp
clc
cld
in
flds
push
xor
flds
push
and
insb
call
dec
movsb
or
cmc
sub
adc
insl
fadds
jmp
lods
xchg
xor
push
mov
loope
call
mov
loope
insl
int
mov
rorb
outsl
add
adc
ljmp
or
inc
vpmovsxwd
jle
pop
jecxz
and
or
dec
or
je
adc
or
or
incl
add
add
in
mov
std
dec
pop
out
jecxz
add
inc
js
push
ret
std
loopne
jmp
cli
fiaddl
or
int3
mov
loopne
mov
sub
scas
lret
lds
or
mov
push
xor
cmp
lea
out
sbb
rcrl
xlat
test
fdivrl
sub
push
push
pop
mov
sbb
add
adc
aam
xchg
sub
or
mov
add
test
lcall
add
iret
push
push
sub
aas
scas
xchg
mov
push
mov
cli
cmp
fidivrl
mov
pop
push
and
sbb
xor
ret
stc
xchg
lock
jnp
mov
sbb
jae
ljmp
sbb
add
sub
mov
fsubrl
add
cmpsl
xchg
mov
lahf
xchg
repz
stos
popf
lds
sub
and
insb
dec
mov
outsb
dec
add
ljmp
inc
sub
xor
sbb
ljmp
xor
add
sub
jmp
inc
test
add
lods
sub
sbb
call
mul
cmp
stc
hlt
dec
clc
inc
jmp
add
lds
cmc
shrl
adc
hlt
push
je
and
ss
popf
stc
aas
mov
sub
sbb
mov
hlt
rcrl
pop
xor
test
cmp
inc
jmp
repnz
aad
push
std
jne
shl
add
in
add
test
add
pop
xor
add
arpl
ret
dec
mov
insl
out
iret
jmp
push
sbbl
jg
sbb
pop
jno
inc
dec
add
call
fs
pop
adc
xor
inc
call
pop
cld
adc
mov
lods
scas
aaa
pop
cmp
lcall
mov
stos
jle
mov
test
int3
sbb
pop
jmp
add
cmp
das
out
jbe
test
sbb
sti
and
mov
fwait
dec
lock
scas
mov
mov
sbb
mov
sub
leave
cltd
push
jle
cli
loope
inc
push
adc
mov
xlat
inc
insl
sbb
pop
xchg
sbb
mov
xchg
add
ljmp
fidivs
jg
es
mov
mov
sbb
jmp
iret
sbb
and
cmp
sbb
es
ret
icebp
push
sahf
adc
lock
add
cs
ja
movsb
mov
jo
sbb
xor
sbb
and
jg
cmc
push
scas
ljmp
adc
add
push
jmp
add
ja
andb
jbe
jbe
jno
xchg
shll
outsb
ret
add
add
addb
lods
ja
push
cli
jne
dec
add
jge
and
insl
jb
bound
or
xchg
movsb
jbe
mov
push
fwait
movsl
imul
lods
dec
add
jne
jmp
sub
test
add
cmpsb
insl
cli
cmpsb
sahf
xor
push
inc
lcall
psubw
pop
in
loop
mov
jmp
loop
popf
push
aas
aas
ja
jne
pop
stc
add
out
loopne
aas
or
aaa
mov
mov
std
adc
les
dec
out
or
movsb
jge
loopne
push
call
test
sub
xchg
iret
mov
mov
cli
cld
incl
outsl
lock
lds
pop
call
idiv
sar
loopne
js
loope
loopne
push
sub
call
pusha
jns
jp
adc
jmp
xchg
out
test
add
ljmp
lret
xor
stos
pop
add
xchg
adc
jo
add
das
outsb
pop
scas
push
addr16
add
and
add
adc
add
cli
add
add
mov
jle
repnz
mov
xchg
adc
mov
je
cwtl
mulb
cwtl
ds
sahf
mov
pop
in
fisttpll
mov
lods
incb
scas
adc
push
test
test
stos
ljmp
fnsave
pop
and
cmpsl
imull
rol
outsl
pop
pop
cmp
push
mov
cs
sbb
inc
addb
add
out
xchg
faddl
adc
mov
mov
xor
pop
mov
xchg
xchg
jae
das
xorps
shll
xchg
scas
push
outsb
ljmp
and
adc
test
and
test
lods
shr
aas
sub
lcall
and
clc
aam
add
add
std
inc
jmp
mov
aas
add
ljmp
insl
push
xchg
inc
ljmp
mov
and
popf
mov
push
xchg
iret
enter
adc
idivl
mov
adc
mov
inc
std
sub
push
jmp
add
push
push
outsl
cmpsl
loopne
pop
imul
xchg
aaa
jmp
push
dec
push
jmp
or
jne
cmp
out
pop
fdiv
cld
push
mov
testl
cmp
idiv
mov
daa
push
in
add
sub
push
add
incl
int3
or
hlt
or
inc
in
add
pop
cmp
adc
in
pop
or
jne
and
add
add
and
add
mov
in
shll
sub
cli
mov
sbb
je
loope
push
sub
fisttpll
into
or
call
inc
adc
mov
in
sub
stc
aas
scas
lret
mov
adc
push
das
js
test
ds
mov
add
add
jge
and
xchg
cmp
xor
jnp
cli
rcll
lret
ljmp
and
or
push
mov
push
mov
inc
adc
ljmp
jp
cwtl
cmpb
mov
adc
orl
daa
stos
push
dec
push
in
ljmp
add
add
xchg
in
add
ljmp
jle
lods
mov
adc
xor
pop
imul
push
enter
adc
rorb
rorl
lods
jae
dec
lods
ljmp
mov
mul
mov
inc
and
jns
fldl
jo
mov
jmp
lods
aad
sbb
lods
mov
inc
jmp
lods
ljmp
jecxz
add
lods
and
xor
fldl
pusha
sub
add
lods
aad
mov
sub
xor
or
test
aas
ret
lret
ljmp
pop
jmp
inc
sbb
fs
pop
cld
sarl
or
inc
xchg
gs
pop
cld
xlat
sbb
add
pop
cmpsl
stc
push
aam
sub
mov
and
fwait
in
ljmp
lahf
inc
adc
cmpsl
insl
pop
mov
push
and
mov
ret
pop
cld
xlat
imul
cltd
dec
add
pop
gs
pop
cld
mov
jmp
rcll
push
call
add
mov
adc
xor
adc
cli
mov
mov
test
mov
push
test
adc
sbb
mov
push
add
scas
adc
call
pop
or
pop
sbb
out
adc
lret
add
sar
and
push
insb
add
dec
subb
add
out
pop
lcall
add
mov
inc
ljmp
xchg
fs
fdivrl
push
or
ljmp
ljmp
mov
arpl
lods
fcompl
fisubrl
popa
scas
ljmp
scas
ljmp
push
sti
sub
jl
add
add
add
jl
add
sub
sub
sub
outsb
outsb
lcall
outsb
add
mov
jge
std
popf
add
movsl
out
jge
ficompl
ret
in
lods
mov
cli
push
lods
test
inc
jmp
cmpsb
flds
fs
pop
je
int
pop
and
xchg
lods
mov
inc
jmp
das
xchg
sbb
adc
test
sub
adc
xchg
or
stc
add
mov
jmp
test
jb
sbb
cli
inc
xlat
lock
sub
add
dec
inc
and
add
add
stos
mov
xchg
cmp
mov
out
and
xchg
adc
lahf
xchg
push
add
insl
dec
add
popa
sub
negl
push
cltd
inc
lods
lods
push
mov
cltd
push
and
xchg
inc
in
cmpsb
xchg
ds
enter
mov
add
aas
scas
cmp
aas
scas
xchg
add
add
sbb
leave
in
push
scas
xchg
mov
add
add
xchg
jns
mov
sub
ret
xchg
mov
scas
add
lret
shrl
or
loope
cld
imul
or
js
sub
xor
add
xchg
ljmp
mov
faddl
ljmp
mov
cmp
sub
jmp
sti
hlt
cld
inc
lock
pop
loopne
jnp
ljmp
mov
stos
add
cli
mov
subb
mov
mov
sub
sub
fistpll
cmpsl
lock
add
add
mov
out
mov
xchg
cmpsb
fs
scas
ljmp
lods
mov
jns
lds
cli
jmp
cmp
psllw
aad
pusha
xor
adc
adc
or
mov
aad
subl
adc
leave
aad
push
loop
imulb
xor
jmp
lods
sbb
or
loopne
add
lahf
scas
sbb
sbb
adc
imul
lock
loope
add
lods
lds
push
add
add
jle
push
xchg
mov
pop
jmp
add
sti
xor
sti
xor
push
sbb
push
sub
sub
ljmp
or
xlat
fs
add
loop
js
sub
subb
or
xchg
adc
push
cld
adc
insb
sub
jmp
sbb
mov
outsb
or
push
and
push
scas
mov
and
lcall
xor
insl
ljmp
or
adc
jns
insl
add
adc
pop
jnp
mov
in
sbb
in
push
repz
xlat
inc
add
lock
out
xchg
xlat
gs
mov
fwait
mov
adc
sti
sbb
jp
sub
or
rcll
out
add
imul
out
jecxz
icebp
xor
add
add
out
add
out
movsb
add
and
addr16
lcall
add
ljmp
mull
scas
negl
adc
out
popf
repnz
in
mov
cmp
jae
popf
adc
leave
pop
out
movsl
push
sti
push
sbb
xlat
nop
test
adc
or
add
add
sub
add
gs
mov
adc
adc
stos
adc
cmp
lds
inc
jmp
cmp
xchg
or
psubw
cli
clc
faddl
adc
outsl
icebp
test
xor
xchg
outsl
cli
add
adc
fnstcw
and
sahf
pop
clc
push
inc
sub
in
mov
icebp
adc
mov
adc
std
clc
push
lcall
stc
mov
or
push
cmp
call
or
ret
dec
mov
loopne
out
ds
add
or
scas
xor
cld
test
jp
cmp
clc
inc
pop
pusha
or
add
outsb
or
cmc
ljmp
adc
inc
add
jne
add
add
ds
jne
in
dec
loop
stc
pop
sbb
in
sar
cli
inc
xlat
adc
inc
sbb
fdivrp
cwtl
nop
shll
mov
je
mov
out
dec
cli
test
mov
clc
dec
mov
pop
div
cli
mov
mov
test
dec
cwtl
imul
aaa
orb
adc
in
ss
mov
inc
scas
dec
cmc
cli
xorl
pop
jne
sti
loope
icebp
cli
arpl
je
dec
je
loopne
pop
shrl
adc
add
push
xor
ljmp
sbb
push
and
test
js
shr
mov
ljmp
add
add
popf
testb
loop
rsqrtps
nop
out
mov
xchg
ficompl
xchg
repnz
mov
mov
mov
add
stos
ljmp
leave
push
xchg
or
xchg
sarb
mov
xchg
cli
add
jae
mov
and
add
add
add
idivl
mov
clc
aam
testl
cmpxchg
stc
lods
mov
lds
ljmp
lret
add
scas
adc
fptan
cmp
and
cli
clc
sbb
gs
icebp
lods
xchg
add
jle
cld
lds
outsl
aad
adc
lods
xchg
or
mov
test
cltd
ljmp
repnz
add
xchg
fstps
jmp
add
add
in
cltd
sbb
xchg
movsl
lods
xchg
adc
mov
or
jne
add
sti
nop
jmp
adc
repnz
ljmp
pop
pop
test
adc
adc
jle
inc
inc
xor
lcall
ret
insb
in
adc
fcomip
mov
and
push
ss
pop
jg
add
sbb
xorl
add
lret
mov
jne
xchg
sub
scas
jns
stc
roll
jae
cwtl
dec
add
mov
sti
mov
mov
push
and
lock
orl
pop
sti
ret
mov
int3
mov
inc
sub
clc
in
add
push
and
jns
fildll
xchg
cmpb
loop
inc
stos
mov
jg
jp
sub
inc
fcomps
dec
hlt
call
scas
aas
fdivrs
adc
jl
out
dec
mov
sub
add
je
sahf
adc
cmpsb
xchg
sbb
jno
fcos
sub
adc
add
add
stc
int3
cli
js
pop
and
or
stos
js
sbb
and
pushf
incb
fsubrl
movsl
lcall
aad
scas
lods
mov
mov
in
std
shr
push
xor
imul
ljmp
push
fisubrl
xor
or
adc
dec
outsb
faddl
add
add
dec
insb
lcall
push
add
out
sub
push
shlb
fiadds
in
lods
lahf
mov
add
mov
adc
arpl
lea
jno
cmp
jb
cmp
cld
test
stc
jle
ljmp
adc
add
mov
pop
adc
add
addb
add
add
jmp
shrb
mov
mov
pop
add
push
insb
shrl
les
icebp
push
call
add
jno
adc
outsl
inc
xchg
or
push
out
sub
jle
mov
orl
jne
mov
xor
pop
js
ss
cs
clc
jge
and
cmp
pop
in
cmp
scas
lcall
sbb
add
aad
dec
xchg
mov
out
or
das
divl
pop
xor
pop
push
xorb
push
cs
add
push
xor
test
push
call
adc
cmp
push
or
jle
sub
std
mov
and
mov
mov
push
daa
fisubrs
adc
push
and
nop
sub
jae
lret
pop
aaa
in
xor
gs
mov
sbb
jae
dec
mov
dec
or
mov
shlb
mov
sbb
scas
pop
inc
ljmp
mov
lahf
daa
lcall
add
or
xchg
add
add
je
dec
fists
inc
mov
pop
bound
fiaddl
ret
or
in
stc
outsl
test
adc
pop
cli
inc
jae
icebp
cmp
push
add
mov
add
addb
lds
mov
stc
insl
bnd
stos
ljmp
imul
insl
xchg
gs
add
add
ds
or
add
sub
outsb
lds
ja
lds
mov
test
pop
xchg
push
add
call
movsl
lcall
sbb
ds
push
sahf
inc
push
sbbb
sbb
imul
pop
cwtl
add
cli
push
pop
inc
pop
lcall
fucomp
xchg
lcall
jnp
sti
call
and
jmp
int3
jmp
mov
add
xchg
add
xchg
jmp
cld
test
lock
xchg
jmp
or
psubd
xor
or
out
add
in
xchg
call
scas
mov
add
add
in
jne
cli
xor
jbe
dec
dec
lea
testl
stc
icebp
lea
pop
js
inc
and
pusha
push
sti
mov
nop
rorl
and
push
push
repnz
sbb
dec
lea
cs
std
mov
push
mov
in
pop
call
sub
and
jns
add
cmp
call
ret
pop
sub
shll
mov
aas
lret
push
imul
cmc
inc
scas
push
pop
movsl
jmp
lcall
add
xchg
ljmp
scas
jno
pop
jle
lahf
pop
jle
movq
add
add
pop
test
ljmp
out
ljmp
ret
ljmp
mov
lahf
inc
xchg
mov
jg
ljmp
rol
add
sub
faddl
jmp
into
push
add
lods
adc
jp
add
lds
decl
cmp
pop
jmp
add
lahf
push
cli
in
fwait
mov
call
mov
dec
fs
inc
ljmp
repz
push
scas
add
out
add
add
lods
outsl
inc
add
cmpsl
jmp
inc
xor
and
icebp
mov
jnp
notb
test
outsb
or
pop
stc
sub
incl
add
add
push
pop
inc
pop
ret
testl
push
out
add
cmp
insl
push
idiv
lea
idiv
cwtl
adc
test
pop
jae
faddl
call
bts
test
xchg
pop
mov
frstor
call
adc
or
push
push
adc
adc
sub
mov
pop
xchg
add
push
sub
jmp
xor
icebp
cli
xor
ljmp
push
or
push
ljmp
sahf
cmp
pop
in
out
out
cli
mov
std
or
imul
scas
jl
clc
inc
add
scas
sub
dec
call
xor
jno
dec
xchg
jo
mov
adc
pop
dec
repz
sub
out
pop
out
cli
xor
ljmp
movsl
cmp
lock
mov
or
mov
push
insb
cmpsb
mov
dec
mov
or
insl
es
xor
fisubrs
dec
xlat
and
inc
scas
jae
jle
jbe
mov
aad
pop
jno
mov
xchg
add
inc
jb
stos
adc
loop
lcall
cmp
mov
hlt
mov
ljmp
incl
movsl
stos
hlt
xchg
incl
bound
add
mov
incl
add
add
lods
gs
pop
add
je
inc
ljmp
lcall
pop
ds
cmp
or
mov
and
call
push
jnp
pop
mov
je
add
add
pop
push
mov
or
incb
aas
movsb
jmp
adc
popf
insl
inc
in
insl
ja
cmp
mov
sbb
push
push
push
adc
inc
ljmp
aam
pop
mov
mov
add
movsb
cmp
stc
insl
clc
loop
add
cld
cmpsl
pushf
and
and
add
lds
xchg
adc
mov
incl
jge
push
mov
movsb
add
fidivrl
adc
jg
or
jmp
mov
mov
jmp
insl
or
ljmp
scas
or
data16
in
fsubrl
imul
scas
mov
test
dec
xchg
add
add
pop
push
icebp
andnps
jge
or
mov
jg
pop
js
mov
js
or
in
inc
add
int3
dec
je
xchg
jb
scas
call
bound
jmp
push
push
adc
cmp
pop
pop
mov
aad
pop
call
mov
int3
xor
movsb
mov
add
add
and
lods
ljmp
or
jg
fcoml
cmc
das
cli
adc
int
cld
popa
inc
mov
pop
ret
loop
sub
jmp
scas
push
cli
fsubrs
add
sti
cmc
xchg
sahf
stos
ljmp
sub
xchg
ljmp
outsl
pop
sub
adc
xchg
hlt
sti
jno
xchg
out
imul
jmp
cmpsl
fsincos
ljmp
lcall
lods
lcall
sbb
and
out
test
add
xor
mov
jnp
leave
add
sbb
out
cs
shrl
bnd
xlat
cmp
mov
in
xor
rep
cwtl
imul
jle
xchg
out
call
push
fcoml
test
mov
jae
shrl
sub
jne
jbe,pn
and
lods
ljmp
add
sti
ja
imul
mov
xchg
push
call
or
sbb
decb
sahf
jmp
test
jge
mov
cld
lea
dec
outsl
ljmp
rolb
or
inc
mov
sbb
adc
gs
in
pop
push
mov
push
call
xchg
xor
and
mov
adc
insb
lds
mov
mov
fstpl
mov
jle
in
cmp
push
fldl
push
add
in
add
adc
cmc
inc
add
add
xorl
add
add
add
add
xor
call
popf
inc
inc
pop
add
syscall
push
and
aam
push
inc
mov
fildl
in
out
pusha
out
sub
into
icebp
dec
push
packssdw
or
arpl
adc
sub
xor
mov
inc
pop
stc
dec
jp
addr16
jmp
fstpt
jns
xchg
and
mov
arpl
insb
xchg
test
gs
xor
and
clc
in
sub
jbe
or
loopne
mov
nop
jae
pusha
mov
inc
bound
in
ljmp
add
sbb
testb
in
cmp
jle
loop
inc
movsl
ljmp
pop
clc
pop
ret
jge
add
divb
cli
or
fsub
bswap
loopne
hlt
mov
inc
fisubrl
out
in
clc
ss
ljmp
pop
push
xchg
hlt
dec
bound
add
lods
jo
gs
jnp
sahf
mov
std
xor
push
call
scas
push
xor
in
imul
sub
fnstenv
fs
jl
sldt
add
and
jmp
ljmp
sub
subb
adc
or
arpl
push
test
cmpb
stc
repz
les
subl
mov
test
mov
jbe
je
insl
int3
add
ja
mov
mov
pop
or
ja
pop
and
jg
lret
ss
mov
jns
push
jnp
imul
and
mov
xor
adc
orb
sbb
stos
enter
popa
sub
jle
xchg
jns
bound
add
add
leave
push
add
inc
lret
scas
add
mov
shrb
sub
popa
daa
or
sarb
repz
push
xchg
inc
cli
xchg
in
or
ds
cli
cmpl
mov
stos
jl
pop
sbb
sbbl
adc
js
and
jns
ret
ds
mov
jo
outsl
xchg
outsl
shlb
lcall
mov
sbb
rcrl
lock
bound
sub
sub
ja
jg
add
add
jle
add
in
add
gs
stos
mov
sti
adc
and
movsl
ljmp
scas
pusha
cmpsb
clc
in
xor
mov
popa
cmp
imul
jp
loop
movsl
jmp
jmp
ja
shlb
mov
outsb
cmpsb
stos
mov
jb
out
in
mov
adc
sub
add
add
jle
jb
cli
mov
jp
cmc
pusha
outsl
out
incb
repz
jo
loop
sahf
adcb
test
mov
or
int
ja
into
add
fisubl
sbb
fdivrp
popf
mov
insb
cmp
lcall
sub
push
fs
ja
notb
test
jae
aam
sbb
add
mov
stc
daa
adcl
fyl2xp1
adc
out
pop
mov
add
jno
and
push
sti
mov
or
cltd
jo
adcl
loop
je
fiadds
inc
mov
inc
xlat
lds
xor
loopne
dec
lcall
pusha
jne
mov
pop
rorb
not
xchg
daa
xor
cmc
hlt
test
pushf
jmp
jmp
mov
or
scas
enter
or
rcl
iret
push
xor
pop
rolb
pushl
and
jp
or
mov
push
mov
stc
stc
rol
add
jnp
jae
and
bound
xor
dec
mov
out
and
cmp
sbb
and
ds
add
shrb
cmpsb
xor
fistpll
mov
or
inc
std
dec
xor
xor
outsl
mov
jbe
in
inc
mov
lods
imul
movsb
cmp
in
loope
aas
mov
pop
leave
sbb
jmp
movsb
inc
pushf
cmc
push
and
aaa
shlb
jl
ljmp
mov
stos
jnp
fidivl
ret
not
jmp
orl
cmpsb
divl
xchg
repnz
cltd
arpl
movsb
loopne
cmp
movsb
cmp
js
faddp
ds
jl
jns
rolb
arpl
mov
pop
mov
das
in
out
loopne
clc
in
scas
cmp
mov
lock
fisubl
add
add
or
jae
bound
sub
fstps
sbb
bswap
add
jb
fiaddl
jmp
inc
sub
sahf
stc
ljmp
fiadds
clc
inc
rclb
add
lahf
dec
mov
sarb
mov
je
in
mov
add
push
jb
or
add
add
mov
mov
pop
dec
clc
pushf
and
jmp
add
mov
push
jg
push
arpl
or
int3
add
pop
pop
dec
decl
loope
pop
jmp
mov
ds
lods
cmpb
jbe
pop
test
xor
xchg
inc
mov
fadds
cmp
inc
cmp
jl
pusha
int
jne
add
add
mov
lds
jl
jp
lock
or
jge
cmp
inc
add
jl
add
call
push
mov
push
call
inc
aas
mov
sbb
clc
xor
or
fsubrs
aam
pushf
into
ss
or
andl
into
cwtl
or
into
andl
mov
inc
add
adc
leave
adc
scas
in
popf
mov
sub
pop
lods
pusha
scas
loop
fisubrs
ret
in
xor
pop
mov
or
lret
or
out
lock
in
cmp
imul
bound
call
jp
in
xchg
test
push
faddl
sbb
loop
push
shlb
mov
ret
popa
push
fmul
imul
imull
xchg
dec
lea
fs
cmpsb
jmp
test
jmp
mov
lea
sbb
lods
gs
stc
xchg
popf
stc
mulb
push
clc
decb
shr
lock
add
loope
pop
dec
icebp
clc
call
add
add
arpl
jb
xchg
push
and
sub
in
mov
arpl
push
movsb
mov
arpl
xchg
mov
fs
frstor
testb
mov
add
push
xor
inc
lcall
add
popf
pop
dec
adc
das
rorb
out
ret
add
movsb
shr
push
pop
shrb
adc
jge
pop
ds
int3
mov
clc
mov
pop
pop
jbe
aam
outsb
hlt
sub
cld
fdivrs
push
hlt
jl
add
gs
js
daa
out
cmp
movsb
ret
pop
xlat
pop
outsb
mov
daa
inc
int
imul
repz
pop
inc
repz
incl
lock
je
dec
out
xchg
clc
mov
mov
xlat
je
call
cmpl
add
loop
xor
icebp
xor
cmp
fiadds
push
adc
jl
aam
inc
out
lret
cltd
dec
aam
pop
dec
in
push
fidivs
dec
dec
sti
and
icebp
out
pop
dec
adc
add
add
fnstcw
push
add
push
mov
sahf
cmp
jno
or
ss
pop
inc
cs
add
ljmp
xorl
fnsave
xchg
neg
out
les
pop
pop
rorb
mov
fisttps
inc
jmp
aaa
cmp
les
cli
mov
add
lods
clc
scas
push
bnd
xchg
xor
pop
fwait
in
push
out
fcomps
jp
adcb
das
dec
call
mov
fsubp
outsb
pop
aaa
pop
mov
stos
jmp
aam
jb
dec
and
clc
push
loope,pn
ds
das
push
lcall
ljmp
imul
std
cs
rcr
sub
clc
idivb
aas
add
add
add
shrl
push
stc
cmpsb
sub
clc
into
push
inc
pop
jb
inc
lret
stos
sbb
imul
fidivrl
sbb
es
stos
mov
jb
xchg
and
add
ljmp
in
add
dec
cmp
mov
int3
mov
jb
adc
idivb
testb
push
jg
xlat
ljmp
xor
cmp
or
movsl
mov
js
decl
jmp
mov
ds
dec
orl
xor
mov
bound
adc
outsb
dec
pushf
inc
testb
repz
cmp
cmp
scas
mov
dec
aaa
fsubp
add
loop
pop
hlt
push
aam
jl
push
pop
in
add
add
sub
add
cmp
xchg
ret
dec
scas
mov
inc
aad
call
call
jmp
sub
out
xchg
test
xor
xchg
jle
xchg
jmp
lock
inc
mov
adc
pop
fidivrl
dec
dec
in
xchg
xor
cs
cli
jmp
add
insl
dec
stos
jno
hlt
movsb
xchg
xor
int
jne
add
push
not
jo
pop
inc
divl
fidivl
adc
push
sbb
cli
out
in
lock
mov
and
mov
insl
ss
xor
push
jb
adc
adc
jno
andb
pop
jmp
fbstp
aaa
filds
xor
lret
mov
add
add
into
ret
clc
xor
mov
fcoml
add
and
fiadds
pop
sbb
repnz
mov
cmp
inc
mov
into
mov
fistpll
subl
pusha
enter
mov
jbe
dec
xchg
xor
lods
xor
inc
cmp
sbb
aad
jbe
daa
loopew
movsb
mov
inc
xor
cmpsl
inc
pop
xor
add
and
test
jge
inc
icebp
xor
push
aaa
jg
inc
frstor
aaa
push
bound
insl
dec
add
out
leave
add
repz
clc
clc
mov
jo
in
fsubrl
add
cld
scas
inc
mov
adc
mov
push
rorb
dec
addb
push
mov
add
add
add
mov
jo
fdivrs
add
and
mov
das
rcrl
mov
jbe
fcomps
inc
in
dec
jp
lock
cmp
push
pop
xor
loopne
dec
mov
cmp
xor
movsl
test
andl
fs
roll
cmp
dec
push
mov
push
mov
imul
add
shll
dec
cmc
test
push
add
sbb
sbb
lahf
add
repz
pop
sub
lret
mov
push
xchg
in
mov
in
shl
in
mov
mov
scas
dec
inc
ljmp
and
dec
test
ja
cli
icebp
outsl
xor
add
add
loop
cmp
cmp
mov
push
decb
push
les
imul
imul
shl
bound
mov
sub
jmp
xor
insl
sub
cs
lock
ljmp
mov
dec
mov
pop
cmc
pop
sub
das
pop
mov
icebp
aaa
xor
fimuls
add
fisubrs
or
hlt
add
fldenv
or
sbb
jb
mov
mov
outsb
test
popa
loop
xchg
jns
jmp
ljmp
outsb
xchg
mov
inc
jge
push
cli
imulb
ss
popa
mov
cmp
or
in
movsb
jp
ds
mov
add
add
add
add
push
out
ljmp
clc
ljmp
jg
push
imul
add
mov
push
mov
inc
arpl
jg
repz
enter
mov
push
dec
pop
mov
clc
push
jl
ja
jecxz
push
push
add
daa
decl
mov
push
pop
je
fmull
out
lcall
add
sub
mov
mov
jb
adc
adc
cmp
out
adcb
jg
cmpsl
lods
loope
sub
mov
fscale
addl
add
daa
mov
mov
fdivrs
scas
pop
into
ss
push
pop
xor
mov
cmp
lds
out
jl
dec
inc
clc
mov
xchg
add
test
or
cmc
iret
dec
movsl
sbbl
push
push
or
aad
mov
cmpl
aam
lods
xchg
xlat
add
cmpsl
hlt
rorb
pop
adc
push
jl
jmp
inc
jle
cmpsb
iret
nop
mov
idivl
xlat
sarl
push
jb
fists
sub
push
out
aad
mov
add
xor
jl
rol
or
inc
mov
push
stos
ljmp
fs
cmp
stos
mov
ljmp
orl
jle
out
in
out
xor
arpl
adc
mov
sbb
cs
or
imulb
xchg
jmp
xor
shl
and
add
add
std
pop
mov
ret
movsb
jmp
cs
jae
std
mov
cli
jo
mov
stos
jns
lea
fs
int
mov
dec
lds
fs
lods
fcomi
test
fildll
push
ljmp
fcmovnbe
jo
insl
inc
ret
jne
inc
adc
loop
mov
arpl
mov
loope
dec
sbb
adc
scas
sbb
bndstx
mov
jmp
ds
pop
pop
test
jg
pop
pop
inc
fdivrl
sbb
test
clc
xor
mov
ja
out
inc
or
inc
lock
adc
add
idiv
aam
ret
call
mov
pusha
jbe
pop
and
cmp
jmp
out
out
sub
popa
inc
enter
push
fwait
pop
shrb
add
aad
jl
jb
incb
xlat
pop
cmp
aaa
mov
outsl
jbe
mov
cmc
jne
data16
jl
pop
inc
clc
inc
pop
int
add
cli
mov
lods
enter
push
or
mov
cli
adc
clc
mov
cmpsb
ljmp
mov
sub
sub
jmp
mov
shll
push
pop
dec
mov
push
mov
shrl
add
stos
fdivrs
and
arpl
daa
xor
jnp
adc
das
dec
mov
int
repnz
ljmp
arpl
pop
mov
sub
addl
add
add
imul
addr16
ljmp
lahf
loop
dec
mulb
mov
icebp
jae
loop
sbb
add
jecxz
repnz
rolb
mov
mov
aaa
movsb
jmp
mov
les
fnstcw
cs
mov
xchg
fdivrs
daa
test
in
mov
add
add
subl
fnstenv
daa
mov
mov
bound
add
jno
test
jmp
ljmp
and
stc
call
cli
in
cmpsl
imul
outsb
mov
subl
std
jne
mov
cld
inc
cmpsl
imul
dec
scas
insl
cmp
inc
cli
ljmp
mov
outsb
mov
inc
aam
inc
rcll
mov
push
ds
into
testb
repnz
push
call
inc
mov
jg
add
int3
daa
jecxz
rclb
dec
loopne
ja
jg
fildll
enter
mov
push
sbb
adc
lret
ret
add
and
lods
aas
adc
shll
and
ficoms
xlat
out
lock
dec
xor
and
adc
or
fnstsw
or
inc
add
leave
cmc
mov
mov
fsubs
dec
sbb
addb
mov
scas
xchg
lret
mov
out
popf
cmc
ja
ss
dec
repnz
push
out
ss
adc
test
fdivl
mull
ficoms
adc
jnp
sub
psubsb
jg
out
inc
mov
das
sti
cli
das
pop
pop
lret
xchg
xor
sahf
add
test
add
popa
inc
jg
out
xchg
fsubrp
imul
cmp
int3
iret
adc
sub
in
push
lods
dec
movsb
outsb
roll
scas
ljmp
mov
mov
jg
jmp
ja
ss
lahf
jl
mov
pusha
mov
or
insl
shll
mov
roll
xor
jns
out
mov
jmp
sbb
mov
dec
cmp
fidivs
add
add
push
bnd
lods
ljmp
in
sbb
jle
bound
adc
ljmp
mov
test
ss
dec
bound
scas
arpl
add
or
mov
sub
adc
sub
sbb
xlat
call
or
or
mov
aaa
pop
pop
adc
shrl
mov
clc
clc
inc
pmaxsw
mov
mov
or
pop
loopne
mov
orb
push
call
cmp
mov
mov
add
inc
sbb
leave
mov
das
roll
add
imul
or
add
add
bound
scas
add
inc
out
pand
pusha
mov
out
pop
xchg
fildl
mov
add
add
dec
sub
lods
cmp
in
dec
sbb
sahf
rcl
add
jbe
outsb
mov
add
mov
push
sarb
xchg
sbb
inc
mov
int3
add
add
add
add
sbb
add
xor
cmp
mov
jp
adc
clc
fnstenv
out
pop
xor
or
out
jecxz
inc
ret
jmp
mov
shlb
ljmp
test
push
scas
add
in
inc
xchg
mov
add
ljmp
in
jmp
jl
add
add
into
arpl
xchg
xor
ljmp
mov
xlat
jg
jmp
add
sub
add
scas
add
ljmp
jb
pop
test
jmp
pop
jb
ficompl
out
jmp
pop
bound
jmp
mov
andb
sub
inc
in
sub
cmc
mov
add
add
aad
sub
jo
in
mov
lds
mov
jmp
shr
fwait
jo
fisubl
mov
pushf
gs
fiaddl
fcmovnbe
clc
push
fs
add
test
clc
mov
rclb
mov
notb
cmpsl
fists
lock
mov
lcall
xchg
jmp
mov
add
add
cmpsl
cmp
or
adc
mov
push
inc
or
or
jmp
or
loop
pop
mov
sti
test
loope
je
bound
rorb
push
push
nop
pop
or
test
or
scas
push
addr16
inc
inc
mov
in
xor
cli
mov
sarl
out
sub
mov
test
jns
add
imull
leave
in
leave
add
out
clc
rol
outsl
ret
cmpsl
scas
in
lds
daa
les
mov
jl
insb
leave
add
xor
xchg
es
add
pop
or
sarl
or
add
inc
push
add
add
add
loop
jp
dec
fs
iret
popa
mov
ljmp
clc
add
stos
add
loop
push
jns
cmc
cmpsl
mov
jmp
cmp
push
xchg
ljmp
sub
push
sub
roll
into
addl
stos
popa
dec
sahf
gs
adc
fsubrp
add
bound
adc
lods
push
pop
ss
xlat
jb
fs
inc
ljmp
sub
mov
xor
bound
enter
jmp
mov
mov
xor
notb
outsb
hlt
es
mov
shl
ljmp
add
lods
lds
push
out
outsb
hlt
hlt
es
lods
roll
cmpsb
data16
xchg
rolb
jmp
std
pop
aas
or
push
mov
aas
add
pop
aas
add
add
inc
pop
cmp
inc
mov
test
adc
jns
xor
subl
inc
addr16
inc
inc
clc
dec
inc
or
pop
inc
or
and
add
add
add
mov
call
cmpsb
je
sbb
adc
loope
or
mov
loop
inc
sub
push
call
pop
or
add
stos
or
push
fildll
scas
xor
icebp
and
sbb
add
int3
rcll
inc
add
adc
mov
hlt
cmp
jno
stc
xor
cmp
push
jns
stc
and
cmp
sar
adc
pop
loop
sarl
pushf
das
or
scas
fmuls
mov
add
scas
dec
rol
roll
loopne
je
add
fadd
rclb
ret
mov
cmp
movsl
mov
xchg
and
shlb
xchg
cmp
mov
lret
mov
inc
sbb
push
data16
mov
jmp
popa
addr16
add
pop
push
adcb
fs
stos
xor
mov
xchg
jns
scas
xor
or
lret
mov
lods
ljmp
push
ficoms
out
xchg
out
sbb
lods
ljmp
cli
mov
jge
add
add
add
mov
enter
jle
mov
ljmp
pop
inc
stc
je
mov
sub
iret
xchg
ljmp
ffreep
pop
sub
repnz
repnz
mov
mov
cmc
negb
add
lods
ljmp
test
add
dec
pop
shrl
inc
sbb
pop
out
outsb
clc
sbb
mov
mov
adc
clc
mov
sahf
mov
and
scas
fcoms
mov
loop
fdivp
ret
sbb
mov
cmp
mov
test
cltd
sti
mov
cltd
ja
push
clc
jge
dec
in
add
jb
pop
pop
in
imul
sub
lea
add
add
dec
call
mov
add
xchg
std
add
xchg
adc
scas
or
repz
aaa
out
xchg
dec
dec
lea
mov
mov
flds
sti
sbb
xor
subl
push
test
add
imul
outsb
inc
cmpsl
dec
mov
xor
repnz
mov
push
and
jne
push
rorl
push
pop
out
outsl
mov
mov
jmp
ret
call
stc
xchg
mov
shll
xchg
mov
mov
adc
sub
push
and
dec
push
xchg
push
popf
mov
push
repnz
ljmp
or
add
add
jecxz
inc
sbb
push
cmpsb
shrb
ret
mov
adc
scas
ljmp
ret
ss
rcll
movsb
outsb
cli
add
xchg
loopne
add
out
add
ljmp
loope
gs
mov
scas
sbb
lea
add
aaa
outsb
mov
add
add
fwait
test
cmp
out
out
add
das
mov
add
xchg
jmp
jmp
addb
push
rorl
in
clc
jmp
in
ljmp
jae,pn
call
lods
ds
frstor
fldt
mov
fimull
lods
outsl
clc
pop
mov
dec
stc
add
je
in
pop
xor
shr
arpl
jl
jns
shr
jae
jno
insl
or
sti
subl
or
stos
or
addb
movsb
jne
adc
les
dec
out
insb
jmp
int3
mov
jne
xchg
cmp
mov
push
call
mov
fnstcw
mov
xchg
sbbl
sti
fadds
or
adc
call
and
add
add
inc
roll
sub
fs
shlb
mov
test
or
test
add
out
js
lods
roll
mov
add
add
jno
ljmp
into
add
xchg
xor
scas
push
std
mov
inc
dec
call
sub
or
xchg
xor
scas
addr16
mov
cmpsb
push
push
mov
mov
xor
add
stos
std
add
test
jae
out
enter
ljmp
mov
test
add
scas
sub
xor
filds
scas
rorb
ja
jae
sub
add
sub
mov
inc
ret
pop
ret
mov
repz
cmp
jae
mov
repnz
jno
cwtl
stos
or
add
inc
rorb
ljmp
sbb
xchg
into
sbb
negb
add
lods
dec
ret
sub
jmp
test
rorl
adc
push
jmp
in
ljmp
test
add
js
call
pop
and
shrl
jecxz
sub
and
bnd
inc
jecxz
sub
and
ds
cli
inc
cli
mov
ret
lret
incl
leave
cmp
add
add
or
das
jns
add
add
jbe
dec
pop
je
xor
js
lret
ret
mov
je
mov
or
push
das
jns
or
call
or
sti
cmpsb
dec
andl
ja
addr16
repnz
mov
adc
xchg
inc
lret
lods
inc
and
ja
pop
hlt
icebp
negb
jge
je
add
add
jp
sub
hlt
inc
scas
jecxz
je
insl
mov
scas
pusha
sub
xor
mov
inc
dec
or
push
mov
and
cmp
cli
pop
fwait
stos
or
cmp
std
gs
cmp
imul
jl
sar
xchg
outsb
mov
cmp
outsl
sub
orl
xchg
movsl
jnp
jmp
lret
sub
out
push
repz
mov
lcall
je
or
push
xacquire
cmp
stos
xlat
jg
in
ljmp
dec
stos
ds
repnz
ret
jb
repnz
out
and
lahf
add
sti
jg
ljmp
mov
into
imul
dec
and
ficomps
in
imul
mov
add
ss
pushf
cmc
inc
lret
lock
out
and
jg
gs
add
mov
ljmp
cltd
push
adc
adc
add
add
clc
inc
push
sbb
cmp
lret
outsl
std
ret
jge
lods
shr
lods
ljmp
mov
daa
fidivrs
cmp
mov
xor
jmp
inc
cmp
ret
mov
or
cmp
or
xchg
mov
adc
dec
data16
inc
ljmp
lcall
add
pop
cmpsl
int3
test
data16
pop
ljmp
or
jg
jmp
lea
jns
ror
popa
add
jmp
sub
sub
adc
inc
cmc
inc
mov
call
loope
push
sub
add
add
cld
xchg
pop
cli
mov
ret
cmpsb
loopne
pop
adcb
scas
enter
add
add
jle
gs
in
test
decl
sahf
insl
ja
mov
popa
jnp
mov
add
jp,pt
mov
out
int
test
mov
scas
or
add
iret
lret
movsl
jns
inc
pop
push
cmpsb
add
out
jbe
roll
test
movb
scas
out
cli
jecxz
std
inc
scas
adc
adc
mov
xchg
jg
test
jmp
fwait
push
jmp
add
out
fwait
inc
scas
dec
mov
inc
filds
push
mov
stos
cmp
ss
mov
stos
filds
sub
repz
in
mov
pop
inc
inc
sbb
and
aaa
push
test
or
stos
push
js
ss
add
repnz
jns
aaa
sbb
sti
rsm
sbb
inc
pop
repnz
pop
ljmp
ljmp
pop
ljmp
push
pop
scas
notl
es
sub
rcrl
mov
insl
xor
adc
lods
shr
and
mov
and
icebp
incb
add
add
outsb
add
inc
les
adc
in
loop
ss
sar
jo
lret
stos
mov
gs
sbb
push
dec
fidivrl
es
push
add
int
add
pop
repz
mov
sub
cmp
or
mov
sbb
xchg
sub
mov
loopne
lret
ja
add
je
jns
add
mov
incl
ss
aad
mov
pop
pop
sub
or
ljmp
les
push
arpl
xor
push
push
testb
daa
test
adc
lahf
cwtl
outsb
sbb
xchg
add
jnp
incb
add
add
test
hlt
mov
insb
lret
add
mov
mov
mov
mov
add
adc
dec
xchg
cmp
call
and
lret
idivl
lock
fmuls
push
mov
cmp
xor
jnp
inc
out
dec
int3
daa
push
adc
mov
jmp
daa
mov
fbstp
bound
cld
sub
roll
scas
out
xchg
les
jbe
subl
cld
pop
sub
ret
repz
in
push
daa
xlat
cld
sub
add
cs
movsl
outsb
gs
ljmp
xchg
popa
popf
xor
fistpll
mov
push
add
add
jae
cmpsb
add
sbb
jmp
test
inc
jns
jns
out
cmpsb
stos
or
loop
sub
in
es
loope
xchg
fldenv
les
out
jge
lods
ljmp
lods
ljmp
and
popa
ds
pop
fimuls
sub
add
add
fs
jecxz
ljmp
lods
ljmp
mov
aas
mull
stc
imul
sti
dec
aad
loope
lods
ljmp
inc
test
xchg
outsl
stc
push
shr
or
enter
mov
add
pop
jbe
xchg
ljmp
xchg
add
or
subl
jb
loopne
stc
cmp
test
jecxz
add
scas
je
sbb
cmc
dec
mov
cmp
add
cmp
ljmp
sub
push
rcrl
shlb
das
inc
out
pop
mov
inc
add
ljmp
inc
cmpsb
mov
ret
ja
inc
and
jb
jle
movsb
add
repz
jne
xchg
in
fisttps
inc
ret
ffreep
mov
ss
sub
lods
test
cli
jmp
ja
mov
test
jnp
cmp
jne
in
cmp
scas
cmp
daa
mov
xor
cmpsl
jne
aas
vpunpcklwd
in
sub
jmp
jmp
ja
stos
das
lcall
add
ljmp
je
ds
out
call
scas
call
ja
shll
cmp
cwtl
fs
jp
mov
mov
aas
pop
push
dec
jge
mov
movsl
mov
stos
in
push
and
push
inc
scas
adc
jl
mov
add
scas
jecxz
cmp
in
ret
cld
ds
nop
in
das
xor
push
lods
ljmp
jo
mov
sti
aas
or
test
pop
out
jmp
rorl
xor
jge
cmp
or
clc
jmp
nop
mov
out
rcrb
push
jmp
ljmp
jb
add
add
outsb
sarl
outsb
fldenv
mov
icebp
xor
ret
lods
ljmp
pop
xor
cvtdq2ps
cli
call
mov
mov
lret
or
lods
mov
sar
out
test
in
add
pushf
sub
push
or
pop
hlt
xchg
lock
mov
mov
mov
pop
out
js
ja
mov
or
scas
or
dec
mov
cmp
xchg
lock
dec
or
ds
sbb
and
ds
lock
scas
inc
hlt
cli
add
jl
or
inc
lock
fdivl
dec
inc
lock
mov
mov
cmpl
inc
mov
pop
push
inc
lds
cmp
mov
push
or
inc
mov
mov
add
int
outsb
add
bound
daa
mov
jmp
jne
ds
inc
adc
mov
or
cld
sahf
cli
xor
in
sub
out
jnp
push
ljmp
mov
mull
scas
adc
popa
out
out
push
out
insl
outsb
jmp
insl
mov
leave
cld
test
arpl
ljmp
adc
scas
das
mov
es
call
xchg
cmp
mov
ljmp
xlat
mov
movsl
movsb
js
add
lret
loop
outsb
pop
out
add
push
cmp
addr16
cs
es
add
lods
ljmp
mov
popa
dec
fnsave
adc
std
push
push
pusha
mov
push
mov
add
fnstcw
ljmp
xor
add
lods
addr16
lods
ljmp
stc
int3
push
jmp
bound
aam
ljmp
lods
ljmp
popf
test
jo
adc
push
add
loopne
push
push
jmp
inc
add
jl
mov
adc
sbb
sbb
mov
inc
push
xor
sbb
call
dec
lock
push
mov
dec
repz
push
call
mov
push
dec
sti
incl
add
sbb
sub
add
adc
cmc
ljmp
fidivrl
jae
add
mov
sbb
shl
add
push
push
js
scas
outsl
adc
mov
lods
cmp
sub
add
scas
cmc
dec
and
ret
add
cmp
or
inc
push
mov
jge
jp
test
ljmp
pop
out
call
and
sbb
gs
insb
sbb
xor
add
imul
xchg
sbb
add
cli
sub
inc
stc
ljmp
cmc
sti
popa
xor
test
add
xchg
ljmp
adc
mov
fwait
scas
aas
mov
popf
loope
add
lods
daa
adc
out
add
fstpl
clc
test
add
test
in
mov
cmp
adc
in
ret
repz
push
pop
ss
push
ljmp
cmpsl
add
xchg
fcompl
scas
fistl
subb
mov
call
out
add
mov
xor
aas
xor
mov
jmp
push
add
lods
fildll
add
gs
mov
cmpsl
mov
mov
jb
inc
sub
push
dec
mov
mov
add
jo
cmp
testb
xchg
mov
jb
add
out
sub
test
in
sbb
loope
ss
ret
and
pop
lock
or
out
mov
push
mov
push
sub
cmp
mov
lcall
add
out
add
and
mov
das
stc
call
test
mov
lret
jmp
call
cmp
add
lock
mov
mov
mov
sti
lcall
or
inc
jmp
push
push
mov
inc
repz
pop
scas
jg
jns
insl
adc
rolb
enter
addl
add
pop
lock
and
xchg
test
jmp
cli
jle
scas
mov
add
jmp
add
jg
lcall
mov
lcall
and
fcomps
fcoms
push
or
scas
xchg
pop
mov
xchg
pop
mov
xchg
mov
stc
adc
push
sub
cmp
cmpb
add
sbbb
inc
mov
add
add
cwtl
xchg
ss
test
lret
sub
add
jbe
test
or
icebp
xchg
and
mov
mov
into
sub
stc
pop
mov
lret
push
pop
iret
sahf
fiaddl
adc
mov
int
inc
push
sahf
xor
sub
xor
or
scas
jne
testl
stc
jo
scas
stc
pop
dec
add
jmp
jno
scas
pop
ficoml
jae
xchg
xor
pop
stos
jne
popf
cmp
je
pop
test
xlat
pushf
and
ror
pushf
test
xchg
add
add
mov
pop
dec
jmp
enter
test
outsb
xchg
adc
sub
dec
call
insb
mov
repnz
outsb
cmp
fcoml
add
roll
cltd
scas
mov
dec
es
cli
clc
xchg
test
sbb
push
dec
outsl
shl
sbb
jmp
xor
add
pop
xor
test
lock
scas
mov
out
jle
cmc
lcall
mov
xchg
mov
xchg
lods
loope
jl
jg
pop
lods
js
cmpsb
jae
adc
sahf
jg
dec
jb
add
hlt
mov
je
sbb
out
js
out
jg
movl
pop
sbb
sbb
jmp
stc
cmp
ljmp
push
clc
incl
movups
xlat
push
pop
arpl
cmp
xlat
ljmp
and
inc
scas
mov
pop
jbe
repnz
fists
ljmp
mov
inc
xchg
add
scas
js
xchg
popl
es
daa
mov
ds
xchg
test
xchg
and
mov
inc
mov
xchg
test
je
scas
xchg
add
fcompl
cmp
xor
lret
daa
push
jb
jmp
rcrb
or
and
repnz
scas
ljmp
daa
xor
mov
xchg
imul
insl
mov
xchg
jno
lock
or
dec
xchg
cmc
pop
sub
fimuls
fwait
xlat
jg
cmpsb
jg
or
adc
cltd
enter
test
pop
out
lcall
xor
add
add
ja
push
jg
xor
sahf
jno
lcall
seto
movsb
gs
mov
psubd
movsb
roll
pop
cmpl
std
add
xor
ss
jge
mov
add
imul
or
inc
data16
int3
sbb
lods
imul
call
ret
or
add
add
add
sub
sbb
cmp
bound
int
adc
jle
cmpsl
outsb
push
lods
ljmp
in
sub
int3
add
insl
adc
mov
stc
add
xor
add
lds
shlb
xlat
out
jmp
mov
imul
xchg
out
add
xor
jl
mov
add
add
cmpsb
divb
jne
insb
mov
cmp
sub
test
repz
push
xlat
xchg
jbe
call
sub
jg
jae
sarb
repnz
or
dec
sub
and
pop
pop
out
clc
push
repz
mov
xchg
xchg
add
pushf
sbb
or
scas
jbe
jmp
bndstx
es
pusha
jne
fadds
add
add
xchg
push
lds
enter
ljmp
xchg
test
mov
xchg
stos
sub
lea
jmp
or
test
pushl
or
jmp
ljmp
or
lock
aad
and
sub
out
add
idiv
stc
ljmp
mov
loopne
in
arpl
mov
sub
mov
and
lahf
adc
xor
cmp
mov
xchg
add
mov
pop
ret
and
sbb
sub
xlat
mov
jle
add
mov
mov
mov
mov
scas
push
jecxz
cwtl
jmp
cmp
out
push
les
addr16
cwtl
xchg
xor
and
xchg
pop
out
notb
std
and
add
jae
clc
bound
or
bnd
pop
jecxz
add
data16
jecxz
aas
test
popa
insl
cmp
shrl
in
xrelease
push
adc
jmp
mov
jle
scas
in
test
add
sub
add
jno
or
pop
fld
out
pop
in
out
scas
cmp
stos
jne
jb
addr16
mov
sbb
inc
lds
ret
stos
aam
push
lcall
ror
jge
clc
and
dec
jne
and
pop
fnstenv
jno
cmp
mov
push
jle
rcpps
aaa
add
add
add
loopne
movlps
mov
lods
loopne
unpckhps
cmp
jl
lods
or
fmuls
psrlw
ljmp
mov
push
cmp
out
int
jbe
push
jecxz
leave
jbe
cmp
push
and
enter
or
pop
es
cli
add
mov
sbb
xor
idiv
pop
stos
mov
fsubr
call
test
outsl
js
enter
cld
add
stc
xor
add
xor
push
or
scas
test
ss
add
clc
inc
xchg
cli
mov
mov
hlt
call
test
and
sub
mov
mov
call
xchg
outsl
jg
add
add
adc
movsb
imul
mov
popf
pop
add
sbb
pop
enter
push
into
shlb
jmp
add
hlt
lods
ljmp
loopne
movsb
fists
in
popf
fisttps
shrb
xchg
sbbb
xchg
mov
sahf
xchg
xchg
loope
in
xor
add
push
sub
into
out
add
xor
ljmp
cmp
mov
or
sahf
clc
inc
xor
divb
sbb
cli
or
mov
add
xor
push
cmp
sbb
push
mov
add
lods
sbb
in
mov
clc
out
push
test
mov
or
popf
clc
mov
inc
and
lods
out
jge
cmp
add
xor
testl
sarl
jns
mov
inc
int3
cmpsl
jae
adc
cmpb
push
jmp
daa
jae
sti
subl
test
imul
add
stc
call
ljmp
inc
mov
idiv
mov
clc
pop
xlat
out
adc
sti
incl
sahf
sbb
xchg
ljmp
mov
clc
pushl
loopne
jo
xor
ud2
dec
out
incl
clc
das
push
out
push
inc
jp
cmp
push
cli
dec
xchg
pop
in
adc
divb
or
idivl
cmp
cmp
xchg
add
mov
and
and
xchg
add
xor
xchg
icebp
fistpl
scas
xchg
add
movl
xor
popa
cld
rcrl
mull
mov
xchg
orl
push
ljmp
pop
mov
jecxz
jmp
jmp
rcll
jno
nop
push
lcall
pushl
ljmp
add
add
jecxz
sub
and
xchg
loopne
sti
adc
out
imul
gs
mov
loope
jg
les
bound
and
scas
ljmp
mov
mov
scas
ljmp
aad
fcoms
in
out
ja
arpl
es
stos
loop
fs
pop
call
lock
pusha
out
xchg
mov
push
or
xchg
clc
mov
sahf
test
jnp
xchg
xchg
es
jnp
adc
sub
sub
and
pop
outsb
icebp
gs
clc
push
mov
cmpsl
or
mov
fbld
cmp
mov
add
add
pop
repnz
int3
shll
movlps
sldt
xor
mov
jmp
jg
pop
mov
jmp
mov
xchg
test
push
push
ds
adc
adcb
cld
jne
adc
mov
adc
call
push
scas
or
enter
jne
decl
add
mov
cld
data16
add
cmp
into
push
gs
pop
enter
ds
mov
push
cmc
mov
add
cmpsb
pushf
mov
rorl
mov
repz
cli
test
enter
mov
and
jle
cmpb
mov
inc
add
inc
add
aaa
pop
mov
pop
xchg
dec
cli
leave
out
out
push
mov
dec
mov
inc
clc
inc
mov
ljmp
testl
mov
pushf
xchg
bound
jge
loop
andb
das
inc
xchg
xchg
cmp
and
inc
shlb
mov
aad
adc
out
mov
and
add
jb
lret
jno
ljmp
nop
test
pop
int3
mov
sub
inc
scas
in
sti
mov
sbb
out
xor
aas
push
andl
push
jmp
lods
loope
sub
out
fbld
add
xchg
inc
icebp
push
ljmp
push
pop
dec
jmp
mov
loop
bound
test
test
xchg
fwait
test
add
and
inc
call
sub
imul
repnz
loop
ret
shrl
lret
or
popa
dec
inc
dec
mov
mov
jmp
loopne
inc
pusha
outsb
lcall
or
repnz
lret
fs
mov
inc
jmp
sbb
add
add
push
pop
inc
xchg
inc
add
sar
test
in
mov
into
sar
psubusw
add
cmp
add
mov
xor
cmp
inc
hlt
mov
cmc
inc
mov
or
jmp
add
add
movb
gs
or
adc
xsaveopt
cli
add
test
xchg
mov
xor
out
call
or
sbb
in
scas
mov
inc
mov
push
popf
jnp
mov
out
mov
sbb
xor
notb
inc
lcall
add
lret
or
jae
adc
mov
inc
sbb
clc
icebp
sarl
fiadds
mov
xchg
ljmp
les
bound
xchg
xchg
jne
sub
iret
jl
xchg
insl
jmp
xchg
push
hlt
xchg
sbb
xchg
jecxz
mov
xchg
cmp
stos
out
sbbb
add
add
add
inc
mov
cmp
sbb
add
xchg
jmp
sbb
xchg
fisttps
sub
gs
push
xchg
push
xchg
arpl
add
xchg
out
ja
add
xchg
add
jle
pusha
xchg
testb
add
add
dec
cs
add
je
mov
xchg
outsb
int3
in
xchg
ds
add
add
push
gs
sbb
push
jg
mov
cmp
jp
or
xor
mov
xchg
fld
out
out
cli
scas
xor
ja
lods
in
pop
es
clc
rclb
pushf
clc
xchg
push
jbe
mov
or
pop
sahf
repnz
push
sahf
cli
clc
aam
xchg
outsb
add
je
in
test
aas
test
in
add
ljmp
lcall
imul
pushf
sub
insl
sbb
xor
xor
ja
xchg
movsb
or
pop
adc
jno
data16
psraw
add
cmp
or
mov
ret
xchg
rorl
jne
add
in
or
shr
or
push
ljmp
imul
loopne
mov
mov
mov
ja
out
add
cmp
scas
addl
out
inc
jnp
mov
xchg
andl
cmp
icebp
in
inc
or
add
inc
rolb
or
mov
jle
add
scas
pushf
ret
out
push
cmp
mov
jne
mov
scas
mov
jg
mov
xor
aaa
movb
sbb
jle
daa
ljmp
cld
and
add
xor
ljmp
pop
fdivp
mov
xchg
movsb
mov
shr
mov
and
mov
popa
cwtl
shll
and
jp
add
add
leave
popf
popa
sub
add
mov
adcl
dec
arpl
push
scas
ljmp
out
sbb
nop
lock
push
fisttpll
mov
movl
push
in
enter
ss
insl
ficompl
mov
push
loop
loopne
cmpsb
xor
clc
push
add
add
inc
jmp
sub
push
cmc
mov
nop
mov
sub
or
sub
push
jb
nop
outsb
loope
nop
outsb
fldcw
push
scas
push
in
loop
nop
clc
fs
loopne
shlb
das
testb
xor
sti
mov
push
inc
sti
in
add
fs
add
lds
pop
repz
pop
push
add
imul
or
xor
cld
incl
or
fdivrl
clc
jge
lods
push
clc
mov
or
xchg
clc
add
push
mov
cmp
mov
cmp
lcall
xchg
adc
xchg
imul
mov
cmc
xor
xchg
or
scas
dec
les
mov
add
add
or
adc
lds
outsl
cli
stc
or
and
shll
dec
and
arpl
sbb
leave
outsb
adc
cmp
je
jmp
cmpb
add
roll
xchg
mov
inc
lods
inc
arpl
movsl
dec
test
jno
jno
scas
addl
repz
jge
lods
stos
xchg
decl
ljmp
xor
inc
dec
loop
dec
ss
stos
adc
adc
mov
jae
add
dec
push
jmp
inc
ss
cld
inc
xchg
popa
popf
jae
xchg
fisttpl
xlat
sub
mov
add
mov
scas
add
mov
xor
add
add
popf
jae
ljmp
sub
test
outsb
outsb
lret
xor
insb
and
cltd
ljmp
jb
aas
jo
xchg
sbb
inc
clc
mov
hlt
scas
lock
jge
dec
or
mov
jmp
je
or
stc
add
push
movl
sub
add
add
xchg
add
pop
mov
sub
or
lods
or
lods
adc
rcrl
sbb
jb
xchg
seta
test
mov
test
fcompl
fidivl
jae
cmp
outsb
adc
ret
and
cmp
add
mov
setae
call
clc
aam
ds
add
add
mov
jle
push
fildl
pop
in
adcb
sarl
clc
test
mov
push
mov
inc
ret
in
add
imul
enter
xchg
in
xor
stc
js
mov
fdivrl
cmpl
es
jbe
pop
push
js
scas
notb
sub
adc
xchg
add
sub
jae
dec
adc
jg
cmp
test
inc
ret
call
aad
icebp
outsb
add
cmp
subl
or
rclb
xchg
add
sub
cmp
add
adc
repz
push
mov
push
xor
mov
mov
test
in
cli
das
jmp
lcall
test
mov
cmp
ljmp
scas
ljmp
scas
imul
movsl
jbe
add
imull
push
xchg
cmpl
test
divl
xchg
or
mov
jl
xchg
std
loop
dec
add
jmp
inc
add
ljmp
rolb
stos
cmpb
add
sub
cld
jnp
insb
add
xchg
xchg
jmp
add
ret
ds
ja
ljmp
fiaddl
jmp
stos
icebp
test
ljmp
ds
clc
sahf
movsl
cmp
xor
hlt
xchg
repnz
clc
jmp
jne
clc
movsb
mov
lcall
stos
ljmp
mov
xor
jmp
arpl
cmp
leave
lock
pop
in
mov
cmp
jg
jbe
js
fwait
lock
test
cld
dec
fidivrl
inc
jnp
fldl2t
pop
out
add
les
mov
insl
or
push
jmp
aaa
cmp
xchg
or
adc
decl
imulb
jge
xchg
cld
dec
fidivrl
inc
sti
sbb
mov
add
les
mov
cmc
xor
loopne
movb
call
aaa
cmp
lea
subl
add
cmp
mov
cmpb
aas
cmpl
push
or
jmp
cli
fadds
loopne
cmp
insb
movsl
adcb
add
add
fucomi
or
jl
push
and
cmpb
addl
cli
adc
adc
jae
cli
fcoms
cli
enter
stc
pusha
aad
sub
imul
or
xor
adc
cs
adc
insl
lret
orl
mov
mov
lods
mov
add
add
fidivs
add
aam
call
add
mov
imul
data16
push
andl
popf
add
mov
roll
outsb
clc
pop
adc
imul
ljmp
sub
jno
cmc
data16
ljmp
shll
jno
add
add
imul
jp
je
sub
sbb
cltd
fsubrs
es
sbb
outsb
dec
in
inc
jmp
insb
in
testb
jp
add
sbb
adc
mov
add
sbb
outsb
hlt
sub
add
xchg
xor
sahf
ret
inc
cmc
and
rcl
mov
push
imul
imul
push
jg
lock
movsl
cld
pop
sbb
mov
xor
repz
ja
xchg
or
xchg
or
mov
int
dec
jne
and
outsb
cmp
mov
fiaddl
push
mov
call
repnz
jne
adc
aas
test
call
add
stos
add
outsb
adc
decl
in
outsb
cmp
stos
mov
insb
cmp
mov
rcr
js
sbb
inc
cmp
push
je
adc
insl
sbb
adc
pop
scas
xchg
js
aam
call
je
adc
scas
xchg
add
sub
cli
test
lcall
xchg
jmp
jle
js
cli
test
jnp
addl
add
cmc
mov
sbb
cli
push
adc
xchg
add
sub
mov
call
in
jmp
cli
adc
push
sub
adc
pop
sbbb
add
jg
rcrl
inc
jbe
jg
push
out
imul
daa
add
mov
pop
imul
add
cmpsl
jg
andl
test
add
xchg
lock
imul
movsl
data16
fs
jns
ljmp
push
jg
les
aaa
mov
xor
or
movsb
imul
jg
lods
mov
xchg
or
neg
addb
out
adc
repz
clc
jmp
pop
test
add
add
push
inc
inc
jb
aad
test
clc
jbe,pn
data16
xor
push
sbb
scas
ljmp
std
cmc
or
clc
std
mov
inc
aad
movsb
ljmp
fidivrl
lods
outsl
inc
iret
fldl
test
mov
jl
pop
jbe
std
clc
mov
jge
lahf
cmp
popf
es
rolb
add
add
fnstenv
push
and
inc
fcmovne
ret
xlat
sti
call
pop
insb
shlb
cmp
mov
cld
push
xor
repnz
shlb
std
cmp
decl
cmp
fucompp
mov
mov
cmp
jmp
sti
cmp
popf
or
push
inc
testl
or
sti
incl
add
scas
stos
adc
and
mov
add
mov
int3
ret
dec
cmc
incl
pop
insb
scas
test
adc
inc
nop
ja
mov
test
ds
ja
fld
or
cli
rorl
lret
rolb
lea
jae
jne
fmuls
sub
jne
xor
xor
mov
adc
sub
cli
mov
inc
lcall
push
jae
jb
and
or
sbb
add
dec
mov
shlb
or
push
jne
mov
xchg
add
cmpsb
mov
and
push
jp
xchg
xchg
add
out
mov
cld
repz
js
mov
sarl
ljmp
and
ljmp
add
add
stos
shll
pop
divl
add
add
adc
imulb
out
out
mov
inc
arpl
inc
fucomp
or
add
push
hlt
add
jmp
jg
jge
leave
and
lock
lods
out
scas
es
loope
or
outsb
inc
xor
and
scas
mov
lahf
mov
scas
imul
push
push
shrl
negb
lahf
notb
mov
xchg
stc
or
jne
sub
ljmp
cmp
mov
adc
roll
incb
add
push
cld
call
cs
or
clc
incl
add
add
add
cmp
or
push
paddb
popf
push
ljmp
sbb
dec
mov
mov
scas
push
push
int
inc
aad
outsb
sbb
mov
or
or
inc
js
pop
cwtl
aas
js
xor
test
mov
cld
mov
or
jne
or
dec
jb
jmp
adc
add
xor
push
aaa
shr
mov
cmp
movsb
addl
daa
add
or
incl
scas
or
call
and
add
pop
mov
out
clc
mov
rcr
aas
scas
and
pop
lods
ror
cmp
clc
cli
cmp
test
mov
movsb
addl
xchg
cld
pop
cli
cmp
addr16
nop
scas
add
or
sbb
jp
int3
sub
insb
fcmovbe
jmp
fbstp
adc
movsb
mov
cld
dec
scas
insl
and
stos
std
sub
add
js
iret
adc
jns
into
out
mov
jmp
lret
lock
adc
add
std
repnz
and
mov
sbb
out
cmp
daa
insl
sub
ljmp
imul
aaa
cmp
scas
ljmp
out
push
test
pop
cmp
ficomps
or
stos
jae
loope
fwait
dec
mov
lcall
loop
je
fs
in
rolb
add
add
clc
pusha
repz
mov
nop
pop
clc
jbe
cs
ficomps
sbb
test
sarl
add
rorb
xchg
sub
jae
loope
stos
dec
mov
incl
icebp
cmc
jle
push
sbb
fisubrs
jg
add
icebp
jp
lahf
in
call
fimuls
inc
ljmp
ljmp
add
outsb
sbb
cmp
xor
scas
clc
ljmp
adc
outsb
or
cmp
mov
add
inc
sbb
pusha
add
dec
sub
or
sbb
inc
push
pusha
jnp
nop
cld
jne
jo
xorb
adc
enter
xchg
in
sar
cmp
lret
scas
fdiv
pop
xchg
hlt
dec
cli
jns
or
fs
ljmp
or
popa
test
pop
mov
call
or
add
adc
jecxz
ja
mov
fisubrs
mov
ja
daa
xchg
pop
add
out
cmp
dec
xchg
ljmp
dec
rcrl
addl
mov
mov
jne
xchg
sub
and
add
add
loop
mov
jb
aas
scas
ljmp
add
arpl
fbstp
adc
out
push
loop
popa
mov
and
jecxz
mov
fildll
insl
mov
scas
ljmp
cmp
jmp
ljmp
jecxz
cmp
jp
push
jge
out
mov
pop
add
jl
out
out
add
add
popa
out
adc
and
jae
shll
adc
imul
add
lods
ret
roll
add
adc
push
test
xchg
add
mov
or
sbb
pop
test
stos
xchg
dec
out
dec
jecxz
mov
incb
cmp
jo
fs
loopne
sbb
mov
mov
add
add
adc
inc
cmp
cli
testb
das
imul
lods
jae
adc
sub
fldenv
jmp
aad
aas
push
pusha
das
dec
add
lods
imul
imul
sbb
rcrb
cld
fadds
mov
scas
jmp
xor
lods
jmp
psraw
testb
outsl
mov
xchg
cmp
push
aam
aam
insb
xlat
or
in
or
xchg
ret
jne
mov
sbb
add
push
mov
mov
or
cmp
jg
repnz
dec
or
mov
sub
sbb
or
ror
pop
adc
and
pushl
inc
inc
test
mull
sub
add
ret
icebp
fsub
or
inc
cli
fwait
pop
push
inc
scas
cld
ret
inc
sbb
mov
add
jb
and
cwtl
and
add
std
out
cli
mov
or
out
mov
jae
aas
scas
test
pop
popa
push
icebp
sbb
mov
icebp
or
jne
out
push
pop
cli
daa
adc
jmp
add
sub
scas
icebp
addr16
xlat
jg
ljmp
loop
cs
test
ljmp
add
or
mov
in
mov
int
mov
lret
jmp
in
test
add
sbb
inc
mov
push
cmc
sub
fs
jnp
push
ljmp
add
add
add
add
outsl
xchg
out
ror
outsl
ja
mov
outsl
jmp
jb
xchg
xchg
clc
push
xchg
mov
outsl
outsl
mov
ljmp
add
ljmp
mov
mov
outsl
outsl
xor
jb
or
lret
je
sub
addr16
cmc
insl
pop
stc
pop
xchg
jae
in
lret
shrb
clc
mov
fwait
out
add
lods
addr16
test
outsb
jo
in
cmpsl
jbe
cli
shlb
fisttpl
add
jecxz
pusha
push
outsb
sbb
jg
cmp
loopne
insl
push
cld
test
ljmp
jnp
outsb
and
ljmp
sub
or
pop
outsb
adc
add
add
jb
in
lea
cld
test
insl
clc
dec
movsb
cld
mov
cwtl
sti
jne
pop
dec
hlt
pusha
xchg
call
call
mov
jne
add
hlt
fidivl
inc
sti
int3
ds
scas
xlat
inc
out
or
jnp
cmp
pop
movsl
int
insl
mov
lea
shrb
pop
test
gs
jne
pop
or
add
add
push
mov
or
and
pop
add
sti
outsl
xchg
jns
cld
push
jno
hlt
cli
jecxz
arpl
jmp
pop
je
mov
scas
andl
cmp
ret
xor
dec
pushf
arpl
mov
je
sbb
pop
orb
mov
popl
ret
ss
pop
testb
enter
clc
mov
es
inc
iret
insb
inc
adc
dec
rcrb
sbb
sub
das
inc
xchg
call
pop
xor
pop
enter
daa
enter
mov
pop
fcmovbe
arpl
imul
mul
pusha
ret
ss
insb
movl
daa
push
add
stos
adc
rcr
scas
ljmp
add
mov
stos
jmp
insl
lcall
jb
xlat
cmp
push
out
into
inc
mov
aas
int
sub
ret
mov
mov
push
repnz
loopne
mov
cmp
imul
push
cmp
push
test
add
push
inc
imul
dec
fs
out
rorl
pusha
pop
sahf
outsl
outsb
loope
push
fildl
call
fs
add
out
cmp
push
in
sbb
jl
daa
or
pop
add
in
sub
sqrtps
in
pop
add
in
or
rcpps
lcall
push
or
lret
cmp
mov
incl
add
add
and
cmp
push
adc
push
xor
fcmovu
in
pop
push
pop
insb
dec
outsl
in
lret
push
jne
xor
add
scas
adc
inc
and
jno
xor
jae
push
je
lods
std
cli
xorl
rolb
pop
testb
sbb
jmp
mov
xor
add
add
add
lret
mov
push
inc
ret
xor
aaa
pop
jg
mov
cli
mov
xchg
push
or
xor
jno
lret
adc
and
lock
and
int3
dec
push
dec
fdivp
cli
mov
repnz
imul
ljmp
scas
push
mov
sbb
and
clc
movsb
ja
hlt
push
imul
jg
sbb
jae
cmp
mov
mov
push
dec
fmul
aam
pop
sbb
je
xchg
fsubp
mov
das
fdivrs
fdivp
imul
pop
sub
xchg
xchg
push
arpl
add
jno
daa
push
add
xor
stc
mov
cld
or
clc
fiadds
add
add
jno
into
xor
ljmp
lretw
clc
and
outsb
int
push
rclb
sbb
fnstcw
add
dec
andl
fstpt
jmp
lods
ljmp
mov
jb
or
lods
ljmp
mov
add
add
mov
pusha
push
in
ja
dec
imull
int3
xor
test
aas
adc
fwait
test
jb
call
mov
sti
in
jno
cmp
cmp
dec
sub
pop
ja
cmc
jge
and
jmp
inc
repnz
jge
xor
mov
sar
imul
subb
lock
sti
and
paddusw
imul
pusha
outsb
roll
xchg
or
out
sti
ljmp
arpl
cmp
push
add
mov
push
or
ja
fimuls
sub
pop
cli
sub
test
pop
mov
scas
push
add
lds
test
add
insl
jp
push
push
jg
mov
js
int3
je
jle
add
add
xor
test
pop
cli
mov
sarb
pop
enter
sbb
jmp
mov
cli
test
jg
mov
mov
adc
or
je
pop
add
ljmp
fdivr
or
push
imul
addb
outsb
addr16
adc
bnd
das
arpl
fstpl
mov
or
addr16
mov
mov
ret
xchg
sub
outsb
mov
in
loop
enter
popf
pop
out
mov
outsl
pop
push
rorb
pop
cmp
je
movsb
fdivp
mov
inc
shrb
fdivp
imul
rcr
out
es
add
or
leave
lods
jp
imul
add
add
xchg
xor
fs
sub
fsubl
lock
xchg
call
arpl
test
lock
call
arpl
test
call
arpl
stos
lock
call
arpl
mov
jo
cmpsl
xchg
push
arpl
add
sub
sbb
add
add
sub
aam
sub
mov
xchg
sub
add
sub
int
sub
scas
nop
sub
push
nop
sub
cmp
sub
clc
mov
clc
xchg
push
sub
clc
mov
dec
sub
clc
out
ds
clc
add
add
clc
dec
add
sub
clc
repnz
add
jge
clc
lods
or
clc
adc
clc
mov
loopne
mov
ljmp
mov
sti
int3
mov
pushl
add
lcall
add
mov
fcomps
ret
incl
ret
incl
insl
ret
incl
push
add
lods
inc
add
test
dec
add
inc
decb
mov
aas
icebp
adc
cmp
sti
sbb
or
and
mov
or
sub
adc
sub
adc
int3
out
mov
divb
ficoml
sbb
mov
sbb
and
mov
sbb
add
add
and
shrl
int3
and
scas
rorl
cmpsb
roll
sahf
sar
xchg
shl
lods
shr
movsl
shl
movsb
rcr
movsb
rcl
mov
leave
mov
add
out
pusha
push
xor
cwtl
xor
fsubs
outsl
pusha
and
outsl
pusha
ljmp
pusha
inc
sbb
js
outsl
pusha
mov
outsl
pusha
in
outsl
pusha
jmp
outsl
pusha
inc
pop
outsl
pusha
inc
aaa
outsl
pusha
push
and
push
adc
mov
mov
pop
arpl
in
pop
loope
in
pop
movsl
in
pop
cwtl
popf
in
pop
test
in
pop
mov
mov
in
pop
shrl
adc
clc
pop
sbb
clc
lock
clc
cmp
sub
push
jecxz
clc
insb
jecxz
clc
add
rolb
add
hlt
incl
call
jmp
push
or
cli
push
int3
mov
dec
loopne
pop
mov
pop
mov
je
call
clc
add
jnp
add
setnp
add
add
adc
in
push
fsubr
add
lcall
call
stos
dec
add
mov
mov
cli
mov
iret
int3
cli
mov
pop
mov
xchg
ret
fidivl
jns
dec
mov
fs
cli
imul
inc
mov
sti
sbb
inc
sub
aas
scas
rorb
jae
mov
push
dec
xchg
push
addl
add
add
movsb
mov
orl
rorl
scas
ljmp
icebp
sub
xchg
jmp
gs
jae
cmp
xchg
add
out
inc
xchg
jmp
pop
sub
lods
fiadds
push
xor
lcall
test
push
cmpsl
data16
fwait
popa
mov
jno
sti
outsb
push
in
ja
lret
inc
es
xor
arpl
mov
sar
shrb
enter
fists
test
jl
add
ljmp
fs
pop
clc
xchg
push
cmpsb
stc
pusha
ss
xchg
ljmp
clc
outsb
sub
data16
pusha
mov
clc
push
adc
mov
add
add
mov
pusha
es
cld
fs
icebp
loop
add
call
inc
std
ret
fs
ljmp
push
jmp
test
insl
inc
test
push
or
ljmp
pop
call
xor
jae
jmp
add
mov
add
sarl
incl
add
add
mov
add
ffree
rorl
mov
paddusb
mov
sti
in
add
aas
mov
stc
mov
es
mov
es
ljmp
xor
cmp
jge
sbb
jg
and
pop
scas
lret
or
xchg
leave
push
xchg
dec
or
or
add
add
in
cmpb
test
sbb
test
add
mov
jno
cli
ret
sbb
scas
fsubrl
cmp
push
cli
xchg
and
call
jno
add
int3
mov
sti
pop
stc
jne
and
cltd
aam
stos
repnz
lds
ljmp
cwtl
cli
aaa
pop
or
add
jmp
jge
pop
fmuls
ljmp
add
pusha
shrb
pusha
xor
sbb
mov
insl
nop
sub
xor
push
sub
mov
ret
xor
out
pop
add
ret
cmp
imul
insl
orl
xor
dec
xchg
pop
imul
ljmp
add
call
cmp
dec
daa
add
ljmp
mov
or
repnz
dec
xor
out
lods
loop
pusha
negl
and
insl
nopl
roll
add
ljmp
call
jmp
jmp
out
mov
jno
lea
stc
insb
test
sbb
inc
xchg
sub
mov
inc
add
sub
clc
hlt
dec
lods
push
cmp
mov
aaa
jl
xchg
sub
inc
cs
add
aam
lea
es
push
lock
or
loopne
andb
sarb
sub
sti
push
loope
ja
rolb
cmp
inc
adc
push
and
call
in
insl
adc
add
pop
lahf
sti
pushl
xor
inc
in
sub
fs
cmp
cmp
ss
inc
or
lock
sti
psubw
or
dec
mov
add
adc
mov
mov
or
inc
or
pusha
subb
jbe
ss
shl
pop
gs
scas
or
or
add
add
flds
scas
in
mov
mov
inc
pop
pop
sub
popl
xchg
inc
adc
lret
sti
mov
or
aas
mov
outsl
inc
cli
and
aaa
or
ror
xchg
lods
inc
xchg
mov
ret
movsl
repz
xor
mov
pop
jmp
js
add
or
in
mov
xor
dec
xor
ret
fsubp
shll
out
and
insl
xchg
rcl
stc
orb
mov
push
dec
scas
fdivp
xchg
stos
mov
in
xor
cmpsb
push
std
pop
out
sub
bound
leave
mov
out
mov
sti
pop
out
test
fiaddl
add
adc
pop
cmp
cmpsb
xor
add
add
scas
add
mov
or
ljmp
mov
sbb
cmp
pop
inc
in
loope
sub
push
ljmp
mov
sbb
add
test
jmp
jmp
notb
adc
add
cmp
movsl
clc
push
lea
xchg
inc
sub
test
push
jb
add
add
bound
and
mov
data16
sbb
hlt
push
xor
add
pushf
stc
xlat
or
scas
xchg
loopne
push
aad
mov
pushf
inc
cld
decl
call
cld
ljmp
lods
sti
in
pushl
ror
add
call
sti
ljmp
das
aad
add
call
daa
fldt
add
add
cmp
decl
mov
xchg
jae
mov
xchg
pushl
sti
ljmp
fmull
call
add
add
scas
test
cmp
mov
sub
mov
xchg
into
sar
add
rcr
jbe
loop
dec
cli
xchg
adc
in
add
popf
xlat
js
and
imul
scas
mov
mov
mov
ss
rcll
lods
dec
or
in
jge
prefetchnta
fadds
cli
pop
inc
push
jge
outsb
jl
cli
scas
std
out
jle
add
test
pop
mov
je
ljmp
insl
insw
pcmpeqw
pop
pop
dec
aas
dec
cwtl
xor
sti
dec
in
adc
add
stc
imul
inc
push
pop
iret
icebp
insl
lea
jl
pop
add
push
int
or
ljmp
in
sub
jmp
ljmp
and
and
iret
into
add
pusha
push
add
ljmp
ss
mov
movsl
ficomps
ljmp
add
mov
inc
mov
test
add
add
xchg
stc
push
icebp
push
push
bound
sbb
shl
push
or
insl
push
andl
jmp
dec
dec
push
clc
push
movsl
pop
sub
fdivl
dec
inc
jmp
jo
add
add
ret
addl
in
xor
je
mov
or
inc
sahf
adc
add
add
mov
pusha
cli
in
in
add
dec
leave
inc
pop
clc
pop
hlt
incb
mov
xchg
loope
daa
shlb
inc
xchg
cwtl
xor
nop
clc
ret
in
adcl
inc
or
pop
mov
aam
adc
out
dec
ret
sub
and
leave
movsl
sti
leave
inc
push
clc
push
mov
pop
lock
push
or
jge
mov
out
pop
cmp
or
scas
fiadds
sub
testb
pushf
enter
inc
cmp
leave
shr
xor
lods
xor
xor
xchg
ret
dec
call
or
pop
jne
scas
inc
add
call
add
add
inc
add
out
inc
add
out
inc
js
scas
inc
add
mov
je
cmp
stc
inc
les
sub
add
inc
add
cs
jns
mov
mov
push
adc
inc
fmulp
int
xchg
sti
sbb
frstor
xchg
dec
ljmp
movsb
repnz
add
pop
add
repz
add
xor
lahf
sti
xor
stos
pop
xor
stos
repz
stos
jmp
sub
sbb
ljmp
jmp
sar
ljmp
stos
loop
push
push
out
mov
imul
push
pop
cmp
mov
pop
aas
in
clc
cmp
into
or
add
ljmp
jmp
mull
sub
pop
add
inc
in
int
ds
add
in
adc
cmp
dec
xor
push
push
xor
loope
fucomi
inc
out
mov
inc
adcb
mov
mov
mov
rcl
jmp
clc
jmp
ret
push
dec
dec
in
call
dec
and
lcall
xorb
inc
xor
sbbl
or
movsb
loop
add
cmp
movups
add
xchg
or
pop
icebp
cmp
pop
and
adc
enter
pop
cmp
lcall
mov
insl
call
cmp
add
add
stos
sti
test
clc
jge
adc
add
jg
scas
cmpsl
jmp
sub
cld
loope
mov
roll
je
enter
idiv
out
outsb
inc
cli
sub
add
xor
pop
mov
push
js
icebp
inc
adc
dec
jmp
adc
lock
cmpsb
cs
and
sti
pop
fmul
iret
sub
add
add
outsb
inc
push
xor
inc
mov
nop
and
fmull
je
clc
test
adc
out
fsub
call
and
cmp
push
call
sub
pop
mov
loop
out
fidivrl
mov
inc
and
push
popa
push
cwtl
out
dec
jae
sub
pop
nop
adcb
add
add
or
je
push
sub
dec
ljmp
insb
hlt
add
pop
cli
add
ljmp
dec
ljmp
ljmp
scas
ljmp
xor
add
lods
jo
add
mov
mov
ljmp
push
ljmp
mov
or
ljmp
sub
outsl
in
lods
ljmp
aam
clc
xchg
addr16
jbe
pop
jmp
and
scas
mov
add
xor
jmp
cli
nop
add
out
jae
jmp
pop
sar
push
jno
push
mov
mov
inc
add
inc
ret
jle
pop
mov
or
ljmp
inc
jns
pop
hlt
js
sti
sub
pop
add
je
pop
lods
inc
adc
cld
mov
out
repz
call
pop
jge
adc
cld
push
or
dec
jmp
insl
out
add
add
clc
call
or
jmp
jne
jmp
pop
jge
lock
push
nop
addb
fisubl
call
add
mov
scas
aad
je
and
popa
daa
xlat
cwtl
sti
adc
jmp
sub
cmp
stc
xchg
std
ljmp
mov
xor
sbb
xchg
ret
into
mov
sarb
sub
addb
cmpsb
mov
cwtl
jo
cs
mov
xor
sbb
cmp
outsb
aaa
mov
xor
push
les
mov
movsl
inc
cli
dec
mov
aam
jno
movsl
pop
lods
ljmp
testl
add
sub
cmp
xor
pop
lahf
insl
xchg
inc
xlat
cmp
inc
push
and
faddl
adc
ljmp
jb
mov
loop
ret
mov
out
mov
scas
ljmp
jmp
cmpb
repnz
xorb
scas
ljmp
outsl
mov
add
ljmp
sarb
out
ljmp
jp,pn
ds
push
inc
clc
jmp
in
jbe
sbb
lds
lock
jle
stos
outsb
mov
lods
ljmp
out
cmp
hlt
sub
test
lods
aam
add
sbb
test
cld
out
dec
in
loopne
stos
lcall
cmp
jne
xor
and
lock
or
clc
pop
jl
outsb
inc
xor
testl
mov
mov
fcmovne
sub
dec
addl
inc
ljmp
les
mov
add
add
call
push
hlt
push
aaa
jg
lret
das
pop
leave
fbstp
cmp
pop
mov
call
jne
cmp
scas
pop
rcr
add
xor
scas
jno
mov
push
add
jmp
jne
or
sub
mov
sub
orl
lock
sbb
and
data16
add
cmpsb
into
rcrl
pop
stc
sub
test
out
mov
or
scas
call
sub
mov
or
or
mov
jns
mulb
testb
cmp
push
ja
add
add
sub
or
push
xor
adc
test
add
add
js
lods
ljmp
mov
adc
scas
ljmp
cmp
jne
pop
push
rorl
sub
lea
mov
dec
adc
inc
lds
sub
or
cmp
call
pop
cmp
push
fnstcw
jmp
sub
scas
push
incl
add
add
mov
jmp
ljmp
shrl
xchg
push
lret
je
sub
rcr
xchg
add
lods
inc
outsl
in
xor
aad
insl
inc
not
movsl
mov
push
pop
adc
jb
dec
divb
jbe
jge
add
xchg
inc
mov
cwtl
sbb
les
jmp
push
or
jmp
mov
jmp
add
inc
clc
jo
and
stos
ljmp
decl
sahf
xorl
xor
sub
incb
add
cmp
cmp
std
mov
xchg
mov
add
hlt
mov
mov
aas
jne
inc
sar
push
in
mov
aas
jne
push
mov
cmpb
add
mov
cmp
add
shlb
outsl
je
test
jmp
add
or
test
xchg
or
jmp
insl
repz
in
sbb
add
adc
clc
jae
jne
jg
sbb
fcmovne
leave
out
xor
mov
cmpsl
mov
rcll
fdivrl
test
add
push
lret
fnstenv
repz
sub
js
das
xchg
test
mov
test
shl
incb
inc
cli
pop
stc
rcll
mov
ds
or
fiadds
das
xor
int
rep
jl
out
shrb
cli
lods
pop
mov
test
test
movsl
xchg
repnz
filds
fnstsw
xchg
leave
mov
xor
aaa
sbbb
addr16
add
test
int
push
bound
push
jno
das
xor
jb
xchg
sub
pop
xor
sbb
xchg
cmp
xchg
inc
incl
xchg
aas
out
mov
add
cmp
xlat
xor
sub
js
lods
incl
add
add
xchg
jae
cs
or
ljmp
js
imul
pop
cmp
xchg
mov
mov
mov
out
jmp
movsl
icebp
in
sbb
in
test
int3
xor
adc
lcall
mov
lods
add
es
inc
lods
push
loopne
jle
push
mov
icebp
ljmp
add
add
add
mov
jae
add
sub
mov
cmp
inc
jmp
jb
jge
mov
out
add
popa
out
xchg
jmp
loopne
in
stc
sti
mov
stos
ja
dec
out
dec
push
pop
jg
push
xor
adc
cmpsb
or
iret
add
push
push
out
stc
sti
movl
add
add
add
add
stc
idiv
inc
jmp
sti
mov
fidivrs
pop
mov
lock
in
add
retw
jmp
dec
test
mull
decl
add
scas
test
xor
shl
push
popa
aam
adc
and
jmp
test
outsl
cltd
pop
xor
fidivl
jae
shrb
add
lock
repz
lret
xchg
pusha
lds
mov
push
add
inc
mov
cli
dec
lahf
mov
movsl
xor
add
out
shlb
lea
xor
sbb
dec
call
push
sbb
in
xor
popa
ja
add
dec
xor
jle
fbstp
fstpt
iret
aam
jmp
xor
gs
add
sub
cmp
sti
inc
pop
push
fwait
cmp
add
mov
test
mov
mov
outsl
sbb
sbb
lcall
adc
sub
insl
scas
xor
sti
cmp
cmpsb
cmc
mov
sbb
xor
imul
sbb
dec
fildl
jno
sbb
cmp
xor
movsl
cli
popf
lods
insl
add
add
add
inc
out
inc
push
insb
sub
sti
jle
jmp
rol
xor
divl
mov
or
aad
mov
or
mov
or
stos
push
cmp
lods
mov
push
xor
or
insl
cmp
in
jo
push
jle
clc
xor
add
add
add
in
jmp
ljmp
pop
out
add
out
dec
jne
outsb
inc
clc
mov
out
add
test
xlat
jl
lock
xchg
mov
decl
add
lret
icebp
add
xchg
mov
or
add
scas
xor
push
inc
push
mov
test
cmp
add
add
movsl
js
lock
loopne
mov
fadds
rol
mov
loopne
scas
cmp
cli
sub
stc
test
inc
add
and
daa
cli
xlat
idiv
ljmp
mov
leave
pop
daa
gs
repz
sbb
ljmp
clc
mov
push
and
inc
cltd
xchg
daa
mov
push
daa
cli
mov
fwait
incl
jbe
cli
jno
scas
pop
jno
mov
add
aas
ljmp
std
or
shrl
cli
cmp
jno
xor
daa
mov
or
cs
adc
push
nopl
lods
testl
in
out
mov
lahf
out
cli
fsubrl
add
sti
stos
jns
inc
sahf
xor
add
add
aaa
pop
inc
inc
fldt
fldl
or
aaa
sub
sub
xchg
jae
sub
imul
into
mov
sub
int3
push
sti
mov
or
sub
xor
aas
xchg
mov
add
push
mov
std
imul
xor
rolb
add
add
das
popl
insl
mov
push
sub
xor
xchg
dec
push
cmp
outsl
mov
fs
clc
cmpsb
sub
xchg
imul
sub
pop
rcrb
insb
loopne
divl
popf
jmp
pushw
cli
mov
pop
addr16
pop
dec
adc
add
add
cmp
mov
jp
in
add
pop
cld
mov
cmp
jb
sti
jne
shr
mov
add
fucomi
loopne
inc
jae
and
std
inc
xlat
imul
insb
out
jne
insb
outsl
sub
push
sbb
add
xchg
insb
inc
clc
sti
cmp
roll
add
add
add
dec
jmp
pop
push
fiaddl
push
cmp
out
std
ret
ja
cli
popf
out
adc
xchg
mov
cld
andl
add
mov
mov
test
nop
mov
mul
mov
and
add
fldt
jbe
add
add
inc
sti
test
inc
add
add
jp
push
stos
adc
xchg
xchg
or
pop
repnz
jne
pop
shrl
scas
ljmp
add
jmp
cmp
stos
add
enter
test
mov
mov
inc
dec
fxtract
xor
pop
add
jb
into
jmp
fprem
and
gs
cmp
mov
or
dec
popa
mov
mov
and
pushl
cmc
sub
out
mov
shr
mov
xor
mov
add
inc
xchg
dec
je
adc
pop
xchg
int
mov
insl
xor
dec
aam
clc
cltd
cmp
idivl
sbb
or
xor
push
cmp
clc
cld
jne
inc
jmp
adc
lahf
div
xchg
clc
push
shlb
std
xchg
xor
xor
mov
aad
imul
imul
jle
xchg
decb
mov
add
cmp
lret
inc
add
or
push
push
clc
mov
cld
push
xchg
cmpsb
ja
addl
decl
push
clc
push
jnp
push
add
dec
call
xchg
icebp
and
xchg
push
pushl
push
jmp
jg
call
push
cmp
pop
ljmp
repz
roll
outsl
out
xor
test
stos
ljmp
dec
in
repz
scas
pop
or
cmp
sub
or
imul
dec
enter
inc
orl
je
int3
xor
mov
cli
xor
pop
xor
xchg
mov
adc
int3
in
xchg
jnp
xorb
add
adc
xchg
test
jle
orb
inc
add
movsb
jmp
subb
push
xchg
ljmp
add
sub
sub
imulb
dec
ljmp
out
inc
push
push
outsb
rolb
mov
bound
add
repnz
and
movsl
pop
sub
scas
ljmp
add
ljmp
add
add
arpl
jp
out
sub
sahf
into
into
jle
xchg
jle
das
popa
rol
fbstp
sub
xchg
arpl
sbb
or
faddl
push
test
stos
add
or
pop
es
rcrb
mov
bound
xlat
xchg
lods
inc
xlat
insb
mov
das
mov
add
fnsave
clc
mov
pop
aas
jmp
pop
std
stc
fldl
outsl
enter
dec
in
movsb
rcrl
std
pop
or
call
cltd
clc
aam
flds
sub
xor
clc
bound
mov
scas
mov
sbb
xchg
xchg
inc
cmp
aaa
jbe
sbb
cld
mov
daa
pop
pop
push
lods
adc
and
jl
call
sub
dec
mov
push
pop
mov
sbb
add
jg
inc
jmp
push
mov
iret
sbb
in
out
cmp
xchg
mov
add
pop
test
pop
push
stc
je
push
and
imul
lret
sub
mov
add
add
push
adc
jno
cmpsl
das
loope
lcall
enter
pop
mov
sub
pushf
lods
mov
inc
jle
push
lods
mov
cs
add
and
inc
xor
adc
xchg
hlt
cli
addr16
xchg
xchg
sub
xchg
add
pop
xor
outsb
inc
test
add
daa
dec
push
push
push
mov
imul
add
les
mov
mov
sbb
test
repnz
ret
lods
or
aas
cli
mov
xchg
jae
or
arpl
sub
ret
adc
cwtl
cmp
cld
xorb
mov
lods
mov
in
mov
xchg
ss
push
stc
sub
ljmp
mov
loopne
pop
add
mov
popa
mov
pusha
sub
mov
nop
pop
and
popa
add
xor
insb
mov
push
xor
pop
mov
pop
shll
mov
cmpsb
data16
xor
mov
jge
lods
ljmp
fwait
xchg
fwait
clc
cli
pop
xor
pop
xor
xchg
aam
data16
addr16
roll
jmp
shrl
mov
sbb
sub
jmp
lods
das
outsb
sbb
dec
push
pop
lods
stc
adc
sub
mov
call
or
fadds
out
jnp
pop
xor
lods
dec
add
mov
jbe
mov
out
add
pop
test
push
jne
adc
add
add
scas
or
inc
sti
jae
pop
sti
adc
fdiv
clc
inc
outsl
les
xor
pop
push
dec
cmp
inc
pop
ja
add
ss
fildll
or
ja
adc
jg
mov
ds
ss
sti
adc
scas
xchg
inc
or
movsb
hlt
out
xchg
and
aaa
movsl
hlt
mov
dec
inc
mov
add
add
stc
mov
xor
inc
jmp
stc
adc
push
xchg
es
mov
divl
push
cltd
cmp
pushf
xor
cli
aaa
into
sbb
and
mov
aaa
scas
imul
mov
adc
cli
fwait
mov
out
aas
scas
adc
xchg
push
incl
hlt
sahf
and
add
add
adc
sub
xor
ljmp
jo
mov
or
scas
mov
mov
ljmp
mov
inc
cmpsl
xchg
mov
cmp
or
das
sub
push
push
sub
ljmp
fcomip
add
fcoml
and
xor
inc
movsb
outsb
jno
scas
ljmp
mov
lds
mov
jno
add
repz
ljmp
mov
ljmp
lods
ljmp
insl
sti
insl
jl
or
cmc
pop
xor
shlb
ret
pop
lret
inc
test
mov
sbb
dec
cmpsb
sbb
xchg
mov
jo
xor
add
mov
stc
call
mov
inc
jne
jne
pop
std
and
aaa
xor
cmp
mov
add
idiv
push
iret
sti
jne
xabort
pop
jmp
jl
or
mov
repz
das
cld
add
cmc
js
mov
clc
jne
add
pusha
jmp
pop
cmpsb
cmc
incl
add
add
jge
ret
and
jne
pop
outsb
lock
out
dec
push
aas
inc
mov
cmp
xor
pop
cld
call
loopne
aad
cld
notb
or
jmp
std
inc
pop
pop
push
hlt
scas
and
call
test
mov
mov
xor
lods
nop
sbb
pop
jb
inc
loop
mov
shrb
add
inc
dec
xor
out
adc
add
adc
pusha
jmp
inc
scas
sub
adcb
sbb
xor
adc
or
push
mov
adc
and
jg
mov
iret
std
xchg
or
pop
ljmp
mov
in
sbb
sbb
jae
or
daa
mov
push
fildl
scas
push
mov
stc
shlb
lods
ljmp
lea
mov
pop
hlt
xchg
imul
xchg
mov
cmp
xchg
mov
sbb
imul
push
out
sbb
les
sbb
xchg
jmp
dec
roll
push
xchg
and
xchg
cltd
std
push
daa
imul
les
testl
imul
xor
and
aas
insl
lock
mov
lock
aad
push
mov
dec
jl
rcrl
mov
in
xchg
sbb
pop
mov
xchg
fucomi
fidivrl
and
gs
cli
mov
shrb
mov
fimull
roll
mov
push
xchg
pop
push
ljmp
mov
mov
loopne
xchg
cld
cmp
adc
mov
add
pop
inc
push
pop
inc
decl
push
cmp
cmp
fisubrl
inc
and
inc
mov
dec
push
add
jne
or
add
add
cmpl
es
jae
les
ja
out
leave
pop
jp
inc
test
xchg
inc
xor
addl
scas
pop
js
std
jo
pop
daa
xchg
aas
scas
mov
sbb
rcrl
adc
pop
pushl
aad
test
adc
sbb
mov
stc
fsubrs
jmp
add
add
call
data16
mov
sub
imul
test
ja
in
loop
lea
xor
loope
incb
and
jle
jno
pushl
fs
xor
ret
ret
push
and
loopne
adc
inc
and
xor
ret
sbb
mov
add
add
jmp
shll
sahf
mov
lcall
sub
add
and
aas
mov
ljmp
icebp
jmp
nop
push
ret
ret
mov
pop
cmc
pop
mov
loop
lcall
sub
dec
icebp
add
das
mov
insl
int
add
add
sub
std
popa
fsubr
shlb
and
push
clc
rol
adc
and
aad
fucomi
cmp
clc
dec
cmp
cmp
mov
mov
add
clc
insb
sbb
sbb
leave
std
push
push
adc
sbb
aaa
mov
std
inc
shrl
inc
outsb
push
add
mov
adc
mov
sti
push
cld
fsubp
enter
sbbl
fcmovnb
inc
jg
arpl
test
imul
xor
out
mov
or
ret
mov
sti
inc
mov
andb
test
sti
lea
and
mov
and
daa
push
push
call
dec
jge
inc
jmpw
cmc
sti
push
dec
rclb
inc
push
mov
vfmsubaddpd
xchg
pop
xchg
loop
cli
adcl
repnz
scas
mov
dec
add
push
jne
add
adc
sbb
xor
cld
insb
adc
or
mov
addl
mov
out
add
add
shrl
xchg
pusha
cmpsb
cs
pusha
lods
jg
adc
lods
pusha
stos
add
add
outsb
sbb
pop
mov
lock
out
adc
adc
xchg
repz
ljmp
hlt
jmp
xchg
fidivrs
mov
call
cmc
idivl
jmp
sti
xor
repnz
add
add
mov
stos
scas
subb
add
mov
adc
push
pop
nop
jmp
xor
loop
ret
ret
loope
test
pop
and
cwtl
inc
outsl
popf
or
pop
stc
mov
stos
add
sub
jbe
add
inc
lods
mov
sub
adc
in
sbb
call
clc
sbb
faddl
pusha
mov
shlb
mov
clc
pop
dec
and
loope
faddl
insb
in
xchg
add
das
mov
std
cmp
push
jmp
push
inc
adc
pushf
testb
sbb
ret
in
mov
jle
cmp
imul
lods
mov
adc
pushf
jb
sbb
jne
cmp
or
pop
inc
push
jg
push
lret
or
out
push
cwtl
fwait
jge
insb
stc
sti
push
out
add
call
or
inc
jb
clc
call
insb
xor
stc
insl
or
rorb
js
daa
clc
cmpsl
xchg
cmp
dec
repnz
pop
pushf
mov
stc
sti
call
test
je
dec
mov
lea
out
incl
add
add
mov
scas
repz
jns
pushl
add
add
add
add
or
add
cmpl
mov
add
rcll
adc
adc
lcall
add
orb
add
xchg
and
add
adc
mov
outsb
add
xorl
cld
jmp
inc
add
mov
jl
rcll
scas
ljmp
shll
mov
push
ljmp
adc
xchg
enter
sub
or
ret
sbb
mov
sahf
out
cltd
jno
sub
cmc
mov
jmp
sbb
fwait
sub
scas
fsubs
lods
or
outsl
stos
cwtl
les
sar
pop
mov
into
decl
nop
imul
stos
inc
cwtl
sub
sub
in
mov
mov
lods
jno
mov
in
out
and
cmpsl
cltd
stc
mov
in
sahf
and
cmp
add
add
dec
jbe
adc
stos
xchg
stc
mov
es
add
add
pushf
or
aaa
adc
aaa
push
adc
pop
pop
pop
outsb
les
insb
jmp
mov
mov
in
test
nop
cmc
add
clc
mov
test
dec
call
inc
stos
je
pop
outsl
and
aad
add
add
add
and
pop
jmp
clc
mov
dec
test
repz
pop
in
shl
test
pop
push
lea
out
decb
outsl
mov
and
jmp
decl
in
ljmp
test
dec
call
lcall
add
add
add
xor
pushl
rcll
mov
add
popa
clc
lock
sbb
jg
or
and
jns
das
inc
fs
mov
xchg
dec
ds
scas
popa
sub
es
add
or
pop
dec
jne
out
ret
push
cli
cmp
cmc
xchg
js
push
xchg
add
mov
push
jmp
xchg
add
imul
sub
scas
ljmp
leave
jno
or
add
push
adc
pop
or
mov
sub
sub
arpl
lret
push
mov
scas
sbb
movsb
rorb
sub
out
push
lods
ljmp
add
ljmp
adc
inc
sahf
mov
sbb
shll
ljmp
scas
ja
sub
mov
pop
out
adc
lret
adc
jmp
gs
sub
idivl
mov
clc
fcoml
data16
mov
clc
mov
lods
adc
add
push
cs
insl
repz
add
mov
mov
mov
mov
das
sbb
mov
jmp
aaa
xchg
mov
rcrl
mov
test
jmp
add
leave
sbb
aaa
call
inc
jmp
and
xor
cld
data16
mov
loopne
inc
mov
int3
jae
pop
add
sbb
jg
inc
scas
add
pop
xchg
add
mov
sti
cmp
aam
test
push
mov
adc
inc
imul
sarb
dec
and
xchg
pop
and
stos
inc
and
push
xchg
stos
inc
and
mov
push
dec
mov
mov
mov
jmp
andl
jbe
xor
mov
and
inc
and
jbe
imul
add
add
add
mov
lret
popa
daa
inc
fsubs
daa
inc
fsubrs
push
xchg
or
inc
hlt
dec
push
cli
add
sar
lea
sti
mov
data16
ljmp
sub
sub
xchg
mov
roll
mov
out
stos
or
sub
loope
inc
push
repnz
dec
jmp
add
add
add
cmpsl
mov
loopne
add
sub
sbb
xchg
js
enter
int
arpl
testl
arpl
mov
adc
or
cmpsb
jmp
xchg
xchg
jbe
fidivl
leave
pusha
sbb
mov
sub
movsl
adc
shll
mov
mov
inc
sbb
adc
pop
je
push
hlt
mov
pop
fs
in
adc
ljmp
push
aad
mov
add
adc
aam
adc
xchg
sbb
lds
sub
jmp
adc
je
sbb
or
adc
lods
add
imul
mov
loope
std
xchg
mov
xor
inc
jmp
xchg
std
out
movsl
mov
std
jl
mov
jmp
test
in
aad
adc
in
adc
mov
push
push
push
add
xchg
call
into
push
lds
ljmp
inc
decl
and
lret
xor
and
out
jne
mov
add
pop
add
jp
cli
jl
das
repz
pop
add
add
add
jb
push
mov
jmp
cmp
cmp
lock
cmp
sti
xor
cmp
call
cmp
je
push
out
xchg
out
js
std
sbb
pushf
inc
lret
sbb
xor
xchg
push
lock
in
pushf
or
cli
jne
xchg
or
add
mov
fwait
inc
pop
jo
inc
push
xor
mov
cmp
push
cmp
cld
mov
jp
daa
inc
adc
out
dec
mov
mov
std
js
lock
std
dec
shrb
test
cmp
lcall
std
out
lahf
ljmp
or
imul
mov
push
add
push
clc
add
xchg
ljmp
inc
in
insl
mov
cmp
xchg
mov
nop
ja
fwait
out
mov
mov
lods
jb
pusha
movsl
add
sub
jae
xor
fimuls
nop
ljmp
fnstenv
lret
and
mov
call
shlb
loop
mov
mov
aas
pushf
dec
jb
fidivs
mov
repnz
pop
cmc
lcall
mov
repnz
push
cli
cmp
rolb
cmpsl
shrl
ds
stos
imul
addl
mov
xchg
dec
jo
push
cmp
je
mov
mov
mov
rcl
ljmp
mov
lods
rcrw
adc
adc
testl
cs
adcl
inc
xchg
xchg
or
inc
std
std
mov
jmp
pop
pop
push
or
ss
out
inc
push
arpl
je
and
and
add
cmpsb
add
add
cli
out
add
addr16
cmp
je
inc
pop
inc
and
inc
call
add
and
inc
movl
nop
je
add
fs
inc
scas
add
popf
pop
loopne
add
sbb
mov
popf
shlb
add
xchg
adc
pusha
fstp
in
add
pushf
and
add
inc
adc
add
add
add
pushf
mov
popf
adc
mov
mov
pushf
mov
icebp
sbb
pusha
cmp
xor
inc
add
jle
add
sub
pop
in
ljmp
dec
jnp
inc
scas
dec
cli
sbb
ljmp
sub
stos
add
pop
incb
es
out
ljmp
data16
add
cmp
inc
scas
dec
notb
out
ljmp
xor
sub
sbb
scas
dec
push
pop
outsb
ljmp
jle
sub
sti
test
push
pop
outsb
ljmp
outsb
fildll
inc
scas
dec
rclb
outsb
ljmp
or
or
or
ljmp
shrl
jmp
lods
addr16
add
ljmp
or
into
push
sub
ljmp
sub
or
in
ljmp
push
or
adc
mov
mov
insl
ljmp
ljmp
test
insl
ljmp
stos
add
dec
loope
pop
in
xchg
lock
add
fs
jecxz
xchg
dec
rcll
xchg
adc
loop
add
into
jecxz
xchg
dec
popa
adc
popa
lods
add
xor
jecxz
inc
dec
lds
out
xchg
push
jno
add
and
jecxz
inc
dec
add
jo
lods
add
adc
inc
add
inc
pop
dec
dec
adc
xor
inc
add
jecxz
scas
adc
popf
push
mov
cmovo
adc
popf
jle
inc
add
adc
mov
loop
adc
les
fucomp
adc
out
and
dec
test
add
add
adc
pop
test
dec
popf
scas
js
add
aas
gs
cmp
std
push
dec
add
cmp
bound
sbb
rolb
ljmp
xlat
pop
les
inc
ljmp
sub
lahf
mov
insl
inc
js
add
ljmp
stos
ljmp
add
add
add
add
add
ljmp
adc
gs
xor
outsb
xchg
push
push
xor
popa
inc
sahf
ja
push
xorl
lds
add
pop
sub
jae
sbb
loopne
push
outsb
ljmp
out
cwtl
mov
testl
or
jnp
adc
arpl
es
xchg
test
stos
lcall
xchg
js
adc
call
les
repnz
add
mov
inc
mov
push
dec
mov
bnd
mov
stos
fdivrp
les
ljmp
sbb
sbb
push
mov
insl
in
cltd
cltd
jle
xor
inc
lea
and
cli
call
dec
stos
cmc
lea
stc
push
push
inc
imul
hlt
rcr
std
adc
addb
or
jmp
jae
in
xchg
or
addb
lcall
pop
push
add
test
xchg
sbb
jae
cld
cmpsl
jno
in
test
add
add
in
and
scas
pop
js
fwait
adc
xchg
adc
fwait
cmc
adc
out
mov
push
jge
std
push
stc
mov
nop
mov
call
popa
arpl
mov
cli
xchg
sti
test
movsb
sti
add
mov
push
push
cli
or
xchg
icebp
jno
cmp
add
add
sar
xchg
jbe
inc
lods
jle
add
dec
jle
xchg
and
push
clc
lcall
shlb
jg
mov
xchg
pop
sbb
sub
push
out
imul
mov
imul
js
test
cmpl
mov
imul
jnp
popa
xor
sub
outsl
enter
add
add
cltd
mov
add
sub
repnz
cvtps2pi
mov
lods
outsl
pop
add
cmp
addb
jp
push
stos
addr16
imul
dec
bound
mov
cmp
xor
lds
dec
int3
lods
ljmp
ljmp
add
add
je
roll
mov
cmpsb
xchg
jmp
test
adc
add
push
mov
gs
ljmp
insl
inc
loope
mov
cmc
jb
sub
adc
xlat
jnp
mov
adc
cmpxchg
or
xlat
out
mov
sub
add
out
shll
arpl
aas
jmp
daa
shlb
dec
or
xchg
rorl
add
in
add
jmp
rorl
daa
mov
out
inc
divl
inc
pushf
cli
jne
stc
adc
lods
add
shl
adc
subb
add
lret
js
or
add
jle
push
push
cmp
scas
xchg
push
add
add
cmp
add
adc
lods
mov
add
add
sub
stc
stc
loope
subb
jno
push
or
out
sub
adc
sahf
cmp
mov
adc
rclb
cmp
adc
push
jbe
inc
scas
popa
push
xchg
and
imul
ljmp
lcall
sub
pushl
push
pop
xchg
mull
jae
jg
jbe
cmc
popf
fimull
adc
ljmp
jge
arpl
insl
sbb
inc
scas
lcall
repnz
pop
les
outsl
cmpsb
cwtl
push
fs
cld
cs
sbb
std
push
push
call
mov
outsl
mov
stos
ljmp
jno
add
sub
mov
inc
inc
push
test
and
push
out
pop
add
lods
scas
push
je
cmp
xor
mov
mov
pop
add
loop
mov
out
add
lds
push
ret
mov
jmp
cmp
or
jbe
add
xchg
push
cs
jns
push
jnp
out
bound
jne
jne
mov
popa
mov
jecxz
inc
add
scas
std
jo
adc
inc
test
jbe
jo
or
jp
cli
jne
add
add
cltd
push
call
mov
mov
push
lods
out
push
xor
es
cmp
hlt
sub
mov
add
clc
fildl
inc
in
sti
jmp
jae
inc
mov
stc
inc
add
add
shrl
aaa
hlt
stc
add
hlt
adc
and
pop
push
movl
add
add
add
add
adc
imul
or
add
jns
cli
adc
dec
test
add
jle
in
jle
hlt
aas
ds
xor
mov
repnz
hlt
inc
jbe
mov
pop
popf
negb
repz
out
outsl
mov
test
lods
add
lcall
inc
xchg
pop
insb
outsb
lahf
and
mov
or
jge
out
cmp
out
pop
je
or
mov
push
sub
std
ss
out
mov
fldl
icebp
jne
or
jmp
testl
push
lods
mov
and
mov
mov
call
sub
fimuls
jns
jmp
add
add
jne
stos
pop
icebp
lock
fbld
mov
test
add
ficoml
lods
mov
inc
mov
xor
movsb
push
lods
push
rorl
mov
rsm
fcoml
mov
rcrl
aam
mov
stc
out
stos
adc
inc
es
loopne
xor
hlt
or
hlt
clc
ljmp
sub
sbb
stos
xchg
xor
cwtl
daa
or
cmp
stc
jns
or
xor
call
inc
loop
add
sti
xor
push
push
in
jbe
jnp
mov
lret
call
sub
sti
stc
out
xchg
sti
inc
push
adc
test
jecxz
jle
add
add
jae
xor
add
add
pop
nop
add
mov
call
lcall
sarl
or
push
lcall
push
xchg
add
sar
add
xlat
popa
sarl
inc
inc
inc
nop
jbe
dec
out
insl
or
jge
in
rclb
mov
dec
push
xor
dec
call
xor
clc
xchg
outsb
xchg
add
xchg
cmc
imul
inc
add
shl
push
adc
imul
mov
cs
stc
xor
inc
dec
fwait
cmp
sbb
ret
inc
dec
orl
pusha
mov
pop
test
sbb
mov
add
js
lret
push
sub
mov
loop
ljmp
or
mov
and
add
add
ljmp
sub
gs
lahf
inc
and
xor
fdivp
je
fstpl
ljmp
push
cltd
insl
jg
cmc
in
icebp
das
and
add
sbb
sub
jg
push
mov
pop
lcall
jnp
in
dec
mov
ljmp
dec
jge
out
ja
mov
add
mov
mov
bound
xlat
lock
lret
lock
dec
cltd
dec
adc
lods
imul
xor
outsl
ds
xchg
idivl
cmp
push
mov
cli
fiadds
div
je
hlt
or
mov
rep
out
jg
ljmp
xrelease
xor
pop
insl
ljmp
add
xchg
fwait
imul
hlt
push
cmp
stc
mov
out
addb
mov
int3
filds
jmp
add
mov
add
mov
or
adc
stc
push
push
sub
xor
test
adcb
std
sub
add
jg
inc
jmp
cli
incl
repnz
pusha
push
je
jae
cwtl
in
add
push
xchg
imul
pop
pop
and
je
mov
orl
stc
jle
and
loope
add
jp,pt
stc
pop
sbb
xor
stc
mov
dec
call
sub
jno
std
mov
add
fscale
inc
adc
js
push
fucomi
stc
js
hlt
popa
jb
ret
cld
out
clc
ljmp
rcll
inc
scas
ret
sub
adc
jmp
fwait
sub
adc
adc
scas
ljmp
div
pop
adcb
xchg
jle
jmp
subl
fildl
add
add
gs
xchg
shl
push
inc
push
add
out
ss
subb
push
xor
repz
ljmp
popf
ljmp
xchg
mov
roll
stc
cmp
cmp
lea
pusha
mov
and
icebp
test
xorl
mov
xor
xchg
mov
divl
cltd
push
sbb
pop
cmp
push
les
adc
insb
jecxz
repz
lret
adc
test
mov
je
jmp
push
xchg
mull
mov
nop
das
outsb
lock
ljmp
lcall
add
fwait
clc
mov
roll
jmp
xchg
lcall
jne
insl
fimull
xchg
pop
sti
lcall
sahf
inc
push
cmp
ret
test
push
arpl
mov
add
shll
mov
popf
imul
fsubrp
fcomps
cli
test
repnz
rorb
arpl
add
out
mov
add
push
pop
and
xor
aam
out
xchg
out
incb
pop
inc
scas
add
jl
sub
test
dec
stc
mov
sub
int3
add
mov
outsl
fyl2xp1
jmp
loopnew
daa
pop
loopne
and
aad
popa
mov
xor
lcall
add
xor
pushf
test
stc
push
push
stc
js
ret
mov
inc
ds
and
jl
out
push
xchg
icebp
fidivrs
push
psubw
insl
inc
lcall
and
push
push
fs
out
data16
idivb
hlt
ret
sti
ret
mov
jmp
lock
js
repz
out
lcall
scas
ljmp
scas
arpl
js
jecxz
out
lcall
out
das
js
sarb
out
lcall
fsubrp
vmread
pop
out
xor
ljmp
sub
lcall
push
lcall
loop
jle
inc
icebp
idivl
cmpsl
sub
sahf
out
jmp
mov
icebp
call
push
aad
test
pop
add
int3
std
jmp
add
lret
fimull
insl
ljmp
cmp
negb
popa
sbb
jmp
add
push
pop
lds
fiadds
mov
lcall
std
rcrl
add
fdiv
xor
add
add
sarl
addr16
or
lcall
inc
jg
add
jb
test
je
mov
pop
pop
inc
ss
ss
jae
push
dec
jl
test
add
jmp
test
loopne
mov
jmp
je
lods
jp
xor
insl
daa
add
inc
je
imul
dec
in
ljmp
sbb
push
pop
popl
scas
add
mov
lods
cli
pop
in
pop
repz
xor
cld
subb
test
fildll
stc
jg
or
mov
xchg
rorl
iret
sub
out
xchg
outsb
jle
je
mov
jle
dec
sub
scas
jge
or
add
ret
pop
or
cmp
push
mov
js
sbb
inc
sub
clc
push
adc
fcmovnb
repz
adc
into
ljmp
or
inc
or
ljmp
lea
cli
push
arpl
xchg
arpl
jecxz
aaa
push
sub
pop
loop
out
ret
addr16
add
xor
cmp
or
sbb
xor
imul
jbe
mov
aaa
push
ljmp
in
mov
imul
jbe
mov
mov
jmp
jo
mov
or
xchg
les
popa
push
lds
xor
push
lcall
add
and
gs
into
lds
and
xchg
hlt
imulb
jmp
push
jb
mov
fs
xchg
push
jmp
cmp
sub
ds
mov
insb
mov
sub
push
jmp
sub
xlat
clc
xor
cmp
inc
fisttps
dec
nop
dec
xorl
aad
cmp
clc
xor
inc
filds
push
ja
orl
add
pop
ja
je
sub
pop
out
pop
cmp
stc
add
inc
jge
ret
ja
mov
in
add
les
jae
mov
jbe
pop
in
mov
addb
loop
scas
mov
scas
add
sbb
testb
fimuls
and
lret
adc
add
sub
xor
mov
mov
push
out
enter
xor
pop
pusha
xchg
or
mov
add
xor
rorl
sub
dec
mov
je
add
add
fisttps
mov
lret
cli
mov
jmp
test
fldt
int
pop
push
add
sbb
adc
sub
push
js
call
add
jmp
add
sti
ljmp
in
push
les
ds
xor
ljmp
xchg
mov
add
ljmp
xor
fs
mov
mov
jns
jmp
cmpsb
jmp
call
inc
add
push
pop
and
testb
jns
imul
lods
and
inc
lods
ljmp
repz
xorl
pop
adc
mov
adc
and
scas
add
sub
add
lods
out
lea
push
out
mov
mov
add
xor
add
sbb
shlb
pop
mov
jle
leave
xor
mov
jmp
mov
push
cmp
ljmp
push
mov
mov
test
ds
push
push
jae
sub
cltd
sub
xchg
ljmp
rol
test
add
shrb
push
sub
mov
dec
xor
orl
enter
jge
test
add
insb
inc
push
pop
xor
jge
mov
insb
ret
scas
test
roll
add
pop
inc
pop
sub
add
and
push
sub
iret
cld
mov
add
xor
push
mov
call
xor
xchg
repz
test
adc
test
ret
ja
push
ficompl
mov
mov
dec
cmp
mov
lds
pop
dec
scas
rorl
jge
add
add
ret
mov
nop
pop
fnsetpm(287
cwtl
lods
imul
gs
in
cmp
jmp
add
test
sub
enter
mov
repnz
sahf
and
fs
cli
and
fwait
es
adc
in
pop
movb
in
push
test
jbe
scas
repz
xor
jmp
add
repz
and
jmp
push
je
je
xchg
outsl
aaa
adc
lret
and
ja
repz
ljmp
lret
push
sub
sub
xor
inc
pop
sub
jnp
addr16
and
mov
cltd
mov
xor
fildll
pusha
out
pusha
jo
sub
sub
add
std
cwtl
mov
adc
add
add
lods
outsl
in
cmp
xor
repnz
test
add
ljmp
lret
xor
pushf
mov
jmp
ja
mov
pshufw
xchg
das
fdiv
lcall
push
out
add
das
add
adc
icebp
mov
enter
insb
add
pop
xchg
cwtl
xchg
out
add
xchg
out
jbe
call
out
incl
ljmp
push
adc
or
cmp
pop
add
pop
test
xchg
pop
adc
pop
idivl
orb
add
xchg
sub
jp
faddl
cs
add
jge
lods
add
pop
jmp
test
pop
cmp
or
test
fwait
or
lea
fstl
inc
loop
cmp
xchg
dec
or
inc
sbb
rorb
push
mov
inc
insb
and
popa
xchg
sub
add
push
add
scas
rolb
xor
aaa
inc
mov
add
add
mov
call
add
sub
mov
icebp
jbe
jmp
ss
data16
mov
xchg
sub
out
mov
clc
call
mov
xor
outsb
dec
stc
call
out
mov
popa
add
ljmp
dec
imul
cmp
call
jo
ljmp
jo
xor
and
iret
add
loope
jne
flds
inc
xchg
out
xchg
mov
loopne
dec
sub
and
cmp
ljmp
cmp
lahf
cmp
sub
add
xor
bound
sub
divl
hlt
xor
fisttps
insb
sbb
negl
inc
xor
les
sub
add
scas
xchg
add
lods
ljmp
sub
add
and
xchg
inc
dec
add
mov
push
in
test
push
cmp
xor
pop
jmp
push
arpl
sbbl
push
ror
inc
clc
lock
push
hlt
mov
dec
pop
push
or
xchg
pop
ret
inc
js
push
xlat
ljmp
dec
pushf
jp
cmp
cmp
dec
aam
xor
add
lds
inc
push
inc
dec
add
cmc
je
push
jno
pop
fbstp
add
pop
push
lret
inc
stc
pushl
adc
pop
insl
add
int3
push
lret
adc
int3
cli
jle
in
jge
mov
sbb
call
aam
test
dec
cmp
stc
rcll
and
add
add
xchg
into
test
xor
rolb
add
cmpb
incb
xor
add
fstl
dec
test
fwait
mov
pop
and
int
dec
cmp
shrd
sbb
ljmp
mov
xor
mov
xchg
lret
movntps
add
out
mov
add
add
sub
addb
jno
sub
xchg
clc
fsubr
add
sub
jge
inc
bound
addr16
test
jno
pusha
sub
or
push
mov
cmp
jno
arpl
jecxz
pop
movsb
and
scas
ljmp
add
dec
sub
std
pop
cld
jmp
mov
js
shrb
push
fimuls
imul
imul
mov
inc
add
lods
dec
mov
mov
aaa
xchg
gs
inc
xorl
mov
stc
add
cs
or
movsl
mov
stc
add
push
arpl
cmp
mov
pop
inc
clc
add
leave
fnstsw
xchg
repnz
test
lods
fistl
out
jp
add
ljmp
push
out
shll
add
out
rorl
idiv
push
push
sub
mov
call
inc
add
loopne
sbb
add
dec
test
sbbl
xor
out
andl
or
add
add
add
add
pop
lds
pop
out
je
cmpsb
cld
mov
pop
aas
add
dec
sub
inc
aas
push
dec
pop
scas
dec
xor
pop
and
dec
mov
cltd
dec
mov
mov
test
jl
out
lcall
subl
popf
add
jbe
cmp
mov
inc
push
ret
add
scas
rolb
xorl
add
add
dec
dec
insb
jmp
ret
add
push
ret
add
and
sbb
or
adc
push
mov
pop
clc
std
jmp
sbb
arpl
shlb
xlat
test
cli
call
rclb
xchg
xor
xchg
add
add
add
gs
or
cs
shrb
orb
fldenv
add
add
fnstcw
jge
cmp
add
add
push
jno
test
dec
movsb
mov
mov
insl
add
ljmp
scas
gs
ljmp
push
std
add
testb
mov
imul
test
inc
adc
add
add
add
sbb
push
lahf
jne
dec
jmp
les
and
push
shr
push
popa
outsb
or
fildl
scas
jns
jns
lods
iret
push
out
loopne
add
rorl
xorl
in
test
subl
icebp
push
cs
push
mov
ja
std
add
pushf
shll
mov
add
add
mov
xchg
push
mov
mov
clc
popf
aaa
call
inc
test
insl
mov
push
jmp
jle
push
inc
insb
int3
xchg
jne
push
cmp
mov
les
push
add
push
scas
push
pop
jmp
cmp
mov
add
fsubr
and
icebp
mov
mov
ljmp
dec
jge
push
mov
ljmp
stc
sarl
ficomps
scas
push
mov
decb
addl
test
out
into
push
lds
mov
in
lock
push
pushl
fdivp
ret
add
sub
scas
fucomi
cmp
inc
dec
adc
in
les
pop
rcll
add
jnp
ret
test
int3
xacquire
in
and
xchg
or
pop
and
mov
dec
push
sbb
jmp
clc
sub
dec
repnz
cmpsb
adc
add
cmp
add
out
jno
mov
fldenv
xor
jnp
push
and
ljmp
xor
cltd
jp
add
add
and
inc
aad
add
and
int3
daa
aad
ret
test
sub
scas
xchg
out
lret
pop
aad
cs
out
call
mov
add
cld
lcall
inc
mov
out
pusha
addb
cmp
das
notl
lods
xchg
clc
xchg
push
stos
scas
ljmp
mov
jge
ficomps
loopne
imul
jmp
jl
repz
jmp
shlb
andl
dec
add
loop
pop
fdivrp
orb
push
std
imul
cmp
testl
in
pop
push
adc
outsb
negb
push
aas
and
lahf
mov
test
xor
add
add
out
add
pop
or
push
call
leave
add
inc
iret
divl
mov
fwait
int3
lret
fwait
int3
xor
adc
inc
xor
add
inc
fistps
jne
insb
jnp
dec
cmp
mov
and
mov
jg
pmulhuw
xchg
aam
mov
insb
or
add
push
dec
sub
roll
scas
repnz
jge
mov
in
mov
push
push
rclb
dec
daa
or
dec
dec
sbb
pop
sub
lret
dec
cmpsb
andl
test
sti
je
rcrb
ret
mov
jmp
add
pop
mov
incl
push
leave
stc
inc
lods
and
bound
ds
into
fldl
jmp
ret
add
outsb
jae
push
outsb
ret
ret
ljmp
loop
ss
cmp
jge
out
imul
push
add
je
fs
xchg
ljmp
rcrl
cmp
jo
movsl
divl
sub
sub
call
lods
sbb
mov
add
add
jmp
add
sbb
lcall
jl
add
lret
rolb
cmp
gs
movd
pop
cmp
add
adc
stos
ljmp
iret
xor
adc
push
mov
lods
inc
stos
mov
mov
push
aad
cmp
cmp
mov
add
cmpb
jge
cmpsl
push
ret
push
in
fimuls
es
ljmp
push
imul
popf
stos
pop
bound
ret
jb
add
scas
popf
pop
inc
fnstcw
mov
add
in
jl
jecxz
shll
in
mov
clc
pop
xor
jge
mov
int3
stos
push
out
mov
jbe
xlat
add
adc
jmp
js
push
cmovnp
insb
jp
xchg
fadds
subl
or
call
jmp
aas
jl
add
mov
idiv
push
push
dec
or
fildl
adc
sub
push
int3
or
mov
cmpsl
jg
ja
add
and
mov
stc
jne
push
add
scas
roll
sub
loope
stc
and
xor
xor
add
scas
mov
cmp
adc
jge
test
or
fdiv
ljmp
out
leave
test
fidivrs
sub
pop
add
sub
cs
jle
aad
add
mov
in
dec
scas
ret
jl
cmpsb
test
or
sub
add
xor
aam
add
mov
cmp
scas
jmp
add
int
cmp
movsl
sub
loope
jmp
std
out
sub
int
int
loop
hlt
sub
fisttpll
imul
cmp
stos
mov
add
add
add
lock
push
hlt
icebp
shl
dec
mov
aaa
push
mov
out
ljmp
sub
sub
mov
lods
pop
push
out
sub
gs
int
int
jmp
cmove
subl
dec
jmp
xor
cli
test
loop
lcall
mov
mov
add
add
repz
mov
ljmp
not
jmp
jb
loop
sub
gs
popa
inc
fs
lods
dec
clc
stc
cwtl
in
or
jmp
add
enter
stc
mov
js
testb
mov
cmc
xlat
xchg
test
jb
pop
pop
adc
cmp
add
xchg
mov
cmpsl
out
je
add
add
pop
inc
or
sub
and
add
test
add
pop
and
test
adc
mov
fisttps
inc
xchg
mov
in
add
or
or
pop
pop
in
or
sbb
jle
dec
xchg
jl
iret
pop
inc
sbb
add
push
roll
mov
shll
fistpll
cmp
adc
add
mov
cmc
xchg
std
loopne
jge
fadds
jge
mov
jecxz
out
sub
xchg
sar
scas
xor
test
xor
subb
stos
push
aas
in
ss
cmpsl
mov
jno
pop
mov
sbb
loop
cs
roll
test
cmp
sub
imul
add
add
add
imul
cmp
jmp
add
cmp
inc
stos
mov
mov
in
fistpl
jne
jecxz
stos
insl
sbb
mov
mov
sub
icebp
mov
je
and
loope
cltd
test
mov
xlat
mov
stos
lods
cmpsb
push
jmp
pop
jno
xchg
jne
sbb
sbb
add
ljmp
cmpsb
std
mov
out
mov
add
sub
jmp
mov
stc
mov
ljmp
sahf
jl
ss
lret
div
mov
fnstenv
and
and
sub
mov
mov
imul
mov
mov
loope
enter
add
add
jb
aam
sbb
sbb
and
jo
add
cmc
mov
xchg
insl
ret
test
add
xchg
mov
add
enter
push
in
or
das
inc
mov
mov
mov
mov
mov
addb
pop
in
jl
divl
je
jne
adc
add
add
int3
jle
fcmovnbe
dec
inc
mov
mov
mov
add
add
jae
aam
xor
push
xchg
xchg
loopne
jmp
inc
dec
je
clc
adc
push
imull
roll
je
cmp
hlt
xor
cltd
push
push
fildll
inc
scas
rorl
and
xor
inc
xchg
add
add
sub
fisubl
inc
add
xlat
add
scas
loopne
adc
dec
addb
roll
sahf
mov
xchg
shrb
mov
cmp
sub
jecxz
data16
dec
sub
lret
sbb
jae
out
add
in
mulb
bound
test
out
repnz
out
sub
push
cmpsl
scas
ds
mov
mov
nop
mov
add
cmp
inc
xchg
sbb
add
cs
mov
ret
ljmp
pop
ret
cmp
hlt
jae
mov
aaa
scas
lods
sub
scas
ljmp
scas
ljmp
lods
ljmp
lods
repz
lods
ljmp
xor
jmp
rorl
add
sti
notb
sub
or
fisttpll
add
je
ljmp
bound
jb
repnz
sub
js
orl
out
ret
je
cmp
adc
scas
ljmp
sub
cli
bound
push
cmp
dec
add
add
fbstp
hlt
scas
sub
add
jnp
xchg
clc
mov
or
cld
daa
and
lret
push
call
add
add
adc
inc
call
cld
adc
mov
les
testb
inc
or
add
add
call
dec
cld
mov
les
jle
cli
add
imul
jne
or
fsubrs
sti
clc
andb
jno
add
mov
mov
sub
lds
xor
shlb
mov
roll
test
mov
inc
sbb
adc
shrb
add
scas
sbb
or
mov
add
xor
jno
sub
test
jmp
xchg
call
sub
aaa
enter
mov
stc
scas
roll
enter
ret
icebp
test
mov
sub
jmp
sub
rorl
sarl
call
add
inc
fldl
mov
inc
or
adc
adc
shrb
scas
jne
or
sub
mov
stos
call
test
out
in
xor
scas
pop
lods
icebp
pop
stos
ljmp
mov
jmp
sub
mov
and
sub
dec
sub
scas
jne
jmp
cmpb
jmp
divb
loop
sub
shrl
add
fs
mov
dec
roll
ret
inc
push
insb
adc
movl
lods
aas
call
jmp
cmp
push
out
out
ljmp
in
movb
add
add
ljmp
mov
fcomp
add
xlat
gs
add
xchg
add
jae
or
sbb
pop
es
enter
movsl
fldl
adc
cmc
call
sbb
jne
mov
call
and
or
dec
clc
inc
cmpb
xchg
orl
flds
mov
xchg
and
loopne
add
outsb
sub
and
cli
mov
and
jge
popf
cmc
xchg
mov
add
sarl
add
popf
add
inc
sbb
scas
rorl
mov
mov
dec
sahf
int3
mov
xchg
pop
add
inc
addl
jp
push
clc
xor
loope
ret
add
inc
ljmp
repnz
xlat
nop
inc
out
lret
sub
or
shr
imul
ljmp
cmpsl
js
mov
mov
stos
sub
jno
ljmp
sub
aam
xor
add
scas
ljmp
xchg
call
clc
subb
addl
popl
icebp
cmp
jmp
inc
cli
in
addr16
pop
mov
fistpll
dec
mov
roll
scas
ljmp
lods
ljmp
fisubrs
ljmp
je
cs
imul
stos
data16
lods
ljmp
lods
ret
inc
in
es
leave
outsl
aas
shl
sbb
ljmp
mov
xor
in
mov
stos
addr16
push
jmp
jo
sub
lret
sarb
ljmp
je
in
add
lods
cmc
add
xchg
jmp
repnz
pop
xchg
mov
mov
xor
fistpll
dec
stc
clc
inc
out
mov
mov
mov
mov
jo
dec
jp
repnz
call
push
push
nop
jmp
pop
adc
jb
insl
out
mov
mov
aas
inc
fcoms
cmpsl
or
push
xor
nop
add
xchg
cmp
bound
rcr
xorl
add
daa
dec
mov
xchg
xchg
sbb
adc
jg
adc
shlb
scas
xor
fwait
or
cmc
decl
int
incb
xchg
test
cmp
fsubs
roll
add
cmc
je
stc
fidivrs
xchg
fwait
or
jne
rcrl
js
outsl
test
sub
add
add
push
or
shl
lds
dec
jecxz
inc
icebp
shll
ljmp
push
repnz
sub
jnp
mov
add
ljmp
mov
jmp
jne
fs
fs
cli
daa
insb
leave
mov
and
sbb
insb
ret
fdivs
stos
fwait
mov
push
add
add
add
lods
mov
les
ljmp
pop
outsb
leave
add
xchg
in
jno
mov
sti
enter
jmp
add
insl
idivb
sbb
lea
push
fisubl
push
mov
fisubrs
lcall
pop
mulb
cmpsl
loop
rcll
add
stc
add
add
add
cmp
mov
ja
or
sub
scas
in
mov
shrb
inc
out
lret
push
sub
imul
scas
outsb
xchg
out
ljmp
adc
sub
lods
or
gs
out
sbb
push
ret
les
addb
fldl
je
mov
add
ss
hlt
fdivs
fiadds
pop
in
add
mov
pop
add
sub
add
in
je
fwait
in
insl
sbb
xor
jmp
aaa
aas
add
pushl
andl
je
fucomi
jb
dec
xor
fmuls
das
inc
pushl
stc
addl
add
test
ret
add
scas
cwtl
jg
mov
add
scas
dec
aaa
insb
daa
ret
jbe
cli
ds
lock
roll
and
jge
dec
icebp
shl
and
push
mov
push
scas
sub
dec
scas
roll
add
xorb
cmpsb
stc
xor
gs
jle
lock
roll
cmp
inc
push
pop
cmp
pusha
icebp
sar
scas
sarl
adcb
add
icebp
push
data16
test
test
cmpsb
ljmp
sub
xchg
scas
ja
push
add
fildl
scas
ljmp
outsl
out
hlt
add
lock
sub
sahf
sti
xor
bound
mov
loop
inc
push
popa
mov
push
xor
in
sub
sarl
add
add
insl
loop
push
mov
xor
pop
adc
mulb
xchg
fnstcw
out
imul
imul
mov
jmp
ljmp
lods
ljmp
mov
add
push
mov
cmp
lods
jg
cmpsl
ljmp
push
ja
xor
bound
add
int
fiadds
add
xchg
insb
outsl
imull
mov
fidivs
jbe
call
or
mulb
test
bound
loop
roll
jmp
ljmp
and
orb
jmp
sub
cmp
mov
inc
mov
rclb
test
mov
mov
push
fisttps
into
hlt
int
and
dec
repz
enter
mov
mov
shll
dec
in
lret
outsl
xor
push
adc
xor
mov
jl
dec
mov
dec
ret
xor
xchg
setno
je
fsub
mov
scas
inc
sub
scas
xchg
ja
stos
roll
pusha
sarb
mov
cmp
in
ror
inc
jne
mov
jno
lods
mov
popa
ret
dec
cmp
in
test
xchg
cmp
sbb
add
cmp
jle
imul
call
lods
xchg
or
jg
test
into
in
shlb
mov
mov
scas
dec
ret
rcl
xchg
ljmp
gs
je
icebp
sar
imull
pop
ret
sbb
ljmp
scas
orb
popf
stos
push
stos
ja
nop
ret
call
lcall
push
inc
arpl
stos
sub
xor
add
leave
fdivrs
sub
mov
sub
out
adc
sarb
push
jmp
add
jmp
call
stos
gs
bound
movsl
loop
sub
add
ret
cmp
je
inc
and
mov
jmp
pop
and
stos
lods
sub
and
add
sub
jmp
lods
ljmp
lods
ljmp
cli
addr16
mov
push
jmp
jo
mov
das
fsubrl
xchg
push
scas
add
andl
mulb
mov
inc
add
add
in
loopne
repz
mov
dec
and
incb
mov
leave
push
icebp
in
cmp
mov
inc
mov
mov
in
add
clc
int
or
dec
sub
fisttpll
push
in
add
aaa
cs
in
lds
hlt
push
adc
cs
sbb
mov
stos
xor
hlt
push
or
pop
lods
cmc
rorb
push
scas
inc
and
scas
nop
ja
lods
ret
add
sbb
jbe
fucom
jne
loop
sub
or
test
xchg
leave
gs
lods
mov
cltd
ret
mov
testb
jne
or
mov
push
xor
sub
shrb
pop
or
ja
test
adc
std
mov
mov
mov
scas
dec
ret
rcl
jge
push
inc
fbld
mov
test
add
add
add
adc
add
stos
sub
sub
sbb
mov
daa
xor
cltd
cmp
addl
jmp
scas
fisttps
addr16
mov
test
jl
mov
lret
xorl
xor
cmp
call
dec
ficompl
and
and
popf
rclb
jmp
call
add
ljmp
mov
and
ret
mov
xchg
add
cmp
push
stos
sbb
lods
ljmp
es
adc
pop
adc
inc
cmc
scas
and
pusha
shll
ss
lret
cli
mov
inc
mov
and
cltd
mov
test
add
loope
sbb
or
jb
sub
xor
loope
cmp
cld
add
lods
outsb
jg
mov
dec
jno
inc
mov
cmc
int
cmp
dec
mov
or
aam
aas
add
mov
call
or
hlt
in
mov
dec
jae
add
inc
add
jmp
add
outsb
mov
jnp
push
mov
mov
add
xchg
or
hlt
icebp
mov
jmp
idiv
pop
push
or
ret
add
sub
ds
and
inc
and
scas
mov
scas
ret
add
and
sahf
dec
loop
lods
int
addb
lods
or
test
flds
add
add
add
call
inc
mov
call
aad
jg
sahf
shrl
cli
mov
add
stos
imul
dec
cmpsb
cmp
clc
aaa
add
cmpb
mov
jmp
dec
push
pusha
sub
ret
add
arpl
push
lret
dec
pusha
xor
or
imul
sub
vpsrld
les
pop
cmpsb
or
sub
jecxz
sub
scas
notl
xlat
mov
stos
jmp
adc
pop
jmp
hlt
mov
pop
xchg
or
repnz
je
scas
ljmp
sub
or
adc
subl
fsubs
insl
into
insl
mov
add
add
pop
or
jb
and
insl
ljmp
xor
xorb
loope
or
mull
mov
push
outsl
adc
cmp
jo
fimuls
bound
mov
mov
sbb
aaa
and
test
jmp
shrl
bound
adc
and
stos
imul
lods
jmp
xor
mov
jl
das
jbe
or
cmp
mov
ja
cld
sahf
adc
scas
out
jle
scas
jne
cmp
test
dec
addr16
aas
adc
sarl
xchg
jge
outsb
cli
sbb
je
repz
insl
and
loop
and
jmp
test
jmp
add
dec
stc
incl
add
add
ja
pop
push
cmc
add
pop
xchg
inc
add
jmp
clc
inc
pop
in
pop
adc
xchg
inc
sbb
clc
add
je
push
mov
mov
adc
imul
int3
jl
stos
xchg
aad
add
mov
cmp
in
sub
add
pop
sti
xchg
xchg
sub
sarb
or
add
add
jmp
jae
fdivrs
or
loope
icebp
xchg
les
sub
push
add
fstpt
xchg
add
lods
addb
stos
ljmp
mov
filds
cltd
jae
mov
pop
push
fwait
daa
test
aas
xor
arpl
dec
movsb
add
add
sub
jo
mull
mov
out
ljmp
mov
mov
sub
in
jp
fwait
jmp
ljmp
lock
leave
out
shr
push
icebp
lret
icebp
ret
icebp
mov
out
push
pop
out
adcb
xchg
dec
out
sbb
add
out
lahf
pop
out
popf
pop
out
xchg
add
pop
out
sti
in
pop
add
add
loopne
add
add
frstpm(287
add
or
add
add
fsubp
add
ret
in
in
frstpm(287
add
jmp
xchg
push
bnd
loope
daa
scas
imul
add
cwtl
jae
xor
scas
outsb
or
add
add
xchg
adcl
jl
pop
jae
sub
sub
push
test
rolb
add
inc
mov
decl
stc
js
pop
ret
mov
int3
lret
mov
out
dec
xor
mov
out
pop
add
stc
push
adc
clc
rclb
subl
inc
decl
mov
add
add
in
mov
ljmp
mov
les
sbb
in
incl
xor
dec
mov
sbb
scas
xchg
add
or
and
xchg
add
scas
mov
bound
jge
xchg
add
lahf
mov
sbb
pop
shlb
xchg
add
add
fs
add
rol
int3
ljmp
in
incl
loopne
in
cmpsb
je
stos
es
scas
ljmp
ja
es
repz
in
subl
cwtl
jmp
movsb
fs
dec
push
stos
cmpsb
cmpsb
out
mov
mov
sbb
add
add
ss
xchg
out
sub
out
sbb
lcall
scas
fldl
jge
je
cmpsb
inc
sub
sub
mov
pop
repnz
lods
ljmp
imul
push
push
sub
icebp
sbb
imul
lods
ljmp
and
andl
mov
test
xor
push
inc
mov
mov
and
divb
dec
cli
sub
or
cs
insl
out
aaa
negb
xor
mov
lods
and
inc
jmp
or
sbb
loopne
repz
dec
jp
call
add
decb
dec
jo
cld
repz
ret
push
clc
inc
inc
sbb
aas
and
cld
xchg
dec
sub
xor
mov
jle
leave
cmp
mov
fsubr
sbb
ljmp
inc
or
dec
xchg
inc
mov
jmp
orl
cmc
cltd
xchg
or
add
add
jbe
mov
xor
iret
sahf
lcall
push
lret
jae
sbb
cld
aaa
sbb
test
mov
icebp
mov
ficoms
sbb
pop
aaa
add
test
test
sti
push
xchg
loopne
shrl
inc
add
xchg
add
and
idivb
ljmp
int3
cli
pop
xchg
sub
add
add
sbb
or
jns
push
icebp
jmp
jmp
mov
xchg
adc
mov
stos
aas
xchg
pop
fdivrl
ret
sti
aaa
sar
ljmp
sub
jb
mov
movsb
sub
repnz
cmp
pushf
xor
add
stos
ljmp
mov
imul
out
push
fwait
shr
fldl
scas
ljmp
scas
ljmp
hlt
scas
pop
push
jmp
jmp
xchg
dec
adc
mov
jmp
pop
ljmp
fs
jo
sub
out
sahf
lcall
cmp
out
negb
repz
and
ret
mov
movsl
pop
stc
in
lahf
idiv
and
in
ljmp
mov
inc
loope
ljmp
mov
add
push
pop
push
test
ja
inc
fcmovnu
inc
push
cmp
or
rcl
clc
rolb
cmp
cli
push
lea
add
add
rorb
jle
mov
cmpb
jb
pop
add
add
in
or
mov
jmp
je
sbb
or
into
fstp
or
movsb
jle
das
ret
or
mov
or
and
or
stc
or
cld
pop
mov
fwait
cmp
and
fwait
cs
sbb
in
sub
inc
or
sbb
or
popf
sub
add
dec
imul
add
xchg
or
call
scas
adc
add
popf
popa
cmp
cmp
cmpsb
sbb
push
push
push
mov
mov
add
add
ljmp
pop
mov
in
scas
adc
sub
sub
sub
jno
lret
psubd
and
ljmp
mov
es
adc
sti
sub
arpl
pop
jo
mov
ss
cmc
lcall
mov
call
roll
add
fsubr
invd
jnp
pop
cld
xor
jne
mov
test
lcall
dec
data16
and
add
cmc
mov
mov
test
push
in
ljmp
shll
fwait
ljmp
repz
mov
mov
sub
jb
add
add
repnz
jle
push
in
mov
cmp
aas
addr16
inc
movsl
test
icebp
jge
or
and
sahf
cmc
add
pmulhuw
je
jb
jg
jl
cltd
adc
add
or
push
push
call
outsl
scas
inc
lock
cmpb
cmp
out
cmp
jnp
addb
add
ret
ja
decl
mov
dec
push
jge
call
dec
push
jge
pop
sbb
orl
rclb
jl
jne
clc
add
rcll
xor
add
les
xorb
lea
push
jne
push
dec
mov
and
add
cmp
dec
xor
jo
stc
icebp
add
add
les
subl
stc
xchg
inc
xchg
sub
das
fcompl
test
jmp
hlt
mov
jl
mov
mov
stc
cltd
push
aas
cld
decb
test
push
testb
ret
or
mov
cld
scas
mov
test
mov
cmp
xchg
sub
add
add
add
call
js
jge
sbb
fs
fwait
mov
scas
fldl
cmc
cwtl
dec
andb
cmp
lock
sbb
add
sub
mov
ljmp
sti
cli
inc
je
mov
je
xor
arpl
add
popa
xor
sub
imul
add
add
add
add
arpl
xor
jecxz
cmpsb
dec
pop
fbld
sub
rolb
push
mov
sub
pop
pusha
insb
loop
test
inc
repnz
ljmp
daa
adc
orb
loope
lods
scas
pop
jo
out
mov
test
ret
sbb
out
cmpsb
sub
xor
cmp
and
xor
jl
cmp
mov
test
add
sub
ljmp
inc
add
fstl
mov
and
jmp
les
ret
insb
mov
inc
inc
fstpt
adc
call
test
add
xchg
in
push
dec
out
divl
and
inc
xlat
imul
ss
call
push
scas
incb
push
push
nop
inc
adc
call
add
incb
push
jl
scas
repz
push
or
stc
popa
add
add
inc
sbb
sub
test
sarl
inc
hlt
test
xor
lret
inc
sbb
sub
test
xor
js
push
faddl
add
les
std
sub
test
xor
call
and
arpl
test
sti
jo
mov
push
mov
stc
xor
cwtl
xor
mov
ret
add
imul
daa
lds
dec
je
sahf
cmp
pop
sbbl
ret
scas
in
outsb
push
in
subb
sub
pop
jle
daa
aam
movsb
jb
inc
arpl
push
push
mov
mov
imul
js
ficoml
cmp
stos
xor
stos
lods
add
and
fisubl
repnz
fs
cmpsl
push
insl
add
mov
ret
sub
jb
add
add
xchg
and
addr16
adc
xor
push
bound
jns
xor
addr16
adc
xor
push
jb
add
and
addr16
adc
idivb
and
test
sub
test
lret
ss
pop
mulb
orb
xor
imulb
jl
stos
ljmp
cli
mov
cs
add
jg
mov
jnp
pop
in
jle
subl
mov
mov
cld
xor
fsts
push
jne
rolb
inc
jecxz
orb
xor
jnp
mov
xchg
loop
add
out
jl
dec
adc
sbb
cmpsl
add
add
add
jge
out
and
mov
mov
add
push
push
sbb
cmp
mov
jle
inc
mov
jmp
adc
sub
cmpsl
js
xchg
sbb
xor
or
add
rorb
sub
in
shlb
ret
xor
gs
jne
negb
and
adc
subl
and
mov
shrb
faddl
or
hlt
pop
out
inc
fimull
sbb
jg
jbe
jle
xor
push
jle
add
mov
out
in
mov
xor
clc
test
jmp
aam
pop
fnstenv
xor
enter
add
jb
gs
jae
xor
stc
jbe
xchg
sbb
adcb
mov
test
test
shl
push
jge
imul
ljmp
sub
sbb
orl
arpl
lret
add
sbb
test
jns
push
es
mov
add
stos
outsb
jmp
mov
je
sbb
push
addb
andl
cmp
movsb
ljmp
out
test
jae
ret
gs
fldenv
imull
out
fcoml
imul
ljmp
stos
ljmp
scas
xlat
bound
mov
sbb
mov
mov
sbb
mov
fistpl
jmp
jge
jmp
jno
loop
mov
cs
add
jle
addr16
push
xchg
jnp
jl
jle
subl
fists
push
fsts
xchg
mov
push
outsl
mov
add
mov
add
sub
fists
jnp
mov
and
stos
mov
inc
push
scas
cmp
rcrb
jge
iret
sbb
in
jnp
jecxz
les
jnp
addl
xor
addl
and
outsl
in
push
sbb
sub
push
add
jecxz
jnp
aaa
faddl
pop
add
rcll
pop
mov
jp
mov
in
and
mov
js
sarb
ret
push
mov
repnz
repz
cmpsb
imul
icebp
ljmp
mov
mov
lret
addr16
movzbl
imul
or
sbb
jmp
sbb
jmp
outsb
ljmpw
test
xor
add
add
movsb
jb
or
call
add
ljmp
sub
or
fnsave
arpl
and
xor
jns
sub
ret
lods
mov
popf
movsl
mov
popf
add
jle
bound
loop
cmpsl
push
xor
int
in
pop
sub
call
adc
push
lods
pop
arpl
pop
pop
jb
cmp
call
outsl
sbb
and
pop
or
and
sub
ljmp
test
cmpsb
jmp
add
add
sbb
mov
pop
add
mov
add
pop
add
fiaddl
xlat
out
lea
add
mov
pop
repz
incl
arpl
xchg
xlat
xchg
push
sub
inc
and
int3
sarl
int3
sbb
dec
fistpll
fs
cwtl
sar
mov
iret
jle
pop
pop
das
mov
out
add
mov
add
pop
pop
dec
xor
add
add
shll
les
mov
orb
jecxz
rolb
jl
push
call
sub
push
or
shll
das
ja,pt
cmc
xchg
pushl
sub
inc
xchg
inc
mov
cld
push
call
sub
add
jge
xchg
test
push
idiv
or
call
daa
cmpsb
cmp
outsb
sar
imul
sti
jl
jae
push
cld
lcall
stos
or
insl
mov
jne
nop
scas
ljmp
sub
sbb
stos
insl
push
or
out
jg
mov
insl
xchg
push
xchg
pop
sbb
sub
mov
add
in
mov
lcall
mov
popa
insl
movsl
pop
sub
mov
enter
push
cmpb
add
jl
loope
in
mov
cs
lock
out
mov
cs
mov
in
sub
inc
sub
neg
mov
rcll
bound
jmp
lods
std
or
and
add
lods
decb
aaa
repnz
in
outsb
pusha
negl
outsb
inc
fldenv
xor
mov
sti
xor
sub
sbbb
mov
jb
test
insb
sar
adc
add
out
add
xor
xchg
out
add
jecxz
repz
pop
addl
or
decl
dec
mov
pop
pop
icebp
js
jge
jg
mov
add
jb
jne
les
je
dec
js
jge
iret
out
sbb
push
mov
out
mov
das
outsb
add
stc
mov
jl
push
mov
add
push
fmull
subl
xchg
aaa
mov
mov
add
add
fmull
pop
in
push
inc
int3
loop
mov
sub
jns
into
daa
fiadds
mov
jecxz
roll
add
xchg
add
and
js
pop
cld
imul
ds
mov
clc
clc
imul
push
adc
mov
pop
inc
or
add
add
jmp
adc
and
jmp
hlt
test
ljmp
scas
ljmp
scas
ljmp
test
fildl
mov
int
fstps
add
out
mov
pop
fisubl
xchg
out
call
inc
jmp
imul
ljmp
sub
add
mov
test
ljmp
sub
mov
sub
ljmp
lods
ljmp
xchg
mov
repnz
lret
lods
ljmp
lods
xchg
jmp
out
nop
push
lods
ljmp
xor
jmp
mov
scas
push
fs
repz
lods
ljmp
lods
ljmp
lods
sbb
and
jmp
cld
add
pop
fs
imul
fnstenv
sub
add
sbb
jnp
jle
jnp
leave
inc
add
inc
imul
add
mov
add
jbe
adc
jge
pop
call
jl
pop
xchg
cmc
mov
ljmp
xlat
cmovs
jo
jle
iret
push
js
insl
jl
xchg
add
or
cli
jmp
jl
mov
sarl
cmp
or
mov
addb
inc
insb
sbb
pop
push
scas
inc
into
out
test
jle
scas
xchg
mov
or
outsl
sbb
pop
pop
clc
roll
add
add
xchg
out
xor
jne
sbb
jae
or
ja
mov
clc
adc
pop
in
std
xor
xor
xor
add
or
add
mov
push
cmp
cmp
mov
or
outsl
popa
sbbb
cltd
rorl
pop
aaa
in
std
inc
ljmp
in
cli
icebp
cltd
sub
call
sub
jmp
jmp
roll
ljmp
sub
vpsrad
je
aad
in
xchg
mov
fdivrs
mov
fs
xlat
inc
out
call
dec
loop
movsl
dec
cli
scas
push
rcrb
sbb
or
outsl
lods
popf
pop
pop
sub
scas
sbb
ljmp
mov
inc
push
je
pop
jmp
add
push
jmp
mov
add
xchg
xor
addr16
jns
xor
pop
stos
jne
jbe
fcoml
stos
orl
jno
cmpb
call
add
or
test
scas
sbb
cmp
add
jmp
lods
orl
mov
mov
jmp
lods
and
in
scas
movb
sub
int3
int3
inc
outsl
out
idiv
xchg
scas
or
paddb
test
mov
add
dec
clc
clc
push
mov
jg
mov
clc
ljmp
xor
inc
mov
jle
mov
clc
lcall
or
jno
hlt
sub
clc
push
das
out
sub
aas
insb
mov
inc
xor
jge
jmp
mov
clc
ljmp
push
push
scas
inc
mov
pop
rol
fldt
movsl
daa
add
shl
cld
sub
outsb
test
lods
jo
jns
leave
sti
fcomip
mov
push
add
add
out
stc
sub
sbb
mov
sub
data16
sub
ljmp
add
xchg
test
or
ret
or
and
outsl
jo
and
insb
stc
jmp
testl
dec
jb
pop
jle
mov
mov
jbe
xchg
sub
jle
aas
mov
sub
xchg
imul
xchg
rorb
jge
jbe
in
add
ljmp
insl
add
mov
xchg
jbe
mov
jo
jo
jle
insb
or
in
out
imul
sub
je
sarb
jne
jo
je
jge
xchg
xchg
sbb
jge
push
out
test
fidivrs
xor
jge
cmp
push
pop
sub
inc
and
subl
dec
es
sub
loop
iret
notb
add
or
imul
cmp
cld
scas
pop
lea
push
push
neg
mov
xor
and
test
xchg
xor
test
in
mov
mull
testl
pusha
fs
popa
idiv
call
push
mov
testb
idiv
pop
idiv
xchg
jae
and
idiv
push
repnz
out
shl
inc
call
or
jl
add
or
mov
ljmp
inc
clc
clc
push
mov
add
lret
jmp
cmpb
mov
pop
call
ret
gs
call
mov
xchg
mov
icebp
imul
stos
push
je,pt
adc
stc
and
add
push
mov
adc
dec
pop
stc
test
sar
cld
sub
jb
jmp
int
xor
xor
js
jb
call
or
gs
orl
jno
xor
outsl
cli
cmp
jge
mov
lds
or
sti
and
jno
xor
jnp
andb
outsb
pop
out
cmpb
jb
xchg
lea
jp
inc
mov
sub
ret
jb
and
add
jmp
jp
clc
mov
xor
mov
ja
out
loope
xchg
sub
jb
jp
shlb
andb
jno
je
jb
outsb
movsl
or
movsl
sarb
jbe
and
jns
jno
push
mull
maskmovq
mull
jg
testl
xor
add
jae
and
outsl
jge
jae,pt
je
mov
test
jae,pt
mov
pop
je
jl
jb
ss
push
mov
ljmp
testl
fidivs
jb
cli
div
fisubrs
ljmp
mull
ret
bound
outsl
in
cmp
add
add
mov
pop
mov
testb
mov
xchg
or
cli
clc
adcl
pop
pop
and
dec
mov
test
mov
iret
mov
out
jo
cli
clc
sub
xchg
push
pop
in
add
jge
inc
mov
xbegin
inc
fdivr
clc
mov
test
lcall
cli
clc
mov
jg
cli
adc
scas
scas
testl
push
mov
mov
scas
lahf
addr16
xor
lcall
and
out
int3
repnz
inc
int3
loop
jp
sub
ja
sub
lods
jae
sbb
or
mov
mov
imul
jmp
ficoms
xchg
shlb
enter
sarb
cmpsb
xor
sub
pop
js
les
ret
cmc
pushl
lods
aas
push
movsl
aas
bound
fs
test
gs
mov
pop
scas
imul
ljmp
and
nop
outsb
xor
fnstcw
jae
mov
pop
add
add
add
faddl
inc
sahf
mov
in
jp
adc
aas
push
and
jp
push
fidivrs
mov
and
jae
xor
xchg
jp
loop
jbe
loop
bound
or
or
faddp
adc
jmp
lods
ljmp
fwait
jae
sbb
add
add
and
and
sbb
and
jbe
jl
loopne
inc
and
outsb
fisttpll
fiadds
mov
lods
or
mov
outsl
jne
and
scas
push
add
incb
lods
sub
jmp
mov
outsl
inc
sbb
daa
and
jle
cmp
push
adc
and
mov
pop
mov
addb
mov
lahf
cli
adc
xchg
sub
lcall
movsb
mov
xlat
icebp
inc
or
cmpb
or
mov
add
xlat
out
or
fstpt
add
mov
xchg
call
ljmp
jl
sub
jb
enter
xchg
fmull
scas
les
popa
addb
mov
add
scas
addl
add
or
xchg
or
addl
ljmp
add
ret
jbe
scas
andl
inc
daa
stc
cmp
dec
jp
insb
xchg
cli
out
and
add
add
sahf
fnstenv
ss
sub
addb
scas
or
scas
ljmp
ds
jmp
out
bound
scas
ljmp
sub
add
ljmp
scas
ljmp
scas
ljmp
scas
stos
or
popa
xor
sub
sbb
add
add
add
jmp
test
xor
imul
cs
outsl
jle
xchg
mov
mov
cs
test
imull
mov
push
ljmp
fnsave
cmp
loope
ljmp
add
idiv
test
jmp
xor
pop
push
mov
lds
mov
lods
cmpsb
sahf
cmp
jle
and
inc
icebp
std
pop
add
mov
add
bound
outsb
inc
adc
sub
and
mov
testb
shl
add
jmp
add
mov
add
xlat
push
movb
add
je
nop
in
add
push
insl
roll
in
add
add
idiv
pop
in
pop
ret
add
jae
sub
incl
in
rol
out
add
test
testb
or
in
add
xlat
sub
add
in
add
mov
int3
sbb
sub
je
dec
sbbl
xor
and
in
inc
add
jle
aaa
or
mov
or
rolb
popf
inc
add
aaa
cmp
xchg
mov
int3
jp
cs
jb
jbe
and
jb
push
cmp
gs
xor
outsb
mov
jns
adc
call
xor
test
inc
ljmp
testl
fcom
dec
pop
clc
adc
ljmp
pop
fs
leave
pop
sahf
adc
cmp
and
jp
sbb
inc
xor
fnstcw
gs
mov
pmaxub
fisubs
adc
sbb
ret
sub
lock
mulb
push
enter
stos
jb
lods
arpl
push
push
arpl
aaa
cli
popf
movsl
aaa
repnz
ss
sbb
jnp
fidivrs
cmpb
mov
mov
sbb
mov
insl
outsb
jle
jle
neg
dec
fldl
sub
and
ljmp
data16
xor
jns
pushf
mov
cmp
add
add
mov
xor
das
mov
cmp
push
sub
out
xchg
sbb
jne
stc
jo
jno
hlt
lods
faddl
push
sub
push
jae
add
repnz
sbb
shll
mov
pop
sbb
jne
add
jge
out
repz
cld
and
int3
xchg
mov
int3
mov
mov
int3
sbb
in
int3
jge
xor
cld
insl
add
fdivrl
push
add
xor
jmp
add
adc
mov
fsubr
and
mov
outsb
es
repz
adc
adc
cwtl
cli
adc
scas
add
inc
je
adc
xchg
ret
jmp
mov
mov
pop
add
cs
push
jp
clc
xor
jnp
add
adc
jge
sar
sar
ret
insl
adc
nop
gs
les
sar
mov
mov
in
and
test
aas
mov
ds
loop
push
int3
cli
xor
push
int3
ljmp
shrl
lahf
les
add
add
movsb
sub
adc
add
sub
repz
daa
jmp
mov
mov
movsb
test
add
fldl
scas
ljmp
bound
sub
push
push
pop
xchg
ljmp
scas
adc
call
int3
popa
mov
fstps
call
add
inc
lea
cmc
add
ljmp
rol
add
ja
mov
xor
mov
mov
in
ljmp
lods
ljmp
cmp
mov
lods
ljmp
outsl
cmpsl
sbb
icebp
ss
sub
and
bound
add
add
mov
jb
repnz
or
lods
jne
pop
xor
xrelease
mov
dec
incl
ja
mov
orl
fadds
lds
inc
jp
xlat
in
jl
aas
sub
inc
pop
mov
mov
in
mov
push
or
sti
mov
loopne
mov
add
shll
mov
pop
adc
in
das
pushf
inc
movsl
adc
push
inc
sub
xlat
sub
incl
xchg
push
add
add
xor
lret
jg
jnp
mov
or
test
mov
xchg
es
add
jecxz
xchg
mov
add
add
std
cmp
jp
inc
int3
jb
inc
int3
push
inc
int3
bound
sub
xchg
fmul
pop
daa
xchg
mov
mov
arpl
popa
push
aaa
xchg
add
xchg
outsl
hlt
repnz
lret
mov
call
or
repz
or
add
add
call
or
repz
or
call
shrb
popa
shlb
in
jae
add
call
mov
inc
pop
stc
popa
testb
ljmp
xor
ljmp
dec
addr16
fstl
roll
add
add
add
pop
mov
mov
inc
jp
icebp
scas
sub
jns
jmp
xor
int3
mov
pop
loope
into
dec
pusha
cmpsb
xor
xor
xor
sub
jecxz
jb
cltd
pop
ds
ja
lahf
mov
call
lods
outsl
inc
xor
mov
dec
pop
scas
addr16
inc
cmp
pop
sbb
add
xor
cmc
jb
pop
andl
test
jge
mov
add
ret
cmp
ljmp
test
add
xchg
loop
cmp
ljmp
pop
ljmp
imul
orl
or
jmp
add
test
repnz
or
arpl
subb
or
sti
test
inc
insb
mov
or
or
insl
push
int3
xor
push
or
mov
scas
enter
xchg
dec
push
mov
sub
out
sub
mov
enter
fadds
xor
in
xor
add
in
test
imul
loope
mov
fstps
add
push
jg
jae
aad
jae
enter
jl
inc
daa
data16
std
mov
xor
push
inc
int3
bound
inc
int3
jp
mov
sub
test
mov
dec
adc
imul
sbb
lods
insl
sub
mov
jae
scas
ljmp
scas
ljmp
sti
repz
scas
ljmp
jne
je
test
mov
pop
cmpsl
fwait
add
lcall
loop
cmp
push
dec
jmp
call
inc
sbb
mov
mov
outsb
pusha
fdivs
imul
repnz
repz
sub
lods
dec
decl
lods
ljmp
xor
or
ljmp
sbb
ret
je
fwait
add
lods
ljmp
lods
ljmp
out
pop
mov
and
pop
bound
ret
ss
lods
jno
cmp
push
cmpl
dec
jb
icebp
scas
pop
mov
aam
xor
and
mull
imul
outsb
pop
call
lods
ljmp
fucomp
add
nop
sub
add
add
push
out
add
and
idiv
pop
out
jl
mov
pavgb
mov
jle
jecxz
push
cld
pushf
sbb
or
nop
out
addl
and
in
add
enter
test
add
add
mov
xchg
in
scas
adc
mov
mov
inc
std
ljmp
sub
fisubs
ret
xchg
adc
fcomi
call
lods
adc
pop
hlt
clc
out
pop
or
xor
lds
xor
inc
xchg
pop
arpl
lcall
and
mov
dec
bound
add
add
jecxz
adc
sub
popa
and
push
add
je
push
push
mov
dec
daa
or
mov
test
jmp
push
out
add
ljmp
xor
ja
push
loope
add
ljmp
es
out
add
out
das
outsl
pop
add
cmp
mov
jno
or
stc
call
mov
mov
in
xor
jae
popf
jae
or
jnp
out
mov
jae
cwtl
mov
dec
add
push
sti
mov
sub
adc
popa
aaa
mov
pop
sub
imull
int
addl
add
lcall
ss
loope
mov
pop
testl
test
xor
fsubl
in
cltd
mov
std
pop
imul
les
xor
mov
pop
div
jo
pop
fisubs
jp
rep
ljmp
and
or
dec
pusha
add
ljmp
jns
add
jmp
pop
adc
inc
adc
cs
idiv
fisttps
mov
jne
add
jnp
push
mov
shlb
jl
lahf
jb
or
jb
mov
cmp
adc
pop
rorl
data16
mov
pop
ljmp
das
dec
idiv
aam
out
mov
adc
jb
mov
leave
jmp
je
scas
inc
int
daa
pop
push
jge
mov
fidivl
mov
ficomps
addb
add
dec
hlt
test
cmpsl
add
fcom
adc
lcall
lret
icebp
or
push
mov
push
mov
nop
add
in
pusha
mov
mov
xchg
mov
pop
push
add
nop
mov
lcall
cmp
fsts
adc
jmp
ljmp
out
call
cltd
jo
xchg
mov
add
jnp
or
lds
popa
sub
or
mov
cltd
out
sub
in
dec
pop
jno
mov
sahf
pop
cmp
lret
mov
pop
lcall
arpl
cmc
call
add
shll
inc
aaa
pop
jo
dec
xor
jnp
cli
fstps
bound
pusha
pusha
pusha
cmp
and
cmp
pop
mov
movsb
pop
testl
lods
ljmp
test
jb
sahf
adc
lods
ffree
dec
xor
adc
inc
cs
adc
mov
clc
add
mov
mov
xlat
mov
testl
jb
jecxz
cmc
lods
gs
xchg
negl
decb
add
sbb
shr
arpl
push
xlat
out
mov
adc
mov
add
xchg
out
arpl
xor
push
idiv
add
hlt
call
js
mov
jge
add
dec
clc
int3
aad
push
push
out
sub
sbb
mov
mov
call
push
in
xor
fmuls
mov
push
idiv
pushf
popf
adc
pop
std
adc
jle
add
dec
or
inc
add
mov
inc
add
and
aas
xchg
adc
mov
and
clc
out
aaa
rcll
push
lcall
add
pop
clc
jns
loope,pn
lret
xchg
adc
imul
pop
inc
mov
adc
pop
add
sub
dec
rcll
sahf
push
std
in
dec
cmpsb
fidivrl
mov
pop
ljmp
scas
in
xor
jae
mov
ljmp
mov
jns
pushf
ljmp
mov
rcrl
jp
xchg
xlat
add
add
add
shl
jae
add
add
sub
jp
xchg
iret
add
add
add
cmp
push
outsb
xor
cmpsl
xchg
jae
scas
ljmp
scas
inc
fisttps
fsubp
mov
cmp
jmp
lods
ljmp
lods
ljmp
jb
jl
je
testl
call
cmp
inc
push
bound
mov
cld
add
pop
in
divb
add
add
push
dec
xor
pop
or
cmp
mov
push
es
and
mov
cld
add
les
jmp
stos
mov
arpl
insl
js
sti
rorl
pushf
and
mov
push
jle
shll
incl
test
mov
lock
ret
xchg
mov
pop
insl
mov
adc
add
add
loop
mov
ljmp
cltd
ljmp
rcrl
dec
imul
mov
xchg
adc
fldenv
add
push
or
outsl
mov
add
out
pop
adc
fildll
jle
push
jl
mov
leave
sti
es
test
sbb
decl
inc
movsl
adc
xor
movb
add
nop
nop
push
jge
jnp,pt
sub
add
jg
rolb
mov
dec
jge
cwtl
inc
add
inc
jl
repnz
add
xor
cmpsl
out
lcall
push
jp
in
rorb
jno
test
push
jl
jb
cld
xchg
es
add
xor
imul
push
fisttpl
imul
test
cmp
jae
popf
popa
cmpsl
sti
xor
arpl
cld
call
xchg
sahf
add
out
inc
insb
inc
add
pushf
ljmp
loope
lock
cmp
in
insb
xor
stos
arpl
pushf
ljmp
mov
outsl
add
std
call
int
in
je
pop
sub
fwait
gs
loopne
add
add
add
pop
cmp
jb
fs
push
std
call
push
xor
mov
mulb
xor
add
xchg
mov
mov
cld
outsb
nop
xor
std
or
mov
call
or
add
dec
js
fildll
cltd
jg
mov
adcb
add
add
xor
lock
xchg
adc
lods
aad
ljmp
add
iret
adc
loope
notb
insl
inc
loope
pusha
nop
add
out
add
mov
lahf
clc
mov
pop
inc
lea
aam
call
dec
test
dec
lods
adc
int3
and
in
sti
push
inc
mov
es
mov
pop
idiv
clc
shrb
pop
xor
add
mov
adc
dec
mov
fst
mov
mov
loop
inc
push
xchg
repz
imul
adc
or
pop
jge
mov
inc
test
scas
inc
add
loop
xchg
xor
and
shl
pop
test
pop
loope
ds
lock
dec
xchg
cwtl
push
pop
add
and
xor
dec
xchg
cwtl
aaa
cmp
add
pop
jnp
mov
inc
add
outsb
das
jbe
mov
in
and
sub
pop
lock
fimull
in
loope
adc
jmp
jae
mov
lret
mov
ljmp
scas
loope
mov
push
xchg
jmp
dec
push
je
add
call
add
loopne
inc
and
clc
pop
popf
jmp
jl
sbb
mov
xor
icebp
push
lock
inc
xchg
out
add
out
stc
dec
outsb
imul
xchg
es
iret
add
mov
jae
push
call
xchg
mov
inc
outsb
mov
pop
sbb
add
add
popl
fildll
xchg
adc
lods
mov
jb
mov
out
xchg
adc
push
or
xchg
add
lods
ljmp
andb
stos
mov
pusha
out
ja
in
push
divl
inc
pusha
sbb
jmp
div
cmp
imull
addr16
clc
push
jae
xlat
lods
ljmp
mov
out
adc
adc
lods
gs
cltd
icebp
stos
or
add
sahf
mov
jle
ret
inc
idiv
jns
cltd
mov
pop
sub
std
call
loop
dec
xchg
adc
idiv
pushf
inc
mov
mov
jle
pop
push
je
hlt
sub
add
mov
sub
jecxz
jle
xor
jns
loope
jg
popa
or
arpl
push
mov
cmovo
lcall
adc
out
push
lock
stos
in
sbb
out
xchg
sub
cwtl
sub
add
out
mov
push
jl
xlat
scas
add
es
imulb
aad
adc
scas
push
add
lods
or
push
push
add
je
mov
das
ljmp
mov
add
in
fdivrs
mov
pop
push
sbb
fsubrs
scas
lods
enter
inc
add
scas
add
cmp
arpl
push
les
or
mov
loop
cli
cmp
add
scas
fisttpll
add
mov
aas
les
xchg
push
mov
jo
mov
jns
mov
negb
shll
xchg
pop
popa
cmpsb
push
and
jp
out
jmp
ret
jno
push
hlt
call
cmpsb
mov
jae
adc
fwait
pusha
dec
jecxz
push
and
and
jmp
push
shrd
iret
stos
add
in
xchg
jg
repnz
sub
and
sub
dec
negl
mov
cmp
inc
bound
ljmp
dec
mov
or
and
mov
push
test
jb
test
xor
in
testl
jmp
data16
mov
insb
stos
or
add
fbld
jbe
push
out
push
pushf
pop
jge
lahf
pop
xchg
mov
xchg
stos
clc
pushl
out
data16
fs
into
adc
push
in
pop
imul
pop
int3
add
stos
mov
mov
mov
in
mov
cltd
jb
add
jp
add
add
add
xorl
test
cli
pop
pop
std
arpl
out
xor
fwait
jle
or
add
lret
dec
add
mov
xchg
mov
push
add
ds
jle
scas
ficoms
inc
sub
push
add
bnd
mov
scas
push
inc
int3
push
inc
int3
in
push
xor
add
add
fwait
mov
ljmp
inc
int3
ljmp
mov
sub
pop
jns
sub
add
ljmp
mov
loope
add
mov
mov
jo
mov
xor
mov
xor
scas
jae
cmpb
or
adc
add
add
bound
sbb
stc
xchg
xchg
and
call
test
xchg
add
or
scas
movsl
sub
xor
sub
push
loop
mov
call
or
or
jns
addb
lods
ljmp
and
fmull
loope
jl
adcb
add
popf
insl
leave
aaa
shrb
xor
adc
lods
jb
clc
out
stos
or
jno
faddl
jmp
lods
ljmp
jmp
ss
mov
xor
mov
test
ds
lds
mov
mov
outsb
stos
or
bound
mov
mov
notl
incl
add
add
loopne
js
jbe
or
repz
adc
xchg
loop
js
je
or
lock
push
or
jnp
test
mov
jmp
add
adc
shl
jg
decl
pop
mov
idiv
inc
jnp
test
jp
pop
pop
adc
addl
and
add
push
rorl
sbb
popa
mov
inc
xlat
data16
arpl
scas
out
mov
outsb
xchg
mov
jecxz
inc
mov
sub
subb
cld
pushf
wbinvd
add
ret
popa
daa
adc
xor
add
push
sti
in
sbb
aad
mov
inc
int3
jp
mov
sub
cmp
push
and
enter
sbb
movl
add
add
add
add
cmp
dec
dec
adc
add
scas
push
add
sub
add
into
push
jp
ljmp
stos
inc
rcrl
mov
aam
scas
jae
xchg
mov
call
inc
xor
inc
sbb
push
call
fsubrs
jmp
xor
sbb
imul
add
add
add
push
jmp
inc
inc
pop
aam
ljmp
scas
jae
xchg
add
call
add
sub
push
out
call
insb
pushf
ljmp
mov
ds
or
add
lcall
and
in
mov
mov
xchg
loop
add
add
ljmp
cs
imul
test
pusha
jo
jmp
and
add
fwait
or
outsl
push
out
add
ss
pusha
xor
add
imul
mov
jb
pusha
sbb
add
inc
faddl
add
jle
mov
incl
jmp
add
xlat
jo
mov
repz
popa
jae
xchg
or
dec
fimull
adc
out
mov
insb
mov
mov
jnp
push
loope
jl
pop
add
adc
out
mov
mov
mov
pusha
clc
mov
mov
ljmp
add
add
test
cmp
push
cmpb
cmp
ds
cmp
xor
adcl
test
or
scas
enter
popf
sbbl
test
sbb
ljmp
nop
cmp
push
add
pop
jg
stc
add
xchg
sti
xchg
aas
int3
bound
int3
jp
aas
int3
jb
xchg
and
add
add
push
add
clc
imul
pop
roll
add
ljmp
aaa
jo
repz
call
cmp
outsb
sbb
add
ljmp
icebp
imul
repnz
js
mov
call
mov
cmp
add
add
test
shl
scas
ljmp
stos
stos
call
mov
std
cli
imul
addl
daa
xchg
adc
lods
movsb
ret
scas
inc
clc
lods
je
imull
push
add
testb
call
lods
movsb
ret
aas
xchg
mov
add
xlat
jge
xor
jbe
pushf
sub
movsb
movsl
mov
add
cmc
ja
jecxz
mov
mov
jne
pop
loopne
adcl
lods
icebp
scas
addl
out
push
push
adc
in
clc
inc
jnp
dec
adc
sbb
xchg
jl
adc
add
loopne
adc
je
jge
pop
addr16
push
pop
in
jl
xrelease
add
pop
add
mov
cmpsl
arpl
movsl
data16
dec
jae
push
xlat
jmp
dec
pop
add
dec
sbb
push
adc
les
mov
int3
inc
mov
int3
push
mov
int3
scas
decb
pop
push
std
cmp
popa
lea
push
mov
jmp
mov
jg
jae
aam
test
or
sti
scas
push
add
mov
js
std
lcall
xchg
mov
pop
jmp
mov
jg
ljmp
mov
xor
and
push
mov
sub
dec
ds
xchg
es
ss
cmp
ljmp
stos
out
inc
jae
movsl
addr16
pandn
push
ss
push
adc
jmp
mov
data16
scas
ljmp
scas
ljmp
sub
in
mov
imul
xchg
jno
cmovl
data16
add
add
xchg
push
scas
ljmp
cmpsl
movsb
int3
add
pop
add
ljmp
mov
push
icebp
es
mulb
mov
enter
sub
pusha
sarb
jmp
ret
jmp
mov
or
fadds
jmp
xor
jmp
aaa
jo
repnz
ljmp
xchg
out
jmp
out
scas
jmp
insb
pop
jb
jmp
push
ljmp
xchg
ss
cs
shlb
add
xchg
jae
mov
fcmovu
mov
imul
leave
sbb
aaa
pop
loop
adc
outsb
mov
mov
mov
push
or
roll
call
in
or
inc
jae
adc
sub
jl
fwait
in
add
fdivrs
mov
push
mov
ret
xchg
mov
dec
mov
fcoml
xor
mov
rcl
mov
mov
add
ret
cmp
xchg
rorb
xor
test
cmpl
test
out
imul
insl
lea
fidivs
xor
adc
lret
sahf
rcrb
sub
jge
push
mov
or
add
das
cli
sub
scas
push
lods
add
fisubrl
scas
push
add
das
in
sub
scas
push
lods
add
in
sub
scas
push
js
out
lock
into
push
sub
add
add
add
add
jmp
inc
mov
mov
cli
adcb
add
in
mov
mov
push
jmp
mov
imul
leave
push
cmpl
sub
push
out
adc
xor
decb
test
ljmp
cmpsl
insb
cmp
scas
ljmp
sti
sub
sub
mov
lods
ljmp
push
push
add
daa
fldl
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
jl
loope
inc
add
scas
jl
lock
add
scas
jl
jecxz
inc
add
scas
jl
repnz
add
scas
jl
in
inc
add
scas
jl
add
in
out
add
in
out
add
in
out
add
in
out
sbbl
jae
pushl
data16
or
jmp
call
mov
orb
ljmp
clc
add
add
add
sub
fildl
movl
daa
jmp
xchg
pop
in
add
orb
add
ljmp
mov
inc
imulb
inc
imulb
inc
imulb
inc
add
lods
jnp
mov
dec
add
lods
mov
mov
dec
add
lods
jnp
mov
dec
add
lods
mov
mov
cmp
lods
jnp
mov
dec
add
lods
mov
mov
cmp
divl
lods
mov
mov
ds
lods
sti
divb
lods
or
mov
inc
add
lods
sti
and
inc
es
adc
divl
pop
dec
jmp
fidivl
mov
fdivl
subl
fcomps
add
add
add
add
out
cs
mov
sbb
sbbl
lcall
bound
into
mov
inc
shll
out
aas
jp
aaa
jnp
ds
orb
jmp
inc
inc
mov
sbb
pop
add
stc
fcompl
shll
push
or
imul
imul
je
rorl
outsl
neg
stos
outsl
shrb
mov
mov
push
or
xor
jmp
lods
ljmp
jb
xor
xor
sub
mov
fisubrl
cmp
and
stos
or
jmp
sub
cmp
mov
push
in
out
roll
ljmp
stos
outsl
fsubrl
sub
jmp
push
jmp
add
jne
add
cmp
popf
pop
adc
add
jmp
cs
xlat
cmp
or
ljmp
js
enter
push
or
add
call
es
xchg
cmp
popf
xchg
cmp
mov
cmp
popf
xchg
adc
add
xchg
adc
test
or
adc
pop
add
inc
mov
test
aaa
add
mov
aad
inc
call
add
hlt
add
sbb
inc
mov
fildl
add
scas
xor
xchg
scas
dec
ret
lcall
sbb
and
ret
scas
inc
add
outsb
inc
test
mov
add
fnstsw
incb
add
add
add
add
pop
sbb
adc
and
sbb
sub
cmp
push
and
add
and
add
test
or
pusha
sub
scas
ljmp
loope
arpl
aas
icebp
imulb
ljmp
lret
out
dec
add
stos
call
fldenv
jecxz
sbb
add
add
inc
flds
imul
xor
dec
add
stos
call
add
imull
add
adc
mov
xor
add
repz
fwait
mov
sub
adc
fldl
mov
fsubrl
aam
add
sbb
xchg
jmp
arpl
loope
out
xchg
jmp
shll
add
lods
std
jnp
stc
inc
jmp
xchg
imull
out
cltd
dec
sbb
adc
scas
shl
xor
ret
fisubrs
je
sbb
mov
lret
xor
jmp
stos
std
inc
jmp
mov
xor
jmp
push
in
and
lret
inc
inc
data16
add
scas
shlb
dec
test
or
xor
insl
fdivr
pop
in
add
pop
cs
out
inc
pop
sub
jne
sti
rcrl
repnz
scas
in
xor
test
dec
jmp
shlb
add
mov
xor
stc
pop
push
cmp
lret
fisubrl
pop
test
or
xchg
movswl
xchg
je
mull
out
je
and
cs
cmp
scas
jg
add
or
int3
repnz
cs
ljmp
and
dec
xlat
aaa
xor
test
add
adc
mov
int
not
aaa
push
xlat
test
add
scas
int3
les
sub
pop
sarb
jl
lret
mov
fwait
imul
lock
cmc
loope
and
ljmp
xor
add
cmp
and
jge
push
icebp
negb
jno
int
fildll
repnz
jge
push
in
jp
stos
jae
rolb
js
ljmp
mov
in
mov
sbb
call
add
lock
jmp
movsl
hlt
mov
sub
lods
fisttpll
loopne
mov
jl
push
je
int
jae
int
add
mov
je
cmpsl
mov
test
out
jmp
inc
sub
xor
mov
xor
sbb
cmp
pop
jmp
sub
scas
ret
in
xor
jmp
outsl
sub
inc
popf
incb
push
ljmp
int
mov
jmp
loope
mov
or
mov
in
arpl
push
add
mov
test
addr16
add
loop
dec
mov
mov
push
insl
and
ljmp
ret
dec
decl
lock
dec
xorb
mov
mov
loopne
mov
dec
das
push
or
add
mov
jle
mov
jl
inc
inc
iret
jg
mov
adcl
mov
mov
mov
add
mov
add
mov
add
mov
add
call
add
xchg
call
add
scas
inc
add
scas
cmp
add
in
std
ljmp
jl
add
dec
idiv
push
push
out
decl
ljmp
lods
popf
pushl
mov
add
lds
add
pushf
sbb
cmp
hlt
sbb
stc
scas
add
stc
lods
int3
sbb
stc
mov
in
stc
jns
and
xor
stc
test
ljmp
sbb
xor
lods
pop
out
pop
rorl
sub
cld
imull
mov
clc
mov
faddp
sub
or
ljmp
mov
fbstp
mov
add
xor
popa
enter
rolb
add
add
fiadds
mov
sbb
popa
fucom
sbb
call
mov
jb
fisttpll
mov
xlat
sub
inc
lds
dec
or
and
xor
bound
or
push
out
sub
lods
iret
shlb
lcall
lods
pop
sbb
adc
add
into
or
ljmp
shll
mov
sub
cmp
out
jmp
or
int
add
mov
ljmp
push
outsl
dec
xor
sbb
add
dec
xor
cld
xchg
sbbl
jae
repz
gs
add
add
mov
dec
outsb
loop
les
add
pop
add
jne
add
inc
inc
out
add
pop
inc
or
add
pop
addr16
pop
aas
adcb
ds
and
adcb
adc
jne
and
or
je
repnz
int
xchg
cmp
adc
add
add
and
adc
aaa
sbb
stc
jo
sub
shrb
repz
repz
add
scas
xchg
and
loop
aad
frstor
test
jge
test
mov
inc
pushf
inc
mov
std
jno
and
add
cmc
jg
dec
lcall
fldl
add
mov
iret
test
xor
jns
fisubrs
add
xor
sarl
jecxz
jae
push
cli
filds
cs
xchg
or
rcll
nop
jne
jae
lods
hlt
bound
hlt
sub
xor
call
cmp
sub
test
sahf
mov
rol
inc
mov
push
add
ljmp
int
je
lret
sbb
sub
scas
je
add
shr
in
ljmp
scas
movsl
mov
popf
leave
shr
stc
test
imull
daa
outsb
dec
inc
jb
lret
test
lods
add
sub
lods
cmpsl
mov
rcrl
jl
lods
ljmp
pushf
or
out
shll
or
movsb
call
push
insl
repz
scas
ljmp
fmull
dec
or
shll
add
lock
and
add
inc
mov
repnz
cmp
stos
or
aam
je
repz
je
adc
and
inc
mov
repz
sub
push
cmp
add
add
inc
sub
popf
mov
in
mov
inc
mov
and
ljmp
xchg
adc
cmp
jl
sub
sti
popf
mov
or
daa
cmp
sbb
inc
sti
popf
mov
in
add
icebp
sub
sbb
mov
icebp
xchg
loope
enter
je
aas
sub
enter
rorl
or
mov
mov
movsb
and
adc
add
pop
mov
sub
xor
jecxz
pushf
sbb
repnz
push
push
in
pop
xchg
aas
and
jb
jp
or
orb
pop
push
push
cmp
out
es
mov
xchg
ljmp
scas
ljmp
int
iret
pop
or
ljmp
cli
xor
outsb
dec
add
sahf
in
or
sub
lods
icebp
xrelease
adc
cvtps2pi
shlb
insb
push
into
fwait
cli
or
call
add
lret
outsl
outsl
adc
sub
movsb
rorb
cmp
dec
dec
sub
das
sahf
iret
orl
les
push
hlt
mov
inc
add
ljmp
movsl
xor
pop
fildll
jmp
call
sahf
sbb
lods
stc
lret
movsl
movsb
test
lods
ljmp
xor
add
jb
jb
and
ljmp
test
xor
and
rolb
add
ss
add
and
jp
sbb
jb
push
jg
mov
aas
jmp
lods
add
xchg
lods
std
bnd
push
and
iret
add
addb
shr
add
or
or
test
scas
jl
dec
into
add
lcall
or
inc
int
pinsrw
add
or
test
jl
add
and
scas
jl
call
push
jmp
jge
or
jl
mov
jp
cmp
andb
je
imul
mov
mov
cmpsl
test
lds
inc
aad
or
xor
push
xchg
aad
pusha
sti
cld
jae
pop
out
test
in
xchg
add
xor
inc
xlat
das
jne
xchg
adc
xor
inc
out
lds
into
add
out
jge
xchg
lds
jge
xchg
test
sub
pop
pop
sbb
pop
jmp
add
ljmp
stc
ljmp
scas
ljmp
adc
add
xchg
cld
out
outsl
fadd
icebp
popa
repz
cmpsl
cld
mov
sub
jno
lret
jns
lods
add
jae
jae
mov
sub
xchg
aam
inc
imul
in
loopne
arpl
mov
add
fdiv
adc
xor
add
lret
or
add
or
add
or
jmp
cmc
popf
xor
rcr
add
ds
lcall
and
mov
bound
lret
or
adc
ret
movsb
sbbb
jno
lret
js
add
loopne
ret
ljmp
test
out
push
xor
call
lods
ljmp
divl
movb
cmpsb
cmpsb
jno
orl
jle
inc
cmp
roll
adc
push
push
addb
inc
test
sub
inc
ret
outsb
inc
mov
push
stos
and
xor
or
fldt
jl
mov
enter
icebp
hlt
cmp
dec
jae
cs
jl
lahf
jo
mov
mov
nop
and
inc
repz
cli
add
clc
jle
scas
daa
fld
loopne
mov
cwtl
inc
subl
test
aas
mov
jno
in
aas
scas
adc
test
and
mov
shlb
inc
pop
xor
dec
add
scas
adc
mov
js
xchg
jl
dec
push
add
ret
pusha
adc
imul
inc
adc
test
lea
je
movsl
add
aad
xchg
adc
nop
sbb
sbb
mov
xchg
jp
ljmp
jno
loop
push
push
mov
fsubrs
pop
dec
sbb
add
insl
pop
xchg
ljmp
jp
pop
popf
and
jmp
sub
xchg
or
repz
xor
movb
jmp
pop
outsl
jmp
fs
jmp
pop
outsl
test
mov
mov
xchg
sub
aaa
je
adc
add
in
imul
popf
xchg
das
xor
out
mov
sub
add
add
scas
inc
jmp
jp
add
sbb
jmp
ljmp
outsl
fildl
les
cmpsl
fucomp
mov
add
mov
adc
lods
ljmp
push
cmpsl
stc
jo
push
mov
sbb
jmp
testl
mulb
mov
add
add
jno
add
in
push
xchg
out
add
lea
add
sbb
test
add
aam
idiv
push
cltd
push
sbb
push
out
dec
imul
int3
jp
mov
cltd
jb
mov
and
vmread
jl
in
stos
jp
dec
and
add
cmp
jl
out
sbb
jl
ja
rorl
cwtl
dec
faddl
add
add
cwtl
std
pop
stc
xchg
inc
adc
leave
mov
pop
pusha
sub
aaa
and
sbb
inc
call
mov
repz
sbb
xchg
outsb
add
mov
mov
scas
in
mov
in
inc
and
ss
mov
testb
add
jnp
mov
lret
add
sbb
testl
out
or
jae
std
ljmp
add
stc
roll
bound
lahf
out
int3
add
loopne
imul
add
cmpsb
clc
add
jae
mov
aaa
lock
roll
adc
je
jne
push
or
sahf
pushf
int3
fdivrl
lock
mov
xchg
add
add
loopne
in
jb
cmp
add
fnstsw
and
cmp
or
jmp
and
mov
int
or
ret
pop
xchg
cwtl
in
lds
push
add
clc
add
fwait
mov
movsb
movsl
push
add
lods
ljmp
fldcw
and
adc
jl
cwtl
sti
xchg
mov
add
jne
stc
jmp
out
adc
adc
mov
mov
push
pop
and
bound
js
insl
add
push
sub
push
daa
pusha
jo
data16
dec
adc
jbe
stos
stc
fs
sbb
aas
sbb
cmp
jo
sti
fs
inc
add
or
push
xchg
inc
fmuls
lea
add
add
ljmp
push
add
push
pop
shrb
loop
aam
pop
mov
jmp
xchg
in
xchg
push
jle
ret
adc
inc
mov
fbstp
pop
mov
lret
push
sti
pop
jle
or
negl
rclb
aad
int3
fwait
aad
int3
scas
push
jl
and
xor
push
cmpsb
mov
adc
paddb
or
sub
cwtl
leave
bsr
lret
mov
mov
or
mov
xor
into
add
ret
dec
jae
les
ja
int3
bound
int3
cli
inc
inc
int3
repnz
in
and
xor
test
jp
mov
mov
xor
stos
add
push
inc
xchg
scas
loope
sub
cmp
js
push
xor
adc
or
test
and
adc
jp
aaa
out
ja
jbe
gs
jp
aas
into
or
add
add
mov
push
adc
jp
daa
mov
inc
lea
push
test
int3
data16
pop
and
jbe
push
pop
adc
jg
das
jle
pop
lea
adc
test
maskmovq
mull
popa
jge
mov
mull
out
fs
testl
fcomi
ss
adc
call
mov
punpckhdq
pop
roll
pusha
sub
cmc
push
mov
roll
bound
rdpmc
sbb
clc
add
lods
sub
jb
mov
lds
or
into
movsl
adc
mov
es
lods
xchg
repnz
loope
stos
xchg
add
lods
ljmp
loope
outsb
add
imul
decl
push
dec
mov
cmp
and
int3
adc
int3
xchg
rol
int3
dec
fists
jae
jle
lahf
pop
jle
mov
jae
or
or
pop
ljmp
or
sti
mov
xchg
popf
and
out
add
int3
push
adc
push
cli
push
imul
ret
hlt
je
and
jbe
xchg
dec
or
pop
decl
aad
xchg
xor
adc
add
add
mov
test
pop
jnp
outsb
xchg
jae
mov
and
in
pop
jno
jb
pop
and
out
cs
jp
cs
jb
cs
push
or
jae
add
pushf
test
or
cld
xchg
daa
xor
xchg
and
xchg
adc
add
call
add
incl
add
add
add
loop
inc
or
jmp
jle
pop
mov
xchg
scas
insl
out
add
ret
icebp
sub
jmp
sub
scas
clc
call
or
adc
mov
lods
xor
mov
jmp
popf
mov
and
push
jmp
cmpsl
test
or
ljmp
lret
sub
data16
jmp
cmpsb
lock
idivb
mov
mov
mov
aaa
insb
add
lods
ljmp
jbe
add
inc
adc
sub
push
fs
xchg
add
lahf
push
ljmp
clc
dec
mov
xor
push
insb
insl
xchg
add
xor
mov
mov
divl
testl
sub
push
fs
xchg
add
cs
sub
lds
pushf
sbb
push
fistpll
mov
inc
mov
or
test
push
sbb
mov
pop
adc
sar
push
push
xlat
out
adc
stos
add
jmp
xchg
ds
popa
pop
cmp
pop
mov
add
add
add
push
call
add
cmp
sbb
repz
lods
aad
mov
or
mov
clc
push
rcrl
push
xchg
push
lock
imul
mov
repnz
pop
cli
js
in
scas
mov
clc
dec
add
and
jp
scas
call
test
xor
add
add
xorb
xor
lds
inc
scas
sub
xor
imul
push
jg
mov
sub
dec
adc
push
mov
cmp
sahf
or
jl
or
insl
mov
xchg
and
add
jno
ret
xchg
pop
leave
aad
ljmp
mov
add
inc
shll
adc
outsb
pop
mov
or
jmp
jnp
push
aam
fsubl
add
popl
add
insl
push
insb
sbb
popa
sahf
xcrypt-cfb
cmpsl
call
jo
xchg
aas
add
scas
or
and
in
adc
adc
cmc
xchg
or
cmp
add
add
mov
fildll
pop
add
sbb
fs
jmp
lods
ljmp
pop
sub
pusha
or
jmp
std
pop
icebp
xchg
sahf
sbb
sbb
testl
mov
std
mov
cwtl
daa
je
cltd
test
inc
mov
add
ss
add
lods
ljmp
lods
ljmp
outsb
jecxz
push
mov
testl
mov
add
xchg
sbb
dec
ret
int3
push
and
movsl
std
add
push
out
add
sarl
fidivrs
aam
call
mov
xchg
add
jo
cmp
xor
je
add
jl
sti
idivb
lahf
jecxz
add
and
ret
or
jo
sbb
idivb
clc
sbb
pop
ret
push
push
pop
mov
fldt
and
fs
rcl
xchg
xor
adc
add
in
sub
in
sub
cmp
push
and
add
add
popf
std
gs
stos
mov
insl
adc
popa
pop
add
jno
push
pop
in
movb
stc
pop
pop
adc
rolb
jmp
push
or
ljmp
lret
cli
mov
push
xor
jl
or
popa
adc
lea
fldl
pop
test
ljmp
scas
ja
adc
add
jbe
jne
pop
imul
xsha1
cmpsb
or
mov
bnd
lcall
inc
sahf
add
or
stc
pop
push
sub
jmp
dec
sbb
adc
scas
nop
lea
inc
adc
add
gs
sbb
adc
cltd
mov
ljmp
mov
or
add
add
add
lods
imul
flds
mov
add
pushf
pop
mov
jle
jb
test
jmp
in
mov
test
insl
dec
in
cmp
add
jb
push
pop
mov
adc
sub
jmp
mov
xchg
loope
lds
add
popa
lret
test
add
pop
add
arpl
jnp
bound
imul
add
add
decl
leave
ljmp
fwait
jg
mov
inc
push
or
jle
lahf
ds
ljmp
inc
adc
mov
jl
les
stc
je
je
add
cmp
or
pop
push
or
mov
hlt
into
and
das
inc
fidivrl
add
add
jae
or
dec
sbb
cli
mov
out
fwait
add
lcall
dec
or
mov
ljmp
and
scas
mov
or
jo
push
add
jb
dec
dec
fst
mov
pop
or
or
inc
test
aaa
adc
push
fstp
jl
adc
inc
xchg
pop
xchg
and
roll
inc
test
add
add
out
adc
jl
adc
inc
mov
xchg
or
fwait
sbb
lret
into
add
xlat
xor
arpl
xor
call
sub
ljmp
fyl2x
xor
std
pop
mov
std
les
lret
mov
into
shl
movsb
shll
add
add
jl
dec
ret
sbb
jg
idivb
adc
imull
stc
add
add
mov
mov
xor
in
loop
popa
pop
push
adc
sub
test
lret
aaa
push
adc
xor
movsb
in
mov
push
nop
mov
mov
gs
mov
jmp
lret
and
rcll
ljmp
lods
xchg
lods
or
ss
inc
jmp
jb
inc
jmp
mov
inc
jmp
push
add
jmp
or
jmp
into
outsb
ljmp
movsb
out
add
outsb
ljmp
adc
add
add
add
sbb
add
pop
cwtl
dec
aaa
stos
add
inc
xchg
add
lret
inc
xlat
sub
adc
jg
std
call
push
adc
jbe
add
fcompl
ret
shll
lret
int3
cmp
and
repnz
dec
and
jb
and
mov
iret
mov
jae
mov
bound
je
mov
add
add
bound
in
jmp
jae
mov
lret
lret
lret
scas
push
aam
data16
mov
jno
fnstcw
out
loope
and
add
loope
ret
jne
pop
or
or
in
pop
or
sti
dec
and
cli
out
sub
mov
push
and
loopne
lock
xchg
xlat
pushl
xchg
xor
rcrb
mov
lds
xor
inc
or
fnstsw
jl
and
jp
or
aad
xchg
ljmp
lods
ljmp
cmc
lods
cmc
movsl
in
fs
jl
jne
je
mov
popa
sub
cmpsb
xor
add
add
in
ljmp
mov
call
sbb
lahf
sub
jne
sub
gs
cld
jne
in
bnd
sub
or
stos
hlt
push
fdiv
jae
mov
lock
addr16
cmp
or
repnz
jae
rcl
sbb
xchg
mov
add
add
ret
xchg
cmp
ljmp
push
incb
mov
inc
jmp
xchg
add
push
xor
leave
repnz
ficompl
mov
imul
lcall
idivb
loope
outsb
lods
cmc
out
inc
add
rorb
add
lods
ljmp
inc
daa
jle
out
sub
add
add
cli
jmp
sub
jp
in
add
mov
sbb
dec
repz
or
add
or
adc
xchg
lock
and
mov
xlat
sbb
sbb
sarb
mov
lahf
clc
xor
or
sbb
adc
xchg
push
xor
adc
es
dec
mov
jmp
test
mov
and
out
clc
sbb
clc
and
in
arpl
add
scas
push
mov
in
or
rorb
test
jg
mov
jnp
jmp
jb
mov
mov
lea
push
dec
jecxz
scas
fwait
jb
cltd
mov
clc
sarl
ret
mov
push
pop
lret
mov
adc
scas
adc
add
js
and
jp
and
xchg
sahf
sub
dec
fsubr
aaa
mov
add
inc
fwait
arpl
es
clc
es
mov
mov
mov
inc
jb
hlt
lea
add
pushf
xor
jo
andb
aad
add
cs
xor
sbb
scas
cld
sldt
add
sub
push
hlt
sub
je
shr
das
hlt
sub
inc
inc
xor
fs
lret
dec
rcr
jae
lret
in
js
cmp
jo
hlt
int3
fdiv
out
icebp
sub
add
call
ds
fucomip
pop
popl
adc
adc
mov
add
add
fwait
aaa
sub
in
in
add
lods
ljmp
jecxz
imul
lods
ljmp
sub
add
lods
ljmp
jo
add
call
ljmp
sarl
jmp
addl
add
out
mov
add
mov
stc
decl
aaa
add
aaa
add
add
push
idiv
lcall
stos
aaa
add
aaa
add
call
stc
ljmp
add
test
add
push
idiv
inc
test
aaa
add
out
add
idiv
pushl
in
add
out
add
stc
call
add
out
add
idiv
incl
icebp
add
icebp
add
idiv
call
add
adc
add
jno
ds
insl
idivb
scas
adc
add
call
ds
sti
ds
adc
add
das
idivb
scas
sub
ds
adc
add
add
scas
pop
inc
ds
adc
add
cmpsb
xor
scas
mov
aas
scas
adc
add
mov
repnz
scas
add
add
add
add
arpl
aas
scas
add
add
ljmp
push
shlb
call
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
fsubr
add
fsubr
add
fsubr
add
call
add
fucomi
add
call
add
call
add
add
add
fucomi
add
fucomi
add
fucomi
add
fsubr
add
fucomi
add
fucomi
add
notb
jmp
lods
adc
lods
out
adc
lods
mov
jmp
lods
into
adc
lods
or
jmp
lods
adc
jmp
lods
push
adc
lods
adc
lods
dec
adc
lods
out
adc
lods
sub
jmp
lods
ss
lods
xor
jmp
lods
cs
lods
notb
jmp
lods
push
adc
lods
dec
adc
lods
push
adc
lods
push
adc
lods
pop
adc
lods
dec
adc
lods
push
adc
lods
mov
add
in
adcl
xchg
jns
xchg
insl
adc
jge
push
in
mov
inc
in
inc
adc
popf
adc
adc
push
in
add
add
or
inc
in
std
adc
in
add
pop
in
cmc
adc
in
stc
adc
in
in
adc
in
mov
adc
in
mov
pop
in
mov
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
add
sbb
add
sbb
add
adc
add
or
add
add
add
add
add
clc
mov
add
lock
add
test
add
aam
add
stos
mov
add
mov
mov
add
movsb
lahf
add
int3
mov
add
shlb
add
mov
add
mov
add
lods
mov
add
add
call
add
call
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
in
add
in
add
call
add
call
add
call
add
call
add
call
add
in
add
add
add
in
add
fucomi
add
add
lods
movb
lods
ret
lods
into
push
jmp
lods
push
jmp
lods
fiadds
jmp
lods
out
jmp
lods
out
push
jmp
lods
testb
lods
repnz
jmp
lods
scas
adc
lods
lcall
lods
mov
or
lods
push
or
lods
adc
jmp
lods
push
or
lods
out
jmp
lods
cs
lods
sub
jmp
lods
xor
add
call
lods
push
call
movsl
push
xchg
call
popf
push
xchg
mov
push
xchg
call
loope
xchg
aad
xchg
push
call
rorl
inc
call
add
inc
call
mov
push
inc
call
mov
pop
call
orl
call
mov
pop
call
gs
call
nop
pmovmskb
cmp
push
scas
add
inc
mov
add
xor
add
and
add
sbb
add
and
mov
add
add
add
xchg
add
dec
movb
test
mov
add
add
fisubl
add
hlt
stos
add
lock
add
call
stos
add
loopne
add
fdivrl
add
adc
add
ret
call
add
in
add
in
add
in
add
add
add
in
add
call
add
fsubr
add
call
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
fucomip
add
fucomi
add
call
add
fucomi
add
fucomip
add
add
call
add
call
add
add
lods
sahf
add
lods
dec
pop
jmp
lods
push
pop
jmp
lods
mov
jmp
lods
lret
lods
into
add
lods
rolb
lods
add
lods
fiaddl
lods
fiadds
lods
loop
jmp
lods
insl
push
jmp
lods
repnz
jmp
lods
incb
jmp
lods
ret
lods
movb
lods
lret
lods
into
pop
jmp
lods
mov
push
add
in
daa
sysret
in
rorl
mov
xlat
in
mov
or
in
mov
in
movsl
or
in
test
or
in
mov
in
movsl
or
in
test
or
in
mov
or
in
repz
xchg
in
out
xchg
mov
xchg
fisttps
push
in
int3
adc
inc
in
fisttpl
inc
in
iret
push
push
in
rorl
push
in
push
inc
in
popa
or
in
push
or
in
pop
or
in
dec
or
in
push
or
add
dec
mov
add
inc
stos
add
inc
mov
add
cmp
add
xor
add
sub
add
and
add
sbb
add
add
add
adc
add
or
add
add
add
clc
mov
add
movsl
add
lock
add
in
mov
add
mov
add
movsl
add
loopne
add
fdivl
ljmp
loop
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
add
jecxz
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
call
add
fsubr
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
add
call
add
loope
add
loope
add
loope
add
loope
jmp
lods
gs
jmp
lods
insl
add
jmp
lods
push
or
lods
pop
or
lods
pop
or
lods
bound
jmp
lods
push
jmp
lods
jb
jmp
lods
lret
lods
into
or
lods
rorb
jmp
lods
fimull
jmp
lods
loop
jmp
lods
ljmp
lods
repnz
lods
testb
lods
cli
or
lods
decb
jmp
inc
jmp
icebp
or
jmp
jmp
or
jmp
lds
pop
jmp
daa
or
xlat
call
leave
or
call
sbb
xlat
call
imul
call
xchg
or
call
xchg
or
add
add
call
orl
push
call
insl
or
jno
scas
add
insb
mov
add
add
movsb
add
pusha
mov
add
add
add
push
movsb
add
push
mov
add
add
add
xlat
mov
add
dec
mov
add
add
inc
movsb
add
inc
mov
add
add
cmp
add
add
add
mov
add
add
sbb
add
mov
add
add
cmpsl
movsl
add
add
add
add
add
cmpsl
ljmp
loope,pt
add
call
add
call
add
loope
add
loopne
add
loopne
add
loopne
add
loopne
add
add
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
loopne
add
loope
add
loope
add
loope
add
hlt
call
add
hlt
call
add
hlt
call
add
hlt
call
jmp
lods
bound
jmp
lods
pop
or
lods
push
or
lods
push
or
lods
mov
add
lods
dec
or
lods
inc
or
lods
inc
or
lods
ds
lods
cmp
jmp
lods
xor
jmp
lods
sub
jmp
lods
and
jmp
lods
test
jmp
lods
jl
jmp
lods
and
jmp
lods
insb
or
lods
push
or
lods
or
or
xchg
sbb
push
in
imul
add
add
pop
or
arpl
inc
in
push
or
icebp
or
in
inc
in
jmp
or
in
out
or
in
repnz
in
out
pop
in
ljmp
in
loop
pop
in
xor
pop
in
daa
or
in
into
or
in
rorb
in
or
in
lret
in
sbb
xlat
in
ud2
in
adc
in
pop
or
in
mov
xchg
cmpsb
or
in
sahf
or
roll
repnz
roll
fwait
mov
add
cmpsb
roll
cmpsb
roll
mov
roll
andl
add
roll
ja
roll
jae
roll
ret
add
mov
add
movsb
roll
scas
mov
add
movsb
roll
mov
movsb
roll
sahf
mov
add
movsb
roll
xchg
movsb
roll
mov
add
movsb
ljmp
add
call
add
hlt
call
add
hlt
call
add
hlt
call
add
hlt
call
add
hlt
call
add
add
call
add
add
add
hlt
call
add
hlt
call
add
hlt
call
add
call
add
hlt
call
add
or
lods
call
or
lods
loopne
jmp
lods
fmuls
jmp
lods
rorb
jmp
lods
enter
les
jmp
lods
rorb
lods
mov
or
lods
mov
jmp
lods
lods
or
lods
test
jmp
lods
mov
or
lods
cwtl
or
lods
xchg
or
lods
nop
or
lods
mov
jmp
lods
test
jmp
lods
jl
jmp
xchg
jmp
mov
xchg
jg
xchg
orl
jmp
jnp
xchg
outsl
or
jmp
imul
jmp
arpl
push
jmp
pop
or
dec
or
push
or
jmp
dec
or
jmp
inc
or
jmp
cmp
pop
jmp
xor
xlat
call
sub
call
and
xlat
call
sbb
scas
roll
push
cmpsl
roll
adc
roll
or
roll
add
roll
cli
cmpsb
roll
mulb
roll
out
mov
add
cmpsb
roll
out
roll
loop
roll
fidivs
roll
cmpsb
roll
shlb
roll
lret
add
cmpsb
roll
ret
add
cmpsb
roll
mov
roll
mov
add
add
roll
stos
cmpsb
roll
cmpsb
cmpsb
roll
mov
and
call
add
repz
add
bnd
add
bnd
add
repz
add
bnd
add
bnd
add
bnd
add
bnd
add
bnd
add
add
add
call
add
call
add
bnd
add
bnd
add
or
lods
or
jmp
lods
add
jmp
lods
cld
or
lods
lock
lods
adc
call
lods
in
or
lods
loopne
call
lods
fdivr
call
lods
sar
call
lods
aam
call
lods
int3
call
lods
call
lods
mov
call
lods
test
call
lods
mov
call
lods
pushf
call
in
cmpsl
pop
in
pop
add
xlat
in
push
add
in
dec
add
xchg
in
inc
add
xchg
mov
xchg
jg
xchg
in
addl
in
ja
xchg
sub
xchg
xor
push
in
sub
inc
in
pop
pop
push
in
arpl
push
in
push
pop
inc
in
pop
pop
inc
in
dec
pop
pop
in
push
pop
pop
in
inc
pop
pop
in
cld
add
in
add
pop
in
aaa
pop
pop
in
cmp
scas
roll
ss
add
test
roll
sub
add
add
roll
push
mov
add
test
roll
adc
roll
or
roll
add
roll
cli
test
add
mov
add
test
add
mov
add
test
add
mov
add
test
add
mov
add
test
add
mov
add
test
add
mov
add
mov
add
add
add
jmp
call
add
call
add
call
add
call
add
call
add
call
add
call
add
call
add
call
call
add
call
call
add
call
add
fsubr
call
add
call
call
jmp
lods
fldl
jmp
lods
and
jmp
lods
sbb
jmp
lods
adc
jmp
lods
or
jmp
lods
add
jmp
lods
clc
call
lods
lock
call
lods
call
cld
call
lods
loopne
call
lods
fdivr
call
lods
sar
call
lods
enter
mov
cld
call
lods
mov
movl
pop
ljmp
pop
ljmp
xlat
jmp
cmpsl
add
xlat
jmp
mov
add
xchg
jmp
xchg
add
xchg
mov
xchg
jmp
ja
xchg
jnp
push
jmp
jae
inc
jmp
imul
jmp
push
add
scas
roll
push
stos
roll
push
mov
add
roll
dec
mov
add
roll
inc
mov
add
stos
roll
cmp
add
add
roll
cs
roll
sub
roll
and
roll
sbb
roll
adc
roll
or
roll
add
roll
cli
mov
add
stos
roll
repnz
add
stos
roll
ljmp
add
mov
call
add
call
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
call
add
call
add
call
add
call
add
add
out
add
call
add
call
add
call
add
out
add
out
add
out
add
add
add
out
add
out
jmp
lods
dec
call
lods
inc
call
lods
cmp
call
lods
xor
call
lods
sub
call
lods
and
call
lods
sbb
call
lods
adc
call
lods
or
call
lods
hlt
std
call
lods
cld
std
call
lods
in
call
lods
in
std
call
lods
aam
jmp
lods
faddl
add
out
push
out
jmp
push
out
filds
inc
out
jecxz
inc
out
xlat
add
out
fildl
pop
out
iret
add
out
roll
pop
out
movl
pop
out
sbb
pop
out
push
add
out
adc
xlat
in
pop
add
in
xor
in
cmp
in
add
xlat
in
testb
add
add
in
cli
add
in
out
add
in
repnz
in
ljmp
in
loop
xchg
in
add
in
into
add
in
movl
scas
ret
add
scas
ret
add
scas
ret
add
scas
ret
add
scas
ret
add
scas
ret
add
scas
ret
add
push
and
jae
enter
leave
inc
lods
jecxz
ljmp
ret
add
sub
ror
inc
test
ljmp
cmp
mov
orb
jle
xabort
enter
mov
sub
mov
mov
in
hlt
call
inc
mov
movaps
ljmp
push
add
add
in
int3
sub
test
test
in
lea
xchg
sub
out
loope
jmp
add
xlat
imul
xlat
mov
add
ljmp
bound
dec
lods
or
add
sub
jmp
jno
jno
mov
pop
add
xor
fsubr
subb
add
add
add
pop
jmp
push
in
and
mov
cmp
les
sub
jmp
iret
arpl
pop
rorb
lret
and
repnz
ljmp
jl
cli
insb
out
aad
imul
loope
jmp
stos
sub
out
jmp
ja
ret
fdiv
jmp
insl
pop
add
insb
sarl
insb
push
jne
int
std
call
adc
and
jae
aam
adc
add
or
ret
aam
adc
incl
test
jae
enter
pop
ljmp
hlt
aam
or
imul
add
test
inc
movsb
test
jae
lock
jge
aad
push
out
mov
call
aam
or
ret
cmpl
push
and
insb
pop
dec
sbb
jmp
divb
cmp
pop
ret
ret
test
loopne
mov
pop
decl
mov
mov
sub
repz
jl
mov
add
push
jmp
dec
sbb
mov
mov
ljmp
rol
jae
or
in
aas
inc
sub
mov
add
in
stos
mov
test
icebp
xchg
int
push
push
aad
int
ret
fadds
scas
ljmp
ljmp
inc
mov
pop
faddp
lret
repz
out
xorl
imul
sub
ret
push
aam
fsub
ljmp
jmp
aam
int3
sbb
add
pop
jno
mov
add
psubb
lods
ljmp
stc
call
add
cs
add
loopne
subb
ret
cmc
cld
sub
jne
pop
push
adc
iret
testb
sbb
call
call
imulb
cmpsb
sub
push
out
ret
add
dec
jmp
push
push
cmp
sub
out
shll
shl
sub
jmp
adc
add
add
sub
out
sbb
inc
jne
imul
test
jae
adc
adc
and
jb
das
inc
cld
dec
test
add
aas
cmpsb
stc
clc
test
jae
fbstp
fidivrs
movsl
stc
adcl
ret
clc
pop
cmp
fisubrs
movsl
stc
adcl
ret
sti
incl
add
add
push
fidivrs
lds
dec
adc
int
inc
lea
lods
test
rol
add
test
mov
inc
sbb
insb
inc
dec
cltd
iret
or
sub
clc
push
lea
adc
inc
lea
test
cmpb
push
add
lret
clc
sub
inc
vpabsw
ljmp
add
lret
jl
mov
inc
push
scas
xchg
jge
ljmp
rclb
fildl
gs
test
les
ret
push
enter
inc
mov
repnz
xchg
and
sub
and
data16
mov
into
dec
leave
inc
lods
inc
aam
sarb
jge
hlt
jmp
and
lods
inc
in
rcrb
fmul
into
pop
leave
xchg
dec
idiv
xchg
add
xor
jecxz
insl
or
push
in
add
add
add
out
adcb
repz
ljmp
xorb
push
pop
dec
iret
imul
jne
negl
jl
insl
repz
jbe
test
lods
ljmp
sub
imul
jne
clc
pop
data16
stc
sub
ss
gs
not
imulb
sub
push
into
insl
mov
xor
push
testb
jne
data16
aam
dec
call
add
jnp
lret
call
adc
jnp
leave
cmp
xorl
je
scas
sbb
push
cmpsb
mov
sarb
or
inc
jne
imul
push
test
call
add
shlb
testl
fsubrp
in
movsl
stc
call
xchg
and
push
rcr
in
movsl
stc
ret
pushf
sub
add
add
add
mov
int3
clc
icebp
sti
in
hlt
jmp
ret
push
add
jg
clc
roll
push
add
jnp
clc
mov
rclb
addr16
clc
mov
mov
lret
addb
xchg
lret
addb
push
dec
lret
add
ret
sub
add
add
cmc
cmp
jp
ret
push
add
cmpsl
leave
clc
and
test
ljmp
push
int
addb
leave
test
dec
mov
je
and
imul
dec
rorl
into
imul
xor
lds
pop
clc
fcmovne
int
lds
adc
fistpl
add
add
push
fcmovu
scas
shrb
loop
jecxz
loop
push
add
push
rcll
lds
arpl
mov
and
add
hlt
shl
push
clc
add
rol
push
clc
add
rol
push
clc
add
ret
lock
cmp
xchg
cmc
ljmp
out
aad
cmc
mov
nop
out
fdivs
clc
cmpsb
push
jne
scas
push
daa
adcl
dec
jne
jo
add
outsb
dec
jne
pop
pop
adc
shl
pop
cs
or
icebp
fsubrp
shll
testb
scas
fs
call
shl
movsb
imul
into
cmpsb
stc
sbbl
divb
push
cld
test
mov
push
divl
cmp
enter
dec
lock
xor
fsubs
or
mov
jne
xor
clc
cpuid
fucomip
push
push
scas
stc
subl
add
call
mov
incl
jnp
inc
add
push
mov
ljmp
into
cmp
inc
or
jp
add
add
xor
push
lods
pop
in
jecxz
ret
push
inc
adc
aad
jae
jmp
neg
fdivrs
movsb
aam
or
xchg
mov
rcll
and
hlt
jle
int
mov
clc
sub
mov
ret
jl
int
or
xor
add
inc
sarb
add
mov
push
aas
inc
leave
push
xchg
hlt
jmp
sub
shlb
movsb
loopne
cmp
leave
imul
out
mov
call
ret
imul
insl
adc
das
icebp
rcl
gs
mov
xlat
roll
dec
sbb
lds
sbb
ret
adc
add
cli
nop
and
pop
cli
inc
out
or
fsts
test
hlt
add
mov
ret
imulb
xor
out
jmp
testb
in
inc
out
ret
imul
cmp
iret
inc
ret
imulb
faddl
pushf
pushf
rcl
push
out
ret
mov
mov
imul
xchg
clc
adc
inc
jne
mov
cmp
ss
jne
stos
cmp
rcll
imulb
shl
dec
inc
ret
xor
mov
cmp
aam
add
pop
imul
mov
stos
stc
ret
fildll
jmp
scas
jge
cmp
xor
and
xor
sysret
jmp
decb
jbe
cmc
fnstenv
lahf
dec
lock
fnstenv
add
insl
mov
loopne
roll
idiv
xlat
stos
stc
inc
mov
inc
and
sbb
pop
lock
ret
sbb
add
outsb
js
push
or
adc
add
ljmp
pop
dec
popa
add
test
nop
mov
lea
loopne
ret
aad
std
inc
and
add
and
shl
mov
lcall
test
int
or
mov
jmp
jecxz
cmp
xchg
add
roll
jge
iret
mov
lock
add
in
aam
sbb
inc
icebp
push
jae
stos
jnp
mov
ret
test
lock
mov
xchg
jae
mov
imul
clc
aam
std
adc
imul
add
add
add
add
adc
push
or
outsl
fisttpll
mov
fucom
lods
insl
fucom
movsb
outsb
mov
fcoms
ret
cs
in
cld
push
lcall
add
das
or
cmp
insl
pop
xor
call
shr
cs
cs
adcl
lods
shlb
mov
jne
ja
mov
add
add
ret
cwtl
rcll
and
leave
in
sbb
shlb
mov
jmp
outsl
jge
stos
repnz
scas
ljmp
or
and
in
fmull
insb
out
add
xchg
icebp
sub
jmp
lods
inc
ret
mov
es
add
lods
ljmp
lods
pushl
fadds
inc
jne
stos
inc
add
cmp
mov
push
mov
shl
testb
and
out
add
cmp
idiv
push
push
adc
inc
jl
inc
add
add
jne
popa
out
jnp
fildll
fsubrs
add
mov
jge
jle
test
jb
xchg
xor
push
push
clc
cwtl
xchg
aaa
push
xor
rorl
mov
faddp
jae
scas
cs
dec
stos
jne
sar
add
scas
fnsave
imulb
stos
mov
or
lret
xchg
mov
jno
inc
push
scas
push
fistpll
cld
mov
scas
roll
test
mov
mov
sar
mov
lahf
sub
repnz
jg
mov
add
clc
adc
add
sarb
repz
mov
add
mov
mov
xor
ljmp
mov
mov
in
or
stos
ret
call
add
icebp
push
inc
jns
push
add
movsl
mov
mov
out
aam
out
mov
in
scas
inc
jmp
js
push
clc
imul
jno
pop
aam
mov
dec
or
insl
and
jne
insb
mov
loopne
mov
push
clc
mov
cmpsb
aaa
add
xor
add
scas
sarb
test
not
cmp
subb
ret
cmpsb
rcr
add
lods
ljmp
lods
add
clc
adc
aas
jne
scas
inc
and
cmpsl
mov
ret
ljmp
scas
shrb
adcb
add
mov
fistpll
inc
ret
mov
add
add
sub
cmp
lods
ljmp
loopne
aaa
add
inc
idiv
xlat
add
call
inc
clc
adc
test
mov
mov
cmp
xchg
stos
idiv
xchg
mull
mov
faddl
lods
jne
andb
lret
stc
dec
testl
incl
in
cmovp
jmp
ret
fcomip
in
shrb
sbb
add
ret
adc
pop
jmp
mov
or
pop
jmp
jg
xchg
xchg
repz
fdivrs
jp
sarl
add
inc
fwait
mov
out
push
popf
or
push
mov
and
stos
sub
xchg
out
mov
orl
jl
mov
mov
jno
sbb
scas
roll
test
mov
mov
sar
mov
lahf
imul
cmpl
sub
push
sbb
mov
imul
mov
sub
ljmp
out
sub
rcll
imul
ljmp
pushf
shrb
addb
add
fwait
in
dec
or
lock
lods
sarb
xchg
cmpsl
mov
daa
add
lret
call
aam
pop
mov
call
ret
inc
mov
pusha
jb
mov
call
mov
scas
ljmp
lods
ljmp
out
imul
mov
mov
add
lods
ljmp
icebp
mov
add
lods
ljmp
jbe
idivb
mov
mov
add
lods
ljmp
lahf
ljmp
lods
ljmp
imul
imul
lods
ljmp
repz
add
mov
add
pop
call
add
pop
cmpsl
cmc
pushl
add
addr16
xlat
out
add
out
add
add
ja
idiv
xlat
out
add
out
add
cwtl
cmc
lcall
in
add
jecxz
idiv
xchg
add
xchg
add
pop
cwtl
cmc
jnp
add
sarl
idiv
xchg
add
push
out
add
cmc
lcall
fiaddl
add
idiv
push
out
add
add
xchg
cwtl
cmc
fcmovnbe
add
or
ljmp
roll
add
movsl
add
scas
and
stc
rolb
add
popf
sar
loope
pop
add
roll
add
roll
add
jg
cld
test
dec
lret
cld
cltd
ds
cld
xchg
pusha
lret
cmp
cld
subl
mov
cld
popa
mov
cld
pop
or
cld
push
adc
cld
inc
push
mov
cmp
mov
xor
mov
mov
sbb
loopne
or
mov
mov
ljmp
mov
sarb
hlt
mov
mov
mov
call
ret
pop
ret
dec
ret
mov
and
jp
or
jb
in
ret
pushf
ret
call
rcll
rorb
roll
pop
outsb
mov
outsb
mov
icebp
out
mov
pop
out
mov
pop
out
mov
inc
out
mov
pop
out
mov
xor
mov
jae
mov
mov
add
add
mov
aad
mov
ret
out
mov
jmp
sti
mov
jmp
push
mov
lahf
dec
mov
jge
mov
gs
mov
jns
mov
ja
mov
sbbl
testb
mov
lahf
mov
mov
mov
repz
not
enter
shll
cmp
inc
inc
idiv
filds
incl
add
add
idiv
fldl
jmp
idiv
ja
idiv
pop
cmp
fstpt
idiv
stos
cmp
push
cmp
call
cmp
lcall
cmp
jmp
cmp
ljmp
cmp
push
inc
idiv
lea
call
idiv
pop
cmp
ljmp
idiv
arpl
idiv
cmpl
ljmp
cmp
dec
cmp
ljmp
add
add
fnstenv
push
dec
jb
dec
pop
jb
inc
das
jb
cmp
jno
xor
jno
and
jb
sbb
jb
adc
ret
loope
cld
add
mov
cld
icebp
mov
cld
jmp
pop
ret
pop
ret
hlt
int
leave
adc
cld
shll
mov
pop
int
test
les
cltd
mov
push
mov
cld
adcl
imul
jmp
imul
imul
imul
imul
imul
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
imul
mov
imul
add
add
add
add
mov
imul
mov
imul
mov
insb
mov
mov
insb
xchg
mov
insb
mov
pop
insb
jp
add
mov
aaa
divb
lret
mov
das
ret
mov
xlat
fidivl
not
lret
jmp
mov
jne
mov
inc
xchg
mov
xor
mov
insl
xchg
mov
outsl
xchg
mov
roll
mov
mov
push
mov
int
mov
incl
negb
inc
mov
and
mov
sub
testb
negb
mov
int
mov
pop
and
negb
add
idiv
popf
cmp
idiv
push
aas
idiv
inc
cmp
idiv
inc
call
cmc
incl
add
add
lcall
inc
call
add
pop
call
add
push
je
ljmp
jae
call
out
add
jno
pushl
jno
call
jno
lcall
cmc
decl
cmc
call
jb
incl
jno
ljmp
iret
mov
cld
jns
mov
cld
imul
mov
cld
dec
push
mov
cld
cmp
mov
cld
sub
mov
cld
adc
cld
or
add
scas
aas
mov
stc
jo
cld
icebp
pop
mov
jmp
push
sar
push
cld
sarl
leave
mov
cld
shll
cld
mov
sar
inc
cld
mov
mov
xchg
mov
mov
repnz
jb
cli
mov
bound
push
rorb
rolb
sarb
pop
xor
shlb
clc
rcrb
adc
adc
xchg
rolb
enter
mov
roll
add
ljmp
rcr
pop
rcl
sub
lret
ret
mov
ret
add
insb
scas
imul
outsl
scas
neg
outsl
scas
test
scas
idivb
scas
testb
scas
imulb
outsl
scas
imulb
scas
notb
scas
testb
testb
notb
scas
divb
insl
scas
testb
add
add
lods
div
repnz
idiv
ljmp
por
idivb
rep
testb
lods
divb
jmp
negb
lods
testb
testb
cmpsl
cmc
incl
cmc
jmp
cmpsb
cmc
ljmp
test
fildll
cmc
ljmp
cmpsb
cmc
incl
stos
cmc
pushl
add
add
lods
cmc
lcall
lods
cmc
incl
test
cmc
push
test
cmc
decl
outsl
cmc
mov
stos
cmc
call
cmc
pushl
stos
cmc
incl
stos
cmc
ljmp
rol
cld
mov
roll
scas
xchg
int
mov
lret
int3
cld
xchg
roll
scas
mov
cld
subl
aam
jno
sar
imul
sar
push
mov
cld
dec
push
sar
inc
addr16
cmp
cld
xor
sar
sub
sar
and
sar
sbb
mov
cld
or
sar
add
int
stc
ljmp
jmp
jle
cld
fldl2t
call
add
add
add
push
add
push
mov
mov
push
add
push
mov
scas
cli
add
scas
mov
mov
scas
xor
scas
push
add
push
add
scas
sbb
push
add
push
add
push
mov
scas
mov
or
add
scas
push
add
lods
fldl
scas
push
jnp
scas
mul
lods
ljmp
fildll
negb
fildll
mulb
scas
notb
scas
testb
scas
negb
pop
scas
divb
jg
test
scas
mulb
lods
ljmp
push
scas
div
imulb
idivb
scas
notb
popa
scas
negb
inc
scas
imul
lods
ljmp
aaa
pop
pop
gs
arpl
aam
add
lods
push
outsb
cmp
jb
push
or
xor
pop
insb
xor
mov
add
bound
or
or
sti
out
jb
pop
outsb
gs
gs
jo
aam
push
xchg
inc
add
push
outsb
repz
push
lods
push
imul
sti
gs
sub
mov
pusha
add
sti
gs
sub
loop
imul
test
add
sahf
xor
cmpsb
xor
outsl
maxps
pop
cmp
push
dec
add
bound
gs
push
daa
push
add
add
ret
lods
mov
and
insb
pop
dec
pop
cmp
or
and
add
lods
std
push
pop
fcomps
inc
outsb
cmc
sbb
aad
arpl
aad
imul
push
adc
inc
outsb
xchg
mov
pop
in
arpl
ljmp
xchg
inc
aad
mov
inc
lret
inc
int3
das
dec
cmp
push
pop
adc
pop
cmp
cmp
scas
adc
xor
outsb
adc
add
nop
add
pop
pop
xor
ds
xor
pop
ds
rclb
daa
loop
std
or
sbb
sbb
xor
int
sbb
mov
sbb
add
add
lcall
add
adc
jmp
push
inc
into
leave
sbb
push
jmp
xchg
push
push
mov
xchg
je
xchg
adc
js
je
jg
dec
jmp
push
inc
nop
rorl
imul
stos
sub
pop
mov
or
pop
cmp
sub
lcall
cmp
or
add
inc
gs
outsl
movsb
das
pop
fs
in
aad
dec
shrb
icebp
add
xor
push
add
push
popa
and
rcll
in
inc
jb
rolb
xor
in
test
popa
sub
push
jb
shll
adc
add
lret
out
inc
add
add
jmp
jae
in
imul
gs
add
xlat
in
dec
jo
fcoml
lock
jae
out
mov
mov
addr16
and
scas
xlat
sub
std
std
cmp
aad
pop
pushf
repnz
jns
add
mov
sub
mov
sub
jp
add
scas
pop
pop
je
mov
je
arpl
pop
xchg
add
add
add
sub
jb
ja
xchg
add
jge
je
jne
jo
mov
mov
cmovbe
push
adc
xor
cs
sub
fsubp
and
mov
aam
arpl
fstpl
push
ljmp
lock
cld
adc
sbb
adc
sbb
add
in
add
mov
sub
add
mov
add
add
test
jmp
bound
enter
rcll
ljmp
insl
and
add
pop
lahf
xor
cmp
sbb
das
or
or
scas
ljmp
fsubrp
aaa
add
cvtps2pi
loope
add
jg
add
sub
xchg
adc
sbbb
sbb
adc
rcrb
push
cmc
mov
cmp
and
push
inc
fcmovnb
or
xchg
cmpsb
aaa
jns
rorl
popf
xchg
adc
mov
imul
xchg
ljmp
orl
pusha
xchg
mov
adc
lods
cmpsl
add
int
xor
pop
jmp
mov
inc
jmp
insl
jb
xchg
out
addb
shrl
test
push
sub
inc
imul
aad
arpl
pop
insb
bnd
fs
rorb
and
call
aaa
popa
repz
xor
insl
jb
call
addr16
iret
gs
and
call
addr16
iret
gs
fcmovnu
push
add
sub
arpl
fbld
lret
cs
stc
scas
aam
je
repnz
fs
push
movsb
adc
movsl
sub
xchg
add
add
je
repnz
adc
xchg
add
lods
adc
adc
xchg
add
mov
pop
outsb
inc
stos
and
inc
scas
cs
scas
push
ljmp
test
insb
adc
add
push
inc
jae
and
push
jle
outsb
or
dec
sub
push
jmp
daa
fimull
ss
and
add
ljmp
lock
sub
sub
sbb
and
add
add
sub
adc
out
adc
xlat
sbb
and
xor
ljmp
jp
mov
sub
mov
dec
ds
cs
ljmp
or
movd
lar
es
out
inc
outsb
inc
mov
adc
xchg
or
add
pop
cmp
jle
cmp
outsb
adc
add
stos
sub
add
into
ss
insb
or
mov
inc
mov
leave
or
imul
pushf
ljmp
outsb
adc
sahf
sub
xchg
mov
add
out
or
fstl
imul
dec
add
inc
add
add
sti
sub
ljmp
add
iret
gs
in
out
mov
insl
inc
out
shlb
out
add
out
add
shlb
scas
shll
cmp
cmp
gs
gs
out
add
insl
inc
fmulp
bound
lret
and
insl
imul
imul
add
add
add
xor
push
sti
bound
jp
je
pop
inc
push
jns
int
dec
and
es
jbe
jo
loope
imul
inc
arpl
xor
insb
dec
dec
iret
daa
and
sub
add
cmc
dec
imul
out
or
scas
add
inc
xchg
popf
xor
hlt
push
insl
jge
sub
add
add
push
pop
je
pusha
push
jae
scas
inc
addr16
cmpsb
dec
pop
pop
scas
xor
scas
push
imull
ljmp
scas
ljmp
stc
push
scas
push
add
push
mov
std
sbb
add
fildl
dec
bswap
push
push
dec
loop
inc
and
ljmp
leave
sbb
cwtl
add
or
insl
and
add
in
pop
pop
cmpb
sub
decb
or
adc
push
adc
sbb
cltd
adc
pop
ljmp
js
je
fwait
xor
enter
lods
sub
repnz
mov
cmp
add
sub
rorb
pop
fwait
adc
ret
push
scas
push
jae
mov
ljmp
nop
sub
mov
dec
jmp
iret
push
inc
adc
or
pop
mov
or
jb
add
popf
sub
test
push
addr16
add
push
outsl
hlt
jmp
push
jo
cld
bound
jmp
insl
push
inc
les
add
add
dec
gs
add
dec
gs
xor
xor
insl
gs
out
mov
enter
int3
addr16
incb
add
inc
gs
jb
leave
bound
xor
mov
popf
push
imul
lret
sar
add
xchg
jmp
gs
imul
movsb
sbb
push
mov
add
scas
inc
testl
sbb
je
dec
push
add
jle
outsb
or
insl
sbb
lret
notb
sbb
add
cmp
int
sub
xor
addr16
xchg
stos
add
je
cmp
iret
sub
adc
lret
mov
push
insl
mov
ss
fwait
push
add
add
add
sti
and
std
stos
ljmp
jl
mov
add
mov
cmovge
mov
adc
push
mov
add
popf
and
psubsw
insl
call
mov
fisttpll
add
sub
int
dec
pop
cmc
adc
jmp
adc
or
sldt
add
mov
ljmp
insb
adc
add
jmp
daa
sub
push
add
ljmp
leave
frstor
mov
sub
mov
pop
sarl
add
and
nop
or
xchg
into
minps
mov
ljmp
mov
add
add
minps
xchg
add
add
push
push
xchg
ljmp
in
pop
inc
stos
sbb
sub
or
imul
mov
out
in
cltd
mull
cli
into
gs
cmc
ret
jle
push
imul
roll
add
icebp
inc
gs
jae
or
add
add
in
imul
loop
push
push
and
je
shrb
or
xor
xor
imul
push
add
and
insb
push
in
cmp
xchg
notb
fwait
int
gs
add
imul
inc
gs
hlt
and
cwtl
verw
lahf
xor
push
cwtl
add
scas
inc
or
pop
pop
pop
imul
cmovle
push
inc
push
push
push
ja
addr16
inc
dec
pop
cmp
and
jns
arpl
data16
sub
pop
push
add
push
inc
arpl
adc
popa
rcl
and
lcall
shrb
push
aam
jnp
hlt
push
push
negb
insl
popf
ljmp
lea
jmp
daa
orb
adc
sbb
xchg
add
adc
push
push
rcrb
scas
ljmp
gs
aaa
dec
add
cwtl
add
in
fwait
and
and
or
add
in
mov
adc
sub
in
cwtl
es
cs
rcrl
dec
sub
add
add
aas
jmp
daa
ret
and
enter
lods
sub
out
push
push
int3
or
lods
jo
cmp
push
inc
cld
fwait
add
jae
lods
loop
es
push
inc
enter
fistl
sub
jb
popa
mov
xchg
add
sub
out
push
pop
add
lea
add
add
je
iret
push
add
cltd
and
ret
dec
cltd
ljmp
in
xor
pop
add
pop
add
stc
fs
jo
push
add
lock
gs
fstpl
mov
leave
insl
add
out
inc
add
arpl
into
pusha
gs
out
jnp
adc
insl
push
into
clc
insl
gs
add
notb
jmp
insl
dec
out
insl
dec
imul
arpl
jmp
push
jb
stc
jno
add
jmp
push
imul
and
add
and
fnstcw
outsb
flds
sub
sbb
std
ret
lods
shrb
je
cli
pop
fs
add
add
add
out
pop
jge
dec
cmp
dec
mov
cmp
inc
lods
push
imul
pop
addr16
pop
add
scas
dec
pop
pop
adc
pop
or
add
jbe
imul
jge
add
arpl
dec
fstps
outsb
out
ljmp
int3
cmp
rolb
push
xor
add
add
add
sbb
mov
add
add
jmp
adc
pop
or
sbb
orb
adc
ljmp
mov
mov
inc
or
mov
or
jmp
cltd
daa
icebp
push
xchg
or
ljmp
roll
add
stos
je,pn
ret
daa
pop
inc
mov
add
lods
sub
mov
pop
lods
sub
jecxz
push
sub
push
dec
sbb
xor
mov
mov
and
push
push
or
add
lods
test
mov
mov
pop
int3
lods
clc
add
xchg
sbb
add
lods
int3
push
popa
jmp
rclb
dec
test
push
xchg
int3
push
pop
add
cld
push
outsb
in
push
je
shll
hlt
pusha
gs
out
test
fwait
out
fs
cli
push
push
out
bound
out
adc
push
cmpsb
out
insl
inc
mov
cli
pop
jo
lret
dec
bound
in
sub
nop
mulb
mov
std
inc
je
loope
outsl
icebp
faddl
add
gs
fisubl
aam
push
enter
lret
push
imul
cmp
es
ljmp
add
cmp
arpl
es
sub
add
push
sbb
lret
aam
je
shll
add
add
add
in
insl
jge
adc
mov
adc
loope
outsl
scas
les
arpl
and
mov
push
pop
inc
stos
sbb
addl
scas
inc
push
imul
push
sbb
sbb
add
jle
adc
xchg
or
mov
scas
ljmp
enter
ret
sbb
sbb
push
inc
adc
push
dec
adc
decl
aam
sub
lea
xor
sbb
scas
ljmp
xchg
add
mov
pop
jmp
pop
dec
add
cmovge
pop
jno
faddl
ljmp
dec
or
push
pop
sbb
and
ljmp
sarl
xchg
mov
outsl
mov
mov
mov
movsb
xchg
push
inc
mov
int
test
add
mov
and
cmp
or
das
jae
fucomip
add
mov
pop
xor
add
xor
jb
and
mov
imul
sub
add
mov
je
mov
add
repz
bound
shrl
push
imul
out
ja
ficoms
in
imul
jno
push
ljmp
adc
pop
insb
xor
outsl
in
add
sub
cmp
outsb
repz
jo
jne
push
inc
pop
ljmp
jb
jb
mov
insl
gs
ljmp
sti
fs
push
shl
add
fbld
repz
popa
cmc
push
jecxz
addr16
dec
or
dec
push
add
lods
outsl
adc
mov
adc
dec
adc
test
push
scas
inc
and
or
out
and
pop
and
add
pop
adc
cmp
repz
add
aaa
cmp
add
add
into
std
add
fwait
lret
mov
adc
rorl
addr16
idiv
and
mov
pshufw
arpl
adc
addl
scas
and
ljmp
push
or
and
push
sbb
and
ljmp
sbb
push
jmp
and
and
sar
mov
shlb
insl
and
add
lahf
and
sbb
dec
pop
aad
and
pop
iret
add
lea
adc
xchg
push
inc
or
jno
push
sub
jo
or
mov
adc
and
add
scas
pop
popa
stc
addl
fnstsw
adc
lods
aaa
push
movsb
jg
xor
into
gs
lods
mov
jb
ret
pop
je
stos
adc
mov
cld
pop
mov
cmpsl
add
mov
adc
mov
movsb
add
pushf
adc
jne
jno
pushf
push
dec
dec
mov
add
int
xor
push
ds
mov
and
add
pushf
adc
outsb
pop
jae
jmp
push
push
out
add
jmp
je
shll
or
push
add
sub
fs
lock
fisubs
inc
fsubrl
sub
fs
xor
bound
out
push
add
jmp
inc
jne
sub
addr16
lock
jo
jl
push
lret
jge
gs
pop
add
xchg
jb
outsb
xchg
inc
jne
scas
jae
lahf
jge
imul
int
inc
dec
jg
push
inc
icebp
repnz
pop
mov
push
mov
in
bound
jmp
bound
inc
jmp
xchg
scas
aas
repz
cld
push
data16
bound
jae
jb
pusha
add
scas
push
fisubs
add
push
fstps
imul
das
jmp
imul
fsubrl
cs
ja
ljmp
mov
sbb
xchg
sbb
in
sbb
dec
sbb
cmc
clc
dec
das
loope
rorl
testl
pushf
call
sbb
or
in
sbb
cmc
orl
mov
sar
add
sar
je
ret
cs
aad
pop
add
pop
inc
cli
int3
cld
push
aad
cld
inc
repnz
inc
in
cld
push
clc
mov
daa
je
add
sbb
adc
adc
jae
testb
add
es
data16
testb
cmc
loop
arpl
mov
add
add
or
lret
jb
sahf
adc
add
jp
arpl
or
mov
adc
add
pop
sti
mov
popa
jp
aaa
popa
pop
dec
adc
cwtl
lods
lds
cmp
inc
dec
sbb
xor
js
mov
xor
into
jle
push
mov
arpl
add
add
arpl
ljmp
shrl
arpl
jge
add
xor
fidivrs
dec
jbe
pop
inc
jbe
push
add
mov
outsb
jo
pop
push
push
mov
call
jmp
push
or
imul
ljmp
xor
push
outsl
je
imul
add
add
add
add
das
std
inc
mov
cli
pop
call
bound
out
out
adc
push
scas
mov
inc
pop
xchg
imul
call
ror
push
outsl
jecxz
sub
fucomp
imul
test
inc
jmp
inc
pop
mov
jecxz
scas
addl
punpckhbw
adc
pop
or
pusha
ljmp
add
add
add
add
ljmp
push
fstpl
pop
lock
push
xlat
xor
sbb
jmp
mov
sbb
insl
prefetch
or
jmp
pushf
jmp
clc
push
sbb
dec
sub
add
sub
repz
jmp
testl
repz
mov
add
cmpsb
les
mov
int3
fsubrp
lret
lcall
test
add
jp
leave
clc
add
cmp
inc
push
inc
xor
stos
sub
cmp
adc
add
adc
mov
add
or
clc
cmp
daa
loope
fs
sbb
push
mov
popa
cmc
lds
stc
int3
es
xor
lods
sbb
xchg
sub
mov
jp
nop
adc
adcb
jmp
mov
imul
lods
stc
outsl
jg
adc
xchg
jb
cmp
push
jae
jns
outsb
fisttpl
popa
mov
fs
popf
idiv
add
xchg
aaa
fs
stos
outsb
je
xchg
imul
fwait
push
jo
cmpsl
idiv
mov
mov
fisttpl
push
push
xchg
out
test
aaa
lea
xor
pop
jo
out
cwtl
add
lea
cmp
out
std
arpl
pop
roll
call
lret
push
rolb
add
add
push
std
dec
out
loopne
jo
ljmp
sbb
call
mov
cmp
nop
daa
lret
out
shrl
in
jno
xchg
add
scas
in
dec
xlat
shlb
lock
loopne
dec
jbe
leave
dec
jge
sub
add
scas
dec
loope
sbb
bnd
scas
out
insb
pop
loope
mov
in
jbe
add
add
ljmp
into
pop
jmp
loopne
pop
jl
ret
xor
rolb
fwait
loopne
negl
adc
call
jecxz
cmp
insl
sub
jmp
sbb
dec
add
jmp
lock
pavgw
pop
jmp
xchg
ljmp
pop
pop
sbb
pop
pop
or
jbe
and
inc
adc
in
add
add
lret
add
bsf
sbb
add
loopne
ljmp
xchg
packssdw
or
data16
arpl
push
mov
idivb
mov
push
inc
adc
sub
sub
sub
decb
popa
inc
adc
push
insl
sbb
add
add
sub
fimuls
popa
adc
lret
push
or
mov
lods
roll
stos
mov
mov
outsb
add
push
push
xchg
jb
jbe
idiv
icebp
out
sbb
pop
gs
idiv
jmp
sarl
aas
inc
push
add
jmp
jb
mov
xorl
imul
add
add
add
add
idiv
mov
xor
bound
imul
pop
bound
jmp
add
dec
bound
ljmp
ret
lahf
inc
inc
mov
mov
pop
arpl
mov
xlat
imul
xlat
inc
in
xchg
add
in
push
out
imul
push
fsubl
cmp
add
dec
iret
cmc
xlat
inc
in
xchg
add
fsubrl
jecxz
jl
loopne
and
std
inc
xchg
sub
decl
pop
add
mov
in
push
push
cmc
jmp
int3
roll
sbb
inc
xlat
std
push
scas
aam
ds
jg
dec
in
push
sbb
fdiv
ljmp
or
cli
mov
repnz
add
ljmp
add
test
filds
ja
push
jge
add
sbb
out
ljmp
add
ljmp
test
lock
or
cmp
add
adc
pop
push
jmp
rcrl
pop
es
dec
or
add
add
fnstsw
add
jg
arpl
lods
jb
lahf
or
imul
addr16
mov
pusha
lea
adc
mov
lahf
rcrb
push
jl
and
clc
dec
jg
push
addr16
or
outsb
and
lods
fildl
sub
or
pop
xor
loope
pop
cmp
add
inc
nopl
sub
addr16
mull
stc
jnp
xor
mov
stos
test
mov
arpl
jp
jb
scas
idiv
movsl
out
gs
xor
push
dec
xchg
out
add
cmp
imul
lcall
adc
xor
lds
xor
add
mov
jp
aas
outsb
in
imul
fwait
fs
mov
pop
mov
push
arpl
pusha
imul
cmc
jae
jae
push
jo
mov
ds
repz
out
repz
jne
insl
adc
jmp
aaa
xor
shrb
inc
adc
insl
or
add
or
xlat
jmp
add
push
repnz
fldt
jbe
popa
aam
out
addl
scas
dec
fdivl
cmc
fsubl
vpgatherdd
fbstp
addl
scas
lret
xchg
mov
bound
clc
bound
outsl
jp
jecxz
sub
xor
pop
nop
dec
cmp
cmp
or
lds
in
repz
add
idiv
vpsllq
or
aam
xchg
jns
add
mov
rorb
aad
cld
mov
add
mov
cmc
shrb
jmp
neg
cli
mov
call
mov
ljmp
mov
daa
hlt
mov
sub
ljmp
mov
sub
xchg
add
push
test
add
add
push
push
add
incl
mov
js
dec
lods
xor
xchg
push
push
aad
add
jb
inc
jmp
jns
jno
xchg
pop
fwait
xchg
insl
les
cmp
push
idivb
daa
pop
jg
es
js
or
dec
jmp
paddb
or
add
adc
push
pop
or
sbb
pop
nop
push
arpl
lcall
outsb
mov
jb
jne
subb
jb
inc
mov
nop
push
jmp
add
mov
gs
push
fs
xchg
push
inc
xorl
pop
jmp
je
jnp
imul
idiv
adc
inc
gs
mov
add
add
push
push
lds
add
outsb
mov
jb
sbbl
insb
insl
and
imul
dec
scas
leave
stc
jae
ret
jl
bnd
aam
inc
dec
loop
bound
fdivr
shll
dec
jge
insl
inc
out
cmp
jecxz
fs
xchg
ds
cmp
dec
out
mov
add
scas
imul
into
sub
in
jmp
stc
scas
cmp
fildll
data16
inc
fsubrs
incl
add
inc
outsl
movl
inc
pushf
ljmp
fs
lcall
add
das
or
xor
fiadds
outsl
prefetch
or
clc
dec
clc
sbb
dec
push
sti
call
mov
and
icebp
es
icebp
and
enter
add
jmp
call
xorl
loop
hlt
call
call
pop
jne
add
cli
xchg
icebp
int3
or
pop
jl
adc
add
or
shlb
add
lods
fdivrp
pop
push
pop
arpl
add
add
push
cmpsb
adc
or
dec
lods
adc
add
lods
cmp
xlat
jmp
mov
adc
sar
jno
mov
outsb
pop
stos
mov
push
fstl
lcall
add
lods
pushl
dec
push
outsb
decl
jmpw
add
imul
imul
sub
push
movsl
sahf
jae
jne
push
popa
arpl
push
pop
call
jb
pop
mov
push
imul
inc
imul
xor
push
test
lods
pop
insb
mov
jnp
jb
out
add
jb
push
inc
gs
popa
push
cmp
outsb
push
add
add
inc
je
pushf
push
add
push
shll
fildll
push
lock
scas
rorb
push
nop
imul
arpl
loope
jle
fldt
lret
fisubrl
es
push
insl
decb
into
imul
jmp
outsl
inc
ljmp
push
outsl
add
aam
ja
fucomip
jae
add
add
in
loop
adc
add
scas
addl
scas
addl
scas
addl
scas
addl
scas
addl
scas
addl
scas
ljmp
scas
ljmp
out
ljmp
scas
ljmp
outsb
ljmp
scas
ljmp
scas
ljmp
outsb
ljmp
scas
ljmp
scas
ljmp
jns
cmp
scas
ljmp
scas
ljmp
scas
ljmp
jbe
cmc
add
ljmp
mov
add
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
dec
outsl
ss
lods
ljmp
lods
ljmp
push
jmp
add
lods
ljmp
lods
ljmp
imul
add
lods
ljmp
lods
ljmp
xor
ljmp
jmp
cmovo
add
inc
jo
leave
lods
hlt
xor
add
add
add
test
dec
inc
addr16
cwtl
mov
shrb
inc
mov
sti
and
scas
or
rcll
sahf
push
cwtl
inc
out
inc
xchg
inc
ljmp
inc
dec
ret
sbb
inc
pop
lahf
sub
inc
mov
addr16
inc
fucomi
pop
push
jo
mov
ja
jnp
sub
mov
scas
sbb
test
arpl
mov
andb
jmp
fwait
cmovge
inc
cmc
ljmp
fsubp
imul
aas
xchg
pushf
push
push
addl
mov
sub
mov
mov
pop
xchg
cld
mov
mov
add
add
outsl
xor
pop
test
dec
and
or
sub
test
add
pushf
cmp
push
or
sbb
aas
mov
call
aaa
fs
adc
gs
sub
inc
scas
cltd
es
dec
repz
das
movsb
cmp
cmpsl
jbe
std
fiaddl
pop
add
aad
push
adc
pop
or
add
add
movsl
lahf
xlat
lods
sub
lods
das
out
jge
lods
fldt
or
and
push
dec
dec
into
lods
stos
imul
add
popa
push
loope
out
xor
jnp
push
cmp
cmp
ss
mov
lea
outsl
inc
pop
js
pop
ss
adc
xor
pop
adc
cli
sbb
add
push
adc
push
js
test
push
pop
jl
test
aaa
or
dec
lret
sbb
ss
push
dec
fldl
jbe
cmp
ljmp
and
xor
push
mov
adc
movl
jbe
cmp
add
cmp
lock
or
cmc
cmp
jmp
inc
mov
jne
and
cmp
add
add
shlb
dec
cmp
in
mov
sub
mov
movsl
movsb
adc
cltd
inc
dec
cmp
loop
pop
mov
pop
and
inc
and
rcrl
or
cmp
mov
arpl
push
scas
leave
pop
jnp
scas
pop
push
ficoml
dec
push
mov
xchg
xlat
mov
add
scas
addl
pop
daa
aad
aas
scas
addl
add
addl
add
xor
add
scas
addl
add
addl
add
cmc
add
scas
addl
add
dec
add
scas
addl
add
add
add
ljmp
scas
ljmp
call
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
enter
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
xlat
in
add
in
add
in
add
outsl
je
add
in
add
in
add
in
add
jmp
in
add
xchg
add
xchg
add
add
add
add
add
in
add
mov
in
add
inc
in
add
inc
in
add
xlat
je
add
add
inc
in
add
inc
in
add
into
je
add
in
add
pop
in
add
pop
in
add
in
xor
pop
in
add
pop
in
add
scas
push
add
scas
sbb
add
push
add
scas
mov
cmp
scas
push
add
scas
push
add
scas
jo
cmp
scas
push
add
scas
push
add
scas
mov
scas
push
add
scas
push
add
scas
jp
cmp
scas
push
add
scas
push
add
scas
dec
test
scas
push
add
scas
push
add
scas
cltd
test
scas
push
add
scas
push
add
scas
inc
push
ds
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
loopne
call
add
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
pop
jmp
add
pop
jmp
aaa
add
jmp
add
xlat
call
aaa
add
call
add
xlat
call
xor
call
add
xchg
call
xor
xchg
add
xchg
add
xchg
call
aaa
add
call
add
je
add
add
inc
call
add
leave
xchg
add
add
inc
call
add
scas
mov
add
push
add
scas
enter
push
add
scas
push
add
scas
push
add
scas
cwtl
cmp
scas
push
add
scas
push
add
scas
push
add
scas
mov
aas
scas
push
add
scas
push
add
scas
push
add
scas
int
aas
scas
push
add
scas
push
add
scas
mov
aas
scas
cltd
int
scas
imul
aas
scas
in
aas
scas
scas
aad
aas
scas
movsl
aas
scas
movsl
aas
scas
movsl
aas
scas
ljmp
jmp
ljmp
shr
lods
ljmp
shr
fistpll
ljmp
mov
ljmp
mov
nop
fadds
ljmp
jmp
ljmp
shr
aam
leave
ljmp
mov
ljmp
mov
ljmp
mov
add
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
movsb
cmp
movsb
inc
cmp
xchg
pop
cmp
xchg
idivb
jmp
stos
ljmp
mov
aaa
test
aaa
jne
mov
aaa
movsl
les
aaa
movsl
out
ss
mov
ss
ss
movsb
push
aaa
shll
and
add
add
ljmp
lods
ljmp
xlat
add
filds
ds
add
addl
jecxz
ds
out
ret
add
add
aas
jecxz
push
aas
repz
aas
inc
add
aas
ret
add
push
aas
jae
data16
addl
aas
arpl
aas
xor
aas
inc
add
aas
add
aas
arpl
out
inc
add
idiv
jecxz
add
xchg
cld
add
xor
divb
dec
sahf
xchg
adc
adc
adc
adc
lods
adc
or
adc
fsubrp
adc
mov
dec
or
sbb
in
adc
cmc
adc
add
add
adc
adc
adc
adc
lods
adc
lea
int3
fists
adc
mov
dec
or
mov
ljmp
mov
sbb
adc
ficompl
push
sub
push
pop
sbb
push
bound
add
sbb
push
sbb
adc
sbb
adc
sbb
adc
push
sub
adc
inc
sbb
sub
dec
adc
sbb
pop
sbb
bound
movsl
adc
sbb
adc
sbb
sbbb
in
test
sub
adc
test
add
add
into
sub
insl
test
jle
dec
mov
sahf
sub
xor
mov
pop
sub
aad
sub
mov
cmpsb
sub
mov
sub
lahf
sub
lahf
data16
lahf
jbe
dec
lahf
xchg
mov
ss
mov
add
add
sti
in
xor
xchg
out
adc
arpl
and
mov
cmp
lcall
in
loope
sti
in
icebp
aaa
jnp
stc
aaa
sub
cmp
or
and
adc
sbb
sbb
and
and
jmp
sub
jecxz
xor
cmp
cmp
xchg
jge
incb
cmp
add
cmp
add
cmp
add
cmp
add
add
incl
xor
mov
or
mov
cmp
jge
adc
cmp
sbb
mov
popf
sbb
stos
std
sbb
mov
lea
dec
xchg
jge
push
mov
cmpl
insb
jnp
sbb
lea
sub
sbb
fcmovnu
sbb
lret
lods
sbb
mov
lea
test
adc
or
adc
or
punpckhbw
sbb
jb
test
ljmp
pop
sbb
adc
sbb
adc
xchg
adc
or
cmp
sbb
paddq
lret
or
fs
sbb
add
add
and
sbb
push
sbb
and
jmp
pop
aad
les
rcrb
pop
pop
push
ja
sub
pop
sbb
lea
adc
mov
pop
fstps
fcoml
mov
add
cwtl
sbb
xor
mov
shlb
mov
cmc
aaa
sbb
ret
fwait
jbe
dec
ret
jmp
lods
ljmp
pushf
xchg
loope
aad
scas
sahf
fnsave
jg
ss
mov
enter
cli
sub
mov
lods
sub
mov
das
shrl
fnstsw
imul
xchg
cmp
stos
dec
cmp
mov
add
insb
cmp
xchg
cmp
call
push
cmp
add
add
call
or
mov
cld
ret
cld
repz
sub
xor
xor
push
jge
ljmp
out
add
data16
mov
xor
sti
xor
fnsave
push
fidivl
inc
add
xor
add
xchg
add
xor
aas
xor
add
dec
add
sub
jae
js
jg
jg
xchg
xor
add
add
add
xor
sub
lock
jp
sbb
orl
js
or
out
add
xlat
incb
xlat
aad
mov
je
push
mov
add
mov
pop
pushf
movsb
mov
push
inc
push
and
add
mov
adc
jns
inc
pushl
push
add
scas
ss
fisubrs
or
fildll
femms
mov
xchg
mov
fisttpll
sbbl
ret
push
ficoms
popf
push
in
jp
sbb
sbb
push
pop
sbb
xchg
sbb
sbb
enter
mov
sbbb
or
adc
or
adc
or
adc
push
pusha
adc
or
adc
add
adc
or
pop
adc
or
mov
push
movsb
cmovl
push
adc
and
notl
cwtl
push
es
xor
mov
xor
test
aaa
es
mov
cmpsl
lahf
pusha
aaa
in
sahf
or
mov
ljmp
lods
ljmp
popf
xor
jne
jns
push
xor
mov
aas
xor
gs
mov
mov
xor
mov
inc
xor
ret
add
cmpsl
sub
jp
jo
inc
mov
ljmp
aas
std
pop
xor
div
xor
ss
cld
and
test
std
inc
aaa
jg
xchg
sub
mov
cmp
out
cmp
out
cmp
xchg
cmp
loopne
cmp
pop
cmp
loope
cmp
dec
cmp
cli
jno
mov
cli
jl
mov
sub
cmc
out
jns,pt
inc
aas
pop
leave
idiv
xlat
out
add
inc
stc
pop
xor
in
xor
notb
fdivrs
add
add
bound
mov
popf
sbb
cwtl
sbb
or
jns
andps
mov
push
insb
fsts
pcmpeqb
or
jl
rorl
ror
mov
push
adc
dec
or
cmpsb
cwtl
or
xchg
or
xor
movsb
xchg
or
xchg
add
aas
out
add
test
ljmp
push
adc
and
das
or
adc
or
shld
mov
xchg
addr16
or
jg
adcl
pop
adc
jbe
jmp
mov
push
mov
ljmp
mov
push
adc
xchg
test
add
pop
mov
add
inc
sbb
or
or
or
jp
stos
movzwl
je
sbb
dec
adc
xor
test
dec
xor
mov
dec
aaa
jmp
clc
ss
adc
movsb
mov
daa
ss
ljmp
lods
ljmp
popf
outsl
xor
aaa
xor
mov
xchg
xor
mov
cmc
xor
lahf
into
xor
xchg
xor
sahf
xchg
xor
shll
cmc
ret
xlat
das
imul
das
inc
fwait
loope
mov
cld
in
cmp
in
cmp
in
cmp
dec
cmp
pop
cmp
in
cmp
in
cmp
jecxz
cmp
loop
cmp
add
add
loopne
cmp
loope
cmp
loope
cmp
loop
cmp
loop
cmp
jecxz
cmp
jecxz
cmp
inc
jecxz
ds
jecxz
ds
int3
ds
add
dec
in
aas
inc
pop
idiv
out
out
add
ret
or
mov
fsubrp
or
ffreep
or
fisttps
and
test
mov
mov
xchg
pop
bswap
popf
or
in
call
syscall
lcall
pop
jp
adc
adc
roll
loop
push
into
fidivrl
adc
scas
adc
ret
mov
ret
adc
ret
cltd
adc
mov
daa
adc
cwtl
lea
mov
ljmp
daa
sbb
adc
cli
or
or
xchg
or
adc
or
sbb
inc
or
repz
or
jne
bound
clc
adc
inc
or
test
adc
mov
or
dec
inc
add
ljmp
jecxz
dec
adc
cmc
adc
mov
sbb
adc
adc
add
mov
jb
ljmp
cmp
repnz
pop
cmp
inc
xor
loop
mov
aaa
pop
movsb
lea
and
lds
ljmp
lods
ljmp
popf
mov
inc
lcall
xchg
mov
adc
mov
xor
lcall
fsave
add
xchg
xor
imul
xor
frstor
xor
ret
sti
jns
mov
loope
cmp
fbstp
xchg
fildll
cmp
fucomip
cmp
fisubs
cmp
add
add
fbstp
dec
fiadds
cmp
loop
cmp
loope
cmp
in
cmp
loop
cmp
loop
cmp
jecxz
cmp
loop
cmp
jecxz
cmp
popf
in
aas
scas
mov
in
mov
ljmp
xor
ljmp
xor
pop
jle
or
sub
jle
adc
or
add
loopne
and
fistpll
cmpb
or
mov
sti
or
pushf
sub
jl
mov
adc
pushf
adc
je
lret
jp
adc
sbbl
jns
push
rolb
or
repnz
or
adc
or
adc
or
adc
or
lret
or
adc
or
adc
sbb
mov
dec
adc
or
sub
stos
punpckhdq
sub
je
xor
iret
pop
nop
push
xchg
pop
dec
cmovae
testb
pop
or
cld
pop
xchg
or
add
leave
or
push
mov
iret
push
lods
or
add
or
add
or
add
or
cld
stos
adc
and
movsb
ss
mov
ss
jns
insb
mov
ss
stos
jnp
inc
mov
mov
mov
add
std
dec
idivb
ljmp
ret
add
and
lods
mov
or
ret
sahf
popa
xor
jae
cmp
mov
sub
mov
add
add
cmpsl
das
sub
popf
das
dec
mov
imul
sbb
xchg
ss
mov
ss
aaa
pop
imull
aaa
clc
aaa
js
ss
cmc
lea
lret
cmp
repz
cmp
icebp
idivb
icebp
dec
cmp
xor
dec
ds
cmpsl
aas
inc
out
mov
xlat
out
lret
out
xlat
aas
outsb
out
add
pop
dec
idiv
push
in
add
or
faddl
xor
fsubrl
xor
mov
xor
stc
es
cli
mov
xor
inc
divl
pop
stc
or
fninit
clc
push
jecxz
clc
pop
fldt
clc
jnp
aad
add
clc
xchg
mov
mov
movsb
fwait
add
clc
fwait
arpl
cmc
adcl
js
clc
and
add
add
xor
push
sbb
sti
mov
js
mov
rcrb
and
rcrl
ret
cli
xchg
mov
sbb
les
stc
cli
jmp
inc
sti
idivl
stc
sti
jae
push
cld
push
add
jns
mov
cmpsl
add
cld
loopne
clc
cld
ljmp
cld
and
add
popa
add
cld
pop
add
std
mov
add
std
in
add
std
mov
add
xchg
std
add
jge
mov
decb
js
in
or
or
lcall
push
mov
dec
push
mov
cs
decw
pop
add
xor
jmp
out
xor
mov
xor
test
mov
xchg
lods
xchg
aaa
mov
scas
ljmp
lods
ljmp
int3
xor
pop
imul
bound
dec
pop
xchg
xor
cmp
xor
cmp
xor
cmp
xor
arpl
fwait
sbb
insl
xor
sbb
xor
add
xor
add
inc
sti
dec
xor
sub
xor
inc
push
xor
adc
xor
or
mov
lcall
ss
inc
gs
ss
inc
xorb
inc
mov
loope
insl
cmp
dec
add
arpl
cmp
cmp
cmp
mov
cmp
inc
cmpb
inc
xchg
cmp
inc
mov
ds
ret
cmp
add
add
inc
idivl
add
cmp
inc
test
cmp
xor
cmp
mov
push
clc
iret
xchg
jmp
andb
test
idiv
jo
testl
mov
jge
mov
notb
aam
clc
mov
repz
ljmp
inc
repnz
xor
and
add
add
jns
dec
jle
in
xchg
jle
in
fidivrl
or
jmp
repz
fnstsw
dec
fstpl
push
mov
sub
mov
cmp
repnz
mov
dec
lcall
add
inc
add
push
repnz
inc
movsb
add
sti
mov
repnz
std
xor
idiv
sbb
adc
xlat
std
or
paddd
stc
xlat
std
sbb
adc
xlat
std
push
das
jb
aaa
pop
clc
pop
push
clc
pop
decb
clc
push
lcall
sub
out
std
xor
idiv
add
push
sbb
mulb
sub
testb
out
sub
out
sub
inc
sub
fucomi
das
repz
icebp
das
fildl
add
add
loope
or
adc
sbb
add
sub
mov
sbb
das
adc
leave
das
adc
das
add
cs
dec
and
cmp
inc
mov
cmp
cmp
xor
xor
ljmp
shll
mov
xor
jmp
ja
add
adc
and
xor
add
add
aaa
shlb
fwait
aaa
xor
adc
data16
cmp
push
cmp
xor
mov
mov
cmp
adc
cmp
xor
cmp
xor
mov
sub
ss
icebp
ss
aaa
adc
test
inc
aaa
stos
aaa
pusha
aaa
aam
mov
in
ss
aaa
sub
aad
mov
xchg
in
inc
outsb
cmp
clc
stc
scas
fidivl
testl
jle
mov
add
jb
icebp
inc
add
scas
xor
sahf
sahf
psllq
lahf
sbb
mov
add
inc
js
in
aaa
xor
cmc
fwait
out
hlt
adc
adc
pusha
aam
mull
lahf
cli
incl
out
std
ljmp
add
add
sub
popf
out
pushf
popf
out
adc
repz
jns
sti
xchg
push
cld
into
add
std
cmp
sti
add
nop
add
xor
jmp
aad
das
cltd
clc
fwait
add
sti
adc
inc
addb
ljmp
dec
sti
cmpsb
repz
add
sti
xor
push
cli
shl
std
mov
jns
aam
cmc
testb
loop
jae
mul
repnz
sar
jmp
lahf
sti
dec
add
cld
lea
mov
std
adc
push
cmp
xor
cmp
and
cmp
xchg
xor
pushw
test
pop
mov
aaa
jmp
lods
ljmp
loop
xor
ret
leave
mov
push
xor
mov
lds
push
mov
cmp
sub
int
cld
sub
sbbl
mov
rcrb
add
cmp
aaa
ret
cmp
aaa
lods
imul
sarb
loopne
stc
cmp
add
add
cmp
cmp
cmp
cmp
cmp
xchg
aaa
fdivrl
sub
xlat
cli
idiv
out
add
cmp
xor
ss
xor
outsb
xor
aaa
jg
sbb
cmp
xor
cmp
pushf
cmp
xor
xor
es
pop
in
cmp
add
add
push
jl
out
jp
in
xchg
jl
in
mov
fdivr
in
fstp
dec
in
push
fnstsw
in
pop
mov
jo
movsb
mov
adc
lds
mov
icebp
cltd
clc
icebp
jbe
dec
sti
or
push
sti
jb
int3
sti
fucom
sbb
cld
out
sti
push
aam
sti
push
aad
out
pop
lret
inc
ret
or
daa
out
in
ljmp
cltd
std
and
loop
or
aam
pop
testl
call
add
ljmp
xor
sub
push
cli
pop
cmc
mov
dec
cmc
in
loop
xchg
clc
div
lahf
clc
lods
icebp
xor
xor
repnz
stos
repnz
xchg
inc
stc
dec
repz
add
idiv
pop
repz
clc
add
testb
testl
out
outsl
divl
out
mov
add
pop
or
fistps
sub
pop
fwait
sub
pop
ja
cwtl
ds
sub
push
jne
les
cs
xor
dec
cmp
daa
inc
cmp
adc
aaa
pop
sbb
ss
clc
push
ss
lods
ljmp
fnsave
std
loop
xor
adc
popf
mov
or
ret
lret
stos
das
lcall
das
jecxz
adc
and
or
pop
mov
sbb
jge
out
mov
cmp
xor
aas
inc
inc
hlt
decl
aaa
loop
sbb
cmp
lea
mov
xor
sbb
dec
mov
xor
and
inc
enter
or
xor
cmp
xor
inc
xor
aas
xlat
ss
pushl
ss
xor
cmp
int3
xor
and
scas
aam
cmp
repz
mov
cmp
dec
popf
out
gs
mov
icebp
mov
jge
out
addb
nop
loop
out
fiaddl
aad
mov
out
ret
aad
aaa
mov
jb
jo
shl
xchg
mov
add
sub
orb
add
stos
js
in
loopne
in
fsubr
add
add
push
sti
gs
sti
fwait
add
jmp
repnz
jecxz
dec
in
psllq
in
out
push
in
inc
repnz
in
or
fsubr
xchg
repz
in
sub
test
jae
ja
sahf
hlt
shr
je
add
inc
hlt
xor
and
shr
and
sbb
and
inc
icebp
mov
out
icebp
inc
clc
adc
repnz
repnz
repz
call
add
add
add
cli
test
das
cli
outsl
hlt
pop
cli
cmp
stc
add
mov
stc
xor
mov
outsb
xor
xor
subl
mov
arpl
xor
pop
pop
xor
pop
sub
jne
cs
xor
mov
cs
and
movsl
adc
cmp
cs
add
cs
cmp
add
cmp
lds
jbe
mov
inc
aad
cmp
jo
mov
cmp
inc
cli
cmp
lods
inc
and
popf
inc
ss
inc
push
cmp
inc
insb
cmp
inc
jle
inc
mov
out
cmpsb
cmp
inc
mov
add
inc
sarb
cmp
pop
cmp
or
push
aas
test
push
aas
sahf
cmp
aas
sub
test
enter
imul
hlt
call
add
loopne
or
loope
and
inc
jle
repnz
jle
bnd
ret
fiadds
out
lret
fsubp
in
sbb
fptan
fildll
rep
mov
add
add
cwtl
out
insl
pushf
hlt
out
xchg
in
and
ljmp
sbbl
mul
and
sub
loope
ljmp
in
outsb
movl
test
inc
in
movsl
sub
in
xchg
ljmp
mov
testl
mov
mov
stc
testl
push
mul
icebp
test
adc
out
mov
dec
out
div
call
add
ljmp
xchg
clc
jo
stos
stc
int
das
stc
push
repz
xor
lods
call
lods
cld
or
idivb
repz
lock
ljmp
add
pusha
notl
adc
add
shlb
jno
ljmp
mov
dec
xor
mov
insb
xor
pop
xor
ja
mov
adc
fnstcw
xor
jge
xor
adc
cmc
jns
sub
push
dec
jge
test
push
jnp
mov
aaa
cmp
push
cmp
adc
xor
add
push
xor
inc
push
loop
sbb
lds
arpl
jne
cmp
sbb
add
inc
adc
aas
and
aas
xchg
inc
int
mov
xlat
addr16
jmp
aaa
xor
cmp
xor
xor
dec
ds
xor
aaa
xorb
cmp
xor
xor
cmp
xor
cmp
cld
cmp
xor
cmp
fnstenv
mov
xor
xor
xor
cmp
xor
test
xorl
jb
fnsave
sarb
mov
shr
cwtl
mov
mov
cmp
adcl
mov
loope
ljmp
pop
ljmp
add
add
add
add
scas
ljmp
daa
ljmp
ljmp
cmpsl
into
ljmp
xchg
jmp
xchg
or
call
into
ljmp
lods
out
shr
lock
mov
lock
leave
lock
out
lock
in
add
call
add
add
add
cli
sub
repz
clc
repnz
sti
mov
repnz
adc
xchg
cld
jmp
int
imul
mul
icebp
mov
xor
arpl
or
scas
ljmp
push
stc
or
sahf
repz
in
adc
or
repz
out
hlt
out
stos
out
psubsb
out
lret
lock
popf
das
test
ljmp
sti
sahf
xor
stc
xlat
sub
fimuls
cs
lret
push
xor
jmp
lods
ljmp
mov
add
cmp
mov
cmp
add
adc
xor
pop
dec
xor
pusha
pop
cs
ds
das
jno
jl
in
add
add
cs
cmp
inc
add
hlt
inc
adc
mov
and
xchg
inc
xor
adc
inc
cmp
xor
push
cmp
xor
popa
cmp
adc
jno
sbb
jns
adc
cmpl
cld
inc
cltd
cmp
sbb
test
cmp
sbb
mov
cmp
xor
sarl
xor
loope
sbb
jmp
lock
fdivrp
jmp
call
or
adc
adc
sbb
sbb
in
and
fsubr
mov
mov
jmp
test
jmp
mov
or
enter
rorb
in
loopne
in
jmp
jo
jmp
call
inc
jmp
or
adc
adc
call
call
sub
call
jmp
dec
xchg
shr
push
mov
inc
jmp
cmp
call
add
sti
in
sahf
hlt
pop
icebp
cld
hlt
mov
pmaddwd
fcomip
scas
ljmp
jl
sbb
pop
out
add
add
in
loope
and
sub
out
in
adc
xor
sub
div
xchg
cli
aaa
repz
cltd
cmc
dec
clc
and
mov
testb
test
jle
out
notl
icebp
shl
imul
cmp
out
cli
repnz
inc
cmp
pop
and
cmp
inc
adc
mov
aam
leave
adc
xor
xor
add
add
xchg
xor
fs
push
xor
pop
and
xor
or
mov
test
scas
sarb
leave
adc
jmp
stos
ljmp
mov
xorb
lcall
ficomps
cwtl
xor
ds
jp
xor
mov
add
cmp
xor
xor
add
add
cmp
xor
cmp
xor
cld
cmp
test
or
cmp
aaa
push
cmp
cmc
aaa
dec
inc
pop
cmp
inc
lods
cmp
inc
sarb
aas
cmp
aas
int3
cmp
aas
call
cmp
or
cmpsb
adc
mov
push
cmp
sbb
push
add
add
cmp
aam
ds
aas
inc
cmp
mov
ljmp
hlt
ljmp
mov
xchg
ja
ljmp
xchg
ljmp
xchg
ljmp
mov
ljmp
inc
call
sete
call
and
add
test
call
cmp
in
call
pop
aam
call
jae
lcall
xor
gs
inc
in
jmp
or
insl
jmp
insl
in
jmp
popa
in
jmp
adc
in
jmp
stos
in
call
enter
mov
in
call
xchg
call
sub
arpl
cmp
dec
call
mov
out
out
out
out
out
out
out
out
out
or
jecxz
bound
ss
insb
xchg
ss
stos
ljmp
pop
inc
xor
bound
add
pop
pop
xor
sti
scas
xor
add
pop
clc
adc
in
jecxz
pop
xor
fldenv
xor
push
sub
mov
idiv
das
add
or
fsubrs
xor
aaa
das
movsb
aam
cs
xchg
add
jne
testb
pop
inc
inc
cmp
add
add
inc
iret
cmp
push
cmp
jmp
inc
xorb
inc
aad
xchg
dec
jbe
fwait
inc
jle
addl
jnp
mov
jae
xchg
cmp
sahf
cmp
inc
cmpsb
cmp
inc
scas
cmp
inc
mov
fwait
inc
mov
cmp
inc
cmp
fidivrs
addl
fwait
inc
out
cmp
adc
add
loopne
jecxz
fsts
ret
inc
add
scas
adc
mov
jns
mov
jno
std
ljmp
mov
jne
jge
fcomps
repnz
loope
pop
into
dec
subb
out
loopne
flds
fadd
loope
fdivr
fldcw
fidivrl
xlat
aad
std
aad
mov
icebp
adc
ljmp
add
add
rcr
xor
frndint
jp
cmc
fimuls
es
add
aad
fxch
aam
fnstenv
aad
fisubl
inc
fimull
aam
ficompl
aam
fmulp
xlat
mov
out
xlat
repz
leave
fimuls
xlat
push
fists
out
mov
add
fbstp
xlat
mov
dec
fldt
lods
fidivl
out
fimuls
call
fidivs
add
sub
ljmp
jge
xor
and
sub
pusha
dec
cmp
cmp
push
or
cmp
test
cmp
test
cmp
jne
cmp
jne
cmp
lds
dec
gs
cmp
jo
addb
cmp
cmp
in
cmp
push
dec
xor
push
iret
divb
mov
mov
aad
lahf
aaa
add
inc
pop
aas
testl
aas
inc
inc
mov
daa
inc
lcall
inc
mov
aas
cmpsl
inc
fidivrl
mov
ljmp
cwtl
cmc
mov
cmp
xor
sbb
cmpsl
sub
inc
cmp
xor
ds
xor
ds
pop
enter
call
add
jecxz
push
xor
aaa
dec
xor
cmp
xor
ret
in
jecxz
mov
into
and
test
arpl
add
add
movsl
into
mov
into
jecxz
std
into
add
inc
fldenv
ret
pop
flds
test
arpl
popf
flds
mov
gs
jecxz
cmp
int3
and
add
iret
cmpl
mov
fsubs
jecxz
jge
add
inc
int
rcrl
mov
stc
int3
pop
mov
fcmovnbe
aam
fcmovnu
aam
fcmovnbe
aam
fldt
sub
fistpl
sbb
fisttpl
dec
ficoml
push
ficompl
pop
ficoml
push
fisubrl
aad
fidivl
aad
ficompl
aad
ficoml
aad
fcmove
aam
fcmovbe
aam
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
pop
in
add
pop
in
add
pop
in
add
xlat
in
add
xlat
in
add
in
add
in
add
xlat
in
add
xlat
in
add
in
add
in
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
push
in
add
push
in
add
inc
in
add
inc
in
add
push
in
add
push
in
add
inc
in
add
inc
in
add
pop
in
add
pop
in
add
scas
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
inc
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
xlat
call
add
call
add
xlat
call
add
call
add
call
add
xchg
call
add
xchg
add
xchg
call
add
xchg
add
xchg
add
push
call
add
inc
call
add
scas
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
xchg
add
push
in
add
push
in
add
inc
in
add
inc
in
add
push
in
add
push
in
add
inc
in
add
inc
in
add
pop
in
add
pop
in
add
pop
in
add
pop
in
add
pop
in
add
pop
in
add
pop
in
add
pop
in
add
xlat
in
add
xlat
in
add
in
add
in
add
xlat
in
add
xlat
in
add
in
add
in
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
jmp
add
xchg
jmp
add
xchg
add
xchg
add
xchg
jmp
add
xchg
add
xchg
add
push
jmp
add
inc
jmp
add
push
jmp
add
inc
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
xlat
call
add
xlat
call
add
call
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
xlat
in
add
xlat
in
add
in
add
in
add
xlat
in
add
xlat
in
add
in
add
in
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
push
in
add
push
in
add
inc
in
add
inc
in
add
push
in
add
push
in
add
inc
in
add
inc
in
add
pop
in
add
pop
in
add
pop
in
add
pop
in
add
pop
in
add
pop
in
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
xlat
jmp
add
jmp
add
xlat
jmp
add
jmp
add
xchg
jmp
add
xchg
add
xchg
add
xchg
jmp
add
xchg
add
xchg
add
push
jmp
add
inc
jmp
add
push
jmp
add
inc
jmp
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
inc
out
add
inc
out
add
push
out
add
push
out
add
inc
out
add
inc
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
xlat
in
add
xlat
in
add
in
add
in
add
xlat
in
add
xlat
in
add
in
add
in
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
xchg
in
add
xchg
in
add
xchg
add
xchg
add
scas
cld
push
ret
hlt
int3
adc
jecxz
push
xchg
adc
mov
jge
out
jmp
cmp
test
inc
mov
jp
out
ret
out
in
dec
mov
jge
mov
push
cmp
push
fistpll
std
ljmp
push
in
or
or
xchg
nop
lds
arpl
sub
mov
mov
fmuls
in
xchg
arpl
jmp
pop
push
pop
repnz
add
add
dec
push
mov
inc
ja
adc
push
testb
mov
and
and
insl
add
je
in
push
pop
xchg
push
repnz
adc
pop
xchg
xchg
shr
inc
fstps
dec
js
fmuls
sahf
sub
dec
testb
adc
jecxz
imul
cltd
repz
arpl
push
gs
xchg
cwtl
dec
lcall
leave
xchg
mov
inc
repz
sbb
test
testl
xchg
fsqrt
cwtl
pop
movsb
inc
lods
in
jl
ds
rorb
aad
in
icebp
jl
icebp
mov
mov
or
test
inc
dec
shlb
aad
rcrb
jl
jb
in
jmp
add
and
into
push
jge
mov
lahf
pop
lds
sbb
imul
in
enter
cmp
and
in
test
xlat
and
test
je
cmpsb
xor
jo
push
inc
aas
xchg
fdivr
cmp
push
aaa
sub
cltd
jo
cmp
push
and
call
fucomp
push
xchg
add
shr
mov
mov
divl
cwtl
mov
lret
push
imul
fldt
test
clc
fwait
cmpsb
sarb
mov
sub
inc
scas
jecxz
xor
xchg
add
or
mov
loopne
loop
fstp
xlat
in
movsb
adc
inc
call
ss
ss
jno
push
xor
add
add
andps
push
sbbb
xor
out
inc
mov
cmp
xor
push
imul
aas
jne
add
xlat
movsb
push
mov
cmpsb
ret
jno
sbb
mov
jae
loopne
mov
mov
add
jno
in
scas
fisttpll
cmpsb
jno
clc
xor
into
add
add
add
mov
mov
lret
mov
dec
lock
out
dec
mov
inc
cld
imul
dec
hlt
sub
decb
hlt
aad
sbb
outsl
dec
lock
jno
faddl
add
jle
add
sub
jge
mov
mov
repz
or
add
add
inc
in
xor
push
mov
out
or
rolb
mov
jmp
mov
mov
ss
ss
ss
outsl
in
pop
loop
add
repz
sub
add
sub
mov
push
xor
fnstsw
jb
mov
push
add
add
out
add
fmull
inc
sub
scas
ljmp
mov
ret
add
cwtl
cmc
andl
or
jne
cld
and
stos
add
cwtl
jmp
push
ljmp
mov
fnstcw
in
sub
das
das
jne
mov
loopne
inc
xor
mov
pop
in
cs
cs
vcvtdq2ps
mov
push
mov
push
inc
cmove
cs
cs
vcvtdq2ps
sbbl
imul
mov
jae
clc
push
adc
inc
scas
jne
clc
ficoms
mov
les
add
add
xchg
add
push
inc
xchg
cmc
mov
ret
jne
push
icebp
cmpsb
cmc
add
jne
cld
sub
decb
adc
mov
in
dec
cld
mov
out
add
lock
adc
jmp
add
mov
ret
das
das
das
add
add
jae
mov
or
stos
or
inc
scas
popf
ret
das
das
das
jae
sbbl
inc
mov
jns
scas
out
jge
scas
ljmp
stos
imul
call
push
sbb
sub
cli
mov
add
incb
cld
and
divb
xor
cli
add
cli
mov
mov
inc
lock
or
lfence
mov
jae
or
jae
clc
xor
fimull
or
or
mov
jae
or
bnd
mov
popf
ret
jae
sbbl
mov
add
add
lods
fisttpll
stos
jno
call
es
add
jge
add
ljmp
aaa
cwtl
loope
jmp
cmpb
push
test
jmp
add
repnz
cwtl
notb
aaa
test
mov
or
mov
or
mov
add
add
testb
lods
mov
mov
ljmp
repnz
jae
hlt
xor
repnz
daa
cwtl
in
jae
add
scas
ljmp
scas
jbe
mov
cmpb
jbe
jae
add
scas
ljmp
sbb
orl
testb
icebp
lcall
arpl
cmc
xorl
inc
jb
adc
add
repnz
cmpsl
cmc
push
push
push
hlt
jmp
imul
push
ljmp
shlb
in
out
in
dec
rclb
mov
mov
jmp
inc
jo
pop
in
sub
in
lcall
inc
pop
cmove
incl
inc
scas
outsl
cmp
ficoms
aaa
std
jno
add
xor
xchg
add
push
dec
xchg
cmc
mov
ret
das
outsl
in
sbb
cmp
mov
push
cmove
sub
int3
ljmp
sbb
mov
add
mov
ds
outsl
sarl
xor
jno
hlt
and
out
mov
outsl
dec
clc
daa
xchg
cmc
mov
xor
insl
inc
sub
out
rolb
push
sbb
outsl
cmp
and
fimuls
adc
test
mov
adc
outsl
adc
addl
inc
push
mov
xor
adc
sub
int3
cli
sub
sub
in
mov
add
ljmp
xchg
sahf
cmc
lcall
mov
push
gs
clc
fbld
lods
mov
lcall
or
insl
xor
mov
icebp
mov
jmp
gs
lods
stos
add
mov
in
inc
add
ljmp
pop
add
les
ljmp
mov
mov
cmove
scas
add
dec
cmove
fwait
jmp
addl
add
jb
mov
lods
lahf
or
push
stc
loop
dec
xchg
ret
es
gs
repz
inc
mov
decb
inc
in
mov
xchg
ret
and
gs
sbb
mov
add
gs
daa
scas
mov
push
cmp
lahf
loope
imul
mov
fimuls
add
cmp
arpl
inc
fdivrp
aas
scas
arpl
mov
test
call
scas
icebp
push
addb
scas
ljmp
scas
testl
add
mov
lcall
dec
popf
jmp
subl
inc
and
add
scas
add
mov
add
xor
lcall
arpl
jno
and
fiadds
je
arpl
jb
add
mov
arpl
xor
mov
inc
sahf
testl
push
mov
cmpsb
inc
rcrb
inc
or
popf
jmp
inc
mov
div
xorl
dec
inc
imul
aaa
movsl
jmp
in
add
cld
xor
add
outsb
ljmp
push
arpl
decl
imul
mov
ljmp
push
push
incl
fistpll
push
addb
scas
ljmp
mov
xor
cmc
dec
lock
dec
cmove
addb
scas
ljmp
jno
icebp
mov
adc
cmp
push
repnz
scas
mov
cmc
push
ljmp
jb
mov
fs
fsubs
adc
inc
lret
loopne
test
mov
push
mov
push
mov
fwait
jmp
sub
mov
imul
inc
into
popa
inc
fsubrs
add
add
popa
dec
loopne
dec
cmove
push
cmove
scas
add
fistps
mov
push
push
call
sub
or
add
push
cmove
scas
add
fwait
mov
push
xor
ljmp
scas
cwtl
jmp
addl
add
repnz
movsb
mov
lods
clc
inc
push
imul
cmove
hlt
cmc
subl
inc
bound
movsb
cwtl
scas
add
scas
loope
mov
out
sub
pop
or
shrb
decl
mov
inc
scas
in
and
ljmp
jae
dec
push
cmp
mov
cwtl
notb
add
sti
stc
repz
mov
xchg
ret
add
es
es
pop
in
jae
mov
xchg
ret
vcvtdq2ps
push
add
add
ljmp
loope
pop
pop
insl
es
pop
in
scas
std
aas
scas
dec
lds
repnz
sub
testb
and
ljmp
jnp
pop
in
sbb
mov
add
ljmp
scas
ljmp
scas
ljmp
scas
pop
inc
or
in
push
push
jmp
mov
shl
cmc
add
and
inc
scas
ljmp
stos
and
inc
scas
jmp
add
cmpsb
add
fnsetpm(287
mov
add
mov
push
ljmp
mov
dec
rcll
ljmp
aaa
mov
cmove
lods
xor
dec
arpl
mov
out
add
xlat
xchg
push
jb
mov
mov
cmove
andb
ljmp
faddl
ret
idivl
add
repnz
or
dec
aad
repnz
sub
cli
mov
fwait
jmp
xor
mov
mov
push
push
dec
mov
call
adc
cmc
ljmp
cli
xchg
fs
cld
xchg
xchg
icebp
jae
gs
pop
gs
fcompl
cmpsl
sti
mov
add
ljmp
add
dec
aad
repnz
jb
cmp
push
push
sbb
jmp
mov
add
push
add
bound
cmpsb
cmc
add
push
mov
fs
loopne
add
add
fst
push
push
mov
add
imul
add
xchg
stc
sub
mov
arpl
movsl
movsl
icebp
jae
arpl
shlb
adc
fdivrs
mov
sub
add
fdivrs
xor
add
popa
or
cmp
mov
cmpsb
add
mov
mov
cmove
cmove
out
orl
popf
stc
mov
das
add
add
ret
rorb
scas
dec
mov
call
sub
cmove
out
cmc
test
je
xor
add
mov
cmove
add
add
ljmp
ljmp
pop
jae
cmc
mov
push
cmove
fcompl
pop
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
scas
ljmp
sbb
rclb
sub
sbb
test
push
cli
imul
inc
bnd
cwtl
mov
pop
cmp
clc
sub
pop
test
xchg
mov
pusha
mov
mov
loope
sbb
sub
or
adc
sbb
enter
pop
mov
test
test
mov
hlt
aad
fisubrl
mov
notb
into
adcb
add
mov
and
mov
add
out
xchg
lret
scas
cmp
push
test
cwtl
dec
frstor
ljmp
dec
insb
sub
mov
cmp
jmp
stos
add
scas
add
pop
jle
pop
push
push
pop
and
push
lret
adc
xchg
cmpsl
push
imul
dec
and
andb
xor
pop
add
pop
push
arpl
lock
out
lds
hlt
mov
pop
and
lock
sbbl
or
sbb
xchg
mov
push
sub
fdiv
adc
jae
leave
shr
sbb
sbb
pop
outsb
fdivrp
daa
jge
leave
out
out
mov
pushf
int3
mov
jne
push
test
leave
lea
xchg
mov
test
arpl
xchg
into
and
cmpsb
bound
mov
xchg
push
mov
xchg
repz
add
cmp
stc
push
sub
and
fsubs
call
pop
call
xchg
xchg
add
inc
add
js
or
mov
adc
insb
pop
das
pop
cltd
mov
sbb
mov
lods
mov
jne
mov
popf
sbb
mov
lahf
or
lods
rol
fdivr
push
in
pop
je
cmc
push
fcmovnu
hlt
or
push
movsb
mov
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
push
push
dec
inc
push
push
push
dec
dec
add
add
add
add
inc
add
add
jae
je
add
add
add
add
jb
imul
add
js
add
add
xor
xor
add
pop
add
push
add
dec
add
add
jb
jb
add
je
inc
add
outsb
add
add
insb
add
add
add
outsl
add
je
jb
outsl
add
add
add
imul
inc
add
add
jae
add
pop
add
popa
add
add
add
add
add
xor
sub
add
add
sub
add
add
add
bound
sub
add
xor
xor
data16
xor
xor
xor
add
add
xor
dec
jo
xor
gs
add
jbe
jo
xor
add
add
push
gs
jo
outsb
dec
gs
js
add
add
jge
add
addl
add
add
add
add
add
addb
add
add
cwtl
xchg
add
add
add
add
add
test
add
cwtl
add
add
test
add
test
add
xchg
add
xchg
add
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
xchg
add
xchg
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
add
mov
add
lea
add
add
add
add
add
add
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
add
add
add
mov
add
mov
add
popl
add
add
add
add
add
add
add
popl
add
popl
add
popl
add
nop
add
add
add
add
add
add
nop
add
add
nop
add
add
nop
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
cmpsb
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
cwtl
add
add
test
add
test
add
xchg
add
xchg
add
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
xchg
add
xchg
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
add
mov
add
lea
add
add
add
add
add
add
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
add
add
add
mov
add
mov
add
popl
add
add
add
add
add
add
add
popl
add
popl
add
popl
add
nop
add
add
add
add
add
add
nop
add
add
nop
add
add
nop
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
cmpsb
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
cwtl
add
add
je
inc
imul
je
arpl
push
add
jg
inc
jb
popa
je
inc
imul
gs
imul
imul
jns
add
push
add
imul
insb
insb
outsl
arpl
add
icebp
add
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
test
insb
jae
jb
insl
jo
or
gs
push
dec
outsl
arpl
add
add
je
jb
imul
je
outsl
outsb
push
add
mov
inc
jb
jbe
push
jns
gs
add
add
outsb
fs
gs
inc
imul
gs
outsl
insl
insl
inc
outsl
outsb
imul
inc
imul
push
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
outsl
arpl
inc
outsl
insl
jo
arpl
sub
ja
je
push
bound
add
je
inc
outsl
outsb
jae
insb
gs
jne
jo
je
je
jb
bound
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
push
popa
imul
insl
gs
add
imul
imul
imul
add
gs
outsb
push
gs
js
gs
imul
gs
into
add
dec
outsl
jae
outsb
popa
insl
gs
outsl
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
dec
add
gs
inc
outsl
jae
gs
arpl
add
add
insb
inc
imul
gs
outsl
outsb
jae
insb
gs
jne
jae
jb
outsl
jae
je
outsl
outsb
add
mov
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
gs
jns
je
insl
push
imul
gs
gs
push
imul
jne
push
imul
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
sbb
dec
jne
je
inc
jns
gs
outsl
push
imul
xlat
add
je
imul
bound
gs
add
mov
inc
outsl
insl
jo
je
jb
popa
insl
gs
js
add
xlat
add
je
imul
loopne
inc
outsb
jne
inc
popa
je
inc
outsl
jb
popa
je
inc
js
add
addb
gs
outsl
outsb
jae
insb
gs
insb
imul
outsb
addr16
inc
add
test
inc
gs
jne
jb
outsb
je
imul
jns
add
testl
jb
arpl
jae
data16
dec
popa
jae
add
test
inc
jb
popa
je
dec
outsl
bound
push
arpl
add
add
jne
push
dec
dec
popa
outsb
addr16
addr16
add
sub
inc
gs
jb
arpl
jae
outsl
jb
imul
imul
inc
jb
popa
je
push
jb
arpl
jae
add
mov
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
outsb
inc
imul
outsb
addr16
add
sub
ja
je
push
jb
popa
add
cmp
inc
imul
jne
arpl
add
add
jne
push
gs
jne
arpl
jns
gs
add
roll
gs
outsl
outsb
jae
insb
gs
imul
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
mov
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
popa
jo
push
popa
jb
insl
gs
jb
add
jo
popa
insb
imul
push
add
outsb
fs
imul
gs
js
add
mov
insb
jae
jb
jo
push
add
mov
jo
jb
add
aaa
add
je
push
popa
je
dec
popa
insl
gs
add
bound
dec
popa
outsb
fs
add
pop
add
outsb
je
outsb
jne
inc
bound
inc
jbe
outsb
je
add
bound
dec
gs
outsl
jb
push
je
je
jae
js
add
gs
outsl
outsb
jae
insb
gs
insb
imul
dec
outsb
addr16
push
add
xor
insb
jae
insb
insb
outsl
arpl
add
bound
inc
imul
fs
je
insl
inc
add
add
inc
fs
je
insl
push
add
mov
gs
inc
imul
push
jne
jb
inc
outsl
jae
gs
arpl
add
push
jo
popa
je
push
gs
jne
arpl
add
je
inc
outsl
outsb
jae
insb
gs
add
inc
jb
popa
je
inc
jbe
outsb
je
add
xor
push
gs
popa
insb
jne
add
add
je
je
imul
inc
js
add
dec
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jne
push
jns
je
insl
dec
popa
outsb
addr16
addr16
jb
jne
jae
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outsb
addr16
add
imul
gs
fs
jb
arpl
jae
gs
outsl
jb
add
inc
gs
jb
imul
imul
inc
gs
gs
jo
popa
je
inc
add
sbb
inc
imul
je
push
dec
outsl
je
imul
outsl
outsb
inc
add
add
popa
fs
imul
jns
push
jae
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
dec
add
gs
outsl
outsb
jae
insb
add
inc
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
popa
fs
outsl
outsb
jae
insb
gs
jne
jo
je
je
jb
bound
add
clc
add
je
jb
arpl
jae
jb
outsl
jb
je
inc
outsl
outsl
jae
add
add
je
imul
gs
add
inc
outsl
outsb
jae
insb
gs
imul
outsl
fs
push
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
add
xchg
add
outsl
bound
push
imul
inc
gs
gs
push
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
dec
outsl
jbe
inc
imul
jb
addr16
jae
push
add
add
je
jb
imul
push
add
stc
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
inc
inc
inc
push
dec
gs
fs
jns
gs
js
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
inc
add
outsb
jb
imul
imul
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
jno
inc
jb
popa
je
inc
imul
jns
add
and
push
insb
gs
js
dec
inc
push
dec
inc
dec
xor
cs
insb
add
lds
inc
jb
ja
gs
inc
add
push
gs
outsl
jbe
push
jb
jo
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
incl
push
imul
add
aad
push
jb
outsb
jae
popa
je
dec
gs
popa
add
mov
ja
imul
or
ja
jae
jb
outsb
je
inc
add
pop
add
outsb
fs
gs
popa
addr16
add
dec
add
insb
gs
jae
inc
popa
jo
jne
add
adc
dec
jo
outsb
inc
gs
je
jo
add
pop
add
jae
popa
fs
push
imul
push
add
outsb
push
imul
popa
je
outsl
outsb
push
add
cld
add
jae
popa
addr16
outsl
js
outsb
imul
fldl
inc
outsb
jne
inc
imul
gs
arpl
inc
add
push
arpl
jo
jns
add
add
jo
imul
gs
add
dec
add
outsl
jae
push
imul
add
outsb
fs
dec
inc
dec
gs
popa
addr16
js
add
add
je
data16
imul
add
add
dec
outsl
imul
push
add
add
arpl
outsb
jne
popa
imul
add
add
jae
popa
addr16
outsl
js
js
add
inc
imul
jae
push
outsb
imul
gs
jae
addr16
add
ret
add
imul
imul
ja
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
insb
popa
jae
dec
popa
insl
gs
add
dec
gs
popa
addr16
jne
jne
add
push
imul
outsl
outsl
imul
add
add
imul
gs
add
jne
push
jb
jo
inc
js
add
roll
jb
ja
outsb
jne
popa
jb
adc
popa
arpl
je
jns
je
insl
dec
gs
popa
addr16
add
inc
jb
popa
je
inc
gs
je
jo
add
push
add
je
jo
outsb
inc
insb
imul
push
imul
fiadds
dec
outsl
popa
fs
outsb
jne
add
push
imul
js
dec
outsb
addr16
push
add
and
push
outsl
jae
push
push
dec
gs
popa
addr16
add
push
add
data16
je
arpl
xor
inc
push
dec
gs
inc
jne
inc
add
addl
gs
outsb
jne
je
insl
inc
imul
rolb
inc
outsb
fs
gs
imul
jae
jae
inc
fs
outsl
outsb
outsb
arpl
jae
add
aaa
add
popa
jb
jo
gs
add
sahf
add
je
imul
add
insl
outsl
jbe
dec
outsb
jne
add
push
gs
outsl
jne
insb
gs
insb
imul
add
inc
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
push
push
inc
gs
je
jo
add
push
gs
jne
jae
jb
mov
je
popa
arpl
arpl
lahf
add
push
outsb
fs
gs
popa
add
inc
jb
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
arpl
insb
insb
inc
popa
jb
outsb
outsw
add
cltd
add
imul
gs
insb
dec
outsl
outsl
imul
outsl
ja
and
inc
gs
insb
addr16
je
insl
push
gs
push
add
add
je
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
add
insb
insb
dec
jae
inc
imul
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
fs
je
push
imul
dec
add
jo
push
arpl
push
add
je
gs
inc
insb
addr16
popa
bound
gs
add
add
dec
gs
arpl
inc
js
add
dec
add
jo
dec
insl
popa
add
gs
jns
inc
outsl
insb
outsl
jb
add
sub
inc
gs
outsb
jo
je
je
je
add
push
gs
jne
jae
jb
outsl
jae
add
inc
insb
imul
je
roll
inc
outsb
popa
bound
imul
dec
add
imul
outsb
outsl
ja
gs
popa
addr16
add
dec
add
je
outsb
jne
je
imul
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
gs
je
dec
outsb
jne
add
inc
gs
popa
bound
fs
gs
inc
js
outsb
je
add
mov
inc
jb
ja
outsb
imul
arpl
cmp
inc
push
jo
jb
add
pop
add
outsb
fs
dec
inc
dec
gs
popa
addr16
js
add
push
jb
jo
add
push
add
je
jb
outsl
jb
je
inc
insb
imul
inc
outsl
jb
popa
je
add
inc
gs
gs
popa
addr16
add
inc
jb
insl
gs
jb
arpl
add
imul
je
gs
add
add
jae
push
jne
je
gs
popa
add
add
je
inc
add
push
imul
outsb
add
sub
push
gs
insb
inc
push
imul
outsl
insl
push
outsl
imul
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
push
inc
jb
popa
je
push
imul
popa
je
outsl
outsb
push
add
lea
inc
fs
outsb
imul
imul
gs
jb
jns
jne
jae
jb
mov
dec
jae
push
ja
jb
add
pop
add
outsb
fs
gs
popa
addr16
popa
insb
insb
bound
imul
push
push
inc
push
xor
cs
insb
add
pop
add
jo
popa
arpl
gs
push
add
add
inc
push
inc
outsl
outsb
je
add
inc
gs
jo
outsb
inc
imul
add
push
add
je
popa
jbe
inc
imul
add
adc
push
jb
outsb
je
insb
addr16
js
add
add
outsb
fs
gs
push
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
adc
push
jb
outsb
je
insb
addr16
js
add
add
outsb
fs
gs
inc
add
inc
outsl
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
add
je
imul
inc
add
push
popa
jbe
inc
imul
add
adc
push
popa
addr16
gs
jo
insb
addr16
add
add
imul
add
add
je
imul
push
add
add
outsl
outsl
jae
inc
outsl
outsb
je
add
add
jo
popa
arpl
gs
inc
add
or
inc
gs
jo
outsb
inc
imul
add
add
inc
push
inc
outsl
insb
outsl
jb
add
inc
dec
dec
inc
dec
inc
xor
cs
insb
add
sub
push
gs
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
mov
push
dec
inc
gs
gs
je
jo
outsl
insb
fs
add
add
je
popa
arpl
outsl
outsb
inc
js
and
inc
jne
insb
imul
outsl
outsb
add
add
push
popa
je
push
jb
jo
jb
inc
outsl
jb
jb
je
inc
add
pop
add
insl
insl
popa
outsb
fs
imul
addr16
add
sbb
push
push
outsl
outsl
imul
arpl
push
add
addr16
jne
jb
inc
imul
push
push
js
arpl
gs
js
add
inc
jb
addr16
imul
mov
gs
imul
and
push
push
dec
outsl
je
data16
arpl
add
jbe
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
mov
push
dec
inc
gs
imul
push
jo
arpl
js
add
push
dec
inc
imul
jb
outsb
je
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
add
inc
gs
gs
imul
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
push
dec
outsl
je
data16
add
inc
js
jb
arpl
outsl
outsb
push
add
lds
push
dec
inc
gs
outsb
jae
popa
outsb
arpl
js
insb
outsl
jb
jb
into
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
dec
push
jne
jb
push
arpl
insb
gs
imul
inc
jb
addr16
jne
jb
inc
imul
inc
jb
gs
popa
insl
gs
popa
jo
imul
dec
inc
dec
dec
xor
cs
insb
add
add
jb
push
add
jb
je
push
add
add
jb
insl
jo
push
add
aaa
add
jb
push
je
dec
inc
add
add
jb
push
je
dec
push
add
add
jb
inc
push
push
add
jb
push
add
add
jb
push
add
add
jb
insl
jo
dec
push
add
inc
push
dec
dec
push
inc
push
dec
cs
insb
add
add
xchg
sbb
add
add
add
add
add
add
xor
add
mov
add
add
add
adcb
add
and
add
xchg
sbb
add
add
add
add
add
add
push
add
addb
add
js
add
xchg
sbb
add
add
add
add
or
add
add
pusha
mov
add
xchg
sbb
add
add
add
add
or
add
mov
add
xchg
sbb
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
xchg
sbb
add
add
add
add
or
add
add
add
cmpsb
add
add
add
add
add
add
add
add
add
addb
add
xchg
sbb
add
add
add
add
or
add
add
hlt
cmpsb
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
addb
or
add
add
add
add
add
add
add
xor
xor
add
add
or
xor
add
add
or
mov
or
orb
mov
add
add
incl
xor
add
add
xor
add
pop
add
cld
sldt
clc
add
add
add
add
add
pusha
add
add
push
add
add
add
add
add
rolb
add
add
add
add
add
sldt
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
jnp
mov
pop
mov
add
pop
add
or
mov
mov
xor
add
or
add
add
add
sti
mov
add
sti
mov
add
or
add
or
add
sti
mov
add
cmp
add
aas
mov
add
add
mov
mov
add
add
or
or
add
add
add
xor
add
add
add
or
add
xor
mov
or
mov
add
add
add
mov
jnp
add
add
xor
add
mov
xor
add
add
xor
add
mov
add
add
add
mov
xor
or
add
add
add
add
mov
or
add
sti
mov
mov
add
add
add
mov
mov
add
add
add
sti
mov
lock
add
add
incl
add
add
add
aas
clc
lock
add
clc
decl
add
xor
xor
add
add
push
pop
call
pop
jmp
loopne
fnstsw
add
fnstsw
add
fnstsw
add
jmp
pop
jmp
rolb
repz
repz
repz
push
and
repz
jo
ret
out
jo
xchg
fdivrp
add
rcrb
add
mov
add
mov
add
nop
add
or
add
or
add
or
add
or
add
pmuludq
add
incb
add
incb
add
xlat
addb
jg
add
pushl
incl
add
add
push
add
add
add
imul
insb
add
xor
xor
add
js
add
add
imul
jb
jns
and
imul
je
push
add
imul
outsl
add
jae
and
add
jb
add
je
outsl
add
jns
and
imul
arpl
outsl
add
jb
jne
jo
je
sub
and
jo
insb
add
popa
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
arpl
outsl
add
jb
add
je
and
add
add
jne
je
popa
add
insb
add
and
outsb
add
insl
add
sub
and
insl
add
jae
je
and
bound
add
add
imul
insb
add
xor
xor
add
js
add
and
insb
add
arpl
popa
add
add
add
outsb
add
add
add
and
push
add
jae
je
add
and
add
jb
add
je
outsl
add
jns
add
add
add
add
add
adc
add
add
sub
add
add
and
add
add
add
call
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xchg
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
push
add
outsb
add
insb
add
xor
xor
and
push
add
add
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
push
add
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
dec
add
xor
xor
add
pop
add
add
add
jle
das
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
sub
push
add
add
add
add
add
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
mov
add
or
pop
xor
xor
xor
xor
js
movsl
xor
xor
xor
xor
push
xor
fidivs
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
mov
xor
sbb
xor
lret
shlb
fnsave
jecxz
jmp
aaa
pop
aaa
dec
aaa
pop
aaa
mov
xchg
aaa
pushf
aaa
movsl
aaa
pop
cmp
cmp
jb
cmpb
cmp
cmp
cmp
cmp
add
add
add
lods
add
add
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
add
add
add
add
add
ds
ds
ds
or
adc
push
aas
sbb
and
sub
cs
xor
cmp
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
fs
push
jo
jbe
jl
cmpb
aas
mov
xchg
aas
lcall
aas
mov
mov
aas
lret
aas
aas
fdivrl
loop
call
aas
cli
aas
add
add
add
pushf
add
add
xor
xor
adc
sbb
push
xor
sub
xor
xor
inc
xor
dec
xor
xor
data16
xor
jle
test
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
push
xor
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
xor
jo
jbe
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
push
xor
sub
xor
xor
inc
xor
dec
xor
xor
xor
xor
jle
test
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
loopne
add
add
adc
