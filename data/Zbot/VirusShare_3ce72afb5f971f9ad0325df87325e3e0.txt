push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
pop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
xor
popl
pop
pusha
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
ret
sub
lea
add
mov
mov
shl
xor
call
sub
pushl
mov
cmpb
jne
jmp
add
lea
inc
movzbl
cmp
jb
nop
mov
sub
jae
mov
cmp
ja
lea
jl
pop
call
popf
push
pushl
decl
ret
aam
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
pop
dec
jmp
jmp
call
add
mov
sub
sub
mov
pop
mov
mov
lea
mov
push
xorl
pop
sub
or
mov
cmp
je
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
xor
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
add
sbb
add
or
add
shlb
add
and
add
and
add
and
add
and
add
add
add
mulb
add
js
add
dec
and
add
and
add
add
and
add
and
add
add
add
add
mov
and
add
and
add
and
add
add
add
fisubl
add
scas
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
add
add
adc
add
sbb
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
pop
and
add
add
or
add
sbb
add
or
add
shlb
add
and
add
and
add
and
add
and
add
add
add
mulb
add
js
add
dec
and
add
and
add
add
and
add
and
add
add
add
add
mov
and
add
and
add
and
add
add
add
fisubl
add
scas
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
popa
jo
imul
inc
gs
gs
inc
imul
jne
jo
outsb
fs
push
add
inc
gs
je
dec
popa
outsb
fs
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
imul
jb
je
arpl
adc
push
gs
insl
gs
push
add
addb
jb
popa
je
inc
imul
jns
add
clc
add
inc
popa
fs
gs
fs
je
add
mov
popa
je
push
imul
push
gs
insl
gs
push
add
es
gs
imul
popa
fs
outsl
outsb
jae
insb
gs
add
out
inc
gs
imul
bound
gs
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
je
jb
jbe
push
jns
gs
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
je
outsl
arpl
gs
outsb
outsw
inc
add
les
inc
insb
outsl
bound
push
imul
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
ja
push
gs
outsl
arpl
push
imul
push
dec
inc
dec
xor
cs
insb
add
xchg
inc
gs
imul
js
push
add
jnp
inc
gs
imul
outsb
addr16
add
in
push
inc
gs
popa
jo
jne
add
sbb
ja
jo
imul
push
inc
imul
dec
gs
popa
addr16
add
xchg
push
push
gs
jae
addr16
add
int
dec
outsl
popa
fs
jne
jae
jb
add
ja
arpl
add
jnp
push
gs
outsl
arpl
add
mov
inc
gs
jb
jns
outsb
jne
ds
inc
gs
gs
popa
addr16
add
add
push
inc
gs
popa
jb
je
outsl
jae
jno
push
gs
jne
jae
jb
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
add
push
imul
jb
gs
add
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
dec
push
cs
insb
add
add
insb
outsl
outsb
gs
outsb
je
jns
add
push
inc
push
dec
xor
cs
insb
add
pushf
pop
scas
and
notb
cmp
inc
cmc
cmpsb
aaa
insl
add
pop
in
inc
push
jl
hlt
cmp
adc
push
mov
mov
sbb
shrb
xor
cmp
pop
xchg
stc
pushl
mov
xchg
xchg
loope
push
push
aad
push
xchg
mov
jae
mov
mov
push
sbbl
or
mov
jge
rcrl
stc
out
rcrl
popf
sbb
out
imul
xor
aas
imul
mov
push
iret
in
lds
mov
lahf
cmp
lds
xchg
add
ljmp
sbb
xor
push
sbb
popa
xchg
test
jp
jg
lock
out
fidivs
fs
jp
lahf
push
enter
je
ret
popa
xchg
mov
mov
xor
movsb
lahf
inc
shrl
add
jno
mov
ds
xchg
sub
mov
cmpsl
pop
dec
sub
add
repnz
push
test
test
stos
lcall
mov
gs
push
imul
movsb
xor
adc
mov
cs
dec
pop
dec
pop
jge
push
mov
mov
sub
adc
mov
daa
repz
andb
inc
xchg
cwtl
insb
sbb
test
data16
pop
pop
in
adc
dec
sub
and
mov
mov
enterw
and
mov
mov
cmp
mov
xor
sbb
int3
dec
icebp
enter
push
jmp
in
lods
call
cmp
lahf
jo
sub
cs
sub
loope
mov
push
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
fs
add
add
sbb
add
loopne
add
cld
pop
add
add
add
popl
xor
add
sub
add
and
add
inc
add
add
add
add
add
add
add
incb
std
incl
lcall
pop
mov
rol
mov
mov
pop
fwait
cltd
fwait
add
add
add
stos
lods
stos
add
mov
mov
jne
test
mov
mov
mov
test
lahf
das
nop
nop
xchg
adc
add
cltd
cltd
cltd
add
fwait
movsb
sahf
pop
popf
cmpsb
movsb
xchg
cmpsl
scas
stos
les
mov
lret
aam
jmp
lret
lret
leave
ret
mov
test
pop
lcall
add
sarl
and
mov
cmpsb
out
mov
cli
mov
into
int3
jmp
jecxz
out
in
out
jmp
in
ljmp
out
mov
mov
lods
outsb
mov
cltd
fwait
add
std
incl
stos
lods
lods
add
int
add
movsb
movsl
movsl
fs
cwtl
xchg
rcrb
test
mov
mov
xlat
aam
jmp
out
push
idiv
cld
cld
cld
cld
cld
std
push
cmc
hlt
loope
jecxz
mov
cmpsl
cmpsl
addr16
cwtl
xchg
sbb
push
add
add
add
xchg
xchg
pop
mov
mov
nop
xchg
nop
pop
popf
popf
sahf
and
lods
stos
scas
mov
pushf
pushf
std
mov
mov
mov
iret
iret
loopne
out
out
lock
cmc
div
cld
cld
sti
sti
sti
cli
jmp
jmp
iret
out
lods
mov
mov
mov
mov
stos
stos
stos
add
nop
daa
mov
cmpsl
cmpsb
pop
cmpsl
cmpsl
test
scas
stos
scas
movsl
mov
mov
std
mov
mov
cmpsl
cmpsb
test
cmpsb
cmpsl
movsl
pushl
iret
cli
xlat
clc
out
in
in
jmp
sti
lock
out
lock
icebp
jmp
loop
dec
iret
loope
lods
mov
mov
xchg
lcall
cmpl
jp
xchg
xchg
jae
lods
scas
popf
mov
mov
mov
mov
scas
ret
mov
pushl
test
mov
int3
ret
ror
repz
shl
loopne
loopne
jecxz
out
fcmove
out
mov
mov
mov
xchg
lcall
push
pop
arpl
dec
dec
dec
adc
cmp
xor
cmp
or
add
add
add
add
mov
subl
rol
cli
mov
mov
test
movsl
scas
pushl
stos
mov
dec
lret
lret
sti
enter
leave
enter
into
leave
repnz
shl
fdivrs
fcos
mov
lret
lcall
mov
dec
jo
jo
jae
jne
gs
pop
pop
gs
dec
dec
push
inc
dec
dec
pop
dec
dec
dec
pop
pop
push
pop
cmp
sbb
or
jbe
xchg
xchg
xchg
inc
cmpsb
movsl
movsl
mov
mov
cld
lret
lret
leave
enter
mov
cmpsl
jmp
test
pushl
mov
mov
mov
out
leave
leave
mov
cmc
scas
mov
cmpsb
lcall
xchg
xchg
cld
xchg
xchg
xchg
rorb
mov
ret
and
jp
xlat
jae
je
insl
insl
imul
jae
int
jle
lods
jne
jne
addr16
pusha
popa
bound
stos
test
mov
mov
lock
inc
ret
mov
mov
mov
sahf
rcrl
ror
dec
iret
mov
mov
sarl
mov
cmpsl
negb
lcall
mov
rorl
mov
fstps
mov
cli
mov
stc
mov
mov
mov
jge
insb
insb
imul
nop
mov
scas
lods
out
mov
mov
leave
call
sar
cmp
mov
pop
loop
incl
jle
mov
lret
sti
mov
scas
cmpsb
lods
stc
mov
cwtl
test
movsb
xchg
mov
clc
xchg
xchg
xchg
xchg
xchg
xchg
dec
shlb
mov
call
popf
pushf
lcall
lcall
xchg
pop
jg
push
push
insb
push
test
in
movsb
movsb
cmc
addr16
cmc
loopne
push
repnz
fcoms
pushl
ret
mov
call
ror
fcom
dec
lret
lret
mov
test
test
jmp
mov
mov
xchg
xchg
ss
mov
scas
fldt
xchg
nop
decl
xchg
xchg
call
pushf
pushf
lcall
xchg
xchg
cld
mov
mov
dec
push
xchg
pop
pop
pop
cmpsl
jno
jno
test
cltd
lock
ljmp
call
mov
rol
call
rcl
jmp
loop
in
in
jmp
lock
jmp
xlat
xlat
inc
mov
lods
lcall
xchg
ficomps
nop
xchg
push
fadd
mov
xchg
xchg
call
cltd
call
nop
nop
decl
lea
icebp
jg
xchg
test
rolb
mov
out
movsb
mov
lods
cmpsb
xchg
ljmp
mov
inc
mov
iret
fstp
lock
icebp
sti
cld
cli
cld
sti
cld
sti
cli
out
lock
fcom
fcos
mov
stos
lods
lock
lcall
xchg
addb
xlat
ret
scas
test
sahf
lcall
lahf
lahf
lcall
xchg
cwtl
lcall
mov
mov
subl
mov
jb
std
shll
int3
jb
dec
orb
pushf
jl
mov
enter
xlat
jmp
out
push
idiv
cld
std
cld
cld
std
cld
clc
clc
cli
jmp
loop
inc
mov
mov
lcall
lret
mov
scas
fldt
mov
test
movsl
cmpsb
cmpsl
lcall
cmpsl
pushl
test
mov
push
inc
jb
inc
fs
enter
int
add
aad
add
fsubl
jmp
data16
out
or
fildl
test
into
ret
fcmovu
ljmp
std
std
sti
std
std
push
div
in
out
in
sti
loope
loopne
leave
mov
jbe
stos
mov
add
mov
mov
fldt
stos
test
ljmp
movsl
ljmp
test
inc
jbe
dec
pop
or
rcll
call
push
add
rcrb
call
pop
add
fsubl
jmp
imul
in
outsl
add
repz
push
jg
jmp
mov
jmp
test
ffree
test
jecxz
in
jecxz
push
jmp
push
in
out
fcmovnu
rcl
shl
leave
enter
mov
lods
and
mov
scas
pop
mov
scas
fldt
mov
pushl
mov
ljmp
stos
lods
inc
lods
pushf
dec
jg
call
pop
pop
call
pop
add
rcrl
call
popa
add
fldenv
jmp
imul
push
js
cld
jnp
std
addb
std
orl
push
lahf
dec
jmp
lods
insl
jmp
mov
xchg
ffreep
scas
dec
mov
mov
stos
test
push
mov
mov
rol
add
add
add
scas
scas
fldt
mov
mov
mov
mov
scas
mov
inc
mov
call
nop
pop
call
fs
fstps
fsubs
fisubl
jmp
push
jmp
ja
cld
jns
sti
jge
incb
or
cld
mov
cld
nop
sbb
std
xchg
and
sti
fwait
sub
std
sahf
xor
out
mov
inc
mov
test
ds
stos
stos
add
add
add
cmpsl
movsb
fldt
mov
mov
mov
mov
inc
mov
call
xchg
push
bound
fsubs
fsubl
jmp
data16
out
add
lock
clc
jl
cld
addb
jg
cld
mov
lcall
sub
cld
fwait
xor
sahf
xor
sti
popf
xor
cmc
mov
stos
clc
stos
stos
stos
mov
xchg
xchg
inc
push
push
push
add
add
add
sbbl
popf
mov
rol
rol
mov
mov
inc
mov
jl
shlb
call
pusha
add
frstor
jmp
imul
push
jp
sti
jg
std
addb
cld
addl
cld
xchg
es
std
stos
dec
std
lods
dec
sti
test
test
dec
ljmp
cmp
mov
scas
rcrb
push
add
pop
pop
imul
xchg
xchg
mov
ret
rol
mov
mov
inc
mov
xchg
call
jne
fsubl
jmp
push
ljmp
std
jle
std
addb
cld
jg
sti
lea
std
test
std
mov
data16
mov
imul
shrl
shrl
into
mov
mov
mov
lahf
sahf
pop
fwait
lcall
dec
push
dec
pop
pop
pop
pop
fcoms
mov
inc
ret
ret
mov
mov
mov
flds
ljmp
stc
jge
cld
addl
std
addl
sti
cltd
sub
std
mov
test
dec
cmp
rorb
roll
fmul
mov
mov
mov
mov
mov
add
add
add
bound
jge
mov
mov
in
int
shl
int
into
cld
ret
vpaddd
mov
mov
fisttpl
or
out
outsl
add
clc
jp
sti
addl
std
test
std
xchg
std
mov
mov
cld
aad
std
pushf
ficompl
std
loop
std
loopne
ficomps
mov
mov
xchg
sbb
std
add
add
add
jb
popf
pushf
popf
inc
lret
fs
in
jecxz
fstp
aam
fcmovu
lret
int3
int
int
lret
not
mov
dec
jmp
jne
cli
jle
incb
add
cld
test
cld
mov
cld
scas
dec
fsubrl
jecxz
in
out
cld
call
mov
jmp
shll
ljmp
lea
std
incl
stos
stos
stos
add
loopne
or
lock
repnz
in
icebp
inc
in
jmp
jmp
loopne
xlat
xlat
xlat
ret
mov
jmp
js
std
jle
incb
add
std
test
cld
xchg
and
std
shll
out
cld
call
sar
jmp
sar
call
sar
in
ljmp
icebp
cmpsl
cmpsb
cmpsl
pushf
mov
add
add
add
std
incb
std
incl
cld
cld
decb
cmc
hlt
cmc
sbb
out
icebp
xor
jnp
mov
std
jmp
adc
divl
cld
jl
sti
jnp
std
jle
std
addl
popf
xor
std
lret
std
in
cld
in
cli
loope
push
fsubrl
ljmp
in
fsubrl
les
cmpsb
xchg
mov
jg
aad
aam
aad
int
int
mov
sti
out
adc
hlt
insb
add
divl
push
jb
push
jl
clc
mov
std
in
les
cli
ljmp
hlt
movsl
in
aam
scas
in
leave
mov
ror
mov
ror
mov
pushf
stos
stos
stos
pop
xchg
xchg
xchg
sbb
addb
add
add
pop
leave
sarl
int3
lods
xchg
neg
addb
jg
fildl
cmp
fisttpl
push
jmp
lods
and
mov
stos
rol
mov
test
shlb
rol
jns
ret
mov
dec
mov
mov
mov
add
add
add
rol
lret
mov
mov
into
mov
lods
repz
scas
mov
mov
mov
movsl
mov
test
mov
scas
ja
mov
push
mov
mov
sub
sarl
enter
int
int3
add
cmpb
std
add
mov
mov
mov
mov
mov
stos
pushf
scas
lods
cmpsl
jns
mov
push
mov
test
scas
test
xor
movsl
cmpsb
adc
shrl
xchg
xchg
xchg
pop
stos
lods
stos
add
std
add
incl
stos
stos
stos
add
mov
adc
mov
cmpsl
adc
stos
stos
setns
mov
cltd
lcall
std
incl
push
add
add
add
jmp
add
add
add
inc
add
add
incl
add
cld
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
loopne
add
incl
pop
jmp
add
add
jmp
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
push
cmpsl
test
mov
mov
mov
sub
mov
add
mov
popf
fwait
mov
mov
shr
in
in
fdivrs
mov
add
add
addb
movsl
mov
cmp
movsl
test
hlt
mov
std
out
icebp
lock
out
in
out
cli
leave
lret
mov
jb
or
dec
or
push
push
push
push
cmpb
xchg
xchg
fwait
cmp
mov
mov
mov
mov
mov
mov
int
neg
fcom
neg
iret
loopne
mov
cmpsl
mov
mov
jbe
insb
imul
je
popa
jne
jbe
mov
mov
sar
mov
jmp
mov
ret
les
mov
scas
sti
sahf
cwtl
mov
xchg
lods
mov
cmc
mov
xchg
out
mov
mov
mov
negb
sar
rclb
dec
int3
lret
leave
sti
lods
cmpsb
lods
std
lahf
xchg
lahf
hlt
cwtl
xchg
xchg
or
lods
pushf
mov
xchg
cwtl
call
lea
lret
jno
pushf
lea
xchg
mov
stos
mov
into
out
in
in
out
out
out
dec
lret
cmpsb
movsl
cmpsb
rcrl
mov
mov
jmp
test
mov
fs
shrb
fidivrl
call
stos
test
loopne
into
push
repnz
icebp
lock
fcmovbe
mov
mov
cmpsl
cwtl
cmpsb
adc
mov
cld
mov
mov
mov
mov
call
pop
add
in
outsl
add
idivl
push
mov
out
test
mov
aad
mov
mov
sarb
lcall
cld
mov
mov
dec
xchg
fisubl
jmp
outsb
add
stc
jnp
std
xchg
std
cltd
xor
cld
mov
dec
call
mov
mov
add
add
add
je
test
mov
mov
rcrl
or
bnd
cld
addl
std
cltd
cs
mov
jbe
dec
jle
mov
imul
mov
popf
rcl
aam
enter
aam
cmp
jne
sti
jle
std
xchg
mov
fisubl
std
jecxz
jmp
shrl
sbbb
add
stos
stos
stos
push
out
out
in
jmp
push
out
jns
stc
jge
cld
mov
clc
sarb
fdivl
in
loope
mov
jle
mov
add
std
incl
aam
lds
into
mov
mov
lea
faddl
push
aam
mov
test
mov
leave
mov
int3
lret
mov
mov
scas
es
stos
stos
add
add
add
mov
cmpsl
jns
stos
sahf
pop
mov
mov
es
mov
or
aam
push
stos
stos
stos
add
std
incb
stos
stos
stos
add
stos
lods
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
and
add
add
mov
add
add
std
add
mov
jae
int3
int
leave
leave
leave
push
mov
mov
sahf
popf
sahf
or
test
stos
scas
mov
mov
cli
jecxz
in
mov
pusha
jl
jl
imul
daa
cmpsb
test
push
stos
mov
stc
mov
lret
test
sti
sahf
mov
xchg
lods
jmp
lea
cmpsb
lcall
mov
ror
cld
mov
mov
pushf
xchg
lcall
lahf
lahf
jmp
jae
out
mov
lcall
repnz
in
std
rcl
rcl
cmpsl
movsl
movsb
inc
scas
lods
stos
mov
ret
xchg
ja
xlat
arpl
ljmp
push
movsl
push
jmp
mov
mov
fwait
fwait
cltd
add
mov
cmpsl
xchg
jecxz
adc
clc
jle
std
mov
outsl
push
mov
mov
add
add
aam
js
mov
lret
sbb
sti
xchg
std
les
neg
scas
sti
jmp
mov
mov
stos
stos
add
add
add
std
std
add
xlat
xchg
pop
ficoms
mov
ror
mov
mov
add
add
add
add
add
add
mov
daa
mov
cmpsb
pop
mov
mov
addb
add
add
add
add
add
add
scas
add
mov
scas
add
mov
scas
add
mov
scas
addb
scas
rol
scas
pop
mov
fsubp
js
cmp
call
rolb
adc
cmp
or
icebp
sub
pop
xchg
mov
fsts
sub
sub
mov
imul
enter
es
movsl
push
sbb
lods
dec
js
ret
test
lret
sti
mov
imul
inc
outsl
xchg
mov
ret
hlt
mov
inc
jmp
or
arpl
loop
lcall
xchg
in
mov
lahf
loope
pop
mov
add
mov
nop
push
inc
faddl
cmpsb
arpl
xlat
add
xor
push
cwtl
das
mov
ss
mov
fcompl
aam
das
repnz
push
repnz
movsb
adc
leave
imulb
lds
jmp
int3
sbb
dec
jecxz
cmp
push
int
jno
shr
pop
and
es
lods
inc
push
mov
bound
fucomp
orb
mov
mov
push
cltd
jge
mov
jmp
and
inc
lock
arpl
mov
in
adc
jge
sbb
mov
fstl
push
push
push
jmp
sub
jne
jg
sub
shrb
inc
std
sub
int
dec
sub
ret
add
les
rclb
ds
ja
out
test
lds
jne
cld
cltd
pop
mov
push
in
adcl
aam
jb
mov
outsb
les
mov
rcll
fiadds
xchg
cs
test
dec
daa
pop
or
push
sub
jl
pushf
icebp
mov
jl
lcall
and
pop
and
push
sub
pop
jne
xor
push
clc
fwait
ret
inc
mov
stc
inc
setle
cltd
bound
adc
add
daa
arpl
sub
inc
enter
cmp
int3
arpl
pop
push
mov
xorl
sub
and
fsubrs
inc
sbb
test
xor
shlb
in
xchg
repz
jmp
out
jo
ja
rclb
lock
ret
mov
ja
stos
movsb
cmp
ret
hlt
sti
ret
push
sbb
cmp
mov
cltd
xor
hlt
fidivs
dec
inc
inc
cld
xchg
jns
insl
xchg
lcall
out
cmp
sbb
ds
in
outsl
pop
xor
mov
dec
out
jecxz
sub
ss
push
mov
gs
fsubr
orl
enter
or
jg
sub
rcl
inc
fldl
daa
fs
pop
inc
inc
xlat
jbe
sbbb
xchg
pop
cmc
enter
jmp
mov
xor
fnsave
mov
xchg
clc
loop
insl
adc
sbb
insb
cmp
popf
mov
test
out
fidivl
or
jne
inc
sub
in
fs
sub
mov
dec
jmp
or
addr16
pop
out
test
mov
mov
cld
add
ret
add
xchg
mov
fadd
aas
repnz
test
adc
cmc
inc
dec
mov
adc
mov
fbstp
or
std
xchg
ja
xlat
outsb
xchg
cwtl
sbb
in
cmp
sbb
adc
cmp
out
insl
pop
xor
mov
push
out
loope
sub
outsb
add
addr16
mov
orl
inc
fucomi
test
das
or
jge
sub
mov
add
into
imul
pop
mov
fidivs
imul
xchg
add
mov
jns
movsb
stos
lea
mov
add
loope
mov
adcb
imul
push
ret
sahf
movsb
pop
xor
mov
inc
mov
hlt
mov
imul
xchg
test
mov
mov
shlb
lea
xorl
mov
cwtl
pushf
testl
js
fidivs
test
hlt
mov
push
in
sub
rep
inc
and
pop
rep
popa
clc
cs
xchg
out
jg
jle
xor
imul
stc
out
iret
data16
adcb
test
mov
mov
cmc
loop
cmc
mov
adc
xchg
mov
enter
mov
adc
sbbl
mov
push
loop
imul
bound
dec
scas
mov
push
loop
mov
mov
add
xchg
mov
xor
mov
mov
insl
mov
mov
jno
aam
cmp
mov
jae
push
mov
je
js
cmp
imul
mov
jle
movsb
scas
lods
inc
outsl
andb
in
gs
xchg
cmp
jns
mov
testl
jae
popf
xor
mov
fnstenv
inc
dec
loopne
xchg
xchg
sarl
into
stos
inc
mov
jae
lea
mov
pop
hlt
stos
inc
mov
sbb
test
xchg
fnstsw
dec
lods
dec
pop
idivb
fwait
xor
addr16
ficoml
xchg
push
fbld
ficoms
orl
xchg
mov
cld
xchg
push
mov
les
inc
ficoml
or
mov
shrl
addr16
xchg
insl
or
mov
xor
mov
insl
jns
mov
jbe
cmpsl
insl
ret
pop
mov
jbe
out
js
enter
ds
jge
call
xchg
popa
add
ret
test
inc
sbb
xchg
mov
xlat
outsb
lret
fcoml
out
xchg
lods
inc
or
and
ss
mov
sub
inc
fiadds
in
test
inc
pop
ret
pop
inc
int3
stc
add
mov
sti
ret
mov
addr16
jnp
sub
xchg
sub
adc
inc
mov
mov
jne
cwtl
cmpsl
xor
punpckhwd
pop
lcall
dec
int
adcb
inc
xchg
sub
mov
dec
jmp
in
movsb
daa
shrl
imul
test
cltd
lock
push
cmpsb
cmp
je
xor
xor
cmp
das
sub
pop
in
iret
sbb
adc
inc
movhps
cli
pusha
std
xchg
xchg
sbb
mov
mov
fwait
add
xchg
xor
add
test
mov
xchg
cld
or
cs
gs
mov
addb
cmpb
dec
in
in
adc
push
or
movsb
sub
pop
inc
nop
daa
js
sbbl
movsb
adcb
in
or
inc
sahf
xor
aaa
scas
xor
fsubrp
lods
inc
and
js
lcall
cmc
enter
loopne
ja
fsubrs
lods
sbb
fildll
adc
ja
xchg
jbe
inc
fcmovnu
lods
mov
addr16
fidivl
scas
adc
loopne
testb
mov
nop
daa
les
mov
pop
and
cwtl
out
lret
push
es
fdivl
repnz
insl
and
and
es
shlb
icebp
repnz
fsubrs
hlt
push
jmp
mov
outsb
add
lret
stc
cmp
sub
loope
insb
add
popf
pusha
test
pop
xor
mov
mov
imul
repz
fimuls
xchg
fldcw
cmp
int3
dec
dec
jecxz
out
dec
jecxz
popf
pushf
xor
cmp
pop
push
xchg
mov
fcmovu
jae
xchg
xor
xor
mov
mov
push
jo
mov
out
ret
cs
fstps
push
xor
mov
cmpsl
mov
add
inc
push
ss
pushf
xor
enter
add
data16
pop
call
adcb
and
sbb
cld
pop
jmp
lea
dec
data16
jno
jae
pop
pop
jo
lds
jg
sub
pop
xor
cmp
push
xchg
lcall
mov
mov
cmpsl
aas
push
addr16
aam
cli
xchg
out
test
sbb
insb
push
jmp
mov
je
push
inc
and
negl
mov
movaps
push
sahf
dec
push
popf
jns
mov
jmp
mov
loop
jmp
push
sbb
fnsave
adc
mov
cwtl
push
xchg
dec
mov
pop
cmc
push
xor
cli
push
rcr
cmc
into
sbbl
sub
mov
ret
repnz
adc
je
sub
test
or
fcomps
xor
sbb
cmc
das
test
movsb
dec
cltd
xorl
into
add
rclb
mov
xor
jp
mov
lea
lcall
mov
jne
inc
jl
test
xor
xchg
es
adc
int3
int
push
xchg
mov
inc
jmp
fwait
shrl
add
cmp
cmp
popa
pop
and
xchg
dec
cmp
mov
mov
pop
dec
or
or
aaa
or
mov
jbe
xchg
xchg
mov
loop
cld
mov
cmp
sbbb
mov
or
test
xor
ret
jge
xor
xor
ss
testl
add
add
push
mov
sub
sub
cli
stc
inc
add
test
jb
or
int3
inc
call
mov
aaa
stos
lds
aaa
mov
xchg
ror
sbb
gs
adc
enter
movl
aad
cmp
jb
and
and
jae
pop
in
popa
pop
cltd
mov
mov
or
lret
subl
clc
sub
inc
push
mov
or
lret
aas
adc
and
outsl
mov
lods
cmp
sbb
fisttps
jb
scas
rol
add
aas
jecxz
lcall
inc
ret
jns
orl
jl
and
jg
clc
pop
pop
loop
iret
fsubrs
sar
addr16
push
cmpsb
out
sbb
inc
or
scas
int
divb
std
push
xchg
das
mov
sbb
push
scas
lods
adc
dec
dec
jl
fcomi
in
xchg
xchg
sbb
scas
sbb
insl
inc
xor
adc
cmp
or
xor
xor
repz
inc
ljmp
xor
inc
push
add
ds
xlat
dec
xor
andb
jno
xor
outsl
jbe
popa
in
dec
mov
pushf
aam
and
movsl
mov
outsb
test
mov
mov
mov
popf
fstl
stos
mov
inc
sbb
out
mov
inc
in
xor
add
lcall
daa
jl
inc
ss
xchg
xor
sti
test
addr16
bound
std
inc
push
pop
sti
insb
std
mov
loop
dec
jnp
shrl
adc
arpl
popf
sarb
adc
add
xchg
bound
test
out
test
sbb
or
das
pop
mov
cmp
fsubrl
mov
test
lret
shrl
pop
adc
test
stos
inc
popf
ds
imul
roll
stos
inc
add
push
out
and
adcb
fs
arpl
cmp
dec
out
mov
outsl
or
cmp
movsb
scas
pop
jno
dec
repnz
insl
scas
push
lahf
inc
mov
cmp
sahf
xor
mov
push
xchg
jno
inc
add
gs
in
adcl
or
mov
fstps
mov
jnp
aad
fs
adc
cltd
xor
fidivl
aaa
repz
jl
sbb
add
xchg
sbb
test
mov
das
fwait
rcrl
mov
mov
cmp
fs
jl
rorl
lcall
int
dec
outsl
hlt
xchg
sub
mov
jge
dec
mov
mov
add
or
cmpsb
mov
testl
push
xorb
xlat
cmp
ret
call
sub
cwtl
das
fwait
inc
outsl
push
xor
and
stos
in
sub
add
cs
subl
leave
movsl
lock
popf
sbb
stc
fnstenv
and
dec
repnz
push
sahf
xor
and
push
iret
dec
jle
jp
lret
xchg
pushf
xor
fsubrl
mov
pop
lret
bound
mov
xor
gs
cmp
or
and
mov
fcmovne
sub
stc
adc
into
gs
adcb
fwait
in
addl
xor
dec
lea
in
add
loopne
insl
stc
nop
jns
addr16
cmp
push
test
out
int3
frstor
mov
ljmp
jno
int
jmpw
std
xchg
mov
lret
aaa
adc
dec
push
sub
push
orl
lret
ja
std
and
data16
aam
test
fsin
test
sub
xchg
sub
mov
rclb
jecxz
inc
push
fbstp
push
cwtl
out
std
xchg
mov
lret
adc
cmp
dec
in
lea
hlt
test
add
mov
xchg
sub
mov
pop
fistpl
adc
jp
mov
lret
add
loop
and
fistl
sahf
xor
loop
mov
adc
lret
push
cltd
xor
test
hlt
mov
rcll
test
push
push
aas
outsb
jl
test
xchg
data16
ljmp
in
push
cltd
xor
xchg
insb
add
repz
ds
mov
sub
lds
inc
mov
data16
insl
mov
shl
mov
xchg
sbb
daa
cmp
test
sub
sahf
inc
pop
out
repnz
in
sbb
push
sub
jbe
movsl
cmp
lahf
mov
mov
ret
pop
hlt
fisubrs
insl
fadd
pop
pop
mov
mov
and
hlt
ds
cmpsl
and
inc
hlt
ds
outsl
jp
movl
adc
add
mov
lea
lods
inc
insl
cmpsb
shrb
test
shlb
cmp
sbb
lahf
inc
lock
movsb
push
mov
pop
je
stc
pop
jb
sbb
xor
es
sahf
xor
jne
mov
je
test
jno
inc
sti
xchg
daa
fdivrp
popl
push
sbb
stos
and
into
add
xor
repnz
push
ljmp
xor
xchg
sbb
out
mov
insl
add
rcr
jne
cmp
xchg
loope
test
mov
enter
xlat
cmp
push
in
adc
add
in
and
scas
addr16
mov
es
mov
mov
adc
fnstenv
jbe
xor
les
lods
and
insl
or
jmp
and
mov
jb
xor
push
mov
fisttpl
jg
push
lock
push
sbb
data16
jl
pop
mov
in
test
or
in
sub
xchg
or
push
out
sbb
nop
xorl
pop
scas
ret
hlt
cmpsb
cmp
add
sub
shrl
xchg
loopne
out
xchg
nop
daa
xor
or
inc
dec
dec
sub
lock
int3
arpl
mov
adc
add
pop
shll
jb
ret
popf
pop
out
shrl
or
outsb
sub
xor
mov
lcall
shl
shrl
add
nop
jp
xchg
mov
movsb
adc
aaa
cmp
push
mov
loopne
out
gs
in
andl
or
inc
mov
ret
scas
ss
mov
ja
inc
push
jmp
bnd
push
jae
pop
sahf
dec
pushf
popf
xor
addr16
inc
add
lret
lock
clc
and
call
push
inc
mov
popf
subb
lahf
cmpsb
adc
sub
inc
xor
add
fnstenv
and
sti
vpmacssdqh
scas
mov
lods
into
leave
xchg
sub
out
lret
mov
jge
push
ljmp
jno
pop
addr16
add
es
ret
push
or
mov
dec
pop
dec
loope
addr16
in
stos
pop
or
or
or
add
adc
shlb
and
pop
xor
xchg
mov
leave
sbb
test
lds
daa
lcall
fs
rsqrtps
insl
es
sub
nop
sbb
dec
les
shrl
inc
xor
jae
xchg
sub
in
lea
push
cli
push
xchg
sub
fnstcw
dec
cmpsb
incl
sahf
iret
iret
shrb
jmp
lock
inc
fiaddl
push
movsl
or
clc
les
sub
push
in
push
out
jle
loope
or
mov
roll
jb
movsb
cmp
ljmp
cmp
lahf
mov
shlb
mov
jne
inc
fildl
mov
cmp
and
or
dec
loopne
cltd
mov
mov
fadds
fs
xor
adcb
pushf
jge
mov
and
dec
std
xchg
ja
xor
mov
cld
push
ljmp
test
movsl
pop
out
leave
or
daa
and
inc
jnp
xchg
sub
mov
cld
mov
cmpl
shrl
push
or
fsin
cmp
fdivp
or
in
insb
cmp
iret
dec
mov
in
sbbl
or
jmp
xchg
sub
shlb
cmp
test
stos
or
jle
in
test
cmp
repnz
or
mov
fldt
rcr
inc
ficoms
cld
mov
pop
cmp
cld
pusha
jnp
push
inc
mov
outsb
push
jmp
mov
dec
mov
stos
cmp
je
pop
inc
fdivrs
sar
or
test
pop
lock
mov
ja
lea
mov
adc
mov
xor
dec
add
sub
repz
out
xchg
adc
mov
inc
xlat
jae
sub
hlt
pushf
pop
cmc
xor
dec
loope
push
push
ljmp
jbe
sbb
mov
xchg
sub
mov
ret
scas
shrb
and
ja
jl
xchg
rcrl
mov
add
sub
push
popa
inc
fcoms
mov
fbld
js
clc
inc
dec
loopne
push
addr16
push
xchg
jg
in
outsl
out
add
or
pop
mov
cmp
cwtl
das
pop
jle
inc
xor
push
xchg
push
fistpl
mov
imul
shrb
push
cli
xchg
mov
adc
js
cmp
push
sahf
lcall
cmc
fisubrl
int3
js
aas
inc
add
jl
adc
lret
call
sbb
jbe
inc
xlat
push
jo
mov
mov
fnstsw
scas
jo
pusha
or
sub
dec
in
mov
xchg
or
scas
ss
sub
les
adc
or
adc
cltd
mov
mov
xchg
sbb
fcmovnu
push
sub
pop
fs
push
jp
shr
jbe
mov
xchg
fistpl
sbbl
es
sub
inc
dec
jg
push
insb
fwait
sbb
pushf
test
sarl
jecxz
je
int
sub
xchg
sbb
popf
fnstcw
inc
out
test
lds
xlat
addb
pop
enter
adc
rolb
pop
and
mov
and
sarb
test
cltd
fnstcw
push
scas
or
arpl
call
xchg
inc
and
cmpsl
aam
add
lds
cld
je
je
mov
mov
test
lea
popf
push
sti
fists
xor
sbb
decb
sub
mov
out
jp
jne
add
fwait
and
shl
rdtsc
notl
mov
lcall
mov
or
sbb
out
js
xor
mov
adc
jno
mov
es
icebp
mov
iret
push
lret
in
and
je
xor
mov
push
in
aaa
adc
lock
xlat
add
cwtl
out
inc
adcb
data16
mov
in
and
hlt
fucomi
rclb
xchg
int
rcrb
loopne
xchg
jno
out
push
push
int3
decl
or
test
lods
movsl
xchg
and
sub
inc
popa
mov
aad
insl
mov
test
xor
mov
cwtl
jmp
insb
adc
jno
insb
mov
mov
sahf
out
mov
bound
in
fists
xchg
and
movsl
ljmp
mov
insl
shlb
inc
lods
push
sub
fdivl
enter
push
jae
mov
icebp
es
mov
fdivs
cmp
les
movsl
mov
jns
or
sbb
sahf
jp
cmp
mov
fldpi
pop
cmp
insl
insb
mov
jo
xchg
and
test
dec
call
in
mov
xor
cltd
xor
push
jo
add
xchg
jmp
mov
mov
ret
and
inc
and
add
test
ret
test
fsubs
jge
dec
or
popf
repnz
popa
xor
test
xchg
xchg
insb
icebp
vmovaps
das
loope
pop
mov
ret
add
pop
je
int3
lret
repnz
pop
jle
ret
inc
xor
jl
lcall
push
dec
inc
fxch
orb
mov
mov
sub
push
mov
rcll
sub
daa
mov
and
jg
pop
sbb
add
jne
ret
hlt
push
out
adc
fbld
push
cltd
mov
andb
inc
cmp
cmp
jno
fwait
iret
dec
jns
dec
frstor
repnz
nop
clc
cmp
scas
xchg
cmpsl
ljmp
popf
les
in
or
in
add
sub
jns
push
mov
movsb
dec
xchg
leave
fucomp
cmp
pop
mov
icebp
cmp
cmp
dec
ljmp
in
mov
mov
sbb
mov
mov
sbb
xchg
test
fmuls
fs
scas
out
mov
out
cmc
std
mov
out
rorl
xor
jecxz
test
cmp
add
push
loop
and
test
mov
push
mov
jle
sub
js
cmp
adc
lds
loopne
cmp
mov
jne
jg
pop
pop
lds
dec
add
dec
lahf
scas
in
daa
or
sub
mov
push
jge
adc
xor
dec
or
cmovbe
or
inc
cltd
movsl
xchg
iret
sbb
push
push
dec
cmc
jb
cmpsl
lret
adc
lret
gs
pop
cmpsb
mov
lods
repnz
adc
test
mov
repz
jecxz
dec
sbb
out
mov
lret
jno
stos
jae
or
xchg
stc
inc
push
xor
mov
fcompl
inc
mov
mov
into
sahf
pop
mov
push
call
mov
xchg
pop
push
add
adc
andl
lahf
add
push
int
push
pop
jl
sahf
mov
xchg
xor
fldenv
mov
outsl
insl
mov
dec
inc
xchg
push
jmp
data16
lret
add
pop
pop
int3
cwtl
or
icebp
and
notb
lret
int3
push
inc
sbb
scas
call
mov
sbb
out
inc
out
xchg
push
pop
popf
add
pop
leave
ficoml
sarl
inc
cltd
lock
ret
jmp
sti
stos
inc
push
cwtl
jae
sbb
adcl
xor
adc
popf
call
addr16
dec
test
fcmovne
js
adc
mov
std
shlb
push
add
xor
enter
mov
in
inc
push
in
xchg
mov
std
cmpb
add
inc
xor
mov
mov
mov
push
mov
aam
orw
jg
std
dec
pop
out
pop
xchg
push
xchg
cmp
aam
imul
and
pop
inc
push
pop
mov
out
mov
adc
movsl
mov
aam
mov
test
neg
addr16
outsb
in
roll
or
sbb
cmp
out
push
pop
mov
lahf
jg
outsb
xor
mov
add
push
and
loop
mov
mov
in
out
push
scas
jbe
xchg
test
mov
mov
gs
adc
jl
repz
and
inc
mov
and
mov
js
cwtl
sbb
sub
cmp
fwait
or
fidivrs
cmovg
jp
lds
sbb
adcb
xor
xor
cld
sbb
add
jecxz
lods
ret
pop
push
repz
bound
rorl
push
sahf
mov
lahf
dec
fisubs
push
and
sub
or
dec
loop
xchg
pop
mov
bound
xlat
xchg
scas
xchg
sbb
rcrb
iret
int3
nop
repnz
mov
mov
add
cmp
and
add
movsl
push
inc
mov
adc
hlt
pop
dec
jbe
push
xor
imul
and
gs
pop
in
popf
loop
and
lahf
cmp
aas
lea
jg,pn
cmpsl
jnp
neg
sar
rorb
sbb
add
fwait
movsl
jne
lahf
dec
call
into
push
imul
push
xchg
and
cmp
push
ja
ja
inc
rorb
xchg
mov
cli
push
sbb
int3
inc
stos
rorl
imul
sub
je
push
xlat
xchg
xor
sub
or
dec
push
adc
pop
rcrb
xchg
xor
xchg
jb
lret
lds
cmp
mov
xchg
sarl
aas
xchg
pop
and
jae
pop
push
lock
iret
sub
test
add
jns
ja
jle
push
mov
pop
add
pushf
or
jbe
dec
aad
xchg
dec
inc
rcrl
test
xchg
mov
sbbl
pop
fbstp
pop
and
jns
push
test
shll
insl
cmpsl
inc
push
sbb
lahf
roll
dec
rcrl
mov
les
cltd
popf
sbb
idivb
xchg
mov
lock
pop
xlat
push
mov
fimuls
pushf
sbb
and
filds
add
loope
add
and
cmp
aad
cmp
call
addr16
dec
dec
insb
cltd
cmp
decb
daa
push
pop
iret
inc
ljmp
push
lds
stc
es
stos
paddusb
push
daa
cmp
jnp
test
rorl
call
cmp
pushl
fdivs
push
push
test
imul
insb
in
imul
ud2
mov
rorb
add
add
ficoml
jecxz
ss
int
fsubrl
repnz
sub
pop
or
lock
push
inc
mov
pop
mov
sahf
addb
jbe
mov
rclb
or
xchg
xor
mov
push
add
ss
jle
dec
test
orl
sbb
pop
aas
push
inc
push
dec
and
out
dec
stc
xor
mov
test
xor
push
int
push
gs
loope
mov
xor
or
movsl
sbb
testl
add
sbb
lock
cld
dec
jle
popf
push
cwtl
or
repz
inc
dec
add
sub
push
pusha
test
cmp
lock
gs
sbb
sbb
mov
or
movsb
adc
mov
decb
nop
pop
pop
push
int
lods
sub
stos
ret
repz
sub
popf
pop
xchg
jno
cli
mov
and
inc
mov
xchg
pop
jae
sbb
push
xor
aas
cmp
mov
out
sub
pop
fcom
sbb
shrl
pop
dec
inc
dec
jb
fiadds
in
cwtl
xor
popa
and
repnz
dec
mov
js
int3
xchg
dec
mov
dec
pop
inc
push
addb
cs
je
pop
mov
repz
cmc
xor
xchg
inc
inc
add
repz
call
xor
lods
stos
cmc
cwtl
lret
push
cmpb
notl
icebp
push
pop
jge
jp
fstl
xchg
loop
lret
stos
loope
les
pop
sbb
das
test
jbe
inc
sub
jmp
and
mov
lods
inc
adc
std
lahf
in
in
loopne
adc
dec
pop
jne
mov
mov
stos
popa
cmp
aam
sub
out
mov
push
xor
fldcw
dec
jbe
sarl
sub
mov
pop
iret
jbe
mov
or
mov
mov
pusha
mov
leave
and
cli
sub
adc
jae
adc
scas
mov
test
sarl
push
scas
pop
push
hlt
sub
xorps
xor
sub
in
scas
xlat
inc
gs
jns
mov
fwait
scas
nop
stos
and
stos
mov
sbb
jmp
cld
fcomps
dec
bound
xchg
aam
xlat
dec
js
cmpsb
lret
dec
cmp
rcrb
fmuls
fisubrs
and
xchg
mov
lds
inc
ja
and
xchg
mov
fnstenv
shlb
fidivrl
icebp
ljmp
rorl
jle
jns
cmp
dec
cmc
mov
sub
inc
mov
push
data16
inc
xchg
movb
inc
xchg
ss
test
repnz
pop
xchg
int
fiaddl
cmpsl
popa
jo
mov
inc
in
cmpsb
andb
xor
notl
jmp
adc
sub
push
les
cmp
lret
xchg
jb
ljmp
adc
ror
xor
jge
xlat
or
push
inc
das
mov
mov
push
xchg
xor
inc
js
lcall
std
and
xor
lret
jmp
add
shrd
scas
nop
das
push
sbb
inc
pop
lret
jbe
movsb
inc
shlb
xor
loope
lret
jecxz
push
fisttps
mov
push
pop
rorl
mov
in
mov
pop
rorb
fs
and
loopne
mov
sbb
fs
sub
fists
sub
push
fs
daa
push
adc
and
mov
cmc
pcmpgtb
sub
popf
push
or
pop
iret
fwait
xor
fwait
mov
sbb
aaa
inc
mov
lods
es
ficoms
xor
outsb
lahf
out
xchg
stos
lods
leave
mov
scas
mov
leave
adc
inc
cli
add
scas
fwait
sub
andl
inc
int3
leave
xchg
es
das
insb
dec
leave
xchg
hlt
sbb
push
rolb
in
cltd
xchg
mov
or
fsts
ds
push
jmp
das
fstps
mov
das
xor
mov
test
pop
xchg
xchg
cmpsb
daa
pop
or
pop
add
cmpsl
jecxz
xchg
stos
add
stc
xchg
add
inc
adc
push
dec
jns
popf
lahf
data16
mov
mov
ret
jp
in
cli
mov
or
xchg
jnp
shlb
sub
ljmp
leave
frstor
jge
fistpl
sbb
arpl
ds
imul
iret
in
sub
lret
and
stos
test
lcall
test
test
adc
mov
jmp
out
jmp
mov
lods
push
mov
test
or
sub
lret
test
mov
pop
cwtl
es
std
or
pop
cmp
jb
dec
push
fs
mov
add
mov
loope
mov
pop
inc
out
cmp
ds
sbb
mov
mov
call
js
mov
fwait
pop
in
jge
arpl
test
jmp
addl
cmp
in
mov
mov
out
bound
push
xor
in
sub
cmp
movsl
sub
cmp
dec
sbb
sub
mov
ds
mov
call
stc
sarb
ljmp
arpl
inc
das
push
fwait
mov
dec
arpl
sub
lea
sbb
jne
in
mov
cmpsl
int
insl
adc
jp
les
loopne
aas
xchg
sti
cmp
sbb
jo
xchg
inc
pop
jle
sbb
pop
scas
cld
jno
add
sbb
in
outsl
sahf
into
in
shrl
rorb
sbb
inc
lret
fst
pop
icebp
iret
sub
lret
dec
fwait
push
cmpsl
pop
inc
and
mov
inc
jmp
popf
and
lods
fldenv
cmp
aad
pop
push
lods
lret
test
lods
cmp
xchg
inc
shlb
pop
or
js
xchg
insb
pop
adc
push
orb
mov
fucomp
inc
jne
inc
es
orb
cs
mov
dec
or
adc
push
fwait
adc
and
mov
adc
jne
mov
push
pop
leave
imul
inc
test
pusha
sbb
mov
add
out
xor
lds
std
lods
mov
mov
int3
xchg
sub
add
push
data16
pusha
lods
mov
or
xorb
mov
cld
lods
jg
mov
pushf
xchg
mov
xchg
or
ret
stc
or
insb
fiadds
pop
daa
mov
cmp
scas
popa
pop
pop
sub
pop
or
push
addr16
jge
push
lret
pusha
in
andl
jns
aam
cmovle
xchg
fcompl
inc
adc
push
andb
cmp
mov
fmull
add
imul
mov
mov
mov
dec
xor
sub
mov
cmp
add
fnstsw
aam
xor
dec
test
divl
dec
dec
push
scas
push
fs
clc
jb
lock
xchg
incb
dec
add
es
lock
mov
out
cmpsb
dec
aad
xlat
adc
push
ret
sub
add
cmp
xchg
sti
frndint
or
rclb
mov
btc
xor
and
test
inc
dec
adc
sbbl
stos
mov
pop
jl
stc
pop
or
fsincos
add
mov
mov
sub
iret
cmp
jns
ss
push
xchg
adc
popf
in
jmp
mov
add
outsb
movsl
cli
call
subl
mov
addr16
and
adc
jbe
fsubrs
ficompl
ds
sbb
dec
in
sub
push
pop
xchg
cli
scas
les
dec
lret
imul
mov
adc
movsl
out
scas
push
mov
sarb
std
lods
loope
xchg
test
pop
mov
leave
xchg
sarl
shl
or
outsb
in
sbb
mov
das
pushf
fcmovnu
test
cwtl
or
cmpl
add
push
xor
ds
adc
fisubrl
jno,pn
or
ds
gs
inc
movaps
push
push
sbb
cmpsb
imul
in
xchg
scas
push
cmp
sbb
scas
cmp
xor
aaa
and
icebp
push
pop
scas
repz
inc
in
sbb
outsl
and
bound
incb
addr16
mov
outsb
mov
adcl
xor
enter
cwtl
ss
sbb
add
ds
mov
stos
leave
add
pop
leave
cmp
push
repz
jb
imul
sbb
add
fcompl
pop
sub
fsts
mov
push
add
jb
inc
idivb
dec
ja
lock
mov
test
xchg
sub
out
in
pop
dec
cmp
jb
bnd
lock
fsub
loope
mov
mov
jae
inc
lret
scas
dec
xchg
mov
pop
push
sbb
in
or
ljmp
pop
jb
fwait
mov
movsl
sbb
pop
cmp
cmpsb
inc
cmpb
adc
sub
and
fcoml
clc
cltd
jb
cmp
gs
addb
outsb
int3
or
sub
int
adc
add
enter
inc
add
pusha
ss
adcb
jle
sbb
lret
adcb
insb
bound
fcompl
jmp
test
popaw
and
data16
mov
sbb
and
xchg
cmpb
xlat
mov
mov
and
sbb
leave
jge
insb
cmpsl
pop
imul
inc
mov
pop
xchg
outsl
loop
xchg
mov
test
repnz
lods
jmp
mov
adc
xchg
out
jnp
mov
insb
mov
repz
into
shl
aad
add
sbb
xchg
clc
lcall
xchg
test
insb
ljmp
scas
loope
adc
cmp
mov
cmp
sbb
test
insb
stos
sub
sub
movsl
mov
cmp
push
fnstsw
mov
shr
lcall
mov
mov
loope
push
add
lock
inc
jns
sbb
movsl
cmp
mov
jg
loopne
or
xor
jecxz
out
rorl
js
add
cmc
popf
or
aad
ljmp
inc
stos
fmull
jns
inc
push
lret
test
adc
mov
sbb
mov
ret
mov
mov
lods
outsl
cmp
adc
mov
xchg
arpl
addr16
ljmp
push
sbb
jae
data16
in
xchg
and
inc
inc
das
inc
fiaddl
test
clc
dec
sti
dec
jmp
mov
cmp
dec
xchg
pop
cmp
and
xchg
test
fwait
loop
sub
lea
inc
dec
idivb
mov
and
and
test
xchg
mov
fstps
ljmp
lahf
add
out
jb
fbstp
sbb
mov
imul
mov
push
pushf
test
adc
loop
nop
dec
data16
sti
jmp
jmp
xchg
lock
cmp
cs
push
outsl
sbb
dec
inc
add
insb
outsb
popf
dec
jg
cmp
mov
mov
jle
mov
fnstenv
jno
lods
iret
mov
js
roll
imul
or
fdivrs
mov
cmp
arpl
xchg
idivl
outsb
mov
fldl
adc
test
or
fstpl
mov
insl
cs
push
stos
scas
cmp
add
call
lret
mov
mov
test
pusha
jmp
sbb
outsb
sub
inc
add
add
scas
and
inc
dec
std
add
adc
popa
mov
in
adc
data16
outsb
push
jmp
dec
js
sbb
icebp
imul
imul
sti
lods
mov
jmp
mov
sbb
cmc
inc
jmp
pop
fcomi
lods
pop
pusha
loope
rcll
ds
jae
or
outsl
xor
or
hlt
jno
mov
cmp
mov
mov
pusha
fidivrl
cmpsl
scas
inc
mov
std
shll
cmpsl
push
sbb
sahf
xchg
sub
adc
int3
enter
cld
mov
setae
jle
repz
fs
pop
pusha
js
push
mov
ret
aam
stos
cmp
sub
cmpsb
mov
pop
std
aaa
les
cmp
fwait
icebp
xchg
xrelease
insb
inc
outsb
sub
adc
xchg
and
pop
aas
cmp
push
stc
mov
xchg
mov
push
mov
cld
or
lock
and
stos
addr16
lods
mov
popa
sub
xchg
cltd
pop
mov
daa
bound
btsl
xlat
dec
std
test
mov
xlat
fisttpl
push
add
test
insl
pusha
aam
cmpb
popa
mov
imul
fwait
xor
jbe
cmp
sbb
add
cltd
mov
sbb
sub
aas
or
mov
test
imul
daa
jg
pop
test
aad
filds
push
nop
lcall
push
dec
sbb
sbb
loope
in
xor
jbe
xchg
pop
fcmovnb
iret
jp
adc
arpl
cmpsl
cwtl
popf
mov
pop
dec
cmp
ja
push
or
test
movsb
mov
mov
or
push
pop
pop
and
pop
and
xchg
outsl
pop
push
xchg
xchg
xor
movl
pop
cmp
fs
add
mov
xchg
rcrb
aad
cmpsl
push
and
inc
loopne
cmp
xor
js
mov
leave
mov
sub
pop
out
or
lock
test
iret
mov
cmpsl
adc
jns
sub
xor
dec
jno
std
dec
mov
push
pop
shlb
add
mov
std
xor
sub
push
dec
out
add
ljmp
dec
sarb
jp
shlb
fdivl
nop
mov
xor
adc
in
pop
icebp
movsb
mov
test
pop
fnsave
test
test
fcomip
inc
jbe
sub
jae
shll
out
xchg
mov
push
dec
push
jae
jnp
movsb
add
pushf
sub
or
addr16
iret
xor
cltd
rcll
sbb
fwait
xchg
xchg
test
add
daa
andl
lock
inc
aad
jne
pop
stos
push
mov
stc
stc
fisubrl
int
adc
in
inc
sti
pop
and
pop
mov
cmp
mov
push
lret
into
popa
fwait
mov
sub
mov
call
cld
mov
enter
pop
imul
inc
iret
movsb
xor
sub
jge
mov
mov
mov
jno
jae
or
dec
inc
ja
mov
aas
ljmp
fiadds
cld
popa
addr16
cltd
sub
cltd
xor
movsl
pop
jns
sub
sbbb
and
fs
dec
add
in
cmp
jge
sarl
out
sub
lea
lods
mov
dec
inc
xor
data16
cli
pop
arpl
cmovns
scas
cmp
outsl
pop
hlt
hlt
lea
popf
jl
xchg
and
xor
inc
movsb
stos
ja
xor
mov
xchg
jmp
shr
adc
imull
addr16
fwait
iret
cltd
xchg
ret
rorb
enter
lahf
sub
jae
mov
jp
adc
jecxz
les
jb
lds
jg
out
popa
neg
push
popa
scas
shr
dec
insl
pop
cmc
cli
dec
rorl
je
push
mov
pop
push
sarb
popf
imul
jp
out
iret
xor
pushf
adc
push
xor
push
popf
and
jp
and
xor
in
add
mov
adcb
and
in
in
or
push
test
pop
mov
push
fcmovu
pop
fs
cwtl
popa
pop
sarl
adc
lret
dec
xchg
nop
add
mov
fistl
mov
adc
and
notl
es
loopne
cld
xor
fstl
sti
scas
mov
ficomps
cwtl
pushf
shr
aad
inc
xchg
lret
cmp
mov
notb
pop
pop
xchg
sahf
jns
xchg
mov
nop
out
je
xchg
shlb
add
in
stos
mov
jns
or
gs
scas
movb
int3
and
mov
or
adc
int3
sub
cmpsl
cmc
pop
out
loope
cwtl
test
test
push
mov
pusha
cltd
loope
pop
jmp
fcmovne
fstps
dec
or
adc
cmpl
les
lcall
push
inc
mov
sbb
repnz
pushf
add
in
pop
jae
popa
jmp
jmp
popa
pushf
movsl
ja
jbe
rolb
stos
adc
jp
movb
test
aas
aaa
ret
mov
or
mov
mov
inc
inc
test
popa
pop
mov
xchg
sbb
or
fadds
icebp
dec
stos
out
ja
pop
fsts
push
lock
xchg
insl
ljmp
inc
cmp
negb
das
imul
sbb
adc
dec
sub
movsb
inc
mov
int
xor
insb
aad
ja
or
mov
dec
push
pop
je
sub
mov
jb
fistpl
push
scas
mov
jb
pop
pusha
loope
arpl
adc
mov
stos
pop
mov
pop
jecxz
mov
in
add
xor
sbb
inc
negb
sub
mov
jnp
and
or
mov
frstor
rclb
aaa
fdivp
mov
cmp
fisttpl
push
push
or
iret
and
dec
push
loop
lcall
ror
jle
daa
rcrb
jmp
jne
test
adc
lods
or
add
dec
xor
dec
in
lods
insl
or
fldenv
cmp
loop
pusha
adc
clc
scas
aad
lea
sub
outsl
aam
jge
or
es
cmp
add
jns
xchg
call
pushf
repnz
mov
data16
sbb
xlat
lahf
inc
pop
add
xchg
or
into
mov
or
mov
leave
push
stos
sbb
xchg
movsb
sbb
pop
cmp
xchg
mov
shlb
push
gs
in
das
jl
fldenv
frstor
out
cmc
dec
push
and
adc
adc
aad
nop
jae
je
inc
inc
sub
in
jmp
gs
repnz
sub
adc
xor
fdivrl
inc
seta
daa
jge
lods
test
mov
sbb
and
adc
pop
pop
fdivl
sub
sub
pop
andb
outsb
aaa
ja
aas
gs
and
daa
sbb
sbb
fidivrl
add
out
or
dec
sub
popa
xchg
dec
lods
test
dec
cmp
bound
sbb
and
jnp
or
call
jnp
push
adc
jns
pop
icebp
movsl
movsb
int
or
lcall
and
int
mov
jl
mov
pusha
lods
sub
js
inc
or
into
popf
sarl
adc
sar
outsl
cmp
loop
stc
cmp
in
mov
popa
xor
pop
ret
inc
xor
cwtl
sbb
cmpb
out
lcall
idivl
dec
mov
mov
xlat
push
in
pushf
mov
fidivl
mov
inc
shll
icebp
cmp
fmuls
outsl
insl
clc
outsl
push
push
mov
sahf
sbb
pop
pop
pop
xchg
mov
movl
test
add
push
inc
adc
repz
push
push
ret
mull
and
pusha
xchg
out
int3
mov
jmp
in
imul
out
clc
jle
xchg
cmp
cmp
inc
ficoms
xchg
fidivl
jge
mulb
sub
adc
daa
orb
dec
pop
fsts
and
pop
fcom
push
jnp
push
lret
add
or
pop
cmp
jns
jo
jecxz
xchg
xchg
cs
mov
cwtl
loope
mov
push
add
mov
aaa
shrl
push
ds
mov
mov
adc
sub
sub
xor
dec
in
mov
insl
add
hlt
fnstenv
sub
xchg
jns
lods
inc
lods
lcall
add
ds
and
js
aas
push
out
jo
add
cmpsb
xchg
jb
ret
and
daa
sub
xor
xor
dec
lea
fisttps
stos
pop
out
fdiv
ljmp
inc
or
sbbl
dec
jmp
fcompl
shrl
ds
outsl
dec
repnz
adcb
sahf
adc
iret
jecxz
xor
aaa
mov
call
mov
fldl
xchg
push
jmp
and
dec
outsb
cmpb
rcl
std
add
daa
js
pop
ss
addr16
and
cmpsl
ds
ficoml
or
pop
push
sub
or
in
cmpsb
jg
es
add
add
and
push
insb
aas
popf
js
subb
pop
sahf
cld
adc
sbb
cwtl
das
xchg
outsl
inc
fsubl
shll
or
imul
push
lods
inc
mov
ja
scas
testb
cli
push
xor
inc
push
jle
das
mov
shll
adc
or
inc
xor
out
mov
ret
cld
jmp
das
adc
ss
sub
jecxz
xchg
xchg
shlb
mov
mov
in
cld
xchg
push
push
lods
inc
cmp
dec
fbstp
sbb
lret
mov
add
sub
and
jo
hlt
mov
js
lret
xchg
enter
lods
inc
push
lock
sub
mov
bound
pop
jne
in
mov
fisubrs
sub
mov
push
dec
mov
ja
xchg
xor
rcl
clc
pop
sub
push
out
dec
and
scas
xchg
cwtl
das
rcl
inc
xlat
or
push
out
sub
push
dec
clc
ja
adc
ret
scas
clc
jecxz
fistps
popa
clc
inc
cmp
jge
sahf
mov
mov
loope
jmp
or
jne
sub
mov
pop
mov
ret
and
ss
mov
xchg
push
jecxz
in
mov
enter
lcall
stc
nop
pop
xor
xorl
pop
mov
std
in
andl
lds
mov
mov
xchg
push
mov
pop
push
pop
icebp
mov
and
popa
scas
jg
flds
out
and
and
subb
cmp
mov
pop
rep
cld
cmpsl
ds
icebp
mov
inc
out
test
mov
push
out
cld
sub
and
inc
dec
loop
or
xor
movsb
cmp
mov
mov
jge
loope
xor
xor
push
je
adc
imul
push
mov
and
sbbl
mov
push
jmp
fidivs
or
mov
mov
pushf
xor
mov
cld
jmp
stos
inc
insb
or
xorb
cmpsb
cmp
xchg
fadds
in
and
sbbl
sbb
or
inc
repnz
lcall
outsb
imul
jl
mov
sub
push
push
inc
jmp
stc
nop
pushf
xor
imul
adc
punpcklwd
clc
push
mov
cmp
scas
add
mov
dec
mov
fwait
xor
push
shlb
mov
repz
mov
arpl
call
or
mov
mov
stos
inc
sub
mov
lret
push
ret
push
cwtl
das
mov
rcrl
fwait
xor
inc
push
jnp
adc
lds
jle
ljmp
inc
or
ss
sahf
stos
inc
leave
inc
cmp
jg
lea
ss
jno
call
inc
int3
inc
fbstp
in
push
push
mov
in
test
and
enter
sbb
enterw
ljmp
mov
loopne
add
xchg
sub
addr16
push
mov
cwtl
das
push
std
xchg
or
fbstp
sub
or
mov
ret
stos
inc
cld
subb
inc
fcomi
mov
imul
popa
mov
dec
out
xor
add
test
pop
insl
cmc
mov
mov
xor
adc
mov
or
inc
xchg
sub
cmp
scas
punpckhdq
cmp
or
test
mov
loope
mov
mov
ret
out
cld
pop
jmp
mov
shrl
popf
repnz
fsubl
mov
push
ljmp
popa
clc
pusha
add
adc
lods
inc
cmp
test
ror
pusha
push
mov
sub
jmp
push
or
aas
jae
les
push
out
repnz
stc
inc
adc
sbb
shl
sti
mov
mov
inc
cmp
cmp
ret
stc
mov
or
sbb
jge
pop
cltd
xor
add
or
mov
fcomps
inc
fimull
mov
outsb
push
out
pushf
dec
sbb
push
ljmp
daa
inc
jmp
cld
pop
bound
or
aam
icebp
cwtl
cltd
xor
adc
lea
lods
inc
daa
imul
lahf
dec
in
jg
and
mulb
cmp
inc
clc
sbb
out
dec
sub
jle
insl
jmp
fwait
dec
in
add
sbb
adc
sub
mov
mov
mov
les
fistps
xchg
jne
mov
push
lahf
pop
stos
lds
xchg
lds
cli
cmp
addr16
sub
mov
cmp
sahf
fistps
loop
sub
adc
push
cmpsb
inc
mov
shll
movsb
jb
adc
mov
sub
rclb
mov
dec
or
jmp
pop
les
xor
stos
testb
stc
or
adc
stos
ja
ret
lcall
mov
ds
adc
rolb
dec
xlat
bound
pop
out
jge
and
mov
hlt
jg,pn
push
sbb
jg
jge
pop
movsb
imul
xchg
int3
lahf
daa
cmc
mov
mov
inc
or
scas
ss
xchg
mov
dec
hlt
iret
jmp
push
idivb
xor
mov
int
stos
dec
mov
xchg
and
into
fcoms
pop
ret
jb
xor
pop
mov
or
push
mov
icebp
and
sbb
ss
hlt
and
in
outsl
punpcklwd
inc
xchg
jge
mov
enter
scas
mov
sbb
lods
dec
cmp
sub
aam
cmp
lods
int3
outsb
jmp
adc
jge
push
pop
mov
loopne
push
jecxz
sti
jle
and
lods
insl
mov
cmp
lds
leave
or
jno
pop
xlat
pop
mov
les
in
stc
mov
xor
sub
push
pop
mov
dec
mov
jecxz
mov
fisttpll
test
xchg
or
pop
mov
jge
enter
sarb
adc
lods
xchg
and
dec
xorl
outsl
shlb
mov
aam
mov
xchg
cmp
add
rorl
xor
and
das
aad
push
mov
jns
dec
lock
adc
scas
push
sub
xor
jl
test
in
mov
iret
sbb
jno
sti
and
pop
dec
jmp
mov
gs
jo
pop
test
mov
ljmp
subl
push
aam
imul
sti
add
add
dec
and
pop
jbe
rcrl
pusha
psrad
in
stos
sbb
sti
std
dec
lea
mov
mov
sbb
lods
mov
out
loope
sbbb
cmp
mov
stos
inc
mov
or
fistpl
mov
sub
inc
icebp
jg
push
in
xchg
iret
aaa
test
and
inc
scas
pop
shll
in
incl
push
lods
ss
mov
out
insl
stos
push
out
mov
sar
add
loop
sub
push
mov
addr16
aad
aad
mov
faddl
lcall
or
into
addb
mov
or
and
xor
mov
push
xchg
jo
ja
call
sbb
out
xchg
cmp
dec
lea
sarl
fistps
adc
or
arpl
sub
inc
test
in
xlat
mov
or
int3
arpl
cmp
add
xchg
iret
xor
add
lds
popf
xor
jae
and
lds
shl
fnstenv
push
dec
loopne
cld
testl
js
test
mov
lret
movsb
cmp
push
call
leave
int
push
dec
loopne
add
lea
and
nop
pop
jp
inc
mov
ret
shrl
les
add
add
aas
mov
loope
pop
mulb
mov
push
ret
rclb
testl
or
ljmp
sub
scas
insb
nop
push
call
int
adcb
out
push
in
sub
dec
xchg
jg
nop
daa
mov
mov
imul
adc
out
mov
xchg
add
testb
sub
lret
imul
pushf
shrb
cld
mov
das
outsl
repnz
leave
adc
ret
cli
sub
sub
adc
mov
ds
mov
or
cmp
pop
hlt
mov
setl
stos
inc
popa
mov
fidivs
mov
sbb
hlt
mov
cmp
jb
inc
sbb
mov
ret
mov
sbb
mov
js
lret
stc
ljmp
stc
dec
mov
jmp
dec
rcl
mov
inc
enter
xchg
imul
test
dec
inc
fdivrl
jo
cmp
adc
cmp
xor
rcr
in
or
push
push
fnstcw
and
out
call
mov
jecxz
insb
idivb
cmp
ljmp
outsb
mov
cmc
or
push
out
fwait
jp
adc
mov
inc
add
addr16
cmp
pop
cmp
movsl
imul
data16
add
test
jl
dec
loopne
push
stos
inc
imul
cmpsl
and
push
out
push
inc
shrl
jb
test
orl
dec
repnz
pop
sub
push
pop
pushf
ret
jg
mov
out
inc
sarl
ss
mov
repz
lahf
addr16
adc
add
pushf
and
xor
sbb
cmp
outsl
test
test
push
and
push
aaa
mov
mov
and
sbb
adc
scas
inc
lret
sub
ds
pop
xchg
sub
mov
outsl
push
and
mov
jb
out
cmc
mov
popa
mov
mov
ds
lods
mov
sbbl
add
jo
or
sahf
jo
mov
lret
in
pop
push
sub
jo
and
mov
xchg
jle
loope
mov
std
sub
call
scas
mov
mov
scas
mov
mov
push
lods
fidivs
jne
jmp
adc
gs
lret
nop
daa
std
inc
push
fs
sub
xchg
pushf
shrl
sbb
dec
out
out
test
outsl
fs
lahf
inc
or
lock
daa
mov
inc
ljmp
popf
aas
imull
fbstp
mov
adc
xchg
daa
adc
scas
mov
ret
xor
repnz
mov
push
out
xlat
out
or
jecxz
add
lret
jle
mov
jmp
aaa
lret
sti
inc
lods
inc
jne
push
ljmp
jb
pushf
out
sbbl
xchg
sub
cmp
mov
lods
nop
daa
out
int3
dec
loop
mov
xor
xchg
lock
loope
push
in
out
add
je
inc
xlat
out
xchg
sti
xchg
pop
mov
gs
cltd
iret
push
jmp
mov
sbb
aas
lock
das
sub
xchg
sub
or
jmp
mov
stos
sbb
mov
dec
jecxz
lods
mov
and
loop
repz
aad
les
adc
xlat
cmc
xchg
sub
stc
or
ljmp
xor
xchg
sub
lahf
push
out
mov
enter
adcl
add
mov
jecxz
scas
repz
dec
in
sti
leave
pusha
in
into
lock
push
test
movsb
cmpsb
cmp
adc
and
sti
xor
movsl
movsb
lcall
or
lret
stos
stos
inc
icebp
in
cmp
and
clc
adc
fisubs
repnz
ss
mov
leave
add
adc
daa
mov
shr
rcr
fisubrl
repz
add
add
pop
icebp
and
sub
sub
stc
decb
sub
test
cmpsl
loopne
ljmp
outsl
je
popa
mov
mov
adc
sbb
sbb
cmpsb
cmp
lods
xchg
or
rcl
insl
or
xor
rcll
pop
out
stos
inc
or
jae
jp
inc
fcmovne
fwait
inc
pop
icebp
add
jo
mov
ret
mov
stos
inc
lret
xchg
inc
or
mov
push
into
cli
mov
repz
cwtl
das
adc
xor
movsb
les
or
lcall
fldcw
ret
pop
sub
sbbl
jno
lret
xchg
jmp
lock
dec
adc
jae
pop
push
sub
hlt
test
popf
xor
leave
fbstp
ds
xchg
push
mov
cmp
pusha
out
enter
sti
xchg
pop
add
jb
lea
xchg
std
xchg
add
es
fsts
mov
in
and
jl,pt
test
push
and
mov
fs
or
divb
insb
add
adc
xor
imul
add
cli
cmp
sbbl
xchg
jecxz
out
aam
mov
inc
cmc
out
jb
jb
icebp
mov
inc
fistpl
ja
inc
xchg
sub
lahf
sub
andnps
and
mov
jb
nop
rol
pop
les
push
cs
idivl
push
cmp
dec
in
data16
xchg
pushf
pop
lock
call
pushf
shrl
mov
mov
cmp
pop
repnz
sub
xlat
adc
mov
mov
jg
jl
or
subps
xor
into
mov
ret
mov
mov
nop
aam
out
lds
pop
repnz
dec
out
push
es
push
ss
pop
gs
adc
push
cmp
lock
ret
mov
dec
loopne
aam
ret
lds
cltd
out
std
xlat
or
mov
clc
cmp
repz
or
jge
add
mov
push
imul
das
fdivl
or
dec
ret
mov
mov
icebp
decl
call
mov
adc
lock
daa
adc
mov
xor
sub
jae
test
ret
leave
push
movsl
mov
fnclex
jns
lret
add
ss
mov
fsubrs
out
lods
sbb
test
and
loop
jmp
mul
dec
add
xor
pusha
das
push
push
jae
insb
cmpsl
xchg
clc
mov
dec
in
or
mov
pop
hlt
sbb
pop
out
nop
cmp
out
test
std
xchg
rorl
xor
cmpsb
cmp
ss
lcall
or
call
pushf
in
push
jae
dec
xchg
das
or
imul
out
inc
aam
mov
es
cmpsl
fmul
sbb
in
cmpsl
sbb
jg
ja
xchg
mov
int
fs
andb
insl
add
xlat
mov
dec
int3
int3
rclb
cli
xchg
loopne
push
in
call
mov
jnp
xchg
inc
fildl
es
sub
mov
cli
and
hlt
mov
jne
jmp
dec
push
sahf
mov
int3
jae
andb
and
xchg
jnp
inc
sti
xchg
jle
xsha1
cmpsb
mov
pushf
xor
aas
xchg
sub
ret
push
add
sbb
out
pop
not
xchg
loop
imul
sub
push
pushf
or
sub
inc
frstor
shll
mov
mov
int
aad
lds
dec
lods
out
xor
dec
cld
xchg
jge
lret
pop
dec
loop
or
ljmp
pop
adc
aas
pushl
inc
fsubs
les
lret
mov
push
fiaddl
push
sub
testb
xchg
pushf
xor
es
movsl
dec
cld
xchg
lcall
xchg
push
fldcw
mov
fistpll
mov
add
xchg
jae
add
es
out
fidivrl
mov
mov
lahf
ss
inc
pop
repz
push
scas
inc
xor
dec
in
rcr
je
sbbl
pushf
jecxz
mov
lods
inc
xchg
push
test
dec
mov
jb
decl
sub
xchg
sub
mul
pusha
not
xchg
rcrl
add
jb
push
lods
inc
js
rcrl
js
or
nop
daa
dec
sub
push
sahf
ljmp
mov
nop
daa
out
shll
int
mov
jge
in
sub
push
adcb
clc
lods
inc
ljmp
imul
popf
xor
out
mov
xor
pop
movsb
mov
push
out
mov
pop
mov
pop
cmp
ja
sahf
xor
dec
cld
jg
out
jmp
jge
adc
xchg
or
ja
mov
insl
mov
add
pop
lcall
fidivl
lret
fsubrs
in
xchg
sub
lret
repnz
xchg
inc
fiadds
out
sahf
and
jo
dec
mov
sub
or
stos
pushf
xor
pop
je
mov
sub
push
fsubrs
add
dec
movsb
testb
notl
sub
xor
insb
adcb
fisttpl
push
sti
push
push
pop
push
bound
pop
scas
je
in
jecxz
enter
cld
ret
fidivs
jecxz
fsubs
ficompl
xor
test
add
fiaddl
aas
jmp
aam
or
adc
add
cli
or
cli
xchg
or
sbbl
pop
push
mov
int
jno
push
mov
mull
jb
push
sbb
xchg
dec
jbe
daa
test
sbb
sti
mov
int
dec
orps
inc
outsl
jmp
mov
ret
repz
sub
adc
mov
cmp
fstl
mov
in
test
or
mov
push
sub
xorl
add
jne
mulb
cmp
adc
dec
fiaddl
xchg
push
aam
push
pop
leave
icebp
movsl
addr16
ss
outsb
mov
es
test
push
adcb
push
pushf
ret
mov
repnz
pop
ja
or
adc
xlat
setp
and
js
xchg
bound
adc
xchg
adcl
das
jno
push
shl
xchg
sub
xor
and
jae
xor
cmp
and
xchg
inc
adc
lea
mov
gs
xchg
mov
xor
call
or
cmp
or
pop
outsl
push
lea
lea
add
dec
add
mov
xchg
call
mov
sub
sub
orl
lahf
inc
fnop
hlt
data16
and
inc
test
jns
jle
jbe
mov
xor
in
rclb
mov
jne
fsubrs
xchg
cld
sbb
subl
adc
push
lds
and
push
inc
dec
dec
loopne
add
or
rcrl
in
in
pop
or
adc
sub
popl
mov
mov
push
pop
cmp
cmp
jg
sub
sbb
fsub
cli
mov
or
outsb
cmp
xchg
in
dec
and
adc
adc
cmp
xor
xor
fisttpl
fs
lret
outsb
roll
dec
ds
push
mov
insb
cs
mov
das
nop
repz
pusha
out
adc
pop
dec
nop
mov
jne
pop
inc
subb
cmc
ret
add
loopne
or
jb
cmp
pushf
jne
xor
xor
dec
and
das
and
fiaddl
jl
fildl
jmp
and
adc
insb
dec
dec
add
dec
add
stos
push
in
xchg
fwait
jne
push
movsb
mov
xchg
pop
fbstp
cmc
push
add
fnstsw
enter
out
fcoml
adc
mov
xchg
sub
js
or
pop
iret
js
mov
push
ja
jns
loopne
inc
aad
lea
in
jo
les
popf
lds
incl
test
sti
xor
inc
mov
xchg
mov
loope
mov
pop
shrb
leave
subb
popf
xor
hlt
cmpl
test
push
imul
jecxz
into
xchg
xchg
imul
sub
dec
imul
xchg
sbb
dec
outsb
icebp
divl
ja
fucom
in
xor
dec
add
ret
jb
sub
imul
push
and
repnz
int3
jbe
pushf
fwait
sbb
jle
iret
aas
mov
xor
jno
in
imul
movsb
lds
fdivp
rcl
push
fidivl
mov
stos
xor
jns
dec
push
pop
jo
xlat
mov
mov
push
test
fs
mov
xchg
ret
sub
push
inc
adc
push
mov
mov
mov
jl
lret
xor
or
lods
xchg
out
jl
jne
mov
mov
es
or
dec
push
pushf
cmp
cld
pop
push
imul
inc
mov
lret
mov
xrelease
fldt
xchg
pusha
hlt
popf
test
mov
add
lods
shr
dec
or
cli
xchg
lds
loopne
pop
mov
mov
int
adc
mov
adcb
sbb
cwtl
aas
mov
cmp
jo
mov
pop
punpckhbw
scas
clc
roll
les
pop
enter
je
push
mov
lods
lods
ret
mov
mov
push
sti
jp
iret
xchg
xchg
insb
es
push
pop
icebp
sub
rorb
in
aas
dec
fcmove
sub
xor
and
mov
xor
inc
pop
add
mov
roll
pop
xchg
into
ds
call
lcall
cli
sarb
xorl
mov
cli
fisttpll
jns
rcll
mov
xorl
adc
lods
xchg
aaa
adc
xlat
jnp
inc
ljmp
lea
mov
mov
ror
mov
data16
hlt
stos
cli
mov
mov
xchg
ljmp
aam
sbb
jp
push
addr16
aaa
add
mov
popf
insb
addb
hlt
mov
ljmp
mov
adc
pop
lock
sbb
or
or
pusha
add
cmpsl
xchg
loopne
pop
outsb
daa
mov
ret
lea
mov
nop
orb
add
pushf
pop
jbe
pushf
daa
mov
inc
fwait
sbb
xchg
shlb
mov
and
sahf
sub
mov
mov
sahf
mov
scas
xor
aaa
inc
push
test
add
scas
mov
int
dec
fdecstp
inc
arpl
cmp
shlb
cmp
mov
add
stos
push
sub
mov
adc
dec
pop
cmp
push
mov
les
xor
ljmp
inc
imul
adc
mov
fstpt
mov
push
out
cld
pop
push
add
pop
jbe
out
divb
cmp
mov
mov
fdivrl
jecxz
push
nop
ja
gs
je
push
jge
sub
fistpll
repz
pop
xchg
hlt
movl
in
insl
pop
ja
xchg
fdivrs
adcl
pusha
dec
cmc
data16
jnp
jns
call
insb
in
mov
movsb
fdivrs
add
sub
adc
repnz
and
mov
enter
mov
rorb
lcall
es
leave
je
sahf
add
jmp
xchg
sahf
icebp
fwait
dec
mov
popa
push
stos
sbb
and
js
lods
xor
cmp
push
std
ljmp
mov
jo
ja
inc
stc
push
jb
pop
movsl
mov
dec
mov
insb
popf
ljmp
cmp
xchg
xchg
movsl
lock
scas
arpl
jns
jge
adc
test
mov
mov
nop
pop
in
cltd
cmp
data16
dec
divb
cmpl
and
adcl
ss
je
and
cmpl
repnz
inc
push
mov
stos
push
sub
dec
imul
jg
in
jg
sub
pushf
fldt
sbb
decl
mov
das
mov
ljmp
sbb
push
mov
sti
shrl
mov
in
ret
mov
lods
jnp
inc
adc
sahf
cmp
dec
cld
mov
jo
xor
arpl
mov
dec
lret
cmp
mov
rclb
mov
outsb
test
pop
js
xchg
lcall
pop
cmp
jnp
in
xchg
push
lods
add
push
push
in
inc
test
mov
mov
xchg
int
push
pop
iret
mov
lahf
leave
xor
sbb
ret
mov
mov
xor
lcall
lds
rorb
cmpsb
push
movsl
fadds
push
jb
pusha
testl
adc
push
mov
repz
lret
bound
into
gs
push
pop
out
xchg
sbb
scas
dec
mov
jnp
push
ljmp
push
xchg
mov
push
loop
xchg
sub
ljmp
dec
push
cmp
test
out
test
repz
test
dec
jg
jle
adc
cmpsl
add
jnp
jecxz
pop
repz
testb
pop
ja
mov
cli
xchg
notb
inc
inc
pushl
xor
xchg
push
in
test
arpl
xchg
jmp
add
lea
add
gs
ret
popf
mov
stos
mov
fcoml
mov
adc
stos
inc
sub
pop
in
dec
mov
in
test
out
pop
sbb
mov
test
les
xchg
push
outsl
push
sub
add
inc
popf
imul
subl
repz
pop
sahf
cmp
insb
add
dec
xchg
sbb
test
sub
xchg
inc
std
jae
out
mov
mov
mov
xchg
jmp
loop
or
into
sub
xchg
add
mov
fidivrl
or
inc
hlt
mov
sbb
movsl
xchg
and
xchg
inc
adc
sbb
and
xchg
test
popa
and
jle
adc
stos
inc
es
aad
adc
push
inc
and
js
inc
or
ss
and
outsl
inc
or
xchg
inc
and
adc
mov
mov
mov
stc
dec
or
and
xor
mov
sbbl
insb
jnp
lahf
cwtl
loop
or
testb
inc
ja
je
mov
xchg
scas
mov
lcall
data16
xchg
adc
xchg
inc
xlat
inc
fld
nop
jb
ret
push
es
aas
jnp
adc
or
outsl
loope
pusha
fs
xchg
arpl
adc
cwtl
mov
mov
jge
clc
inc
gs
xor
lock
xor
shlb
es
leave
push
je
dec
add
js
ds
jno
mov
icebp
jp
and
cmpsb
jecxz
hlt
mov
adc
std
mov
xor
mov
shlb
imul
loop
xchg
fucomp
orb
stos
inc
lds
sbb
mov
test
stos
adcb
jo
cld
bound
sub
push
jnp
rclb
cmp
ss
imul
repz
fistpll
adc
mov
mov
sbbb
inc
and
xorl
popa
clc
cmpsb
cmp
sbb
movsl
es
lcall
and
and
jle
pop
lock
ja
and
out
and
shl
pop
repz
xchg
sub
mov
mov
pop
icebp
mov
xchg
sub
sub
xlat
insl
sub
es
sub
das
xchg
xlat
insl
les
cwtl
xor
mov
aam
imul
ljmp
es
adc
jmp
lea
int3
arpl
push
dec
jecxz
repz
cmc
and
and
popa
or
jnp
jb
sahf
mov
mov
push
or
jecxz
dec
testb
ja
push
test
dec
loopne
mov
es
cmp
aaa
mov
pop
xor
mov
mov
cwtl
daa
mov
mov
pop
sub
test
addr16
in
test
leave
pusha
xchg
mov
movsb
cmp
and
int
sbb
mov
aaa
je
popa
clc
adc
push
ss
mov
insb
les
mov
cwtl
das
jno
in
pop
jnp
jo
inc
jns
xor
xchg
sub
and
mov
and
mov
lret
sub
stc
jl
loope
jg
mov
lea
jae
cmp
ja
addr16
push
mov
sub
xchg
out
or
fdivl
dec
jb
sub
mov
leave
mov
inc
and
lcall
cmp
ljmp
or
data16
mov
jl
jne
bound
scas
cmpsb
cmp
sub
movsl
cmp
push
stos
inc
xchg
ret
pop
add
mov
inc
jl
sbb
cmpsb
sbb
inc
loopne
pop
scas
mov
rorb
or
inc
fldl
jecxz
push
aam
daa
mov
mov
loope
lret
cmp
mov
mov
dec
in
aas
mov
mov
pop
mov
mov
jmp
or
ljmp
push
mov
fadds
lret
out
or
lea
and
push
dec
jecxz
imul
mov
mov
out
test
loop
rclb
dec
mov
inc
fisttpl
sub
mov
xor
repz
and
cltd
rolb
inc
add
dec
rclb
call
std
push
mov
adc
push
dec
xor
aas
popf
mov
es
mov
add
gs
in
outsb
mov
inc
int3
stos
scas
inc
frstor
or
dec
ret
mov
lods
inc
mov
inc
fcoml
mov
mov
dec
sub
mov
in
lahf
mov
shl
mov
jecxz
mov
movsl
aam
mov
mov
icebp
mov
lret
int3
arpl
xor
mov
rcrl
mov
and
jns
inc
movq
inc
xchg
clc
mov
mov
mov
adc
out
jg
loopne
testb
push
ja
mov
cli
xchg
repnz
mov
sub
xchg
sub
xchg
pop
sub
imul
cmp
leave
push
add
jg
outsb
add
jno
call
in
jb
push
mov
push
sti
xchg
mov
or
ds
testl
insl
mov
xchg
daa
repz
xchg
cltd
sarl
add
stc
nop
into
dec
out
xchg
xchg
jle
sbbb
jge
xchg
outsb
scas
jmp
loopne
stc
nop
pop
jmp
xchg
adc
xchg
inc
rorb
nop
stc
dec
jecxz
jg
add
stos
in
cli
xchg
fisubs
pushf
lea
xchg
sub
clc
pop
pushf
fidivs
add
xorb
daa
cmp
lea
loope
data16
add
or
ljmp
push
mov
inc
add
inc
xor
mov
mov
dec
jecxz
push
cmc
mov
and
cwtl
imull
dec
fistps
testb
in
cld
xchg
fisttps
inc
fdivrl
push
repnz
aam
xchg
arpl
xchg
push
repnz
and
push
jge
xchg
outsb
inc
dec
in
insl
cmc
mov
and
push
mov
testb
push
adc
xchg
add
fsubrs
cmpsl
lcall
aam
dec
outsb
add
xchg
jns
div
stos
inc
and
mov
es
enter
xchg
sub
cltd
out
lret
xchg
les
in
add
sbb
cmp
out
test
test
cmpsb
fcmovu
pop
out
or
jne,pn
popa
dec
dec
loop
adcl
inc
pop
out
xchg
and
leave
pop
pop
inc
mov
jnp
xchg
ret
leave
push
cltd
out
jb
sbb
mov
push
lea
mov
shlb
fistpll
aad
adc
ljmp
jbe
mov
les
xchg
cs
and
xchg
mov
cmpsb
scas
sbb
stc
add
shll
sbb
out
test
popf
movsl
jbe
xlat
mov
xchg
sub
adc
inc
dec
mov
jge
xchg
shlb
out
xchg
push
movsl
mov
mov
shrl
sub
pushf
xor
addr16
rolb
sbbl
mov
mov
jo
pextrw
pop
adcb
add
jb
lret
fnsave
add
sub
sbb
push
inc
fmul
sahf
mov
rorb
pop
repz
out
dec
outsl
test
test
xor
xor
les
cmpsb
aam
sbb
cwtl
dec
mov
adc
dec
add
jb
mov
in
popa
mov
dec
in
adcb
out
mov
and
mov
es
xchg
mov
scas
lds
mov
arpl
add
jmp
adc
jnp
mov
push
jnp
aad
pop
mov
xchg
jg
out
fidivrl
push
adc
dec
js
nop
daa
xchg
jno
push
mov
stos
scas
inc
fmull
mov
jl
ret
pop
inc
jg
pop
jo
scas
inc
shlb
fs
push
cmp
pushf
push
xor
dec
addw
outsl
mov
adc
inc
fildl
les
cld
add
out
nop
lods
inc
ret
in
cmp
fisttpll
pop
aas
and
inc
imul
push
lds
xchg
or
jp
test
adc
aam
pop
leave
pusha
mov
xchg
cs
xor
push
cmpsl
repnz
cmpsl
in
sbbl
xchg
sub
cmp
dec
imul
add
rorl
push
jb
loop
jg
in
test
mov
stos
js
iret
push
out
aad
adcb
push
xchg
sub
aas
cmpsl
ds
fsubrs
mov
and
add
xor
daa
movsb
cmp
fisttpl
xor
subb
popf
mov
mov
mov
shll
sahf
xchg
or
mov
addr16
xchg
mov
lods
int3
arpl
sub
cmpsb
cmp
and
xchg
inc
mov
push
out
push
fwait
das
or
or
rcr
pop
cmc
lret
sbb
xchg
scas
mov
imul
in
ret
pop
aad
push
pop
stos
inc
mov
aas
push
ret
pop
cmc
gs
push
cmpsl
xor
ficomps
lret
imul
sbb
into
adc
addr16
pop
lahf
mov
push
arpl
shrb
xchg
lea
add
test
fldenv
leave
addr16
das
cltd
stc
daa
mov
add
outsb
add
jg
jecxz
jns,pn
je
pusha
cmpsl
ds
movsb
nop
daa
arpl
adcl
push
data16
pop
lcall
pop
add
addr16
pusha
inc
mov
jb
sub
scas
ss
test
mov
int3
adc
ja
punpcklbw
jg
xchg
sub
jle
mov
or
je
sbbb
mov
push
fnstenv
mov
cld
fisttps
mov
jg
in
lea
clc
pop
lea
stc
sbb
and
dec
jecxz
lea
popa
ss
test
in
pushf
ficoml
int3
aad
pop
pop
decl
out
push
jmp
in
lret
test
std
mov
in
test
das
pop
out
lahf
push
test
mov
popf
adc
adc
shl
and
test
dec
out
lea
mov
pop
outsl
push
dec
fisttpl
lret
andl
mov
or
aaa
dec
jg
out
mov
scas
leave
outsb
and
sub
dec
in
mov
mov
dec
inc
dec
fbstp
adcl
shrb
inc
fcompl
mov
stos
lret
rorl
aaa
mov
fdivs
jbe
cld
push
imul
xchg
sub
stc
inc
xlat
jmp
in
fnstenv
or
adc
imul
sahf
xor
jbe
iret
adc
cld
push
imul
pop
lret
stc
lahf
cmpsb
cmp
and
cmp
inc
sub
leave
pusha
notb
jne
out
les
in
mov
insl
in
dec
data16
gs
fcmovbe
mov
add
cmc
mov
dec
mov
cmp
test
mov
in
and
mov
or
mov
lret
jns
mov
ss
test
dec
jb
pusha
imull
sbb
mov
mov
test
inc
pusha
xor
push
leave
pusha
mov
mov
insl
add
jecxz
fs
pop
mov
aaa
add
icebp
push
inc
inc
pushf
push
ja
popf
xor
xorl
outsl
out
jbe
das
imul
adc
test
xchg
sub
into
popf
xor
ret
mov
shlb
mov
pop
sub
cmp
mov
arpl
ret
mov
movsl
cmp
mov
pop
mov
adcb
shrl
mov
into
std
xchg
shll
inc
pop
icebp
ret
xchg
rclb
jo
rorb
ds
cmp
test
mov
push
sub
mov
adc
mov
imul
adc
test
mov
addr16
scas
data16
and
rclb
loopne
int
mov
aaa
into
mov
aam
cltd
lds
shl
int
cmc
mov
stos
iret
sbb
aad
dec
pop
idivb
fs
xchg
sub
inc
ficoml
iret
lds
lods
mov
push
ret
inc
fxtract
dec
incb
sub
jae,pn
pop
fs
inc
fstl
es
rclb
dec
loope
pop
xlat
outsb
dec
xchg
mov
fwait
rorb
add
mov
mull
cmc
push
in
in
aad
movzbl
in
inc
or
cmp
fidivl
cs
sbb
mov
mov
xor
push
inc
dec
loop
xchg
mov
mov
xor
repnz
movsb
test
pop
mov
mov
mov
mov
in
dec
loope
adc
xchg
sub
es
outsl
jl
loopne
iret
jne
xor
scas
aam
loopne
sahf
xor
sbb
shlb
sub
pushf
shlb
inc
rorl
jg
and
lcall
pop
cmc
mov
test
jae
sub
iret
inc
fistl
loopne
les
lds
stos
mov
inc
xlat
mov
xor
imulb
adc
pushf
cmp
and
lret
sub
cmpsb
sbb
cmp
pop
fimuls
lcall
int
sub
cli
xchg
xchg
and
lcall
sti
xchg
popf
sbb
fwait
sbb
sub
sahf
xor
and
or
inc
sub
pop
ja
fwait
les
outsb
add
mov
call
les
hlt
mov
ljmp
ficoml
xchg
rolb
lcall
jmp
sbb
daa
mov
out
test
mov
dec
mov
cltd
sti
xchg
jge
sbb
test
mov
mov
jo
std
outsl
popf
sbb
xchg
lahf
ret
cmp
and
jg
sti
stc
mov
cltd
push
sbb
aas
mov
mov
sti
cli
inc
cmpl
in
xchg
pop
movb
xchg
xor
inc
fsts
push
in
loope
mov
pop
jns
lea
mov
adc
push
out
and
mov
rorb
sub
bound
cmp
into
xor
fisubrs
push
and
movsb
sbb
mov
or
popf
fmuls
or
pop
add
rorb
aas
addr16
stc
popa
inc
stc
rclb
sbbl
push
inc
mov
or
int3
nop
daa
in
sbb
push
lods
sahf
xor
jo
mov
std
xchg
movsl
cmp
and
ret
mov
daa
movsl
cmp
imul
and
mov
push
mov
nop
adc
xor
mov
addr16
mov
fldenv
or
cmp
mov
into
lods
add
enter
cmpb
xchg
mov
loop
push
int
push
pop
paddq
test
lcall
jp
xchg
mov
adc
and
xor
scas
lea
data16
ja
sub
not
mov
ficompl
test
and
int
rol
outsb
adc
dec
cmp
movsb
fnstsw
punpcklwd
add
repnz
jb
dec
cli
pushf
inc
or
enter
insl
jae
mov
add
lock
cli
add
xor
cmp
pop
das
cmp
fwait
cmp
push
mov
gs
xchg
cli
flds
rorb
arpl
xor
js
pushf
adc
negb
out
pop
hlt
and
pop
sahf
cmp
in
mov
dec
hlt
inc
fs
ret
sbb
or
add
movsb
jno
movsl
mov
aam
push
in
dec
test
mov
repnz
sbb
fisubrs
out
add
jle
enter
xchg
dec
and
jmp
outsb
jae
pop
xchg
insb
xchg
icebp
xchg
iret
xchg
sarb
push
xlat
or
xor
xchg
dec
fstpl
bnd
loope
loopne
push
mov
notl
into
push
add
push
lret
aas
arpl
xor
loop
jg
out
inc
xor
aaa
jae
xlat
aaa
push
daa
lret
dec
and
sti
das
ret
inc
aaa
push
rclb
pop
out
ret
inc
shll
aaa
je
mov
inc
xorb
push
aam
ret
fbstp
pusha
and
xchg
xchg
je
sti
idivl
xchg
lahf
roll
xlat
add
clc
push
fmuls
out
call
inc
mov
rolb
pop
repz
pop
cmp
in
push
pop
pop
daa
pop
sar
aas
jmp
cmp
cmpsb
or
loopne
aas
insb
repz
pop
pop
shrb
filds
aaa
je
xchg
mov
xchg
mov
ja
pushf
mov
cmpsb
cmp
cmc
jnp
xor
xchg
sbb
mov
pop
loope
sbb
jno
inc
clc
imul
jno
rol
mov
mov
push
aaa
lahf
lahf
and
das
js
addr16
stos
rclb
in
cmpb
xchg
leave
out
xor
shll
shlb
push
xchg
jno
addb
fcmovnb
cs
lar
xchg
push
lret
fwait
cmpsl
mov
outsl
adc
pop
jmp
inc
outsb
pop
sub
imul
out
xorl
das
mov
xchg
shll
add
jg
rolb
mov
push
adc
jl
hlt
into
sbb
test
xchg
icebp
movsb
out
fwait
leave
les
out
mov
out
mov
xor
les
call
fimull
rcrl
mov
inc
xchg
clc
out
add
lock
hlt
mov
xchg
sub
lds
dec
je
das
pop
xchg
shrb
cmp
imul
imul
cmp
movsb
hlt
fimuls
stc
inc
xor
jl
push
add
in
and
and
aas
pop
inc
fdivl
jnp
hlt
lods
xchg
cli
xchg
enter
jmp
lcall
je
push
mov
je
or
jo
xor
xchg
arpl
mov
scas
adc
into
pop
add
das
sbb
call
lahf
mov
hlt
mov
cmc
lea
push
in
cld
dec
add
xor
sahf
push
jnp
xchg
cltd
xor
adc
push
dec
push
inc
jmp
cmp
imul
cli
mov
faddl
outsb
cmp
outsl
daa
pop
out
decb
pusha
divl
imul
test
pushf
xor
adc
aad
dec
push
inc
jp
pop
mov
int
inc
fsub
out
out
and
pusha
idivl
inc
add
sbb
sbb
imul
mov
mov
fisubrs
adc
je
cmp
pop
sahf
bound
popl
inc
loope
inc
fiaddl
add
gs
push
in
orl
mov
jnp
lret
cwtl
add
les
pop
cmc
insl
pop
jbe
idivl
cmpsl
std
xchg
and
sbb
cmp
push
ds
jae
stos
rcll
pop
fbstp
enter
or
mov
dec
shl
jge
in
xchg
or
push
dec
pop
sbb
lea
lods
lahf
scas
cmp
ffreep
xor
icebp
add
xor
push
jmp
test
xchg
movsl
xchg
sub
mov
and
sub
lods
inc
cmp
pop
lret
bound
mov
and
or
lahf
ss
sub
je
es
test
addr16
sbb
stc
sub
dec
adcb
lea
xor
adc
mov
jbe
dec
fidivl
xchg
xchg
mov
ficompl
mov
out
pop
scas
pop
sub
ss
jge
out
scas
xchg
push
jmp
int
or
jecxz
pop
adc
mov
push
mov
jbe
in
xlat
outsb
pop
sbb
mov
je
repnz
cmp
clc
jae
cli
xchg
jmp
or
cmp
xor
call
push
pop
or
dec
ret
inc
or
lcall
inc
mov
pushf
jecxz
push
fisttpl
mov
add
addr16
push
xchg
or
jp
mov
iret
lretw
fisttpll
test
bound
out
hlt
out
loope
loop
sti
adc
jbe
adc
aam
sub
sarl
inc
clc
inc
inc
fdivrs
push
pop
inc
or
lds
aam
rolb
jmp
mov
or
cwtl
arpl
out
and
stc
xor
sbb
jo
mov
popf
cmp
dec
jmp
push
sub
pop
cmp
je
jne
lods
dec
arpl
subb
or
xchg
pop
fisttps
jmp
mov
sbb
xor
sbb
iret
or
lods
and
pop
arpl
xchg
mov
jmp
setne
xchg
mov
leave
push
sbb
mov
test
inc
cmpsb
scas
shrb
inc
fsubrs
xchg
out
fildll
pusha
in
sti
sahf
push
pop
inc
push
out
sub
sahf
out
mov
stos
fnsave
add
jg
je
insl
mov
data16
dec
imul
jmp
push
test
movsb
add
inc
jae
jle
xor
ret
sbb
xchg
adc
mov
push
insl
shll
push
jge
cwtl
filds
pop
lock
sbb
bound
adc
nop
sbb
aaa
xchg
cmp
mov
fbstp
shlb
ret
out
insl
inc
inc
movsb
mov
pop
pop
inc
shrl
xor
pop
divb
lds
mov
inc
push
mov
xor
orl
leave
scas
jge
sti
xchg
xchg
sahf
or
xchg
loop
outsl
bound
gs
pop
or
dec
add
add
sub
cs
addr16
xchg
pop
enter
cmp
pop
or
into
xor
push
cmp
jb
push
mov
add
jno
or
mov
ret
dec
mov
in
enter
or
daa
mov
lret
mov
gs
fwait
arpl
and
pop
or
jg
repz
movw
pop
test
cmp
lock
cmpsl
xchg
mov
add
pushf
push
dec
push
pushf
and
jg
je
ret
pop
xchg
push
pop
mov
xchg
or
mov
inc
mov
xor
inc
or
nop
subl
mov
adc
std
subl
in
stc
mov
lods
inc
arpl
loop
or
sub
negb
jne
or
and
mov
jno
in
pop
xor
cmp
push
sbb
ret
nop
xchg
pusha
mov
jp
out
mov
jp
dec
scas
add
xor
add
push
leave
pop
es
sub
pop
fnstsw
cmp
add
push
xorb
adc
sub
push
imul
inc
addr16
enter
inc
aas
sub
imul
cs
call
lcall
adc
and
movsb
adc
jge
hlt
shrl
fadds
or
fchs
xor
movsl
loope
or
cs
rorl
daa
cmp
or
test
rep
add
and
mov
pop
aas
dec
sub
mov
xor
loop
mov
xchg
lret
mov
xchg
out
lahf
shrb
lcall
xor
mov
xchg
movsl
decb
add
dec
sbb
andps
inc
push
xchg
pop
jmp
inc
sbb
mov
mov
and
adc
sbb
push
add
push
mov
movsb
outsb
fs
js
cmp
mov
jp
stos
cwtl
add
arpl
test
outsb
addr16
lahf
pop
add
addr16
dec
adc
push
pop
lock
push
adc
loopne
out
movsb
adcb
mov
mov
inc
mov
mov
pop
and
mov
mov
sbb
cmpb
sub
xorb
ficomps
mov
rcl
iret
pop
or
cltd
adc
mov
shrl
test
add
lods
mov
add
imul
xor
jbe
add
xchg
xchg
cmpsb
daa
adc
xlat
mov
mov
and
add
enter
dec
mov
push
movsb
jg
and
into
bound
jl
out
cmp
xchg
cmp
inc
insl
mov
or
push
lret
pop
dec
add
daa
push
imul
ja
fidivl
cwtl
sub
and
or
call
inc
push
mov
fnsave
out
mov
cmc
and
push
adc
pop
ja
out
sahf
ret
mov
int
enter
fwait
add
cmp
inc
pop
aas
jecxz
dec
xor
inc
xorb
xchg
daa
mov
test
sahf
dec
cmp
pop
jnp
lahf
jno
inc
aad
push
pop
mov
dec
sub
cwtl
pop
insb
rclb
mov
pop
in
dec
rolb
es
inc
jb
jbe
xchg
mov
sbb
aaa
test
or
cmp
imul
and
xchg
mov
sub
adc
lea
xor
fcmovne
mov
mov
cwtl
das
xor
aas
push
pop
pop
test
in
test
xor
rol
popa
ret
dec
jecxz
orb
into
sub
lcall
push
pop
insl
ss
ficompl
jecxz
mov
pusha
mov
dec
mov
in
pusha
lods
inc
inc
mov
ss
mov
sub
jns
push
aas
addb
fstl
enter
xchg
loop
and
cmpsl
out
pop
xchg
sub
mov
and
jecxz
sbb
sbb
xchg
pop
mov
cmp
sbb
jge
ret
jmp
loope
add
mov
pop
inc
out
mov
lcall
mov
fistps
push
mov
xchg
add
jl
clc
call
dec
ja
dec
or
mov
lds
xchg
mov
pop
mov
lret
dec
leave
iret
data16
push
mov
xchg
sub
push
jne
jnp
int3
jb
xchg
push
and
and
sbb
mov
test
clc
test
pop
sub
fsub
jp
xorl
mov
inc
dec
fbstp
pushf
xor
fdivrs
iret
sub
divl
inc
fcomps
add
loope
movsl
lahf
xlat
into
popa
outsl
xchg
xchg
sbb
inc
jb
in
sbbl
mov
mov
dec
cmc
iret
push
xorb
lds
jbe
mov
aam
incb
mov
push
outsl
push
mov
push
dec
and
dec
push
in
push
cli
movsl
and
iret
mov
cmp
mov
jb,pt
shlb
mov
jno
not
lock
cmpsb
pushf
add
cwtl
das
mov
test
mov
scas
adc
mov
and
xchg
clc
jae
outsb
dec
lahf
ljmp
loope
rcll
adc
mov
js,pt
mov
and
push
lret
mov
mov
imul
aam
rcrl
inc
data16
cmp
mov
inc
mov
xor
jns
push
sbb
xor
cltd
ficoml
test
inc
outsl
or
mov
and
mov
cs
loope
mov
loope
fcmove
jmp
add
enter
pop
push
push
push
loope
ljmp
daa
rol
fsubrl
cld
push
in
and
insb
xchg
dec
sahf
scas
cld
in
fbld
loop
sbb
dec
or
out
mov
js
or
jmp
mov
cltd
mov
inc
sub
cltd
fs
sbb
add
jmp
xchg
out
push
xor
inc
cltd
das
mov
xor
fwait
popa
fwait
out
outsb
stos
scas
enter
repz
fbld
push
push
sbb
fwait
adc
cmp
pop
das
jae
add
sarb
mov
push
add
sub
sarb
inc
addl
mov
fidivrs
pop
lock
sub
cltd
lahf
stc
mov
out
mov
adc
test
sti
test
sbbl
in
in
pop
add
mov
pop
jle
fdivp
in
popa
clc
add
add
ja
push
lret
mov
out
ret
popa
cmp
rorb
addr16
cs
lea
arpl
and
or
cli
xchg
rcll
test
xor
aas
pop
pop
fsubs
inc
xchg
dec
movsb
ret
cli
movb
xchg
loopne
cmc
pop
loope
lods
inc
mov
dec
ja
xorl
inc
adc
mov
stos
cli
dec
out
jecxz
cmp
jnp
adc
sahf
and
enter
dec
mov
scas
adc
or
inc
jbe
lret
mov
cltd
sahf
ds
outsb
add
mulb
xchg
inc
loop
jge
xchg
ljmp
dec
dec
cltd
xor
pop
lock
push
in
dec
cmp
notb
in
aas
jmp
mov
mov
jge
xorb
push
mov
rorb
clc
mov
xchg
rolb
push
out
xchg
pop
jo
je
adc
mov
pop
shlb
imul
es
jl
inc
sbb
aaa
mov
dec
loope
mov
adc
xchg
in
cmp
pop
xor
mov
inc
push
daa
mov
subb
mov
and
pop
dec
jmp
out
lods
sarl
notb
sbb
jmp
xor
push
imul
sbb
repz
ds
mov
push
pop
orl
aas
push
shrl
push
in
shlb
out
into
inc
data16
push
fmull
jmp
sbb
stos
pop
push
mov
xor
sbb
mov
and
out
iret
test
adc
inc
or
stc
xor
bound
or
sbb
stos
mov
fsubrp
cmp
es
cmp
and
lret
jmp
fldt
pop
sub
sub
cmpsl
ficomps
mov
pop
jecxz
fstl
push
mov
or
std
xor
loop
gs
cwtl
das
arpl
cmpsl
cmc
fdivs
ja
es
fwait
sub
cwtl
cmc
mov
aam
mov
xlat
in
mov
fidivl
add
shll
std
ds
loop
mov
imul
add
dec
cmp
push
in
adc
pop
stos
dec
pushf
pop
mov
push
inc
lret
pusha
je
or
mov
pop
mov
movsl
add
push
jae
addr16
pop
or
cmp
pop
xchg
inc
mov
mov
fs
stos
es
or
ret
push
imul
repnz
loop
fsts
sub
ds
dec
jl
xor
or
outsb
js
dec
stos
push
mov
rcrb
fisttps
push
imul
lods
inc
dec
jle
cmpsl
popf
pop
mov
out
aas
dec
inc
divb
fs
out
fstpt
add
test
iret
test
das
xchg
sub
add
jge,pn
mov
flds
mov
imul
cwtl
adc
jg
lods
repnz
jge
je
ljmp
sbb
jl
jg
push
scas
xchg
dec
jb
inc
scas
xchg
cmp
jmp
cmpsl
add
push
jnp
mov
sbbb
inc
cmpsb
and
jno
or
adc
stos
aad
mov
cmp
sub
gs
sbb
push
loopne
rep
stos
jno
cli
adc
xchg
cs
fwait
mov
enter
xor
cmc
adc
out
rclb
cltd
rcl
in
fcoml
les
push
mov
jmp
xchg
fs
mov
inc
mov
cmpsb
push
cmp
ljmp
adc
dec
mov
aad
cmp
insb
pop
std
xchg
inc
lea
ror
or
and
jbe
cmpsl
push
dec
in
mov
orb
jae
or
cmp
adc
xchg
lcall
test
add
movl
mov
sbb
add
sub
cltd
decb
in
push
call
lret
cld
and
mov
adc
std
add
xchg
jo
push
lock
mov
mov
dec
xor
jnp
dec
jae
or
sub
push
pushf
rol
or
lea
sahf
jmp
mov
xchg
daa
dec
xor
out
mov
push
iret
stos
frstor
add
mov
sub
int
inc
mulb
jmp
cmp
ja
pop
lret
cmp
jg
or
iret
mov
stos
ss
lods
add
xor
sbbl
sbb
mov
fstpt
icebp
fcompl
jno
int3
and
call
ljmp
test
pushf
xor
cs
dec
daa
xchg
loop
xor
pop
pop
js
test
cmc
add
and
push
sub
aas
gs
cmc
cmp
mov
pop
xchg
push
adcl
or
jno
inc
add
sbb
jmp
pop
jnp
or
roll
jmp
xchg
push
out
leave
pusha
and
leave
loopne
inc
inc
xchg
in
dec
movsb
cld
mov
mov
xchg
cmovge
mov
lret
outsb
in
aaa
sti
jecxz
or
mov
add
or
push
push
xchg
adc
sbb
out
inc
mov
add
sbbl
cwtl
out
push
mov
ret
sbb
xor
fs
in
xchg
xchg
mov
sahf
jo
mov
dec
dec
lahf
pop
scas
stos
jo
pop
adcb
adc
loopne
jae
ds
insl
jne
mov
ret
pop
cmp
popa
add
push
fldenv
mov
hlt
xchg
test
mov
dec
int3
cmpl
sbb
aaa
into
cmp
mov
mov
lcall
fwait
cmpsb
cmp
ret
lea
hlt
xor
xchg
lahf
jmp
add
mov
cltd
mov
pop
sbb
xchg
cwtl
xor
xchg
lods
out
shr
ja,pn
inc
test
jb
nop
dec
std
cmpsl
push
cmp
pop
imul
rol
sbb
hlt
mov
xor
cmpsb
dec
out
mov
ja
jnp
xchg
sub
xor
pop
pop
ret
mov
cli
xor
xchg
roll
jge
movsl
lret
mov
mov
fucomip
shll
add
loope
stc
repz
mov
xor
test
repnz
insb
outsl
sub
lret
scas
pop
repz
mov
or
pop
loop
cmp
divb
int3
nop
mov
and
or
inc
push
sub
aaa
cmpsb
cs
pop
ret
xchg
cmc
jp
pusha
push
dec
mov
sbb
mov
mov
xchg
adc
dec
ss
xchg
jbe,pn
stos
in
gs
fstpt
mov
arpl
or
mov
jbe
mov
mov
pop
xor
dec
push
and
cmpsb
xor
movl
pop
dec
push
pop
cmpsb
inc
sub
sub
insb
mov
bound
andl
mov
adc
flds
or
and
arpl
mov
add
xor
lods
subb
loopne
rcrl
int3
jno
mov
jg
es
cmp
pop
inc
cmpsl
ds
xchg
pop
fimuls
sahf
je
jno
cmp
test
cwtl
ret
ficomps
in
sahf
fmulp
adc
roll
sbbl
popf
imul
and
pop
mov
adc
mov
sub
test
sbb
or
xchg
cmp
outsb
push
cmp
jbe
addb
faddl
mov
ficoms
iret
fs
shlb
test
enter
mov
mov
push
call
jmp
xor
and
cmc
mov
push
je
inc
leave
xchg
sub
mov
jg
sub
mov
pop
mov
fnsave
jecxz
mov
jge
adc
jbe
and
mov
sub
dec
lea
pushf
shrl
mov
pusha
loope
mov
pop
xor
inc
cmpsb
iret
out
shll
addr16
rcrl
in
subl
mov
call
pop
or
cmp
push
mov
fdiv
jno
les
and
test
ds
jl
jp
jl
ret
outsb
test
iret
idiv
cmp
jmp
jae
js
cmp
lea
int3
arpl
xchg
xor
push
mov
in
and
push
popf
push
mov
inc
mov
out
jne
dec
addr16
mov
bound
push
sub
into
sahf
xchg
and
push
xlat
dec
out
xchg
std
xchg
push
adc
addb
push
mov
xchg
sub
lahf
ss
push
imul
push
addb
imul
leave
pusha
cld
push
test
inc
in
mov
sahf
outsb
add
orb
cmp
jmp
xchg
mov
push
xchg
sbb
insb
add
test
test
cld
fimuls
pop
insl
xor
dec
frstor
xchg
mov
or
lock
leave
jecxz
mov
clc
scas
rcll
scas
rcrl
mov
cmpsb
mov
je
mov
gs
cmpl
mov
mov
and
and
loop
cmp
pushf
dec
add
inc
pop
pop
ds
pop
insl
add
stos
ds
nop
divl
and
es
pop
in
xor
jne
xor
enter
in
add
sbb
lods
stos
cmp
stos
lock
repz
rclb
rorb
in
mov
or
lahf
jns
dec
jecxz
push
xchg
sub
mov
andl
sub
scas
lcall
fsubl
imul
pop
leave
fsubrs
leave
mov
fidivs
push
popf
jb
int3
arpl
out
jge
loopne
fnsave
jg
sbb
in
test
mov
sub
adc
rolb
add
sub
or
cmp
pop
jno
insl
lock
xor
mov
jns
in
enter
movsb
cmp
scas
inc
jbe
mov
divl
gs
scas
inc
and
into
push
jno
insl
mov
cmpsl
stos
ret
sub
call
aam
jecxz
imul
mov
mov
mov
std
leave
pusha
das
xchg
push
mov
push
jns
sarb
inc
sbbl
push
int
pop
in
insb
addr16
ss
out
sbb
idivl
stos
inc
fnstenv
or
es
inc
mov
cmp
in
fidivs
mov
stc
or
inc
mov
pushf
jno
xor
mov
cmp
pop
pop
ret
fisubrs
jns
or
jnp
lret
ss
push
jbe
loopne
cmp
fldl
mov
jb,pt
nop
inc
je
mov
jl
mov
sbb
push
sbb
inc
scas
sbbl
ljmp
adc
movsl
pop
rclb
push
stc
sub
mov
aaa
fcompl
cmp
mov
xchg
adc
mov
mov
inc
fdivrl
int3
arpl
pop
inc
fstpl
xchg
sub
cmpb
shl
in
mov
ficomps
sti
mov
fbstp
shll
adc
jbe
pop
repz
mov
mov
pop
fsts
loope
enter
adc
push
jno
dec
jb
fs
jne
in
add
sbbb
bound
mov
sub
add
into
sti
xchg
rcll
adc
je
out
inc
mov
adc
push
xchg
push
daa
inc
or
bound
adcb
ds
lods
mov
addr16
and
inc
fdivl
aad
pop
pop
sbb
mov
push
hlt
ret
pop
out
sbbl
cmp
xchg
sub
pop
cli
xchg
lea
les
scas
push
movsl
fbstp
push
add
shlb
testb
sbb
mov
cwtl
das
icebp
cmpsl
xchg
sub
and
int
mov
push
call
es
add
in
jecxz
or
movsl
and
orl
repz
jb
int
and
dec
sbbl
inc
jae
clc
and
jl
pop
repnz
popf
jnp
enter
in
jg
sbb
mov
inc
cmp
cmp
mov
cmpsb
sahf
pop
sub
dec
jl
cmpsb
outsb
cmpsl
sbb
jb
ljmp
xor
sbb
ret
fsubrl
in
aam
dec
arpl
cmp
or
je
test
pop
and
or
stos
lahf
xor
mov
dec
stc
rcrl
ret
dec
and
dec
lods
dec
out
fnstcw
lret
inc
sub
lretw
mov
cmpsl
ds
fdivr
xchg
in
scas
inc
les
push
call
enter
or
lds
push
out
jne
mov
or
sub
stos
scas
leave
pusha
sbb
ja
sarb
nop
daa
movsb
repz
lret
call
leave
pusha
sub
arpl
outsb
add
adc
ss
inc
adc
mov
push
paddusw
lahf
mov
sbb
mov
mov
das
nop
jnp
je
and
jg
cmp
lret
enter
mov
cmp
cwtl
mov
jmp
adc
or
leave
mov
sub
sarb
jo
mov
cmp
imul
lcall
test
pop
cmp
jle
mov
inc
jp
mov
lock
mov
adc
test
push
out
and
rcll
pop
cs
testl
es
xor
sub
popf
jns
pop
out
jge
adc
iret
in
sub
adc
imul
jne
aaa
lds
rcll
mov
dec
fs
out
test
push
xchg
adc
bndstx
jmp
sbb
pop
ret
out
sbb
movsb
mov
stos
push
out
sbb
xchg
mov
jle
mov
pop
in
jb
add
dec
xchg
xchg
sbb
sahf
cmc
scas
loop
inc
ljmp
cli
jns
inc
push
fdivs
xchg
mov
dec
insl
xor
jge
into
and
cmp
test
jecxz
movsb
aam
lahf
mov
mov
add
movsl
lea
lret
or
out
adc
xor
and
sbb
xchg
xor
aaa
pusha
jle
jne
and
lea
insl
dec
push
test
jb
xor
mov
shrl
aad
mov
das
mov
mov
shll
mov
fstl
pop
test
lret
movsl
mov
cld
testl
mov
fucomip
sbb
aam
jp
insl
add
fwait
cmpsb
cmp
cmc
cmp
insb
test
cwtl
das
js
mov
cld
cltd
in
and
mov
lods
inc
sahf
xor
in
jge
mov
sahf
xor
cmp
js
pop
adc
and
dec
loop
inc
jecxz
push
pop
cmp
popa
ja
sub
adcb
mov
cli
mov
stos
xchg
pop
fnstcw
mov
mov
test
stc
nop
sub
imul
lods
jae
mov
shlb
push
test
and
addr16
push
out
xchg
xchg
out
gs
clc
xor
sub
in
push
jbe
push
mov
xchg
testl
int
jno
mov
mov
test
cmpsb
cmpsb
addr16
adc
rcll
jg
daa
test
rcl
insb
ret
cmp
jecxz
mov
cmc
addr16
call
pop
int
push
and
fnstenv
push
mov
mov
and
sbb
pop
mov
fdivl
mov
cmp
sahf
xchg
daa
push
clc
jmp
imul
test
sbb
pop
cmpsl
xchg
add
adc
sub
and
call
jl
sbb
enter
sarb
pop
jle
nop
repnz
push
iret
push
movsl
int3
xchg
mov
push
out
shrl
pop
mov
sbb
or
mov
fcoml
or
and
cmp
pop
lock
mov
dec
or
jnp
cmp
fbstp
jno
fmuls
cmp
gs
aam
xchg
and
adc
test
sti
scas
movsl
popa
clc
std
iret
sbb
mov
stos
ret
pop
hlt
hlt
lret
insl
add
imul
subb
lods
inc
push
dec
pop
sahf
jp
loopne
movsb
fwait
or
sbb
fsts
daa
out
lods
popa
bnd
inc
mov
cmp
mov
jmp
aaa
in
js
inc
add
mov
inc
fmuls
or
adc
mov
popf
add
js
push
xor
dec
aas
cmp
cmp
in
and
pop
nop
daa
xchg
popa
shll
out
test
mov
push
pop
stos
inc
outsb
sbb
mov
pop
pop
adc
pop
icebp
fidivl
mov
mov
xor
pop
pop
repz
lds
mov
icebp
rcrl
and
xchg
add
fadd
outsb
cmpsl
ds
add
or
fdivl
xchg
insl
stc
test
test
test
sbb
mov
outsb
add
push
inc
jmp
inc
xchg
andl
mov
js
call
loopne
push
aaa
push
imul
addr16
fucomp
test
sbb
rorb
or
popa
push
lock
subb
mov
ja
out
aam
filds
es
push
arpl
stos
mov
imul
sbb
push
adc
shll
cmc
jmp
sub
shld
push
sbb
jnp
mov
leave
mov
dec
popa
dec
and
add
push
xchg
lods
sti
dec
ja
push
jbe
adc
mov
ljmp
lcall
cwtl
test
mov
imul
add
push
aam
stc
nop
gs
adc
into
mov
les
adc
xlat
jb
fistpl
addb
testl
iret
sbb
shll
in
inc
dec
add
and
dec
leave
or
stc
outsl
jne
scas
scas
sub
data16
and
test
fstpt
mov
push
out
and
jb
jae
mov
scas
adc
popa
bound
and
sbb
adc
sub
in
stos
add
push
outsl
cmp
sti
ret
mov
inc
call
push
xor
sarl
cmpsb
arpl
add
mov
xor
mov
into
push
stos
jg
mov
je
lea
popf
imul
xor
push
shlb
sti
pop
or
pop
jb
sub
cmp
shr
push
add
adcb
push
je
push
fiadds
dec
rcl
mov
insl
mov
xchg
insl
jge
call
cmp
jle
std
mov
pushl
push
dec
xor
inc
jge
negb
fimuls
adc
aaa
sbb
push
sbb
xchg
and
pushf
lahf
inc
incl
pop
in
push
or
lods
les
sub
mov
adc
pop
lock
ja
jecxz
es
adc
mov
mull
xor
fdivr
sarl
jbe
das
call
push
movsb
jae
add
roll
jmp
loopne
xchg
pop
sahf
sub
in
mov
ret
inc
sbb
aad
adc
movsl
out
sti
rorb
leave
adc
push
fistpl
rcr
std
mov
jge
stos
mov
xchg
dec
sbb
jp
push
jbe
fwait
inc
lods
sti
call
lods
ljmp
pushf
in
cs
or
sbb
dec
sahf
aaa
nop
rorl
pushf
shr
lcall
and
jno
cmpsb
push
xchg
xchg
imul
inc
into
xor
scas
loope
mov
ret
daa
rclb
add
xor
imul
jae
push
mov
mov
mov
dec
imul
out
mov
xor
mov
fnstcw
push
cmp
bound
xor
shll
aad
adc
xor
int3
add
sub
test
cs
in
in
xor
and
pushf
xor
sbb
xchg
hlt
arpl
xchg
adc
xor
mov
push
and
loope
xor
pop
dec
push
ds
inc
repz
sbb
adc
ret
pop
push
es
pop
jno
mov
push
mov
mov
sbb
inc
push
inc
xor
inc
add
out
pushl
stos
sub
inc
adc
mov
fsubrl
sub
or
sub
hlt
rolw
daa
mov
gs
jg
stos
jae
js
notl
inc
cltd
xchg
call
out
sbb
xchg
movsb
rclb
mov
add
xor
stos
and
out
lcall
adc
icebp
mov
aas
in
jge
pop
shrb
dec
sbb
xor
pop
mov
mov
movsl
data16
add
mov
insl
in
inc
sarl
dec
push
push
std
xchg
icebp
das
rcrl
sub
stos
in
mov
imul
lea
stc
mov
cmpsb
lret
fs
stos
cmp
or
sub
mov
pop
pop
mov
ficomps
inc
sbb
pusha
sub
dec
jmp
int3
fistpll
mov
daa
pop
add
jecxz
push
cltd
cltd
aam
xor
mov
jmp
movsl
cmp
inc
lret
fmul
bound
fs
out
jno
inc
outsb
mov
lret
cmpl
jb
xchg
and
mov
cli
cmpsb
cmp
cwtl
ljmp
push
clc
pop
imul
and
or
mov
dec
je
xchg
adc
setle
roll
fwait
sti
inc
movsl
xor
pop
dec
push
fstpt
stos
stos
inc
sbb
xchg
jle
dec
pop
pop
dec
sbb
and
imul
pop
sbb
mov
mov
sub
es
sub
pop
jecxz
jp
rcrb
notl
push
jl
cmp
sub
cmp
mov
scas
inc
xor
int
pop
mov
clc
stos
cwtd
sbbb
test
insl
lret
push
xchg
stos
push
call
jnp
pop
xchg
js
jnp
std
int3
icebp
dec
jns
scas
inc
dec
popf
int3
lret
lret
jne
adc
test
sub
dec
cmpsb
cmc
xor
outsb
rcrl
iret
loope
rclb
mov
jae
cmp
pop
pop
scas
test
push
or
or
enter
enter
sub
cmpsl
imul
repz
sub
push
insl
or
inc
mov
pop
cmp
jo
movswl
xchg
cld
push
adc
fsubl
icebp
adc
lods
push
jno
mov
rcr
xchg
inc
pop
push
xchg
gs
scas
xchg
test
mov
ja
in
inc
xorl
movsb
mov
and
jae
pop
cmp
fsubrl
dec
cmp
sub
pop
incl
xor
xchg
xor
stos
gs
je
mov
ss
pop
pop
and
leave
and
sbb
js
out
push
mov
pusha
testl
add
push
stos
insl
in
lahf
fiadds
pop
enter
adc
enter
inc
pop
mov
aaa
imul
mov
dec
into
cs
lods
push
mov
push
cmc
mov
stos
inc
jo
adc
push
jae
mov
xchg
sbb
mov
movsl
mov
mov
mov
xor
enter
mov
scas
add
jle
frstor
adcb
cmp
insb
xchg
cltd
test
mov
mov
loop
mov
fcoml
adc
aas
jne
mov
jne
ds
pop
cmpsl
sub
stc
and
decl
inc
mov
scas
mov
push
imul
mov
mov
test
push
inc
lcall
sbb
scas
mov
xor
in
mov
mov
mov
test
inc
rclb
std
sub
pop
push
cltd
cwtl
jae
inc
movsl
loop
jmp
add
inc
daa
pop
ljmp
mov
gs
add
inc
mov
or
adc
push
lcall
jns
enter
out
jmp
adc
imul
xchg
jg
mov
and
gs
test
lcall
and
add
nop
loope
pop
loope
mov
enter
xor
push
xchg
push
mov
test
imul
int3
dec
add
fmull
xchg
imul
mov
pop
cmp
mov
outsb
stos
jmp
fucomip
popa
jg
jne
lret
xchg
stos
mov
pop
or
jae
add
xchg
out
inc
inc
xlat
jae
js
mov
cld
or
cmp
lock
lods
inc
lods
rorl
xlat
dec
lret
je
push
cmp
pop
aam
jge
fisubl
bound
pop
in
xchg
movsl
pop
xchg
mov
or
sub
cmpsl
mov
lret
daa
int
jg
lahf
jbe
insb
xchg
mov
mov
imul
mov
ret
sti
clc
mov
scas
cld
mov
pop
lea
sbb
fldcw
mov
sbb
daa
dec
pushf
popf
or
dec
pop
jle
or
xchg
es
std
cld
inc
add
sub
lods
adc
and
mov
fisttpll
xchg
xor
add
pop
imul
xchg
adc
cmpsb
jbe
xchg
or
addr16
mov
mov
xchg
adc
insl
ja
inc
data16
cmp
repnz
test
ss
add
cltd
je
test
hlt
pop
icebp
stos
aad
inc
test
jmp
cwtl
lods
or
push
out
fs
addr16
shrl
aam
ds
lods
stc
pop
cmp
adc
push
xor
mov
loop
inc
call
sub
aas
pop
cmp
insl
sub
adc
jnp
jno
lods
inc
imul
ljmp
or
mov
adc
scas
call
into
lock
fwait
shlb
loopne
inc
jnp
jmp
repnz
jno
loopne
hlt
adc
and
jns
scas
fistps
fadds
add
pop
jno
sbb
lret
shlb
enter
dec
stos
cmp
mov
cmp
push
es
mov
mov
jns
sti
and
sub
dec
les
subb
ret
and
repnz
scas
cmp
and
push
adc
add
sbb
in
mov
cwtl
pop
pop
pop
add
js
data16
fs
pop
and
loopne
mov
mov
xlat
mov
mov
fsubrl
mov
scas
adc
push
or
push
mov
pcmpgtw
rolb
pop
mov
inc
sbb
mov
pop
fcmovnb
je
add
mov
dec
fwait
push
inc
cmp
mov
xor
orl
dec
fisubrl
out
shll
scas
mov
lea
gs
lret
xchg
or
sbb
inc
lock
and
js
jmp
test
mov
daa
repnz
stos
inc
xor
ret
in
test
inc
cmpsl
fnsave
repz
cwtl
inc
nop
mov
jle
sbb
fadd
sbb
js
out
clc
sub
movsb
xor
pop
pop
and
jae
push
push
xchg
orb
xor
jle
mov
mov
sbb
mov
subl
in
test
pusha
mov
insb
call
lods
inc
mov
sahf
xor
jo
mov
dec
adc
fisubrl
lahf
sbb
mov
jp
aaa
adc
pushf
rcl
movsl
es
jb
repz
adc
jge
mov
mov
push
mov
movsl
inc
stos
and
inc
inc
repnz
inc
sbbl
push
loope
bound
xchg
jb
mov
pusha
icebp
xchg
aad
mov
add
std
push
lods
pop
stos
fnstsw
mov
das
mov
mov
pop
and
push
insl
or
adc
jle
or
jns
sub
mov
sub
xchg
adc
mov
nop
imul
inc
mov
mov
scas
fadds
pop
push
mov
jmp
js
lret
arpl
mov
push
dec
sub
push
cli
ret
lea
sbb
in
ret
sbb
arpl
int
inc
pop
shlb
cwtl
push
cmc
mov
push
mov
addb
hlt
mov
jnp
es
inc
call
and
out
dec
xchg
inc
outsl
xrelease
addr16
rcrb
cltd
xchg
enter
idivl
xor
jne
pop
movsl
in
mov
xchg
cmc
xchg
jno
mov
bound
xchg
rcll
add
lahf
sub
sti
mov
loopne
cmpsl
and
mov
inc
mov
int
pop
jp
sub
lahf
ljmp
mov
or
jb
mov
xor
popa
imul
in
mov
lea
lock
xchg
mov
orb
and
daa
outsl
mov
test
sub
icebp
fmull
sbbl
dec
dec
in
sub
jg
xor
addr16
cwtl
sbb
push
shrl
sti
push
mov
out
ljmp
aas
push
insl
call
dec
rcrb
iret
lcall
xor
add
jecxz
das
fsts
nop
mov
sub
into
insb
testb
out
push
sub
xor
pop
arpl
fldz
pop
icebp
xor
js
push
not
call
or
adcb
dec
and
into
mov
into
mov
clc
mov
lock
pop
mov
cmp
bnd
in
adc
aaa
xchg
sti
pop
and
and
mov
xor
mov
xchg
or
nop
mov
mov
jae
outsl
xacquire
popf
fists
xadd
pop
sbb
movntps
cmc
daa
mov
pop
adc
pop
bswap
out
inc
test
lret
popa
xchg
inc
inc
les
cmp
aam
inc
pop
mov
dec
or
mov
lock
dec
in
adc
dec
gs
imul
mov
data16
xchg
jno
inc
xchg
in
inc
arpl
mov
addb
aam
cli
dec
or
andb
aad
loopne
stos
popf
inc
fmull
or
outsb
sbb
les
out
xor
js
pop
push
or
lcall
xor
out
stos
test
mov
push
fmul
jmp
popf
push
pop
xchg
mov
aaa
and
add
and
jb
sub
scas
mov
pop
xchg
dec
std
das
cs
jbe
xlat
sbb
jg
orb
loopne
inc
and
jno
xor
lahf
scas
cld
jecxz
shlb
test
or
fmuls
mov
adc
sub
imul
or
jmp
cmp
aad
les
mov
jmp
outsb
dec
cli
xchg
or
add
sbb
outsl
push
mov
fisttps
lods
inc
inc
enter
inc
fxam
aaa
and
add
lods
outsl
jecxz
sub
sbb
pop
outsl
pushw
mov
fmull
inc
inc
jle
mov
add
inc
mov
jmp
xor
jg
pushf
sti
movsb
dec
stos
add
jae
sub
insb
inc
pop
jno
dec
lods
mov
les
mov
cmc
aam
or
jo
dec
jle,pt
int
push
in
test
hlt
lods
fstl
sub
popa
cld
lods
fidivs
lret
mov
mov
in
inc
lods
mov
sbb
cwtl
aas
jb
jno
xor
lock
mov
or
std
or
mov
out
testb
xchg
popa
cmp
pusha
movsl
ljmp
sbb
mov
xchg
or
cmp
dec
pop
cmp
sub
push
or
push
jo
lcall
test
loopne
fmulp
xchg
cmp
divb
adc
adc
sbb
sbb
fsubr
lock
out
sbb
sbb
movb
test
in
js
push
setp
push
mov
jle
fisttps
hlt
cmp
sahf
adc
into
lods
inc
mov
pop
mulb
mov
loopne
mov
mov
ljmp
inc
aas
mov
lret
cld
dec
aaa
stos
insl
and
and
cmpsb
cmp
ljmp
and
stos
pushl
jnp
cmc
cmp
dec
sbb
les
fs
fstpt
fbld
mov
and
iret
jbe
jne
jp
push
sahf
inc
pusha
fcmove
aaa
dec
push
divb
and
jg
jae
mov
jne
and
fwait
jg
outsb
and
sub
pop
mov
jmp
addl
dec
fsubl
sub
adc
loop
or
test
add
movsb
mov
insl
jg
lret
data16
in
and
push
test
call
sbb
test
cmp
lea
xor
jno
test
and
rcll
cmp
subl
or
shll
loope
xchg
pop
mov
jb
out
lcall
lcall
mov
outsb
jo
mov
or
jmp
fsub
add
xor
mov
bound
xchg
call
test
mov
in
aam
fs
shlb
arpl
lods
and
movsb
movsl
pop
xor
repnz
and
popf
insl
add
fstl
pop
mov
mov
imul
int3
or
loopne
sbb
int
enter
xchg
push
aam
cld
sub
sub
test
sarb
nop
pop
jmp
push
jnp
subb
and
mov
test
repz
ss
push
pop
jnp
dec
push
int3
mov
mov
clc
int
dec
ljmp
xchg
mov
sbb
out
dec
jns
cmp
adc
sbb
cmp
icebp
lods
fucom
jp
shll
incb
xchg
sub
insl
and
hlt
cmp
cmp
and
xchg
push
and
dec
pop
std
inc
cmp
stc
adc
loopne
mov
sahf
sti
lods
jnp
ret
xchg
jg
jmp
dec
aad
mov
mov
push
jge
int
cmp
mov
mov
push
mov
in
dec
lds
mov
mov
mov
dec
cs
jo
or
xor
or
inc
addl
xor
mov
or
sub
sbb
ret
or
or
mov
sbbb
data16
pop
stos
mov
push
xor
mov
insb
andl
mov
cmp
push
cmp
xchg
sub
lods
inc
rorb
lret
cmpsl
cwtl
rorl
sbb
mov
pop
out
push
mov
in
push
lods
sbbl
inc
ss
iret
mov
gs
insl
loopne
pusha
in
rcrb
push
mov
push
icebp
xchg
out
mov
jmp
pushf
test
mov
xchg
imul
cltd
leave
xchg
std
adc
inc
mov
popf
push
push
cmp
push
pop
sahf
cmc
ret
aaa
mov
adc
and
sub
xchg
or
cmp
gs
hlt
dec
cmp
pop
lods
sbb
push
mov
jnp
es
adc
add
xchg
stos
ret
or
es
mov
xchg
rorl
mov
ret
dec
aas
hlt
enter
test
add
inc
xor
or
js
adc
cltd
push
loopne
mov
andb
or
xor
xor
mov
mov
add
ss
lods
mov
push
add
mov
addr16
gs
mov
fistpll
aas
imul
jle
push
hlt
test
and
mov
jge
sbb
orb
mov
repnz
push
cmp
fs
add
popf
pop
nop
pop
scas
mov
int
in
mov
and
sahf
stos
jl
in
fisttpl
xor
dec
cltd
mov
cmp
sub
popf
mov
ds
mov
xchg
inc
cmp
cmp
mov
cwtl
mov
sub
lods
and
popf
sbb
ror
gs
into
mov
loopne
icebp
loopne
push
dec
mov
mov
int
lahf
dec
and
std
sbb
mov
es
push
out
shlb
lcall
adc
out
sar
or
repnz
test
inc
xchg
cmp
jns
popf
push
lret
cmp
insl
jge
fisttpll
out
shrl
add
repnz
adc
mov
jecxz
inc
xchg
sub
imul
jb
push
std
push
jle
push
rcrb
push
pushf
mov
mov
std
shll
push
test
in
movlps
xor
cmc
xchg
mov
mov
jbe
fstps
adc
mov
rorl
das
hlt
adc
inc
add
xchg
mov
stc
out
imul
push
sbb
fidivl
popf
push
cmp
jae
cltd
adc
iret
mov
aaa
in
xor
mov
mov
or
adc
and
lahf
test
push
pop
insl
add
mov
pop
hlt
stos
pop
mov
gs
cmp
test
jae
mov
lahf
sub
cmp
int3
pusha
repnz
cs
out
mov
sahf
in
pushf
scas
push
loop
mov
leave
adc
hlt
sbb
daa
lcall
pushf
mov
ret
loopne
jmp
mov
mov
dec
lds
mov
dec
cmpsl
push
cld
xchg
insl
sarb
xchg
or
sbb
sbb
notb
dec
adc
fwait
outsb
cmc
xchg
pop
sub
bound
or
jp
outsb
out
and
sub
pop
pop
and
xchg
sub
fistpll
lock
add
sbb
addr16
add
adc
xor
out
imul
cmp
aaa
inc
fisubs
add
lcall
or
pop
out
lcall
push
imul
sarl
in
rorl
mov
js
lods
pop
dec
adc
sub
push
mov
adc
cmp
jnp
xchg
insb
pop
dec
clc
xor
fldenv
inc
in
insb
in
cli
in
mov
call
add
mov
mov
xor
push
into
xchg
add
out
sbb
roll
adcl
fiaddl
and
fs
xchg
xchg
cmpsb
pop
ret
mov
sub
fcoml
push
out
and
mov
or
cmpsb
sbb
mov
fnstenv
test
mov
push
jg
scas
and
pop
inc
pop
push
mov
aad
dec
ljmp
adc
mov
ret
jmp
mov
mov
into
push
in
adcl
mov
and
fisttps
mov
xchg
out
stos
inc
add
push
ss
lock
dec
fdivs
sbb
mov
ja
push
and
lods
mov
jge
in
test
negb
addr16
push
push
in
mov
sub
cwtl
notl
loope
xor
mov
pop
mov
mov
cltd
test
mov
je
nop
cld
cmpsl
shr
xchg
insl
push
push
sub
rolb
inc
filds
jg
or
out
add
pop
add
popf
dec
dec
push
shll
mov
push
inc
push
xor
outsb
bound
sbb
mov
fisttps
cmp
jge
mov
outsb
jns
xchg
adc
dec
cwtl
das
addr16
fidivs
or
out
or
xchg
xchg
inc
test
cltd
icebp
adc
enter
mov
cmp
and
test
mov
shrl
mov
jno
repz
ja
jnp
cmp
pushf
dec
arpl
pop
push
das
and
push
lea
js
lret
push
aaa
dec
sbb
insl
ds
cmp
mov
inc
mov
mov
and
lcall
cmp
xchg
stos
mov
daa
fistpll
lahf
iret
dec
pop
ss
mov
rorb
jge
test
ss
sahf
push
push
push
mov
mov
cmp
push
mov
sahf
adc
js
fs
push
clc
inc
push
jbe
std
pop
jl
xor
les
xchg
adcl
xor
clc
push
push
cmpsb
mov
mov
notl
ficoms
mov
pop
stc
mov
xlat
mov
inc
aas
lahf
in
dec
jecxz
push
cmp
push
inc
mov
mov
xchg
sbb
aaa
cmp
mov
cli
or
adc
scas
mov
adc
jg
test
scas
mov
cmp
test
cmp
int
dec
call
cld
or
add
adc
mov
mov
shll
dec
xchg
lahf
sub
sbb
inc
test
daa
fstp
mov
dec
imul
roll
push
push
rcrl
ss
sub
jp
fisubrl
inc
popa
and
pop
lcall
dec
mov
sbb
add
dec
sub
mov
scas
pop
cmp
iret
dec
adc
xor
test
sbb
stos
fldenv
jb
mov
jno
jecxz
sub
cmpsb
ds
ja
pop
xchg
stc
lock
negb
outsl
mov
jae
jg
nop
out
mov
sub
je
xor
ja
seta
xor
int
push
test
jbe
pop
pop
pop
testl
bound
les
jg
xor
or
int3
mov
jnp
sti
push
ljmp
dec
adc
sub
dec
xor
daa
scas
je
and
into
ja
or
jo
sub
push
xlat
jno
mov
sbb
test
pop
push
nop
inc
flds
fs
lods
rorb
xchg
cmp
and
or
inc
pop
sahf
or
std
sub
movsb
fisubs
jae
jl
pop
cmp
andb
ret
repnz
jb
or
lfs
into
movsl
stos
cmp
mov
lea
sbb
lret
mov
ljmp
into
xchg
mov
xchg
popa
xchg
stos
es
fdivrs
sub
repnz
fstpt
adc
mov
and
rol
out
inc
push
sub
push
cmp
popf
push
adc
iret
xor
inc
jns
dec
aam
ds
and
xor
in
idivb
out
push
shrb
jg
xor
lahf
jmp
cmp
insb
adc
jbe
mov
lds
mov
push
push
mov
mov
movsl
test
sbb
mov
int
sbb
jmp
cmp
cmp
push
xchg
adc
daa
loope
mov
imul
flds
std
mov
and
mov
sbb
mov
nop
pop
jmp
jp
dec
loope
cmp
adcl
lahf
push
and
roll
sbb
pusha
aaa
add
in
push
push
xchg
push
add
xchg
and
fwait
jns
xchg
mov
movsl
mov
inc
loope
data16
xor
xchg
xor
lea
mov
push
clc
inc
jns
push
popa
lahf
adc
mov
pop
jb
jle
xchg
mov
pop
stc
popa
dec
stc
cmp
sub
in
sti
or
cmp
dec
daa
ljmp
push
inc
inc
sbb
lret
popa
cmpl
mov
outsb
out
jne
cmp
inc
push
sbbb
jp
aad
xor
push
lahf
push
test
insb
mov
das
push
and
add
addr16
pop
xchg
push
lods
pop
stc
js
sbb
dec
and
cmpsb
mov
test
pop
mov
jge
fadd
stos
and
test
fstl
out
or
sbb
xor
out
pop
mov
repz
ja
xchg
xor
lock
cld
and
popf
add
sahf
aas
cmp
outsl
stc
lcall
push
icebp
mov
les
nop
pop
push
mov
jg
outsb
pushf
das
mov
push
fidivs
add
jae
ljmp
loopne
inc
jmp
test
or
add
test
scas
sub
add
in
jne
inc
fcoms
mov
xchg
idivl
inc
popf
lea
movsb
out
jecxz
mov
jb
jmp
sbb
stc
dec
pop
cmp
pop
mov
or
mov
cmp
xor
loop
sbb
xchg
add
push
incl
aaa
mov
shl
cmp
lods
cmpsb
dec
out
cli
aad
or
pop
cmpsb
dec
sub
into
mov
es
setbe
mov
ljmp
mov
cmp
inc
rorl
mov
loope
xor
push
insl
test
push
lods
cmc
js
fisubrs
mov
push
pop
scas
inc
rclb
ret
xchg
mov
fidivrs
push
cmp
jp
movsb
int3
ds
cmc
ljmp
leave
add
cmc
push
push
sub
inc
mov
ffreep
sahf
mov
cmc
ljmp
cmpsb
shl
int
dec
lock
dec
lcall
lcall
out
push
cmp
iret
dec
sbb
dec
dec
pop
aaa
dec
lea
rcrb
mov
imul
inc
cmpsl
and
jbe
mov
sbbl
lcall
das
cli
in
dec
sar
repz
iret
xor
add
sbb
and
dec
inc
ljmp
xor
out
mov
loope
fbstp
jae
repz
and
scas
jecxz
in
les
test
iret
sbb
sub
aam
out
mov
daa
or
lahf
mov
orb
scas
and
inc
and
shrl
sbb
sbb
cmp
mov
negl
aad
cli
adc
and
decb
ss
das
pusha
adc
test
loop
arpl
int3
arpl
xchg
cwtl
pusha
lea
pop
movb
mov
sbb
scas
dec
and
clc
loope
dec
in
sbb
shrb
push
adcl
push
cwtl
mov
push
dec
or
out
dec
stos
or
mov
scas
jns
mov
es
lds
fldcw
out
dec
negb
push
nop
aad
adc
add
cmp
aaa
popf
stc
dec
adc
sub
sti
xchg
push
int3
bound
andl
lea
jg
xchg
js
inc
fisttpl
pushl
xchg
bound
cmc
xor
mov
cwtl
push
bound
mov
add
or
jle
stc
insb
push
pushf
insl
sbb
or
mov
xchg
dec
cmpsl
xchg
add
outsb
sbb
pop
mov
popf
cmpsb
add
clc
adc
xchg
pop
push
xor
cmp
cmp
sub
adc
jg
ja
inc
jg,pn
stos
popf
sbb
cli
dec
pop
add
and
xchg
stos
ret
sub
pop
jb
inc
enter
mov
ret
pop
jae
test
push
fwait
test
pop
outsb
pop
test
cmp
inc
mov
fisubrs
cmp
inc
sub
cmp
push
pop
dec
cmp
fdivrs
pop
cmpsb
les
cmp
or
scas
jo
xchg
loopne
int
jmp
sbb
add
je
jb
inc
movsb
lea
test
or
fidivrl
js
movsl
sub
dec
sub
test
inc
fmuls
dec
xchg
ljmp
cmp
and
js
or
adc
jl
mov
xor
mov
notb
xchg
mov
dec
mov
cs
inc
pop
decb
aaa
bound
or
std
cld
insl
and
xchg
sbb
lahf
add
xchg
mov
pop
rclb
stos
insl
lds
and
xchg
cmp
repnz
jb
fsts
test
adc
lret
pop
sbb
pop
and
sub
xchg
test
pop
mov
xchg
js
or
mov
pop
xor
js
sbbl
stc
stc
add
hlt
lods
lock
jne
stos
mov
rolb
lock
mov
aam
xor
xchg
xchg
mov
int
insb
xchg
jle
add
xchg
fwait
xor
mov
cmp
dec
jo
out
stc
call
jne
ret
inc
in
and
int3
shlb
push
fwait
test
outsl
ret
stos
inc
out
jns
push
pusha
adc
and
imul
lds
punpckhdq
mov
fldl
adc
and
inc
out
sbb
jg
outsl
ljmp
jae
ja
sarb
ret
sahf
mov
lcall
pop
or
or
sub
sub
or
jl
daa
scas
stc
bound
mov
pop
push
ljmp
and
xor
or
pop
mov
xchg
gs
pop
repnz
xchg
mov
mov
mov
subl
out
pop
or
add
add
movsl
in
les
sub
repz
mov
push
and
mov
sbb
repnz
or
jno
ja
sbbb
xchg
popa
pop
notb
jge
mov
jp
fst
repz
cli
push
dec
das
dec
pop
xor
jns
dec
add
inc
push
lcall
xchg
ja
dec
add
sti
mov
mov
nop
mov
add
inc
fnsave
push
testb
lods
dec
or
bound
jmp
dec
or
sub
cmc
decb
xchg
lea
sub
push
out
or
aaa
icebp
dec
push
arpl
mov
fcmovbe
pop
out
idiv
xchg
in
lods
cmpb
mov
dec
test
sahf
rep
data16
add
push
inc
or
pop
xor
inc
into
mov
mov
cmp
xor
outsb
hlt
jmp
mov
fwait
mov
bound
jmp
and
or
daa
cli
scas
sub
cmp
or
gs
pop
mov
nop
xor
jl
js
test
test
push
xchg
inc
popa
std
rcrb
push
adc
imul
pushf
fcmovnbe
fistpll
fsubrl
out
xchg
adc
pop
dec
cmp
push
imul
xchg
outsb
inc
pop
lahf
jge
insl
push
insl
xchg
cwtl
ret
or
pop
je
sub
and
mov
insl
int
xchg
js
enter
jge
sbb
mov
iret
mov
jp
jle
add
add
movsl
pop
lahf
jl
xchg
mov
and
cld
xor
pcmpgtb
test
jle
test
cltd
pop
jb
dec
movsb
jns
lahf
notl
ret
inc
sbb
cmp
push
in
and
outsl
push
xor
in
xor
stos
loope
test
int3
push
or
xchg
add
cmp
cmpsl
push
dec
sub
cmp
xlat
mov
and
test
rcrb
loope
push
adc
fsubr
hlt
mov
icebp
inc
fisubrl
jp
or
jg
std
loope
jge
movsl
mov
std
das
mov
pusha
fldenv
push
mov
iret
js
jle
insl
sbb
bound
stc
cmc
pusha
xchg
sub
adc
jne
shll
lods
inc
popa
pop
adc
ds
mov
call
jo
stos
add
xchg
aaa
pop
int3
fbstp
mov
xlat
outsl
repz
les
std
sti
out
shll
mov
jecxz
and
xchg
push
jo
frstor
mov
mov
cmp
enter
es
mov
imul
repnz
sub
pushf
mov
lret
fisttps
sti
jp
push
jmp
mov
jmp
fwait
insl
test
push
aaa
or
inc
mov
mov
lods
fsts
dec
dec
test
adc
jecxz
enter
loop
shlb
movb
lea
mov
pop
pusha
fcmovnu
push
mov
push
add
mov
aad
inc
xchg
xor
inc
cmp
shl
out
mov
in
push
ret
mov
push
fcompl
mov
sub
int
dec
jl
and
jbe
mov
jp
add
ljmp
cmp
insb
sbb
adc
sbb
and
dec
arpl
dec
fcomps
cmpsb
pop
mov
in
insb
xchg
xchg
dec
push
jmp
cmp
test
jp
ja
scas
cmc
test
push
sub
repnz
outsb
mov
aaa
lea
sub
xchg
ret
cmpsl
jp
idiv
xchg
stc
movl
popa
ficoml
sahf
jb
imul
mov
int3
lahf
pop
and
mov
pusha
or
xchg
adc
aam
jns
push
mov
lret
movb
mov
lcall
mov
mov
xorl
shlb
icebp
call
xor
cwtl
test
lods
jno
jo
into
imul
push
mov
fwait
jp
lret
lahf
das
jge
sbb
mov
mov
clc
insl
or
push
jmp
repnz
and
je
mov
xor
jl
mov
mov
inc
pusha
ss
mov
int3
add
jbe
push
push
sahf
scas
jb
repz
gs
insl
ret
scas
mov
lret
xchg
bound
aam
lret
inc
cltd
ja
inc
pop
cmp
inc
stos
test
mov
cwtl
int3
ds
pop
negl
xor
jle
test
and
aaa
sbbl
je
jp
ret
adc
test
pusha
ror
cld
dec
rorl
cli
sarl
lods
sub
cmp
dec
pop
insb
dec
dec
idivb
fildll
aaa
pop
add
fwait
cld
pop
jg
xlat
je
push
mov
ret
fnstenv
ja
adc
push
pop
xchg
mov
inc
pop
cmp
jl
jns
flds
test
ja
arpl
cld
xchg
adc
jae
pushf
sub
sahf
pop
loop
das
or
dec
int
pop
push
movsl
push
mov
lods
ffreep
push
mov
push
test
or
int3
decl
shlb
movsl
inc
mov
sub
scas
sahf
jp
add
inc
pop
sbb
and
push
mov
or
cmpsl
orb
adc
dec
mov
xor
fcomi
jns
gs
add
mov
pop
hlt
lock
mov
mov
repnz
icebp
aad
adc
or
fsubrs
repz
sub
jb
in
aaa
inc
dec
push
xor
jg
int3
sub
imul
ljmp
lock
cmpsb
adc
loope
mov
repnz
mov
insb
sub
add
push
mov
fwait
adc
mov
cmp
cwtl
repz
fldcw
jl
into
rol
sub
arpl
imul
test
xor
mov
and
mov
cmpsl
mov
cli
nop
insb
test
sbb
hlt
sub
pop
inc
mov
fimull
adc
cwtl
inc
int3
mov
cmpsl
pop
gs
call
mov
sahf
mov
enter
push
rcr
mov
jo
mov
push
add
divl
insb
cmpsb
cwtl
cmpl
xchg
xchg
dec
cmp
repz
dec
inc
cli
mov
hlt
push
imul
and
int3
insl
shll
mov
mov
scas
je
mov
mov
xorl
inc
in
mov
lods
test
stc
pop
inc
pop
adc
dec
ret
test
in
xchg
jg
aam
sbb
or
mov
cmc
mov
andb
and
lea
inc
outsb
dec
in
cmpsb
insb
add
shll
mov
es
sbb
aas
in
cli
and
loop
testl
pop
leave
pop
out
jns
adc
sub
xor
aad
pop
nop
je
or
mov
pop
or
sbb
or
cmp
push
fisubrl
bound
jmp
stos
inc
sub
push
pop
cmp
xchg
iret
push
sahf
mov
fdivl
jecxz
dec
mov
xchg
dec
lods
xchg
notb
ss
sbbl
pushl
dec
fadds
addl
xchg
push
and
xchg
pushf
sbb
int
shr
ja
xchg
in
hlt
cwtl
jae
lea
fucomp
dec
testl
add
push
fldl
addr16
imul
lods
push
or
xor
and
call
push
leave
js
xor
stc
popa
or
xor
jns
jns
lret
inc
xchg
call
mov
mov
dec
movsl
mov
shll
mov
xchg
dec
shrl
mov
nop
jmp
in
mov
cltd
mov
jno
test
nop
mov
fsubs
inc
repnz
pop
insb
mov
mov
scas
shrl
int3
push
and
lods
in
xor
lret
push
sub
pop
loope
or
repz
pusha
mov
sbb
inc
or
cli
fidivrl
adc
mov
inc
ret
sbb
and
adc
ljmp
mov
mov
test
sti
and
in
add
mov
push
xchg
mov
sbb
pop
repnz
les
sti
xor
js
cmp
or
mov
sub
sub
sbbb
and
mov
roll
fsubrl
pop
imul
xor
inc
cmp
or
cmp
pop
cmpb
dec
xchg
sbb
cmp
mov
hlt
sub
aad
adc
push
push
cmp
shll
mov
xchg
fdivrl
add
loop
xor
sub
pop
movsb
inc
xchg
or
call
shl
lods
inc
adc
je
popa
negl
shl
test
and
or
cmc
mov
out
xor
or
cltd
push
jmp
test
jns
rcrb
sub
cwtl
pop
lret
push
lret
cmp
std
jo
aaa
in
cltd
inc
fcom
mov
out
stos
sbb
inc
ljmp
xorl
stos
sub
jo
jl
xchg
orb
stc
lcall
xor
sbbb
push
out
add
sbb
int
lods
sarb
stc
into
sbb
inc
add
mov
dec
cmpsb
ljmp
push
ja
repnz
cli
or
loope
jbe
sarb
sbb
inc
test
lea
fildl
scas
test
pop
insl
push
mov
and
sahf
movsl
nop
mov
leave
dec
inc
or
in
mov
nop
push
mov
popw
push
mov
lret
mov
int3
pop
nop
out
dec
inc
mov
ret
mov
inc
xchg
mov
cmp
mov
mov
xchg
enter
jo
cwtl
sub
adc
call
out
inc
imul
iret
push
cmp
mov
aaa
xchg
out
mov
jae
dec
scas
ljmp
test
push
mov
stos
dec
lds
repnz
or
shll
dec
adc
cwtl
sbb
js
pop
or
outsl
add
dec
aaa
mov
push
jge
push
or
movsl
cmp
sub
aam
xchg
js
dec
inc
cmpsl
ret
dec
mov
sti
cwtl
aas
push
xchg
xchg
stos
outsl
leave
xor
cli
jl
xchg
push
sub
rorb
loop
js
adc
mov
imul
dec
inc
mov
imull
push
leave
aas
jmp
jnp
loop
loop
fimull
lods
or
sub
lods
and
clc
push
xchg
stos
adc
out
mov
jno
mov
imul
dec
push
cmp
push
or
mov
lods
out
cmp
xor
and
jmp
inc
fdiv
imul
dec
lcall
jnp
loop
pop
icebp
ja
sbb
in
testb
cmpsl
sbb
into
or
xor
xchg
insl
inc
cmp
lock
arpl
js
gs
push
loopne
adc
jb
add
ds
inc
sub
push
out
mov
sti
adc
sub
mov
xor
outsl
cmp
mov
mov
je
add
mov
mov
cmp
adc
xor
cmp
ss
xor
mov
push
aaa
ljmp
or
fnstenv
in
cs
fadds
aad
sub
inc
popf
repz
dec
push
clc
fistpll
out
dec
test
insw
adc
pop
or
add
int
jge
or
faddl
cmp
inc
sub
fs
add
inc
cltd
xchg
cmpsb
jge
inc
and
mov
add
stos
fdivrl
popa
dec
bound
movsl
adc
sahf
je
push
das
xor
ss
sbb
rcr
pop
test
mov
aad
xchg
pop
inc
lods
sub
add
sub
mov
mov
out
mov
mov
cmp
pop
repz
sub
or
fbstp
cwtl
adc
mov
xchg
sbb
and
gs
insb
ret
mov
out
mov
nop
sti
add
es
xchg
xor
in
push
aam
mov
mov
mov
or
mov
pop
out
pop
in
fcompl
fstpt
pop
icebp
imul
dec
mov
mov
xor
mov
ret
pusha
sbb
dec
clc
clc
cmpsb
inc
repz
popa
inc
dec
bound
insl
out
xchg
jmp
cmpsb
sbb
sub
push
leave
or
jbe
fisubrl
push
stos
roll
xor
sub
pop
pop
inc
lgs
add
int3
jge
or
out
jmp
adc
push
xchg
fisubrl
das
les
dec
imul
mov
fdivl
or
mov
sub
mov
mov
sub
iret
jbe
andb
notb
into
or
out
movhps
inc
dec
pushf
rcr
jns
popa
and
pop
fbstp
std
or
mov
adc
pop
pop
adc
pop
or
ficomps
or
lahf
lods
inc
rcrl
mov
scas
pop
and
stos
fisubrl
push
aad
testb
or
cli
mov
push
or
lcall
jbe
mov
inc
cwtl
pop
lods
jno
fnstcw
or
stos
shlb
xor
es
add
xor
data16
fistpl
xchg
test
insl
sub
imul
sbb
ss
sbb
sbb
cwtl
push
repz
iret
les
aaa
gs
out
scas
std
lret
push
shlb
cmp
data16
lods
cmp
pop
inc
test
sub
mov
xchg
mov
dec
push
adc
cmpsl
shrb
jb
mov
lods
testb
sub
outsb
jl
mov
test
or
adc
dec
cs
daa
cmp
mov
daa
pop
mov
inc
into
and
lds
pop
jmp
es
cwtl
sahf
ficoms
mov
jl
sti
mov
testl
push
cmpb
int
dec
add
lahf
rorb
cmp
push
loope
add
mov
fildll
cmp
mov
arpl
mov
stos
push
push
cmpsl
push
pop
or
and
fdiv
dec
pop
sub
mov
xor
lds
pop
shl
add
xchg
mov
ss
push
push
xchg
sbb
je
jnp
jno
sbb
ja
in
pop
imul
shr
lgs
aam
and
daa
std
decl
das
dec
std
or
cmp
enter
stos
or
add
push
aad
into
mov
dec
test
inc
enter
mov
dec
pop
jno
push
jg
outsb
mov
dec
cmc
sbb
pop
mov
aas
pop
or
push
loope
inc
jecxz
and
imul
decb
sub
fistps
out
lcall
test
sub
pusha
sbb
cmpsl
inc
push
mov
mov
cmp
sub
cmp
es
or
pop
jecxz
add
imul
cmp
jle
js
push
adcl
sub
cmp
jo
dec
xchg
call
add
ss
sub
stos
das
push
nop
sub
lahf
sbb
jae
aaa
test
jmp
or
cmp
lods
inc
sbb
xchg
add
mov
andb
scas
out
sbb
rcrl
mov
fnstsw
imul
push
lock
push
mov
push
repz
and
pop
jp
add
sub
iret
jns
cmp
mov
int
jb
lret
leave
negb
inc
and
jno
mov
mov
clc
adc
sub
out
hlt
mov
cmp
icebp
pusha
push
ret
mov
and
mov
imul
mov
add
cmp
clc
mov
mov
xchg
xchg
pop
dec
pusha
dec
dec
adc
iret
mov
adc
lea
mov
mov
hlt
dec
cld
xchg
jge
or
leave
pop
push
mov
out
mov
mov
lahf
les
testl
ss
test
es
loopne
cmp
mov
xchg
adc
adc
in
push
out
in
xchg
push
sub
arpl
popl
pushf
cli
push
and
dec
aad
aam
dec
or
xchg
inc
push
and
push
inc
shll
jmp
dec
dec
repz
inc
call
sub
adc
add
mov
add
xor
aad
and
xor
arpl
inc
js
pop
pop
mov
jl
rcl
enter
lret
sbb
out
rorb
cmc
int3
push
adc
pop
stos
ret
lcall
sbb
jmp
push
insl
sub
in
push
sahf
and
lods
ret
jle
insl
xorb
fwait
test
in
es
movsl
cmp
dec
cmpsl
imul
ljmp
out
lcall
jmp
dec
sti
or
cmp
xchg
pop
stos
in
aam
sbb
adc
push
sbb
xor
fisubrl
outsl
daa
adc
addr16
movsb
adcl
stos
test
adc
outsl
leave
xor
push
mov
into
jge
repz
popl
mov
dec
and
or
daa
or
stos
shlb
mov
mov
aaa
cltd
shl
jo
push
outsb
mov
rcrb
sub
push
push
adc
jle
out
inc
andb
push
mov
hlt
jp
imul
sub
mov
dec
and
push
shl
popa
les
fbstp
xchg
cmp
lods
pop
gs
je
push
xor
setnp
jge
loopne
cmp
pop
or
sub
mull
mov
xchg
cmp
movsb
mov
xorb
push
cmpsb
in
cld
icebp
mov
cmp
xor
jle
sbb
out
mov
hlt
mov
stos
test
cli
fadd
push
movsl
cmc
repz
in
jle
dec
les
or
movl
dec
fs
dec
andb
pop
daa
shll
imul
imul
shlb
jle
jo
adc
inc
shl
not
mov
jmp
cs
sarb
push
popf
scas
jmp
lret
stos
arpl
call
jmp
mov
leave
daa
fldt
addr16
dec
dec
mov
into
repz
loop
jl
fstpl
ret
into
sbb
test
movsb
jnp
add
xchg
hlt
mov
out
mov
outsl
int
flds
jne
jb
out
sbb
pop
jmp
je
inc
shll
jae
insl
pop
ret
jle
jp
dec
frndint
popf
inc
ret
jae
jmp
add
pop
cmc
mov
cmc
in
das
xchg
add
jne
lea
xchg
xchg
jae
push
jno
leave
mov
les
insl
jae
sub
mov
push
or
mov
mov
test
int
int3
lods
push
imul
pop
jg
cwtl
stos
ror
xchg
test
popa
jl
adc
aaa
repnz
loope
pop
ljmp
pop
aam
lds
popa
pop
fistl
fs
stos
jne
je
mov
sti
andnps
sbb
and
adc
inc
ret
pop
mov
movsb
push
sub
push
sub
pop
hlt
jns
fs
out
pop
ljmp
pop
push
jae
inc
fcomps
je
jne
popf
cld
pop
pop
push
mov
loope
icebp
sbb
mov
mov
jb
shrl
push
push
ffreep
push
or
adc
dec
out
ret
pop
add
jecxz
inc
popw
movsb
cwtl
es
push
adc
xor
out
dec
jge
xchg
jns
xchg
push
and
xlat
ret
iret
inc
loope
sbb
jae
mov
cmp
jg
add
daa
fldcw
jnp
mov
mov
adc
sub
sbbl
daa
notl
cmp
push
dec
in
dec
pop
outsl
orb
xorb
sbb
cmp
mov
mov
cmp
aad
mov
mov
or
push
pop
add
fimuls
xor
sbb
push
addr16
mov
addr16
sub
outsb
fildll
mov
pop
mov
push
arpl
lcall
arpl
or
mov
cmpsl
adc
cltd
dec
cmp
repnz
and
and
into
lods
xchg
sbb
shl
ja
cwtl
nop
lods
enter
dec
loope
pop
sub
pop
xchg
loop
cmp
mov
xor
and
rcrb
add
cltd
fdivs
cld
adc
sub
int3
aas
and
std
jbe
mov
xlat
lods
sub
insl
fisubrs
lock
jmp
inc
repnz
and
out
mov
fs
rcrl
cmc
sub
ds
xchg
in
leave
testb
sbb
push
jns
aaa
rcrb
mov
mov
mov
loop
inc
pop
cli
inc
stos
inc
jnp
mov
fdiv
add
ret
sarl
inc
push
fbstp
or
stos
out
jl
xchg
nop
xor
repz
call
int3
aad
adc
add
sub
or
push
jge
lock
jp
sub
add
leave
cwtl
cli
jp
testl
in
push
xchg
popa
pusha
ja
add
mov
jnp
lret
outsb
pop
lret
push
cmpsb
pop
mov
pop
and
push
cltd
sub
mov
popf
mov
int
sbbb
or
data16
cmp
jmp
mov
pop
push
ret
dec
divl
xchg
push
pusha
out
jns
xchg
pop
lahf
add
pushf
addr16
sbbb
aad
push
jno
inc
das
bound
lret
jl
pop
mov
pushf
cs
push
cmc
lods
inc
daa
jbe
mov
jecxz
push
dec
dec
stc
xchg
sbb
in
imul
enter
inc
in
into
adcl
icebp
cmp
push
decb
dec
into
push
mov
movsb
enter
lods
pop
cmc
fstpl
or
dec
mov
mov
add
stos
ret
dec
sub
mov
mov
pop
push
push
gs
ret
pop
mov
movsl
mov
xchg
lret
data16
xchg
jae
mov
mov
fidivs
xchg
ret
je
xlat
popf
fnsave
out
sub
mov
add
mov
dec
jg
pusha
add
and
pop
dec
stos
xchg
jae
cs
pop
lods
mov
mov
sbb
and
mov
add
iret
jp
push
mov
icebp
mov
fnstenv
and
mov
mov
mov
jecxz
inc
clc
mov
mov
pop
xchg
add
test
push
jmp
sub
mov
cmpb
jp
lcall
sub
imul
sbb
or
jno
nop
insl
jbe
les
push
notb
cmp
sahf
repz
push
push
insb
adc
test
cltd
cmpsl
dec
out
mov
and
movsb
sbb
mov
int3
int3
pop
lods
pop
addb
hlt
adcl
lret
pop
mov
nop
ss
jmp
jmp
cmp
stos
push
sub
xor
dec
pushw
push
sbb
psraw
dec
popf
sub
sarb
lock
leave
pop
enter
sbb
jecxz
xchg
loopne
dec
fmull
jp
ret
inc
popf
jecxz
or
jo
push
mov
mov
cmc
decl
sub
int
mov
inc
pshufw
repnz
aas
loop
push
and
xor
ljmp
jbe
movsl
mov
popa
stc
sub
pushf
cli
adc
enter
push
out
insb
ret
add
cwtl
aad
stc
pop
pop
testb
sahf
jle
ret
imul
xchg
test
and
imul
stc
mov
lods
aas
add
push
mov
mov
std
iret
lea
jbe
mov
cmp
dec
and
jmp
xchg
stos
into
mov
xor
daa
dec
lock
icebp
adc
mov
mov
dec
or
out
add
pop
jmp
mov
or
out
orl
add
cltd
mov
inc
sub
mov
cmpsl
pop
sbb
xor
ret
push
jae
cmp
mov
outsb
mov
pop
push
dec
xor
clc
lods
out
test
push
imul
push
icebp
sbb
pop
xor
and
ret
push
scas
add
aam
xor
test
popf
hlt
xor
cmp
xchg
ds
and
inc
fsubrl
movsl
mov
push
inc
data16
sub
xchg
dec
das
mov
mov
into
push
mov
mov
add
arpl
adc
std
pop
fs
mov
lret
cld
ljmp
imul
fxch
into
sbb
jl
lahf
push
push
out
inc
mov
in
pop
sahf
loopne
mov
fldl
pop
sbb
adc
bound
inc
ljmp
clc
in
mov
shll
test
mov
xlat
pop
dec
mov
sub
fwait
push
mov
inc
decb
ret
pop
fcom
jmp
ret
dec
je
pop
cltd
push
and
rcrb
push
shlb
shlb
jp
fisubl
and
pop
lds
and
lea
repnz
ss
iret
decb
mov
popf
stos
jae
cmpsl
out
incb
outsl
cld
sub
jp
test
mov
or
and
xor
insb
jns
lods
lea
scas
icebp
data16
movsl
adc
ss
adc
sub
cmpsl
lcall
inc
stc
jnp
cmp
push
mov
xchg
into
lock
mov
add
mov
andb
sti
cmc
int3
scas
test
js
aas
sbb
add
ja
jne
shlb
mov
rcr
or
lret
xchg
jle
arpl
and
mov
stos
push
push
pop
test
pop
idivl
push
popa
ret
repnz
pop
push
push
popa
mov
xor
std
mov
and
cld
pop
dec
add
in
stos
xor
cmpsl
or
scas
jb
mov
popa
in
scas
adc
ret
adc
cmp
xchg
mov
sahf
mov
out
loop
or
aaa
dec
mov
mov
fidivs
mov
ss
push
push
mov
icebp
stos
aaa
add
scas
or
cmp
fwait
les
out
mov
jbe
sbb
lea
cs
lahf
scas
pop
sahf
pop
out
dec
testl
aam
lret
pop
cltd
cmpl
adc
mov
push
sbb
cld
outsb
in
cmp
mov
adc
or
jp
sahf
pushf
xchg
and
les
xchg
cli
sbb
jmp
mov
stos
mov
jb
pop
insb
icebp
ja
push
das
sbb
or
adc
test
fs
repnz
out
push
iret
add
add
xor
mov
xor
inc
insl
xor
lcall
pop
mov
ficoml
aam
rcrb
add
add
xchg
ret
xor
out
out
xchg
icebp
stc
sbb
dec
das
sbb
mov
jle
add
scas
icebp
scas
loopne
lods
jmp
imul
lea
stos
adc
push
out
mov
xchg
or
inc
pop
mov
pop
fidivl
jns
push
inc
insl
stos
ds
call
lea
fsubl
mov
fsubl
dec
xchg
cld
push
mov
mov
inc
int
push
outsb
loope
dec
into
mov
sbb
loop
jno
mov
ja
iret
pop
sbb
fisttps
movsl
xor
roll
mov
mov
loopne
inc
popa
call
or
sbb
jno
pop
icebp
lcall
mov
dec
add
cmc
pop
mov
shrl
mov
divb
jl
mov
mov
dec
sar
sbb
js
icebp
lea
add
jg
sbbl
lahf
fbstp
test
mov
xchg
fsub
sbb
repnz
popa
jnp
fnstsw
shl
mov
push
scas
lcall
or
pop
xchg
insb
mov
push
jbe
dec
ljmp
sub
xchg
iret
es
scas
xchg
dec
lods
test
imul
lods
shrl
xor
imul
fsubrl
inc
sahf
xor
daa
cmp
cld
pop
rcl
sbbl
jecxz
mov
loope
insl
faddp
sbb
insl
mov
jbe
sbb
push
ljmp
xor
pop
mov
sbb
push
lret
cs
sbb
ja
add
repz
mov
jle
sub
dec
xor
lret
enter
clc
xchg
push
and
out
inc
ljmp
pop
push
int
int3
sti
dec
mov
adc
daa
incb
movsl
test
push
cmp
inc
popf
jl
ret
leave
and
dec
xor
ja
and
push
xchg
fsubr
out
mov
jnp
xor
sub
pop
rol
or
lcall
aad
lar
js
jb
pop
jmp
in
negb
xchg
dec
std
xchg
mov
into
insl
clc
mov
out
xor
mov
mov
sub
push
dec
pop
cmp
lret
int3
mov
mov
out
inc
outsl
pop
ja
filds
dec
and
and
mov
pop
add
mov
aaa
adcl
pop
aam
dec
mov
ret
xor
sahf
insl
pop
mov
inc
xchg
xchg
test
daa
out
mov
movsl
popl
add
push
push
mov
ret
adc
mov
inc
push
cmp
les
mov
std
sahf
adc
add
and
imul
dec
mov
sbbl
mov
jp
inc
mov
xchg
ds
push
jno
adc
sahf
cmp
sub
xchg
imul
lds
aad
mov
addb
clts
outsl
pop
std
subb
jmp
and
adc
inc
dec
int
mov
and
filds
mov
jns
adc
jecxz
cmp
fs
notb
enter
insb
fcmovnbe
call
jp
cltd
subl
sbb
aas
js
test
jmp
ficomps
ret
movsb
jnp
dec
dec
mov
sbbb
mov
in
pop
jno
ds
dec
lahf
pushf
pusha
cmp
shl
lret
notb
jbe
pop
outsb
add
push
out
add
ds
pop
add
fsubl
sub
fistl
xchg
movsb
mov
aad
inc
push
pop
mov
rorb
cmp
sbb
sub
popa
aam
sub
les
sti
lret
add
cli
movhps
das
fisttpl
sahf
int
inc
fcos
int3
dec
fidivrl
mov
imul
imul
pop
push
es
addr16
xchg
outsb
jle
xor
xor
pop
adc
inc
enter
popf
pop
cmpsl
xor
mov
dec
lods
push
jo
rcrl
adc
cmpsl
jne
push
mov
imul
mov
dec
shll
int
aaa
gs
stc
cld
fsubrp
fcmovne
push
cwtl
add
and
jl
lcall
loopne
mov
xchg
sbb
das
or
ljmp
and
xchg
fsub
or
int
sbb
adc
inc
out
jnp
jo
or
xchg
sub
adc
mov
not
cltd
add
daa
rorb
jae
and
add
jge
inc
jp
ret
ret
call
aas
lahf
pushf
mov
xor
dec
xchg
jns
xor
mov
es
dec
aaa
pop
popa
jg
enter
pop
pop
inc
pop
mov
andb
and
cmp
or
ja
cmp
inc
ds
loopne
push
call
leave
xchg
mov
jne
mov
std
int
push
mov
fstpt
cmpsl
jle
movsb
in
pusha
cld
sbb
cmp
push
stos
jo
in
lods
or
outsb
adc
and
xchg
es
pop
pop
pop
repz
mov
mov
ficomps
or
int3
mov
jbe
cmp
insl
aad
sub
mov
push
or
loop
adc
jnp
fwait
cmpsl
das
adc
dec
xchg
cmp
pop
outsb
and
push
dec
lret
and
push
pop
inc
push
cmp
dec
mov
insb
adc
fnstcw
cmp
xchg
call
dec
mov
mov
repz
xchg
add
cmp
scas
xchg
sbb
add
hlt
push
icebp
and
sbb
mov
add
data16
aas
adc
xor
xchg
mov
fistpll
insl
mov
movsl
nop
inc
mov
sbb
jle
cmp
or
or
dec
xlat
xchg
test
das
cltd
cmpsb
fcmovb
fsubrp
jle
jmp
push
fabs
inc
mov
jmp
cli
out
int
in
insb
dec
rorb
push
cmp
loope
call
cltd
out
outsl
mull
mov
outsl
fdivr
jne
mov
push
jecxz
int3
arpl
or
fs
aaa
and
lock
xor
jle
gs
cli
jne
push
pop
test
mov
syscall
pushf
adcb
mov
scas
stos
hlt
rolb
hlt
and
jecxz
int3
inc
aaa
mov
xchg
sbb
out
mov
int
inc
sub
shll
stos
mov
stos
dec
ds
jns
js
fisubrl
jle
jno
out
test
or
stc
push
push
xor
js
add
fdivrl
stc
ljmp
and
push
mov
push
call
jp
daa
cmp
mov
push
jns
nop
das
push
movsl
cmp
daa
mov
dec
aaa
xor
cmpleps
mov
sbbb
int3
mov
enter
mov
popf
movsb
adc
and
mov
push
popf
xchg
mov
fisubrl
stos
cmp
shlb
xor
push
out
sti
ror
out
push
fs
ss
dec
hlt
push
dec
jmp
imul
push
test
mov
bound
ret
in
test
jb
fstpl
aad
scas
orb
jbe
or
or
into
mov
dec
insb
out
aad
int
push
outsl
add
mov
bound
sbb
xchg
or
lret
push
insl
mov
mov
jmp
inc
push
jge
sbb
pop
push
pusha
sub
repz
out
dec
sub
push
cmp
cmp
or
addb
xchg
out
dec
bound
mov
ficompl
scas
bound
jns
xchg
and
inc
sbb
mov
pop
push
mov
stos
mov
fidivs
adc
mov
push
pushf
or
jb
mov
mov
ror
fimull
mov
rorb
lods
jg
scas
push
or
pop
scas
dec
push
sub
pop
fiadds
xchg
mov
pop
mov
jo
xchg
xchg
dec
jecxz
test
stos
mov
xor
push
fidivrs
dec
inc
jae
cli
xor
imul
dec
mov
outsl
rclb
cmp
aam
inc
mov
dec
enter
sub
das
mov
jle
adc
jne
clc
cmpsb
les
jns
pop
adc
inc
jnp
loopne
fdivp
nop
ret
lret
fwait
test
inc
mov
mov
lds
dec
push
je
cltd
pop
lods
andl
ds
sbbb
fisubrs
repz
andl
xchg
push
je
push
lods
jb
mov
leave
aam
icebp
add
push
add
into
fistl
movntps
pop
jo
adc
jp
dec
sbb
imul
pop
add
insb
mov
mov
in
stc
mov
pop
bound
jnp
in
push
push
add
rol
mov
dec
into
dec
sbb
dec
push
cwtl
testl
mov
inc
push
jl
arpl
xor
hlt
mov
or
test
add
je
jbe
push
in
rcll
sar
rcrb
out
inc
sbb
mov
inc
jp
mov
xor
inc
push
xchg
dec
aas
mov
in
push
xor
testl
lahf
lods
or
shrb
sarl
ss
mov
pop
shrl
daa
sub
test
inc
outsb
popf
shrb
pop
sbb
lods
add
aam
jecxz
movsl
adc
fs
push
mov
sbb
out
cltd
outsb
jb
mov
cmp
jmp
pop
sbb
adc
call
xchg
into
mov
imul
cmp
push
jno
mov
xchg
jge
outsb
mov
mov
push
push
test
shrb
bound
adc
cmp
mov
es
pop
clc
or
insl
rcr
pop
and
xor
cmp
cmp
adc
hlt
cmpsb
add
mov
adc
mov
push
gs
inc
clc
jmp
sub
xchg
sub
mov
jp
xor
mov
xchg
lods
push
addb
push
mov
lds
test
shlb
pusha
aad
xchg
in
test
pop
test
jne
sbb
xor
test
sbb
fstps
test
push
mov
or
add
and
fwait
jle
adc
ljmp
inc
mov
daa
daa
push
test
push
sub
lret
loopne
mov
push
mov
icebp
sub
pop
test
inc
lds
sbb
dec
inc
cs
les
ja
shr
inc
cwtl
xchg
in
pop
xor
sbb
sahf
adc
shrb
cs
cmp
push
xchg
pop
sbb
inc
das
dec
iret
arpl
mov
or
insb
xlat
es
cmp
or
inc
pop
out
sub
loopne
adc
adc
cltd
rol
js
push
mov
mov
decl
lahf
cmp
mov
fdivl
shlb
fistpl
into
in
leave
xchg
cmp
sbb
into
mov
subb
jno
int3
xchg
call
enter
mov
sbb
inc
ss
jb
movsl
mov
mov
fcmovbe
popf
or
iret
divb
and
push
repz
filds
arpl
aad
in
test
nop
or
mov
clc
movsb
fmulp
out
push
pusha
lods
adcb
test
add
cmc
bndstx
pusha
jl
outsb
mov
pushf
xor
pop
cwtl
fs
scas
jno
mov
stos
movsl
mov
orl
in
mov
sbb
mov
cs
add
jmp
mov
sub
sub
xchg
bnd
xchg
in
cwtl
mov
cli
mov
jmp
insb
loopne
shl
loop
outsb
inc
ret
das
daa
mov
sti
addb
xchg
or
xchg
push
clc
clc
js
cmpsb
leave
inc
mov
outsl
xchg
out
sbb
add
sub
imulb
pop
jg
enter
hlt
add
dec
mov
imul
sbb
dec
loopne
cmp
mov
sbb
movsb
add
mov
ficoms
cli
push
dec
push
daa
cli
jnp
fadds
lret
leave
push
jle,pn
sbb
fidivrl
add
test
sbb
push
inc
push
jmp
mov
fistpl
movsb
pop
mov
jns
jl
test
pop
jb
nop
out
lods
inc
cwtl
cltd
in
inc
mov
imul
mov
or
xchg
sub
xchg
jp
adc
xor
lods
lret
xor
das
add
sbbb
sub
data16
mov
mov
fstl
pop
imul
stos
mov
stc
int
cmp
test
dec
adc
pop
and
rorb
jbe
jecxz
pop
ret
pop
pop
push
or
push
cmc
mov
xchg
xchg
das
or
pusha
aam
loope
xorb
jbe
push
loop
add
mov
add
mov
out
and
dec
fwait
sahf
clc
push
mov
cld
ss
insl
add
call
lock
sbb
cmp
std
fucomi
push
stos
cmp
pop
pop
cld
xchg
sbbb
dec
xchg
push
cmpb
cmp
sub
pop
cmp
clc
xchg
pop
cmpsl
dec
inc
mov
sub
mull
dec
pop
jle
test
sbb
popa
mov
adc
adc
mov
adc
inc
pop
subl
sti
and
push
mov
cmpsb
out
cmp
sarl
push
dec
pop
stos
mov
pop
jo
xor
push
and
mov
fdivl
jb
or
add
add
fdivl
dec
repnz
in
or
cmp
icebp
mov
shrb
jg
jecxz
inc
out
add
dec
sarl
mov
cwtl
ror
fs
xchg
insb
cmp
subb
or
lock
daa
mov
mov
pop
mov
add
adc
adc
pop
push
inc
shl
aas
lea
mov
mov
stos
mov
int3
push
imul
mov
pop
sbb
les
mov
or
or
sahf
xchg
jp
xor
jg
mov
jg
fdivr
push
or
outsb
ret
shl
les
xsha256
cmpsb
adc
sub
jb
imul
adc
mov
lret
mov
add
ret
mov
inc
inc
fnstenv
loop
add
or
stos
mov
jb
scas
mov
aam
mov
aaa
shrb
ret
adc
pop
ds
sti
imul
subb
pop
pop
push
movsl
cmp
std
and
sub
add
mov
jmp
pop
outsl
xor
imul
sub
cli
mov
ret
repnz
clc
cmp
adc
pop
xchg
xor
jno
push
fwait
aam
repz
lods
push
pop
cmp
cmpsl
out
sti
ficoml
mov
sub
sub
sub
mov
insb
push
popf
aaa
jb
jge
and
xchg
push
mov
push
cld
cmp
nop
clc
sbb
mov
and
inc
dec
add
test
jb
lds
je
sub
mov
repz
mov
xor
mov
pop
fcomps
dec
jp
ja
fisubs
in
sbb
push
lods
mov
mov
sbbl
push
in
adc
lods
pop
pushf
push
nop
cmp
mov
jmp
mov
int
daa
icebp
jp
mov
inc
mov
out
inc
lock
lds
or
stc
popf
mov
test
pop
stos
stc
lret
bound
fs
out
mov
xchg
mov
in
scas
lret
lcall
jbe
js
test
shrb
jl
dec
pop
jo
mov
sub
sti
iret
jae
scas
and
inc
addb
jecxz
inc
inc
xor
dec
dec
das
lock
bound
cltd
fadds
adcl
jmp
dec
shll
add
outsb
ja
mov
mov
cmpsb
lret
mov
inc
jmp
push
addl
fcoms
scas
imul
adc
mov
out
mov
icebp
pop
out
imul
jle
ja
stc
dec
push
out
cmp
cmc
dec
inc
push
xchg
adc
and
bound
adc
call
aaa
adcb
repz
test
mov
xor
inc
rcl
xor
push
add
dec
mov
sbb
ret
or
jp
adc
js
sti
jbe
iret
stos
lds
jp
ret
fsubs
aas
push
mov
xor
or
add
dec
xor
xor
sbb
cmp
lahf
cs
jns
gs
mov
shl
jle
sbb
jecxz
testl
xchg
push
imul
sub
jecxz
mov
jbe
add
test
ficoml
xchg
ret
dec
cmp
fisubrs
test
cs
inc
ret
repnz
scas
push
out
fdivrl
insb
lock
call
scas
aam
fiadds
es
sub
out
lods
and
dec
xor
rcrb
xchg
and
dec
data16
jp
push
loope,pn
andb
mov
mov
jge
xchg
mov
outsl
push
and
sbb
and
sbb
push
dec
inc
pop
cmp
imul
popf
sbb
pop
loop
repz
hlt
aaa
js
sub
rorl
rcrl
test
mov
dec
pop
std
movsb
repnz
dec
xchg
movsl
outsb
mov
aaa
rcrb
negl
xchg
cmp
repz
mov
push
mov
cltd
adc
push
movsb
cmp
in
push
pop
shrb
cmp
mov
add
xor
je
test
add
sbb
sbb
cmp
mov
fbstp
adc
pusha
lods
sti
mov
out
xchg
das
fmulp
icebp
pop
repnz
data16
xchg
sub
or
aad
shrl
shl
test
jbe
push
pop
movsb
imul
les
push
outsl
add
in
xchg
or
sarl
pop
loop
nop
cmp
mov
xorb
lret
lds
mov
imul
mov
int3
jg
imul
cmp
addr16
pop
fidivrl
and
jge
add
mov
mov
sbb
pop
aas
lret
insb
push
add
mov
pop
ja
pop
jbe
shl
mov
jl
add
cmp
jne
add
sbb
or
ljmp
jge
leave
stos
jmp
push
mov
push
dec
xor
push
add
jmp
xor
ss
push
mov
jp
mov
jecxz
pop
outsb
add
sbb
mov
std
lods
inc
sub
fwait
ret
mov
jp
dec
cmp
jmp
lea
push
or
xchg
mov
lahf
mov
test
lret
cld
push
clc
movsl
xchg
lret
fnsave
aam
dec
clc
sti
sub
xor
test
dec
nop
sub
sti
inc
in
mov
mov
xor
leave
aad
stos
add
test
icebp
aad
pushf
fwait
sti
nop
test
jae
and
pop
jbe
adc
xchg
mov
mov
or
dec
or
loopne
fucom
push
movsl
fcoms
mov
xor
cmp
xor
aam
aas
xchg
or
test
inc
push
adc
dec
lea
or
addr16
jmp
xchg
mov
roll
mov
ljmp
jl
hlt
pop
loopne
inc
push
jnp
fwait
insb
fs
test
mov
notl
rclb
add
outsb
mov
push
mov
arpl
xor
mov
lods
aam
push
mov
mov
inc
sbb
xchg
arpl
mov
out
sbb
scas
xlat
sub
mov
pop
jbe
jle
and
sarl
test
mov
push
lods
in
pop
jae
dec
mov
push
cmpsb
cmp
pushf
int3
pop
sarb
jae
xchg
jns
test
mov
jo
push
out
js
negl
nop
jge
ret
movsb
cmp
adc
xor
jns
in
ss
push
mov
inc
jg
mov
loope
jae
push
ret
cmp
hlt
aaa
mov
repnz
xor
cli
cmp
jmp
pop
inc
sbb
xor
std
add
lds
outsb
inc
out
jo
add
pushf
shl
nop
cmp
aas
aad
adc
xchg
jae
push
gs
cmp
call
add
fwait
lock
leave
pop
xor
lock
push
sbb
stos
xchg
rolb
es
xchg
mov
pushf
test
insb
int
mov
mov
in
inc
pop
test
pop
mov
push
and
mov
call
cmpsl
sti
bound
shll
mov
jge
scas
sub
pop
loopne
mov
inc
stc
inc
test
gs
fisubs
jbe
aas
les
mov
scas
cmp
push
dec
push
jge
jle
add
int3
pop
in
scas
pop
mov
iret
int3
mov
add
mov
mov
sub
loop
repnz
or
cltd
xchg
push
mov
mov
mov
fbld
xor
lret
jae
loopne
add
sbb
sbb
lea
push
jbe
cli
faddl
dec
pop
sub
out
xor
xor
fstpl
lret
cmpsl
adc
stos
jp
push
dec
jecxz
adc
jae
and
or
cs
push
or
jecxz
cmp
out
dec
in
mov
push
mov
sbb
ss
das
ret
jae
stc
sub
inc
fimuls
incl
mov
add
push
push
mov
or
fstpt
adc
dec
ret
pop
add
shlb
cmp
popa
lods
dec
adc
loope
xor
cmp
xor
in
mov
sub
sbb
mov
sub
filds
adc
inc
mov
jne
outsl
cmp
mov
dec
rorb
dec
testb
push
xchg
rcll
out
mov
mov
movd
mov
add
jmp
xchg
dec
pop
popf
add
in
or
pop
lods
cs
ret
hlt
js
inc
push
jp
pop
cwtl
hlt
cmp
js
mov
int
mov
ds
es
xchg
jb
cmp
out
cwtl
and
adc
add
xor
sbbb
in
fwait
xor
nop
out
mov
or
pop
adc
out
jp
shr
add
dec
mov
inc
sbb
add
insb
push
sub
or
sub
jb
or
cli
aas
push
xchg
enter
leave
inc
lods
inc
and
and
pop
test
xchg
mov
cmp
int
pop
rcrl
sbb
aam
movsl
in
mov
outsl
out
sbb
mov
push
outsb
push
ret
cmpsb
cmp
xlat
jecxz
popa
loop
loop
cmp
pop
add
ficomps
push
jae
jnp
fisubrs
ret
ret
scas
push
lods
loopne
enter
jmp
outsb
stc
call
push
and
lock
mov
or
xchg
fistpl
outsb
mov
lcall
out
cmp
lods
movsl
sbb
insl
mov
xchg
xchg
adc
cltd
add
test
add
push
mov
loopne
adc
shl
divb
data16
inc
fidivl
lcall
fldl
cwtl
ljmp
mov
mov
stc
and
and
sbb
inc
rolb
inc
and
mov
adc
xchg
out
inc
outsb
mov
jb
add
jmp
mov
mov
cld
sbb
scas
dec
sbb
stos
jmp
and
push
cmpsl
test
jo
adc
sub
xorb
fwait
negb
out
mov
sbb
popa
movl
sbb
test
imul
das
inc
sbb
cmp
fbld
jge
mov
xchg
leave
pusha
mov
sub
cmpsl
mov
mov
stc
cmp
adc
test
push
cld
push
sub
mov
in
sub
sub
pop
mov
add
xlat
repz
in
push
pop
mov
in
das
xor
mov
pusha
cwtl
cltd
mov
xor
sbb
mov
repz
xchg
lock
cmp
xchg
or
adc
jns
pushf
inc
pop
jns
ret
lods
rorl
js
hlt
push
loop
cmp
dec
mov
sbb
push
push
xor
pop
mov
mov
cmp
push
scas
mov
rclb
out
adc
cmp
jecxz
repz
stos
adc
adc
sub
sbb
out
sti
imul
negb
lahf
xor
addb
push
or
lods
adc
decl
mov
adc
add
rol
lret
lcall
jne
popa
mov
dec
cmp
test
outsb
mov
adc
test
lret
push
dec
and
das
mov
mov
mov
xor
push
test
mov
xor
mov
jnp
in
test
xchg
mov
cmpsl
xor
int
sbb
outsl
movsb
in
adc
pushf
call
mov
mov
or
lret
and
loope
into
cmp
aaa
outsb
roll
ret
scas
leave
jb
mov
mov
pminub
lahf
mov
ja
lods
data16
push
push
outsl
lock
lods
stos
test
filds
sbb
xchg
out
stc
enter
pop
in
ds
push
mov
sub
xor
aad
xor
lahf
adc
and
mov
mov
fidivrl
sti
pop
mov
stos
and
mov
mov
pop
cmc
dec
stos
out
mov
les
mov
scas
jno
dec
stc
and
in
aas
dec
call
mov
mov
xchg
lret
push
les
xlat
mull
sbb
or
pop
dec
mov
out
and
xchg
imul
shll
cmp
int
xor
fldenv
dec
pusha
vunpckhps
push
inc
dec
mov
int
out
data16
push
sub
aam
daa
sbb
push
pop
out
add
ds
mov
or
xor
dec
outsl
inc
cmpsb
dec
jmp
or
cmp
pop
outsb
dec
popf
ss
jnp
lds
sub
mov
popf
in
sbb
push
mov
or
aad
mov
outsb
mov
mov
loopne
lods
aam
cld
adcl
idivb
stos
inc
stos
mov
cmp
das
rcll
and
xchg
adc
mov
test
lock
and
test
stos
pop
rol
xchg
divl
sti
jecxz
mov
sub
push
enter
jae
or
push
inc
push
or
sbb
dec
adc
adc
cmpsl
enter
loopne
subb
jle
ljmp
or
sysret
and
xchg
jl
adc
adcl
mov
jg
dec
cs
mov
xchg
gs
mov
loopne
cmpsl
and
iret
fildl
js
mov
mov
loopne
pushf
pusha
jbe
test
inc
call
in
jl
jmp
inc
sbb
sbb
jecxz
or
mov
pop
mov
mov
and
xor
push
ficomps
mov
nop
adc
inc
je
lds
test
jl
cli
xchg
gs
nop
fwait
lcall
xchg
mov
adc
in
rorb
or
jne
xchg
jp
inc
mov
sbb
xchg
mov
sar
xor
and
push
inc
jmp
lret
imulb
xor
fs
dec
mov
sbb
mov
pop
xchg
aad
popf
adc
test
stos
call
dec
jb
xor
test
xchg
fldenv
or
add
inc
loope
add
push
ljmp
jno
mov
xlat
scas
mov
rorl
xchg
jne
aas
leave
sub
pop
fwait
aam
xchg
les
push
fidivs
pop
mul
inc
xor
jge
jmp
mov
inc
mov
in
int
negb
nop
packuswb
inc
fdecstp
scas
fwait
mov
mov
leave
bound
add
jmp
mov
addb
test
sbb
pop
test
repnz
jle
les
push
push
icebp
in
aas
stos
sub
aas
xchg
dec
data16
roll
add
xor
cli
pushf
inc
pop
movsb
cmp
es
add
stc
ss
or
cmpsb
pop
and
lds
ljmp
int
fs
push
jbe
stos
cmp
and
push
out
leave
cmp
je
leave
je
push
cmp
lock
adc
jns
xor
into
test
inc
push
xor
filds
leave
sti
xchg
out
arpl
push
xchg
sub
incl
out
rclb
mov
das
repnz
mov
out
pusha
or
aaa
fwait
xor
mov
jmp
jno
or
mov
std
xchg
movsb
mov
xchg
mov
mov
mov
inc
cmpsl
cmc
inc
inc
ret
sbb
mov
sub
jecxz
pop
div
lret
daa
jg
lods
inc
dec
push
lods
fmull
dec
cmp
push
xor
pop
or
cwtl
xor
out
je
mov
lret
cmp
andl
lods
push
cmp
int3
push
mov
xchg
imul
icebp
lock
repz
dec
inc
adc
cmp
stos
jb
add
mov
push
movsb
pop
add
inc
jb
mov
dec
fldl
daa
jbe
mov
sahf
in
iret
mov
cmp
jle
mov
jge
xlat
mov
pop
std
adc
data16
sarb
or
aas
movsl
nop
mov
xchg
mov
sub
addr16
or
js
jle
enter
aam
or
call
das
xchg
add
in
dec
mov
aam
push
cmp
jne
jb
sbb
cld
and
add
xchg
fadds
dec
fimull
inc
out
xchg
mov
xchg
xchg
mov
inc
cmp
iret
sarb
inc
cld
jecxz
push
adc
push
mov
mov
xor
mov
jnp
das
lods
repz
dec
push
ljmp
loopne
out
std
add
stos
sub
rclb
loopne
add
pop
pop
jnp
popf
test
lds
rorl
clc
cmpsb
jb
dec
cmpsb
hlt
mov
cmp
jno
sbb
jle
test
and
jno
fs
stos
inc
mov
stc
jno
int
cli
mov
mov
xchg
divb
mov
jmp
imul
loop
out
sub
xor
add
sbb
loope
sub
ljmp
lods
xor
xchg
stos
outsb
cmp
fdivl
repnz
das
pusha
adc
pop
mov
jno
xlat
sub
pop
pop
in
push
addb
jnp
leave
push
mov
mov
and
adc
cwtl
jle
mov
ficoml
adc
out
xchg
insb
inc
in
sbb
xchg
xchg
jle
lret
loopne
add
lods
sbb
mov
jge
popa
fsubrs
movsb
je
jmp
int3
vpmulhuw
inc
dec
loop
xchg
loope
lret
sbb
iret
mov
fs
pop
les
ds
cmp
cmpsb
xor
xchg
es
inc
add
fwait
dec
dec
xchg
sbb
movsb
push
addb
sbb
inc
push
fwait
sub
dec
insb
add
fildl
or
daa
inc
jb
icebp
shl
scas
inc
sbb
int3
mov
aam
inc
fisttpl
dec
daa
in
fnsave
push
sti
and
push
fcmovne
insl
mov
ret
hlt
mov
push
mov
mov
repnz
xor
stc
fsubs
jecxz
sub
cmp
lds
inc
sbb
sub
sti
andl
fldenv
cwtl
scas
push
cmp
fcmovu
js
cli
pop
std
popa
or
insb
mov
sbb
add
mov
ja
jmp
fcmovb
ret
and
push
addb
add
das
mov
dec
mov
add
movsl
mov
fxch
fs
hlt
daa
gs
mov
in
or
cltd
xchg
xlat
cmpsb
ret
cwtl
xchg
dec
push
and
and
push
mov
pop
lock
or
cli
push
inc
fstpl
pop
aad
xor
jne
scas
mov
call
pop
or
mov
cmp
sub
adc
and
in
pop
aam
test
add
bound
ss
push
push
ficoms
inc
sub
dec
push
jne
fcoml
adc
pushf
nop
add
hlt
mov
fwait
in
sbb
mov
popa
jmp
iret
scas
sbb
inc
sti
stos
mov
push
dec
add
inc
dec
inc
mov
scas
in
sahf
xor
out
enter
push
insl
pop
jb
jg
pusha
in
imul
fnstenv
lods
std
ja
pop
test
jmp
mov
out
fnsave
cmpsb
push
cmpsb
pop
test
enter
xor
scas
push
movsl
cmc
mov
jo
or
fidivrs
imul
ret
pop
dec
dec
dec
ja
rclb
xor
adc
and
lahf
xor
stc
inc
out
xchg
lret
mov
in
pop
jb
je
lcall
rclb
popf
ret
mov
sub
xor
arpl
fwait
xor
adc
inc
xchg
xchg
sbb
push
repnz
out
jae
sub
jae
mov
dec
mov
cmp
mov
ret
insb
fidivrs
clc
loope
xlat
add
dec
push
pop
adc
loope
ret
push
mov
or
in
pop
sbb
xchg
les
sbbb
std
popa
adc
movsl
pop
outsb
enter
push
fldenv
jo
xchg
push
jns
out
xchg
mov
cmpsb
mov
pusha
sub
and
je
stc
xor
test
lret
in
jecxz
mov
and
mov
mov
sbb
sbb
add
enter
mov
mov
add
mov
adc
mov
sbb
adc
imul
pop
loope
inc
xor
ficoml
xor
insl
push
lea
call
xor
cmp
jnp
dec
mov
cmp
xor
mov
in
cmp
xor
addb
mov
mov
mov
ja
jg
loop
cwtl
mov
cs
and
ret
or
hlt
push
outsb
or
or
nop
popa
repnz
out
sub
shrb
sbb
stos
jo
mov
scas
std
mov
xchg
cld
insb
sub
das
add
std
mov
xchg
pusha
pop
sets
in
insb
adc
loope
ljmp
rclb
je
icebp
cld
arpl
test
repz
mov
into
in
addr16
push
out
sub
mov
inc
lret
cmp
filds
ficompl
jmp
jbe
dec
add
jl
jmp
iret
fbstp
jp
inc
sahf
arpl
imul
movsb
addr16
cwtl
sti
inc
push
divb
push
fmull
in
adc
mov
inc
inc
shrb
cltd
iret
mov
ljmp
jno
mov
stos
xchg
and
or
repz
insl
cld
lcall
cwtl
pop
xor
shll
aas
pop
or
sub
fstps
stos
mov
cmp
jp
xor
jle
in
fs
outsb
loope
dec
je
loope
pop
lock
adc
adc
es
fs
inc
mov
mov
fsts
or
call
cmpsl
inc
jne
jae
xor
out
adc
xor
lahf
stos
sub
out
dec
lahf
sub
ss
icebp
test
xlat
inc
push
pop
cmp
outsb
mov
fisubl
fstl
jns
hlt
stos
enter
and
nop
fidivs
in
mov
test
test
sbb
or
dec
loopne
cs
push
sub
dec
jge
xchg
pop
add
int
jne
in
pop
sbb
dec
jb
sbb
rcl
dec
repz
addb
and
and
xchg
push
mov
cmpsb
test
daa
jnp
fildll
jb
push
add
xor
add
es
mov
fisubrs
adc
or
clc
mov
dec
dec
jb
adc
jbe
adc
test
jae
mulb
add
out
sub
xor
inc
pop
xor
xchg
push
cmpsb
push
mov
add
jl
cld
pop
in
push
push
ljmp
dec
lret
pop
sub
in
mov
xchg
dec
in
jecxz
push
mov
inc
lods
fstl
sbbl
jno
push
and
xor
lret
jae
or
xchg
outsb
mov
xor
rorl
xchg
push
cmpl
sbb
xchg
push
mov
or
lret
xchg
push
shrl
into
sbbl
sbb
dec
pop
rclb
push
push
push
fsubs
shrb
jne
aad
push
or
jle
insb
push
sahf
pop
aaa
dec
ss
icebp
scas
jns
pop
adc
rcrb
mov
fsubs
dec
or
in
lret
fistpl
icebp
lea
jb
lahf
mov
jmp
les
insb
gs
jbe
push
pushaw
mov
je
sbb
mov
divl
mov
in
xchg
xchg
or
jmp
hlt
lahf
aad
cmp
subb
nop
daa
shr
mov
shl
insl
add
xor
hlt
mov
xor
ret
bound
iret
jmp
je
lods
mov
arpl
leave
adc
dec
pop
xchg
cmp
lret
push
aam
xchg
mov
push
push
sbbl
mov
lret
push
xchg
outsl
mov
jbe
or
sahf
orl
adc
testb
pop
inc
in
dec
scas
dec
adc
inc
or
lock
stos
or
sub
in
cmc
lret
or
nop
insb
sbb
xlat
repz
pop
adc
sub
pop
cmc
lret
push
mov
push
mov
push
shl
mov
das
mov
out
movb
insl
movb
insl
jns
sbb
loop
lods
push
fisttps
imul
jmp
pop
push
icebp
mov
add
lret
popf
push
mov
out
xchg
cld
inc
repnz
or
mov
clc
pushf
arpl
xchg
xor
pushf
faddl
cmp
jmp
mov
lcall
add
aas
add
inc
pushf
outsb
sti
pop
adc
sub
add
jp
xchg
out
dec
out
dec
mov
inc
in
mov
ret
sub
les
loop
rcr
es
sub
popa
les
sub
fcomps
imul
outsl
fisubs
sub
gs
pop
cmc
inc
adcl
jbe
in
pop
js
adc
mov
jmp
pop
mov
push
iret
pop
push
mov
data16
in
sub
cmp
out
aaa
ret
fbstp
insb
mov
int
std
movntq
out
les
cld
outsl
loop
js
lret
jge
gs
push
das
test
out
hlt
adc
stos
sbb
sbb
push
sbb
sbb
aam
bound
lret
mov
sti
icebp
sbb
dec
adc
das
jg
int
in
fdivrp
pop
mov
stos
gs
xlat
xchg
sub
sbb
scas
xor
or
pcmpgtd
rorl
mov
sbb
mov
cmp
and
stos
fwait
ds
adc
or
pop
popa
sbb
sbb
push
mov
mov
sbb
scas
pop
inc
inc
fisttps
xchg
stos
inc
jmp
into
insl
jmp
pop
fs
push
jbe
inc
in
jnp
push
aam
xor
pop
lock
lcall
jmp
pop
add
cmpsl
mov
xchg
test
cmp
lcall
stc
add
sahf
adcb
les
mov
mov
ljmp
int3
adc
imul
mov
adc
lock
pop
rolb
jecxz
nop
addr16
hlt
pop
loop
jmp
sbbb
xchg
add
sbb
mov
sbb
pop
jo
adc
add
jae
bound
scas
fstps
mov
mov
enter
jg
adc
jnp
loope
xchg
fistps
add
jne
dec
movsb
sti
fidivs
mov
jnp
std
sbb
imul
mov
ret
das
mov
adc
xor
out
jne
pop
adc
rorl
sbb
add
xchg
pushl
mov
adc
mov
lret
mov
and
cmp
fwait
ret
jne
sub
lds
pop
pop
inc
dec
jbe
jg
mov
and
call
jg
sub
sbb
adc
and
test
inc
push
push
jle
sti
pop
mov
or
dec
in
inc
int
aaa
or
outsl
jno
idivb
mov
mov
scas
push
mull
xchg
shlb
fldl
adc
dec
and
lods
mov
scas
add
dec
sbb
not
xchg
adc
or
aas
ss
test
ljmp
xchg
jmp
jge
mov
lcall
loopne
push
imull
repz
mov
nop
cmpsb
hlt
xchg
fdivp
and
mov
loope
das
leave
iret
mov
dec
dec
jmp
aad
cmp
out
jge
add
mov
xor
aam
clc
push
adc
xchg
adc
cmpsb
push
or
xor
fnstsw
mov
dec
cmpsb
rorl
negb
mov
pop
cmp
cmp
and
adc
sbb
repz
mov
sti
je
or
adc
cmp
lods
or
push
test
or
ret
and
mov
jecxz
imul
mov
and
fucomp
dec
mov
push
mov
add
shlb
stos
cmp
push
stos
jg
mulb
rorb
adc
sbb
push
sub
rcrb
jmp
mov
push
sbb
decl
jecxz
or
mov
and
mov
push
insb
rolb
mov
push
dec
sub
pop
lods
aad
sub
jae
pop
xor
test
pop
int3
faddp
int
fstpt
xor
jnp
or
or
mov
iret
setb
sbb
sbbl
loop
xor
mov
and
cmpsb
xor
and
push
pop
nop
ret
push
sbb
mov
gs
cmc
and
ret
fiadds
cld
mov
and
pusha
dec
ds
loop
lds
adc
lret
div
divb
repz
bnd
fbstp
andl
movl
pop
hlt
imul
xchg
push
add
sub
mov
add
cwtl
sbb
pop
int
xor
mov
jae
inc
sbb
decb
add
xchg
iret
adcl
sbb
outsb
enter
mov
fbld
jge
cli
mov
andl
fmuls
push
pushf
std
cmpsb
popa
lret
pop
xor
icebp
mov
aam
mov
push
scas
out
mov
cld
jns
lahf
pop
sub
pop
loop
push
adc
push
cmp
subb
sub
movsl
xchg
or
leave
xchg
xchg
int3
rorl
leave
xor
and
scas
mov
mov
test
sahf
xor
jmp
scas
xchg
in
lcall
lock
test
pop
notb
decl
push
or
mov
or
mov
jo
imul
pop
ja
pop
addr16
aas
xchg
jg
movsb
xchg
jle
push
jecxz
lods
jle
add
imul
mov
push
cmp
mov
loope
insb
mov
sbb
movsl
pop
addr16
pop
popf
and
push
fnstcw
mov
enter
mov
lods
ret
icebp
sbb
dec
xchg
aaa
xor
mov
rorb
push
xchg
dec
sub
fdivs
rorb
jl
mov
sahf
mov
loopne
or
add
sbb
js
pushf
ja
test
push
mov
xlat
in
jno
dec
adc
mov
into
cmpsl
mov
popa
fbstp
loope
dec
ss
out
cld
repz
xor
inc
stc
inc
dec
movsb
mov
cmp
jmp
mov
test
xor
and
popa
cld
xchg
or
and
outsb
test
ret
push
insb
es
mov
mov
jae
wrmsr
leave
jo
insb
or
dec
fisubl
outsb
xor
jne
shl
jb
xchg
push
aad
or
aad
mov
out
or
sahf
mov
push
mov
mov
cmp
mov
push
stos
mov
jmp
jle
mov
fucomp
inc
xchg
sbb
cmp
les
popa
inc
rorl
call
cs
pusha
pusha
xor
jb
cmpsl
or
js
dec
xchg
ja
xchg
xchg
stos
mov
push
and
sbb
and
mov
cwtl
push
sbb
rcrb
cmc
nop
inc
mov
and
shrb
inc
int3
sub
fldt
mov
sub
xchg
inc
lcall
inc
loopne
adc
pop
cmpsb
cmp
jns
das
jl
rorb
popf
sub
lret
add
adc
push
jne,pt
xchg
jb
adc
leave
push
lahf
mov
fstpl
jmp
and
pop
push
rcrl
out
sbb
mov
movsb
cmp
hlt
or
mov
xchg
stc
in
clc
imul
data16
loopne
xor
popf
cld
jno
ret
bound
shl
je
shll
xchg
push
scas
call
jp
adc
sub
pop
mov
stos
inc
push
or
cmp
mov
push
inc
and
cmp
add
xlat
aas
xchg
xor
aam
lahf
fidivrs
cmpsb
push
jl
jecxz
addr16
test
lock
loop
and
mov
setae
jl
mov
arpl
clc
inc
or
repz
movsb
cltd
jge
inc
mov
jle
add
data16
sub
xchg
add
pop
jg
mov
jl
xchg
sbb
test
pop
and
jo
add
cmp
sub
popa
nop
pop
icebp
sbb
movsl
xchg
imul
decl
divb
testl
pop
jno
lret
jae
push
and
mov
test
adc
aad
outsb
xchg
and
lods
adc
ja
jecxz
and
cmp
sub
imul
inc
jb
clc
xchg
push
ja
inc
cmp
sahf
orl
xlat
mov
xor
adc
jbe
shrb
ja
or
out
sbb
fisubrl
cltd
in
ret
lcall
bound
testb
pushf
mov
xlat
ljmp
mov
mov
fimuls
push
xchg
movsl
scas
inc
pusha
mov
pop
jl
mov
daa
adc
std
jl
sbb
sbb
dec
mov
les
rolb
inc
into
scas
bound
xchg
xor
push
mov
or
jae
cmpsl
xchg
jne
xchg
jg
scas
jae
hlt
mov
in
sbb
es
lret
push
inc
cmc
push
pop
or
int
lcall
add
sbb
cmpb
dec
movsl
mov
pushf
loope
cwtl
dec
push
xor
loop
pop
ja
sub
mov
lea
lods
daa
xchg
push
enter
bound
pop
addr16
push
jne
test
mov
push
pop
andl
mov
adc
fidivs
jecxz
inc
dec
andb
jmp
jp
lods
sbb
sbb
push
sub
out
mov
cmp
cmpsb
insl
scas
daa
mov
sub
fnstsw
popf
ret
pop
or
sub
xor
or
adc
inc
popa
out
repz
sub
cmp
xlat
push
mov
arpl
jmp
jnp
sub
sahf
pop
mov
push
push
popa
xorl
push
insb
cltd
out
ficompl
mov
inc
scas
fwait
sub
cmp
jecxz
lahf
cltd
mov
dec
pop
bound
in
scas
or
cltd
adc
je
popa
bswap
loop
xor
mov
pop
push
es
mov
scas
mov
js
jp
or
shl
dec
sbb
xor
adc
mov
stos
je,pt
mov
mov
pop
lock
ja
aad
xchg
or
ljmp
cmp
hlt
push
or
dec
frstor
push
popf
dec
inc
pop
xlat
dec
jbe
pusha
mov
push
out
cmp
adc
clc
or
cmp
out
int
inc
icebp
inc
roll
stc
js
mov
data16
nop
cmpsb
add
jg
or
dec
adc
clc
or
xor
sahf
adc
inc
inc
mov
popf
sub
sbb
addb
out
lret
or
sbb
in
daa
inc
in
and
in
cmp
mov
mov
inc
jo
std
xchg
imul
mov
mov
xor
les
notl
xchg
sahf
mov
inc
mov
and
pop
stc
je
cli
or
or
fwait
dec
push
push
ret
sub
test
dec
loopne
xlat
mov
inc
jp
jge
fs
or
and
xchg
adc
lret
push
inc
data16
dec
adc
movl
pop
jae
and
push
lods
push
shlb
aas
and
popf
insl
mov
iret
dec
sti
stos
sbb
test
jg
pop
cmpsb
repz
divb
push
cmc
test
daa
and
inc
mov
inc
cwtl
popf
lods
xchg
in
cmpsl
out
inc
xor
fwait
xchg
bound
clc
mov
dec
jg
push
scas
sbbl
nop
fists
inc
mov
xchg
es
notl
stos
mov
stc
daa
jmp
into
and
adcb
sub
xor
pop
pop
mov
pop
pop
mov
jecxz
mov
popa
mov
or
xor
xor
add
fsts
push
jb
cmp
pop
loop
xor
push
leave
test
hlt
pop
adc
and
or
sub
mov
xor
or
pop
cmp
or
gs
imul
xchg
pop
and
inc
fidivs
clc
and
and
mov
add
jo
arpl
js
dec
test
push
mov
into
push
ja
cmp
fistps
movsl
sbb
and
jnp,pn
int
inc
test
mov
sbb
aad
idivl
daa
leave
test
lods
repnz
sub
inc
cmp
xchg
orb
lsl
jb
inc
and
mov
int
inc
jp
pop
aaa
xor
xchg
dec
mov
fdivl
inc
iret
xorb
fwait
xchg
mov
sbb
pop
sbb
ds
sbb
push
mov
or
ds
mov
inc
into
jg
es
xchg
sub
push
jge
pop
inc
jmp
popf
faddp
push
in
jp
push
aam
bound
test
mov
xchg
cmpsb
aad
cwtl
rorl
push
shll
push
test
or
dec
outsb
inc
or
lods
jmp
adc
jo
testb
lods
std
or
out
sbb
inc
xchg
add
inc
push
push
push
mov
xchg
pop
imul
scas
inc
push
aad
sbb
mov
movsl
xlat
xchg
xlat
push
ss
je
fisttpl
push
pop
sub
mov
jo
mov
add
pusha
mov
movsl
mov
mov
daa
pop
test
div
mov
cmp
pop
scas
mov
pusha
call
dec
in
stc
loop
sub
insb
out
mov
into
out
pop
mov
adc
loope
iret
and
or
nop
adc
lods
adcl
repnz
push
sub
fisttpll
hlt
mov
push
fcompl
mov
lret
push
addr16
out
jl
stc
popa
jae
outsb
stc
ret
dec
and
jb
in
stos
xor
xor
jmp
test
fildll
ret
ljmp
pushf
jne
insl
inc
sub
dec
in
pop
shr
mov
jge
push
lock
jle
iret
sub
or
daa
push
cmp
cmp
xor
inc
inc
mov
cs
push
cmp
ret
iret
sub
dec
inc
lcall
sub
xor
jle
imul
test
cwtl
xor
inc
mov
ret
mov
movsl
sbb
orb
mov
outsl
lret
mov
pop
cmp
cmpsl
fs
dec
xchg
add
mov
fidivrs
push
aas
push
mov
jb
fimull
addr16
arpl
mov
lods
and
cmp
inc
hlt
cmp
mov
pushf
mov
aad
xor
and
xchg
loope
pop
adc
jecxz
adc
or
add
fcomps
inc
ret
dec
mov
jnp
int3
cmpsb
cmpsl
lcall
icebp
int
out
jmp
cmp
addr16
daa
in
cmp
cltd
jo
add
xor
insl
ret
xor
repz
mov
push
sbb
sbb
pop
in
cmpsl
jne
movsb
pop
cmp
fildll
push
inc
add
cld
mov
mov
sbb
mov
imul
cli
xchg
mov
or
in
mov
lcall
dec
pop
and
outsb
je
mov
push
and
push
xor
cmp
mov
mov
dec
push
sbb
inc
cltd
dec
or
aaa
aad
xchg
pop
pop
arpl
xchg
adc
add
jno
shlb
pop
jge
sbb
jecxz
movsl
test
pop
xor
outsb
add
pushf
lods
and
inc
data16
xor
fstpt
inc
sub
into
les
inc
cmp
sti
movsb
fsts
pop
add
adc
addb
jne
aam
mov
mov
ret
negl
pop
sbb
jg
mov
cmc
pop
lock
mov
pop
lahf
loope
je
jmp
popf
lods
inc
cmpl
adc
loopne
and
add
gs
add
fwait
test
sub
test
sub
ss
ds
lds
frstor
enter
divb
iret
daa
xor
xor
add
cmp
push
dec
cmp
mov
xchg
pop
mov
leave
sub
iret
outsb
sub
sbb
jmp
sub
mov
in
ds
fiadds
fdivrl
adc
mov
xchg
sub
mov
or
xchg
leave
out
ficomps
xchg
mov
cmp
daa
pusha
sbb
nop
sub
sub
fldt
xor
frstor
push
faddl
xlat
or
push
xor
mov
fldcw
cmc
push
cmpsb
xlat
dec
sbb
mov
test
mov
and
jbe
cmp
out
jg
adc
fnsave
mov
adc
sbb
arpl
fs
inc
add
mov
add
mov
jl
rorl
mov
sar
mov
cltd
or
xor
sbb
mov
xchg
pushf
and
adc
or
jp
hlt
pop
test
xlat
andl
jns
sub
in
repnz
mov
jnp
jno
sbb
mov
adc
int
stc
mov
mov
fistps
js
inc
pop
repnz
lret
dec
jns
jp
inc
mov
jnp
aas
shll
mov
sub
inc
and
pop
adc
int3
mov
or
push
jno
push
test
mov
add
lret
popa
cli
or
psrad
adc
dec
and
jnp
push
or
or
mov
pop
pop
and
mov
sub
mov
cli
test
out
mov
lods
divb
jae
je
mov
jbe
arpl
bound
decl
mov
nop
add
adc
mov
mov
pop
xor
js
out
xchg
mov
sbb
stos
sub
fstpl
fstl
xor
and
mov
add
jg
mov
repz
dec
push
test
inc
sub
push
int
or
xor
mov
in
mov
call
and
pop
data16
pop
loope
pop
mov
out
std
cmpsb
loopne
jg
xor
push
mov
hlt
cmpb
dec
inc
add
shlb
fsubrs
sbb
dec
repnz
jne,pn
fistpll
mov
addr16
ja
xchg
imul
add
loope
lock
int
push
imul
outsb
sub
cmp
pop
gs
xchg
arpl
icebp
jg
mov
pop
in
cli
shrl
stc
out
aaa
mov
imul
repz
pop
ds
add
jno
mov
jl
dec
pop
mov
in
lock
adc
imul
push
and
fistpll
add
or
jecxz
aas
mov
cltd
push
dec
bound
dec
or
adc
lds
icebp
pop
xlat
adc
ja
movsb
sub
orl
pop
hlt
xor
rolb
xchg
mov
cmp
or
scas
add
scas
mov
cmpb
sbb
add
loopne
adcl
sbb
jg
cmc
movsl
popf
movsb
and
nop
add
mov
add
scas
pop
cmpsb
sub
ja
jge
rcll
push
sbb
sbb
int
ret
inc
jo
lcall
aad
inc
int
jb
or
scas
inc
inc
sarl
or
loope
mov
jmp
movd
adc
mov
add
fwait
lods
jge
into
xor
lods
or
mov
pop
cmp
cmpb
pop
lods
jg
pop
mov
mov
out
push
or
adc
mov
scas
insb
jp
mov
cltd
test
lods
xchg
fs
stc
inc
test
out
int
inc
popa
sbbb
jno
adc
int
icebp
jno
hlt
and
insb
xchg
cmp
xchg
rcl
loop
mov
bound
pusha
in
or
es
je
leave
sub
lods
mov
out
cld
xchg
mov
mov
arpl
addr16
in
inc
sbbl
test
mov
adc
lods
outsl
adc
adc
pop
push
clc
movsl
add
xchg
sub
shlb
cltd
movsb
dec
and
out
inc
pop
rorl
and
fldpi
inc
cli
shr
jl
xchg
leave
bound
xchg
xlat
jmp
add
push
adcb
outsl
adc
mov
imul
push
pop
mov
pop
add
xor
data16
xchg
gs
dec
sarl
add
jp
stos
dec
lahf
push
mov
inc
data16
mov
sbb
mov
outsl
push
iret
jae
shl
mov
mov
xorb
add
insb
sbb
aas
hlt
mov
arpl
dec
jmp
push
cmpsb
imul
adc
stc
lods
or
mov
sub
aad
mov
push
and
sub
inc
xchg
cwtl
pop
mov
mov
sahf
push
or
icebp
sahf
push
xor
xchg
push
pop
loop
mov
push
mov
mov
inc
jo
lcall
pop
dec
jb
lods
ss
mov
loop
jne
cmp
sbb
jl
mov
mov
iret
repnz
lret
pop
jbe
jae
nop
jno
sahf
mov
movsl
mov
rorl
or
jne
test
adc
decl
movsl
pop
out
scas
cli
adc
fnstsw
or
rcl
cmp
in
and
mov
jg
fdivs
sti
outsl
or
insb
xchg
push
add
lods
cwtl
daa
and
shrl
push
testb
stc
jge
cld
rorb
int
push
xchg
inc
and
insb
jle
sahf
adcb
mov
mov
fdivp
xchg
mov
adc
and
push
aaa
mov
pop
sbb
sbb
jge
cmp
xor
imul
lock
jl
mov
push
add
add
mov
push
push
cmpsl
push
inc
arpl
pop
into
ret
push
or
bound
lods
call
aaa
gs
mov
aaa
xchg
add
jb
repnz
ds
pop
or
fsubl
lret
mov
shlb
out
inc
inc
cmp
clc
loopne
xor
pop
outsl
or
xchg
add
xlat
dec
jmp
push
es
push
jge
inc
popf
lods
outsb
pop
or
out
shl
mov
ss
sub
cmpsl
xchg
shrl
repnz
pop
and
mulb
dec
out
jno
ds
ldmxcsr
mov
int
sub
fldt
or
leave
dec
dec
push
push
divb
nop
int
pop
mov
pop
xchg
pop
fnstenv
inc
in
sub
lcall
sbb
mov
push
push
push
mov
lock
xchg
cmpsl
lods
fsubrl
jp
insb
and
addr16
add
repz
das
cltd
xchg
xor
into
enter
cmpsl
dec
gs
fsubrs
push
aad
loope
pop
idivb
sbb
aad
xorb
int
mov
shlb
adc
cmp
cwtl
pop
fidivrs
movsl
icebp
divl
mov
pop
cld
lcall
jbe
cmc
bound
jg
hlt
int3
lret
push
rcrl
jmp
testl
xchg
sub
dec
outsb
imul
lahf
inc
std
add
push
push
adc
cld
hlt
outsl
mov
jne
repnz
mov
out
mov
add
stos
dec
dec
jmp
arpl
lock
push
jne
mov
loope
push
push
push
aad
int
ja
test
adc
xchg
mul
shrb
and
jmp
cmp
ja
fs
movsl
insb
cmp
xchg
mov
and
inc
mov
fyl2x
xor
lock
popf
or
cli
ja
sub
dec
in
jb
clc
mov
push
jae
fstpl
paddq
fst
or
sub
mov
push
inc
aas
push
or
nop
hlt
dec
lock
inc
negl
rolb
mov
jno
in
pop
sbb
inc
clc
cmp
cs
cmp
icebp
jae
bound
test
pop
scas
mov
out
xchg
rolb
hlt
fdivrs
adc
add
mov
rorl
hlt
popa
cmp
pushf
push
andl
ja
fiaddl
pop
scas
enter
ret
add
mov
jne
xor
inc
lods
dec
cmc
jl
adc
ret
xchg
mov
add
xor
in
cld
xchg
aaa
mov
adc
repnz
imul
jmp
sbb
lret
push
and
rcrb
lods
push
jb
dec
mov
mov
sub
push
pop
inc
xchg
add
scas
es
mov
or
icebp
cmp
test
xor
shlb
daa
xor
ss
mov
cmpsl
jp
leave
int
adc
jp
lods
aas
push
fmulp
add
imull
xchg
mov
push
add
aaa
fldcw
mov
int
sbb
mov
shlb
pop
inc
cli
popa
jno
cld
push
fwait
lcall
in
and
push
sbb
mov
inc
out
outsb
cmpsl
add
pop
xchg
sub
test
outsb
es
mov
pop
xchg
mov
push
add
mov
push
mov
ret
fiadds
xlat
adc
mov
and
out
jo
pop
stos
cmpl
pop
xchg
mov
outsl
fdivrl
push
mov
lods
mov
mov
jbe
add
and
insl
cmp
push
fistps
mov
push
cmp
ds
in
cmp
push
rol
add
jne
stos
rcr
ljmp
ficomps
push
lret
int3
ja
loopne
inc
inc
sahf
decb
cmpsl
sbb
das
xchg
add
daa
enter
push
xlat
jae
sbb
sbb
jge
add
push
jb
or
into
int3
cmp
cmpsl
lahf
mov
xlat
or
loope
int3
jnp
daa
and
push
icebp
cmc
mov
mov
push
jne
lcall
push
jb
jecxz
pop
leave
inc
xor
sbb
adc
push
aad
mov
in
or
lock
mov
popa
jg
shll
xchg
sub
hlt
pop
jno
mov
cmp
fbstp
pop
and
pop
cmp
sbb
movsl
ss
mov
push
jp
dec
mov
jo
sahf
pop
cmp
nop
lcall
cmp
push
xor
push
adc
mov
and
cmpsb
and
adc
imul
jp
js
cltd
xchg
mov
in
test
xlat
call
pop
cwtl
mov
addr16
xchg
xchg
mov
pop
xor
ret
jmp
out
std
call
stc
push
outsl
test
pop
lcall
cmpsb
cmp
jmp
fldl
int3
jb
push
call
fxam
and
mov
push
push
push
or
add
js
lahf
cmpb
les
lock
sbb
dec
ffreep
mov
cwtl
jo
adc
movntq
out
aam
sbb
push
lret
pop
pop
fucom
cmp
sub
mov
cmp
dec
cmpsl
cmp
or
sbb
mov
aad
lock
sub
xchg
dec
aad
inc
psadbw
neg
and
movsb
add
mov
xor
add
daa
jno
cmpsl
insl
xor
aam
enter
xor
dec
out
pushf
fwait
jl
adc
out
cmpb
movsl
xchg
cltd
or
ret
add
pop
jp
sub
jge
adc
pop
jbe
gs
icebp
xor
outsl
inc
cmp
nop
sti
inc
stc
and
out
lds
jnp
outsb
add
inc
in
jb
outsl
jl
fisttpl
and
or
cmpl
mov
into
gs
jmp
inc
xchg
adc
fcoms
mov
cmp
cmp
mov
push
jle
in
test
pushl
inc
fsubs
sarl
fnstsw
push
jo
push
stos
push
adcb
out
cmp
sbb
int3
add
mov
xchg
inc
dec
inc
aas
mov
sub
lret
and
mov
testb
sahf
lea
sbb
in
js
dec
bound
xchg
cmp
out
imul
test
scas
daa
outsl
mov
insb
pop
jg
push
subl
loope
das
cmp
test
inc
pop
jp
aam
out
sti
icebp
push
aas
lahf
add
sti
mov
push
test
arpl
add
aaa
push
or
inc
fwait
loop
ret
mov
cmp
pop
inc
outsl
out
fiaddl
xchg
xchg
addr16
mov
xchg
adcb
je
dec
popa
rclb
rolb
add
adcl
mov
icebp
inc
into
bound
pop
xchg
xor
shlb
push
lea
jnp
or
add
push
rcll
testl
fimuls
hlt
xor
ret
dec
out
pop
push
pop
lea
insl
add
push
lahf
xor
in
mov
dec
das
es
lret
loop
mov
popf
or
mov
push
ret
lock
outsl
test
push
hlt
dec
adc
in
sub
sbb
cmc
dec
mov
mov
pop
ret
leave
les
clc
loop
das
loopne
xchg
add
ret
pop
fwait
mov
out
xchg
and
ljmp
jns
mov
stos
cs
dec
jge
or
ja
adc
dec
or
mov
aaa
jbe
mov
dec
lret
mov
fcoml
sbbl
addr16
push
cwtl
xor
lea
test
dec
negl
in
sbb
ljmp
into
scas
pop
scas
loopne
int
mov
adc
mov
stos
pop
push
in
push
add
pop
mov
mov
mov
fsubrp
inc
mov
scas
push
mov
out
fwait
inc
and
cmp
xchg
and
sti
outsl
jmp
mov
outsb
gs
outsl
in
push
imul
cmpsb
imul
xchg
mov
pop
cwtl
inc
pop
sbb
mov
push
fucomi
add
sub
dec
arpl
jp
push
lea
or
sub
shlb
xor
and
mov
jmp
in
lcall
adc
out
enter
lcall
repz
xchg
mov
dec
or
cmpsb
xor
pop
xor
jle
or
jmp
repz
andl
movsl
jne
in
sbb
pop
fmul
pop
faddp
dec
ljmp
call
inc
ret
sahf
push
dec
and
adc
rorl
ds
lds
mov
je
enter
shrb
xchg
adc
and
sbb
xor
dec
out
enter
xorl
or
mov
lea
xchg
mov
outsl
ja
dec
daa
inc
test
xor
lods
add
mov
jae
push
mov
lods
mov
or
adc
pop
jb
fisttpll
jno
fwait
pop
imul
mull
icebp
sbb
imul
movsl
mov
jns
sbbb
fdivp
lret
mov
dec
pop
in
push
or
xor
cli
jl
jp
push
inc
fs
push
mov
jp
mov
cmpsl
mov
lock
test
sub
add
mov
fsubl
outsb
dec
mov
mov
mov
or
lods
vhsubpd
out
mov
inc
pop
xchg
mov
arpl
shl
outsl
inc
adc
cld
lret
test
fs
pop
push
inc
lods
rolb
nop
mov
push
jle
or
lds
lea
out
stos
gs
mov
stc
mov
inc
mov
lahf
fidivrs
rcrb
xor
fisubrl
outsl
pop
push
call
insb
test
mov
enter
adc
mov
in
sub
lds
xchg
ja
cmp
add
and
ds
jp
or
nop
xchg
dec
sahf
sub
lahf
inc
jae
loopne
xor
sub
inc
mov
mov
out
mov
push
add
pop
pop
cmp
add
mov
xchg
js
imul
xlat
insb
movsb
or
adc
mov
fdivrs
out
xor
test
fldl2t
xor
jecxz
xor
adc
arpl
sub
mov
xchg
addl
adc
ret
inc
test
lret
xor
data16
push
mov
test
inc
xchg
pushf
loopne
dec
mov
mov
mov
push
xor
test
mov
cmpsb
push
fcoms
inc
cmp
call
or
mov
rol
mov
inc
mov
shlb
mov
sahf
add
mov
mov
xchg
mov
mov
mov
mov
out
insl
jge
mov
cmp
mov
test
jnp
push
addr16
jl
xchg
popa
cwtl
mov
out
cmpsb
outsl
mov
push
cmc
adc
stc
xchg
fucomp
jb
xlat
out
adc
sub
pop
xor
pop
and
sub
adc
xchg
dec
lods
inc
mov
pop
shl
or
std
push
mov
aaa
push
and
xor
ss
movsb
xchg
xchg
xchg
mov
cmp
fistps
or
icebp
fwait
pop
add
inc
cld
pop
shl
sbb
in
nop
push
lds
inc
xchg
xchg
mov
test
or
int3
fwait
outsl
int3
data16
fmul
jp
fcoml
xlat
nop
xchg
mov
sbb
xchg
insb
xor
adc
test
arpl
xchg
cs
push
sbb
fbstp
stos
dec
pop
lock
dec
stos
mov
jge
xor
and
movsb
cmp
iret
bound
sub
das
pop
push
dec
in
imul
ret
mov
mov
rorb
xorb
aas
fwait
jecxz
push
stc
add
cmp
lea
and
minps
pop
outsl
ret
dec
add
out
push
or
jecxz
sbb
inc
push
gs
xchg
xor
cwtl
mov
pusha
and
cmpsl
push
adcl
cmp
lock
rcl
mov
cli
call
sbb
pop
adc
adc
xchg
jb
js
mov
nop
sti
jp
sbb
sbb
faddl
testl
dec
inc
dec
aas
cs
push
dec
clc
mov
push
mov
subb
pop
inc
dec
jl
xor
ds
nop
jl
insb
mov
push
adcl
outsb
mov
mov
jle
push
lds
lods
sub
or
adc
cmp
and
lock
rcrl
inc
aad
mov
cmpsb
imul
cli
cli
pop
sub
sbb
in
loope
add
mov
sub
addl
and
pop
mov
imul
aas
mov
mov
pop
mov
add
outsb
int
fwait
jmp
test
mov
jno
testb
push
pop
xor
push
ljmp
jno
insl
jg
stc
into
loop
call
negl
jnp
and
mov
dec
bound
mov
pop
jl
xchg
xchg
cltd
xor
imul
cld
push
cltd
inc
fmul
adc
sub
dec
or
popa
dec
in
lea
sub
mov
movsb
cmp
push
mov
mov
in
and
jp
fwait
mov
push
movb
ret
xchg
sbb
mov
pop
jp
cmp
xchg
sub
sti
adc
pop
enter
cli
leave
xchg
sub
xchg
ljmp
shlb
xor
cli
dec
xor
push
or
cmpsl
les
sahf
movsb
xchg
bnd
and
mov
outsl
sar
cltd
cmp
mov
or
mov
fwait
push
mov
iret
in
mov
mov
ficoms
fstps
xor
jle
ss
adc
mov
scas
inc
xor
lods
int3
loopne
popf
or
mov
icebp
adcb
inc
cs
cwtl
dec
ljmp
iret
mov
adc
push
popf
and
mov
or
jno
lds
adc
aas
jbe
mulb
push
pop
cmp
xchg
add
adc
xchg
or
mov
inc
cmp
sbb
in
push
pushf
push
push
pop
dec
or
ss
sub
and
pop
cld
lcall
in
clc
movsb
aad
and
push
xor
nop
pop
out
ret
jo
push
and
mov
sbb
or
inc
mov
idivl
pop
sti
rclb
sub
xchg
jg
xor
enter
aam
pop
daa
xchg
adc
jmp
lods
and
cmp
cmp
in
push
nop
or
test
fs
rorl
sti
outsb
lcall
stos
push
test
xor
adc
hlt
add
pop
xchg
adc
sub
inc
xor
and
mov
inc
int
fwait
lea
imul
push
add
fucomi
scas
fisubrl
add
pop
xor
mov
mov
mov
cltd
pop
popa
pop
push
into
fdivl
mov
mov
sbb
mov
fisubrs
push
and
mov
les
cmc
and
negl
addb
pop
or
iret
xchg
insl
pop
lock
jl
pushf
es
cld
or
mov
pop
mov
jnp
mov
mov
sub
xchg
mov
lret
fsubrs
mov
aaa
hlt
pushl
dec
ja
lods
nop
xor
xor
in
cld
inc
in
insb
call
pop
push
mov
push
push
xor
lods
dec
shll
mov
mov
fsubrl
push
enter
jne
aad
out
ret
pop
push
scas
add
pop
adc
inc
adc
cli
xchg
xor
xchg
mov
sahf
mov
out
test
push
nop
sub
pop
lahf
inc
xchg
scas
inc
leave
and
test
inc
test
push
loope
mov
iret
scas
and
out
sub
inc
xchg
and
jp
pop
leave
jae
fcoms
jle
pop
jae
add
jl
mov
pop
insb
cli
aad
daa
mov
outsl
cs
fsubrs
jno
lret
jb
and
adc
call
mov
incb
and
paddusw
adc
cmc
imul
add
inc
cmpsl
pop
cmp
sub
bound
lods
ret
popa
mov
adc
and
rcll
mov
cmp
add
jbe
xchg
mov
out
stc
xchg
adc
xor
sbb
mov
sbb
xchg
daa
jne
stc
fsubs
sub
lods
jle
mov
rcr
push
jno
icebp
out
dec
stos
or
push
mov
hlt
push
push
ret
mov
xchg
cmpsb
movsl
aas
outsb
lahf
dec
sbb
lea
adc
mov
fidivs
mov
int
push
jmp
mov
das
xchg
sbb
inc
sub
push
sahf
jg
les
pop
mulb
and
dec
test
cli
ficoml
dec
xor
decl
lods
inc
ss
adc
dec
push
lret
jp
dec
les
rcr
out
jg
jle
pop
mov
push
and
cli
loop
les
ljmp
bnd
or
mov
push
sub
xor
ja
pop
pop
in
pushf
xor
jnp
test
js
mov
insl
pop
fbld
xchg
test
sub
out
test
jge
cmc
daa
outsb
mov
mov
cmc
leave
in
xchg
popf
fwait
dec
push
stos
lds
adc
cmpsb
sub
hlt
loopne
test
outsb
stos
gs
incb
sarb
stos
push
adcl
repnz
repz
pusha
dec
xor
jbe
and
push
in
clc
inc
fldl
mov
ret
cmp
inc
stos
outsl
pop
fiadds
call
or
cmp
mov
add
mov
mov
mov
pop
mov
xor
mov
add
int3
xlat
fimull
bound
jmp
mov
imul
mov
push
out
mov
add
jecxz
mov
ja
mov
in
sbb
mov
mov
decl
sbb
adc
adc
push
jb
movsb
sub
nop
jnp
lret
das
das
das
add
mov
mov
lds
das
shlb
in
pop
lahf
lcall
push
xor
sbb
rcrb
outsl
dec
pop
enter
ss
sbb
pop
nop
xor
rorl
pop
lea
ret
mov
push
arpl
add
jbe
push
mov
divb
adc
data16
adc
xor
sbb
push
fnstcw
or
pop
xor
pop
jmp
xorb
jg
cmpsl
sti
stos
mov
or
mov
aaa
fsts
push
hlt
or
mov
add
and
fsubrl
cmp
push
mov
adc
dec
scas
push
cli
or
fldt
adc
lahf
std
push
mov
int
out
push
imul
jne
pop
and
pop
ret
js
repz
push
adcb
mov
mov
clc
pop
popl
push
int3
addr16
mov
repnz
ljmp
jle
daa
mov
add
add
mov
imul
cmp
fucomi
orl
dec
sbb
push
or
repz
xlat
mov
inc
iret
pop
shll
xor
bound
or
loop
gs
insb
inc
xchg
fnsave
in
inc
and
mov
lods
test
ljmp
pop
fstpt
adc
cld
and
mov
jb
fwait
test
dec
aam
mov
jne
jp
mov
insl
xor
mov
fwait
aaa
or
push
lret
outsb
jo
mov
or
movsb
adc
ret
pop
aaa
push
fwait
lcall
stc
repz
cmp
xor
sbb
pusha
sub
stos
add
or
sarb
stc
nop
imul
aad
pusha
cmp
aaa
ret
shl
dec
pop
xor
or
pop
mov
push
fmul
shlb
int
std
dec
sbb
cmc
push
movsb
cmp
jb
or
push
lcall
push
jmp
lahf
sub
sarb
fsts
daa
push
add
push
inc
xor
mov
out
int
push
out
repnz
or
cmp
pop
xchg
push
fbstp
lock
loop
pop
inc
push
ds
lock
push
imul
orl
inc
pushl
xor
mov
stos
fstl
andb
movsb
rcll
mov
fimuls
mov
andb
mov
sbb
pop
or
mov
int
pop
in
fwait
mov
pop
xchg
jg
js
xor
fbstp
leave
add
mov
add
in
adc
pusha
xlat
loop
inc
mov
outsb
and
adcb
or
or
arpl
or
or
add
or
scas
xor
arpl
mov
fdivl
gs
lcall
leave
into
xchg
jae
clc
sahf
lea
call
out
jae
data16
pop
xchg
push
xchg
xor
inc
jmp
cmp
inc
arpl
pop
pop
rorb
int3
inc
jnp
jb
fs
push
scas
fdivl
mov
xor
cli
lods
in
push
push
and
das
push
push
cltd
xor
mov
xchg
adc
xchg
stc
popf
fldt
inc
cli
adc
jae
inc
xchg
lret
lahf
icebp
xchg
or
lods
aam
decl
in
imulb
outsb
cmp
sti
lds
push
stos
jle
adc
pop
mov
addr16
das
jne
pop
sub
add
cmpsl
push
sbb
ret
jl
sub
ret
repnz
mov
push
cs
movsl
cmp
negb
lods
and
mov
icebp
enter
jecxz
push
stos
xorb
or
fimuls
adc
imul
xor
push
push
cltd
negl
cwtl
jo
aaa
xchg
mov
das
sub
push
sub
repnz
dec
rclb
cmp
in
cmpsb
dec
adc
scas
mov
loop
xor
inc
pop
inc
pop
cmp
cmp
xchg
je
test
ret
sub
push
push
mov
mov
int
mov
sbbb
fnstcw
fstp
pop
outsl
lods
mov
sti
xor
adc
mov
stc
mov
add
lret
repnz
xor
or
sahf
test
lods
jno
cmp
dec
dec
xchg
inc
adcb
cmp
mov
rolb
push
test
push
out
adc
xchg
xor
orl
sahf
or
pusha
fidivl
hlt
clc
aas
cmp
adcl
cmp
loope
jb
mov
jae
dec
jo
inc
jmp
mov
scas
shl
add
push
jge
das
jns
js
mov
dec
and
test
dec
mov
adc
add
push
pop
in
xchg
stos
cwtl
xor
test
in
dec
pop
scas
add
cmp
mov
data16
add
ficomps
and
gs
inc
mov
repnz
iret
out
mov
cmp
cwtl
jmp
mov
adc
stos
jo
rolb
daa
daa
sub
cwtl
aas
js
push
popa
mov
mov
sti
cwtl
stos
ficomps
loop
cmp
outsl
dec
out
lock
sub
insb
mul
or
lds
xchg
jle
pop
mov
imul
enter
js
push
jecxz
mov
aas
sub
repz
xchg
inc
data16
push
test
xchg
pop
js
jle
sub
push
xchg
xor
stc
or
xchg
cmpsb
jb
mov
das
push
mov
inc
mov
push
fstps
in
xchg
mov
fsubl
fcomi
cmpsl
dec
push
out
iret
cmpsb
fwait
js
daa
cli
rcrb
mov
mov
pop
lea
push
mov
pop
inc
lret
nop
call
dec
dec
cmc
lret
cltd
std
dec
sub
repz
or
movsl
pop
inc
aam
lds
mov
jns
ds
cmp
push
inc
insb
dec
push
xchg
repz
out
bound
flds
test
leave
pop
inc
leave
pop
int3
iret
xor
mov
mov
shlb
add
push
sbbl
incl
sbb
insl
inc
cld
inc
fs
pop
xor
test
mov
fwait
mov
sbb
adc
testb
pop
enter
addr16
adcl
pop
mov
jecxz
jnp
test
lcall
pushf
jne
mov
or
mov
sub
nop
and
or
mull
cmp
xor
mov
pop
out
scas
add
fisubl
shll
lods
or
cs
aad
sbb
aas
loopne
pop
cmp
out
cld
and
xlat
or
pop
mov
arpl
add
sbb
insl
dec
or
or
sub
mov
movl
xchg
or
adc
mov
repnz
mov
and
mov
mov
out
cs
mov
jns
mov
fldcw
pop
popa
sbb
mov
cmp
test
aaa
stos
imul
cli
pop
inc
push
aam
push
or
imul
fsub
jae
push
movswl
or
std
pop
lods
cwtl
xchg
fistpll
sbb
dec
xor
jg
testb
jl
arpl
sti
lea
icebp
or
jl
mov
sbb
in
testl
cmc
aad
mov
jb
popf
les
jge
mov
test
bound
into
in
ret
pop
divl
inc
sahf
add
mov
addb
sub
das
add
outsb
dec
jns
xlat
mov
das
push
add
dec
mov
scas
xchg
jno
cs
into
fidivrl
jl
mov
pop
sarl
stc
addr16
movl
mov
adc
push
push
movsl
cmp
pop
jnp
loop
aas
dec
aaa
out
int
mov
sub
mov
movl
mov
inc
sbb
dec
mov
aad
jl
xchg
jne
and
nop
data16
std
stc
mulb
stos
cld
sbb
dec
sbb
and
pop
xor
mov
call
mov
cmpsb
jnp
push
shlb
adc
mov
rolb
mov
shrl
xor
ja
mov
adc
shrl
jmp
or
gs
fildl
mov
lret
sti
xchg
xor
setp
outsb
in
or
mov
cmc
pop
mov
or
xchg
fildll
push
movsl
adc
or
cmp
jmp
popf
sti
test
jb
sub
lea
cmp
inc
push
dec
addb
ret
sub
push
mov
dec
lods
ja
imul
mov
test
inc
sub
push
repz
mov
rcrl
pop
cmc
push
and
stc
dec
addr16
jl
or
push
mov
ficomps
sbb
and
xlat
ficoms
push
mov
imul
pop
lds
xor
sbb
jb
dec
repnz
mov
jecxz
ret
mov
xor
lock
pmulhuw
push
xchg
rclb
rcr
cmc
mov
das
pushf
dec
in
ret
or
mov
fsubrl
cltd
call
stos
pop
loop
add
enter
popa
fiadds
xchg
iret
js
mov
xchg
sub
outsb
fsubrs
xchg
or
out
pop
shll
pop
xor
rcll
mov
xchg
dec
push
push
out
je
sbb
xchg
sbb
adc
daa
or
and
fsubs
adc
jg
aad
fnstenv
xor
sbb
test
out
xor
aad
ret
sarb
cld
in
pop
loopne
int
insb
daa
aaa
gs
fwait
pop
popa
add
xchg
into
rol
or
out
insl
pop
int3
jg
stc
lods
push
adc
stc
inc
fs
scas
jne
enter
insb
or
adc
inc
scas
stos
inc
jg
push
scas
and
sahf
xor
ret
mov
fistl
mov
sahf
call
imul
jecxz
movsb
ja
mov
and
in
add
adc
push
push
sbb
adc
jb
sbb
scas
mov
aam
adc
mov
loopne
add
add
mov
aas
addr16
lahf
cwtl
pusha
pushf
sbb
lods
inc
lods
fmull
stc
xchg
cmp
test
xchg
or
push
cli
daa
orl
lret
scas
pop
lret
fistpl
add
pushf
and
into
rcll
sub
das
les
lret
sub
cmp
push
sbb
imul
mov
pop
sti
cli
jbe
or
das
add
inc
icebp
and
xchg
jmp
mov
subb
ljmp
cmp
adc
negb
cmpsl
sub
mov
pop
sub
mov
mov
sub
insl
iret
mov
pop
lret
jne
mov
dec
data16
dec
push
call
push
sahf
xor
sbb
rolb
push
mov
and
or
ljmp
out
popa
lret
pop
stos
mov
mov
push
ficompl
fbstp
call
push
popf
lret
mov
pushf
sub
fdivr
mov
xlat
push
int3
push
loop
add
xor
mov
pushl
or
stc
sbb
dec
cmp
lret
fcomps
dec
fisubrl
cmp
xchg
repnz
rcl
mov
inc
cmp
daa
pop
sub
mov
mov
int
nop
add
aas
mov
lods
and
xchg
and
push
xchg
add
scas
leave
adc
mov
fdivs
and
jno
or
mov
ret
sbb
mov
int
jb
mov
mov
fs
cmpsl
cs
push
sbb
jl
rcrl
push
jmp
scas
adc
inc
int3
sbb
sbb
jmp
subb
sbb
icebp
mov
shrl
test
cli
rorl
sbbl
or
aad
adc
pop
xchg
ds
shlb
push
loope
insl
xchg
outsl
ret
test
aam
dec
out
out
xor
fwait
cli
lea
stos
push
je
adcb
adc
or
pop
jg
jle
xchg
scas
flds
xchg
cmp
push
push
rcrb
ss
out
in
insl
and
push
lods
test
nop
mov
pop
mov
xsha1
cmpsb
dec
jb
pop
fadd
arpl
jne
adc
mov
cltd
icebp
adc
sbb
or
insb
imul
push
pop
movsl
rclb
popa
add
jg
shrb
sbb
jmp
aaa
stos
sbb
loopne
adc
xor
orb
fcompl
loopne
mov
pop
arpl
mov
add
or
sbb
push
fimull
sti
inc
and
push
xlat
xchg
sbbb
adc
mov
inc
shrb
cmc
add
mov
icebp
insb
push
decb
ret
and
fs
lar
mov
sub
je
or
xchg
lods
scas
lret
es
push
test
aam
and
ret
shlb
inc
pop
add
pop
push
xor
orb
nop
ja
stc
fildl
xor
call
xor
fstps
loop
add
stos
call
xchg
add
and
ret
dec
mov
dec
and
in
daa
inc
and
repnz
lea
test
cmp
mov
cmp
inc
add
xor
mov
nop
pusha
and
mov
in
loop
int3
fidivrs
je
test
and
sub
adc
push
fsubl
mov
push
andl
push
movsb
pop
int
push
jae
xchg
cmp
xor
lods
cli
jnp
inc
adcl
and
jne
fwait
test
dec
out
cmpsb
imul
loop
xor
ret
outsl
test
sbb
sub
cmpb
adc
sahf
push
pusha
stos
test
and
jne
cmp
cmp
gs
dec
ret
jo
in
inc
pop
push
sbb
sub
jbe
lret
xchg
ljmp
cmp
jns
pop
sar
repz
pushf
loop
pop
movsb
mov
stos
enter
fists
xchg
pop
cwtl
jne
push
imul
les
push
cmp
xor
push
in
sbb
mov
pop
cmp
pop
dec
popf
xchg
pop
cmp
nop
cmp
or
mov
or
repz
and
out
or
enter
jb
ja
nop
mov
in
xchg
sbb
pop
xor
popa
lret
lret
sahf
pop
cmpsb
cltd
sbb
fsubrs
jno
stos
mov
mov
call
sub
jp
jmp
nop
inc
stc
clc
fwait
xor
push
incb
mov
imul
mov
aad
lcall
enter
mov
and
fsubrs
jp
jno
xor
push
mov
in
sub
adc
call
mov
pop
mov
push
jbe
sub
aaa
and
arpl
cmp
out
dec
mov
stc
outsb
cs
sti
push
mov
add
push
lds
add
xor
and
jb
out
pushf
cld
mov
loope
ret
aas
cmpsb
dec
icebp
adc
icebp
jp
fmulp
imul
or
in
adc
sbbb
sbb
mov
loop
shrb
push
xor
cmp
ja
out
les
xor
mov
jo
pop
cmp
cli
mov
outsl
sbb
jno
cmp
ror
push
pop
lods
orb
dec
in
lods
scas
jb
lock
or
dec
fidivrs
pushf
out
xchg
xchg
adc
fiaddl
data16
sahf
xchg
pop
loop
popa
mov
push
cld
mov
lret
mov
add
mov
dec
or
mov
pop
sahf
dec
out
jo
inc
pop
in
repz
sub
mov
aaa
cmpxchg
idivl
jmp
dec
pop
out
icebp
push
lahf
and
ret
mov
dec
out
into
xchg
adc
lcall
aam
outsb
fdivl
sub
mov
pusha
fistl
adcl
xchg
cmpsl
jp
or
shll
cmp
les
mov
test
cmp
push
dec
movsl
test
push
and
lret
or
in
inc
fstpl
push
repnz
sbb
das
pop
aaa
mov
xchg
movhps
aad
xor
xor
xor
push
test
push
fidivs
es
xchg
icebp
xchg
divl
or
xchg
add
or
loop
dec
cmp
aam
jo
mov
jnp
xchg
in
outsl
pop
repnz
idivl
dec
cmpsl
sbbl
decb
in
push
adc
cld
push
jbe
ljmp
js
xchg
stos
adc
lahf
push
xchg
sbb
push
fildll
and
addr16
adc
mov
fists
add
dec
push
fs
int
ds
inc
adc
mov
push
jmp
xchg
scas
xchg
add
out
cld
xor
inc
push
xchg
pop
inc
out
mov
cs
mov
mov
mov
aam
imul
mov
mov
bound
mov
inc
fwait
insb
jnp
or
lcall
addl
subb
inc
cmc
cld
cmp
loopne
xchg
sub
scas
inc
std
mov
movsl
inc
mov
sbb
mov
add
cld
push
fwait
bound
mov
jmp
daa
aas
jl
xor
jo
push
ja
xchg
xchg
sub
pusha
mov
data16
nop
dec
cld
push
lock
cmc
pop
mov
jp
or
std
push
jmp
sarb
sub
enter
jp
fnstsw
es
and
dec
data16
sbb
inc
xchg
stos
jne
rclb
repnz
scas
dec
xor
mov
leave
dec
pop
lret
dec
ficoms
aas
push
inc
insl
pop
es
jge
jo
jo
shlb
pop
dec
dec
dec
cmp
rolb
rcrb
sbb
arpl
int3
mov
pop
shrb
das
pop
push
nop
aad
repnz
cmpsb
testb
mov
mov
xor
pop
leave
lcall
sbb
jge
xchg
add
fdivl
bound
mov
in
jl
inc
scas
or
cmpsb
jmp
push
cwtl
dec
xor
test
fcoms
jecxz
cmpsl
sbbl
mov
or
pusha
cli
xchg
push
xor
ficoml
xchg
rorb
enter
sub
xchg
ror
inc
xlat
xchg
js
or
cwtl
jle
xchg
outsb
popa
jg
outsb
mov
stos
test
or
xor
fpatan
cmp
push
test
sub
loopne
jl
fidivs
push
sbb
outsb
jo
sub
xchg
stc
sub
repnz
sub
test
add
dec
mov
pop
jnp
pop
mov
outsl
lret
std
ljmp
outsl
aad
xor
mov
dec
aam
int
sbb
dec
inc
sti
cld
sub
ror
bound
sbb
mov
aas
xchg
inc
or
sahf
shrb
jmp
mov
add
dec
mov
dec
pop
sub
aam
test
mov
dec
rorb
jne
pop
out
ljmp
jbe
cmc
jae
dec
push
push
jne
sti
call
lds
lods
jmp
or
enter
dec
pop
cwtl
and
je
xchg
sbb
aam
pusha
sbb
mov
out
or
js
or
cltd
pushf
jnp
add
sbb
xchg
inc
lods
cmp
fisubs
or
adc
cmp
mov
mov
test
mov
cmp
cmpsb
leave
test
or
sub
fcoms
popf
sub
fwait
push
jmp
inc
lods
mov
icebp
adc
jbe
and
inc
adc
in
lcall
xchg
jb
vucomiss
movsb
mov
iret
movb
shlb
fnsave
lea
xchg
jmp
jno
pop
jbe
dec
popa
test
cmpsb
aad
std
push
or
xchg
add
addl
notb
rcrb
or
mov
rorb
rorl
movsl
shlb
loop
mov
insb
popf
push
jp
std
and
cmpsl
add
jae
enter
or
daa
xchg
or
dec
dec
push
jmp
repz
sti
data16
pop
out
popa
sub
movsl
in
inc
stos
mov
jecxz
int
scas
add
cmp
dec
mov
sbb
ljmp
push
or
or
scas
test
test
faddl
icebp
pop
loope
dec
jnp
cmp
andb
mov
shll
movsb
xchg
sbbl
jne
aam
mov
aam
or
fldl
or
idivb
fs
or
jno
inc
leave
ds
call
pusha
adc
in
iret
push
sbb
iret
inc
xor
in
insl
or
mov
push
mov
add
test
xchg
arpl
or
stc
inc
je
xchg
push
inc
push
outsl
mov
mov
push
scas
test
adc
mov
das
sbb
lds
inc
popa
lahf
cmp
and
lods
dec
test
in
mov
dec
aad
js
in
shl
mov
pop
loopne
rolb
mov
fbld
mov
outsl
fwait
xchg
fcmove
pop
or
loop
scas
mov
pop
mov
push
inc
roll
mov
cli
xchg
and
add
push
mov
add
cld
jge
lret
hlt
or
add
clc
mov
mov
mov
sahf
mov
and
aaa
cmp
inc
jge
outsb
lods
push
dec
addr16
daa
js
scas
pop
mov
add
sbb
fstl
mov
fimull
jecxz
pop
stc
cwtl
fisubrl
push
mov
xor
sub
fisttpl
fisttps
xor
inc
popf
aam
into
call
cmp
jns
pop
fwait
xchg
xchg
dec
adc
dec
stc
jb
clc
idivl
fimuls
adc
mov
fldl
jge
dec
sub
stos
or
cmp
or
and
sbb
cmp
ret
js
sub
jb
mov
ljmp
scas
outsl
pop
shll
jno
inc
pop
es
test
mov
cs
loopne
mov
repnz
adc
push
mov
inc
fbld
xorl
test
adc
xor
popa
push
ret
push
aam
lock
cmp
rcr
xchg
rcl
mov
add
daa
jno
imul
pop
add
sub
jo
and
pop
mov
cmp
add
lds
test
mov
mov
fsts
ret
scas
inc
clc
adc
stc
je
hlt
pop
mov
pop
fmul
cmp
loopne
jmp
dec
cmpsb
shrl
or
push
jmp
std
cltd
dec
scas
mov
std
in
int3
xor
bound
call
and
testl
cltd
lea
movsl
xor
lcall
push
mov
mov
dec
pop
mov
lods
mov
push
pusha
clc
pop
inc
rcrb
loop
push
inc
es
pop
inc
push
sub
dec
and
dec
ljmp
sub
movsl
or
mov
pop
into
sub
in
test
xor
scas
rcrb
popf
inc
xor
loope
shlb
stos
jmp
mov
inc
ljmp
lahf
mov
push
sahf
add
xchg
adc
jg
push
mov
popf
enter
cmp
ret
int
in
jge
ret
xor
inc
jp
push
jne
push
sub
into
cmp
in
enter
cli
cltd
clc
cmpsb
sbb
ljmp
jb
gs
dec
icebp
ljmp
xchg
pop
mov
pop
mov
sbb
lea
andl
lret
mov
push
mov
cltd
and
call
jns
mov
or
sbb
fadd
mov
sti
movsb
sbb
dec
mov
adc
mov
scas
inc
daa
sbb
cmp
mov
jo
jp
or
push
cmpsb
jbe
daa
or
mov
push
stos
inc
xchg
adc
stos
xlat
stc
jle
popf
adc
sarb
adc
and
xchg
push
rclb
jg
sbb
fidivs
or
cld
and
sbb
cmp
push
fs
mov
xchg
sub
inc
ret
xor
andb
xchg
outsb
std
or
insb
jns
add
jbe
dec
dec
fistpll
or
ja
inc
sub
xchg
pop
mov
ret
mov
ljmp
jecxz
and
mov
or
sub
sub
fbstp
xlat
push
mov
clc
outsb
cmp
xlat
pushf
xchg
cmc
dec
jecxz
mov
scas
fwait
xor
sti
xchg
repz
and
pop
es
cmpsl
sub
sarb
add
jp
mov
mov
mov
jmp
lret
addr16
and
cs
pop
xlat
lcall
fldcw
mov
enter
jmp
repnz
cmp
xchg
in
stc
jmp
in
mov
push
jge
ljmp
clc
sbb
call
jmp
dec
clc
or
test
mov
lods
add
stos
cmp
adc
jb
or
aam
dec
jne
xchg
ja
cmpsb
mov
xlat
sub
fisttpll
ljmp
push
cwtl
xor
push
rclb
test
inc
icebp
push
jmp
imul
inc
popa
cmp
lods
adc
and
dec
sub
inc
and
add
div
adc
sub
jg
or
enter
pop
pop
fisubs
inc
loopne
add
call
rolb
cmc
icebp
data16
rcll
sub
xor
fwait
ret
pushfw
js
dec
pop
dec
fdivrs
sbb
sub
notb
jge
shrl
mov
out
adc
add
aaa
jmp
pop
mov
push
mov
arpl
lahf
movb
mov
jae
ficompl
ljmp
mov
cmp
arpl
cmp
andl
adc
outsl
xchg
and
mov
push
jns
into
out
pop
sbb
insl
xchg
pop
into
inc
mov
icebp
pop
mov
js
cs
xchg
sub
inc
mov
aas
les
mov
aaa
inc
cwtl
push
pop
shll
repz
movsb
inc
in
mov
out
cmp
std
push
xchg
dec
cmpsb
dec
and
xlat
sbb
sbb
scas
push
cli
jbe
js
push
pop
int3
adc
adc
xor
mov
dec
test
sub
xchg
sbb
mov
lret
pop
xlat
loope
call
push
jg
scas
lret
jb
frstor
stc
dec
test
hlt
jmp
je
jecxz
loopne
sub
xchg
es
decb
mov
jmp
or
cs
fmuls
jno
lahf
jne
popa
fcompl
loope
das
xlat
lds
xchg
dec
cmp
mov
andl
mov
dec
mov
pop
mov
cwtl
aas
dec
iret
jo
stos
inc
rcrl
call
iret
mov
mov
loopne
cmp
inc
mov
lea
jge
dec
mov
inc
push
and
jl
clc
es
stos
and
push
lds
jp
jle
and
fsubrs
cltd
shlb
inc
cmp
sub
cltd
cld
test
or
mov
fistps
sub
jge
fcmove
add
and
imul
je
push
sbb
shlb
and
xchg
arpl
fstpl
jo
imul
pushf
fucomip
pop
xchg
rcll
or
sub
inc
sub
inc
fnstenv
sbb
cmpsl
in
jecxz
inc
dec
imul
xchg
lahf
repnz
fs
fildl
add
rcrl
or
das
adc
mov
adcb
sbb
in
add
rol
aaa
cmc
inc
test
mov
mov
scas
pop
test
add
mov
in
push
cmpl
aas
dec
jp
lahf
pushf
imull
xor
pop
std
jnp
movsl
xchg
pop
arpl
xor
subb
mov
movsb
pop
leave
outsl
shrb
insl
jg
adc
jge
call
ljmp
mov
lds
clc
push
fsubrs
rorl
jg
in
cmp
push
adc
add
xchg
pop
dec
les
inc
inc
and
sbb
fnstenvs
daa
mov
mov
aas
cmpl
mov
jns
mov
jnp
hlt
aaa
rcrb
adc
inc
and
jns
out
jne
pop
cmp
push
push
sbb
jmp
or
jno
hlt
adc
pop
imul
cmpsb
int3
arpl
mov
imul
push
sbb
enterw
xor
aaa
adcl
hlt
inc
pop
push
jne
andl
mov
push
mov
repz
or
aam
mov
mov
pushf
daa
ret
cmp
xor
jo
ja
jnp
out
pop
cmpsl
pusha
dec
add
sbb
sub
call
or
mov
jb
pop
movsb
addr16
leave
arpl
test
add
mov
pop
pop
aas
mov
add
es
sbb
pop
jg
cmpsl
mov
imul
ljmp
xor
std
push
pop
out
xchg
cmc
aaa
movb
insb
shrl
sub
cmp
cmp
rcl
iret
inc
sbb
std
cmp
sbb
dec
mov
push
push
push
rcll
stos
insl
cmp
jle
cmc
adc
fldcw
sbb
ret
sub
imul
or
arpl
std
mov
inc
loop
jbe
xchg
ja
pop
add
sub
push
pop
movsb
and
sbb
lea
popf
jl
cmpsl
rcll
cs
or
scas
jne
and
mov
dec
pushf
lahf
ret
pop
sarl
mov
clc
mov
jp
imul
push
sub
jmp
xchg
cmpsl
push
push
js
add
out
sti
insb
and
arpl
out
mov
jns
aas
insl
inc
mov
push
pushf
lahf
or
daa
inc
loopne
add
addr16
fwait
pop
cmpsl
test
mov
jae
jae
or
out
and
inc
push
test
in
sub
leave
dec
cs
imul
cmpsl
add
xchg
inc
shll
mov
adc
adc
cli
jns
loope
push
std
or
outsb
rolb
mov
xchg
add
push
adc
inc
in
pop
xlat
stc
cmp
ds
scas
scas
push
mov
rcrl
sub
xor
fists
popf
push
sub
push
test
adc
lahf
repnz
xchg
les
scas
stos
iret
adc
sbb
hlt
frstor
mov
and
dec
ret
rcr
jno
jle
jg
lods
das
mov
insb
xor
lods
call
pop
movsl
fwait
xchg
les
fisttps
xchg
inc
jae
inc
loopne
cltd
pushf
sti
or
test
mov
idivl
hlt
lret
aad
jle
or
inc
push
mov
mov
dec
sbb
mov
addl
and
inc
push
fnstcw
test
push
cwtl
rcrb
mov
add
inc
fistl
lods
pop
inc
sbb
fnstcw
in
cli
sbbb
int
inc
sbb
push
mov
mov
ja
mov
xor
fdivrl
lahf
loopne
shll
cmp
pop
sub
mov
sbb
repz
ljmp
jbe
push
pop
std
jo
pusha
pop
insb
popf
ds
lock
test
mov
int3
adc
xor
cli
xor
cmp
in
mov
ljmp
fidivrl
jbe
inc
imul
mov
xor
jmp
bound
sub
pop
push
pusha
jp
sbb
add
or
jl
stos
and
push
popa
test
xchg
pop
jno
add
shrb
inc
pop
je
loop
fstl
fcoms
jnp
ss
xchg
dec
insb
push
jmp
outsb
pop
push
jmp
out
xor
jl
not
stos
cmp
pop
icebp
rcll
imul
sti
push
shll
ret
cld
hlt
je
gs
into
xor
mov
sysexit
or
scas
cs
pop
lds
dec
in
dec
mov
std
rorl
test
fiaddl
or
mov
mov
mov
jecxz
push
xchg
adc
rcrb
sbb
mov
jle
push
insb
inc
aaa
iret
mov
popa
enter
add
subb
mov
in
push
xchg
insb
cli
ret
push
mov
ljmp
push
add
xchg
xor
fmuls
cwtl
xor
inc
jnp
adc
jl
fcomp
out
sbb
push
dec
adc
jg
inc
cs
push
jbe
insl
pushl
repnz
mov
jns
mov
call
and
pop
pop
enter
popa
fdivl
adc
xchg
enter
and
and
sub
push
push
sbb
xor
jbe
sub
pop
xchg
dec
bound
push
out
imul
pop
mov
and
xor
push
push
fwait
mov
popa
push
hlt
xchg
inc
add
jns
leave
pop
lock
gs
enter
mov
fwait
or
pop
cmpsb
mov
popa
cmp
xchg
lods
out
mov
ret
sbb
ja
in
in
push
aas
and
sbb
sub
insl
sbb
addr16
cmp
out
pop
jg
add
pop
pop
lahf
cmp
outsb
inc
cltd
test
or
loopne
or
add
cmp
push
xchg
ret
js
pop
hlt
xchg
fwait
mov
push
sbb
jo
lock
jp
push
insl
or
aad
inc
inc
lahf
cmp
jnp
fs
mov
cmp
out
test
std
xchg
add
mov
ret
jae
inc
movsl
insl
sub
jno
cmp
pop
xchg
sub
scas
and
xor
pop
push
iret
or
sbb
mov
push
sbb
or
lret
insl
sbbl
nop
mov
xor
fdivrl
push
sbbl
lea
mov
fnsave
rcl
adc
add
dec
or
mov
add
js
imul
test
mov
aam
cmp
push
pop
push
pop
sbb
jmp
push
cmp
insl
andb
dec
repnz
sub
cmp
bound
scas
imul
adc
lea
adc
sub
decb
stc
pop
inc
or
jmp
lea
jl
mov
add
out
jns
icebp
mov
xor
push
mov
xor
loopne
mov
mov
dec
insl
clc
mov
rcrl
or
adc
and
or
aad
fsubrl
sbb
push
xor
cmp
dec
lods
mov
lock
sub
rcl
adc
ja
push
leave
cld
push
into
ret
mov
dec
mov
or
mov
fidivrl
mov
lock
faddl
in
mov
xor
inc
stos
rorl
adc
dec
enter
pop
pop
cmp
sahf
or
and
idivl
or
es
mov
sbb
mov
lods
mov
sbb
loope
dec
jecxz
cmc
sbb
sub
out
call
out
int3
pop
cld
mov
test
sbb
out
pusha
sbb
pop
imul
pop
sbb
int
push
out
pop
movsl
jae
cld
mov
lods
jp
fnstsw
and
xor
push
mov
les
or
out
stos
adc
push
pop
cmp
lea
xchg
ds
mov
adc
repnz
xadd
xchg
sbb
dec
aaa
pop
jle
mov
jne
fdivr
cwtl
pop
out
cmpl
push
rcrb
cltd
movsl
addr16
and
push
dec
divb
shll
jbe
sub
or
fstpt
mov
mov
mov
add
imul
leave
cmp
mov
mov
jno
fstpl
inc
or
mov
or
inc
and
das
sbbb
cmp
mov
dec
add
orb
cltd
ss
jo
cmp
andl
mov
cltd
fnstenv
push
dec
dec
loopne
inc
inc
std
cmp
push
sti
add
adc
add
sbb
push
cmpsb
and
or
insl
xor
xor
filds
xchg
push
imul
mov
lock
std
adc
jne
push
xor
fwait
popa
sub
mov
add
loope
lods
les
lods
jmp
ret
mov
dec
stos
jne
ljmp
mov
dec
dec
dec
in
mov
jno
dec
sti
push
daa
dec
push
test
bound
xchg
adc
xor
sub
xchg
mov
sub
cmp
xor
push
lcall
fsubp
jge
into
sub
jge
xor
bound
out
push
repnz
int3
mov
bswap
xchg
aam
das
mov
shr
ficoml
xchg
dec
iret
mov
popa
fsub
cli
or
dec
lcall
or
xor
mov
bound
fs
xor
dec
scas
test
pop
sub
stc
mov
lods
cmpsl
je
stos
adc
jo
jno
or
in
arpl
lret
imul
jb,pt
xor
ljmp
cmp
xchg
pop
xor
xchg
adc
or
in
mov
inc
imul
ret
loopne
in
into
sahf
xchg
cmp
rclb
jo
push
int3
pop
mov
mov
enter
lods
mov
out
repz
mov
xchg
mov
out
fmull
addl
in
jae
fildl
stos
sub
mov
dec
gs
dec
push
cmp
int
ss
xlat
lret
cld
dec
jmp
mov
data16
jle
dec
push
hlt
fisttpll
mov
inc
adc
lahf
movsl
xor
xchg
jb
mov
outsb
or
les
or
outsb
mov
cmp
jl
aam
icebp
add
or
fsubrl
loopne
ret
sub
cmp
icebp
cmp
add
call
lds
daa
data16
movsb
rorb
dec
mov
sub
test
or
lea
out
std
dec
pop
push
fists
insl
sahf
push
mov
jno,pt
and
arpl
pop
or
mov
insl
popa
jnp
lret
inc
mov
test
fs
and
dec
das
roll
mov
push
je
out
int3
pop
mov
dec
aad
lds
lods
test
mov
mov
adc
or
jns
or
cmp
pop
jge
mov
sub
cwtl
push
cwtl
pop
pusha
fstl
push
test
rolb
or
jp
insl
loopne
fstpl
cli
fimull
dec
shll
bound
sarl
out
or
mov
sbb
imul
sbb
sbb
int
cmp
cli
push
cwtl
das
cmp
cmp
mov
popf
shrl
repnz
lahf
mov
pop
jne
jns,pt
and
ds
push
aaa
int3
das
cli
js
cli
les
xchg
mov
mov
dec
pop
cmpl
in
or
jge
xchg
inc
sub
ss
cli
pushf
dec
add
and
aad
and
fsubp
insb
sub
xor
fidivs
add
sbb
adcb
mov
mov
gs
addr16
mov
addr16
sti
and
xchg
call
sub
inc
js
adc
inc
mov
das
arpl
jno
aaa
push
mov
enter
popf
daa
cld
adc
popf
scas
loop
outsl
daa
mov
in
jl
gs
lea
mov
xchg
lds
data16
stos
cmpsl
sub
adc
es
and
jecxz
push
frstor
pop
scas
sbb
ja
jl
jecxz
dec
cwtl
loop
cmpsl
xchg
aad
xlat
std
pop
loopne
icebp
xchg
mov
leave
adc
repnz
push
lods
add
in
and
and
adc
aas
xchg
mov
cmc
mov
adc
mov
push
in
fsts
sub
ss
rorb
adc
inc
hlt
into
xchg
mov
inc
inc
sbb
movsb
icebp
ss
movsl
adc
icebp
inc
nop
out
popa
push
fistpll
shlb
mov
mov
rcrb
mov
shrl
fsubl
sbb
test
arpl
lcall
ja
out
fsubs
mull
movsb
cmp
push
rcl
sub
scas
adc
xchg
hlt
int3
xor
mov
out
test
cmpl
sub
or
repnz
je
cmp
ret
out
inc
fld
mov
xor
rorl
mov
icebp
push
pop
test
jns
inc
fisubrl
add
aad
or
lret
cmc
out
or
les
jecxz
add
daa
movb
fwait
xor
rcr
fcompl
mov
adc
lret
sarl
fsubrp
sub
mov
fldcw
call
or
mov
dec
lods
add
ret
movsl
cli
jns
push
stc
inc
sub
inc
pop
sbb
pop
testl
push
xchg
add
mov
fsubs
loop
sbb
test
lods
pop
ds
pop
mov
jno
pop
jecxz
cmp
mov
sbb
test
xlat
mov
bound
cmpsb
cmp
lods
test
sub
dec
out
or
mov
loope
stos
pop
insl
jge
xlat
lahf
popa
pusha
and
mov
jbe
sub
inc
adc
cmpsb
daa
add
push
mov
rorl
and
cltd
call
and
aam
xor
pop
push
cwtl
cmp
lcall
pop
xor
pop
paddsw
cmpsb
sbb
mov
mov
mov
gs
rclb
repnz
in
cmpsl
jns
and
jno
bound
jl
mov
test
loop
pop
add
jnp
sub
iret
pop
popf
ret
cld
mov
jnp
jle
movsb
cmp
mov
push
adc
ret
in
and
sub
mov
icebp
das
addr16
mov
pop
filds
shll
ficoms
sub
jo
mov
out
pop
mov
push
pop
in
sub
mov
lret
pop
clc
jmp
nop
add
clc
mov
ds
mov
lret
cld
test
dec
ret
aam
arpl
stos
fstpt
xorl
gs
ficomps
push
arpl
sub
mov
inc
jl
fmulp
repz
int3
mov
inc
imul
arpl
push
mov
arpl
mov
out
es
test
test
rcr
jae
loop
pop
aam
push
lods
cmpsb
aaa
xchg
insb
sub
stos
mov
lret
inc
inc
ljmp
ljmp
or
sub
repz
pop
jg
mov
adcl
psraw
sti
jno
sub
jp
pop
and
inc
pop
inc
movsb
stc
imul
rcll
loop
sub
push
dec
lods
inc
outsb
aas
stos
in
jmp
xor
mov
dec
in
add
shl
jp
fwait
insb
cmp
arpl
cld
pop
xlat
mov
fiaddl
mov
mov
imul
and
cmp
call
lods
fmull
or
es
jbe
dec
sbb
xchg
or
lahf
mov
jecxz
mov
aad
das
mov
or
push
jl
arpl
sahf
shlb
sbb
jo
ds
lcall
arpl
add
cld
or
bound
inc
push
int
xchg
jp
xor
ucomiss
cmp
pop
and
sbb
int
in
test
push
and
mov
ds
push
xchg
pusha
test
daa
stc
jnp
orb
fiaddl
or
data16
jno
xor
or
ffree
aaa
sub
inc
push
dec
mov
jmp
mov
push
inc
xchg
subl
add
jge
pop
fs
xchg
or
test
je
jb
and
sahf
xor
icebp
mov
sub
mov
lods
data16
fwait
push
xchg
subl
xchg
inc
mov
inc
sti
inc
sahf
mov
push
mov
test
mov
cwtl
clc
sbb
lock
push
xor
test
scas
push
push
sbb
mov
fimull
or
push
cmpsl
ljmp
ljmp
lods
mov
mov
pop
and
adc
ljmp
ja
lock
adc
mov
andl
rclb
xor
jg
cmp
jl
rcrl
loopne
repz
and
push
xchg
jo
inc
shll
in
jl
rolb
pop
pushf
inc
jb
mov
rcrl
iretw
dec
cmp
push
rol
and
cmpb
mov
mov
out
cltd
ds
mov
xor
pop
and
pop
jne
or
fldl
mov
inc
int3
xor
lods
mov
aam
pop
add
dec
stc
pop
repnz
jns
or
les
out
sbb
inc
scas
cmp
mov
mov
gs
bound
inc
push
mov
sbb
scas
dec
pop
inc
sbb
rcl
xchg
shrl
cmp
out
rcrl
pop
call
mov
lcall
and
lcall
shlb
imul
xor
pop
in
imul
notl
cmpl
andb
jo
outsl
shrl
jo
jae
xchg
popf
sti
adc
imul
cli
movsb
sub
jns
insb
xchg
imul
pop
cwtl
sbb
leave
push
sub
inc
mov
dec
sub
mov
in
insl
int
sahf
xor
mov
cmp
push
ljmp
mov
adc
cmpl
mov
out
lahf
xchg
dec
pop
push
movsl
jb
stc
cmp
lcall
inc
cwtl
dec
andb
gs
cmp
sti
and
int
stos
mov
jne
and
loope
cli
xchg
imul
mov
push
out
cld
mov
mov
xor
pop
shl
pop
outsb
and
fisubrl
ficompl
mov
jl
add
cmp
add
xor
jg
addr16
adc
mov
jp
xor
jg
repnz
inc
pusha
jmp
jecxz
jmp
loop
and
scas
mov
xor
pop
lret
mov
ret
jno
jns
fldl
dec
cmp
dec
dec
jmp
in
adc
popf
loop
movsl
testl
dec
ffreep
fisttpll
scas
into
fbld
or
dec
in
stos
xchg
sub
aad
xchg
and
aam
or
or
lea
aas
cld
lea
popa
ds
mov
pop
or
sbb
add
das
mov
into
xor
adcb
rcrl
out
fs
cmp
clc
cmp
rcrb
sub
movb
xchg
xchg
mov
loope
jno
jmp
fcomp
call
pop
subb
cli
pop
enter
std
push
sbb
es
xor
add
lock
in
dec
mov
sbbl
shll
cmc
stos
js
and
sbb
pop
ret
fildll
enter
nop
ss
and
daa
andl
fdivs
into
push
call
push
push
fs
mov
xor
pushf
in
push
cmpsb
in
ds
sbb
push
mov
mov
sahf
notl
cltd
fsubl
call
repnz
cmpsl
fs
mov
lea
pop
add
ss
sahf
arpl
repz
iret
sbb
js
cwtl
movsb
cmp
push
pushf
sti
and
lock
rcl
enter
shll
ss
mull
std
dec
out
inc
jge
stc
cltd
xchg
sbb
jnp
push
js
loopne
negl
aad
scas
movsl
lds
enter
bound
sbb
cld
pop
bound
popa
ja
cwtl
daa
dec
push
daa
stc
or
jmp
cs
inc
les
add
test
xor
sbb
sub
mov
ret
test
or
loope
adc
out
mov
dec
fsqrt
aam
mov
xor
pop
lock
mov
inc
jb
push
or
xchg
scas
push
popa
xlat
jmp
xor
filds
or
push
mov
std
scas
mov
nop
xor
push
pop
xor
add
pop
cmp
call
sub
lock
cmp
je
xchg
movsl
dec
scas
mov
mov
push
ss
dec
jns
outsb
cmpsb
les
or
jp
outsl
xor
mov
mov
push
shrb
aam
in
sti
jle
shl
mov
pusha
test
ja
jp
inc
push
xor
fildll
int
out
cmp
cmpsb
in
sbb
or
and
aad
adc
fistpll
pop
inc
mov
mov
jle
jno
or
aad
xchg
int
outsb
jmp
je
sbb
insl
mov
xlat
loope
lock
jae
mov
repz
add
jnp
push
scas
jp
in
bound
lods
int
xorl
jg
hlt
lret
bound
inc
jmp
loope
sbb
pop
jnp
sub
pushf
jle
sbb
test
cmpsl
popf
xor
mov
xor
sub
sahf
push
mov
cmp
out
dec
out
lock
ror
aaa
jbe
bound
iret
int
inc
hlt
xor
popa
adc
inc
daa
mov
xchg
xor
fcoml
scas
pop
add
outsl
ss
cltd
mov
jb
sub
cltd
out
mov
ret
xchg
pop
out
pop
xchg
cmpsl
mov
dec
cmc
sti
out
les
xchg
sbb
add
aam
pop
mov
stos
jne
cld
fistpl
xor
js
xor
lods
mov
lahf
mov
aam
test
std
and
push
push
scas
ljmp
test
sub
mov
pop
dec
pop
fwait
dec
sbbl
xchg
xor
loop
pushf
xchg
inc
pushf
addr16
negb
out
lods
add
pop
hlt
mov
pusha
addb
xchg
out
fs
cmp
pop
cmc
dec
xchg
pop
mul
add
insl
and
dec
cmpsb
nop
add
test
or
cmp
movsb
push
mov
push
pop
jg
mov
and
push
insl
mov
mov
or
jmp
lret
add
out
jae
pop
dec
cmp
lret
push
insb
cmp
clc
pop
cmp
inc
mov
movsb
daa
out
jle
cli
jnp
sub
repnz
xor
rol
dec
fidivs
enter
pop
out
mov
out
js
mov
pop
insl
sbb
test
popa
add
aas
inc
sbb
int3
jp
sbb
ds
mov
clc
fadds
xchg
daa
mov
fldt
lds
push
lds
adc
xor
in
cmpl
add
and
jmp
int
jecxz
sbb
fwait
sti
and
pop
xchg
out
push
or
pop
lahf
lds
cmp
jle
dec
daa
outsl
out
jp
mov
pop
ds
ljmp
xor
stos
cld
rcr
dec
lret
rcrl
in
jno
pop
dec
mov
movsb
mov
pop
mov
test
aad
cmp
jno
aad
mov
pop
cmc
stos
add
movsb
adc
pop
xchg
jp
test
or
jnp
jle
sub
mov
cmp
scas
negl
movsb
inc
icebp
adc
jl
mov
ret
fwait
les
push
mov
sbb
hlt
or
neg
sub
sbb
jg
jnp
mov
mov
sbbl
je
push
cmpsb
inc
movsl
jmp
fnstenv
in
jp
aad
icebp
push
adc
xchg
cmp
ret
sbb
ljmp
int3
adc
push
jbe
or
sbb
fiadds
mov
xchg
or
or
mov
pop
das
pop
into
pushf
sbb
lret
arpl
std
mov
jmp
mov
xor
daa
xor
xchg
lahf
sub
mov
aam
cmp
xlat
mov
pop
mov
loope
inc
adc
into
pop
int
xchg
out
mov
jne
xchg
shrb
sbb
pop
adc
xchg
adc
das
cmp
pusha
adc
and
cmp
mov
inc
loopne
push
push
imul
scas
iret
jns
add
xor
fsubl
inc
ja
dec
adc
jg
lods
nop
sub
movl
cmp
ja
loopne
push
mov
das
mov
insb
ja
shlb
or
push
aad
mov
xchg
mov
ret
xchg
dec
subl
sbb
and
or
add
sub
repz
dec
push
push
jecxz
inc
adc
mov
xchg
xor
inc
push
aaa
jae
adc
sbb
ret
iret
data16
push
and
xchg
pusha
subb
add
lods
ljmp
jno
das
and
or
fucomi
les
icebp
mov
xor
pushf
rcr
push
fstl
cld
jl
dec
repnz
aam
adc
pcmpgtd
je
add
dec
mov
jge
or
leave
xchg
mov
dec
sbb
push
mov
jl
stos
test
mov
ja
shl
shlb
out
add
sub
pop
cld
arpl
les
pushf
pushl
push
adc
int
cmp
sub
ss
add
sbbl
push
rcrl
jl
lcall
cmp
cld
out
out
jmp
dec
jno
lods
push
jmp
adc
enter
sbb
into
imul
shlb
mov
pop
cli
mov
pop
adc
outsl
int3
xor
pusha
add
jne
jnp
dec
xchg
test
fwait
dec
repz
sbb
xchg
iret
jp
push
rcrl
sti
lcall
pop
pushf
cli
adc
lea
jbe
repz
push
jl
sbb
add
lret
jbe
icebp
insb
sbb
outsb
shl
outsl
adc
inc
fs
inc
aas
jle
mov
out
mov
pavgw
clc
and
test
call
test
loopne
dec
xchg
inc
outsb
push
jg
cmpsl
dec
push
mov
rcll
and
pop
test
cli
xchg
pop
negb
xor
std
fdivrs
pop
pop
cmpsb
jno
mov
pop
in
fwait
lock
daa
int3
and
xor
loope
sahf
adc
popf
xor
mov
jmp
outsb
jecxz
mov
data16
in
pusha
jnp
daa
scas
xor
fwait
xor
fidivrs
les
stc
mov
fwait
aam
mov
imul
jbe
mov
outsl
add
loope
rol
push
sbbl
mov
call
jp
add
mov
adc
pusha
enter
repz
add
or
add
sub
xchg
lret
fcmovu
sub
xor
dec
mov
ds
xchg
imul
sahf
scas
testl
cmpsb
in
lcall
mov
call
mov
fisttpll
mov
out
and
add
scas
push
icebp
push
mov
jno
test
testl
pop
cmp
jae
xchg
mov
fcomi
sbb
in
mov
mov
icebp
cs
insb
das
nop
stos
pusha
dec
pop
imul
cmp
imul
push
cmp
daa
jmp
daa
inc
inc
push
xor
sub
jmp
roll
pop
filds
push
push
shll
jecxz
out
imul
mov
sub
add
mov
adc
and
aad
xchg
jle
jmp
test
jg
lods
leave
xchg
mov
mov
addr16
inc
ljmp
pop
repz
sbb
orb
mov
lea
add
lds
inc
test
divb
std
in
addr16
adc
jns
js
sub
or
fmull
fstl
jo
inc
and
test
mov
rcll
jbe
scas
adc
jae
cmc
push
stc
pop
cltd
xchg
xor
ljmp
inc
inc
dec
out
popa
push
xor
aad
or
out
dec
filds
dec
ljmp
add
pop
outsb
icebp
sbb
pop
sbb
and
cmc
cmp
dec
pop
sbb
subb
popf
addr16
shll
and
push
inc
and
fcompl
mov
mov
mov
jmp
movsl
mov
stos
mov
jge
fisttps
gs
les
add
dec
xor
lods
and
sahf
sub
add
mov
and
ficoml
mov
std
inc
rorl
pop
push
movsb
push
arpl
sahf
mov
and
shlb
mov
bound
add
imul
cmp
call
test
cmpsl
lret
push
lea
dec
or
pop
fildll
jns
ljmp
lret
and
xchg
jge
iret
loope
jp
pop
xchg
andb
or
aaa
lea
cmp
xchg
xor
inc
rcrb
ljmp
test
inc
xor
xor
sub
daa
pop
popa
ret
xorb
enter
sbb
pop
push
or
push
mov
dec
cmpsb
in
lods
insl
nop
fistpll
fsts
mov
inc
mull
jb
loope
sub
jns
or
orl
and
mov
mov
xor
aad
and
xchg
adc
mov
jmp
sti
lock
push
rol
fidivrs
into
gs
loopne
pop
inc
outsl
xchg
fbstp
jg
sub
scas
lcall
daa
inc
test
xchg
lcall
sbb
imul
add
xor
fists
jnp
jmp
xor
arpl
ss
mov
lcall
cltd
test
push
das
test
adc
jg
xor
cld
jg
adc
aad
push
adc
clc
aam
out
sub
jne
je
lcall
nop
or
test
xor
cmp
pop
stos
xchg
and
xchg
dec
push
rolb
xchg
xor
pop
repnz
mov
divl
imul
hlt
mov
cmp
leave
cs
and
leave
aam
cli
lods
popa
cmp
push
inc
sti
pusha
ss
mov
adcl
push
arpl
jecxz
push
mov
mov
mov
mov
and
adc
sti
lret
cmpsl
dec
push
xchg
leave
je
arpl
js
test
pop
inc
jmp
je
dec
rorl
or
cmp
mov
push
sbb
or
mov
and
or
mov
je
xchg
cmpsb
or
and
loop
int
push
xorb
push
outsb
pop
mov
cmpsl
and
pushf
stc
inc
int
cwtl
inc
cwtl
xchg
es
sub
push
cmp
popa
xor
and
xchg
pop
imul
mov
fucomip
or
and
xlat
jmp
dec
insl
ja
out
in
psrad
rolb
inc
mov
push
aas
mov
sbb
jg
jmp
outsb
lods
call
call
jne
or
test
dec
int3
frstor
jno
push
outsl
lret
popf
cmp
je
push
cmp
mov
call
xor
xor
jbe
add
pusha
jl
int
and
arpl
jge
out
incb
adc
cmp
nop
in
jno
or
cmc
sub
xchg
cltd
popa
cmp
lea
dec
pop
arpl
pop
mov
ja
xchg
mov
orl
test
cmpsl
ret
in
repz
ds
pushf
les
outsb
outsl
and
dec
mov
loope
daa
lds
loopne
jg
fcmovnbe
mov
sahf
popf
sbb
inc
cmpb
fcoms
ffree
push
lret
adc
inc
cli
clc
xor
mov
jne
xor
fldt
xor
fstl
push
sbb
push
mov
push
loope
add
movl
cli
pop
xor
jne
sub
shlw
insb
jge
rorb
jmp
cs
or
aaa
sti
inc
outsb
push
mov
cmp
cmp
mov
pusha
cmpsb
into
pop
add
es
mov
push
lahf
hlt
addr16
and
out
pop
loopne
fdivrl
mov
das
loopne
adc
loope
ret
lea
out
scas
sbb
int
je
cld
mov
jae
in
fisttpl
mov
loope
shll
xchg
pop
sub
sub
lcall
lods
xchg
mov
mov
sti
and
icebp
leave
adc
fiaddl
dec
sti
inc
add
pop
in
inc
repz
aad
dec
pop
dec
xor
mov
and
push
cltd
insb
std
mov
xor
add
xorl
sbb
mov
push
mov
push
and
out
ja
iret
adcb
jbe
or
out
sub
clc
jg
daa
es
mov
adc
popf
xchg
inc
nop
mov
test
fisttpll
jecxz
push
aam
add
push
pop
ja
dec
lock
jb
xlat
lret
cmp
pop
mov
arpl
sar
jl
xchg
mov
loope
xlat
loope
loope
ret
mov
xor
pusha
xchg
test
or
xlat
sub
dec
add
rep
out
pcmpeqb
mov
pop
sub
in
mov
gs
pop
aad
add
xor
xchg
movsb
addb
xchg
stos
orb
jno
sub
sub
in
inc
ficoms
ss
push
push
xchg
rcll
jmp
inc
pop
popa
and
pushf
jecxz
cmc
xor
fwait
push
gs
in
xor
push
cwtl
je
ss
push
mov
dec
lock
or
icebp
or
push
mov
inc
lret
dec
sub
stos
jecxz
jp
and
rolb
pop
mov
pop
mov
xchg
pop
jge
test
add
iret
aaa
mov
subb
rcll
mov
aam
fwait
push
ljmp
popf
lods
cld
xchg
inc
jge
ljmp
fnsave
mov
pop
ljmp
in
data16
lcall
leave
cmp
leave
int
js
pushf
cs
int
es
jo
dec
and
sub
loop
cmp
dec
push
cmpsl
in
mov
int3
or
sbb
dec
cmp
ljmp
xchg
rclb
int
fsubs
bound
xor
mov
stos
pop
pop
insl
dec
inc
outsl
sar
mov
push
int
push
push
aam
mov
and
push
cli
and
rep
lret
pusha
dec
add
mov
lret
call
or
cmp
push
aam
fnstcw
push
imul
xchg
xchg
dec
clc
lret
lret
xor
push
sbb
ss
loope
stos
arpl
daa
sub
cli
pop
inc
lods
inc
push
jle
and
xchg
mov
mov
xor
mov
sbb
inc
ret
mov
push
inc
inc
cmp
inc
daa
jbe
inc
lret
and
hlt
xchg
mov
lds
loopne
rcl
es
mov
cmp
sub
add
iret
outsb
pop
pop
dec
mov
xchg
aaa
sbb
aam
int3
jmp
sbbl
inc
mov
fidivs
push
and
testl
int3
xchg
mov
icebp
add
insl
nop
popf
loop,pt
int3
jne
mov
dec
filds
adc
add
into
loop
stos
arpl
cs
test
mov
sbb
movb
sub
outsb
es
lods
rclb
mov
js
and
pop
cmpsl
dec
shlb
fdivs
jne
int3
das
xor
ljmp
jne
xor
out
ficompl
or
imul
dec
das
fwait
push
mov
int3
sbb
jge
test
sub
cmpsb
sub
mov
jb
lret
nop
add
mov
push
inc
pop
ds
mov
cmp
cmp
test
xor
divb
ss
sti
xchg
lret
ja
aad
mov
cwtl
stos
idivl
jnp
addb
hlt
mov
sub
inc
es
out
sbb
scas
repz
ror
notb
cmpsl
jo
out
test
stc
rorb
into
out
cs
sub
adc
add
enter
sti
inc
enter
adc
mov
leave
js
xchg
fisubl
push
jl
mov
repnz
mov
sub
and
jns
ss
loop
test
add
xor
xchg
pop
push
fmul
daa
mov
mov
rolb
int3
data16
or
js
test
xchg
mov
jnp
aaa
xchg
sub
ret
mov
dec
bound
cmpsl
and
adcb
test
mov
aaa
imul
mov
cmp
in
movsl
xchg
lods
push
cwtl
cmp
sub
ret
jle
das
mov
push
pop
cmp
fisubrs
roll
aam
cwtl
daa
lcall
or
push
mov
fmull
push
add
jmp
aaa
adc
gs
rcrb
push
xor
leave
xchg
shll
jo
or
stc
outsb
outsl
jmp
ret
loopne
xlat
pop
popf
lock
gs
popf
adc
xlat
out
cmp
in
daa
shl
repnz
repnz
mov
bswap
pop
std
ret
or
mov
nop
shrd
pop
clc
sbb
test
sbb
je
stc
add
and
mov
in
xchg
mov
cld
mov
mov
incl
and
xlat
movsb
ja
pop
aad
in
fisubl
pop
dec
outsl
ret
gs
shrl
into
pusha
cmpsl
cmp
push
out
pop
jae
pusha
imul
stos
mov
mov
dec
mov
insb
adc
fstps
inc
test
cmp
mov
cli
es
pop
and
leave
ss
repz
push
les
or
push
sti
xchg
or
dec
and
lea
mov
sbb
pop
insb
fnstenv
out
daa
jnp
pop
inc
add
adc
pushl
adc
pop
xchg
call
and
nop
inc
stos
xchg
stos
or
push
sbb
push
xchg
push
fnstenv
fdivrs
lea
adc
fistl
push
imul
call
cmp
xlat
or
sbb
mov
inc
and
pop
xchg
das
inc
or
and
testl
das
and
popf
out
xor
test
lds
sbb
and
xor
inc
divb
dec
bound
out
inc
or
popa
jb
mov
adc
mov
xlat
outsb
aam
fsubrs
jae
lea
cmp
jb
into
sub
dec
dec
nop
and
mov
push
add
push
imul
xchg
test
or
mov
ljmp
push
stc
add
or
inc
mov
dec
xlat
cmc
lock
pop
das
popf
xchg
lret
icebp
jne
push
push
subb
or
sbb
movsb
cmp
sbb
pop
sbb
js
jmp
mov
mov
adc
mov
jmp
sbb
outsb
adc
js
into
push
sub
imulb
xchg
sbb
scas
insl
or
add
mov
mov
notb
mov
aas
push
pushf
dec
loope
sarl
test
lret
rcl
cmp
pop
dec
dec
jmp
int
xor
dec
ljmp
nop
out
pop
dec
mov
dec
js
sub
pop
ficomps
popa
lods
rcl
rorb
das
mov
ds
push
add
push
mov
imul
dec
xchg
aas
cmc
testb
mov
shrb
inc
les
cmp
inc
clc
dec
out
xlat
es
scas
xchg
stc
outsb
push
dec
pop
aaa
mov
clc
imul
daa
push
mov
scas
call
lods
arpl
cmp
in
pop
addr16
dec
jge
inc
das
ret
jae
lret
xchg
hlt
mov
cmp
out
loope
js
fbld
and
cmpsb
mov
adc
fs
mov
mov
popa
fwait
jae
jl
pushl
and
or
mov
psubd
mov
jns
ja
xchg
ljmp
inc
push
adc
out
add
test
insb
push
dec
arpl
mov
jae
push
jmp
js
sbb
sub
aad
std
test
mov
adcb
lahf
add
pusha
sbb
bound
xchg
dec
inc
orb
outsb
int
push
cwtl
jno
cmc
mov
pop
pushf
cli
rcr
gs
xor
in
xchg
ds
in
inc
push
adc
pop
pop
fisttpll
adc
jl
or
and
test
adc
add
mov
xor
rol
shll
adc
lods
xlat
sbb
lock
jbe
test
jbe
and
jns
aam
out
popf
addb
or
xchg
sbbl
rcrb
sbb
aas
mov
add
xchg
lcall
call
adc
push
aas
mov
hlt
faddl
xchg
decb
jmp
stc
inc
and
xor
movsb
adc
adc
xchg
jl
aad
fcoml
mov
mov
mov
imulb
jns
mov
arpl
pop
popf
cmp
stos
pop
xor
mov
inc
dec
sub
xchg
sbb
cmpb
shll
aas
shrl
dec
filds
pop
mov
jge
pop
xor
adc
mov
jnp
and
repz
xor
inc
fs
das
mov
lret
jae
jg
test
sbb
add
loopne
mov
xorb
add
leave
daa
hlt
sbbl
dec
sar
mov
and
or
aam
mov
sub
pop
dec
outsb
divb
shrl
test
in
iret
das
adc
fistpl
jle
xor
insb
xchg
push
or
mov
lea
fwait
test
fwait
pop
testb
dec
jle
xchg
bound
arpl
push
or
fidivrs
pusha
not
ja
popa
mov
sub
jl
rcll
mov
xchg
push
fwait
test
mov
sub
sub
cmpsb
fcmove
pop
sbb
imul
out
repz
cltd
and
cmp
rolb
xchg
push
rcrb
in
shll
jmp
push
pop
cmp
cmpsl
mov
xchg
pop
test
pop
jbe
lods
pop
jbe
jb
or
sub
lock
movsl
and
pop
popf
xchg
mov
dec
aaa
in
add
fisubrs
addr16
sbb
aas
pop
icebp
pop
leave
out
loop
test
sub
insl
sbb
roll
and
rcll
push
test
or
push
cmp
lods
jp
adc
xchg
pushf
xor
push
in
fcoms
xor
dec
loopne
xchg
lock
and
addl
stos
and
out
xor
movl
shlb
mov
push
pop
insb
jle
pop
xlat
insl
and
inc
inc
add
scas
std
inc
cli
ret
leave
mov
add
bound
xchg
push
sahf
ficoms
jg
test
cmc
or
ror
push
add
sub
pop
push
pop
mov
andl
je
cmp
out
out
in
loope
psrad
pop
popf
pop
dec
loop
mull
xor
mov
cmp
dec
dec
adc
cmp
cmp
adc
add
mov
imul
divl
sbb
adc
or
mov
fidivrs
ficoml
data16
movsb
xchg
add
jle
xorl
sub
dec
insb
jbe
pop
cmp
mov
mov
pop
jecxz
cld
pop
dec
int
in
or
push
out
inc
sbb
push
lret
cli
push
inc
pop
push
bnd
in
flds
jecxz
iret
sub
popf
scas
jge
and
dec
test
out
fiaddl
sbbl
xchg
lcall
shlb
cli
orl
dec
adc
mov
pusha
nop
repz
push
or
loope
call
and
outsb
scas
pop
ja
imul
outsb
adc
mov
mov
pushf
and
mov
add
adc
adc
andb
and
xchg
mov
jne
imul
lods
sar
aaa
add
xchg
inc
pop
ret
test
test
mov
stos
outsb
dec
mov
inc
mov
daa
ljmp
outsl
hlt
adc
mov
fmuls
call
ja
mov
es
and
xchg
sbb
mov
cmpsl
ret
add
fcmovnb
jmp
mov
mov
jmp
xchg
push
sub
sub
test
das
popf
or
inc
jae
mov
mov
jle
aas
insl
sub
stos
js
xor
and
xchg
insb
sub
push
cmp
dec
and
cmp
or
adc
sub
adc
add
cmp
out
sub
scas
jmp
rcl
jp
into
sbb
mov
mov
inc
pop
mov
iret
cmp
in
daa
add
loope
leave
and
xchg
xor
dec
aam
jnp
cld
xchg
push
test
ljmp
jno
pop
and
jo
xor
fdivrp
push
clc
jecxz
cs
sahf
fidivl
cs
xor
leave
cli
lret
jnp
push
mov
push
fstpl
stc
add
mov
mov
iret
enter
in
test
or
and
dec
dec
cli
push
push
mov
mov
mov
sub
int
mov
xchg
js
fxch
mov
scas
idiv
shlb
rclb
cmp
mov
pop
icebp
jno
les
jne
js
lods
adc
into
arpl
outsb
mov
add
xchg
pusha
bound
mov
inc
xchg
cmp
inc
fidivl
mov
into
shrb
add
mov
sar
repz
add
cmc
push
sub
pop
or
push
sub
out
inc
adc
imul
aam
sbb
mov
push
outsl
pop
adc
push
push
in
in
cmp
es
mov
in
cmc
mov
out
mov
xchg
pop
xor
test
dec
test
jne
sub
xchg
fstpl
xchg
pmulhw
or
jns
and
mov
xorl
dec
add
dec
out
aaa
setge
mov
aam
cmpsl
pop
mov
sbb
or
cmp
pop
repz
jp
std
daa
popa
idivl
lods
cmpl
or
xor
stos
inc
dec
fsts
cli
dec
out
leave
jl
ret
xchg
and
push
int
in
push
pop
aaa
test
into
dec
flds
cmc
mov
adc
push
repnz
adc
inc
jl
cld
int
cs
xchg
adc
cwtl
pop
xor
mov
sbb
and
cmp
xchg
gs
jmp
fs
addr16
cmp
testb
sub
fistpl
ret
imull
inc
push
pop
ja
pushf
clc
inc
inc
aas
movsb
jecxz
ljmp
push
mov
je
cmpsb
mov
jnp
outsb
xchg
jle
addl
mov
cmc
mov
xchg
mov
popf
xor
xchg
cmpsb
in
cmp
subb
pop
iret
dec
std
or
ljmp
cltd
arpl
add
push
push
call
cmc
xchg
out
jl
pop
mov
cmp
jmp
jecxz
or
push
dec
pop
cmpsl
ret
mov
out
div
xchg
pop
daa
sbb
pop
xchg
nop
xchg
imulb
xchg
pop
scas
rcrl
leave
jno
pop
xchg
push
inc
pop
mov
aam
cs
and
push
push
and
jne
add
mov
lods
jl
dec
in
lods
in
pop
psrld
add
sbbb
pop
sub
pop
add
hlt
enter
sahf
mov
iret
mov
inc
lock
jl
adc
int3
dec
and
sub
stos
aas
fwait
je
decb
jno
testb
in
mov
jl
cmp
insb
sbbl
mov
sbb
sbb
imul
cmp
shrl
out
lcall
insb
je
loopne
test
cmc
lahf
jle
pop
test
add
mov
xor
mov
inc
ret
lret
arpl
sbb
cmp
push
bound
push
dec
lds
popf
loope
movsl
icebp
or
and
pop
es
outsb
mov
ds
repnz
mov
scas
jecxz
jns
jp
popa
cmc
xchg
jp
or
mov
or
push
in
and
aad
pop
cmp
fildl
std
jle
pop
push
les
incb
test
sti
lcall
dec
jo
andb
imul
jle
and
or
xchg
mov
xchg
jnp
mov
gs
sub
outsb
xchg
mov
lds
adc
daa
sbb
jb
jge
movl
pop
cmc
inc
jg
mov
in
mov
jmp
mov
push
dec
jmp
sub
scas
xor
out
xchg
or
arpl
out
cmpl
mov
xchg
fnstsw
fbstp
adc
pop
cs
cmp
data16
aad
mov
into
pop
cltd
je
das
and
aam
xchg
ret
fadd
insb
push
out
pop
add
leave
ljmp
xchg
jle
rcr
les
in
add
pop
xchg
popa
sti
psrld
fld
and
jbe
mov
pop
out
sub
ja
push
inc
imul
mov
push
mov
xchg
and
cli
push
push
insb
fsubrl
jne
mov
nop
dec
mov
jg
push
sub
insl
sahf
xor
js,pn
pop
and
into
inc
sub
int3
ficomps
jnp
and
adcl
cld
jle
mov
push
inc
cmp
xor
cmp
push
outsl
adc
outsl
sub
inc
aad
ja
movsl
test
mov
adc
ss
xchg
sti
xchg
clc
or
mov
jecxz
int3
fwait
addl
mov
sub
out
leave
or
ret
cmp
pop
mov
loopne
rcrb
adcb
or
jns
push
sbb
xchg
or
pusha
fistl
or
jae
sub
mov
dec
mov
sbb
mov
sti
dec
cmp
cmc
testl
add
jae
insb
mov
push
and
jl
push
rcrl
and
or
mov
stos
jmp
das
dec
stc
pop
bound
scas
or
jns
sub
nop
mov
leave
sbb
pop
dec
test
dec
lods
dec
push
cmp
movsl
add
sbb
mov
jg
cmp
sahf
test
fisubrs
dec
dec
and
int3
in
ret
mov
sub
xchg
out
add
dec
mov
cli
fs
or
jns
mov
std
lret
cmp
push
shr
cmp
xchg
inc
rcrb
repnz
and
push
loopne
fs
push
inc
xrelease
cmp
fs
push
sbb
movsb
or
pop
add
and
lret
mov
sub
outsb
cmp
add
pusha
or
pop
and
add
adc
hlt
xchg
xchg
stos
mov
mov
mov
cli
rcrb
out
dec
push
mov
mov
pop
adc
jmp
jle
gs
push
and
pop
cwtl
out
push
rcr
out
push
sbb
gs
sahf
jecxz
xor
sbb
adc
mov
mov
sahf
jbe
cmc
fistl
add
xchg
fs
fucomip
pop
aas
insb
mov
jl
mulb
push
cmpsb
out
repnz
mov
leave
clc
icebp
mov
add
movsl
sbbb
into
mov
int3
fiadds
fisttpll
push
out
rol
sti
cmovg
fsubs
sbb
filds
jbe
mov
push
ljmp
push
jmp
dec
sbb
fadds
aam
cmc
pop
rcrw
sbb
xchg
movsb
add
out
xor
push
test
xlat
std
in
mov
inc
mov
inc
fs
cltd
push
test
push
add
adcl
dec
pop
jmp
xlat
and
mov
icebp
cmp
adc
xchg
pop
lret
jne
out
mov
sub
mov
mov
push
mov
and
mov
sbbl
xchg
xchg
jo
cwtl
movsb
adcb
and
adc
aaa
mov
mov
fistl
cwtl
mov
pop
xchg
adc
cmp
jmp
pop
and
mov
inc
inc
testl
adc
xor
mov
fdivs
xor
xor
lods
mov
rcrb
stc
add
in
xor
jmp
mov
cmc
xchg
sub
imulb
adc
add
xorb
sub
in
mov
ret
adc
std
xchg
dec
add
sbb
out
or
pusha
adc
mov
stos
lret
xchg
hlt
add
xor
add
mov
pop
or
aaa
mov
push
stos
push
faddl
and
jmp
mov
cmp
jp
insl
insb
pop
xchg
pop
lret
push
mov
sub
xor
sar
xchg
aaa
and
fstp
ljmp
xor
inc
mov
cmpsl
ds
lds
dec
loopne
xor
rorl
sub
pop
repnz
outsb
dec
sub
add
cmp
pop
stos
shrl
inc
int3
in
gs
gs
xchg
arpl
xor
or
push
mov
pop
mov
enter
lret
sub
adc
and
jbe
outsb
sub
lahf
jne
mov
or
sub
subb
rcrb
sti
add
inc
mov
mov
popa
jo
clc
std
aas
adc
push
mov
loopne
fwait
sbb
les
xor
inc
mov
jp
sahf
dec
fcoml
dec
or
xor
lcall
cs
pop
cmpsb
mov
aam
add
mov
ljmp
addb
les
jo
xor
push
jge
test
mov
fsubrs
cwtl
pop
insl
mov
mov
stos
scas
imul
inc
sarl
mov
enter
lea
sarb
pop
shlb
push
push
sub
xor
push
popf
hlt
xchg
or
call
bound
test
lret
dec
iret
add
jne
punpckhbw
push
aad
mov
inc
jo
mov
mov
sub
aas
shrb
stc
lahf
std
pop
pop
imul
loopne
daa
push
mov
loop
xor
movsl
in
xchg
add
gs
ja
mov
fs
or
adc
mov
pop
mov
int
ja
push
std
or
movsl
cmp
out
dec
sbb
inc
imul
insl
or
sbb
pop
pop
jno
jo
mov
pop
cmp
xor
ss
loope
or
movsl
sbb
or
mov
sarl
dec
dec
pop
loop
xchg
cmp
popa
sbbb
xor
mov
push
ss
aaa
pushf
jecxz
rorl
mov
out
sub
sbb
dec
push
xor
push
ss
xor
es
sti
dec
mov
jbe
or
fildl
repz
sub
xchg
lock
adc
dec
lret
loopne
mov
adc
rol
and
cmpsb
out
adcl
loope
jbe
movsl
pop
repz
pop
inc
das
cvtps2pi
nop
xchg
jmp
sbb
popa
adc
pop
nop
xor
jns
inc
stos
jl
lods
or
cmpb
mov
mov
std
xchg
push
mov
cltd
and
movsl
lds
cmpsl
mov
call
arpl
sbb
shrl
mov
cmp
sbb
ret
sub
sbb
inc
pop
loopne
out
lock
adc
ja
adc
fimull
andl
jmp
dec
xchg
loop
adc
mov
xchg
push
lds
or
xchg
hlt
pop
addb
insb
jns
mov
mov
enter
pop
rorl
pushf
fs
cmpsb
mov
decl
pop
fchs
js
inc
fnstsw
negb
repnz
mul
mov
idivl
mov
lds
pushf
lret
sti
aaa
adc
adc
sbb
pop
scas
es
push
repnz
hlt
dec
mov
jl
jbe
inc
out
xchg
inc
gs
scas
lret
loopne
flds
in
mov
dec
add
aam
sub
adc
adc
ljmp
call
mov
sti
ja
imul
aaa
jo
adc
dec
sbbb
fbstp
and
bound
xchg
mov
dec
ds
sbb
adc
ffreep
hlt
pop
mov
incl
sub
pop
mov
pop
sub
je
xlat
cmc
cmp
ss
pushf
cld
cli
add
jle
jnp
add
lods
and
dec
ret
mov
mov
mov
push
movd
incb
cmpsl
or
jl
jmp
inc
adc
ror
add
sbb
mov
out
mov
jecxz
xlat
cmp
adc
push
stos
das
mov
pusha
adc
push
outsl
pusha
icebp
stos
xchg
or
icebp
inc
jp
cmpsl
ds
fstps
add
xlat
mov
mov
cld
push
insb
mull
fdivp
ret
cmpsl
xor
mov
data16
inc
and
or
arpl
inc
mov
std
mov
mov
cmc
lea
das
jmp
out
add
inc
inc
xlat
loope
sub
stos
adc
daa
inc
xor
adc
rcr
sub
add
inc
lods
adc
lods
inc
shr
xchg
int
lret
xlat
sub
out
xor
or
xor
lods
add
cld
std
xchg
cs
cltd
xor
iret
push
adc
int
dec
jne
stos
movsl
cmp
movsl
rolb
add
mov
pop
cmpsb
pop
sub
je
es
rcll
test
sbb
xor
cmp
cmpsl
xchg
aad
subb
fisubl
aad
mov
xchg
sarb
mov
mov
outsl
xchg
jge
js
dec
dec
cmp
jp
add
es
bound
icebp
adc
dec
mov
scas
out
pop
fcmove
dec
comiss
and
rcrl
add
dec
rcrl
movl
xchg
in
xchg
test
sbb
mov
cmp
imul
xchg
insb
loopne
outsl
sub
mov
adc
xor
mov
push
iret
cmp
cmp
in
fistps
repz
xor
xor
mov
push
xchg
insl
out
aaa
cwtl
inc
mov
mov
lods
or
fdivs
adc
push
out
gs
es
aaa
push
or
int
jnp
cli
nop
push
push
or
in
pop
repz
jp
mov
cmp
pop
lock
dec
cmpsl
inc
out
xchg
xor
xchg
loop
cmp
repz
cmpb
or
xchg
outsb
xor
lahf
mov
adc
push
xlat
pushf
mov
xchg
cmp
inc
data16
inc
push
leave
push
loop
idiv
stos
cmp
cmp
add
pop
mov
or
stc
push
es
lds
push
lahf
add
pop
in
bound
aas
cmc
insb
adc
dec
into
push
push
fiaddl
je
hlt
xor
call
outsb
jne
fcoms
jne
or
dec
cmpsl
sub
loopne
adc
mov
roll
lods
stc
push
and
pop
les
stc
xor
jno
testl
push
ljmp
fisttpl
pop
iret
xor
push
push
xchg
bound
cli
ret
xchg
pop
test
sbb
in
cmpl
jne
js
fs
adc
adc
cmp
jb
cmpsl
pop
cmp
cmp
xchg
fidivrs
test
mov
shll
sub
add
and
lcall
pop
lock
in
loope
cmp
loopne
cmp
dec
leave
mov
ret
es
data16
test
xchg
mov
xchg
or
or
les
mov
adc
sbb
movsb
repnz
pop
mov
test
mov
adc
lahf
fldt
xor
xor
adc
mov
inc
xor
xor
pop
jmp
jmp
xor
ss
xor
rcrb
push
loop
xchg
fcmovnbe
cmp
adc
jp
ficoms
mov
ret
inc
frstor
leave
into
push
and
pop
mov
cmp
mov
fsts
cmpl
int
add
sbb
mov
inc
lods
push
jmp
and
mov
jmp
and
lcall
sbb
push
mov
push
sbbb
mov
dec
and
fistpll
jo
leave
fdivl
push
je
xchg
sbb
repz
mov
sbb
mov
xor
cwtl
push
dec
lret
orb
repnz
push
outsb
imul
inc
ss
cmp
mov
enter
xchg
shlb
mov
push
cmpb
imul
lock
mov
pusha
test
jg
lret
or
dec
push
stos
lea
fisubs
xor
jg
add
lahf
sbb
dec
push
cmp
inc
adc
lret
gs
daa
mov
add
pushf
push
mov
adc
push
cmp
sbb
inc
lret
movsb
jle
pop
inc
push
pop
cld
add
pop
mov
xchg
orl
mov
ja
lods
or
push
fwait
setp
xchg
je
mov
inc
aaa
xor
jle
leave
flds
sub
add
and
jo
push
sbbl
test
push
fildll
xchg
das
stos
sub
cmp
push
imul
mov
rcrb
cmp
stos
mov
sti
cmp
mov
into
ljmp
ret
mov
sub
ds
sbbb
andl
enter
sbb
add
in
pop
ja
lcall
movsb
xchg
xchg
out
push
enter
and
xchg
mov
mov
inc
popf
push
mov
clc
fimuls
mov
incl
mov
mov
insl
sub
pop
dec
lods
or
jl
or
push
cmpb
xor
jbe
fildl
iret
cmpsb
cmpsb
inc
daa
mov
xchg
pushf
or
out
int3
lods
div
mov
inc
sub
pop
out
outsl
sbb
js
lods
jmp
dec
jp
les
jle
sbb
test
push
pop
add
adc
and
call
xor
sbbl
out
lahf
pop
iret
xchg
or
test
loop
lods
or
in
cmp
std
ljmp
loope
push
std
dec
push
test
pusha
jne
jmp
scas
push
loopne
add
mov
pop
push
test
dec
jae
cmp
mov
sub
adc
into
sarb
xchg
lcall
les
mov
mov
out
int
pop
testb
mov
push
fsubl
stos
and
mov
lds
cmp
popf
jno
je
out
dec
movsb
sti
sub
push
dec
jmp
or
call
out
inc
cmpsl
add
pop
jecxz
roll
mov
push
iret
je
push
dec
sub
es
cmpsb
jb
cs
xchg
pop
invd
lahf
test
push
mov
jl
cmpsb
jmp
pop
sub
mov
cmp
clc
scas
sarl
fidivs
sub
mov
and
push
loop
or
sbb
loopne
outsl
dec
orl
shlb
mov
push
sub
int
jg
dec
outsb
rorl
nop
dec
test
mov
int3
test
add
inc
xor
lret
fldenv
sub
jecxz
call
cmpsl
repnz
cltd
inc
call
push
inc
dec
lods
es
jle
test
push
lea
fwait
lcall
add
push
in
lds
mov
mov
push
lds
add
inc
cmpsl
dec
adcl
cld
lods
lock
ret
xchg
lock
xor
mov
xchg
lock
in
bswap
dec
dec
inc
movsl
jl
enter
cwtl
fidivrs
out
mov
xchg
mov
mov
sbb
stc
xchg
cmpsl
scas
lret
sti
iret
cs
mov
stos
jae
mov
xchg
jg
mov
adc
or
push
ja
int
xor
int
push
dec
mov
dec
sub
inc
xchg
xchg
cmc
xorb
mov
loop
pop
push
imul
ss
push
add
adc
sbb
push
aad
sub
test
xor
in
cmp
pop
aaa
cmp
cmp
jmp
or
addb
xchg
sbb
sbb
cmp
in
jle
stos
mov
jno
call
jae
sub
hlt
xchg
inc
ljmp
pop
insl
icebp
jb
fmulp
pop
insl
lret
mov
gs
sub
mov
out
call
std
mov
pop
push
insb
dec
stos
inc
cmp
xchg
pop
enter
in
adc
mov
sub
pminub
push
lret
pop
adc
push
push
sbb
mov
test
or
mov
in
scas
imul
xorl
repz
pop
sbb
call
push
adc
repz
push
popf
or
inc
mov
jecxz
dec
jp
jge
out
sbb
ljmp
push
in
mov
jl
adcl
scas
jb
stos
xchg
cld
jo
das
push
xor
push
loope
in
ja
xchg
out
cwtl
adc
sbb
sub
movsb
add
mov
mov
pop
imul
and
loope
xor
mov
add
push
mov
test
dec
xchg
mov
jmp
pop
cwtl
or
cld
fnstsw
push
fidivs
push
pop
cwtl
push
jne
shrl
mov
out
negb
cld
hlt
fucomip
inc
imul
sbb
cmp
push
inc
sub
fs
test
shlb
push
fwait
jbe
into
pop
sbb
lods
addb
into
add
rcrb
mov
jle
in
and
ss
or
je
and
adc
jecxz
fistl
pop
icebp
test
hlt
ucomiss
mov
push
adc
mov
gs
push
xchg
in
xchg
dec
and
popa
pop
movsb
repnz
cmpl
and
or
dec
dec
out
insl
push
in
pop
in
test
in
jg
mov
mov
and
test
dec
cmp
bound
lahf
push
dec
mov
fisttpl
bound
std
iret
fisubrs
popf
push
cmp
aam
dec
pop
or
movsl
clc
clc
cld
dec
cs
push
sub
mov
in
je
adc
repz
mov
test
adc
mov
cmp
in
shll
pop
xor
out
jne
inc
aas
loopne
insl
pop
into
xor
or
test
jmp
fisubs
jp
and
cli
push
fcomp
int3
out
pop
hlt
adc
and
mov
adc
push
jo
push
lea
mov
jb
mov
pop
movsl
movsb
lods
jl
out
jp
int3
inc
add
mov
jo
pop
pop
jl
add
jp
mov
insl
add
je
sub
pop
push
cs
add
add
mov
mov
lods
loop
ja
mov
mov
nop
push
and
js
addl
cld
data16
jl
jo
jns
add
mov
mov
int
sahf
push
in
sub
jne
lcall
sub
mov
frstor
mov
mov
icebp
cmc
adc
jbe
jmp
cs
negl
push
out
add
mov
sub
cmp
push
xor
push
cmpsl
movsl
sbb
mov
sbb
xlat
and
dec
jecxz
inc
sbb
and
dec
fimull
pop
sub
or
cs
fwait
cmp
mov
ss
outsb
mov
aam
ljmp
andl
jae
lcall
inc
sbb
rol
rorl
inc
stos
lock
push
xor
testb
push
xchg
push
push
or
cmp
mov
sarl
popa
iret
mov
dec
mov
cmp
xlat
pop
test
fcoms
pop
inc
fstps
outsl
mov
stos
xchg
es
sub
mov
xor
and
add
sub
pushf
pushf
sub
outsl
rolb
mov
lahf
xor
xchg
xchg
int
push
iret
mov
sbb
in
mov
xor
mov
push
sbb
inc
jns
ss
lock
pusha
in
test
lcall
or
dec
icebp
call
test
call
push
pop
mov
aas
add
cmp
jle
in
dec
adc
sbb
jae
cmc
cmpsl
out
ret
stos
inc
cmc
mov
cmp
les
test
push
cmp
clc
sbb
add
push
push
arpl
imul
mov
into
push
les
xlat
ret
sahf
jns
cmpsl
enter
into
enter
pop
xchg
ja
aam
add
call
insl
shll
mov
dec
jne
sti
pushf
repnz
ljmp
lods
jp
test
int
mov
sub
addl
in
clc
mov
jo
or
dec
lea
inc
add
xor
movb
sti
pop
cmp
pusha
cs
adc
fsubrl
cmp
lret
pop
jg
ret
stc
adc
imul
idivl
stos
xchg
cltd
jmp
and
dec
jl
ss
fwait
cltd
repz
xor
and
jae
popa
xor
leave
dec
push
jle
aas
int
test
cmp
sub
fldcw
cmp
pop
sub
dec
fnstenv
jo
testb
inc
pusha
cli
stos
sbb
int
add
jp
ja
pop
inc
dec
js
lods
gs
push
xlat
dec
inc
push
jle
sarb
aad
jmp
lret
subl
dec
in
mov
out
pop
fninit
jns
sub
inc
push
fdivr
adc
add
into
dec
dec
arpl
outsl
cmpsl
inc
pop
cmp
mov
or
ljmp
xlat
scas
xchg
data16
pop
cmp
scas
mov
sbb
inc
pop
in
xchg
mov
ret
mov
out
xchg
jmp
and
jno
cmc
popa
ffreep
dec
push
jp
gs
iret
data16
jo
and
jecxz
iret
clc
sbb
and
out
pop
lock
xor
addl
mov
or
pop
mov
sub
mov
xchg
add
or
sbb
mov
pusha
push
mov
out
movsb
inc
lock
jbe
xchg
jbe
inc
sbb
inc
flds
adc
mov
leave
mov
insb
rcr
or
or
je
adc
mov
test
push
ds
stc
inc
in
aas
test
sbb
lret
and
mov
dec
shlb
mov
ss
or
mov
int
xchg
scas
cs
dec
mov
cli
or
psubb
subl
xchg
adc
out
sub
xchg
xchg
test
clc
push
sub
add
stc
xor
iret
inc
xchg
dec
lret
lods
push
aam
jg
clc
pop
xor
mov
adc
out
call
xorl
cmp
mov
xor
inc
add
pop
cmp
jne
xor
add
outsl
mov
stos
subl
xchg
or
cwtl
cmp
cltd
gs
push
mov
dec
push
mov
leave
pusha
aas
xor
xchg
aam
mov
xchg
or
stc
dec
rcrl
js
out
pop
and
hlt
outsb
rorb
inc
cmp
xlat
mov
xchg
mov
lcall
xor
dec
mov
mov
sti
or
adc
mov
sub
in
ror
popf
dec
call
lcall
pop
das
sbb
lock
push
mov
dec
and
inc
ljmp
jbe
shrl
sub
xchg
add
sahf
jg
fsubrl
adc
arpl
lods
popa
cmp
orb
stos
mov
popf
or
sbb
or
add
mov
or
cs
pop
mov
cmc
das
cbtw
sub
xchg
xor
repnz
sub
sahf
xchg
pop
add
icebp
insb
and
xor
movl
mov
mov
push
ljmp
inc
pop
sub
and
dec
mov
xchg
add
lock
fsubr
push
enter
xor
shlb
scas
pop
cmpsl
shll
les
xchg
test
loope
popl
cltd
aaa
xlat
pop
je
push
sub
inc
imul
movsb
jns
add
out
shlb
xor
mov
xchg
sti
insl
and
popa
push
pop
xchg
addr16
mov
pop
stos
test
and
iret
cmpb
idivb
sub
push
sahf
ljmp
inc
xchg
daa
fadd
pop
test
popf
mov
push
mov
aas
sbb
loope
xor
mov
sbb
stc
popf
or
jb
pop
mov
fbstp
fdiv
out
cld
and
jo
mov
lds
mov
push
subb
insb
loope
pop
fldt
dec
push
ja
cmc
xchg
pop
ljmp
adc
xchg
int
jge
xchg
and
fcoms
mov
mov
push
inc
pop
mov
mov
sbb
out
std
lods
std
or
imul
push
daa
repnz
addr16
loopne
cs
sbb
hlt
addr16
rcrl
fidivl
insb
add
xchg
mov
mov
or
push
sbb
push
mov
mov
mov
push
cmp
cmc
sub
daa
outsl
xchg
cld
ljmp
pop
hlt
shll
cwtl
loope
int3
dec
mov
out
mov
lahf
in
jns
or
jecxz
jle
stos
jae
addr16
aaa
bound
and
pop
lds
out
jp
mov
adc
inc
jmp
pop
cmp
sbb
andb
int3
imul
or
xchg
pop
into
inc
test
xchg
fistpl
mov
hlt
mov
fdivs
mov
sbb
push
add
fcompl
push
jecxz
sub
popa
aad
pop
les
mov
icebp
shrb
jle
pop
cmp
repnz
outsb
stc
add
mov
ret
and
stos
xchg
je
inc
jae
sti
movsb
data16
je
jge
inc
cmc
pop
jbe
xchg
mov
push
or
adc
lea
mov
call
cltd
stos
push
fcomps
cli
push
outsb
sub
inc
in
lcall
lret
lods
inc
bound
out
or
les
insb
into
inc
jo
das
outsl
mov
ljmp
and
pop
jg
mov
cmp
cmpsb
add
dec
je
xchg
push
jl
pop
xchg
fs
sbb
dec
cmp
sbb
scas
dec
add
hlt
movsb
hlt
mov
inc
mov
pop
xor
mov
fimuls
xchg
repnz
daa
and
xor
aad
jg
dec
push
imul
fnsave
lret
pop
jb
jne
call
cbtw
outsl
mov
or
cmp
mov
popf
hlt
lods
aad
cs
insb
aas
adc
fsubr
pop
mov
pop
iret
jmp
movsl
std
sbb
aaa
or
mov
pop
pusha
sub
jns
pop
fwait
or
es
xlat
outsb
jp
aad
sub
push
sbb
test
push
ret
orb
test
inc
adc
repnz
pop
mov
mov
ss
push
dec
jb
jnp
lods
popa
lods
pop
sub
outsb
daa
ret
cmp
xchg
aam
jne
ret
jp
movsl
outsb
outsl
fists
mov
or
shll
lds
pushl
loope
xchg
jmp
add
and
outsb
ljmp
out
sbb
cs
mov
and
filds
fs
xor
fnstsw
mov
ja
insb
arpl
insb
jns
lea
loopne
or
adc
test
cwtl
in
dec
dec
jg
lcall
sub
dec
xlat
fwait
xor
pop
jle
ret
scas
cmp
inc
mov
pop
ljmp
xlat
jae
add
push
xlat
lods
dec
js
decb
sbb
push
daa
add
push
xchg
jmp
xor
sbb
test
or
jle
mov
sbb
shrb
xchg
repz
push
inc
dec
and
fcoml
add
test
pop
pop
nopl
jb
adc
loopne
adc
mov
call
ss
xchg
clc
clc
fidivl
mov
int
sub
shrl
xchg
adc
pop
mov
adc
aas
xor
xor
arpl
add
mov
cmp
adc
out
clc
or
jmp
pop
out
push
adc
test
rcrb
xchg
sbb
sbb
fstpl
jb
lret
dec
mov
in
call
mov
dec
mov
adc
or
cmp
sbb
iret
lret
xor
mov
fstl
mov
mov
addr16
movsb
jb
fdivrs
jl
xchg
enter
add
scas
ret
mov
movb
cwtl
xor
xchg
dec
in
sbb
jl
adc
enter
add
aaa
mov
into
fidivs
dec
and
mov
aad
add
inc
xlat
enter
fucomp
scas
dec
ja
int
pop
scas
sub
push
mov
cs
push
sbbb
jo
aad
inc
mov
leave
add
mov
stc
push
enter
sub
xor
or
cmp
leave
push
fs
dec
dec
dec
sub
or
or
outsb
aad
pop
jmp
xlat
push
pusha
movsb
in
xchg
sub
mov
or
cmp
mov
xchg
and
dec
dec
movsb
test
lahf
jb
insb
adc
insl
sbb
in
cltd
test
dec
push
scas
call
xor
sahf
std
adcl
add
lods
xchg
jmp
lret
inc
inc
mov
jbe
push
test
test
je
xchg
mov
jmp
mov
pop
mov
inc
ss
pop
sub
jno
and
add
in
in
aad
pop
mov
inc
cmp
cmp
in
jno
lret
xor
in
cld
push
mov
pop
pop
out
and
fcoms
mov
arpl
jecxz
je
popl
xlat
cmc
inc
test
aas
insb
cmp
pop
pop
sbb
pop
and
inc
popf
dec
fs
jns
les
adc
add
mov
ss
pop
dec
sub
mov
xor
fs
xor
bound
lcall
ja
mov
mov
add
fldcw
insb
ret
movsl
push
push
mov
aas
fs
xchg
push
mov
push
and
or
jo
mov
andb
push
or
lea
fistpll
sbb
jae
outsl
mov
imul
push
inc
repnz
jg
rorl
mov
je
dec
and
call
arpl
adc
adc
fldcw
xor
dec
into
loope
sbb
call
sbb
les
inc
in
aaa
xchg
js
jle
jbe
scas
hlt
js
adc
xchg
test
mov
add
sbbl
sbb
outsb
add
cmp
cmp
and
sahf
mov
sub
and
ljmp
lods
stc
shlb
pop
jno
cmovne
jbe
arpl
testb
jae
nop
sbb
inc
testb
in
movsl
sbb
xchg
sub
mov
pusha
daa
jmp
jb
outsl
loop
and
mov
mov
jns
add
jne
sub
test
popa
xlat
xor
or
mov
in
inc
mov
sub
rcrl
mov
pop
mov
fldcw
xchg
pop
mov
frstor
push
cs
mov
cltd
inc
lods
jmp
jecxz
jmp
loop
test
sub
movsl
dec
in
push
xchg
sub
lock
mov
addr16
sti
dec
enter
jmp
cmp
lods
out
cli
cmp
sub
outsb
add
pushf
cmp
push
push
movsl
addr16
lea
int3
and
std
sbb
and
push
mov
repz
adc
in
gs
js
test
stos
push
cmp
xchg
and
in
int
dec
or
cmp
lcall
xor
push
pop
imul
lods
xchg
jmp
movsl
ds
lock
aad
push
mov
lock
lret
test
cmp
pop
scas
add
shrb
adc
loop
inc
adc
push
leave
mov
inc
add
pop
fucomi
loop
lds
cmp
and
loopne
inc
jecxz
and
add
push
xchg
outsl
daa
repnz
push
gs
xlat
outsb
cmc
inc
outsl
add
inc
sbb
and
adc
test
mov
dec
jmp
mov
loop
std
xlat
or
xchg
aad
lods
mov
pop
cli
mov
les
adc
into
fmul
push
outsl
filds
fxtract
inc
pop
mov
rorb
mov
shll
sbb
test
test
xor
in
and
inc
scas
jl
push
cmpsb
lahf
push
xchg
xor
imul
push
pop
mov
enter
shll
mov
dec
scas
dec
pop
imul
fadds
mov
mov
insb
jg
insl
sub
fisttpl
pop
decl
inc
mov
in
xor
mov
mov
mov
test
or
mov
ret
xchg
push
fisubrs
jnp
call
inc
ljmp
jl
push
test
int3
pop
loopne
pop
mov
xor
cmc
mov
stc
pop
inc
push
cli
popa
sub
pushf
xor
and
mov
fnstenv
xchg
cmp
lcall
loop
sub
and
inc
push
adc
mov
lret
push
imul
xor
push
push
imul
movsl
ss
popf
fwait
mov
sbb
pusha
imull
xchg
jle
ds
pop
popf
adc
mov
stos
xchg
insl
mov
cmpsb
jo
mov
lods
push
inc
xchg
jae
xchg
mov
rcrl
or
pop
into
or
lock
es
aad
aad
mov
stos
test
mov
int3
cmpsb
jb
jl
push
pop
jne
int
mov
push
add
mov
leave
dec
push
clc
sti
aad
sub
dec
outsb
or
jne
rcrb
shll
mov
mov
lock
lret
stc
sub
cmpsb
pop
or
call
mov
rcrl
movsb
sbb
or
sub
je
inc
jbe
pop
mov
cmp
inc
jmp
js
dec
ret
inc
mov
cmp
dec
int3
push
movsl
cmc
mov
mov
and
lea
out
sbb
adc
mov
pop
out
sub
dec
jp
mov
outsb
sub
mov
or
mov
jecxz
fists
imul
or
incl
mov
stc
fdivl
dec
sbb
lea
xchg
daa
loope
pop
mov
mov
mov
lahf
mov
cmp
xchg
aad
jne
mov
lret
in
das
or
fsubl
adc
gs
push
in
jns
lods
stos
andl
mov
mov
mov
and
add
fldenv
pop
and
mov
xchg
jl
orl
test
dec
inc
jecxz
sub
outsb
pop
add
scas
pop
add
int
jge
stc
decb
icebp
daa
and
push
xchg
sub
movsl
inc
insl
dec
push
icebp
scas
dec
sub
cmpsb
dec
push
test
adc
pusha
idivl
aaa
mov
or
xchg
sub
div
jns
shrl
mov
rol
adc
aad
call
in
push
mov
icebp
in
sbb
ret
mov
clc
adc
outsl
test
pop
push
adc
inc
cmp
lret
inc
adc
pop
xor
xor
mov
inc
fmulp
in
jb
xor
jle
sub
jge
mov
jecxz
rcll
jg
mov
pushf
sbb
xlat
out
mov
arpl
adc
mov
out
test
cmpsl
ret
adc
adc
mov
mov
test
mov
or
jae
xchg
das
jns
insl
or
or
cmpsl
and
icebp
jno
cli
xchg
mov
jne
leave
sbb
stos
cmp
push
mov
lods
push
sub
lret
daa
mov
or
xchg
xchg
addr16
fnstenv
aad
inc
cwtl
mov
imul
or
stos
cmpb
mov
fbld
mov
mov
lret
and
inc
fwait
sub
adcb
and
pop
imul
push
sbb
fidivrs
sub
xchg
add
aas
jecxz
pop
adc
inc
cmp
push
cmc
sub
rorl
xchg
or
enter
mov
or
vmwrite
dec
loopne
mov
fstps
or
add
sub
addr16
out
sub
popa
shlb
mov
aaa
jl
pushf
imul
jmp
test
test
ret
pop
ret
inc
mov
jp
lret
jae
jns
sub
pop
outsl
aas
shrl
bound
pop
cltd
xchg
out
sahf
xchg
xor
or
shl
dec
xchg
cmc
mov
jb
in
cmp
jne
fwait
in
insb
pop
dec
jge
shrl
insb
mov
push
test
icebp
mov
mov
cs
fwait
in
push
in
push
pop
loopne
sbb
into
lea
mov
imul
jecxz
testl
pop
std
jg
cli
jae
in
pushf
mov
cmp
inc
cltd
or
and
mov
and
mov
xlat
out
test
in
jne
rcll
sbbl
push
xchg
xchg
sbb
das
loop
push
lcall
fwait
inc
pusha
cli
es
or
cmpl
into
pop
lock
mov
cmpsb
ficoms
divl
mov
add
lds
outsl
mov
mov
pop
jl
adc
clc
lds
xchg
repz
cld
rcl
sbb
roll
addl
lock
iret
push
add
add
cli
jle
mov
arpl
xchg
popa
mov
mov
leave
and
push
pop
mov
lock
in
ljmp
sub
daa
jnp
mov
loopne
mov
movsl
bound
popf
cmp
into
sub
fcom
loope
sbb
jecxz
xlat
fwait
in
cld
sbb
sub
mov
rcr
xchg
pop
xchg
pop
mov
loope
int
jns
dec
and
sahf
adc
loopne
push
ret
mov
scas
outsb
addb
negl
dec
stc
mov
xor
call
or
bound
stc
mov
pop
lret
sti
cmp
and
repnz
or
or
push
mov
cmpl
mov
dec
lods
inc
lods
inc
jb
cs
aaa
mov
sub
fildl
mov
lcall
dec
nop
fisubl
lds
jge
push
sub
mov
pusha
test
pop
lods
icebp
pop
sub
sti
sbb
shlb
xchg
adc
test
dec
cwtl
out
push
inc
mov
sbb
mov
mov
jecxz
mov
mov
adc
cmp
test
or
mov
es
cmp
mov
cmp
sbb
sahf
sub
into
es
mov
ret
outsl
pop
sti
inc
rcrb
jb
int3
pushf
lea
pop
in
out
out
adc
lret
cmp
scas
xor
cmp
out
mov
jbe
lods
popf
pop
cs
dec
lock
fwait
jmp
je
xsaves
jne
lds
stos
push
sbb
jmp
jl
mov
mov
cmp
xor
pop
in
add
mov
push
sbb
and
arpl
push
jno
mov
jne
ds
shrb
nop
test
push
ret
jbe
lods
in
pushf
and
outsl
out
jle
adc
add
jno
xlat
and
pop
repnz
loopne
in
lock
sbb
das
inc
mov
jae
or
ret
xchg
sbb
in
dec
cwtl
cwtl
jb
int
loop
and
cmp
push
sub
subl
push
fdivrl
xor
fwait
stos
mov
mov
mov
lahf
mov
call
xchg
sbb
inc
mov
push
in
adc
in
inc
call
aad
sbb
das
into
xchg
cltd
scas
sbb
and
sbb
movsl
sbb
and
xchg
fnstenv
insl
xor
pop
add
test
ss
sub
icebp
arpl
pop
push
fsts
frstor
cmp
mov
ret
xor
arpl
ret
mov
cmpl
adc
lret
call
push
jb,pn
xchg
cmp
movsb
add
or
dec
loop
daa
adc
loope
aaa
jbe
add
mov
pusha
mov
mov
rclb
les
mov
pop
xor
int3
cmpb
inc
or
insl
jge
and
fstl
mov
fldl
jae
dec
shll
cmp
insl
jge
test
inc
or
add
sbb
or
and
ja
insb
popf
mov
pop
imul
or
jno
fdivrl
into
pop
fdiv
subb
leave
loopne
mov
arpl
inc
inc
popa
jae
ljmp
clc
mov
test
dec
cmpsl
sbbl
loop
fcompl
add
repz
add
xchg
cmp
pusha
mov
push
mov
jbe
lahf
adc
inc
pop
loopne
shrb
cmpsl
mov
jns
dec
loop
xchg
fwait
mov
dec
imul
mov
pop
push
jno
mov
andb
lock
and
mov
shr
xchg
pushf
and
call
lcall
cmp
xchg
cltd
xor
dec
add
ja
mov
mov
aam
mov
xchg
daa
pop
lds
sbb
fs
loope
jmp
mov
push
ljmp
mov
push
add
ret
mov
pop
sbb
mov
push
dec
pop
hlt
mov
sbb
xor
mov
test
inc
adc
lock
out
pusha
pushf
jge
int
xchg
sub
jo
shrl
mov
inc
je
stos
xor
mov
push
inc
sbb
sahf
inc
push
inc
push
out
pop
ret
test
lcall
push
gs
pop
scas
mov
test
inc
xor
pop
repz
push
jle
daa
cli
add
adc
cmp
cmp
push
shll
std
xchg
lahf
sub
lea
xor
mov
dec
aam
mov
arpl
adc
add
xchg
cmp
mov
adc
and
add
and
out
lret
lret
xchg
push
addr16
inc
mov
mov
fstp
mov
aam
int3
movsl
push
push
dec
push
xor
mov
xor
jae
notl
popf
popf
fiaddl
sarb
loope
jne
ret
out
inc
add
scas
int
sarl
mov
in
mulb
sub
add
insb
addr16
or
pop
hlt
sbb
mov
arpl
aam
jg
sar
lods
add
mov
fadds
jl
lret
adc
adc
or
or
pushf
cs
add
out
bnd
jg
push
lods
les
push
outsl
add
sub
dec
push
fucomip
ds
xchg
imull
fcmovbe
int3
pop
popf
xlat
cmp
sbb
pop
out
jp
clc
decl
pop
xor
and
sub
xor
cmp
jecxz
ret
notl
and
popa
enter
je
sbb
xor
dec
mov
repz
mov
jp
aam
mov
push
adc
scas
js
or
cmp
gs
mov
dec
mov
xlat
std
mov
popa
cmp
test
into
jne
inc
jp
lret
and
aad
jge
add
pop
mov
pop
xchg
sub
sarb
xchg
pop
insl
repz
stos
cmp
adc
jmp
xchg
out
rorl
repnz
jb
nop
aas
ljmp
jmp
daa
fisttps
scas
sub
inc
out
add
es
je
adc
outsl
das
rcr
jne
icebp
pop
ljmp
push
jle
inc
pop
dec
mov
xorl
and
mov
dec
sub
das
lret
cli
xchg
sub
imul
and
push
movsb
movsb
or
mov
out
xchg
bound
pop
and
sbb
loop
fdivrl
mov
xor
pop
cmpsl
arpl
sub
xor
test
iret
mov
xor
test
jno
js
pop
lcall
iret
xchg
clc
mov
sub
dec
out
jno
nop
xchg
dec
loopne
push
pop
mov
add
mov
sarl
cld
test
loope
pop
adc
sarb
stc
popa
and
mov
xor
push
mov
and
jnp
shll
jge
scas
xchg
gs
sbb
sbb
and
insl
cmp
xchg
lods
shr
cmp
aad
xor
mov
mov
cmc
test
hlt
pop
stos
sbb
dec
int3
mov
ljmp
imul
hlt
push
nop
adc
jbe
dec
loope
xlat
and
xchg
test
in
insl
or
pop
int3
cmp
sub
xor
rorl
push
outsb
repz
mov
xchg
pop
dec
or
addr16
stc
or
and
insl
jg
aaa
es
inc
lea
in
or
or
sbb
sub
xchg
mov
mov
xchg
aaa
adc
push
insl
add
jnp
pop
add
xor
xchg
nop
push
mov
dec
dec
cld
aad
sti
mov
test
sbb
daa
mov
fmull
mov
std
popf
xor
pushf
xor
divl
hlt
xchg
xchg
test
xchg
mov
imul
negl
outsl
lea
das
sbb
cmp
into
paddsw
mov
push
pop
adc
pushf
lahf
sarl
lea
bound
rcll
lods
inc
lahf
jno
xorb
or
add
xchg
xchg
shrb
sbb
mov
mov
mov
pop
or
loopne
jl
ds
imul
sub
ret
adc
leave
int
push
mov
add
mov
inc
fcomp
ja
jg
xor
cmp
mov
push
ror
mov
cs
scas
mov
pop
mov
je
sbb
cld
es
jo
sbb
xor
ret
add
and
sub
sbb
sahf
pop
popa
cmp
or
pop
jge
shrb
dec
icebp
sbb
aas
cmp
xor
jmp
xor
pushf
xor
and
int3
mov
jmp
cwtl
pop
jb
and
lret
es
jmp
pop
adc
jmp
mov
imul
mov
jecxz
xchg
fucomip
jb
pop
mov
xor
inc
aaa
add
mov
xchg
mov
pop
inc
sub
mov
inc
or
adc
sub
out
stos
push
mov
sub
lcall
mov
movsb
pop
lcall
aaa
push
and
push
addl
mov
ret
rol
shl
cli
push
cmp
and
fcomip
decl
jp
sbb
sbbb
gs
ss
movsl
push
xor
xchg
loope
mov
push
or
push
jp
cwtl
lods
sub
mov
sbb
mov
xchg
pop
fisubl
cli
jo
ja
pop
xor
xchg
repz
out
bound
add
clc
jae
and
insb
stc
xlat
lcall
and
adc
lods
add
mov
xlat
inc
add
sbb
inc
mov
and
mov
stos
test
out
add
xchg
ret
pop
int
nop
in
pop
repnz
jo
daa
mov
fstps
or
imul
add
sub
andl
fisubl
repnz
xor
push
mov
and
mov
pop
jmp
mov
bound
fidivs
adc
mov
test
lret
out
add
andb
pop
fildl
nop
test
sbb
inc
sti
sbb
mov
fbld
imul
push
cmp
ss
in
sub
inc
out
sub
shlb
cmp
fists
inc
popf
pop
inc
dec
fisubrs
sbb
inc
notb
sbb
add
inc
dec
popf
cmpsl
dec
gs
mov
xchg
out
pushf
ss
into
js
lret
and
push
sub
push
jbe
cmc
inc
stos
in
notl
xchg
repz
pop
and
mov
sbb
sbb
int
or
fcomps
das
xchg
add
pop
dec
cmp
xchg
and
movsl
sub
subl
xchg
adc
cmp
inc
xor
pusha
add
inc
fisubs
ret
gs
fdivl
pop
ds
andl
clc
jo
cmp
sub
mov
test
lock
fists
mov
mov
adcl
testb
test
sahf
push
scas
nop
fistpll
inc
jno
xlat
mov
jle
mov
addr16
mov
mov
or
push
enter
aam
xor
ret
sub
mov
ret
out
bswap
movsb
sarb
push
enter
xchg
inc
js
sahf
into
cmpsl
sub
pop
icebp
sti
xor
or
push
aam
push
jo
adc
pop
fs
aam
icebp
lret
pop
jns
das
out
test
push
or
addb
jo
pop
mov
jnp
cmp
sbbl
aaa
dec
movsb
xchg
mov
outsl
ret
leave
enter
addr16
jo
and
sbb
sbb
jbe
push
call
xlat
fsubl
or
aas
shll
cmp
test
in
mov
mov
ja
jg
sbb
aam
movsb
xorb
fbld
add
imul
adc
or
shlb
sub
jnp
and
push
pusha
mov
shlb
outsb
sub
or
pusha
mov
cltd
aam
rcrb
frstor
cld
xchg
outsb
jg
ja
fstpl
sub
xor
mov
or
and
popf
adc
mov
int
add
sub
nop
jmp
dec
insb
adcl
test
sub
jle
xchg
bound
lods
inc
and
dec
add
jnp
xchg
pop
xchg
xchg
dec
adc
lahf
movsl
hlt
and
ss
lds
scas
repnz
jbe
inc
mov
xchg
sub
jo
and
jb
sbb
insl
mov
scas
imul
add
ds
cmp
mov
and
aam
sbb
and
pusha
push
lcall
insl
pushf
popa
clc
icebp
xchg
sub
je
dec
pop
mov
adc
xchg
xchg
push
test
jne
stos
es
sbb
dec
push
mov
dec
loopne
mov
jle
addr16
inc
mov
mov
pop
cmp
pop
jecxz
push
dec
loopne
add
dec
xor
push
mov
xor
test
pop
punpckhwd
xor
mov
stos
push
mov
icebp
jle
loop
repnz
jns
sbb
mov
into
cmp
pusha
dec
pusha
mov
jg
pop
mov
dec
in
leave
out
iret
lcall
movsb
xchg
add
jmp
repnz
dec
rcrb
out
cmp
jmp
cmp
nop
loopne
xchg
pop
fwait
ljmp
int
mov
les
dec
inc
fists
sar
push
movsl
push
adc
mov
lahf
fs
dec
sbb
shll
adc
fimull
push
adc
mov
push
sub
lret
xchg
cmpsl
sub
cmp
mov
and
mov
ret
hlt
arpl
push
xlat
add
mov
pop
push
testl
ds
and
pusha
sti
xchg
lcall
ret
into
and
adc
mov
shrb
mov
mov
stc
adc
inc
movsl
mov
push
leave
cmpsl
and
es
xchg
pusha
fistl
loopne
mov
jno
js
push
sbb
mov
cmc
lods
mov
cmp
and
aas
cmp
xor
lret
divb
fdivrs
pop
ds
shrl
mov
or
cmp
sahf
flds
popf
lcall
pop
xchg
fptan
insl
iret
cmp
cld
jne
xchg
ret
ja
into
jl
cmp
insb
scas
pop
sahf
jp
sbb
sbb
insb
movsb
jne
dec
loopne
jge
cld
aas
aaa
adc
jg
les
mov
mov
shlb
mov
test
les
add
call
lret
cmp
jg
adc
inc
pop
and
div
outsl
lahf
into
in
push
imul
adc
cwtl
test
nop
pop
das
out
test
jo
scas
in
xor
mov
inc
sbb
rcrb
rclb
in
jnp
sub
adc
jmp
sbb
repz
jb
mov
repz
adcl
loopne
cs
jne
jbe
mov
pop
adc
and
fildll
mov
inc
pop
call
test
lahf
sar
cmc
adc
enter
stc
je
mov
dec
push
fsubs
ret
pop
push
lcall
fs
dec
mov
pop
outsb
rcrl
outsb
sub
in
test
inc
ljmp
jno
sub
sarl
dec
pop
sar
mov
mov
mov
xchg
jb
sub
outsb
fildl
mov
adc
dec
mov
insl
and
mov
mov
xlat
push
in
adc
or
cmp
ja
push
cmp
ret
pop
adc
rclb
test
js
cmp
ss
imul
aaa
cltd
push
xchg
push
clc
xor
out
pop
gs
jnp
push
test
testb
sub
mov
add
setbe
pop
mov
loop
add
mov
or
or
pop
add
ds
inc
test
cmp
xchg
cmp
xchg
cmpsb
std
mov
mull
js
jg
pop
in
movsb
rcrl
sub
mov
jne
mov
pop
push
xor
xor
call
pop
xor
mov
loop
fs
push
out
data16
scas
test
fs
inc
in
cmc
fisubs
cmp
xor
jle
cmpsl
clc
popf
inc
sbb
jg
dec
mov
inc
mov
test
pusha
fcmovnb
dec
insl
lds
push
aam
pop
sbb
out
mov
sub
xlat
xor
ror
pushf
jg
ljmp
rcll
mov
lds
scas
xor
mov
pushf
cli
lret
dec
fcompl
dec
add
lahf
hlt
subl
jnp
xor
sbbl
popa
cmp
cs
mov
adc
js
xor
lcall
loope
sbb
xchg
dec
sub
pop
sti
fwait
test
dec
dec
test
jbe
sbb
out
dec
les
jne
mov
sbb
test
out
sub
pop
or
out
outsl
pusha
adc
xor
outsl
dec
jecxz
in
enter
ficomps
add
ficoms
call
cmp
xchg
fidivl
faddl
mov
push
cld
cmp
scas
inc
lds
int3
fistps
adc
add
fdiv
aaa
sti
xlat
stc
ja
push
lds
inc
mov
je
fbld
stc
fnstenv
jmp
scas
jb
fnstenv
or
shl
cmp
gs
or
shlb
or
jae
and
inc
pop
mov
sbb
sti
arpl
jo
adc
mov
pop
mov
mov
nop
adc
mov
fbstp
mov
jmp
into
fstps
nop
pop
xor
jecxz
mov
loopne
mov
psllw
lcall
scas
loopne
out
stc
stos
sub
or
int
clc
mov
sub
inc
stos
call
test
bound
aad
cmp
ljmp
repz
mov
xor
pusha
in
pop
push
leave
rorb
into
mov
push
mov
dec
out
or
push
loopne
cmpsl
ret
fnstenv
mov
test
test
sbb
xchg
pop
adc
mov
movsb
jecxz
sbb
adc
daa
and
je
pushl
mov
std
or
pushf
bound
shll
pop
lret
sub
mov
aaa
mov
sub
xor
lea
dec
pop
imul
cwtl
xor
iret
push
mov
pushf
arpl
lods
fistpl
aaa
and
in
pop
cmpsb
outsb
fs
mov
inc
lods
mov
sbb
pop
nop
dec
popa
mov
std
insl
push
xor
mov
add
cmp
or
jne
aad
sbb
sti
bound
xchg
dec
aam
xor
data16
pop
lock
arpl
mov
arpl
and
pop
repnz
inc
repnz
push
mov
xchg
jecxz,pn
sbb
sub
ficompl
dec
stos
rcrb
repz
dec
mov
add
out
jns
es
ja
shrb
push
test
popf
jge
imul
sub
fdiv
lea
mov
mov
xchg
imul
fcomps
mov
jge
cmp
and
pop
add
dec
push
hlt
rcl
and
mov
xchg
mov
adc
dec
cmp
adc
into
enter
dec
popa
push
mov
xor
cmpsb
cmp
mov
fmul
fldl
sub
mov
jp
mov
inc
xor
xor
shlb
movsb
adc
inc
mov
fnsave
imul
cmp
xlat
and
inc
add
imul
pushl
dec
sbb
pop
mov
in
push
stos
mov
cld
sbbl
jg
jl
fnstcw
dec
insb
or
lods
pop
jbe
xor
lods
push
mov
push
dec
sub
jnp
out
xchg
seto
dec
xor
arpl
and
aaa
cmp
insb
adc
push
jmp
jl
aaa
shlb
add
int
je
scas
outsl
sub
shll
test
lds
inc
sbb
ss
mov
mov
dec
cltd
add
repz
in
pop
insl
add
xor
fcoml
pusha
sbb
cmpsl
unpcklps
inc
or
js
std
pop
das
ss
xlat
xor
dec
jecxz
pop
ljmp
push
mov
mov
movsb
jne
xchg
lods
test
mov
iret
callw
or
mov
test
seta
mov
cvtpi2ps
clc
pop
jbe
pop
jg
mov
cmp
dec
sub
mov
shll
push
add
mov
pop
dec
add
cmp
in
icebp
test
pop
jmp
stos
sbb
inc
cld
out
inc
xor
repz
xor
push
sbb
sub
add
mov
dec
cld
xchg
pop
aaa
mov
pop
dec
popa
xchg
shlb
decb
cmp
sub
fnstenv
std
aas
pop
jae
push
mov
in
pop
lret
or
adc
rorl
inc
pop
lret
lds
mov
rcrl
lds
ja
mov
adc
jmp
add
cli
fcomip
or
cmpsl
adc
andb
out
sub
mov
or
int3
jno
adc
xchg
adc
cmpsb
add
pushf
xchg
mov
out
sarb
sti
jp
mov
sbb
movsb
mov
aaa
sbb
cmpsl
fwait
aaa
into
int3
enter
test
scas
bound
xchg
push
stc
inc
and
jo
lods
mov
mov
iret
jns
lahf
cmpsb
push
push
rol
dec
je
mov
cmp
inc
stos
add
push
dec
leave
push
shl
xor
int
push
mov
adc
cmp
mov
jecxz
inc
mov
fst
addr16
scas
mul
in
inc
xlat
loopne
imul
lds
push
nop
stc
cmp
stos
sbb
jo
cltd
shr
repz
dec
push
mov
add
mov
mov
pop
repnz
imul
mov
insl
mov
in
sub
into
in
and
popf
xor
test
sbb
jo
lds
aas
das
out
std
aam
cli
inc
jmp
hlt
mov
sti
dec
xor
jge
dec
sbb
add
ss
lock
push
or
jg
loopne
enter
cltd
mov
and
inc
fldcw
lret
pusha
adc
mov
xor
jnp
test
push
lcall
adc
stos
mov
inc
push
mov
xorl
push
jnp
mov
jp
sub
jecxz
lahf
setp
sbb
pushf
adc
ja
sbbb
inc
cmp
cmp
enter
into
dec
bound
data16
cwtl
add
cmpsb
ret
push
popf
jo
pop
xor
cltd
scas
add
dec
fwait
push
rclb
pop
mov
jecxz
xchg
push
push
mov
or
cmpsl
cld
xorl
pop
dec
cltd
and
js
notb
cmp
dec
xchg
xchg
pop
ds
mov
je
rcrl
fwait
dec
xchg
push
mov
sbb
dec
mov
dec
adc
ja
mov
outsb
push
data16
and
test
add
popa
xlat
mov
pop
in
adc
jmp
loop
test
adc
jns
or
push
ret
add
shll
inc
sub
mov
jbe
xor
fidivrl
enter
fsubs
movsb
mov
enter
push
cmpsb
jge
pusha
int3
pop
outsb
add
stos
mov
repnz
jo
mov
bound
xchg
adc
xchg
pop
xor
cmp
dec
pop
pop
out
sub
loopne
cmp
mov
daa
xchg
and
mov
popw
outsl
adcl
mov
pop
fxtract
arpl
or
orb
in
mov
gs
mov
dec
pushf
sub
pop
dec
and
in
fyl2x
xor
test
push
cmp
dec
popf
imul
xchg
aas
pop
aad
cmp
mov
inc
pop
ljmp
fisttpll
int3
bound
in
repz
hlt
or
iret
sbb
lds
jo
xchg
jo
pop
lds
and
push
inc
rcrb
jecxz
aad
sub
dec
repnz
adcb
sbb
enter
inc
or
es
dec
pop
push
orb
or
int3
outsl
test
scas
jns
repz
cmp
lock
les
js
dec
lcall
dec
mov
dec
int
pusha
cmp
inc
pop
cmc
cmp
mov
stos
push
pop
outsb
lret
ja
xlat
and
push
ds
mov
test
xlat
mov
pop
test
sbb
fcmovne
aad
iret
stos
sub
repz
push
xchg
and
int3
rclb
arpl
fsts
mov
lods
push
roll
popf
scas
stos
xchg
xchg
add
sbb
mov
push
adc
enter
push
fldenv
pop
das
mov
es
mov
aas
movsb
fnstsw
add
in
push
sbb
push
lret
popa
out
fnstenv
mov
sub
pop
or
xchg
or
stos
data16
loopne
popa
testl
jle
cmp
add
adc
fdiv
popa
popa
aaa
shrl
push
sub
roll
aad
jg
movsb
cmp
lods
mov
popf
out
inc
shl
out
sbb
cmp
xchg
mov
xor
insl
ljmp
lahf
in
scas
ljmp
sub
pop
and
mov
ljmp
adc
mov
mov
cmpsl
cmpsb
clc
enterw
arpl
cltd
mov
dec
out
mov
leave
out
pop
adc
fwait
lds
push
in
bnd
and
insb
add
rorb
sub
jmp
xchg
xchg
sbb
fidivrs
push
adc
outsl
xor
sub
stos
pop
fimuls
gs
loop
sub
mov
pop
add
pop
imul
ljmp
movsl
xor
lahf
or
inc
cmc
mov
sub
ret
in
xor
sub
fsts
cmp
pop
and
subl
sahf
insb
js
jne
mov
arpl
mov
dec
outsl
sbb
dec
repz
sbb
jae
fs
out
mov
frstor
cmp
jl
stos
dec
andl
in
mov
cmc
mov
pop
pop
cmp
sbb
stos
cltd
xor
xchg
ljmp
push
and
push
mov
xchg
mov
or
loopne
mov
mov
add
lcall
cmp
repz
pop
push
nop
mov
adc
inc
cs
div
test
insb
popf
sahf
les
pop
call
es
dec
push
adc
mov
xchg
arpl
sbb
insl
test
test
inc
mov
int3
dec
dec
divl
pop
xchg
popa
mov
fcoml
lret
ror
xchg
iret
dec
jbe
inc
push
out
ret
imul
fildl
fisttps
enter
data16
sbb
dec
mov
xchg
rcrl
inc
xchg
add
xor
add
mov
mov
cmp
sub
pop
test
fsubrs
and
mov
in
pop
xor
adcb
mov
add
addl
dec
movsb
adc
sub
test
or
test
jp
out
leave
hlt
and
add
mov
and
jg
mov
mov
inc
hlt
cmp
add
jno
dec
cmp
and
jae
imulb
sub
adc
je
fbstp
push
jl
loopne
mov
push
or
test
pushf
popa
repz
dec
outsl
js
or
lret
sub
push
mov
mov
sub
jge
xor
add
pop
out
inc
aam
aas
push
jg
pop
mov
pop
push
ret
das
adc
mov
jo
push
xor
mov
mov
fldt
push
add
xchg
test
fldcw
pop
aam
cltd
into
jne
mov
andl
daa
insl
rcr
lds
jbe
je
dec
jmp
repz
negl
and
mov
jo
aas
mov
ret
and
mov
aaa
push
cmpsl
push
mov
popa
pop
fs
adc
sbb
iret
jle
into
xchg
test
sub
sub
jo
adc
jl
hlt
cltd
lods
jns
stc
dec
pop
jae
shrl
les
fwait
popa
jle
in
jg
sti
push
sub
pop
mov
push
xor
cmpsl
pushl
sbb
jle
lods
jge
or
fwait
or
mov
push
sub
ret
lods
jmp
pop
sub
pop
sbb
pop
repz
push
imul
lods
dec
or
test
insl
shl
add
jecxz
orl
sub
mov
jle
xchg
mov
inc
push
sub
dec
aas
jns
push
jmp
aam
or
sbb
pop
pop
movsl
mov
int3
mov
and
arpl
popl
and
in
sub
jp
sbb
je
jecxz
adc
aam
xchg
cs
shll
add
push
dec
pop
fnsave
and
std
jns
jb
xchg
arpl
ret
out
xor
mov
sbb
cmc
dec
cltd
pop
out
stc
cmp
mov
int3
adc
pop
xchg
inc
inc
pop
add
jle
rcrb
iret
and
cmp
mov
int3
movsb
jmp
aam
inc
inc
fsubrl
mov
bound
daa
ret
xor
sbb
pop
lahf
icebp
lea
inc
scas
clc
in
orb
sarl
xor
gs
xor
nop
out
push
sub
fnsave
or
ss
mov
mov
or
aas
dec
and
and
inc
jo
and
adc
or
ds
lret
aaa
xor
cltd
push
sbb
jp
xchg
in
and
bsr
lcall
cmpb
mov
pop
xor
call
dec
jne
pop
adc
mull
dec
mov
cmp
testb
adc
ret
jmp
clc
rcr
and
fdiv
rcrl
imul
addr16
mov
vprotd
push
outsb
add
lret
out
push
je
mov
rcrl
cmp
into
sub
shr
xchg
xor
scas
ret
jl
mov
bound
inc
jmp
enter
pop
ret
pop
jnp
sahf
clc
add
testl
cltd
in
repz
icebp
add
int3
scas
xlat
orl
fdivl
fdivrs
out
aad
js
lds
xor
cld
jno
lcall
push
in
stos
inc
insl
test
bound
mov
imul
mov
je
jg
fildll
add
xchg
adc
std
xchg
std
rcrl
dec
andb
add
xorb
std
xchg
dec
inc
rcll
cmpsb
inc
repz
cs
mov
or
test
incb
inc
bound
lds
fwait
movsb
addl
fsubrp
adc
out
and
sbb
mov
movsl
jb
ss
xchg
cwtl
mov
mov
popf
fcoms
test
jmp
xor
sahf
in
stos
in
pop
adc
mov
cmp
rol
pop
add
push
sti
loop
sub
mov
ret
mov
out
lock
sub
sub
push
ret
dec
loop
jno
out
sub
icebp
mov
inc
push
ljmp
jno
cmp
and
inc
dec
jae
push
je
xor
mov
ror
popa
jg
push
ds
fs
ret
mov
fidivs
mov
xor
std
dec
jbe
adc
cld
repz
push
aas
xor
in
mov
dec
out
bound
movsb
gs
jmp
mov
test
mov
push
xor
mov
cld
xchg
or
cltd
pop
lret
lahf
push
mov
aad
jae
cwtl
jae
push
mov
xchg
or
and
hlt
mov
addr16
mov
imul
and
add
push
mov
mov
jle
clc
jg
dec
rcrb
add
pop
mov
negb
movsb
mov
xor
xchg
add
and
ljmp
xchg
mov
add
or
pop
test
movsl
fcoms
call
leave
mov
push
ss
mov
je
fwait
jns
test
sbb
sub
sahf
out
push
pop
mov
xor
fwait
dec
jle
shlb
xchg
daa
fistps
mov
add
add
stos
mov
inc
cmp
fisubrs
push
push
mov
adc
xchg
mov
lret
and
add
test
pop
mov
data16
and
mov
cmpsl
mov
andl
sbb
jmp
out
cmc
nop
in
pusha
push
sbb
testb
das
std
dec
mov
repz
popf
jnp
add
push
pop
mov
adc
int3
outsl
adc
push
jecxz
dec
les
in
pop
mov
adc
mov
push
mov
dec
sbb
push
jp
jg
mov
fadds
inc
stos
ljmp
imul
push
adc
mov
test
add
jmp
inc
loope
xchg
repz
lahf
idivl
scas
push
in
loopne
lods
adc
lea
mov
ss
aad
popf
or
mov
pop
in
call
pop
cltd
insl
pop
in
popf
fdivs
daa
mov
fstp
ret
ds
add
or
cli
mov
jg
and
lods
mov
test
aam
test
js
popf
jmp
and
addr16
push
mov
inc
aas
mov
jmp
orb
je
jno
jge
imul
and
inc
pop
imul
ss
cmp
lods
inc
adc
hlt
sub
repz
dec
jmp
fcmovnu
and
shrb
adc
mov
inc
arpl
movsl
pop
imul
lock
inc
adc
rcrl
adcl
inc
mov
or
movsl
dec
daa
mov
lods
and
fadd
mov
push
sub
fidivs
dec
or
ds
push
loop
sti
pushf
jg
adc
fs
cli
pop
popa
iret
mov
mov
ljmp
pop
out
add
movsl
xchg
mov
pop
xor
insb
mov
in
xchg
and
sar
icebp
adc
jns
lea
lock
test
and
mov
mov
push
leave
push
lock
hlt
dec
mov
not
xchg
repnz
jp
sub
imul
pop
cmp
imul
sti
sbb
inc
sbb
sub
inc
add
cli
xchg
pusha
adc
xor
dec
add
popf
adc
mov
lea
dec
adc
mov
add
pop
pushf
xchg
mov
jmp
orb
and
gs
adc
pushf
in
mov
andb
cmpsb
xlat
xor
pop
rol
shll
aas
jbe
aad
sarb
daa
jmp
arpl
jg
cmc
lds
notb
xchg
cs
hlt
sub
daa
push
mov
icebp
mov
shlb
jp
aad
dec
pop
cmpsb
js
pusha
xchg
lock
inc
push
xchg
dec
cs
sti
add
data16
aad
cmpsl
repz
js
enter
mov
cmpsb
xlat
repz
cmp
aas
aaa
lret
pop
ja
outsl
es
sbb
xchg
out
test
testl
mov
lea
jns
ret
push
dec
iret
jp
sbb
arpl
xor
mov
setge
lock
std
add
mov
inc
mov
nop
sub
test
add
xchg
xchg
ret
cmp
mov
jmp
mov
rorb
imul
cmc
jns
shlb
inc
movsb
aaa
cmp
jno
mov
mov
add
ss
mov
lock
jns
test
lahf
out
das
mov
and
mov
test
push
scas
xchg
es
stos
xchg
aam
push
dec
js
mov
xor
xchg
aas
imul
negb
int3
add
hlt
dec
addr16
int3
subl
cmc
add
pusha
insl
sbb
xchg
cmp
mov
inc
jb
arpl
dec
mov
xchg
push
inc
sbb
outsl
or
ss
cmc
or
cmpsb
mov
xchg
bound
mov
jbe
mov
jge
out
and
hlt
in
pop
xchg
aam
and
out
in
cltd
test
mov
fidivrs
repz
xchg
cmpsl
jmp
test
fistps
movsl
movsb
pop
and
mov
loop
sub
mov
jge
js
mov
inc
loop
dec
push
call
push
xlat
jnp
inc
fimuls
pusha
mov
fisubl
mov
es
or
dec
sub
mov
sbb
sbb
xor
leave
test
das
pop
xchg
xor
dec
lret
leave
mov
mov
test
fidivrl
shlb
cld
mov
mov
pop
imul
fnstsw
roll
in
cs
mov
insb
in
ret
test
hlt
or
or
repnz
in
push
or
orb
push
sub
stos
jge
or
shl
mov
xor
pop
aam
lcall
sbb
je
lret
arpl
stc
nop
mov
push
pop
sub
push
sub
fsubl
fwait
adc
dec
daa
cmp
movsb
shrd
pop
inc
xlat
out
sbb
ret
dec
inc
gs
pop
mov
aam
cmp
jb
mov
scas
inc
xchg
fwait
pop
int
inc
rorl
mov
imul
and
movsb
repnz
jo
jbe
or
jecxz
call
push
cmc
dec
lods
cmp
out
je
mov
cmp
pop
sub
hlt
sbb
cmp
xchg
cmp
mov
jp
add
xchg
pop
cld
or
xor
cmp
je
iret
fnstsw
lret
in
and
imull
int3
push
stos
mov
jmp
in
bound
xchg
mov
lret
push
call
and
test
jle
sub
test
out
daa
mov
xchg
out
mov
cmp
jmp
das
cmp
lods
inc
cli
sbb
rclb
cmp
jle
cmpsb
push
cmpsl
dec
lret
xor
out
jp
adc
mov
or
int
insb
push
shll
pop
sbb
xor
adc
lock
or
popf
jo
xchg
lcall
push
cli
push
lcall
pop
mov
int
fldt
les
ja
cli
leave
dec
xorb
scas
fdivl
lock
or
add
lea
jmp
scas
ret
popf
add
xchg
test
mov
mov
cmp
lods
pop
mov
lock
in
sbb
or
out
sbb
in
xor
xor
rcrl
sahf
and
xchg
inc
xor
xor
push
enter
or
lahf
loopne
fidivrs
nop
jns
push
aad
pushf
lret
mov
das
repnz
retw
out
pop
je
movsl
adc
stc
push
and
xor
fwait
jmp
fmuls
fdivs
pop
mov
or
push
cltd
mov
push
cmp
mov
push
mov
je
xor
mov
shrb
or
mov
jmp
adc
push
call
mov
xchg
ds
lcall
movsl
add
adc
add
es
jne
xchg
cmp
sbb
or
ds
sti
outsl
push
add
rcrb
adc
dec
cmp
jle
fists
push
js
add
fwait
xor
call
push
xchg
mov
push
sbb
push
add
xchg
mov
in
mov
ss
pop
jbe
lods
sbbb
dec
xchg
xchg
sbb
dec
scas
xchg
jge
dec
sti
xor
out
sub
popf
sbbb
xchg
jge
add
cmp
insl
mov
test
nop
or
mov
push
aas
add
cltd
ret
hlt
cmp
jge
test
cmc
mov
mov
mov
dec
sub
xchg
adc
inc
pop
or
jmp
mov
xor
iret
mov
ljmp
and
jecxz
test
clc
mov
xchg
pop
ljmp
enter
in
pop
outsb
stos
add
or
pop
divb
repnz
cmp
push
cmp
jns
hlt
mov
push
lods
adcl
xchg
and
cwtl
cmp
or
filds
nop
pop
jp
pop
in
cli
idivb
mov
lock
int
xchg
jle
lahf
pushf
push
or
pushf
mov
in
ljmp
fadd
dec
cmp
and
stos
inc
add
adc
jb
iret
insl
pop
imul
sar
outsb
fadds
popf
nop
testl
les
sub
xor
fnstsw
cli
aad
rcl
shlb
sbb
lea
xor
cmp
nop
push
cmpsl
mov
je
lea
or
xchg
add
xor
sbbl
flds
inc
push
cs
fnstenv
maxps
pop
inc
adc
dec
stos
pushf
xor
ss
sub
push
cmp
data16
mov
xchg
hlt
xor
dec
and
xchg
inc
mov
push
inc
daa
jo
mov
or
sub
aas
cs
int3
testl
push
aam
addr16
jecxz
aas
loop
mov
das
push
jge
mov
shr
test
xor
fcoms
mov
mov
shrb
or
sbb
stc
xchg
fs
ds
fstps
divb
add
jge
arpl
and
push
imul
fnsave
inc
mov
jbe
cmp
repz
xchg
mov
mov
push
cltd
xchg
pop
int3
rol
push
fidivrs
jno
into
gs
adc
push
mov
lret
js
scas
push
inc
sbbb
mov
inc
out
sahf
loopne
mov
and
push
pop
in
hlt
cltd
mov
movsb
outsb
or
pop
loope
push
push
imul
mov
fsubrs
jae
dec
mov
fidivrl
cmp
in
fs
jnp
dec
sub
shrb
inc
movsb
ret
js
sbb
push
insl
aas
cli
or
in
mov
shr
bound
jae
xlat
mov
and
mov
mov
cmc
aas
fucom
testb
inc
dec
push
xor
cmpl
jnp
inc
sets
xor
or
in
adc
jns
int3
ret
into
jle
mov
lahf
jnp
xor
xchg
pop
pop
jp
mov
xchg
sub
xchg
shrb
xlat
fistpl
sbb
dec
mov
pushf
dec
dec
xor
pop
shlb
or
push
mov
out
call
in
pop
xchg
and
cmpsb
mov
insl
cli
push
push
jne
xor
divb
xlat
mov
sbb
sub
push
out
es
roll
push
xlat
test
ret
xor
mov
jmp
fimuls
push
xchg
cs
call
sub
jmp
aaa
jo
xchg
fmul
sbb
jbe
in
jae
fisttpl
mov
je
insl
imul
lahf
inc
and
push
call
stos
mov
aam
fiadds
or
pop
movsb
fstps
jg
lds
jp
mov
or
hlt
ja
subb
fidivrl
js
sub
subb
cltd
adc
and
mov
ljmp
mov
arpl
js
mov
jnp
jl
scas
out
fcoms
mov
xchg
test
sbb
lock
pop
fs
jo
and
flds
lret
xor
addb
imul
inc
jno
and
sbb
into
or
arpl
dec
jo
fstpl
hlt
mov
jecxz
pop
jo
mov
jbe
fdivl
fs
bound
mov
mov
mov
fnstcw
nop
xchg
divl
mov
adc
je
jbe
in
inc
jb
in
xor
push
les
push
outsb
or
mov
adc
and
inc
mov
cmp
stos
imulb
add
xchg
bound
cli
shl
roll
sub
or
adc
jns
dec
dec
arpl
cmp
push
pop
inc
adcl
pop
jns
nop
jnp
push
into
enter
mov
xor
dec
cmp
or
std
lods
inc
push
test
xor
ret
sub
lock
push
mov
sub
jecxz
ret
ds
dec
dec
stos
in
mov
ds
cs
test
icebp
in
mov
jae
loope
dec
repnz
lret
xchg
call
int
inc
add
mov
pop
in
jmp
adc
into
mov
loopne
sub
testl
shrb
xor
mov
out
or
jg
andl
sbb
imul
ret
int
icebp
lea
pop
ds
shr
xor
into
pusha
orb
dec
sub
lret
int
sub
aam
or
out
dec
pop
sub
or
pop
jg
andb
push
and
and
aaa
xchg
lret
dec
dec
int
stc
lds
aam
cli
sbb
fnstenv
push
jmp
aaa
pop
xor
movsl
inc
push
add
sub
jne
adc
dec
dec
jle
add
cmp
or
dec
std
stc
shl
add
movntps
out
sub
xchg
fstpl
mov
jne
cwtl
stos
mov
fildl
sarb
imul
inc
push
pop
xchg
andb
xchg
jne
addr16
add
imul
jo
mov
aam
test
dec
mov
mov
inc
sbb
sbb
mov
xor
xor
test
test
dec
push
loop
mov
test
hlt
cltd
mov
push
fidivl
out
dec
jp
out
push
mov
jno
test
jno
sub
and
popa
out
adc
mov
fsubrp
scas
push
shr
ja
dec
fcomps
dec
xor
shll
out
push
mov
pop
roll
sub
loop
lods
push
adc
test
dec
aad
cwtl
inc
in
jne
lret
je
arpl
xchg
outsb
hlt
mov
cmpsb
insl
std
ret
jp
es
mov
adcb
gs
std
popa
xor
jbe
dec
enter
push
lods
pop
loop
enter
mov
sarl
das
and
std
pop
sub
jg
sub
pop
sub
and
adc
pop
lods
cwtl
cmp
xchg
mov
stc
pop
sub
lret
add
pop
inc
inc
addr16
sarl
sub
mov
and
fs
xor
jns
leave
xchg
xchg
repz
scas
stos
cmp
arpl
cmpsl
lret
lret
mov
loope
mov
adc
test
xor
push
pop
fstpt
sti
shr
sbb
add
push
mov
lock
aaa
xchg
cmp
lock
add
mov
mov
mov
inc
pop
push
aad
and
pop
push
push
pop
lret
mov
test
pop
mov
ret
imul
sbb
test
pusha
mov
mov
lods
xor
scas
call
lahf
cmpsl
sahf
in
aaa
mov
lods
loope
jnp
hlt
push
pusha
cmp
push
mov
stc
es
fisubl
cli
jb
adc
inc
loop
or
add
dec
cmp
jno
push
sbb
shrl
hlt
mov
lcall
jne
loope
stos
xchg
call
push
add
adc
pop
mov
outsb
iret
jo
les
popf
mov
dec
hlt
jge
mov
or
dec
lea
jle
sub
xchg
je
mov
in
stos
push
cmp
xchg
inc
pop
cmp
shl
popa
xor
mov
push
and
in
sub
cmp
jle
int3
pop
push
xlat
cs
lret
dec
jbe
jb
cmp
xchg
shrb
sub
adc
int
not
lock
lods
inc
in
jle
xchg
mov
les
sbb
add
cmc
test
adc
dec
scas
mov
pop
cmp
cmp
clc
je
pop
ja
sub
dec
sub
pushf
dec
std
sbb
stos
jbe
pusha
mov
push
push
jmp
fsubs
mov
dec
filds
adc
ds
or
pop
movsl
jge
aad
mov
mov
jmp
shll
mov
addl
sbb
add
mov
add
push
add
and
mov
lahf
imul
add
sbb
dec
cmp
popf
insb
leave
repz
cmpsl
lock
sbb
lock
mov
jbe
xor
mov
arpl
adc
fs
lds
fnstsw
fidivrs
shlb
iret
data16
mull
sbb
mov
insl
inc
enter
fisttpll
mov
js
mov
adc
pushf
fdivl
in
lret
cmpsb
pusha
orb
stc
test
jnp
mov
int3
aam
sub
xchg
clc
sub
jmp
out
jl
inc
scas
push
clc
sahf
dec
sarb
fldt
ss
push
cmp
push
mov
aad
jo
pinsrw
lahf
movsb
pop
outsl
repnz
jge
and
std
cmpsb
ret
fisttpll
and
push
push
xchg
mov
jg
je
sti
dec
push
cltd
cltd
push
lea
clc
mov
scas
ljmp
mov
lret
bound
mov
cmpsl
out
sbb
aad
stc
adc
mov
inc
lcall
and
sub
xchg
jb
add
dec
shrl
adc
into
add
sbb
inc
sub
lret
mov
imul
xchg
outsb
jp
xor
push
cwtl
jb
add
fstps
ret
std
cs
mov
movsb
sbb
data16
lret
cltd
xchg
negl
stos
clc
icebp
add
push
mov
insb
add
add
adc
lods
push
or
call
or
fistl
xchg
leavew
cmp
je
xlat
mov
xorl
push
push
subb
jnp
mov
cmpsb
out
int
adc
sub
or
sub
and
scas
push
jmp
aaa
shrb
or
cmp
fstl
or
xchg
and
cmp
enter
jae
dec
dec
mov
push
out
sub
outsl
push
xor
sbb
mov
mov
inc
adc
rcrb
gs
and
cs
fs
xchg
or
pop
outsl
jg
loop
clc
jl
outsb
scas
sbb
xchg
ret
stos
jno
adc
sbb
mov
push
jmp
adc
or
cmp
ljmp
mov
int
inc
fucomip
inc
mov
xchg
cmp
jb
mov
ret
xchg
mov
shll
push
push
test
sarl
inc
popa
dec
cli
pop
pop
out
cmpsl
xor
push
mov
dec
cmpsb
imul
js
in
sahf
int3
rorl
rcrb
mov
xchg
add
scas
gs
orl
lahf
dec
test
jg
xchg
or
js
fcoml
lock
shll
testb
gs
push
jae
call
push
push
adc
addr16
adc
mov
xchg
and
cmp
insl
sub
mov
js
and
mov
dec
sub
jb
sahf
or
icebp
xor
nop
daa
mov
imul
sbb
dec
lcall
pop
hlt
jg
cmpsb
sbb
popf
jmp
lock
and
jge
jbe
mov
adc
cmp
test
leave
xor
mov
arpl
fwait
je
xchg
dec
outsb
cli
test
iret
mov
add
fimull
out
mov
clc
inc
pop
push
mov
les
mov
mov
das
or
sub
jle
mov
orl
jb
pop
xchg
mov
jg
pusha
mov
cmp
cmp
mov
jecxz
xor
push
push
lods
push
jmp
dec
pushf
repnz
call
xor
outsl
movsl
cmp
nop
out
jge
cmpsb
push
jno
mov
lea
pop
inc
pop
or
cli
xchg
push
in
shl
in
jo
dec
jne
mov
in
dec
popa
mov
push
mov
loopne
and
loopne
call
or
out
stos
inc
rcrb
mov
pop
mov
mov
xor
and
adc
leave
insb
push
and
sub
pop
icebp
jecxz
xor
mov
pop
cltd
test
andb
pop
mov
sahf
addr16
mov
jecxz
cmpsl
lret
jp
or
mov
roll
out
jb
cwtl
repnz
stos
xchg
shlb
cmp
arpl
push
push
fistps
inc
mov
sbb
pop
stos
fs
or
aaa
and
sbb
and
fisubrs
push
dec
cs
jge
aas
pop
test
lret
jg
cmp
mov
enter
ret
pop
scas
mov
subl
xlat
mov
rcrl
sar
inc
mov
scas
sti
or
and
stos
fldl
lea
mov
imul
stos
mov
mov
pusha
hlt
inc
sbbl
xchg
mov
out
bound
dec
or
jge
enter
and
cmpsb
jnp
int3
lret
cltd
stos
jnp
dec
pop
cmpsl
andb
dec
repz
ja
cli
xchg
dec
xchg
cltd
dec
in
mov
push
xor
rcrl
repnz
sbb
test
jmp
cli
mov
xchg
call
or
inc
and
sti
call
rorb
bnd
jge
push
enter
or
xor
xchg
inc
jns
imul
lds
movsb
mov
jge
add
cmp
sbb
pop
sub
mov
jae
test
ja
fildl
mov
movsb
or
cmp
ret
cs
push
lcall
xor
daa
clc
iret
rol
lcall
sub
loopne
jbe
ljmp
jg
jbe
push
ret
mov
leave
dec
jb
insl
xlat
cmc
and
aam
popf
fistpl
mov
lea
jno
cmp
adc
add
mov
aaa
stos
mov
mov
addr16
and
dec
cs
jmp
jle
testl
mov
xchg
call
movb
mov
repz
loope
aad
sub
je,pn
test
ljmp
sbb
pushf
adc
pop
mov
scas
mov
shll
jp
imul
sbb
jmp
or
xor
rcll
pop
mov
push
dec
xor
push
cld
or
mov
cmp
hlt
addb
add
lcall
sbb
ljmp
aaa
sahf
dec
das
data16
mov
mov
push
mov
and
call
scas
lds
out
inc
lea
lahf
jne
push
cmc
inc
sahf
pop
jae
fisttpll
xchg
sub
arpl
or
test
mov
aad
mov
adcl
lret
pop
std
add
std
repz
sub
cltd
adc
js
aas
stos
dec
and
dec
mov
data16
mov
xchg
and
push
das
and
repz
pop
rcr
and
add
clc
mov
clc
adc
adc
outsb
jecxz
and
out
lcall
scas
hlt
cmp
mov
data16
adc
xchg
mov
adcb
sub
dec
loopne
iret
loop
sbbb
mov
cmc
repnz
stos
inc
inc
jl,pn
out
out
out
out
fwait
or
sub
xchg
lods
xchg
scas
jo
loopne
mov
into
int
por
sub
add
sbb
hlt
aad
pop
pop
repnz
fnstcw
or
sub
mov
imulb
mov
and
push
jno
cmpl
jo
subb
das
aaa
push
adc
add
pop
pop
sbb
aad
xchg
lods
rcll
inc
pusha
push
jmp
or
push
mov
mov
xchg
out
popf
xor
das
push
fcmovbe
ret
and
aaa
scas
int
mov
add
repnz
popl
and
call
mov
jmp
imul
pop
fwait
cmp
pop
jo
sbb
add
andb
inc
hlt
fisttps
dec
stos
sarl
jl
sub
addb
movsb
fistl
aas
mov
fiadds
xchg
inc
cmpsl
divb
push
fcmovnb
scas
adc
push
jecxz
ret
lea
outsb
cmp
stos
mov
xor
loopne
addb
and
sbb
lods
test
test
lods
xor
scas
jno
mov
lock
enter
lods
cld
pop
ljmp
sbb
cmp
pop
ljmp
idivb
out
nop
sbb
ret
xor
sbb
stc
lret
pop
mov
mov
adc
sarb
cmp
cmp
push
dec
hlt
bound
arpl
mov
lret
jp
fdiv
cmpsl
das
inc
repnz
xchg
ja
xchg
clc
jg
loop
push
dec
cmp
dec
xor
in
and
cmpsl
push
push
sub
pop
adc
jg
jp
fucomp
mov
pop
test
or
es
push
in
cld
pop
enter
jne
inc
adc
fnstsw
pop
shll
cmp
repz
iret
and
mov
out
movsl
lea
xor
jne
sbb
aam
inc
sub
das
shll
sbbb
or
rcl
insb
scas
inc
jne
mov
lock
sub
inc
lret
xor
lahf
gs
mov
lock
push
sahf
cmpsl
xlat
pop
mov
pushf
pop
fsts
pop
cmp
jmp
dec
fcoml
mov
mov
and
xchg
pop
xchg
add
sbb
lahf
mov
sti
aaa
and
mov
inc
pop
aam
mov
mov
lahf
fidivs
int3
mov
xor
jl
sbb
mov
hlt
push
cltd
aam
mov
int3
mov
pop
out
xchg
pop
xor
sub
out
mov
das
adc
inc
xor
mov
cltd
mov
imul
in
mov
ds
daa
fs
push
stos
mov
ljmp
mov
adc
sbbl
xchg
mov
mov
sbb
sub
stos
inc
mov
loope
pop
clc
xchg
mov
sbb
filds
bound
inc
sbb
out
mov
push
insl
jge
push
xchg
push
lods
cmp
and
test
jle
jns
je
movsl
rolb
not
stos
mov
jle
cmp
pop
or
aas
mov
ja
pushf
add
negb
out
and
adc
push
mov
and
adc
fldt
cmp
mov
jmp
cwtl
das
sbb
pop
jp
lcall
cwtl
stos
loope
lahf
stos
add
mov
fbstp
and
ror
mov
jge
out
and
pop
jp
rorl
lock
out
filds
and
push
xchg
jbe
dec
pop
jbe
sbb
mov
or
pop
mov
leave
cmovno
jecxz
loop
jecxz
std
dec
pop
sbb
mov
pop
pop
inc
scas
xor
jns
mov
xchg
cld
push
xchg
and
dec
aad
out
pop
ljmp
daa
xchg
sub
xchg
cmpb
test
xor
push
sub
rol
mov
insl
hlt
dec
in
ret
insb
jmp
mov
sarb
add
add
jo
cmc
imul
sbb
dec
hlt
push
jbe
iret
pop
mov
lahf
in
xlat
insl
testl
aam
sbb
mov
inc
mov
cmp
xor
aaa
push
aad
repz
fildl
fsubrl
and
or
sub
lods
mov
pop
repnz
es
dec
ffreep
mov
jns
dec
loopne
push
mov
addr16
mov
mov
fidivrs
push
lods
push
daa
test
xlat
fsubl
cwtl
cs
ret
lret
push
sub
in
les
push
dec
repz
mov
or
aam
adc
shlb
sbb
addr16
cmp
xchg
and
push
push
idivb
add
jmp
cwtl
lods
je
rol
lea
lods
mov
push
cmc
mov
rcrb
pop
inc
in
mov
push
outsl
mov
xchg
sub
pop
jle
sbb
dec
jmp
mov
test
pop
jb
jno
mov
mov
push
imull
leave
fldl
or
fnsave
jo
inc
xlat
sub
mov
mov
imul
pop
inc
mov
sub
gs
das
aad
mov
pushf
lods
stc
mov
fistl
les
or
mov
movsl
lret
jl
dec
scas
push
data16
bound
test
imul
jb
push
testb
and
aas
dec
pop
sar
mov
jno
and
rcll
cwtl
in
dec
pusha
iret
mov
outsl
fmuls
sbb
mov
xor
fadds
mov
shr
imul
jb
adc
test
sub
xchg
dec
cmp
shlb
pushf
dec
push
cli
jne
cli
in
popa
lcall
jge
pop
mov
inc
jmp
pop
or
cwtl
jge
stos
repnz
and
stc
push
inc
lret
cmp
stos
in
or
xor
mov
cmp
and
daa
inc
rep
jmp
ficompl
les
cmp
loopne
sub
lds
push
dec
out
sbb
jnp
les
jmp
repz
shrl
lret
add
jmp
cmp
sarl
cmc
mov
lahf
cmp
mov
mov
mov
sbbl
and
sbb
inc
mov
cmp
and
arpl
jae
push
jbe
push
repnz
xor
js
lods
cmp
sahf
adc
sbb
sti
nop
cmp
jne
cmpsl
rcr
lods
cwtl
leave
sbbb
push
mov
inc
mov
loope
mov
cltd
mov
in
ja
idivl
sbb
popa
call
push
push
fisttps
adc
aam
mov
popf
push
cli
rep
ds
inc
pusha
dec
out
shr
push
out
xchg
in
sub
sub
mov
pop
lcall
fcoml
inc
inc
js
stos
push
lret
pop
sti
dec
cmpsl
jecxz
fistpl
rcll
xchg
aaa
jnp
and
xchg
and
lret
popa
push
fsub
cs
adc
xchg
movsl
push
xchg
mov
lock
mov
jp
in
iret
sub
outsb
fldlg2
inc
loop
inc
in
adc
cmp
mov
aas
jne
mov
sub
les
or
inc
shlb
repnz
jecxz
cs
push
lea
xchg
std
das
movb
ss
sub
mov
inc
add
scas
jno
pop
inc
in
inc
gs
lahf
cs
test
adcl
pop
lret
cmp
icebp
xchg
push
inc
sub
cmp
testb
xchg
dec
rcrl
xor
insb
cmp
lds
shr
sbb
cmc
push
push
inc
fisubrs
icebp
inc
push
mov
or
pop
and
into
lods
add
negb
sbb
xchg
sbb
in
out
js
or
lahf
insb
mov
xor
add
mov
jge
out
jns
outsl
jmp
and
scas
inc
push
out
mov
fcmovbe
sub
mov
mov
pop
xchg
shrl
pop
les
cmpsb
lock
adc
adc
push
lcall
sub
jmp
jbe
mov
test
in
sti
and
or
adc
or
setne
mov
mov
cmp
sub
fidivrs
push
paddw
xor
in
and
rcll
add
jb
clc
pop
pop
fdiv
inc
hlt
fwait
outsb
mov
mov
jo
mov
push
repnz
push
push
lods
mov
mov
mov
stc
jmp
in
add
mov
shr
mov
dec
push
push
mov
add
imul
xchg
inc
jmp
aad
ljmp
mov
fs
bndstx
ret
sub
push
gs
cs
jl
mov
leave
jns
jle
fbstp
xchg
pop
ret
xchg
mov
sub
aad
mull
adc
out
push
cmp
jge
xchg
rolb
pop
mov
cmp
sbb
and
mov
sbb
in
cmp
fidivs
adc
sbb
movl
push
aas
mov
movsl
insl
add
jns
mov
decl
or
cs
test
or
mov
mov
jae
daa
or
add
dec
movsb
inc
adc
or
out
ret
xchg
sub
fists
jmp
dec
sbb
add
out
hlt
loope
ret
adc
add
lods
mov
loop
into
outsb
add
ja
mov
inc
test
inc
and
mov
mov
loope
mov
jp
lea
fwait
stos
in
cld
pop
adcb
subb
jne
fs
xchg
jbe
sahf
pushf
sub
stos
and
lret
pxor
ret
push
sub
mov
inc
xchg
xor
push
cmpsl
mov
in
jl
scas
sahf
mov
popa
mov
mov
jle
movnti
movsl
outsb
add
sub
sbb
dec
in
std
push
xchg
popf
sub
xchg
adc
fldenv
add
push
and
sahf
xchg
add
ja
push
cmp
sbb
sahf
pop
dec
cwtl
das
jle
sbb
and
loop
xchg
xchg
jge
outsb
addps
out
clc
sbb
pop
pop
lcall
cwtl
sub
imul
jl
lcall
mov
and
int
xor
mov
pop
xlat
out
lret
add
mov
les
add
out
mov
push
sub
shll
or
scas
imul
sar
gs
in
movsl
into
xor
movsl
call
push
ljmp
jno
jecxz
and
mov
xchg
fcomip
sahf
mov
mov
orb
mov
cmc
mov
pop
adc
mov
test
adc
lcall
sub
insl
and
jns
pop
mov
mov
fcomi
mov
cmpsb
adc
push
push
sub
mov
scas
jp
mov
in
add
sbbb
add
cmp
cmpsl
cmp
cmp
add
mov
push
sbb
fwait
mov
dec
test
leave
cltd
jno
mov
lret
bound
mov
sbb
and
outsl
sub
ret
pop
int
repnz
inc
outsb
lcall
fldenv
push
cmp
cmp
sbbb
mov
add
or
mov
sub
push
adc
scas
mov
push
outsl
push
jecxz
hlt
sub
inc
iret
mov
outsb
inc
shrb
test
mov
xchg
orb
out
ds
pop
std
loop
add
sti
ljmp
fst
cmp
dec
icebp
mov
or
int
or
mov
cmc
imul
or
or
cld
dec
hlt
nop
gs
mov
mov
adcb
fwait
mov
in
mov
lea
sarb
pop
or
cmpsl
dec
mov
stos
mov
jl
sbb
cltd
orb
sub
lahf
mov
add
popa
fsubr
call
push
call
lds
and
inc
push
inc
mov
xchg
dec
out
add
inc
daa
or
test
pop
cmp
pop
cmp
xorl
loop
mov
cmp
inc
cmpsl
ljmp
mov
cmp
add
adc
stos
or
hlt
mov
xor
and
pop
mov
xchg
cltd
mov
data16
rol
cs
pop
mov
sbb
cmp
mov
fadd
fistpll
mov
lock
ja
in
call
aad
dec
xorb
sub
call
data16
or
xchg
dec
in
pop
ljmp
cld
mov
jge,pn
push
mov
fmulp
lods
or
sbb
leave
pop
mov
adc
loop
lea
xchg
mov
test
add
jge
xor
jg
fldl
hlt
xorl
bound
ret
push
mov
lcall
and
movsl
mov
mov
dec
std
ja
fidivrl
rorl
ffreep
sbb
mov
imul
ret
fs
mov
cmp
out
push
les
pop
mov
test
dec
shlb
ret
pop
icebp
mov
popa
jnp
pop
js
mov
daa
pop
push
jns
popf
and
sub
jnp
outsl
imul
xor
repz
mov
push
dec
cwtd
call
cld
sbb
and
push
std
push
and
jb
lahf
jp
out
dec
movsl
mov
insl
or
shlb
push
ror
inc
jmp
push
fs
mov
fwait
sti
dec
mov
mov
sub
cmc
fldt
inc
popf
xchg
sub
sbb
push
je
ja
notb
aas
outsb
inc
mov
repz
xchg
jp
mov
adc
xor
fs
inc
mov
sub
or
pop
hlt
jb
pop
add
sub
or
dec
pushf
and
adc
or
add
jle
and
lea
insl
scas
outsl
add
rol
jl
jo
or
ret
lahf
shrb
xchg
mov
lods
aas
imul
cmp
cmp
jb
jns
cmp
cmpsb
pop
pop
test
in
mov
push
lods
scas
scas
cmp
loope
xlat
mov
inc
stos
stos
add
push
sarl
call
xchg
xor
sub
xchg
xchg
nop
stc
ss
mov
ljmp
adc
and
in
dec
jecxz
pop
aaa
push
sub
xor
das
pushf
cli
push
outsb
push
sub
add
add
and
hlt
pop
repz
sub
rorl
jno
add
daa
shl
movsl
mov
and
dec
add
cmpsl
cmpsl
cld
call
inc
add
imul
lret
daa
xor
inc
stc
nop
test
dec
and
xchg
xchg
inc
jne
and
bound
iret
push
push
fildll
stos
fmull
cmp
aas
std
mov
jl
or
adc
pop
dec
leave
jge
and
inc
push
in
push
xor
push
adc
xchg
push
mov
mov
lcall
xor
sahf
test
dec
and
inc
not
adc
xchg
insl
pop
or
xor
xor
jle
dec
dec
and
add
xchg
add
filds
cltd
push
divb
addr16
fldpi
pop
dec
jecxz
dec
or
repnz
cmp
dec
cmovs
outsb
cmp
aas
negl
scas
pop
add
pop
or
lret
push
sub
fnstenv
ret
dec
std
test
cmpsl
insl
rclb
movsb
xor
adc
mov
shll
jo
stc
mov
mov
rcrb
pop
push
jp
sti
lods
fsubrl
or
add
pop
je
push
fnstsw
dec
mov
pop
popa
mov
push
dec
pop
repnz
jns
add
cmp
add
and
cltd
fildl
ja
xchg
jb
pop
cld
outsl
dec
adc
ljmp
imul
adc
imul
xor
pop
dec
dec
hlt
je
jmp
adc
mov
inc
cmpsb
lods
fwait
cmpsl
sub
enter
shrb
mov
mov
xchg
push
xchg
mov
stc
stc
les
xchg
in
pop
jmp
fidivrs
mov
cmp
sub
and
and
inc
lods
call
fisubrs
dec
sub
mov
jp
scas
mov
cmpsl
imul
jge
pushf
scas
push
cmp
insl
jnp
test
stos
push
push
push
or
or
in
sahf
add
movsl
idivl
iret
test
adc
movsl
push
inc
push
fnstcw
or
push
int3
cmpsb
mov
add
pop
out
movsl
fwait
mov
adc
pop
sti
inc
lods
clc
mov
scas
cmp
push
jmp
ret
adc
xlat
fildll
jnp
and
lahf
lods
dec
and
scas
out
adc
jno
mov
sub
cmp
adc
repnz
cli
jnp
mov
in
and
negb
daa
lods
rorl
ror
incb
mov
push
jbe
sahf
ret
mov
mov
jp
repz
pop
and
dec
add
jmp
mov
fstpl
sarb
jo
pop
mov
mov
push
inc
das
mov
mov
mov
outsl
adc
xchg
sbb
jb
sub
jp
adc
decb
cmpsl
or
and
push
jbe
fiaddl
push
aam
addr16
xchg
xchg
mov
adc
pop
adc
nop
mov
mulb
inc
arpl
lds
xchg
in
mov
mov
push
out
mov
hlt
push
adc
fsubs
jge
loopne
and
add
lods
xchg
adc
or
lods
fnstenv
or
fildll
push
clc
inc
mov
jl
movsb
lods
sub
out
stc
hlt
push
mov
jmp
sti
push
xor
or
dec
mov
mov
push
adc
aaa
adc
cmp
dec
test
movsl
push
dec
adc
aaa
pop
nop
pop
movsl
mov
mov
dec
mov
popf
data16
xor
ss
cli
ja
mulps
pushf
push
lcall
cwtl
jg
jne
scas
cmpsb
mov
pushl
adc
pop
arpl
lds
dec
sub
lods
xor
jge
into
dec
ljmp
gs
ror
inc
insl
sbb
push
mov
les
enter
fcmovu
and
aam
mov
sub
subl
loope
iret
lret
in
or
cmpsl
add
adcl
arpl
out
sub
push
ljmp
dec
pop
out
rorb
mov
push
xchg
sahf
test
sti
out
push
loope
mov
mov
jecxz
pop
movb
dec
pop
je
jl
add
inc
fstl
mov
xor
mov
into
mov
loope
pop
adc
mov
dec
arpl
scas
ret
and
cmp
std
cltd
and
add
and
insb
popf
jns
frstor
xor
push
push
bound
jno
out
cs
lahf
data16
stos
mov
test
movsl
daa
nop
clc
sar
jecxz
aad
pop
push
loopne
cmp
sbb
enter
mov
std
shlb
roll
or
outsb
cli
fisubrs
shl
jmp
adc
mov
ret
roll
orb
or
outsl
lret
mov
sbb
jne
xlat
add
bound
into
inc
std
mov
cs
pop
rcrb
xchg
dec
insb
and
enter
xchg
stos
imul
lods
inc
push
sbb
mov
imul
xchg
sbb
shrl
aaa
imull
xchg
dec
data16
xchg
jns
mov
cs
sti
insl
sub
pop
mov
and
jg
push
daa
out
loopne
lea
sub
jg
les
and
fidivl
pop
or
inc
push
std
data16
fmuls
mov
sub
dec
hlt
addr16
out
lret
out
stc
mov
mov
jb
shl
push
jno
jl
jg
data16
mov
test
push
add
push
es
imul
and
dec
data16
mov
fmuls
or
test
fstpt
mov
mov
add
mov
hlt
jnp
jge
ljmp
mov
int
addr16
fstps
lahf
mov
loop
push
jl
fisubrs
jns
test
arpl
ja
fsubrs
lea
xchg
add
pop
xor
loop
rclb
fbld
loopne
icebp
add
aam
dec
scas
cmpsb
adc
popa
add
push
mov
adc
repnz
mov
xor
cmp
and
jno
adc
fistl
clc
cmp
sbb
sti
cli
and
out
mov
sbb
outsb
jg
loope
add
incb
test
and
mov
sub
enter
sahf
mov
xchg
mov
cmpsl
pop
inc
and
hlt
mov
flds
xchg
push
popf
faddl
mov
mov
lods
pop
cli
push
add
mov
jle
ds
lcall
movsb
push
mov
adc
adcl
out
add
or
jnp
je
pop
jecxz
push
shrb
cmc
cmp
es
adc
lods
mov
ja
hlt
lea
push
inc
mov
addr16
shrb
mov
and
sbb
mov
rolb
cld
out
enter
mov
roll
jo
push
pop
cmpsb
xchg
aaa
rolb
mov
fstl
inc
test
rcrl
dec
xlat
les
and
mov
ss
and
push
jno
jp
push
and
inc
inc
int3
int
vpmaxub
es
out
outsl
shrb
pop
sub
jne
divl
sub
push
jno
in
test
and
test
pop
mov
in
sub
daa
push
mov
popf
negl
sbb
shrb
xlat
mov
push
jne
aad
jo
ds
fs
jbe
sbb
rorl
clc
xchg
lods
adc
dec
or
sti
mov
out
push
call
sbb
enter
mov
or
mov
cmp
dec
jne
cld
mov
pop
push
loopne
pop
das
add
mov
sahf
bound
xchg
mov
pop
adc
pop
int
sarb
or
lea
mov
js
mov
mov
movsb
sti
popf
xlat
ljmp
mov
sti
loop
int
fisttpll
mov
xchg
in
popa
jb
test
cmpb
idivb
mov
mov
adc
fsts
mov
cli
push
fwait
hlt
imul
jo
inc
ficompl
incb
popa
mov
cs
or
bnd
mov
inc
lods
test
jbe
ljmp
out
add
scas
jbe
js
lods
mov
ds
push
in
mov
xchg
inc
push
in
or
lcall
lds
sub
or
mov
out
jne
sbbl
dec
fnstcw
push
dec
mov
aaa
pop
fcoml
scas
push
shrl
les
xchg
push
stc
faddl
push
adc
jle
int3
je
push
wbinvd
mov
jo
into
bound
and
rorb
mov
mov
mov
sbb
mov
stc
lahf
xchg
dec
aad
mov
ret
sbb
clc
movsl
lea
mov
sarb
clc
jmp
stc
test
xorl
pop
arpl
push
fsubs
je
int
outsb
cmp
xor
scas
ret
mov
pop
notb
loop
rclb
in
pop
add
add
shl
xor
push
sbb
xor
loop
cmp
ror
pop
ljmp
arpl
pop
lret
bound
cmpsl
jno
sub
jmp
mov
jmp
push
in
sub
out
cld
sub
jno
or
mov
lods
sbb
enter
adc
rol
and
test
mov
loope
xor
xlat
pop
cmp
and
cwtl
mov
dec
inc
aas
or
cmp
dec
xchg
faddp
ja
aam
filds
inc
incb
test
pop
in
and
inc
xor
data16
shrl
in
divl
mov
in
sub
mov
dec
add
icebp
das
insl
out
dec
lds
mov
jmp
dec
lahf
inc
jge
les
inc
push
dec
sub
lea
sbbb
pop
out
push
mov
daa
jecxz
mov
cld
scas
inc
or
fabs
cs
hlt
inc
popf
xor
or
aad
xchg
imul
mov
and
and
clc
inc
es
cmp
xor
lcall
or
shlb
inc
cli
xor
in
mov
sbb
dec
inc
out
arpl
xchg
or
push
xchg
sarb
or
in
test
rcrb
movlps
xlat
and
loop
xchg
in
stos
ljmp
xor
pop
jne
shl
push
call
mov
loopne
arpl
dec
adc
rorb
popa
mov
sar
xlat
sub
xor
fidivs
mov
ret
hlt
sbb
loop
out
cld
loope
or
add
aas
mov
lods
add
mov
lret
xor
mov
lret
jp
push
cltd
xchg
adc
stc
cld
clc
jae
xchg
nop
jnp
nop
fcmovbe
sub
mov
out
loop
and
call
mov
lock
xchg
add
adc
inc
adc
push
mov
int
sbb
push
or
jns
inc
std
inc
push
or
push
fstps
popf
negb
xchg
and
das
sub
and
sub
mov
daa
dec
fidivs
push
mov
push
sbb
std
adc
jbe
es
fildl
inc
dec
shr
sub
push
sub
mov
mov
flds
sahf
fwait
nop
test
icebp
in
push
mov
mull
mov
stos
mov
ss
icebp
movsl
xor
gs
sub
mov
insb
les
inc
popf
outsl
loop
pop
ss
mov
fimuls
ds
mov
stos
xchg
scas
jo
cmpl
cmp
and
or
roll
and
fistl
dec
mov
jae
cltd
test
outsb
sub
cmp
jns
push
mov
stos
jbe
push
jns
test
cld
lods
push
mov
mov
stos
subb
mov
push
jae
stos
cmp
mov
imul
sbb
int3
xor
mov
mov
or
les
sbb
dec
xchg
popa
or
pop
dec
mov
jle
out
xchg
jg
jbe
xchg
adc
xchg
sbb
adc
and
aam
or
mov
mov
enter
mov
sub
stc
add
jge
sbb
jl
or
les
aaa
xchg
fmul
test
movsl
xchg
pop
add
sbb
or
cmp
adc
mov
add
shrb
je
out
inc
popa
cmp
repnz
test
dec
inc
gs
addr16
lret
dec
je
xchg
lods
movsl
cld
pop
leave
sub
sub
cli
fcmovnbe
fistps
xor
aas
fisttpll
mov
xchg
or
aad
add
test
aaa
mov
xchg
or
pop
jg
mov
jne
mov
cmpsb
lahf
or
mov
adc
jnp
pop
movb
mov
lods
mov
push
adc
xchg
or
sub
out
sub
nop
cmp
xchg
cmc
xchg
xchg
imul
pushf
imul
xor
push
pop
pop
sub
les
sbb
js
in
out
loope
ret
cmp
ds
out
push
loop
jge
sbb
dec
lret
cli
inc
adc
cmp
mov
mov
scas
decb
jns
xchg
mov
xor
hlt
sahf
shlb
pusha
push
jo
xlat
inc
sub
dec
addr16
mov
mov
inc
les
ss
add
clc
mov
or
mov
loope
sub
mov
test
aam
fidivrs
adc
repnz
cmp
or
xchg
aas
nop
scas
jg
jge
jno
sub
sub
jg
bound
icebp
adc
outsl
push
mov
sub
add
mov
hlt
outsl
aam
inc
movsb
inc
dec
pop
in
xor
adc
mov
out
stos
pop
aad
mov
icebp
lds
lret
das
add
lds
nop
cmp
mov
insl
pop
popf
fs
and
push
lret
popa
pop
mov
pop
jge
popf
dec
repnz
mov
bound
cmp
iret
data16
and
sub
xchg
jno
sbb
xchg
rcl
orb
dec
in
sub
or
and
ret
pop
xchg
test
jl
jmp
stos
adc
xor
test
enter
mov
sub
jno
nop
rcll
xor
iret
sub
and
push
out
je
clc
inc
xchg
adcb
adc
daa
pop
xchg
rol
xor
hlt
and
dec
mov
aad
pop
leave
std
pop
ds
divb
iret
addr16
inc
mov
adcb
ficoml
and
sub
neg
cmpsb
mov
fcmovb
pop
lret
in
inc
aaa
iret
mov
push
shll
rclb
les
lea
ds
or
sarb
sbb
fadd
dec
dec
and
pushf
add
mov
aam
cwtl
das
pop
loop
mov
add
cmpsl
or
pusha
jbe
push
pusha
loop
mov
insb
mov
push
shll
adc
loopne
sbb
jmp
cwtl
jno,pt
movsb
loop
out
jns
adcb
or
jnp
cmp
jnp
jo
mov
stos
or
adc
xor
dec
repz
and
xor
arpl
mov
add
xchg
das
adc
popf
adc
jbe
pusha
xorb
pop
jg
jae
xchg
sub
icebp
fmuls
xorl
dec
jmp
fnstenv
push
jno
cmpsl
push
sti
call
xlat
ret
xlat
in
stos
lea
add
stos
sbb
int
inc
pushf
xor
stos
rolb
stos
mov
gs
test
lock
adc
sub
xor
inc
jp
add
xchg
or
sbb
dec
mov
pop
loop
daa
mov
mov
icebp
xchg
xchg
mov
sbb
and
out
mov
scas
fistpll
fs
add
sub
int
and
shrl
cwtl
fdivl
xor
add
dec
xor
rorb
add
sub
pop
jnp
scas
sbb
inc
mov
push
jle
call
xlat
popa
cwtl
enter
scas
fisubrl
jb
mov
pop
jmp
scas
bound
jmp
push
sbb
shrl
stc
pop
cmc
inc
cld
xor
loop
jmp
je
dec
pop
scas
cmp
popf
and
xchg
fsubr
pop
mov
sarl
push
out
out
or
jle
inc
cmpsl
mov
lea
imul
shrb
pop
mov
xchg
hlt
sbb
and
mov
or
add
lret
daa
mov
test
and
and
mov
mov
idivl
jge
cmp
popa
pop
mov
call
hlt
scas
inc
mov
data16
pop
lcall
add
inc
lods
mov
pop
gs
mov
shl
and
pop
add
adc
leave
in
push
or
gs
pop
jns
xchg
dec
xchg
ljmp
es
or
xchg
sarl
sub
mov
repz
jle
xchg
jbe
jg
xchg
cmp
fnstenv
sbb
and
popf
pop
cmp
sbb
ss
adc
add
xor
xor
dec
xor
cmc
out
mov
pop
mov
nop
pop
sbb
cmp
pushl
fidivrl
mov
jecxz
jg
or
int3
pop
fimull
call
sbb
mov
mov
es
fdivrs
and
or
imul
shrb
and
mov
pop
jg
mov
data16
fwait
lods
push
pop
pop
sti
inc
or
sbb
nop
push
pop
cltd
jp
hlt
imul
adc
cmpsl
mov
jmp
aam
jecxz
dec
xor
mov
mov
rcl
shlb
ljmp
popa
test
cmp
ret
shrb
pop
lea
xchg
scas
andb
fcomps
shrl
leave
rcrl
xchg
movsl
les
jp
cmp
sub
xor
xchg
dec
dec
mov
insl
cs
cmc
fcmovne
hlt
mov
cmp
jg
xchg
rolb
in
mov
lods
jmp
or
inc
push
pop
test
inc
in
popa
stc
xor
inc
insb
leave
dec
pop
pushf
xor
xchg
sbb
sarl
sbb
daa
dec
popf
dec
scas
pop
xor
pop
push
mov
idivl
mov
push
mov
xchg
bound
xchg
das
outsb
push
lods
enter
sbb
jg
mov
call
add
mov
shlb
mov
jo
mov
cmp
mov
mov
jns
sbb
stos
das
xchg
pop
push
add
inc
and
pop
mov
cmp
ficompl
dec
in
insb
xor
test
mov
push
in
mov
std
mov
repnz
rol
mov
push
jge
push
jno
sub
in
mov
xchg
add
ja
push
mov
jnp
push
and
sbb
push
dec
cmp
enter
test
add
lret
insb
xchg
stos
in
mov
sbb
gs
xor
stc
cmp
inc
and
clc
cmpsl
popa
or
imul
mov
inc
leave
test
fmulp
push
push
nop
inc
rorl
dec
mov
es
mov
pop
inc
sbb
dec
dec
insb
and
jp
int
mov
push
mov
cmpsb
add
sub
in
stc
je
cmp
push
mov
data16
lahf
add
das
mov
xchg
pop
scas
call
lcall
sbb
decb
push
std
mov
mov
pushf
mov
lret
sbb
pusha
and
sbb
pusha
cld
es
add
leave
mov
lock
add
jae
lds
arpl
xchg
adc
jp
add
adc
xchg
loope
xor
inc
lock
pop
or
fldenv
cs
les
pushf
mov
movsl
jmp
add
scas
fucomp
cmp
pop
in
fwait
dec
gs
dec
push
test
loopne
mov
mov
pop
adc
xor
into
sbb
jge
popl
push
jno
test
in
inc
or
pop
and
outsl
lods
xor
jb
jns
dec
stos
ljmp
xchg
jne
pop
pop
mov
popa
les
dec
and
aaa
ret
jge
cmp
dec
xchg
iret
mov
and
fldl
lds
mov
call
push
dec
sub
pushl
test
dec
xor
outsl
out
pusha
popf
cli
dec
imul
mov
xchg
in
push
sbb
xchg
stc
mov
add
add
xchg
or
mov
mov
fcoms
push
jmp
aad
pop
sar
cmc
sar
and
repz
sub
rcrb
sub
inc
sar
dec
lods
insb
add
std
pop
jp
popa
loop
test
inc
add
jbe
dec
pop
inc
inc
cltd
cmpsl
rclb
subl
call
mov
aam
fadds
iret
in
or
push
gs
dec
int3
push
lret
pushf
enter
es
lahf
imul
jle
adc
mov
jo
dec
sti
xchg
arpl
mov
test
add
mov
jb
jl
in
sbb
gs
popa
not
mov
dec
outsl
idivb
shll
fstpt
leave
rorb
in
sbb
fnsave
push
sub
inc
xchg
arpl
mov
out
icebp
mov
ja
andb
mov
mov
adc
fisttpl
inc
imul
or
in
es
sbbb
pop
mov
sahf
outsl
mov
mov
sub
xchg
inc
pushf
mov
sub
aas
decb
lcall
out
int
je
mov
mov
dec
add
lds
xor
stos
lock
push
cmp
sub
mov
ret
pusha
and
sarb
data16
or
out
push
fs
lret
mov
sbb
pushf
mov
cs
jbe
sbb
xor
dec
jmp
adc
pop
fmul
sarb
sbb
fsubrs
movsl
push
cmp
mov
or
mov
mov
in
jbe
push
scas
subl
in
sbb
push
cs
sbb
and
imul
insl
mov
mov
lcall
cli
mov
pop
movsb
jg
pop
sbb
cmpsl
enter
jmp
dec
xchg
pand
and
enter
imul
mov
pop
bound
in
push
andl
and
cmc
push
scas
add
cli
loopne
sub
sbb
clc
dec
sbb
jg
and
movsl
push
leave
mov
lahf
mov
into
cld
cltd
decb
or
sub
clc
cmpsl
jo
push
jmp
lret
mov
mov
jmp
cmp
xchg
cmp
ds
sti
or
mov
je
mov
and
roll
imul
adc
push
pop
push
aam
movsb
dec
scas
xor
sub
sbb
sub
shll
xor
push
pop
push
sub
scas
frstor
push
lret
out
call
jle
test
lret
mov
sbb
in
aad
and
imul
in
movsb
xor
popa
icebp
and
loope
push
cs
sbb
push
lret
sub
mov
subl
into
popa
sbb
sbbl
pavgb
mov
mov
movsl
xor
and
push
push
test
sub
xchg
and
fsubs
lock
jle
nop
daa
or
cmpsb
jge
lret
fldl
sbb
xchg
add
dec
cmpsl
ja
sbb
lret
dec
aaa
jp
jecxz
icebp
sbb
sbb
stos
dec
sub
repnz
imulb
jmp
mov
shrl
xor
inc
xchg
dec
jmp
adc
aaa
push
jns
cmp
cmpsb
divl
xchg
arpl
mov
push
pop
mov
and
add
mov
iret
push
xor
mov
and
cmp
jno
movsl
icebp
mov
add
inc
addr16
call
arpl
cmp
stc
xor
mov
call
xor
mov
mov
movb
lods
adc
xor
jg
imul
aas
pop
cmp
xor
pop
sahf
or
push
or
adc
mov
test
push
movsb
lds
jg
xchg
dec
push
ret
sub
loop
xchg
int3
jbe
push
jl
test
leave
jnp
call
lret
shll
inc
fwait
jno,pn
lcall
push
xor
jmp
lret
leave
mov
stos
in
ja
in
fwait
ljmp
jp
insl
fnstcw
bound
pop
mov
jecxz
or
cmp
fwait
mov
jo
icebp
add
and
lods
xsaves
mov
mov
ljmp
jb
dec
lock
mov
ficoml
cmp
jmp
xchg
sub
mov
cmc
jmp
sub
xchg
push
insb
pop
xor
add
in
cvtpi2ps
adc
out
iret
dec
sbb
cmpsb
cmp
stos
rcr
sub
stos
cmp
push
inc
ljmp
icebp
xor
inc
shrb
jae
inc
mov
rcrl
stos
out
mov
dec
or
test
sub
dec
sahf
push
inc
lret
jae
and
sahf
xor
mov
pop
or
int3
scas
mov
pop
cmp
add
std
sbb
decl
pop
nop
or
into
gs
pop
pop
inc
jp
mov
enter
xlat
pop
psrlw
cli
pop
sbbl
sub
ret
notb
sub
jge
scas
mov
mov
pop
and
ss
ljmpw
mov
and
ss
jo
stc
mov
push
movlps
xchg
enter
adc
jbe
mov
insl
mov
xchg
mov
popa
cmpl
inc
imul
push
loope
cmc
pop
mov
push
out
add
fdiv
jns
push
sbb
cld
inc
syscall
mov
and
pop
dec
stos
push
xchg
add
push
jle
movsl
mov
jg
adc
pop
mov
xor
gs
sarl
stos
aas
jne
push
dec
das
sub
jnp
jge
push
movsl
in
popf
ljmp
orl
aas
dec
js
fcoms
xchg
fbstp
mov
addb
add
cmp
in
aad
int3
or
test
stc
and
push
lahf
and
and
stos
add
repnz
mov
xchg
dec
out
xor
seta
sbb
test
ret
jl
loope
push
call
push
orl
and
stos
lcall
leave
fisubs
ret
rcrl
xor
cmp
jp
lret
leave
fldcw
dec
mov
lock
adc
ja
orl
inc
insb
repz
lods
pusha
ss
dec
shrl
xlat
jg
aad
inc
sbb
and
push
push
jl
jb
sub
xor
lea
out
pop
pusha
adc
pop
add
or
mov
js
mov
jecxz
jne
cld
or
mov
mov
lea
xlat
inc
fldenv
dec
add
pusha
fstpt
push
pop
or
push
or
push
mov
sbb
and
out
test
inc
or
cwtl
jle
pusha
mov
xor
ljmp
ss
jo
imul
jbe
mov
pusha
cli
cltd
push
shl
mov
sub
por
mov
or
cmc
pop
and
leave
popa
mov
out
enter
fldenv
cmpsl
cs
std
stos
lahf
dec
imulb
push
pushf
addr16
add
aaa
dec
dec
jecxz
aam
aas
xchg
cmp
out
mov
test
fcmove
cmp
cli
sti
cmc
pop
es
fnsave
or
repnz
stos
xchg
insb
sbb
xlat
frstor
sbb
aas
pop
lahf
idivl
mov
imul
pop
cs
fwait
repnz
xchg
dec
pop
movsl
xor
dec
xor
in
mov
xchg
js
rorb
inc
ret
ds
clc
or
inc
jecxz
ret
pop
ljmp
lods
out
cli
xchg
mov
mov
fsubrs
pop
repnz
cmpl
iret
push
in
popa
insl
rorb
dec
fdivl
add
inc
push
mov
cwtl
gs
cmpsl
mov
std
and
xchg
adc
shlb
push
adc
push
loopne
repnz
out
adc
cli
ds
xor
movb
dec
dec
lods
fs
int
leave
les
repz
jne
adc
pop
mov
lret
aad
push
orb
in
stos
adc
push
mov
repz
ja
mov
setle
adc
mov
sbb
cmc
in
pusha
adc
rorb
mov
loop
js
movsl
fnstsw
repz
or
xchg
fmull
ds
imul
inc
out
scas
repnz
dec
xchg
daa
outsl
outsl
outsb
sub
orb
sub
jns
and
or
mov
test
or
dec
movsb
gs
pushw
insl
out
inc
aaa
lods
mov
leave
push
int
jl
scas
into
adc
and
push
adc
xor
pop
outsb
add
sahf
insl
mov
les
cltd
std
dec
mov
push
mov
adc
jb
add
lods
pmullw
lods
sub
test
mov
push
jo
fstpl
jbe
aam
cmp
arpl
push
xor
push
pop
movsb
xor
pop
cmpsb
and
movsb
mov
rorl
lock
pop
nop
pop
loopne
push
cmc
mov
pop
jb
cmpsl
push
add
add
testb
cmpsl
adc
mov
mov
lods
adcl
je
data16
lods
mov
andl
lea
pop
adc
cmpb
ficoml
stc
movsb
cmp
dec
out
push
lods
clc
xchg
out
repnz
leave
xor
sti
push
pop
mov
aas
jnp
pop
inc
mov
pop
push
sub
leave
push
xchg
jecxz
inc
lcall
inc
pop
dec
mov
push
push
jl
xor
inc
rclb
xchg
xchg
rcll
adc
test
int3
xor
repnz
std
pop
push
push
test
mov
xchg
insb
sub
mov
cltd
cmp
push
pop
sbb
mov
or
mov
testl
rclb
or
or
shlb
outsl
and
pusha
jo
mov
inc
xchg
mov
scas
inc
std
sub
cld
aad
inc
pusha
or
fiadds
data16
cmpl
aad
in
cwtl
push
addr16
mov
hlt
imul
imul
sbb
add
ja
rolb
fcomip
mov
mov
sbb
push
xchg
sub
dec
mov
dec
movsb
cmp
bound
xor
stos
sub
inc
je
out
jae
aas
outsl
jge
mov
nop
out
push
arpl
arpl
outsl
call
test
sarl
xor
xlat
inc
in
push
push
xor
movsb
outsb
jp
notl
iret
out
mov
lock
cmp
sbb
jle
push
push
fimuls
sbb
lahf
mov
mov
out
gs
pushf
sar
pop
add
hlt
xchg
fadds
inc
jb
popf
push
or
xchg
data16
outsb
jmp
jnp
jb
std
pushf
test
cs
add
popa
and
ret
dec
mov
push
mov
sub
cmpb
outsb
stc
mov
sbb
js
mov
ficoms
out
add
outsb
test
jmp
js
pop
dec
jecxz
fbstp
push
and
subl
jp
cmpsl
mov
fnstenv
icebp
and
push
add
push
fildl
and
jmp
movsb
jecxz
stc
push
push
lods
add
in
in
fdivl
shrb
mov
popa
lods
test
adc
add
stos
icebp
pusha
add
sbb
dec
ljmp
das
ds
movhps
outsb
test
in
mov
loop
ljmp
out
test
xor
or
in
clc
cmp
jle
mov
leave
into
xchg
mov
xchg
bound
loope
pop
lret
test
aaa
or
xchg
pop
pushf
arpl
xchg
movsb
add
adc
push
mov
mov
daa
and
add
cmp
sub
cmp
fwait
hlt
pushf
cmpsl
fnstenv
adc
cmp
flds
mov
sub
jge
nop
sbb
inc
ret
nop
outsb
std
imul
adc
shl
icebp
sbb
mov
aam
mov
mov
mov
mov
sbb
addl
xchg
fisubrs
dec
and
dec
aas
xchg
mov
and
inc
push
outsb
mov
inc
ret
imul
push
push
pop
xor
xchg
mov
flds
cs
fstpl
mov
sahf
int
pop
out
repnz
iret
lds
in
test
dec
dec
fnstsw
mov
ffree
xlat
bound
ret
fisttps
and
or
inc
popf
fcoms
cwtl
lods
js
loopne
subl
es
mov
jns
es
sbb
sbb
enter
sbbl
fdiv
ss
cli
ret
pusha
roll
iret
inc
lods
jb
test
push
sub
mov
dec
out
xor
aad
cmp
push
xor
insl
ret
pop
testb
push
rclb
movsl
outsl
sub
stc
or
notb
scas
mov
sbb
push
rolb
dec
push
xchg
fbstp
pop
leave
adc
adc
call
or
mov
fdivrl
clc
adc
fs
sbb
cmp
je
mov
cmp
mov
lea
fmull
lea
and
lea
ret
leave
cmp
jbe
cmp
outsb
nop
in
pusha
push
pop
cltd
push
lods
push
decl
xchg
cli
adc
add
rcrb
aad
xchg
movsl
and
sbbb
cmp
sub
out
jge
pushl
cmp
addr16
ljmp
fwait
jb
cmpsb
js
scas
sahf
stc
nop
rorb
cmpsl
out
pop
jbe
mov
jle
mov
pop
loop
imul
adc
jge
std
adcb
cmp
cmpsb
mov
jno
stos
push
sbb
dec
jno
inc
daa
dec
cmp
clc
aas
mov
mov
sbb
roll
or
sbb
leavew
push
xchg
je
stos
mov
sbb
xor
push
jno
iret
add
aam
dec
mov
aaa
push
sub
pop
add
add
pop
and
dec
cmp
and
push
xor
ss
pop
jmp
mov
out
jo
bound
or
jle
mov
mov
lea
sub
sbb
dec
pop
shl
pop
sarb
insb
sub
xchg
imul
dec
mov
adc
mov
ds
jne
repz
mov
in
jle
lods
outsl
jo
mov
adc
or
sub
cltd
add
mov
pop
xor
cmp
push
ljmp
jb
xor
daa
nop
stos
frstor
cwtl
adcb
jae
add
xchg
push
out
push
sbb
out
jo
insl
stc
push
push
cltd
xor
add
dec
xor
int
push
aad
mov
mov
out
lahf
sbb
add
jecxz
adc
inc
jmp
lods
add
leave
pop
adc
xchg
outsb
movsl
xor
dec
jmp
shll
adc
cmp
dec
test
inc
negb
int3
pushl
roll
daa
fwait
push
and
xor
in
in
push
adc
iret
add
gs
push
sub
cmp
jg
mov
pop
rorl
lock
mov
adc
sbb
or
cmp
in
push
loopne
cltd
cltd
cmp
xchg
fdivrs
add
mov
cmp
push
mov
adcl
xchg
lods
dec
loop
and
push
mov
mov
mov
or
sub
cmp
inc
lahf
popa
add
aad
outsl
inc
inc
ret
cmpsl
notl
lret
hlt
jp
es
pop
out
and
scas
mov
arpl
sbbl
inc
inc
repnz
add
enter
in
mov
cld
inc
cmpsb
mov
mov
xor
call
cld
inc
mov
sbb
inc
adc
leave
loopne
inc
push
daa
lea
and
jg
test
push
mov
popf
dec
mov
xor
hlt
ss
mov
mov
mov
int
iret
incb
in
cmc
sbb
xchg
sbb
add
jae
scas
out
adc
stos
out
negl
cwtl
jo
or
add
flds
xchg
cmpsl
push
push
iret
jmp
push
sub
out
pop
outsb
cmc
test
test
push
nop
add
xchg
xchg
dec
dec
test
call
fstp
jno
push
movsl
int3
dec
or
push
mov
mov
adc
mov
in
in
es
sbbb
aam
jns
or
cmp
ret
inc
jo
shrl
push
inc
push
repnz
pop
clc
cwtl
push
lahf
imulb
jo
popf
sahf
dec
fiaddl
push
sbb
lods
mov
movsb
inc
aas
xchg
cmpsb
sbb
sub
mov
js
repz
cs
sbb
ret
sarl
adc
xor
mov
imul
xor
stc
ss
jae
cs
in
stos
or
fdivl
push
lret
in
test
adc
mov
add
int3
jecxz
and
cmovs
stc
popa
xlat
push
insb
or
add
or
sub
add
in
rolb
mov
mov
call
movsl
sub
sub
shll
pop
sub
or
push
mov
loop
dec
gs
sbb
sub
mov
sbb
push
dec
or
clc
movsb
sbb
sub
arpl
lret
ds
inc
lods
addr16
addr16
or
cmpsl
imul
lock
aad
pop
sbb
jae
add
hlt
sbb
add
fwait
or
dec
imul
out
sahf
test
and
mov
push
sub
das
adc
sbb
dec
ret
lods
into
hlt
inc
mov
mov
addr16
lret
mov
xchg
mov
mov
sti
jne
test
cmp
add
jbe
adc
aas
mov
outsl
push
cld
dec
sti
adc
push
add
xchg
push
iret
sbb
mov
add
adc
jl
xchg
dec
add
lcall
push
jno
add
push
inc
inc
scas
inc
jns
leave
test
push
into
gs
push
fsubs
in
clc
pop
mov
inc
cmp
cli
clc
adc
enter
inc
pop
lahf
jne
jo
add
push
scas
enter
push
sbb
mov
repz
jb
cmp
adc
jae
jb
xlat
inc
aas
add
adc
pushl
push
push
mov
xchg
loopne
out
cmc
call
inc
mov
lea
lods
ror
jle
pop
out
cmp
adc
addr16
xorl
in
and
call
fstpt
and
jno
cwtl
or
add
test
stos
lock
pop
or
in
bound
lret
push
imul
fistpll
push
lds
sub
pop
in
mov
shl
push
add
je
and
decb
dec
pop
imul
dec
lahf
scas
xlat
xchg
sbb
mov
jp
push
negb
sbb
ret
xchg
addr16
arpl
fists
cmpsl
out
pushf
iret
repz
bnd
cli
adc
fstps
dec
in
pop
jbe
outsl
xor
adc
addr16
shrb
in
popa
dec
iret
mov
clc
gs
and
enter
rcl
jmp
jge
mov
jbe
jecxz
insb
scas
adc
adc
adc
add
les
mov
jns
push
push
add
xchg
enter
int3
pop
push
cmc
and
adc
adcb
mov
cmpsb
xchg
push
xchg
sub
dec
sarl
mov
arpl
into
pushf
aam
mov
test
push
loopne
test
pop
or
fsubs
dec
fcmove
mov
fdivrs
sub
jbe
ds
mov
or
inc
rep
adc
add
mov
dec
push
pop
int
push
into
mulb
and
in
stos
pop
push
arpl
mov
and
xchg
aam
scas
mov
imul
pop
cmpsb
ret
das
mov
push
fstl
xchg
add
movsl
mov
addl
or
ja
mov
push
push
xor
push
mov
xchg
shll
enter
mov
add
dec
fdiv
cmpsb
in
sbb
loopne
adc
push
adc
jmp
daa
xchg
and
mov
shl
in
cmp
lret
mov
call
lret
inc
loope
std
dec
mov
ret
imul
cmp
int3
fdivrp
lea
xor
cmp
push
xor
ret
sbb
cmp
mov
push
shrb
arpl
movsb
ffree
clc
mov
test
std
stos
jg
dec
adc
in
jno
pop
ret
sarl
orl
mov
scas
jle
clc
jb,pn
jl
int3
outsl
xor
cmova
jmp
filds
test
pop
xor
cmp
dec
mov
or
inc
push
lcall
pop
add
enter
pop
cmp
sarb
jb
jbe
xor
adc
imul
or
add
sub
mov
cld
jnp
sub
ret
jbe
jb
or
in
out
test
add
and
xlat
repz
add
int3
ret
lahf
xor
mov
leave
mull
pop
push
jns
add
pop
lods
mov
mull
sbb
jp
mov
sahf
sub
mov
adc
stos
xor
or
jge
fcmovne
repnz
push
adc
pop
ret
cmpsb
xor
in
push
js
jmp
or
in
addr16
dec
fsubrs
or
pop
adc
testl
xor
dec
loop
aad
mov
and
xchg
daa
mov
sbb
jnp
cs
push
or
sbb
pop
stos
add
jge
fwait
das
pop
jo
pop
dec
out
jae
inc
sbb
sahf
xchg
faddp
and
mov
fmulp
pop
add
stc
adc
mov
pop
adc
jl
out
gs
js
adc
lods
btr
lahf
jle
cs
fbld
xchg
and
sbb
je
imul
xchg
lds
and
fstl
shr
cmp
data16
inc
push
xor
stos
pop
inc
stos
lret
dec
fists
ds
adcl
or
leave
icebp
stos
jae
fidivl
sarb
or
adcb
or
dec
mov
hlt
shll
push
pop
jl
xor
dec
loopne
test
rcrl
mov
icebp
mov
pop
mov
out
dec
mov
cmp
or
dec
cmp
into
jno
dec
fisubl
xorps
filds
stos
fwait
pop
out
aam
push
add
mov
int
ds
imul
adc
adc
jle
test
leave
jo
jo
repnz
in
lds
cmpsl
loopne
xor
test
fadd
push
push
std
cltd
fisubs
jno
xor
pop
sbbl
test
dec
add
outsl
jecxz
aas
cmp
in
pop
fimull
mov
or
cmp
mov
jl
pop
loope
iret
inc
jecxz
or
adc
xchg
stos
xor
lods
dec
push
cmp
push
pop
and
iret
push
and
push
out
ss
cltd
inc
fdivp
int
and
adc
push
js
nop
ret
rcl
xchg
movsl
pop
stc
mov
cmp
pop
jae
dec
imul
sub
pop
pop
in
aas
sarb
insl
cmp
stos
repnz
in
fcoml
jle
mov
mov
and
fdivl
push
add
mov
js
mov
jbe
ficomps
hlt
imul
repz
push
dec
aam
ds
xchg
dec
popf
fwait
insl
in
lock
dec
in
call
sbb
popa
fdivl
xlat
jnp
cmc
mov
pop
mov
dec
push
dec
scas
out
in
lea
xchg
sbb
enter
je
xchg
jp
lea
rolb
call
or
push
mov
mov
fsubl
mov
mov
dec
or
pop
inc
stos
daa
ljmp
je
mov
mov
xchg
ljmp
out
shr
enter
in
es
dec
sbb
out
mov
add
mov
add
cltd
test
fdiv
std
xchg
and
sbb
jbe
jecxz
sub
dec
loopne
bound
adc
push
imull
jle
mov
or
in
push
aas
mov
xchg
in
ds
das
bnd
or
mov
addb
or
pop
ficomps
fnsave
inc
ja
mov
push
popf
stos
lds
jle
sub
jns
mov
mov
mov
push
shll
into
insb
xor
jno
pop
cwtl
push
mov
js
loop
dec
adc
shlb
aad
int
adc
lock
ret
or
iret
pop
iret
enter
push
stos
inc
test
in
jns
fisttpl
or
test
sbb
decb
and
push
pop
xchg
inc
fcmovb
or
sbbb
int
xchg
sti
loope
push
sub
add
cltd
inc
xchg
test
dec
in
lock
imul
push
jnp
inc
pop
sbbb
mov
mov
aas
ja
leave
insb
cmp
scas
push
mov
out
push
xchg
push
xchg
outsb
hlt
ljmp
rorl
lret
rorl
push
repnz
in
push
pop
mov
push
push
or
sbb
xor
pop
in
adc
adc
mov
subb
gs
mov
mov
cmpl
dec
shrb
out
popf
mov
frstor
enter
xchg
insb
pushf
dec
lcall
cwtl
das
or
sub
cmc
in
cmp
push
rcl
and
leave
adc
mov
mov
shll
jne
mov
fisubrs
pop
push
mov
in
inc
sahf
addb
lret
inc
cld
fsts
cld
inc
adc
push
pop
or
stc
or
or
dec
and
lea
mov
add
popf
cmp
add
xchg
pop
mov
mov
scas
fs
popf
lret
fdivrs
inc
xor
fisubl
mov
lcall
sub
into
and
aam
jl
mov
repnz
cmp
pushf
adc
andb
dec
cs
mov
aad
lahf
shl
negl
dec
or
mov
test
and
pushf
movsb
aam
jno
shll
dec
addl
push
adc
scas
xchg
test
xlat
aad
or
xchg
int3
test
xor
lods
mov
ja
or
clc
mov
lcall
loope
rclb
dec
cmp
adc
bound
ss
pop
push
and
xchg
adc
aaa
sbb
mov
jo
pop
cmp
gs
dec
push
mov
jo
jecxz
out
lret
std
jl
or
mov
fistps
push
jmp
mov
in
scas
insl
cmp
mov
test
lahf
into
or
xchg
sarb
push
ljmp
dec
jecxz
push
lret
lret
cmp
push
stos
push
cltd
fcomps
int3
xor
loope,pn
mov
pop
addr16
adc
sbb
mov
mov
stc
hlt
scas
mov
loopne
jae
or
xchg
ss
add
int3
pop
ret
mov
pusha
and
pop
mov
jp
mov
inc
iret
movl
cmp
ret
lret
je
jb
add
les
jl
out
movsl
inc
arpl
out
sbb
pop
cmp
int
in
and
dec
mov
xchg
bound
add
arpl
iret
orb
dec
mov
fwait
lea
ds
scas
into
gs
mov
jae
sub
dec
outsb
aam
pop
fcomp
mov
xchg
jecxz
setle
cmp
pushf
scas
fistps
and
test
loope
dec
pop
cmp
mov
in
divl
or
mov
loope
push
mov
jno
mov
shrl
lcall
hlt
imul
adc
dec
push
pop
add
push
gs
std
sti
inc
xchg
mov
adc
loop
hlt
pop
pop
adc
scas
mov
cwtl
addl
push
aaa
push
cmc
mov
popl
jge
sbbl
scas
pop
out
movsb
adc
lcall
xor
punpcklbw
pop
mov
rorb
jmp
sbbb
adc
dec
xor
out
or
fsts
sarb
in
mov
scas
insl
icebp
loope
lods
xor
cmova
jo
out
inc
inc
push
test
mov
adc
in
aam
pusha
dec
ds
jecxz
xor
inc
stos
sub
enter
test
lods
jae
test
mov
add
push
popf
push
ljmp
xor
and
loopne
sarl
mov
mov
fidivrs
lods
cmpsb
aas
lods
inc
jno
xchg
cmp
xchg
cli
shrb
mov
xor
int3
xchg
xor
paddsb
jl
pop
scas
and
mov
pusha
pop
incb
gs
push
xchg
test
int
mov
movsb
movsl
add
pop
js,pt
pop
mov
lret
arpl
andb
loopne
into
cwtl
std
adc
pushf
mov
inc
dec
arpl
cli
adc
xor
lds
gs
pusha
jp
add
jae
imul
mov
jbe
add
mov
sub
or
inc
clc
sahf
inc
sub
gs
mov
pop
sbb
mov
lcall
push
fidivrl
dec
mov
lods
jbe
pop
js
into
sbb
cmp
sahf
mov
jle
pop
cmp
cltd
xor
mov
sti
icebp
adc
das
insl
jge
scas
jae
xor
cmp
cltd
stos
push
push
out
int3
mov
rcll
mov
out
mov
int
sbb
aad
mov
adc
sub
sbb
inc
in
dec
cmc
lcall
sbb
mov
leave
mov
iret
stos
sub
mov
stc
xchg
or
js
sahf
adc
cmpl
push
mov
cmc
dec
xchg
test
xor
movsb
jmp
out
das
push
sub
iret
lea
dec
out
mov
pop
dec
in
mov
lods
in
outsb
test
hlt
cltd
inc
fidivrl
add
je
pop
lods
aam
call
inc
sahf
cmpl
xchg
xchg
aaa
xchg
pusha
test
shrb
add
xor
inc
sbb
lret
jge
or
push
jg
loope
nop
and
mov
jl
std
imul
popf
je
out
dec
popa
cli
sti
cmpsl
sub
aam
and
cmp
push
inc
clc
adc
arpl
push
mov
push
mov
fistl
xlat
aaa
into
sbb
push
fcomps
inc
pop
outsb
mov
mov
sarb
mov
in
out
jmp
outsl
xor
jle
mov
jle
cmp
xchg
lods
ja
daa
cmp
hlt
inc
outsl
sarb
push
sar
je
stc
jns
les
aad
mov
aas
bound
outsl
sbbb
arpl
push
push
imul
test
ds
fs
pop
xchg
andl
je
fmuls
fisttpll
xchg
sbb
jp
scas
cmp
or
dec
mov
jne
loopne
mov
outsl
mov
xor
sbb
std
es
xchg
ljmp
mov
lea
xchg
cmpb
mov
sbb
mov
cmp
rcrb
adc
inc
arpl
jae
jae
out
insb
popaw
xchg
adc
mov
fbstp
pop
mov
stos
or
xchg
cmp
or
inc
iret
mov
insb
mov
push
fiaddl
dec
imul
pusha
outsl
jg
mov
mov
sbb
scas
in
movsb
sub
xchg
lods
out
and
push
dec
dec
movsb
cmpsl
push
mov
test
xor
ss
and
mov
sub
mov
pop
mov
xchg
dec
fs
clc
jno
iret
insl
rclb
mov
jno
xchg
rclb
mov
add
imul
lcall
pmullw
lods
mov
jnp
mov
jp
sbb
pop
cmpsl
jl
sbb
imul
insl
cmc
in
test
or
in
cwtl
push
lret
mov
stos
ret
lahf
fs
jge
addl
fbstp
aas
add
cmpsl
mov
dec
das
mov
dec
mov
icebp
xor
xchg
lods
or
and
jge
xchg
orl
ret
outsb
pop
mov
mov
pop
mov
push
mov
jp
adc
push
aad
ss
in
divb
xor
movsl
movsb
dec
cmp
mov
mov
jnp
inc
adc
and
mov
cltd
sub
out
xchg
mov
les
repz
leave
bound
mov
and
leave
enter
cmpsl
pop
mov
mov
sub
das
mov
pop
mov
mov
adc
mov
xor
cmpl
xchg
stc
mov
imul
cmpsl
out
sahf
cmp
push
sub
pop
push
repnz
inc
adc
out
adc
sub
lret
in
xchg
std
leave
dec
out
arpl
cwtl
test
movsl
mov
push
mov
sbb
push
inc
pop
push
rcr
aaa
imul
repnz
adc
mov
out
inc
sarl
push
dec
cltd
dec
cmc
jb
and
xchg
cmp
mov
inc
sub
js
aaa
fldenv
dec
mov
xor
div
mov
adc
add
fidivs
sub
ja
and
sahf
mov
inc
and
mov
and
dec
lret
jl
dec
ss
cmp
push
xchg
pop
mov
testl
mov
repnz
xchg
cltd
std
sahf
aas
mov
or
adc
out
push
scas
das
test
pop
pop
verr
nop
bound
into
leave
data16
jmp
out
pop
lcall
cmp
std
cltd
ds
add
mov
movsl
push
ds
loop
out
mov
sbb
add
lea
inc
jne
out
jp
sub
lods
add
xor
jp
fsubr
jmp
cli
mov
popa
xor
pop
ss
cmp
repz
sahf
loopne
mov
push
add
mov
ljmp
mov
pushf
push
mov
scas
jecxz
fists
nopl
inc
stos
loop
in
dec
fadds
nop
sub
mov
out
dec
les
push
or
push
cmp
jnp
pop
pop
in
jns
jg
out
jle
ret
mov
mov
inc
sub
mov
rcrl
xor
xchg
add
loop
pop
or
call
gs
lret
mov
xchg
sbb
sub
icebp
mov
js
inc
and
in
out
sahf
out
push
fnstsw
sub
int
xor
call
xchg
nop
sub
movsl
add
dec
pop
cmp
jb
fwait
jecxz
dec
data16
and
jnp
inc
fcomi
pushf
sub
xchg
ret
aad
test
lea
xor
jmp
cwtl
pop
adc
push
or
xchg
sti
sbb
aad
sar
dec
mov
jge
jno
fldl
dec
jecxz
add
xor
dec
mov
dec
fildll
ret
fldt
adcl
mov
mov
notb
mov
xchg
pop
lods
xlat
pop
xchg
int3
data16
repnz
in
test
sbb
adc
test
arpl
cmpsb
sbb
aam
mov
mov
cmpsl
sbb
les
mov
int
and
adc
xchg
pop
ja
cld
mov
jmp
jge
insl
sub
cmpsb
mov
ret
xor
notb
pop
xlat
and
icebp
dec
pop
adc
das
jns
dec
stos
push
cwtl
fbstp
push
stos
mov
decl
movsl
sub
sub
lea
xchg
xchg
rol
sahf
cmp
cmp
adc
call
pop
insb
jno
jg
loop
sbb
or
mov
inc
lds
fwait
pop
and
das
stc
pop
icebp
aam
into
xor
loope
push
adc
mov
mov
mov
jle
mov
inc
ret
jns
stc
in
daa
in
mov
inc
jb
ret
mov
ret
sub
ja
pop
inc
dec
rol
sbbl
jp,pn
adc
mov
adc
jbe
jmp
rcl
sub
pop
in
xor
jo
xchg
adc
int3
andl
dec
or
mov
add
aas
aam
add
cmp
aam
in
test
push
xlat
push
mov
cmpsl
imul
lds
inc
mov
insl
sbb
into
mov
popa
sbb
lds
adc
cmp
iret
data16
out
mov
mov
ja
dec
cwtl
pop
dec
shrl
jp
push
int3
arpl
cmc
ljmp
lret
cmp
mov
adc
push
cmp
jg
mov
push
popf
cmp
adc
sbb
xor
out
push
lahf
pop
add
mov
push
bound
xchg
aaa
mov
cli
sub
popa
cmp
pop
lods
inc
or
jecxz
adc
lret
push
dec
mov
test
aad
jnp
mov
adc
adc
mov
mov
jbe
iret
cmpsl
jp
push
add
sbb
mov
lcall
cld
pop
add
rol
mov
and
ss
xchg
stos
xlat
outsb
sbb
adc
daa
adc
pushf
add
sbb
push
mov
ds
cmc
jg
sarb
orl
daa
push
test
mov
lock
adc
mov
inc
popa
sbb
pop
shr
cmp
imull
out
and
insb
popa
jle
xchg
dec
fs
pop
mov
sbb
inc
dec
lods
cmp
leave
jecxz
rcl
cltd
test
mov
in
mov
fnsave
push
out
cmp
mov
fdivl
lods
daa
stc
push
cwtl
cld
inc
add
mov
lods
cltd
push
ljmp
daa
out
jno
shlb
aas
xchg
push
es
mov
sub
imul
adc
or
std
xchg
dec
ffreep
mov
xor
data16
pop
push
inc
roll
fwait
loop
push
fidivs
cmpsb
loop
or
jl
lret
loopne
subl
mov
xchg
cltd
mov
push
push
aas
adc
arpl
fsubrl
fcoms
xor
imul
pusha
dec
sbb
inc
pusha
jo
fstpt
jo
pop
jb
cmp
and
cmpsb
rol
in
ret
js
loopne
scas
mov
pop
cmpsb
jge
or
outsl
cs
adc
mov
mov
xchg
insl
mov
gs
inc
xchg
adc
divl
js
push
loop
jle
or
sarb
or
cmpsl
mov
loope
arpl
js
sub
fcomps
test
cmp
and
cmp
sub
pusha
int
out
test
inc
adc
or
ds
jns
fsubrp
add
cs
jne
pop
enter
daa
xchg
pop
push
push
mov
push
rcr
lret
das
xor
clc
in
and
sub
xor
xchg
test
loop,pn
pop
push
testl
loope
xchg
add
mov
ja
inc
scas
lods
xchg
out
sbb
dec
scas
sub
movsl
in
cmp
js
xchg
sub
scas
js
sbb
sti
sbb
adc
aam
std
popa
jno
xchg
les
inc
inc
aad
mov
mov
sub
loopne
ret
outsb
adc
mov
xchg
mov
sahf
mov
jle
mov
rcll
js
lods
mov
pop
and
pop
into
jo
add
mov
cmp
jge
jne
mov
lods
inc
ror
jne
mov
mov
ljmp
popf
shll
fcom
orl
adc
sti
mov
pop
xchg
lods
inc
ds
fstl
xor
gs
sbb
or
xor
inc
pand
cmp
pop
or
int
jp
mov
out
test
xchg
jbe
outsb
mov
or
nop
pushf
addr16
push
repz
lret
outsb
rcrl
je
and
push
outsb
inc
mov
adc
loopne
push
daa
insl
add
fwait
sub
dec
mov
dec
fistpll
jo
ja
xchg
xchg
cmp
ret
mov
lods
aad
add
mov
jbe
mov
mov
mov
pop
lcall
rclb
jnp
jnp
ss
test
jge
inc
in
jmp
sbb
call
pop
cld
lcall
push
and
out
xor
jmp
push
mov
fwait
dec
jecxz
movsl
xchg
in
pusha
dec
xor
insb
mov
outsl
loop
outsl
testl
add
dec
xchg
add
mov
lcall
dec
jmp
and
and
sub
mov
andb
stc
xchg
pop
aas
lahf
shl
adc
xor
daa
dec
lods
adc
ret
test
hlt
movzwl
mov
pusha
adc
mov
add
gs
mov
sbbl
xchg
sub
negb
push
inc
mov
inc
das
cmp
mov
sbb
jbe
push
sub
xchg
dec
mov
jl
insl
cltd
sub
and
xor
cmp
outsb
add
je
pop
cmpb
imul
dec
inc
cwtl
pop
dec
mov
scas
and
xchg
jle
or
mov
xchg
xlat
inc
icebp
and
xor
jle
test
fwait
sti
dec
js
fcomps
xchg
pop
mov
cmp
pusha
sahf
jb
jl
sub
mov
repz
mov
lods
arpl
mov
shll
popa
lods
movaps
stos
cmpsb
xchg
xchg
repnz
xchg
fdivrl
and
jno
imul
mov
pop
pop
lds
clc
cs
push
repnz
sbb
push
insl
popf
and
test
out
mov
popa
xchg
scas
xchg
mov
test
fidivrl
enter
ja
pop
xlat
aas
push
hlt
add
add
aad
jg
xlat
pop
stc
dec
sub
jge
aam
push
nop
movsb
jge
jmp
repnz
mov
adc
dec
bound
xor
insb
into
fs
mov
sti
dec
push
or
sub
dec
scas
test
jno
xchg
aad
adc
push
mov
lods
loop
enter
cmp
push
aad
pushl
lahf
mov
sarb
scas
daa
cmpsl
mov
cwtl
test
roll
das
pop
sbb
pop
repnz
out
and
out
mov
imul
in
das
cmc
cwtl
sub
xchg
mov
fdivrl
pop
sbb
mov
jo
jp
popa
fs
push
add
mov
mov
cmp
xlat
shrb
test
and
cmpsb
inc
push
inc
ljmp
fsub
mov
jecxz
mov
in
add
xchg
push
mov
popa
lahf
outsl
cmp
and
scas
jno
cmc
xchg
sub
add
xor
dec
mov
xchg
cmp
je
jno
sbb
cwtl
mov
data16
insb
repz
jmp
mov
lds
add
dec
sahf
jecxz
nop
data16
lea
xchg
mov
dec
mov
jmp
pminub
int3
js
out
mov
add
bound
leave
movsb
jmp
jp
add
adc
pop
mov
jbe
shlb
jp
inc
jl
stc
and
sbb
outsl
push
js
inc
outsb
inc
sbbb
orb
pop
test
mov
cmp
jnp
sahf
fs
outsb
xor
mov
mov
ficoms
iret
data16
leave
push
push
add
sbb
cmp
mov
std
push
mov
insb
xlat
pop
lds
push
divb
or
mov
cltd
xchg
sub
in
imul
mov
icebp
mov
insl
out
ret
imull
in
notl
ja
fidivrl
ror
test
xchg
mov
gs
adc
cmp
mov
inc
stc
push
incb
jae
dec
sub
xor
adc
push
nop
loop
mov
roll
push
addr16
push
mov
mov
insb
jle
sahf
sti
dec
cmc
cwtl
lods
jno
push
mov
negb
xchg
mov
out
jmp
adc
add
insb
mov
in
pop
and
ret
std
mov
inc
inc
data16
jp
xchg
in
cmp
addb
dec
das
jl
xchg
mov
bound
sbb
das
test
adc
lods
push
sub
into
xor
aas
or
pop
popf
adc
push
popf
repz
add
sub
cmp
enter
pop
scas
movsl
push
aas
pusha
jb
mov
icebp
aas
ret
pushf
popa
xor
sarl
xchg
mov
icebp
xchg
lcall
pop
daa
xchg
outsb
sub
out
add
out
icebp
mov
or
je
mov
std
nop
lahf
dec
add
jle
dec
cmp
gs
dec
loope
dec
rclb
fildll
adc
jmp
cli
mov
inc
or
mov
xchg
sub
cld
mov
inc
bound
les
lahf
pop
adc
movsl
decl
pop
dec
mov
outsl
sub
ret
ret
rcl
fistpll
add
jp
push
mov
das
pop
sbb
dec
cmpsb
cmp
iret
or
test
les
xorl
sbb
std
fisubl
mov
mov
xchg
or
inc
lock
loopne
sbb
and
dec
mov
insb
sub
out
lcall
adc
dec
add
xor
ds
sbb
pop
inc
jns
adc
sub
lcall
xchg
fimull
sbb
mov
push
aam
push
sahf
leave
dec
test
cmp
dec
out
mov
mov
cmp
dec
xor
xor
pop
ja
xchg
aaa
rol
mov
adc
in
and
dec
loop
sub
mov
mov
pop
imul
loope
rol
xchg
cmp
mov
jecxz
shrb
das
inc
negl
outsb
inc
rorl
adc
xor
mov
ljmp
xchg
ds
and
adc
sbb
shlb
push
repz
pop
js
mov
push
addr16
arpl
push
mov
pop
mov
mov
inc
scas
cmp
test
outsl
mov
push
movsb
add
adc
out
add
sub
xlat
xchg
loopne
add
mov
sti
ud0
cli
dec
mov
mov
xor
cli
shl
flds
or
aam
sbb
hlt
test
and
iret
push
fsubrl
lods
jns
mov
fucomip
fldl
addr16
sbbb
xor
push
xor
jmp
out
in
jno
inc
jmp
mov
jg
inc
movsl
add
mov
outsb
adc
pop
cwtl
xor
imul
mov
pop
aad
sbbl
xchg
add
rclb
fisttpll
push
xchg
sbb
stos
adc
insb
jnp
mov
loopne
ljmp
inc
scas
mov
adc
mov
fstpl
out
mov
push
mov
cmpsl
outsb
fnsave
sbb
xor
push
shrl
shlb
adc
aaa
sbb
js
jo
mov
in
mov
cmpsb
lret
dec
out
push
dec
jecxz
xlat
hlt
mov
es
icebp
sub
pop
mov
ljmp
dec
mov
jae
add
loop
pushf
mov
test
incb
shl
dec
pusha
sbb
ret
cmp
sub
enter
inc
mov
dec
fbld
lahf
daa
cmp
loop
lock
xchg
lods
mov
sbb
mov
inc
scas
push
int3
push
stos
js
fsubrs
sbb
mov
xchg
add
mov
push
mov
xchg
push
loope
jp
inc
cltd
and
mov
scas
pop
mov
pop
rorb
lcall
cld
jecxz
pop
mov
jl
imul
rorl
lahf
push
add
jmp
pop
out
pop
dec
inc
and
int
data16
jmp
and
lea
into
adc
arpl
sub
cli
pop
data16
cltd
push
lcall
adc
pop
mov
je
das
out
adc
insl
out
into
data16
hlt
aaa
in
pop
out
cli
ja
fwait
popa
cmp
into
adc
and
sub
lret
gs
mov
jecxz
lods
mov
add
je
mov
and
jnp
mov
or
pusha
add
ja
icebp
popa
cld
jae
xchg
push
add
lea
inc
push
mov
jmp
rcrl
xchg
es
mov
xchg
pop
xchg
inc
add
and
ja
in
in
sbb
xchg
out
dec
adc
lret
lret
insl
xchg
adc
jmp
and
les
nop
dec
out
addr16
inc
push
popf
jb
andb
sbb
jo
dec
jp
jmp
sbb
mov
jecxz
or
js
mov
es
inc
and
out
lods
cmp
adc
push
fiadds
mov
popf
inc
into
and
cmp
mov
test
jb
negl
nop
lret
pushf
gs
push
mov
jne
nop
push
fdivrs
ficompl
rol
jne
mov
push
jns
add
imul
mov
les
insb
sbbl
cmpsb
cli
jno
int
adc
push
cmp
cmc
adc
pushw
pusha
aaa
addr16
out
les
push
mov
into
pop
inc
test
mov
xchg
cmpsb
and
sbb
push
add
or
repnz
movsb
sbb
mov
in
jg
and
sub
test
fisubrl
inc
mov
jae
pushf
jecxz
push
mov
push
addr16
sbb
nop
dec
sahf
in
sbbl
add
sbb
jnp
call
enter
pop
mov
pop
in
sub
test
in
mov
and
out
mov
sbb
test
mov
adc
ret
cmpsb
test
and
and
pop
ljmp
sub
pop
xor
cwtl
outsl
add
mov
mov
aam
xchg
decl
not
fwait
sti
hlt
int3
jg
xchg
call
lds
push
clc
adc
lods
fists
dec
and
sbb
push
jb
mov
xchg
loopne
mov
orb
test
mov
imul
scas
xor
lods
mov
mov
xorl
fcomps
das
adc
les
inc
and
ret
repz
jg
aad
or
adc
inc
jbe
aas
daa
inc
jne
jbe
mov
dec
inc
mov
push
cmpsb
mov
mov
adc
adc
xor
jno
cmp
mov
jg
into
mov
ss
rcll
push
xchg
lret
push
jae
xor
rcrl
xchg
mov
mov
mov
in
sbb
or
push
jbe
es
popf
stc
lcall
lahf
cmp
or
fwait
or
out
sbb
ret
pop
mov
lods
cmpsb
jns
mov
inc
inc
xchg
sbb
cmp
cli
add
ret
mov
fstl
data16
out
insb
jge
rcll
xlat
sbb
inc
inc
dec
pop
lods
mov
xchg
aas
call
or
sub
jns
cmpsb
sti
mov
ret
mov
nop
cmp
call
jle
mov
pop
jl
dec
stos
cli
loopne
cwtl
ss
js
ret
push
loope
pop
pop
aam
add
outsl
jnp
add
fs
adc
lods
mov
mov
adc
xorw
dec
sub
ret
std
xor
mov
loopne
cmp
sub
test
rorl
mov
dec
cmp
pop
xchg
mov
xor
xchg
cwtl
mov
rcr
sbb
pop
gs
jo
jne
int3
xor
std
out
test
pop
in
in
lret
fnsave
fbld
dec
xor
xchg
mov
mov
lahf
mov
shlb
ret
call
or
enter
cmpl
xor
pop
sbb
stos
cmpb
sbb
jmp
cmp
lods
lods
std
sarb
pop
cmpsl
add
loop
je
and
minps
lods
es
das
insl
pop
cmpsb
outsb
hlt
mov
mov
loope
clc
cmp
aas
dec
inc
in
faddl
loope
fcompl
push
adc
cmp
inc
addr16
lret
xlat
icebp
push
pop
enter
cmp
lods
dec
clc
popf
sbb
jmp
jg
sub
ret
call
lea
mov
or
jnp
jnp
inc
movsl
cld
cmp
es
sahf
pop
ss
jnp
movsb
mov
jne
xor
jle
fbstp
inc
cmpsb
xchg
andb
push
mov
repnz
add
es
jno
xchg
fwait
sub
jo
mov
pop
mov
dec
dec
lmsw
test
jnp
xchg
loopne
pop
pop
stos
aam
cld
and
pop
hlt
push
adc
orb
sbb
inc
inc
rcrb
inc
xchg
pop
dec
push
mov
rol
dec
jecxz
xor
jb
add
push
mov
xchg
pop
in
mov
mov
jo
out
sbb
xor
pop
jno
push
andl
and
mov
cmpsl
ds
pop
jns
xchg
stos
cmp
add
xor
lods
ljmp
out
popa
test
sbb
xor
or
imul
inc
sti
cmp
xchg
notl
dec
sub
mov
xchg
mov
cmp
xor
int3
sahf
cli
fcoml
sub
popl
adc
in
sti
sbb
push
push
scas
push
or
mov
mov
loopne
adc
fnsave
bound
je
jae
cltd
sbb
int3
push
int
push
fisubl
sub
adc
xchg
loop
int3
jno
aaa
jns
out
push
ja
push
gs
sub
xchg
or
add
mov
imul
ror
hlt
and
mov
imul
pusha
ficoml
not
into
pop
push
sub
pop
dec
std
js
add
mov
sbb
pusha
sub
daa
int
push
dec
mov
rcrl
mov
xlat
clc
fwait
out
addb
mov
and
pop
shll
cmpsl
sub
mov
aaa
ficomps
add
push
jns
cmp
into
loopne
mov
xchg
jne
aam
int3
insl
push
fdivr
fbstp
outsb
mov
mov
std
insb
cmp
icebp
decb
outsl
andb
data16
jne
and
sbb
xchg
sbb
xchg
sbb
jg
mov
mov
cmp
ret
sub
inc
pop
mov
lcall
fwait
dec
or
jg
cmpsb
and
xor
xchg
hlt
cmc
adc
lahf
arpl
dec
out
test
xchg
mov
fistps
jae
es
sahf
stos
cmp
aad
leave
pusha
mov
and
out
inc
sarl
lods
cmpsb
jecxz
in
push
lock
pop
and
and
ljmp
rcrb
adc
je
push
loopne
fsubl
je
pop
xchg
xchg
clc
or
push
sbb
xlat
repz
and
gs
imul
mov
fwait
stos
clc
sahf
sbbb
aas
loop
push
push
lret
aaa
fwait
repz
sbb
std
mov
mov
daa
push
in
jo
out
cs
daa
outsl
xlat
notb
fidivrl
or
test
inc
xchg
add
test
test
mov
mov
dec
bound
xchg
imul
outsb
out
jnp
filds
pop
adc
mov
jbe
mov
test
lret
dec
data16
clc
scas
adc
std
xchg
dec
test
dec
std
insb
mov
cmp
clc
bound
and
dec
je
jecxz
fnstsw
adc
pop
test
sbb
sbb
xchg
lea
mov
adc
outsl
outsb
or
cltd
ds
mov
jle
sub
cmp
xchg
sbb
push
lret
cmp
xchg
push
ss
mov
sbbl
test
cmp
in
stos
mov
pop
add
psubusw
push
adc
xor
xchg
xlat
sbb
mov
jg
mov
push
mov
movsb
xor
add
cmp
popf
loopne
aam
ss
and
jmp
push
loope
cli
push
in
lret
ss
movsb
inc
dec
mov
and
repnz
add
and
sub
js
out
inc
xchg
in
xchg
mov
mov
movsl
fs
sbbl
fs
inc
push
xor
andb
dec
mov
or
ret
call
scas
subb
dec
dec
mov
repnz
lret
mov
or
hlt
sbb
clc
adc
andl
shll
mov
dec
out
fcoms
fcmovnu
inc
jge
push
into
mov
mov
mov
jmp
enter
loope
stc
sub
push
das
push
clc
clc
mov
sahf
xchg
lea
sbb
cmpsl
xchg
and
jns
cld
inc
xchg
enter
adc
mov
jb
test
pop
pop
cmc
pop
dec
divb
pop
mov
pop
mov
les
popa
mov
cmc
mov
push
stos
cmp
repnz
xor
out
cmpsl
mov
cmp
cwtl
fbld
or
shrl
xor
mov
clc
dec
xor
mov
push
addr16
sahf
mov
scas
es
push
cmp
fdiv
or
mov
scas
and
inc
adc
fwait
lods
jle
loop
xchg
pop
sarb
in
out
sti
push
mov
scas
xor
fs
add
mov
add
mov
sub
bound
or
rcrl
adc
xlat
mov
cltd
jo
cli
mov
iret
mov
push
aas
add
mov
fdivl
rcll
push
stos
imul
sbb
xchg
jecxz
and
push
sub
jnp
lcall
iret
fnsave
xchg
xchg
xchg
pop
cmp
or
dec
and
mov
cmp
cli
xchg
in
pop
push
popf
test
lret
xchg
iret
cld
pop
je
adc
xor
test
xchg
loop
not
test
rorl
int3
mov
xchg
idivl
int3
mov
test
call
popf
cmpsl
jns
dec
mov
jle
lds
aas
dec
jecxz
aad
pop
lret
scas
xchg
xor
outsl
sub
jecxz
jl
in
mov
pop
pop
inc
test
jge
cs
rcr
jne
cmc
mov
adcb
adc
pop
cmp
dec
sbb
cmc
sbb
getsec
sub
mov
in
cmp
jno
mov
adc
inc
pop
pusha
notl
mov
lods
inc
in
push
inc
push
add
hlt
testl
les
lods
xchg
xchg
out
repz
shlb
adcb
mov
test
out
add
lock
xor
cmp
pop
push
shll
movsb
pop
nop
or
dec
adc
xchg
or
aam
repnz
mov
inc
sti
shl
mov
das
mov
mov
cmp
pop
stos
jle
jo
push
out
in
lcall
popa
inc
or
incl
dec
loope
cwtl
incl
jp
stc
outsl
push
cltd
mov
xchg
in
test
mov
or
js
sub
sub
imul
mov
jle
pop
cmp
mov
dec
loop
xlat
mov
pop
adc
sahf
fisubrl
mov
fistpll
in
test
inc
inc
fidivl
fiaddl
test
fcompl
and
cmpl
je
shl
jg
xchg
sub
mov
and
pop
xchg
sub
jne
cmp
dec
cmp
fsubrs
cmp
mov
inc
cmc
clc
adc
mov
sarb
xchg
out
xchg
push
xor
insb
gs
cmp
mov
cmp
rorl
mov
and
cltd
out
andl
shrl
cld
jecxz
push
add
mov
clc
movsb
sti
scas
pop
sbb
add
push
xor
les
fiaddl
push
dec
out
jbe
mov
dec
lret
and
lock
or
shlb
cs
jae
inc
repnz
rcrl
mov
cmp
test
dec
dec
fnstenvs
mov
out
lea
arpl
je
testb
fadd
movl
loop
pop
jo
add
pop
in
adcb
sarl
daa
movsb
inc
test
jecxz
adc
push
test
dec
pop
and
jb
mov
push
pop
popf
loope
xchg
stos
sbb
out
adc
into
das
call
sub
sarl
pop
mov
mov
or
cmp
cmp
pop
popa
and
and
mov
cli
jne
outsb
xchg
mov
ss
movsl
addr16
pop
stos
jbe
cwtl
ret
int3
xchg
xor
vmovd
jle
push
out
sahf
jl
jmp
lahf
mov
or
sbb
fistpl
cmp
and
repz
fdiv
cli
mov
inc
push
outsb
add
test
xchg
mov
mov
jecxz
cwtl
cs
test
aad
pop
pop
and
in
mov
xor
dec
pop
ret
pop
mov
pushl
xor
call
or
rcrb
jnp
addr16
cld
test
mov
push
add
and
es
xchg
xor
lods
notl
xor
andl
ja
popf
push
insb
iret
inc
in
std
stos
fdivl
lret
add
jecxz
cmp
and
jae
xor
jg
mov
inc
and
xchg
sbb
cld
xchg
cmp
orb
jb
insb
or
icebp
lret
aam
cmpsb
arpl
jmp
lods
or
mov
dec
arpl
cli
clc
jae
leave
lods
inc
sti
movsb
out
xchg
mov
inc
push
mov
dec
or
mov
pop
fwait
subb
fldcw
sub
jp
inc
lods
cmp
subl
lret
dec
pop
mov
inc
or
imul
sbb
mov
out
fwait
jnp
rep
andb
shrb
xchg
je
out
sbb
adc
loop
mov
sbb
fidivrl
mov
lods
nop
add
sub
sub
mov
and
mov
sahf
mov
cmpsl
popa
nop
push
pop
adc
sbb
repz
push
jg
sahf
pusha
or
jb
or
adc
mov
sub
mov
ss
lea
daa
int3
sub
cwtl
iret
in
adcl
xor
dec
xorb
mov
lock
ret
add
mov
adc
xor
dec
xor
xchg
imul
adcl
div
imul
dec
test
cmp
mov
lock
cmp
adc
add
je
sbbl
mov
mov
dec
jl
mov
adc
mov
nop
and
addr16
cmp
mov
pop
test
push
imul
ja
enter
clc
icebp
pop
lret
xor
and
pop
mov
and
insb
sbb
stos
jmp
fldl
test
mov
arpl
repnz
mov
mov
fld
imul
mov
aam
test
push
push
fmul
int3
push
xchg
imul
push
test
nop
mov
push
faddl
adc
and
aas
dec
in
fdivr
lcall
scas
jmp
pop
push
out
mov
sub
lods
mov
cmpsl
ret
jbe
xor
cld
jae
and
rol
movsl
mov
out
popa
jne
jb
add
test
test
cmc
aaa
dec
std
lcall
addr16
adc
aaa
cmpsl
ret
push
sub
push
mov
sub
mov
pushf
lock
add
xchg
mov
jo
push
mov
pop
test
push
mov
mov
xor
lret
ror
mov
stc
loope
arpl
mov
mov
leave
push
call
je
pop
cmp
cmp
or
sub
movsl
fcomps
fnstenv
in
or
xchg
sti
xchg
imul
repnz
jmp
je
mov
outsb
cltd
rolb
testb
and
fildl
les
jle
mov
into
js
dec
pop
or
fs
movb
clc
xor
adc
lods
clc
mov
fildl
xchg
jnp
mov
adc
sub
data16
pop
imul
subb
jne
ss
mov
sbb
aaa
pop
ror
inc
pop
lcall
push
and
add
inc
aad
lock
test
mov
neg
xlat
lods
cld
push
into
xor
sbb
call
pop
cmp
pop
push
sub
fs
mov
sbb
add
fisttpl
dec
push
pusha
sub
xchg
mov
movsb
aas
lcall
test
add
mov
test
in
mov
imul
add
jecxz
jnp
sbb
mov
cli
nop
popa
outsl
ljmp
jmp
mov
push
outsb
and
daa
in
fwait
out
hlt
fiaddl
fwait
dec
into
cmp
push
jmp
or
daa
sbb
aas
push
mov
je
jmp
aam
je
dec
in
jb
inc
mov
cli
je
xchg
jg
jno
lock
inc
gs
adc
data16
jae
lcall
jp
push
popf
repnz
push
lods
pushf
fistps
push
enter
dec
sub
pop
cmp
dec
es
cmpsb
push
int3
mov
mov
mov
mov
mov
add
mov
mov
mov
iret
mov
in
xor
pop
mov
sub
jmp
push
test
mov
fsubs
stos
sub
xlat
pushf
les
lods
mov
dec
mov
fimuls
and
add
imul
ljmp
outsl
mov
call
adc
push
jb
mov
and
mov
scas
or
mov
ret
pop
movsb
aam
and
pop
imul
xchg
in
ljmp
push
sub
xor
xchg
xchg
push
addr16
jns
xchg
mov
arpl
mov
pinsrw
aam
pop
loope
mov
dec
sbb
iret
hlt
pop
dec
adc
in
sub
dec
push
testb
lea
mov
pop
pop
sub
xchg
mov
and
and
stos
pop
test
pop
fidivrl
data16
shrl
fstl
les
dec
fmulp
lods
imul
popf
in
pop
fdivrl
arpl
xchg
test
cwtl
jno
fsts
jmp
sub
repz
adc
cld
cmp
and
mov
dec
icebp
xchg
cmpsb
in
testb
int
sub
pop
cmpsb
sub
mov
js
mov
jl
fistps
or
out
fmull
push
jmp
adcb
jae
push
add
mov
sbbl
lret
push
in
jae
movntq
incb
xor
pop
insb
add
adc
push
icebp
mov
es
leave
test
popw
cmp
clc
add
mov
or
sahf
add
pop
mov
sbbb
xlat
ret
jge
jle
stos
out
xor
aam
jo
push
push
cwtl
and
ja
dec
insb
pop
scas
adc
and
sub
push
pushf
lea
jae
mov
or
sub
and
mov
or
imulb
imul
mov
xchg
out
inc
mov
notl
or
xchg
lock
jl
out
mov
jbe
loope
fsts
push
cmp
hlt
cmp
test
dec
ds
sbb
ret
dec
or
xchg
cmp
insb
push
aas
add
jno
mov
pop
fistl
mov
sub
add
inc
xor
outsl
jns
push
int
xor
sbb
push
and
lds
and
fstps
xchg
popa
mov
dec
fldcw
sbb
mov
mov
or
cmp
cmp
cmp
leave
and
cmp
icebp
add
pop
cmc
and
lcall
push
imul
pop
adc
xor
push
xor
inc
lods
mov
int
jno
ficompl
xchg
mov
mov
jns
xchg
stos
xchg
sbb
xor
icebp
or
ret
xchg
daa
mov
mov
push
pusha
adc
fisubl
andl
pop
aaa
ss
repnz
mov
mov
into
fldcw
pop
rol
loopne
enter
popf
xor
inc
cld
stos
js
dec
dec
sbb
jo
cmp
dec
popa
xor
jecxz
arpl
mov
jne
pop
sub
or
decb
mov
sti
xor
jle
push
mov
into
dec
inc
es
push
cs
cs
ss
adc
jp
aam
std
ret
mov
scas
imull
and
call
add
lods
ds
out
addr16
jae
out
jmp
mov
mov
xchg
push
lock
and
in
daa
iret
or
dec
mov
lods
inc
fsubr
xor
lods
lret
dec
ja
jge
mov
orl
sub
pop
lcall
jbe
mov
in
inc
lcall
adc
cli
or
dec
and
and
es
in
enter
push
pop
push
mov
cmpsb
rclb
sub
mov
fbld
pop
push
add
ds
mov
shlb
dec
pop
aas
and
add
cwtl
imul
xor
leave
sti
iret
fsubl
add
leave
jo
xlat
pusha
orb
std
xchg
subl
jb
sbb
js
movsb
scas
lods
add
push
shll
sbb
mov
rolb
rcll
pushf
shlb
rcrl
out
lds
xor
push
es
call
sarb
mov
lahf
mov
or
jge
push
sti
xchg
xor
lret
sub
stos
and
xor
cmc
and
push
adc
push
cwtl
lods
cltd
mov
pop
push
cltd
mov
inc
jbe
inc
movsb
into
or
push
fistl
xor
jne
in
out
jns
sbb
call
adc
test
mov
movsl
mov
lds
lds
int
mov
ljmp
rol
imul
xchg
popa
xor
pop
imul
mov
adc
jge
inc
xchg
stos
dec
imul
pop
mov
mov
adcb
adc
jp
test
mov
mov
xor
shlb
push
sbb
dec
in
cmp
push
loop
push
cmp
jl
int3
pop
inc
mov
int3
fsubrp
shlb
iret
xorl
lret
cmp
mov
fimuls
cli
cmp
insl
push
mov
mov
jp
fmul
xor
mov
jmp
outsb
sarl
inc
pusha
xor
pop
cmp
out
cmp
stos
adc
stc
mov
push
sub
ret
fnstenv
adc
xchg
xor
pop
cmp
mov
jne
icebp
xchg
adc
loope
add
incl
clc
xchg
cmp
outsb
or
in
sbb
or
adc
lret
sbb
sub
gs
insb
cli
inc
add
xor
cmp
gs
dec
mov
sbbl
mov
mov
outsb
xchg
sub
xchg
loope
inc
enter
cmpsb
cmp
lret
dec
stos
jmp
push
loope
mov
dec
jbe
aad
push
cwtl
rcrl
out
xor
push
imul
cmp
aad
aad
xor
or
repz
in
xchg
imul
xor
and
jno
insl
sub
fwait
cmp
xor
mov
lahf
sbb
sbb
mov
pop
cmpsl
lret
pop
or
sub
int
popf
xor
aaa
outsb
clc
lcall
push
and
sbb
popf
xor
dec
and
out
xlat
mov
fdivrs
xor
idiv
push
or
fwait
push
out
pop
cmp
ret
xchg
jmp
xchg
cwtl
mov
xchg
cmpsl
jp
hlt
mov
sub
in
loop
shl
lcall
add
push
xchg
mov
dec
daa
sub
xor
push
mov
or
fdivl
xchg
scas
xchg
push
test
lock
jmp
stos
jnp
push
dec
ljmp
es
shl
enter
insb
sub
fwait
sub
sbb
and
mov
mov
sub
test
sub
in
cmp
pop
mov
pop
cmp
outsb
movsb
jecxz
dec
dec
dec
jmp
mov
insl
lds
hlt
inc
xor
cmpsl
cld
fistps
fsincos
int3
pop
cmp
sbb
insl
inc
or
mov
and
add
inc
cld
push
daa
outsl
orb
push
clc
xor
leave
or
mov
popf
adc
mov
sbb
fildl
mov
in
pop
adc
test
mov
orb
dec
sbb
adc
dec
cmpsl
mov
cli
rcrl
add
shrl
pop
mov
mov
inc
cwtl
rcrb
xchg
imul
mov
lea
data16
pop
insb
mov
rol
xlat
out
or
mov
mov
mov
xor
cwtl
test
jp
scas
out
ja
cld
mov
out
popf
in
test
dec
clc
cmc
and
xlat
or
inc
push
xor
outsl
xor
cwtl
mov
push
testb
movsl
adc
aad
pushf
dec
push
jle
push
xchg
mov
xchg
adc
arpl
in
repz
roll
aas
inc
incb
mov
les
cmc
xchg
inc
inc
fdivrl
add
mov
outsl
shll
xor
mov
sti
jo
ja
bound
notb
mov
cld
jo
fisubrl
rolb
cmp
stc
adc
pop
dec
sbb
roll
nop
dec
fists
adc
ret
xchg
mov
push
in
adc
loopw
jne
mov
push
cmp
or
fbstp
sub
jb,pt
mov
lods
out
mov
mov
inc
push
cmp
pop
sub
xchg
lahf
push
pop
out
aaa
lahf
fidivl
pop
pop
lods
and
hlt
lds
das
mov
jmp
add
mov
fdivrs
dec
pop
es
add
dec
out
cli
dec
pop
pop
stc
sbb
xor
pushf
test
xchg
mov
add
sub
xor
out
cwtl
dec
mov
jbe
mov
shrl
mov
mov
in
jo
and
imul
mov
push
aas
cmp
or
push
fcomip
test
xchg
jge
fnstsw
cmp
ret
fs
das
xor
mov
cld
xchg
xchg
xchg
or
inc
or
mov
fwait
popf
inc
cmpsl
cld
aad
or
popf
sub
ds
jnp
roll
add
pop
xor
adc
aaa
mov
gs
dec
roll
out
fldenv
cmc
mov
addr16
addb
pop
cs
pop
cli
xchg
jmp
inc
lret
mov
pop
nop
fwait
xchg
iret
cmp
cld
inc
and
enter
adc
jmp
nop
jae
scas
movsb
mov
addr16
lods
and
inc
stos
mov
outsb
movsl
jge
xchg
inc
test
push
repz
mov
lret
in
push
movb
test
sub
jle
nop
std
cmp
fldcw
xchg
dec
in
enter
insl
imul
cmpb
mov
movl
adc
les
cmp
test
pop
je
adc
lret
xchg
xchg
test
into
mov
bt
sti
jbe
jae
mov
lret
xor
or
mov
mov
leave
out
jl
jo
jmp
mov
lods
je
add
data16
stos
rorb
xor
fisttps
sub
test
mov
jne
xchg
sub
orl
int3
mov
outsl
mov
orl
fiaddl
in
pusha
lods
push
dec
cmp
jnp
popf
dec
in
xchg
rep
scas
pop
aad
mov
xor
in
cmp
sbb
js
push
outsl
xchg
mov
and
push
pop
mov
shl
ja
push
negb
stos
sub
lcall
ror
push
nop
pop
push
fimull
lods
jae
imul
mov
into
push
add
jge
loope
jnp
movsl
cmp
fwait
ja
in
xor
dec
fisttpl
shl
movsb
shrb
sub
int
and
lret
fildll
push
ljmp
mov
out
xorb
or
fcoml
push
xchg
jbe
dec
dec
sbb
icebp
jb
fildll
push
cmp
and
xchg
add
xor
clc
fstpt
pop
sahf
dec
jbe
pop
stos
or
sub
orl
xor
arpl
das
xor
mov
mov
xchg
mov
xlat
pushf
repz
pop
adc
icebp
jo
add
movsl
jne
xor
and
jmp
adc
std
or
stc
dec
test
mov
stos
sbbl
xchg
ror
xchg
mov
shld
pop
sub
fnsave
mov
cmp
sub
mov
lret
test
lds
cmp
imul
push
push
adcl
test
or
sub
lret
dec
adc
lea
add
movsb
add
xchg
or
mov
sbb
sarl
mov
jbe
sbb
repnz
insl
push
out
imul
stc
cmp
aam
xchg
cmpsl
cmp
xchg
mov
cmp
adc
jne
sbb
push
push
or
mov
into
imul
xlat
repz
and
ss
adc
insl
repnz
lahf
sbbb
pop
mov
mov
and
hlt
push
adc
or
mov
cmp
ljmp
push
jbe
fldt
or
cmpsl
lea
vdivpd
adc
fs
test
fsubrs
or
push
pop
shlb
xor
sbb
lds
enter
sub
int
mov
xor
add
dec
pop
repz
cmp
popf
push
push
icebp
cmpsl
dec
call
pop
rcrl
xor
sbb
push
out
push
outsb
sub
shrb
and
pop
std
leave
add
pop
cmc
jnp
dec
mov
jg
pop
stos
sub
dec
push
lret
loop
cmc
js
std
ljmp
adc
mov
pop
fsubr
mov
adc
push
add
pop
repnz
inc
pop
sub
dec
ficomps
xchg
loope
dec
cmp
popa
insl
insl
mov
or
xlat
aaa
xorl
enter
pop
in
jge
cli
lcall
in
sub
mov
jg
popa
adc
push
popl
popf
sarb
aam
push
leave
insl
push
dec
stos
imul
sub
sbb
call
aad
jl
in
push
inc
inc
out
lock
inc
push
int3
enter
or
mov
mov
sub
test
inc
movl
add
std
stos
sub
adc
int
das
or
cs
sub
fidivrl
rol
push
cmpl
aas
clc
fnsave
aad
es
xor
and
cmc
inc
cld
dec
shll
int3
mov
push
out
mov
dec
ss
out
add
xchg
cltd
mov
mov
mov
adc
daa
popf
imul
andb
sbb
mov
jp
mov
repz
clc
ja
jae
xchg
mov
rclb
addl
les
push
jns
and
in
es
inc
decb
push
pop
cmp
jbe
shll
mov
inc
mov
cmp
adc
scas
xor
and
sub
fnstcw
test
lods
mov
aam
mov
loop
pop
scas
popa
or
inc
inc
mov
lods
mov
fisubs
dec
ljmp
inc
cmc
mov
sbb
cmp
loope
addr16
add
hlt
push
cmp
js
adc
inc
cltd
xor
cmp
arpl
lret
bound
dec
jmp
repnz
xchg
push
jne
push
jp
dec
negl
lea
scas
sbb
cli
cmp
pop
sub
in
movsb
mov
fldl
mov
das
lods
adc
repz
or
test
push
dec
int3
lret
repnz
adc
fdivs
sbb
inc
cltd
test
movsl
push
sub
int
ss
call
rcrb
pop
out
mov
fisubrl
lea
std
xchg
sahf
imul
add
dec
jg
jle
es
sahf
lcall
in
push
ds
add
insl
dec
mov
xor
sbb
fildll
maskmovq
sbb
fistpl
cli
xchg
xchg
jl
mov
dec
adc
push
rclb
sub
mov
mov
jge
sbb
pop
outsb
mov
ret
mov
jnp
inc
xlat
into
ficoml
mov
sbb
in
mov
insb
rcr
scas
stos
jne
testb
daa
jg
inc
lea
data16
cmp
inc
in
orl
pop
dec
insb
or
icebp
in
sub
aaa
pop
insb
adc
push
jl
cli
jecxz
shr
add
inc
out
fdivrl
jl
cs
out
repnz
mov
jno
fidivl
mov
mov
js
nop
lock
xor
push
mov
adc
adc
mov
test
cltd
mov
and
imul
inc
or
fisubrs
les
jo
in
ret
sbb
xchg
dec
je
das
test
test
mov
fiaddl
push
in
mov
mov
lret
jae
push
mov
out
xchg
xlat
faddl
add
daa
mov
test
push
mov
push
jge
xor
and
cwtl
xor
divl
add
popf
es
or
inc
fistpl
js
hlt
std
add
xor
mov
shlb
mov
nop
push
scas
mov
div
or
cmp
das
mov
mov
and
xchg
pop
mov
and
xor
fists
dec
ds
loop
stos
insl
scas
inc
imul
jg
std
jl
mov
les
jg
jns
sbb
fdivrs
cwtl
cmp
xor
mov
mov
movsb
leave
sub
mov
inc
out
lahf
jbe
mull
leave
xor
scas
or
jge
outsl
mov
data16
mov
fwait
jmp
arpl
adc
mov
subl
sti
xlat
xchg
sub
call
dec
sub
aad
std
xchg
cmpsb
dec
sbb
inc
ret
mov
scas
stos
dec
repnz
and
sbb
inc
cmp
mull
xchg
pop
outsl
push
mov
dec
sahf
in
fildl
ss
loopne
xor
out
mov
int
fisubs
cmp
cmp
mov
test
inc
adc
xorl
push
jg
jns
xor
aam
push
montmul
cmpsb
andl
adc
insb
test
inc
mov
inc
sub
cmp
sbb
push
add
shlb
es
scas
sub
sbb
sub
xlat
mov
dec
add
in
mov
adc
loop
mov
push
pop
mov
in
das
sbb
cmp
das
lret
mov
and
mov
lret
jb
mov
fstl
bound
push
lahf
imull
jno
fucomp
and
xorl
sar
ljmp
jns
jmp
sbbl
push
gs
insb
mov
scas
lret
or
sti
xor
xor
mov
pop
mov
rclb
mov
cmp
movsb
fidivrl
imul
mov
loop
outsb
pop
imul
addr16
loopne
js
cmp
xor
cwtl
insb
xchg
mov
lock
cli
enter
xchg
jmp
jge
movsb
sub
fstl
pushf
or
jno
xor
lock
daa
adc
pop
lds
mov
mov
inc
mov
inc
lea
push
in
xchg
dec
xchg
ficompl
adc
dec
and
push
cltd
ss
mov
and
aad
pop
out
mov
jp
iret
ds
arpl
imul
imul
pushf
adc
aas
ja
sarb
cwtl
cmpsl
ja
or
mov
repnz
push
test
test
cmc
lret
fucomp
cmc
jns
or
jae
daa
jae
pop
loop
dec
jae
adc
sarl
test
lods
aaa
gs
pushl
or
pop
aaa
pop
adc
clc
and
mov
ja
lds
pop
xor
in
or
fdivs
sub
iret
data16
adc
in
js
daa
cmp
mov
loopne
xchg
cmpsb
push
mov
cmc
cmp
sbb
test
xor
pop
mov
lock
pop
pop
popa
xor
mov
push
or
andb
add
ffreep
xor
addb
add
xor
fldenv
add
mov
lahf
data16
inc
pop
das
popf
into
jns
aaa
jecxz
movsb
stos
std
aam
notb
mov
popf
scas
cmp
lock
mov
ret
or
pop
addr16
sarb
mov
push
out
cli
das
nop
mov
imul
jle
in
icebp
push
daa
add
inc
in
lods
repz
shlb
sub
push
lods
lds
xor
mov
or
stc
cmp
aad
or
leave
fs
cli
jo
jle
xchg
andb
and
xchg
inc
xor
cwtl
imul
mov
fucomip
xor
lea
jnp
jle
push
das
sub
inc
xchg
divl
out
mov
dec
cmp
jnp
out
sbb
sub
push
pop
rol
inc
ret
or
insb
repz
stc
and
sbb
mov
inc
xor
dec
test
dec
int
add
mov
push
push
jmp
fidivs
jbe
fwait
push
cld
mov
inc
cltd
xor
adc
mull
xlat
addl
xorb
loop
iret
and
push
cmp
sub
imul
sbb
mov
adcl
mov
fs
dec
shlb
add
movsb
cmp
fcoms
pop
dec
jg
sub
test
push
scas
insl
nop
xor
xor
mov
lret
outsb
jecxz
sbb
mov
test
leave
repz
jbe
int3
repnz
mov
inc
jb
cltd
std
jne
mov
push
jns
pop
mov
lock
cmp
mov
jge
pop
std
into
mov
loop
dec
out
in
xchg
xchg
imul
mov
cmp
mov
cmpsl
cmp
jbe
mov
ss
mov
ljmp
mov
ds
inc
ljmp
pop
scas
mov
data16
cs
cmpxchg
dec
test
mov
iret
mov
jmp
nop
mov
mov
mov
pop
lock
dec
and
push
test
jns
push
fdivrp
lea
mov
or
sbb
sbb
movsl
inc
int
xchg
lret
inc
dec
loope
out
push
xor
mov
xchg
xchg
test
mov
fsubp
repz
mov
in
xchg
pop
nop
inc
sbb
mov
mov
cmp
adc
and
pop
iret
jo
loop
push
xor
mov
cld
lcall
in
add
jbe
xchg
cs
push
sbb
outsb
mov
mov
inc
mov
stos
add
sub
or
sbb
sub
out
push
cmp
mov
xchg
rorb
enter
jp
mulb
push
jmp
dec
add
jo
addr16
int3
mov
ficoms
push
orb
xchg
push
cmp
mov
pop
lods
ds
test
mov
movsl
icebp
jle
hlt
imul
repnz
jo
test
ficoml
cmc
add
sbb
jge
dec
mov
and
icebp
imulb
xor
jnp
adc
jno
jge
push
push
pop
sbb
and
pop
pop
xchg
mov
push
roll
js
cld
xchg
xor
ds
and
sti
sub
stos
push
cmp
adc
insb
data16
adc
lea
mov
xchg
cmp
iret
addr16
imul
aad
daa
add
sahf
inc
addr16
in
cwtl
andb
lds
mov
icebp
iret
mov
sti
or
xchg
shl
mov
mov
mov
sub
jp
inc
sbb
jecxz
int3
out
jle
dec
roll
lods
mov
adc
sti
mov
inc
sub
cmpsl
test
repz
or
cmp
mov
int
enter
mov
cmp
out
mov
das
cmp
pushl
mov
inc
xchg
loope
jno
mov
push
sub
rcll
mov
test
pusha
pop
pop
daa
cli
subb
xchg
inc
negl
mov
pop
mov
mov
into
push
insb
push
mov
xchg
imul
sub
in
push
leave
adc
pusha
fisttpl
lahf
mov
jg
dec
dec
jne
and
test
push
stc
popa
movsb
fstl
inc
fs
fs
nop
pmulhuw
ja
sub
adc
addr16
je
and
cmpsb
iret
cltd
cmpsl
rcrb
ja
mov
add
mov
imul
aaa
add
cmp
rcrb
cltd
lret
lret
lret
daa
movups
in
js
scas
lret
out
add
dec
lds
cmpsb
repz
dec
pusha
jo
mov
sub
sub
jg
scas
ret
xlat
and
mov
clc
dec
or
jo
mov
inc
sbb
lock
push
imul
add
gs
scas
xor
and
bound
pop
inc
push
test
inc
or
inc
pop
add
repnz
lods
mov
pop
xor
ds
adc
sbb
lds
mulb
add
cwtl
lock
push
lret
fnstcw
add
mov
xor
adc
push
sbb
sahf
jecxz
xchg
lcall
cmp
dec
ljmp
sub
pusha
out
xchg
inc
adc
rcrl
dec
mov
push
or
cld
cmp
adc
int3
cs
add
or
lods
sub
out
jae
mov
rcrb
aam
dec
hlt
pop
jno
jnp
jle
adc
adc
push
sub
in
or
mov
adc
inc
dec
mov
test
fcomp
mov
add
xchg
mov
adc
xchg
xchg
ret
pop
pop
in
sti
or
and
push
or
ds
sub
pop
mov
mov
pushf
sbb
mov
push
loop
jecxz
mov
push
cmp
test
test
int3
push
gs
rcr
adc
pop
ljmp
aam
push
xor
aas
mov
xchg
dec
dec
popf
dec
mov
and
pushf
mov
inc
push
pop
dec
mov
push
dec
adc
or
and
pop
push
inc
fdivrs
mov
sbbl
mov
push
movsb
or
jb
icebp
js
inc
rcrb
loop
out
div
pop
fadds
mov
pop
mov
mov
rcrl
mov
push
mov
call
outsl
repz
jnp
out
mov
adc
cs
fcmove
in
ficoml
xchg
mov
shlb
pop
mov
jnp
adc
cwtl
push
jp
pop
add
mov
aaa
dec
cmp
jp
mov
jnp
jp
test
jnp
fsubrl
outsl
push
inc
cmp
mov
or
cld
dec
test
das
icebp
loope
imul
push
les
pop
push
xlat
leave
dec
xchg
out
cmpsl
push
sahf
stos
cmp
fbstp
aas
inc
sti
in
arpl
xchg
xchg
push
das
mov
popf
dec
sbb
pop
andl
ja
sub
mov
je
xchg
ud0
mov
jb
jg
dec
stc
mov
test
mov
or
xchg
mov
ret
sub
mov
shlb
xor
filds
daa
jne
icebp
enter
sbb
push
seta
lods
ljmp
pushf
cmpsl
je
cwtl
das
cmp
mov
mov
stc
mov
jne
xchg
aam
mov
mov
pushf
push
dec
cmp
mov
or
xor
call
hlt
rol
dec
stos
mov
ficoms
sub
add
sub
rcl
sub
fiadds
shlb
gs
inc
fcoms
and
cs
call
sbb
ret
fimull
sub
jmp
mov
mov
adc
outsb
pop
jle
push
mov
rol
loop
lea
cmp
clc
sahf
loope
stos
inc
cmp
mov
dec
pop
leave
pusha
mov
aas
mov
cld
out
inc
cmp
shr
xlat
jb
xchg
push
jo
and
nop
push
sub
sbb
shrl
scas
pop
dec
loop
xlat
xlat
outsb
fstl
aas
cmpsb
jb
scas
mov
mov
push
add
push
xchg
mov
xchg
lret
lret
cltd
out
dec
dec
dec
pop
test
rclb
sub
stos
add
pop
fcmovnb
cwtl
sar
enter
mov
push
loop
repnz
mov
popa
adc
pop
rcrl
lock
rep
ret
and
jl
inc
daa
ss
pop
ja
std
test
pop
cmp
dec
mov
jle
inc
idivb
scas
int3
mov
or
cmpsb
sub
dec
dec
cmp
js
popa
xor
and
scas
push
aad
pop
or
mov
xchg
rol
mov
xchg
enter
lahf
lods
mov
xor
gs
lret
inc
push
adc
fldt
ror
enter
push
cmc
roll
cmp
mov
and
int
mov
fdiv
lods
jo,pt
nop
mov
mov
jge
data16
add
add
pop
std
xchg
push
or
rcrb
mov
data16
in
repz
pop
fwait
jecxz
pusha
xor
out
insb
jl
or
dec
mov
mov
dec
in
repz
mov
and
and
ret
into
test
shlb
push
ret
popf
pop
or
les
call
fcomps
add
push
inc
pop
sub
arpl
sub
enter
jb
fsubl
adc
dec
ja
movsl
imul
mov
jge
mov
xor
adc
js
jl
dec
icebp
out
pop
sub
xchg
les
int3
dec
pop
cmc
ss
add
push
jae
call
mov
cmp
cmpsl
jmp
bound
sub
out
inc
int
scas
rorb
sbb
out
les
xchg
dec
sub
shrl
lds
or
dec
in
lea
dec
ds
sbb
or
mov
ljmp
aaa
jbe
and
push
out
xor
push
jne
mov
mov
add
outsl
test
sahf
stc
je
es
cmp
add
sub
addr16
xchg
sub
push
dec
adc
cmc
inc
jo
fistpl
mov
imul
out
fldz
adc
pusha
adc
outsl
adc
adc
adc
sti
mov
and
add
stos
scas
push
sbb
scas
dec
add
test
cmpsl
jns
xor
mov
add
ficomps
pop
mov
insl
sbb
jbe
int3
inc
andl
pop
add
jp
leave
js
xor
cwtl
loop
sub
add
fwait
js
mov
aad
jmp
setns
pop
iret
ret
push
push
sbb
gs
xorl
mov
dec
push
insl
jge
jo
ja
lea
inc
jge
imul
mov
inc
mov
hlt
das
xor
sbbb
sti
mov
lret
aaa
dec
ljmp
ret
push
pop
insl
jge
jb
cltd
ja
shlb
sub
mov
cmpsl
ret
sub
cmc
mov
xchg
push
jae
sarb
adc
pop
mov
mov
sbb
je
xor
push
out
fbstp
sahf
mov
or
push
into
and
cltd
push
xor
jge
fsubrs
cmp
adc
gs
mov
xchg
inc
cmp
loopne
out
jmp
sahf
dec
movsl
and
xor
jp
loope
adc
dec
in
and
in
lcall
lcall
jmp
fs
insb
xor
mov
pop
ljmp
push
scas
test
inc
lock
out
push
mov
rolb
ret
sbb
mov
gs
push
or
add
lock
pop
adc
lcall
jnp
mov
push
or
pop
hlt
dec
push
jb
mov
sub
sahf
daa
test
fnsave
ljmp
cltd
ds
outsl
stos
das
out
nop
push
jecxz
jl
addr16
arpl
push
mov
jno
imul
xlat
aam
mov
push
push
fcoml
aam
pusha
aas
mov
push
mov
in
xor
insb
jmp
nop
sbb
jg
mov
push
sarl
sub
adc
mov
lcall
imul
addr16
fbstp
or
adc
sub
xchg
cmp
mov
notb
mov
dec
shlb
cmpsb
and
ror
shll
dec
xchg
and
into
xchg
add
push
sub
and
repnz
cmp
daa
std
daa
mov
movsb
mov
mov
jns
addr16
fdivp
sub
cld
and
xchg
stos
out
jbe
sub
sub
ljmp
js
or
out
jl
push
push
enter
fcoms
aam
imul
cld
push
jbe
sbb
js
mov
aad
mov
mov
or
fstpt
mov
inc
cmpsl
aas
or
lds
add
dec
push
mov
push
pusha
push
cmp
lock
xor
or
xchg
mov
mov
push
inc
mov
cmp
xlat
ss
mov
push
jecxz
push
test
in
movsl
cmp
fimuls
mov
mov
jno
adc
movsb
xor
sub
mov
cmp
xchg
push
push
cmpsl
or
or
pop
and
in
inc
xchg
sub
shl
lods
xlat
mov
cmp
sbb
dec
jns
fisubs
ja
insl
cmpsb
fsubrl
jg
or
jp
divl
fsts
mov
int3
xor
push
fidivrs
lods
pusha
lods
test
enter
scas
es
int3
push
iret
nop
imul
fidivl
pop
lcall
jge
jo
xchg
insb
mov
sbb
xchg
pop
test
mov
outsb
jge
sbb
fdivs
cmc
mov
cld
jecxz
jl
rol
ret
stos
xor
jb
and
sub
pop
inc
xchg
mov
cmp
jns
sbb
in
adcl
xlat
cmp
pop
or
outsb
xor
pusha
lods
loope
pop
or
lret
mov
daa
test
cmp
dec
inc
ffree
mov
lahf
out
icebp
int
mov
mov
pop
pop
mov
rcrl
mov
mov
idiv
lahf
loope
pop
push
ljmp
jno
cs
jbe
cli
pop
dec
out
sbb
jbe
add
mov
bound
aad
jb
daa
in
sbb
movsl
test
push
jne
cmp
lcall
jo
sbb
ja
daa
cmp
cmp
sbb
cmp
jb
aad
jl
paddd
jle
or
iret
mov
pop
rorl
mov
inc
push
sbb
mov
test
subb
stos
push
inc
incb
scas
jne
loopne
add
mov
and
xchg
push
pop
fisubs
dec
fdivrl
sbb
mov
int3
cmp
mov
leave
fistl
push
sub
cmp
mov
enter
shl
and
push
cmpsb
les
dec
daa
repnz
adc
inc
dec
xor
insl
arpl
out
pop
rcrl
jns
repnz
adc
lds
dec
push
sti
insb
inc
outsb
or
xor
adc
mov
mov
cmc
call
xchg
push
out
push
cmp
ret
mov
adc
repz
and
or
or
jo
cmp
sahf
jne
lcall
in
add
jg
and
loope
out
inc
hlt
sub
repnz
les
cmp
popf
mov
and
fdivs
loope
mov
int3
xor
push
icebp
mov
inc
sbb
hlt
cmp
mov
lds
ret
ds
stos
jge
dec
mov
repz
push
xchg
adc
cmpsb
addr16
mov
call
fidivl
ss
sti
push
lret
lret
fldt
mov
dec
enter
ljmp
xor
mulb
sub
adc
mov
aaa
add
cmp
lcall
movl
pop
or
push
mov
sbb
push
pop
cmp
lret
into
dec
dec
push
fdivrs
jge
leave
jns
jle
or
int
cmp
test
inc
fs
lret
dec
push
jno
mov
enter
outsb
jge
inc
mov
cmp
clc
out
iret
movl
shll
inc
cmp
jo
xor
loop
dec
gs
mov
and
pop
jg
ljmp
js
cwtl
mov
movsb
popa
ss
mov
pop
in
shlb
cmp
scas
mov
push
pop
out
pop
mov
daa
jno
xchg
mov
mov
or
imul
rol
mov
dec
jl
mov
mov
ja
ret
sub
outsb
clc
jae
mov
or
add
pop
stos
mov
push
mov
mov
test
mov
rcrl
fdivl
roll
push
add
or
in
xor
push
stos
inc
les
imul
sar
dec
pop
dec
enter
mov
aad
imulb
insl
sub
add
insl
stc
mov
cwtl
add
or
mov
and
cld
jo
cld
and
jmp
xchg
or
mov
popa
xor
cmp
xor
jp
mov
aas
push
imul
pusha
push
cld
lcall
in
daa
frstor
jg
sahf
sbb
bound
push
add
or
cmp
ret
sbb
iret
in
mov
leave
test
cltd
test
js
sub
cmpsb
cmp
mov
test
pop
mov
lods
or
and
push
jo
and
mov
adc
shlb
push
loopne
adcl
push
add
jecxz
push
loop
sbb
stos
lahf
jge,pn
ja
pusha
lods
nop
out
add
ds
mov
or
push
inc
mov
jns
shll
dec
out
push
push
and
aas
mov
rcr
pop
sbb
aaa
dec
cmp
sbb
loope
dec
xchg
aad
dec
cmpsl
cltd
pop
mov
sbb
dec
in
and
repnz
into
sub
mov
insl
loop
sahf
inc
mov
jge
aam
or
aaa
or
jno
es
lret
jbe
push
xor
test
push
mov
mov
pop
fwait
sub
jno
or
add
and
test
iret
movsl
mov
aam
jle
pushf
mov
lea
jecxz
es
push
in
mov
insb
add
test
cmpsb
notb
pop
imul
xchg
mov
and
test
daa
pusha
icebp
pop
ljmp
es
inc
stos
inc
loop
jne
xchg
xor
xchg
cmpsb
jg
pop
mov
pop
lds
out
out
dec
cmc
jno
stos
mov
jle
jle
negb
or
and
jns
cmpsb
rcrb
adcl
cmp
jl
push
jae
xor
jno
jmp
insb
and
add
out
xor
imul
aaa
repnz
out
shrb
stos
sbbl
or
sub
cld
xchg
xor
and
jp
out
stos
adc
sub
mov
pop
adc
out
out
pop
xor
mov
pushf
xor
or
fcoml
mul
jnp
push
out
rorl
incl
cmc
or
mov
ucomiss
cmp
or
stc
sbb
pop
cmc
inc
cmp
pop
dec
adc
or
mov
imul
and
lahf
es
out
imul
mov
pusha
aas
lret
sti
pop
scas
inc
adc
int
and
or
and
mov
jg
sarb
and
jb
push
sub
scas
scas
call
leave
sti
sahf
xor
sbb
mov
cld
dec
cmp
fidivl
loope
inc
jg
push
mov
enter
pop
adc
ds
jo
fsubr
push
jnp
jmp
aaa
push
push
or
rorl
sub
mov
mov
sub
shll
rorb
dec
inc
sub
mov
nop
jmp
jb
orl
aad
add
mov
ja
inc
xchg
xor
call
leave
int
mov
dec
pop
mov
bound
in
mov
aad
lret
xor
mov
pop
pop
inc
xor
or
test
or
fwait
mov
sbb
or
aas
lahf
fcmovne
jge
sub
enter
mov
cmc
je
mov
cli
and
pop
push
es
shlb
cmpsb
mov
fistpll
adc
outsl
sub
pop
push
mov
je
clc
repnz
out
sbb
mov
pop
pop
daa
mov
test
mov
mov
data16
xor
adc
mov
fldenv
jl
mov
or
and
push
aam
sub
sbb
dec
pop
imul
mov
es
push
cmc
sub
outsb
test
dec
jl
jbe
pop
repnz
mov
push
out
sub
add
adc
jae
mov
xlat
sub
test
mov
pop
push
cmp
push
jmp
js
fs
sub
push
inc
sub
sub
jmp
push
xchg
xor
push
stos
test
out
test
ficompl
mov
or
int
inc
sub
iret
loopne
es
dec
dec
fsqrt
xor
xlat
push
or
stc
push
ljmp
jno
sub
cmp
stos
jg
sub
xor
add
jg
cwtl
xchg
pop
aad
mov
mov
and
xor
pop
je
lret
lock
jle
mov
pop
mov
dec
js
scas
test
add
or
adc
mov
lods
ja
adc
aas
outsb
inc
ljmp
insl
add
lds
shrl
jp
dec
mov
outsl
test
cmc
sub
cmpsl
ds
jg
je
or
inc
mov
out
xor
movq
outsb
clc
jo
imul
std
add
ljmp
dec
jecxz
inc
fcomps
jnp
in
xor
pop
jae
mov
dec
pop
mov
push
int3
mov
into
int3
push
stos
inc
mov
leave
push
push
jne
je
cld
repz
stc
inc
sti
or
pop
mov
sbb
jns
aad
or
mov
mov
rol
and
add
es
xor
mov
out
pop
test
cmp
fucomp
add
aad
lods
inc
cmpsb
stos
cmp
bound
and
imul
dec
inc
mov
push
inc
fildl
mov
mov
pop
jne
jg
test
cmp
mov
pop
mov
in
outsb
or
push
mov
testb
mov
jnp
ret
imul
mov
out
pop
push
jns
shll
inc
push
shrl
xchg
gs
sbb
stos
fwait
add
loope
push
rorb
xchg
add
into
mov
mov
pop
es
push
jmp
arpl
xor
int
fstpt
andb
inc
stos
mov
nop
cmp
stc
pop
lret
push
mov
scas
sti
dec
xor
push
mov
xor
add
xchg
pusha
and
mov
orb
xchg
fldcw
lds
mov
shll
pop
and
or
sub
xchg
jbe
inc
notl
ss
push
std
xchg
or
ss
mov
adc
rolb
push
clc
add
xor
mov
ja
insb
jl
cwtl
cmpsl
jle
lods
mov
orl
push
pop
xlat
aam
mov
fcomip
outsb
popf
pop
call
jl
push
or
loope
shr
add
cs
shll
out
mov
add
int3
imul
jnp
xchg
sub
fwait
cmpsl
dec
icebp
comiss
repnz
stos
scas
pop
scas
test
add
fwait
adc
mov
adc
or
ss
nop
and
mov
push
fbstp
cs
push
outsb
dec
adc
mov
mov
mov
fmuls
fdivl
aad
xlat
add
dec
pop
scas
jp
sub
and
mov
sub
and
std
push
lock
mulb
ret
mov
or
test
iret
sub
in
imul
fwait
xor
cmp
addr16
mov
mov
adc
mov
mov
out
or
push
mov
fistl
xor
lea
dec
cli
lcall
sbb
inc
out
mov
xchg
mov
std
xchg
shrb
push
mov
sbb
sub
fwait
mov
out
jbe
and
insl
test
and
lcall
mov
dec
lret
rcll
rclb
or
pop
mov
rorb
cwtl
movsb
dec
ljmp
notl
inc
bound
movsb
lds
sub
dec
jb
lret
mov
add
adc
test
aad
fstps
sbbb
in
aas
or
xchg
or
sarl
ljmp
jbe
aaa
test
xchg
scas
pop
movsl
mov
cwtl
clc
arpl
mov
cmp
ror
mov
fistpll
xchg
xlat
outsb
pop
or
addr16
pushf
lret
repz
push
lods
fcomip
shrl
push
rol
xor
sbb
pop
sub
mov
xchg
enter
jo,pt
jnp
pusha
dec
and
jnp
scas
mov
test
or
das
nop
sub
pop
mov
adc
sbb
enter
fimuls
loopne
je
test
jnp
cmp
lock
sbb
and
rcl
ret
jmp
movsb
mov
mov
adc
jecxz
xor
mov
fidivl
pop
inc
mov
inc
xchg
in
daa
cmp
daa
sub
xor
xor
add
mov
pop
dec
into
adc
jmp
fwait
jbe
out
gs
outsl
fldln2
mov
enter
in
std
cwtl
mov
pop
insb
mov
in
jno
mov
aas
cli
mov
imul
xchg
mov
mov
ret
push
insl
lock
std
std
lret
mov
or
ss
out
sbb
dec
aam
mov
adc
outsb
outsl
out
gs
pushf
push
insl
scas
mov
lahf
shrl
add
sbb
sbb
into
enter
popa
sbb
pop
sub
call
daa
sub
shlb
push
lock
or
notl
cmpsl
in
jns
sbb
pop
sbb
mov
sub
or
call
pop
stc
mov
xchg
sbbl
cmp
jge
inc
or
mov
popf
pop
es
sbb
in
mov
mov
xchg
dec
xchg
dec
cmp
mov
add
adc
iret
jno
and
ljmp
mul
das
cwtl
dec
dec
cltd
hlt
adcb
mov
jo
mov
sbb
mov
cli
stos
pop
push
and
outsl
dec
lahf
mov
adcl
xor
and
fcoms
mov
imul
movhps
xchg
popa
inc
dec
fbstp
imul
mov
adc
xchg
inc
test
add
mov
sub
pop
fldl
mov
repz
out
jne
andb
fisubrl
mov
repnz
adc
push
clc
cli
adc
movd
data16
movsl
pop
imul
out
sub
pop
cmp
movsb
mov
addb
imul
popf
nop
loopne
out
test
insb
pop
fidivl
cmp
pop
jmp
adc
sbb
fisubrs
cmp
gs
addl
sbb
mov
insb
push
xchg
xlat
jns
xchg
mov
mov
push
sub
ficompl
jbe
insl
in
out
cmpsb
imul
ljmp
mov
add
or
mov
iret
aaa
cmp
jno
sti
lods
ljmp
in
pop
pop
mov
ret
sbb
xchg
cmp
cld
add
dec
mov
mov
int3
ficoms
cmp
dec
in
or
xchg
pop
shl
nop
add
pop
out
scas
jb
and
jb
fsubl
ss
popf
inc
inc
jmp
ja
and
sbb
sbb
lret
bound
jcxz
aam
jmp
iret
mov
aam
cmpsb
outsb
cmpsb
cmp
xor
add
lods
jmp
pop
shr
lea
xchg
sahf
stos
jne
cmp
movsb
sarb
stos
inc
shll
push
mov
and
or
cmp
test
jno
flds
xchg
les
pop
cmpsl
xchg
xor
xchg
popa
push
fdivl
stos
mov
jb
cli
rcll
jp
adc
lahf
jne
or
cs
sub
sti
int3
jae
sub
push
mov
mov
shll
movsb
arpl
inc
pop
cmp
cmp
sbb
cmp
cmp
movsl
addl
jnp
shrb
pop
repnz
inc
subb
mov
xchg
into
call
cmp
inc
inc
xor
popf
scas
ljmp
mov
push
ret
fildl
popa
enter
hlt
dec
imul
mov
cli
movsl
ds
xchg
add
repz
in
push
sahf
cs
mov
mov
das
into
pop
pop
out
stc
je
icebp
sbb
test
mov
mov
lods
mov
mov
sub
sarb
fnsave
int3
leave
mov
int3
fsubr
adc
in
pop
test
loopne
stos
mov
jg
jl
dec
adc
cmp
pop
xor
ljmp
push
filds
inc
sti
dec
push
dec
in
lods
xor
or
cmp
inc
out
into
in
and
cmp
inc
mov
imul
lret
mov
loop
xchg
sub
cmp
jb
lods
sti
stc
je
inc
rorb
cli
aaa
and
and
adc
mov
mov
jbe
lods
dec
hlt
addr16
pusha
mull
mov
lcall
and
cmp
scas
inc
lds
mov
in
inc
insb
daa
mov
insb
jg
xchg
pop
test
imul
sub
pushf
add
xchg
ljmp
mov
inc
frndint
or
adc
lahf
mov
cld
out
rorb
add
cmp
and
out
jns
mov
jp
sub
or
adc
in
enter
and
mov
iret
lds
iret
loop
in
out
test
stos
xchg
sbb
xor
data16
shrb
scas
or
mov
xor
popl
gs
adcb
or
sub
add
inc
inc
inc
mov
add
cmc
push
push
mov
stos
inc
jmp
sbb
cltd
pop
pushf
xor
cmp
adc
push
jmp
or
dec
pusha
adc
icebp
or
test
jecxz
jno
sbb
push
sub
add
sti
and
mov
and
inc
lods
movsl
mov
xchg
sbbb
jmp
stc
push
push
lods
mov
hlt
leave
pop
sbb
jg
cmp
sbb
xor
loop
pop
or
jns
dec
repz
push
jo
adc
mov
xchg
mov
mov
nop
sahf
push
jb
pop
out
pop
std
mov
xor
fcompl
ds
stc
adc
and
xor
jae
jmp
shlb
inc
bound
rolb
jecxz
mov
sbb
ja
iret
testb
cmp
arpl
add
fstps
dec
mov
rclb
mov
or
les
push
sbb
or
mov
popf
loopne
in
xor
sbb
push
je
js
in
dec
cltd
mov
push
insb
and
jmp
jne
adc
fstl
stos
xor
adc
mov
mov
xchg
sub
aas
ljmp
fs
shlb
ret
hlt
xchg
dec
addr16
aad
cwtl
repz
ficompl
pop
or
outsb
jno
mov
jo
push
test
sbb
adc
mov
adc
cmc
lods
pop
movsb
mov
scas
xchg
jb
pop
xor
xchg
and
push
ja
inc
jae
lea
gs
pop
mov
in
push
lcall
fidivs
xchg
frstor
ljmp
push
pop
xor
outsb
addr16
movsl
int
mov
sbb
jl
jno
loop
aas
xchg
dec
jo
popa
iret
call
jmp
or
sarb
jne
jl
into
repz
ret
jmp
lahf
cmp
out
xor
aad
mov
mov
ret
pop
les
xor
ret
repz
mov
ret
and
add
inc
lods
rcrl
ja
sbb
cwtl
inc
jp
bound
mov
ja
push
pop
clc
jnp
ret
jle
rorl
mov
mov
fbstp
imul
dec
imul
mov
sahf
xchg
and
mov
or
jae
xchg
lret
and
scas
jg
loopne
stos
inc
js
cmpsb
sbbl
aam
mov
adc
sbb
out
sbb
mov
popa
loop
mov
nop
inc
gs
adc
loopne
insb
and
shll
pop
sti
iret
mov
mov
loope
aam
test
lret
cltd
jl
fisubrl
mov
pop
addr16
mov
cmpsl
xor
test
mov
insl
cmp
pop
mov
mov
jno
shrb
mov
mov
insl
in
and
xor
aad
clc
or
test
sbb
push
out
es
add
sub
loopne
mov
xchg
push
fdivrs
and
fimull
jge
push
mov
or
adc
fidivrl
jno
int3
and
inc
inc
xlat
jl
mov
sbbb
testb
pop
fsubl
dec
inc
lods
cmp
and
or
aam
loopne
inc
ds
imull
lret
mov
mov
adc
imul
xor
sti
and
push
sbb
pop
out
xchg
and
adc
sub
fldcw
xchg
cli
lods
mov
fidivl
xchg
shll
mov
dec
fs
jp
pop
xor
pusha
test
cmc
push
aad
cmpsb
xchg
fsubrp
ret
ja
cmp
xor
cmp
dec
ficompl
shlb
movsb
inc
push
pop
mov
cli
shlb
call
sub
hlt
pop
repz
dec
mov
test
fisttpll
push
add
cwtl
mov
inc
jbe
sub
js
mov
loop
into
call
add
jl
or
lods
popa
aam
ds
rorb
int
mov
push
jmp
adcl
jno
iret
fnstsw
call
and
ficoms
mov
cmpsl
mov
pusha
clc
nop
adc
push
daa
and
les
fdivs
jg
cmp
mov
ficoml
pop
mov
or
shlb
imul
lret
xchg
mov
pop
rclb
loope
out
imul
jne
stc
out
out
sub
xchg
imul
or
test
lea
rcl
cmp
pop
mov
pop
cmpsb
aad
fadds
mov
iret
fs
add
aaa
mov
adc
sbb
test
in
mov
jmp
fdivl
call
or
in
inc
sbbl
cltd
movsb
mov
mov
push
movsl
xchg
xlat
or
jnp
cmp
or
pop
lods
in
pop
mov
mov
sub
xlat
mov
mov
jo
or
or
jns
shll
into
repz
imul
and
aam
jb
add
mov
mov
iret
es
sbb
inc
xchg
imul
or
push
rclb
xor
cmp
mov
daa
fidivs
adc
roll
pop
icebp
popf
xor
sbb
sub
and
into
add
lds
idivb
mov
sbb
dec
add
out
rcl
jnp
stc
push
lods
mov
pop
adc
pop
loop
call
mov
adc
mov
test
push
adc
pop
inc
mov
jns
inc
ror
jp
gs
xchg
or
hlt
push
mov
arpl
popf
dec
addr16
cmp
xlat
mov
ss
decl
xchg
into
dec
fcoml
pop
imul
in
les
sti
leave
test
jb
pop
negb
test
jge
aam
adc
repnz
rcrb
xchg
aas
or
and
and
jae
mov
cli
pop
aas
mov
arpl
in
out
loopne
sbb
pop
sbb
je
aas
arpl
jae
fsubrs
mov
testb
pop
adc
push
int
lods
lds
jno
mov
or
rcrl
or
cwtl
jp
jo
fucomp
adcl
xchg
add
outsl
jle
dec
xchg
jns
mov
or
fstl
xor
mov
push
outsb
hlt
jbe
dec
js
xor
faddp
push
fdivl
popa
push
jmp
int3
sbb
dec
push
daa
mov
icebp
daa
push
int3
xchg
adc
mov
inc
add
enter
xor
lret
test
pop
add
or
xchg
lods
mov
xor
daa
data16
sub
mov
ror
sbb
aad
popa
inc
loopne
inc
pop
xor
mov
je
dec
ret
push
sti
test
pushf
testl
sbb
adc
cmp
pushf
jno
dec
pop
ret
imul
adc
cmpsb
sti
inc
inc
add
xchg
icebp
lds
mov
mov
xchg
push
inc
mov
cmp
sbb
mov
fcoml
ret
sbb
jbe
sub
sahf
xor
das
pop
les
int
out
dec
mov
dec
iret
inc
addr16
and
push
std
pop
inc
test
jne
cmovbe
inc
mov
add
cmp
xor
insb
imul
int3
or
xchg
mov
jmp
cs
adcl
aaa
xchg
dec
popf
int
lods
ret
sub
imul
jl
dec
incb
cmp
lea
je
popf
ljmp
or
in
inc
or
pop
aam
or
xchg
pop
lcall
cmp
or
movsl
cwtl
adcl
mov
das
repz
sbb
lahf
dec
iret
jns
mov
in
mov
push
add
push
aas
pop
roll
cmp
test
or
add
mov
xor
jo
dec
movsl
lret
jo
pop
ret
xor
jecxz
bound
jecxz
mov
movsl
mov
nop
out
popf
add
sbb
jp
adcl
cli
test
pop
dec
push
fwait
sti
and
icebp
mov
shll
add
adcl
and
je
cmpsl
inc
jns
dec
les
cmp
loop
out
shlb
jle
les
aad
jbe
jge
sub
jno
sub
fs
out
inc
mov
inc
push
inc
and
push
adc
ss
ss
adc
mov
sti
xchg
push
cmp
sbb
xlat
test
stc
xchg
mov
or
mov
shr
std
add
sbb
adc
inc
pop
pop
xchg
mov
outsb
add
stc
xchg
mov
loope
repnz
adc
jl
xor
loopne
ljmp
lcall
push
enter
mov
jg
pop
ret
je
add
cmp
xor
mov
jp
mov
mov
inc
std
add
iret
lret
xor
push
mov
lds
std
ret
mov
mov
ds
inc
ret
icebp
pop
shll
pop
cli
outsb
test
inc
adc
outsb
and
cwtl
push
pop
jmp
ljmp
cs
inc
pop
xor
mov
lds
test
jmp
stos
cwtl
or
std
mov
pop
imul
or
push
dec
xchg
jp
les
lret
add
cmp
test
mov
jne
mov
sub
mov
popf
lret
outsb
fwait
cld
cli
cmp
mulb
orl
sar
dec
lods
or
mov
jmp
aaa
test
lret
fsubrl
cmp
or
dec
enter
push
ret
pop
shrb
pop
sahf
lahf
mov
and
xchg
loopne
in
inc
out
mov
pop
enter
pop
jmp
insl
jnp
and
mov
vphsubwd
or
jo
stc
fdivrp
cmp
sub
std
movsb
push
ljmp
sbb
and
jp
cld
sub
dec
mov
lcall
data16
mov
xchg
xor
mov
jg
xor
lock
add
and
shlb
sub
xchg
lahf
daa
out
and
insl
test
pop
jge
mov
adc
adc
sbb
push
popa
cmp
xchg
cmp
leave
jp
stc
outsb
popa
fstps
roll
je
push
pop
sbb
hlt
enter
lock
cld
adc
imul
or
loopne
and
in
push
ret
push
mov
jns
mov
test
xchg
daa
frstor
test
inc
imulb
mov
jmp
aaa
mov
dec
fimuls
sub
in
or
push
push
add
pop
loop
iret
sub
xor
push
nop
mov
fwait
dec
fcmove
and
push
repnz
nop
push
sahf
in
mov
daa
push
rcrl
stos
dec
in
xor
mov
xor
pusha
xchg
data16
jle
push
sbb
xor
stc
add
sub
inc
adc
sbb
mov
in
xor
pop
cwtl
mov
dec
stos
out
movl
sahf
test
fdivrl
fisttps
xchg
adc
mov
xchg
sub
add
xor
xor
sub
xor
rorb
lea
into
fidivrl
jo
mov
jo
inc
sub
enter
jp
push
lods
stos
jp
call
in
push
pop
adc
rorb
mov
adc
insl
mov
sub
pop
fadds
stos
sub
mov
js
jmp
mov
les
push
out
lcall
jae
cmpsl
out
js
cmpl
jbe
inc
test
lea
lods
dec
mov
jmp
push
sub
or
out
stc
pop
jmp
inc
xchg
push
dec
addr16
imul
dec
test
xchg
lods
and
shrb
push
xor
lcall
xchg
aaa
or
dec
dec
arpl
jno
push
mov
adc
and
add
jbe
sbb
jb
cld
popa
xchg
xor
mov
inc
push
jns
add
or
dec
ss
fmuls
mov
jmp
shlb
les
add
in
mov
jp
xchg
lods
adc
sti
push
dec
hlt
mov
cld
stos
data16
out
js
add
leave
xor
outsb
ficoml
push
mov
jle
adc
and
mov
lret
inc
loop
fistps
repnz
repz
cmc
add
dec
adc
popf
and
jns
aad
ss
scas
aas
or
cltd
inc
cmp
lahf
leave
pusha
shrb
loopne
jb
jg
out
sbb
test
sub
in
nop
mov
mov
and
out
xchg
dec
cmc
outsb
adc
scas
inc
lods
dec
xchg
imul
pop
rcr
outsl
jge
adc
nop
mov
xchg
inc
in
push
cmp
ljmp
mov
add
insl
cmp
jmp
sbb
inc
dec
xorl
and
pop
mov
fcmovne
sbb
dec
add
in
mov
pop
push
out
mov
cmc
fildll
sub
lret
dec
push
std
shrb
shll
enter
xchg
add
cld
dec
aam
adcl
repnz
and
pop
cmpsl
aad
bound
pop
je
mov
imul
adc
data16
mov
iret
test
xor
push
sub
mov
std
inc
imul
pop
cmp
pop
mov
div
test
adc
jbe
sbbb
xchg
rolb
fcmovnb
sub
mov
push
jge
test
outsb
push
inc
push
cmp
pop
dec
mov
xchg
sbb
mov
ret
mov
data16
test
lcall
mov
add
jge
pop
push
decl
andl
jmp
mov
data16
lret
negb
and
cmpsb
ds
xchg
xor
xchg
inc
push
adc
aad
out
addr16
sbb
pop
inc
xchg
inc
xchg
je
enter
je
mov
lahf
stos
push
insl
mov
dec
pop
add
inc
xchg
inc
dec
mov
xchg
dec
repz
xor
cmp
mov
sahf
jmp
and
xor
fcoms
scas
or
jns
je
jno
cmp
mov
mov
outsb
rcrl
adc
mov
or
jp
bound
sbb
dec
stos
sub
adc
mov
pop
add
pop
inc
pop
mov
mov
jge
add
xchg
mov
pop
cmp
jnp
xchg
test
popf
jo
stos
fisubrl
loop
lret
mov
in
mov
xorb
icebp
insb
stos
fsubrp
dec
mov
add
add
in
xchg
jp
test
imul
dec
jmp
xchg
mov
xor
ja
xchg
xor
xchg
arpl
lahf
and
fldcw
mov
sub
ds
daa
push
packuswb
in
sub
lods
mov
or
mov
xchg
rcl
ret
dec
add
les
mov
push
dec
icebp
sub
dec
ja
lea
fidivrl
jno
cmpsb
sub
push
dec
add
cmpsl
push
das
mov
divb
ljmp
pushf
mov
mov
and
cmc
je
daa
nop
rolb
loop
dec
loop
add
out
xchg
jl
test
sub
icebp
xchg
jne
bound
movsw
sbb
movsb
dec
dec
pop
jnp
test
cmpsb
cmp
fistpll
cmp
pusha
outsb
xchg
test
mov
rep
pop
mov
insl
cmpsl
cmpl
mov
add
test
jb
scas
or
andl
jno
inc
rcl
inc
clc
inc
cli
cmove
call
or
push
or
dec
loopne
ljmp
dec
xor
je
pop
outsl
jle
cld
cltd
adc
sbb
out
je
aas
test
mov
mov
imul
in
and
jmp
flds
lahf
imul
int
lahf
lret
bound
cmpsl
jmp
mov
sbb
ljmp
lods
sti
pop
jo
mov
dec
mov
int3
pop
lods
mov
mov
frstor
inc
mov
pop
xchg
xchg
adc
xlat
mov
push
push
mov
jne
bound
int
into
jb
loop
out
pop
clc
ret
xchg
in
cmpsl
stc
push
popa
dec
icebp
xchg
jl
insb
into
mov
mov
fadds
pop
sub
push
mov
cld
push
xor
pop
fs
cltd
sarb
or
mov
push
movsl
aam
rcrl
mov
aaa
dec
pop
stc
mov
out
testl
inc
cltd
ss
push
mov
movsl
dec
jmp
mov
mov
mov
lcall
cmp
lods
imul
shrb
out
es
je
stc
mov
orb
data16
pop
add
aas
xchg
inc
jbe
adc
push
mov
push
das
jns
xor
sub
and
out
jge
fcoml
lahf
pop
sub
and
dec
out
rcr
outsl
add
loop
sbb
sub
out
jns
pop
stos
call
insb
repz
mov
or
sarb
sbb
jne
mov
cpuid
les
rcl
and
jmp
dec
scas
add
jb
lods
jl
jno
cmp
or
jno
sub
sub
and
mov
aam
insl
inc
das
add
mov
and
nop
jo
mov
bnd
and
mov
cmp
sub
hlt
adc
lods
test
int3
or
and
ljmp
addr16
or
or
xor
pop
push
adc
or
push
or
pop
js
dec
fnsave
adc
push
scas
inc
les
push
jno
cmp
push
push
dec
je
fdivrl
daa
mov
and
lods
jb
mov
xchg
jecxz
mov
dec
test
mov
fcmovnb
mov
dec
or
repz
pop
jae
cmc
mov
pop
xchg
scas
orl
shlb
cmp
xchg
cwtl
bound
mov
ret
sahf
dec
dec
les
movsb
addr16
pop
add
sbb
sub
loop
mov
movd
clc
loop
aaa
adc
mov
popf
icebp
pop
in
lock
daa
ret
cltd
and
les
enter
out
scas
std
jmp
xlat
iret
sub
aas
stc
xor
ljmp
xchg
in
jge
jl
fisubs
outsl
loopne
sbb
sub
outsl
sbb
test
cmp
and
dec
mov
add
popl
sahf
rorl
or
xor
addr16
cltd
mov
or
mov
fisubl
pusha
and
ja,pn
xchg
js
mov
jge
pop
and
or
fs
mov
push
mov
adc
cmp
sub
stc
mov
sbb
icebp
adc
dec
mov
push
pushf
notl
pop
rcl
lcall
pop
and
mov
fcoms
adcb
add
or
adc
clc
je
cmp
adc
mov
lcall
loope
push
bound
cmp
nop
mov
jnp
in
movsb
rcrb
mov
jno
or
pop
loope
mov
lods
push
rcr
int3
ficomps
faddl
add
inc
push
jmp
adc
jmp
jle
cli
xchg
mov
cmpsl
mov
mov
fisubl
mov
push
fs
bound
push
lret
int3
cmp
sub
cmp
jne
dec
add
inc
hlt
adc
jno
in
nop
icebp
mov
mov
fdivrl
ret
sub
in
gs
adc
js
sahf
jecxz
cltd
das
cmp
sub
inc
or
adc
mov
bound
or
daa
out
or
jo
pop
or
mov
jge
push
loopne
scas
lret
pop
insb
mov
lcall
push
jb
faddl
je
or
xchg
cmp
sbb
stc
push
loopne
mov
lock
fsubr
stos
sub
fistpl
xchg
adc
bound
cmpsb
pop
arpl
lret
jg
sub
addl
mov
mov
mov
xchg
mov
dec
fadd
jmp
out
xchg
mov
xlat
fcmovbe
popf
xor
aaa
fwait
pop
ss
pushf
addr16
std
lods
int
push
inc
and
push
dec
lahf
mov
lret
mov
adc
jb
stos
add
aad
inc
cmp
pop
outsl
jae
data16
out
jp
add
js
and
jge
rcll
xor
pop
test
add
and
sbb
mov
add
jae
mov
and
mov
shll
xchg
dec
jbe
mov
pop
out
jl
add
gs
lret
or
pop
movsl
movsl
ret
jae
mov
insl
inc
cwtl
daa
cmp
lods
cmp
mov
push
add
pop
inc
scas
sbb
std
jp
adc
jnp
adc
scas
test
movsl
push
inc
fwait
sti
mov
adc
cltd
add
cmpsl
dec
pop
xor
ret
dec
xchg
cli
push
mov
jl
daa
push
mov
cmp
fsts
outsl
daa
loop
into
xchg
daa
or
enter
icebp
fwait
or
xchg
push
sahf
stos
mov
dec
dec
mov
jge
pop
scas
push
pop
jae
cld
pop
ret
xchg
add
notl
push
insl
inc
dec
fbstp
fs
imul
shl
out
aas
jl
dec
mov
dec
xorl
cmp
sub
stos
jmp
sub
repz
xchg
sub
fstpl
xor
ja
adc
pop
sbb
dec
iret
jp
adc
sub
jle
aad
dec
sub
jno
xor
andb
ficoms
jbe
push
js
insb
rcr
jge
xchg
movl
xorl
dec
fistpl
mov
clc
imul
in
adcb
inc
out
mov
xchg
xor
xor
dec
adc
mov
lock
rclb
cmp
push
mov
jno
movsl
push
and
mov
loopne
sub
cs
int
in
stc
sub
inc
mov
xlat
out
adc
sub
aad
imul
stos
pop
jb
xor
lods
arpl
mov
outsb
xchg
call
or
inc
out
popa
inc
rorb
nop
xlat
jne
roll
call
push
jmp
insl
push
push
fwait
xchg
push
fidivrl
popf
stc
mov
mov
inc
cmp
stos
lock
scas
pop
rcll
cmp
pop
out
mov
ljmp
add
jbe
out
sbb
in
mov
sub
xchg
fildl
test
xorb
movsb
or
pop
or
dec
cmp
jbe
cmp
andl
push
jno
int
pop
xor
mov
int3
daa
popa
adc
or
xor
lcall
sbb
mov
fstps
or
dec
arpl
pop
xor
dec
dec
xchg
mov
js
add
movsb
addr16
mov
add
mov
out
sub
xor
mov
cli
mov
add
add
mov
enter
test
jbe
push
add
lret
orl
out
lods
arpl
je
clc
subl
pop
or
jne
pop
andl
mov
push
mov
lahf
xor
shrl
addl
shrl
orb
das
fldcw
mov
lahf
jo
mov
inc
push
das
loopne
aam
xchg
jecxz
lods
out
add
dec
loope
scas
movsb
pop
sbb
sub
mov
dec
pop
xchg
std
or
adc
jmp
pop
xor
jmp
stos
repz
pop
pop
mov
pushf
into
test
and
test
jb
mov
xorb
leave
cltd
mov
or
dec
adc
out
popf
pushl
ret
les
adc
push
in
inc
iret
jno
inc
ss
fsubr
mov
inc
sub
sub
lods
sbb
jle
sbb
ja
lock
fdivrl
or
inc
adc
cmp
push
jb
test
adc
je
sbb
adc
aaa
stos
imul
decl
ret
lahf
jg
jmp
cld
in
pop
cmpsb
or
cmpl
outsb
mov
pop
movsb
icebp
jns
sub
add
mov
xor
bnd
in
das
ret
adc
test
pop
daa
mov
pop
in
jge
and
push
fcmovnb
int
repz
lea
andb
gs
mov
pop
cmp
int
arpl
fimull
mov
mov
ljmp
call
pop
int
jecxz
add
imul
push
sbb
jnp
sar
xor
dec
dec
ds
push
popf
and
out
xchg
or
cmpsl
dec
dec
loope
mov
mov
xorl
cmp
sbb
pop
mov
jne
stos
fwait
loopne
stos
jae
mov
xchg
mov
js
arpl
push
xchg
push
jns
push
stos
mov
dec
loop
aad
insb
xchg
push
push
inc
shl
mov
xchg
aad
mov
add
insb
mov
dec
cmp
jp
push
movsl
xchg
push
jmp
mov
dec
ficoml
les
sbb
popf
js
mov
or
sbb
adc
adc
aad
cmp
or
add
shlb
inc
and
dec
xchg
inc
or
jo
push
mov
push
mov
fisttpl
xor
push
pop
lret
inc
fdivrs
lahf
jno
lahf
pop
fiadds
mov
cwtl
imul
dec
pusha
dec
cwtl
fs
mov
fnstenv
or
pop
das
xlat
fdivr
iret
out
bound
lods
cld
movsb
adc
insb
push
mov
pushf
push
mov
mov
rorb
lock
dec
mov
mov
pop
fcmove
pop
fistpll
adc
ret
cmp
in
jbe
adc
mov
adc
je
push
and
mov
lcall
in
sahf
or
mov
xchg
sbb
and
mov
jg
pop
jl
ja
out
das
addr16
cltd
jo
ret
pop
imul
cli
push
and
mov
jno
cmp
fsub
lret
cmp
dec
dec
int3
xchg
inc
data16
movsb
cli
enter
adc
ljmp
or
lock
jne
cmp
int3
out
jo
cmpsl
mov
into
enter
das
or
jmp
lock
inc
sbb
inc
mov
inc
nop
out
cmp
jbe
out
addr16
fs
jmp
nop
test
cmp
sar
repnz
cmp
aam
cmp
mov
pop
loop
pop
pop
dec
jge
repnz
sarl
adc
loop
popa
xchg
pop
sbb
adc
push
lock
cld
sub
lret
loop
mov
or
cmp
pop
dec
push
nop
addr16
jle
bound
sbb
lea
mov
rcrb
aas
popa
clc
pop
or
or
jle
mov
enter
aam
test
xchg
movsb
dec
ficomps
adc
inc
mov
jbe
or
mov
push
nop
adc
mov
inc
push
xchg
dec
mov
icebp
out
cwtl
lods
pusha
dec
cmpsl
mov
mov
je
mov
pusha
mov
cmpsb
xor
rcrb
dec
inc
sahf
clc
xchg
mov
hlt
leave
in
les
cmp
jnp
jecxz
push
jnp
test
pop
imul
lods
jg
loope
in
aad
push
sbb
mov
fwait
or
and
pop
aam
fiaddl
dec
test
cmpsb
ss
mov
adc
pop
xchg
gs
mov
push
ret
and
mov
pusha
inc
adc
xor
pop
hlt
push
fsubrp
add
in
push
es
int
cmpsl
bound
sbb
mov
cwtl
lret
lret
lahf
fstpl
cmc
dec
gs
xchg
jl
shlb
ja
push
fcomps
or
dec
dec
dec
shll
mov
shrb
stos
shlb
mov
gs
push
jp
xchg
adc
je
into
pop
xor
iret
mov
pop
inc
xchg
ficompl
cmc
add
insl
inc
jno
lock
repz
dec
inc
xor
roll
and
aaa
ss
push
insl
ja
push
inc
inc
pop
test
fadds
ja
aam
dec
out
test
sbb
jmp
sub
lds
jmp
and
pop
push
loopne
jl
cmpsl
xchg
out
jmp
sub
loopne
push
int
pop
pop
mov
push
clc
enter
int3
add
iret
lret
flds
imul
xchg
into
mov
mov
jl
mov
insl
cmpsl
xchg
xchg
xor
xchg
mov
aas
jecxz
stc
clc
pushf
and
repz
sub
aad
sbbl
fnstcw
mov
dec
in
add
out
lret
inc
test
nop
cmpsl
dec
stos
jmp
shll
pop
xchg
adc
aas
test
mov
test
pop
jne
mov
in
stos
imul
idivb
push
stos
jl
or
cwtl
xchg
lret
lcall
leave
and
and
mov
xchg
add
add
je
mov
pop
js
loop
std
dec
fbstp
or
mov
or
sarl
xchg
dec
jbe
fwait
push
mov
xchg
sub
mov
jecxz
ja
rcrl
mov
out
ds
cli
in
das
mov
clc
scas
out
pop
push
lcall
in
mov
pop
push
mov
inc
ds
mov
jmp
lds
jecxz
aam
xchg
add
pop
dec
sbb
xchg
mov
adc
in
dec
jns
cmp
mov
roll
icebp
inc
shrl
addr16
int3
sub
std
int3
out
push
mov
xor
or
adc
pop
push
test
iret
aas
jg
iret
nop
outsl
scas
or
pop
cmpb
cmpsl
movsb
sbbl
es
das
sbb
lret
xchg
mov
push
push
movsl
add
in
lret
rcll
nop
pusha
jge,pn
jmp
sti
push
mov
stc
push
jmp
mov
jo
dec
or
pop
lods
jo
dec
xchg
add
je
push
in
test
clc
loope
into
cld
pop
ja
movsb
stos
lds
int3
cmpsb
inc
popf
xlat
add
jle
insl
test
push
pop
push
cmp
jp
scas
sub
xor
addr16
sti
shlb
add
jo
ljmp
ja
sub
sbb
test
xchg
test
arpl
cli
sbb
fwait
cmp
and
xchg
nop
inc
ja
std
cmpsb
rcrb
push
outsl
test
push
sbb
inc
das
add
inc
insb
jno
rcrl
mov
ficoms
adc
pop
cmp
add
pusha
jne
hlt
or
inc
inc
insl
xchg
test
mov
sbbb
mov
lret
cmp
inc
fcom
mov
mov
jae
cmpb
cmp
stos
inc
pop
subl
sti
out
push
xchg
xor
in
sbb
call
ss
sbb
adc
fistps
add
adc
test
mov
dec
or
jnp
adc
int3
into
scas
inc
mov
sub
es
adcl
rcr
addl
xor
sub
pop
ds
divb
dec
jnp
lcall
dec
fidivs
out
cli
xchg
fadds
or
arpl
ds
addr16
jl
mov
xor
inc
dec
stos
add
and
xchg
pop
pop
cmpsb
cmp
clc
iret
add
mov
rep
leave
jne
fcomps
ja
out
xchg
fcompl
mov
push
push
xchg
cmc
cld
dec
add
pusha
mov
pop
mov
stos
in
push
das
mov
addl
dec
loope
mov
push
out
test
inc
aas
adc
xor
xor
cmp
hlt
fwait
xchg
test
aaa
push
outsb
sbb
sti
or
fcmove
rcrb
push
shl
cli
xchg
shlb
add
enter
mov
ret
mov
mov
adc
in
popf
sub
cmp
mov
mov
lds
out
push
sahf
xchg
mov
adc
jecxz
dec
mov
loop
cmp
add
and
mov
ja
and
sarb
pop
ret
test
dec
in
and
pop
xor
xchg
mov
rcrl
dec
jp
adc
xchg
adc
mov
loop
or
sub
lahf
inc
cmc
push
inc
lods
xor
ret
rcll
xchg
fimuls
adc
inc
out
dec
icebp
cld
cmp
xchg
insl
jl
pop
lcall
loopne
add
andl
dec
addr16
leave
sbb
or
xor
daa
mov
push
push
jns
or
arpl
pop
das
inc
and
xor
sub
mov
daa
mov
sub
pop
lcall
jo
aam
into
hlt
dec
ja
sub
inc
iret
scas
loope
lds
push
cwtl
xor
ljmp
dec
dec
add
xchg
adc
cltd
or
cltd
mov
lea
add
aaa
add
daa
repnz
nop
push
push
push
lcall
idivl
pushf
out
dec
jle
fbld
ds
dec
clc
mov
inc
rcrb
mov
aaa
loop
fisubrs
sbb
fstl
xchg
fildll
push
call
push
xor
mov
shl
es
in
jnp
rclb
mov
mov
iret
loop
push
pop
dec
push
stos
mov
adc
test
inc
mov
xor
adc
cmpsl
movsb
test
ret
mov
and
scas
pop
or
xor
ljmp
lret
mov
pop
mov
or
inc
std
ja
outsb
rol
call
mov
push
push
or
insb
mov
mov
rcrb
fistl
in
popf
dec
or
dec
ret
mov
sub
lahf
or
fistl
jmp
stos
inc
imul
in
outsl
scas
mov
insl
hlt
push
cmp
jg
dec
das
mov
push
xchg
lcall
dec
in
pop
aas
and
into
lret
and
mov
pop
mov
mov
in
adc
icebp
cmpxchg
lods
mov
xor
sahf
xchg
mov
pop
je
sbb
mov
xor
xchg
and
in
sbb
popf
insb
out
stos
mov
push
and
push
mov
or
daa
sbb
jmp
sbbl
mov
pop
pop
adc
add
test
inc
cli
pusha
out
stos
adc
or
imul
xchg
inc
mov
popa
xor
fistps
repnz
cmp
adc
loop
leave
out
inc
in
arpl
push
cwtl
jno
dec
icebp
popf
test
cmp
pop
sub
pop
push
shrl
push
pusha
mov
testb
leave
sub
test
sub
bound
out
jl
sti
jb
pop
jle
mov
popf
mov
sahf
push
popf
iret
jne
ja
push
push
incb
fcompl
push
mov
cld
push
mov
dec
repnz
loopne
addr16
cltd
enter
xchg
fbstp
dec
jecxz
sub
imul
out
dec
pusha
pop
data16
mov
xchg
lcall
lock
arpl
pop
lea
pop
cld
out
jl,pn
in
cltd
sahf
mov
add
orl
xchg
pop
mov
sbb
insb
fistpll
push
inc
imul
ficoms
push
sbb
cmp
ss
pop
dec
aaa
push
or
gs
mov
cmc
fcomi
scas
mov
rcrb
ftst
and
shl
mov
mov
add
pop
mov
lods
leave
aas
jno
icebp
ljmp
push
mov
fisubs
subb
jne
cmpsl
xor
aas
xlat
jae
pop
filds
jle
add
mov
add
jns
pop
imul
pop
shrb
jbe
in
inc
or
call
lahf
mov
in
test
or
aaa
mov
mov
jbe
and
push
stos
cmp
shll
insb
inc
pop
test
shrl
jae
push
out
mov
adc
sbb
jo
fidivrs
add
or
popf
popa
push
je
outsl
inc
jmp
out
pop
pop
outsl
into
jmp
leave
push
fidivrs
divb
xlat
cmp
stc
je
adc
popa
inc
xor
xchg
xlat
daa
out
jo
cmpl
push
fsubl
push
xor
ja
insl
push
ljmp
jno
mov
imul
insb
mov
sbb
xchg
xchg
arpl
ficoms
decb
loop
push
or
and
adc
pop
jle
sub
cli
push
pop
imul
js
xchg
push
push
lds
lret
cmpsb
decl
sub
inc
push
aad
js
add
fwait
aad
dec
and
bound
mov
sbb
dec
movsl
and
pop
sub
inc
divb
sti
packssdw
ljmp
jb
adc
jbe
jg
loop
leave
inc
inc
lods
hlt
arpl
out
adc
dec
loope
aas
ret
icebp
push
mov
cmp
sti
jle
dec
popf
and
in
jo
lret
imul
cmc
fsubr
scas
test
in
push
pop
mov
inc
int
aaa
dec
fs
pop
mov
sbb
sarl
mov
mov
sub
add
iret
fs
dec
dec
aad
bound
jo
push
push
fwait
xor
in
jb
in
pop
mov
lds
xor
and
cwtl
repz
push
stos
daa
mov
insl
add
mov
mov
cmp
repnz
out
int3
pushf
aaa
push
std
in
push
shlb
xor
cltd
or
cmp
es
mov
pop
call
push
inc
and
jo
mov
or
cmp
push
enter
push
inc
lahf
mov
pop
cmpl
fdivp
xor
js
out
stos
cli
xchg
lds
fstps
push
in
xor
pop
cmp
push
in
lcall
or
xlat
aas
jns
xchg
scas
mov
xchg
or
jne
adc
add
loopne
and
mov
inc
in
push
sahf
mov
shll
sub
mov
add
xor
sub
shlb
scas
or
ljmp
add
inc
loopne
imul
adc
adc
jb
pusha
mull
mov
sbb
loope
cs
pusha
mov
inc
bound
mov
loopne
mov
icebp
xchg
sbb
jo
cmpl
fists
movb
dec
or
dec
mov
dec
push
sub
xor
or
pop
mov
fucom
push
mov
fnstcw
mov
enter
ret
sub
fldt
jno
scas
xchg
loopne,pn
mov
pushf
jno
int3
mov
inc
and
sbb
add
push
fdivrp
cmp
add
xor
xchg
jno
mov
sahf
and
aam
jle
mov
mov
lock
and
rol
pop
jne
cld
xor
sbb
and
jne
sub
dec
mov
fdivrs
fldl
fdivrs
add
mov
xchg
insl
addl
mov
jge
in
jmp
xor
sbb
arpl
js
insl
add
psrlq
testb
pop
mov
inc
push
cmp
pop
lahf
dec
js
xor
sub
fucomip
jnp
lahf
rolb
and
dec
dec
inc
xlat
cmp
lcall
adc
jb
cltd
mov
test
insl
push
imul
mov
or
fisttpl
shl
movsb
lods
push
in
cltd
gs
ret
lods
cltd
std
iret
in
pop
out
xchg
dec
ret
out
jbe
shlb
xchg
add
nop
adc
mov
dec
mov
add
out
lahf
fcmovbe
sbb
xor
in
inc
cmpsl
push
pop
push
outsb
mov
push
jo
inc
mov
iret
push
inc
arpl
push
out
push
cmp
sbb
jmp
popl
add
sarb
push
cmp
aad
adc
pusha
lahf
fbstp
ret
adc
push
cmpl
movsb
mov
imul
pushf
cmp
or
daa
fimull
and
or
fstpl
or
dec
roll
jns
pop
adc
jg
daa
mov
stos
int3
scas
or
sahf
or
cld
aas
repnz
or
jnp
sub
pop
xchg
adc
jns
or
sub
xchg
pop
or
gs
xor
xchg
xchg
fidivl
and
xor
mov
in
pop
xor
fsubs
in
xor
std
add
mov
cwtl
mov
add
dec
sarb
add
cmp
inc
xlat
jmp
aad
mov
and
push
pop
pushf
rcrl
inc
pushf
or
test
loopne
mov
ja
scas
insb
enter
pop
repnz
xchg
dec
or
mov
push
nop
mov
shrl
and
xchg
data16
sahf
xchg
sbb
adc
xchg
xor
push
jge
addl
popf
out
or
rcll
jmp
xchg
lcall
lahf
add
dec
jg
fwait
lods
sbb
push
xchg
push
fcomip
and
fbstp
lret
or
daa
mov
xor
cmpb
xchg
lods
ljmp
adc
push
and
sub
movsl
lock
aad
jbe
xchg
out
xor
mov
pop
or
mov
cld
cmp
pavgw
cmp
jbe
inc
loop
inc
push
lret
inc
ss
int
popa
aam
xor
inc
push
inc
mov
push
inc
data16
adc
ret
fdivp
cli
adc
mov
jecxz
xchg
sbb
xor
addl
pop
jmp
sahf
clc
sbb
bound
mov
arpl
or
push
repz
test
lret
push
sbb
add
addb
or
ret
es
mov
xchg
jg
sub
mov
xchg
loop
popf
gs
sbb
rcrb
fs
test
xchg
insl
rclb
fists
je
bound
mov
out
mov
jae
xchg
pop
adc
out
cli
or
jg
repnz
cmp
in
xchg
add
jge
pop
in
cmpb
popa
sti
or
pop
lock
das
pop
sahf
mov
sbb
push
mov
push
outsb
jb
sbb
into
insl
fstpl
mov
and
sti
push
rolb
sbb
xor
lret
movl
lret
mov
and
pop
add
inc
pop
fsubrs
sarb
sub
xchg
negb
sub
jns
clc
jge
rcll
dec
or
das
fs
jbe
sub
rcl
je
pop
cmc
adc
aaa
add
gs
jp
scas
cmpsb
mov
into
out
add
adc
mov
scas
insl
xchg
dec
incl
add
js
jb
rcrl
dec
loopne
aas
mov
out
lahf
ret
and
sti
les
push
pop
sub
sti
loop
sub
sub
pop
xor
add
push
xchg
sub
cmc
lods
xchg
movsb
add
and
fidivrl
pusha
xor
in
stc
adc
sub
rorl
push
sub
dec
enter
mov
mov
fwait
and
adc
out
lret
mov
in
pop
push
ljmp
jno
movsb
pop
notl
push
test
inc
seta
aaa
push
jp
cltd
sub
mov
dec
add
dec
mov
and
loop
movsb
mov
movsl
pop
jae
or
repnz
ss
push
into
or
add
add
sbb
inc
jo
xor
and
dec
push
subl
shrb
mov
and
xchg
adc
cld
into
mov
outsb
pop
imul
or
inc
enter
arpl
cwtl
stos
icebp
test
add
das
cli
adc
cwtl
das
ljmp
scas
sbb
cli
jne
mov
aam
ljmp
mov
pop
aas
fsub
xchg
sbb
aaa
mov
lds
mov
jb
inc
fisttpll
xchg
jmp
inc
cmpsb
fs
xlat
fs
jmp
jbe
adc
inc
jb
je
mov
loop
nop
daa
jbe
jne
or
scas
mov
xor
push
movsb
pop
jle
dec
and
cmpsb
lock
fdivrs
fs
dec
out
mov
bound
outsb
push
rcrb
mov
loope
and
ja
jle
fs
xchg
data16
aam
dec
mov
insl
or
xchg
loopne
jp
fstp
xchg
add
xchg
repnz
mov
mov
or
cmp
insl
jnp
cmp
repnz
fnstsw
arpl
push
sbb
jns
push
push
lds
lahf
shll
jno
aas
sub
dec
flds
enter
je
jnp
cmp
cmp
insb
mov
out
add
sub
mov
pop
stc
lods
sbb
jl
je
addr16
cs
jmp
enter
or
sbbl
sarl
ds
fwait
mov
lock
cmp
adc
je
cli
pop
pop
mov
adc
fdivl
jmp
clc
mov
ds
lahf
xor
xchg
icebp
mov
and
cwtl
hlt
dec
mov
pop
shlb
pop
sub
mov
test
bound
cmp
test
xor
pop
or
cwtl
sub
popf
mov
les
mov
xchg
sbb
fisttpl
mov
nop
fldenv
jle
mov
xchg
add
out
cmpl
std
movsl
mov
in
adcl
incb
in
add
and
sbb
cmovne
mov
inc
flds
push
jae
add
pusha
clc
push
mov
jg
xchg
inc
stos
and
test
ljmp
inc
std
mov
fidivrs
outsb
sahf
mov
cmc
int3
insb
dec
mov
out
dec
add
or
scas
add
leave
int3
icebp
mov
push
inc
mov
add
push
inc
unpcklps
dec
stc
iret
adc
rcrb
mov
cmpsb
dec
push
push
mov
mov
and
imul
dec
sti
pop
jo
lods
and
jnp
stc
mov
xchg
inc
das
int
scas
popa
push
mov
lods
loop
das
mov
enter
mov
xchg
push
ja
xorl
jns
jmp
lcall
jno
and
and
mov
cmpsb
cmp
lcall
mov
es
ss
push
sbb
sbb
pop
jp
add
in
adcl
xchg
and
ja
in
and
pop
pop
int
test
inc
in
and
pop
hlt
adc
rorl
ror
lret
pop
and
fimuls
rorb
sahf
data16
or
push
jmp
mov
into
jp
bound
xchg
daa
sub
cmp
push
adc
data16
out
fcomps
mov
outsb
pop
scas
mov
pop
mov
mov
inc
mov
pop
mov
adc
xor
out
push
outsl
mov
fmull
jb
cmpb
bound
ret
or
mov
shll
inc
dec
je
adc
fldl
or
movsb
clc
jge
cmp
xor
sub
mov
decl
dec
test
sbb
jns
xchg
push
pop
testb
mov
mov
stos
popa
jno
sbb
dec
je
repz
pop
js
mov
movsb
mov
aad
divb
dec
ds
fwait
jo
sahf
mov
aad
jo
xor
pop
arpl
stc
sahf
imul
mov
call
jnp
movl
xor
fisttpll
in
movsl
sbb
pop
push
inc
jae
mov
in
lea
cmp
loopne
pop
add
inc
imul
sub
inc
cltd
in
push
dec
in
orl
popa
mov
stos
or
test
cltd
in
jmp
mov
push
sbb
push
mov
aas
push
dec
sbb
pop
dec
loope
ret
xor
int
cwtl
mov
out
jno
in
idivl
jp
dec
mov
clc
lahf
addb
push
mov
sarb
nop
pop
repz
jmp
test
rorl
mov
xor
add
adc
or
fs
add
fucompp
sub
popl
in
fwait
sbb
add
arpl
pop
inc
push
test
int3
or
mov
repz
loopne
jecxz
jecxz
mov
int
nop
xorb
int
out
mov
mov
imul
pop
lds
jle
ja
test
add
sti
xchg
push
dec
or
add
imul
call
fmuls
dec
inc
stc
mov
inc
aad
mov
imulb
jecxz
and
imulb
adc
sub
shll
cmp
and
xor
imul
insl
jle
in
mov
push
push
out
add
aaa
mov
mov
mov
dec
dec
movsl
repnz
pop
or
cmp
fcoml
inc
inc
push
cli
arpl
sub
scas
sbbl
jle
cmp
sbb
movsb
ss
cmp
in
push
jl
pop
mov
add
dec
frstor
fmul
hlt
dec
xlat
outsb
jnp
sbb
mov
jb
sub
cli
xchg
or
scas
shlb
fnsave
ss
sbb
push
pop
inc
cmpsl
cmp
mov
sbb
repz
push
in
int3
pushf
bts
lock
js
pop
sub
dec
mov
cli
std
and
or
ret
aam
or
movsl
mov
cmp
rcr
cmp
int
clc
out
nop
mov
inc
fwait
mov
jb
add
mov
imul
aas
aas
enter
push
add
jb
pop
js
stos
jb
pop
std
push
sbbb
jnp
cmp
mov
mov
fprem
inc
ficompl
push
pop
jns
cmp
imul
mov
andl
xchg
rcll
jnp
mov
stc
adc
jmp
int
out
mov
mov
add
in
xor
cs
adc
out
lea
dec
jae
bound
stc
lock
sbb
sbb
lcall
dec
xlat
lods
dec
xchg
pmaddwd
pop
mov
jecxz
jl
lods
lds
out
sub
fstps
outsb
sbb
jne
loop
mov
adc
dec
xchg
xor
add
pop
cmpsb
ret
int
add
lcall
and
jno
dec
sub
das
push
dec
pop
push
lea
stos
dec
dec
xchg
push
stc
rcrb
mov
xsha256
cmpsb
adc
out
cmp
sahf
pop
ds
inc
push
jno
adc
and
scas
sbb
fwait
into
mov
lret
pop
mov
cmp
xor
sbb
or
daa
loopne
stos
sbb
rcl
lods
aam
subb
cmp
xchg
loop
or
test
mov
mov
in
jge
cwtl
xchg
stos
hlt
scas
int3
push
jmp
dec
cli
mov
jae
sahf
dec
mov
xorb
cmc
pushw
stos
cld
into
push
mov
insb
xchg
insl
cmp
hlt
lea
pop
fcompl
xchg
jge
mov
notb
fadd
lahf
jne
adc
stc
or
or
loop
cmp
mov
inc
test
inc
cmpb
adc
int
mov
jo
das
dec
dec
insb
lock
xlat
daa
push
std
rorl
push
rorl
mov
mov
out
stos
insb
cli
xchg
sahf
cld
jecxz
mov
fsub
mov
and
les
test
dec
dec
push
ljmp
filds
xchg
mov
mov
and
stos
inc
fcoms
push
js
arpl
das
lret
frstor
jmp
in
and
pop
stos
inc
inc
xchg
add
loopne
jb
inc
frstor
or
loope
fcoms
lds
pop
jecxz
add
push
scas
out
dec
loope
cmp
inc
movsb
push
pop
xchg
adc
sbb
and
adc
push
push
outsb
or
fisubs
stc
les
lds
xchg
lea
and
js
ficoml
sarl
push
sub
push
cmc
pop
out
leave
rorl
adc
jbe
or
mov
cmc
jle
dec
mov
fidivrl
mov
out
sub
push
inc
and
enter
loop
push
rol
xor
stc
inc
sub
xchg
xor
call
adc
sbb
lcall
sahf
xor
outsl
xor
jne
push
push
mov
test
mov
cmp
pop
mov
push
jmp
cs
adc
loope
inc
xor
mov
je
mov
cmp
push
mulb
mov
lret
push
fwait
mov
dec
ja
push
ljmp
jno
push
mov
xor
pop
loope
dec
jns
inc
data16
pop
in
push
es
adc
in
mov
lock
test
pop
push
and
cmp
arpl
aam
dec
dec
sbb
dec
mov
adc
movsb
test
pop
ss
adc
push
sbb
into
lds
into
mov
inc
push
loope
shrb
mov
and
shrl
rolb
add
scas
cmp
stc
imul
mov
jo
ss
cmpsb
out
fsubrs
ds
sbb
add
or
mov
xchg
sub
xorl
sbb
mov
mov
ret
sti
jnp,pt
outsb
mov
adc
test
xchg
or
cmp
jbe
xor
out
sbb
cmp
push
mov
dec
fstpt
js
out
bound
sub
cmp
mov
outsb
xor
sub
xchg
adc
or
adc
mov
dec
inc
iret
mov
frstor
push
lock
mov
subb
pop
xor
divl
and
push
push
iret
jnp
jge
aam
sbb
scas
out
jp
mov
add
bnd
mov
shll
inc
cmpsl
fcoml
inc
cmp
in
pop
cld
sti
inc
insl
xchg
stos
dec
call
test
sbb
dec
jmp
cmp
cmp
xchg
sbb
mov
movsb
mov
movl
pop
xchg
mov
mov
cmp
xchg
iret
dec
nop
sub
roll
mov
cvtps2pd
shrb
cwtl
bnd
repnz
push
or
pcmpgtb
inc
jno
cmp
orb
cmp
pop
inc
incl
sub
mov
adc
lods
jmp
les
jne
mov
jg
insl
pop
adc
lret
stos
scas
call
xchg
adc
mov
rolb
fildl
sbb
leave
sbb
popa
or
rorb
mov
fcoml
dec
int
scas
int
addr16
cmp
jge
arpl
lds
adc
cmp
sub
adc
cli
xchg
jmp
outsb
mov
icebp
sbb
pop
sbb
leave
dec
jmp
push
mov
cmp
fwait
xor
push
pop
cmp
pop
jecxz
or
xor
sub
add
sub
mov
mov
stc
clc
sti
lret
jno
cld
sbb
aaa
dec
popw
insl
shrb
rcrl
xchg
jp
cmp
xor
ret
sbbl
outsl
pop
and
js
sub
jecxz
bound
push
out
js
push
sub
jl
out
xchg
push
std
fidivrl
sub
ret
enter
clc
ljmp
sub
outsl
sub
dec
xchg
dec
jle
jns
pop
ljmp
xor
pop
icebp
dec
mov
push
or
xlat
sbb
lock
pop
rol
aam
dec
iret
pop
inc
aam
icebp
insb
jb
sbb
or
outsb
push
or
mov
jne
inc
push
push
xchg
mov
enter
cs
aam
or
pop
jge
repnz
rcrl
pop
adc
cwtl
mov
int3
xchg
lods
adc
call
repnz
sub
or
aad
sub
dec
or
mov
or
xor
push
in
push
cmp
ss
arpl
sbbl
rcr
sbb
xor
daa
scas
mov
jb
lret
mov
mov
fimull
sub
mov
mov
adc
or
push
adc
lods
test
cwtl
inc
mov
xchg
dec
pop
push
push
insb
xor
push
leave
out
sbb
psrld
int
cwtl
xchg
and
call
in
out
jp
cmp
mov
mov
inc
fadds
incl
pop
fsub
scas
out
stc
shr
and
sbb
cmp
repz
pop
inc
sub
fistpl
pop
mov
and
enter
fidivl
aas
jno
das
mov
mov
mov
lods
mov
adc
inc
arpl
hlt
mov
es
xchg
sub
lret
aas
and
or
or
imul
ss
or
mov
xchg
outsl
enter
nop
sbb
push
imul
xor
out
nop
lahf
mov
pushl
cmp
jne
cmp
sbb
pop
sbb
mov
jl
cvtps2pd
nop
daa
sbb
pusha
add
push
popf
pop
mov
out
jp
inc
mov
insl
shrl
pop
scas
int3
dec
pop
xor
push
xor
test
jae
cld
mov
pop
icebp
mov
loopne
sub
cmpsl
scas
inc
fld
pushf
xor
cld
int
mov
stos
inc
inc
pusha
push
rcrl
xor
mov
aas
dec
mov
lds
inc
sar
and
add
mov
clc
inc
inc
iret
clc
movlps
scas
std
in
test
pop
in
out
mov
xchg
outsl
or
sbb
and
mov
arpl
sti
mov
fstpl
pusha
mov
out
aas
push
fistpll
xchg
mov
sub
test
test
sahf
into
das
jae
sub
mov
sbb
std
cmp
xor
ret
rorl
cli
and
lcall
push
out
dec
pushl
shlb
ficoml
add
jg
pop
rcrl
in
nop
mov
iret
call
lret
inc
arpl
rorl
mov
mov
shl
and
xchg
mov
sub
jecxz
jns
fwait
jbe,pn
vandpd
sub
cltd
clc
cmpsl
int
sbb
push
cmpsb
inc
rsm
repnz
enter
clc
cmpsl
mov
pop
lock
test
pop
pop
aas
add
jg,pt
xchg
sub
dec
sahf
sar
xchg
popf
push
enter
into
sbb
jmp
adc
xor
sarl
jno
cmp
mov
clc
adc
fiadds
xchg
rorb
ret
add
arpl
add
mov
in
pop
jbe
cmp
sub
arpl
mov
rorb
test
xchg
dec
cmp
enter
das
dec
out
cmp
call
push
roll
popf
mov
shl
jle
into
push
in
aad
aam
or
jb
and
cmp
sub
xchg
lock
add
jl
sub
lock
loopne
dec
loop
xchg
aas
xchg
imul
sub
lcall
out
mov
xchg
rcrb
fnstenv
out
and
inc
push
and
xor
mov
enter
mov
jae
mov
repnz
adc
inc
inc
jns
cmp
jge
in
pop
enter
lds
mov
mov
lds
es
pop
popa
mov
or
mov
mov
cmpl
sub
adcb
call
shrb
shl
es
mov
or
cmp
adc
loopne
std
push
aaa
jmp
xchg
cmpsl
sbb
aam
stos
stos
xor
xor
push
add
pop
xchg
mov
dec
sar
push
out
xlat
cs
outsb
add
pop
sarl
mov
inc
out
movl
out
jnp
ret
fisubrs
jecxz
or
mov
in
loop
scas
xchg
or
jmp
or
or
scas
or
inc
lea
and
fstpt
popf
lahf
addr16
xchg
xorl
imulb
mov
out
inc
enter
test
popl
negl
push
cmp
xchg
in
pusha
notl
jbe
sarl
or
nop
pop
sub
nop
cmc
xchg
push
xor
in
test
insl
sarb
jne
mov
fstl
test
inc
push
mov
add
stos
out
imul
push
jecxz
lea
lret
mov
repnz
fnsave
outsl
rclb
push
jnp
in
add
and
xor
mov
stos
xchg
nop
jmp
int3
add
cmp
outsb
fwait
in
mov
add
mov
adc
jmp
out
aaa
push
call
leave
pop
mov
call
add
xor
loopne
cmc
sub
sti
dec
mov
clc
sbb
inc
jl
sub
dec
cmp
push
jae
push
add
ss
leave
test
ljmp
lret
jae
mov
adc
cmp
mov
inc
xchg
adc
cmp
orl
adc
mov
mov
imul
addl
and
aaa
call
stc
sahf
pushf
cmp
mov
push
xchg
sub
or
mov
pop
dec
mov
adc
lcall
in
jnp
test
and
mov
mov
pop
add
mov
mov
mov
add
cmpsb
faddl
outsl
pushf
ret
jae
or
test
clc
xchg
sbb
and
fidivs
push
mov
adc
arpl
fistps
sahf
fwait
mov
jns
in
lods
fdivr
lods
inc
dec
je
out
and
test
hlt
iret
outsl
and
insb
add
mov
xchg
push
in
jge
mov
ds
test
xchg
int
call
xor
test
fwait
mov
sub
adc
mov
ljmp
pushf
jae
jp
jnp
mov
pop
loop
inc
dec
ret
ljmp
subb
mov
mov
leave
jae
and
test
or
jnp
loope
out
jb
push
add
xlat
xchg
dec
lahf
fistl
push
fcoml
cmc
fsubr
xlat
ror
and
outsb
aam
inc
out
loop
ja
lds
adc
or
outsl
adc
es
or
jle
or
rol
lods
fidivrs
and
fiadds
xor
lods
mov
outsb
xchg
int
cmpsb
imull
sub
inc
loopne
dec
push
pop
jbe
imul
jp
ja
mov
inc
pop
cmp
sbb
dec
sub
pushf
sub
sub
cmc
jl
and
subl
mov
repz
clc
jmp
mov
fmull
aas
sbb
int3
mov
les
jl
shl
mov
sarb
das
mov
cmp
mov
sbb
nop
rcrb
mov
fcompl
les
fs
out
push
inc
shll
sub
fldcw
imul
mov
mull
sub
loopne
sahf
shl
popf
sahf
rcrl
daa
add
and
and
fstp
mov
mov
iret
jno
dec
mov
cmp
push
add
and
fsubr
jg
add
inc
cmp
cmc
mov
repz
mov
sub
jnp
inc
fldl
push
sub
scas
lahf
dec
cmpsb
mov
push
sub
dec
inc
mov
pop
out
aam
cwtl
pop
loop
and
or
pop
int3
rcrb
cmp
sbbb
push
test
sahf
and
stc
in
inc
mov
xlat
ljmp
dec
arpl
jp
cmp
ret
xchg
lcall
clc
jae
sub
sar
mul
cmp
dec
iret
xor
loopne
or
call
inc
inc
fdivr
jno
out
adc
push
push
in
add
pop
xchg
ja
test
and
aad
xchg
mov
mov
js
or
add
push
dec
repnz
dec
xor
push
pop
dec
mov
xlat
mov
inc
jnp
push
fwait
cld
popl
inc
sbb
jle
imul
pusha
push
pop
mov
lods
test
jno
jo
push
in
gs
ljmp
add
and
aas
pop
cs
mov
fimuls
test
loope
adc
jbe
pop
bound
stos
movsb
cmpsl
cltd
jp
dec
xor
cmc
lret
xchg
cmp
aad
pop
push
loop
jae
add
pop
push
or
inc
mull
int
xor
push
push
and
test
adc
fcompl
in
leave
xor
jno
daa
andb
ljmp
pushf
in
les
mov
fwait
push
popf
mov
jmp
cmp
xorps
mov
sub
vpxor
sbbl
jg
jns
and
int
int3
outsl
add
adc
and
jmp
rcll
mov
repz
test
dec
xchg
jle
sub
je
movsl
decl
hlt
std
xchg
push
stc
fstpl
adc
push
jmp
fsubrl
inc
adc
aaa
xchg
jns
aam
cmp
shlb
push
and
or
cltd
jg
mov
popa
pop
test
je
faddl
jmp
and
mov
xchg
ja
push
cmp
das
aam
or
adc
repnz
cmp
xor
fidivrs
fstps
dec
jecxz
stc
xchg
jbe
dec
sbb
xor
daa
cmpsb
loopne,pt
xchg
xor
loope
inc
or
xchg
andnps
out
adc
mov
ret
dec
pusha
mov
icebp
out
push
sbb
or
push
add
rdtsc
add
jle
ficoml
ljmp
inc
cmp
testb
lods
ds
lret
lret
insb
imul
cltd
inc
sub
jge
enter
dec
ja
cwtl
jb
xchg
adc
cld
lock
loopne
sbb
repz
cltd
insl
sti
or
mov
imul
xor
cmp
mov
test
call
aas
xchg
mov
xchg
mov
fldcw
out
jp
mov
mov
cltd
jmp
or
xchg
add
sbb
addr16
js
xchg
scas
loop
sahf
in
xchg
or
mov
jl
jae
jge
ficoms
nop
je
xchg
test
scas
mov
jmp
pop
cmp
pop
xor
inc
movsl
pop
add
hlt
push
push
movsb
cmpsb
shrl
adc
pop
mov
xor
mov
ljmp
std
aam
jg
cwtl
aad
xlat
push
push
stc
ss
ja
sub
stos
inc
mov
push
push
add
repnz
xchg
xor
jge
adc
lcall
mov
adc
dec
pop
mov
push
addr16
xor
mov
lock
rcrl
jno
and
lahf
das
push
lcall
or
mov
bnd
and
rol
daa
mov
addr16
imul
test
jl
jle
cmpl
popl
mov
and
mov
dec
data16
outsb
loopne
arpl
es
pop
aam
or
scas
nop
lret
cmp
sahf
mov
inc
and
pushf
xor
adc
test
mov
sbb
push
enter
cmp
fdivrs
dec
and
negl
popf
pop
jae
sbb
repnz
jmp
in
sbb
sub
loopne
push
imul
pop
jle
les
shll
mov
sbb
lcall
jg
hlt
fs
jne
pop
mov
xchg
dec
inc
sbb
mov
lods
add
sarb
pop
int
mov
repz
cmp
pusha
pop
fidivrl
cmpl
jnp
sbb
push
push
xchg
sbbb
push
out
add
je
lret
outsb
psllw
bound
sbb
outsl
leave
dec
lret
ljmp
sbb
xor
mov
test
test
ds
mov
cwtl
test
mov
pop
arpl
lret
mov
arpl
xchg
orl
ret
cld
add
test
xor
hlt
adc
mov
mov
out
popl
push
or
mov
mov
in
sub
cmp
out
popf
repz
scas
mov
add
jge
or
and
out
push
bound
cmp
sub
jae
push
lea
cltd
sub
test
ret
andl
adc
cmpsb
adc
mov
daa
or
xchg
or
cld
ja
adc
rorl
bnd
xor
push
jg
dec
mov
fidivs
jo
daa
mov
imull
jmp
into
or
outsb
out
insb
push
adc
push
stc
or
xor
stc
popf
and
icebp
pop
or
dec
cld
xchg
push
in
xlat
stc
xchg
sbb
subb
adc
pop
cmp
fdivs
pop
imul
mov
pop
mov
mov
aam
mov
xor
shlb
rolb
fsubrs
popf
cmc
mov
xor
jbe
out
push
pusha
jmp
and
mov
out
popa
pop
mov
fcmovu
mov
fisttpl
orl
out
or
push
test
dec
mov
pop
arpl
xchg
push
add
push
xlat
pop
push
sub
or
subb
pushf
test
cmp
lahf
push
mov
sbb
sub
es
add
adc
pop
imul
mov
push
out
cmp
cmp
xchg
aam
pushf
aad
sbb
pop
mov
out
js
pop
ret
mov
fidivl
insl
jge
jnp
cmp
mov
filds
mov
outsb
cmpb
insb
push
ret
push
xchg
mov
sbb
xchg
lods
ror
es
xchg
repz
fisttpll
and
sbb
jb
out
and
pop
xor
xchg
jle
cmpsb
and
mov
std
xchg
mov
stos
inc
repz
push
cmpsb
xor
aaa
popf
adc
or
cmp
pushf
ljmp
fdivl
add
fcmovu
int3
dec
and
fists
ret
pop
lahf
jb
mov
xor
sub
pop
and
jg
mov
push
pusha
sbb
dec
jbe
mov
xchg
cmp
pop
cmp
lahf
push
lods
mov
push
xor
cwtl
jns
pop
test
push
xor
out
in
cmp
mov
leave
aas
push
loope
sbbb
xor
dec
lcall
out
or
jbe
sub
es
jge
int3
inc
ds
das
adc
pop
push
ja
add
cwtl
sti
sbb
pushf
arpl
mov
fnstenv
dec
mov
push
subl
jbe
in
pushf
push
shr
lods
pusha
cmp
xchg
movsb
pop
mov
mov
ljmp
pop
lods
clc
or
cmpsb
fidivs
int3
testb
cmp
fsubrl
cmp
std
call
sbb
pop
sbb
pop
xchg
mov
inc
inc
xchg
sbb
cwtl
dec
push
dec
shll
fs
mov
add
outsb
ss
xchg
xor
xlat
pop
fiaddl
pusha
aad
repz
xchg
popf
int3
sub
scas
inc
rorl
je
aam
sahf
out
js
mov
ficoms
cwtl
xlat
push
aaa
hlt
mov
xchg
add
sbb
or
pop
inc
pop
pop
icebp
nop
mull
or
mov
or
adc
fildl
push
sub
sbb
or
test
daa
pop
pop
and
sbb
dec
fsubp
mov
xor
cmp
jns
pavgw
jnp
dec
lds
lock
popa
cld
dec
add
push
clc
lcall
aas
test
arpl
pushf
iret
and
ret
in
mov
call
mov
mov
icebp
mov
movsb
sbb
test
cmp
sbb
push
fisubrs
pcmpeqw
scas
pusha
push
sub
sbb
adc
aam
stc
loop
jbe
fnstsw
orb
adc
pusha
jge
mov
lea
addr16
push
xchg
ljmp
popf
shrl
aas
hlt
xchg
xchg
pop
push
sbb
lahf
sbb
xchg
push
lods
adc
mov
popa
cmp
mov
xor
jg
call
or
inc
push
pop
cmpsb
jle
jg
xor
mov
shl
sbb
in
push
jle
add
inc
fidivl
push
in
rolb
add
movaps
xchg
jp
or
jl
cmp
mov
push
pop
icebp
call
iret
add
inc
push
jo
ja
ja
adc
dec
fmul
flds
lret
push
pop
adc
mov
mov
xchg
iret
popw
fwait
stos
pop
rcrb
rorl
aam
call
push
inc
inc
lret
sbb
iret
push
inc
sahf
pminsw
sbb
ret
push
and
push
test
int3
xchg
out
dec
pop
jne
imul
es
inc
adc
mov
lahf
cli
pop
cmp
mov
fs
int
jecxz
into
gs
pushf
pop
fidivl
mov
scas
mov
cmpsb
sbb
or
cmc
inc
in
sub
cmp
and
add
shll
xorb
xchg
pop
sub
repz
or
and
or
test
cli
subl
xchg
ss
jne
cmp
sahf
cld
mov
adc
fucom
repz
es
adcl
mov
fisubrl
ss
xchg
xor
xor
sbb
xor
orb
sbb
mov
cmp
in
jbe
lcall
cmp
mov
sub
dec
lret
and
in
push
stos
jo
mov
out
add
xorb
test
ret
pop
dec
sahf
pop
shrl
mulb
inc
pop
inc
push
xchg
out
outsl
xor
bound
mov
test
fldt
pop
divb
sub
jb
in
sbb
inc
and
repz
stos
adc
lret
jns
jno
sbb
mov
pop
inc
cwtl
push
lahf
pop
icebp
lret
jo
fcompp
mov
jne
fldl
scas
ja
mov
and
outsb
cltd
test
dec
push
xor
repz
mov
lods
mov
jl
jle
mov
js
shll
sub
add
cmp
aaa
sub
std
lcall
cld
popf
xor
test
arpl
nop
imul
push
mov
test
es
ds
fwait
js
cs
and
scas
pop
lock
mov
fiaddl
and
ds
mov
adc
negl
sub
aas
push
pop
insl
out
out
push
inc
in
inc
sarb
add
out
xchg
cld
imull
aad
or
mov
pop
mov
mov
add
aad
mov
cmpsb
and
adc
ja
das
xor
rol
pop
in
push
js
imul
es
mov
cs
aas
hlt
aas
pushf
or
cli
pushf
aas
mov
ss
push
lcall
mov
or
mov
popa
adcl
xchg
loope
dec
sahf
push
stc
cmpsl
cmp
xlat
idivl
push
xor
lods
and
sti
jmp
sub
aas
sub
mov
push
and
inc
xchg
sbb
dec
xor
ficoml
adc
les
xchg
in
add
inc
xor
or
cli
mov
in
inc
ret
fmul
xchg
outsl
in
xchg
dec
sbb
nop
sarl
das
mov
adc
push
cmp
stc
sbb
mov
adc
and
int3
rcll
xchg
pop
lahf
shl
popf
lods
fsubrs
xor
sbb
cs
mov
ret
notl
xor
pop
and
pusha
xchg
cmp
push
mov
outsl
jnp
adc
xchg
xchg
cmp
clc
cmp
adc
xor
push
xor
ss
out
enter
rorb
shll
cmp
xchg
cs
pop
and
fwait
cmp
fs
mov
cmp
and
pop
fimull
mov
cmpsl
push
jnp
jp
fs
test
adc
pusha
sbb
adc
popf
or
mov
imul
stc
movsb
mov
das
adc
add
out
pop
dec
fnstsw
and
mov
inc
fcmovb
add
lahf
bound
push
in
inc
lea
sahf
fs
insl
lret
fdivrs
insl
pop
sbb
test
or
loopne
add
sbb
fdivs
xlat
dec
loopne
cmpsb
ficoms
ja
push
push
es
rol
inc
pop
hlt
sub
aad
sub
adc
push
mov
out
leave
mov
pop
lret
fnstsw
xchg
mov
or
cmp
aad
sub
repz
xchg
fistps
push
in
push
daa
out
xchg
ss
dec
push
out
mov
es
shrl
loopne
fiaddl
bound
inc
pop
sub
nop
stos
lret
push
es
mov
stc
lret
adc
std
sbb
dec
es
mov
jb
pop
aas
sbb
movsl
pusha
in
xchg
nop
dec
je
movsb
cmp
and
mov
jmp
lret
xchg
sti
jo
and
je
cld
cmpsb
ljmp
lds
fwait
jge
pop
push
xchg
pop
pusha
testl
add
fstps
ja
jge
lock
and
adc
cmp
hlt
xor
inc
dec
inc
push
outsl
das
inc
xchg
push
movsb
pop
icebp
aad
sbb
inc
sbb
fsubl
push
scas
dec
mov
out
sbb
jbe
movsb
cmp
icebp
and
push
fisubl
loope
mov
mov
mov
hlt
or
cmp
cwtl
or
pop
sbb
mov
movsb
movsl
sbb
sub
adc
clc
xor
add
sbb
in
mov
jecxz
sbb
push
adc
inc
enter
std
mov
cld
xchg
cmc
out
push
fcomps
sbb
test
mov
pop
leave
cmp
or
cltd
mov
fisttpl
and
inc
aam
rcl
fldl
mov
js
cmp
dec
push
xchg
adc
add
inc
jecxz
mov
mov
enter
jns
rcrb
add
lock
nop
inc
lret
nop
push
jae
out
and
jecxz
es
push
aam
mov
clc
in
pop
repz
scas
xor
push
cmpsl
jp
push
fbstp
xchg
imul
xchg
pop
sub
insb
jmp
lds
add
lret
negb
lcall
jne
sbb
inc
loop
pop
xor
add
and
and
cwtl
xchg
mov
cs
jns
mov
sub
clc
sahf
cmp
sub
lcall
or
lds
cmp
sbb
and
fsin
jl
cmpsl
pop
loopne
and
sub
ret
hlt
and
mov
lcall
stos
call
test
push
int3
loopne
sub
jecxz
push
imul
xor
cmp
mov
add
icebp
rcrl
rorb
rorb
out
and
mov
in
fwait
or
dec
loop
loop
xchg
out
pop
pop
inc
push
push
mov
xchg
je
inc
and
xchg
mov
jne
pop
mov
xchg
sahf
in
mov
push
or
adc
loope
and
dec
or
pop
and
imull
out
jne
or
testb
int
and
dec
in
inc
loopne
stos
pop
jg
push
inc
pop
pop
pushf
pop
pop
add
leave
add
ds
pop
and
pop
pop
testb
inc
test
cmp
dec
in
add
jno,pn
aas
outsb
fistps
popa
add
les
or
jmp
aaa
test
jo
mov
out
fs
xlat
jne
test
call
xchg
and
arpl
pop
lret
or
and
mov
insl
out
jae
movsl
push
add
mov
inc
addb
loopne
push
adc
sbb
mov
or
bound
push
mov
fbld
lea
sbb
aas
stos
jnp
sbb
and
sbb
adc
mov
movsb
repnz
test
outsb
test
xchg
cs
scas
push
orl
pushf
orl
dec
mov
cmp
add
add
adc
add
ds
lds
ja
shrb
js
xchg
stos
popf
lock
filds
sbb
jmp
insb
jns
jno
les
ja
popl
clc
mov
xchg
mov
clc
cmp
ret
jo
mov
in
nop
fwait
shrl
lds
or
scas
xchg
adc
rorb
jmp
movsb
inc
pop
shl
jo
cwtl
lods
cltd
test
mov
fcoml
outsb
ret
push
test
cmc
push
hlt
test
dec
add
dec
bound
sub
push
mov
cmp
aam
cli
and
jns
cli
pushf
xchg
cmp
push
repz
sub
ljmp
rcl
in
mov
int
inc
addr16
pop
insb
jmp
inc
cwtl
pop
lock
dec
push
es
pop
xor
dec
loope
push
test
aaa
mov
ds
mov
lret
imul
loop
xchg
stos
rcrb
jno
pop
adc
rorl
aas
cld
xchg
dec
or
jecxz
repnz
in
adc
adc
pop
arpl
mov
adc
ja
cmpsb
sbb
mov
daa
mov
cmp
or
mov
scas
push
push
rolb
lea
add
sbb
mov
icebp
adc
adc
jbe
dec
adc
aam
iret
push
andb
hlt
mov
add
xlat
aad
lods
mov
pushf
out
scas
jno
or
call
int
subb
sahf
jne
dec
js
push
xor
inc
out
test
arpl
jnp
leave
data16
xor
xchg
and
push
cmc
int
mov
test
fwait
add
jbe
pop
dec
mov
dec
lahf
adc
push
lret
dec
lods
psubb
jae
jno
fists
add
lcall
addl
sti
fwait
shlb
inc
jmp
sbb
mov
mov
pop
clc
sbb
add
add
inc
sbb
dec
pop
loop
xor
pushf
popa
dec
add
jmp
and
insb
and
sbb
std
rorb
loope
out
shlb
adc
and
xor
stos
pop
add
cmp
ret
loope
and
cmpb
in
xchg
add
mov
ljmp
cld
fstps
jo
pop
loop
in
gs
and
into
mov
sub
stos
lret
pop
mov
sbb
xchg
lods
sbb
pop
outsb
gs
pop
xchg
fcmovnb
aam
fucomp
leave
leave
sti
or
sub
and
mov
shlb
xor
jecxz
in
xlat
mov
xor
pop
es
or
ds
loop
test
pop
insb
jmp
jo
or
loopne
xchg
movsb
xor
sbb
xchg
dec
cmp
mov
xchg
jb
out
ror
cmp
push
cmp
inc
ror
jo
xor
pop
xor
popf
hlt
and
data16
xchg
push
outsl
shrb
cmp
rorb
insb
push
mov
movsl
fs
and
mov
jbe
lcall
mov
xor
aaa
pop
iret
jmp
mov
jle
adc
cli
shll
mov
insb
add
xor
sub
in
lock
xor
cmp
ret
clc
mov
mov
lahf
cmp
fisttpll
sbb
or
pop
sub
sbb
nop
sbb
dec
loop
adc
and
lret
imul
adc
xor
sbb
and
jne
test
xchg
test
add
mov
mov
mov
test
sub
and
jge
cmp
cmpsb
xchg
ja
pop
cmpsl
sub
into
sub
xchg
das
mov
sbb
gs
inc
or
adc
cmp
fisubs
adc
je
xor
mov
outsb
add
loop
mov
add
dec
loope
dec
add
inc
mov
pop
mov
test
lret
mov
push
mov
sarb
shlb
mov
sub
cmp
xlat
adc
cmp
scas
pop
pop
out
cmp
push
push
test
sbb
movsb
mov
aaa
add
mov
iret
cmpl
push
mov
jne
out
rol
dec
ja
subb
push
cmpsl
dec
pop
pop
idivb
mov
dec
sbb
add
aaa
and
jnp
dec
imul
mov
decb
sbb
outsl
fcomi
cmp
jge
test
loopne
and
lods
mov
sub
lods
jmp
lret
stos
inc
icebp
adc
adc
ss
aam
dec
mov
fdivrl
fbld
push
mov
subl
bound
inc
lahf
int3
mov
rcll
xchg
jns
mov
xchg
je
stc
cs
lea
cmpsl
out
push
stc
cmp
movsl
das
and
or
push
mov
push
fldcw
or
test
bound
subl
adc
mov
scas
and
das
xor
xchg
push
lret
and
cmpsl
shll
test
pop
sbb
sbb
fistpll
loope
arpl
vandnps
sahf
jns
data16
bound
adcb
mov
out
je
or
sbb
repnz
add
jmp
sbb
and
xor
pop
outsl
push
add
xchg
nop
push
mov
jae
adc
xor
xchg
aad
insl
pop
and
xchg
stos
jmp
pop
call
test
jmp
in
and
xchg
pop
les
nop
lock
sbb
mov
movsl
cli
out
sub
or
pop
dec
movsb
and
movsb
notb
out
xchg
pop
repz
cmp
jecxz
cmp
push
addr16
sbb
sahf
jb
xchg
mov
cmp
out
in
andl
inc
int3
add
dec
jle
out
push
push
sub
jae
lret
sti
dec
call
sbb
cmp
adc
add
mov
and
jnp
pop
ret
std
jge
stos
pop
pop
jo
movsb
rcrb
movsl
repz
movsl
pop
inc
cmpsl
ljmp
sbbl
adcl
in
sahf
dec
insb
test
mulb
pop
xor
jp
adc
xor
mov
push
nop
daa
mov
add
hlt
bound
je
sub
arpl
in
das
cmp
movsb
jecxz
fsubrs
inc
lods
mov
push
jp
inc
in
mov
xor
pusha
or
xchg
pop
es
int
inc
dec
dec
push
testb
pop
add
fstpl
sub
xchg
js
popa
push
inc
outsl
add
lcall
aas
xchg
inc
je
push
mov
inc
jne
mov
divl
inc
push
rorb
sbb
imul
xchg
pop
adc
lock
and
xor
or
xchg
cmp
pop
jle
push
jns
mov
mov
mov
adc
js
and
adc
pop
leave
or
push
xor
or
mov
jns
mov
pop
leave
into
and
out
sahf
or
sbb
shlb
aam
sbb
mov
aas
jle
es
push
imul
ficomps
ja
scas
mov
adc
shrb
xchg
xorl
in
jne
cli
lahf
es
movsl
roll
pop
push
outsb
divl
mov
aam
mov
cmpsl
xchg
mov
pop
mov
movsl
mov
pop
xor
out
pushf
jge
mov
fmull
inc
mov
pop
shlb
sahf
or
inc
flds
dec
loopne
and
sub
out
mov
inc
cwtl
mov
pop
xor
xchg
adc
aaa
imul
add
and
pop
cmpsl
sbb
imul
lea
and
andb
pop
and
in
cmc
mov
mov
push
inc
ljmp
xor
stos
mov
mov
scas
push
addr16
popf
sti
mov
out
aaa
pop
add
daa
stos
lcall
push
les
adc
call
test
or
pop
gs
xchg
add
lods
jecxz
push
lea
aam
cld
sbbl
jne
cmp
xor
ret
jle
jns
insl
add
lcall
sub
dec
iret
add
gs
pop
dec
stos
dec
in
dec
loop
adcb
mov
jb
insl
pop
iret
insl
push
insl
outsl
sbb
fstpl
add
ficoml
jns
hlt
mov
jnp
jnp
push
pop
xchg
adc
sub
mov
daa
jecxz
jg
dec
inc
xor
sarl
add
cmp
pop
mov
das
push
dec
sub
xchg
add
cmpsl
inc
or
jl,pn
jp,pn
cmpsb
loop
mov
mov
test
xchg
jns
ljmp
xor
and
imul
or
fsubp
mov
push
pop
cmpsb
mov
mov
pop
jle
scas
das
mov
sbb
mov
fnstsw
leave
mov
ljmp
push
push
mov
push
mov
and
lods
fnsave
repnz
fs
mov
ss
xor
sahf
adc
dec
mov
decl
test
cmp
sub
pop
dec
mov
pop
inc
dec
xor
pop
add
repz
sbb
orb
xchg
inc
outsl
and
lds
idivb
sub
dec
dec
cmp
dec
pop
jnp
cmp
movsb
nop
repz
scas
xorb
adc
cmp
outsb
cmpl
jl
cmpsl
push
xor
lds
jl
lahf
js
rorb
mov
or
xchg
xor
xor
leave
and
jae
or
or
nop
adc
das
aaa
xchg
mov
icebp
andb
out
insl
mov
notb
push
rcll
jns
popa
clc
xor
inc
inc
xor
push
jo
nop
ss
insb
or
mov
mov
mov
fcompl
xor
loope
lret
xchg
xchg
in
js
ss
push
lahf
pop
push
xchg
sub
sarb
cmpsl
inc
pop
mov
popf
lods
cmc
pop
and
call
fwait
jg
inc
loop
leave
in
scas
jmp
or
mov
push
mov
mov
fisttps
out
adc
add
sbb
movsb
fldl
sbbl
xchg
dec
mov
lret
les
xchg
jge
xor
out
cmp
andl
or
movsb
xor
adc
jae
jne
loop
mov
xchg
jg
js
push
sub
dec
mov
mov
xchg
push
test
mov
sub
popf
adc
pop
daa
sbb
jg
aas
mov
nop
daa
rcrl
test
cli
popf
js
nop
loop
xor
std
push
repz
xchg
das
mov
xor
lea
sub
cld
sahf
sbb
pop
sarl
jg
jge
jae
mov
jb
jmp
xchg
imulb
mov
dec
rcrb
popf
jecxz
cmp
push
and
cwtl
push
mov
mov
push
cmpsl
jp
rolb
and
out
xchg
cmpb
mov
sub
adcb
xlat
sahf
mov
xchg
ja
out
mov
mov
cmpsb
pop
xor
pop
pop
out
dec
push
in
push
mov
jmp
test
rcrl
lods
adc
dec
jbe
push
arpl
mov
sbb
push
pusha
add
add
incb
pop
or
ret
jl
xchg
xor
addb
push
lds
int
mov
js
pushf
mov
fucomp
add
jg
iret
frstor
mov
insl
nop
stos
fwait
in
call
jb
mov
pop
mull
fnstsw
dec
add
xchg
div
lds
mov
les
pop
adc
das
cli
aaa
push
adc
divl
mov
lods
sub
adc
mov
cmpsb
cmp
bound
outsl
je
test
nop
jbe
repnz
ret
add
push
lret
aas
xchg
pop
pop
shrl
jo
frstor
xchg
decl
dec
xchg
mov
mov
ret
pop
fcmovnb
xchg
mov
jmp
mov
push
mov
cli
dec
adc
outsb
pop
clc
dec
inc
jecxz
mov
cmp
insl
stos
sbb
mov
mov
aaa
popa
push
add
xor
xchg
out
jb
push
in
cld
scas
movsl
ja
pop
push
je
jne
jmp
mov
lods
and
mov
subl
cmpsb
fnstenv
or
sbb
pop
xor
inc
sbb
jae
ror
cmp
and
test
fsub
ret
call
push
shll
pop
rcll
bnd
xchg
adc
cmc
push
movsb
repnz
loopne
xchg
and
ret
ja
daa
mov
mov
push
addb
fistpl
addr16
out
mov
mov
loopne
stos
cmpb
push
and
mov
xchg
mov
rclb
dec
inc
adc
cmpb
sbb
push
fbld
mov
inc
pop
or
and
inc
outsl
rcrb
adc
insb
mov
js
scas
fcompl
lock
cmp
jg
imul
or
scas
ss
es
sti
iret
push
in
fsts
sbb
fisubrs
inc
outsl
jb
fidivl
mov
in
jo
fiaddl
test
xchg
adc
pop
stos
pop
lret
fdivrl
xchg
lods
push
pusha
or
mov
jle
sahf
addr16
and
inc
sbb
xchg
fnstenv
mov
pop
mov
iret
popa
add
ja
push
pop
xor
jg
mov
mov
inc
add
mov
xor
mov
test
int
daa
sbb
mov
cmc
push
cmp
je
inc
fisttpll
adc
hlt
pop
or
fdivrs
adc
mov
scas
in
push
cltd
mov
imul
lods
cmc
mov
out
daa
add
les
test
and
hlt
push
fiadds
cs
and
cs
mov
fisubrs
cmp
lock
pop
dec
pop
dec
jno
and
cmpsb
xchg
mov
iret
cmp
aam
shl
pop
ret
jnp
mov
mov
push
data16
mov
or
icebp
cmp
xlat
xor
jo
shr
dec
mov
push
pushf
scas
test
sub
sub
xor
in
jmp
daa
adc
nop
lret
fildll
lcall
std
mov
adcb
push
and
sti
scas
push
mov
push
out
pop
lds
sub
mov
lret
and
mov
xchg
hlt
mulb
add
pushw
pop
cmp
add
hlt
or
pop
aam
sub
xchg
es
cwtl
add
popa
adc
push
cmpsb
outsl
push
mov
mov
push
push
fcomip
aaa
je
add
xchg
adc
lds
inc
js
xor
mov
lret
inc
xor
push
fs
jns
stc
dec
les
push
adc
les
cmp
into
dec
mov
mov
and
jle,pn
ret
sbb
jno
xchg
and
xorl
pop
int3
jg
jb
lds
int
inc
add
pop
ja
decb
out
xchg
add
or
aad
lds
dec
clc
test
popa
push
xchg
lock
jecxz
hlt
cmpsl
fsubs
fwait
shl
sub
adc
sub
jge
adc
mov
push
int
xor
int
aaa
fwait
scas
mov
insl
add
xchg
xor
inc
sub
jbe
inc
lret
cli
sub
icebp
xchg
in
jb
push
rcrl
adc
pop
cmp
mov
popf
daa
fsubrs
lds
ss
imul
iret
loope
inc
enter
xchg
pop
xchg
int3
enter
add
sbb
mov
or
cmpsb
mov
es
fimuls
adc
adc
in
lods
mov
aas
les
imulb
fstp
jno
int3
loopne
jp
clc
push
test
dec
pusha
or
addr16
and
mov
adc
lods
shlb
jno
lods
outsl
mov
cmp
das
pop
xlat
icebp
popf
jb
or
jmp
out
sbb
je
cs
push
cmpl
inc
movsl
sub
mov
xchg
sub
sbb
add
xor
fsubrl
and
xchg
imul
nop
subb
cltd
inc
movsl
fildll
sub
push
call
pusha
in
loop
or
sub
inc
xchg
mov
mov
push
push
fcomps
in
ja
jecxz
mov
cld
popa
call
subl
fmull
sbb
loope
jb
fsubrp
push
xlat
subb
xor
or
inc
pop
xchg
imul
inc
icebp
sbb
outsb
sbbb
mov
aas
out
or
cmp
inc
add
push
sbb
in
pusha
or
add
mov
push
orb
mov
mov
insl
adc
rorb
jmp
jge
xchg
movb
cli
add
test
sbb
lods
dec
cmp
mov
lret
jbe
push
aas
aad
stos
lods
mov
cmpsb
pop
mov
pop
ljmp
cmc
xchg
push
hlt
push
adc
mov
mov
outsb
mov
inc
adc
and
dec
subb
test
xchg
notb
mov
dec
cwtl
stos
jp
xor
jo
jle
das
imul
sbb
mov
sub
test
nop
push
sub
inc
cmp
and
sub
or
cli
aas
inc
dec
fbstp
push
fwait
mov
adc
pop
pop
push
scas
add
xor
jbe
mov
lds
mov
pop
shrb
and
mov
cmp
and
dec
mov
sub
fs
fists
xchg
std
popf
xor
je
cmp
mov
imul
cmpsb
cmp
pop
cmp
mov
sbb
shl
loope
sarb
out
cli
dec
lahf
push
push
stc
nop
cmp
lret
xchg
xchg
sub
push
cltd
jecxz
pop
cmp
xor
lds
notb
nop
xchg
fiadds
cltd
mov
inc
xor
mov
mov
xchg
outsl
sub
clc
inc
insl
les
jecxz
loop
outsb
push
cmpsl
push
xchg
imul
add
das
mov
lret
lahf
lret
xchg
mov
sbb
fnstenv
add
testl
adc
jns
jb
lea
push
xor
or
fildl
sbb
fbld
push
dec
cld
adc
xorl
idiv
sub
pop
loopne
test
mov
add
pop
push
aam
cwtl
jae
mov
fidivl
xchg
push
ret
dec
push
xchg
xchg
or
cltd
push
popa
add
mov
cmp
es
pop
adc
add
sub
sub
test
fmulp
cmp
pop
mov
push
aas
ficoms
in
in
cmovs
je
jne
lahf
and
lret
es
ljmp
int
pop
int3
mov
cmc
in
in
adc
lret
outsl
fsts
sbbb
enter
hlt
pop
push
lret
stos
xchg
xchg
mov
pop
stos
jl
icebp
ljmp
lret
mov
fcmovu
outsb
jle
mov
test
arpl
lock
insl
aam
add
cmp
mov
or
sbb
jae
test
mov
int3
das
xor
or
sub
mov
pushf
rorl
es
mov
mov
inc
push
sbb
sub
lds
hlt
sub
div
dec
cmp
adc
jns
pushl
ret
mov
test
or
mov
sti
dec
in
xor
mov
adc
sbb
mov
pop
insl
stc
mov
sbb
push
int
pop
ja
sub
xchg
and
mov
subl
lahf
pop
mov
inc
pusha
lcall
stos
jmp
sbb
push
or
xchg
push
or
call
stos
pop
lock
int
dec
imul
adc
ja
imul
sbb
cmp
stos
out
xor
xor
pop
inc
ss
pop
aad
mov
cmpl
cmp
in
dec
out
cmpsb
dec
xor
inc
out
rorb
in
dec
cmc
push
cmc
arpl
mov
cmp
movsl
mov
addr16
icebp
ret
jb
gs
xchg
inc
idivb
scas
bound
pusha
gs
mov
cmp
sbb
cld
clc
sahf
mov
sbb
add
loop
call
or
sub
jp
jle
push
daa
lea
and
fdivr
push
push
push
fiadds
cs
inc
pop
icebp
and
inc
mov
inc
jg
mov
ficoml
ret
ss
mov
adc
mov
das
sub
sub
ficomps
jle
jp
mov
push
fwait
lret
out
in
cltd
xor
shrl
or
es
fstpl
stos
rorb
out
cmpsl
rorb
cli
sub
hlt
pop
jle
push
adc
loop
xchg
jge
call
cmc
stos
inc
cmpsl
jae
vdivps
pusha
mov
cmc
es
out
push
jecxz
cmp
adc
add
xchg
inc
sbb
mov
das
popa
faddl
pop
or
adc
jl
loope
push
mov
push
cmp
out
sbb
mov
in
mov
adc
daa
inc
sub
mov
pop
das
mov
push
lods
shrb
les
subl
or
loope
cmp
cwtl
or
mov
out
lret
adc
and
fnstenv
mov
les
push
lea
ret
in
cld
pushf
push
test
mov
call
testb
dec
loop
or
testb
aas
mov
andb
fcmovnu
cwtl
fs
and
mov
push
fsubrp
cld
and
inc
out
icebp
lods
fcmovnu
dec
adc
or
mov
lea
pusha
xor
mov
push
cmpsb
xor
sbb
adc
clc
push
sbb
insl
lahf
mov
repz
das
repz
jle
or
ja
cmp
mov
lcall
mov
push
in
xchg
inc
lahf
loope
stc
lods
add
fcompl
pop
jb
iret
xor
push
lahf
rcr
sbb
mov
push
mov
jno
mov
cltd
adc
daa
sub
cmp
mov
stc
mov
aam
pop
jno
push
mov
aad
push
add
icebp
push
les
fdivrs
mov
mov
push
or
adc
pop
dec
sbb
xor
insb
inc
lods
sub
mov
pop
adc
dec
mov
pop
ja
into
popa
lods
adc
lcall
icebp
sub
stc
in
das
outsl
or
jp
pushf
sbb
imul
pop
fdivs
or
loop
outsb
lds
add
sbb
mov
ret
cmp
sbb
insl
pushf
jge
loope
jne
je
les
push
lret
xchg
rolb
je
sbb
push
xchg
or
push
cmp
xor
loope
mov
mov
in
inc
xchg
into
ficoml
in
jns
inc
mov
std
ret
jb
jno
fsubs
mov
dec
mov
out
outsb
add
dec
adc
cmpl
rcrl
mov
das
in
jbe
into
cmp
pop
or
and
clc
jo
or
jns
inc
mov
fs
popa
xchg
loope
imul
xchg
int
fildll
sbb
aam
jge
ss
es
mov
pop
dec
dec
add
int3
cmpsb
lret
pop
addb
fldt
lahf
sbb
pop
lods
stc
or
inc
inc
gs
aam
es
jbe
dec
in
out
adc
mov
inc
test
mov
mov
outsb
sub
lret
mov
stos
stos
cld
push
sbb
insl
push
dec
fwait
pop
mov
pusha
es
push
cmp
pop
nop
pop
push
inc
dec
sbb
mov
jbe
pop
pop
das
xor
jp
in
test
inc
je
ja
mov
add
mov
or
mov
sbb
mov
push
fdivrl
int
mov
mov
xor
cltd
lea
addr16
lods
sbb
cmovns
fwait
xchg
cld
addr16
xchg
xor
push
iret
pop
insl
cmp
or
xchg
or
stos
add
lahf
ss
and
sub
ret
and
scas
push
add
pop
mov
push
mov
pop
xchg
in
mov
mov
ja
jle
cwtl
jae
push
fstpl
add
mov
shll
mov
push
xor
ss
fcmovnu
mov
loope
mov
lods
add
addr16
mov
pop
jne
adc
aaa
test
dec
inc
push
dec
add
or
push
test
pop
out
xor
dec
sbbb
push
push
fwait
jno
dec
cs
lea
push
sbb
out
jae
sbb
or
cmp
add
add
jmp
or
ljmp
addb
cmp
dec
adc
jae
movsl
push
mov
xchg
or
jl
scas
inc
hlt
movsb
jge
je
mov
outsl
test
dec
push
cmpl
ljmp
imul
or
mov
xor
out
xchg
lcall
lods
jbe
shl
lods
lea
in
jg
mov
mov
mov
mov
push
movsb
dec
je
outsl
jg
xchg
es
fs
pop
sbb
shrl
cmp
shrl
or
pop
push
mov
je
mov
or
xor
dec
mov
ljmp
gs
mov
sub
adc
mov
das
lea
mov
adc
js
push
and
push
or
add
into
addr16
stos
jp
push
mov
aad
xor
sti
or
add
jmp
movsl
test
ret
jno
mov
cmp
repz
xor
fidivrl
sbb
dec
lcall
bnd
pop
cmp
push
imul
xorl
in
push
or
xlat
outsb
fs
jno
cmp
adc
add
popf
mov
push
xchg
jb
hlt
mov
inc
add
sahf
orb
jne
xchg
sarl
cmp
adc
gs
cltd
adc
sbb
lods
xor
mov
dec
cmp
push
lcall
push
mov
sbb
pop
push
cmp
xor
test
sub
call
push
std
jo
daa
xor
aad
cltd
mov
enter
xchg
loope
dec
jbe
adc
shrl
test
std
mov
movsb
es
int3
pop
jecxz
das
leave
inc
inc
popa
jle
push
aas
push
cmpsl
jae
add
inc
push
inc
roll
jno
xor
adc
fadd
in
xchg
push
mov
cmpsb
lock
sti
jbe
push
mov
xor
mov
push
mov
loopne
or
insb
dec
sti
inc
dec
rcr
out
loope
scas
and
mov
daa
adc
cmpl
sub
xor
int3
cwtl
cmp
adc
in
hlt
nop
notb
imul
das
inc
add
subl
lds
cwtl
sbb
lret
es
pslld
mul
adc
jp
and
mov
push
lahf
les
mov
dec
dec
add
and
jle
pusha
pop
sbb
insl
dec
es
sub
push
adc
andl
inc
push
iret
add
pop
ror
pop
jmp
add
aaa
sub
in
lods
pop
dec
mov
ret
push
sub
imul
in
cltd
test
stc
shlb
pop
movsl
mov
sti
enter
sbb
xor
idiv
out
nop
cmp
cmpsl
mov
cs
loop
loop
dec
ds
pop
jo
mov
das
and
add
imul
iret
in
decl
nop
gs
sub
sbb
mov
mov
jle
dec
xchg
sub
cmp
shrb
mov
lock
out
and
inc
fnsetpm(287
pop
cmp
or
loopne
addr16
in
push
lret
mov
pop
js
stos
rcr
mov
aam
jns
clc
stos
mov
xor
out
mov
int3
and
imul
out
sub
cmpsb
add
rclb
mov
push
sbb
xlat
inc
cmp
mov
loope
into
push
push
mov
les
stos
arpl
int3
popf
xor
sbb
push
and
stc
das
cmp
les
imul
adc
outsb
fimull
push
mov
pop
sahf
stc
dec
dec
xchg
cmc
pop
xor
jns
sbb
cwtl
and
shll
jp
and
leave
loop
rol
lods
repnz
dec
inc
sub
cmpsl
mov
mov
xchg
les
dec
addr16
clc
out
rcl
pop
in
fwait
adc
fdivs
jbe
adc
cltd
test
div
pop
cmc
out
inc
in
cmp
out
dec
cmc
adc
icebp
sub
push
xor
testb
jle
rorb
hlt
inc
push
xor
ret
cmp
mov
pushf
push
xchg
nop
jbe
lock
mov
outsl
ret
leave
push
dec
imul
aaa
lret
es
testb
pushf
outsl
xchg
push
push
mov
out
xchg
cmp
push
jnp
jge
out
push
mov
pop
rep
dec
inc
fbld
jp
add
btc
xchg
mov
dec
or
mov
lea
loop
popf
hlt
lock
rorb
sbb
popa
xorl
pop
dec
stc
jecxz
adc
movsb
aaa
adcl
daa
xor
scas
sbb
int
jge
das
add
jns
test
enter
adc
lock
and
pop
dec
incl
adc
shrl
adc
lcall
fcmove
dec
fs
ds
je
mov
stc
xorl
mov
push
insb
roll
xchg
leave
ficompl
cmp
mov
out
lea
jecxz
pop
jns
adc
loopne
test
cmp
std
shlb
mov
sarl
mov
push
loope
mov
jecxz
mov
push
movsb
stc
adc
sbb
jle
insl
mov
or
xchg
dec
cld
cmpsl
les
ss
inc
xchg
mov
push
and
iret
xor
add
outsb
sbb
shll
arpl
mov
xor
shlb
fbstp
ret
cmpsl
addb
sub
sub
fisubs
push
push
pop
cltd
add
or
xor
shll
ret
pop
pop
xor
loope
add
sub
and
sub
sbb
sbbb
push
lahf
notb
andb
pop
icebp
push
add
test
sahf
int3
dec
lcall
out
test
lahf
stos
fidivrs
repnz
jbe
jmp
or
sbb
jb
stc
aad
xchg
rcrl
push
in
hlt
fdivrs
scas
or
ret
out
mov
jle
mov
cld
push
inc
fwait
mov
and
sahf
imul
sti
ffreep
add
xchg
or
stc
pop
mov
xchg
xchg
mov
faddl
cmp
cwtl
jne
pop
repnz
xchg
jns
andl
aad
mov
pop
jge
xchg
mov
mov
and
cmc
pop
cltd
fs
push
and
inc
push
leave
mov
lcall
dec
adc
jns
mov
mov
fcmovb
insb
push
out
add
in
jne
mov
inc
xor
pushf
outsb
rol
out
jle
mov
add
mov
movsb
cltd
or
pop
in
xlat
pop
mov
mov
in
ss
stc
test
push
push
test
xor
mov
mov
inc
and
std
mov
das
stc
jp
out
aaa
gs
insb
mov
iret
in
cmp
notl
stc
sub
add
xchg
sbb
cltd
arpl
cmp
std
test
push
js
dec
adc
nop
pop
cmc
nop
add
lcall
add
das
mov
adc
xor
xchg
jecxz
fwait
jecxz
push
push
sti
vhaddpd
out
sbb
movsb
jmp
push
call
or
and
xchg
fwait
cmp
cld
push
outsl
inc
out
sbb
ja
pop
sbbb
ret
push
and
int
or
decl
ja
int3
sub
mov
lret
mov
sti
iret
iret
dec
sbb
ds
push
fnstcw
mov
cmp
lds
popa
sbb
xchg
out
hlt
dec
cwtl
test
shlb
loope
loope
out
mov
scas
lahf
std
shrl
mov
outsb
sub
in
xchg
imul
lret
add
out
std
mov
roll
and
sbb
adc
and
mov
pop
jecxz
scas
mov
jl
aam
out
or
scas
lods
push
sbb
cmp
imul
push
sbb
and
fidivl
cmpsb
mov
xchg
xor
jle
pop
push
inc
fimuls
inc
jecxz
mov
daa
mov
sub
jle
push
in
fcompl
ljmp
mov
mov
fidivrs
addr16
dec
ja
mov
mov
test
filds
loope
mov
in
ss
and
sub
shl
sahf
in
add
lahf
mull
leave
or
push
iret
push
leave
fs
rolb
out
fisubrl
pop
out
js
repnz
sub
icebp
xchg
jge
xor
cld
stos
sbb
stos
sub
add
or
pop
add
or
cmp
int3
pop
cmp
inc
push
inc
aam
and
inc
push
or
adc
pusha
aas
lret
fs
inc
xchg
cli
adc
push
cli
ljmp
adc
and
pusha
jl
lds
cmpsb
mov
sbb
shl
push
pop
cmp
dec
pop
mov
jo
xor
mov
cmc
push
test
pop
shrb
mov
ss
aad
cmp
std
pop
cld
rorl
and
mov
imul
mov
dec
push
inc
sbb
arpl
xor
mov
mov
test
xchg
fidivl
jl
js
cmpsb
sub
xchg
outsl
int3
jae
mov
xchg
test
popf
test
cltd
pop
loope
cmp
sbb
mulb
cmp
fdivrs
rclb
inc
jne
mov
fildll
cmp
repz
cmp
pop
outsl
push
xor
ds
mov
push
inc
lds
loop
clc
sub
jae
daa
popa
and
shr
dec
xchg
pusha
dec
dec
loop
fsub
ret
repnz
imulb
addl
add
popf
xor
out
repnz
or
push
pop
repz
sub
mov
int3
into
mov
push
cltd
icebp
out
into
jne
add
mov
popa
bound
mov
mov
sti
mov
addr16
int3
push
cltd
sbb
push
mov
fbstp
ret
insb
fisttps
xchg
out
fiaddl
clc
and
movsb
sbb
hlt
jae
notb
add
jg
addr16
addr16
push
sub
adc
shll
js
call
pop
mov
decb
jge
arpl
sub
xchg
sbb
cmc
pop
es
lods
loop
clc
mov
outsl
push
cmp
pop
inc
add
jle
mov
sbb
sbb
xor
loope
push
and
xchg
sub
hlt
pop
push
fldt
mov
push
in
mov
loopne
pop
lods
jae
ficoms
mov
inc
xchg
push
sbb
mull
mov
jg
pop
sub
sbb
pop
mov
mov
aad
cld
push
fisubl
into
scas
andl
lcall
leave
mov
adc
sub
pop
std
jp
jo,pt
rcrb
mov
sahf
mov
and
popf
popf
js
mov
jg
or
daa
push
sub
pop
mov
mov
insl
sub
in
lods
dec
hlt
ret
pop
out
cmp
jno
sahf
jae
adc
inc
sub
jb
or
inc
repnz
fs
or
mov
ja
xchg
test
movsb
les
ret
ss
xchg
sub
lds
dec
sub
stc
sahf
les
sbb
adc
xchg
sub
xor
fs
and
jb
adc
jle
popf
sbb
add
aad
int3
cs
adcb
and
jle
js
lea
das
mov
adc
loopne
cwtl
inc
stc
or
stos
fs
fadd
add
mov
jns
inc
outsl
jo
popa
mov
dec
call
pop
jecxz
fbld
xchg
cmpl
ret
and
fidivs
cmp
inc
lods
iret
pop
pushf
cmpsb
enter
imull
jmp
push
push
lods
into
enter
or
xor
int
or
sbb
pop
pushf
xchg
sub
dec
xchg
add
test
popf
scas
adc
xor
icebp
push
cmp
pop
popa
push
out
cli
mov
dec
mov
rolb
gs
test
xchg
aas
push
fs
aas
cmp
cli
jne
aaa
mov
aas
fiaddl
xchg
mov
mov
jmp
out
stos
push
xor
popf
xor
inc
or
mov
movsb
dec
pop
mov
popa
inc
in
xchg
movsb
repnz
in
insl
daa
dec
outsb
mov
ret
hlt
addr16
push
adc
jne
pusha
fcomps
loopne
lret
pop
pop
sub
movsb
movl
orb
dec
data16
rcrl
add
out
gs
xchg
in
out
outsl
mov
in
jmp
stos
adc
and
push
mov
out
test
testb
inc
call
outsb
xchg
scas
and
dec
stos
in
push
fistpl
jecxz
lods
aam
mov
aam
scas
add
stos
in
aas
push
or
inc
push
sarb
jl
icebp
cmc
icebp
mov
into
jae
cmp
js
loopne
sbb
xchg
andb
xchg
rcll
jno
fidivs
movl
js
scas
push
dec
mov
aas
jo
cmp
pusha
push
sbb
dec
std
cltd
jecxz
nop
push
pop
jecxz
sbb
mov
pop
sub
aad
lahf
loop
inc
push
pop
cmp
fbstp
shlb
scas
jg
sub
call
adc
dec
xchg
xor
mov
ret
xor
cmp
mov
js
xchg
in
sbb
inc
fwait
add
jb
mov
push
repz
fcoml
dec
mov
jp
cmc
dec
jecxz
fidivrs
pushf
pusha
popf
and
pop
aas
subb
adc
leave
cmpl
dec
mov
lcall
xor
mov
mov
leave
mov
int
frstor
inc
pop
ror
and
mov
sub
out
sahf
jge
mov
mov
push
lea
mov
lds
jnp
jno
mov
fistps
arpl
jne
jnp
mov
xchg
adc
out
jbe
and
sbb
adc
icebp
test
jp
stos
test
and
lods
pop
sbb
and
xchg
lods
in
ficoml
fsubr
xor
cltd
mov
and
jnp
lock
adc
dec
aad
in
jecxz
cwtl
dec
pop
mov
fisubs
jo
shll
stos
movsl
jl
shll
inc
pop
xor
bound
mov
xchg
aam
fwait
xlat
in
in
je
mov
push
sbb
or
lods
xchg
sub
out
xor
out
fldt
in
pop
icebp
lahf
int
xchg
mov
fcompl
call
sahf
mov
and
sub
icebp
inc
cmp
jp
cltd
ret
frstor
divl
xchg
inc
int
shrb
pop
xlat
or
dec
adc
cmp
sub
into
aam
mov
sub
pushf
mov
inc
xor
mov
fs
xchg
inc
push
cmp
imul
bound
jb
test
popf
xor
mov
call
je
call
jmp
cwtl
imul
out
dec
xorb
xor
and
or
add
or
jecxz
adc
in
rcrb
mov
es
mov
adc
lahf
lret
mov
das
inc
jle
mov
rcrb
push
adc
dec
enter
aam
arpl
sti
in
daa
es
push
mov
shrb
adc
pop
pop
jmp
cltd
test
dec
adc
xor
mov
xor
sti
jg
pop
lahf
pop
sub
or
movsb
fwait
or
jg
in
in
fisttpll
adc
mov
sbbl
pop
outsl
test
int3
lock
xorl
pop
push
jno
or
outsb
and
pop
scas
jb
xor
in
frstor
or
test
pop
sbbl
aad
fbld
test
std
and
in
test
ret
jns
add
mov
mov
jo
mov
push
mov
cmpl
stos
add
mov
ljmp
pop
pop
lea
sub
ja
mov
int
sbb
int
cli
sti
test
xchg
and
bound
rcrb
jb
lahf
scas
mov
out
jmp
in
mov
sbb
movsb
popl
push
pop
aas
iret
pop
mov
cmp
and
xchg
sub
push
mov
inc
adc
loop
icebp
nop
out
push
mov
mov
daa
jbe
movsb
mov
stos
add
mov
jno
test
add
das
xchg
arpl
mov
jl
add
popf
lahf
pop
xor
ja
xchg
or
aad
aad
lret
cmpsl
repz
adc
stos
test
mov
pop
scas
out
inc
fcmovnu
cwtl
mov
push
jae
fstl
mov
hlt
cli
push
outsb
das
mov
or
ret
push
test
das
mov
xchg
call
adc
mov
sub
inc
mov
in
pop
out
push
cmp
jnp
add
pop
cmpsb
adc
sbb
in
inc
negl
mov
mov
out
mov
into
int
mov
enter
pslld
push
mov
cmpsl
mov
cwtl
xor
pop
adc
adc
pop
or
test
bound
lahf
loope
dec
subb
cltd
dec
insl
add
lods
outsl
decl
mov
inc
rclb
xor
push
loop
and
jne
aas
inc
add
xchg
adc
call
cli
pop
or
daa
xchg
movsb
out
stc
nop
mov
sbb
push
push
inc
les
pop
dec
xor
in
ja
fmuls
pop
jl
stos
inc
lahf
sbb
ss
enter
mov
jbe
xchg
pop
enter
ret
inc
psubsb
mov
sbb
jle
loop
xlat
lcall
sbbb
sub
push
js
das
inc
lret
pushf
or
and
inc
fistpl
popa
pop
adc
mov
stc
out
xchg
add
jg
pop
shrl
fildll
popf
int3
push
fs
scas
sbb
mov
nop
lcall
das
movsb
mov
add
mov
adc
inc
mov
cltd
mov
fwait
pop
or
repnz
push
mov
push
push
xchg
daa
add
leave
lret
push
adc
mov
nop
add
sbbl
fsubs
lahf
test
mov
fldcw
das
scas
arpl
mov
push
leave
pusha
adcl
pop
pop
adc
mov
stos
add
out
test
jl
in
ret
jle
mov
cmp
inc
fiadds
mov
dec
mov
push
in
sbb
mov
xchg
int
or
jecxz
mov
call
push
mov
xchg
adc
stc
nop
push
sub
pop
pop
scas
mov
xor
adc
test
fildll
mov
fisubs
pop
xchg
arpl
lods
mov
faddp
pop
pop
cld
xchg
sub
fists
cmpsb
sbb
lock
add
lods
mov
loop
pop
shlb
and
gs
inc
push
jno
jle
inc
mov
fdivrs
out
xor
xor
psubw
outsb
iret
sbb
jb
jmp
pop
pop
fnstcw
ficomps
fidivl
push
loopne
pushf
push
sti
push
cmpsl
pop
sahf
es
fnsave
popf
add
sub
xchg
mov
inc
ds
add
xlat
je
mov
or
aas
sub
mov
fidivrl
sbb
xor
jne
add
and
pop
iret
lods
rolb
andb
mov
imul
std
jle
leave
pusha
pop
imul
sub
mov
cmp
xor
jns
and
pop
ret
jb
sbb
push
arpl
cmp
gs
gs
inc
mov
mov
popa
cmp
lea
dec
ja
lret
mov
jl
inc
in
icebp
aad
lcall
and
sti
xor
enter
and
pop
rcrl
daa
stos
iret
rorl
push
push
sub
arpl
cmc
je
xlat
insb
lahf
cmp
insl
mov
dec
movsb
or
mov
cmp
mov
cmp
xor
pop
inc
xor
cmp
push
adc
lahf
sarb
loope
push
lods
mov
mov
cmp
fwait
cmp
adcl
aam
loopne
aad
sti
mov
sub
rcll
inc
popf
or
cmp
test
dec
mov
les
les
or
dec
pop
adc
bound
push
movsl
pusha
inc
and
mov
xchg
xor
sub
push
and
mov
mov
cwtl
sub
shlb
call
sbb
inc
pop
inc
aaa
iret
imul
and
ret
lods
jmp
je
xchg
sub
sbb
xor
pop
and
in
sti
xor
mov
aad
lds
mov
testb
cmp
js
fadds
mov
fistl
push
or
test
mov
pop
mov
or
scas
js
or
test
cs
test
leave
out
nop
pop
and
add
dec
jmp
inc
push
mov
aas
sub
lods
cmp
scas
lods
cmp
mov
push
dec
or
jno
outsl
ret
or
add
stc
repnz
push
fldenv
inc
jmp
js
add
inc
push
mov
in
fcmovnb
and
call
stos
push
andb
rolb
sbb
jno
mov
loop
push
rclb
jp
mov
and
mov
sub
cs
inc
sub
inc
ret
inc
cld
enter
xlat
data16
lds
dec
sbb
mov
jp
sti
or
int
hlt
add
ret
je
aaa
stos
cmp
pusha
addr16
cmc
adc
cmp
mov
dec
mov
adc
loopw
inc
ljmp
xlat
xchg
aam
mov
iret
mov
pop
jae
mov
cmp
leave
xor
cmpsl
xor
pop
jae
and
mov
adc
rolb
nop
bts
loop
arpl
fwait
sbb
nop
push
cli
jnp
inc
sub
andb
call
test
testb
orb
mov
testl
push
inc
in
cmp
aad
mov
inc
ret
data16
push
cli
jl
insl
loopne
adc
and
psubsb
movsl
in
inc
push
mov
cltd
adc
sub
jbe
imul
add
hlt
fisubrs
mov
js
lock
call
fs
sbb
idivb
mov
and
inc
fisubrs
inc
pop
repz
gs
push
and
mov
xorl
mov
mov
mov
pop
push
inc
fmuls
pop
dec
sub
icebp
dec
sub
push
or
js
repz
mov
in
xor
adc
enter
push
cwtl
adc
mov
jmp
cmp
mov
mov
out
andl
pusha
jmp
sub
xlat
xor
lods
and
add
add
aad
rol
ret
in
loopne
outsl
sbb
rorb
into
ret
mov
xlat
in
lods
sbb
lds
inc
pop
icebp
mov
add
out
or
fnstcw
sbb
andb
mov
inc
dec
mov
push
xor
ljmp
pushf
das
das
pop
push
insl
mov
jns
sub
in
popf
adc
pop
iret
int3
or
shrl
int3
mov
xchg
inc
cs
mov
sbb
dec
pop
adc
ffreep
dec
add
jne
lods
xchg
add
push
imul
or
mov
mov
or
xchg
repz
push
mov
shr
scas
jbe
cmp
stc
inc
out
aaa
mov
imul
iret
cmpsb
pop
iret
sbb
cmp
xor
adc
lds
mov
mov
mov
pop
pop
jge
or
mov
out
mov
pusha
push
and
dec
loop
rorb
lea
das
imul
pop
ret
jno
ret
ret
push
insl
sarb
or
cltd
inc
int3
mov
and
shrl
cwtl
push
clc
adc
imul
mov
pushf
mov
sbb
jae
negl
mov
jbe
xchg
test
popf
std
rolb
jns
movsl
adcb
outsb
jno
pop
push
mov
xor
imul
insl
or
popf
sub
ret
lcall
and
or
test
and
jnp
lahf
enter
aam
push
out
das
lahf
daa
and
ds
mov
sti
lret
stc
popf
data16
xor
push
popf
movsb
dec
cld
mov
push
mov
jl
cmpsb
scas
inc
fsubrs
cmpb
dec
int3
fbstp
mov
jge
arpl
je
fisubrl
mov
call
jb
enter
dec
mov
jnp
push
xchg
pop
rcl
sub
call
lcall
std
and
xchg
insb
js
xorl
popf
mov
mov
aaa
sub
lods
lods
sbb
test
inc
stos
xor
scas
and
jns
loopne
shll
mov
fcmove
xchg
decl
scas
test
call
push
cmpsb
lea
sarl
add
int3
sub
push
scas
ljmp
pushf
das
fistpll
fmull
mov
scas
lods
arpl
fisttps
lahf
lods
add
movsl
push
fldt
jno
mov
add
out
pop
sbb
dec
fistl
xor
cmpsb
inc
sbb
testl
int3
sub
push
jno
test
jle
fdiv
push
cmp
push
aam
lcall
scas
mov
mov
inc
inc
xorb
pop
dec
das
cmp
mov
mov
lret
sbb
mov
sub
popf
insl
push
js
mov
push
movsl
mov
adc
pusha
push
sub
cmp
xlat
inc
sbb
shrb
inc
lret
xchg
inc
sbb
in
pop
dec
pusha
pop
push
ds
push
outsb
insb
add
lds
pop
movsb
addr16
repnz
lcall
divl
mov
jbe
adc
je
fbld
cmc
mov
adc
mov
fistl
mov
add
sbb
xchg
aas
hlt
dec
pushf
ja
icebp
add
adc
adc
jns
cmpl
add
xchg
mov
xor
scas
and
ficomps
push
mov
jp
shrl
loop
sbbb
xchg
outsb
xchg
ds
push
mov
xlat
pop
test
dec
stc
popf
out
mov
push
in
or
or
lods
or
aas
inc
hlt
out
cmp
stos
push
es
lds
les
xchg
rcl
insl
test
pop
push
popf
call
xchg
stos
shll
pop
out
pop
fstl
jno
pop
and
seta
stc
push
adc
jno
aam
mov
mov
or
insl
sub
sbb
test
adc
dec
mov
jp
call
scas
dec
data16
cmp
in
and
or
jne
adc
lahf
sbb
int
sub
les
out
fisttps
dec
clc
inc
mov
movsl
cld
mov
rcrb
cmp
lock
or
push
inc
jl
mov
mov
nop
push
call
out
outsl
jnp
add
dec
roll
and
nop
cwtl
imulb
sub
dec
in
mov
hlt
push
cmc
lods
push
sbb
xor
pop
insb
lds
in
lret
ss
in
cmp
mov
cmpsb
lds
iret
idivb
fwait
call
cmp
jae
mov
xor
xchg
dec
dec
or
insl
lock
jge
push
std
xchg
push
inc
jg
mov
movsb
es
in
gs
mov
rcll
pop
arpl
addr16
cmp
iret
fsubl
sub
test
sub
cmp
pop
dec
es
mov
or
adc
xchg
loopne
mov
popa
jmp
stc
jnp
add
pop
sub
pop
mov
lret
mov
aad
int
aas
test
xor
sub
leave
inc
jp
inc
das
jbe
data16
pop
and
xchg
jne
jg
push
adc
mov
mov
mov
dec
mov
sub
cmp
jae
arpl
in
push
mov
sub
call
out
cld
outsl
cld
imul
sbb
mov
dec
loopne
lret
pop
gs
test
repnz
cli
pushf
fcmovb
inc
mov
ljmp
das
je
notrack
xchg
mov
loopne
dec
fiaddl
mov
mov
add
jb
pop
inc
out
scas
fwait
sti
int3
rolb
mov
adc
sbb
mov
cvtdq2ps
jge
ret
sub
mov
push
push
jle
fwait
mov
or
push
sub
mov
inc
inc
fidivs
inc
gs
pop
data16
pop
xchg
stos
dec
sub
sbb
cmp
cwtl
sti
lahf
movsl
cmp
mov
hlt
inc
sbb
shrb
or
mov
aaa
jmp
cmpsl
sbb
mov
lea
stos
fsubrs
cltd
add
stos
outsl
mov
jge
mov
repz
out
cltd
js
or
lret
xlat
mov
jno
mov
test
cmpsl
cmp
xor
fdivrl
outsl
popa
push
dec
popa
or
sbb
mov
mov
enter
pop
aad
adc
stos
adc
adc
orb
notb
hlt
mov
inc
jnp
cld
stc
adc
aad
mov
subl
aam
rcr
dec
cld
xchg
jle
jg
or
bound
iret
xor
adc
std
add
push
ss
sbb
push
push
cwtl
and
inc
addr16
or
ss
mov
xchg
push
inc
jecxz
adc
pop
pop
adc
xchg
gs
jb
xor
mov
fucomi
xor
in
test
xchg
mov
movsb
pop
jbe
jns
cmp
push
jecxz
rclb
dec
repnz
divb
inc
inc
adc
push
mov
or
and
dec
lods
or
dec
mov
repz
or
mov
test
mov
loopne
jne
pop
mov
ljmp
mov
fldl2t
out
pop
outsb
fsub
inc
sub
mov
ds
imul
ds
dec
pop
adc
push
nop
push
nop
lods
jle
movsl
cmp
pusha
jl
testb
inc
repz
sub
jle
test
repz
or
test
add
fucom
pop
mov
repnz
or
rorl
inc
rcl
leave
ds
mov
repnz
add
mov
mov
push
addr16
fmull
sti
dec
ds
call
and
cmp
test
xchg
jo
pop
inc
jp
xchg
fs
push
loop
push
iret
add
or
dec
js
xchg
popf
xlat
xchg
jmp
xlat
outsb
sahf
addl
inc
loopne
sbb
sub
mov
dec
mov
enter
mov
add
and
dec
loop
subb
iret
cmp
mov
addr16
fucomip
inc
xor
out
pop
or
xchg
jle
outsb
inc
sub
stc
mov
sbb
lret
and
mov
mov
sti
clc
or
popa
cmp
popa
clc
pop
movdq2q
cmp
jg
sti
pop
sub
add
sub
lret
or
arpl
xchg
fwait
and
mov
and
addb
mov
mov
cmc
push
mov
iret
bound
sti
jbe
adc
bound
xor
call
inc
fwait
rclb
push
mov
pop
movsl
or
sbb
push
jecxz
adc
sub
out
mov
je
cmp
cmp
push
jne
cmp
in
cmpsb
jb
subb
push
jmp
cmp
int3
dec
adc
push
std
xor
decl
cmp
sub
shrl
popf
jle
xchg
xor
clc
sahf
xlat
and
jb
xor
fwait
jmp
add
xchg
fsubrs
inc
pusha
je
mov
dec
fdivrs
or
jge
pop
fsubl
sbb
in
test
ds
fstpl
sbb
jge
out
push
sahf
iret
sbb
pop
mov
mov
pop
mov
xor
and
aas
sahf
addb
adc
jno
popf
movsl
xor
mov
dec
mov
stc
ja
sahf
fs
loop
xor
test
lds
repz
mov
das
mov
into
mov
test
jns
cwtl
mov
dec
mov
cwtl
outsl
adc
and
push
stos
jmp
dec
andl
push
fdivrl
std
or
mov
mov
mov
popf
dec
xchg
inc
pop
fadd
in
cmp
cmp
out
push
stos
lds
inc
pop
les
movb
pop
and
sub
dec
pop
fsubrp
jno
xchg
pop
jbe
adc
fistpl
push
hlt
lret
mov
xor
add
pop
xchg
stos
pop
out
pushf
aaa
mov
insb
mov
jae
insb
jns
sbb
inc
aad
aaa
hlt
sahf
test
aam
sub
push
adcb
cmp
movsl
in
inc
in
out
inc
out
cmp
gs
daa
es
mov
pop
jb
stos
jp
test
lods
xchg
ret
dec
std
outsb
mov
inc
out
inc
fcmovb
in
inc
shrb
xchg
enter
flds
xlat
bound
inc
fstpt
daa
mov
xor
push
sub
inc
scas
mov
mov
or
or
or
pop
mov
sarl
ljmp
rcll
pop
imul
jno
shlb
cmp
push
pop
sub
mov
movsl
lds
xchg
scas
mov
nop
jo
in
or
test
and
mov
jg
add
and
ljmp
test
xor
xchg
dec
push
repnz
dec
sub
das
repnz
dec
pop
or
cmp
xchg
dec
scas
mov
inc
shlb
mov
add
jmp
mov
rcll
scas
scas
loope
sub
lods
mov
pop
inc
cmp
jb
mov
pop
data16
dec
push
les
or
ret
ret
inc
imul
adc
and
or
mov
add
fmul
xchg
or
loope
add
int
pusha
push
in
aaa
in
test
sub
xor
inc
decb
mov
dec
je
sahf
and
lret
xchg
in
cmp
inc
test
sahf
add
es
mov
inc
lds
mov
jp
jne
mov
mov
aaa
into
daa
push
sub
dec
push
sub
sub
mov
dec
dec
xchg
pop
add
xchg
push
popf
sub
push
repz
add
movsb
mov
mov
xor
jbe
xor
xchg
and
dec
js
out
dec
dec
lock
into
push
cli
loopne
xchg
push
sbb
ret
fwait
inc
push
popf
jg
xchg
mov
pop
cmp
mov
xor
mov
popa
clc
rdtsc
jo
xchg
mov
pushf
das
cs
loop
cmp
or
fwait
rcl
pop
stos
xchg
gs
pop
jne
jle
jle
push
lods
add
jns
jmp
jp
mov
lcall
and
nop
ret
sbb
pop
ret
and
mov
mov
mov
gs
es
inc
mov
xor
xchg
add
mov
sahf
cmpsl
clc
xor
push
movsl
dec
arpl
dec
test
out
jne
xchg
mov
inc
jecxz
adc
inc
cmpsb
add
mov
cs
push
push
sub
sbb
pop
add
inc
and
mov
lcall
cmp
aaa
jecxz
xor
fwait
add
fnstenv
fidivs
mov
push
xchg
stos
into
shl
pop
mov
mov
push
inc
popa
jle
xchg
mov
jnp
mov
lock
dec
outsb
fs
jl
mov
sahf
fnstsw
into
push
lods
dec
iret
aam
jo
addl
iret
fistpll
push
nop
mov
sbb
outsl
and
fwait
jl
cwtl
add
jle
jecxz
mov
mov
sbb
mov
adc
stos
int3
jg
ret
leave
mov
push
xor
loopne
ja
sbb
and
push
xor
loope
inc
popa
mov
scas
pop
imul
pop
sti
sti
inc
cltd
jecxz
dec
fmull
push
bound
xchg
xchg
fldenv
fucomip
movsl
pop
xchg
sub
sub
ficompl
mov
testl
fidivrs
ret
cmp
inc
enter
js
les
jge
in
loop
repnz
pop
and
or
movsl
xlat
sub
or
subl
add
test
fmuls
or
rorl
inc
arpl
push
sub
pop
cmp
xor
sub
or
sbbb
mov
add
mov
jno
sbb
push
jecxz
fimull
mov
andl
xchg
mov
imul
iret
fmull
mov
aam
les
idiv
jge
sub
repz
or
cmp
test
lahf
add
test
ja
pop
and
adc
jl
xor
test
xchg
mov
dec
test
jmp
repz
jbe
inc
push
imul
popf
aam
cltd
xor
sub
cmp
or
xchg
js
dec
lock
stos
inc
mov
xchg
dec
loop
jo
insb
lods
push
call
std
mov
adc
nop
adc
aad
cltd
jp
dec
dec
scas
inc
sub
dec
int3
pop
cmc
lret
repz
mov
and
popf
cmp
and
push
mov
xchg
shlb
icebp
mov
mov
or
aas
xchg
inc
xchg
fisubl
dec
test
stc
and
cmp
data16
sub
std
cmovs
adc
push
stos
mov
pop
mov
push
sub
or
cmp
imull
pop
cmp
stc
push
inc
loopne
daa
fsubp
mov
mov
push
mov
add
sbb
add
test
outsb
shrb
sbb
lahf
mov
test
jo
ret
out
ja
arpl
push
dec
lcall
mov
add
ljmp
fidivrl
ret
call
jne
pop
cmpsl
data16
movsb
stos
mov
push
sbb
inc
push
into
cmpl
andl
mov
jb
ret
pop
je
cmp
jnp
frstor
push
aad
adc
out
add
push
movsl
testb
js
add
lods
and
pushf
lcall
fs
icebp
mov
mov
cpuid
fcomp
pop
in
bound
xchg
aas
out
gs
out
daa
ljmp
push
js
add
xor
jecxz
cmpsb
out
dec
in
enter
jbe
sub
add
loop
nop
mov
in
xchg
aas
dec
push
rcrb
fisubrl
arpl
lret
out
int3
jns
jp
push
lcall
xchg
mov
push
adc
ja
mov
push
push
add
fiadds
push
jle
pop
pop
and
arpl
push
adc
jns
les
fbstp
inc
mov
psrad
mov
add
xor
adcl
xchg
push
adc
js
pop
or
dec
fwait
jnp
int
dec
popa
stos
or
inc
mul
mov
stos
push
add
cmp
fs
add
leave
mov
jmp
loope
xchg
push
in
outsb
imul
movsb
xchg
pop
push
mov
sbb
add
dec
ret
lret
jmp
sti
ret
sti
mov
lock
xor
dec
icebp
adcl
dec
cmp
nop
push
push
fidivrl
mov
dec
inc
pop
loope
aaa
pmovmskb
or
push
sarl
sbb
add
sub
inc
addl
sbb
leave
data16
or
les
insb
sahf
or
inc
cwtl
lods
ror
fnsave
jae
movb
mov
loope
lret
mov
orb
push
sbb
ficompl
notl
cmp
mov
pop
mov
out
and
and
repz
popl
mov
mov
xorl
xor
xor
repz
mov
sbb
pop
and
xchg
pop
mov
in
push
testb
mov
inc
pop
jge
push
mov
or
je
test
mov
and
mov
jge
enter
xchg
and
inc
ret
lcall
xchg
lods
not
lods
xchg
gs
and
jne
aad
mov
add
lock
pop
loope
jp
aam
inc
pushf
outsl
xchg
shl
mov
mulb
push
lcall
mov
sbb
mov
pop
lods
push
adc
lret
ss
rcrl
mov
inc
lret
mov
insl
inc
push
xor
pop
push
nop
out
popa
int
mov
mov
mov
out
fdivrs
jge
imul
dec
dec
xchg
mov
stos
stos
cmp
stc
push
lock
ds
lock
or
jp
lock
rcrb
fs
js
jo
call
lods
cwtl
sub
leave
push
jge
xchg
inc
gs
dec
shrb
cmp
adc
sti
gs
adcl
loop
mov
outsl
scas
mov
into
outsl
xlat
sub
dec
or
adc
xchg
stos
das
jge
or
inc
xchg
add
jp
xchg
mov
add
adc
fisubl
xlat
ja
mov
repz
leave
das
pop
mov
jmp
mov
ret
cmp
in
add
iret
mov
nop
sub
iret
inc
call
stos
insb
in
sbb
fstpt
xchg
mov
cmpsl
stos
inc
dec
loop
add
cmp
mov
cmpsl
xchg
jge,pt
inc
imul
or
movsl
cmp
jnp
cmp
jl
add
lcall
mov
sbb
cmp
mov
mov
in
inc
and
push
icebp
mov
mov
rcrb
dec
js
lret
xor
mov
mov
dec
shll
mov
mov
sbb
inc
ret
cwtl
lea
or
push
mov
xchg
lret
fldl
xchg
pop
aaa
lods
out
inc
pop
inc
jae
stos
mov
push
xor
pop
push
ret
int3
xchg
movl
jmp
out
ret
or
cltd
push
mov
jp
test
loopne
arpl
cli
call
adc
xchg
out
test
stos
mov
or
shl
pop
mov
shrb
jge
in
addr16
lahf
stos
and
faddp
stos
test
add
inc
inc
fs
outsl
loop
adc
add
lret
out
dec
nop
cmpsl
out
sahf
adc
push
stc
in
les
xchg
aaa
fmuls
mov
xor
imulb
cmp
in
out
mov
push
sub
add
shll
mov
in
cmp
push
nop
outsb
jge
inc
adc
xchg
cmc
inc
sti
ljmp
outsl
shll
jne
jmp
mulb
mov
lahf
leave
cmp
sti
jp
cmpsb
cmpsb
and
scas
mov
jle
add
push
call
enter
mov
daa
outsl
adc
jb
dec
fcomip
popa
lret
in
mov
data16
xlat
out
cmp
cli
mov
clc
or
mov
cmp
pop
pop
pop
idivl
repz
dec
lds
xchg
jp
xor
mov
into
and
cmp
cmpsl
dec
stc
in
mov
nop
fmulp
lods
leave
rol
inc
push
inc
add
and
inc
mov
cmp
xlat
cmp
test
sub
mov
add
jne
or
mov
imul
xchg
sub
fidivrl
mov
fisubrl
push
pop
fsubrl
gs
inc
pop
lret
inc
or
and
add
mov
dec
in
xchg
cmp
push
and
sbb
out
push
maxss
fnsave
in
shll
mov
or
xchg
mov
jno
leave
fwait
je
stos
repnz
xchg
vpunpcklbw
push
jle
cmp
push
jno
repnz
jbe
cmp
aaa
in
sbb
cltd
xor
lgdtl
mov
stos
push
add
jae
mov
jns
and
sub
or
sub
cmc
fstpl
ret
dec
test
or
mov
outsl
clc
mov
aaa
mov
divb
cmp
push
mov
fwait
mov
sti
negl
pop
or
testl
mov
sbb
fidivl
aas
stos
adc
mov
and
add
push
mov
shll
enterw
cmp
fcmovne
mov
or
or
mov
pop
mov
sbbl
enter
jno
scas
lcall
ja
mov
xchg
test
stos
lods
dec
stos
lahf
daa
data16
dec
inc
mov
enter
sbb
inc
cmpb
test
mov
lret
lods
xchg
cmp
sub
loope
add
pop
out
push
push
and
fsubrp
xchg
outsl
faddl
and
push
gs
in
jge
push
xchg
cmpsb
xchg
jno
or
jmp
push
movsb
sub
shl
pop
fldt
xor
push
xchg
or
add
aad
or
test
lods
inc
push
adc
jmp
mulb
hlt
into
ret
xchg
and
jle
and
push
sub
sbb
lret
aam
imul
popf
or
leave
aam
cmc
jo
jl
hlt
jl
add
jbe
test
movsb
ds
fsubs
subl
push
xchg
dec
in
addr16
imul
mov
push
negl
inc
pop
jbe
fs
aas
out
dec
test
test
nop
sub
dec
rol
jns
pushl
sbb
cwtl
mov
lcall
mov
jl
in
pop
xchg
mov
or
pop
adc
cmc
mov
cmovno
xchg
jo
das
mov
cmpsl
divb
xchg
mov
inc
mov
loope
xchg
ja
push
mov
or
mov
insb
out
inc
cmp
mov
std
lods
movb
cmp
int3
push
les
vpaddb
push
ss
out
cmpsl
mov
or
lods
imul
and
sub
iret
push
add
dec
insb
add
lahf
cld
bound
maxps
lds
arpl
adc
fs
xchg
lret
stc
add
or
lret
xchg
xchg
das
scas
mov
jb
subb
scas
xchg
push
or
shrl
sbb
push
pusha
jae
loop
dec
inc
push
in
popa
xorl
sbb
popa
iret
dec
fcompl
orl
scas
mov
xchg
sbb
inc
dec
mov
push
in
pop
or
dec
dec
jmp
jle
and
mov
mov
jnp
test
xchg
in
inc
pusha
ljmp
stos
mov
out
jno
pop
cmc
jae
pushf
leave
in
lods
sbb
fiaddl
lods
push
sbb
sbb
cmpsb
dec
pop
rcr
fwait
jae
add
or
push
dec
mov
pop
xchg
adc
shl
popa
repz
outsb
cltd
neg
mov
jle
mov
add
lods
push
int
rclb
add
cli
push
enter
ss
lret
xor
xor
jns
js
insl
mov
test
loop
test
int3
syscall
and
inc
flds
cmpsl
cmp
subb
popf
mov
mov
push
cmp
or
out
les
cld
and
mov
rcll
and
and
mov
adc
divl
xchg
pushf
and
add
sbb
lock
xor
in
rclb
pop
mov
insb
or
iret
sbb
mov
orb
inc
pop
cmp
xchg
lods
add
out
into
sbb
into
add
cmp
notl
scas
jno
arpl
pop
mov
mov
mov
int3
push
cmp
dec
inc
lods
ror
sub
add
or
mov
lods
mov
aas
shlb
pop
outsl
push
mov
dec
loopne
in
adc
cli
cli
inc
dec
pusha
lods
mov
stos
push
int
xchg
mov
into
adc
pushf
sub
call
dec
ret
pop
sub
pusha
pop
inc
arpl
jmp
or
popa
cmpsl
or
lret
pop
push
mov
mov
fisubrl
shll
xchg
and
out
lcall
cmp
sbb
notl
stos
and
lods
sub
jle
les
fnstenv
sub
mov
jl
and
in
sbb
xor
sub
ljmp
and
add
imul
mov
pop
push
test
push
sub
pop
and
xor
test
cmpsl
jg
aad
mov
dec
jg
lahf
or
add
pop
movsb
fiaddl
sti
sti
sahf
fbstp
iret
enter
cs
cmpsl
mov
jo
adc
inc
push
insb
cmpb
ror
ljmp
inc
arpl
adc
aas
inc
push
pushf
or
mov
push
xchg
fdivrs
push
sub
jle
dec
js
pop
adc
push
xor
mov
clc
adc
movsl
sbb
dec
pop
pop
loop
push
jg
and
test
lcall
in
add
mov
dec
push
sub
negb
lods
test
divl
adc
cmpsl
sbb
sahf
fstpl
lock
or
push
pop
lea
push
push
push
cmpsb
jecxz
cmpsb
inc
adc
insb
mov
mov
xor
sub
in
mov
mov
mov
inc
loopne
rcrl
xor
testl
adc
jns
dec
and
jnp
push
push
out
mov
jns
aas
jb
adc
push
sub
sbbb
xchg
lds
and
shrb
inc
and
lret
fidivrl
scas
nop
pushf
cmp
adc
pop
outsb
mov
fs
aam
mov
pushf
cmpsb
mov
bound
cli
jmp
xchg
cmpsl
test
fnstcw
fldcw
pusha
bound
dec
lahf
iret
mov
add
inc
lret
dec
fsub
jle
cmc
scas
and
or
jl
jmp
or
add
scas
cmpsb
les
xchg
or
add
mov
out
jb
divb
push
xor
ljmp
jmp
mov
ljmp
loope
inc
call
cmc
movsb
es
fcomi
push
push
and
das
fldcw
jp
sbb
aam
dec
adc
jnp
mov
adc
cmc
adc
pop
hlt
in
cmp
inc
adc
or
cmp
scas
fdivrs
xor
cli
xchg
mov
add
push
sbb
dec
jnp
and
cmpsl
dec
mov
roll
jge
inc
sub
lock
add
lock
xchg
cmp
rol
cwtl
xor
dec
es
push
frstor
fst
subb
shrl
popa
push
jno
lret
jnp
stos
xchg
inc
shrb
sub
test
cwtl
add
inc
cmp
inc
cmpsl
xor
cmpl
rcrl
iret
movsl
fsubr
adc
lds
rcr
repnz
into
push
jae
fcmovnu
jg
fbld
xchg
xor
xchg
data16
pop
or
lea
push
fsubs
push
push
xor
fcmovne
enter
test
outsb
lret
push
or
std
xchg
lds
sub
add
cmp
inc
and
pop
es
mov
ja
lods
sub
xor
or
scas
or
mov
xchg
adc
mov
sbb
mov
and
inc
or
enter
das
arpl
sbb
aaa
mov
mov
adc
or
sub
inc
call
sti
shll
repnz
push
push
dec
dec
in
bound
inc
mov
dec
mov
add
and
imul
and
out
sbb
adc
in
cs
xor
insl
repz
call
mov
stos
xor
bound
sub
out
icebp
xchg
xlat
out
jecxz
push
in
pop
or
std
mov
fistpll
dec
je
ja
into
mov
rorl
pushf
push
add
cmp
movsb
dec
dec
shrb
xchg
push
popa
xor
mov
arpl
stos
cmpsl
add
xor
test
mov
or
aas
mov
and
repz
adcb
das
nop
jnp
call
or
inc
popf
or
out
pusha
ss
rorl
pop
test
sub
les
test
outsl
cld
lcall
mov
jne
dec
or
jbe
mov
test
fldcw
lods
pushf
int
mov
popf
nop
imul
inc
lods
movsb
movsb
ja,pn
test
mov
jb
shlb
scas
inc
fadds
daa
pop
lcall
add
push
pop
sbbl
inc
sbb
mov
nop
push
decb
andb
mov
into
inc
pop
leave
pop
int
push
inc
dec
and
cmp
loop
mov
int3
jecxz
ret
pop
out
mov
test
sbbl
push
pop
movsl
mov
pop
or
cmp
xor
fstpl
hlt
aad
mov
mov
adc
inc
pop
imul
jbe
jp
cld
repz
sub
inc
test
mov
mov
sub
lret
imul
cwtl
or
xor
loopne
stc
idivb
mov
sbb
dec
xchg
push
ss
xor
js
mov
cmp
je
leave
loope
and
mulb
sub
movsl
ljmp
mov
xchg
pusha
std
pop
fsubr
inc
fsubr
cmp
cmp
scas
fwait
stos
incb
in
andb
pushf
out
xchg
sbb
xor
xor
mov
push
in
out
adc
or
mov
stos
jo
pop
int
mov
shll
add
rcl
loopne
or
mov
ret
ret
or
jns
add
and
nop
stos
or
adc
adc
adc
pop
loop
aam
cmc
in
daa
test
jg
mov
ja
shl
es
inc
lret
mov
pop
push
mov
adc
mov
dec
pusha
push
xlat
adcl
sbb
jo
sub
mov
cltd
or
rclb
frstor
xchg
lods
rorl
sbb
nop
lea
repz
std
mov
ss
in
cmpsl
cmp
inc
push
jmp
aas
add
cld
lds
push
or
or
outsb
adcb
sub
lcall
in
pop
lock
jns
stos
and
rcl
les
push
push
in
push
lcall
ficompl
int3
sub
das
inc
and
ret
dec
push
pop
std
shll
sub
popa
push
fidivs
pusha
icebp
enter
test
aaa
jb
mov
mov
or
jg
mov
mov
loopne
mov
sub
nop
pushf
jge
mov
jae
mov
push
fildl
pop
mov
scas
ss
rolb
or
add
mov
sub
outsl
inc
test
js
nop
das
mov
cmp
inc
insb
arpl
into
mov
xchg
arpl
daa
sbbl
add
or
sub
pop
fldl2t
lods
aad
lahf
mov
xor
lods
lea
outsl
cmp
cmc
mov
or
xor
fcmovnu
sti
push
mov
pusha
or
adc
es
mov
or
cmp
xchg
push
lret
rol
pop
push
int
out
push
arpl
adc
je
adc
scas
xchg
int
sbb
lods
inc
lret
je
and
mov
stc
aam
scas
inc
lret
lahf
sub
sahf
aaa
push
xor
cmc
xchg
fisubs
sbb
jg
push
leave
mov
icebp
or
sbb
jne
jmp
push
adc
ret
ja
inc
imul
arpl
cmpsl
inc
or
add
aaa
sub
fdivp
cmc
ret
arpl
gs
arpl
pop
adc
xchg
mov
jae
mov
adc
das
test
int
mov
xchg
and
dec
imul
sub
shlb
mov
in
test
in
fnsave
inc
mov
popa
test
data16
fadd
xchg
push
leave
int
xchg
hlt
ss
mov
fcmovbe
mov
fcoms
xor
jge
pusha
push
dec
sub
mov
imul
add
add
into
cld
sub
shl
int3
nop
mov
mov
pop
pusha
inc
add
shrb
xor
neg
mov
sti
push
jp
int3
mov
or
imul
pop
int3
mov
pop
fwait
pop
mov
js
repnz
or
push
add
push
fmulp
sub
adc
icebp
sbb
dec
mov
sbb
aad
and
rcl
pop
ds
jb
add
jmp
or
scas
mov
lods
in
stc
mov
cmp
daa
movl
dec
mov
divl
fucomp
pop
movsb
leave
cmp
das
cmp
pop
ret
push
add
cmc
jge
and
push
fs
mov
das
adc
xor
jbe
cmp
std
push
leave
push
jne
xchg
sub
mov
pop
jmp
fsubrs
or
and
mulb
clc
jge
jae
andl
notb
sub
iret
jecxz
xor
inc
add
dec
daa
xchg
adc
sti
mov
imul
loop
rcrl
cmp
xlat
stos
push
int3
or
or
push
jecxz
jge
jne
pop
mov
sbb
mov
dec
mov
jnp
or
pop
icebp
xorb
sub
pop
pop
cmp
mov
cmc
cld
sub
sti
outsb
mov
les
dec
rorl
outsb
sbbl
pop
adc
fisubl
les
cmc
ljmp
out
mov
mov
into
xchg
mov
in
aas
call
cmp
push
into
das
cmp
xlat
jmp
cwtl
outsl
cmpsb
xchg
arpl
add
push
mov
sub
loope
ret
dec
xchg
testl
mov
imul
xchg
int3
pop
sbb
bound
cmpsl
call
pop
inc
scas
cmp
pop
in
cld
into
mov
gs
insb
pushf
jp
into
mov
pop
mov
fabs
add
fs
xchg
les
or
and
xchg
pushf
xchg
popa
or
dec
out
cs
sub
xor
lcall
push
xlat
mov
xchg
or
mov
pop
or
jne
arpl
gs
inc
pushf
es
fwait
sbb
stos
inc
outsl
sti
dec
sbb
adc
cmp
pop
addr16
rol
and
sub
xchg
xchg
lods
jns
push
lret
and
and
sbb
lahf
dec
sbb
pop
dec
mov
daa
cs
testl
cmp
je
sub
out
mov
popa
repnz
inc
scas
pop
enter
mov
jge
mov
jnp
mov
dec
lahf
sbb
ret
ret
les
insl
inc
loope
xchg
push
add
ja
icebp
pop
ljmp
jo
cli
mov
mov
aam
rol
outsl
cld
inc
leave
scas
jecxz
jns
push
insb
or
das
ja
jge
xor
pmuludq
xchg
push
sbb
rclb
or
pop
test
imul
add
repnz
jbe
sbb
mov
fptan
loopne
ds
cltd
push
aam
ja
call
dec
sub
mov
lods
jg
sbb
fisubl
mov
push
clc
sahf
fldl
outsb
ljmp
xchg
mov
jbe
adc
mov
arpl
sahf
mov
inc
sbb
das
cmp
mov
dec
jb
lahf
xorb
push
ficoml
inc
scas
out
mov
jmp
adc
shll
mov
inc
fwait
shrb
imul
int3
dec
dec
movsb
notb
dec
pushf
sbb
push
xchg
adc
pop
loop
outsb
sbb
hlt
dec
fstl
mov
lods
mov
fistl
out
xchg
out
cmc
push
pop
ja
mov
jne
add
push
bound
scas
push
jle
pop
out
call
dec
icebp
mov
in
test
dec
xchg
sub
ret
jmp
inc
sti
popf
cmpsl
adc
test
push
mov
mov
cmp
pop
mov
adc
rcr
jne
cmpb
insb
ret
repz
int3
mov
push
mov
inc
xlat
cmp
pop
es
pop
jns
and
repz
xor
dec
movsl
jae
xchg
mov
iret
push
cmpsl
jg
jae
fsubl
call
jns
pop
je
and
cltd
mov
cwtl
les
add
in
or
idiv
cmp
stc
cmp
or
xchg
cmp
jp
js
fiaddl
mov
sbb
xchg
adc
ss
mov
push
adc
fnsave
inc
inc
and
call
andb
je
lcall
and
es
jl
mov
dec
shll
pusha
cli
jae
jb
cmp
mov
inc
push
lret
sub
ds
mov
sub
ss
subl
pop
push
shlb
jne
cmpsb
sarl
in
repnz
jmp
mov
add
mov
test
sub
pop
out
or
xchg
repz
jno
ljmp
aad
xchg
test
sbb
push
mov
in
out
lahf
mov
cmp
fwait
xor
and
mov
push
push
cmc
xor
push
xchg
xor
inc
inc
fdivrs
cmp
pushf
dec
jmp
sbb
adc
add
fs
add
push
or
jo
out
incl
stos
inc
cmp
jbe
aad
mov
shrb
push
sbb
adc
add
pop
add
mov
jge
aad
popl
dec
jmp
adc
jno
sbb
cmpsl
nop
out
bound
mov
xchg
mov
xor
push
push
push
cltd
test
xor
notb
sub
xchg
ds
xor
fwait
xlat
test
xchg
negl
jnp
dec
inc
add
mov
enter
or
pop
in
andl
inc
and
cmpsl
gs
inc
xchg
cmp
cli
sub
and
and
in
ficomps
clc
add
scas
outsl
mov
dec
xlat
pop
cmp
loop
jne
pop
mov
iret
mov
test
les
cmc
mov
or
xchg
sarb
add
cmpsl
jo
pop
scas
push
push
adc
cwtl
xor
inc
jl
insl
sub
fbstp
inc
xor
pop
add
or
and
js
cld
push
js
adc
ja
xchg
pop
mov
std
adc
jns
fs
inc
mov
mov
xchg
cltd
in
mov
inc
filds
jle
xchg
push
out
pop
loope
ljmp
push
into
mov
jl
leave
es
xchg
das
or
roll
or
je
mov
cmc
in
sub
stc
gs
outsb
add
aas
mov
sbb
dec
cmc
mov
adc
mov
js
sub
jb
add
icebp
jae
nop
psubd
push
push
testb
rolb
popa
mov
jecxz
mov
loopne
pop
out
or
movsb
cmc
adc
rorl
xchg
lods
aas
fs
xchg
push
daa
xor
xchg
ss
xor
mov
fnstcw
jo
sub
mov
xor
xchg
add
in
fnstenv
aam
mov
testl
mov
fwait
adcb
popa
int
adc
or
test
ret
cmp
xlat
les
pop
cmp
imul
ret
sub
ss
xor
mov
cli
aam
icebp
or
rol
jnp
dec
dec
or
xchg
bound
enter
sti
pop
ss
fldenv
cvtdq2ps
inc
sub
pop
and
cmpsl
adc
mov
mov
cmp
fcomip
cmp
ret
dec
mov
gs
push
mov
pop
xor
repnz
xor
movsl
mov
leave
lret
pop
jnp
rcll
fcomp
pusha
jno
xchg
inc
loop
je
shr
mov
addr16
cltd
enter
aaa
data16
xor
jmp
arpl
pop
lods
pop
ss
movsb
mov
outsl
jns
mov
push
xorb
cs
mov
mov
sbb
or
adc
mov
popa
ds
sarb
xchg
sub
clc
repnz
cmp
scas
ret
dec
loop
fistpl
xchg
xchg
pop
insl
repz
add
in
movsl
cld
in
add
mov
adc
pop
inc
push
cmpsl
sbb
jo
jns
mov
and
mov
aam
jae
cmp
sub
gs
and
stos
jmp
push
int3
lret
leave
push
pop
cmp
pop
add
cmp
or
xchg
iret
xchg
add
xor
clc
xchg
dec
test
out
add
mov
xchg
popf
push
popf
lahf
jp
mov
or
out
mov
add
mov
dec
add
stc
sub
into
adc
mov
loop
push
fisubrs
call
jns
sub
icebp
sub
xchg
xchg
ja
push
cmp
mov
mov
dec
sbb
lahf
push
inc
in
push
ja
or
jge
loop
xor
xchg
sub
lods
and
lret
loop
aam
adc
ja
mov
lcall
in
test
mov
or
pusha
lods
sbbb
dec
bound
jno
fwait
mov
push
popf
dec
out
mov
jle
push
sahf
in
add
scas
lcall
sahf
push
xchg
mov
cmp
dec
xor
mov
push
pop
fsubr
inc
mov
loopne
test
popf
cmp
cmpsl
lds
push
xlat
jle
jecxz
leave
dec
decl
mov
enter
pop
xchg
lods
inc
stos
testl
cmpl
int3
out
push
sbb
sbb
pop
ficomps
xchg
std
pop
sbb
jns
sub
lea
push
mov
ret
lea
divl
ret
sub
test
icebp
movsl
mov
dec
mov
repz
aas
push
lock
inc
fxch
fwait
inc
fisubs
sub
incl
sbb
pop
pop
push
cmp
mov
dec
dec
mov
dec
movsl
ret
jecxz
jnp
mov
inc
cmp
or
fmulp
int
jb
pop
push
hlt
int
mov
jg
popa
outsl
ljmp
rcr
div
xor
rcll
sarl
push
jge
fisttps
lret
loope
js
mov
lea
pusha
jp
mov
and
inc
popl
xchg
mov
repz
pop
stc
hlt
sbb
subb
in
push
inc
fsubr
orl
lods
mov
add
scas
pusha
addb
lea
cmp
out
jecxz
hlt
cmp
in
roll
inc
pextrw
lods
mov
sub
sahf
push
and
out
popl
data16
out
cld
stc
cmp
jecxz
mov
mov
xchg
lods
mov
and
mov
mov
push
mov
adc
lods
fsubr
cmp
dec
mov
fcoms
xchg
add
cmpsb
sbb
adc
mov
or
or
mov
in
idivb
xor
lods
mov
call
mov
out
leave
pop
sar
inc
outsl
clc
and
data16
cmpsb
push
sbb
jmp
cmpsb
iret
repz
or
fisubs
adc
insb
lock
movsb
adc
out
sub
flds
or
pushf
out
fists
jb
jne
enter
xor
out
dec
int3
hlt
push
lods
stos
out
mov
push
mov
adc
loope
sbb
icebp
mov
ret
mov
popf
stc
test
jl
rcrb
xor
mov
cld
push
xor
jmp
jecxz
xor
xchg
lahf
iret
fsin
adcb
add
and
adc
ljmp
ljmp
repz
sbb
pop
mov
imul
scas
cmp
xchg
mov
add
xchg
cmpsb
sbb
add
scas
push
xchg
push
dec
mov
pop
and
loop
fidivs
shrb
faddl
xchg
or
jmp
mov
cwtl
xchg
push
sarb
pop
lcall
cld
int3
shll
inc
lar
test
leave
mov
insl
cmp
aam
or
xchg
shrl
mov
dec
cli
lahf
push
stos
jne
fldcw
int3
mov
add
xlat
outsb
push
orb
cmc
mov
iret
adc
sub
pop
cli
push
lock
scas
std
clc
or
enter
imul
stos
xor
fs
insl
add
decb
cltd
sbb
cltd
insb
out
out
cld
sbb
out
insl
cmp
jnp
imul
lcall
sub
scas
pop
push
xchg
sub
xor
cli
xchg
cmp
fiaddl
pop
jb
in
cld
mov
ret
je
jae
mov
add
popa
lods
lcall
ud1
incl
mov
ret
add
mov
add
or
and
mov
adc
imul
mov
rorb
jl
or
push
pushf
jb
int
std
jo
gs
icebp
jbe
pop
push
out
mov
nop
mov
daa
cmp
imul
push
cltd
add
xor
mov
dec
xor
mov
inc
daa
outsl
dec
je
sub
es
mov
roll
sub
popf
cmp
mov
xchg
andb
insb
add
mov
adc
push
adc
push
jecxz
lret
ret
xchg
pop
std
and
lods
lea
icebp
ret
mov
sbb
mov
and
pushf
mov
into
dec
cmc
leave
jle
sub
xchg
dec
fildll
cmp
push
sub
dec
xlat
outsb
andb
sbb
mov
lea
loope
stos
adc
and
xor
push
cltd
xor
out
mov
and
mov
popa
cli
mov
xor
add
cwtl
cmp
popf
gs
mov
sti
mov
enter
lea
dec
adc
sbb
sub
fisubs
arpl
push
pop
bound
xor
cmp
dec
aaa
movsl
xor
xchg
adc
mov
xor
push
inc
sbb
add
or
outsl
inc
dec
mov
pop
fcompl
popa
jbe
lret
cmp
inc
out
push
inc
pop
pop
inc
ja
pusha
cs
sbb
xchg
cmc
test
test
sub
add
lods
loope
or
lock
mov
pop
aaa
dec
test
push
jae
adc
sbb
or
inc
sub
repz
scas
and
cld
lcall
push
aam
aam
xor
cmp
xchg
test
imulb
jecxz
cmp
shll
js
faddp
xchg
insl
cmpb
sti
sbb
xchg
jmp
test
mov
shll
and
sbb
cmp
lcall
ja
cmp
push
push
call
mov
mov
ds
int3
out
pop
repnz
fs
cmp
in
stos
int
dec
or
sub
loop
arpl
sub
inc
push
ret
fstpt
xor
inc
push
daa
outsb
and
sub
cs
cmpsb
xor
cld
push
xchg
push
addr16
push
nop
gs
dec
jns
sahf
and
in
lahf
jb
and
push
cmp
mov
mov
pop
call
popl
sub
xchg
dec
mov
adc
fdivs
jnp
in
sbb
inc
xor
mov
es
push
insb
into
adc
or
loope
jp
cmpsl
imul
mov
mov
out
push
or
cmp
loope
xor
clc
xor
adc
pop
ret
sub
mov
add
bound
pop
js
push
xchg
lcall
cmpsl
push
jae
cmp
lcall
lret
leave
cli
or
jmp
dec
out
into
popa
sub
les
inc
pop
fisubrl
jb
jg
loopne
add
aam
push
mov
add
sbbl
cmp
xlat
jo
xor
cmp
jns
pop
shlb
lcall
cwtl
hlt
xchg
push
pop
mov
xor
sub
int
inc
mov
push
dec
pop
sbb
jl
jl
mov
cmpsl
or
in
imul
jnp
pop
repz
pop
mul
mov
clc
iret
popa
mov
aaa
or
nop
sbb
in
lock
push
movsl
test
adc
test
pusha
cmp
andb
repnz
ds
xlat
cltd
ljmp
add
in
dec
cmp
jne
stos
sbb
hlt
dec
rolb
pusha
push
xor
jg
hlt
iret
icebp
pushf
dec
ficompl
mov
nop
and
xor
mov
shl
mov
mov
leave
not
cmp
jo
push
sbb
rcll
scas
flds
cwtl
lcall
fwait
loop
fld
mov
cmp
xor
xor
test
and
cwtl
lret
pop
pop
decl
shll
xchg
and
popa
mov
sahf
mov
xchg
fldenv
scas
lock
adc
stos
inc
push
js
adc
addb
mull
enter
and
outsb
fisubs
mov
in
imul
add
adc
jno
or
adc
ds
cld
dec
cmpsl
jne
xor
cmc
mov
mov
enter
push
push
or
aaa
mov
out
stc
addr16
insl
rolb
xchg
les
add
out
or
jg
push
mov
push
popa
mov
mov
dec
inc
mov
outsl
cmp
adc
and
fsubrp
adc
dec
pushf
dec
pop
xor
inc
aas
into
mov
cmp
xchg
test
xor
mov
mov
fxch
ret
test
push
clc
shlb
sahf
pop
lret
jmp
pop
push
clc
fs
push
enter
js
jb
scas
pop
inc
shrb
add
mov
jbe
sub
adc
decb
sbb
addl
clc
cmc
mov
jle
stos
mov
adc
movsb
pop
sub
mov
push
fmulp
xor
and
inc
imul
dec
outsb
mov
ret
lods
ret
or
inc
adcb
mov
add
add
xchg
mov
and
mov
ja
dec
in
jne
shl
mov
aam
loop
jp
push
notb
ss
push
mov
inc
imul
fisubl
xchg
mov
xlat
mov
leave
frstor
mov
shll
and
mov
and
int
icebp
testl
push
ds
stos
stc
mov
jg
pop
stos
cmc
mov
pop
push
mov
xchg
xorl
jge
cmp
js
shlb
sub
negb
add
scas
repz
repnz
es
and
add
es
and
in
cwtl
and
mov
in
sbb
ljmp
mov
nop
inc
icebp
out
or
pop
push
jno
mov
test
movsl
in
insl
xchg
out
mov
mov
jbe
bound
sub
dec
mov
mov
mov
push
data16
shl
pop
inc
arpl
test
or
cmp
add
sti
push
cmpsb
xor
bound
pop
push
mov
fdivrl
xor
addr16
pop
rorl
sbb
sub
jb
xor
push
test
shll
xor
push
call
cld
push
stos
mov
adc
inc
lret
outsb
cld
push
mov
pop
leave
fnstcw
mov
adc
mov
push
or
add
in
push
jnp
cmp
insl
ret
hlt
mov
sti
lcall
push
or
jg
mov
inc
repnz
loop
add
popf
xor
ja
sbb
sbb
mov
inc
jo
mov
daa
sbb
fwait
add
xchg
sub
dec
mov
cmpl
push
out
cmpsl
add
insb
xchg
lods
bound
sbb
cmpsb
mov
out
add
or
cmpb
or
and
stos
sbbb
fisubs
pop
cltd
cli
xchg
shr
jecxz
rcrb
xor
ffreep
faddl
dec
push
in
or
xchg
add
xchg
jns
xchg
test
push
dec
add
jno
and
inc
xchg
push
out
push
jne
dec
and
sbb
ds
test
sahf
add
sub
inc
adc
dec
das
add
iret
jae
in
popa
inc
int
hlt
cs
xlat
adc
pop
div
xchg
xchg
pop
in
arpl
sbb
lret
dec
push
ja
or
adc
fsubrp
xor
andl
and
sub
add
inc
aad
push
mov
jg
test
mov
lods
xchg
xchg
lods
cmpsb
xchg
dec
sahf
inc
bound
into
xchg
mov
sbb
adc
ljmp
pushf
adc
loop
aaa
dec
mov
pop
lods
dec
in
xchg
in
mov
fstpl
inc
jmp
pop
sbb
out
fcoms
mov
mov
cmc
test
add
mov
les
fbld
or
xor
popa
cmc
inc
imul
add
int3
sahf
inc
add
xchg
jnp
jecxz
mov
hlt
cmp
imul
aad
flds
sub
xor
push
sbb
cmc
mov
push
das
out
jle
add
mov
mov
add
fidivs
int
pusha
js
cld
pop
inc
pop
jb
xchg
in
sbb
add
and
icebp
mov
cwtl
mov
js
xchg
test
add
or
cmp
mov
mov
mov
scas
jb
push
xchg
add
dec
push
jne
aas
insl
cli
mov
xorb
push
test
or
push
or
cmpsb
int3
pop
inc
cmp
cmpsb
jmp
stos
arpl
mov
xchg
fucomp
add
xchg
shlb
dec
fimuls
adc
fmuls
dec
test
dec
pop
pop
inc
ss
pop
mov
fimuls
and
sbb
aas
out
push
inc
in
and
hlt
dec
pop
inc
je
sub
clc
or
push
and
sbb
add
leave
pusha
jmp
enter
sub
movsl
scas
xor
je
mov
mov
scas
xchg
sub
mov
out
mov
lds
testl
pop
inc
insb
sbb
or
jmp
stc
movsl
addr16
in
mov
mov
or
xor
lea
cld
pop
test
daa
aad
rcrb
orb
pop
insb
xchg
cld
cmp
adc
jne
insb
fsubr
push
dec
test
cs
cli
leave
push
ljmp
shll
mov
jmp
leave
in
and
loopne
cmp
pop
std
nop
rorb
lods
fs
popa
clc
sbbl
sub
push
and
dec
cmp
xchg
sub
sahf
adc
xchg
out
xchg
inc
dec
setns
xor
sahf
fistl
vpsubw
outsl
pushf
mov
cs
jne
pop
mov
test
lahf
push
imul
mov
add
aaa
out
rorl
add
or
imul
sbbl
and
xor
jne
cmp
sbb
ljmp
jmp
vorpd
mov
repz
sarb
aam
and
push
popf
push
aas
add
jle
pop
mov
repz
add
into
xlat
push
xor
iret
or
sub
push
js
xchg
inc
pop
into
jnp
cwtl
lods
ljmp
jo,pn
cltd
icebp
add
xchg
push
push
in
jp
outsl
adcl
add
lret
sbb
lahf
xor
dec
mov
push
push
daa
divl
in
dec
cmp
push
push
sahf
outsl
js
frstor
test
aad
jmp
dec
dec
mov
push
fisttpll
in
mov
lods
push
dec
dec
pop
loop
sbb
int3
cltd
loop
aas
int3
insb
shrb
mov
daa
mov
mov
xchg
push
aam
sub
out
fmuls
inc
pop
adc
gs
test
jp
jno
icebp
pop
in
inc
and
les
ds
and
xor
xchg
gs
aam
xor
popf
shlb
inc
dec
pop
cltd
fsubrp
scas
mov
sub
dec
outsl
fdivs
in
adc
sbb
mov
adc
cmp
aaa
jne
push
or
jp
shlb
jo
xchg
or
gs
mov
clc
stc
pop
ljmp
push
scas
cmpsb
cli
and
das
dec
push
sarl
fcoml
push
or
and
out
es
lcall
mov
jns
adc
dec
in
repz
push
lods
call
mov
push
mov
cmp
ja
cmp
and
movsl
mov
pop
sbb
test
and
add
push
jns
jns
sbb
push
insl
xor
sbb
jo
sbb
mov
jg
adc
jae
data16
stc
stc
mov
xchg
lea
ret
or
xlat
loop
leave
mov
daa
mov
es
and
push
lods
das
cmpsl
cmc
xchg
or
test
adc
or
in
cmpsl
push
jbe
or
xchg
leave
mov
and
daa
mov
es
cmp
inc
cwtl
jnp
lret
pop
jle,pn
call
xor
xor
shll
mov
jp
repnz
pop
addr16
fisubs
sbb
stos
mov
jae
cmp
js
mov
and
inc
and
or
adc
std
jne
addl
add
jecxz
and
insb
jp
imul
push
mov
frstor
cltd
mov
je
push
int
ret
in
dec
mov
dec
xchg
imul
iret
bound
daa
sub
ret
mov
push
cs
nop
mov
or
push
mov
jbe
nop
daa
fildll
lret
out
aas
cs
out
cli
push
jo
fbld
out
rcl
movsb
dec
pushf
pusha
hlt
xor
test
fdivrs
stc
inc
fdivs
popf
iret
scas
cwtl
stos
loopne
repnz
lods
imul
clc
cwtl
xchg
aam
int3
pop
mov
jp
add
mov
add
out
and
fdiv
xor
cmpsb
inc
aam
add
test
fildll
fstl
add
cmp
out
xchg
clc
xchg
das
cmpxchg
and
or
or
iret
cmp
xor
adc
gs
xchg
or
arpl
mov
les
mov
adc
insb
cmp
lret
repz
or
xchg
cmp
jb
mov
jg
cmp
mov
out
sub
cmc
das
test
push
lea
sub
mov
loope
lods
fwait
mov
xor
xchg
cwtl
adc
mov
jle
jp
cmp
push
cwtl
pop
xchg
add
test
jl
movsl
imul
setle
and
mov
ja
push
in
mov
jnp
es
jmp
pushf
les
filds
xchg
mov
mov
ds
adc
pop
adc
sbb
mov
mov
push
push
cltd
xor
cmp
cmp
and
fdivs
ljmp
inc
cmp
jle
pushf
pop
insl
into
lret
ret
xchg
jb
stos
mov
popa
jns
xchg
lods
sbb
into
add
movsl
pushf
ret
adc
in
fisubs
inc
or
cmp
push
out
push
ljmp
dec
mov
sbbl
jne
jecxz
or
pop
mov
add
adc
push
movsl
xchg
cmp
dec
test
sbb
aad
in
dec
sbb
mov
movsl
test
fnsave
jns
pop
mov
xchg
rolb
data16
jl
mov
push
or
movsb
cmp
ret
bound
stos
jmp
inc
sti
hlt
sbb
sbb
and
pop
jno
loopne
cmp
or
ds
push
xchg
mov
xchg
or
pusha
ret
add
inc
xchg
xor
imul
push
ss
adc
cmp
jle
pop
push
ss
and
cs
sub
out
mov
aad
push
add
dec
sub
pop
into
repz
mov
mov
jge
or
inc
jns
sub
lahf
jmp
mov
mov
fistpl
xchg
add
jle
das
outsb
jno
push
int
xor
push
out
xchg
and
push
inc
or
out
fidivrs
fcoml
or
xlat
cmp
out
fistl
and
pusha
cli
mov
in
in
clc
or
or
mov
jns
inc
ja
cltd
test
lret
cli
call
repnz
out
stc
pop
in
adc
test
xchg
cs
jl
xchg
stos
push
pop
imul
add
aam
add
or
jp
das
out
xor
lods
mov
mov
xor
mov
cmpsl
cmp
adc
mov
das
push
je
inc
mov
mov
loope
xchg
lea
sbb
xchg
mov
inc
outsb
sbb
xor
mov
cmp
mov
aad
xor
lea
mov
mov
cmp
bound
fucomp
test
mov
adcl
fwait
les
jnp
mov
loopne
push
test
arpl
fwait
cmp
lods
sbb
pop
push
ret
xlat
imul
lcall
pop
test
mov
sarb
addr16
insb
adc
mov
mov
jmp
and
and
push
mov
out
dec
jno
jnp
daa
jle
fwait
xor
sub
ret
pop
sbb
aam
icebp
nop
lcall
out
fadd
inc
das
sub
aad
ret
sbb
imul
ret
add
mov
rcl
into
pop
sbb
mov
jl
mov
test
pop
push
in
adc
xchg
push
mov
subb
inc
scas
pusha
cmc
inc
pop
pushf
ljmp
jmp
jne
lods
xchg
mov
std
cwtl
std
cmpsl
scas
outsl
daa
mov
pushf
jg
cs
xchg
fsubl
sbb
cmpsl
jmp
xor
jge
les
xchg
cld
in
pushf
cwtl
and
data16
adc
mov
and
enter
jb
stos
shrl
je
hlt
xor
andb
push
sti
mov
lods
mov
cltd
outsb
mov
pop
xor
cmp
in
fimuls
mov
jge
jg
xchg
outsl
out
or
call
jno
push
push
sahf
cmpsl
xor
ffree
sbb
and
push
fbstp
adc
pop
sbb
popf
and
mov
inc
pop
adc
push
cmp
icebp
das
icebp
push
sbb
lock
inc
fcomps
push
adc
pop
mov
push
xchg
push
jmp
xor
gs
mov
inc
cvtps2pd
push
bound
mov
fwait
inc
inc
mov
mov
sub
in
adc
and
data16
daa
data16
cmp
int3
xor
fs
push
loope
adc
lcall
lods
xor
inc
rcl
repz
rcrb
pop
outsb
scas
scas
or
inc
inc
xor
sbb
jg
in
andl
mov
mov
imul
cmp
xchg
mov
sub
add
push
xchg
in
icebp
xchg
and
xchg
push
push
jae
idivb
fwait
add
shlb
fisubrl
and
jmp
push
das
lods
jo
push
cltd
mov
cwtl
repz
sub
and
insb
stc
imul
stc
dec
idivl
sub
sahf
inc
sub
les
push
add
insb
dec
pop
cwtl
into
mov
add
and
pop
mov
out
jecxz
adc
std
stos
ss
sub
add
cmp
push
dec
dec
and
ss
cmp
aam
inc
test
mov
or
mov
mov
cmc
in
loopne
push
out
xchg
sub
je
jnp
inc
sbb
outsl
out
mov
nop
and
notb
andl
aas
loope
xor
aad
cmp
mov
xlat
imul
std
mov
or
pop
shlb
jge
fldt
adc
jbe
out
insb
mov
ljmp
test
rolb
gs
ret
dec
xor
mov
hlt
push
mov
pop
push
pause
xchg
inc
jmp
mov
mov
fucom
jp
icebp
shlb
outsl
icebp
or
int3
dec
pop
cmp
add
or
sbb
pop
jne
or
repnz
sub
fnstenv
and
jbe
pop
mov
nop
xchg
mov
or
fisttps
sbb
cltd
repz
push
nop
daa
inc
xor
or
adc
and
cli
mov
mov
lea
mov
mov
dec
fs
push
pop
mov
cmpsl
mov
mov
pop
jge
gs
in
les
push
stos
lods
or
sub
xorl
jecxz
add
mov
outsb
push
mull
loopne
in
stos
push
or
rclb
cmp
mov
call
or
add
xor
rclb
and
sub
pop
mov
jbe
and
std
xchg
xor
push
sbb
mov
cmp
stc
cs
dec
push
ss
xlat
insb
jecxz
clc
push
jmp
mov
mov
vmwrite
std
pushf
iret
or
adc
subl
jns
scas
xchg
jns
push
popa
mov
scas
lret
xchg
add
jnp
popa
xor
sbb
adc
gs
lock
fwait
out
xchg
and
pop
push
mov
ljmp
push
jg
adc
outsb
mov
repz
idivl
mov
jnp
fnsave
lcall
out
dec
clc
out
mov
lea
in
das
pop
ss
or
add
mov
pop
push
pop
ret
inc
mov
mov
fidivl
xchg
sub
push
negl
dec
je
sar
test
mov
fs
push
mov
lret
shlb
pop
or
adc
xchg
push
leave
sbb
jo
icebp
xchg
fimuls
das
ds
pop
roll
push
nop
or
xlat
mov
ret
pop
mov
loopne
xor
ret
add
pop
mov
stos
adcl
sub
out
push
cli
add
jg
inc
pop
push
int3
mov
mov
loope
push
pop
sahf
scas
out
mov
sub
lret
adc
pushw
dec
push
mov
pop
int
pop
lret
mov
lds
lcall
cwtl
insb
mov
cmp
inc
insb
and
xlat
outsl
sub
lahf
mov
jnp
mov
push
dec
sub
outsl
mov
sbbl
test
add
dec
mov
insb
ficoms
cmpsb
popf
sbb
lahf
fistpl
mov
stc
fiadds
enter
iret
jmp
or
fnstcw
push
imul
aaa
ljmp
lds
aaa
mov
push
push
jnp
jp
push
cwtl
inc
ja
jno
push
pop
dec
imul
push
jecxz
test
in
or
adc
adc
sti
roll
inc
out
sti
in
push
ret
stos
sbb
inc
mov
outsl
jnp
mov
cmpsl
lds
nop
jne
mov
mov
pop
add
andl
push
test
imul
cmp
pop
arpl
cwtl
and
sbb
adc
and
jne
in
mov
sbb
fmul
sub
lret
ds
in
andl
push
jmp
je
cmp
xchg
push
dec
test
nop
fsubrl
cmp
xchg
gs
mov
cmp
cmc
leave
fwait
xchg
cli
mov
push
lods
filds
shl
cmpl
outsw
lods
cmp
nop
xchg
pop
movsl
scas
rcll
jo
popf
sub
sub
loopne
shlb
bound
repz
addl
arpl
test
dec
inc
sub
pop
and
out
sbb
mov
jmp
mov
cmc
jl
scas
cmp
imul
xor
aaa
pop
outsl
xlat
sbb
loope
mov
add
stc
test
call
and
adc
repz
and
mov
mov
cwtl
aad
sub
cmp
dec
scas
mov
insb
xor
mov
adc
dec
js
dec
fstps
call
jo
ljmp
mov
std
das
cmp
out
push
push
andl
mov
pop
test
jge
jns
aas
mov
call
lods
jmp
shrb
out
fnstenv
test
ret
mov
xchg
pusha
in
cmpsb
aas
or
gs
xchg
jg
mov
ficoms
dec
and
imul
mov
xorl
xchg
iret
stos
xchg
mov
std
cmp
adc
test
popa
xchg
sub
ljmp
addr16
push
ljmp
es
mov
push
lods
xchg
mov
jns
inc
test
loope
repz
push
negl
andl
push
xor
dec
int
mov
add
shlb
push
and
lret
out
push
std
ror
push
add
pop
inc
push
or
inc
pop
imul
push
sub
adc
ljmp
out
lea
fnstcw
xchg
testl
fdivp
add
data16
cmp
dec
rcll
shrb
je
jl
jae
add
lret
inc
fs
dec
mov
mov
leave
sbb
cli
popa
xor
pop
mov
fnstenv
les
mov
xchg
xchg
call
cs
mov
decl
cmp
mov
dec
or
and
scas
insl
std
xchg
mov
sbb
inc
mov
pop
jne
jp
lods
ljmp
sub
cmp
cli
jge
push
insl
pop
sub
shll
loopne
sub
xchg
mov
adc
pop
je
xchg
mov
dec
inc
cmp
push
pushf
lret
cmp
mov
loop
enter
xor
or
aas
adc
cmp
addr16
test
and
ret
sbb
or
mov
and
mov
scas
or
out
cmpsb
cmpsl
pop
sbb
adc
outsl
push
and
add
mov
sub
mov
push
pusha
cmp
sbb
mov
and
fiadds
dec
add
add
mov
push
push
out
nop
scas
shll
pushf
sbb
push
das
cmp
jecxz
dec
add
add
adcl
sahf
or
add
xchg
dec
icebp
pop
mov
shlb
lahf
push
enter
js
xor
jne
xchg
jecxz
jl
inc
cmp
insb
inc
add
stos
sbbl
jae
mov
adc
mov
dec
call
into
dec
dec
mov
jmp
popa
xor
xchg
and
pusha
mov
add
xlat
mov
test
push
xchg
xor
jg
pop
adc
aad
cmpsl
imul
test
mov
jnp
xor
push
mov
in
inc
movsb
mov
outsb
fbld
mov
lock
jmp
aaa
sbb
mov
sbb
xchg
in
es
push
out
ds
addl
and
cmpsb
or
dec
arpl
aam
mov
push
addr16
fistl
or
mov
cli
xorb
push
bound
sbb
dec
xorb
xchg
lods
xchg
xchg
pop
jno
addr16
fdivs
and
movsb
adc
cwtl
dec
jnp
mov
adc
mov
xchg
cvtpi2ps
loop
bound
mov
inc
leave
inc
pop
add
lret
mov
and
mov
pop
adc
test
movsb
xchg
je
ljmp
pop
sub
push
cmp
imul
dec
or
mov
jl
out
rorb
iret
movsl
mov
shll
into
pusha
jp
sbb
jp
fildl
or
mov
rorb
arpl
inc
icebp
insl
mov
lret
and
and
push
mov
or
inc
rorl
stos
jb
frstor
pop
ljmp
ljmp
fcmove
push
or
xor
mov
addr16
arpl
push
cmp
lret
fcomps
lahf
lods
sbbb
into
es
jns
inc
xlat
mov
push
in
or
or
cmp
idivl
mov
jnp
adc
sub
xchg
test
pop
add
push
jns
or
push
test
or
sub
and
xchg
xor
clc
sahf
mov
call
jle
pusha
out
sbb
or
gs
fisubrl
pop
pop
jg
cmp
daa
pushf
pop
cwtl
fwait
sahf
pop
and
pop
les
daa
mov
or
std
cmp
sub
sub
lds
sbb
cld
imul
outsb
or
dec
int3
cmpsl
xchg
push
fnstcw
fbld
jp
xor
pop
fs
inc
push
aam
sub
adc
jmp
inc
add
mov
adc
push
jb
pop
iret
mov
add
je
rclb
or
lcall
in
push
inc
loopne
imul
int
push
xor
scas
les
enter
pusha
mov
cmp
jl
pushf
mov
sub
pop
fs
jmp
in
les
cmp
arpl
pop
push
in
inc
sbb
data16
mov
aam
sub
push
push
cli
fdivrp
shrb
mov
mov
push
mov
xchg
sbb
outsb
or
pop
xchg
notb
enter
lahf
loopne
or
call
movsl
test
cmp
cmp
xchg
pop
mov
addr16
inc
or
dec
and
adc
aaa
lret
lret
dec
decb
inc
pusha
xchg
jge
pushf
mov
jae
xchg
pop
shll
mov
xor
xchg
jno
mov
lret
mov
sbb
in
cmc
mov
mov
push
fwait
pop
int
sahf
ss
push
fsubl
inc
leave
int3
das
push
shlb
repnz
cmp
arpl
mov
cmp
adc
and
aam
les
pop
jo
lock
push
imul
js
fcoml
mov
lret
sub
outsb
sbb
xor
pop
testl
or
adc
aaa
imul
fistpll
mov
inc
sub
sub
xor
scas
jnp
dec
lds
pushf
jg
add
pop
xchg
mov
or
cli
cmc
inc
sub
xchg
out
ljmp
jbe
or
pop
jae
cli
movsb
jp
mov
dec
lahf
lods
xchg
dec
ret
faddl
xchg
add
mov
push
cmp
lods
jecxz
and
push
add
nop
das
push
scas
sbb
and
cmp
ljmp
sub
lea
mov
fcomp
add
or
and
dec
xor
into
or
mov
pusha
pop
xchg
sti
xchg
mov
jno
addb
mov
add
daa
repz
inc
data16
nop
xchg
push
pusha
movl
scas
pop
pop
outsl
mov
pop
sub
add
cmp
stos
testl
jle
jmp
je
dec
add
sub
pop
scas
insl
add
mov
jg
lcall
test
pop
or
mov
inc
gs
mov
xchg
ljmp
je
hlt
sti
shll
add
push
cwtl
test
int
sti
lcall
push
sub
out
popf
std
mov
xor
cli
adc
inc
mov
push
addr16
mov
mov
dec
mov
mov
cwtl
int3
xchg
sub
inc
sub
jmp
in
sub
andb
mov
aad
pop
es
mov
enter
pusha
loop
sbb
push
jp
jno
cwtl
stos
pop
adc
mov
or
test
jle
incl
popf
adc
cld
jnp
fidivrs
pop
cmp
mov
clc
pop
imul
leave
test
sbb
sti
add
push
pop
pop
xor
aaa
pop
cmc
push
mov
mov
push
mov
sbb
popa
cmp
imul
nop
xor
jb
push
pop
add
cmp
sbb
jno
xchg
add
jne
xor
stos
sbb
test
and
jns
jne
xlat
mov
aam
mov
and
pop
sarb
mov
popf
push
add
jmp
and
scas
inc
lcall
cmpsb
sub
aaa
fwait
inc
sbb
pop
lret
call
and
pushf
or
ds
ljmp
das
adc
or
mov
ss
cmc
sbb
dec
dec
sub
in
cmp
jb
fwait
rcr
js
mov
popa
cmp
outsl
sbb
xlat
das
inc
fstpl
les
and
pop
inc
dec
lahf
ss
ljmp
sbb
and
xchg
in
mov
and
in
into
xchg
xor
adcl
cld
add
xor
mov
stos
dec
dec
pop
xchg
lcall
ljmp
lock
movsb
cmp
mov
insb
xchg
fnstenv
xchg
mov
push
data16
pop
andps
xchg
xchg
in
inc
inc
mov
push
sub
xchg
pop
jbe
stos
das
xchg
insb
jle
vsubpd
xor
xchg
aad
mov
stos
out
std
js
shrl
mov
outsl
sbb
jae
adc
mov
fildl
mov
mov
cmp
push
jecxz
adc
mov
pusha
dec
dec
sbb
xor
jp
movsb
sub
cmp
and
add
in
sti
sahf
clc
mov
ss
sub
shrl
int
les
lahf
bound
movsl
orps
add
and
dec
pop
faddl
jle
fs
stos
xor
add
fstpt
push
sub
fwait
sub
stc
mov
sub
lret
testl
nop
insl
push
test
nop
int3
lcall
pop
loop
mov
out
notb
daa
dec
lods
xor
adc
sub
sbb
cld
or
mov
xor
int3
imul
into
stos
arpl
shl
test
cmp
das
or
push
xor
scas
in
in
test
stc
xor
mov
rcll
or
es
in
test
out
xchg
add
mov
imul
inc
jb
cli
sub
sub
jl
ja
mov
loop
jb
mov
notl
add
inc
lret
and
mov
loopne
xor
test
call
outsl
xor
ret
int3
xchg
repz
mov
loopne
mov
xchg
mov
jne
fstps
xchg
hlt
xchg
adc
int3
mov
add
sarb
pop
outsl
cs
scas
pop
push
xor
mov
and
addr16
mov
or
fdivs
mov
fldt
sub
popf
dec
lods
inc
jge
shll
xchg
int
dec
adc
out
and
fsubs
loopne
cmp
ss
inc
dec
fdivl
int
pop
js
test
cwtl
lahf
mov
adc
xchg
mov
or
into
mov
xor
pop
push
push
adc
sub
fisttpll
adc
inc
cs
or
cwtl
ss
popf
pminsw
sbb
adc
enter
adc
push
dec
dec
cmp
stos
jae,pt
into
push
addr16
inc
arpl
js
sahf
xor
jae
mov
mov
inc
in
jmp
lods
aaa
jo
imul
or
insl
push
and
mov
jne
imul
pop
ret
inc
test
dec
pop
mov
mov
inc
out
ret
dec
clc
hlt
xchg
jle
cs
jge
lds
dec
aad
dec
test
lret
cld
pop
mov
push
or
call
xchg
cmp
mov
add
push
aaa
xorl
fmul
push
dec
dec
jge
pop
jmp
and
jo
lret
test
loopne
push
mov
xchg
cmpsb
xor
mov
and
or
jbe
inc
out
pop
mov
mov
in
inc
faddl
mov
sbbl
rol
test
mov
je
movsl
dec
loope
cmc
test
cmp
add
iret
jo
enter
dec
sub
mov
imul
add
sbb
mov
cmp
xchg
fwait
std
addl
push
sub
pop
pop
jg
and
lret
out
std
dec
test
js
pop
sbb
pusha
sub
mov
iret
jmp
mov
js
and
xchg
mov
imul
std
lea
jmp
pop
mov
shl
pop
cmp
enter
and
jecxz
cmp
mov
jl
sbb
mov
sbb
adc
rcrb
fs
xchg
sub
test
mov
repz
mov
and
mov
xchg
fistpl
mov
aam
jnp
lcall
rolb
sbb
lods
arpl
jne
xor
xchg
fists
xor
push
data16
ret
pop
cmp
ljmp
jno
out
sbb
add
inc
ss
mov
in
sub
or
adc
pop
dec
hlt
push
bnd
jmp
lahf
add
cld
fmull
popf
ss
xor
loop
mov
or
int
int
jae
sti
aas
or
xchg
pop
mov
jae
std
movsb
repnz
and
pop
mov
inc
loope
jge
scas
cmp
inc
cs
push
arpl
mov
js
xchg
test
mov
jle
dec
jae
sti
jnp
cmpsl
movsl
sbb
js
shl
mov
sbb
enter
pushf
xchg
inc
mov
stc
xchg
and
mov
mov
mov
sarl
lcall
ret
or
js
cwtl
jl
scas
gs
pop
mov
es
pop
scas
arpl
mov
test
cltd
sub
push
jae
arpl
adc
lea
fs
loope
mov
outsl
cli
mov
cmp
adc
add
clc
sub
and
mov
inc
push
inc
jl
cmp
lea
push
dec
dec
std
out
lods
andb
pop
xchg
jo
jno
sub
xchg
mov
sbb
ljmp
pop
sahf
push
out
adc
inc
mov
xor
mov
adc
rclb
jecxz
test
mov
push
fisttps
inc
fldt
hlt
push
or
fdivs
mov
pop
sbb
or
mov
dec
xchg
add
loope
fidivrs
cmpsl
mov
pop
fistpll
adc
sub
gs
out
lds
ror
int
jle
sub
mov
clc
sbb
aaa
call
or
and
sub
cmp
imul
lds
pop
jg
jmp
les
pusha
sbb
sbb
mov
andb
sbb
aam
pop
xchg
xchg
sub
pop
lahf
ss
mov
push
out
mov
jnp
sbb
dec
add
push
lcall
add
hlt
sub
xor
mov
mov
loop
push
xlat
inc
aaa
int3
out
or
gs
push
pushf
mov
ja
test
incb
aam
int3
insl
sub
fnstcw
lds
addr16
dec
or
es
adc
cli
jns
scas
dec
fsubp
sti
add
jbe
lahf
mov
mov
inc
mov
loope
jae
add
pop
call
pop
iret
outsb
aas
es
inc
iret
jle
shr
data16
mov
jmp
mov
ret
sub
cmc
cmpsb
jl
and
movb
cmp
sahf
dec
mov
jecxz
pop
dec
flds
push
push
outsb
pop
lea
xor
je
lds
mov
insb
fwait
ds
rcrl
iret
mov
icebp
adc
in
cmc
ds
orl
es
add
in
pop
mov
add
inc
imul
lods
sti
roll
cltd
adc
es
jae
in
mov
cmpsb
add
push
jae
mov
dec
movsl
cs
pop
jbe
push
sub
outsb
add
add
xchg
mov
adc
dec
data16
mov
fcmovnbe
xor
jbe
pop
adc
lret
xchg
cmc
mov
inc
or
mov
movsl
fmul
cmpsl
pop
inc
cwtl
mov
int3
xor
cmp
jno
sbb
insb
xchg
shr
mov
int3
dec
mov
dec
clc
sahf
loop
call
ret
fs
mov
mov
fidivs
push
push
repnz
out
pop
cmpsb
xacquire
imul
leave
fadd
xlat
stos
jnp
mov
andl
cld
lcall
in
scas
push
jnp
rcl
xor
sti
fs
pop
sub
cmp
jnp
sub
cmp
movsb
and
sub
popa
outsb
jne
mov
push
mov
jge
rcrl
jecxz
rclb
or
mov
mov
xorl
inc
push
insl
jl
gs
out
arpl
mov
das
rclb
ds
or
inc
fisubrs
out
mov
sub
or
daa
inc
sub
repz
inc
fnsetpm(287
jp
lcall
ret
xsave
scas
test
fs
idivb
sbbl
sbb
popf
icebp
sbb
js
test
inc
push
pusha
xchg
jle
insb
sahf
sbb
xchg
sbb
xchg
nop
cs
inc
int3
arpl
les
push
hlt
mov
pop
loope
push
sub
mov
add
in
std
jb
insl
mov
fwait
aas
data16
jbe
adc
and
push
push
pop
xchg
inc
pusha
loopne
push
jo
shlb
icebp
adc
push
loopne
push
clc
loopne
shll
sbb
sub
daa
add
push
js
fnstsw
insl
add
xchg
adc
lret
cld
push
jnp
push
out
mov
mov
or
cmp
lods
jmp
fiadds
test
decl
sbb
fldt
scas
push
pop
imul
and
cmp
or
sbb
pusha
jnp
movsl
cmpl
xor
cmp
lock
imul
fpatan
movl
cmpsl
sbb
rcr
mov
out
lret
jg
nop
iret
xor
in
js
jns
outsl
mov
in
scas
ja
push
inc
insb
cmp
mov
pop
data16
iret
cli
push
inc
sub
cli
push
xchg
jmp
and
repz
cmp
js
or
mov
imul
add
inc
jbe
xchg
jb
dec
std
xchg
out
adc
mov
pop
mov
inc
pusha
pop
hlt
int
or
ss
movsl
std
nop
sub
lds
imul
popf
xor
out
mov
adc
sar
push
dec
and
jmp
push
xchg
fadd
popa
bound
sbb
cmc
cmc
lret
jecxz
push
jbe
cwtl
cs
lcall
repnz
arpl
cmp
pop
cmc
movsb
stos
xchg
sub
addl
in
push
xor
inc
daa
int3
insb
ljmp
xchg
sbb
xchg
cmp
fs
jge
imul
ja
into
insl
sbb
and
shll
les
loop
popa
add
mov
ja
in
test
xchg
sub
pusha
pop
mov
iret
push
xor
daa
push
cwtl
push
in
jle
std
add
sbb
dec
adc
aaa
bound
test
je
bt
lret
add
jno
xor
push
sub
xchg
mov
dec
pop
call
adc
call
fisubrs
leave
gs
mov
ret
sbb
sub
xor
cli
fucompp
das
and
mov
pushf
lret
mov
xchg
jecxz
popa
fs
movmskps
test
stos
stc
sub
cmpsl
jl
and
push
dec
and
pop
sub
ret
insb
xchg
mov
xor
stos
pop
dec
pushf
dec
aas
lea
mov
not
xchg
shl
enter
dec
sub
data16
or
fcompl
pop
daa
fdivp
shl
mov
inc
ds
enter
std
lds
cmp
dec
pop
cmp
and
push
test
push
ret
test
mov
inc
loop
cmpl
push
mov
inc
in
jp
dec
xor
jae
xchg
or
daa
incb
and
xor
xchg
lret
iret
arpl
out
xchg
xor
xchg
or
enter
adc
sbb
and
mov
inc
ljmp
mov
shr
adcb
shll
sbb
divl
jmp
push
xchg
daa
or
pop
mov
jae
mov
add
sahf
jg
pop
cmp
jg
dec
pop
cmp
pop
lahf
stos
mov
mov
jecxz
incl
or
mov
mov
test
sahf
out
xchg
jl
mov
or
add
add
ret
xchg
outsl
outsb
push
ds
push
sbb
jmp
push
pusha
add
out
xor
and
popa
lret
push
jle
call
leave
test
fwait
xor
push
hlt
sahf
mov
jnp
icebp
inc
mov
fistps
sbb
jge
test
jnp
xor
adc
lock
ja
js
mov
sbb
mov
test
fidivrl
out
sti
jo
cmp
sbb
pusha
repnz
ja
scas
xchg
inc
mov
aad
mov
sbb
in
sbbl
jb
or
hlt
pop
sahf
test
or
mov
sbb
adc
fmul
xor
daa
jmp
and
mov
jne
stos
insl
idivl
dec
push
inc
test
cld
jne
and
xchg
repz
pushf
stc
sub
imull
jecxz
mov
xchg
clc
adc
xor
cmp
mov
fisubrl
test
lods
sarl
fidivl
int
jle
push
and
lcall
popa
call
jmp
mov
mov
ss
inc
cmp
sbb
adc
jae
int3
inc
enter
pop
xchg
pop
xchg
imul
sar
insb
fsubrs
outsb
fcoml
xchg
pop
in
mov
xchg
jo
add
pop
or
or
jno
movsb
cmpsb
lea
adcl
js
mov
xchg
ss
movsb
dec
ret
jge
repnz
mov
addb
or
in
xchg
repz
stos
pop
mov
mov
fildll
mov
pop
ja
shr
aad
mov
pushl
or
fs
ffreep
jl
xor
dec
mov
lea
sbb
jns
outsb
jmp
jne
push
cwtl
jl
xchg
sahf
adc
mov
bswap
sbb
adc
dec
mov
push
sub
out
lods
pop
or
mov
xlat
les
sub
fbstp
mov
outsb
ret
rol
daa
call
or
insl
dec
mov
stos
mov
pop
sahf
mov
or
fs
lret
mov
dec
push
out
jnp
mov
and
cltd
mov
push
not
pop
xor
sbb
xchg
inc
insb
shl
and
out
cmp
xchg
jmp
addl
dec
xchg
mov
mov
insl
leave
push
mov
lret
mov
test
dec
push
fwait
mov
mov
pop
clc
sbb
andl
sub
xchg
mov
sahf
sub
mov
into
test
gs
lods
lods
fisttpl
in
test
aad
jge
add
push
movsl
sub
mov
sbb
lcall
bound
xlat
ljmp
jo
pop
dec
pop
andl
xchg
push
scas
sbb
arpl
sbb
sbb
addr16
mov
xlat
sub
outsb
stc
loope
decb
vpsadbw
dec
sbb
test
int3
lods
les
ds
mov
int3
xor
mov
adc
mov
jmp
es
cmpsl
jmp
lock
and
push
inc
iret
add
or
call
xchg
fidivrl
jmp
popa
adc
jno
sub
sbb
and
nop
or
mov
fsubrs
jo
cmp
cmp
das
adc
mov
lret
inc
lods
inc
xor
into
inc
fidivrs
dec
mov
cmp
enter
iret
es
inc
and
xchg
mov
inc
push
ss
mov
faddp
mov
or
and
mov
sbbl
lcall
repz
pop
idivb
cmp
stos
sbb
out
test
loopne
add
push
jae
push
xchg
lock
in
cmpsb
mov
icebp
add
andb
or
rorl
xchg
inc
jnp
inc
inc
mov
fwait
scas
outsb
or
add
or
sbbw
in
inc
or
lcall
test
xor
pop
fadd
cmpb
sub
out
adc
or
loope
sbb
sub
jmp
or
ds
ret
mov
jge
jae
xchg
dec
add
imul
push
push
dec
push
mov
xchg
push
out
into
jns
out
xchg
mov
mov
sub
sbb
sub
mov
inc
test
aas
stos
test
stos
mov
push
add
inc
mov
cmpsb
dec
lret
scas
lret
out
out
and
std
cmpsl
data16
fdivl
dec
mov
mov
pop
sub
mov
fwait
jae
addr16
in
loopne
test
fcomip
adcl
or
mov
xchg
xor
mov
xor
or
std
or
cltd
negl
dec
push
lret
fildll
pop
adc
mov
mov
out
dec
sbb
sub
lods
inc
jmp
mov
cmc
mov
in
xchg
ss
fscale
inc
mov
arpl
xchg
fnsave
push
cmp
jecxz
cs
sub
movsb
movb
push
movsl
movsl
cmp
jb
mov
ret
pop
pop
xchg
jns
pop
add
pop
cmp
pop
dec
jno
xchg
movsb
sbb
cmp
inc
dec
enter
insb
leave
jnp
mov
ret
cltd
push
jo
leave
xchg
clc
or
push
or
adc
shr
addl
ja
xchg
mov
push
add
div
scas
pop
pop
fsub
jbe
fcomps
adcb
pop
adc
dec
and
popa
xchg
cltd
cld
lods
mov
inc
in
and
push
xor
aaa
cmc
dec
fistpll
not
pop
scas
pop
mov
push
fs
mov
dec
aaa
xchg
adc
fdivl
ret
mov
add
stos
jb
mov
push
adc
push
inc
pop
bound
sahf
xor
fcmovne
inc
push
pop
jnp
cmp
adc
mov
xor
pop
add
jo
loope
adc
mov
push
inc
add
jne
into
mov
xchg
xor
cmp
mov
sub
push
add
push
adc
out
jae
xor
mov
outsl
in
dec
das
cmpsb
xchg
dec
cmp
in
daa
pop
nop
cmp
mov
dec
cmp
sub
mulb
lea
sub
or
pop
xchg
mov
out
or
ficompl
lret
push
xor
xor
mov
xchg
xchg
clc
push
sbb
xchg
mov
pop
dec
dec
rcrb
jp
test
add
mov
popa
pop
add
xor
and
mov
fsqrt
fneni(8087
push
sbb
jecxz
test
sub
jne
icebp
adc
jg
addr16
fstpl
xchg
mov
ds
adc
and
pop
lods
fwait
add
or
sbbb
cpuid
cmp
shr
inc
adc
inc
into
inc
mov
and
in
jl
leave
lahf
jno
jno
lret
xor
mov
pop
nop
subl
lret
inc
cmp
fs
roll
stos
mov
mov
lcall
sub
pop
dec
outsl
mov
stc
push
sbb
stc
movswl
push
push
jb
fcompl
push
pop
cmp
arpl
pop
xchg
add
cmp
shr
dec
rcr
mov
pusha
xchg
push
mov
cmp
mov
sarl
fwait
adc
push
loopne
testl
js
mov
fnstsw
sub
or
pop
sub
or
lcall
loopne
int
filds
call
in
mov
cmp
cwtl
mov
lea
leave
mov
jne
sbb
ds
adc
in
pushf
lahf
int
pushf
inc
mov
push
or
push
fildl
daa
bnd
call
aaa
and
xlat
mov
cld
lahf
ljmp
lods
xchg
push
loope
aas
jecxz
lahf
pusha
call
mov
push
mov
lcall
push
movsb
inc
adc
mov
dec
jmp
cmp
or
ret
lock
imul
jno
add
sub
iret
mov
pop
hlt
sub
cmp
cli
aaa
jnp
imul
in
jle
sub
jmp
sar
pushf
pop
jnp
stos
insb
ds
lret
jl
pusha
and
add
mov
testb
mov
mov
mov
xchg
fucomp
lock
imul
add
test
xor
mov
dec
jno
dec
out
pushf
xchg
or
aas
add
fldt
mov
mov
jb
xchg
iret
sahf
push
sbb
idiv
int
mov
jns
rorl
mov
lods
inc
out
pop
data16
xor
xchg
ljmp
lods
out
shrb
sub
aam
cmpsl
lds
adc
insl
mov
outsl
cmp
ret
das
movsb
cmp
pop
push
cmp
xorl
add
test
jb
pop
dec
pop
or
cli
xchg
cmp
mov
ret
mov
add
lahf
mov
xchg
jbe
mov
mov
popa
adc
mov
and
scas
stos
aaa
into
fmul
shrb
jb
jae
jmp
xchg
popl
movsb
lock
ds
cld
sub
pop
movsl
int3
fbstp
into
sbb
fwait
add
push
adc
mov
and
arpl
mov
dec
cmp
bound
and
addr16
aas
fidivrl
push
push
dec
pop
insb
pop
or
push
daa
jg
push
add
inc
or
mov
and
mov
push
sbb
aas
sbb
jns
aad
push
xor
mov
ljmp
push
insb
in
insb
jle
mov
push
jle
pushf
xor
cs
pop
sub
jle
repz
hlt
and
add
xchg
cld
mov
es
sub
cli
inc
jo
sub
pop
stos
sbb
push
mov
inc
sahf
xor
es
mov
decl
ficoms
xor
pushf
pop
sarl
stc
or
ja
sbb
dec
aam
cwtl
pop
and
ror
pop
push
icebp
jl
cli
vpxor
pushf
jmp
mov
mov
mov
testb
mov
mov
cmpsb
mov
aam
or
cmpsl
cmp
add
add
lcall
or
fldl2t
jl
inc
loop
xchg
idivb
xchg
rcr
pop
shrl
fidivrl
xchg
jl
icebp
ffreep
arpl
outsl
dec
cmp
sub
insb
adc
in
jmp
pop
test
out
cmpsl
pop
icebp
fsubs
push
test
cmp
scas
imul
bound
divb
scas
ja
and
inc
mov
push
xchg
push
pushf
loope
adc
cmpsl
mov
sbb
fistl
dec
cmc
xchg
cmp
cmp
cmp
jbe
lret
jno
loope
fcoms
push
pop
out
mov
inc
mov
outsl
inc
fsts
iret
into
lock
andb
dec
shrb
out
mov
adc
leave
pusha
icebp
fbstp
mov
mov
popa
fwait
xor
aas
mov
xor
fnstenv
add
jge
jne
sbb
sahf
add
scas
push
fwait
sub
add
pop
enter
and
xchg
add
das
mov
xchg
adc
add
inc
fildl
mov
lds
out
sbb
mov
xchg
lods
cmp
js
jle
add
sub
mov
push
jbe
movsl
mov
xchg
dec
fdivrs
xchg
test
hlt
xchg
dec
ficomps
or
cmp
mov
pop
mov
pop
in
mov
aaa
and
xchg
xchg
dec
rcrb
cmp
data16
into
inc
push
popa
cmp
or
sbb
cld
mov
sbb
push
adc
or
cmp
inc
pop
les
adc
or
push
popa
push
mov
enter
dec
fiaddl
xchg
insb
dec
loop
dec
cltd
pop
cmpl
cld
or
movsb
xchg
sub
sbb
nop
mov
daa
xlat
arpl
fnstsw
xchg
mov
xchg
clc
fisttpl
aam
insl
push
inc
les
fdivs
dec
inc
dec
std
jbe
xchg
out
lcall
std
sub
ret
xchg
hlt
stos
aam
fstl
adc
xlat
sbbl
aam
ljmp
add
mov
pop
sbb
in
stc
sub
stos
add
xchg
int3
lds
jns
or
mov
flds
or
fsubr
addr16
fnsave
add
loope
or
js
pop
cmp
stos
mov
lea
sbb
fcmovnb
sub
sbb
fistl
icebp
cs
xor
addr16
inc
test
jb
arpl
pushf
add
int
in
sti
mov
into
into
xor
popa
xor
push
in
enter
push
stc
xor
lds
jbe
mov
xchg
scas
ds
loope
popa
dec
add
mov
jmp
std
dec
lock
push
mov
ja
dec
pusha
dec
pop
xchg
push
dec
adc
xor
push
js
mov
jl
cmp
push
nop
mov
fstpt
sar
push
test
jg
and
cltd
pop
shl
jge
shrb
adc
and
push
aam
lret
popf
xor
jge
ss
add
push
adc
add
push
push
out
jge
popa
mov
imul
sub
mov
lods
cmp
cli
xchg
repz
fwait
ss
outsb
or
mov
dec
xchg
pop
imull
shl
iret
add
xor
fstpl
sti
ret
add
scas
xor
imul
and
sub
test
test
test
jp
pop
push
xchg
ret
es
push
test
pop
out
pop
dec
loop
sahf
jbe
into
push
xchg
sub
xchg
xchg
add
or
xor
dec
push
mov
decl
sbb
inc
lods
shll
std
add
xchg
aad
pushf
imul
mov
mov
ret
xchg
loope
lods
mov
cmp
sub
push
dec
sub
add
and
iret
wbinvd
ss
ficompl
cmp
ss
loop
inc
out
mov
or
jne
imul
fsubs
add
push
mov
lret
cld
adc
adc
and
ss
add
xorl
add
jo
mov
and
jle
mov
dec
pushf
and
das
imul
jae
or
scas
cli
xchg
loopne
mov
js
mov
stc
leave
xchg
xchg
pushf
aad
adcb
xor
mov
push
jne
jae
pop
xchg
mov
in
into
lahf
cmpsb
or
lock
sub
or
pop
dec
aaa
popl
lods
add
sub
imul
or
dec
lret
sub
and
gs
and
outsb
sbb
in
mov
inc
mov
inc
in
mov
sbb
sub
in
shrb
pop
stos
dec
and
in
ds
push
push
mov
ds
cmp
jns
dec
mov
push
cmp
adc
mov
mov
cmp
xchg
mov
sub
mov
ret
adc
xor
inc
sub
test
dec
mov
and
mov
add
and
xchg
lcall
dec
ljmp
mov
fidivs
xchg
mov
bound
push
outsl
or
cmp
pushf
popa
clc
mov
push
jg
js
stc
ss
sub
leave
test
xchg
fs
rolb
call
xor
jge
push
fists
mov
fsubr
xor
sub
fbstp
add
lods
pushf
and
pop
push
sti
icebp
mov
xor
int
imul
fstl
mov
and
jb
jle
push
in
out
pop
push
insl
mov
jne
cmp
scas
rol
xor
cmp
stos
std
jnp
repz
push
dec
inc
cmp
test
xor
push
xchg
cmp
push
ljmp
jno
mulb
fcom
pop
add
mov
dec
dec
es
jmp
ljmp
fbstp
pop
adc
add
mov
fcompl
sub
xor
fwait
lock
and
mov
shlb
test
popf
cmp
dec
mov
pop
sub
push
and
es
mov
andl
int
out
in
push
push
or
xchg
xor
xor
add
push
mov
mov
scas
mov
mov
out
test
pop
imul
lods
fwait
shr
mov
cltd
loopne
add
leave
fwait
and
add
stos
fs
adc
insb
fdivp
hlt
int3
mov
dec
push
jb
ret
ja
jp
mov
mov
iret
lds
push
daa
dec
pushf
fst
jo
ret
jne
dec
adc
aaa
fcomip
out
ss
addr16
push
aas
dec
mov
cwtl
and
fsubrl
int3
jno
pushf
jmp
push
lahf
loope
jge
daa
inc
mov
and
enter
push
sbb
sarl
push
or
jg
sti
cmp
jno
sbb
jle
cmpsb
ss
outsb
cmp
je
imul
pop
push
mov
sbb
incb
push
out
movsl
hlt
add
jbe
inc
ret
js
or
daa
enter
mov
in
out
jl
sub
sub
popa
daa
sub
cmp
xor
adc
scas
inc
mov
out
add
shlb
in
fwait
dec
pop
das
inc
ret
pop
mov
loope
push
sub
mov
or
dec
out
and
testl
sub
push
cmp
inc
or
push
aas
push
sbbb
das
push
xchg
in
test
xchg
mov
sub
pop
pop
xchg
cmc
mov
clc
sahf
clc
cmp
jns,pn
movsl
arpl
xlat
cmp
insl
xor
pop
fistpll
addr16
mov
stos
sub
popf
int3
shlb
sbb
and
or
iret
xchg
mov
sbb
cmp
pop
xlat
jns
mov
or
push
jbe
inc
xlat
sub
pop
neg
into
mov
push
add
mov
dec
xchg
sti
sub
das
xchg
jl
dec
out
mov
loope
das
push
push
jmp
or
outsb
mov
dec
out
lcall
addl
push
fcmovu
cwtl
lods
push
push
imul
ja
push
jne
pusha
test
mov
lock
jnp
inc
pop
ja
sub
and
je
imul
pop
icebp
jle
cwtl
and
inc
testb
rcl
mov
pop
mov
mov
jb
dec
cmp
sub
stc
imul
inc
fsubl
lret
sti
test
add
push
mov
xchg
sub
jne
nop
in
scas
mov
insb
sub
fwait
mov
in
dec
js
cmpb
es
out
fcmovne
dec
lock
insb
jmp
hlt
push
xchg
jbe
pop
into
or
cmpsb
inc
shrb
and
cmpsb
icebp
into
movsb
frstor
or
xor
mov
dec
ljmp
sahf
jg
dec
mov
sarb
add
add
fwait
mov
adcb
ret
fcomp
or
push
call
xlat
movq
clc
xorb
jle
test
xor
inc
lods
in
pop
lods
mov
lods
xchg
sbbl
aaa
dec
dec
add
xor
arpl
sub
sbb
outsl
outsb
nop
nop
add
ret
add
mov
mov
cltd
xor
js
sbb
jae
sub
sbb
jle
dec
sub
mov
int
xchg
sub
jp
fiaddl
and
std
nop
xor
lds
sbb
mov
xchg
cmp
add
aas
ds
and
mov
mov
xchg
push
or
je
dec
push
test
int3
add
or
adc
xor
jnp
jl
mov
int3
jg
insl
insb
xor
add
mov
sub
filds
jecxz
icebp
adc
lods
cmp
lcall
mov
rcll
mov
jecxz
push
and
inc
popa
imul
or
mov
pop
inc
xchg
pop
das
out
jnp
mov
ret
in
aaa
sub
push
fisubl
or
bound
std
mov
add
xor
cltd
test
int3
dec
push
adc
xchg
cmc
mov
mov
sbb
sub
dec
je
push
cmp
adc
rcrb
mov
mov
pop
aam
pop
or
cmp
xchg
jge
mov
mov
push
cmp
outsl
jg
push
or
dec
sahf
sub
inc
outsl
and
mov
test
adc
jnp
shrl
push
jns
outsl
sti
jge
and
sbb
scas
aad
sbb
add
scas
fwait
sub
jge
xchg
notb
sbb
nop
out
movsb
sbb
ret
outsb
mov
leave
xchg
push
mov
movsl
mov
mov
sbb
add
inc
or
es
and
lds
jl
call
or
mov
das
xlat
das
cmpl
mov
mov
les
cmc
add
cmpb
sbb
push
outsb
int
pop
adcb
rcrl
shlb
dec
aaa
pop
call
imulb
xlat
gs
sarl
cmc
insb
lcall
out
cmp
outsb
add
jg
testl
pop
pop
das
push
daa
pop
sub
stos
repnz
dec
pushf
jbe
pop
outsb
jnp
in
mov
xorb
repnz
xchg
jl
mov
xor
jg
push
addb
push
sbb
sbb
and
in
push
dec
sti
test
inc
or
dec
jl
out
jl
pop
sub
sbb
nop
daa
addl
xor
stc
scas
and
or
inc
mov
scas
inc
movsl
ret
andl
movsb
mov
jae
dec
insb
sub
in
jmp
adc
and
xlat
stos
insl
cmp
ja
dec
in
push
test
popw
push
ficoms
fidivrl
stos
jns
pushf
idivb
dec
clc
or
cmpsb
leave
call
sbb
test
sub
popa
jp
jnp
sbb
test
adc
sbb
insb
jo
mov
scas
aas
inc
mov
rol
lahf
dec
int
mov
mov
xor
lods
ljmp
pushf
jne
out
shlb
lcall
cwtl
stos
mov
movsl
inc
out
xchg
call
ret
ror
adc
insb
pop
es
and
in
xchg
mov
cmp
mov
sbbl
add
in
js
pop
stos
sahf
insb
jle
add
jp
mov
xchg
xchg
clc
or
ficomps
nop
jo
mov
mov
lea
cmp
mov
push
mov
into
gs
test
xor
aam
mov
js
not
imul
loopne
sbbl
mov
jae
sbbl
rcll
or
ret
rcl
negb
inc
mov
ja
mov
sub
popf
addr16
fsubrl
outsb
leave
jp
ljmp
jno
stc
push
ficoml
in
insb
push
mov
shll
shrb
cmp
mov
sbb
jae,pn
lret
insl
push
jmp
mov
lahf
ss
adc
test
lods
cld
dec
xchg
sub
ds
push
dec
jmp
imul
in
lock
cwtl
dec
fcomp
in
lret
pop
fidivs
xorl
and
or
xchg
ljmp
jge
sub
rclb
xchg
xchg
int3
push
ljmp
testb
pushf
jge
lock
or
sub
mov
sbb
arpl
xchg
xor
mov
in
mov
push
es
lahf
mov
aas
loopne
and
sbb
cmc
in
sbb
or
icebp
shlb
inc
add
mov
loopne
mov
cmp
loop
fldpi
aas
inc
push
jno
popa
clc
dec
cli
cmpsl
push
out
jg
mov
dec
mov
or
xorl
loopne
fwait
test
movsb
push
mov
and
pop
sbbl
cmp
xor
cmp
std
push
jmp
sub
pop
mov
sub
adc
xor
cmp
mov
pop
test
lret
inc
lahf
inc
loop
jbe
rcrb
adc
lods
jecxz
add
ljmp
das
pusha
add
repnz
je
inc
popf
pop
pop
inc
gs
mov
ret
repz
cmp
sbb
cmpsl
sarb
in
out
and
mov
adc
fsub
sbb
ss
pop
addr16
lcall
and
nop
push
aas
and
jp
fsubl
nop
roll
inc
dec
decb
sub
mov
imul
loope
sub
divl
push
xchg
xchg
cmpsb
xor
xlat
sub
or
test
jae
push
jno
lods
je
ffreep
lods
dec
jp
sub
call
iret
fnsave
insl
std
push
push
shrl
int3
xor
enter
push
xchg
adc
cmpsl
popf
pop
mov
jo
sti
and
fld
hlt
xchg
repnz
sub
inc
xor
mov
adc
cs
loop
add
pop
clc
mov
push
gs
stos
nopl
xlat
xorb
dec
adc
adc
jo
xor
inc
push
sbb
mov
push
sbb
pop
dec
js
xor
inc
mov
xor
sub
mov
stos
lods
adc
xor
ja
jg
pop
in
sbbb
sub
inc
pop
dec
repz
inc
push
js
dec
shrl
xchg
and
out
add
in
out
shl
sub
scas
out
cmp
or
inc
test
stos
push
xchg
sub
cmp
subl
in
push
or
inc
lahf
roll
xor
leave
pushf
pop
sbb
xchg
pop
mov
repz
cmp
mov
dec
loope
jno
jle
pop
filds
das
loopne
mov
jo
notl
add
jo
out
push
push
mov
inc
outsb
out
or
sub
cltd
xchg
fisubs
mov
push
dec
nop
lea
jl
lods
out
ds
mov
stos
xchg
pop
aam
xchg
pop
and
add
jo
xor
xlat
pusha
and
sbb
sbb
or
inc
jmp
pop
scas
jo
fldenv
adc
jmp
pop
xor
xor
adc
inc
pop
cmc
mov
pop
push
inc
add
stos
pop
add
aad
clc
xchg
arpl
mov
adc
cmc
lret
mov
bound
sarl
notl
cmp
fcoml
dec
call
flds
inc
pop
arpl
jp
es
xchg
andb
jnp
fldt
popa
inc
or
leave
cmp
jge
jo
adc
mov
inc
jbe
mov
stos
insl
push
lret
push
fcmovne
xchg
enter
bound
into
iret
sbb
out
data16
and
add
in
xor
aad
xchg
sub
pop
in
jnp
rcrb
mov
stc
mov
lds
lret
xchg
adc
stos
mov
test
mov
lret
jae
cmpsl
sub
and
xor
mov
sbb
mov
pop
jge
push
mov
jle
fistps
or
sub
ret
faddl
and
sbb
mov
xor
jns
lods
imul
fs
cmp
sub
movups
out
pop
mov
jle
int
mov
and
stos
dec
add
cmp
push
mov
jae
add
cmp
call
dec
jecxz
add
repz
and
push
leave
popa
in
jne
pop
test
daa
test
loope
shrb
mov
xor
mov
dec
push
mov
je
test
sahf
mov
dec
popf
roll
sbb
scas
sub
mov
jl
sub
dec
test
sub
jo
test
dec
cmpb
inc
mov
pop
push
fcomi
ss
out
jbe
sbb
and
cmc
clc
and
push
aad
adc
and
push
fsub
arpl
jnp
dec
jge
mov
pop
xor
mov
dec
mov
jmp
shll
rcll
sahf
mov
shll
andl
cmp
mov
repnz
mov
mov
lods
sub
cmp
pop
loope
add
stos
frstor
clc
mov
sub
inc
cmc
ret
repz
fnsave
int
adc
and
enter
dec
je
lahf
nop
mov
icebp
adc
and
push
pop
cmp
cmp
inc
enter
int
jne
adc
dec
mov
outsb
add
stos
or
pop
push
cmp
sub
imul
mov
push
cltd
repz
mov
lods
add
insb
out
adc
imul
scas
xchg
imul
icebp
mov
mov
movsb
jp
aaa
push
fildll
mov
mov
cmpsl
clc
outsb
addl
dec
ja
outsl
cmp
pop
and
notl
ja
cmc
adc
cwtl
lock
inc
lcall
sbbb
subl
in
add
and
mov
xor
ljmp
jno
subb
cmpsl
lods
ret
cwtl
and
bound
stc
xchg
jl
dec
adc
mov
imul
scas
add
jae
xor
mov
imul
xor
dec
fs
bound
int
fisubl
push
ficoms
and
orl
sub
and
jno
aaa
mov
scas
push
sub
cmp
inc
nop
daa
jp
in
nop
les
pop
scas
push
add
fcmovu
popf
repz
fisubs
stc
andb
lret
shr
in
xchg
icebp
insl
cltd
or
or
out
dec
mov
fst
sbb
mov
pop
notb
pop
adc
sbb
aas
lret
mov
fistl
ds
xchg
stc
mov
out
and
jbe
push
cmp
out
mull
mov
mov
aad
cld
pop
addr16
pop
add
mov
shll
mov
ja
xchg
shrb
sbb
pop
cmp
lret
in
jecxz
inc
inc
lea
fnstenv
fstl
adc
je
int3
insb
cli
dec
push
add
into
inc
jmp
add
jno
jo
rclb
mov
ret
sbbb
cs
cmp
sbb
push
pushf
fwait
outsb
pop
mov
subl
inc
faddl
test
in
push
dec
scas
xchg
imul
cmc
xorb
xchg
mov
pop
mov
sbb
xchg
cmpsl
sbb
mov
mov
clc
sbb
fnsave
inc
jns
daa
scas
inc
fmull
test
sbb
das
scas
xchg
dec
jae
sub
pop
cmc
adcl
pop
jnp
nop
pop
or
push
outsl
lret
adc
rorl
ja
mov
push
xchg
and
std
adc
sub
sbb
sti
jno
je
and
inc
cmp
imul
jbe
lret
outsl
es
xchg
jmp
adc
xchg
and
iret
dec
bound
outsl
sbb
cmc
ds
add
sbbb
in
fwait
add
cmp
stos
sub
xchg
ja
shrb
push
fwait
sbb
xor
ss
in
dec
pop
cmp
sarb
jno
fiadds
daa
scas
sbb
ret
subl
mov
roll
mov
pop
insl
sti
mov
stc
nop
xor
mov
push
push
push
lahf
ds
std
aam
or
dec
popa
xorb
jne
int
mov
mov
mov
iret
gs
push
cwtl
jb
in
cwtl
sub
xchg
lcall
push
inc
out
adc
orb
adc
insl
push
sbb
movsl
pop
push
dec
push
rolb
xchg
int3
stc
flds
inc
mov
jp
mov
add
mov
stos
inc
bound
lods
lods
sub
popf
sbb
insb
inc
xor
outsb
in
pop
ret
je
sub
xor
in
and
pop
in
add
mov
and
inc
xchg
jns
push
cltd
inc
jl
hlt
xor
in
addr16
add
pushf
mov
mov
mov
sbb
rcll
lcall
cmp
mov
dec
pop
test
scas
xchg
inc
in
lock
ret
jnp
jmp
jle
repz
arpl
in
ret
lods
inc
lcall
ficomps
pop
fucomi
sub
popa
add
inc
pop
cmp
pop
andb
enter
jne
inc
jg
mov
fwait
lods
lds
fwait
cmpsb
fldcw
shlb
stc
adc
pop
sahf
in
xchg
pop
ss
sbb
sbbl
jmp
test
push
cs
jbe
sbb
xchg
movsb
aam
xchg
push
and
pop
sbb
rep
push
jns
int3
xchg
sub
rorb
dec
pop
jecxz
push
jne
sub
stc
pop
hlt
sub
jp
notb
mov
daa
push
xchg
sub
ja
mov
or
jecxz
dec
sbb
mov
sub
in
push
mov
xor
cmpsl
gs
cmp
popl
ret
call
test
mov
jge
rcl
std
push
mov
push
jmp
jle
push
mov
inc
xchg
xor
sub
or
scas
cmp
lock
fwait
je
inc
add
jb
insb
push
test
dec
mov
lahf
adc
mov
loop
mov
adc
test
pop
and
mov
incl
jns
xor
and
xchg
dec
daa
js
adc
sub
or
sbb
push
sub
test
fisubrs
adc
adc
mov
sbb
cs
jle
or
lods
sti
cmp
arpl
shll
mov
sub
fadds
push
mov
adc
subl
xlat
mov
lcall
call
mov
xor
push
lret
jmp
mov
lcall
jb
rcr
jo
mov
test
imul
lods
mov
jbe
push
sti
xchg
inc
lret
inc
mov
inc
sbb
stc
dec
jo
ja
daa
fcoms
sbb
fistpll
jns
lods
xchg
aas
mov
dec
cmpsl
ret
into
dec
inc
and
orb
dec
xchg
and
inc
xchg
cmc
inc
fxch
ja
imul
test
das
stos
mov
shll
dec
pop
push
inc
add
pop
mov
test
dec
sbb
sbb
stos
push
or
or
addl
or
imul
mov
daa
inc
jmp
mov
xchg
mov
mov
and
cmpsb
inc
pop
mov
ss
jmp
into
test
fmul
aas
jp
adc
lret
mov
call
addr16
aaa
call
dec
sti
int3
ret
pop
jp
push
and
dec
out
inc
jno
clc
insl
aas
or
add
test
test
pop
and
mov
jge
xor
pushf
popf
inc
data16
out
and
shl
divl
adc
push
das
cmp
cmp
rorb
orl
push
ret
and
lret
xor
and
pop
xor
push
or
das
lret
push
mov
repz
sar
repz
sbb
adc
testl
jae
int
jle
fisubs
rol
repz
and
inc
loope
jae
mov
cmp
call
aam
js
fistpll
jg
pop
test
insb
add
sti
adc
stos
inc
xchg
lods
jge
cmpsl
push
cmp
mov
mov
mov
or
mov
imul
and
and
inc
test
add
inc
add
fmuls
call
ret
and
xor
dec
ljmp
std
sub
cmp
xor
ret
test
push
mov
cmpsl
nop
cmp
ja
xor
pop
jb
pop
cmp
lahf
dec
mov
fsubrl
cmpsb
sbbb
mov
mov
pop
dec
mov
push
or
mov
cmp
jl
outsb
cmp
je
lds
enter
dec
dec
ficomps
jg
repz
test
xchg
xchg
sub
mov
jecxz
push
xchg
xor
loopne
cmp
adc
inc
data16
pop
je
pusha
or
out
mov
and
xchg
sbb
add
iret
mov
dec
orl
adcl
jns
popf
stos
mov
jbe
sarl
sbb
mov
cmp
fcompl
cmp
int3
pop
xorl
or
enter
xchg
add
mov
aam
cmpsb
sub
xlat
dec
jmp
jne
enter
cld
mov
data16
adc
fnsave
js
push
ds
xor
das
bound
adc
lods
jae
stc
imul
xchg
and
jne
mov
push
adc
adc
not
dec
fldcw
int
es
mov
jnp
pop
cmp
lcall
outsb
jge
and
fnstcw
pop
push
xor
into
popa
fadd
inc
ja
jbe
pop
cmp
stos
addr16
rcrl
mov
stc
cs
cmp
repz
stos
sbb
push
orb
clc
mov
or
cmp
sbb
ss
test
into
popa
mov
je
xor
lcall
xor
icebp
lahf
mov
call
xchg
xor
dec
mov
mov
leave
push
and
mov
mul
add
iret
jle
mov
test
add
add
sbb
xor
dec
nop
push
jbe
loopne
or
xchg
rolb
xchg
mov
xchg
in
cmp
dec
mov
sahf
xchg
xchg
out
js
sbb
cli
pslld
js
movsl
in
sub
mov
mov
pop
mov
shrl
shlb
mov
es
fisubs
push
mov
imul
sub
cmp
push
jmp
jge
jp
and
inc
dec
cld
sbb
cmp
lcall
mov
popf
std
adc
hlt
mov
jae
push
les
add
xchg
out
cwtl
pushf
jg
js,pn
inc
out
add
pop
dec
lock
cmp
subb
cmp
insl
xchg
scas
sub
repz
popa
invd
mov
rcll
hlt
ja
rorl
pushf
jmp
cmpsl
cltd
sub
shll
leave
rcrl
adc
dec
icebp
fsubs
jl
dec
out
test
cli
xchg
sti
xor
adc
add
aaa
dec
lods
popf
loopne
das
push
jecxz
dec
popa
mov
pop
sbb
push
add
or
inc
in
or
inc
mov
lods
pushf
js
outsb
jle
pop
pushf
jo
mov
adc
mov
pop
jbe
mov
inc
add
dec
push
jge
out
aas
stc
jmp
mov
daa
loopne
popf
mov
test
pop
dec
cmp
daa
fnclex
clc
dec
push
cmpsl
gs
or
mov
fadds
subb
cs
out
sbb
mov
dec
sub
shl
jno
jmp
fwait
xchg
outsb
add
cmpsl
cmp
loope
int3
mov
inc
mov
push
mov
cmpsb
cmp
pop
and
notl
push
call
out
fwait
call
pop
sbb
aaa
lcall
repnz
clc
xchg
out
dec
fimuls
js
inc
daa
cmp
stc
or
jp
inc
and
flds
jb,pt
shlb
xchg
lds
subl
cmp
imul
cmp
popa
ds
fwait
or
push
adc
add
imul
add
test
fsqrt
xchg
cmp
mov
loope
xlat
pop
popa
jl
mov
pushf
in
pop
jle
or
lock
movsl
inc
sbb
cmp
or
xor
push
lcall
je
sub
sti
mov
hlt
or
cmp
cltd
and
add
and
enter
jecxz
jnp
cmp
adc
pop
dec
dec
fsubs
lret
or
jo
xorl
das
jne
sti
movsl
mov
andb
repz
pop
iret
sub
ja
das
lds
mov
or
out
ficomps
insl
add
add
addb
xchg
sub
idivb
push
scas
sub
push
shll
xchg
out
inc
sbb
test
aas
pop
divl
sbb
push
mov
xchg
fwait
dec
fstpl
icebp
adc
fldenv
test
outsb
sbb
js
sub
xor
mov
cmp
lds
daa
pop
rorb
into
sub
pop
dec
mov
sbb
jecxz
lret
sti
outsb
push
or
mov
insb
out
cmp
push
call
les
mov
adc
stc
and
mov
mov
clc
jo
ret
xor
add
push
mov
or
jns
xchg
push
sbbl
and
lahf
testl
jb
inc
popa
test
rclb
pop
fbstp
rorl
push
cwtl
xor
or
or
cmc
pop
inc
push
mov
into
cmc
cmp
mov
dec
mov
jle
dec
pop
gs
and
xchg
xchg
mov
in
je
movsb
push
test
test
iret
fcom
push
adc
xchg
push
dec
scas
sbb
arpl
fcoms
loope
jp
xor
xchg
mov
xor
jnp
loop
pop
insb
cmp
or
clc
adc
js
xor
mov
dec
pop
inc
add
scas
dec
add
sbb
ret
pop
out
mov
mov
ret
repnz
push
ds
inc
push
and
xor
daa
stos
sbb
push
bound
imul
push
xor
push
add
mov
imul
push
std
dec
mov
loop
out
add
pop
gs
sub
in
in
test
je
je
sti
inc
enter
rolb
in
jbe
mov
adc
ret
and
pop
cmp
sub
sbbl
aaa
call
pop
xorb
jg
xlat
rcll
jo
pushf
sub
icebp
not
popf
call
mov
js
cli
or
xchg
xchg
add
test
and
fwait
adc
or
and
int3
jae
std
mov
push
inc
in
pop
or
jo
stc
shlb
xor
xor
jg
jge
add
jno
push
mov
inc
mov
cmp
pop
adc
out
cmp
pop
mov
ret
ss
sub
cltd
in
add
lcall
gs
cmpl
out
test
pop
or
nop
mov
andl
pop
jecxz
xor
xchg
inc
inc
pop
mov
xchg
pop
sub
ss
sub
inc
xor
lock
and
pop
andl
call
test
adc
popa
xchg
out
bound
loopne
leave
xchg
add
pushf
mov
test
iret
sbb
add
cmp
adc
sub
subb
sbb
lods
lahf
xor
cmp
in
andb
cmp
jle
ret
fists
out
shll
out
mov
insb
jp
dec
enter
inc
jmp
fs
sbb
fnstenv
sub
push
stos
or
add
cmpsl
xchg
repnz
hlt
jns
sub
sub
xchg
ljmp
xchg
stos
adc
in
test
mov
pop
shr
subl
push
inc
pushf
sub
leave
jbe
mov
std
cltd
ss
mov
and
and
add
scas
inc
pusha
rcrb
enter
call
fcmovnbe
jns
pop
mov
fwait
pop
xor
jmp
mov
xchg
jecxz
jl
cmp
mov
insb
jl
iret
mov
jle
pop
xchg
mov
mov
lods
xchg
add
loopne
dec
scas
lahf
rol
bound
inc
in
stos
outsb
jl
inc
cmc
mov
mov
pop
test
or
dec
xlat
or
out
fldl2t
das
fcmove
mov
imul
incb
push
ljmp
pop
cmpsl
mov
dec
test
xchg
cmpb
test
ror
je
imul
sahf
jle
test
into
fs
add
loop
cmp
ljmp
inc
pop
rorl
enter
mov
ffreep
sbb
pop
lret
test
inc
jmp
inc
push
mov
jg,pt
cltd
test
aam
sbb
sbb
sub
idivl
orl
push
sub
sub
fwait
xor
lcall
inc
enter
pop
fdivl
into
pause
inc
adc
test
add
ret
outsb
ja
sbbl
push
in
jns
cwtl
das
cmpsb
adc
mov
stc
in
decl
or
lock
adc
cmp
mov
movsb
xor
pop
rcll
jb
jge
xor
jnp
adc
cmpsb
inc
push
mov
in
ljmp
inc
rorl
ja
aad
iret
insl
shll
lret
xorb
mov
leave
push
test
cwtl
stos
int3
push
cmp
xchg
xchg
sbb
xchg
rcrl
dec
jnp
sbb
in
mov
cld
sbb
inc
shl
dec
imul
mov
dec
xor
fidivrs
pop
xchg
cmp
test
sub
lock
popa
scas
pushf
lret
iret
fcomps
inc
fldl2t
jge
mov
or
mov
fists
cltd
mov
push
pop
dec
into
cwtl
je
and
jg
xchg
mov
xchg
lods
push
mov
cmpsb
in
xor
and
sti
cmp
out
pop
dec
lock
sbb
inc
ljmp
std
jg
je
push
push
cmpsl
imul
mov
and
out
cmp
adc
aas
xlat
cmp
lods
aaa
mov
sbb
int3
fistpl
cwtl
dec
add
cld
into
jecxz
add
bnd
imul
xor
jb
cmp
rcl
stc
jno
and
mov
in
aad
fsubrs
test
adc
clc
or
fisttps
sbb
jl
mov
cmp
push
push
nop
fldl
push
outsb
add
sub
mov
push
call
add
jo
shrb
jle
pop
icebp
shll
xchg
lret
or
popf
or
pushf
bound
fsub
add
inc
aas
jl
in
fisubrl
shlb
out
aad
inc
mov
mov
pushf
and
sbbb
mov
data16
cltd
xorl
imul
fs
into
int3
mov
mov
mov
pop
xor
sar
or
xlat
push
sub
addl
cmp
dec
mov
adc
addr16
icebp
add
pop
push
and
repz
mov
pop
hlt
xor
in
push
dec
and
popa
dec
fildll
jl
cmp
pop
sub
xchg
mov
jl
mov
loope
cltd
or
dec
add
sarb
cmc
mov
fadds
mov
sbbl
mov
mov
push
cmc
jl
loope
mov
popf
and
rclb
jg
mov
sbb
daa
xchg
or
mov
adc
in
es
sub
xlat
sbb
jne
inc
shrb
iret
aad
sub
inc
jge
sbbb
or
xchg
rcrl
adc
test
mov
popf
lods
mov
in
cmpsb
fs
movsl
mov
cmc
test
jl
outsl
cmp
jp
int3
mov
dec
sub
mov
dec
jns
stos
insb
jno
mov
stos
test
or
xor
imul
inc
dec
pop
hlt
jg
lock
sbb
cmpsl
cmp
push
test
adcb
jno
fildll
or
cmp
cmpsl
mov
add
and
xchg
orl
inc
and
sar
sti
inc
jns
insl
push
int3
mov
cmpb
and
adc
inc
xchg
inc
xchg
add
and
sti
xorps
lcall
scas
jb
push
sub
dec
mov
in
mov
mov
jbe
data16
sub
rorb
cltd
mov
jnp
loop
or
push
into
imul
adc
mov
jne
stc
nop
push
xchg
push
jl
or
dec
fistpl
orl
jg
out
add
icebp
mov
insl
sub
dec
mov
xchg
push
lahf
movsb
imul
outsb
ret
xchg
test
shr
test
jle
or
aad
mov
rolb
cmp
icebp
mov
push
pop
cmp
jmp
out
jle
andb
jbe
orl
fs
insb
mov
pop
inc
or
repz
push
fcompl
mov
pop
rclb
sahf
pushf
dec
js
pop
stos
imul
insl
std
adc
or
out
in
dec
popf
push
jne
pop
stos
jmp
je
add
fwait
fwait
repnz
push
test
xchg
adc
cmp
aas
je
lock
mov
leave
mov
or
pop
ds
and
cld
fildl
ja
jae
sbb
int3
scas
loop
icebp
pusha
mov
or
pop
gs
mov
and
mov
inc
in
sbb
pop
into
gs
dec
inc
fidivrs
adc
ret
add
push
adc
inc
xor
fisubrl
lds
push
sub
cmpsb
ret
lods
lock
mov
movb
sahf
mov
das
std
sbbb
sub
je
ret
test
dec
lds
rcl
cwtl
or
push
inc
push
adc
int3
jge
sub
pop
mov
sub
pusha
outsb
sub
rcrb
mov
mov
mov
adc
and
std
cltd
sbb
cmp
jns
xor
cmpsl
addl
mov
fnstcw
out
test
xchg
cltd
push
and
fwait
pop
push
adc
add
inc
das
das
das
jmp
decl
mov
mov
push
je
xor
loope
fwait
pusha
xchg
pop
xor
notb
test
sahf
decl
add
inc
jmp
xlat
and
mov
jb
or
and
cmp
imul
int
cwtl
das
ret
scas
lods
pop
sar
cltd
test
xor
rorb
mov
mov
sub
push
cmp
es
pop
fucomp
js
inc
lods
loope
inc
adc
lret
xor
push
mov
fstps
lcall
cmc
js
lret
lods
daa
je
ret
pop
jb
ret
cmp
lods
jnp
sar
aaa
push
int3
hlt
enter
push
xchg
stos
inc
add
push
lea
scas
pop
loop
and
lret
lock
insb
sahf
in
push
jmp
daa
ret
jo
pop
inc
stos
inc
xor
insb
sti
dec
test
ret
sub
loopne
divb
add
adc
cld
nop
pusha
ds
insb
jmp
ret
sbb
xchg
and
pop
push
aas
inc
jo
clc
ftst
out
ja
mov
fld
mov
and
add
inc
mov
push
jg
sbbb
int
mov
sub
xchg
add
js
mov
mov
les
jecxz
call
test
mov
dec
mov
das
mov
mov
loopne
xchg
inc
push
rcl
sbb
sbb
aam
aaa
push
scas
adc
push
lods
sahf
out
mov
xchg
sti
lahf
add
lds
ss
fwait
push
sub
mov
push
mov
cwtl
mov
sub
jns
push
in
sub
mov
inc
popf
repnz
cmc
push
add
bound
out
inc
mov
repnz
jo
dec
mov
dec
or
mov
pop
loope
or
stc
sub
iret
enter
sti
lods
data16
lret
rcrb
lods
lods
sbb
xlat
pop
aas
jmp
hlt
icebp
cmp
or
xchg
sbb
pop
adc
sub
cli
push
imul
imul
jne
pop
out
dec
and
add
xchg
sbb
or
inc
jge
das
enter
sahf
test
subb
loop
rcrl
stos
add
decb
and
xor
ret
andb
cmp
out
mov
adcl
outsl
and
dec
xor
pop
push
shlb
jb
pusha
and
les
cmp
daa
sub
sub
test
add
sub
jae
hlt
mov
mov
add
call
add
outsl
int
sbb
inc
lcall
push
mov
inc
push
cs
dec
and
inc
xchg
pop
mov
xchg
xor
push
mov
dec
jg
sub
ret
subb
imul
shl
outsb
jl
push
inc
dec
mov
popa
cmp
mov
xor
adc
dec
lods
sbb
je
mov
fidivs
rcrl
js
insb
cmpb
out
adc
lds
loope
push
mov
xchg
cmp
ret
sbb
sahf
fwait
xchg
jne
loop
fwait
fs
pop
in
std
mov
lfence
icebp
movsl
aaa
in
or
inc
out
stos
in
mov
inc
gs
in
in
and
ds
les
incb
xchg
nop
dec
cli
enter
mov
cmpsb
mov
cmp
cltd
push
fisubl
mov
pop
out
xchg
sub
pop
mov
call
jae
cmp
imul
xchg
fisttps
movsl
dec
aam
mov
adc
inc
stos
pop
xor
test
dec
dec
idivl
inc
dec
mov
sahf
fdivrl
dec
mov
lret
add
sub
push
mov
out
push
push
push
sbb
das
jbe
jge
fsubrs
sahf
and
repz
int3
fistps
lcall
mov
xor
jle
xor
push
mov
add
cmp
pop
and
pop
sub
cmp
roll
into
xchg
cmpsb
aad
mov
int3
scas
push
jle
xchg
faddl
mov
dec
adc
dec
add
out
ja
mov
mov
cmp
xlat
js
idivl
add
negl
jbe
mov
mov
inc
xlat
inc
jo
mov
cwtl
es
add
dec
and
rcr
sbb
dec
jl
mov
ficompl
in
jg
pop
inc
fisubrs
loop
jbe
push
xor
rcll
push
add
mov
jae
lret
bound
std
pushf
int3
inc
fdivr
mov
lods
inc
xchg
mov
mov
xchg
popa
clc
movb
ljmp
push
or
out
cmpsl
imul
into
mov
movsb
cmp
inc
or
loop
xor
popa
or
mov
mov
and
cld
xchg
lds
fsubr
pop
repz
loope
cmpsb
xchg
sub
enter
sbb
mov
sub
les
sub
pop
pop
dec
aaa
xchg
sub
xlat
add
gs
test
lahf
testb
dec
stc
nop
inc
xor
pop
mov
imul
mov
pop
push
jmp
daa
jo
es
leave
jmp
enter
inc
mov
add
add
cs
ja
jmp
pop
out
fcoml
aam
sub
pusha
pop
bound
iret
es
dec
jo
jb
push
adc
jle
stos
insl
push
jns
jbe
aam
mov
jle
mov
je
add
sbb
test
aad
xchg
xor
bnd
es
adc
mull
mov
stc
popf
xchg
xor
fisubs
jl
sbb
shlb
adc
into
loopne
std
shlb
and
xchg
push
push
out
test
mov
mov
ds
outsl
or
stos
cmp
sbbl
sub
mov
push
cmpb
jno
pop
repnz
xor
mov
std
xchg
js
adc
mov
sbb
dec
cli
jno
sub
call
es
pop
sahf
dec
mov
pop
hlt
stos
pop
jecxz
nop
lret
jnp
std
mov
cwtl
jecxz
outsl
push
push
adc
jae
loopne
test
data16
xchg
cwtl
xor
bound
sub
lret
mov
dec
loop
rclb
add
sub
cli
mov
xchg
mov
rclb
dec
loope
mov
dec
call
or
insb
cmp
lret
pop
leave
pusha
pop
adcb
xchg
xor
lsl
xchg
xor
std
jns
das
xchg
lods
inc
lds
cs
popf
xor
mov
cmp
pop
in
adcl
push
cmp
mov
mov
or
pop
je
shrl
rcrl
sub
jp
cltd
stos
sub
pop
bound
jl
add
loop
xchg
sub
inc
xor
xlat
outsb
cltd
mov
adc
int3
in
decb
pushf
xor
add
xchg
jno
mov
call
xor
mov
jns
push
lods
aaa
sbb
gs
sub
mov
push
in
mov
inc
fistpl
mov
lahf
repnz
xchg
mov
mov
movsl
into
int3
arpl
jge
cli
scas
daa
fidivl
ja
add
subb
push
leave
pusha
dec
outsb
inc
fcomps
mov
push
inc
mov
xchg
loopne
add
push
mov
aas
pop
and
sbb
or
pop
outsl
push
nop
out
sbb
mov
lods
inc
xchg
pop
repz
mov
lret
and
mov
fnstenv
imul
popf
or
cmp
rcll
ljmp
orl
mov
xchg
sbb
add
rolb
push
enter
and
mov
jbe
cmp
push
mov
xchg
scas
cmp
stos
jo
js
mov
pop
repnz
lahf
xchg
inc
xlat
outsb
jns
mov
mov
das
fisubl
mov
jp
ds
lods
call
xchg
xor
arpl
pop
scas
loope
mov
mov
jb
stos
mov
je
jg
cmp
je
jns
mov
hlt
jp
jns
add
loopne
scas
das
popa
clc
pop
jge
pop
mov
stc
nop
add
or
push
cmp
es
lcall
and
mov
movsb
adc
inc
js
mov
cmpb
and
rcll
cmpsb
cmp
push
arpl
pop
xchg
ret
and
mov
or
notl
xchg
mov
push
arpl
cmp
xchg
mov
jnp
push
arpl
xchg
ret
jno
repnz
xor
imul
xchg
mov
jo
das
movsl
iret
pop
scas
std
jno
mov
pop
ja
popf
movsl
lret
sti
imul
push
test
fisttpll
pop
jl
test
jmp
daa
sbb
mov
outsl
stc
nop
sahf
and
lret
fnsave
stc
nop
or
testb
xchg
jle
and
arpl
cwtl
xchg
out
jl
push
mov
mov
repnz
fnsave
es
jne
adc
sub
xchg
pop
mov
mov
pop
mov
jne
cmp
sahf
out
xchg
cmpsw
ds
inc
sbb
pop
lret
push
inc
inc
fdivs
sub
pop
mov
in
test
sub
sub
add
enter
mov
cmp
xchg
sub
stc
stos
inc
sub
mov
push
loop
outsl
sbb
dec
in
cmp
mov
mov
ficoms
por
mov
inc
push
jmp
mov
jo
leave
xlat
jp
or
adc
aaa
pop
ds
jo
mov
pop
loopne
mov
hlt
outsb
lret
sti
mov
outsb
out
pusha
notl
sub
outsl
leave
mov
cld
mov
push
call
xor
test
add
sbb
jl
cmp
pop
jno
jnp
add
scas
inc
loope
xchg
test
xor
push
jmp
sbb
pop
testb
sahf
xor
incb
jmp
push
sbb
fdivl
lret
in
cmp
sub
sbb
shrb
pop
jne
ss
sti
push
xchg
sub
fwait
sbb
repz
loope
mov
outsb
aad
mov
mov
sub
dec
mov
jb
ficomps
bound
cmc
mov
pushf
hlt
fisttpl
mov
pop
and
add
mov
sti
inc
das
push
popf
pop
fsubrs
lds
iret
dec
and
mov
ja
jmp
xchg
inc
adc
cmc
xchg
push
hlt
lahf
mov
xor
testb
lods
cmp
jp
inc
pop
ret
pop
data16
mov
sti
loop
repnz
add
aaa
mov
xchg
aad
lret
add
add
in
adcb
sbb
jo
or
in
mov
cmpl
in
test
mov
jecxz
push
pop
push
test
pop
divb
fwait
outsl
xchg
push
imul
push
out
mov
add
mov
and
sub
dec
data16
sbb
aad
aas
push
insb
notb
sub
mov
out
mov
bound
xchg
mov
xor
cmc
dec
popa
daa
pop
rcl
dec
cld
xchg
jp
pop
cmc
mov
push
fucomi
jp
sbb
mov
xor
inc
jbe
xchg
adcb
loop
arpl
divb
int
cmp
aaa
push
shlb
mov
mov
jb
andl
mov
lret
cmc
test
sub
xchg
testb
mov
lea
adc
push
xchg
cmp
sahf
pop
icebp
sbb
mov
iret
push
push
nop
mov
adc
mov
xor
setle
fldt
nop
fsubrs
push
lea
nop
cmc
pop
into
ret
fmul
jecxz
fsubp
ficompl
push
aam
cld
rcll
sbb
mov
cmp
push
fsqrt
imul
inc
fldenv
lods
xchg
xchg
sbb
cltd
addl
add
mov
ljmp
jbe
fnop
push
ljmp
outsb
int3
or
rcrl
jmp
adc
mov
sti
add
iret
fimull
push
mov
sbb
xor
or
cltd
cld
pop
out
sbb
movd
fwait
daa
adcl
mov
loop
sub
int
cwtl
push
js
push
or
pop
xchg
push
push
out
xchg
xor
movsl
mov
and
nop
rolb
mov
mov
call
add
clc
cli
ret
lods
adc
pop
dec
cltd
push
add
dec
mov
push
or
mov
test
int3
or
subb
lock
mov
add
mov
and
inc
xchg
jp
stos
inc
fstp
cmp
ror
push
insb
add
sub
xor
jb
loope
jp
sub
jnp
loopne
dec
rclb
push
sbb
inc
push
push
xlat
insb
inc
xchg
sub
sub
sahf
jl
out
hlt
sbb
ret
or
int
test
xchg
push
push
int3
test
in
scas
loop
ljmp
or
xchg
aad
xchg
in
sbb
stc
nop
or
sbb
dec
int
lock
leave
mov
xor
push
iret
xor
not
dec
lret
mov
test
in
test
lret
mov
int
pop
lock
out
js
int
sub
iret
ljmp
in
sub
and
sub
fsubrs
jmpw
clc
cmc
daa
mov
idiv
xchg
sub
jb
dec
mov
cmp
mov
js
jg
xchg
rcrl
xchg
mov
es
test
sub
and
add
inc
movsb
dec
gs
jnp
lods
je
mov
cwtl
addb
push
ljmp
inc
pushf
or
mov
jne
fnstcw
filds
das
fdivrs
iret
sarb
in
mov
pop
aas
or
or
mov
push
and
andb
add
adc
loope
dec
fiadds
in
sbb
dec
and
jb
mov
shrl
daa
ffreep
mov
inc
lret
xor
test
push
sbb
imul
int
sahf
or
call
mov
out
mov
fldcw
xchg
mov
fwait
cld
xchg
inc
adc
push
scas
push
pop
rcll
cmp
add
pushf
nop
cs
dec
jnp
pop
sarb
mov
bound
push
movsl
cmp
or
sbb
repnz
push
in
test
push
out
int
dec
lahf
pop
ret
loope
jb
outsl
mov
mov
pop
fs
cmp
ja
jbe
adcb
xor
test
jmp
mov
and
fisubs
xor
jo
fimull
adc
lods
xchg
jmp
mov
or
dec
rorl
mov
movsb
dec
loopne
jl
lret
inc
je
out
dec
inc
pop
and
das
lds
lea
adc
push
jo
jo
daa
subl
and
or
lret
gs
mov
pop
or
mov
jno
mov
dec
pop
movsl
cmp
inc
insb
mov
lea
sub
leave
dec
fs
inc
dec
or
pop
dec
jp
mov
lds
fbstp
cltd
xorb
pop
push
in
mov
gs
arpl
mov
leave
jge,pn
ja
ret
cmp
movsl
xor
xchg
fidivs
icebp
inc
les
cli
xor
lock
fnsave
repz
and
clc
xor
outsl
arpl
pop
leave
incl
inc
vmovd
xor
mov
and
subb
pop
addl
rcrl
dec
mov
mov
cmc
sbbl
sysenter
in
inc
clc
sub
sbb
adc
out
cmp
inc
enter
fcoms
iret
cmp
outsb
cmpsl
pusha
xor
mov
insb
ja
cmp
mov
cmpl
jle
dec
mov
jl
add
and
mov
add
dec
mov
sbb
mov
sti
sub
xlat
cs
loopne
fbstp
add
movsb
jb
xchg
push
out
mov
cmpsb
out
adc
in
icebp
xlat
in
ss
sti
loopne
ret
fldcw
in
or
out
sub
in
aad
xlat
mov
shlb
mov
aad
inc
repnz
inc
mov
repz
test
jecxz
stos
jns
mov
pop
clc
jnp
mov
mov
xor
jmp
nop
mov
pop
ret
cs
jg
push
insb
cmp
dec
pop
jge
inc
dec
sbb
mov
cmc
test
and
outsl
mov
shrl
shll
pop
clc
cmpl
pop
sahf
outsl
aad
jg
nop
fistl
lret
mov
cs
cltd
mov
shl
and
movl
pop
pop
mov
pop
loop
mov
imul
mov
ja
mov
std
xchg
sub
popa
lods
ds
mov
negl
mov
pushf
jnp
jo
push
cltd
mov
mov
lock
rorb
int
sahf
icebp
sub
mov
test
adc
add
aaa
faddl
jmp
adc
pusha
addl
je
idivb
pop
jmp
mov
inc
es
mov
in
insl
fwait
mov
arpl
push
cmp
cmpb
cld
inc
xor
jecxz
sidtl
mov
arpl
jbe
dec
test
dec
pop
lahf
cmpsl
jge
push
mov
ja
add
jg
lods
pop
xchg
cmc
xchg
test
insb
or
fwait
nop
daa
xor
cmc
arpl
out
and
lds
jb
out
test
add
imul
sti
pop
xchg
jle
mov
xchg
sub
mov
cmc
outsb
ss
aaa
test
and
adcl
lea
out
pop
sbb
mov
jp
sub
ds
addr16
sub
je
insb
mov
push
and
test
es
xchg
rclb
xchg
rorb
imul
cmp
sbb
pop
jno
sub
or
xor
jns
pop
inc
inc
xchg
bound
lret
push
lret
adc
aas
inc
lcall
pop
sahf
add
sub
lds
push
push
imul
ss
mov
pop
sbbb
stos
cmp
push
inc
sub
in
bndldx
adc
cmp
out
in
and
out
jne
jno
addr16
addb
adc
call
das
lds
loopne
xor
jge
adc
int3
out
lock
push
push
mov
xlat
sbb
into
roll
sub
lods
jbe
sub
cmp
cmpsl
pop
sarb
fisubs
jecxz
shrl
add
mov
cmpsl
pop
jge
je
jo
rcrb
and
sbb
pop
dec
xchg
add
hlt
dec
mov
push
mov
ss
and
jnp
cwtl
ljmp
cwtl
stos
outsl
cli
and
dec
jp
xchg
sahf
es
sbb
xchg
pop
lock
outsl
mov
mov
negb
lds
lea
sbb
push
mov
call
push
fstl
add
scas
xor
xor
mov
hlt
inc
test
pandn
in
in
and
add
lea
cmpsl
adc
mov
push
sbb
cltd
xchg
push
mov
cmp
pop
scas
mov
loopne
adc
pop
add
sbb
adc
push
test
inc
test
out
push
dec
mov
movsb
popa
insl
mov
pushf
nop
dec
hlt
es
imul
and
mov
push
test
adc
retw
loop
clc
jnp,pn
sbbl
cmpsb
add
fsts
push
and
xchg
pushf
xchg
add
lahf
out
adc
mov
mov
icebp
sarb
outsb
lds
icebp
mov
ljmp
test
push
pop
pop
in
test
leave
scas
gs
mov
xor
rcll
js
out
fcmove
gs
xor
cmp
out
mov
stc
idivb
push
dec
mov
fwait
mov
outsb
add
aas
jb
loope
pusha
lea
scas
dec
outsb
pushf
pop
loope
cmp
pop
cmp
outsl
add
or
outsl
and
push
fsub
sbb
push
cmp
test
add
int
popf
mov
adc
std
mov
sbb
pop
les
sub
les
in
or
rcrl
jnp
sahf
sbb
jg
out
adc
dec
mov
rorb
roll
dec
lcall
pop
iret
lret
call
rcr
ss
jmp
lods
cld
xor
aad
stc
mov
cld
xor
shlb
out
addr16
sbb
pop
sar
cmp
enter
pop
leave
push
lods
inc
dec
pop
inc
cmpsb
xchg
push
mov
fldenv
ret
cmpsl
sub
sub
sbb
call
scas
add
outsl
shlb
shlb
rclb
js
push
je
inc
push
mov
inc
pop
je
jnp
jge
xor
xchg
mov
lret
pop
sbbl
jp
pushaw
mov
pop
repnz
mov
cmpsl
shll
xor
pop
arpl
data16
ret
cmp
and
inc
je
pop
shll
out
movsl
lahf
lea
pushf
xlat
cmp
test
push
cmp
add
push
add
dec
jg
and
sbb
pop
pusha
jo
lret
xchg
xchg
adc
xor
gs
mov
xor
or
push
into
gs
dec
addb
pop
out
pop
rol
ds
jp
ficoms
sarl
add
mov
movsl
inc
push
enter
in
mov
push
stos
cmp
or
add
jmp
shr
mov
idiv
xor
rolb
ror
in
inc
mov
sbb
rorl
jg
xor
ret
push
movsb
cmp
mov
in
lea
xor
xor
sbb
stos
pop
sbb
xchg
les
dec
fisttpl
lea
outsl
dec
jge
nop
inc
dec
lea
inc
jno
pop
mov
mov
outsb
cmp
or
in
push
mov
icebp
das
xchg
scas
andb
pop
add
je
cwtl
xor
cs
xchg
jno
dec
jae
push
dec
inc
rcrb
gs
mov
daa
pop
xchg
jle
push
fiaddl
inc
mov
movsb
push
push
mov
or
xchg
adc
setb
pop
lock
xchg
pop
stc
idivb
jecxz
mov
adc
mov
add
adc
xlat
add
aam
arpl
rol
dec
rcl
ret
out
aas
repz
adc
mov
jne
loop
jmp
shlb
in
je
xor
xchg
add
mov
push
sbb
popf
add
sub
ds
inc
shr
cmpb
mov
iret
cmp
cltd
imul
mov
mov
adc
sbbb
xor
jnp
loope
add
int
xchg
in
adc
stos
pop
mov
jno
in
sbb
aam
adc
lahf
mov
xchg
out
icebp
jge
mov
jp
sar
dec
out
int3
lods
mov
js
dec
sti
push
lret
lret
dec
pop
rclb
es
cmp
orb
jne
call
mov
in
sub
loopne
sbb
sub
or
ljmp
test
dec
push
outsl
in
xor
je
pusha
ljmp
or
pop
jle
insb
jno
dec
lea
cmpsb
mov
jmp
cs
stos
mov
inc
mov
in
hlt
dec
mov
std
lret
jno
in
mov
mov
and
jbe
mov
movsb
sub
jbe
mov
adc
test
test
arpl
aad
pop
sarl
aas
cmc
sar
stos
jmp
or
jecxz
idiv
shll
inc
mov
aas
insb
lods
sarb
and
sbb
pushf
xor
pop
add
cmp
fsts
lcall
lahf
imul
insb
fldenv
pop
aam
xlat
xchg
loopne
daa
jmp
add
lahf
cmp
cmp
ret
mov
cmc
pop
jmp
movl
mov
and
jae
ss
pusha
xor
fs
fcoms
pushl
dec
sub
ja
cmp
mov
shll
leave
pop
fldl
jmp
jge
push
hlt
mov
cli
sbb
into
mov
inc
or
mov
cmp
pop
lods
cmpsl
adcb
sarb
ss
repz
jnp
aaa
dec
shll
loope
push
fnstenv
out
add
fs
cmp
leave
pop
test
movsb
out
push
mov
xchg
loope,pn
fadds
mov
mov
movsl
push
call
jle
aas
out
cmp
test
cwtl
out
dec
jecxz
sbb
in
orb
xchg
in
mov
fdivs
dec
mov
call
mov
mov
jns
ret
pop
call
movsb
mov
loop
pop
pop
push
popf
sarl
out
cmp
or
push
lods
sub
pop
enter
adcl
sbb
pop
cmpsb
mov
hlt
daa
in
sbb
repz
movsl
pop
push
mov
orl
addr16
xor
jne
fldenv
enter
test
nop
push
test
dec
aam
xchg
pop
lret
sub
insb
inc
mov
adc
push
lret
sbbb
cmpsl
mov
or
out
loop
out
xor
aam
xlat
cmp
test
jmp
or
ja
xor
dec
xor
adc
or
lcall
xor
aaa
negb
pop
mov
pop
ds
mov
leave
mull
pushf
sbb
in
push
jle
mov
cli
jnp
les
adc
sbb
imul
inc
dec
inc
jle
sahf
inc
and
mov
xor
dec
out
test
aas
inc
mov
sqrtps
cmp
pop
repz
pop
aaa
cld
pop
insb
daa
std
dec
push
inc
fisubs
notl
out
gs
mov
fiaddl
pop
ret
cmp
xchg
loop
pop
jecxz
pop
mov
jecxz
jno
pop
add
inc
xchg
push
fistl
imull
push
mov
mov
jp
cmpsb
mov
mov
aam
adc
leave
int3
pop
fbld
add
outsb
pop
test
icebp
push
jno
xorl
insb
mov
cmp
enter
lcall
and
pop
dec
lgdtl
negb
jmp
or
xchg
xchg
jne
or
pop
cmpsl
xchg
pop
clc
xor
loope
pop
fiadds
push
jns
pop
inc
stos
outsl
push
xor
test
pop
xor
lds
dec
mov
imul
mov
pop
sahf
scas
lds
cld
or
push
or
test
xchg
mov
pushf
or
pop
loope
mov
shll
movsl
adc
cmpsb
pusha
jecxz
dec
shl
rcll
push
or
fcoms
push
es
sbbb
mov
clc
fcoml
xchg
pop
les
repnz
ret
push
in
and
addb
sbb
popf
ljmp
icebp
pop
ret
leave
outsb
mov
jmp
jb
mov
fisttps
cmpsb
adc
test
jo
mov
push
shll
cltd
jge
xor
mov
pop
scas
jecxz
dec
rol
add
fisubl
out
and
mov
or
mov
hlt
adc
mov
pop
stc
pop
ror
fs
adc
ja
popf
push
sbb
js
insb
repz
shrb
jmp
mov
and
rcl
xchg
mov
aad
ret
mov
push
lret
scas
jo
fs
popf
xor
cmpl
mov
das
mov
mov
dec
stc
mov
pop
cmp
pop
mov
mov
sysexit
subb
xchg
out
pop
sahf
xchg
sub
push
push
cli
lods
aam
into
mov
adc
mov
stc
add
fidivrl
inc
int
nop
add
enter
in
gs
shll
jnp
shl
test
mov
mov
rorl
mov
ret
jb
push
pushf
jg
jge
cmp
xchg
sub
cmc
push
pop
jo
push
ss
ret
pop
jne
lea
inc
xchg
mov
nop
xchg
pop
xor
subb
leave
adc
ficoms
sbb
xor
and
jg
sub
movsl
mov
pop
adc
in
push
in
in
das
push
mov
fisubrl
jl
fdivrl
hlt
mov
jmp
movsl
xlat
mov
mov
hlt
imul
adc
jl
xchg
ret
repz
xchg
xor
sbb
pop
jge
in
jne
inc
lock
loop
aas
cmpb
inc
push
inc
push
dec
popf
sbbb
jno
cmp
lcall
outsl
mov
addr16
pop
mov
xorl
arpl
pop
cmp
mov
insl
push
push
out
mov
adc
pusha
sub
inc
popa
fadds
inc
and
pop
push
dec
inc
into
dec
pop
xchg
cs
pop
sub
push
mov
adc
push
dec
sti
sub
popl
cwtl
outsb
js
cmp
pop
inc
pop
push
and
into
xor
xchg
pop
addl
lods
push
pop
test
or
inc
xchg
xor
idivb
mov
loop
loop
outsb
mov
mov
aas
cmpsl
push
mov
mov
adc
movsl
jb
test
mov
out
imul
lret
mov
roll
sub
cmp
xor
outsl
cwtl
nop
jb
call
scas
inc
adc
pusha
sti
cwtl
das
sub
dec
fcoml
outsb
add
insl
dec
lds
cmp
out
aas
rclb
outsb
mov
xor
movsb
adc
cltd
xor
jb
shrl
fldenv
fcomps
adc
dec
mov
inc
fists
int
loop
jno
popa
clc
mov
loopne
inc
in
mov
icebp
shrl
es
or
hlt
movsb
pop
fyl2xp1
push
mov
or
pop
cmc
inc
sub
or
dec
inc
into
pop
add
and
push
stc
repz
ljmp
push
jae
jecxz
shrb
add
mov
pusha
lock
xor
movsl
in
jge
pushl
mov
or
inc
mov
xchg
xchg
cmc
nop
push
scas
and
loop
cmp
ljmp
jbe
mov
jns
and
negb
xchg
or
mov
sbb
dec
xchg
negl
les
aas
or
mov
xchg
sub
stos
adcl
cltd
scas
jae
ret
fcoml
jge
push
sar
sbb
sti
icebp
mov
mov
jae
scas
dec
push
into
jl
pop
inc
lret
mov
cmp
addr16
orl
xor
pop
fadds
dec
jae
xor
fwait
jns
out
insl
pushf
lret
pop
adc
sbb
ss
stc
cs
stc
int3
cmp
pop
out
test
add
sarb
ljmp
es
xchg
mov
jns
lahf
mov
outsl
mov
push
mov
mov
cmpsb
test
in
adcb
pop
fwait
xchg
push
sub
adc
lahf
sbb
and
and
inc
add
and
mov
adc
xadd
or
fbstp
and
xor
loop
push
mov
loopne
imul
fsubs
insl
xor
mov
push
mov
rorl
adc
cmp
std
fidivs
ret
out
lahf
xchg
es
jle
imul
sahf
pop
imul
adc
or
xchg
adc
insl
arpl
aaa
cmp
mov
sub
pop
ss
mov
imull
fmul
dec
add
jg
inc
mov
arpl
aaa
jae
enter
push
stos
push
inc
ret
aaa
iret
sbb
push
inc
xlat
add
in
std
sub
add
mov
movsl
popa
mov
and
push
dec
push
ret
cmp
pop
test
dec
das
pop
pop
pushf
pop
xorb
pop
data16
stos
mov
test
decb
bound
pop
mov
adcb
pop
sahf
jecxz
fbstp
add
mov
dec
push
inc
fildl
test
stc
fnstcw
adcb
adc
inc
dec
sahf
xor
xchg
mov
xchg
sub
repz
or
js
shrb
cltd
push
lods
lret
xchg
jmp
lret
sbb
xor
push
jmp
xchg
dec
loop
loop
and
sub
lods
inc
push
mov
popa
mov
fsubr
jg
hlt
ret
pop
xor
popf
popa
inc
loope
jns
and
mov
call
add
daa
pusha
negl
cmp
jno
jle
imul
dec
cmp
jl
enter
push
jmp
mov
and
ret
cmp
xlat
insl
in
cwtl
adc
ss
mov
mov
cmp
test
sbb
dec
dec
or
jp
jp
pop
mov
jo
cltd
push
dec
out
clc
mov
jbe
dec
adc
fs
insb
xchg
sub
xorl
sbb
lret
cmp
and
jne
les
ret
hlt
pop
adc
xchg
sub
mov
icebp
pop
outsl
push
mov
adc
fldt
subb
dec
movsb
sub
or
jnp
daa
jne
or
enter
xchg
push
cmpsl
xchg
lahf
dec
rclb
iret
out
mov
testl
cmc
mov
je
fcomi
sub
push
test
mov
or
jae
xchg
sub
mov
mov
mov
pop
jecxz
mov
jno
or
js
push
scas
test
xlat
mov
data16
mov
sub
enter
push
repnz
pusha
stos
xchg
sub
insb
pop
popa
lret
bound
lret
sarl
jns
mov
push
cld
scas
es
stc
push
mov
xorl
aaa
jns
out
lahf
dec
push
dec
mov
jno
outsl
adc
sahf
and
mov
pop
fstps
inc
incl
mov
xchg
imul
ljmp
outsl
pop
pop
fnstsw
fisubrs
push
cmp
push
int
jae
jp
fidivrl
loope
mov
inc
sbb
ss
pop
std
jecxz
sbb
pop
aas
mov
dec
movsb
jecxz
mov
xchg
negl
cmp
mov
popa
lea
pop
xor
scas
das
sbb
dec
int
mov
nop
pop
clc
movb
lods
and
in
push
test
je
xlat
mov
jb
ret
adc
es
fisubs
mov
nop
je
pop
jno
pushf
movl
sahf
lret
dec
mov
lea
pop
std
cli
sub
lahf
shr
pop
outsl
inc
insb
ljmp
scas
outsl
nop
fnstsw
pop
sub
and
loopne
push
mov
or
pop
cmp
lcall
xchg
xorl
mov
mov
nop
pop
arpl
insb
sub
in
imul
pop
inc
push
adc
mov
xlat
mov
rorl
xchg
cmp
jp
and
lds
int
jge
pop
shll
imul
mov
shl
cmp
movsl
daa
int3
movb
push
jmp
sbb
add
dec
int3
and
push
mov
xor
xor
stos
rclb
in
xchg
push
test
mov
sub
adc
sbb
cmpb
lea
mov
and
mov
adcb
addr16
ret
add
and
xchg
and
jge
push
lea
dec
add
cmp
cmpsl
ds
aad
mov
cmp
dec
scas
outsl
xor
pusha
inc
repz
or
jnp
sub
pop
xchg
pop
das
movsb
cmp
dec
testb
aad
add
popf
mov
popf
bound
cltd
xor
std
xchg
and
sbb
mov
mov
sub
insb
add
dec
push
cmp
jmp
lret
dec
mov
jnp
sbb
sti
lea
jbe
xchg
mov
cwtl
das
lods
ret
mov
xchg
sub
pop
or
dec
shll
xor
scas
jns
push
stos
shrb
lds
fstp
jno
and
loopne
js
sub
ss
insl
adc
sbb
mov
and
push
lahf
test
pop
testl
out
addl
add
lods
mov
push
arpl
xor
jecxz
lods
jae,pn
xorl
insb
test
add
xlat
jg
jb
orb
sub
cltd
jae
dec
pop
xlat
jg
xchg
mulb
out
in
cmpl
out
fst
jg
repnz
add
sub
pop
xlat
outsb
nop
mov
in
je
pushl
outsb
add
mov
mov
ret
mov
inc
stc
pusha
insb
xor
repnz
pusha
out
inc
fldl
and
mov
pusha
fldl
mov
pop
out
inc
jecxz
nop
add
ja
ret
xor
mov
adc
enter
out
jbe
pusha
fwait
inc
cs
imul
sub
ds
adc
inc
or
inc
orb
jg
sub
aam
dec
cmp
inc
popf
loopne
rcll
mov
xchg
pop
daa
lods
les
lret
pop
add
std
aad
xchg
aas
pop
mov
scas
pop
nop
cmp
pusha
je
mov
mov
sbb
jbe
jge
xchg
cmp
pop
pop
nop
cmp
mov
inc
xchg
cmc
pop
sub
mov
call
std
adc
ljmp
mov
les
orl
inc
aam
xchg
add
test
xchg
cmp
cmp
xchg
out
pop
mov
stos
mov
pop
ljmp
lea
rclb
sarb
xchg
jo
mov
sub
insb
movsb
leave
xchg
fidivrl
call
insl
ret
push
std
xor
lock
or
jae
mov
mov
dec
adc
out
jl
mov
mov
xchg
cmp
sub
test
mov
sub
add
pusha
in
pop
pop
hlt
pop
ja
orb
add
cmpsl
add
sbb
adc
lock
sbb
pushf
ja
or
xchg
dec
sbb
cmp
mov
daa
xchg
inc
cmc
inc
sbb
sbb
enter
xor
mov
mov
test
sbb
xchg
jnp
push
and
mov
mov
rclb
movsb
mov
sub
mov
nop
fs
push
ljmp
jne
sar
incl
adc
stc
dec
jno
push
pop
mov
mov
fstl
shlb
push
cwtl
aas
sbb
dec
adc
orb
dec
adc
adc
notb
xor
lds
imul
jg
ljmp
inc
or
jbe
adc
call
pop
mov
fwait
repz
add
shll
sub
divl
les
out
paddq
push
jle
lods
xor
aas
rcrb
cs
les
mov
lods
jmp
jle
lahf
out
scas
xor
into
arpl
pop
add
xor
pop
int3
negb
in
out
adc
ja
das
inc
mov
fsubl
mov
rcll
inc
xchg
cmp
inc
cs
fs
mov
jb
mov
lods
fildll
add
adc
lds
cmpsb
aad
scas
sub
lods
movsb
scas
dec
push
and
xor
sbbl
jl
fildl
or
mov
push
mov
ja
add
mov
fistpl
stc
xor
jmp
gs
shrb
sbb
into
xchg
mov
push
stc
pop
test
dec
ss
in
and
xor
in
dec
add
in
out
daa
hlt
dec
adc
xor
arpl
mov
jg
mov
push
rorb
imul
aas
mov
loope
mov
aam
test
mov
into
fucom
insb
push
sbb
pop
inc
test
outsl
lret
xchg
aam
out
sbb
aad
push
add
or
lods
sti
out
outsb
mov
sbb
aas
mov
push
je
mov
aad
jmp
push
outsb
and
sub
jge
int3
mov
mov
and
add
push
add
pop
jecxz
sub
and
jns
fs
and
dec
call
repz
jle
lret
mov
pop
std
jb
sbb
pop
arpl
enter
popf
adc
xor
fsin
sub
or
in
jge
icebp
sbb
fildll
dec
jmp
mov
mov
jl
lret
xchg
pop
jge
and
push
adc
and
aas
jns
in
and
mov
clc
fdivrl
hlt
mov
jb
pop
stc
inc
push
scas
out
cltd
mov
pop
xor
sub
or
push
mov
dec
outsb
daa
mov
xchg
repz
loopne
inc
xchg
inc
mulb
and
xor
sub
mov
scas
or
imul
sub
dec
or
jns
lods
jle
lods
daa
inc
sbb
jle
icebp
cmp
xchg
inc
jmp
cmc
push
add
fbstp
add
xchg
fidivrl
and
pop
mov
mov
cmp
fdivrl
push
cmp
inc
pushf
pop
sub
sbb
stc
icebp
mov
jns
fidivrl
sahf
dec
rorl
xchg
fnstcw
sub
mov
mov
repz
pop
cmp
mov
pop
sub
sbb
div
mov
jns
fdivrs
popf
dec
rorb
xchg
fdivrs
sub
sbb
cmpl
push
push
clc
adc
ljmp
test
sbb
fimull
mov
out
bound
push
movb
inc
into
cltd
cmp
xchg
iret
push
mov
ss
dec
jns
mov
test
mov
dec
sahf
test
mov
icebp
add
adc
sbb
dec
lock
sub
or
pop
fstpt
xor
ret
nop
hlt
mov
mov
cltd
jge
xchg
pop
lds
enter
dec
fs
aas
fildl
mov
mov
aaa
std
test
xchg
or
cmp
iret
clc
pop
cmp
mov
sbb
sarl
fidivrl
pop
lds
je
or
mov
sub
sub
cmc
add
cwtl
in
jle
mov
sbb
pop
sti
dec
or
aam
mov
addr16
popf
cmp
jp
sbb
and
clc
dec
xor
sahf
push
cwtl
xchg
aas
sahf
push
cmc
mov
adc
mov
fcompl
aas
cmpsb
jbe
iret
xchg
pop
rorl
and
stos
xor
sbb
jb
adc
pop
lret
sub
cmp
rcrl
ret
mov
lods
das
mov
or
addr16
mov
insb
fdivrl
jg
cld
push
lods
inc
or
pop
jmp
mov
andb
imul
cmp
das
xchg
cmp
ret
mov
subb
mov
stos
faddl
sub
xchg
inc
out
cmp
ja
push
pop
xor
iret
pusha
les
adc
xchg
aas
mov
cmpsb
jne
mov
pop
stc
jmp
repz
or
inc
adc
xor
xchg
inc
sub
xchg
aas
insb
cli
pusha
hlt
stc
jb
cmp
in
daa
or
in
test
dec
or
push
insb
inc
or
fildll
inc
push
jnp
push
clc
cmc
ja
mov
lods
mov
pop
cltd
dec
cs
shlb
aam
fidivrs
data16
pop
pop
cli
adcb
inc
cwtl
fisubs
mov
enter
fistl
loop
fidivs
cmp
aam
inc
sahf
xchg
cmp
aas
flds
sbb
push
xchg
add
mov
stos
xor
sarb
or
pop
sub
adc
sarl
inc
xchg
cmp
mov
push
cmpsl
jle
popf
xchg
mov
dec
rol
adc
pop
test
cmpsb
inc
inc
mov
push
pushf
jnp
and
aas
xor
icebp
ret
pop
pop
cli
add
jl
pop
cmpsl
xor
mov
mov
pop
test
std
pop
and
cmp
or
jecxz
or
idiv
sti
pop
popa
lock
jns
int3
mov
inc
adc
lods
push
add
outsb
cli
mov
mov
movsb
adc
outsl
in
mov
mov
mov
lock
stc
jnp
pmuludq
popf
cmp
push
and
add
mov
and
add
push
push
cld
sbb
outsl
test
ret
mov
movsb
loope
std
jecxz
add
orb
xchg
cmp
nop
cmp
cld
popaw
inc
int
xchg
scas
xor
push
mov
jno
fldl
push
pop
push
sti
cmp
sub
outsb
data16
mov
jg
pop
out
or
sarl
pop
mov
cwtl
jae
faddl
out
and
cmpsb
push
cli
lea
mov
clc
jmp
inc
push
icebp
clc
movsl
xor
jmp
loop
xchg
mov
es
xchg
inc
jge
cs
fwait
gs
add
xchg
mov
mov
sarl
xor
stos
cmpsb
dec
or
sar
out
outsb
xchg
out
inc
fs
inc
push
inc
jle
mov
mov
loope
adc
dec
sbb
sub
fs
mov
mov
cmp
pop
lods
xor
icebp
sbb
test
aaa
movsb
arpl
aas
fwait
inc
jns
xorb
push
rcl
adc
addr16
fs
dec
int
dec
jns
lcall
imul
lcall
cmp
lods
sub
mov
or
nop
or
sub
clc
mov
pop
ljmp
sub
filds
pop
pop
loop
mov
mov
js
add
sub
stc
pop
pop
sti
movsb
loope
pushf
or
push
data16
fnstsw
jb
repnz
fs
jecxz
add
dec
adc
rep
dec
ljmp
inc
inc
adc
test
into
mov
mov
test
fdivrs
add
push
fcmovu
jl
nop
cmp
and
hlt
popa
push
cmp
fsubl
mov
lds
cltd
dec
jecxz
loopne
out
or
fdivr
pop
add
pushf
inc
add
push
sub
cmpsb
shl
insl
inc
mov
sbb
cwtl
inc
or
mov
es
clc
arpl
mov
mov
loopne
movb
adc
jbe
dec
push
dec
adc
ret
filds
lret
lods
xor
push
lret
xchg
xchg
sti
movsb
sub
into
aaa
xchg
mov
mov
js
out
push
dec
push
imul
xchg
scas
lods
pop
xlat
test
fwait
cmp
jg
xchg
orb
dec
mov
bound
mov
inc
adc
xchg
inc
adc
mov
aam
mov
dec
or
push
push
outsb
pop
xchg
sti
jno
mov
push
push
xchg
xchg
adcb
sub
add
fnstcw
pop
pop
decb
fidivrs
xchg
sub
cmp
pop
push
nop
ret
rol
fiadds
repnz
mov
xchg
inc
lods
push
cld
jmp
or
adc
out
inc
sub
call
cld
orb
orb
in
cld
test
dec
jmp
out
loope
fmull
movsb
xor
cwtl
adcb
sbb
ret
int
xor
pop
popa
je
mov
ffreep
jb
jo
pop
jne
stos
jae
sub
mov
rol
adc
lock
clc
xor
outsw
jmp
mov
adc
push
stc
dec
inc
popa
ljmp
cmp
jne
jne
xchg
or
inc
sbb
lea
pushf
outsb
xlat
cli
pop
xchg
jbe
insl
inc
into
xchg
inc
scas
fwait
int3
mov
cmpsl
ss
dec
popa
clc
jge
push
in
dec
sahf
inc
or
inc
or
out
jb
mov
mov
inc
mov
movsb
pop
test
push
sbb
loopne
pusha
testl
jle
lret
push
imul
sbb
out
mov
push
fcmovbe
scas
xor
bswap
xchg
mov
jbe
filds
push
sahf
add
sub
cmp
jmp
pushl
mov
sbb
aam
scas
das
sahf
add
cld
lret
sti
in
into
lea
jg
mov
mov
hlt
outsb
xchg
dec
or
mov
aam
test
push
in
nop
mov
scas
sub
fidivrl
jg
sbb
push
out
test
stc
stc
pop
rol
mov
push
add
fidivrl
daa
mov
mov
fldl
sub
pop
push
cs
sub
fldt
inc
or
or
ficoml
js
in
xor
lock
stos
cmc
in
cld
dec
out
outsl
sub
cmp
sbb
pop
loope
in
push
or
push
or
mov
adc
lcall
aam
sub
jle
push
aam
push
sub
daa
cmpsl
sub
sub
push
scas
add
rorb
dec
or
arpl
mov
push
and
add
add
sub
insb
pop
stos
inc
mov
fisttps
filds
es
testb
iret
xchg
add
int3
push
push
or
negb
hlt
loope
sbbb
rolb
xor
out
xchg
sub
push
fcmovnu
iret
mov
add
push
or
adc
push
adc
mov
mov
mov
std
shrl
cwtl
mov
inc
and
xchg
xchg
dec
adc
mov
outsb
repz
pop
jmp
in
push
int
popa
add
mov
dec
hlt
scas
dec
push
jmp
mov
sub
loop
addr16
loop
mov
sbb
add
pop
in
es
cmpsb
or
sub
cli
xor
ret
popl
sub
cltd
sub
sbb
cli
mov
movsb
les
pusha
inc
gs
jg
ja
jg
sub
jge
lds
out
push
sub
arpl
fisubl
push
in
push
push
mov
cmp
or
shlb
data16
jle
adc
scas
mov
xchg
add
das
mov
popf
ret
xchg
in
dec
and
sbb
mov
push
push
cmpsb
push
add
test
mov
mov
arpl
jmp
jmp
repz
xor
and
hlt
imul
cltd
jne
loope
and
int3
in
cmp
sbb
dec
arpl
dec
inc
or
movsl
sbb
mov
cltd
andb
cmpsl
xchg
or
scas
fdivs
repnz
insb
sub
push
sub
pop
ds
lds
hlt
or
repz
cs
pop
inc
or
cs
xor
rorb
lods
in
mov
test
inc
or
aam
push
mov
scas
sarb
sbb
cmp
data16
jmp
repnz
add
lret
adc
test
dec
sub
pusha
jne
fdivrs
jo
pop
andl
test
std
pop
lock
rcll
lods
lds
mov
mov
sbb
or
push
jp
xlat
adcl
dec
or
mov
push
add
mov
stc
pop
cwtl
out
cmpsl
pop
es
xchg
pop
out
cwtl
pop
notl
repnz
mov
pop
out
xchg
or
stos
cmp
sub
add
mov
push
push
mov
push
imul
xchg
mov
inc
push
rolb
aam
pop
cmp
and
xor
adc
xor
cmp
add
sbb
outsl
and
cld
dec
cmp
jae
xchg
sbb
rcr
repnz
les
aas
push
std
pop
jo
mov
add
out
sbb
sub
clc
mov
and
xchg
cwtl
mov
push
jnp
lcall
out
pop
jbe
lds
cmovns
sub
pop
mov
jg
xchg
push
rcrl
push
into
sub
xor
jae
xlat
sub
xchg
pushf
push
mov
mov
mov
lahf
vpcmpeqw
mov
movsl
in
test
sti
js
sub
or
stos
xor
scas
nop
aaa
mov
pop
add
adc
mov
lret
xchg
ds
push
sub
hlt
pop
pusha
call
sbb
lcall
daa
mov
xor
sub
insb
adc
popf
cmc
inc
arpl
into
call
mov
mov
shll
test
sarb
inc
mov
das
repz
mov
loope
fs
pop
adc
inc
mov
scas
cmp
out
data16
stos
sti
psrld
rclb
sub
cmc
dec
aas
or
popf
sahf
inc
or
lret
adc
xlat
and
dec
adc
mov
outsb
icebp
mov
cli
andb
rcrb
cmp
mov
sub
out
arpl
mov
sti
out
add
sbb
mov
xchg
popf
loopne
out
leave
ss
jae
leave
mov
lods
xor
ret
mov
push
push
std
lret
ja
push
or
mov
stos
scas
fdivrl
inc
jg
ret
addr16
push
push
ror
test
mov
lods
inc
inc
scas
rcrl
lret
add
xor
mov
mov
les
mov
sbb
push
mov
mov
orb
cwtl
pop
mov
jno
sbb
stc
push
and
test
cmp
rolb
fcmovu
jge
es
cwtl
jne
mov
les
lahf
imul
sub
xor
pop
rorl
jle
xorl
mov
cmpsl
adc
xlat
sar
nop
add
push
cmp
int3
add
sbb
test
cs
dec
push
lahf
sbb
jg
lret
bswap
pop
daa
fistpll
inc
jge
inc
test
pushf
ljmp
cmp
sub
imul
mulb
push
aaa
cmpsb
sub
movsb
xor
rol
xchg
mov
pop
xor
adcb
add
pusha
enter
jg
loopne
sbb
shlb
out
out
pop
mov
lods
xor
leave
fs
enter
mov
mov
adc
or
gs
adc
nop
jae
leave
and
ret
sbb
mov
sbb
das
loop
inc
cmovp
and
fwait
jmp
testb
mov
cwtl
in
pop
shll
xchg
mov
dec
in
push
cmp
fidivl
or
lret
xchg
fstps
push
std
or
stos
inc
pop
xor
push
mov
ljmp
cltd
adc
in
adc
mov
cmp
repnz
std
pop
mov
stc
pop
jne
pop
xor
jge
and
inc
pusha
repnz
es
push
fnsave
dec
pop
neg
xor
adc
outsb
add
xchg
fldl
stos
sbb
xor
mov
jl
add
pop
mov
in
pop
aad
fildl
mov
or
popf
add
insb
in
xchg
dec
jmp
and
jle
add
lds
enter
sbb
hlt
dec
out
and
ret
pop
cmp
cmpsl
rcrb
int
out
lcall
mov
je
lcall
int3
mov
inc
dec
or
fpatan
dec
pop
out
scas
sub
ljmp
rorl
xor
aam
bound
jne
xor
into
mulb
adc
fdivrs
es
or
jae
dec
jecxz
inc
fsubrs
dec
mov
mov
ss
mov
fisttpll
rorb
in
sbb
popl
mov
fnsave
insl
inc
cmp
and
xchg
scas
xor
rolb
int
sarb
fsubp
push
or
sbb
xorb
or
mov
and
sbb
sbb
call
jmp
mov
mov
shr
insb
ret
adc
mov
pop
jne
sbb
daa
je
sub
cmp
or
insl
add
jg
sub
mov
xor
xchg
fsincos
pusha
dec
enter
lahf
cmp
ljmp
ret
adc
inc
test
sub
and
enter
xor
jns
outsb
xlat
cmpl
cld
push
mov
movsl
lahf
aaa
cmp
cld
sub
mov
icebp
scas
inc
cltd
aas
add
push
or
xor
in
sub
in
hlt
cmp
sbb
and
imul
fcmovu
test
jb
dec
gs
daa
test
adc
ljmpw
mov
imulb
mov
lods
xor
mov
sbb
sbb
je
pop
add
gs
lahf
and
mov
mov
xchg
cmp
movsl
mov
repnz
icebp
push
jno
pop
stc
loope
scas
imul
mull
popf
movsb
xor
test
in
imul
cwtl
cmp
pop
aaa
movsb
rcrb
mov
mov
xchg
inc
xor
das
adcb
leave
mov
out
adc
pop
sbb
jno
loope
and
out
mov
movsb
outsl
jmp
arpl
int3
mov
jle
and
cmp
xchg
inc
scas
ss
xchg
mov
dec
dec
sub
nop
loope
or
add
sbb
movsl
lds
adc
aad
adc
dec
mov
lods
sbb
loope
imul
xchg
adc
into
out
outsl
push
jnp
cmpsb
mov
stos
fadds
loopne
pop
ret
insb
hlt
cmpsl
sub
orb
adc
fs
inc
inc
pop
cld
cwtl
inc
xor
dec
adc
mov
test
movsl
mov
mov
lret
pop
std
pop
jmp
aam
scas
dec
lahf
cmp
mov
int
cmp
ljmp
pop
adc
or
push
mov
fsubrs
sub
pop
fldcw
pop
xchg
xlat
out
jne
js
sub
fildll
push
jmp
out
pusha
test
or
or
orl
inc
xchg
cmp
les
test
into
xchg
call
std
mov
jp
imul
inc
or
dec
int
adc
xor
ret
pop
mov
pop
lods
add
cld
fadds
test
iret
aas
fwait
add
out
lahf
pusha
aaa
mov
cmp
pop
cli
xor
or
movsb
mov
lds
in
subb
pop
sahf
sub
and
inc
dec
outsl
lock
xchg
ds
je
jnp
inc
adc
std
pop
fdivrl
jno
outsl
jge
jbe
nop
fwait
inc
add
sub
mov
fwait
cmp
loopne
sbb
sub
mov
lods
cmc
arpl
lods
fdivl
in
mov
xchg
rolb
aas
roll
mov
inc
mov
leave
cmp
pop
push
shlb
cmp
repz
push
hlt
pop
dec
sahf
test
lcall
mov
scas
xor
imul
sub
mov
mov
mov
orl
js
mov
movsl
sub
stos
out
pop
adc
jno
mov
dec
push
xchg
fwait
js
mov
gs
mov
lods
rorb
rol
xchg
aad
cmp
sub
test
icebp
pop
cmp
in
mov
pop
xlat
stc
pop
testl
popa
lock
pop
sub
cmc
mov
leave
mov
xchg
inc
sbb
adc
js
adc
mov
xor
cli
stos
leave
xchg
jecxz
inc
sbb
movl
pop
clc
out
shll
mov
stc
gs
xor
mov
daa
or
sahf
adc
xorb
ret
outsb
pop
stc
cmp
and
pop
icebp
in
xor
andb
mov
dec
adc
fisubrl
jmp
fldl
popf
cs
sub
ja
xchg
les
cltd
pop
lret
push
adc
idivb
push
add
fimuls
pop
jno
pop
jno
mov
mov
bswap
xchg
icebp
pop
orl
push
popf
mov
jmp
hlt
movsb
adc
push
in
fidivrl
mov
pop
lret
int3
xor
aaa
and
bound
test
iret
mov
mov
cmc
popa
gs
gs
stos
test
pop
fcmove
pop
mov
mov
sub
fs
lds
inc
xchg
sbb
push
mov
cmc
pop
pop
mov
flds
test
shlb
cmc
insb
jmp
pusha
adc
pop
test
rolb
xchg
call
loopne
xor
sub
xchg
ja
je
leave
jmp
xchg
pushf
push
pusha
ljmp
adcl
xchg
inc
insb
mov
scas
push
ja
xor
mov
insl
add
xchg
inc
mov
stos
cs
movsl
das
clc
js
lea
out
je
dec
roll
int
ljmp
push
push
cmp
and
jno
mov
pop
mov
aas
xchg
sub
lods
xor
bound
test
push
cmpsb
jg,pn
xor
xlat
adc
pusha
jbe
lea
gs
adc
mov
jne
out
test
cmp
jge
xchg
jbe
push
add
outsl
add
adc
out
xor
ja
xchg
shrb
movzbl
xor
push
add
repz
mov
insl
jecxz
in
push
incl
repz
iret
jg
adc
cmp
icebp
mov
and
ret
pop
call
cli
in
test
mov
insl
div
sbb
rcl
loop
jne
add
add
aas
mov
inc
lods
jecxz
jge
mov
lcall
push
cli
jmp
decb
shll
xchg
cmp
inc
pop
add
add
orb
mov
int3
push
jg
mov
jg
mov
xchg
jns
and
inc
xor
fsts
test
push
fistpll
ja
lock
xchg
inc
mov
mov
mov
lds
xchg
sbbl
push
dec
sbb
xchg
outsb
ljmp
jp
xchg
adc
mov
pop
sbb
nop
daa
js
push
jmp
mov
lods
leave
nop
outsb
xchg
adc
xchg
jg
mov
mov
sti
xchg
mov
scas
ss
and
jnp
hlt
pop
sahf
push
dec
test
jne
test
jne
outsb
fiaddl
mov
in
setbe
stos
iret
mov
sbb
mov
data16
push
jle
loope
push
ret
xchg
dec
popa
lds
ret
mov
scas
mov
lods
jo
pop
mov
jle
mov
xchg
cmpsl
sbb
hlt
xor
pop
sbb
lret
inc
add
sar
lods
sub
or
icebp
pusha
cld
fcoms
sahf
in
lret
mov
js
int3
scas
sub
sub
xor
push
add
das
or
dec
inc
mov
shll
loopne
xor
lock
mov
addl
fidivrl
lret
mov
testl
inc
icebp
jnp
cld
cwtl
orl
sub
lahf
add
rcrb
les
cltd
inc
in
js
xchg
repnz
cmpsl
dec
xor
add
mov
leave
sub
adcb
rdpmc
sbbl
frstor
jns
push
lret
fimull
mov
inc
fisubl
and
push
dec
sbb
xchg
fsubrs
outsl
test
mov
scas
sub
cmp
out
sbb
inc
dec
or
pop
mov
je
and
mov
je
cmp
mov
push
pop
cli
stos
fimull
insl
out
and
add
fwait
inc
sbb
cmpsl
sbb
ljmp
jno
sbbb
push
xor
addr16
popa
int
mov
xor
dec
dec
jbe
and
fwait
sti
pusha
cvtps2pi
adc
leave
xlat
jp
ret
mov
stos
pop
add
orl
es
outsl
jmp
cli
pop
xchg
jg
xchg
in
imul
lock
dec
test
push
mov
push
pop
sbb
sarb
mov
rorb
cltd
push
icebp
push
repnz
jmp
imul
rcrb
add
xchg
popl
int3
or
pop
movsl
negb
movswl
rcrb
xchg
sbb
lret
mov
test
mov
testl
pop
sbb
fiaddl
mov
xor
jl
mov
sub
in
lret
push
neg
jl
mov
sarb
in
scas
or
pop
gs
jmp
test
inc
adc
mov
bnd
push
add
jo
inc
cmp
jl
das
scas
lds
idivl
mov
jno
and
idivl
mov
test
mov
mov
dec
in
repz
data16
sti
gs
and
or
adcb
jg
inc
int
mul
sahf
xor
jp
int3
xchg
jge
push
sub
out
aas
push
test
jns
push
int3
loopne
mov
gs
mov
jg
hlt
clc
or
sbb
pop
cld
pop
jns
xchg
inc
or
push
mov
fs
shl
arpl
mov
mov
in
cmc
popa
mov
mov
scas
jge
push
mov
jmp
and
push
rcrb
mov
push
clc
cmp
sub
sbb
jp
push
das
mov
jnp
jmp
inc
mov
ret
lret
cmp
adc
add
iret
xchg
fs
lahf
inc
jbe
or
mov
je
fldt
enter
int3
sbb
into
xchg
xchg
mov
adc
cwtl
inc
mov
aad
loopne
cmc
lea
xchg
mov
mov
addr16
sub
pop
inc
or
dec
mov
sbb
mov
jmp
call
sub
sbb
ret
mov
mov
mov
out
dec
adc
rcl
fwait
lret
add
je
xchg
mov
insl
jl
int3
lds
ffreep
pop
test
dec
adc
dec
inc
push
pop
pushf
shrl
mov
out
xchg
adc
lcall
and
nop
mov
in
dec
loope
push
pop
cmc
aaa
add
xor
push
xchg
mov
movsl
cmp
mov
pop
das
push
insl
test
js
movsl
hlt
mov
mov
adc
sub
jl
cmp
jp
dec
in
fwait
pop
lock
out
insb
add
out
ja
and
and
xchg
sub
xchg
test
enter
jmp
shrl
cmp
out
xchg
add
mov
loope
ret
ds
xor
xchg
test
mov
jp
or
test
sub
mov
dec
mov
rcrl
aam
add
daa
repnz
std
xchg
push
jp
cmpsl
stos
js
mov
int3
cs
cmp
sti
push
dec
in
sbb
out
dec
jo
add
ret
mov
cmc
rcll
adc
dec
inc
imul
push
out
mov
add
ds
and
nop
mov
in
dec
loope
add
imul
mov
push
mov
movsl
cmp
std
mov
pop
das
push
insl
adcl
andb
aad
adc
sub
jnp
cmp
jp
dec
in
fwait
pop
lock
out
insb
add
out
ja
and
and
sub
xchg
test
xchg
mov
call
shrl
cmp
jnp
cmp
xchg
add
mov
loope
ret
ds
xor
xchg
test
mov
jp
or
test
sub
das
pop
sub
dec
mov
rcrl
aam
add
fbstp
repnz
std
xchg
push
jns
cmpsl
stos
js
mov
lret
cs
cmp
sti
sbb
pop
out
dec
outsl
imul
outsb
jbe
mov
rcll
adc
dec
inc
push
shrl
mov
out
xchg
push
add
ds
and
nop
mov
jecxz
dec
loope
add
cmc
xor
push
jl
mov
push
mov
movsl
cmp
cld
mov
pop
das
push
insl
adcb
andb
xchg
aad
adc
sub
jp
cmp
jp
dec
in
fwait
pop
lock
in
insb
add
out
ja
and
and
xchg
sub
xchg
test
xchg
mov
out
pop
sbb
shrl
cmp
jnp
cmp
xchg
add
mov
loope
ret
ds
xor
test
test
mov
jp
or
test
sub
cmp
mov
mov
rcrl
aam
add
fbstp
and
std
xchg
push
js
cmpsl
test
lret
sti
lret
sti
sbb
in
sbb
out
dec
outsb
imul
outsb
jbe
mov
rcll
adc
dec
inc
addr16
pop
cltd
shrl
mov
out
xchg
or
push
movsl
ds
and
nop
mov
loop
dec
loope
add
xor
imul
xchg
push
mov
movsl
cmp
sti
mov
pop
das
dec
insl
adcl
mov
mov
adc
sub
jns
cmp
jp
dec
in
fwait
pop
lock
in
insb
add
out
ja
and
and
xchg
sub
xchg
test
lds
pop
sbb
shrl
cmp
jnp
cmp
xchg
add
mov
loope
ret
ds
xor
test
test
mov
jp
or
test
sub
cmp
mov
scas
jle
pop
mov
aam
add
fbstp
and
mov
std
xchg
push
ja
cmpsl
test
sbb
cli
lret
sti
sbb
dec
sbb
out
dec
insl
imul
outsb
jbe
mov
rcll
adc
dec
inc
data16
pop
cwtl
shrl
mov
out
xchg
or
lcall
and
nop
mov
loope
dec
loope
add
xor
imul
xchg
push
mov
movsl
cmp
cli
mov
pop
das
dec
insl
adcb
andb
xchg
aad
adc
sub
js
cmp
jp
dec
in
fwait
pop
lock
jmp
add
aas
mov
jno
xchg
sub
xchg
test
les
pop
pop
call
in
imul
xchg
add
mov
loope
ret
ds
xor
sbbl
addr16
mov
jp
pop
fadds
das
pop
sub
dec
scas
jle
pop
mov
aam
add
fbstp
and
mov
std
xchg
push
jbe
cmpsl
cmpsl
js
mov
enter
lret
sti
sbb
dec
sbb
out
dec
insb
imul
outsb
jbe
mov
rcll
adc
dec
inc
gs
pop
xchg
shrl
mov
out
xchg
or
lcall
and
nop
scas
aas
loopne
dec
loope
add
xor
imul
test
push
mov
movsl
cmp
stc
mov
pop
das
dec
insl
jg
loope
andb
xchg
aad
adc
sub
ja
cmp
jp
dec
in
fwait
pop
lock
ljmp
and
mov
jo
xchg
sub
xchg
test
ret
xchg
mov
in
pop
push
call
in
push
out
xchg
add
mov
loope
ret
ds
xor
sbbb
addr16
mov
jp
push
fadds
das
pop
sub
dec
lods
jle
pop
mov
aam
add
fbstp
and
mov
xchg
push
jne
cmpsl
cmpsb
js
mov
cs
cmp
sti
sbb
dec
sbb
out
dec
imul
outsb
jbe
mov
rcll
adc
dec
inc
fs
pop
xchg
shrl
mov
jnp
mov
add
ds
and
nop
scas
aas
fbstp
pop
cmc
xor
imul
test
push
mov
movsl
cmp
clc
mov
pop
das
dec
insl
jle
loope
sbbb
xchg
aad
adc
sub
jbe
cmp
jp
dec
in
fwait
pop
lock
jmp
ja
and
xchg
sub
nop
test
ret
dec
jecxz
pop
adc
aaa
in
imul
add
mov
loope
ret
ds
xor
sbbl
sarl
add
daa
cwtl
das
pop
sub
dec
lods
jle
pop
mov
aam
call
fbstp
and
mov
std
xchg
push
je
test
ja
mov
das
test
dec
in
sbb
dec
push
add
mov
out
rclb
adc
pop
xchg
shrw
mov
jl
mov
add
cmp
movsl
cmp
pop
sub
lods
inc
xlat
fidivs
pop
cmc
xor
imul
adcl
mov
cmp
idivl
pop
das
dec
insl
jge
loope
sbbb
xchg
aad
adc
sub
jne
cmp
jp
dec
in
fwait
pop
lock
call
ja
and
and
xchg
sub
vprotw
adc
shrl
ss
push
mov
cltd
mov
mov
loope
ret
ds
xor
sbbb
addr16
mov
jp
add
test
es
das
pop
sub
dec
stos
jle
pop
mov
aam
rcr
jbe
and
mov
std
xchg
push
jae
test
ja
mov
lds
test
sar
pop
dec
in
sbb
dec
imul
mov
xchg
sub
pop
inc
inc
adc
pop
xchg
shrw
mov
jl
mov
add
cmp
movsl
cmp
pop
sub
lods
inc
xlat
fnsave
pop
cmc
das
add
xor
push
xchg
mov
movsl
cmp
idivb
pop
das
dec
insl
jl
loope
sbbb
xchg
aad
adc
sub
je
cmp
jp
dec
in
fwait
pop
lock
out
add
out
ja
and
mov
insl
inc
xchg
sub
mov
dec
loope
pop
adc
shrl
xor
out
xchg
add
mov
loope
ret
ds
xor
fs
repz
addr16
mov
jp
add
test
and
mov
dec
stos
jle
pop
mov
aam
std
rcr
jbe
pop
repz
std
xchg
push
jb
test
ja
mov
les
cmc
leave
cmp
cli
push
dec
in
sbb
dec
push
jbe
lahf
mov
xchg
sub
push
test
dec
inc
popa
pop
xchg
shrw
mov
jl
mov
add
cmp
movsl
cmp
pop
sub
stos
inc
xlat
fdivl
pop
cmc
add
xor
push
xchg
mov
movsl
cmp
cmc
mov
pop
das
dec
insl
jnp
loope
sbbb
aad
adc
sub
jae
cmp
jp
dec
in
fwait
pop
lock
out
add
out
ja
and
mov
insb
inc
xchg
sub
lea
dec
loopne
pop
adc
shrl
xor
jnp
cmp
xchg
add
mov
loope
ret
ds
xor
fs
repz
test
mov
jp
add
test
and
das
push
sub
dec
test
lret
cld
rcr
jbe
push
repz
std
xchg
push
jno
test
ja
mov
ret
das
hlt
leave
cmp
cli
adc
pop
out
dec
insb
add
mov
xchg
sub
or
mov
inc
pusha
pop
xchg
shrw
mov
jl
mov
add
aaa
or
movsl
cmp
pop
sub
pop
cmc
sub
dec
jl
adcb
mov
movsl
cmp
hlt
mov
pop
das
dec
insl
jp
loope
sbbb
xchg
aad
adc
sub
jb
cmp
jp
dec
in
fwait
pop
lock
in
add
out
ja
and
mov
imul
jae
test
mov
ffreep
pop
adc
shrl
xor
jnp
cmp
xchg
add
mov
loope
ret
ds
xor
fs
repz
test
mov
jp
add
test
and
cmp
mov
test
rcrl
aam
sti
rcr
jbe
sbb
std
xchg
push
jo
test
ja
mov
ret
repz
cmp
cli
adc
in
sbb
dec
data16
add
mov
xchg
sub
or
inc
adc
pop
xchg
shrw
mov
jl
mov
add
ss
movsl
cmp
pop
sub
vphadduwq
mov
loope
sti
pop
cmc
sub
imul
jg
xchg
mov
movsl
cmp
repz
pop
das
inc
insl
jns
loope
sbbb
xchg
aad
adc
sub
jno
cmp
jp
dec
in
fwait
pop
lock
in
add
out
ja
and
mov
push
xchg
sub
mov
dec
faddp
pop
adc
shrl
xor
jnp
cmp
xchg
add
mov
loope
ret
ds
xor
fs
rep
test
mov
jp
add
test
and
cmp
mov
cmpsl
jle
pop
mov
aam
cli
rcr
jbe
sbb
mov
std
xchg
push
outsl
adc
test
das
repnz
cmp
cli
adc
inc
sbb
dec
gs
add
mov
xchg
sub
or
dec
inc
pop
pop
nop
shrw
mov
jl
mov
add
xor
push
and
fnstenv
pop
cmc
sub
imul
jle
xchg
mov
movsl
cmp
repnz
pop
das
inc
insl
js
loope
sbbb
xchg
aad
adc
sub
xor
jo
cmp
jp
dec
in
fwait
pop
lock
jecxz
add
aaa
mov
imul
aas
mov
ffree
pop
psubsb
push
arpl
out
xchg
add
mov
loope
ret
ds
xor
fs
rep
test
mov
jp
call
test
and
cmp
dec
cmpsb
jge
pop
scas
aad
stc
rcr
jbe
sbb
mov
std
xchg
push
outsb
adc
cmpsl
shlb
icebp
enter
adc
inc
sbb
dec
fs
add
insb
jbe
sahf
mov
and
mov
stos
inc
cmp
mov
inc
pop
enter
shrl
mov
jge
mov
add
movsl
cmp
and
mov
dec
loope
stc
pop
imulb
add
xor
jge
jge
xchg
xchg
movsl
cmp
icebp
mov
pop
cs
xlat
outsb
ja
loope
sbbl
adc
daa
ds
outsl
dec
cmp
jns
dec
out
lcall
adc
ja
pop
mov
push
mov
dec
pop
push
out
push
bound
out
xchg
lcall
and
adc
aas
pop
xor
arpl
hlt
stos
test
mov
jnp
test
and
cmp
mov
pop
scas
insl
clc
iret
fbstp
sbb
mov
xchg
push
insl
adc
cmpsb
mov
cmp
clc
adc
inc
sbb
dec
arpl
xchg
imul
mov
and
mov
stos
inc
cmp
mov
inc
pop
leave
pusha
mov
xchg
scas
out
loope
out
xchg
add
popf
xor
push
movsl
cmp
test
lea
dec
loope
clc
pusha
imull
add
xor
adc
xchg
movsl
cmp
lock
pop
sub
dec
loope
adcb
xchg
shr
adc
sbb
sbb
leave
outsb
inc
cmp
js
push
out
cltd
pop
lock
add
push
xor
xchg
sub
mov
dec
fcmovne
pop
or
das
out
popa
cmp
xchg
add
mov
or
mov
adc
inc
xlat
pop
xor
bound
cmc
stos
andl
lret
jl
std
aad
sbb
pop
fwait
xor
mov
push
movsb
jnp
pop
lods
test
testb
insb
adc
popf
je
mov
mov
cmp
notl
push
call
dec
bound
xchg
push
or
out
xchg
sub
or
inc
pop
lret
arpl
push
loopne
out
xchg
add
sahf
xor
push
movsl
cmp
mov
mov
dec
loope
mull
sub
imul
jnp
xchg
test
cmp
out
mov
pop
sub
fnstenv
dec
loope
jg
testl
sbb
sbb
lret
cmp
ja
push
call
leave
loopne
push
adc
ja
sbb
ds
sub
xchg
dec
ret
fcmove
pusha
or
shrl
cs
pusha
cmp
xchg
add
movsb
mov
fisubrs
ret
inc
fcoms
dec
loopne
js
imulb
lret
cld
aam
sbb
push
pushf
xor
mov
push
mov
fsubrs
int
jbe
pop
testl
fwait
jae
mov
mov
cmp
testb
jmp
dec
pusha
jo
xchg
imul
in
xchg
sub
push
lods
inc
cmp
mov
inc
pop
lret
bound
lods
jmp
xchg
incl
sahf
xor
cmp
mov
mov
dec
loop
cmc
popa
clc
add
xor
push
jns
mov
test
cmpsb
cmp
pop
cli
les
inc
fnstenv
dec
loop
jg
testl
sbb
push
mov
cmp
lret
cmp
jbe
push
call
enter
adc
js
sbb
lea
cmp
stos
inc
mov
mov
ret
pusha
or
shrb
sub
jle
aaa
lock
add
movsl
mov
push
and
fcoms
dec
loope
jbe
mulb
enter
roll
xor
movsb
cmp
mov
pop
stos
ret
hlt
int3
loopne
adc
call
cltd
jb
mov
mov
cmp
cmc
or
jmp
inc
pop
jo
nop
push
mov
in
add
inc
ss
mov
inc
push
lret
bound
stos
jmp
mov
std
pop
sahf
or
cmpsl
cmp
mov
mov
dec
jecxz
repz
clc
and
push
xor
push
js
mov
test
cmpsb
cmp
push
stc
les
inc
fnstenv
dec
loop
jle
testl
pop
repnz
mov
cmp
lret
cmp
jne
push
call
psubsw
sbb
lea
cmp
sub
mov
mov
rcl
pusha
or
shrb
sub
jle
lock
add
movsl
mov
fsubrl
or
cs
loope
jne
mulb
jge
stc
rolb
xor
movsb
cmp
mov
pop
stos
rcr
repz
loopne
std
adc
mov
call
cwtl
jno
mov
mov
cmp
hlt
or
lret
push
popf
pop
jno
aas
sbb
bound
addb
imul
mov
addr16
jle
ja
and
mov
dec
fdiv
push
jo
pushf
dec
scas
enter
aad
sbb
mov
push
jae
mov
iret
fs
lahf
or
sub
loop
xor
rclb
xchg
out
or
jl
jecxz
mov
outsb
jno
xchg
xchg
and
mov
xchg
xchg
xor
jbe
pop
fidivrs
jge
movsb
and
pop
iret
lea
lods
pop
push
or
add
mov
std
and
sbb
pop
dec
pop
cwtl
out
add
stc
mov
push
pop
loop
shl
mov
dec
ret
aaa
or
adc
dec
push
xchg
or
mov
jnp
popf
dec
or
mov
pusha
iret
mov
gs
sub
call
insl
test
scas
out
mov
mov
pop
mov
cltd
rcr
movsb
dec
push
pop
into
ficoms
push
fwait
xchg
push
mov
xor
sbb
cmovs
push
jg
cmp
mov
mov
pushf
aas
jo
out
cmpsl
stc
enter
xor
rorl
in
in
cmp
js
add
negl
inc
pop
cwtl
inc
push
into
daa
neg
pusha
loopne
std
int3
aam
int3
xor
adc
aad
test
mov
mov
cmp
arpl
test
pop
push
sub
ja
xchg
push
sbb
jnp
push
mov
sub
mov
movsl
mov
add
xchg
mov
push
mov
movsb
mov
in
jnp
pop
mov
cltd
push
xor
jmp
pop
outsl
fmull
lods
push
lods
push
sub
dec
mov
ret
adc
fsubl
addb
add
add
and
add
add
and
fs
add
add
adc
add
add
add
add
add
or
add
add
and
loopne
add
add
add
add
repz
arpl
push
cmpsl
fildll
adc
sbb
sub
cmp
pop
ja
xor
inc
int
mov
xchg
inc
jmp
lahf
jmp
testb
lret
sbb
scas
xor
fidivs
jne
sub
sub
jnp
stc
cli
test
add
in
push
push
in
aad
inc
and
push
and
add
push
inc
inc
fidivrs
push
mov
cs
xchg
loope
push
inc
sub
loop
push
pusha
push
ja
mov
adc
push
mov
out
ds
in
mov
jbe
mov
push
es
push
add
dec
cmp
pop
pop
push
sub
adc
jle
inc
sbb
mov
mov
sbb
mov
sbb
lahf
das
xor
fdivs
fsub
insl
and
mov
mov
pop
inc
mov
sub
dec
jmp
rol
shlb
jmp
sbb
in
in
movsb
hlt
test
into
hlt
jmp
or
les
xor
shlb
scas
pushf
outsl
xor
out
xor
jae
and
add
sub
mov
lret
jecxz
ljmp
fisubrs
xor
add
imul
jo
mov
shll
stc
push
in
sbb
pop
stc
pop
or
inc
int3
aas
or
xchg
pusha
adc
arpl
sbb
mov
inc
fcomps
js
pop
or
ljmp
jnp
fldt
pop
dec
nop
adc
aad
lret
pop
xchg
pop
mov
scas
dec
mov
test
loop
push
test
enter
cmpsl
ret
sub
loope
mov
sub
sub
orl
shll
int3
ret
or
cmp
or
jge
dec
cmp
dec
dec
ret
les
insl
rorl
cmpsb
add
cmpl
dec
cmp
dec
lds
pop
mov
mov
inc
dec
sahf
pushf
dec
dec
shrl
cld
pop
in
cmp
mov
loop
stos
stos
int
cltd
inc
rorb
lcall
lret
xor
mov
je
stos
je
xor
pop
pop
test
mov
dec
ss
test
rcl
pop
movsb
iret
dec
mov
lcall
in
xchg
aas
push
xchg
adc
mov
adc
fistpl
sbb
jo
popa
dec
dec
popa
addb
add
std
add
cltd
cld
stos
xchg
fildll
lods
fwait
rcrb
stc
dec
jmp
cmp
mov
dec
mov
addr16
xchg
fcomp
add
mov
pop
stos
xchg
aas
inc
sbb
mov
adc
push
jge,pn
ds
mov
sub
sub
ret
cmpsb
cmpsl
sarl
pop
push
shll
fidivrl
sbb
ror
xchg
adc
xlat
out
mov
jne
mov
rcl
jae
dec
push
inc
popf
mov
fldenv
push
xor
push
pop
xor
call
mov
pop
pop
pop
jp
movsl
cmpsb
mov
or
mov
lret
jo
or
out
arpl
and
nop
sub
jg
and
pushf
lahf
mov
scas
arpl
fisubrl
fsubl
stc
add
xor
mov
add
pop
fistpl
xor
adc
inc
aam
jae
xor
int
in
in
call
adc
mov
out
dec
movhps
cmovp
mov
call
fnstenv
push
sbb
decb
xchg
dec
dec
fnsave
js
xor
dec
dec
xchg
inc
ljmp
adc
fisttpll
xchg
arpl
jo
xchg
push
push
fstl
ficoml
push
push
xchg
daa
shrb
push
push
fstl
insb
call
pop
scas
mov
pop
adc
dec
xchg
outsb
cmp
cmp
adc
cmp
sti
mov
ds
xor
xchg
int3
mov
xor
pop
pop
loop
adc
sbb
adc
rol
std
jg
xchg
cwtl
ror
rolb
lcall
jno
sub
call
hlt
add
dec
fs
xor
fs
and
jne
xor
fmull
mov
add
cmc
ret
loopne
inc
data16
jbe
cmp
andl
lds
jg
dec
pop
dec
mov
addr16
xchg
dec
push
xchg
out
xchg
mov
jle
rolb
push
pop
xchg
fisttps
adcb
or
push
jl
dec
cmp
rolb
adc
add
addb
icebp
std
js
xchg
xchg
pop
sbb
pushf
js
pop
sub
aad
loop
mov
mov
adc
enter
mov
sbb
stos
ret
subl
push
out
mov
lea
add
add
cli
mov
test
flds
cmpsb
mov
fists
sbb
test
adc
mov
inc
sub
and
mov
and
enter
push
inc
adc
ret
mov
fwait
add
pop
idivl
adc
pushf
mov
adc
aaa
sbb
loop
in
jns
lods
xchg
fwait
nop
xchg
cmpsl
sahf
sbb
jmp
pop
and
pop
mov
and
inc
mov
pop
and
xor
mov
lds
push
lea
sahf
push
and
adc
rclb
cmp
xor
sbb
test
mov
cmp
pop
fisttpll
std
cwtl
xchg
es
cmpsb
xchg
fwait
mov
daa
int3
jb
mov
fmuls
aad
mov
rcrb
xor
loopne
rol
pusha
or
xor
xor
stc
divl
in
data16
stc
xchg
or
xor
add
xchg
inc
movsb
pusha
xchg
xor
jg
xchg
sub
outsl
cltd
mov
enter
in
mov
jge
sbb
loopne
in
xchg
dec
ss
sbbb
xor
loopne
cltd
cmp
mov
xchg
fnsave
mov
mov
cltd
or
cs
cmp
nop
dec
cmp
pop
cmp
xchg
dec
cmp
sbb
dec
xchg
xchg
dec
cmp
sbb
dec
xchg
xchg
dec
cmp
out
dec
xchg
xchg
jg
out
add
adc
int
pop
mov
mov
add
sub
cmp
push
dec
fdivl
adc
pop
test
