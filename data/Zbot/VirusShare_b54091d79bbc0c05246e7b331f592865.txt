call
cmpsb
add
adc
fidivs
in
fwait
inc
xchg
cmp
popf
lds
inc
push
add
jmp
sub
lods
sti
popf
push
pop
sub
and
jmp
lods
in
sbb
pop
sbbl
inc
test
cmpsb
jns
ds
jne
ss
rcl
lret
lock
enter
ljmp
cmp
ficoms
push
inc
lods
or
iret
ret
mov
dec
loop
pop
filds
mov
sub
daa
dec
xor
cmpsb
fsts
mov
negl
lock
pushl
pop
movsb
sarl
pusha
popa
in
insb
fs
or
jno
push
push
test
lcall
aaa
push
aam
adc
xchg
enter
sti
xchg
inc
repnz
push
aam
cmp
data16
jmp
hlt
repnz
or
add
pop
mov
cmp
mov
lods
mov
sub
mov
dec
call
shrb
fstl
fisttpl
sarl
mov
dec
jo
inc
sub
loopne
jmp
pushf
test
jns
aas
repz
cld
leave
xchg
sbb
sbb
push
push
sbb
mov
lea
adc
int
rol
jp
cmp
cltd
gs
cmp
pop
divb
in
push
js
add
and
mov
insl
pop
mov
ja
pop
lcall
pop
fst
bound
xlat
and
cmp
fs
sbb
test
inc
push
test
lcall
add
xor
inc
call
pop
xlat
bound
ja
jg
cmp
lods
mov
sbbb
jb
out
cmpb
push
mov
xchg
roll
ret
call
clc
loope
dec
push
push
outsl
dec
sub
ds
sbb
pop
xlat
dec
mov
xor
pushf
fldl2e
and
sub
ljmp
mov
mov
sub
aam
pushf
fisttpl
pop
xor
ja
lcall
nop
cmp
loop
inc
dec
inc
lods
rcll
mov
mov
pop
ret
bound
incl
or
or
loope
xor
mov
dec
jno
pop
adc
inc
lcall
push
xor
sub
push
cmp
adc
mov
andl
mov
imul
in
outsb
dec
addr16
mov
adc
jne
out
shlb
mov
or
pushl
loope
sub
lods
decb
adc
jbe
add
stos
cmc
rcrb
sti
out
inc
and
mov
sarb
notb
in
loope
xchg
lcall
cmpsb
sub
aaa
add
shll
pop
jmp
xor
push
lods
ds
push
jg
or
shlb
test
jmp
push
sbb
push
jl
mov
call
movsl
xchg
add
es
roll
vandpd
push
leave
sti
lahf
adc
dec
xor
dec
shrb
int
jge
mov
pop
fs
pop
pushf
fisttps
xchg
inc
jmp
testb
mov
inc
fnsave
imul
fisttpl
loop
mov
fimull
mov
incl
filds
ret
mov
aam
and
inc
in
jbe
out
lea
jb
loopne
cmp
fcmovbe
xlat
mov
call
shlb
icebp
test
push
and
test
jecxz
lock
mov
das
lods
inc
sbb
cmc
pushl
pop
test
xchg
push
push
lret
adc
mov
popl
rcl
cltd
push
adcb
cs
jnp
lret
js
addb
popf
std
sbb
insl
ret
movsb
faddp
adc
mov
sti
sbb
jnp
fldcw
or
in
sub
sub
inc
add
jmp
or
mov
xor
jmp
lods
jp
jae
or
cli
xor
pop
das
jb
imul
xchg
push
lea
mov
in
call
shlb
mov
push
mov
mov
sbb
aaa
cld
mov
shrl
mov
test
xlat
ss
ljmp
pop
push
movsl
ret
sbb
mov
and
jno
test
dec
adc
incl
xchg
movsb
setle
dec
imulb
shrl
fadds
ds
mov
jecxz
mov
dec
xchg
push
imul
fisubrs
sbb
imul
xor
aam
or
jb
mov
clc
adc
std
test
push
pop
sub
and
mov
or
lcall
loop
jno
push
arpl
into
mov
insl
xchg
in
mov
jp
inc
lcall
and
mov
loopne
cmc
mov
inc
mov
ficomps
imul
bound
mov
jne
mov
cmpsb
imul
or
sub
cmc
lock
insl
fwait
fisttpll
addl
or
pop
mov
push
lock
push
mov
decl
mov
test
pop
fwait
lret
sbb
and
movsb
push
and
cs
into
int3
movsl
lahf
sahf
push
sub
dec
mov
cmc
loope
pop
mov
push
push
insl
jle
adc
call
nop
data16
jmp
popa
stc
jl
xchg
nop
sar
mov
dec
fldcw
insl
sub
test
ja
mov
loop
cli
leave
pop
leave
es
lods
leave
iret
into
in
and
pushl
cld
movsl
xor
aam
pop
stos
fdivrs
pop
adc
test
inc
xchg
gs
stc
pushl
sbb
aad
dec
and
sti
mov
push
sub
jl
sub
stc
xorl
shlb
jmp
movsl
sbb
jnp
cmp
xchg
ljmp
mov
fwait
sbbl
mov
and
add
xchg
jg
cld
xor
jae
mov
jecxz
daa
dec
xor
stc
lcall
sbb
pop
hlt
sarb
jmp
nop
push
sbb
into
adc
sbb
or
xor
mov
clc
je
nop
jg
sbb
xor
mov
rorb
cmpsb
push
fwait
adc
mov
pop
arpl
jae
ljmp
mov
faddl
pop
pop
shrb
int
cmp
int
jnp
xchg
and
sub
mov
test
mov
sbb
or
push
jns
jle
sbbb
adc
call
dec
stos
mov
movsl
nop
aaa
xor
fucomip
addr16
fldt
dec
mov
out
push
xchg
push
je
mov
incl
addb
inc
mov
mov
in
mov
addr16
sbb
sahf
dec
sahf
popa
out
inc
lcall
aam
cwtl
add
test
cltd
jns
loopne
rcrl
out
out
mov
or
jmp
sub
pop
loop
sbb
pop
inc
test
inc
cld
aas
cmp
sarb
loope
test
decl
mulb
shrl
fcmove
and
ljmp
and
xchg
incl
lahf
push
movsb
push
push
inc
push
pop
popa
push
arpl
rcll
mov
call
or
rolb
sub
in
push
out
ljmp
pushf
std
fs
mov
jne
incl
xor
cmp
xor
xchg
fadds
imul
xchg
test
dec
push
xchg
jno
adcb
insb
dec
addps
sbb
das
dec
xchg
aad
jmp
pushl
std
pop
cwtl
pop
aaa
inc
adc
outsb
or
inc
fimuls
xor
lock
jge
pop
imul
mov
idivl
pop
rol
pop
push
jae
adc
xchg
or
jne
xor
adc
xchg
sbb
or
aas
mov
out
sahf
add
jg
add
ret
fisttps
cwtl
jg
dec
push
loopne
pop
sub
jmp
cmp
notl
xchg
push
mov
scas
pop
jl
add
sub
push
or
ud1
push
arpl
inc
push
sbb
test
cmp
fcomip
rcl
shl
ja
stc
je
mov
lea
inc
out
les
mov
lods
pop
jnp
lret
dec
clc
jbe
jns
in
std
mov
sbb
mov
lcall
jecxz
push
sub
sbb
lods
cli
lock
rcll
icebp
sahf
frstor
lock
mov
mov
cmp
sub
std
push
int
adcb
adc
cli
les
mov
pop
sub
add
idiv
mov
mov
jmp
pop
add
sub
mov
call
mov
xchg
cmp
jp
sub
lock
ja
adc
sub
ja
bound
subl
cmp
scas
push
xchg
inc
les
adc
incl
movl
das
or
in
lods
add
adc
jmp
mov
ja
lcall
xor
xchg
inc
pop
aaa
fcoml
cmp
jg
aam
push
dec
mov
jmp
lock
into
outsb
mov
pop
push
push
jecxz
scas
sbb
pop
sub
or
jmp
push
repz
adc
xchg
mov
lret
in
mov
pushl
cmp
or
lcall
and
cvttps2pi
pushf
jl
sub
ficoml
push
movsl
jmp
popa
ret
imulb
movlps
pop
popf
jmp
mov
add
or
inc
testb
pop
hlt
sbb
sahf
rorb
sub
ss
ficompl
outsb
pop
jmp
cld
sub
mov
clc
stos
jnp
add
push
mov
xchg
enter
cld
inc
pop
mov
cmp
rorb
cmp
push
data16
pop
stos
movl
mov
insb
sahf
mov
dec
push
scas
cmp
std
push
ja
test
fucomi
pushf
cli
pushl
out
call
in
or
data16
outsl
scas
sub
mov
adc
clc
jnp
int
decl
bound
insl
into
adc
int3
mov
sbb
shl
mov
fcomip
cmp
cmpsb
fdivl
pop
ja
add
addb
pop
fwait
inc
cmp
mov
sub
scas
lret
rolb
outsb
ror
mov
mov
push
jmp
jle
lea
lahf
das
test
je
xchg
dec
nop
popf
ja
fwait
jecxz
cmpsb
paddq
pushl
shlb
mov
out
pusha
rclb
test
or
movsl
mov
or
sub
in
daa
jbe
sti
xor
jg
pop
sub
fs
cmp
sub
loopne
test
jmp
xlat
inc
loopne
push
push
enter
fdivs
mov
xchg
scas
out
mov
in
fwait
bound
dec
dec
outsb
scas
subb
insb
dec
sbb
fcoml
pop
cmc
loope
lcall
ja
jle
test
sub
push
cmpsb
mov
or
repnz
jbe
lds
or
dec
xor
pop
popf
dec
or
sbbb
or
mov
mov
dec
sub
adcl
and
call
sub
sub
std
mov
push
push
faddl
push
test
or
xchg
jno
xlat
sbb
dec
lock
call
adc
flds
in
es
arpl
cmp
std
sub
sbb
cltd
xchg
cmp
in
push
pushl
js
ja
jecxz
mov
mov
arpl
sbbl
jle
mov
xchg
rol
inc
repnz
imul
mov
cmp
fiadds
pushl
cmp
push
scas
test
xor
in
pop
cmp
scas
and
mov
in
cltd
xchg
xor
cli
lcall
and
push
mov
jecxz
adc
adc
pop
ret
xchg
mov
xor
call
adc
fdivl
mov
repnz
in
adc
mov
mov
push
stos
push
adc
xchg
sbb
in
push
sub
popa
mov
xchg
push
and
nop
lahf
lods
mov
lcall
inc
jge
pop
mov
sbb
push
mov
sbb
enter
ret
dec
lea
push
movsl
aas
adc
xchg
add
mov
outsb
es
sub
ljmp
sti
jg
push
lret
xor
dec
sbb
notl
jnp
add
adc
jmp
call
fisttpl
fnstenv
inc
aaa
fldl
popf
adc
lcall
lret
xchg
mulb
sub
mov
std
pop
pop
je
and
imul
mov
add
push
loope
xchg
test
xor
inc
dec
sbb
into
int
sbbb
ja
decl
insb
rorl
inc
push
sub
dec
push
or
rol
inc
or
add
decl
mov
push
lods
stos
xchg
cmp
stos
adc
and
sub
and
insb
incb
outsl
pop
jmp
push
ret
mov
add
jg
sub
out
ss
into
testb
lcall
or
xor
sti
mov
es
popf
jbe
mov
out
jnp
out
ficompl
dec
pop
jge
jmp
lret
xlat
stos
mov
es
pusha
loopne
sbb
jecxz
pop
iret
clc
cmc
jmp
inc
cmpsb
pop
mov
shlb
jl
bound
adc
movsb
std
ljmp
lock
loopne
sbb
push
cmpl
sbb
call
clc
daa
paddsb
jnp
out
or
lds
popa
lret
pop
mov
jg
lcall
and
add
sahf
iret
test
icebp
int3
xor
out
push
and
inc
vcvtpd2dqx
mov
inc
scas
and
mov
xchg
add
xor
pop
ljmp
imul
int
xchg
inc
icebp
stc
ret
pop
and
dec
adc
cltd
inc
inc
pushf
out
enter
inc
jmp
pushf
sarl
dec
test
sbb
or
xor
sar
fsubrl
out
jmp
cmp
iret
rcrl
aad
xchg
call
mov
mov
mov
fsubrp
clc
decl
push
fbstp
pusha
mov
inc
loopne
push
jbe
and
inc
pop
jo
call
bound
mov
sahf
repnz
scas
mov
dec
lods
into
sub
shl
imul
cld
mov
lea
bound
call
mov
int3
cmp
movsl
andl
rcll
sbb
movsl
in
insl
je
fimuls
add
mov
sbb
sub
sub
int
xchg
pop
gs
ljmp
nopl
xchg
aaa
mov
xor
rep
add
inc
daa
sub
stos
test
into
inc
and
ljmp
sub
adc
fwait
mov
scas
or
fs
mov
inc
adc
mov
inc
pop
sti
popf
inc
and
fsub
testl
xor
fwait
push
adc
add
stos
sub
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
pop
decl
inc
push
fsts
jo
push
jae
add
call
fidivs
in
fwait
inc
xchg
cmp
popf
lds
inc
push
add
jmp
ljmp
lods
sti
popf
push
pop
sub
and
jmp
lods
in
sbb
pop
sbbl
jns
lcall
jne
ss
rcl
lret
lock
enter
sti
xor
cmp
lcall
ficoms
push
inc
lods
or
iret
ret
mov
pop
filds
mov
icebp
sub
daa
dec
xor
cmpsb
fsts
mov
negl
je
lahf
pop
movsb
rcr
cld
mov
pusha
popa
in
insb
fs
or
jno
push
push
test
push
aam
adc
mov
enter
sti
xchg
inc
repnz
push
aam
cmp
data16
repnz
or
add
call
pop
mov
cmp
mov
lods
mov
sub
mov
dec
push
inc
inc
imul
add
js
mov
dec
jo
inc
sub
loopne
mov
push
jns
aas
repz
cld
leave
xchg
sbb
sbb
push
push
sbb
sub
lea
cmp
arpl
xchg
jnp
pop
jecxz
mov
cmp
cltd
gs
maxps
xor
add
js
add
and
mov
insl
pop
mov
ja
pop
pop
in
pop
fst
bound
call
and
cmp
fs
sbb
test
inc
push
test
popf
cmp
push
mov
pushl
mov
fwait
push
ss
call
pop
xlat
bound
ja
jg
cmp
lods
mov
cmp
lcall
mov
push
aas
cwtl
push
mov
xchg
roll
ret
adc
loope
dec
push
push
outsl
decl
aad
dec
sbb
pop
xlat
dec
mov
xor
pushf
fldl2e
and
sub
mov
sub
ret
mov
sub
inc
pushf
fisttpl
pop
xor
ja
sbb
nop
cmp
jmp
fildl
lods
rcll
mov
mov
pop
ret
bound
inc
inc
or
decl
loope
xor
mov
dec
jno
pop
adc
inc
cwtl
mov
xor
ljmp
int
cmp
adc
mov
andl
sbb
imul
in
outsb
dec
addr16
mov
adc
jne
out
shlb
mov
or
insb
inc
and
loope
sub
jmp
adc
jbe
add
stos
cmc
rcrb
out
inc
and
call
sarb
notb
in
loope
xchg
xchg
sub
aaa
add
decl
shll
pop
jmp
xor
push
lods
ds
push
or
sar
jg
inc
inc
mov
mov
push
sbb
push
jl
mov
inc
pop
movsl
xchg
add
jge
ja
es
roll
vandpd
push
leave
sti
lahf
adc
dec
shrb
int
jge
mov
pop
fs
pop
pushf
fisttps
xchg
inc
and
testb
out
mov
fnsave
imul
fisttpl
loop
mov
fimull
mov
filds
ret
mov
call
inc
in
jbe
out
lea
jb
loopne
cmp
fcmovbe
xlat
mov
popa
inc
icebp
test
call
cmp
or
and
das
mov
das
lods
inc
sbb
cmc
jne
pop
test
ljmp
pop
ficoms
push
adc
rcl
cltd
push
adcb
jnp,pn
lret
js
ds
incl
sbb
insl
ret
movsb
faddp
adc
mov
sti
sbb
fldcw
call
sub
sub
inc
add
jmp
or
mov
xor
lods
jp
lock
pushl
or
cli
xor
pop
das
jb
imul
fistps
mov
in
call
shlb
mov
push
mov
mov
mov
shrl
lcall
aaa
mov
test
xlat
ss
test
mov
fistps
movsl
inc
popf
iret
sbb
mov
and
jno
test
dec
adc
inc
inc
xchg
movsb
setle
decl
shrl
fadds
ds
mov
jecxz
mov
xchg
push
imul
decl
mov
movsl
inc
cmc
xor
aam
or
jb
mov
test
mov
out
push
pop
sub
and
mov
or
ret
lcall
push
arpl
into
mov
insl
xchg
in
mov
jp
inc
fwait
icebp
xlat
lods
jne
mov
incl
mov
dec
pop
inc
mov
ficomps
imul
xchg
sbb
pushl
mov
cmpsb
imul
or
sub
cmc
lock
insl
fisttpll
addl
fwait
fisttps
xor
call
lock
push
mov
inc
mov
test
push
inc
pop
fwait
lret
sbb
and
movsb
push
and
cs
into
int3
movsl
lahf
sahf
imull
sar
leave
mov
push
loope
pop
mov
push
push
insl
jle
adc
call
nop
addr16
stc
jl
xchg
nop
sar
clc
inc
mov
dec
fldcw
insl
sub
test
mov
loop
cli
pushl
dec
pop
leave
es
lods
leave
iret
into
in
and
mov
incb
insb
cld
movsl
xor
sbb
lcall
pop
adc
test
inc
xchg
gs
stc
mov
into
or
call
push
dec
and
sti
mov
push
sub
jl
sub
xorl
lcall
rcl
shlb
jmp
movsl
sbb
jnp
cmp
xchg
outsl
hlt
mov
fwait
incl
and
add
xchg
jg
cld
xor
jae
mov
xor
incl
outsl
jnp
dec
sbb
pop
hlt
sarb
jmp
nop
cmc
sbb
into
adc
fistps
or
xor
mov
clc
je
nop
sbb
xor
jg
mov
rorb
cmpsb
push
fwait
adc
mov
pop
arpl
jae
sub
faddl
lcall
shrb
int
cmp
int
jnp
xchg
and
sub
mov
test
mov
sbb
mov
lods
cld
fnstenv
ficoml
jle
sbbb
adc
mov
movsl
nop
aaa
pushl
push
fldt
dec
mov
out
push
xchg
push
je
mov
inc
testl
call
pop
dec
mov
in
mov
addr16
sbb
sahf
dec
sahf
popa
out
inc
sbb
in
cwtl
add
test
sub
jns
loopne
rcrl
out
out
mov
or
sub
pop
loop
inc
sbb
pop
inc
test
inc
cld
aas
cmp
sarb
loope
test
mov
push
lret
and
ljmp
fcmove
and
ljmp
and
xchg
mov
push
movsb
push
incl
pop
popa
push
arpl
rcll
mov
push
test
inc
adc
call
jge
in
push
out
ljmp
pushf
std
fs
mov
jne
repz
cmp
xor
xchg
fadds
imul
xchg
test
dec
push
xchg
jno
adcb
pop
lret
insb
dec
addps
sbb
das
dec
xchg
aad
jmp
pop
cwtl
pop
aaa
inc
adc
pushl
test
outsb
or
inc
fimuls
xor
pop
imul
mov
lock
js
pop
rol
pop
push
jae
adc
rcl
xor
ljmp
adc
xchg
sbb
or
aas
mov
out
sahf
add
jg
stc
ret
fisttps
incl
popf
dec
push
loopne
pop
sub
cmp
notl
call
mov
scas
pop
jl
add
sub
lock
ud1
push
arpl
call
inc
push
sbb
test
cmp
rcll
loopne
push
stc
je
mov
lea
inc
out
jmp
jnp
lret
jle
dec
clc
jbe
jns
in
std
mov
sbb
mov
pop
jecxz
push
sub
sbb
mov
cli
lock
rcll
icebp
sahf
frstor
lock
mov
mov
sub
std
mov
int
adcb
adc
cli
les
mov
pop
sub
add
mov
mov
jmp
fadds
jb
pop
add
sub
mov
push
fwait
xor
cwtl
adc
call
test
sub
lock
ja
adc
sub
mov
pushl
scas
cmp
scas
push
xchg
inc
les
adc
movl
inc
das
or
in
lods
add
adc
jmp
mov
ja
cltd
out
imul
incl
aaa
fcoml
cmp
jg
aam
push
dec
mov
jmp
outsb
mov
pop
mov
push
jecxz
scas
sbb
pop
sub
or
cs
mov
mov
xor
mov
mov
lret
in
mov
jb
cmp
or
lcall
xor
and
cvttps2pi
pushf
jl
sub
ficoml
push
movsl
in
ret
imulb
decl
sbb
pop
popf
jmp
mov
add
or
testb
pop
hlt
sbb
sbb
rorb
sub
ss
ficompl
outsb
int3
cld
sub
mov
call
clc
stos
jnp
add
push
mov
xchg
enter
pop
mov
cmp
decl
cmp
push
data16
pop
stos
movl
or
decl
repz
scas
cmp
std
push
ja
test
fucomi
pushf
cli
xor
call
in
pushl
push
movsl
outsl
scas
sub
mov
adc
clc
jnp
int
bound
insl
into
adc
ljmp
inc
dec
pop
cmpsl
sbb
shl
mov
cmp
cmpsb
fdivl
lock
add
addb
pop
fwait
inc
cmp
sub
scas
lret
sar
mov
ror
mov
mov
push
and
mov
imul
jb
lahf
das
test
je
xchg
dec
nop
popf
ja
fwait
jecxz
cmpsb
paddq
mov
push
or
shlb
pushl
test
movsl
mov
or
sub
in
daa
jbe
sti
xor
jg
pop
sub
incl
pop
fs
cmp
sub
loopne
test
clc
jle
mov
inc
loopne
ljmp
and
fdivs
mov
xchg
scas
out
mov
push
dec
dec
outsb
scas
hlt
ljmp
clc
subb
insb
dec
sbb
fcoml
pop
cmc
loope
ja
jle
lcall
jge
sub
push
cmpsb
mov
or
repnz
jbe
lds
or
pop
leave
pop
popf
dec
or
call
sbb
or
mov
mov
dec
sub
adcl
and
leave
sub
sub
std
decl
mov
pop
sub
icebp
or
xchg
jno
xlat
sbb
dec
lock
cmc
flds
in
es
ljmp
fucompp
sub
cwtl
cmp
std
sub
sbb
cltd
xchg
cmp
in
push
xor
js
ja
call
outsb
filds
adc
jp
arpl
sbbl
jle
jnp
mov
fs
inc
repnz
imul
mov
cmp
fiadds
pusha
mov
push
ljmp
in
pop
cmp
scas
and
mov
in
cltd
xchg
xor
cli
pop
push
and
push
mov
call
repz
lds
pop
ret
xchg
mov
xor
adc
fdivl
pushl
in
adc
mov
mov
push
stos
push
adc
xchg
sbb
ds
mov
hlt
movsl
mov
and
inc
jge
incl
mov
sbb
push
mov
sbb
enter
ret
adc
leave
daa
sar
jmp
add
mov
outsb
es
sub
idivl
xor
ljmp
inc
mov
outsl
and
add
adc
mov
flds
jmp
jno
inc
aaa
fldl
popf
adc
pop
out
sbb
ljmp
cmp
std
pop
pop
je
and
imul
mov
mov
jg
xor
inc
dec
sbb
into
int
sbbb
or
add
ja
jmp
push
or
rol
inc
or
add
mov
push
lods
stos
call
inc
stos
adc
and
sub
and
insb
incb
outsl
pop
and
sub
ret
call
repz
sub
movsl
sub
out
ss
into
testb
lcall
sti
mov
lcall
popf
jbe
mov
out
jnp
out
ficompl
adc
imul
decl
lret
xlat
stos
mov
es
pusha
loopne
sbb
jecxz
pop
iret
clc
cmc
mov
inc
cmpsb
pop
decl
hlt
push
je
push
bound
adc
movsb
test
lock
std
call
loopne
sbb
push
cmpl
sbb
clc
daa
paddsb
cld
jnp
out
or
lds
popa
lret
pop
mov
pop
mov
stos
add
cs
inc
mov
push
adc
icebp
int3
xor
out
and
inc
dec
out
mov
inc
scas
and
mov
xchg
add
xor
pop
sub
imul
dec
cmc
xchg
inc
icebp
stc
ret
pop
and
dec
adc
cltd
inc
inc
pushf
out
enter
pushf
sarl
dec
filds
dec
sbb
or
xor
sar
fsubrl
out
loopne
out
bound
lcall
aad
xchg
call
mov
mov
mov
fimuls
push
fbstp
out
clc
jmp
and
ljmp
pop
jo
call
bound
mov
sahf
repnz
scas
mov
dec
lods
into
sub
imul
insb
les
push
pop
adc
aaa
mov
int3
cmp
movsl
andl
rcll
sbb
movsl
in
insl
je
mov
sub
add
mov
sbb
sub
sub
int
xchg
pop
outsb
pop
nopl
xchg
aaa
mov
in
xor
rep
add
inc
daa
sub
stos
test
into
inc
and
mov
jmp
daa
xchg
xchg
pop
scas
or
fs
mov
adc
mov
fwait
incl
popf
inc
and
fsub
testl
xor
inc
push
add
les
jbe
push
xor
inc
xor
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
orl
es
pusha
cmp
int
ljmp
loopne
or
addb
lds
add
call
mov
add
loopne
inc
cmp
pushl
add
shr
std
mov
popa
inc
cs
push
ss
outsl
mov
popa
xor
sub
mov
mov
mov
add
clc
sbb
aas
std
aad
sbb
pop
and
sub
aad
repz
mov
pop
mov
dec
mov
add
inc
mov
add
decl
dec
mov
add
inc
mov
mov
mov
mov
add
test
jg
out
and
test
les
cmc
mov
xor
mov
testl
ret
add
dec
jne
adc
clc
push
adc
testb
add
add
push
mov
subb
add
ret
or
cmp
or
test
jne
jp
pop
int3
sbb
pop
fdivs
es
decl
das
cmp
fwait
or
aaa
call
add
adc
lods
incl
push
stos
je
out
sahf
add
jmp
mov
cs
into
lods
sub
pop
sti
incb
decl
push
push
aaa
imul
fwait
mov
or
xor
jle
mov
sbb
jmp
andl
ja
aas
ja
out
sub
out
rcrl
enter
push
pop
adc
push
jmp
data16
shlb
mov
in
cld
xlat
testb
pop
adc
mov
inc
test
jo
test
push
arpl
mov
dec
das
ja
pop
adc
jnp
lcall
push
in
fdivs
sbb
imul
ret
cmp
sub
jp
sub
insl
inc
dec
and
incl
push
pop
push
aas
pop
xor
xor
mov
js
loop
pop
call
call
out
push
dec
subl
rcll
inc
fadds
sub
push
pop
out
xchg
xchg
mov
jge
mov
lcall
stos
push
movsb
sub
lds
mov
lret
mov
jmp
jl
decl
pusha
xor
mov
pop
add
mov
insl
pop
sahf
push
adc
js
mov
inc
sahf
or
xor
cld
mov
mov
xchg
jle
mov
lahf
push
aam
jmp
cmp
mov
subb
sbb
jl
testl
inc
adc
add
inc
push
loope
nop
inc
add
mov
adc
stos
sahf
loope
xchg
idivb
xor
lret
repz
cmp
pop
xor
cmpsl
fildll
add
add
ret
xor
or
xor
mov
lahf
in
push
mov
xor
add
movsl
cmpb
mov
pushl
pop
mov
bound
xor
inc
mov
lea
lret
push
mov
jmp
incl
std
pushf
scas
fisubl
inc
jle
ds
loop
sub
cmp
jne
cmp
lcall
pop
adc
cwtl
sbb
lea
fiaddl
xchg
sub
jl
push
lcall
bound
mov
orl
insb
inc
jecxz
shrl
jl
xor
adc
rorl
sub
xor
jl
jne
mov
call
xchg
lds
mov
pop
sub
je
scas
mov
mov
stos
mov
popa
cmp
pop
pop
jp
xchg
popa
pushl
push
pop
push
pop
push
cmp
inc
mov
cs
mov
pop
addr16
adc
jmp
arpl
or
or
cmpsl
icebp
jle
add
inc
and
mov
mov
dec
daa
rcr
push
jbe
iret
test
jl
inc
mov
mov
lcall
mov
aas
ss
in
lock
clc
adc
idivl
cmp
lock
loopne
dec
pop
dec
out
adc
subl
pop
enter
clc
gs
or
push
mov
jae
mov
incl
cmp
pop
jecxz
sbb
adc
mov
cmp
dec
hlt
imul
sahf
aad
lcall
mov
pop
std
xlat
cmpsb
sbb
cwtl
ror
inc
sbb
cmp
iret
push
dec
pop
lds
and
pop
fsubs
xor
icebp
pop
inc
push
jle
dec
push
aaa
ret
imul
and
popf
fnsave
lods
adc
mov
xor
push
cld
pop
and
dec
xchg
sub
sbb
push
cmpsl
sbb
pop
daa
or
pushl
out
add
push
pop
inc
adc
lock
insb
push
pop
ret
insb
in
stc
fimull
mov
aas
sbb
sbb
lcall
loop
in
ret
popw
dec
jl
stc
addr16
push
sub
add
jmp
adc
jo
mov
adc
inc
repz
push
mov
incl
outsl
aas
scas
es
inc
mov
cwtl
jp
xlat
jo
jb
addb
je
push
xchg
push
jb
mov
mov
cs
je
or
fwait
push
sti
je
xlat
cwtl
insb
push
lods
xchg
adc
lea
pop
xchg
in
mov
test
cmp
jo
ljmp
xlat
lock
rolb
xor
inc
cmpsb
xor
mov
xchg
rclb
pop
and
cmpsb
mov
call
fisttpl
xlat
xlat
sbb
stc
adc
cmp
sbb
xor
movsl
inc
pop
pushl
sub
xchg
sbb
ds
sbb
sti
adc
pusha
ficoml
sbb
movsb
sahf
dec
add
xor
mov
cmp
adc
sti
or
fildll
sbb
mov
add
movsl
add
pop
pop
xor
cld
in
pop
xrelease
hlt
mov
inc
sub
jo
aas
movsl
pop
dec
xor
imul
xchg
push
add
std
mov
mov
pop
jg
cltd
shll
into
sbb
or
sbb
pop
xor
aas
sbbl
mov
pusha
mov
out
jg
fcomip
pop
push
fsubrs
push
sbb
mov
pop
and
sbb
xchg
int
jns
adc
loop
mov
or
sbb
pop
inc
out
push
xor
stc
or
imul
adc
sar
lock
jg
mov
jnp
test
adc
fsubs
push
mov
shr
je
push
mov
and
jg
das
ss
and
mov
ss
inc
and
pop
add
and
add
test
jb
dec
sbb
cmc
mov
sub
cmp
shlb
push
xchg
ret
xchg
or
inc
into
ds
scas
inc
jl
inc
mov
push
popf
push
test
pop
pushf
sbb
mov
adc
cmpsl
pop
pop
cmc
lea
cld
incl
movsl
adc
cmp
and
test
scas
sbb
pop
jmp
inc
jo
xchg
cmp
xor
shll
mov
fdivr
in
aaa
mov
jo
lods
and
pop
mov
lods
adc
mov
mov
fists
sub
cmc
adc
dec
rorl
sbb
push
roll
xor
xor
cmpsl
insl
fisttpl
pop
es
xor
es
cmp
cmp
cmp
cmp
int
sbb
mov
sbb
sub
jl
fnstenv
ds
push
sub
leave
inc
jecxz
dec
test
cmpsl
popl
ss
cmp
out
pop
jne
push
xchg
jo
cmpsb
into
mov
jl
push
daa
jo
xor
push
pop
cs
push
push
lcall
es
aam
adc
ret
aad
jno
lock
push
mov
jmp
pop
add
loope
daa
test
cmc
inc
mov
lahf
fldt
pusha
push
daa
push
mov
arpl
jmp
sti
fisubs
fstpl
fbstp
ficomps
sarl
imul
xchg
push
sbb
and
push
call
mov
add
pop
jg
mov
push
mov
rorl
nop
outsl
jo
push
pop
call
stc
dec
fists
es
cmpsl
aam
mov
repnz
push
mov
outsb
or
fbstp
push
mov
pop
or
daa
movsl
jb
testb
cmc
scas
and
es
jno
hlt
jg
fucomip
pusha
repnz
sti
add
outsb
cmp
mov
jge
mov
or
sbb
fists
sub
jmp
mov
mov
xor
pop
incl
fistpl
or
pusha
ja
fists
add
cwtl
pop
aam
orb
cmp
push
pop
mov
gs
mov
push
pusha
push
cmp
sub
aad
dec
adc
mov
je
out
pop
cmp
pop
add
rcll
jo
push
push
or
ficomps
in
incl
xchg
xor
sti
add
in
and
add
in
call
sti
add
and
stc
push
dec
aam
jge
pop
push
lret
sti
mov
sub
mov
push
pop
push
lahf
pop
in
into
ss
call
push
sbb
and
jno
fstl
lret
jno
fistps
mov
call
sub
xchg
subb
lds
pusha
shlb
cmp
sti
daa
roll
jo
loopne
call
add
xlat
xor
fwait
xor
add
push
sub
sbb
stc
sub
xchg
mov
push
mov
mov
mov
rolb
jg
xchg
inc
sti
addr16
sub
mov
scas
add
fcomi
call
pop
mov
and
add
movsl
jle
xchg
push
clc
xchg
adc
lock
cmc
in
scas
jno
addr16
daa
jae
mov
ljmp
pushfw
and
jae
dec
pop
jbe
adc
adc
enter
mov
mov
push
adc
rorl
and
clc
xor
mov
arpl
sbb
hlt
scas
mov
cld
neg
testb
pop
push
fbld
fldl
jae
mov
hlt
lahf
mov
push
jo
loopne
popl
stos
jo
or
cmp
ja
sub
add
std
mov
mov
jl
jl
and
adc
pop
repz
enter
jb
adc
loopne
xlat
mov
stc
mov
push
adc
sub
pop
xor
sub
arpl
push
xor
jns
ss
xor
loope
pop
sti
mov
mov
lea
and
mov
jmp
inc
and
inc
fdivs
push
pushf
jnp
pop
cmp
and
pop
lcall
pushl
jbe
push
jo
inc
arpl
jbe
pop
inc
push
pop
imul
bound
inc
jne
insl
das
cli
pushl
cmp
jp
cmp
arpl
dec
xor
xor
push
fists
push
bound
jae
js
pop
insl
insl
popa
xor
xor
inc
push
inc
xor
arpl
mov
call
xor
je
dec
insl
pop
inc
jp
inc
push
dec
data16
aaa
outsb
dec
popa
inc
insl
gs
pop
inc
insl
inc
push
push
push
fs
jns
dec
imul
jb
fcmovnu
push
outsb
addr16
dec
inc
sub
dec
ja
bound
dec
dec
push
outsb
jo
jo
push
dec
lcall
inc
jae
dec
ljmp
outsl
outsl
dec
insl
jbe
data16
push
pop
dec
insb
outsl
pop
pop
lock
dec
xor
dec
cmp
jo
outsl
inc
inc
insl
jns
dec
inc
mov
xor
dec
aaa
push
movsb
bound
inc
xor
imul
in
push
push
popa
push
xor
push
push
inc
inc
jns
xor
xor
outsl
clc
call
push
dec
xor
ss
popa
gs
cmp
inc
insb
push
jae
dec
jae
pop
jne
mov
dec
push
add
insb
inc
js
dec
push
outsl
gs
dec
xor
push
dec
dec
ja
dec
jp
sbb
xor
jae
ja
and
cwtl
dec
push
je
shl
pushl
push
dec
xor
ja
push
xor
js
jl
pushl
push
mov
js
ja
imul
dec
mov
xor
inc
push
ret
orb
inc
add
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
incl
adc
xlat
add
add
pushl
call
enter
mov
sbb
add
mov
xchg
pop
popl
movsb
add
orl
loop
add
orb
int
addl
add
push
push
fnstsw
mov
or
insl
repz
adc
add
dec
mov
nop
add
dec
or
or
xchg
sbb
stc
fs
pop
adcb
pushl
incl
sarl
sub
mov
in
add
sarl
rolb
mov
add
dec
mov
out
add
add
fstp
mov
cmp
insl
into
or
sbb
push
or
xor
mov
lock
cmp
pusha
mov
push
or
push
in
xor
add
adc
pop
mov
push
xchg
mov
leave
add
std
sbb
mov
addr16
push
xchg
jnp
xchg
mov
dec
iret
jecxz
push
or
adc
adcl
sub
mov
push
test
inc
aam
adc
add
addr16
jp
push
add
lcall
xor
out
sbb
push
mov
inc
loopne
cmpsb
fldenv
xchg
stos
mov
int
testl
out
clc
lods
mov
push
aaa
mov
fucomp
sbb
cs
and
int
repz
addr16
sbbl
mov
add
adc
inc
lret
imul
loopne
js
mov
stos
mov
push
pop
push
adc
xor
pop
outsb
sti
inc
jnp
imul
and
push
xchg
xchg
daa
les
push
jno
cmp
negb
rcl
daa
dec
pop
add
in
sti
daa
stos
mov
lods
sbb
clc
mov
das
inc
sbb
loopne
shll
fs
scas
xor
inc
test
inc
arpl
cs
adc
jmp
stc
xor
repz
int
xchg
test
cmp
lods
jge
insl
pop
inc
aas
xor
adc
pxor
es
xor
das
stos
mov
loopne
aad
cld
jg
cld
adc
inc
and
jnp
loope
shlb
sub
or
add
push
push
xchg
add
test
mov
sbb
add
mov
sbb
pxor
mov
test
pop
imul
xchg
inc
leave
popa
or
loopne
inc
loope
pop
xchg
sti
loop
inc
dec
adcb
inc
or
cs
out
lds
mov
jle
sti
rcrl
test
mov
pop
in
jae
icebp
ja
stos
out
pop
nop
lods
inc
add
xor
add
or
sbb
and
imul
push
pop
pop
repz
mov
dec
in
iret
mov
mov
cltd
mov
push
mov
jle
cs
lock
dec
ja
xor
sbbl
jns
imul
shrl
mov
jo
popa
or
push
dec
mov
cld
jbe
imul
sub
adc
jl
stos
roll
and
pop
sub
dec
pop
pavgw
sbb
mov
lods
sub
push
daa
aaa
sbb
int
clc
adc
xor
push
mov
fdivrl
fsts
and
push
insb
dec
pop
add
das
add
out
push
cmp
test
loope
lret
imull
loop
jno
loopne
push
jg
add
decb
sub
sbb
mov
ret
in
decb
fwait
lahf
push
jo
leave
pusha
jl
stos
xor
lcall
std
sub
or
push
addb
fdivl
and
xchg
jno
test
or
or
jge
jo
outsl
fiaddl
aad
cmpsl
add
xor
stos
cmp
shl
xchg
aas
sbb
mov
add
mov
pop
pushf
aas
addl
dec
ret
in
sbb
sbb
mov
mov
dec
pop
pushf
add
xor
jne
outsl
lods
adc
cmp
lret
addb
lods
clc
cmp
shll
xor
cmp
scas
cmp
lret
movsl
add
xchg
cld
add
add
popf
cmp
mov
cli
sbb
lds
lret
sub
int3
pop
cmp
jp
ljmp
mov
or
push
add
sub
xor
stos
jg
sti
popf
mov
js
add
mov
push
int
mov
dec
adcl
jmp
sti
in
loope
jmp
in
loopne
stc
call
call
fcomi
das
dec
into
lods
clc
jecxz
in
xor
adc
loop
mov
mov
jb
xor
insl
ds
or
in
scas
push
movhps
enter
imulb
in
sbb
or
fstp
adc
sub
sub
fnsave
add
mov
std
pop
loopne
in
in
in
test
cli
push
test
test
add
jg
mov
add
test
mov
sarb
add
xor
push
and
inc
add
lods
lods
add
lds
pop
lock
and
mov
adc
mov
outsb
xchg
mov
pop
int
imul
push
movb
repnz
push
dec
rorl
adc
popf
add
adc
push
add
cmpsb
fcomps
clc
testb
jg
lret
add
pusha
pop
shll
pop
add
cmp
lcall
cmp
push
imul
push
scas
ret
add
imul
jo
cmpsl
fildl
inc
mov
or
jo
stos
addr16
push
sbb
ja
adc
jo
loope
cmpsb
test
pop
out
inc
sub
xor
push
push
cmp
add
js
mov
jno
ror
jo
xor
sub
outsb
add
xchg
mov
fcoml
jo
jmp
in
mov
or
aas
dec
add
jo
or
add
test
xchg
stos
ficompl
push
mov
arpl
jge
leave
cmp
gs
gs
dec
or
jl
rcr
pop
fildl
xor
sub
sbb
xchg
sbb
testb
jo
add
lock
scas
lds
jae
mov
push
jo
mov
pop
lock
lods
sub
dec
mov
adc
cmp
mov
xor
mov
shlb
movsb
data16
stos
adc
rclb
adc
mov
adc
popa
sub
pushf
insl
jo
push
dec
dec
iret
xor
xor
sub
aad
test
enter
xchg
mov
mov
mov
cld
add
in
lock
inc
push
pop
fadd
movsb
push
lock
jae
ss
test
dec
sbb
push
and
jp
inc
xchg
fisubl
rcr
jnp
lock
sbb
ffree
addb
push
test
cmp
in
mov
rorl
je
sub
out
xchg
and
jl
or
push
mov
push
repnz
inc
add
rclb
and
xor
cmp
xchg
les
lock
pushf
cs
mov
xor
scas
sbb
add
sbb
sbb
fisubrs
sbb
in
loope
lock
jns
push
or
ljmp
dec
add
enter
pop
push
jne
int
js
jns
shll
lock
lock
in
js
subl
pop
sbb
inc
iret
mov
and
sub
outsb
dec
adc
jle
and
fadds
cwtl
mov
lods
jb
mov
cmp
aad
std
lock
xchg
sub
jmp
push
bound
roll
mov
jmp
stos
ds
adc
sub
push
je
push
push
roll
jle
loop
imul
mov
ds
aaa
add
or
loopne
cmp
pop
mov
andb
scas
dec
and
sub
inc
xchg
push
push
sub
mov
lcall
stc
or
stos
loope
fidivrl
mov
dec
loopne
mov
aad
jns
fisttpll
out
lods
jge
stos
lds
inc
add
sbb
mov
jg
inc
add
mov
lods
addb
and
or
insl
pop
xor
stos
insl
ret
mov
add
div
dec
inc
stos
mov
addb
or
les
in
in
push
lret
pushf
stos
icebp
push
push
orb
or
divb
xchg
roll
adcb
ss
xor
push
or
inc
fistpl
xchg
inc
mov
aad
inc
repnz
jge
int
dec
test
pop
ss
repnz
addb
addl
int
mov
adc
mov
mov
adc
or
push
push
dec
icebp
fbstp
add
add
add
pushf
fidivl
push
push
lahf
cli
mov
mov
lock
shlb
or
adc
pop
or
rorb
or
rorb
or
rcrb
imul
in
ja
sbb
or
arpl
push
stos
cmc
or
shlb
or
shlb
rorl
rolb
or
jbe
push
shrb
popf
or
add
test
xchg
movsb
insb
pop
addr16
push
sub
lock
lahf
shrb
pop
mov
or
outsl
testb
pop
rcrb
sbb
rorb
gs
insb
repz
add
movsl
or
mov
ret
jne
int
sub
insl
inc
mov
push
inc
shll
pop
scas
pusha
mov
add
test
mov
lods
xor
lcall
aas
sub
add
mov
jp
xchg
push
xor
xorl
gs
cmp
icebp
xor
dec
and
rcr
pop
cmp
or
lock
push
ror
jbe
xchg
dec
orb
xor
les
cmp
lcall
or
cmpsb
insl
mov
fstl
cmp
sub
mov
cmp
ret
pusha
jnp
loopne
loopne
mov
or
loopne
or
push
std
mov
and
push
sub
xor
fwait
loopne
popa
vsqrtpd
mov
dec
push
or
and
cmp
mov
or
add
in
add
and
mov
mov
andb
xor
mov
aam
mov
mov
inc
aaa
ret
mov
sub
addb
pop
sbb
jmp
adc
add
les
add
push
fdivs
dec
add
and
enter
mov
aad
lock
mov
fsubr
fdivl
xchg
incl
push
adc
add
out
mov
mov
stos
ljmp
int3
std
out
xchg
outsb
add
ficompl
es
pop
notb
std
pushl
bound
mov
mov
mov
xor
adc
fisttpl
mov
lods
xor
adc
push
cmpl
into
paddw
mov
mov
shll
stc
adc
mov
mov
pushl
std
int
sbb
push
sub
pushf
sbb
push
enter
std
pop
mov
jecxz
insl
cmpb
push
xchg
mov
mov
mov
jg
mov
mov
mov
dec
add
insb
inc
shlb
mov
push
xchg
jle
mov
xchg
mov
mov
mov
cld
fcmovnu
pop
push
mov
mov
mov
adc
mov
ds
verr
flds
sahf
or
cmc
aaa
or
jnp
movsl
int3
js,pt
insb
mov
cld
out
mov
add
sub
ds
cmc
mov
lcall
ja
in
add
mov
cmp
mov
test
lock
mov
mov
mov
adc
mov
mov
lcall
mov
jo
add
add
adc
cmp
sbb
imul
mov
mov
scas
cli
or
or
sarb
popa
add
test
ljmp
push
mov
mov
inc
adc
cmp
cmpsb
pushl
mov
mov
mov
or
out
orb
add
and
call
lret
sar
sbb
fidivrs
mov
mov
mov
mov
mov
mov
in
loope
stc
adc
mov
mov
mov
add
inc
sbb
add
je
stos
std
scas
cli
xor
mov
out
popl
dec
inc
sub
adc
push
into
mov
jg
push
dec
add
push
repz
jb
push
lret
cli
andl
ljmp
shrl
and
icebp
mov
mov
sub
mov
in
jae
xor
jbe
sub
out
clc
inc
fdivr
lods
leave
cltd
mov
mov
mov
icebp
jmp
adc
push
mov
add
jb
sub
pop
lods
mov
and
decb
mov
inc
mov
mov
add
jnp
mov
add
jmp
lcall
out
add
sti
mov
cwtl
dec
out
xchg
shrb
and
mov
pushl
mov
dec
sbb
loop
adc
in
aad
push
pop
xchg
and
jecxz
or
aam
movsl
ja
mov
mov
and
cld
mov
mov
sub
mov
mov
mov
dec
push
loope
cmc
call
mov
add
cmc
pop
push
mov
cmc
pop
fcoml
inc
sub
divb
jp
in
and
mov
es
js
sar
imul
loope
dec
add
inc
or
jl
add
adc
popa
mov
push
mov
mov
lock
cs
dec
test
pop
fdivl
sahf
incl
pop
rolb
sarb
add
mov
adc
adc
cmp
inc
not
add
aas
ret
push
pop
pop
mov
add
mov
pop
jmp
mov
mov
mov
jnp
movsl
push
mov
mov
and
addl
add
loopne
jle
mov
mov
js
loope
or
or
mov
mov
xchg
mov
jns
adc
mul
fbstp
pop
xchg
out
pop
cmp
int
in
sbb
mov
inc
incl
jl
data16
hlt
int3
jp
mov
cli
pushf
xor
stos
call
mov
xor
sub
add
sub
lahf
sub
sarb
or
ficompl
les
int
fwait
scas
inc
push
ljmp
clc
mov
push
jne
push
sbb
jnp
add
lcall
inc
mov
add
inc
cld
in
outsl
clc
mov
mov
movsb
popf
mov
mov
mov
adc
jbe
or
cmp
scas
clc
push
loopne
push
aam
mov
fwait
cmp
es
fbld
add
lcall
mov
nop
data16
in
scas
dec
mov
mov
xor
mov
inc
jp
fcomip
or
xor
mull
ds
mov
fcomip
push
cld
jg
ja
fwait
cmpb
in
pop
ja
fisubrs
iret
add
lcall
mov
inc
cmpsl
pop
add
mov
mov
push
lret
sbb
add
inc
loopne
aaa
std
scas
and
mov
in
gs
add
sub
add
std
lcall
cs
ds
nop
cltd
test
add
adc
fisttps
xor
cmp
cmpsb
in
lcall
mov
jb
xchg
pop
stos
jle
jmp
add
jle
or
adc
mov
cltd
jnp
adc
cld
sbb
add
inc
add
mov
jbe
or
add
clc
or
jno
shlb
lock
xchg
pop
out
sti
loopne
dec
add
movsb
lahf
lcall
imul
cmc
push
sar
pop
popf
xchg
mov
lret
test
repz
add
push
icebp
call
or
movsl
sub
insl
add
sub
cs
jge
aas
mov
jecxz
ficomps
add
sbb
pop
pushf
mov
dec
in
std
pop
xchg
mov
testl
test
adc
ret
add
pusha
int
shrb
add
mov
movsb
xchg
inc
adc
inc
push
xor
inc
and
inc
dec
sub
mov
es
dec
fistps
call
jge
add
push
je
pop
lcall
jo
pop
popa
add
jnp
inc
mov
pop
inc
jbe
pop
pop
data16
mov
add
loopne
push
add
push
mov
enter
mov
in
rcll
push
or
aad
dec
lcall
xor
add
add
test
stos
stos
jmp
lock
mov
mov
call
loopne
out
out
call
out
add
loopne
loop
cld
incb
push
sti
cli
cmc
hlt
mov
incl
testb
lock
in
jle
pop
add
sbb
push
jb
push
ret
mov
mov
incl
loopne
addl
or
decl
popa
jns
div
add
add
add
mov
lahf
lea
or
mov
mov
cs
cs
adc
mov
and
in
mov
int
cld
int
shll
mov
mov
mov
and
cmp
mov
mov
mov
mov
mov
out
jg
aaa
and
mov
mov
mov
mov
mov
mov
ss
out
testb
push
xor
dec
mov
outsl
testb
mov
dec
mov
inc
mov
out
mov
pop
mov
pop
mov
mov
mov
pop
mov
xor
aad
push
mov
in
std
adc
out
repz
jg
mov
fsubrs
mov
mov
aaa
jg
mov
mov
jl
leave
mov
lds
jg
aaa
js
fmull
loop
jbe
cld
jae
out
mov
and
mov
jle
stos
in
test
mov
and
stos
scas
mov
pushf
xchg
mov
dec
popl
outsl
fwait
or
lods
adc
xchg
push
or
adc
rorl
test
lods
jne
nop
mov
loopne
rorb
mov
fwait
sbb
scas
sub
scas
jl
sbb
jmp
mov
mov
fnstcw
mov
mov
mov
mov
incb
mov
mov
mov
cmpsl
sub
enter
mov
sbb
in
push
mov
insl
mov
mov
jg
mov
mov
mov
dec
mov
mov
je
es
in
jae
out
xrelease
sarl
testb
cmpl
mov
cld
int
adc
mov
sub
mov
mov
mov
int
and
mov
and
mov
cld
int
cld
mov
cmp
das
aas
mov
mov
mov
int
cmp
and
mov
mov
mov
int
cmp
mov
mov
mov
mov
cld
int
cld
mov
mov
mov
dec
mov
mov
dec
mov
cld
int
dec
mov
dec
mov
mov
inc
mov
mov
inc
fistps
inc
mov
xor
inc
mov
inc
int
cld
int
push
pop
mov
pop
mov
mov
mov
jg
pop
cld
mov
pop
mov
pop
mov
pop
mov
addr16
jg
aaa
push
mov
push
mov
mov
push
mov
mov
sti
inc
push
mov
orl
dec
mov
dec
mov
dec
mov
dec
mov
aaa
jg
aaa
inc
mov
inc
mov
inc
mov
mov
mov
inc
mov
pop
mov
mov
pop
mov
pop
mov
aaa
jg
aaa
push
mov
push
mov
insb
mov
repz
jg
mov
iret
outsb
mov
mov
leave
push
mov
jg
aaa
jg
mov
mov
lds
mov
data16
mov
shll
repz
pusha
mov
mov
ret
bound
fnstsw
push
pop
jno
mov
fildll
fistps
fimuls
sub
bound
fsubrs
adc
mov
outsl
sub
je
aad
and
aam
mov
adc
mov
mov
outsl
out
mov
and
shll
mov
mov
mov
hlt
cmp
mov
ds
mov
mov
fistps
in
mov
mov
add
dec
mov
mov
int
xchg
mov
xor
xorl
int
cld
mov
dec
mov
dec
mov
repnz
insl
lds
mov
cld
mov
adc
mov
insl
mov
adc
push
mov
cld
insl
insl
mov
push
mov
mov
mov
fbstp
pop
mov
and
int3
mov
iret
pop
fbstp
cld
mov
mov
mov
mov
adc
mov
fdivr
int
mov
push
mov
push
mov
push
jbe
adc
push
mov
fdivl
adc
stos
jo
cltd
adc
cwtl
jp
test
adc
sahf
orb
mov
mov
mov
mov
mov
nop
mov
out
bound
xchg
jl
mov
repz
je
mov
mov
mov
mov
mov
ja
lcall
jne
mov
adc
movsb
mov
stos
jb
cmpsl
add
out
add
mov
adc
mov
mov
mov
sub
in
scas
int
add
lcall
or
divb
mov
mov
and
mov
mov
mov
adc
insl
cmp
sbb
mov
xor
inc
mov
outsl
out
mov
dec
mov
mov
mov
push
out
decb
sbb
mov
mov
sbb
adc
outsl
out
inc
mov
mov
push
inc
mov
mov
adc
adc
inc
mov
pop
mov
pop
mov
mov
mov
adc
call
pop
mov
mov
fwait
mov
mov
insb
mov
mov
mov
imul
cmp
cmp
mov
mov
mov
mov
ss
mov
mov
xor
xor
stc
fwait
xor
dec
mov
jg
dec
mov
dec
jns
std
fwait
mov
mov
mov
jp
dec
jne
inc
mov
mov
jg
pop
aam
cmp
test
test
test
fcmovnu
cld
in
sub
sub
and
sub
es
fwait
mov
test
and
sub
cmp
outsl
incb
pop
test
scas
xor
scas
xor
stc
fwait
mov
test
dec
test
inc
test
cmpsb
mov
inc
test
inc
test
scas
pop
test
scas
push
lcall
push
test
test
bound
jecxz
push
scas
jnp
pop
mov
test
push
sbb
pop
jge
jae
push
lods
and
test
pop
test
test
test
adc
xchg
test
in
test
test
pusha
test
int
or
bound
js
test
jg
xor
not
cld
test
scas
jns
xchg
js
test
test
test
test
icebp
aas
sbb
mov
cs
lods
sub
fists
sub
test
xchg
xchg
dec
xchg
and
test
cmp
xchg
lods
aas
xchg
adc
xchg
lods
cmp
lods
cmp
fistpll
xchg
lods
xor
lahf
lods
xor
jg
fildl
adc
lods
dec
xchg
xor
xchg
lods
dec
xchg
loopne
mov
adc
lods
inc
les
inc
xchg
divb
inc
test
xchg
adc
xchg
lods
pop
xchg
pop
xchg
adc
xchg
lods
pop
xchg
lods
push
stos
test
ret
mov
push
xchg
push
xchg
test
xchg
xchg
imul
fstpt
xchg
adc
ds
xchg
push
stos
mov
xchg
test
xchg
and
test
out
outsl
int
cli
data16
popa
xchg
adc
jmp
arpl
cmpb
jl
pop
jg
lods
lods
jle
divb
lcall
xchg
stos
jp
iret
adc
int
je
cmpl
cwtl
scas
jbe
xchg
xchg
jbe
jg
push
mov
add
sub
movsl
add
dec
mov
outsb
dec
xchg
and
sub
xchg
fisttpl
and
xchg
scas
inc
xchg
ds
xchg
scas
pop
pop
add
inc
xchg
mov
xchg
jmp
mov
nop
xchg
scas
jno
cs
sar
outsl
incb
pop
mov
pop
adc
pop
mov
pop
mov
sbbl
sbbl
adcl
fwait
push
adcw
push
pusha
adcl
cmp
mov
insl
jl
insb
mov
outsl
jle
outsb
mov
imul
subl
andl
sub
mov
subl
popl
orb
cld
orb
orb
addb
int
addb
addb
addb
cmp
pushf
cmpl
lahf
sbbb
out
cmp
fwait
cmp
xchg
xor
xchg
xorl
xchg
outsl
out
adcb
adcb
adcb
dec
subb
subb
push
outsl
out
adc
test
dec
subb
andb
outsl
out
andb
andb
andb
andb
cmpb
mov
outsl
out
pop
cmpb
cmpb
xorb
xorb
xorb
or
out
outsl
or
outsb
or
or
push
lret
subl
outsl
out
gs
fs
add
data16
add
out
out
add
sbb
jl
fdivrl
filds
out
jns
flds
sbb
jp
fidivl
aad
je
aam
mov
cld
or
das
cmpl
cmpl
aaa
jg
mov
cmpl
xorl
aaa
jg
xorl
xorl
xorl
jg
aaa
cmp
int3
mov
or
cmp
repz
jg
mov
or
xor
les
aaa
jg
add
xor
mov
add
dec
sbb
jg
aaa
dec
sbb
dec
sbb
sbb
dec
sbb
sbb
aaa
jg
mov
sbb
inc
adc
adc
inc
adc
repz
jg
adc
inc
adc
adc
inc
adc
adc
pop
sub
jl
aaa
pop
sub
pop
sub
sub
pop
sbbb
and
pop
adcb
andl
push
orb
andl
push
adcb
andl
push
orb
cmpl
adcb
cmpl
insl
orb
cmpl
outsl
adcb
cmpl
imul
pushf
imul
orb
xorl
adcb
xorl
popa
and
mov
pusha
orl
adc
loopne
jge
cld
jg
mov
or
xor
jg
repnz
or
jns
or
or
lds
jp
add
jge
ja
jg
fwait
add
sub
fisttps
pop
orb
add
lods
in
mov
push
loopne
sub
sub
sub
insl
shrl
and
daa
lods
add
inc
shlb
ret
test
dec
lcall
add
subb
and
stos
push
and
cmp
test
mov
add
sbb
out
sbb
movsl
fsubrs
scas
fisubrl
in
jns
dec
shll
sbb
add
mov
cmp
pop
lods
xor
add
or
sbb
lcall
inc
push
add
sbb
xor
rcrl
sbb
push
int3
sbb
push
mov
pop
sbb
mov
cmp
add
adc
icebp
imul
push
adc
dec
repz
out
loope
loopne
jbe
lock
and
xor
sahf
in
cmp
aas
ds
sarl
call
sarb
ljmp
push
push
in
or
xor
repz
push
dec
or
push
jo
dec
sbb
push
dec
clc
and
jp
jns
fs
dec
cmc
iret
hlt
lock
repz
inc
testb
sbb
and
mov
pop
inc
and
sbb
addl
ljmp
push
xchg
pop
inc
adc
sbb
dec
sarl
sub
and
push
add
lcall
stos
fs
addr16
imul
insb
shll
rorb
xchg
mov
popf
pushf
lahf
sahf
add
xchg
xchg
xchg
add
sub
mov
stos
sub
pop
mov
mov
in
mov
int
xchg
add
add
pusha
rcl
rcll
or
add
or
decb
or
add
pop
push
sub
sbb
adc
rcll
mov
js,pn
sub
and
push
cld
adc
cmp
cmp
cmp
fbld
xor
dec
dec
dec
dec
add
dec
dec
inc
inc
inc
inc
add
inc
inc
pop
pop
pop
pop
add
pop
lock
cld
lcall
push
push
push
add
push
push
insl
insb
outsl
outsb
sbb
imul
addr16
lcall
pusha
arpl
jl
jle
jns
jnp
jne
ja
lock
jae
decl
add
pushl
int3
iret
into
leave
enter
mov
ret
add
fstp
fcomi
aaa
cmp
neg
aad
xlat
push
or
loopne
out
sti
mov
cmp
jb
mov
xor
dec
add
adc
lcall
jb
mov
add
and
aas
add
add
jle
pusha
push
jl
inc
add
sub
jb
repnz
mov
mov
outsb
cmc
or
es
mov
xchg
or
and
or
outsb
add
or
add
mov
sbb
push
outsb
outsb
adc
add
je
cmpl
neg
jbe
push
add
addl
mov
es
cs
or
push
adc
mov
cmp
mov
adc
rolb
lcall
adc
dec
fdivrl
add
int
cmovb
sar
outsl
and
xor
bswap
cli
cli
stos
lock
sub
jne
add
outsl
cli
sbb
adc
repnz
xchg
inc
push
mov
stc
out
stc
loope
ljmp
lods
dec
lods
movb
mov
enter
fdivrs
das
cli
xlat
mov
pop
mov
mov
xchg
jmp
data16
jg
ja
fwait
out
mov
ret
test
mov
add
and
add
into
mov
add
mov
cmpsl
sbb
mov
or
cmp
outsb
fsubrl
testl
jmp
sbb
shll
out
dec
add
mov
sub
pushl
or
and
cmp
push
xchg
sbb
lods
addr16
in
jg
pushl
cld
test
xor
outsl
inc
iret
dec
inc
jb
fs
inc
add
or
jno
jae
inc
je
adc
fisubrl
mov
push
test
jb
xorb
enter
rolb
or
add
adc
rorl
rclb
lret
add
int3
jmp
sar
call
in
jmp
in
push
int3
push
push
lds
and
stc
into
xor
stc
dec
call
aad
pop
clc
movb
sbb
enter
fsubl
dec
mov
hlt
cmp
inc
mov
inc
lret
stos
orl
stc
inc
lock
mov
rcrb
sbbl
ret
and
mov
call
fisubs
subb
add
addb
mov
dec
pop
add
cltd
aas
sub
mov
das
cmpsl
andb
inc
or
enter
inc
and
mov
add
loop
jecxz
call
lods
out
push
loope
and
and
push
cmpsb
push
ret
inc
ret
in
inc
adc
add
call
jecxz
fdivrp
jmp
add
ljmp
adc
int
add
pop
mov
faddp
add
fistl
out
aam
add
sub
xchg
movsb
or
cmpsb
insb
ret
mulb
jnp
inc
daa
int
movsl
mov
and
outsl
and
mov
push
add
ljmp
aaa
sti
push
fiaddl
or
pusha
add
mov
lods
mov
and
sti
mov
stos
ljmp
or
pusha
cmpps
or
or
ret
ljmp
fmulp
ffreep
iret
enter
and
ret
stos
push
shlb
sbb
loope
lds
ror
loopne
mov
and
into
mov
bound
rol
int3
into
dec
fcmovnb
and
enter
outsb
sub
mov
cmp
ljmp
flds
dec
or
fcmovnb
insl
testb
ret
mov
frstor
and
or
nop
add
cwtl
dec
jne
insl
das
adc
add
ret
les
or
add
xor
jmp
cmc
and
push
mov
mov
stc
pusha
xor
lcall
in
jecxz
jmp
in
mov
and
loop
jecxz
clc
std
adc
es
jecxz
out
pop
inc
or
stos
cmp
call
inc
pop
lock
inc
pusha
adc
loop,pn
sub
in
or
sub
arpl
in
xor
and
or
cmp
jecxz
dec
std
outsl
xchg
loopne
mov
push
cwtl
in
dec
mov
mov
mov
test
stc
std
mov
cmp
mov
loopne
mov
mov
loop
mov
out
in
cld
iret
mov
shrb
mov
xchg
add
jmp
inc
pop
inc
loope
call
xor
adc
and
sbb
rolb
mov
add
push
mov
push
in
adc
cmp
decb
into
les
add
lret
in
add
cwtl
mov
clc
in
arpl
outsb
mov
hlt
popa
pop
jno
sti
or
adc
adc
insb
mov
lea
incl
push
xlat
cmp
lret
add
mov
es
pop
jl
add
xchg
or
and
inc
pandn
add
push
adc
dec
jmp
std
incl
and
addl
add
daa
in
add
push
mov
push
mov
scas
shrd
incl
test
xor
add
test
add
add
jmp
insl
clc
stos
fwait
loop
lret
mov
add
stc
jmp
jge
xchg
icebp
cmp
adc
in
ds
lret
cmp
push
loopne
iret
xchg
test
fnsave
mov
rol
xor
shlb
lcall
and
cmpsb
std
das
cli
jg
fsubp
push
idivl
or
shr
xchg
call
jo
ja
pushl
xchg
or
cmp
nop
ja
enter
fsubrl
mov
sub
iret
lods
mov
mov
inc
addb
sti
popa
in
xor
mov
mov
iret
push
std
or
add
lret
add
dec
lcall
xor
dec
in
inc
cli
push
adc
push
jo
stc
xor
mov
xor
jecxz
sub
inc
fsts
mov
call
and
call
loop
lock
mov
xor
in
nop
add
rolb
adc
jmp
rorl
shrb
add
shlb
dec
fildl
rol
mov
jg
nop
pop
lcall
cmp
xor
mov
add
xchg
dec
mov
sbb
mov
mov
mov
inc
push
cs
xor
loope
cmpsb
out
or
jecxz
cmp
cmp
iret
in
in
xor
pop
jl
lock
call
icebp
add
push
adc
cs
or
push
push
das
clc
pop
hlt
stos
fdivs
fidivl
jmp
cmpsb
loopne
add
adc
mov
push
add
push
vmwrite
mov
in
lock
rorl
push
cmp
jg
add
mov
push
popa
add
sbb
adc
je
adcl
aad
jno
lret
stos
loop
xor
sarb
rolb
push
push
ret
or
pop
call
add
jo
pop
or
or
mov
adc
add
out
fildl
out
das
orl
add
xchg
mov
and
test
push
add
shl
add
cmp
int
push
add
add
pusha
push
shll
sub
push
jno
outsl
and
cld
add
outsb
int3
xchg
pop
test
cli
mov
inc
push
xchg
add
cmpsl
scas
cli
sbb
sbb
or
loop
rorb
rorb
shr
in
clc
pop
clc
or
mov
out
pop
cmp
fsub
adc
jle
push
xor
das
mov
push
mov
scas
adc
scas
popa
push
mov
xor
mov
pop
xchg
ds
mov
enter
jecxz
loopne
iret
cs
pop
mov
add
mov
mov
lock
stos
call
scas
inc
xchg
jmp
call
dec
in
and
lods
inc
sub
jb
xchg
int
imul
loop
jmp
fs
arpl
mov
pop
cld
mov
or
xchg
loop
xor
push
dec
add
xor
add
ljmp
or
push
sub
into
and
jbe
fucom
cmpsb
mov
fbld
rcr
enter
incl
fcomip
push
loopne
inc
mov
iret
add
leave
jbe
push
icebp
or
pushl
jge
dec
jge
pop
pop
pop
dec
pop
inc
gs
add
fs
inc
dec
inc
inc
add
inc
pop
mov
inc
push
dec
pop
pop
jae
in
out
subb
cli
repz
leave
ljmp
add
loope
loop
stc
icebp
add
jg
jns
pop
dec
dec
inc
bound
dec
push
pop
add
jg
cmp
cmp
sub
add
ljmp
push
pop
cmc
decl
mov
movsl
mov
repnz
mov
in
mov
sub
xchg
xor
stos
mov
lock
mov
stos
push
mov
adc
mov
sbbl
mov
xorb
sbb
jecxz
in
xor
mov
cmc
pushl
stos
xor
je
sub
and
imul
jg
jmp
jbe
jnp
cmp
insl
outsb
test
mov
mov
mov
inc
inc
push
inc
std
scas
jp
dec
jns
push
pop
inc
pop
add
add
lea
push
or
ja
outsb
jb
pushf
push
add
xor
or
or
and
xlat
sub
adc
add
sbb
push
bound
add
jne
jae
jne
add
push
dec
push
inc
push
jg
jne
dec
jmp
dec
pop
pop
or
fs
insb
pop
arpl
jl
inc
jb
push
je
je
sub
mov
and
inc
sub
and
add
add
pop
mov
sbb
lea
add
sub
xchg
and
sub
icebp
inc
addb
inc
push
dec
sbb
rcr
rcr
pop
mov
call
add
lret
add
mov
and
add
fcomip
push
repz
sbb
aam
int
pushf
into
fsubr
fstps
lcall
fadds
fcmove
fcomip
inc
shll
sar
loop
pushl
std
rcl
add
shl
cld
in
in
shl
cld
iret
ret
shlb
cmp
push
adc
ds
inc
aas
dec
dec
adc
hlt
out
or
push
jns
add
push
pop
mov
push
cs
pop
ret
mov
dec
dec
and
add
cmp
insb
cmp
mov
push
cmp
cmp
pop
xor
cmp
and
sub
ljmp
add
lea
pop
inc
cmovp
add
sbb
adc
adc
push
dec
inc
mov
inc
add
imul
gs
ja
pop
pop
std
je
and
das
pusha
inc
cmp
inc
and
cmp
pusha
jbe
add
jae
jne
es
jle
and
fildl
cmp
std
add
and
xchg
lahf
add
sarb
aaa
add
cwtl
xchg
xor
cmpsb
mov
mov
mov
scas
sbb
movsb
test
test
jmp
jmp
rolb
inc
dec
inc
inc
add
or
jg
jle
dec
dec
or
lods
pop
adc
pop
pop
push
pop
add
dec
nop
sbb
xor
jg
sub
push
popa
jae
ja
and
insb
imul
ljmp
cmp
aas
add
jb
cmp
and
hlt
pop
jg
inc
aaa
cmp
xor
outsb
lret
jecxz
fwait
mov
js
loop
in
jmp
out
cli
push
decl
scas
rolb
aas
cmpsl
mov
mov
jg
push
fsubrl
sbb
and
sbb
mov
sbb
mov
cs
jle
inc
jp
outsb
jg
pushl
jp
jnp
fs
outsb
insl
mov
or
or
or
sbb
std
fisttps
add
mov
mov
mov
scas
xchg
mov
test
cmpsl
jno
arpl
dec
sbb
push
outsl
bound
bound
jb
mov
popa
or
in
imul
push
jle
addr16
int3
xor
sbb
adc
in
add
push
push
push
push
inc
push
jp
dec
dec
inc
inc
dec
pop
jb
mov
mov
ljmp
idiv
push
out
cmc
hlt
in
test
pop
icebp
scas
jmp
xchg
fwait
ret
pop
sbb
or
add
loope
repz
cmc
mul
call
sbb
and
inc
notl
sub
pop
daa
and
and
jg
and
push
rol
jmp
in
fcmovnu
lret
adc
cmp
adc
add
or
adc
adc
std
int
rcrl
mov
shl
fadd
rcl
fincstp
mov
test
xchg
lods
sbbl
es
and
shr
std
sti
js
insb
inc
imul
popa
addr16
jp
or
adc
lods
pop
push
stc
decl
out
out
cmc
icebp
call
outsl
jbe
pop
jns
gs
cld
add
fs
addl
pushl
push
pop
and
jnp,pn
sub
js,pt
and
arpl
and
js
aad
jo
jo
push
push
lahf
and
cmp
popf
push
cmp
pop
sti
hlt
out
aam
rorb
cli
mov
push
out
lock
lock
loopne
rcr
ljmp
aam
int3
xlat
mov
iret
fnstsw
cld
clc
inc
int
out
cli
mov
jmp
outsl
or
push
sbb
push
adc
xor
sbb
or
mov
mov
mov
xchg
enter
jmp
hlt
jmp
lahf
mov
mov
xchg
xchg
inc
cmpsb
sahf
popf
cltd
xchg
xchg
cltd
xorl
lahf
mov
imul
pop
jl
out
xchg
mov
js
fcmovb
ret
pop
xlat
icebp
in
out
jecxz
lock
repnz
testl
and
pop
or
pop
and
aaa
mov
aaa
xor
mov
orl
xor
sub
rcl
rol
std
in
jmp
out
clc
fsubp
out
repz
lock
clc
loope
jmp
ds
add
rcrb
out
mov
imul
idivb
jo
cmp
jp
and
xor
xor
jne
cmp
jecxz
or
pop
inc
mov
add
outsl
pushl
adcl
iret
xor
and
cmp
and
sub
sub
or
addb
in
hlt
aas
scas
test
aaa
fdivr
mov
mov
in
sti
cmc
add
jg
fildll
outsb
push
insl
fs
test
mov
scas
stos
mov
stos
test
mov
cmpsl
mov
movsb
mov
cmc
out
cltd
ret
addb
push
addb
inc
mov
cli
stc
test
xchg
testl
decl
sub
sub
pop
mov
int
fcom
ficoms
cmp
sub
sub
cmp
or
adc
cld
pop
test
and
or
sub
sbb
mov
mov
mov
cmpsb
push
jle
mov
nop
xchg
mov
xchg
or
aam
stos
cltd
lahf
sahf
adc
imul
sub
mov
arpl
adc
xor
xchg
push
xor
or
iret
lret
int
lret
mov
mov
jmp
es
jmp
out
add
clc
das
subb
test
dec
inc
xor
lcall
inc
pop
push
inc
inc
push
inc
push
inc
int3
imul
out
imul
pop
pusha
jno
mov
scas
out
cmp
xor
sub
mov
push
aaa
fdivr
pop
pop
push
pop
push
outsl
pop
mov
xchg
addr16
ljmp
pop
push
sbb
push
pop
push
push
inc
add
fs
insl
jnp
pop
in
out
mov
movsb
mov
mov
add
jmp
daa
js
jp
push
addr16
cs
jns
in
jne
jp
push
push
jl
sub
sub
jg
push
push
dec
inc
push
push
inc
shrl
inc
notb
push
dec
xchg
and
jae
xor
jnp
ret
jge
jl
jg
pop
push
mov
mov
mov
adc
or
or
clc
jg
push
cltd
add
fcmovbe
aad
fcomp
lret
inc
fdivrp
ja
scas
sub
ror
out
rol
les
mov
mov
jl
insb
jbe
arpl
mov
int3
fsubrs
lods
jo
fcom
xlat
roll
iret
in
out
push
jle
pop
dec
push
jns
cli
adc
xchg
lods
mov
sbbb
div
in
lock
jg
clc
scas
xchg
stc
add
cs
cmp
in
jle
loope
hlt
lock
ja
or
jg
pop
dec
dec
pop
push
fs
adc
decb
jno
outsb
pop
sbb
arpl
sbb
adc
popa
push
jl
sub
sarb
sub
jo
cs
and
add
cmp
jo
arpl
jnp
xor
xchg
add
arpl
inc
xor
inc
inc
pop
aas
cs
pop
jns
in
ffreep
fnstsw
ja
aaa
ljmp
push
push
inc
inc
pop
popa
jle
push
push
pop
pop
push
dec
dec
dec
cmc
pop
jno
fildl
cmpsb
xchg
shr
xlat
mov
das
push
pop
jbe
pop
dec
pop
jae
js
out
inc
dec
inc
pop
lcall
ffree
outsb
pop
push
cld
mov
dec
pop
push
inc
push
pop
lcall
xor
insl
dec
push
inc
jle
call
sahf
pop
push
or
sub
pop
push
jp
pusha
popa
cmp
and
xor
mov
jl
out
push
cli
repz
mov
add
int
jecxz
in
mov
xchg
push
hlt
cld
out
rol
repnz
iret
into
fcmovne
shl
rcl
ffreep
fadd
jmp
fcmovnbe
fnstsw
decl
adcb
xchg
mov
pop
sbb
add
push
xor
or
pop
xor
push
or
mov
mov
test
mov
or
fucomi
out
or
aaa
std
es
or
sbb
push
inc
or
popa
inc
std
incl
push
inc
imul
push
pop
dec
dec
pop
jb
dec
pop
sbb
outsb
push
mov
jp
arpl
jbe
push
ja
push
imul
in
outsl
data16
jnp
cs
imul
mov
mov
mov
mov
mov
aaa
das
pop
loope
mov
scas
mov
call
jmp
add
and
insl
pop
cmp
xor
xor
or
adc
cmp
ljmp
fcmovnb
lds
pushf
out
fcmovnu
leave
ror
lret
add
mov
xor
xor
sbb
and
sub
sub
xchg
ss
decl
das
sub
adc
cs
push
sub
nopl
or
add
jmp
ljmp
inc
inc
push
jp
push
dec
pop
pop
dec
dec
daa
clc
decl
stc
rcl
sahf
orl
cltd
mov
aaa
mov
and
xchg
mov
adc
cmp
sbb
sbb
pop
and
or
xchg
fstpt
rcrb
sbb
call
adc
add
out
out
add
outsl
in
in
in
out
out
adc
bnd
pop
ja
dec
adc
cmp
add
add
jle
ud2
or
or
lea
or
push
xor
adc
jle
call
jg
adc
xchg
mov
loope
jle
mov
in
xchg
out
in
dec
mov
mov
inc
dec
leave
hlt
in
dec
fdivrp
repnz
out
in
call
mov
aam
fadd
repz
mul
aam
out
fmul
int3
aad
fsubrl
decl
sahf
rol
fcmovne
fisttps
int3
sar
cld
enter
xchg
lods
ret
out
mov
cmpsb
cmpsl
lods
scas
mov
scas
mov
in
dec
imul
jne
jle
inc
push
jb
jnp
jmp
je
xor
data16
dec
pop
jo
inc
push
inc
inc
pop
xlat
clc
add
outsw
addr16
aaa
cmp
or
shlb
cwtl
js
dec
pop
pop
dec
pop
dec
jg
decl
push
dec
push
dec
pop
dec
gs
dec
pop
dec
pop
push
inc
adc
inc
pop
fs
jp
pop
gs
scas
mov
pusha
inc
insb
push
sub
xor
mov
xchg
test
test
call
mov
xchg
fwait
mov
mov
mov
mov
mov
and
or
or
pop
adc
add
add
or
inc
sbb
aaa
ret
adc
push
push
or
rolb
jns
es
pop
pop
and
adc
cwtl
std
stos
mov
addr16
adc
dec
dec
dec
dec
sbb
std
ja
push
adc
adc
outsl
push
outsb
js
cmp
jg
arpl
jmp
js
es
pusha
addr16
insl
pusha
js
push
pop
dec
push
mov
lcall
adc
pop
or
aas
pop
pop
pushf
jno
pop
dec
inc
or
mov
inc
cmp
jmp
cmp
cmp
mov
sub
pushl
cld
push
and
xor
and
inc
jae
or
pop
add
add
call
dec
sbb
sbb
dec
pop
lea
repz
out
lock
clc
mov
adc
mov
mov
jmp
sti
in
cmpsl
mov
xchg
lock
fincstp
or
dec
scas
mov
iret
fcmovnb
leave
lahf
push
fcomi
fcomip
ffree
int3
fsts
fld
ret
mov
mov
scas
xchg
push
mov
sarl
mov
cmpsl
mov
lock
movsb
mov
ljmp
cwtl
add
test
adcl
adcl
les
and
pop
addr16
jne
dec
addr16
and
jp
insb
decl
aaa
mov
jns
jno
jbe
gs
ficoms
dec
bound
inc
push
push
inc
jg
ja
inc
push
add
inc
inc
xor
inc
inc
add
inc
inc
dec
sub
jno
test
push
andb
outsl
les
and
jge
inc
dec
inc
inc
dec
mov
insb
jb
jb
jl
cmp
jge
arpl
cmp
ljmp
arpl
ds
sub
adc
fists
add
cmp
jp
inc
inc
adc
push
push
inc
ljmp
jno
add
adcl
pop
jl
dec
jne
in
popf
pop
icebp
jg
bound
jnp
sbb
dec
push
sbb
mov
dec
dec
inc
dec
jge
pop
imul
hlt
in
enter
int3
fcomip
in
xlat
in
jb
int3
ror
lcall
pop
adc
jo
xor
xor
adc
and
and
cmp
and
cmp
xor
inc
loop
les
sub
fwait
lods
lods
scas
mov
out
or
mov
int
xchg
popf
incl
outsb
test
aaa
nop
imul
jp
mov
incl
repz
lret
rolb
into
rol
push
add
and
cmp
and
adc
es
loop
push
in
adc
repnz
mov
mov
lret
jg
mov
and
sub
cmp
cmp
push
adc
dec
outsl
push
dec
jmp
push
or
lods
mov
jae
inc
cmp
adc
xor
je
arpl
arpl
dec
mov
popa
push
push
inc
inc
push
pop
push
dec
push
pop
pop
dec
push
add
add
dec
inc
mov
fs
inc
sbb
xchg
mov
mov
mov
mov
stos
mov
mov
popf
int
int
mov
sbb
cmc
pop
in
jmp
mov
mov
mov
mov
call
out
mov
mov
mov
andl
fcompp
lret
into
xchg
std
fcmovu
jg
call
fcmovu
mov
inc
int3
ret
lods
stos
inc
lods
dec
incl
popf
lds
ret
ljmp
mov
dec
pop
add
push
push
mov
testb
sub
adc
sub
pop
add
or
push
dec
cmp
push
adc
push
sbb
ud2
or
fcomip
inc
pop
pop
or
popa
and
cmp
inc
push
sahf
icebp
outsl
or
repz
out
cli
sti
loopne
mov
leave
inc
push
or
mov
out
call
pushl
in
mov
jne
es
fistpll
gs
sub
add
fstp
rcl
fldl2e
xchg
orl
mov
cli
add
and
mov
ja
mov
push
add
stos
xchg
xchg
inc
xor
push
sbb
cmpsb
mov
mov
inc
xlat
in
mov
adc
push
dec
dec
sbb
aas
les
mov
cmpsl
pushf
xorl
pushl
loopne
scas
test
out
jecxz
cld
mov
mov
mov
stos
xchg
int
mov
mov
mov
aad
fists
mov
mov
mulb
stc
hlt
out
in
xchg
mov
jmp
out
clc
jecxz
lret
lds
sbb
les
cli
fists
xchg
fdivrp
sbb
xlat
add
inc
cmc
push
jge
push
je
sbb
ror
pop
jp
pushl
and
push
popa
push
popa
lods
fcmovnu
add
mov
cltd
int
mov
incb
push
jb
test
mov
cmc
mov
jne
mov
scas
push
adc
roll
push
lock
enter
xor
adc
adc
ljmp
add
or
pop
data16
stc
test
ss
mov
mov
test
jbe
out
pushl
cwtl
ret
and
add
sbb
mov
jg
pop
cmc
mov
lret
fildl
stc
mov
mov
push
mov
xchg
mov
clc
sti
add
lret
lods
stc
and
push
popf
mov
outsl
add
push
inc
jb
mov
mov
jmp
push
mov
dec
rcl
add
test
aad
cmp
mov
or
or
mov
cmpsb
cmpsb
mov
ja
push
pslld
sbb
mov
push
adc
loopne
xorb
add
daa
cmpsl
mov
sbb
or
add
or
dec
loop
push
ret
mov
add
add
rclb
dec
lods
mov
jno
bound
addl
jg
std
movsl
xor
add
mov
add
mov
imulb
and
outsl
jge
jb
xor
in
push
iret
popf
push
lahf
clc
push
or
dec
add
cltd
gs
jb
cs
orb
mov
xchg
cld
pop
enter
fiadds
nop
dec
mov
data16
or
cs
pop
data16
in
mov
fidivrl
xchg
jne
pop
cld
inc
push
sbb
in
mov
or
or
jbe
push
or
add
aaa
addb
clc
popa
xor
add
mov
dec
icebp
jg
pop
and
fcompl
sbb
dec
mov
push
mov
in
mov
rorb
ss
in
fdivl
xchg
cs
inc
shll
in
decl
inc
add
aad
add
inc
add
or
add
stos
pop
sbb
gs
add
popa
fidivl
mov
adcl
adc
popf
or
stc
test
pop
addb
adc
mov
jmp
mov
xor
xorb
jno
dec
dec
xor
add
mov
cs
jbe
decl
inc
push
mov
dec
or
clc
xchg
mov
lret
sub
push
in
mov
add
lods
test
and
ficoms
sbb
and
inc
dec
popf
push
lock
jecxz
mov
mov
mov
add
xor
mov
inc
cld
pop
mov
inc
rclb
gs
xor
rolb
mov
decl
popf
nop
dec
addb
roll
jge
rorb
je
mov
dec
add
or
or
add
popl
clc
mov
or
jo
fldl
xchg
ljmp
or
jbe
sahf
int
mov
sub
and
fildl
xchg
shlb
jb
jnp
clc
sub
add
push
sub
add
in
mov
int3
cmp
outsb
lea
xor
gs
xchg
add
bound
ret
mov
sbb
mov
xor
xchg
or
or
or
cmpb
or
pop
jbe
pop
lods
push
inc
add
test
push
dec
mov
lea
icebp
pop
and
bound
fcompl
inc
or
lcall
scas
fstl
dec
inc
pusha
add
cmpsb
add
mov
adc
pcmpgtw
sub
xor
jp
clts
dec
push
sub
mov
fdivl
test
dec
add
adc
movsb
pop
pusha
shrl
dec
addl
test
aaa
data16
aam
pop
cmc
jnp
loop
mov
or
cmp
or
sub
das
clc
pop
in
mov
cmp
add
pusha
in
out
scas
mov
pusha
xor
sbb
cs
icebp
pusha
add
and
sub
or
popf
rolb
fwait
in
or
fcoml
dec
adcl
jno
sbb
add
outsl
mov
jbe
into
add
push
and
popa
inc
add
inc
add
lcall
int3
gs
add
sub
push
push
dec
sbbb
adc
popa
cli
pusha
adc
shlb
mov
push
mov
mov
dec
lock
mov
in
add
push
adcb
jge
mov
inc
or
fidivl
mov
pusha
and
jo
pop
jne
add
shrb
outsb
xchg
stc
mov
pop
xor
in
pop
fs
inc
push
add
gs
xorl
icebp
hlt
decl
in
pusha
pop
add
cltd
mov
aam
pop
or
movsl
pushf
sub
mov
subb
mov
clc
test
push
dec
and
adc
popa
sti
mov
xor
rol
in
imul
jecxz
mov
push
mov
adc
inc
sub
mov
loope
mov
inc
inc
les
sbbb
mov
ficomps
shlb
dec
clc
mov
and
jo
inc
cmp
or
inc
pop
icebp
mov
loope
adc
test
xchg
cmpsb
jl
push
jge
test
clc
jne
pop
inc
cmp
sub
add
push
leave
test
arpl
jg
pop
push
and
cwtl
pop
cwtl
loopne
mov
add
push
mov
clc
sbb
lock
mov
inc
sub
or
sbb
fbstp
loopne
inc
test
fnclex
add
or
inc
call
or
add
movsl
sahf
ss
sti
decl
faddl
cwtl
shll
sbb
ljmp
or
sub
outsl
scas
mov
sub
inc
int3
or
test
int3
and
mov
add
mov
or
int3
and
sti
loope,pt
dec
push
in
inc
loopne
add
loope
cld
mov
shll
jmp
movsl
loopne
data16
cmp
je
movl
icebp
cmpsb
outsl
cli
loop
popa
and
xchg
fcoml
pusha
push
insl
clc
fisttps
test
mov
inc
and
mov
decb
icebp
pushl
mov
rclb
mov
insb
add
adc
mov
sbb
stc
fwait
jb
cwtl
pop
mov
sarb
clc
add
mov
dec
cmpsb
sar
loop
and
pop
and
outsb
mov
aad
or
and
rolb
dec
sbb
pavgb
adc
pop
clc
lea
inc
pusha
outsl
nop
int3
jg
mov
sub
addb
push
adc
idivb
xchg
sbb
xchg
loop
clc
call
cwtl
jne
or
xor
mov
or
orb
mov
and
adc
gs
sbb
xor
mov
or
adc
lea
adc
clc
test
cwtl
add
dec
enter
jno
push
insl
fcomip
adc
enter
jnp
xor
out
mov
data16
mov
mov
in
xor
and
add
push
xchg
lock
xor
xor
out
jp
push
ja
adc
mov
mov
mov
loopne
cld
lcall
pusha
test
jb,pt
push
or
adc
aas
adc
or
incb
mulb
jp
xchg
dec
add
dec
fmuls
pushf
fwait
cs
inc
jmp
jmp
out
invd
inc
orl
insb
pop
lock
gs
mov
mov
ss
push
fidivrs
cwtl
adc
inc
sbb
and
adc
fldl
add
add
fidivs
data16
or
incl
inc
or
add
js
jns
add
clc
int
sbb
add
outsl
push
add
dec
gs
mov
rcr
mov
lret
push
add
std
and
push
push
add
add
loope
in
outsl
in
lock
rorb
jns
sahf
je
fnsave
mov
inc
imulb
cwtl
aaa
and
xorl
sti
lcall
jmp
out
jae
mov
in
mov
and
enter
in
stos
or
jp
push
push
mov
xor
js
add
mov
ud0
mov
loope
lods
loop
loope
adc
incl
clc
add
fucom
mov
push
jae
add
rorb
jmp
xchg
push
push
outsb
rorl
dec
stc
adc
lock
ljmp
sub
andb
popa
inc
mov
call
into
cmpsb
inc
add
cltd
mov
push
jp
pushf
jecxz
ficoms
cmp
pop
xor
adc
mov
in
xor
leave
adc
jb
icebp
mov
adc
add
xchg
xor
dec
adc
push
enter
mov
mov
adc
addr16
and
test
push
rclb
jno
loopne
jb
jb
data16
add
popa
fdivr
sbb
push
add
sbb
mov
stc
mov
or
scas
mov
mov
lock
test
pushl
gs
mov
andl
stc
sub
jns
adc
mov
jne
jns
sub
in
shll
cli
xor
shlb
mov
jne
sti
add
fwait
adc
add
or
xor
add
incl
jb
jge
add
enter
xchg
aas
ret
add
fisttpl
lock
dec
lock
lret
or
scas
in
dec
add
mov
sub
or
push
je
xchg
push
inc
jb
xchg
gs
stc
inc
or
pop
push
mov
decl
mov
shlb
inc
scas
shrl
cmp
das
lcall
mov
xor
data16
rcr
push
mov
xor
mov
jbe
fs
inc
jo
loopne
or
push
cmp
mov
rorl
inc
cld
add
push
jne
push
nop
add
mov
jmp
mov
fbstp
add
xorb
mov
in
rolb
lret
or
ja
gs
sub
pop
leave
lcall
out
out
repz
mov
xchg
fcmovbe
pop
enter
sbb
jo
pop
cmc
es
fimull
and
cld
jae
xchg
jp
dec
jg
add
push
push
bound
adc
cmp
in
je
mov
push
out
movsl
mov
pop
adc
mov
push
or
mov
lock
mov
mov
movzbl
cmp
adc
and
insl
adc
pop
and
rclb
stc
cmpsb
in
int
lock
pushf
mov
xor
push
push
decl
jnp
push
sahf
shrb
lcall
call
xor
push
inc
stc
lahf
test
mov
add
in
xchg
xor
or
popf
and
incl
pop
pusha
scas
mov
or
lret
or
and
and
rcll
add
jae
jle
lcall
ljmp
pusha
or
and
jno
add
shll
inc
jno
adc
dec
gs
fistpl
dec
jle
inc
lods
xor
dec
icebp
ja
push
jl
mov
add
popf
in
or
push
rorb
jecxz
mov
sub
mov
dec
fsub
mov
add
pop
stc
popf
out
mov
shl
gs
jo
ficoms
dec
gs
mov
pusha
sbb
push
mov
ljmp
enter
lds
clc
in
ljmp
mov
insb
test
gs
adc
mov
push
cmp
lock
jmp
cmpb
add
cmp
and
cld
cmp
jo
jle
in
das
clc
ljmp
loop
test
mov
add
add
add
mov
ss
sub
rcll
orb
and
dec
pop
xor
add
cmpsb
fdivp
jo
jb
sub
dec
enter
sbb
adc
pop
scas
push
cli
fnstenv
clc
pusha
push
in
loopne
addl
push
adc
lods
mov
push
gs
lcall
push
push
pusha
and
in
into
orb
push
cmc
xor
add
int
sub
xor
pop
gs
in
pushf
sbb
scas
add
in
push
or
rolb
and
call
lods
jnp
bound
mov
push
and
nop
insl
add
add
cmp
cwtl
clc
test
insw
push
call
cmpsb
pop
pop
fstpl
push
ret
or
les
adc
add
mov
sub
fwait
imul
les
int3
push
ja
push
xchg
lds
push
add
xlat
and
mov
sub
add
enter
hlt
icebp
add
int
sahf
mov
into
cmpsl
lcall
nop
sbb
add
add
inc
lock
cmp
mov
inc
add
sub
sub
adc
or
pushl
add
in
idivb
add
adc
roll
imul
clc
lea
sub
mov
pop
mov
or
jg
stc
scas
cld
add
xor
arpl
fwait
jl
std
mov
clc
fbld
andb
or
dec
subb
jnp
clc
or
jp
jb
jb
stc
dec
out
popa
jecxz
jb
and
cmp
mov
stc
lods
cmp
shrb
ficompl
fs
sub
xor
mov
mov
xchg
jb
mov
test
into
add
inc
sar
int3
add
fistpl
mov
dec
movsb
push
add
iret
inc
sbb
pop
lea
in
sbbb
sbbb
xor
out
es
inc
out
jl
in
fbld
cld
pop
or
inc
add
ret
inc
inc
add
sbb
mov
lcall
ret
add
in
sbb
sarl
or
fidivs
in
insb
cwtl
dec
outsl
incl
xor
pop
adcb
adc
pushf
rclb
subb
sbb
clc
lcall
inc
xor
inc
gs
rcll
rclb
ret
lea
pop
insb
jp
rcr
fiadds
fisttpll
push
shrb
jmp
loop
loop
rolb
adcb
sbb
xchg
lock
xchg
jmp
test
dec
pop
loop
or
cmpb
das
jo
std
add
mov
jmp
pop
inc
pusha
sarl
or
roll
les
fwait
cld
out
inc
call
rcrb
adc
mov
mov
add
inc
dec
add
rolb
mov
mov
inc
lea
inc
jp
push
sarb
pop
les
faddl
push
rolb
pop
sub
mov
jne
jae
xlat
clc
jno
aas
decb
mov
inc
or
mov
clc
mov
cmp
mov
pop
add
stc
mov
or
jg
adc
lods
mov
sarb
lcall
insl
xor
aam
adc
popf
data16
ljmp
and
lret
mov
jno
aas
add
sbb
jnp
mov
cmpsb
shll
mov
pop
xchg
jecxz
push
stc
jle
xor
ljmp
shll
xchg
push
dec
add
jnp
test
dec
dec
nop
fisttpll
test
and
dec
mov
sub
or
cwtl
jecxz
push
and
lock
adc
adcl
int
sub
adc
or
sti
and
shrl
popf
push
xor
sbb
test
and
jmp
int3
and
mov
loop
push
add
push
imul
add
mov
cmpb
inc
fsubp
in
mov
leave
inc
or
test
mov
pop
cmpb
addl
idiv
jg
clts
push
push
push
je
cmp
movsbl
enter
mov
es
cwtl
loope
inc
inc
mov
jb
cmp
sarl
xor
ljmp
dec
clc
nop
push
sti
popf
cmpsb
inc
xor
mov
fxch
cmc
pop
in
lock
popa
mov
or
retw
mov
jo
xchg
xor
rclb
vpsubw
push
ds
stos
push
xchg
mov
inc
xchg
nop
push
stos
inc
insb
pusha
lock
fwait
add
xchg
xor
sahf
loop
insl
xchg
lcall
add
adc
adc
stos
bound
out
jge
adc
int
sub
es
adc
add
call
jns
enter
sub
add
filds
add
sbb
inc
dec
mov
loop
dec
andl
mov
cmpsb
dec
stc
and
xchg
mov
lods
addl
mov
adc
dec
mov
pop
mov
jle
mov
add
mov
jne
mov
add
fistl
inc
stos
loop
pusha
aaa
push
jne
adc
or
add
mov
ljmp
or
inc
call
add
lret
cli
mov
out
and
and
and
rorb
push
add
jmp
and
jo
xchg
and
add
inc
or
adc
xchg
or
mov
mov
adc
adc
scas
clc
divb
clc
fld
jl
inc
xchg
and
cmpsb
mov
loopne
cltd
test
add
mov
mov
dec
insl
popf
addb
inc
add
das
aam
and
mov
lods
call
mov
or
pop
rcrb
dec
push
mov
inc
sbb
inc
outsl
mov
adc
cwtl
dec
popf
nop
sbb
loopne
scas
in
mov
sub
mov
clc
cltd
int3
gs
scas
adc
in
aaa
mov
add
dec
jle
xchg
push
jbe
aad
lock
mov
push
mul
jno
cli
add
mov
fmuls
je
cli
leave
mov
cmp
stos
mov
rolb
mov
xor
add
js
and
rorb
adc
rol
and
adcb
lods
dec
je
xor
lods
fisubs
or
rcr
fadds
ret
andl
test
cs
das
push
and
or
jae
arpl
in
dec
dec
cld
add
fists
or
es
nop
add
mov
bound
adc
call
cmp
pop
mov
data16
or
test
pop
test
clc
inc
mov
adc
or
les
mov
or
sub
add
add
push
jp
incl
lods
jo
or
addb
rolb
jo
je
in
in
pushf
repz
and
cwtl
jo
mov
cmp
jl
fisubs
adc
mov
pushf
xchg
add
movsb
adc
push
push
ljmp
mov
mov
adc
mov
test
outsl
jp
mov
push
add
inc
or
xchg
fcomip
add
inc
test
sub
and
adc
add
icebp
out
fs
push
lods
rcll
loopne
mov
inc
fidivrl
mov
roll
je
pop
push
jnp
test
sub
shll
push
call
loop
mov
push
xor
scas
push
or
insl
mov
dec
clc
mov
push
and
fidivl
in
sub
imul
mov
push
dec
popf
or
xor
das
stos
cmp
jbe
add
jge
stc
mov
mov
dec
incl
push
das
adc
push
test
popa
lods
mov
mov
in
add
mov
mov
orb
add
test
push
and
out
jo
jb
cmp
hlt
cmp
cmc
pop
xor
aam
mov
aas
xchg
dec
jnp
jno
loopne
xchg
rorb
jo
addr16
add
sar
add
pop
inc
scas
pop
mov
stc
lcall
and
or
dec
jo
mov
mov
std
fisubl
ficoms
mov
sbb
lcall
sbb
add
adc
je
inc
fbstp
stos
enter
add
cmpb
stc
mov
push
push
std
or
adc
xchg
cli
xchg
push
lds
in
stc
adc
test
jbe
fwait
or
test
xor
xor
push
fmull
and
outsl
pop
popa
loopne
sub
mov
and
mov
jo
xchg
push
mov
nop
add
outsb
popf
xchg
popa
loopne
add
push
or
adc
add
push
das
clc
mulb
inc
adcl
inc
lcall
loopne
push
ret
call
ds
sarl
loope
data16
adc
nop
xor
cmp
out
push
test
pop
and
and
int
fbstp
movsl
add
rorl
push
popa
add
in
insl
add
mov
gs
rorl
popf
push
mov
hlt
mulb
inc
in
xor
pusha
add
roll
inc
sbb
or
adc
jp
sar
sub
in
stos
add
rcr
mov
adc
fimuls
call
in
mov
push
inc
popf
sbb
pusha
xchg
mov
shrb
andb
adc
or
inc
and
mov
dec
jb
test
xchg
mov
push
popa
xorb
mov
xor
lret
add
adc
add
aad
cs
mov
or
int
jb
data16
popf
xchg
push
jmp
test
jno
movsl
nop
xchg
add
mov
incl
add
xor
inc
test
enter
add
incl
shrl
push
loopne
addb
adcb
push
mov
in
push
std
jo
fcmovnu
push
loopne
sub
inc
fisubl
xor
push
adc
jg
into
xchg
xor
xor
data16
or
or
xor
mov
clc
mov
inc
push
daa
loopne
ss
dec
out
adc
pusha
push
sbb
pop
incl
push
gs
add
push
cmp
inc
lea
lods
mov
mov
clc
cwtl
fisubrs
push
or
and
xor
dec
shll
dec
sarl
pop
fs
icebp
and
stc
mov
mov
rolb
mov
test
mov
push
mov
sbb
lret
cltd
pop
or
mov
adc
sbb
xchg
inc
adc
push
sub
xchg
xor
decl
shll
push
push
popa
xor
cli
idiv
add
cmp
ja
loopne
pop
clc
adc
popf
xchg
ja
adcl
dec
cltd
jno
scas
add
add
sub
outsl
mov
test
adc
or
dec
jb
add
add
faddl
mov
int
shll
xchg
sub
cltd
mov
lret
mov
loopne
sbb
or
mov
and
pop
lds
sub
mov
mov
push
rcrb
push
inc
inc
loopne
dec
adc
ljmp
in
fiadds
clc
jns
std
lcall
or
inc
icebp
xchg
lock
lods
mov
addb
icebp
js
incl
pushf
gs
lods
jb
push
addb
lds
add
pop
dec
mov
mov
cmc
subb
push
mov
add
int
stos
les
xchg
push
fldl
mov
clc
sbb
pop
mov
cli
xchg
std
loop
icebp
das
cmp
jl
jg
sti
popl
lock
lcall
mov
addb
or
mov
test
addb
pop
mov
or
cmp
popf
test
in
repnz
or
enter
jb
fildl
gs
push
int3
cmc
jg
cmp
jnp
mov
out
hlt
sbb
fsubl
add
outsl
incl
sbb
andb
add
lret
test
fiaddl
roll
bound
fstpl
setge
dec
add
dec
mov
or
dec
rcl
dec
add
mov
add
gs
neg
lods
cmpl
repz
rdmsr
dec
popf
or
inc
mov
fimuls
jb
add
sub
popa
lcall
orb
adc
xor
pop
xchg
push
dec
mov
repz
std
push
mov
pop
jo
inc
out
mov
cmp
clc
aad
inc
subl
and
ja
pop
dec
xchg
dec
cmp
dec
scas
inc
fstpt
jp
mov
push
lods
sbb
andb
add
mov
data16
xchg
stos
sbb
jp
ss
mov
std
pop
sub
inc
insb
andb
push
push
dec
dec
xchg
call
aad
ds
or
mov
sbbl
loopne
std
rolb
push
add
rolb
dec
or
inc
std
cltd
dec
mov
adcb
les
xchg
or
outsl
add
callw
mov
push
lret
sbb
mov
xorl
lahf
sbb
insl
push
sbb
cltd
mov
mov
out
push
ret
or
test
outsb
push
fiaddl
lds
fidivrs
push
ret
pusha
fldl
jg
dec
mov
xchg
and
dec
add
sbb
add
in
jmp
icebp
mov
icebp
pop
fisttpll
lods
jle
pop
or
cld
jns
out
ficoms
clc
push
shrb
xor
cmpsb
lods
out
mov
sahf
mov
insl
and
inc
lea
pop
jno
mov
inc
add
fldt
test
enter
dec
pop
test
cmpsl
add
xor
cmp
xchg
cli
je
push
rorb
lock
jge
jle
add
add
mov
xchg
pushl
add
dec
inc
dec
mov
gs
rorb
adc
adc
addb
rcrb
xchg
jle
inc
fiaddl
mov
movsb
cmp
sub
xchg
aaa
add
stos
pop
addb
push
push
xor
clc
pushf
or
rcr
fnsetpm(287
and
mov
add
add
fcmovu
mov
mov
mov
or
cwtl
faddp
and
outsl
je,pn
push
add
ss
mov
sub
lret
lret
cmp
test
lcall
jp
lods
fisttpll
inc
xchg
xor
dec
call
sub
push
and
inc
lods
add
testb
or
push
add
xor
loopne
cmp
sub
lock
and
rol
push
sbb
and
cld
jbe
ljmp
xchg
push
nop
add
add
xchg
add
push
add
xor
lds
push
arpl
fildl
pushl
jg
fdivl
loopne
xchg
add
sbb
fs
leave
mov
aam
fnstsw
dec
xchg
mov
or
gs
pop
or
jecxz
add
bound
insb
cs
dec
and
sti
shrl
pusha
daa
gs
pusha
and
inc
inc
jne
sub
js
push
and
gs
push
mov
clc
jle
sbbl
add
add
pusha
add
mov
mov
das
xor
fs
xchg
cs
fisubrs
out
mov
cmp
xor
icebp
inc
pusha
add
xchg
push
push
aad
jg
cmp
and
gs
inc
add
xor
fbstp
and
fldl
sub
add
mov
es
lods
jo
xor
aam
mov
xchg
loope
xor
mov
inc
hlt
add
imul
jno
je
xor
and
dec
mov
add
or
mov
dec
add
inc
js
adc
jg
and
cmp
ss
aaa
cld
popf
jle
adc
push
add
scas
add
adc
fwait
fwait
data16
adc
rcrb
fsub
rcr
mov
and
lock
pusha
pop
ljmp
in
add
pushf
shll
lea
mov
push
sbbb
in
and
add
jecxz
xchg
je
es
outsl
sahf
clc
cltd
out
push
popa
add
add
cli
mov
movsl
pusha
adc
push
push
pop
mov
mov
xchg
push
mov
jp
and
jmp
clc
xchg
cmpsb
andl
mov
in
cltd
push
lret
jbe
jbe
shrb
sub
jge
out
pusha
inc
sbb
jg
jne
shlb
out
lea
clc
stos
test
push
fiadds
sbb
sub
sub
jno
mov
enter
jmp
jle
jne
test
push
ret
orb
rorl
test
loopne
lock
test
push
pusha
push
and
mov
data16
sbb
pop
lcall
aaa
std
mov
mov
sbb
popa
push
fiaddl
in
sub
lock
pop
fmul
or
shl
push
adc
sbb
fs
cmp
andb
inc
sbb
adc
sbb
jne
rcrb
jbe
add
sbbb
inc
inc
sbb
sbb
cld
outsl
clc
cmpsl
adc
sbb
inc
sub
movsb
fisubs
shlb
shrl
incl
and
loopne
cwtl
cwtl
popa
stc
cs
xchg
add
mov
inc
fmul
pusha
pcmpeqw
outsl
sbb
shll
gs
xorb
cmp
mov
and
clc
in
mov
mov
and
xorb
pop
mov
loope
rolb
jb
mov
push
adc
cmc
pop
jo
sub
add
mov
mov
jns
sub
stos
and
ret
add
outsl
lcall
pushl
or
adcb
and
xchg
shll
decb
inc
test
and
int
jo
in
adc
sub
dec
popl
xor
sahf
jnp
jg
lcall
push
and
leave
in
and
sub
adc
and
xor
cs
call
add
pop
add
push
mov
clc
mov
dec
or
inc
roll
pop
rcr
mov
aas
and
cmp
cmp
test
pusha
and
sbbb
push
adc
lds
decl
jne
clc
mov
add
gs
xlat
mov
mov
lcall
fdivl
ja
loopne
std
stos
mov
rorl
rolb
or
pop
ja
in
decl
stos
loopne
adc
mov
mov
pop
mov
stc
stos
ljmp
xor
xor
addb
popf
mov
fcoml
push
loopne
mov
or
mov
push
cmc
jo
xor
in
mov
xchg
ja
add
sub
int
stc
lret
lcall
gs
sbb
pop
adc
packsswb
subb
nop
push
outsb
pushf
sub
push
repnz
or
push
and
incb
push
lds
pop
shll
push
mov
xor
jo
dec
dec
pop
add
inc
jbe
cwtl
nop
or
jbe
pop
mov
xchg
push
rolb
data16
add
inc
push
rep
jns
cwtl
fldl
adc
add
lcall
inc
xor
adc
jp
inc
add
in
stc
mov
jne
mov
insb
push
movntq
fnstsw
pop
add
lret
pushl
fsubs
and
mov
orl
adc
ret
and
and
cmp
push
push
add
fcomip
pushl
or
data16
mov
mov
fcmovnu
mov
ss
movsb
and
mov
inc
add
inc
and
add
loopne
pushl
jmp
add
negb
or
pop
adc
lock
sbb
xchg
in
imul
mov
or
shrb
push
pop
loop
jg
scas
push
xor
int
ss
push
or
test
cs
dec
fs
push
insl
jns
shrb
and
fcmove
inc
es
cmc
mov
or
cli
icebp
mov
test
icebp
lods
iret
mov
dec
fucom
test
xor
sti
mov
jb
mov
nop
cmpxchg
pusha
mov
fs
test
and
fimull
aad
lock
or
fisttpll
mov
or
enter
add
mov
mov
add
popf
or
jbe
lret
xchg
lcall
les
mov
divb
add
mov
add
mov
push
lock
dec
or
ja
shlb
incl
mov
mov
nop
jmp
lock
jb
push
mov
adc
fiadds
mov
add
dec
jae
add
cmpb
xor
mov
jmp
inc
or
cli
mov
repz
hlt
sub
or
out
orb
mov
or
lret
nop
pop
adc
dec
test
mov
nop
rcrb
inc
add
rorl
rcll
push
cmpsb
mov
xchg
add
adc
outsl
mov
fs
pushf
pusha
mov
jge
xor
xor
data16
lret
push
mov
mov
fdivrp
and
pop
xor
or
push
push
movsl
pusha
or
add
mov
mov
cmp
add
adcb
aaa
inc
outsl
add
push
addl
data16
data16
addb
xchg
and
pop
pusha
rclb
adc
jle
icebp
sbb
aam
or
fwait
loop
adc
sbb
adc
mov
and
mov
push
mov
lods
stc
jae
add
popl
xchg
test
mov
icebp
jg
jg
nop
mov
enter
xchg
test
jb
test
es
mov
fistpll
add
xchg
dec
pusha
into
mov
rcrb
cs
mov
aad
sarl
add
inc
out
mov
push
mov
mov
add
mov
push
ds
mov
clc
imul
test
test
cmp
push
pop
dec
cmp
aad
cwtl
lcall
and
aad
stos
sbb
lock
cltd
rorb
xchg
jno
push
popa
test
dec
pop
hlt
jbe
sub
xchg
gs
fcmovb
mov
jg
jl
shlb
and
dec
popa
jo
loope
fs
les
mov
flds
rcr
lcall
jp,pn
add
mov
pop
jb
pushf
shlb
ret
push
inc
test
mov
fidivs
mov
jb
mov
enter
sbb
mov
shrd
adc
add
repz
in
sub
clc
pushf
ret
fldenv
clc
push
repz
push
jno
or
or
fbld
inc
lret
cltd
push
fistpl
fsubrl
shlb
stc
xchg
push
push
mov
stos
addl
xor
nop
sub
mov
imulb
inc
or
nop
shrb
push
fs
jl
and
add
insl
mov
xor
push
leave
mov
dec
jbe
mov
inc
in
imul
adc
addb
mov
incb
xor
icebp
push
mov
cmp
mov
in
int
lret
or
mov
sarb
andl
mov
jo
in
jbe
xchg
jb
andb
adc
clc
popf
inc
adc
lock
xorl
cmpsb
mov
test
gs
sbb
inc
push
test
sbbb
sti
pop
std
cmp
push
pop
xor
add
into
gs
pop
std
pop
lock
sbb
pop
and
and
repz
add
imulb
clc
and
mov
popf
mov
push
jnp
xchg
mov
adc
jg
jae
add
lret
dec
shlb
push
or
inc
xchg
mov
sub
ds
lret
and
mov
stc
jmp
insl
cmpsl
enter
jne
ss
lds
add
sub
push
mov
push
xchg
jnp
or
add
lret
mov
mov
adc
xchg
add
inc
aam
test
fcomps
mov
mov
sbb
add
inc
testb
add
push
clc
mov
jg
incb
mov
add
push
jmp
addl
add
loope
lods
gs
inc
lcall
dec
cs
mov
mov
add
data16
icebp
add
stc
add
loop
rolb
inc
pushf
sub
mov
ret
cmpsb
fisttpl
or
mov
sbb
mov
loopne
mov
add
pop
or
call
lcall
test
fiadds
mov
pop
fadds
imul
roll
mov
jb
jo
or
mov
add
add
test
sbbl
sarl
jmp
fldenv
incl
or
or
add
dec
inc
adcb
mov
fdivs
add
jnp
inc
fmul
mov
test
dec
and
shlb
dec
mov
push
and
aas
jo
mov
xchg
add
mov
fsubs
ret
sub
mov
adc
mov
into
mov
call
xor
mov
divb
test
fildll
lret
subb
imul
push
cld
mov
xor
or
gs
or
shl
dec
leave
mov
es
loopne
dec
push
adc
jp
add
dec
ret
cli
iret
pusha
mov
push
jl
int3
adcb
gs
fisttpll
lock
in
add
mov
sbb
jb
cli
sbb
test
jp
or
mov
ljmp
mov
adc
jae
mov
inc
sbbl
mov
popf
insb
fwait
jp
jb
jne
std
mov
add
sbbb
xlat
dec
ljmp
mov
pop
and
cmp
mov
sub
push
int3
jb
add
scas
dec
jecxz
loop
or
inc
dec
mov
movsl
xchg
clc
in
mov
cmp
cltd
sbb
inc
and
jl
scas
lret
mov
jmp
push
add
push
mov
insb
bound
and
data16
mov
xchg
jno
rorb
or
jns
daa
and
les
inc
inc
fstps
call
mov
pushf
ljmp
mov
hlt
nop
rcl
or
test
mov
adc
mov
jno
xchg
in
stos
and
lcall
test
rclb
mov
add
orb
subb
sarl
ret
fwait
pushf
fisubl
in
cli
in
and
pusha
mov
adcb
lock
lcall
mov
pop
xor
lcall
mov
insl
pop
inc
loopne
incl
cli
pop
sbb
add
or
sbb
inc
or
adc
inc
add
inc
mov
je
lcall
sbb
adc
jp
cmpb
das
mov
pop
movsb
inc
fstl
gs
aam
mov
fdiv
sub
mov
psubw
clc
adcb
aad
ror
jle
data16
jb
lcall
xor
andb
mov
je
mov
loope
aam
mov
mov
mov
fisubl
push
std
inc
pop
add
pop
inc
pop
orb
ret
mov
or
mov
pop
inc
aaa
or
mov
cmp
or
insb
pusha
sub
dec
out
cli
lea
lret
les
mov
frstor
nop
nop
inc
sbb
xor
jnp
mov
sbb
mov
cmovo
loopne
xor
dec
xlat
fdivrs
jmp
push
fildl
inc
adc
shrb
test
push
sub
or
dec
jbe
xchg
and
cmpsb
lds
pop
or
mov
push
mov
in
orb
or
add
sub
jns
add
lret
sub
repnz
das
add
jbe
enter
pusha
dec
dec
push
cmc
into
sbb
incl
and
stc
inc
mov
fcmovb
outsl
mov
jmp
inc
test
mov
into
aas
add
popa
test
jne
loopne
mov
mov
cmp
icebp
orl
aaa
repz
loope
xor
mov
sbb
sub
int3
mov
lods
testb
mov
sarl
inc
sar
sbb
gs
and
mov
decb
in
dec
mov
add
adc
adc
jb
jg
jle
mov
sbb
insl
and
test
jecxz
fidivs
popa
outsl
in
cmp
jb
cmpl
jp
incl
xchg
loop
imul
movsl
xor
lock
mov
in
xlat
mov
test
je
jmp
lcall
cmp
leave
mov
fnsave
daa
add
sbb
inc
push
inc
cmp
push
test
add
add
decb
fimull
mov
sub
rolb
and
push
add
mov
jle
sti
fwait
push
add
adc
roll
stc
orb
sub
push
sbb
push
gs
cmpsb
andl
pop
clc
xchg
lock
ja
dec
insb
xchg
and
sub
aaa
sti
bound
add
hlt
cmpsb
or
mov
adc
xor
stos
lock
fdivr
pushf
fimull
inc
ret
mov
push
sar
cmp
or
and
dec
add
aad
inc
adc
andb
test
or
jo
pushf
jnp
dec
sub
rorb
push
out
leave
or
outsb
mov
enter
mov
pop
cmc
mov
outsb
fs
adc
add
cmp
adc
popa
ds
mov
aam
sbb
sti
and
cmp
cwtl
mov
or
insb
flds
aam
adc
mov
jmp
lods
std
or
add
sub
push
icebp
jo
je
mov
inc
push
rolb
add
cli
or
inc
pop
push
mov
fsubp
push
int3
movsb
sub
jg
test
into
xchg
pusha
or
subb
sbb
mov
pushf
lret
jno
adc
data16
inc
dec
mov
test
push
sbb
fwait
clc
ljmp
or
sti
loopne
cmp
js
push
addl
test
cmc
rol
add
or
sub
or
cli
push
pop
sbb
and
add
add
add
adc
add
inc
mulb
jo
hlt
inc
push
mov
mov
pop
mov
pop
rcll
mov
inc
or
loopne
popf
fbstp
mov
adc
fisubl
test
cwtl
push
add
das
cli
mov
notb
seto
or
jnp
jne
imul
sub
and
imul
push
mov
in
and
or
cmp
or
push
jge
add
mov
mov
enter
adc
inc
add
inc
add
pop
xor
add
lahf
and
jo
rorb
push
fdivl
adc
inc
fisubrl
push
pop
sub
in
jo
jp
cld
mulb
mov
mov
xchg
xchg
push
jo
cs
pop
mov
pop
pushf
rorb
push
sbb
and
mov
add
lcall
test
sbb
fsub
pop
fidivl
push
pop
sub
stos
addl
add
push
ljmp
add
jb
dec
out
fcmovb
dec
pop
ffree
cli
pop
loopne
ds
enter
push
popa
jo
negl
push
mov
lods
cwtl
push
jne
or
mov
int
fidivrl
fildll
adc
push
push
add
mov
cmpsb
rclb
fwait
jmp
cmp
enter
add
add
fmull
mov
push
lock
loopne
cmp
xchg
adc
push
icebp
add
stos
rolb
add
mov
popa
add
mov
in
push
push
inc
cbtw
adcl
push
jb
nop
sarb
std
mov
pop
loope
sbb
test
lods
jo
pop
dec
pop
and
popa
dec
int
sbb
add
sbb
inc
sti
aaa
out
into
loope
jle
fidivl
sub
adc
xchg
cld
sub
add
inc
les
mov
loopne
push
sbb
dec
sbb
mov
cmc
sub
mov
xorl
add
std
lods
push
test
adc
mov
and
or
add
clc
mov
insl
in
add
sbb
push
pop
lock
xor
lahf
pusha
adc
stc
sub
add
out
cli
pushl
sbb
ret
mov
push
test
imul
incl
inc
pushf
push
aaa
jae
test
add
or
outsl
adc
pusha
pusha
orb
cwtl
add
incl
jecxz
push
mov
and
pusha
pop
add
add
mov
add
mov
mov
xor
pop
mov
lcall
aam
pushf
data16
xchg
out
inc
test
gs
shrb
fbld
pop
push
or
and
js
jg
repz
push
movsb
xorl
fcomi
mov
lods
shlb
cmp
lret
xorl
fucomi
sub
fisubs
pusha
push
nop
sub
cltd
mov
mov
push
and
inc
lock
cmpsb
jbe
cmp
lock
adc
cld
mov
adc
lcall
xlat
inc
lds
insb
mov
dec
push
xchg
push
push
mov
pmullw
adc
sub
add
nop
adc
xchg
adc
mov
fs
push
mov
fcom
or
push
sbb
fsub
add
xchg
decl
lret
mov
test
push
sub
xchg
cmpb
jle
lock
notl
xor
test
or
dec
insl
pusha
dec
fidivs
inc
dec
pushf
adc
je
push
jl
and
and
jle
out
shlb
inc
or
push
movsb
sahf
call
lcall
jno
lcall
insl
xchg
mov
fisubs
bound
or
mov
jns
repnz
inc
mov
nop
or
add
or
mov
push
mov
pushl
cmp
stos
out
shl
gs
xor
or
jnp
popf
stc
inc
xorl
pop
xchg
cld
mov
pop
out
inc
cmp
adc
mov
inc
dec
or
and
pushl
push
repnz
mov
inc
mov
pop
icebp
decl
mov
and
mov
clc
adcl
or
add
test
scas
ss
dec
xor
pop
adc
or
add
stos
pop
shl
cwtl
and
adc
xor
lock
push
push
xchg
subb
mov
push
jmp
or
in
mov
push
gs
loopne
fucomp
cld
mov
ret
xchg
jmp
dec
test
lea
roll
gs
and
dec
rclb
jo
mov
clc
lods
inc
testb
xor
sti
mov
adc
fidivrs
ret
add
and
xchg
mov
pop
add
mov
dec
mov
daa
aam
fiadds
addb
loopne
mov
add
fsubrl
jl
mov
lods
dec
cwtl
sub
into
fsubr
add
push
push
popf
jo
adc
int
loopne
nop
mov
and
cmpsb
push
cltd
mov
or
les
mov
out
sub
xor
test
or
data16
pushf
push
sbb
mov
sub
es
gs
add
rcr
xchg
je
add
aam
inc
aas
mov
loopne
adc
add
out
mov
sub
and
add
mov
dec
mov
add
dec
out
mov
lods
imulb
sub
push
fisubrl
mov
mov
and
out
add
in
inc
decl
jo
xor
jno
and
jl
cmp
cmp
test
sub
cmpb
add
jl
xchg
mov
add
js
add
data16
sub
jle
mov
mov
mov
addb
add
ret
mov
adc
xor
add
lods
pop
inc
xor
pop
ret
pusha
push
mov
adc
push
or
jb
ret
add
adcl
jne
inc
sbb
aaa
sub
pop
add
fldl
adc
in
aaa
lods
sarl
xchg
ficoms
fldl
push
orl
cli
popf
mov
rolb
inc
add
xchg
ret
add
mov
loopne
push
pop
add
inc
jmp
cltd
test
inc
push
adc
add
or
mov
push
inc
mov
testb
add
push
mov
add
lock
add
fsubp
fstp
out
addl
jnp
mov
jns
pop
cs
lods
or
popf
aam
mov
xchg
test
add
rclb
and
add
push
fidivrs
fmul
xchg
adc
sbb
mov
add
into
jnp
push
mov
add
fcmovnb
sarb
add
and
cmpsb
popf
dec
mov
addl
inc
or
add
add
cmpb
mov
sbb
adc
mov
mov
push
addb
pop
add
jo
pop
ss
and
push
test
inc
cmp
cld
lods
ffree
jg
pop
dec
dec
inc
aam
push
and
and
add
pop
lock
and
pop
and
mov
inc
and
into
mov
gs
and
insb
push
add
jo
clc
call
inc
data16
cwtl
add
fiadds
mov
nop
jl
xor
push
lods
rorl
xchg
insl
mov
push
clc
mov
push
icebp
mov
popa
inc
xor
test
jo
incb
inc
test
cmp
inc
cld
fimuls
jle
pusha
add
cwtl
loope
inc
imul
in
inc
test
push
test
mov
push
je
lods
or
rol
mov
cmp
int
jb
mov
sub
jo
mov
mov
cld
popl
cmp
add
pusha
add
repz
adc
stc
inc
or
or
push
stc
add
adc
jmp
add
jl
mov
inc
and
int
cmp
xor
sarl
inc
psraw
cltd
add
mov
sbb
xchg
popa
add
mov
ja
test
xchg
add
mov
lods
in
add
aad
mov
sbb
leave
sbb
pop
jecxz
or
adc
sub
xchg
lea
insl
inc
and
fs
les
pusha
es
mov
jns
xor
popa
sub
inc
movsb
dec
jecxz
sub
jae,pt
sub
push
pusha
jge
xor
jno
push
xor
stc
xchg
sub
mov
js
or
and
lock
pop
icebp
inc
mov
orb
sub
dec
loopne
or
add
mov
cmpb
cmpsb
adc
jno
sub
hlt
mov
sub
fadds
inc
and
loopne
push
push
out
cmp
dec
std
add
xor
out
fiadds
or
and
loopne
and
lea
faddp
pop
push
xor
adc
mov
or
xor
mov
mov
loopne
dec
dec
loopne
test
push
jl
mov
push
out
add
jne
clc
mov
or
gs
add
or
mov
add
push
xchg
loop
fiaddl
mov
add
and
test
push
mov
xchg
jmp
add
add
sbb
push
ds
or
add
rolb
out
xorb
es
ljmp
mov
pop
sub
jns,pn
add
dec
add
push
dec
push
ja
xor
faddp
sub
addb
cmpb
add
outsb
adc
and
inc
push
pop
xchg
and
add
or
addr16
and
lds
sub
stc
inc
inc
je
ss
add
int
adc
push
aam
addr16
loop
xchg
addb
or
or
or
or
inc
or
sub
in
aaa
dec
and
or
push
mov
loopne
xchg
adc
gs
cmp
xchg
jbe
ljmp
add
out
test
sub
cli
in
lret
adc
pusha
xchg
sbb
shlb
and
fdivr
fildll
gs
fcmovnb
cmp
ss
or
add
mov
mov
inc
mov
gs
or
add
in
shlb
jmp
mov
dec
cmp
mov
mov
or
mov
popa
xchg
xor
mov
nop
add
sbb
ljmp
enter
sbb
gs
shrl
outsb
ljmp
aam
dec
enter
pop
or
add
ss
mov
lods
rcrl
fdivs
and
data16
lret
sub
loope
js
orb
jnp
mov
inc
ljmp
inc
movsb
int
movsb
mov
gs
rorl
ficompl
push
mov
or
xor
sbb
inc
jb
test
dec
jge
xorl
gs
testb
dec
fs
out
jo
repz
pusha
push
xor
bound
add
test
loope
lods
pop
test
rclb
dec
adc
dec
cmp
pop
jbe
jle
das
push
sbb
cmpl
mov
shrb
xrelease
testb
inc
out
out
ljmp
pop
mov
mov
dec
jmp
test
sub
imul
fbstp
or
sbbl
jne
fs
test
push
fs
in
icebp
add
lods
pop
mov
jl
rorb
loope
clc
mov
pop
nop
sbb
add
push
add
sbbb
jnp
sarb
pop
test
mov
aaa
std
inc
rclb
addb
adc
ret
cli
dec
cld
push
roll
std
dec
outsl
out
mov
jo
outsl
mov
adc
xchg
out
mov
pop
aam
jp
mov
clc
into
rolb
jg
and
decb
shrl
stc
mov
pop
std
pop
cwtl
push
orb
clc
addr16
pause
and
pop
gs
bound
pop
popf
stos
push
scas
imul
ret
adc
adc
inc
sbb
mov
mov
push
nop
jo
shrb
gs
jge
es
incl
or
push
add
lret
add
lock
inc
repz
push
add
adc
gs
add
aam
lods
loopne
pop
adc
dec
rcrl
push
fcos
stos
lods
xor
cmp
fnsave
faddl
and
cmpb
pop
sbb
sbb
inc
gs
dec
cli
sbb
cmp
fbld
mov
int3
add
or
jl
sub
add
int
and
icebp
lock
add
mull
or
mov
xchg
mov
push
lock
or
ficoms
add
push
add
sub
add
addb
pusha
cld
into
leave
add
push
in
inc
test
aad
cld
lock
mov
mov
add
and
outsb
loope
push
push
mov
out
cltd
add
push
add
jp
inc
repnz
mov
sub
sbb
gs
data16
push
xchg
rcrb
mov
loopne
mov
mov
adc
fcomip
mov
push
popf
rorl
loopne
adcl
ret
push
push
mov
call
pop
or
xor
loopne
inc
mov
lcall
add
orb
xchg
dec
ret
push
arpl
mov
add
shlb
jecxz
push
push
mov
push
dec
rclb
pop
sbbb
add
xor
or
inc
sub
pop
inc
cld
out
adc
das
adc
fcoml
add
jp
inc
mov
and
mov
mov
icebp
jo
dec
jo
adc
xor
ljmp
lods
icebp
add
push
push
std
icebp
jb
loop
loopne
enter
or
pop
push
cmp
enter
push
add
lock
and
incl
jo
aad
cli
xor
and
or
loopne
mov
bound
in
lock
hlt
add
push
data16
push
lret
push
jg
mov
lds
dec
mov
sub
mov
loopne
stos
fisttpl
sbb
dec
nop
push
dec
jno
sarl
adc
pop
clc
xchg
push
jmp
pop
add
fwait
add
sbb
xchg
mov
cmpsb
jo
cs
push
je
mov
icebp
add
test
adc
jle
push
icebp
adc
and
inc
insl
ret
fwait
push
outsb
add
and
push
and
inc
imul
test
pusha
add
iret
movsb
add
movsb
mov
mov
mov
insl
mov
sub
ljmp
in
add
call
mov
xor
mov
pop
push
enter
pusha
jp
outsl
xor
addb
add
ret
lock
fmuls
inc
pop
and
add
dec
dec
push
in
jg
dec
imul
adc
fst
das
jge
mov
subb
xorb
dec
cltd
incl
xchg
adc
add
gs
mov
add
icebp
lock
gs
clc
add
icebp
jg
mov
adc
dec
popf
rorb
das
sar
ljmp
ror
mov
or
dec
add
inc
mov
inc
cld
call
pusha
push
jp
faddl
fsubr
xchg
add
mov
clc
stos
ficoml
fmul
xchg
gs
add
aaa
fdivrs
shl
dec
stos
test
push
jne
mov
add
incl
addr16
jp
stc
cmp
adc
loope
or
nop
nop
nop
sahf
jnp
ljmp
outsb
inc
push
adcb
pop
lahf
gs
or
xchg
mov
fidivs
xchg
lea
jb
mov
jg
data16
or
aam
mov
inc
and
mov
or
mov
adc
hlt
fwait
gs
add
vpmacsdql
decl
andb
sarb
mov
clc
xchg
loopne
cltd
adc
add
add
jb
mov
push
loope
fs
add
push
rcll
jo
push
lock
rolb
mov
mov
idivb
stos
jo
push
and
xchg
pop
inc
sahf
stc
xchg
or
mov
lock
jg
adc
mov
adc
inc
cwtl
add
add
mov
test
gs
rorb
push
and
mov
outsl
sbb
add
adc
pop
pop
sti
sbb
push
push
loopne
mov
int
sbb
or
cli
xchg
pop
sbb
mov
sub
or
adc
push
sub
sbb
jnp
rcll
fdivs
dec
mov
add
test
imul
bound
push
aaa
or
mov
in
push
bound
ss
pop
or
cli
cmpsb
cltd
add
mov
mov
jne
fdivrp
xorb
test
push
out
add
cltd
inc
sbb
add
push
xchg
add
pop
jo
enter
add
or
sbb
lods
push
rcll
idivb
and
dec
add
in
add
decl
icebp
mov
jg
add
sub
jg
sbb
loopne
jle
push
shlb
aas
outsb
xor
sbb
sti
jmp
cli
scas
popf
cmp
inc
add
adcb
pop
adc
cmpl
pop
aam
cwtl
add
adc
sbb
ret
jo
sbb
clc
mov
add
js
xchg
mov
popf
fdiv
inc
dec
nop
or
xchg
stc
ss
and
push
sbb
in
ja
jl
push
jb
decl
xchg
adc
sar
mov
test
jle
mov
add
mov
arpl
sbb
mov
mov
mov
or
or
cmpsl
pusha
mov
cmp
std
mov
and
mov
inc
lock
pushf
rorl
cmp
mov
orb
roll
orb
les
cld
adc
fadd
addb
in
cmpb
pinsrw
dec
mov
jmp
adcb
sbb
or
loop
out
add
dec
cmp
les
cltd
ret
ss
ficompl
popf
test
lret
add
movsb
jnp
pushf
or
imulb
jle
lods
rolb
orl
mov
aaa
in
xchg
jmp
in
test
xchg
inc
xor
notb
sub
rcrb
lret
cmpsb
lea
jp
inc
add
fimuls
inc
gs
lock
push
orb
jnp
inc
add
pop
xchg
and
ret
lock
inc
pop
mov
pop
sub
lods
mov
rcll
adc
inc
outsl
test
add
movsl
hlt
and
add
cmpb
mov
addl
pop
sub
sbb
mov
loopne
roll
or
push
clc
add
outsl
sar
mov
push
je
add
add
je
stc
lahf
adc
sub
push
cltd
sub
stos
inc
pop
dec
xorb
pop
insb
nop
inc
aad
or
xchg
sbb
jnp
adc
rcr
outsb
dec
movsb
clc
jg
fwait
xchg
test
push
insb
mov
sbb
lds
sub
sub
xor
and
or
sarb
repnz
push
clc
mov
push
pusha
push
push
std
mov
inc
incl
shlb
ljmp
pop
mov
pop
hlt
sbb
arpl
push
cmpb
pop
inc
adc
fimull
ret
fimull
cwtl
addb
pop
mov
lds
dec
loope
mov
add
mov
fisttpll
sub
pop
fprem
xchg
add
mov
jmp
adc
loop
mov
pusha
add
jno
jmp
lods
rolb
dec
lcall
and
shrb
fs
pop
or
push
push
popa
add
sti
adc
add
pusha
xor
xor
inc
push
mov
mov
adcb
add
mov
lea
negb
add
test
in
add
test
and
icebp
push
insb
inc
into
inc
mov
cli
fsubr
xorb
movsb
sar
in
jg
mov
push
loope
xchg
and
mov
data16
lcall
mov
mov
lods
jmp
pop
jmp
dec
inc
xchg
dec
in
jmp
cmp
and
and
fstpt
cmpsb
enter
adc
add
fs
mov
and
mov
sti
sub
inc
push
mov
cmp
push
mov
pop
orl
mov
cltd
adc
sbb
pop
icebp
add
mov
add
cltd
xor
jg
int3
loopne
and
stc
mov
xchg
sbb
dec
and
or
loopne
in
ret
and
adc
movsl
mov
sbb
mov
add
lahf
adc
gs
stos
js
mov
inc
adc
aas
int3
adcb
cwtl
mov
addb
aas
push
addb
loopne
bound
push
sti
cli
jle,pn
repnz
rol
stc
mov
stc
mov
sti
mov
test
jle
jo
inc
lahf
shlb
lea
or
fildl
xor
js
out
add
or
adc
mov
add
push
mov
ret
lds
pushl
mov
or
add
jne
fucomi
fs
mov
push
or
pop
mov
adcb
andb
cmpsb
decl
jge
iret
andb
push
inc
xchg
mov
adc
sahf
inc
and
roll
mov
clc
sti
cmpsb
mov
leave
push
ja
clc
inc
xchg
add
clc
inc
outsl
orb
jl
sbb
push
cli
icebp
scas
imul
loopne
cli
fstpl
adc
sub
add
add
imul
scas
mov
in
loope
mov
ss
mov
inc
or
fs
mov
mov
sahf
insb
fs
or
outsl
pushf
xor
sbb
outsb
in
aaa
push
mov
add
add
cmpsl
mov
sub
decl
adc
andl
sbb
incl
enter
push
pop
rorw
add
insb
or
addl
xor
and
mov
add
mov
int3
mov
stos
or
push
add
inc
add
lods
icebp
dec
call
and
or
adc
scas
mov
xor
jno
and
pop
jo
inc
lods
xor
sbb
fstpt
and
jmp
mov
dec
subl
add
rolb
mov
div
pop
cld
sbb
adc
leave
mov
add
jbe
insb
fucomip
stos
fwait
push
add
subb
xor
adcl
add
in
js
adc
push
jle
inc
ss
mov
ss
inc
push
or
cmp
or
adc
mov
jp
inc
add
or
ds
add
lds
adc
add
notl
scas
or
dec
push
xor
push
fsubrs
loopne
xchg
ds
mov
and
stc
sub
mov
mov
aam
xchg
lods
roll
mov
xor
xchg
sahf
mov
addb
push
aad
add
paddw
cs
add
push
mov
mov
add
fbstp
fs
add
push
fldl
decl
jno
add
add
inc
and
fwait
mov
mov
add
push
outsl
mov
and
repnz
or
rcrb
pushl
sbb
movsl
add
dec
sub
fcoml
mov
mov
lods
fmuls
rolb
and
les
loope
mov
push
xor
add
out
outsl
fwait
pop
jnp
add
sbb
lods
push
pushaw
push
int
pop
scas
adc
pop
mov
imul
lock
sub
mov
xchg
scas
inc
push
jecxz
add
mov
or
mov
inc
stos
xchg
add
push
push
jecxz
stos
push
call
outsl
mov
add
or
sbb
mov
hlt
mov
lock
pop
sbb
jbe
adc
or
xchg
or
pop
loopne
test
cltd
adcb
jo
cmp
mov
outsl
mov
mov
mov
subb
cltd
adc
loopne
loopne
rolb
push
add
sbb
push
sbb
mov
pop
std
or
inc
pop
add
pop
inc
adc
fisttps
rolb
add
jle
pop
mov
add
jb
and
dec
dec
out
inc
and
or
fdivp
outsl
cmpsb
insl
mov
repnz
jmp
jecxz
fadds
sub
in
push
ja
xor
shrb
jo
adc
mov
xor
iret
sub
icebp
adc
mov
cld
aad
leave
test
or
incl
pop
add
pop
decl
in
pop
sbb
sarb
mov
add
mov
push
add
add
adc
xchg
pop
js
or
mov
daa
incl
adc
sub
add
adc
sub
mov
cwtl
mov
daa
jg
mov
xchg
adc
sub
mov
cmpsl
scas
mov
jecxz
or
negb
mov
xor
ja
in
adc
add
test
mov
jmp
fwait
mov
xor
ds
mov
outsl
sahf
xor
fistps
mov
xor
cmp
loopne
xor
xchg
cmp
mov
sbbb
and
mov
mov
jp
push
or
mov
or
lcall
inc
sti
jnp
sub
cltd
loope
test
inc
sbb
pop
push
cmpb
test
test
add
outsl
cmp
sub
sub
xor
push
mov
outsl
and
enter
shlb
incl
adc
cmpsb
push
pop
adc
sub
pusha
mov
lret
add
pop
aad
push
push
repnz
pusha
add
repnz
lds
and
scas
aas
add
sub
xchg
jmp
or
mov
lret
and
rolb
add
int
sbb
out
clc
rcl
mov
data16
sbb
mov
or
add
cmp
fcoml
lret
test
add
es
push
pop
out
orb
sbb
mov
add
adc
or
mov
dec
xchg
or
sarl
fldcw
xor
push
push
popa
add
sbb
inc
dec
dec
pop
mov
inc
mov
cwtl
xchg
sahf
adcb
dec
pop
adcb
push
add
hlt
xchg
jb
xchg
inc
sahf
inc
fsubs
mov
mov
push
mov
loope
or
add
or
scas
lock
clc
or
and
add
jmp
or
imul
movb
add
sub
gs
sbb
cmpb
fs
pop
push
jns
adc
addb
add
and
icebp
shlb
sbb
fiadds
sbb
jb
mov
push
xchg
mov
push
addb
mov
popl
orb
mov
aas
fs
pop
push
lock
pop
cmp
repz
mov
mov
xchg
jo
push
jb
adc
xchg
push
or
fnstenv
mov
sub
adc
cmp
movsl
nop
orb
ret
pop
pusha
in
or
add
or
test
pop
inc
pop
adc
adc
sar
fildll
fdivs
mov
sbb
lcall
xchg
fsubrs
test
movsl
or
xchg
xchg
stos
rcl
jno
or
jns
add
cld
mov
fs
inc
jg
and
pop
fwait
pop
dec
push
gs
and
jecxz
xchg
dec
jb
xchg
xchg
addb
push
dec
int
std
push
lret
mov
mov
jl
xchg
dec
push
jle
dec
pushf
shl
push
orl
sbb
jle
or
in
adc
add
lcall
dec
lret
lcall
mov
dec
or
or
in
clc
pop
and
add
ret
adc
addl
jo
pop
jbe
shlb
mov
jmp
cmp
mov
add
or
pop
loopne
rolb
and
sub
addb
or
adc
dec
mov
mov
add
aad
fisttps
mov
repnz
cli
sub
cmp
ja
popw
je
add
push
mov
and
add
mov
andb
stc
rolb
pop
popf
fiadds
cwtl
shll
movsb
rorl
or
cmp
add
rolb
mov
mov
std
cmpsb
data16
pop
inc
jo
mov
add
les
adc
sti
fwait
test
pusha
shlb
cld
lods
lods
sub
orl
mov
sbb
sbb
test
fs
orb
jbe
pop
shlb
lds
or
les
adc
aaa
insl
push
stos
loopne
jnp
and
sub
clc
jmp
mov
test
insl
or
pop
mov
add
mov
loop
mov
lock
lock
orb
adc
cmp
add
or
cld
fists
dec
in
jp
add
or
pop
inc
out
or
clc
rolb
jb,pt
mov
add
icebp
loop
mov
stc
xchg
fwait
and
or
clc
xorl
or
dec
xchg
inc
popa
mov
mov
mov
mov
adc
mov
inc
pusha
fs
ljmp
sbbb
dec
fs
mov
inc
loopne
and
push
fstpt
mov
xchg
std
loopne
shlb
cltd
sub
mov
sub
add
add
mov
mov
or
leave
add
or
mov
xchg
dec
push
sbb
data16
mov
in
cmp
lcallw
mov
push
rcll
sbb
sub
inc
sbb
insl
imul
mov
das
adc
js
push
sahf
aas
int
xor
mov
push
jbe
mov
outsb
push
jnp
mov
push
mov
movl
shrl
mov
cmp
add
add
mov
add
cltd
cmc
push
aas
add
or
test
xchg
jnp
xor
enter
into
xor
mov
mov
stos
dec
xor
mov
jnp
lret
add
dec
movsb
dec
and
stos
mov
add
or
loopne
fidivl
imul
xor
in
or
stos
inc
aaa
int
add
insb
nop
cmc
push
sti
add
enter
pop
sub
lea
mov
rclb
sarb
push
mov
mov
rolb
and
pushf
xlat
data16
ljmp
push
add
pop
or
fwait
sarb
fisttpll
dec
sahf
push
mov
add
scas
jecxz
std
sub
add
pusha
add
jge
dec
add
pop
inc
scas
xchg
jb
jne
push
adc
inc
imul
push
popf
add
mov
inc
shlb
cwtl
jp
gs
lea
fisttps
pop
push
jne
fdivs
int
mov
dec
jne
dec
fstp
fisttpl
jg
rclb
xchg
and
adc
xor
xchg
clc
add
cwtl
loopne
xchg
cmpsl
sub
add
adc
mov
cmp
mov
testb
sub
push
mov
inc
testb
add
or
fisubl
call
cld
sbb
das
dec
jb
ficoml
dec
xchg
and
and
push
cmc
jmp
pusha
mov
jb
repnz
jns
mov
adc
or
fs
pop
adcb
mov
shl
mov
shlb
js
insl
jns
xchg
fstp
mov
inc
lock
push
lods
loop
xchg
stos
es
dec
loope
and
push
outsb
fcmovne
mov
adc
fildll
mov
xor
sub
aas
or
cmpxchg
fcmovnb
mov
pop
dec
js
inc
cmp
ja
push
loopne
gs
add
sahf
mov
addl
test
decl
jne
sti
xchg
mov
clc
inc
adc
push
sti
decl
lock
or
pop
jne
add
or
bound
jne
push
lock
xchg
adc
pop
or
lods
bound
out
add
xchg
mov
test
mov
xor
mov
inc
nop
sbb
into
add
jne
xchg
add
push
or
mov
popa
ret
or
xchg
enter
pop
mov
jl
movsb
or
rclb
dec
insb
fcoml
popf
nop
xchg
mov
mov
push
out
and
or
std
mov
jmp
sub
push
or
movsl
mov
in
fiadds
loope
roll
loope
in
jne
jmp
adcb
and
icebp
scas
or
inc
jno
push
loope
rcrl
push
or
jb
cmp
mov
or
icebp
fcomi
fildl
or
mov
adc
and
pop
in
pop
jb
or
lea
rcrb
push
stc
inc
adc
sbb
cs
jg
scas
cmpsb
add
inc
adc
push
adc
hlt
mov
ljmp
sbb
adc
jle
add
out
fiadds
sub
inc
aad
gs
sbb
lret
dec
insl
nop
or
popa
xor
stos
out
ret
pop
xchg
dec
adc
push
push
add
loope
cli
xor
cltd
and
mov
repnz
xchg
rcll
sbb
adc
push
arpl
jg
jb
add
gs
out
push
sub
mov
gs
push
xor
lods
cmpb
cmpsb
rcl
xor
cmpsl
and
addl
add
fists
adc
sbb
popf
out
pusha
sub
cmc
sbb
mov
fidivl
out
jg
lock
jae
inc
je
lcall
mov
fdivp
cld
mov
push
pop
nop
fidivs
xchg
mov
std
inc
lock
daa
push
add
decl
stc
cmc
addb
fcmovnu
jb
jno
or
mov
mov
inc
add
xchg
mov
sub
fadd
fsubs
push
add
popf
mov
mov
or
xchg
and
dec
pop
xchg
lcall
aam
sub
mov
decl
and
in
add
insb
test
add
int
hlt
sub
decl
mov
and
dec
or
lods
loopne
ja
incl
loop
gs
orb
enter
aad
aaa
call
add
nop
jo
and
mov
pusha
mov
pop
aam
adc
sub
pusha
push
fisubs
icebp
gs
or
stos
xchg
push
imul
pop
inc
inc
dec
addl
cmp
add
sub
mov
push
repz
lock
jo
dec
mov
adc
and
adc
fsub
push
pushf
call
das
movsb
ss
jo
dec
out
in
das
iret
dec
fwait
test
jnp
ljmp
mov
dec
addb
lds
cmp
pop
sub
int
jmp
add
jne
xchg
push
cld
add
mov
fcos
sub
jb
adc
inc
sbb
lahf
or
jb
add
and
add
mov
ljmp
dec
push
call
inc
ret
fists
lret
in
stos
sub
adc
jg
push
jb
mov
xor
inc
push
loop
js
xchg
inc
aaa
sbb
rolb
add
mov
pop
scas
lcall
cmpsb
ja
xchg
inc
mov
mov
pusha
push
mov
lret
cmp
divl
bound
lock
mov
imul
fiadds
or
jb
add
fadds
jle
std
icebp
adc
pushf
movsb
mov
mov
jae
or
jbe
incb
mov
xor
mov
sub
mov
inc
pop
and
cltd
dec
cs
adc
or
inc
std
ret
push
xor
mov
push
icebp
mov
push
int
shlb
test
inc
cwtl
sbb
mov
cmp
push
inc
aam
mov
fbld
mov
dec
gs
jo
xorb
scas
push
push
pusha
add
sti
les
add
add
cmpsl
in
clc
cwtl
in
xor
xor
enter
jge
rcl
or
mov
sbb
lock
add
dec
xor
lods
loope
je
rclb
lret
push
gs
idivb
cltd
loop
mov
xchg
push
push
inc
push
xor
out
pop
mov
roll
pusha
dec
mov
orb
or
xorb
add
xchg
push
push
add
pop
ror
subb
add
test
dec
and
insl
pusha
xorl
dec
pusha
dec
std
jg
xor
pop
push
dec
cltd
data16
iret
adc
rclb
fistpl
jl
mov
das
sbb
loopne
push
push
cld
aaa
cld
push
add
adc
xor
test
jno
mov
sti
or
or
call
lret
lea
mov
sbb
lea
cld
fldcw
or
movsb
add
xchg
stc
xchg
xor
push
inc
mov
adc
dec
mov
cmp
inc
push
scas
inc
mov
sub
loope
push
hlt
mov
sub
roll
xorb
mov
mov
test
adc
repnz
mov
mov
ss
push
xchg
in
lds
dec
push
jp
call
mov
pusha
mov
push
and
add
pop
rolb
ret
mov
pop
jl
sub
mov
add
pop
lock
insb
lods
add
test
xchg
cmpb
pop
outsl
fsubrs
out
or
lcall
jo
data16
call
inc
cli
lahf
gs
add
aam
mov
mov
mov
mov
add
enter
jp
mov
loop
mov
pushf
int3
or
lods
or
sahf
dec
xchg
mov
mov
cli
incl
mov
or
daa
cmp
adc
jmp
inc
mov
mov
pop
mov
adc
fs
jne
or
decb
addb
test
push
xchg
xor
mov
fildl
lcall
pop
fcmovu
sub
mov
ret
add
push
xor
push
cmp
mov
adcb
add
add
insl
xchg
fistl
rcll
cmp
dec
cmp
pop
fidivs
fiaddl
test
push
sub
pop
rcrl
shrb
in
mov
sub
mov
push
push
add
out
adc
lcall
sub
pop
adcl
cli
inc
sahf
add
xorb
push
push
mov
enter
cmp
xor
fdivr
subl
int3
add
outsb
sub
jne
lods
fiadds
jl
push
pop
inc
cmpsb
cmpl
test
call
dec
jbe
ljmp
sub
and
xchg
popf
inc
add
cmp
imul
fbld
push
add
inc
dec
xchg
fiadds
aaa
mov
push
lds
in
stc
in
pop
jl
cmc
cmpb
sub
push
inc
mov
outsl
push
pop
lock
mov
inc
call
out
mov
mov
mov
dec
clc
mov
test
int3
push
rcrb
icebp
call
inc
sub
mov
shll
fsubl
xchg
data16
popf
rcrb
stc
enter
movsl
int3
jp
rclb
cmpsb
dec
sbbb
mov
pop
scas
rolb
test
and
orb
movb
ljmp
jo
mov
mov
add
bound
xchg
js
das
sub
cwtl
jbe
fs
outsl
adc
jecxz
sub
je
shlb
cmp
inc
scas
cwtl
sbbb
fmull
inc
push
fidivs
xor
jg
push
xor
ficoms
dec
xor
lret
ret
ret
leave
or
xchg
or
jl
or
xchg
push
orb
int
outsb
pop
in
rorb
mov
fcompl
decl
lret
fidivl
inc
adc
std
bound
imul
jb
add
pop
insl
push
fsubs
fsubl
or
mov
pop
stc
xchg
daa
gs
out
in
dec
ret
add
add
sbb
add
inc
cs
mov
or
stc
adc
xchg
insl
js
xchg
rol
and
fadds
cmp
jb
roll
decl
jl
test
add
or
popa
or
or
mov
decl
cmpsb
add
fsubp
add
loop
sub
lds
fs
call
in
push
andb
sbb
mov
call
add
pop
cmc
das
sbb
les
jbe
mov
fdivrp
push
jmp
or
loopne
jne
cltd
xchg
fs
pushf
pusha
add
add
sub
aad
bound
popf
int3
rolb
pusha
mov
ja
add
xorb
or
jl
je
jnp
cld
lds
jg
lcall
out
add
dec
inc
pop
jmp
or
and
xchg
pusha
mov
mov
dec
scas
roll
inc
les
mov
add
aad
xor
mov
cmpsl
popa
and
in
insb
jb
jo
jnp
adcb
add
xchg
mov
pusha
or
dec
mov
mov
cmpsl
lcall
adc
inc
pop
cltd
fidivrl
fwait
mov
test
jle
xchg
cmpsb
jbe
add
cltd
sbb
pop
loopne
push
mov
push
rorb
mov
mov
lock
and
pop
xadd
fwait
orb
sbb
xchg
gs
andl
clc
push
ret
subb
mov
jl
mov
and
or
es
push
stos
test
cs
or
dec
lcall
test
lock
jae
and
decl
jmp
ja
addr16
fsub
stos
mov
add
rclb
or
push
mov
or
inc
popf
xchg
addl
loopne
je
fiaddl
popa
push
je
test
adc
cmpb
lret
jmp
aam
cmc
pop
cmpsb
push
or
sub
movb
cli
mov
add
mov
mov
add
rorb
adc
mov
mov
shlb
fbld
repnz
add
mov
cmpsl
inc
xor
xchg
fdiv
adc
mov
nop
shlb
push
lock
gs
lea
sbb
les
push
dec
frstor
add
shll
loopne
sahf
and
and
bound
out
gs
lock
in
xchg
adc
adc
mov
or
push
cmp
pop
cli
jmp
mov
out
add
fsubl
jnp
scas
js
xor
xchg
clc
jae
push
xchg
dec
xorb
inc
or
push
sar
decl
mov
push
fcmovnbe
or
xchg
mov
fcomps
adc
fidivs
or
add
loop
rorb
mov
sti
mov
and
lods
xor
shlb
push
mov
xorl
and
insb
sbb
int
movsb
nop
adc
push
inc
call
inc
mov
shlb
data16
cmp
push
sub
mov
lock
mov
xor
icebp
lar
imul
xor
pop
rcl
shlb
and
ret
mov
hlt
mov
mov
cmp
loopne
push
test
and
lea
xchg
addb
push
push
lock
call
jecxz
mov
xor
sbb
gs
std
and
cmp
aaa
dec
sub
and
rorb
dec
and
adc
pop
mov
push
jmp
fwait
add
push
mov
push
scas
add
mov
cwtl
sbb
dec
fisttpll
xor
mov
movb
test
mov
inc
push
push
cmp
pushl
lods
gs
xor
adc
adc
jp
mov
mov
inc
das
dec
in
pop
cli
mov
aam
fcoml
xchg
add
loope
add
sub
cmp
cltd
out
pushf
decb
gs
sub
stc
mov
addb
aam
in
xchg
ffree
pushf
int3
mov
movsb
in
iret
int
cmp
stos
outsb
jle
sub
or
sbb
push
insl
mov
mov
rcr
loopne
lods
daa
add
or
jp
outsb
jmp
icebp
cltd
mov
and
ret
rclb
mov
lock
test
xor
shll
loopne
cld
cltd
cmpb
sub
mov
sub
dec
clc
xchg
decl
inc
mov
testb
sub
inc
loope
adc
push
aad
sbb
scas
adc
xor
loope
mov
and
add
adc
mov
test
mov
jne
nop
dec
hlt
or
test
popf
shrl
rclb
or
push
clc
xor
mov
in
xchg
add
cmp
cmpsb
ss
loopne
mov
loope
push
in
or
scas
xor
addb
dec
xchg
inc
push
mov
aad
sbb
xor
aam
or
mov
and
nop
mov
arpl
fistpll
jb
mov
mov
jg
fadds
lods
push
movsl
and
aas
clc
sahf
xchg
jecxz
inc
xlat
inc
dec
or
or
inc
lock
fildll
xor
data16
add
popf
dec
insb
add
or
add
pop
push
add
popa
xor
stos
in
sbbl
xchg
insb
fs
mov
cmp
add
leave
fldl
mov
adc
cwtl
push
outsl
mov
hlt
fucom
push
sbb
enter
aaa
faddl
adc
sbb
nop
test
negb
lret
push
dec
dec
or
pop
inc
and
je
inc
out
mov
rolb
mov
orb
inc
add
xchg
and
ja
ja
clc
test
jp
add
mov
lcall
incb
les
cli
addl
cmpsb
inc
or
je
mov
add
jg
sti
mov
bound
insl
aam
aam
jp
out
xchg
mov
fcomi
adc
aad
pusha
push
and
jge
add
push
lret
dec
xchg
mov
jb
pmuludq
loop
mov
movsl
rorl
or
mov
popa
inc
clc
mov
pusha
fs
pop
andb
push
xor
inc
xchg
xchg
outsl
addl
add
mov
sar
clc
test
add
or
mov
ljmp
jmp
cmp
inc
sub
rclb
push
adc
or
pop
and
dec
outsl
mov
xor
add
adc
cwtl
pusha
fcoms
push
jle
decb
jae
gs
inc
fs
jecxz
stos
xor
and
out
pop
inc
mov
fsubp
lret
loopne
or
jbe
std
add
out
mov
add
push
mov
aad
push
jbe
out
mov
cmpsb
dec
gs
arpl
cmp
mov
jge
pop
lcall
in
pop
or
adc
shl
shlb
loopne
push
lock
clc
inc
lahf
addb
fdivr
scas
jle
outsb
mov
jo
mov
dec
jo
jb
in
add
xor
gs
fiadds
orb
nop
cmp
jg
bound
add
add
sub
sub
sbb
testl
sub
mov
add
shrb
data16
cwtl
mov
and
loope
lea
lock
sub
push
xor
lods
push
gs
faddl
jl
stc
orl
pusha
mov
sbb
lock
jb
cmpsb
pop
mov
sbb
incb
pushf
push
or
shlb
xchg
xor
push
rclb
lea
inc
cmp
pop
push
dec
mov
clc
push
adc
xor
add
push
stos
dec
gs
cs
in
jns
fdiv
test
jb
testb
mov
push
mov
mov
add
inc
dec
adc
sbb
enter
inc
cmpl
and
and
add
add
jle
or
adc
or
push
push
or
mov
sub
mov
mov
decl
xor
popa
add
mov
push
sub
pusha
or
or
sub
cmp
mov
rorb
jo
stos
nop
je
dec
shr
stos
jle
adc
fcomps
cs
clc
stos
decl
jb
lcall
add
jb
jo
add
adc
mov
test
pop
add
inc
add
aaa
adc
imul
add
daa
push
sub
cmp
mov
push
enter
rolb
mov
lcall
int3
jbe
rorb
data16
mov
inc
lods
push
aaa
enter
cltd
pusha
and
ljmp
stc
cs
loope
pop
pop
mov
in
add
or
inc
add
aam
xchg
nop
mov
or
cmp
test
in
add
mov
jo
xlat
adc
add
mov
test
add
push
push
mov
inc
lret
or
add
adc
mov
add
inc
add
and
sbb
divb
fwait
mov
and
jbe
cmp
mov
insl
xchg
hlt
mov
fdivr
popf
in
fs
movlps
pop
mov
add
jb
fucom
loope
mulb
addl
mov
bound
test
mov
jae
inc
test
lds
add
adc
scas
push
jmp
add
adc
pop
add
xchg
inc
mov
add
out
fcom
xorb
sub
movsl
mov
mov
orb
push
mov
add
data16
scas
andl
es
add
adc
sub
sbb
cli
addb
pop
inc
mov
mov
es
andb
cmp
pop
lods
sub
or
mov
adcb
pushl
andb
push
cwtl
push
addb
inc
push
jge
dec
add
jl
dec
add
and
fcomp
lock
fidivl
and
mov
inc
roll
pop
push
inc
int
pop
add
jmp
mov
in
add
or
sbb
in
cmp
adcl
mov
test
inc
sbb
jle
or
stos
or
adc
or
inc
sub
lret
push
dec
sub
xchg
dec
gs
les
sub
sbb
mov
dec
scas
out
mov
push
popf
es
out
push
xchg
pop
jnp
clc
xchg
push
dec
mov
add
jle
test
dec
mov
mov
clc
scas
int3
out
cmpb
xchg
push
into
popf
xchg
loopne
outsb
sub
jb
cmp
int
add
add
fldl
lret
mov
fildl
cld
popf
cmp
add
xchg
push
hlt
jo
clc
das
rol
fs
mov
mov
mov
pop
inc
cmpsb
ret
incl
ret
data16
mov
inc
fadd
and
lret
add
cltd
sub
cmpsb
scas
or
dec
insb
loopne
inc
les
or
cli
pop
and
cltd
and
ret
sbb
xor
fimuls
fisubs
add
mov
dec
mov
loopne
cmpsb
pusha
jb
push
mov
inc
clc
jg
js
cli
aad
mov
cli
dec
std
gs
add
or
mov
loop
popf
sti
add
outsl
fdiv
sahf
push
cli
or
into
push
dec
mov
mov
mov
pop
dec
fisubs
faddl
add
adc
pushf
cmc
add
inc
mov
test
sbb
clc
jg
mov
cmpsl
les
sub
ljmp
lods
andb
sub
roll
add
adc
cmc
push
adc
addb
and
adc
pop
out
add
jmp
xor
fidivrs
jg
and
pusha
data16
adc
or
pop
stos
and
mov
clc
sbb
push
ja
and
shll
sub
cmp
add
adc
insb
popf
fstps
jne
xorb
push
adc
sbb
push
out
lea
clc
cmp
adc
or
outsb
pop
fisubl
not
push
sbb
out
add
push
mov
mov
das
xchg
mov
roll
sarb
rclb
andl
push
sub
pop
cld
add
adc
loopne
jl
jnp
mov
notb
orb
rolb
rcrl
add
push
mov
shll
add
shlb
aam
add
mov
rcl
jb
clc
test
and
add
push
test
std
ret
xchg
lea
rcll
push
pop
fcoms
pop
jae
ja
add
push
shrb
adc
out
fs
pop
mov
fdivrs
push
dec
mov
xor
jno
sub
pop
inc
or
sbb
dec
out
fstpt
and
int
and
loop
in
sbb
jno
sub
add
out
xorb
pop
imul
cli
aad
push
add
aaa
cmc
add
pusha
add
xor
adc
outsb
and
or
addb
loopne
mov
fistps
insl
scas
inc
pop
pop
mov
fwait
add
cld
and
fisubl
add
incb
aam
jo
pop
addl
test
insl
insb
adc
movsb
adc
or
call
rcll
inc
stos
or
lods
dec
test
push
jo
add
mov
loop
or
dec
push
mov
and
and
pusha
out
inc
mov
jns
jmp
mov
add
outsl
decl
sbb
bound
mov
cli
inc
gs
sub
push
inc
ficoml
pusha
inc
mov
add
push
ret
add
stc
leave
out
mov
rorb
lods
clc
mov
subb
inc
ret
or
clc
add
dec
pop
mov
subb
lcall
push
dec
adc
test
pop
adc
xor
and
push
dec
add
mov
cwtl
adc
adc
cs
cs
lock
cs
sub
mov
imul
sub
add
gs
mov
cmp
adc
adc
xor
mov
sub
pop
mov
add
cs
add
or
push
jp
xchg
and
movsl
push
cs
decb
orl
and
sahf
mov
lcall
stc
xchg
cmp
jle
adc
sbbl
xor
gs
adc
cmpsb
cld
adc
xchg
adc
pop
je
movsl
lock
sbb
push
clc
popf
cmp
sbb
xchg
nop
sub
fisubl
insb
add
or
add
out
mov
xor
cmp
add
nop
push
or
enter
fsubrs
js
sbb
add
and
or
sub
mov
mov
adc
cmp
rcrb
sbb
test
stos
cmp
xor
sub
or
insl
dec
sti
cmpsb
sbb
imul
out
pop
lret
add
pop
mov
push
call
cmp
pop
rcl
xor
scas
in
ja
inc
sbb
int
add
das
into
enter
pop
dec
js
roll
xchg
or
or
test
adc
inc
push
sbb
or
and
and
xor
imul
mov
push
sub
sbb
pop
add
loop
add
jne
ret
add
push
aaa
pop
sub
mov
adc
aam
or
add
push
pop
test
mov
push
insl
faddl
push
out
mov
mov
mov
ss
add
into
ljmp
xor
cmpb
mov
leave
add
mov
pop
outsl
mov
je
add
adc
icebp
enter
jmp
xchg
jl
rcll
jbe
or
cmp
faddl
je
xor
pop
or
mov
push
cmp
xor
out
add
mov
fsubl
movb
pop
pusha
add
addl
movsb
dec
test
xor
push
add
and
xchg
and
sahf
jne
cmp
fstl
pop
add
sbb
or
jo
aaa
incb
mov
push
add
mov
xchg
dec
jl
mov
mov
mov
rorb
add
ret
lret
lcall
xchg
aad
gs
push
sub
nop
pop
push
jle
push
xchg
mov
incl
lds
mov
mov
inc
add
test
cmpsl
ret
xchg
ss
addb
jb
or
or
add
or
mov
and
jne
or
outsl
adc
adc
fdivrp
inc
push
mov
jp
add
jae
sub
sub
rolb
test
add
movsb
mov
pusha
mov
xor
nop
and
push
fcmovbe
add
push
push
imul
mov
ljmp
pop
push
xor
jge
out
popa
xor
or
jno
jmp
stos
adc
push
xchg
fdivs
fadds
add
fnstenv
push
jle
lea
mov
shrl
jo
push
cmpsb
add
xlat
inc
stos
add
ficoms
lcall
sub
xor
jbe
cltd
in
push
push
and
sti
fcmovnu
pushl
jp
mov
sbb
mov
mov
push
jle
scas
xor
aas
add
call
or
jg
sbb
aam
add
int
add
mov
popa
imul
aaa
xor
aam
add
call
sbb
mov
jb
loopne
xchg
rcll
pop
frstor
dec
adc
js
or
flds
incl
adc
orb
adcl
push
aam
fstpt
sbb
mov
dec
mov
icebp
adc
test
movsb
add
in
jno
jns
rorb
nop
sbb
jnp
cmpsb
pop
sbb
add
fiaddl
and
mov
xor
icebp
mov
std
add
adc
cmc
fcmovu
imul
cmp
cmc
mov
push
or
fdivp
lock
cmpb
pop
inc
add
mov
or
xchg
push
push
push
add
adc
data16
std
std
aaa
insb
nop
jbe
pop
jnp
out
dec
repnz
add
adcl
mov
loope
call
leave
fisttps
pop
popf
or
mov
test
jb
lds
jmp
xor
sbb
cmp
test
frstor
lds
inc
jbe
mov
orb
jp
mov
jl
sbb
fstp
test
jo
leave
test
mov
and
mov
lods
icebp
or
jg
js
push
loopne
adc
xchg
adc
loop
cmpsb
int
inc
rorl
mov
call
lea
std
xchg
add
adcb
xchg
test
cmp
add
aad
bound
add
sub
pop
push
decl
cmp
adc
mov
lock
in
fistpl
dec
pusha
add
push
inc
add
lods
jb
jmp
cmp
inc
mov
cmp
pop
inc
pusha
lss
loopne
clc
add
mov
add
movl
scas
mov
cmpsl
mov
fdivs
fcomip
out
cmp
movsb
jnp
repz
aad
shlb
mov
loop
fldt
adc
push
push
lcall
lea
shll
stc
ret
mov
adc
pop
rolb
mov
jo
mov
mov
and
sub
xchg
jo
movsl
add
movsl
insb
or
sub
and
or
mov
fcom
stos
inc
lock
inc
jmp
repz
ss
pop
xor
inc
xor
cmp
out
adc
outsl
repnz
mov
inc
sbb
jno
pop
rolb
test
sbb
scas
clc
es
gs
inc
pop
aad
mov
jg
sub
sbb
jbe
adc
dec
test
nop
push
push
je
movsl
in
inc
and
and
mov
fistpl
dec
mov
adc
mov
push
call
adc
out
scas
mov
clc
adc
adc
aad
push
push
in
inc
mov
rcrb
clc
push
inc
pusha
pop
xor
adc
cmpsb
hlt
and
or
sub
mov
jne
push
cmpsb
scas
scas
scas
sub
dec
cmc
jmp
icebp
xor
dec
cwtl
pop
rclb
mov
mov
ror
jb
test
rorl
add
sub
scas
test
mov
adc
xor
xor
and
inc
xor
xor
js,pt
add
fcoml
ja
ja
in
aad
fisubs
push
fisttps
scas
jo
jb
mov
push
and
jle
pop
push
push
fldl
add
ficoml
mov
adc
filds
imul
dec
mov
dec
es
or
or
dec
mov
adcl
add
fucomi
cli
jb
or
push
in
and
enter
jb
int
rclb
icebp
lcall
test
add
cmc
xchg
and
dec
cltd
sbbb
or
jb
scas
popa
in
cmp
shlb
pop
add
shrl
lock
cltd
movsb
xlat
insl
icebp
int
mov
fcoms
or
lahf
fldl
push
dec
test
sbbb
push
add
sarb
mov
inc
cwtl
jne
sub
add
adc
mov
xorb
dec
addb
jg
cwtl
in
mov
mov
es
lret
push
mov
push
mov
push
xchg
mov
add
test
ffree
stc
dec
in
dec
into
cmc
outsb
stos
pusha
push
cld
cmp
clc
xorb
mov
inc
inc
sub
xchg
fiaddl
add
subb
cmp
dec
push
push
mov
aad
push
roll
je
mov
lret
shll
cld
es
add
push
int3
xchg
test
test
rcrb
xor
add
or
inc
adc
test
aam
or
inc
add
and
cltd
inc
or
mov
jle
or
jg
sar
mov
ja
incb
mov
sbb
mov
push
add
cmp
xchg
rclb
push
cltd
or
lock
jl
bound
mov
adcb
mov
orb
sub
inc
add
mov
pop
or
pusha
ret
dec
jl
aaa
repnz
mov
ss
lret
pop
gs
arpl
les
cmpsl
in
xchg
mov
loopne
loope
pop
push
adc
cs
mov
lea
push
push
hlt
shlb
and
sub
jge
mov
lret
sub
pop
and
inc
push
xchg
jnp
add
out
jno
sbbl
popl
andb
fwait
push
or
adc
aam
add
iret
pusha
or
cmp
inc
jmp
ret
mov
or
clc
lcall
jg
or
subb
or
sarb
add
data16
xor
sarl
fld
cmp
sub
loop
out
imul
icebp
fisttps
and
pop
inc
dec
gs
pusha
adc
mov
lock
int3
jb
sahf
and
stos
decb
push
mov
adc
in
inc
inc
inc
cmp
orb
sarb
push
dec
movsl
cmp
dec
fisubs
imul
gs
xor
filds
sub
jns
cli
sbbb
mov
cs
push
cmp
cmpsb
cmc
dec
add
shlb
cmpsb
sbb
insl
arpl
lcall
sbb
or
and
pop
mov
sti
add
xchg
filds
pop
sbb
bound
mov
lea
and
mov
jno,pt
xor
divb
xchg
loope
cmc
mov
lea
nop
add
add
sbbl
xor
push
mov
jns
mov
clc
test
jne
jge
push
xor
sbb
sar
pop
or
lds
bound
stc
rclb
cmc
sbb
outsb
dec
add
aaa
stos
andb
dec
add
sub
movsl
pop
mov
scas
mov
out
orb
mov
jb
or
and
inc
add
subb
and
fs
pop
and
jo
or
ret
mov
jno
inc
sbb
add
fcmove
in
mov
add
inc
lret
add
mov
inc
cli
push
pop
mov
pop
adc
sub
mov
or
out
addb
add
jmp
jg
or
mov
movb
pusha
xchg
fidivs
dec
loopne
add
outsl
mov
std
aad
inc
cmc
shll
add
fmuls
arpl
fidivrl
xchg
es
sub
push
jbe
or
push
shlb
mov
inc
lock
clc
sahf
les
xchg
test
mov
test
jbe
push
aad
lea
sub
ljmp
inc
sub
mov
in
shlb
mov
jbe
cmp
loope
pusha
lea
or
std
push
loope
stc
lods
xchg
in
push
cli
mov
mov
pushl
shr
in
mov
fimull
xor
pop
fiaddl
mov
pop
outsb
jle
inc
mov
xchg
in
pop
mov
add
notb
and
in
scas
cmc
add
jbe
add
inc
add
nop
adc
pop
or
inc
mov
incl
lock
cmpsb
addl
cmpsb
scas
ss
mov
out
jns
add
add
test
adcb
fs
decl
test
in
jnp
jns
outsb
jmp
mov
shrl
and
add
push
rolb
shrb
push
push
inc
adc
sub
cmp
xor
fisubl
int
add
push
or
add
lods
mov
clc
sbb
lcall
mov
fistps
adc
incb
test
adc
dec
lret
loopne
test
dec
insl
xor
mov
stos
jmp
xchg
fwait
add
in
mov
add
loopne
pop
pop
mov
xchg
and
mov
sub
test
mov
ss
mov
inc
std
push
hlt
xor
add
add
xchg
movsl
add
xorl
push
or
inc
inc
pop
nop
push
cld
push
push
loopne
out
and
add
pop
sub
mov
add
mov
idivb
lock
pop
mov
rolb
add
loopne
push
cld
add
adc
jp
mov
sub
in
int
mov
adc
adc
jo
add
sbb
lahf
sub
or
pop
enter
mov
mov
add
gs
adc
or
fiaddl
std
or
xor
out
adc
mov
rorb
dec
mov
dec
jo
lea
mov
scas
ljmp
addr16
popf
mov
xchg
mov
test
les
push
mov
inc
nop
add
fisubs
pop
mov
in
imul
and
add
clc
add
add
mull
fcomip
cltd
data16
sbb
popf
add
add
and
mov
test
add
popf
fnsave
xlat
push
js
mov
mov
icebp
idivl
test
gs
lock
inc
sahf
mov
stc
or
pusha
lcall
mov
shll
jecxz
or
adc
sbb
shll
call
dec
lret
mov
jl
sarl
dec
repnz
insb
cltd
xchg
add
add
add
dec
cmp
inc
pop
jo
cmp
pop
std
jg
rorl
push
mov
rclb
mov
ljmp
adc
repz
gs
inc
xor
rorb
xor
add
sbb
clc
iret
jnp
jbe
sub
inc
ds
movsl
sarb
sbb
clc
mov
add
pop
xchg
inc
insb
push
mov
clc
stos
lret
fdiv
fmuls
add
and
xchg
or
dec
clc
xchg
jmp
mov
and
and
loopne
outsb
loope
inc
add
pop
xchg
inc
stc
mov
or
inc
sub
ficomps
jg
dec
xor
push
add
inc
imul
inc
sahf
sbbl
and
mov
pusha
adc
fs
mov
stc
jp
jg
hlt
add
push
stos
aam
aad
xchg
popf
and
add
andb
xor
cld
aaa
adc
dec
roll
xchg
dec
mov
add
sbb
dec
mov
insb
pop
cli
mov
add
nop
sbb
sub
add
add
push
xchg
dec
and
jne
mov
or
adc
jb
or
cli
fildll
jge
gs
xchg
adc
add
inc
mov
push
orb
pop
out
xorb
pop
jp
mov
cltd
mov
add
mov
outsl
pop
adc
cltd
add
shlb
in
or
popa
sbbb
or
xchg
adc
test
decb
add
and
test
nop
dec
jns
mov
and
stc
xchg
inc
lock
mov
fwait
xorb
pop
or
mov
call
scas
subb
mov
cs
cs
inc
add
subb
shrb
cmp
or
rclb
dec
enter
mov
scas
cmpsl
lock
gs
add
arpl
and
je
lods
test
subb
ror
lret
push
test
ret
or
inc
or
sbb
cmpsb
aam
push
add
jmp
rcr
jns
ja
orb
sub
push
std
push
rcll
push
jne
je
dec
mov
orb
mov
ret
sub
pop
aam
dec
sbb
add
xor
dec
shlb
mov
and
add
adc
pop
sub
outsl
push
jno
jge
cltd
or
lret
test
or
les
cmp
adc
dec
mov
dec
add
add
cltd
adc
adc
movsl
movsb
mov
cltd
mov
xchg
rorb
push
add
mov
lret
fsubrs
sbb
movsb
push
fwait
inc
or
fisttps
shlb
ja
sti
mov
jns
fildl
popf
clc
test
aad
push
add
mov
aaa
sub
add
lds
sbb
dec
cmc
push
cmpb
bound
cmpsb
and
sbbb
mov
mov
shl
repnz
jno
push
jno
mov
mov
clc
sbb
mov
xor
push
mov
mov
sub
jnp
les
push
push
hlt
dec
outsl
dec
mov
jae
add
ret
jp
shlb
adc
or
mov
pop
or
sahf
mov
cmp
push
lret
movsl
sub
add
xchg
sub
insl
and
push
arpl
decl
js
insl
nop
mov
scas
and
subl
shrl
mov
stos
adcl
push
add
dec
push
mov
jecxz
mov
mov
xor
and
lcall
and
pop
int3
ljmp
fcmovne
jbe
inc
ja
mov
adc
and
stos
sub
xor
add
mov
lods
sarb
loopne
add
xchg
addb
dec
nop
push
ljmp
popfw
adc
lret
pushf
cltd
mov
je
and
clc
and
ss
xchg
push
sbb
enter
das
movsl
lea
or
sub
mov
lret
test
hlt
lea
into
adc
and
or
clc
mov
lea
cmp
bnd
push
mov
and
mov
daa
gs
jbe
pop
inc
fisttps
push
add
sarl
leave
mov
jo
dec
push
cld
jg
lret
mov
jb
add
arpl
push
jb
xor
ja
call
pusha
imul
leave
rcrb
bound
add
pop
dec
leave
and
mov
mov
mov
add
or
push
push
pop
mov
mov
push
add
mov
jp
clc
nop
push
pop
push
and
push
test
ds
data16
add
mov
mov
jae
fsub
xor
ds
push
mov
add
daa
xor
and
mov
cld
adc
int
push
gs
repnz
cs
dec
fisubrl
inc
add
push
es
push
sbb
cwtl
push
pushf
inc
fdiv
das
xchg
ja
call
mov
ja
cmpsb
push
add
imul
adc
loopne
iret
inc
inc
jno
or
push
out
xchg
cmp
pop
insb
and
and
and
hlt
push
rolb
push
rorb
push
mov
push
cmp
test
sbb
inc
mov
xor
jo
and
clc
xchg
xchg
cwtl
data16
add
mov
int3
mov
add
or
call
xchg
mov
mov
cmp
cmp
fsubrl
and
dec
mov
push
dec
xchg
pusha
orl
xchg
call
add
data16
repnz
jle
arpl
inc
sbb
cmp
imul
out
sbb
sbb
mov
call
loopne
mov
dec
scas
add
nop
or
inc
add
or
sub
and
sti
inc
loope
mov
and
mov
ja
rcl
add
cmpb
addl
or
divb
push
repnz
inc
in
mov
adc
int3
or
adc
sbb
adc
inc
js
out
push
sbbb
popf
add
cld
mov
inc
or
xchg
add
sub
mov
int3
xchg
cmc
jp
int
and
jmp
add
insb
rorl
pusha
jae
push
inc
add
lock
rorb
inc
xchg
xorl
cmpl
inc
daa
test
pop
fstp
lret
and
lea
sahf
rorl
push
mov
test
clc
dec
outsl
fsubs
stos
out
lea
test
sub
popf
les
push
roll
filds
push
ret
inc
mov
imul
addl
cli
dec
scas
push
pop
js
gs
insl
test
jns
xchg
mov
test
push
jns
or
cmp
es
nop
insl
orb
inc
cwtl
push
shrb
cmp
xlat
add
sub
test
sbbb
test
add
test
pop
xorl
adc
sti
fiadds
sub
clc
xchg
aam
pusha
inc
sbb
testb
insb
xchg
cmp
enter
add
ljmp
cld
and
dec
hlt
cmp
adc
clc
dec
adc
cmpb
inc
mov
push
int
inc
xchg
adc
and
sar
add
mov
or
cmp
pop
push
or
mov
fsubl
add
cltd
sub
dec
inc
cmp
rorl
pusha
sbb
cmpb
pusha
pusha
movsb
fisubs
push
xchg
pusha
sub
mov
shll
mov
test
int3
push
adc
cmpsb
lret
pop
ljmp
inc
xor
and
lock
mov
add
mov
into
jb
inc
pushf
pop
mov
jbe
add
or
mov
popa
xchg
aad
incl
mov
inc
dec
call
in
lcall
jp
inc
fldl
outsb
mov
adc
mov
pusha
jne
xchg
subb
mov
push
pop
cli
mov
add
mov
xchg
xchg
mov
inc
outsl
xor
lods
and
hlt
cmpsb
fdivp
sub
addr16
lcall
jmp
and
inc
or
or
into
sub
cmp
pop
sbb
xchg
mov
popa
pop
adc
filds
sbb
add
push
or
inc
gs
js
movsb
adc
mov
sub
mov
mov
lods
mov
or
movb
movsb
cmp
insb
nop
or
sbb
stc
iret
lea
inc
loope
jnp
leave
mov
mov
sbb
lods
adc
lods
pop
sbb
jmp
pop
mov
push
sub
and
adc
ljmp
jp
xchg
mov
xchg
movsb
mov
mov
ret
and
jmp
int
xorl
and
sbb
xchg
mov
mov
loopne
push
mov
mov
mov
inc
shll
imul
jo
dec
mov
xchg
loopne
add
sub
mov
add
sbb
mov
lds
inc
add
das
nop
mov
xor
mov
mov
adc
cli
and
or
push
mov
push
add
jnp
push
orb
and
jbe
xlat
cmpb
sbb
imulb
xchg
sub
aad
call
jno
loopne
or
out
push
dec
mov
pop
pusha
movb
lret
lods
xor
pop
and
popf
dec
mov
repnz
and
add
outsl
sbb
add
fistpl
mov
sbb
subb
mov
icebp
adc
push
dec
scas
mov
add
dec
popf
add
and
hlt
fnsave
int
xorl
push
and
sub
add
aad
fsubrs
pusha
lods
pop
pusha
insl
inc
jo
mov
add
std
sub
push
jp
mov
sub
pusha
and
xchg
jecxz
push
orps
add
jle
pop
sbb
cmpsl
test
stc
ficoml
out
cmp
outsl
jg
mov
loop
mov
adc
sgdtl
inc
and
nop
gs
mov
cli
test
ljmp
mov
popf
sbbb
les
inc
mov
call
xchg
fdivr
add
lods
cs
mov
lcall
clc
mov
movsl
add
add
mov
pushl
add
icebp
adc
sbb
adc
or
cld
push
pop
jg
cmp
test
pop
mov
sbb
mov
out
cld
sar
icebp
lcall
pop
xor
push
test
daa
jge
push
pop
add
xor
into
movsl
sti
enter
cltd
test
xchg
xor
mov
xchg
add
adc
add
mov
ljmp
scas
and
add
cwtl
inc
mov
es
aam
test
test
adcb
and
push
ss
pop
mov
adc
sub
add
xlat
jg
or
add
fs
stc
mov
data16
pusha
add
and
mov
sahf
roll
xchg
jmp
lds
jg
lods
xlat
jmp
cltd
vpaddq
int3
mov
ljmp
add
daa
inc
sub
cli
jo
mov
clc
sub
pop
rcr
outsb
xor
fistpl
adc
pop
scas
sub
pop
nop
add
xchg
clc
std
out
test
add
mov
xchg
fwait
clc
xor
retw
sub
inc
add
ljmp
aaa
int3
or
call
xor
mov
addb
test
xor
or
out
rorb
adc
adc
add
in
push
or
add
clc
pushl
inc
xchg
add
add
xchg
dec
gs
mov
jl
mov
jge
gs
jo
xchg
push
sbb
add
add
adc
roll
sub
mov
jns
cmp
pop
blcfill
xchg
cmpsb
test
mov
mov
sub
cmpb
mov
pushf
jle
mov
and
sbb
pop
push
add
sahf
push
mov
inc
add
icebp
push
scas
loopne
mov
push
bound
push
xchg
add
sbb
adc
loopne
test
addl
mov
cs
push
test
jg
jb
mov
mov
lds
sbb
xor
pop
adc
clc
mov
mov
jl
test
xor
add
add
jno
jo
and
test
ficoms
xor
enter
and
cmp
push
lea
jno
sub
cmpsb
push
sub
nop
push
das
and
pop
inc
pop
and
sub
aas
or
add
push
sbb
mov
or
jae
clc
sbb
cmpsb
mov
pushf
jae
cmpsb
jge
mov
mov
xchg
ret
lahf
add
xchg
in
out
test
mov
sub
sahf
int
mov
lahf
and
and
dec
incl
add
sti
xorb
mov
mov
adc
nop
in
cld
xchg
push
gs
rorb
xchg
push
stc
xchg
jg
jne
lock
cvtdq2ps
cmp
loop
adc
add
jo
data16
xchg
popf
data16
and
xlat
cmp
dec
mov
jg
jbe
xchg
lds
fwait
mov
cli
cltd
jmp
push
sbb
popf
js
pushf
movsb
clc
add
mov
jns
insb
adc
sbbb
mov
push
cmpsb
ja
and
nop
sbb
cli
ja
andb
mov
test
add
mov
dec
or
mov
and
movsb
xor
rcrb
scas
es
dec
jne
popf
jb
mov
incl
fwait
xor
adc
adc
jle
cmpsb
stos
sub
push
mov
xchg
mov
test
clc
jmp
gs
mov
mov
in
inc
js
pusha
push
sub
mov
adc
mov
cltd
cmpsb
cli
mov
push
nop
ss
sub
inc
gs
bound
popf
adc
and
adcb
into
jb
pusha
pop
mov
popa
adc
outsl
cmpsb
inc
push
push
add
mov
int3
lock
pusha
add
fidivrs
filds
fisubs
pop
popa
mov
mov
mov
jns
adc
and
jl
add
insb
nop
shll
xchg
enter
data16
movsb
ljmp
ss
clc
stos
into
repz
shlb
jne
mov
stos
lock
loope
cmc
add
nop
xchg
mov
lock
xchg
dec
dec
adcb
rorb
push
add
cmp
add
inc
roll
xor
mulb
add
lret
or
pop
push
push
sbb
add
xor
fiaddl
lret
adc
fwait
dec
rclb
movsb
repz
mov
gs
das
addb
test
add
andl
enter
xor
xor
test
mov
sahf
lret
add
shrl
sarb
mov
push
jne
orb
jno
mov
xor
xorb
rclb
lock
mov
adc
ret
mov
adcb
mov
lods
loop
dec
inc
jp
xchg
inc
push
subb
cmp
jno
push
jbe
adc
aad
hlt
ret
into
xchg
cld
aaa
mov
jne
lretw
subb
push
movsb
fdivrl
and
fldl
fcmovu
add
neg
insl
pusha
adc
fildl
fimull
pop
imul
pop
gs
rcrl
add
mov
xor
jne
or
mov
adc
lock
data16
lods
stos
adc
jo
push
sarb
xchg
mov
orb
mov
mov
jo
loopne
sbb
mov
inc
rolb
or
mov
add
rolb
test
mov
in
rcrl
push
cwtl
jg
add
and
jno
shll
shlb
dec
mov
decb
sti
mov
mov
stc
mov
xorb
lods
arpl
shll
lods
cmpsb
adc
add
mov
add
inc
jnp
sub
and
add
pusha
mov
ret
cwtl
mov
lock
jne
cmp
jb
lods
enter
outsl
push
fs
mov
pop
jbe
sbb
xchg
dec
sarl
dec
add
aam
test
andl
lods
cmp
mov
sbb
nop
insl
ret
mov
sub
pop
lret
int
rolb
push
xor
cld
je
rorl
push
pop
or
repnz
push
popf
and
mov
xor
jecxz
lods
jp
jnp
stc
subb
inc
shll
ret
rcl
fs
add
inc
xchg
int
sub
lea
stos
add
mov
adc
cwtl
xor
mov
or
insl
fcompl
mov
xchg
mov
lea
in
addl
out
inc
pop
imul
sbb
js
cltd
or
adc
mov
sarb
lds
icebp
lods
add
iret
add
loope
rorl
cmp
xor
mov
fimuls
les
or
out
rcr
fidivs
inc
jp
or
lcall
and
ja
add
push
add
adc
pop
cli
add
add
icebp
test
mov
push
mov
sub
add
add
pop
lret
and
add
lock
mov
adc
mov
jnp
leave
or
movsl
cli
cld
add
inc
pushf
xor
xchg
add
xorb
std
push
lock
add
clc
pop
xchg
xchg
std
gs
mov
fcomps
leave
gs
or
jb
idivb
decl
add
xchg
test
add
jo
clc
loop
add
mov
scas
add
mov
adc
movsl
rclb
clc
and
subb
mov
pop
test
sahf
sub
adc
or
mov
dec
dec
adc
xchg
dec
test
push
lret
push
shll
xchg
xor
adc
fiadds
scas
sahf
jle
or
fmull
xor
gs
pop
push
xchg
inc
push
and
xchg
and
lea
incl
xchg
out
add
test
icebp
mov
adc
mov
dec
sub
or
pusha
mov
fimull
add
filds
add
inc
cwtl
mov
and
movsb
addb
test
xor
mov
and
or
pop
adc
jg
dec
xchg
add
mov
lcall
mov
cld
fiadds
pop
push
sbb
fs
inc
inc
mov
pop
push
inc
or
les
pop
shlb
cmp
test
cld
ljmp
sub
jp
jle
in
or
frstpm(287
jl
int3
or
ret
sbb
add
adc
cli
add
pop
push
jo
out
insb
sbb
jb
mov
add
mov
insb
int
and
test
push
pop
pop
clc
mov
mov
sar
lahf
pop
pushf
int3
les
pop
clc
andl
mov
clc
add
pop
or
dec
mov
gs
pop
out
push
adc
test
fs
xor
dec
mov
push
mov
aaa
and
cwtl
mov
test
movsl
add
push
add
or
int
push
mov
fisttps
add
rclb
movsl
or
test
cs
sbb
jl
push
ds
mov
add
aam
xor
jnp
lea
xchg
ja
mov
fists
test
xorb
daa
inc
sbb
nop
jle
inc
add
rolb
rcrb
or
ljmp
ds
add
add
add
pop
mov
popf
fsubp
add
orb
lret
jge
cli
decl
push
push
dec
loopne
and
or
cmp
loopne
mov
add
out
mov
fildll
jne
and
sub
and
enter
adc
dec
mov
inc
push
mov
fiaddl
sbbb
les
add
and
rolb
ret
subb
outsb
pushf
loopne
or
rclb
fstl
xchg
roll
fisttps
adc
push
sar
popf
cmpsb
cmpsb
popa
lock
xor
gs
mov
adc
dec
orb
push
dec
rcrb
pusha
inc
xchg
inc
cmp
gs
mov
pop
cli
mov
xor
push
and
xor
push
xor
add
test
adc
and
xor
sbb
mov
mov
add
incb
push
stc
icebp
mov
jge
push
scas
clc
pop
jl
in
iret
int
stos
jle
xor
clc
ficomps
and
inc
adc
push
add
cmp
insb
in
xor
mov
mov
xorb
mov
clc
orl
adc
cmp
pop
sub
pop
into
xchg
dec
xorl
jns
adcb
add
pusha
sbb
lcall
add
cmc
or
xchg
xchg
mov
out
and
mov
in
mov
mov
ljmp
outsl
negl
pop
ja
bound
cmpsb
sahf
jg
mov
repz
xor
sbb
jle
mov
ja
repz
insb
cmpsb
data16
xchg
adc
push
sbb
cli
cli
ret
idivb
ss
jle
push
sbbl
call
je
or
repz
jp
daa
sub
cltd
mov
lods
jmp
jmp
adc
scas
out
or
imul
dec
mov
or
cltd
loope
jmp
xor
inc
fsub
cltd
add
es
imul
pop
mov
pop
insb
lcall
adc
fisubl
jmp
mov
sar
pop
mov
xchg
pusha
jnp
cld
in
or
jl
cmc
and
lahf
add
adc
repz
in
jg
sbb
push
add
lock
xor
ljmp
imul
dec
in
or
cmp
cs
mov
ljmp
or
fisubrs
clc
add
push
subb
mov
add
bound
es
aas
clc
ja
std
and
push
loope
add
imul
cli
push
addr16
cmp
add
xchg
jge
jbe
insb
movsl
jp
mov
in
xchg
and
dec
sub
mov
push
pop
rolb
test
push
in
mov
leave
mov
clc
mov
add
mov
aaa
dec
and
jo
lcall
fwait
push
fs
mov
es
dec
add
dec
inc
mov
lods
add
mov
outsl
outsl
adc
mov
inc
push
cwtl
sub
sbb
inc
cltd
mov
rolb
fisttps
dec
dec
ds
mov
test
xchg
das
mov
out
out
or
testb
popa
inc
mov
movzwl
dec
add
out
add
mov
mov
repnz
cltd
xor
jmp
add
jnp
fidivrs
lret
xchg
jbe
clc
add
clc
dec
cmp
sbb
push
cld
mov
out
mov
push
cs
fsubrs
or
clc
jb
in
xor
out
clc
mov
mov
bound
loopne
repz
adc
xor
mov
xor
xchg
jae
inc
movsl
movsl
xor
sbb
adc
mov
fcomip
adc
sub
sbb
repz
add
pop
jno
rcrb
loop
adc
mov
xchg
inc
sbb
sbb
aaa
sbb
loopne
in
push
pop
sbb
das
and
add
mov
cld
or
cwtl
fidivrl
xor
pop
rorb
sbb
adc
cld
subl
mov
mov
sub
push
sub
jb
lea
jmp
dec
jb
xorl
and
add
mov
lret
cli
inc
inc
dec
mov
xchg
mov
fisttpll
xchg
or
add
cmp
enter
xchg
or
add
stos
xchg
les
mov
push
cmp
adc
inc
imulb
or
loopne
or
add
pop
xor
xor
push
loopne
imul
adc
and
lock
andb
mov
mov
rorb
or
add
sub
or
dec
cmpb
ljmp
xor
xor
inc
push
or
lcall
pop
mov
mov
xlat
call
push
add
jb
popf
xor
loope
stc
loope
or
or
add
jge
ret
push
dec
fsubs
out
out
pusha
insb
sbb
xchg
and
xor
and
add
stc
fwait
mov
xchg
and
adc
adc
mov
lds
mov
sbb
popa
adc
out
xor
mov
lcall
in
push
push
sbb
fisubs
dec
mov
mov
leave
cli
sbb
or
mov
xor
mov
sar
incl
sarb
cmp
bound
jne
cmp
and
sbb
and
icebp
cmp
lea
xor
mov
sbb
rorb
pop
fadds
sbb
xorb
push
inc
mov
sub
add
popl
xchg
nop
jmp
mov
hlt
pusha
adc
je
push
mov
push
fldcw
xchg
add
and
or
popa
loope
mov
adcb
mov
mov
inc
int3
xchg
add
icebp
add
outsb
push
sbb
mov
dec
pop
rcrl
cmp
add
adc
int
aam
loopne
ja
inc
scas
mov
mov
jne
add
sbb
loopne
push
dec
sar
loopne
mov
xor
sarb
adc
lock
dec
mov
and
push
xor
inc
add
fsubl
sub
gs
in
rcll
out
add
sub
push
and
lret
sar
adc
test
divl
scas
data16
sbb
es
push
sti
in
or
aad
lahf
in
cmpl
loopne
addl
mov
retw
xorb
jnp
orl
data16
mov
mov
add
xchg
data16
inc
add
data16
mov
xor
nop
jo
adcb
idivb
popfw
loopne
test
adcl
bound
push
loopne
add
out
jnp
insl
data16
pop
jae
adc
push
add
add
xchg
mov
pop
dec
lea
dec
xor
mov
inc
cmpb
jne
mov
or
fcomps
mov
fstpt
aam
fiaddl
fdivrs
adc
jge
add
insl
cld
pop
rolb
push
imul
mov
mov
dec
arpl
or
adcl
mov
mov
adc
inc
sbb
filds
fldl
pusha
loopne
add
ret
sbb
shlb
and
rolb
outsl
mov
mov
cmpb
pop
jo
or
clc
imul
jge
mov
int3
sub
add
pop
or
jno
outsl
pop
lock
and
push
inc
adc
enter
xchg
shlb
add
test
cli
fisttpl
xorb
ret
add
mov
es
or
jno
or
and
popl
or
xchg
push
xchg
mov
fs
sub
mov
push
mov
popf
pop
xchg
mov
adc
add
enter
or
nop
adc
in
dec
clc
inc
popa
out
fs
inc
mov
addb
fadds
and
rcrl
push
cli
std
dec
mov
rcrb
sbb
enter
dec
add
popf
and
or
sbbl
mov
out
mov
push
hlt
or
lock
xor
jge
stos
lcall
loope
jmp
shrb
or
fidivrs
sub
and
jmp
sbb
lods
add
jmp
ret
dec
and
add
push
and
sbb
loopne
mov
lret
fldenv
xlat
pop
add
and
or
insb
pop
push
add
push
dec
test
rcl
cwtl
test
sbb
ror
or
data16
cmp
mov
push
jb
cltd
cli
fwait
int3
data16
push
sbb
fbstp
cmpb
dec
imul
xor
orb
sbb
inc
dec
popf
add
mov
popl
jo
jbe
in
cli
sbb
sar
out
mov
jp
sbb
gs
dec
sbb
repz
mov
sub
ds
testb
jae
fmull
fxam
mov
push
gs
dec
add
and
xor
add
lds
sbb
fiadds
sbb
push
je
add
add
or
push
adc
pop
mov
mov
xchg
add
scas
adc
cmp
adc
pop
cli
lret
rcrb
int
push
jo
inc
jo
stos
rclb
out
out
call
test
shlb
or
and
and
rcrb
mov
notb
xorb
fidivs
ret
stos
movsb
das
cld
push
lret
push
push
in
push
jge
inc
cltd
jbe
dec
or
mov
cmp
or
push
adc
popf
insb
addb
dec
fs
or
mov
test
add
testl
incl
mov
pushf
int3
jne
jbe
in
add
ja
pusha
aaa
sbb
lret
sub
lds
movb
xor
dec
fisttpll
sub
sarb
sbb
loope
cmp
cmpl
mov
cwtl
insl
adc
lret
fimuls
mov
cwtl
xor
push
call
js
add
popl
inc
outsl
nop
inc
daa
aam
nop
inc
mov
push
lcall
shlb
ret
popa
jo
adc
and
or
lea
inc
add
mov
inc
cmp
decl
adc
or
andb
fsubrl
rolb
loop
pop
push
sti
lahf
push
fadds
mov
add
push
xor
sbb
add
cli
jbe
adc
fbld
mov
jb
rcll
fimull
dec
add
inc
inc
inc
or
or
jbe
pop
shlb
popa
icebp
add
pop
inc
nop
clc
fstl
jle
dec
or
aam
fistl
dec
mov
dec
or
mov
mov
mov
loop
or
or
int3
add
add
and
jnp
dec
gs
mov
push
add
lock
push
add
inc
sbb
mov
mov
sbb
and
inc
ret
push
movsl
fbstp
fcmovb
or
mov
loop
shlb
mov
addb
adc
shrl
scas
cmp
test
mov
dec
sub
mov
divb
nop
pop
and
lods
push
mov
push
pop
pop
nop
and
mov
test
cmp
fcompl
ret
test
test
inc
add
or
test
jg
std
cwtl
dec
data16
adc
stos
push
ret
xor
mov
jge
test
xor
es
lahf
rorl
mov
pop
jmp
and
in
and
adc
mov
mov
subb
mov
cmp
aad
out
test
pop
or
movsb
or
add
add
test
rorl
jne
stc
xchg
xor
add
add
dec
and
scas
mov
xchg
call
and
pusha
fidivs
xchg
in
cwtl
fldl
inc
jb
and
mov
push
ror
out
and
jge
icebp
mov
mov
aaa
rcl
movsb
ja
jo
bound
adc
jmp
mov
insb
mov
xor
lea
mov
data16
out
call
push
popf
loop
gs
cld
add
add
push
mov
popf
pop
popa
pop
mov
cmp
andb
push
mov
lock
xor
dec
inc
inc
jle
dec
jmp
test
xor
push
call
loopne
dec
inc
add
jno
loopne
gs
ljmp
adc
push
mov
sub
out
or
jg
orl
rcrb
lcall
mov
push
data16
sbb
fcmovbe
rolb
mov
lea
scas
mov
cmpsb
or
push
mov
add
loop
je
jle
orl
rorb
push
xor
pop
dec
ljmp
pushf
mov
add
pusha
xor
pusha
mov
loope
inc
pusha
ss
enter
outsl
sarb
fcmovne
pop
loopne
dec
andl
or
add
mov
dec
or
int
sub
mov
push
loopne
decl
add
imul
mov
adc
mov
popa
lds
and
mov
push
and
loopne,pt
cltd
mov
dec
clc
jg
jl
xchg
rolb
cmp
loop
loopne
int
inc
adc
pop
mov
test
fisubs
add
mov
loopne
pusha
lods
mov
decl
ljmp
call
adc
mov
cmp
pop
test
outsl
add
rclb
adc
test
cmc
aaa
popa
daa
dec
or
mov
and
mov
add
and
pop
ficomps
cmp
mov
stos
movsl
idiv
mov
pop
push
les
pop
loopne
ss
leave
and
data16
and
mov
lock
sbb
add
shr
jne
adc
incl
loopne
cmp
mov
and
in
xchg
mov
clc
loopne
in
mov
mov
dec
add
mov
mov
add
enter
stc
shlb
or
lods
cld
les
insb
or
divb
push
inc
pop
test
and
add
sub
jl
xchg
pusha
cmc
cs
test
gs
or
ss
loopne
data16
adc
sar
roll
das
sub
decl
adc
add
test
xor
pop
jno
cmpsb
mov
xchg
pop
gs
add
dec
bound
xchg
js
dec
clc
rolb
mov
fldl
lret
das
shlb
add
idivb
or
in
ja
std
aas
or
andb
push
dec
push
and
cmpsb
sub
call
inc
inc
loop
orb
pop
pop
aad
push
into
shlb
or
add
data16
and
pop
jno
sub
lock
movsl
xor
add
add
lret
test
xor
dec
push
pushf
incl
or
test
scas
inc
mov
add
push
or
add
fcmovne
mov
xchg
test
data16
pop
insl
inc
mov
orb
or
fmull
adc
jo
in
jns
xchg
aad
aad
mov
out
cs
sbb
test
shrl
inc
jg
mov
pop
or
add
mov
mov
notl
ljmp
and
pusha
gs
loopne
out
rcrb
cld
out
add
imul
pop
cmp
nop
add
pop
xor
or
test
out
or
xor
mov
and
pop
je
testb
push
inc
dec
add
gs
nop
addb
daa
orb
jbe
push
bound
adc
gs
pushl
jmp
adc
xchg
inc
test
adc
jo
bound
adc
sbb
jge
cli
jno
sbb
icebp
inc
mov
push
jle
pusha
adc
cmp
mov
mov
lcall
mov
test
hlt
xorb
add
inc
sarb
add
insb
xor
xor
pusha
jo
push
mov
fdivp
add
out
mov
mov
ja
cmp
inc
loopne
int
adc
repnz
add
jne
pop
mov
fisubl
in
mov
test
ljmp
clc
mov
movb
jne
addr16
push
mov
cmc
add
mov
jge
cli
mov
fcoml
jmp
lock
adcl
lret
and
adc
xor
js
mov
mov
fildl
shrb
add
pop
fs
or
test
mov
xchg
xor
mov
aam
cmp
loopne
fdivrs
push
sub
xor
inc
mov
adc
cwtl
divb
lcall
clc
push
sbb
sbb
adcb
jns
clc
xchg
or
movsb
jmp
mov
popf
gs
loopne
and
add
jmp
add
fs
rcrb
lcall
cmp
add
es
push
dec
mov
out
shlb
jmp
mov
js
mov
mov
jg
add
add
xchg
add
int
aad
mov
jnp
je
insl
mov
add
lahf
lds
aaa
adcl
add
andl
stos
test
jbe
mov
dec
jle
lock
movsl
stc
lods
pop
lock
mov
mov
call
outsb
sub
cmp
frstors
data16
cwtl
xchg
int3
sub
sub
mov
push
loopne
xor
into
mov
dec
clc
adc
push
pusha
nop
adc
mov
pop
test
inc
adc
cwtl
shrb
or
pop
and
rorb
xor
data16
jg
icebp
and
subb
or
sbb
outsl
ljmp
ds
push
xchg
inc
push
xor
clc
xor
push
jl
push
mov
pusha
loopne
jmp
adc
nop
imul
rolb
imul
pop
insb
xchg
add
rcll
add
movsl
shrl
add
xor
fwait
push
mov
push
ja
add
jl
push
cmp
pop
or
or
jno
add
filds
add
adc
loope
inc
adc
out
push
loopne
jb
push
mov
orl
adc
and
push
loopne
dec
or
das
ljmp
nop
cmp
push
xlat
lock
inc
dec
nop
add
inc
ret
sbb
movsl
and
test
pop
inc
adc
sub
fdivr
mov
lcall
adc
add
add
outsb
test
shlb
mov
test
sbb
push
pop
mov
int3
mov
pusha
adc
std
dec
movsb
and
loopne
and
mov
mov
loopne
rcl
and
lcall
xchg
push
add
push
add
lock
sbb
aam
pop
xchg
mov
and
cmpsb
xchg
xor
aam
ljmp
insb
add
clc
cmpsl
lods
push
mov
mov
fnsave
std
adc
fstl
add
pop
repnz
lret
pop
and
roll
dec
pushf
adc
mov
pusha
adc
bound
add
adc
stos
scas
add
fildl
in
fcoml
pushl
loop
stc
lret
inc
add
push
inc
add
dec
subl
push
jo
faddp
sbb
sahf
xchg
adc
ljmp
ss
cmp
jo
jnp
lret
lret
shrb
sarb
adcb
or
popa
and
adc
nop
sub
mov
or
lock
out
popa
rorl
ret
jmp
loop
push
jg
push
shll
add
sbbl
xor
int3
stos
inc
cld
add
xor
jne
test
inc
fdivrs
xor
push
shlb
sub
sbb
andl
lock
mov
and
cmpsb
lahf
push
orb
add
jns
cld
push
addr16
and
add
cli
ss
dec
inc
cwtl
pop
lcall
push
ret
push
call
and
xchg
dec
loop
cs
xchg
xchg
pop
and
add
aaa
call
or
add
cs
mov
mov
xor
cmpsl
mov
add
mov
or
stc
xchg
cwtl
inc
fwait
mov
mov
cmpb
adc
add
std
cmpsb
xorl
xchg
cmp
sub
clc
xchg
or
shlb
rcrb
inc
nop
gs
jb
xor
push
mov
arpl
fsts
fcmovnb
mov
sar
rcll
dec
orb
or
dec
ljmp
xchg
adc
lret
mov
addb
or
mov
or
pop
sub
xor
das
repnz
call
or
mov
add
ret
test
lea
fdivr
dec
incl
sbbb
gs
in
subb
mov
in
std
ja
test
add
or
add
push
cltd
add
sbbb
movsb
orb
sub
cwtl
movsl
addb
lods
mov
push
mov
pop
mov
pop
pop
adc
mov
xor
push
rorb
fs
test
dec
sarb
xor
pop
nop
fistl
add
jb
xor
sub
test
fidivs
enter
fcom
es
bound
add
testb
pop
gs
aad
inc
mov
mov
jge
std
das
test
add
ret
inc
adc
or
js
rorb
xchg
mov
leave
gs
mov
jns
inc
adc
gs
ret
mov
shll
sub
in
inc
add
pusha
imul
push
shlb
jo
outsb
lods
add
add
xchg
jecxz
ss
pushf
push
jno
cwtl
inc
pop
mov
pop
mov
add
pop
inc
cs
test
push
lock
iret
cmp
jne
decl
push
filds
push
or
push
inc
and
jle
cli
pop
and
lea
and
roll
subb
pop
jle
add
inc
jp
lret
mov
movsl
dec
mov
or
push
and
jmp
dec
stc
cmp
add
mov
inc
dec
add
dec
dec
sti
sub
jae
stc
mov
rolb
jo
mov
test
fildl
int3
dec
dec
add
mov
fcmovnb
fstpl
mov
sti
lods
add
fs
cmp
xchg
inc
mov
mov
sbb
shr
mov
pop
or
aam
fs
inc
cmp
mov
int
sub
roll
xchg
loop
fdivrp
mov
push
fildll
push
add
es
into
lds
mov
push
xchg
jb
jl
ret
loopne
sub
ds
es
data16
ret
flds
dec
inc
loop
ret
pop
inc
lcall
lahf
push
mov
push
int
xchg
mov
add
fsubs
dec
fucom
fwait
outsl
mov
scas
dec
lea
frstor
add
fildl
add
ljmp
cltd
push
mov
jne
xchg
jle
loope
sub
gs
inc
xor
dec
or
ret
sbb
stos
push
ret
stos
xor
push
sub
xchg
inc
push
mov
push
cmpsb
push
insl
inc
adcb
fs
rolb
cmp
or
jge
out
add
mov
push
gs
dec
pusha
inc
jge
idiv
stos
adcl
ret
scas
dec
push
dec
rcrb
call
ficoms
scas
inc
out
mov
adc
and
std
and
mov
push
push
xlat
mov
aaa
pop
aaa
adc
fs
addl
aam
adc
clc
and
dec
pusha
add
loopne
or
and
dec
pusha
lahf
adc
mov
adc
repz
adc
rcr
push
test
aaa
inc
dec
clc
cmp
test
mov
push
stos
add
lods
push
imul
or
xor
inc
cmc
test
dec
cmpsb
dec
add
rolb
add
enter
xor
mov
adc
pushw
and
mov
test
jns
pop
repz
push
aam
cld
popf
rorb
cmp
mov
inc
dec
out
ja
lret
test
popa
out
push
mov
scas
or
mov
and
sti
popf
fisubl
mov
loop
adcl
mov
inc
add
cmp
fwait
adc
out
add
filds
jne
and
or
sub
clc
decl
sub
lea
shll
xchg
gs
mov
push
sbb
and
sbb
cld
fs
fs
mov
and
add
add
enter
fwait
add
rolb
push
mov
pop
icebp
imul
cs
xchg
clc
mov
cmp
fldcw
idivb
sub
out
mov
adc
shll
add
cmp
rolb
pop
jecxz
inc
xchg
cs
orb
sub
subb
dec
inc
xchg
dec
mov
adc
push
call
test
decb
add
andb
ljmp
jb
test
or
mov
ret
and
out
add
pop
push
mov
mov
and
clc
outsb
jl
into
pop
mov
addl
push
pop
mov
cmpsl
andb
stc
roll
mov
jb
addb
dec
repz
xchg
push
ret
std
sbb
dec
add
pop
mov
fwait
call
xchg
add
lret
rcrb
pop
inc
fwait
sub
fsubl
gs
jl
nop
jb
xchg
cld
and
enter
pusha
push
ja
inc
fildl
and
mov
mov
pop
push
and
popa
or
fidivl
add
ss
into
andb
fiadds
out
leave
test
adc
add
popf
sbb
jle
inc
hlt
mov
push
pusha
stc
movsb
push
mov
fs
and
mov
mov
xchg
mov
add
cmpsb
mov
inc
jb
adc
xor
stos
jmp
stc
xchg
sti
and
sar
das
mov
mov
inc
mov
jb
pop
sbb
add
dec
push
push
jl
dec
adc
add
push
nop
sub
into
add
out
adc
inc
add
mov
lds
pusha
popf
andb
mov
inc
inc
and
popf
sar
push
xor
popa
xor
incl
mov
insb
add
add
out
or
pop
fmull
fbld
mov
test
add
pop
jbe
push
xor
inc
add
adc
into
sahf
mov
mov
icebp
inc
cmpsb
push
mov
or
sub
sub
outsb
sbb
pop
rorb
mov
pop
aam
sub
dec
into
pop
fistpl
xor
sub
in
adc
adc
mov
jle
popa
cmp
sbbb
push
dec
mov
cld
mov
adc
cmp
lcall
aam
or
in
pushf
shll
lahf
lock
push
add
mov
mov
cmp
push
test
mov
mov
lahf
loopne
fs
ret
mov
or
add
icebp
xor
add
pop
sub
in
rolb
push
add
nop
jo
jo
gs
push
add
adc
incl
insb
nop
stos
and
jo
push
mov
xor
outsl
or
in
cmp
jbe
test
push
cmp
adc
add
jg
mov
and
push
mov
xchg
adcl
insb
mov
gs
xchg
std
fisttpl
pop
lcall
ret
push
dec
dec
jb
xchg
sbb
dec
push
add
fldt
mov
add
adc
jo
or
or
insb
orb
popa
or
mov
push
inc
dec
xchg
loope
mov
inc
clc
xchg
decl
add
test
loopne
in
xor
movsb
or
shl
mov
sbb
add
add
fdivs
sbb
pop
push
cmp
sub
loopne
xchg
loope
add
enter
add
xchg
adc
testb
mov
jo
sbb
mov
xor
sbb
xor
lea
lock
inc
pusha
ret
add
xor
stc
xchg
inc
lock
add
mov
cld
out
addb
add
rclb
stos
jp
fwait
movsl
ret
shlb
and
pusha
add
cs
inc
lea
mov
dec
addb
jo
idiv
fimull
mov
ret
or
xchg
and
idivb
pop
mov
orb
adc
jno
enter
adc
gs
xchg
pushf
icebp
aaa
cld
test
popa
add
add
dec
test
cmp
ja
mov
sub
adc
pop
mov
or
lock
adc
cli
mov
std
pop
or
push
sbb
clc
lea
xchg
addb
je
push
adc
dec
movsb
adc
xor
pusha
dec
add
inc
and
or
ljmp
mov
push
dec
std
decl
mov
roll
push
loopne
and
sbb
cld
cmp
dec
outsb
je
pop
xchg
lret
subb
add
popa
adc
mov
rolb
nop
movsl
xchg
lret
mov
adc
push
and
xchg
fs
lods
ret
stos
mov
xor
and
add
inc
add
dec
iret
jb
sub
sbb
push
into
gs
add
mov
cmpsl
add
clc
ja
int
cwtl
fsub
adc
pop
fisubl
jmp
cld
fcomip
jmp
xor
lock
inc
adc
ljmp
dec
xor
xor
sub
cld
inc
and
rolb
dec
inc
sbb
in
sub
dec
sub
sub
loopne
add
orb
mov
cmc
push
xor
mov
out
clc
push
and
xchg
inc
call
ss
or
add
sbb
cs
fldl
addb
sbb
push
mov
pop
mov
adc
mov
lret
mov
out
fcoms
mov
add
sbb
lret
mov
subl
nop
rolb
add
add
es
xchg
cltd
aad
cmpsb
xchg
in
incl
ret
xchg
mov
add
add
fistps
lret
add
xor
out
fistps
rcll
add
gs
cmpsb
jno
andb
hlt
lcall
xor
or
and
pushf
jp
cmpb
decl
add
push
mov
mov
shll
and
loopne
and
pop
push
inc
in
pop
push
lods
xor
test
push
cmp
in
jo
es
nop
push
arpl
push
sbbb
xor
lods
xorb
mov
xchg
in
aas
push
lock
push
cmp
dec
shlb
andl
push
ja
inc
xor
stos
mov
nop
lods
clc
test
sbb
dec
mov
mov
push
incl
nop
orb
mov
loopne
sbb
call
mov
jge
push
or
movsb
xchg
jo
xchg
xorb
mov
xchg
xor
push
mov
xorl
insb
mov
or
movsb
mov
pop
jmp
clc
out
mov
mov
cmp
adc
jg
mov
add
mov
inc
dec
jae
or
xchg
in
lea
pop
leave
adc
jne
add
jg
cs
js
mov
jbe
dec
mov
sbb
rorb
sbb
rclb
mov
movsb
jmp
loopne
rorb
sbb
sbb
jecxz
cmp
outsb
xchg
push
xor
fs
jo
xchg
mov
pusha
push
inc
dec
add
shrl
add
cmp
fdivl
xchg
mov
add
sbb
cmp
push
push
mov
mov
inc
jbe
stos
mov
fadds
xor
mov
fsub
js
arpl
ds
mov
adc
jle
or
and
ss
and
mov
addr16
xchg
mov
or
hlt
fimull
popl
fs
or
inc
sbb
out
faddl
js
int
push
loop
push
loope
jge
sbb
add
or
cmp
mov
ss
cmpsl
xchg
adc
mov
and
add
mov
loopne
test
popf
pop
add
out
cmpsb
fcmovu
and
and
and
pop
test
mov
and
push
ljmp
and
add
cmp
add
iret
push
int3
adc
push
add
popf
hlt
push
mov
inc
gs
cs
imul
rcrl
dec
fisttpl
add
or
shlb
popf
add
sub
rolb
mov
in
das
or
sbb
adc
push
je
inc
pusha
xchg
mov
pushf
add
loop
mov
or
mov
mov
stos
push
adc
test
xchg
ds
outsl
fisubl
cltd
fstpl
push
popa
sub
filds
add
mov
adc
xchg
and
call
ds
int
clc
imul
or
lods
nop
adc
cmpl
test
and
xchg
mov
pushl
mov
lret
push
sub
and
js
lcall
add
push
inc
adc
push
lods
add
mov
ljmp
bound
xchg
pop
push
xor
jg
inc
pop
lcall
push
ja
fldl
jp
dec
gs
jae
dec
cli
inc
dec
jnp
rorb
mov
orb
lahf
add
leave
sbb
jno
std
dec
jb
jns
inc
adc
mov
jae
lcall
jmp
adc
subl
shrb
fwait
nop
roll
popf
and
mov
jge
cs
add
popf
in
ret
andb
or
dec
pop
mov
adc
cmp
psubd
xorb
push
dec
or
hlt
bound
mov
mov
inc
outsl
js
mov
gs
rcrb
and
push
in
and
es
ret
push
mov
subl
test
cs
pop
sub
cwtl
inc
push
out
icebp
pusha
pusha
clc
dec
push
test
js
pop
shrl
sbb
test
mov
mov
push
push
dec
add
push
hlt
es
jb
mov
xchg
in
lcall
incl
or
xchg
sbb
lcall
adc
push
popf
push
movsl
and
sti
push
in
or
sbb
fs
dec
mov
test
jecxz
stc
sub
jle
outsb
mov
mov
inc
inc
cmp
or
push
mov
mov
xor
add
rorb
sahf
mov
pop
mov
cmp
outsb
inc
or
lea
pop
call
cltd
je
gs
xor
or
lods
dec
fcoml
nop
mov
mov
les
loopne
ficoml
or
add
test
popa
push
ret
faddp
sub
test
mov
push
inc
jb
sbbb
sub
std
adc
mov
js
inc
pop
mov
and
or
movsb
jo
in
outsb
inc
inc
and
pop
and
outsl
dec
inc
add
shl
xor
or
test
inc
mov
outsb
popf
cmp
dec
fadds
adc
xor
inc
scas
es
mov
push
push
loopne
jecxz
mov
insl
insb
sbb
add
pop
inc
rorb
das
xorb
mov
jb
add
push
adc
xor
lcall
inc
lcall
mov
inc
mov
jnp
daa
sub
dec
out
js
orb
mov
gs
mov
sbb
add
pusha
sub
les
movsl
jmp
add
push
nop
shl
push
lea
and
gs
inc
stc
rcr
fdivr
and
inc
or
mov
push
push
stos
add
shrb
pop
add
pop
mov
jns
pop
sbb
push
mov
ret
mov
jecxz
loope
aam
enter
movsb
xchg
insl
out
sub
sub
or
inc
inc
and
dec
outsl
js
loop
ficompl
test
leave
ret
add
or
rcll
gs
bound
rclb
decl
push
add
das
add
xor
clc
ja
ja
frstor
add
inc
lods
push
sub
or
pop
gs
adc
lret
jnp
popf
clc
sahf
call
mov
loopne
call
data16
mov
clc
jmp
add
inc
dec
subb
loopne
jbe
data16
dec
adc
xchg
mov
push
lret
push
mov
sarb
jbe
mov
int
sahf
and
pusha
push
gs
popf
mov
lcall
es
stos
and
add
mov
roll
mov
pushf
adc
pusha
mov
es
incl
in
jmp
dec
loop
mov
add
mov
or
fiaddl
in
iret
int3
adc
int
cld
loope,pn
mov
stc
xchg
in
cmp
inc
mov
imul
js
ds
cltd
cmpb
lock
mov
push
or
and
shll
mov
or
loopne
aam
jg
je
dec
ret
rclb
mov
ss
inc
inc
pop
xchg
push
adc
adc
cs
mov
push
adc
cmp
jbe
mov
push
dec
fdivrs
sub
movsb
add
inc
add
inc
jno
pusha
cmp
mov
add
lock
sarb
loop
sub
adc
jg
cwtl
test
fdivrs
jo
push
push
adc
stos
inc
fcmovnb
data16
fstp
pop
xchg
mov
cs
es
or
jb
push
enter
sarb
movsl
roll
add
mov
std
bound
mov
xchg
xor
inc
dec
jl
adc
add
mov
gs
out
push
inc
dec
dec
hlt
icebp
mov
int
push
pop
int
loopne
sub
andb
sbb
inc
sub
adc
rolb
lods
outsl
ret
xchg
ficoml
add
mov
adc
cmp
ret
testb
gs
push
adc
pop
loopne
enter
push
dec
fldt
rolb
xchg
arpl
or
fsubl
loopne
mov
pop
adc
cmpps
orb
cltd
jno
mov
popa
or
pusha
or
mov
adc
add
add
enter
loop
add
dec
orb
in
mov
test
aam
mov
adc
fidivrl
lret
or
popf
fdiv
inc
jg
fbld
mov
pop
adc
icebp
add
xchg
xchg
dec
mov
insb
fdivrs
leave
lock
aaa
loopne
repnz
jo
incb
incb
push
dec
lock
shlb
push
xor
and
xlat
xor
dec
xor
dec
cli
sbb
and
test
decl
stc
roll
add
push
pusha
adc
inc
and
cmp
cmc
dec
stos
inc
dec
enter
add
addl
fcompl
jnp
mov
das
rolb
adc
mov
xchg
adc
incl
sbb
rclb
es
or
hlt
out
xor
or
addb
enter
and
xorb
pop
mov
xchg
sbb
enter
add
or
add
mov
add
inc
ret
xchg
data16
lock
jmp
jle
xchg
leave
pop
sbb
dec
enter
lahf
jo
jp
in
or
mov
sub
adc
xor
jle
ds
push
add
inc
pop
cmc
mov
xchg
or
sub
jbe
loop
xchg
aad
loop
mov
mulb
iret
add
es
pop
add
or
sub
mov
sarl
mov
lods
fbld
jno
add
jno
inc
or
or
push
ds
hlt
dec
adc
in
xor
push
jg
mov
inc
subl
or
cmp
adc
sub
adc
add
shrb
mov
or
lock
mov
sarb
jne
mov
sub
jp
mov
subl
stos
rclb
dec
pushf
fs
lcall
xor
das
adc
inc
add
mov
fwait
scas
pop
or
aad
xor
sbb
lea
outsb
push
jge
mov
mov
mov
rcrl
adc
mov
push
sbb
push
loopne
jo
or
fistpl
push
adc
stos
fmull
mov
clc
mov
out
insb
jo
add
xor
add
out
mov
ja
ret
pop
jo
popl
add
inc
xchg
jno
clc
push
inc
and
loope
out
mov
inc
jmp
xchg
stc
mov
fcoml
or
push
xor
or
jne
push
addl
jp
adc
ret
mov
pusha
lods
testb
lahf
imul
mov
jecxz
fisttpll
loopne
dec
cmp
sub
pusha
jp
icebp
idiv
mov
lahf
xor
js
adc
mov
int
sti
fbld
mov
nop
or
loopne
push
cmp
imul
sahf
push
inc
inc
pop
dec
dec
sahf
push
and
addl
add
loope
pop
repz
mov
cmpsl
add
rol
sarb
add
add
cmp
push
jno
clc
push
sarl
sbb
and
ljmp
negb
mov
xor
aaa
out
mov
jne
jb
jge
xchg
and
push
btrl
mov
shlb
out
sbb
xor
adc
sbb
mov
loope
fsubrs
test
push
sbb
or
sbb
rolb
fcom
outsl
xchg
sub
sub
clc
fistpl
cmc
dec
jae
je
xchg
out
ret
jle
rcrl
adc
mov
sub
or
mov
and
inc
add
inc
cs
jmp
push
adc
shl
mov
pusha
sahf
jle
and
test
or
subl
gs
add
sbb
or
popa
mov
push
stc
cmpsl
out
pop
call
ret
add
xor
shll
pop
and
or
insl
mov
and
adc
aad
and
inc
repz
adc
movsl
hlt
xor
or
clc
add
and
add
pop
jb
mov
jg
jmp
unpcklps
cmpsl
lret
dec
gs
add
sub
sbb
push
fisubs
cs
mov
mov
rorl
mov
fdivl
add
and
rolb
xor
sar
jp
inc
adc
sar
loopne
mov
jb
mov
ret
xchg
jl
mov
fisttpll
subb
insl
cs
mov
in
popa
xchg
inc
sar
mov
loop
or
push
push
inc
jns
imul
gs
fistpl
nop
cwtl
lahf
gs
clc
gs
or
push
adc
mov
or
xchg
add
push
cli
and
cmpb
clc
sbb
incl
push
gs
inc
sbb
aaa
jl
insl
popf
push
cmpl
icebp
add
mov
ss
imul
jno
push
cmp
pop
push
sub
add
mov
add
test
xchg
push
jo
adc
out
pusha
test
add
mov
jb
popf
lods
dec
lret
and
add
sbb
es
orl
out
ret
push
sbb
jecxz
mov
add
pop
add
add
das
xor
addb
fldt
dec
dec
mov
pop
sbb
nop
jge
pop
xor
add
idivb
jns
xor
in
lea
fstp
dec
les
add
fadds
pop
xor
dec
addb
adc
jl
push
fisubl
mov
pop
scas
sbb
cmp
xchg
lea
and
xor
lea
or
inc
push
pop
push
test
add
lock
imul
sub
jnp
inc
mov
sbb
or
decb
inc
or
xchg
or
lret
pop
push
incb
adc
mov
and
inc
mov
xor
int3
out
adcl
adc
adc
add
pop
call
mov
push
adc
subl
adc
or
fcoml
loope
addl
cli
roll
sub
add
insb
mov
sarb
xorb
popa
movsb
and
sub
decl
scas
push
add
jmp
push
jns
sarb
inc
enter
jae
aam
imul
ss
xor
push
xor
cmp
fs
xchg
add
mov
rorb
subl
adc
fiaddl
dec
adcb
jb
rclb
and
jle
cmp
adc
xor
dec
hlt
add
adc
jge
pop
inc
inc
test
mov
xlat
inc
xchg
add
xorl
mov
sbb
mov
dec
mov
fsubs
bound
jmp
gs
add
in
inc
andb
sub
or
roll
inc
lds
fldt
or
push
cmpl
cmpl
mov
gs
inc
sub
cmpb
mov
scas
mov
add
dec
shlb
or
add
test
fisttps
hlt
push
fcomp
push
std
int3
adcb
pop
clc
mov
or
inc
addb
xchg
ja
pop
and
shrb
into
cmp
in
outsb
jmp
inc
rcll
fmuls
mov
jmp
movl
sbb
fdivrs
xchg
mov
inc
or
mov
mov
add
mov
or
adc
mov
sbb
mov
mov
mov
xchg
and
mov
add
or
inc
add
roll
cli
add
imul
scas
andb
test
or
cmpsb
push
jbe
sbb
mov
pop
daa
pusha
and
or
sbb
push
xchg
xor
mov
decl
xchg
push
mov
out
cmc
test
int
and
push
add
xchg
mov
add
mov
push
mov
mov
jnp
adc
loopne
mov
and
jecxz
in
sbb
sub
add
fldl
rclb
jmp
xorl
add
lcall
popf
inc
mov
jecxz
pop
mov
ljmp
xchg
rcl
or
or
add
mov
mov
mov
pushf
fnsave
mov
pushl
std
fists
or
enter
add
sub
add
and
ljmp
jle
int3
jne
dec
out
mov
xor
cmp
pusha
cmp
add
add
pusha
sub
sar
add
sub
gs
insl
loope
or
xchg
lds
mov
cld
fiaddl
jl
insl
fcoms
pop
roll
test
filds
into
rolb
inc
xor
rolb
mov
add
push
and
sahf
mov
jne
adc
mov
inc
mov
popa
add
and
xchg
loope
jge
inc
in
adcb
pushf
mov
dec
add
incl
mov
adc
popa
or
out
adc
or
gs
lock
and
cmpsb
mov
lods
mov
sbb
adc
cmp
subb
ja
and
adc
clc
sarl
fldt
or
add
add
inc
call
jb
in
inc
rolb
and
rorb
mov
inc
aad
sti
scas
stos
xor
inc
mov
adc
faddl
shrl
test
jecxz
lods
and
xorl
mov
mov
mov
xchg
jecxz
and
push
andl
mov
mov
mov
pop
je
push
subb
sbb
incl
lods
inc
insl
ja
mov
xchg
jns
add
dec
mov
sub
xchg
jle
movsl
dec
into
aam
cmp
mov
clc
pop
adc
xchg
mov
incl
jmp
inc
loope
pop
loopne
out
lcallw
out
pusha
clc
mov
jge
adc
xchg
loopne
shlb
shl
pop
or
pop
pop
dec
jne
pop
jb
jb
sahf
dec
sub
aaa
inc
sub
xor
dec
push
iret
ret
ret
jnp
jb
push
xchg
push
mov
incl
std
mov
or
sbb
decb
dec
fstl
push
adc
std
pop
lretw
mov
icebp
adc
mov
lcall
add
push
popa
rcr
adc
or
arpl
clc
ss
in
pop
mov
push
inc
and
ret
ljmp
push
dec
pusha
xchg
mov
dec
fldl
dec
je
rorl
jl
in
fldcw
pop
rorl
pop
ficoml
or
push
push
push
sbb
jg
lea
test
fwait
rorb
aas
push
cmp
test
push
popf
outsl
xchg
adc
negb
add
add
stos
or
call
loope
push
mov
xor
out
lcall
cld
lahf
or
pop
mov
daa
mov
add
cld
xchg
adc
loope
sub
adc
push
inc
jp
cmc
add
mov
stos
mov
adc
out
mov
push
push
pusha
xlat
aaa
pop
pop
cltd
adc
ret
jae
jmp
notb
xchg
mov
cli
xor
lods
pop
inc
test
sub
cmc
mov
and
shrl
imul
sbb
push
icebp
push
movsl
js
orl
sbb
jecxz
xchg
fiaddl
fstp
sub
nop
xor
shrb
frstor
out
xor
xorl
mov
cmp
xorb
or
lods
addb
js
stc
pushl
outsl
incb
add
push
or
jo
pop
ss
aam
imul
out
jo
jg
int3
jmp
push
or
lods
sub
sub
or
push
ss
ljmp
mov
mov
inc
add
lahf
pop
inc
test
movsl
popa
adc
gs
sub
or
dec
inc
add
sub
jo
cmpsb
cltd
push
and
rorb
fildll
or
and
xchg
mov
decl
cld
nop
and
test
andb
jl
loop
fdivs
out
ret
stos
pop
mov
xchg
xor
mov
sbb
sbb
inc
mov
lods
push
aad
mov
ret
cmp
push
xchg
daa
adc
xchg
xorb
mov
mov
std
jg
clc
jmp
lock
test
inc
orb
mov
or
subl
stos
sub
pop
cmpsb
push
fstp
add
add
fidivs
push
add
pop
popa
mov
das
adc
popa
loopne
test
mov
ljmp
jae
decl
push
sti
or
add
repz
inc
sub
push
mov
mov
sub
fistpll
aaa
popa
mov
icebp
inc
inc
aas
jge
jae
add
add
fisttps
test
xor
inc
stos
add
pop
enter
or
and
push
repz
mov
xchg
or
scas
lock
les
sbb
add
outsl
xor
adc
mov
lods
and
stos
and
outsl
int3
nop
cmp
in
mov
incl
jne
data16
add
inc
cmp
inc
jo
or
repnz
push
add
xchg
mov
cmp
in
inc
or
dec
popa
cmp
inc
sbb
test
incb
add
lock
mov
push
xor
add
sbb
inc
pop
cmp
adc
mov
mov
mov
inc
jge
xor
xchg
nop
or
imulb
or
xchg
lahf
fcomps
push
mov
mov
fidivrl
xor
fs
sub
xor
cmp
das
sub
inc
nop
add
inc
adc
cmpsb
loopne
pop
mov
add
fldt
dec
in
pop
adc
xchg
cmp
enter
aaa
cmp
sbb
xchg
sub
push
int3
jne
add
or
jg
or
push
cs
aas
stc
xor
shlb
ja
sub
cmp
dec
out
cld
lea
rcl
bound
movsb
cmp
xor
lock
pop
jno
mov
cmp
mov
or
and
jne
cmp
gs
jbe
cmp
gs
or
cmp
les
daa
pusha
xor
inc
popa
jnp
daa
test
test
jp
push
add
xchg
and
cmp
mov
lcall
add
orl
hlt
call
cmp
inc
xor
and
adc
jmp
xor
cmp
jle
test
xor
gs
dec
xor
jo
mov
jne
cmp
adc
outsl
add
les
sbb
lock
or
jo
xchg
andl
pop
cmp
pusha
adc
sub
or
popa
lcall
mov
mov
add
lds
cmp
push
lock
imul
mov
hlt
incl
stc
xor
push
icebp
or
push
jo
jo
les
sarb
fbstp
add
int3
gs
or
ret
sar
popf
les
cmpb
out
gs
sbb
loopne
cwtl
sahf
mov
sub
xor
in
jmp
or
jp
and
mov
in
pop
pop
mov
adc
jl
mov
dec
adc
adc
mov
adc
nop
push
xchg
cltd
mov
mov
or
xchg
mov
push
ja
or
push
push
jnp
gs
mov
jg
lods
ret
add
fcmovne
xor
imul
ja
arpl
or
icebp
add
aad
popf
gs
jle
push
sbb
jne
push
js
dec
sbb
addb
lea
adc
or
lock
cld
cmpsl
pop
pushf
add
add
mov
fnstsw
and
mov
dec
jp
add
std
adc
in
mov
je
adcl
sub
xor
or
ficoml
add
test
pop
test
xchg
add
mul
sbb
lock
jmp
adc
add
cmpsl
sarb
or
xchg
and
shll
mov
push
outsl
ficompl
ret
push
sub
xor
xor
fnsave
mov
cmc
inc
fs
adc
out
fcmovbe
fstp
adc
js
rolb
add
nop
fnsave
ljmp
je
xchg
adcl
add
sar
clc
or
or
push
add
roll
sbbb
mov
mov
pop
mov
andl
mov
lods
stc
stc
jge
fildl
pop
int
pop
and
add
add
mov
out
inc
cmp
mov
xor
dec
int3
inc
test
pop
fdiv
pop
inc
inc
add
add
mov
stos
or
outsb
nop
call
iret
adc
jae
add
sub
push
sarl
lea
or
ja
jns
push
pop
and
test
adc
jmp
cmp
xchg
sub
outsl
push
bound
and
add
adc
mov
and
xor
jne
test
adc
push
xor
fsubs
push
adc
jp
jno
push
sarl
rorb
or
pop
push
cmp
sub
jb
add
add
adc
push
or
mov
gs
sub
test
out
sar
xor
xor
andb
or
push
mov
out
scas
addb
ret
and
adcl
psubusb
mov
cmp
mov
or
inc
fdivrl
lea
add
add
dec
inc
sbb
lcall
add
sbb
add
or
adc
sub
test
push
mov
push
mov
outsb
mov
xor
fdivr
jno
shrl
mov
lods
in
inc
shlb
ja
add
fimull
dec
roll
inc
push
mov
dec
push
movsb
subb
push
pop
sbb
xor
sbb
rcr
add
sub
test
add
pop
inc
push
lods
push
jl
push
mov
hlt
mov
roll
rolb
adc
mov
add
addb
or
add
add
add
movsb
push
mov
cmp
sbbb
outsb
push
pop
adc
bt
mov
gs
jb
adc
pop
inc
pop
push
in
outsl
mov
jle
test
test
or
pop
dec
mov
std
pushl
test
push
movsl
gs
push
jne
push
rorb
mov
pop
cltd
mov
or
aaa
test
cli
add
sbb
mov
movsl
repz
imul
inc
mov
stc
clc
push
flds
jge
sbb
movb
sbb
out
adc
mov
adc
loopne
adc
push
into
test
lcall
outsl
xorl
sbb
imul
mov
or
cwtl
call
add
mov
cmpsb
jo
add
lock
fists
mov
and
adc
pop
mov
into
add
loopne
pusha
xor
or
jno
cwtl
dec
cmp
les
stos
hlt
cs
mov
sub
jbe
add
ficoml
jbe
clc
add
cs
cld
pushl
mov
shrb
popa
mov
jnp
nop
jb
call
add
loopne
dec
xor
xchg
adc
and
jmp
push
frstor
push
test
add
lret
add
jg
clc
jno
mov
pusha
es
push
xor
inc
icebp
subl
push
and
and
scas
dec
aam
loopne
sub
push
pop
rolb
lea
ljmp
or
adc
jae
pop
stc
adc
fisubs
mov
ljmp
add
fwait
stos
dec
clc
pop
clc
mov
or
mov
pop
in
int
add
push
and
sbb
mov
out
in
or
push
adc
and
lea
mov
dec
inc
loope
lret
add
or
and
fwait
jle
push
loop
pop
mov
sub
subb
pop
xorl
and
mov
dec
aam
pushl
pop
and
jns
pusha
xlat
or
fmul
gs
sahf
je
and
xor
jns
loopne
in
fimuls
in
loopne
or
cmp
push
mov
dec
dec
pop
or
dec
dec
add
test
pop
je
fisubs
add
imul
imul
repnz
rcrl
jne
loopne
jo
mov
pop
rorb
shlb
cmpsb
ret
adc
lock
push
and
scas
movsb
test
rcrl
add
xor
jnp
loopne
dec
push
inc
jno
fmul
push
fwait
mov
sahf
fistl
das
test
add
ss
push
push
call
or
ret
andl
adc
cld
pusha
ja
mov
dec
push
rcrb
inc
test
pop
scas
mov
xchg
pusha
sbb
add
push
gs
fadds
cltd
xchg
xor
enter
add
cmpb
jne
es
adc
or
add
jo
enter
push
pop
mov
push
repz
add
imul
sub
sub
adc
rcrl
loope
cli
outsl
mov
adc
jge
and
lcall
jnp
jge
cmpsb
sbb
or
addb
push
mov
loopne
fistl
inc
out
je
orl
adc
lahf
clc
aaa
fiadds
adc
rol
jle
add
mov
mov
pop
and
icebp
sub
into
mov
inc
loop
xor
roll
inc
pop
dec
xchg
push
dec
test
mov
adc
xorb
inc
lea
mov
adc
adc
mov
stos
adc
fcomps
shll
push
movsl
mov
xchg
push
xor
leave
sarb
mov
enter
scas
shl
or
es
or
push
add
jecxz
cmpb
xor
add
hlt
mov
gs
jo
and
push
xchg
sub
sbb
stc
inc
loopne
xor
ret
xor
scas
push
pop
ret
xor
dec
cli
push
xor
xor
pushl
std
loope
icebp
xor
mov
nop
push
addr16
gs
subl
and
mov
pop
jno
or
push
pop
sub
sbb
and
push
pop
insl
shrb
add
mov
sbb
les
add
shll
stc
lock
sub
mov
pop
orb
sub
dec
cld
nopl
cmp
add
mov
add
in
sti
mov
cwtl
rorb
in
out
adc
nop
lahf
cmp
shlb
push
jge
push
mov
sbbb
add
inc
lahf
push
scas
xchg
or
dec
and
cmp
bound
xor
and
lea
push
outsl
mov
push
test
dec
gs
xorl
mov
gs
push
sub
mov
sti
test
aas
mov
and
outsb
lods
jmp
xchg
lds
pop
loopne
ret
add
out
int3
inc
xchg
mov
gs
popa
mov
lcall
and
and
xor
push
push
imul
dec
xchg
push
cmp
mov
xchg
cmp
out
jns
sbb
add
mov
sub
ja
movsl
sub
mov
fcmovnbe
add
incl
shll
fldenv
rclb
lret
jno
add
mov
mov
xor
mov
and
lock
sar
fimuls
lock
adc
roll
jmp
add
adc
mov
andl
xor
rolb
sbb
or
cmp
jl
inc
jbe
mov
mov
std
ljmp
fisttps
fsubl
or
fstl
lods
add
call
mov
or
pop
inc
cli
int
sub
push
mov
jo
inc
xor
lods
rcll
xchg
testb
pop
js
cltd
push
test
dec
sbb
inc
lcall
and
xchg
gs
addl
add
clc
outsl
pop
jp
fisttps
dec
mov
sbb
add
loop
pop
and
pop
mov
and
xchg
pop
fstl
cmc
jp
aad
cwtl
or
pop
inc
add
pushf
cmpb
xor
mov
add
lock
out
add
or
push
pop
cltd
loopne
mov
mov
cwtl
inc
xchg
lret
mov
add
add
inc
lcall
fwait
lods
lods
mov
idivb
mov
mov
clc
js
dec
into
out
mov
jmp
mov
popf
rcll
adc
push
jae
add
xor
orb
mov
lcall
test
je
out
or
stc
lds
mov
in
inc
push
cmpsb
stos
or
gs
lock
inc
int
and
xchg
inc
xor
aas
mov
enter
lret
les
bound
fstp
push
adc
insl
or
xchg
popl
jne
xor
add
or
js
sbb
dec
ljmp
arpl
inc
fnstcw
nop
ss
and
mov
add
jno
add
ss
test
jmp
cmp
mov
push
cli
add
xchg
clc
xchg
mov
cwtl
sub
inc
rcrl
push
sbb
push
add
cmp
sbb
adc
rorb
xor
add
add
cmp
addb
pop
mov
and
cmp
js
outsb
nop
cmp
jp
xabort
add
incl
mov
cmpl
fldcw
add
adc
adc
cmc
mov
sarb
add
bswap
addb
and
dec
orb
arpl
xor
add
imul
sbb
sbb
adc
arpl
call
xchg
sbb
add
ficoml
mov
lea
inc
adc
cli
cli
mov
adcb
jno
add
xor
add
outsb
add
mov
insl
mov
push
push
dec
add
add
push
sbb
mov
cltd
mov
rol
gs
fdivrs
cs
or
and
add
or
jne
addb
cld
fists
dec
or
rcrb
push
jno
add
loopne
sbbb
add
popa
rcrl
fwait
sub
xchg
adc
gs
pop
adc
test
push
mov
adc
rclb
xor
sub
or
add
xor
mov
push
mov
inc
sub
push
inc
subb
xor
or
sbb
or
xor
xor
xor
sbb
lods
ds
add
xor
fdivrp
adc
xor
xor
mov
push
test
adc
xor
popa
inc
movsb
and
xor
fwait
outsl
fwait
and
cltd
or
xor
xor
xor
inc
lods
std
cmp
cmp
add
xor
fsubs
ds
xor
add
rcl
ljmp
dec
or
dec
xor
push
adc
add
dec
xor
push
out
cmpsb
in
cmp
rolb
inc
xor
outsl
lcall
mov
or
pop
loop
dec
imul
pop
lock
loopne
orl
fisubrs
mov
push
xor
push
loop
outsl
xor
imul
je
add
gs
cmpsb
stc
jnp
push
xor
popa
xor
xor
js
int
mov
in
jns
repnz
fistpl
adc
jne
gs
or
xor
or
imul
push
mov
dec
xor
arpl
mov
push
insl
outsl
test
inc
dec
mov
mov
loop
dec
orl
push
ret
sub
lahf
xor
xor
shll
fwait
xor
mov
sub
xor
and
xchg
xor
jmp
shrb
mov
mov
mov
mov
test
dec
fiaddl
push
add
aam
mov
xor
mov
xor
inc
stos
mov
mov
mov
enter
rcll
bound
xor
ljmp
js
xor
mov
mov
mov
or
iret
dec
mov
xor
leave
out
aad
add
sarb
enter
fcomi
scas
rol
jle
sar
ret
cmp
xor
fldt
fnsave
fbstp
fiadds
adcb
test
mov
addb
sar
fildl
shll
xor
xor
outsl
pop
sti
or
xor
push
repz
in
mov
repnz
imul
xor
push
loope
cmp
arpl
inc
xor
ficoml
outsb
add
push
mov
aaa
mov
ror
pop
add
add
adc
outsl
mov
push
jae
adc
scas
les
ljmp
pop
cmp
mov
stos
sub
lea
je
ret
fists
int3
outsl
pop
jmp
flds
into
or
sbb
scas
pop
push
push
mov
cli
testb
cld
inc
push
cmc
loop
push
imul
test
movsl
fldenv
test
std
adc
adc
aas
dec
cmp
xchg
add
in
cld
pusha
out
add
outsl
movsb
push
push
jp
pop
and
push
adc
rolb
add
test
fldl
int3
fistpll
inc
push
jbe
lock
inc
pop
add
lock
test
mov
add
cmovo
je
pop
call
jmp
inc
adc
rcrb
or
inc
test
inc
pop
lock
loopne
mov
and
inc
orl
jle
adcb
xchg
cmp
pop
lahf
add
inc
add
cmpl
shlb
in
xor
enter
or
push
mov
push
add
dec
orb
inc
clc
add
nop
orb
add
or
and
stos
push
push
add
inc
push
mov
idivb
aam
push
ds
aad
add
add
sub
imul
clc
imul
data16
rcrb
adc
xchg
or
push
pusha
gs
adc
add
push
push
mov
pop
andl
xor
pop
into
lock
dec
test
mov
xchg
inc
loop
sar
call
xor
mov
cmp
xchg
jg
cld
add
and
jne
xorb
aad
sbb
sub
adc
jge
jne
jo
dec
pop
fcomip
lcall
push
clc
and
lock
lret
inc
mov
mov
xchg
rcrb
inc
push
lock
adc
mov
ret
pop
clc
pop
adc
add
add
pop
data16
ljmp
xchg
mov
add
mov
notl
nop
xchg
adc
and
or
pushl
push
xchg
xchg
dec
nop
je
cs
add
add
pop
add
or
add
jbe
ss
pop
sarb
call
cmp
pop
insb
adc
adc
mov
pop
jno
in
jno
adc
addb
inc
test
es
mov
xchg
pusha
xchg
inc
ja
incl
sbb
mov
xchg
rorb
push
adc
add
push
mov
mov
add
cmpl
dec
mov
in
xor
pop
ja
sbb
xor
sbbl
jbe
shlb
out
sub
outsb
inc
add
and
data16
popa
push
xor
push
add
dec
or
inc
dec
xor
adc
and
call
add
and
test
lcall
lea
xchg
jmp
adc
rolb
sbb
pop
cmp
mov
clc
pop
repz
pop
add
lgs
xor
repz
stc
mov
inc
mov
aaa
add
stos
bound
int3
popl
adc
lock
popa
inc
or
cmpb
nop
add
sbb
std
mov
jmp
push
adc
push
jne
clc
cwtl
icebp
lret
inc
pop
cs
adc
int3
jne
jge
jg
jb
xor
nop
rorb
or
mov
aad
outsl
sbb
pop
fsub
insb
xchg
mov
adc
pop
fistl
adc
push
je
sbbb
pop
push
push
je
mov
add
fimuls
pop
call
mov
xor
pop
lods
and
cmp
xor
sub
inc
data16
push
xchg
add
es
and
dec
data16
es
scas
cmp
jo
dec
or
add
aad
or
decl
push
mov
stc
add
bound
inc
stc
mov
je
movlps
and
andb
cwtl
or
rcl
es
pop
rorb
push
cmpb
rcr
and
loopne
std
mov
out
and
inc
or
jbe
cmp
or
or
test
add
fiadds
mov
outsl
push
inc
or
xor
test
or
sar
push
pushf
mov
xchg
dec
sub
lock
mov
jl
push
lods
add
mov
push
pop
dec
addr16
test
cmp
xchg
push
or
add
pusha
nop
cs
mov
sub
xorb
jle
jmp
inc
mov
loopne
add
decl
adc
push
jle
sub
mov
mov
or
mov
cmp
xor
test
rolb
adc
lcall
xor
movsb
inc
test
pop
push
push
add
fcmovnb
popf
addb
mov
imul
cmp
or
fwait
fwait
insl
pop
repz
xchg
xchg
or
push
js
or
mov
out
jecxz
add
push
nop
xor
mov
lea
or
push
and
call
mov
sti
pushf
push
and
lock
insl
sarb
lret
jmp
sti
mov
aaa
sbb
mov
fiadds
hlt
jge
push
mov
sti
mov
mov
loopne
xor
stos
sahf
dec
sbb
push
cmc
aaa
sbb
jo
clc
push
lahf
repnz
fwait
lcall
add
adc
mov
in
adc
mov
push
inc
int3
lods
dec
add
xor
mov
mov
xchg
lret
and
lods
cli
outsb
outsb
les
mov
clc
orb
das
add
push
sub
xor
cltd
or
lock
jg
dec
fwait
add
pop
jb
nop
sub
push
xchg
gs
add
mov
push
mov
fisttpll
dec
fmulp
call
cli
jg
adc
out
push
mov
and
adc
orb
mov
sar
jle
sub
scas
int3
mov
add
inc
shl
xor
xchg
orb
fldl
adc
lock
repz
rorb
xchg
mov
clc
adc
pop
mov
mov
testb
xor
push
adc
jne
scas
dec
lret
push
decb
jge
sbb
cmp
aam
pop
dec
cmc
xor
adc
fcoms
sbb
popa
lret
xchg
pop
das
add
add
push
pop
dec
inc
xchg
dec
push
or
or
loop
nop
dec
mov
rolb
cwtl
cld
sbb
cmp
add
push
add
stos
xchg
add
data16
add
fisttpl
addb
jp
lret
xchg
loop
mov
out
mov
lahf
fiaddl
push
xchg
dec
add
gs
add
dec
lock
lea
pop
inc
and
add
popa
insb
subb
mov
or
xor
aaa
push
leave
add
xchg
mov
popa
outsl
adc
cld
popl
add
incl
in
out
addb
mov
mov
add
or
insl
xor
fcomi
inc
add
mov
lock
mov
fmul
cmc
fistl
xor
cwtl
push
add
cmp
das
or
aam
in
or
dec
adcb
fsubrs
jb
pop
es
adc
mov
addl
subl
pop
xor
dec
sbb
jecxz
lock
mov
rcll
or
jg
jnp
imul
xor
sub
xor
sub
add
pop
push
outsl
dec
add
add
test
adc
clc
cmp
add
xchg
mov
jle
xchg
xor
fcomi
ret
add
pop
mov
dec
or
aam
add
lods
adc
add
adc
or
push
xchg
clc
or
or
fildl
lea
andb
loope
inc
inc
dec
stc
xchg
sbbb
decl
mov
add
add
cmp
shll
dec
jge
inc
lret
mov
call
mov
inc
movups
sarb
cld
ja
cli
stc
int
nop
xchg
loop
add
add
popf
jb
push
mov
aaa
or
lock
or
roll
rorb
push
pop
enter
into
adcb
pop
rcrb
icebp
push
push
lcall
cmp
outsl
in
push
ficoml
or
scas
cmpsb
fdivp
fiadds
faddp
adc
gs
add
jecxz
std
add
push
sarb
ret
or
add
fistpl
and
test
les
imul
add
cmpsb
das
xchg
mov
dec
cltd
ret
fmuls
inc
adc
lcall
test
mov
les
pop
sti
andb
xchg
test
sbb
push
xor
es
lea
jp
test
mov
xchg
push
xor
push
jo
mov
mov
orl
mov
add
mov
dec
insl
mov
sub
mov
mov
adc
pusha
pop
int3
test
adc
push
sub
cli
jecxz
adc
sbbb
or
and
add
inc
cli
jl
push
test
push
and
adc
out
push
and
test
adc
pop
popf
mov
dec
inc
xchg
mov
sbb
jne
jae
sbb
add
loopne
in
xchg
add
mov
rolb
loopne
sbb
push
inc
cmp
outsl
jnp
mov
jp
xchg
or
xor
inc
add
jge
jno
testb
ds
or
jnp
mov
jecxz
dec
inc
push
ljmp
sub
lods
insl
clc
mov
shlb
and
sub
mov
add
push
test
fmulp
push
pusha
test
lock
cmpsb
dec
or
pop
cmc
adc
mov
movl
mov
mov
and
xchg
inc
pop
sbb
mov
inc
xlat
data16
inc
jl
add
push
inc
clc
jg
jae
inc
adcb
jle
addr16
push
es
mov
mov
jbe
push
dec
dec
push
dec
rclb
and
sti
push
mov
icebp
orb
repnz
jno
or
fidivrs
push
add
mov
stos
mov
jbe
sub
mov
add
addb
add
shl
data16
xor
movsw
mov
clc
sahf
mov
mov
cmp
lds
xchg
fdivrs
add
dec
clc
mov
je
push
sub
mov
or
sub
cmp
mov
xor
inc
shrl
lods
test
jno
xorl
jbe
mov
and
lock
rclb
fs
fildl
gs
loopne
daa
les
xchg
lds
sarb
mov
push
pop
and
hlt
into
push
loopne
xchg
divb
push
or
shrl
ljmp
add
arpl
mov
rcrb
and
hlt
cmp
sub
mov
mov
and
pushf
inc
pop
mov
push
dec
lcall
mov
lcall
mov
clc
fwait
add
int3
push
gs
xor
jmp
cli
fbstp
in
push
mov
jbe
sbb
dec
and
lock
push
roll
movsb
popf
iret
mov
xorb
xchg
andl
jle
out
pop
shlb
lret
and
or
and
jle
mov
adc
pusha
dec
orb
pop
and
mov
push
inc
push
push
popf
popl
inc
cbtw
inc
data16
faddl
mov
cmp
push
push
jl
mov
outsb
sbb
mov
loop
int3
xorl
fisubl
pop
sar
push
movsl
andl
aad
faddl
outsb
mov
call
push
scas
mov
mov
and
mov
lret
scas
mov
add
add
sbb
out
xor
fcoms
mov
idivl
inc
imul
loopne
pusha
mov
add
xchg
int3
sub
sub
in
adc
je
sub
inc
clc
addl
adc
inc
sbb
jl
fs
aam
mov
mov
mov
and
and
scas
pop
mov
mov
push
pop
cmpsb
jg
fisubl
inc
push
ja
test
ljmp
add
stc
arpl
fsubl
loope
or
add
xchg
jbe
mov
lods
in
sbb
shl
cmpsb
xchg
add
fisttps
add
cwtl
mov
xchg
cmpsb
jle
xchg
xor
mov
loop
add
dec
loopne
adc
ljmpw
dec
rcl
adc
popa
fisttps
push
adc
jnp
outsl
fisttps
sub
or
pusha
or
addr16
mov
mov
add
inc
cmpsb
jge
rcrl
adc
stc
cld
insl
mov
mov
xor
and
dec
pusha
enterw
push
pop
lret
test
rorb
add
ret
nop
add
mov
rorl
inc
dec
jmp
aaa
js
or
add
or
xchg
mov
mov
mov
test
mov
lahf
add
nop
aaa
std
pop
loopne
insb
jge
fdivs
fsubl
sub
aaa
or
mov
inc
dec
sarb
xchg
lcall
inc
jl
jno
in
xchg
mov
shll
jle
pop
cwtl
or
lret
inc
mov
and
add
or
std
outsl
push
jmp
sbb
rorl
in
mov
pop
dec
inc
push
push
lcall
xor
cli
sub
adcb
push
lahf
out
add
movsb
cmpb
rorb
adc
jo
andb
test
mov
jg
insb
lods
mov
rol
gs
and
pop
or
clc
or
push
mov
mov
or
aad
mov
mov
gs
or
data16
test
mov
rorl
stos
inc
jo
fisubs
lahf
dec
js
aas
shlb
add
and
add
shl
out
push
std
jg
rclb
lock
sbb
or
and
stos
add
fcoms
add
jns
or
nop
mov
aaa
jecxz
xorl
push
mov
add
pop
push
out
mov
sbb
xchg
aam
popa
inc
or
lock
test
rol
cmp
push
pusha
jmp
mov
xor
aam
add
inc
inc
add
and
sub
outsl
add
pop
mov
xchg
int3
outsb
cli
int3
mov
jl
dec
cmpsb
leave
xor
pop
shr
fmull
and
xchg
mov
int3
shr
mov
rolb
lret
mov
xchg
popf
fisubl
adc
gs
loopne
mov
rorl
sahf
push
and
mov
jp
mov
lock
add
xorb
mov
adc
mov
add
cltd
add
and
ljmp
xchg
rorb
pusha
xchg
adc
mov
inc
mov
adc
cld
sarb
xchg
clc
mov
xchg
test
adc
mov
xchg
bound
mov
and
mov
bound
dec
addl
xchg
add
cmp
dec
filds
cmp
xchg
cli
mov
push
mov
or
add
test
pop
dec
mov
mov
orb
clc
les
adc
pop
test
add
shlb
push
test
push
mov
mov
or
rol
fidivl
filds
stos
decb
fmul
xor
data16
fwait
mov
daa
or
addb
lods
mov
or
mov
jl
test
adc
push
inc
add
mov
or
loopne
adc
pusha
push
stc
xchg
jecxz
cmc
stc
inc
nopl
andl
xchg
push
lock
add
scas
dec
decb
jnp
adc
lret
inc
popf
fs
popa
add
mov
push
pop
fsubl
enter
loope
inc
shlb
movsb
loopne
lock
push
push
insb
ret
xchg
fbld
rolb
sbb
cs
sbb
push
sbb
int
pop
js
cli
das
sahf
nop
sub
xchg
adc
or
into
sub
mov
jmp
in
or
test
scas
xchg
or
and
mov
insb
out
cld
sbb
ss
gs
jg
adc
add
mov
insl
lock
add
push
sbb
add
add
mov
add
lret
repnz
add
mov
or
inc
adcb
sti
lods
pop
pop
test
adc
das
and
cmp
jge
stos
xchg
cmp
inc
or
pop
adc
and
mov
xorb
ret
xor
ret
mov
add
lock
add
fwait
test
mov
gs
jb
data16
loopne
mov
push
jmp
push
jae
mov
sbbl
inc
mov
xor
cmpsb
pusha
sub
nop
insb
adc
adc
jl
rcrl
sub
ret
imul
in
add
mov
push
cmp
lock
in
and
add
adc
add
ret
shlb
inc
push
lock
in
mov
push
jge
das
or
fwait
push
insl
push
push
mov
insl
adc
sub
mov
lcall
add
or
rclb
mov
loopne
or
adc
sub
xor
lock
jmp
jg
add
mov
popa
jb
mov
mov
test
mov
inc
data16
lea
popa
add
es
cmp
insl
jb
mov
xor
mov
out
sub
lock
enter
xor
mov
pushl
mov
fcmovnu
push
lock
test
mov
adc
aam
lea
add
test
loope
jle
sti
bound
mov
lret
fsubl
dec
push
clc
add
clc
adc
addl
aam
push
add
and
and
and
lret
jmp
push
lods
divl
pop
sub
sbbb
mov
loop
jle
aaa
push
fbstp
add
add
sbb
loop
lcall
out
jb
std
mov
insl
and
add
jo
mov
mov
cmp
jecxz
or
jl
xchg
out
fcomip
outsl
sbb
xchg
es
cmp
jmp
pop
decb
or
adc
in
sub
xor
stos
out
xchg
lock
jo
cltd
and
pop
add
das
push
and
mov
pushf
lods
out
and
aad
xor
and
test
ja
imul
jg
cld
outsb
add
arpl
das
push
jl
cmp
mov
push
or
idivb
out
add
push
mov
jp
push
push
rorb
xchg
fwait
xor
cmpsb
adc
add
sbb
enter
mov
adc
sbbb
mov
push
mov
mov
add
popa
sbb
jno
cmp
sbb
xorl
mov
frstor
sbb
sbb
or
mov
jbe
mov
dec
push
mov
orb
or
cmp
inc
adc
pop
nop
fucomi
movsb
movb
cwtl
lods
ljmp
inc
inc
push
cwtl
lea
movsl
movsb
and
movb
add
or
mov
push
inc
and
add
dec
ss
inc
imul
test
test
push
fst
xchg
les
xor
outsb
sub
cmpb
repz
out
pop
sbb
mov
cli
inc
sub
inc
mov
es
add
inc
in
add
and
sub
sub
adc
ljmp
in
leave
rolb
es
push
inc
and
inc
and
fs
push
ljmp
push
test
or
pushf
stos
cld
and
test
ljmp
and
sub
xchg
nop
adcl
pop
data16
push
lcall
ret
add
jnp
sahf
pusha
sub
sub
jp
dec
sub
mov
scas
test
aam
xchg
sti
pusha
push
or
or
push
sub
jg
rol
in
ret
mov
stc
add
repz
sti
xchg
adc
adc
stc
jle
sub
in
push
inc
dec
add
cld
pop
sub
sub
mov
out
gs
test
les
mov
pop
push
inc
push
push
jecxz
push
add
or
or
arpl
ss
mov
xchg
mov
mov
out
push
push
test
sub
push
add
xchg
lret
ret
and
subb
insb
lret
test
fisubl
inc
adc
aaa
shrl
xor
lea
cwtl
xlat
gs
mov
clc
push
ret
lret
inc
lret
mov
or
add
pop
sub
nop
sbbl
and
es
sub
dec
and
add
pop
inc
and
mov
add
pop
push
adc
lock
mov
pop
lea
inc
push
loopne
lcall
mov
pusha
adc
push
imulb
or
add
sar
add
stos
adc
lds
or
and
cld
add
adc
loopne
mov
mov
adc
add
int
test
ret
push
push
cmovno
adc
mov
inc
dec
add
xchg
inc
cmpsb
and
adc
test
inc
push
or
rclb
xchg
and
push
xor
pusha
nop
hlt
dec
sbb
sahf
mov
sub
rclb
push
inc
cmpsb
add
jge
pop
movsb
clc
push
push
sub
sbb
push
push
jbe
gs
mov
add
pop
sub
push
pusha
cmp
or
popa
sahf
cld
outsb
gs
insl
arpl
push
les
test
sbb
mov
mov
shrb
and
test
shrl
dec
mov
mov
lcall
or
pushf
rcr
add
push
orl
push
adc
and
sbb
sbb
push
aaa
pusha
inc
push
and
pop
lahf
fldt
inc
xor
and
mov
sbb
xchg
fiadds
es
add
aaa
cld
ss
mov
or
stc
mov
sbb
lods
adc
fstpt
loope
loopne
mov
pop
and
loopne
icebp
and
and
mov
test
jns
clc
call
clc
imul
add
rolb
adc
mov
movsb
test
test
push
ret
jbe
lock
mov
mov
push
rorb
add
movsl
clc
lcall
add
adc
call
dec
mov
cmpsb
dec
push
bound
xor
std
inc
dec
and
daa
mov
outsb
addb
loopne
inc
xchg
orb
andl
add
fwait
sbbb
je
or
mov
or
push
out
push
mov
lock
and
push
sbb
outsb
fcoms
and
ficomps
add
pop
inc
and
in
xor
push
and
xchg
hlt
orb
gs
mov
dec
sub
cwtl
add
dec
sbb
and
pushf
mov
pop
and
cld
jg
and
clc
dec
data16
loop
xrelease
mov
mov
add
inc
push
dec
adc
das
jp
pop
cmp
daa
inc
sub
push
stc
mov
jo
in
or
pop
add
push
loopne
mov
jb
popf
mov
adc
add
cli
jne
shlb
sahf
mov
pop
rorl
sbb
sub
in
leave
mov
fimull
or
mov
loope
xchg
out
int3
mov
test
and
cmpsb
sbbb
pusha
xchg
sbb
adc
bound
mov
xor
roll
in
jg
and
int
add
xchg
icebp
add
pushw
add
out
or
xchg
addb
add
sbb
bound
add
cmpsl
addb
add
xor
popa
or
fdivr
nop
jno
mov
push
loope
sub
jp
pop
mov
jno
pop
mov
cmp
ljmp
jns
adc
lock
mov
jb
nop
or
mov
stc
xchg
push
dec
shll
sahf
ret
pop
xchg
mov
mov
cmp
adc
fdivs
add
shlb
decl
and
gs
or
add
add
popa
jg
fisubl
leave
fwait
subl
jnp
test
cld
push
xor
mov
in
lock
lods
xorb
adc
enter
xchg
dec
leave
mov
loop
imul
dec
aaa
sti
inc
or
mov
mov
push
incl
dec
and
cmp
gs
rclb
dec
faddl
xchg
cmpw
fdivrl
js
ficompl
xchg
jge
fs
aad
push
mov
or
push
xchg
mov
mov
mov
scas
faddp
mov
inc
sbb
push
pop
mov
push
inc
test
gs
fwait
into
adc
add
mov
dec
int
cmp
addb
inc
andb
pop
test
jo
test
sbb
adc
jg
push
sub
add
mov
insl
popa
mov
mov
jbe
adcb
dec
mov
sub
xchg
rcrb
mov
mov
outsl
cld
call
aam
add
mov
enter
mov
jg
mov
popf
call
ret
lret
mov
sbbb
or
push
mov
add
ret
inc
and
mov
or
cwtl
mov
call
jle
xor
jne
ret
or
or
insb
clc
outsl
push
lock
sub
das
push
popa
mov
rcrb
adc
jl
jge
ret
add
xchg
orb
outsb
or
add
andb
cltd
jns
adc
mov
push
add
bound
push
aaa
hlt
scas
cbtw
pushf
out
mov
xchg
and
sbb
jg
lcall
cltd
lock
jle
dec
add
jp
add
fnsave
push
push
mov
popf
lock
adc
loope
mov
mov
icebp
jg
mov
pop
data16
sub
pop
pop
xchg
filds
lock
jge
repz
or
sbb
gs
mov
sahf
inc
jbe
mov
push
push
pop
mov
je
mov
lock
int3
sub
add
jp
add
daa
sub
imul
clc
pop
push
jg
add
ret
push
dec
xor
pop
sub
or
push
insl
or
mov
add
mov
fmuls
cmpl
sub
dec
clc
fildl
rorb
pop
mov
mov
inc
jg
dec
adc
inc
xchg
jbe
jb
inc
dec
loop
or
pop
add
dec
push
rcrb
mov
lock
xchg
fstp
mov
and
push
loopne
push
add
xchg
fdivrl
dec
sub
notb
mov
sub
rolb
xchg
mov
int3
mov
rcrb
lock
or
adc
add
shlb
pop
mov
cmc
pop
icebp
push
pop
divb
mulb
movsb
cmpsb
clc
add
adc
pusha
cmp
push
lcall
sub
mov
and
testb
xchg
shlb
lds
cld
or
dec
push
sbb
les
int3
inc
popf
cltd
add
ja
or
mov
mov
jae
sub
sub
xor
dec
orb
and
cmpsb
inc
ficoms
adcw
popa
sbb
sub
pop
repnz
dec
xor
enter
add
xor
ret
xchg
or
pop
sbb
ds
repnz
mov
push
test
push
and
popa
xchg
inc
sub
mov
incl
inc
push
rolb
sbb
dec
mov
xor
jo
pop
dec
call
pop
mov
pop
push
jb
mov
or
daa
adc
pop
popf
insb
sub
gs
mov
clc
mov
and
adc
cli
inc
and
add
sbbb
and
jb
and
mov
push
repnz
add
aaa
rcll
push
imul
mov
jae
fdivrs
mov
xchg
stc
mov
stos
cmp
orb
mov
pop
jnp
xorb
push
cmp
xor
mov
stc
xchg
adc
add
fdivs
xchg
orl
fs
lret
or
mov
add
mov
aaa
cld
fwait
cltd
jle
or
rcr
jns
add
and
movhlps
outsl
cli
mov
mov
push
jge
adc
and
and
add
subb
jb
sbbb
jge
outsb
in
mov
mov
jle
and
sbb
push
loopne
popf
mov
sbb
adc
or
outsl
lods
insl
inc
sub
inc
and
shlb
dec
mov
popf
mov
out
adc
sarl
in
fistpll
mov
loope
sub
sbb
cmp
and
cmp
sbb
ss
inc
repz
inc
xor
fiadds
and
mov
pop
jb
xchg
mov
cmp
or
inc
or
push
jo
dec
dec
shl
jmp
xchg
sbb
xchg
sar
outsl
jp
mov
lock
hlt
clc
ret
cmp
les
aas
sub
xchg
jns
sbb
jo
ljmp
loop
and
cmpsb
popa
fidivl
cmp
cli
jns
sub
pushl
out
add
shrb
push
aas
call
adc
pop
add
outsl
pop
icebp
cmp
push
and
inc
cmp
loope
push
cmp
jp
imul
nop
cmp
cmp
pusha
cmp
adc
cmp
push
stos
outsl
adc
cmp
pop
cld
xchg
loopne
icebp
pop
and
lock
add
mov
stos
clc
xchg
mov
pop
divb
mov
push
icebp
sbb
mov
or
sbb
shlb
inc
sbb
push
jne
pushf
mov
mov
andl
insl
jge
or
out
adc
cmp
or
or
pop
pop
or
jl
sbb
js
push
popa
frstor
sbb
xchg
fisttpl
jnp
mov
out
mov
push
add
mov
test
aam
nop
pop
test
push
mov
jecxz
inc
loop
mov
fimull
aam
mov
test
inc
add
es
push
sbb
push
out
rorl
add
push
je
int3
or
mov
push
fiadds
cs
add
addr16
es
jb
rorb
bnd
add
dec
cli
push
adc
add
cmp
pop
mov
sub
cmp
mov
int3
dec
dec
lret
lcall
fisubs
nop
push
mov
sbb
gs
inc
fcmovnbe
xchg
sbb
cmp
add
sbb
insl
clc
lcall
sub
push
push
andb
fucomp
repnz
mov
imul
andb
inc
stos
bound
adc
adc
cmpsl
out
xor
andb
sub
divl
rorb
pop
mov
add
aam
inc
cmpsb
pop
dec
push
dec
sbb
rclb
aam
mov
add
insb
add
add
xor
sub
imulb
inc
cmp
and
push
scas
mov
add
or
add
and
dec
jb
clc
push
rorb
dec
ljmp
fs
jne
fs
add
adc
fisubl
les
sub
lret
add
adc
adc
xor
repz
jl
adc
fisubrl
addb
and
and
or
push
aad
add
add
ficompl
jle
into
mov
int3
jl
test
sub
daa
cmpb
mov
fcmovb
or
and
mov
shrb
add
pop
pop
add
insb
xor
ficompl
xchg
pop
cmp
adc
test
pop
pop
fnsave
mov
xchg
adc
mov
xorl
daa
pushf
lcall
xchg
add
jns
inc
xchg
cmpb
or
cmpsb
or
pusha
dec
mov
sbbb
push
pop
pushf
daa
push
test
lods
scas
ret
lcall
popa
lahf
add
cltd
pusha
lahf
pusha
cmp
cwtl
add
int
popa
inc
bound
push
stos
or
or
or
fmull
mov
mov
outsl
mov
ja
js
cld
jb
enter
mov
sahf
fildl
loope
mov
or
loope
pop
jp
addb
add
adc
sub
enter
gs
sahf
les
xchg
dec
clc
aaa
loope
add
ret
inc
push
add
add
cmp
adc
popf
lock
push
adcb
add
mov
jmp
mov
sub
and
or
push
filds
pop
jb
xorl
imul
add
inc
cmpl
cld
incl
orl
and
clc
inc
push
idiv
or
pusha
cmp
loopne
jecxz
jns
mov
or
pop
and
push
or
loope
fcoms
or
gs
mov
fdiv
push
mov
ret
pop
jge,pn
mov
xchg
add
enter
push
mov
sahf
mov
ret
add
and
stos
fistps
or
mov
xor
sbbl
loope
dec
mov
or
inc
test
loopne
aas
inc
ret
dec
sti
shlb
push
push
loopne
add
mov
pop
fdivs
add
jle
dec
dec
addr16
shr
or
movb
popf
xor
rolb
leave
or
movsl
pop
dec
dec
and
ja
pop
push
mov
xor
mov
adc
js
sbb
dec
mov
int
loopne
adcb
dec
fs
insb
shl
mov
or
sub
test
mov
call
pop
cld
jge
call
add
sub
xor
js
fmuls
arpl
cmp
and
adc
imul
mov
dec
out
popa
subl
cmp
ss
js
and
subl
fwait
test
add
sbb
cli
cltd
xchg
sbbl
test
jg
adc
enter
xchg
ficoms
nop
rclb
ljmp
lret
frstor
or
pop
ror
and
inc
pop
push
inc
or
push
sbb
mov
xchg
int
fstpt
movsw
popl
add
adc
push
xchg
lret
andl
adc
xor
or
loopne
and
sbb
outsb
leave
add
rorb
sahf
shlb
push
cld
mov
adcb
push
xchg
xchg
lods
int3
mov
rcll
rolb
push
fsubl
and
sub
test
and
jge
jbe
cmpsb
dec
movsb
out
roll
loop
decb
cwtl
or
repnz
orb
dec
pushf
mov
push
jae
jecxz
xchg
stc
inc
add
and
and
dec
pusha
inc
popa
subb
loope
mov
xchg
cmpsb
dec
mov
stos
push
inc
cmp
adc
in
inc
or
xchg
or
lret
inc
or
hlt
out
mov
nop
jb
dec
dec
xchg
push
icebp
outsl
sbb
jne
add
add
dec
cmpsb
pop
mov
mov
mov
xor
pop
push
sbb
ret
je
push
sbb
mov
mov
push
dec
les
sarb
sbbl
pusha
add
mov
dec
mov
dec
add
icebp
incl
ret
inc
mov
cltd
rorb
and
lock
add
bound
sti
pop
or
cld
push
add
mov
add
xor
mov
dec
cmp
jo
mov
scas
and
jl
clc
dec
push
add
mov
pop
cmp
cmpsb
add
jle
fucomip
mov
sti
inc
test
add
mov
icebp
add
xchg
add
incb
add
lcall
mov
add
bound
aam
lock
or
mov
fadds
add
stc
xchg
pushl
jno
or
pop
xchg
push
leave
mov
mov
xchg
dec
movsb
nop
imul
xor
add
popf
mov
loopne
and
jns
jmp
in
mov
in
jmp
add
mov
jge
mov
add
mov
cli
out
xor
fldl
test
push
lds
clc
xorb
neg
and
bound
add
filds
or
stc
mov
add
shll
and
pop
loopne
add
dec
mov
pop
fisubrl
and
jmp
pop
add
fisubrl
add
into
dec
add
add
cld
ljmp
test
popa
pop
jb
inc
and
xchg
mov
mov
std
ja
and
cmp
push
fs
push
insb
popa
or
shll
mov
add
xor
dec
pusha
cmp
and
mov
adcb
andl
and
xor
push
push
inc
test
adc
mov
das
dec
mov
fmul
mov
sub
mov
dec
xchg
mov
les
gs
add
mov
popl
push
mov
pop
and
out
aas
loopne
push
sbb
pushf
cltd
inc
adc
mov
fadds
clc
cmp
adc
pop
nop
add
mov
outsb
or
jo
lret
jb
push
add
ret
test
lock
clc
or
sete
in
movsl
cmpsb
or
mov
add
das
call
sub
xchg
inc
or
js
push
pushf
add
test
lret
in
inc
and
out
pusha
add
sub
ljmp
and
shlb
and
clc
idiv
mov
or
lods
dec
cmp
movsb
es
pusha
mov
scas
loop
adc
out
shlb
dec
inc
adc
or
clc
fistl
test
mov
mov
andb
cmp
push
cwtl
mov
testb
pusha
xchg
inc
xor
jb
xor
push
mov
insl
cmpsl
fldl
test
rcl
in
pop
jo
push
mov
sbb
mov
inc
pop
push
gs
mov
cmp
sub
dec
add
addb
and
mov
aaa
or
adcl
adc
mov
push
adc
adc
jno
xor
mov
pushf
mov
add
and
sbb
jnp
std
add
push
mov
inc
add
mov
jb
add
pusha
push
xchg
gs
pusha
jmp
call
and
add
fcomps
and
sub
rcrl
test
cld
stos
mov
inc
dec
fs
xchg
jle
decl
pop
dec
outsl
popf
add
inc
mov
sub
jno
add
filds
pusha
xchg
jo
adc
push
sbb
sti
add
or
lcall
gs
movsb
xor
or
icebp
orb
adc
or
data16
push
sbb
adcb
add
rolb
xor
xchg
popa
jmp
in
cli
xchg
or
pop
or
xchg
xchg
add
bound
cs
inc
cld
sbb
add
push
push
lock
add
push
pop
lock
dec
dec
add
adc
push
stos
adc
mov
gs
mov
xchg
jo
add
shlb
nop
cli
inc
pop
sbb
loopne
mov
cmp
mov
cmpsb
sub
xchg
loopne
mov
lods
test
loopne
rcrb
mov
push
loop
and
xor
les
push
pop
xor
or
or
pop
mov
pop
les
ss
mov
sub
and
xchg
pop
enter
cmp
scas
add
mov
sub
push
sbb
sbb
sbb
rolb
fstpt
test
or
pop
and
sub
add
andb
les
inc
add
sbb
shrb
jmp
movb
bound
pusha
inc
mov
addb
xchg
adc
adc
dec
mov
lock
fs
pop
pop
imul
into
lods
mov
sub
xchg
fdivrl
sub
push
pop
sub
test
xchg
test
cld
aaa
insb
hlt
adc
mov
movsl
orb
or
add
inc
loopne
je
popf
loopne
mov
or
adc
push
xor
inc
fucomi
or
pusha
adc
xor
cwtl
stos
mov
shrb
mov
mov
mov
mov
inc
jmp
add
and
clc
inc
popa
adc
filds
push
lock
out
sahf
adc
ret
pop
push
ret
mov
sbbb
and
and
orl
sub
adc
add
xor
lcall
popf
incl
push
or
icebp
pop
out
test
and
shlb
mov
push
and
int3
sti
leave
inc
sub
add
mov
aad
push
or
roll
or
fildll
jne
lahf
jb
xchg
bound
test
jno
loope
sbb
add
push
add
fldt
xor
xor
ret
sbb
add
rorb
or
push
jb
xor
xor
jge
nop
mov
lods
and
dec
into
adc
inc
pop
movsb
adc
fcmovb
repnz
jg
xor
add
and
mov
xor
and
push
push
sbb
cld
mov
insl
mov
sbb
ret
sbb
jp
subb
add
mov
dec
sarb
or
adc
dec
adc
or
insb
add
add
add
cmpsb
adc
fsubl
push
cmp
imul
add
add
push
inc
jbe
adc
fwait
add
inc
add
test
enter
fistl
xchg
cs
add
fs
adc
add
add
xor
add
jl
add
push
mov
jb
add
xor
inc
stos
mov
nop
sbbb
cld
mov
loopne
adcb
jle
xor
mov
push
pop
sarb
sbb
or
stos
clc
or
dec
pushf
cwtl
mov
sahf
sbbb
shll
nop
mov
data16
dec
negb
adc
mov
push
mov
sbb
test
or
jns
popf
add
addb
test
xor
cmpsb
out
mov
lds
add
push
dec
int
jge
je
stc
test
cmc
or
shlb
enter
pop
mov
popf
adc
js
fiaddl
addb
shlb
jl
aam
adc
pop
lock
fs
jo
xor
inc
sbb
sbb
cmp
add
dec
inc
inc
pop
andb
mov
and
lret
jl
add
inc
adcb
mov
mov
addr16
add
xor
add
push
test
subb
mov
sbbb
pop
xor
sbbb
negb
sbb
jb
inc
mov
or
lods
xchg
mov
jae
dec
or
loopne
lret
jne
pushf
lret
decl
enter
cwtl
fsubrl
out
test
sub
mov
aaa
add
rol
cmpsl
aam
into
out
sbb
fisubl
repnz
sti
inc
add
push
and
or
mov
and
mov
add
in
mov
push
out
adc
repnz
scas
mov
cmp
into
sub
jmp
ror
imul
es
pop
inc
xor
outsl
mov
push
inc
sbb
xchg
hlt
outsl
into
adcb
pushf
les
add
call
loopne
movsb
dec
jmp
into
or
sbb
add
push
mov
dec
imul
push
cltd
fsubrs
hlt
mov
rol
sbb
daa
test
into
mov
hlt
outsb
push
aam
orl
jmp
mov
jg
fadd
data16
ret
roll
scas
or
mov
incl
test
ret
sbb
inc
push
fstpl
add
andb
xor
or
inc
cwtl
cmpb
add
inc
mov
add
inc
outsl
adc
sbb
incb
xchg
mov
fs
mov
shrl
xor
sub
mov
sub
add
out
pusha
cmp
stc
jl
add
les
mov
aad
push
stc
filds
or
lcall
inc
cmp
call
dec
or
into
mov
fdivrs
cmp
sarb
add
aam
femms
test
add
andb
pusha
bound
test
shrl
or
inc
inc
mov
add
data16
test
adc
or
pop
jecxz
ljmp
mov
inc
les
and
xlat
mov
mov
mov
lcall
popf
xchg
sbb
loopne
into
lock
and
jle
push
inc
mov
aaa
dec
clc
shlb
and
in
popa
inc
add
decb
aad
add
dec
and
inc
das
nop
test
push
xchg
mov
fdivl
pop
andb
push
dec
cmpsb
xchg
rcl
mov
and
mov
dec
cli
out
jle
mov
cli
xchg
rolb
test
cmp
jne
mov
dec
jb
lock
test
push
aam
andl
push
rolb
pop
mov
test
clc
dec
adc
sar
addb
add
mov
jnp
push
mov
call
subb
mov
clc
movsl
roll
rolb
orl
dec
sub
fimull
add
pop
lock
inc
movsw
subb
add
fisttps
mov
jg
add
add
sub
jb
ds
adc
push
xor
or
dec
jbe
mov
dec
test
mov
xchg
shlb
sbb
and
xchg
mov
cmp
jg
rolb
es
inc
test
add
loopne
ffree
or
jge
out
add
imul
inc
loop
cltd
and
loop
clc
inc
push
dec
mov
add
push
and
lock
jbe
push
sbb
stc
xorl
adc
add
mov
cltd
cmp
add
add
or
push
insl
adc
stc
sarl
mov
mov
int3
mov
pop
fldl
enter
cld
or
outsl
and
movsl
orb
pop
mov
imul
adc
add
je
fsubs
lcall
xchg
test
pusha
mov
aas
pop
inc
mov
pop
push
popa
cmpb
inc
fidivrs
dec
jp
jle
mov
jl
jb
mov
jmp
cmc
data16
dec
loopne
dec
fsubrl
pop
adc
fs
add
mov
xor
cld
rorb
pop
subl
fisttps
adc
xor
cmp
ljmp
into
add
or
push
pop
es
jg
push
insb
clc
lock
insl
dec
pusha
push
sub
or
clc
out
push
pop
sarb
jo
pop
jns
sub
stc
adcl
lods
mov
jge
mov
jp
movsb
inc
mov
and
adc
dec
je
icebp
sbb
insb
adc
mov
cld
fs
lcall
inc
fistps
jo
adc
dec
inc
and
push
rorb
add
clc
sahf
push
dec
mov
sbb
mov
cmp
sub
jmp
add
add
imul
sbb
clc
or
adc
lock
decb
jbe
je
pusha
add
jg
fildll
add
adc
stos
add
test
mov
scas
or
add
fbstp
mov
movq
shrb
or
adc
mov
add
add
add
jo
imul
jg
and
dec
adc
push
clts
or
inc
call
lock
cvtps2pd
sbb
data16
pushf
movsb
and
inc
mov
roll
test
mov
sbb
jae
loopne
hlt
mov
or
int
and
dec
mov
clc
fistps
andb
cmpsl
rclb
pusha
adc
and
pushf
lret
or
push
dec
in
add
movsb
xchg
mov
mov
nop
sub
and
pop
rorb
push
hlt
push
fstpt
dec
loopne
insb
bound
mov
push
push
xchg
jg
xor
ljmp
shl
add
inc
stos
sbbb
sar
subb
mov
or
xor
inc
shrb
orb
popa
mov
dec
adc
adc
push
or
jg
aam
xchg
je
xor
dec
jo
mov
stos
mov
icebp
jmp
jae
nop
lods
or
andb
sbb
es
fildll
rcrb
cmp
or
out
add
sub
addl
test
jb
adc
imul
and
adc
mov
push
ret
xchg
aam
insl
addb
subb
testb
mov
and
xor
clc
mov
mov
shll
add
add
pushl
xor
push
sbb
add
pusha
add
xchg
lods
push
std
gs
ljmp
hlt
and
add
push
add
jb
mov
adc
adc
pop
adc
cmpsl
das
or
sub
movsb
push
std
lds
aad
or
adc
or
nop
dec
inc
push
clc
mov
cltd
out
and
jne
xorl
xor
inc
lea
icebp
pop
push
adc
movsb
out
gs
pusha
mov
and
in
xorb
aaa
add
cs
rclb
aam
out
xchg
mov
int
push
orb
sub
gs
daa
test
leave
roll
and
or
mov
and
dec
adc
add
clc
and
xor
adcb
mov
leave
int
addb
mov
push
and
mov
or
insb
add
call
push
mov
mov
test
or
or
add
gs
fadd
or
sub
aam
leave
aad
adc
orb
frstor
inc
rcrb
mov
inc
and
or
mov
push
inc
push
enterw
stos
and
fdivl
imulb
push
clc
mov
sbb
xor
adc
and
cltd
and
in
enter
cli
mov
cli
add
xchg
sbb
cwtl
push
ds
inc
lret
push
inc
and
add
shlb
rorl
dec
pop
sub
mov
sub
cld
sbb
and
lcall
lock
lock
or
popf
nop
adc
add
push
mov
out
xor
mov
notb
jno
das
xchg
nop
pop
sub
inc
rolb
das
add
nop
loop
mov
mov
popf
clc
into
add
mov
test
test
je
pushf
dec
sbb
ror
ret
xchg
jg
loopne
sahf
mov
adc
sahf
out
jmp
mov
cmp
and
incl
std
push
popf
out
popf
ficoml
int
nop
sbb
inc
lcall
out
popa
add
add
sbb
cmpsb
jmp
lock
mov
je
xor
xchg
cmp
andb
aad
mov
xor
lods
rcrb
push
jp
int
loope
push
fisubl
sbb
mov
mov
addb
pop
and
pop
popa
cli
xchg
add
push
inc
and
sub
cltd
fimull
xchg
xchg
shrb
push
xor
sete
jg
pop
adc
push
lds
bound
ds
incb
push
dec
adc
es
jp
cmpl
fisubrs
xor
jp
mov
std
pop
and
dec
clc
mov
mov
jne
push
push
or
push
jmp
mov
mov
nop
les
lahf
sbb
mov
popf
push
jbe
addr16
sub
sbb
orl
jle
push
movsl
jb
add
pop
das
mov
xchg
mov
stc
dec
inc
mov
jb
xchg
shll
jl
sbb
xacquire
popa
fnstsw
pop
add
add
add
test
mov
xor
testl
jmp
inc
stc
popl
outsb
mov
arpl
sbb
dec
mov
pop
dec
push
add
ljmp
test
add
lods
and
enter
cmpsb
clc
jnp
clc
xchg
fs
sbb
add
test
sarb
fiaddl
test
and
repnz
loop
cmp
dec
aam
sub
shrb
test
jb
cmp
mov
cmc
jmp
mov
xchg
xor
pop
dec
cltd
jmp
mov
xchg
jp
orb
jle
scas
lea
adc
subb
icebp
mov
sbb
outsb
pop
rcl
dec
out
and
shrd
adc
xchg
jno
dec
dec
subb
cmpb
mov
inc
lcall
adc
xchg
push
add
fisttpl
dec
pop
fistpl
lods
sbb
adc
inc
add
add
lcall
or
jno
add
fwait
or
lret
add
imul
inc
xor
mov
jle
or
sub
sbb
test
cwtl
or
add
or
enter
inc
cmpb
filds
sbb
add
sahf
pop
push
add
push
ds
and
lds
lods
xchg
fiaddl
cltd
cmc
mov
sbb
repz
gs
or
bound
pop
shlb
cld
in
insl
adcl
xchg
push
stc
stos
add
rclb
lds
push
mov
bound
jae
fldl
dec
jg
or
sub
mov
fwait
inc
stos
inc
add
pusha
stos
sbb
push
into
push
cmp
cli
imulb
push
lret
mov
movsb
ret
and
push
ljmp
sub
ror
cltd
rol
fwait
mov
test
lds
pop
cld
and
mov
and
cld
push
adc
cli
dec
fiaddl
and
mov
pop
out
dec
adc
mov
inc
addb
dec
fsub
push
inc
inc
jb
icebp
or
sub
add
popf
gs
and
add
push
testb
testb
je
add
and
dec
mov
inc
jl
ljmp
add
mov
imulb
dec
testb
push
xchg
mov
ffree
out
dec
scas
rcrb
and
xchg
mov
movsl
out
test
lea
roll
pop
adcb
sub
shll
add
das
xor
xchg
pushf
sub
push
sub
sbb
pusha
jmp
sti
clc
push
xor
icebp
insl
xor
mov
mov
push
pop
and
mov
bound
call
in
add
add
inc
fadd
push
clc
leave
xor
data16
enter
or
mov
aaa
rcll
or
pop
lcall
mov
mov
cmpsl
hlt
adc
push
cmp
ja
inc
int
clc
sbb
rcrb
cmp
rclb
sub
rcrl
filds
adc
andb
cmp
xor
lea
mov
notb
cli
add
xor
sbb
lret
mov
inc
jbe
fwait
subb
pop
scas
and
xchg
enter
and
addl
scas
inc
adc
sub
out
rcrb
pop
or
sbb
in
shrb
sbbb
add
rolb
mov
in
or
je
popa
push
push
xor
nop
jle
rol
ss
movsl
call
sahf
cs
add
inc
xor
xor
lea
dec
mov
loop
jle
mov
rcl
cmp
cwtl
pusha
cwtl
inc
or
adcb
jg
mov
pop
inc
pop
push
xchg
dec
and
daa
push
imul
push
xor
cmpsl
mov
clc
mov
mov
sbb
fs
xchg
pop
ffreep
cli
call
or
mov
cltd
pop
pushf
mov
clc
cmp
rolb
stos
clc
es
stc
bound
stos
or
test
test
int3
mov
call
lcall
rolb
jns
mov
popa
mov
in
adc
mov
ds
decl
xorb
loopne
add
enter
adc
cmpsl
sbb
sbbb
lock
test
cwtl
popa
sub
add
add
mov
add
push
pop
gs
pop
add
inc
adc
push
js
mov
jb
push
add
enter
cli
pusha
or
sbb
icebp
rcrb
sbb
xchg
dec
add
pop
xor
xchg
outsb
jecxz
fiadds
gs
dec
mov
lods
test
out
push
and
xchg
nop
orl
pop
and
leave
pusha
jl
mov
xor
mov
ret
and
xchg
push
pop
add
rorl
test
xor
add
inc
cmc
add
pop
and
lret
orl
ljmp
and
and
adc
add
inc
lea
or
or
or
jbe
pop
test
ret
pop
mov
je
jns
sbbl
jg
jno
pusha
ds
or
mov
inc
and
and
xchg
fsub
jle
das
push
in
mov
dec
push
jnp
les
pusha
ret
adc
jne
jg
movsl
cwtl
cli
pusha
sbb
sbb
loop
jns
jne
outsl
pop
push
or
and
push
mov
les
mov
lret
or
fidivl
addl
mov
adc
mov
stc
popf
mov
decl
adc
fbld
inc
testl
test
push
add
xor
and
xchg
cmp
orb
pusha
das
fistl
inc
mov
sub
in
ja
mov
mov
push
push
xorb
add
mov
mov
or
pop
jle
orl
add
je
test
xchg
mov
pusha
jae
nop
push
bound
adc
in
xor
out
test
add
adc
shlb
rolb
test
ss
add
andl
mov
mov
sti
adc
add
adc
fisubl
or
mov
sarl
xor
mov
iret
add
or
ret
push
loopne
pusha
sbb
pop
data16
add
mov
and
rorb
ret
loope
clc
leave
add
push
lcall
mov
mov
stc
mov
mov
inc
jb
jmp
fidivl
sti
scas
out
in
add
or
inc
adc
sysenter
push
ljmp
test
rcrb
lds
xchg
or
lret
lock
lock
inc
rolb
rol
add
mov
sbb
fidivl
adcb
xor
shll
xor
call
or
xchg
or
dec
jl
mov
clc
xchg
ss
cld
idiv
mov
fsubrl
or
rolb
clc
inc
add
sti
es
pop
dec
mov
insb
ss
sub
cmpb
outsl
jmp
stos
adc
or
add
lock
inc
or
sbbb
dec
mov
pop
cmp
add
jb
ljmp
ljmp
lar
pusha
adc
shll
aam
ret
aam
mov
xchg
push
es
add
add
out
loope
out
add
inc
pushl
roll
repnz
mov
xor
sub
popf
arpl
aas
or
xchg
sub
inc
cli
pusha
jnp
inc
fisubrs
jo
lods
xor
jne
add
lock
add
das
jne
ja
enter
scas
movsb
lock
stc
rcl
add
loope
aam
push
pusha
int3
outsb
jno
xchg
jb
in
ljmp
add
inc
or
stc
lock
add
pop
icebp
call
ds
inc
add
loopne
cmpsb
call
jp
pushw
push
jle
mov
addl
fisttpl
inc
cld
stc
push
adc
xacquire
ja
decb
add
sbb
xor
mov
lock
xchg
fsubrp
inc
or
adc
into
data16
push
or
xchg
enter
shrb
fwait
mov
adcl
mov
and
mov
mov
add
popa
push
cmpsb
inc
and
fs
adc
adc
pop
jne
adc
adc
inc
push
hlt
test
mov
scas
add
rcll
cld
mov
sti
xor
fidivl
jno
and
jmp
scas
or
clc
nop
xchg
push
inc
ljmp
adcb
or
movsb
cmc
nop
sub
add
xor
aas
call
adc
add
sbb
mov
nop
pop
inc
sbb
sbb
or
inc
pop
push
pop
push
bound
test
jns
push
add
push
ficoml
idiv
xor
cmpsb
jb
push
cmp
lea
incb
imulb
and
addr16
and
jmp
das
mov
jl
and
pop
add
mov
inc
inc
fldl
sbb
push
cwtl
cs
sbb
fmull
push
adc
out
sbbb
xchg
loopne
int3
sbb
and
adc
jmp
push
or
jle
push
fs
jne
jle
clc
addl
mov
sbb
sub
cmovb
adc
popf
das
jb
dec
jp
mov
and
lock
jb
rcll
jns
xlat
aam
mov
xor
adc
ror
test
and
icebp
int
mov
sarb
push
and
pop
ficoml
push
insb
add
pop
lea
mov
fisttps
jecxz
shrb
xchg
dec
test
mov
mov
lret
gs
pop
lock
cmp
sub
xor
push
push
or
push
popf
rclb
cwtl
test
loopne
cmp
jbe
sbb
push
or
movsl
and
jg
fucom
dec
adc
sbb
pop
add
adc
and
int3
mov
cmpsb
dec
lcall
adc
inc
dec
or
mov
fcompl
aas
and
mov
mov
stos
add
xor
cmpsb
das
cli
pop
sbb
or
or
rcll
sbb
adc
mov
ficompl
adcl
fs
and
rorb
mov
cwtl
movsl
loopne
push
inc
adc
cmpsb
sarl
cmp
lods
push
lea
in
cmp
jle
jno
push
add
jb
lods
ljmp
jbe
mov
push
jae
call
mov
and
hlt
testb
add
pusha
add
stos
jno
add
fstl
decb
cmp
add
lock
xchg
test
or
push
scas
fucomi
in
adc
or
jmp
inc
notb
jb
add
jmp
es
insl
cld
pop
out
add
lahf
es
nop
push
cmp
mov
xchg
and
outsb
pushl
and
xchg
mov
jns
jmp
or
and
adc
in
sbb
mov
jo
lods
outsl
cli
jae
adc
adc
or
and
pop
mov
or
mov
xor
into
popf
mov
xor
jae
cmp
stos
dec
mov
add
adc
test
std
fldt
bound
pushf
into
mov
add
fcoml
push
mov
or
mov
into
lods
loop
sbb
mov
xor
bound
xchg
add
or
xchg
scas
xchg
add
inc
aad
rolb
int3
dec
addb
pop
cmpsb
xchg
incb
add
sbb
push
mov
fcoml
test
rcrb
gs
in
jb
cmp
loope
mov
test
push
dec
xchg
add
ds
add
je
out
mov
cli
mov
movsb
notb
push
mov
hlt
aaa
shrb
shrb
fnsave
sub
aam
lods
dec
adc
in
jne
mov
add
js
mov
cmc
cs
in
add
pushf
add
add
fiaddl
adc
mov
inc
flds
pop
fstps
ret
mov
xchg
test
ljmp
loopne
adc
add
fnsave
add
sub
push
aad
push
mov
mov
adc
and
pushf
dec
add
mov
insl
ljmp
int
mov
or
jg
mov
insl
add
adc
mov
jmp
adc
sub
sbb
add
or
cmp
in
mov
or
cmp
dec
cmp
outsl
out
adc
mov
and
inc
or
cmpl
push
mov
sub
outsl
mov
lods
sbb
mov
orb
and
or
icebp
clc
dec
inc
lods
dec
int3
mov
insl
push
les
in
sub
or
dec
xchg
sbbl
jg
jge
push
add
mov
incl
add
mov
cs
xchg
mov
sub
test
std
ret
sub
subl
jg
int3
lahf
push
mov
or
push
sub
push
push
clc
ret
adc
fmull
jnp
xchg
repnz
adc
popf
or
or
imul
inc
sub
test
inc
push
pop
mov
cmc
aam
cli
push
mov
add
call
pop
mov
inc
popl
cld
xorb
or
push
clc
enter
sbb
out
sub
movsb
gs
jne
sbb
or
dec
or
add
push
dec
adc
ja
clc
testb
xor
test
adc
mov
fdivr
call
add
lret
cmpb
cmpsb
fsubrl
push
popf
push
fdivrl
push
or
inc
and
shrl
sub
pop
adc
sub
xchg
fcoml
dec
cli
pop
jp
fbstp
cmp
xor
mov
add
gs
sbb
nop
shlb
jl
jb
jmp
or
shlb
pop
or
gs
inc
or
aaa
repnz
sub
out
hlt
add
rcrb
call
inc
and
gs
sub
jb
and
imul
mov
in
cs
popf
and
loopne
or
add
scas
orb
inc
ss
push
out
hlt
rcr
and
data16
shrl
add
add
popf
xor
xchg
decl
fisttpl
fiadds
rclb
lcall
enter
pop
stos
test
cltd
decb
xchg
fstpt
icebp
push
sub
pop
add
mov
fisubl
inc
jge
jp
xlat
out
loopne
jbe
or
pop
int3
es
mov
scas
fdivl
cwtl
fldenv
pusha
or
sub
dec
inc
jnp
mov
and
data16
inc
out
stc
enter
add
ss
dec
mulb
add
and
inc
and
inc
in
and
shlb
and
test
mov
rorb
push
sbbl
cmpb
outsb
orb
mov
decl
jbe
loopne
xchg
scas
adc
ss
add
pusha
add
dec
sbb
or
push
xchg
add
gs
insb
adc
int3
mov
xchg
jno
add
shll
inc
inc
pop
xor
mov
pop
call
nop
outsb
jnp
mov
mov
push
test
pop
add
mov
sub
sbbb
scas
push
sub
pop
add
sbb
push
push
shl
and
pusha
mov
cli
scas
aam
cli
gs
and
mov
inc
test
and
or
divb
inc
data16
lods
gs
addl
adc
or
outsb
dec
or
rolb
cmp
data16
jb
inc
popf
inc
push
pop
pusha
pop
rcrl
ljmp
inc
and
stos
or
mov
loop
scas
or
mov
push
movsb
adc
imul
sbb
or
sbb
daa
xor
cltd
mov
pop
and
mov
sahf
cltd
sub
xor
push
inc
and
dec
and
push
or
adc
mov
adc
and
xor
xor
cmpb
andb
dec
ljmp
lods
lods
and
mov
repnz
add
fcoml
jne
subl
daa
addl
and
movsl
add
nop
subl
xor
dec
sbb
dec
add
jl
shll
sbbb
mov
movsl
pop
test
sbb
add
aaa
movsl
pop
sub
push
aaa
sbbb
adc
adc
jg
pop
mov
cwtl
out
fildl
mov
push
push
es
sub
inc
xchg
pop
aam
iret
pusha
jecxz
add
ret
xchg
add
adc
jmp
adc
add
mov
lods
ret
add
nop
or
stos
push
mov
clc
loopne
xchg
std
or
inc
loop
mov
add
imul
adc
or
ljmp
sbb
insl
adc
cwtl
push
in
sbb
ret
loopne
mov
adc
in
popl
test
push
fs
orb
jo
insl
int
mov
sbb
cwtl
jae
adc
stos
mov
or
fdivs
mov
or
add
ljmp
test
gs
imul
out
cmpb
and
adc
std
call
shlb
pop
add
icebp
andw
pop
dec
mov
arpl
or
ret
outsb
movsb
gs
or
add
ljmp
pop
cmp
xor
repz
cmc
sub
or
loopne
jg
movsb
fisttps
loopne
or
test
inc
cld
incl
lea
xlat
xor
gs
loope
scas
add
mov
negb
sub
jecxz
mov
and
jno
dec
ljmp
cmc
mov
or
xchg
xchg
mov
sahf
push
in
lock
inc
add
pop
inc
les
inc
gs
dec
push
inc
lock
xchg
lret
sub
mov
test
jo
mov
push
roll
fidivs
cmpsb
lds
push
jp
push
jmp
fdivr
outsl
adc
nop
js
lods
and
lea
xor
mov
insb
mov
repnz
jg
cmpsl
mov
call
mov
test
push
nop
bound
jmp
loopne
jno
inc
adc
add
mov
js
fs
push
push
add
lods
nop
inc
xorb
outsl
inc
adc
in
shll
sbb
and
test
scas
mov
xor
movsl
add
ljmp
xorl
mov
sub
sbbb
data16
or
and
clc
xchg
cli
mov
aad
mov
sbb
out
loopne
or
dec
nop
cmp
add
loope
loop
test
mov
stc
aam
fst
or
sbbl
testb
or
jle
lret
jb
jmp
jecxz
dec
inc
adc
sub
and
mov
or
fidivrs
add
xor
in
pop
inc
push
or
adc
mov
adc
js
out
mov
add
jo
enter
cmovp
add
bound
add
test
lock
std
test
test
sub
leave
movsb
rolb
or
sbb
pop
sbb
cwtl
pop
mov
lea
inc
mov
inc
lods
nop
push
cld
mov
sub
nop
rcl
outsl
pop
push
inc
xor
jno
inc
stos
leave
add
in
cwtl
add
inc
inc
mov
add
xchg
mov
mov
call
idiv
inc
jl
ss
clc
icebp
dec
and
mov
sbbb
lock
clc
add
aas
js
out
push
adc
inc
movb
adc
std
aaa
adc
lret
push
popa
xchg
lock
and
add
dec
andb
pop
fdivs
mov
je
jmp
and
sub
jmp
add
imul
mov
and
or
repnz
nop
clc
and
sbb
pop
in
out
gs
mov
cltd
push
pusha
cmp
mov
mov
xor
mov
lcall
data16
mov
lea
sahf
rorb
mov
push
jg
add
adcl
sub
dec
inc
shlb
or
pop
xchg
push
or
mov
cmpsb
add
and
mov
daa
inc
cltd
cwtl
add
jae
dec
pop
xchg
mov
mov
testb
sbb
mov
push
pop
test
or
dec
and
xor
orl
and
dec
add
mov
or
rclb
pop
popa
inc
adcl
or
aaa
lea
jb
cmpsb
inc
and
into
inc
lock
sub
addb
orb
add
int3
or
adc
pusha
cmp
and
pop
pop
adc
inc
and
je
insb
mov
jg
dec
arpl
add
jbe
mov
fdivrs
ds
dec
sarb
push
outsl
sub
sub
fmull
xchg
sbb
add
std
out
mov
push
sti
and
insb
push
cmp
push
mov
xchg
loop
inc
movsb
jle
mov
inc
idivb
jo
push
out
popl
dec
sar
pop
pop
push
test
add
lods
mov
mov
add
stos
dec
mov
or
mov
push
enter
inc
arpl
inc
sub
push
sub
mov
dec
inc
mov
inc
test
push
add
cmp
or
aad
add
ret
mov
or
and
mov
int3
pop
insb
ret
mov
inc
cmp
jmp
stc
add
test
jl
xor
jae
scas
inc
cmp
movsb
mov
pop
cs
xor
cwtl
jne
inc
mov
and
adc
pop
enter
das
xor
insb
dec
mov
sub
and
outsl
pop
loop
or
xor
fistpl
sbb
repz
cli
pop
test
les
leave
xorb
mov
sub
adc
jbe
icebp
data16
pmaxub
popa
sub
mov
aam
push
adc
mov
mov
mov
cs
lcall
jb
mov
lcall
stc
cltd
dec
jl
push
test
fmulp
ss
mov
push
pop
outsb
xchg
data16
cld
outsl
cli
pop
repnz
lds
pop
adc
xchg
faddl
fimuls
sub
pushf
and
push
sar
mov
and
adc
add
add
add
es
mov
push
push
ja
inc
xor
or
xchg
pop
fwait
popl
jae
lea
or
and
inc
push
orl
jl
cmpsl
add
sbb
clc
sub
pop
push
pushf
negb
lock
mov
ds
filds
cmpsl
add
mov
hlt
faddl
andb
arpl
push
addr16
mov
sub
pusha
and
sbb
jnp
or
out
pushw
mov
outsb
cltd
js
push
lods
sub
rorb
loop
jg
sbb
push
inc
dec
dec
shll
xchg
add
cmp
xchg
notb
fistps
jp
mov
frstor
pusha
pop
in
cmpl
push
dec
gs
jo
add
inc
sub
scas
inc
inc
add
add
adcb
das
movsb
icebp
ret
or
inc
inc
sub
xor
lcall
imul
daa
pop
xor
adc
adc
faddl
dec
push
pop
lret
ret
insl
add
inc
xor
ror
mov
sub
shrb
lea
dec
dec
dec
adcb
les
test
call
jo
pop
fs
add
fstps
adc
dec
sub
test
andb
or
popl
and
mov
xor
and
pop
push
mov
push
inc
or
outsb
sbb
cmpsl
fldenv
add
dec
mov
in
orb
or
das
nop
jo
mov
adc
sbbb
add
adc
rorb
gs
rcll
mov
push
cld
decl
jl
add
lcall
mov
xor
jle
jo
sub
dec
inc
add
rcr
push
mov
add
xchg
jle
aam
sbb
xorb
adc
jp
fildl
add
ljmp
cli
jg
shlb
clc
jp
and
pusha
adc
pop
jb
das
adc
or
push
addl
push
mov
and
andb
dec
aad
ss
inc
imul
mov
adcb
or
xchg
ss
and
rorl
sub
sti
pop
jl
pop
fwait
push
out
or
addb
add
bound
sub
ficomps
fwait
pop
xor
dec
data16
mov
and
inc
mov
shl
inc
xor
jl
xchg
mov
cli
lcall
fsub
or
das
mov
push
or
aad
in
mov
mov
cltd
stc
and
adc
xchg
rol
test
mov
sub
pusha
inc
jge
rcrl
ficoml
cli
fstl
mov
in
lock
nop
mov
inc
add
push
scas
es
add
sbb
adc
jb
fwait
aad
xor
pop
stc
xchg
ret
addr16
add
and
and
popl
mov
das
adc
gs
pusha
or
lds
adc
dec
loopne
popf
mov
popf
ljmp
add
stc
loop
repz
mov
in
nop
pusha
push
jbe
xor
sub
inc
mov
jae
lcall
mov
in
js
enter
loopne
sti
test
loopne
out
mov
ret
sti
adc
jp
adc
aaa
or
pslld
lds
xchg
icebp
aad
sti
popf
xor
push
jecxz
mov
shl
insb
and
jle
scas
or
popf
rolb
test
and
push
ret
in
inc
fimull
mov
ret
adc
cld
add
gs
add
pop
add
xchg
rol
inc
inc
jg
push
insb
push
scas
jl
cmp
stos
adc
xchg
push
or
cmp
mov
adc
jbe
cld
loopne
addb
test
call
stc
adc
xchg
mov
out
cmp
sahf
loop
and
jno
cmp
ja
inc
cmp
sahf
loopne
mov
cld
andl
imulb
dec
loope
pushf
and
dec
out
push
add
sbbb
fisttpll
xchg
push
mov
sbb
je
pop
test
ss
es
rcrl
or
bound
test
mov
ljmp
adcb
jmp
and
lods
fnstenv
out
cli
cmpsb
outsl
pusha
and
pushf
cwtl
and
adc
nop
test
sub
lret
rolb
movsb
es
jle
rorl
cmpsb
mov
js
jne
inc
lods
inc
cwtl
jge
pop
es
es
sbbb
nop
ljmp
or
cmpl
and
xchg
enter
xor
push
ljmp
mov
clc
shlb
fisubl
sbb
dec
test
mov
xchg
xchg
add
mov
sar
cs
and
jge
enter
rcrb
mov
add
cmp
push
fs
cli
jle
mov
out
stc
pop
adcl
ljmp
inc
lock
icebp
or
jo
mov
add
ret
mov
pusha
mov
sar
in
adc
cs
ljmp
push
sbb
test
add
sub
jno
clc
xchg
and
or
sub
sarb
movsb
movsb
adc
lretw
enter
xchg
dec
lock
lock
push
inc
cli
incl
nop
fmull
cwtl
popf
shll
mov
adc
inc
jp
jbe
adc
dec
push
mov
mov
insl
les
lock
cmpsb
pop
movsb
mov
push
dec
pusha
ret
mov
add
dec
call
adc
pop
xorl
push
mov
gs
xorl
hlt
lahf
xchg
add
scas
movb
rorb
loopne
shl
jb
xorl
inc
sbb
adc
shlb
dec
jo
fcomps
pusha
mov
test
mov
decl
mov
xchg
test
jno
mov
cld
ja
push
add
mov
jg
and
js
mov
adc
add
add
or
inc
std
mov
mov
xchg
fs
mov
push
and
outsb
mov
inc
add
pop
fimull
dec
repz
cmc
lods
ljmp
movsb
push
mov
pop
dec
xchg
shlb
xor
inc
adc
ret
adc
testb
icebp
pop
daa
mov
cld
mov
sbb
fidivrs
push
cmc
inc
mov
jne
test
or
das
popa
test
jl
in
ljmp
push
lock
add
outsl
xor
int
rolb
pop
cmc
add
dec
inc
inc
mov
jmp
rorb
dec
dec
jmp
mov
inc
std
in
mov
ss
jg
movsb
hlt
push
popa
add
and
sbb
fstpt
mov
mov
add
ja
push
cwtl
sub
sbb
pusha
xor
ss
prefetch
add
add
jp
mov
xchg
cmc
popa
popf
xor
jle
dec
sbb
mov
inc
mov
mov
push
cli
xchg
mov
rorb
xchg
mov
sti
lods
enter
sub
mov
dec
test
xchg
cmp
out
pop
or
movsl
mov
movsb
leave
and
jg
pushl
sub
shl
daa
push
dec
and
insb
jge
push
or
or
mov
lds
test
rclb
adc
jbe
subl
cs
mov
mov
add
rcrl
outsl
nop
sbb
push
and
out
movsb
sbb
nop
or
push
or
lods
adc
push
decl
pop
rcrb
movsb
mov
add
nop
add
mov
call
loopne
or
add
insb
int
dec
add
or
push
lods
cmp
inc
adcb
out
add
cwtl
add
cwtl
mov
jmp
movsb
or
imul
push
lock
outsb
xchg
add
adc
push
xchg
shlb
faddl
test
ljmp
gs
add
test
dec
gs
incl
fdivl
or
xor
mov
bound
cmpsb
stc
shll
or
xchg
mov
into
xchg
fildl
xor
mov
push
add
ja
cli
dec
inc
adc
aam
sahf
loopne
lret
add
dec
sbb
push
push
push
xorl
mov
lods
xor
iret
clc
mov
lods
enter
rolb
aam
mov
mov
cli
test
and
and
rclb
lret
inc
xor
push
push
inc
inc
inc
add
push
pop
out
push
mov
int3
lock
lea
sub
rcll
cmp
xchg
push
jnp
mov
clc
mov
sbb
nop
jbe
cmp
inc
fldl
or
cmpsb
add
xor
or
repz
rcll
xlat
mov
mov
lahf
xor
push
cmc
test
arpl
fldt
dec
push
xor
addl
push
pop
and
std
fcoms
mov
jp
pop
mov
frstor
stos
scas
in
das
rclb
mov
lret
cltd
incb
mov
adcl
mov
enter
adc
jg
ret
add
lcall
add
ret
mov
loopne
or
popa
mov
out
mov
inc
pop
cmp
inc
outsl
add
ja
mov
jns
push
mov
inc
xchg
or
adc
sbb
jne
push
repz
ret
mov
jg
insb
rorl
sbb
mov
addl
imul
or
add
mov
lcall
add
and
out
or
inc
cmpsl
mov
add
jns
gs
std
pop
lock
mov
dec
or
jg
test
jp
sub
add
lcall
orl
push
sbb
loope
mov
pusha
add
test
and
les
xor
nop
mov
dec
imul
push
fbstp
sarb
jge
repz
nop
adc
or
movsl
sub
xchg
incb
or
cli
frstor
lret
lds
pop
je
lock
bound
clc
lret
out
sub
inc
dec
cwtl
adc
xchg
mov
fs
mov
pop
test
invd
lret
scas
xchg
add
mov
inc
lods
inc
dec
or
add
sbb
and
adc
cwtl
adc
or
mov
movsl
pop
push
call
dec
add
or
adc
loope
or
fs
sbb
and
mov
cmp
jg
xchg
add
dec
add
mov
jge
add
mov
clc
cmpsb
and
push
or
movsl
xor
enter
rolb
jg
push
push
pop
mov
add
and
push
rcrl
mov
add
jb
sbb
addl
out
test
xor
cwtl
icebp
mov
add
fidivl
sti
test
les
sbb
es
and
cltd
gs
mov
dec
or
jle
inc
sbbb
adc
inc
pusha
or
push
lods
mov
push
mov
movsl
call
and
stos
sbb
lret
adc
push
sub
or
inc
add
push
inc
add
popa
sbb
pop
add
sbb
ficomps
dec
lods
mov
call
jne
stc
mov
push
ret
or
stc
into
or
clc
std
jb
loopne
add
push
enter
pop
cmpsb
js
rol
inc
inc
cmp
add
fstl
cmp
xor
xor
inc
push
jb
push
hlt
add
mov
es
movsl
pop
pusha
sub
mov
adc
nop
fs
or
inc
or
test
sbb
adc
mov
cwtl
pop
push
scas
sbb
cltd
lret
dec
add
jne
or
or
xor
push
mov
aas
xorb
add
ret
sbb
mov
gs
adc
lds
xor
inc
pop
jno
enter
add
inc
inc
mov
inc
add
movl
adc
xchg
movups
pop
mov
rclb
pop
popa
and
addl
roll
add
push
inc
sar
std
inc
ljmp
aaa
add
push
movsb
inc
push
and
negb
jb
ljmp
lcall
mov
xchg
mov
mov
lods
fisttpl
aaa
add
mov
dec
lret
mov
push
mov
adc
addb
jns
addl
mov
mov
les
xor
adc
add
icebp
scas
fdivs
sbb
add
orl
aam
ja
popa
fiadds
push
aad
add
and
or
pusha
sub
mov
stos
orb
test
adc
and
icebp
call
pop
test
shlb
xchg
ret
or
cwtl
or
pop
push
inc
xlat
nop
sbb
fists
add
shll
rorl
fimull
outsb
sbbb
sub
push
sub
loope
or
lock
xor
int3
and
or
and
sbb
mov
mov
aad
add
add
out
jg
out
add
xchg
add
or
mov
fstp
cmpsb
lods
adc
daa
mov
mov
dec
xor
lcall
fnstenv
inc
cmp
rcrb
inc
adc
loope
in
add
sbbb
call
xor
or
cli
push
mov
call
enter
mov
add
ror
inc
or
push
lock
stc
clc
inc
out
lea
pop
cmpsb
push
fsubl
roll
pushf
inc
sub
add
mov
xchg
add
inc
stc
gs
mov
push
and
pop
sub
cli
lahf
inc
push
lret
dec
push
sbb
orl
add
enter
std
lret
add
leave
pop
sub
loopne
imul
aaa
xchg
cmpsl
rcr
mov
add
sbb
pop
stc
fldt
or
add
sub
xchg
lret
sub
adc
je
cmp
jno
icebp
gs
lret
mov
pusha
mov
jp
lock
shr
or
dec
xor
pop
gs
mov
mul
or
and
add
mov
clc
add
mov
std
clc
and
mov
and
movb
inc
aad
in
dec
mov
cmp
xor
outsl
sub
push
int3
orb
xor
pop
push
ljmp
or
gs
xchg
sub
test
scas
fbld
push
sbb
cmpb
call
jbe
pop
loopne
push
mov
lods
mov
mov
push
add
mov
and
push
pop
pusha
push
mov
dec
dec
ret
adc
scas
adc
les
loopne
and
ja
add
insl
pop
or
loope
mov
sbb
hlt
push
roll
or
add
add
fstp
mov
outsl
mov
decl
sbb
inc
sub
inc
sub
data16
mov
std
push
add
ret
cmpsb
mov
xor
push
sub
inc
push
out
push
xchg
push
xchg
shrb
mov
sbb
mov
mov
nop
ret
sub
lret
popa
fs
adc
data16
add
into
pusha
adc
and
enter
and
add
adc
and
lock
inc
inc
inc
ljmp
add
or
mov
pop
mov
les
rcll
loopne
mov
jecxz
rcr
or
push
adc
add
mov
in
pop
call
lret
fisubs
pop
mov
or
imul
and
xorb
lods
lods
add
xchg
or
popa
cld
addl
mov
lea
add
mov
ja
mov
push
cmp
adc
pop
aam
aam
inc
lods
jbe
add
pushl
and
int
aam
ror
testb
aad
add
fidivrl
push
xor
jle
les
mov
cmp
rcrb
fldenv
add
add
add
push
hlt
das
fidivl
adc
xchg
mov
add
sbb
jnp
pop
into
inc
xchg
cmpsl
movsl
sbb
faddp
test
rolb
leave
stos
cmc
add
addl
out
lret
clc
movsl
inc
sbb
les
arpl
add
mov
ds
loope
pop
dec
xor
cmp
push
hlt
xchg
sub
inc
adc
dec
cltd
push
gs
lock
push
outsb
inc
ljmp
rolb
add
addl
push
stos
aas
leave
cli
xchg
push
push
call
push
nop
add
pusha
sbb
out
push
nop
fs
movsl
shll
or
xchg
mov
adc
nop
and
insl
xor
orl
pop
dec
jl
loopne
nop
stc
adc
cwtl
sbbb
jmp
out
cltd
push
xchg
push
xchg
clc
loopne
cwtl
mov
dec
xchg
shrl
loopne
out
rcrb
mov
cmp
lods
ds
stos
lea
cmp
rolb
add
mov
mulb
or
sub
lods
xor
sahf
xor
push
insb
cld
mov
pusha
xchg
add
les
lock
loop
mov
js
inc
adc
mov
aaa
lret
cli
inc
jle
add
rcrl
pop
lock
aam
jnp
adc
aaa
lret
jg
inc
ret
lcall
push
ret
cmpsb
repz
mov
lret
adcb
dec
jecxz
test
pop
jo
and
out
aad
std
and
nop
mov
enter
xor
jne
gs
and
fcomi
and
bswap
outsl
incl
mov
pop
test
jb
clc
shrb
fcmovnb
call
mov
js
inc
test
inc
in
stos
adc
fidivl
orb
sub
dec
ss
test
and
add
xor
push
push
shlb
faddl
push
push
test
ds
out
add
add
or
mov
incb
loope
mov
mov
sub
sbb
out
xor
es
lahf
jno
test
xchg
xor
add
mov
inc
add
outsl
add
xchg
stc
xchg
jmp
andl
and
fisttpl
rolb
fisubs
daa
stc
jbe
mov
movsl
and
or
xchg
mov
dec
stc
fidivl
add
xchg
gs
push
or
mov
xor
dec
mov
mov
push
mov
dec
cmp
lret
add
aaa
push
dec
pop
fnsave
inc
xor
xchg
gs
push
jp
in
lods
gs
or
mov
insl
adcl
arpl
cmp
lods
push
jne
mov
fs
shlb
or
cmp
ss
test
or
or
add
jbe
mov
pop
test
xor
add
nop
inc
dec
or
notb
outsl
pop
fs
andb
adc
push
cltd
push
and
cmp
xchg
movsl
scas
jg
sbb
stc
xchg
lock
mov
subb
jnp
dec
leave
add
cmc
or
imul
cwtl
icebp
add
data16
mov
mov
mov
adc
inc
dec
mov
push
cmpb
hlt
aam
add
lea
fs
or
sub
jg
dec
adc
pop
data16
xchg
or
psubsb
pop
insb
adc
mov
xor
mov
push
lret
xor
cmp
sbb
dec
sbb
inc
sub
add
push
or
fdivs
sbb
inc
pop
mov
addb
jno
inc
jo
mov
jne
and
xchg
cltd
mov
or
ds
idivb
mov
and
in
lea
scas
clc
jb
push
in
and
enter
fiaddl
or
addb
xchg
and
rol
dec
lock
mov
lret
mov
movsl
out
icebp
push
or
stos
inc
mov
int3
nop
push
add
add
cmp
push
mov
add
xchg
xchg
call
mov
add
popa
or
js
adc
test
inc
or
pusha
lods
sbb
int3
inc
or
ds
add
pop
push
mov
push
dec
je
add
adc
push
pop
push
push
add
icebp
enter
repnz
out
sbb
push
call
loopne
roll
gs
ss
jle
ret
pusha
inc
std
jg
xor
shlb
mov
cltd
sti
mov
sub
jl
cwtl
in
push
nop
xor
sbb
adc
sbb
mov
lret
or
rorb
dec
jl
pop
cmc
push
hlt
pusha
int
inc
insl
loopne
das
int
bound
cltd
add
xlat
cmpb
pop
push
and
adc
and
mov
mov
xor
cltd
jmpw
push
inc
es
mov
mov
jg
mov
icebp
inc
push
aad
push
lret
mov
push
sbb
sbbb
call
outsl
fisttpl
xor
test
nop
add
or
mov
cli
scas
mov
das
mov
or
into
lock
jl,pn
mov
ss
mov
js
rcrl
aam
xchg
decl
jmp
movsb
out
jge
cmpsb
mov
cltd
gs
clc
sbb
inc
add
aam
mov
sub
mov
xchg
js
mov
and
adc
add
mov
rolb
or
lock
mov
test
push
or
pop
ret
add
pusha
add
dec
inc
jecxz
std
jg
mov
inc
add
pusha
jae
push
and
or
ljmp
lret
mov
insb
cmpsl
fimull
jge
icebp
pop
adc
or
dec
stc
lods
and
or
addb
inc
andl
mov
jb
ret
jbe
adcl
adc
mov
lods
add
add
pop
push
add
sbb
clc
popf
stc
in
or
xor
adc
add
iret
cmpsb
add
loope
out
call
je
fildl
inc
stos
movsb
add
ss
jb
test
sar
pop
and
dec
dec
in
push
in
push
je
or
add
push
push
mov
sarl
subl
movsl
xchg
adc
sub
mov
adc
jg
xor
popa
data16
outsb
aam
outsl
mov
and
add
addb
ret
outsl
dec
pusha
jg
in
add
jo
adc
pop
inc
ret
and
cli
pop
add
add
inc
or
jno
add
test
push
mov
stos
ss
fldl
pop
adcb
test
push
dec
ljmp
and
sbb
sub
sbb
add
pop
sub
cs
inc
out
call
clc
xlat
rolb
xchg
inc
sub
add
pushf
mov
inc
push
mov
xor
ljmp
dec
mov
js
jmp
cmp
movsb
mov
scas
in
sti
mov
cltd
dec
inc
addb
incl
gs
jp
es
inc
sbb
dec
inc
loopne
test
or
mov
push
fcmovnbe
push
xchg
dec
rclb
inc
push
stos
cwtl
sbbb
or
adc
adc
xchg
rcrl
pusha
adc
xor
and
scas
out
add
fistl
add
inc
pop
int
gs
ret
or
fisttpl
dec
cmp
cli
add
mov
xchg
in
mov
jb
inc
popf
fstps
loop
mov
mov
pop
call
mov
rorb
mov
add
dec
and
push
filds
mov
cltd
and
add
orl
jb
push
dec
jmp
or
std
sbb
pop
add
in
pop
jp
inc
loop
sub
in
cmpl
mov
add
lea
mov
xor
inc
add
mov
mov
je
insl
push
lods
mov
add
jle
and
in
sbb
insb
insb
shlb
cmc
and
vpaddusb
add
dec
call
lea
cs
add
xchg
jmp
inc
insl
mov
inc
inc
inc
push
or
sbb
push
inc
fmull
and
adc
push
xor
add
inc
sbb
call
and
add
mov
stos
out
fwait
and
push
sbb
dec
mov
iret
add
pusha
xor
push
shl
inc
mov
cmp
loopne
mov
adc
push
pop
decl
aad
mov
fwait
sub
stc
addl
push
adc
mov
rolb
add
or
add
test
lahf
dec
fmuls
jo
decl
mov
test
adc
pop
inc
sbb
es
or
rolb
add
push
xor
test
fmull
inc
sub
loope
push
or
mov
add
js,pn
inc
jb
push
dec
inc
add
dec
push
xchg
rclb
and
push
mov
enter
and
fucomp
sub
and
stos
dec
adc
push
add
add
push
shlb
mov
push
push
loopne
xchg
ss
mov
cli
out
xchg
test
push
adcb
push
mov
in
lret
add
mov
cmp
pushl
mov
gs
push
mov
stc
inc
decl
movsb
aam
popa
or
xor
or
insb
nop
fcos
subb
mov
add
mov
leave
push
inc
clc
lahf
lret
or
inc
and
sub
stos
sbb
loopne
popa
xor
xor
jg
gs
out
adc
or
pop
sgdtl
andl
xchg
pusha
xor
mov
and
or
nop
jae
or
clc
jmp
jbe
adc
dec
cmp
movsl
ja
mov
lds
xor
scas
push
push
xchg
cmc
mov
clc
mov
xor
add
mov
bound
add
add
filds
stos
inc
and
push
push
bound
add
inc
rol
out
xchg
ss
add
ret
fidivrs
dec
rcrb
andl
dec
test
into
rorb
les
xchg
stos
movsb
xor
and
push
sub
mov
pushl
inc
cmpsb
es
and
inc
jbe
dec
adcb
xchg
mov
cld
inc
inc
xor
pop
adc
sarb
in
ret
cli
adc
inc
jbe
and
pusha
jp
sbb
fs
popa
stos
imul
hlt
rol
imul
data16
pop
ffreep
lods
les
inc
push
cwtl
rol
orb
dec
and
fildll
or
mov
adc
add
add
pusha
bound
mov
push
inc
jecxz
cmp
or
and
ficoms
rcll
mov
mov
push
fimuls
fadds
loope
arpl
fadds
fisubrl
push
js
pop
ret
ljmp
stc
pop
adc
add
jmp
pop
ret
mov
fsubr
ljmp
test
push
mov
sbb
xchg
scas
jmp
ljmp
data16
cld
test
dec
push
xor
fucomip
push
and
sbb
ja
push
push
xor
bound
sbb
sub
cld
lcall
xor
cwtl
sbb
int
push
jecxz
dec
rcll
filds
pop
jo
or
mov
inc
add
inc
add
jnp
int3
xchg
call
sbb
mov
xchg
loopne
rolb
push
push
cli
add
inc
mov
repnz
popa
cmp
mov
jb
rol
inc
inc
xchg
dec
inc
pop
mov
loop
inc
fisubl
in
jge
icebp
push
pop
lds
mov
or
mov
js
clc
lock
dec
sbb
inc
sbb
rorb
inc
leave
adc
xor
sbb
mov
or
and
mov
inc
outsl
dec
outsl
xor
jne
xor
add
ficoms
add
andb
rorb
sbb
and
mov
adc
push
out
clc
leave
nop
mov
stc
mov
mov
test
mov
shlb
lds
add
fcom
jae
cmp
xchg
mov
push
dec
rcrb
xchg
push
inc
add
popf
xor
stc
push
lock
or
pop
and
data16
mov
or
inc
pop
rolb
mov
stos
mov
xchg
inc
adc
push
push
mov
mov
std
mov
adc
roll
lods
leave
jo
lcall
jae
sub
adc
inc
je
and
sahf
push
ret
push
insb
popf
jb
cwtl
xchg
push
je
xchg
shrl
pop
sub
jmp
andb
lock
and
push
stos
sub
jle
sub
cltd
mov
ljmp
clc
pop
cmc
aas
lcall
sub
add
xor
push
mov
jp
in
mov
sbb
lahf
mov
inc
push
sub
dec
scas
addb
gs
cmp
or
mov
dec
add
xchg
jae
addb
jae
enter
mov
or
cmpsl
mov
ret
adc
push
movsb
popf
add
or
adc
mov
sub
shr
dec
and
pop
and
aaa
shll
and
xchg
int3
xor
aaa
sub
jg
jnp
add
movsl
xchg
xchg
adcb
mov
outsb
nop
hlt
int3
mov
dec
icebp
insb
mov
adc
subb
mov
lret
adc
xor
xchg
xor
push
mov
mov
scas
inc
scas
dec
test
ss
out
add
push
and
icebp
jp
add
fisttps
add
outsb
inc
add
dec
sub
sbbb
mov
mov
roll
push
int3
mov
mov
mov
xor
push
in
add
add
push
adc
je
or
andb
popa
add
push
pushf
pop
or
jle
insb
add
pop
sarb
shrl
push
sbb
decb
or
dec
xlat
aam
xor
xchg
push
sbb
dec
insl
mov
fcoms
scas
cli
mov
xorb
popa
xor
fsub
cs
test
out
ficoml
loope
jge
lock
jne
mov
and
nop
int3
mov
add
addb
jg
push
pop
fisubrl
into
jo
push
nop
mov
adc
add
mov
fldt
mov
lret
pushf
dec
mov
cwtl
test
ja
orb
pop
xor
pop
sarb
dec
cwtl
aam
es
dec
decl
sub
dec
addb
jmp
push
inc
lret
add
push
xlat
dec
pop
push
rorb
mov
rcll
xor
addl
xor
loopne
shll
lret
popa
xor
ljmp
xor
popa
and
sub
sub
mov
mov
and
pusha
cmp
ret
push
jmp
jge
and
imul
or
push
xchg
ret
pusha
jp
pop
inc
pop
lods
popf
mov
lock
and
and
fidivrl
loopne
stos
gs
lock
ret
add
cmpb
or
adc
adcb
add
adc
mov
inc
mov
inc
mov
arpl
mov
jo
lcall
shlb
mov
xor
xchg
ret
ficoml
adc
mov
jo
clc
xchg
test
dec
jno
jo
js
ret
and
loope
data16
fiadds
or
or
mov
clc
jmp
sbb
jae
or
add
jnp
orl
fsubrl
mov
mov
jl
add
mov
push
push
or
sbb
push
nop
loopne
push
jle
add
cmp
jae
sbb
clc
sbb
lods
pushf
mov
xor
xchg
mov
mov
lds
shlb
xchg
push
add
push
popf
loop
hlt
and
or
add
jae
lods
clc
xchg
lock
fadd
clc
jns
fdivrl
mov
dec
das
adc
stc
add
xchg
add
outsb
popa
idiv
insb
add
test
mov
xchg
insb
gs
mov
pusha
jl
mov
cwtl
pop
loop
lcall
scas
inc
xchg
test
sub
jae
jno
stc
stos
mov
jg
add
mov
repz
adc
jo
pop
inc
xor
and
sub
xchg
jo
jb
jle
stos
das
mov
jge
mov
jo
jle
xorl
add
pushf
and
fists
xor
adc
mov
inc
add
scas
in
cwtl
and
push
inc
gs
add
ret
sbb
push
or
and
dec
and
push
fiadds
in
popl
fldl
or
pop
fwait
add
andb
sub
dec
and
add
push
jmp
in
fimull
push
out
fcom
fbstp
popl
jnp
and
and
mov
jne
dec
lods
mov
add
cmp
jns
ds
mov
sbb
mov
xchg
add
xchg
test
adc
out
jo
xchg
and
xchg
aad
cld
push
out
add
sbb
jp
add
xor
faddl
pop
jb
cmpsb
notb
mov
fdivs
sbb
outsb
add
insl
inc
mov
adc
push
dec
sti
movsl
je
fldl
or
add
push
sub
or
mov
sbb
shlb
sahf
xchg
or
pop
sub
xchg
add
add
pop
dec
add
in
lret
ret
outsl
push
scas
es
pushf
adc
adc
and
and
xchg
lret
je
push
fmull
inc
call
sbbl
mov
xchg
or
leave
adc
cmp
or
dec
dec
nop
or
insl
sbb
pop
mov
andb
test
xor
sub
or
in
xorb
fadd
jne
js
cmpsl
inc
and
mov
ret
push
push
dec
add
stos
or
adc
mov
adc
sbbb
mov
addb
adc
in
shrl
pop
cli
jb
xchg
std
sbb
cltd
push
inc
add
dec
add
xor
sar
sbb
lock
cltd
adc
call
call
fwait
lcall
rolb
cltd
ret
xchg
in
sbb
ja
in
inc
add
mov
add
cli
xchg
rcrb
inc
dec
inc
das
or
dec
in
pop
inc
mov
adc
dec
test
mov
popa
movsb
push
orb
or
rol
adc
test
and
push
mov
add
jmp
rcrl
jmp
mov
adc
fisttps
dec
adc
test
mov
fimull
cli
fisttpll
xor
imull
adc
scas
add
rcll
add
push
sbb
movsb
add
inc
dec
push
inc
dec
loopne
sbb
sub
mov
inc
scas
add
ljmp
xor
add
inc
fcmovnbe
push
sbb
mov
stos
sbbl
adc
add
test
and
fadd
jl
sar
leave
popa
call
xor
addb
test
scas
mov
jb
in
orl
sbb
mov
enter
std
mov
pop
mov
jno
jle
jg
aam
jo
mov
inc
mov
jg
icebp
outsl
adc
loope
jo
add
sbb
add
aaa
rolb
cltd
add
pop
inc
popa
clc
sbbl
pop
add
cwtl
dec
fimuls
or
jo
pop
sub
push
in
and
ficomps
jl
and
call
std
and
lea
cmp
or
add
push
bound
inc
xor
mov
jb
push
push
jo
incl
loopne
mov
add
bound
test
push
push
sub
ret
or
and
inc
push
adc
loopne
push
in
mov
adcb
stc
int3
aam
ljmp
or
jmp
mov
add
in
in
loopne
sub
loop
cli
loopne
cli
lret
pusha
jecxz
add
inc
loopne,pt
push
cmp
test
popa
and
rorl
xchg
mulb
loope
inc
xchg
test
shl
and
adc
push
lret
add
pusha
jb
sub
mov
add
xor
bound
mov
add
lret
fldcw
dec
and
ret
cmp
jae
ljmp
shlb
inc
fucomip
lahf
loopne
xchg
arpl
push
cltd
sarb
jae
cwtl
pop
inc
pusha
jg
cwtl
pop
add
inc
scas
or
es
add
xchg
cmp
add
fs
je
sbb
pushaw
lcall
aad
repnz
or
inc
xor
repnz
jg
sub
adc
or
cmp
inc
dec
pushf
hlt
dec
les
add
add
inc
mov
mov
add
mov
fimull
pop
dec
inc
or
aaa
cmp
push
data16
out
add
fdivr
in
pop
add
cmp
add
xchg
pop
loop
out
jp
popf
adc
sbb
das
cmp
xchg
dec
push
cmp
or
xor
insb
push
loopne
xchg
or
pop
nop
sahf
or
inc
in
or
enter
inc
mov
inc
push
mov
dec
hlt
movsl
loop
mov
push
ss
sub
pop
push
push
dec
enter
std
adc
test
lahf
and
mov
mov
sub
mov
mulb
lfs
imul
or
nop
adc
xor
mov
inc
jno
fildl
add
inc
jl
inc
rcrb
inc
lods
ds
xor
inc
sbb
xchg
push
pop
pusha
push
and
popa
mov
mov
fmuls
sub
inc
rcl
push
ret
out
sarl
ret
add
xchg
add
mov
cmp
scas
ds
shlb
outsb
out
stos
push
ds
pop
ffree
lds
mov
cmp
lods
popa
push
movsb
adc
mov
inc
hlt
imul
aaa
add
and
dec
sti
lcall
xor
pusha
add
mov
data16
subl
notb
xor
inc
das
and
aad
mov
shll
dec
xor
or
inc
and
out
leave
adc
and
push
dec
clc
pusha
jmp
mov
inc
rcll
adc
loope
xchg
push
adc
out
inc
xor
mov
andb
jbe
rcr
sti
jg
ffree
xor
jp
lcall
loopne
ja
sbb
gs
icebp
xchg
inc
fidivl
jmp
orl
cmp
mov
fimuls
lret
dec
xor
sbb
lret
shl
mov
push
add
xor
lcall
dec
movsl
lock
push
and
sahf
loop
icebp
addb
and
mov
lcall
gs
push
jg
add
fcmovnbe
ds
pop
test
or
xchg
inc
sbb
push
dec
std
fbstp
mov
or
shrl
sahf
nop
xchg
iret
cli
aaa
enter
jo
push
adc
cmpsb
pop
lcall
pushf
or
test
icebp
popf
inc
xchg
mov
jecxz
pop
shlb
test
mov
sti
ljmp
subb
xchg
jo
mov
inc
int3
add
outsl
push
pop
jno
int
cld
add
pop
jl
lds
shll
in
inc
adc
icebp
cmp
jno
add
inc
subb
cs
cmp
sub
lock
test
jg
decb
inc
nop
arpl
les
mov
or
sbb
shrb
adc
add
ljmp
ss
shl
rcrb
lea
xchg
inc
add
adc
movsl
mov
into
gs
shlb
outsl
incl
sarb
dec
pushl
adc
ret
rclb
jo
pusha
mov
adc
push
cmp
push
and
outsl
or
push
add
sbb
gs
mov
gs
push
std
addb
mov
cld
xor
add
mov
mov
lock
je
cmp
add
or
and
arpl
and
aaa
or
and
sub
imulb
mov
pop
push
cmp
rolb
nop
add
push
add
add
mov
fisttpll
or
xchg
push
push
pop
sbb
cld
inc
fiaddl
push
movsl
xchg
sbb
pusha
aas
mov
cmp
fcomi
inc
xchg
xchg
clc
fisubrl
fstl
fwait
mov
aaa
dec
jo
gs
mov
cmpl
adc
std
mov
push
jp
lds
jmp
fildl
in
lahf
sahf
iret
push
xchg
loopne
test
pusha
inc
lcall
outsb
or
dec
jno
stos
inc
mov
dec
lods
gs
adc
std
cmp
add
and
xor
or
add
dec
or
sbb
pop
or
push
jl
xchg
fcoml
pop
lock
les
leave
cli
addr16
lods
push
outsb
dec
cwtl
jp
add
out
into
push
popa
stc
fs
adc
out
ljmp
das
test
cmpsl
jnp
mov
ret
inc
lock
add
push
xor
rcrb
repz
add
mov
xchg
jo
jns
out
fidivrl
movl
inc
ret
test
lock
dec
sub
lods
push
shl
mov
sub
xchg
jle
add
pop
dec
and
pop
clc
or
and
cld
adcb
inc
adc
stos
mov
mov
in
test
fisubl
xchg
jno
out
and
sub
add
decl
add
push
mov
shrb
dec
jne
ret
mov
mov
mov
dec
cltd
lret
scas
pop
mov
xchg
xchg
es
and
test
repnz
or
fistpll
dec
lock
or
cwtl
and
movsb
and
jnp
aaa
cwtl
clc
ret
mov
lea
into
jae
xor
lds
jmp
rcll
in
cwtl
mov
sub
mov
inc
outsl
mov
and
clc
mov
jl
dec
mov
incl
add
mov
push
push
sbb
sub
pusha
ljmp
mov
nop
femms
jmp
mov
mov
add
test
icebp
and
out
fidivl
add
mov
or
dec
loopne
mov
adc
add
notb
and
cli
mov
dec
data16
sbb
xor
js
ret
sbb
xchg
adc
or
add
or
mov
xchg
movsl
push
xor
or
insb
addb
add
mov
inc
mov
das
mov
in
shlb
jle
adc
and
mov
xchg
popa
sarb
jl
icebp
lahf
sahf
push
mov
dec
xchg
rorb
jo
ljmp
xchg
js
xchg
rcrb
push
jle
or
movsb
push
add
enter
mov
xor
das
rcrl
or
add
dec
xorb
or
movsl
jle
xchg
cmp
inc
adcb
push
nop
sbb
outsl
jmp
mov
cmp
mov
shl
mov
dec
popa
ficomps
loopne
shlb
clc
add
xor
and
jp,pn
adc
pusha
std
mov
nop
lea
and
add
and
push
xchg
xor
nop
pop
push
sbb
lods
loopne
in
mov
sbb
push
sbb
cmp
xor
pop
aam
inc
and
cmc
mov
das
push
and
sahf
jp
inc
xor
cli
cmpb
popl
shlb
add
mov
iret
lcall
jnp
loope
jle
inc
xor
and
sbbb
push
xor
lahf
and
pop
jp
and
sbb
loop
inc
scas
cld
cmp
pop
mov
outsb
clc
rolb
test
rcl
adc
ljmp
fwait
and
pop
mov
fidivs
add
mov
ja
mov
pop
or
dec
cwtl
orb
and
fcmovbe
lcall
jmp
xor
jmp
das
xor
xor
mov
xlat
xor
and
mov
adc
cltd
testb
mov
stos
or
add
lock
cmp
dec
andb
and
add
pop
add
adc
dec
adc
orl
scas
lcallw
clc
repnz
enter
mov
adc
jnp
xchg
mov
cltd
add
mov
and
and
push
inc
out
jb
sahf
mov
add
mov
sbb
sbb
sbb
ss
cltd
mov
mov
loop
mov
insl
ja
ret
and
cmc
out
adc
and
xor
push
jecxz
push
sti
lods
gs
bound
and
add
call
adc
lret
sbb
stos
gs
inc
ljmp
out
fiaddl
shl
add
adc
mov
fs
stos
add
add
nop
and
mov
xor
clc
lret
mov
popf
and
inc
or
fldl
call
or
inc
js
mov
mov
mov
jb
clc
mov
sbbl
inc
mov
incl
inc
enter
add
ret
pop
inc
rcrl
mov
gs
outsb
ret
adc
fs
push
dec
not
xor
push
pop
sbb
push
or
dec
mov
xor
scas
or
js
adc
sub
mov
dec
add
or
and
repz
mov
mov
mov
mov
adc
cmpl
and
push
inc
int3
inc
pusha
mov
lcall
clc
ret
inc
mov
orps
jne
pop
call
add
sbbb
out
dec
adc
subl
adcl
loopne
test
xchg
add
sbb
pop
fwait
out
cltd
fcmovu
aaa
inc
dec
add
add
add
adc
pop
and
or
fnstenv
rcrl
jne
stos
sub
or
inc
rcl
or
add
mov
dec
or
add
js
addb
inc
sbb
add
loopne
push
adc
fnstcw
movsl
jbe
or
daa
fdiv
inc
mov
lahf
inc
insb
rol
and
jno
repnz
clc
xchg
inc
jle
xchg
xor
ss
and
rcrb
sub
sbb
inc
jb
loope
mov
hlt
or
add
faddl
test
sub
jbe
mov
rcrl
pop
mov
or
ljmp
inc
mov
add
xchg
xchg
sti
jp
pop
les
inc
js
cmp
das
fiaddl
inc
cwtl
pop
sub
sbbl
xor
rcrb
addl
cli
pop
inc
sub
cs
xor
sarb
xor
sbb
xchg
add
rol
adc
addb
mov
test
mov
movsb
mov
mov
inc
or
adcb
and
mov
sub
dec
leave
loopne
sbbb
fadds
data16
adc
inc
sbb
daa
mov
add
test
adc
mov
movsb
lcall
outsb
add
test
jno
shll
add
pop
push
rolb
or
pop
inc
shr
cltd
sar
popa
andl
xor
inc
xadd
adcb
jne
fisubrl
and
rclb
adc
add
mov
xorb
cmpb
test
lret
inc
std
sub
mov
sbb
hlt
bound
jns
rcrb
loopne
dec
jns
jl
add
sbb
sub
or
mov
add
and
cmpsl
popf
fsts
jae
andl
push
push
add
cmc
inc
rorb
add
lock
push
inc
mov
cmp
inc
add
mov
xor
mov
repz
adc
sarb
iret
mov
jo
movsl
ss
push
mov
mov
scas
mov
jb
inc
mov
xchg
xchg
lock
jp
andb
sub
pop
add
mov
gs
mov
stc
xchg
test
xchg
dec
in
dec
pop
stos
cmp
push
data16
xor
add
mov
incl
std
and
inc
jl
xchg
or
inc
imul
inc
mov
lcall
add
dec
ja
lcall
fisttpl
mov
ljmp
ret
or
push
jo
mov
orb
add
das
xchg
and
inc
inc
adc
sub
sub
sub
push
roll
sub
dec
inc
ret
push
jae
cli
push
inc
dec
inc
sbb
cmpsb
jle
and
pop
and
jno
inc
adcb
jge
outsb
or
subl
pmaxsw
push
and
in
leave
rclb
jle
in
and
inc
mov
xchg
enter
mov
add
rolb
gs
orb
int3
and
clc
rcl
push
fcoms
popf
push
pop
dec
mov
sbb
ret
ja
enter
fsub
push
dec
or
and
in
push
sahf
mov
xchg
xchg
or
nop
push
xor
or
push
loopne
adc
pushf
mov
ljmp
inc
aam
dec
fstpt
dec
mov
lds
jbe
push
jl
pop
pop
inc
rcrb
adc
and
add
xor
sub
push
sbb
push
pop
push
and
rorb
mov
mov
mov
xchg
test
ss
mov
inc
sbb
cld
xor
mov
fs
or
in
sti
rorb
sti
popf
xor
jle
loopne
gs
mov
mov
pop
orb
loop,pn
jb
inc
mov
mov
add
clc
and
and
inc
lock
mov
xor
jp
fwait
hlt
push
es
mov
xchg
test
clc
shlb
sbb
and
data16
adc
add
outsl
sub
xchg
pop
add
and
in
or
lea
dec
jmp
loop
ljmp
int3
clc
and
add
call
sub
inc
adc
inc
in
addl
mov
lock
shrb
repnz
stos
xor
jg
gs
pop
inc
jae
daa
xchg
mov
and
inc
jl
xchg
add
lock
lock
test
mov
xor
mov
pop
xor
into
nop
ja
popa
jbe
jp
jle
adc
and
inc
gs
shlb
cmpsl
dec
in
push
add
add
neg
shll
xchg
adc
mov
xchg
push
or
enter
xchg
fsubl
sub
call
mov
outsb
add
in
jnp
or
arpl
stos
and
mov
hlt
test
mov
adc
out
push
cli
cmp
mov
mov
jg
hlt
gs
loopne
or
dec
add
cmp
out
pop
insb
call
stc
mov
inc
inc
push
mov
jge
add
loopne
adc
mov
test
dec
scas
bound
cmp
add
dec
popf
inc
clc
cmpb
decl
jae
dec
mov
xorb
sub
inc
mov
cmp
jo
fisttps
jmp
pusha
outsb
je
jmp
dec
ret
adc
cmp
inc
cmp
xchg
lock
add
mov
jns
adc
add
and
je
or
scas
fiaddl
sub
jno
test
icebp
mov
mov
add
sbb
in
test
rclb
mov
aaa
stc
cwtl
add
mov
jne
adc
pop
inc
shlb
or
add
push
je
add
push
loopne
fs
and
add
xor
mov
or
and
orl
lods
cmp
push
sbb
sub
or
add
xchg
iret
cli
lods
nop
add
jle
mov
loope
add
stos
jmp
cmpsb
jns
sar
or
stc
sbb
int
mov
sbb
dec
mov
loopne
cmpsb
insl
sub
adc
loopne
and
negb
add
movsl
push
aam
cltd
nop
or
ds
xchg
xlat
pop
sahf
xor
std
dec
test
mov
sbb
mov
xor
mov
push
sbb
cwtl
jnp
shll
or
add
jne
fildll
add
in
aad
and
aam
pop
xor
shlb
xchg
std
cmp
stos
dec
cmp
xchg
rsm
fnstsw
roll
lret
add
or
into
pop
xor
sbb
dec
aam
xchg
xchg
into
stc
add
outsb
clc
ljmp
xor
jno
cs
add
mov
mov
and
sub
std
sub
or
dec
push
test
sub
fisubrl
add
or
add
push
out
mov
icebp
add
nop
sti
outsl
add
push
cmp
pop
inc
push
push
jp
jb
gs
add
inc
adc
push
push
add
xor
adc
daa
mov
pusha
dec
shr
popa
push
pop
xchg
dec
push
loopne
stos
sbb
add
sub
and
inc
sbb
fwait
pushf
outsl
aaa
leave
mov
push
sbbb
push
out
push
xorb
xchg
loopne
aam
enter
dec
sbb
lcall
add
lods
xor
test
in
test
dec
mov
aam
mov
loopne
clc
mov
sbb
call
clc
lcall
orl
test
scas
aam
xchg
sub
add
xor
jns
aas
mov
xchg
fwait
lea
test
fiadds
push
mov
movsb
lock
aad
push
mov
push
add
inc
add
lcall
pushaw
mov
pop
mov
cs
add
wbinvd
int3
add
or
fists
rolb
lcall
idiv
add
mov
xor
add
addl
pop
push
movsl
add
xor
adc
jo
loopne
pusha
fsts
mov
jecxz
mov
adc
pop
cmp
gs
xchg
cmp
xchg
lahf
adc
adc
dec
scas
and
mov
sub
enter
in
or
mov
retw
jne
fucom
out
in
outsl
or
nop
jecxz
out
mov
decl
test
add
add
shlb
xchg
cmc
sbb
add
pusha
popf
pop
enter
test
fucomi
cli
mov
jge
or
pop
shll
cmp
mov
mov
xchg
push
jg,pt
aas
xor
add
mov
push
or
loopne
loopne
mov
bnd
adc
mov
inc
call
fcmovnbe
mov
push
and
outsl
rclb
add
mov
mov
xchg
mov
and
test
test
xor
imul
xchg
lods
adc
and
movsl
into
mov
mov
sub
ret
sub
adc
add
add
js
jecxz
mov
loopne
inc
je
sbb
mov
orb
cmc
mov
cmp
xchg
sbb
gs
push
push
push
imul
cld
and
in
inc
aaa
add
mov
or
nop
stos
push
push
gs
add
fwait
mov
xchg
clc
and
icebp
pop
lret
xorb
das
pop
data16
push
xchg
fisubrl
or
mov
cmp
push
int
lea
mov
addb
aas
sub
icebp
sbb
js
and
add
inc
sub
xchg
fimull
arpl
fcom
dec
push
add
stc
mov
mov
jo
add
add
pushf
dec
push
xchg
cwtl
xlat
out
add
xchg
shrb
adc
sub
addb
inc
pop
addb
stos
or
add
sub
cmp
adc
pop
sbb
mov
xor
ja
adc
push
sub
lcall
adc
cmpb
call
pop
loope
dec
les
adc
lret
add
push
push
dec
lods
sbb
cmpb
mov
nop
sbbb
sahf
out
orb
push
push
mov
addl
sbb
adc
jb
add
xchg
sbbb
shrb
into
dec
ret
in
or
xor
popf
adcb
jmp
add
add
dec
add
and
roll
jg
xor
xchg
andb
add
popa
cmp
mov
sahf
inc
and
or
dec
mov
adc
aam
push
rcl
lea
pop
fs
sbb
out
lcall
dec
inc
xchg
jecxz
adcb
xchg
addl
scas
mov
icebp
pop
push
lcall
or
sbb
push
fs
add
push
stos
clc
jg
mov
dec
test
cltd
mov
jbe
xchg
add
cmp
sqrtps
fsubr
mov
xchg
andb
pop
popl
inc
jns
out
cld
insl
xchg
xor
test
call
incb
sub
xchg
call
sti
inc
mov
fstp
inc
or
lock
push
loop
add
inc
les
mov
mov
fcmovnb
adc
inc
orl
aaa
add
ret
jb
shll
push
push
or
test
add
push
dec
mov
sti
mov
out
mov
enter
jns
rcrl
out
ret
lret
dec
cmp
add
xor
enter
fs
aaa
sbb
sbb
adc
sub
add
inc
mov
cs
pushw
je
sub
andb
xchg
cmp
fldenv
add
push
lock
dec
rcrl
incl
sub
xor
jp
shl
fbld
sbb
loopne
sbb
adc
je
mov
dec
jbe
dec
ss
inc
cmpsb
lock
testb
clc
sub
fiadds
mov
in
int3
dec
add
popa
sub
inc
and
and
stos
jnp
jo
loope
mov
insb
push
mov
pop
imul
and
lahf
in
inc
mov
bnd
clc
movsb
add
mov
das
ret
or
iret
pusha
or
stos
test
cmp
inc
shlb
pusha
daa
incl
push
enter
test
push
es
add
loop
push
fildl
gs
sbb
and
insb
and
and
mov
pop
inc
jno
test
inc
and
mov
mov
cmp
inc
push
add
outsb
or
and
aad
movsl
and
fldenv
xor
ret
sbbl
daa
push
jno
add
gs
pusha
stos
in
mov
inc
sbb
mov
sub
fsubrs
test
out
and
je
inc
lds
or
lods
mov
data16
or
repz
jo
hlt
jo
adc
sar
xchg
and
dec
iret
push
inc
inc
gs
sub
ja
jp
lds
sbb
lds
test
sub
cmc
test
loopne
mov
jl
inc
dec
inc
or
add
loopne
nop
hlt
andl
mov
aad
mov
mov
cli
xchg
orl
add
shlb
sbb
or
or
adc
inc
cmp
fcoml
nop
pop
jnp
pop
icebp
and
cmp
jae
adc
adc
jae
add
xchg
push
outsb
or
add
dec
leave
push
cld
or
in
xor
xchg
mov
or
mov
add
das
jp
andb
repnz
gs
adc
push
push
stos
loope
push
add
addb
ficomps
es
inc
stc
xor
mov
subb
jg
js
dec
or
cld
and
clc
addb
arpl
push
pusha
cmp
or
fs
test
call
je
in
mov
loopne
xchg
lock
fildll
popa
adcl
jo
xchg
jne
or
test
inc
lock
fdiv
std
fistpll
shrb
mov
sbb
fsubrl
xor
add
pop
mov
cmp
in
adc
pop
cmp
loop
push
loopne
and
and
adc
cmpsl
sarb
pop
pop
dec
sub
lea
mov
pusha
ljmp
cmp
push
or
scas
clc
and
loopne
pusha
add
inc
andb
adc
ret
jb
call
jle
mov
xchg
mulb
andb
adc
js
popf
mov
mov
mov
out
xorb
cltd
mov
pop
mov
mov
xor
pop
fistpl
add
xchg
add
dec
push
enter
and
push
cld
call
bound
adcb
jo
push
inc
add
test
aad
movsl
xor
gs
add
inc
std
pop
jo
ret
lock
add
push
pusha
outsb
add
mov
bound
pop
fidivs
bound
rcrb
loopne
fisubl
in
fstp
loopne
xchg
add
fucomip
ja
dec
mov
stc
cltd
popa
sub
cmc
inc
xor
std
ljmp
and
and
into
xor
dec
xorb
fisubl
mov
sub
incl
mov
daa
orb
icebp
mov
dec
sub
mov
out
dec
sub
sub
js
rolb
jecxz
incl
sub
pusha
sub
sub
mov
dec
gs
push
pop
fs
dec
sbb
sbb
sub
mov
dec
loopne
loop
xor
fs
ret
cmpb
push
subb
add
dec
test
into
cli
call
sub
inc
or
sub
sub
push
pusha
add
xchg
and
dec
or
test
add
sbb
stos
lcall
xchg
lock
mov
je
out
xor
or
popa
dec
xorb
shlb
test
add
fadds
pop
test
dec
test
jge
fcomps
sbb
push
push
test
mov
sbb
xor
dec
sbb
push
gs
sbbb
mov
insb
lods
dec
and
mov
pusha
sbb
cld
hlt
in
push
inc
dec
push
mov
repnz
add
push
or
shrl
nop
xor
push
xchg
dec
sbb
pop
cli
inc
aaa
lods
or
jge
inc
dec
mov
mov
cmc
xchg
xchg
clc
mov
xchg
out
xchg
mov
decb
adc
inc
mov
mov
rorb
add
dec
test
dec
xchg
mov
pop
add
jbe
decl
add
xchg
push
jl
xor
fsubl
fcomi
jmp
push
js
in
aad
adc
adc
jne
call
lcall
int3
inc
xchg
mov
aam
mov
inc
test
sbb
and
sub
mov
stc
bnd
inc
mov
lea
jo
int3
mov
loopne,pn
scas
add
mov
push
push
or
test
test
xor
stos
or
mov
lock
push
mov
mov
clc
adc
mov
scas
into
sti
pushl
add
pusha
or
adc
or
rcl
pop
mov
rcll
sti
fwait
movsl
inc
mov
push
addb
add
fsubl
loop
sub
dec
loopne
lcall
jb
mov
nop
or
rorl
or
push
mov
sbb
xchg
shlb
cli
xchg
mov
or
aad
lcall
add
mov
mov
pop
mov
and
testb
addb
rcl
add
push
je
jb
les
sub
or
pusha
or
mov
rorb
in
push
mov
mov
mov
sarl
xchg
in
insb
lock
insb
rcll
inc
inc
add
aas
aad
jmp
jmp
test
aas
xchg
push
push
aaa
nop
fwait
add
fmuls
nop
repz
mov
inc
dec
gs
xor
inc
loopne
icebp
hlt
mov
mov
ss
hlt
mov
pop
data16
add
mov
test
jecxz
pusha
adc
and
sbb
or
or
push
hlt
adc
js
aam
es
popf
sbb
insl
orb
push
pusha
sbb
push
sbb
and
mov
int
pop
iret
adc
inc
jb
add
xor
mov
sub
sub
roll
dec
add
lock
mov
adc
add
icebp
ret
push
sbb
push
rolb
sub
and
add
xacquire
lods
shl
sbb
cwtl
adc
pop
addb
jl
pop
lock
enter
scas
cwtl
jmp
cwtl
or
push
xor
jg
adc
push
test
addl
gs
and
or
add
lret
popf
js
xchg
xchg
dec
add
inc
push
jp
out
pop
add
lods
push
mov
add
fimuls
orb
and
mov
cmc
or
das
xorb
cltd
mov
in
and
add
xchg
inc
inc
cmp
int3
data16
jbe
or
addb
addl
gs
mov
or
add
fs
adc
push
mov
add
aam
xchg
cli
jg
mov
orb
push
adc
fcomip
ljmp
fidivs
sub
shlb
and
inc
push
xor
mov
inc
push
ds
jmp
jmp
and
mov
adc
adc
lock
stc
insb
xchg
inc
push
inc
ret
push
inc
shrb
rclb
nop
testb
andb
push
fs
insb
test
aam
jmp
cmpsb
mov
loopne
lods
adcb
lret
xor
pop
or
popf
inc
inc
mov
or
mov
mov
leave
clc
mov
ret
or
ljmp
and
sub
mov
int3
fcmovne
clc
lret
mov
sbb
roll
jno
xor
mov
fisubrl
xchg
or
and
xor
shrb
add
ror
xchg
add
cs
cmp
lock
rcl
fsub
js
adc
add
inc
push
push
dec
nop
call
xlat
push
dec
add
loopne
fildl
fdivl
mov
fldl
bswap
and
add
jmp
fwait
loop
xor
popa
adc
and
dec
sbb
pop
and
lods
push
ret
sbb
pop
clc
sbb
lret
and
xorb
and
push
je
in
lea
clc
and
gs
test
fldl
loope
data16
pop
pop
jne
xchg
sub
adc
ljmp
or
mov
cli
adc
pop
and
add
sbb
mov
adc
or
mov
lret
cmp
aaa
cld
test
loope
lret
fildl
fisttps
loopne
push
fsts
add
cmpsb
jbe
icebp
pop
cmp
inc
cwtl
add
sub
pusha
push
mov
xchg
inc
dec
xchg
mov
add
sbb
mov
cmp
and
mov
fstps
pop
xchg
cmp
mov
and
mov
add
adcl
pop
and
add
sbb
or
jb
adc
xor
subb
mov
mov
add
push
bound
inc
mov
xor
clc
mov
popf
int
and
stos
xchg
lock
sbb
pop
add
das
pop
aad
add
inc
add
sub
dec
push
fcoms
enter
xchg
fisubs
sarb
cmpl
inc
push
xor
out
cmpsl
xor
or
jp
lods
test
or
or
and
mov
push
loopne
mov
dec
jne
dec
and
inc
pop
aam
push
pop
cmc
or
mov
mov
push
ficoms
sahf
and
mov
or
fucomi
popf
fdivrs
cltd
ficompl
mov
sbb
js
xchg
popa
pop
xorl
adc
adcb
adc
fisttps
jl
cltd
mov
pop
int3
add
jmp
sbb
mov
push
and
icebp
dec
add
pop
and
cmp
mov
jmp
mov
jbe
mov
jo
jbe
xchg
mov
add
or
push
xchg
loope
orb
decb
gs
dec
shlb
xchg
mov
sar
call
movsb
sbb
inc
cmp
les
outsb
pusha
mov
ljmp
mov
clc
push
imul
adc
add
lret
dec
lock
fimuls
mov
lods
push
shlb
pushf
std
incl
es
dec
shll
cltd
add
adc
jbe
mov
mov
mov
shr
push
xchg
inc
sub
adc
rorb
push
movsl
outsb
add
cmpl
add
cld
xchg
sub
add
and
add
decl
adc
rclb
rcrb
sbb
add
divb
fbstp
adc
or
xchg
ret
in
sbb
pop
sbb
mov
mov
and
xor
popf
sub
aaa
adc
add
loop
adc
cld
hlt
mov
add
xchg
test
and
add
dec
add
inc
call
add
add
pop
daa
add
and
add
sub
sbb
lds
popf
and
hlt
jbe
adc
loope
or
push
xor
or
jle
mov
aad
and
ds
inc
inc
adc
and
inc
adc
add
fwait
or
lock
push
adc
push
and
mov
fistps
bound
add
rcrb
xor
in
bound
pop
fucomp
fistl
les
adc
jmp
adc
insb
outsb
incl
push
adc
jne
and
jb
pop
sbb
dec
popa
adc
dec
sub
das
xor
pusha
xor
add
rclb
xchg
adc
jo
jnp
adc
pop
add
ret
push
or
mov
sub
lods
jo
or
push
fisttpl
fidivrl
xor
mov
dec
ret
sbb
lret
adcl
repz
imulb
repnz
cwtl
mov
or
or
data16
mov
xor
xor
clc
pop
mov
mov
adc
nop
or
cmp
jl
and
push
push
or
xchg
loope
incl
sub
add
push
mov
popl
and
pop
andb
sub
inc
push
orb
subb
cmp
cmp
test
popf
adc
gs
addl
sub
sbbb
test
test
sbb
shlb
cld
in
adc
sbb
sbb
int3
or
sbb
icebp
mov
jb
int
mov
mov
rcrl
inc
push
sbb
sar
pushl
cld
sbb
or
jno
jecxz
cld
push
mov
mov
divb
push
mov
adc
shrl
or
aam
xchg
push
sub
je
sub
subb
mov
sbb
push
mov
and
mov
arpl
push
cltd
mov
jge
call
or
mov
icebp
jg
sbb
inc
clc
imul
pushl
jbe
push
notl
cmp
lock
push
xchg
mov
lcall
rcll
pop
lret
insl
dec
sbbb
adc
filds
jb
pop
adc
fst
and
lret
pop
mov
xchg
or
push
stos
cwtl
xor
fildll
cmp
ja
das
mov
push
mov
and
incl
add
movsb
movsb
mov
jmp
inc
mov
dec
ljmp
pop
dec
hlt
insb
and
ljmp
jge
or
and
mov
gs
loopne
add
cltd
int
or
mov
pop
sbb
outsb
mov
mov
push
adc
jl
push
xchg
inc
push
add
stos
inc
cld
lods
sarl
add
lock
out
aad
inc
sub
daa
es
lret
push
and
add
insl
cmpsb
fldl
or
sahf
outsl
xor
mov
gs
push
adc
sub
mov
pop
pusha
adc
adc
cld
mov
sbb
test
pop
lock
icebp
das
mov
add
push
fdivp
lock
sub
lds
std
pusha
add
enter
push
jp
icebp
lret
cmp
fwait
bound
andl
add
push
fsubs
fildl
push
adc
notb
push
cmpsb
xor
or
je
movsb
clc
mov
dec
roll
add
insl
jp
jo
sbb
enter
push
inc
sbb
inc
add
push
psubd
mov
or
rolb
nop
and
mov
or
inc
sub
fldt
fisubl
psubusw
cmc
mov
stc
lds
and
or
movsb
sbb
jg
out
fisubrs
mov
sub
lds
and
push
adc
pop
xchg
frstor
add
or
dec
mov
decl
sub
inc
popa
movsl
fistl
mov
adc
add
pushf
jo
mov
xor
rclb
fstl
jb
icebp
lods
and
popl
xchg
xchg
ds
enter
push
sub
adc
and
shlb
or
jo
mov
sub
sbb
mov
xor
and
lret
adc
icebp
add
adc
add
cmpsb
inc
add
dec
add
lret
add
mov
sub
dec
xor
enter
mov
xchg
gs
jle
or
addb
inc
and
push
int3
insb
inc
push
std
lcall
mov
rcl
inc
push
jmp
add
and
jmp
cs
rorb
jmp
stc
addb
mov
xor
std
aaa
inc
mov
add
cmc
add
ja
mov
pusha
sub
shll
xchg
ret
and
mov
cwtl
jbe
je
or
dec
pop
adc
jl
add
cld
xchg
orb
mov
xor
adcb
addr16
mov
lret
jnp
enter
lret
in
mov
xorl
add
add
mov
sbb
add
sub
add
test
lods
xor
or
daa
adc
and
fnsave
lcall
add
adc
sbb
fs
push
jle
out
aad
ss
test
scas
xor
sub
adc
cld
aaa
fsubr
xor
cs
repnz
mov
jmp
cltd
dec
data16
mov
add
xchg
pop
jno
cmc
mov
xorb
lret
in
cli
test
cli
mov
mov
clc
pop
cmpsb
inc
test
test
add
dec
fwait
xchg
xor
and
lcall
movsb
ror
add
add
out
fidivl
push
sbbl
sbb
sbb
mov
rclb
test
xchg
lea
push
clc
mov
jle
lahf
cltd
mov
movsl
sub
jb
sub
and
and
clc
add
fiadds
pop
lock
loope
xchg
lds
nop
push
gs
outsb
add
js
mov
lcall
mov
call
dec
mov
jp
adc
cmpb
fldl
popa
xchg
gs
jno
or
mov
popa
in
and
jbe
gs
adc
jbe
dec
cmp
mov
or
orl
dec
addl
inc
mov
sbb
jo
push
cmp
aaa
fsts
out
and
and
lea
xor
subb
addl
and
lret
outsb
sbb
les
test
xlat
inc
add
cmp
pop
add
les
clc
aas
push
or
gs
clc
jg
clc
lret
or
mov
out
rorl
xchg
adcl
or
sub
daa
lahf
stos
data16
add
inc
cmp
add
pop
enter
mov
xor
lret
inc
and
jg
scas
ss
rclb
push
dec
push
mov
add
clc
sub
push
sbb
xchg
dec
test
jge
ret
and
movl
arpl
inc
sub
test
sub
movl
jbe
lock
pop
leave
mov
cmpsb
push
sbb
or
mov
xchg
addl
mov
rclb
push
stc
mov
jecxz
popf
and
cwtl
mov
dec
inc
lahf
sub
loope
adcb
fistl
xchg
test
mov
or
decl
adc
faddp
cmp
dec
inc
and
sarb
inc
incb
inc
and
inc
or
mov
add
test
xor
mov
sbb
rolb
add
pop
sub
orl
push
loop
mov
sbb
out
or
xchg
dec
and
xchg
add
jmp
add
sub
fdivr
inc
lods
push
add
lock
lock
lahf
mov
movsb
mov
lea
pusha
xchg
scas
and
or
xchg
scas
or
jnp
push
mov
push
daa
add
mov
sbb
pop
out
inc
mov
dec
test
sbbl
pop
inc
call
addb
and
push
faddl
cmp
sub
clc
push
rorl
or
sarb
dec
or
push
popa
jne
cli
mov
sbbl
or
add
cmpsb
dec
aam
sbb
sbb
push
loop
pop
clc
imul
push
aad
inc
add
pop
sar
loopne
mov
popa
adcb
les
das
imul
pop
and
cwtl
test
and
in
addb
cld
mov
mov
js
inc
insb
dec
sbb
ljmp
xor
and
adc
jp
mov
lods
sbbb
mov
xchg
or
inc
and
mov
inc
mov
ret
lcall
mov
jp
add
push
and
aas
lcall
rorb
jle
push
shll
sub
cltd
inc
push
push
jno
lods
xor
mov
test
push
sub
pop
hlt
mov
mov
out
pusha
gs
gs
incb
pusha
push
in
and
cmpsb
pop
cwtl
inc
popa
inc
nop
add
mov
fs
and
add
pop
add
pushf
lea
shrb
rclb
in
lods
jae
or
pop
cmp
push
ljmp
imul
rcll
loopne
jb
in
xchg
sbb
xchg
mov
ds
mov
ja
dec
std
roll
in
sarb
mov
xchg
and
add
dec
clc
pop
fwait
push
add
add
sub
jecxz
adc
sbb
out
adc
or
mov
lock
movsl
add
xchg
push
popa
sub
jmp
hlt
pop
inc
inc
pop
pop
mov
shll
dec
loope
inc
fadds
or
and
adcb
call
mov
pusha
add
lea
das
stos
addb
repnz
adc
adc
mov
jl
jg
arpl
dec
inc
or
adc
lcall
js
add
andl
sbb
loop
adc
add
or
pusha
fisttpll
fadds
push
outsl
ljmp
int3
inc
push
jns
pop
add
add
inc
imul
jae
ljmp
lcall
pusha
adc
add
frstor
xchg
and
gs
icebp
test
imul
xor
sarb
inc
lds
mov
jb
or
lret
mov
dec
dec
fmull
inc
push
sbb
inc
dec
dec
aad
push
test
out
fidivrs
cld
inc
push
inc
adc
orb
cmp
movsb
mov
add
inc
stos
xor
pushl
sahf
xor
dec
clc
xor
pop
popf
pushl
je
sarb
mov
mov
adc
subb
pop
mov
inc
js
hlt
jo
andb
or
mov
loop
orb
add
jl
decl
push
mov
push
dec
push
test
popa
cs
pushl
das
fdivs
adcb
out
subl
add
rcrb
mov
jecxz
jg
push
inc
fdivl
cmp
popa
adc
filds
push
push
inc
inc
and
or
push
lcall
insl
sbbl
jp
add
mov
clc
add
xor
pop
data16
shlb
cmpb
sbb
adc
mov
adc
adc
pop
loopne
push
sarl
pop
cmp
imul
push
add
sub
repnz
loope
rol
xor
adc
outsb
xorb
xchg
dec
push
lods
dec
mov
and
inc
mov
ror
add
pop
dec
sub
xchg
adc
dec
jecxz
and
add
imul
sarl
imul
inc
fimuls
cmp
adc
inc
add
adc
std
adc
mov
jno
and
mov
mov
cmp
int3
fiadds
pop
sarb
andb
pusha
adc
add
call
popa
gs
lock
push
or
movsb
push
mov
test
adcb
lahf
push
es
adc
pushf
bound
mov
lret
dec
sbb
xor
push
insl
jecxz
push
jo
mov
fs
push
jecxz
movsb
pusha
ds
push
aam
adcb
mov
gs
test
call
test
sbbl
pusha
pop
rclb
adc
pushf
pop
and
insl
ss
mov
lcall
cli
inc
fucom
fwait
lret
mov
sub
or
test
jno
jp
mov
push
add
xor
add
adc
mov
cli
scas
ljmp
sbb
loope
or
inc
or
xor
cmc
in
mov
inc
add
add
cmpsb
add
insb
pop
jp
loop
shlb
jbe
adc
ljmp
and
adc
xchg
mov
add
in
or
les
subl
roll
push
sahf
sbb
stos
xchg
xchg
rclb
call
test
xchg
inc
lahf
dec
adc
loopne
cli
xor
adcb
int3
adc
call
xchg
insl
and
xor
cmp
pop
sbb
jb
add
pop
xorl
push
mov
gs
push
mov
inc
call
or
jle
int3
mov
jnp
out
mov
jbe
aaa
frstor
mov
loopne
adcb
ja
add
mov
cltd
mov
inc
rolb
out
xor
or
push
dec
repnz
push
add
add
or
jl
sbb
test
and
adc
xlat
mov
or
jo
mov
lret
add
stc
sbb
mov
mov
in
sbb
dec
mov
cli
pushl
repz
fs
pop
push
arpl
icebp
add
pop
loope
lods
pop
lret
inc
xchg
mov
adcb
inc
inc
fcomps
and
dec
fnstsw
data16
xchg
out
ret
cmpsb
mov
xchg
decb
addb
mov
mov
sbb
mov
cwtl
push
adcb
insl
jg
shrb
mov
inc
jb
adc
enter
cmp
call
vmovq
fs
xchg
lea
sub
cmp
adc
jge
and
push
outsb
out
lods
adc
mov
or
or
push
imul
and
or
jb
leave
dec
popa
sub
fistps
sbb
cmpb
gs
sbb
insl
gs
adc
inc
jg
add
lock
mov
push
sub
cwtl
push
mov
mov
push
popa
or
fcmovne
push
or
add
xchg
cs
leave
cltd
adc
data16
or
mov
xor
js
mov
mov
cld
das
push
mov
sub
inc
inc
xchg
lcall
lock
add
incl
popf
push
sbb
gs
daa
push
lock
sub
fldz
sti
rolb
test
out
cs
adc
dec
adc
test
sub
insb
loope
sbb
jg
pop
pop
test
mov
push
add
shrb
mov
in
xchg
add
or
sub
in
test
mov
add
decl
lock
cmp
cmp
sub
pop
xchg
mov
popf
rolb
adc
dec
fs
fwait
add
mov
sub
dec
fs
adcl
pop
inc
in
xorl
inc
or
pop
xor
adc
repnz
ret
inc
xchg
dec
pop
bound
jp
mov
aaa
add
push
add
ret
jo
in
lock
pop
inc
testb
mov
dec
cli
data16
rol
or
xor
inc
in
iret
cli
cmp
push
mov
inc
aad
sub
push
test
loop
add
leave
push
mov
lods
cmpsb
sbb
rol
adc
add
lea
pop
mov
fidivs
and
mov
gs
adc
pushf
or
std
in
push
mov
pop
es
hlt
out
mov
mov
pop
mov
inc
ljmp
in
adc
movsb
jo
jle
inc
adc
addl
mov
inc
cmpsb
xchg
sbb
test
cltd
adc
or
add
rcrb
fsub
lods
mov
daa
mov
faddl
int
nop
sbb
fisubs
adc
ja
add
pop
pop
inc
nop
and
push
mov
aas
and
and
push
add
inc
add
inc
movsl
jg
scas
jo
gs
and
subb
and
popa
push
pop
and
andb
lds
add
leave
jb
inc
mov
cltd
frstor
add
add
push
mov
mov
lds
add
insb
sub
pop
fisttpl
mov
add
or
or
and
fmull
mov
popf
push
roll
mov
pop
or
adc
xchg
push
pushf
add
push
dec
add
or
dec
mov
repnz
push
inc
fs
or
add
loope
sbb
xchg
push
es
or
orb
les
mov
push
gs
sbb
test
and
and
rorb
and
xorl
add
lcall
jg
cmpl
cmp
mov
and
or
xor
shlb
lret
shll
add
pusha
test
lcall
rclb
rcll
add
int3
adc
xchg
pushf
push
scas
or
call
andl
test
fcmovb
xchg
hlt
lods
sahf
inc
jge
push
js
push
cmp
sub
lcall
add
cltd
sbbb
inc
inc
add
and
push
add
and
out
mov
adc
jl
ret
call
mov
add
lret
ret
mov
jle
test
pop
popf
add
movsl
sub
adc
adc
shl
movsb
das
rorb
inc
cli
push
jne
pop
dec
jne
call
push
cli
outsl
stos
push
and
shrb
ficomps
mov
data16
xorb
lea
je
hlt
ret
push
mov
dec
test
mov
cmp
mov
scas
adcb
subl
clc
dec
js
or
add
test
pop
sarb
xorb
lcall
lret
or
leave
in
fs
xor
inc
adc
arpl
insl
mov
test
and
add
add
pop
jle
adc
ror
rolb
jb
cwtl
inc
xchg
loopne
push
ss
or
pop
or
mov
out
ficoms
or
push
pop
adc
inc
rcl
rcrl
sub
gs
mov
dec
lcall
movsl
xchg
je
pop
test
add
add
add
pop
sub
pop
mov
mov
insl
mov
scas
mov
add
push
mov
cltd
aas
push
std
mov
cmpb
cmpsb
pop
mov
inc
repz
push
rcll
xchg
cmpsb
mov
push
ficoml
jg
bound
xchg
clc
xchg
aas
pop
push
pop
dec
sub
pushf
pop
add
ret
adc
jl
imul
popa
cli
fldl
roll
push
mov
mov
test
mov
pusha
add
lods
jo
inc
int
cmpsb
stc
adcb
inc
mov
xchg
inc
rcrb
or
mov
clc
and
sbb
addl
test
fcoml
cmp
loopne
push
jl
repnz
cld
sub
scas
push
mov
jge
into
mov
and
decb
loope
pushf
jmp
mov
lret
andb
pop
xor
sbb
sub
xor
xor
and
lods
mov
dec
push
add
sarb
lods
test
dec
and
hlt
in
rolb
add
loopne
add
mov
in
mov
inc
jne
cmp
or
cmp
xor
inc
adc
lods
dec
and
adcb
bound
add
adc
or
xchg
fimull
push
xchg
cmpsb
push
je
jb
lea
fs
shrb
add
stc
clc
jg
xchg
mov
or
inc
arpl
or
adc
int3
push
xchg
cmp
clc
xchg
test
movb
pusha
inc
inc
jg
mov
pusha
and
or
xchg
add
mov
cmc
inc
stos
xchg
add
cmp
mov
cltd
fs
sbbb
sbb
mov
xchg
dec
mov
lock
fildl
push
mov
orb
test
lock
popl
ret
movsl
rolb
or
mov
jge
repz
jp
pusha
sub
repz
dec
adc
pushf
mov
test
inc
mov
icebp
addb
inc
push
inc
jb
lea
loopne
mov
inc
rolb
shll
or
cmpsb
lret
test
outsl
or
add
outsb
and
mov
aam
and
lret
imul
adc
cmp
push
pusha
or
lock
push
mov
and
and
push
or
loopne
or
cli
mov
push
push
ja
mov
loopne
mov
decl
test
xlat
std
lods
fprem
mov
mov
and
inc
jecxz
fcomip
mov
xchg
pop
add
outsb
and
js
incl
adc
pop
sbb
andb
pop
pusha
add
push
scas
lods
mov
mov
ficoml
lcall
decb
adc
std
add
pop
and
jecxz
xorb
les
add
pop
cmp
inc
mov
jne
rcrb
sbb
cltd
mov
sbb
roll
sbb
pusha
adc
sbb
sbb
stos
mov
mov
cwtl
add
ret
or
cmp
int3
sub
icebp
jno
xor
sbb
inc
decl
mov
push
or
sub
push
test
or
push
push
adc
hlt
incl
rcll
int3
inc
push
lcall
cmp
jle
or
aad
jecxz
ljmp
cltd
and
repnz
orl
sar
add
push
sarb
adcb
je
pop
mov
loopne
stos
aam
andb
cltd
test
ret
in
popf
mov
pop
mov
rcrb
loopne
aaa
insb
test
mov
xor
shll
sbbb
je
popl
ret
adc
movsb
or
cmp
aad
nop
repnz
push
fdivr
xor
and
or
loopne
mov
dec
xchg
fs
cmp
mov
fs
adc
adcb
cmp
inc
sbb
dec
ja
cmp
stc
mov
stc
test
jno
cmc
cmp
int3
cmp
inc
adc
stc
cmp
enter
cs
adc
or
adcb
mov
dec
lock
and
inc
testb
or
push
loopne
out
or
adc
mov
jo
and
mov
mov
mov
push
lret
mov
or
dec
sbb
das
or
popa
add
sub
jmp
fsubl
adc
lock
xchg
pop
add
mov
in
seta
lock
add
push
add
shl
pop
push
adc
inc
add
loope
xor
pushl
jno
dec
cmc
xor
mov
icebp
add
dec
pop
mov
push
mov
pop
mov
je
mov
sbb
pop
or
mov
adc
in
add
or
test
addr16
sub
addb
mov
or
fbld
sbb
push
mov
jo
jge
inc
divb
pop
jns
xor
sar
lcall
or
add
xor
sar
test
mov
dec
mov
cli
jg
inc
popa
push
and
pop
push
sar
adc
jl
lock
orb
arpl
xchg
xchg
inc
imul
icebp
scas
sbb
insb
jne
outsb
xchg
mov
jg
dec
rclb
dec
fsubrs
or
sub
lock
decl
cltd
xor
jo
or
data16
nop
add
or
addb
push
add
jmp
add
insb
mov
jp
xchg
add
lcall
or
or
es
lret
andb
addb
mov
fisttpll
out
xor
in
int3
fcoml
or
mov
test
rolb
in
es
popf
rorb
pop
loopne
push
lret
add
scas
push
cmpsb
rolb
popf
inc
cmp
mov
test
add
rclb
mov
dec
aad
inc
jo
or
addb
aam
adc
push
fwait
xor
xchg
or
sar
out
mov
out
push
add
lds
push
or
push
test
add
add
and
mov
xchg
dec
push
mov
inc
add
dec
loop
hlt
call
push
dec
pop
ljmp
dec
repnz
arpl
pop
jg
push
mov
mov
sahf
lahf
dec
xchg
dec
mov
popa
or
add
cmc
pop
and
and
jecxz
cmp
push
and
pop
in
mov
push
jae
insl
orl
bound
decl
loopne
clc
movl
jp
sahf
lods
sbbb
xchg
lock
and
repz
mov
cmp
imul
push
push
out
in
ret
hlt
push
stc
adc
loope
add
pusha
fwait
rol
push
lods
add
loopne
ret
cmp
mov
outsl
fwait
adc
xchg
mov
add
jp
sub
or
mov
mov
ja
pusha
rcll
mov
adc
lret
xorl
push
add
mov
pusha
std
or
enter
fistpl
sub
enter
push
mov
pop
adc
pop
and
std
inc
dec
mov
push
cmpsb
or
push
std
mov
xor
xchg
mov
loopne
pop
into
sbb
repz
mov
call
add
or
add
pop
jo
decl
les
rolb
push
movsb
inc
push
test
inc
jo
outsb
mov
push
xchg
xchg
or
add
add
sbb
test
xchg
mov
lea
sbb
vmread
jl
add
loope
or
sub
data16
add
xchg
or
fildl
js
aad
push
getsec
mov
fcmovnu
aad
add
insb
ret
sahf
xchg
cmpsb
inc
jb
push
test
add
clc
push
or
xchg
mov
clc
pop
add
cld
clc
inc
sbb
fs
jae
jo
in
inc
inc
mov
cli
mov
into
jae
push
clc
adc
mulb
push
andl
or
outsl
outsb
xchg
call
xchg
push
icebp
add
add
add
subl
roll
add
add
pusha
pop
pushf
popfw
pop
mov
sub
mov
and
jbe
hlt
pop
lcall
daa
or
ja
sbb
data16
or
dec
push
dec
lcall
mov
scas
enter
subb
subb
adc
adc
and
push
mov
sbb
add
in
adc
loop
imul
into
mov
add
add
outsl
rclb
test
and
mov
inc
int3
dec
add
roll
fcmovnu
gs
add
xor
fs
addb
pop
mov
sbbl
mov
push
or
ljmp
pop
orb
or
pop
or
test
add
inc
add
sbb
jg
incl
xchg
popf
fs
xchg
add
data16
jns
push
add
js
xchg
inc
pusha
fisttpll
lods
rorb
sti
scas
es
mov
stc
fwait
mov
loopne
mov
xorb
ja
or
lret
in
shlb
push
inc
jno
jbe
stos
insb
dec
jecxz
stos
mov
or
add
fs
dec
test
hlt
push
test
rolb
subl
push
sti
add
rorb
xchg
and
add
inc
sbb
aas
std
neg
mov
jge
sbb
cli
inc
adc
test
lds
dec
shlb
jmp
movsl
aaa
jbe
mov
push
out
je
push
mov
stos
xchg
add
xchg
push
add
outsl
in
add
sahf
inc
int
roll
rcll
mov
mov
xor
lods
sbb
push
cmp
lahf
ret
ret
xor
pop
push
cmpb
push
sbb
add
xchg
orl
adc
loop
lret
sub
adc
sbb
or
cmp
ljmp
les
xchg
aam
push
xor
add
dec
mov
loope
inc
jge
sahf
out
lock
fs
add
or
pusha
fisttpll
fidivs
clc
mov
pop
iret
pop
mov
jns
lret
orb
mov
sti
leave
mov
pop
mov
pusha
add
or
add
je
nop
push
sti
das
inc
mov
inc
mov
dec
and
movsb
shl
dec
add
sub
nop
cld
mov
mov
mov
cld
adc
rolb
inc
push
orb
or
je
movsb
jge
add
jg
cltd
mov
icebp
mov
lods
and
xorb
adc
loope,pn
and
mov
bound
push
pop
outsl
inc
cmp
pusha
add
sbb
jmp
divl
cltd
or
adc
test
frstor
or
inc
addb
cmp
adc
mov
loopne
jp
jmp
mov
shlb
and
mov
lahf
add
dec
lock
scas
dec
mov
push
and
add
sbb
adc
push
test
outsl
xchg
and
pop
roll
add
or
or
push
add
es
mov
repz
movsb
and
call
mov
dec
add
add
sarb
and
int3
and
push
adc
inc
or
adc
pop
loopne
add
rcrb
call
cltd
and
ljmp
loopne
incw
add
push
fimull
loop
mov
inc
mov
xor
popa
xchg
cmc
pop
xchg
add
sar
add
jge
data16
add
ret
add
stos
cmp
pop
or
adc
inc
hlt
mov
rcrb
fcomip
sub
inc
adc
inc
adc
sbbb
pop
dec
add
dec
fsubs
nop
sub
shlb
inc
sbb
loop
xchg
mov
inc
pushl
scas
xchg
sahf
je
sub
dec
sbb
sub
jmp
ret
mov
mov
sub
rclb
or
xchg
out
adc
push
sub
mov
xchg
mov
and
loopne
jecxz
mov
bound
fs
ror
loop
add
push
pop
insb
jl
stos
cmp
mov
gs
popa
test
sbb
stos
stos
insl
aam
repnz
pop
fs
incl
jecxz
ljmp
icebp
lods
ret
inc
or
fildll
sahf
xchg
sbb
inc
xor
sbb
dec
mov
cli
inc
test
or
and
cmp
mov
addr16
or
outsb
add
add
orb
push
mov
loopne
in
test
add
test
adc
xchg
or
cmp
stc
dec
adc
clc
xchg
mov
test
imul
mov
ljmp
pop
push
daa
out
xor
mov
movaps
adcb
mov
daa
fdecstp
push
outsl
clc
iret
daa
icebp
inc
push
ror
mov
shrl
dec
outsl
idiv
xchg
in
pop
sub
jmp
sub
dec
cmp
sub
mov
or
adc
sub
mov
or
lahf
in
gs
idivb
sub
dec
xor
push
ret
and
test
outsb
add
add
nop
xor
pusha
add
pop
js
and
push
mov
rol
pop
aam
loopne
and
in
insb
sub
fwait
xchg
jb
jle
adc
or
or
pop
cld
call
orl
mov
int
or
mov
in
xorl
xchg
shrb
add
outsb
push
dec
fidivs
ret
add
dec
ret
fisubrl
dec
jp
or
mov
mov
data16
and
xchg
aad
push
sbb
call
lock
popf
hlt
push
mov
jg
orl
aad
jo
sbb
scas
push
call
repnz
mov
out
adc
inc
inc
pop
cld
mov
xor
repnz
icebp
and
or
ljmp
ja
fcomip
xchg
jle
add
jne
add
fldl
loop
dec
dec
addb
scas
and
loop
aam
sarl
jmp
or
xchg
xor
xchg
mov
sarb
sarb
add
cmp
mov
inc
mov
ja
es
dec
pushf
push
cmpsb
push
mov
aaa
inc
fistl
push
repz
mov
push
pop
sarl
rclb
fs
jg
cli
xor
movsl
dec
pusha
aaa
lock
das
add
add
mov
sbb
xadd
xor
mov
or
dec
mov
loope
add
in
pusha
push
out
xchg
push
repz
decl
clc
inc
add
arpl
test
imul
int
push
mov
scas
xchg
add
mov
mov
andb
pop
out
add
add
dec
jne
jne
call
xchg
or
stc
xor
loop
inc
or
pop
fs
and
stc
add
add
push
and
cwtl
loopne
adc
sbb
push
or
add
incl
add
sub
cmp
add
mov
and
jo
repz
fbld
or
cld
xor
mov
popa
jo
pop
rcl
mov
filds
aad
mov
es
xor
shlb
mov
push
jl
mov
mov
add
mov
jl
mov
pusha
xor
pop
adc
testb
pusha
stos
sbb
add
sbb
ljmp
push
in
pop
icebp
in
test
pop
in
add
in
decl
sub
add
jo
adc
ljmp
pop
and
sbbb
adc
mov
and
jle
dec
loop
push
hlt
enter
lcall
xor
mov
mov
fimull
and
ss
inc
add
or
and
xchg
mov
jno
nop
les
dec
adc
cltd
pop
mov
xor
mov
jb
cwtl
xor
pop
lock
mov
jmp
rcrb
cmpsb
inc
jg
orl
push
les
lods
pushf
rclb
outsb
add
in
jnp
jg
push
imul
jbe
scas
jge
inc
dec
test
or
add
cli
dec
mov
mov
addl
pop
cmp
insb
push
bound
pop
push
pushw
popf
fcomps
lock
fiadds
mov
fwait
jecxz
je
and
jo
add
sbb
and
mov
lods
pop
dec
adc
mov
xchg
pushf
and
pmaxub
mov
jb
mov
xor
mov
add
or
dec
push
dec
push
movb
bound
push
int3
push
into
int
mov
pop
cmpsb
dec
add
js
add
pushf
add
sub
test
xor
push
pushf
jae
cmpb
mov
ret
adc
xchg
mov
orl
mov
push
jp
cmp
and
scas
push
sar
cmp
sbb
add
dec
call
add
add
pop
pusha
stc
jns
cld
adc
sbb
cmpsb
dec
cwtl
orb
mov
xchg
mov
sarl
mov
mov
push
test
into
mov
int
pop
add
sbb
cmpsl
xor
gs
sub
jo
decb
add
rolb
inc
or
inc
add
add
xor
sti
add
or
sub
mov
fisubl
pop
popf
fcomps
xor
pop
divb
adc
mov
or
call
fadds
jbe
mov
mov
addb
andb
push
rclb
cmpsl
or
lods
mov
sarl
mov
lds
mov
add
pop
fdivl
icebp
test
add
mov
les
ffree
sarl
mov
int
add
xchg
mov
mov
xor
add
add
fwait
mov
lods
dec
and
or
loopne
das
xor
lods
xorb
orb
mov
cltd
out
inc
sbb
xlat
jne
je
push
xchg
xchg
cmpsb
jp
decl
faddl
gs
loop
add
inc
push
or
shll
mov
and
sbb
jne
lods
xchg
cli
cs
mov
and
scas
sub
rcrb
inc
or
fldl
adc
gs
or
jb
pop
cmp
mov
jb
std
rorb
sub
cmp
std
jbe
mov
jb
shlb
mov
int
sub
inc
test
cmp
mov
hlt
jmp
mov
or
xchg
insb
cld
incl
inc
xchg
lahf
pop
gs
push
arpl
inc
dec
xorb
pop
rcrl
mov
mov
cld
add
cmpl
mov
incl
bound
jp
inc
add
inc
loop
mov
fcomip
in
or
xor
add
dec
jg
mov
js
ret
mov
lcall
js
test
std
xor
push
adc
mov
inc
mov
pop
jb
or
mov
and
rorl
push
or
mov
pop
pop
popl
cltd
mov
jo
mov
imul
ret
popf
cmpsb
into
inc
cmp
push
jne
xor
adc
inc
call
cli
stos
adc
cmpsb
ret
in
out
call
outsb
mov
mov
mov
and
xchg
ret
and
dec
fcomi
pop
mov
imul
xchg
add
push
testb
loopne
fimull
loope
add
adc
lret
mov
mov
pop
into
add
pushf
mov
adc
add
and
and
mov
decl
add
mov
inc
adc
fs
adc
jae
outsb
jg
mov
fprem
and
or
stc
andl
das
sub
adcb
dec
jge
cmpsb
or
add
add
std
daa
fs
out
xchg
mov
rcrl
rorb
push
jno
in
and
ret
jmp
mov
dec
inc
insl
xchg
pop
cmp
dec
sub
add
loop
add
pop
enter
and
clc
or
adc
aad
mov
sbbb
jne
repnz
push
data16
push
inc
inc
loop
jle
iret
aam
jg
mov
ja
or
push
push
dec
and
loop
cmp
sbb
mov
inc
clc
xchg
aam
in
repnz
mov
test
or
jae
jg
push
dec
adc
jo
fsubrs
sub
clc
cmp
or
loopne
adc
popa
or
dec
call
rclb
sbb
out
xchg
or
push
adc
jno
or
pop
lds
push
rcll
rcll
rol
int
dec
cmc
adc
pop
outsl
insb
xorb
push
push
lret
pop
and
fisubrs
jb
jo
fs
insb
add
mov
stc
mov
add
jmp
and
add
sbb
xchg
add
mov
pop
mov
lods
das
aam
inc
xor
sbb
adc
jle
movb
dec
icebp
pop
imul
sub
incl
and
push
ret
xor
jle
mov
das
popa
cmpb
mov
stc
add
mov
jno
aaa
or
clc
push
ret
add
pop
add
popf
ret
add
mov
icebp
mov
adc
mov
lcall
sti
lcall
push
rcll
std
mov
jge
sahf
mov
out
sahf
loope
hlt
aaa
jmp
jno
ret
inc
push
fs
cmpsb
sarb
shr
nop
lahf
pop
fs
inc
dec
adc
or
adc
push
imul
push
addb
adc
mov
mov
sub
adc
icebp
xchg
call
sub
dec
dec
adc
lahf
adc
add
pop
push
xor
negb
pusha
test
in
call
fnsave
or
xchg
inc
stc
movsl
mov
adc
lock
lcall
mov
push
mov
pusha
or
push
inc
nop
pop
dec
or
test
push
push
pop
mov
mov
das
pop
mov
jo
sub
sub
add
insl
outsl
rolb
add
cmpsb
and
push
in
sub
mov
data16
mov
mov
push
push
mov
sbb
ret
push
pop
mov
add
stos
sti
lock
pop
adc
or
push
xor
cmpsb
es
in
pop
pop
movsl
lds
fbstp
ret
ret
add
lods
pop
add
push
add
pop
add
xor
decl
mov
jae
add
or
rolb
or
or
and
movsb
mov
xor
xchg
enter
jle
je
cmp
jb
or
scas
mov
lahf
cs
push
add
stos
fs
push
adc
ljmp
nop
lock
adc
scas
jo
adc
clc
into
icebp
lods
cmpsl
inc
and
or
frstor
jae
aam
outsl
out
mov
scas
test
xchg
add
lret
test
dec
out
add
bound
and
push
inc
scas
jo,pn
and
ja
testb
inc
jb
pop
push
dec
mov
add
cld
cmpsl
mov
add
popf
adc
mov
roll
jg
test
lret
and
mov
outsl
fildl
and
dec
push
into
rcll
pusha
rcl
test
push
add
fsubl
or
push
insl
stc
sti
jbe
cld
xchg
add
push
mov
mov
call
rolb
fwait
ljmp
pop
les
or
cwtl
push
sti
push
mov
outsb
ret
push
leave
test
adc
data16
in
testb
popf
adc
pushf
or
mov
pop
cmp
mov
pop
mov
lock
sub
aad
dec
jns
outsl
xor
in
mov
adc
lret
xor
fiadds
loope
insl
int
sub
es
cmp
inc
add
das
dec
fdivs
mov
adc
xor
adc
in
or
inc
nop
cltd
or
cld
dec
mov
out
aad
add
mov
dec
push
stc
sbb
mov
rcr
jmp
lret
adc
adc
sti
sbb
jg
clc
iret
push
add
add
xchg
les
jnp
jnp
dec
cli
cs
int3
add
adc
sub
fnsave
mov
movsb
jg
and
movsb
popl
ljmp
in
fistl
in
xor
or
fwait
insl
cmp
add
or
jbe
add
xor
cmp
or
mov
adc
or
testl
xorb
jmp
pop
js
iret
adc
ljmp
in
addl
les
inc
or
lret
mov
push
test
scas
scas
inc
scas
pop
adc
andb
adc
popf
test
fisubs
or
add
or
sbb
or
jo
int
dec
inc
or
xchg
sbb
shlb
dec
insl
jae
mov
push
inc
jmp
adc
movsb
push
add
adc
push
mov
mov
pop
pusha
adc
add
push
inc
add
lock
les
loop
aad
mov
sbb
inc
addr16
add
es
push
loopne
lret
or
dec
or
lods
push
add
loopne
testl
mov
stos
imul
cmpsb
or
les
insb
or
loop
movb
or
jge
cs
rcl
add
sbb
push
jne
cwtl
test
ss
mov
lds
lods
push
mov
push
push
add
dec
jo
test
dec
loop
sub
and
mov
lods
xchg
mov
addl
pop
mov
add
adc
clc
sbb
add
push
xchg
lock
sub
push
pop
rolb
lds
pop
xchg
adc
addl
or
inc
xor
add
dec
mov
test
mov
lcall
push
jne
dec
loop
mov
movsb
push
or
adc
dec
or
or
jle
test
and
mov
mov
push
jno
cmp
inc
dec
add
lock
xchg
mov
aas
ret
scas
add
lret
xchg
scas
inc
sub
mov
stos
add
fs
lea
push
and
pop
dec
inc
mov
or
mov
xor
or
mov
shlb
dec
and
ficoml
shlb
sub
or
xchg
adc
or
push
nop
addl
inc
add
mov
cmpsb
lods
js
add
shll
test
inc
fisttpl
xchg
or
mov
sahf
test
push
adc
jne
push
adc
mov
sub
xchg
ffree
pop
mov
mov
fbld
insl
es
dec
xor
mov
scas
dec
add
add
or
push
cmp
inc
and
cwtl
cmpl
or
nop
add
fs
mov
adc
add
cwtd
add
xor
adc
sbb
or
mov
pop
or
push
add
pop
data16
cli
mov
movsb
scas
inc
ljmp
ss
xorb
adcb
stc
movb
add
mov
sbb
inc
sub
sti
sbb
push
nop
sbb
adc
mov
mov
in
mov
add
or
rcrb
stos
nop
sbbb
add
inc
sbb
add
add
fstl
lock
cmpb
cld
pushf
jle
in
dec
cld
sbb
or
inc
jne
xchg
push
insl
mov
orb
adc
dec
aam
je
outsb
lahf
cmpsb
ja
pop
dec
inc
int3
jle
mov
mov
sub
adc
jp
push
mov
push
jmp
out
loopne
in
insb
das
rolb
jle
dec
mov
inc
enter
hlt
andl
xchg
push
mov
movsb
xchg
xchg
add
arpl
or
sub
and
xor
sub
test
mov
or
incl
pop
mov
repz
stos
or
add
pushf
push
sbb
lea
iret
cmpsb
pop
sub
sbb
test
mov
jnp
lock
mov
sbb
inc
pop
pop
dec
jb
ljmp
inc
mov
sbb
push
in
cmp
pusha
push
jns
fisttpl
inc
stc
stos
xor
test
add
lret
out
inc
cld
movsl
je
adc
sbb
je
mov
inc
inc
mov
sub
add
ret
fcoms
xor
fcom
add
ss
fiaddl
add
pop
and
int3
mov
call
mov
es
js
stc
in
je
mov
add
cmp
inc
sub
dec
insl
push
push
xchg
fisubrl
xor
xor
adc
orl
dec
loopne
mov
sar
xchg
cmpsb
ret
jne
xchg
or
mov
in
and
clc
inc
jecxz
mov
ret
push
add
add
lret
add
jb
pop
xchg
adc
fisubrs
lock
lcall
xor
mov
sub
pushf
adc
add
mov
test
outsl
pop
sub
add
lods
out
push
add
pop
add
and
mov
jns
das
and
xchg
cli
xchg
dec
push
mov
loopne
cmp
add
sbb
scas
mov
pop
loopne
add
rolb
and
mov
sbb
cli
fwait
imul
ret
cmp
xchg
add
sbb
push
int
push
add
mov
popf
dec
mov
and
pop
mov
mov
add
jp
pop
or
lods
movsb
mov
loopne
mov
sub
test
xchg
mov
fs
and
aam
mov
popa
ss
mov
mov
or
jge
hlt
cmpsb
dec
mov
mov
and
fiadds
fsubs
push
mov
mov
sti
add
inc
dec
stc
xchg
push
int
dec
jecxz
in
mov
xchg
enter
xor
jmp
fdivrp
pop
call
push
data16
mov
jno
xchg
mov
mov
jb
cmp
add
rolb
fcmovu
std
mov
and
adc
jmp
mov
loop
xchg
in
or
inc
adc
jno
mov
sub
mov
js
addb
es
icebp
pop
mov
pushf
loopne
push
sub
xchg
lock
rclb
popaw
or
nop
pop
ljmp
push
push
scas
xor
xchg
hlt
ds
pop
sub
shlb
inc
or
call
dec
bound
mov
adc
out
loope
dec
ret
dec
clc
aam
or
outsl
push
fisttps
or
cmpsl
or
filds
clc
xchg
aad
lahf
aam
test
repz
outsb
mov
outsb
push
call
or
or
add
cltd
pushfw
inc
or
ret
clc
stc
in
mov
mov
fimull
xor
sub
push
lea
aas
test
addb
push
popf
movsb
mov
aad
mov
sbb
push
bound
fs
or
sbb
push
inc
mov
cmp
push
fcoms
adc
fs
adc
cmp
cmovl
stos
xorb
mov
scas
fdivrs
jne
mov
sbb
inc
je
loopne
mov
dec
and
sub
ss
orb
dec
add
and
push
cmpsb
incb
mov
or
loope
mov
pusha
sbb
imul
sbb
fdiv
das
add
or
ror
rclb
xor
shrb
pop
add
mov
gs
sub
dec
push
inc
adcb
or
test
sbb
xor
xchg
and
cmc
or
loopne
dec
ret
bound
add
push
stos
add
es
xchg
or
dec
mov
jp
adc
adc
fisubrl
addl
addb
nop
sbb
push
adc
pop
imul
aam
shl
adc
sub
dec
bound
pop
filds
addr16
std
jo
inc
push
mov
icebp
dec
adc
ljmp
fiaddl
or
cmc
gs
mov
das
movsb
and
lods
pushf
mov
clc
mov
mov
cmpsb
inc
add
sbb
mov
mov
inc
and
cli
decl
or
mov
add
cltd
fcomps
addb
mov
jo
lds
add
pop
inc
sbb
sti
sahf
xchg
pushl
mov
bound
pop
mov
jo
jmp
insb
xor
fdivl
pop
push
jle
in
push
mov
stc
leave
push
addr16
or
cltd
xor
or
pop
pop
mov
out
es
clc
and
xchg
orb
rcr
je
psubw
pop
nop
sub
mov
popf
rcrb
sbbl
jp
add
mov
loope
cmp
fcmovnb
dec
sbb
inc
rclb
or
nop
or
imul
ret
push
pop
and
adc
aaa
lds
mov
into
jg
push
icebp
pop
add
outsb
iret
mov
or
insb
mov
and
push
cwtl
sbb
adc
or
pop
push
lea
add
dec
add
xchg
popa
push
adc
push
sub
and
pusha
push
mov
push
or
mov
dec
mov
testb
mov
nop
mov
push
das
sbb
call
imul
int
imul
adc
or
fs
adc
or
inc
or
addb
mov
je
rorb
dec
fisttpl
jg
dec
jo
sahf
fisubs
xchg
pop
icebp
in
lds
xchg
ret
add
mov
sti
add
sbb
mov
ja
jecxz
push
cmp
cmp
inc
mov
adc
fcomip
push
mov
cli
stos
lea
push
test
lret
je
add
fisttps
mov
ds
push
addb
add
out
mov
push
cmp
aaa
roll
xchg
xchg
push
dec
sub
out
push
jle
add
add
cmpsb
je
cli
sub
xor
das
add
ret
jbe
repnz
icebp
aaa
and
ret
test
subb
mov
jge
add
pushf
adcb
cmp
sub
push
inc
pop
adc
sbb
rcl
mov
decl
sti
mov
dec
clc
test
add
add
incl
and
add
add
add
jb
jns
addb
or
shlb
lea
add
shll
jnp
and
test
xchg
adc
mov
fisubs
sub
xorb
dec
pusha
dec
push
fmull
hlt
dec
mov
xor
fbstp
enter
repz
loopne
loop
or
or
add
push
mov
and
lds
fidivl
jns
inc
shrb
and
sti
xchg
mov
sbb
cltd
jo
jmp
cli
nop
mov
cwtl
loopne
or
call
jg
mov
cmpsb
lock
enter
fcmovnu
pusha
sbb
add
mov
dec
push
cli
mov
or
stc
scas
popa
sbb
shl
cmp
es
mov
add
int3
or
or
jb
out
xchg
cs
int
insb
and
inc
cli
mov
fs
lods
jp
jnp
and
or
stc
xchg
cld
pop
inc
cli
jp
call
and
sahf
sub
stc
imul
push
es
jp
and
jmp
cwtl
push
mov
add
nop
jg
pop
rolb
add
fs
adc
mov
cmpsl
cmc
bound
mov
pop
adcl
fs
into
addl
andb
dec
lock
sbb
in
sbb
les
inc
or
cmp
dec
fadds
orb
mov
shlb
and
ds
and
inc
out
fcomp
push
aam
or
imul
subb
and
dec
data16
add
add
adc
push
and
aad
pop
cmc
push
pop
mov
sub
jae
stc
mov
cmp
fs
in
idivb
lea
movsb
xchg
jecxz
pop
adc
in
jno
add
test
and
mov
aaa
fsts
fidivrl
pop
cmp
mov
mov
pusha
add
rclb
test
cmp
add
mov
or
test
add
nop
adcl
arpl
pop
sub
or
rcll
xor
sbb
cld
xchg
jb
xchg
add
add
cwtl
add
sbbb
addr16
nop
adc
push
and
jb
add
adc
xor
sahf
fiaddl
aam
add
ds
and
adc
fdivl
add
dec
mov
dec
gs
xor
inc
insl
out
pop
adc
outsb
dec
jae
mov
or
inc
aam
push
lods
ficompl
daa
push
incb
push
test
lahf
in
mov
dec
idiv
inc
xchg
or
jae
ret
mov
int
addl
adc
test
or
mov
int
jmp
lahf
add
imulb
or
mov
push
adc
add
jbe
in
push
push
test
cltd
push
xor
outsb
sbb
mov
push
jne
addb
lea
test
int3
cmp
and
into
and
push
add
clc
inc
add
pop
hlt
or
jns
ja
cmpb
sbbb
xor
popf
or
add
xor
ret
loopne
clc
movsb
push
mov
jns
andb
adc
inc
mov
xchg
jbe
out
mov
push
pop
xchg
orl
xor
and
loop
rorb
aad
stc
in
out
fucomip
pop
push
call
or
or
jge
movsb
cli
push
stos
xor
mov
fisubs
cmp
test
clc
and
out
popf
mov
jl
test
testb
nop
orb
inc
arpl
mov
cs
clc
push
addb
fimuls
nop
or
insl
fcmovnu
int
or
jmp
and
or
cmc
push
mov
and
std
or
je
mov
xchg
sbb
ret
cs
mov
xor
sub
add
dec
mov
mov
loop
or
pop
cs
and
dec
adc
and
roll
inc
or
orb
addb
addb
idiv
xchg
je
inc
xor
cwtl
pop
orl
inc
pop
xor
ljmp
dec
fildl
clc
movsl
mov
movsb
add
dec
adc
push
test
jge
jp
clc
push
pop
roll
pop
lretw
mov
xor
nop
rorl
call
mov
pop
push
xchg
push
jp
outsl
scas
and
inc
or
int3
jp
push
incl
sub
rorb
test
or
sti
test
jb
xchg
push
or
fidivl
cltd
mov
push
lock
jp
push
push
sub
jne
inc
push
mov
sub
ret
nop
ss
xor
inc
add
cmp
sub
push
into
dec
out
fcomp
loopne
fst
aam
rcl
inc
out
pop
dec
test
pop
dec
inc
insb
shlb
das
insb
hlt
sub
mov
lret
xor
int3
mov
dec
xor
mov
add
xchg
mov
sbb
dec
shrb
or
pop
cmp
dec
pushf
int3
adc
xchg
insb
xor
cld
mov
leave
test
and
xchg
test
push
sub
add
sub
xchg
mov
pop
sbb
adc
insb
in
mov
sbb
dec
std
decl
orb
pop
add
nop
jo
aam
sbb
test
xchg
cmp
cli
mov
push
loope
lods
adc
inc
pop
xchg
or
nop
jle
je
gs
gs
mov
xchg
and
dec
mov
insb
pusha
sub
or
cmp
shlb
push
mov
cmp
mov
add
imul
in
push
dec
loopne
std
inc
movsb
ss
enter
cmpsb
insl
adcb
hlt
mov
call
sahf
add
sbb
pusha
or
adc
mov
mov
adc
jg
push
cmp
adc
and
dec
andb
xor
scas
sub
pop
lcall
mov
cli
or
ja
mov
push
and
dec
sbb
add
mov
out
add
pop
cltd
mov
push
pop
data16
addb
es
sub
inc
pop
sbb
adc
push
and
rcrb
loopne
add
cmp
lcall
bound
fldenv
xor
sub
push
mov
fwait
pusha
sbb
xor
ss
mov
and
mov
popa
xor
push
loope
cmp
nop
jbe
sbb
aaa
pop
mov
mov
call
scas
xor
fidivl
cli
adc
sti
sbbb
insl
inc
int
mov
imul
add
inc
ss
push
add
xor
fidivs
lcall
pusha
add
push
scas
push
fs
pusha
arpl
adc
fmuls
daa
mov
push
or
add
xor
lods
xor
add
jmp
sub
rorl
int
mov
test
xchg
xchg
into
icebp
xchg
add
and
fbstp
xchg
add
add
ficompl
or
and
push
js
mov
jno
or
mov
mov
movsl
dec
jb
scas
mov
ret
pop
imul
inc
stos
mov
or
xor
or
add
push
cs
or
sbb
push
sub
add
lock
mov
ja
xor
stos
icebp
xor
cmc
push
stc
add
lods
sub
adc
loopne
test
std
or
add
or
sbb
add
mov
stos
movsl
pusha
test
sub
add
dec
jnp
add
jno
test
jne
jns
mov
dec
jge
xor
pop
mov
les
sbb
cmp
mov
mov
inc
test
filds
mov
xor
cmp
pusha
mov
jb
stos
fs
push
test
sbb
in
loopne
or
push
clc
mov
mov
sub
add
push
pop
mov
jg
cltd
int
dec
inc
repz
test
aas
andb
add
pushf
dec
mov
lret
adc
testl
xchg
ds
mov
dec
test
adc
pop
xor
add
dec
push
dec
push
jg
and
mov
pop
fildl
std
add
je
inc
bound
push
cmp
jmp
test
push
es
adc
orb
xor
in
mov
out
out
cltd
pushf
cmpsb
jo
stos
mov
lock
cmpsl
xchg
add
push
in
imul
sbb
push
imul
orl
dec
stos
aam
outsl
fisubrl
lcall
fidivrs
xlat
adc
mov
adc
mov
xlat
lock
push
add
icebp
stos
or
sub
outsl
scas
jb
add
or
jo
rcll
fnsave
xchg
outsb
leave
adc
mov
lods
jo
cltd
push
and
cmp
jae
shrb
or
push
jne
gs
sarl
movsl
lock
jne
stos
mov
mov
mov
out
jbe
out
mov
out
std
push
pop
ret
jnp
jg
jo
cmpsb
cmp
sbb
push
add
cmp
mov
pop
xor
mov
rorl
enter
jae
call
jae
stc
mov
push
sbb
pop
addl
jecxz
imul
push
sti
adc
pop
mov
xor
inc
inc
dec
add
pop
int
and
add
rcl
mov
cmp
stos
sbb
out
xor
clc
imul
addr16
jmp
add
or
lock
add
loop
fiadds
fsub
lods
push
cmpl
push
xchg
adcl
addb
or
lock
cmpb
ds
mov
mov
stos
data16
sbb
sub
mov
popa
or
movsb
mov
push
stc
jb
in
outsl
in
sbb
push
pop
lods
or
dec
sbb
pop
stos
xchg
loopne
pop
mov
loopne
leave
imul
pusha
mov
in
add
popa
sub
stos
mov
push
sub
and
push
push
mov
stc
sbb
lea
loopne
cmp
fwait
adc
dec
rorl
scas
pop
sbbb
mov
sahf
notb
push
sbb
movsb
les
or
cmp
push
jecxz
out
jmp
pop
jle
pushf
out
pop
test
fists
je
popf
fcmovbe
lcall
push
push
je
sbb
mov
inc
cmc
adc
xchg
xchg
or
test
mov
scas
cmp
cmp
sub
push
and
push
subl
xchg
cs
sbb
or
pop
rcr
stos
sbb
lea
or
or
add
decb
clc
add
stos
dec
add
or
add
sbb
dec
repz
push
aas
sbb
daa
sub
adc
repz
sbb
add
scas
imul
repz
sti
xor
shll
jecxz
jmp
shll
rcl
xlat
fcmovnu
ret
dec
shll
lret
iret
mov
mov
mov
cmpsb
xor
fwait
lahf
add
rcr
outsb
sbb
or
cmpsb
imul
jnp
jg
lcall
imul
pop
imul
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
jae
jb
or
add
xor
arpl
lcall
inc
out
lcall
lcall
daa
sub
imul
imul
imul
out
rcl
fcmovnu
ret
out
lcall
mov
imul
imul
fwait
add
mov
lock
dec
jae
mov
stos
mov
add
and
lods
dec
pusha
mov
ljmp
rcl
ficompl
fisubrs
movsl
or
add
pusha
addb
mov
stos
imul
filds
or
movsb
add
adc
shll
movsb
addl
mov
cwtl
adc
push
jae
loopne
inc
stos
imul
sbb
push
add
loope
dec
push
pop
addb
movsb
loopne
mov
loopne
xor
cmp
and
daa
sub
adc
lcall
pop
or
and
cmpsl
imul
cmpsl
jne
jecxz
out
out
sarl
lcall
push
mov
dec
dec
pusha
add
lcall
sbb
xor
xchg
fwait
lahf
xorl
loopne
mov
or
cmp
imul
dec
and
pushf
cmpsb
dec
xor
subl
adc
mov
mov
mov
add
mov
jb
mov
iret
pusha
sahf
add
dec
aas
sub
div
lods
mov
nop
dec
xchg
cwtl
lahf
add
sar
or
xor
je
js
pusha
sbb
out
imul
repz
repz
dec
xor
jg
imul
sub
clc
mov
popf
cli
add
and
roll
test
hlt
movsl
push
push
mov
lret
sub
rorb
xchg
icebp
sbb
or
les
push
dec
stos
shlb
mov
cmpsl
cwtl
int
adc
dec
rcr
add
outsb
fs
movsb
lcall
or
int3
mov
insl
fbld
fistpl
jge
decb
add
insl
mov
fstpl
xor
fwait
dec
dec
test
ficompl
mov
add
enter
mov
shll
xor
stos
push
inc
xor
jle
ds
gs
dec
lock
nop
pop
push
int3
scas
push
adc
adc
lods
or
push
and
add
inc
xor
test
movsb
test
inc
or
or
xor
or
scas
mov
add
cmp
push
fsubrl
mov
add
popa
add
inc
add
xor
cld
ljmp
gs
adc
and
adc
inc
add
or
adc
or
or
or
or
ljmp
pusha
and
pop
cmp
roll
mov
add
bnd
jb
pop
push
or
xchg
jae
pop
jo
outsb
push
or
cmp
mov
or
add
mov
or
push
or
pushf
aam
mov
or
cmp
das
sub
mov
dec
ss
add
sbb
decl
add
in
push
pop
jmp
filds
cld
incl
push
and
or
testb
sbb
add
test
mov
rolb
out
mov
jae
mov
popf
and
stc
popf
gs
jo
push
mov
gs
fsubrs
mov
or
or
aam
adcl
test
arpl
and
outsl
add
mov
or
les
ret
adc
sub
xor
sti
pop
test
not
add
adc
xchg
out
sub
in
xchg
cmp
jno
push
fisubl
inc
gs
mov
xchg
sub
adc
sub
adc
or
inc
inc
add
sub
sbb
jl
fstps
adc
adc
pop
jl
mov
add
add
add
add
jg
sub
jo
sbb
jbe
aaa
gs
xor
inc
or
mov
andb
and
mov
xchg
xor
xchg
sub
lock
call
cwtl
das
xchg
pusha
push
mov
add
sbb
es
pmuludq
sbb
repnz
add
loope
add
fstpt
xlat
adc
mov
fwait
mov
shlb
push
push
mov
add
cmpsl
hlt
add
add
rolb
and
mov
gs
pusha
inc
or
push
mov
mov
ret
inc
jg
push
cmp
inc
dec
mov
or
xor
es
lret
in
fstpt
xor
xor
and
mov
jno
sbb
mov
mov
pusha
flds
xor
add
loope
je
xor
dec
push
sahf
shr
dec
dec
decb
les
mov
ss
sub
and
jg
add
and
mov
xor
push
mov
adc
pusha
inc
or
or
in
idiv
je
dec
fbstp
mov
sub
and
or
push
cwtl
scas
fisttpl
add
jbe
mov
push
jl
pop
cs
shl
mulb
movsb
or
pop
cwtl
push
mov
andl
jb
ret
clc
outsb
fstpt
and
stc
shll
sar
or
scas
fisubrl
xchg
or
push
insb
jne
movsb
gs
lret
divb
add
mov
push
aaa
jns
retw
aad
jo
cwtl
gs
add
icebp
or
pop
shll
icebp
cmpsb
add
sbb
enter
imulb
in
push
out
aam
add
or
fnstcw
push
add
clc
or
mov
es
cmpsb
scas
mov
push
orl
mov
loop
cli
xchg
pop
dec
mov
add
push
clc
adc
add
nop
push
or
sbb
mov
dec
pop
testb
aam
add
mov
test
sarb
cs
fmuls
incl
cmp
push
sub
aam
lea
push
add
mov
sbbb
pop
das
push
sbb
and
add
xor
add
test
adc
dec
dec
dec
imul
mov
pop
mov
or
push
or
pop
insb
add
or
popl
shrb
lahf
mov
inc
xorl
mov
adc
mov
lds
and
inc
or
ss
je
pushf
cmpb
sbb
outsl
dec
and
mov
sub
in
daa
stc
cmpsl
xor
stc
stos
mov
stc
scas
push
mov
cmp
xchg
mov
fwait
push
mov
cmp
add
loop
pop
cmp
icebp
jg
mov
cmp
push
cmp
add
add
push
mov
adc
jp
mov
cmp
addl
inc
add
push
int
mov
inc
repnz
jnp
subb
add
mov
in
or
pop
popa
mov
lcall
lcall
push
mov
push
adc
fildl
dec
addr16
dec
push
insb
adc
movsb
rcrl
mov
jbe
xchg
jp
add
push
cmp
sub
inc
clc
lahf
push
sbb
add
dec
lret
or
outsb
pop
adc
pop
xchg
es
incb
sbb
test
andl
addl
test
loop
xlat
xor
mov
sbb
add
sahf
sbb
xchg
cld
cmp
sbb
stc
outsb
incl
mov
int3
gs
mov
ljmp
aam
or
xchg
add
stc
fadds
orl
test
fcmovnu
add
sarl
lahf
pop
mov
sbbl
out
gs
lock
cwtl
adc
daa
jle
cmp
imul
sbb
and
mov
mov
cmp
daa
addl
add
daa
xor
fildl
icebp
aas
or
popa
shll
push
and
subl
divb
roll
sarb
fisttps
inc
lds
test
idivb
aas
fs
cmp
popa
add
push
inc
pop
push
or
es
push
popf
adcl
inc
mov
mov
and
arpl
cmp
jg
sub
sbb
outsb
lcall
decb
popa
pop
nop
jns
mov
add
sahf
movsl
mov
and
sbb
es
adc
jbe
push
dec
adc
push
test
mov
inc
push
mov
call
add
inc
addr16
adcl
dec
insl
cmp
push
xchg
fldcw
jae
cmp
add
jle
test
js
push
jecxz
and
sbb
lcall
mov
cltd
loopne
jg
fimull
sub
sub
loopne
pusha
adc
add
loope
pusha
and
add
mov
adcb
or
addps
add
pop
mov
add
dec
mov
pop
push
leave
sbb
leave
test
iret
pusha
pop
sub
jecxz
pop
mov
pop
mov
rcll
pusha
pop
les
lock
mov
pop
sub
sbb
lods
push
ret
pop
sub
jmp
jecxz
test
sbb
arpl
jo
rcrl
jo
rcll
rcll
push
mov
cmp
dec
fstl
push
push
add
adcl
pop
js
add
push
shlb
adc
cmp
gs
xchg
ss
movsl
sub
test
push
mov
cmp
addr16
mov
push
in
inc
inc
cmp
mov
inc
sub
jge
inc
cmp
cmc
addb
daa
pop
push
imul
dec
sarl
jmp
mov
sbb
dec
jnp
aaa
ds
cmp
mov
push
push
mov
push
mov
mov
rorl
cmp
sbb
xor
sub
adc
jne
bound
sahf
cmpsb
xor
aas
sbb
add
lock
out
add
pop
inc
pop
pusha
stos
test
sub
icebp
xchg
xor
ja
sbb
or
ss
xor
ds
ss
xchg
add
cmc
aam
fbstp
lods
sbb
iret
xor
stc
jmp
jg
aad
test
das
insl
mov
sub
xlat
cmp
cmp
jno
arpl
ret
jge
aaa
adc
shrb
out
rcl
shrl
mov
pop
bound
push
movl
pop
jl
mov
pop
sub
pop
mov
dec
or
sbb
adc
mov
pop
mov
push
mov
and
mov
cmp
dec
mov
mov
pop
mov
pop
loop
mov
dec
push
jmp
mov
testl
pop
mov
sub
mov
add
or
scas
cmp
loope
mov
in
addb
pusha
mov
addb
stos
add
ds
test
xchg
mov
jnp
inc
mov
or
pop
or
add
push
push
mov
or
mov
in
addb
pop
mov
scas
subb
ret
mov
pop
mov
push
or
add
ds
push
jp
ret
stos
push
out
nop
add
nop
add
cmp
jle
adc
mov
pushf
mov
adc
jbe
rcll
mov
call
mov
mov
in
in
add
loop
fsubp
jecxz
or
out
out
out
and
push
popl
in
and
into
loop
jecxz
mov
sbb
roll
insl
sti
lahf
std
in
stc
enter
xorb
call
inc
add
jo
cs
es
test
jecxz
adc
add
push
data16
clc
out
call
mov
loopne
add
mov
call
xchg
pop
xorb
int3
jl
mov
call
jmp
je
add
add
rorb
inc
in
pop
add
rcl
xor
sti
call
or
add
loope
push
adc
stc
clc
in
loope
lods
or
add
fsub
add
push
mov
add
fsubrs
or
xlat
nop
mov
xchg
xchg
add
in
or
jg
test
imul
adc
add
rolb
pop
cmpl
shrb
add
or
in
movsb
mov
add
or
adc
in
nop
or
clc
xor
jne
fcomip
xchg
sub
leave
clc
std
loope
mov
dec
mov
clc
mov
nop
paddq
addb
mov
lock
andb
pusha
push
les
push
call
incl
lret
std
hlt
lock
sbb
cmp
aam
jmp
adc
mov
mov
push
adc
shrl
pop
adc
add
lret
adc
fcmovnbe
adc
push
iret
clc
jmp
jmp
adc
mov
mov
rolb
inc
mov
mov
push
into
jo
mov
loope
faddp
es
outsl
pop
jecxz
adc
or
in
call
xor
or
outsb
test
add
xchg
mov
shrb
stc
push
add
push
add
outsl
mov
pop
int3
xchg
mov
add
fs
in
mov
push
mov
stc
movsl
xchg
or
out
icebp
push
aas
mov
loope
mov
add
enter
je
sub
into
add
bound
ss
out
dec
push
out
pop
cmp
lds
or
add
call
pop
mov
dec
mov
add
mov
push
inc
mov
or
int3
sub
cmp
sub
int
in
lock
ret
movb
cmpsl
loope
xchg
xchg
nop
enter
xor
push
push
xor
pop
iret
mov
lods
fadds
in
mov
jo
jmp
mov
aaa
mov
add
cmp
scas
sahf
add
out
clc
fs
ds
push
data16
xor
roll
cmp
and
inc
in
add
ret
leave
mov
lock
sub
cwtl
sbb
dec
cmp
xor
dec
aas
addb
jle
add
add
int3
cmp
mov
mov
loop
fiadds
icebp
cmp
and
and
and
call
or
out
xchg
adc
mov
lds
xchg
jae
add
test
jle
mov
std
jg
jecxz
std
adc
loop
mov
mov
aaa
xor
leave
mov
leave
add
push
sub
fld1
inc
dec
addl
bound
push
insb
aas
std
pop
add
ret
sarb
leave
ret
loop
outsb
call
add
mov
lds
mov
fists
in
shlb
enter
adc
pop
sbbl
jg
mov
and
stc
inc
inc
iret
hlt
push
lds
rcll
push
push
sti
sub
or
pop
adc
fdivr
dec
push
push
lods
lcall
push
fadd
shll
inc
ljmp
loopne
stos
mov
pushf
mov
or
in
decl
mov
insb
das
pop
rolb
lcall
add
or
stos
dec
mov
js
test
loopne
dec
add
inc
push
les
xor
ret
cmp
paddw
xchg
inc
add
clc
rclb
fst
mov
fdivr
push
dec
ret
adc
dec
mov
or
or
ljmp
sbb
clc
fmuls
dec
mov
sti
add
call
ror
test
or
cmpsb
clc
dec
inc
inc
add
cli
call
jg
pop
inc
enter
mov
add
sti
inc
ret
testb
dec
push
loopne
adc
push
ret
cmc
mov
fdivp
out
xor
shll
or
pop
icebp
fildll
aas
xor
popa
and
cmp
popa
or
xlat
mov
call
cli
and
xchg
and
loope
fildl
add
sub
lret
loop
incl
enter
loop
or
dec
int
ljmp
push
sbb
sub
fnsave
loopne
add
dec
loopne
add
and
rcll
or
sub
test
pop
imul
and
jp
stos
ljmp
xor
loopne
loopne
mov
gs
and
pop
jp
lods
dec
adcl
in
sbb
cli
scas
fidivl
dec
call
mov
xor
xorb
add
or
std
ljmp
xchg
sbb
or
insb
add
test
loope
int3
and
and
add
dec
sub
jo
insb
adc
push
pop
out
lcall
add
scas
push
push
shll
enter
push
mov
dec
enter
add
push
rolb
insb
loopne
mov
out
jno
flds
call
and
loopne
test
xchg
jle
ljmp
std
pop
add
and
incb
es
pop
stos
jg
inc
ds
enter
mov
filds
jg
and
pusha
push
mov
add
sbb
jmp
or
add
mov
bound
icebp
sub
sub
cmp
cld
adc
xor
clc
mov
jbe
jmp
inc
push
not
test
movsb
pop
mov
xchg
loopne
enter
push
cld
jg
cli
les
jmp
loope
testb
shrl
mov
mov
ljmp
xchg
test
adc
inc
add
mov
shlb
add
push
frstor
mov
rclb
cmpsl
sbb
sbb
and
adc
or
testb
test
scas
mov
into
pusha
or
leave
sub
roll
cli
dec
rclb
call
and
or
add
adc
enter
push
xor
push
in
out
and
xchg
mov
push
pop
and
jecxz
or
pop
sub
sub
aaa
xor
xchg
sbb
loop
mov
jg
push
xor
movsl
push
add
in
add
je
mov
sbb
clc
mov
testb
add
pop
daa
icebp
or
loopne
pushl
add
repz
shr
sub
adc
jae
loopne
fbld
or
dec
add
add
mov
adc
sbb
or
call
into
add
xor
lock
xorb
add
cmp
jmp
shll
mov
add
call
in
rclb
dec
xchg
pop
lock
jmp
add
pop
pop
push
add
push
push
add
push
push
adc
hlt
mov
fimuls
rolb
lock
pusha
sub
into
ds
jle
outsl
cli
pop
sbb
bswap
mov
andl
loope
add
dec
and
jo
clc
push
nop
cwtl
lock
mov
add
adc
orb
adc
jbe
les
cmp
leave
sar
dec
add
sub
and
mov
loope
mov
jmp
fdivl
add
arpl
jbe
cli
in
dec
adc
cld
push
mov
push
out
push
inc
mov
xchg
add
sub
inc
into
lahf
icebp
outsl
js
or
jecxz
popa
repnz
cmp
cld
stos
incb
sub
out
out
dec
mov
push
std
clc
std
orl
mov
mov
mov
xchg
push
ss
mov
inc
push
sti
mov
dec
add
jecxz
stc
sub
rcrb
arpl
push
pop
data16
inc
xor
mov
xor
sub
data16
xor
fists
leave
add
das
adc
call
mov
std
or
outsb
std
and
sbb
ja
push
adc
clc
pop
push
add
out
push
cld
pop
add
add
dec
icebp
or
mov
push
mov
sti
jg
adc
sub
mov
loopne
or
std
push
add
fiadds
pop
jbe
jecxz
mul
or
fistpl
shlb
adc
in
out
out
add
xor
add
push
jno
test
lcall
cs
sbb
out
clc
adcl
scas
sbb
popa
pop
add
push
or
and
xchg
inc
and
add
push
pop
sti
inc
mov
stc
neg
out
aas
ljmp
mov
adc
lahf
mov
repnz
mov
lock
xor
stc
les
jmp
mov
adc
in
in
das
xor
cwtl
ret
jecxz
clc
loopne
add
mov
pop
loope
or
jmp
inc
dec
dec
cmp
mov
add
mov
loopne
into
xchg
cwtl
daa
popa
add
rol
mov
pusha
xor
mov
sub
mov
in
mov
add
xor
cmp
xchg
push
adc
mov
mov
lock
sbb
loop
xchg
lock
sti
outsb
incl
pushf
ljmp
int3
jmp
js
movb
ret
lcall
out
mov
add
mov
add
sbb
or
push
hlt
into
shl
hlt
jb
add
cmp
les
jae
lock
push
ret
inc
xor
or
mov
stc
pusha
loopne
sti
mov
and
sub
hlt
and
cmp
add
in
loopne
in
ljmp
add
test
add
adc
out
cld
clc
xlat
push
insl
mov
push
push
inc
mov
out
ds
fdivrp
jg
jnp
inc
add
cmp
leave
fcmovne
ffree
jne
mov
add
dec
and
loop
cmp
sbb
or
add
fcmove
test
add
mov
mov
push
js
add
hlt
mov
push
ss
lcall
jmp
or
test
inc
test
sbb
adc
stos
add
in
pusha
loopne
leave
add
les
pop
nop
outsb
fsubrs
std
mov
inc
mov
icebp
sti
jecxz
std
mov
stc
jmp
loop
sbb
scas
add
dec
out
fcom
pop
cmc
mov
call
pop
adc
repnz
or
std
inc
data16
and
add
mov
push
insl
add
inc
cwtl
adc
mov
sbb
cmc
sbb
bound
inc
xor
rolb
mov
adc
add
out
xchg
mov
cmpl
into
cld
or
testb
shr
or
inc
sarb
ret
cmp
data16
fucomi
pusha
mov
cmp
xchg
push
subl
out
inc
arpl
pop
pop
push
lret
lret
loop
jb
mov
and
rclb
subb
pusha
loop
ljmp
cmpl
dec
and
xor
jo
inc
sub
mov
mov
adc
push
push
incl
mov
adcb
adcb
addl
add
ret
lret
mov
pop
stos
or
sbb
or
mov
hlt
sbbl
sub
add
jo
popf
add
aam
and
imul
test
orb
add
dec
pop
mov
or
fsubs
ret
pop
mov
ljmp
or
hlt
mov
add
adc
jl
xchg
mov
mov
add
lds
mov
inc
or
mov
cmp
scas
js
out
dec
cwtl
sub
or
pop
pop
lea
loope
in
fists
jne
loopne
inc
incl
and
sti
rolb
sub
sbbb
sbb
adc
jmp
call
inc
push
fnsetpm(287
call
cli
mov
xor
adcb
inc
and
iret
sbbb
nop
pop
sbb
les
lods
pop
int3
mov
rorl
jecxz
pop
cmpsl
inc
add
ret
ss
aad
push
pusha
inc
add
loopne
cs
mov
int3
das
test
mov
mov
inc
icebp
outsl
jl
enter
into
adc
cmp
xor
push
cmpsl
pop
lcall
or
xchg
les
fiadds
lcall
stos
jmp
shlb
or
jp
dec
fmuls
jecxz
std
dec
movsb
es
lcall
or
push
clc
sbb
into
or
jbe
add
lock
or
jbe
cwtl
jmp
orb
pop
adc
jnp
aam
or
hlt
mov
pusha
sub
mov
imul
add
inc
sbb
sbb
add
loope
or
add
jl
fmull
pop
nop
stos
fwait
and
sub
aas
or
jmp
xor
fstp
test
aam
stc
std
fsubr
das
inc
loope
call
cld
test
rolb
repnz
ss
cmp
fdivrp
mov
ljmp
out
fbld
aaa
enter
sub
and
loop
mov
in
scas
call
pop
fbld
and
call
push
sub
and
inc
xor
or
add
jmp
loope
jle
adc
or
cmp
loopne
inc
mov
fldt
subl
mov
jo
das
pusha
loopne
shrb
sub
dec
decl
into
pusha
lock
and
push
push
pop
cmpsb
add
roll
in
pop
daa
add
pop
loop
lcall
incl
or
mov
jmp
into
cmpb
ljmp
inc
xor
loopne
stos
push
push
fiadds
and
scas
sub
sub
ljmp
scas
xor
cli
enter
test
test
popa
mov
jecxz
roll
dec
std
in
inc
clc
jmp
ss
pop
jne
mov
movsl
add
push
add
insl
mov
adc
mov
cs
pusha
insb
dec
jmp
test
add
mov
cli
jp
sub
arpl
mov
pop
movsb
scas
push
and
out
and
mov
jg
jg
fs
imul
sar
clc
or
sub
or
mov
cli
pusha
fwait
mov
out
incb
loop
inc
loopne
cmpsb
clc
arpl
sti
out
and
clc
push
add
jg
scas
pusha
stos
out
clc
lock
das
xchg
sub
cli
rorb
fistpll
and
ret
add
loope
push
pusha
pop
xchg
and
inc
jmp
test
pop
in
fs
pusha
sub
decl
mov
jecxz
or
add
add
add
imul
adc
xor
pop
addb
mov
xchg
ljmp
mov
push
jb
inc
add
mov
out
pop
add
sub
mov
call
and
test
inc
in
jb
mov
jecxz
mov
fisttpll
inc
inc
icebp
test
inc
fwait
or
pop
in
lods
xor
mov
add
mov
inc
xchg
dec
pop
das
mov
incl
ret
int
jge
cmp
cmpsb
nop
dec
adc
int
incl
inc
sbb
push
data16
int
sbb
into
push
mov
lcall
xor
leave
pusha
or
add
add
inc
mov
mov
push
les
dec
add
fs
mov
xor
das
mov
stos
mov
lea
insl
icebp
iret
xor
push
je
jbe
cli
jmp
daa
add
into
sub
sti
outsb
inc
jg
movsb
mov
movsl
popf
mulb
jne
popf
jecxz
mov
jb
data16
jp
insb
negl
inc
enter
mov
sub
sub
lret
sub
cmp
sti
inc
iret
add
push
add
mov
xor
shrb
shlb
fwait
js
adc
xlat
mov
jge
lods
dec
fldcw
add
mov
icebp
pop
jo
xlat
push
test
add
push
ljmp
clc
jle
xor
inc
rorb
sbb
incl
mov
rcll
cli
loope
in
incl
add
cld
mov
xchg
std
clc
jne
xlat
add
mov
ret
jecxz
aaa
mov
mov
pop
mov
aad
cmp
loop
mov
lret
and
sub
int
cmp
add
mov
mov
aaa
cld
adc
imull
sbb
push
dec
jo
inc
mov
or
mov
rorb
adc
mov
dec
fidivrs
pop
xorb
pop
and
mov
and
cmp
inc
sbb
xor
aaa
mov
in
push
divl
repz
icebp
pop
dec
loope
or
shlb
bound
or
fbld
sub
stos
addr16
loop
fistpll
mov
and
push
icebp
lret
pop
push
fdivs
inc
scas
fsqrt
push
mov
and
xchg
testl
adc
inc
mov
lods
xchg
pop
mov
lret
nop
lock
jo
mov
add
outsb
or
or
sub
mov
enter
adc
mov
add
mov
cld
xchg
pop
scas
adc
mov
inc
xor
push
sub
pushl
mov
sub
fists
leave
aam
popf
mov
mov
mov
inc
out
add
mov
dec
add
lock
dec
xchg
adc
push
xlat
ficompl
xor
add
je
cmp
adc
mov
pushf
imul
pop
inc
mov
sub
icebp
adc
mov
and
add
add
shrl
divb
aas
sbb
sub
add
or
jae
push
sbb
mov
pop
pop
add
jb
add
xor
mov
jg
push
lods
sti
add
scas
sti
add
push
xchg
push
inc
scas
scas
mov
data16
mov
sub
jp
pop
add
insb
lcall
sub
xor
push
test
sti
lcall
xchg
sub
shrb
cltd
insl
int
jp
or
and
outsl
mov
xor
xchg
hlt
int
imul
testl
imul
xor
cld
add
sti
push
out
push
dec
fucomi
es
in
or
sarb
push
lahf
int3
int
ds
push
stos
stc
movsl
jmp
stos
stos
fstps
xor
mov
adc
int
cmp
das
out
sub
arpl
enter
stos
pop
sbb
or
sbb
sbb
icebp
sbb
test
mov
mov
sub
enter
cmp
jg
mov
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
adc
cmp
inc
mov
mov
mov
mov
mov
mov
mov
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
add
sub
cld
imul
mov
mov
mov
xorl
lock
mov
mov
mov
mov
ljmp
mov
mov
mov
mov
mov
test
decl
inc
mov
mov
mov
mov
mov
mov
mov
ret
jo
idivl
aas
lret
cmc
fnstenv
mov
mov
mov
pop
clc
pushl
adc
cmp
ret
mov
mov
mov
mov
mov
mov
mov
leave
mov
mov
add
shll
mov
insb
xchg
loope
clc
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
xlat
mov
shll
or
out
push
xorl
cmp
lret
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
gs
shll
mov
mov
test
lahf
pop
push
ss
imul
popa
mov
mov
mov
mov
mov
mov
ds
mov
mov
sub
cltd
gs
addr16
fdivs
cld
popf
mov
adc
xor
pusha
cmpsl
sub
push
mov
popa
mov
iret
mov
aam
jno
stos
add
jmp
mov
mov
mov
aad
in
mov
or
sbb
mov
and
dec
mov
push
mov
loope
or
jns
jno
mov
fstpl
mov
fisubl
int
lds
push
or
mov
sub
dec
jne
xchg
mov
mov
mov
lds
or
mov
mov
sub
iret
xchg
aas
ja
mov
mov
jp
mov
mov
mov
mov
mov
mov
ret
pop
push
push
and
xchg
pop
push
push
xor
mov
mov
incl
mov
mov
mov
pop
mov
mov
mov
mov
mov
push
ss
jns
jg
ja
mov
ret
mov
add
push
pushf
gs
mov
mov
insl
imul
push
mov
xor
mov
mov
int
mov
ss
arpl
int
mov
pop
mov
arpl
pushl
popf
mov
mov
mov
jmp
test
mov
pop
push
ljmp
push
ud1
mov
popa
mov
lock
ljmp
mov
test
mov
fbstp
out
mov
loop
hlt
mov
mov
mov
mov
mov
mov
dec
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
dec
inc
ljmp
les
sub
or
shll
les
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
lcall
out
mov
mov
mov
mov
mov
mov
lahf
inc
decl
and
or
mov
fiadds
cmp
cvtps2pd
test
mov
pushl
inc
jg
nop
mov
or
daa
mov
jg
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
std
call
mov
jp
mov
mov
mov
mov
mov
mov
push
jge
daa
std
adc
cld
mov
mov
mov
cmp
hlt
lcall
mov
jae
mov
mov
clc
mov
dec
mov
mov
pop
mov
lret
mov
aaa
mov
nop
mov
les
mov
ss
repz
mov
mov
mov
mov
sub
mov
ds
mov
sbb
pop
je
sub
mov
mov
mov
sub
cmpsb
clc
mov
mov
mov
mov
cli
mov
jg
lea
jg
decb
jp
xchg
mov
push
mov
daa
mov
fidivrl
fnstcw
jmp
and
mov
mov
call
push
ds
mov
jp
push
test
ljmp
enter
sti
mov
sbb
ds
dec
mov
jb
decb
lcall
ret
mov
mov
sahf
jg
stos
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rclb
xchg
xor
arpl
mov
mov
mov
mov
lret
add
xchg
rolb
push
hlt
pushl
pusha
mov
mov
mov
out
fsubrp
mov
mov
jle
add
rolb
out
mov
jo
sbb
ds
aas
sub
mov
mov
mov
sub
mov
mov
mov
ja
stc
mov
mov
sub
filds
outsb
in
mov
mov
mov
mov
mov
mov
mov
mov
jae
push
mov
mov
mov
mov
mov
or
xchg
mov
stos
aam
jg
xchg
clc
sbb
sarb
cli
cmpsb
ret
mov
mov
mov
ljmp
dec
sub
cmp
mov
lea
cmp
fwait
mov
mov
mov
fcmove
cwtl
into
pushl
lcall
and
stc
mov
and
jg
sahf
mov
aas
mov
mov
jg
jnp
ja
jae
mov
cmpl
fwait
mov
scas
mov
mov
mov
mov
iret
mov
lret
push
ret
mov
xlat
mov
out
jecxz
mov
sti
mov
movswl
mov
sbb
lock
and
aaa
mov
in
jmp
decl
inc
mov
pop
mov
outsl
mov
jg
mov
push
lea
repnz
mov
sub
mov
ds
mov
mov
sub
pushf
mov
decl
ljmp
cmp
insb
mov
mov
mov
mov
adc
pop
pushl
repz
inc
out
mov
mov
mov
pop
in
hlt
repnz
mov
lock
sub
push
mov
pop
mov
sarb
push
jp
mov
sarb
mov
fwait
mov
lods
add
pop
xchg
mov
jle
stos
mov
mov
jle
mov
mov
push
mov
or
cli
push
ja
test
cmpsl
mov
nop
mov
mov
mov
jle
mov
repnz
out
adc
test
mov
sarl
incl
lods
mov
mov
mov
fwait
xchg
in
mov
sbb
dec
mov
cld
decl
mov
mov
stos
cs
pop
clc
lret
mov
mov
and
push
sbb
add
inc
scas
mov
movb
aas
jge
mov
mov
sbb
mov
mov
mov
mov
repnz
sbb
mov
out
cs
cmpl
mov
insb
jno
xchg
inc
ljmp
push
push
addl
int3
mov
push
test
mov
jg
and
push
push
aad
test
fstp
dec
mov
call
mov
push
mov
ret
mov
push
loop
mov
mov
mov
mov
mov
mov
mov
mov
jb
mov
insb
sahf
outsb
shlb
ss
loope
inc
pop
outsb
or
and
inc
mov
scas
mov
mov
fistpll
cmp
dec
mov
mov
sbb
add
inc
mov
mov
mov
mov
mov
jmp
dec
mov
in
cmovle
mov
mov
mov
inc
fmull
pop
ljmp
clc
push
mov
pop
popf
fiadds
mov
push
fcompl
repnz
mov
inc
add
fs
sub
das
mov
fdivrl
mov
ficoms
je
stos
mov
mov
jmp
push
mov
scas
mov
fidivrs
cs
test
repnz
je
mov
mov
cmpsb
cmpsb
mov
pop
clc
pushl
mov
mov
mov
mov
lret
add
xor
mov
mov
xchg
xor
pop
sub
mov
dec
xchg
out
mov
jp
add
mov
mov
idivl
mov
mov
icebp
sbb
gs
mov
fmull
mov
xlat
mov
pop
clc
daa
mov
jge
scas
mov
or
decl
loop
mov
mov
xchg
mov
pop
popf
push
cmpsl
mov
mov
inc
les
incl
cld
pop
mov
inc
mov
mov
mov
mov
mov
mov
jo
add
mov
ficompl
divl
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
sahf
push
mov
lahf
mov
mov
sub
mov
jmp
mov
mov
sahf
xor
aas
bound
pop
jb
mov
mov
rclb
mov
push
mov
mov
cmp
mov
mov
inc
mov
pop
mov
popf
push
mov
sub
scas
ret
outsl
mov
xchg
mov
mov
mov
inc
xor
hlt
outsb
inc
mov
mov
repnz
int
ljmp
mov
mov
mov
mov
mov
mov
int
ljmp
add
ret
cli
cmp
mov
pop
idivb
jp
les
add
mov
cmp
mov
mov
mov
mov
sub
outsb
xor
aad
cwtl
std
jno
inc
xchg
dec
mov
sub
aas
mov
sub
mov
push
mov
scas
push
mov
xchg
mov
mov
mov
fimull
inc
fbstp
mov
mov
mov
mov
mov
jg
out
add
jae
mov
mov
mov
mov
mov
mov
mov
mov
cmp
fsubrp
lds
mov
scas
aaa
mov
js
or
pop
mov
mov
mov
mov
push
xchg
xchg
mov
mov
mov
test
push
sbb
inc
into
pop
mov
loope
adc
data16
pushl
fdivl
cmp
sub
lcall
je
mov
out
dec
mov
out
or
repz
out
mov
push
ss
mov
xor
ja
nop
mov
cs
mov
outsl
push
andl
push
mov
mov
mov
mov
mov
incl
jb
sub
mov
mov
insb
inc
subl
jno
shll
inc
ficomps
cld
xchg
mov
lods
xchg
aad
clc
out
mov
sahf
into
mov
scas
cli
cmp
jp
push
ds
xchg
mov
in
cmp
mov
pusha
xchg
mov
inc
loope
mov
pusha
mov
and
aas
clc
add
mov
mov
push
mov
fidivl
ja
insl
add
mov
dec
mov
sub
mov
out
jg
mov
ljmp
mov
lahf
mov
sbb
jb
mov
mov
mov
mov
adc
add
push
xor
push
xchg
ja
lahf
cld
call
jle
mov
sbb
pop
clc
aaa
cmpb
mov
jecxz
scas
mov
cmp
repz
mov
stos
aam
lea
jg
aaa
inc
mov
mov
mov
mov
mov
mov
bnd
mov
jb
shlb
and
jb
lods
or
ret
push
add
les
lcall
and
scas
mov
lcall
mov
ja
sbb
or
clc
mov
outsb
cld
mov
dec
cmp
mov
pop
cld
pop
push
mov
shll
jle
adc
xor
fidivrl
mov
mov
add
clc
adc
fbstp
aaa
mov
sub
push
bound
sarb
mov
adc
cmpsb
testb
push
push
es
aaa
mov
xchg
mov
out
sbb
jle
mov
mov
add
mov
nop
mov
pushf
int
loop
or
es
jl
jle
jno
mov
xor
lock
mov
out
mov
jp
add
adc
test
mov
mov
popa
shll
lcall
add
movsb
add
jno
jmp
mov
jb
mov
incb
cmp
rcr
mov
jecxz
and
adc
mov
mov
mov
pop
mov
add
scas
sub
add
lfs
sbb
sub
adc
pop
sub
inc
mov
mov
sbb
fbstp
push
stos
inc
cmp
adc
jbe
adc
pop
or
jne
mov
pop
lea
cmp
mov
add
mov
inc
adc
notb
cld
mov
mov
mov
adc
jl
mov
movsb
push
punpckhdq
js
mov
js
jne
stos
push
adc
movsb
dec
add
je
add
mov
or
sbb
cmp
and
adc
div
add
dec
mov
pop
icebp
jne
pop
jbe
mov
repnz
test
xor
inc
mov
mov
mov
push
cld
in
or
sub
dec
pop
mov
mov
fistpll
xchg
adc
dec
sar
or
add
cs
xor
jge
or
add
pop
jno
sarb
mov
jmp
cli
into
mov
sti
push
mov
xchg
stos
mov
hlt
out
mov
mov
add
jg
mov
mov
rorb
lods
loopne
cmp
add
or
or
push
mov
lret
out
xchg
shlb
nop
cmovle
adc
or
add
or
mov
mov
and
xor
mov
mov
or
mov
push
add
inc
es
pop
mov
mov
clc
and
pop
cmp
sub
mov
fildl
outsl
mov
xchg
mov
ja
add
mov
adc
fistpl
lcall
mov
xor
push
jmp
mov
add
or
adc
andb
mov
pop
mov
adc
add
cmpl
enter
rorb
adc
jge
push
cltd
mov
mov
mov
mov
fdivl
push
mov
cmp
outsl
lods
add
mov
mov
dec
add
mov
clc
scas
inc
xor
add
xchg
xlat
pop
push
mov
shlb
jmp
ja
xchg
add
mov
mov
mov
adc
mov
mov
mov
push
xchg
add
mov
jns
or
testb
fldt
mov
pop
mov
mov
mov
adc
ljmp
mov
das
inc
mov
mov
xorl
lea
mov
stos
jg
jb
inc
popf
cmp
orb
out
mov
sbbb
xchg
mov
mov
dec
in
cmp
cmpsb
movsb
mov
add
sbb
adc
sarb
and
cmp
mov
fistpll
mov
mov
lods
stc
inc
loopne
adc
and
decl
test
add
mov
inc
mov
mov
mov
outsb
fdiv
arpl
jg
aam
mov
sahf
sub
mov
lcall
add
fidivs
mov
loopne
xor
inc
push
mov
in
push
mov
push
xchg
and
and
lods
mov
pusha
aaa
cmpsl
lret
mov
mov
subl
push
jb
mov
int3
sub
mov
icebp
or
and
rcrb
out
cld
mov
fidivrl
pop
mov
add
cs
mov
add
dec
mov
imul
mov
push
push
fisubs
mov
jo
inc
mov
adc
scas
fwait
mov
mov
es
mov
mov
adc
scas
and
mov
sarl
mov
push
out
std
mov
or
push
sbb
mov
sub
mov
add
mov
inc
mov
push
mov
out
adc
pusha
mov
mov
xchg
in
out
shlb
mov
test
mov
mov
mov
mov
loopne
incl
call
loop
sub
mov
mov
pop
mov
pusha
dec
sub
mov
mov
ss
adc
inc
mov
mov
dec
outsl
mov
sub
js
jae
dec
add
aaa
jg
mov
mov
mov
adc
mov
mov
mov
pop
mov
inc
mov
mov
pop
mov
jecxz
mov
loop
mov
mov
mov
adc
sahf
inc
mov
hlt
xorl
mov
pusha
andb
add
out
data16
mov
xor
dec
add
cmp
out
outsb
pusha
inc
xchg
mov
dec
mov
aam
dec
fwait
aad
and
sub
repnz
mov
or
mov
mov
call
mov
int
inc
fwait
outsb
fbld
ljmp
pop
mov
or
pushl
mov
mov
or
lea
stos
inc
add
fbld
mov
mov
mov
loope
lds
mov
shrl
js
loope
int
cmp
paddusw
inc
mov
fnstsw
sub
mov
mov
mov
pop
clc
mov
adc
pusha
das
js
sbb
push
les
adc
cmpsl
pop
add
and
mov
sbb
sub
xor
and
add
icebp
mov
mov
mov
mov
mov
mov
ret
mov
mov
mov
fimull
push
adc
add
mov
mov
sahf
mov
shlb
pop
inc
cmp
mov
popaw
push
decl
fisttpll
mov
scas
mov
mov
in
clc
mov
mov
outsb
push
in
mov
mov
ss
cld
dec
push
push
cwtl
mov
mov
rorl
sbb
dec
aam
lock
sbbb
push
mov
mov
loop
bound
jnp
mov
ds
mov
mov
mov
loop
add
pusha
or
mov
sub
xor
std
adc
mov
mov
std
jl
dec
pop
or
sbb
inc
mov
fwait
pop
add
pop
mov
mov
cmpsb
mov
mov
push
add
add
insl
fcmove
lock
sub
mov
adc
mov
mov
adc
sbb
mov
xor
inc
adc
cmp
push
enter
pusha
and
jge
stos
add
mov
test
sbb
xchg
lock
mov
mov
loopne
loopne,pn
push
int
mov
mov
mov
fnstenv
add
push
std
dec
ja
mov
push
pusha
or
or
mov
lock
add
pop
push
add
add
add
insl
inc
call
pop
mov
pop
mov
mov
xor
cli
mov
add
xor
and
mov
mov
in
sbb
adc
adc
sub
mov
cmp
mov
mov
mov
inc
mov
mov
lock
push
and
jg
rolb
jge
jns
push
jno
add
pusha
and
mov
jp
mov
or
orb
jo
add
out
aam
mov
mov
shl
and
dec
andb
adc
aad
dec
arpl
cli
add
mov
pushf
sub
sbb
in
clc
jp
or
or
mov
mov
test
add
mov
shlb
lock
stos
jo
add
adc
sub
and
xor
add
pop
pop
push
imul
mov
mov
sahf
mov
mov
mov
jbe
sub
pop
icebp
cli
nop
sbb
repnz
mov
xor
cmc
mov
mov
sbbb
sub
insb
dec
mov
push
dec
and
xor
cmp
test
nop
jbe
mov
and
push
adc
xchg
repz
std
leave
mov
movsb
or
sbb
dec
fwait
push
sbb
mov
cltd
into
add
mov
add
push
jge
mov
mov
mov
cmpb
mov
leave
mov
clc
divb
je
mov
cmp
dec
mov
fcmovnu
xchg
int3
hlt
mov
mov
mov
test
or
sub
mov
adc
pop
jge
jae
fidivrl
pop
test
xchg
mov
mov
mov
lock
or
mov
sbb
fnstcw
mov
loope
pop
stc
ja
or
add
rorb
nop
add
or
and
add
pushl
inc
push
mov
xor
ret
xchg
mov
pop
sahf
add
icebp
stos
jmp
jo
or
out
sub
nop
cmp
pop
jg
and
pop
mov
clc
call
incb
imul
add
cmc
decl
add
mov
pushf
clc
test
pop
mov
lock
daa
repnz
fcmove
ljmp
sar
lret
popl
cmpsb
push
jmp
xchg
lcall
roll
mov
or
cs
xor
and
pop
mov
insl
xchg
bound
add
std
call
cltd
mov
add
mov
dec
inc
das
movsb
icebp
jnp
sub
and
imulb
inc
xchg
bound
add
int3
pop
push
out
add
sar
loopne
fs
push
shrl
mov
mov
ret
cld
ljmp
ljmp
fdivrp
mov
sar
add
cmp
shlb
jne
test
loopne
mov
push
and
gs
add
out
xchg
add
adc
push
sar
scas
push
cmp
sub
xor
dec
lret
and
ficompl
cmc
lret
push
inc
lret
xchg
add
jg
inc
pusha
jg
jnp
iret
negb
daa
pop
pop
sub
lds
out
fildll
xchg
pop
push
sub
nop
sbb
jno
jmp
xor
iret
subl
ja
lcall
cld
sub
cmp
mov
dec
cmp
nop
ret
cmp
push
cmpb
test
lahf
jb
pop
mov
ja
incl
pop
jno
push
mov
mov
das
stc
dec
lock
cmp
andb
subb
adc
sbb
inc
cs
sbb
loop
icebp
in
call
xchg
add
pushf
cld
movsb
adc
dec
push
popf
es
leave
sbb
push
push
fst
ja
mov
jne
or
jno
mov
cld
jg
xchg
pop
outsl
int3
jp
lds
and
cs
sub
cmp
push
mov
icebp
lahf
add
push
push
adc
jo
add
jge
xchg
sbb
inc
test
lahf
stos
add
xchg
repz
out
ljmp
mov
mov
push
push
xchg
lcall
jmp
mov
nop
mov
mov
aad
inc
push
push
sub
xchg
xchg
cmp
shrl
call
sbb
and
jg
jns
subl
les
pop
sbb
lcall
stc
hlt
push
sub
push
mov
xchg
fstpt
dec
popf
test
sbb
ror
mov
lcall
mov
xchg
and
cmp
xor
mov
insb
pop
inc
rcl
imul
lcall
jl
or
cmp
test
cs
add
stc
sub
mov
push
pop
call
std
decl
jnp
mov
test
lock
add
inc
dec
popa
push
adc
inc
pushl
pusha
mov
sub
lods
cs
adc
repz
inc
jae
inc
cmovp
incl
jbe
pop
xor
sbbb
insb
jg
out
testb
fists
ljmp
cld
outsb
out
repnz
cmc
xchg
ret
aad
stc
push
and
xor
sbb
pop
push
call
push
repz
cmp
clc
inc
icebp
call
xchg
jb
inc
or
sub
fdivrp
jecxz
cmp
daa
test
clc
xchg
xchg
sbb
jl
inc
xchg
push
pop
jecxz
inc
shr
mov
outsl
testl
inc
mov
mov
jno
add
mov
adc
repnz
aaa
jp
adc
sub
notl
in
daa
sub
or
add
decl
popa
sahf
imul
inc
add
inc
in
loop
cmp
call
leave
aam
mov
sti
xor
adc
pop
mov
in
lock
lcall
pop
insb
jo
mov
pop
lret
ja
bound
pop
jg
cmc
out
mov
int3
xor
outsb
sub
push
push
test
in
mov
mov
push
or
filds
stc
mov
inc
rcrb
cmp
ret
cld
in
imul
fstl
ljmp
xchg
jno
or
iret
jbe
adc
mov
mov
adc
idiv
push
test
and
adc
aam
ficoms
aaa
shrb
jge
pop
loope
call
scas
or
sarl
add
imul
fcomps
push
jle
fstps
cmp
cmp
add
arpl
pop
pusha
inc
sahf
adc
mov
cmpsl
sbb
outsl
xchg
xlat
sbbl
inc
stos
call
std
push
outsb
imul
jo
add
std
outsb
inc
arpl
insb
xlat
jg
ljmp
inc
cmpsl
data16
mov
xor
cmp
imul
ljmp
test
xchg
jnp
xchg
loop
icebp
jg
xor
xchg
cld
ljmp
sbb
and
repnz
xchg
or
bound
sbb
icebp
dec
jp
outsl
or
in
das
daa
stos
lcall
call
inc
mov
and
dec
js
cmp
fcmovb
mov
mov
jmp
jp
icebp
jo
and
xchg
mov
push
dec
mov
push
mov
xchg
test
inc
or
out
cli
pop
icebp
pop
jo
icebp
or
jns
mov
mov
cmp
out
push
pop
add
push
mov
popa
pop
ret
jle
lock
cltd
sti
inc
adc
js
outsb
addr16
decl
mov
shrb
rcpps
xor
cs
push
jmp
fxch
pop
mov
jecxz
out
call
sbb
fists
faddp
hlt
int3
sub
mov
ljmp
cli
jmp
rcrb
mov
cwtl
mov
pop
mov
xchg
xchg
add
lcall
insb
and
nop
xor
sub
push
andb
xor
sar
das
clc
lret
int
jg
lret
shr
add
test
adc
xor
arpl
pusha
push
add
mov
adc
push
xchg
sahf
adcb
cmpb
decl
mov
mov
pop
sar
stc
jecxz
ds
out
movsl
sub
mov
fldz
imul
loop
fcoml
dec
jo
cmp
dec
dec
repz
hlt
movsb
push
decb
pushl
jg
adc
stos
fucomip
mov
rorb
cmpl
imul
pop
pushl
outsl
push
push
sub
fs
pushf
movb
push
xchg
adcl
jg
cmc
data16
pop
cmpsl
xor
lods
sar
es
lret
data16
enter
jle
jg
ror
xchg
dec
nop
xchg
iret
push
aad
cmp
and
in
imul
std
cmp
mov
adc
mov
sbb
in
cltd
in
repz
fmuls
mov
in
pop
sub
xor
cmp
mov
sqrtps
push
clc
sub
jmp
or
movsl
scas
push
cmp
call
mov
incl
sbb
rcrb
nop
repnz
mov
jb
loope
fnstsw
pop
sbb
cs
mov
jmp
insb
jns
aad
cmp
adc
pushf
pop
cmp
bound
out
or
fs
div
jg
out
xchg
and
ja
xchg
xor
dec
mov
dec
test
es
xchg
xlat
addr16
and
imul
fdivp
xchg
mov
scas
xchg
lock
dec
out
xchg
test
call
add
in
adc
scas
jnp
insl
sbb
hlt
lcall
cli
stos
test
pop
push
xchg
xor
xchg
jp
scas
xor
adc
and
lcall
jns
cmp
jge
and
xor
iret
push
xor
xor
cmp
cmp
ss
divl
out
and
mov
flds
out
xchg
add
mov
lret
jmp
jb
xchg
std
inc
fsubs
stos
fimull
test
cmp
movsl
outsb
push
popa
sub
xchg
cmp
decl
sub
insl
in
cwtl
cltd
leave
insl
test
sbb
cmc
cwtl
ljmp
pop
call
mov
push
dec
jne
push
mov
mov
sbb
jmp
scas
pop
loopne
push
xchg
dec
lcall
lods
divb
jg
pop
or
ss
pusha
pusha
xor
pop
ja
jne
and
pop
daa
lcall
push
test
sub
gs
mov
shlb
xchg
xchg
mov
ljmp
aas
lds
mov
inc
mov
cmp
inc
add
xrelease
daa
sbb
cs
sbb
scas
mov
sub
or
decl
test
push
inc
lahf
das
xor
je
inc
int3
cmc
ret
stc
dec
or
dec
aas
jnp
mov
ljmp
pop
nop
mov
jmp
nop
test
out
mov
iret
and
ds
incl
cld
jecxz
loope
loopne
les
aam
inc
fldcw
inc
stos
aam
lcall
call
das
inc
lret
not
out
mov
mov
popf
xlat
lea
mov
pop
lea
mov
adc
mov
push
jne
sub
jns
rorl
outsl
maxss
inc
shll
aam
scas
cli
incl
jg
bound
lds
fs
mov
cli
xchg
insb
or
mov
call
nop
aaa
mov
das
ss
sti
inc
call
mov
sbb
incl
shrl
ds
outsl
jl
mov
addr16
adc
fisubrs
mov
pop
cmpsl
aas
pop
or
movsb
mov
push
repz
mov
sbb
mov
stc
out
or
xor
popa
and
sub
sub
lds
mov
cmp
sti
mov
mov
gs
add
inc
or
fisttpll
jg
xchg
fadds
sahf
aaa
pop
mov
fs
mov
rorb
add
mov
adc
jg
out
cmc
push
push
lock
les
sub
mov
xor
shll
or
pop
jecxz
sti
adc
mov
push
call
loopne
cmp
shrl
mov
dec
push
iret
push
popf
ja
sti
inc
std
stc
mov
subb
imul
push
and
push
dec
sub
lcall
or
jle
insb
inc
sbbl
loopne
iret
clc
pusha
mov
repnz
call
in
std
clc
or
lret
jecxz
call
dec
sahf
popf
bound
mov
mov
loopne
cwtl
call
or
mov
xor
sahf
popa
xchg
fwait
gs
inc
div
arpl
loope
adc
push
jmp
sahf
cmp
pop
ss
sahf
ss
mov
xchg
inc
pop
adc
out
clc
incl
xor
sub
pop
mov
jbe
out
aad
dec
out
pop
ljmp
push
test
ja
enter
pop
mov
push
icebp
test
aas
das
mov
jmp
inc
mov
pop
lret
push
or
adc
loope
cmp
pop
ffreep
fdivp
cmp
xlat
cmp
fisubrl
adc
cmpsl
lods
xchg
ss
and
adc
jecxz
ljmp
data16
push
fs
dec
rcrb
pop
gs
pop
fsubl
repnz
mov
cld
pop
or
pushl
test
fbld
nop
xor
mov
add
jb
or
subb
adc
adc
dec
or
pushl
in
gs
jle
int
jl
out
scas
inc
mov
test
jne
or
jg
jo
fmuls
incb
sub
and
pushf
ret
mov
movsb
out
test
xchg
cmp
mov
dec
loope
jne
data16
pusha
xor
cmp
out
mov
loop
mov
xor
andb
xchg
cmp
stc
fsubs
mov
mov
lcall
lret
sub
lret
mov
ja
rclb
mov
mov
push
mov
shl
cmp
push
mov
fadd
xchg
push
sbb
pop
push
icebp
lcall
divb
jbe
push
push
sahf
inc
push
mov
int3
mov
jno
lcall
es
adc
or
enter
fisubl
mov
add
push
or
push
ret
dec
add
cmp
add
jmp
inc
imul
adc
dec
mov
imulb
decl
mov
stos
pop
inc
pop
js
aad
dec
mov
insb
mov
xlat
or
incl
pop
xchg
jecxz
inc
jns
fwait
pop
inc
push
fmul
cltd
fs
clc
push
sbb
cli
jle
sahf
fdivs
outsb
sbb
jp
add
out
pushl
xor
repnz
xor
sub
ret
sahf
add
call
inc
test
lcall
fisubs
mov
inc
dec
inc
fcoml
ljmp
xchg
aas
xchg
mov
mov
ret
decl
stc
daa
sub
dec
pop
and
sbb
dec
push
xor
cmp
dec
lock
adc
cld
ljmp
push
lods
mov
movsb
sti
mov
sbb
stc
and
cmp
loop
add
pushl
lahf
ja
pop
ret
and
rolb
cmc
dec
or
cli
mov
ljmp
out
js
enter
cwtl
adc
in
decl
incl
mov
bound
xchg
sub
call
push
sbb
in
ror
inc
cmpsb
cwtl
lret
push
js
xor
push
orl
ljmp
lret
sbb
daa
cmp
xor
push
movsl
pop
pushf
jae
sbb
mov
decl
xor
mov
jnp
xor
stos
mov
lds
xchg
dec
jae
push
jp
pop
incl
cmc
xchg
dec
popf
mov
cmpsb
test
add
jle
fsubrs
es
sbb
js
addr16
es
and
outsb
ret
and
dec
shrl
and
sbb
and
mov
aad
andl
inc
cli
cld
in
jnp
adc
ds
test
mov
dec
xchg
jp
fs
jne
jle
mov
sbb
insl
aaa
sbb
pushl
pusha
jb
xor
lds
sbb
xchg
mov
or
xchg
cmp
call
imul
movsb
imul
push
mov
mov
ljmp
sub
int
xor
imull
adc
lret
aam
push
push
xor
cs
jae
jp
fsubl
or
mov
pop
popf
call
inc
cmp
xor
lcall
insb
jecxz
xchg
adc
or
ficoms
das
jp
sbb
push
dec
add
jns
data16
inc
pop
jae
pushl
rol
cwtl
sbbb
cmp
test
push
lock
shrl
or
and
xlat
pop
int3
jge
cmovs
dec
and
add
imul
pop
cmp
mov
adc
bnd
sbb
decl
jbe
adc
push
jp
imulb
shlb
dec
je
mov
in
and
fwait
call
outsl
sbb
pusha
add
in
pop
jo
cli
repz
sub
mov
cmp
lcall
xor
dec
enter
dec
dec
add
pop
int3
lock
push
push
mov
sbb
ljmp
je
out
ss
popa
or
adc
clc
stos
sub
pop
addl
dec
jns
popa
fs
inc
gs
mov
push
xor
popa
adc
pushf
dec
lock
xor
outsl
mov
decl
idivl
stos
dec
gs
cmp
shlb
jmp
shll
and
ljmp
fldcw
dec
xor
inc
pop
stos
sub
sbb
pop
icebp
jg
jns
xchg
xchg
fwait
add
rcrl
lahf
sbb
andl
xchg
in
test
dec
and
clc
ds
ds
jnp
cmpsb
fistpl
adc
dec
cmp
adc
cmp
call
adc
push
xchg
jge
cmp
out
xor
sub
outsb
push
mov
stc
fwait
jno
aaa
pop
ret
dec
mov
loope
ljmp
out
and
xchg
pop
subl
dec
and
pop
xchg
pop
fbld
adc
xchg
xor
addr16
and
scas
pop
add
lret
lods
aam
call
pusha
dec
out
mov
mov
push
mov
imul
fldl
jecxz
std
mov
stos
push
jmp
test
shll
shrl
mov
aas
mov
insl
out
insl
sbb
fs
loopne
test
jne
mov
int
pop
pop
mov
pop
fwait
scas
push
dec
aam
sub
inc
jge
inc
sahf
add
decl
xchg
xchg
sub
push
lss
push
mov
pop
movsb
hlt
outsb
outsb
dec
scas
in
rorl
adc
sub
push
cmp
ja
mov
lods
inc
sbb
jg
data16
and
cmpsl
mov
mov
rcl
aas
push
xor
pop
jmp
test
xor
cmp
incl
ror
int3
mov
in
adc
mov
mov
orl
lcall
push
cmp
add
mov
push
push
repnz
or
out
push
cmpsb
sar
incl
xchg
insb
repnz
push
pop
sti
push
xchg
cwtl
scas
mulb
mov
notl
out
dec
mov
jg
dec
cmp
and
sbb
xchg
rep
lds
cltd
pop
sar
call
pop
int
in
cs
out
xchg
mov
push
loope
fld
in
jno
sub
pushl
cld
and
push
mov
dec
adc
rcrl
jmp
aad
jg
test
dec
pop
scas
ret
aas
icebp
mov
push
stos
push
xchg
pop
in
imul
mov
push
lods
inc
xchg
and
xchg
adc
cmp
xor
dec
pop
rcll
push
lcall
inc
jp
mov
addr16
sbb
lods
ret
mov
sub
mov
push
dec
cwtl
mov
jo
popa
push
mov
pushl
ret
loop
adc
push
jecxz
or
fisttps
loop
aad
mov
sti
mov
lea
sbb
aad
mov
xchg
call
dec
fs
mov
fadds
push
mov
imul
cmp
dec
test
add
jbe
xchg
out
jecxz
sahf
test
pop
mov
ror
add
fwait
and
add
incl
push
test
jge
inc
popa
in
jecxz
dec
idiv
inc
jg
out
mov
xor
or
xchg
inc
data16
xchg
cld
ljmp
pop
mov
mov
mov
shll
stos
in
pop
jg
sbb
fcomip
in
sub
lods
outsb
mov
test
sbb
cmp
fwait
loope
jp
lock
incl
imul
adc
scas
jnp
push
push
jle
out
mov
stos
add
mov
decb
in
subl
mov
xor
out
sbb
ret
xor
lcall
arpl
xor
jp
mov
js
dec
in
icebp
lods
push
lock
or
and
dec
mov
ljmp
mov
in
out
and
mov
fbstp
cwtl
push
and
xchg
add
je
imul
mov
mov
shlb
std
aaa
cmp
xchg
lock
insb
lock
pop
adcl
xchg
aaa
mov
test
jecxz
sbb
jmp
cmpsb
inc
jmp
mov
ss
or
jmp
mov
ljmp
popa
or
xchg
clc
jno
mov
add
call
mov
xchg
leave
push
sub
pushl
pop
mov
call
ds
insw
pop
lcall
ds
ret
call
mov
pop
shll
cmpsl
mov
fmul
aam
push
and
cli
and
scas
pop
jg
jmp
xor
out
lcall
loop
lcall
int3
lods
mov
clc
clc
ljmp
cli
cmp
and
jns
cmp
mov
movsb
xchg
cmpsl
fsubrs
rorb
add
or
jne
pop
ja
cmpsb
mov
les
push
test
pop
sbb
push
xor
pushl
imul
xchg
mov
dec
inc
mov
ds
dec
sbb
ss
lea
mov
push
mov
int
jmp
push
mov
cmpsb
cld
inc
lret
or
movsb
xor
add
add
into
xchg
adc
mov
fisubs
pop
jp
mov
cltd
fwait
dec
hlt
aam
ljmp
shl
into
cmp
movsb
and
lcall
aad
jl
jecxz
out
or
lds
movsb
movsb
addb
jg
xchg
bnd
insb
push
mov
ja
jno,pt
xchg
push
pop
mov
pushl
pop
cmpsl
xchg
in
fwait
imul
mov
popa
arpl
mov
sub
inc
jnp
adc
inc
jg
jmp
inc
shrl
stc
jno
inc
jecxz
mov
push
imull
jns
shlb
das
and
mov
hlt
adc
dec
xchg
cltd
cwtl
xchg
dec
push
jle
pop
pop
adc
mov
dec
and
pushl
adc
das
negl
lods
mov
push
clc
ja
xchg
mov
mov
insb
and
lcall
das
adc
cmpl
or
cltd
movsl
movsl
jp
and
sub
xor
mov
nop
mov
jmp
outsb
imul
pop
lock
xchg
dec
or
testb
outsb
cmp
pushl
cmp
je
or
sbb
mov
fiaddl
mov
dec
jge
sarb
cmp
xor
movsl
adc
dec
mov
cmc
jns
adc
bound
or
ljmp
sub
bound
test
jmp
sub
aas
jae
fnstenv
dec
xchg
call
cmpsl
out
jg
test
push
sub
test
xor
ds
cmpsl
xchg
push
pop
pop
dec
xchg
mov
fucomp
push
xchg
pop
shr
sbb
xor
add
pusha
arpl
rcrl
testb
push
sub
es
xchg
cmc
stos
aad
sub
fs
jmp
cld
decb
mov
int3
dec
or
add
jp
jns
jp
adc
popa
shr
loopne
imul
mov
jmp
adc
movsb
stc
sbb
jbe
insl
cmp
shll
outsl
loop
mov
ljmp
ss
xchg
xor
jns
sti
sub
gs
std
shl
mov
scas
mov
cmpsb
xor
cli
in
xor
decl
push
pushf
dec
fidivl
leave
je
bound
push
leave
mov
sub
pop
jg
incl
jle
push
xorb
mov
mov
aad
cmp
ret
dec
mov
cmp
adc
fwait
test
jecxz
xor
fucomi
cmp
dec
jnp
fisubrs
inc
pop
inc
je
leave
cmpsl
in
rcrl
cld
lods
and
xor
sbb
cmp
sbb
movl
sub
scas
pop
in
fdivrs
out
or
sbbl
mov
mov
shll
jg
incl
test
test
out
sbb
xchg
mov
jge
dec
jmp
shlb
js
or
daa
push
cs
sub
rorb
mov
jns
cld
pop
mov
cmpb
hlt
jno
cmpsl
pop
inc
sbb
lcall
lret
dec
daa
sub
movsb
cwtl
xor
test
pusha
hlt
adc
decl
mov
cwtl
add
std
idivb
xchg
cmpb
call
dec
test
xor
call
jns
fdivrs
or
cmp
scas
sahf
cmp
jl
je
sbb
stc
inc
mov
call
lea
jae
shll
inc
out
adcl
fmul
add
out
lret
and
pushl
sub
in
test
inc
push
push
push
fsubrs
cmp
add
decl
cmc
bound
pop
scas
mov
ds
jb
fucomp
mov
mov
cltd
xchg
dec
xchg
and
pushl
lods
out
sbb
fistpl
out
ret
jo
push
jbe
cmp
cmpsl
pop
pop
std
jmp
jo
push
bnd
imul
aam
adc
fcomip
cmpsb
ss
jge
mov
cmpsl
mov
dec
add
adc
jmp
xchg
and
jmp
scas
xchg
push
sbb
mov
xchg
pop
pop
cltd
frstor
fcmovnu
js
jp
cld
lcall
cs
xchg
inc
cmp
xor
lds
lahf
mov
out
or
lods
sbb
test
and
fldt
mov
mov
fiaddl
xorb
testb
jmp
jmp
mov
rcll
xor
jecxz
shr
stc
ja
and
push
push
sti
call
ljmp
dec
loope
push
xchg
xor
mov
shrl
mov
cwtl
push
cmp
aas
mov
decl
sub
pop
out
xchg
movl
push
sbb
push
hlt
inc
pushf
or
movsb
mov
mov
mov
mov
call
adc
bound
xchg
sub
out
jp
out
jns
cmpsb
movsb
mov
adc
dec
mov
sbb
fcomip
loop
xlat
jno
test
dec
pusha
out
repnz
pop
outsl
jge
fists
lcall
xor
mov
mov
mov
sahf
ja
xor
stos
jns
or
clc
push
std
mov
jno
pop
mov
mov
adc
daa
jnp
xor
mov
jae
jmp
mov
dec
xchg
outsb
xor
mov
add
movsb
adc
call
ds
daa
outsl
and
jae
push
sub
icebp
inc
imul
mov
add
ljmp
aad
lock
ret
rcr
loopne
nop
push
xchg
shr
mov
pop
inc
xor
aaa
pop
push
mov
xor
xor
insl
imul
mov
mov
cmp
or
cli
fsts
inc
ljmp
xchg
xchg
dec
adc
push
inc
es
icebp
rcll
or
sub
dec
pop
pop
xor
pusha
test
xor
pop
imul
inc
incl
xchg
and
popf
outsb
vpunpckhwd
jmp
and
mov
and
out
jge
push
insl
or
stos
mov
xchg
loop
aam
mov
imul
mull
sahf
pusha
aas
pop
pop
sbb
pop
dec
pop
and
cld
das
jno
call
push
es
and
bound
aad
out
subl
out
xchg
fisttpll
xchg
movsb
lret
adc
lcall
push
pop
adc
test
popf
loop
cmc
pop
dec
mov
fs
stc
cmp
and
push
data16
pop
or
dec
add
or
mov
pop
idiv
ljmp
stc
clc
xor
mov
lds
mov
and
pop
call
decl
dec
xlat
sbbb
lds
pop
ret
in
rcrl
call
xchg
in
aas
dec
sub
mov
mov
inc
out
inc
cs
cmp
addr16
scas
clc
decl
cmpsb
pop
add
dec
mov
sub
push
cmpsl
jbe
inc
stos
pop
lods
jecxz
sbb
mov
call
xchg
inc
mov
inc
mov
int
add
cmp
jg
sbb
out
clc
mov
mov
and
enter
dec
cmc
mov
mov
cld
jmp
push
clc
fimuls
lcall
sub
lods
xor
loope
inc
popa
insl
cmp
or
sub
scas
dec
outsl
sbb
cli
pop
jmp
mov
lods
or
pop
in
cmpsl
gs
in
mov
aaa
subl
out
dec
inc
insb
adc
int
sbb
incl
jp
aam
xchg
es
adc
jmp
xor
out
sub
das
scas
faddl
cld
and
sub
mov
scas
mov
lcall
inc
pop
test
ret
clc
mov
push
cmp
adc
xchg
fimull
fisubrs
push
js
xlat
inc
mov
sti
stos
push
adc
xchg
ljmp
mov
fidivrl
mov
comiss
loopne
add
sub
or
mov
int
push
sbb
sbb
aam
imul
imul
sti
jmp
push
aaa
pop
cld
push
mov
test
shrb
push
call
xlat
fstpt
das
mov
jg
xor
adc
enter
daa
aaa
into
pop
mov
jns
mov
and
hlt
sbb
adcl
and
call
xor
cmc
mov
cmpsl
stos
inc
jge
push
jle
cmp
jno
pop
mulb
loop
lcall
test
lea
rorb
jecxz
aam
xchg
lcall
lcall
lret
mov
jp
sub
cwtl
and
xchg
popa
rcll
pop
pop
repnz
call
inc
rolb
movb
adc
adc
pop
pop
loop
xor
pop
in
jg
ljmp
pop
jp
repnz
insl
leave
adc
and
divb
je
mov
push
adc
incl
cli
int3
adc
cmp
aas
mov
xchg
js
test
jmp
jmp
dec
and
mov
insl
add
insl
fisttps
pop
shlb
or
lcall
cmp
adcb
outsl
ljmp
pushf
in
inc
xor
pop
lahf
int
jo
pushl
cwtl
dec
pop
movsl
into
les
adc
and
push
xchg
lea
cmp
mov
clc
mov
movl
xchg
or
icebp
stos
dec
dec
and
sbb
lret
xchg
push
mov
fs
mov
pop
xor
imul
cwtl
add
int3
daa
sbbb
das
cmp
inc
sub
sbb
hlt
inc
and
jl
and
movsb
push
loope
ret
cli
clc
jl
add
jg
xor
and
pusha
mov
sbb
mov
cmp
bswap
test
cmp
ljmp
dec
adcl
xlat
mov
mov
jg
cltd
xor
mov
xor
mov
int
rcll
dec
ds
call
cld
mov
adc
shr
in
clc
fsubs
xor
mov
leave
in
fnstcw
mov
shlb
fadds
pop
pop
and
enter
fcos
jmp
aam
cwtl
mov
add
mov
lods
popa
push
in
fisttpl
bound
push
jl
ret
xor
mov
pushf
xor
int
mov
lcall
inc
mov
call
and
push
lods
data16
int3
icebp
push
fdivrl
sahf
xchg
cmp
and
aam
fsubrl
add
das
cli
incl
adc
aaa
cmp
mov
jp
cs
dec
ret
pop
mov
dec
pusha
add
inc
inc
dec
outsb
push
cmpl
lret
cmp
shll
mov
bound
jg
cmp
xor
fstps
xor
mov
sbb
cmp
decl
testl
cmp
jp
rcl
test
decl
lock
imulb
mov
push
push
cmp
mov
push
or
rorl
sbb
mov
out
jle
fnstsw
fs
lcall
enter
dec
or
andb
push
out
data16
insb
int
adc
add
fistpll
addb
lods
ljmp
es
lea
pushf
mov
repnz
ja
lods
out
push
ficompl
out
mov
jae
fs
clc
sbb
mov
push
mov
xchg
repz
and
decl
cmpsb
xchg
mov
pop
fisubrl
je
rcrl
into
loop
xor
test
aaa
jmp
xchg
jno
sbb
push
mov
sahf
dec
pop
or
test
pushl
aas
lcall
fwait
lods
pop
or
jp
jbe
inc
out
dec
test
jle
out
clc
call
sbb
scas
stos
mov
stos
dec
xchg
fdivp
jg
pop
dec
inc
jns
push
inc
fdiv
xor
fcmovnbe
push
incl
imul
in
mov
out
iret
add
pusha
int
jo
xor
call
cmp
ret
adc
shll
scas
insl
push
test
out
mov
mov
sar
push
mov
fwait
imul
scas
dec
test
mov
les
inc
das
lret
mov
cmpsl
jg
call
xor
pop
add
inc
and
xchg
in
inc
xchg
lahf
cltd
enter
ljmp
cld
sbb
icebp
jg
or
loop
sbb
in
mov
pop
popf
daa
imul
add
dec
xor
fisttps
aaa
adc
ljmp
dec
daa
pop
xlat
clc
daa
out
movsb
or
jmp
cmpsb
mov
fistps
jle
movsl
pushl
push
and
sub
arpl
cmp
jmp
push
aad
inc
dec
fcomps
aaa
jl
sub
insb
dec
jb
mov
cmp
test
lcall
stos
push
out
pushf
or
in
jmp
mov
loop
jns
inc
cmp
and
mov
out
inc
inc
loope
call
mov
adc
test
iret
mov
cmp
repz
or
incl
or
iret
mov
and
inc
cli
in
sub
fwait
mov
xchg
pop
cmpsb
mov
ja
push
inc
ret
dec
stos
addr16
js
std
sahf
lods
or
mov
mov
test
fcompl
mov
lods
lods
cld
add
jl
cmc
dec
je
pushf
adcb
cmp
xor
out
or
aaa
jl
imul
pusha
pop
xor
aam
mov
push
inc
repz
cmp
shrb
inc
fidivs
repz
adc
clc
mov
sub
adc
call
lock
into
fxch
loope
aas
lret
or
fs
dec
cmp
loope
inc
xorl
movsb
push
pop
sar
shlb
ss
jne
push
rorb
cmc
mov
inc
ret
shrl
scas
cmp
dec
movsl
aam
incl
cltd
mov
or
mov
outsb
or
sbb
les
push
lods
xchg
push
call
mov
dec
xchg
mov
push
dec
jno
aaa
xchg
and
xor
push
pushl
clc
notl
scas
sets
pushf
pop
xor
lea
pop
xchg
movsl
cmc
push
pushl
cld
mov
add
cmp
fs
dec
push
sti
mov
xor
push
decl
fimuls
sub
lret
loop
aas
cmpsb
cld
add
hlt
lcall
push
and
mov
fwait
scas
inc
popa
pop
mov
insb
aad
mov
lcall
outsl
lock
gs
in
cli
add
mov
fistps
push
cwtl
fldt
cmp
adc
out
fsubrl
mov
sti
push
inc
dec
out
mov
les
in
lret
cmp
and
lods
ljmp
call
pop
test
add
and
out
je
ret
cmp
jmp
ja
loope
div
ljmp
inc
in
and
sub
jb
xchg
inc
mov
lods
mov
stos
popf
ucomiss
sbb
mov
call
and
aam
int3
push
and
pop
sarl
dec
mov
sahf
aad
push
out
jnp
jae
jl
out
jb
xorb
imul
adc
cld
or
mov
pushl
cmp
fiadds
mov
dec
mov
inc
dec
sbb
fwait
mov
inc
push
incl
add
fwait
rcrl
jmp
and
sahf
arpl
mov
pop
mov
outsl
sahf
lret
mov
jbe
in
jg
pushl
jae
dec
xor
iret
cli
fistpl
mov
sbb
clc
ljmp
inc
adc
rol
out
arpl
pop
andps
pushl
ret
xchg
std
movsb
ret
lret
inc
or
xor
pop
ret
sbb
cld
lcall
rclb
mov
mov
subb
test
test
call
pop
fwait
cmpsl
lcall
sbb
aaa
stos
inc
mov
outsb
sti
sbb
push
xchg
adc
jg
push
xor
cmpsl
in
and
lods
adc
jb
insl
dec
inc
jl
call
sbb
mov
popf
cwtl
fstps
pop
int3
lret
jnp
jmp
and
and
ja
pushl
cmp
pop
aaa
xor
xchg
mov
nop
rolb
hlt
ljmp
inc
add
scas
cltd
call
lods
jle
movsl
test
mov
inc
in
pusha
aas
mov
mov
nop
cld
sub
aam
xor
xlat
pop
fs
imull
fsubr
loope
pop
loopne
test
stos
jmp
pop
jg
sub
jecxz
and
dec
and
test
inc
call
ljmp
jle
mulb
lret
data16
jmp
jl
imul
out
std
incl
stc
cmpsl
shlb
xchg
mov
pop
ret
fxch
jb
mov
lret
pop
popf
test
out
xlat
les
adc
mov
aam
pusha
test
mov
jns
aaa
std
pushl
fbstp
jns
out
lahf
jecxz
testl
andb
decl
lahf
iret
push
push
daa
mov
mov
fmulp
pusha
lahf
dec
mov
fcompl
mov
jmp
js
pop
push
xlat
cmp
lcall
mov
push
mov
es
adc
pushl
mov
push
adc
inc
mov
das
xor
rorb
imul
shlb
jg
clc
jns
mov
xchg
dec
in
cld
loopne
fcmovb
lcall
fdivp
pop
jne
and
cwtl
cli
sbb
adcb
imull
lock
mov
inc
pop
test
cmp
movsb
lcall
push
fxtract
shrl
ja
xchg
xchg
adc
push
cmc
call
cmpsb
mov
ffreep
and
comiss
lret
ret
mov
call
call
out
frstor
sub
test
fisubrs
and
decl
push
pop
dec
and
inc
outsb
dec
mov
std
mov
movb
insb
pushf
fcos
decl
sbb
push
shll
xor
sub
cmp
sahf
inc
push
mov
pop
icebp
clc
push
mov
cmc
mov
xor
mov
mov
jne
insl
add
mov
stos
scas
mov
ror
aas
inc
cmp
cmpl
bound
push
mov
xchg
xchg
pop
adc
jmp
sbb
cli
adc
xchg
cltd
std
loop
xchg
xor
cmp
push
in
dec
xchg
aam
and
repnz
clc
pusha
xor
xor
data16
jb
cmp
sahf
mov
push
sub
add
cld
jmp
mov
iret
int
adc
xchg
ljmp
mov
mov
sub
push
dec
loopne
push
cs
shlb
inc
xor
push
xor
sub
movsl
lock
test
stos
icebp
sahf
outsl
mov
loop
stc
sub
rorl
cli
sbb
mov
mov
ret
lods
lock
ret
lods
adc
cs
mov
pop
pop
lea
sahf
ljmp
stos
sahf
jmp
sbb
js
clc
adc
push
mov
fnstsw
mov
lcall
fisubrl
sub
fs
xchg
out
pusha
inc
int
lock
pop
bound
gs
mov
jmp
das
jl
hlt
js
cmc
clc
aam
xor
inc
movsb
pop
lock
shlb
lret
mov
jecxz
fcomp
out
cmpb
sbb
bound
in
lret
sbb
rclb
popa
data16
and
mov
jno
je
inc
ficoms
pop
daa
pushl
cltd
mov
insb
pop
mov
ljmp
aam
daa
mov
sub
call
add
jne
push
sub
std
sub
pusha
dec
ret
and
jle
sub
jne
jo
loop
aaa
xchg
cmpl
fdivrs
cmp
ljmp
cmp
sub
test
jmp
aad
inc
lea
cld
lcall
test
pop
outsl
xchg
pop
hlt
cmp
pop
pop
insl
pop
pop
push
adc
clc
loope
sbb
lret
cs
push
fistpll
call
out
add
dec
cmp
mov
aam
inc
clc
scas
js
stos
push
cs
test
pop
test
xchg
sbb
jle
push
lret
cmp
jp
inc
xorl
sbb
xlat
xor
mov
xchg
add
mov
decl
jge
push
hlt
insl
or
jbe
pop
les
aaa
push
jg
fisubrl
and
out
mov
in
icebp
mov
daa
test
out
add
jge
outsl
cs
inc
push
jb
in
adc
scas
sbb
mov
push
insb
jg,pt
or
push
or
pop
xor
pop
or
ja
jmp
in
mov
mov
and
movsb
ljmp
pop
pushl
sbb
inc
inc
and
lods
psubw
pop
mov
lcall
or
adc
or
pop
cld
decl
in
jne
mov
test
add
jne
out
and
aad
sbb
into
in
outsl
xchg
ljmp
xor
movsb
lea
pop
push
mov
loopne
popa
jmp
loop
leave
sub
inc
adc
fwait
es
mov
shll
cli
out
jl
push
add
ljmp
sbb
lea
cltd
in
jle
mov
into
mov
rolb
scas
stos
xchg
insl
lea
push
dec
sub
mov
inc
adc
adc
addl
or
fwait
pop
cld
jmp
and
xor
ja
add
fadd
inc
mov
xchg
inc
mov
js
jle
iret
mov
lock
inc
in
sub
scas
cli
shll
fmull
adc
cs
mov
push
stos
or
aad
push
jne
jg
pop
lahf
decb
out
push
mov
xchg
sbb
loop
aam
push
and
sub
or
push
jle
test
or
inc
sar
mov
pop
enter
cmp
mov
cmpsl
sub
dec
pop
adc
fisttpll
xchg
in
mov
stos
leave
fisubrl
mov
jbe
cmp
arpl
sub
sbb
movsl
cwtl
xor
rcl
call
push
push
pop
mov
sbbl
pop
mov
xor
outsl
xorl
scas
cmp
sbb
ja
jg
lods
mov
std
mov
popa
sbb
pusha
inc
or
or
jg
push
push
je
mov
test
lock
jno
stos
in
xchg
rcll
jmp
jmp
call
out
or
shll
shrb
scas
or
mov
lahf
jl
inc
cmp
outsb
or
inc
test
icebp
in
dec
adc
xlat
hlt
daa
cmpsl
push
jb
jae
jmp
inc
fisttps
js
xor
addr16
insl
cmp
cs
dec
popa
mov
xchg
jae
and
jns
std
into
jl
jnp
dec
jae
push
jns
xchg
push
iret
pop
fiaddl
xchg
cmp
stos
out
loopne
xchg
out
mov
stos
pop
int3
mov
adc
call
cltd
out
fimull
mov
jp
dec
std
aad
sahf
cmp
pusha
inc
xor
mov
mov
jmp
repnz
call
fiadds
jae
add
stos
outsb
jb
jl
mov
movsb
je
mov
leave
fsubrl
hlt
jmp
push
push
mov
pushl
out
jbe
sbb
adcb
stos
inc
gs
mov
push
loope
and
mov
fwait
adc
push
pop
insb
fildll
cwtl
and
mov
jmp
pop
movsl
cltd
pop
pop
arpl
sbb
fwait
mov
aas
jmp
movsb
arpl
pop
mov
aam
pop
clc
fdivrp
pushl
inc
lret
xor
jecxz
xor
rorb
ss
dec
sub
lds
scas
outsb
cli
lcall
and
arpl
loop
out
ljmp
ljmp
inc
jae
mov
je
inc
pop
fadds
add
push
insl
test
decl
lock
movsl
mov
stc
push
sub
enter
adc
add
fldcw
lods
fwait
mov
loop
mov
bound
das
incl
add
aad
mov
sbb
inc
popa
mov
and
je
std
call
or
xor
gs
outsb
push
movsb
fcmovbe
sti
dec
push
mov
decl
rorl
in
out
mov
jo
xor
pop
jmp
sbb
jge
pop
mov
push
jmp
mov
and
sahf
sarb
dec
into
insb
lahf
jbe,pt
sub
call
push
ror
rorl
push
popf
sahf
cltd
pop
jmp
xlat
lcall
or
add
mov
movsl
call
ret
cltd
cmp
adc
call
sbb
inc
cmp
mov
pop
mov
aad
aaa
push
arpl
test
neg
or
ljmp
cmc
sub
mov
mov
mov
cs
mov
cmp
mov
mov
std
in
testb
lea
and
loope
inc
imul
sub
ss
and
and
lret
ljmp
js
mov
call
pushl
sub
and
sub
jle
in
int3
push
outsl
outsb
insl
adc
decl
xor
mov
pop
jecxz
gs
es
sbb
or
sbb
add
outsl
fstp
lods
aad
push
iret
push
outsl
popa
sahf
pop
jg
sub
in
push
pop
in
fcompp
or
lock
call
dec
cmp
cmp
data16
pcmpgtd
jb
cmp
pushl
shrl
outsl
dec
cld
mov
js
push
outsb
mov
jne
sti
cli
lcall
jo
int
imul
testl
dec
iret
sbb
sbbl
adc
pushl
in
fcomps
add
and
js
inc
and
mov
lcall
mov
and
push
add
popa
push
ss
iret
cmp
pop
adc
pushl
loop
lods
xor
cli
aas
mov
pop
enter
add
outsb
add
cmp
incl
inc
jne
repnz
pop
pop
adc
ja
daa
arpl
jno
inc
not
ds
inc
push
jg
hlt
sbb
lahf
add
cmp
push
cmpl
xor
or
lret
fs
cmp
jbe
cmp
pushl
std
cmp
cmpsl
jge
mov
lods
push
add
movsl
xor
cmp
fs
icebp
lds
sti
addr16
out
dec
iret
roll
or
xchg
push
rcll
push
fwait
lret
scas
cmp
add
decl
cmpsl
gs
call
shlb
in
lcall
dec
cmp
lret
cmp
xchg
out
sbb
leave
adcb
repnz
fcomip
daa
jne
sub
add
and
mov
daa
add
xlat
jmp
xor
shrl
rcll
incl
jo
sub
xlat
clc
negb
push
xchg
mov
jecxz
inc
pop
sub
das
clc
stos
push
aam
insl
hlt
jl
insl
data16
divb
adc
clc
jmp
mov
rolb
inc
pop
jl
sbb
sub
rcll
scas
and
clc
jmp
ljmp
fbld
or
adc
decl
sbb
inc
xlat
xor
out
movsl
daa
js
mov
leave
out
mov
pushl
xor
xor
mov
inc
push
fdivrl
or
int
mov
lcall
push
mov
xchg
sub
inc
dec
pop
lods
xchg
sub
sbb
and
in
inc
shrb
incl
mov
sub
xchg
testb
gs
mov
or
mov
sbb
and
push
jno
ds
cmp
inc
testb
jl
ds
jp
pop
std
decl
lret
dec
js
sbb
xchg
push
xor
and
push
dec
sub
incl
mov
ret
das
xchg
or
sbb
dec
pop
jecxz
dec
movsl
stos
xor
orb
cmp
les
or
sahf
js
mov
or
cmpsb
sub
sbb
jnp
jg
mov
rcrl
adc
daa
mov
mov
in
decl
mov
mov
test
pop
mov
jmp
jg
pushf
cli
inc
movsb
out
stos
cmc
and
mov
pop
lcall
dec
fs
inc
jg
in
lcall
mov
sar
cmp
ficompl
and
cmp
mov
ficompl
cwtl
fbstp
jae
push
mov
cmp
jp
xor
mov
or
or
mov
jg
fdivs
lret
test
orb
fsubrs
outsb
mov
hlt
repz
rcrl
jno
fildl
pop
lret
je
ret
and
incl
ja
jp
pop
and
out
les
loop
incl
mov
sbb
aas
mov
fs
push
jb
sub
js
jmp
mov
repz
push
mov
dec
test
int3
in
push
cmc
std
sbb
insb
fsubl
sti
outsl
out
jns
loope
push
stos
mov
xchg
add
inc
addr16
outsl
push
push
inc
cmp
les
shll
rorb
jmp
sbb
ja
out
aaa
out
ljmp
lds
sub
push
leave
ret
sti
das
enter
lret
mov
cmp
dec
cmp
mov
pop
ret
mov
orl
mov
lods
outsb
xchg
xchg
loop
fldl
pusha
shll
outsl
push
push
in
mov
js
cmp
mov
out
inc
adc
incl
mov
push
and
mov
xchg
cmp
mov
out
clc
sbb
mov
or
mov
fisubs
je
mov
call
fbstp
add
pop
icebp
add
push
inc
hlt
adcb
ss
cmc
mov
mov
ljmp
movsl
dec
mov
movsl
dec
shll
into
cmc
xor
add
in
es
fisttpll
or
dec
mov
sub
or
mov
int3
dec
rolb
leave
dec
xchg
jbe
xor
stos
push
incl
mov
out
movsl
in
adc
push
imul
jg
xor
je
clc
and
cltd
dec
jge
jno
xor
mov
stos
cmp
arpl
lcall
pop
or
lods
and
imul
pop
mov
cmp
push
mov
jl
sar
dec
cli
cmp
xchg
stos
or
rorb
repnz
push
sub
mov
test
lds
jmp
inc
or
sub
sub
sahf
aas
outsb
lret
test
call
jg
inc
ret
cmp
rolb
lods
cmp
jmp
out
inc
stos
xchg
je
and
adc
push
jo
aaa
leave
jbe
or
jecxz
orl
ljmp
lahf
lea
mov
jno
pushf
fisttpll
or
jae
xor
adc
jmp
add
pop
cmpsb
inc
into
inc
sahf
enter
pop
int
pop
imul
jbe
sbbl
mov
push
je
sbb
mov
mov
mov
or
mov
decl
push
fimuls
sub
pop
sbb
mov
incl
xor
add
mov
add
mov
xor
in
jnp
cltd
das
insl
ljmp
pcmpgtw
pusha
test
lea
ss
xor
fisubs
adc
insb
rorb
jno
in
pop
sub
jnp
and
xor
sbb
ljmp
sbb
rorb
inc
pop
bound
stos
and
dec
sub
fwait
or
mov
out
dec
xor
inc
fisubrl
aaa
push
scas
add
aaa
lock
xchg
pop
push
xchg
push
ljmp
lock
push
in
add
enter
lock
push
fwait
pushf
cmpsb
adc
pop
lahf
cmp
jmp
sbb
dec
adc
cwtl
and
dec
lcall
movsl
jp
cmp
lcall
jmp
loop
adc
xor
mov
xchg
mov
test
cs
xor
lcall
pusha
test
sbb
leave
jnp
adc
movsl
sbb
dec
insl
bound
jecxz
fstl
xchg
push
mov
pusha
or
das
push
fisttpll
xor
outsl
xor
mov
scas
stos
loopne
push
mov
fcmovu
add
sub
lahf
addr16
push
mov
cmpsl
xchg
pushf
xor
movsb
sbb
aas
jle
mov
jg
hlt
jl
lds
xor
push
mov
push
mov
mov
inc
imul
ljmp
pop
cmp
adc
in
xor
xor
jle
ljmp
lock
mov
js
loope
fisubrs
jle
fldl
and
jmp
mov
sbb
mov
mov
lods
adc
xchg
ja
filds
ret
lods
cmp
icebp
adc
cmp
call
dec
inc
lock
mov
mov
cmp
sbb
jbe
sub
push
call
jmp
scas
adc
mov
jmp
and
mov
xchg
push
adc
sub
das
incl
imul
mov
dec
adc
xor
in
stos
jno
jae
mov
std
scas
jb
fwait
push
jmp
adc
enter
xor
or
or
xchg
jp
sbb
incl
fucomip
es
mov
fnstenv
std
les
adc
imul
pop
or
adc
call
addr16
inc
pop
mov
mov
arpl
scas
mov
cli
and
pop
loopne
incl
or
push
and
loope
mov
fucomi
std
mov
mov
xchg
das
aad
cmp
ljmp
flds
mov
shll
mov
lcall
cmpsl
cmp
shrl
pop
push
cmpl
and
pop
data16
jmp
lret
sti
imul
js
and
push
ficompl
push
mov
dec
xor
imul
call
or
mov
xchg
insl
push
and
insb
push
jno
mov
jnp
xlat
fdivr
outsl
cli
lcall
nop
push
fsubrs
loopne
clc
aad
imul
das
icebp
ljmp
mov
mov
fnstsw
push
xchg
mov
ljmp
mov
sahf
divl
jp
in
xchg
addr16
mov
cs
lcall
xor
cmpsl
ljmp
push
lock
out
or
ss
xor
iret
adc
shll
add
push
xchg
push
aas
ljmp
je
lcall
xchg
pop
sbb
cltd
flds
add
mov
sub
popf
cmp
lock
jmp
call
int
das
bound
inc
mov
cmp
sub
jmp
inc
outsl
push
cli
and
cmp
decl
mov
test
sub
jle
cs
pop
rolb
xchg
jge
out
fwait
mov
jge
lods
jg
cmpsl
jp
adc
hlt
pop
aad
push
sub
decl
les
or
push
jnp
aam
xlat
lods
lcall
adc
mov
jmp
lcall
push
mov
mov
sub
dec
push
mov
mov
lock
jp
push
and
pushf
inc
xchg
lods
out
add
push
pop
aad
push
cmp
mov
clc
xor
cmp
fnsave
pop
jp
dec
push
popf
in
add
int3
lea
inc
xchg
xor
call
push
xor
cmpsb
insb
cltd
loope
in
fst
jno
xor
scas
ds
mov
in
pop
lea
mov
mov
stos
xchg
mov
rcrb
push
stc
sub
jnp
icebp
add
mov
aad
out
int3
xchg
xchg
shr
cld
mov
cli
incl
sbb
insb
pop
sub
ficoms
xchg
jg
dec
stos
mov
insb
sbb
in
repnz
es
decl
in
mov
dec
push
dec
lods
dec
xchg
xchg
aam
add
mov
mov
call
mul
mov
iret
mov
mov
mov
mov
std
jmp
das
cmp
cs
adc
dec
dec
dec
nop
sub
ss
jl
mov
cmp
lds
push
sbb
aam
rcl
std
stc
stos
in
nop
fsubl
sahf
xor
pop
lods
inc
fcompl
outsb
push
outsb
addr16
mov
push
cwtl
inc
push
jg
sub
dec
stos
sub
mov
or
call
mov
adc
pop
roll
ficompl
insl
pop
in
mov
popa
jmp
sbbb
loope
loop
inc
daa
jge
and
pop
mov
sub
imul
adc
nop
and
add
dec
scas
sbb
push
sub
lcall
jmp
add
ja
mov
jb
inc
jle
push
jae
jnp
cmpsb
pop
lret
adc
and
cmp
sub
lods
test
mov
sub
aad
mov
sub
mov
fistps
aam
in
mov
lcall
push
divb
fadds
leave
sbb
push
test
xchg
addb
ljmp
xchg
and
shll
pusha
jp
inc
pcmpgtd
cmpps
call
mov
inc
sbb
clc
or
add
cmp
std
sarl
jne
push
ficomps
into
xchg
cli
hlt
lds
pushf
sbb
jmp
ffreep
fidivl
xchg
sbb
decl
in
sub
pop
arpl
mov
call
or
jp
fucomp
idivb
push
push
lea
dec
jmp
mov
mov
dec
pop
cmpsb
push
lea
ljmp
add
js
shll
sub
lods
enter
arpl
ljmp
mov
adc
mov
push
movsb
aaa
rolb
pop
cmpsl
js
mov
dec
or
lock
fistpl
xlat
les
jp
jge
stos
cwtl
js
movsl
dec
clc
inc
ret
not
cli
cmp
inc
lret
dec
aaa
ret
push
inc
cmc
adcb
call
push
leave
into
leave
int
repz
insb
stos
loop
arpl
jecxz
cmpb
lds
incl
mov
jo
mov
sahf
repz
leave
cmc
cmp
pop
or
push
push
fcmovu
cmp
iret
daa
push
cmp
scas
add
xchg
pusha
xchg
aaa
xor
mov
mov
loopne
decl
add
cmpb
mov
fnsave
ret
xor
stos
call
js
int
in
jl
jle
dec
pop
in
jb
sbb
inc
xor
dec
mov
shrl
pushl
repnz
pop
adc
clc
fmuls
pop
mov
xchg
aas
popa
push
aad
xor
shl
dec
je
out
inc
cmp
xorl
call
fildl
imul
lods
push
xchg
fsubrs
scas
fsin
icebp
xchg
sbb
ret
cmp
cmpsl
jb
lret
pusha
xor
jno
cltd
sbb
cmpxchg
insb
mov
mov
mov
and
nop
ljmp
cmp
data16
adc
fst
sbb
aam
mov
ret
and
in
incl
pop
jns
outsb
out
movsl
out
sub
es
int3
or
mov
shrl
sbb
callw
cld
incl
sbb
xchg
pop
inc
push
push
sbbl
add
incl
inc
cld
mov
pushf
fidivl
outsb
sub
es
mov
mov
in
jecxz
aaa
lahf
pushf
fs
jmp
sar
ljmp
test
clc
movsl
lret
inc
dec
mov
or
push
stos
aaa
int
cmp
pushl
cmc
mull
push
adc
out
dec
nop
cmpsl
or
ds
ret
xor
xchg
leave
ljmp
scas
arpl
sahf
jae
enter
js
mov
pop
sbb
jne
jg
call
pop
incl
sti
nop
sub
pop
shll
fwait
mov
fldenv
cmp
mov
mov
rorl
cmp
aam
adc
jle
ja
mov
dec
aaa
push
popf
and
and
in
mov
sub
mov
lret
adc
cmp
mov
sbb
pop
mov
sub
sbb
jmp
jae
std
call
inc
mov
ret
sbb
push
xor
test
add
and
fdivrs
aaa
or
push
daa
dec
sbb
sti
dec
jnp
jns
es
and
dec
cmp
jge
ljmp
sub
loope
jg
int
repnz
inc
call
add
mov
mov
push
mov
mov
arpl
mov
lcall
xor
arpl
clc
out
cmp
icebp
pop
push
mov
sbb
jb
or
cld
mov
pop
cmpl
inc
insl
mov
jb
xor
push
imul
add
imul
fs
fisubs
lcall
mov
pop
lock
std
js
mov
jb
es
sub
jns
pop
push
sarb
in
dec
popf
push
inc
sbb
test
push
mov
daa
xlat
pop
xor
pop
sbbl
ljmp
jae
lock
and
jp
mov
xchg
popa
inc
cmpsl
adc
enter
ljmp
or
jno
jnp
test
adc
mov
pop
push
xchg
push
enter
pop
cmc
adc
mov
mov
lds
leave
lds
dec
pop
out
lods
lret
out
ljmp
aas
xor
jmp
cltd
in
pushf
dec
mov
or
jl
out
xchg
cmpsb
out
cli
mov
aas
shll
cmp
push
inc
xor
xchg
sahf
add
das
outsl
call
mov
xchg
sbb
adc
push
jb
int
push
pop
bound
imul
test
outsb
dec
mov
xchg
out
sbb
or
xchg
and
inc
dec
lcall
ja
xor
std
cmc
fwait
jmp
call
inc
cmp
testl
xchg
lock
adc
lcall
mov
adcl
mov
fwait
aad
push
repz
or
pushl
jo
imul
inc
inc
pop
push
js
and
out
jno
imulb
in
daa
pop
cmp
mov
incl
adc
cmp
sbb
fcoml
out
mov
and
jg
icebp
lea
test
cli
idiv
mov
add
stc
sub
inc
ljmp
in
sub
mov
add
loopne
scas
popa
pop
imulb
pusha
push
or
outsb
loopne
cmp
aaa
rcrl
xor
add
cld
mov
pushl
jl
xchg
hlt
xchg
cmc
imul
mov
cmpsb
cmc
mov
iret
insb
mov
mov
sarb
mov
dec
push
jge
jns
jne
rclb
sti
mov
loopne
sbb
fs
cmp
rol
adc
incl
pop
test
mov
jb
lods
cltd
int
mov
jmp
and
insb
pop
rcrb
sti
jbe
movsb
ds
mov
in
jl
xchg
xchg
pushl
stos
sub
div
mov
sub
lea
lret
jb
mov
insl
inc
mov
pop
imul
sub
fiaddl
leave
mov
mov
sar
sub
decl
xor
fnstsw
outsb
pop
enter
jge
add
scas
sarl
leave
xchg
in
stos
decl
dec
jb
fwait
dec
jbe
aas
adc
jne
mov
dec
mov
push
subl
inc
jb
sub
ret
and
adc
pop
or
dec
aam
icebp
out
dec
cltd
outsb
xor
addr16
add
clc
decl
dec
fidivrs
adc
adc
rorb
jmp
inc
adc
xor
sub
jo
fnstenv
aas
ss
cmp
pop
mov
dec
ljmp
clc
incl
xchg
sub
lret
cmpb
dec
sbb
decl
jnp
pop
cli
aam
and
in
jmp
mov
inc
sbb
xchg
shrb
call
add
adc
cmpsl
push
or
sbb
int3
sub
inc
iret
or
jb
mov
les
aaa
cld
fsubrl
sbb
pop
int
aas
xchg
sub
les
sahf
xchg
hlt
jb
jno
shll
inc
rcl
call
push
hlt
lahf
xchg
ja
xchg
sub
arpl
rcrl
mov
xorb
out
inc
dec
adc
sub
push
outsb
fldcw
adc
inc
mov
sarl
mov
sbb
or
incl
mov
jl
stos
ret
shrb
push
lods
jne
stos
imul
das
ljmp
jecxz
nop
into
icebp
enter
push
sbb
stc
cmc
xchg
cld
dec
jnp
das
xchg
addr16
push
out
cli
mov
sub
xor
mov
jl
push
sbb
adc
cmp
sar
incl
and
fsubp
adc
jmp
pop
scas
fstpl
sbb
decl
clc
les
mov
lods
repnz
in
cwtl
pushf
andl
jmp
dec
mov
stc
call
jge
ret
das
in
dec
add
add
jne
mov
pop
loopne
mov
dec
push
loop
test
repnz
dec
loop
call
xchg
loop
daa
imul
push
and
std
sbbb
hlt
repz
cmp
xor
pop
fcomps
ljmp
das
sub
daa
sbb
xlat
out
in
decl
and
mov
jb
dec
inc
leave
das
sahf
fdivp
jnp
shll
into
shrb
std
test
dec
sub
cs
scas
sar
fldt
mov
neg
xchg
stos
inc
lret
jno
and
push
sahf
xor
xchg
mov
xor
ljmp
insb
mov
mov
popw
cmc
stc
push
mov
rcll
jg
inc
sahf
mov
mov
shll
icebp
fdiv
in
inc
cs
mov
jno
or
decl
je
xor
add
repnz
or
mov
add
aaa
push
sub
lods
testl
jmp
movsl
out
sbb
popf
dec
mov
call
sbb
loop
test
push
pop
sbb
mov
bound
stos
int3
sahf
nop
and
adc
push
lods
xor
call
pop
scas
ljmp
mov
sbb
aaa
and
sub
aas
cmp
fcomps
pop
leave
adc
in
sbb
mov
bound
test
jge
sub
inc
jle
aad
sub
jg
mov
jo
adc
shlb
fbstp
js
mov
jmp
incl
stc
inc
test
dec
test
das
pop
pop
mov
and
lcall
cmpsl
iret
dec
jae
jp
idivb
dec
out
daa
fisttps
cmp
scas
pop
addl
jecxz
sbb
jg
and
faddl
ljmp
ljmp
push
mov
lcall
loop
das
dec
lcall
xor
call
xchg
jle
lea
stc
jae
rcr
cmp
sbb
lret
cmp
popf
cmp
xor
lock
xor
call
testl
sbb
repz
loop
pop
push
mov
cmp
xorb
mov
push
jg
ljmp
and
push
pop
fnstcw
ret
xchg
and
or
cli
push
lods
pop
clc
lcall
sahf
push
push
loop
or
mov
jns
lea
ljmp
fstps
add
xchg
mov
imul
popa
jbe
aaa
jmp
scas
sub
jb
cmpsb
popf
mov
xor
mov
sbb
rorb
inc
push
or
les
dec
ljmp
mov
nop
scas
sbb
pop
stos
mov
inc
mov
lcall
mov
ja
fdivr
sbb
dec
lea
jbe
lock
into
pop
fsubrl
scas
dec
lret
ror
pop
mov
cli
push
or
sub
enter
jl
les
add
ljmp
inc
lds
xor
mov
add
mov
or
decl
jg
fdivs
mov
daa
or
popf
add
push
mov
xor
ret
xchg
mov
or
call
push
nop
xchg
push
lret
test
add
sbbb
dec
leave
cmp
jg
ljmp
rorb
mov
out
jnp
mov
pop
arpl
and
or
pushl
pop
mov
arpl
adc
inc
je
addr16
cmp
loop
lret
push
or
cmp
pop
ficompl
push
push
push
loop
movsl
mov
test
cld
lret
in
pop
std
jae
jg
incl
cmpsl
xlat
and
xor
cmp
jne
or
cmp
mov
lret
ljmp
jmp
mov
or
insl
mov
fs
insl
adc
lods
movsb
lea
jmp
imul
decl
xchg
dec
clc
outsl
push
lret
inc
cmc
push
dec
scas
out
cmp
sbb
call
push
arpl
push
dec
inc
outsl
dec
ljmp
adc
inc
test
xor
sub
js
push
jo
jmp
pop
jmp
test
fnstsw
pop
call
ret
or
aas
imul
inc
outsl
and
adc
mov
or
jae
pop
loope
lock
xor
jg
dec
xchg
dec
jbe
ror
loop
push
push
dec
xchg
imul
rcrl
loop
push
popf
bound
jmp
adc
repz
icebp
mov
sub
sbb
cwtl
pusha
incb
addl
dec
sub
lcall
scas
insb
int3
dec
mov
xor
test
in
out
push
mov
push
adc
ljmp
call
fwait
mov
cmpsl
cmc
les
mov
xorb
test
push
ljmp
imull
fcoms
mov
sbb
fimuls
cmpsl
lds
push
cmc
mov
lret
rol
and
xchg
adc
cwtl
nop
lcall
fistps
sbb
stc
cmp
and
push
fadd
cwtl
or
incl
xor
outsb
lcall
in
push
xor
dec
mov
jp
lcall
inc
pusha
xchg
push
push
shll
fsubrl
test
icebp
imul
dec
adc
decl
in
cmp
imul
out
mov
or
xchg
jae
xchg
mov
jg
jmp
scas
xchg
bound
add
jl
mov
or
sbb
ja
jmp
shr
loop
push
scas
push
bound
loope
lahf
sub
sbb
xor
or
mov
call
sbb
cld
adcl
pusha
cltd
xchg
ss
loopne
inc
std
sbb
fistpll
xchg
cmp
xor
mov
in
mov
call
dec
fdivs
xor
mov
xchg
sub
adc
and
fnstsw
ret
ja
decl
jbe
xlat
bound
xchg
sbb
cwtl
xor
cmp
mov
push
lret
lcall
mov
sub
iret
or
sbbb
cmpl
call
cmp
push
insb
je
loopne
xchg
cs
dec
jbe
sub
cltd
push
mov
lds
movsb
and
jb
xchg
push
inc
or
mov
sub
jno
aad
mov
push
xor
cltd
dec
mov
cld
lds
pusha
jae
jle
jno
jmp
cwtl
mov
dec
dec
rclb
and
jb
mov
xchg
in
loop
and
fcmovnb
or
pop
repz
mov
mov
test
test
fldt
sbb
fldenv
call
arpl
xor
sbbl
out
sub
pop
adc
decl
insl
or
out
adc
adc
cmp
out
jmp
adc
pop
nop
add
lock
sbbb
ljmp
add
jge
dec
aad
jmp
movsl
mull
dec
mov
std
push
cmp
mov
dec
stos
sti
ss
mov
jg
sbbl
pop
or
xchg
xor
loopne
or
cmp
xchg
incl
adc
inc
fwait
js
sahf
push
dec
jns
xchg
aaa
jno
imul
lds
std
decl
or
je
dec
insl
jp
roll
sbb
mov
icebp
add
cmp
mov
cs
or
xchg
rcrl
das
mov
incl
pop
ret
ljmp
mov
jnp
or
mov
repz
call
aam
leave
cmp
pop
adc
test
pop
aam
jno
mov
mov
dec
inc
sar
call
loopne
pusha
nop
insb
gs
sub
dec
cmp
lods
sub
call
mov
adc
lret
imul
pop
jge
push
pop
cmp
jle
in
call
mov
out
or
mov
inc
pushf
filds
aas
test
jmp
jmp
popa
stos
pop
xchg
jnp
xchg
mov
cmpsb
mov
adc
jae
cmp
jno
xor
mov
push
mov
mov
xchg
bound
cld
sbb
inc
jmp
xor
outsl
dec
clc
call
xor
sub
jno
mov
and
and
pop
lcall
or
cmpsb
adc
push
lcall
shll
pop
dec
xchg
jg
out
mov
mov
xchg
cmp
jg
pop
std
mov
pop
mov
cwtl
div
xchg
and
dec
das
lahf
cmp
decl
cmpb
and
jae
lcall
inc
dec
test
imul
add
fisttps
or
mov
rorl
mov
arpl
movaps
loope
test
jge
in
jg
test
mov
insb
and
push
push
jg
or
into
pop
push
idivb
sbbb
push
pop
sbb
shlb
xor
into
in
adc
add
jg
and
mov
jnp
out
mov
jge
pop
imul
pop
fucomi
push
out
dec
addr16
sbb
push
add
mov
push
pusha
aaa
pop
xor
call
std
pop
pop
data16
push
push
jne
int3
test
fisubrs
xchg
lret
inc
scas
inc
mov
add
call
and
pushf
sbb
lods
sbb
cmp
ret
lcall
xchg
hlt
das
aaa
cmpsl
sub
xor
xor
iret
adc
fdivr
mov
stos
nop
idiv
decl
add
push
shr
dec
inc
sarb
sub
dec
and
fwait
incl
dec
push
pop
mov
in
push
daa
sbb
or
jb
add
pushl
imul
aas
xorb
mov
jp
sub
push
hlt
in
bound
push
push
movsl
xor
and
adc
or
xor
daa
inc
adc
pop
jg
pop
gs
jecxz
cmpsb
sbb
outsb
push
and
add
mov
loope
in
sub
ret
call
pop
mov
lock
mov
popa
lret
mov
adc
lea
ljmp
sub
psrad
adc
pop
test
xchg
je
adc
cmpsb
xor
pusha
mov
mov
sub
mov
daa
int
or
sbb
movsb
ficomps
xchg
dec
fwait
in
dec
scas
cs
pop
cmp
in
mov
pop
lods
sti
push
pushf
and
xchg
lcall
scas
jmp
mov
cmp
jb
mov
mov
lods
add
pop
movsl
pushl
lods
dec
movsl
std
orl
mov
cmp
xor
jg
loop
pop
stc
into
inc
pop
sbb
and
leave
xchg
pusha
xchg
jmp
inc
mov
mov
lock
sbb
insl
stos
fs
not
sub
lcall
cmp
and
pop
jmp
xlat
movsl
lret
push
daa
mov
shlb
std
push
mov
jmp
repz
movsb
sub
or
mov
fs
sar
pushl
in
dec
aam
cwtl
and
mov
out
out
adc
fidivrs
out
add
pushl
inc
mov
cmp
inc
cltd
aaa
sbb
pop
xor
idivb
mov
jmp
inc
pop
inc
jo
mov
or
pop
adc
std
push
stos
rclb
adcl
daa
popf
sub
cmp
shl
push
jo
xchg
scas
lcall
scas
clc
outsl
clc
or
shll
or
cltd
jno
mov
sub
push
add
mov
int3
out
inc
fstps
ljmp
cli
icebp
mov
jg
push
and
inc
out
adc
xchg
push
fsubl
ljmp
xlat
mov
inc
ljmp
cmp
decb
popa
jmp
jmp
clc
adc
mov
gs
outsb
js
and
fisubrs
cmp
add
mov
ljmp
das
ss
cwtl
movsb
ret
mov
in
add
mov
cmp
jbe
sbb
or
add
lahf
xchg
fwait
ljmp
test
or
or
test
mov
enter
pop
cmp
or
lods
xor
mov
mov
xchg
add
fimuls
inc
in
int3
mov
xor
aad
lret
es
cmpl
push
and
sbb
sub
adc
insb
mov
out
into
icebp
in
dec
and
sub
push
xchg
ljmp
out
out
add
pop
cmp
cwtl
lock
mov
lcall
repz
and
icebp
data16
mov
daa
fcmovne
mov
or
xchg
mov
pushl
jle
or
dec
sbb
test
push
mov
xlat
mov
lcall
cmc
or
test
dec
int
dec
fwait
js
pop
mov
mov
inc
sub
out
clc
jmp
xor
in
add
std
out
jbe
mov
jp
dec
pop
lds
mov
jp
cltd
loopne
add
sbb
hlt
cltd
je
mov
pop
loopne
into
pop
and
lahf
cmp
out
cli
decl
adc
pusha
scas
movb
cwtl
out
pop
scas
out
cli
out
sbb
mov
nop
out
sub
sub
nop
adc
sarl
xchg
add
sbb
sbb
mov
inc
cmpb
xchg
fcomip
sti
jo
pop
addr16
imul
hlt
daa
fisubrl
stos
insl
lds
call
sub
mov
jmp
add
xor
and
fnstenv
mov
fs
dec
pusha
add
or
lret
or
shl
jbe
pushl
xchg
fdivrs
loope
je
pop
bound
popa
cmp
jecxz
xchg
mov
shrl
mov
addr16
ljmp
xor
sbb
insb
push
cwtl
fs
add
call
dec
jg
sub
cmp
sahf
aas
or
lods
push
dec
mov
add
data16
vpaddq
ljmp
and
xchg
repz
insl
xor
add
call
adc
lcall
fucomi
mov
dec
ja
hlt
mov
xchg
push
ljmp
pop
push
add
lret
stos
jae
jmp
pop
test
xor
adc
loope
std
and
add
sub
nop
outsb
and
repz
incl
or
add
fcmovbe
rcr
add
popf
push
in
inc
mov
xor
out
mov
pop
mov
hlt
fildll
sti
xor
jmp
outsl
clc
pushl
fbld
ds
inc
push
xchg
pop
jp
dec
fmulp
dec
jns
ja
lcall
leave
lock
jne
loope
in
sub
jmp
insl
aas
das
insb
outsl
mov
lods
pop
mov
pop
repz
adc
sbb
jp
enter
incl
out
test
mov
ss
sub
mov
nop
inc
sti
fcoml
in
ret
repnz
insb
lahf
dec
or
add
add
cmp
pushl
pusha
fsts
fisubrl
lahf
add
pop
nop
psadbw
push
sbb
dec
fcomip
imull
movsb
aad
jb
jnp
jns
arpl
fists
pop
jb
jae
mov
or
je
call
test
call
movsb
in
in
setle
mov
bound
xchg
mov
cmp
sub
jg
cmpsb
fcomi
sbb
jmp
loope
cmc
pop
or
int3
xor
insb
inc
dec
dec
add
ljmp
or
mov
clc
mov
enter
mov
mov
rolb
lea
cmp
jo
lret
ja
fstpt
in
enter
dec
aam
or
cmp
mov
cmp
aaa
cmc
aas
in
arpl
fcomip
ljmp
and
add
pop
stos
bound
leave
dec
xor
call
imul
ret
push
mov
dec
push
enter
repz
sar
pushl
xchg
lret
mov
ljmp
sbb
fxch
ljmp
pushf
sbb
pop
cmc
xor
push
mov
adc
icebp
pop
sbb
mov
cmp
adc
jl
dec
filds
jno
mov
sub
pop
pop
xor
cli
lcall
adc
push
mov
cwtl
pop
andb
in
lahf
sahf
xorb
pushl
jp,pn
xor
xor
shrb
jle
cmpl
lock
pushl
jo
jl
jae
ds
aaa
pushf
aad
adc
lods
jo
fisubs
es
call
inc
xor
xchg
xor
iret
push
jl
ffreep
mov
fwait
jmp
in
cmp
cli
stos
lcall
scas
pop
aaa
jecxz
cwtl
add
clc
sahf
fbld
sbb
ja
cmpsw
jle
out
fdivr
sbb
pushf
jbe
xchg
scas
push
pop
out
test
popf
mov
or
testb
jns
pop
pop
fisttps
decl
mov
add
mov
out
out
stos
cmp
pop
and
cld
out
and
test
ljmp
pop
push
ret
push
fdivr
ds
or
ljmp
sub
inc
jge
dec
jle
push
sarb
xor
pusha
mov
inc
push
pop
pop
pop
inc
push
mov
lahf
push
sbb
testl
mov
dec
jne
mov
test
push
je
xchg
filds
and
lcall
mov
in
xor
fsts
fsubs
mov
jg
pop
jp
mov
push
clc
dec
xchg
jno
dec
fidivs
adc
adc
cmp
pushl
nop
pop
add
into
data16
test
loope
loope
dec
xchg
mov
fdivrp
lcall
icebp
js
enter
dec
jno
into
push
rorb
dec
jmp
jae
push
pop
sub
out
pop
insl
ret
stc
mov
push
add
mov
add
jae
push
cmp
bswap
xchg
repz
out
mov
mov
lret
daa
jnp
aas
and
lret
subl
scas
dec
jae
pop
pop
mov
mov
cmp
popf
lahf
leave
clc
inc
xchg
lcall
jb
pop
pop
andl
inc
adc
les
sbb
and
call
xchg
mov
mull
inc
call
sub
mov
popf
pop
gs
lcall
fs
sub
mov
mov
push
shll
lret
dec
and
cwtl
rol
or
decl
test
cmc
fiadds
xchg
adc
adc
xchg
cmp
dec
cmpsb
or
mov
pushf
push
mov
cmp
sub
mov
ljmp
mov
cld
frstor
out
out
mov
and
jns
ds
jbe
push
adc
in
jns
jecxz
or
push
adc
jge
push
xchg
imulb
stos
sbb
idivb
sbb
dec
test
std
shlb
je
mov
dec
and
int3
sbb
sub
out
loop
add
lds
push
adc
popa
push
lock
mov
pop
pop
test
xor
jb
pop
jge
pop
shufps
ljmp
inc
jge
iret
add
scas
outsb
lods
adc
loop
push
push
adc
inc
cli
inc
pushl
int3
cwtl
cmpsb
and
sbb
fadd
sub
sub
ja
inc
pop
push
decl
lcall
dec
xchg
lods
jg
mov
popa
push
scas
push
test
mov
addr16
sbb
fwait
ffree
sahf
sbb
fildll
fistpll
mulb
cmp
or
jmp
sbb
jb
pop
jecxz
adc
or
cmp
lcall
clc
lcall
dec
add
movsl
jo
aas
jg
incl
add
nop
icebp
push
jg
sahf
push
rorb
es
rorl
cmpsb
movsb
call
popf
jbe
out
and
and
xchg
pop
inc
fimull
pop
sbb
pusha
pop
or
imul
inc
lret
adc
sbb
pop
cwtl
add
sub
mov
gs
scas
imul
sbb
cld
test
cmpsl
dec
mov
ljmp
cwtl
sti
popl
mov
cs
mov
jb
dec
call
int
inc
sbb
das
repz
dec
dec
hlt
xchg
movsb
jecxz
shl
cmp
call
les
sub
iret
jno
and
jae
pop
aam
xor
sbb
sub
fincstp
incl
addr16
enter
mov
xor
negl
adc
xor
decl
sahf
scas
inc
loope
mov
pushf
scas
outsb
inc
je
fcoms
aam
sbb
loope
adc
insb
sbb
push
mov
repnz
push
mov
mov
or
movsl
pop
mov
pop
arpl
pop
inc
popf
sbb
aas
cmpsl
imul
or
fwait
mov
enter
lcall
incl
dec
lods
je
mov
stc
in
imul
out
insl
xor
inc
adc
adcl
cmp
outsb
mov
ja,pt
jns
xchg
adcb
fcmovnb
adc
mov
mov
add
inc
xchg
sub
push
cmp
push
fldl
mov
mov
mov
push
mov
clc
cmpsl
jbe
or
lds
pop
incl
cld
enter
aam
lods
aam
filds
cmpl
clc
mov
int
stos
jecxz
sbb
enter
and
inc
mov
leave
xor
std
push
dec
inc
aas
ljmp
fbld
data16
daa
xchg
jle
sbb
mul
inc
ljmp
popa
xchg
or
ret
loop
popa
push
xchg
jo
cmp
cmp
dec
cli
push
incl
lock
mov
xchg
cltd
jbe
xchg
aas
loope
mov
leave
inc
inc
sbb
pop
or
push
adc
ds
iret
push
je
imul
mov
scas
mov
xchg
pop
push
mov
outsl
in
es
add
call
dec
sbb
inc
lret
addr16
mov
cmp
add
fsub
mov
nop
loope
xchg
js
xchg
in
lahf
or
test
dec
in
sbb
decl
andb
jmp
and
pop
aaa
pop
push
movsb
pop
in
jb
pop
scas
idivl
and
ljmp
inc
and
and
push
adc
mov
ss
sub
imul
mov
dec
and
rcll
inc
mov
lock
sub
cmp
lds
jae
pushl
cld
mov
icebp
stos
push
adc
imul
pushf
sub
imul
fcmovu
adc
and
cmp
sbb
mov
arpl
shl
lahf
xlat
inc
decb
lcall
addb
mov
and
lahf
imul
aaa
and
insb
fimuls
lods
nop
mov
cmp
jmp
ret
pop
rorl
cmp
fwait
xor
enter
arpl
inc
jmp
std
mov
in
xchg
sub
mov
mov
daa
daa
mov
or
adc
mov
sbb
call
ljmp
jae
mov
out
loope
adc
ds
fdivrl
cld
ljmp
xchg
setle
sbb
hlt
mov
divb
popf
pop
int3
int3
jmp
fbstp
sub
jbe
inc
out
mov
in
stos
pop
add
dec
subl
in
mov
inc
negl
out
sub
push
mov
enter
and
call
jae
pusha
repz
das
or
or
cltd
scas
mov
fstl
rcr
mov
rcr
mov
cwtl
add
lods
nop
testl
nop
addr16
lock
aam
pop
cmp
lcall
pop
sub
ss
dec
mov
sbb
das
push
xchg
leave
in
sub
out
xchg
sub
xor
fwait
mov
pusha
mov
das
out
addb
cmp
ds
icebp
lcall
add
ret
inc
lcall
mov
in
lcall
jns
xchg
push
inc
lcall
xor
loop
pop
inc
push
lea
push
call
push
dec
outsb
aas
jecxz
shrb
jecxz
lods
fisubrs
xchg
orl
jp
lcall
pop
roll
sbbl
mov
cld
out
movsl
pop
jns
or
ljmp
sub
iret
aam
out
mov
lea
aam
jbe
je
es
or
movsb
dec
insl
xlat
cmpsb
adc
stos
mov
stos
pop
cmp
arpl
les
lcall
or
out
add
lcall
ret
mov
js
shrb
pop
fsub
push
or
and
xlat
xchg
sub
cmp
pop
or
sbb
out
ljmp
xor
xor
xchg
movb
mov
push
and
decl
mov
movsl
sub
or
dec
mov
mov
or
movsb
mov
out
pop
scas
loop
mov
adc
ljmp
inc
int
add
mov
in
push
inc
icebp
int3
adc
gs
sub
mov
rorb
jecxz
ret
adc
mov
xlat
push
fcoms
je
outsb
popa
std
mov
push
loop
jp
pop
pop
dec
out
push
adc
cltd
mov
loop
bound
loopne
sub
loopne
cmp
lahf
sub
sub
icebp
mov
cmp
stos
lock
imulb
jno
idivb
ljmp
mov
stc
lret
mov
nop
test
and
sbb
scas
in
cmpl
bound
fwait
mov
fldcw
mov
lcall
fldcw
dec
sahf
mov
loope
incl
pop
inc
pop
lret
mov
sbb
sbb
js
add
std
mov
push
and
mov
pop
ja
fistpl
std
mov
fsubs
mov
cmp
or
cs
xchg
loopne
arpl
xchg
adc
lods
clc
sarb
or
pushl
inc
mov
in
sbbb
xor
jb
cmpsb
inc
push
sub
sbb
call
pop
inc
fwait
out
push
xor
loope
enter
mov
pushl
xlat
inc
enter
mov
mov
mov
push
xor
ja
pop
sub
xchg
dec
sbb
adc
xor
xchg
sbb
je
dec
incl
mov
fsubs
fucompp
or
mov
mov
xor
je
cld
decl
imul
nop
push
mov
nop
mov
pop
sahf
test
xchg
fisttpl
pusha
je
pushl
xor
fadd
adc
subl
and
or
andb
fdivr
mov
jo
mov
cmp
or
jmp
and
das
push
lock
pop
dec
mov
lcall
test
cld
xchg
xor
jecxz
cmp
pop
xchg
fcomip
ja
cld
clc
inc
repnz
cmp
add
sti
sub
cmp
inc
es
lahf
or
int3
daa
mov
xchg
mov
pop
fmul
decl
faddp
mov
and
mov
test
jmp
cmpsl
pop
ret
sbb
mov
xor
loop
shr
mov
xchg
push
xchg
xor
pop
mov
pop
pandn
xchg
mov
lcall
xchg
xor
aas
xchg
push
add
subl
clc
bound
xchg
leave
or
jno
iret
inc
pop
mov
push
mov
daa
adc
pop
xor
incl
daa
int
in
mov
cwtl
in
out
mov
enter
int
cmp
push
add
andl
push
daa
push
inc
fildl
insb
and
or
pop
and
push
test
cwtl
bound
jns
xchg
sub
mov
or
mov
mov
testb
pushf
mov
mov
inc
sbb
jmp
jge
ret
lcall
dec
mov
xchg
data16
cmp
insb
sbb
push
pushf
psrlq
jmp
pop
pop
jmp
or
sbb
mov
pop
mulb
mov
or
inc
fdivl
adc
jmp
lret
sbb
pop
iret
nop
data16
std
cmpsl
enter
sarl
sbb
fwait
test
cmp
rcll
adc
push
popf
std
fists
jg
aam
lods
adc
and
xchg
incl
or
inc
mov
adc
jmp
jns
addb
iret
jno
out
popf
cmp
lcall
or
mov
or
or
mov
out
je
mov
mov
and
sub
xchg
jae
mov
jbe
xor
mov
aaa
or
cmp
fsubrs
movl
cltd
ljmp
adc
mov
divb
jmp
add
ud0
ljmp
nop
add
in
std
cmp
pop
call
insb
adc
xlat
stc
fisubrl
jmp
enter
test
cmp
adcb
pushl
test
icebp
adc
jl
add
inc
stc
and
pop
scas
insl
push
repz
imul
pop
add
or
das
mov
push
jmp
mov
mov
fwait
and
cmp
inc
movsl
and
pop
ljmp
xchg
dec
mov
lcall
or
or
stos
stos
test
inc
sbb
into
mov
xor
cmpsb
addr16
cmp
or
leave
insl
nop
lret
call
xchg
jo
mov
mov
xor
jp
mov
jle
aaa
mov
pusha
adc
lods
mov
test
mov
aas
das
in
xchg
fldcw
in
inc
xchg
js
cmp
push
mov
std
mov
push
psrld
pushl
cmp
mov
test
insb
jecxz
es
add
mov
xchg
mov
or
mov
jp
cmc
mov
xchg
adc
into
inc
fdivs
insb
jp
push
jl
sbb
loopne
ficoms
test
pop
xlat
ret
push
mov
in
hlt
dec
imul
lcall
sub
das
and
dec
dec
pop
xchg
mov
mov
incl
dec
aas
hlt
scas
jle
sub
xchg
sub
lock
sub
ror
out
and
lcall
clc
fists
arpl
test
incl
sbb
pop
jl
loopne
fisubrs
pop
jno
imul
aas
aad
pop
xchg
push
xor
or
shl
int
mov
xor
outsl
push
iret
push
dec
mov
incl
shll
cmp
flds
fiaddl
lea
lods
enter
call
cmp
pop
mov
adc
sub
rorb
out
in
stos
mov
push
sub
fcmovne
jg
push
cli
ljmp
push
sti
mov
fucomip
int3
aaa
mov
jg
pop
faddl
sbb
add
outsl
pop
inc
int
push
mov
ljmp
in
jbe
divl
scas
stc
mov
jp
sahf
pop
cs
cmp
cmp
ja
into
dec
xchg
sahf
cltd
faddp
adc
push
push
mov
stos
lcall
or
aaa
popf
loop
sbb
cmp
cli
test
lret
push
das
dec
add
mov
push
test
lret
mov
mov
push
iret
mov
inc
cld
popa
sbb
movsb
mov
push
inc
inc
dec
mov
xor
out
out
mov
popa
scas
mov
pop
xchg
rcrl
add
pushl
fldcw
fcoms
les
mov
adcl
mov
int3
jbe
sub
bound
scas
cmp
out
inc
mov
incl
xchg
pushf
cltd
test
pop
mov
ss
push
jae
js
ret
cmpsb
push
popf
insb
cmp
call
lcall
cmp
ljmp
lcall
mov
jno
call
jecxz
and
in
jnp
jns
push
push
decl
lock
mov
fwait
jo
shlb
xchg
mov
ljmp
cli
call
addb
sbbl
ret
pop
jnp
or
jmp
addr16
call
jmp
lds
jl
in
xor
cltd
dec
sbbb
cmpsb
popl
adc
xchg
jo
call
ficompl
mov
rclb
loopne
xor
xor
popl
xchg
fsubrs
pusha
repnz
lcall
movsl
mov
in
scas
jno
mov
ljmp
mov
inc
or
arpl
lret
cmpsl
adc
xchg
pusha
mov
jmp
cmp
rcl
xor
and
sub
xor
jp
adc
ret
mov
jns
mov
jb
xor
jl
scas
lods
inc
jae
movsl
pmovmskb
xchg
clc
sbb
jne
adc
cmp
pop
dec
jle
xchg
dec
and
pop
fnstsw
push
jne
jecxz
add
call
sbb
adc
das
mov
jmp
and
xchg
lock
bound
daa
mov
rol
pushf
sti
testl
xorb
repz
inc
pop
pop
mov
loope
inc
arpl
jb
lods
push
push
jb
mov
call
xchg
rorb
cmp
push
pushf
sbb
and
ljmp
jle
cltd
rcrl
push
scas
mov
leave
push
cli
out
ja
sub
ds
and
cld
jmp
lea
ds
insl
or
jg
iret
rol
cld
push
mov
mov
xor
scas
mov
fxch
mov
repz
jmp
andb
dec
pop
dec
out
xor
out
add
jge
cmp
xor
xchg
dec
adc
cmpsb
rol
mov
scas
inc
cmpsl
mov
fsubs
cmp
ret
or
jp
and
mov
ret
or
popf
std
pop
je
sbb
pushl
stos
inc
sub
cld
loopne
das
aas
orl
and
mov
sbbb
mov
pushl
daa
cmp
cmp
jnp
rcl
lods
lock
insb
jo
call
mov
lds
es
addr16
cli
push
int
popa
js
push
ljmp
ljmp
or
clc
dec
sub
sbb
add
xor
inc
mov
fwait
jecxz
decl
lcall
xchg
hlt
jg
lods
lcall
adcb
dec
push
pop
dec
insb
inc
pop
fisttps
in
pop
enter
bound
jnp
sbb
ud2
dec
fdivrs
jle
hlt
test
mov
mov
inc
push
sub
dec
push
xor
scas
jg
and
mov
ret
test
mov
cwtl
stc
push
iret
xor
imul
pop
dec
in
mov
mov
call
jno
push
sbb
pop
adc
fldt
cmp
pop
cmp
je
fnstsw
out
clc
pop
js
lds
out
arpl
jmp
inc
lret
ljmp
in
add
push
xchg
inc
dec
outsb
insb
call
lcall
inc
inc
mov
dec
sbb
leave
pusha
lahf
push
cmpsb
xlat
out
adc
sti
sbb
pushl
cli
ret
cmp
out
cmc
fsubr
xlat
inc
mov
je
push
js
sbb
push
xchg
inc
jl
sar
jo
xor
aam
das
sbb
jg
push
bound
inc
shlb
jnp
sub
mov
jnp
insb
mov
pusha
hlt
bound
jmp
out
decb
scas
adc
inc
lock
stos
fiaddl
dec
das
insb
jge
and
jecxz
mov
pushl
and
sahf
mov
dec
sbb
mov
arpl
out
mov
ljmp
add
xchg
xchg
cs
jne
fadds
addr16
or
call
popa
stos
lcall
inc
adcl
jnp
popf
lret
stc
decl
pusha
insb
dec
mov
jl
std
subb
inc
jle
das
clc
pushl
adc
aad
pop
pop
nop
mov
mov
push
out
out
cmp
lret
push
mov
rorb
imul
or
cli
mov
leave
pushf
clc
scas
clc
jmp
int3
cmc
in
push
inc
shlb
xor
xchg
repnz
fadds
decl
xchg
into
xor
inc
pop
inc
pop
xchg
sti
sti
ljmp
pop
not
cmp
adcl
pop
leave
sarl
call
mov
adc
hlt
and
add
mov
pushf
dec
push
xor
mov
xchg
mov
push
jl
mov
enter
test
pop
out
mov
in
mov
repnz
push
data16
pop
out
and
mov
cmp
jo
jbe
in
jg
ljmp
hlt
inc
loope
test
aam
adc
daa
xchg
sbb
cs
loope
dec
push
jnp
fs
ljmp
clc
inc
sbb
and
aam
or
hlt
mov
fnsave
pop
out
jns
addr16
ljmp
sbb
and
sub
mov
sbb
fdivs
cld
pop
mov
int
ds
call
xchg
pop
mov
sub
xor
rcrb
or
xchg
push
aas
fdivl
dec
dec
sahf
cld
sbb
pslld
pop
cwtl
mov
jb
mov
clc
add
decl
adc
daa
orl
mov
rclb
mov
cltd
test
mov
adc
mov
into
and
rcrl
adc
add
sarl
xor
jns
mov
decl
sbb
pop
mul
pop
lds
sbb
mov
mov
jmp
incl
push
cld
lods
dec
pop
xchg
pop
pop
fdivl
cltd
mov
cltd
ja
hlt
out
jmp
jg
sub
pop
std
shrb
pop
push
sub
add
adc
sahf
in
jmp
add
into
push
fxch
dec
bound
insl
dec
cmpsb
orb
decl
decl
dec
int
and
xchg
dec
push
je
test
lret
loopne
sahf
fidivrs
jnp
scas
and
cvtps2pi
inc
stos
fadd
mull
push
sbb
sbb
cld
decl
in
hlt
push
jno
adc
push
outsl
xor
out
loope
lret
pop
aas
xor
pop
xor
add
cmp
in
nop
fisubs
testl
scas
pusha
mov
or
sbb
sub
cmp
jge
or
lcall
xchg
xor
push
inc
bnd
add
lds
out
mov
mov
rorb
adc
inc
cs
mov
jo
or
cld
fadds
mov
mov
xchg
inc
pop
push
jns
cmp
push
inc
insl
push
push
xchg
mov
movsb
ljmp
mov
inc
and
inc
xor
mov
in
lret
cmp
decl
js
and
sbb
push
mov
dec
pop
mov
jns
imul
fsts
cs
aad
jne
xchg
dec
mov
xor
and
lret
xchg
jmp
inc
sbb
ljmp
inc
inc
pop
mov
out
inc
or
js
pop
aaa
lret
arpl
pop
sub
loopne
jmp
sahf
ja
dec
js
clc
adc
or
lahf
mov
mov
push
dec
cmp
mov
push
push
ret
nop
dec
sub
or
ret
lcall
jmp
or
cmp
lods
mov
dec
inc
fisubrs
movsb
sub
pop
mov
inc
mov
pushl
adc
jae
dec
inc
xchg
mov
mov
lcall
int
rcl
and
sbb
shll
push
lods
xor
lahf
les
xchg
and
lods
incb
loopne
js
stos
ja
push
adcl
lea
je
call
mov
shr
mov
in
cwtl
ror
cmp
inc
mov
sub
dec
cli
sub
pop
inc
aad
out
sti
jl
das
cmp
repz
out
add
jmp
arpl
mov
movsl
add
data16
push
sub
scas
movsb
cmpsl
mov
push
pop
in
lea
addl
iret
or
rcrb
sbb
adc
and
push
loopne
mov
pop
movsl
sub
sarl
aaa
add
mov
pushf
jb
enter
sub
mov
add
pop
cs
pop
pushf
cmc
xchg
test
sbbb
hlt
decb
sbb
call
pop
push
movsl
xor
fwait
inc
rolb
das
push
or
pushf
push
mov
call
adc
or
cltd
or
and
in
jg
and
mov
lcall
roll
mov
in
xor
fiaddl
call
adc
mov
test
out
mov
dec
ja
ljmp
push
xchg
cmp
lcall
sub
jmp
xchg
add
lcall
xchg
pop
clc
call
cwtl
lds
out
sbb
call
cmp
popa
mov
out
and
fidivs
xchg
cmp
dec
movb
sbb
add
test
out
xchg
imul
cmpsl
imul
push
in
push
push
ljmp
ficomps
scas
divb
fchs
pop
cmp
call
lahf
ficompl
add
dec
es
int3
or
mov
rep
and
jg
ds
jecxz
inc
dec
mov
or
test
outsl
sub
dec
add
push
xchg
int
and
fistpll
lret
dec
sub
fmuls
jg
mov
es
lock
push
adc
xchg
adc
cld
mov
scas
xchg
leave
pop
pushl
test
jmp
push
sub
adc
mov
pop
pop
or
sar
addr16
nop
pusha
ffree
scas
inc
mov
add
mov
cmc
add
adc
or
jg
mov
pop
dec
xor
es
lea
pop
jb
ljmp
fcmovbe
mov
mov
pop
test
rcr
push
aas
mov
mov
incl
mov
popa
out
das
shr
push
ret
pusha
mov
lock
add
call
icebp
mov
das
xchg
scas
je
add
test
xor
jmp
mov
lea
push
dec
jmp
lods
or
fmul
pusha
sarb
mov
call
push
lds
xchg
mov
pop
inc
int
jns
sbb
aam
fdivrl
dec
sub
adc
nop
in
lcall
mov
stos
fildll
mov
mov
mov
add
or
cwtl
test
cmp
or
mov
mov
xchg
subb
mov
decl
stos
and
loop
push
nop
mov
data16
and
sarb
ljmp
test
inc
ja
lods
mov
inc
jno
cld
stc
orb
push
inc
add
incl
mov
ja
enter
mov
es
inc
push
inc
aad
arpl
lret
decl
in
mov
sarl
movsb
je
fisttpl
mov
or
jmp
mov
mov
ljmp
cmp
xchg
icebp
rcrl
push
int
sub
xchg
jecxz
cmp
lcall
daa
mov
aaa
bound
sbb
mov
cmp
pushw
gs
out
cmp
pop
nop
imull
mov
adc
jmp
or
pop
and
insb
lods
sti
aas
testl
adc
mov
sub
add
sub
inc
ret
out
in
xchg
stos
xor
filds
lock
dec
jns
test
or
jmp
popf
jno
lret
je
xchg
mov
pop
jmp
ja
decl
sub
test
dec
test
stc
and
add
cmp
decl
jno
sbb
cwtl
addb
out
jbe
mov
pop
dec
sbb
pushf
cmp
pushl
lret
jne
mov
mov
xor
call
pop
shr
movb
inc
mov
mov
sbb
and
adc
mov
jae
test
inc
jl
cmp
call
test
jnp
orl
in
xor
ret
in
incl
das
or
pop
or
pop
in
hlt
push
mov
sub
lcall
decl
hlt
daa
mov
ss
movsl
cli
movsl
xchg
daa
hlt
pop
jp
dec
je
inc
push
pushf
cltd
sbb
mov
push
push
test
and
or
rclb
mov
mov
std
loop
cltd
fs
imul
nop
popa
ror
data16
jns
and
fbld
repnz
sub
decl
gs
negb
jge
push
lcall
pop
stc
adc
mov
repnz
push
data16
ret
rep
call
movsl
insl
adc
push
inc
mov
cmp
mov
movsl
cmp
sbb
rolb
incl
mov
das
mov
vmptrld
arpl
xor
pop
hlt
ja
pushl
std
incl
lods
ret
adc
xor
outsl
mov
loope
cmp
popa
ljmp
dec
popf
pop
push
push
outsb
mov
xchg
ds
dec
xchg
lcall
mov
inc
lret
cs
cs
add
fnstsw
push
push
inc
xchg
jg
repnz
cs
mov
adc
fisubs
push
lahf
mov
das
mov
pop
add
add
mov
lret
jg
movsb
xor
mov
cmp
loopnew
decl
popa
cmp
enter
push
mov
xchg
call
les
fldcw
repz
jle
and
mov
inc
pop
add
jecxz
jg
lds
xor
sarl
lods
fsts
or
and
insl
push
rclb
leave
push
dec
xor
bound
call
repz
push
imul
inc
mov
test
push
and
je
das
je
int3
sbb
call
fmull
fildl
cli
out
mov
mov
jmp
push
fs
push
and
sbb
aad
mov
lahf
inc
out
std
push
jnp
stos
jge
mov
cmpsl
jle
je
out
mov
call
mov
lahf
icebp
xlat
dec
in
xor
jbe
sub
call
mov
sbb
sub
fcoml
xchg
sbb
xlat
mov
lock
mov
ljmp
dec
pushf
pop
dec
xor
mov
jge
cmc
outsw
cmpsl
add
filds
icebp
mov
sahf
addl
clc
nop
stos
gs
cmp
dec
mulb
jns
inc
lahf
fdivl
adc
repnz
test
cld
jmp
repz
cmp
dec
das
wrmsr
pop
fdivr
push
xor
dec
sbb
xchg
sub
das
fcomps
jg
dec
add
push
jae
xchg
lcall
ss
jmp
xor
ret
lcall
mov
lds
mov
cld
test
lcall
dec
adc
in
mov
xchg
movnti
mov
lahf
or
hlt
xchg
sub
test
icebp
pushl
dec
movsl
pop
sbb
in
aaa
inc
sub
fs
ljmp
xor
inc
adc
add
push
lods
cmpsb
mov
out
add
mov
ret
adc
pop
xchg
es
in
push
push
cld
jg
push
mov
das
fs
push
mov
int3
mov
sbb
lock
xor
ljmp
or
popf
xchg
inc
ret
sarb
ss
popf
mov
jecxz
sbb
fwait
mov
cs
incl
mov
outsl
jg
and
not
add
sub
into
push
fcmovb
inc
push
add
hlt
pop
or
insl
rcr
jl
call
adc
push
popa
xor
scas
pushf
das
fdiv
cmpb
push
ss
jmp
mov
rorb
loop
inc
gs
das
loopne
scas
inc
insl
out
or
jmp
cmp
jge
mov
lret
jbe
inc
std
fisttps
and
outsb
inc
sub
push
cld
popl
das
or
imul
cltd
jbe
push
mov
test
call
adc
outsb
cmp
fdivs
je
mov
stos
out
repnz
mov
int3
pushl
cmp
popa
sub
lds
stc
cmpl
ds
outsb
test
in
cmpsb
out
or
dec
jp
dec
cmp
cmp
ljmp
fs
lret
leave
pop
ljmp
push
cli
dec
loop
mov
fucomp
cmp
add
xor
pop
mov
call
inc
std
jp
mov
push
fdivrs
cmp
outsl
xchg
sti
lret
fcomip
push
pop
sbb
pusha
dec
xchg
in
flds
jge
mov
cs
sbb
jg
fnstcw
pushl
pop
rol
cmp
jecxz
aaa
ret
cmp
add
jno
dec
push
add
or
jmp
pusha
lahf
aam
imul
test
pop
es
mov
add
int3
mov
pop
out
xor
pushf
inc
adc
mov
sbb
dec
icebp
pop
xchg
leave
inc
orb
adc
mov
cli
xchg
rorl
rolb
rcrb
lcall
pushf
mov
mov
test
imul
rcll
xchg
jno
add
movsl
test
stc
jle
and
mov
call
repz
aas
and
push
adcb
sahf
es
stos
fwait
cmp
in
jp
sub
cmp
and
add
pusha
xor
and
push
xor
jg
hlt
sahf
sbb
ljmp
xlat
lret
push
xor
mov
pop
pop
scas
xchg
out
push
in
push
scas
mov
dec
fistpll
jne
aam
dec
xchg
inc
push
mov
pop
sub
xor
fistps
sysret
mov
push
xor
scas
jo
inc
mov
clc
jb
out
outsl
loope
push
lock
out
loopne
push
sub
xchg
incl
test
stc
mov
jecxz
pop
jns
xor
in
bound
cwtl
fsubrl
clc
jg
icebp
push
or
idiv
insb
sub
pop
loopne
add
jae
sbb
cmp
shl
lcall
out
dec
xchg
dec
push
push
out
mov
mov
pop
incl
fbld
fadds
add
push
and
mov
pop
icebp
inc
and
push
and
adc
lcall
sbb
jb
pop
aaa
pop
roll
ljmp
cmp
sub
leave
sub
and
push
shl
rorb
sub
andl
or
jmp
addr16
mov
iret
outsl
andl
pop
push
push
jnp
push
fdiv
mov
inc
stos
inc
add
repnz
ljmp
leave
rolb
scas
aaa
pusha
loope
jmp
and
push
push
sub
mov
jmp
xchg
incl
or
enter
adc
dec
jmp
mov
mov
out
cmp
push
cmp
dec
inc
xchg
jmp
mov
inc
lret
jmp
inc
cmpsb
sbb
pusha
std
pushf
shll
aaa
xchg
jmp
xchg
sti
stos
sbb
push
add
mov
sub
dec
mov
mov
incl
adcl
inc
dec
aad
repz
sbb
movsb
mov
icebp
pop
sahf
pop
pop
xor
test
in
call
push
fists
lret
dec
jmp
xor
mov
lds
aad
mov
or
adc
aam
or
inc
jp
lcall
mov
add
cmpb
xchg
jae
sbb
jecxz
shl
mov
rcrb
incl
mov
into
dec
leave
insb
insb
push
adc
enter
mov
ljmp
out
cmp
shlb
mov
gs
addr16
xor
mov
loopne
push
scas
and
xchg
mov
push
flds
mov
decl
cmpsl
addb
or
or
push
cmp
std
in
xchg
mov
movsb
cmpsb
push
out
decl
out
or
mov
jmp
cmp
fldt
and
jbe
addr16
cli
decl
push
movsb
iret
inc
fwait
sti
nop
outsb
sbb
xchg
pop
or
push
popf
cwtl
or
push
stos
lods
mov
xchg
dec
jo
push
sbb
adc
push
inc
mov
or
push
and
dec
mov
fsubp
fimull
lcall
fidivs
xchg
mov
jg
arpl
push
into
dec
hlt
gs
pop
dec
xchg
pop
aam
cmpsb
push
rep
pop
data16
mov
incl
adc
mov
lcall
xor
lods
ss
outsl
shlb
push
adcb
mov
add
cmp
xchg
jae
sahf
addr16
in
popf
jae
scas
xchg
jg
subb
jmp
jns
pop
sub
aad
shrb
jb
js
stos
cmp
mov
test
out
sub
mov
fmuls
mov
sbb
ljmp
nop
dec
ss
sub
sbb
movsb
mov
cmp
pushl
cld
call
data16
mov
push
loopne
sbb
mov
idiv
addb
lock
jge
roll
outsb
aaa
arpl
pop
rclb
decl
jp
fwait
inc
sub
jg
jg
in
mov
mov
cltd
xor
jns
iret
add
mov
mov
call
sub
add
push
lods
dec
scas
or
pop
test
mov
cmp
mov
loopne
push
ljmp
in
xor
inc
es
cmp
and
dec
mov
push
adc
mov
lds
aaa
repnz
rol
cmp
cltd
fildll
adc
push
insb
push
dec
mov
fbld
mov
daa
mov
lock
mov
xchg
movsb
test
inc
sahf
out
sbb
mov
ljmp
sbb
stc
mov
dec
repnz
jae
insl
loop
cmpsl
or
mov
incl
stos
stos
incb
add
test
adc
jbe
jo
xchg
cwtl
sbb
mov
call
xor
inc
mov
dec
push
incl
pushf
cs
icebp
in
test
pop
inc
mov
adc
xchg
push
movsb
stos
and
xor
or
repz
adc
inc
pop
adc
ljmp
scas
pushl
lcall
dec
loopne
cmp
xlat
adc
in
mov
mov
incl
xor
push
xor
jp
mov
jp,pt
loope
aaa
xor
scas
stos
mov
sub
push
je
cmp
roll
push
dec
push
dec
push
jae
jbe
lahf
add
sbb
adc
fucomi
fstl
aad
sbb
mov
shr
icebp
in
out
hlt
cwtl
shll
int
test
sbb
fidivl
cli
and
dec
sub
sub
pop
sub
cmp
ficoml
xlat
adc
fistpll
clc
std
les
adc
enter
cltd
repz
mov
jns
xchg
lea
adc
js
xchg
insl
inc
sar
mov
xchg
in
in
test
adc
add
cltd
fwait
mov
cs
out
std
call
in
jge
or
iret
sbb
mov
inc
adc
fsub
mov
ljmp
call
into
lods
movsb
pop
jecxz
lock
adc
loope
mov
int3
xchg
pop
hlt
outsl
incl
je
mov
or
cmc
xlat
pop
jmp
mov
sbb
cmp
mov
lret
and
pop
cmp
inc
stc
imul
xor
xlat
das
sbb
lcall
incl
dec
sbb
inc
sbb
enter
xchg
incl
aad
lods
add
dec
mov
nop
jo
fimull
hlt
inc
sbb
push
ss
jne
hlt
pushl
cld
fisubrl
out
xor
lret
pop
mov
and
hlt
sbb
jo
out
clc
call
cmp
std
xor
adc
adc
ret
pop
insl
jmp
jmp
ud0
decl
jecxz
sbb
xchg
int3
dec
cmpsl
cld
adc
mov
mov
stos
inc
jl
test
decl
mov
ja
cld
mov
dec
je
movsb
mov
aad
cmc
test
sub
lcall
jae
ja
fs
dec
jg
and
sub
ss
pop
insl
cmpsb
fs
sbb
jg
inc
lcall
mov
pop
add
cld
ljmp
cmp
popa
xchg
mov
test
mov
pop
sbb
pusha
popf
jmp
jg
dec
test
push
or
cmp
xchg
jge
shl
je
sbb
imulb
imul
mov
sti
into
mov
inc
push
xchg
ret
call
daa
daa
out
ret
xor
lcall
lds
cmp
je
jecxz
pushl
popf
mov
mov
dec
cmpsb
ja
and
fidivrl
push
pushl
add
push
sbb
fsubrs
push
test
push
repz
xchg
sub
popa
fidivrl
mov
jge
and
hlt
push
cli
test
add
cmpsl
jne
xchg
test
pusha
jmp
pop
jg
div
xchg
icebp
hlt
or
push
stos
jae
xchg
es
pushl
xor
push
pop
inc
push
jmp
sub
dec
in
sbb
jne
aas
adc
ljmp
jge
jecxz
xor
push
xchg
scas
and
mov
fidivl
sbb
mov
mov
or
pushl
xor
and
es
inc
shrb
mov
and
loop
incl
mov
mov
icebp
arpl
fwait
lahf
out
mov
xor
bound
sub
aas
cli
xor
mov
sbb
iret
decl
mov
mov
dec
push
addr16
inc
out
sbb
imul
dec
jae
incl
in
cmpsb
shlb
xchg
pop
or
jae
inc
inc
sbb
pop
notb
mov
fdivr
xor
lahf
inc
cmpsb
add
ljmp
out
cmp
mov
and
push
fstpl
ljmp
xchg
adcl
sti
stos
iret
mov
je
xchg
repnz
lea
das
dec
add
ljmp
cli
mov
cmpsl
stc
push
fidivl
mov
daa
add
jmp
es
add
cmpsl
push
add
inc
dec
std
gs
movsl
stos
daa
imul
mov
out
lcall
push
lcall
notl
les
jl
das
sar
push
mov
loop
xor
fs
push
fs
xchg
add
mov
call
cmp
sahf
push
dec
jmp
cltd
xchg
ja
cmpsl
pushf
lsl
pandn
insl
inc
cld
xchg
mov
cmp
jl
or
arpl
leave
mov
xor
leave
push
xchg
into
incl
sbb
mov
dec
xchg
cmp
fdivl
push
mov
aas
sti
push
lcall
scas
xor
mov
orl
cs
rol
pusha
scas
mov
pop
push
add
pushl
dec
jmp
mov
or
adc
dec
sti
mulb
dec
rcpps
es
dec
pop
gs
xor
mov
dec
jb
dec
inc
xor
push
ss
in
das
add
loopne
inc
test
adc
xchg
cmp
arpl
call
dec
mov
ss
mov
pop
fstl
fistpll
aaa
or
jg
sub
out
fdivr
decl
xchg
mov
ret
jge
pop
jge
push
jno
das
push
adc
or
incl
loope
iret
pop
jge
push
test
mov
add
repz
lret
sub
sar
jmp
sbb
out
test
adcb
mov
sti
xchg
inc
fisubs
mov
add
inc
or
jmp
mov
imul
push
pop
gs
gs
sbb
jle
or
mov
iret
clc
and
aad
push
inc
sbb
cmp
std
and
hlt
nop
fisttps
ret
cmp
mov
jle
mov
decl
lret
xor
fcmovbe
inc
testb
pop
ror
ljmp
mov
jmp
sbb
add
jb
nop
iret
xor
cs
shll
mov
incl
cld
into
push
out
sub
jmp
or
push
cli
or
rorb
call
xor
int
js
mov
rcll
mov
push
clc
or
ljmp
or
outsb
negl
cmp
pop
mov
cmc
lea
fcmovnbe
pusha
lahf
dec
in
jmp
ljmp
cltd
and
lea
repnz
cmp
mov
decl
aad
ss
loope
jg
int3
pop
adc
pop
dec
sahf
push
pop
pushl
repnz
adc
mov
cld
lret
jecxz
test
mov
decl
movsb
and
sahf
dec
push
push
and
pop
xor
nop
lret
cwtl
out
enter
hlt
es
or
xchg
ljmp
mov
jnp
add
loopne
xchg
in
cmpsl
lds
inc
fisttps
jle
lcall
ljmpw
sbb
test
aad
mov
mov
aad
push
das
call
inc
mov
nop
cwtl
sbb
mov
push
pop
jmp
or
push
imul
call
loop
mov
movsb
push
mov
push
aad
out
mov
cmp
or
cli
pop
loopne
rcl
jge
mov
dec
cmpsl
aam
and
push
or
or
push
ds
into
aaa
inc
or
jl
mov
sti
addr16
mov
call
cmpsl
push
jne
lea
jg
nop
add
mov
cmpb
daa
mov
sub
stos
mov
ret
and
xchg
lret
mov
ret
adc
push
xchg
retw
call
int3
out
mov
fnstcw
cmp
xor
jecxz
mov
ljmp
or
sub
mov
call
push
into
ret
fwait
push
pop
loopne
idiv
jmp
xchg
imul
repnz
out
adc
movsb
push
xchg
int3
daa
push
in
jl
ljmp
jl
sbb
dec
push
notl
sbb
mov
mov
into
loopne
xchg
and
cltd
xchg
push
xchg
push
cld
or
cwtl
sbb
xlat
dec
sub
jae
into
cmp
decl
mov
fcoms
insl
data16
dec
lcall
push
ss
inc
or
inc
popf
das
in
pop
stos
shll
decl
stos
ret
or
ds
out
mov
mov
lock
outsb
in
add
lock
dec
jle
aaa
dec
fimuls
inc
shll
push
dec
loope
clc
push
mov
fcompl
int
lcall
sub
ret
xor
sbb
jnp
rorb
cmp
mov
sti
test
sbb
aaa
mov
mov
dec
pop
mov
xor
jne
decl
icebp
mov
sub
sti
mov
push
dec
int
sub
popa
dec
xor
jmp
sbb
repnz
ret
dec
hlt
dec
int
pop
fnsave
adc
movzwl
xchg
jg
stc
hlt
ja
out
leave
aad
out
mov
iret
push
inc
mov
add
decl
adc
push
adc
cmp
mov
or
pop
mov
lods
roll
adc
jge
add
mov
lods
scas
dec
popf
xor
sti
ja
cwtl
and
pop
mov
movb
ljmp
inc
in
test
sbb
icebp
push
ss
push
adc
out
mov
dec
mov
ljmp
add
xchg
xchg
repnz
inc
add
cs
pushl
lods
in
cmp
push
or
repz
pop
pop
loopne
mov
mov
incl
mov
fsubrl
popa
sub
loopne
inc
lcall
test
mov
sbb
jmp
cli
mov
push
cwtl
jns
aad
fcomp
je
xchg
xchg
xchg
out
push
push
loop
xchg
mov
lcall
ret
mov
call
nop
add
xchg
mov
mov
insb
imul
jmp
clc
out
loope
ds
out
and
mov
ja
in
jmp
sar
icebp
dec
push
add
dec
imul
lods
rcr
mov
inc
jecxz
icebp
stos
shlb
xor
fists
stos
js
push
push
out
cli
push
inc
clc
rclb
repz
pusha
add
mov
outsb
pop
inc
xor
inc
xor
xchg
dec
sub
stos
loopne
jg
out
nop
lcall
lcall
dec
mov
mov
xor
cwtl
cld
xor
decl
sahf
adc
inc
sbb
jl
js
inc
adc
sbb
daa
test
sbb
sub
push
inc
cmp
jnp
cwtl
ljmp
jbe
lcall
cwtl
std
push
mov
mov
mov
es
inc
mov
clc
inc
adc
jmp
jl
push
xchg
pop
js
jb
push
sar
cmp
adc
sahf
fs
inc
lea
inc
repz
imull
out
cmpsl
jge
sbb
cpuid
sti
mov
dec
mov
sbb
rcr
pushf
shl
lret
push
divb
push
outsl
cli
xchg
pop
mov
test
push
rcrb
inc
je
enter
push
lea
clc
stos
test
das
or
pop
jbe
jns
pushf
pop
mov
aam
xchg
sar
push
lods
movsb
sarl
mov
idiv
pop
rorb
jno
lret
jl
fidivrs
mov
inc
sbb
cld
loop
inc
mov
jmp
fcompl
jo
and
test
jb
jmp
sub
mov
cmpsb
lcall
mov
xchg
add
jo
push
test
or
xchg
or
pop
loope
jge
fistps
cmp
rorl
sbb
jno
push
iret
je
call
mov
xchg
inc
sbb
call
into
mov
cmp
add
pushl
inc
adc
or
in
dec
xlat
jo
mov
add
jg
mov
sub
jb
mov
dec
dec
scas
outsl
cmp
daa
fs
add
lods
into
ds
lcall
sbb
mov
inc
mov
leave
inc
lret
in
push
dec
adc
stos
shlb
inc
decl
push
xor
icebp
ja
nop
mov
xor
jmp
call
imul
ret
decl
in
adc
xchg
cwtl
pop
rcrb
cld
xchg
jne
xor
lcall
sub
pop
xchg
cwtl
mov
lea
sbb
adc
push
addb
addr16
jnp
dec
repz
aaa
cmpsl
iret
adc
dec
fwait
mov
out
sarl
hlt
rcrl
cwtl
xor
jno
xorl
repz
dec
xor
cmp
xor
pop
cmp
mov
xchg
jecxz
sbb
sahf
adc
inc
stc
outsl
data16
fsubrl
dec
cmp
ljmp
push
pop
pop
std
mov
xchg
fcoms
sbb
lea
lcall
mov
ja
cmpsl
xor
loopne
or
cmp
out
inc
shld
cmp
mov
jecxz
push
adcb
push
imul
loope
mov
imul
repnz
lcall
out
xchg
mov
cli
test
jnp
mov
cld
pushf
loope
leave
aas
xor
pop
mov
jmp
orb
mov
pop
clc
pop
sbb
cmp
cli
out
push
pop
out
stos
sbb
jmp
push
sub
sbb
mov
inc
mov
pop
shlb
cmc
clc
pop
incl
push
jg
mov
xor
cmp
cmpsb
sbb
and
xor
push
adc
lcall
ret
cltd
js
push
mov
bound
or
push
cmp
xchg
or
jmp
lcall
mov
in
scas
in
iret
pusha
push
stos
mov
leave
jmp
ljmp
fidivrs
enter
cltd
fstpl
add
cmp
cld
adcb
cmpsl
shl
mov
lods
mov
ljmp
test
cwtl
cli
cmpb
sbb
bound
push
fwait
cmc
ja
ljmp
sbb
jo
ret
sub
ret
mov
cmp
bound
cmpsl
cs
push
cmpb
mov
test
push
pcmpgtd
ds
decl
dec
add
lcall
add
call
enter
xchg
xor
sbb
push
xor
cs
push
adc
adc
rcll
xchg
dec
insl
out
and
aad
fimuls
out
jecxz
cmp
xchg
sub
mov
or
cmp
jp
lea
addr16
mov
lods
push
jnp
push
incl
mov
idivl
lahf
jmp
xor
rcrl
cs
call
aad
jle
inc
xchg
push
pop
inc
xor
out
xchg
cmp
xchg
and
and
adc
inc
decl
mov
jl
push
xor
pop
mov
adc
lret
pushl
insl
das
xchg
push
movsb
cmp
and
sti
lods
xchg
mov
jge
fiaddl
in
inc
mov
pop
loopne
ljmp
fimuls
xchg
arpl
pop
lods
mov
cmp
xlat
push
mov
cmp
movsl
sarl
shll
mov
mov
add
dec
mov
lret
cltd
aaa
push
test
xor
dec
adc
cmp
pushl
sbb
aas
ja
xchg
sub
and
loop
sub
fidivrl
out
stos
shlb
sti
leave
sbb
sti
push
xchg
mov
add
sbb
or
into
or
sar
jg
test
loopne
jecxz
scas
inc
mov
pop
cwtl
sbb
pop
std
add
es
imul
mov
push
dec
pop
xor
pop
mov
xchg
inc
loope
xor
inc
lods
lcall
fldenv
cmpsb
fsubs
insl
leave
pop
cmp
xor
jmp
jmp
sbb
xor
sbb
pop
jmp
test
xor
adc
sbb
fdivl
cmp
leave
loopne
inc
xchg
adc
mov
int
in
ret
movsb
fimull
ret
repnz
adc
mov
mov
test
mov
xchg
fistpll
cmpsb
loop
fnstenv
aaa
inc
cld
mov
roll
ljmp
mov
int
sbb
mov
test
jg
cmp
adc
lret
jmp
jp
repz
rcr
and
mov
xor
sub
push
push
ss
notb
dec
and
jg
jne
daa
aas
pop
jns
adc
ficomps
push
mov
and
popa
pop
sbb
or
nop
call
jmp
cmp
test
in
jle
addr16
jne
xchg
decl
lock
cmp
in
sub
in
popa
scas
subl
lcall
mov
inc
or
inc
dec
test
add
add
jne
cld
lcall
popa
shlb
inc
inc
xor
mov
sbbb
decl
sahf
ljmp
xchg
arpl
icebp
mov
mov
or
sbb
and
pusha
xchg
shl
xor
add
call
or
fneni(8087
xchg
xor
fdivrs
jno
imulb
cmpsb
mov
push
cmpsb
jmp
lahf
mov
mov
mov
lock
pusha
xor
ja
jle
int3
scas
repz
lods
mov
add
je
pavgw
push
ret
mov
lods
dec
fistpl
leave
insl
sub
sub
lcall
cmpsl
push
gs
sbb
gs
fucomp
hlt
xor
sahf
fcmovu
enter
or
jl
iret
dec
test
test
jg
pushl
enter
mov
lods
or
sub
fsts
movb
test
fistl
loopne
pop
push
repnz
adc
pop
sub
fwait
pushf
or
lcall
mov
xchg
jb
aad
in
cmp
jae
das
outsb
in
pop
insb
mov
cmp
aad
pushl
cmc
add
xor
test
aad
in
lea
scas
pop
movsb
cli
adc
pushf
jecxz
mov
xor
inc
xchg
mov
xchg
call
lods
cmp
lcall
sti
jnp
pop
pop
sbb
movsl
pop
in
gs
xor
push
or
dec
mov
pusha
fsubrl
lods
jns
pushl
cmpsb
insl
fisubrs
mov
or
movsl
rcrb
mov
cli
incl
clc
repnz
xchg
cmpb
pop
adc
das
sbb
adc
add
cmp
cli
adc
ret
mov
add
sbb
mov
pop
or
fisubl
mov
mov
jge
pop
xchg
cmc
ss
test
aam
imul
dec
inc
setns
sub
inc
inc
jp
push
push
cmpsb
xchg
inc
mov
dec
push
mov
jmp
movsl
pushf
test
or
push
gs
inc
out
jg
ljmp
xor
mov
pop
mov
jge
xor
add
mov
inc
jp
and
cmp
mov
mov
mov
xchg
push
xor
sbb
or
or
xchg
aad
nop
int3
and
jg
jmp
jns
das
aad
sub
cmc
jmp
or
ret
or
lret
or
subb
lcall
xor
xor
fcomps
loopne
or
sbb
cmpsl
cmp
add
mov
lds
outsb
decl
aaa
sub
lods
rorl
stos
push
movsl
mov
loopne
pop
stc
mov
jmp
mov
and
push
aas
mov
sbb
imul
movl
call
inc
into
addr16
or
ds
mov
push
fsub
pop
mov
call
testb
lock
lcall
lcall
cmp
int
cs
addr16
add
and
pop
mov
pusha
jl
push
mov
fcoml
loop
hlt
jmp
lcall
repz
pop
push
inc
pop
xor
xchg
pop
jnp
out
scas
xchg
mov
les
fucomp
pop
sub
inc
xchg
jo
test
in
data16
inc
jns
sub
cmp
out
test
mov
outsb
jl
and
sbb
mov
incl
call
int3
mov
iret
out
fcmovnu
pushf
mov
mov
or
fsubrs
fadds
rcrb
mov
dec
xor
xor
incl
movsl
jl
sti
jo
mov
xchg
jge
call
imul
mov
scas
sbb
pop
cmp
add
add
arpl
mov
adc
in
lods
cmpsl
and
sbb
jo
adc
pop
sbb
cmp
hlt
enter
out
pop
scas
inc
mov
sbb
mov
jne
fildl
out
aaa
jg
xchg
insb
fldcw
dec
inc
mov
xchg
out
cmp
sbb
call
push
lcall
xchg
arpl
jmp
inc
insb
xor
cmc
fs
incl
cmp
pusha
or
leave
jnp
ret
jecxz
int3
lock
call
xor
adc
xchg
jecxz
push
leave
xor
lods
push
fs
and
xchg
scas
jl
add
jmp
call
incl
push
xchg
pop
mov
lock
faddl
scas
cmp
mov
out
pop
mov
inc
sub
into
dec
decl
dec
ja
sub
jmp
sub
fbld
pop
ret
lods
cs
loopne
push
in
inc
mov
jp
mov
pop
out
fnsave
mov
lods
loope
stc
jno,pt
push
or
add
imul
decl
xchg
inc
push
insb
push
clc
das
stos
mov
pop
sub
fwait
push
xor
sub
pop
jge
push
inc
daa
daa
jne
hlt
cmpb
fsubs
xchg
cltd
icebp
lahf
push
dec
or
mov
pushl
sbb
xchg
fldl
int3
mov
enter
sbb
bound
addr16
xor
push
dec
call
and
mov
repz
addb
mov
sti
testl
jno
in
push
dec
hlt
pop
das
push
inc
push
in
jl
int
xchg
cmc
jno
mov
loopne
out
and
jmp
jnp
inc
mov
add
adcl
inc
fildl
xor
pop
mov
jl
sahf
xlat
push
sbb
xchg
mov
xchg
xchg
push
clc
mov
scas
jmp
sbbb
mulb
dec
stc
ud0
pushl
adc
aas
jb
scas
jo
fldt
or
and
pop
or
ljmp
stc
les
pusha
ficoml
ds
and
pop
fldenv
dec
xor
pop
rorb
aaa
add
mov
and
jle
pusha
and
movsl
lret
jno
divl
decl
mov
push
pop
aas
push
fldenv
or
xchg
mov
in
xor
scas
cli
ljmp
xor
scas
or
mov
cli
mov
imul
std
adc
dec
clc
test
ffreep
mov
pop
call
lock
sti
dec
mov
jbe
pop
nop
mov
push
test
adc
jge
fcomip
pushl
imul
gs
int3
scas
mov
mov
in
xor
out
mov
adc
mov
je
icebp
or
imul
out
inc
int
xor
inc
jno
aaa
adc
jmp
stos
pushf
movsb
sbb
cmpsl
fnstenv
lahf
jb
ss
cmp
dec
xchg
add
dec
jg
and
mov
in
test
adc
adc
mov
outsb
sbb
pop
pushf
imul
fcomi
xor
movsl
fldt
mov
mov
in
lahf
and
and
loopne
add
js
sbb
dec
pop
push
dec
xor
push
fsts
pop
dec
cmc
std
jl
fs
xlat
lds
test
dec
push
mov
ljmp
mov
xchg
cltd
push
in
mov
test
xor
jnp
pop
mov
jne
je
mov
pushl
cld
in
sbb
cmpsb
pop
out
das
cmp
loopne
or
mov
or
mov
mov
inc
mov
imul
pop
push
mov
out
shlb
mov
push
jae
push
jmp
out
xchg
int3
stc
inc
cmp
into
sahf
cmpb
cli
mov
orl
adc
inc
mov
sbb
incl
leave
idivl
xlat
pop
jne
out
arpl
stos
or
out
xlat
jnp
outsb
lret
clc
decl
outsl
andb
roll
ljmp
add
cmp
cs
shrl
das
xchg
mov
aas
inc
or
xor
dec
dec
scas
pop
xchg
mov
mov
jge
jnp
shl
scas
jp
iret
jp
je
push
and
filds
or
jmp
ss
aad
mov
pop
dec
stc
dec
xchg
sbb
dec
add
push
xchg
pop
cmp
shrl
dec
sbb
cmp
xchg
incl
pop
xlat
div
jbe
in
jne
dec
loop
aaa
loop
fcmovb
pushf
mov
push
lret
and
push
loopne
stos
shufps
icebp
out
pop
jnp
sbb
or
jbe
add
outsl
cli
inc
mov
mov
cltd
pop
insl
cmp
xor
cli
push
mov
xor
mov
es
pop
imul
jmp
fsubs
xor
xor
stos
dec
and
pop
jecxz
adc
xchg
insb
dec
test
push
lock
jp
or
xchg
scas
gs
bound
jb
cmc
dec
push
cmp
push
decl
jmp
xchg
push
and
push
mov
cltd
jns
lcall
daa
sbb
iret
mov
pop
xchg
jno
mov
dec
cltd
jae
pop
fwait
mov
mov
push
adc
push
mov
das
cmp
jle
call
mov
mov
addr16
mov
add
cmp
jo
xchg
cld
mov
mov
out
mov
pop
xchg
pushf
cmpsb
push
movsb
and
je
add
scas
mov
mov
xchg
mov
in
jmp
pushf
mov
fstps
std
call
call
in
jg
mov
into
sub
pushl
xor
lahf
int
push
or
bound
add
pushf
mov
lds
mov
data16
cli
out
movsb
lahf
rcrb
out
mov
call
sbb
push
vdivsd
jg
lds
cmp
inc
loopne
dec
stos
loopne
in
pop
add
ljmp
xor
mov
mov
fisubs
or
push
out
push
and
daa
inc
cld
sub
nopl
push
inc
gs
ljmp
push
daa
out
daa
fidivs
push
in
mov
or
into
stos
outsb
aam
push
imul
incl
pop
inc
mov
cwtl
add
fcoms
fcoms
mov
jae
mov
mov
lahf
mov
cli
push
cmp
mov
mov
xchg
iret
cmp
aam
fimuls
incl
aas
xor
int3
cmp
dec
mov
cld
mov
stos
mov
sbb
ja
fildl
sub
cmpsb
pop
cmp
or
or
daa
inc
ret
lcall
call
out
lds
loopne
xor
and
jnp
push
loop
ss
je
test
pop
mov
in
mov
lock
lret
push
lret
push
sahf
inc
repz
pushl
dec
imul
xor
mov
fmuls
xor
sub
inc
sub
clc
fmuls
pop
pop
insl
mov
fsubr
pushf
cwtl
ljmp
stos
jg
out
out
bound
lcall
jmp
es
lret
lret
mov
add
sub
fwait
pushl
push
iret
sub
pop
push
repz
cltd
into
cld
dec
pop
dec
jp
xchg
frstor
inc
clc
dec
mov
cmp
pusha
xor
in
push
scas
jp
push
xchg
scas
jmp
xchg
clc
decl
ds
push
cmp
pop
sbb
mov
jmp
ljmp
inc
pop
jg
xor
xchg
lret
leave
movsl
enter
sti
jge
add
lret
xor
lcall
ljmp
xor
and
dec
cmp
arpl
iret
lock
aad
ja
rclb
and
push
sub
jg
xchg
dec
incl
cmpsl
icebp
or
shl
xor
jle
xchg
aas
mov
xchg
les
cmp
push
int
ljmp
push
fisubs
jmp
mov
or
in
pop
xchg
test
jg
mov
ljmp
mov
adc
sbb
or
cmp
sub
das
dec
cld
in
inc
jg
add
sti
js
jbe
adc
in
jns
sahf
out
xchg
aam
inc
push
cwtl
gs
mov
ss
cmpsl
jecxz
insl
sub
inc
mov
pop
pusha
jge
or
xor
in
push
xor
fs
push
fisubrl
sbb
subb
cld
decl
cmp
xchg
stos
ret
mov
and
cmp
incb
lret
pop
and
mov
jne
dec
push
mov
lods
fstpl
call
dec
sbb
mov
aas
sub
bound
or
dec
in
jmp
sub
in
clc
aad
dec
outsl
inc
lcall
push
sub
mov
dec
les
sub
push
fcomip
dec
sbb
pusha
movsl
adc
push
fnstsw
and
ror
and
movsb
cmp
push
dec
mov
mov
jge
xchg
fldt
push
sbb
pop
push
jg
or
in
lcall
inc
xorl
pop
or
test
ljmp
mov
inc
out
scas
mov
loope
popf
dec
and
in
call
xor
popa
int
sub
cmp
das
cwtl
dec
xor
sbb
sub
mov
test
decl
out
pop
fistl
mov
add
mov
mov
mov
lcall
cli
ss
and
mov
les
jg
ljmp
fwait
dec
and
adc
adc
fdivrl
sarl
cmpsl
mov
aaa
mov
or
in
pop
jle
jbe
xchg
xchg
rep
lcall
pop
adc
sahf
adc
xor
jecxz
sub
fnstsw
mov
stc
push
enter
jg
dec
jmp
insb
sbb
push
cmp
jo
dec
xchg
jno
xor
adc
xchg
xor
fs
rclb
inc
adc
mov
pslld
lret
or
js
jg
fwait
jmp
stc
xchg
aaa
test
jnp
push
fcmovnbe
daa
ja
test
pop
call
test
imulb
decl
sti
push
mov
mov
into
icebp
lret
jo
repz
addl
jmp
adcl
sub
hlt
sbb
xchg
cli
mov
cld
ljmp
fsubl
mov
flds
mov
push
push
lea
mov
sub
push
jecxz
mov
and
xor
call
adc
jle
xchg
sbb
jl
push
inc
pop
jbe
jne
ret
sub
adc
inc
daa
adc
push
decl
pop
add
mov
and
hlt
shr
sbb
xor
push
outsl
pop
pushw
movsb
mov
and
mov
hlt
ret
and
xchg
test
aam
fwait
subl
lcall
cmovnp
mov
rorb
dec
pop
stos
xor
mov
xor
push
clc
lcall
je
cmp
std
cmp
pop
sbbb
shll
push
lret
loop,pt
mov
jb
notb
xor
jmp
pop
ljmp
push
inc
shll
dec
push
fdecstp
scas
es
sbb
pop
sub
gs
jge
jle
es
sbb
ljmp
outsl
int
xchg
outsl
add
icebp
xor
lcall
mov
pop
std
or
push
push
imul
push
enter
popa
in
pop
data16
in
adc
iret
mov
mov
sti
fwait
cmp
pop
bound
xor
sub
and
dec
ficompl
add
inc
loope
xorl
fbstp
dec
stos
mov
jecxz
andb
jmp
inc
or
cmp
cmpsb
mov
in
sub
test
aas
push
in
incl
sbb
xchg
push
xor
fidivl
mov
and
xor
lret
jecxz
push
rcrl
xor
pop
xchg
xor
das
and
xchg
xor
mov
pushf
or
in
aas
xchg
push
into
popa
imul
xchg
jmp
jge
aad
xor
push
movsl
mov
insl
adc
xorb
orb
lcall
jecxz
xchg
iret
pop
fwait
out
ss
shlb
pop
scas
incl
jmp
sahf
jg
xchg
sub
jnp
jns
and
fists
ficoms
dec
and
out
dec
xchg
push
jae
test
cmpsl
in
imulb
pushf
fcoms
lret
nop
clc
inc
decb
ljmp
add
fs
ds
jnp
sbb
inc
push
int
incl
inc
stos
jbe
out
testb
mov
pop
sbb
inc
sub
lods
pushf
outsb
jnp
sbb
call
xchg
ret
rolb
subl
fs
mov
push
std
fs
mov
rol
or
lret
loop
shr
std
cld
outsl
mov
decl
mov
subl
rorl
inc
call
mov
xchg
ss
call
cmpsl
shlb
popa
aaa
dec
jo
push
mov
jge
jno
xchg
push
cltd
ja
les
jmp
stc
push
xlat
mov
ret
setge
insb
or
jmp
imull
xchg
sub
cmp
xlat
cmp
ret
test
int
jae
inc
test
cli
lcall
cs
push
dec
ret
push
arpl
xchg
call
xchg
hlt
fwait
dec
in
pop
pop
cli
insb
push
jnp
cmpsl
pop
dec
jmp
insb
loope
insb
test
xchg
sarb
call
movhps
fcmovne
jns
or
das
push
loop
xchg
or
pushl
add
sub
xchg
push
or
jb
mov
inc
ret
jno
sbb
jmp
jo
movsl
fbld
in
sub
lcall
mov
ljmp
fistpll
mov
and
xchg
mov
inc
cmp
aad
jmp
push
xchg
lds
xor
dec
pop
sub
and
xchg
or
data16
mov
mov
out
dec
repz
pushl
fsubl
cmc
jl
movsb
outsb
inc
xor
call
adc
dec
xor
push
pop
adc
out
dec
pop
leave
es
sbb
call
repnz
loopne
movsl
inc
sbb
push
int
jecxz
pushf
mov
mov
lret
push
mov
aas
out
out
or
xor
add
ret
out
iret
push
mov
sbb
xchg
lods
push
mov
sar
call
xchg
and
push
loopne
push
cwtl
mov
cwtl
cwtl
ljmp
div
or
mov
pop
loop
test
push
das
add
ds
and
mov
and
fbld
lods
nop
test
mov
cmp
test
rclb
xchg
lahf
das
test
in
ljmp
shlb
ficomps
and
out
jp
iret
mov
test
sub
fwait
or
jg
push
xchg
ret
mov
push
cltd
lock
enter
pushl
imull
add
adc
in
test
call
adc
leave
pop
mov
pop
lahf
shlb
call
xchg
hlt
push
fptan
enter
push
int3
les
ljmp
push
push
daa
xchg
adc
imul
and
sbb
jl
sbb
incl
fisubrl
sub
xor
xor
or
pop
pop
daa
mov
mov
and
push
lea
cmpsl
push
pushf
inc
pop
mov
push
sbb
sahf
aaa
jnp
push
xor
or
inc
adc
call
aas
cmp
std
imul
or
fsubr
mov
loop
and
jg
fdivr
jmp
cmp
xor
xor
fcoml
sarl
sub
ljmp
xor
or
andb
jmp
mov
ds
int3
inc
adc
push
jmp
decl
sbb
into
mov
xchg
pusha
gs
or
insb
mov
decl
in
mov
push
add
fildll
mov
push
or
inc
xchg
aam
dec
push
xchg
ds
fldl
cld
fcomip
xchg
cwtl
lods
jle
icebp
repnz
in
dec
js
incl
sub
popa
out
inc
adc
not
mov
scas
rcll
pushl
aaa
pop
or
insb
jle
pop
pop
push
xor
gs
mov
pusha
out
ja
jl
push
push
jns
mov
sub
dec
test
push
call
cli
push
adc
shrl
push
cld
jp
bts
cld
dec
fldenv
mov
dec
mov
or
mov
fucom
pop
lcall
ljmp
mov
and
test
jo
mov
cwtl
in
cmp
sbb
pushl
stos
adc
aam
cmp
lods
mov
jg
les
inc
ljmp
push
push
arpl
sub
loope
pusha
les
push
ljmp
xchg
mov
je
cmpl
mov
adc
aam
sub
dec
lcall
int
subb
imul
loopne
aad
out
data16
sbb
in
mov
pop
jle
fildll
sbb
cmp
das
inc
in
je
ss
aas
pop
xor
lret
fwait
jecxz
rcrb
outsb
ds
or
pop
cmp
addr16
mov
fbstp
xor
mov
scas
test
dec
fcoms
and
clc
mov
loopne
adc
mov
ds
jg
cmp
cmpsl
jl
mov
imul
loop
push
mov
dec
mov
stc
cmp
push
repnz
fidivrl
mov
andl
and
dec
rcrb
cmpsb
jg
outsb
xchg
mov
mov
flds
jnp
sbb
jne
movsb
fdivrs
lahf
repz
ljmp
int
dec
inc
cmp
je
sbb
incl
stos
mov
dec
je
nop
sub
into
outsl
cmpsl
jmp
push
add
into
lods
jl
xor
out
into
sbb
mov
cmp
or
sub
test
adc
incl
dec
inc
cltd
xchg
xchg
je
ffree
jge
cltd
or
pop
arpl
das
scas
adc
xor
sbb
or
fmull
sub
lcall
jae
jmp
clc
fld
stos
mov
lods
push
iret
pop
mov
pop
imul
dec
incl
mov
jecxz
inc
sub
loopne
sub
js
dec
das
cwtl
in
push
or
lcall
popa
mov
pusha
jl
std
in
fwait
and
add
lods
lock
in
call
aaa
mov
add
cwtl
and
shlb
xchg
cmp
xor
lret
push
mov
mov
cli
jle
and
cwtl
shlb
fcomip
mov
shrb
daa
dec
scas
cmpsb
push
lods
fstps
or
mov
xor
pop
mov
xor
mov
mov
dec
dec
jecxz
push
cmp
cmp
xchg
or
stos
movsl
pushf
popa
push
or
fsubr
and
lcall
pop
add
cli
lret
pop
insb
adc
xchg
lock
sbb
xchg
sar
push
pop
ljmp
cmp
lcall
clc
xor
jmp
adc
sahf
test
aad
and
push
mov
dec
jg
ret
add
push
popa
lcall
daa
out
push
dec
cmp
or
dec
adc
lret
inc
std
dec
jbe
stos
outsb
out
sahf
decl
or
fs
dec
inc
jge
and
or
xchg
xchg
xor
das
leave
stc
xchg
addr16
call
jg
in
cmp
or
xlat
add
hlt
inc
imul
xchg
sbb
call
and
push
inc
dec
fs
hlt
imul
ds
mov
and
sbb
decl
pop
pop
cmp
aam
imulb
push
rol
lret
jno
call
aas
loope
cmp
xor
cmpsl
ficoml
lahf
adc
and
je
cmp
incl
xor
jl
bound
lcall
pop
jl
push
lcall
ss
dec
mov
dec
push
or
out
adc
add
dec
pop
stos
imul
jmp
fldl
mov
out
shlb
mov
and
mov
add
cs
pushl
sub
mov
sub
outsb
mov
orl
dec
add
dec
call
sarl
or
sbb
push
or
pop
jp
testl
dec
sub
mov
nop
jecxz
mov
in
push
or
lcall
repz
pop
test
sbb
lret
mov
jmp
jg
jecxz
ljmp
roll
ret
xchg
fld
xchg
push
jns
xchg
jbe
and
mov
jnp
std
jmp
mov
hlt
push
add
decb
fadd
stc
xchg
outsb
push
push
push
ja
cmp
or
sbb
xchg
imul
jne
ss
fidivrl
je
mov
xchg
outsb
orb
int
loop
sbb
incl
in
adc
fidivl
cmp
sahf
iret
mov
call
test
dec
jnp
data16
xchg
xor
shrl
in
cli
mov
push
adc
pushl
push
stos
int3
mov
and
mov
int
jg
pushf
and
repnz
pushf
cmp
inc
imull
cwtl
sbb
decl
adc
outsl
je
dec
pop
ljmp
dec
scas
or
test
cmp
mov
mov
movsb
inc
push
push
dec
or
das
cli
popf
or
out
cmp
lcall
clc
mov
cltd
xchg
sub
and
stos
nop
gs
test
enter
shl
decl
adc
push
mov
add
in
pop
cwtl
jb
jmp
and
into
js
xor
lcall
mov
lea
jns
xor
insl
pop
dec
dec
pop
lods
cltd
test
es
xchg
daa
cmp
xchg
jnp
sbb
adc
std
sbb
inc
clc
mov
sbb
nop
mov
add
jp
out
dec
sbb
push
ljmp
dec
sbb
adc
mov
fldcw
mov
pop
mov
jo
inc
xor
ss
jmp
xor
adc
pop
repz
sub
call
adc
fwait
pop
sbb
xor
lcall
push
sub
scas
scas
jp
mov
sbb
outsl
aad
sub
sar
sub
movl
insb
lret
inc
in
xchg
dec
push
xor
hlt
push
jmp
test
or
jle
ret
sub
divb
idiv
sub
xchg
inc
pop
je
fmull
divb
lret
sub
pop
add
test
bound
and
stos
mov
push
push
xorl
cld
out
fimull
sbb
ljmp
xchg
lret
fstpt
xchg
nop
pushf
test
inc
mov
pop
add
xlat
cwtl
lcall
cltd
imul
mov
mov
xchg
xorb
incl
lcall
sub
lret
scas
or
xorl
lock
cld
call
sbb
lea
test
xor
insl
sbb
xor
xor
cmp
ret
je
sub
xchg
test
pop
fwait
call
mov
xor
lea
jl
jne
rcll
xor
or
xor
shlb
leave
cmp
out
mov
jecxz
xchg
aad
nop
adc
outsb
in
out
outsl
aam
cmp
add
push
test
es
sbb
mov
jbe
push
mov
les
lods
fcmovu
add
call
fdivrs
dec
js
lcall
dec
repz
out
mov
xor
adc
sub
test
inc
lret
adc
iret
scas
mov
movsl
scas
pop
sbb
movsb
out
and
xchg
mov
cmpsb
test
mov
in
rcll
pusha
out
popa
mov
push
out
xchg
data16
jg
adc
or
adc
fisttpll
mov
inc
movsl
call
add
sti
jnp
sbb
mov
out
mov
in
mov
ds
in
fwait
add
ljmp
fcomps
mov
jmp
shrl
bound
daa
inc
shll
push
and
negl
test
adc
call
in
clc
repnz
push
imul
push
xchg
sahf
sti
mov
or
call
test
sbb
mov
js
lds
sub
jo
mov
xchg
jbe
outsl
pop
sub
sbb
insb
imul
frstor
jmp
cli
call
out
sti
pop
mov
shrl
lock
cli
inc
or
pusha
aad
sbb
fisttpll
pop
sub
call
xchg
mov
ljmp
cwtl
cmc
mov
movsb
loopne
jl
fidivrl
jae
sbb
add
pushl
pop
lock
xchg
xchg
cmp
inc
sti
push
call
cwtl
fs
jo
mov
ljmp
jg
ror
push
push
rclb
dec
xor
adc
sbb
call
dec
int
or
into
fistpll
arpl
fwait
call
testb
cmp
and
out
ds
add
adc
inc
scas
test
scas
clc
pop
es
insb
bound
jle
cmpsb
fs
fwait
ljmp
rcrl
pop
mov
les
jns
sti
cmp
jnp
jl
scas
rorb
cmpsb
mov
cli
test
shr
mov
lods
subl
sub
ficomps
mov
push
adc
adc
mov
cmp
fbstp
xchg
sbb
push
jne
jp
std
xchg
loop
fs
ljmp
decl
inc
jno
cwtl
xor
sti
stc
inc
mov
das
mov
pop
movsl
nop
into
stos
adcl
mov
cmp
cwtl
xchg
imul
mov
xchg
sub
in
flds
lcall
enter
adc
loop
pop
xor
sbb
andb
aad
pushl
daa
lret
sub
xchg
pop
xchg
cmp
mov
jg
orb
leave
fistpl
lods
dec
cmp
lcall
movsl
in
xchg
cmp
in
mov
jmp
movq
daa
dec
or
lcall
xchg
roll
mov
filds
movl
outsl
cmp
xor
push
xchg
imul
and
mov
pop
in
ljmp
push
imul
or
faddl
filds
mov
mov
pushl
xor
cmp
adc
dec
sbb
call
loopne
mull
mov
mov
es
dec
dec
insl
addr16
ret
pop
aas
out
dec
and
push
rclb
add
push
sbb
mov
int
xor
call
int3
mov
push
shlw
push
mov
aaa
jg,pt
xor
rorl
clc
mov
mov
cmp
xor
jmp
cmp
ljmp
jg
iret
sarl
adc
pop
out
clc
pushl
push
pop
mov
pop
push
xchg
push
jne
in
lods
int3
jns
dec
loopne
test
mov
xchg
add
jmp
and
rcll
pop
sbb
mov
out
gs
cmp
or
arpl
lods
dec
imul
dec
in
xchg
dec
mov
cmp
das
dec
fisttpll
bound
hlt
imul
lcall
mov
xchg
shrb
mov
pop
mov
fstl
loop
test
sub
loopne
dec
adc
push
jmp
ror
add
cvtps2pi
jle
mov
cli
jl
and
jp
mov
clc
out
mov
mov
mov
clc
lcall
mov
xchg
ds
shll
add
xor
add
mov
pop
test
mov
adc
leave
daa
lahf
push
and
pop
into
cmc
jns
lock
decl
xor
push
or
mov
test
or
sub
xchg
cmc
insb
xor
adc
cld
pop
cwtl
mov
or
ret
ret
or
jg
repz
mov
test
jno
adc
jle
mov
out
pop
icebp
call
push
insb
popw
subl
pop
dec
or
stc
xor
imul
sbb
std
call
adc
mulb
sbb
jns
test
jecxz
jo
lret
stos
mov
decl
sub
and
jle
mov
pop
jae
jbe
std
xor
paddw
mov
mov
out
and
push
sbb
and
add
outsb
push
xor
mov
dec
sub
mov
lds
jmp
lcall
test
add
faddl
mov
xchg
dec
fnstsw
jmp
xorb
shlb
xchg
adc
jecxz
xor
decl
cmp
push
out
test
data16
fwait
rcr
fwait
mov
pop
adcl
decl
loop
xlat
pop
dec
pop
fstps
sbb
ror
test
push
cmpsb
aam
mov
pushl
mov
sbb
lret
stc
sbb
subl
movsl
sbb
and
cmp
mov
push
incl
popa
shl
iret
xlat
clc
xor
lret
out
cmc
mov
adc
inc
stos
insb
sub
mov
pop
icebp
pushl
cmp
add
in
pop
hlt
cmc
lret
xchg
and
cmp
mov
aaa
scas
clc
jg
add
loope
bound
sub
jno
push
movsb
clc
incl
push
imul
les
insl
int3
shlb
out
ljmp
test
loop
xor
pop
fmuls
and
dec
cmpb
xor
je
daa
call
fmull
cmpsb
cmp
mov
dec
and
xor
test
mov
inc
loope
pop
leave
mov
jnp
outsl
sbb
std
and
push
sbb
mov
inc
pop
fcomps
popa
mov
push
and
in
loopne
pop
aas
cmp
add
out
adc
cltd
loopne
xlat
daa
shl
xchg
dec
loopne
push
push
mov
popa
mov
lcall
jne
push
test
inc
mov
jne
pop
cmp
movsl
xchg
cmp
dec
out
inc
inc
xor
ljmp
cld
and
icebp
mov
mov
fwait
ds
jecxz
jmp
movsl
mov
in
xchg
and
xor
dec
sub
and
cwtl
push
out
lcall
add
scas
hlt
sub
add
xchg
pop
lock
pop
in
aas
add
incl
inc
cmp
push
stos
mov
mov
sbb
pop
push
lret
mov
ret
push
out
clc
jg
xor
xchg
mov
dec
pop
daa
imul
sbb
and
cltd
cwtl
dec
sahf
jecxz
push
incl
mov
and
repnz
push
mov
mov
insb
mov
lea
scas
push
jae
fnstenv
jge
call
repnz
pop
stos
push
mov
sbb
adc
push
int
leave
ror
arpl
lcall
xor
jg
mov
dec
fs
pushf
lcall
shl
das
inc
pop
lds
ja
add
jo
mov
movsb
dec
cmp
ficompl
mov
jns
sbb
pop
xchg
loop
out
lds
or
or
inc
xchg
sbb
mov
xchg
negb
js
push
xchg
popa
hlt
adc
jno
push
call
outsb
xor
mov
into
ret
in
adc
mov
mov
in
aad
ljmp
or
jmp
es
cmpsl
movsb
stos
ljmp
lods
xchg
insl
sbb
jno
jg
sbb
push
inc
add
pusha
mov
push
cli
mov
cmp
incl
sub
mov
aam
xorb
dec
jno
mov
mov
fs
fstpt
cld
cmp
cmp
lret
aad
xchg
js
or
int
fwait
clc
pop
inc
aam
sbb
push
jmp
inc
aaa
mov
push
jns
lret
clc
add
jge
inc
jae
cld
roll
sbb
sub
lods
dec
push
xchg
call
and
or
fisttpl
jp
call
mov
push
adc
cmpsl
cld
adc
int
sub
inc
fwait
push
mov
ljmp
scas
cmp
daa
xchg
cltd
clc
xchg
inc
loopne
mov
dec
mov
in
adc
decl
arpl
rcrl
stc
les
inc
or
sub
mov
xor
rcrb
daa
dec
xchg
cmc
cmp
mov
lret
out
dec
test
dec
pop
xchg
sbb
js
movsl
jb
pop
clc
imul
mov
icebp
inc
jg
xchg
loop
movsl
xor
imul
loope
push
dec
sbb
adc
sar
fists
xchg
inc
adc
mov
mov
mov
pop
lods
inc
ret
ss
xchg
mov
pop
dec
cmpsb
movsl
xchg
push
cmp
js
xor
push
fnsave
insb
fcmovne
pushl
ret
mov
mov
movsb
dec
xor
pop
xchg
jo
add
mov
adc
sub
std
pushl
add
jg
fcoml
mov
jmp
mov
mov
add
jge
int
lds
push
xor
sarw
inc
mov
cmp
jecxz
xor
jg
add
mov
jg
jg
jbe
icebp
mov
ss
rcrl
imul
incl
push
fidivl
mov
test
xabort
out
cld
add
ljmp
icebp
repz
mov
xchg
rclb
dec
jg
xchg
sub
and
shlb
test
stos
fdivr
mov
xchg
rcl
sahf
data16
stos
add
lds
xor
ja
push
xchg
je
incl
push
stos
ret
push
push
mov
inc
fsubl
sahf
sbb
or
sub
jbe
cmp
lcall
mov
jmp
out
das
jb
pop
stc
mov
mov
and
fcmovnu
mov
and
stos
jmp
xchg
dec
les
ja
sar
jnp
inc
repz
fst
ljmp
inc
jge
es
push
dec
shlb
sbb
fsubl
jo
mov
ljmp
ja
rcrb
dec
std
mov
clc
pusha
cmpsb
lcall
pushf
femms
sbb
push
aas
aas
test
or
and
fs
push
shl
call
lahf
bound
aaa
or
sbb
add
ret
pop
xor
fcomip
inc
adc
pop
ljmp
adc
in
imul
loope
aaa
int3
mov
mov
sarb
jg
dec
pop
or
cmp
xor
mov
dec
mov
ljmp
jg,pt
push
daa
or
sub
dec
or
ljmp
cmpsb
sahf
push
les
lea
pause
fisubrs
xor
mov
push
or
jnp
xchg
imul
lds
fbld
flds
mov
das
call
jmp
pop
movsb
imulb
in
cltd
sbb
mov
stos
jle
inc
hlt
mov
cli
aas
xchg
mov
ljmp
aad
fistpl
in
push
lea
jo
push
daa
sbb
pop
mov
scas
lods
inc
and
or
add
mov
sarb
pusha
inc
ss
das
sar
ljmp
xor
sti
push
adc
popf
popa
mov
lcall
inc
push
inc
xchg
je
xchg
popa
pop
or
pop
push
test
mov
fnsave
sub
push
mov
jb
je
or
lcall
add
sub
xchg
test
test
xlat
loop
xchg
sbb
cwtl
push
jg
adc
mov
inc
xchg
cltd
and
fmul
mov
cmp
int3
pushl
inc
fidivs
mov
jno
xor
aas
insl
add
cmp
decl
mov
mov
mov
or
mov
adc
fldcw
xchg
aaa
add
stc
sub
pusha
mov
jl
pop
jo
sbb
stc
add
sub
shlb
inc
lret
out
add
mov
addr16
pusha
jg
shrl
push
int
push
and
pop
ja
sbb
jb
sahf
and
pop
sbb
in
loope
add
xor
dec
mov
fmuls
in
mov
jge
inc
mov
pop
mov
mov
cmpsl
stc
xor
insb
xchg
insb
jne
jl
pop
or
inc
test
jmp
xor
lahf
mov
test
stos
daa
inc
xlat
pop
out
stc
lock
jo
cmp
ret
push
incl
or
add
into
pop
jb
fisubs
fst
pop
test
test
mov
jmp
lea
insb
je
jb
xor
cli
ret
out
adc
cmpsb
pop
mov
cmp
jbe
sub
sbb
movsb
xchg
sbb
in
xchg
push
test
scas
xchg
icebp
cmp
cmp
sub
sbb
xchg
xchg
mov
fimuls
lcall
add
xor
cld
mov
ljmp
cld
test
fcomip
aad
cs
test
or
fsubrs
lods
push
enter
inc
pop
dec
lcall
cmp
mov
mov
cs
outsl
ljmp
sub
adc
mov
stc
andb
loopne
cmpl
neg
push
push
das
andb
mov
sbb
cwtl
inc
rclb
pop
jp
insl
ja
inc
pop
mov
fiadds
adc
pop
decl
loope
sbb
mov
movsl
shl
xchg
enter
mov
icebp
fcomip
fstpl
pop
pop
ret
es
incl
sub
mov
frstor
mov
lret
inc
mov
sub
pop
pushl
cmpb
out
out
imul
or
push
adc
mov
sub
jmp
lahf
lods
in
jl
jg
mov
inc
pushf
sbb
adc
push
jg
add
daa
js
js
outsb
roll
aaa
lcall
in
aad
lcall
sub
and
stos
aam
cmpsb
popf
or
jbe
inc
lret
xchg
int3
decl
or
xchg
mov
pop
shll
adcl
pop
addr16
jmp
jne
cwtl
stos
jbe
cltd
mov
inc
mov
nop
pop
xorb
std
sub
mov
fsubrp
test
xchg
icebp
jmp
sub
or
lcall
push
loopne
push
adc
mov
xchg
inc
out
dec
hlt
out
in
push
repz
decl
mov
add
xor
inc
mov
push
xchg
adc
mov
arpl
daa
push
sti
movsb
fisttpll
pop
imul
xor
loope
les
aas
cmpsb
loop
fsubrs
inc
sbb
arpl
pop
sbbb
lods
lods
scas
cltd
dec
dec
mov
jmp
sub
int
lock
cli
push
lds
out
inc
call
xchg
test
sub
jbe
and
jns
pmulhuw
shll
cmp
push
imul
jg
hlt
mov
adc
sub
lods
cmpsl
jge
sahf
pop
dec
scas
and
stos
outsl
mov
jg
cmp
icebp
lcall
lock
loopne
rep
mov
insl
cs
adc
jmp
and
xor
ljmp
pop
mov
movsb
ret
or
cli
inc
ret
in
stos
mov
jg
sub
push
and
sub
mov
pop
call
roll
std
outsb
add
ljmp
jl
out
pop
mov
xchg
out
cli
movsb
inc
sub
xchg
xor
outsb
inc
mov
js
xchg
inc
repnz
mov
fidivrs
or
adc
mov
sbb
sub
pushf
mov
jg
jle
movsb
mov
cmp
notl
inc
iret
aad
sbb
xchg
cmp
fadds
aam
xchg
push
push
popf
pop
je
rorb
push
test
cmp
sti
call
push
pushf
pop
dec
lea
or
mov
jb
nop
les
les
orl
jmp
loope
jp
lcall
shrb
out
cmp
lcall
lcall
movsb
inc
xor
mov
fcmovne
rcll
xor
call
lret
or
popl
in
and
xchg
pop
adc
inc
mov
das
clc
inc
sbb
aaa
mov
add
int
es
jno
es
pop
rcll
daa
test
xchg
inc
not
aam
sub
pushl
xchg
addr16
nop
das
and
imul
push
xor
mov
outsb
lea
popa
popa
jo
xchg
aas
cmp
es
and
xchg
movsb
lret
decb
aas
loop
mov
jge
push
mov
mulb
shlb
and
or
movsb
cmpsb
movsb
cltd
pushf
xadd
push
sbb
jg
pop
mull
rcl
mov
cli
lahf
js
mov
mov
incl
cmp
mov
jmp
sub
mov
jmp
xchg
mov
mov
sti
xchg
test
pop
repnz
fldl
mov
lret
jp
jg
add
sbb
cli
jmp
xor
sub
orb
push
mov
stc
push
cli
incl
or
push
fsubrl
cmp
pop
pushf
in
int3
js
repnz
adc
cmp
scas
jl
sub
loop
imul
inc
iret
fisttpll
xchg
lcall
jb
outsl
or
jp
xchg
pop
stos
cmpsl
or
and
ljmp
xor
movsb
xchg
and
mov
push
call
nop
loop
mov
pop
mov
in
mov
pop
push
inc
cmp
mov
push
int3
outsb
call
push
adcb
in
lds
loopne
jns
sub
ljmp
test
sub
shlb
adc
push
mov
mov
call
shll
mov
jecxz
inc
faddl
lock
pop
cmpsl
push
or
movsb
pop
subb
xchg
xchg
clc
push
pop
jle
pop
cli
cld
jae
or
jmp
dec
sbb
shrl
fldt
in
out
jne
or
mov
dec
shrb
imul
lahf
xchg
paddw
fildll
mov
jg
jmp
push
int
nop
xchg
leave
aad
mov
cmp
aad
push
lret
push
out
ja
call
push
js
fildl
mov
push
adc
mov
xchg
xchg
hlt
test
addr16
loop
inc
fs
and
repz
insb
xchg
test
scas
xchg
mov
test
or
call
decl
inc
dec
mov
repz
add
adc
aas
sub
or
ja
incb
ljmp
idivb
into
out
mov
loopne
dec
sub
sub
clc
call
test
pop
cmp
ja
test
inc
cmpb
inc
xor
filds
sti
enter
mov
add
fmull
divl
subb
jnp
out
decl
nop
mov
aad
insb
or
ljmp
stos
mov
xor
xor
sub
mov
pop
mov
in
mov
cmp
mov
cmp
shl
repnz
and
jnp
sub
imul
mov
inc
xchg
jg
es
mov
sti
xchg
lahf
in
cmpsl
pop
sub
push
sahf
and
out
xchg
scas
iret
push
xchg
sbb
test
jg
notb
insb
add
push
lock
test
jmp
mov
mov
call
push
mov
add
sbb
sub
xchg
sub
push
or
dec
popa
jl,pn
pusha
sbb
test
push
fdivs
adc
dec
jecxz
adc
jl
movsl
rol
lahf
push
jle
dec
xchg
pop
inc
mov
xlat
neg
jge
data16
mov
lahf
cmp
imulb
cmp
ja
lods
push
mov
fstpl
mov
pop
cmpsl
sbb
jp
push
inc
movsb
jo,pt
outsb
cmp
or
pushl
scas
pop
bound
test
sub
pop
ja
adc
popf
sbb
fisubrs
jp
add
dec
and
rol
cli
je
add
sub
mov
mov
cwtl
test
mov
lret
inc
pop
fdivrl
hlt
out
sbb
inc
mov
aam
cld
mov
or
decl
jmp
xrelease
test
int
xchg
mov
and
jmp
push
fcoml
mov
mov
lcall
in
push
into
lds
push
add
jg
dec
xor
sub
mov
fildll
gs
out
rclb
xchg
xchg
jb
test
pop
lahf
bound
push
ljmp
cmpsb
xchg
call
sbb
rcll
pop
stos
sbb
xchg
lcall
aas
and
insb
and
sub
in
push
xor
adc
std
cwtl
add
int3
lahf
xchg
hlt
mov
add
fidivs
in
xlat
or
pop
test
fcomps
sbb
mov
mov
xchg
push
mov
hlt
cmp
jg
adc
or
int3
and
cmp
lret
loope
nop
xchg
mov
pop
inc
sub
mov
loope
sbb
orl
mov
adc
push
clc
incl
into
lea
rep
fwait
mov
adc
adc
and
ret
sbb
ljmp
cwtl
push
jae
stos
or
negl
cmc
jno
inc
and
xor
andl
sbb
mov
js
lods
mov
jo
dec
or
addr16
mov
lcall
scas
lcall
imul
negl
adc
push
std
decl
xor
sub
cmc
ror
mov
leave
jo
dec
ljmp
xor
sbb
xor
adc
outsb
pop
mov
cwtl
not
testl
mov
mov
aaa
fcomps
incl
lahf
cwtl
sbb
xor
xlat
iret
jge
leave
or
jg
sub
mov
test
dec
push
lock
pop
jge
pop
mov
sar
cmp
dec
jb
lret
je
stos
xchg
clc
adc
dec
addr16
fiadds
mov
jge
xchg
sbb
ljmp
sub
inc
mov
jnp
mov
fnstenv
push
stc
mov
fwait
clc
popf
and
mov
mov
mov
jle
lds
hlt
xor
pushl
pop
push
imul
call
aam
fdivr
xchg
mov
shll
ds
push
mov
inc
aam
add
sub
or
sub
int
cmc
or
out
sub
mov
cli
push
out
fwait
cli
arpl
mov
cld
sbb
lea
hlt
mov
mov
pushf
stc
pop
out
inc
adc
jbe
fisttps
adc
pop
arpl
jno
push
repz
arpl
fmuls
popf
in
jp
decl
je
pop
or
rol
iret
vpunpckldq
add
in
mov
lcall
inc
mov
mov
or
pop
sub
dec
dec
dec
cld
test
mov
lahf
sbb
clc
xorb
cmp
jmp
ds
aam
push
pop
adc
push
jo
dec
jmp
movsl
dec
sub
push
push
mov
cmpsl
daa
fs
sub
mov
cmp
inc
inc
mov
popf
fs
dec
lods
add
cmp
outsl
ficoml
mov
nop
ds
add
jmp
sahf
and
mov
andb
loope
or
dec
lea
lahf
push
or
mov
dec
jmp
ja
add
and
jge
and
mov
adc
xlat
jle
or
and
dec
and
stc
out
or
aas
je
mov
call
cld
imul
fisubs
pushf
cwtl
xor
cli
les
aam
mov
in
mov
addr16
stos
xchg
inc
fisubrs
xor
push
repnz
imul
mov
aam
mov
lcall
jns
insl
addb
adc
dec
cs
mov
fisubs
movsl
js
sbb
pop
stc
aad
jnp
push
call
std
movl
pushl
jbe
pop
xchg
je
jae
adc
in
fwait
pop
bound
es
jecxz
and
int3
jmp
pop
movsb
push
push
mov
inc
cmp
lods
pop
test
adc
add
and
pop
into
add
sub
out
push
mov
hlt
in
adc
loopne
aad
aad
adc
pop
cld
incl
cmpsb
xchg
sbb
hlt
movb
push
rorb
xchg
lods
lock
sub
or
xchg
loope
and
jl
jp
xchg
dec
or
int3
cwtl
inc
cmpsl
mov
mov
adc
sti
mov
xchg
shlb
xchg
and
mov
push
jecxz
sbb
fldt
das
adc
clc
jmp
ss
clc
insl
sub
jmp
mov
cmp
jl
dec
repz
ljmp
test
or
sub
xor
jmp
jmpw
jg
enter
xchg
hlt
outsb
jmp
incl
or
push
mov
shrb
testl
mov
mov
fnstenv
sbb
lcall
scas
ror
push
lret
jmp
cmc
cmpb
imul
dec
mov
mov
rcl
dec
dec
sub
call
hlt
repnz
xchg
and
fistl
in
dec
inc
lcall
lods
pop
movsl
xchg
or
addr16
lods
add
push
pop
pop
test
dec
jo
and
je
pop
dec
ret
xor
lahf
ror
aad
aaa
cld
mov
fwait
test
xchg
adc
jnp
int
and
push
cmp
mov
jnp
and
roll
push
sub
sbb
aas
jb
ret
call
pop
gs
xor
sbb
stos
shlb
pop
adc
or
add
mov
pop
in
sbb
call
xchg
jp
jae
mov
jmp
cltd
or
aam
imul
lods
push
push
push
ds
mov
add
xchg
imul
push
pushl
in
repnz
or
sarl
nop
aam
sahf
mov
mov
lcall
mov
mov
and
ljmp
add
ja
insl
call
lcall
or
mov
in
orl
pop
into
pop
cli
mov
incl
lods
insl
fstl
jno
cmc
mov
jb
mov
jne
jle
pop
jb
sub
in
adc
cmp
orl
lods
adc
jl
or
xchg
icebp
inc
pop
stos
jns
pop
mov
xchg
xchg
push
lahf
les
cltd
dec
aam
pop
push
push
xor
push
fwait
lea
cs
pop
or
cld
imul
dec
or
push
pop
add
xor
rcl
pushl
in
lock
sub
out
jl
xor
loop
ljmp
repz
test
das
rolb
pop
int
pop
push
fsubrl
mov
jne
frstor
inc
je
xchg
adc
mov
insb
or
std
int
mov
adcb
sti
std
push
lock
decl
stos
std
call
clc
pop
pop
fimull
dec
or
andl
ret
ljmp
cmpsl
xchg
mov
inc
imull
lret
cwtl
mov
fists
aaa
sub
in
jnp
pushl
outsl
push
fadds
pop
xchg
push
and
jl
jno
pusha
ss
in
sar
lcall
inc
cmpsl
xor
sub
ficoms
push
lds
dec
test
adc
imul
mov
aas
mov
mov
ljmp
pop
ret
icebp
stos
lods
insl
ljmp
jnp
das
sar
mov
jne
xchg
rcrl
ja
es
adc
mov
lcall
pop
jns
mov
pop
maxps
fidivl
and
cwtl
clc
ljmp
push
ljmp
cli
jge
adc
dec
clc
cli
ljmp
xchg
jns
out
lock
fmulp
int
lods
pop
sahf
out
mov
and
outsl
arpl
hlt
jg
or
dec
divl
fstpl
incl
mov
andnps
jp
bound
cmpsl
outsl
mov
sarb
test
mov
add
sub
push
jg
pusha
xor
push
test
jb
cmpsb
incl
adc
jae
sub
mov
mov
pop
lods
mov
outsb
lods
test
ljmp
popf
push
lock
and
lods
repz
jmp
mov
mov
add
lret
cltd
subb
cld
scas
sub
in
iret
mov
sub
inc
lcall
std
mov
ror
mov
loopne
jp
xchg
shrl
scas
shrl
test
add
inc
sarl
mov
fdivrl
in
insl
fstl
icebp
pushl
inc
out
enter
push
inc
mov
ljmp
out
test
inc
jmp
fcmovb
out
mov
mov
mov
jmp
adc
loopne
scas
sub
pop
pusha
mov
xchg
push
cmp
inc
icebp
push
add
pop
rcrb
inc
aam
dec
mov
ja
nop
jmp
std
lcall
pop
inc
xlat
dec
sub
or
jae
lds
rcrl
mov
mov
add
mov
popf
icebp
outsl
adc
jg
and
shll
cmp
cmp
add
add
cmp
fnstsw
sub
mov
ret
in
cmp
nop
data16
fwait
mov
mov
imul
lcall
pop
pop
push
pop
fcmovnb
jl
mov
fsubp
pop
jl
or
jmp
push
ljmp
jae
mov
and
test
mov
jg
push
dec
call
ret
and
stc
fsubl
add
ljmp
cmp
outsl
jb
inc
cmpsb
adc
jbe
daa
and
cli
insl
ret
test
xchg
xchg
jmp
xchg
decb
pop
sarl
arpl
inc
mov
mov
out
rolb
inc
pop
aam
outsl
mov
roll
loop
push
aas
rorl
decl
lock
jbe
loope
xchg
mov
inc
push
mov
jl
xchg
decl
jne
add
jne
add
add
js
data16
xlat
dec
js
jmp
mov
in
jmp
imul
rcrb
jns
lods
lock
pop
add
xchg
movsl
rcrb
xchg
cmp
icebp
ljmp
cmp
arpl
test
xchg
push
lret
mov
jmp
mov
dec
and
jae
outsb
fdivrs
push
inc
loop
icebp
call
pop
push
enter
sbb
sub
sbb
cli
add
adc
cmp
ljmp
icebp
jmp
lret
sbb
jbe
mov
mov
jno
int3
push
je
dec
and
sub
pushl
rclb
xor
push
dec
mov
mov
int3
push
mov
sbb
xor
mov
cltd
cmp
jno
shll
shrb
dec
scas
ljmp
fs
int
data16
clc
lcall
xchg
movsb
jnp
cmp
aad
sti
nop
mov
call
and
mov
orb
clc
daa
add
das
sub
mov
jmp
push
test
mov
push
popa
sti
jl
test
jb
enter
fcmovnu
or
out
stos
neg
sub
ret
ret
mov
mov
mov
ljmp
push
sbbl
in
aaa
aas
dec
pop
jnp
push
jle
out
ja
sahf
cmc
push
mov
adc
lcall
lock
cs
xchg
lret
cli
and
test
test
std
fst
cmc
sahf
divb
pop
mov
sti
jmp
xchg
ror
fildl
lahf
push
mov
stos
mov
fiaddl
jg
data16
inc
test
push
mov
int3
xor
iret
lret
or
paddq
inc
outsl
dec
aam
out
push
aaa
cmp
movsl
insl
aaa
fldt
xchg
imul
mov
cli
inc
loopne
inc
inc
cs
insb
mov
jg
inc
into
fistps
lahf
and
lcall
mov
dec
ljmp
std
fwait
es
fcoms
call
in
mov
sti
sub
jle
ss
cmpsl
fisttps
sti
psrlq
jmp
enter
popf
dec
xlat
jo
adc
ret
rorl
incl
call
push
xor
xor
rclb
jne
aas
and
rcll
imul
lret
out
lcall
into
clc
push
leave
push
les
adc
and
cmp
decl
lock
mov
addr16
inc
push
or
mov
adc
sub
cli
lcall
in
xor
scas
jg
inc
push
outsb
push
stos
mov
nop
xchg
lcall
mov
rcrb
repz
lcall
fcompl
cmpl
and
sar
incl
or
mov
dec
enter
mov
mov
jne
jns
rcr
lods
jle
test
call
push
cmc
scas
push
in
imull
ret
pusha
cmp
and
dec
pop
movsb
insl
or
fldl
out
mov
push
scas
data16
decl
cmp
sbb
or
xchg
test
fs
sahf
ret
adc
call
xchg
lods
popf
push
leave
mov
fstps
aam
ss
or
pop
jge
xor
xchg
inc
jg
mov
mov
mov
fisubl
lret
mov
jmp
cli
jmp
mov
pop
fimull
xlat
push
mov
test
sbb
ljmp
cli
adc
mov
ss
add
aam
mov
sbb
dec
imul
call
sbb
gs
cmp
lret
movsl
shll
add
lods
xchg
dec
add
inc
jl
fwait
mov
or
je
xlat
push
adc
fs
jg
sbb
notl
mov
jmp
or
or
fsubs
jmp
out
fmul
and
add
and
jmp
shlb
addr16
mov
leave
into
jns
call
pop
sub
sbb
jb
incl
xchg
cli
std
data16
xor
dec
std
sub
fucomip
nop
cmp
xchg
lcall
xor
push
js
ds
les
sahf
inc
faddl
cmp
loope
arpl
sarb
in
js
rorb
lock
mov
and
xor
sar
pushl
lods
aam
shll
cmpb
imul
cmp
pop
ja
dec
inc
out
xor
cmp
cmp
pop
mov
mov
push
push
lcall
arpl
cli
adc
test
jnp
call
jbe
gs
mov
jnp
imulb
loop
cmp
sbb
xchg
ret
int3
cmpsb
lahf
xchg
out
and
sbb
repz
xor
xchg
pop
pushf
cmp
fcomip
decl
leave
cmpsb
addb
sbb
je
lock
and
mov
dec
jecxz
pushl
cltd
enter
mov
data16
sub
sbb
or
sbb
in
or
lock
dec
add
sbb
fsubs
xchg
cli
cmp
mov
inc
sub
pop
std
jle
sti
shl
call
push
hlt
call
call
stos
or
out
in
enter
testl
imul
push
pusha
or
dec
cmpsl
and
inc
loope
pusha
cmpsb
pop
pop
pop
jp
adc
push
lea
data16
ljmp
inc
out
bound
jno
pop
sub
fdivs
std
sbb
test
jmp
dec
cmp
push
or
cmp
xor
mov
aas
ljmp
mov
ficoml
sbb
mov
pusha
sti
xor
dec
and
std
mov
cmpsb
jmp
gs
cmp
data16
inc
jg
inc
lcall
ljmp
jo
loopne
inc
out
sbb
jle
cmp
push
cmp
and
dec
loopne
mov
cmp
call
movsb
ret
mov
mov
mov
fbstp
mov
loopne
into
sub
cmp
test
dec
jbe
or
push
mov
adc
cwtl
jno
mov
movsb
mulb
jbe
adc
inc
mov
xchg
mov
mov
push
push
aaa
xor
dec
es
xor
mov
in
mov
call
and
or
mov
pusha
cmp
int3
cmc
sbb
mov
pop
add
jl
lret
testb
cmpsb
sbbl
call
call
std
lcall
push
mov
push
cmp
cmp
push
test
or
cmp
mov
not
push
and
jnp
popa
pop
in
push
decl
sbb
mov
stos
pop
pop
and
sbb
in
sbb
cli
popf
dec
jo
insb
fdivr
push
movsl
sbb
mov
repz
mov
sub
dec
add
ja
inc
test
cli
inc
mov
mov
jns
jmp
adc
or
dec
xor
dec
pop
jne
push
cmp
push
lea
adc
int3
push
cmovge
jle
push
js
pop
mov
and
cmp
ljmp
mov
aam
mov
pop
push
arpl
pop
adc
or
mov
xlat
xchg
pop
lods
incl
mov
or
sbb
cmp
call
aas
mov
mov
out
xor
loop
aam
shrl
xchg
sti
push
cmp
dec
xlat
push
rcrl
jae
inc
xor
ljmp
loopne
std
shrb
xchg
and
lods
fdivr
mov
push
sahf
mov
or
js
cmp
cmp
xchg
out
clc
sub
sbb
mov
mov
xor
shrb
incl
imul
and
push
jl
mov
test
dec
fs
ret
lahf
xor
cli
jg
add
or
push
mov
mov
jg
out
cmp
add
into
popa
decl
shll
xchg
fisttps
push
cmpb
and
jmp
sub
lods
push
mov
stos
push
add
inc
jmp
orb
cmpsl
icebp
cmp
ja
xchg
and
inc
imul
ljmp
test
fcomi
jae
and
test
call
add
enter
test
outsb
cmpb
cmp
addr16
iret
xchg
mov
xchg
daa
jecxz
ljmp
mov
mov
pop
push
andb
sarb
push
adc
out
push
mov
inc
jge
hlt
decl
in
je
pusha
push
mov
adc
inc
dec
push
loopne
cmp
push
mov
pop
jae
mov
in
aam
pop
fnstsw
inc
pop
dec
insb
or
repz
in
jbe
enter
ds
ljmp
scas
cmpsb
jno
mov
sub
mov
xchg
push
or
mov
repz
mov
fnstcw
pop
mov
and
div
movsl
mov
mov
lcall
or
adc
cld
mov
fsts
mov
or
mov
mov
cmp
ljmp
call
out
xor
push
and
xchg
xchg
sbb
ret
sbb
test
cs
test
decb
mov
call
std
pop
insl
cmp
fdivrl
push
dec
dec
sub
lods
mov
lcall
aad
inc
shr
mov
jnp
jg
push
out
mov
adc
bound
dec
scas
cmc
cmpsb
fidivs
push
in
and
pop
adc
imul
cmp
and
mov
imul
inc
insl
stos
mov
cltd
fnstsw
arpl
orl
lcall
imul
idivb
insb
push
insl
xchg
movsb
xchg
jb
jmp
jnp
sbb
push
push
stos
in
fiadds
mov
dec
xorl
decl
sub
sti
loop
or
fucomp
aas
jmp
sbb
and
pop
pop
insb
fwait
push
outsb
pushl
jge
jl
inc
int
sbb
adc
push
and
aam
mov
inc
push
es
pushl
pushf
enter
sahf
mov
test
shrl
int3
cmp
sub
mov
jmp
xchg
cmp
xor
adc
xchg
push
push
flds
jmp
popf
rorl
inc
add
push
stos
movsl
aam
popf
mov
xchg
into
push
cli
cmp
icebp
incl
fldenv
mov
jmp
ljmp
shr
push
xchg
add
inc
cli
fbld
fcmovnu
leave
clc
pop
sub
icebp
and
pop
mov
push
pop
cmp
call
ret
pop
test
aas
out
fcmovu
imul
lock
ret
lods
cld
mov
pop
inc
sub
mov
dec
jl
pop
jle
ret
pop
in
lods
adcb
fstl
or
cltd
call
mov
xchg
hlt
pop
rcl
enter
jns
fdivr
or
out
inc
inc
jno
in
clc
or
stos
adc
lods
mov
cmp
and
ss
out
mov
cwtl
rcl
xchg
sbb
es
dec
int
push
fwait
in
xor
jg
cli
jg
lcall
push
jmp
test
cmp
in
mov
push
inc
call
add
ja
adc
adc
dec
xchg
pop
fmull
mov
lock
xchg
pop
in
dec
call
pop
inc
mov
loop
mov
sbb
or
dec
ret
gs
push
test
lock
shlb
decl
pop
inc
xchg
popa
out
or
inc
xchg
fisubl
xor
movl
incl
lret
xchg
xor
fwait
stos
das
inc
dec
sub
xlat
jmp
push
xor
aaa
sub
lret
sub
sub
popf
cmp
ljmp
pushf
mov
adc
and
iret
pusha
mov
xor
loop
sarb
fidivrs
std
xor
xor
scas
lods
das
pop
sahf
push
jmp
popf
jmp
cmp
push
out
pushf
push
lcall
es
loope
mov
incl
mov
mov
cmpsl
out
mov
int
xor
mov
mov
notb
mov
out
sbb
and
or
ret
out
mov
scas
clc
jmp
fs
mov
add
xchg
mov
adc
in
ja
jmp
push
adc
sbb
mov
bound
subb
jmp
ss
push
mov
sarl
std
xor
out
insl
mov
jo
adc
insb
ljmp
adc
dec
clc
fiadds
sbb
stos
sub
inc
xchg
and
push
decl
mov
popa
mov
cmpsl
gs
push
cmp
xchg
lcall
jno
out
aaa
inc
cld
fimull
sub
int
jl
rcrb
jp
mov
pop
cltd
popf
or
cmp
js
jnp
mov
aas
push
inc
and
fimuls
test
outsb
in
jg
pop
mov
lds
in
pusha
shrb
jl
xlat
test
mov
adc
repz
or
mov
mov
cmp
sbb
mov
jbe
repnz
sub
cmpb
jmp
cmp
sbb
xor
xor
clc
pushf
push
add
loopne
hlt
mov
incl
jecxz
cwtl
out
out
mov
movsb
stos
mov
insb
xor
mov
cld
rorl
les
ljmp
movsb
cmp
pushf
pop
and
es
inc
lods
sbb
enter
popf
hlt
rcrb
test
aaa
cmp
test
xor
test
rolb
adc
xchg
mov
mov
pop
icebp
inc
xchg
fs
adc
dec
sbb
movsb
dec
jmp
cmp
lcall
popf
xchg
cmp
jl
daa
or
aad
daa
incl
loop
outsl
dec
cmpsb
fnstenv
movsl
leave
fwait
mov
dec
push
or
mov
dec
xorb
push
les
cltd
shlb
nop
icebp
dec
enter
sahf
fdivrp
cmp
mov
aam
dec
testl
call
cld
mov
addl
insl
mov
in
mov
aas
pop
mov
ljmp
in
cmc
ljmp
insl
xchg
jbe
xlat
or
inc
movsl
mov
lcall
dec
xlat
imul
jbe
mov
or
xchg
loope
inc
loop
leave
mov
decl
and
test
out
mov
sub
cmpsb
mov
xchg
je
push
inc
jg
mov
or
hlt
out
and
movsb
pop
loopne
pop
mov
mov
jge
nop
mov
dec
scas
scas
dec
das
push
push
cmp
sub
dec
test
scas
es
decl
insb
cmp
nop
fimull
enter
stos
pop
xor
hlt
adc
xchg
out
mov
decl
into
xchg
sbbb
test
ret
rclb
imul
and
insb
stc
lods
pop
jno
dec
push
xor
xlat
push
cmpl
pusha
movsb
mov
js
mov
insb
sbb
into
sub
sbb
out
ljmp
cwtl
scas
mov
imul
divb
orl
incl
inc
xchg
mov
in
mov
or
fwait
push
filds
mov
dec
lods
pop
decl
test
jne
gs
clc
pop
aaa
inc
das
or
repnz
pop
es
cltd
xchg
scas
xor
dec
cld
dec
inc
sub
fsubr
mov
mov
pop
and
add
pop
add
sahf
mov
loope
lds
in
mov
ret
aaa
roll
lcall
cs
aas
jo
les
movsl
dec
ret
jmp
or
bound
or
cld
das
cmp
adc
mov
pop
dec
mov
outsl
das
cmp
lcall
js
push
jo
scas
mov
mov
int3
dec
push
loopne
pop
xchg
mov
lcall
stos
stos
jbe
pop
inc
lret
mov
mov
mov
fsubrl
ret
out
addr16
dec
clc
fidivs
lock
cmpsb
in
out
sbb
jg
dec
rcl
sub
cmpb
cmp
test
mov
push
lret
pop
lret
xor
inc
xchg
adc
insb
xlat
outsb
test
rolb
pop
sub
addr16
pop
cmp
mov
inc
rcl
pop
adcb
int
loopne
divb
call
mov
jecxz
mov
or
ds
fcomip
lcall
push
sub
je
push
mov
cmp
push
sahf
loop
mov
xchg
ret
push
std
call
xchg
adc
kandw
out
test
push
adc
fisttpll
xchg
mov
mov
test
mov
inc
pop
and
je
das
clc
out
pop
pop
fwait
mov
xor
lods
push
std
sarl
or
into
jo
ja
incl
clc
mov
pop
js
jp
incl
mov
add
mov
mov
ret
mov
clc
dec
jnp
xchg
lods
fucomi
and
mov
ljmp
pop
in
mov
sar
leave
ljmp
aaa
pop
mov
fadd
cwtl
inc
sub
cld
push
mov
ljmp
pop
lcall
and
cmp
mov
adc
popa
ja
fcompl
nop
fmulp
fstpt
or
stos
mov
push
outsb
ss
pop
sbb
pop
xor
int
cli
aas
scas
pusha
inc
imul
jns
lea
out
xadd
push
nop
cli
lahf
lock
jns
imul
icebp
fidivrs
test
dec
lock
push
jle
pmaddwd
xor
fdivl
dec
mov
popa
lcall
pusha
jp
push
fucomi
lea
pop
lea
jnp
push
pop
in
test
jne
dec
loop
lock
jl
ss
pop
mov
or
aas
add
loop
frstor
out
adc
ret
pop
dec
xchg
mov
das
ret
sub
std
leave
cmp
xchg
es
sbb
and
cmpsl
in
push
jl
call
pushl
xchg
out
xchg
and
push
pop
cmp
orb
push
inc
int3
sbb
incl
cmp
and
xchg
aas
xchg
xor
mov
ljmp
mov
ss
xchg
daa
push
mov
ds
sub
adc
ret
and
aaa
ljmp
mov
int3
xchg
loopne
les
inc
sti
jmp
test
pop
sti
mov
cmp
or
xchg
inc
hlt
decl
push
xchg
cld
test
dec
jne
scas
mov
inc
shlb
lcall
and
jp
loopne
ljmp
fcmovnbe
push
fsubrs
jns
js
cmpsl
test
cmp
add
pop
add
out
mov
cld
ljmp
push
loope
cld
mov
imul
bound
repnz
push
mov
jge
mov
jb
ja
fdivrp
push
insb
sub
jecxz
test
mov
jmp
insb
xchg
pop
cli
pop
in
inc
adc
in
fnstcw
push
xor
test
out
pop
push
sar
aaa
js
loop
pushf
aas
sub
clc
jo
inc
add
mov
mov
push
mov
out
test
lcall
dec
jo
xor
mov
ss
rclb
cmp
imul
pop
dec
mov
ds
sbb
stos
aam
jg
test
popa
int3
adc
icebp
loopne
js
xchg
loopne
inc
mov
gs
xchg
adc
push
pop
adc
inc
fstpl
xor
push
pop
data16
push
jnp
xchg
das
movsb
cltd
shrb
xchg
and
push
loope
mov
pushl
enter
pop
icebp
push
and
inc
mov
jo
jnp
inc
imul
cli
call
xchg
imul
sbb
and
cmp
sbb
pop
into
xchg
mov
rolb
xlat
mov
mov
pcmpgtd
aas
adc
imul
cmpsb
push
add
sar
or
stc
sbb
lods
stos
mov
pop
fs
cmpsl
lods
xor
sub
shrl
pop
sub
mov
out
clc
sti
invd
or
into
adc
outsl
pop
mov
push
dec
jecxz
push
in
dec
lods
clc
ljmp
push
mov
mov
clc
mov
and
mov
push
add
dec
subb
clc
jnp
ja
call
xchg
mov
cmp
mov
add
shlb
decl
mov
dec
inc
inc
fcoms
xchg
je
sub
subl
call
mov
and
xchg
jae
xor
jno
add
loop
mov
or
mov
pop
adc
mov
out
fs
xchg
arpl
hlt
xchg
aaa
cli
fisttps
mov
or
mov
xchg
adc
aas
dec
mov
repz
pop
in
add
add
mov
inc
mov
push
insl
loope
or
and
scas
imul
dec
repnz
fnsave
dec
pop
ret
clc
ljmp
rcrb
sahf
cmpl
cmpsl
sbb
and
sub
push
xchg
lcall
mov
call
cmp
pop
es
adc
imul
jmp
sbb
push
decl
dec
mov
xor
insl
dec
scas
pop
js
movsl
inc
cmp
bound
call
adc
movsl
mov
mov
lea
int3
out
push
fadd
cmpsb
cmp
sbb
call
das
jb
arpl
lret
popa
xchg
popa
in
arpl
mov
fwait
ljmp
mov
adc
fdivs
jmp
mov
jg
aad
in
or
lret
pop
fdivl
xchg
rorl
and
mov
jmp
cwtl
xlat
imul
mov
xor
in
push
sub
leave
adc
push
mov
or
jle
inc
xchg
or
movsb
cmpsb
ljmp
mov
sbb
popa
cli
mov
in
mov
xor
mov
pop
jne
dec
enter
cli
dec
stos
les
rcrb
xchg
decl
mov
push
adc
scas
bound
xchg
mov
ss
and
scas
adc
call
fistl
ror
rorb
inc
mov
mov
dec
out
jl
fmull
fwait
decb
pop
in
xor
inc
push
jle
push
cmp
xchg
mov
lds
adc
xchg
jae
mov
addr16
jmp
lahf
pop
int3
fsubl
or
inc
inc
xor
mov
scas
sub
in
popa
scas
les
incl
inc
rcrl
push
cli
cmp
std
adc
xchg
jmp
pushl
jg
mov
scas
jg
mov
or
jbe
adcb
lar
mov
ret
out
mov
lret
imul
adc
fs
mov
jge
xor
negl
adc
jecxz
jmp
mov
aam
mov
ficompl
inc
cmp
pop
xor
lcall
jmp
scas
push
push
adc
jae
add
sbb
jb
mov
loop
nop
push
xor
fsubp
mov
sbb
push
std
cli
xchg
or
xchg
movsb
and
push
and
ljmp
lcall
mov
cmp
mov
add
inc
mov
mov
sub
add
sub
inc
adc
ja
shl
fidivrl
fs
dec
jg
dec
adc
outsb
insb
push
out
mov
mov
inc
push
push
pop
xchg
push
cmp
mov
les
or
sbb
nop
pop
in
imul
sbb
mov
cmp
dec
push
fimull
sub
incl
push
add
faddp
lret
subb
mov
lret
pop
fildl
dec
inc
pop
mov
cwtl
pop
das
lcall
mov
mov
test
and
lcall
ss
xor
pop
dec
mov
ljmp
into
dec
loopne
xchg
jns
and
mov
dec
lds
mov
nop
mov
cmp
adc
inc
push
fcompl
xchg
mov
jbe
fisttpll
test
in
xchg
xchg
out
lret
call
sti
out
cwtl
data16
push
popf
cmp
repz
es
jae
fadds
andb
bound
jns
ljmp
adc
lock
repnz
inc
cwtl
or
inc
out
lods
stc
test
fs
pop
leave
int
decl
push
mov
pop
mov
jge
lods
lea
jmp
mov
pop
fstpt
cld
pop
mov
inc
sub
lcall
outsl
sahf
mov
fstps
jne
push
sbbl
hlt
lcall
test
lods
push
xchg
es
mov
sub
push
lea
cmp
and
dec
jo
lods
sbb
sub
jbe
push
js
inc
icebp
shlb
iret
pushl
jno
stos
shll
add
cltd
test
jecxz
pusha
dec
lods
and
pushl
sti
orl
adc
in
push
fcompl
inc
or
xchg
clc
lcall
ret
lock
xchg
fdivrp
mov
inc
cmpsl
push
dec
jl
sbb
sub
ljmp
lock
orl
js
punpckldq
ljmp
in
repnz
mov
test
nop
push
addb
loop
cmp
mov
das
cli
inc
xor
or
adc
dec
lock
fsubrl
cmp
sub
aad
jg
fcmovb
inc
mov
dec
pop
call
rcrb
lods
ss
mov
dec
lock
mov
std
je
xchg
mov
push
mov
fdiv
and
and
scas
xor
nop
or
pop
lock
inc
scas
mov
mov
mov
frstor
lds
mov
call
daa
sbb
pop
cmp
daa
repz
sbb
push
dec
idivl
dec
orb
into
lods
jbe
cmp
push
fimull
into
dec
jno
push
xor
cmp
incl
mov
dec
in
lcall
lock
mov
add
lods
mov
outsl
xchg
aas
adc
cmp
incl
xor
subl
fsubl
or
orl
gs
jecxz
nop
pop
imul
adc
incl
addb
xor
or
sub
je
fcomip
out
ljmp
mov
inc
outsb
stos
pop
pop
shrb
xchg
cs
hlt
in
push
jg
push
push
test
jmp
outsb
test
mov
mov
hlt
jle
mov
call
cli
loop
shrb
mov
add
sbb
sbb
and
lcall
arpl
aad
and
fstps
mov
or
push
das
push
xor
ror
jmp
test
mov
mov
xchg
shl
je
jbe
shll
aaa
jns
adc
repnz
jmp
sbb
mov
add
mov
jecxz
cs
hlt
fsubrl
ret
xor
dec
push
adc
pop
loopne
lds
icebp
push
ret
jmp
popf
ja
push
lcall
sbbl
inc
sub
jg
adc
mov
lods
dec
adc
out
inc
xor
leave
mov
stos
bound
hlt
add
dec
xchg
cmc
scas
in
pop
cmpsl
test
loopne
mov
lcall
pushf
inc
lcall
xchg
inc
mov
jmp
repnz
and
cltd
fucomp
dec
shrl
and
insl
cld
xchg
mov
scas
gs
cld
inc
mov
loop
adc
rcrb
pushf
sub
cmp
mov
and
and
divl
lcall
lret
mov
xchg
rcr
out
inc
mov
mov
mov
jg
je
pop
sbb
out
clc
decl
hlt
nop
xor
ljmp
popf
stc
in
cli
pushl
inc
cmpsb
sti
sbb
mov
push
aas
jae
adc
mov
jbe
and
pushf
loope
ljmp
fdivr
scas
cmpsl
mov
leave
and
pop
sbb
je
mov
ljmp
popa
push
std
clc
mov
dec
addr16
push
int
popa
push
jg
mov
bound
xor
and
out
fs
out
jg
in
xor
jl
adc
and
pushf
imul
les
mov
dec
push
in
stos
adc
repnz
call
shrb
scas
push
fucomp
arpl
out
ror
push
sbb
cmpsb
dec
push
into
mov
push
jae
mov
std
fbstp
jae
dec
push
iret
hlt
jnp
xorb
outsl
push
adc
adc
xchg
mov
fbstp
adc
dec
cmp
stos
jl
addr16
aad
cmpsl
cmp
arpl
sbb
jg
xor
or
mov
jae
mov
pop
mov
mov
xchg
dec
ret
xor
pop
roll
cwtl
cmp
dec
in
jg
gs
loopne
push
fwait
ss
out
leave
mov
xlat
mov
push
bound
xchg
push
lock
repz
movsl
or
jg
ret
xor
lods
inc
xor
stos
cltd
jbe
jbe
and
sbb
int
jg
add
notb
fucomip
stos
cmp
lcall
sbb
and
mov
imul
movsl
addr16
push
idivb
aaa
cmp
aas
xchg
rcll
hlt
pop
mov
mov
pop
jmp
lea
push
cmpsb
add
jne
scas
adc
push
push
mov
stc
fcompl
ss
inc
push
loop
sbb
jl
and
push
sti
or
push
cmp
ds
dec
idivl
int
shll
pop
rclb
sub
decl
adc
mov
popf
jg
loop
push
fcomip
jmp
ljmp
adc
cmp
cmp
roll
nop
popf
mov
dec
inc
lcall
or
mov
jecxz
xchg
call
xor
call
imul
inc
mov
jae
sub
jle
and
or
aaa
cld
push
jo
mov
movsbl
fmull
test
mov
out
sub
jmp
push
dec
inc
jecxz
out
icebp
jge
adc
mov
adc
pop
cwtl
lret
out
inc
sub
xchg
pop
dec
sbb
das
out
or
add
scas
outsb
rcll
lcall
insb
pop
inc
lcall
jae
xchg
and
std
and
cmp
outsb
pop
fcomip
arpl
iret
jae
fimuls
xor
stos
lds
movsl
cmp
ljmp
cmp
push
jne
shlb
lret
shlb
std
out
sub
mov
inc
cmp
popa
out
sahf
xchg
sarl
push
lods
call
stos
dec
mov
pusha
outsb
pop
mov
insb
jns
and
ljmp
dec
and
mov
cs
cmpsb
in
push
add
cmp
pop
adc
fcomip
or
and
cmp
out
into
jne
push
sub
cmc
cld
jmp
fs
cmp
xor
add
hlt
je
cli
xchg
xchg
or
pop
out
push
xor
push
dec
inc
lods
aaa
xchg
xchg
dec
daa
xchg
in
fdivrs
ljmp
sub
enter
pushf
lret
add
nop
jo
adc
lret
adc
jns
mov
es
mov
or
xlat
pop
test
adc
mov
mov
add
add
push
scas
outsb
jae
pop
and
push
leave
sbb
lcall
pop
int3
loope
sbb
aad
jp
popa
gs
xchg
les
push
ret
pop
inc
test
cmp
repnz
xchg
dec
fldl
jecxz
push
loopne
inc
daa
or
pop
call
mov
iret
loope
rcrb
jl
test
into
subl
lcall
sbb
or
test
out
dec
sub
cmp
xor
lcall
repnz
xor
sub
insl
scas
roll
jmp
ljmp
imul
fistps
mov
cs
push
and
inc
stos
cmpsb
inc
xchg
cmp
ja
cld
adc
lea
mov
enter
pop
nop
int
push
push
lock
jge
and
push
dec
aam
out
les
pushl
push
mov
push
cmpsb
fcomps
test
add
mov
mov
repnz
jg
hlt
dec
pop
mov
dec
pop
xsha1
cmpsb
bts
mov
mov
cmp
icebp
pushl
or
cmpsb
mov
mov
in
jl
dec
adcl
incl
cmc
jnp
mov
mov
into
mov
stos
scas
or
xor
mov
sbb
pop
pop
cmpsl
inc
cmpsl
fwait
cmp
jp
xrelease
jl
mov
pop
add
cld
mov
aaa
outsl
movsb
xchg
mov
sub
xor
fs
xchg
mov
das
aam
xchg
ret
lods
xor
sbb
or
inc
test
xchg
icebp
call
dec
push
fadd
lock
cmp
fsubrl
or
test
in
inc
adc
jg
xor
pop
pop
jns
dec
neg
or
mov
dec
out
lds
add
xorl
dec
mov
xchg
jb
data16
mov
movsb
aad
lock
lahf
mov
push
mov
push
scas
dec
xchg
decl
jp
pushf
jge
dec
test
mov
or
cmp
call
lret
aaa
das
jbe
mov
jge
imull
js
cmpb
cmp
outsl
ret
es
incl
stos
or
test
sub
andl
mov
lock
popf
jb
sub
shr
fwait
cmp
mov
lcall
outsb
sbb
mov
mov
daa
jno
push
sbb
adc
push
push
sahf
fildl
mov
push
shl
push
dec
shl
adc
cmove
incl
sub
enter
ficomps
jg
in
mov
ret
dec
sbb
jg
cld
pop
inc
movsb
fimuls
inc
pop
adc
mov
mov
xor
dec
scas
mov
push
inc
xchg
fwait
rolb
neg
rcl
push
mov
xor
fwait
xchg
out
jecxz
sbb
sarl
and
repnz
mov
xor
adc
sbb
fsubl
hlt
in
test
call
push
andb
cmp
rcll
pop
pop
cmp
xor
mov
pop
andb
lds
sub
jle
xchg
jg
call
cmp
iret
jl
jns
out
mov
jae
inc
mov
mov
cli
jmp
xchg
imul
mov
inc
frstor
inc
jnp
decl
jae
push
sbb
mov
inc
insb
fcmovnbe
xchg
mov
xor
idivl
pop
decl
mov
fdivrs
nopl
ret
jle
stc
and
ret
mov
add
jmp
push
push
in
jno
lods
das
dec
pop
cli
mov
nop
jnp
ja
scas
ljmp
xchg
fmuls
jg
mov
inc
mov
arpl
jg
jmp
pop
mov
les
mov
sbb
mov
fistpll
popa
in
mov
inc
repz
sub
cmp
cmpsl
sbb
data16
jmp
call
push
and
add
mov
scas
loopne
sub
xchg
fadds
cmp
push
jbe
dec
xchg
ds
orb
dec
inc
xor
fidivs
rep
loope
mov
lcall
dec
sbb
popf
in
xchg
inc
cmp
in
xchg
sahf
shl
in
decl
mov
loope
mov
loope
mov
pop
push
adc
testb
mov
mov
add
int
sbb
pop
aam
lret
push
test
ja
ret
cmp
inc
imul
dec
aam
mov
scas
mov
stc
cmp
lock
or
decl
rclb
lods
lea
jne
inc
leave
cltd
jp
fidivrs
jno
mov
aaa
std
jmp
push
dec
imul
mov
test
push
rolb
and
test
lahf
push
ss
sub
mov
mov
mov
and
ret
in
leave
xor
popw
rcr
cmp
and
stos
ret
jg
call
inc
jmp
mov
rcll
leave
pusha
push
adc
aad
loope
rcr
mov
inc
into
mov
dec
mov
xchg
cltd
call
sbb
stos
sti
imul
xor
mov
xchg
dec
insb
test
incl
in
inc
xchg
adc
scas
shlb
add
lds
pop
jmp
lcall
pop
jns
inc
mov
adc
push
mov
jae
sub
in
cli
outsl
mov
or
out
scas
cmpsb
scas
jl
fdivr
ljmp
lods
mov
mov
sbb
pop
scas
es
in
jg
pop
adc
out
mov
out
sub
or
push
mov
cmpb
adc
mov
mov
out
mov
fstl
icebp
stos
ret
inc
enter
dec
add
mov
loopne
push
mov
jecxz
in
mov
negb
mov
dec
int
lcall
lcall
insl
pusha
mov
iret
ljmp
aas
sub
gs
in
fcomip
mov
idivl
shll
shlb
in
mov
jmp
pop
jbe
or
fdivr
insb
lahf
lods
mov
mov
fwait
cltd
adc
fcomip
je
xchg
mov
xchg
inc
aaa
xchg
mov
xor
dec
decb
ljmp
lds
adc
dec
sub
dec
mov
int3
scas
cmp
mov
jmp
fs
mov
jmp
sub
lcall
adc
pop
cli
out
test
inc
push
rorb
cld
lock
loopne
int
jl
or
jns
push
cld
mov
mov
or
fdiv
rcrb
sbb
lcall
decl
jae
rcrb
fs
in
pop
ja
lret
pop
sub
jmp
xor
ljmp
xor
pop
stos
cli
test
xor
decl
push
cmp
and
sub
dec
cmp
xor
cmpsl
in
sti
push
ucomiss
or
pop
xchg
inc
xchg
fildll
loope
sub
les
iret
jae
incl
sbb
pop
xor
je
sahf
roll
sbb
loopne
add
ljmp
sbb
cmc
add
sbb
dec
add
inc
mov
inc
outsb
std
pop
ljmp
jmp
xchg
inc
shll
outsl
div
push
lar
sub
jg
inc
hlt
scas
adc
sub
int3
jg
insl
cld
jecxz
iret
push
xchg
pop
ret
cwtl
pop
add
inc
fdivr
jo
inc
out
jle
jno
xchg
add
and
inc
loopne
call
mov
xlat
jg
and
jp
and
insl
xor
dec
inc
lea
lret
call
sbb
dec
mov
andb
add
push
call
add
lcall
inc
js
lahf
ljmp
sbb
imul
pop
xchg
jge
sub
pop
inc
sar
and
adc
pop
fsubl
insl
sarl
ja
pushl
scas
test
lret
mov
xchg
ret
outsb
cmp
ficoms
push
jp
cmp
ljmp
repnz
push
test
out
je
ftst
fs
xchg
jb
mov
jge
notb
data16
iret
push
jge
imul
pop
daa
cwtl
add
jmp
mov
xlat
cs
adc
stos
leave
imul
cmp
mov
in
pushl
mov
fstl
xor
lods
rclb
mov
xorb
fsubr
xchg
mov
inc
push
cmp
mov
or
int
arpl
cmp
sub
and
mov
dec
fidivs
cmp
add
and
jg
ljmp
stos
repnz
sti
mov
int3
adc
pop
sub
xor
mov
cmp
mov
mov
ficoms
clc
mov
pop
fs
vucomiss
cmc
call
jo
cmp
push
dec
incb
jge
sar
mov
data16
and
mov
loop
and
call
mov
push
dec
or
cmpsl
leave
les
popa
push
cmpsb
scas
and
cmp
inc
mov
es
cmp
rcrb
pop
sbb
shlb
cld
cs
add
dec
movsl
xor
pop
lcall
inc
sbb
push
cmp
stc
shrl
push
aad
xor
dec
stos
ljmp
jmp
aas
pusha
jb
add
add
addr16
inc
xor
xchg
outsl
call
call
add
popf
cmp
or
leave
je
inc
stos
pop
xor
lds
test
inc
ret
sbb
loopne
call
push
mov
jp
out
cltd
js
jmp
ror
or
lods
mov
mov
aam
xlat
scas
idiv
push
dec
rolb
jne
or
cwtl
popa
test
mov
adc
sbb
mov
adc
and
jne
sahf
push
mov
inc
insl
mov
sub
lds
dec
repz
fnstcw
addr16
jmp
insb
aam
ds
ss
sub
or
lahf
repnz
jmp
sub
push
les
fsubrs
es
aas
je
inc
xchg
sbb
xchg
pop
in
loopne
call
inc
out
loopne
add
push
dec
xchg
sti
push
push
call
adcb
jl
les
adc
out
push
nop
and
add
dec
test
sbb
aad
mov
add
and
loop
sti
jb
mov
add
pop
sahf
or
ficoms
scas
das
sbb
stos
pop
or
dec
jnp
inc
into
call
dec
inc
in
daa
inc
cs
lock
int
or
in
mov
jl
and
and
int3
adc
jns
ret
mov
mov
gs
add
or
and
rolb
pushl
jne
inc
test
pop
mov
cli
mov
test
jecxz
push
jno
and
pop
daa
decl
mov
test
add
mov
ljmp
out
mov
ljmp
push
or
add
jmp
out
mov
pushf
lret
in
xchg
mov
and
fs
sbb
sub
decl
aas
loope
rorb
push
ds
adc
insl
inc
cltd
and
lods
into
pop
fildll
loope
call
test
cmpsl
xchg
dec
xor
cli
xchg
adc
aas
inc
pop
inc
ret
cmpl
cmp
ja
jecxz
lcall
clc
jp
lahf
into
fcmovu
ss
negb
and
inc
and
add
pop
cmp
int
jecxz
scas
jg
xchg
gs
push
xlat
daa
into
mov
in
push
shlb
mov
pop
cmp
adc
push
sar
add
push
fistpl
test
test
push
pop
jnp
and
sub
add
cmp
add
rorl
jbe,pn
jg
jg
in
pop
xorl
call
adc
sahf
jnp
mov
call
inc
push
and
lea
adc
and
mov
adc
int
andl
xlat
dec
outsb
jb
popf
sbb
add
add
call
adc
xor
int3
cmpsb
repz
cmp
fcompl
rclb
jmp
adc
jle
cmpsb
test
int
or
cmp
in
addr16
lea
mov
stos
fnstenv
ljmp
pop
or
sarl
lods
imul
and
fucomp
push
jle
test
hlt
inc
nop
xchg
hlt
jle
adc
lock
das
lds
mov
jp
xor
scas
jnp
das
jo
dec
mov
dec
lret
cmpsl
mov
inc
lcall
out
xlat
cmp
inc
inc
pop
add
dec
testl
in
xor
push
call
or
int
mov
rolb
lret
std
or
push
dec
fcos
mov
xchg
cmp
jecxz
enter
jle
ljmp
mov
mov
jmp
fnstcw
out
jno
xchg
jbe
imul
cmp
in
ret
pop
push
imul
lock
inc
sbb
shlb
clc
lods
inc
cld
pop
xchg
mov
pop
pop
inc
hlt
jmp
ljmp
out
dec
and
loopne
popa
int
sbb
fucom
pop
sub
xor
outsl
and
cmp
ja
ja
lods
cmp
sub
int3
mov
aad
inc
mov
rorb
adc
pop
cmp
mov
loope
dec
rcrb
in
stc
xor
pop
lahf
aam
mov
and
or
adc
nop
inc
add
add
add
inc
or
push
push
inc
cld
ljmp
arpl
add
gs
push
mov
outsl
jb
popa
outsb
arpl
outsl
jne
je
xor
insb
outsl
stos
mov
gs
dec
and
jle
sub
arpl
sub
je
push
inc
popa
fs
xor
and
outsl
jbe
push
arpl
mov
call
jo
imul
mov
push
push
data16
fisubrl
fdivl
push
adc
mov
je
popa
es
bound
imul
fistpl
cld
jae
push
dec
imul
jne
inc
insb
xor
outsl
push
jp
inc
pop
outsb
adc
xchg
movsl
roll
imul
dec
adc
sbb
push
jb
gs
mov
addr16
jae
inc
gs
jne
je
inc
dec
inc
stos
fisubl
sbbl
add
sub
push
inc
push
xor
xor
jae,pt
jae
sahf
sbb
add
add
push
and
filds
pop
or
and
inc
jbe
push
pop
xchg
int
inc
xchg
push
rcrl
bound
stos
sub
mov
ljmp
dec
jbe
inc
push
inc
je
arpl
gs
outsl
imul
push
loopne
aaa
and
pop
push
lret
inc
inc
push
fldcw
adc
movsl
lcall
xor
push
push
adc
or
xorl
out
sub
inc
push
cmp
jne
pop
mov
enter
xor
jae
inc
and
mov
in
adc
xchg
sub
or
inc
sbb
add
gs
loope
sbb
pop
sbb
pop
inc
arpl
das
inc
jns
push
outsl
push
imul
ret
dec
or
shrl
dec
jns
add
lcall
stos
mov
dec
cmpsb
push
aad
or
pop
mov
mov
adc
shl
frstor
mov
enter
push
sub
sbb
pop
inc
test
lods
rcr
inc
cltd
popa
dec
jge
xchg
jne
add
xchg
test
or
jbe
sbb
or
push
inc
sbb
push
fs
sbb
or
push
in
pop
add
out
mov
outsb
ja
xor
jns
dec
jge
inc
jae
adc
sub
outsl
pop
inc
adcb
dec
adc
test
fstl
sbb
arpl
mov
adc
dec
and
xchg
inc
mov
mov
push
lds
pusha
mov
sbb
adc
ss
jo
in
xchg
andl
rcll
push
pop
push
lds
add
add
jb
dec
adc
pop
or
add
stos
test
inc
rcrl
add
push
insl
push
ficomps
push
pop
in
cwtl
and
dec
add
or
stos
dec
push
push
inc
push
fildll
add
subl
orl
push
inc
pop
fdivr
insl
sbb
movups
adc
in
xchg
cltd
add
prefetcht1
data16
lea
mov
xchg
jo
adc
jne
pushf
jp
jnp
int
subb
je
jg
mov
std
and
jb,pn
popa
cmp
push
add
add
fistl
inc
outsb
dec
push
pop
inc
je
mov
dec
shrb
add
rorb
mov
jb
jb
daa
fldl
out
add
lret
dec
xchg
and
mov
add
inc
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
nop
add
add
sbb
mov
add
in
add
add
add
mov
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
filds
add
sub
add
filds
aas
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
cmp
adc
add
inc
add
insl
add
add
je
jae
add
push
add
insb
add
popa
add
add
push
add
jb
jae
imul
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
inc
add
xor
xor
xor
xor
and
inc
add
jb
add
add
add
jb
popa
add
jns
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
add
dec
add
bound
add
sahf
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
bound
add
add
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
xor
dec
add
add
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
xor
dec
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
jne
imul
and
inc
add
je
add
add
add
sub
and
xor
xor
and
dec
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
xchg
sub
adc
pushf
test
mov
dec
push
dec
push
mov
ds
inc
pop
dec
lods
ljmp
xchg
aaa
pop
cmpsb
mov
lock
outsb
movsl
inc
fwait
xor
rol
pusha
pop
mov
cmc
mov
outsl
and
jg
push
sahf
xchg
dec
push
xchg
repnz
daa
mov
sub
sub
wrmsr
sbb
les
fsincos
jo
adc
in
test
insb
test
jge,pt
cwtl
xor
fadds
fcoml
or
sub
sub
mov
cmpsb
jl
mov
shrb
pop
hlt
inc
push
cli
push
push
clc
iret
outsb
or
cmp
xor
mov
loopne
pushf
sti
dec
sbb
sti
sub
fdivs
or
mov
lods
adc
test
mov
lock
jg
dec
mov
mov
sbb
mov
loope
mov
mov
jp
dec
jbe
mov
inc
adc
mov
jo
push
loope
cmpsl
cld
inc
rolb
inc
add
dec
xlat
stos
sahf
mov
into
iret
xor
daa
sarl
jb
add
and
sub
push
pop
loopne
xchg
or
push
aad
push
cmc
ret
xor
test
push
loop
xor
sub
test
push
fcoms
inc
dec
stos
dec
push
adc
sbbb
stos
xchg
arpl
sub
aam
sbb
mov
repnz
ret
cmp
fsubl
ds
arpl
ret
pop
inc
out
pop
in
dec
push
je
add
imul
stos
fisubrs
xchg
std
fstpt
aas
mov
outsl
lahf
xor
dec
push
mov
sub
pop
icebp
xor
dec
out
out
mov
fs
movsb
sub
add
dec
mov
jns
pop
mov
jns
fs
jns
cmpb
add
mov
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
push
jo
jb
