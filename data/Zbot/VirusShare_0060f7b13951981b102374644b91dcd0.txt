cmp
jnp
dec
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
lea
mov
mov
add
push
pop
xor
cmp
je
sub
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
jmp
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
gs
inc
aam
adc
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
loopne
pop
add
dec
rorl
fmull
sbb
jle
js
dec
sbb
mov
es
leave
iret
gs
inc
popa
fidivl
ss
scas
scas
aaa
and
data16
cli
imul
cs
jns
ror
xchg
mov
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
popf
xor
ja
jnp
arpl
hlt
cli
mov
movsl
adc
mov
push
mov
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
mov
popfw
cmp
in
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
jge
sti
sbb
jb,pn
xor
cld
gs
popf
stc
add
inc
inc
adc
test
repnz
popf
aaa
cltd
mov
dec
fcoml
or
outsl
movsb
fiaddl
out
lcall
mov
sub
cmp
lods
mov
sbbl
mov
imul
addr16
mov
and
sub
dec
push
and
fcoms
dec
mov
mov
jge
sub
xchg
insl
mov
push
pop
outsb
xchg
sub
enter
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
inc
rorl
mov
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
out
lods
xchg
insl
inc
in
inc
push
push
sub
add
inc
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
.byte
.byte
sub
add
mov
add
scas
and
add
and
add
and
add
and
add
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
hlt
and
add
add
add
sub
add
and
add
and
add
add
jbe
add
andb
add
add
xor
add
push
and
add
and
add
add
add
add
fsubl
add
lret
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
lock
add
add
add
and
add
add
cli
and
add
and
add
and
add
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
hlt
and
add
add
add
sub
add
and
add
and
add
add
jbe
add
andb
add
add
xor
add
push
and
add
and
add
add
add
add
fsubl
add
lret
add
add
add
inc
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
inc
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
imul
bound
gs
add
imul
je
imul
push
add
roll
dec
gs
jo
imul
push
gs
fs
outsl
outsb
jae
insb
gs
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
fs
imul
add
add
inc
gs
outsl
imul
jbe
jae
add
add
imul
jb
je
arpl
add
push
add
fs
je
insl
inc
add
aad
inc
gs
jb
jbe
push
jns
gs
add
gs
roll
inc
gs
gs
inc
je
insl
add
jae
inc
outsl
jo
inc
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
insb
jae
jb
outsb
push
add
rolb
dec
gs
jo
gs
jb
jns
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
push
imul
jb
gs
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
push
add
test
add
cmp
add
add
add
add
add
xchg
add
add
add
add
add
add
inc
inc
add
lods
fadds
xor
add
add
int3
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsb
movsb
pop
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jp
jnp
lods
stos
lods
add
cmpsl
cmpsl
push
mov
mov
mov
lret
leave
lret
into
rcl
in
rcl
shl
rcl
shl
into
int3
int3
hlt
leave
leave
repz
mov
mov
mov
mov
lods
stos
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
mov
leave
lret
rcl
sar
fcomp
std
xlat
fdivr
fcom
aam
aam
iret
iret
iret
dec
int
rcl
sar
ret
std
mov
mov
lods
iret
movsb
movsb
mov
dec
xor
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
lods
scas
sbb
mov
jnp
mov
sar
dec
lret
leave
call
ror
aad
fcom
fdivr
fcom
xlat
call
aad
dec
int
dec
int3
int3
call
aam
int
into
inc
mov
mov
ljmp
test
ljmp
push
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
into
call
rcl
fcom
fcom
fdivr
aad
aam
into
int
dec
leave
lret
into
int3
inc
mov
mov
mov
cmpsb
cmpsb
cmpsb
jmp
cltd
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
fs
push
sbb
or
sbb
xor
ss
aaa
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarb
enter
iret
rcl
call
aam
call
aam
call
rcl
inc
leave
inc
ret
mov
mov
ljmp
movsb
movsl
sahf
popf
pushf
xchg
cwtl
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jle
jl
jg
jge
jno
jb
bound
mov
cmp
cmp
mov
outsb
outsb
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
lret
leave
lret
enter
mov
mov
ljmp
mov
lcall
xchg
xchg
xchg
xchg
cwtl
lcall
lahf
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
outsb
add
pop
or
jp
xchg
mov
incb
jl
idivb
jmp
outsl
jo
addr16
data16
jae
jle
jle
jns
jns
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
test
popf
pushf
pushf
call
test
incl
xchg
xchg
lahf
lahf
lahf
sti
mov
cwtl
xchg
mov
jp
js
das
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
lahf
lcall
mov
cmp
mov
std
xchg
jg
jno
jo
je
jae
jle
jge
addb
push
cmp
ss
and
jle
jg
lcall
shrb
lods
stos
sti
stos
lods
stos
stos
lods
lods
test
stos
std
movsb
movsb
movsl
std
fwait
lcall
xchg
jge
jp
jp
jl
jp
xchg
xchg
movsl
movsb
movsb
scas
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
pop
push
or
inc
inc
dec
imul
test
xchg
leave
cltd
fistps
fwait
stc
nop
xchg
std
mov
decl
mov
lcall
cmpsb
cmpsb
ljmp
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
lods
test
add
pop
adc
cmpsl
scas
call
lcall
incl
xchg
xchg
xchg
xchg
sahf
sahf
sahf
std
mov
mov
xchg
in
xchg
nop
in
xchg
push
jne
femms
dec
add
add
or
inc
daa
sub
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
lea
nop
call
lahf
lahf
jmp
test
pushl
cmpsb
scas
mov
xchg
test
std
ret
xchg
scas
mov
mov
ljmp
lahf
adc
add
add
pop
adc
scas
mov
ret
mov
lcall
mov
mov
mov
nop
xchg
decl
xchg
xchg
sahf
pushf
pushf
mov
stos
test
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
bound
jae
mov
jle
test
mov
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
ja
mov
movsl
mov
mov
stos
lods
mov
mov
add
mov
pop
pop
adc
mov
ljmp
pushf
decl
xchg
nop
call
xchg
xchg
call
xchg
xchg
cltd
lcall
lahf
mov
mov
stc
xchg
cltd
fwait
out
nop
xchg
mov
xchg
aad
xchg
fwait
in
xchg
xchg
out
mov
xchg
stc
xchg
test
std
xchg
jae
fwait
imul
ljmp
aaa
jns
mov
je
mov
insl
ljmp
packuswb
lods
or
or
pushl
mov
mov
pushf
movsb
mov
mov
add
mov
add
pop
adc
mov
lcall
nop
xchg
call
lcall
lahf
sahf
mov
call
xchg
cwtl
decl
xchg
xchg
call
lcall
lcall
popf
mov
xchg
imul
xchg
dec
js
fwait
cmp
fwait
sub
and
mov
adc
jmp
adc
adc
lods
packuswb
lods
adc
mov
imul
adc
pushl
ds
lcall
scas
scas
lods
scas
movsb
mov
movsb
add
add
add
add
mov
pop
pop
adc
mov
jmp
xchg
xchg
lcall
sahf
jmp
mov
mov
decl
mov
decl
js
lcall
xchg
dec
jns
xchg
cmp
call
sbb
pop
call
push
pop
call
pop
lcall
adc
ljmp
outsb
pushl
pop
outsb
mov
and
mov
and
inc
cmp
xchg
scas
mov
scas
lods
mov
sahf
lahf
sahf
add
add
add
add
mov
lods
add
pop
adc
lods
mov
mov
cltd
sahf
lcall
movsl
movsb
jmp
cmpsb
cmpsb
ljmp
cmpsl
cmpsb
lcall
jle
decl
outsl
decl
sub
mov
popa
decl
or
incl
add
mov
push
decl
add
xchg
add
lcall
ljmp
push
jo
mov
jne
mov
sub
mov
sub
les
jge
cs
enter
mov
cld
mov
scas
lret
movsl
dec
mov
mov
add
add
add
lods
mov
push
adc
test
mov
sahf
lcall
test
lods
lods
ljmp
mov
ljmp
mov
mov
xchg
incl
or
incl
add
push
incl
push
decl
add
popl
push
call
pop
lcall
add
lods
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
lcall
scas
lods
lods
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
incl
or
test
push
incl
add
mov
push
call
add
sahf
add
add
add
lods
add
sbb
les
test
lret
dec
inc
call
inc
mov
rorl
fmuls
call
dec
xchg
fisttpl
fisttpll
fsts
call
test
mov
mov
movsb
movsl
mov
or
add
add
add
add
inc
dec
adc
jl
mov
test
popf
ljmp
mov
pushl
mov
pushl
mov
mov
movsl
xchg
decl
sbb
call
push
pop
decl
pop
push
decl
pop
call
pop
jmp
add
test
add
ja
into
inc
mov
aad
cltd
fcoms
fistl
fistl
ficoms
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
lahf
mov
add
inc
inc
adc
jns
sahf
lcall
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jbe
and
xchg
and
call
and
sbb
nop
or
xchg
add
xchg
add
cltd
add
mov
add
stos
add
mov
data16
mov
xor
fisubs
fisubs
in
test
in
test
call
push
cmpsl
jmp
test
mov
cmpsl
cmpsb
mov
lahf
sahf
add
inc
aas
adc
jp
xchg
cltd
call
lahf
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
lcall
sbb
pop
call
pop
jmp
add
stos
add
mov
pushl
movd
roll
fsubrl
jmp
outsb
lods
jmp
jo
call
je
in
jae
in
je
out
jne
in
je
out
je
jmp
mov
mov
cmpsb
cmpsb
lcall
lahf
add
add
insb
outsb
js
mov
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
outsl
jmp
aaa
jne
mov
push
call
pop
lcall
add
stos
add
mov
popa
pushl
add
enter
fistl
jmp
ja
call
jg
jmp
mov
push
cmpl
repnz
push
cmpb
mov
mov
cmpsl
sahf
sahf
sahf
daa
mov
sahf
sahf
add
add
add
popa
add
xor
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
mov
jmp
cmp
mov
inc
jle
mov
pop
call
add
add
add
lods
add
mov
data16
mov
add
iret
daa
cmp
jmp
mov
push
mov
push
pop
push
nop
push
xchg
xchg
stc
pop
out
mov
inc
lods
test
xor
sahf
popf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
inc
mov
jl
lcall
cmp
movsb
xor
fwait
push
popa
lcall
add
cmpsb
add
stos
add
mov
fs
mov
add
leave
add
mov
call
xchg
ret
push
cltd
push
cltd
push
cltd
pushf
enter
enter
int3
cld
sahf
int
cld
popf
into
sti
lcall
loopne
lret
mov
mov
mov
nop
nop
add
add
add
ss
add
xor
outsb
push
dec
dec
jecxz
pop
call
mov
mov
mov
sar
ret
inc
enter
mov
mov
ljmp
dec
xchg
mov
pop
pop
lcall
pop
ljmp
add
mov
add
enter
rorl
jmp
inc
xchg
out
lea
push
cmpsb
int
cmc
cmpsb
int
stc
cmpsl
iret
sti
cmpsl
sar
cld
cmpsl
iret
cli
test
stos
sar
test
sar
negb
lret
dec
lret
mov
mov
mov
xchg
xchg
add
lcall
xor
xor
sub
or
bound
pop
xlat
jae
jno
mov
rol
rol
mov
ret
inc
mov
leave
inc
rol
mov
cmpsl
jmp
mov
lods
dec
test
lahf
sbb
popf
add
mov
add
mov
arpl
mov
add
int3
add
xlat
add
adc
out
pop
test
cmc
popf
lret
lods
aam
cld
scas
sti
mov
cld
mov
mov
cld
mov
cld
mov
mov
std
mov
std
mov
push
cmpsb
mov
call
leave
int
mov
mov
lahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsb
outsl
outsb
mov
aam
jmp
fcom
not
rcl
std
lret
dec
lret
leave
dec
leave
lret
dec
lret
leave
mov
scas
jmp
push
mov
lods
jge,pt
lahf
or
pop
ljmp
add
mov
add
iret
add
add
add
and
cld
lods
aam
std
mov
mov
fdivr
cld
mov
mov
xlat
mov
xlat
push
mov
jmp
mov
call
lret
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movl
jmp
out
loop
jecxz
fsubp
fucom
fcmovu
xlat
cli
aam
xlat
std
int3
iret
iret
mov
push
cmp
sub
mov
add
mov
arpl
mov
add
leave
add
aam
jae
faddl
ja
in
js
out
xor
sti
mov
inc
std
inc
fdivrp
inc
loopne
dec
std
enter
fdivrp
dec
sti
mov
lret
leave
iret
mov
mov
xchg
adc
add
add
std
std
add
incb
std
std
add
cmc
hlt
or
in
in
pop
in
out
out
sub
out
in
dec
ljmp
xchg
out
jmp
aad
fcmovnu
jmp
mov
xchg
test
jns
movsb
push
jmp
popa
pushl
add
les
imul
add
fadds
jb
filds
js
jmp
inc
fwait
cld
mov
jecxz
cld
int3
loop
dec
out
dec
in
dec
loop
dec
loope
std
into
loop
dec
in
call
jecxz
std
shl
std
shl
sti
fcos
out
mov
inc
ret
test
cmpsb
mov
cwtl
xchg
add
add
add
incb
incb
cmc
div
add
repz
repz
push
out
icebp
lock
in
repnz
out
in
pop
loopne
lds
sti
lahf
and
lcall
add
lods
add
mov
gs
mov
add
roll
jb
flds
jbe
in
jns
in
push
pop
test
std
shl
std
iret
in
shr
call
call
aad
jmp
fucomi
std
fucomi
std
fucomi
cld
shl
push
ret
in
lret
lret
leave
rep
stos
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
cli
add
testl
hlt
div
or
aad
xor
mov
xchg
negb
add
add
lods
add
mov
add
leave
add
roll
jb
fildl
ja
out
ja
out
sbb
stc
jne
sti
xlat
ljmp
fldlg2
std
fucomi
fucomi
std
fsubr
fucomp
std
fucomp
loopne
fsubrp
fsubrp
std
aam
push
aad
call
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsl
jo
add
add
add
loope
add
enter
mov
cltd
repnz
and
sahf
add
test
pop
pushl
add
ret
dec
add
aam
jb
filds
jne
jmp
sub
cld
shl
std
fsubrp
fsubr
std
fucomi
std
fucomi
call
out
std
aad
shl
cli
iret
loope
cli
shl
clc
iret
fdivrp
test
xlat
out
mov
jmp
rcr
fcom
xlat
sti
mov
mov
fwait
fwait
cltd
cmp
cltd
add
add
sarb
popf
sub
add
test
add
add
lds
push
iret
add
xlat
add
loope
js
call
ss
cli
xchg
enter
cli
int3
loope
cli
clc
mov
sar
repz
iret
push
mov
int
ljmp
ljmp
cli
ljmp
cmc
fucomip
mov
mov
xchg
add
add
add
into
int
mov
rol
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
into
or
rorl
jne
ficoml
jns
loope
cmp
jmp
mov
jmp
scas
enter
cld
fbstp
neg
mov
enter
int
iret
into
shl
xlat
fcmovb
out
loope
in
in
test
out
out
popf
call
lret
leave
push
lods
stos
lods
adc
test
cmpsb
add
ret
roll
ret
mov
lods
aam
dec
jg
pushf
sbb
test
push
lods
es
mov
ja
mov
dec
test
ret
stc
lret
arpl
hlt
iret
mov
out
mov
mov
enter
lret
rcl
int
aad
shll
fcom
jg
fcmovnu
jb
gs
jecxz
out
out
ljmp
sub
div
and
lock
fstp
or
mov
into
add
add
add
sarb
mov
test
lock
je
ljmp
mov
sarb
mov
les
rcrb
lret
jp
int3
into
addr16
iret
push
iret
rcl
dec
aam
inc
rcr
aad
aam
xlat
daa
fistpl
fcmovu
ficoms
fucom
loope
loope
in
out
ljmp
cli
cmc
add
cld
add
incl
std
std
add
mov
mov
mov
stos
scas
xchg
mov
mov
mov
mov
rcll
ret
inc
rol
xor
int3
leave
daa
int3
rcl
and
aam
sbb
aam
adc
aam
or
aad
aam
fadds
add
loopne
add
in
add
jmp
add
add
std
add
mov
add
ret
ret
mov
mov
mov
mov
push
ret
or
mov
add
int3
lret
aad
add
xlat
aad
rcr
aam
aam
aad
aam
add
add
aam
add
loop
add
add
out
add
icebp
icebp
add
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
mov
mov
ja
test
test
pop
add
add
add
add
add
add
mov
mov
mov
sarb
ror
iret
jmp
rcl
cmc
rcl
aam
iret
iret
into
cli
int3
int3
int3
stc
int3
int3
int3
hlt
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
iret
xlat
aad
call
xlat
xlat
call
iret
sar
iret
iret
into
dec
lret
lret
inc
mov
mov
stos
stos
stos
icebp
cltd
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
je
jae
jae
gs
dec
dec
dec
cmp
sub
sub
aaa
xor
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
lret
rcl
call
rcl
dec
lret
lret
inc
mov
mov
mov
ljmp
sahf
popf
xchg
xchg
xchg
jmp
jno
xchg
pop
pop
adc
xor
add
add
add
add
addl
test
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jno
jo
scas
scas
scas
pop
mov
mov
mov
mov
ret
vshufpd
mov
mov
test
cmpsl
lcall
xchg
xchg
xchg
xchg
xchg
fwait
fwait
lcall
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
popf
cwtl
cltd
fcoml
addb
jge
jl
js
jns
jns
jp
jp
jnp
je
je
push
push
push
cmp
jae
sahf
popf
sahf
mov
scas
scas
repz
scas
scas
sti
scas
lods
lods
std
cmpsl
cmpsl
test
sahf
pushf
sahf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
cmpsb
movsl
cltd
jb
jae
adc
adc
add
add
add
add
outsb
outsb
outsb
pop
nop
mov
loop
lcall
mov
mov
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsl
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsl
cmpsl
mov
scas
std
mov
scas
mov
xlat
cmpsb
mov
addb
add
add
add
add
popa
or
lods
mov
movsl
mov
mov
lea
mov
cwtl
cwtl
xchg
std
sahf
sahf
lahf
sti
lahf
mov
cltd
call
push
push
push
jo
push
push
outsl
insl
insl
outsb
xchg
subl
nop
xchg
lock
mov
pushf
mov
mov
popf
pushl
pop
mov
mov
mov
mov
out
lods
stos
insl
stos
test
add
add
add
pusha
popa
pop
or
mov
in
mov
xchg
call
xchg
lcall
cwtl
fwait
lcall
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
lea
out
nop
ja
notb
jle
pushf
dec
jl
movsl
inc
jp
lods
ss
mov
jb
mov
insl
ljmp
sbb
mov
mov
scas
mov
movsl
movsl
mov
add
add
add
pusha
or
mov
in
movsb
test
lcall
mov
lahf
call
decl
jns
std
xchg
jae
cld
xchg
pusha
cmp
dec
js
nop
cmp
nop
daa
call
lcall
push
popa
ljmp
sbb
mov
outsb
pushl
sbb
je
mov
stos
mov
scas
lods
scas
xchg
lahf
popf
sahf
adc
add
add
pop
pop
pop
or
lods
mov
stos
movsb
cmpsl
jmp
cmpsl
cmpsl
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
xchg
push
decl
add
xchg
add
pushf
add
or
jb
mov
sub
jle
leave
xor
leave
xor
inc
test
mov
test
cmpsl
sbb
add
add
popa
pop
popa
or
cmpsb
stos
in
mov
test
scas
scas
scas
pushl
mov
jmp
jb
mov
pop
decl
or
xchg
decl
add
xchg
add
mov
add
mov
outsb
inc
aaa
cmp
inc
mov
into
inc
call
inc
call
inc
xchg
fiaddl
call
arpl
stc
mov
mov
mov
std
incl
add
add
pop
pop
popa
or
sahf
mov
ljmp
mov
mov
mov
stos
call
sbb
pusha
decl
or
decl
add
lahf
add
test
pusha
ljmp
and
rorb
fsts
ficompl
fistps
loopne
mov
fildll
dec
cmpsb
mov
ret
movsl
xor
jg
add
add
dec
dec
dec
pop
jle
jnp
fwait
xchg
lcall
lods
scas
pushl
mov
mov
lcall
sub
insl
call
minps
xchg
add
lahf
add
test
pop
ljmp
pop
addr16
xor
jmp
insl
test
jmp
jo
out
jno
jmp
jns
call
cmpsl
mov
shll
jg
add
add
add
dec
pop
outsb
outsb
push
mov
xchg
pushl
mov
mov
mov
je
lcall
cmp
pushf
sub
call
add
movsb
add
stos
add
mov
gs
or
xchg
jmp
js
ljmp
push
test
push
mov
fisubl
mov
push
lcall
add
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
mov
xchg
jmp
sub
cltd
push
pop
jmp
add
mov
gs
mov
adc
fbld
in
nop
mov
push
cwtl
push
cwtl
push
fwait
enter
lret
push
xchg
jmp
lods
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
inc
ret
xchg
test
movsl
pop
xchg
lods
dec
cmp
pop
insb
lcall
add
mov
fs
mov
add
fsubs
cmp
mulb
sar
stc
test
cli
stos
iret
sti
stos
iret
lods
sar
stc
test
call
rol
test
pushf
sahf
or
add
add
dec
dec
dec
aaa
jb
je
stos
stos
stos
ror
int
out
int
cmc
lret
sti
leave
lret
leave
std
leave
enter
mov
test
inc
cmp
adc
test
pusha
pushl
add
into
add
flds
jbe
call
xchg
cld
mov
cld
mov
std
mov
xlat
cld
mov
fdivr
std
mov
ljmp
repz
scas
mov
add
add
add
add
pop
or
aad
dec
loope
jecxz
fsubp
fistps
out
shlb
cmpsl
jb,pn
movsb
or
scas
add
mov
add
aad
jae
jecxz
jl
repnz
mov
std
loop
std
dec
fdivrp
dec
loopne
dec
loopne
cld
out
mov
lret
mov
xchg
popf
pushf
popf
sbb
add
add
incb
std
incb
ljmp
in
jmp
xor
loop
jecxz
les
mov
mov
add
mov
inc
add
iret
add
fldl
je
call
outsb
mov
cld
std
iret
in
shl
shl
aam
std
xlat
call
shl
push
xlat
fcmovne
sar
mov
mov
add
std
incl
std
incb
cld
std
pop
aad
push
mov
pop
xchg
popf
or
test
add
lds
imul
loopne
jne
out
and
std
shl
fsubr
fldl2e
fsubr
std
fld1
cld
cld
aam
push
fdivr
aad
mov
popf
popf
das
add
add
into
int3
into
or
arpl
ljmp
addr16
add
add
loop
js
out
das
xchg
push
pushf
enter
loope
cli
leave
fdivrp
test
aad
bnd
out
aam
out
in
vpsadbw
shl
jecxz
fucomp
leave
mov
das
std
incb
aad
push
mov
jae
push
gs
mov
insb
inc
sbb
lret
and
cs
loopne
lcall
mov
out
loop
leave
jmp
fdivrl
lret
enter
iret
scas
jecxz
ficompl
in
jmp
rorl
mov
add
stos
stos
stos
add
xchg
movsb
les
xchg
mov
nop
fidivrl
andb
into
mov
les
rol
int
ror
iret
pop
rcl
rorl
fcomp
cmp
das
in
fsubl
jecxz
lock
jmp
or
std
incb
std
incl
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
leave
leave
and
aam
pop
mov
rcl
or
fnstsw
or
int3
int
lods
stos
stos
add
std
add
incl
cltd
fwait
cltd
add
or
into
int3
int3
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
mov
ret
ret
ret
mov
mov
lods
lods
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
aad
rcl
sar
iret
int
std
mov
mov
sarl
sbb
pop
add
add
add
add
add
add
add
add
jb
jno
data16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
into
int
aad
sar
int
int
enter
mov
lods
scas
lcall
mov
push
add
add
add
add
je
jae
xchg
adc
jo
ret
popa
mov
pushw
insl
outsb
jb
pusha
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jae
and
add
pop
add
add
je
je
pushf
xchg
pushf
mov
xchg
mov
xchg
test
addb
push
push
push
inc
mov
popf
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
mov
popf
fwait
popf
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
mov
test
mov
mov
xchg
xchg
xchg
cld
popf
sahf
sahf
cmc
cwtl
cltd
lcall
push
push
imul
jg
mov
testl
xchg
mov
jo
mov
lods
scas
push
stos
stos
stos
add
add
add
test
lods
cld
xchg
xchg
xchg
call
lcall
cltd
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
arpl
std
pushf
inc
jbe
cmpsl
ss
scas
sub
jo
mov
insl
pushl
pushf
scas
lock
mov
imul
into
add
xchg
pop
lods
movsb
stos
test
popf
pushf
lahf
jmp
movsl
call
imul
inc
jae
mov
imul
xchg
adc
cwtl
or
mov
sbb
pushl
and
inc
sub
lds
inc
cltd
mov
mov
mov
stos
stos
test
add
fwait
mov
cld
test
test
mov
scas
pushl
mov
decl
or
mov
push
decl
add
mov
adc
shll
dec
inc
mov
rolb
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
movsl
movsl
push
add
add
push
push
test
lahf
movsb
cld
scas
lods
scas
pushl
mov
ljmp
outsl
call
pop
pusha
call
add
mov
add
mov
push
xchg
fcompl
loope
mov
jmp
movsl
call
pushf
mov
test
cmpsb
test
add
add
arpl
adc
popf
pushf
pushf
cld
mov
scas
mov
mov
mov
popf
dec
jl
pushf
xor
cwtl
and
xchg
or
sahf
add
add
mov
xor
jmp
jo
jmp
js
jmp
mov
out
jle
out
jle
ficompl
mov
movsb
mov
add
dec
dec
dec
adc
push
cmp
mov
mov
rol
mov
arpl
lcall
add
ljmp
add
ret
or
fimull
out
lea
notb
leave
stc
xchg
jmp
cmpsl
mov
movsl
sub
inc
inc
inc
adc
push
xchg
mov
cld
rol
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
fs
add
aam
jns
jmp
scas
push
cmpsl
iret
cli
stos
iret
cld
lods
sar
cld
scas
sar
cld
scas
iret
jmp
enter
rcr
movsb
movsl
ds
std
std
add
outsl
jno
scas
mov
mov
aad
mov
aad
rcl
out
lret
enter
xchg
jmp
inc
add
aam
jb
out
xchg
clc
nop
mov
std
rcr
std
ret
inc
fcos
icebp
mov
ret
test
dec
cmpb
add
add
stos
lods
stos
add
in
jmp
out
out
out
out
loopne
in
fisubl
movsl
and
pop
mov
add
faddl
push
cmp
std
iret
out
call
in
call
in
aam
call
in
hlt
leave
fdivr
aad
into
in
scas
scas
lods
popa
addl
add
std
incl
std
incl
int3
int
sub
lahf
sbb
lods
add
mov
add
loope
jp
hlt
push
cmpsl
cld
loopne
aad
std
aam
cld
shl
cld
aad
stc
shl
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
add
push
into
push
jae
fistps
cmp
insl
lods
cld
out
mov
shl
ljmp
jmp
in
aad
jmp
scas
ret
lds
cltd
fwait
add
sarb
xchg
and
ret
int3
int3
jbe
mov
fdivrs
adc
int3
outsl
xlat
int3
rcrb
rcl
dec
jecxz
loope
out
call
sbb
mov
mov
cmp
mov
lods
push
mov
mov
lds
int3
sbb
fstp
bswap
into
int3
or
aad
incl
jg
addl
stos
incl
sarl
add
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
sub
test
jo
and
cltd
gs
jae
ja
sub
dec
adc
inc
fadds
add
pop
cmp
je
sub
fsubs
ljmp
imul
mov
scas
push
mov
test
hlt
hlt
andb
ja
iret
push
xchg
out
daa
test
adc
pop
adc
ds
jns
xchg
mov
add
int
lea
andb
cli
loopne
jae
xchg
ss
rclb
add
add
xchg
lcall
stos
movsl
add
fidivrs
sub
int
add
or
and
pop
popa
pop
lret
and
mov
xor
movsl
jb
stos
or
aas
add
in
sub
push
sti
loopne
pop
dec
inc
push
sbbl
mov
jnp
adc
cs
es
into
inc
push
pushf
jle
test
jno
add
into
push
push
orl
roll
push
dec
push
and
and
div
sbb
rcll
das
or
xor
jbe
shlb
adcl
jbe
sbb
push
mov
lock
xor
dec
mov
ja
add
outsl
add
adc
roll
iret
pusha
repz
jge
cld
insl
pop
add
in
test
test
and
jae
add
stos
aad
or
mull
push
mov
fdivrl
mov
mov
cmp
adc
xchg
cmp
cmpsb
push
inc
adc
aad
subb
and
aam
aas
pop
push
mov
jae
add
xchg
mov
insl
shll
jecxz
iret
sub
pop
fs
cmpsl
adc
or
jns,pt
adc
sub
fdivrl
mov
ror
adc
push
rolb
or
sub
int3
push
jo
jbe
cmpsb
test
jecxz
xchg
sti
mov
movsl
xchg
pop
movsb
pop
add
fwait
cmp
pop
lahf
aaa
xor
sub
jl
les
and
decl
maxps
inc
aaa
out
add
xchg
into
movsb
cmp
sbb
outsl
dec
and
imul
add
ret
loopne
ret
test
mov
imul
adc
inc
sarl
push
lock
pop
dec
push
cli
mov
sbb
pop
push
jge
je
push
jmp
out
or
leave
fidivs
dec
enter
fldcw
push
or
into
xchg
xor
dec
or
icebp
cmc
sti
mov
and
adc
loopne
mov
sub
pop
add
xchg
mov
mov
stos
mov
jg
mov
dec
cs
pop
shrl
ss
pop
pusha
pop
add
dec
jmp
mov
dec
dec
push
mov
stc
popa
cmpsb
cmpsb
dec
xor
xchg
jne
mov
sub
mov
out
mov
jp
add
xchg
mov
xchg
cmp
movsl
xchg
cmp
xor
test
sti
mov
imul
cld
ret
or
nop
cmp
aaa
nop
cmp
xchg
scas
xor
mov
push
add
pop
and
push
xchg
sub
stc
in
repnz
mov
cltd
subb
in
xor
loope
cmp
ds
or
cmpsl
jmp
sub
mov
cmp
ja
stc
adc
jmp
out
lret
cmp
rol
adc
and
mov
mov
inc
shrb
lods
test
arpl
fldenv
gs
xor
sub
mov
imul
popf
scas
add
and
insl
popf
leave
pop
enter
out
and
jp
lcall
and
call
add
mov
adcb
ja
je
aam
daa
iret
ret
sbb
add
out
add
test
adc
xchg
xor
repz
cmpsb
xor
outsl
pop
adc
xchg
daa
adc
dec
fwait
push
daa
inc
dec
addr16
xor
xor
imul
push
daa
ja
jb
into
cmp
cmp
rolb
adc
notb
adc
add
inc
pop
pop
notb
adc
rdpmc
pop
adc
mov
inc
test
daa
rcrl
mov
xor
ret
cmp
faddl
data16
sbb
ret
aaa
xchg
jmp
fstl
mov
rcrl
arpl
cmpsb
adc
gs
mov
jle
std
vorps
dec
cwtl
add
daa
arpl
jge
cmc
mov
push
xchg
jns
sbb
push
lret
or
daa
jo
mov
adc
mov
and
or
cmp
push
and
xchg
cmp
push
xchg
inc
pop
lret
and
data16
xor
add
xor
push
clc
es
pusha
xor
push
inc
xor
dec
mov
or
shl
lds
mov
add
cld
or
test
cmc
or
std
clc
adc
movsb
xchg
notb
dec
dec
inc
insl
or
pop
daa
lcall
jo
aaa
mov
outsb
push
xchg
test
mov
adc
dec
fcomp
xchg
sahf
mov
dec
push
push
sub
outsb
inc
jno
sbb
aad
arpl
inc
and
mov
js
push
xchg
das
mov
and
aam
stos
clc
mov
shll
mov
mov
lahf
sti
xchg
add
and
loopne
stos
inc
adc
ja
xor
leave
pusha
fs
xchg
sub
test
jle
test
dec
fcmovu
add
imul
jl
loop
test
imul
das
and
xchg
loope
movsl
cmp
add
mov
enter
push
cmp
test
loop
dec
cmpsb
push
in
xlat
outsb
add
sub
push
mov
idivb
xchg
aaa
into
ret
xor
push
in
adc
mov
or
insl
and
hlt
mov
gs
hlt
xchg
movlps
jmp
or
in
pop
mov
cmp
jg
les
mov
jecxz
xor
jmp
and
sti
add
in
ljmp
inc
cmp
lret
bound
mov
lods
jl
rcl
movsb
fnstcw
subb
gs
jecxz
xor
in
subl
add
test
sbb
sub
dec
mov
inc
inc
mov
enter
insl
test
out
call
or
ror
and
sbb
in
insl
add
xor
jg
xchg
and
fidivl
inc
xlat
arpl
cmp
add
jbe
into
fstps
icebp
test
cmp
pop
insb
aas
pop
ss
in
leave
mov
cwtl
pop
cld
daa
adc
jae
mov
fisubrl
into
orl
or
jle
add
scas
cwtl
scas
in
pop
fbstp
push
mov
inc
lods
std
xchg
fbld
insb
xchg
add
xor
roll
movsb
pop
out
aad
xor
mov
jbe
sub
sub
insb
add
popf
mov
iret
push
mov
xor
and
xlat
inc
out
test
pop
sub
in
jge
sub
sbb
dec
fildll
mov
mov
mov
loopne
sbb
xchg
pop
repz
xor
adc
xchg
push
mov
fcmovu
jb
mov
shrl
xchg
orb
add
cmpsb
xor
outsb
add
xchg
and
or
xor
cmpsb
ds
sub
mov
pop
std
stos
dec
in
sbb
insb
add
outsb
add
mov
and
sbb
dec
add
pop
xor
stc
cltd
push
loop
test
xchg
fcoml
push
mov
imul
dec
lret
popf
push
jmp
jmp
outsl
add
aas
xchg
jo
adc
in
xor
push
out
push
and
inc
shrb
pushf
pop
repz
adc
lea
cmp
mov
xor
push
into
gs
push
out
adc
xchg
lods
inc
xchg
sub
leave
xchg
sub
fnstcw
jne
add
pop
bnd
bound
cs
ljmp
out
sahf
testb
inc
pop
hlt
xor
dec
loopne
cmp
cli
xchg
adc
pushf
sbb
cmpsl
mov
pop
mov
cpuid
cmp
mov
inc
fbstp
iret
xchg
xchg
xor
scas
jmp
mov
jo
push
sti
and
fidivrl
fidivs
sti
xchg
sub
dec
mov
jo
mov
divl
push
fists
xchg
mov
out
push
out
adc
adcl
add
jo
dec
arpl
leave
pusha
xor
call
pop
inc
pushw
fsts
int
cwtl
xor
push
lods
repz
out
add
push
sbb
cmp
jmp
pop
fcompl
mov
inc
mov
loope
and
push
pushf
dec
stos
pop
insl
xchg
int3
shrl
mov
addr16
mov
in
jp
mov
pop
std
insb
pop
testb
lcall
pop
lods
adc
lahf
arpl
icebp
mov
and
pushf
pop
dec
push
add
lea
and
mov
in
push
xchg
sub
cwtl
imul
imul
das
sbb
rcrl
clc
popl
insl
ret
arpl
test
push
mov
int
pop
leave
pusha
dec
lret
pop
idivb
mov
push
ljmp
imul
mov
sub
out
nop
daa
inc
mov
or
push
repnz
fs
int
sbb
std
xchg
push
stos
inc
mov
cmpsl
ficoms
testb
mov
jo
into
arpl
in
andl
decl
pop
repnz
aad
mov
cmp
xchg
dec
loope
cmpsl
inc
fyl2xp1
fwait
or
sbb
ss
cmp
mov
add
dec
jecxz
push
in
test
push
mov
pushf
push
in
inc
pop
scas
dec
cmpl
cli
xor
aaa
into
push
push
sbb
mov
fcoml
sbb
test
push
mov
loopne
mov
adc
fs
out
inc
fimuls
stos
gs
insl
xor
js
outsl
push
lock
pop
repnz
iret
popw
pop
mov
imul
lret
bound
cmp
jb
dec
jmp
adcl
xchg
jmp
or
popa
stos
sahf
xchg
fisttpl
push
cld
xchg
sub
ja
pop
push
out
xchg
mov
fiaddl
sbb
xchg
test
nop
mov
adc
fs
cld
or
repz
out
adc
mov
les
scas
and
inc
and
icebp
enter
adc
testb
pop
jbe
or
popf
xchg
in
in
or
push
out
inc
fstpl
je
inc
inc
lea
cwtl
sub
lods
inc
push
popa
cmpl
xchg
cmp
stos
inc
jbe
orl
push
dec
stos
insb
push
aas
adc
pop
les
push
cli
mov
xor
movsb
and
jl
and
push
cmp
movl
xor
bnd
or
sub
jg
fwait
cmp
pop
imulb
leave
pop
imul
insl
aas
sahf
movd
movsl
fimuls
push
lret
repnz
outsl
ds
mov
fs
jl
inc
test
outsl
sbb
pop
jb
insl
jl
push
popf
les
gs
out
xchg
push
pop
adc
cmp
fwait
arpl
testb
mov
or
sbb
mov
std
xchg
aas
mov
fsubrl
aas
jp
mov
scas
inc
popf
mov
xor
mov
das
cmp
addl
movsb
cmp
push
lds
in
hlt
xchg
push
mov
sbb
cld
mov
fbld
mov
test
mov
out
dec
sbb
xchg
sub
jp
adc
stos
inc
rcrl
bound
mov
shlb
inc
xchg
sub
inc
adcb
inc
mov
ds
push
lcall
jb
andb
daa
dec
xchg
or
mov
test
fldenv
mov
pusha
mov
add
test
in
insl
xchg
out
loop
jno
xor
hlt
imul
mov
ss
repz
push
mov
clc
sarl
sbb
add
popa
xchg
mov
cs
mov
lods
scas
and
push
out
jmp
mov
ds
dec
push
pushf
pop
repnz
xchg
mov
shrl
notb
mov
xchg
sub
dec
loop
mov
fiaddl
push
mov
sti
test
int3
mov
fsubrs
das
and
insl
mov
movsb
cmp
sbb
mov
mov
ficoms
out
ret
jl
jecxz
mov
fistpl
loop
dec
pop
mov
push
ljmp
loopne
jecxz
je
scas
stos
inc
adc
jecxz
dec
xor
enter
add
es
dec
loop
xchg
movsb
cmp
cmp
xor
or
jl
add
sahf
ret
enter
ret
or
das
loop
loope
jg
cwtl
mov
sbb
mov
jae
mov
pop
cmc
sub
jmp
mov
ds
icebp
xchg
sub
lea
and
pop
mov
loop
push
outsl
mov
mov
adc
mov
daa
les
fmull
pop
dec
push
out
andb
notl
je
sarl
adc
inc
lods
inc
fcomps
ret
mov
repnz
clc
and
sub
in
adc
popa
test
enter
sarl
pop
int
push
ljmp
in
test
loope
dec
aad
adc
xchg
dec
add
inc
sahf
jecxz
push
sti
into
gs
jae
pop
lea
mov
shl
mov
mov
xchg
push
pop
lock
cmp
pusha
xlat
dec
ret
pop
aas
js
je
loopne
mov
lea
add
cmp
mov
push
in
and
rclb
push
out
stc
add
jge
pop
pushf
xor
inc
fsubr
call
sub
repnz
dec
fucomip
sbb
jle
or
in
xchg
sub
and
dec
xchg
sub
mov
push
sbb
inc
bound
aas
arpl
cmp
pop
jno
nop
push
xchg
pop
jo
push
mov
xchg
jmp
or
mov
ja
xor
lds
rcr
lret
ljmp
and
shrl
xlat
popl
mov
xchg
mov
fsub
mov
ds
add
int
daa
xlat
outsb
or
ret
cmc
mov
sbb
mov
roll
cmpsl
mov
clc
adc
test
lret
les
test
adc
add
add
es
pop
pop
incb
les
sbb
scas
inc
push
mov
mov
test
dec
loope
cmpsb
test
pop
lds
shrl
fidivs
repnz
in
enter
and
sbb
sbb
xchg
pusha
cmp
cmc
nop
subl
dec
mov
pop
shlb
mov
cmpb
scas
shrl
fildl
testl
cmc
dec
inc
ficoml
dec
loop
je
roll
push
mov
arpl
sub
cmp
pop
mov
xchg
jae
pop
icebp
pop
dec
cmpsb
cmp
jno
les
xchg
dec
out
aaa
scas
inc
dec
ss
jg
stos
inc
sahf
mov
mov
ljmp
data16
inc
jb
push
movsb
push
out
xchg
pop
std
xchg
pop
idivl
jle
cmovge
les
outsb
xchg
mov
sarl
les
xchg
cmp
lret
bound
cmp
leave
pusha
adcl
cwtl
aad
lods
inc
adc
imul
shll
mov
adc
fcomi
pop
xor
stos
and
and
and
inc
inc
fnstenv
fcoms
subl
jns
mov
jl
out
push
mov
test
cli
scas
out
push
inc
inc
mov
mov
shll
xor
mov
test
xlat
sbb
call
adc
inc
mov
int3
arpl
incb
jnp
fbstp
into
add
pop
repz
cmp
jecxz
cmpxchg
jns
jmp
adc
push
or
mov
call
fidivrs
lds
mov
std
mov
cld
push
xor
push
incl
les
xchg
or
xchg
scas
jle
fsubrp
dec
mov
xor
sub
ljmp
sti
push
lods
inc
mov
lock
push
mov
lods
or
mov
aam
test
inc
ret
daa
pop
add
pop
jle
lds
out
das
or
enter
out
shl
mov
mov
jle
imul
xor
aam
push
jns
jle
fwait
lcall
scas
imul
or
insb
push
pop
mov
pop
push
iret
repnz
cmp
xchg
xchg
cmp
sbb
cmp
int3
les
adc
mov
mov
imul
mov
sbb
dec
ss
je
dec
out
jle
insl
mov
cmc
cwtl
mov
adc
je
mov
push
sbb
cmpsl
or
xchg
pop
jns
je
mov
mov
jg
insb
add
mov
xchg
adc
cmp
dec
psrlq
ja
jnp
aam
xchg
mov
aam
mov
pop
test
and
cmp
fwait
xchg
cmp
adc
or
mov
fidivl
push
jae
dec
jne
xor
pusha
push
dec
jnp
insl
ffree
jns
xchg
mov
insb
sbb
sub
pop
daa
dec
dec
push
mov
outsb
jle
mov
loopne
push
push
mov
cmpsb
mov
sbb
adc
jle
js
jne
outsl
dec
jecxz
rcrb
mov
idiv
shrb
mov
inc
je
adc
mov
cmp
stos
inc
xchg
mov
jo
xchg
repnz
leave
sub
jae
subb
inc
icebp
iret
or
bsf
inc
xchg
ret
iret
out
xor
icebp
mov
ljmp
frstor
lock
jno
je
jg
arpl
jbe
xchg
mov
push
inc
into
sub
jns
inc
in
movsb
aad
dec
jns
xchg
sub
orb
jp
fildll
pusha
pop
imul
sbb
ds
sti
cld
std
pushf
stc
int
mov
jmp
sub
outsl
pop
pop
pop
sbbb
push
stos
lea
jo
orb
jmp
ja
aas
in
adc
xchg
sbb
sub
sbb
mov
hlt
test
push
mov
stos
xchg
loop
mov
xchg
test
sahf
lahf
xlat
ret
adc
lahf
lcall
fcmovnb
dec
call
mov
sub
aad
or
or
cmp
mov
and
sahf
push
sbb
jecxz
popa
dec
cli
movsl
mov
pushf
aaa
into
imul
fdivrs
outsl
call
cmpb
clc
enter
loope
scas
push
fldenv
push
mov
mov
add
popa
push
cmp
inc
push
test
test
or
or
inc
in
and
pop
jnp
mov
xchg
add
cmp
push
test
mov
jns
dec
lret
sbb
jno
xchg
mov
sbb
jle
jl
pop
push
sub
dec
dec
adc
push
push
xchg
nop
pop
push
adc
insl
pop
je
imul
push
addr16
aad
dec
mov
jbe
xchg
jo
lret
ficomps
pop
out
dec
push
xchg
push
scas
test
ja
out
cwtl
inc
sub
fidivrs
and
mov
enter
lret
outsb
pushf
or
leave
loopne
aas
pop
jnp
fucomip
fnstenv
ds
arpl
xor
imul
bound
dec
mov
jnp
jmp
mov
dec
lcall
outsb
adc
cmpsb
pushf
loop
xor
sbb
stos
leave
jge
dec
mov
ss
std
repz
pop
imulb
aaa
lea
xchg
aad
adc
mov
push
int3
add
int3
cmpsl
in
das
mov
lcall
mov
xor
int
out
xor
mov
addb
adc
movsb
aad
add
daa
les
int3
cmc
add
jg
pop
push
mov
mov
add
lds
ret
adc
loopne
fcoms
movsb
es
xlat
jno
inc
mov
into
outsl
mov
pop
loope
jnp
imul
push
out
xlat
loope
pop
hlt
mov
push
xor
lahf
call
mov
push
mov
push
in
mov
testl
clc
xchg
mov
inc
cwtl
cmp
jae
aam
mov
jae
add
insb
cmp
and
mov
les
test
sbbl
mov
mov
mov
arpl
cmpl
fs
mov
mov
cmp
xor
xchg
push
mov
mov
mov
daa
je
and
mov
sti
pop
fists
mov
fwait
dec
jae
jne
dec
push
out
adcb
dec
das
out
push
mov
adc
adc
sbb
xchg
idiv
pop
roll
js
cwtl
stos
fnstsw
jecxz
push
jb
sbbl
inc
repz
jmp
enter
daa
bound
rcll
jle
mov
cltd
push
push
jmp
iret
popa
iret
mov
rcrl
mov
sub
mov
lcall
popa
mov
sub
imul
popa
in
in
adc
sub
pop
cmc
and
cmp
insl
pop
or
cmp
add
xchg
je
insb
and
jg
into
arpl
sbb
popf
mov
mov
rolb
cmp
mov
xor
inc
lods
sub
frstor
adc
pop
stos
fistpll
mov
fdivl
aas
fs
shr
cltd
xchg
xor
lds
add
cmpsb
addr16
daa
cltd
mov
sbb
inc
jge
and
and
lds
push
jecxz
sbb
ss
dec
or
shll
pop
pusha
sti
test
jno
and
ja
xlat
adc
inc
xor
and
enter
inc
inc
je
jo
lods
sbb
mov
mov
push
shll
sbb
movsl
cmp
pop
xchg
iret
mov
imul
outsl
jmp
mov
or
movsb
xchg
in
cli
xchg
es
js
xor
mov
mulb
or
xor
mov
xchg
nop
nop
ficoml
ret
jns
adc
imul
cmp
dec
enter
aaa
cmp
inc
jge
jbe
in
sahf
out
out
dec
repz
adc
and
cmp
push
xchg
cltd
cmp
test
sti
outsl
in
mov
and
inc
mov
mov
push
add
dec
negb
test
push
enter
sbb
adc
dec
lods
loop
push
shl
inc
repnz
test
pop
adc
pop
fadd
and
test
adcl
fstps
or
mov
push
xor
rcrb
mov
push
ja
mov
mov
lds
aas
pop
ljmp
jg
icebp
jp
sbbl
cltd
jecxz
cli
mov
or
test
and
xchg
mov
lahf
add
dec
push
rorb
imul
jmp
pusha
mov
push
cmp
sub
jo
dec
sbb
ret
in
or
loop
jmp
or
jbe
add
mov
notb
int3
jp
sbb
nop
cmp
dec
xor
mov
mov
out
out
daa
sbb
push
push
sub
in
dec
dec
add
sub
sub
sti
mov
jle
int
mov
lret
jno
jmp
push
shlb
sti
sbb
jno
je
mov
aas
sbb
lcall
sub
adc
pop
push
inc
sub
sbb
movsb
js
inc
adc
mov
mov
xchg
cltd
pop
jo
scas
int
pop
inc
fstpt
mov
inc
push
or
fists
add
jns
out
adcb
pop
filds
popa
fstpt
clc
ret
inc
shrl
mov
ds
cmp
dec
xor
adc
mov
aaa
xor
mov
sbb
movlps
cmc
xor
arpl
adc
lock
mov
into
gs
mov
mov
jne
lock
lods
ds
fsubrl
out
pop
cmp
add
into
xchg
sub
dec
arpl
sbb
aas
pop
xor
lock
xchg
arpl
jecxz
sahf
pop
mov
sub
in
and
cmp
and
pop
lcall
adc
adc
insb
loopne
notb
xchg
and
jnp
pushf
inc
pop
pop
movb
arpl
push
add
repz
out
push
cmp
lock
xlat
pop
jns
insb
add
push
out
xrelease
xor
jo
pop
sbb
hlt
cwtl
das
es
ret
push
pop
jo
push
jbe
gs
add
jecxz
movsb
inc
and
in
insl
xchg
sub
dec
and
es
dec
lock
push
jg
mov
push
hlt
cmpsb
sbb
sbb
jg
mov
out
data16
aad
fistps
fcompl
sbb
outsb
mov
pop
dec
insb
jns
jecxz
pusha
test
aas
mov
fcmovnb
test
sbb
cld
mov
pcmpgtw
aam
lods
into
scas
mov
mov
call
cmpsb
xchg
nop
decb
js
hlt
ret
jmp
mov
xchg
add
pop
aam
fbld
repz
push
and
incl
or
pop
pop
adc
fbstp
lea
ret
mov
scas
sti
xchg
pop
sbb
xor
push
in
xchg
int3
cmp
cwtl
sbb
sub
push
imul
aam
mov
pop
out
fidivs
cmp
ret
adc
adc
fcmovnu
mov
xchg
leave
popf
jne
or
fcmovnu
mov
out
pop
pop
pop
or
fdivrl
aaa
mov
fistpl
rcrb
cmp
adc
cltd
or
mov
adc
movsl
sahf
xor
mov
adc
xor
push
inc
in
ja
divb
popf
jo
fimuls
aas
cmp
fisubs
xchg
inc
xlat
ret
hlt
jecxz
sub
dec
sbb
popf
add
adc
lahf
fs
lret
pop
arpl
add
rolb
stos
push
dec
call
sub
cmp
mov
add
jbe
neg
cltd
fs
dec
dec
leave
test
pop
dec
cmp
vxorps
lcall
mov
mov
mov
into
dec
xor
fisubrs
into
into
push
scas
lods
cmc
jno
sub
push
or
imulb
mov
mov
bnd
mov
jg
inc
fnstcw
mov
jno
push
stos
xor
push
addb
loop
and
adc
addl
les
ficoml
or
push
loop
mov
lea
lods
idivb
out
ret
xchg
or
shll
inc
xor
je
sarl
std
add
jbe,pn
add
sub
mov
in
jle
and
xor
dec
and
movsb
or
out
ds
je
lret
mov
out
push
adc
call
sbb
mov
sub
arpl
pop
xor
xchg
inc
loopne
stc
shlb
cld
lahf
push
add
into
pop
data16
cwtl
cmpb
or
inc
mov
jg
cmp
cli
xchg
and
cli
dec
cwtl
pop
mov
test
lret
test
cmp
test
xor
xor
lds
jle
and
xchg
cmpsb
mov
addr16
mov
out
mov
push
dec
pusha
cli
nop
ret
insl
add
cltd
dec
clc
out
mov
pop
pop
hlt
push
push
jmp
or
xchg
aad
xchg
xchg
test
xchg
lahf
mov
jne
jb
clc
loope
dec
jecxz
cmp
cmp
fisttpl
pop
repz
or
sbb
adc
push
mov
push
int
push
push
lds
mov
sub
mov
sbb
add
xor
loope
arpl
mov
je
shlb
aad
jle
sub
scas
add
sbb
mov
pop
dec
loope
xor
shll
stos
or
hlt
stos
fidivs
adc
nopl
xor
mov
sbb
fs
or
mov
sbb
add
outsl
iret
jmp
pop
ror
mov
push
mov
in
push
into
mov
in
mov
sahf
xor
fdivl
xchg
dec
dec
movq
out
adc
xchg
rcrl
push
leave
add
inc
or
cmc
nop
pop
pushf
or
subb
sbbl
movsb
lahf
imul
ret
push
dec
lods
mov
fisubs
dec
sbb
mov
loopne
mov
pop
mov
xchg
icebp
test
or
adc
pop
push
lcall
cmp
mov
cmp
mov
stc
enter
xor
aaa
pop
ss
sub
pusha
sbb
adc
cli
cmp
jno
cmp
shrl
outsl
dec
jae
xchg
stc
and
pop
dec
mov
pop
outsb
outsl
cmp
fcmovu
xorb
dec
sahf
adc
mov
adc
pusha
movsb
dec
insl
insb
aam
inc
ja
pusha
inc
sbb
xor
mov
cmp
stos
xor
push
dec
jb
inc
shrl
sub
popa
mov
lret
inc
daa
mov
negb
mov
outsb
call
faddp
and
ret
jae
leave
mov
int3
arpl
mov
push
sti
imul
xor
mov
call
cmpsl
sbb
dec
enter
daa
ds
icebp
mov
lock
xchg
fidivrl
int
orb
mov
sbb
dec
icebp
lds
out
and
jo
xor
dec
daa
dec
xchg
je
lahf
sarl
jnp
stos
cld
aas
xor
mov
sbb
xchg
mov
les
cmp
or
push
jnp
add
cli
push
popa
clc
dec
idivb
cmp
pop
movsb
or
sahf
cmp
leave
xor
xchg
push
xchg
add
gs
mov
or
pop
jg
divb
cmp
and
inc
ja,pt
mov
dec
mov
enter
add
mov
ljmp
and
jg
insb
sbb
xor
jno
fwait
mov
repz
enter
cwtl
shl
xlat
push
mov
lods
shrl
lock
cli
xchg
pop
mov
sahf
or
sbbb
cmp
xchg
jp
mov
sbb
push
fnsave
sub
cmp
cmp
out
pop
hlt
mov
push
sub
insl
mov
mov
cmp
mov
and
ds
pop
into
gs
movsl
ja
sbb
xchg
sub
jb
es
mov
lds
das
xor
loopne
jmp
mov
in
fidivl
movswl
push
out
test
or
lods
imul
jne
in
sub
sarb
pop
stos
rorl
mov
pushl
loope
imul
mov
aad
out
sbb
loop
lock
mov
jge
mov
lcall
fs
push
mov
dec
lds
mov
dec
roll
pop
sbb
xchg
mov
fldl
mov
xor
popa
push
stc
inc
push
and
mov
insl
cmp
das
pop
pushf
push
or
dec
addr16
cmp
push
pop
lea
stc
sbb
inc
cmpb
popf
xchg
xchg
fisttpl
fmul
add
and
cmp
sub
lock
add
repnz
fdivl
adc
lods
cltd
xchg
daa
iret
lock
dec
stc
nop
cltd
dec
cmp
push
mov
inc
frstor
sbb
rclb
sub
aaa
shrl
or
jl
testb
aam
push
leave
adc
lret
push
fucompp
ljmp
call
mov
mov
sbbb
lods
lds
mov
lahf
icebp
stc
nop
iret
shrb
bswap
popa
sbbl
sbb
sub
imul
pop
mov
sbb
cmc
fwait
xor
dec
xchg
sub
xchg
mov
mov
fisttps
std
xchg
jmp
fcmovu
xlat
arpl
lds
jno
mov
sub
jne
jnp
mov
pop
out
les
or
pop
add
es
sub
mov
mov
and
push
int
les
enter
xor
notb
sub
cmp
sbb
and
mov
push
into
ret
lcall
pop
repz
dec
dec
into
xchg
mov
inc
out
xor
inc
mov
mov
and
xchg
frstor
into
aad
lock
fs
pop
daa
jle
xchg
adc
stos
dec
icebp
lods
pop
sbb
pop
sti
out
jbe
inc
push
es
inc
xchg
lods
jg
mov
lea
sbb
pop
popf
dec
loop
jnp
fldcw
sbb
je
aaa
into
push
xchg
movsl
cmp
jb
in
mov
lds
idivl
loope
insl
sbb
xchg
shrb
popf
loope
mov
mov
cmp
fs
test
test
cmp
push
cmp
jle
pushl
pop
push
push
repz
mov
push
jp
enter
add
stos
stos
pop
loop
jne
cmc
cmpsb
sarb
enter
jae
ljmp
lods
icebp
movsl
fcompp
testl
jecxz
mov
cmp
mov
iret
outsl
stc
cltd
mov
lret
cld
xchg
andb
ret
sub
mov
adc
mov
in
inc
fimuls
daa
gs
pop
xlat
push
mov
mov
mov
mov
sbb
sbb
jg
mov
dec
out
sti
jp
mov
pop
inc
les
repnz
insl
rclb
xchg
add
sbb
out
ljmp
dec
cmc
jl
popf
es
mov
dec
inc
lahf
xchg
cmp
iret
xlat
jb
les
movsb
bound
inc
fs
jo
mov
clc
iret
loopne
int3
arpl
or
jmp
aaa
in
aaa
mov
ret
adc
xor
test
dec
lret
fbstp
xor
ljmp
push
cmc
mov
rclb
cmpsb
adc
dec
pop
dec
daa
arpl
lods
aas
scas
mov
pop
or
aaa
mov
mov
call
movsl
out
dec
loop
shrb
dec
sbb
add
or
inc
mov
subl
dec
mov
add
into
ss
scas
lods
out
push
ljmp
jno
call
mov
repnz
mov
out
pop
cmc
xor
cmovle
sub
mov
in
fcompl
cmp
ja
or
adc
push
cmpsb
xor
cmpsl
gs
popf
xor
and
out
mov
mov
sub
iret
pop
xor
sbb
xor
pop
aam
rcrl
arpl
adc
insb
jno
dec
test
scas
sahf
cmpsb
and
fadd
lds
push
adc
jmp
sub
jge
jb
das
mov
mov
sbb
cmpsl
push
neg
mov
push
lcall
mov
outsb
fwait
xchg
lock
mov
arpl
push
mov
fisttpll
hlt
sub
push
mov
jle
movsl
cmp
mov
jle
sbb
mov
mov
or
aad
or
loope
sbb
icebp
adc
mov
popf
ja
jb
mov
adc
cmp
add
rcrb
pop
lock
mov
stos
push
fnstenv
test
lret
test
dec
out
repz
in
cmp
rolb
outsb
jl
cmp
dec
stos
popa
dec
lock
ffree
pop
iret
fwait
sub
sbb
sarb
pop
pop
xor
popa
pop
push
jmp
or
imul
cmpsb
sbb
cmp
stc
dec
les
into
xor
mov
test
pushf
into
sahf
loopne
idivb
stc
mov
inc
sbb
jns
add
pop
mov
sbb
mov
pop
jge
dec
add
mov
lea
lods
data16
jb
je
dec
cmpsb
push
call
stos
sbb
inc
ffree
cmp
insb
out
out
lds
int3
mov
mov
fildl
out
xor
mov
mov
or
pop
insl
xchg
xlat
adc
popf
sub
sub
cmp
jle
test
fdivs
push
inc
popa
xchg
inc
push
pop
mov
xor
jae
inc
sbb
xchg
push
mov
push
cmp
gs
inc
inc
xor
pop
ja
lock
stc
lods
pop
inc
enter
mov
pop
pushf
inc
sbb
adc
fbld
aaa
lea
inc
pop
je
fadds
fs
call
add
jae
mov
popa
fldt
sub
inc
pop
push
aaa
mov
adc
scas
and
mov
pusha
out
outsl
test
adc
mov
fwait
sti
adc
push
std
arpl
in
in
test
negb
and
sub
and
mov
mov
xorl
fildl
jecxz
mov
leave
xchg
xchg
scas
or
subl
popa
xor
or
mov
xchg
pushf
scas
dec
push
xor
xchg
push
jno
xor
mov
push
add
gs
in
int
fisubl
mov
mov
cli
jle
and
jg
andb
outsb
and
rorb
mov
sub
cmp
inc
dec
sbb
jp
xor
jp
inc
and
pushf
push
jo
push
sub
jmp
mov
push
adc
mov
fwait
push
xor
push
shr
pusha
aam
nop
or
sub
inc
sbb
pop
inc
das
lret
and
test
roll
cli
punpckldq
lock
push
mov
ret
xor
pusha
and
xchg
or
sar
and
out
jno
shll
cmpsb
lock
mov
adc
outsl
sub
out
pop
xor
jnp
out
jnp
ljmp
repz
or
aaa
jae
cli
loopne
ljmp
out
push
jne
pop
pushf
fildl
arpl
xor
inc
stos
pop
arpl
xor
xor
mov
jle
and
stc
ret
push
mov
out
lods
sbb
sub
andb
xlat
sub
sahf
adc
adc
je
push
jmp
inc
shll
jne
cld
xor
sub
jp
push
pop
and
or
jb
call
push
leave
jno
testl
cmc
jbe
sbbl
or
idivl
cmp
fwait
adc
mov
jo
push
pop
outsb
mov
sti
mov
outsb
cmpb
cmp
or
nop
push
dec
sbb
addr16
fidivrs
mov
jbe
inc
sbb
push
aad
das
or
xchg
jae
dec
fidivl
jmp
sub
ljmp
imul
cmpsb
aam
and
jmp
sub
sub
scas
sbb
inc
ja
add
lock
cld
dec
xor
es
ret
adc
fs
push
out
push
fnstcw
push
push
jno
loop
sub
mov
adc
add
inc
mov
int
inc
outsl
jnp
pop
sbb
out
mov
ret
pmovmskb
sbb
pop
pop
mov
out
push
mov
in
inc
loop
sub
mov
mov
fxch
sub
or
sub
mov
mov
lahf
jg
cld
out
dec
lock
adc
dec
jae
or
movsl
xchg
push
addr16
clc
dec
fwait
ret
loope
push
in
or
das
sub
mov
ret
lea
push
and
jge
das
stos
subl
or
repz
orb
jle
mov
mov
push
cltd
xor
imul
jge
pop
mov
push
in
pop
pop
mov
jnp
add
ja
mov
clc
enter
mov
gs
movsl
mov
mov
fcom
insb
add
add
arpl
popa
cwtl
lahf
push
sarl
mov
popl
and
test
nop
das
jecxz
fsubrs
shlb
fisubrl
scas
xchg
mov
xor
push
jl
gs
ja
add
mov
int3
in
add
pop
ja
add
inc
cwtl
mov
clc
xchg
jae
push
sbb
xchg
ficoms
lahf
in
sbb
xchg
push
jmp
imul
xchg
inc
es
add
aam
jo
and
xchg
sbb
add
js
mov
idiv
xchg
out
pop
je
jmp
add
jae
lcall
out
cmp
jns
or
pop
or
xorb
pop
mov
lcall
push
adc
sub
inc
je,pn
repnz
stos
test
shll
mov
fimuls
xor
nop
adc
frstor
in
xorl
inc
lret
xchg
adc
sahf
clc
lock
sbb
cmp
xchg
cli
test
or
ja
inc
movsb
inc
ds
cmp
clc
mov
movsb
dec
movsl
cmp
xchg
inc
lret
push
add
dec
fisubs
fwait
mov
js
xor
in
xchg
mov
push
xor
ja
or
jp
shll
adc
and
adc
cs
dec
jp
out
outsl
ljmp
adc
loopne
inc
xlat
adc
dec
mov
in
push
fdivs
mov
mov
bound
xchg
pop
in
decb
fsubrp
mov
popa
cltd
pusha
push
lock
lods
mov
sbb
xchg
imul
subl
pop
dec
fs
mov
ja
cmp
cmp
ret
pop
cmpsl
test
jecxz
dec
xchg
fadds
cltd
cmpsl
xor
fsubs
sbbb
pop
aam
cmp
and
fwait
or
sbb
xor
xor
mov
cld
lcall
cmpsb
ret
insl
inc
xor
push
fidivl
mov
cwtl
and
sbb
roll
sbb
mov
pop
xchg
jg
daa
sub
lods
adc
sbb
or
imul
and
xchg
mov
pop
jbe
je
cmp
pop
adc
cwtl
cmp
or
daa
mov
pop
arpl
addr16
into
enter
push
jmp
lret
or
jnp
lret
jmp
mov
push
jle
stos
daa
mov
iret
in
inc
ret
adc
mov
imul
and
lock
jns
inc
mov
mov
std
rorl
imull
cmp
lahf
or
xchg
cwtl
pushf
pusha
inc
mov
aaa
jp
pop
stos
lea
das
push
mov
push
xlat
fisubl
movsl
sbb
mov
clc
out
insb
out
lds
xchg
dec
icebp
sub
scas
cltd
or
dec
cli
xchg
jle
hlt
jnp
push
mov
xchg
adcl
cmpsl
jge
mov
pop
lock
push
jmp
or
pushf
cmp
dec
out
xchg
sbb
dec
mov
mov
jp
rclb
mov
imul
xchg
sub
pusha
repnz
push
mov
and
popa
ljmp
xor
dec
adc
leave
subb
shll
iret
pop
orl
lods
orb
and
pop
aad
gs
dec
xchg
aad
lret
cmpsb
mov
mov
ficoml
push
repz
add
mov
scas
sbb
sub
bound
dec
addl
inc
int3
pop
js
mov
gs
xlat
pop
push
mov
lahf
cmp
lock
pop
or
idiv
xorl
stos
xchg
iret
fsubp
pop
xchg
push
imul
inc
mov
jmp
enter
lret
adc
leave
jns
jne
jne
les
aaa
jae
dec
add
je
insb
cmp
lahf
aad
mov
call
cmp
repnz
push
lods
int3
je
aad
mov
fildll
mov
aas
mov
lock
jmp
dec
jmp
add
inc
mov
out
xor
pop
lahf
lods
imul
daa
and
inc
je
mov
sahf
scas
repnz
leave
jb
or
ret
add
mov
and
push
adc
sub
mov
and
daa
test
dec
push
cwtl
mov
insb
test
xor
std
and
lea
or
cwtl
sub
mov
jecxz
and
les
xlat
ljmp
mov
dec
sub
adc
push
jl
outsl
scas
lea
testb
pop
dec
stos
into
inc
sbb
in
into
jne
fcompl
leave
xchg
lcall
xchg
enter
adcl
inc
int
mov
add
xchg
cmp
vpcmpeqd
rorb
sub
dec
push
icebp
loop
sbb
jnp
cmp
fcoml
out
or
mov
mov
ret
xchg
adc
int
and
popf
xor
std
lods
mov
xchg
call
or
cmp
jl
aad
insb
mov
in
mov
mov
lods
cwtl
arpl
out
hlt
data16
loope
pop
xor
add
sub
cmp
sbb
scas
ljmp
xchg
lret
outsl
scas
bound
out
adc
ss
sub
sub
adc
sti
shl
sub
and
in
xor
push
push
stos
fisttpll
mov
mov
cmp
insb
mov
outsl
or
jne
or
xchg
out
shrb
xchg
ds
mov
lds
sub
stos
jbe
sub
or
mov
sbb
push
mov
xchg
repz
pop
inc
cli
imul
shrb
ror
ret
ljmp
and
and
lea
mov
sub
push
mov
int3
sbb
int3
fsubs
dec
out
test
cli
aad
nop
mov
inc
add
cmpl
test
pop
icebp
push
push
or
mov
ljmp
test
push
js
lret
leave
bound
jmp
and
xchg
subb
scas
bound
push
inc
movsb
dec
jbe
jne
dec
in
xchg
leave
pusha
cs
leave
lock
mov
movsl
mov
pop
or
ret
cmp
xchg
rcrb
sbb
push
repz
mov
cs
fimuls
pop
mov
arpl
mov
scas
push
sub
jnp
inc
enter
mov
xchg
sub
adc
sub
movsl
rcr
in
push
icebp
mov
add
lods
movsb
mov
sarb
das
leave
lods
push
outsl
fsubrp
adc
inc
jl
shll
popa
jg
sub
iret
add
or
int3
arpl
cmpb
inc
sub
mov
and
filds
xchg
enter
jb
cmp
add
shll
sbb
out
xchg
mov
dec
insb
jle
xchg
loop
cmp
add
mov
push
xor
fcoms
push
push
mov
push
mov
push
fsubl
or
xor
gs
pop
add
out
stos
xor
cmp
pop
jo
pop
ret
adc
stos
mov
inc
xor
fwait
imul
test
mov
rcll
xchg
sbb
into
mov
in
gs
push
or
shll
out
cmp
movsl
sub
pop
and
add
push
mov
mov
mov
rcrb
into
or
jne
subb
and
xor
and
pop
jno
lds
cmp
pop
adc
push
mov
and
ds
pop
sub
cmp
pop
pop
sub
movsb
shll
jecxz
or
jb
add
xchg
sub
out
push
adc
addr16
into
sbb
add
pop
pop
jmp
and
pop
ss
inc
sbb
sbb
addr16
jecxz
pushf
outsb
aad
insb
cmc
int3
nop
nop
mov
int
xchg
pop
lret
sti
sub
arpl
jp
adc
andb
pop
or
stos
xor
bound
xchg
mov
stos
out
out
lret
jae
outsb
add
jno
lea
rcrb
movsb
into
dec
or
shrb
dec
push
xor
dec
mov
inc
push
mov
push
cwtl
std
mov
cmp
and
sbb
std
lahf
ss
aaa
mov
dec
mov
iret
and
push
xchg
subl
add
sti
inc
lock
stc
xlat
ficompl
jno
cld
stos
es
pop
lds
or
pusha
push
jecxz
andb
push
xor
bound
sub
pop
call
and
repnz
pop
daa
sub
inc
add
inc
inc
mov
mov
sahf
aaa
dec
add
xchg
xchg
mov
sbb
xor
push
lods
andl
sahf
addb
sub
jae
xlat
aaa
dec
jo
add
lock
mov
or
dec
ffree
sahf
or
xchg
das
jae
push
test
dec
enter
dec
jmp
adcl
adc
mov
push
rol
das
nop
inc
stc
in
rol
stos
dec
cwtl
push
dec
inc
ret
out
imul
outsb
imul
insl
sub
fidivs
jp
adc
stos
in
mov
int3
xor
in
cmp
mov
int
cs
mov
jge
and
mov
idivb
js
pop
call
push
in
push
push
sahf
xor
sbb
or
enter
jno
cwtl
aad
loopne
cmp
xchg
shrl
mov
mov
out
cmp
pusha
add
pop
int3
out
jle
repz
push
cmpsb
jle
xor
jo
adc
imul
pop
adc
sub
popa
jmp
add
mov
jmp
mov
jno
outsl
and
into
dec
mov
adc
push
pop
test
sub
mov
ljmp
dec
dec
push
loop
fwait
push
jge
fdivrl
repz
lock
aas
sbb
dec
cmc
adc
inc
inc
fiaddl
test
cmp
add
stc
and
cmp
mov
sbb
popl
pop
mov
int
xchg
mov
inc
lret
push
scas
jno
push
imul
cmp
push
in
sbb
jmp
xor
xchg
cmp
cmpsb
jns
mov
in
daa
adc
add
jnp
mov
pop
loopne
pop
dec
fildll
mov
adc
inc
cli
mov
popl
cmp
mov
icebp
cwtl
push
aam
into
or
movsl
cmp
cs
cmp
or
mov
loopne
cmp
xchg
cmp
push
or
push
cmpsb
cmp
pop
sub
mov
sarl
scas
mov
pop
js
mov
sbb
and
aaa
ja
enter
movl
xchg
dec
arpl
filds
adc
jmp
outsb
js
sahf
popf
imul
pushf
pop
mov
lock
mov
movsl
repnz
ja
sbb
cmc
lods
push
lss
ja
roll
cwtl
mov
or
or
aam
jp
mov
and
adc
xchg
lea
sbbb
cmpsl
push
sbb
inc
xchg
jb
loope
ljmp
sbb
add
cmpsl
scas
scas
cmp
jnp
sti
nop
jnp
push
outsb
cltd
sti
xchg
dec
aam
mov
js
pop
push
aaa
movsb
loop
jge
pop
imul
push
pop
repnz
fucomp
repz
ds
inc
pop
push
cmp
pop
push
push
movsl
ss
negb
dec
ss
adcb
xchg
call
cmp
pop
jecxz
xlat
jge
sbb
mov
fucom
outsb
addr16
sub
pop
out
test
jo
lret
or
cld
in
test
push
jns
fwait
aas
cmpsb
les
mov
sbb
icebp
lods
add
jecxz
xchg
loop
mov
mov
push
int
sbb
stos
pop
pop
aad
dec
repnz
mov
les
mov
insb
inc
jne
pop
jge
lcall
push
lret
push
jge
pop
push
sub
pushl
pop
xor
sahf
pop
and
fwait
lods
outsb
sahf
sub
mov
mov
xchg
lods
shlb
inc
scas
aad
cwtl
sbb
mov
ret
sub
rcrb
adc
pop
lret
aas
push
mov
addr16
leave
fiaddl
fisubs
dec
mov
inc
scas
in
xor
jp
stos
fisttpll
das
add
xorb
push
lahf
lock
adc
loop
ficomps
jno
cs
cmp
scas
insl
jmp
loopne
imul
test
adc
ss
jle
cmp
cmp
cli
jecxz
xchg
cli
or
cltd
cli
inc
sbb
inc
and
pop
scas
scas
scas
sub
dec
in
in
insb
clc
mov
fwait
push
push
sarb
mov
ret
psubb
shr
lea
jecxz
lods
pop
iret
pop
and
or
sub
adc
std
sub
inc
sbb
cmp
enter
stc
jmp
lahf
stos
add
fucomp
add
negl
movsl
sub
nop
add
fsub
stos
dec
cli
jle
xchg
adc
ja
mov
sbb
fistpll
dec
jecxz
cmpsl
jle
push
push
mov
sbb
mov
movsb
ficompl
jle
mov
mov
int
adcl
fdivl
xchg
sub
xor
lret
fcmovb
push
dec
cs
jge
xor
outsl
into
ljmp
push
insl
inc
cmc
mov
adc
imull
sbbl
cs
xor
ret
mov
sbb
rorl
jg
stos
shl
adc
dec
sti
lds
xchg
xor
subb
cmp
inc
fildl
incb
or
sbb
mov
xchg
mov
or
adc
movsl
mov
jns
jp
les
cmp
popf
jns
into
dec
cmp
sub
rcll
push
mov
fbld
lds
pop
loopne
fsts
jle
out
mull
jb
pop
jne
notw
lods
notl
push
outsb
dec
dec
cmp
xor
mov
jae
mov
jbe
dec
adc
in
clc
jae
inc
cmp
stc
in
dec
inc
into
repz
subl
jbe
jae
in
xor
add
push
stos
xchg
inc
pushl
mov
mov
xchg
shll
add
add
mov
add
fsubrs
pop
or
data16
jecxz
pushf
mov
jae
stos
mov
add
mov
fisubl
lds
fnstcw
pop
mov
rcl
xor
dec
pop
js
xchg
add
mov
xchg
mov
incb
lcall
push
imul
inc
mov
popa
xor
inc
nop
push
mov
movsl
cmc
push
push
xlat
mov
testl
dec
pop
jl
aam
add
outsl
sarl
repnz
jp
lea
jp
mov
xor
mov
jae
mov
xchg
pop
xor
xor
jns
std
insl
inc
cltd
adc
dec
inc
fildl
xchg
mov
movsl
fucomip
and
xor
xor
mov
fdivs
xchg
jp
xchg
sub
xchg
lret
or
nop
pop
lret
push
rolb
test
test
imul
and
pop
pop
clc
aaa
lcall
mov
push
testb
jp
xchg
mov
mov
jb
xchg
sub
mov
inc
out
sbb
iret
cmp
aaa
bound
sub
inc
cmp
pop
mov
add
xorb
scas
xchg
movsl
lods
mov
push
sub
ret
and
ficoml
lods
mov
fwait
repnz
dec
jno
jb
xlat
cmp
jle
or
sub
or
std
daa
jbe
or
je
mov
push
call
jo
outsl
ret
and
cmpsl
fs
fisttpll
in
sub
cmp
adcb
lds
movsl
dec
rclb
lds
div
adc
push
dec
mov
imul
inc
push
push
dec
add
in
out
lods
mov
ret
cld
jg
xor
shrl
mov
pop
mov
mov
lahf
inc
or
or
roll
sbb
outsl
cwtl
cwtl
das
lret
pushf
shll
mov
ror
fdivs
push
mov
mov
pushf
xor
push
mov
cmpsl
mov
xchg
cmpsl
mov
sbb
sub
repz
stos
insl
es
gs
fadds
enter
pop
out
sub
arpl
mov
xchg
xor
jg
bound
pop
sbb
scas
pop
sbb
mov
frstor
insb
lods
mov
popa
test
jl
cmpb
sbb
lea
dec
js
clc
jae
jae
inc
inc
clc
ja
xchg
cmp
cmp
fisubrl
push
jbe
jo
jl
je
dec
cmpsl
movsb
jo
fisttpll
fldt
or
jmp
adc
fstpl
daa
xchg
cltd
mov
jae
or
icebp
in
and
sub
jg
or
mov
cmp
cmp
jl
or
cmp
jecxz
add
lahf
adc
inc
lds
inc
jno
xchg
cwtl
aad
into
mov
je
fdivp
mov
mov
mov
fsubl
and
jno
stc
xchg
inc
jmp
adcb
pop
cmc
mov
dec
sbb
xor
std
jne
fsubrs
cs
xchg
fdivl
dec
pop
xchg
add
popa
cmp
jg
mov
adcl
nop
xor
mov
dec
sbbl
add
stc
fwait
or
xchg
cmp
push
lods
popa
shlb
imul
mov
cli
stc
sbbb
dec
push
and
and
sbb
pop
pop
cmc
mov
inc
pop
inc
insl
clc
lahf
push
gs
fbstp
addb
mov
xchg
push
aaa
dec
dec
jb
inc
movsb
insb
or
dec
cltd
lds
cmp
dec
jb
push
movsb
cli
iret
add
fsubs
popf
add
inc
imull
aas
xchg
sbb
imul
cld
xchg
inc
jbe
mov
cmp
dec
ss
pop
out
ret
pop
pop
lret
cld
mov
mov
sbb
iret
je
lahf
jb
inc
outsl
mov
mov
mov
cmp
incb
cmp
movsb
push
into
add
pop
aaa
pop
and
es
mov
jg
leave
mov
xchg
call
and
cmp
adc
push
inc
out
sbb
lcall
insb
jbe
sbb
xchg
in
les
leave
or
jle
pop
mov
sbbl
pop
pop
repnz
dec
mov
pusha
mov
pop
out
push
rorl
push
fdivs
xchg
fdivrs
arpl
jge
mov
test
mov
cli
test
outsl
aad
aad
xchg
cmc
or
add
push
leave
or
jae
jo
clc
aas
xchg
sub
cli
or
and
mov
into
je
xor
jmp
or
popf
jg
scas
or
popf
and
push
sbb
popa
push
xor
mov
subl
pop
inc
lcall
and
jo
fdivl
push
cld
outsl
loop
out
fmull
fnsave
jnp
sub
dec
xor
cmp
push
imul
fucomip
dec
sti
xor
in
roll
addr16
push
and
cmp
jp
and
jbe
shlb
popa
out
lea
lcall
loop
cmp
in
cld
pop
pop
sbb
lods
cltd
aas
in
stc
jp
jo
imul
jns
repz
cmp
dec
jl
jecxz
inc
dec
or
adc
cmpsl
push
xor
aad
arpl
call
adc
es
sbb
mov
push
scas
mov
mov
xor
sbb
aas
or
clc
add
sbb
mov
xchg
jg
push
dec
push
out
subl
or
push
push
inc
jg
xor
dec
pushf
outsl
lahf
adc
xlat
pop
cwtl
test
jp
cli
aas
mov
cltd
mov
mov
sub
mov
jge
xchg
pop
or
std
sub
divl
push
and
xchg
adc
adc
rcl
fsubp
scas
fdivrl
scas
jbe
push
xchg
fistpll
add
hlt
jne
fnstcw
add
mov
cwtl
pop
out
lret
dec
pop
cwtl
inc
cs
jo
fadds
lahf
sbbl
adc
mov
cmp
jl
js
clc
mov
dec
out
cld
mov
repnz
stos
imul
ljmp
jns
pop
fcmovnu
sahf
icebp
or
jbe
xchg
test
scas
inc
ljmp
aad
out
das
cmp
push
cmp
dec
mov
push
int
hlt
das
dec
inc
jecxz
rep
mov
lds
push
sbb
jmp
mulb
int
pop
test
bound
fsubr
push
mov
push
mov
subb
scas
pop
dec
dec
cs
cmpsl
stos
and
adc
xchg
jle
test
cmp
sbb
add
pop
dec
pusha
cli
out
cmpsl
pop
sbb
pop
in
sub
rol
add
push
popf
xor
push
adc
push
xchg
push
jb
xchg
frstor
cmp
cli
test
into
jae
jbe
cmp
inc
add
mov
pop
dec
ljmp
cmp
xor
xor
fisubs
test
mov
fcompl
push
ja
scas
and
je
pusha
inc
bound
or
dec
sub
dec
scas
cmp
aas
das
sbb
imul
mov
lret
cs
lods
pop
leave
jp
cwtl
cmpl
mov
push
xchg
enter
sbb
fbld
sub
data16
fcmovne
arpl
loope
xchg
ljmp
dec
and
push
dec
mov
lahf
mov
adc
fcmovne
xor
mov
aad
and
into
jb
lret
lret
out
inc
pusha
and
or
imul
movsb
pop
ficomps
mov
sub
fbld
sti
sub
aam
inc
xchg
push
test
fldenv
pop
mov
add
dec
xor
or
mov
mov
enter
add
fmull
sub
test
pop
mov
jnp
push
call
add
cmpsl
jbe,pt
pop
ljmp
cmp
mov
std
xchg
cmp
add
icebp
sbb
pop
lods
popf
adc
inc
and
jmp
test
or
inc
push
pusha
dec
ret
loope
gs
jbe
sub
and
dec
add
aas
mov
jmp
mull
or
dec
pusha
stos
loope
les
cwtl
notb
add
fsubrl
ret
or
add
mov
dec
xor
rcrl
dec
mov
fwait
sub
cli
icebp
insb
jle
jmp
insb
pop
clc
mov
sub
push
push
movsb
fcom
push
inc
imul
sub
lcall
test
pop
movsl
movsl
dec
add
imul
mov
push
jmp
lds
pop
aad
movsl
in
int3
xor
std
flds
jbe
inc
call
lock
lock
cltd
cmp
mov
in
and
add
fisubs
jae
out
fiadds
cmpsl
arpl
add
adc
jns
gs
xchg
cld
rorb
push
pop
lret
jae
mov
sarb
jecxz
mov
cmc
mov
fsubr
outsl
cmp
dec
insb
or
mov
notb
test
xchg
xor
test
bndstx
jns
adc
jb
fs
cmp
or
outsb
rolb
adc
sbb
add
fstpl
mov
insb
sti
sub
insl
cmp
dec
jns
adc
lock
fsubs
je
mov
xchg
cmp
dec
sub
xchg
xor
or
dec
add
inc
in
popa
xchg
lods
jo
push
shlb
adc
pop
cmp
jecxz
andb
in
xlat
repz
mov
cmp
es
or
dec
push
ficoms
test
jne
shlb
xor
inc
push
cwtl
xchg
push
inc
test
mov
repz
mov
dec
push
in
adc
in
xchg
outsb
jae
addr16
jecxz
mov
adc
sub
push
cmp
jb
mov
jmp
int3
push
xlat
arpl
or
or
jecxz
lahf
mov
leave
fadds
adc
xor
inc
and
test
repz
sub
mov
ss
sub
jae
shll
xchg
mov
test
idivl
int3
mov
sar
enter
dec
push
les
push
cltd
cld
pushf
dec
aas
mov
inc
rol
andl
mov
clc
push
out
mov
test
xchg
xorb
test
sub
lds
mov
ds
mov
dec
mov
call
rorb
mov
sti
mov
jle
xchg
into
sub
mov
pop
repnz
ss
jg
es
xor
adc
cmp
sahf
cltd
loop
pop
push
out
iret
gs
mov
fimuls
jecxz
inc
in
js
dec
mov
loopne
hlt
adc
pop
shll
clc
jns
sub
xor
xchg
xor
dec
ret
outsb
sbb
popa
add
leave
cmc
add
and
lcall
nop
lods
push
jmp
mov
testb
cs
mov
cli
adcl
or
cmp
jb
mov
xchg
mov
xchg
pop
sub
sub
fwait
sti
cmp
out
push
jne
test
out
movsl
xchg
adc
pop
addr16
adc
outsl
adc
and
or
jo
xlat
sub
xor
sti
imul
sub
dec
shlb
pop
test
scas
cmc
jmp
push
in
push
mov
testb
call
xchg
loop
xchg
cmovle
jne
xlat
pop
negb
dec
push
mov
in
sbb
fdiv
jecxz
pop
mov
outsb
repz
lahf
mov
outsl
sbb
testb
xchg
cmpsl
cmp
dec
scas
adc
insb
in
jbe
adc
mov
jle
and
and
repnz
pop
subb
inc
mov
roll
and
and
adc
add
sbb
mov
aaa
inc
lds
fidivrl
orl
sbb
lahf
aas
rcrl
jl
mov
imul
mov
push
gs
jle
jnp
arpl
rcl
jecxz
fistl
inc
push
in
ja
ja
push
bound
mov
mov
addr16
sti
enter
icebp
cmp
sub
mov
popa
jecxz
cmc
mov
inc
out
jbe
and
push
push
xchg
sub
mov
pop
jmp
cmpsl
lock
dec
loopne
sub
enter
test
into
ret
fsub
repz
mov
popa
jmp
push
adc
or
into
xchg
sarb
mov
push
pop
ret
fcoml
inc
cwtl
push
mov
or
sti
xchg
dec
inc
xor
out
outsb
lahf
mov
outsl
cmpsb
fimull
jg
or
inc
mov
xchg
inc
fs
and
dec
dec
mov
insl
lds
push
add
mov
cmpsb
les
inc
scas
push
mov
push
ja
mov
pop
loope
cmp
ret
jp
cmpsb
ds
mov
mov
sti
enter
sbb
ret
cmp
gs
dec
dec
push
push
in
test
ljmp
jne
cmpsb
movsl
push
sub
xchg
dec
cmp
cmpsb
sti
mov
push
rorb
fstpl
pushf
mov
insb
imul
push
add
mov
rcll
jecxz
dec
pushf
jge
out
cmp
mov
push
int
jnp
mov
cwtl
in
pop
frstor
in
cmc
leave
push
pop
xor
arpl
test
xchg
scas
stc
or
addr16
xchg
mov
movsl
mov
or
scas
cmp
sub
jb
xlat
xchg
idiv
ret
pop
cmp
les
mov
imul
rol
mov
mov
fisubrl
pop
bound
pushf
xor
add
mov
inc
xor
dec
xor
mov
fiaddl
adc
testb
aaa
lret
cmp
insb
push
mov
lahf
lea
push
shrb
jmp
mov
movsl
xor
fisttps
mov
ljmp
jo
mov
xchg
aam
in
fwait
mov
mov
pop
insb
sbb
test
mov
in
in
cltd
out
fsts
mov
mov
sti
sub
dec
pop
dec
jo
jge
adc
jmp
sbb
adc
ljmp
out
add
data16
push
popf
cmpsl
in
inc
sub
lods
xchg
test
dec
adc
ss
pop
in
mov
incl
sbb
and
adc
or
and
cwtl
pop
mov
jmp
sub
aaa
add
cld
mov
mov
jmp
add
addr16
dec
jmp
mov
inc
add
les
sub
ret
cmp
mov
mov
push
or
cltd
mov
addr16
ficompl
xchg
sub
mov
lds
scas
fisttpll
daa
inc
dec
or
lcall
lds
xor
lret
add
mov
dec
aas
jns
divl
es
cmc
sbb
cltd
nop
cltd
add
pop
shll
adc
outsb
rcrb
xlat
sbb
mov
push
cmp
mov
cmp
test
add
sar
mov
hlt
int
ss
in
jnp
sub
cltd
xor
jb
sub
js
xchg
push
mov
mov
jge
int
fdivr
rcll
sub
fsubs
ljmp
push
fdiv
push
in
and
mov
dec
repz
icebp
xchg
xchg
sub
pushf
sahf
ficompl
cmpsl
sti
scas
call
or
test
push
lret
lock
xchg
pop
xor
das
out
icebp
adc
adc
shrb
jp
pop
sbb
cmp
xchg
adc
xchg
adc
xor
push
cmp
mov
mov
or
push
jo
call
adc
lods
and
dec
mov
insb
mov
dec
lds
xor
sub
push
cmpsb
adc
xchg
in
jo
lret
sbb
mov
in
in
nop
out
pop
push
addr16
pop
sub
dec
dec
jno
xlat
add
sbb
inc
daa
sahf
xchg
sub
xor
jbe
cmp
push
cs
sahf
push
jp
xchg
or
dec
fsts
aam
mov
add
inc
insb
jmp
adc
int
push
test
stos
mov
inc
sti
pop
mov
adc
cmpsl
nop
js
cmp
ret
jl
pop
pop
dec
cs
fistl
shrl
imul
lock
outsb
push
test
xchg
fdivp
in
aam
dec
jbe
xor
in
jae
lods
adc
sahf
rorb
mov
icebp
xchg
sub
stos
dec
push
mov
xchg
xchg
sbb
or
aam
rorl
daa
es
dec
mov
jo
int
leave
mov
sbb
rcrl
jmp
sub
add
int3
xchg
cli
add
ret
jns
sahf
or
es
loope
push
xchg
dec
or
adc
mov
mov
jnp
lods
subl
sub
mov
arpl
push
adc
adc
lret
and
inc
ja
cld
push
in
and
fimuls
cmpsl
adc
dec
push
ja
cmp
mov
movsl
dec
fcoml
cmp
pop
push
xchg
sbb
aas
sarl
dec
mov
dec
mov
out
mov
int
lock
std
push
test
bound
push
fdivs
add
int3
adc
mov
mov
sbb
mov
fisubl
dec
sarl
dec
dec
cmp
les
jmp
push
lret
jle
sbbl
fcompp
repnz
aas
int3
lret
xor
int
mov
scas
fadd
xchg
out
jbe
pop
sub
hlt
stos
jmp
xchg
mov
adc
in
inc
lahf
addb
imul
sti
mov
xor
xor
bound
aaa
jmp
pop
rcr
cmpsb
add
arpl
fwait
dec
sub
aas
xor
xor
out
lods
sbb
ret
or
xor
pop
ljmp
cmc
mov
scas
jnp
lock
pop
cmp
cwtl
aaa
aam
xor
pop
and
jmp
test
mov
adc
int
dec
mov
inc
mov
jno
out
fidivrl
mov
out
add
lods
inc
negl
lret
jg
ja
add
repz
xchg
insl
lahf
or
add
sbb
cmc
movsl
into
xchg
outsb
cmp
rcrl
push
inc
xor
inc
andb
cltd
mov
and
mov
jno
imul
les
sub
push
cld
inc
dec
mov
into
mov
loop
lea
sub
fs
sub
ret
add
fisttpl
fdivs
gs
ljmp
or
push
or
mov
xor
lcall
fisubs
aad
out
nop
addr16
testl
adc
jo
adc
sbb
sahf
push
push
xlat
mov
mov
dec
pop
mov
and
sbb
aas
or
adc
fbstp
xor
jns
in
cmp
or
cmp
xlat
cmp
or
arpl
push
sbb
sub
arpl
out
lods
icebp
je
mov
push
and
sbb
stos
xchg
shrl
das
sbb
int3
arpl
insl
add
sub
aas
lods
push
sub
pop
sbb
arpl
and
pop
jge
jle
out
sahf
loop
iret
adc
and
in
fld1
and
add
loope
and
imul
out
add
loope
push
or
pop
dec
mov
jb
jmp
lahf
sbb
std
adc
outsb
push
aam
fwait
xor
testb
add
inc
or
and
dec
and
nop
les
daa
fsubp
fisttpl
dec
jnp
dec
cmp
imul
sbb
mov
add
inc
stc
or
xchg
stos
mov
out
icebp
jbe
rcl
das
jle
insb
adc
shlb
jnp
xor
imul
sub
pop
gs
test
arpl
xor
jl
push
add
scas
push
out
xchg
mov
sub
bound
or
cli
xchg
sbb
test
insb
cmp
jb
adc
xor
outsl
xchg
dec
pop
out
test
or
adc
dec
popa
pop
xor
stc
push
sub
mov
jbe
jae
outsl
test
cld
scas
add
incl
cmpsb
test
or
leave
sub
adcb
loopne
pop
out
bound
pop
decb
or
sub
loope
xchg
or
jno
pop
adc
or
jg
sti
nop
in
and
pop
push
sbb
ret
loope
and
jnp
or
dec
sbb
mov
add
iret
lods
fs
lret
sbb
es
mov
push
dec
dec
push
ss
sarl
jle
nop
daa
pop
xchg
idivl
das
scas
inc
mov
dec
dec
ds
popf
adc
lahf
push
lock
fucomi
stc
ret
scas
lock
iret
in
decl
lock
inc
and
mov
sti
jbe
xchg
jle
pop
in
notl
cmp
sub
push
add
adc
adc
cwtl
push
xor
xor
cmpsl
fnsave
out
xchg
scas
lds
lods
push
jmp
or
fwait
xchg
in
or
adc
cli
cmp
or
add
bound
stc
shl
sub
or
das
incl
xchg
mov
sbb
and
or
push
adc
stos
mov
pop
outsl
mov
sbb
jbe
mov
pop
cli
dec
sbb
leave
insb
cmp
lds
cwtl
rorl
xchg
pop
mov
push
rcll
mov
in
pop
repz
jp
int3
mov
jl
or
pop
jne
mov
movsb
xchg
jle
adc
cmp
je
je
lods
aad
cmp
test
ret
in
adc
cwtl
xor
pop
mov
pop
scas
mov
mov
mov
in
and
add
mov
test
je
out
movsl
mov
ljmp
ret
xor
push
and
xor
inc
jne
outsl
add
jb
adc
and
xchg
push
sub
lret
stos
inc
gs
xor
pop
mov
fstp
jbe
js
enter
mov
adc
loopne
push
sahf
mov
inc
and
mov
cmp
cmp
or
sub
aad
aad
int3
arpl
stc
sbb
adcb
jae
shll
jg
cmp
mov
sbb
or
fisubs
cmp
mov
shlb
push
cmpsb
cltd
add
scas
sahf
mov
scas
pop
pop
out
insb
pop
repz
cmpl
sub
imull
push
mov
sahf
jbe
cs
stos
push
jns
adc
ja
push
call
iret
aaa
ds
xchg
lock
repnz
cmp
or
and
popf
mov
and
mov
clc
xor
jne
shll
repz
pop
and
xor
mov
ljmp
cmp
aad
sub
xchg
fwait
or
out
out
mov
mov
and
push
xor
jl
xor
or
std
add
mov
push
sbb
add
sahf
jp
je
sub
inc
aad
xchg
imul
mov
mov
popa
bnd
mov
push
pop
jb
sti
inc
xlat
in
clc
cmp
ret
hlt
addr16
mov
xlat
sub
push
lock
ret
push
fidivl
test
push
in
xor
je
inc
fdivrp
jbe
cmpsl
adc
cld
aam
push
out
jge
jae
sub
inc
pusha
les
insl
cmp
push
mov
xchg
popf
cmp
jne
aam
dec
mov
and
repz
lahf
mov
push
sbb
cmpsl
add
cmp
ljmp
jb
xchg
lcall
popf
fdivrl
test
adcl
jl
and
dec
sub
call
mov
xchg
xor
repz
push
outsl
mov
shrb
daa
push
nop
xor
dec
fs
push
movsl
das
xchg
sub
dec
popf
sub
shlb
push
cmpsb
dec
ffreep
cwtl
shrl
xor
test
adc
push
and
add
mov
aaa
adc
inc
sahf
sub
fcomps
ljmp
nop
push
push
repz
insl
push
or
mov
sbb
lret
imul
adc
mov
xchg
stc
and
pop
inc
mov
ljmp
or
pop
aam
push
imul
mov
scas
push
inc
push
dec
dec
mov
test
cli
jmp
mov
and
xor
sub
fwait
insl
dec
sub
out
loop
dec
adc
jns
rcl
je
inc
jbe
xchg
sti
jecxz
or
in
rolb
inc
ss
push
andl
mov
popf
mov
rorb
cmp
pop
fistpll
fldenv
cmp
jno
punpckhdq
inc
dec
cmp
in
or
inc
inc
push
and
xchg
ljmp
sbb
dec
mov
jb
cld
hlt
inc
out
push
and
scas
inc
enter
jnp
int3
xor
mov
sub
test
sub
cmp
or
shll
push
sub
xchg
scas
mov
repz
lea
and
stos
xchg
push
rol
stos
mov
mov
push
or
mov
mov
push
lods
cmp
aam
push
lods
jmp
shrb
pop
mov
jbe
dec
pop
add
mov
stos
jmp
stos
mov
pop
mov
push
clc
cmp
aaa
and
adc
lods
sahf
mov
test
mov
out
dec
fisubl
lcall
inc
pop
test
cmpsl
dec
movsl
and
xchg
loope
lods
adc
test
int
push
subb
push
pop
das
hlt
insb
xchg
les
add
test
ja
cltd
mov
cli
mov
movsb
cmp
int3
and
push
mov
mov
lret
mov
lcall
jne
clc
sbb
lock
std
ds
ret
je
xor
cmpsb
clc
shr
std
mov
ret
ret
mov
or
and
add
xchg
inc
mov
sub
cld
cltd
movsl
sahf
call
inc
dec
xchg
fs
push
les
jmp
out
dec
adcl
jmp
mov
sub
inc
jmp
mov
inc
fdivl
flds
mov
mov
popf
cmpb
scas
mov
in
cmp
sbb
or
push
movsb
aas
inc
mov
lock
pop
or
pop
jecxz
or
mov
cmp
std
out
ds
insb
out
mov
lret
cmp
ds
mov
adc
dec
sbb
sarl
dec
dec
lcall
push
sarl
mov
lret
in
mul
pop
mov
mov
xchg
pop
es
xor
movsb
es
pop
inc
dec
add
ja
icebp
mov
sbb
scas
stc
inc
mov
pop
cltd
std
aas
mov
pop
aad
outsl
sbb
cmp
lea
or
xor
jle
add
ret
sbb
cmp
push
fstl
adc
fldenv
test
adc
jae
lahf
in
lret
loope
fimull
or
inc
mov
data16
stc
jmp
jg
cmp
pop
shld
mov
xchg
ljmp
xor
int
push
leave
pop
or
sbb
out
stc
ds
in
std
pop
in
lret
dec
in
sarb
nop
or
das
adc
sbb
jle
ret
int3
bound
aas
aam
mov
cmp
punpckhdq
stc
lock
jbe
and
sbb
adc
fistl
and
cwtl
or
in
insl
dec
xchg
jp
add
and
xchg
je
pop
cmpsb
mov
xor
push
into
movsb
sbb
js
cwtl
pop
hlt
mov
fidivrs
adc
push
push
cmp
push
dec
repz
jb
and
mov
add
lret
ja
clc
jle
loope
int3
push
leave
xorb
cmpsl
mov
mov
jge
xor
rcrb
nop
ret
pusha
aas
pop
cmp
pop
pop
jb
outsb
repz
xchg
mov
pop
lcall
cwtl
stos
sub
dec
push
test
imul
and
or
dec
outsl
ja
movsl
and
test
aam
std
cmp
shll
andb
das
clc
rcr
pushf
pop
mov
pushf
mov
test
push
mov
outsb
mov
mov
sub
fstl
insb
mov
cmc
int3
mov
sub
aas
pop
mov
fcompl
xchg
loope
movhps
push
jb
sbb
mov
std
or
xchg
lea
mov
xchg
push
lret
aaa
and
mov
xor
jae
orl
pop
cmc
aaa
xorl
mov
stos
push
fadds
xchg
xchg
cmp
imul
and
in
inc
fwait
xchg
insb
cli
xchg
cmp
inc
neg
icebp
dec
and
mov
cld
sahf
dec
sub
mov
imul
pop
cmpsb
mov
xchg
cmpl
jmp
fidivl
in
imul
mov
mov
outsl
nop
mov
fdivrs
add
pop
dec
pop
insb
jp
ss
xchg
icebp
mov
clc
outsl
adc
mov
movsb
repnz
inc
mov
js
jns
mov
test
shlb
cli
sub
inc
or
cmpl
scas
movsb
in
jno
enter
dec
js
xchg
xor
xchg
ret
xchg
arpl
jecxz
loope
cmc
in
fwait
dec
xchg
cld
lcall
in
aas
adc
mov
xor
inc
sub
cmp
loop
add
add
aam
mov
les
adc
push
jg
les
dec
aas
sbb
or
adc
bnd
test
repz
cmp
insl
or
leave
es
out
test
jb
xor
aad
fildl
mov
xorb
aaa
cs
je
sbb
mov
int
dec
addr16
xchg
test
cmp
hlt
mov
out
and
lods
rcrb
or
cld
sub
ja
xchg
aas
adc
aaa
stos
std
mov
out
pop
mov
mov
cmp
cmpsl
mov
xchg
mov
fdivl
or
ret
sub
stos
inc
jp
push
jae
enter
aas
fimuls
dec
pop
add
add
ret
aad
jl
mov
xor
outsl
sbbb
cli
pushf
mov
pop
test
test
cmpsl
aad
inc
cmpb
loopne
mov
cmp
push
test
inc
pop
or
push
mov
xchg
adcl
pushf
sub
push
dec
arpl
mov
or
adc
aad
jb
insb
jg
cmc
insl
cmpl
movsl
xor
jmp
fdivrs
scas
stos
out
mov
fsubrs
or
aas
push
call
out
xchg
sbb
adc
and
sub
cmp
xchg
shll
pop
fidivs
jno
mov
xchg
std
xchg
leave
cmp
sbb
bound
aaa
mov
fnstcw
push
cmpsl
notl
sti
enter
cmp
sbbb
cmpsb
jne
sbb
sbb
mov
out
mov
jg
out
sub
fwait
xor
mov
or
adc
popa
inc
jns
mov
out
mov
jecxz
das
xchg
loope
cli
adc
mov
mov
aam
inc
movsl
hlt
pop
test
lea
das
decb
repz
aad
sbb
inc
repz
ss
ljmp
stos
mov
jmp
insl
sarb
mov
orl
out
adc
mov
push
rorl
cs
or
sahf
clc
dec
jmp
stc
repz
push
or
lahf
push
and
sub
push
lods
ja
lock
imul
in
pop
add
pop
or
or
push
repnz
jmp
cmp
outsb
mov
out
ret
imulb
pop
andb
push
cli
sbb
dec
jns
xor
push
cwtl
mov
xor
incb
adc
xor
jg
bound
inc
mov
movsb
repnz
xchg
jg
dec
push
sbb
clc
or
cmpsb
add
sub
inc
call
or
pop
sub
out
cwtl
pop
mov
mov
inc
lcall
sar
xor
dec
leave
inc
dec
ss
push
sti
imul
or
dec
cmp
cmc
mov
lock
mov
into
xchg
hlt
fwait
test
divl
dec
sbb
test
fldenv
lock
xor
xchg
dec
arpl
test
add
sbb
and
adc
and
mov
stos
repnz
stos
sbb
ja
enter
mov
jge
imul
push
mov
cmp
ds
lods
sbb
fs
inc
in
cmpsl
iret
jbe
pop
mov
cltd
test
mov
jmp
cmp
xor
insb
fistpll
fistps
lock
test
unpcklps
push
lea
stc
pop
push
aam
jae
inc
push
xchg
jp
outsl
xor
cwtl
add
xchg
mov
push
add
adc
iret
data16
xchg
pop
test
pop
in
push
daa
mov
test
inc
sbb
movsl
mov
pop
movsb
lock
mov
add
push
sub
pop
clc
test
inc
and
sbb
mov
stos
insl
test
loope
int3
aam
fmul
mov
aam
sbbl
roll
sti
ja
leave
fldl2e
xchg
data16
push
fisubrs
pop
sub
mov
int3
loope
into
cmpsl
dec
je
jmp
leave
sbb
mov
nop
or
push
mov
xchg
sub
in
lds
rorb
imul
add
xor
xchg
sbb
jne
dec
cli
xchg
cs
dec
jae
sti
lahf
push
jne
scas
imul
ret
lcall
ljmpw
mov
ja
fsubl
out
stos
subps
mov
mov
lret
sub
cmp
adc
popf
xchg
sbb
sbb
xor
mov
mov
cmp
lods
shl
xchg
cli
xchg
dec
and
pop
je
and
cmp
int
fdivrs
inc
jo
test
ret
or
xor
mov
sbb
xor
jbe
daa
or
test
scas
inc
xchg
mov
mov
pusha
mov
inc
lret
xor
int3
sbb
pop
shll
cli
mov
sub
ljmp
hlt
imul
dec
or
cmp
lods
pop
scas
dec
testl
jnp
lods
mov
cwtl
and
out
cmp
ljmp
popa
or
cmpsb
xor
int
or
imul
jae
dec
fidivs
test
mov
dec
pop
push
mov
sub
mov
lock
psrad
test
mov
test
fstpt
push
adc
enter
or
loop
sbb
xlat
pop
fwait
sub
pusha
pop
ret
pop
mov
pop
mov
stos
sti
repnz
loope
int3
jbe
into
mov
ffreep
or
mov
adc
in
adc
ds
and
lods
jns
mov
sahf
fsubrs
loope
sub
jns
rorb
jg
mov
or
mov
jb
mov
and
push
popf
and
ret
repz
dec
fdivr
jo
in
jbe
sub
shrl
sub
push
lahf
push
push
and
fucomi
add
pop
xor
das
mov
aam
mov
jns
push
push
push
leave
pop
lret
sub
sub
pop
sbb
icebp
mov
outsl
popa
clc
mov
push
xor
mov
mov
cmp
add
mov
nop
dec
xor
cmp
xlat
mov
out
xchg
jb
inc
sbb
mov
xchg
add
push
inc
adc
sbbb
sahf
in
aaa
inc
pop
mov
scas
push
clc
hlt
lea
ret
adc
cmc
iret
jge,pn
outsl
testl
xchg
mov
test
addr16
faddl
insl
inc
ja
out
lock
scas
adcb
shl
xchg
sub
roll
mov
mov
inc
jae
int3
fs
mov
fdivr
add
fcomps
fdivl
jns
jmp
test
cmp
out
mov
jmp
cli
adc
cmp
sbb
mov
lret
pop
sbb
push
stos
aaa
pop
arpl
and
inc
mov
es
loopne
out
ja
dec
or
mov
lea
push
add
push
mov
hlt
pop
jo
mov
shld
sub
or
sbb
pop
mov
out
in
adc
div
xchg
sbb
jne
je
xchg
push
out
pop
mov
xchg
adc
push
mov
xor
lock
cmp
cltd
cmpsl
mov
adc
mov
cs
jge
imul
ds
out
test
add
mov
movsl
inc
stos
push
jbe
mov
pusha
hlt
jb
mov
dec
add
mov
dec
mov
enter
ds
in
dec
mov
xor
add
pop
fnstcw
shlb
pop
cltd
adcl
out
xlat
xor
outsb
in
push
roll
int3
pop
jns
pop
mov
mov
in
enter
xor
xchg
movsl
mov
xchg
add
imul
pop
cmc
sahf
daa
pop
xor
xor
popa
in
and
mov
mov
ljmp
mov
mov
mov
sahf
add
fs
cmp
bound
and
rcl
dec
fsubrs
mov
push
insb
sub
rcll
enter
data16
flds
cwtl
cli
loopne
loope
fistps
je
jne
push
sbb
pop
outsb
inc
and
inc
iret
repz
xchg
push
leave
pusha
inc
repz
push
cmpsl
imul
xchg
push
sti
sub
int
jnp
iret
outsb
dec
jge
push
jmp
lods
inc
jo
inc
stos
sbb
mov
mov
mov
or
stos
nop
adc
jg
iret
lretw
call
in
inc
xchg
lock
in
clc
jne
shlb
jb
testb
nop
out
push
sub
push
or
mov
dec
pop
pop
repz
test
lret
or
leave
and
mov
cmpsl
ds
pop
xor
shrb
jbe
cld
xchg
stos
jge
fwait
scas
lret
inc
ret
and
mov
aad
idivb
cmc
mov
xchg
cs
test
ljmp
pop
add
sub
sti
add
cmpl
movsl
xchg
dec
sbb
jo
dec
fdivrs
sub
or
ljmp
leave
adc
push
push
cltd
clc
cmpsl
lret
sti
enter
add
scas
push
stos
shr
jl
xor
xor
push
pop
cmc
mov
lds
mov
push
xor
aas
cmpsl
xlat
and
mov
add
mov
mov
out
add
mov
dec
dec
inc
fsub
inc
push
addr16
mov
add
std
mov
faddl
jg
ja
push
test
aas
pop
cmpsl
pop
icebp
adc
lds
mov
psrad
xchg
imul
aam
pop
inc
pxor
cltd
lods
inc
pusha
pop
jbe
sbb
jmp
add
push
ss
test
cmp
xor
out
inc
pop
in
and
mov
sub
push
aas
daa
push
aas
mov
mov
dec
jmp
rorl
cmp
and
movsl
lahf
ss
xchg
imul
dec
jecxz
les
cmc
push
and
insl
roll
adc
mov
push
fwait
dec
mov
xor
or
sahf
xchg
xchg
sub
mov
push
mov
lahf
pop
icebp
rclb
movsb
xchg
loope
stos
divb
mov
bound
xor
inc
xlat
sub
push
stos
and
mov
inc
or
std
and
movsl
scas
dec
mov
dec
add
mov
lahf
pop
jnp
push
shrb
xor
xchg
inc
mov
je
xlat
mov
out
dec
xchg
push
call
arpl
or
sub
ficoms
jne
lods
cmpsb
pop
psubd
in
gs
fnstsw
loope
cmp
sahf
in
bound
mov
add
and
int
outsb
jle
adc
sub
repz
mov
xchg
jl
jp
fmuls
sbb
stos
pop
repnz
jo
lds
and
xchg
out
sub
mov
mulw
ljmp
mov
push
insl
mov
sbb
je
in
add
cmp
and
mov
and
jno
pop
xor
jp
mov
outsb
cwtl
test
int3
mov
jno
pop
xchg
jo
pop
lret
jo
jmp
aaa
push
repz
cmpsb
lea
sub
inc
insb
xchg
xchg
and
mov
inc
cmpsl
adc
mov
sub
arpl
xchg
sub
hlt
int
repz
lds
mov
pop
fs
dec
xchg
cmp
out
daa
mov
mov
pop
insb
cli
into
lods
inc
jno
pop
idivb
cmp
test
gs
pop
inc
dec
movsl
cli
jo
int
repz
call
fnstcw
ror
clc
dec
mov
mov
mov
cmc
jecxz
int
out
jge
sub
mov
mov
cmpxchg
hlt
xchg
dec
pop
enter
mov
xchg
inc
mov
adc
das
push
add
cmpl
in
jge
xchg
dec
andb
cmpl
popa
sahf
das
ljmp
jne
sub
jb
push
mov
mov
ljmp
fwait
or
mov
sarb
bound
imul
fnstenv
ret
out
jecxz
cwtl
adc
sub
mov
testb
sbbl
imul
outsl
fstpl
mov
jecxz
adc
iret
enter
mov
or
into
cmp
notb
insb
inc
hlt
xchg
mov
cld
sahf
push
mov
pop
cld
rcrl
rorl
icebp
sbb
push
leave
or
cmp
dec
push
push
stc
iret
push
sub
hlt
scas
and
test
push
repnz
mov
lahf
adc
ljmp
or
sti
int3
xor
and
and
adc
idiv
test
push
fs
lods
js
js
mov
xchg
leave
jmp
xchg
out
mov
or
inc
push
sub
or
je
ds
pop
out
call
stc
je
pop
inc
fmull
jbe
and
lret
inc
xor
cmp
inc
flds
js
popa
cs
cmpsb
loope
in
out
or
jge
add
sbb
cwtl
notl
int
mov
in
or
sahf
push
ljmp
in
sub
stc
push
mov
jg
sub
stos
pop
rcrb
gs
fists
imul
aad
sarb
cmp
adc
cmp
mov
out
idivl
loopne
xor
push
dec
add
sbb
cmp
dec
adc
sti
dec
aam
test
outsl
out
jge
fsubrp
hlt
aad
ljmp
rcl
fistpl
xor
pop
and
add
or
repnz
cmp
jne
mov
inc
inc
lock
cmp
fld
pop
in
push
je
js
lret
in
scas
jecxz
gs
hlt
fidivrs
jno
mov
mov
and
xchg
dec
push
nop
inc
pop
and
pusha
mov
rcl
push
mulb
out
sub
lea
jne
mov
push
into
enter
sbb
xchg
mov
mov
outsl
or
dec
mov
fiaddl
enter
scas
call
jb
jge
fisubrl
dec
pop
dec
rol
outsb
add
arpl
jbe
xor
pushf
dec
popf
fsub
outsb
or
xor
testl
cmpsb
ds
jns
add
cmp
push
xchg
mov
shl
mov
fnstsw
mov
fsubs
ret
jle
aad
mov
and
mov
sub
lret
mov
mov
movsl
fcomps
cmp
aad
adc
enter
mov
insl
sub
cmp
xor
add
jecxz
imul
pop
cmpsl
outsl
addr16
outsb
das
mov
sbb
sub
and
popa
xor
adc
cmpsl
inc
dec
mov
loopne
mov
xchg
scas
cmpsb
daa
bound
and
pop
jbe
push
test
das
les
insl
call
adc
jno
inc
xor
pop
ret
ja
inc
xor
imul
lock
jo
cmp
cwtl
sub
leave
icebp
jp
out
arpl
xchg
movsl
jo
mov
mov
adc
jbe
clc
mov
daa
test
push
push
loop
add
lods
lods
pop
fmull
addr16
mov
pop
negl
push
es
jo
shl
test
std
test
jl
adcb
popf
testl
jb
adc
out
push
push
mov
movsl
cs
mov
add
or
jo
add
loop
rcrb
xor
fildll
add
mov
stos
add
push
ds
push
lods
movsb
nop
mov
imul
pusha
sbbb
test
xchg
iret
ss
sub
mov
lcall
pop
sub
pop
popl
stos
and
mov
push
and
cmpsb
ret
fwait
mov
adc
mov
sub
rcrl
inc
das
mov
lock
sbb
imul
mov
mov
xor
push
outsl
sahf
clc
testb
cld
xchg
das
outsb
loopne
mov
call
mov
mov
sub
movsb
shl
lahf
test
call
cmpsb
les
sub
jg
or
adc
xor
xchg
nop
xchg
scas
xchg
out
pop
outsb
or
test
ja
jmp
adcl
or
push
push
mov
loop
pop
lock
inc
push
dec
pop
aad
fwait
std
out
adc
cmp
pop
arpl
sbb
aad
addr16
push
repz
ret
repnz
add
sub
adc
xchg
popa
fmull
xor
aad
mov
std
js
mov
mov
add
sarb
jmp
inc
enter
inc
inc
das
mov
xlat
testl
outsb
clc
mov
xor
in
add
pop
cs
mov
or
stos
and
xor
movd
bound
addr16
mov
pop
out
sub
add
mov
and
test
sahf
call
lcall
in
add
pushf
mov
popl
addl
shlb
adc
adc
rcrb
jo
movsl
jne
sahf
je
mov
pushf
push
dec
xchg
jl
jae
mov
xor
push
mov
cli
aam
push
pop
sahf
adc
leave
int
sbbb
mov
aas
push
mov
rcrl
rcr
out
add
enter
add
in
inc
cmpsl
stc
and
and
cmp
fisubrl
lds
aad
pop
and
mov
aaa
mov
pop
mov
xlat
pop
negl
popl
sbb
cli
sub
cmpsl
push
insl
push
jmp
jb
or
out
or
push
inc
hlt
rorb
gs
fsts
outsl
push
mov
lods
xlat
cmp
push
clc
jae
sub
hlt
mov
mov
cli
movsb
mov
inc
data16
jg
mov
popf
sub
xchg
sbb
mov
inc
aaa
fs
shr
dec
and
inc
aad
js
lds
mov
in
and
push
test
xchg
gs
aam
ficomps
fbstp
in
cmp
lcall
inc
inc
fmull
push
jns
jbe
int3
bound
fidivs
xchg
into
and
repz
inc
out
pop
das
push
inc
dec
mov
aas
mov
cli
xchg
outsb
add
adc
xchg
into
mov
cmp
lds
pop
divb
es
or
stc
xor
test
leave
cmc
or
mov
inc
loop
dec
out
mov
xchg
xor
sbb
aaa
or
adc
pop
leave
icebp
and
fstpt
dec
and
sahf
mov
es
fisubs
dec
test
jnp
mov
in
sbb
push
out
xchg
and
je
jb
push
xchg
jo
loope
add
jne
dec
call
mov
inc
fnsave
sbb
xchg
xor
fidivl
lds
mov
xchg
sub
inc
cmp
sbb
inc
or
add
sbb
jne
adc
aaa
cmp
dec
add
dec
xacquire
cmp
push
cltd
jo
or
repz
adc
shlb
into
sub
mov
mov
insb
pop
push
push
push
inc
dec
push
jo
insb
xchg
and
mov
jno
mov
jne
mov
divb
call
xlat
stos
incl
mov
std
push
sub
jl
shl
xor
mov
enter
into
movsl
pop
inc
fildl
cmpsb
incb
fldt
jns
ss
mov
push
push
or
call
adc
xlat
stos
mov
sti
aas
add
mov
pushf
and
leave
call
cld
out
out
xchg
fcmove
mov
sahf
xchg
inc
in
jge
ss
dec
adc
or
dec
mov
testl
mov
mov
out
arpl
dec
stos
dec
imul
xchg
scas
adc
xlat
dec
lock
sbb
pop
imul
sub
repz
xchg
adc
push
les
add
mov
add
mov
mov
iret
push
adc
lret
mov
repz
in
ret
sub
and
cltd
mov
iret
xor
clc
test
mov
test
or
bound
adc
ljmp
mov
push
testl
mov
outsl
shl
jnp
pushf
or
dec
ret
daa
icebp
mov
outsl
cwtl
shrl
jbe
mull
repnz
mov
mov
pusha
iret
daa
outsl
bound
outsb
in
in
mov
repz
call
sub
jbe
rcr
add
add
push
xor
mov
inc
arpl
pop
xor
dec
push
lods
push
xchg
xchg
mov
pop
add
jg
jno
mov
and
rcrl
mov
daa
sbb
or
push
xchg
outsl
lds
fimuls
lock
or
add
mov
add
inc
hlt
dec
pop
cmc
adc
rcr
mov
test
fisubl
push
jnp
fsubr
pop
std
roll
in
clc
out
xchg
add
repz
adcl
mov
and
jns
arpl
mov
sahf
stos
lahf
jne,pt
adc
movsb
xchg
jl
insl
lea
repz
fs
and
lods
and
mov
mov
pushf
sub
xor
mov
out
push
mov
inc
aad
loope
inc
ljmp
adc
data16
loop
xlat
jb
loop
jg
fsubs
cmc
in
and
iret
loop
int
sub
sub
push
sub
rep
leave
leave
pop
pop
filds
jmp
add
lods
stc
inc
rcrb
pop
bound
xchg
cld
enter
pop
jmp
or
loopne
pop
fbstp
or
push
lahf
cli
hlt
mov
cltd
nop
pop
adc
cmpsl
adc
ljmp
bound
sbb
pop
inc
dec
loop
fnstenvs
fucomip
lds
push
enter
in
bound
sbb
sbb
loop
jo
push
mov
call
enter
jb
mov
and
sub
pop
jp
adc
ror
push
push
sub
stc
pop
dec
pop
or
aad
mov
int3
jnp
mov
pop
xlat
into
adc
cmpsl
ja
pop
out
inc
lods
pop
nop
lods
mov
jmp
cmp
shl
jnp
imul
adc
iret
push
add
mov
mov
push
mov
cs
into
or
mov
adc
fldl
inc
fisubrl
jno
push
imul
bound
adc
push
mov
inc
jecxz
addr16
ds
outsl
loop
mov
rcl
pop
test
cmp
lods
jge
adc
daa
xchg
movsb
fistps
xor
xor
fs
les
pop
pop
pop
sub
mov
cmp
push
dec
shlb
lock
call
lret
sbb
lret
cld
xlat
outsl
cld
in
es
push
lods
inc
sub
scas
fcompl
ss
stos
outsl
adc
sbb
xor
gs
dec
fcmovne
addb
loopne
orb
mov
sahf
das
inc
xlat
pusha
mov
mov
les
push
mov
lahf
incb
and
xor
jecxz
mov
push
add
pop
mov
in
jle
mov
ljmp
add
in
ret
aad
xlat
test
inc
push
pusha
or
sahf
push
xor
test
push
push
js
sbb
test
sbb
bound
aad
inc
and
cwtl
loope
mov
repz
inc
std
les
mov
xchg
push
icebp
sbb
dec
es
dec
sub
mov
cs
and
cld
or
test
mov
outsl
dec
shl
or
popa
adc
popf
inc
iret
and
popa
std
repnz
and
ljmp
add
fld
pop
or
lret
jnp
push
sub
sub
push
mov
enter
mov
jge
mov
cmpsb
mov
sahf
out
push
das
cli
jns
mov
int3
xchg
jo
in
inc
not
push
or
inc
popf
add
cltd
scas
aas
inc
xlat
in
lods
movsb
shrb
adc
and
adc
outsb
xlat
jge
in
cmc
in
xor
jg
das
add
sub
push
stc
and
call
addr16
movsb
stc
leave
mov
cwtl
aam
addb
stos
cs
pop
out
add
jne
adc
les
adc
mov
mov
es
test
xchg
push
pop
jbe
mov
jns
pushf
and
sti
fildl
scas
sub
jno
out
sbb
adc
xchg
shll
pop
std
pushf
mov
cs
mov
fsub
popa
mov
sbb
sbb
cmp
and
pop
out
pop
or
xchg
mov
lret
and
jmp
scas
mov
sub
repz
xor
dec
fistpl
lds
mov
cltd
das
cmp
enter
dec
nop
pop
jae
xchg
cltd
aam
inc
mov
fidivrl
jb
sub
enter
mov
jb
cmpsb
popl
mov
les
mov
adc
ss
into
loop
xchg
jns
and
push
mov
scas
xor
dec
sbb
hlt
ja
adc
push
aaa
hlt
dec
je
push
push
loope
cmpsb
cmp
mov
ds
out
ljmp
fmuls
mov
imul
xorb
cmp
jo
inc
dec
orb
push
lahf
nop
xchg
out
rclb
mov
out
jl
imul
aas
jge
outsb
lahf
cmp
jl
shl
repnz
repz
mov
xchg
sbb
lret
mov
iret
imul
in
push
cli
push
insl
sub
sub
jmp
dec
scas
mov
xlat
xor
mov
mul
inc
arpl
xchg
and
lds
jmp
imul
test
cmp
cmp
mov
lahf
xor
leave
inc
lcall
or
je
sub
mov
stos
mov
scas
mov
ss
inc
jno
xchg
mov
dec
mov
loopne
subb
pusha
ljmp
mov
adc
daa
aam
ret
inc
into
ret
push
ja
pop
mov
mov
cmp
mov
loope
dec
loop
jge
cs
and
popf
cmpsl
dec
xchg
jo
cmp
push
stc
test
in
xchg
data16
clc
enter
fldl
sti
sarl
or
push
out
in
jg
lock
jb
cmp
pop
icebp
fstpt
jns
stc
inc
jp
hlt
stos
daa
jne
data16
hlt
add
sub
sbb
mov
and
lea
mov
mov
mov
cmc
sbb
xor
sub
lds
inc
mov
ja
cli
and
pop
jecxz
arpl
orb
out
pushf
cs
mov
mov
js
aad
sbb
adc
xchg
mov
mov
out
test
ds
adc
adc
push
adc
fisubrs
icebp
stc
sbb
andb
lret
pop
mov
push
sub
dec
popf
cmp
fs
pop
push
pop
sbb
adc
lea
sub
cltd
aam
push
test
push
mov
lods
dec
add
aam
push
adc
inc
daa
in
pusha
popf
lock
and
xchg
stos
add
cmpsl
add
xor
or
or
cli
dec
adc
dec
pop
out
subl
push
jno
test
insb
testb
xchg
stos
or
aam
adc
mov
cmp
adc
jle
mov
loopne
or
adc
adc
sub
fcomip
dec
ret
fs
js
mov
test
jo
mov
push
in
cmp
pop
inc
inc
loopne
mov
adc
jle
dec
push
out
xchg
out
mov
mulb
push
adc
adc
xor
pop
or
jbe
rcr
ss
jae
lock
sbb
lock
cmpl
shrb
cmp
popf
cld
xchg
jbe
mov
testl
popf
lods
mov
lret
test
shll
ljmp
orl
push
fadds
or
mov
pusha
mov
fucomp
sub
lret
pop
mov
xor
int
or
addb
cli
or
and
stos
mov
push
test
xor
test
xor
and
pop
jmp
aam
adcl
xchg
jg
lods
mov
enter
addb
sarb
fwait
xchg
ja
and
adc
add
gs
ret
xor
push
decb
or
lds
pop
jg
push
mov
dec
sti
inc
movsb
mov
sarb
mov
jo
or
xor
fucomip
inc
cmc
jb
dec
outsl
sub
out
test
lock
lea
xchg
jns
lret
mov
push
data16
pusha
out
dec
pop
daa
lods
cmp
and
xor
cmp
popa
add
ljmp
push
test
inc
xchg
negl
nop
ret
jo
das
ljmp
or
filds
lods
in
inc
adc
bound
bound
sub
nop
popf
dec
shll
je
repz
xchg
div
pop
push
cmpsl
call
jbe
cmpb
in
jbe
mov
push
adc
gs
shll
push
popf
mov
inc
jl
and
push
popf
lret
jg
in
enter
movsl
pop
fwait
pop
mov
and
mov
mov
lcall
push
jae
mov
rolb
outsl
or
xor
mov
jae
mov
pop
and
imul
cld
push
fwait
inc
mov
adc
or
sub
jno
das
jmp
mov
dec
dec
and
mov
aad
int3
mov
fidivl
xchg
out
cld
ret
stc
iret
sub
mov
repz
movsl
xor
push
sub
mov
adc
mov
jecxz
clc
mov
sub
or
jbe
mov
fidivl
cmpsb
dec
xchg
fdivs
testl
gs
jae
pop
jne
fbld
mov
dec
shll
push
fidivl
xchg
push
test
push
and
cmp
sub
fisttpll
push
jl
xchg
fcoml
mov
bswap
sub
repnz
fisubs
or
xor
in
push
shrl
cmpsl
cltd
testb
push
mov
mov
mov
rolb
sahf
lret
stc
aad
imul
popf
popf
mov
inc
in
pop
mov
adc
ja
cmpb
inc
imul
mov
sbb
push
lods
jg
lret
xchg
insb
xchg
push
shl
movsb
inc
jg
leave
int
mov
mov
add
test
popa
sarl
add
xchg
hlt
dec
inc
gs
enter
mov
dec
jae
pop
hlt
jl
leave
and
ret
inc
cld
xchg
jne
hlt
fs
daa
cmp
loop
pop
adc
pop
hlt
cmp
xchg
xchg
sarb
mov
jno
push
mov
dec
mov
mov
fwait
xchg
sub
leave
adc
divl
ljmp
rorl
in
dec
test
mov
ds
pop
jmp
in
mov
and
jecxz
xchg
scas
addb
mov
dec
test
dec
jmp
add
jle
nop
mov
cmpsl
jle
jle
jg
neg
cmpsl
push
xchg
or
mov
fiadds
lret
inc
shrb
ss
or
or
mov
test
lret
sbb
mov
jbe
out
ror
mov
hlt
add
ja
pop
sbb
and
in
je
xor
repnz
push
cmp
out
lods
cmp
test
lds
sahf
mov
fstps
popf
mov
fisttpll
stos
mov
xor
xchg
inc
scas
lret
cmpsl
pushl
push
fnstcw
mov
divb
or
aaa
int3
mov
pop
dec
xchg
xchg
test
pop
ret
push
or
fldt
xchg
cmp
xchg
ja
sbb
mov
jecxz
std
xchg
jbe
aas
dec
pop
jno
mov
shll
movsb
loop
adc
mov
mov
or
sub
mov
push
mov
aad
xchg
aad
cmp
negb
cmc
test
mov
mov
or
hlt
mov
mov
sarb
add
mov
jp
pop
sub
mov
ret
cld
repz
ljmp
sbb
cmc
popa
cld
gs
loopne
rorl
mov
in
ds
pop
push
movsb
mov
mov
cmp
pop
mov
push
shl
jge
xchg
dec
jae
xchg
leave
flds
sbb
adc
sub
pushf
pop
xchg
and
lret
dec
mov
jmp
cli
out
sbb
xchg
cmp
les
xor
push
mov
xor
pop
sbb
mov
mov
ds
mov
and
sti
adc
mov
dec
aam
push
push
pop
divl
call
addb
bswap
fistpll
jp
xor
nop
les
sbb
push
in
and
mov
or
outsl
add
xor
lea
sarl
xchg
sarl
cmp
mov
cmp
fsubrs
pop
sub
xchg
fistl
lods
repz
arpl
and
sub
insl
and
rep
cld
xor
adc
ja
push
jae
mov
jnp
mov
hlt
lods
subb
inc
idivl
call
sahf
pop
fsts
out
sub
sbb
psadbw
call
into
adc
jae
add
and
lea
dec
cmp
rcrb
jb
jb
sub
inc
jb
enter
mov
repnz
adc
insb
addr16
xchg
add
std
inc
mov
je
xchg
mov
inc
fs
adc
xor
jg
movsb
xchg
mov
incb
sbb
pop
jne
in
test
cltd
test
mov
gs
cmp
cmp
adc
rcl
call
jb
rcll
sbb
mov
mov
lock
cmpsl
mov
mov
pop
rorb
lcall
imul
push
xor
negl
mov
fs
and
mov
push
ret
sub
inc
scas
and
jb
push
mov
ret
imul
xor
xchg
aad
xor
adc
mov
push
push
xchg
out
push
sbb
mov
repz
and
icebp
dec
mov
pop
data16
mov
lock
fcoms
test
addr16
push
adc
mov
xor
xchg
shll
adc
sub
pushf
push
push
fsincos
add
idivb
scas
and
cmp
fisubrs
test
add
mov
pop
aas
push
pop
inc
addr16
push
je
cmp
jae
outsl
xor
out
add
in
mov
in
inc
push
xlat
mov
outsb
or
dec
shrl
stc
int3
loopne
cmpsb
jb
adc
cmpsl
ret
xchg
push
arpl
out
int
inc
sub
sub
xchg
push
mov
scas
neg
mov
hlt
js
cmp
pop
jge
dec
pop
xchg
cmp
sahf
lock
jge
mov
in
cs
or
jns
adc
pop
inc
xor
or
lret
dec
push
mov
push
add
and
ror
lods
int3
das
or
mov
fsubl
addb
out
cmp
pop
loopne
jb
popf
bound
movsl
or
adc
cmc
pop
lods
cmpsl
test
loope
lods
adc
lret
mov
jne
repz
lods
push
idivl
push
push
fldenv
dec
les
push
xlat
cs
push
add
aaa
repnz
fcomp
xchg
mov
push
lock
sarl
mov
jnp
or
and
in
or
mov
sub
push
xor
jae
jne
dec
inc
push
adc
xorl
loop
das
clc
sahf
clc
gs
sub
inc
lret
add
xchg
mov
pusha
push
rcll
std
jo
mov
cmp
out
ja
mov
jp
in
les
cmc
push
movsl
cmpl
fdivrl
fisubs
movsb
cmpb
pop
insb
inc
lret
cld
inc
flds
inc
fcoms
pop
xchg
test
xor
repz
bound
in
pop
sub
or
cmpsb
sbb
cmp
mov
xchg
sbb
jg
icebp
movsl
pop
mov
adc
mov
bnd
mov
int3
sbb
sub
sti
and
adcl
mov
adc
sbb
push
shll
js
out
sbb
pop
movsb
stos
add
inc
inc
loop
pop
sahf
sbb
mov
lods
ja
shll
mov
xchg
lods
pop
movsl
inc
montmul
cmpsb
pop
xor
jns
insl
mov
stos
and
sbb
push
stos
and
pop
adc
xor
xor
cmp
lds
xor
cwtl
out
cli
in
inc
fstps
mov
jecxz
cmc
mov
push
jecxz
lcall
push
ret
xor
jae
fcomp
inc
inc
pusha
cmpb
dec
loop
dec
inc
push
testl
negb
mov
mov
arpl
fwait
cmp
add
xor
aas
cmpsb
pop
adc
pop
insb
pop
dec
mov
pop
testl
leave
jns
sbb
xchg
inc
popa
in
sub
call
out
std
jo
rcrl
mov
push
mov
fwait
aam
push
inc
adc
cld
int3
cmp
je
icebp
pop
loope
in
cmp
fisttpll
into
js
fsts
mov
movlps
adc
movsl
arpl
adc
ficomps
ljmp
jb
in
dec
adc
dec
dec
call
movsb
aaa
sub
cmp
in
mov
leave
inc
sbb
stos
push
aaa
iret
addr16
stos
jle
rcl
push
push
fdivl
ds
pop
dec
es
lahf
dec
jbe
xor
sub
mov
scas
add
lods
push
xlat
jno
lret
sbb
shr
push
ljmp
xchg
mov
jecxz
lcall
sbb
ds
jp
popf
insb
iret
inc
mov
movsl
pop
sub
push
dec
sub
je
add
inc
mov
test
xor
mov
es
xor
test
push
je
dec
leave
pop
fistps
sub
gs
mov
push
and
fcompl
jbe
sbb
xor
push
ja
leave
test
cli
xchg
ss
cs
jmp
rorl
rorl
xchg
sub
xchg
pop
mov
push
andl
mov
lahf
insl
sbb
pop
mov
push
sbb
xor
lods
mov
nop
lods
sbbb
cmp
mov
call
jo
les
and
mov
cmpl
pop
mov
cltd
push
ds
or
movsl
lret
mov
jne
stos
jne
daa
scas
and
pop
pop
inc
lods
repz
add
sbb
dec
fcomip
xchg
mov
fldenv
adc
jae
stc
out
add
enter
in
pop
je
inc
fstpt
incl
pop
dec
cmpsl
fisttpll
bswap
mov
dec
movsb
ja
pop
loope
enter
fcoms
jb
sub
sub
xor
lock
push
mov
sub
imul
adc
adc
sbb
jae
shl
jbe
rep
in
and
jnp
fwait
and
inc
fs
lea
mov
adc
or
loope
or
lahf
sbbb
add
sub
bound
cwtl
mov
pop
push
loopne
pop
jmp
and
aas
mov
aas
out
aam
sbb
inc
mov
lret
popf
daa
lret
or
fsubs
cmpsl
out
sbbb
ficompl
xchg
cmp
stos
cmp
jb
fists
lods
pop
data16
sub
mov
xor
shll
cmc
mov
sahf
sti
cltd
mov
leave
int
cmp
cmp
or
inc
and
and
into
jbe
adc
cmp
pop
scas
test
test
push
xchg
mov
hlt
pop
movsl
icebp
push
cmpsb
xchg
fcomps
sub
add
gs
jmp
inc
push
ja
jle
push
sub
adcl
jp
jbe
mov
int3
and
rcr
in
out
ficoml
mov
xchg
cmp
movsl
xchg
jnp
ja
inc
gs
push
cmp
testl
scas
int
pop
xlat
test
stc
xor
pushf
fucomp
lods
push
xchg
pop
or
clc
add
xorl
test
sahf
add
shlb
loopne
stos
push
mov
test
dec
or
inc
cmp
in
push
mov
cwtl
xor
jecxz
or
pop
mov
test
xor
jmp
into
setle
adc
cld
mov
imull
das
cmp
xlat
sahf
xor
je
inc
sub
sub
mov
push
pop
adc
jb
addr16
or
enter
fisttpll
mov
inc
enter
loop
int
inc
rorl
les
insb
sub
icebp
mov
or
inc
or
mov
pop
pop
test
and
enter
sub
xor
int
cmp
or
fcoms
shll
sarl
or
push
mov
stos
popf
lods
mov
adc
adc
jnp
scas
mov
mov
lret
jb
push
xchg
xchg
es
add
mov
inc
cli
mov
dec
fs
stc
dec
in
pop
mov
movsl
sub
inc
sub
adc
jb
bound
popa
clc
enter
and
add
cmc
and
pop
xlat
dec
loopne
or
sub
addr16
lods
pop
sarl
jg
into
jecxz
int3
and
jnp
int
int
fimuls
stos
mov
or
xor
lds
or
or
shrl
mov
imul
dec
push
push
stos
push
aas
mov
dec
adc
mov
mov
data16
or
test
ljmp
pop
test
icebp
pop
inc
jns
mulb
mov
pop
cmpsl
pop
mov
mov
sbb
mov
fadd
ljmp
pop
mov
xor
int3
and
sub
test
pop
data16
leave
inc
in
cmp
outsb
bound
cmp
or
imul
jb
std
outsl
loop
insl
fisttpll
dec
rcl
lock
sti
fdivrs
add
das
xchg
arpl
pop
xchg
sbb
adc
xor
sub
mull
je
rclb
dec
insb
ljmp
mov
scas
lods
clc
cmpsl
sub
cli
jge
mov
sbb
add
pop
les
sub
out
scas
dec
inc
je
xchg
dec
lcall
mov
in
mov
icebp
xchg
pop
repz
pop
aam
xchg
bound
sub
jne
sub
xlat
mov
mov
data16
pop
pop
vsqrtsd
push
sbb
decl
cmp
out
cmp
popf
pop
fldenv
xor
mov
xor
jne
or
cld
add
popl
enter
pusha
fs
inc
shrb
scas
or
loopne
and
push
pop
mov
mov
ljmp
mov
dec
xchg
mov
add
mov
mov
hlt
mov
rorl
movsl
add
xor
push
scas
mov
mov
sbb
xcrypt-cbc
cmpsl
push
scas
pop
cmp
adc
xchg
adc
cmp
and
mov
mov
inc
or
lcall
xchg
or
sbb
mov
push
ss
mov
leave
pushf
lods
cmp
imul
pop
add
fsub
jns
add
hlt
movb
cmc
imul
adc
push
mov
xor
outsb
mov
inc
arpl
xlat
cmc
cmp
repnz
add
mov
call
das
subl
scas
pop
lea
inc
icebp
push
ror
mov
mov
jge
shlb
push
pop
lock
push
push
jmp
xchg
xchg
movsl
xlat
mov
sbb
and
cmp
icebp
dec
mov
ss
mov
loope
cmpsl
mov
dec
lods
cmpb
in
enter
mov
jmp
stc
cmp
cmp
mov
push
jae
dec
mov
ret
xor
out
mul
clc
cmpsl
or
sub
and
ret
aam
cmc
cmp
mov
sbb
and
cltd
mov
inc
andb
mov
scas
popa
in
repz
xorb
aas
mov
add
bound
decb
adc
int
cld
in
and
push
test
and
lods
inc
sti
mov
lret
ljmp
jb
mov
pop
mov
fimuls
cmp
push
mov
repz
cs
dec
pop
ds
lds
pop
popf
sub
gs
test
mov
xchg
scas
pop
roll
jg
mov
sub
in
jg
pop
push
mov
jg
adc
imul
dec
jno
movsb
ror
cmp
or
lahf
insl
rcrl
hlt
js
mov
cmp
mov
shlb
add
jmp
cmp
ret
insb
mov
ret
sbb
repnz
or
mov
mov
xor
daa
aas
mov
push
xor
jl
inc
mov
jns
sbb
lods
inc
out
popf
jo
fcomps
xor
xchg
adc
enter
mov
jne
mov
xchg
sub
push
xor
sbb
sub
mov
or
xor
dec
inc
pushf
pop
and
arpl
sbb
or
pusha
popa
pop
sbb
inc
or
sub
int
jnp
inc
out
xchg
lahf
addb
loope
adc
xchg
fnstsw
pop
sub
mov
mov
bound
lret
push
add
push
push
stc
push
mov
divl
jne
mov
out
mov
and
push
hlt
mov
pop
jbe
xchg
push
or
dec
add
jnp
cli
lock
adc
and
rcrb
loopne
push
jnp
xor
imul
ret
pop
jl
push
xlat
dec
ffreep
cltd
add
mov
push
imul
mov
fwait
out
sbb
pusha
inc
cmp
jg
lahf
xor
and
xor
inc
mov
push
fdivrs
jno
fisubrl
sbb
out
cmp
or
cmp
pusha
or
sub
xchg
cmp
or
push
cmp
pop
push
cwtl
cmp
int3
jg
xchg
mov
iret
sbbb
jmp
xor
ret
inc
xlat
imul
pop
insl
maxps
pop
fbstp
add
ret
int3
scas
adc
dec
movsl
clc
xlat
sub
or
aad
sbb
loop
nop
popf
or
and
sti
add
dec
int3
ja
data16
dec
xlat
je
inc
ficoms
neg
daa
scas
push
mov
and
call
test
mov
mov
icebp
movsl
lods
jmp
cli
pop
cmp
adc
in
mov
push
lods
leave
int
pop
sbb
cli
sbb
stos
mov
cmc
fsubrl
std
inc
sub
aas
sahf
pop
stos
xchg
fstl
mov
sbb
cmp
xorl
cmc
mov
and
cmc
cwtl
xchg
repnz
adc
rcrl
call
sbb
imul
aaa
push
sub
pop
pop
dec
ficoml
jg
jecxz
pop
hlt
ds
jg
pop
or
sbbl
push
push
dec
xchg
shr
gs
movsb
daa
addr16
mov
adc
rcrb
push
stos
pushf
fmull
adc
repnz
lds
add
icebp
sbb
dec
jb
xchg
push
dec
or
call
int
push
pusha
imul
insb
arpl
sbb
push
jl
js
push
mov
jle
jo
xchg
fstpt
out
mov
push
lods
icebp
mov
mov
and
fisubs
xchg
sbb
cs
popl
fsubr
das
xchg
pop
sti
ss
xorl
adc
js
xor
inc
push
pop
jge
je
and
adc
enter
lcall
and
pop
xorb
jo
dec
dec
sub
dec
pop
das
loopne
pusha
sbbl
add
pushf
jg
pusha
xchg
and
jmp
repz
mov
dec
fs
or
jecxz
scas
pop
mov
ret
ret
mov
gs
cmp
push
and
mov
mov
not
dec
ds
or
jne
insl
test
push
lods
mov
sub
push
loopne
nop
or
cmp
mov
and
js
mul
enter
sub
or
sbb
leave
shrl
sbb
mov
jnp
in
call
ljmp
movsl
mov
or
mov
dec
pop
push
push
ror
push
fimull
test
mov
sbb
dec
loop
mov
push
xchg
int3
imul
xchg
inc
sub
jo
jl
sbb
insb
add
mov
jmp
sahf
sbb
push
ljmp
inc
dec
leave
insb
mov
cmp
sub
leave
inc
js
push
jge
xor
cmp
js
repz
add
cmpsb
and
sbb
inc
cs
stc
dec
repz
mov
mov
mov
fadds
mov
lods
movsb
sti
inc
and
xchg
jo
dec
inc
mov
shrb
jge
jl
cltd
sub
in
mov
movsb
pop
lods
lods
sarb
in
subb
in
or
mov
mov
cld
mov
jae
cltd
inc
and
sahf
xor
pop
jb
call
mov
jne
push
subb
bound
inc
xchg
pop
ljmp
mov
aad
sub
cmovo
dec
jb
pop
movsb
jnp
adc
adc
jl
and
push
insl
popa
jg
mov
iret
adc
scas
mov
aam
in
leave
cmp
xor
fs
cli
rcll
in
aas
xchg
subb
aas
pop
imul
add
pop
cmp
arpl
aas
push
pop
popa
xchg
pop
add
or
dec
insl
ficoms
fldenv
dec
sub
cmpl
mov
xchg
jne
scas
mov
cmpl
push
ljmp
cmp
lret
add
push
mov
xor
pusha
push
test
insl
mov
sahf
sub
sub
cmp
mov
loop
cli
or
jp
sbb
sub
push
inc
mov
addr16
inc
cli
enter
mov
sbb
adc
pop
cmc
loope
int
adc
mov
fsubl
mov
in
mov
imul
sub
jmp
in
adc
ja
push
jno
ds
inc
fiaddl
mov
data16
imul
and
cmp
mov
sbb
es
jo
aaa
lret
inc
sbb
inc
nop
stos
fbld
into
mov
aaa
lock
sti
loop
es
jbe
dec
pop
lret
xchg
push
sbb
pop
lret
iret
fsubr
push
cltd
sbb
or
shlb
xlat
insb
dec
and
stc
not
stos
inc
fdivp
lcall
loopne
cmpsl
mov
mov
add
jge
in
mov
mov
sub
ret
mov
add
or
lods
pop
adc
jmp
cmp
add
jae
outsb
xor
movsb
ds
push
icebp
sbb
cwtl
cmp
mov
pop
jae
cltd
sub
je
inc
sbb
xor
lcall
out
aam
in
movsb
icebp
adc
mov
push
or
jae
inc
and
fs
lea
push
bnd
mov
sbb
and
sbb
xchg
pop
repz
push
lds
mov
int3
xor
adc
mov
adc
push
stos
ss
adc
xor
mov
push
ret
popf
mov
fcomp
jno
inc
sbb
inc
lret
and
xchg
push
add
push
pop
movsb
mov
mov
jl
es
repnz
inc
ficompl
movsb
add
mov
icebp
sub
mov
inc
fwait
add
movsl
mov
out
je
cmpsb
pop
dec
aad
cmp
sti
or
jecxz
orb
and
movsb
mov
fsin
add
push
push
in
adc
test
iret
mov
adc
ja
dec
out
pop
fsubs
adc
mov
adc
push
in
aas
insl
gs
fcompl
inc
aam
sbbb
or
js
sbb
sub
js
stos
pop
and
push
imul
xchg
clc
push
lods
mov
pop
fisubl
cmpsl
adc
loop
mov
pop
add
inc
inc
adc
mov
pop
idiv
iret
pop
mov
je
cmc
cmc
int3
xchg
es
shll
cmp
das
arpl
cmp
fwait
add
movsb
int3
xchg
in
std
incl
int
stos
int3
inc
push
fcoml
outsl
loopne
sbb
xchg
push
xchg
cmp
call
xor
sub
rcrl
inc
sub
aad
adc
scas
lret
es
dec
sub
inc
xchg
mov
icebp
fldl
cmp
add
mov
adc
das
sbb
push
push
sbb
pushf
jb
mov
push
aam
subb
pop
test
xchg
sbb
mov
lock
or
repnz
aad
or
fildl
jb
cmp
pushf
rorl
cld
nop
xchg
xchg
mov
stos
sub
jae
pushf
mov
jmp
and
sahf
push
jae
jl
arpl
xchg
divl
mov
int
adc
movsb
mov
jbe
scas
add
dec
movsb
aas
mov
push
in
repz
daa
int3
pushf
jg
mov
aad
aaa
add
cltd
pop
repnz
dec
xchg
fwait
mov
xor
pop
push
sub
or
push
jge
mov
in
das
or
and
jnp
fisubrl
rcrl
ds
push
ret
sbb
sbb
arpl
pop
mov
cwtl
inc
jle
lock
mov
mov
das
shrl
jmp
jne
rclb
mov
jno
mov
pop
into
mov
xchg
and
xchg
sbb
lret
rclb
dec
dec
in
xchg
jl
push
daa
mov
popf
std
inc
shl
jno
daa
adc
dec
cwtl
mov
leave
fidivrl
arpl
push
dec
push
sub
inc
arpl
cmp
popa
sub
in
sarb
repnz
sub
call
or
cmp
test
mov
inc
fisttps
or
orb
mov
pop
mov
stos
outsl
ret
lods
xorb
inc
into
inc
ret
lods
sti
int
sub
cs
pop
shrl
hlt
addb
sub
je
and
sahf
aaa
cmc
xchg
mov
sub
pushf
aad
jle
jmp
int3
arpl
jo
mov
pop
inc
fistl
repz
cmp
jnp
sbb
cli
adc
data16
arpl
inc
stos
pop
fnsave
inc
sbb
push
push
out
push
negl
sbb
int3
pop
mov
data16
mov
out
sub
sub
xchg
mov
sub
adc
int3
sbb
shrl
jo
popf
test
xor
cmpsl
fs
mov
adc
hlt
out
stos
jmp
cmp
fwait
mov
inc
fldlg2
roll
pop
test
test
and
mov
xor
bound
push
imul
nop
stos
inc
das
scas
xchg
push
insb
inc
int3
ja
dec
in
call
xor
or
insb
popf
xor
mov
mov
test
sbb
and
test
sahf
icebp
push
lret
pop
mov
jns
jle
mov
insl
lret
sub
inc
cld
fwait
stc
or
je
iret
test
sbb
movaps
mov
std
jo
pop
nop
push
jl
call
addl
dec
aad
xchg
or
sub
push
jne
test
ljmp
pop
icebp
mov
mov
clc
test
mov
ret
xor
test
pop
sbb
cmp
xlat
mov
or
mov
movsb
xchg
sub
add
sub
jp
xlat
pop
imul
pusha
jl
enter
sub
lock
lret
in
pop
repnz
inc
ljmp
jmp
dec
test
lahf
jecxz
sub
mov
loop
fidivs
cmp
scas
mov
mov
jle
ljmp
inc
pop
call
add
inc
fidivrs
iret
cmpl
and
xor
mov
out
roll
iret
aad
fidivrs
mov
gs
sub
lods
pop
ds
into
and
insb
shrl
mov
xchg
cs
repnz
mov
adc
rcl
add
sub
sahf
inc
mov
lret
or
inc
lods
jg
mov
fisttps
mov
mov
mov
cmp
addr16
pop
cltd
js
mov
push
cmc
addl
add
mov
loopne
inc
xlat
loope
das
jle
inc
movsl
cmp
dec
ret
testb
xchg
fwait
or
inc
fcomps
out
mov
pop
mov
loop
mov
push
jle
fldl2t
inc
sub
addl
cmp
xor
sbb
mov
clc
filds
ja
xor
test
mov
fadds
push
in
je
inc
lcall
bound
jmp
and
adc
xchg
or
aam
cmp
cwtl
push
dec
sbb
rclb
arpl
fdivrl
lret
cmpsl
lods
xchg
and
loopne
ficompl
mov
add
mov
xchg
pop
sbb
fs
pop
js
fwait
add
aad
sbb
arpl
ljmp
mov
out
sbb
outsb
in
daa
cmp
dec
loopne
pop
adc
gs
sarb
xchg
fidivrs
mov
push
loopne
add
push
mov
xor
iret
shlb
outsl
icebp
scas
jno
or
fildll
inc
push
inc
pop
xchg
jecxz
inc
enter
jb
das
addr16
pop
fistl
leave
xor
mov
or
pop
push
push
adc
add
jg
pop
lds
mov
inc
mov
cmpsb
call
aas
mov
bound
pop
sbb
push
in
adc
jae
jmp
mov
mov
es
rorb
inc
lds
clc
mov
fistps
xor
sub
pop
fadd
insl
data16
xchg
out
inc
pop
cli
mov
pop
or
and
fwait
rclb
dec
idivb
push
sub
insl
ret
sbb
ds
ss
mov
sub
cmpsl
mov
mov
inc
mov
ficoms
add
inc
add
xor
test
push
jae
mov
daa
jnp
test
jns
test
pop
and
sub
pop
imul
fnstcw
lcall
push
pop
fisttps
loopne
das
das
js
hlt
aaa
pop
sub
xchg
mov
push
xor
int3
cmp
test
std
and
jp
aaa
pop
sbbb
pop
daa
stos
dec
pusha
les
loop
xchg
adc
call
mov
in
xchg
inc
adc
pop
iret
sub
push
mov
lret
inc
fcomps
xor
dec
pop
or
add
nop
dec
or
mov
jo
out
push
adc
dec
xchg
xor
mov
mov
mov
inc
jns
cs
movsb
aaa
push
sahf
loope
jbe
fcomps
mov
mov
jle
test
pop
das
jbe
mov
pop
cmp
dec
mov
stc
aad
sysexit
ret
xor
push
movsl
push
sub
cli
mov
jbe
xor
mov
dec
push
and
cmp
push
aam
cli
cmp
repz
fldcw
push
pop
lds
dec
imulb
sbb
fistl
lcall
lea
xor
push
outsl
mov
sahf
and
inc
sub
jno
inc
daa
inc
push
rcrb
push
fs
sbb
mov
fstpt
push
pop
cmp
or
dec
loop
mov
imul
rorb
outsb
sbb
cmp
push
xor
insb
ret
or
mov
sbb
adc
and
lcall
in
jg
xchg
dec
push
mov
loope
out
add
filds
inc
xlat
pop
sti
rorb
jns
xor
loope
int3
arpl
lcall
ljmp
mov
xorb
mov
stos
xchg
pop
mov
mov
sub
inc
pop
out
pusha
pop
xlat
xlat
test
or
inc
or
push
adc
out
pop
sti
int3
jo
push
fucomip
jns
fisttps
xor
popa
outsl
fbstp
lods
data16
cmpsb
mov
jmp
aas
adc
inc
inc
pusha
test
mov
fldenv
data16
fisttps
in
dec
jmp
xchg
or
adc
jnp
push
inc
jno
dec
mov
cli
xor
mov
mov
imul
or
adcb
les
mov
push
xlat
bound
pop
cmc
or
sahf
xchg
and
repz
mov
add
push
sbb
xor
push
montmul
cmpsb
inc
push
rol
add
mov
and
xchg
in
mov
mov
add
imul
fbld
adc
xchg
test
lahf
push
sub
inc
lcall
insb
pop
ja
cwtl
xchg
sbb
fmuls
adc
sbb
add
and
pop
in
xchg
popa
inc
bound
push
sbbb
lock
push
xlat
mov
call
cmp
push
js
push
sub
jne
hlt
into
sbb
incb
stos
mov
mov
test
mov
adc
mov
push
bnd
sti
stos
mov
in
jl
xor
jle
push
adc
cwtl
cli
add
adc
subl
mov
sbb
dec
pop
imul
stos
test
dec
lods
jbe
inc
mov
out
ret
popf
push
jbe
cmp
and
jbe
mov
std
nop
insl
lret
sbb
test
xor
sbb
mov
shl
clc
adc
ds
pop
call
movsb
jo
fnstcw
icebp
lret
push
dec
test
mov
mov
iret
push
xor
inc
add
xchg
mov
test
push
xlat
in
mov
in
push
dec
mov
sbb
sub
aas
clc
push
jge
jp
mov
data16
jp
push
ret
pusha
add
or
rcrb
rol
xchg
in
dec
jecxz
hlt
mov
pop
jnp
repnz
in
mov
dec
jecxz
mov
lret
dec
pop
sub
and
std
test
dec
in
fisubs
in
xchg
jnp,pt
repnz
mov
stos
jg
pushf
xor
iret
gs
mov
mov
adc
push
jno
sub
mov
mov
lret
es
pusha
and
mov
jl
das
fiadds
push
dec
add
push
xchg
jmp
hlt
pushf
mov
sbb
popf
or
sbb
outsl
insb
adcl
cld
out
aad
shl
outsb
jge
xchg
mov
aad
push
inc
shll
inc
xchg
pop
movsl
dec
xlat
or
jnp
ja
xor
sub
mov
and
inc
insl
cmp
cli
imul
mov
jmp
xchg
xlat
rep
lds
jle
js
int
pop
adc
xchg
cmpl
mov
shrb
fisubrl
decl
stc
jle
inc
push
dec
pop
cmp
and
scas
stos
leave
ja
sbb
inc
xchg
adc
xor
jbe
imul
fstpl
inc
loop
out
mov
hlt
inc
xchg
lds
ret
jbe
or
fisubs
adc
pop
incl
cwtl
or
stos
xchg
icebp
and
adc
mov
outsl
ss
enter
xlat
sbb
popa
std
sarl
mov
add
std
cmp
sub
add
mov
cmc
out
fisubrl
adc
std
sub
imul
xchg
cmpsb
adc
test
xchg
jnp
adc
or
add
outsl
push
in
dec
stc
add
vsubsd
imul
push
or
sbb
daa
sub
in
ret
test
das
stos
xchg
add
xchg
cmc
mov
sub
cmp
add
adc
in
inc
inc
shlb
pusha
test
jecxz
mov
fs
xchg
outsl
scas
push
ret
sbb
repnz
mov
adc
fildl
in
cs
and
in
leave
adc
or
fwait
cmp
push
insb
sti
push
lea
fildll
fwait
inc
push
mov
inc
mov
icebp
ds
xorb
xor
roll
jg
sbb
pusha
lock
sbb
adc
dec
rorl
into
jle
xchg
push
out
jnp
ljmp
mov
imulb
mov
mov
sub
pop
adc
add
in
mov
cwtl
ja
xor
stos
std
jo
fnsave
mov
stos
fs
mov
jmp
test
jmp
sbb
inc
mov
xchg
jp
repnz
es
sub
popa
jns
xor
cmp
add
les
sbb
jns
shrl
addps
jbe
sbb
pop
mov
inc
imul
xor
sbb
sbb
inc
dec
mov
xchg
or
mov
es
cmp
jb
out
push
sbb
out
lea
push
rcl
das
mov
and
and
push
andl
idivb
popa
xchg
lods
repz
pop
sti
fwait
lods
push
idivl
les
mov
movsl
mov
xchg
mov
sub
lock
jbe
adc
rcll
or
test
out
sub
inc
ret
outsb
data16
aad
int
insb
ret
sub
pop
jecxz
hlt
or
loop
dec
test
test
or
aam
int3
aam
inc
pop
fwait
push
add
je
lea
hlt
and
push
pushf
ret
jne
add
and
jne
mov
je
shrb
fs
sbb
cli
hlt
cmp
scas
or
lds
push
mov
xchg
sbb
popf
divl
lea
add
sbb
and
push
xor
mov
sub
imul
ficompl
out
mov
mov
repz
std
pop
pop
jb
cs
pusha
mov
adcb
jge
scas
push
and
xchg
fs
add
mov
xchg
jmp
pop
jno
pop
pop
mov
pop
mov
inc
cmp
into
or
jns
and
in
ds
out
gs
mov
push
ja
cmpsb
mov
adc
pop
aam
out
clc
mov
test
call
sub
call
mov
insb
jb
les
mov
cmp
xchg
jmp
or
out
inc
fbld
dec
jae
inc
pop
aaa
push
dec
and
push
and
push
push
js
lods
cmp
mov
jp
test
cmp
pop
jmp
mov
fnstsw
and
loope
mov
nop
daa
int
pop
cs
inc
mov
sarl
or
shrb
outsb
mov
push
insl
lods
jl
nop
xor
inc
ficomps
inc
fsubs
jecxz
xchg
sbb
loop
insl
repnz
sub
jbe
xchg
cmpsl
push
aaa
aam
dec
push
cli
hlt
jbe
push
xor
xchg
popa
test
pop
inc
jns
ljmp
sub
sbb
pop
mov
stc
or
xor
jbe
inc
test
lods
cmp
mov
shlb
push
addr16
jmp
shll
movsb
xchg
push
xchg
xchg
push
jae
out
or
sbb
xor
pop
cmp
out
and
jecxz
pushf
hlt
int3
leave
pop
test
push
jmp
jmp
fcmovne
sub
cmc
dec
lock
jb
mov
aaa
stc
dec
lods
ret
popa
sbb
js
lds
push
xchg
xchg
jmp
dec
mov
sbb
and
clc
mov
xchg
xor
por
cmp
cmp
mov
insb
loope
cmc
inc
fsubrl
xlat
outsb
push
int3
arpl
add
sbb
jb
popa
jmp
push
sbb
pop
flds
incb
fs
mov
stc
xor
dec
add
pop
xchg
and
jno
ss
adc
xor
sub
mov
jmp
jmp
jo
into
lret
hlt
push
add
out
jne
dec
loop
mov
imul
push
test
mov
icebp
pushf
sub
or
inc
shll
rcrl
add
int
and
int3
xchg
enter
in
lcall
gs
cwtl
jb
in
mov
daa
jmp
jno
sbbl
in
stc
add
adcl
movzbl
dec
ret
aaa
mov
push
mov
mov
scas
xlat
outsl
fisubrl
pop
adc
addb
xorl
fdivl
sub
dec
jnp
fcomp
xchg
xchg
cli
insb
xlat
emms
xchg
xor
out
cmp
jg
mov
aaa
jecxz
jne
inc
mov
pushf
mov
shrl
add
mov
loop
sub
lret
dec
sub
jecxz
push
jo
call
clc
jno
xchg
adc
adc
push
xchg
pop
movsb
mov
sub
mov
mov
shl
push
cmp
fwait
jbe
push
test
sub
jb
pop
lret
out
jmp
inc
push
fbstp
or
lods
cmp
add
sahf
fadds
lcall
clc
pop
stos
jnp
mov
fcomip
clc
push
adc
jle
stos
sub
sub
pop
fimull
adc
mov
and
or
mov
dec
arpl
jle
push
mov
mov
rcrl
cmc
inc
fidivrl
mov
inc
out
add
xor
xor
add
scas
jbe
test
test
cmp
sbb
and
mov
scas
mov
lret
shlb
xchg
stc
jnp
inc
test
decb
mov
out
xchg
mov
xlat
mov
cmc
insl
dec
or
jle
jl
mov
sub
jp
pop
jbe
adc
or
pop
xor
gs
arpl
or
rorb
mov
dec
push
dec
adc
sub
popl
jecxz
jmp
lock
cwtl
idivl
cmp
mov
jle
hlt
ja
movsb
pop
dec
jl
aam
mov
out
iret
rcr
and
cli
scas
popa
andb
sbbb
add
xor
mov
mov
scas
test
dec
push
dec
sbb
or
movsl
pop
mov
fsubr
sbb
sub
cmpb
ror
pop
jo
loopne
push
push
lahf
rolb
repz
movsb
jecxz
ss
sarl
xor
jnp
test
cmp
adc
ds
bound
push
popf
xor
pushl
icebp
test
ja
xorl
xchg
cmpsb
push
push
sub
enter
push
stc
mov
sbb
add
mov
inc
leave
fs
sub
shl
xchg
inc
out
stc
stos
rorb
pop
jae
jnp
jp
cmp
or
cltd
sub
adc
inc
or
pop
and
in
add
mov
mov
cmp
jnp
or
test
dec
lods
daa
or
mov
arpl
xchg
or
daa
or
xor
aam
call
sub
loop
cmc
lcall
movsb
and
test
das
shrb
cmp
movsb
sub
loop
sub
fmull
addr16
or
jge
fdivs
pop
mov
inc
cli
mov
out
in
xchg
ds
sbb
lods
in
mov
dec
mov
sbb
sub
add
lret
js
lret
pop
lcall
mov
sbb
std
push
out
xchg
mov
mov
push
pushf
dec
mov
fwait
sub
ret
mov
pop
cmp
cwtl
jnp
push
xor
xchg
cmpsl
sbb
cwtl
dec
mov
int3
in
lcall
data16
movsl
outsb
push
or
xchg
cmpl
lret
xlat
cmp
loope
sbbb
adc
dec
mov
push
outsl
push
mov
mov
leave
mov
push
imul
xlat
push
jg
mov
push
cld
sub
out
sub
out
loop
xor
std
mov
leave
sbb
xchg
jmp
adc
dec
pop
lods
mov
sbb
inc
mov
jae
loop
push
adc
add
adc
xchg
outsl
outsb
cmpb
add
sahf
lods
rolb
mov
add
jp
cld
ljmp
test
call
fsubs
insl
jb
cld
xchg
adc
je
and
and
stos
test
incb
sahf
push
sub
adc
fildl
and
lret
das
mov
sahf
mov
jmp
pushf
ret
scas
add
inc
dec
loopne
fcoms
mov
fisubs
je
aad
xchg
adcl
cmp
jnp
arpl
and
leave
jge
aas
imul
std
cmp
leave
cmp
xor
mov
push
push
lret
jmp
les
xlat
adc
pop
or
and
add
scas
jns
push
enter
push
inc
out
mov
dec
loopne
ret
jns
repnz
cmp
pop
mov
loopne
pop
idivb
rcll
fstpt
pop
or
movsl
mov
mov
bndstx
call
mov
dec
test
pop
pop
mov
pop
scas
jns
loop
mov
cltd
pop
enter
imul
in
mov
sbb
cmp
jmp
loop
jbe
movsl
adc
arpl
mov
or
outsl
push
sub
dec
adc
negb
mov
ret
sbb
in
jle
push
daa
add
mov
std
and
jbe
div
jecxz
adc
mov
jb,pn
xchg
sub
add
jge
pop
dec
aad
sub
rorl
jns
pop
mov
arpl
orl
xchg
jns
out
sbb
xlat
scas
xlat
das
add
mov
mov
adc
or
cli
push
sub
push
mov
nop
outsl
xor
mov
mov
mov
xor
xchg
xor
stos
push
or
stc
aas
push
push
xlat
out
movsb
ds
nop
pop
hlt
adc
mov
jmp
add
or
mov
mov
imul
mov
jge
sbb
push
xor
and
and
loopne
rclb
leave
jmp
mov
in
mov
pop
rep
inc
sub
cmp
inc
cmpsb
or
mov
pop
push
daa
cmp
mov
push
call
or
scas
std
in
sbb
jae
mov
and
mov
mov
dec
pop
cmc
xchg
iret
push
dec
inc
dec
cmp
mov
xlat
aam
nop
cwtl
repz
mov
leave
push
ljmp
mov
dec
sub
sahf
push
pop
in
nop
js
imul
inc
sti
arpl
shrl
mov
cmpsb
out
out
ja
test
cmp
testl
ret
arpl
lods
sbb
xchg
pop
or
xchg
sub
outsb
pop
adc
lret
andl
and
rep
cli
inc
test
xlat
stos
pushf
jae
stc
mov
inc
mov
cwtl
sub
xlat
jo
sub
les
add
or
out
nop
fildl
push
cmpsl
hlt
imul
sub
mov
cmp
cld
push
sbb
lea
xor
push
out
sub
inc
out
jns
mov
repz
gs
mov
fdivrl
leave
push
sub
popa
movsl
ds
insb
test
pop
mov
push
dec
mov
jbe
add
out
mov
pop
dec
mov
pop
mov
cmp
ret
jl
cmpsb
dec
imul
in
lret
mov
popf
imul
out
mulb
cld
in
dec
sbb
xor
sub
sbb
insl
shll
clc
or
in
sbbl
arpl
loop
in
imul
aad
mov
adc
lahf
sahf
cli
std
mov
mov
push
fdivrs
dec
pop
sub
mov
rol
jmp
daa
push
scas
adc
xchg
pushf
jg
jmp
inc
add
add
sbb
cmp
pop
mov
lret
push
lods
jae
out
jg
inc
popf
clc
cmp
fadds
ja
ja
pop
rcrb
cld
loopne
das
cs
lea
pop
stc
cmp
sub
sub
pop
pop
sub
sub
inc
aam
aas
fidivl
test
cmc
loope
data16
repnz
mov
test
and
mov
leavew
int
pop
sub
cwtl
ja
aad
mov
or
fiaddl
jg
mov
add
gs
rcrb
mov
idivl
xchg
jp
inc
xor
pushl
fidivs
or
pop
jge
jecxz
sahf
pop
fmul
adc
push
mov
mov
pop
add
ret
fimuls
dec
dec
xchg
lds
jno
jmp
xchg
call
or
and
fs
std
and
xor
jne
cli
jns
xchg
out
jge
scas
or
add
test
imul
sti
mov
add
xchg
test
adc
fldt
pop
insl
mov
cmp
sbb
push
add
cmp
adc
dec
jae
mov
out
pop
dec
pop
sbb
xchg
mov
jle
pop
jl
test
and
lea
inc
cli
jne
cwtl
stos
inc
lret
jecxz
scas
or
and
cmpsb
in
cld
rcrb
xchg
mov
mov
iret
adc
pmuludq
fisubs
push
into
pop
dec
add
push
adc
cvtpi2ps
xor
dec
xchg
push
sar
shl
adc
cmp
fisttpll
mov
icebp
or
pop
cli
xchg
mov
jno
add
sbb
ret
ds
jo
insb
xchg
push
add
sbb
push
shl
pop
nop
add
xor
mov
push
out
arpl
outsb
adc
cmc
pcmpgtd
shrb
and
imul
lock
or
imul
loopne
push
in
decb
inc
push
lods
nop
inc
pushf
in
ret
jnp
inc
lret
sbb
mov
pop
clc
add
or
adc
ja
cmpsb
xor
iret
or
cs
pop
mov
test
mov
notb
adc
lods
dec
dec
pop
lock
movb
or
mov
cmp
pop
in
aas
aas
mov
add
and
push
jecxz
mov
cmp
cmpsb
xchg
sub
enter
push
aad
or
into
faddl
jae
faddl
ljmp
push
lcall
push
call
fiadds
xchg
sub
mov
sub
push
push
mov
push
aam
jnp
subb
adc
xchg
inc
push
pop
mov
mov
mov
jo
mov
mov
mov
int3
imul
inc
insl
adc
jl
test
sbb
cmp
stc
stos
jp
addr16
dec
push
iret
repnz
or
or
pusha
rcrb
daa
lahf
mov
jne
leave
loope
push
test
dec
pop
xlat
and
jbe
inc
sbb
stos
stos
add
sub
mov
shll
leave
shr
cli
sarb
add
mov
test
and
enter
push
jmp
pop
add
dec
pusha
jb
loop
pop
xchg
out
sahf
sub
dec
rolb
jp
dec
mulb
jae
or
loop,pn
scas
and
nop
mov
inc
cmp
sbb
dec
add
mov
lret
icebp
aas
mov
xor
or
cmp
fisubrs
pop
jbe
jmp
mov
sub
cmpsl
and
js
dec
mov
fstpt
or
cmc
cltd
and
data16
sbb
leave
pusha
fsubr
pop
rcrl
repnz
pop
and
mov
xchg
adc
sbb
test
rcr
shrl
test
lret
sub
test
mov
shlb
add
test
mov
in
jnp
pop
jae
push
lcall
sbb
lods
je
insb
rcll
xor
mov
mov
or
jl
subl
sub
outsb
add
int3
mov
cmp
add
sub
pop
test
into
pop
cmovnp
mov
loop
das
into
add
lock
xchg
pop
cmp
and
mov
lods
aad
and
into
stc
push
jns
ss
mov
push
push
aam
test
icebp
mov
adc
inc
rorl
nop
mov
dec
jno
or
mov
daa
std
xchg
stos
adc
psubw
lods
push
fnstsw
pop
dec
adc
clc
mov
xchg
jecxz
cltd
push
iret
mov
fmuls
cmpsb
std
dec
or
dec
push
xor
aam
cmp
cmp
xlat
pop
dec
mov
adc
jo
stos
fisubs
cs
popf
notl
fs
mov
sub
das
cmp
dec
cld
leave
jp
push
fisttpl
nop
lret
xchg
adc
adc
sbb
in
inc
mov
jae
mov
movsb
pushf
les
js
fwait
adc
loope
sub
addb
ljmp
dec
cmp
and
pusha
stos
or
insl
sbb
and
shl
testb
inc
sub
add
fsts
jae
fwait
gs
pop
scas
cmc
add
mov
add
add
pop
aas
add
pop
jg
fistps
and
repnz
bound
jbe
jns
xor
test
inc
adc
mov
icebp
aam
and
negl
jle
jle
xchg
xor
mov
ds
sbb
das
add
push
xchg
mov
das
add
testb
jecxz
sub
imul
jnp
insb
popf
shrl
xor
popf
jg
pushf
mov
dec
in
lds
push
mov
push
mov
inc
ja
jns
cmp
pop
std
mov
mov
icebp
stos
in
and
push
out
int3
les
inc
lret
xchg
scas
ja
nop
daa
push
xchg
push
ss
into
mov
mov
push
loop
insl
xor
jg
sbb
cmp
jg
ficoms
jge
and
fsubl
dec
jge
dec
scas
jo
pop
stc
popa
andl
sub
movsl
out
inc
pop
loope
mov
not
outsb
sub
outsl
jns
enter
push
lea
mov
pop
fisubrs
xchg
push
mov
mov
adc
sub
or
mov
imul
loope
push
in
cltd
data16
cld
xchg
push
jne
sahf
fwait
mov
push
in
mov
int3
jle
fwait
adc
inc
subl
push
gs
add
and
add
mov
sub
loope
ret
inc
xor
pop
add
mov
xor
fnsave
pusha
mov
pop
vpsubb
dec
add
insl
loop
es
inc
fisubrl
ss
inc
push
sub
add
push
dec
and
negb
ret
std
jp
cmp
mov
imul
mov
das
cmp
xor
test
or
ret
and
push
or
sbb
pop
mov
add
aam
dec
mov
cmp
pop
imul
out
pop
sbb
sarl
push
loop
mov
mov
cmp
sbb
sti
pop
bound
and
adc
pop
xchg
mov
mov
test
mov
popf
mov
or
add
adc
in
scas
out
mov
test
mov
ljmp
pushf
nop
cmp
fstl
ss
je
faddp
fcmovb
arpl
pop
test
lea
sub
jne
cmpsb
xchg
addb
mov
fldcw
add
xchg
xor
push
sbb
xor
cmp
cmp
repnz
sarl
cltd
cmp
enter
movsl
inc
adc
jno
arpl
icebp
xor
jno
xchg
push
cwtl
clc
psubsb
lea
cmp
adc
in
pop
scas
retw
xrelease
repnz
paddusw
in
into
ja
imul
add
sahf
inc
cmp
movsl
mov
dec
in
dec
xor
mov
insl
frstor
lret
mov
push
mov
stc
jo
mov
loopne
aam
imul
mov
push
mov
jp
subb
fisubl
add
jnp
cmpsl
jmp
xor
mov
roll
in
add
stos
xor
decb
shlb
xchg
sbb
adc
mov
jl
cli
lcall
inc
cli
addb
jmp
aam
addr16
jne
dec
push
and
fsubl
fldenv
or
mov
and
imulb
adc
inc
data16
data16
mov
jg
add
nop
jecxz
dec
push
int3
pop
xor
sub
and
filds
cmp
xor
pushf
jge
jle
lds
and
dec
js
adcl
dec
rorl
xchg
sub
sti
xchg
data16
jns
pop
popa
ss
push
cmp
add
xor
and
push
fdivrs
movsb
mov
cmp
lret
adc
push
inc
push
mov
or
pop
xchg
add
jecxz
cmp
pop
push
stc
stos
xchg
mov
mov
xchg
mov
ja
mov
push
jp
das
inc
add
insl
push
sub
ret
ret
xchg
pop
fst
jbe
rcrb
insb
fidivs
add
xor
lcall
xchg
dec
push
xchg
dec
mov
sbb
push
fcomp
out
jb,pt
sahf
repnz
test
cmp
push
stc
jl
fs
data16
fwait
sub
adc
dec
popf
jg
iret
into
jl
iret
mov
inc
push
or
inc
cld
pop
out
movsb
jg
sub
repz
incb
adc
push
pop
lds
mov
jb
jle
xchg
pop
mov
shl
adc
mov
gs
adc
sub
jnp
push
out
xor
cld
imul
fcompl
jle
fcoms
mov
jnp
mov
xchg
in
push
mov
mov
sbb
and
ja
imul
subb
jp
xchg
les
mov
push
dec
mov
mov
push
shl
adcb
or
xor
cmpsl
js
mov
movb
sarl
lahf
ds
rcrl
xor
xchg
mov
xchg
and
popf
hlt
loopne
dec
aad
sbb
inc
dec
mov
add
jg
jecxz
ret
outsl
sahf
jbe
sti
xchg
stos
jg
adc
testb
pop
mov
cli
aad
jge
or
pusha
mov
push
pusha
daa
outsb
mov
fmull
hlt
or
das
jae
push
lds
dec
testl
fwait
dec
mov
lock
xchg
pusha
mov
fdivs
aam
push
push
sub
fdiv
sub
cmp
mov
andl
leave
or
xchg
sub
outsl
pop
loop
out
jnp
insl
lods
pop
rcrb
mov
lods
outsb
xor
in
push
or
xchg
xchg
jbe
jmp
pop
jno
into
mov
sarl
cs
jp
add
mov
push
mov
pop
mov
subl
dec
push
out
cmp
jecxz
push
adc
jb
mov
and
ret
adc
or
push
sub
fbstp
stos
push
hlt
sbb
cmc
xor
pop
pop
jae
sbb
jnp
loope
hlt
dec
adc
adc
mov
jbe
adc
xor
push
ljmp
ljmp
dec
or
ficoms
lahf
cmpsb
imul
test
mov
add
iret
test
jnp
iret
loop
mov
repnz
push
jmp
sub
xchg
ds
jmp
aaa
test
imul
inc
stos
sbb
rorb
cltd
mov
pop
dec
ret
mov
adc
sbb
iret
sbb
cmp
imul
int
jl
xchg
daa
jbe
mov
cmp
inc
dec
sbb
std
sub
inc
xlat
pop
stos
mov
jg
push
scas
call
pop
xor
aad
dec
dec
add
mov
leave
or
orb
enter
push
xor
dec
sub
lret
popf
test
fs
push
jne
jbe
xchg
test
push
loopne
aam
inc
sub
scas
imul
aaa
cmc
inc
dec
loopne
push
adc
inc
out
lds
push
sbb
rclb
scas
mov
sbb
sub
add
jge
fisubrl
cs
insl
adc
pop
shll
xlat
jl
outsl
jle
push
stc
or
mov
ss
insl
ja
inc
push
xchg
cwtl
hlt
dec
mov
pop
sarb
fdivl
ljmp
repnz
loope
sub
jge
dec
xchg
dec
xor
sbb
shrb
push
fwait
dec
aam
inc
aaa
mov
inc
in
das
shrb
fcmove
loopne
mov
ret
lds
or
out
fistl
cli
cmp
dec
filds
mov
insl
inc
addl
into
sub
addb
jae
mov
ficoms
or
sub
mov
cmpsl
ss
outsl
ljmp
rcr
call
jecxz
xchg
or
push
ja
xor
mov
pushf
xor
lea
test
leave
lret
out
xor
sti
jno
cli
pop
stos
inc
mov
pop
into
outsb
jmp
adc
cmp
loope
jecxz
xor
testb
mov
enter
out
cltd
adc
mov
loope
cmp
in
jg
mov
push
popf
fisttps
out
mov
cmpsb
xchg
dec
fidivrs
sbb
adc
push
lock
push
sti
dec
bound
mov
xchg
jp
filds
jp
and
popl
loop
inc
rclb
div
jmp
mov
jnp
jne
lods
push
inc
sub
lea
lods
mov
inc
fadds
mov
adc
cmpb
mov
jmp
ret
cli
cmp
pop
add
lea
data16
push
je
testb
fnstcw
iret
shr
mov
insl
jge
cwtl
mov
dec
inc
mov
sub
sarl
clc
and
sbb
inc
ffree
sbb
and
mov
push
lcall
imul
stos
xor
rcrb
aam
ljmp
cmp
mov
shr
in
stos
in
fdivs
xor
in
sub
sub
in
mov
pop
aad
pusha
inc
mov
test
inc
out
cmpxchg8b
lret
fmuls
adc
inc
add
mov
mov
xor
sub
push
inc
int
mov
cmp
push
push
or
mov
pop
ds
jno
mov
sbb
cmpsl
flds
mov
jle
fnstsw
fisubrl
icebp
inc
js
sub
mov
xchg
mul
xchg
out
xchg
or
mov
add
and
push
scas
test
xchg
add
lret
cmpb
and
or
lods
and
andb
cli
cmp
fistpl
ret
lret
rcll
inc
test
enter
mov
inc
push
xorl
add
mov
fnstsw
lds
imul
pop
mov
mov
insb
inc
xor
mov
in
push
loop
jecxz
inc
push
sbb
sub
cmp
or
and
je
xor
push
test
ja
add
or
fldcw
push
inc
jnp
dec
test
inc
js
cmp
pusha
pop
jg
mov
mul
out
fisttpl
mov
mov
imul
fcoms
pop
call
pop
in
mov
lret
mov
ds
fs
int
loope
jmp
nop
xor
xchg
adc
sub
repz
test
loop
xor
sub
pop
fnstcw
jle
clc
mov
out
in
fnsave
xor
adc
sbbl
lods
ljmp
ret
lods
xor
jae
xchg
or
mov
sub
pop
inc
out
mov
fadd
int
jp
xlat
daa
mov
mov
fidivs
int
jle
pop
orb
dec
mov
xor
nop
cs
cmp
std
cmp
mov
xchg
jo
xorb
cmp
adc
sbb
jae
lcall
inc
mov
cmp
sbb
fiadds
inc
test
inc
pushf
xor
or
insl
addr16
imul
mov
inc
fs
xchg
mov
push
xchg
sbb
jecxz,pt
pop
cltd
aam
jno
mov
test
sbb
cmp
cs
jbe
les
shl
adc
lea
xor
xor
or
mov
bound
fmul
and
jae
sub
mov
lret
sub
sar
loop
ja
pop
xor
pop
push
in
cmpsb
pop
imull
je
jl
sub
aad
ficoml
dec
cmp
ret
fdivrl
rol
push
lcall
mov
aam
mull
inc
sub
repnz
dec
push
mov
jns
pushl
mov
mov
decl
fucomp
or
insb
rcrl
data16
mov
insl
mov
dec
cwtl
mov
sbb
movb
aaa
out
bound
and
sbbb
or
push
out
xchg
int
jecxz
repnz
leave
test
lret
inc
xchg
arpl
aam
inc
outsb
jl
insl
pop
cmpsb
jbe
mov
jge
dec
and
adc
mov
ss
dec
and
and
mov
stos
cmpsl
daa
xor
jb
data16
dec
inc
push
out
sbb
jb
cmp
mov
scas
xor
or
lret
mov
inc
loopne
mov
ljmp
fwait
pop
int3
and
negl
push
lahf
push
fcoml
ds
stos
push
fsts
fmull
out
cmp
xchg
jge
adc
push
rcrb
jp
jno
mov
xchg
stos
jbe
jo
dec
jnp
add
inc
nop
notb
int3
outsb
fwait
cmp
xchg
pushf
sti
xor
mov
fcoml
adc
sarl
into
ret
loopne
push
leave
pushf
lret
andb
xchg
and
xor
in
dec
mov
add
add
xor
fdivrp
push
mov
sbb
test
push
cltd
test
in
or
mov
or
xor
push
cli
and
mov
bound
jmp
in
das
cmpsb
xor
arpl
xchg
test
mov
repz
add
mov
sbb
sub
inc
mov
mov
mov
pop
rolb
lods
stos
ds
cld
and
out
jle
cmc
scas
fldt
and
add
out
loope
mov
shrl
pop
push
jbe
push
daa
mov
outsl
mov
cmp
add
or
aam
popf
mov
stos
mov
das
iret
icebp
or
fldcw
sub
pop
jle
jl
sbb
bound
or
push
jne
shlb
icebp
xchg
mov
imul
shlb
dec
imul
sahf
out
mov
or
clc
cmpsb
addr16
push
xor
pop
mov
notb
and
fcompl
dec
fsubrl
jbe
inc
jmp
or
clc
add
cmc
xchg
inc
icebp
shrb
in
into
popf
xchg
adc
sbb
jg
das
test
inc
push
call
sti
inc
inc
pop
in
lahf
mov
mov
jnp
ror
repz
jne
loope
xchg
imul
shlb
jne
push
xor
cmp
cli
xchg
pop
and
pop
aaa
sbb
fwait
loope
dec
movsb
mov
mov
int
mov
pushf
or
das
fwait
inc
mov
push
mov
sahf
cmp
imulb
cmc
jle
mov
lds
add
in
push
fdivs
xchg
fildll
je
xor
mov
loope
icebp
add
pop
and
aad
jne
test
stc
or
mov
sarl
addb
xor
outsb
push
cwtl
adc
sbb
lret
dec
insl
addb
add
pop
adc
frstor
clflush
push
pop
repnz
cmp
cli
pushf
cwtl
in
sbb
cmp
std
sarb
or
sbb
mov
cld
test
mov
push
adc
sti
push
mov
add
jecxz
repnz
sahf
mov
shrb
lods
ret
out
jecxz
mov
and
pop
xchg
enter
sub
push
dec
loopne
pusha
inc
push
inc
jecxz
xor
mov
sub
call
push
movsb
jp
dec
sbb
fwait
jcxz
call
cs
push
cwtl
sub
movsb
sahf
jno
fidivs
or
arpl
rclb
shlb
jbe
addr16
lods
loopne
add
imul
stos
pop
mov
jb
mov
xorl
cmp
out
add
push
rolb
xchg
mov
sbb
stos
add
addr16
test
mov
sbb
cli
adc
aaa
xor
mov
inc
jmp
icebp
adc
fucomp
adc
pusha
pop
outsb
or
sub
mov
xlat
fldenv
mov
push
jnp
test
out
addr16
cwtd
cltd
ja
repnz
and
adc
stos
popa
or
mov
pop
sbb
pop
test
roll
lea
fs
push
int
lods
icebp
push
pop
ss
insb
xor
ljmp
sbb
dec
loopne
iret
pop
adc
dec
dec
insl
rorb
mov
dec
cmpsl
fdivl
sub
mov
scas
cmc
aas
idiv
jl
xchg
add
lea
push
push
into
jle
push
mov
dec
and
lds
stos
xchg
pop
js
sub
cltd
mov
dec
cmp
mov
mov
adc
hlt
outsl
out
popa
movsb
mov
test
mov
fnstcw
and
add
xorb
aad
movsb
inc
loop,pt
jge
xor
mov
push
mov
push
xchg
ss
adc
xchg
imul
ror
pop
daa
ja
stos
sub
enter
js
add
pop
push
mov
push
icebp
cmpsl
ret
ficoml
dec
cmp
lock
int3
jne
adcl
sbb
enter
add
fmul
lahf
jb
fists
xchg
inc
popa
add
inc
addl
xchg
sub
std
mov
mov
testb
jae
pushf
add
push
inc
dec
jmp
inc
or
xor
adc
call
nop
lods
sbb
xlat
cmpb
fs
jnp
lods
mov
sbb
shll
fwait
jl
shll
sahf
mov
cmc
cmp
push
lret
outsl
xchg
iret
jp
cltd
mov
add
xchg
lret
pop
adc
dec
mov
loope
out
or
insb
ja
dec
push
jo
lcall
jne
adc
into
or
arpl
jae
sbb
pop
dec
sub
mov
and
or
push
orl
in
add
fidivl
push
xor
jb
arpl
pop
call
notl
xor
xlat
and
push
add
addl
jl
lcall
aam
cmpl
pop
rcr
xor
push
sahf
sti
lock
cwtl
sub
imul
stos
iret
into
sti
dec
add
mov
ja
popa
stos
jmp
sub
jns
mov
add
scas
out
sbb
sub
or
cmp
or
mov
daa
in
hlt
imul
sarb
repz
mov
int
nop
mov
push
xlat
aam
adc
cs
or
icebp
pop
mov
xchg
sub
test
bound
ret
jo
mov
sbb
std
pop
mov
mov
test
in
jmp
jle
cld
cmc
arpl
mov
pop
sti
test
xor
push
cmpsl
in
or
dec
dec
addr16
jge
cs
add
into
cmp
sub
in
mov
movsb
repnz
sahf
gs
dec
pop
and
clc
aad
inc
add
aad
gs
cld
jns
test
mov
scas
jp
dec
mov
cmpsb
xchg
stos
xlat
loopne
movlps
fdivs
cmpsb
lods
xchg
adcb
add
std
or
lods
addb
mov
nop
sbb
lret
push
fs
xchg
shr
xlat
sbb
std
notl
lahf
xchg
in
cmpsl
push
cmpsl
stos
mov
pop
push
add
and
outsb
je
mov
sub
stos
xchg
jle
cwtl
xchg
mov
shl
enter
dec
push
mov
sub
pop
cmpsl
loop
mov
xchg
movsl
std
mov
xor
jecxz
int3
push
aam
test
sbb
mov
dec
xor
mov
inc
inc
mov
inc
mov
add
pop
aas
out
addl
pusha
push
clc
add
mov
add
call
pop
pop
call
shll
sahf
mov
jle
push
mov
dec
jg
fsubr
test
pop
icebp
mov
mov
push
mov
jnp
in
cmp
jo
jp
cmp
mov
sub
pop
ja
adc
inc
aaa
shrb
sbb
out
pusha
cld
mov
arpl
out
inc
pushf
adc
sbb
or
adc
data16
cmpsl
iret
xor
add
mov
shll
enter
loopne
push
xchg
push
mov
push
outsb
jno
and
es
imul
mov
stos
xchg
out
std
mov
rcrb
cs
jl
mov
push
shrl
cs
jne
ret
dec
enter
adc
sub
arpl
jle
xchg
lds
sbb
mull
jae
add
subl
stc
or
arpl
sar
push
daa
popa
mov
xlat
adc
pop
int3
or
ljmp
sub
in
cmpps
mov
shld
std
cwtl
mov
stc
movsl
cmp
bound
mov
and
mov
popa
xor
sbb
mov
sub
inc
mov
leave
pop
adc
push
fistpll
and
mov
insl
lds
push
scas
push
pop
rep
in
mov
cmp
subl
inc
mov
or
dec
mov
stos
adc
aas
es
mov
push
add
push
fsts
scas
test
jae
and
rdpmc
push
stos
imul
fsubrl
cld
and
pop
idiv
inc
push
pop
push
addl
sbb
and
jnp
ret
pusha
scas
xchg
jns
shl
dec
or
in
xchg
and
ds
ds
pop
xchg
dec
adcl
sub
or
ret
or
pop
push
mov
xor
mov
xorl
aas
cmp
xchg
sub
push
hlt
addr16
test
xchg
out
rcr
icebp
rorb
mov
lahf
not
mov
dec
pop
and
loope
jl
imulb
dec
xchg
pop
out
call
sbb
sbb
sti
aam
js
mov
or
cmc
sub
enter
cmp
loop
test
add
pop
imul
mov
in
adc
sub
mov
testb
jmp
movsb
scas
sub
mov
pop
orb
sbb
loopne
pop
cltd
int3
xlat
ds
jmp
mov
mul
dec
stos
iret
mov
push
es
and
mov
popa
outsl
adc
mov
in
xchg
bnd
repnz
sbb
fsub
ja
push
xor
jmp
add
jle
enter
add
std
add
jmp
int
fmulp
rcrb
and
roll
pop
xchg
add
sahf
mov
cli
mov
pop
jne
out
ret
push
roll
push
cmp
lods
mov
test
add
lahf
int3
lret
cmpsl
jle
mov
push
loop
cmpsb
adc
mov
dec
je
fnstenv
in
leave
cmp
lods
imul
loope
jl
outsl
sub
xlat
pmaddwd
loop
xchg
stc
pop
rcl
push
shrl
std
xchg
cmp
loop
aas
pop
pop
mov
daa
jp
pop
xor
cmp
mov
sbb
jecxz
mov
jg
mov
push
clc
loop
cltd
arpl
cld
roll
cmp
divl
pop
mov
jne
out
loop
int
mov
aas
jge
fwait
mov
enter
inc
shlb
leave
xor
mov
xor
jmp
test
fucomi
test
data16
icebp
xlat
pop
add
jp
sbb
jnp
in
dec
pusha
and
aaa
dec
dec
mov
int3
push
testb
mov
sti
mov
pop
call
scas
inc
sahf
icebp
not
outsb
loope
fwait
test
and
cmp
fcomip
popa
pop
in
xchg
pop
adcl
into
dec
pop
cmp
adc
outsl
push
lock
and
cmp
xor
xchg
fisubl
mov
dec
outsl
test
and
aad
pop
je
xor
or
loopne
add
adc
clc
or
sub
sub
inc
out
xchg
jg
xchg
dec
pop
lds
test
push
lcall
in
call
fdivp
xlat
mov
ret
and
or
pusha
pop
divb
add
das
mov
or
sbb
xchg
jmp
sub
push
imul
sahf
cmp
cltd
push
dec
and
outsb
cmp
pop
xchg
pop
xchg
cli
shr
cli
xchg
cmp
cmpb
test
roll
popa
orl
hlt
cmp
cmp
or
dec
sahf
dec
addr16
push
out
ret
cwtl
je
mov
cmp
loope
pusha
vunpckhps
aaa
ja
cs
sbb
data16
push
dec
fwait
scas
mov
adc
jmp
cmpl
inc
fiadds
mov
enter
ret
fsubl
mov
loop
insl
add
push
add
in
hlt
sub
sbb
inc
dec
jmp
inc
sahf
cwtl
add
insl
pop
sahf
adc
cmpsb
inc
and
sub
lods
dec
lret
xor
xchg
mov
fs
push
and
mov
inc
jge
mov
aad
negl
loope
xchg
and
adc
cmp
cmpsb
jge
lret
inc
pop
bound
fmull
pop
ljmp
push
inc
call
cmp
in
lret
fldl
pop
or
imul
mov
mov
daa
ret
lret
je
sti
cmpsb
insb
add
movsb
inc
xchg
xchg
cmp
shl
mov
add
adc
icebp
das
add
out
pop
mov
in
jl
mov
mov
xor
mov
mov
fucomp
icebp
xor
cmpsb
cmp
int
mov
lods
arpl
ja
iret
out
into
jl
ss
stos
inc
push
enter
iret
cwtl
mov
mov
jg
pop
mov
mov
push
sti
pop
lock
or
cmpsb
iret
inc
ljmp
xor
mov
mov
mov
add
add
xorl
ja
notb
test
cmc
or
push
sub
pop
xor
mov
shlb
call
outsb
sub
pusha
mov
or
pushf
imul
inc
jb
lret
adcl
imul
out
addr16
notl
adc
mov
jge
cld
push
pop
sub
ret
sub
pop
cli
jmp
jge
fcmovbe
roll
add
in
imul
movsl
adcb
sub
lods
rclb
inc
add
pop
fdivp
cmpsl
inc
mov
movsb
jo
insl
dec
fstl
or
test
inc
nop
daa
jns
daa
xor
mov
add
sbb
xchg
cmp
xchg
test
je
adc
sub
xor
xlat
dec
sbb
mov
inc
fcomp
test
pusha
divl
pop
in
adc
jle
test
aad
inc
and
rdpmc
repz
adc
jl
adc
popf
inc
jg,pt
fwait
in
and
jo
inc
out
fcoml
aas
push
xor
mov
add
mov
cmp
les
lret
and
push
inc
lods
mov
pop
cmp
ss
in
sbb
pop
out
mov
ljmp
sub
push
ljmp
inc
flds
or
int3
in
adc
cmpl
dec
bound
jbe
int3
xchg
movsl
les
lret
jne
jnp
jmp
jnp
outsl
dec
sbb
xchg
test
popf
xchg
add
cmc
fidivl
scas
sbb
push
push
dec
pusha
clc
mov
pop
jg
add
je
std
outsb
lods
outsb
ja
push
lods
add
movsl
xor
pminub
nop
call
icebp
xor
add
cmc
sbb
enter
fsubr
xchg
sbb
add
add
imul
cmpsl
mov
push
inc
xlat
dec
popa
xor
outsb
pop
cmp
xor
loopne
cmp
cmp
mov
pop
subl
mov
jno
and
out
out
add
scas
ss
aaa
and
fstpl
cmp
ds
imul
scas
out
fisttps
lea
cld
fs
xchg
mov
call
int
sub
pop
das
addr16
jae
out
pop
sub
add
sub
sbb
arpl
inc
sub
movsb
adc
fiadds
rclb
shll
cmp
add
jo
jne
fadds
inc
adc
and
pop
or
push
sub
lds
mov
sub
push
roll
push
inc
xor
inc
sbb
xor
icebp
mov
lret
test
xor
mov
out
in
andl
call
and
sbb
daa
jmp
cmpsl
mov
mov
mov
xchg
ds
mov
dec
cs
push
call
andl
mov
cmp
shrb
pop
pop
lock
bound
mov
adc
aaa
and
imul
rol
loope
cltd
xor
rol
daa
mov
loope
gs
xor
fidivrl
scas
call
jae
mov
and
ret
xchg
pusha
cltd
fidivrs
movsb
dec
jb
jnp
push
out
adc
movsb
xchg
xchg
out
mov
mov
xor
test
xor
icebp
jns
sbb
sub
dec
cwtl
jmp
jne
ret
push
insb
jno
outsb
and
push
cmc
out
push
push
and
or
fdivs
call
repz
and
imul
adc
in
mov
ffree
ficompl
loope
fcomip
push
into
es
and
xor
jp
mov
sbb
xlat
movb
rclb
jecxz
cmp
lret
cmp
jl
shll
adc
pop
loope
cld
out
cld
fiadds
repnz
inc
jecxz
aam
mov
jp
jns
insb
pop
gs
or
or
loope
jle
insb
mov
loop
mov
mov
push
xor
fsubl
shrl
jmp
dec
fwait
dec
pushf
dec
cmp
mov
mov
jo
or
test
sub
shlb
fildll
mov
sbb
pop
leave
fisubl
sarb
jp
scas
fwait
sahf
pop
popl
out
xchg
outsl
outsl
testl
xlat
adc
scas
jle
mov
mov
push
popa
lods
shlb
xlat
xchg
jl
jl
inc
dec
mov
mov
rcrb
pop
and
pop
outsl
or
rcr
adc
movsl
sti
pop
out
fbld
scas
rorb
pop
jmp
fiaddl
or
scas
cmp
aam
lods
rcrb
inc
into
jae
fsts
xor
mov
aad
or
repnz
jns
sub
out
out
aaa
xor
cmp
cwtl
pop
iret
in
xchg
jmp
cltd
or
leave
div
in
les
not
ret
pushf
push
je
into
pop
stos
or
fsubrl
pop
insb
mov
pop
insl
xlat
pop
adc
push
mov
dec
inc
daa
sub
loopne
adc
xor
cmp
jecxz
push
add
inc
mov
dec
mov
dec
mov
pop
push
add
out
dec
mov
sub
jbe
cmpsb
les
cwtl
dec
jne
mov
or
loopne
lahf
sub
scas
ss
ss
lock
push
lret
shll
andl
cwtl
sahf
pop
jmp
ficompl
or
pop
lods
and
dec
lret
push
test
into
daa
mov
dec
add
fmul
arpl
push
cmc
inc
inc
in
xlat
and
mov
insl
mov
jns
and
cmp
testb
pop
dec
xor
jo
test
es
ret
jl
outsb
daa
pop
adc
add
mov
mov
movsb
or
pop
cmp
and
loop
sti
ja
mov
mov
mov
pusha
pop
xchg
dec
dec
or
xor
ret
mov
mov
sub
outsl
and
cwtl
shrl
push
lret
xor
ret
clc
inc
imul
imul
daa
push
cmpsb
mov
xchg
xchg
push
xor
cli
mov
nop
dec
and
pop
sbb
sub
jge
js
stc
xchg
scas
sub
sahf
data16
push
pusha
icebp
pop
movsb
lret
movsb
mov
pop
imul
push
or
stos
cmp
and
mov
pushl
xchg
inc
mov
or
icebp
out
or
cmp
pop
dec
stc
pop
cli
xchg
mov
cmp
outsl
jmp
stc
and
adc
lret
pop
xorl
mov
pop
data16
enter
cmp
lock
jmp
lret
out
loope
daa
adc
xchg
push
ja
sub
add
movsl
dec
inc
xor
lahf
or
mov
and
enter
out
jae
stc
movsb
call
stc
inc
scas
adc
enter
jle
push
js
inc
mov
jp
lcall
add
out
fcomip
mov
out
adc
push
and
xor
push
cmp
cltd
cmp
cmp
movsb
and
adc
push
cltd
es
iret
xchg
ja
mov
mov
in
movsl
pop
stos
inc
mov
dec
sarb
adc
cmpsb
dec
push
jne
int
sub
jl
push
scas
cmp
pop
in
xchg
pop
popf
in
xor
xchg
sbb
loope
inc
push
ljmp
daa
adc
jmp
adcb
scas
imul
cltd
movsl
imul
jmp
imul
xchg
jb
jne
cmp
pop
push
pop
cmp
adcl
stos
and
iret
jle
xchg
test
cmc
mov
scas
xor
push
mov
test
stc
setbe
sub
loopne
lock
loope
ja
mov
rol
in
gs
add
add
sub
jno
int
mov
lds
pop
mov
movsl
shll
je
repz
hlt
mov
scas
xchg
sub
mov
in
sub
xchg
mov
push
popf
sahf
or
pop
or
jne
and
cmpb
cmp
ja
or
les
jae
ret
mov
jbe
test
pop
sahf
pop
jnp
invd
std
sbb
aas
mov
xchg
mov
movsb
leave
insb
mov
testl
clc
cmc
dec
and
sarl
fisttpll
and
inc
push
std
mov
outsb
push
test
lret
in
jp
adc
shr
inc
cmc
mov
pop
sbb
shrl
xlat
dec
or
inc
out
sti
int
andb
cmp
inc
jmp
repz
cli
aam
rclb
popf
adc
addr16
and
or
sarl
add
inc
popa
xlat
push
mov
sbb
xchg
mov
cs
ja
outsb
adc
leave
push
xchg
aam
lret
fstl
push
sbb
dec
movsl
dec
sahf
mov
adc
daa
lcall
or
mov
mov
and
xorl
aas
mov
cs
out
jecxz
pop
fadds
sarb
or
clc
cmp
imul
mov
xchg
int3
mov
divl
adc
orb
imul
jp
movsl
or
lods
je
jns
ja
and
dec
mov
jae
mov
adc
addr16
mov
xlat
repnz
xlat
push
aaa
int3
cmpsb
mov
push
lahf
mov
sti
popa
adc
inc
fisttpll
movsb
adc
scas
gs
into
push
leave
cmp
inc
mov
add
xchg
sti
stos
test
adc
push
dec
jbe
xor
cltd
ljmp
cmpsl
push
xor
loope
cs
mov
ds
pop
xchg
and
inc
rcrb
js
xchg
mov
jno
or
add
insb
push
xlat
pop
rorb
dec
cmc
cmp
mov
add
pop
in
fiadds
pushf
cmc
and
shr
repnz
mov
test
mov
in
inc
mov
lret
jne
lea
scas
cld
lods
cli
mov
push
sub
out
add
dec
loopne
sub
adc
addr16
loop
xchg
pop
mov
orl
js
iret
aad
aas
pop
icebp
cmpsb
in
imul
fwait
int3
mov
jl
cmc
push
sbb
mov
mov
lock
fmull
stos
mov
fs
adc
aad
leave
lahf
jo
gs
xlat
sbb
andb
mov
xchg
lods
test
or
mov
mov
imul
mov
hlt
inc
sarl
out
dec
ret
adc
fsubl
inc
dec
aam
pop
test
loope
lahf
cmpb
shrb
orl
mov
or
cltd
cmp
insl
add
sub
pop
fwait
lods
test
jl
sub
or
or
bound
sbb
lret
lds
int
insb
movsb
shlb
adc
add
imul
test
in
ljmp
inc
mov
movl
test
or
mov
push
mov
cmp
adc
subl
jo
rcll
repz
aam
jp
or
int
loopne
cltd
add
add
das
popf
push
arpl
mov
xor
push
mov
popf
popa
into
dec
dec
loope
outsb
lods
and
fs
call
cli
popa
sahf
pop
nop
loop
jno
cmp
sbb
xchg
testl
mov
dec
cmp
test
insb
into
xlat
xchg
push
or
add
hlt
fadds
int
dec
sarb
adc
pop
hlt
cmp
jl
fs
lock
dec
es
pop
push
dec
popa
neg
dec
sub
ror
and
orl
sbb
test
js
les
into
cmp
mov
and
cmpsl
push
inc
pop
dec
ja
jbe
lret
cwtl
sti
xchg
dec
shrb
xor
lock
dec
out
ljmp
loope
out
lock
hlt
sbb
xchg
enter
arpl
mov
mov
sbb
cmp
out
sbb
inc
pop
mov
xchg
fcmovnb
jle
aas
icebp
sarl
sbb
or
inc
mov
cwtl
sub
test
les
es
sbb
fmull
cmp
sub
xchg
in
and
mov
aaa
fwait
and
inc
mov
rcrl
out
jno
cmp
sub
les
xlat
jno
dec
pop
push
adc
filds
loop
adc
push
mov
xor
dec
movsb
xor
outsl
jae
in
inc
test
inc
cmp
loopne
lods
push
sub
je
cmp
test
xor
div
adc
in
push
cmp
mov
out
inc
scas
fiadds
dec
loopne
mov
jg
mov
add
jnp
mov
or
cmp
imul
arpl
inc
dec
xlat
push
lds
dec
or
dec
cmpsb
scas
push
imul
jle
jo
pop
mov
shrl
mov
xor
xchg
fwait
xchg
lock
mov
fs
add
add
popa
sbb
jmp
xchg
sub
cmp
in
mov
leave
cmp
mov
stos
sub
or
out
mov
cmp
mov
or
movsb
and
push
fdivs
pusha
mov
popa
dec
je
add
jge
cmp
inc
push
leave
gs
mov
jbe
sbbl
fdivrl
les
orb
in
in
sub
pop
pop
jp
and
pop
mov
sub
xchg
xor
sub
jge
inc
test
push
dec
aaa
mov
inc
xor
xchg
inc
and
push
sub
cmp
pop
insb
mov
push
ret
xor
mov
lea
push
dec
or
mov
call
idivl
xchg
cmp
mov
xchg
xor
loope
jnp
xlat
mov
daa
test
je
testl
pop
push
movsb
das
test
sub
loope
jo
inc
mov
dec
lret
mov
mov
test
negl
outsb
dec
add
aad
jp
jg
fcomps
mov
aas
mov
xchg
insb
jb
or
fcoml
xor
mov
fs
stos
sbb
jge
std
mov
jle
jnp
stos
push
enter
jp
inc
pop
fwait
popa
aas
popa
cmpb
jb
inc
fsubr
push
adc
ljmp
cmp
dec
shrb
rolb
jo
push
mov
out
cmpsb
xchg
xor
sub
push
push
insl
mov
xlat
xor
and
jmp
repz
jo
dec
add
mov
outsl
adc
jp
mov
mov
rorb
sub
mov
pop
fnsave
mov
xor
mov
data16
in
rorl
sarb
decl
pop
cmpsb
dec
pop
xchg
cmp
jp
xor
orl
pusha
mov
jbe
fnstenv
cs
leave
sub
ret
popa
clc
punpckhbw
sub
test
xor
es
scas
stos
cmc
js
scas
mov
push
out
call
add
subb
sbb
xchg
sbb
fneni(8087
mov
and
mov
mov
pop
jg
insl
jo
sbb
out
xchg
inc
test
cltd
mov
pop
cmp
mov
dec
inc
pop
les
fiadds
pop
repz
shll
xchg
sub
mov
xchg
mov
test
push
push
mov
stos
inc
fsts
enter
test
inc
addr16
pusha
rolb
jg
xchg
mov
pusha
add
xchg
dec
push
push
and
add
fcomps
jne
or
insl
add
inc
push
or
xor
lods
dec
push
fidivs
pop
xchg
sbb
xor
sbbb
xchg
fstl
pop
lahf
mov
inc
push
mov
aad
lock
testb
test
add
xor
ret
aam
add
push
xchg
popa
insl
loopne
aas
cmp
xchg
addl
xor
fs
icebp
xlat
rcll
add
es
imul
aam
pop
ret
xor
lock
dec
or
mov
fisubs
pop
int3
jnp
jne
mov
in
rcrl
jo
or
sub
dec
shr
ret
push
dec
insb
pop
inc
mov
repz
lret
fstpl
push
mov
dec
and
mov
cmp
and
sub
fmuls
and
mov
ret
cld
xchg
call
dec
daa
or
test
out
repz
inc
xchg
or
xor
add
jmp
fsubrp
sub
push
cmp
xor
jo
mov
sub
inc
clc
loope
cs
stos
lea
mov
ss
jecxz
push
push
fiaddl
mov
inc
popa
das
lds
jno
add
cmp
test
rcrl
xchg
mov
mov
mov
test
fisubrl
fbstp
aad
jecxz
ja
cmc
outsb
loope
mov
test
push
dec
call
les
lcall
mov
lret
lret
out
or
sub
push
jmp
dec
sbb
mov
push
push
and
sahf
fcmove
sbb
fists
sub
fs
add
add
divl
pop
test
outsb
inc
cmpsl
lret
pop
adc
add
int3
lret
dec
add
jg
or
outsb
es
dec
push
dec
into
aad
cmc
loope
and
lahf
sbbb
xor
mov
sub
cmp
adc
cmp
dec
push
arpl
mov
leave
fmull
out
jbe
cmp
mov
sbb
push
mov
mov
aas
cmc
pop
mov
jmp
xchg
xor
in
flds
xorl
xchg
arpl
por
jbe
or
shrb
sub
push
cwtl
dec
mov
pop
mov
dec
or
lret
std
jnp
test
mov
add
sub
dec
loop
stc
push
int
shll
mov
jns
in
pop
fisubs
push
popf
push
inc
ret
lods
xchg
xchg
jp
xor
hlt
out
mov
mov
push
jbe
aas
lods
enter
daa
or
scas
fnsave
in
cmp
adc
andl
jmp
aam
loope
aaa
fbstp
add
push
mov
shll
pushf
repnz
repnz
jmp
cmp
inc
mov
mov
das
scas
add
jecxz
test
fldl
xor
inc
stos
mov
and
sbb
imul
adc
mov
sar
rclb
pop
filds
fdivr
ret
mov
adc
sub
cld
popa
mov
or
hlt
cmp
aas
repnz
icebp
out
scas
dec
pop
xlat
sbb
adc
push
rol
fcompl
ret
fists
aam
xor
mov
sti
xchg
ret
pop
out
mov
xor
sub
addr16
iret
aad
insl
cltd
movsl
adc
ret
mov
in
push
mov
mov
test
lock
aad
js
fs
lret
into
popf
push
sub
lahf
jb
lock
sahf
mov
ret
repz
std
jo
pop
cs
lahf
adc
clc
lds
imul
les
leave
mov
es
sbb
push
add
adc
mov
aad
jae
add
mov
push
jmp
jb
mov
xchg
daa
adc
test
jb
sbb
hlt
addr16
push
or
scas
dec
out
inc
stc
orl
inc
movsl
cmp
mov
lret
jbe
loope
jp
xchg
mov
outsl
iret
xor
ret
stos
jbe
pushf
andb
mov
js
or
xor
xor
sub
shr
stos
add
jge
and
inc
push
sbb
rorl
cmpb
lret
push
aad
ss
dec
icebp
or
xchg
cmp
clc
in
shlb
scas
adc
ljmp
ljmp
sahf
adcb
push
loop
or
ja
nop
movsb
repnz
jae
sbb
cmpsb
mov
add
sub
imul
dec
cs
js
pop
aaa
mov
bound
repnz
inc
sub
inc
or
jne
push
mov
xchg
lods
sub
shr
pusha
fisubrs
adc
adc
xchg
mov
fstpt
pop
lds
xchg
mov
cld
outsl
notl
or
sbb
fwait
dec
dec
scas
xor
jne
mov
stos
inc
into
test
pop
repz
jno
mov
xlat
test
or
sub
outsb
aas
pushf
xchg
sub
in
xchg
pop
je
push
xor
sbb
int
lahf
jle
mov
into
hlt
xchg
in
aaa
divb
jb
pusha
divl
rolb
and
mov
stos
mov
shlb
xlat
sti
cld
lcall
jno
repz
repz
jge
stos
adc
xchg
shlb
jno
enter
push
loop
rorb
in
movsb
or
insb
xor
mov
lods
aad
push
mov
mov
inc
in
mov
push
adc
sub
aad
cmp
in
or
cmp
aam
ds
mov
fnstsw
cmp
addr16
in
call
js
and
popf
mov
or
inc
and
mov
or
aad
mov
aad
mov
and
inc
mov
and
bound
xchg
dec
mov
push
inc
jb
fsubrs
inc
jnp
insl
icebp
in
push
repz
addr16
lahf
xchg
mov
mov
mov
mov
push
cmpb
sub
arpl
push
popf
mov
test
sub
mov
int3
push
scas
sub
leave
pop
adc
mov
shr
xor
inc
inc
lock
out
imul
mov
xchg
push
jb
push
mov
cwtl
and
data16
xchg
mov
icebp
bound
ja
dec
es
dec
push
stos
in
adc
lea
outsb
gs
out
xchg
push
stos
push
pushf
jbe
xchg
ss
lock
push
pop
hlt
add
leave
in
cmp
lret
cmp
inc
cltd
sbb
xchg
scas
pushf
inc
inc
stos
xchg
fnstenv
into
jb
sbb
mov
adc
cli
inc
scas
lcall
mov
aad
ret
aad
cmc
mov
add
inc
cmp
test
jmp
sub
jno
pop
mov
neg
js
xchg
fcoms
in
fs
mov
mov
ret
lds
mov
push
loope
fsub
mov
testl
scas
sbb
ds
sarb
push
mov
ficompl
fdivr
int3
ljmp
xor
pop
push
in
scas
movsl
ret
sub
sahf
or
pop
mov
lods
orb
sub
movsl
cltd
pusha
aad
enter
out
cmpsb
sbb
inc
hlt
andl
jle
shl
sbb
sahf
or
imul
scas
mov
add
adc
sub
xchg
cltd
jbe
cmc
out
push
lods
mov
xor
insb
bound
sbb
pop
aad
pop
xor
adc
addr16
lret
xlat
jbe
lods
mov
or
push
mov
and
mov
adc
call
ret
stos
sub
mov
jne
hlt
mov
je
ds
jg
ds
shl
shlb
sbb
inc
push
outsl
cltd
popa
xor
jo
leave
int
mov
pop
imul
cli
gs
movsb
ficompl
cwtl
mov
leave
int3
pop
fstps
dec
out
xchg
sbb
mov
iret
fdivr
add
xchg
mov
leave
sbb
insb
bound
pop
xchg
cs
lret
pop
fwait
lcall
outsl
xor
mov
and
jnp
stos
dec
xlat
mov
push
push
jge
std
push
js
nop
shll
push
test
mov
leave
xor
test
cmpsl
pop
cmp
inc
cld
dec
dec
mov
cs
jmp
dec
out
mov
aaa
test
fidivrl
fisubs
inc
mov
in
push
or
pop
aas
fistps
scas
fnsave
imul
rolb
xlat
pop
leave
ss
inc
dec
ljmp
and
js
and
cwtl
cmp
sbb
fwait
cmpsb
orb
insl
loopne
pop
es
jo
push
xchg
sub
mov
pusha
add
mov
sub
xor
cld
jmp
mov
ficompl
xor
sub
gs
dec
iret
fisttpl
fnsave
sub
mov
add
xchg
out
int
xchg
mov
xchg
outsl
movsb
mov
imul
mov
div
leave
sub
mov
xlat
cmp
cmpsl
imul
pushf
es
jb
mov
mov
leave
lret
es
incb
sbb
xchg
test
aaa
stc
js
dec
cmc
lea
jg
scas
cmp
repnz
mov
mov
jl
push
adcl
popl
mov
out
test
mov
pushf
das
dec
arpl
aaa
sub
daa
xchg
xor
ss
rcr
loopne
test
mov
cmp
lret
mov
sub
add
or
mov
fwait
lods
pop
xchg
mov
mov
cmpsb
lock
add
xchg
jns
icebp
xchg
push
jo
sti
xchg
leave
add
mov
scas
mov
adc
or
xbegin
ljmp
insl
lock
and
or
stos
mov
dec
jne
cltd
cmpsb
imul
in
loopne
enter
sbb
fcomps
fidivrs
int3
jg
and
sub
and
fsts
adc
push
add
fidivrl
fwait
andl
cmp
movsb
pop
sbb
mov
dec
and
adcb
test
inc
popf
aam
test
sti
into
dec
jno
push
loopne
sti
jp
punpcklwd
or
lret
inc
and
xchg
out
jmp
out
xchg
add
mov
cmp
push
xchg
testl
lds
add
leave
loopne
add
gs
stos
pop
aam
push
hlt
mov
dec
outsl
aad
cmpsl
jo
dec
sub
or
mov
push
push
ja
aaa
xchg
inc
adc
mov
xor
dec
test
push
fisubrl
or
inc
mov
clc
dec
scas
pusha
mov
mov
sahf
xor
pop
dec
jge
rol
mov
inc
mov
jae
push
scas
pop
xchg
cmpsl
ret
popa
stc
sub
dec
mov
pop
adc
shlb
jl
mov
cmp
mov
sbb
jns
jle
and
out
icebp
loopne
push
adc
mov
adcl
shll
dec
cld
ja
dec
fs
enter
dec
add
and
int3
out
sbbb
sbbb
cmp
js
je
push
mov
xchg
adc
scas
loop
mov
add
lret
faddl
push
push
mov
mov
push
and
movd
stc
push
ljmp
call
sub
xchg
jmp
sti
adc
mov
mov
outsb
mov
inc
and
jmp
fisttps
push
bound
shlb
shl
mov
dec
xchg
jl
xor
ja
and
jge
or
and
and
sub
inc
mov
mov
fstl
setbe
fs
push
test
mov
je
pop
ss
jae
dec
cltd
call
and
adc
xlat
sbb
dec
dec
mov
cld
repz
xor
dec
rcl
push
iret
jl
sub
dec
ds
jecxz
or
xor
in
out
lret
js
mov
psrad
xchg
fs
pop
jecxz
sub
and
movsl
adc
sub
arpl
mov
xor
loopne
mov
ljmp
mov
int3
xor
and
push
jb
or
sub
imul
push
lea
sti
adc
insb
es
xchg
or
scas
js
and
imul
out
imul
ds
jne
sbb
xorb
add
jge
es
cwtl
add
andl
addr16
cmc
dec
sbb
dec
lock
push
rol
inc
mov
cmp
dec
stos
stc
popf
icebp
das
test
das
jmp
cmpsb
int3
jne
outsl
xchg
mov
mov
mov
pop
xchg
les
pop
dec
dec
es
ret
ss
enter
shrl
mov
cwtl
adc
mov
fwait
xor
push
xchg
test
inc
push
fs
inc
adc
test
std
jb
pop
xor
xchg
pop
enter
add
imul
xchg
rcr
loope
repz
mov
adc
dec
inc
lcall
std
pop
mov
mov
sahf
xchg
pusha
int3
dec
ret
jmp
shll
das
pop
lods
or
push
lods
push
mov
sti
adc
ret
pop
imul
dec
pop
outsb
into
outsb
ret
mov
sub
je
js
sub
add
divb
or
inc
jle
sub
cli
popf
or
dec
adc
sbb
inc
loope
out
les
mov
into
cmpsl
outsl
and
adc
js
xor
sbb
mov
mov
jp
int3
mov
jecxz
lds
mov
pop
inc
sub
in
ss
fldenv
fidivl
popa
dec
xlat
out
sub
mov
fisubl
push
sti
sub
ret
mov
outsl
mov
pop
inc
pop
mov
sbb
cwtl
inc
lods
inc
insl
fs
jecxz
jb
fistps
or
ljmp
lret
lret
ss
jge
ljmp
subb
movsb
les
mov
mov
sbb
in
lret
clc
cmp
add
push
mov
adc
scas
push
int3
jmp
int3
js
in
adc
lock
xchg
inc
mov
punpckldq
outsl
daa
pop
mov
aam
lcall
xchg
mov
out
add
pop
sub
cmp
popf
jne
into
sub
sbb
loop
mov
jp
push
inc
adc
and
cmp
mov
mov
or
data16
xor
mov
pop
mov
mov
aaa
jnp
xchg
pop
adc
fwait
in
add
lret
rclb
jmp
dec
jl
dec
cmp
popf
shlb
or
fldt
insb
mov
mov
sub
inc
dec
and
pop
dec
adc
out
std
test
rcrl
push
js
aas
ret
xor
pop
dec
mov
mov
cmp
pop
inc
jge
jle
shrb
mov
jno
mov
test
inc
sbb
aam
lods
das
fstpl
lock
movd
sbb
jae
mov
inc
lret
ja
adc
xor
inc
sub
out
ds
mov
fstpl
xor
test
and
pmulhw
and
call
loopne
cmp
push
je
cmc
jnp
orl
adc
cmp
in
repz
sub
mov
jmp
lret
xchg
nop
daa
leave
rolb
sub
cmp
shlb
ss
stos
addr16
movsb
and
mov
mov
or
in
cmp
jp
lock
fnstenv
push
pop
into
cli
add
je
loopne
or
mov
loop
inc
leave
sbb
mov
inc
dec
adc
cmp
popf
ret
sbb
pusha
sahf
and
sbb
imul
fnstsw
inc
in
mov
shrl
pop
jp
test
lret
and
das
into
inc
lods
aaa
sti
sbb
sbb
push
enter
mov
lea
lcall
or
and
add
aas
jge
aas
leave
sbb
add
nop
push
sbb
adc
xchg
lcall
mov
jb
and
daa
pop
repz
gs
jmp
jp
push
jge
or
setno
loopne
adc
rcll
lcall
cmpsb
push
insl
add
mov
lahf
sub
inc
jl
jns
xchg
inc
test
fiaddl
jle
jp
out
mov
add
inc
ljmp
icebp
movsl
test
scas
xchg
ss
cmp
lea
jae
test
out
inc
std
loope
nop
mov
ret
adc
jge
sub
into
pop
mov
push
in
orb
cmp
popa
mov
mov
adc
and
repnz
mov
push
and
popf
or
cmpsb
push
insb
jb
pop
xchg
jp
shll
fcomip
mov
cmpsl
arpl
xor
add
fstpt
mov
mov
imul
data16
sarb
jle
ljmp
cld
sub
cmp
loope
adc
shr
inc
nop
jmp
aas
lret
shr
outsb
fstpt
ljmp
xchg
pop
stos
or
icebp
mov
popf
xor
mov
sbb
out
dec
jae
pop
repz
lods
fnstenv
iret
xor
fdivp
pop
stos
inc
pop
dec
loope
dec
dec
push
int3
jo
sub
cmp
out
rclb
movsb
mov
push
cmp
clc
out
push
xor
xor
mov
loopne
fs
dec
pop
ret
add
in
push
mov
jp
js
and
loope
add
xor
cmp
mov
test
or
int
insb
sbb
pop
mov
or
das
mov
mov
dec
cli
jmp
sub
mov
in
inc
sbb
push
xorb
mov
dec
mov
lcall
movsb
sbb
popa
ss
mov
dec
push
cltd
xor
fwait
ljmp
idiv
popa
sti
stos
gs
push
pushl
push
push
cmp
ljmp
mov
enter
cmpsb
sub
repz
mov
ret
int3
mov
adc
lea
loope
call
mov
in
adc
bound
stos
test
jp
outsb
lods
push
ss
aas
movl
jns
or
nop
push
out
dec
repnz
inc
sbb
push
add
rcl
push
mov
daa
inc
sbb
pop
mov
dec
cli
jne
lret
aas
insl
call
lret
pop
sahf
icebp
pushf
push
daa
stc
int
mov
sbb
rolb
mov
sub
das
mov
les
int
das
mov
ja
test
jns
jge
sbb
inc
ret
sahf
mov
dec
push
push
arpl
mov
fsubl
mov
sti
ret
push
mov
shl
andb
ret
fisubs
lds
adc
jl
xchg
pop
xchg
shrl
in
stos
cwtl
stc
cli
test
xor
xchg
xor
dec
dec
add
inc
out
es
pushf
hlt
add
movsl
mov
mov
bound
in
jae
stc
jnp
xor
pop
cli
xchg
out
dec
mov
add
sub
dec
stos
inc
cmp
jle
xchg
push
outsl
out
test
cmpsb
dec
jmp
jb
iret
or
xor
cmp
pop
cmpsl
bound
inc
adc
test
jbe
vmread
mov
sbb
mov
push
jmp
ficomps
push
cs
xor
lods
and
xchg
mov
xor
arpl
jle
mov
dec
push
insl
cs
mov
dec
push
es
pop
lret
pushl
mov
int3
jno
push
int3
jmp
loop
das
pusha
fldt
dec
push
movl
mov
in
cmp
in
sub
pop
inc
decl
dec
pop
cmp
sub
push
or
xor
jge
punpckldq
fbstp
mov
test
insb
pop
loopne
jne
fadd
mov
jne
push
jge
ljmp
dec
sbb
or
hlt
aad
leave
inc
ds
fs
xlat
jno
xchg
std
fadd
imul
fists
add
enter
repz
addr16
mov
mov
call
cmp
adc
leave
leave
addl
xchg
ljmp
dec
xor
aad
or
dec
jle
js
mov
repz
add
ljmp
into
pop
adc
sub
inc
mov
cmc
repnz
fcoms
add
rcll
enter
arpl
inc
and
add
pop
sti
fldln2
cld
sub
sub
enter
and
incb
cmp
dec
add
cmp
lahf
inc
adc
xchg
hlt
shr
outsb
rcll
xor
dec
pop
inc
inc
in
div
dec
and
dec
into
pop
cmp
out
scas
push
cmp
cmpsb
xchg
pusha
sub
iret
ret
shl
pop
and
pop
mov
mov
scas
movb
xchg
stos
scas
pop
xchg
cmp
pop
xor
fs
inc
fs
test
mov
pop
cmp
or
shrl
cmc
mov
ljmp
jge
imul
fiaddl
sbb
xrelease
in
rcrb
pop
pop
cmc
jmp
idivl
jb
push
cltd
aas
dec
adc
sbb
sti
and
add
mov
std
loope
mov
push
xchg
add
aaa
push
add
and
mov
or
xor
mov
sbb
scas
xor
push
jne
test
popf
or
cmpsb
push
fucom
aam
ljmp
mov
shrl
jp
bound
lock
xchg
stos
je
cmc
int
push
inc
push
push
xchg
sub
sbb
out
imul
mov
in
jo
adc
aam
pop
loopne
ja
popa
lods
mov
or
scas
mov
lock
push
bound
out
push
jmp
int
call
scas
imul
xor
or
shll
lahf
int3
cmp
filds
lds
inc
xchg
add
imul
inc
cmp
loopne
out
cld
inc
mov
inc
jg
xor
insb
adc
mov
not
int3
xor
daa
cmpsl
mov
dec
cmp
lcall
adc
jae
adc
mov
out
adc
ret
test
bound
mov
shlb
mov
fimuls
orb
sub
iret
in
fbstp
inc
mov
mov
jne
insb
push
movsb
xchg
pusha
int
jge
jno
jcxz
add
movsl
ffreep
movsl
test
fsubrs
in
aam
inc
shl
arpl
pop
mov
or
lods
jmp
int
push
fildl
mov
inc
sbb
lahf
fucom
pop
fildl
fsts
scas
pop
mov
clc
jmp
fdivrl
mov
cmc
and
gs
inc
enter
pop
inc
mov
mov
outsl
mov
out
ljmp
lds
push
je
lea
cmp
mov
push
shlb
and
rorb
mov
aas
mov
data16
lcall
movsl
lods
sub
outsb
sub
pusha
in
dec
enter
iret
fidivrl
fists
stos
cmp
bound
insb
mov
push
add
xchg
pop
clc
stos
adc
mov
mov
mov
sbbl
add
ret
push
je
mov
jl
xor
icebp
jo
sub
cmpsb
mov
das
xchg
and
popf
test
mov
jmp
pop
pop
lret
sbb
push
jge
add
or
xor
ja
jbe
loopne
insl
loopne
mov
cmp
jp
iret
cltd
stos
mov
inc
jno
and
lret
js
and
outsb
test
ret
cs
and
mov
cmpsb
cltd
dec
mov
pushf
pop
xor
lret
xchg
sub
fwait
dec
push
inc
jno
negl
inc
mov
xchg
hlt
pop
lock
iret
push
in
ja
fistpll
xchg
insl
add
sbb
je
es
sbb
mov
dec
mov
fcmovb
ret
xor
fs
adc
jne
sub
int3
cmpsb
pop
jae
arpl
dec
and
pop
inc
sbb
cltd
pop
mov
jbe
cs
sub
push
inc
add
arpl
mov
xchg
or
shrb
aad
push
movsl
pop
or
xchg
mov
pop
repz
dec
dec
stos
arpl
pushf
xor
popa
add
xchg
icebp
inc
rclb
sbb
sbb
das
fdivrl
imull
fcoms
ret
dec
xchg
fidivs
gs
enter
loop,pt
sbb
mov
movsl
jae
cmp
inc
repz
push
pop
mov
mov
push
xor
cmpsb
xchg
jg
adc
lds
pushf
lods
xchg
jp
shll
xor
pop
fildll
add
stos
test
adc
fcompl
jmp
and
adc
hlt
test
cmp
xorb
je
inc
std
scas
mov
mov
add
scas
ret
cmpsb
add
stos
lret
enter
dec
test
cmp
adc
ss
pushf
sbbb
stos
or
cmpsb
test
push
andb
xchg
and
js
test
stc
mov
stos
inc
loope
pop
jnp
clc
mov
push
or
mov
fs
into
gs
jo
and
jl
xor
mov
push
les
divb
xor
push
fs
addl
ljmp
in
in
xor
mov
mov
mov
in
nop
pop
mov
movsb
cs
and
mov
clc
imul
adc
xchg
pop
cmp
test
pusha
add
cld
lret
das
inc
std
sbb
xor
cmp
aas
mov
insl
add
pusha
call
and
iret
jmp
les
in
scas
pop
xchg
mov
jbe
int
aad
sub
adc
or
call
sub
jle
rcr
and
sbb
xchg
lea
add
xchg
add
mov
sbb
and
in
jae
clc
and
imul
xchg
jb
pop
pop
mov
push
imul
mov
es
push
subb
jecxz
dec
dec
sbb
push
cwtl
std
rcrl
mov
mov
dec
int3
mov
test
mov
xchg
or
cmpsl
inc
addr16
push
loop
pop
fwait
pushf
add
mov
pop
je
xor
outsl
jns
jecxz
inc
xchg
lods
and
xchg
cld
xorl
add
sbb
sub
mov
dec
scas
mov
fsubl
std
fidivrs
pushf
jg
dec
jbe
mov
add
dec
and
push
pop
xchg
imul
cmpsb
push
sub
popf
push
dec
lea
jo
mov
dec
jle
jle
jne
rcrb
dec
cs
mov
cmp
out
dec
loope
mov
push
fcmovnu
inc
add
into
mov
mov
sbb
test
mov
cli
dec
sbb
iret
sub
daa
shl
mov
add
scas
mov
addb
mov
popf
pushf
fs
notl
fadd
out
mov
pop
cmpl
sub
gs
nop
loope
jnp
shlb
dec
adc
adc
loopne
cmpsl
push
xor
sub
icebp
les
cmp
push
arpl
sar
mov
cmp
mov
dec
in
xchg
sub
stos
mov
and
lret
dec
and
mov
movsl
iret
and
es
inc
push
outsl
cli
std
es
adc
and
adc
mulb
mov
lds
add
cmp
in
das
iret
imul
mov
out
xorl
xchg
insb
iret
add
das
pop
repnz
dec
mov
shll
adc
push
cmpsb
fwait
test
nop
fidivl
dec
decl
lea
jp
add
mov
add
inc
mov
pop
mov
call
loopne
sbb
cmp
cmp
iret
arpl
add
es
fisubrl
fisubs
out
in
aad
lock
xchg
fsubs
test
pop
pushf
bnd
ret
jg
and
or
and
pop
sar
mov
jno
sub
shrb
cmp
cltd
pusha
fsub
icebp
insb
and
enter
sbb
jg
movsb
and
inc
jl
andl
inc
push
in
pop
cli
xchg
mov
mov
add
mov
popf
fistpll
shrl
sub
movsl
icebp
aad
insl
int3
adc
jno
cli
xchg
orl
sbb
add
pop
popa
cmpsl
dec
mov
adc
adc
mov
xor
inc
incl
and
clc
das
mov
mov
mov
sbb
stos
in
push
mov
cwtl
xorl
adc
dec
cs
in
adc
adc
fwait
jl
lods
mov
jb
roll
xlat
cmpsl
loop
inc
rorb
or
jbe
js
mov
inc
push
jno
test
inc
fidivrs
dec
mov
cmp
xor
and
in
ret
add
enter
jae
nop
mov
xchg
xchg
aad
movsb
cmp
cs
mov
cs
das
push
insb
jl
popf
mov
add
lahf
push
out
stos
adc
pop
mov
ljmp
jae
mov
push
cltd
push
enter
or
xlat
pop
jno
mov
xchg
lods
xchg
mov
das
popa
out
lret
push
mov
pop
push
mov
jmp
test
jne
in
in
sbb
scas
and
out
subb
cli
leave
ja
push
inc
orl
sbb
mov
or
in
out
sub
jae
xorl
nop
jnp
mov
and
out
xchg
loopne
mov
int3
mov
mov
ret
mov
jecxz
push
pop
fwait
inc
push
xchg
lds
insb
cltd
aad
loope
stos
imul
dec
cmp
rolb
iret
mov
mov
repnz
leave
dec
inc
notl
int
sbb
jmp
sub
aaa
dec
scas
push
enter
xor
sbb
mov
jg
jg
add
adc
and
out
int
int3
push
jbe
jnp
jb
sbb
pushf
adc
sbb
sub
pop
and
movsl
dec
nop
inc
fdivrs
aam
mov
pusha
jno
sti
mov
pop
mov
fmull
or
enter
adc
inc
push
push
mov
jb
movsl
daa
sub
cld
jg
mov
lcall
jne
adc
ss
mov
jecxz
or
movsb
ja
out
movsb
mov
test
hlt
xchg
subb
push
jp
imul
add
test
pop
cmp
push
mov
mov
dec
imulb
sti
mov
std
xchg
mov
cmpsb
ret
xor
push
sub
mov
or
dec
and
cmpsb
in
xchg
div
sbb
les
and
cwtl
mov
xor
nop
push
clc
mov
xor
mov
out
mov
inc
fsubrl
mov
xchg
adc
sti
pop
inc
jecxz
js
push
fistpll
std
addb
mov
loopne
hlt
xchg
xchg
xor
sbb
cmp
push
popl
cmc
and
xor
push
rcll
nopl
xor
inc
pop
nop
das
inc
jmp
fcomps
daa
sub
mov
lods
adc
or
ljmp
inc
mov
negb
adc
or
insl
inc
outsb
jg
arpl
lds
movntq
imul
cmpps
and
aaa
sbb
mov
std
inc
fstl
cltd
jle
dec
pop
xor
pop
xchg
bound
into
pop
divb
xor
inc
outsb
sub
mov
fsubrs
inc
pushf
pop
sbb
jge
bound
ror
movsl
mov
or
int3
xor
sbb
push
inc
popa
inc
mov
xchg
jmp
out
sbbl
jnp
add
jno
aaa
pop
dec
dec
shr
dec
or
mov
add
jge
xor
adc
inc
mov
shl
call
pop
out
inc
sub
call
xchg
movsb
push
push
adc
mov
xchg
sbb
ficompl
std
faddp
fisttpl
std
xchg
mov
ret
add
pop
inc
xchg
jp
xchg
xchg
push
movsb
lahf
rol
dec
shl
mov
arpl
push
push
aaa
push
mov
repz
sbb
stos
cmp
cmp
mov
aad
or
cmc
dec
insb
das
in
pusha
popf
push
shlb
cmp
mov
jns
add
ss
and
js
pop
scas
mov
or
lods
lret
das
aad
pusha
mov
lahf
pop
fs
mov
loopne
sub
mov
out
cmp
movsl
and
aaa
add
xchg
jns
pop
mov
mov
add
sbb
mov
addr16
jae
aad
xchg
ss
dec
and
mov
push
sti
push
add
es
xor
nop
xchg
stos
dec
stc
mov
int3
jnp
bound
add
mov
jl
add
and
push
fmulp
in
into
fisubl
or
push
pop
in
fdivs
or
andnps
or
add
mov
xchg
push
jns
mov
imul
mov
iret
or
scas
sarl
insl
cmc
mov
sub
add
imul
sub
xorl
popf
inc
fmulp
adc
push
bound
fstpt
inc
test
stc
xor
sahf
push
pusha
hlt
mov
xor
jno
int
repnz
cmp
cwtl
sub
arpl
cmc
pop
and
out
and
add
aas
aaa
mov
mov
mov
sub
sbb
inc
aad
lock
addr16
andb
dec
and
cltd
sbb
inc
pusha
add
mov
inc
mov
out
or
adcl
imull
lahf
lahf
push
and
mov
js
mov
lahf
jge
daa
sub
mov
xchg
movsl
ljmp
pop
out
ljmp
ret
lret
fldcw
xchg
leave
cs
fmuls
dec
mov
jbe
sub
inc
imul
cmp
out
dec
inc
push
jp
push
mov
cmp
repnz
push
mov
dec
pop
pop
shl
jnp
icebp
fiaddl
jbe
in
jle
call
aaa
fs
cmp
rolb
outsl
mov
int3
push
test
push
sub
or
dec
jb
inc
mov
dec
call
or
mov
xor
add
movsb
ja
and
pop
mov
pop
scas
les
sub
cmp
pop
stos
pop
andl
fwait
movsb
cmp
fwait
push
dec
adc
mov
push
sub
aad
cmc
adc
adc
mov
repnz
dec
jnp
lea
jge
sbb
pop
ss
xchg
mov
sbb
xor
popa
mov
cltd
dec
xor
and
mov
cmpsl
je
ficoml
dec
in
cld
or
jns
mov
popa
adc
jge
or
push
mov
std
frstor
and
enter
mov
and
fstp
push
sbbl
jns
push
popa
pushl
out
jge
stc
pop
pop
pop
push
cmc
xchg
xchg
xchg
mov
jno
insl
fwait
push
outsl
mov
lahf
or
add
push
iret
in
add
jo
xorb
fbld
jns
jl
inc
lock
mov
mov
dec
fnstenv
int
add
je
inc
push
sbb
pop
and
not
jno
outsb
mov
test
sbb
mov
or
pop
jae
cmpl
imul
sbb
xor
or
push
movsl
imul
outsb
lods
prefetchw
add
xor
rcrb
mov
insb
inc
cmp
sub
sub
data16
push
and
inc
cmp
dec
add
inc
scas
cmp
mov
sar
mov
adc
out
mov
mov
ret
mov
xor
lcall
sbb
fsubrl
mov
inc
dec
jbe
jl
jb
xchg
lahf
mov
inc
lea
xor
push
xchg
repnz
adcl
sahf
lods
adc
dec
adc
int3
sbb
lock
rclb
clc
ja
jmp
dec
rcrb
adc
daa
xchg
popa
adc
sbb
or
jp
fldt
fwait
stc
lret
shrl
adcb
lret
xchg
xor
mov
mov
out
mov
fimull
insb
add
enter
stc
and
dec
mov
loop
xlat
pop
cmp
pop
divb
mov
inc
add
mov
push
jl
jnp
cmp
sub
lret
sti
nop
sbbb
sbb
fs
dec
mov
cmp
imulb
cmpsb
sbb
insb
mov
sahf
add
xorb
push
mov
xor
data16
xchg
push
or
movsb
cmp
stc
leave
and
ret
push
test
rorl
mov
mov
inc
push
dec
cmpsb
mov
xlat
jle
xchg
mov
aas
mov
mov
ljmp
mov
enter
adc
and
xor
je
inc
test
xchg
popa
outsb
xchg
mov
movsl
mov
cld
adc
cmp
aaa
pcmpeqw
test
ja
push
cmpsb
mov
fidivl
pushf
adc
cli
sbb
data16
add
xor
mov
or
stos
inc
xchg
xsha1
adc
test
fs
fcmovnu
cmp
push
mov
jp
daa
outsl
mov
mov
mov
dec
dec
shlb
test
cmp
cwtl
mov
scas
mov
loopne
push
inc
into
sbb
adc
fdivrl
data16
push
mov
pop
int
dec
push
lock
iret
jg
push
adc
mov
xor
or
sub
cmp
stos
jecxz
xchg
enter
insb
cmpsb
les
roll
loope
in
movsb
test
sub
push
cwtl
or
rcll
jno
enter
out
dec
cmp
sbb
adc
inc
das
cltd
call
mov
mov
flds
add
loopne
fidivs
push
add
xor
pop
xchg
jne
in
mov
lret
mov
les
testl
test
mov
sub
imull
clc
jb
sub
mov
mov
rcll
mov
stos
mov
push
push
mov
jecxz
bound
faddl
xchg
xor
movsb
test
lea
ja
shrl
je
call
xor
mov
mov
sbb
in
iret
data16
aas
es
xchg
mov
inc
lcall
and
ss
pusha
push
call
lret
ss
ja
mov
and
iret
push
push
sti
fcomps
add
xchg
movsb
fs
pop
jb
sub
ficompl
in
mov
jae
xor
dec
test
test
das
xchg
mov
icebp
dec
push
xchg
out
bound
mov
jl
stos
jne
sbb
adc
sbb
pop
hlt
sbb
stos
imul
pop
mov
jle
je
inc
std
pop
inc
ljmp
sbb
ss
cmp
inc
clc
adc
ss
inc
out
xor
imul
test
or
xchg
mov
aas
push
out
ss
out
inc
frstor
iret
pop
mov
stos
ret
sbb
fs
jne
add
adc
inc
and
hlt
mov
movsl
adc
mov
and
pop
loope
mov
adc
pop
loope
cltd
sub
int3
adc
mov
cmp
and
test
push
mov
push
jns
pop
stos
dec
cmp
pop
negl
test
xchg
mov
lds
aam
je
sub
mov
mov
imul
inc
xor
lds
ja
inc
lret
subb
fwait
mov
and
cmp
or
cmp
cmp
notl
jno
lock
mov
pop
rcl
mov
jp
mov
inc
jecxz
lods
xchg
inc
les
adc
mov
fcmovb
jge
pop
adc
sbb
fbld
add
cmpsl
or
push
cwtl
int
and
and
cli
leave
mov
js
push
sbb
imul
aas
ljmp
push
jmp
test
mov
shr
add
call
cmp
inc
sub
das
shl
cwtl
xor
mov
mov
push
jbe
stos
pop
dec
xchg
cmc
push
andb
cld
mov
push
nop
pop
sahf
mov
xor
cld
xchg
add
sub
or
shr
test
in
jno
ret
repnz
jecxz
pop
xlat
xchg
int3
cmove
jnp
and
les
xchg
dec
push
dec
push
add
jecxz
push
sub
xorb
pop
mov
inc
and
arpl
rep
sub
lcall
xchg
lea
and
mov
push
or
add
and
pop
xchg
inc
and
outsb
fsubs
sti
pop
and
cmc
fnstcw
ret
arpl
pusha
or
pop
xor
or
xor
push
push
in
pop
xchg
xor
dec
sub
xchg
pop
xor
leave
adc
mov
stos
mov
push
lret
xchg
jnp
push
push
and
or
aad
push
insb
cmc
cli
loopne
fcmovne
adc
pushf
gs
push
adc
xchg
sub
loope
ficoml
mov
push
sbb
or
cmp
xor
sbb
inc
pop
mov
das
cmp
shrl
adc
fstpl
push
jle
test
test
movsb
jnp
add
dec
push
test
mov
movl
outsl
in
test
push
notb
sub
fnstenv
sbb
or
movsb
rcll
xlat
outsl
sbb
test
fists
pop
jne
js
enter
cmp
or
jae
fwait
ret
pop
int3
adc
icebp
push
mov
jb
or
sub
dec
pop
dec
gs
lret
inc
sbb
cmp
pop
jne
stos
mov
dec
pushw
adcl
sbb
add
rcrl
add
lea
out
icebp
sbb
das
movsb
arpl
inc
repz
jecxz
fidivl
aam
je
clc
clc
pop
ret
push
adc
or
shll
pop
jbe
movsl
sub
loop
clc
inc
aaa
add
push
xchg
dec
ds
inc
fsubrs
push
in
inc
xchg
test
xchg
push
cmpsb
call
and
jno
pop
sub
xor
xor
cmp
push
ud1
mov
imul
ret
inc
andb
fidivl
div
sub
pop
into
gs
mov
mov
add
mov
xchg
idivb
mov
in
sbb
mov
mov
call
out
adc
repnz
or
mov
testb
movsb
popa
rcrl
shlb
cmpsl
pop
lds
jmp
pop
push
es
les
fildll
insl
cwtl
in
das
push
xor
sub
pop
lods
outsb
in
rclb
and
shlb
pop
scas
jle
lcall
dec
repnz
jg
out
popa
xor
xchg
cmp
push
in
push
movsl
sub
icebp
mov
sub
adc
or
in
fcomps
inc
shrb
es
insl
jl
imul
enter
ss
sbb
adc
inc
add
jmp
mov
insl
daa
jo
je
and
jne
mov
sub
mov
inc
cmpsb
inc
mov
and
out
xchg
aas
pop
dec
in
dec
push
andb
insb
pop
das
lcall
sbb
testl
fldcw
mov
outsl
lcall
cmp
cli
mov
mov
test
mov
stos
and
add
adc
adc
cmp
sub
in
dec
ret
inc
dec
negl
inc
movl
push
mov
push
lock
mov
push
pushf
xchg
leave
shrb
sahf
inc
xor
fists
or
or
pop
push
arpl
mov
aaa
push
mov
dec
bsf
lahf
adc
lods
ret
add
jecxz
orb
ja
cmp
shrb
movsl
push
xchg
or
mov
xchg
mov
fiaddl
loop
out
adc
scas
pop
xchg
or
popl
adc
fxch
bound
adc
sub
loopne
ljmp
xchg
mov
adc
cmp
pop
lcall
cli
sub
sti
sti
lea
xchg
insb
and
jno
mov
pop
cmpsb
mov
mov
push
aad
push
lock
clc
dec
adc
push
jl
loop
add
mov
popa
adc
je
pushf
ja
outsb
pop
dec
add
jg
outsl
jns
pop
imul
mov
imul
loop
ds
or
out
dec
mov
xchg
push
xchg
or
fidivrl
mov
addb
fidivrl
jp
xor
cli
and
and
xchg
adc
in
dec
inc
pop
xchg
lods
inc
cld
mov
les
xor
inc
and
jmp
popa
movsb
es
lret
sbb
push
add
inc
xchg
xchg
sub
jnp
fidivs
pop
ja
lods
adc
fbstp
xchg
mov
or
clc
cmp
add
mov
push
and
inc
fnstenv
push
jo
sarl
push
adc
iret
and
mov
sarb
add
push
sbbb
aam
fs
push
lret
insb
insl
imul
ss
cltd
jnp
and
test
psadbw
aad
clc
adc
xor
movsb
std
adc
in
int
adc
das
mov
pop
push
sbb
mov
jp
rcrb
mov
xchg
test
inc
loope
dec
and
dec
cltd
pop
adcl
fisubrl
lahf
or
je
aaa
sub
jo
in
pop
mov
xor
jecxz
adc
lcall
cmp
cmp
lcall
xor
jmp
jp
xor
and
enter
xchg
daa
or
dec
mov
add
ljmp
ret
js
mov
pop
std
popf
sbb
push
mov
or
jl
inc
adc
add
add
push
scas
rcl
imul
pop
iret
cmpsl
jmp
int3
lock
and
fbstp
sub
leave
int
pop
repnz
lds
les
loop
ret
dec
mov
pop
adc
cmp
out
test
pop
jp
push
sub
add
adcb
pop
add
push
cmpsb
pop
mov
stos
sbb
je
dec
mov
mov
ret
nop
daa
adc
movsb
sbb
mov
jle
adc
lock
in
sub
adc
cli
push
fstpt
pop
push
add
shlb
and
dec
lret
stos
jp
int
jecxz
cld
adc
inc
movsb
cmp
jle
movsl
pop
stos
inc
popa
or
or
sarb
xchg
bound
sbb
add
pop
test
dec
lfs
push
jecxz
xchg
popf
inc
outsb
shl
push
push
jae
jecxz
insb
cmpl
gs
and
mov
cltd
push
mov
push
push
and
or
test
xchg
dec
lahf
sbb
sub
cmpsl
std
adc
jecxz
and
inc
icebp
imul
mov
mov
in
cmp
addr16
push
push
dec
mov
jg
xchg
insb
insl
nop
repnz
rcrl
xchg
dec
das
clc
lods
and
mov
lcall
xor
xlat
in
jmp
xor
pop
out
rolb
pop
das
mov
fsubrl
and
orb
sbb
and
adc
sub
bound
mov
adc
push
mov
mov
mov
sub
mov
mov
lret
test
and
into
test
xchg
sahf
rcll
and
cmp
jle
mov
rorb
lret
sbb
data16
or
out
arpl
pop
pop
lea
dec
cmp
out
imul
xchg
jle
fdivl
lods
xchg
pop
inc
sti
std
fldt
cwtl
sbb
scas
call
out
inc
dec
mov
or
das
push
cmpsl
xlat
jecxz
mov
lock
arpl
cmp
pop
push
pop
sti
movsb
cmp
aaa
iret
mov
push
add
sub
nop
sub
dec
scas
jecxz
fisubrl
mov
adc
or
out
jne
mov
icebp
out
sbb
mov
sbb
mov
mov
mov
bnd
fs
push
mov
stos
fwait
test
xor
mov
add
and
mov
xchg
sub
and
imul
cmpsl
or
loope
xchg
out
aad
call
in
lods
decb
sbb
in
add
pop
in
negl
or
and
test
cmpl
inc
repz
xor
sub
add
loopne
jo
scas
in
std
pop
icebp
stos
sub
pushf
inc
lds
addr16
fdivs
xor
iret
loop
dec
mov
mov
nop
ss
sbb
xlat
sub
shr
repnz
push
dec
sarb
mov
out
stos
mov
mov
push
sub
cli
push
mov
and
push
mov
stos
into
pop
cmc
jne
pop
icebp
and
dec
movsb
jge
test
fs
sub
daa
jp
push
repnz
xchg
lods
cmp
dec
ja
clc
xchg
mov
mov
pop
or
sub
cmp
insl
call
std
inc
stc
call
pop
mov
je
and
test
jg
out
cmpsl
lods
mov
pop
fidivs
mull
testl
fs
aas
outsl
mov
je
jae
and
sub
js
cmp
jg
stos
push
pop
cmc
inc
push
dec
lea
in
fisttps
mov
sub
pop
fcmovb
sub
add
jge
push
mov
cmpsl
xchg
aam
inc
std
pop
mov
jge
push
sti
xchg
mov
ret
leave
cld
mov
dec
add
pop
es
push
xchg
add
pop
insl
cmc
push
cmp
in
insl
scas
dec
fisttps
jae
fcoms
jbe
stc
inc
divl
aad
in
cwtl
inc
stc
in
leave
fcompl
jge
xor
add
jnp
popf
data16
mov
add
das
mov
lret
fistpll
cmp
iret
push
pop
jne
je
or
imul
mov
push
cwtl
or
jnp
test
pusha
xchg
flds
cmp
mov
xor
into
inc
sahf
jbe
xchg
or
inc
in
add
sbb
jg
inc
sbb
mov
test
jl
cmp
push
sahf
repnz
or
sbb
jge
js
and
fnsave
orb
xor
popa
fidivrl
jmp
or
mov
cwtl
addr16
xlat
fs
jbe
stc
jmp
hlt
ss
jbe
icebp
mov
xchg
ret
add
jecxz
jne
fimull
xchg
xor
addr16
push
testb
sti
sub
lret
dec
inc
out
push
sub
cmp
mov
mov
and
xor
mov
fcomi
add
rcll
out
mov
mov
jb
dec
inc
xlat
jmp
xchg
xchg
sbb
dec
jno
in
jg
lock
jae
push
and
sarl
lods
hlt
adc
dec
in
sub
dec
pop
test
pop
ja
repnz
push
mov
xchg
out
xor
imul
sbb
popf
inc
xchg
cs
jge
test
sahf
sub
shrb
adc
mov
jmp
lds
lret
lret
test
and
outsl
lret
lods
inc
cld
push
hlt
adc
lret
push
popf
mov
mov
sub
pop
aad
push
insb
popl
cld
rep
rolb
add
lret
cmpsb
jge
lret
enter
add
out
mov
stos
inc
mov
cmp
test
mov
rep
push
mov
and
mov
mov
or
loopne
pop
rorb
mov
in
jae
call
lds
out
jo
xchg
movsb
shr
imul
sbbb
ljmp
inc
pop
jnp
lret
out
outsb
cmc
enter
rcr
lret
xor
mov
mov
xchg
test
lds
lds
insl
xchg
sbb
lea
push
or
mov
or
mov
mov
lahf
pop
js
out
outsl
dec
popf
push
mov
mov
jg
fistl
mov
ds
add
push
inc
jne
je
arpl
mov
pop
shrl
fldpi
or
test
pop
jmp
mov
dec
add
out
jno
mov
addr16
pop
imul
imul
out
push
pop
push
jo
das
jbe
jno
ret
loope
jbe
push
mov
sub
adc
ret
push
lds
lea
in
adc
gs
mov
roll
mov
shll
add
test
pop
adc
test
lret
jnp
sbb
mov
push
stos
std
mov
repnz
mov
push
test
push
iret
mov
insl
mov
test
movsl
push
leave
cmp
stos
mov
out
lret
pop
insl
cli
jg
push
popf
lcall
mov
stc
dec
inc
fldcw
fldt
clc
dec
pop
bnd
out
iret
push
jp
fwait
insl
shr
xchg
mov
or
int3
into
nop
daa
add
xchg
data16
out
jno
mov
test
imul
int
pop
mov
xlat
cli
fs
add
add
and
lret
cmp
test
movsb
ficoms
pusha
jl
add
ror
mov
mov
mov
fcoml
mov
frstor
mov
pop
aad
or
arpl
jmp
stc
dec
cmp
out
lea
or
js
mov
push
mov
imull
mov
add
cmp
lds
xchg
popf
mov
fucomip
popf
data16
mov
or
mov
xor
aas
mov
hlt
xchg
pop
mov
les
mov
stos
loope
fdivrl
inc
push
or
xchg
mov
fcompl
ror
cmp
fwait
inc
insb
movsb
pop
adc
cli
xchg
and
mov
push
cld
cmpsl
xor
pop
jb
mov
shll
aam
xor
inc
lea
push
sbb
mov
jns
pop
movsb
cmp
cmp
movsl
cmc
sub
sbb
push
cmpsl
mov
jge
scas
xchg
jne
xchg
xchg
sbb
mov
clc
mov
jae
fsubr
xchg
loope
mov
cmpsb
push
mov
daa
push
or
and
sbb
add
sbb
mov
sub
or
aas
pusha
mov
aad
cli
and
or
cwtl
cmp
push
cs
pop
and
push
or
test
xor
call
loop
jmp
fsubr
test
gs
mov
dec
adc
loope
sub
cld
or
or
lods
push
sbb
mov
adc
mov
popf
jbe
sbb
call
das
sbb
test
mov
sub
pop
push
cmpb
jl
jg
add
jge
and
jns
sbb
pop
dec
xchg
jle
mov
in
pop
xchg
pop
mov
add
aam
add
stos
jb
outsb
cmpsb
pop
sahf
add
rolb
jecxz
pop
lret
clc
mov
mov
xor
stc
int3
mov
add
divl
fdiv
xchg
stos
sub
pop
or
lods
cmpsl
cmpsb
mov
sub
dec
aas
mov
loope
adc
negl
test
pop
ss
insb
insl
cmp
cmp
lahf
scas
push
in
inc
ds
int
ljmp
sbb
push
ss
xor
mov
outsl
pushw
mov
fldenv
pop
push
mov
xlat
pop
mov
cli
mov
repz
and
sarl
sub
out
cli
cltd
popf
add
sbb
pop
sahf
inc
jbe
repnz
je
adc
and
andb
and
aas
aam
mov
pop
jae
in
popf
adc
aaa
iret
xchg
or
xor
orl
xor
mov
hlt
xchg
fidivs
stos
and
cmp
pushf
inc
fnstcw
movsb
pusha
jnp
dec
stos
inc
jp
subl
pusha
push
or
cmc
and
jb
movnti
daa
nop
sub
mov
sete
inc
push
jnp
pop
repnz
jge
das
mov
mov
or
mov
jns
rcrb
sti
loopne
mov
ret
jp
jg
cmpsl
loopne
mov
jge
clc
xchg
into
mov
lock
test
jge
sub
inc
insl
in
sub
fstps
or
sub
adc
jmp
or
in
mov
pop
jg
insb
add
mov
mov
sub
pop
push
dec
jp
jns
loopne
pop
ss
mov
leave
mov
cld
outsb
push
cwtl
xchg
and
fwait
sub
insb
fisubrl
push
ljmp
jno
es
xchg
push
outsl
movsl
jmp
sub
pop
or
pushl
ret
cli
ret
movsb
adc
xorl
arpl
shlb
or
fwait
addr16
cli
pop
std
or
clc
sub
xlat
testb
jae
pop
mov
push
outsl
push
mov
dec
loopne
cmpsb
cmp
lock
cld
adc
test
icebp
xchg
out
jg
dec
stc
cwtl
push
out
loope
jo
ror
mov
mov
fs
push
lods
push
stos
push
ja
cld
jge
push
lods
ljmp
lock
xchg
pop
leave
jo
mov
fstp
xchg
rolb
fsubr
xor
sahf
jge
xor
loop
mov
xchg
push
add
aam
bound
lahf
test
or
mov
vpunpcklqdq
cmp
mov
fdivs
std
xchg
push
jae
in
mov
cmpsl
jg
dec
insl
dec
into
and
dec
out
cmpsb
add
pop
pop
cld
test
inc
lahf
cmp
fucomi
mov
fldl
push
and
cmpsl
push
mov
mov
push
or
pop
push
push
xchg
insl
leave
pop
icebp
jl
scas
imul
sahf
into
pop
and
push
add
movb
adc
movsb
idivl
xchg
cmp
jne,pt
hlt
sbbb
in
je
jns
sbb
fs
mov
mov
fwait
out
mov
cmp
jg
pop
cmpsl
stc
adcl
xor
lea
in
popa
stc
or
and
gs
add
lret
shrl
cld
mov
dec
jns
inc
stos
in
fld
mov
fnstenv
cmpsb
push
inc
or
scas
mov
in
xchg
and
push
add
sbb
jbe
outsl
xor
out
in
mov
ficoms
loop
insl
aaa
add
push
fsubrs
lahf
int
loopne
ja
out
lea
dec
mov
fcmove
xchg
xor
jl
dec
xchg
mov
add
pop
cmpsl
out
cmp
cmp
in
lock
mov
xor
rcl
outsb
popa
cmp
mov
shrl
inc
je
xor
pop
dec
enter
cmp
xchg
sub
data16
jb
imul
pushf
xchg
cli
and
out
cmp
lods
arpl
jb
icebp
dec
xor
jecxz
push
pop
sbb
scas
add
push
jnp
push
and
les
and
or
cld
mov
call
adc
adc
cwtl
push
sub
in
andl
sub
cmp
lcall
lea
mov
es
or
clc
mov
and
sbb
pop
lea
fadds
add
out
roll
cmp
pop
cmp
dec
fcmovbe
and
mov
pop
in
shrb
ficoml
jl
ret
arpl
xchg
cmc
clc
mov
pop
stos
rolb
in
loopne
or
aam
sub
or
mov
int
pop
jo
fidivl
loopne
lahf
popa
mov
adc
or
push
or
into
and
sti
mov
call
repnz
xchg
push
lcall
push
das
mov
adc
imul
gs
fwait
cli
xchg
add
xchg
mov
mov
inc
pushf
push
xchg
push
ret
gs
mov
push
adc
data16
mov
imul
pop
dec
pop
popf
scas
ret
sahf
pushf
sbb
out
push
mov
sub
add
fidivl
mov
shlb
adc
test
arpl
push
aad
out
cmp
xchg
xor
adc
cmp
pop
out
bound
roll
out
cmp
inc
push
mov
cmc
inc
cmpsl
imul
sbb
mov
addr16
fidivl
lea
mov
xchg
add
jg
andl
xchg
sbb
testb
add
ret
xchg
jg
sbb
mov
iret
data16
mov
mov
in
push
icebp
pop
cmp
mov
test
std
push
push
test
push
fists
mov
and
pop
lahf
mov
mov
pop
xchg
aas
push
mov
add
jecxz
ljmp
sbb
sbb
fcompl
lock
push
mov
js
out
cmpsb
cmp
jae
xor
mov
in
out
or
xchg
xor
inc
inc
xorl
and
xor
xchg
jle
stos
pop
sbb
or
xchg
push
test
out
repz
sub
dec
enter
fucomp
fnstsw
lods
inc
jne
imull
lods
lcall
mov
mov
or
cmp
mov
inc
sti
jl
stos
in
mov
cmp
cmc
mov
outsl
or
rcrl
pop
lret
shrl
jnp
fcoms
mov
clc
push
test
aas
jg
repnz
push
fyl2x
dec
pop
mov
in
mov
lea
test
fists
mov
push
loop
sub
sub
mov
in
sbb
add
pop
scas
mov
subl
sbb
fwait
xor
nop
js
xor
push
xor
lods
push
popf
mov
hlt
es
out
mov
sub
xchg
cmc
outsb
xchg
popa
jl
out
ja
popf
out
and
out
xchg
jno
add
add
jmp
mov
outsl
loop
insb
testb
dec
stc
test
mov
pop
cmpsb
shrl
xchg
lods
sbb
bound
push
cmc
sub
mov
pop
iret
jp
inc
sub
adcl
aas
out
inc
mov
fwait
lret
pop
mov
popf
cmp
adc
mov
xor
jecxz
or
fwait
enter
lret
xor
loope
in
mov
pop
test
fsubl
fmuls
or
sub
lret
push
mov
in
push
movsl
cli
enter
sbb
jno
inc
pusha
mov
jg
leave
mov
mov
in
push
mov
js
scas
rcrl
xchg
cli
jno
mov
xlat
test
rcr
arpl
fdivrs
addb
das
popf
mov
cmc
call
test
and
rclb
cmp
hlt
mov
daa
jno
lcall
and
aaa
lods
loop
inc
push
cmc
inc
sub
cmc
xchg
loope
push
lret
pop
outsb
lock
ficompl
ss
jecxz
lods
inc
clc
loopne
cmp
das
js
pop
stos
push
mov
jge
xchg
adc
jnp
js
add
dec
pop
push
jp
test
imul
mov
loopne
pusha
adcb
inc
cmove
fldcw
fistl
xchg
imul
shlb
lods
les
scas
inc
push
out
arpl
sub
daa
cmp
lods
test
adc
pop
cmp
in
adc
pop
lcall
push
xchg
fs
mov
in
test
outsb
mov
jl
and
scas
loop
sub
cmc
js
xor
or
xchg
jns
and
dec
cmp
lods
ljmp
imulb
lock
push
push
mov
xchg
inc
or
mov
mov
add
pop
insb
xchg
imull
mov
mov
insb
mov
and
jbe
xchg
mov
fcoml
loop
sbb
testb
jns
repnz
mov
loopne
pop
aas
popa
clc
outsl
es
inc
and
and
fldt
xchg
ja,pn
xchg
pusha
and
call
jge
push
pop
sbb
xor
shr
pusha
loop
cmp
in
cmp
adc
iret
aas
shlb
inc
rolb
test
or
nop
ss
aaa
jmp
mov
imul
pushf
jge
dec
mov
sbb
dec
mov
and
sbb
fsubr
mov
pop
push
stos
loopne
sbb
shlb
ret
sbb
xor
mov
mov
xlat
push
adc
das
cmp
int
xchg
sbb
cltd
push
arpl
js
in
std
hlt
cltd
cmp
pop
xorb
mov
in
sbb
sbb
jae
outsb
pop
popf
mov
sub
mov
inc
lret
jge
lods
sti
loope
movsb
jae
jp,pt
idivl
sbb
lret
nop
fidivl
cmpb
mov
bnd
aad
cmp
lds
pop
fistps
pop
aad
pop
andb
in
cmp
mov
mov
cmpsl
into
xlat
mov
bound
mov
inc
adc
jnp
jle
int3
mov
stos
cmp
push
mov
inc
outsl
and
pop
and
popa
aam
xor
test
pop
fsubrs
pop
fidivrl
cmp
pop
cwtl
lret
scas
mov
arpl
pop
ljmp
imulb
icebp
adc
sti
je
icebp
cmp
dec
loope
mov
push
rcll
out
fisubrs
dec
scas
mov
ss
mov
xor
addl
jbe
jo
ljmp
insb
lret
icebp
push
dec
insl
sub
mov
pop
ljmp
imul
jnp
adc
inc
inc
incb
mov
xor
xchg
jl
or
xchg
jae
pop
mov
bound
in
xchg
movl
mov
mov
repnz
cmp
cwtl
jbe
lods
pop
push
push
out
xchg
lret
fmull
divb
stos
cwtl
repz
lods
pop
sbb
mov
xlat
sub
sbbl
sbb
inc
jno
cs
cs
jbe
adcl
pop
fstpt
add
xor
andl
mov
adc
inc
insl
sahf
addr16
loop
dec
loopne
jl
push
pushf
int3
mov
mov
jge
push
and
jl
jle
sarb
adc
es
stos
mov
jo
ja
sbb
sbb
fidivs
aaa
pop
mov
mov
and
rcrl
pop
jmp
mov
and
sarb
xchg
gs
ret
test
subl
addr16
mov
nop
into
sub
mov
dec
lea
iret
loope
xchg
fmulp
xor
test
aad
mov
pop
scas
fucom
adc
out
adc
adc
mov
aaa
mov
out
cmpsl
psrlw
iret
cwtl
and
xchg
xchg
ret
ja
cmp
cwtl
das
push
je
push
dec
movsb
aaa
call
jnp
mov
or
das
outsb
push
les
push
adc
inc
js
aaa
mov
ja
inc
scas
mov
cmp
inc
ljmp
fnstenv
adc
dec
leave
pusha
clc
lret
mov
fbstp
fwait
jl
mov
cmp
sbb
lret
cmp
adc
mov
xor
test
decb
add
xor
and
lods
test
xchg
mov
pop
mov
mov
mov
rorb
jge
ds
sub
es
jle
addr16
xor
mov
clc
ja
int
push
clc
adc
and
and
ret
js
bound
pop
shr
xchg
or
out
mov
shr
xor
adc
pop
lahf
cmpsl
mov
push
int
mov
outsl
arpl
or
cs
adc
inc
cld
xchg
jb
dec
in
mov
insb
push
add
fdivp
pop
adc
push
or
fildl
rcl
imul
iret
stos
cmp
mulb
adc
dec
jmp
mov
push
xchg
pop
pop
cmp
or
arpl
xor
adc
mov
adc
push
push
and
jecxz
test
cmp
cmp
mov
xchg
mov
cmpsl
xchg
mov
cmp
xchg
add
jp
data16
js
inc
adc
pushf
fs
mov
mov
sub
sub
hlt
into
cmpb
sahf
mov
add
or
pop
fimuls
fwait
sbb
dec
mov
icebp
xchg
pop
dec
xchg
aad
push
movsl
test
sub
int
je
in
cmp
xor
jo
lcall
sbb
icebp
gs
mov
ljmp
mov
sti
and
test
cmp
shr
subl
xor
adc
push
addr16
js
mov
lret
data16
jo
arpl
loop
fstl
outsl
adc
cli
aas
cli
andnps
mov
cmp
mov
movsl
dec
das
fdivs
les
cmpsl
dec
incl
xchg
data16
nop
sbb
lret
or
cmc
dec
pop
push
iret
jl
sub
lret
scas
xchg
les
push
ret
push
mov
or
cmp
or
ret
test
adc
or
mov
cmp
and
js
test
pop
insl
and
pop
out
jle
test
jp
adc
ret
xor
sar
fcomip
sbb
cmp
pop
xor
pop
jmp
push
fistpll
cwtl
push
pop
mov
test
andl
jl
mov
ret
shll
mov
dec
mov
mov
fisubrs
insb
inc
fldenv
and
pop
icebp
aam
push
mov
and
cwtl
add
dec
insl
xchg
scas
out
sahf
fbstp
lds
mov
pop
testb
loope
dec
roll
xchg
dec
dec
stc
es
fucomi
test
push
mov
mov
imul
push
adc
std
xchg
jge
xchg
addr16
js
dec
fldl
xor
fs
and
out
jmp
xchg
adc
call
call
fwait
in
into
xor
in
cmp
sbb
push
xlat
loop
push
test
mov
imul
or
adc
jae
mov
jne
adc
adc
je
mov
xchg
xchg
popa
clc
push
jg
hlt
inc
xor
inc
fnstcw
jmp
dec
ds
mov
bound
jne
fs
ficoms
sub
and
dec
sub
mov
sbbl
xor
outsb
clc
fcoml
jp
insl
aad
ret
call
arpl
inc
cmp
sbb
mov
cmp
cmc
adc
in
add
cmp
movsl
push
mov
ret
mov
dec
in
pop
fisubl
aam
nop
push
inc
bound
repnz
jo
fstl
fwait
orb
mov
repnz
push
ja
loop
sarb
in
repz
andb
adc
xlat
outsl
scas
inc
mov
dec
sahf
clc
in
adc
and
fwait
js
xlat
mov
addr16
pop
roll
cmp
push
push
repnz
les
dec
jns
adcl
cmpsb
lock
pushf
jns
lret
mov
lcall
push
jg
lods
mov
xchg
lods
xor
ja
outsb
sbbb
jbe
popa
cmp
xlat
clc
mov
mov
fbstp
stos
pop
pushf
mov
loopne
sti
adc
sbb
mov
rcll
mov
dec
cmpsl
mov
loopne
repnz
cmc
gs
movsb
adc
mov
adc
or
incl
cmpsb
lock
mov
cld
lcall
sahf
sbb
and
mov
add
cs
mov
lret
sub
std
mov
mov
and
outsl
push
je
cld
add
dec
push
imul
in
inc
xchg
jp
adc
push
and
mov
les
xor
in
mov
popa
out
push
xchg
mov
loopne
mov
lock
xchg
cmpsl
lcall
mov
mov
test
push
fsts
inc
xchg
ficompl
test
mov
jb
data16
setnp
cli
push
cwtl
jl
leave
stc
mov
outsl
mov
mov
push
sbb
dec
adc
pushf
fs
mov
loope
mov
call
pushf
push
iret
pusha
adc
lcall
dec
jmp
cltd
inc
sbb
dec
dec
push
mov
cmp
push
pop
mov
mov
jg
push
jmp
pop
pop
push
sub
lahf
xor
add
jp
cmp
jge
adc
dec
add
inc
xchg
mov
push
in
addl
or
adc
lcall
jle
xchg
call
inc
je
sbb
fbstp
das
pop
mov
loopne
data16
leave
sbb
insb
adc
jmp
or
insb
pop
jle
inc
mov
sub
and
add
ret
mov
cli
test
cmp
out
push
repz
jp
pusha
fldt
and
mov
adc
inc
mov
mov
cmpl
cmp
mov
sub
mov
sbb
cld
cmpb
inc
push
ljmp
call
sub
pop
pop
data16
adc
icebp
movb
out
enter
aaa
into
inc
xor
jns
rol
add
loope
inc
xchg
sub
mov
mov
das
xchg
mov
sbb
movsl
inc
mov
add
jne
pop
lods
and
adc
cmpsb
cmp
cmp
pop
das
jmp
jae
test
and
mov
mov
push
and
scas
and
mov
add
mov
inc
je
aam
les
hlt
fs
fcoml
pop
outsb
out
xchg
pop
scas
ret
pushf
jo
dec
outsl
xor
int
mov
test
popf
and
push
mov
inc
arpl
ret
ja
sbb
inc
push
stos
push
pushf
and
inc
sbb
pop
dec
jbe
sbb
xchg
lcall
push
hlt
adc
loop
mov
fldln2
ss
fcmovu
push
xor
mov
and
roll
daa
daa
gs
cltd
push
dec
in
push
inc
jbe
fs
arpl
jecxz
outsb
lods
aam
xor
dec
jmp
or
push
or
cs
or
dec
jb
cs
jp
mov
test
enter
dec
jo
add
adc
pop
loop
fdiv
jl
sbb
and
cmp
and
push
call
in
fsubp
pushf
add
sub
cmp
lods
push
mov
je
call
or
stc
sahf
push
mov
push
mov
or
lock
pushf
cwtl
rcll
add
loop
mov
cmc
xchg
lea
mov
ret
out
clc
nop
mov
iret
cs
popf
popf
add
cwtl
mov
out
ljmp
cmp
decl
lcall
stc
and
pop
or
aas
es
dec
nop
aad
out
cmc
loopne
pop
subl
push
inc
fmuls
or
cli
push
jne
dec
aam
dec
push
mov
shlb
pop
out
or
jge
fdivs
cli
mov
or
cmp
adc
int3
xchg
sub
push
push
lret
mov
push
jnp
lock
pusha
loop
call
push
mov
shll
xchg
sbb
scas
pop
lds
int3
and
and
cmp
sbb
call
ret
cs
mov
loope
mov
int3
sbb
add
adc
enter
mov
aaa
das
sbb
bswap
push
std
cli
dec
jmp
loop
push
jae
cmpsl
sub
inc
repnz
push
bound
je
fisubl
test
and
jbe
mov
pop
cwtl
fists
and
pusha
push
inc
ficoml
not
fistl
push
sub
adc
ja
sahf
rcll
or
mov
test
mov
push
push
rorb
jno
pushf
cmp
rcll
add
fisttpl
mov
rcll
mov
ret
lods
and
push
dec
int
pop
daa
jo
or
dec
movsl
lahf
xchg
iret
stc
ljmp
inc
test
movsl
loopne
xchg
dec
jecxz
add
out
sti
xchg
jae
xlat
jo
notb
xchg
pop
je
stos
cld
lcall
mov
mov
out
js
push
mov
fs
mov
mov
jo
test
mov
ret
sub
push
push
sub
sbb
daa
movb
dec
fdivl
rcrl
add
and
inc
filds
je
test
rclb
shll
jmp
jb
int3
negl
repnz
sti
push
stos
push
mov
or
shl
cld
dec
cmp
dec
pop
dec
add
mov
xor
cmp
mov
sub
xchg
insl
stos
aaa
stos
cld
inc
les
sbb
jae
out
sub
jle
pop
push
in
fdivrs
or
insb
js
xor
pop
movsl
xor
icebp
push
out
in
push
lahf
ljmp
repz
sbb
cld
int3
loope
mov
xchg
xor
js
mov
insb
dec
iret
arpl
into
pop
imul
inc
je
jnp
xchg
incb
fwait
cmp
cli
ds
out
cmp
movsb
ss
mov
mov
cmc
shlb
je
scas
dec
ss
fidivrs
fcomp
fiaddl
mov
mov
xchg
imul
call
std
jmp
sub
xchg
or
ret
xor
pusha
mov
jbe
popf
test
adc
inc
sahf
das
pop
xchg
outsb
add
fcmovnbe
lret
and
add
lcall
in
xor
mov
pcmpgtw
mov
cs
fldcw
cwtl
test
movsl
cmp
cs
sbb
sahf
ret
fwait
out
xor
cltd
test
mov
fwait
sbb
pop
repnz
jbe
insl
loopne
test
xchg
push
lret
mov
sbb
push
jl
jecxz
jb
jl
or
in
pop
push
jl
xchg
mov
jle
xchg
sub
ret
or
mov
sub
push
jle
inc
xor
mov
push
sbb
xchg
fdivrp
lret
inc
ljmp
xor
jmp
xchg
fistl
loopne
xchg
mov
cltd
enter
decb
fnstsw
sub
mov
cld
dec
icebp
mov
daa
mov
sbb
mov
cmp
pop
out
pop
or
add
jno
cs
mov
lcall
movsl
lds
jg
sub
mov
inc
shrl
push
movsb
sbbl
jo
mov
aam
xchg
lock
add
std
scas
mov
sub
je
ja
mov
iret
dec
ss
push
inc
sub
pop
sbb
dec
pushf
sbb
inc
push
lea
pop
mov
frstor
mov
test
in
mov
mov
jle
pusha
daa
adc
dec
lock
iret
mov
subl
pop
jge
push
cmpsb
xchg
je
pop
and
aad
mov
sub
mov
bound
es
sbb
je
lcall
dec
testb
dec
test
das
cmp
pusha
sahf
sub
dec
adcl
popa
outsb
je
sbb
inc
mov
rcll
push
inc
sti
lret
pop
jb
mov
es
pop
in
and
fwait
dec
cmp
stos
pop
clc
test
sahf
jle
pop
js
adc
ljmp
dec
pop
xchg
mov
pop
jae
mov
add
lret
or
aas
or
push
ficoml
clc
push
sub
and
xchg
push
push
out
jle
mov
fsubr
das
test
imul
divb
movsb
push
mov
aaa
iret
pop
mov
scas
out
push
or
sub
cltd
jle
lcall
lcall
aas
mov
push
mov
fucomp
adc
aas
in
push
add
or
pop
mov
in
and
je
and
mov
rolb
add
pusha
inc
clc
jb
cmp
fsubs
aas
dec
in
and
mov
aaa
sbb
adc
cwtl
mov
push
shrb
dec
push
clc
jae
mov
inc
les
adc
leave
repnz
es
or
es
and
xchg
mov
out
into
js
sbb
pop
mov
sbb
sbb
into
xlat
xchg
jle
lods
push
aam
inc
xchg
mov
nop
mov
cmc
and
repnz
sbbl
dec
inc
mov
aas
add
imul
push
aas
mov
cmp
je
mov
nop
mov
jb
jge
aam
sbb
sub
cs
adc
test
cmp
mov
outsl
fs
mov
cmp
daa
mov
mov
sub
cli
xor
xchg
stos
cmp
pop
test
xlat
mov
cmp
imul
pop
adc
or
mov
add
sub
out
jecxz
insl
lcall
xchg
sub
mov
dec
into
mov
mov
cmp
fsubrs
or
cmc
pop
in
push
ss
ficoml
inc
cld
loop
call
mov
inc
notl
mov
ret
lret
loop
mov
xchg
lock
and
dec
repnz
push
sub
sub
mov
fstl
inc
mov
into
dec
lahf
test
shrl
pop
pop
lcall
push
pop
add
das
call
in
ljmp
jne
adc
jg
pop
mov
mov
gs
push
or
jne
test
adc
iret
push
je
clc
xchg
push
inc
int3
add
es
push
cltd
jb
ds
and
or
push
icebp
fldt
pop
hlt
inc
xchg
mov
stos
xchg
jnp
sahf
and
test
add
fs
lret
jae
mov
je
and
hlt
pusha
inc
ret
popf
dec
xor
into
lds
imulb
pop
ss
out
bound
rcrl
sub
data16
test
fdivrl
iret
pop
ss
mov
ds
loope
ds
incl
pusha
xor
xor
outsl
push
and
cmp
cmp
repz
sub
ret
dec
loope
shr
fsubp
popf
xor
sbb
xchg
pop
movsl
mov
xor
stc
jl
aaa
push
outsl
ret
inc
cmpsl
xchg
xchg
aas
data16
cmp
push
ljmp
and
push
daa
jge
adc
fstl
ja
out
popf
sti
sahf
decl
mov
sub
jg
jle
pop
mov
ss
adc
cli
mov
out
incl
inc
push
ljmp
icebp
mov
dec
mov
cli
xchg
and
ljmp
dec
push
xchg
cld
int3
mov
icebp
test
mov
int3
shll
fiadds
inc
xlat
adc
cmpl
push
out
cmpsl
xchg
mov
inc
jno
aam
mov
add
mov
lock
pand
ds
test
test
mov
test
cmp
into
faddl
mov
cwtl
test
sub
mov
jecxz
pushf
scas
pop
lret
cmp
imul
xchg
dec
stos
aaa
iret
xor
or
add
es
addr16
sub
push
mov
popa
add
jno
aad
xor
and
jb
stc
cwtl
sub
jno
std
jno
stos
daa
or
dec
ret
fdivs
adc
in
fcoml
incl
sbb
fmuls
bound
xchg
cmp
test
stc
push
dec
outsb
mov
dec
in
add
repnz
out
ret
xor
pop
leave
test
popa
mov
cltd
push
fsts
push
imul
les
mov
xchg
dec
fs
insb
push
test
jle
cmc
add
in
mov
and
push
in
fcmovnu
mov
mov
or
cli
cmp
outsb
add
insl
sbb
xlat
icebp
jg
shrb
and
xchg
fisttpll
push
jle
movsb
cmp
xchg
jae
cmp
cmpsl
sbb
or
rcrb
cmp
sti
pop
and
jecxz
or
ds
xchg
mov
and
mov
cmp
dec
add
popa
mov
cmp
iret
or
jg
popa
lods
aad
divl
mov
ret
xchg
outsl
incb
sub
or
push
dec
ficomps
test
adc
inc
add
sub
and
sti
divl
stc
mov
iret
fstpt
fmull
pop
out
out
push
mov
int
aaa
int
in
inc
or
lret
es
jbe
fwait
gs
sub
pop
cmpps
mov
popa
xor
inc
add
inc
adc
mov
sub
xor
popa
dec
stc
sbb
jle
insl
add
mov
ss
or
add
xor
mov
and
mov
ds
lcall
cwtl
mov
std
cmp
adc
jp
out
xchg
jp
lock
jle
jae
fsubrl
in
and
push
mov
aaa
in
pop
fildl
popl
mov
shll
insl
jb
or
rclb
les
outsl
cld
stos
mov
fnstsw
ja
movsb
stc
pop
lret
pusha
xchg
xchg
mov
iret
mov
jnp
and
hlt
js
add
mov
xchg
pop
fisubl
pop
hlt
inc
mov
sahf
loopne
fnstsw
int
and
xor
es
fidivs
jle
imul
xlat
mov
push
mov
stos
insl
fdivrl
xor
jle
jo
es
pop
sub
test
cmp
rcrb
adc
pop
add
mov
and
pop
int3
mov
repz
loopne
mov
ficoml
xchg
leave
hlt
clc
div
pop
mov
bts
lods
cmpsb
les
xchg
lods
push
jp
cmpsb
xchg
jl
xor
call
inc
jle
add
xchg
mov
popa
jns
shl
lods
jecxz
pop
imul
dec
movb
mov
add
cld
inc
sbb
push
dec
and
ds
pop
jg
das
sahf
dec
in
jns
out
mov
aaa
repnz
sub
inc
lcall
and
cmpl
arpl
int3
mov
in
arpl
in
sub
cmpsb
ja
mov
enter
enter
call
mov
scas
sub
loopne
fnstenv
jns
jge
icebp
mov
fldl
stos
xchg
sub
sub
and
sub
data16
adc
stos
sub
jae
jecxz
leave
xchg
test
or
scas
out
add
inc
sub
sbb
das
or
sahf
xor
inc
sbb
in
sarb
shll
fwait
in
mov
clc
movl
pop
ret
mov
or
mov
lods
mov
mov
insl
lods
pop
lret
je
sub
popf
xor
lock
jecxz
arpl
dec
dec
dec
mov
jne
push
imul
orl
xchg
push
ljmp
fistpll
xchg
loope
add
add
popf
dec
dec
mov
ds
insl
mov
in
pop
lret
cmpl
scas
adc
cmp
cmc
mov
into
mov
loop
xchg
mov
andb
jnp
and
movsb
nop
test
jne
mov
inc
addr16
iret
mov
xlat
jl
pop
sqrtps
fildl
aaa
mov
xchg
imul
insl
push
ss
lock
aas
dec
vhsubps
rol
pop
lahf
stos
sarb
ret
mov
push
pop
in
test
pop
fsubs
data16
outsb
sbb
mov
shrl
dec
xchg
mov
daa
hlt
sub
gs
into
divb
in
mov
cmp
pop
xchg
loop
test
out
or
arpl
adc
push
dec
or
cmp
pop
loopne
cltd
adc
sti
in
cs
in
sub
aad
stc
negl
int3
dec
lds
pop
pop
roll
imul
mov
xchg
jmp
imul
jno
xchg
push
xchg
loop
dec
hlt
pop
sub
in
dec
aas
jg
nop
mov
add
in
mov
mov
int3
dec
lahf
mov
lock
lret
insb
or
xchg
jge
int3
xchg
pushf
sub
mov
sbb
xor
or
xchg
xor
or
xor
aad
inc
fldenv
push
xchg
ljmp
inc
js
gs
daa
int3
repz
adc
xor
push
mov
jg
mov
sub
xchg
or
inc
call
fimull
repnz
sub
cvtps2pd
or
gs
xor
mov
and
lods
adc
sub
xor
push
jae
fildl
pop
add
cmp
dec
mov
mov
push
daa
or
insb
adc
in
ljmp
adc
aad
cmc
cmp
loop
hlt
xchg
test
xchg
pop
adc
inc
xchg
pop
out
pop
bound
or
leave
lea
sahf
lret
mov
roll
pop
add
xchg
sub
mov
push
cmp
or
mov
sub
mov
xchg
dec
xchg
add
jb
dec
dec
add
pop
push
dec
sbb
xchg
xchg
cmp
inc
inc
ret
fstl
test
inc
rcl
iret
out
pop
sub
popf
lods
loopne
lret
cmp
in
pop
shl
popf
addr16
and
repz
jno
test
jne
mov
rorb
aad
jbe
sub
mov
xchg
adc
mov
pop
dec
sbb
out
lea
jmp
lret
or
dec
int3
push
inc
sub
push
fcomps
mov
and
and
sbb
cltd
hlt
adc
and
push
test
or
adc
pop
sub
mov
lret
or
sub
orb
outsb
shlb
fcmove
sub
dec
dec
jecxz
subl
push
outsb
add
jle
pop
stc
sbb
mov
lahf
mov
fs
popf
and
adc
insl
inc
popf
xor
xor
mov
pop
xor
in
cs
negl
xchg
sub
push
mov
jmp
ljmp
mov
mov
push
ds
fiaddl
xchg
sub
nop
xor
scas
jge
inc
in
sbb
push
ljmp
pand
and
sub
xor
leave
pop
cli
cmp
rolb
daa
pop
jmp
pop
addl
dec
rcr
xor
push
and
dec
mov
arpl
and
mov
xchg
sarb
adc
mov
pop
cmp
or
mov
push
mov
jge
imul
pop
ds
pop
out
push
repnz
cmp
or
cmpsb
adc
cltd
push
in
fimuls
pushf
and
in
out
sbb
add
xchg
mov
jle
repz
push
push
loope
or
dec
pop
push
cmp
push
xor
hlt
dec
aaa
jl
lods
loop
ds
adc
sub
test
arpl
mov
ja
test
imul
mov
add
lcall
fsts
pusha
jecxz
dec
sbb
mov
cmc
nop
jae
outsb
adc
mov
mov
jge
add
outsb
sahf
movsl
adc
or
and
shrl
ljmp
mov
sbb
sub
dec
mov
mov
jmp
jb
inc
les
lods
test
into
gs
cmpsb
ss
cmp
cmp
push
jmp
pop
rclb
mov
std
fisubs
inc
adc
sbb
sbb
stos
and
jno
add
aam
add
mov
std
xchg
cmp
outsl
cs
inc
push
inc
fimull
mov
push
xor
loopne
jnp
in
push
lcall
push
cltd
int3
mov
adc
popa
ret
cli
xchg
mov
xor
jo
shlb
mov
out
lds
cmp
lahf
cmp
loopne
fcomi
js
std
out
ret
mov
pop
rcrl
sbb
jmp
pop
jle
into
js
adc
xor
nop
in
or
mov
jb
inc
bound
dec
jmp
jl
out
push
pop
shl
movb
cmp
and
xor
pushf
inc
lret
jo
dec
add
cmpsb
mov
push
mov
add
sub
call
push
std
sbb
fcomp
xor
dec
and
pop
dec
mov
dec
in
aad
dec
pop
xor
add
addr16
cmp
inc
lret
push
in
xchg
fsub
je
sbb
popf
or
inc
fs
je
xor
fwait
sar
cs
adc
pusha
xchg
mov
xchg
push
jns
xchg
xor
dec
cmp
cli
mov
iret
dec
dec
or
xchg
inc
push
test
lds
xchg
rcrl
cmp
mov
aad
lret
cmpsl
nop
daa
sbb
test
test
lods
inc
sarl
out
dec
cmpsb
in
xchg
popf
jmp
mov
outsl
inc
out
and
mov
xor
iret
dec
daa
cli
stos
inc
jl
lods
mov
fimuls
push
mov
push
fdivrs
clc
lret
sbb
lcall
cmpsl
mov
sbbl
adc
bound
ror
je
call
fsts
push
lods
clc
test
xlat
imul
mov
mov
pop
aas
cmp
pop
xchg
pop
rorl
mov
fmull
push
sbb
dec
in
test
scas
rcrl
popa
push
sub
ds
and
cld
repz
fdivr
pop
push
jl
es
xchg
or
rorb
cwtl
lods
loope
dec
fcoml
aaa
dec
in
pushf
xchg
rcrb
or
cwtl
sub
adc
les
scas
rclb
iret
fidivl
hlt
ret
push
add
subb
mov
mov
and
popa
inc
movsb
xor
scas
add
cwtl
jp
dec
and
mov
dec
sbb
hlt
push
add
jmp
addr16
orl
cmp
xchg
movsb
mov
jns
jo
adc
aam
mov
pop
fidivl
sub
xor
std
lahf
and
test
cmp
orl
loop
xchg
cs
mov
jne
sub
lahf
sbb
or
cmp
sub
icebp
pop
jge
dec
add
xchg
mov
es
fadds
inc
fidivl
mov
sbb
mov
pop
xor
mov
dec
push
movsb
jmp
mov
fistpl
dec
or
lcall
push
rcl
imul
or
enter
adc
lods
inc
fcmovnu
pop
mov
js
in
stos
cmp
mov
jl
dec
js
jle
jns
leave
xor
mov
mov
mov
sbb
jge
cmp
ljmp
inc
fdivs
imul
inc
mov
jmp
pop
popf
das
or
mov
dec
ja
loope
pop
repnz
sbb
lret
fidivs
insl
repnz
clc
rcll
xor
cs
push
push
dec
dec
mov
insl
pop
imul
add
shlb
shrl
or
pusha
or
push
lahf
ss
call
fcompl
xchg
cs
cmp
dec
inc
pop
int
adc
push
sub
xor
cltd
enter
mov
mov
inc
mov
xor
push
push
stos
push
push
inc
lahf
jae
rcrl
nop
inc
flds
add
movsl
jecxz
cs
ljmp
adc
ss
je
shll
xchg
sub
and
mov
push
fnsave
jne
or
sub
sub
test
xchg
or
lahf
enter
mov
sub
mov
mov
shlb
fisttps
jns
xchg
hlt
mov
jge
mov
bound
incb
sub
inc
xlat
push
dec
loope
and
mov
es
mov
roll
sahf
js
stc
rclb
neg
inc
mov
xchg
dec
cmp
mov
fcmovnbe
in
jae
pop
js
add
jle
pop
sub
shrb
and
sub
sub
out
add
test
xchg
xor
push
stos
dec
and
cld
lcall
push
leave
push
push
add
adc
sti
push
nop
push
push
mov
imulb
repnz
pop
xchg
loope
or
cmpsl
pop
xchg
pop
xchg
divl
jb
mov
scas
call
dec
stos
mov
addr16
lahf
push
pop
fwait
gs
jmp
loop
inc
mov
imul
jae
frstor
xchg
dec
cmp
stos
or
mov
shrb
pop
ficoms
and
in
mov
mov
jo
xlat
add
rorb
cwtl
cmc
loope
int
xlat
mov
aad
mov
divb
xlat
movsb
sbbb
inc
stos
mov
add
cmp
xor
test
jb
mov
and
test
int
addr16
inc
dec
cmp
inc
enter
scas
xlat
sbb
test
stos
lret
into
jge
mov
inc
cld
sub
stos
addr16
push
sbb
cmpsb
jo
or
pop
mov
lea
gs
mov
dec
pop
or
ljmp
mov
push
in
cmc
notl
cmc
mov
fimuls
xor
mov
daa
jo
xchg
and
xor
into
mov
mov
shlb
in
test
ljmp
mov
xor
xor
or
xchg
xchg
cmpsb
mov
inc
ror
lret
jmp
adc
fucomi
mov
fwait
pop
ficoms
xor
push
jnp
add
push
mov
cld
arpl
adc
sbb
shrl
jg
out
sbb
adc
gs
sbb
xchg
add
push
bndstx
stos
not
push
mov
mov
pop
jno
fdivr
push
int
or
inc
test
push
imulb
cmp
cltd
sub
in
sbb
mov
imul
lret
cmp
js
push
imul
pop
jl
rorl
jg
xchg
notl
xchg
and
mov
jg
adc
cltd
jne
les
scas
shlb
scas
mov
add
mov
cli
xchg
orl
ja
pop
and
add
loop
fdivrl
sub
int3
xor
sub
aam
cmc
aas
sub
pop
in
xchg
lock
ljmp
cmp
jb
adc
pop
pop
push
xchg
xor
js
sarb
sbb
iret
out
loopne
sahf
ret
hlt
cmpsl
sahf
xor
lret
jge
fstpt
nop
lods
aam
lock
xchg
push
call
repnz
jno
subl
add
sbb
pop
in
cmp
dec
in
mov
mov
push
jo
pusha
rcll
mov
mov
cli
repz
das
setp
sbbl
push
cmpsl
aaa
daa
pop
sbb
cld
inc
jge
iret
push
mov
bound
sbb
sbb
popf
mov
cmp
mov
sub
cmpl
inc
out
xchg
hlt
dec
fisubs
repnz
adc
jb
and
out
orl
out
into
fcompl
mov
xor
mov
push
push
pop
ret
test
cmp
outsb
aam
mov
or
xchg
sbb
sbb
in
movsb
rcll
jmp
cmp
inc
outsl
xor
push
jp
push
add
and
mov
ja
cli
push
shr
xlat
popf
cmc
pop
lret
pop
jg
and
cmp
and
sbb
fsincos
fwait
push
and
ds
imul
xor
or
stos
roll
out
lret
pop
les
or
negw
xchg
pop
lods
arpl
pop
addb
jb
arpl
and
rclb
xchg
xor
xor
pop
mov
inc
movsb
loop
xor
test
sti
mov
movsb
lods
lahf
mov
in
fisttpl
sbb
sub
pushl
jae
out
movb
imul
mov
xor
xchg
inc
xor
leave
and
jb
push
cmpsl
cld
xor
jnp
push
fildl
lods
sub
fwait
pushf
cmp
mov
imul
les
fcoms
repnz
lods
pushf
cmpsb
cli
into
xchg
scas
mov
sarl
mov
jg
pop
cmp
xchg
xor
adc
inc
pop
xor
loopne
outsl
push
test
dec
push
notl
add
aaa
cmp
jmp
cwtl
insb
or
mov
dec
int
repz
xor
cwtl
aas
inc
lret
push
aas
jne
in
outsb
shrb
or
loop
in
cmpsl
cmpsl
out
adc
cmpsb
add
or
repz
mov
or
loop
outsl
das
icebp
out
and
fsin
mov
es
cwtl
stos
pop
mov
js
lock
rolb
std
mov
push
mov
or
mov
es
vfmaddsubpd
mov
mov
fistpll
pop
pushf
jo
pop
in
int3
das
inc
inc
mov
pushf
in
in
sbb
filds
out
scas
jns
pop
test
inc
or
mov
xchg
gs
add
out
sub
push
sahf
cmp
jne
and
dec
scas
addr16
dec
mov
ss
mov
push
es
in
ja
add
pop
mov
fmul
pop
xlat
sbb
mov
insb
mov
test
cmp
jb
lock
cmc
jne
mov
push
out
cld
jmp
cmc
xchg
jle
and
and
push
push
pushf
dec
adc
iret
cmp
sbb
push
xorl
push
mov
or
xor
pop
outsb
mov
mov
out
rcl
cmp
push
shll
or
jne
test
rclb
orb
loop
cwtl
dec
xchg
bound
fwait
in
jbe
int
cmp
push
pop
cmp
pop
ja
or
xlat
ret
popa
cmp
cmp
dec
call
mov
popa
lret
adc
inc
stos
xor
sub
flds
data16
inc
push
jmp
dec
test
sub
dec
jmp
or
das
push
stc
mov
dec
data16
popf
nop
push
xchg
cmpsb
pop
push
fimuls
add
cwtl
lea
lret
ss
movb
lods
or
sub
mov
mov
daa
lea
arpl
add
fst
stos
inc
stc
int
shl
dec
loop
testb
sbb
jns
dec
adc
movsb
or
fsub
pop
jno
mov
dec
std
andl
test
aaa
dec
cmp
imul
lods
push
clc
xchg
imul
push
mov
out
push
arpl
mov
jl
scas
sbb
push
ss
sbb
inc
in
add
inc
dec
sti
pop
adc
or
push
nop
fidivl
stos
add
inc
testb
je
aad
push
lea
xor
dec
dec
and
xchg
lods
stc
inc
cs
ffreep
inc
push
push
je
loopne
push
push
lret
adc
jl
fstl
lcall
xorb
cs
or
iret
inc
shrl
call
repnz
scas
push
push
sub
lea
repnz
push
sub
push
aad
sub
cmp
fs
mov
out
hlt
push
es
shlb
jns
push
and
std
data16
add
mov
lea
lcall
bnd
and
rcr
xchg
adc
pop
mov
push
fwait
mov
cmc
aaa
into
es
mov
mov
inc
in
pcmpeqd
lret
mov
jns
adc
mov
mov
cmc
or
dec
movlps
cs
jae
idivl
loope
data16
stc
nop
adc
push
inc
dec
xor
add
inc
cmp
mov
sbb
insl
adc
cmp
xchg
adc
scas
xchg
daa
les
push
push
ficoml
dec
in
mov
mov
jnp
mov
pop
xchg
xor
arpl
stos
shlb
push
dec
dec
sub
sti
mov
sbb
sub
jmp
xchg
aaa
popa
push
inc
pop
or
mov
pop
or
cmp
adc
outsl
in
imul
dec
movsl
or
movsl
dec
xlat
mov
rorb
scas
mov
jmp
mov
push
iret
data16
jb
lods
push
push
cwtl
stos
or
push
in
les
pop
push
arpl
mov
lock
test
das
jmp
or
fdiv
dec
sbb
xchg
aad
aaa
shlb
pop
xor
lret
sar
shrb
test
pmaxub
in
rcr
test
imul
mov
fcomps
bound
sub
loopne
testl
ja
cltd
pop
jne
ret
mov
dec
push
je
push
cmpsb
daa
adc
push
repz
dec
xchg
push
int
addr16
adc
inc
and
jge
mov
loopne
xchg
call
inc
cwtl
outsl
mov
pop
outsb
aad
insb
in
std
add
mov
loop
push
push
sti
or
adc
xchg
adc
repz
out
inc
lahf
mov
dec
mov
hlt
and
ljmp
notb
movsb
cmp
in
pop
pop
cmp
cmp
add
xor
pop
xor
jg
cs
loop
rcrb
fsubs
sahf
mov
push
popf
sbb
sbb
mov
push
es
jp
lds
hlt
rol
cmp
pop
sub
dec
loope
jbe
xlat
sub
insb
loopne
popf
push
sahf
mov
lods
cmp
lods
cmp
dec
inc
lods
sub
push
or
les
repnz
adc
aad
jne
or
dec
mov
test
nop
test
sbb
fidivl
xchg
sub
shrb
inc
mov
lods
jo
fwait
rorb
and
iret
jo
imul
mov
ds
jmp
xor
mov
les
in
lea
lahf
rcl
aaa
push
mov
pop
fidivrs
leave
jge
iret
mov
or
ds
pop
inc
hlt
mov
imul
int
cmp
outsb
xor
not
jp
popf
stos
leave
orl
mov
push
mov
sbb
imul
or
xor
push
jno
das
inc
mov
or
xchg
mov
scas
rorb
jno
lcall
mov
adc
sbb
jae
sarb
loope
adc
test
xor
cs
xchg
stos
mov
les
dec
jb
adc
pop
xchg
aam
inc
pop
sbb
insl
pop
push
pop
lahf
cmc
std
clc
addl
adc
ja
xchg
adcb
xchg
push
lock
fcoms
daa
inc
pop
pop
les
icebp
adc
imul
inc
xor
pop
sbb
in
mov
dec
cmp
in
rcrl
adc
shrl
outsl
and
xchg
and
pusha
push
into
push
aas
dec
lods
push
rcr
jns
call
jns
mov
pop
lods
cmc
xlat
inc
mov
int3
jns
inc
add
xorl
fs
jnp
push
jns
ja
adc
roll
push
push
sahf
testb
mov
inc
ret
negb
popa
xlat
arpl
dec
stc
adc
cmp
test
movsb
mov
pop
xlat
push
pop
lds
xor
movsl
pop
mov
sbb
sti
pop
mov
shl
imul
arpl
inc
adc
xchg
sbb
push
fwait
mov
jae
pop
pop
and
add
pusha
mov
rcr
cmp
lret
pop
push
popf
aad
movsb
cli
adc
shr
push
or
shlb
call
jle
jae
push
lods
cltd
js
push
mov
stos
es
les
cltd
rcr
jp
scas
mov
jo
sub
out
mov
shlb
jmp
mov
pop
dec
mov
jnp
es
cld
xchg
cmp
pop
in
push
div
and
cmp
lahf
sbb
push
insl
mov
xchg
pop
xlat
mov
insb
mov
add
in
int3
loopne
mov
push
mov
popf
xor
cwtl
push
in
mov
ret
insb
into
aad
cmpsb
cmp
push
cmp
aad
inc
xchg
inc
in
xor
mov
ficoml
test
lea
push
xchg
pushf
decb
out
add
lods
leave
dec
push
enter
jg
loopne
je
mov
sub
cmpsl
and
mov
pop
push
insl
pop
jle
out
xor
rorl
lea
mov
mov
insb
shr
sti
stc
imul
add
pushf
adc
dec
xchg
jnp
jge
jne
jge
pop
lahf
test
mov
xchg
push
jp
out
xor
aad
in
and
arpl
jno
jb
jne
pop
ja
fcomps
mov
test
repz
mov
fimuls
mov
fdivs
add
push
lahf
imul
iret
sbb
push
or
xor
test
aam
pop
cs
leave
sbb
sbb
mov
fisubrs
add
in
jno
jno
rorb
and
dec
lea
ficoms
push
leave
out
cld
sbbl
sub
pop
mov
in
mov
imul
jle
add
fstl
not
stc
or
mov
les
dec
push
adc
lahf
pop
xlat
fnstenv
and
sahf
sbb
subb
cltd
push
sti
xchg
clc
imul
scas
dec
roll
cwtl
or
into
sub
andl
scas
push
dec
cwtl
in
push
mov
shl
stos
out
gs
shlb
mov
popf
jecxz
inc
xchg
mov
iret
jmp
aaa
sbbb
mov
mov
hlt
popa
jnp
push
adc
or
fistl
adcl
mov
int
andb
clc
mov
fiaddl
mov
mov
into
ficomps
adc
jb
sbb
dec
inc
or
push
xchg
add
lds
jp
jnp
or
hlt
dec
mov
push
loope
pop
sbb
xor
rcrl
ja
add
xchg
mov
sbb
mov
popa
inc
fldl
movsl
fbld
mov
data16
cmc
jp
sti
lret
roll
out
lods
inc
dec
jl
icebp
fsubr
movsb
aaa
add
sbb
inc
jb
sub
push
xor
movsb
adc
insb
or
jmp
sbb
add
pop
xor
pop
mov
clc
xchg
out
jns
cmp
and
jp
filds
fidivrl
popa
xor
sbb
popf
inc
pop
inc
lret
sub
and
pop
notl
sub
or
in
inc
das
fidivs
scas
add
aas
insb
cmc
or
push
and
mov
sbbl
icebp
xchg
dec
adc
arpl
jb
xchg
adc
push
sbb
gs
cwtl
push
outsb
pop
pop
mov
xchg
in
inc
xchg
cmp
inc
jmp
mov
dec
or
xchg
leave
lcall
inc
hlt
push
sub
sbb
mov
cld
xor
enter
into
sub
push
inc
repz
setae
out
sti
insb
hlt
mov
inc
cmp
das
leave
mov
loope
jns
pushf
push
xchg
adc
mov
adc
jno
loopne
inc
mov
lret
pop
hlt
mov
outsb
xchg
cmpsl
jecxz
inc
popf
shll
sub
sub
push
mov
arpl
sbb
dec
cli
mov
jo
stc
sub
fcomps
dec
mov
aad
neg
les
dec
push
clc
push
test
or
dec
repnz
ret
xor
push
fldt
outsb
mov
mov
mov
cmp
pop
les
cmp
andb
repz
xlat
iret
jecxz
repz
aam
cli
mov
sbb
hlt
sbb
sub
pushf
hlt
in
dec
ret
cmp
dec
in
xor
movsb
out
test
and
mov
mov
xor
sbb
adc
out
test
xor
ja
jno
mov
inc
sbb
xchg
xchg
mov
lahf
sbb
pop
mov
and
bound
stos
mov
add
xchg
orl
or
cli
loop
push
jecxz
jo
loop
push
xchg
movmskps
or
xchg
dec
jo
push
or
sbb
mov
clc
jno
adc
shll
dec
int
cwtl
loope
dec
push
push
xor
pop
ja
or
push
pop
test
ja
outsl
jmp
aad
rolb
jb
jg
adc
in
lahf
nop
flds
ds
xchg
out
mulb
sub
outsb
cmpl
hlt
jecxz
loop
push
pop
mov
movsl
push
mov
mov
movsl
push
sbb
iret
xchg
mov
fcomps
mov
adc
mov
cmp
outsl
out
xor
inc
out
pop
test
lods
jae
sbb
push
cld
test
cmpsl
pop
cmp
dec
jbe
or
mov
and
cmpsl
jo
movsb
call
push
mov
testb
outsl
les
cmc
lcall
jns
sbb
scas
pop
insl
je
pop
push
mov
out
loopne
int3
cmp
pop
push
ljmp
inc
fwait
mov
mov
nop
out
stos
inc
or
sbb
and
outsl
mov
mov
loope
jl
gs
xor
xor
in
stos
ficompl
stos
push
add
es
and
sub
adc
add
push
mov
fwait
jbe
sbb
stos
iret
sbb
sub
sbb
nop
cmp
fstl
out
pop
pop
cmp
cwtl
pop
mov
and
mov
inc
test
js
sub
sahf
jmp
or
imul
sbb
pop
push
push
stos
push
inc
sti
xchg
mov
sbb
addb
inc
mov
push
pop
jmp
fs
dec
jb
and
std
and
cli
into
enter
fs
xchg
sahf
lret
loope
mov
or
xor
push
lret
dec
xlat
mov
loop
push
iret
in
gs
or
add
mov
js
inc
stos
mov
inc
int
inc
aad
sti
jo
mov
xchg
jg
mov
push
xor
sbb
dec
adc
push
out
push
push
xchg
outsl
cltd
cmpb
cld
aam
fdivrs
data16
lods
push
lea
jp
ret
jno
shll
sbb
xchg
mov
dec
jno
or
push
xchg
xor
in
cmp
testl
and
mov
xchg
out
mul
sub
addr16
push
pop
shl
imul
ret
iret
cmp
or
mov
les
sub
push
xchg
mov
xchg
dec
cmpsb
dec
and
les
jge
in
cltd
cmc
jae
daa
sti
xchg
jne
cmp
test
iret
ljmp
sar
movsb
repnz
adc
xchg
adc
and
mov
out
frstor
imul
testl
rcl
mov
subl
adc
scas
fwait
fwait
std
sbb
and
cwtl
jmp
clc
fs
xchg
push
xchg
xchg
rcrl
sahf
mov
lahf
jge
loop
fisttpl
lcall
je
xchg
gs
lea
dec
dec
adc
in
jb
sarb
decb
repnz
imul
jns
into
outsl
lea
int3
out
cmp
jp
fcomp
je
inc
in
mov
test
cmp
add
shll
cwtl
sub
test
ljmp
pop
in
push
jmp
mov
jb
je
stos
adc
xor
inc
jle
cli
mov
inc
out
inc
push
inc
into
std
psllq
scas
lret
push
dec
repz
and
and
popf
push
adc
push
mov
aaa
out
dec
and
test
test
stos
push
lds
stos
sbb
push
push
pusha
divl
in
jmp
and
inc
or
inc
adc
mov
popa
int3
shl
add
sbb
test
and
arpl
sbb
cmpsb
inc
mov
mov
aaa
push
push
mov
ret
lea
mov
mov
addl
mov
push
insb
arpl
popf
cmp
icebp
xor
push
arpl
lret
push
and
sbb
push
xlat
or
pop
ret
dec
in
pop
fdivrl
imul
pop
mov
and
cmpsl
jmp
rorb
push
scas
loope
pop
scas
sub
jecxz
mov
xchg
fcoml
rcrb
addr16
pop
add
aaa
stc
cwtl
in
repnz
mov
stc
clc
mov
or
push
sbb
jp
dec
xchg
xchg
dec
xchg
fstpt
cmp
mov
fldl
sbb
or
rcrb
adc
pop
add
fldenv
push
jecxz
lods
or
pusha
les
popa
pop
pop
imul
inc
and
sub
mov
lret
lods
test
les
xchg
pusha
lock
push
lods
push
ret
dec
inc
test
cs
stos
das
test
adc
je
cmp
add
cmp
jno
adcl
inc
adc
arpl
mov
adc
lds
push
add
icebp
jo
lea
xchg
popa
dec
mov
call
and
cli
in
fucom
cwtl
add
cs
sbb
out
aam
dec
imul
xor
xchg
cmp
fwait
popa
lcall
je
inc
push
push
sbb
leave
and
dec
add
lret
push
cmpsb
xchg
sbb
outsb
mov
or
aaa
icebp
jae
lods
mov
xchg
jae
or
and
outsb
and
xor
insl
adc
xchg
ret
push
outsb
push
lds
in
push
xchg
jnp
jge
ja
push
fmull
push
xlat
es
loopne
cmp
mov
inc
std
std
int
iret
mov
je
aaa
fcoms
or
dec
pop
sbb
and
pop
fwait
xor
call
add
mov
pop
xor
ja
iret
mov
adc
lret
inc
stc
je
in
je
cmpb
sub
cmpb
cmp
shrl
insb
xor
jp
or
rolb
fldenv
pusha
or
pop
aaa
shrl
shlb
test
xchg
push
das
adc
es
inc
xchg
xchg
xchg
cmpsl
int
aam
xchg
mov
adc
mov
fsubrl
mov
fs
pop
int3
jge
out
jns
subl
rcrb
mov
mov
or
add
stos
or
cwtl
mov
in
mov
insl
loopne
mov
pop
lods
inc
pop
popa
cmp
jg
rcrl
mov
ja
xchg
inc
out
cmp
std
mov
pushf
add
jnp
test
test
sub
adc
mov
loope
mov
call
pop
ljmp
out
xorb
xchg
add
dec
push
xor
pushf
push
dec
in
xchg
pop
sub
jno
nop
pop
adc
sbb
out
or
add
xchg
xchg
dec
and
out
inc
out
cmp
cmovnp
adc
adc
xchg
and
add
pushf
stc
loopne
test
lret
push
add
jle
pop
xchg
nop
lret
data16
cmp
or
test
loop
push
cmpsl
xor
addr16
sub
inc
xor
lea
jae
sub
leave
leave
mov
addr16
ds
or
adc
outsb
rol
jbe
mov
sub
inc
mov
mul
scas
mov
jb
push
jb
ja
sbb
lods
stos
lret
cmp
lret
lea
mov
cs
rcrl
ret
inc
popf
pop
xchg
imull
mov
mov
add
ss
push
jne
test
inc
sbb
xchg
jnp
mov
mov
out
add
sbb
jae
pusha
push
pop
icebp
orb
cmc
idivb
push
cli
push
outsb
sub
jmp
dec
ja
sbb
test
les
push
xchg
dec
push
push
ret
sub
add
xchg
adc
es
mov
int3
cmp
std
cmpsb
or
scas
and
mov
pop
scas
cmp
xor
sbb
push
loop
mov
je
insl
add
shrb
stos
xchg
jbe
and
inc
sti
aam
sbbl
iret
push
adc
xor
repnz
jo
mov
clc
or
jmp
xor
sub
xchg
sahf
in
call
call
sbbb
mov
lcall
lcall
mov
data16
push
lock
cmp
dec
pop
nop
aas
cltd
mov
mov
cmp
sbb
mov
bound
bound
pop
mov
dec
add
push
inc
popa
and
ljmp
rolb
add
dec
in
xchg
dec
incl
aam
xor
sub
or
inc
fstl
pop
iret
dec
lret
xlat
and
out
xchg
mov
add
xlat
xor
popf
pop
cmp
and
push
pop
rclb
rol
mov
jo
dec
sar
xchg
inc
fs
and
mov
sbb
pushf
dec
or
lcall
sbb
lea
mov
inc
and
inc
push
lret
xor
xchg
adc
xor
bound
shll
xchg
sbb
or
xor
shlb
loopne
jg
aam
pop
sub
lea
mov
xchg
cmp
add
enter
push
rcrb
adc
mov
fs
push
or
fcmovnbe
daa
lcall
cmp
mov
rcl
lcall
iret
or
cmp
repnz
shr
or
jle
adc
dec
mov
dec
mov
es
push
clc
dec
jb
mov
sbb
insl
out
cmc
loop
mov
cmc
cmp
aam
push
push
scas
push
sub
movl
in
and
inc
dec
or
jns
xchg
adc
lods
xchg
iret
jns
mov
or
jmp
lahf
stc
shrb
xchg
das
movb
jne
pop
loope
stos
pushf
mov
add
push
leave
testl
mov
dec
cmpsb
xchg
add
sbb
cmp
aam
jl
mov
add
mov
fstl
int
jno
push
ljmp
jno
sub
je
shrb
jno
insb
sub
lahf
subb
sub
aad
js
jb
add
jle
fidivl
pop
mov
sub
push
popf
or
xor
adc
inc
fs
xchg
addr16
inc
xchg
push
jmp
scas
xchg
jo
lds
adc
mov
popf
mov
je
addb
sti
inc
cmc
add
adc
pusha
push
push
roll
jb
xor
bound
dec
sbb
arpl
fdivl
mov
cmp
ds
test
pushf
fcoms
cmp
out
xlat
push
ds
adc
cmpl
mov
push
cltd
mov
bound
and
stos
out
fdivrl
cmp
xchg
sbbb
arpl
ljmp
xor
and
mov
sub
sti
stos
inc
lods
mov
test
nop
pop
jmp
cmp
push
xchg
leave
cs
aad
fidivrs
mov
in
fwait
jnp
and
popf
and
dec
pop
out
jl
or
lods
mov
cli
inc
lods
pop
xor
mov
insw
iret
cltd
lcall
test
sbb
or
cmp
and
add
nop
lods
dec
lahf
push
mov
shrb
inc
pop
pop
mov
and
ret
adc
insl
jge
or
mov
mov
orl
sub
cmp
out
inc
or
inc
loope
and
pop
icebp
jnp
jne
jnp
call
xlat
js
lahf
inc
stos
fmulp
dec
jno
dec
dec
cmp
jbe
fidivrs
jmp
lcall
mov
xor
pop
rol
adc
jno
and
cwtl
and
cmpsl
pop
xor
xor
inc
out
icebp
lret
cld
adc
ss
stos
aas
dec
add
sbb
or
std
inc
fcomip
cmp
gs
pop
fdiv
sub
mov
dec
stos
inc
push
mov
or
ror
sub
outsb
aam
fdivrs
jle
or
popf
xchg
in
lahf
jbe
insb
and
sar
repz
sub
push
cmpsb
push
add
daa
cli
inc
mull
int3
xor
scas
loop
movl
fdivrp
cmp
dec
test
mov
loope
loope
iret
mov
lods
or
je
daa
movd
add
xchg
xor
push
cwtl
sub
pop
mov
repz
fmulp
xor
loop
mov
dec
mov
pop
dec
iret
sub
dec
enter
insl
in
jns
mov
js
dec
fdivs
outsl
sub
lods
repz
add
repnz
pop
pusha
mov
cwtl
movsl
loop
jb
pop
jne
sbbl
add
fwait
dec
stos
cmp
cmp
push
pushf
mov
xchg
xchg
lcall
sub
jge
jno
mov
push
add
leave
arpl
xor
cmp
mov
xor
cs
mov
sarl
hlt
rclb
mulb
stos
xor
lock
daa
inc
xor
xchg
push
pop
mov
mov
sub
scas
mov
sarl
daa
jno
mull
testb
in
jbe
xchg
jno
and
test
xchg
pop
cwtl
stos
sbbl
enter
scas
je
lret
and
jg
lods
mov
cmp
lcall
xor
mov
mov
inc
cwtl
test
push
sub
cmpsl
out
pop
adc
mov
fistpl
push
rcrl
add
pop
add
ja
push
bound
cmp
add
inc
and
jo
in
xchg
ret
or
loope
loop
aam
in
pop
cltd
adc
iret
adc
mov
sub
orb
adc
lods
fdivs
data16
xor
test
test
xchg
cmpsl
add
xchg
movsl
ret
push
fsubl
data16
push
fisubrl
mov
loopne
les
add
pop
ss
das
mov
xor
push
sarl
jne
andl
aas
inc
pop
pop
jns
lea
dec
and
mov
fnsave
imul
mov
call
sub
or
push
mov
bound
iret
int
sbb
sub
or
out
xchg
pop
js
fwait
dec
inc
mulb
inc
cld
push
sub
fimull
dec
stos
sti
das
pop
and
fwait
lods
and
out
xchg
jno
xor
bound
cmp
or
insb
jle
sub
rol
rorl
lock
scas
fnstenv
outsb
js
add
shll
scas
test
test
inc
sahf
test
call
scas
jmp
or
mov
fcomi
jne
shrl
xchg
xor
or
jp
test
jo
sub
adc
insl
les
inc
dec
mov
ja
xor
cmp
jbe
rorl
sub
or
sbb
out
aas
jl
mov
inc
jmp
aam
xor
lds
xchg
int3
push
pop
in
hlt
insb
rorl
out
push
jg
in
cmp
dec
and
add
adc
mov
lcall
pop
cmc
setno
gs
mov
into
mov
add
mov
mov
iret
or
out
ret
fucompp
jmp
test
fldt
sub
test
adc
xchg
aas
mov
into
fwait
cmp
call
jmp
aas
mov
shll
data16
repz
xor
xchg
and
adcl
arpl
or
push
cmp
rolb
and
sub
out
cs
imul
fmuls
mov
sub
xchg
sbb
movsl
sbb
out
mov
call
jp
pop
cmp
das
dec
pop
les
mov
std
icebp
mov
imul
mov
xor
or
mov
mov
int
xlat
arpl
jo
xchg
shrl
adc
nop
shrl
lock
pop
cwtl
stos
cmp
bndstx
dec
imul
mov
mov
sti
bound
inc
test
xchg
dec
nop
adc
int
sub
sbb
jmp
jb
xor
lahf
ss
dec
pop
jae
sub
loope
cmp
lret
add
rorb
push
ds
fisubrs
mov
imul
imul
jns
pop
stos
mov
mov
xor
loop
pop
addr16
fnstenv
push
xor
mov
mov
jnp
cld
adc
lods
jmp
les
inc
xchg
out
mov
inc
and
pop
adc
andb
or
push
bound
inc
xchg
shr
shrl
sbb
xor
notb
ficomps
lahf
mov
hlt
mov
call
outsb
add
movsb
cmp
sbb
mov
push
push
out
mov
outsb
testl
pop
cmpsl
ret
jg
test
pop
adc
insl
cmp
cmp
mov
xor
or
mov
mov
addl
adc
bound
jp
or
data16
cmp
sbb
fidivrs
mov
xlat
shlb
adc
pop
popl
loope
ds
xor
add
pop
outsb
or
shlb
imul
fwait
sub
xor
test
fwait
adc
dec
shrl
rcr
fiadds
pop
cmc
jmp
and
xchg
add
pop
mov
sti
adc
dec
lock
cli
mov
fdivl
lcall
jg
mov
repnz
imul
cltd
ljmp
or
enter
sahf
or
jno
stc
inc
inc
xchg
mov
adc
xchg
pop
sbb
xor
cmp
jl
mov
cmp
jno
ss
rorl
push
rorl
mov
add
sub
cltd
fcomps
mov
xor
push
inc
cli
push
repz
xchg
inc
fadd
mov
fdivl
add
data16
cli
iret
in
xor
xchg
cltd
push
push
out
mov
fsts
mov
test
int
jl
jge
push
sbb
std
dec
daa
or
cmpsb
sbb
ja
jae
jnp
add
popa
mov
mov
push
test
or
xor
dec
inc
mov
cmp
pop
ret
pop
fcmovb
or
adc
mov
stos
mov
loope
pushf
sbb
pop
ss
call
mov
pop
scas
inc
mov
aam
loopne
inc
bound
ja
pop
and
sbb
dec
pop
shlb
jmp
push
repz
pop
pop
cmpsb
daa
gs
sub
enter
fbld
jae
mov
dec
cmp
pop
movsl
jmp
and
jne
std
pusha
dec
dec
push
insb
repz
or
pop
test
pop
dec
fsubrs
dec
adc
les
into
push
popa
add
mov
cmc
adc
ss
push
popl
sti
pusha
sti
mov
cwtl
idivl
mov
stos
and
aad
pop
out
gs
call
inc
dec
jo
inc
mov
mov
sbb
jnp
ret
xchg
xchg
adc
mov
adc
push
ds
mov
aam
add
add
dec
fiadds
cs
movsb
enter
jl
andl
pop
sub
cmp
xlat
mov
jle
repnz
bound
xchg
imul
xor
cmp
loop
rcrl
mov
xor
data16
ss
pop
sahf
inc
mov
or
rcrl
inc
jge
adc
aad
outsl
or
in
sub
stos
push
sbb
cltd
mov
test
and
cld
push
sbb
fnsave
test
sub
pop
dec
loop
les
int3
mov
jle
fidivl
mov
lds
push
jmp
mov
subb
xor
inc
mov
fistps
shll
push
jno
mov
rcrl
cmp
cs
cvtpi2ps
scas
mov
or
jnp
addr16
pop
out
cld
movsb
jne
in
xchg
mov
jne
mov
fildl
cmp
jle
push
in
cli
pop
scas
pusha
neg
rorb
xchg
std
cmp
lahf
negb
xor
mov
movsl
xor
xor
fnstcw
xchg
xchg
xor
mov
movsl
sub
or
data16
cwtl
or
push
fisubrs
push
lea
xor
mov
dec
dec
aaa
clc
mov
cli
xor
push
fwait
mov
lock
loop
inc
pop
or
jae
xchg
cmpsb
icebp
lahf
cs
sbbb
das
push
cmp
xacquire
cld
push
stos
jbe
mov
iret
adc
daa
jle
cmp
arpl
mov
or
test
adc
cmp
shlb
sbb
jae
ljmp
inc
in
ja
cmc
xchg
xor
ss
jg
sbb
mov
fcoml
add
mov
in
aaa
or
out
in
sub
sbb
std
xchg
pop
dec
data16
mov
dec
out
cli
lret
fisttpl
fidivrl
data16
jecxz
and
aaa
mov
jp
and
testb
jnp
xor
push
or
xchg
mov
dec
push
mov
shrb
arpl
xchg
push
insb
clc
fwait
mov
mov
stos
adc
enter
fsubrs
push
pop
stc
push
xchg
outsl
mov
repz
arpl
in
js
sbb
outsb
scas
ficomps
push
push
je
nop
mov
pusha
adc
xlat
outsb
in
mov
cmc
sub
orl
xor
xor
jne
scas
inc
fcomip
lds
ja
addl
dec
lahf
cmp
nop
pop
jbe
inc
in
adc
insl
inc
pop
call
dec
push
vmwrite
fs
push
aad
cmp
xor
fidivs
shrl
mov
sbb
dec
push
adc
mov
xor
ret
mov
mov
loopne
icebp
enter
push
xlat
inc
je
mov
fwait
inc
inc
adc
mov
es
adc
cltd
aaa
ja
and
lods
je
aas
xchg
push
push
stos
or
push
xor
fcmovnbe
imul
out
xchg
addb
mov
leave
xchg
das
dec
out
mov
lret
lock
fldcw
xchg
dec
in
div
neg
out
push
int
mov
out
cltd
dec
loop
enter
imul
in
insb
mov
inc
add
repz
js
adc
adc
push
popa
mov
adcl
dec
mov
fcoms
or
inc
cli
test
sub
cmp
jns
les
push
pop
mov
mov
and
shlb
xor
adc
pop
or
cmpsb
sbb
cwtl
in
inc
jbe
xor
aad
jmp
mov
mov
popf
mov
push
mov
icebp
mov
adc
and
dec
imul
add
inc
mov
inc
jge
and
fwait
data16
jb
dec
jl
jecxz
jo
or
les
push
adc
es
test
or
xlat
pop
cltd
push
or
scas
sub
lret
pop
out
cmp
sbbl
rcl
lahf
ljmp
test
xchg
adc
jle
mov
adc
lock
push
adc
cmp
lods
ljmp
and
jnp
mov
jno
mov
mov
loop
test
stc
aam
lret
ss
jnp
push
lea
leave
sbb
lret
adc
mov
jl
in
lahf
pop
in
fistps
jg
mov
clc
cs
pop
sub
mov
adcl
pop
cmp
jb
cmp
push
xchg
imul
add
mov
rcrl
clc
lods
outsl
sub
in
xchg
inc
mov
jp
mov
ss
clc
jae
mov
mov
aas
adc
js
es
lahf
lahf
cmc
popl
cmp
arpl
cmpsb
adc
mov
shlb
mov
add
shlb
mov
push
xor
mov
ret
test
and
es
pop
add
movsb
test
fadds
and
sti
xchg
cld
inc
cmc
sar
and
push
mov
pop
popf
push
pop
add
mov
cmp
stos
cmp
cmpsl
jb
jl
xor
stos
add
push
loopne
ss
jbe
cli
mov
lcall
negl
push
out
lds
mov
clc
out
clc
lahf
cltd
pop
cmpb
nop
mov
lods
mov
pop
int3
push
rorb
fxch
inc
out
shr
cmp
xchg
stos
mov
ljmp
sbb
xchg
and
xchg
repz
push
dec
testb
test
mov
sbbb
push
sbb
push
sbb
dec
push
fnstenv
fisubrs
push
in
xchg
shl
xor
int
push
jns
jge
arpl
ljmp
gs
js
bound
shlb
nop
ss
cmp
cmp
in
add
jne
jo
mov
stos
jne
push
push
popa
or
push
shrb
cmp
lds
loopne
jecxz
fucom
mov
fidivrs
adc
shrb
das
fs
cmp
adc
imulb
aaa
cmp
sti
sahf
jmp
das
icebp
movsb
data16
adc
shrl
mov
rcrl
or
adc
pop
movsl
test
insl
pop
lahf
and
mov
pusha
jae
mov
outsl
xchg
mov
add
cld
jne
xor
push
xchg
jmp
jle
cwtl
mov
lods
add
xor
ret
xchg
outsb
push
clc
dec
mov
jg
add
outsl
sbbb
mul
cmp
loop
inc
dec
mov
and
mov
push
lea
xlat
fcomi
lahf
iret
jnp
sbb
push
inc
jp
aam
out
mov
sbb
cmp
imul
jo
or
dec
xchg
lods
mov
sbbl
out
sbb
push
iret
mov
lods
sub
gs
mov
iret
inc
in
mov
fcmovnu
jbe
xor
daa
mov
adcw
cmpsl
xor
sub
xor
int3
and
and
loop
pop
inc
cmpsl
mov
adc
int
pushf
push
sbb
sbb
push
pusha
mov
rolb
daa
cli
mov
shlb
lds
pop
insb
jmp
shll
insb
dec
cwtl
out
into
imul
lea
pop
jno
push
add
repz
mov
cmc
bndstx
jge
inc
pusha
rolb
push
ret
test
cmp
mov
or
fwait
cmpsl
adc
xrelease
jp
mov
push
push
stc
cmpb
push
inc
cltd
xlat
mov
sbb
loopne
xor
mov
sub
data16
xchg
mov
popf
or
std
lds
icebp
add
adc
mov
hlt
mov
repnz
cltd
popl
mov
andl
mulb
mov
and
mov
cmovl
out
bound
jns
push
repz
std
mov
mov
push
push
iret
cmpl
xchg
mov
jmp
std
jo
mov
jmp
add
clc
xor
push
testb
stc
out
sbb
nop
dec
dec
in
scas
in
loop
push
loope
loopne
dec
dec
sub
inc
cmpsb
jns
dec
mov
add
lar
dec
cli
daa
or
call
dec
mov
daa
outsb
addr16
push
xchg
mov
outsb
mov
jl
xor
lcall
push
out
and
cmp
adc
push
xchg
and
es
arpl
fs
add
adc
jns
mov
daa
das
out
xchg
lea
push
sbb
scas
pop
fnstcw
mov
inc
dec
rorl
mov
int
xor
xor
clc
jno
xchg
imul
xor
push
jecxz
dec
push
inc
jnp
cmp
pop
jo
inc
loop
cwtl
and
aam
imul
xlat
shr
movsb
addr16
xchg
sti
pop
movsb
sub
push
jns
loope
dec
adc
inc
lods
sbb
sub
cs
aam
repz
push
dec
jp
jnp
and
xchg
sub
mov
inc
out
dec
pusha
ljmp
outsl
jnp
pop
repz
pop
outsb
bound
mov
adcb
mov
pop
ljmp
call
mov
outsl
shll
leave
inc
jge
mov
pop
loope
inc
mov
sub
mov
mov
jg
mov
cmpb
pop
jmp
pop
sub
dec
lahf
mul
aaa
mov
in
or
xor
pop
mov
pop
dec
enter
mov
xor
jae
xchg
push
pop
mov
loope
add
sbb
testl
cld
aad
ljmp
mov
xchg
insb
xor
test
or
repz
scas
movsl
icebp
sub
adc
xor
sub
mov
repz
mov
push
cmpb
or
xor
test
aam
cli
push
add
fimuls
orl
je
les
push
divb
xchg
outsl
nop
sbb
sub
push
fbstp
inc
xor
cli
mov
fnstcw
aas
movsl
das
mov
in
jae
xor
push
add
xor
stc
lcall
in
stos
fsubl
stos
inc
std
add
leave
jecxz
add
aas
stos
in
lcall
adc
push
sahf
sbb
pop
subl
pop
fcmove
xlat
sbb
dec
adc
idivl
test
fwait
aad
or
mov
cmp
es
xchg
sbb
icebp
dec
dec
and
cmp
pop
and
aad
cmp
int
dec
lock
push
mov
outsb
in
fdivrl
adc
and
mov
cmpsb
in
das
sub
push
icebp
sub
fwait
mov
rclb
xor
mov
jnp
push
shrl
ret
and
pop
scas
cmp
mov
fcoml
mov
das
outsb
inc
jnp
in
pop
xor
ds
nop
push
mov
pushf
cld
cltd
fdivrp
test
and
xchg
daa
mov
sbbb
sbbl
and
pop
fwait
ljmp
pushf
xlat
scas
bound
iret
jb
inc
mov
dec
cmp
mov
inc
out
cli
jecxz
adc
scas
fstpt
pop
mov
popa
or
mov
pop
test
mov
mov
dec
dec
pusha
stos
in
fidivs
add
stos
xor
add
push
xchg
daa
enter
aas
fs
xchg
int
daa
cmp
pop
and
jle
cmp
fldl2t
push
cmp
outsl
andb
mov
mov
int
mov
test
mov
cmc
clc
mov
push
mov
mov
mov
cwtl
jle
mov
sahf
lods
icebp
xchg
push
mov
mov
and
shrl
sbb
andl
add
or
inc
test
lahf
pop
sbb
test
cmp
sti
out
push
loopne
cmp
jnp
rcrl
xchg
ret
pop
lahf
cmp
popf
pop
loop
sub
add
pop
repnz
and
lcall
pop
lds
sub
pushf
jl
daa
cmp
add
test
mov
ror
jns
out
pushf
mov
cld
sbbb
shl
adc
fs
cltd
pop
xchg
clc
xchg
andb
push
mov
lods
test
xchg
inc
mov
or
mov
jmp
sbb
cmp
add
or
push
and
push
xchg
sub
into
sub
xor
cmc
mov
push
sub
dec
testl
aas
icebp
cli
or
popa
push
in
aam
push
or
xorb
loop
and
push
bound
add
and
dec
data16
push
jmp
jge
aam
sbb
or
gs
pop
add
stos
lods
and
das
stos
push
and
inc
fistpll
sarl
sbb
dec
xor
cmp
repz
inc
fiaddl
xchg
popa
add
scas
nop
pop
mov
shll
sub
inc
sub
repz
fbld
add
xor
cwtl
xchg
fldt
or
bound
test
arpl
imul
push
je
inc
adc
push
imul
movsb
push
fwait
xor
mov
fucompp
sub
adcb
fwait
ud0
lahf
push
sub
push
sarl
adc
push
ds
pop
filds
or
sti
fs
push
in
mov
fucomi
test
stos
or
icebp
jnp
dec
mov
jo
push
fnstcw
xchg
adc
sub
adc
or
xor
push
sub
pop
cmp
pop
and
adc
push
ja
lds
popf
xor
cmpsb
aad
pop
xchg
hlt
rcr
and
add
stc
mov
insl
loopne
and
int
mov
pop
outsl
out
cmp
xlat
lods
popf
dec
movsl
mov
hlt
sub
dec
adc
leave
inc
outsl
dec
dec
les
cmp
bnd
ja
adc
sub
repz
shl
adc
push
mov
dec
fidivs
stc
inc
popa
pop
cmp
adc
mov
hlt
mov
mov
mov
push
stos
mov
sbb
enter
ficoms
dec
add
sub
mov
call
ljmp
in
test
jge
and
jge
xchg
incb
pop
cli
sbb
ja
mov
jp
ret
outsl
mov
mov
int
aas
jb
mov
mov
out
or
sbb
inc
push
mov
sbb
cmp
stos
cmp
unpcklps
pop
mov
fdivl
pop
lret
mov
test
in
stos
push
in
ljmp
mov
idiv
pop
mov
pop
jg
dec
test
jg
popaw
or
add
ja
or
scas
ficompl
lea
mov
or
test
mov
and
outsb
mov
mov
inc
xor
fdivr
adc
xor
mov
fimull
or
test
inc
sbb
fisubrs
mov
insb
push
push
lds
lcall
jp
leave
pop
lahf
insb
sub
mov
dec
repz
out
ds
or
push
sub
enter
jns
aad
add
push
fucomip
and
and
lcall
mov
out
pop
out
xchg
cld
mov
inc
cmp
inc
or
cmp
dec
dec
out
jl
sbb
sbb
imul
pop
aas
aad
mov
pop
push
loope
mov
jp
add
nop
sbbl
cmp
xchg
daa
adc
push
icebp
fnsave
scas
stos
xchg
out
repz
cmp
stc
pop
mov
repnz
insl
jmp
lock
sbb
adc
add
xor
xor
adc
pushf
andl
inc
jo
in
adc
adc
pushl
lcall
inc
ficoml
pop
mov
addr16
aad
out
pop
mov
and
fistpll
push
inc
mov
jnp
jae
movups
adc
pop
das
cli
fwait
aam
shll
outsb
hlt
push
sub
rcl
cmp
sbb
mov
lret
call
addr16
sbb
xchg
mov
mov
and
sub
repz
mov
out
adc
inc
repnz
out
jp
mov
bound
mov
jle
insl
fisttpll
dec
roll
inc
xor
push
sub
mov
sarb
push
push
out
test
lcall
push
ljmp
jno
addr16
jae
fs
jno
jp
sbb
nop
pop
test
cltd
mov
mov
mov
mov
push
add
sbb
cmp
jno
insb
cmp
mov
pop
pushf
nop
mov
icebp
int
pushf
std
and
popf
div
shr
and
sbb
xchg
jne
mov
fimull
outsb
pop
pop
or
ret
mov
repz
lahf
sti
ss
sti
add
push
popf
sub
mov
andb
mov
in
dec
mov
testb
add
or
shlb
mov
pop
repz
sub
in
outsl
sbb
outsl
xor
push
xchg
pop
cmp
rcl
lds
jecxz
lea
jl
cwtl
mov
scas
inc
add
push
mov
and
cmp
shlb
xor
sub
xor
or
inc
in
enter
mov
lret
lock
shl
mov
push
sub
fbstp
out
mov
add
add
ja
arpl
in
int
out
scas
fs
in
dec
pop
bound
rcll
cmp
out
push
adcb
mov
push
shrl
mov
mov
dec
pop
sub
xchg
test
stos
cltd
incl
jno
cs
push
call
ljmp
fbstp
cmp
and
dec
pusha
sub
inc
adc
mov
cmc
rcrb
xchg
sarl
sub
sub
dec
mov
dec
cs
test
test
clc
add
cmpsb
mov
imul
push
cld
sti
xchg
out
bound
mov
movsl
dec
push
jg
jae
cmp
xor
mov
push
mov
adc
xor
ja
pop
rcrb
stos
xor
jg
pop
es
outsl
dec
push
xchg
xor
push
and
xchg
push
rcll
xchg
jmp
or
out
iret
les
test
cmp
xor
jo
adc
fidivrl
adc
jecxz
pop
mov
xchg
shld
sub
pop
out
js
xchg
sub
loop
cmp
lock
mov
scas
ftst
rorl
dec
pop
dec
cmp
jbe
dec
add
ret
ret
rol
or
aad
pop
adc
xchg
int
or
lock
add
lret
sub
jmp
pop
xor
les
aad
arpl
pop
fcmove
and
shrl
cltd
js
das
ljmp
sub
lods
lret
jnp
mov
xor
enter
xchg
bound
rol
pop
mov
xor
sti
inc
dec
xchg
loop
in
inc
pop
cs
push
and
ret
and
test
lret
adc
les
lds
jns
cld
jnp
lea
jns
jnp
clc
pop
data16
xchg
cli
cmp
loopne
mov
adc
mov
lret
bound
setb
bswap
add
sahf
lret
adcl
jge
xchg
dec
jmp
test
jnp
aad
jl
jae
sbb
int3
sub
sub
imul
js
cs
pushf
lods
lods
sub
xchg
mov
repnz
movsl
scas
xlat
and
push
mov
decl
or
lea
mov
icebp
xchg
inc
xor
xchg
jnp
cmpsb
nop
int
push
fs
aad
pushf
add
sub
xor
mov
ds
stc
mov
testl
lods
in
and
lcall
xor
dec
fwait
imul
xchg
jg
ret
aam
mov
mov
sub
cld
das
pop
arpl
rcrl
adc
fucomip
sbb
cmp
jo
xor
rorb
scas
daa
push
cld
adc
and
and
scas
or
pop
nop
inc
dec
add
cwtl
fnstsw
inc
push
stos
inc
or
ss
in
leave
int
loope
addr16
leave
out
inc
jb
ror
jae
subl
or
dec
rol
sub
mov
aam
push
sub
and
ljmp
or
les
inc
sbb
mov
cmp
negl
cmpsb
dec
pop
mov
mov
pop
push
or
xchg
gs
imul
pushl
inc
mov
leave
lret
fs
dec
sbb
repz
cmp
loope
pop
in
inc
in
cmc
cltd
cmpsl
fsubs
add
add
stos
fucomp
jno
dec
into
ljmp
jecxz
das
or
stos
stc
jnp
movsb
call
sub
push
xchg
adc
je
push
xchg
icebp
into
push
iret
jbe
mov
stos
enter
scas
lods
test
push
sbb
sub
or
dec
pop
popa
pop
popf
or
push
sbb
roll
or
nop
jl
scas
data16
pop
cmc
lahf
insl
sbb
cmp
mov
mull
faddl
lds
fdivrs
aam
leave
loope
stos
cmp
cltd
popa
lods
das
mov
or
add
and
sbb
gs
loope
out
inc
jae
out
add
mov
scas
mov
incb
fcoms
mov
enter
mov
lret
mov
scas
out
and
call
push
rorb
add
xchg
cmp
adcl
or
mov
xchg
mov
scas
icebp
mov
mov
xchg
mov
fisubl
scas
fs
mov
incb
lea
nop
jnp
jg
cmpsl
and
sub
add
loop
mov
into
lret
call
push
shrl
adc
pop
subl
mov
stos
push
push
sub
xchg
idivb
adc
loope
daa
jecxz
mov
mov
cli
or
mov
std
xchg
push
sbb
cwtl
pop
les
xlat
aaa
sub
pop
ret
loope
dec
pop
repz
jp
stc
movsb
and
lods
mov
dec
stos
and
fstp
sbb
popf
hlt
xlat
add
jle
test
std
mov
fiadds
or
imul
loope
mov
in
mov
pop
and
nop
cmp
or
mov
pushf
out
shl
imul
add
int3
lret
jg
jb
daa
enter
sub
movb
fucomp
cld
or
mov
add
cli
sbb
add
pusha
mov
rcl
ret
cmpsb
mov
out
and
xchg
add
call
dec
dec
pusha
mov
lret
aas
loop
adc
in
or
stos
push
sbb
loop
popf
gs
xchg
push
jns
mov
cmpsl
pop
cmc
adc
orb
inc
inc
jecxz
into
xchg
outsb
or
rolb
inc
add
ficomps
shlb
adc
cmpsl
push
sbb
xchg
repnz
bndldx
fwait
mov
mov
mov
sti
cmpsl
jg
adc
dec
push
lods
jl
outsb
das
lcall
hlt
lahf
leave
lahf
lods
cli
rorb
xor
out
out
inc
fcomps
xor
cmpl
enter
push
fildl
scas
adc
bound
iret
pop
outsb
mov
imul
pop
jb
xchg
jae
dec
popa
lret
push
fsubp
cmp
ret
inc
shlb
in
lock
dec
and
pop
inc
cmpsl
lret
mov
test
add
ret
mov
adc
scas
pop
repnz
push
idivl
sub
pop
sarl
cmpsb
and
dec
ljmp
mov
in
ss
push
pop
lea
cmp
xor
push
fistps
mov
push
jns
push
js
xchg
stos
aas
add
sub
push
mov
test
mul
aas
add
dec
pop
iret
push
jmp
dec
sbb
dec
xor
fs
inc
sbb
sbb
and
mov
mov
int
sub
data16
mov
sub
icebp
imul
mov
cmpsl
ret
jno
fnsave
fwait
shll
lods
sti
pop
test
stos
fisubl
dec
out
je
pop
push
xchg
xchg
movsl
pop
mov
sub
mov
ret
xor
lea
or
cmc
adc
inc
leave
jae
sti
repz
mov
clc
lock
sub
add
fcoms
lods
add
aas
or
jl
xor
icebp
pop
jl
enter
push
lea
and
jo
inc
arpl
cmp
mov
je
outsb
dec
cwtl
jo
inc
rcrl
cmpsb
fcom
sbb
pop
mov
mov
inc
nop
cli
dec
fldt
xor
insb
mov
aas
xchg
test
xchg
push
jae
lretw
lret
or
add
xorl
fisubrl
ds
cmp
sub
mov
cmp
jns
cld
dec
mov
enter
mov
jecxz
pop
push
cld
adcb
jle
push
xchg
adc
repz
cmp
push
shl
mov
cmp
mov
enter
mov
decb
jo
pop
jnp
push
sub
pushf
jle
xor
mov
in
data16
imul
mov
ficoms
stc
push
lock
dec
jg
xchg
pop
cmc
mov
adcb
int3
add
aas
push
push
jmp
mov
jbe
enter
jge
jne
mov
leave
push
scas
or
fadds
ds
scas
adc
jno
push
push
out
pop
xlat
xorl
sub
pop
stos
adc
idivb
in
cmpsl
fisubrs
cli
jo
aaa
sbb
out
aas
fcomps
arpl
jmp
inc
fwait
pop
shrl
mov
into
push
inc
idivl
sbb
xchg
call
andb
mov
pop
sbb
mov
xchg
dec
cmp
push
dec
cmp
clc
inc
and
out
and
and
mov
lret
jmp
je
cmpsb
imul
imul
mov
aaa
push
add
testl
add
pop
mov
xor
push
icebp
sbb
negl
cmp
adcb
dec
lds
movsb
add
rolb
add
xor
clc
push
lea
mov
or
fdivrl
dec
stos
inc
out
dec
sub
ds
inc
and
loopne
inc
in
in
mov
mov
push
test
adc
push
cwtl
das
js
jo
repz
jae
xchg
add
ds
pop
cltd
xor
addb
cmp
adc
jecxz
pusha
clc
add
jg
outsl
dec
dec
fdivrs
pop
idivb
in
addr16
jge
cmc
mov
pop
mov
xor
pop
inc
push
xchg
ja
out
jle
and
lcall
sti
xchg
adc
pop
stos
cmp
add
dec
fstps
cmc
mov
jecxz
jmp
cmp
or
adc
push
sub
stos
mov
jae
loop
imul
push
sub
insb
lods
inc
pop
test
rcl
test
mov
push
movsl
or
mov
cmp
aaa
fsincos
mov
and
push
aas
and
push
jge
mov
clc
test
inc
inc
fnsave
aam
inc
jne
adc
mov
and
pop
mov
mov
add
mov
add
rcrb
mov
inc
movsl
xchg
xchg
outsl
mov
sbb
mov
pop
ret
and
cmp
cmc
out
or
cs
jbe
push
lcall
pushf
stos
sub
int3
mov
sbbl
movsl
mov
jle
or
push
sbb
shrb
sub
and
incb
out
das
data16
dec
scas
pusha
jle
shrb
movsl
lahf
mov
rolb
je
mov
xchg
mov
xchg
into
inc
fistpl
not
mov
ror
add
mulb
cmp
sahf
xchg
pop
shl
addb
lds
stc
inc
jecxz
sbb
add
test
mov
hlt
push
sub
fstpl
pop
dec
shlb
xchg
insl
data16
mov
cld
push
data16
xor
adc
subl
imull
push
insb
pop
imul
dec
sub
imulb
jg
fmul
lret
push
stos
test
pop
adc
mov
popl
xor
add
or
add
push
xchg
outsb
daa
sbb
lea
mov
ja
inc
and
xchg
mov
iret
dec
out
hlt
mov
imul
roll
out
lock
frstor
lea
jno
loop
aaa
stos
push
cmp
int3
and
je
mov
es
dec
jae
adc
outsl
repnz
mov
xchg
add
inc
sbb
outsl
mov
mov
inc
fcmovb
in
scas
mov
pop
push
pop
clc
test
sbb
jb
xchg
test
pop
shl
shlb
in
jne
mov
sbb
test
cmp
sbb
add
fidivrs
pop
mov
cmp
xchg
mov
sub
loopne
pop
aaa
clc
or
ret
push
sbb
js
cmp
mov
xchg
and
scas
lods
xchg
fldenv
pop
mov
ret
push
fiaddl
lods
xlat
outsb
pop
cmpsl
pop
outsb
and
int3
sub
sub
dec
push
lds
imul
adc
sub
push
jmp
imul
ja
ja
sbb
xchg
cmp
pushf
adc
add
vpunpcklbw
imul
lret
mov
mov
pop
gs
pop
push
jmp
lods
sub
mov
addr16
out
lahf
or
mov
jno
xor
jno
fisubrl
mov
xchg
mov
adc
std
cmp
mov
inc
add
pop
jle
dec
and
push
icebp
out
out
dec
dec
xor
test
jmp
lcall
or
jge
or
shrb
pushf
insb
pop
push
or
int
jo
pop
lcall
lcall
jmp
add
popa
icebp
mov
jmp
fwait
adc
add
sbb
ret
push
into
icebp
pop
sarl
stos
fidivrl
pop
iret
cli
shll
lret
out
lahf
mov
pop
imul
mov
loopne
mov
test
xor
lret
and
lods
and
test
js
add
xchg
mov
dec
push
xorb
cli
inc
inc
loope
mov
in
mov
arpl
outsl
xor
cmp
int
fadd
pusha
test
jb
daa
mov
movsl
fwait
mov
movsb
cmp
pop
enter
push
cmpsl
xor
dec
sbb
pushf
stc
loop
jnp
cmp
ljmp
ret
jae
loope
dec
in
mov
xor
xchg
sbb
adc
pop
xor
push
addl
test
push
stos
int3
fwait
push
xor
cli
and
mov
mov
dec
les
outsl
subb
shld
xor
jno
test
and
shll
cld
aad
pop
in
js
push
push
xchg
ret
or
add
cmp
jns
movsl
push
addr16
push
cmpsl
xchg
xor
dec
das
outsl
or
sub
xlat
jp
inc
jo
leave
cmp
pop
xor
das
inc
dec
mov
dec
xor
lods
pop
xchg
jg
sbb
cmp
addr16
scas
add
in
mov
rcrl
das
inc
push
in
popa
dec
push
xlat
ret
stc
imul
call
add
mov
iret
mov
sti
add
rcrl
out
sahf
scas
stos
mov
dec
int
mov
jmp
shr
dec
pop
xchg
ss
in
leave
repnz
insb
mov
dec
cmpb
xchg
mov
into
cmpsb
cmp
xchg
mov
cmc
xchg
mov
cld
add
xor
loop
jecxz
adc
lcall
shlb
xor
jge
cld
out
and
sub
add
test
arpl
int
mov
lret
pop
sbb
pop
jo
daa
ds
loop
sbbl
das
xchg
xchg
ds
repz
add
clc
lds
or
jnp
mov
std
dec
iret
jne
andb
xchg
mov
xor
xchg
int3
mov
cmp
jo
mov
adc
lret
fs
cmpl
cmp
shll
mov
pop
fmull
xlat
inc
data16
inc
sub
icebp
inc
fwait
xor
mov
sub
outsb
pop
shr
pusha
xor
lcall
xchg
pop
mov
sarb
sub
push
fisubrs
push
jne
nop
xor
lock
cwtl
das
mov
imul
das
ljmp
aaa
js
out
test
ss
pusha
mov
int
cmpsl
pop
jne
leave
fcompl
push
add
xchg
je
jnp
sbb
ror
ja
mov
mov
sbb
push
sbb
imul
push
add
mov
addr16
push
clc
push
or
test
ss
mov
les
and
loope
adc
adc
sarl
sti
clc
xor
filds
pop
mov
shl
cmp
sbb
lds
call
cmp
lea
jmp
shrl
out
arpl
xor
aas
xor
lods
cmp
fwait
aas
mov
inc
xchg
pop
xor
mov
push
mov
rorb
or
das
addr16
inc
cltd
sub
out
jmp
cmp
add
out
inc
popa
es
test
insl
cld
cmpsl
sbb
inc
push
and
outsl
cld
dec
orl
push
shrb
xchg
cmp
dec
jne
xor
subl
stos
xlat
mov
or
xchg
mov
pop
and
pushf
enter
clc
in
stc
insl
cld
lcall
mov
xchg
pusha
pop
lock
mov
in
sbb
int3
fadds
arpl
pop
cmpl
insb
add
stos
mov
faddl
fidivrl
sub
jne
ret
faddp
iret
into
gs
xchg
dec
push
and
movsb
test
jo
js
xchg
insl
setp
stos
push
cmp
addr16
sub
dec
shr
cld
add
nop
dec
xchg
inc
das
jle
mov
mov
xorl
fidivs
enter
popa
fnstsw
sbb
sahf
jg
dec
xchg
fistpl
shlb
adc
ss
cwtl
and
xor
push
push
and
cmp
jno
sti
mov
xor
and
xchg
fwait
mov
movsl
cmpsb
xor
mov
mov
pop
cwtl
jmp
sti
add
xor
notb
jne
ja
cli
call
mov
fwait
push
xchg
xor
ret
ret
ret
xlat
mov
push
add
pop
ja
and
dec
xor
outsl
aas
loop
inc
out
and
inc
les
dec
shrl
stos
ds
push
xor
cld
jnp
scas
scas
xor
ss
in
dec
in
ja
mov
mov
inc
fidivl
insl
mov
sbb
in
stos
jno
cmp
ja
xor
xor
push
dec
shlb
inc
xor
arpl
add
mov
in
popf
mov
mov
push
mov
les
sub
push
scas
inc
shr
xlat
repz
stos
mov
leave
sub
mov
ljmp
sub
mov
jnp
jg
fiadds
fwait
and
xor
arpl
movsl
cwtl
mov
xor
push
mov
rcr
and
popf
pop
mov
gs
hlt
scas
ret
pop
daa
and
mov
or
xchg
mov
xor
ficomps
mov
movsb
xor
push
sbb
enter
gs
push
inc
rorl
add
movsb
and
mov
xchg
sti
cmpsl
xor
mov
popf
or
loope
hlt
adc
in
inc
sar
push
lods
insl
jb
clc
mov
lds
push
scas
aas
push
aad
xor
sbb
mov
loop
into
dec
xchg
js
dec
stos
push
mov
dec
or
sub
or
sub
in
cld
scas
mov
lret
pop
xchg
sti
sti
add
cwtl
hlt
cwtl
jnp
shrl
add
out
or
lcall
mov
sub
and
inc
dec
fs
scas
arpl
ja
add
xor
es
mov
aad
or
xchg
pop
lds
mov
frstor
int3
das
add
add
lods
ja,pn
jo
cwtl
mov
and
add
or
out
test
lods
addl
add
divb
leave
lret
dec
push
xor
into
aam
lods
sub
andb
xchg
inc
repz
fisttpl
insb
loope
push
mov
call
aas
xchg
rcrl
je
cmc
test
add
jle
pop
test
xor
push
daa
lods
dec
push
sub
leave
insb
jg
jne
push
sti
cmp
and
dec
and
inc
lret
incb
sti
cmpsl
sbb
dec
xor
pop
lods
inc
inc
pop
and
xor
pop
xor
or
scas
cmp
mov
frstor
add
pop
call
imul
std
insb
ret
adc
push
inc
cmp
mov
movsl
enter
push
ljmp
fiaddl
jp
sti
fistpl
dec
shlb
cld
mov
repnz
cmp
mov
lea
lcall
cmp
xchg
sbb
push
or
ret
mov
push
jnp
mov
int
je
mov
pop
lock
pop
sbb
and
scas
pop
mov
jne
scas
rorl
clc
aas
and
pop
cmovo
jo
jle
mov
and
testb
xor
xchg
pushf
mov
int3
fsubp
rorb
jo
xor
enter
push
push
dec
add
jle
mov
mov
insl
cmp
aaa
call
lcall
sub
ss
lds
ljmp
mov
movsb
add
dec
push
jo
loop
jb
jns
push
testl
ret
and
xchg
push
jecxz
ja
sub
aad
lcall
mov
dec
xor
jo
jnp
scas
addr16
loopne
xor
mov
enter
cld
cld
dec
mov
shl
push
cld
popa
jns
push
or
movsl
mov
push
mov
or
call
add
pop
repz
xchg
xlat
roll
rcrb
mov
imul
mov
cmc
nop
pmaxub
inc
fdivrl
jg
xchg
mov
pop
enter
jecxz
adc
mov
push
fldenv
insl
out
test
dec
pop
ss
ss
movsb
test
sahf
movsb
mov
call
mov
mov
test
arpl
js
pop
stos
push
std
inc
mov
dec
cmc
xchg
mov
cmp
aaa
xor
mov
pop
xor
push
sub
fwait
push
iretw
cmpb
lret
filds
xchg
push
rol
faddl
mov
pop
dec
insl
xor
jo
mulb
lods
cs
sbb
mov
test
pop
lea
andl
dec
pop
mov
pop
push
shrl
mov
xchg
subl
jnp
mov
nop
xor
add
insb
out
xor
ljmp
aam
inc
rcrb
dec
leave
inc
dec
dec
ret
je
add
rcrl
sub
test
push
daa
mov
push
das
pop
loope
sti
xchg
inc
and
sub
movsb
sahf
adcb
adc
in
add
push
arpl
das
or
add
shlb
shlb
cmp
sbb
add
inc
shlb
dec
cmc
mov
xchg
pop
cmp
sub
movsb
lods
push
sahf
cli
testl
incb
inc
pop
and
stos
jl
xchg
std
push
scas
cltd
out
sub
lods
fcomip
aam
stos
imul
cltd
insb
loope
ja
pop
or
jmp
sub
push
imul
arpl
in
enter
pop
scas
inc
xor
cmpsb
xor
imul
sti
xchg
add
shrl
setns
out
jecxz
dec
lret
lcall
xchg
adc
test
inc
aam
jne
lods
adcl
mov
loopne
in
test
add
aaa
rorb
cltd
int
pop
hlt
jp
xor
out
cmp
jmp
mov
push
movsb
inc
les
subl
pop
sub
in
shll
loop
xchg
mov
add
inc
pop
mov
push
rorb
cmp
pop
mov
insb
call
sbb
sbb
mov
sub
cmp
dec
jbe
cld
cmp
adc
aad
mov
mov
mov
jge
adc
xor
shll
add
stos
adc
js
fisubl
mov
push
sub
fsubrl
sub
pop
mov
fld
fstpl
aaa
clc
in
dec
mov
mov
xor
gs
je
bound
es
pop
cmp
sahf
clc
cmp
xor
mov
cwtl
inc
ret
jns
fmuls
jge
pop
mov
and
dec
call
pop
ljmp
push
in
mov
or
and
cmp
fists
push
in
mov
jmp
imul
mov
lods
push
push
rorl
ja
jno
cmp
mov
in
clc
fisttps
shrb
jae
inc
inc
cmp
jecxz
daa
jecxz
add
mov
mov
and
mov
mov
push
and
loope
push
std
push
nop
or
xchg
cmp
jp
shr
or
out
adc
fidivrl
pop
scas
ficompl
adcl
push
mov
out
mov
xchg
cmpsb
inc
lret
mov
dec
dec
bound
sbb
xchg
xchg
sub
mov
sub
fcoml
inc
test
adc
sbb
adc
sub
lcall
push
insb
cmp
fimuls
sti
notb
inc
data16
and
add
cmp
stos
idivb
ds
push
jbe
mov
test
push
dec
and
popa
lock
xor
adc
push
jb
popf
bound
mov
inc
dec
mov
mov
cltd
mov
ret
and
insl
scas
push
lds
jecxz
add
je
pushf
lea
inc
mov
xchg
adc
ljmp
xchg
pop
push
push
out
mov
cltd
jns
xchg
mov
or
into
shrl
mov
lret
ret
movsl
mov
outsb
negb
shll
fcmovu
mov
adc
push
ds
or
cs
mov
movsl
jbe
cwtl
push
ds
cmp
mov
addr16
mov
mov
cmp
sub
in
mov
xchg
clc
jg
in
adc
in
and
mov
sub
popa
ljmp
mov
or
or
mov
dec
and
push
xor
and
jle
test
mov
inc
aaa
rclb
cmp
mov
into
cmpsl
jge
mov
jo
mov
push
adc
ja
cmpsl
adc
out
lea
cltd
mov
fstps
xchg
adc
std
pop
and
sti
mov
push
push
fxch
stc
jns
mov
test
add
sar
jmp
fcmovb
in
and
rorl
dec
mov
das
mov
cmp
or
xchg
cli
test
lret
lcall
jecxz
add
pushf
or
lds
sub
aas
cmp
stc
loope
in
mov
outsl
mov
xchg
mov
int3
lret
mov
seto
mov
mov
or
push
xlat
cmp
add
movsl
mov
mov
std
dec
leave
mov
repz
add
cmpsb
cmp
and
xor
out
jg
mov
int
mov
push
dec
jae
pop
jae
xor
mov
lahf
or
cld
mov
jbe
iret
jl
rorl
mov
into
xorb
push
addr16
xchg
mov
lods
sbb
push
pusha
andb
outsb
sarb
push
imul
push
cwtl
test
sub
aaa
xchg
xchg
cltd
aas
int
jo
sbb
mov
xchg
loop
jecxz
ret
ljmp
inc
sub
mov
and
stc
popf
dec
inc
pop
lret
jo
sub
adcb
movsb
jnp
jbe
sub
lock
cmp
lahf
jnp
jns
out
add
inc
daa
jnp
pop
push
fwait
inc
fbstp
jle
jmp
lahf
xchg
popf
xor
inc
outsb
imul
repnz
or
dec
push
pop
dec
movsl
push
xor
testb
call
and
loopne
out
call
xor
add
lods
jo
cmp
adc
xchg
sub
fwait
and
sbb
bound
cmp
mov
loopne
push
or
pop
scas
loopne
or
cmp
out
jns
rclb
and
add
fstps
add
mov
inc
ss
xchg
lea
std
lret
mov
jmp
sbb
push
mov
or
fnstcw
shl
jmp
mov
aad
cmp
mov
mov
lret
sub
xor
mov
jl
mov
xchg
or
lea
call
add
sbb
push
hlt
fwait
inc
mov
push
push
out
lret
bound
lock
neg
data16
xchg
inc
enter
out
das
mov
test
cwtl
das
scas
fcmovbe
mov
adc
or
pop
lock
mov
mov
cmp
mov
adc
int3
sub
enter
sbb
dec
lahf
fldt
dec
psadbw
mov
mov
push
xchg
loop
insl
pop
add
insb
call
lock
lea
adc
lahf
xorb
sbb
push
adcb
xor
push
rcl
mov
mov
insb
ljmp
fwait
xchg
pop
je
cwtl
leave
push
xchg
jl
pop
add
sbb
jl
jmp
sub
mov
inc
push
test
out
movsl
cli
dec
mov
mov
imul
inc
inc
repnz
xchg
mov
mov
aad
into
xor
ret
mov
and
inc
lahf
ja
push
xor
xlat
xchg
or
jns
mov
sti
adc
sarb
cmp
mov
jno
jnp
dec
push
test
sub
repz
dec
mov
mov
ret
jecxz
sbb
sahf
mov
push
pop
shlb
add
pop
sbb
in
or
aam
jle
mov
or
and
cmp
pop
popf
stc
ljmp
pop
loope
jnp
mov
outsl
mov
loop
inc
out
div
mov
and
add
jo
cmp
testl
dec
fisttpl
dec
add
orl
das
scas
sti
inc
cs
and
dec
loope
loope
insl
mov
push
sub
out
test
ret
mov
lret
inc
fs
test
xchg
xchg
mov
xor
jmp
fbld
adc
sbb
xlat
imul
push
dec
cmpsl
pushf
outsb
aad
dec
movsl
or
add
ss
mov
leave
insb
mov
frndint
rorl
enter
or
pop
xchg
shrb
aaa
cmpsb
sbb
mov
jne
inc
dec
sbb
pop
mov
mov
cmpsl
xor
xchg
xchg
cmpsl
mov
pusha
adc
adc
add
lods
adc
sbb
mov
sub
jl
push
add
sbb
push
inc
in
inc
stos
cmp
jnp
lret
test
cmp
jmp
push
test
lods
icebp
aad
pop
mov
je
fwait
imul
sbb
mov
inc
sbbb
push
lahf
sub
xor
pop
aas
stc
mov
rorb
and
mov
mov
inc
popf
pop
into
mov
fsubl
incb
nop
movsl
data16
test
or
jmp
sbb
loopne
sub
mov
repnz
push
push
sub
mov
enter
jns
xor
out
or
or
ja
and
test
cmp
insb
inc
insb
lahf
repz
nop
leave
pop
adc
add
ret
fucomp
ljmp
add
add
enter
popa
xor
lock
leave
lahf
lods
div
and
addr16
mov
add
andb
jo
mov
hlt
out
aas
scas
xchg
rcrb
ret
loop
inc
fwait
xor
cmp
sti
fisubrl
cmp
xchg
je
pop
jle
nop
mov
mov
fst
cmp
push
pop
or
cmp
or
dec
rolb
pusha
rcrl
inc
xor
bound
fdivl
or
daa
fwait
mov
aaa
pop
inc
nop
lahf
jmp
test
dec
outsb
mov
jbe
inc
out
test
inc
mov
sub
and
inc
testl
push
push
popa
dec
sysenter
cmpsl
shll
movsl
mov
lods
aam
sub
outsb
lret
test
adcb
cmpsl
xor
shlb
and
mov
xchg
pop
sbb
lea
cmp
stos
in
test
sbb
ljmp
jno
sbbb
in
sub
jp
push
mov
clc
ret
xor
test
je
subb
sarl
cmpb
pop
stc
sahf
lret
bound
or
adc
xor
push
mov
aad
test
incb
mov
loopne
and
imul
adc
pop
sbbb
xor
xchg
ss
dec
jo
jns
inc
push
pop
mov
enter
push
aam
sysenter
test
movsl
iret
das
fldt
push
test
inc
xlat
pop
in
cmp
mov
pop
mov
lds
pop
mov
push
xchg
mov
pop
cmp
inc
cmp
sub
push
mov
pop
mov
or
jge
pushf
push
pop
out
pop
popf
fists
outsl
jae
push
mov
shll
and
outsb
inc
ficomps
popa
jae
jle
in
outsl
xchg
inc
ret
pop
cltd
insl
mov
test
int
push
fs
lds
dec
cmp
cmp
leave
or
mov
andb
push
fdivl
mov
push
dec
ja
repz
out
adc
xor
cltd
inc
mov
add
mov
lret
pushf
test
pushf
imul
in
fmul
inc
push
xlat
leave
push
insl
push
sbb
mov
push
mov
mov
hlt
fsubrl
cmpsl
rol
roll
adc
dec
push
mov
or
repz
test
loopne
and
add
lret
xchg
sti
scas
in
shlb
lock
add
or
hlt
jmp
pop
adc
scas
lods
and
mov
dec
inc
in
in
xchg
add
mov
js
cmp
dec
sbb
sbb
loope
push
xchg
out
cmp
mov
dec
pop
imul
jns
rcll
pop
inc
repnz
sbb
mov
pop
fsubs
push
and
lahf
jb
inc
fucomp
jnp
fnsave
out
inc
ljmp
gs
or
stos
loopne
rorl
or
xor
dec
add
add
add
mov
test
pop
fisubrl
into
lret
add
shlb
sti
xchg
push
cmp
out
icebp
sbb
stos
out
sbb
popf
loopne
sub
rorl
lods
mov
jbe
lds
aaa
lea
out
lcall
psubw
mov
fldl
mov
scas
lret
addr16
jno
pop
fimull
xor
push
enter
cmp
cmp
lock
lds
jmp
add
cmpsl
add
cs
outsl
adcb
mov
addb
ss
sub
dec
inc
pop
add
jp
popf
dec
ljmp
cs
jmp
mov
sbb
push
cmpsb
jns
sbb
cmp
out
push
jnp
adc
insb
jle
cmc
mov
xor
les
mov
mov
xor
std
dec
or
inc
xlat
mov
pop
loop
dec
xor
outsb
pop
fdivl
xor
pushw
add
aaa
mov
mov
hlt
pop
adc
repnz
and
arpl
add
flds
or
ret
inc
or
aaa
or
sub
shl
les
lcall
xor
loop
movsb
stos
mov
xchg
jg
xor
mov
daa
roll
stc
xchg
andl
rcl
pop
dec
inc
out
mov
hlt
push
subl
arpl
add
stos
add
ja
xchg
movsl
and
sahf
imul
mov
into
xor
mov
xlat
fwait
in
rclb
inc
icebp
adc
xchg
pop
popf
fcoms
pop
pop
cmp
sub
xchg
sub
jle
dec
mov
daa
push
or
mov
jg
jne
lahf
stos
lods
sahf
dec
jecxz
test
pop
fiadds
sbb
gs
ds
out
rcrl
or
pop
loop
cmp
push
sub
imul
mov
inc
xor
add
mov
or
mov
in
test
mov
add
loop
jmp
and
pusha
add
jb
aas
dec
hlt
movd
popa
inc
dec
shl
leave
and
or
inc
mov
or
dec
mov
aad
cmpsb
mov
mov
ret
lea
or
scas
adc
fadd
lods
mov
cmc
incl
jle
pop
repnz
jp
add
jns
xor
pop
lock
sub
daa
aad
jbe
xchg
ja
mov
inc
xchg
sarb
test
loope
push
fadd
movl
jbe
adc
fistpl
jb
sub
jge
rorl
fimull
adc
sahf
adc
cwtl
mov
pop
out
test
or
repnz
aaa
push
inc
adcb
pop
sbb
mov
test
out
sar
mov
jno
fstps
out
popa
mov
sub
std
xchg
or
lods
push
push
rclb
push
in
pop
cmp
mov
fimuls
lar
mov
inc
xlat
in
outsl
add
leave
push
pushf
or
add
cs
scas
push
jb
scas
dec
in
xchg
fwait
repz
sub
sbb
inc
dec
and
cwtl
or
lcall
movl
jnp
fcomi
rorb
test
les
dec
lods
insb
das
subl
js
mov
or
cmp
inc
cld
xchg
sub
pop
cmp
pop
dec
gs
sub
adc
daa
inc
dec
add
mov
insb
add
fiaddl
cmp
inc
mov
sbb
jnp
movsl
das
orb
ja
test
mov
cli
fildll
cltd
addr16
or
mov
les
lcall
mov
inc
aam
mov
mov
xor
mov
in
jne
icebp
lds
jne
push
mov
ffree
and
cmp
add
fiadds
shlb
inc
movsb
mov
and
in
test
jmp
or
std
fbstp
pushw
fwait
mov
loopne
mov
arpl
mov
outsl
icebp
dec
mov
or
pop
scas
inc
cmp
push
out
sbb
pop
or
jecxz,pn
jbe
mov
dec
mov
add
insl
ljmp
mov
das
sti
pop
popa
in
jb
pop
dec
xchg
out
test
mov
gs
push
jae
iret
incb
mov
je
insb
adc
xchg
fstpl
push
mov
sub
popa
insl
push
inc
inc
xchg
andl
inc
pop
xchg
inc
in
jecxz
cmp
mov
mov
hlt
adc
je
addr16
xlat
push
push
lods
aam
mov
cvtps2pd
insl
push
and
and
fwait
test
inc
insl
loopne
pop
jae
mov
mov
pop
andb
sti
lds
repnz
lahf
dec
pop
leave
imul
stos
orb
addr16
mov
jl
cmp
addr16
cmc
rcrb
xlat
sub
data16
lahf
mov
enter
cmc
inc
jg
dec
les
mov
test
xchg
lods
ljmp
pushf
scas
inc
xor
xor
sbb
jmp
hlt
dec
js
inc
ret
pop
int
inc
push
mov
and
xor
pop
jne
cwtl
test
xorps
jmp
imul
push
push
cltd
adc
pusha
jae
and
pushf
popf
adcb
or
out
insl
dec
mov
mov
aaa
ficompl
sub
cmp
push
jne
push
scas
fnstsw
rclb
push
push
in
dec
arpl
push
in
mov
mov
or
aad
ret
inc
dec
mov
cs
adc
addr16
rolb
and
mov
nop
decb
adc
mov
or
mov
mov
popf
pop
aaa
fldt
cmp
fidivs
add
int
popa
push
mov
fwait
and
icebp
cmp
gs
sub
cli
jge
lahf
popa
cwtl
add
jne
lock
test
orb
adc
aam
dec
push
test
pop
fbstp
push
les
fwait
mov
pop
jmp
cmp
xchg
or
jbe
jge
std
gs
jo
add
imul
loop
sbb
dec
in
cmpsl
xor
pushl
lea
sub
mov
cmp
out
mov
or
mov
lods
sbbb
pusha
sub
mov
cmp
cli
testb
stos
sbb
xchg
scas
sbb
sub
ret
push
inc
adc
int
test
lret
imul
xlat
push
cmpsb
cmp
in
push
add
adc
in
dec
in
inc
sbb
int
sub
popf
addr16
loope
lret
sbb
adc
mov
repnz
pop
fldenv
add
add
add
push
dec
or
js
push
stos
sbb
mov
popw
testb
cmp
inc
lods
repz
cmc
sahf
into
dec
scas
inc
jge
lock
mov
arpl
sahf
mov
or
xor
pop
ljmp
mov
xchg
push
test
js
mov
xor
adc
fcompl
lods
mov
je
or
jmp
xchg
in
sub
fsubrp
pop
jno
mov
push
int3
dec
int
jmp
sub
call
and
test
rorb
pop
mov
shll
gs
mov
adc
int3
jg
sub
icebp
or
pushf
dec
pop
dec
push
push
jbe
jb
cmp
not
mov
mov
repz
test
ja
push
inc
call
hlt
daa
pop
push
mov
push
popf
mov
pop
cli
out
and
movb
xor
cmpsb
sub
xor
lock
cmpsl
repz
sub
sub
jns
ds
mov
dec
xlat
mov
and
sbb
or
cmp
jp
jbe
cmpsl
lds
inc
add
cld
repz
stos
test
inc
cs
push
test
jge
pusha
subb
loop
mov
push
push
xor
mov
jne
push
das
jecxz
push
xlat
ret
fldcw
jl
fisubl
sbb
aaa
int3
outsl
rcrl
arpl
clc
inc
and
sahf
pop
or
pop
and
xor
incb
mov
arpl
mov
push
fiaddl
and
or
imul
add
pop
and
xchg
fimuls
jns
in
cmp
xchg
jle
xor
int
sahf
aaa
fisubs
xchg
sbb
mov
adcl
cld
dec
and
std
add
cmc
inc
sbb
jmp
jl
add
xchg
cltd
push
aas
xchg
pop
jne
mov
push
incl
pushf
xchg
lock
and
inc
fwait
push
dec
std
pop
imul
sbb
cmpsl
sub
jl
int3
mov
fs
fisubrs
jbe
lock
dec
adc
lahf
sbb
xchg
xor
ds
xor
fisttps
pop
dec
hlt
inc
bound
cs
jo
dec
lods
mov
pop
mov
inc
pop
icebp
js
cmp
cltd
js
cwtl
fwait
fwait
xor
cli
pusha
and
mov
fcoml
adc
push
xchg
or
mov
mulb
jae
push
lods
xchg
xor
mov
jge
test
ds
stos
jmp
sub
sbb
fwait
push
out
insl
jl
scas
int3
or
imul
xchg
loop
imul
sub
mull
push
sti
push
adc
scas
cmp
fwait
pop
cmp
negb
pop
and
lds
xchg
pushf
mov
not
or
inc
aas
mov
test
inc
pop
fistl
mov
push
in
pusha
mov
push
jmp
imul
mov
sbb
mov
add
jecxz
xor
stos
int3
lret
pop
xor
cli
mov
push
jmp
mov
icebp
or
movsb
mov
pop
insb
pop
scas
data16
sbb
lret
sarb
mull
rolb
pop
pop
icebp
mov
inc
inc
sbb
orps
or
jg
pop
inc
je
inc
out
in
xor
pop
jecxz
filds
mov
mov
enter
iret
sbb
lods
rcr
subb
ds
mov
clc
jmp
pop
add
xor
xchg
cmp
frstor
cmp
imul
mov
loope
xchg
xchg
mov
xchg
les
xor
push
mov
pop
cltd
mov
pop
cli
xchg
dec
movsl
xor
pusha
mov
incl
xor
sub
not
jmp
jg
dec
or
cmp
fcmovnb
loope
fiadds
or
sub
into
in
dec
fisttpl
leave
out
jo
ret
cltd
mov
lret
cld
push
add
cmp
pusha
nop
mov
popa
mov
fs
mov
es
fidivs
es
pop
adc
enter
jl
testb
cmp
sub
fcoms
lods
adcl
daa
lcall
inc
jmp
xchg
in
add
lahf
leave
xor
ss
adc
fbld
subb
xor
cmp
and
cltd
mov
mov
loopne
push
sub
cmp
cmpsl
cmp
cmp
aam
mov
inc
fsts
pushf
jno
fldl
mulb
sub
lret
jl
pushf
addl
lock
mov
stc
cmp
arpl
test
ja
imul
icebp
aas
xchg
dec
and
js
outsb
xor
pop
push
lret
shrb
jae
call
push
cltd
std
stc
lea
push
cld
push
jg
mov
cmp
int
das
mov
push
insl
cmp
je
cli
sub
mov
mov
push
stos
mov
xor
std
add
xor
xor
dec
mov
stc
sub
aaa
jo
or
jno
dec
sub
pusha
pop
pop
cld
andb
and
pop
adc
mov
mov
ds
dec
inc
loop
cmp
out
sbb
jp
negb
leave
test
push
stos
fnstsw
pop
das
jne
xlat
das
lds
lock
inc
sbb
xchg
mov
fnstcw
daa
dec
xor
roll
push
cmpsl
jb
rcll
push
addr16
xchg
daa
push
or
push
or
fistpll
les
mov
xchg
aas
fmull
mov
xchg
push
shll
ret
arpl
or
xchg
cmp
ljmp
add
xchg
bound
mov
xchg
push
arpl
dec
test
jle
popf
push
cs
push
or
stos
mov
and
xchg
xchg
xchg
jnp
out
or
and
test
lret
cmp
lret
mov
cmpsl
cmp
outsb
adc
insb
mov
rcr
gs
pop
negl
xchg
mov
call
out
mov
repnz
xorb
fnsave
push
andl
stos
fsubrs
xor
adc
sub
or
cmp
inc
push
in
and
pop
add
out
mov
add
pop
xchg
enter
addr16
mov
pushf
and
adc
das
cmp
mov
fcomp
add
mov
fsubl
jmp
popf
and
xor
xlat
sbb
fiadds
insl
aas
jg
das
xor
mov
in
push
nop
pop
out
fsubrs
xor
ret
jno
cltd
fnsave
inc
cmp
pop
jecxz
mov
lea
pop
xchg
aaa
lret
shrl
add
shrb
sub
mov
xor
data16
and
mov
xor
xchg
sbb
lret
sub
jl
jno
bound
mov
gs
inc
push
decb
sbb
popf
pop
jge
push
lock
mov
pop
lret
lods
mov
inc
and
push
add
outsb
jbe
pop
sub
movsl
inc
lret
mov
mov
pop
push
lods
xor
xor
push
add
sub
dec
rcll
lds
aaa
xor
push
cltd
sbb
mov
lcall
mov
scas
push
daa
orb
nop
push
push
out
bound
movsb
cmpb
sti
add
fwait
xchg
stos
mov
pushf
xchg
daa
in
ret
cld
jns
lock
shlb
ljmp
call
mov
cmp
and
inc
loop
jns
pop
mov
lcall
aad
ret
pop
fbld
pop
dec
cmpsb
fimull
divl
pop
pop
repnz
mov
push
gs
imul
imul
adc
shlb
cmp
sub
es
repnz
pop
push
or
adc
and
or
cs
and
sub
lret
and
scas
mov
or
push
dec
mov
and
das
int
fisttpll
sahf
aad
flds
test
lods
push
adc
loop
mov
or
xor
ret
repz
mov
xchg
ss
or
add
mov
mov
fs
cld
cltd
test
notb
lods
xchg
jo
pop
xchg
test
or
fnstsw
testb
jl
cmpsl
or
add
in
cmp
add
inc
test
pushf
push
test
jno
adc
jnp
jbe
cmpsl
andl
sbb
sbb
xor
fbstp
inc
fld
cld
pop
sub
fidivrl
fidivrl
cltd
xor
cmpsb
mov
inc
sub
fiadds
negb
jmp
roll
cli
jb
cmp
cs
xchg
movsb
push
sbb
mov
sub
add
out
repz
sbb
arpl
dec
cmp
clc
out
cmp
pop
push
test
sub
jo
inc
mov
movl
sub
test
push
push
mov
pop
mov
push
loop
mov
and
xchg
fmull
push
call
dec
adc
jp
loop
jg
outsl
cli
mov
bound
xchg
scas
and
popf
xor
xchg
aam
lea
rclb
js
mov
arpl
xchg
cld
mov
jo
mov
mov
cltd
fiadds
xchg
int
dec
negl
es
stc
nop
pop
into
jge
stos
rorl
into
addr16
jg
icebp
adc
jp
shlb
push
outsb
inc
lcall
or
xchg
sbb
cmpsb
inc
fsubl
add
shl
adc
mov
sub
and
and
inc
jl
es
lods
xor
xchg
lds
jg
and
shlb
cli
cwtl
icebp
pop
dec
and
sarb
pusha
lods
shrb
xor
sub
repnz
daa
jmp
dec
xor
pop
pop
das
ret
lahf
push
jno
sbb
ss
aad
loopne
pop
ss
or
leave
loope
shrl
jp
test
mov
arpl
cmpsb
sbb
jle
aad
xchg
xchg
push
das
dec
push
mov
iret
cmp
xchg
jecxz
iret
push
dec
add
mov
sbb
adc
faddl
and
mov
hlt
inc
sbb
mov
pop
outsl
jns
mov
jg
inc
ret
sbb
sub
daa
and
icebp
jns
mov
lret
adc
movsl
jbe
sub
sbb
mov
shll
inc
and
js
inc
xchg
sub
sub
cwtl
and
lcall
xchg
shrb
cli
or
popf
cmp
mov
mov
int
xchg
pop
out
mov
jp
imul
mov
je
inc
shlb
pop
sti
push
jge
dec
bound
dec
sub
cmp
mov
or
jp
aad
bound
sbb
jl
pop
add
lret
adc
push
inc
popa
and
cld
outsb
sub
addb
dec
push
pop
cwtl
subl
loop
cmp
inc
jge
mov
xor
cmpsb
daa
jmp
mov
imul
ljmp
cmp
sub
lods
mov
fstpl
jle
dec
js
mov
lahf
jo
xchg
aad
lcall
mov
xchg
mov
les
inc
pop
sbb
sub
out
add
aas
fnstsw
jno
sbb
mov
or
aas
add
xchg
xor
out
jne
jl
jns
pop
and
fidivl
faddl
pushf
fsts
jl
add
or
and
je
iret
jno
xchg
out
xchg
imul
outsl
jne
lods
das
mov
mov
icebp
mov
dec
es
lcall
in
das
or
pop
call
loopne
icebp
xchg
scas
popf
repnz
in
test
cs
cmp
sub
ss
cs
sub
lret
daa
addl
movsb
repz
push
mov
push
js
push
je
sbb
cld
xchg
icebp
ror
push
xlat
lahf
push
jmp
mov
aad
adc
mov
sbb
leave
xor
cmp
add
cmc
mov
lods
lahf
arpl
fwait
adc
cmpsb
cltd
rcr
sahf
adc
cmp
xchg
fisubrs
dec
data16
sbb
cltd
sub
or
lea
and
les
add
hlt
lock
xchg
lods
cmp
dec
add
sbb
test
or
cltd
pop
adc
push
iret
mov
mov
int
cmpsb
fidivl
mov
push
inc
sbb
lahf
jo
sti
xor
in
icebp
sti
push
fsub
add
dec
divb
cmpl
mov
ds
mov
scas
sahf
sbb
into
add
ja
int3
jecxz
stos
daa
add
aad
pop
aaa
jbe
mov
sahf
mov
pusha
pop
stc
aam
in
sub
fisttpll
fldt
mov
ds
xchg
lods
js
mov
bound
outsb
inc
or
ss
jo
sub
sub
jne
jp
push
xlat
xor
cld
ds
scas
add
jge
cmpsl
aad
jno
jg
or
aam
jmp
push
xchg
xor
push
push
pop
in
adcb
or
imul
daa
mov
jecxz
adc
add
call
aas
les
lds
lcall
je
ret
dec
into
add
sub
or
es
inc
pop
ds
push
out
sbb
lock
jge
movsl
repnz
daa
lods
mov
stos
imul
cmp
leave
aaa
not
adc
shr
inc
adc
mov
cmpsl
ds
sarl
jns
fsts
adc
or
mov
ljmp
imul
jge
add
pop
decb
in
mov
dec
lods
jecxz
or
xor
push
fsubrs
js
js
inc
jb
mov
je
roll
std
gs
sub
xor
jmp
mov
jno
mov
cmc
stc
jnp
repz
repnz
fwait
inc
dec
push
mov
add
test
adc
xchg
inc
lods
mov
mov
push
mov
and
xor
adc
int3
cltd
lds
xchg
adc
push
je
xorb
mov
jmp
jge
pop
mov
pushf
dec
gs
sbb
inc
sbb
sub
mov
push
lods
inc
lahf
sarb
mov
add
sbb
mov
loope
sub
xchg
jb
dec
out
mov
inc
push
jns
shl
ja
mov
jne
jmp
mov
or
lret
pop
jl
lret
addl
and
gs
lcall
push
ss
subb
push
mov
jmp
inc
lret
and
sbb
das
push
fdivs
pop
nop
rcrb
mov
das
push
sbb
ss
jmp
hlt
push
jno
cmp
and
adc
adc
lret
sahf
sbb
roll
fwait
aad
xchg
inc
inc
adc
mov
xor
jo
aas
shlb
push
pop
bound
scas
mov
cmp
aad
xorl
fmuls
dec
pop
lods
lcall
jg
jnp
mov
fiadds
std
into
xor
fistps
out
xlat
push
or
mov
imul
add
aad
fsubs
cmp
push
cmp
iret
loop
fimull
mov
cmp
sbb
push
pop
mov
lahf
arpl
sbb
push
inc
adc
add
enter
arpl
sub
ret
mov
shrb
or
cmpsl
cmc
xlat
repz
xchg
push
aas
out
les
inc
sbb
add
popf
push
mov
xchg
aaa
and
fadds
or
mov
push
repnz
xchg
dec
pop
inc
fimuls
icebp
mov
out
xchg
fnstenv
mov
addb
scas
jae
vpunpckhbw
popa
push
push
rcrl
push
popf
lea
test
inc
fisttpll
xor
push
mov
jb
jmp
xchg
cmp
pop
pushf
jl
and
mov
pop
movb
imul
add
insb
mov
cltd
or
dec
rorb
fsub
and
or
in
cmpsl
insl
or
inc
repnz
sbb
xor
sbb
jg
jb
stc
inc
jns
xchg
xchg
fnsave
lahf
lret
mov
push
push
sbb
sbb
mov
mov
ret
push
sti
es
cmpsl
push
dec
inc
rolb
pop
xlat
lret
sub
xchg
sahf
addr16
jo
out
ss
bound
xchg
dec
add
andb
cmpsl
repnz
sub
shrl
inc
sbb
shl
outsb
outsb
sbb
dec
push
loope
mov
sbb
ret
pop
clc
int
push
jne
lock
je
es
jo
sbb
jg
jne
into
call
fistl
loope
data16
stos
mov
mov
mov
sub
jge
fadds
jne
leave
cmp
and
daa
mov
cmp
mov
ds
xchg
fists
rcr
aam
add
ret
arpl
jo
adc
into
add
jge
xchg
dec
shll
out
cmp
pushl
scas
clc
outsl
sbb
xchg
jmp
lds
cmpsl
cmpsl
or
rorl
push
adc
mov
mov
sbb
push
ret
rcll
add
xor
mov
jnp
neg
xchg
int
aas
rcll
insb
jbe
adc
call
shl
sti
or
and
mov
xor
out
mov
adc
cmpb
cmp
xchg
fdivl
dec
adc
adc
mov
jns
inc
xchg
push
stos
push
jl
sbb
js
js
jg
jae
rcpps
pop
adc
pop
cmp
adc
push
push
icebp
popf
subb
ja,pt
imul
sbb
or
mov
cmpl
xchg
lahf
xor
ja
mov
rcrb
xchg
addl
aas
dec
push
aas
stos
sub
mov
jl
add
xchg
pop
cwtl
add
lcall
out
fistps
testb
shrl
imul
enter
out
hlt
cs
mov
mov
dec
xchg
fs
dec
test
mov
or
cmovp
sbb
mov
clc
cmpsl
and
cwtl
pushf
pop
das
shrl
push
shll
push
dec
push
pop
xor
sbb
push
aaa
int
mov
mov
sbb
loope
push
and
ret
insb
mov
lods
add
or
addr16
push
and
ret
xchg
les
insb
dec
in
lds
aad
fadds
fmul
mov
lahf
pusha
and
ljmp
inc
push
sbb
adc
mov
loop
cmpsb
push
jb
jg
imul
cmp
add
cmc
jne
and
adc
popf
cmp
inc
cmpsb
jb
aaa
cwtl
mov
inc
add
push
cwtl
pop
push
mov
iret
xchg
pop
lds
pop
clc
rcl
stos
out
test
jecxz
fdivrl
imul
mov
sub
jbe
adc
js
jg
popa
mov
icebp
dec
push
add
cmp
ret
hlt
stos
mov
pop
adc
and
aaa
sub
pop
and
or
mov
jbe
push
aaa
mov
fxtract
and
mov
test
fldl
pop
nop
cltd
je
dec
fsubrs
outsl
push
out
orl
push
and
in
les
adc
pop
cwtl
das
xchg
and
inc
jno
mov
enter
sbb
jo
lds
add
les
ss
lock
pusha
or
sbb
add
test
outsl
scas
lret
loop
push
daa
cli
pushw
jo
sbbl
mov
mov
cmpl
mov
sub
add
inc
in
pop
loopne
ja
hlt
and
repz
xchg
pop
mov
cmpsb
mov
fdivp
xchg
sub
in
cmp
stc
sbb
jp
sbb
sbb
jecxz
mov
lret
int3
mov
dec
es
lds
mov
pop
dec
xchg
and
ss
pop
loope
jae
lods
and
testl
inc
or
mov
call
roll
sub
pop
in
dec
lahf
adc
clc
imul
and
mov
es
mov
cmp
shl
movsb
out
lds
loope
pop
cs
sti
mov
dec
dec
xor
imul
adc
fcmovnu
pop
test
out
push
or
scas
mov
outsb
pop
xor
test
out
jno
sub
je
fcmovu
cmp
es
ds
rclb
mov
mov
out
mov
mov
dec
adc
roll
and
je
cmpsb
dec
adcb
push
sbb
jae
fdivrs
outsl
pop
add
xor
mov
xchg
sub
mov
jmp
mov
and
iret
jge
rol
fbld
xchg
jne
sub
ja
push
xchg
scas
mov
push
mov
adc
loopne
jb
dec
add
mov
dec
xlat
pop
icebp
enter
add
adcl
cli
call
sbb
rol
std
sub
jno
mov
mov
lock
mov
loope
inc
out
imul
or
xchg
shlb
mov
mov
xlat
enter
xor
pop
jmp
cmpsl
and
push
dec
add
mov
push
sbb
arpl
push
enter
jecxz
pop
cmp
xor
jl
aas
lret
aad
cwtl
xor
xchg
add
inc
push
jns
jecxz
inc
add
xchg
or
inc
les
pop
notl
aad
outsb
and
push
push
daa
push
andb
fistps
mov
mov
cmpb
dec
out
pop
int
jge
ss
jo
lock
push
sbb
inc
mov
jl
mov
es
pop
fcoml
lahf
jl
mov
add
mov
dec
mov
in
push
jmp
inc
outsb
ficompl
shrl
movsl
mov
cltd
add
xchg
mov
js
insb
daa
mov
and
fwait
rol
pushf
dec
test
popf
xor
insl
out
sub
add
mov
je
or
mov
daa
ja
rorb
add
mov
sbb
lea
push
sub
int3
mov
push
cwtl
sbb
jae
pop
mov
jb
sbb
loop
fst
loope
xlat
addl
cmc
jno
daa
mov
or
xor
pop
scas
push
bound
jno
mov
push
fbstp
pop
decl
cmpsl
sbb
cwtl
adc
imul
push
push
dec
inc
cmp
pop
lock
hlt
push
sbb
rolb
shll
cmp
imul
or
shr
xchg
pop
add
ja
das
in
pop
jo
push
push
jb
mov
stos
adc
add
push
mov
inc
push
xlat
in
test
mov
ret
ja
push
je
loopne
cli
lret
bound
adc
stc
sub
pop
mov
popf
imul
inc
and
rcll
push
addr16
jns
mov
inc
mov
test
sbb
push
lret
adc
pop
outsb
and
sub
pop
jp
mov
arpl
dec
popa
shl
pop
lea
daa
js
jnp
cltd
lods
icebp
decl
adc
loopne
loopne
mov
mov
jno
cs
add
ljmp
mov
pushf
jl
xchg
jbe
je
mov
jle
and
loop
test
sbb
cli
fwait
add
sub
pop
jo
shrb
das
pop
xor
leave
sahf
pop
test
notl
inc
cmpps
jle
scas
fmuls
lret
push
imul
inc
js
xchg
sub
arpl
sub
xchg
sbbl
into
add
or
pop
and
mov
and
les
adc
sub
pop
add
sub
scas
pushl
jo
rolb
inc
iret
sbb
jle
lock
xchg
sub
sbb
out
faddl
push
loop
push
cmp
push
fisubrs
repnz
into
dec
out
bound
push
rcrb
incb
loopne
jle
adc
aad
push
test
jl
test
or
arpl
les
leave
outsb
rcll
cmp
mov
ffreep
cltd
mov
cmp
lret
outsl
fldt
cmp
cmc
inc
jmp
adc
in
icebp
jle
rcl
pop
cmp
sbb
jno
lds
inc
sbb
outsl
mov
mov
xchg
mov
mov
jge
xchg
add
pop
test
mov
shl
notb
cmpb
addr16
mov
mov
sub
and
cli
push
nop
cmp
fimull
sub
xchg
xor
mov
add
aas
lea
add
insl
sahf
lds
and
ret
out
jge
in
or
in
pop
fadds
inc
push
lods
stc
std
insl
mov
sub
or
dec
pop
dec
mov
mov
pop
xor
mov
pop
adc
pop
lods
pop
sbb
rorb
mov
loopne
xchg
add
fdivs
xor
mov
sbb
add
lret
cmpsl
imul
lods
lods
dec
push
push
out
xlat
outsb
cmpsb
adcb
jmp
movsb
push
fstl
fisubs
mov
fsub
dec
mull
pop
mov
in
mov
mov
adc
outsb
lahf
pop
dec
leave
inc
jge
in
ds
inc
cld
leave
sbb
pop
inc
xlat
jb
rorb
lret
outsl
sbbl
jb,pn
stos
stc
mov
lds
clc
mov
adc
pop
insb
js
xchg
cwtl
sub
outsl
subb
xchg
push
sahf
mov
outsl
inc
mov
mov
pop
sti
or
cmp
loopne
add
or
push
xchg
repz
and
mov
inc
mov
out
stos
mov
sbb
sahf
push
sbb
sbb
fdivrs
inc
mov
pop
xor
nop
add
les
cmp
inc
loopne
add
jmp
fimuls
inc
jae
add
sub
adc
call
mov
andb
jno
imul
push
out
insl
sub
sbb
dec
xor
cmp
aaa
std
mov
jge
pushf
daa
fistps
inc
into
cmc
jl
push
fs
dec
dec
jg
inc
jecxz
adc
out
cmpsl
fnsave
cmp
jg
lods
push
ds
sub
jb
pop
and
daa
cmp
sub
adc
jg
cmp
xchg
and
or
push
sbb
jp
sub
sbb
add
mov
push
hlt
mov
cmp
pop
push
or
lret
outsb
pushf
inc
dec
lret
sbb
call
push
xor
pop
rorb
mov
test
aam
xor
xchg
pop
sub
sub
ret
lea
or
mov
sub
and
mov
inc
out
mov
mov
into
pop
cmpsb
ud1
imul
inc
add
jl
jne
push
sbb
stos
add
cmp
stos
test
pop
outsb
pop
negb
xor
sti
es
sub
mov
stc
insl
jle
lahf
ret
fisttpll
sub
lods
mov
out
adc
test
hlt
mov
cmp
inc
sbb
mov
out
or
cld
sub
shlb
sub
push
mov
aas
mov
pop
xor
inc
mov
add
lock
pop
xor
pop
mov
std
cltd
mov
mov
popf
out
xor
adc
mov
cld
lret
mov
pop
rorb
mov
xlat
ror
je
shll
pop
rolb
dec
push
cmp
imul
call
pop
mov
pop
lcall
mov
adc
dec
push
shrb
mov
inc
mov
fcoms
test
lahf
leave
int
subb
pushf
jnp
mov
jge
mov
repnz
mov
mov
xlat
outsb
dec
repz
dec
mov
cmc
lret
lock
imul
repnz
xor
into
insl
out
inc
subb
sbb
inc
inc
mov
mov
jne
sti
stos
cld
xchg
inc
mov
sbb
mov
bound
sbb
mov
jns
daa
adc
pop
adc
jns
addr16
das
in
ja
cmp
inc
xor
xor
push
push
into
stc
xor
or
jl
mov
les
adc
into
push
insl
insb
outsl
loop
mov
sbb
out
insl
sbb
mov
sub
orb
cmpsl
dec
sub
push
mov
dec
pop
jecxz
and
cmp
add
jge
and
dec
cmp
inc
inc
sbb
mov
mul
xor
das
or
xorl
inc
xlat
mov
push
pop
dec
aam
dec
daa
aas
dec
cmp
clc
push
fnstcw
sub
leave
int
call
test
jmp
and
movsl
test
mov
push
movsl
je
popf
gs
cmc
sub
aad
jne
mov
call
std
add
pop
or
and
insl
xchg
lods
into
subl
incb
ret
adc
movsb
rorb
cli
adc
sbb
push
cltd
push
inc
jno
adc
in
mov
cmp
sbb
pop
pop
cmp
dec
inc
or
xchg
and
test
shll
loope
out
lahf
stos
and
sbbl
pop
push
inc
shrl
dec
in
idivb
adc
mov
nop
in
fwait
in
mov
sbb
mov
lahf
ss
cwtl
es
into
ret
or
mov
ds
stos
addr16
enter
out
test
rorb
scas
cwtl
stos
out
mov
push
xor
andb
stc
lahf
sub
sahf
pop
push
mov
cmp
bound
inc
les
mov
jmp
rcrl
leave
dec
loop
sbb
cmp
inc
or
mov
dec
and
mull
js
pop
scas
or
cmpsl
push
sbb
addr16
xchg
dec
dec
lcall
add
sbb
mov
in
je
xorl
xchg
dec
pop
sub
cmp
ret
pop
sbb
loopne,pt
outsb
mov
ja
leave
sahf
in
les
cli
pop
xorl
cli
mov
popf
and
cld
scas
test
sub
inc
push
add
popa
ljmp
mov
das
movl
repz
daa
ret
sub
jo
xor
stos
push
add
dec
add
mov
repnz
mov
lahf
dec
mov
lea
pop
adc
cwtl
andb
ds
push
xor
sub
mov
je
and
mov
push
adc
lea
mov
sbb
or
and
jge
add
call
xchg
sub
push
sti
cmp
add
pop
add
add
dec
lahf
pop
sbb
pop
stos
cli
ljmp
and
adc
lea
inc
adc
sub
adc
mov
xchg
mov
add
sbb
sub
test
fmuls
test
icebp
pop
jbe
sub
pop
out
fildll
inc
inc
mov
lea
leave
sub
add
es
jbe
cmp
in
cli
sbbb
clc
into
daa
fnstcw
cmpsb
xchg
cmp
insb
mov
sahf
popa
mov
adc
sbb
pop
cmc
iret
xchg
or
hlt
in
jl
fwait
lcall
cmp
sbb
inc
ror
int3
pop
scas
mov
mov
out
mov
lods
arpl
lahf
or
jnp
xlat
sti
fwait
pop
pop
jne
ret
stos
inc
mov
mov
fadds
jl
iret
jle
inc
mov
rcr
fs
push
out
js
loopne
inc
enter
xchg
arpl
mov
mov
jmp
push
jne
fdivrp
scas
add
xor
and
lds
dec
mov
mov
jae
cltd
test
cmp
mov
and
in
xor
jecxz
in
mov
pop
ljmp
lahf
inc
push
mov
dec
mov
outsl
xor
fisubrl
insb
lcall
push
push
lock
ss
in
or
loopne
or
repz
push
test
xchg
jo
cmpsb
xchg
mov
mov
loopne
pop
cltd
dec
mov
mov
int3
mov
repnz
dec
sti
fdivrs
inc
xchg
movsl
cmp
adc
jl
ljmp
repnz
hlt
pop
or
mov
and
mov
mov
push
int3
das
or
inc
xchg
mov
popl
xchg
fwait
incl
test
push
xor
imul
sbb
mov
pop
push
xor
lret
popa
lods
dec
addr16
add
in
xor
cli
or
jnp
adc
sbb
xchg
dec
testl
fistl
xchg
pop
in
or
sbb
sub
lcall
aas
call
rcrl
push
pop
add
shlb
push
shrl
scas
adc
cmp
pop
and
loope
mov
push
adc
faddl
fwait
xor
add
jle
js
mov
aas
imul
mov
or
mov
and
xchg
adc
rcrl
imul
mov
mov
imulb
mov
pop
imul
mov
xorl
push
mov
adc
mov
mov
pop
xor
xchg
stos
jnp
or
out
cs
mov
dec
add
dec
and
int3
cmp
cmp
adc
test
out
aad
fisubrl
adc
pop
cs
sub
cmp
es
mov
lods
inc
push
xchg
lods
repz
popa
imul
and
fsub
push
dec
call
mov
sub
adc
mov
imull
sbb
repnz
cs
cmp
mov
adc
sub
push
cwtl
lcall
lcall
fiadds
in
add
call
mov
fwait
pop
or
push
arpl
imul
push
incb
pusha
pop
pop
decb
div
mov
add
andl
adc
insl
ret
cmc
shlb
mov
and
je
push
in
rclb
cmp
repz
dec
and
mov
loop
mov
cmp
lock
jb
gs
es
mov
mov
adc
add
and
push
cli
xchg
adc
push
sbb
popa
mull
sub
pop
data16
mov
popa
mov
fiadds
or
jbe
jbe
mov
add
xor
cmp
cli
es
sti
and
sub
mov
xor
add
cli
popa
xchg
xor
sub
sbbl
sbb
and
jmp
sbb
pop
sub
pop
outsb
popf
push
push
loopne
icebp
sahf
pop
inc
in
xchg
xchg
insb
popf
mov
jg
cs
cmp
repz
mov
out
mov
hlt
out
xchg
inc
add
xchg
mov
xor
mov
push
sbb
and
rcrl
outsb
loope
mov
inc
and
sbbb
xor
andl
mov
mov
gs
iret
pop
cmpsb
xchg
mov
xor
in
adc
jae
leave
mov
jne
sbb
pop
insb
cld
test
push
jmp
pop
add
mov
pop
xchg
cmp
js
or
lcall
aaa
jb
xor
cld
inc
outsb
push
cmp
jp
and
push
fsubrl
in
fwait
ret
xor
or
lret
lcall
adc
call
adc
fxch
cmp
push
hlt
cli
test
adc
sbb
xor
mov
push
cmpsb
insl
adc
jb
es
dec
imul
fisubrs
fs
xchg
or
jb
jae
mov
mov
inc
cli
adc
push
cmp
mov
mov
rcl
bnd
sbb
adc
das
fiadds
pop
cmp
add
cmp
arpl
pop
mov
push
movsb
jb
dec
adc
rclb
shrb
xor
mov
jmp
stc
jns
push
push
movsl
lods
and
pop
pop
dec
sub
jp
xchg
imul
add
clc
mov
xor
mov
mov
data16
push
shrl
inc
push
test
push
mov
cmpsb
shlb
imul
lods
sub
cmp
dec
test
inc
adc
fstpt
clc
jae
cmpsb
xchg
inc
std
xchg
mov
in
sub
push
mov
cwtl
cmp
in
cmp
adc
cltd
aaa
lcall
push
in
mov
clc
incl
loop
sbb
pop
testb
mov
xchg
sbb
stos
out
jl
mov
push
mov
sbb
lret
and
sbb
inc
mov
cmp
jb
push
out
call
pop
repnz
mov
pop
add
push
jge
in
pop
push
sbb
mov
lds
mov
rorl
sub
xchg
cld
cmp
sub
sbb
or
cld
xchg
jo
xor
vphaddudq
shll
cmp
incl
and
mov
adc
adc
addr16
inc
mov
push
addr16
jb
jle
jge
cmp
in
leave
ret
dec
scas
push
mov
xlat
imul
testb
scas
sub
sbb
ret
into
push
dec
adc
mov
loopne
loop
rorb
lods
jle
and
lock
mov
add
arpl
and
xchg
outsb
std
adc
fdivr
in
and
inc
fbstp
xor
es
std
test
in
aad
inc
add
dec
daa
push
test
pop
jl
cmp
outsl
dec
rcll
inc
push
std
in
cmp
or
mov
aaa
sbb
mov
inc
mov
pop
int
gs
repnz
jl
insb
mov
and
adc
cltd
popf
repnz
xchg
cwtl
clc
cmp
ret
mov
mov
jg
sti
xor
adc
pop
sahf
mov
lds
xlat
or
lret
sbbl
push
lret
in
mov
aaa
call
popl
ss
int3
mov
sbb
ss
jge
out
push
pop
push
mov
imul
daa
aaa
and
data16
xor
ret
hlt
xor
subl
mov
pop
and
xor
pop
testb
mov
jl
dec
movsl
into
mov
enter
pop
sub
mov
scas
inc
sbbb
dec
fcompl
pusha
rol
mov
insl
ret
adc
mov
push
xorl
add
outsb
xor
cmc
cmp
dec
outsl
push
popf
lahf
dec
rclb
mov
pop
mov
daa
mov
in
divb
dec
or
pusha
pusha
dec
cmpsb
push
rol
loopne
lea
mov
or
out
int3
cmp
cmp
mov
and
in
cltd
sbb
data16
xor
sti
aas
aad
dec
mov
out
pop
pop
outsl
into
out
outsb
cmp
or
mov
repnz
rcl
pop
jo
data16
xchg
shlb
bswap
movsb
test
push
cmp
mov
mov
pop
dec
pop
mov
adc
cli
out
jl
xor
jb
imul
adc
inc
push
mov
fs
jl
in
xorl
iret
es
push
mov
xor
in
lods
pusha
fisttpl
cs
pusha
stos
ret
push
push
lock
fldt
xor
inc
mov
push
out
test
aaa
cmpb
jmp
add
jb
imul
test
iret
es
bound
fldenv
fxch
fmull
xchg
jecxz
shll
push
inc
adc
mov
pop
ret
cli
xchg
adc
fs
bound
std
jo
stos
scas
test
ja
jmp
and
dec
in
dec
sub
mov
jge
ret
repnz
mov
shll
ds
test
adc
test
jb
andb
mov
add
insl
sub
test
jle
jae
stos
mov
and
lahf
jo
mov
daa
in
das
inc
pop
lock
lret
or
jmp
cmp
xlat
mov
or
test
in
test
jg
sub
pop
lods
mov
in
rorl
iret
addr16
lcall
adc
mov
in
add
mov
daa
jno
jl
push
dec
ljmp
pop
xchg
fsubrl
nop
ja
pop
push
mov
loope
in
std
lock
mov
sbb
andb
jo
fstl
mov
out
ret
gs
in
sub
mov
inc
pop
test
add
lea
mov
aad
sub
out
sbbb
mov
je
andl
lea
cmp
movsb
add
movsl
repz
std
in
jb
stos
inc
insb
add
leave
std
or
sub
leave
arpl
inc
lock
add
sbb
rolb
or
arpl
repz
movsb
mov
lret
fwait
sbb
cmp
imul
xchg
or
mov
sub
call
and
ficomps
push
mov
push
add
hlt
cmp
aam
or
sub
pop
lea
sub
mov
push
loop
push
jne
call
inc
pop
shr
jp
xlat
and
jle
or
push
rcrb
xchg
xchg
sbb
jl
inc
push
push
mov
xor
inc
mov
mov
int3
ret
sbb
or
mov
mov
movsl
jns
lods
inc
les
inc
cmpsb
fstp
jecxz
les
shr
fs
fisttps
sub
fmull
mov
jns
addr16
or
jg
out
mov
lahf
negb
test
sub
lock
push
dec
pop
mov
lcall
aam
xor
lret
sbb
xor
adc
repz
jecxz
mov
fiadds
add
cmp
sar
xchg
cmc
ljmp
stc
dec
scas
sbb
jle
sahf
xchg
ljmp
xchg
jle
mov
cmc
fdivs
adc
das
jnp
xor
in
bound
fldenv
cwtl
cltd
xchg
dec
mov
notb
pop
into
fimull
jo
add
aam
xor
in
lret
bsf
std
jae
cmp
aaa
xor
inc
lret
push
leave
mov
cmp
call
pushf
push
es
inc
rolb
lcall
pop
add
pop
xchg
je
rorl
jg
or
and
into
or
or
shll
fs
or
inc
mov
sub
or
sbb
lock
jmp
mov
jae
sti
mov
sbb
jo
scas
mov
stos
ffreep
fldt
pop
pop
dec
pusha
pop
aam
push
jge
jo
stos
sbb
ret
xlat
inc
cmp
mov
mov
imulb
jmp
mov
loop
enter
jge
ss
inc
push
push
inc
test
es
mov
sbb
push
mov
sbb
xchg
push
test
sub
push
push
jbe
js
movsb
sbbb
add
into
loope
pop
sbb
testb
xor
xchg
add
cs
daa
sbb
sbbb
and
lret
jns
arpl
inc
pushf
inc
aaa
pop
sti
push
jne
bound
sbb
mov
int
sbb
fisubrl
imul
shl
imul
add
xchg
mov
dec
enter
dec
xor
repnz
adc
mov
mov
sub
sub
or
loope
mov
mov
sub
cmp
lret
add
ja
sub
dec
jne
dec
cwtl
jo
in
loope
shlb
mov
sub
dec
test
pushf
mov
cmpsb
mov
fmul
pop
dec
cs
sti
xchg
jp
fs
xchg
add
dec
push
add
std
inc
fwait
scas
xlat
fcos
scas
push
dec
imul
jp
dec
cmp
cmp
or
call
stos
cs
inc
pusha
ja
pop
aaa
test
out
dec
aad
ret
mov
mov
xchg
std
sbb
rorb
lahf
or
mov
das
push
adcl
rol
les
jl
pavgw
and
add
jp
cmp
iret
add
jns
and
bound
lcall
ror
xchg
mov
aad
popl
in
push
or
je
adc
ret
xlat
add
inc
loop
and
and
outsl
xor
jle
or
add
xor
mov
mov
cmp
arpl
sbb
cmp
xor
arpl
add
das
inc
add
push
jmp
or
jo
adc
push
cmpsl
add
int
enter
rol
cs
ret
lcall
sahf
and
mov
add
inc
cmpsb
lahf
xor
shll
test
cmovp
xorb
test
out
test
test
ficoms
outsl
inc
popa
adc
lcall
jne
mov
xchg
pop
repnz
aas
sbb
out
pop
shrb
adc
and
sbb
dec
mov
inc
sub
cwtl
ret
ret
adc
mov
push
icebp
movsl
dec
lret
shrb
cltd
daa
nop
sbb
mov
xor
adc
pop
inc
inc
jecxz
lds
inc
pop
gs
outsb
call
test
xor
dec
nop
dec
cmp
xor
fidivl
sub
xchg
adc
mov
mov
sbb
jge
movb
jbe
adc
enter
lds
jl
sahf
sub
scas
sub
movsl
xor
xchg
push
cmpsb
mov
scas
xchg
cmp
pop
mov
aam
aas
imul
fstps
sahf
testl
cli
xchg
inc
std
xchg
mov
sbb
lods
je
push
cmpsl
sub
shrl
fdivrs
mov
push
fsubrs
fwait
and
pop
cmp
sbb
fsubrs
movsb
cs
push
mov
fwait
mov
lds
cmp
inc
jl
movsl
jl
test
push
sahf
das
adc
lret
inc
je
push
push
push
hlt
stos
xchg
das
xchg
out
xor
sbb
test
scas
movsb
adc
lods
test
rorb
stos
dec
pusha
mov
sub
mov
cmp
push
xchg
jl
les
or
clc
mov
inc
into
dec
bound
arpl
dec
outsl
xchg
sub
mov
sbb
inc
mov
jp
mov
in
push
adcb
xor
jg
rol
popf
push
push
sbb
push
popa
js
jp
clc
stos
call
mov
rolb
out
mov
in
ret
pop
and
jno
pop
fs
xchg
dec
fidivrl
mov
dec
sub
jns
cld
ret
icebp
cs
pop
notl
ja
inc
test
sbb
insl
enter
mov
gs
sub
cmp
lcall
cmp
sti
push
leave
das
iret
jmp
add
add
inc
lret
dec
lods
mov
pop
cltd
cmp
jp
adc
aas
movsb
mov
push
mov
icebp
xchg
jo
dec
ret
fldenv
repnz
inc
sbb
push
jns
cmpsl
xchg
insl
inc
jmp
clc
jae
xchg
add
xchg
jo
scas
aas
adc
mov
xchg
push
jne
testl
outsb
fistl
mov
ficoms
rcll
inc
imul
movsb
out
push
loop
ljmp
jecxz
lock
popa
rclb
insl
jnp
fs
jecxz
adc
mov
inc
jno
mov
fmuls
push
xor
fnsave
int
push
lcall
xor
mov
xchg
xor
jmp
gs
aas
sahf
shll
inc
fiadds
fs
test
jl
mov
push
loope
adc
jne
dec
mov
jb
jge
cltd
shrl
das
call
mov
shrl
les
es
add
push
push
nop
inc
fstl
mov
cmp
push
mov
pop
inc
aad
inc
sub
xchg
jns
andl
dec
in
inc
data16
bound
push
sub
xor
adc
xor
jle
cld
inc
sti
dec
and
mov
mov
outsb
add
aam
adc
inc
je
enter
dec
and
jae
pop
inc
cmp
clc
out
test
or
into
mov
xchg
sub
fisttpll
cmpsl
sti
mov
mov
aas
dec
sti
rolb
pop
loop
pop
hlt
mov
fnstcw
loope,pn
cmp
mov
push
jne
mov
jecxz
mov
push
lods
pushf
sub
pop
fisubs
test
inc
mov
iret
push
cwtl
add
loopne
je
aam
xlat
xor
stc
sarb
cmp
sahf
adc
test
cwtl
mov
lods
ljmp
xchg
pop
adc
mov
jge
std
fnsave
jno
add
inc
mov
or
mov
sub
rolb
fcompl
mov
imul
mov
cmp
push
std
lods
int
sub
push
sub
add
fisttpll
mov
inc
and
popa
xor
out
xchg
aam
cmc
dec
mov
lret
repz
mov
jecxz
ficompl
imul
adc
cltd
inc
sub
xchg
adc
mov
mov
pop
mov
rclb
xchg
or
je
xchg
sahf
movsl
mov
movsb
jmp
stc
push
pop
adc
cmp
daa
negl
fsubp
lahf
hlt
dec
jmp
insl
add
popa
ljmp
in
into
mov
xor
dec
jnp
mov
adc
lods
add
hlt
and
enter
pop
adc
adc
xor
push
xor
mov
rclb
push
mov
test
lock
imul
aam
add
mov
pop
data16
cltd
sbb
out
cmpsl
es
dec
sub
fidivs
mov
adc
mov
mov
in
lods
movsb
pusha
or
mov
mov
ret
repnz
pop
dec
xchg
pusha
pop
dec
in
mov
lea
add
es
addr16
fldpi
and
pop
mov
pop
xor
xchg
xor
inc
gs
inc
xchg
dec
or
orl
or
mov
mov
mov
test
jb
jae
mov
pusha
faddp
ret
sub
popa
mov
cli
and
mov
scas
inc
mov
sti
xorb
inc
fiadds
sub
sbb
ja
jns
sub
jmp
mov
adc
ss
cli
push
insb
cwtl
or
cmp
xor
mov
add
fbstp
xchg
fnstcw
xchg
loopne
cs
mov
mov
inc
pop
cs
cmp
js
xchg
dec
cmpsl
cli
push
call
cmp
sbb
pop
push
insl
xchg
sbb
jo
mov
adcl
scas
xchg
scas
sub
stos
les
and
cmc
mov
xor
enter
ja
sbbb
lcall
lret
xchg
add
push
xlat
aad
loope
and
in
xchg
iret
lret
aad
and
cltd
movsl
stos
orb
out
jp
mov
out
inc
daa
outsl
js
andb
jb
out
push
push
pop
push
pop
mov
and
fstl
sub
cmpsb
aad
mov
push
add
push
fstpt
cli
sub
fstpl
or
cmpsl
jl
rolb
fiaddl
inc
ficomps
xor
fs
mov
sub
mov
fstl
stos
loope
pop
andb
xor
mov
adcl
push
out
lret
or
fisubrs
mov
sbbl
stos
lcall
test
push
mov
dec
xlat
outsb
jge
push
cmc
test
sub
mov
leave
inc
fsin
sbb
insl
decl
mov
xchg
adc
sbb
js
pop
jne
cwtl
fdivs
add
mov
pop
jno
jnp
cmc
lock
das
je
mov
xchg
mov
xchg
movsb
sub
lcall
mov
pop
push
jecxz
inc
and
enter
decl
sub
push
out
sub
mov
push
mov
shr
xchg
shr
push
push
add
xor
les
mov
sub
ljmp
jno
orl
mov
or
add
daa
adc
mov
cmpsl
shr
xlat
xor
enter
push
ljmp
push
mov
test
jns
dec
mov
cltd
push
ss
push
jmp
xchg
gs
and
cmp
pop
incb
jp
das
outsl
addb
paddq
cwtl
leave
pusha
dec
pop
pushf
test
imul
pushf
fidivrl
xchg
and
mov
inc
cltd
std
jae
jb
test
mov
mov
in
xchg
push
fistl
dec
dec
fisttps
xlat
push
adc
xorb
lahf
mov
mov
mov
xchg
into
jp
ss
arpl
add
ror
rep
inc
pusha
lahf
xlat
jno
pop
cmp
jp
jl
pop
push
or
cmpsb
cmp
test
adcb
fsubrs
xor
jg
adc
out
roll
subb
cmp
lock
leave
cmp
jae
jns
xchg
popf
pop
xrelease
xchg
add
rorb
lahf
sarl
jmp
push
mov
xchg
jnp
cmp
jl
jmp
xchg
data16
mov
adcl
imul
pushf
dec
mov
cli
mov
aaa
insb
add
leave
xor
leave
pusha
xchg
or
mov
stos
montmul
cmpsb
inc
mov
push
test
jbe
loopne
push
ss
mov
and
sub
xor
pop
js
notl
mov
pop
pop
dec
jns
gs
lret
orl
cmp
pop
js
pop
jae
pop
pop
hlt
push
fldl
cmp
xlat
sbb
push
iret
push
jge
or
imul
or
ficomps
sbb
ret
ja
les
jns
insl
pop
ret
rcll
mov
and
mov
fwait
ss
js
imul
out
mov
push
mov
xor
cmp
stos
es
jp
xchg
push
sub
cli
pop
jg
xchg
xchg
js
lock
inc
jo
mov
shrb
jb
cld
cmp
xchg
and
push
xchg
and
cwtl
dec
gs
jnp
shrl
fildll
stos
xchg
sbb
aas
push
insb
adc
inc
xchg
int
outsb
repz
test
add
ss
gs
std
sub
xchg
pop
mov
mov
pop
xchg
data16
lret
sub
pusha
clc
sti
jno
lds
sbb
xchg
insb
jns
movsb
push
xchg
dec
and
jecxz
jne
xchg
fstl
lcall
sbb
xor
xor
push
sub
mov
sub
rcr
xor
xchg
sbb
sbb
mov
mov
cmc
in
pusha
ror
adc
mov
adc
js
js
out
xchg
or
dec
or
adcl
mov
fwait
xchg
fucomp
and
sub
xor
test
xchg
or
shrb
add
xchg
dec
mov
das
add
out
pop
lods
test
dec
or
fwait
dec
mov
mov
movsl
mov
pop
cmpsb
ret
enter
or
inc
jno
inc
pop
mov
cmpsl
stos
dec
mov
mov
mov
adc
test
cmpsl
out
add
xchg
out
xchg
xchg
hlt
rorl
pop
cmp
sub
pop
outsb
out
cmpsl
ret
dec
sub
or
inc
sti
mov
shll
in
movsb
cmp
fbstp
pushf
inc
dec
add
shlb
in
stos
mov
lret
cmp
popa
fsubl
xchg
and
lods
cmpsl
arpl
jno
and
nop
outsl
daa
lret
jge
sub
jbe
loopne
scas
or
xor
pusha
inc
loop
nop
lcall
or
dec
mov
lock
and
cmc
mov
sub
lret
shll
jno
bound
and
mov
sub
pop
and
push
xchg
xchg
fwait
xor
in
inc
mov
nop
fdivrl
or
mov
in
or
add
push
jnp
mov
cwtl
das
mov
pop
mov
mov
pop
sub
in
mov
jmp
push
inc
pop
sub
sbbl
int3
jb
cmp
data16
ret
add
bound
out
dec
push
scas
mov
push
sbb
pop
shl
cwtl
mov
fstpl
testb
mov
int3
or
insb
push
jns
test
andl
in
push
aam
mov
in
loope
mov
dec
adc
scas
mov
cld
cld
jle
and
xchg
arpl
ret
push
lods
cmp
das
enter
jo
aaa
movsl
test
pop
in
inc
ficomps
sbb
shr
mov
inc
adc
mov
stc
lret
icebp
mov
sbb
xchg
test
dec
dec
jno
cmc
cmp
into
sbb
push
repz
push
inc
outsb
sbbb
andb
jmp
outsb
jo
into
mov
fwait
adc
cmp
hlt
insl
lret
xor
add
add
sub
push
sarl
jge
fsubrl
sbb
push
iret
push
xor
jg
iret
push
inc
add
add
pop
and
arpl
sub
and
xor
jmp
pop
jmp
hlt
add
fsubs
jb
jge
aas
dec
loop
inc
sbb
push
xchg
sub
xor
aam
cmp
cmp
fwait
pushf
xor
scas
inc
fidivrl
shl
test
inc
in
sbbl
ret
les
jmp
xchg
es
aam
or
xchg
or
xor
loope
sbbb
dec
or
sub
hlt
mov
mov
rclb
or
add
scas
aaa
test
imul
testl
push
cwtl
mov
mov
leave
mov
push
push
cwtl
adc
cs
scas
mov
pop
fcoms
cltd
rcrb
rclb
rep
mov
inc
fcoms
cld
and
jnp
fs
xor
jnp
addr16
cwtl
in
repnz
sahf
out
pop
stos
pop
daa
push
imul
sbb
shlb
mov
pop
xor
push
cld
xchg
fldenv
sub
pusha
in
jne
decl
fnstcw
inc
outsl
jno
icebp
popw
lods
test
push
sub
data16
shl
clc
push
cmp
cs
and
shrb
dec
lock
shrl
sub
xchg
or
in
ds
xor
or
ret
loop
jns
sahf
clc
push
xor
jno
hlt
mov
int3
inc
in
mov
popa
mov
fsubrp
sbb
dec
inc
push
dec
data16
iret
testl
into
aaa
leave
sbb
mov
dec
jecxz
rcrl
jnp
aas
ss
repnz
mov
mull
push
adc
push
jbe
pop
hlt
call
pushf
push
imul
in
adc
sub
inc
or
out
mov
aad
je
insb
ret
mov
aad
int
ret
enter
pusha
call
mov
push
in
xchg
sbb
or
imul
pop
mov
enter
imul
mov
repnz
mov
mov
data16
inc
pop
leave
ja
cmp
int
xor
int
call
mov
test
inc
movsb
movsl
das
xchg
pop
cmc
scas
notl
int
sarb
out
arpl
pop
jne
lea
xchg
sub
lret
jae
iret
data16
fwait
test
mov
shrl
cltd
pop
mov
inc
jo
and
les
cmp
push
dec
imul
jno
icebp
mov
inc
js
je
icebp
enter
stos
les
scas
in
lds
filds
test
js
andl
mov
fsts
aas
pop
cmp
leave
testb
enter
sub
push
clc
imul
dec
movsb
int
enter
cmp
bound
dec
jb
stos
xor
popa
leave
pop
sub
sbb
cltd
jno
sub
cmpb
jp
push
pusha
ss
sbb
jmp
mov
out
jge
lds
sbb
lds
clc
mov
push
mov
js
pop
adc
inc
mov
jmp
jge
mov
jge
adc
enter
add
fcoml
pop
repz
jecxz
pop
dec
or
jo
dec
add
cltd
jne
sbb
push
adcb
mov
inc
sbb
xchg
imul
mov
adc
mov
jae
sbbl
mov
lods
aam
push
ret
sbbb
jae
shlb
push
fsub
ja
int3
sbb
jnp
xchg
inc
xchg
adc
mov
popa
leave
call
out
sbb
es
sti
repnz
adc
mov
js
add
pop
cwtl
insl
sbb
jp
and
in
pop
sbb
adc
pop
mov
sub
or
sub
push
aad
xchg
movl
enter
inc
test
adc
das
xor
mov
repz
sbb
sbb
popa
mov
data16
mov
push
lcall
mov
pop
mov
enter
sarl
xchg
and
ja
cmc
push
push
das
ljmp
push
movsl
outsl
pop
dec
cld
xchg
int
fdivs
cmp
mov
jp
dec
in
icebp
mov
call
sbb
or
mov
in
xchg
arpl
ret
or
cltd
push
ds
cmp
pusha
aam
out
test
insl
dec
jg
adc
inc
lcall
out
loopne
int3
inc
lea
lock
jnp
jae
roll
dec
pop
inc
ds
subb
jnp
scas
dec
push
or
cltd
outsb
add
mov
xor
mov
push
shrl
decb
sub
lea
fsubrs
jp
pop
pusha
mov
sub
in
add
inc
mov
push
mov
out
in
mov
mov
ficoml
in
sti
jb
and
inc
add
fnstcw
fisubl
ja
gs
dec
xchg
mov
add
cmp
push
push
leave
push
or
dec
aad
in
jbe
fxch
gs
jmp
aad
or
loop
daa
outsb
add
insb
mov
mov
aam
dec
push
fistl
sbb
fmul
lahf
in
sbb
cld
and
mov
cmp
in
add
push
sub
shlb
scas
scas
out
jl
sbb
subl
and
sbb
mov
fidivrs
int3
addr16
into
push
nop
inc
fld
shlb
lods
mov
and
xchg
inc
pop
cmc
rclb
cmp
sub
data16
stc
adc
lods
outsl
push
fisttps
fldcw
adc
mov
lea
add
xor
arpl
push
push
push
jmp
mov
mov
mov
jbe
mov
pop
test
mov
shr
rolb
pop
xor
decb
sub
insl
dec
mov
data16
inc
fidivrs
dec
out
jmp
in
ljmp
xchg
cmp
adc
and
pushf
sub
push
aam
clc
add
scas
insl
mov
sub
imul
movsl
popa
mov
ret
sub
or
add
lcall
inc
ficompl
mov
in
in
xchg
daa
out
cmp
inc
in
loop
pop
xchg
je
sbb
test
adc
rcrl
adc
enter
mov
or
cltd
xchg
addr16
pushf
es
into
out
xchg
test
xchg
cmc
ret
pop
cmpsb
pop
fwait
nop
fbld
or
and
lods
dec
xchg
add
int3
xor
cmpsb
xchg
cmp
adc
jo
pop
cmc
gs
mov
xchg
cmpsl
repz
dec
pop
xchg
cmpsl
sub
fcoms
dec
pop
daa
xor
fstl
sahf
mov
lcall
jo
mov
mov
call
lret
add
dec
out
cltd
test
scas
in
pop
test
scas
mov
mov
stc
cmp
xor
dec
xchg
decl
cmp
pop
test
jnp
push
mov
sbb
sbb
aam
jae
jl
notb
cmp
push
pushf
add
jno
and
mov
pop
mov
popf
test
inc
daa
sbb
imul
loop
adc
enter
jecxz
or
sub
sub
fidivrl
xchg
lods
gs
shld
bnd
lahf
ljmp
cmp
js
rcrb
add
xchg
xchg
leave
outsl
inc
ret
js
in
imul
mov
pop
mov
fsubrs
test
in
adc
arpl
inc
out
xchg
gs
sub
in
pop
push
jb
insl
xchg
incb
hlt
cmpsl
inc
sub
call
test
lods
dec
jg
push
int3
xor
stos
js
shrl
jns
mov
sub
insl
sahf
sub
inc
pop
lcall
mov
fimuls
cmp
jno
nop
lods
ss
sahf
mov
jg
add
mov
mov
pop
imul
notl
xor
mov
dec
push
mov
cli
ficompl
xor
imul
mov
mov
les
inc
in
sbbl
adc
mov
push
dec
divl
lret
sub
stos
aas
inc
adc
xbegin
iret
or
scas
dec
mov
jbe
lods
xchg
fcompp
fdivr
sahf
or
outsb
stos
inc
pop
sti
sub
and
fwait
pop
testl
fwait
arpl
lods
fsubrl
shl
js
cmp
cli
cmc
loopne
mov
in
pop
mov
add
mov
pusha
cmp
fs
insl
xchg
hlt
hlt
cmp
mov
dec
cmpsb
adc
sub
icebp
or
cmp
cmp
dec
push
dec
data16
dec
fbstp
pop
adc
mov
mov
or
xchg
gs
push
xchg
in
pop
xlat
ja
movsl
dec
movl
ljmp
je
ljmp
push
push
adc
shll
in
flds
mov
addl
pop
pushf
jnp
or
ret
jp
and
fdivl
in
in
pop
cmpsb
mov
bound
mov
clc
outsl
lret
jge
sbb
pop
ljmp
push
inc
rcr
adc
sub
bound
outsl
jnp
fldt
loopne
push
inc
outsl
pop
lret
jmp
xor
push
inc
push
nop
scas
dec
cmpsb
out
icebp
int
cmp
push
mov
push
cmpsl
mov
jmp
into
rorb
jp
jl
sarl
and
int
movsb
out
push
push
arpl
in
repz
cmp
clc
inc
mov
pushf
test
pop
imul
ret
push
adcb
add
push
repz
das
cmp
dec
sbb
dec
sub
mov
test
dec
pop
js
insb
sub
xor
xchg
dec
je
mov
divb
scas
cmp
pop
sub
mov
in
dec
scas
xchg
jp
and
add
mov
cmpsl
cld
push
sub
cmpsl
inc
push
xchg
in
fwait
lret
mov
jp
gs
xor
ret
aaa
adc
out
cld
push
loop
mov
adc
sbb
xlat
push
xchg
jp
out
or
pop
xsha1
cmpsb
in
inc
mov
sbb
mov
je
sahf
andl
loop
adc
jmp
sub
add
fbstp
or
fidivrs
jmp
test
mov
mov
js
test
xchg
push
jmp
sub
sbb
add
xor
jmp
pusha
add
jecxz
sbbl
sbb
mov
insb
add
out
push
adc
push
add
addr16
add
push
push
aad
fsubrl
adc
movsl
mov
inc
pop
xchg
mov
dec
cmp
cmp
pop
mov
fdivl
xor
subb
fnstenv
test
lock
xor
adc
clc
xor
fistpll
add
sbb
js
fstpt
mov
decl
outsb
cmp
sbb
pop
cmc
in
mov
adc
stos
rorb
inc
rorb
xchg
xchg
pop
xor
sahf
push
leave
fnop
sbb
or
push
in
pop
bswap
mov
jne
push
adc
xchg
mov
jecxz
imul
ds
sbb
sbb
test
lahf
push
push
in
lea
mov
mov
cmp
xchg
mov
in
mov
mov
mov
stos
adc
pop
jmp
test
adc
imul
cmp
into
enter
mov
and
cmc
pop
popa
aad
mov
gs
adc
cmp
adc
scas
icebp
or
xchg
push
or
ss
pop
fadds
andl
insb
inc
mov
xchg
movsb
in
dec
lret
xor
into
out
add
sbb
call
dec
mov
out
dec
add
das
xchg
xchg
pop
xchg
das
mov
fnstsw
and
push
fadds
push
or
scas
lahf
scas
repz
clc
stos
mov
or
dec
cmp
shlb
cmpsl
out
dec
mov
dec
push
xor
lods
lods
inc
fidivrl
std
pop
outsl
cli
rcrl
and
fxch
dec
xchg
sbb
sahf
push
sub
mov
andb
sbb
or
lahf
xor
cld
outsl
je
mov
cmp
or
adcb
mov
push
aas
dec
js
jge
push
les
scas
aad
or
xor
in
mov
leave
icebp
xchg
xor
push
sarl
jo
fwait
cs
lahf
push
mov
push
popf
in
in
movl
sbb
xlat
jl
pop
scas
add
push
mov
sbb
lea
fwait
movb
ss
bound
sub
in
das
jp
add
adc
cmp
mov
enter
mov
pop
dec
ds
sti
pusha
add
xchg
adc
ror
sahf
in
mov
mov
mov
bound
cmp
fistpll
addr16
xchg
jo
mov
addl
xchg
idivb
and
insl
add
push
out
psllw
aaa
or
dec
movsb
cmp
sub
shl
popa
clc
push
or
cmp
jae
mov
in
push
ret
test
sbb
push
idivl
lods
mov
les
sbbl
std
sbb
xchg
dec
outsb
sbb
fbld
lock
decl
rcr
nop
mov
push
out
mov
mov
dec
loop
jne
cltd
adc
add
pop
push
inc
rclb
inc
rclb
add
xchg
mov
xor
mov
jmp
stos
fwait
jo
movsl
jnp
repnz
xor
movsb
mov
mov
inc
push
mov
jmp
std
mov
adc
lahf
xor
cltd
cwtl
ljmp
xlat
or
push
sub
dec
in
mul
js
cmp
mov
ds
push
stc
sbb
or
mov
std
jo
add
sub
inc
stos
mov
mov
and
push
push
insl
cmc
je
lret
pop
bound
push
lock
into
jle
push
and
mov
inc
fcomi
out
or
scas
mov
mov
fildl
push
mov
je
lea
and
call
adc
lods
and
mov
daa
cmp
push
pop
fwait
loope
pop
jl
jle
fs
imul
mov
fyl2x
fwait
cmpsl
adc
insb
sbb
xchg
sub
mov
xor
add
mov
jle
pop
mov
loopne
push
mov
xchg
sub
out
pusha
lahf
std
mov
xlat
loop
popa
push
stos
mov
test
fsubrp
push
mov
jmp
add
out
dec
cmp
mov
mov
dec
jp
cmc
iret
adcb
xor
and
shll
aaa
xchg
fucomip
mul
jae
cmpsb
aas
les
cld
leave
cltd
pop
enter
shlb
mov
cmpsl
sub
fdiv
cmpl
dec
dec
in
or
adc
std
push
pop
inc
adc
pop
out
mov
test
mov
shlb
and
mov
adc
pop
ficoms
loope
mov
push
out
sbb
loop
ficoms
push
xchg
insb
adcb
and
xchg
push
push
mov
hlt
dec
xor
mov
test
dec
mov
popl
sbbb
mov
cmpsl
ds
xlat
jb
gs
andl
mov
dec
sub
fdivs
cmp
decl
ror
std
inc
adc
push
lock
lcall
adc
and
and
or
inc
fists
xor
fwait
sub
jp
jae
mov
hlt
and
jnp
push
out
inc
pusha
inc
call
add
das
push
mov
jmp
shrb
dec
add
cmpsl
xor
mov
or
arpl
push
into
jae
and
pop
mov
loope
pop
add
xchg
sbb
ret
js
or
xlat
cmpsb
ror
push
add
xor
aaa
fstpt
call
pushf
subl
divb
data16
fsubl
xchg
cs
out
sbb
and
dec
shll
incb
cmpsl
scas
pop
jb
fnstenv
mov
sbb
push
push
mov
or
inc
push
nop
sub
shlb
ret
hlt
push
cltd
and
inc
into
mov
sbb
adc
jecxz
pop
cwtl
roll
js
lahf
das
cltd
cmp
outsl
idivl
jno
mov
iret
es
dec
out
scas
jne
jmp
std
inc
pop
ja
mov
push
daa
or
outsl
mov
pop
out
fs
outsb
sub
mov
dec
mov
mov
pop
int3
jge
data16
loopne
xchg
jae
jno
ret
jne
cli
pushf
jnp
pop
jmp
pop
shrb
inc
cmc
and
pop
lock
xlat
pminsw
xchg
int3
add
fwait
lea
jae
out
imul
xchg
int
je
dec
xchg
movsl
pushf
cmpsb
gs
sbb
pop
mov
mov
xor
mov
xlat
mov
or
icebp
mov
jle
shll
mov
jne
call
popf
pusha
and
ss
mov
lahf
out
subl
repz
cmp
push
aad
xchg
jp
in
lea
cmpsb
push
pop
mov
xlat
shr
mov
or
call
xchg
sub
fwait
mov
mov
jp
in
dec
fwait
adc
xor
sbb
shll
cwtl
mov
hlt
or
or
lret
dec
mov
pushf
push
scas
cwtl
mov
cmp
add
jge
ljmp
or
xchg
cwtl
mov
and
and
shll
mov
pop
xor
lahf
repz
in
jg
push
out
push
mov
out
outsb
rcrb
notl
jae
fdiv
cmp
loop
aam
int3
nop
or
fidivrl
daa
adc
push
addr16
inc
addr16
cmpsb
out
scas
pop
fcomps
outsb
mov
incl
fsub
cmp
mov
sbb
push
jbe
dec
xchg
adc
movl
into
push
and
mov
psubusb
les
jecxz
ret
addr16
pop
lahf
xor
push
scas
fisttpl
mov
sbb
pop
xor
test
arpl
mov
aaa
dec
xor
adcb
cmp
loopne
out
xchg
mov
je
repz
push
repnz
and
xchg
xchg
std
or
or
arpl
and
jecxz
dec
dec
sbb
loopne
lret
mov
push
lods
xchg
cmp
sarb
add
je
or
jns
inc
push
test
xor
dec
bound
dec
push
mov
comiss
fstps
sub
jmp
repz
insl
push
mov
xlat
sbbl
negl
fistps
mov
jne
mov
pop
jecxz
call
mov
fildll
push
sbb
arpl
xchg
fldenv
sarl
popa
repnz
cs
lods
sbb
mov
mov
fldcw
sbbw
imul
mov
sbbl
mov
lret
add
roll
data16
mov
imul
addr16
cld
inc
jne
loopne
jns
inc
mov
lcall
icebp
jnp
xchg
xor
ret
sub
sub
in
adc
aaa
mov
loope
push
sbb
jbe
mov
clc
jle
jle
stc
lods
jne
arpl
jno
movsb
clc
push
inc
xor
mov
add
pop
cmp
and
mov
stos
and
dec
in
inc
sbb
outsb
sbb
into
fsubrl
jmp
inc
inc
add
bound
movsb
cmp
hlt
mov
test
enter
lea
jg
xorl
outsb
leave
lcall
ljmp
mov
mov
movsl
sbb
cli
hlt
cmpsl
sbb
cwtl
repnz
mov
ret
mov
je
jns
mov
jecxz,pt
lock
in
pop
daa
daa
out
cmp
jns
dec
inc
jmp
in
xchg
pop
adc
lret
mov
push
or
rolb
add
cmpsb
cmp
es
sbb
mov
cmp
push
or
and
lcall
and
in
imul
test
les
ret
je
push
hlt
push
mov
stc
and
jecxz
mov
outsl
adc
lds
out
out
leave
mov
insl
mov
fstpt
mov
or
mov
lcall
jbe
cmp
repnz
cli
arpl
mov
sub
push
mov
popf
lods
into
mov
clc
mull
flds
push
enter
stc
test
fdivrl
adc
mov
fcmovb
jge
add
lods
mov
mov
sbb
mov
jl
es
push
push
lret
add
mov
sahf
mov
ds
jge
out
out
movsb
iret
pop
mov
mov
repnz
insl
fists
add
cwtl
and
ds
sbb
gs
imul
stos
fisttpl
dec
cwtl
int3
pushf
out
mov
aad
lret
ret
int3
dec
push
pop
pop
in
test
push
cmp
mov
pop
decl
jae
std
cwtl
sti
mov
out
mov
fildll
mov
mov
push
roll
cmp
sub
push
add
inc
and
inc
or
cld
push
sub
jle
mov
or
mov
clc
dec
mov
sbb
dec
lods
mov
int3
loopne
ljmp
lret
pop
lahf
jmp
cmp
test
lret
orb
imul
and
xor
cmp
loope
scas
sbb
xchg
fmul
xchg
aaa
add
xchg
pop
fs
addr16
cmp
rol
sbb
mov
inc
mov
jb
jl
jg
stc
popl
pop
sbb
xchg
add
stos
out
xor
mov
sti
roll
mov
pop
call
push
lods
cmpsl
mov
jl
xor
mov
das
pop
sbb
cmpsb
subb
imul
mov
jno
push
lret
push
fldl
fst
ja
jp
or
xchg
sub
adc
mov
push
xor
cmp
jl
sbb
orb
add
enter
pushl
shrd
icebp
jnp
mov
repnz
loope
clc
dec
roll
pushf
sahf
push
rclb
jmp
andl
scas
mov
cmp
out
mov
hlt
ret
add
mov
inc
sahf
data16
shl
or
das
cs
add
icebp
testl
lods
push
push
jmp
call
or
xorb
jge
mov
push
imul
xor
in
jnp
inc
out
adc
mov
pusha
not
scas
push
pop
push
clc
jle
jp
aaa
ficoml
cmp
pop
lahf
popf
cld
inc
add
out
outsl
ss
push
out
push
push
ret
js
pop
ljmp
jb
fwait
cmp
inc
or
xchg
mov
sub
lods
pop
fisubs
into
int
out
mov
shlb
ds
xor
jmp
out
push
sub
mov
jecxz
xor
scas
sub
cmp
repz
imul
sub
into
pop
and
loopne
mov
xchg
mov
mov
cwtl
mov
mov
in
test
inc
rorb
xor
adc
and
int3
and
scas
cmp
adc
data16
inc
test
mov
xchg
clc
rcrb
sbb
xor
insb
mov
lds
cmpsb
cmp
ret
xchg
clc
loope
je
sbb
lahf
jae
scas
jns
sarb
arpl
inc
shrb
fsubl
push
hlt
cmpsl
fbstp
iret
dec
xchg
aad
test
mov
adc
sub
cmc
andb
adc
insl
gs
add
sub
mov
lret
popa
clc
es
pop
outsb
cltd
cs
enter
shlb
mov
mov
push
jg
mov
and
pop
push
iret
movsl
adc
hlt
dec
mov
inc
sbb
hlt
pop
xor
jns
mov
pop
push
cmp
nop
mov
aam
cmp
pop
out
adc
out
daa
ljmp
pusha
aam
gs
mov
or
jo
outsl
test
xchg
add
xchg
push
js
inc
xor
adc
stc
inc
pop
push
sub
jno
sarb
jmp
adc
sahf
ror
aam
enter
mov
jl
jg
pop
pause
cmp
lock
inc
or
fucomi
mov
int3
js
ret
jg
pop
jl
sub
iret
xor
fcom
jecxz
dec
adc
out
cmp
test
repnz
dec
repnz
jecxz
xlat
test
inc
cmpsl
push
xchg
aad
sbb
jbe
sbb
daa
jmp
cmp
adc
push
inc
push
cwtl
sbb
sahf
negl
or
mov
push
mov
mov
xor
fcomps
xchg
scas
notb
mov
jbe
or
pop
mov
xchg
sub
and
int
aad
clc
inc
fistps
jno
sub
push
mov
insb
out
lds
pop
and
enter
lock
xchg
mov
xchg
clc
xor
sub
add
xorl
invd
xor
pop
add
push
jbe
and
dec
imull
sarl
ret
push
dec
pop
lods
xchg
mov
and
aam
bound
aad
in
mov
stc
fucomip
inc
adc
repz
mov
jle
lds
inc
push
add
and
in
out
dec
sub
cmp
or
loop
dec
jmp
mov
setb
pushf
movsl
andb
ljmp
xchg
mov
push
fyl2x
popf
push
mov
sbb
xchg
inc
adc
mov
js
jle
xchg
pushf
add
mov
lock
test
cli
adc
add
sbb
out
push
inc
adc
popa
cld
xorb
jge
fwait
xor
sahf
jne
or
int
cmp
inc
and
mov
pop
dec
push
in
xor
clc
sbb
aas
sbb
and
es
adc
jb
inc
movsb
cli
and
out
enter
push
push
mov
sub
ljmp
sbb
jle
rdpmc
ja
pop
xlat
mov
outsb
jge
jo
fildll
incl
dec
pop
ja
adc
cmp
mov
push
aam
rcll
lcall
pop
mov
test
in
inc
arpl
leave
adc
and
in
push
pusha
dec
test
aad
subl
lds
inc
inc
mov
mov
int
cmpsb
push
push
pop
jmp
mov
jb
jmp
andb
xchg
xor
push
orl
loop
fdivs
adc
lods
outsb
push
leave
lcall
push
mov
fadds
mov
imul
jno
dec
rolb
pop
movsl
pop
hlt
sub
inc
divl
xchg
adc
xchg
adc
or
mov
repnz
outsb
in
pop
adc
cmp
iret
lea
lds
dec
fs
sub
loopne
lods
add
loopne
and
fisttps
out
jmp
hlt
mov
scas
push
dec
pop
cmp
sbb
aam
adc
arpl
xor
cmp
adc
dec
int3
clc
int3
addr16
pop
mov
push
scas
inc
adc
push
lods
sbbb
sub
cs
cmp
cmp
mov
jne
lcall
btsl
cmp
pop
mov
push
push
sub
test
and
lahf
outsb
dec
fnsave
insl
xlat
shlb
push
push
fldt
pop
cld
xchg
nop
inc
or
loopne
dec
out
shlb
push
add
jno
jae
xchg
push
fiaddl
adc
das
inc
gs
xlat
cmc
mov
mov
lcall
mov
jb
cmp
inc
push
mov
orb
pop
cwtl
sub
mov
mov
xchg
mov
test
rcl
xchg
mov
aam
out
aam
jecxz
add
mov
push
mov
test
mov
ljmp
sub
and
xchg
cmp
pop
cmpsl
addl
insb
push
pop
cld
aas
pop
xor
mov
cmp
mov
cmc
lds
ljmp
dec
mov
mov
pop
or
xchg
jg,pt
xchg
rcl
test
push
movsb
repz
fldenv
xchg
xchg
rcpps
sbb
or
rorl
xchg
loope
adc
cmp
cld
sub
iret
mov
loop,pt
push
les
xor
xchg
insb
cmp
les
fpatan
rcrl
dec
fwait
ret
jne
or
arpl
in
push
ljmp
xor
pop
outsb
sbb
gs
add
ja
mov
push
xlat
cmc
mov
pop
dec
and
shrb
aad
dec
pop
adc
xor
mov
test
mov
outsl
jg
lret
inc
pop
cmp
or
cmp
and
mov
push
sbb
in
or
push
and
push
daa
lds
arpl
cmpsl
leave
sbb
repz
sbb
mov
adc
hlt
mov
aas
add
fbld
xchg
jge
das
mov
xor
xor
add
jl
out
imul
outsl
inc
push
loope
rorl
mov
pop
adc
subl
test
pop
sub
andb
test
inc
push
in
xor
or
pop
es
test
out
fnstsw
sbbb
test
mov
into
dec
and
sub
daa
scas
xor
scas
mov
push
cmp
fcoml
hlt
and
call
xchg
test
in
push
jnp
je
pop
mov
jecxz
je
sahf
mov
push
aaa
into
adc
lods
jo
int3
sub
mov
call
data16
or
xor
mov
sub
jle
dec
jne
dec
incb
cmp
add
adc
pop
insl
fbld
dec
mov
mov
and
roll
lcall
and
xchg
mov
dec
test
ljmp
ljmp
ja
mov
imul
test
popa
mov
lret
sbb
cwtl
mov
adc
jo
test
or
and
into
dec
cmpsb
jbe
and
out
or
scas
mov
js
add
jl
xchg
mov
subl
xor
mov
jbe
roll
cmpsl
cli
fsubr
sub
lcall
xor
mov
out
testb
mov
cmp
lock
inc
fadds
loop
adcl
outsb
enter
push
cltd
fldcw
jg
dec
cltd
test
add
dec
out
daa
lcall
push
nop
add
movsb
repnz
test
push
inc
pop
hlt
jg
mov
outsl
pop
mov
jae
popa
hlt
inc
sbb
fiadds
pop
push
ljmp
int
aad
jg
xchg
xor
lahf
xor
fstps
add
push
mov
mov
lcall
adc
aam
inc
pop
mov
popf
idivb
jecxz
mov
push
cs
dec
and
fidivs
jns
cmc
stos
push
movsl
inc
addb
repz
jne
or
icebp
fs
fisttps
push
add
aad
xor
push
decb
add
and
push
outsl
ljmp
jp
ljmp
sub
in
hlt
cmp
fs
jno
cmp
inc
int3
xchg
ja
add
cmp
pop
repz
xchg
pop
cltd
adcl
sbb
insb
pop
mov
jg
sub
push
lret
lret
cmpl
push
inc
inc
int
xchg
loope
fmuls
pop
fcmovnb
push
pop
jb
pop
stos
lds
popf
pop
ljmp
lock
push
ss
jle
cmp
sbb
mov
loop
scas
sbb
scas
pop
fsubrs
ja
in
out
pop
sbb
test
cmp
sub
sub
sbb
insb
pop
outsl
imul
adc
add
packssdw
cmp
jg
rorb
aaa
aaa
mov
gs
add
ret
jle
aad
lock
and
or
inc
xor
pushf
push
push
les
fisubrs
cmp
dec
xchg
lahf
cwtl
cmp
out
imulb
xor
enter
and
jmp
mov
or
cmp
leave
lahf
dec
dec
mov
cmpl
xchg
ret
inc
jp
subb
mov
push
mov
pop
mov
ljmp
lock
mov
dec
pusha
pusha
cmpsb
lcall
je
lret
push
test
mov
inc
and
inc
imul
lret
iret
pop
jne
popa
test
add
popa
add
lods
lods
xchg
dec
test
jns
popf
pop
push
out
push
aaa
pop
cmp
push
push
jno
mov
imul
fisttps
popf
out
pop
dec
mov
aad
pop
or
ljmp
test
cld
rcr
mov
sbbb
mov
sub
popa
addr16
rorl
lods
cmpl
divl
mov
pop
xchg
insl
in
ljmp
pushf
aad
pop
stos
or
je
scas
mov
xchg
sti
stos
xchg
jns
and
lea
or
stos
cmp
ss
inc
pushf
outsb
cmp
lret
and
cmc
pop
sub
out
out
jg
jle
xchg
pop
mov
in
cmp
aaa
or
sub
xchg
rclb
and
sbb
loope
out
inc
cwtl
mov
sub
and
push
test
xor
pop
cld
xchg
mov
pop
cmc
xchg
mov
pop
repz
or
jo
in
pop
fidivrs
shll
or
shr
and
inc
adc
mov
sub
pop
test
test
mov
push
xchg
and
repz
cmpsb
and
or
mov
dec
mov
sahf
aas
dec
fcoml
clc
jbe
xor
xor
fs
mov
stos
sti
in
es
lods
cmp
lock
les
shrb
int
push
lret
fwait
and
leave
mov
dec
mov
cmp
xchg
lds
mov
mov
pop
and
jecxz
xchg
rcr
mov
add
mov
repnz
in
data16
xor
pop
jno
xor
xchg
sub
or
icebp
enter
push
jbe
sub
movsl
jae
scas
test
jno
push
push
push
fcoms
bound
push
and
cmp
ret
rol
sub
stc
clc
and
cwtl
push
xor
rcl
dec
pop
fldl
pop
mov
xchg
sbb
jp
test
cmp
jmp
mov
sbb
lcall
ds
mov
loope
in
movb
mov
inc
ret
inc
lret
sub
mov
daa
repnz
push
ja
or
inc
bound
jne
in
dec
insl
jge
or
or
outsl
ljmp
cli
add
mov
push
inc
jmp
sub
stos
jl
rol
push
mul
push
orb
ja
sahf
push
popf
dec
sarl
jo
mov
pushf
inc
inc
pop
jl
adc
pop
mov
test
push
jns
mov
fsubr
jl
pop
movsl
lea
aam
mov
sbb
jb
out
test
mov
fisubs
fnstcw
popf
test
stos
xchg
lret
fistpl
dec
jecxz
jnp
lea
cmp
inc
jecxz
fiadds
mov
cmc
test
inc
push
push
xor
out
sti
pop
and
rcrb
xor
add
out
pop
je
lods
fildl
out
adc
mov
mov
pusha
into
lods
adc
arpl
js
adcb
add
jae
mov
push
loopne
lret
mov
mov
lock
mov
out
lock
gs
inc
or
lds
dec
add
cmpps
xchg
dec
adc
cmpsb
orb
mov
les
in
mov
cmp
loopne
inc
cmp
fisubrs
sbb
imul
pop
ffreep
jne
lahf
das
push
lret
pop
arpl
dec
stc
lea
loope
enter
shlb
xchg
cwtl
xchg
ss
xchg
sbb
inc
repnz
jne
pushf
mov
cld
outsl
pushf
incb
mov
enter
inc
mov
mov
pop
aad
test
pop
mull
fbstp
dec
mov
and
push
xchg
add
pop
inc
jo
cltd
mov
pop
icebp
ret
scas
mov
jle
or
adc
sub
movsb
shr
mov
sub
ja
das
cmp
mov
cmpsl
xor
rorb
inc
push
jg
dec
cmp
fimull
test
aam
and
out
inc
pop
mov
dec
aaa
idivl
sbb
bound
xchg
adc
mov
jns
push
mov
or
or
or
scas
pop
cmp
pop
dec
jl
nop
dec
push
fwait
repz
inc
arpl
inc
popa
fstl
mov
aas
cmpsl
mov
xchg
ljmp
orb
pcmpgtd
mov
dec
aaa
push
cltd
lock
push
sub
aas
ljmp
cmp
and
es
add
xchg
fsubs
adc
movntq
out
jmp
jbe
out
push
aaa
rclb
inc
in
incl
call
out
fstpt
in
mov
adc
add
pop
or
cli
pushf
jne
fidivrs
mov
jno
push
sub
pop
dec
pop
rcrl
dec
idivl
mov
push
jmp
xchg
mov
pushf
popa
xlat
stos
es
mov
into
inc
pop
add
lret
test
pop
cmp
and
sar
test
cmpsb
xchg
mov
mov
aad
mov
dec
mov
das
jecxz
fdivl
xchg
add
sbb
les
and
add
jmp
es
movsl
jne
push
xor
lahf
pusha
subl
sarb
mov
sbb
dec
push
sbbb
jecxz
push
push
cmp
mov
jb
xchg
rclb
test
arpl
cwtl
push
mov
lcall
and
xchg
mov
mov
data16
jnp
inc
rcr
adcl
xlat
and
sbb
idivl
dec
fbstp
sti
es
call
stos
sub
push
mov
mov
add
cltd
scas
lret
cmp
negl
test
dec
mov
jne
fidivrs
iret
or
lods
mov
mov
cli
xor
fstpl
jg
repnz
or
inc
enter
dec
jp
orb
aas
pop
inc
rol
jae
in
xchg
sub
lret
mov
mov
in
sub
shll
push
xchg
arpl
movsl
notb
xchg
test
dec
sbb
jae
loop
sub
xchg
arpl
push
cmp
or
jle
lea
sbb
sti
inc
sbb
pop
inc
fcom
and
ss
mov
fnsave
xchg
fnsave
add
nop
stos
ds
das
jne
loope
lret
cmp
adc
int
aad
xchg
pusha
adc
xchg
add
sbb
xchg
jns
add
add
rol
adcl
maskmovq
testl
pop
or
or
xor
push
sub
addl
adc
sbb
sbb
vmovaps
push
dec
and
jge,pt
stos
push
sbb
cmp
push
cmpsb
adc
in
ljmp
pop
sbbl
fiaddl
sub
mov
addr16
jle
inc
mov
repz
jmp
in
xor
xchg
rcll
jnp
xchg
test
xchg
or
call
xchg
fldenv
add
add
ret
popa
dec
jp
adc
mov
or
cmpsl
xchg
push
daa
lcall
mov
dec
std
sub
xor
mov
mov
outsl
cmp
dec
insl
movsb
xor
addr16
fwait
inc
adc
xchg
test
push
insb
in
ret
fsubr
lahf
pop
sbb
xlat
mov
jmp
loopne
ret
imul
imul
test
add
push
push
insl
divl
mov
mov
fisttps
ret
xchg
adc
cmpsl
sub
cwtl
ljmp
testb
xchg
sub
sti
mov
cli
jo
or
imul
cli
or
xlat
aam
cmovp
pop
jae
rcll
push
jbe
icebp
subl
mov
scas
ret
push
shl
and
popa
fistl
int3
outsl
stos
push
xchg
out
lret
mov
cmp
jo
cmp
sbb
scas
ss
cmp
rclb
fsubr
xor
bound
mov
push
in
les
fistl
mov
inc
mov
rol
cmc
jp
ret
pop
mov
mov
sbb
pop
sbb
out
add
dec
inc
in
jmp
pusha
add
xchg
loope
jge
jns
imul
jg
inc
outsl
daa
pushf
pop
cltd
bound
xchg
mov
leave
mov
js
int3
popf
pop
pop
outsl
dec
mov
mov
mov
leave
mov
das
sbb
pop
mov
daa
std
and
fimull
daa
decb
add
rolw
in
addr16
testl
lods
call
add
inc
or
adc
jle
in
ja
nop
push
icebp
fsubr
mov
out
insb
and
ja
xchg
data16
fs
call
push
insl
cmpsl
cli
cltd
mov
dec
sbb
mov
shrl
mov
out
jae
mov
or
test
stos
add
adc
adc
scas
jno
hlt
out
outsl
jge
inc
dec
cmp
inc
add
jecxz
lds
inc
xchg
aas
xor
and
mov
insb
scas
rol
clc
inc
lods
faddp
xlat
adc
sti
inc
xchg
movsb
jecxz
jmp
cmp
mov
mov
lahf
sub
dec
mov
adc
adc
mov
sub
loope
flds
repz
push
gs
mov
mov
es
cmp
es
shll
test
add
fidivl
and
push
sbb
push
pop
ss
lds
out
add
push
xchg
in
aaa
push
add
and
pop
pushf
fidivl
jno
jg
popa
adcl
fnclex
mov
dec
leave
bound
mov
in
js
dec
cmp
scas
out
inc
leave
loopne
sub
mov
ja
ljmp
mov
xor
xchg
push
add
mov
cwtl
xchg
mov
shrb
les
or
push
fdiv
dec
popf
cmp
mov
loopne
inc
les
xor
mov
or
sahf
push
stos
adc
pushf
movsb
les
or
xlat
das
mov
shll
fsubr
jge
xor
sbb
sbb
pop
sbb
das
mov
std
or
mov
adc
add
out
mov
mov
sti
inc
xor
dec
cmp
fwait
push
inc
xchg
mov
dec
popf
cmpb
xlat
pop
out
movsb
mov
and
mov
lea
push
xor
dec
inc
leave
sti
push
lret
pop
cld
push
enter
cmp
out
sub
in
int
pushf
mov
pop
jle
inc
xchg
adc
jbe
adc
lret
xorb
or
outsl
ret
add
js
pop
lret
test
push
cmp
lret
mov
mov
sub
pop
dec
dec
sbbl
rcr
mov
dec
arpl
sub
std
and
mov
iret
arpl
jo
mov
js
xor
xchg
cs
jg
adc
jbe
cmc
and
mov
jge
leave
pusha
jmp
sti
mov
xor
popa
cmp
popf
cmp
push
mov
mov
push
add
cmp
mov
cmp
inc
xchg
xor
mov
mov
les
inc
in
gs
testl
aaa
int
insl
pop
xor
icebp
pop
rclb
inc
pop
ret
inc
repz
push
imul
stos
lock
sbb
and
mov
push
fwait
lret
sub
cmc
sti
xchg
xor
das
inc
fistpl
aaa
scas
push
add
mov
arpl
jb
inc
fnstsw
ds
dec
and
cli
xor
or
and
mov
mov
pop
lcall
mov
dec
fmuls
jmp
jae
mov
mov
xor
loop
mov
scas
jno
es
cld
push
inc
in
cmc
dec
lcall
cmpsl
adc
test
push
addr16
decl
cmpsl
stos
xchg
sub
xchg
jbe
xlat
mov
pop
dec
fucomp
int
jae
and
in
add
stos
andb
adc
or
add
imul
jnp
mov
jnp
sub
out
filds
imul
ret
sub
add
lret
lock
popf
xchg
or
ljmp
icebp
fisubrl
movsl
push
cmpb
fs
pop
int
push
mov
and
aaa
jecxz
ret
test
pop
hlt
pushf
movsl
ds
sbb
sub
call
test
mov
pop
aas
stos
lds
bound
rcl
adc
cmp
sbb
jnp
jge
sub
negl
pop
xor
sub
shl
xor
nop
int3
sub
icebp
rcrl
push
in
js
inc
mov
pop
mov
ds
adc
adc
out
aam
cltd
jb
mov
lret
xor
cli
jno
aam
cmc
and
bound
aam
outsl
add
scas
scas
mov
mov
sub
push
in
push
or
and
cmc
push
scas
jbe
push
and
fistpll
cld
sbb
sahf
sbb
cmp
call
call
sbb
push
push
rcrb
daa
push
mov
jbe
mov
cmp
jecxz
enter
in
pop
push
fimuls
dec
mov
push
loope
mov
lahf
es
fucomi
ror
xchg
mul
dec
pop
push
in
shll
pop
mov
cmp
jmp
pushf
ds
lock
jae
push
sbb
jae
mov
into
dec
inc
repz
jns
adc
test
cld
fbstp
adc
sarb
fldt
mov
scas
mov
jecxz
xor
dec
fiaddl
sbb
fsubl
mov
sub
jae
sbb
jl
in
scas
sahf
repz
lds
xchg
dec
push
mov
dec
inc
sub
or
jo
mov
or
aad
mov
loopne
leave
jmp
sbb
sub
mov
cmp
mov
sbb
das
inc
es
cwtl
test
mov
dec
adc
adc
mov
fidivs
insb
xchg
jbe
mov
or
xor
fsts
or
and
or
sarl
fisubrs
rcrl
ja
adc
adc
push
jbe
sub
jle,pt
data16
test
mov
or
icebp
mov
mov
push
jge
xchg
out
mov
push
out
lds
cmp
les
ljmp
out
xchg
push
fwait
sbb
push
call
bound
jp
push
inc
sbb
inc
mov
adc
xor
icebp
ja
mov
hlt
cld
hlt
push
lock
mov
push
mov
test
dec
mov
xchg
cli
inc
ret
push
jno
mov
jge
pushf
mov
loop
xchg
scas
or
shlb
push
ja
mull
adc
cmpsl
or
or
enter
pusha
jnp
stos
jmp
lret
cmpsl
mov
sub
ficoms
lods
cmp
pop
je
scas
mov
fcmovu
pop
call
loop
xchg
imul
push
jle
andl
clc
fsubl
sbb
inc
ret
sub
in
std
sub
stos
fimull
adc
aas
xchg
adc
lret
imul
xor
mov
in
lret
add
cmp
xchg
lods
or
pop
jge
jae
ss
sbb
addr16
mov
mov
setne
sub
in
dec
pop
cwtl
mov
mov
mov
stc
xchg
xor
int3
sahf
xchg
sti
mov
iret
inc
fcomi
push
data16
sub
adc
push
xlat
and
pop
fidivl
inc
aad
fdivl
fisttpll
sbb
mov
cmp
cwtl
cmp
cmovno
push
pop
mov
xor
dec
mov
mov
adc
sbb
hlt
scas
call
dec
movnti
in
jae
sbb
mov
xor
sbb
mov
or
stc
mov
jne
lods
adc
imul
inc
adc
xor
push
test
lret
add
and
outsl
addl
rorl
cmpsl
pop
enter
or
push
mov
pop
pop
cmp
push
mov
mov
push
mov
cmpsl
mov
insl
nop
fiaddl
cmpsb
loope
fisubrl
les
leave
cmp
imul
imul
cmp
sbb
ljmp
mov
or
in
test
inc
lret
or
pop
mov
pop
in
and
fbstp
aad
xchg
std
lcall
in
jp
fnstsw
popa
test
inc
ds
cwtl
jmp
in
and
xor
insb
sub
mov
mov
and
mov
sbb
lahf
dec
dec
dec
add
cwtl
mov
mov
mov
mov
test
ljmp
aas
inc
jge
xchg
fisubrl
popf
xor
and
in
bound
fldcw
mov
insl
movsl
push
fbstp
fnstenv
jmp
cmpsb
pop
sub
xorl
dec
pop
dec
pop
mov
fdivrs
mov
mov
fcompl
fstpt
lcall
out
sahf
sbb
fidivs
mov
lret
es
outsb
dec
cmc
dec
cmpsl
dec
pop
mov
push
mov
dec
pop
idivb
xrelease
adc
outsb
mov
push
xchg
inc
ja
cld
pusha
mov
sbb
jg
repnz
mov
cmpsl
mov
insb
stos
lds
xor
ret
xor
sbb
xor
movsb
gs
cmp
xchg
pop
cmp
incl
inc
pop
rep
push
loop
ret
push
jae
fwait
lret
pushf
dec
es
in
sbb
inc
and
stos
jbe
inc
mov
pop
adc
pop
movsl
pushf
into
mov
hlt
fiadds
sub
inc
data16
mov
mov
jle
aaa
nop
test
mulb
lods
inc
in
test
jnp
ds
push
and
sbb
add
addr16
leave
inc
inc
hlt
insb
jae
sahf
sbb
jle
adc
mov
pusha
jg
fidivrs
sbb
sbb
pop
mov
shlb
fists
cld
lods
daa
jb
jbe
cld
mov
xor
or
fcomps
pop
aaa
ds
test
mov
ds
dec
cld
inc
mov
test
ss
dec
movsl
inc
cltd
jge
lea
mov
jge
imulb
ret
sub
inc
push
jno
mov
mov
inc
cli
push
mov
push
mov
rcr
lock
mov
jmp
cs
sub
sbb
aaa
inc
jbe
in
and
jge
data16
stos
stc
xchg
xor
data16
inc
push
push
jb
mov
inc
sahf
aad
notl
inc
ret
jp
jmp
or
inc
mov
outsl
xor
xchg
loopne
out
and
pop
popf
dec
pop
jmp
mov
cld
jle
leave
sub
lcall
ja
gs
xchg
or
xchg
bound
aas
xor
mov
mov
mov
and
adc
les
es
aaa
or
out
add
nop
cmpsl
cmp
sbbl
push
pusha
mov
repz
cmp
push
je
add
xchg
xor
into
mov
ds
mov
mov
movsl
faddl
cld
mov
cmp
imul
outsb
lahf
inc
test
push
js
sbb
ja
in
inc
pushl
nop
sub
jo
in
and
push
jne
loop
xor
xor
shl
push
jp
lahf
mov
add
icebp
es
xor
push
jmp
rclb
loop
jecxz
test
mov
dec
rcrl
pop
sbb
int3
subb
repz
lds
pop
cmp
inc
jl
dec
pop
out
rcl
imul
mov
mov
inc
jmp
mov
loop
sbb
push
inc
pusha
inc
cwtl
or
nop
shrl
outsb
loope
inc
xchg
xchg
dec
xor
mov
aad
sub
daa
stos
test
lret
les
sbb
js
mov
mov
jnp
or
lea
movsb
out
ja
adc
sub
or
mov
push
pop
push
out
adc
repnz
mov
ret
sahf
enter
cmp
jl
loope
mov
push
jb
sahf
je
adc
mov
mov
sbb
adc
xchg
pop
fnsave
xor
stos
jl
stos
cmp
stos
pop
mov
daa
clc
stos
or
mov
bound
xchg
mov
in
ret
addb
pushf
or
add
imul
flds
dec
aad
lret
lock
dec
movsl
mov
lcall
adc
cwtl
mov
mov
add
add
sbb
popf
xor
jle
sub
jg
sbb
pop
imul
fxam
mov
sub
or
repnz
jp
cmp
sub
notl
add
popf
xor
push
pop
fwait
pop
inc
icebp
push
jg
lds
push
cld
imul
add
jg
mov
xchg
push
scas
scas
mov
xor
or
xlat
outsl
ficoms
test
and
xor
dec
in
jge
sahf
insl
dec
gs
or
inc
stos
lea
add
jno
hlt
push
mov
lods
les
inc
lcall
dec
jae
andl
add
and
mov
push
push
xchg
pushf
daa
jecxz
push
sbbb
and
push
sbb
fsubl
jge
ds
pop
cmpxchg
push
in
dec
addr16
or
inc
push
mov
mov
dec
push
cli
sahf
add
lret
mov
ret
mov
dec
jb
in
add
and
jb
pop
ja
or
mov
pop
mov
movsl
repz
xchg
ret
mov
aad
add
popa
addl
stc
stc
dec
sbb
iret
movsl
mov
data16
xchg
cwtl
pop
std
mov
fwait
xor
xchg
mov
pop
shll
sub
je
inc
push
popa
lods
jno
inc
bound
adc
add
jmp
and
cmp
sub
cmp
cli
lahf
scas
cmc
jb
scas
jb
jg
mov
inc
jnp
subl
mov
xchg
xor
add
push
out
cmc
push
insl
pop
jge
push
cmp
sbb
mov
stos
enter
xor
movsl
fstps
fiadds
pop
cmpsl
test
rcrl
fnsave
dec
fbstp
cmp
inc
mov
dec
out
mov
aaa
dec
pop
in
iret
and
psllq
jmp
sbb
jb
push
mov
cs
jae
lea
scas
mov
or
mov
pop
insl
push
sbb
jno
add
adc
mov
mulb
and
ss
xor
loop,pt
lea
lret
cld
xchg
mov
and
int3
scas
test
push
std
push
movsb
jbe
leave
xchg
stos
test
dec
add
fnstcw
idiv
leave
in
and
mov
adc
jg
stos
push
and
mov
test
orb
add
lods
push
xlat
mov
pop
jnp
xlat
movsl
jb
mov
les
lods
int
rol
mov
jg
adc
insl
fistl
outsl
fiaddl
ret
sbb
sub
or
mov
aaa
jg
jnp
xlat
sbb
leave
and
xchg
std
mov
xchg
and
les
xchg
add
inc
bound
xchg
insl
lret
adc
mov
rcll
addl
das
addb
inc
mov
mov
cmpsb
dec
loopne
mov
ss
notb
jo
mov
sbb
xchg
outsb
ja
stos
pop
negb
cmc
mov
shl
out
hlt
sub
pop
push
lea
dec
mov
test
sbb
jp
jne
cmp
adc
bound
mov
mov
jecxz
lds
xchg
sub
arpl
mov
sbb
ficoml
adc
std
mov
gs
pop
xchg
mov
in
pushf
add
ljmp
frstor
xchg
fnstsw
dec
xchg
rolb
sbb
scas
jmp
xlat
jb
xchg
mov
xchg
lret
cld
sbb
adc
in
scas
das
nop
je
xchg
xlat
icebp
dec
scas
push
inc
adc
je
mov
decl
cmp
mov
popa
mov
cmovg
xchg
mov
sarl
repnz
push
add
dec
ds
aad
in
sahf
sub
inc
mov
in
dec
out
cmp
repz
jge
pop
icebp
dec
ss
xchg
inc
xchg
mov
mov
xlat
lret
cmc
subb
mov
adc
shrb
dec
lea
ljmp
hlt
stos
jp
or
pop
leave
push
popa
sti
xor
loopne
inc
lock
gs
xchg
dec
rcll
sub
xchg
jg
push
vandnps
sar
ret
sbb
and
mov
movsl
jp
jecxz
test
add
adc
pop
mov
mov
sub
stos
xor
es
mov
and
bound
mov
inc
mov
gs
xchg
adc
or
ja
enter
aas
lea
mov
xlat
mov
test
mov
sarl
cmpsl
addl
lret
cld
mov
sub
repz
or
or
addr16
cwtl
cmpsl
lods
xchg
add
mov
and
jl
xchg
inc
ljmp
jge
cmp
mov
jp
jne
push
in
jmp
loope
fdivrl
data16
push
lods
push
cltd
jge
dec
xor
sarl
aas
add
dec
insb
lahf
lcall
scas
fimuls
inc
push
sub
mov
or
pop
repnz
in
jbe
bound
push
mov
out
inc
cmp
enter
push
or
es
in
adc
mov
jge
cmp
pop
cs
decl
sahf
mov
sbb
movsb
lcall
std
insl
outsb
test
or
xor
jg
mov
adc
rcll
mov
push
jge
outsl
mov
outsl
xchg
dec
clc
sbb
jno
or
das
xchg
pop
lods
cltd
rclb
cmpsb
cmp
jae
xor
push
mov
bound
pop
movsl
dec
dec
mov
ds
or
in
jl
lods
cs
xchg
xor
js
vdivpd
push
mov
dec
sub
out
out
repz
test
xor
xchg
mov
xchg
sub
add
icebp
mov
bound
rol
insl
pusha
fucomp
sub
stc
sbb
ss
hlt
repnz
in
imul
fwait
bound
push
mov
xchg
sub
rclb
sub
repnz
sbb
and
mov
les
decl
sub
pop
popa
xchg
cltd
ljmp
pop
xchg
scas
add
sahf
mov
xchg
mov
pop
xor
adc
push
jle
push
xchg
mov
daa
dec
gs
and
xchg
add
sarl
dec
int3
push
mov
mov
lret
sbb
push
or
cwtl
incb
insb
cld
out
xchg
scas
outsb
shlb
mov
ret
insb
test
insl
jg
dec
xchg
push
push
adc
add
test
jmp
js
jo
mov
mov
iret
mov
pop
mov
lret
mov
addr16
imul
pushf
push
add
outsb
inc
test
lret
add
std
repz
insb
cmp
inc
in
in
pop
mov
shll
jl
cmp
jae
sarb
pop
imul
js
jb
repz
mov
pop
subb
jae
mov
and
jmp
loopne
cs
adc
orl
dec
pop
cmp
or
dec
push
pop
mov
mov
xor
mov
mov
adc
inc
push
cmpsb
or
scas
mul
pop
aam
scas
sbb
or
int
fbld
cld
loopne
and
fsubrl
aaa
or
cmp
push
or
or
js
push
mov
mov
add
push
cltd
lods
ljmp
icebp
mov
adc
decb
rorb
or
mov
movsb
aas
xchg
mov
adc
mov
inc
jo
push
dec
in
and
stos
mov
test
pop
mov
gs
and
ret
pop
fcoms
aam
fadd
mov
jp
shlb
dec
sarl
shlb
mov
push
cwtl
sbbl
aad
mov
das
jge
aam
fbstp
hlt
mov
shlb
mov
lret
shrb
lret
js
mov
mov
into
pop
imul
gs
iret
and
inc
std
push
cmp
leave
jne
rcrl
adc
fld
xor
out
fstl
push
das
xor
popa
adc
lret
push
fwait
and
cmp
xchg
xorb
imul
jl
inc
std
in
incb
movl
jg,pt
push
jecxz
add
sbb
jg
mov
sub
fwait
sub
push
mov
inc
fisubrl
xor
mov
das
and
adc
add
mov
ret
cmp
xchg
push
jmp
out
inc
sub
jmp
sbbl
cmpsl
jl
mov
xor
lods
add
inc
scas
mov
mov
inc
pop
in
sub
cmp
out
jae
stos
jo
jne
cmp
mov
cld
push
adc
add
or
xchg
mov
cmp
or
sbb
push
jge
adc
lea
jge
add
add
cmp
mov
or
jae
mov
cli
dec
shrb
sub
pusha
mov
shll
shlb
mov
push
jecxz
loop
adcl
or
loop
fwait
nop
dec
mov
and
pushf
lahf
inc
xchg
push
sub
repz
sub
enter
outsb
es
mov
dec
sub
outsl
xchg
jnp
push
cli
xchg
xchg
insl
cmpsb
fadd
sub
jle
xchg
rorb
aam
cmp
or
jecxz
rclb
add
cmp
mov
jnp
dec
addb
mov
mov
cs
jbe
sub
clc
push
outsb
mov
dec
pop
hlt
in
xchg
daa
rol
sahf
adc
outsb
std
addl
adc
add
inc
fadd
es
inc
or
adc
pop
sarl
xor
mov
roll
iret
jb
xchg
test
mov
fstpt
xchg
xlat
xchg
popf
or
insb
adc
js
rcrb
add
push
rol
mov
in
outsl
lock
pop
inc
push
divl
jecxz
cmpsb
xchg
adc
shlb
js
pop
mov
stos
add
outsb
neg
dec
xlat
cmp
inc
mov
test
pcmpgtw
test
lods
pop
aas
lcall
push
add
inc
xchg
add
fimuls
in
test
rcrl
cwtl
cmp
jnp
adc
scas
jo
enter
sti
imul
inc
adc
inc
pop
inc
inc
cmp
dec
fistps
lds
jae
mov
add
lods
out
inc
fdiv
jl
push
out
addr16
jl
and
repz
or
push
adc
adc
dec
jl
jb
fwait
cltd
jb
lods
cmp
lcall
jno
push
sub
cli
clc
push
outsb
adc
xor
jnp
in
scas
mov
sub
mov
in
mov
or
movb
mov
in
fwait
je
sub
fdivrs
or
sub
ja
ror
stc
nop
scas
inc
dec
fwait
inc
dec
inc
insl
int3
ficomps
xchg
pushf
jmp
lahf
aas
iret
aad
xchg
or
out
cwtl
xchg
dec
push
or
pop
mov
loope
and
mov
mov
xchg
and
push
das
mov
les
pop
aaa
adc
mov
aam
test
repz
out
sbb
sbb
mov
dec
das
scas
push
dec
jae
hlt
lods
out
out
fildl
sahf
xor
fldenv
repz
pop
daa
stos
or
mov
push
fld
pop
push
repnz
mov
clc
testb
data16
or
subb
and
add
rcrb
xchg
or
mov
xlat
push
clc
add
lods
mov
sahf
je
sub
ljmp
repnz
orl
add
shlb
inc
loop
jge
scas
scas
gs
nop
int3
dec
xor
add
or
add
pop
push
xchg
mov
mov
lds
mov
xlat
outsb
sub
pushf
push
cwtl
cmpl
dec
call
pop
add
mov
ds
jnp
into
nop
rorl
lock
xchg
jg
loope
inc
cmp
mov
fs
mov
push
call
pop
call
loop
sbb
movsb
es
fidivrs
mov
ljmp
pmaddwd
add
shrb
popf
jne
out
pusha
sub
lcall
pop
cltd
cmpsb
add
clc
or
sbb
scas
hlt
dec
and
into
rol
enter
mov
sub
scas
loop
notl
mov
iret
popa
lahf
xchg
sub
subl
scas
dec
fisubs
lahf
loope
or
jle
xchg
dec
cltd
sub
push
or
push
je
test
jg
mov
xchg
pop
and
out
inc
rol
out
xor
cmpsl
aad
cmp
arpl
lods
dec
or
push
push
aad
out
outsl
mov
mov
pusha
ds
lods
cs
sti
jg
dec
test
fimull
cli
and
add
leave
xor
and
cmp
repnz
repnz
je
mov
mov
sbb
or
and
mov
int
mov
movsb
insl
or
mov
fidivs
stos
loopne
movsl
icebp
sti
inc
jl
fcompl
leave
je
mov
movsl
or
jae
mov
scas
jo
daa
mov
stc
outsb
lret
and
jmp
fistl
xchg
mov
jecxz
push
push
push
lds
shlb
shll
and
pop
adcb
adc
mov
rcrl
addr16
cltd
test
mov
push
mov
call
xor
lret
xor
mov
test
xchg
popa
and
mov
mov
lds
popf
outsl
add
es
push
fmull
adcl
cmp
mov
out
scas
inc
sbb
cli
dec
popa
ss
cmp
cmp
and
in
cbtw
add
push
mov
adc
subb
rclb
stc
arpl
xor
stos
pop
in
xor
adc
pop
add
imul
test
ljmp
popf
sbb
add
push
fmuls
in
dec
jl
imul
pushf
mov
fwait
popl
stos
fstps
negl
movups
jg
aas
pop
dec
cmc
lock
inc
stos
repz
daa
movsb
sbb
adc
popa
mov
shr
mov
mov
scas
cwtl
popa
cmc
cmp
fnsave
push
outsb
dec
loope
bound
inc
shr
push
pop
test
ror
je
mov
sbb
push
mov
jno
stos
xchg
scas
mov
outsb
loopne
adc
nop
iret
insl
pop
aaa
sbb
inc
cli
sbbl
fs
insb
adc
dec
xchg
fsubrp
imul
mov
cmpb
mov
jb
jl
rcrl
adc
sbb
push
lock
xchg
pop
inc
mov
fwait
mov
push
xor
decl
sub
xchg
add
mov
es
ret
in
outsl
dec
jae
push
testb
cli
xchg
lods
sub
sub
iret
mov
sub
aaa
das
addr16
insl
lcall
clc
inc
cmc
or
sub
jo
mov
inc
mov
adc
dec
jnp
jb
fstl
push
sbb
into
dec
cmpsb
insb
mov
sbb
dec
fdivs
jecxz
mov
adc
sbb
jne
jle
push
pusha
repnz
divl
lods
sub
mov
fsubr
loop
push
cld
mov
inc
lods
sbb
cwtl
pop
bound
pop
inc
ficomps
testb
adc
push
ljmp
pop
adc
stc
xchg
fstsw
dec
scas
adc
mov
inc
inc
nopl
fcomp
xchg
into
and
aad
pop
cltd
pop
ja
inc
test
std
pop
xor
mov
orl
mov
imul
push
hlt
push
outsb
inc
std
pop
adc
jnp
setno
xor
or
sub
jmp
or
xchg
or
mov
cwtl
daa
inc
pop
outsl
orl
add
add
xor
cld
sub
fnstcw
pop
xor
mov
movl
enter
sti
push
pop
test
fnstcw
loop
movsb
add
jecxz
in
in
cmp
add
test
cmpsb
xchg
sbb
push
push
jnp
xchg
jae
aam
outsb
aam
test
add
xorb
pop
cmp
call
xchg
lods
xchg
cmc
pop
dec
push
mov
cwtl
fcomps
int3
ret
and
lcall
dec
les
pop
or
push
testl
insb
or
scas
sub
iret
jp
push
xor
push
mov
push
dec
out
and
push
ffree
sbb
mov
jle
ss
repz
cmp
out
sbbl
inc
or
mov
stc
adc
mov
addr16
sub
ss
sbb
out
arpl
mov
dec
jb
jae
lods
lods
jg
jecxz
cs
add
lea
mov
movsb
sub
xchg
cmp
push
and
jle
les
jp
xchg
js
xchg
cmp
outsb
and
test
dec
ljmp
push
shll
cmp
nop
bound
lods
imul
shll
mov
into
mov
mov
bound
outsl
adcl
dec
adc
dec
clc
adcl
mov
jecxz
pop
add
lods
jne
pushf
add
lods
mov
sti
pop
push
dec
pop
mov
out
cltd
cmp
xor
insw
push
scas
fwait
mov
mov
loopne
xchg
sahf
clc
xlat
aas
xor
inc
faddl
pushf
arpl
mov
and
lock
sbb
mov
jmp
dec
pop
sub
add
jns
adc
ret
xchg
sub
push
sbb
dec
mov
fcoms
dec
gs
jb
mov
jecxz
and
mov
xchg
sub
mov
push
add
icebp
iret
imul
outsb
test
cld
push
pusha
test
cmpsb
sbb
enter
xor
fwait
cmp
das
cmp
icebp
or
cmp
inc
daa
rcrb
mov
cmpsb
dec
cmpb
rcl
add
mov
js
out
insb
stos
insb
paddb
bound
aad
mov
lods
push
mov
in
and
mov
jl
mov
les
jl
adcl
xchg
icebp
xor
inc
mov
ret
hlt
xchg
lea
inc
clc
pop
jno
cmp
inc
test
lahf
bound
jp
rcrl
aad
int
sbb
cltd
mov
jge
pop
sub
sub
add
subb
aas
ret
add
inc
fisubrl
lods
addr16
xchg
jne
lods
inc
in
push
test
push
sti
bound
mov
add
mov
nop
or
adc
adc
cmpsb
out
pop
mov
mov
or
mov
dec
xchg
and
popa
jle
xor
mov
jl
sub
aaa
push
les
dec
std
pop
shl
fmuls
adc
sub
and
cli
ja
jmp
mov
popf
js
call
les
ficomps
dec
dec
cmpsl
inc
lcall
sub
test
loope
dec
mov
stc
push
gs
cmp
into
pop
lret
sti
clc
scas
push
mov
xchg
ljmp
inc
cwtl
scas
stc
jbe
stos
aad
popf
shll
popf
or
nop
sbb
std
dec
addb
xchg
mov
xchg
in
jp
lahf
cmpsl
cmp
iret
out
inc
push
lahf
test
fistpl
xor
std
mov
sbb
dec
call
outsb
hlt
pop
cli
leave
jae
xor
lods
and
idivl
inc
outsl
push
xor
mov
adc
mov
cmp
add
push
push
inc
xchg
mov
loope
sbb
ret
loope
mov
mov
xchg
pop
xchg
aam
adc
es
or
jo
push
out
enter
lahf
mov
xchg
cli
pop
sub
gs
fstl
fimuls
ret
jnp
inc
je
mov
mov
xor
xchg
and
mov
clc
inc
pop
xor
dec
orb
lcall
test
inc
dec
xor
add
pop
ret
iret
mov
xor
nop
jnp
sarb
push
dec
sar
cmp
xlat
das
cmp
sub
sbb
mov
and
or
sub
push
cli
push
inc
xchg
cwtl
sbbl
and
sub
pop
mov
dec
adc
mov
inc
test
dec
shl
cmp
and
mov
or
add
mov
mov
mov
pusha
add
push
jns
cmp
cld
xchg
inc
notb
mov
fnstenv
dec
cmp
sbb
inc
push
cmp
scas
push
and
add
push
cltd
pop
xor
fcomps
jnp
cld
idivl
xlat
xchg
sub
inc
in
jle
daa
test
mov
test
ror
inc
lret
pusha
mov
push
adc
je
sbb
mov
outsl
mov
mov
cwtl
mov
nop
ja
test
leave
jno
jae
sub
out
ja
mov
add
mov
popa
xlat
mov
call
adc
mov
dec
jp
xchg
pushf
imul
adc
or
pusha
cmp
push
lods
jns
loope,pt
sbb
push
movsl
and
sbb
and
mov
ja
xchg
shlb
cs
add
xchg
xor
rcrb
sub
sahf
push
mov
test
pop
mov
jns
jge
shrl
lock
test
dec
decl
inc
mov
aad
dec
in
inc
js
test
insb
jle
jmp
int
cmpl
and
push
loope
movsl
jnp
scas
test
cld
cld
icebp
cmp
cli
mov
and
mov
xchg
cmpb
sbb
xchg
inc
stos
shlb
sbb
ret
out
inc
push
data16
and
cli
adc
mov
das
dec
adc
std
daa
in
das
add
and
push
mov
push
add
cmpsb
push
and
mov
mov
cmpsl
cli
sbb
out
mov
into
out
inc
dec
mov
cmp
lods
jg
push
loopne
and
addb
adcl
inc
xlat
jecxz
xchg
icebp
jg
lods
mov
cmp
cs
ds
xchg
mov
call
movsb
push
jno
dec
repz
adc
dec
faddl
cmpsb
cmp
into
int
out
mov
fstpl
and
negb
fcompl
test
inc
mov
fildll
push
lahf
icebp
push
dec
or
fisubl
push
rol
rolb
f2xm1
dec
ret
outsl
aam
ret
mov
pop
jle
xchg
fxch
clc
push
dec
dec
fbld
mov
cmp
insb
js
cmp
inc
lcall
adc
or
sarb
je
pop
cmp
jle
rcrl
xchg
push
aad
mov
and
aad
fstpl
iret
and
sub
in
imul
push
pushl
add
and
stos
cmp
adc
push
jecxz
and
mov
popf
pusha
dec
xchg
inc
sbb
pop
mov
dec
js
pop
and
jp
jns
rol
loop
loope
mov
cs
add
mov
dec
mov
loop
lret
ss
es
das
sbb
inc
into
sub
xchg
data16
mov
mov
nop
sbb
xlat
ja
dec
push
out
adc
xlat
outsb
shrl
mov
xchg
cmpsb
cmp
icebp
sub
or
add
sbb
and
loope
dec
xchg
xor
push
enter
data16
and
test
lret
add
jbe
les
and
iret
gs
sub
push
scas
ljmp
mov
dec
dec
add
cltd
xor
add
outsl
mulb
in
sub
shlb
add
addr16
loopne
mov
pop
sub
add
mov
add
scas
cmp
fwait
les
lods
mov
lcall
ret
jbe
fcmovnb
jl
dec
push
mov
jno
popf
sub
cli
inc
cli
bound
fmull
cmp
js
cmp
xchg
insl
out
and
cltd
hlt
inc
mov
lods
into
in
das
cltd
sub
cmpsl
loop
imul
lea
sub
ja
ret
pop
jbe
dec
push
repnz
push
dec
mov
lahf
mov
fmulp
pop
int
jle
iret
mov
imul
jbe
push
push
out
mov
mov
outsb
xchg
or
icebp
test
shrl
mov
hlt
into
fmull
insb
jle
cmp
mov
jle
in
leave
ret
xlat
dec
inc
js
ja
xor
adc
cltd
xor
pop
popa
in
into
loope
cmp
test
cld
dec
cmp
mov
aaa
stos
lret
inc
cltd
push
push
in
mov
xor
movsb
std
inc
fimuls
dec
shrb
stos
lcall
mov
sahf
jle
ret
dec
fidivl
add
add
dec
pop
outsl
daa
fadds
icebp
dec
cmp
push
inc
and
push
pushf
arpl
xchg
repnz
ret
sub
jne
leave
cmpsl
cli
sbb
mov
rclb
pop
push
aaa
push
je
mov
cld
popf
stos
xchg
call
push
ss
repnz
adc
es
in
add
shll
add
lds
setg
aas
mov
js
shrb
sub
mov
loope
ret
cld
sub
insl
ret
xchg
cld
lcall
movsl
lds
push
push
popf
and
cld
push
outsb
inc
sahf
pop
fstpt
lock
sub
or
mov
dec
cmc
adc
mov
repnz
outsl
or
xchg
test
mov
adc
mov
clc
rcll
dec
xlat
leave
pop
sbb
and
xor
mov
mov
shl
fldcw
lcall
rorl
push
pop
lcall
inc
stc
pop
dec
mov
ja
bound
adc
insb
shlb
ficomps
jns
inc
cmp
and
subl
fucomip
lea
mov
movsl
sub
push
addr16
subl
out
imul
pop
jno
loopne
xchg
jne
add
orl
sub
mov
cmpsb
stos
enter
xor
fdivs
and
mov
pop
insl
sbb
push
inc
dec
sbb
xor
sti
inc
jecxz
mov
lret
cmp
sbb
cmovo
xchg
aam
xchg
jl
lock
sub
incl
xchg
adc
and
shlb
dec
adc
jg
and
out
fdivrs
mov
rcr
pop
and
push
xlat
data16
fsub
in
lds
into
outsl
lret
or
adc
lods
sbb
add
enter
sbb
cmp
xor
mov
cltd
insl
enter
push
arpl
dec
outsl
jmp
mov
push
cltd
stos
pop
cs
and
enter
movsb
mov
scas
pop
cli
mov
ljmp
or
stos
ret
clc
mov
iret
sub
add
inc
lret
xor
arpl
or
lret
push
xor
lods
inc
call
xor
sbb
cwtl
loope
shrb
lock
pop
xchg
mov
push
clc
mov
imul
fstps
into
subl
pop
ja
or
jge
push
test
push
inc
fwait
sti
ljmp
cwtl
out
mov
push
divl
or
push
clc
mov
in
ds
lahf
push
je
or
dec
sub
fs
xor
mov
stos
mov
loope
bound
pop
mov
imul
push
jbe
in
dec
loopne
fdivrp
or
mov
shlb
add
clc
and
pop
les
push
subl
jle
xor
and
int
ficompl
pop
cmp
inc
mov
adc
adc
xchg
xchg
fimuls
cmp
and
jmp
add
or
dec
xlat
mov
inc
add
mov
xor
cmpsb
in
pop
movsl
jmp
jb
insl
enter
dec
mov
jge
lods
ljmp
pushf
xor
cmp
pushf
mov
lea
lock
popf
push
jbe
push
mov
jecxz
or
push
xchg
lock
popa
ret
lret
pop
sub
cld
lret
bound
jno
jecxz
xchg
mov
cmpsl
pop
mov
sub
pop
or
mov
stos
mov
xor
popf
sbb
add
jmp
loope
popf
or
inc
mov
cltd
test
stc
sub
mov
jge
fcompl
dec
outsl
fwait
imul
inc
cmp
xlat
pushf
add
xchg
imul
add
pop
cmp
pop
jb
test
repnz
out
inc
dec
xchg
loop
inc
push
fwait
xchg
mov
xchg
jle
jb
lea
movsl
jns
mov
outsb
and
jmp
and
addr16
out
adc
or
and
add
add
dec
cmp
iret
pop
das
mov
cwtl
dec
cltd
dec
imul
sub
push
xor
outsb
mov
mov
pop
mov
sub
cmp
xlat
test
fisttpll
outsb
adcb
notb
inc
test
jecxz
leave
lods
mov
les
cli
sarl
sbb
adcl
jmp
fadd
xchg
or
repnz
push
or
cli
add
and
aam
hlt
iret
data16
pop
or
lcall
cltd
int3
xchg
mov
jle
jne
jo
jnp
pop
mov
inc
pop
clc
add
xchg
sbb
addr16
mov
cmp
jmp
aaa
and
mov
popa
iret
sub
enter
leave
jmp
pop
repnz
pop
jnp
xor
pop
add
inc
insl
aas
scas
pop
repnz
fmuls
test
stc
adc
sub
cmp
cld
sub
loope
stos
push
pushf
adc
cltd
jnp
in
dec
loope
xchg
push
cmp
loope
ret
inc
and
negb
aaa
push
lret
push
sbb
rorb
repnz
mov
xchg
rcrl
sub
sub
das
push
mov
xchg
push
cmp
cmpsl
ret
lods
or
inc
sub
iret
pop
testl
mov
pop
div
or
out
and
mov
insl
or
sub
scas
je
movntq
in
inc
xchg
xchg
inc
fadd
mov
dec
adc
push
xchg
dec
dec
jp
cmp
lock
in
dec
xchg
cltd
in
push
pusha
dec
loop
popa
int3
arpl
xchg
adc
mov
or
aaa
fldcw
sub
adc
push
mov
adc
jl
jmp
or
cmp
push
mov
or
cmp
out
mov
jecxz
mov
adc
lea
aas
outsb
sub
mov
jg
xchg
sbb
out
jl
std
xchg
jbe
xor
sbb
xchg
jp
inc
or
xchg
arpl
cltd
cmp
sbb
movsb
pop
and
mov
fwait
or
call
sbb
fxsave
divl
fwait
inc
push
pushf
repz
mov
cwtl
mov
pop
repz
xchg
mov
jp
ds
pop
imul
pushf
push
lods
adc
adc
loop
adc
sub
popa
xorl
pop
iret
jbe
inc
mov
mov
pop
xor
mov
aad
add
lea
jo
vmaxps
dec
clc
aam
mov
int
or
movsb
mov
out
divl
sbb
xor
popf
sub
outsl
push
fadds
mov
rcrl
dec
lea
jae
out
aam
scas
jns
dec
fdivs
ficoms
mov
je
fdivs
sbb
push
push
idivl
in
add
lret
mov
or
cmpsb
add
fildll
inc
jecxz
repz
jmp
xchg
jge
xchg
xor
pop
jecxz
cmp
inc
cwtl
pusha
dec
pop
pop
cmpsb
sbbb
es
mov
inc
adc
inc
mov
lret
test
xor
cltd
sub
faddl
xchg
data16
or
mov
enter
xchg
gs
inc
mov
inc
in
adc
mov
ss
addr16
sbb
inc
popf
jb
push
inc
dec
xor
mov
andb
mov
clc
jg
outsb
push
sbb
cmp
cmpsl
cmp
insl
outsl
aaa
sbb
cmp
xchg
mov
jle
dec
and
mov
cmpsb
repz
out
sbbb
sub
dec
cmc
sbb
into
mov
xor
xor
lea
xchg
add
push
lods
mov
fsts
repz
scas
rcl
pop
call
lea
sub
mov
mov
jmp
sbb
aad
adc
mov
and
adcb
mov
and
out
inc
js
mov
fwait
sub
mov
sbb
dec
in
sub
pop
add
jb
jg
xorb
xor
mov
scas
mov
mov
ret
insl
cmp
popf
xor
dec
dec
dec
adc
inc
push
jne
cmp
push
loop
dec
push
negb
pop
aaa
jl
inc
sbb
sti
cmp
push
dec
xor
das
push
testl
inc
jle
lret
or
sahf
es
mov
in
xor
pop
mov
pop
sbb
cltd
stos
push
cld
xchg
out
lock
fwait
es
mov
jmp
push
or
fsts
into
lahf
mov
or
jnp
sub
lds
es
out
or
mov
lods
loope
rcl
xor
ret
in
xchg
inc
pop
mov
and
ljmp
and
push
test
pop
ljmp
dec
jns
clc
orb
push
imul
insl
outsb
adcl
cmp
aas
sub
inc
mov
push
out
shl
mov
mov
mov
and
adc
mov
push
lcall
js
cwtl
sbb
ds
jo
mov
cmpb
push
push
jmp
xchg
fwait
push
ljmp
leave
fs
cli
xchg
imul
in
pop
dec
and
outsb
test
add
or
stc
mov
push
es
pop
inc
hlt
jnp
xor
iret
fst
lds
push
sbb
aam
lods
shll
inc
gs
ds
movsl
nop
cs
inc
mov
in
add
mov
arpl
test
mov
adc
cmp
sbbl
cmp
sbb
or
repz
sahf
push
cwtl
and
fsub
xchg
call
inc
test
dec
add
mov
and
mov
mov
stc
mov
fisttpl
mov
stos
xchg
xchg
sarb
and
xchg
sub
or
jnp
test
movsl
add
lahf
repnz
iret
ja
mov
int
in
cmp
and
std
push
cltd
sub
mov
std
xor
push
jge
into
add
sahf
mov
and
xchg
ljmp
adc
or
mov
fbstp
andl
or
cmpsb
popa
cli
std
out
push
out
sar
cwtl
or
mov
jecxz
lock
insl
sub
jg
cmp
movsl
mov
cmp
sub
add
fsubs
jl
cltd
jno
mov
leave
adc
fwait
xor
fs
int3
sub
and
add
push
add
mov
cmc
xchg
jp
xor
cmpsl
cmpsb
repz
leave
or
push
push
nop
xor
inc
push
mov
aas
inc
inc
push
icebp
loope
xchg
stos
aad
lahf
mov
sub
imul
push
ret
popf
dec
jecxz
in
cltd
arpl
addl
loope
popa
cmp
loope
jno
xor
pop
in
std
fdivs
or
push
inc
jg
push
jno
aad
aas
xchg
repnz
out
scas
dec
outsl
inc
cld
shlb
orb
push
jl
icebp
and
fst
packuswb
fisubl
das
andl
pop
dec
addb
mov
std
xchg
add
push
sbb
push
sbb
push
aad
inc
insb
loope
push
sarl
or
mov
loopne
and
cli
out
int3
mov
jnp
iret
mov
adc
inc
mov
ud0
aas
add
pop
cmp
pop
sbbl
sti
lcall
cmp
lahf
insb
imul
stos
shll
mov
add
inc
sbb
sti
sbb
inc
pop
mov
fucomp
cmp
stos
ficoml
jae
push
mov
sub
int
sub
mov
pop
dec
and
loop
in
pop
cmpsl
jbe
mov
aas
sub
cltd
outsb
dec
jg
fmuls
pop
mov
lret
xchg
imul
fdivr
xor
adc
add
iret
lret
adc
dec
cltd
xchg
mov
nop
pusha
adc
mov
repnz
push
inc
shrl
fisubrl
inc
and
jnp
outsb
cli
pop
fsubrp
aam
icebp
addb
pushf
mov
into
bound
jno
push
mov
or
cmpsl
push
je
and
fcomi
mov
dec
cmpsl
leave
push
jae
pop
dec
shlb
dec
fld
jno
sbb
js
mov
mov
fldcw
fldt
test
ja
in
nop
cli
inc
mov
xor
fdivrs
xchg
das
cmp
insl
lahf
pop
xchg
call
xchg
sbb
test
xor
in
lods
cmp
cmp
inc
rorl
orl
in
xchg
adc
int3
call
push
jmp
push
mov
xor
adc
xchg
daa
mov
lret
adc
cmp
sub
loope
movsb
add
jnp
sbb
jnp
ss
out
mov
mov
in
shl
jmp
cmp
out
cmp
pop
ljmp
imul
dec
push
lcall
and
push
sti
jp
mov
xchg
push
adc
mov
mov
adc
push
pop
cmp
cmpsl
ror
ds
imul
pop
cmp
repz
sbb
das
inc
hlt
imul
ja
dec
dec
test
je
jp
cmp
dec
fwait
scas
inc
int
popf
clc
les
fwait
xor
adc
and
addb
in
loop
fdivl
sbb
push
mov
xor
fisttps
pop
into
stos
adc
das
add
mov
cmpsl
xchg
jge
adc
scas
mov
repz
inc
jne
ds
dec
fwait
or
and
mov
xlat
push
mov
notl
mov
cmp
hlt
ss
pop
pop
xor
jge
pop
xchg
movsl
ja
out
and
adc
mov
fidivrs
sbbl
dec
test
je
insb
adc
test
mov
jbe
adc
and
test
xor
mov
repz
or
movsl
icebp
mov
out
cli
xchg
mov
inc
lahf
and
add
jb
xchg
mov
xlat
sbb
mov
clc
into
sub
call
das
movsb
cmp
icebp
mov
cmp
dec
out
insb
and
fs
hlt
repz
sub
mov
loope
add
aas
dec
fstpl
aad
push
or
add
mov
add
pop
aaa
int3
aad
pop
loopne
icebp
inc
or
aas
mull
jge
inc
pop
xchg
pop
mov
inc
pushf
sahf
sarb
nop
sub
pop
pop
inc
shrl
ret
pop
pushf
add
pop
inc
jnp
adc
test
push
sub
lahf
pop
loop
mov
std
and
daa
lods
jnp
fsubrl
inc
popf
into
push
mov
popa
aad
cwtl
loop
mov
fnstsw
lcall
test
les
testb
mov
in
outsl
push
or
cmp
jg
xchg
and
js
les
das
scas
inc
push
fsubl
xchg
push
jmp
pop
pop
mov
stc
arpl
mov
clc
inc
cmp
out
add
out
and
je
repz
sub
push
jbe
cmp
jbe
nop
movsb
enter
outsb
or
loopne
lock
add
xchg
sbb
mov
clc
test
fsts
pop
sub
clc
jnp
cwtl
mov
fstpl
addr16
nop
lret
jmp
arpl
xor
push
sbb
push
or
je
movsb
and
mov
insb
add
pop
mov
cmp
xchg
and
data16
iret
adc
mov
fwait
pop
jne
loope
bound
cmp
loop,pn
fmull
add
and
xchg
ds
add
out
or
clc
les
andb
loop
rolb
inc
push
rolb
movsb
push
push
out
push
inc
stc
rcl
hlt
in
push
daa
sbb
cwtl
mov
mov
adc
or
jne
xchg
jno
push
mov
popf
je
aam
dec
push
in
fcmovb
or
ja
cmp
inc
jmp
push
add
adc
movl
dec
pusha
das
inc
int
jne
out
aaa
xchg
cmp
and
inc
fsubl
js
and
shlb
mov
cmpsb
or
imul
aam
and
dec
ret
arpl
lds
js
push
dec
stos
fst
notb
cmp
icebp
jne
xor
and
outsb
mov
negl
push
fstpl
jns
cvttps2pi
ljmp
cmpsl
fs
inc
loope
add
test
xchg
xchg
push
movsl
add
jp
dec
les
add
es
inc
dec
mov
jmp
cmp
jnp
js
push
jb
jg
lret
jle
sbb
mov
sub
jb
and
mull
ljmp
sbb
inc
add
sbb
inc
shlb
pop
pop
outsl
sbb
dec
int
inc
lret
in
adc
arpl
pop
dec
ret
xor
dec
cmp
subl
mov
movsl
sub
in
cmp
popl
push
int
xchg
out
mov
cmc
imul
adc
add
sbb
sub
pop
dec
fucomip
mov
push
add
pop
pop
es
shrl
nop
outsb
adc
lret
pop
stc
aam
adcb
gs
mov
push
test
in
push
sahf
scas
dec
pop
fs
ret
das
lret
pop
mov
and
lret
or
out
std
xchg
loope
xchg
dec
inc
in
in
insl
sti
les
mov
xor
sbb
and
aas
push
inc
add
inc
xor
and
push
jmp
push
data16
stos
lods
shlb
addr16
fs
xor
mov
js
dec
popa
mov
or
add
sub
jle
mov
xlat
mov
sbb
add
loop
es
shl
and
insb
xor
jnp
dec
leave
ret
pop
fisubrs
ret
push
stos
sahf
sbb
lds
js
xor
addr16
and
mov
popf
sbb
xor
test
inc
jb
dec
fxch
mov
test
xchg
bswap
flds
cmp
clc
mov
addr16
enter
sti
test
push
jb
xchg
push
xchg
adc
adc
or
pop
cmp
cmp
sbb
jb
xor
ret
inc
mov
inc
pop
mov
cmc
lcall
push
add
cmp
cmp
flds
cmp
xchg
lods
add
xor
clc
orl
cld
mov
pop
or
aaa
pop
jl
ds
aam
fstl
iret
xchg
movsb
dec
ret
jl
mov
pop
xchg
cmp
adc
outsl
push
push
push
andb
stc
lea
sbb
icebp
insl
cld
shlb
dec
call
xor
cltd
xchg
jecxz
dec
stos
adc
sub
inc
in
popf
pop
lods
hlt
add
stc
and
rol
add
sbb
or
add
scas
clc
rcrl
mov
andb
rcl
mov
or
xchg
cmp
xchg
insb
inc
pop
push
movsl
pop
fstps
jnp
dec
loope
jecxz
es
jno
int
add
mov
add
xor
sahf
pop
sbb
push
mov
cld
sbb
inc
mov
dec
mov
popa
mov
lea
push
lahf
fstps
fildll
cmpb
sub
lods
inc
jmp
cmp
shrl
mov
xchg
xchg
sub
cmp
push
pminsw
jle
ja
pop
xlat
pop
out
imul
add
scas
dec
aam
popa
sahf
mov
push
data16
test
cwtl
and
jns
insl
inc
jge
jb
movsb
jnp
jg
ss
das
add
push
dec
pop
xchg
mov
adcb
loopne
fistps
lahf
dec
js
popa
enter
mov
xor
loopne
xor
out
and
adc
ss
adc
movsl
jns
dec
and
pop
fcmovnu
aad
push
adc
in
or
scas
sub
insl
jg
lahf
ss
mov
cli
iret
push
jne
es
ret
add
or
into
sahf
lret
ficompl
or
push
lods
add
mov
mov
jmpw
out
js
and
jl
mov
push
lods
std
and
js
out
or
lds
pop
mov
leave
loopne
mov
cmpsb
sbb
and
xor
or
cmp
aam
sarb
out
cmc
jl
cli
mov
dec
xor
jmp
lock
or
subl
lret
insl
mov
pusha
ss
rol
jmp
mov
icebp
pop
cltd
addr16
dec
sbb
mov
les
shlb
fcomps
or
inc
push
sbb
scas
inc
gs
xor
fwait
dec
loop
sub
dec
dec
add
mov
mov
in
jl
lock
inc
insl
shll
inc
sub
sub
xlat
fldt
js
sbb
subl
jo
fbld
aad
cli
xchg
ss
jge
or
outsb
rclb
jecxz
mov
loop
push
movsb
loope
int
rolb
jno
xchg
adc
add
add
sub
sub
outsb
pusha
fildll
push
jb
repnz
icebp
icebp
loopne
dec
xchg
into
movsl
shrb
push
xor
sbb
into
cwtl
pop
cltd
in
cld
lods
add
jnp
addr16
dec
mov
clc
fwait
cmp
mov
add
add
jmp
pusha
imull
add
out
add
mov
inc
jb
mov
dec
inc
dec
ljmp
fxch
pop
or
aad
inc
outsb
pop
push
jl
sbb
pusha
pop
or
dec
or
loop
aam
ja
pop
or
jl
ljmp
int
mov
xor
lcall
in
jae
jmp
mov
imul
sbbb
dec
loope
jno
mov
lret
push
inc
inc
loop
addr16
gs
cld
shr
cli
stc
push
sbb
jmp
adc
out
hlt
xorb
mov
mov
loop
fistl
mov
test
icebp
pop
and
lods
daa
pop
mov
scas
inc
movsb
cld
or
jle
es
int
mov
stos
adc
jl
mov
mov
jae
push
sub
push
xor
mov
mov
sarl
clc
popl
fcoml
dec
mov
ljmp
mov
cmpsl
inc
sub
push
push
xchg
xchg
loop
es
pushf
inc
push
dec
xor
divl
sarl
or
jnp
lods
movsb
push
mov
sahf
clc
push
enter
je
mov
fidivl
or
mov
push
jnp
mov
dec
daa
iret
xchg
ja
inc
fdivrl
cmpsl
xchg
push
in
pop
aad
sbb
call
arpl
adc
adc
ss
push
mov
leave
int
lahf
or
xchg
rcl
and
xchg
es
pushl
sbb
mov
sti
fwait
shr
popa
shrl
and
add
mov
add
js
int3
ficomps
mov
stc
mov
push
jb
nop
add
inc
aad
jno
addr16
cltd
rcr
insb
xchg
push
and
data16
jo
xor
ds
pop
or
stos
xchg
fs
and
test
movsb
sub
out
jnp
jl
int3
pushf
mov
mov
sbb
push
and
ja
rolb
jmp
cmpsb
mov
pushf
add
mov
adc
cmp
jl
ficomps
sti
push
mov
jne
xor
xchg
xchg
push
jo
xchg
add
mov
jns
push
xchg
rcrl
out
xor
or
jnp
pop
les
inc
mov
cs
popf
push
jle
or
paddq
clc
bound
sbb
sub
mov
xchg
loopne
call
sub
cltd
in
pop
lahf
xchg
pop
movsb
ret
pop
sub
mov
adcb
pop
cmc
cmpsb
mov
mov
jp
nop
lods
mov
xlat
repz
mov
loop
add
les
inc
push
call
pop
adc
pop
jb
call
add
mov
aaa
std
iret
call
pushf
dec
ljmp
jns
test
add
nop
test
lret
xchg
arpl
mov
or
fiadds
test
push
jb
adc
sub
fwait
jno
or
notl
sub
and
jg
sub
sub
pushf
xor
jle
mov
mov
jno
sbb
popa
jns
rclb
add
or
addr16
xchg
mov
fs
divl
xchg
cmp
push
aaa
pop
movsl
add
call
cmp
lods
bound
push
xchg
or
fisttpll
sub
mov
mov
inc
xchg
sarb
orl
addr16
std
add
cmpl
rcll
jmp
add
pushf
nop
adc
pop
mov
pop
cli
and
es
or
mov
popf
push
cmp
jle
adc
in
and
subb
lahf
and
call
ret
xor
inc
adc
xchg
push
ljmp
in
nop
test
sbb
insb
popf
sub
sub
js
and
pop
iret
pop
inc
lods
into
mov
mov
loopne
add
dec
dec
sbb
inc
cwtl
idiv
push
jo
pop
pop
ss
cmp
xchg
lds
dec
subl
and
test
dec
mov
cmpsl
jns
aam
scas
add
cld
xor
addr16
lahf
mov
ss
clc
xchg
pop
ss
inc
push
xchg
pop
mov
in
cmp
fisubl
jp
jae
dec
push
jae
push
add
sub
push
sub
jno
mov
cli
clc
push
mov
inc
test
mov
inc
bswap
and
movsb
xchg
add
push
jg
jae
ja
push
and
mov
scas
jbe
cmp
or
js
and
sub
push
leave
push
loopne
lret
mov
hlt
mov
shrb
mov
iret
sbb
shl
add
sarl
push
test
push
sahf
cmpb
push
aas
push
sub
enter
cmc
xchg
jae
add
rcll
cmpb
loope
loopne
push
mov
insb
mov
push
or
fs
jbe
nop
mov
je
xchg
push
call
scas
push
jo
xchg
pop
and
pop
or
cltd
iret
and
or
add
data16
and
sti
ds
leave
aad
addr16
vpmaxub
jne
jae
je
jno
ficoml
pop
or
scas
push
rcr
sbb
pusha
mov
cltd
lret
push
std
mov
or
sarl
ret
addr16
in
add
xchg
cli
stos
je
std
mov
sbb
inc
ret
adc
cld
jo
dec
mov
sbb
daa
ret
dec
push
out
imul
adcl
loop
div
cmp
movsl
call
adc
shr
sti
loopne
xchg
adc
cs
out
mov
sub
mov
cmp
dec
push
or
and
sub
mov
dec
jecxz
mov
jp
popa
xor
fwait
xor
xchg
xchg
jbe
out
cltd
cmp
imul
popf
daa
xchg
adc
loopne
lret
add
cs
cmc
dec
jo
mov
imul
mov
xchg
scas
sbb
sub
push
pusha
pop
mov
jp
hlt
pop
adc
hlt
int3
cmp
out
add
movsl
repz
loopne
sub
lcall
pop
es
test
ds
sahf
clc
bound
mov
push
call
push
jno
xor
inc
push
lahf
in
or
lret
pop
jmp
jecxz
inc
xor
push
push
xor
mov
mov
test
es
xchg
inc
xor
push
add
push
in
push
repnz
int
and
push
insl
jmp
fs
mov
imul
mov
orl
dec
iret
outsb
cmp
push
daa
or
lods
xor
and
test
push
inc
cmpsb
aad
int3
out
push
nop
and
into
sbb
dec
int3
imul
out
cmp
fwait
or
std
jle
xchg
fcoms
movl
mov
icebp
xchg
push
inc
repz
xlat
push
xchg
mov
inc
xor
sub
enter
jl
jb
shlb
test
std
sub
xchg
sti
aas
leave
pop
mov
gs
xlat
outsb
push
rcrl
mov
jmp
aaa
push
sub
rorb
test
mov
add
mov
xor
mov
test
jge
cld
dec
sub
lock
dec
psubusb
xor
dec
xchg
push
pop
aaa
add
lods
imul
testl
insl
xchg
push
leave
cmp
lea
fnstcw
or
lods
fsubrl
test
in
xchg
push
push
fldt
and
jb
push
fstl
push
scas
scas
bound
adc
rolb
dec
xchg
mov
sbb
add
out
cld
ja
ljmp
loope
inc
adc
xrelease
pop
mov
add
adc
mov
dec
push
loop
pushf
mov
inc
and
out
or
dec
adc
aam
andb
mov
xor
movsl
push
inc
in
sub
adc
mov
repnz
cmp
rcrl
aas
and
mov
push
cmpsl
xchg
imul
jns
mov
lahf
mov
int3
fidivs
mov
adc
mov
xchg
xor
mov
les
lds
daa
pop
inc
stc
xchg
pusha
mov
addr16
into
cmpsb
les
cmc
pop
xchg
or
jg
mov
xchg
mov
and
mov
push
leave
mov
popa
mov
mov
xor
lret
subl
into
jae
jns
jp
scas
mov
fcmovnbe
sbb
pop
push
and
jns
mov
test
pop
adc
fwait
mov
and
mov
out
xchg
cwtl
jp
pop
cmp
cwtl
notb
mov
cmp
shl
stc
insb
out
movsb
mov
in
push
jmp
fimull
push
mov
testl
mov
movaps
pop
add
dec
lret
jecxz
loopne
jne
mov
or
js
mov
fstl
cmp
out
sarb
fs
incl
movsb
loope,pt
xchg
mov
icebp
mov
dec
xorb
sti
out
dec
dec
add
push
xor
inc
rcrl
cmp
bound
push
stc
fadd
test
test
cs
fs
sti
jge
dec
push
lcall
int
js
jmp
std
push
add
push
or
cmpb
lods
xchg
mov
push
jmp
adc
fcmovb
adc
ret
popa
or
cltd
mov
imul
out
imul
insl
adc
fnstenv
mov
push
adc
outsb
popf
mov
ret
dec
cmp
ror
repz
inc
fs
jo
in
mov
leave
mov
icebp
sbb
pop
dec
cmp
daa
or
dec
loope
dec
dec
jl
fidivs
mov
ret
sarl
lret
cmp
cmp
jb
loopne
jne
movsb
test
addr16
sbb
test
lods
rorl
mov
sub
push
in
pop
lods
cmp
xchg
jp
jno
mov
pushf
bound
mov
sbb
pop
call
loop
dec
dec
dec
bound
mov
cmpsb
rorl
dec
jg
clc
push
mov
decb
xor
mov
in
push
dec
pop
fbstp
cmp
mov
rcrl
outsl
push
push
xchg
mov
jg
or
pop
mov
in
mov
push
sub
negb
push
out
add
jbe
ficomps
dec
and
mov
mov
rcll
out
sub
movsl
insl
mov
add
or
mov
insl
rolb
dec
inc
jns
shll
leave
js
mov
mov
cmp
adc
inc
loope
or
ja
xor
cmp
sahf
lret
xlat
ret
or
mov
sbb
frstor
jmp
pop
add
scas
int3
and
inc
pop
ds
xor
jle
shr
mov
dec
inc
mov
inc
jge
cmp
rclb
fucomip
and
xchg
leave
ja
sub
jle
sarl
cmp
aaa
cwtl
inc
push
out
jnp
imul
cmp
arpl
sub
add
das
lret
cmp
dec
mov
dec
leave
inc
push
mov
mov
jbe
sub
cmpsb
xchg
inc
pop
fcoms
cmpsb
psadbw
in
cmp
aam
out
addb
jle
fadd
bound
inc
iret
pop
stos
adc
cmpsb
repz
xchg
stc
add
push
mov
add
mov
inc
mov
and
adc
addr16
sub
lret
popa
add
incl
or
xchg
ficoms
loopne
mov
push
dec
mov
jne
inc
push
push
stos
addr16
xor
sbb
mov
test
addr16
scas
pusha
add
pop
fsub
js
inc
sbb
dec
sub
cmp
cmp
movsb
pop
cmp
mov
rcll
outsb
push
out
dec
mov
mov
or
fwait
imul
pop
mov
xor
push
icebp
data16
pop
sbb
adc
outsb
ret
mov
ret
jecxz
inc
xchg
add
add
clc
enter
jne
push
xchg
sub
pop
cmp
cli
rcl
xor
sub
leave
cmc
subl
xorl
imul
cmpb
scas
xchg
add
xchg
jle
mov
call
aad
push
movsl
dec
ds
or
ds
push
sub
lea
pop
cwtl
daa
mov
sar
mov
xchg
scas
rolb
xchg
pop
dec
sbb
adc
fldt
add
xchg
mov
mov
cld
and
das
cld
es
or
repnz
push
repz
mov
mov
xchg
popa
inc
shlb
iret
int3
xor
out
stc
and
inc
inc
ret
enter
popa
pop
lods
and
outsl
daa
repnz
lret
jp
mov
pop
shll
lcall
and
and
inc
add
in
loop
leave
inc
rorl
lahf
stos
out
jnp
ret
aaa
pop
cltd
add
jmp
fwait
pop
hlt
xor
scas
rorl
fwait
cmp
mov
testb
xchg
int
sub
jl
xor
out
pushf
or
flds
jno
dec
mov
inc
add
test
sbbb
pop
int3
pop
pop
out
push
inc
mov
ss
xor
movsl
cmp
nop
mov
dec
lock
punpcklwd
mov
mov
jno
push
aaa
enter
mov
xchg
or
scas
js
sbb
shll
inc
aas
sti
jg
in
fdivl
cwtl
out
lcall
in
and
cltd
xor
adc
inc
cmp
pop
cmp
fcmove
pop
loop
pop
add
fcmove
mov
repz
movsb
xchg
jns
mov
popf
ficoms
out
mov
sub
out
lahf
es
mov
test
or
pushf
pusha
scas
in
cli
andl
xor
je
aaa
mov
mov
arpl
adc
aad
repz
stos
divb
dec
rcrl
xor
push
imul
inc
sub
mov
pusha
jecxz
push
and
xlat
jb
push
xchg
loopne
jae
cmp
test
or
outsb
mov
pop
mov
jecxz,pn
jae
nop
fsubrl
xor
pop
popf
jmp
lret
sub
imul
insl
addl
xlat
dec
mov
xor
mov
push
or
int
clc
or
lret
adc
hlt
push
lds
jmp
leave
addr16
adc
daa
cmc
dec
mov
loop
out
lret
and
iret
int
jle
push
sbb
dec
push
adc
adc
sbb
stc
cmc
push
test
rol
sbb
popf
adc
orl
mov
repnz
pop
hlt
jae
sbb
das
inc
into
cmp
int3
jnp
inc
and
pop
push
loope
int3
imul
out
pop
or
ds
jg
in
insl
fucomi
bound
mov
pop
out
aad
pop
and
cld
fildll
test
inc
jl
out
push
mov
sub
mov
cmpsb
data16
mov
fs
mov
inc
divl
mov
push
mov
dec
cmp
std
scas
jge
fs
sbb
jne
stc
and
outsl
out
es
pop
btr
adc
dec
pop
loope
push
fnstenv
cld
outsl
ret
shlb
xchg
shrl
inc
pop
loope
stos
pop
movsb
pop
dec
sub
hlt
lret
lret
cmp
js
sbbl
je
cld
out
push
andl
insb
popa
mov
sbb
daa
insl
or
mov
les
jl
int3
and
xor
js
mov
push
inc
clc
jne
or
pop
pop
jg
add
mov
xchg
fcompl
shlb
movsl
in
in
cmp
xchg
mov
adc
pop
adc
cmp
cmp
add
xchg
mov
sar
decl
popf
cmp
sub
das
or
add
push
push
in
fdiv
cmpps
push
rcrb
movb
in
js
dec
add
or
add
stc
push
jge
mov
mov
popa
xchg
sub
inc
loope
dec
movsl
cmp
fsubr
cld
int
jp
jmp
ja
lret
add
pop
dec
xchg
add
pop
jg
leave
and
loope
push
mov
test
pop
stos
cld
xchg
and
jmp
in
mov
push
dec
nop
mov
pop
stos
stc
jge
cmp
pop
push
je
test
bound
pop
repnz
add
in
dec
cmp
mov
mov
jns
adcb
sub
jae
insb
cmp
ss
cmp
push
sub
or
cmp
or
fwait
adc
in
scas
mov
rolb
or
repz
mov
add
icebp
sub
inc
xchg
push
sbb
out
xchg
and
int3
fs
movl
add
adc
pusha
adc
mov
dec
and
mov
aad
pop
jo
mov
je
push
or
mov
mov
pop
jbe
cmpsb
orb
and
mov
gs
pop
push
xchg
and
rorl
in
out
es
xchg
mov
pop
jecxz
jmp
lods
ss
push
stc
push
fbld
dec
bound
or
xorb
jg
sub
fidivl
jge
xor
ret
cld
pusha
jp
call
push
xorb
inc
mov
mov
xchg
push
add
inc
imul
das
inc
and
xor
jo
mov
icebp
jne
push
xor
mov
sub
stc
aas
sub
inc
lret
push
xlat
pop
shll
add
pop
insb
outsl
dec
fcompl
shll
sbb
cltd
aad
dec
mov
jmp
or
inc
sub
nop
dec
dec
xchg
outsl
push
adc
pop
sahf
repnz
xchg
jbe
inc
call
sub
sbb
dec
adc
out
dec
aam
mov
enter
or
mov
xchg
sub
push
stos
hlt
add
mov
shll
cmpsl
xlat
pop
mov
jb
adc
pop
fisubrs
cmpps
sub
jnp
or
cmp
xchg
cld
bswap
sub
pop
out
scas
push
std
inc
ret
lcall
cmpb
adcb
fistl
addl
aas
sub
dec
into
movsl
test
js
out
add
xor
movsb
repnz
sahf
jne
imul
sarl
and
stos
push
lea
pop
or
movsb
mov
mov
add
hlt
sti
cltd
ljmp
xor
stc
adc
mov
inc
or
mov
jp
clc
pop
out
aad
sub
mov
fdivrs
fldl2t
dec
pop
pop
jno
mov
sbb
mov
stos
push
rcll
mov
in
out
in
les
xor
inc
fnstenv
cs
pop
mov
fwait
mov
ds
cmp
mov
push
jp
test
push
call
loopne
inc
inc
mov
icebp
insl
insl
mov
les
loop
shl
mov
in
loop
ds
test
inc
cmp
cs
test
test
fcmovnu
jne
out
jne
out
cmp
cli
or
shlb
or
pop
pop
std
jne
movsb
das
int3
fists
bound
inc
ljmp
xor
fimuls
ss
int3
mov
into
push
ja
test
inc
push
sub
sbb
scas
xchg
push
mov
mov
lret
or
out
int
sarl
movsb
ss
xchg
xchg
jbe
xchg
andb
mov
and
sub
jp
cmpsl
sbb
pushf
sbb
inc
js
jne
add
adc
iret
inc
inc
sahf
test
stc
test
sub
adc
cs
mov
fmul
and
ds
test
mulb
cmp
in
shlb
movsl
cs
out
fcmovnb
mov
loopne
dec
icebp
mov
lahf
data16
push
rcl
lds
jg
sub
adc
ss
xor
add
inc
push
and
mov
mov
test
pushf
out
in
or
rclb
cmp
fldcw
dec
push
ss
jno
into
je
test
adc
or
sbb
mov
rorl
fs
out
jo
xor
pop
ljmp
cs
push
xor
xor
sbb
sbb
mov
shr
sti
lahf
ss
mov
lods
inc
ret
fnstenv
movsb
xchg
cmp
push
dec
xor
pop
sub
sbb
jns
test
pop
je
lods
sub
movsb
pushf
dec
inc
test
in
sub
cli
jg
mov
sbb
lahf
adc
inc
fisttpl
sub
icebp
dec
cs
aam
sub
cmp
outsl
cmpl
hlt
xlat
xchg
mov
rsm
cmp
lahf
insb
pop
in
sub
or
lds
mov
ljmp
out
mov
jo
cmp
mov
popf
mov
add
fs
test
lret
dec
lods
mov
aaa
rcl
inc
ror
push
inc
sbb
mov
pop
popf
and
imul
sub
fldcw
adc
xor
lea
or
jl
push
cwtl
pop
cltd
lods
ss
xchg
jns
fadd
jge
add
xor
and
push
rcr
fidivl
or
test
xchg
push
dec
aaa
or
imul
pop
and
fidivs
in
add
jae
test
sub
adc
gs
rcrl
cmp
add
xchg
mov
and
adc
sbb
out
push
aaa
rorb
mov
das
push
sub
stc
icebp
adc
rcl
lds
sbb
pop
mov
jp
xchg
mov
mov
iret
int
in
pop
arpl
sub
or
lahf
pop
add
ds
loope
dec
ret
inc
jae
fidivl
cmp
push
push
xor
addl
push
jns
fcmovu
or
push
movsb
ljmp
sub
out
iret
hlt
mov
scas
jb
sbb
mov
ljmp
shl
jnp
clc
xor
pop
ja
cmp
and
add
inc
pop
sbb
xchg
mov
mov
mov
push
sti
mov
xchg
in
xor
lahf
mov
roll
imul
jge
into
stos
sub
or
shrb
push
jae
push
xor
jb
jle
dec
xchg
dec
cmc
jl
popf
sub
outsl
fsts
insl
add
dec
dec
mov
hlt
dec
arpl
shrb
aam
mov
mov
adc
and
icebp
push
nopl
scas
jecxz
lahf
sub
lods
push
call
cmc
mov
push
or
dec
xchg
sub
fidivrs
std
inc
and
sbb
pop
shll
lret
sbb
popa
dec
aas
xor
jnp
mov
mov
and
dec
or
jne
shr
aaa
leave
jge
roll
sahf
cmc
mov
fwait
repnz
mov
mov
cmp
sub
test
xchg
push
mov
adc
daa
lret
mov
sti
inc
pop
cmp
in
dec
add
or
adc
xchg
test
xor
imul
test
mov
add
mov
mull
lahf
cmp
ret
xchg
sub
imul
roll
mov
xchg
sar
rorl
scas
sub
loope
mov
jbe
mov
aam
gs
dec
loop
or
fcmovb
lret
ja
stos
shl
sarb
push
sbb
sahf
fwait
lods
hlt
cmp
jb
sbb
jp
cmp
jns
cmp
sti
xor
pop
push
jg
loop
mov
pusha
ret
ds
dec
xor
shlb
leave
loopne
call
out
push
jnp
xor
adc
gs
fsubrp
mov
int3
frstor
loope
bound
pop
sbb
icebp
mov
fidivs
or
cmp
lcall
icebp
mov
lods
inc
leave
mov
stos
and
dec
fstl
into
aas
cmp
pusha
outsl
xchg
cmp
arpl
out
dec
sub
divb
mov
int3
dec
and
or
addr16
out
icebp
mov
push
int
shll
or
sbb
test
sbb
cmp
movsl
dec
and
jp
add
mov
insb
lods
xor
and
xchg
inc
and
jge
icebp
mov
mov
lds
xchg
sub
mov
jne
sub
es
test
dec
mov
pop
rcrb
in
pop
dec
in
shl
inc
frstor
pop
push
mov
jbe
jmp
inc
adc
sahf
jnp
lods
icebp
dec
dec
lcall
inc
fldl
cltd
test
mov
sbb
pop
stc
sub
xchg
das
iret
stos
dec
mov
mov
aas
pop
imul
pop
mov
mov
lock
and
cmpsl
cmp
imul
push
mov
stos
ftst
pop
out
cmpsl
aad
fnsave
sbb
cs
pop
aas
or
fwait
cmp
fiaddl
js
pusha
sbb
ror
dec
nop
out
push
mov
or
sbb
cmpsl
decb
sbb
aam
sub
push
xor
and
rclb
lods
add
fdivrs
sahf
subl
inc
and
inc
test
test
push
les
das
push
jns
daa
cmpsl
pop
pusha
fiaddl
push
mov
xor
push
dec
adc
push
icebp
cmpsb
pop
daa
stos
es
loopne
sub
in
lds
add
dec
hlt
aaa
dec
decb
or
sarb
push
mov
adc
inc
xor
xor
inc
ret
xchg
pop
std
or
pop
shrl
xor
jp
hlt
shrb
imull
nop
dec
nop
sub
fisubs
repnz
sub
mov
adc
pop
ss
pop
push
in
jge
cmp
fidivrl
push
cld
pop
or
ret
add
repnz
lea
cld
xchg
lods
push
dec
pop
gs
in
xchg
mov
dec
mov
push
pop
xchg
dec
outsb
jl
xor
fstpl
mov
mov
mov
ficomps
fstl
cmp
mov
xor
xchg
movsl
scas
jns
cmpsb
repnz
xchg
xchg
in
jl
out
and
pushf
stc
mov
outsb
outsl
cwtl
lea
mov
in
scas
xchg
rorb
jnp
lret
or
cld
fisubrl
dec
fimull
xchg
loop
movsl
xchg
sbb
inc
fwait
xor
inc
cmc
push
in
mov
mov
gs
dec
jecxz
les
pop
push
nop
adc
pop
shl
mov
and
pop
jmp
daa
bound
push
lods
popa
push
or
mov
cmc
xchg
cmp
test
arpl
ret
jl
ljmp
pushf
imul
pop
in
ret
or
sbb
jl,pt
cmp
orl
lret
aam
inc
mov
icebp
or
rcrl
jae
imulb
add
out
adc
push
jp
dec
in
dec
cmp
xor
scas
and
dec
mov
jbe
mov
push
cltd
xchg
cwtl
xor
jb
inc
dec
dec
jnp
and
in
cmp
xor
cmp
or
add
daa
ss
jmp
adc
lods
xlat
push
pop
pop
outsl
rcr
push
jle
push
cli
lods
ret
ret
fsubrl
add
sub
hlt
pusha
or
iret
cmp
stos
outsb
sti
addr16
jo
sub
in
pop
mov
mov
sbb
mov
push
int
sbb
push
mov
cmpsl
mov
pop
movsb
jbe
jb
insl
xchg
jmp
and
insl
cmp
inc
xor
jmp
push
leave
dec
and
jns
mov
sbb
movsl
cmp
mov
mov
sub
xor
mov
test
sbb
std
leave
rclb
int
insl
push
pop
xor
pop
mov
xchg
nop
mov
nop
mov
pop
loope
lock
daa
int
xor
ret
sbb
test
xchg
push
fwait
pop
cltd
mov
dec
movsl
xchg
jne
mov
xchg
adc
xchg
jg
movsl
cmp
sahf
call
in
or
call
loop
out
add
add
rcr
shrl
push
mov
aad
or
pop
jae
sub
add
mov
mov
fldl
push
int
mov
or
iret
movsb
stos
jmp
inc
cld
push
xchg
and
and
stos
cmp
xchg
cmpsl
xchg
kandnw
ret
loope
pop
sbb
cmc
push
repnz
iret
sbb
xchg
outsl
pop
stos
and
xlat
jge
arpl
rolb
mov
fdivs
add
dec
in
std
xor
jnp
mov
lds
call
jp
push
jecxz
js
or
mov
shrl
jno
jecxz
pop
push
sbb
add
rcrb
inc
push
mov
insl
xor
fistl
mov
jp
xor
addr16
or
stc
inc
lock
xor
fs
mov
push
hlt
roll
adc
mov
jge
pop
mov
xchg
adc
add
sbb
pop
mov
inc
mov
dec
cmp
pusha
dec
mov
push
jno
es
xor
pop
fwait
jmp
stos
xchg
outsl
xor
mov
dec
push
stc
jo
loope
or
xabort
mulps
mov
xchg
mov
add
arpl
sub
dec
xor
hlt
rorl
pop
add
stc
div
loope
push
popf
inc
add
and
adc
pop
pop
fstpt
leave
lret
mov
les
jl
jae
dec
cmp
lods
adc
add
xor
dec
jnp
divb
inc
loope
sti
lock
xor
xchg
pop
xor
call
sub
lea
jle
mov
xchg
daa
lcall
dec
cmp
cmpb
cmp
cmpsl
lret
bound
mov
subb
stos
pop
or
iret
ficompl
push
jnp
push
pop
das
xchg
sub
push
or
mov
test
xchg
pushl
lea
jae
sub
bound
dec
and
out
inc
sbb
pop
fildll
or
mov
mov
fists
mov
cli
inc
and
leave
or
push
jbe
xchg
es
ja
dec
cs
inc
call
cld
lret
bound
pop
pop
or
stos
mov
fistpll
dec
dec
lret
bound
sub
outsl
cwtl
repz
fwait
scas
notb
mov
sbb
jo
and
fildll
data16
push
clc
adc
mov
out
mov
sti
and
add
test
xor
int3
fwait
cld
mov
dec
mov
mov
ret
std
xchg
cmc
inc
mov
sbb
lret
aam
or
sub
fadds
or
sbbb
lret
fistps
cmpsl
mov
loope
addr16
shl
jp
pop
mov
bnd
add
jns
mov
movsb
inc
sub
fldenv
clc
sbb
std
xor
add
and
clc
sbb
inc
push
cmc
stc
mov
enter
dec
lds
push
jne
repnz
add
stos
xchg
mov
enter
push
pop
cli
adc
test
xor
jmp
stos
mov
arpl
xor
mov
and
out
das
jno
sub
mov
jae
xor
pop
mov
test
lret
mov
xchg
sub
shll
xchg
pop
jle
or
cmp
mov
pop
or
sarl
and
sub
cltd
das
fadd
iret
out
stc
mov
sub
sub
cltd
hlt
imul
adc
jno
mov
ret
sbb
xchg
cmpsl
out
in
into
inc
mov
scas
fidivrl
xchg
aaa
push
ret
cmpsl
inc
arpl
dec
fisttpl
mov
es
xchg
popa
dec
lcall
js
mov
scas
xchg
ret
dec
shrl
mov
outsb
jp
jg
ret
jg
push
jnp
rcrb
shl
je
cs
aad
push
add
xor
xchg
ljmp
imul
mov
xor
lods
sub
jne
cmp
cmc
jg
sub
sub
inc
mov
adc
shrl
mov
mov
lock
inc
clc
add
jle
btr
jmp
jb
lret
and
pop
sarb
sahf
mov
popf
push
sti
or
sub
out
pop
pop
lds
shrl
mov
add
xor
mov
in
cwtl
mov
jle
push
xor
cmp
push
out
pop
xchg
dec
mov
xrelease
mov
popf
pop
push
or
stos
sti
sub
jo
leave
xor
sub
mov
xchg
and
hlt
ds
int
ud2
push
hlt
addr16
adc
lret
pusha
inc
roll
inc
mov
insb
xchg
inc
std
xchg
inc
add
outsl
mulb
incb
jb
incb
test
pop
push
lods
aas
fidivs
inc
mov
faddl
push
push
int3
xchg
ljmp
out
pop
and
lret
pop
lcall
stos
jbe
ss
xchg
jbe
fs
jb
adc
mov
loopne
adc
pop
jge,pt
lahf
scas
lcall
nop
shl
into
push
mov
push
faddl
sub
arpl
mov
cli
shlb
mov
loop
cmp
fwait
mov
mov
js
add
jae
stos
cmp
sub
leave
pop
mov
inc
stos
dec
out
shll
lret
imul
popa
jne
rclb
sbbl
jp
and
ljmp
movsl
and
fldcw
mov
xor
inc
pop
xchg
cmp
aas
int3
ret
xor
aam
sbb
ss
cmpsl
push
stos
push
jne
fcmovne
and
bound
inc
and
pop
outsl
bound
pop
hlt
add
std
dec
cmpsl
std
mov
fldenv
test
pushf
enter
stos
add
scas
push
pop
mov
mov
push
outsl
inc
jno
jge
cmp
cld
adc
cmp
insb
dec
and
sbb
dec
ljmp
insb
or
loopne
mov
lret
xchg
cmp
fsubs
loope
push
cli
jge
xor
sahf
add
imul
imull
outsb
cmp
sbb
in
orl
dec
dec
cmp
movsl
sub
lahf
sbb
or
xchg
cli
cmp
push
pop
mov
clc
aam
into
enter
lea
gs
adc
pop
scas
scas
sbb
mov
mov
call
sahf
xor
inc
mov
pop
adc
dec
cmp
out
fidivs
sbb
int3
ja
push
cmc
add
jno
inc
push
sti
loop
mov
adc
pop
mov
pusha
ret
lret
lret
out
jp
mov
std
jg
mov
or
icebp
or
add
sbbb
mov
addl
popf
ds
add
and
add
add
lcall
cs
jno
scas
xchg
out
test
dec
cmp
test
push
sbb
sarl
add
aaa
mov
repz
xchg
sbb
jb
ret
mov
add
xchg
cld
out
cltd
clc
mov
or
cmp
mov
push
sub
mov
or
daa
push
aas
xchg
push
jl
pop
ljmp
mov
repz
adc
jne
sbb
push
push
cmp
dec
fwait
sub
xor
mov
mov
bsr
mov
jmp
in
rclb
adc
out
lods
lcall
aaa
pop
push
mov
icebp
out
stos
inc
adcl
in
fmulp
inc
cmp
popf
insl
gs
inc
push
add
lea
pop
pushf
xor
jg
lcall
lds
in
push
push
ds
add
inc
dec
cmp
jg
mov
fldenv
mov
add
adc
push
aas
mov
pusha
xor
sbb
xorl
xor
mov
cltd
popf
int
dec
lock
lods
inc
out
jle
leave
jo
sbb
int
pop
mov
stos
rcl
pop
je
js
jg
dec
pop
ss
mov
dec
xchg
stos
aas
pushf
aaa
fcmove
push
pop
call
xchg
or
loop
in
adc
cmp
push
gs
addr16
xchg
test
push
hlt
jbe
push
rcll
push
pop
ss
dec
shlb
test
shlb
push
in
sub
popa
add
xor
lahf
repz
mov
mov
dec
dec
into
fimull
sub
pop
sbb
pop
arpl
mov
adc
adc
dec
mov
call
dec
stos
in
stos
xchg
sbb
popa
test
xchg
int
cmp
mov
add
or
mov
movsl
inc
jecxz
jb
cli
bound
ret
and
js
jo
mov
xchg
das
sub
das
test
inc
std
xchg
jg
shl
adc
xchg
add
dec
mov
sti
lea
in
int
js
xor
sti
sarl
daa
cwtl
add
sti
mull
fmul
loopne
jno
loope
ss
mov
shr
not
out
cmc
lcall
es
or
cmpsl
xlat
add
in
or
imul
subb
sbb
mov
shll
loopne
roll
dec
dec
cmp
jns
adc
lcall
nop
insl
push
jle
mov
in
adc
data16
movsb
inc
sahf
addr16
mov
jmp
cmp
xlat
xor
jnp
pop
xlat
jb
add
push
xor
pop
pop
inc
decb
sbb
stc
leave
mov
xor
mov
mov
les
pop
xchg
xchg
mov
pop
test
test
lock
ret
mov
fnstcw
lahf
sub
pop
dec
fwait
sbb
inc
jno
push
out
jp
cli
mov
mov
sub
imull
mov
test
stc
sbb
push
push
insl
or
inc
bound
daa
shl
sbb
clc
mov
aaa
or
mov
pop
jmp
test
xchg
and
sbb
std
cs
outsb
cmpl
lret
sub
fsubrl
fcmovb
inc
jo
jecxz
mov
push
mov
jno
mov
mov
lcall
fisubrs
enter
gs
jg
ret
sub
or
cmpl
push
adc
mov
lcall
ljmp
cmp
dec
sar
insb
andb
std
xchg
push
and
xor
bound
test
push
push
mov
fs
cs
enter
push
cli
xchg
mov
fidivl
pop
out
jg
pop
mov
jp
mov
shll
add
jae
mov
and
jnp
sbb
fs
add
ja
and
xchg
hlt
mov
fidivl
add
add
push
cmpsl
ds
pop
or
shrl
mov
add
mov
jb
or
jmp
pop
sub
shr
pop
jae
pop
pop
sub
repz
mov
pop
call
push
sub
int
arpl
pop
jbe
cwtl
out
adc
adc
popf
add
ret
pop
jnp
pop
sbb
inc
inc
das
fsubrp
mov
or
popa
cli
rcll
jno
shll
mov
ds
or
mov
notb
mov
fmuls
jecxz
cmp
icebp
lock
xor
xor
aam
js
ret
xchg
ljmp
outsl
repz
dec
mov
adc
das
mov
adc
xor
xor
jb
icebp
test
stos
js
subb
xchg
cmp
push
xor
push
jb
inc
jns
inc
cmp
sub
push
das
push
xor
in
dec
pop
xchg
jge
cwtl
lcall
shrb
lret
sub
mov
mov
insl
and
fdivl
pop
xor
int
mov
cli
cltd
jecxz
sbb
stos
jbe
xchg
rcrb
lahf
sbb
ljmp
adc
sub
mov
outsl
mov
sbb
fldenv
ljmp
cmp
test
jo
test
subb
arpl
cmc
int
push
sbb
cmp
outsb
push
movsl
jnp
jo
adc
mov
ja
stc
je
push
push
sub
loop
cmp
stc
jns
push
mov
test
cmp
outsl
inc
push
outsl
dec
shlb
movsl
out
mov
sarb
or
cmpsb
mov
sbbb
xor
mov
adc
and
sti
mov
in
or
mov
sbb
dec
xor
mov
jno
jle
fstps
fmull
inc
pop
ss
aad
dec
rol
ss
adc
jnp
rcrl
push
xor
add
lret
ret
adc
outsb
addl
cmp
test
bnd
cmp
les
push
dec
rolb
fwait
pop
cwtl
dec
out
popf
add
push
fidivs
cmp
test
mov
fwait
sub
fsubr
pop
fwait
es
andl
into
js
xor
lock
rcr
pop
negl
mov
inc
or
leave
bound
data16
jnp
pop
inc
aaa
dec
andb
es
push
dec
xor
ja
gs
jge
paddq
dec
xchg
and
popf
sbb
fwait
mov
dec
mov
in
inc
idiv
pop
sbb
and
fcompl
subl
ss
les
loop
hlt
adc
popf
push
jmp
jnp
sbb
orl
push
jns
fsubr
inc
push
push
mov
mov
into
jb
lcall
in
arpl
inc
mov
loop
xor
mov
stc
xchg
popl
imul
xchg
or
fildl
mov
cmp
xor
fbld
clc
mov
inc
rcrb
mov
cmpsl
lods
jmp
jno
addr16
or
scas
sti
out
dec
fcoml
mov
inc
rcrl
push
push
push
out
cmp
add
sbb
mov
or
cmp
xchg
icebp
mov
push
xchg
xchg
fs
sbb
mov
lahf
push
jb
cmp
dec
stos
inc
pop
sbb
adc
adc
mov
cli
and
or
insl
outsb
loop
or
sub
outsb
or
adc
imul
sti
fwait
mov
xor
add
xor
inc
sbbl
push
mov
push
inc
xor
fdiv
pop
and
mov
fdivr
sub
int3
xor
loopne
lock
inc
adc
cmc
inc
dec
ss
test
mov
inc
imull
gs
bound
jmp
or
dec
shl
imul
mov
mov
enter
pop
lods
xchg
cmp
imul
dec
cmc
int3
add
jae
cs
outsl
insl
iret
stos
lds
dec
add
cltd
or
lcall
push
sbb
mov
sub
sti
movsb
repnz
js
vmwrite
addr16
inc
mov
nop
xor
ljmp
inc
fisttpll
and
fld
sar
jno
cwtl
mov
out
ljmp
sub
ret
and
hlt
cs
or
call
jmp
push
or
rorb
sbbb
daa
mov
dec
icebp
sbbb
filds
dec
loopne
pop
dec
imulb
xorl
fistps
ja
and
xor
push
outsl
fisubl
and
data16
icebp
mov
call
xlat
pop
repz
jp
aas
cmp
imul
arpl
add
add
popf
xor
bound
pop
mov
xorb
pop
insb
mov
xorl
dec
mov
jg
adc
pop
sub
dec
and
fsub
mov
mov
icebp
es
xchg
ss
push
xor
xchg
and
sbb
xchg
dec
sbb
push
xchg
mov
xchg
jle
or
fs
inc
inc
cs
jbe
stc
pop
xor
dec
sub
cmpb
inc
mov
sbbb
pop
repnz
testb
add
mov
xor
mov
stos
stc
lds
sub
pop
pop
cmp
rcrl
add
dec
lahf
lds
cmp
popf
xor
lods
lea
popa
das
inc
mov
ss
lea
in
or
icebp
loope
decb
xor
mov
lcall
sbb
gs
stos
xor
mov
sbb
or
fs
es
xor
inc
inc
push
test
adc
mov
sub
push
mov
test
cmp
cmpsb
repnz
dec
and
imul
stc
and
push
sbb
xchg
dec
jbe
mov
insl
or
test
sub
xchg
cmp
push
inc
out
sbb
pop
inc
jmp
filds
fdivs
cmpsb
loope
jg
enter
push
je
xchg
fidivs
jno
stos
mov
fs
fsubrs
jp
push
clc
fwait
inc
add
jmp
popa
repz
orl
mov
insb
cmp
cld
sub
lods
fdivrl
cmpsb
repnz
push
xor
cwtl
xorb
ret
jmp
sbb
sbb
cmpl
adc
pop
inc
sbb
les
sbb
ds
loop
lahf
push
xor
lods
cmp
jne
les
sti
xchg
dec
mov
in
dec
add
or
call
adc
es
enter
movsb
loop
mov
xor
es
dec
shlb
stos
sbb
imul
jo
add
ficoms
stos
dec
push
xchg
push
aam
sbbl
jae
cmp
ret
mov
outsb
jns
repnz
pop
insb
add
insb
mov
push
lock
mov
repnz
mov
inc
dec
fnstenv
pop
sbb
gs
jle
sbb
xchg
adc
and
adc
in
pop
shlb
and
loopne
dec
movsb
inc
shlb
ja
sbb
outsl
pop
jbe
sbb
pop
idivb
mov
push
sahf
hlt
popf
cmp
data16
mov
sbb
scas
jmp
pop
sbb
out
int3
ja
jg
in
out
xchg
fiaddl
and
mov
mov
lret
cmp
dec
aaa
cwtl
adc
push
inc
mov
pop
adc
pop
and
outsb
inc
push
pop
mov
fxtract
mov
jmp
int
in
int
xchg
or
pushf
loop
rcrl
loopne
das
pop
lahf
jp
dec
imul
rolb
nop
lret
mov
out
xor
fstpl
lret
bound
jbe
pop
pop
out
add
fists
enter
xchg
fldl2t
not
xchg
xor
scas
and
or
or
fistps
xchg
mov
push
mov
pop
iret
xchg
aam
les
aaa
shl
mov
fisttpll
dec
pop
adc
xchg
test
imul
jae
jecxz
push
mov
js
fsubrl
stos
aad
add
xor
xchg
scas
outsl
and
addr16
mov
ret
xlat
imulb
sarb
lea
sub
jno
xor
adc
jns
clc
fcomps
test
xor
inc
push
ds
mov
pop
pop
jecxz
in
testb
or
jno
sets
push
inc
imul
cmpsl
clc
cli
or
outsl
xchg
pop
nop
or
ljmp
mov
mov
or
jl
or
out
in
ret
nopl
daa
inc
aam
inc
lock
aas
lods
fsubp
pop
fdivrl
pop
mov
fcomps
rolb
cmp
mov
push
adc
jg
popf
stc
xor
xchg
jl
fbstp
cmpsb
fdivl
jns
lods
test
fisubrs
mulps
inc
xlat
jnp
add
cld
in
movsl
xchg
sbb
mov
cwtl
icebp
jbe
xchg
mov
mov
daa
gs
notb
or
int
addb
scas
les
jp
inc
lods
xchg
mov
andb
arpl
add
out
hlt
dec
repz
in
mov
push
xor
ret
test
pinsrw
rcrl
fsubl
mov
loope
push
push
xor
out
test
lds
sub
dec
pop
sub
addr16
mov
cli
and
in
or
je
leave
lds
jbe
movsl
xchg
ret
loope
cmp
or
sti
xchg
pop
mov
popf
arpl
xorl
cmpsb
addb
lea
test
outsl
lret
mov
xor
mov
ret
pop
popf
loop
mov
cmp
xchg
popf
cmpb
inc
inc
xor
popa
mov
aam
mov
ret
in
call
or
pop
fstps
scas
ja
std
pop
jb
xor
jo
adc
shll
nop
push
aaa
into
xchg
lods
sbb
sub
pop
fnstenv
in
ss
push
fld
arpl
pop
movsb
test
aad
insl
sbb
in
int
int3
stc
jns
inc
inc
shrb
shlb
inc
xlat
movsl
dec
jns
inc
jnp
or
cmp
pushf
or
jbe
dec
call
lcall
in
stos
cmp
inc
and
sbb
push
mov
cltd
div
cmp
test
cmp
pop
hlt
or
bnd
push
xchg
insb
pop
adc
call
and
shll
clc
jecxz
mov
leave
jge
push
mov
or
movsb
bnd
ret
push
and
xchg
push
jne
in
lret
sub
sub
dec
cmpsb
lret
rclb
mov
inc
xchg
add
fidivs
and
or
ret
lret
and
aam
dec
pop
les
nop
insb
aad
xchg
jg
pop
or
mov
jge
data16
dec
mov
and
mov
inc
clc
pop
sbbl
mov
clc
ds
pop
mov
fs
inc
pop
dec
aad
inc
push
lret
add
cmpsb
jmp
cmp
mov
or
mov
pop
cmp
mov
insb
aam
pop
sbb
dec
into
pop
jg
popa
push
lcall
push
iret
dec
stc
push
out
in
aas
fildl
xchg
add
sbb
add
sub
dec
pop
xchg
mov
movsb
fsubr
and
dec
mov
ret
jbe
subl
rcrl
jnp
movsb
jns
jns
sub
xorl
and
and
lods
dec
js
mov
inc
mov
cmp
fisttps
cmpsb
orb
rclb
xchg
jbe
int
pop
mov
and
nop
sbbb
mov
xchg
imul
cmp
and
xlat
push
call
mov
nop
xor
jmp
xor
loop
push
xor
mov
and
sbb
fs
repnz
mov
in
xchg
in
cmp
icebp
test
loope
pop
out
mov
imul
sub
mov
xchg
sub
out
pop
dec
or
sub
mov
push
ret
pop
in
sub
addl
jns
adc
add
push
lcall
sbb
pop
imul
mov
nop
outsl
jnp
ret
dec
inc
sub
cmp
sahf
outsb
sub
enter
dec
pop
daa
rep
ja
out
pushl
mov
insb
cmc
js
push
push
rcll
lea
push
mov
or
mov
jecxz
and
cmpb
dec
repz
int3
xchg
xlat
fwait
shl
dec
pmaxub
outsl
jge
popa
mov
outsb
add
dec
dec
outsb
cli
stos
shl
sbb
popa
hlt
outsb
add
mov
mov
jmp
push
push
add
xorps
rorb
jo
xor
jnp
inc
gs
adc
or
loope
inc
xor
aam
das
stos
popl
shufps
mov
add
scas
out
jae
or
sahf
das
sub
and
push
and
push
mov
pop
adc
xchg
push
fidivs
cmc
mov
fs
data16
adc
test
sbb
pop
mov
addr16
movsb
pop
out
aad
push
outsl
inc
pop
pop
add
rcrl
push
in
loopne
call
xor
je
xchg
xchg
sbb
popf
push
cmp
repnz
adc
adc
mov
mov
jns
dec
xor
inc
fdivp
xchg
mov
lret
aad
mov
lds
in
pop
out
mov
mov
push
jae
stos
clc
fnsave
push
dec
xor
inc
gs
push
aam
adcl
adc
in
decb
in
cmp
pop
ja
push
nop
mov
add
add
jmp
sub
mov
and
mov
loopne
cmpsb
sti
xchg
insb
lock
lea
mov
jbe
cltd
arpl
aaa
push
adc
sbb
or
xor
mov
mov
sahf
jne
sub
sbbl
inc
inc
jecxz
adc
adc
fbstp
xchg
or
jmp
or
mov
fnstsw
shrb
rclb
lea
fdivl
jno
aad
mov
sti
mov
cmp
nop
cmpsb
adc
push
jno
imul
mov
fwait
adc
xchg
icebp
inc
add
or
lds
out
inc
dec
cmc
mov
mov
xor
mov
push
notl
xchg
fsubp
pushf
orl
fisubrl
xchg
push
fcomps
and
test
dec
loopne
retw
lds
and
stos
mov
sub
inc
mov
push
mov
push
dec
jge
or
and
in
add
dec
adc
push
mov
bnd
sub
int3
daa
ljmp
push
inc
ret
hlt
push
inc
mov
inc
pushf
dec
cmp
outsl
daa
or
jae
pop
sub
cmp
pusha
je
punpckldq
popf
fildl
mov
sbb
xor
in
iret
sahf
xor
sbb
push
inc
fstpt
add
mov
arpl
dec
fdivrs
pop
lahf
mov
sahf
dec
imul
sub
cli
or
testb
ljmp
ljmp
arpl
in
test
pop
out
hlt
jl
xchg
lods
mov
fbstp
sar
xchg
ds
mov
fisttpll
cld
lcall
in
js
lods
inc
addl
ja
mov
sbb
push
sfence
repnz
stos
sub
push
fldenv
aad
das
cmp
cmpsl
mov
sbb
cmp
xchg
cmp
test
pop
xor
xchg
xor
sbb
sbb
and
mov
sbb
popf
ljmp
sbb
adc
leave
jns
cmpl
lods
out
pop
cmp
int3
mov
or
les
hlt
jnp
push
mov
lock
pushf
push
pop
xor
push
popf
stos
aad
cmpsb
ror
and
out
shrb
mov
lea
adc
push
xchg
daa
in
push
pop
jbe
js
testl
pop
xor
mov
cmp
lods
mov
gs
mov
imull
or
sub
jb
sbb
and
mov
mov
cmp
negb
test
test
and
and
movsl
inc
mov
push
push
call
mov
test
lahf
daa
lret
mov
jb
and
jp
sub
jl
mov
adc
mov
xor
std
setle
insb
and
subl
enter
hlt
inc
fisubrs
sbbl
cmp
shl
cs
inc
pop
mov
sbb
fildl
push
jmp
pop
icebp
sbb
xchg
sub
std
stc
nop
stos
mov
jge
int3
pop
sub
pop
sub
aam
xchg
mov
shlb
pop
ss
jo
cmp
lret
adc
push
icebp
xchg
add
cmpsb
jb
mov
or
stos
mov
mov
push
test
ss
outsl
into
nop
sahf
stos
mov
movsl
jne
mov
arpl
loop
bound
inc
add
cmc
or
cmp
js
outsb
mov
mov
in
mov
and
lret
aaa
pop
jmp
push
or
xchg
push
add
lahf
and
js
loop
call
jge
cmp
or
cmp
repz
loopne
xchg
sub
add
std
cwtl
push
rorl
pop
push
imul
inc
fimull
pop
add
add
aaa
jbe
cmp
div
mov
inc
mov
mov
imul
jne
mov
loope
imull
and
jns
xchg
fdivrl
mov
adc
cmp
aam
aas
outsl
jns
adc
int
add
gs
scas
mov
js
hlt
adc
push
and
adc
xchg
sub
stos
add
sub
sub
sub
addr16
into
lret
test
imul
imul
adc
jmp
int
sbb
call
xor
push
mov
mov
lret
mov
lods
sbb
push
sub
and
or
inc
push
mov
push
aas
loop
notl
in
add
rcl
jnp
pop
inc
mov
insl
stc
shll
sub
or
adc
mov
nop
int3
push
fs
mov
outsb
sbb
mov
dec
pop
fldcw
je
dec
cmp
mov
inc
mov
adc
push
sbb
dec
sub
xor
mov
ret
mov
add
les
xchg
popf
loope
jg
mov
push
fidivs
push
xchg
jmp
js
rol
pop
ret
jecxz
pushf
xchg
xchg
jbe
add
std
or
push
int
aad
daa
lahf
stos
xor
and
loope
movsl
cmp
ret
push
push
pop
or
sahf
jnp
adc
cmp
fildll
rclb
lretw
xor
loop
fnstcw
pushf
aam
outsb
adc
mov
xchg
ds
or
dec
aad
add
sub
das
js
jb
or
xchg
jne
push
repnz
cltd
xchg
ja
test
es
lea
pushf
iret
push
xlat
push
sbb
cwtl
mov
push
aam
pop
cmc
aaa
add
inc
mov
mov
pop
cmp
mov
shr
adc
mov
icebp
pop
rol
popf
loope
in
and
mov
sub
jno
movb
mov
push
in
sarl
mov
mov
jg
ja
nop
sbb
jecxz
xchg
cmp
rorl
xchg
stos
mov
shl
and
lods
divb
xlat
fdivrl
lea
xrelease
sub
and
sub
pop
push
xor
mov
hlt
and
cmpsb
sahf
inc
pusha
addb
push
cmpb
inc
sub
ret
out
ds
mov
or
int
sbb
jns
push
inc
lret
bound
stos
push
sbb
insl
add
nop
xor
xchg
inc
adc
test
negl
inc
rorl
jnp
xchg
je
dec
clc
out
add
pushf
and
adc
mov
pop
cmp
cwtl
mov
je
dec
push
popf
pop
out
in
aaa
ret
and
enter
movsb
test
jae
dec
or
mov
rcrb
fldcw
sub
fs
mov
pop
jge
add
jae
hlt
out
shr
or
jb
sbb
cli
daa
int
xor
lds
adc
insl
add
es
lahf
or
and
inc
idivb
xlat
and
mov
faddl
outsb
push
sbb
mov
mov
imul
subb
or
sub
inc
pusha
stc
jl
jle
ja
mov
test
in
adc
out
add
jae
mov
lahf
xchg
and
ret
leave
test
cmc
cmp
insl
sub
gs
cmp
fs
sbb
test
and
xchg
adc
mov
dec
jns
in
ja
xchg
jle
adc
cld
out
inc
stos
cld
shlb
dec
mov
and
fwait
sbb
mov
cmc
loope
jecxz
cmp
shrl
and
aas
sti
es
pop
push
mov
filds
inc
popf
addr16
inc
notb
mov
ljmp
jno
adc
ja
pop
sub
jnp
adc
dec
lods
mov
or
lods
inc
dec
sub
xor
xor
mov
dec
jb
out
push
or
push
fists
aaa
and
cli
cltd
jmp
mov
mov
and
pusha
scas
roll
lock
rorb
dec
add
xor
jecxz
lds
cli
jl
xor
cmc
xchg
cltd
mov
sub
mov
pop
jbe
mov
add
lahf
xor
rcrl
pop
mov
dec
inc
imul
pushf
push
fistl
jae
xor
adc
add
loope
and
dec
sub
xor
push
ret
push
mov
inc
mov
ljmp
push
lret
inc
pop
repz
or
pop
jnp
adc
cmpsb
ja
mov
cmpsl
and
shrl
hlt
addr16
push
adc
adc
push
cltd
jbe
dec
sub
jmp
jg
mov
jp
sub
jo
lret
push
lret
dec
push
pop
jno
push
jo
sbb
xchg
jmp
mov
xor
vpandn
mov
push
out
xchg
adc
out
shlb
mov
cmp
and
mov
dec
out
fs
aaa
fsts
in
dec
inc
pop
call
arpl
add
rolb
ds
add
mov
ja
and
mov
jge
je
in
dec
mov
jge
aam
lahf
pushf
pop
daa
clc
pop
jmp
lock
jl
push
mov
mov
sbb
cli
sub
aam
xchg
jns
fldenv
sub
cmp
shr
rcr
sbb
lock
and
movsl
mov
jbe
mov
inc
xor
std
push
rolb
loope
xlat
scas
std
aas
ret
in
mov
push
test
loopne
xor
hlt
sarl
rcrb
jmp
lea
lea
inc
push
jg
dec
out
test
or
out
scas
add
je
and
sbbb
pop
pop
push
mov
mov
and
mov
outsb
cwtl
imul
push
ja
stos
xchg
push
int
arpl
xor
cmp
push
sub
loopne
xor
inc
add
sbb
pop
shlb
in
bound
mov
jae
stos
sti
cmpb
or
lds
iret
sub
out
mov
mov
cmp
xchg
test
mov
sbb
push
fbld
in
es
lret
cmp
add
fcmovu
jbe
stos
jp
jne
std
jl
movsb
push
jb
subl
jne
mov
loop
add
subl
or
cmpsl
xchg
arpl
in
iret
mov
push
mov
imul
data16
mov
lock
shl
fxch
xor
in
daa
lcall
cmp
addb
and
inc
popa
fsubr
xchg
orl
fldcw
mov
into
mov
cmpsb
adc
jmp
popa
add
data16
int
out
jno
ja
aaa
sub
clc
data16
leave
dec
mov
add
jo
mov
movsl
mov
inc
hlt
adc
add
xchg
jmp
xor
or
cmpl
jg
push
pop
loop
orb
fldt
ljmp
push
or
mov
jnp
insb
inc
into
or
aam
pop
lock
mov
test
mov
fimuls
jne
add
rcl
popa
orl
call
hlt
adc
outsb
xchg
sub
cltd
lahf
ss
fadds
and
pop
push
jmp
cmp
dec
lcall
ret
icebp
aas
sbb
jns
sbb
mov
push
shll
out
sbb
subb
dec
mov
push
and
insl
popa
add
push
movsb
adc
cmp
leave
xlat
rcrb
outsl
cmpsl
pop
sub
insb
movsb
mov
aad
dec
dec
movsb
out
dec
push
std
adc
jp
jmp
inc
xor
xor
push
xor
insl
ja
dec
call
in
sbb
stc
int
xchg
push
lock
lea
push
and
stc
sub
leave
loopne
sbb
negl
pusha
pusha
mov
xlat
xchg
ljmp
lahf
mov
jno
xchg
mov
and
sti
fwait
push
loope
popf
and
and
jecxz
mov
fsubrs
mov
sub
loop
push
xchg
inc
xchg
mov
popf
lods
outsl
mov
push
aad
add
pop
jecxz
in
push
nop
sub
dec
pop
cli
aaa
fsubrl
outsl
pop
jnp
pop
xchg
sub
mov
mov
stc
sub
cli
pusha
add
sub
ss
scas
pop
dec
fcmovne
mov
call
push
push
movsb
add
sbb
rcr
repz
sbb
sbb
sub
repnz
andl
cld
mov
rclb
fnsave
adc
dec
hlt
sub
shll
test
fs
inc
adc
xlat
outsb
add
or
mov
inc
jno
push
xor
std
cmp
clc
cmp
inc
lahf
or
xchg
fistps
mov
pop
dec
pop
push
inc
sbb
jge
lock
cmpsl
fwait
cs
mov
and
dec
mov
ret
fldenv
test
movsb
inc
xchg
into
xor
int
rcll
jmp
cs
adc
aam
jne
insb
mov
cmp
cs
mov
fmull
mov
scas
mov
int
inc
mov
addr16
lods
mov
ds
add
aam
sbb
jp
les
or
sbb
loop
jbe
cmpsb
cmpsl
outsl
adcl
pusha
sbb
pusha
jge
outsl
je
lds
dec
pop
xor
xchg
push
mov
enter
adc
pop
pusha
mov
sub
mov
mov
sub
test
es
mov
push
shr
sarb
jb
inc
jno
movsl
and
rorb
clc
daa
inc
push
imul
add
sbb
xchg
mov
mov
jno
faddl
mov
dec
sbb
push
rcrl
and
inc
dec
jo
cltd
cmp
cmpsl
push
cli
jg
data16
fwait
stc
dec
jecxz
int3
loopne
int3
in
test
or
mov
popf
sahf
clc
adc
dec
add
movl
or
and
std
orl
pop
pushl
cmpsl
out
and
mov
push
sub
push
in
lea
jg
push
push
pop
and
xchg
jmp
mov
clc
ss
rclb
dec
dec
mov
mov
or
sub
data16
fs
sub
loop
and
rorb
sarb
mov
jge
ljmp
lea
sbb
mov
and
push
outsl
addr16
lods
inc
fiaddl
js
mov
xor
sub
popf
xor
mov
or
loope
or
sub
lret
mov
push
cwtl
lods
imul
addr16
ret
cmp
and
or
out
push
mulb
fs
xchg
inc
aas
push
cmp
add
es
stos
jns
xchg
lahf
or
int3
inc
sub
lods
xor
xchg
adc
lret
jecxz
fistps
ds
jmp
push
jns
xchg
pop
inc
test
cmp
lods
xchg
push
or
scas
and
mov
les
or
outsl
xchg
or
mov
mov
xor
aam
ds
lcall
or
out
jno
xchg
push
popf
lret
stos
fcmove
ficomps
jle
cmp
fs
pop
icebp
jbe,pn
jb
mov
inc
pop
lea
inc
pusha
pop
or
sbb
shlb
into
bound
mov
mov
push
insl
cmp
sbb
test
mov
or
es
and
addr16
test
or
push
mov
pop
jbe
xchg
inc
daa
stos
jno
rorl
cmp
outsb
lret
jb
jmp
push
sbb
or
cmp
sbb
cli
cmp
push
ja
scas
mov
dec
fcoms
hlt
and
roll
repz
in
shlb
ret
repz
sub
push
enter
test
imul
rcl
inc
sub
inc
mov
sar
xor
cmp
pop
inc
sbb
les
jne
loop
dec
cmp
fsubr
fnsetpm(287
push
outsb
jb
out
mov
or
repz
push
push
outsb
ja
outsb
jbe
xor
and
push
jmp
sbbb
jmp
or
test
sbb
sub
cltd
test
adc
sbb
nop
pop
out
jnp
idivb
shll
aas
mov
dec
stos
lods
xor
mov
fadd
aam
add
mov
pop
dec
mov
pusha
imul
jnp
pop
xor
lret
cmp
loopne
jo
mov
mov
pop
or
outsb
std
in
arpl
jle
call
push
push
leave
gs
cwtl
fwait
stos
rcrl
shl
int
jmp
and
enter
pusha
push
arpl
shll
pushf
xchg
mov
dec
fistl
je
arpl
cwtl
int
lret
ss
mov
lods
adc
pop
leave
les
shl
ljmp
and
jb
enter
inc
jle
xor
pop
std
arpl
mov
popa
incl
addl
jg
call
lock
cmp
jge
add
inc
xor
add
push
popa
or
cmpsl
cwtl
shll
enter
jge
test
push
int3
aas
xchg
fwait
sti
ret
jns
add
jmp
pop
push
push
repz
mov
sub
push
xor
jnp
adc
push
sub
xor
mov
mov
enter
neg
test
les
je
add
es
stos
pop
or
pop
mov
jg
xchg
outsl
add
mov
int3
lret
outsb
xor
js
xchg
sub
jl
out
fwait
xchg
sbbl
inc
ret
jle
ret
lods
pop
shl
add
mov
fstps
pop
mov
lods
lret
sbb
outsl
jbe
cmp
push
xlat
mov
push
icebp
in
loopne
jle
pop
fstl
out
inc
lods
aas
xor
jmp
sub
ficompl
in
xchg
mov
clc
inc
mov
subl
push
xlat
bound
push
jns
in
ljmp
movsl
pop
cmc
add
lock
push
inc
inc
ljmp
inc
outsb
jbe
mov
imul
xor
scas
sub
pop
rcll
jl
dec
lret
imull
std
push
fwait
sub
divb
sbb
dec
fsubrs
sub
jno
xlat
push
inc
lods
cmp
scas
jg
out
mov
mov
std
cmpl
mov
outsl
adcb
sbb
or
in
lods
mov
xor
call
test
mov
pop
inc
xchg
pop
adc
fdivrs
xchg
sub
mov
jnp
ja
push
cmc
mov
jnp
push
orb
in
adc
pop
mov
push
jg
adc
inc
aas
jle
cmpsb
ds
and
dec
rolb
cmp
adc
sub
jb
mov
or
fbstp
mov
push
mov
xchg
test
and
jnp
jecxz
mov
lahf
dec
enter
push
rcrb
mov
jg
jbe
lcall
pusha
testb
fildll
mov
popa
out
in
jp
inc
sbb
mov
and
pushf
jno
ret
adc
mov
and
dec
lds
sub
xor
add
dec
mov
mov
out
xor
lea
test
repnz
hlt
aas
xchg
nop
fwait
inc
dec
scas
in
je
adc
xchg
mov
jb
mov
imul
sbb
cmp
push
imul
mov
sahf
stos
fldl
ss
cld
ret
in
repz
cmp
mov
mulb
ljmp
outsb
mov
fsubrl
push
fidivrs
push
sbb
sbb
sub
cmpsl
jp
dec
push
lods
icebp
in
movsl
sbb
int3
jg
jecxz
aaa
adc
adc
jns
scas
pop
adc
frndint
mov
cs
ss
cmp
cmp
scas
lods
int3
fisubrs
mov
lret
std
mov
dec
jnp
int
dec
mov
xchg
vpgatherdq
sarb
dec
fs
shll
rcrl
js
mov
or
ret
mov
push
ret
insl
add
int3
cwtl
stos
lret
sti
cmc
push
gs
cltd
movb
mov
fimull
sahf
sub
invd
subl
sbbl
cmp
cmc
jle
or
dec
jnp
lahf
inc
aas
cltd
std
mov
repz
jg
lcall
mov
imul
in
inc
sub
or
in
xor
out
stos
mov
in
imul
sarb
fs
daa
and
in
push
dec
jmp
jmp
orl
mov
lods
adc
lcall
inc
pushf
shrl
and
xorb
and
inc
cli
ret
cmp
adcl
je
jnp
sub
prefetcht2
jge
jg
cltd
and
push
inc
jecxz
push
gs
out
sti
js
mov
xor
sub
mov
arpl
jns
out
cmpsl
into
mov
jle
outsb
test
mov
fcomip
pop
pop
out
insl
xchg
push
mov
xchg
arpl
sti
ret
add
lea
pusha
adc
movsl
dec
insl
cmpsb
cmp
mov
hlt
mov
dec
repz
movsl
lds
rcl
in
xchg
insl
cwtl
jnp
rcrb
outsl
lret
xor
das
add
jecxz
mov
stos
mov
pop
pop
inc
mov
cmp
add
or
leave
pushf
mov
push
out
mov
jb
pop
xchg
stos
fnstenv
sbb
mul
sub
mov
ffreep
push
adc
push
mov
negl
inc
je
jl
sbb
fucom
inc
ja
mov
daa
xchg
adc
and
inc
sbb
xor
test
sbb
pop
sub
stc
lahf
mov
xor
sub
fdivs
in
mov
cld
cmc
outsl
fdivs
sub
sbb
or
mov
xor
dec
sti
fwait
out
add
mov
mov
shlb
jbe
xor
pop
xchg
dec
jle
das
pop
cmp
sub
jmp
xchg
add
xor
and
into
xchg
push
xor
add
test
adc
mov
push
pop
sbb
iret
sahf
movsb
add
ljmp
in
pusha
out
std
inc
fldt
adc
repnz
fdivr
xchg
mov
xchg
sub
mov
es
dec
jecxz
lret
push
jne
dec
push
jl
add
roll
cmpsl
shll
jle
cmpsl
lds
test
fcmovnu
cld
subl
adc
inc
xchg
insl
cld
inc
and
shrl
mov
or
lock
mov
sar
mov
adc
add
pop
and
sub
jmp
pop
lcall
and
lcall
push
cs
ljmp
jp
cld
mov
and
ds
nop
xor
call
cmp
das
movsl
andl
dec
movsb
mov
or
inc
fldenv
or
leave
aam
arpl
inc
cld
je
mov
pop
adcb
mov
dec
stos
pusha
push
lcall
std
lcall
push
xor
push
adc
or
outsl
daa
xor
int
xor
xor
adc
pop
jo
insl
jecxz
mov
addl
xor
mov
js
in
jnp
cmp
mov
roll
sub
nop
jle
mov
adc
decb
shlb
shlb
jmp
mov
inc
fcmove
adc
mov
std
mov
int3
loopne
rolb
ret
and
sub
call
in
icebp
movsl
out
push
fwait
repnz
adc
scas
test
into
inc
fwait
and
call
lret
in
fmull
sub
stos
pop
out
in
xlat
outsb
xchg
arpl
insb
pop
ds
mov
add
call
or
bound
mov
jne
cli
pushf
ja
inc
insb
cltd
add
inc
ss
adc
dec
adc
lods
out
stos
inc
xchg
stos
fwait
mov
leave
je
push
add
adc
cmp
mov
dec
jg
cmc
mov
jge
inc
cmpb
test
dec
divl
and
mov
mov
xor
xor
dec
mov
mov
cltd
lcall
je
daa
inc
pop
push
push
imul
adc
out
dec
push
pop
fwait
sti
jns
push
es
push
fwait
int
test
std
fcmovbe
cltd
pusha
sub
inc
push
cmpsl
rorl
ss
xor
sbb
cmp
mov
adc
or
sbb
and
mov
push
outsb
ljmp
out
test
pop
sub
lcall
sarb
push
shll
dec
jge
add
into
jb
testb
cltd
mov
test
pop
fistpll
cmp
pop
xor
lods
movsb
and
ds
icebp
cmp
jae
imul
xor
fwait
push
xor
mov
insb
daa
leave
test
aas
push
pop
out
xor
scas
cmc
sub
push
vmovss
fstpt
je
mov
dec
push
dec
loope
inc
icebp
cwtl
pop
in
push
shrl
cltd
and
call
and
add
jne
add
fsubrp
push
pop
int
cmp
pop
out
cmp
or
fcomip
addr16
xchg
repnz
add
lcall
push
mov
data16
es
xchg
add
js
popf
fsubs
test
fs
dec
stos
aam
lea
add
repz
aam
mov
cwtl
scas
jo
loope
xchg
push
cmp
and
jnp
cwtl
xchg
das
addr16
adc
push
in
fiadds
cmc
mov
popf
and
pop
xchg
jle
pop
and
xchg
xchg
add
fsubrs
cltd
in
push
add
cmp
mov
loopne
dec
pop
cmp
mov
scas
or
push
add
scas
or
out
loope
loope
std
cmp
push
leave
dec
ljmp
rcr
pushf
lds
cmpsl
cmpsl
lods
pop
xorl
and
push
dec
call
sbb
mov
mov
jnp
sbb
lds
in
movsb
mov
ret
jge
cld
pusha
stc
jp
mov
shlb
mov
or
fnsave
fs
push
mov
test
imul
xor
aam
inc
jp
dec
pushf
ret
jle
call
in
imull
scas
sub
fists
cmp
sbb
sub
xlat
dec
add
xchg
xchg
cmpsb
pushf
daa
cmp
shl
sbbb
clc
cmpsb
add
es
rclb
pop
ljmp
cmc
mov
xchg
or
dec
lds
lret
popa
sti
jecxz
lcall
sbb
push
std
mov
das
mov
fisubrl
jl
enter
cmp
pop
add
xor
in
adc
cmp
out
cmpsl
xchg
pop
pop
out
dec
out
add
call
insl
mov
dec
cmp
test
cmpsb
inc
testb
out
push
inc
mov
arpl
cmpl
mov
mov
in
or
mov
dec
fisubl
lods
movsl
mov
bound
mov
jnp
mov
and
dec
ja
ss
pop
xor
push
sub
xchg
jns
add
xchg
cmp
add
nop
mov
mov
lea
rcll
icebp
push
jbe
sub
mov
add
repz
bsf
test
pop
das
jnp
inc
inc
test
xchg
add
mov
btr
and
mov
cs
sub
pop
repnz
cmp
sbb
testb
pop
cmpsl
ds
push
call
fucomi
lock
xchg
cld
loop
xor
xchg
and
sbb
add
movb
fimuls
or
movsl
jns
push
ljmp
sub
xchg
rcrb
shl
mov
das
addr16
xchg
daa
psubsb
sbb
sub
and
rcrl
inc
or
out
imull
movsb
adc
das
inc
mov
cli
push
xchg
pop
unpcklps
aad
sub
inc
add
mov
movsb
xchg
mov
sub
outsb
mov
push
jmp
cmpsl
mov
mov
xor
mov
mov
lods
jnp
mov
mov
dec
roll
leave
add
pop
das
ja
lcall
and
ja
test
sub
mov
push
stos
push
insb
mov
in
dec
push
pop
cmp
jo
jecxz
push
es
xchg
cmp
cmp
movsl
jo
sbbl
push
fdivrl
nop
stos
mov
jnp
test
add
xor
jmp
inc
jmp
xchg
out
mov
jo
into
mov
pusha
push
jl
jne
iret
loopne
inc
cmpsl
fimuls
xlat
outsb
mov
jb
jle
sub
push
lea
pusha
jmp
xor
cmp
subl
mov
js
inc
outsl
sub
xchg
or
arpl
sub
mov
insl
cmp
loop
loopne
sbb
nop
sbbb
xchg
sbb
jae
faddl
sub
leave
push
das
jg
rcrl
test
ret
jl
fdiv
add
outsb
ss
pusha
sbb
inc
jmp
mov
jle
cmp
loope
cltd
in
pusha
pop
and
pop
xor
aam
push
in
sub
popf
cmp
ror
bound
push
sti
xchg
js
xchg
adc
mov
xchg
scas
outsl
inc
pop
mov
mov
lea
mov
push
jmp
xchg
or
imul
aas
inc
das
cmp
xor
lods
jp
mov
xchg
add
cmp
test
add
cmp
pop
jne
mov
out
jle
std
addr16
add
sbb
push
fnstsw
pop
imul
inc
add
mov
sub
pop
out
inc
pop
pop
nop
insb
inc
aaa
js
lea
ret
push
lods
xor
push
int3
fimuls
dec
xlat
jns
xor
dec
push
sarl
fisubrl
test
fcompl
ja
cmc
cmpsb
aas
cmp
pop
jge
sbb
les
pop
inc
adc
rorl
push
pop
mulb
fsubrs
push
or
sbb
loope
in
pop
dec
and
jg
lret
pop
out
pop
or
pop
into
daa
xor
pop
pop
inc
push
inc
test
lock
out
xor
xchg
outsl
sub
in
mov
pop
mov
or
lock
cmpxchg
dec
outsb
add
outsb
and
sbb
pop
cltd
or
mov
push
in
add
loopne
pushf
jecxz
mov
inc
hlt
or
sbb
js
out
shll
xor
out
mov
dec
in
cmp
ret
stos
add
sub
pop
mov
ds
jnp
jmp
mov
bound
insb
jle
pop
cli
ss
inc
dec
dec
loop
lods
push
out
fidivrl
iret
xchg
push
repnz
pop
sub
loopne
inc
inc
pop
add
lret
stc
test
mov
rcrb
or
xor
mov
pop
lock
lcall
ja
popa
pop
fucom
adcb
ret
hlt
push
testl
out
insl
sti
or
dec
and
sarl
xor
sub
cmp
shrl
and
scas
push
lcall
push
imul
push
xor
xchg
xor
fcom
es
or
mov
mov
push
cmpsl
mov
decl
cltd
dec
mov
test
and
out
inc
lret
mov
xchg
sbb
mov
mov
cld
std
inc
or
inc
push
pushf
mov
test
push
fisubrl
jns
or
jae
daa
inc
leave
xchg
jo
push
fwait
dec
adc
lods
cmp
loope
lods
data16
pop
movsl
jnp
ljmp
pop
pop
lods
mov
add
cmp
cmc
sub
xor
dec
jnp
loopne
adc
int3
pusha
ss
mov
out
mov
lods
mov
jmp
push
lcall
cld
stos
cmpsl
js
jp
enter
inc
or
dec
sbb
test
xor
xchg
js
add
lods
and
lock
out
pop
adc
es
sbb
les
nop
mov
dec
iret
push
adc
data16
lds
arpl
pusha
dec
mov
es
mov
or
nop
push
pop
orl
xor
lods
mov
je
out
inc
mov
inc
and
xchg
jbe
xchg
adc
or
daa
lahf
mov
in
in
cs
mov
dec
add
pop
int3
jg
xorl
cmpsb
jecxz
add
movsb
leave
pop
mov
lret
lret
ljmp
and
mov
mov
or
dec
pop
out
xchg
invd
sbb
xor
pop
loop
out
xchg
ds
shl
add
xchg
xlat
sbb
aam
cmc
nop
mov
inc
adc
pop
out
or
repz
lods
fistpll
push
aad
iret
or
es
out
shrb
ret
pop
and
push
push
mov
pop
mov
hlt
nop
std
fdivrs
xchg
xor
pop
movsb
test
es
and
add
jmp
xchg
ds
inc
xlat
cmp
sub
in
sbb
das
stos
icebp
aad
push
xor
inc
sti
xchg
jbe
iret
or
jbe
adc
test
add
pop
fistpl
mov
mov
pusha
in
les
dec
sub
dec
mov
into
pop
inc
push
or
or
pop
push
push
les
cmp
xchg
lret
jo
or
adc
cmp
mov
jg
dec
dec
mov
mov
sub
mov
adc
pop
ret
jl
add
fsubrs
fimull
sub
sti
clc
mov
cmp
scas
inc
ljmp
shl
mov
pop
das
in
test
stos
mov
in
cmpsl
jne
ja
inc
out
pop
mov
fdivl
imul
iret
jmp
outsb
sub
push
push
ss
add
cmp
into
cmp
push
std
outsb
rcl
leave
or
sahf
lea
pop
jbe
adc
daa
adc
pop
cmp
push
dec
dec
pop
pop
rorl
sbb
ret
mov
sbb
push
pop
aaa
dec
dec
out
test
clc
mov
lods
aas
pop
cmp
or
jb
adc
mov
cwtl
mov
dec
mov
movsl
lcall
mov
lea
ds
jge
fnstcw
sahf
jae
pusha
sub
mov
bound
gs
sbb
fidivrs
mov
fcmovnbe
xchg
mov
inc
cmpsb
shlb
popa
int
adc
stos
stos
cmp
jae
aas
jbe
inc
sub
arpl
inc
testb
fnsave
call
cmp
mov
movsl
jge
xlat
adc
sbb
incb
and
mov
push
add
mov
leave
sub
enter
jno
add
jmp
or
iret
cmp
repnz
es
faddl
dec
and
cmpsl
imul
xor
mov
jne
ret
mov
aad
and
cmpsl
ljmp
bswap
int
dec
loopne
mov
pop
inc
shl
mov
jnp
fcoms
jmp
lock
jo
or
cmp
jecxz
mov
lcall
stos
xchg
pop
jge
pop
xorb
mov
pushf
fwait
xchg
mov
mov
frstor
sub
xor
out
sub
cs
les
push
movsb
jg
add
inc
mov
fiadds
lret
cmpsl
mov
xchg
push
fwait
cld
fnstcw
inc
ja
mov
in
xchg
fnstenv
nop
and
je
int
addr16
cs
push
sub
rcrl
xchg
sbb
fisubl
lods
push
adc
gs
ret
mov
fldenv
test
xchg
cmpb
out
bound
mov
add
sub
pop
mov
aas
mov
lahf
in
jne
or
jg
fnstsw
jae
sbb
cmp
ret
pop
rcr
mov
push
jae
cmp
std
repz
xor
cmpsl
dec
xor
sub
push
xchg
in
add
and
xor
mov
adc
into
in
fcoml
or
jmp
fsub
jp
sub
add
jns
and
pop
mov
enter
xor
jle
gs
bound
push
popf
shll
shl
inc
dec
pop
dec
loopne
mov
xchg
mov
jecxz
jnp
mov
jmp
in
inc
xlat
and
or
lea
out
xor
fwait
jbe
pushl
mov
add
push
cld
scas
dec
ljmp
jmp
or
mov
push
out
sub
ficoml
xchg
add
repnz
cmp
push
pop
inc
sti
jbe
repnz
sub
adc
and
cvttps2pi
pop
divb
push
mov
sbb
ret
call
or
fidivl
jnp
pop
in
insl
push
jge
aaa
lcall
mov
cwtl
mov
imul
clc
mov
fsubrp
in
push
repz
leave
mov
mov
adc
cmp
adc
push
lods
arpl
xor
inc
jle
mov
dec
movsl
movsl
shrb
push
dec
sub
imul
les
loop
dec
jl
pop
pop
pop
push
gs
mov
cmp
cmpsb
fcmovnb
mov
cmpsb
idiv
or
fisttpl
or
and
or
push
cmp
jbe
lock
mov
int3
cwtl
stc
popf
in
test
ret
pop
or
pop
adc
mov
adc
mov
push
lods
and
mov
gs
shll
shlb
fdivrs
pop
xor
insb
clc
push
mov
pop
shll
mov
sti
into
js
test
jmp
dec
push
add
dec
in
inc
int
test
jno
das
scas
ret
sub
daa
mul
fiadds
icebp
out
pop
xchg
add
loopne
aad
add
push
inc
movsb
mov
in
test
insb
jnp
xchg
xor
cmp
jge
scas
cs
push
aad
adc
enter
pop
in
adc
adc
fsubr
add
push
aam
xchg
mov
push
jo
xor
mov
sub
movsb
xchg
sbb
lahf
xchg
and
into
jae
push
sbbb
xor
fwait
es
imulb
std
shl
mov
push
jg
inc
fnsave
sbb
insb
ret
push
cmpb
iret
fs
addl
push
cmpsb
lret
cmpl
or
pop
push
out
jbe
into
sub
outsb
add
data16
cmp
fsubs
sub
push
xor
dec
test
nop
cwtl
jmp
in
xor
insb
cmpsl
pop
adc
addb
mov
popf
dec
inc
pop
out
push
js
or
fistpll
pop
call
dec
sub
sbb
xlat
dec
dec
mov
mov
rclb
aaa
stos
xchg
jl
cmpsb
mov
inc
fadd
pop
xor
pop
loop
test
dec
mov
and
out
enter
jae
xor
fnstsw
mov
movsl
fldcw
adc
test
shll
mov
shr
xchg
sub
add
int
and
push
jmp
push
decb
mov
rcl
call
mov
xchg
dec
cltd
sub
xchg
cmp
cmpsl
js
mov
fldpi
xchg
test
adc
cs
mov
adc
dec
lret
mov
jo
cmp
jnp
andb
push
fidivrs
fsubl
in
xchg
loop
pop
sbb
clc
lds
test
dec
lcall
inc
pop
dec
lea
pop
mov
or
cmp
ljmp
xchg
mov
inc
mov
pushf
jb
test
push
test
std
dec
rcrb
leave
je
mov
jbe
mov
in
xor
sbb
cmp
xlat
stos
ror
mov
cmp
dec
mov
or
mov
test
sub
ds
lret
clc
inc
jo
pop
loop
adcl
cmpl
aam
mov
dec
pop
inc
push
in
and
jb
insb
fisttps
dec
dec
movl
iret
dec
cmp
imul
testl
scas
or
sub
sub
bound
shr
ljmp
xchg
pushf
add
xchg
sbb
fisubrl
mov
bound
push
and
jnp
add
lock
push
iret
repz
pop
or
daa
enter
jne
iret
pop
add
mov
lock
aad
push
and
add
ror
js
dec
dec
mov
sahf
jecxz
inc
stos
lds
test
inc
jb
jno
inc
lods
mov
sbb
push
push
cmpsl
or
pop
cld
or
loopne
in
stos
aam
push
cltd
sahf
out
hlt
sarl
lods
add
ja
imul
gs
mov
lret
outsb
out
mov
mov
xchg
mov
dec
enter
sub
xchg
add
scas
hlt
pop
and
xchg
data16
mov
pop
cmpsl
ret
js
insb
rcll
mov
ret
rolb
aad
leave
mov
sahf
pop
int3
je,pn
fbstp
fdivr
jns
addl
movl
and
aad
jl
and
int3
dec
scas
inc
cmp
pop
aaa
orb
shrl
jb
fdivl
jp
fwait
mov
stc
xchg
fsts
mov
sbb
pop
cmp
add
push
xor
orb
sub
inc
sarl
pop
pushf
jg
sbb
cli
pushf
xlat
pop
div
aam
movl
daa
mov
addr16
push
ss
pop
mov
decb
push
push
ficoml
test
lods
and
cmp
push
fwait
test
es
and
mov
cld
sub
pop
imulb
nop
sbb
dec
mov
cmp
or
mov
subl
jnp
and
xor
pop
jp
aas
adc
xor
xchg
jmp
mov
icebp
ds
mov
cmp
ljmp
mov
sbb
ds
sbb
pop
pop
add
or
dec
cwtl
and
xchg
jmp
imulb
sarl
cvttps2pi
jnp
xor
stos
jb
xchg
jle
inc
mov
lods
daa
imul
or
cmpsl
push
test
fdivrs
push
sbb
push
ds
aaa
pop
shr
mov
gs
dec
loope
lahf
sbbl
jecxz
fsubrl
mov
push
jmp
call
inc
sbb
jns
repnz
fists
repnz
cs
out
cmp
xchg
adc
ds
cmc
mov
pop
movsb
arpl
test
out
add
xor
aam
mov
mov
js
and
xchg
sub
movsl
jle
aaa
sbb
dec
jo
addr16
scas
sarb
sub
inc
dec
iret
fnstcw
popf
add
cmp
imul
sub
pop
icebp
inc
sbb
js
pushf
cmp
and
mov
jne
ja
in
pop
adc
repz
xchg
dec
pop
xorb
repz
xchg
mov
lret
cmp
out
fisubrl
cmp
ret
dec
xchg
sub
adc
jge
push
test
xchg
shll
aaa
push
test
roll
sbb
stos
or
mov
das
cltd
aad
add
idivb
outsb
adc
jp
ret
xor
nop
inc
sub
icebp
xchg
sub
out
push
lahf
fisttpl
int3
stos
xchg
insb
push
push
call
dec
add
dec
xchg
jle
roll
push
and
pop
cmpsl
mov
xor
dec
icebp
out
pop
test
ds
lret
pop
repnz
and
out
insl
push
jno
xchg
mov
clc
mov
aad
movsb
cmpsb
in
mov
imul
sbb
and
mov
hlt
icebp
movd
ljmp
xchg
in
jp
mov
js
jg
pop
cmp
push
imul
mov
mov
sbb
cmp
xchg
inc
and
xor
add
jno
les
mov
mov
jbe
or
cmp
sbb
sbbl
xchg
leave
shlb
jmp
mov
jae
dec
dec
in
push
and
jno
lret
mov
add
mov
int
insl
fbstp
test
test
dec
mov
mov
imul
mov
ja
loopne
iret
add
push
nop
adc
add
xchg
cmp
ljmp
fiaddl
pop
testl
icebp
adc
inc
dec
lds
out
xor
mov
cmp
jnp
out
popf
lahf
cmp
lret
out
out
insb
adc
lods
jmp
bound
arpl
or
mov
inc
push
cmp
clc
mov
lods
push
int3
out
pop
lret
add
jle
or
mov
adcb
jb
fs
insl
into
mov
fs
sub
cmpxchg
popf
das
push
dec
fcompl
adc
mov
fdivrs
or
cwtl
mov
add
cld
lcall
ss
mov
std
ud2
sbb
mov
and
in
cli
xlat
stc
or
fmul
movsl
mov
movd
push
xchg
and
push
add
sbbb
in
or
and
movsb
addr16
sub
sbb
mov
ret
aad
or
cld
lret
into
pusha
insb
ret
mov
dec
dec
loope
xor
pushf
or
dec
sbb
daa
mov
and
sti
sbb
icebp
bound
into
jl
jbe
push
add
and
mov
out
inc
clc
ret
xor
test
sti
mov
lret
lds
dec
daa
arpl
jbe
mov
fwait
sbb
mov
mov
cmp
imul
rcrl
ds
dec
lcall
mov
insb
leave
leave
and
cmp
pop
leave
xchg
imul
into
pop
testl
inc
adc
cmp
mov
test
dec
ret
lret
mov
push
dec
or
andb
pop
jbe
test
scas
ret
imul
dec
xchg
insl
ljmp
addr16
jmp
nop
push
out
inc
ucomiss
aas
jbe
sbb
aaa
imul
sbb
mov
ret
out
mov
push
push
inc
and
pop
cld
adc
cmpsl
insl
jge
and
xlat
out
pop
xorl
movsb
loopne
pop
jb
adc
divb
lock
pop
jnp
inc
push
dec
xchg
aas
pop
ret
mov
inc
in
stos
rolb
in
jb
iret
sub
sub
lahf
inc
inc
fwait
lock
and
stc
cmpsb
sub
imul
xchg
jmp
add
pop
outsl
xchg
sbb
pop
leave
mov
into
pop
inc
or
pusha
sub
xlat
stos
cmc
or
mov
xrelease
shrl
and
dec
jp
test
jb
iret
push
inc
shrl
insb
jg
cmp
xchg
and
aas
imul
or
js
jne
in
mov
fs
jnp
xchg
mov
hlt
movsb
mov
hlt
adc
stc
roll
subl
loope
out
inc
sbb
inc
mov
test
or
jae
data16
sub
orl
mov
aam
xchg
pop
mov
aaa
ja
pop
test
adc
mov
popf
inc
sbb
jns
mov
dec
repz
mov
pop
in
lahf
mov
in
push
into
paddusb
push
test
jmp
outsl
jbe
push
outsb
inc
pop
pop
js
shrb
into
in
stos
mov
cmpsb
mov
mov
adc
mov
jl
mov
mov
push
mov
mov
add
cltd
cmp
mov
repnz
test
fildl
cld
push
xlat
jns
push
scas
scas
lcall
push
fs
mov
loopne
inc
ds
aaa
mov
popf
clc
mov
ficompl
out
mov
cld
push
sbb
mov
mov
pop
faddl
sub
mov
aas
data16
cmpsb
mov
mov
in
cmp
enterw
into
dec
imul
inc
jmp
loope
fnclex
data16
leave
pop
jbe
mull
stc
mov
ljmp
jae
mov
fadds
lret
mov
jge
inc
pop
push
jns
inc
or
add
push
out
stos
xchg
cld
push
movl
mov
out
shr
mov
pop
stc
mov
push
pop
das
mov
xchg
xchg
jle
js
mov
mov
repz
ss
out
push
enter
mov
leave
out
ja
pop
popa
testl
out
rol
cmpsb
les
add
out
out
fwait
pop
jge
xchg
jb
nop
pop
je
scas
mov
aaa
imul
ja
popf
jno
pusha
xor
int3
push
jle
cmp
cmp
jge
leave
pop
outsl
mov
fistps
cmp
lds
daa
mov
add
stos
cmp
pop
in
inc
and
push
shrb
adc
bound
jge
and
cwtl
or
cltd
xor
bswap
leave
repz
jmp
jae
inc
xor
mov
adcl
push
jns
mov
mov
cmpsl
popa
in
and
jmp
sbb
or
sub
or
mov
sbbb
adc
pop
mov
add
jge
das
push
fdivrl
les
in
stos
shll
test
add
adcb
in
push
xchg
pop
idivl
adc
subl
imul
shrl
stc
nop
pop
hlt
fdivl
pop
pop
hlt
inc
xchg
popf
out
mov
lret
in
out
mov
je
dec
cmp
jnp
sub
lret
and
pop
std
xchg
dec
hlt
adc
jbe
and
icebp
loope
inc
push
pop
out
in
lods
loopne
insl
rorb
imul
mov
jle
push
bound
stos
lcall
and
cmp
dec
jle
movsl
mov
fisubrs
adc
xchg
and
mov
std
xchg
iret
test
and
cmpsb
pop
out
inc
add
aam
pop
fucomip
test
subl
js
add
mov
cmc
adc
push
mov
ds
mov
js
inc
jo
dec
add
xorl
push
push
inc
inc
xor
inc
pusha
add
inc
adc
cmc
xchg
inc
xchg
fdiv
sti
mov
mov
sbb
imul
in
mov
push
pop
subb
stc
add
xchg
lret
push
or
cmp
in
jne
dec
inc
mov
mov
mov
xor
adc
popa
fisubl
call
adc
cmp
lock
inc
and
les
adc
mov
add
sub
push
mov
mov
mov
inc
jne
mov
cltd
iret
inc
fisubrl
imul
pop
outsl
test
stos
cli
nop
test
push
js
mov
loop
leave
ror
xor
add
jmp
orb
cmp
pop
pushf
imul
lahf
jne
jge
test
push
xchg
push
mov
rcrl
xor
insl
mov
sahf
ljmp
mov
mov
call
outsl
outsl
push
fisubl
jmp
or
je
mov
int
js
das
fcmove
adc
xchg
mov
inc
jmp
jecxz
jo
jg
movsl
inc
mov
xchg
jge
dec
shrb
dec
adc
push
out
and
aad
cmp
test
rorb
subb
dec
cmpsl
popa
movsb
rclb
lret
mov
aad
in
jl
les
adc
xlat
mov
mov
push
pop
shrl
mov
and
in
inc
xchg
mov
xchg
lods
mov
xor
sub
and
fptan
outsl
jnp
sti
enter
les
sub
push
push
add
mov
popf
icebp
mov
in
jae
rorb
mov
cmpsb
les
or
adc
inc
fdivs
imul
xchg
movsl
ret
xlat
jle
call
adc
fs
stc
outsl
xchg
cmpsl
ret
xor
sbb
cltd
adc
inc
mov
sbb
loopne
or
dec
cs
sub
xchg
mov
dec
mov
mul
cwtl
das
mov
call
xchg
jb
cld
movsb
push
into
test
adc
and
mov
mov
cmp
ret
push
divb
mov
cmp
lods
pop
loop
cs
inc
pusha
or
test
pusha
cmpsb
test
loop
adc
push
fadd
test
rcrl
sub
jp
fimull
cmp
add
xchg
and
xchg
jle
fs
jns
outsb
sub
sub
arpl
cli
outsl
shlb
and
mov
xor
outsb
dec
subb
push
push
stc
andl
jnp
cmp
pop
outsl
sub
imul
pop
popf
stc
fdivs
in
arpl
scas
in
sahf
mov
adcl
adc
mov
fs
fsts
xlat
cmpsl
orb
aas
add
jnp
xchg
cli
inc
adc
push
and
shlb
ss
dec
jno
pop
scas
add
incl
pop
jge
pop
pop
jp
sbb
movsl
dec
or
shll
rcrb
fistpl
push
int3
in
cmp
adcb
sub
sahf
icebp
sub
cs
sub
mulps
inc
std
rcl
inc
lock
mov
add
sub
lock
sbb
outsb
cmp
pop
lahf
pusha
pmuludq
cmp
in
outsl
test
inc
fdivrp
jl
pop
mov
push
in
cmp
push
mov
pop
mov
mov
ja
stos
test
aaa
js
enter
push
add
inc
lret
mov
jecxz
add
leave
or
bound
mov
xor
pop
xchg
cs
jbe
scas
scas
test
xor
loopne
inc
xchg
push
mov
lahf
outsb
mov
or
sar
insb
mov
mov
cli
call
dec
dec
sbb
lods
mov
and
sbb
ret
mov
divb
xlat
adc
cmp
popa
clc
insb
pusha
dec
loop
jg
pusha
shrl
add
loop
lea
add
sbbb
addr16
cmp
outsb
mov
fcmove
les
xchg
insl
outsl
push
sahf
sbb
es
enter
aaa
mov
cmp
sbb
loope
rcl
cmp
pop
adc
mov
cmp
mov
adc
xlat
or
enter
sar
and
or
ljmp
dec
and
push
adc
ss
jb
cli
mov
aaa
jl
push
push
cmp
data16
fdivrp
dec
and
xor
clc
mov
call
insl
addl
mov
xchg
dec
mov
pushf
and
push
or
xor
xor
add
enter
or
ja
xchg
mov
cli
stos
sbb
or
movsl
jnp
pop
mov
sbb
inc
lock
xorl
mov
inc
pmaxsw
sub
aas
in
imul
jmp
sub
pushf
imul
jl
mov
xchg
ss
dec
add
fucom
addr16
pop
mov
cmc
sti
sub
add
push
mov
jmp
push
adc
and
and
push
sub
enter
sbb
jnp
out
out
add
les
insl
addl
cmp
xchg
or
pop
xor
adc
lea
jbe
out
lods
mov
mov
pushf
daa
jne
cwtl
bound
xor
sbb
add
xor
and
out
mov
je
ds
gs
fs
pop
daa
jo
fiadds
dec
fbstp
jmp
fstpt
iret
mov
or
pop
imul
nop
daa
mov
push
ljmp
sti
ret
push
pop
mov
sub
jp
push
pop
ja
xlat
repz
cwtl
fbstp
in
cld
pop
pusha
or
xchg
dec
loope
addl
jle
cmpsl
cmp
inc
mov
negb
push
pop
mov
or
scas
test
das
push
aaa
cmpsl
rorl
inc
inc
repz
pop
out
ret
jmp
jmp
test
scas
xchg
adc
cmp
add
stos
imul
fistpll
repz
cmpsl
xchg
fisttpll
mov
mov
jb
dec
int
cmc
adc
or
xorb
jg
xchg
icebp
xor
sub
push
pop
cmc
ret
fistps
in
cmpsl
aam
ds
push
cmp
jge
mov
lds
pop
roll
mov
xchg
mov
out
mov
loop
aas
jno
and
clc
cld
cltd
jo
lret
sbb
arpl
ja
je
and
mov
jmp
movsl
test
mov
and
ds
fdivs
mov
loope
les
dec
out
cli
xchg
ja
push
out
xor
inc
mov
cli
aas
adc
dec
add
icebp
imul
cmp
mov
es
pop
fmul
sbb
sub
add
mov
mov
idivl
ljmp
pushl
mov
and
push
xchg
lock
cli
subb
mov
or
lahf
or
cmc
push
mov
sub
xor
push
pop
cmc
mov
jl
pop
push
or
test
shrl
out
into
leave
arpl
jae
add
lea
adcb
pusha
andb
push
add
cmp
lods
jge
push
insb
mov
mov
mov
stos
adc
dec
cmp
shlb
mov
addr16
jmp
adc
pop
repnz
fisttpl
cmpsl
testb
jecxz
sbb
push
leave
imul
sbb
adc
jns
mov
dec
fadd
push
or
fnsave
fstl
or
fwait
jg
mov
les
call
and
int
aaa
pop
imul
sub
stos
gs
out
divl
ficomps
xor
pop
jmp
out
pop
or
insb
cmp
push
bound
scas
pop
inc
xlat
mov
roll
pop
cmc
push
and
mov
xor
lret
cld
add
in
clc
in
int
andnps
mov
jns
jns
push
arpl
sub
lock
mov
in
fsubrs
fdiv
cs
push
mov
shll
pop
popf
jae
movsb
mov
or
add
lret
mov
fmull
test
imull
dec
push
pop
jae
add
subb
arpl
je
test
push
mov
mov
lods
test
stc
imul
xchg
pop
push
push
and
cmc
sbbl
push
pop
icebp
aas
lea
mov
arpl
test
jne,pn
lret
shl
lea
adc
stos
movsl
gs
hlt
push
and
xor
push
pop
xor
cmp
sub
popf
inc
lock
cli
scas
test
xor
rcr
dec
movsl
jne
dec
and
mov
mov
push
inc
popa
test
add
mov
adc
repz
xor
pop
cmp
les
out
ja
fsubl
push
imul
cmp
sbb
adc
pop
mov
or
mov
stc
adc
nop
pushf
fwait
mov
xor
jno
add
cld
repz
pushf
stc
mov
mov
mov
orb
out
mov
mov
dec
and
or
or
es
xchg
sub
dec
mov
dec
flds
pop
push
jno
mov
fwait
jg
pop
sbb
push
jae
in
pop
adc
xchg
add
ja
scas
test
adc
mov
pop
or
inc
bound
sarl
xchg
addr16
push
push
lcall
and
pop
mov
out
cmp
add
arpl
ljmp
lret
and
xlat
dec
adc
sbb
xchg
movsb
push
fwait
outsl
fidivs
jae
iret
jl
orb
xchg
nop
and
adc
inc
addl
xor
fisttps
sub
fbstp
nop
sbb
xor
repnz
les
push
sahf
movsb
shlb
and
lds
mov
shl
add
imul
xchg
jbe
icebp
enter
test
ret
sbb
insl
mov
sbb
stos
in
scas
inc
imul
mov
push
subl
cltd
ret
inc
imul
fstp
lret
cli
pushf
sti
and
xor
mov
jecxz
arpl
mov
or
scas
aaa
mov
xor
or
cmp
flds
std
das
sbb
mov
jge
in
xchg
and
mov
cmp
pop
in
lea
push
mov
fidivs
and
movsb
shlb
pop
mov
repz
pop
xchg
gs
cmp
sub
test
sub
pop
sbb
xor
unpcklps
rcll
imul
xchg
inc
xor
adc
icebp
mov
fidivrl
in
adc
mov
or
loopne
icebp
fsubs
add
ficomps
cmpsb
leave
jmp
mov
jl
and
jo
lods
push
jbe
cmp
xchg
outsl
roll
call
test
cmc
mov
push
sub
pop
add
shrl
inc
pop
scas
mov
inc
fnstcw
pop
pusha
lds
pushf
push
xlat
repz
pop
addr16
jecxz
inc
insl
mov
or
aaa
lock
push
in
sahf
jecxz
int
mov
test
int
xchg
pop
cmp
mov
pop
xor
popa
outsl
test
lret
lds
sarb
cmc
mov
pop
lcall
jb
or
nop
mov
stos
or
xor
dec
mov
addr16
in
dec
pushf
fsubr
sbb
dec
gs
xchg
jmp
push
ljmp
push
dec
push
mov
lds
sti
shrb
mov
mov
mov
fs
and
sbb
call
xor
stos
inc
dec
mov
xlat
sub
fldenv
pop
inc
outsl
iret
sbb
ja
aam
mov
pop
repz
mov
cmpsb
loop
inc
jnp
rorl
stc
mov
flds
js
jg
cltd
imul
pop
lcall
adc
and
pop
lods
jg
std
mov
adc
mov
push
adcb
jge
xor
push
or
or
inc
arpl
imul
out
push
mov
stos
mov
xchg
pop
jo
lock
int
xchg
push
fcmovb
fbstp
sti
pop
fnstenv
loopne
push
xorl
sahf
xor
add
pop
xchg
into
add
pop
xor
and
and
push
jbe
jg
fnstenv
lods
pusha
std
test
cmp
ret
test
jnp
pop
jbe
add
ja
push
out
sbb
movsb
jno
hlt
insb
push
mov
movsb
mov
pushf
or
psrlw
xchg
out
stc
aas
das
adc
sbb
cmp
cmc
pop
cs
in
inc
dec
rorl
inc
ret
das
fs
lock
shll
pusha
insb
call
cmp
sti
push
popf
pop
adc
jns
std
repz
test
lret
jp
and
daa
pushf
fs
int
sbb
rcrl
jb
shll
push
adc
imul
dec
rcll
mov
dec
mov
adc
cmpsb
dec
cmpsl
les
xor
sahf
push
fwait
mov
iret
dec
pop
bound
shl
lahf
cmp
xchg
fdivr
add
adc
lahf
pusha
pop
and
out
daa
jns
fstl
or
stos
popl
fstpt
enter
add
fildl
xor
and
test
in
gs
addr16
push
cs
nop
dec
mov
sub
adc
rolb
xchg
es
test
xor
mov
and
fnstsw
jbe
fisubl
pop
fs
nop
gs
shll
mov
adc
push
clc
lock
cmp
or
test
cld
and
cs
loopne
enter
loope
push
adc
int
cltd
test
or
ja
inc
jo
shrl
inc
popa
and
out
lea
fists
jns
pop
xchg
sbb
adc
xor
push
stos
push
aad
pushf
fdivp
cmp
js
push
xchg
jae
pop
xchg
pop
into
inc
add
jmp
arpl
add
insl
jg
push
sub
aad
jb
add
stc
icebp
push
ret
decl
cmc
jb
xchg
and
aad
xor
push
out
pushf
jae
loope
cmp
daa
mov
fwait
jp
pop
push
jl
xorb
movsb
int
xchg
inc
rorb
out
and
push
pop
pop
out
and
mov
fisttpl
xor
rorl
adc
dec
pop
mov
dec
xchg
pop
pop
pop
outsb
mov
repnz
cmpsl
inc
or
sbbl
leave
ror
pop
mov
in
les
mov
sbb
ret
push
cwtl
and
or
and
jp
lret
stos
hlt
jns
testb
data16
pusha
imul
mov
mov
or
in
sub
mov
pop
xchg
push
dec
lcall
jge
xchg
mov
dec
rcrl
and
je
leave
pop
mov
sbb
mov
jl
ficomps
popf
test
xchg
xor
vaddsd
stos
mov
ret
ss
jns
inc
push
insl
mov
mov
xor
scas
adcb
and
mov
cmp
mov
pop
insb
xchg
bound
push
lahf
sub
data16
mov
xchg
and
mov
or
inc
out
mov
push
mov
ret
or
into
insl
sbb
lret
jge
in
mov
sbb
cmp
inc
dec
push
push
popf
xor
je
mov
arpl
hlt
aas
lds
and
arpl
js
fnsave
sbb
mov
push
gs
lods
xchg
sub
inc
or
out
xorb
inc
jnp
jbe
jmp
sbb
dec
std
pop
jge
daa
xor
gs
pop
xor
scas
jb
or
push
inc
push
pop
outsb
add
cmpsb
inc
arpl
jno
sub
outsb
jl
pop
or
cli
nop
call
adc
sbb
rolb
loop
imul
out
xrelease
rorl
cmpsl
xor
nop
stos
rorb
loope
mov
pop
dec
hlt
sub
jnp
shlb
imul
mov
mov
mov
add
inc
addr16
xchg
mov
sbb
xchg
cmpl
lahf
out
mov
lea
test
je
js
in
jl
mov
add
gs
bound
cmp
push
lret
fwait
and
cmpsb
sub
jecxz
test
mov
aam
adc
mov
and
std
ds
and
pop
cmp
adc
cmp
xchg
add
add
add
fidivrs
adc
mov
and
fidivl
mov
mov
xchg
cmc
xchg
jmp
pop
mov
and
sbb
insb
mov
in
cltd
xor
sbb
add
test
xor
fcomip
dec
xchg
and
ja
in
pop
test
adc
into
pop
lret
mov
lcall
sbb
rorl
cmp
xchg
dec
jmp
jae
daa
clc
pop
cltd
sub
sub
mov
addl
mov
mov
fcmove
mov
daa
outsl
push
jb
add
loopne
lods
xlat
outsb
test
inc
cmp
out
icebp
pop
xlat
fcmovnu
daa
adc
pop
xor
iret
and
jge
ret
ffree
sahf
imul
pop
xlat
sub
in
negl
xchg
out
std
inc
sbbb
adc
std
lcall
repnz
xor
mov
sbb
jae
movsb
test
adc
inc
fdivr
xor
test
pop
push
nop
xor
mov
rclb
cmp
and
sbb
les
loope
cwtl
clc
repz
movsb
cmp
inc
int3
sahf
pop
mov
fadds
arpl
js
mov
pop
jbe
nop
and
test
mov
jbe
insb
jg
jb
cltd
cwtl
or
push
jmp
lea
or
rcll
fcmovnbe
icebp
add
repz
cmp
push
mov
lret
lock
mov
loope
in
dec
mov
dec
cmc
in
imul
dec
cmpsl
jle
fisubl
out
cld
jnp
adc
mov
sbb
xor
out
lock
fsubl
jo
jmp
sub
rcrb
or
and
outsb
subb
fwait
push
mov
sti
pop
jns
fldenv
mov
sub
data16
xchg
je
enter
adc
out
mov
adc
cmp
cmp
pop
pop
jb
inc
pop
sar
fwait
cmp
or
loopne
out
pop
inc
or
lret
mov
inc
xlat
push
or
cmpsb
sbb
mov
xchg
mov
mov
jg
enter
aaa
add
jle
stos
fucomp
imul
and
call
cmpsl
xchg
int3
out
add
int
sub
sub
push
jnp
jns
aaa
into
dec
lcall
pop
outsl
adc
jno
rcl
jp
clc
and
inc
jne
cmc
push
loop
or
xchg
lcall
or
sub
xchg
ja
mov
sub
xchg
sbb
or
inc
push
fistpl
repz
push
stos
cmp
loop
aam
push
adc
imul
and
sub
or
xchg
loopne
test
xor
inc
imul
lods
mov
sbb
jno
imul
adc
xor
cmpsb
cmp
jle
cmp
sub
mov
mov
int3
mov
data16
aaa
sub
pop
lret
loopne
mov
pushf
das
cmp
inc
shll
out
test
sbb
jo
push
mov
jbe
aad
add
or
xchg
scas
scas
mov
aam
cmpsb
insl
test
sub
jae
div
push
sub
in
pusha
and
outsl
add
cmpsb
xor
sub
pop
jle
ret
fucomip
out
adc
jl
push
adc
sahf
mov
jmp
mull
es
in
xor
sub
or
lcall
dec
int
jns
rcl
ret
lcall
cmpsb
mov
mov
xchg
cmp
or
imul
cmp
xchg
dec
gs
mov
mov
cmp
pop
sbb
or
shlb
jge
mov
loopne
pop
adc
and
pushf
add
or
push
clc
fbld
lods
inc
inc
add
xchg
push
sbb
push
call
pusha
subb
push
stc
mov
jnp
mov
sbbb
and
mov
inc
call
scas
lods
push
xchg
add
mov
imul
loopne
mov
sbb
aam
dec
jp
mov
pop
movups
mov
in
idivl
xchg
mov
inc
jmp
cmp
sarb
jp
mov
outsb
aaa
sbb
jae
test
js
mov
mov
cli
or
andl
out
scas
dec
dec
dec
shll
pop
fdivrs
stc
mov
fbld
add
xor
cmp
mov
sub
push
push
jmp
pop
icebp
ljmp
mov
mov
add
fildl
das
sarl
sbb
pop
mov
inc
mov
cmpsb
jge
rclb
add
pop
shrl
push
in
fbld
mov
out
lea
dec
add
adc
sti
add
sub
inc
pop
ds
cmp
in
les
es
lret
sub
sub
lods
sbb
icebp
push
mov
sbb
in
aad
cmp
mov
in
push
pop
pop
into
dec
std
addl
jl
push
lods
push
adc
push
pop
dec
cmp
inc
pop
sarl
and
clc
pop
push
popf
mov
push
lahf
or
and
mov
pushf
lods
push
adc
mov
into
jo
js
dec
pop
in
adc
dec
roll
lahf
inc
mov
add
insl
ret
popf
cmpsl
cmpsb
inc
mov
ds
out
mov
and
test
daa
inc
sbb
dec
sbbl
pop
movb
cmp
sub
sub
cld
shlb
aaa
mov
in
lods
mov
pop
into
call
or
movsb
xchg
xlat
repz
push
pusha
and
jae
and
sbb
repnz
adc
or
ret
inc
in
inc
xchg
shl
add
xchg
adc
xchg
push
inc
faddl
pop
cld
rcr
in
rorl
adc
lcall
popa
adc
ja
popl
lahf
push
sahf
leave
mov
pushf
pusha
mov
sbb
pop
mov
xor
ja
dec
cmp
lods
lret
sti
xor
inc
xchg
test
imul
sahf
add
inc
insl
out
loop
scas
xchg
out
movsl
mov
out
cmp
push
pop
sub
cwtl
mov
in
adc
xchg
sar
mov
or
dec
js
js
xchg
addr16
sbbl
jge
in
xchg
lret
movsl
xorl
test
fistps
lock
push
out
pushf
jl
movsl
xchg
dec
mov
bound
shlb
fcoms
or
test
mov
les
loope
xor
out
pop
mov
stc
es
dec
pop
push
xlat
lods
repz
popf
and
int3
push
adc
pop
inc
hlt
icebp
sbb
xor
hlt
repz
repnz
adc
lea
dec
xor
adc
jne
popf
mov
mov
test
push
xor
addr16
xor
jl
xchg
dec
int
orb
push
mov
enterw
sarb
ficoms
mov
js
mov
ljmp
add
jnp
aam
cs
negb
add
push
push
jb
pop
cmc
adc
loope
out
jle
sub
mov
push
insb
mov
push
jge
cwtl
mov
imul
leave
inc
fldenv
mov
cmp
stos
push
inc
shlb
fcompl
std
jge
adc
sub
pop
adc
xchg
sbb
push
sbb
icebp
movsb
sub
or
add
and
push
repnz
jb
aad
clc
jg
inc
and
cmp
cmpsb
mov
mov
mov
in
push
lods
jge
pop
lods
lea
iret
in
mov
subl
mov
aas
rcl
rorl
dec
fnstcw
mov
mov
cmpsb
dec
cmp
scas
ljmp
cmp
js
into
movsl
sbb
jns
cmp
lods
repz
and
data16
and
fs
hlt
into
cmpsb
adc
cs
repz
andl
hlt
cmp
icebp
cmp
sarb
mov
test
test
xor
das
repz
adc
sbb
pusha
push
add
insl
mov
push
sbb
test
jno
mov
xchg
gs
stc
or
or
cwtl
aad
inc
sbb
mov
sub
js
mov
mov
fnstenv
or
adc
fcoml
xor
mov
nop
enter
push
ljmp
jno
popf
push
dec
and
iret
mov
add
scas
push
ljmp
mov
pushf
out
xor
and
fdivs
sarb
dec
pusha
aaa
adc
sbb
lock
ret
and
cmp
sti
jle
shrl
sarb
add
pop
pusha
cmp
imul
daa
mov
inc
popa
xchg
cli
mov
movsb
sahf
mov
sti
push
div
jmp
or
mov
test
test
aas
xchg
mov
in
inc
psubusw
or
fidivl
in
xchg
pop
mov
nop
mov
fstl
scas
push
xchg
aam
add
adcb
int3
adc
or
mov
lret
bound
mov
shlb
xor
jbe
les
xchg
stos
jns
aam
fwait
cs
inc
sbb
sti
lret
and
out
sbb
mov
sub
or
cmp
add
cld
mov
jle
insb
or
popf
xlat
or
jmp
jle
mov
cmpsb
push
push
ljmp
popf
pop
cmp
adc
mov
cmp
mov
jl
xchg
xor
ret
and
xchg
push
xlat
ret
sbb
lods
addr16
adc
xor
push
pushf
add
inc
push
cld
inc
sbb
rorl
rclb
and
fidivrs
test
shl
mov
int3
pop
aam
jmp
rorl
mov
sub
mov
add
xchg
test
testb
adc
es
jl
pushf
xchg
stos
test
out
jne
xchg
ret
sbb
test
jne
mov
xor
sbb
shlb
mov
pop
mov
call
shlb
or
cmpsl
sbb
add
and
lds
and
stos
cld
xchg
inc
out
or
outsb
add
faddl
test
mov
cmp
data16
dec
stos
adc
bound
push
mov
mov
sbb
sub
mov
mov
push
addr16
iret
push
inc
lcall
cwtl
andl
and
adc
and
mov
gs
shlb
push
cwtl
idivl
and
imul
mov
xchg
mov
add
call
dec
leave
mov
pop
dec
xor
in
inc
ret
notb
dec
test
jge
movsw
shrb
xchg
call
inc
sbbb
mov
shll
rcr
push
out
cmp
pop
jbe
inc
jne
pop
fsubrs
jle
out
loopne
inc
push
sub
cmp
mov
xchg
adcl
dec
inc
mov
jns
hlt
jnp
adc
inc
dec
inc
inc
mov
push
adc
jnp
xor
sub
sahf
imul
int3
cltd
js
mov
pop
cmp
rcll
mov
data16
fnstcw
filds
out
rcrb
push
push
push
cmp
aad
out
lea
sahf
xlat
push
mov
sub
jecxz
daa
lods
outsl
push
test
stos
mov
lea
xchg
out
popa
lret
andl
xchg
jg
scas
repnz
dec
incb
jnp
inc
call
test
data16
ljmp
push
rorb
add
and
push
sahf
push
sti
sbb
rolb
outsl
xchg
test
ret
sahf
shlb
mov
mov
inc
adc
ss
sub
inc
mov
jg
lret
inc
push
pop
aad
mov
and
stos
ds
dec
setnp
and
rep
dec
lea
add
xor
call
push
inc
pop
push
xchg
sbb
leave
adc
lret
icebp
inc
push
call
sarl
hlt
lea
xor
and
rclb
pop
xor
rcrl
adc
xor
clc
mov
lock
inc
inc
aas
push
ljmp
mov
out
lods
loope
je
shlb
lds
mov
pop
out
lea
stc
aad
pop
dec
loopne
jg
repnz
mov
int3
pop
lea
lret
adc
repz
pushf
ret
clc
cmc
mov
imul
cmp
cmp
popf
flds
sbb
mov
imul
push
add
jae
lock
inc
ror
dec
sub
push
inc
rolb
jmp
add
mov
and
cwtl
cmpsl
ret
leave
mov
xor
or
push
movsl
cmpsb
icebp
sbb
push
mov
jmp
not
push
into
bound
push
lods
out
mov
loopne
mov
sbb
adcb
lods
push
xchg
insl
mov
mov
mov
sbb
int
sub
call
das
jo
js
popa
stos
sub
mov
adc
mov
data16
in
test
cmp
cmp
rcl
push
aaa
rcrb
cmp
lock
out
pop
sbb
dec
inc
insl
mov
jns
pusha
pop
or
popa
add
popf
add
push
inc
pop
xchg
sub
sub
enter
fnsave
adc
mov
dec
test
jg
arpl
push
fld
in
jbe
jbe
xorl
add
mov
cltd
scas
cli
and
mov
daa
jg
int3
sub
int3
pop
jl
dec
cwtl
jecxz
jae
orl
cmp
adcb
mov
imulb
lahf
scas
ss
lock
shlb
or
cli
and
adc
add
test
das
stos
sbb
mov
cmp
loop
cmp
hlt
mov
lcall
sti
dec
pop
add
push
icebp
xchg
push
cmpsl
repnz
inc
lds
mov
aad
mov
in
or
loopne
xchg
cmpsb
jae
mov
push
outsl
cmpsl
test
mov
inc
dec
cmp
push
gs
xor
or
add
sub
xchg
bnd
stc
lods
push
cltd
xor
jecxz
xlat
adc
inc
mov
sarl
inc
xlat
or
jp
mov
xor
in
mov
sbb
andl
gs
pop
inc
and
cmpl
jnp
dec
cmpsl
inc
push
add
cmp
adc
fldcw
adc
xchg
or
jge
push
leave
inc
enter
rcll
cmpsb
ror
adc
cmp
addr16
js
jmp
andl
dec
daa
jnp
pop
and
jg
cltd
sub
filds
push
scas
cmc
in
pop
sbb
testl
cmp
mov
push
lret
and
pop
idiv
les
xchg
mov
lock
in
inc
call
jns
ljmp
xor
imul
call
jbe
push
inc
popa
in
xchg
add
or
leave
pop
sub
xchg
andl
pop
ficompl
mov
dec
aas
iret
inc
lea
repz
lea
push
stos
ret
inc
lea
cltd
sbb
xor
sub
je
arpl
mov
sub
seto
cmp
xchg
jns
dec
mov
dec
sbb
dec
insb
push
xor
repnz
or
xor
les
jp
imul
adc
mov
xchg
out
sbb
clc
push
jecxz
ret
pop
add
sbb
pop
jp
cmpsl
xchg
sub
in
xchg
mov
cmpsb
mov
hlt
mov
xchg
sub
and
mov
in
inc
pop
dec
fmul
cmp
mov
iret
dec
pop
loope
stos
fcoml
test
push
inc
aad
xlat
dec
cmp
xlat
test
in
adc
sar
adc
pop
jo
sahf
mov
rclb
dec
rcr
je
dec
cmpsb
lcall
popf
inc
int3
loop
mov
pop
push
loopne
add
inc
repnz
outsl
adc
fistpll
or
stos
cmp
dec
mov
push
push
pop
lock
mov
ja
fs
push
test
jae
dec
xor
sub
out
fisubrl
aas
std
jge
cs
dec
xlat
xor
or
mov
mov
in
fcoms
mov
adc
pop
xorb
cltd
cmp
adc
pusha
cld
and
enter
xchg
adc
inc
add
cmp
pop
jp
push
cld
adc
push
aad
lds
loope
pop
pushf
imul
out
jb
xchg
and
stos
cmp
test
sbb
pop
leave
adc
sub
mov
pop
jae
sub
rclb
inc
test
cmc
shll
sub
adc
clc
pop
xchg
les
cmpsb
or
std
xchg
cmp
sub
daa
shl
adc
jl
xchg
es
add
dec
or
add
sbb
push
sub
into
aam
outsb
add
cmp
pop
out
stos
inc
pop
inc
cmp
cmp
dec
sbb
or
insb
test
push
fimull
rol
je
add
cli
fsubr
mov
nop
hlt
jns
xor
fdivp
push
mov
pop
loop
fsubrp
pop
add
sbbb
stos
cmp
xchg
jbe
leave
adc
mov
sbb
rcrb
jmp
mov
or
add
out
push
sbb
iret
xchg
cmp
push
in
scas
inc
out
pop
lahf
pop
shl
lret
add
mov
shl
sbbl
or
fistl
ss
push
cld
mov
arpl
pushf
xlat
loop
mov
mov
and
jl
cmpsl
cld
xchg
mov
cmp
pushf
sbb
bound
int3
jnp
and
and
cmp
add
dec
mov
incl
shlb
in
movsb
popa
adc
repz
or
in
cmp
outsl
xor
movsl
js
lock
cmovno
cmp
test
pop
adc
loope
hlt
lcall
aad
jecxz
or
stc
mov
int
mov
dec
pop
cmp
outsb
adc
jo
movsb
dec
and
jbe
in
jnp
xchg
stos
cmp
popa
push
jle
and
popf
mov
mov
stc
outsl
or
sub
clc
add
adc
push
or
lods
lock
rol
xor
insl
adc
mov
insl
mov
adc
in
ds
sub
pop
je
dec
sub
push
rcrb
popf
stos
sbb
mov
repnz
push
daa
aad
push
pop
dec
andl
mov
cmpsb
fs
xlat
sti
leave
push
lds
inc
push
jns
pop
hlt
mov
fists
push
nop
sub
mov
test
mov
hlt
stos
mov
push
test
js
dec
pop
cwtl
adc
pop
pop
jb
sub
sub
es
cltd
or
pushf
outsb
dec
fidivrs
push
fildll
shll
xchg
repnz
push
je
sbb
mov
add
notl
push
test
enter
inc
fidivl
cltd
test
enter
add
lods
mov
addb
inc
fxch
and
xchg
imul
mov
aad
ds
jb
dec
mov
cmp
pop
sbb
sbb
sbb
mov
imull
mov
shll
js
in
loopne
adc
xor
icebp
xchg
ret
bound
aas
hlt
leave
xor
rolb
lods
mov
js
ljmp
mov
add
sbb
ja
lds
mov
sbb
mov
call
or
sub
mov
xor
jp
std
cmp
in
cltd
test
cmpl
dec
dec
dec
arpl
xor
mov
fisttps
inc
mov
pop
cmp
xchg
shl
and
push
xor
mov
mov
les
cwtl
mov
fisttpl
push
js
mov
mov
rol
inc
mov
adc
int
test
inc
adc
pop
fildll
std
ficomps
jno
jg
jecxz
ret
in
mov
push
ds
out
adc
hlt
and
in
mov
scas
shl
iret
fs
push
pop
ds
pushf
sub
aas
jno
jb
aaa
mov
xorl
dec
pusha
push
cmp
cmp
jle
xchg
or
xchg
xchg
xor
or
pop
loope
outsb
ret
mov
test
inc
pusha
and
mov
repz
jnp
add
addr16
or
sarl
add
rorb
sbb
jge
pop
cpuid
sarl
lahf
mov
xchg
and
add
mov
outsl
or
loop
nop
jecxz
ret
dec
xchg
xor
add
mov
cmpb
dec
push
cmp
push
lahf
stos
mov
das
outsl
sub
sub
fcomp
lds
adc
sub
and
stos
insb
jmp
pop
inc
rcll
test
and
jb
repz
fwait
call
and
mov
mov
push
cli
or
pushf
addr16
cwtl
out
jnp
xor
incl
xchg
ret
pop
ret
pop
jp
shrl
pop
push
hlt
test
outsb
rolb
inc
dec
cmc
adc
mov
pushf
std
or
leave
jmp
es
repnz
hlt
xlat
pop
lods
add
add
lea
aad
repnz
mov
movsb
jns
and
push
jae
mov
mov
loop
incl
std
lret
add
xlat
adc
jno
icebp
cli
mov
mov
xchg
jb
xor
insl
push
xlat
cmpsl
test
stos
jg
daa
cmp
adc
dec
dec
and
repnz
insb
std
jp
xlat
push
loop
aas
push
mov
inc
pop
mov
push
xor
pop
test
adcl
xchg
sub
icebp
adc
jmp
lds
mov
clc
sub
mov
insb
fdivrl
jg
mov
pop
loope
mov
nop
mov
js
pop
aaa
daa
inc
pop
cmp
in
jle
pop
sub
adc
stos
shr
jl
cmp
cld
adc
cmp
insl
or
jp
les
add
sbb
xor
cltd
fcompl
aad
cld
rolb
rcrb
jp
arpl
ljmp
mov
int
sub
inc
pop
in
sbb
mov
int3
mov
cmp
stc
sub
mov
std
or
mov
xor
jo
and
ljmp
mov
mov
cwtl
jne
in
mov
sbb
int3
push
mov
mov
xor
xlat
xor
call
enter
jbe
xchg
fmuls
loope
clc
rorb
jecxz
xor
xchg
jmp
mov
xchg
je
sbb
mov
mov
test
std
dec
es
xlat
out
mov
jg
mov
mov
enter
insl
lret
pop
push
dec
fcompl
scas
add
sbb
adc
sti
jg
and
jo
mov
push
push
jmp
ret
out
jp
push
and
xor
invd
lahf
jge
js
cli
sbb
mov
wrmsr
adcb
test
mov
mov
adc
fcomp
jne
iret
pop
mov
push
outsl
push
inc
repnz
in
loop
dec
out
mov
jo
jle
mov
push
mov
add
es
inc
into
gs
shr
test
popa
xor
push
fs
xchg
mov
mov
enter
inc
push
out
xor
shl
shlb
add
das
stos
mov
cmpb
cmc
inc
fyl2x
ret
sub
sub
jp
call
dec
xchg
inc
sahf
xchg
sbb
cltd
int3
movsb
cmp
jl
pop
mov
or
or
jle
lret
loop
cmp
mov
adc
sub
lock
cmp
aad
push
int
inc
ljmp
hlt
cmpsb
movsl
and
mov
mov
fcompl
shl
aas
push
outsb
inc
mov
dec
and
jbe
fwait
lret
lret
iret
mov
jl
data16
dec
fildll
mov
data16
fwait
mov
dec
aas
pusha
lods
xor
mov
jle
jecxz
aad
jmp
xchg
jno
push
push
inc
mov
add
mov
pop
lcall
loopne
jb
push
mov
xchg
add
mov
mov
or
and
push
test
inc
test
inc
adc
pop
inc
fsubl
std
gs
int
mov
imul
jl
ljmp
dec
xor
pop
cli
and
movsb
fistpl
daa
ret
dec
pop
in
xor
out
mov
shlb
jl
dec
ljmp
adc
mov
repz
fnstcw
mov
lock
lods
outsl
xchg
xchg
push
hlt
fldenvs
mov
pop
int
dec
pop
mulb
stos
data16
mov
add
inc
pop
movl
push
xchg
push
fcoml
in
in
mov
inc
ja
scas
lock
fwait
sub
fucomp
imul
rcl
test
xlat
mov
fdivl
xor
in
pop
jp
test
lods
jo
and
test
bound
adc
mov
mov
shr
add
in
sbb
aaa
push
div
push
inc
out
and
or
xchg
xor
int
jp
mov
push
and
push
ficomps
sub
and
lock
mov
int3
mov
out
push
xchg
mov
test
or
test
mov
and
in
std
out
mov
and
mov
fistl
ret
xor
sub
ret
sbb
fstp
adc
das
arpl
mov
cmp
dec
lds
sub
adc
int
sbb
cmp
out
xchg
les
mov
ret
pop
scas
int
popa
sti
inc
inc
sbb
mov
sub
sbb
pushl
inc
lock
xlat
cmc
xor
mov
cli
rcl
test
lret
data16
mov
cmpsb
lea
scas
in
sbb
sub
loopne
stos
ret
mov
shll
hlt
push
push
adcl
sti
nop
cltd
sub
insl
sub
adc
rclb
out
loopne
xchg
cmp
dec
mov
data16
pop
outsb
inc
or
sti
andl
je
cmpsb
mov
push
ds
fnstenv
push
cli
sub
aas
add
add
je
pop
add
sub
cmp
dec
push
loope
push
scas
mov
les
mov
mov
push
and
xchg
stc
sub
cmp
push
push
mov
fucomip
push
out
sub
or
jns
xchg
push
push
push
cmpsb
cmp
jmp
mov
das
push
pop
scas
movb
int
pop
into
inc
adc
jmp
mov
or
dec
pop
iret
fildl
mov
push
call
arpl
pusha
outsl
dec
xchg
adc
jg
jle
cltd
fdivs
popa
test
lret
jnp
mov
pop
cltd
inc
aad
std
loop
and
out
roll
sub
cmpsb
in
pushf
and
jb
push
jo
dec
je
xchg
lods
sub
pushf
in
test
in
loop
push
dec
push
scas
inc
jl
push
iret
pop
push
daa
or
xchg
mov
pop
int
scas
push
repnz
rcll
out
and
and
aad
adc
popa
bound
adc
push
jno
mov
cltd
xchg
ss
scas
out
mov
pop
mov
sbb
mov
ja
sub
pop
fdivrs
mov
insl
dec
repz
push
mov
loopne
mov
push
fidivs
aad
imull
addr16
mov
lahf
cwtl
xor
aas
imul
sub
xchg
push
xor
lret
mov
push
popf
xor
mov
mov
jp
mov
cmpsl
dec
mov
aas
dec
and
insl
test
mov
xchg
hlt
push
loop
jecxz
xchg
dec
xchg
mov
mov
ja
call
adc
mov
mov
into
xor
lock
push
lcall
ret
xchg
jae
pop
push
fwait
push
xor
adcl
mov
xchg
imul
mov
mov
incl
sarb
mov
mov
jae
movb
pop
clc
sbb
dec
imul
pop
jb
mov
into
pop
xor
push
mov
xchg
lock
loope
pop
sub
mov
test
loopne
arpl
imul
lods
cmp
cmp
adc
test
and
inc
mov
jp
add
ror
out
leave
jno
hlt
pop
test
popa
dec
sbb
scas
inc
ds
sub
gs
fadds
lahf
lods
mov
jecxz
add
outsl
bound
adc
je
mov
or
ljmp
test
jbe
cmc
mov
adc
gs
icebp
movsl
mov
inc
loope
jl
test
cmpsb
nop
dec
out
cmc
js
loop
cmpsl
scas
inc
xchg
push
movsb
mov
mov
out
inc
sbb
shr
or
test
fldt
test
add
popa
xchg
dec
mov
xchg
sub
hlt
adc
push
icebp
data16
dec
or
cmp
pop
iret
push
aas
inc
arpl
lock
mov
xor
test
mov
lock
jmp
xchg
and
adc
inc
mov
in
jp
jb
pop
mull
sub
adc
and
adc
dec
ror
add
pop
jge
mov
add
or
add
jo
lea
mov
mov
and
xchg
adc
xchg
pusha
pusha
jp
out
xchg
leave
and
xor
es
loopne
je
push
aaa
xchg
shll
in
add
inc
cwtl
cwtl
inc
lcall
pusha
repnz
mov
ss
scas
sbb
out
cmp
inc
or
inc
jecxz
jae
mov
adc
ss
aas
mov
sub
cmp
jmp
inc
pop
dec
mov
push
ds
mov
out
js
insb
es
mov
and
mov
and
add
jne
cmp
xor
jle
cmp
aad
in
or
jp
out
cmpsb
mov
mov
divl
jnp
inc
ljmp
bound
in
add
mov
xchg
xchg
shrl
outsb
addb
lret
or
lcall
inc
cmp
xchg
fiaddl
fsubr
mov
inc
int3
test
lods
stc
sub
add
sub
mov
xor
repnz
add
mov
mov
and
shlb
mov
adc
cmp
divb
cmpsl
gs
inc
rol
mov
or
mov
rcr
cmp
cmpsl
fistpl
cli
mov
xchg
out
int
aas
cmpsb
popa
addr16
pop
adc
or
add
xor
push
aaa
xchg
pop
and
sahf
xchg
lods
repz
lcall
in
fwait
xchg
test
addr16
mov
dec
sub
pop
in
movsb
int3
pop
dec
aam
in
ret
add
fildl
imul
imull
sub
adc
in
scas
insl
sahf
arpl
sbb
aas
cmp
idiv
dec
es
iret
fwait
rcl
mov
pop
insl
jae
mov
sbbb
lcall
movsl
loop
loope
stc
adc
mov
dec
cltd
mov
inc
jp
ja
xchg
cmpsl
mov
out
out
scas
push
jb
es
fs
jg
test
sbbl
jle
lahf
mov
arpl
adc
inc
jp
or
adc
push
addr16
xchg
pop
scas
js
out
ds
popa
clc
mov
repnz
ljmp
fwait
js
xchg
scas
xor
sub
movsb
push
cmp
and
out
xlat
sti
sahf
mov
jb
cs
fcmovnbe
into
ss
push
lds
imulb
mov
xor
pop
inc
lods
jno
add
dec
dec
lods
aas
lea
std
mov
cld
fwait
popf
in
dec
and
in
stc
jg
mov
aad
bound
or
jnp
insl
sub
and
dec
loop
fwait
sub
adc
mov
outsb
jne
pop
insl
sbb
popf
pop
inc
pop
push
aaa
cmp
pop
xor
pop
loopne
std
cwtl
repz
shll
adc
mov
out
adc
and
shr
adc
fldcw
push
push
lcall
sahf
sub
sbb
mov
sub
mov
jno
pop
push
mov
push
insb
adc
jg
xor
lock
outsb
mov
dec
in
in
fcomip
add
mov
mov
push
ja
and
mov
cmpb
add
lock
jbe
in
int
sarb
mov
test
test
inc
jae
jmp
lods
pop
fnstsw
push
or
inc
mov
inc
in
lea
and
rorb
mov
das
dec
sbb
bound
out
cltd
or
pop
xchg
popf
mov
xor
ret
movsl
xchg
test
mov
outsl
sarl
or
and
fisubrl
int
mov
pop
sub
push
jle
push
cmp
push
jo
bound
mov
mov
mov
sahf
out
adc
adc
and
leave
int3
jne
mov
shr
or
pop
movsl
mov
pop
aam
int3
lods
std
xchg
or
pop
jae
loop
mov
cwtl
adc
leave
cli
dec
push
mov
adc
mov
adc
in
jbe
pop
and
sbb
loopne
mov
pop
mov
add
pop
push
push
xlat
fdivs
push
mov
push
cli
push
mov
pop
stos
roll
mov
cs
int
ja
pushf
lahf
ljmp
lods
mov
in
jg
push
xchg
clc
ja
mov
mov
sub
jne
mov
or
pop
jnp
stc
popf
lods
jge
scas
ljmp
ret
dec
pop
jo
iret
fscale
and
inc
mov
jecxz
jp
cmp
shrb
add
jae
loopne
movsl
push
sahf
stos
test
xchg
clc
es
sbb
mov
mov
mov
sub
xor
decb
cmpsl
out
xor
jae
xor
aam
inc
test
aad
pop
inc
es
ljmp
lods
clc
cmp
xlat
xor
adc
jne
add
inc
scas
or
push
jb
cs
dec
push
mov
lcall
lea
rolb
mov
cmpsl
xor
pop
int3
lret
cmp
jge
push
in
mov
test
xchg
inc
push
repz
add
adc
rorb
xchg
and
mov
inc
jae
cld
jb
dec
movsb
sbb
pop
int3
pop
inc
sbb
xor
push
mov
push
push
out
pop
mov
aas
lock
int3
pusha
cmpsl
ds
xchg
or
dec
mov
bound
rcr
rclb
pop
add
sub
dec
jae
fidivl
add
ss
pop
sub
mov
icebp
mov
mov
mov
or
pushf
adc
push
cmc
aaa
dec
lea
sahf
wrmsr
iret
xchg
shlb
lock
adc
mov
sbb
dec
jns
push
pop
aas
sbb
xchg
jle
push
xor
add
mov
jae
xchg
lahf
dec
mov
jg
pusha
outsl
inc
sbb
xchg
test
cmp
add
loopne
call
sub
cmpsl
cs
sub
add
or
xchg
shlb
jle
push
lahf
mov
or
lcall
inc
jne
inc
or
adc
or
es
stos
shlb
inc
mov
mov
add
mov
mov
mov
mov
aaa
mov
jno
jmp
mov
adc
pop
testl
pop
push
dec
shl
jecxz
insb
inc
jl
stos
sti
mov
pop
mov
jbe
pop
ljmp
shl
jecxz
mov
fists
clc
dec
lods
mov
cwtl
outsl
push
lret
push
loope
fstl
or
xor
rorl
or
mov
pop
and
or
pop
ljmp
pop
dec
cld
mov
stos
lea
scas
sbbb
int3
outsl
mov
push
mov
lods
xchg
aas
adc
adc
add
xor
imul
je
push
xor
pop
jns
pop
int3
push
fucomip
sar
sub
jae
jle
xor
xchg
push
popf
enter
jno
jo
sbb
leave
int
or
fnsave
jnp
add
data16
or
cs
add
mov
push
test
cmc
hlt
stos
mov
sub
int3
jnp
xchg
xchg
lcall
inc
insl
mov
popf
xchg
pop
addr16
int
jmp
and
fimuls
subb
ljmp
cmp
and
xchg
ficomps
cmp
in
mov
fists
data16
mov
lds
inc
pop
jmp
out
out
push
fldl2e
xor
xor
es
fs
push
gs
fsubs
int
lock
inc
dec
pop
loop
addr16
addr16
push
xlat
popa
mov
test
cld
mov
xor
dec
inc
mov
andl
icebp
push
and
mov
pushf
xor
cmp
pop
cs
mov
dec
fsubrs
stc
shrl
xchg
popf
add
cmp
aaa
cwtl
cs
aad
pop
stos
dec
in
adc
scas
jae
push
cmp
ss
fsts
mov
movsl
dec
xor
inc
cwtl
add
jno
mov
sbb
outsb
xor
sbb
push
outsb
imul
frstor
xchg
repz
lret
testl
aam
add
pushf
out
test
jbe
scas
sarb
iret
adc
ffreep
arpl
xchg
out
std
adc
test
push
or
jb
xor
stos
fimull
scas
add
imul
sub
in
fwait
adc
lea
mov
jo
adc
jl
sub
mov
mov
scas
push
adc
pop
push
clc
ss
mov
inc
inc
lret
push
jmp
popa
lret
lret
and
pop
outsl
je
inc
xor
pop
jmp
ss
push
adc
loop
out
bound
sub
inc
mov
pop
insl
cmp
pop
cmp
sbb
push
inc
stc
push
incb
lods
push
js
sub
xor
shl
test
jp
or
push
xor
mov
stc
les
sub
adcl
icebp
xlat
shr
frstor
mov
mov
mov
fstl
xchg
xor
mov
loope
push
faddl
cmp
xchg
or
enter
aas
stc
xchg
xor
xor
pushf
nop
test
xchg
or
je
pop
test
mov
pop
mov
pop
out
add
xchg
repnz
cmp
unpckhps
inc
xor
int3
jge
mov
mov
or
jae
into
pop
fldl
mov
dec
pop
adc
inc
push
addr16
and
fdivrs
sub
orl
out
aam
movsb
imul
mov
aas
mov
adc
xlat
test
imul
push
cmpsb
pop
mov
mov
pop
sti
adc
xchg
mov
and
test
mov
aas
dec
scas
jnp
xchg
push
jge
shrl
les
pop
bound
ljmp
pop
ss
jo
stos
fimull
sbb
add
insb
xor
mov
inc
popf
mov
xchg
shrl
movsb
adc
fnstsw
stos
inc
lods
stos
nop
mov
iret
leave
mov
test
sub
mov
push
lea
stos
mov
inc
stos
and
clc
test
sub
pop
ds
mov
int3
movsb
pop
inc
arpl
add
xor
sti
mov
mov
cmp
add
clc
sub
lahf
mov
or
loop
scas
ret
into
pop
sarl
add
mov
data16
jnp
push
test
cld
cmp
pop
push
ret
in
add
jns
and
bound
daa
cs
pusha
clc
pusha
xchg
push
mov
push
imul
sbb
int
xor
push
test
fisubs
outsl
jb
inc
roll
scas
pop
sub
cmpsl
jbe
push
hlt
jo
mov
jle
lods
pop
add
loope
stc
jnp
lods
lret
cmp
fnstcw
inc
sbb
dec
xchg
mov
out
jge
inc
push
cwtl
ret
lea
cmp
int3
jns
sub
rcrb
dec
repnz
leave
mov
mov
fadd
mov
repz
mov
addr16
or
insl
push
fdivrs
sbb
loope
push
std
aam
add
std
mov
push
mov
shl
sbb
pop
pusha
cmc
mov
and
aad
cmp
jno
mov
jge
aad
mov
in
call
cmp
mov
jns
shlb
mov
shlb
and
std
cmpsb
mov
stos
popf
scas
les
mov
je
aas
add
loopne
xchg
inc
jo
xor
popa
push
add
mov
or
xchg
lods
in
stc
popf
clc
cmp
xchg
xchg
add
and
dec
jno
push
inc
pop
adc
lds
jo
aad
ja
jl
mov
ret
sub
push
inc
fwait
sub
xchg
cmc
push
sbb
pop
js
mov
popa
adc
push
mov
sbb
pop
ret
jmp
sbb
mov
out
bound
pop
movsb
adc
and
enter
int
dec
enter
hlt
fimull
pushf
out
mov
pop
adcb
sub
add
mov
test
int
pop
cmp
sub
loopne
add
inc
das
imul
dec
stos
imul
pop
dec
movsb
jecxz
or
shll
and
fdiv
cmp
out
call
lcall
add
outsb
test
ffreep
mov
test
jecxz
or
sbb
rcrl
pop
ja
fistl
ss
sbbl
mov
in
push
jmp
sub
repz
lret
stc
pop
push
sub
ficoml
lods
mov
outsb
pop
push
fiaddl
enter
lods
jmp
in
popf
stc
notb
cmp
pop
cmp
cmpsl
mov
inc
push
divb
sti
pushf
push
push
add
popa
clc
add
xchg
aaa
int
push
lods
fnstcw
cmpsl
leavew
int
jp
sbb
lret
or
popa
in
stos
inc
lret
dec
in
in
jbe
mov
jl
rorl
cmp
push
shl
pcmpeqd
imul
shl
push
sbb
lret
and
fs
loop
repnz
out
xchg
xchg
mov
das
sub
icebp
aas
dec
push
inc
outsl
fildl
bound
outsb
call
dec
jo
sbb
jmp
repz
sbb
jo
cmp
jnp
imul
or
fwait
or
lods
push
arpl
aas
lds
pop
shlb
outsl
jnp
scas
jns
cmpsl
pop
sub
sti
fucom
fs
and
inc
rol
repnz
mov
sub
fdivl
popf
aaa
pop
push
adcl
jbe
mov
jge
sub
pop
mov
jnp
jp
sub
sub
lds
push
push
and
push
mov
xchg
test
xchg
call
je
xchg
aam
and
cld
out
cmpsl
jne
popf
inc
xchg
test
aaa
mov
xadd
in
and
and
dec
adc
mov
das
jle
hlt
mov
push
ljmp
lds
lea
and
sub
dec
fdiv
enter
imul
push
mov
pushf
xchg
in
lods
dec
inc
es
xchg
pop
mov
negb
xor
push
cld
xchg
xchg
sub
cmp
mov
lcall
push
cli
add
or
popa
into
push
xlat
loop
pop
jno
ret
lds
iret
pmullw
outsb
pop
add
ret
inc
and
bnd
pop
out
pop
sub
add
sbb
mov
jmp
aas
lock
xchg
mov
ret
pop
cmp
bound
pop
popa
sbb
ss
sbb
and
adc
jae
cltd
mov
push
sbb
and
aaa
add
sbb
out
aas
jno
pop
imul
jbe
dec
fmuls
jo
stc
rcll
lret
scas
mov
icebp
mov
lods
inc
inc
daa
fisubs
pop
dec
lret
jae
outsl
retw
mov
int
clc
fistpl
mov
dec
shl
jbe
mov
andl
xchg
xchg
cltd
shll
sbb
fcomps
iret
test
bound
imul
or
les
and
shlb
mov
inc
mov
jns
dec
fbld
add
addr16
iret
fdivs
cmpsb
stc
ljmp
les
mov
dec
push
or
and
icebp
pushf
or
mov
stc
test
adcb
jg
cmp
les
push
cmp
and
xchg
out
pop
mov
loopne
jb
jnp
and
sbb
cltd
xorb
sbb
or
push
mov
xlat
stc
dec
rcll
push
popf
subb
movsl
sbb
xor
inc
jecxz
out
mov
xor
sarb
lods
stos
cltd
pop
repz
lret
xor
jmp
xor
sub
mov
add
sbb
and
repnz
mov
jne
fcmovu
outsl
or
test
jb
testb
jbe
mov
push
je
ljmp
mov
int
outsl
rolb
addr16
sub
xor
sbb
push
inc
aaa
xchg
ja
fwait
push
xchg
sarb
shlb
and
les
test
repz
or
jns
jmp
mov
mov
lock
mov
rcll
bound
out
mov
push
lods
js
sub
sbb
roll
mov
stos
xor
test
jbe
mov
xor
mov
pop
andl
add
sbb
test
negl
xor
mov
dec
test
mov
ror
and
arpl
inc
lahf
push
jmp
xchg
dec
lock
popa
or
inc
push
movsl
ja
push
ljmp
jo
push
insl
mov
popa
ja
xchg
movsl
les
js
sbb
test
fisubrl
scas
jmp
enter
sahf
jb
push
xor
rorb
push
mov
jb
pop
ds
add
adcb
pop
push
or
sbb
pop
or
or
js
sub
ljmp
mov
jbe
mov
scas
cli
aas
and
pop
adc
xor
mov
mov
test
fs
gs
jbe
jne
or
lcall
cmp
cmp
adc
jecxz
mov
cmp
out
push
fwait
mov
xchg
lret
xor
fiaddl
xor
idiv
and
pop
fisubrs
pop
imul
lods
mov
jg
dec
add
jbe
hlt
imul
sub
add
ja
xor
rcll
lods
mov
pop
movsb
push
fucom
fucom
pop
push
test
jbe
mov
ret
addb
movsl
fnstenv
inc
cwtl
in
lret
xor
je
sub
sbb
mov
and
outsl
jns
int3
push
sbb
inc
ret
sub
aaa
sbb
add
movd
mov
pop
inc
sbb
sbb
sarb
and
scas
add
mov
test
fwait
lods
subl
repz
adc
jge
mov
xchg
and
jecxz,pn
adc
repnz
lcall
and
jns
mov
fsts
xor
jecxz
push
inc
cmp
scas
jb
insl
and
mov
add
or
mov
lahf
cwtl
sti
sti
insb
add
jle
sti
mov
imul
pop
sub
xlat
push
int3
or
inc
push
ret
notb
lods
lar
fistps
sub
lods
nop
jb
repz
imul
jno
cmpl
mov
sbb
repz
sub
fimull
push
nop
or
pop
imul
incl
jo
push
pop
jns
jno
rol
cmp
xlat
push
hlt
fldt
fdiv
or
decb
popf
xchg
jge
cld
xchg
push
xor
dec
icebp
xor
daa
loop,pn
mov
loop
sub
mov
jns
mov
or
jno
out
test
push
push
inc
and
lcall
dec
aas
mov
xor
mov
addr16
stos
mov
xchg
iret
mov
js
mov
mov
or
fbstp
lcall
cs
jge
mov
mov
push
cmpsl
adc
mov
fldt
pop
fucomip
mov
push
out
cmp
stos
mov
pop
out
ds
mov
pop
add
loopne
js
mov
pop
mov
aad
sub
pop
cli
xchg
dec
xchg
mov
push
out
sbb
outsb
movsb
or
hlt
mov
mov
sahf
add
xor
sbb
inc
movsb
push
es
data16
cmp
dec
dec
in
jo
inc
cwtl
in
mov
pop
ret
sti
into
inc
mov
mov
lods
mov
inc
outsb
adc
insb
rorl
push
loop
je
mov
xchg
std
stos
add
mov
pop
dec
movsl
fldl
pop
out
pop
lods
lods
pop
neg
mov
add
xorb
adc
imul
pop
test
add
addr16
stos
push
in
sti
setnp
or
and
stc
and
jg
pop
ficoml
sbb
jge
mov
jge
in
dec
insl
fldl
mov
inc
cmpsb
repnz
aam
arpl
jns
daa
sbb
lret
xchg
repnz
dec
inc
mov
movsl
popf
in
iret
iret
in
lahf
jne
test
fmul
sbb
push
mov
rcl
and
xchg
or
daa
sbb
ds
xor
xchg
divb
ds
inc
xchg
pop
jg
mov
or
jns
mov
jp
outsl
lods
pop
dec
add
mov
jle
shl
push
loop
nop
push
mov
int3
loope
iret
scas
or
orb
repz
gs
and
mov
fistl
push
das
pop
out
xchg
and
mov
mov
insb
push
push
or
nop
fbld
xchg
cmc
adc
test
test
pop
adc
xchg
jg
das
dec
fistps
dec
out
xchg
and
sbb
mov
pusha
jno
xchg
clc
nop
mov
rcrb
mov
jl
cmc
xor
cmp
test
mov
xorl
insl
xor
andb
mov
mov
push
pop
scas
adc
imul
xor
insl
mov
push
pop
ror
repnz
adc
xor
data16
mov
xchg
iret
jecxz
sarl
cmp
push
and
xor
push
scas
fsubr
loopne
fists
cmp
pop
icebp
push
enter
stos
add
cmpsl
jno
cmp
push
xlat
sbbl
inc
xchg
lret
sub
push
cmc
dec
aaa
into
jge
lock
dec
push
push
push
pop
bound
pop
stos
xchg
or
stos
xchg
mov
adc
or
jno
lret
into
xchg
scas
call
push
nop
sub
pop
mov
cmp
addr16
and
cmp
aas
das
mov
outsl
mov
adc
imul
lds
pop
inc
cmp
mov
xchg
lret
jbe
lock
sub
xor
inc
push
cmp
ds
xor
gs
cmc
ljmp
int3
clc
lret
xor
and
mov
push
push
out
mov
shrb
sbbl
jne
dec
mov
notl
xor
jns
aas
stos
sub
arpl
inc
in
xorl
sub
adc
mov
std
mov
addr16
aad
pop
aas
jge
xor
pusha
stos
decl
adc
fs
xor
inc
xchg
stos
inc
and
cmp
sbb
popf
lds
pushf
add
lea
loop
scas
sub
pop
or
xchg
jl
fwait
push
movsb
inc
jl
movsl
cmp
sbb
ret
adc
jnp
cbtw
daa
mov
fldenv
dec
pop
shlb
aaa
cmp
lcall
data16
sbb
or
lret
and
clc
sub
sub
xor
dec
repz
out
cmpsl
out
sahf
sub
daa
cli
jg
dec
mov
fcmovnbe
add
mov
sarb
mov
fnstsw
std
scas
and
jmp
ret
cmp
dec
outsl
out
inc
push
xchg
nop
jo
or
scas
mov
fsub
xor
das
dec
fldl
xchg
insl
add
adcb
stos
mov
pop
in
les
mov
jnp
fdivrp
in
sub
and
aaa
clc
mov
adc
rorb
xchg
mov
test
lret
jno
notl
mov
shrb
mov
add
xchg
mov
aam
movsb
add
outsl
mov
sbb
rolb
in
xlat
std
in
popf
xor
xorb
mov
test
push
mov
mov
movhps
dec
fldl2t
jp
and
js
add
and
int3
jno
pop
loope
fists
mov
inc
mov
dec
loop
push
cmp
imul
adc
xchg
movsb
cmp
cli
insl
lds
cmpsb
add
add
dec
push
cwtl
insb
push
and
frstor
iret
push
enter
lods
jge
test
fs
negb
sarb
jg
andb
cs
jmp
mov
mov
cmp
lret
pop
and
or
lods
jno
adc
out
sbb
or
jbe
int3
pusha
add
aad
inc
ja
js
xchg
cwtl
fucomp
das
mov
lret
mov
test
lret
sbb
dec
mov
cmpl
into
fs
ret
inc
mov
jbe
in
imul
cmp
mov
leave
hlt
adc
icebp
push
jo
mov
push
lret
inc
roll
add
es
xlat
jno
xchg
xor
jb
inc
inc
jmp
ret
add
jns
jb
call
push
fnsave
lret
cmp
sbb
out
repz
and
push
fsubrp
cmp
add
jge
push
push
js
cmp
leave
dec
mov
lods
and
std
popf
xor
addr16
ljmp
aaa
sti
mov
cmp
inc
popa
out
sti
xchg
mov
push
sbb
mov
pushf
cmc
xchg
jp
cld
lods
sbb
xor
stos
cwtl
or
scas
unpcklps
push
or
xor
lods
jg
lock
fisubrl
adc
push
scas
xor
popa
in
test
inc
add
push
loope
jnp
jno
adc
dec
inc
pop
cli
sbb
dec
mov
sti
or
sub
lock
out
pop
pop
loopne
clc
mov
or
loope
scas
and
add
inc
xchg
xor
adc
or
sti
dec
mov
mov
lods
fcomp
test
mov
int3
xchg
xchg
out
dec
rcr
add
in
aaa
push
pop
cltd
mov
sub
and
fwait
into
jnp
ljmp
inc
jb
jnp
or
sub
sub
rcr
push
movb
mov
shr
adc
jmp
xchg
cmp
push
mov
push
aad
aaa
pushf
repz
stos
loope
lahf
fwait
insl
cmpsl
ds
scas
stos
test
jmp
xor
pop
gs
or
mov
pop
push
pushf
add
test
adc
and
outsb
popf
mov
cmc
jp
mov
add
out
sti
dec
mov
sub
or
sbb
pop
sbb
mov
sbbb
jns
addr16
iret
jl
aas
repz
mov
jne
mov
push
sbb
shll
xchg
push
les
sub
xchg
add
gs
in
mov
or
in
lock
jle
daa
sbbl
cmpsl
inc
fstp
outsb
add
lods
test
daa
int
lcall
cmc
lds
mov
dec
in
stc
jns
repnz
lret
in
sti
and
xor
cmp
dec
sti
dec
mov
lea
xor
test
lret
cmp
inc
xchg
lods
jg
or
xor
push
add
ret
repz
jno
fcmovu
das
cli
xchg
les
ss
cs
lods
push
repnz
in
mov
dec
test
lahf
and
cmpsl
mov
fwait
lods
mov
dec
incb
xlat
insl
movsb
lds
xor
imul
push
call
mov
mov
repz
mov
xchg
dec
add
xor
dec
out
stc
lods
lods
push
js
ja
sub
mov
cmpsl
fisubrl
orb
push
sbb
xchg
adc
ret
pop
pop
js
dec
les
sbb
adc
pop
and
aaa
xchg
jns
fmul
pop
adc
push
xor
jge
divb
pop
sub
add
fisttpl
xor
mov
mov
push
pusha
idiv
cwtl
cmp
dec
sbb
sub
rcrl
xchg
dec
mov
aad
xor
mov
fldcw
dec
jl
dec
inc
xchg
cmp
inc
popa
cld
dec
mov
shlb
jb
push
cld
xchg
sbbb
insl
xchg
sbb
add
mov
xor
call
cmpsb
cmc
lods
inc
daa
shrb
clc
lcall
mov
dec
rorb
jo
push
cli
push
dec
mulb
sbb
push
cs
sbb
jnp
sub
arpl
push
inc
pushf
lods
in
xchg
scas
push
icebp
xor
push
push
es
add
in
mov
mov
rorl
mov
ja
inc
mov
jg
pop
push
aad
and
xor
dec
addr16
jle
adc
ja
pushf
mov
push
jbe
cs
jns
sub
inc
mov
ffreep
cmp
xchg
push
dec
sbb
mov
xchg
mov
push
sub
adc
cmp
and
jae
fs
add
or
ret
lds
dec
mov
sub
rorb
xor
sti
cmc
mov
dec
mov
or
cli
frstor
and
jbe
xor
push
incl
push
jb
mov
je
rclb
cmpsb
inc
call
xor
or
jle
je
jbe
mov
cmpsb
jmp
aad
push
out
sub
sbb
xor
aam
sbb
pop
jmp
iret
imull
in
les
mov
jb
cmc
adc
jno
dec
roll
dec
nop
outsb
sub
lea
xchg
xor
add
inc
mov
je
in
test
insb
jnp
jo
aaa
sub
pop
adc
cli
mov
daa
into
fs
mov
xchg
rol
vmwrite
pushf
push
jno
mov
dec
adc
mov
in
mov
cmp
sub
push
out
lcall
mov
cmpsl
cmp
rcll
cmpsl
add
jg
dec
jecxz
iret
dec
xlat
mov
mov
fistpll
daa
outsl
stc
dec
and
ret
mov
inc
push
xchg
int3
scas
gs
push
sbb
xchg
pop
adc
es
fidivl
scas
inc
push
or
in
pop
mov
inc
xor
jae
hlt
loopne
adc
sbb
pop
inc
pop
and
ss
push
jp
gs
stc
and
sub
incb
or
js
hlt
hlt
xchg
fcoml
push
xchg
pop
lcall
push
lret
stos
cltd
push
jne
out
xchg
or
loope
and
roll
ret
sbb
jecxz
gs
jns
icebp
jb
aas
loop
lahf
lock
inc
xor
mov
sbb
dec
and
sti
test
jns
xor
add
divb
jo
subb
cmpsl
and
pop
imul
push
mov
push
adc
pop
inc
movb
fidivl
cltd
sar
pop
mov
cmpb
jo
cmp
cmp
jge
in
mov
jno
imul
and
dec
repz
push
dec
xchg
lds
es
push
push
mov
in
cmc
dec
push
add
loopne
add
xor
outsl
scas
stos
sbb
jbe
inc
in
mov
sub
jmp
jae
shrb
mov
xchg
iret
push
leave
movsb
sub
push
jle
jae
jno
fbld
cltd
jnp
and
cltd
repz
imul
sbb
icebp
mov
in
pop
pop
jb
mov
ret
lahf
stos
hlt
cmp
shl
add
mov
out
mov
scas
and
ljmp
mov
sub
dec
mov
sbb
jno
mov
xchg
add
dec
push
dec
jne
fisubrs
adc
push
jg
mov
lock
scas
scas
or
push
fisubs
cmpb
stos
mov
adc
fidivl
inc
lcall
sbb
jno
insb
adc
lds
cwtl
dec
xchg
clc
repz
into
cmp
xor
pop
or
ret
and
insl
mov
outsl
mov
mov
xchg
cmpsl
sub
shrl
jbe
mov
lds
popl
or
xor
cli
mov
in
mov
xchg
cmp
scas
lods
jnp
cltd
xor
popf
inc
xchg
inc
lods
andl
lods
jb
pop
out
into
nop
dec
push
mov
insl
cmp
sbb
imul
dec
mov
xchg
adc
scas
inc
mov
sbb
in
les
cmpsl
repnz
push
xchg
mov
bound
and
push
push
push
sti
test
insl
aam
cmp
inc
arpl
mov
jmp
repnz
in
ja
sub
jmp
notb
cmp
cltd
sbb
ret
out
mov
paddsw
orb
adc
mov
lods
push
mov
mov
jecxz
jo
push
jle
push
fistpll
cmpsb
mov
mov
adc
repz
in
or
jb
loopne
ja
dec
push
ljmp
jbe
sbb
scas
stc
test
jecxz
push
jg
or
pop
ds
lock
enter
inc
add
nop
sbb
mov
xchg
jp
lret
adc
out
pop
adc
mov
ret
jbe
sbb
mov
pop
jmp
out
or
push
aas
call
pushl
pop
iret
mov
fildl
imul
test
out
bound
mov
cmp
cmp
cmpb
lock
xor
jne
xchg
enter
jl
sbb
cwtl
xchg
sbb
jbe
imul
ljmp
andb
mov
dec
and
jo
jmp
lret
xchg
imul
xor
sbb
mov
test
lret
and
dec
test
mov
lds
mov
lods
test
daa
ret
addr16
mov
cwtl
loopne
xchg
pusha
jl
pop
nop
fcomp
sbb
xchg
or
mov
lcall
or
idivl
cmp
out
pushf
scas
dec
mov
lock
jg
arpl
cmp
leave
fs
repz
fdivrs
sbb
mov
pop
jne
fidivs
jge
sub
mov
test
xchg
sbb
lret
mov
mov
xlat
and
les
test
fisubrl
jl
jmp
xchg
ja
push
shll
xor
arpl
mov
mov
inc
arpl
sbb
les
mov
mov
aas
sbb
les
xlat
nop
cmp
icebp
jge
cmp
mov
popa
xor
ret
outsb
mov
notl
movsb
and
add
jg
shll
out
mov
jl
jbe
out
sbb
daa
in
daa
fs
mov
divl
jo
cmp
call
in
cs
push
mov
cmp
adc
iret
dec
daa
push
gs
jecxz
mov
repnz
mov
test
and
mov
xchg
aas
jp
jno
ret
fisttps
push
lahf
pusha
insb
jmp
jne
sub
fbstp
sahf
lods
add
add
pop
pop
and
scas
test
loop
aaa
shlb
testb
sahf
call
dec
dec
loope
movsb
out
adc
inc
fisttpl
idivb
cld
mov
sbb
push
lods
mov
xchg
icebp
jp
mov
jmp
adc
jo
mov
bound
xchg
jcxz
jecxz
xchg
out
jmp
std
lret
movsb
js
dec
xor
cmpsl
pop
ret
je
hlt
and
ret
mov
ja
mov
sbb
mov
pop
dec
dec
into
shlb
and
das
popa
repnz
sbb
jp
inc
cmp
jecxz
jo
pop
pop
fdivl
into
repz
mov
cmp
sub
andb
imull
leave
jle
inc
js
dec
stos
jne
stc
cmpsb
leave
pop
jmp
mov
fcmovbe
mov
push
outsl
sahf
shl
nop
xchg
xor
jp
inc
and
add
fdivs
fistps
ds
xor
dec
mov
scas
call
icebp
xchg
mov
sbb
cwtl
adc
jae
fstpt
cmpsl
xchg
les
xor
mov
fs
or
xchg
add
sub
adc
add
ds
int
jle
das
pop
scas
leave
push
mov
push
xchg
ret
icebp
sub
xchg
cltd
clc
or
in
inc
mov
xlat
popf
lods
inc
push
sbbb
cld
call
cmp
xor
push
bound
jns
and
adc
cmpsl
lret
cld
enter
fwait
dec
pop
inc
ljmp
btc
mov
sbb
adc
out
xchg
test
inc
pusha
ds
stos
outsl
adc
jg
adc
cmp
and
inc
inc
inc
bound
int3
test
jae
testl
outsb
cmp
adc
aas
pop
popl
dec
call
dec
push
sub
xchg
fdivs
loop
push
pop
ja
jbe
lea
aaa
cwtl
inc
mov
les
mov
out
push
mov
fstpl
nop
movsb
cmp
xchg
imul
pop
adc
cmpsl
push
shlb
or
movsl
and
pop
push
mov
out
imul
inc
cmp
pop
jmp
add
loope
stc
out
jnp
roll
jg
rcll
repnz
add
in
inc
and
popf
push
mov
sbb
or
insb
jmp
xor
add
pusha
sub
dec
out
rorl
cli
jnp
icebp
lods
sbb
inc
inc
push
fbstp
fwait
lods
std
inc
pop
idivb
mov
cmp
in
jb
orl
jle
sbb
int3
mov
bound
shr
add
push
in
outsb
inc
out
clc
sub
cmpsl
jmp
add
xchg
inc
xor
in
and
xchg
in
sub
sub
or
stos
mov
pusha
cmp
je
stos
lods
pop
xor
mov
mov
mov
into
outsl
mov
adc
mov
mov
adc
addb
xchg
es
insl
mov
dec
pop
mov
and
roll
mov
add
inc
fucomi
cld
sub
cmp
push
jae
mov
add
pop
fwait
pop
rol
xor
mov
mov
xor
ds
mov
inc
add
mov
mov
ror
pusha
add
mov
pop
arpl
xlat
ficoml
mov
leave
out
adc
and
push
xchg
cwtl
sbb
inc
jns
jb
out
hlt
mov
mov
pop
sub
cmp
cmpsb
inc
out
rcl
mov
iret
divb
or
push
orb
mov
adc
add
jo
push
mov
mov
addr16
nop
xor
lret
xor
pop
fsubl
cmp
sarl
ds
jl
mov
xor
push
addr16
pop
mov
mov
lods
shll
push
int3
inc
loopne
cmpsb
xor
call
sbb
out
xchg
push
pop
outsb
add
or
add
pop
cmp
imul
dec
out
add
sbb
call
jae
jo
cmp
fucomip
lods
jecxz
stos
adc
fldenv
mov
in
and
xor
loop
filds
sti
inc
jl
sub
and
nop
add
xor
pop
inc
or
inc
hlt
test
pop
aas
sbb
pmaxsw
inc
and
js
es
stos
mov
aaa
pop
test
mov
les
xchg
cmp
lds
cld
cmp
mov
loopne
pop
sub
dec
cmpsb
add
mov
jl
inc
xor
push
lods
mov
test
sub
cmp
inc
inc
shlb
ret
sbb
adc
cs
les
cwtl
outsb
adc
pop
inc
sbb
jle
dec
dec
or
jge
adcl
mov
popa
mov
pop
sbb
jne
aad
jmp
dec
sub
jl
jp
mov
fnstenv
xor
or
sub
lods
mov
push
adc
lret
adc
lahf
int
jae
xchg
loop
das
test
cmc
fxch
int
clc
jl
xor
inc
sbb
mov
adc
outsl
je
add
sub
std
add
jp
or
dec
push
xorl
xchg
mov
icebp
and
aas
jnp
inc
call
push
orl
lahf
dec
out
lahf
lahf
push
push
js
inc
hlt
jnp
sahf
lds
std
lret
into
outsl
test
lret
testb
add
pop
mov
dec
lods
inc
mov
push
push
stos
or
inc
add
ror
xchg
sub
out
add
lock
test
sub
mov
xor
rcrl
std
xorb
push
out
f2xm1
jecxz
pop
outsb
jl
test
mov
dec
jmp
jecxz
movsb
mov
dec
mov
pop
jmp
les
je
out
inc
loop
xorl
adc
sub
jbe
jp
mov
loope
test
add
pushf
in
arpl
xor
inc
dec
ret
jno
or
and
sbb
sarb
insb
repz
jmp
aaa
iret
xchg
inc
loop
stos
push
lock
push
add
push
mov
lods
jo
pop
out
adc
sub
sub
jae
xchg
ljmp
hlt
mov
fldl2t
dec
repnz
cmp
clc
idiv
cwtl
movsl
sbb
sub
in
les
xor
loop
popa
mov
jle,pt
add
call
cmp
outsb
fnstsw
outsb
xor
xchg
mov
push
jmp
mov
movsb
pop
sub
mov
lret
outsb
insb
sub
addr16
dec
or
mov
or
jo
rcrb
leave
dec
rorl
mov
and
bound
mov
ja
sbb
mov
xchg
inc
push
popf
jp
data16
mov
xchg
sub
icebp
mov
sbb
mov
or
pop
std
in
cs
fs
push
das
movsl
pusha
jo
test
push
popf
mov
inc
and
mov
pop
aas
jg
jo
loopne
sbb
aas
rcrb
nop
fstps
mov
cmpsl
xchg
xorl
shrb
mov
mov
sar
test
lret
aad
scas
ja
jae
int
lods
lock
fidivrl
iret
lock
loope
mov
mov
imul
xchg
dec
push
call
jb
stos
cmp
subl
ss
adc
jno
pop
cmp
dec
xchg
ret
rcrb
sbb
mov
push
in
pushf
insl
xor
push
test
push
mov
dec
out
cld
xor
aad
adc
ds
or
adc
add
mov
fwait
fs
outsl
pop
out
in
push
mov
mov
fisubl
dec
ficoms
mov
js
push
mov
adc
int
dec
fists
pusha
int
jnp
ss
push
fwait
dec
faddl
or
jp
mov
mov
mov
jmp
mov
push
push
fcomip
xchg
pop
mov
mov
xor
rcr
sub
jbe
cld
xchg
mov
push
sahf
push
fsub
ja
jae
lahf
leave
cmc
inc
sbb
add
jb
or
add
repz
icebp
loopne
cmpsl
data16
inc
sbb
mov
or
push
dec
scas
imulb
push
xor
mov
and
shl
xchg
inc
int
data16
aas
push
cltd
cs
insl
and
push
mov
xchg
push
es
out
rcrl
or
mov
fisttpl
add
mov
insl
and
daa
hlt
pop
scas
inc
inc
and
lret
repz
fldenv
add
in
sbb
mov
push
stos
fcmove
jle
xchg
dec
sbb
xchg
sub
lret
push
jg
outsb
mov
adc
ja
xor
cwtl
mov
adc
mov
lcall
inc
xchg
test
sub
pop
imulb
xchg
add
enter
fildl
imull
cmp
cltd
dec
jle
stos
xchg
lret
mov
pop
das
pusha
inc
in
testl
ljmp
in
xchg
or
mov
sbb
inc
fdivs
jo
cwtl
xchg
mov
enter
add
pop
out
adc
jbe
sub
push
push
stc
pop
push
mov
lcall
loopne
repz
sbb
cmp
inc
aaa
test
add
mov
nop
xlat
xchg
in
pusha
subb
popf
sub
psrad
shlb
inc
add
popf
mov
in
xchg
je
jno
cwtl
xlat
leave
xchg
and
dec
fldl
push
xchg
xchg
xor
mov
pop
mov
and
rorl
add
mov
jp
rcrl
cld
push
mov
inc
adc
dec
push
dec
sti
pop
sahf
xor
push
and
pop
push
xor
mov
outsb
pop
mov
scas
pusha
sub
aam
ss
out
adcb
dec
mov
repnz
fadds
add
sbb
or
add
lret
hlt
movsb
mov
in
adc
lahf
out
or
ret
or
lahf
adc
adc
pop
pop
lock
mov
push
jmp
sti
aas
imul
jnp
cli
xchg
bnd
fidivrs
loopne
mov
and
push
enter
sub
push
sub
jne
dec
es
xchg
loope
sahf
cmp
jbe
or
test
pop
clts
popf
and
cld
push
and
sti
mov
dec
adcb
push
stos
out
dec
out
jecxz
movsb
add
insl
les
or
aad
mov
jmp
add
cmpsb
lock
fldcw
loope
into
and
xchg
stos
lods
mov
adc
lahf
sub
pop
mov
mov
xlat
and
je
and
int3
dec
testl
cld
add
daa
inc
prefetch
or
fcmovnb
push
daa
mov
inc
lret
mov
xchg
outsb
xchg
andb
cmp
inc
imul
out
mov
xchg
stos
nop
negb
test
stos
push
jae
xor
in
sarl
gs
sti
push
in
pop
fmul
int
ljmp
adc
enter
dec
or
in
pop
adc
stos
inc
adc
loopne
and
stos
sub
fucomp
shl
sbb
loop
sub
int3
loope
jp
add
stos
pop
cmp
cmpl
pop
insb
ss
jns
pop
fcoml
cwtl
mov
out
imul
imul
jecxz
hlt
movb
out
xchg
lods
bound
sub
cmp
fdivr
stos
mov
xor
lods
js
inc
test
mov
dec
fisubs
outsb
in
add
lock
inc
das
mov
jl
mov
imul
mov
xor
andl
lcall
push
add
sub
sbb
sub
dec
pop
insl
pop
sbb
aaa
push
hlt
mov
out
sub
inc
movsl
cmp
push
ficoml
scas
mov
mov
test
mov
push
adc
mov
cwtl
and
arpl
pop
popf
mov
add
cmpsb
nop
fidivrl
adc
es
push
mov
xrelease
push
or
ds
mov
mov
and
push
xchg
pop
aad
xchg
nop
dec
jo
push
nop
mov
mov
sbb
stos
lea
les
loop
lock
mov
sbb
subb
adc
mov
and
stos
sahf
mov
xor
lock
rcrl
push
ljmp
insb
add
mov
pop
jmp
or
add
ret
xchg
xchg
out
imull
sub
ret
js
sbb
ja,pn
add
jnp
sbb
pop
jnp
add
ret
pop
test
xchg
mov
push
test
test
ja
icebp
mov
addr16
add
sub
xchg
mov
adc
je
dec
ljmp
call
mov
mov
ss
inc
jge
stc
fildl
push
xchg
jg
adc
lahf
xlat
outsb
rcll
pop
or
push
add
or
xchg
insb
lods
cmp
cmpsl
inc
sahf
or
pop
pop
repz
in
and
outsb
sar
shlb
inc
mov
sub
sbb
inc
dec
cmpsb
cmp
pop
mov
sbb
push
pop
loop
popf
cmp
sbb
lret
jne
lds
mov
xchg
xchg
pop
stos
xchg
inc
daa
mov
mov
je
xlat
xorl
jg
xchg
popf
sbb
cmp
cli
pop
jb
scas
imul
pop
pop
mov
movl
pop
idivb
push
xorb
popa
dec
es
add
or
mov
frstor
cmpsl
mov
in
push
cmpl
pushl
sbb
in
xor
fsubrs
out
fwait
pop
pop
out
in
cld
sbb
sub
sbbl
std
xchg
jns
leave
mov
frstor
fdivrs
or
cmp
sahf
jno
pop
pop
xchg
push
in
popf
test
adc
jns
rcl
adc
gs
or
mov
ret
mov
ret
imul
fisubs
and
pop
push
fisubrl
dec
pop
mov
push
frstor
mov
and
mov
aad
lods
stos
jbe
popf
faddl
pand
push
fucomip
in
inc
in
lea
lds
xchg
fisubs
lods
lret
mov
in
mov
outsl
repz
inc
loope
sbb
mov
sbb
add
pop
mov
push
push
xor
or
cmpsb
dec
in
jg
sub
mov
add
aaa
push
or
xchg
mov
cs
loope
out
pop
imul
jmp
loope
jno
pop
movsb
xor
aaa
xchg
in
dec
sbb
inc
fisttpl
jecxz
mov
adc
jecxz
mov
sub
jg
mov
aaa
pop
aad
or
sbb
and
mov
ljmp
icebp
je
xchg
and
add
subl
cmc
movsl
add
aam
cmp
xor
adc
xor
mov
inc
in
rcrb
jo
pop
and
jle
jae
inc
pop
es
aaa
into
xchg
fdivs
std
dec
jp
pop
xor
loopne
xchg
test
inc
js
mov
cmp
jbe
andl
push
ret
lods
jo
jnp
mov
fistl
jnp
adc
jne
add
icebp
xorl
push
mov
xchg
les
add
cld
add
and
cmp
cmc
test
nop
push
dec
adc
loop,pt
sbb
adc
push
jmp
jg
jecxz
lods
sbb
inc
les
cmp
nop
daa
in
jno
dec
int
fbstp
call
add
hlt
and
xor
movsb
xor
xor
push
add
aas
call
aaa
decl
jnp
jns
aam
cmp
pusha
adcl
adc
xchg
sbb
cli
aaa
iret
or
pop
jl
stos
loop
xchg
inc
gs
je
add
sub
loope
and
sbb
push
xchg
arpl
xchg
mov
sbb
add
sbb
xchg
add
or
int3
mov
scas
push
cmpsl
fstpl
inc
ljmp
pop
and
pop
jg
call
sahf
rolb
dec
dec
out
mov
jno
insl
scas
cltd
lods
imul
call
jnp
pop
jb
sbb
jns
in
shlb
pop
rorb
insb
inc
or
test
shl
xor
stos
in
jp
aas
movl
adc
push
mov
aaa
pop
pop
and
pop
xchg
push
loope
jo
insb
subl
cmp
pop
and
fwait
aad
dec
dec
adc
adc
inc
sub
jo
cmp
lret
hlt
mov
mov
lcall
mov
cmpsb
cmp
xor
lock
dec
inc
pushf
clc
cmpl
insl
push
ficoms
lahf
mull
jbe
cmpl
std
inc
loope
mov
ret
jmp
stc
and
pop
icebp
out
pop
mov
into
inc
jns
mov
gs
incb
mov
add
pop
cmpl
push
icebp
orl
jns
movsb
sbbb
push
stc
mov
testb
fdivrs
fiaddl
adc
xor
arpl
mov
dec
imul
dec
jbe
in
inc
push
je
or
mov
in
out
jle
jl
hlt
in
mov
rolb
and
dec
inc
pop
dec
pop
sub
and
pop
xor
push
js
andl
cmp
add
dec
lret
xor
sub
mov
jno
test
lahf
add
fcmovu
je
repz
xchg
mov
inc
fstpt
fdivs
mov
fildl
andl
jae
add
add
fildl
mov
into
pop
fdivr
jge
negb
dec
sti
jnp
in
xchg
and
push
into
faddl
pop
lcall
loop
pop
pop
sub
iret
cmpsl
fidivrl
push
jle
jo
jae
popl
pop
fucomip
test
push
inc
cmp
add
jg
sbb
jecxz
cmp
sbb
std
insb
cld
mov
cmp
pop
scas
mov
adcb
cmp
popf
outsl
xchg
das
dec
fs
sbb
pop
inc
lret
sub
ss
ja
test
jg
xor
jb
push
push
push
je
orb
out
jns
pop
push
lcall
adc
mov
xlat
rol
push
xor
mov
push
cltd
ret
xor
int3
movsb
jno
fs
aas
mov
inc
push
dec
jge
add
jnp
sbb
mov
clc
cmp
or
loopne
scas
mov
push
and
xchg
imul
adc
shlb
mov
lock
cs
pop
leave
aas
adc
incb
shll
pusha
fnstenv
sbb
daa
call
or
mov
mov
sahf
fsubrs
cmpsl
pusha
jmp
cs
mov
fcmove
bound
cmc
in
test
pop
adc
jae
aas
add
dec
push
call
paddusw
mov
sbb
jnp
and
int3
arpl
lret
ljmp
mov
aad
mov
mov
fiaddl
test
iret
push
mov
inc
mov
ja
mov
push
inc
test
loope
jo
outsl
jp
retw
nop
mov
mov
push
cmpsb
addl
mov
bound
rcrl
push
scas
bound
xor
imul
out
pop
inc
mov
ljmp
bound
loop
xor
nop
outsb
outsl
lock
sbb
add
mov
dec
dec
popa
sub
cmp
ficomps
and
test
lret
int
mov
push
stos
ficompl
push
movl
jmp
call
mov
test
sub
shrb
cmpsb
dec
lret
xchg
es
jns
jo
xor
push
repz
dec
mov
and
int
cwtl
test
add
int3
mov
and
pop
adc
cmc
fs
push
daa
mov
shlb
push
mulb
xchg
and
cld
ja
rcrl
sbb
call
xor
push
ljmp
mov
sub
push
gs
jl
jg
das
insb
and
fcmovne
in
rcrb
cmpsl
andl
sbb
jbe
push
xor
sahf
icebp
sub
js
add
jb
adc
pop
or
mov
outsb
sub
enter
jle
movsl
scas
mov
shrb
scas
jnp
nop
mov
mov
xchg
popa
xor
stos
xchg
roll
inc
mov
fdivr
loopne
mov
mov
pop
insb
repz
push
popf
jnp
inc
fstl
jp
test
mov
lret
lret
pop
jle
pop
call
cltd
xor
xor
pop
add
mov
pushw
add
or
arpl
mov
or
sbb
popa
flds
push
xor
popf
add
sti
inc
jecxz
fiadds
xchg
pop
cld
or
lock
test
inc
cmpsb
dec
sbb
aas
adc
dec
sub
or
and
ret
xor
scas
sbb
rcll
lods
push
loop
adc
jns
pop
addr16
inc
insl
sbbl
punpckldq
fildll
cmp
arpl
cli
sbb
iret
sbb
xchg
cs
inc
push
inc
dec
fs
or
inc
xchg
pop
cld
jg
cmp
lods
jecxz
jnp
out
mov
push
xor
jmp
in
fsubrp
sbbb
pop
shrb
pop
cmp
push
inc
sbb
decb
cmp
dec
mov
jnp
inc
pusha
dec
sub
and
mov
mov
insl
mov
fxtract
push
add
pushl
fidivl
shr
jbe
in
jnp
faddl
in
dec
adc
cli
adc
dec
mov
ss
cld
xchg
add
bound
xchg
mov
lahf
in
push
mov
xor
push
rcrb
shlb
sbb
daa
mov
outsl
add
repnz
push
call
inc
popa
sbb
hlt
push
mov
dec
cvtps2pi
inc
and
push
push
pop
popa
lret
or
js
pop
push
cmpsb
inc
cmpsl
dec
bound
vhaddpd
or
push
pop
lods
shr
cs
xor
adc
clc
push
inc
push
int3
jle
xor
adc
dec
fisubl
dec
sbb
leave
pop
clc
sahf
fs
fstps
dec
push
inc
pop
mov
insb
sub
fisubl
push
pop
cmp
test
in
test
hlt
incb
aam
mov
sti
mov
pop
xor
and
add
ljmp
fcomip
mov
jne
lret
lret
add
mov
xchg
mov
arpl
mov
mov
call
shll
sar
mov
mov
or
fpatan
adc
or
xchg
shl
mov
movsb
addb
pop
popf
stc
pop
enter
cmp
nop
lods
dec
lcall
call
sbb
jbe
mov
inc
pop
add
mov
sbb
add
hlt
shlb
cmp
sub
test
gs
arpl
mov
xor
and
fldcw
icebp
pusha
cmpb
adc
out
sub
xor
adc
push
jp
cmp
popa
inc
js
mov
gs
test
imul
repz
fucomp
sahf
or
mov
scas
mov
jns
call
xchg
dec
dec
ljmp
jecxz
sbb
push
mov
mov
mov
out
fimull
sbb
fdivr
pop
dec
mov
mov
pop
or
jae
enter
pop
jecxz
aam
test
int
rorb
push
cmp
sbb
fldl
cmp
jo
inc
cmp
mov
add
sbb
or
inc
fisubl
shr
push
add
jns
jp
sub
sub
movsb
jnp
dec
add
jnp
add
sbb
xchg
fs
xchg
cmpsl
dec
movsb
idiv
jns
pop
push
shrl
sub
insb
addr16
xchg
cmp
fldt
int3
jecxz
test
cmc
lods
or
aad
cmp
cmp
mov
add
cld
inc
cmp
mov
cmp
aas
mov
dec
or
test
dec
imul
dec
and
out
dec
sbbb
mov
jnp
fstpl
fistpll
fucomi
xchg
push
jg
and
add
out
or
pop
mov
cmp
and
xchg
push
fmulp
pop
shl
lcall
mov
test
int
test
push
lods
jne
cltd
cmp
push
jae
mov
push
int3
cmpsb
daa
lock
clc
mov
cs
sbbl
rcl
rolb
xchg
pop
mov
movsb
push
les
jmp
mov
test
mov
shlb
aaa
mov
xchg
inc
dec
lock
lea
test
in
mov
adc
lahf
xor
mov
push
arpl
adc
jno
xor
mov
jb
xchg
xor
rcr
xor
push
pop
loope
cmpsl
dec
ret
adc
cs
sarl
icebp
sahf
arpl
xchg
cmpsl
push
push
xchg
push
inc
clc
lcall
mov
gs
ljmp
insb
shrl
je
scas
in
mov
jmp
jno
mov
aas
fwait
ljmp
mov
jp
addr16
mov
into
sbbl
jge
push
js
mov
nop
ljmp
mov
ret
mov
int3
xor
push
jno
lahf
into
enter
push
push
or
ret
xor
mov
out
push
fimuls
mov
aaa
push
sbb
cmpsb
lock
out
leave
xchg
add
mov
adc
leave
pop
mov
and
fiaddl
inc
stos
push
cmp
ja
inc
fs
dec
pop
aam
adc
add
push
inc
push
dec
mov
push
mov
mov
test
incb
inc
dec
mov
jb
cli
mov
insb
ss
push
test
xor
test
and
les
dec
push
jbe
push
push
mov
aas
push
stos
lds
test
dec
push
and
and
jno
pop
icebp
insl
gs
push
loop
aaa
andb
imul
dec
jmp
mov
cld
stos
push
adc
fs
fs
mov
imul
sbb
push
aad
enter
fidivs
data16
iret
xlat
xor
pop
adc
mov
in
iret
fdivrp
daa
lods
push
dec
testb
inc
dec
xchg
sbb
or
out
push
mov
cmp
pop
mov
sub
inc
popa
sub
adc
lds
addr16
push
pop
stos
jbe
jne
dec
xor
cwtl
subb
leave
mov
mov
adc
stc
mov
roll
dec
cltd
arpl
notb
and
fs
push
dec
aad
jne
std
dec
push
jns
add
out
xor
add
inc
xor
sti
mov
xor
dec
fimull
clc
ficompl
xchg
jecxz
xchg
in
dec
push
jno
loop
stc
out
xchg
xchg
lods
repnz
lods
pop
outsb
mov
xchg
and
jo
rcll
lds
xorb
xchg
scas
psrad
scas
dec
lods
repz
pop
push
jbe
and
punpckldq
rol
fisttps
imul
inc
out
test
int
sbb
pop
pop
fistps
ss
push
ja
aas
jae
stos
pushf
fwait
loop
aaa
inc
loopne
stos
sahf
sbb
sbb
scas
dec
adc
fdivrs
sbb
enter
or
sub
scas
add
jecxz
adc
jne
push
cmpsl
pop
pop
dec
adc
lahf
outsb
movsl
addr16
rcrb
pop
push
nop
xorl
test
push
sub
call
decl
xchg
cs
into
ss
sbb
repnz
aas
stos
mov
inc
mov
mov
inc
in
mov
xchg
ljmp
mov
cmpps
insl
jge
adc
pop
leave
enter
fildll
sbb
add
lds
mov
inc
loopne
je
out
mov
mov
inc
rcr
aaa
jmp
mov
push
gs
stc
inc
xorb
lcall
ljmp
out
and
cli
es
fistl
inc
fwait
roll
inc
push
xchg
movsb
repnz
into
xor
enterw
xchg
lahf
neg
mov
pushl
aaa
cli
in
sbb
arpl
sbb
bound
xlat
jecxz
out
dec
push
addb
js
gs
and
adc
mov
mov
jg
repnz
or
imul
mov
adc
outsb
cmp
into
fdivrl
or
adc
mov
lcall
add
inc
lcall
shrl
mov
out
dec
das
scas
or
pop
mov
jmp
sub
pop
cltd
dec
mov
inc
cmp
mov
push
adc
bound
ret
or
pop
mov
mov
cld
lret
mov
adc
cmp
xchg
add
icebp
pop
sbb
add
mov
ret
fisttps
test
dec
ds
insb
repnz
popa
mov
fists
test
xchg
clc
or
and
int
iret
adc
and
sub
filds
push
lret
dec
in
das
add
sbb
mov
test
dec
test
mov
jo
push
lods
insl
dec
lahf
lret
and
cs
popa
sbb
jge
das
pop
jge
icebp
stos
add
cmp
loope
adc
jecxz
pop
pusha
sbb
sub
and
clc
daa
or
jge
mov
jne
xchg
sub
divb
cmp
jnp
push
cs
mov
mov
int
aaa
push
push
jo
int
pop
shll
lods
sti
out
and
movq
pop
popl
lret
lcall
sub
jp
aam
sbb
cmp
imul
ret
add
xor
push
lods
pusha
loopne
jl
fsubrs
lea
xlat
outsl
idivb
cmp
ret
rcll
jp
es
mov
sub
push
lods
push
mov
jo
lods
in
adc
data16
cmpb
jecxz
jnp
js
dec
shrl
cld
test
inc
outsl
loop
jge
jb
pop
test
lret
outsb
inc
shll
ret
sahf
sub
adc
ja
cs
es
loope
into
jo
adc
sub
xchg
xchg
sahf
mov
imul
jb
mov
pop
sub
and
mov
mov
or
sub
enter
idivb
push
cmp
je
sub
push
inc
and
cmp
popa
jecxz
jbe
addl
add
nop
test
lods
jae
loope
lret
jne
arpl
dec
or
push
flds
inc
dec
out
and
mov
xor
mov
addb
std
aam
insl
mov
lock
xor
adcl
dec
xchg
or
add
push
addr16
cltd
xlat
add
inc
inc
hlt
rcrl
and
or
stos
xchg
nop
or
inc
scas
or
fsin
hlt
jmp
and
pop
test
fwait
cmp
test
cltd
push
jmp
sti
fdivs
divps
sahf
popf
mov
dec
daa
scas
popa
xor
ret
dec
xchg
xchg
ja
jb
clc
push
mov
xchg
jle
enter
mov
jmp
mov
pop
jl
lcall
loope
test
fidivrs
xchg
dec
cmp
fists
cmp
or
push
push
push
aaa
mov
out
cld
mull
push
lcall
lcall
adc
jp
fs
lcall
es
jmp
xor
jmp
cmpsb
stos
mov
hlt
out
xor
xor
test
cmp
inc
sbbb
add
jmp
xchg
sub
sub
mov
sub
xchg
shl
ret
and
and
iret
xchg
xchg
adc
jl
jecxz
jno
repz
add
push
mov
cmp
imul
jo
or
jbe
cmpsl
pop
pushf
out
cwtl
jns
xchg
mov
and
rorb
jo
xor
cltd
ds
shr
adc
imull
ljmp
iret
dec
loope
push
jo
jmp
jb
dec
inc
aaa
xchg
out
add
roll
inc
xor
push
cwtl
loopne
dec
adc
fistl
ret
sbb
cmc
dec
fcmovbe
movsl
xchg
ds
hlt
inc
jge
jae
pop
xchg
inc
aas
fs
xchg
pop
aad
jae
enter
mov
pushf
repz
jmp
aam
fs
pusha
sub
adc
push
pushl
adc
mov
out
test
jbe
pop
mov
jo
aas
lock
lcall
popf
xor
jo
add
js
jecxz
call
out
add
popf
lea
std
add
jns
outsl
push
or
leave
loop
addr16
push
fs
test
jbe
sub
shll
roll
cltd
xor
or
inc
sub
cmp
jae
push
int
popf
mov
getsec
lods
cli
shl
jg
sbb
loopne
add
push
xlat
lods
dec
cmc
mov
testb
add
int
into
add
mov
nop
in
inc
rcll
inc
push
sbb
shrl
jb
pop
ds
scas
fwait
lods
xchg
ds
cwtl
outsl
push
lret
loop
bound
lcall
shlb
lret
mov
sarl
inc
jmp
mov
fwait
andb
inc
cmp
jnp
dec
xchg
call
mov
movsb
inc
dec
loop
rclb
cmpsl
add
jbe
mov
lds
jno
daa
iret
js
sbb
int
xchg
ljmp
dec
cmp
movsl
dec
sub
out
lea
mov
mov
std
punpckhdq
sbb
loope
mov
call
mov
and
inc
popa
jg
add
stc
ds
nop
jno
repz
mov
pusha
or
ficomps
and
jmp
adc
leave
pop
call
dec
ss
int
xor
inc
lret
int
jno
cltd
call
cmpsl
hlt
ljmp
addr16
stos
push
and
mov
inc
repz
inc
pushl
push
push
cmp
mov
lret
cmp
and
inc
inc
mov
jae
adc
jp
aas
call
xchg
test
cwtl
int3
orb
pop
movsb
add
or
pushf
cmc
inc
fmull
xor
ss
jns
xor
mov
xchg
insl
jnp
push
lods
mov
test
outsb
jl
jne
movsl
sbbl
out
cmp
je
jge
jl
xor
popa
nop
add
xor
pop
hlt
in
mov
xchg
sub
cmp
imul
xor
fnstenv
sbb
dec
xchg
negl
mov
jae
push
dec
pop
jg
add
jne
mov
mov
in
andl
push
jl
imull
xor
fisttps
mov
mov
or
ds
add
nop
daa
aam
xchg
sub
sub
popf
pop
in
mov
iret
xchg
mov
test
push
xor
mov
ret
push
inc
outsb
xchg
cwtl
das
or
fidivs
test
lcall
loope
test
lret
cbtw
gs
or
aaa
mov
sarl
push
and
scas
inc
nop
mov
inc
xlat
add
jle
scas
mov
mov
popa
enterw
inc
xlat
lcall
cmp
push
out
jbe,pt
scas
mov
pop
mov
fs
push
rclb
mov
jb
dec
xor
mov
rorl
mov
cli
out
incb
sbbb
roll
lcall
lcall
mov
push
stos
inc
xchg
push
out
std
dec
fildll
call
lods
inc
subb
pop
pop
mov
mov
loopne
sbb
fsubs
cmp
mov
push
mov
fnsave
out
or
adc
dec
outsl
xor
pushf
dec
mov
jnp
and
jb
add
stc
nop
sub
xchg
test
mov
in
test
in
aad
sti
addr16
sub
inc
xlat
push
std
sub
js,pn
cmc
test
iret
mov
add
mov
dec
loopne
pop
adc
inc
mov
aad
loop
rol
repnz
pop
adc
jge
je
cli
movsl
jp
ljmp
lret
xchg
add
jno
dec
xor
pop
repnz
jns
pop
fadd
pop
or
outsb
lcall
mov
imul
mov
aam
sbb
ljmp
pop
cmp
fsubrs
fwait
aam
lret
aad
jmp
mov
aaa
mov
out
inc
mov
jne
xchg
adc
push
movsl
xchg
int
clc
bound
movsl
xchg
sbb
orl
ret
loope
adc
movsl
push
imul
fdivl
pop
jns
mov
sbb
fldt
sub
mov
ja
jnp
xor
inc
cltd
xlat
outsb
iret
or
lret
bound
mov
cmp
outsl
or
iret
mov
fmull
scas
aas
fdivl
out
jmpw
sub
jecxz
mov
jnp
jge
montmul
cmpsb
add
jmp
push
jp
ss
outsl
push
ja
fbstp
cwtl
fnstenv
sub
pusha
es
mov
fstps
mov
mov
inc
fcoml
out
xchg
jp
mov
fiaddl
or
jecxz
jo
xor
adc
mov
arpl
leave
pusha
pop
xchg
sahf
mov
gs
data16
dec
add
cmpsl
ds
fisttps
pop
mov
mov
xor
and
push
xor
mov
into
inc
fdivr
mov
lds
out
pop
enter
ret
repz
pusha
pop
sub
pop
enter
rcrl
pop
sub
xchg
ret
repz
ja
pop
mov
popf
xor
sub
movsb
pusha
xor
add
mov
jmp
pop
ss
cs
repz
pop
sahf
pop
xor
xlat
outsb
hlt
mov
push
jmp
ss
sub
sub
jmp
mov
icebp
cmp
sahf
insb
cs
xchg
pop
mov
sbb
les
clc
cmp
mov
pop
mov
in
loope
inc
ds
push
popa
mov
int3
call
ss
out
data16
pop
mov
mov
scas
pop
xor
inc
stc
mov
jne
pop
xor
movb
rol
cmc
sub
inc
popa
sub
jbe
rcr
cmc
rcr
cmc
sub
insb
popa
sub
ds
rclb
cmc
sub
aam
sub
repnz
mov
scas
inc
out
xor
arpl
aas
arpl
imul
gs
jle
mov
jno
ljmp
mov
dec
loop
mov
aam
cmp
imul
jne
in
insl
add
cmp
pop
lock
iret
data16
imul
mov
cmc
mov
dec
out
addl
into
mov
jns
xchg
adcl
gs
xchg
call
les
insl
add
push
sbbl
lahf
in
test
xchg
shrl
pop
dec
loop
pop
fbstp
sahf
sbbl
lret
pop
imul
pop
testl
lret
pop
fbstp
pop
dec
loop
fwait
imul
cltd
and
nop
pop
jne
popl
mov
in
cwtl
pop
iret
data16
lcall
mov
jne
cld
cmpsl
pushf
dec
out
jae
jl
inc
icebp
mov
sbb
cltd
cltd
xor
adc
int
in
mov
insl
inc
fistpl
mov
sbb
test
ss
rolb
add
fstl
mov
jns
ja
sbb
or
cwtl
sarb
stos
and
mov
xor
in
mov
movsl
add
jno
rorl
notb
jecxz
adc
jg
scas
mov
fsubrl
pop
sahf
cli
cld
xchg
xor
repnz
scas
in
sbb
call
xor
in
test
jo
mov
push
xchg
repz
mov
jge
dec
dec
loope
add
aaa
mov
int
xor
or
test
add
jg
and
cmp
cmp
test
test
xchg
fimull
mov
xor
dec
out
in
ds
test
xor
jo
in
ss
test
ljmp
mov
or
jo
push
jmp
les
pop
jne
insb
add
mov
and
add
or
push
test
pusha
xchg
test
std
daa
mov
and
call
jge
xchg
sub
cwtl
xchg
sub
in
jl
out
data16
mov
jo
in
insl
fwait
icebp
mov
mov
mov
fldl2t
orb
sbb
push
cmpsl
cmp
aam
lahf
mov
cmc
insl
test
sarb
push
add
adc
jnp
leave
loopne
pushf
stos
inc
lret
lods
jecxz
ret
icebp
mov
xor
jecxz
mov
outsl
sahf
xlat
or
jmp
add
aad
pop
gs
mov
or
rep
jno
fcoml
roll
sbbl
dec
adc
cmpl
sbb
ss
shr
sub
rorl
stos
dec
loope
pushf
out
int
sbb
xor
adcb
push
mov
orb
jp
adc
enter
and
ss
dec
jmp
pop
jo
or
lret
idivl
jne
dec
insl
add
xor
addr16
aam
fidivs
inc
add
imul
jnp
out
insl
add
sbb
mov
cmp
cs
repz
mov
mov
or
out
test
lahf
ss
imul
jo
mov
mov
test
adc
pop
or
orb
or
cwtl
xchg
mov
jge
jl
lcall
push
jp
aaa
sub
xlat
jno
dec
mov
es
fidivs
and
fwait
xchg
xor
sub
mov
adc
mov
clc
or
dec
mov
push
aam
mov
cli
lock
imul
adc
fsts
push
cmp
test
lret
xlat
frstor
loope
jns
int3
scas
push
mov
icebp
int3
fs
adc
sahf
adcl
jne
adc
cmpsb
jmp
inc
cltd
in
cmp
ret
fisttpll
js
lock
xchg
mov
mov
sbb
dec
out
test
inc
in
orb
jbe
cwtl
sar
stos
mov
pop
ror
jb
fisubrl
faddp
dec
push
iret
xor
inc
lret
bound
xchg
mov
movsb
pop
repz
push
add
mov
faddl
rcr
loope
mov
data16
pop
xchg
js
mov
loopne
cwtl
imul
loopne
aaa
xchg
adc
mov
clc
push
xchg
add
out
mov
icebp
and
call
scas
maskmovq
imull
sub
pop
andl
imul
xchg
push
add
xchg
fisttps
mov
std
and
jge
test
jmp
pop
xchg
jns
mov
inc
jge
mov
cmp
pop
repz
rorb
jge
xor
jg
adc
sar
ss
inc
out
and
loope
add
call
dec
adc
shlb
sahf
lods
pop
pushl
cmp
adc
rcrl
cmp
jne
xchg
out
rcl
pop
adc
xor
out
push
loope,pt
and
cmp
sub
fcomps
cmp
repnz
arpl
xchg
jge
lcall
cmc
out
fimull
leave
and
mov
fidivs
lock
hlt
sbb
mov
divb
daa
add
fsubs
call
lds
dec
cmp
push
ja
lret
xor
sbb
out
repz
mov
cmc
mov
jmp
inc
xchg
aas
and
jge
inc
and
xor
cltd
xor
lods
ret
pusha
dec
mov
mov
jb
jle
loop
lahf
mov
push
pop
mov
hlt
lds
mov
sbb
mov
out
pop
stos
mov
or
arpl
xchg
sub
flds
jmp
mov
lahf
les
lcall
xchg
mov
inc
add
cmp
mov
call
pop
inc
adc
cmp
mov
sub
push
or
fcmovbe
push
in
mov
mov
inc
mov
jmp
xchg
mov
mov
scas
jbe
mov
push
popa
scas
cmp
xchg
sub
jle
lcall
jne
push
cli
and
inc
jnp
js
int
rcrl
imul
bnd
mov
testb
inc
lds
gs
rorl
repnz
mov
or
loope
dec
insl
fwait
push
sbb
mov
jbe
jb
push
lcall
mov
cmp
or
sbb
nop
in
cmpb
mov
mov
mov
fwait
inc
pop
mov
pop
test
push
imul
pop
jb
pop
lea
adc
xchg
inc
ss
jns
sbb
pop
rolb
sub
ljmp
test
nop
dec
jecxz
das
das
add
add
dec
cwtl
lcall
std
sub
mov
imul
stos
fcoms
adc
ret
inc
popa
lds
pusha
jno
and
imull
iret
ja
adc
lret
out
sarl
mov
shlb
dec
xchg
movsl
stos
gs
sbb
dec
insl
leave
mov
jp
mov
cmpsb
xchg
dec
in
sub
lahf
das
xchg
ja
in
pop
scas
mov
mov
fdivp
cmpb
push
mov
fldcw
sbb
xchg
mov
std
das
ljmp
cmp
pop
popa
outsb
aam
and
data16
jbe
ss
movsb
ja
pushf
ss
sub
sub
or
inc
xchg
loopne
sub
inc
jl
jge
fs
sbb
pop
adc
loopne
dec
push
leave
push
cmp
in
mov
xchg
scas
je
or
daa
clc
scas
mov
adc
sarl
inc
into
inc
adc
pop
mov
add
outsl
mov
cs
test
mov
addl
jp
fs
cld
xor
jb
cltd
xor
loopne
js
cmpsb
ret
sbb
mulb
sub
dec
icebp
rorb
stc
xchg
sarb
mov
inc
lds
sbb
out
and
in
aas
shrl
stos
xchg
mov
in
andl
jecxz,pt
std
xchg
xchg
mov
testb
call
jge
mov
ret
in
xchg
jl
add
mov
mov
mov
cmp
aas
test
cmpsb
loopne
testl
scas
jae
sub
pop
add
inc
insl
sub
lods
cmp
ret
add
mov
ret
stos
shr
lret
aad
shlb
call
mov
push
movsl
outsb
jae
sbb
cmp
pushf
jg
clc
cwtl
insb
mov
icebp
mov
imul
imul
cmpsb
insb
fstpl
xchg
mov
push
addb
push
push
stos
pop
arpl
pop
int3
pop
into
in
dec
inc
pop
scas
xlat
pushl
rolb
imul
lret
sbb
test
mov
arpl
jp
jne
pop
stos
into
xchg
pop
mov
xlat
xchg
push
aam
mov
cli
push
dec
cmp
push
pusha
ss
and
and
cmp
stos
inc
fistl
in
or
mov
mov
call
stc
das
and
cmpb
loop
pop
jle
mov
dec
icebp
mov
pop
rolb
les
and
out
insb
repz
mov
std
sub
or
cmp
xor
jecxz
push
push
in
push
mov
and
dec
xchg
fstpt
and
mov
pop
daa
jbe
jns
mov
push
push
iret
mov
in
and
inc
inc
js
cmp
les
xchg
and
adc
adc
cmpsb
pop
sbb
xchg
jl
outsb
das
fsubrs
push
ja
inc
xlat
jo
sarl
xchg
jmp
adc
gs
xchg
loope
cmp
mov
push
add
scas
inc
or
xchg
mov
xor
push
mov
xchg
mov
push
loop
xchg
mov
or
sbb
adc
mov
add
loope
mov
inc
negl
pop
out
repz
fsts
sbb
pop
je
lcall
inc
mov
test
das
xchg
jnp
fnstenv
or
lds
cmpsl
das
mov
add
cmp
xor
jno
push
inc
mov
and
push
cmpsl
pop
pop
mov
mov
lcall
mov
mov
mov
clc
xor
add
aaa
pushf
int
cmp
neg
dec
int
fiadds
mov
cld
add
cld
mov
out
sbb
mov
sti
out
out
sub
daa
or
daa
aad
fidivrl
mov
sti
loope
in
mov
add
mov
in
and
nop
jp
cmp
xchg
sub
out
xor
bound
and
movsl
sbb
push
adc
jbe
add
mov
or
and
rorl
inc
fimuls
sub
inc
sbb
orl
jmp
xchg
mov
jg
cltd
or
sub
jmp
and
sbb
lahf
aaa
icebp
and
loopne
in
popa
or
xor
sbb
ja
push
jns
lods
adc
xchg
int3
xor
mov
repnz
pop
mov
test
jb
mov
out
cs
les
pop
aam
jns
sbb
je
mov
rolb
cmp
pushf
arpl
jne
mov
fcoms
mov
add
pop
rcrb
fistl
dec
inc
mov
mov
out
xchg
inc
push
lret
bound
es
or
push
push
mov
out
test
pop
sub
iret
inc
push
aad
mov
push
mov
lahf
mov
loope
mov
clc
negl
and
cs
sub
jbe
out
sbb
cmp
decl
or
jecxz
dec
jae
insl
xor
adc
stc
std
das
cmp
push
enter
repnz
shrb
sbb
scas
popa
or
repnz
xchg
mov
popf
scas
popa
sbb
xchg
lods
jne
movsl
dec
pushf
xchg
lea
jle
jl
clc
leave
inc
leave
outsl
mov
cmp
mov
loope
mov
mov
les
call
stos
jmp
insl
sbb
inc
or
pop
xchg
add
push
pop
adc
repnz
pop
fildll
dec
fwait
xchg
mov
popf
mov
hlt
xchg
nop
shlb
dec
fsubs
adc
sahf
inc
mov
jo
mov
pop
ret
rorb
imul
push
mov
mov
add
xchg
jnp
in
mov
jmp
dec
cmp
imul
fldl
cwtl
lea
or
xlat
pop
loop
sbb
sbbb
mov
xor
xchg
dec
aam
lods
in
testb
push
or
and
xchg
nop
and
xchg
in
pushf
xchg
sbb
pop
jns
or
and
shrl
push
jl
or
sub
cwtl
je
jns
adc
xchg
addr16
cmp
dec
jp
cltd
xorl
or
push
jae
addr16
lcall
inc
inc
sahf
xchg
inc
push
lahf
mov
test
jae
mov
jae
jae,pn
imul
lcall
dec
jne
out
push
sub
mov
insb
cmpsl
jns,pt
hlt
sbb
jne
fsubrs
push
adc
inc
cmp
sub
js
rorb
adc
and
mov
mov
xchg
dec
gs
lods
call
inc
frstor
fdiv
sub
dec
lods
enter
cltd
jno
mov
mov
fs
push
lret
int
sbb
cltd
shll
int3
sbb
ret
fimuls
cmp
mov
into
fwait
clc
sub
shrl
mov
lcall
jg
jge
xchg
imul
test
fisttps
cli
loopne
jbe
bound
aad
jmp
jge
sub
add
push
dec
in
mov
movb
mov
xchg
xchg
addl
cwtl
xor
out
and
mov
movl
into
mov
stos
sub
test
xchg
cltd
data16
add
movl
or
aas
mov
in
add
out
or
popf
scas
out
push
paddd
add
pop
fisttps
cmp
cwtl
gs
jae
and
sbb
sbb
add
aaa
jmp
mov
call
test
cmp
enter
iret
sbb
faddp
mov
and
lods
mov
or
add
xchg
test
clc
mov
rorb
inc
fnstcw
loopne
jns
fsubrl
js
enter
clc
xchg
jle
push
clc
and
xchg
subb
push
call
adc
xor
test
cmp
aaa
int
outsl
loopne
cmp
cld
test
in
or
pop
cmp
jg
pop
inc
mov
loope
dec
or
stos
dec
mov
pushl
fcmovne
cmp
jge
cmp
lock
dec
in
adc
adc
add
adc
ljmp
bound
loopne
lods
xor
push
mov
jmp
jbe
cmp
ss
sahf
hlt
jmp
jbe
repnz
insb
movsl
out
jp
int3
testb
ljmp
pop
int
mov
pop
mov
movsb
hlt
dec
adc
pop
enter
sub
sub
jecxz
sahf
sub
pop
adc
arpl
cli
xchg
pop
inc
fwait
subb
les
jge
addr16
push
dec
cltd
subb
push
adc
push
xor
repnz
repz
mov
loop
mov
sbb
loope
stos
les
test
roll
fwait
je
repnz
out
push
mov
add
mov
stos
xchg
fs
add
cltd
movsb
dec
push
pop
loop
mov
punpcklbw
mov
adc
or
sbb
pop
out
xchg
clc
fsts
or
int
inc
lahf
sub
adc
shll
add
fisubs
or
push
aam
and
xchg
mov
aad
and
call
aam
mov
out
mov
adc
les
pop
mov
ljmp
outsb
movsb
arpl
insb
movl
imul
mov
add
ret
inc
mov
mov
xchg
out
pushf
subl
pop
es
mov
loope
aaa
mov
cltd
pop
cli
ss
adc
push
cmp
outsl
pop
mov
ret
mov
cmc
xchg
jp
sti
mov
sbbb
sbb
dec
cwtl
jge
sub
negl
mov
pop
sbb
imull
ljmp
xchg
mov
push
int3
mov
pop
aam
out
adc
mov
adc
clc
jb
fsts
cmp
or
movsb
aas
cmp
jmp
fistl
cmp
mov
or
pop
sbb
ds
xchg
jl
fmull
cmp
mov
ret
inc
add
cmp
mov
jp
jle
outsb
inc
loopne
push
xor
sub
addl
incb
je
test
xchg
push
pop
sbbb
and
mov
in
sub
mov
out
adc
cmp
scas
gs
dec
scas
dec
cmp
xchg
push
data16
push
mov
dec
adc
call
and
inc
pop
andb
cmp
nop
dec
incb
out
pop
imul
or
cwtl
inc
std
sub
loop
pop
in
pop
lods
and
push
dec
lret
inc
insl
orl
jne
mov
mov
stos
test
xchg
adc
out
inc
rep
cmp
push
mov
and
mov
int3
xor
jb
mov
shlb
jmp
fucomi
mov
cmp
mov
bswap
popa
xchg
cmp
xor
out
cmp
shrl
jle
and
cmc
xor
dec
jl
fnsave
pop
dec
mov
jno
enter
add
sub
mov
push
sub
sahf
insl
mov
xchg
xor
scas
pop
mov
daa
mov
ficoms
gs
fcoml
and
mov
jae
iret
orl
fadds
push
repz
lods
es
push
mov
lds
in
and
xorl
xorl
leave
xchg
jns
js
cli
jnp
xchg
sub
iret
in
in
ljmp
hlt
rcrb
aad
mov
and
inc
xchg
in
inc
stos
pop
lods
insb
cltd
cmc
xchg
fs
xchg
test
jo
xchg
cmp
add
es
inc
test
inc
mov
nop
aad
ljmp
fisubl
out
or
bound
roll
pop
aaa
hlt
add
ret
cmp
enter
ss
insl
push
mov
lock
cmpb
mov
dec
sahf
cmpb
hlt
sub
test
add
jo
jle
arpl
fstl
lahf
outsb
mov
fs
outsb
hlt
sbb
mov
in
mov
das
xlat
jbe
nop
jnp
sub
jne
cltd
mov
adcb
jne
lcall
xchg
and
mov
ret
mov
test
repz
into
pushf
xor
cmp
test
dec
aad
outsb
int
mov
aam
pop
scas
orl
pop
mov
push
cmpb
pop
shll
movsl
cmp
cmp
outsb
inc
push
fdivl
sub
movsl
jo
arpl
insb
inc
pop
incl
leave
cmp
push
jmp
adc
pop
pop
adc
jo
scas
push
and
sbb
sbbl
mov
adc
jp
pop
xlat
sbb
lcall
fwait
outsb
add
fs
push
lods
and
pop
mov
stc
mov
lods
les
sar
fiadds
fdivs
sub
enter
loope
and
fsts
bound
popf
xchg
mov
cmp
dec
pop
fs
inc
cltd
ret
push
xor
test
test
pusha
fwait
repnz
mov
or
fisubrs
xlat
push
or
fnstenv
mov
out
in
mov
fstp
xor
enter
fcmovnu
push
jmp
mov
push
xor
lea
sbb
adc
pusha
lret
in
imull
test
mov
test
or
inc
and
lods
pop
jle
ret
pop
ret
xor
xor
mov
xchg
and
scas
into
je
cmp
arpl
mov
mov
fwait
xchg
andl
test
lcallw
and
sub
jnp,pn
hlt
pop
or
cmp
xchg
cmp
dec
jl
dec
cmp
xchg
xchg
ja
cmp
mov
fildl
out
jnp
call
lods
mov
cmpl
dec
push
add
fimull
cmp
dec
mov
outsl
enter
add
xchg
jle
dec
in
shll
mov
stos
jg
cmp
orb
pop
lods
adc
rolb
addr16
mov
orb
cs
call
test
sti
or
rolb
in
adc
add
insb
cmpsb
inc
add
addb
int3
jmp
mov
loop,pn
out
inc
out
adc
scas
mov
std
or
test
fwait
cli
push
call
jmp
push
imul
or
sub
lods
or
and
rorb
outsl
sbb
mov
scas
push
in
sarl
xorl
js
repnz
inc
rcrl
pusha
pushf
sbb
sub
or
cmp
clc
in
push
aad
mov
aaa
jb
or
cmp
jge
nop
mov
pop
add
adc
dec
lods
cmp
into
mov
in
das
lret
mov
lock
subb
push
pop
test
push
decb
ljmp
inc
jb
xor
bound
and
addr16
xchg
in
insl
pop
rorl
fiadds
inc
sub
push
test
and
aaa
push
in
das
fs
faddl
repz
das
inc
xlat
jnp
xlat
push
mov
fwait
mov
imull
cmp
push
les
hlt
sbb
rorl
ss
int3
and
in
loop
pop
mov
lods
nop
mov
mov
scas
or
pushf
jbe
outsl
push
sub
dec
out
jo
xchg
mov
add
xor
fisttpll
push
xchg
inc
dec
ret
popa
mov
add
jo
clc
shlb
push
mov
sbb
daa
mov
je
repz
pop
push
add
jnp
inc
ret
es
test
dec
push
gs
sahf
aas
iret
and
or
stos
xor
push
jae
pop
adc
ds
pop
fwait
scas
std
das
sub
in
cld
movsb
shrl
adc
mov
pop
imul
adc
push
in
jo
pop
lahf
xchg
push
inc
push
dec
pop
hlt
ret
inc
jmp
fnstsw
fbld
mov
jne
pop
stc
pop
int
push
in
lods
out
dec
mov
sbb
pop
sarl
inc
fldt
jg
decb
xchg
sub
jo
or
enter
jmp
pop
jecxz
cmp
pop
lret
pop
leave
loope
inc
loopne
test
aad
push
in
jb
mov
repnz
mov
stos
fsubs
ljmp
or
repnz
dec
shrl
add
cld
mov
sar
fildll
aam
mov
sahf
shl
fimull
cwtl
xor
sti
enter
out
push
dec
into
sarl
rolb
pop
jae
loop
rcrb
sub
fwait
add
and
shrl
out
ljmp
push
pop
les
mov
repnz
rorb
scas
push
cmp
dec
ret
mov
lds
fidivrs
int3
mov
shll
lock
ss
add
push
in
and
add
dec
lahf
int
lock
cmp
cs
test
enter
or
cmpsb
adc
clc
imul
repnz
pop
xor
test
lods
push
ljmp
jno
xor
test
lods
inc
xlat
pop
mov
mov
lret
bound
lods
test
fimuls
cmpb
pop
xor
in
test
and
cltd
xlat
inc
inc
fidivl
mov
xchg
popa
clc
dec
ds
call
pop
repz
cmp
adc
mov
das
je
fnstenv
xchg
mov
enter
addr16
adc
mov
xor
or
adc
pop
loop
lds
subb
xor
jecxz
rorl
add
fimull
pusha
lods
sub
out
incl
push
popf
push
shl
jns
jae
mov
push
lds
idivb
mov
pop
popa
clc
dec
lret
sti
imul
dec
mov
jns
mov
rcll
xchg
adc
dec
inc
mov
out
aam
cltd
or
scas
jns
repnz
jns
cmp
in
push
int3
test
mov
inc
fsubrp
mov
sbb
cmp
pop
jns
nop
pop
test
mov
lahf
and
loopne
bnd
jmp
test
add
mov
mov
loop
xor
inc
add
call
mov
jmp
xchg
cltd
xor
call
testl
cmc
mov
adc
dec
add
lahf
ss
pop
lret
mov
call
jb
cld
pop
cs
stc
push
clc
pop
in
cmp
fsubrs
pop
add
adc
lea
adc
pop
imul
pushf
jnp
or
loopne
roll
xor
jecxz
adc
jne
pushf
jae
push
in
test
cli
jno
popa
or
test
lret
cmpsl
mov
out
dec
mov
jnp
push
loope
fxch
and
std
stos
mov
pop
mov
mov
add
fnstenv
sbb
out
scas
enter
sub
iret
gs
test
out
arpl
jno
cmp
dec
sbb
nop
mov
sti
lods
andb
pop
sbb
sub
cli
adc
xchg
addr16
in
push
bound
in
and
data16
repz
pop
fwait
jmp
mov
xor
jp
mov
sbb
pop
cwtl
mov
and
mov
mov
add
adc
xchg
in
loop
lds
xor
clc
inc
pop
mov
xchg
inc
jns
dec
test
loopne
frstor
ret
adc
jo
in
sub
dec
scas
arpl
scas
hlt
jne
adc
jmp
lret
pushf
mov
push
rep
repz
pop
sbbl
mov
jb
pop
lcall
cmp
jge
es
fisttpl
icebp
cmp
xchg
loop
xorb
dec
repnz
cmp
push
xchg
xchg
adc
js
les
or
xchg
in
pop
inc
adc
rorl
into
imul
dec
aad
test
call
aaa
pop
mov
jle
sti
mov
push
jo
pop
aad
push
dec
sbb
jp
dec
repz
pop
sbb
addr16
cld
movsb
jne
popa
push
test
ret
arpl
lcall
stos
push
xor
or
fwait
cmp
fisttpl
in
sub
xor
and
shl
out
xor
in
xchg
push
pop
push
or
sub
icebp
rolb
jns
jbe
push
sub
lock
inc
fcoms
data16
pop
xchg
xor
add
pop
mov
jne
cli
xchg
jns
mov
aad
movsb
shl
mov
mov
sbb
lret
cmp
mov
mov
ret
jno
cmp
mov
cwtl
aam
out
mov
ficoms
cmp
movsb
jo
add
adc
ja
cmp
push
jecxz
dec
mov
pop
aaa
mov
js
loopne
lcall
les
scas
dec
imul
pop
fidivs
cmc
ret
pop
out
call
enter
adcl
mov
sahf
xor
pop
aas
xchg
sub
inc
ljmp
pusha
idivl
dec
and
ret
int3
rclb
push
out
dec
dec
in
push
add
jecxz
mov
stos
xchg
pop
cmc
add
mov
inc
sub
std
xchg
icebp
fldcw
daa
mov
lret
test
mov
leave
test
mov
insb
stc
cmpsb
cmp
pop
xlat
in
or
xchg
sub
aad
add
pop
mov
push
sub
gs
jnp
dec
sbb
jl
stos
inc
push
xor
fisttpl
or
sbb
sbb
or
aas
inc
mov
std
in
pop
inc
loope
bound
jb
int
and
call
or
sub
push
out
addr16
movsl
push
jp
mov
pop
lret
out
push
aaa
dec
inc
insl
jmp
ljmp
aaa
std
xor
push
add
and
pop
not
jp
popl
arpl
fldl
or
pop
jo
fnstcw
cli
bound
lea
fistpl
pushf
push
sti
pop
dec
mov
xchg
lods
xor
pop
insb
add
cltd
lea
mov
int3
push
negl
sbb
cwtl
pop
dec
out
mov
mov
sub
jae
pop
imul
negl
mov
loop
rclb
cwtl
sub
pop
enter
jno
sub
inc
arpl
cmpb
cltd
shrl
xchg
pusha
add
call
fsts
cs
pushf
lret
add
sbb
jp
xchg
repnz
js
test
pop
mov
mov
mov
test
roll
xor
push
jge
popf
pop
popa
jns
and
negb
or
cmpsb
dec
or
movsl
out
push
js
loop
add
inc
notl
and
lds
or
inc
or
imul
dec
jg
and
cmp
enter
lea
and
pusha
daa
popa
enter
inc
or
fldln2
js
sub
hlt
pop
addr16
cld
popa
push
jg
sbb
rorb
pop
js
std
sahf
je
imul
int
jle
popa
in
loopne
gs
xor
push
jno
or
mov
js
out
cmc
pop
mov
scas
cld
bound
dec
mov
popa
add
mov
mov
xlat
pop
xor
enter
push
and
popa
push
addl
inc
xor
xlat
fbld
pop
add
pop
aaa
mov
ja
adc
jno
lahf
loop
or
push
les
push
jle
push
sub
adc
ret
sub
sbb
mov
pop
sbb
jae
out
jbe
bswap
xor
stc
pop
mov
test
lds
dec
or
and
mov
rcr
jl
mov
dec
stos
lock
push
sahf
mov
cld
dec
lds
stos
xchg
iret
mov
fistpll
pop
imull
bswap
movsl
jno
fcomps
movb
lahf
cmp
jne
into
stos
daa
in
mov
add
cmpsl
int
idivb
pop
mov
and
mov
or
movl
pop
or
xchg
mov
inc
fistpl
sub
push
add
mov
pop
mov
or
xchg
mov
movsb
mov
cwtl
cs
pop
std
jne
roll
leave
dec
stc
pop
je
mov
cmpb
nop
dec
cmp
xchg
pop
std
incb
and
sbb
mov
aas
cltd
inc
push
in
jae
jecxz
adc
mov
lea
cmc
sub
mov
or
icebp
mov
cwtl
cmp
or
pusha
cmc
sub
cmp
xor
loopne
jo
loopne
push
jo
mov
mov
popa
cmc
das
lock
push
scas
loop
jbe
mov
jne
icebp
cltd
cmp
cpuid
inc
push
jo
popa
cmc
jno,pn
popf
xor
mov
jecxz
jbe
xor
jne
jo
mov
cmp
fldt
mov
in
repnz
adc
push
notl
fiaddl
dec
xchg
pop
add
pushf
dec
adc
inc
incl
lds
icebp
js
mov
outsl
das
loopne
pop
pop
inc
xor
xchg
push
add
jle
inc
dec
adc
hlt
sarl
fnstsw
jmp
xchg
or
pushf
inc
jmp
leave
popl
shll
cwtl
cmpsb
mov
jecxz
cmpsb
mov
pop
popf
mov
or
fiaddl
cmp
pop
fiaddl
pop
mov
lahf
das
nop
cmc
pop
cmp
rorb
sbb
xor
mov
iret
scas
cltd
mov
mov
fwait
lret
out
add
push
orl
jmp
orl
mov
sbb
jl
xchg
cmp
ret
cltd
inc
int
out
jno
sbb
pop
cli
cmp
push
push
mov
int
lcall
mov
fwait
inc
dec
pop
pusha
in
insb
fwait
clc
or
mov
pop
mov
arpl
hlt
pop
xor
aad
xor
std
leave
idiv
fs
sarl
imul
call
aam
xor
cmc
pop
sub
int3
imul
outsl
lock
xchg
aad
or
cmp
add
cmc
pop
sub
sbb
push
cmp
enter
jno
ja
imul
mov
icebp
enter
iret
sub
data16
lods
aaa
jb
cmc
jg
pop
mov
lretw
xlat
jb
adc
mov
stos
xchg
cmp
shll
adc
add
push
enter
xor
push
aam
shrl
and
out
jl
scas
add
lea
inc
adc
pop
cmp
int3
pop
mov
push
cmpsl
fdivrl
test
push
jp
or
push
int
push
les
ja
pop
mov
je
and
push
jnp
aam
xchg
cmovne
push
or
decb
adc
xor
push
add
sub
dec
test
sbb
fnstcw
mov
fdivl
lahf
pop
stc
sbb
mov
pop
mov
test
jo
mov
or
pushf
mov
scas
lahf
aas
jo
and
stc
stos
mov
push
add
mov
pop
rcll
add
mov
add
lods
sub
or
add
jae
sub
dec
jno
pop
cmp
add
ficompl
in
add
adcb
sub
roll
aam
jns
mov
pop
adc
mov
mov
loop
push
cmpsb
fs
mov
xchg
out
dec
mov
cld
outsb
andb
addr16
test
jnp
inc
icebp
call
adc
sbbl
les
lret
imul
mov
inc
adc
shlb
sub
inc
mov
fs
dec
mov
ret
add
xor
ds
outsl
inc
push
out
nop
lds
cmp
jbe
leave
sub
mov
sbb
lcall
roll
sub
adc
sbb
or
popa
ret
pusha
push
cld
in
mul
insb
sbb
movsb
cs
dec
jmp
cltd
mov
xchg
xor
xchg
ds
and
stos
xchg
lock
jbe
enter
aam
adc
mov
das
mov
mov
pop
pusha
int
xor
mov
inc
or
xor
dec
adc
sti
pop
pcmpeqw
pop
bswap
lahf
or
daa
mov
mov
pop
aas
xlat
mov
inc
adc
push
jne
push
mov
xchg
scas
iret
mov
repnz
push
ja
mov
pushf
xlat
dec
arpl
lret
jg
sbb
xor
and
mov
mov
dec
in
cli
jnp
sub
imul
dec
and
push
loopne
mov
adc
sbb
xor
es
lds
loopne
jae
cltd
inc
sbb
scas
xor
jl
mov
dec
mov
lods
sub
mov
sub
jecxz
insl
out
jle
les
mov
es
loopne
insb
mov
inc
adc
or
scas
sub
pop
adc
sub
sti
pop
les
std
push
dec
sbb
test
rolb
pushf
dec
loope
orl
repnz
xchg
aaa
pop
ds
clc
mov
mov
mov
fwait
aas
out
cmp
jecxz
out
sbb
mov
movsl
pop
flds
xor
jge
imull
pushf
cmp
push
push
adcl
in
cmp
fcoml
into
mov
xchg
pop
std
test
mov
dec
mov
fnstsw
scas
clc
pop
clc
cmpsl
xor
in
sub
sub
cmpl
sbb
loope
mov
movsb
jle
or
lcall
inc
mov
ret
adc
push
inc
push
subl
push
add
xlat
outsb
scas
ss
mov
bound
push
pop
inc
pop
xchg
push
and
test
mov
pop
test
dec
add
lahf
inc
push
pop
orb
jae
cmpsb
call
jnp
dec
or
inc
repnz
pop
in
out
lahf
div
iret
mov
lods
sti
pop
ret
mov
in
ret
add
push
add
pop
lds
repz
scas
xchg
mov
movsb
xor
dec
pop
scas
insl
sbb
sub
dec
loop
sbb
cmp
sbb
jns
dec
sbb
mov
inc
or
and
push
es
cmp
xchg
inc
adc
xor
adc
mov
orb
es
sti
pop
jno
add
adc
scas
push
dec
pop
repz
nop
daa
mov
fcoml
mov
or
jnp
xchg
pop
mov
into
xchg
xchg
sar
pop
sarl
insl
mov
mov
jae
adc
imul
and
mov
ds
ret
mov
mov
and
add
sub
mov
jne
repnz
insb
repnz
cld
jbe
mov
lods
fdivrs
push
out
pop
push
cmp
or
out
push
sub
ds
inc
push
and
out
lea
pushf
int
jae
lahf
adc
lret
pop
clc
pop
sbbl
dec
cmp
jp
js
xchg
fwait
test
fadds
mov
iret
fistps
mov
scas
dec
cmp
aaa
mov
sbb
jnp
aad
inc
or
mov
aad
mov
filds
out
sbb
int3
rcrb
repz
or
data16
mov
jl
mov
lods
push
add
inc
test
aad
jbe
mov
mov
xchg
popf
gs
and
xchg
cmp
loope
mov
mov
inc
fwait
ljmp
addr16
adc
xchg
inc
repz
lahf
sahf
loop
aas
sub
mov
mov
es
loope
hlt
mov
cwtl
cmp
aam
aas
sbb
iret
mov
inc
jmp
sbb
mov
push
stc
lds
popf
fstl
pop
pop
or
iret
push
add
pop
xor
pop
loope
imul
jmp
imul
pop
scas
or
test
lret
shll
aaa
mov
jb
in
or
dec
sub
mov
mov
insl
mov
je
pop
cmovs
sahf
mov
stos
add
andb
ja
pop
shlb
inc
or
stos
fdivrl
call
or
mov
test
xchg
xor
or
adc
adc
xor
inc
test
pop
cs
mov
or
push
cltd
cmp
mov
jle
xlat
jne
mov
shll
in
mov
mov
push
jp
push
inc
mov
popf
sbbl
leave
sbb
xchg
int3
sbb
xchg
ss
cmpsb
mov
data16
xor
pop
out
xchg
aaa
fisttpl
jmp
xchg
push
lods
pop
mov
pop
fs
inc
or
cmp
jnp
or
push
outsl
js
cmp
adc
cmp
into
addr16
outsb
jmp
loop
xor
xchg
cmp
pop
call
ja
jne
pop
cld
and
scas
push
cmp
ljmp
xor
pushf
enter
adcl
mov
xor
mov
xchg
sbb
jmp
mov
inc
lds
fldcw
arpl
mov
ljmp
lods
jo
xchg
flds
lret
shl
jb
cmc
dec
push
push
pop
mov
jle
or
mov
cmp
addl
sub
int
adc
js
pusha
icebp
fbld
push
inc
xchg
push
popf
rorl
jp
push
std
push
imul
dec
push
je
sarb
pushf
cmp
adcl
ret
call
rorb
in
or
xchg
lret
jnp
adc
cmp
cmp
mov
mov
push
add
out
pop
sbb
jl
es
pushf
inc
movsl
aaa
push
stc
ret
sbb
loope
dec
or
push
pop
dec
adc
inc
xchg
aaa
movsl
or
cs
loopne
lea
sbb
scas
cmp
xchg
inc
push
test
mov
mov
aaa
mov
cmp
daa
and
inc
nop
mov
test
mov
fidivs
scas
cmp
filds
std
xchg
cmp
jo
jmp
jmp
lock
inc
add
fldenv
in
xor
add
jbe
mov
test
scas
fldenv
xchg
push
int3
fwait
mov
mov
lret
in
push
fidivl
and
jl
add
scas
std
pop
scas
rorl
rcl
inc
rolb
pop
and
adc
insb
add
aad
call
sbb
fldl
fidivs
popf
outsl
push
mov
sbb
mov
xchg
inc
loopne
xchg
les
outsl
repnz
std
push
cld
pop
mov
ss
mov
mov
push
dec
daa
in
fwait
xchg
adc
add
mov
je
dec
adc
popa
mov
in
push
dec
adc
inc
xor
repnz
xchg
out
inc
pop
ret
stc
inc
mov
fsubs
stos
sub
or
inc
aas
adc
fildll
mov
jb
jg
lret
mov
and
mov
dec
addr16
adc
cmp
dec
inc
pop
add
jp
lds
push
cmpsb
adc
fidivrl
mov
xchg
lds
dec
adc
adc
mov
push
sbbb
mov
cwtl
repz
pop
add
and
lds
cld
lahf
adc
push
mov
mov
sbb
mov
mov
pop
inc
test
push
inc
mov
and
jno
pushf
cmp
insb
pop
std
pop
call
test
lock
inc
subb
popf
rorl
aad
lock
lods
rcll
and
mov
lods
out
jbe
mov
sti
pusha
pop
sbb
mov
mov
xchg
push
rcrl
int
stc
in
out
xor
jmp
push
bound
adc
sub
sbb
xor
sub
outsb
int
stos
xor
decb
int3
nop
push
rclb
push
jg
pop
fnsave
mov
shll
out
out
and
cmpsb
loope
add
mov
push
adc
mov
icebp
pop
cli
fs
adcl
stc
mov
sahf
mov
test
mov
sarl
repz
fists
sarl
pop
inc
adc
mov
dec
or
test
push
cmpl
add
dec
jmp
int
xchg
sahf
cmp
test
xchg
std
out
jns
loop
xor
cltd
fildl
fimull
inc
sbb
sbb
out
fdivrs
cli
pop
stc
mov
lds
pushf
ja
rclb
xchg
sub
ds
cld
xchg
or
lcall
gs
mov
popf
inc
cmp
adc
das
rolb
movb
sbb
adc
inc
or
jl,pt
push
inc
and
cmpsl
inc
sahf
inc
adc
addr16
xor
and
sbb
stos
cwtl
data16
icebp
enter
out
cli
xchg
and
pop
outsb
inc
dec
adc
out
sub
add
xchg
scas
mov
push
cmp
push
inc
insb
notb
std
popa
jb
inc
pcmpgtb
adc
jle
test
xchg
cmp
cmpsl
jb
pop
stc
xchg
jo
mov
mov
sbb
jl
sbb
sub
or
stc
cmp
negb
minps
hlt
fs
cld
mov
scas
xchg
cmp
cmp
movsb
xor
add
dec
lds
les
inc
push
int
xor
xchg
arpl
cmpsb
stc
pop
sbb
fidivrs
dec
mov
loopne
push
push
outsb
ljmp
push
push
fidivrs
xor
add
xchg
pop
or
jg
sub
rclb
andb
xchg
push
mov
push
jp
cld
arpl
iret
fwait
inc
push
gs
out
out
jne
add
cmpsb
fld
outsb
repz
or
xchg
pop
jmp
inc
or
add
lea
mov
sub
int3
xchg
cmp
scas
push
shrb
mov
mov
lret
or
arpl
sahf
inc
cmpsb
js
mov
mov
jle
rcrb
sub
out
mov
mov
sarl
gs
or
out
adc
sti
pop
cli
pop
dec
out
xor
xchg
and
pop
call
rorb
mov
cs
push
pop
flds
lcall
rorb
mov
test
cmc
jg
test
insl
mov
xchg
cmpsl
mov
xor
jge
jp
icebp
imul
test
xor
jb
or
inc
or
cli
arpl
xchg
aaa
mov
xchg
sbb
dec
popf
cmp
push
pop
neg
scas
insl
jmp
add
sbb
cli
or
test
out
mov
mov
push
and
fneni(8087
out
push
add
add
mov
mov
jecxz
sbb
push
sbb
test
movsl
cmp
fldcw
mov
sbb
xor
mov
pop
pushf
mov
fwait
pop
leave
dec
adc
mov
imul
movsb
sbb
add
mov
mov
mov
aam
jbe
icebp
fildl
or
lods
xor
xor
mov
pop
jge
cmp
fiadds
adc
fdivrp
inc
mov
lock
pop
scas
sbb
data16
sub
sti
int3
mov
data16
imul
pusha
icebp
push
aas
fidivl
pop
hlt
fidivs
cld
pop
rcrl
neg
or
popf
push
pop
mov
lea
sbb
dec
and
iret
inc
cmp
cmp
xor
into
mov
cmpsb
adcl
test
cmpl
and
or
inc
fcomps
sub
je
dec
push
std
pop
xor
xchg
stos
test
jge
sarb
sub
mov
dec
mov
or
gs
in
sarl
les
in
addr16
sbb
fs
xor
xor
fistps
cmp
int
rolb
add
jle
xchg
sub
jae
orl
test
or
mov
ficompl
mov
fs
adc
mov
inc
adc
test
inc
or
mov
scas
xor
jns
mov
stc
jo
sbb
test
jo
push
push
shll
push
mov
shrl
cld
pop
dec
daa
inc
push
mov
loope
icebp
and
inc
dec
sbb
inc
fcmovb
inc
pushf
xor
sub
pop
ja
xor
and
ret
pop
sub
nop
add
movsl
sub
push
negb
sbb
add
hlt
fsincos
popa
xor
loop
dec
and
aam
popf
fidivrl
ror
xchg
mov
daa
pop
fcompl
and
xor
pop
adc
inc
or
inc
cmp
mov
scas
inc
push
push
int3
pop
testl
jl
popf
inc
inc
fwait
xor
out
out
xorl
add
ja
repz
lret
js
sbb
push
in
lret
orb
jbe
je
flds
loope
mov
inc
clc
sahf
cmp
pop
mov
mov
sub
cmp
sbb
push
push
enter
dec
adc
ljmp
mov
push
jbe
jnp
adc
addr16
xor
shr
ljmp
jle
hlt
gs
push
cld
or
out
jae
pop
or
pop
jmp
pop
mov
or
push
roll
and
xor
loopne
fld
jbe
mov
sbb
pusha
xchg
push
out
imul
shl
lock
arpl
inc
jns
and
push
push
dec
js
popa
dec
xchg
push
sarb
inc
fmulp
sub
xchg
pop
imul
lret
xchg
loopne
mov
orl
dec
adc
mov
sub
jl
and
adc
lods
cmp
sub
js
sbb
out
jb
dec
in
daa
rorl
sub
cmp
pop
and
jge
mov
movsl
ja
dec
sub
add
inc
adc
or
ss
inc
pop
sub
sub
rcll
dec
dec
or
add
ret
pusha
dec
push
sbb
push
shrb
mov
xor
rolb
popa
loope
enter
mov
adc
fmuls
jp
jmp
inc
jnp
push
jle
adc
ss
popa
ljmp
test
push
add
enter
repnz
add
ja
enter
pop
stos
xor
push
cwtl
aas
sub
sarb
scas
xor
xchg
ret
jp
xchg
jg
cmp
mov
clc
enter
push
sbb
and
mov
cmp
shlb
sahf
xor
push
pop
sub
mov
jns
adc
xchg
std
dec
or
adcb
pop
andl
test
lock
in
test
jno
dec
mov
mov
push
fcmovnb
call
cld
mov
mov
mov
and
pop
mov
nop
cmp
stos
mov
iret
in
ret
sarl
in
mov
sbb
cmp
std
pusha
fnstenv
sub
mov
lods
pop
jmp
adc
lods
adc
pop
push
dec
mov
cmpsb
mov
repnz
lods
int3
mov
pop
int3
mov
lret
adc
dec
into
adcb
adc
inc
lret
movsl
sbb
cltd
cmpsb
filds
dec
mov
insl
test
or
cmp
sub
xchg
inc
mov
push
mov
and
sahf
xor
xor
fs
std
es
mov
imul
jns
jl
sbb
sub
jecxz
jecxz
loop
clc
arpl
repz
inc
sub
jecxz
xor
jl
xor
lahf
ds
sarb
sub
mov
cmc
lds
ret
add
xchg
sbb
mov
mov
dec
adc
call
sbb
gs
jb
addb
lods
das
adc
inc
and
mov
mov
pop
mov
push
testb
xor
rolb
arpl
and
or
test
and
in
icebp
arpl
rcr
jns
loop
push
ja
push
mov
lock
adc
xchg
bound
iret
iret
mov
sub
cmp
push
sbb
jne
lea
inc
and
push
cli
popa
xor
fwait
inc
aad
mov
xchg
lea
xchg
out
jbe
jo
mov
into
add
sub
sbb
xchg
cmp
ret
fs
test
dec
adc
sub
ret
cli
adc
dec
ljmp
and
bound
mov
dec
adc
adc
imul
xchg
rol
xchg
adc
mov
out
adcl
test
call
popf
cmp
test
push
sbb
sar
xchg
add
cmp
sub
rolb
sub
pop
lock
lds
lahf
cld
xchg
sub
int3
and
xor
xor
push
shll
mov
negl
hlt
inc
or
or
les
mov
ljmp
cmpsb
fdivp
scas
xor
mov
xchg
inc
or
aas
sahf
orps
int
pop
lcall
or
pusha
jnp
fidivl
bound
cmp
dec
notb
cmc
adc
std
pop
add
inc
pop
pop
adc
pop
test
pop
insl
sbb
scas
mov
inc
nopl
mov
je
or
cwtl
mov
or
roll
daa
aam
lret
nop
pop
pop
mov
outsb
jle
jl
pop
pusha
jmp
mov
stos
push
cli
and
stc
popa
out
xor
ret
repz
or
inc
call
mov
xchg
lret
mov
mov
mov
mov
inc
bswap
xor
fwait
sub
stos
into
pop
movsb
xor
pop
mulb
out
inc
adc
fcomps
xor
pop
stos
mov
and
fstl
int3
mov
in
cltd
cmp
movsb
ds
cmc
bound
dec
push
fistl
movsl
cmp
cmc
sbb
mov
cmp
fsubrl
mov
stc
cmc
pop
loop
and
fisubrs
mov
pop
lock
popa
scas
pusha
jmp
add
cld
gs
fadds
lret
lods
stc
popa
mov
scas
fs
pop
dec
adc
jp
fiadds
shll
push
std
add
push
mov
stc
imul
pop
push
jle
fbstp
lods
xor
popa
and
sarb
and
cmpsb
daa
loope
fldl
mov
fs
pop
sti
outsl
icebp
dec
or
int3
mov
rorl
out
repnz
imul
inc
add
in
or
test
push
in
sub
pop
in
pop
je
or
mov
xor
rorb
mov
add
adc
sub
push
cmp
inc
and
xchg
aaa
cmp
fldl
dec
jmp
rolb
aad
sbb
inc
adc
int
test
fwait
sbb
rolb
fistl
shl
inc
push
sti
inc
adc
enter
testl
iret
and
jle
stos
sub
mov
mov
jb
cli
push
mov
and
jl
push
cwtl
sub
inc
jmp
divl
and
inc
or
dec
into
mov
lret
jns
pop
shll
daa
pop
loopne
sbb
jge
dec
dec
add
negb
fldl
fcoms
xchg
inc
lds
mov
sbb
outsb
not
mov
sbb
xor
daa
rorb
push
sbb
dec
cmpsb
jmp
stc
loope
fidivs
ja
xor
daa
stos
and
xor
mov
cld
jge
outsl
push
push
stc
inc
rolb
xchg
hlt
pop
pushf
test
int3
iret
mov
cli
test
and
ss
sbb
daa
mov
pop
std
stos
adcl
xor
cld
inc
ret
hlt
popf
cmp
lcall
cs
pop
xchg
cmp
imul
add
faddl
adc
imul
inc
orb
pop
add
pusha
out
pop
andb
jns
lret
xchg
ja
jnp
xchg
arpl
add
adcb
dec
pop
std
loope
push
jmp
clc
lods
jb
ficoms
add
shrb
or
mov
cmp
outsl
bnd
aaa
lcall
mov
mov
or
sbb
inc
jnp
sbb
pop
jo
js
dec
push
ret
mov
jp
cmpb
adc
jno
nop
lods
xor
inc
lahf
aas
xor
mov
loop
pop
idiv
cld
xlat
test
inc
adc
mov
mov
push
sarl
mov
xchg
aas
inc
push
repnz
cmp
imul
inc
adc
cmpsb
arpl
mov
cmpsb
arpl
repz
fidivrs
out
or
jg
xchg
arpl
insb
aam
jne
jno
sub
inc
nop
mov
leave
mov
shlb
jmp
stc
or
jmp
mov
aad
lea
les
cmp
iret
mov
and
add
sbb
js
inc
pusha
testb
sbb
orb
add
mov
mov
or
push
pop
adc
dec
roll
mov
cmpsb
sbb
out
imul
lcall
sbb
repnz
sbb
dec
jge
int3
orb
dec
adc
sub
rcrb
lock
pop
add
fs
add
or
pop
repz
mov
std
pop
aad
stc
pop
mov
leave
lea
lods
or
fisttps
inc
adc
xor
pop
stc
and
adcb
add
mov
lret
out
adc
sbb
inc
shrl
push
pop
out
xchg
repnz
cmpsl
cmp
mov
mov
or
mov
pop
add
push
shll
inc
fs
and
in
les
fadds
movsb
mov
xchg
stc
lahf
insb
out
test
in
insb
rol
mov
jns
or
sub
pusha
xchg
sbb
iret
ljmp
jae
mov
cmpsl
mov
das
clc
out
addr16
xor
imul
xchg
xor
push
sub
and
xchg
cmp
add
les
pop
popa
ljmp
dec
adc
fwait
arpl
mov
sub
loope
inc
add
iret
pop
mov
pushl
and
les
sbb
fisttps
outsb
out
mov
lock
inc
adc
shll
pop
lahf
aaa
mov
shr
call
clc
push
jle
mov
xchg
lret
test
sbb
mov
jns
adc
sbb
outsl
repnz
mov
dec
inc
cmovp
push
cmp
and
gs
cltd
mov
cmpsl
ret
adc
sarb
lret
push
ds
inc
jo
xchg
cmp
mov
notl
mov
dec
xchg
outsb
sahf
xor
pop
and
sub
cmp
clc
iret
push
ds
adc
dec
mov
mov
inc
adc
scas
jl
mov
push
jmp
icebp
fstpt
loop
jle
push
aaa
movsl
xlat
popf
sbb
pop
push
mov
cmpl
outsb
in
push
je
xor
lea
or
mov
aad
mov
inc
repz
jnp
dec
pop
in
sahf
cmp
mov
subl
scas
fdivl
or
xchg
inc
icebp
pop
adc
lret
bound
mull
xorl
sub
ja
mov
xor
sbb
jne
push
stc
push
data16
mov
je
add
or
insb
loope
adc
addb
call
popa
in
jle
mov
stos
negl
ret
leave
xchg
popf
das
xchg
les
cmc
mov
adc
fisubs
mov
push
mov
inc
or
filds
xor
stc
bound
adcb
fstpt
xor
popa
sub
mov
fidivl
aad
lods
push
sar
popl
sub
lret
push
lods
push
jp
call
cmpsl
int3
outsl
push
dec
push
jmp
push
sbb
dec
jb
inc
movsb
insl
es
test
jmp
arpl
pop
sahf
pushf
ljmpw
mov
ljmp
mov
xchg
pop
inc
fmull
scas
arpl
loopne
lahf
cmp
sbbb
pop
mov
aaa
xchg
push
fcos
stc
nop
xor
fdivl
push
pop
scas
test
xchg
andb
scas
shl
push
ljmp
jno
jl
push
jmp
popf
es
cwtl
jb
lret
inc
and
nop
daa
push
inc
lret
bound
scas
inc
jno
jmp
arpl
ljmp
sbb
or
rorb
clc
adc
inc
fisttpl
xor
push
data16
popa
xchg
pop
mov
mov
xor
pusha
sub
mov
fidivl
aam
lods
add
daa
xor
pop
and
lods
push
jns
call
cmpsb
lret
outsl
push
std
push
jmp
push
sbb
dec
jno
inc
mov
lret
mov
jmp
arpl
sahf
fwait
gs
mov
inc
fstpt
or
mov
xchg
pop
inc
fmull
scas
arpl
filds
sbbb
pop
mov
aaa
test
mov
nop
xor
fdivl
push
pop
scas
orl
jg
xor
scas
shl
push
ljmp
jno
jnp
push
jmp
pushf
es
xchg
jb
leave
out
lods
inc
and
nop
daa
sbb
ds
inc
jo
jmp
arpl
jmp
ljmp
cmp
lahf
imul
popa
clc
adc
inc
fisttpl
xor
gs
stc
pusha
xchg
pop
mov
mov
xor
pop
sub
mov
fidivl
rcll
popl
es
push
and
lods
push
js
call
movsl
lret
cld
push
jmp
dec
sbb
dec
jo
inc
mov
ret
lret
mov
jmp
arpl
pop
sahf
lcall
mov
call
or
mov
nop
pop
inc
fmull
arpl
fiadds
ss
push
mov
test
mov
nop
xor
push
pop
scas
orl
movsb
xor
scas
shl
push
ljmp
jno
jnp
push
ljmp
jno
enter
and
es
lret
bound
lods
inc
outsl
xchg
jmp
jmp
jmp
mov
push
mov
clc
adc
inc
fimull
cs
clc
pop
xchg
push
mov
mov
xor
sub
mov
mov
rcll
mov
es
push
and
call
movsb
lret
cld
lds
negb
jo
dec
jo
inc
mov
ret
lret
mov
jmp
bound
pop
sahf
lcall
mov
out
inc
fstpt
or
mov
nop
pop
inc
fisttpl
lods
stc
fldl
ss
push
mov
xor
frstor
nop
xor
fidivl
push
pop
scas
orl
jge
xor
lods
iret
notb
daa
icebp
xor
and
or
push
jmp
into
xchg
jo
out
lods
inc
and
mov
jne
lods
inc
outsb
xchg
jmp
popa
shr
sahf
sbb
call
mov
mov
mov
loopne
clc
adc
inc
jg
gs
popf
xor
jg
adc
or
pushf
xor
es
mov
rcll
jmp
adc
call
mov
les
cmc
sbb
and
dec
outsl
lods
inc
mov
ret
hlt
mov
jmp
bound
pop
sahf
cltd
jmp
mov
out
inc
fstpt
pop
stc
pop
inc
fisttpl
stos
stc
faddl
lahf
ss
push
mov
xor
fsubl
stc
nop
das
neg
jno
push
pop
scas
orb
jl
xor
lods
into
cmc
push
ljmp
jno
jp
push
jmp
int
jo
out
lods
inc
and
mov
je
lods
inc
insl
xchg
jmp
popa
shr
sahf
sbb
call
mov
lea
mov
fbld
adc
inc
xor
fs
negl
popf
xor
jle
adc
or
pushf
xor
fnstenv
and
testl
add
testb
pop
adc
call
mov
ret
push
call
dec
adc
lods
inc
mov
ror
repz
jmp
bound
pop
sahf
cwtl
popa
jmp
mov
in
inc
fstpt
es
mov
fisttpl
stos
stc
fildl
lahf
ss
adcb
push
mov
xor
stc
nop
cs
jno
push
pop
scas
orl
int3
rcrl
ljmp
jno
jns
push
jmp
int3
xchg
jo
inc
pop
out
and
jae
lods
inc
insb
xchg
jmp
popa
mov
loope
jg
cmp
popf
mov
mov
fisubs
psubusw
or
jg
arpl
pusha
negl
xor
jge
adc
or
pushf
xor
sub
jo
and
push
push
jle
mov
rcll
std
and
lret
adc
call
mov
ret
repz
pop
inc
insl
lods
inc
lahf
mov
cltd
ror
repnz
jmp
bound
popw
sahf
xchg
pusha
jmp
mov
in
inc
fstpt
add
stc
lea
fisttpl
test
lahf
ss
adcb
push
mov
xor
fisubl
stc
nop
sub
dec
pop
scas
orb
jp
xor
lods
int3
repz
ljmp
jno
js
push
jmp
lret
xchg
jo
in
lods
inc
push
out
and
jb
lods
inc
imul
popa
mov
loopne
jg
cmp
popf
mov
mov
frstor
push
fadds
or
jg
bound
pusha
negl
popf
xor
jl
adc
or
pushf
xor
sub
jo
and
mov
rclb
cld
and
lret
adc
call
mov
rcll
sbb
pop
inc
insb
lods
inc
sahf
data16
icebp
mov
jmp
bound
gs
sahf
xchg
pop
jmp
mov
jecxz
inc
fstpt
add
mov
mov
fildl
test
stc
flds
lahf
ss
adcb
push
mov
xor
fldenv
stc
nop
sub
fidivl
dec
pop
scas
jg
clc
jns
xor
lods
lret
repnz
ljmp
jno
ja
push
jmp
lret
pop
ret
jmp
inc
sbb
aas
lret
bound
lods
inc
push
jmp
popa
mov
fucomip
jg
cmp
popf
arpl
and
mov
popa
clc
or
das
jg
popa
sub
pop
sbbb
lods
aad
push
pop
iret
pushf
xor
sub
jo
and
mov
iret
adc
sti
and
lret
adc
call
lahf
lds
test
mov
inc
imul
mov
lods
inc
ljmp
bound
pop
jmp
mov
loop
inc
fstpt
add
mov
mov
fildl
cmpsl
stc
fdivr
sahf
xor
sub
mov
xor
fsubs
clc
sub
fidivl
dec
push
lods
jle
clc
jns
xor
rcrb
push
jmp
push
inc
jo
jbe
push
jmp
leave
xchg
jo
ret
ljmp
pop
ds
cmp
ret
mov
popa
mov
fucomip
jg
aaa
and
push
mov
mov
or
inc
jle,pn
pusha
sub
pop
sbbl
push
iret
pushf
xor
sub
outsl
pop
and
lea
into
adc
dec
testb
sbb
call
sahf
les
idivb
mov
inc
push
inc
pushf
mov
out
mov
inc
jmp
or
bound
pop
sahf
xchg
pop
jmp
mov
loope
inc
fstpt
add
mov
mov
test
stc
xlat
sahf
xor
sub
push
test
jle
fidivl
lahf
mov
jno
dec
push
lods
jge
clc
js
xor
iret
cltd
push
lods
lret
jmp
sbb
ds
jmp
enter
ret
inc
sbb
mov
outsl
aaa
lods
inc
imul
push
popf
adc
call
mov
bound
and
mov
pusha
testl
sub
pusha
negl
pushf
xor
sarl
xor
daa
fsubrs
and
lea
adc
inc
testb
sbb
call
popf
ret
outsl
push
cmc
mov
mov
inc
imul
out
mov
inc
call
or
bound
bound
sahf
xchg
pop
jmp
mov
loopne
inc
add
mov
mov
fildl
stc
std
sahf
xor
sub
push
orl
jge
fidivl
sahf
mov
jno
dec
push
lods
jl
clc
ja
xor
into
cwtl
push
lods
leave
out
push
jmp
sbb
jo
je
push
jmp
jo
shr
inc
sbb
mov
outsb
lods
inc
push
mov
popa
mov
fucomp
jg
xor
push
popf
popa
xchg
mov
fldenv
or
inc
flds
sub
adc
pop
jg
xor
sarb
xor
and
mov
lea
lret
adc
cld
testl
dec
outsl
push
call
pushf
shrl
mov
mov
inc
lods
inc
cltd
bound
popa
in
mov
inc
out
jmp
arpl
pusha
pop
sahf
xchg
pop
ljmp
scas
or
xor
push
stc
xchg
faddl
movsb
arpl
aad
sahf
xor
sub
push
orl
jno
popf
mov
daa
icebp
dec
push
lods
jp
stc
nop
jbe
xor
int3
xchg
pop
scas
enter
push
ljmp
jb
push
ljmp
jno
shl
inc
sbb
es
lret
xor
call
bound
fsubr
orb
and
fs
pop
sahf
pusha
test
mov
and
testl
sub
pop
es
clc
push
jge
xor
sarb
xor
and
outsl
push
pop
mov
lea
leave
adc
cli
negl
xor
dec
sbb
scas
dec
insl
push
call
fwait
mov
push
ljmp
jb
inc
lods
inc
xchg
popa
nop
daa
xchg
mov
scas
inc
out
jmp
cmp
sahf
pop
jmp
mov
or
xor
daa
mov
xchg
faddl
mov
sahf
xor
sub
push
orb
jnp
fidivl
pushf
mov
lock
dec
push
lods
jns
stc
nop
jne
xor
lret
xchg
pop
scas
in
push
jmp
sbb
jo
jno
push
ljmp
jno
mov
loope
adc
lret
xor
inc
mov
jg
xchg
bound
fucomi
orb
pop
sahf
pop
test
mov
and
testl
sub
pop
and
pushf
xor
iret
mov
xor
and
outsl
push
push
mov
lea
enter
clc
negb
xor
dec
pop
pop
scas
dec
insb
push
call
lcall
ljmp
jb
aas
lods
inc
xchg
pusha
nop
daa
xchg
mov
popa
jmp
or
cmpb
cmp
sahf
mov
orb
or
xor
daa
mov
test
faddl
mov
sahf
xor
daa
dec
mov
ss
fidivl
fwait
mov
and
inc
push
lods
js
stc
nop
je
xor
lret
scas
jmp
jmp
sbb
jo
jo
push
ljmp
jno
mov
loopne
adc
lret
xor
jg
xchg
bound
fucompp
orb
mov
pop
addl
jg
mov
push
rolb
add
jle
pop
and
clc
push
jnp
xor
into
mov
xor
and
outsl
push
sbb
testb
adc
clc
ret
clc
cmc
sbb
lret
pop
scas
inc
imul
push
outsl
push
out
mov
mov
arpl
xchg
mov
popa
call
or
cmpb
int
aaa
pop
pop
sahf
lea
orb
or
xor
daa
mov
test
faddl
mov
sahf
xor
es
mov
ss
fidivl
lcall
and
inc
push
lods
ja
stc
nop
jae
xor
leave
xchg
pop
scas
vrsqrtss
sbb
xor
pop
outsl
cmp
push
mov
mov
fisttps
popa
imul
call
bound
fldl2t
orb
and
popa
sub
sahf
pop
addb
jle
mov
add
daa
jle
pop
and
push
jp
xor
mov
xor
and
jo
sbb
movsl
outsb
fidivl
adc
repz
dec
adc
scas
inc
push
jmp
xchg
mov
push
ljmp
jb
cmp
lods
inc
xchg
pop
nop
daa
mov
out
scas
inc
loop
ljmp
pop
or
mov
or
xor
daa
mov
orl
jg
adcb
mov
sahf
xor
and
inc
lahf
ss
fidivl
cltd
mov
and
inc
push
lods
jbe
stc
nop
jb
xor
enter
jmp
xor
pop
outsb
cmp
imul
lods
inc
adc
adc
lret
xor
jg
test
bound
fsubr
orb
and
pusha
sub
sahf
pop
addl
scas
shll
add
inc
fiaddl
es
pop
and
push
jns
xor
int3
mov
xor
pop
fnstenv
sbb
movsb
insl
fidivl
lds
repnz
xor
dec
adc
scas
inc
imul
xchg
mov
push
ljmp
jb
cmp
inc
xchg
pop
nop
daa
mov
inc
loope
ljmp
pop
or
xchg
mov
das
sti
daa
mov
orb
jle
adcb
lahf
arpl
shl
sahf
xor
and
mov
ss
fidivl
cwtl
mov
and
inc
push
lods
jne
stc
nop
jno
xor
xchg
pop
scas
ret
call
xor
pop
insl
aaa
push
ljmp
jno
mov
fisttpll
popa
xor
mov
jg
or
mov
push
popf
or
jmp
mov
pop
addb
jl
mov
add
inc
fiaddl
and
popa
clc
push
js
xor
lret
mov
xor
push
fnstenv
sbb
mov
les
icebp
push
xor
inc
adc
scas
inc
push
xor
pop
in
mov
ljmp
jb
cmp
inc
xchg
pop
nop
daa
lea
scas
inc
loopne
ljmp
pop
or
xchg
or
cs
daa
mov
orl
aam
arpl
iret
cmc
sahf
xor
and
push
jnp
lahf
ss
fidivl
xchg
mov
and
inc
push
lods
je
stc
nop
jo
xor
xchg
pop
scas
ret
jmp
adc
ss
ljmp
jno
mov
fmull
popa
data16
lods
inc
popa
xchg
jg
or
mov
push
popf
or
jmp
mov
pop
jg
fnstenv
shll
add
inc
and
push
and
push
jbe
xor
leave
mov
xor
dec
sbb
mov
ret
repz
xor
inc
adc
scas
inc
push
jmp
xchg
mov
push
jmp
or
or
pop
lods
inc
nop
pop
xchg
sub
scas
inc
filds
xorl
push
or
test
or
sub
sub
jg
inc
fnstsw
pop
rcrb
sahf
xor
and
push
jns
mov
jno
xchg
mov
pop
ljmp
jb
cli
xchg
outsl
xchg
xor
les
push
jmp
adc
jo
push
push
jmp
mov
or
fistl
popa
fs
inc
pusha
test
jg
or
popf
or
ljmp
sub
lahf
pop
jge
fldcw
iret
pusha
testl
and
push
pop
arpl
push
je
xor
mov
negb
fnstenv
pop
mov
mov
rclb
out
adc
inc
adc
aam
jns
test
xchg
test
mov
push
fldcw
push
jecxz
mov
cld
loopne
or
outsb
mov
js
incb
jno
lret
int3
cmp
imul
sbb
or
ret
push
inc
mov
push
popf
out
in
sbb
lahf
xor
pop
dec
pop
and
sub
rcr
outsb
pop
add
aas
bound
lret
mov
adc
cmp
test
pop
sub
scas
das
mov
sub
cmp
lds
mov
mov
repz
movsb
enter
push
ret
test
mov
cmp
fildll
mov
cmp
jne
jl
mov
or
imul
mov
or
pop
push
sub
jne
jae
cmc
into
sbb
ja
inc
xorl
cli
pop
mov
push
xor
xchg
aaa
aad
sbb
dec
pop
adc
jno
xchg
stos
insb
sbb
mov
sub
push
sub
adc
ss
mov
mov
stc
add
leave
iret
cmpsb
sbb
xchg
outsb
or
es
repnz
test
and
xchg
adc
inc
inc
lret
fbstp
cltd
cmp
cmp
dec
out
aas
add
js
fcmovne
sub
rclb
lods
add
int
data16
loop
fwait
adc
lock
push
out
push
sbb
std
frstor
mov
dec
dec
stos
ds
push
add
lods
int3
nop
push
add
mov
scas
xorl
mov
gs
imul
pop
pop
jp
mov
push
add
cmp
dec
test
popf
and
xrelease
jle
xorb
inc
stos
mov
xorb
add
and
int
sbbl
inc
out
lcall
add
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
add
and
adc
jp
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
fildll
fadds
or
jb
or
jl
fistpll
mov
inc
in
dec
jb
in
cmp
loop
ljmp
into
.byte
lods
.byte
adc
