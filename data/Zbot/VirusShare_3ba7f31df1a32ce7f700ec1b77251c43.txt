add
xor
inc
add
add
cwtl
push
inc
add
add
loopne
inc
add
and
inc
add
and
add
cmp
add
int3
cmp
add
add
inc
inc
add
or
push
inc
add
or
pop
inc
add
or
inc
add
or
pop
inc
add
add
inc
add
add
pusha
insb
inc
add
add
jno
add
add
jae
add
push
clc
js
add
add
jp
add
add
add
add
jge
add
add
jle
add
and
push
inc
add
add
push
daa
inc
add
and
aaa
das
inc
add
and
add
cmp
add
adc
inc
add
add
insb
inc
add
add
inc
add
add
add
add
add
add
add
adc
cmp
sub
dec
dec
nop
jmp
mov
shl
mov
push
push
call
mov
call
pop
call
call
push
call
pop
push
push
call
mov
push
jmp
jmp
xor
mov
ret
mov
ret
pusha
mov
push
push
ret
mov
or
je
cmpl
jae
mov
call
mov
push
push
call
push
call
or
jne
mov
call
push
push
pushl
call
pushl
call
pop
ret
mov
or
je
call
mov
cmp
jae
mov
call
ret
cmpl
jb
pushl
call
or
je
push
push
call
push
call
pushl
call
ret
ret
cmpl
jb
call
pushl
call
ret
mov
mov
mov
ret
nop
push
add
movw
movb
movl
movl
movb
movb
orw
fldl
call
xor
mov
or
xor
mov
mov
shl
sub
shl
add
lea
add
xor
inc
inc
cmp
jl
fldl
call
and
cmpw
jne
mov
jmp
xor
mov
mov
fldl
faddl
fstpl
xor
mov
add
fldl
call
and
xor
mov
mov
shl
sub
shl
add
lea
add
xor
inc
inc
cmp
jl
xor
xor
mov
mov
imul
mov
mov
orw
fldl
call
xor
mov
or
call
add
pop
ret
add
stos
jmp
dec
fnstsw
push
mov
add
push
movw
movb
movl
movl
movb
movb
push
call
pop
fldl
call
mov
xor
and
movzwl
mov
movzwl
imul
mov
xor
mov
xor
sub
mov
mov
imul
mov
and
cmpw
jne
mov
jmp
xor
mov
mov
fldl
faddl
fstpl
jmp
ror
or
push
orw
fldl
call
mov
xor
mov
or
orw
xor
mov
or
jmp
std
cld
lds
rcrb
pop
ret
add
mov
inc
fnstsw
push
mov
push
push
mov
imul
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
push
push
push
lea
mov
call
test
jne
mov
jmp
cmpl
je
call
jmp
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
incl
mov
incl
push
push
call
add
push
call
pop
mov
test
je
mov
mov
mov
pop
pop
pop
mov
pop
ret
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
add
inc
add
add
je
cmp
bound
pop
popa
insb
insb
outsl
arpl
add
adc
add
add
add
push
mov
add
mov
call
movw
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
add
add
nop
add
adc
inc
add
fs
popa
insb
insb
outsl
arpl
sub
add
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
sub
add
dec
add
cmp
gs
gs
imul
add
push
mov
mov
pop
ret
nop
nop
push
mov
mov
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
add
mov
call
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
lea
incl
mov
incl
push
push
call
add
mov
pop
ret
push
call
pop
ret
push
mov
add
mov
call
movw
incl
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
subl
push
push
call
add
mov
mov
mov
pop
ret
nop
nop
nop
push
push
push
mov
mov
cmpl
jne
mov
cmp
je
cmp
jne
movl
jmp
movl
mov
mov
add
dec
dec
not
and
push
push
push
push
call
mov
test
jne
xor
jmp
mov
mov
pop
pop
pop
ret
nop
nop
push
push
push
mov
mov
push
push
push
mov
push
call
mov
mov
test
setne
and
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
mov
je
push
push
push
push
call
test
jne
mov
mov
sub
call
xor
jmp
add
sub
test
jne
mov
pop
pop
pop
ret
nop
push
push
push
call
dec
je
xor
ret
mov
ret
push
push
push
call
dec
je
xor
ret
mov
ret
nop
nop
nop
push
call
cmp
je
push
call
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
test
je
test
je
cmpl
jne
xor
jmp
push
call
mov
test
jne
xor
jmp
push
push
call
mov
push
push
call
mov
push
push
call
mov
mov
cmpl
je
cmpl
je
mov
cmpl
jne
xor
jmp
mov
pop
pop
pop
pop
ret
xor
ret
nop
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
call
test
jne
movl
movl
movl
movl
movl
mov
mov
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
mov
push
call
add
pop
ret
nop
nop
ret
nop
nop
nop
movl
ret
nop
cmpl
je
call
ret
ret
nop
nop
nop
push
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
jmp
mov
add
add
add
mov
mov
add
cmp
jl
mov
xor
add
add
add
xor
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
xor
cmp
jae
or
jmp
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
xor
mov
and
add
add
cmpl
jne
mov
add
add
and
lea
mov
mov
mov
and
add
add
call
add
mov
sub
sub
sub
lea
mov
and
movl
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
and
mov
mov
add
add
cmp
jbe
testb
je
sub
mov
sub
mov
and
sub
cmp
jbe
or
jmp
sub
mov
and
mov
add
mov
mov
and
movl
mov
and
cmp
jae
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
and
add
add
add
mov
mov
mov
mov
and
add
mov
mov
jmp
or
jmp
mov
sub
mov
sub
add
mov
and
xor
mov
add
push
call
pop
add
xor
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
add
and
cmpl
jne
call
mov
cmpl
jne
mov
add
add
and
add
mov
test
je
mov
mov
sub
cmp
jae
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
cmp
jae
mov
jmp
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
mov
mov
mov
sub
add
call
test
je
mov
sub
add
push
push
call
add
xor
jmp
mov
mov
add
call
test
je
addl
mov
add
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
lea
lea
lea
cmp
jae
mov
jmp
lea
call
test
jne
or
jmp
mov
add
cmp
jae
mov
jmp
mov
dec
mov
add
add
add
cmp
jae
mov
jmp
mov
dec
mov
not
and
test
mov
je
mov
mov
add
cmp
jne
cmpl
jge
mov
mov
sub
test
je
mov
mov
add
call
test
je
add
mov
push
push
call
add
jmp
or
jmp
mov
mov
sub
call
test
je
mov
sub
add
mov
incl
mov
mov
mov
add
add
sub
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
mov
mov
call
test
jne
mov
call
or
jmp
add
mov
push
push
mov
push
call
add
xor
pop
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
and
add
add
mov
cmp
jbe
mov
jmp
mov
mov
sub
cmp
jbe
xor
jmp
dec
not
and
mov
mov
test
je
mov
mov
add
add
cmp
jne
mov
sub
push
push
call
add
jmp
decl
mov
mov
mov
mov
sub
sub
mov
mov
call
sub
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
add
cmp
jbe
mov
sub
mov
add
call
mov
sub
sub
mov
mov
jmp
mov
test
jne
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
and
cmp
jb
add
call
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
mov
test
je
call
lea
mov
test
je
mov
sub
and
add
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
orl
mov
and
add
add
testb
je
mov
and
add
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
and
orl
mov
and
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
and
cmpl
jne
mov
cmp
jbe
mov
jmp
mov
cmp
jbe
push
call
pop
call
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
xor
mov
add
and
lea
mov
call
test
je
addl
sub
mov
mov
mov
pop
pop
pop
ret
nop
push
mov
mov
test
jne
xor
pop
ret
cmp
jb
push
call
pop
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
push
mov
test
jne
xor
jmp
call
cmp
jae
mov
jmp
lea
and
cmpl
jne
push
call
pop
cmp
jae
mov
add
mov
add
add
mov
cmp
je
mov
andl
lea
mov
and
andl
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
cmp
jne
mov
add
add
add
jmp
add
cmp
je
mov
test
je
mov
jmp
mov
jmp
mov
mov
mov
cmp
jbe
movl
mov
jmp
mov
cmp
ja
mov
mov
cmp
jne
mov
cmp
je
mov
and
mov
sub
cmp
jae
andl
mov
and
andl
cmp
jb
mov
mov
mov
mov
lea
mov
mov
mov
call
mov
jmp
mov
sub
mov
and
mov
add
add
lea
mov
lea
mov
cmp
jae
add
add
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
jmp
jmp
lea
push
call
pop
test
jne
call
push
call
pop
jmp
call
xor
pop
pop
pop
ret
nop
nop
add
movl
push
call
mov
add
ret
push
push
push
push
push
mov
test
je
mov
mov
decl
mov
lea
test
jl
mov
mov
mov
sub
push
mov
pop
mov
sub
sub
mov
mov
mov
call
mov
call
dec
add
test
jge
mov
test
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
call
mov
add
mov
and
add
add
cmp
jae
mov
jmp
lea
and
mov
and
cmp
jne
call
mov
jmp
mov
and
test
je
mov
and
add
add
cmp
ja
xor
test
mov
je
mov
and
cmp
jb
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
andl
mov
and
add
mov
mov
sub
cmp
jb
sub
mov
mov
and
add
mov
and
add
add
mov
lea
mov
and
orl
cmp
jae
mov
add
add
add
jmp
cmpl
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
jmp
call
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
add
and
mov
mov
and
sub
cmp
jne
mov
jmp
mov
sub
cmp
jae
call
mov
push
call
pop
mov
test
je
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
mov
sub
cmp
jae
mov
push
call
pop
mov
call
test
je
mov
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
lea
mov
add
sub
add
call
sub
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
test
jne
push
call
pop
xor
jmp
test
jne
push
call
pop
jmp
mov
and
cmp
jb
push
push
call
add
jmp
push
push
call
add
test
je
mov
jmp
lea
mov
call
push
call
pop
mov
test
je
mov
mov
and
cmp
jb
mov
mov
and
push
push
push
call
add
push
call
pop
call
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
test
jne
xor
pop
ret
add
mov
and
mov
pop
ret
nop
nop
ret
nop
nop
nop
ret
nop
nop
nop
push
push
push
call
add
push
push
push
push
call
add
push
call
add
ret
nop
nop
nop
push
mov
add
mov
call
movw
push
call
incl
incl
incl
incl
movl
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
call
decl
decl
push
push
call
add
decl
decl
push
push
call
add
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
nop
nop
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
and
inc
add
add
je
cmp
bound
pop
arpl
je
add
les
add
add
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
loopne
inc
add
add
je
cmp
bound
pop
je
jo
imul
add
add
add
add
add
add
xor
incl
add
add
inc
add
add
add
add
add
inc
add
push
push
push
inc
dec
jne
gs
push
mov
push
mov
test
je
cmpl
je
xor
mov
push
call
testb
je
push
call
pop
pop
pop
ret
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
call
movw
push
call
movl
incl
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
add
mov
call
movl
cmpl
je
movw
mov
mov
mov
decl
push
mov
push
call
add
testb
je
mov
push
call
pop
mov
mov
mov
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
shr
shr
cld
rep
mov
and
rep
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
cmp
jb
je
std
lea
lea
and
rep
mov
shr
shr
sub
sub
rep
cld
jmp
cld
shr
shr
rep
mov
and
rep
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
mov
test
je
mov
lea
mov
mov
shr
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
lea
dec
jne
mov
mov
mov
pop
pop
ret
mov
mov
pop
pop
ret
and
je
mov
dec
je
mov
mov
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
cld
rep
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
cld
repnz
lea
mov
mov
repnz
not
sub
xchg
mov
shr
shr
cld
rep
mov
and
rep
mov
pop
pop
pop
ret
mov
test
jne
mov
add
mov
sub
and
je
not
and
je
test
jne
test
jne
test
jne
jmp
add
testb
je
testb
je
testb
je
dec
and
jmp
dec
dec
dec
mov
dec
sub
ret
nop
nop
push
mov
push
push
mov
mov
xor
cld
repnz
mov
lea
and
mov
jecxz
mov
mov
test
je
inc
inc
dec
jne
mov
shr
jecxz
mov
mov
test
je
mov
mov
test
je
mov
mov
test
je
mov
add
mov
add
test
je
dec
jne
movb
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
add
add
cmp
jge
test
jne
xor
jmp
mov
mov
cmp
jne
inc
inc
dec
jne
xor
mov
xor
mov
sub
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
call
pop
mov
inc
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
xor
mov
jmp
inc
add
cmpw
jne
mov
pop
ret
push
mov
push
push
mov
push
call
pop
mov
xor
mov
mov
mov
cmp
jbe
mov
mov
inc
add
add
cmp
ja
mov
movw
mov
pop
pop
pop
ret
nop
push
mov
add
mov
lea
mov
movl
movw
movw
movl
addr16
mov
mov
pop
ret
addr16
ret
sub
inc
inc
inc
js
xor
mov
add
push
push
push
pushl
pushl
pushl
pushl
call
add
pop
pop
pop
pop
add
ret
push
mov
add
push
push
push
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
mov
movzwl
add
mov
test
je
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
call
xor
mov
test
je
test
je
mov
test
je
push
push
mov
call
add
mov
test
jne
inc
cmp
jl
mov
mov
pop
pop
mov
pop
ret
push
mov
add
xor
xor
xor
push
push
push
mov
mov
mov
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
pushl
pushl
call
add
test
je
xor
jmp
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
mov
testb
jne
xor
jmp
xor
mov
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
mov
mov
add
mov
testb
je
mov
mov
push
pushl
call
add
test
jne
testb
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
add
test
je
mov
mov
mov
mov
jmp
jmp
cmpl
je
cmp
jne
mov
jmp
cmpl
je
cmpl
jne
push
push
push
call
add
push
push
pushl
push
push
pushl
pushl
push
push
call
add
test
je
cmpl
je
cmp
jne
mov
or
jmp
incl
mov
mov
mov
add
jmp
cmpl
jne
incl
mov
movzwl
add
jmp
mov
mov
mov
cmpl
je
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
cmpl
jne
push
push
push
call
add
mov
test
jne
xor
jmp
mov
add
mov
cmpl
je
mov
mov
mov
pushl
push
call
add
test
je
mov
mov
mov
jmp
testb
je
movzwl
add
test
je
lea
push
pushl
push
push
call
add
test
je
mov
mov
mov
jmp
add
jmp
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
call
add
push
push
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jne
mov
pop
pop
ret
cmpw
jne
push
push
push
call
add
movzwl
add
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
je
xor
jmp
mov
or
test
je
xor
jmp
movzwl
add
cmpw
jne
push
push
push
call
add
movzwl
add
cmpw
jne
push
push
push
call
add
movsbl
movsbl
inc
inc
cmp
je
xor
jmp
test
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
movzwl
movzwl
mov
mov
and
test
je
and
andl
cmp
je
test
jne
mov
mov
and
and
cmp
je
mov
and
not
and
test
je
xor
jmp
or
orl
cmp
je
xor
jmp
mov
mov
mov
jmp
mov
and
test
je
mov
cmp
je
test
jne
mov
or
je
xor
jmp
mov
mov
mov
jmp
push
push
call
add
test
je
mov
jmp
test
je
testb
je
testb
je
push
pushl
push
push
call
add
jmp
xor
pop
pop
pop
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
push
push
mov
mov
mov
cmp
jne
mov
jmp
cmpl
je
mov
testb
jne
cmpl
je
mov
testb
je
xor
jmp
push
call
pop
push
push
call
pop
mov
pop
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
sete
and
pop
pop
pop
ret
nop
nop
nop
push
mov
add
mov
push
push
push
mov
call
cmpl
mov
jne
lea
mov
push
push
push
push
push
push
push
mov
mov
lea
mov
push
push
call
add
test
je
testb
je
xor
jmp
sub
cmpl
je
push
push
push
call
add
mov
jmp
mov
mov
add
sar
and
mov
mov
mov
test
je
cmp
jne
cmp
je
mov
test
jne
test
jne
push
call
pop
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
cmpl
jne
cmpl
je
mov
jmp
cmpl
jne
mov
jmp
mov
mov
movzbl
lea
push
call
pop
mov
push
inc
push
pushl
call
add
mov
movb
mov
jmp
pushl
call
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
cmpl
jne
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
mov
test
je
push
push
push
call
add
xor
pop
pop
pop
ret
nop
nop
or
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
dec
add
cmp
je
jo
pop
imul
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
jo
inc
add
add
jns
gs
imul
jae
add
int3
aaa
inc
add
add
add
add
add
in
push
mov
test
je
push
push
call
add
testb
je
push
call
pop
pop
pop
ret
nop
nop
cmpl
jne
movl
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
mov
cmp
je
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
call
andl
mov
cmp
je
call
call
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
call
andl
mov
cmpl
jne
pushl
push
push
call
add
call
mov
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
call
andl
mov
cmpl
jne
pushl
push
push
call
add
mov
call
call
ret
nop
nop
nop
push
mov
add
push
mov
test
setne
and
test
jne
test
jne
lea
push
call
pop
mov
push
push
call
add
push
call
add
call
pop
pop
pop
pop
ret
nop
push
mov
push
mov
call
add
mov
movl
movl
pop
pop
ret
nop
push
mov
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
jne
xor
jmp
mov
cmp
je
cmp
jne
mov
mov
call
call
cmpl
jne
cmpl
je
push
call
pop
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
mov
cmp
je
cmp
jne
mov
cmp
jb
cmp
jbe
push
push
push
push
push
call
add
mov
mov
lea
push
call
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
xor
mov
movl
push
call
pop
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
movl
ret
nop
movl
movl
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
addr16
pop
ret
push
mov
mov
mov
cmp
jne
mov
addr16
pop
ret
cmp
je
cmp
je
mov
jmp
mov
mov
jmp
jmp
nop
nop
mov
mov
jmp
push
push
push
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
xor
pop
pop
ret
mov
push
call
cmp
sete
and
pop
pop
ret
nop
nop
nop
push
mov
mov
push
call
cmp
sete
and
pop
ret
nop
push
mov
push
push
push
mov
cmp
jb
push
call
pop
jmp
mov
sub
jb
je
dec
je
jmp
xor
jmp
mov
jmp
mov
jmp
push
call
pop
jmp
push
call
pop
andl
push
push
mov
push
mov
push
call
mov
inc
jne
call
push
call
pop
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
jb
push
call
pop
jmp
mov
inc
cmp
jae
xor
jmp
mov
push
call
pop
mov
testb
je
push
push
mov
push
call
add
mov
testb
jne
mov
push
push
mov
push
call
add
mov
jmp
mov
xor
mov
xor
mov
jmp
lea
jmp
mov
inc
cmp
jne
incl
movb
inc
movb
inc
jmp
mov
inc
lea
mov
sub
cmp
jge
mov
sub
cmp
jb
lea
mov
sub
lea
push
push
mov
push
call
add
lea
sub
cmp
je
cmp
jne
or
jmp
mov
sub
add
jmp
add
mov
sub
cmp
jb
mov
sub
mov
push
call
pop
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
test
je
movb
xor
pop
ret
nop
nop
nop
push
push
push
call
xor
mov
mov
jmp
testb
je
cmpl
je
push
call
pop
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
push
call
pop
pop
pop
ret
push
lea
push
mov
push
mov
push
mov
push
call
dec
je
call
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
testb
je
mov
push
call
pop
andw
xor
mov
lea
mov
mov
cmpl
je
test
jbe
movl
test
jne
push
call
pop
mov
test
je
orw
jmp
or
jmp
mov
mov
mov
cmpl
jne
orw
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
test
jne
call
xor
jmp
cmp
je
or
jmp
push
call
cmpl
pop
jl
testb
jne
lea
cmp
jne
xor
mov
lea
cmp
jne
mov
mov
xor
jmp
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
push
call
pop
mov
pop
pop
pop
ret
nop
push
push
push
push
call
xor
mov
mov
jmp
mov
test
jge
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
pop
ret
push
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
mov
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
push
mov
cmpl
jne
push
push
push
call
add
mov
mov
mov
push
call
pop
cmpl
je
call
pop
ret
nop
nop
nop
push
mov
xor
mov
jmp
cmpl
je
inc
add
cmp
jl
cmp
jne
or
pop
ret
mov
mov
mov
mov
pop
ret
push
mov
mov
mov
cmp
jne
xor
mov
jmp
inc
add
cmp
jge
cmpl
jne
mov
cmp
jbe
cmp
ja
or
pop
ret
mov
test
je
cmpl
je
or
pop
ret
mov
mov
mov
pop
ret
push
mov
mov
cmp
jae
xor
mov
pop
ret
nop
nop
nop
push
mov
add
mov
test
push
mov
lea
je
cmpl
jne
dec
add
test
jne
test
jne
test
jne
xor
jmp
lea
add
mov
jmp
mov
xor
mov
add
movl
cmp
jle
mov
mov
mov
test
je
or
test
jne
or
test
je
or
mov
inc
incl
addl
cmp
jg
shl
push
push
push
call
add
xor
pop
pop
pop
pop
ret
nop
nop
push
push
push
add
push
push
call
add
mov
push
call
mov
cmp
jae
mov
movl
xor
mov
lea
push
call
movzwl
mov
test
je
mov
mov
add
mov
lea
add
cmp
jne
movl
xor
mov
cmp
jge
mov
inc
xor
test
je
or
test
je
or
test
je
or
jmp
or
mov
inc
and
or
mov
add
cmp
jl
mov
lea
jmp
xor
inc
mov
add
cmp
jb
mov
shl
push
push
push
call
add
cmpl
jne
push
call
mov
push
call
mov
push
call
mov
xor
mov
push
call
pop
test
jne
cmpl
je
orl
cmpl
je
orl
jmp
andl
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jl
cmp
jle
mov
call
mov
movsbl
mov
jmp
neg
cmp
jge
call
movl
call
mov
or
pop
pop
ret
push
call
mov
and
mov
and
push
call
pop
mov
pop
ret
call
and
push
call
pop
ret
nop
nop
push
mov
push
push
call
add
xor
lea
mov
inc
shl
lea
add
mov
add
cmp
jl
mov
lea
jmp
mov
movb
shl
inc
lea
add
mov
add
cmp
jb
movsbl
testb
jne
andw
push
testb
je
mov
jmp
xor
push
push
push
call
add
lea
movsbl
testb
jne
lea
andw
push
lea
testb
je
mov
jmp
xor
push
push
lea
push
call
add
pop
ret
nop
nop
push
mov
call
testb
je
push
call
pop
mov
push
call
pop
xor
mov
xor
mov
lea
testb
je
lea
push
call
pop
lea
mov
push
call
lea
pop
xor
lea
mov
xor
mov
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
sub
mov
cltd
idiv
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
push
mov
cmpl
jne
push
push
push
call
add
mov
sub
mov
cltd
idiv
mov
mov
push
call
pop
cmpl
je
call
pop
ret
push
push
call
xor
mov
jmp
testb
je
push
call
pop
inc
add
cmp
jb
call
pop
pop
ret
nop
nop
nop
push
mov
mov
mov
cmp
jg
je
sub
je
dec
je
jmp
sub
je
dec
je
jmp
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
xor
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
cmpl
setb
and
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
movzwl
cmp
setb
and
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
mov
mov
cmp
jbe
xor
pop
ret
mov
cmpl
jne
cmpl
jne
movswl
movzwl
and
pop
ret
mov
movzwl
and
mov
pop
ret
nop
push
mov
push
push
cmpl
mov
jne
xor
jmp
mov
cmpl
je
cmpl
jge
movswl
movzwl
and
jmp
lea
lea
push
push
push
push
call
movzwl
and
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
mov
cmp
jge
fldt
jmp
cmp
jle
mov
fldt
jmp
test
jne
fldt
jmp
mov
test
jge
mov
neg
mov
and
sar
test
lea
mov
mov
mov
mov
mov
mov
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
test
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
test
jge
fldt
fdivrs
jmp
fldt
pop
mov
pop
ret
add
add
add
cmpb
mov
lea
fnstsw
fnclex
movzwl
mov
pop
ret
nop
push
mov
lea
fstcw
mov
mov
jecxz
mov
and
not
fwait
movzwl
and
or
mov
fldcw
mov
pop
ret
nop
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
fninit
push
pushl
call
add
ret
nop
nop
push
mov
lea
fstcw
fwait
mov
orl
fldcw
fistpll
mov
fldcw
mov
mov
mov
pop
ret
nop
push
mov
lea
mov
testb
jne
fildll
mov
pop
ret
mov
mov
mov
mov
movw
fldt
mov
pop
ret
nop
nop
nop
mov
mov
cmpw
je
fldt
fistpll
fwait
ret
mov
mov
mov
mov
ret
nop
nop
nop
mov
fldt
fxam
xor
fstsw
fstp
fwait
ret
nop
nop
nop
push
mov
add
push
push
push
mov
test
jne
mov
mov
jmp
mov
mov
lea
mov
mov
and
mov
and
cmp
jne
fldt
fstpl
fldl
jmp
cmp
jae
mov
mov
mov
mov
jmp
cmp
jne
push
push
call
add
mov
push
push
call
add
test
jne
fldt
fstps
flds
fstpl
fwait
jmp
fldt
fstpl
fwait
push
mov
push
call
fldl
add
jmp
mov
or
or
or
or
jne
fldt
fstpl
fldl
jmp
cmp
jbe
xor
mov
mov
call
movl
cmpw
je
fldl
fchs
jmp
fldl
jmp
fldt
fstpl
fldl
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
cmp
jl
cmp
jg
test
jge
cmpb
je
movb
inc
neg
lea
mov
xor
div
mov
inc
mov
xor
div
mov
test
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
mov
mov
xor
or
je
div
mov
mov
div
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
mul
add
adc
mov
mov
mov
mul
add
adc
mov
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
dec
cmp
jb
mov
jmp
cmpb
je
mov
cmp
jne
dec
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
push
call
pop
mov
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpb
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmpl
je
movb
inc
cmpb
je
cmpb
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movb
inc
mov
mov
inc
test
je
movb
inc
inc
test
jne
xor
lea
jmp
mov
inc
dec
jne
mov
mov
inc
inc
inc
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
dec
je
jmp
dec
je
cmpb
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movb
inc
movb
jmp
lea
mov
inc
mov
inc
mov
inc
test
je
mov
mov
inc
test
je
mov
inc
mov
inc
test
jne
cmpb
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpb
je
mov
mov
inc
mov
and
or
mov
inc
dec
jns
neg
movb
inc
jmp
movb
inc
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movb
lea
mov
test
je
mov
mov
cltd
idiv
dec
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
sub
cmp
jb
mov
jmp
cmpw
je
mov
cmp
jne
sub
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
push
call
mov
pop
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpw
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmpl
je
movw
add
cmpw
je
cmpw
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movw
add
mov
mov
add
test
je
movw
add
inc
test
jne
xor
lea
jmp
mov
add
dec
jne
mov
mov
add
inc
add
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
add
dec
je
jmp
dec
je
cmpw
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movw
add
movw
jmp
lea
mov
add
mov
add
mov
add
test
je
mov
mov
add
test
je
mov
add
mov
add
test
jne
cmpw
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpw
je
mov
mov
add
mov
and
or
mov
add
dec
jns
neg
movw
add
jmp
movw
add
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movw
lea
mov
test
je
mov
mov
cltd
idiv
add
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
pop
mov
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
test
jne
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movsbl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
mov
pop
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movzwl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
add
mov
movb
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
mov
mov
movb
dec
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
add
mov
dec
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movb
incl
movb
mov
test
jg
mov
sub
cmp
jle
mov
mov
movb
mov
sub
sub
test
jle
push
push
mov
push
call
add
mov
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
mov
add
mov
movw
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
add
mov
mov
movw
sub
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
movsbl
add
mov
sub
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movw
addl
movw
mov
test
jg
mov
sub
cmp
jle
mov
mov
movw
mov
sub
sar
jns
adc
sub
test
jle
push
push
mov
push
call
add
mov
movw
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
cmp
jne
call
mov
jmp
cmp
jne
call
mov
jmp
cmp
jne
mov
mov
test
je
lea
push
push
call
test
jne
push
call
pop
or
jmp
xor
mov
movb
inc
inc
cmp
jl
test
je
cmpl
jbe
lea
jmp
and
lea
jmp
movb
inc
inc
xor
mov
cmp
jle
add
mov
test
je
cmpb
jne
mov
mov
orb
inc
inc
cmp
jl
cmp
jne
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
mov
jmp
xor
mov
xor
pop
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
nop
call
push
call
pop
ret
nop
nop
nop
push
mov
mov
cmp
jbe
xor
pop
ret
push
call
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
xor
xor
mov
testb
je
cmpb
jne
inc
test
jne
mov
jmp
xor
mov
shl
movzbl
or
cmp
jne
mov
inc
jmp
xor
mov
cmp
jne
mov
mov
inc
test
jne
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
push
mov
movb
lea
mov
jmp
push
call
pop
mov
sub
dec
test
jle
push
push
push
call
add
addl
mov
mov
test
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
push
push
mov
push
push
push
push
call
add
push
call
pop
add
push
mov
push
call
add
push
call
pop
call
pop
ret
nop
nop
add
push
call
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
push
push
call
add
mov
add
ret
nop
nop
push
mov
push
push
push
push
mov
push
push
push
push
push
push
mov
push
call
mov
test
je
call
mov
lea
push
push
push
call
pop
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
call
pop
pop
pop
pop
pop
ret
push
push
call
mov
call
mov
push
add
call
mov
pop
pop
ret
nop
nop
push
mov
mov
movl
xor
pop
ret
nop
nop
push
xor
mov
call
shr
movzwl
test
jne
mov
pop
ret
mov
push
push
call
push
call
cmpl
je
mov
jmp
mov
pop
ret
push
mov
add
cmpl
push
push
mov
jne
cmpl
jne
cmpl
je
push
lea
push
push
call
push
lea
push
call
add
mov
test
jne
push
lea
push
call
add
mov
test
jne
lea
jmp
inc
call
or
push
push
push
push
call
jmp
push
call
mov
lea
push
push
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
lea
push
push
push
push
call
jmp
cmpl
je
cmpl
je
push
call
pop
mov
test
je
cmpl
je
cmpb
je
push
push
call
add
pop
pop
mov
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
push
call
pop
pop
ret
nop
push
add
push
call
mov
push
push
call
push
push
call
test
je
movl
jmp
movl
push
call
mov
sub
jb
je
dec
je
jmp
movl
jmp
movl
jmp
movl
jmp
movl
add
pop
ret
nop
nop
nop
push
call
pop
push
call
pop
ret
push
call
pop
call
ret
nop
nop
ret
nop
nop
nop
push
mov
push
mov
call
test
jne
cmpl
je
call
call
call
jmp
xor
mov
cmpl
jne
test
jne
call
call
call
call
call
mov
push
call
pop
call
pop
pop
ret
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
push
push
call
add
ret
nop
push
push
push
call
add
ret
nop
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
cmpl
je
xor
xor
mov
mov
mov
mov
push
call
pop
mov
mov
push
mov
push
push
call
add
test
je
push
push
call
add
decl
jmp
xor
xor
mov
mov
mov
mov
mov
mov
pop
ret
call
cmpl
je
mov
push
call
pop
mov
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
cmp
jne
addl
mov
shl
push
mov
push
call
add
mov
test
jne
push
call
pop
cmpl
je
push
call
pop
inc
push
call
pop
mov
test
jne
push
call
pop
xor
push
mov
or
repnz
not
sub
mov
xchg
mov
mov
shr
rep
mov
and
rep
pop
jmp
mov
mov
mov
mov
incl
pop
pop
pop
pop
ret
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
inc
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
je
mov
mov
jmp
cmp
jne
incl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movb
incl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpb
je
incl
mov
cmpb
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
cmpl
je
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
mov
mov
xor
mov
testb
je
cmpb
je
mov
mov
incl
incl
mov
mov
mov
mov
incl
incl
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
add
add
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
je
mov
mov
jmp
cmp
jne
addl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movw
addl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpw
je
addl
mov
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
nop
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
mov
mov
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
cmpl
je
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
jmp
mov
cmpw
je
mov
mov
mov
mov
addl
addl
mov
mov
mov
mov
addl
addl
pop
pop
ret
nop
push
push
call
pop
mov
mov
test
jne
push
call
pop
push
mov
push
push
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
xor
xor
mov
mov
ret
nop
nop
nop
push
push
push
push
push
cmpl
jne
cmpl
jne
call
mov
test
jne
push
call
pop
xor
xor
mov
jmp
lea
inc
add
add
push
call
pop
mov
test
jne
lea
push
call
pop
mov
mov
test
jne
xor
jmp
push
mov
push
push
call
add
jmp
xor
mov
jmp
push
call
pop
test
jne
dec
inc
add
mov
test
jne
lea
push
mov
inc
push
call
add
test
mov
jne
xor
jmp
cmpl
jne
xor
mov
mov
mov
jmp
mov
add
inc
inc
add
push
call
pop
mov
test
jne
jmp
xor
mov
mov
mov
jmp
push
call
pop
test
je
mov
mov
jmp
dec
add
add
inc
add
mov
test
jne
mov
test
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
call
test
jne
push
call
pop
ret
mov
mov
push
push
call
add
ret
nop
nop
push
mov
xor
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
call
mov
test
je
mov
test
jne
mov
jmp
xor
mov
cmp
jg
je
cmp
jg
je
sub
je
dec
je
jmp
sub
je
sub
je
jmp
add
cmp
ja
jmp
loopne
inc
add
jne
add
je
add
jne
add
jne
add
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
mov
jmp
mov
cmp
jne
xor
jmp
test
jne
mov
jmp
xor
cmp
mov
je
cmp
je
cmp
jne
call
push
mov
push
call
add
lea
push
mov
push
mov
push
call
mov
add
not
and
jmp
lea
push
push
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
jne
mov
jmp
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
cmpb
mov
jne
movl
push
push
call
movb
push
call
pop
mov
inc
jne
call
movl
or
jmp
cmp
je
cmp
jne
mov
jmp
call
mov
test
jne
or
jmp
mov
test
jne
push
call
pop
mov
test
jne
call
movl
or
jmp
xor
mov
xor
inc
mov
add
cmp
jl
mov
mov
mov
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
cmp
je
cmp
jne
mov
jmp
call
mov
test
je
mov
test
jne
mov
jmp
push
call
pop
mov
inc
jne
mov
jmp
mov
cmp
je
test
jne
add
sub
jb
sub
je
sub
je
jmp
call
jmp
push
call
pop
jmp
xor
mov
xor
mov
push
push
push
call
add
xor
pop
pop
pop
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
xor
ret
nop
xor
ret
nop
push
mov
add
push
push
push
cmpl
je
movl
movl
mov
jmp
movl
movl
xor
mov
cmp
je
xor
mov
mov
lea
mov
jmp
mov
cmpl
mov
je
mov
jmp
mov
cmpl
je
mov
jmp
mov
mov
cmpl
jne
mov
cmp
jae
mov
cmp
jne
call
add
cmp
jb
jmp
mov
add
cmp
ja
mov
cmp
jne
call
sub
cmp
jbe
incl
addl
mov
mov
cmp
jg
add
cmp
jne
pop
pop
pop
mov
pop
ret
nop
nop
push
push
push
cmpl
jne
movl
push
push
call
add
push
push
call
add
call
mov
test
je
push
push
call
add
xor
lea
jmp
mov
mov
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
mov
add
push
push
push
mov
mov
and
mov
call
mov
push
mov
push
call
add
mov
push
call
pop
mov
push
call
pop
movl
mov
lea
mov
call
call
mov
call
mov
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
call
mov
test
je
mov
movl
push
push
call
add
xor
mov
lea
jmp
mov
mov
push
push
call
add
incl
add
mov
cmp
jg
push
push
call
add
testb
je
mov
jmp
inc
mov
cmp
je
cmp
je
cmpb
jne
mov
inc
jmp
mov
jmp
inc
mov
test
je
cmp
je
cmp
jne
cmpb
jne
inc
jmp
inc
mov
test
je
cmp
je
cmp
je
call
push
push
push
push
call
push
call
add
push
call
pop
jmp
mov
push
mov
push
mov
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
nop
add
push
call
testb
je
movzwl
jmp
mov
add
ret
call
mov
ret
call
mov
ret
push
add
xor
movl
lea
push
call
cmpl
jne
mov
push
lea
push
lea
push
call
call
add
mov
add
pop
ret
nop
call
ret
nop
nop
push
mov
mov
push
call
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
mov
push
mov
push
call
pop
ret
push
mov
pop
ret
nop
push
mov
pop
ret
nop
xor
ret
nop
push
call
mov
test
jne
call
mov
call
mov
mov
pop
ret
nop
nop
push
mov
push
call
pop
mov
test
je
mov
mov
jmp
push
call
pop
mov
test
je
push
push
push
call
add
test
je
movl
xor
xor
mov
xor
mov
xor
mov
mov
cmpl
jne
mov
push
call
pop
mov
test
jne
push
call
pop
xor
jmp
mov
push
push
mov
push
call
add
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
mov
push
call
pop
mov
mov
mov
mov
push
call
pop
pop
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
push
mov
call
mov
test
je
push
call
pop
jmp
mov
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
mov
push
call
pop
mov
mov
test
jne
pop
pop
ret
nop
push
mov
push
call
cmpl
jl
mov
push
call
pop
mov
shl
lea
add
push
call
mov
mov
shl
lea
add
mov
push
incl
call
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
add
push
push
mov
lea
mov
mov
rep
movsb
mov
push
lea
push
call
add
lea
push
call
pop
pop
pop
mov
pop
ret
nop
nop
push
call
movl
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
mov
mov
jmp
ret
push
mov
push
mov
push
call
pop
test
jne
cmp
ja
call
testb
je
call
call
orl
call
mov
pop
pop
ret
pop
pop
ret
push
mov
push
mov
call
cmp
jne
call
andl
pop
pop
ret
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
pushl
push
push
push
call
add
test
je
mov
jmp
movzwl
mov
movzwl
test
je
pushl
push
pushl
push
call
add
test
je
mov
jmp
mov
movzwl
test
jne
xor
jmp
pushl
push
push
push
call
add
test
je
mov
jmp
test
je
testb
je
mov
jmp
testb
jne
xor
jmp
test
je
test
jne
testb
jne
test
jne
testb
jne
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
test
mov
jne
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
je
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
push
call
add
jmp
push
push
push
call
jmp
mov
xor
mov
call
jmp
push
push
push
call
jmp
mov
test
je
push
push
push
call
add
jmp
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
call
add
jmp
push
push
call
jmp
mov
mov
call
jmp
push
push
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
mov
xor
test
je
jmp
inc
mov
inc
test
jne
pop
ret
push
mov
push
lea
push
mov
inc
inc
push
push
push
call
pop
pop
ret
push
mov
push
push
push
cmpl
mov
je
mov
jmp
xor
testb
je
or
mov
cmpl
jne
pushl
call
pop
mov
push
call
pop
push
push
pushl
push
push
call
add
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
push
pushl
call
add
jmp
push
pushl
call
jmp
mov
mov
call
jmp
push
pushl
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
pushl
call
pop
pop
pop
ret
pushl
call
pop
pop
ret
mov
call
pop
pop
ret
pushl
call
pop
pop
ret
mov
test
je
push
push
push
call
add
pop
pop
ret
push
mov
add
mov
push
push
push
call
mov
call
orl
call
test
je
movzwl
add
jmp
xor
mov
call
mov
mov
call
mov
mov
mov
movzwl
test
mov
je
mov
jmp
xor
test
mov
je
mov
mov
mov
lea
push
call
pop
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
movb
push
pushl
mov
add
push
call
add
mov
cmpl
je
mov
cmpl
jne
push
call
pop
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
mov
sub
push
push
push
call
add
testb
je
cmpl
jne
push
push
push
call
add
mov
mov
movw
pushl
pushl
pushl
mov
add
push
call
movw
add
jmp
call
movw
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
push
push
push
push
call
mov
addr16
pop
pop
pop
mov
pop
ret
mov
add
push
push
push
push
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
push
mov
add
push
pushl
push
push
push
push
push
mov
mov
mov
call
mov
test
jne
call
cmpb
je
lea
jmp
mov
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
pop
pop
pop
pop
pop
ret
push
mov
add
mov
test
jne
movl
movl
xor
lea
mov
orl
mov
mov
mov
mov
call
mov
pop
ret
push
mov
add
mov
push
push
push
mov
call
test
jne
push
push
push
call
add
movw
push
pushl
push
push
pushl
pushl
call
movw
add
jmp
call
movw
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmpb
je
testb
je
mov
mov
lea
movzwl
push
pushl
push
push
call
add
mov
movb
cmpb
je
mov
test
jne
push
push
push
call
add
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
call
cmpl
jne
push
push
push
call
add
call
mov
call
mov
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmp
je
push
push
push
call
add
mov
mov
movzwl
mov
mov
mov
mov
push
call
pop
push
call
pop
mov
cmpl
jne
pushl
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
je
push
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmpb
je
push
push
push
call
add
mov
mov
mov
test
je
mov
testb
jne
mov
mov
testb
sete
and
lea
mov
mov
movb
mov
mov
add
mov
movzwl
mov
mov
test
je
mov
movzwl
mov
test
je
testb
je
push
push
pushl
call
movl
add
jmp
testb
je
test
je
test
je
testb
je
push
push
push
call
add
movl
jmp
test
jne
push
push
push
call
add
testb
jne
push
push
push
call
add
mov
mov
mov
push
pushl
call
add
test
jne
mov
mov
push
pushl
pushl
call
add
mov
mov
cmp
je
movl
push
lea
push
pushl
call
add
jmp
testb
je
mov
cmp
je
push
push
push
call
add
push
pushl
call
add
test
jne
push
pushl
pushl
call
add
mov
movl
testb
je
mov
cmpl
jne
push
push
push
call
add
mov
pushl
mov
pushl
pushl
pushl
call
movl
add
jmp
push
pushl
pushl
call
add
jmp
test
je
push
lea
push
pushl
call
movl
add
jmp
cmp
je
push
push
push
call
add
push
pushl
pushl
call
add
cmpl
jne
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
mov
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
movzwl
jmp
mov
mov
mov
movzwl
add
mov
movzwl
mov
add
sub
jb
sub
jb
je
dec
je
jmp
jmp
mov
mov
mov
mov
movw
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
mov
movw
jmp
call
add
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
mov
test
jne
test
je
mov
cmp
je
push
push
push
call
add
mov
mov
mov
push
call
pop
push
call
pop
jmp
mov
mov
mov
add
mov
pushl
pushl
add
push
push
call
add
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
je
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
pushl
pushl
call
add
pop
ret
push
mov
push
mov
push
push
call
add
mov
addr16
pop
pop
ret
push
mov
push
push
mov
mov
add
jmp
mov
test
jne
mov
jmp
push
pushl
push
pushl
pushl
call
add
test
je
mov
jmp
add
cmpl
jne
xor
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
cmpl
jne
xor
jmp
call
mov
testb
je
push
pushl
call
add
mov
cmpl
jne
mov
test
je
jmp
push
mov
pushl
pushl
mov
pushl
mov
pushl
call
add
test
jne
add
cmpl
jne
mov
mov
mov
mov
call
mov
mov
jmp
mov
movzwl
test
je
mov
movzwl
mov
add
movzwl
mov
add
mov
cmp
ja
jmp
push
popl
push
mov
stos
mov
loop
inc
add
popl
push
popl
mov
mov
sub
je
jmp
mov
mov
add
pushl
pushl
call
add
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jne
mov
cmpl
jb
mov
cmpl
jbe
pushl
pushl
pushl
push
push
call
add
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
add
push
pushl
call
add
mov
mov
mov
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
add
call
andl
mov
cmpl
jne
cmpl
jne
mov
pushl
call
mov
mov
pop
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
call
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
test
jge
mov
testb
je
mov
mov
mov
xor
jmp
test
je
mov
xor
mov
add
mov
mov
mov
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
push
mov
add
mov
push
push
push
mov
mov
mov
call
testb
jne
push
push
push
call
add
cmpl
jne
push
push
push
call
add
movw
movw
mov
mov
cmp
jae
test
jne
push
push
push
call
add
test
jne
test
je
mov
jmp
mov
mov
sub
push
movzwl
push
pushl
push
push
pushl
call
movw
add
jmp
call
movw
call
movw
jmp
call
movw
call
mov
addr16
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
jmp
mov
add
cmpl
je
mov
mov
testb
je
pushl
pushl
push
push
pushl
push
push
call
add
xor
sub
cmp
jae
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
mov
jmp
mov
mov
test
je
cmp
ja
pushl
pushl
pushl
pushl
pushl
call
add
jmp
cmp
ja
push
push
push
call
add
mov
mov
movzwl
add
mov
mov
cmpl
je
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
test
jne
push
push
push
call
add
movl
testb
je
mov
mov
mov
testb
jne
push
push
push
call
add
mov
imull
cmp
jbe
sub
jmp
mov
add
mov
movl
testb
je
mov
mov
mov
cmpl
jbe
pushl
pushl
push
pushl
push
call
add
jmp
pushl
pushl
push
push
push
push
push
call
add
xor
sub
cmp
jae
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
add
jmp
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmpl
jne
mov
imull
mov
mov
xor
div
mov
mov
cmp
jbe
cmpl
je
push
push
push
call
add
mov
imul
sub
cmp
jae
push
push
push
call
add
mov
imul
add
cmpl
je
pushl
pushl
push
pushl
push
push
push
call
add
jmp
sub
pushl
pushl
push
push
push
push
push
call
add
mov
addl
test
jne
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
testb
jne
push
push
push
call
add
mov
and
cmp
je
mov
jmp
cmpl
jne
mov
jmp
cmpl
jne
mov
add
mov
mov
jmp
mov
sub
sub
cmpl
je
push
push
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
add
xor
push
push
push
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
sub
mov
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
mov
mov
testb
je
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
cmpl
jg
mov
testb
jne
mov
mov
and
cmp
jne
mov
incl
jmp
xor
jmp
mov
cmpl
jne
sub
jmp
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
mov
mov
mov
mov
testb
je
mov
mov
mov
mov
testb
je
mov
testb
je
testb
je
xor
mov
testb
jne
push
push
push
call
add
testb
je
mov
add
mov
jmp
mov
mov
mov
mov
mov
testb
je
mov
testb
je
addl
push
lea
push
pushl
call
add
mov
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
imul
cmp
jae
sub
add
jmp
mov
mov
mov
test
je
mov
add
mov
jmp
mov
mov
test
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
test
je
xor
mov
testb
jne
push
push
push
call
add
mov
test
mov
mov
mov
mov
mov
je
mov
mov
mov
and
mov
cmp
jne
addl
mov
testb
je
mov
testb
je
test
je
push
lea
push
pushl
call
add
mov
mov
mov
cmpl
jne
test
je
mov
cmpw
je
mov
movzwl
add
test
jne
push
push
push
call
add
mov
mov
jmp
xor
mov
cmp
jb
mov
jmp
mov
jmp
xor
mov
testb
je
pushl
pushl
pushl
pushl
pushl
call
add
jmp
pushl
pushl
push
pushl
push
pushl
pushl
call
add
test
je
mov
testb
je
mov
cmpb
je
mov
mov
mov
mov
mov
call
mov
and
cmp
jne
and
cmp
jne
subl
mov
testb
je
mov
mov
mov
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
jmp
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
xor
mov
mov
add
cmp
ja
xor
pop
pop
pop
mov
pop
ret
push
mov
push
mov
cmp
jne
or
pop
pop
ret
mov
cmpw
jne
mov
add
mov
mov
add
mov
jmp
mov
add
push
push
push
call
add
test
je
or
pop
pop
ret
movzwl
pop
pop
ret
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
inc
outsl
jb
popa
outsb
and
sub
sub
jns
imul
xor
and
jb
popa
outsb
and
jb
outsl
jb
je
outsl
outsb
add
add
add
inc
add
adc
ficoms
inc
add
add
dec
inc
add
add
add
add
mov
inc
add
inc
add
insl
inc
add
inc
add
inc
add
add
leave
inc
add
inc
add
nop
mov
inc
add
inc
add
add
inc
add
lcall
in
inc
add
cltd
inc
add
inc
add
inc
add
fwait
inc
add
add
inc
add
inc
add
fwait
inc
add
inc
add
inc
add
add
fwait
inc
add
fwait
inc
add
lcall
lcall
sbb
inc
add
in
push
mov
add
push
dec
jne
mov
add
push
push
push
lea
jmp
bts
xchg
bsr
push
add
add
or
stos
rolb
mov
jmp
bts
xchg
bsr
sub
add
or
or
stos
rolb
mov
call
pop
mov
movb
movb
movb
xor
inc
mov
add
add
mov
add
mov
dec
mov
cmp
jne
mov
cmp
jne
mov
inc
mov
cmp
jne
mov
add
add
mov
mov
mov
test
jl
inc
lea
mov
mov
inc
inc
dec
jne
movw
movw
mov
mov
add
mov
cmp
je
add
mov
cmp
je
mov
mov
test
jl
inc
lea
xor
mov
mov
xor
mov
inc
dec
jne
movw
movw
mov
mov
add
mov
cmp
je
add
mov
cmp
je
movw
movw
movw
mov
mov
add
mov
cmp
je
mov
add
mov
cmp
je
add
mov
cmp
je
lea
call
pop
pop
pop
mov
pop
ret
mov
pop
sub
and
add
ret
adc
add
and
add
add
add
xchg
dec
das
inc
pop
xchg
xor
xchg
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
lock
cmpsl
dec
repz
ret
ret
dec
xchg
dec
xchg
dec
or
xchg
xchg
or
xchg
xchg
je
out
add
xchg
cmp
cmp
add
pop
xor
inc
dec
mov
dec
cmp
cmp
or
dec
lret
leave
addl
cmp
xchg
cmp
cmp
and
aas
dec
cwtl
iret
dec
cwtl
iret
dec
fmuls
dec
cwtl
fcomi
dec
sahf
xor
jae
cmp
add
mov
xchg
mov
xchg
xchg
xchg
xchg
xchg
add
xchg
sbb
inc
cmp
mov
dec
xchg
addr16
mov
adc
and
sarb
xchg
iret
rclb
mov
stc
mov
orl
mov
dec
sar
xchg
jl
lock
xchg
addr16
xchg
out
adc
rorb
adc
add
dec
xchg
addr16
xchg
ffreep
adc
je
add
rol
dec
xchg
arpl
arpl
sarb
cmp
cmp
pop
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
dec
inc
xchg
xor
cmp
dec
xchg
cmp
cmp
out
ret
or
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
dec
inc
iret
cmp
cmp
nop
cmp
dec
xchg
dec
inc
imul
pop
dec
inc
jnp
cmp
xchg
nop
cmp
dec
xchg
dec
inc
in
cmp
xchg
nop
cmp
dec
xchg
dec
inc
fidivrl
cmp
nop
cmp
dec
xchg
dec
inc
cmpb
xchg
nop
cmp
dec
add
inc
idivb
cmp
nop
cmp
dec
xchg
dec
inc
sbb
nop
cmp
dec
xchg
dec
inc
imul
pop
jnp
cmp
cmp
add
dec
xor
movsl
add
dec
xor
movsl
add
push
xor
movsl
dec
push
addr16
push
dec
xor
dec
push
and
push
and
cmp
mov
movsl
dec
push
gs
push
push
xor
dec
push
daa
cmp
and
ret
mov
movsl
add
mov
ret
movsl
add
mov
ret
movsl
dec
inc
popa
xor
inc
mov
fisubl
cmp
movsl
clc
inc
mov
lret
aas
repnz
dec
sahf
aas
dec
inc
pop
cmp
xchg
pop
movsl
dec
pop
gs
add
movsl
inc
cmp
mov
movsl
inc
sub
sub
dec
inc
pop
cmp
xchg
pop
movsl
clc
pop
gs
js
ret
ret
ret
add
mov
cmp
ret
ret
dec
inc
mov
cmp
xchg
nop
test
cmp
das
dec
xor
xchg
cmp
sub
jnp
test
cmp
daa
xchg
cmp
and
push
addb
ret
ret
ret
mov
ret
ret
cmp
mov
cmp
inc
mov
ret
mov
test
ret
ret
dec
xchg
test
dec
adc
ret
ret
ret
ret
fwait
dec
xchg
add
xchg
add
add
or
mov
stc
sahf
dec
mov
dec
sahf
dec
mov
dec
sbb
dec
mov
dec
dec
scas
cmp
cmp
jbe
cmp
cmp
add
inc
cmp
mov
rorb
lret
rorl
int3
insb
popf
movl
lock
rorl
int3
insb
int
sbb
shl
dec
iret
rorl
dec
xchg
xor
dec
xchg
int3
push
cmp
pushf
popf
cwtl
dec
es
add
and
ret
add
ret
ret
cmp
sub
add
inc
cmp
cmp
inc
orb
pop
add
cmp
cmp
add
jl
inc
cmp
cmp
lods
stos
push
add
inc
xchg
inc
or
dec
cmp
add
dec
inc
inc
add
dec
cmp
cmpsb
sahf
add
movsl
add
add
cmp
addl
add
cmp
divb
fistl
cmp
inc
stc
adc
cmp
cmp
cmp
cmp
roll
cmp
test
add
cmp
xchg
add
faddl
dec
add
inc
lock
ret
add
xor
xor
cmp
dec
cmp
cmp
cmp
dec
inc
xchg
movsl
xchg
out
dec
daa
stos
lods
inc
xchg
enter
inc
cmp
cmp
cmp
cmp
testl
add
daa
cmp
dec
jnp
dec
xor
cmp
add
cmp
inc
cmp
cmp
shr
in
cmp
cmp
inc
xchg
cmp
cmp
inc
sahf
lock
inc
cmp
cmp
cmp
cmp
inc
nop
xchg
ret
lahf
gs
cmp
xchg
icebp
movsl
dec
add
cmp
xor
cmp
cmp
insl
mov
cmp
cmp
fdivrl
ret
nop
cmp
cmp
inc
xchg
xchg
mov
cmp
xchg
stc
add
cmp
leave
fdivrp
xor
loope
lods
cmc
add
xchg
xchg
cmp
scas
movsl
cmp
add
cmp
push
mov
inc
jae
cmp
out
inc
inc
addr16
ret
dec
cmp
inc
lods
cmp
cmp
mov
inc
cmp
ret
add
cmp
lock
movsl
ret
cmp
cmp
movsl
xor
scas
inc
inc
inc
pop
xor
cmp
ret
cmp
push
cmp
cmp
inc
inc
cmp
add
scas
add
sub
lock
inc
cmp
xor
cmp
cmp
cmpsl
cmp
cmp
mov
inc
inc
dec
xor
dec
ret
cmp
lret
cmp
add
cmp
xchg
add
ret
lods
cmp
xor
cmp
xor
fisubrl
add
cmp
inc
adcb
cmp
cmpsb
leave
cmp
xchg
cmp
cmp
outsl
add
xchg
jecxz
add
out
ret
inc
sbb
inc
inc
inc
cmp
cmp
sarb
jge
int3
scas
cmp
cmp
mov
add
cmp
add
add
cmpsb
xchg
mov
cmp
cmp
cmp
orb
cmp
clc
inc
cmp
sbb
mov
mov
sub
cmovbe
xchg
cmp
xchg
cmp
cmp
add
ret
ret
mov
inc
je
xchg
ret
sarb
add
dec
cmp
cmp
pop
inc
add
inc
adc
fiadds
add
inc
enter
cmp
cmp
sub
cmp
test
jne
inc
mov
cmp
mov
add
xor
movsl
addr16
cmp
inc
shlb
adcl
dec
je
fcmovnu
cmp
ret
movsl
ret
cs
adc
cmp
cmpsl
inc
add
cmp
pop
iret
inc
mov
cmp
cmp
sarb
cmp
aas
xchg
cmp
cmp
dec
xchg
cmp
mov
or
cmp
add
mov
jae
inc
cmp
jmp
scas
xchg
xor
cmp
add
daa
cmp
push
and
ret
and
dec
xchg
cmp
cmp
cmp
cmp
movl
add
add
cmp
cmp
cmp
dec
inc
cmp
cmp
inc
movsl
mov
xchg
nop
cmp
xchg
ret
cmp
cmp
mov
dec
add
cmp
dec
mov
xchg
inc
inc
dec
xor
cmp
dec
cmp
cmp
cmp
cmp
dec
inc
xor
xchg
mov
inc
stc
add
inc
add
add
cld
incl
add
add
add
add
incl
add
add
lods
inc
add
add
or
add
fdivr
incl
add
add
scas
inc
add
adc
add
add
add
loopne
inc
add
push
inc
add
add
add
add
add
inc
add
inc
add
add
cld
incl
add
add
add
add
incl
add
add
add
add
or
add
fdivr
incl
add
add
inc
add
add
cmp
inc
add
incl
add
add
add
fdivr
incl
add
add
jb
outsb
fs
insl
add
imul
and
fs
imul
and
insb
insb
and
jb
outsb
fs
insl
and
imul
insb
outsb
fs
insl
add
outsl
jb
outsb
fs
insl
inc
push
jns
inc
gs
gs
and
jno
imul
insb
outsb
fs
insl
inc
push
jns
inc
jb
gs
gs
and
jno
jo
add
outsl
jb
outsb
fs
insl
inc
push
jns
push
gs
insb
insb
outsl
arpl
insl
and
jno
jo
imul
add
add
add
inc
sbb
pop
sbb
jo
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
lods
scas
inc
add
inc
add
gs
je
outsb
and
popa
jo
insb
outsl
arpl
add
add
add
add
inc
add
add
je
inc
add
inc
add
add
add
inc
add
incl
add
add
scas
inc
add
add
add
incl
add
add
incl
add
add
call
inc
add
sub
adc
inc
add
add
add
add
and
inc
add
push
inc
add
inc
add
mov
add
mov
add
add
add
add
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
and
insl
gs
arpl
je
outsl
outsb
and
outsl
ja
add
and
arpl
je
outsl
outsb
and
outsl
ja
add
and
insb
outsl
arpl
gs
gs
imul
outsl
ja
add
jb
jb
jb
jae
fs
add
add
lods
adc
add
or
add
fdivr
incl
add
add
mov
add
cmp
outsl
je
jo
add
sub
popa
insl
add
je
jo
arpl
add
add
je
jo
arpl
add
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jae
sub
popa
jae
sub
js
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jbe
je,pt
dec
popa
jae
sub
js
je
jo
arpl
add
jbe
je,pt
inc
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
inc
push
inc
push
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
outsl
je
jo
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
arpl
push
je
and
jl
and
pop
push
push
push
push
inc
sub
arpl
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
imul
jns
gs
inc
sub
arpl
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
imul
jns
gs
inc
sub
push
jns
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
arpl
push
je
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
fs
js
je
jo
arpl
add
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
and
inc
popa
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
add
je
jo
arpl
fdivr
lcall
cmp
jo
inc
add
aaa
inc
add
add
hlt
cmp
fdivr
incl
add
add
add
pushf
add
add
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
add
add
incl
add
add
add
add
add
add
push
je
arpl
dec
jbe
jb
insb
outsl
ja
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
pusha
add
add
add
mov
add
popa
insb
insb
outsl
arpl
imul
fs
and
imul
popa
bound
arpl
popa
je
outsb
and
outsb
fs
and
imul
insb
outsl
arpl
add
outsb
fs
gs
arpl
arpl
popa
je
outsb
and
outsl
bound
and
outsb
fs
and
imul
add
add
add
push
or
or
add
sub
sub
sub
sub
sub
add
push
push
push
push
push
push
push
push
push
push
push
push
push
cvttps2pi
add
sub
sub
adc
sbb
add
sub
sub
push
push
push
push
push
push
and
add
adc
sub
adc
adc
adc
adc
sub
sub
adc
adc
push
add
add
push
adc
adc
adc
adc
adc
adc
sbb
push
adc
adc
adc
adc
adc
xor
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cwtl
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
roll
roll
roll
add
add
jb
jb
xor
dec
outsb
jbe
insb
imul
imul
bound
add
and
arpl
imul
and
arpl
jns
push
popa
je
and
je
outsw
jne
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
gs
imul
fs
imul
and
insb
and
insl
bound
add
insl
outsl
jb
and
outsb
popa
and
jae
gs
je
outsb
outsl
jne
push
outsl
jb
add
jbe
insb
imul
jns
bound
imul
fs
jae
add
jbe
insb
imul
outsl
outsb
insl
outsb
je
dec
outsb
jbe
insb
imul
je
dec
outsb
jbe
insb
imul
jae
arpl
add
jbe
insb
imul
inc
popa
and
fs
jae
add
and
arpl
fs
arpl
inc
je
gs
jo
gs
jb
insl
outsl
jbe
and
jb
outsb
je
imul
jns
dec
outsl
je
jae
insl
and
imul
insl
outsl
jb
and
insb
gs
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
and
je
je
outsl
and
add
arpl
outsw
jb
popa
je
gs
outsl
jb
inc
jb
jae
sub
arpl
insb
imul
and
outsb
jns
outsl
jo
outsb
and
insb
gs
dec
outsl
and
imul
gs
gs
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
arpl
popa
bound
imul
and
add
insb
and
and
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
gs
insb
and
imul
gs
fs
and
insb
and
jae
gs
add
and
outsb
jns
insb
imul
outsl
imul
jo
jo
add
je
and
addr16
outsb
je
push
gs
insb
je
je
outsl
and
add
insb
and
jb
popa
fs
gs
jae
jae
push
outsl
jae
imul
popa
fs
outsl
arpl
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
arpl
jo
outsl
arpl
jae
dec
outsb
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
dec
outsl
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
insb
outsl
arpl
fs
arpl
jb
jno
imul
jae
jne
arpl
bound
jns
dec
outsl
je
popa
and
arpl
jns
dec
jae
popa
and
arpl
jns
add
arpl
jns
outsb
outsl
je
gs
jo
jns
push
outsb
imul
outsb
and
jb
jb
cmp
add
add
add
add
arpl
popa
je
outsb
and
outsl
bound
and
jb
popa
insl
and
imul
insb
insb
outsl
arpl
imul
gs
insl
and
imul
popa
bound
arpl
popa
je
outsb
and
jb
popa
insl
and
imul
je
insl
pop
insb
outsl
arpl
add
jb
popa
insl
jae
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
icebp
les
repz
hlt
les
cmc
les
test
add
les
stc
les
inc
inc
add
les
add
inc
add
lds
add
inc
add
add
add
lds
or
inc
add
lds
sbb
inc
add
lds
sub
inc
add
lds
lds
lds
dec
lds
push
lds
pop
lds
popa
lds
push
lds
jo
inc
add
add
inc
add
add
lds
mov
inc
add
lds
mov
lds
stos
lds
scas
lds
mov
inc
add
lds
enter
rol
inc
add
lds
faddp
inc
add
lds
out
inc
add
lds
out
lds
repnz
test
add
lds
inc
inc
add
movb
movb
add
add
add
add
add
add
ret
inc
add
add
add
ret
inc
add
movb
movb
les
add
add
add
add
sub
add
add
add
add
cmp
das
and
add
inc
and
pop
add
add
add
outsb
fs
jns
push
jne
jae
popa
jns
push
gs
gs
popa
jns
push
push
popa
jns
inc
jb
fs
jns
push
popa
je
jb
popa
jns
push
jne
fs
jns
dec
outsl
outsb
add
add
add
add
imul
push
jne
add
outsb
jne
jb
add
bound
popa
jb
add
jb
push
imul
jne
add
insb
jns
inc
jne
jne
je
push
gs
gs
bound
add
je
bound
add
jbe
insl
bound
add
gs
bound
add
outsb
add
bound
dec
popa
jb
inc
jo
add
jns
dec
jne
add
insb
add
add
jo
dec
arpl
outsl
jbe
inc
arpl
inc
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
add
leave
sbb
jo
test
lds
iret
decl
js
roll
mov
or
mov
fdivrp
popf
sti
jmp
stos
push
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
lds
mov
and
and
add
add
cmp
lods
dec
inc
add
inc
add
jb
outsb
je
and
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
les
les
rorb
rorb
jo
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
xor
add
add
cmpb
add
add
lock
add
add
add
cmp
jg
out
jg
jg
add
jg
add
add
add
addb
lock
add
add
add
incl
add
add
lock
jg
add
add
lock
incl
add
add
lock
add
add
lock
add
addb
add
add
add
xor
add
add
sub
inc
add
sub
dec
add
add
add
sub
dec
add
inc
add
add
add
add
sub
dec
add
dec
add
cmp
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
sar
cmpsb
fbld
outsl
jb
and
jae
gs
and
fs
and
arpl
jae
popaw
imul
inc
inc
push
and
insb
and
je
imul
imul
jae
gs
imul
insb
gs
add
imul
and
and
add
and
and
and
and
and
and
add
add
add
jb
gs
xor
cs
insb
add
je
jb
arpl
fs
jae
add
jb
popa
outsb
xor
add
add
outsb
outsl
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
xor
inc
add
inc
add
inc
add
insl
inc
add
inc
add
inc
add
add
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
jbe
arpl
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
add
add
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
insb
inc
add
inc
add
add
add
je
outsl
data16
insl
outsl
jb
and
and
gs
jb
jbe
add
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
imul
insb
and
je
popa
insb
insb
outsl
arpl
and
insl
outsl
jb
and
jb
outsb
jbe
jb
outsb
insl
outsb
je
bound
imul
jb
popa
je
outsb
and
jbe
jb
outsb
insl
outsb
je
insb
outsl
arpl
add
add
add
add
or
add
or
add
sldt
add
add
add
add
add
add
adc
add
add
adc
add
add
nop
nop
add
add
add
add
arpl
popa
je
outsb
and
gs
je
insb
outsl
arpl
add
add
gs
je
outsb
and
jb
popa
and
popa
and
imul
add
insl
popa
jo
outsl
jb
and
jb
jb
add
inc
add
incl
add
add
add
mov
add
fdivr
incl
add
add
lret
inc
add
add
cmc
popl
or
add
add
incl
add
add
inc
add
add
or
add
adc
inc
add
add
pop
pop
pop
inc
push
push
fs
dec
outsl
outsl
imul
arpl
dec
popa
jae
and
and
js
xor
xor
and
cmp
jl
sub
outsl
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
arpl
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
fs
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
insl
data16
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
je
inc
fs
js
arpl
add
jb
fs
js
arpl
add
addr16
jns
add
arpl
add
inc
push
push
gs
gs
imul
add
arpl
add
add
arpl
add
jb
je
sub
push
push
popa
fs
cmp
add
arpl
add
push
je
sub
push
push
popa
fs
cmp
jb
je
add
arpl
add
push
je
sub
je
bound
jb
cmp
je
je
add
arpl
add
push
je
sub
jb
inc
outsl
jo
and
js
arpl
add
fs
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
sub
cmp
js
arpl
add
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
jns
gs
inc
and
arpl
jb
js,pt
inc
popa
jae
add
arpl
add
je
je
sub
arpl
fs
js
arpl
add
push
je
sub
imul
jae
jp
add
arpl
add
jb
je
and
and
jb
je
and
fs
push
push
add
arpl
add
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
add
and
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
and
js
arpl
add
addr16
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
and
bound
jne
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
fs
js
arpl
add
gs
push
je
sub
arpl
imul
and
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
outsl
jne
je
and
data16
popa
addr16
js
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
outsb
je
cmp
jbe
jb
outsl
jne
je
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
insl
push
jns
add
arpl
add
insl
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
jb
je,pn
popa
inc
insb
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
je
outsl
jne
je
js
arpl
add
fs
outsl
jne
je
cmp
and
gs
inc
outsl
jne
je
jl
and
gs
inc
outsl
jne
je
cmp
js
arpl
add
inc
outsl
jne
je
cmp
and
je
outsl
jne
je
js
arpl
add
pop
inc
dec
inc
push
push
sub
jb
jns
gs
popa
jae
sub
js
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
je
fs
pop
sub
cmp
js
arpl
add
push
je
sub
inc
insb
popa
addr16
and
inc
push
inc
push
inc
pop
push
push
push
push
inc
dec
jl
push
inc
push
inc
pop
push
inc
push
push
inc
dec
sub
js
arpl
add
push
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
push
jns
gs
je
je,pn
jo
popa
jae
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
pop
inc
dec
inc
push
push
sub
push
je
sub
push
jns
gs
popa
jae
sub
es
fs
push
je
sub
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
sub
js
arpl
add
je
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
add
arpl
add
sub
inc
js
xor
add
inc
add
inc
add
and
xor
add
xor
add
add
add
loope
add
inc
xor
add
add
xor
add
add
add
add
add
divb
add
lods
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
jl
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
xor
add
insb
xor
add
xchg
xor
add
mov
xor
add
repnz
add
adc
add
and
add
sub
add
cmp
add
inc
add
bound
add
jb
add
xorb
add
add
les
add
shlb
add
add
add
add
add
adc
add
push
xor
add
xor
add
xor
add
add
push
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
jl
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
xor
add
insb
xor
add
xchg
xor
add
mov
xor
add
repnz
add
adc
add
and
add
sub
add
cmp
add
inc
add
bound
add
jb
add
xorb
add
add
les
add
shlb
add
add
add
fdivl
add
call
add
or
add
sbb
add
cs
add
dec
aaa
add
add
add
fdivl
add
call
add
or
add
sbb
add
cs
add
dec
aaa
add
add
add
push
aaa
add
push
aaa
add
add
add
push
aaa
add
push
aaa
add
add
add
xorb
add
aaa
add
lret
add
aaa
add
lock
add
add
add
push
cmp
add
cmp
add
add
add
aaa
add
mov
add
lret
add
aaa
add
lock
add
add
add
push
cmp
add
cmp
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
add
insb
outsl
arpl
outsb
jae
insb
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
jo
inc
imul
jb
popa
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
add
inc
js
je
jb
arpl
jae
add
inc
gs
inc
push
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
arpl
push
imul
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
je
dec
popa
outsb
fs
add
add
inc
gs
je
imul
push
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
je
gs
imul
inc
gs
gs
imul
add
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
add
popa
jo
insb
insb
outsl
arpl
add
dec
gs
jo
jb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
dec
jae
popa
fs
jb
je
push
je
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
outsl
popa
fs
imul
add
add
push
jb
arpl
jae
fs
outsl
push
gs
imul
add
push
popa
imul
jo
imul
push
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
add
add
push
je
push
outsb
ja
outsb
add
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
add
push
gs
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
inc
insb
insb
outsl
arpl
add
add
inc
jb
add
add
inc
gs
popa
insb
jne
add
add
push
gs
popa
insb
jne
add
add
push
gs
js
gs
imul
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
push
jb
je
arpl
add
add
push
imul
jne
jb
add
add
push
jb
je
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
je
jb
add
add
push
jb
je
inc
imul
je
arpl
inc
add
add
inc
bound
je
outsl
arpl
add
add
fs
outsl
outsb
je
gs
jne
arpl
js
add
add
inc
outsb
insb
gs
jb
add
add
inc
outsl
jo
dec
gs
inc
imul
jb
popa
je
inc
outsl
insb
outsl
jb
jo
arpl
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
inc
inc
push
add
add
jne
push
push
push
imul
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
inc
imul
arpl
push
arpl
add
inc
outsl
inc
outsl
jae
popa
je
push
imul
insb
gs
imul
outsl
dec
outsl
arpl
bound
arpl
je
jb
popa
insb
add
add
inc
outsl
dec
popa
jb
push
je
jb
popa
arpl
add
add
push
popa
jae
dec
gs
inc
jb
add
add
inc
arpl
insb
gs
je
jb
add
dec
insb
gs
gs
outsb
jne
inc
outsl
jb
popa
je
je
add
add
gs
outsb
imul
imul
jb
addr16
inc
inc
jb
insl
inc
dec
push
dec
inc
cmp
add
add
add
add
add
add
add
sub
add
inc
add
cmp
add
mov
add
pop
inc
add
add
add
push
jb
push
xor
gs
add
inc
gs
js
gs
inc
dec
dec
imul
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
sub
add
push
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
in
add
add
add
inc
mov
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
jne
or
inc
mov
xchg
iret
jno
inc
cmpsl
sahf
dec
xchg
frstor
clc
push
or
fisubrs
loope
dec
addr16
pop
mov
dec
sbb
icebp
arpl
dec
ret
and
pop
adc
push
fsubr
call
mov
call
les
pop
leave
pusha
inc
js
and
insb
rcll
nop
sub
lret
xlat
fxch
into
adc
or
addr16
movsl
mov
cli
push
insb
ja
cli
pop
cmp
mov
shr
jecxz
ret
and
inc
test
test
and
mov
push
or
dec
ljmp
xchg
gs
mov
cmp
ret
push
pop
xchg
lds
mov
scas
jmp
sbb
mov
arpl
icebp
sahf
xlat
fldenv
nop
pop
add
pop
pop
scas
clc
lahf
outsl
jmp
lock
gs
lret
jmp
and
int
jle
iret
das
fwait
push
cli
mov
sbb
repz
test
or
adc
sbb
outsb
sbb
std
cmp
xchg
fcoms
arpl
inc
mov
mov
sbb
or
xchg
push
adc
mov
xor
popf
rorl
push
dec
test
inc
subl
sub
or
addl
adc
shll
dec
jg
sub
or
sub
aam
les
mov
and
int
sub
mov
dec
sarb
call
xchg
pop
addr16
cltd
inc
add
add
out
mov
cmp
leave
and
mov
sub
jecxz
enter
outsb
pop
xchg
push
add
and
imul
iret
negl
icebp
push
cmp
xor
daa
nop
lret
das
gs
scas
bound
sub
sub
mov
cmp
push
mov
and
pop
cmp
into
cmp
sbb
mov
xor
test
sub
push
insl
and
pop
and
hlt
and
das
push
insb
mov
ds
xor
shll
arpl
xor
xor
out
push
sub
mov
push
ja
jg
xor
xor
cmp
fsubrl
aas
jnp
in
push
add
adc
jle
dec
sub
rorl
out
inc
aaa
das
xor
and
push
or
fstl
mov
adc
rorl
inc
sbb
xor
xor
cmp
xchg
jae
push
roll
or
or
mov
inc
inc
inc
pop
lock
push
lds
dec
adc
mov
sbb
pop
lret
add
stc
push
xor
fistpl
pop
push
sti
daa
pop
and
add
adc
leave
outsb
adc
push
lret
or
add
rclb
cli
or
or
or
insl
push
lcall
gs
push
pop
xor
sbb
int
dec
outsl
cmp
sbb
pop
inc
add
xchg
ja
or
push
call
ret
inc
aas
fistl
jbe
int3
push
imul
or
adc
push
scas
cmpsl
adc
adc
sub
das
js
out
imul
add
in
dec
bnd
bt
decb
scas
sbb
push
inc
jne
loope
jae
in
push
pusha
sub
and
cmovg
or
inc
xchg
movsl
sbb
and
insb
xor
cmp
pop
imul
jecxz
add
das
mov
inc
xchg
cwtl
and
sub
maskmovq
mull
imul
sub
jns
lods
loop
sbb
gs
sub
jnp
xchg
sub
dec
outsb
jp
sub
test
xchg
and
js
mov
adc
add
jbe
xchg
aaa
loopne
addr16
cmc
sub
in
jl
pushf
insl
and
arpl
push
inc
xor
lret
insl
mov
ds
insb
jo
mov
repz
xchg
jg
outsb
mov
iret
sbb
dec
dec
and
movsl
test
stos
sbb
jmp
jnp
sbb
push
jne
adc
inc
dec
fildl
outsl
inc
jle
adc
push
inc
add
rclb
cmovg
dec
jnp
fstl
cmp
xchg
aaa
xchg
jae
sbb
out
pushf
pusha
jmp
inc
push
outsl
aad
jno
rorb
push
pop
xlat
mov
cmp
adcb
lds
aad
pop
or
pop
xchg
sahf
lret
add
push
and
mov
pop
push
push
lea
inc
scas
clc
add
stos
push
in
push
add
push
jae
lret
test
xor
mov
pusha
mov
jne
repz
stos
dec
repz
or
push
or
movsl
pop
xor
rcrb
aam
mov
scas
sub
repnz
or
mov
add
or
out
fistl
xorl
movsb
sub
push
sarb
jmp
cmpsl
adc
adc
fisubrl
call
jge
dec
mov
adc
out
jl
mov
sbb
add
loope
mov
xchg
sahf
add
xchg
add
mov
hlt
imul
das
out
mov
or
rolb
xchg
push
inc
cltd
leave
ret
pop
pop
xchg
lds
mov
xchg
lea
push
adc
icebp
mov
iret
es
pop
sahf
ret
pop
scas
clc
popf
outsl
jmp
lcall
jae
jmp
and
int
jle
shrl
fwait
push
mov
mov
repz
mov
js
push
cmp
out
xchg
ja
movsb
and
outsl
test
in
sbb
mov
jo
movsb
push
xchg
repnz
daa
arpl
out
fisttpl
mov
sbb
jmp
jmp
test
jg
xchg
sub
cmpsl
xchg
hlt
cmp
in
mov
lods
jge
out
cli
or
stos
in
jae
or
out
out
clc
test
jns
in
lcall
fsub
mov
mov
out
and
arpl
cld
and
jecxz
cmp
ret
shr
mov
in
mov
in
lock
push
cmpsb
jns
negl
lock
cmp
stos
iret
leave
adc
testl
mov
ljmp
aad
add
mov
enter
mov
out
pushf
dec
xchg
rcrb
xchg
pop
loope
add
cmpsl
pop
int3
test
shrl
or
cmc
mov
adc
pop
ret
pushf
loopne
popf
mov
sbb
sbb
push
movl
aas
mov
sbb
or
xchg
add
and
sbb
int3
popf
stc
dec
fiaddl
shll
push
adc
int
js,pn
dec
sub
adc
inc
roll
push
sbb
and
mov
test
cli
dec
xor
stos
mov
pop
inc
or
imul
fmuls
sbb
push
mov
dec
enter
imul
jecxz
xchg
xor
gs
stc
movsb
jnp
lds
popa
mov
dec
xor
xadd
push
sub
fiaddl
jmp
int
roll
ds
imul
fwait
push
jae
fstpl
testl
repnz
sbb
insl
enter
subl
dec
adc
inc
xor
scas
pop
dec
sub
inc
mov
jbe
adc
fcos
inc
mov
stos
lcall
push
mov
push
divb
mov
ja
cmc
xchg
or
mov
loope
push
iret
lahf
adc
fdivl
fcmovbe
int
js
sahf
mov
std
add
addr16
divb
mov
cmp
rclb
data16
stc
lahf
test
test
cs
das
andl
data16
scas
in
je
add
fstps
adc
enter
adc
mull
mov
pop
xchg
test
dec
and
mov
imul
sub
imul
inc
js
pop
std
scas
clc
add
out
sbb
adc
outsl
xor
aaa
jecxz
out
int
call
sti
add
mov
or
insl
enter
ds
mov
or
xchg
in
imul
and
gs
insb
mov
sarl
cmc
stos
ja
fsts
leave
roll
imul
xor
call
push
fimuls
cmp
lods
hlt
aam
in
cmpb
imul
les
ds
dec
cmp
or
aad
lods
pop
imul
sbb
stos
mov
dec
insl
inc
sbb
or
cmp
mov
lods
mov
dec
enter
adc
adc
xchg
addl
mov
outsl
pop
xchg
push
in
push
dec
in
mov
adc
push
pop
dec
popf
ja
outsb
sbb
outsl
cmpsb
icebp
popf
pop
inc
push
mov
cmp
mov
pop
jb
add
mulb
addr16
push
push
es
mov
jno
shrb
jge
mov
push
pop
or
pop
sub
fcoms
pop
rcrb
dec
inc
or
gs
insb
adc
inc
mov
outsb
and
mov
cmp
fstpt
ret
aaa
jmp
aad
lock
icebp
adcb
mov
in
cmp
cmp
jge
mov
jl
outsl
inc
jge
adc
lahf
or
rclb
scas
fldl
fists
mov
pop
movsb
and
stos
xor
sbb
mov
cmp
movsl
mov
into
sti
add
shlb
cltd
or
dec
dec
aaa
inc
test
adc
fisubrs
adc
mov
ljmp
push
mov
mov
sub
jp
and
adc
jle
out
jle
insb
hlt
loopne
pop
nop
mov
stos
icebp
sub
and
push
mov
pop
add
push
fsubs
in
insb
clc
pop
pop
rcll
and
imulb
sub
cmp
movsb
jae
insb
mov
cmpsb
push
jmp
mov
repnz
push
xchg
push
mov
insl
mov
xor
dec
je
es
mov
push
movsb
or
and
mov
sub
imul
mov
sub
sbb
aad
fs
cmp
jo
pusha
cmp
pushf
pop
mov
movsl
lods
push
sub
push
int3
add
scas
loope
jns
out
mov
loop
aaa
leave
ds
fldenv
pop
dec
loope
lahf
mov
leave
sub
imul
push
dec
ret
and
adc
ss
pop
andl
mov
jge
aad
sbb
subl
loopne
pop
gs
and
mov
adc
std
xlat
pop
rcrb
scas
xchg
xlat
in
and
xchg
loop
frstor
subb
dec
rorb
arpl
pop
lret
mov
sbb
adc
icebp
pop
aad
pop
push
mov
sub
push
mov
in
pusha
ret
scas
jl
xchg
insl
in
lock
sbb
sbb
enter
mov
add
fs
fwait
gs
out
mov
fmull
jbe
test
lret
bound
ror
cmpsl
stc
test
jbe
inc
test
fildll
sbbl
inc
adc
dec
fs
sti
aad
test
cli
dec
mov
mov
pop
xchg
aas
dec
arpl
scas
add
xchg
fldenv
and
and
les
lods
jl
pop
xor
mov
lahf
sub
mov
dec
jecxz
outsl
and
cli
xchg
aam
mov
js
hlt
mov
pushf
mov
push
adc
inc
mov
flds
cmp
mov
mov
xlat
lods
inc
dec
inc
or
in
push
inc
pop
fcom
scas
arpl
lcall
fmuls
cld
push
stos
lret
fistpl
shl
and
outsl
adc
adc
test
shr
sbb
mov
mov
loopne
jmp
pop
shll
inc
adc
test
sbb
jae
outsl
orb
mov
hlt
cmpsl
push
iret
sahf
xor
icebp
jns,pt
out
mov
xor
cli
lods
sbb
out
cwtl
lahf
rcrb
cmp
adc
ret
test
lds
lret
mov
pop
jge
inc
jae
shrl
insb
dec
jecxz
cmp
int
ficompl
add
xor
mov
cmp
scas
jp
xor
xchg
inc
sub
pop
jne
xchg
mov
in
hlt
loop
mov
stc
fisubs
and
sbb
icebp
bound
repnz
cmp
pop
sbb
out
xchg
cld
fidivrl
add
push
iret
lea
sbb
lods
cmpsl
pop
xor
iret
jne
mov
aas
shll
xor
mov
xchg
leave
or
les
mov
test
inc
clc
rol
pop
add
bound
mov
xchg
and
jl
pop
push
outsl
push
sbb
aaa
push
xchg
sub
arpl
jle
dec
enter
clc
add
add
int
out
cli
loopne
dec
fsubs
cmp
jo
dec
jmp
xchg
push
dec
add
test
cmp
sub
cmp
das
cmp
mov
loopne
out
movsb
psubw
xor
sahf
mov
rclb
sahf
push
in
mov
ljmp
in
mov
lret
cld
pusha
inc
repnz
and
xchg
sub
xor
cmp
sub
aaa
fisubl
jecxz
inc
pushf
jmp
pushf
xor
jnp
xchg
je
imul
scas
es
test
mov
test
and
add
repnz
stos
je
call
xor
arpl
notb
ljmp
sti
xor
cmc
lahf
sub
mov
jbe
insl
cmc
movsb
add
jnp
add
push
pop
cmc
ljmp
lcall
xchg
clc
cld
out
jg
pop
dec
push
pop
and
or
and
leave
inc
loope
lret
sub
pop
mov
mov
xor
push
call
and
int
movsl
add
imul
jl
pop
cmp
daa
pop
mov
inc
shll
push
pushf
stos
rcl
mov
aaa
andl
sbbl
inc
xor
xchg
das
sbb
jl
ljmp
sbb
mull
xchg
insl
lcall
aam
add
lds
movzbl
inc
fs
sbb
int3
dec
mov
nop
inc
cmp
mov
insb
cmp
lret
xor
out
cmpsl
aad
cmp
cmp
mov
or
fldt
dec
mov
push
fs
push
pop
iret
lds
pusha
movsl
and
mov
mov
test
mov
inc
mov
cmp
lcall
mov
dec
rorw
push
aas
or
ljmp
ja
lret
cld
sbb
push
dec
cmp
in
push
cli
or
fistl
mov
inc
mov
clc
sahf
and
imul
lret
fistps
cmp
mov
fsts
repz
scas
iret
dec
xchg
mov
push
icebp
rolb
sub
lcall
add
ss
loope
xchg
xchg
repnz
inc
add
scas
pop
push
cmp
jno
jno
fidivrl
jb
imul
mov
cmp
jbe
jle
push
and
mov
adc
loope
dec
les
inc
adc
xor
and
mov
into
pop
sar
jg
in
xor
addr16
lods
sub
outsb
lret
mov
mov
notb
pop
mov
xchg
inc
sbb
pusha
mov
or
jecxz
les
sub
test
insl
xor
out
std
mov
jle
inc
das
lcall
jbe
push
dec
jo
inc
pop
pop
into
adc
sub
jbe
lret
leave
stos
call
dec
divl
mov
fs
fcmovnbe
inc
and
cltd
incb
ficoms
xchg
popf
dec
or
addr16
add
fimull
stos
das
cmc
in
jle
cli
out
aam
lahf
lahf
jle
cli
inc
mov
movsl
push
ss
mov
jne
stc
push
push
test
adc
fidivrs
pop
cmpsb
call
pop
dec
jle
pop
rcr
push
jl
hlt
cmpl
mov
enter
loop
aad
or
fldcw
int
jg
sarb
sahf
cmp
lods
loope
mov
and
and
rorb
pop
and
dec
popa
adc
add
jge
out
dec
clc
enter
cld
mov
and
xchg
scas
dec
push
dec
pop
cs
ret
push
xor
enter
pop
out
jno
jecxz
inc
and
pop
cltd
clc
sub
lods
ja
and
xorb
cmpsb
cmp
mov
cmp
ret
out
mov
jbe
adc
leave
popf
xchg
and
insl
lods
jl
and
imul
inc
lods
or
mov
hlt
xchg
dec
popf
aaa
or
icebp
je
movsl
pop
cmp
adc
into
xchg
push
rcl
push
sub
xchg
and
pop
les
inc
push
negl
hlt
xchg
pop
jnp
out
lds
mov
add
jo
add
arpl
adc
pop
stos
push
clc
mov
orl
or
xor
pop
je
sub
notl
pop
repz
mov
gs
test
je
xor
popf
sub
fstpl
push
sbb
pop
movsb
and
adc
sbb
sub
sub
xor
push
lcall
mov
adc
ret
jae
nop
aam
dec
pop
xchg
lar
push
out
inc
fs
outsb
stos
mov
push
insl
mov
int3
cwtl
leave
ja
mov
add
adc
mov
fmull
cmp
push
nop
or
or
or
mov
ljmp
sbbl
mov
nop
push
add
mov
xchg
add
push
mov
aam
inc
fs
popa
adc
ret
ret
or
das
fucomp
js
insb
add
bsr
and
cmc
pop
mov
mov
xchg
cmp
fs
mov
dec
inc
jae
jg
push
test
xchg
lods
imul
ret
not
scas
or
in
push
jg
loopne
leave
pop
or
xchg
lods
push
cmp
xor
inc
sub
in
mov
and
cmp
sub
or
out
repnz
pusha
pop
je
sub
sarl
cli
pop
pop
hlt
cli
js
jl
insl
cmp
lahf
push
cltd
cmp
ja
int3
jmp
das
mov
test
dec
cmp
mov
push
xor
xor
push
or
faddp
in
mov
push
insl
mov
ljmp
add
outsb
in
stc
xchg
jb
adc
cli
or
lock
ss
aam
es
fwait
xchg
cmpsl
shlb
mov
mov
movsl
jle
jle
rclb
jnp
jne
outsl
push
or
xlat
sbb
loopne
xor
shrl
pop
pop
xchg
aas
iret
lock
pop
lock
jl
scas
xor
mov
test
lahf
es
pushf
imul
imul
adc
push
je
sub
push
sub
testl
ljmp
outsb
xchg
cltd
repnz
sub
daa
sarl
shlb
cmpb
dec
cmp
mov
movsl
jmp
xchg
mov
jb
int
push
gs
lret
push
push
pop
lods
mov
push
cmpl
andl
dec
test
push
xor
mov
xlat
imul
mov
out
xchg
xor
stos
xor
or
pusha
cmp
mov
adc
sbb
xorb
jns
cwtl
jp
jo
lods
mov
bswap
push
les
mov
fwait
sbb
push
adc
mov
cltd
adc
pop
and
add
sbb
fdivp
sbb
lret
loope
mov
sti
out
xor
add
fbstp
mov
and
fidivrs
dec
sbb
push
jecxz
daa
xchg
pop
test
mov
jo
pop
inc
add
inc
or
ljmp
xor
into
xor
sbb
cmp
push
xor
mov
push
pop
enter
stc
inc
push
mov
xor
adc
xchg
aaa
cmc
and
pop
mov
daa
cmpsb
adc
mov
push
add
sbb
adc
adc
mov
and
push
dec
and
stc
lods
lret
mov
mov
jle
mov
popf
add
mov
call
mov
or
dec
fstpt
popa
lods
dec
add
add
dec
adc
jb
cmp
std
pop
add
out
data16
mov
sbb
addr16
jmp
popa
push
cmp
mov
gs
ret
sub
inc
inc
jb
test
inc
xchg
repz
sahf
cmp
push
sub
cwtl
in
sbb
js
fcmovnb
dec
cld
outsl
sbb
popl
daa
cwtl
into
fwait
in
jl
filds
push
inc
and
and
fwait
push
repz
sub
gs
mov
imul
insl
decb
mov
daa
insb
adc
push
xchg
fdivp
testb
inc
insl
adc
mov
lods
movsb
icebp
xor
hlt
stos
or
push
pop
pop
jb
dec
fwait
xchg
sti
or
lods
bound
inc
imul
out
stc
mov
les
in
and
cmp
cltd
enter
xor
xor
pop
mov
dec
and
or
fs
dec
jb
pop
push
or
in
dec
sbb
xorps
inc
jbe
jno
imul
imul
pop
imul
sbb
data16
les
cld
jns
imul
movsb
pop
pushf
adc
ds
pop
movsl
fadds
mov
cld
pop
out
jnp
jb
cmp
sti
jo
movsl
mov
pmaddwd
leave
and
mov
lahf
adc
int
mov
jne
mov
sub
jl,pn
xor
mov
icebp
popf
fldl
pop
add
sub
mov
sahf
cmpsl
addr16
sbb
int
dec
jg
hlt
or
fs
push
cmp
cmp
or
jbe
sbb
sbb
add
jae
xchg
pushf
movsl
mov
loopne
std
inc
jns
jo
sahf
sbb
mov
adc
andl
inc
dec
xor
inc
or
xor
inc
icebp
sub
cltd
sbb
outsb
mov
xchg
cld
or
add
adc
and
stc
mov
dec
inc
and
adc
lcall
in
inc
sbb
dec
adc
aam
mov
decb
aad
es
mov
jb
jbe
pusha
xchg
cmpsb
cmpsb
and
inc
out
loopne
cmp
pop
sub
std
out
aaa
lahf
adc
lods
lods
adc
pop
inc
call
xchg
or
mov
cwtl
cli
jge
mov
xchg
or
mov
xchg
jle
jecxz
fsubrl
sub
jns
or
dec
push
add
xor
pop
xchg
dec
push
xchg
xor
pop
adc
lods
das
rcrl
cmp
adc
inc
into
sbb
out
subb
cmp
mov
loop
push
insb
push
pop
popf
je
cmp
jmp
jnp
sti
inc
sbb
and
ja
in
outsl
or
insb
push
gs
push
rep
in
or
repz
sbb
popf
sub
cmpsl
ljmp
and
mov
fnstcw
leave
pop
mov
lods
pusha
dec
xchg
dec
push
cmp
inc
adc
mov
mov
xchg
and
iret
fdivs
iret
loopne
mov
inc
sbbb
cs
daa
inc
push
pop
jmp
sub
fld
pop
mov
mov
mov
out
sbb
adc
shl
and
sbb
pushl
fisubrs
hlt
leave
or
rcr
push
lret
mov
mov
xor
sti
lret
popa
cmp
sbb
inc
jo
in
out
inc
sub
cmp
repz
outsb
lret
int
hlt
stos
aaa
inc
bound
push
test
icebp
cltd
jne
jmp
mov
mov
jge
cli
movsb
outsl
iret
nop
jp
adc
andl
gs
insb
movsb
pop
mov
push
sahf
xor
pop
mov
mov
push
xor
xlat
pop
ret
sbb
ljmp
sub
sub
divb
lea
rorl
lret
xor
sti
movsl
sbbb
mov
sar
adc
jl
aam
sbb
and
pop
adc
mov
xchg
repz
or
jecxz
sub
mov
jle
cmp
push
cwtd
loope
add
leave
jecxz
arpl
adc
addr16
loop
push
mov
dec
ret
stc
cmc
sub
or
add
jmp
sahf
cmp
mov
or
lods
mov
push
fsubs
outsb
negb
negb
or
icebp
cmp
ja
test
pop
cld
jl
cmpsb
cld
aad
mov
in
test
fsubs
sbb
ljmp
mulb
scas
lds
xor
push
nop
push
movsl
and
and
movsl
in
rclb
mov
pushf
add
or
xor
icebp
cltd
roll
push
dec
sub
in
pop
lret
jae
sub
jae
jb
xchg
repz
xor
sbb
or
push
std
enter
sbb
adc
xor
push
sub
imul
imul
add
mov
pusha
sbb
popl
mov
pop
and
inc
decl
push
dec
out
sahf
push
push
lahf
mov
and
xchg
mov
stos
push
pop
cmpsb
jp
addr16
inc
nop
jo
lods
jno
mov
sub
mov
popf
jmp
neg
mov
daa
mov
scas
adc
ds
or
pop
jl
push
outsl
mov
xor
aaa
ret
lea
add
dec
xor
fwait
pop
mov
inc
decb
push
sti
jb
scas
lds
andb
adcl
mov
in
or
sbb
xchg
loope
das
xchg
cwtl
xchg
xchg
dec
imul
push
fcmovnb
sbb
xor
sub
push
ficoml
xchg
inc
pusha
xchg
add
cmp
dec
sahf
std
and
or
xchg
cwtl
scas
jae
bound
xor
ljmp
jecxz
cmp
dec
imul
aas
enter
jbe
cmp
iret
sub
mov
aas
aad
imul
lahf
insb
dec
pop
ss
sahf
enter
cs
inc
imulb
pop
les
jg
cmc
test
jl
outsb
push
adc
movsb
outsb
mov
fs
lea
and
or
xchg
cmp
movb
or
push
mov
add
inc
shr
fdiv
cwtl
cmc
pop
or
inc
cmp
mov
pop
inc
sbb
sbb
push
xchg
or
aas
jne
sbb
jns
add
lea
not
sub
mov
add
mov
daa
pusha
pusha
les
loope
pop
ja
jle
es
xor
cmp
mov
shll
out
stc
mov
pop
push
je
mov
in
fcmovu
sbb
inc
push
cltd
imul
push
dec
in
pop
scas
or
ss
rcrl
mov
je
and
add
xacquire
xchg
jle
mov
incb
movsb
pop
lret
add
int3
jge
mov
inc
ficoml
pop
jmp
xchg
popf
repz
jbe
push
sbb
fnstenv
test
cmp
jl
mov
add
hlt
aad
test
push
add
sub
mov
nop
jnp
xchg
icebp
out
lea
test
inc
loope
das
xor
cmp
push
xchg
mov
push
cmpb
sub
xchg
insb
mov
addr16
and
lock
sbb
pop
adc
pop
enter
aaa
inc
gs
pop
lret
xor
sbb
mov
sti
imul
mov
jbe
cmp
inc
xor
dec
out
shll
sub
mov
push
loop
insb
lds
data16
sbb
mov
addr16
lcall
and
adc
rol
mov
arpl
sbb
sbb
jle
lcall
jecxz
ret
pop
aas
dec
ds
scas
out
or
movsl
call
pop
cwtl
addl
sub
nop
ret
mov
sbb
popa
js
dec
ret
ds
shl
stc
pop
xor
stos
jecxz
fcmove
add
loop
xlat
in
inc
mov
xrstors
pop
pop
test
jo
pushf
fbstp
cmpl
sbb
mov
xor
mov
sub
mov
imul
cmp
out
jecxz
lcall
push
jmp
movsb
cmpsb
jo
jno
stc
out
or
dec
sub
and
imul
mov
xchg
cld
lret
sbb
jne
push
js
xchg
scas
cmp
mov
jecxz
jecxz
add
lock
xlat
pushf
cmp
popf
mov
or
xchg
scas
nop
xchg
lret
cwtl
inc
out
or
mov
pop
push
not
xchg
mov
es
push
inc
aam
insl
xchg
rol
xor
enter
fisttpl
les
xor
mov
mov
xor
negl
add
mov
dec
xchg
pop
pusha
pop
fcompl
xchg
xor
cmc
aad
sub
xor
addr16
mov
mov
ret
ja
mov
mov
and
into
xchg
fidivrl
gs
xchg
cwtl
sbb
jle
fucom
aaa
xor
pop
lds
xchg
into
jnp
adc
fadd
sub
insl
outsl
out
cmp
scas
gs
in
inc
adc
inc
fcmovb
je
in
xchg
out
sub
xchg
inc
stos
pop
in
nop
fwait
and
jp
push
cmpxchg
int3
jl
pop
sahf
mov
push
xor
jns
xchg
xchg
sub
and
mov
cld
stc
xor
pop
loope
add
jae,pt
inc
jge
xchg
sbb
outsl
sbb
out
loop
dec
xor
pop
and
cld
or
adc
xlat
jg
sbb
sbb
test
scas
xor
mov
push
xor
mov
in
dec
loopew
jns
push
xor
lock
xchg
push
mov
std
jecxz
test
lahf
imul
jle
jns
test
and
aam
pusha
jl
and
and
sbb
inc
js
push
fcmovnb
mov
inc
sahf
jg
imul
call
push
cmp
movntq
fwait
out
sbb
addr16
jge
sahf
mov
stc
jne
out
js
add
cmpsl
mov
dec
push
push
xchg
gs
xor
dec
pushf
rclb
fmul
xchg
cli
mov
data16
sub
iret
scas
push
inc
mov
cmpsb
sub
scas
lret
divl
imul
hlt
sbb
or
mov
sbb
xor
adc
es
pop
adc
iret
cmp
push
fs
incl
aas
xchg
sbb
sti
and
ret
andl
shr
mov
cmp
inc
out
bound
or
or
mov
pop
dec
inc
mov
out
and
cli
sbb
andb
sub
adc
jmp
sbb
xchg
es
fisubrl
jo
in
jg
xchg
sar
cmp
sbb
js
cmp
lods
xchg
repz
push
xchg
cmp
inc
divl
push
dec
adc
mov
out
test
test
inc
jg
imul
adc
mov
mov
inc
cli
in
cmpsb
sbb
lcall
dec
scas
jb
push
lret
daa
adc
and
push
push
shll
xorb
int3
daa
sub
addr16
jp
mov
jns
in
sub
sub
test
scas
adc
mov
xchg
lds
into
push
adc
and
imul
inc
inc
xlat
mov
cs
aaa
or
lea
aaa
xor
dec
aas
adc
cmp
or
mov
out
test
es
cmpsb
cmp
js
subb
dec
rorb
stos
dec
xlat
fstl
cmpsb
sbb
loope
push
and
mov
je
gs
xor
aas
dec
outsl
roll
mov
jmp
aam
push
ss
add
jg
in
inc
sahf
or
cmp
pop
jae
lock
rcr
out
out
dec
xchg
mov
jp
cmpsb
xchg
jmp
pop
pushf
ja
or
xchg
shrl
arpl
mov
cmp
mov
aas
pushf
mov
imul
push
mov
sub
test
divb
pop
mov
xlat
out
pop
xchg
sbb
into
mov
mov
pop
xor
or
jp
daa
or
out
repnz
clc
inc
dec
jg
pop
cmp
xor
mov
jle
mov
xchg
cmp
fs
into
dec
push
mov
jl
movsb
enter
xchg
hlt
sti
lahf
out
and
push
ds
hlt
push
mov
outsb
jmp
inc
cld
xchg
int3
cld
jmp
lods
xchg
ja
mov
jbe
mov
aad
arpl
mov
or
outsb
int
sahf
daa
sbbl
jns
jbe
and
add
jmp
fwait
xor
mov
loop
sbb
ds
lgs
mov
and
push
repz
dec
or
mov
jl
add
pop
dec
pop
sbb
adc
mov
pop
daa
sahf
jbe
scas
iret
popf
ds
or
test
dec
push
inc
sbb
aad
test
test
outsl
call
push
dec
out
jle
pop
jge
jb
stc
xchg
js
jecxz
sub
cmpsb
jnp
xchg
jno
push
lcall
cld
rorb
adc
addb
xor
sahf
cmc
cmp
add
add
adc
cld
jb
mov
pop
push
fcmovne
dec
popa
or
jae
in
push
mov
fistps
sbb
mov
fbld
test
fistps
cmpsb
and
out
in
and
adc
pushf
test
mov
test
jo
mov
sbb
and
pop
sub
sbb
mov
mov
push
movsl
xchg
jb
aad
fdivrp
stos
outsl
pop
loop
adc
push
jle
dec
rcrl
outsl
enter
mov
outsl
or
popa
ljmp
mov
mov
cmove
pop
pop
sub
daa
data16
push
fwait
xor
lahf
xor
push
cmpsl
cmp
loopne
adc
push
sub
popf
in
aad
sbb
ljmp
aaa
xchg
jecxz
sbb
xchg
mov
inc
pop
sbb
sub
jo
pushf
mulb
jg
sbb
sub
mov
mov
scas
sti
and
nop
out
outsb
imul
fstpt
gs
push
mov
imul
mulps
fcomip
push
fistpll
cwtl
iret
aad
mov
mov
jp
push
sbb
pop
out
fwait
mov
xlat
shlb
xor
inc
mov
mov
cwtl
insl
je
mov
mov
add
mov
pop
pop
jmp
mov
data16
push
out
push
insl
sub
add
notl
negl
mov
into
mov
cld
sbb
mov
int
xor
sbb
adc
add
stos
push
pop
and
sarb
sbb
cmp
dec
js
adc
sbb
adc
mov
mov
int3
push
dec
mov
or
xchg
ja
mov
clc
mov
cmpsb
dec
push
frstor
push
sbb
mov
in
sub
adc
int3
fsubrl
sbb
dec
adc
lcall
pop
sub
mov
pop
hlt
dec
jge
sbb
les
mov
pop
mov
mov
or
dec
int
decl
or
mov
fldl
mov
push
iret
sbb
mov
jo
lods
out
pop
pop
and
jmp
xor
xor
insl
cmpsl
loop
insb
mov
pop
xor
or
push
pop
xchg
mov
push
dec
adc
insl
pop
push
lds
add
test
test
cmp
js
cltd
rol
or
lods
pop
add
test
nop
in
mov
bound
mov
add
scas
sbb
pusha
push
mov
push
sbbl
pop
mov
pop
pop
ret
sub
or
add
insl
shr
bndldx
dec
xchg
dec
and
ret
nop
sub
dec
shrl
jns
sub
jae
call
xor
adc
call
repnz
jmp
sub
int
enter
jbe
cmp
inc
ss
lcall
dec
jb
iret
jns
jmp
sahf
test
iret
out
xor
mov
enter
xor
lret
fwait
xor
rorb
outsb
sbb
iret
cmp
jp
pop
jmp
mov
out
add
rorb
xchg
mov
pop
xchg
mov
daa
fcmovnb
push
cltd
mov
frstpm(287
scas
std
and
repnz
fidivrs
outsl
sbb
jp
shlb
xor
out
cmc
jb
lcall
xor
insl
arpl
callw
inc
mov
lahf
add
push
in
das
clc
push
imul
adc
mov
js
and
bound
adc
cld
arpl
and
movsb
fcomps
or
push
out
sub
lods
jb
cmpsb
mov
mov
push
js
sbb
roll
cmp
push
pusha
push
ljmp
leave
dec
add
jne
cmc
shlb
pop
xchg
inc
mov
fidivrs
scas
pop
and
pop
jle
push
xor
insb
jo
cli
lret
jmp
xchg
mov
clc
mov
decl
enter
mov
cmc
scas
pop
pop
popa
push
clc
xor
xchg
pop
xor
jb
adc
adc
sbbl
add
sub
and
sbb
push
push
pop
push
out
push
xlat
mov
xchg
inc
xor
and
orps
pop
out
test
jo
pushf
mov
js
pop
or
in
icebp
es
adc
pushf
fdivr
mov
xlat
sub
or
sbb
pop
out
jne
mov
das
fisubrs
xlat
xor
push
repz
orl
mov
add
push
or
xor
or
pushf
and
clc
push
sbb
mov
les
push
shl
and
dec
sarb
xor
lds
fs
xchg
cmp
fld
pusha
into
ficompl
movsl
ja
int3
sub
xchg
inc
pop
into
gs
dec
jmp
pop
or
push
int
cmp
jl
mov
ss
jo
cli
jle
test
scas
aas
dec
cmp
push
outsb
xchg
inc
repnz
rorb
push
dec
mov
xchg
movsb
stos
lods
dec
call
insl
push
js
aad
lret
cmp
sub
enter
add
in
push
mov
cmp
cmp
and
adc
test
pop
rorl
test
sub
xor
rep
mov
jl
pop
push
mov
lret
icebp
hlt
inc
mov
mov
mov
test
popa
cmpsl
dec
popa
mov
push
ss
pop
xchg
lret
lea
sbbl
dec
stos
push
mov
lods
repnz
aam
fisttpl
insl
and
test
popa
mov
out
ss
pop
mov
outsb
sbb
fisubs
dec
xor
jge
in
in
insb
fsubp
ljmp
sub
cld
sahf
das
scas
add
jo
pop
repnz
cmp
mov
sub
xor
push
or
push
out
or
jns
out
push
fwait
aad
push
test
xor
push
sbb
ljmp
loope
scas
scas
dec
jle
add
inc
imul
sub
shl
lret
pop
fistps
int
sbb
movsl
rorl
push
inc
push
add
sbb
mov
jmp
cmp
ljmp
movb
mov
mov
fs
push
fnstsw
jmp
shll
xchg
fninit
dec
jmp
push
fwait
and
cld
stos
jae
fldenv
lock
push
add
addr16
in
ret
pop
out
jae
pusha
loop
mov
mov
popa
bound
mov
xor
das
push
mov
cmpsb
sbb
xchg
or
fidivrl
insl
push
cmpsl
fwait
pop
test
lret
repnz
dec
lock
int
lcall
lods
rcr
add
fwait
int
rclb
xor
jb
xorb
add
ss
sti
ljmp
mov
xchg
xchg
scas
xchg
add
hlt
push
add
repnz
xchg
dec
punpcklbw
jns
mov
mov
loop
add
das
sbb
push
leave
inc
bound
lcall
sub
ds
je
push
hlt
jmp
xchg
jne
jmp
fsts
aas
movsl
mov
adc
lahf
daa
or
cli
push
adc
pushf
insb
push
pop
out
fildl
idivl
insl
inc
hlt
fstl
clc
scas
xor
movsl
das
lea
loope
sbb
or
in
ret
sbb
xor
arpl
loop
ds
incl
mov
mov
inc
ss
daa
jo
push
pop
mov
loope
sbb
xor
adc
notl
mov
out
pop
fmuls
stos
adc
sub
sbb
shlb
cltd
cmc
add
sub
inc
or
xlat
ret
pop
cmp
inc
cmc
xor
xor
mov
push
pop
cmpsl
mov
sbb
mov
inc
lea
popa
mov
shl
loop
ds
fs
jp
repz
or
stos
push
popa
sbb
xchg
mov
mov
or
rolb
jne
fimull
mov
dec
pop
loopne
xchg
fs
rorl
xor
pop
movsl
aas
xor
xor
xchg
xor
dec
and
cld
scas
or
adc
fxch
inc
out
in
mov
cmpsl
push
pop
xorl
xchg
outsl
stos
shll
ret
int
push
cmpsl
in
div
pop
add
push
fistl
push
out
gs
and
inc
mov
inc
mov
push
hlt
mov
sarl
scas
stos
arpl
mov
cmp
rclb
pop
fs
mov
mov
idivl
sbb
mov
out
xor
stos
out
test
addr16
lock
and
push
jg
and
insl
outsb
add
or
ret
mov
xchg
jge
in
fistps
outsl
jno
sahf
lret
push
hlt
or
outsb
adcl
std
cmp
pop
push
pop
add
sub
ljmp
dec
das
in
aaa
or
jne
cli
pop
movsl
add
and
aad
cmp
cmp
sub
fmul
sar
js
rcll
jno
pop
cmpsl
outsl
pop
mov
test
or
fs
adc
xchg
mov
sub
adcl
dec
idivl
inc
sbb
push
or
ss
lods
fadd
or
mov
cmp
ret
lea
jne
shl
push
push
jbe
xchg
out
adc
adc
hlt
inc
push
jns
pusha
mov
ljmp
mov
scas
movsb
jmp
push
inc
je
dec
es
out
imul
dec
and
maskmovq
notl
out
mov
loope
pop
jmp
and
push
js
lods
xchg
inc
pop
sbb
jle
cmp
adc
add
sti
es
js
out
neg
scas
out
movsb
push
sbb
adc
and
xor
mov
add
and
movsl
mov
adc
adc
sbb
test
xor
mov
outsl
xchg
mov
mov
stc
outsl
out
nop
test
stos
xor
sti
imul
xchg
xor
jmp
out
cld
ret
in
gs
stos
mov
pop
mov
add
sbb
adc
jns
fs
mov
scas
add
inc
jmp
inc
repnz
pusha
repnz
jns
repnz
js
ljmp
xlat
bound
ficompl
call
dec
fwait
jo
pusha
jecxz
inc
inc
jbe
adc
cmp
jno
mov
add
test
into
fldcw
iret
sub
fcmovnbe
enter
cmp
xchg
mov
enter
scas
pop
aad
clc
movsl
aam
ljmp
int
clc
push
inc
sarl
popa
add
inc
fcoms
jp
test
leave
stos
sub
ret
pop
push
ret
pop
push
mov
dec
sahf
outsb
jnp
mov
xor
cmc
outsl
push
lds
arpl
xchg
cmp
inc
adc
and
sbb
cmp
sbb
jbe
jge
or
sbb
xor
or
cmp
aas
out
int
or
and
arpl
pop
aas
lret
ss
xchg
jae
int
cmpsl
xlat
dec
lods
sti
loope
dec
pop
sub
inc
push
jns
fwait
mov
ret
jecxz
out
rorl
shll
in
add
xchg
popf
lock
pop
imul
lahf
aaa
jno
mov
int
repz
test
popf
inc
das
dec
xlat
repnz
push
leave
fs
loope
xchg
dec
jecxz
lret
dec
xchg
mov
rcrb
mov
mov
lahf
pop
and
sub
sbb
lcall
mov
lods
or
cmpsl
repz
push
cmpl
inc
and
cmpsw
out
xor
enter
cld
or
lret
fwait
jmp
jecxz
sub
or
std
push
aaa
push
cltd
pop
or
push
repz
or
sbb
pusha
xor
sub
nop
dec
push
in
imul
pop
into
montmul
cmpsb
add
stos
ss
in
call
inc
ljmp
add
fstpt
xlat
js
int3
xchg
xor
insb
pop
cmc
mov
pop
shlb
sbb
mov
push
dec
jl
inc
mov
mov
cmp
xor
fcmovb
inc
mov
lea
decb
cwtl
rorb
cmp
ss
popa
aas
prefetchwt1
jle
or
and
xor
out
dec
sub
push
adc
xor
add
or
sub
or
cmp
nop
jmp
pop
adc
mov
pop
repnz
inc
xchg
or
lock
cmp
adc
adc
cmpsb
mov
insb
jge
jo
testl
rorb
pusha
fistps
mov
pushf
ret
shrb
lcall
push
bnd
lock
movsb
lods
dec
pop
or
data16
xor
mov
cs
gs
daa
pop
xchg
sbb
stc
xchg
pop
and
pop
cmpsb
in
or
pop
adc
ss
pop
fistpll
sub
sahf
fs
arpl
loopne
stc
mov
test
ss
mov
bound
sarb
cld
cmp
pop
sub
push
lock
les
aam
pop
push
or
push
pusha
mov
stos
mov
cld
push
adc
movsb
sbb
mov
and
lea
iret
push
adc
xchg
js
push
add
push
sbb
pop
cmc
lock
divl
ret
daa
scas
pop
adc
and
cmpsb
les
rcrb
andb
pop
aam
jbe
fmuls
lds
mov
jo
ljmp
jb
mov
fisubl
je
inc
cmp
cmpb
outsb
mov
int3
dec
shll
adc
and
shlb
adc
mov
sbb
into
fwait
mov
sub
push
shrl
das
pusha
insl
lcall
xchg
fmul
cs
icebp
or
es
xor
sbb
clc
push
xchg
negb
mov
or
faddp
inc
bound
dec
sbb
mov
loope
and
adc
adcb
adc
cmp
into
xor
pop
sub
mov
push
and
push
fcomip
sub
or
outsl
insl
dec
jmp
mov
adc
jb
shll
das
inc
inc
add
or
mov
popf
or
mov
pop
dec
fsts
or
xchg
mov
lcall
mov
mov
stc
sub
cmp
adc
push
xor
ret
lds
push
add
bound
cmc
jp
jb
cmpsl
push
adc
pop
adc
ljmp
pushf
sahf
add
mov
enter
cli
mov
rorl
add
dec
or
test
enter
repz
sbb
fsub
mov
sub
xchg
sbb
idivl
inc
insb
sub
xchg
jno
scas
xor
mov
lahf
bswap
out
push
cltd
mov
jns
xor
push
loopne
shll
xchg
pop
pushf
mov
sti
mov
jmp
pop
jo
sbb
xchg
jecxz
mov
in
mov
aam
mov
push
xor
adc
sub
xchg
mov
fmuls
mov
inc
adc
sbb
xor
inc
pusha
jmp
test
xchg
scas
sti
cld
fisttps
repnz
inc
mov
out
je
cmp
rcll
das
push
inc
in
jns
test
cwtl
and
roll
push
out
fisubrl
inc
cmpsl
into
cs
sub
rcr
nop
or
sti
lcall
xor
popf
fs
jmp
aad
xchg
frstor
js
ja
out
inc
iret
mov
adc
fdivrp
repz
leave
fisubrs
je
lea
jg
inc
ret
stos
insl
addr16
sbb
mov
ret
cmpl
sub
fists
jno
jecxz
lea
daa
in
mov
imul
inc
fs
xorl
test
adc
add
lds
cld
jecxz
adc
pop
test
push
xor
addl
jo
sahf
or
cli
mov
lds
in
aad
test
repnz
ds
mov
push
pushf
dec
xor
sbb
test
in
cmpsl
fimuls
jl
loop
sub
xchg
and
mov
lods
pop
adc
jb
xor
pop
or
repnz
enter
les
push
arpl
push
pop
movsl
mov
hlt
out
lcall
shl
push
lods
or
lock
outsb
dec
mov
jo
inc
imull
imull
cmp
add
aad
daa
add
jge
shrl
mov
in
xchg
dec
test
inc
rolb
fistl
int3
push
cmp
addr16
cmp
push
or
xchg
les
jbe
mov
or
dec
jle
out
testb
pop
dec
stos
dec
sbb
jecxz
pop
cmp
aas
cmc
xchg
sub
add
clc
pushf
in
and
in
cs
push
and
iret
lods
or
orl
fsubs
push
add
in
and
sti
loop
sub
jp
cmc
pop
test
into
lahf
pop
icebp
insl
je
mov
mov
ss
stos
out
fs
xchg
cli
cmp
or
xchg
jle
xchg
rcrl
pop
outsb
js
aaa
sbb
mov
call
addb
add
insl
and
pop
test
scas
mov
xor
std
push
pop
or
jne
jnp
rcrl
sub
int
ret
mov
xchg
ljmp
mov
dec
aaa
dec
mov
cltd
ffreep
mov
mov
mov
loopne
or
shlb
or
fisttpl
int
arpl
push
ja
sbb
mov
jmp
xchg
in
pop
inc
movsb
cmp
mov
outsb
subb
gs
in
rorb
add
es
mov
mov
insb
mov
lahf
sbb
aaa
pop
test
dec
jp
pop
lahf
aad
lock
call
xchg
mov
cli
lcall
inc
hlt
std
mov
mov
pop
imul
hlt
add
in
dec
in
mov
ret
dec
addr16
xchg
or
and
and
out
stos
inc
movl
cltd
or
xchg
inc
es
mov
sbb
decl
int
jnp
pop
add
mov
popf
and
ja
fwait
adc
notb
into
push
sub
pop
leave
and
lret
pusha
sahf
aad
sub
sbb
ret
xor
into
cmpsb
cld
or
fcoms
mov
push
or
jb
mov
xchg
and
mov
jo
out
mov
jae
std
push
mov
mov
xchg
repnz
or
cmpsb
dec
add
push
rorb
dec
idivb
negb
out
add
or
xchg
ljmp
jno
movsb
fs
cltd
mov
cs
pushf
shlb
lcall
pusha
lods
mov
push
out
add
or
sbb
jbe
call
rcrb
sahf
sbbb
out
in
mov
xor
lret
cmp
push
rorb
imul
add
ret
std
xor
outsb
push
int3
outsb
mov
pop
inc
testb
xor
sub
cld
fisubl
test
push
lcall
into
dec
sub
xchg
jnp
cltd
xchg
and
lret
cmp
pushf
add
dec
mov
pop
sub
mov
repnz
sbb
mov
les
loopne
push
lock
gs
sub
push
adc
mov
leave
xchg
xorb
dec
fcoml
pop
enter
xor
lcall
into
xor
loope
jmp
xchg
sub
mov
pop
loop
sub
inc
adc
jp
shlb
adc
js
push
jae
dec
dec
push
rolb
sbb
and
loop
scas
je
fimull
mov
xor
ss
pusha
jb
dec
cmp
mov
xchg
aam
cmp
nop
out
cmp
push
mov
pop
mov
add
mov
jmp
fnstenv
mov
adc
int3
inc
mov
pop
insl
notb
add
stos
cmp
fistpl
cld
bound
xchg
fs
insl
push
dec
into
and
xchg
pop
clc
test
roll
in
pushf
data16
mov
jbe
cmp
push
xor
scas
cwtl
or
repnz
sbb
ret
push
loopne
push
test
pop
push
push
mov
lock
lcall
orb
adcb
fdivl
inc
or
cmp
in
xchg
test
mov
jbe
test
sub
mov
push
loop
sub
outsb
adc
jp
shrb
adc
js
push
pop
movsb
push
dec
and
and
sbb
sbb
leave
out
je
fidivl
sub
dec
shl
fnsave
or
in
xchg
test
mov
addr16
adc
and
addr16
jg
mov
sbb
adc
dec
popf
xchg
imull
inc
add
insb
mov
popa
iret
outsl
rcrb
add
fldt
insl
ret
pop
sbb
out
popa
and
push
test
push
xchg
fdivrp
xor
sub
xchg
dec
clc
ss
loop
add
mov
frstor
dec
adc
sarb
shrl
scas
imul
aas
out
std
sbb
ss
shrl
data16
dec
loop
or
dec
dec
mov
jp
xchg
imul
xor
xlat
loopne
stos
stos
adc
push
std
sahf
adc
mov
xchg
xlat
push
fstpt
cmp
aam
movsl
push
test
mov
lods
cmp
stc
push
das
add
je
cmpsl
insl
inc
mov
arpl
movsb
xchg
cs
jae
and
mov
lahf
and
lock
pushf
cmpsl
push
stc
mov
inc
cs
in
mull
sub
pop
inc
stos
or
lea
cmp
cmpsl
lret
test
and
and
jmp
iret
loop
std
pop
rcr
xor
sbb
xchg
push
mov
adc
inc
jo
insl
sbb
inc
pop
sbb
inc
push
cmp
out
jecxz
outsl
mov
xchg
dec
aas
inc
jo
jbe
adc
mov
push
mov
xor
cmp
mov
loope
mov
in
inc
scas
xchg
jp
inc
imulb
daa
frstor
addr16
dec
pusha
inc
xchg
sahf
add
mov
lods
lods
and
adc
xchg
popf
loop
insb
sbb
pop
adc
sbb
sarl
test
sub
popf
jne
mov
int
xor
ret
add
cmp
jecxz
pop
xchg
scas
fstps
popf
dec
xchg
mov
out
scas
jno
and
scas
int3
fwait
pop
mov
sahf
sbb
mov
sti
pop
mov
jnp
stos
in
adc
std
out
add
pop
pop
push
jb
and
xchg
mov
cwtl
aas
out
mov
xchg
das
ret
sub
jae
fnstcw
add
cmp
jecxz
nop
xor
rcl
pop
out
in
push
sbb
sbbb
jnp
inc
xchg
jle
jle
sti
int3
call
lcall
into
adc
push
fstpt
jl
lock
fsubs
sbb
insl
dec
adc
enter
je
and
out
mov
lret
mov
xchg
in
lds
outsl
cld
in
ret
cmp
adc
cmp
jbe
stc
mov
cmp
imul
addr16
xor
push
dec
lods
fs
pop
imul
sbb
mov
lahf
js
mov
add
sbbl
fcompl
test
nop
mov
jmp
rcl
and
dec
sahf
aam
lret
and
hlt
push
fisttpl
lcall
ljmp
out
or
in
mov
mov
pop
into
lods
xchg
cmp
stc
cmc
xrelease
pop
fs
inc
mov
xchg
loope
sbb
xor
sbb
aam
xor
xchg
mov
jae
repz
pop
jg
xchg
jg
jo
andl
loopne
cwtl
mov
dec
jge
out
sbb
inc
icebp
inc
mov
aaa
leave
xchg
jo
cmpsl
mov
dec
popf
and
test
adc
mov
sub
je
push
je
add
scas
fs
lds
lods
in
add
push
insl
rorb
ljmp
and
jl
cld
mov
mov
and
ljmp
cltd
pop
xor
cltd
xchg
stos
adc
repz
sbb
mov
lds
and
add
ss
mov
insl
cmc
loope
fsubrl
pusha
push
sbb
nop
in
imul
jo
mov
or
sub
jp
push
mov
lds
pop
hlt
mov
cmp
call
inc
sub
stc
sub
push
cmp
jmp
and
shlb
xor
sub
clc
sbb
xor
xor
push
xlat
sbb
jo
inc
popf
iret
xor
mov
add
test
jno
xor
pop
ret
mov
xchg
inc
and
scas
sbbb
cmp
cmpsl
fcom
push
cmc
adc
dec
leave
js
or
test
icebp
xchg
mov
sbb
bound
add
mov
call
sbb
or
push
mov
pop
pop
cmp
mov
aam
and
ljmp
mov
dec
push
mov
bound
sbb
pop
xchg
cmpsb
push
ja
dec
xchg
inc
push
in
mov
cmpsb
imul
pop
movsb
jno
pop
fwait
notb
stc
int
jno
cmp
mov
mov
add
ret
in
cmp
lret
loop
outsb
fcmovnu
add
or
rcrl
mov
ret
mov
pusha
xchg
out
pop
jb
imulb
cld
xor
push
enter
sahf
jmp
push
idivb
sbbb
bound
repz
sbb
movsb
pop
sbb
jns
out
add
sub
adc
cmpsl
mov
ror
mov
cld
and
call
sub
mov
sbb
cmovle
aas
test
inc
cwtl
daa
sub
dec
or
stc
mov
fstp
js,pn
jle
fiaddl
sbb
cmp
cmpsl
hlt
ds
add
cmp
xchg
inc
mov
add
cld
inc
cmpsb
sbb
je
push
xor
cmp
mov
lods
pop
push
in
mov
xor
mov
inc
add
xchg
inc
out
repz
aam
and
scas
dec
add
sbb
cs
outsb
mov
rolb
push
hlt
pushf
dec
mov
fldt
mov
decl
fs
jne
sub
sahf
cmc
add
jmp
das
aad
aas
pusha
mov
mov
adc
loope
mov
sub
add
scas
mov
shrl
push
es
or
or
mov
push
rolb
push
mov
jmp
jmp
mov
shrb
rcrl
sarb
outsb
mov
add
js
fmull
cmp
and
cmp
jmp
int
pop
leave
out
cmp
mov
push
adc
add
rcll
inc
pop
mov
lcall
scas
dec
lea
nop
mov
or
mov
cltd
imul
idivb
push
adcl
jmp
pusha
data16
aas
bound
jb
pop
push
scas
roll
cmp
push
mov
dec
dec
fucomi
push
test
inc
outsl
fildll
in
fdivrs
iret
lahf
dec
add
push
jne
ret
add
test
push
adc
mov
cmp
fisttpll
mov
js
popf
int
and
sbbb
jl
repz
dec
test
loope
mov
in
push
xchg
cld
jb
fcmovnbe
push
push
push
sub
push
dec
sbb
clc
dec
sbb
pusha
es
nop
rcl
roll
and
cltd
dec
notl
add
push
jmp
aad
cmp
rcll
loopne
cmpsb
lods
lock
or
mov
sub
adc
stc
xorl
inc
or
mov
clc
lods
sbb
dec
push
loopne
xchg
cli
cltd
js
xorb
jo
cli
lods
dec
and
je
out
push
ss
rorl
dec
fwait
aad
mov
inc
sub
sub
fisttps
jmp
mov
scas
loop
in
mov
es
leave
pop
and
subl
mov
and
mov
sub
clc
scas
leave
icebp
jbe
mov
pusha
add
mov
sub
xchg
jns
clc
popa
mov
jecxz
repz
movsl
out
arpl
fistpl
mov
inc
cmpsl
adc
call
lods
cmp
mov
pop
call
movsb
insb
imul
nop
push
lret
jno
fwait
push
or
leave
fwait
jb
sti
les
stos
orb
enter
mov
mov
test
or
in
sub
xchg
les
mov
xor
insl
xchg
loop
jae
les
mov
aad
xor
shlb
dec
jle
cmp
sbb
inc
mov
stos
gs
hlt
out
dec
lcall
add
popf
stos
int
or
in
bound
and
enter
insb
mov
cltd
fs
cwtl
sti
xor
inc
cltd
jp
sti
loop
inc
mov
cmp
adc
outsl
mov
xchg
or
sub
xchg
jo
sti
shlb
mov
mov
mov
cld
pop
inc
cmpsl
icebp
push
xchg
lods
adc
dec
add
rcrb
mov
lds
jl
out
in
in
aas
test
add
movsl
cmpsb
idivb
cmpsb
out
and
adc
and
pop
ficoml
ficoml
add
inc
jnp
cmp
mov
lock
dec
aad
jns
push
inc
fcmovb
test
aas
imul
jl
notl
rcll
jo
jmp
adc
add
jmp
leave
in
sbb
psubw
mov
mov
add
js
arpl
or
out
add
in
mov
aaa
cmp
loopne
pop
je
pop
jl
adc
call
fldcw
jl
les
subb
icebp
dec
fs
mov
outsl
movsl
adc
in
pop
adc
mov
cmp
mov
jb
loope
or
and
inc
and
or
mov
arpl
pop
ret
idivb
mov
jo
aam
pop
dec
dec
jmp
push
cmp
inc
ror
cmp
fstpl
pop
jo
pop
in
mov
ljmp
ficoml
rorl
pop
xchg
fstps
rorb
insl
xor
pop
pop
lcall
xchg
pop
sub
add
xchg
fs
roll
mov
daa
push
xchg
cmp
fistps
out
push
dec
sub
rcrb
push
push
call
push
mov
pop
rorl
sbb
negl
cwtl
aad
and
xor
cli
sbb
fwait
dec
cmp
push
xlat
adc
aad
mov
incl
or
leave
push
aaa
lds
icebp
pop
sub
mov
jge
or
in
or
xor
mov
or
nop
scas
leave
es
lods
addb
ja
shlb
lret
cwtl
jl
sarl
cmpsl
xchg
test
cmc
sbb
lahf
fcmovb
shrb
mov
dec
mov
lods
enter
rorl
sbb
xor
or
sbb
push
jl
icebp
jbe
push
outsb
xchg
mov
jo
push
xchg
hlt
ljmp
out
inc
insl
jg
or
xchg
inc
jle
add
sahf
pop
fisubs
pop
loope
lods
popf
mov
add
in
jmp
movsb
inc
xor
pop
jo
lret
push
stos
mov
scas
hlt
xchg
jbe
out
xchg
pushf
xor
add
xor
mov
xor
into
cltd
popf
popa
repz
mov
xor
push
repnz
jbe
call
lret
push
adc
jecxz
call
pop
mov
int
jns
push
out
inc
or
cmp
push
cmp
xchg
xor
imull
and
sub
jb
push
fs
mov
sbb
xchg
mov
and
test
xlat
and
and
roll
push
test
insb
pop
xchg
xor
push
push
push
jmp
test
pop
cmpsl
data16
inc
in
into
sub
ss
adc
xchg
gs
pop
add
add
sub
push
inc
enter
lret
dec
dec
inc
and
imul
xor
icebp
and
fcoml
ss
or
loope
and
xor
xor
or
popf
dec
test
sbb
jnp
scas
sti
es
sbb
mov
mov
js,pn
pushf
or
xor
insb
cmp
sbb
pop
js
add
mov
pop
sbb
lret
adc
scas
ret
or
movsb
add
xchg
pop
scas
jae
iret
mov
cmp
iret
fcoml
mov
sbb
push
cmpsl
cwtl
in
int
pop
cli
sub
jo
push
mov
xchg
pop
jno
inc
and
stc
push
sub
xchg
jb
aad
mov
mov
adc
fwait
sub
aam
icebp
sub
out
adc
mov
sub
jg
fisttpl
pop
xchg
jo
scas
mov
fstps
rol
sub
fistpll
idivl
lods
xchg
dec
push
mov
or
pop
sub
stos
inc
push
repnz
adc
jb
mov
inc
loopne
push
data16
ficomps
aaa
push
in
icebp
mov
mov
testb
mov
out
push
xchg
cmc
roll
in
and
out
pop
lods
stc
inc
js
add
les
loope
sti
ds
aad
sbb
clc
and
in
jp
in
inc
xchg
or
data16
lret
mov
mov
inc
jbe
es
pop
xchg
cmp
imul
jbe
xor
repz
ret
jns
cmp
in
push
sub
or
es
mov
and
je
fstl
jno
adc
js
xchg
jmp
inc
lahf
jge
fistpll
mov
push
or
mov
sbb
xor
mov
movsl
pop
adc
xlat
je
ljmp
je
cmp
mov
adc
repnz
test
jne
jmp
push
push
cli
inc
inc
xchg
adc
and
dec
push
fldenv
lret
jge
or
leave
mov
mov
sbb
sbb
jae
std
pop
std
rolb
loopne
push
into
inc
mov
sbb
lret
ljmp
push
dec
cmp
cmpsb
out
sbb
push
test
and
mov
push
add
cmp
add
mov
aam
mov
in
add
inc
mov
call
mov
ss
mov
push
sbb
adc
jb
cmp
aaa
xor
pusha
pop
jp
repz
cmp
mov
xchg
push
adc
ds
scas
notl
shll
inc
mov
imul
loop
mov
das
aam
push
cmp
xlat
rcrl
or
pop
test
xor
clc
xchg
sub
pop
sub
test
in
out
or
and
jmp
jp
adc
pop
xor
add
xchg
sbb
out
pushf
mov
hlt
and
jmp
sti
mov
add
iret
jnp
ljmp
mov
cmp
aaa
daa
adc
les
xchg
pop
cmp
fnstenv
mov
nop
insb
jns
in
lods
pop
mov
xor
popf
pop
fdiv
pusha
bound
jp
int3
adc
jl
mov
xchg
data16
dec
jmp
sbb
icebp
or
xor
xchg
incl
stos
arpl
shlb
sahf
mov
daa
js
adc
dec
rclb
stc
ret
dec
xchg
rclb
jge
and
sarb
sti
ret
insb
fcmovnu
and
bound
mov
inc
jno
sbbl
sbb
roll
loop
jp
cmpsb
mov
and
std
movsl
mov
cli
adc
sahf
cs
stos
push
jmp
imul
aad
sbb
pop
push
movsl
fimuls
in
xor
sahf
jmp
mov
push
dec
in
das
inc
dec
lcall
cmp
lret
cmp
adc
or
jge
das
mov
mov
outsb
fsts
mov
xor
mov
xor
mov
add
dec
add
hlt
negl
arpl
fsubl
adc
push
in
lods
jp
mov
xor
in
sbb
les
pop
adc
shlb
aad
daa
mov
dec
jmp
mov
sub
shll
add
je
repz
js
repz
gs
fsubs
cs
dec
aaa
sub
mov
or
or
lods
dec
push
ds
loopne
adc
pop
adc
add
dec
xchg
outsb
outsl
mov
xor
xchg
mov
mov
orl
cmpsb
pop
lea
cmp
adc
nop
xor
adc
lea
xchg
je
mov
jl,pn
shrb
pop
dec
rol
jmp
adc
lods
xor
into
lahf
lret
hlt
jne
sbb
cltd
mov
clc
xor
mov
orb
in
push
mov
and
div
pop
fwait
mov
icebp
cmp
test
pop
sbb
xchg
ret
out
icebp
ljmp
xlat
lds
mov
cmp
fidivs
mov
or
add
iret
repz
push
xchg
das
xor
cmc
pop
in
loopne
add
sub
fsubs
sarw
cs
lea
lock
int3
stc
pop
dec
into
in
mov
jo
xchg
ret
push
push
xchg
fnstenv
inc
ret
cmp
or
aam
mov
xor
insl
rclb
dec
stos
lock
inc
xlat
cs
js
repz
ret
sbb
mov
xchg
cli
xor
inc
clc
xor
add
repnz
pop
sbb
aad
push
xchg
fstl
cmpsl
sub
sti
jb
dec
pop
test
and
or
lret
cmp
jb
int
dec
xchg
nop
push
cmp
fistps
outsl
mov
mov
add
push
mov
xchg
pop
mov
stos
nop
stos
fimuls
mov
cmp
data16
hlt
ljmp
xchg
gs
es
lock
mov
jns
adcb
mov
jmp
insb
xchg
or
icebp
dec
pop
aam
adc
ret
test
dec
push
lock
imul
fldcw
sbb
lock
es
filds
push
sar
out
cmp
sahf
and
fsts
xchg
imul
jnp
xor
mov
lret
popa
cmpsb
repnz
jne
xchg
mov
push
daa
insl
add
and
dec
rcrl
js
mov
cmc
ss
test
pop
inc
mov
cmp
xchg
xor
popa
sti
jbe
insb
jp
mov
mov
les
sub
add
xor
jb
es
xor
mov
inc
jae
repz
adc
mov
sub
and
push
imul
sub
jb
bound
call
out
push
mov
pop
sub
jbe
fwait
push
imul
push
cwtl
lahf
push
adc
xchg
dec
test
movsl
pop
pop
jnp
xor
pusha
popa
repz
sbb
movsl
int3
outsl
lds
mov
or
fistps
xchg
add
dec
cmp
data16
push
stos
push
add
movsb
xchg
sahf
cld
aaa
in
xor
push
push
xor
pop
rol
aad
jae
cmpsb
adc
mov
loope
add
cmpsl
xchg
sbb
scas
xor
aam
sbb
les
lock
aad
clc
fs
jecxz
repnz
push
lcall
mov
pusha
lcall
mov
repnz
ds
cwtl
or
shrl
mov
icebp
leave
out
cmp
xchg
mov
movsl
cli
jb
mov
mov
in
sbb
adc
pusha
and
icebp
mov
jl
mov
push
or
and
pop
lds
adc
xor
jmp
ret
lds
mov
inc
inc
aad
and
fisubrs
push
lahf
mov
pop
in
push
or
add
icebp
pop
dec
int3
repnz
sbb
mov
orl
fs
filds
cs
xchg
ret
inc
movsl
js
jge
add
leave
xor
loope
std
or
pop
xchg
xor
mov
jmp
lods
cmc
aaa
inc
dec
xor
imul
adc
subl
cmc
mov
ds
aas
mov
loopne
xor
xor
stc
mov
aaa
mov
arpl
cmpsb
jnp
and
and
out
adc
ja
in
and
sub
stos
lahf
jl
xchg
lock
mov
adc
xchg
or
test
inc
dec
push
dec
aas
jo
rolb
sub
jns
adc
mov
les
or
cld
minps
sub
sub
jbe
jnp
pop
dec
insb
lahf
fstps
fisttpll
fists
pop
clc
sub
lea
pushf
mov
and
push
imul
in
mov
jae
add
fstpt
shll
cmp
jle
mov
movsb
lret
dec
rcrl
jle
cli
test
and
and
sub
sbb
fisubl
lds
xor
iret
mov
add
adc
loopne
inc
push
into
cmc
cmp
test
cmp
push
dec
mov
ds
cmp
jmp
aam
cs
shl
push
or
adc
sub
and
jg
jo
lret
add
rcll
aaa
add
imul
or
adc
js,pn
pmuludq
dec
inc
dec
repnz
inc
loop
jle
mov
mov
enter
jmp
test
bound
and
testl
and
test
mov
out
or
das
dec
jmp
aas
mov
std
add
ds
sbb
aad
jge
faddl
pop
sub
and
inc
ljmp
sub
xchg
rorl
in
dec
adc
push
xlat
arpl
jp
into
enter
lahf
stos
inc
push
in
std
pop
dec
jp
mov
mov
push
idivl
ljmp
je
and
or
repnz
and
enter
mov
sbb
jne
mov
pop
pop
mov
outsb
cmp
mov
fistpl
gs
cltd
enter
or
fwait
mov
push
xor
dec
mov
mov
and
inc
es
scas
out
outsl
jmp
int3
mov
sub
mov
arpl
mov
adcb
clc
dec
std
mov
imul
xor
stos
enter
mov
xchg
sbb
std
in
or
scas
jge
aam
cli
hlt
or
add
xlat
mov
xchg
cwtl
cld
outsl
jecxz
dec
roll
scas
xor
mov
aaa
imul
icebp
and
lock
cmpsl
idiv
std
xor
mov
stos
pusha
aas
push
cld
sbb
mov
or
rep
pop
je
pop
aad
jmp
xor
adc
repz
pop
test
xlat
popa
repz
xchg
ds
cmpsl
enter
arpl
sahf
mov
pop
cmp
testb
pop
in
push
adc
movsl
repnz
in
test
cmp
int3
mov
aas
mov
hlt
push
pop
lcall
add
mov
jecxz
mov
sub
add
repnz
data16
pushf
mov
movsb
lock
pop
call
mov
pop
fwait
testb
inc
addr16
in
push
sahf
mov
and
jb
cmpsl
fs
jns
adc
movsl
sub
call
mulb
mov
test
mov
mov
addr16
dec
fs
sub
das
pop
sahf
xchg
jge
loopne
inc
or
mov
jo
inc
ds
enter
mov
movsl
adc
into
inc
cld
inc
mov
sub
or
mov
jnp
js
cs
rolb
leave
aas
mov
test
sub
jne
ja
dec
pushf
das
outsl
pusha
daa
and
lcall
sbb
cmpb
xchg
jp
imul
fdivrs
mov
jg
cmpsb
inc
cmp
call
sbb
adc
add
movsb
imul
add
mov
mov
xchg
mov
andb
add
cmp
out
outsl
in
mov
scas
rcr
fcmovb
inc
mov
pop
in
lods
jecxz
cmpsl
fwait
cmp
push
bound
pop
popf
mov
xor
or
push
dec
and
mov
cmp
lret
xchg
cmp
mov
jo
outsb
mov
int3
cli
push
push
dec
fwait
xchg
dec
lods
stos
sbb
lcall
pop
out
imul
add
mov
outsb
mov
pop
or
pop
mov
loopne
add
xchg
xchg
sub
je
daa
jg
aas
aad
loopne
out
stos
je
pop
fstpl
sbb
orb
loope
push
pop
call
mov
mov
or
add
push
jae
hlt
sub
jle
cmp
in
mov
dec
sub
add
loope
inc
in
pop
gs
mov
or
outsl
les
dec
je
jmp
pop
jne
jno
stc
xchg
stc
pop
push
stc
js
ljmp
leave
mov
dec
mov
or
xor
addb
mov
sub
jbe
nop
shll
dec
or
lock
repnz
inc
inc
jecxz
mov
lock
jns
and
xchg
add
mov
and
pop
or
cli
sarb
mov
aas
dec
adc
push
dec
cmp
mov
movsl
popf
roll
inc
adc
jmp
jnp
inc
fdivrl
insb
lcall
pushf
lret
movsl
adc
jmp
aam
jae
sub
movaps
fnstenv
js
lcall
scas
mov
fisttpl
ja
push
pop
inc
imul
push
popf
aam
cmc
lods
push
sub
movsl
cmp
insl
es
int
push
xchg
incb
cmpsl
mov
mov
arpl
or
std
cmp
cmp
mov
popf
jne
mov
das
or
lea
jo
loop
pusha
xchg
ja
std
data16
fdivrl
adc
mov
dec
mov
mov
dec
inc
sbb
pop
loope
fdivrs
out
rorl
push
pusha
pop
xchg
jb
xchg
xchg
popf
aas
adc
dec
in
or
inc
hlt
stos
mov
popa
mov
jle
pusha
ljmp
sbb
adc
jbe
jp
ja
cs
mov
jg
inc
push
lcall
enter
movsb
mov
mov
fldt
jo
sub
mov
sarb
mov
imulb
imul
xor
jmp
pop
xor
cmp
xchg
insb
ds
aaa
imul
and
sbb
mov
pop
clc
orl
ror
lods
std
xor
sub
mov
push
lcall
lahf
enter
cmpsb
test
push
dec
inc
outsb
dec
cmc
add
out
or
and
inc
pop
and
or
inc
cmp
stc
mov
repnz
mov
push
add
call
mov
push
add
or
sbb
imul
xor
jb,pt
sti
mov
mov
push
fcmove
xor
jmp
test
add
std
pop
mov
xlat
and
cmp
jns
push
in
jae
jl
gs
test
out
test
or
stos
pop
xor
sub
fsubl
je
adc
mov
lock
mov
xchg
stc
clc
mov
int3
or
out
insl
js
daa
mov
pop
inc
mov
push
or
shl
loopne
xor
or
loope
frstor
mov
jne
jo
or
push
adc
and
mov
inc
faddl
jp
dec
jb
aad
dec
subl
jae
mov
scas
push
xor
les
or
in
nop
dec
dec
stos
ljmp
incl
jns
and
pop
out
sti
int
push
mov
imul
xor
imul
dec
xor
sub
xor
data16
inc
push
cwtl
and
les
lock
cmpsb
sti
mov
push
pop
sbb
imul
xchg
xor
xchg
in
movsl
pop
mov
into
mov
leave
stc
dec
dec
xor
dec
xor
cmpsl
or
pop
jno
push
mov
dec
mov
aaa
push
repnz
add
cltd
dec
or
aas
xor
lcall
adc
in
lahf
xchg
fldcw
aaa
mov
leave
movsb
mov
sbb
xchg
movsl
fdivs
sti
jae
ficoms
cli
and
imul
lcall
inc
push
cmp
repz
push
loop
lds
fsubr
adc
cmpsl
das
inc
imul
jg
mov
out
insb
inc
jbe
or
daa
movsb
jmp
fidivrs
test
jmp
frstor
frndint
add
and
jb
xchg
out
dec
sbb
adc
add
cmp
adc
lcall
mov
push
in
stos
pushf
popf
jno
inc
std
sub
lcall
arpl
mov
out
xor
jp
and
mov
inc
shll
mov
or
pop
mov
inc
mov
frstor
lds
gs
or
imul
aad
lcall
pop
cmp
dec
sbb
iret
fsub
pusha
mov
cld
and
mov
into
lods
cmp
adc
or
mov
inc
jmp
pusha
mov
ret
jo
lds
push
aam
jae
pop
add
and
jle
cmp
sub
dec
and
out
jmp
xor
shlb
and
jae
push
mov
add
or
dec
pop
dec
cmp
out
xchg
fcoms
push
insl
lldt
sbb
jmp
inc
int3
mov
sahf
and
std
mov
ret
mov
sub
jae
leave
mov
or
fsubl
and
cmc
push
or
int
and
ja
cli
xchg
into
push
adc
mov
aad
imul
andl
fstl
lods
inc
mov
fdiv
push
xchg
jg
push
gs
cli
popa
inc
outsl
lods
je
and
mov
jp
adc
sti
mov
imul
ljmp
push
jp
pop
sbb
and
les
xlat
cmp
mov
cmp
enter
pop
lcall
cmp
orl
or
mov
pushf
sti
clc
cld
push
mov
and
dec
pop
pop
pushf
sti
aam
jmp
and
cmp
sbb
xchg
shrb
sub
mov
stos
inc
pop
shl
lds
sbb
jbe
das
insl
addr16
pop
sahf
inc
push
add
xchg
in
fs
fildll
push
lock
jo
aam
add
xor
loop
sub
jge
movsl
sarb
cmp
filds
data16
mov
dec
aam
dec
xchg
in
cmp
adc
sbb
gs
lahf
movsl
ror
mov
and
sbb
cmp
shl
les
int
push
push
lea
scas
fsubrp
sub
das
js
std
mov
out
xor
mov
adc
xchg
ja
testb
cmc
int
pop
enter
dec
pop
fwait
push
not
add
pop
stc
jg
sub
pop
push
ja
loopne
rolb
mov
lcall
dec
hlt
mov
xor
imul
cmpsl
mov
jg
inc
je
dec
enter
cwtl
shr
imull
jg
pop
adc
sbb
inc
dec
adc
push
jno
cmc
in
std
add
sub
mov
xchg
or
jecxz
fwait
sar
adc
enter
movsb
repnz
dec
pusha
fmulp
test
rol
pop
mov
push
movsl
hlt
bound
xchg
shr
cmp
mov
sti
cwtl
dec
shr
sub
dec
sub
lds
add
imul
movl
mull
icebp
test
pusha
pop
jp
cmp
cmc
dec
sub
mov
xor
adc
cld
aas
mov
mov
ror
jo
push
out
cmp
loope
in
arpl
sbb
cwtl
sub
mov
xorb
sub
int3
mov
orb
cmp
int
jae
lock
xor
or
add
sub
push
or
imul
das
pop
outsb
cltd
adc
mov
and
mov
subl
js
out
pop
aas
in
push
fs
test
ds
shlb
push
stos
pop
lock
imul
xlat
lods
fs
push
fcoml
dec
fistpll
pop
mov
iret
and
adc
mov
in
push
imul
mov
xchg
addr16
daa
or
repnz
sub
out
xor
jl
jne
add
add
adc
adc
mov
loopne
lcall
pusha
dec
rclb
mov
imul
int3
mov
insb
mov
js
mov
dec
and
mov
mov
cmc
push
fs
fwait
inc
leave
ljmp
ds
je
push
adc
jbe
mov
jl
neg
push
mov
push
imul
cltd
adc
aam
xchg
clc
ficompl
ja
sbbl
xor
outsl
mov
mov
push
clc
xchg
insb
sbb
sbb
pop
nop
shlb
arpl
les
or
push
fildl
xchg
ljmp
and
cmp
cmp
mov
or
daa
and
xchg
cmpsl
or
pop
movsb
sar
out
loopne
cli
imul
jno
clc
arpl
mov
popa
mov
inc
in
inc
mulb
push
loope,pt
fldenv
pop
pop
dec
dec
pop
in
fsub
je
daa
jmp
jns
add
add
testl
pop
cmc
mov
xchg
filds
xchg
sti
ret
rolb
and
adc
adc
daa
jl
and
test
test
sbb
and
jae
into
call
aam
jb
add
pop
xchg
or
cmp
test
leave
das
sbbb
add
add
mov
dec
adc
addr16
stc
imul
mov
stos
callw
sub
rcrl
dec
or
jo
mov
inc
push
daa
inc
addr16
lds
lock
jle
sbb
adc
stc
loop
mov
fsubs
adc
leave
mulb
jg
aas
push
aam
in
leave
aaa
enter
lahf
repnz
push
arpl
xlat
jb
hlt
mov
inc
jns
iret
and
mov
call
inc
lahf
pop
das
cwtl
outsl
in
ljmp
popl
loope
push
add
mov
rolb
and
stos
pop
pushf
mov
add
out
ret
movsl
push
xchg
push
xchg
je
data16
fmuls
xor
pop
mov
pop
dec
out
push
stos
fistpll
shl
xchg
or
jecxz
and
sub
mov
inc
push
sahf
or
loop
test
mov
jmp
pop
pop
and
cmc
ljmp
ret
call
std
push
sbb
sti
je
pop
hlt
sbb
mov
in
in
jmp
inc
orb
jecxz
dec
cs
mov
lock
stc
add
out
pop
sbb
pop
in
push
jb
ljmp
jne
jb
repnz
test
lea
jo
pop
sub
andl
aad
add
cmpsl
pop
fsubr
shrb
cmpb
jle
adc
mov
lret
into
adc
xchg
or
lods
inc
iret
shrb
popf
ss
xchg
iret
mov
movsb
and
sub
or
dec
popf
pop
mov
xchg
cltd
std
xchg
stos
jp
push
cs
xor
xchg
leave
sbb
sti
test
sub
cmc
add
push
loopne
hlt
jns
dec
in
fs
push
pop
jno
sahf
pop
pop
out
shl
and
clc
mov
fwait
push
mov
mov
sub
je
xor
sub
sub
test
fidivrl
aam
pusha
mov
ret
es
mov
ja
dec
xchg
in
mov
ja
cltd
loopne
add
jae
stc
mov
xchg
jg
xchg
cmp
or
fwait
iret
inc
jl
jb
xor
repnz
outsl
scas
mov
pop
orb
stos
lods
dec
xchg
push
pop
je
icebp
push
cmpsb
pusha
out
xchg
mov
rcll
bound
ja
add
xor
int
and
arpl
xchg
in
aad
push
sub
or
sarl
add
jno
call
insb
xor
inc
mov
xchg
push
push
mov
arpl
mov
imulb
or
imul
mov
aaa
rcrl
ja
es
mov
xchg
jecxz
and
hlt
lds
mov
insl
mov
hlt
sub
addr16
in
test
enter
shrl
mov
sbbl
mov
stos
ficoml
loop
loop
pop
test
popf
test
mov
ficompl
mov
int3
adc
dec
fildll
jp
adc
movsb
jb
repnz
mov
cmpsl
xor
mov
jae
push
mov
cmp
mov
movl
lds
xchg
outsl
lcall
or
repz
mov
mov
mov
movsb
xorl
bound
setle
scas
aam
out
insl
sbb
iret
cmpsb
aad
jb
jecxz
lds
mov
aam
pop
inc
xor
cmp
or
fldt
stc
fcoml
xor
das
in
sahf
mov
sub
scas
outsl
lcall
fsubrl
push
dec
cmp
add
and
jl
jne
xchg
lods
sbb
pop
adc
enter
mov
cmp
push
and
jl
icebp
fldcw
iret
xor
mov
mov
mov
test
cmp
loope
div
and
pop
adc
xchg
or
stc
jb
jb
popf
gs
je
sbb
jo
inc
leave
push
movsb
dec
inc
les
sbb
rcll
aad
lret
dec
adc
repnz
add
jl
pop
jge
mov
inc
outsl
leave
lret
loop
push
jmp
inc
cmp
aad
and
push
fs
ret
xor
cmp
lretw
imul
mov
sbb
or
shrb
adc
das
push
mov
movsb
lock
jno
leave
out
icebp
shld
push
mov
mov
out
lcall
xor
jg
jns
loope
add
arpl
jge
pusha
mov
mov
adc
addl
dec
or
std
mov
ror
aam
cld
push
in
mov
push
pop
add
int
inc
mov
dec
pusha
xor
scas
inc
xor
imul
lds
jle
add
outsl
pusha
lds
jp
jecxz
rorb
push
mov
sub
jp
sbb
xor
dec
sbb
sub
lock
loope
push
lods
add
test
push
sbb
stos
inc
xchg
dec
imul
adc
cmp
jp
and
fisttpl
imul
lahf
ror
aam
movl
outsb
outsl
ljmp
xchg
adc
jno
mov
orb
cmpsl
cmc
pop
and
jge
lret
daa
ret
push
movl
fcmovbe
jne
push
inc
jle
int
lcall
add
mov
fdivs
out
sub
xchg
insb
lret
mov
pop
rcll
mov
popa
sub
lret
dec
mov
jno
xchg
pop
dec
inc
dec
sti
cmp
adc
flds
bnd
xchg
inc
fpatan
pop
sub
clc
mov
cmpl
dec
cmpsb
cs
and
xchg
push
insb
cld
imul
or
push
sbb
dec
jb
adc
mov
adc
sub
fldl
sbb
rorb
sbb
jb
rcr
mul
movb
mov
int3
push
push
test
sbb
insl
or
aas
lds
int
gs
test
jecxz
jbe
fiadds
mov
lcall
ret
pop
outsb
lea
dec
sub
pop
mov
or
cmp
xor
pop
lods
add
mov
pop
vpunpcklqdq
stos
outsb
push
aas
and
pop
add
imul
stc
jmp
scas
arpl
fmulp
arpl
fsub
jo
test
pop
push
out
pop
push
enter
aam
and
fistpl
adc
jp
dec
sub
dec
insb
xor
out
and
sbb
in
dec
test
loop
stos
enter
pusha
mulb
fcoml
pop
clc
insb
movsb
sub
dec
pop
mov
add
jp
shll
or
xchg
jne
adc
push
lds
and
ss
mov
jle
fiadds
testb
add
in
xor
inc
push
in
and
or
andl
fmuls
mov
adc
lcall
ret
xchg
or
mov
popl
adc
push
add
jmp
ret
cwtl
push
push
idivb
xchg
bound
sbb
xchg
cmp
inc
sbb
lahf
adc
mov
daa
xchg
rcll
pop
outsl
sub
aam
cmp
mov
pop
xchg
dec
inc
bswap
push
daa
icebp
ret
into
push
push
ds
pop
nop
aad
sti
push
data16
lret
sahf
pop
pop
xchg
fwait
les
mov
test
adc
xchg
xor
stc
xchg
inc
ss
sahf
ret
mov
cwtl
js
cmp
dec
ret
push
mov
movb
lea
mov
jno
jbe
in
sbb
dec
andb
xor
and
or
mov
mov
or
lcall
xchg
or
jp
jae
push
inc
mov
pop
push
ds
sub
push
int
cmpsl
cli
xlat
in
adc
xor
pop
push
aaa
cmp
movb
shl
sbb
dec
dec
sbb
or
pushf
jmp
adc
push
test
xchg
cld
scas
out
mov
jecxz
rclb
fistpll
pop
in
push
xchg
cwtl
lcall
mov
test
sub
inc
sub
sbb
mov
repnz
frstor
and
das
out
or
sub
in
and
pop
and
testl
sbb
mov
aaa
or
sbb
neg
xlat
dec
add
imul
xor
ja
xchg
ret
mov
sbb
mov
adc
pushf
pop
cltd
rcrb
xchg
loopne
test
xchg
ficomps
pop
and
shrb
pop
jne
gs
stos
adc
jb
mov
sub
movsl
enter
mov
mov
pop
jmp
xchg
sub
jae
imul
jmp
xchg
xchg
xor
outsb
adc
int3
cmpsl
cmpsb
pop
cmp
jp
mov
scas
jle
jo
cmpsb
std
and
push
dec
rep
mov
mov
mov
push
rolb
aad
insb
mov
lahf
cltd
icebp
cltd
fbld
mov
fdivrp
push
push
shll
fidivrs
xor
sub
inc
call
aam
ss
xchg
loope
push
sbb
dec
jbe
add
xor
or
mov
xor
sahf
rolb
popa
cmc
xor
ret
inc
xchg
in
shrl
daa
shlb
enter
cwtl
ja
jne
es
jne
pop
test
iret
sbb
xchg
out
fnsave
and
or
scas
mov
mov
enter
push
add
add
sub
std
aam
rorl
int
mov
popa
adc
fnsave
fs
imul
xchg
enter
nop
or
fidivrl
sbb
adc
mov
les
lock
inc
adc
pop
dec
ss
sbb
fisubrs
jae
cmp
xchg
pop
jg
in
push
jno
sbb
insb
and
cli
ja
jo
sbb
xchg
hlt
es
jl
xchg
sti
aad
loop
leave
or
cmp
and
add
int
mov
and
movsl
ret
jne
xchg
cltd
xor
aas
pushf
lock
mov
cltd
xchg
cmpsb
test
aad
pop
fdivl
mov
sbb
dec
cmp
jne
adc
dec
in
dec
xor
inc
in
test
xor
jmp
jns
sub
sub
mov
icebp
sbb
sarb
pop
and
aad
and
ljmp
stos
dec
pop
push
imul
into
dec
jb
dec
cmp
mov
mov
push
cmpsb
insb
jne
xor
cmp
lret
mov
xchg
mov
adc
repz
cmc
orb
sbb
xor
dec
inc
add
ret
lret
pusha
rolb
pop
dec
pop
dec
mov
repz
pop
psubb
fs
cmpl
in
or
inc
xorl
lcall
inc
pop
js
adc
push
xlat
cli
dec
mov
ss
arpl
int3
xchg
mov
insl
into
into
pop
or
ljmp
sbb
push
stos
nop
push
lods
ljmp
cmovnp
and
imul
xor
nop
icebp
adc
add
std
mov
adc
incl
cmp
xor
sbbl
in
cs
add
sbbb
adc
in
pop
repnz
inc
jecxz
mov
cli
xor
into
sbb
lods
mov
or
push
xchg
js
add
sti
sub
mov
sub
movsbl
xlat
sub
cmp
jae
jg
jp
sbb
jno
fs
cmpsb
aas
push
mov
ljmp
push
pop
aaa
inc
push
sahf
push
inc
jmp
xchg
pop
jo
adc
xchg
lret
inc
xlat
push
mov
mov
out
lds
xor
inc
mov
sbb
addb
mov
sbb
push
loopne
xor
jo
pop
jle
jecxz
push
xor
cltd
xor
push
adc
or
test
clc
mov
ss
and
and
in
adcb
xor
out
std
icebp
and
dec
das
or
inc
xchg
outsb
in
sbb
fimuls
jns
push
sub
xor
xchg
sarl
cmp
enter
inc
insb
in
pop
ljmp
cmp
mov
push
repz
xchg
ret
das
cwtl
mov
or
in
lds
mov
stc
xor
mov
dec
mov
xchg
mov
fisttps
rcll
cmpsb
inc
movsl
and
pop
jge
movsb
cmp
and
xchg
aas
xchg
jnp
outsl
mov
pop
faddp
mov
sub
sbb
jae
decl
hlt
fmull
pop
out
test
cmp
xchg
mov
es
pop
fisttpl
jge
adc
loop
cmpsb
push
push
xor
and
adc
pop
lods
sub
test
enter
push
xchg
gs
ss
aaa
mov
mov
rclb
lds
inc
xchg
addr16
insb
sbb
mov
dec
dec
xor
xor
fwait
stc
outsb
inc
jnp
push
scas
daa
inc
adc
dec
and
mov
pop
and
xor
clc
cmpsl
jns
int3
push
jnp
cmp
mov
ljmp
mov
loop
add
cmp
cltd
out
lods
clc
daa
cmp
pop
add
cli
pop
pop
sub
inc
arpl
pop
mov
fidivrl
aam
adcl
rclb
call
jo
mov
dec
into
in
jle
leave
lds
lds
aas
movsl
and
sub
lock
sbb
int
add
cli
scas
cs
push
sbb
std
fs
jo
test
add
dec
cmp
adc
iret
or
jmp
out
xchg
into
adc
pushf
push
push
xchg
xchg
pop
shlb
push
xor
dec
push
int
fdivrp
test
jmp
push
fadd
inc
mov
rcll
xchg
ret
or
decb
xor
jecxz
mov
mov
decb
jle
mov
and
xlat
cmp
dec
and
popa
insb
out
je
rcr
cld
mov
rcrl
stos
lea
in
adc
or
pop
ljmp
out
hlt
jge
jle
andps
mov
xchg
out
mov
jle
lods
jno
push
dec
roll
fwait
pop
fwait
bound
js
stos
or
loop
mov
push
cmpb
add
adc
adc
sub
stc
mov
mov
sbb
or
xchg
dec
jae
sub
fbld
lret
test
lret
mov
rclb
fidivrl
sahf
adc
fdivrs
xchg
push
lods
movsl
stos
repnz
pop
pop
xlat
sti
icebp
cmpsl
scas
pop
cltd
xchg
inc
les
xchg
sti
mov
ficoms
sub
dec
int
push
adc
push
jl
adc
sbb
dec
hlt
xlat
int3
xchg
xchg
jl
dec
add
dec
sti
test
bswap
dec
mov
aaa
mov
adcl
call
pop
inc
out
lds
insb
mov
or
out
adc
push
mov
push
mov
add
and
mov
dec
rcr
mov
sub
jb
jbe
push
lds
loope
cmc
out
lahf
xchg
or
outsl
push
mov
cmpsb
adc
stos
mov
push
addb
xchg
leave
sbb
cmp
fimuls
lea
mov
hlt
xchg
mov
insl
test
jbe
ljmp
jge
bound
sub
ret
mov
xor
adc
jge
jne
jl
lahf
adc
movsb
pop
cmp
test
pop
jo
lods
pushl
and
cmp
mov
xor
push
push
pop
movsl
arpl
movsl
mov
adc
or
dec
cltd
nop
pushf
loop
and
lods
and
stos
lock
jecxz
add
dec
call
ficoms
notl
push
and
sub
lods
add
icebp
xor
push
sbb
imul
sbb
sbb
in
mov
inc
or
lods
add
loope
ss
out
and
and
ja
add
adc
lahf
inc
or
adc
mov
push
jle
jb
not
adc
xchg
sub
aaa
leave
and
jb
xorb
hlt
sar
sbb
ss
scas
mov
xchg
shll
adc
or
xchg
out
sti
icebp
call
lcall
xor
in
imul
pop
pop
dec
fsts
aad
add
jnp
xchg
ds
repnz
jecxz
pop
in
or
mull
es
mov
sub
and
jno
push
gs
mov
mov
lret
cmc
cli
mov
test
loop
andb
shl
sub
dec
jb
or
cmp
loop
and
pop
lret
scas
imul
sbb
sbb
cmp
xor
es
popa
jle
dec
std
mov
push
push
mov
roll
negb
sti
xchg
sti
mov
repz
dec
xchg
fs
pop
inc
jae
jb
cmp
jecxz
cltd
sbbl
jge
pop
subb
sti
mov
jbe
cwtl
cmp
mov
adc
scas
imulb
icebp
or
sub
aas
fwait
or
sbb
stc
xor
aaa
ret
jmp
push
push
mov
mov
fisttps
or
jnp
scas
stc
clc
jns
xchg
jmp
add
fsubl
aam
pop
andb
jmp
push
outsb
stc
xchg
sbb
and
outsl
iret
imul
push
mov
xor
mov
xchg
fildll
lock
push
jb
sbb
mov
outsb
mov
mov
out
stc
or
sti
xor
shll
push
cmc
jle
cmc
mov
lock
xchg
popa
sbb
lcall
int3
cmp
nop
mov
jne
in
out
lahf
xchg
pop
jle
pusha
outsl
jg
jae
out
lods
and
loope
inc
ds
mov
adcb
pop
jne
notl
or
sbb
xor
add
je
fcompp
out
or
js
cwtl
imul
jge
pop
inc
mov
xchg
and
shlb
stc
and
movsl
nop
pop
mov
mov
mov
xchg
jge
ret
cmpsl
mov
mov
mov
in
lret
adc
push
movsl
and
je
clc
cmpsb
stos
and
fstpt
jle
in
pop
lcall
imul
loop
gs
inc
lea
mov
cmpsl
loope
shll
dec
or
cmp
push
add
inc
jno
push
cmpsl
sahf
or
cli
jae
decl
lea
or
pop
cmpsl
add
iret
hlt
or
repz
js
pop
div
ret
outsl
popa
rorb
mov
pop
pushf
lret
lock
push
aad
popf
push
pop
shll
notb
movsl
push
rcr
mov
sub
cmc
stos
in
std
jecxz
dec
add
es
repz
les
ffreep
ret
insb
jne
adc
or
pushf
mull
fcomi
mov
dec
repz
push
out
push
push
add
lahf
mov
xchg
pop
xlat
cld
mov
loope
jle
sbb
dec
movsb
outsb
daa
cld
insb
fs
movsl
inc
repz
pop
popf
bound
mov
outsb
stc
push
pop
scas
xor
cmp
mov
and
inc
jns
cli
jmp
cmpsl
pop
stc
in
lds
scas
aam
cmpsb
hlt
in
xchg
push
adc
mov
push
jg
push
bound
int3
inc
cmp
sahf
jecxz
jo
ja
jl
xchg
lea
sbb
xchg
sub
test
dec
add
xor
push
inc
pop
enter
mov
and
daa
in
repnz
es
or
jb
sub
fadd
add
jne
cs
out
lds
dec
daa
cmpl
imul
sbb
dec
sbbb
xchg
cwtl
inc
xchg
bound
add
sbb
mov
loopne
push
dec
loopne
mov
jmp
xchg
sti
leave
sub
xchg
cmpb
add
adcb
xchg
mov
mov
dec
mov
hlt
fstl
xchg
push
fnstcw
js
xchg
cmpsl
data16
pop
fnsave
push
pop
push
in
add
mov
lods
movb
dec
jmp
ja
add
push
push
and
mov
push
sahf
xchg
or
aas
lret
xchg
add
add
jno
adc
sub
orl
cmp
inc
dec
stos
inc
cmp
sbb
stc
pop
mov
add
and
popa
insb
or
jmp
fildll
fdivl
xor
push
or
mov
push
shl
mov
ljmp
xchg
out
dec
fcom
sbb
xchg
bound
enter
insb
or
mov
ret
push
rcl
int
pusha
jle
dec
in
in
ficomps
mov
daa
in
push
push
rcrb
add
pop
in
push
mov
cmp
lahf
clc
loopne
stos
cmpsl
sub
push
inc
mov
pmaddwd
jge
mov
xchg
popw
push
cmp
dec
fstps
push
adc
adc
sbb
inc
pop
dec
jl
int
imul
fnstenv
jmp
aad
outsl
adc
pop
mov
fildll
data16
in
or
js
sbb
lods
or
loope
mov
iret
pop
test
rorl
cmp
or
xchg
pop
inc
je
in
inc
ljmp
add
lods
sti
repz
pop
loop
das
sbb
mov
std
xchg
xor
int
cmp
xor
ds
ret
repz
and
mov
outsb
outsb
cmp
mov
mov
dec
outsb
jp
orb
test
xchg
and
xor
sub
pop
pop
lds
cmp
add
or
xchg
cmp
sbb
mov
push
jno
xchg
sbb
mov
jno
jne
jb
pop
pop
push
inc
xchg
gs
push
in
add
rcrl
and
jmp
mov
jbe
xor
xchg
or
mov
cli
fcmovbe
sbb
and
adc
mov
sbb
aam
mov
mov
pop
mov
mov
lahf
in
setbe
mov
fcomps
pop
cmp
dec
int3
outsl
and
cmpsl
inc
nop
jb
add
sub
jp
jbe
aad
jecxz
hlt
scas
addr16
inc
aam
adc
sub
std
jmp
out
lods
sbbl
out
push
jae
mov
push
inc
mov
inc
aam
pop
scas
loope
mov
xchg
outsb
or
push
js
ljmp
push
mov
adc
fdivl
jge
xchg
ja
add
xor
in
sub
push
enter
adc
shrb
ja
es
jbe
push
mov
int
push
or
jge
test
fimull
dec
pusha
mov
dec
stc
jecxz
nop
and
stos
inc
in
adc
fwait
sbb
push
adc
arpl
repnz
lcall
dec
xchg
stc
pop
sub
and
dec
mov
xchg
popf
shlb
ret
pushf
push
xchg
int
mov
mov
js
scas
lds
xor
testb
or
inc
jbe
pop
mov
mov
addb
sbb
pop
push
mov
inc
mov
adc
sti
sahf
enter
je
popf
adc
outsb
test
cwtl
push
stos
ja
jne
mov
mov
add
jb
out
cmp
sub
push
movsb
sbbb
mov
pop
cmp
lods
movsl
inc
dec
or
dec
stos
pop
add
mov
cmp
hlt
jae
nop
fldenv
mov
mov
in
sub
mov
xchg
loopne
into
sub
inc
orb
das
ret
add
pop
sub
subl
mov
mov
call
lret
jp
dec
cwtl
cmp
dec
mov
mov
sub
lret
xor
or
add
push
cld
hlt
or
push
dec
cmp
fnstenv
cmp
dec
dec
stos
jge
int3
push
sub
lret
mov
sub
popf
add
or
xchg
cmp
scas
lea
clc
es
jno
subl
push
sarl
adc
sbb
adc
push
sbbb
iret
and
std
mov
and
inc
ds
stc
fildl
and
popa
sbb
add
push
mov
lods
adc
cmp
or
pushf
fldl
ja
add
inc
sub
addb
pop
icebp
inc
mov
imul
and
in
and
jecxz
or
and
jmp
fists
std
insl
dec
mov
ljmp
outsl
mov
sti
push
stos
dec
sbb
lods
cld
adc
mov
xchg
mov
or
sub
lea
mov
jbe
inc
in
sti
cmp
sbb
cmpsl
jae
and
pushl
cmpsb
fnstsw
loopne
mov
into
add
or
ds
sub
jae
inc
frstor
jnp
sub
cli
dec
dec
dec
mov
fldenv
outsb
push
jnp
mov
inc
lock
jne
xor
sub
movsl
scas
push
mov
mov
pop
jns
pop
inc
lcall
push
or
lahf
xor
lahf
jo
or
cmpsl
jp
sarb
add
std
ja
adc
pop
jle
xorl
jmp
cmp
push
scas
cwtl
jnp
int
cwtl
ss
aaa
mov
imul
xor
mov
das
inc
cli
ljmp
outsb
addr16
test
pop
xchg
inc
adc
push
fcmovnu
mov
and
push
fsubs
pop
insl
cmp
inc
loop
aas
jl
loopne
pop
sar
mov
cmpsl
sbb
add
cmp
outsl
mov
jmp
jne
jecxz
mov
dec
rcrb
or
mov
adc
aaa
jmp
mov
add
jne
lret
jae
cmp
icebp
int3
inc
ret
and
mov
jne
fs
jl
mov
adc
es
out
or
jle
inc
mov
pop
mov
mov
pop
cltd
mov
xor
dec
les
dec
adc
lcall
int3
popa
cmpsl
push
cwtl
mov
shll
push
cvtps2pi
cmpsl
lret
ret
inc
pop
cmp
mov
push
cs
jnp
fisttpll
shll
push
movsl
lock
ja
sub
popf
cmpb
js
or
icebp
cmc
push
cmp
push
push
mov
push
data16
mov
dec
push
pushf
sbb
push
adc
adc
dec
dec
bound
daa
mov
scas
jb
push
adcb
jl
fildl
mov
mov
es
scas
mov
cmp
push
cwtl
dec
clc
je
jle
pusha
and
aam
lcall
jmp
rclb
imul
adc
inc
in
es
sbb
pop
stos
aam
es
into
lret
aam
jne
xchg
addr16
cli
xor
std
jmp
or
icebp
ja
inc
jae
inc
dec
jl
les
jmp
jae
inc
cmp
cld
and
iret
ss
mov
cmpsl
aaa
out
daa
pusha
mov
jg
scas
and
and
scas
pop
inc
aam
add
mov
out
stos
in
add
sub
push
stc
in
repz
jno
mov
jle
mov
jmp
frstor
inc
jge
outsl
stc
test
ljmp
inc
outsb
ds
jnp
leave
inc
mov
mov
fs
inc
adc
adc
mov
cmp
xchg
into
mov
mov
xchg
das
cli
pusha
push
adc
push
sbb
or
enter
shl
pop
mov
cmp
fcompl
repnz
push
addr16
repnz
jne
adc
into
cltd
rorl
icebp
jg
sub
out
xor
daa
push
jp
dec
inc
icebp
sarb
dec
push
pop
sbb
or
aas
stos
jae
sub
je
add
test
repz
mov
or
push
pop
in
ds
imul
lahf
and
sbb
inc
xorl
adc
mov
mov
das
dec
or
dec
inc
pop
sbb
ret
dec
mov
jno
pop
ret
movsl
out
inc
shll
mov
imul
cmp
or
jb
movsb
inc
dec
xchg
jnp
sbbl
in
push
leave
fcompl
hlt
sub
sub
push
shl
movsb
int3
js
in
jnp
pop
pusha
push
stc
nop
inc
out
inc
lock
and
jg
jg
js
cmp
dec
xor
inc
jg
add
cmp
fistps
pop
adc
mov
and
je
dec
cmpsl
icebp
imul
cmp
inc
pop
sub
mov
xchg
aad
pop
adc
loope
pop
iret
pushf
cmp
mov
sub
mov
outsl
popa
mov
daa
adc
insl
les
or
jmp
popf
jmp
adc
movsb
push
out
mov
mov
mov
mov
mov
enter
mov
daa
jns
jbe
out
sbb
pop
sbb
test
mov
insb
pop
mov
enter
push
xchg
insb
push
cmpsl
cli
jns
push
fsubrs
mov
popf
testb
test
adc
cmpsb
jmp
jb
cmp
push
cs
pop
push
inc
xchg
in
popa
mov
hlt
xchg
iret
mov
mov
int
daa
scas
mov
mov
jecxz
dec
test
mov
push
pop
mov
imul
add
mov
fistpll
mov
test
andb
push
aad
int
addr16
popl
leave
inc
push
mov
loope
and
loopne
aam
nop
lret
xor
fistps
cmp
repnz
lods
imul
pop
int3
add
inc
or
lahf
pop
loop
js
dec
cli
dec
movsb
pop
or
je
es
xchg
lahf
repz
adc
pushf
mov
repnz
dec
lret
stos
sahf
mov
push
adc
xchg
mov
and
xchg
inc
jmp
into
stc
and
js
fistpl
in
popa
and
push
jne
mov
adc
mov
popa
xlat
testl
jg
or
push
lret
mov
daa
add
aad
decb
cwtl
dec
popf
fs
ror
addb
push
sub
cmc
call
jmp
sub
popl
adc
inc
rcrb
xchg
aad
add
inc
xchg
and
xchg
pop
shrb
popa
jl
mov
stos
ja
xchg
xchg
or
pop
es
js
stc
movsb
outsl
push
ljmp
sti
xchg
sar
imul
add
dec
inc
loopne
nop
decb
movsl
divl
mov
aam
test
and
xchg
ret
shl
cwtl
pop
or
inc
les
outsl
fs
mov
cli
cmpl
jmp
rclb
inc
ds
adc
sbb
and
cmp
shrb
cmp
lods
cmp
inc
arpl
cmp
mov
xlat
sbb
repz
enter
imul
in
add
cmpb
add
ss
sarb
push
loope
mov
jl
add
es
jnp
pop
test
addr16
out
xor
and
inc
loop
out
outsl
or
mov
pop
adc
add
in
pusha
cs
jb
mov
in
cld
xchg
pop
push
sub
in
insb
fst
mov
daa
dec
jmp
pop
cmp
stc
pusha
ljmp
lcall
add
stos
cmp
neg
mov
dec
out
mov
lds
dec
cmpsb
int3
sbb
pop
or
dec
jl
cs
mov
jmp
cmp
sbb
pop
je
mov
xchg
into
dec
jae
repnz
pop
inc
movl
pop
xchg
cs
mov
pop
scas
xchg
andl
cmp
jne
dec
insl
xchg
iret
cmpsb
mov
mov
ret
cld
mov
out
jnp
adc
movsb
repz
cmp
mov
test
test
lret
mov
or
cmc
daa
cmp
mov
inc
sbbl
stos
adc
inc
xchg
dec
arpl
cmp
sbb
sbb
lods
test
cmp
mov
jl
test
sub
xchg
ja
lahf
push
hlt
mov
dec
bound
scas
ljmp
js
xchg
vaddsubpd
addr16
repnz
push
aam
mov
add
sbb
push
pushf
arpl
aam
out
adc
ds
push
xor
inc
dec
fisttps
es
sbb
sbb
movsl
loopne
repz
sahf
aam
pop
ds
fs
jmp
lcall
sbb
out
push
add
enter
or
mov
pop
adc
call
rep
jo
mov
and
mov
jo
sbb
mov
mov
xor
or
daa
shr
xchg
lret
and
inc
add
test
pop
hlt
and
pop
sub
and
mov
mov
or
rorl
jne
xchg
ja
mov
les
repz
stc
das
cmpsl
lods
adc
adc
jne
cmpsl
xor
popf
or
imul
ja
adc
mov
mov
cmpsl
std
sub
cltd
sahf
aas
jo
adc
push
pop
push
stc
test
pop
ret
sbb
fmuls
in
lods
dec
xor
mov
negl
push
mov
js
sbb
pop
inc
inc
push
int3
aaa
pushf
xor
in
mov
imul
dec
pop
sahf
sbb
push
jnp
pop
scas
xlat
out
jnp
sbb
outsb
dec
mov
push
divl
cli
jno
lock
or
dec
jle
aas
add
mov
test
dec
aaa
sbbb
inc
dec
sub
pop
cli
cmp
and
sbb
stos
add
add
stos
xor
mov
cmp
pop
enter
test
and
jg
imul
dec
sub
mov
leave
popf
rcrl
lods
cs
and
imul
dec
or
out
add
icebp
inc
daa
adc
jge
icebp
jo
ss
or
and
xor
out
lea
cwtl
add
inc
fcompl
and
sub
jmp
addr16
dec
xchg
mov
and
jbe
dec
dec
pop
sahf
or
insl
faddp
mov
call
or
ret
mov
fldenv
sbb
xor
and
sbb
pop
nop
or
fnsave
dec
push
lock
push
xchg
sub
push
add
int3
pop
xchg
js
dec
mov
mov
mulb
jmp
lret
dec
and
ja
lds
or
imul
mov
in
inc
jns
mov
pop
aad
inc
xchg
sti
mov
dec
mov
ljmp
aad
jo
popa
jno
jae
adc
or
stos
xorb
push
jo
dec
addl
aas
ja
and
mov
xchg
adc
sti
call
mov
push
cmp
or
add
jmp
xor
dec
sub
mov
push
mov
adc
je
push
push
fwait
add
sub
mov
xor
hlt
or
and
adc
insb
mov
scas
addr16
loop
push
int3
push
xchg
pusha
and
test
aam
pop
xchg
lea
lcall
and
ret
cmpl
pop
pusha
inc
sbb
inc
mov
insl
lcall
jecxz
andl
rcrb
scas
or
xchg
pop
and
cmp
fimull
cmp
cmp
in
popa
cmp
add
in
mov
or
add
in
test
sti
lahf
adc
aas
push
mov
or
xchg
fsubrl
sbb
sub
ljmp
cmp
shl
lcall
lahf
mov
test
repnz
mov
out
sti
pop
sti
fcmovbe
das
int
cwtl
js
xchg
rorb
imull
adc
aaa
lret
mov
nopl
popf
xchg
xchg
jp
dec
mov
mov
xorl
jo
aaa
xor
pop
add
dec
push
mov
add
adc
sub
loop
pop
icebp
xchg
mov
push
jne
xlat
push
pop
loop
lock
int
add
call
outsb
pusha
mov
jno
and
test
and
sub
adc
dec
bound
or
sbb
and
orl
adc
jge
sbb
mov
icebp
lahf
and
ja
adc
dec
lock
ja
inc
jnp
and
test
ret
aaa
ja
lds
sahf
cmp
into
popa
addl
daa
sahf
pop
inc
sub
pop
pop
sbb
pop
adc
shrb
pop
inc
in
movsl
dec
add
cmpsl
inc
enter
mov
or
mov
push
repz
shll
xor
hlt
xchg
out
push
repnz
lea
stc
test
jnp
push
mov
mov
test
insb
aad
push
cwtl
mov
outsl
push
out
test
ss
lea
inc
mov
mov
inc
add
out
cwtl
lea
out
mov
loope
imul
call
jno
sub
add
and
mov
mov
loop
rcll
or
dec
mov
notb
mov
orl
lahf
mov
imul
push
and
xor
xor
and
cltd
imul
fldt
les
xchg
mov
gs
loope
scas
es
cmpsl
sub
jp
nop
popf
mov
inc
xchg
add
loopne
sub
into
push
bound
mov
jo
jbe
stos
pmulhuw
add
out
outsb
jmp
into
repnz
int3
mov
in
inc
mov
sub
mov
and
loope
outsb
lea
xor
cs
and
mov
jmp
subl
hlt
ficoml
inc
mov
push
js
pop
push
jae
mov
or
xor
or
sbb
mov
sbb
aam
adc
clc
bound
sub
dec
sbb
cld
add
outsb
fnstcw
add
mov
mov
cmp
or
sbb
push
nop
rcrl
inc
loopne
ds
addr16
fwait
in
or
sbb
push
pop
mov
out
xchg
add
bound
jae
testl
mov
add
call
movl
xchg
lret
jecxz
inc
popf
jge
add
scas
mov
xor
xlat
leave
loop
nop
mov
imul
mov
arpl
push
add
in
addr16
mov
rclb
insb
pop
xor
jge
inc
in
into
nop
iret
sub
add
mov
jge
mov
les
jno
lods
mov
cmp
lods
sarb
enter
add
pop
add
std
and
adc
icebp
mov
dec
out
test
lret
addr16
or
pop
sbb
or
aad
cmp
mov
andb
repnz
jae
enter
data16
ret
lcall
outsb
push
sub
out
imul
pop
adc
ret
stos
xchg
fistpll
jecxz
subl
test
or
rcl
xchg
pop
popf
je
pop
shlb
jle
xchg
push
cltd
test
fsubp
mov
stos
cmpsb
test
cmp
cmp
das
aad
xor
iret
sbb
cltd
sarb
call
fldl
lock
es
push
ljmp
aam
adc
jo
cli
cmp
mov
in
jmp
mov
les
out
push
ja
ljmp
cmp
cmc
inc
and
mov
or
jns
xchg
ret
dec
adc
xchg
sub
xchg
sar
nop
sub
and
shl
movsl
pop
into
or
fisubrl
int3
jmp
xor
mov
jae
jo
lock
cmpsl
mov
xchg
mov
mov
mov
popa
sbb
scas
xchg
sub
mov
aam
sbb
fadd
dec
loop
sub
sbb
shll
test
inc
stc
add
sbb
out
push
fwait
shrl
int3
aas
insb
movsl
jmp
packuswb
or
mov
pop
rolb
pop
cmp
scas
pop
xchg
dec
xchg
jns
out
push
rclb
repnz
fsub
clc
imul
push
xchg
stos
xchg
cmpsb
stc
outsb
lods
adc
jno
popf
push
movsb
and
lcall
popf
orl
adc
sbbl
xor
shl
lods
xchg
outsl
mov
scas
mov
pop
dec
sahf
cmc
and
out
out
sub
xchg
dec
bound
adc
movzwl
cmp
repz
push
push
lea
add
lods
fsubp
mov
xchg
mov
dec
js
int
mov
push
add
xchg
arpl
lahf
decb
sub
cmp
xor
adc
lods
mov
mov
xchg
push
mov
fs
pop
add
cmc
push
mov
xchg
mov
test
icebp
xchg
int
xor
cmp
mov
dec
cltd
lret
int
or
xchg
shlb
inc
test
test
jbe
cmp
jg
mov
test
add
or
xchg
fs
mov
aaa
xorb
lods
daa
pop
or
sub
js
js
sub
mov
std
in
icebp
add
mov
jmp
inc
jmp
sbb
pusha
xchg
xor
mov
cmpsb
inc
jl
int3
sbb
andb
xchg
shll
xchg
insb
mov
sub
movsb
sbb
sahf
xchg
fs
fst
int3
xor
sub
loopne
dec
lea
cmp
adc
mov
sahf
xlat
aas
sub
divl
mov
mov
push
movsl
pusha
mov
and
pusha
cs
in
inc
jmp
sub
jae
sbb
xlat
mov
xchg
aam
xlat
push
popf
push
out
push
aad
sbb
leave
pushl
dec
dec
mov
out
sbb
jno
push
or
nop
pushf
in
adc
shl
xorl
push
lea
pop
sbb
fs
aaa
mov
mov
adc
sahf
cmp
mov
mov
in
int3
repnz
adc
test
mov
dec
sub
xchg
push
lods
add
xlat
dec
lds
iret
xor
ja
mov
icebp
xchg
sbb
fwait
dec
int3
nop
cmpsb
es
or
mov
and
jno
or
add
test
scas
pop
mov
fisttps
cs
pop
lahf
pusha
xor
adc
mov
in
pop
add
ret
adc
sub
stc
fs
mov
or
pop
inc
fwait
ja
jge
cmp
or
xchg
subl
mov
push
call
or
and
daa
popf
pop
dec
mov
fistl
lock
mov
or
mov
and
iret
mov
sbb
push
pop
mov
int3
jp
jle
and
out
push
inc
sbb
data16
pop
adc
mov
mov
addr16
sub
xchg
fcompl
mov
mov
adc
data16
xchg
add
rorb
in
or
mov
xchg
cmpl
jmp
or
test
inc
aam
xor
mov
cmp
out
xchg
dec
xor
add
push
dec
int3
jge
loope
inc
shll
pop
mov
mov
mov
out
pop
dec
cmp
fs
ja
mov
fnsetpm(287
push
scas
popa
test
icebp
fnstcw
add
cmp
mov
xor
rcll
or
mov
mov
dec
fcmovnb
mov
fs
mov
lods
repnz
fsub
inc
dec
into
lret
pop
or
cmp
mov
cld
cld
popa
das
mov
push
mov
jecxz
adc
mov
xor
ljmp
jnp
test
xchg
fidivl
mov
mov
inc
push
xchg
out
hlt
inc
adc
sbb
incb
jecxz
lea
jb
mov
xchg
xor
arpl
daa
xlat
jne
mov
dec
mov
inc
xlat
push
scas
cmc
mov
scas
popa
xchg
fisubs
ret
shl
lcall
dec
mov
xchg
jno
push
lret
mov
inc
cmp
mov
adc
mov
in
shr
cmp
xchg
mov
ret
rol
ds
imul
ret
cmp
xlat
stos
xor
out
addr16
jae
mov
fwait
push
fucom
sbb
sbb
add
fstp
or
and
mov
addr16
nop
lret
mov
out
push
sub
cwtl
filds
outsl
addr16
sti
test
mov
and
aas
xchg
mov
imul
sarb
std
mov
adc
stos
aad
push
or
push
cmp
out
jecxz
popa
dec
pop
xchg
adc
mov
mov
shll
fwait
in
in
sahf
dec
dec
in
clc
pop
adcb
jnp
sub
inc
pop
and
add
icebp
imul
push
es
enter
or
adc
dec
fsub
pop
xor
sti
sub
mov
mov
fisubrs
and
mov
inc
xor
inc
test
addr16
adc
sbb
daa
popa
and
dec
mov
inc
mov
add
xchg
cmpsb
cmp
andb
int3
imul
out
les
xchg
ds
divb
push
ljmp
int
cmpsl
mulb
cmpsl
mov
repz
mov
inc
and
cmp
cs
xorb
mov
fcomi
cld
sbb
dec
bound
arpl
shlb
cmp
in
inc
pop
stos
repz
and
push
cmp
cli
xchg
mov
cs
sub
push
push
repz
jb
push
orps
shrb
iret
fistpll
dec
insb
cld
mov
pop
mov
sub
and
dec
jg
push
addl
das
dec
push
dec
inc
and
cmc
or
xchg
and
push
or
loopne
mov
cwtl
dec
sub
add
jo
mov
xchg
paddb
int
pop
xchg
test
xchg
mov
xchg
lahf
or
mov
loope
push
cmp
adc
lret
or
push
mov
cmp
xor
sub
hlt
jne
dec
pusha
out
jo
inc
push
push
push
je
leave
inc
mov
pushf
pushf
dec
scas
mov
sbb
and
add
lock
addr16
loope
iret
push
inc
pop
pop
pusha
pop
test
test
add
loop
dec
scas
leave
fiaddl
inc
popf
mov
ja
iret
ds
sbb
insl
stos
mov
lods
push
xchg
fisttps
pushf
sarb
iret
inc
jle
jmp
call
pusha
push
mov
jle
pushf
cwtl
ljmp
mov
or
sbb
int3
cli
test
test
aad
flds
push
ds
or
imul
xor
mov
shlb
cmp
ja
adcb
xchg
cs
mov
addl
cmpsb
out
or
push
inc
in
test
lret
jmp
cld
pusha
dec
mov
mov
out
mov
inc
cmpsl
xor
enter
icebp
mov
or
push
cmp
mov
cmc
cld
outsb
pop
or
pop
and
ljmp
cmc
sub
fdivrs
arpl
pop
movsb
popa
mov
adc
bound
pop
lea
sbb
in
int3
iret
dec
outsb
iret
bound
push
sub
shlb
jns
test
mov
push
and
and
adc
push
cmpl
pop
dec
add
and
out
es
and
das
adc
jo
dec
adc
push
rcll
mov
pop
adcb
add
mov
xchg
jmp
sbbb
cmp
std
xor
xor
mov
xchg
and
or
andl
sti
fnsave
subl
repz
xchg
shrl
lods
sbb
outsl
mov
mov
gs
fldenv
mov
add
sub
mov
inc
push
pop
jno
ja
mov
les
sbb
jmp
fidivs
test
add
and
mov
add
popf
push
push
lock
push
jnp
sub
int3
pop
push
or
repz
test
jecxz
mov
pusha
cmp
negl
and
fistpll
repz
jbe
and
push
and
pop
fnstcw
mov
movsl
dec
rcll
mov
test
pop
fidivrs
dec
cmpsl
icebp
shlb
dec
lret
outsl
je
in
fwait
jo
incb
and
push
xor
inc
ss
bound
addl
leave
jle
lahf
xchg
call
push
das
ja
mov
fdivr
jmp
jb
pushw
lea
add
enter
enter
xchg
sbb
shrl
xchg
jae
add
xchg
push
jb
mov
ljmp
popl
bound
or
lret
negb
mov
dec
xchg
pop
out
bound
iret
mov
xor
movhps
sub
cld
and
pop
lret
cmp
mov
out
je
fcompl
xor
or
int
jge
adc
push
or
aas
test
clc
idivl
adc
xor
into
jne
sahf
inc
mov
ljmp
repnz
inc
xlat
pop
mov
in
mov
mov
cmp
push
pushf
scas
test
push
repz
leave
sbb
add
test
insb
mov
jnp
jno
std
and
gs
jmp
adc
sbb
loop
inc
or
aaa
lahf
loopne
mov
mov
jl
adc
push
insb
xlat
xchg
mov
jnp
cmp
push
rcll
jb
and
out
adc
pop
push
lea
push
push
mov
fnstcw
cmp
pop
xchg
cld
or
add
jmp
dec
leave
dec
mov
xchg
shlb
cltd
pop
pop
mov
add
dec
jns
push
push
pop
cmp
in
xor
pop
into
adc
aam
jns
in
ret
mov
jle
idivb
dec
scas
mulb
push
xlat
jp
out
in
subl
xor
xor
cmp
xchg
push
test
ficomps
inc
jmp
cmp
add
aam
push
lods
repnz
icebp
xor
mov
xlat
imul
pop
jo
pop
pop
adc
or
rorl
shll
outsb
rcr
jecxz
jbe
jae
scas
xchg
pop
adc
push
sbb
cmp
xor
pop
fwait
aam
mov
and
into
insb
cmp
inc
mov
loopne
mov
mov
xor
lds
das
add
cmpl
bound
or
int3
push
out
dec
pop
pop
or
punpcklwd
ret
inc
mov
cmp
sbb
add
mov
add
inc
mov
lods
fists
adc
push
mov
subl
and
dec
xchg
cwtl
fs
insb
add
les
subb
fst
fidivs
mov
les
and
jno
jns
inc
inc
int
dec
std
or
aam
pop
int
loop
sub
xchg
jmp
inc
rdtsc
test
cs
mov
mov
push
add
or
xchg
iret
aad
sub
in
inc
inc
xchg
jg
add
inc
xor
fs
xchg
popa
inc
cmpsb
jecxz
fildl
leave
ds
push
int
jo
sbb
ds
clc
icebp
sub
xchg
fcomip
dec
mov
divb
sbb
xchg
lcall
nopl
mov
and
xchg
fs
ds
daa
clc
das
pop
popa
push
in
xlat
lcall
cltd
mov
push
out
jl
das
pop
fnstsw
pop
idivl
adc
icebp
adc
adc
fwait
mov
rorl
insb
pop
dec
sbbb
xchg
repnz
jle
push
jecxz
gs
dec
push
sub
aam
xor
jge
loopne
ja
push
daa
je
dec
cltd
or
inc
adc
pop
sub
lea
lret
mov
stos
pop
imul
dec
test
jae
dec
ljmp
pop
rcl
xchg
mov
into
pop
ja
sbb
movsl
pushf
push
or
dec
and
call
cmc
mov
fimuls
aas
test
aas
andl
sbb
popf
test
and
repz
shll
mov
or
sub
ljmp
xchg
popf
xchg
sbb
jecxz
andl
push
sahf
cmp
xlat
pushf
or
jge
in
jo
out
mov
add
imul
jecxz
fiadds
inc
push
shl
xor
addr16
mov
xchg
testl
jb
ss
outsb
rolb
in
jo
sbb
gs
addr16
into
ljmp
pop
and
fstpt
sbb
or
mov
mov
aas
push
add
mov
inc
es
fsubrs
fdivrs
add
or
jns
add
into
mov
bound
inc
fldcw
sbb
lock
cli
in
stc
pushf
test
cld
loope
and
bound
out
int
add
xor
jae
cmp
clc
cmp
xchg
xchg
sti
mov
mov
sbb
pushf
push
das
aas
dec
bound
call
xor
sbb
xchg
push
test
stos
jae
dec
roll
sub
jecxz
and
mov
and
add
out
sub
orl
xor
adc
fsubl
jmp
cli
and
cwtl
lock
push
push
or
loope
shll
nop
dec
mov
and
hlt
xor
bt
mov
cmp
aam
repz
jge
push
mov
das
jb
cmp
pop
or
sahf
xor
imul
mov
sub
jbe
fsub
ficoml
push
insl
push
data16
mov
xor
and
iret
movsl
fisubrl
movsl
cmc
ja
lds
xor
mov
xor
and
imul
loop
shl
fldcw
es
and
cmp
mov
add
mov
push
jae
lcall
fsub
sub
sbb
inc
xorl
mov
mov
mov
movsb
fdivr
rcrl
shr
dec
sub
insl
mov
adc
cmp
jecxz
jmp
test
out
dec
mov
cmp
aam
outsl
inc
push
loope
add
push
jb
push
rcrb
push
cli
mov
dec
add
sbb
or
aaa
mov
fwait
sbb
adc
in
pop
jo
xor
ss
jo
aas
adc
sub
aad
fdivr
test
jne
xchg
test
sarb
aam
sahf
inc
es
leave
jmp
pxor
inc
push
push
and
pop
stos
mov
ds
or
leave
add
imul
jb
and
lods
int
fisubrl
stos
mov
cld
testl
repnz
das
fwait
movsl
daa
jge
icebp
mov
nop
add
leave
pop
push
mov
iret
movsl
outsb
jnp
push
in
inc
dec
stos
mov
call
mov
cmpsl
add
inc
loope
or
pop
or
loop
dec
movsb
fwait
lds
in
push
pop
cmp
addr16
sub
jnp
out
xchg
xor
mov
sti
cltd
dec
in
xchg
movsl
test
imul
cmpsb
mov
lret
loopne
roll
lahf
data16
inc
in
jb
fidivl
aam
imul
xchg
lods
jnp
out
mov
mov
sub
sub
lock
nop
in
xchg
push
mov
mov
push
fbld
xchg
dec
scas
xchg
dec
sbb
int
popf
dec
fidivrs
aad
xchg
adc
and
nop
or
xchg
xor
xchg
clc
daa
sbb
in
cli
jae
aam
stos
xchg
int
popa
mov
fwait
enter
jle
cs
add
mov
sub
aam
jmp
push
xor
icebp
ja
dec
sub
mov
mov
lods
into
sbb
addb
ljmp
sbb
pusha
jmp
cmp
dec
mov
lods
mov
mov
and
push
pop
cmpsb
out
in
cltd
daa
test
sbb
mov
mov
sbb
add
xor
jns
add
push
popa
cli
ja
dec
nop
outsb
loop
xor
jb
jnp
jg
test
adc
insl
std
clc
jns
sbb
jno
jo
pushf
mov
pop
mov
movsb
aad
adc
sub
out
mov
mov
inc
or
leave
enter
mov
sub
out
dec
bt
mov
dec
jle
sub
cmpsb
lods
orb
pop
mov
pop
push
mov
ret
adcb
shlb
loopne
mov
fdivs
hlt
stos
pusha
adc
inc
mov
or
push
sbb
xchg
pop
shll
or
xor
xchg
lret
into
cmp
cltd
movsb
xchg
mov
sub
stos
mov
mov
test
repnz
dec
dec
jge
cmp
fmull
mov
int3
ljmp
sbb
jo
xlat
pop
and
adc
jge
adc
sub
icebp
inc
inc
inc
dec
dec
push
jns
jl
sub
nop
addl
jno
leave
clc
jbe
adc
inc
jp
or
sub
mov
test
sbb
jl
inc
decb
stos
imul
push
push
and
cmp
jp
fsts
xchg
es
xchg
rcr
pusha
xchg
jle
add
call
sub
cmp
pop
aas
imul
jmp
inc
xor
lds
scas
adc
out
push
js
push
mov
pop
paddusb
pop
and
inc
icebp
pop
stos
insl
sub
out
int3
adc
scas
mulb
or
test
cmp
daa
enter
push
test
fsub
iret
rorb
or
mov
cmp
js
xor
jno
sub
mov
cmp
insl
pop
iret
jne
lcall
loopne
push
js
mov
xchg
sub
lea
loopne
or
jno
dec
clc
mov
inc
fs
adc
in
and
inc
jno,pt
ss
mov
xchg
subb
aaa
adc
xor
adc
andb
and
mov
push
xchg
add
popa
push
movsb
sbb
sbb
cmp
hlt
loopne
sbb
scas
in
int
popf
fcom
cs
push
dec
or
mov
inc
and
test
jae
es
andb
lds
pop
cwtl
jge
adc
adc
or
push
testb
cmp
pop
cmp
std
nop
leave
inc
or
pop
adc
cmp
dec
cmc
mov
outsl
mov
out
in
cld
ffreep
icebp
xor
add
dec
jo
int
jb
in
cld
xchg
mov
push
loopne
test
lret
or
jae
inc
loop
push
cmc
or
jne
mov
outsl
les
ret
xor
hlt
mov
rcrb
outsl
mov
sbb
dec
nop
stos
hlt
jo
xor
pop
movsl
movsl
jecxz
dec
arpl
pop
push
add
pop
pop
sub
hlt
mov
push
dec
jle
movsb
lcall
lcall
add
outsl
xchg
pop
loope
mov
sahf
es
mov
inc
dec
mov
mov
cmp
adc
mov
gs
aas
lret
sbb
lret
jnp
xchg
sbb
mov
adc
and
pop
cmpsb
mov
mov
das
dec
or
xchg
dec
jbe
repnz
pop
lea
cmpsb
push
adc
loop
imul
mov
mov
jmp
adc
inc
mov
stos
into
test
cmpb
lcall
sbb
or
and
fs
dec
out
pop
iret
mov
insl
mov
addr16
jnp
ljmp
loop
push
in
xor
addb
rcrl
and
andw
pop
sub
sub
xorb
sub
cli
push
cli
das
outsb
mov
lods
mov
mov
testl
leave
sbb
loop
push
cld
mov
mov
pop
cmp
daa
movsb
call
or
or
jo
pop
ljmp
cmpsl
mov
mov
mov
mulb
xlat
push
in
rorl
push
cmp
and
or
arpl
mov
dec
push
popa
mov
lret
mov
mov
cmp
enter
sub
pop
lods
arpl
aam
add
outsl
jle
aad
cmp
sbbl
or
sbb
not
pop
out
and
inc
jp
and
ds
dec
add
cmc
imul
add
mov
jmp
sbb
adc
sti
xchg
pop
ljmp
pusha
xor
stc
jns
lock
stos
js
dec
xor
pusha
pop
cmc
and
and
std
mov
adc
jo
mov
jmp
pop
ss
xor
jge
push
in
or
adc
push
gs
and
mov
pop
ret
ret
data16
xchg
js
cli
lds
jp
adc
ret
or
add
cs
and
add
dec
cmp
or
nop
push
or
pop
adc
int3
sbb
add
inc
aam
push
or
jbe
fiaddl
sbb
idivl
cmp
mov
cmp
iret
ret
ret
mov
inc
sub
inc
js
repnz
jl
mov
jae
decl
fwait
jp
arpl
push
pop
xchg
fimuls
xchg
adc
les
shrl
insb
xchg
push
cs
mov
xlat
jmp
add
cli
mov
xchg
sub
fildll
int
repz
adc
inc
arpl
cmp
jmp
in
stos
jle
je
fldl
rclb
add
out
imul
jno
enter
mov
adc
scas
mov
cmpsl
sub
mov
test
pushl
jmp
or
mov
jb
lret
adcl
mov
repz
rorb
push
pusha
dec
je
cmpl
xor
mov
lcall
sarb
pop
ret
dec
pop
add
jp
mov
push
pop
cld
jecxz
sbb
dec
xor
adc
add
jmp
loope
dec
int3
xor
stos
sub
cmpsl
mov
sub
sbbl
leave
fadds
mov
mov
cmp
cli
sbb
test
cmp
fwait
cmp
pushf
cmp
js
ds
loope
dec
cmp
mov
inc
inc
movsb
pop
sbb
push
mov
addr16
xchg
movsl
pop
es
lock
lret
dec
sti
hlt
jmp
mov
inc
and
into
add
pop
pop
or
data16
cmp
cmp
fcompl
addr16
fidivrl
dec
hlt
sub
popf
fsubrl
cmpsb
outsl
inc
or
jo
push
cmp
xor
clc
fldlg2
lret
cltd
xor
dec
out
mov
cli
ret
xchg
and
scas
xchg
mov
ja
in
mov
leave
jge
js
fwait
mov
cli
cmp
push
fdivs
adc
mov
negb
popa
movsb
rolb
out
imul
inc
mov
add
ret
sti
mov
mov
and
cmp
or
mov
into
mov
jae
lods
jo
add
cmpsb
sbb
add
sbb
and
scas
loope
imul
or
mov
insl
jbe
push
lahf
or
fisttpll
cmp
jp
mov
adc
mov
in
in
mov
aaa
xor
jnp
cmp
mov
sbb
popw
movsl
bnd
loope
sub
jae
push
mov
pop
jle
jg
les
lea
pop
inc
pop
cmp
in
aas
mov
out
fistps
movsb
cmp
loopne
and
mov
inc
into
xor
stos
ret
sar
out
push
clc
aas
add
lret
pop
and
es
xchg
pop
mov
adc
mov
scas
ljmp
ficoml
cli
push
cmc
aaa
lds
adc
lds
jb
fmull
add
xor
in
jae
sub
sbb
push
push
xor
imulb
shl
shr
and
mov
mov
jg
negb
mov
pop
sti
push
add
or
sar
sti
mov
jae
jge
jae
pop
mov
cmc
test
call
cmp
stos
pop
add
cmp
xor
jno
xor
add
add
jmp
or
mov
mov
call
stos
mov
popf
add
cmpb
pop
stos
adc
push
in
mov
add
pop
and
in
mov
and
add
repnz
dec
adc
sbb
ljmp
nop
adc
imul
lds
in
xchg
xchg
subl
and
adc
pop
popf
xor
push
in
add
dec
inc
sbb
movsl
pop
rol
lea
mov
lcall
xor
clc
shrl
xor
mov
push
xor
aas
aaa
cmp
jle
lret
stos
jmp
mov
cwtl
orl
xchg
in
out
scas
outsb
neg
imul
jnp
push
mov
xchg
pop
shrb
push
add
dec
cmc
cwtl
sbb
enter
pop
outsl
mov
add
and
out
or
pop
xlat
pop
xor
jg
ljmp
push
or
fistps
mov
in
mov
iret
in
fwait
ret
mov
aaa
xchg
call
insl
sub
pop
mov
lock
mov
je
mov
mov
adc
sbb
imul
into
push
subb
sbb
gs
xor
shl
push
inc
fs
out
stos
in
adc
and
inc
mov
jb
dec
std
fdivr
sbb
xchg
call
rcll
negl
mov
and
or
ds
cmpsl
jbe
add
icebp
or
in
pop
sbb
scas
push
sbb
outsl
std
iret
xchg
aam
add
bound
ret
test
push
pop
andb
cmp
and
push
dec
mov
inc
sub
mov
or
jnp
icebp
cmp
mov
jecxz
cmpsl
inc
xchg
or
xchg
pop
inc
dec
and
bound
sub
xchg
push
js
push
sbb
sub
scas
sub
cmc
test
push
push
or
les
and
inc
dec
aaa
jb
and
xor
pop
dec
movsb
xor
dec
rorl
scas
rcll
jmp
adc
cmp
xchg
mov
cmpsb
push
addb
adc
push
push
xchg
adc
std
mov
popa
test
cmp
xchg
or
je
cmpsb
fstpt
adc
aam
and
mov
fwait
sub
int
push
ret
pop
sub
dec
mov
mov
xor
add
dec
adc
sub
cwtl
jb
push
push
clc
or
lcall
or
add
lahf
mov
cwtl
mov
add
dec
andb
or
inc
movsb
enter
test
sub
inc
jbe
test
leave
mov
rorl
lds
mov
inc
push
js
test
lock
popf
mov
mov
cmc
push
out
pop
cmp
push
stc
sbb
push
sti
inc
inc
aam
inc
rolb
jl
or
pusha
mov
jnp
in
pop
dec
add
iret
stc
clc
repnz
repz
jb
dec
pop
rclb
fs
jmp
clc
mov
cmp
pop
xor
pop
loop
dec
push
mov
xchg
enter
popf
out
cwtl
movsl
jnp
xor
inc
sbb
lods
movsl
sub
or
mov
rorb
mov
cmp
mov
jl
adcl
mov
mov
sbb
inc
nop
mov
sbb
scas
incl
lcall
ret
xor
fadd
pop
repz
push
ret
mov
loop
jns
icebp
fcompl
frstor
xor
leave
add
incl
mov
xchg
adc
mov
lds
stos
add
imull
pop
xor
push
outsb
dec
daa
jp
gs
and
es
or
xchg
nop
js
hlt
int3
sbb
js
cwtl
push
add
mov
frstpm(287
inc
sbb
bound
mov
mov
out
mov
out
adc
inc
stc
das
pop
cmc
mov
andb
or
sub
gs
movsl
std
or
xchg
gs
jb
dec
sub
xor
ja
pop
repnz
and
xchg
or
adc
adc
jno
xor
cmp
mov
es
push
xchg
popa
xchg
mov
inc
and
mov
xchg
leave
lret
cld
cmp
pop
adc
ja
clc
pop
addb
cmpsb
scas
push
mov
jae
pusha
pop
popf
mov
cli
cld
xor
shl
gs
lea
push
push
fimuls
mov
shlb
mov
pop
pop
mov
cmp
mov
jne
mov
rcr
fistpl
cmpsl
gs
push
cmp
lret
dec
push
test
addr16
cmpsb
in
push
xchg
mov
call
adc
xor
hlt
loopne
test
jbe
xor
into
and
or
subl
xlat
ds
shrb
insb
mov
subl
ljmp
fwait
mov
ret
aas
adc
jb
cmp
ja
mov
fst
dec
dec
loop
stc
mov
arpl
adc
movq
push
jge
jnp
sbb
popa
jge
mov
inc
lods
shlb
mov
pop
lea
mov
or
dec
out
fsubrs
shr
mov
mov
pusha
aam
cwtl
jg
aaa
push
imul
jl
aas
imul
inc
and
outsl
or
rcrb
jb
add
pop
pop
push
in
mov
jmp
xor
subl
popf
lret
and
or
ss
pop
or
add
ljmp
insb
test
jno
mov
fnstenv
in
xchg
pop
lahf
cmp
cmc
or
dec
or
mov
jo
jo
ljmp
cmpl
inc
dec
or
fisttps
pop
add
jge
in
pop
ret
insl
dec
or
mov
rcrl
xor
mov
lea
cmp
shrl
movsb
xchg
jge
test
pop
movsl
mov
mov
cmpsb
dec
mov
xchg
or
mov
int
movsb
into
inc
out
add
lods
jg
sbb
lock
mov
or
test
inc
lcall
push
mov
and
mov
push
clc
pop
pop
dec
data16
lods
mov
adc
inc
adc
mov
dec
int3
dec
fnstcw
cmp
mov
fs
mov
xchg
rorb
push
insb
xlat
jo
push
and
imul
clc
enter
sbb
sbb
jp
jno
mov
shrl
xchg
mov
pop
das
mov
imul
lock
arpl
gs
push
sbb
xor
je
cs
outsb
adc
lods
adc
adc
sbb
dec
or
cmp
lret
ja
jge
shll
cli
mov
scas
cwtl
xchg
jl
bound
in
cmpsb
push
loopne
push
imul
shlb
jle
add
shll
stos
fcomps
push
push
cmpsb
pop
cld
adc
pop
shrb
ljmp
pop
jne
shrb
dec
out
icebp
jecxz
test
imul
push
mov
push
jae
mov
dec
mov
xor
mov
cli
lods
out
jmp
or
push
insl
inc
jmp
test
inc
xchg
aam
and
cmp
repnz
dec
and
mov
xor
flds
xor
hlt
adc
in
mov
cld
sub
and
push
ret
outsb
xchg
int3
sbb
mov
lret
mov
add
out
jmp
das
or
fidivrs
inc
add
int3
in
lret
rcrl
iret
mov
iret
dec
inc
push
push
inc
cmp
fsubl
xchg
mov
daa
pusha
sub
fs
fistl
sub
stos
cmp
rclb
pop
mov
jle
and
mov
inc
repz
les
adc
adc
lods
xor
sbb
lahf
mov
mov
jns
adc
std
ret
cmpsl
stos
in
inc
call
sbb
aam
lds
jne
xchg
push
mov
inc
das
cmp
stos
sub
fwait
stos
pop
in
fnstcw
es
out
or
js
push
push
testb
jne
cmc
call
or
mov
pop
fimull
or
or
int
aad
das
fdiv
enter
idivb
mov
outsl
bound
xchg
ret
outsb
and
sti
pop
lock
cmpsl
roll
loope
nop
and
rcl
out
xor
inc
and
pop
fistpl
shrb
sbb
idivl
sub
xchg
mov
jmp
xor
sarl
xchg
and
clc
out
jnp
mov
sti
lock
sub
stc
pushf
imul
adc
jnp
dec
dec
mov
add
popf
out
sbb
adc
add
mov
cmp
mov
mov
pop
ret
scas
and
mull
or
jno
cwtl
divl
jbe
xchg
cld
mov
inc
mov
xor
sarl
add
add
cmp
pop
push
xorb
dec
jmp
xor
sbb
xchg
scas
push
xchg
add
popa
mov
in
mull
mov
loopne
clc
test
add
icebp
pop
in
mov
sub
sahf
popa
aad
fdivs
jmp
leave
jmp
gs
sahf
lret
pop
nop
jae,pn
cld
push
pop
mov
stos
in
or
inc
sbb
pusha
mov
xchg
jo
or
cmpsl
repz
jle
or
jg
dec
push
cltd
fsubrs
lret
leave
push
jle
add
repnz
inc
xchg
push
inc
nop
mov
jne
repz
inc
push
dec
out
aam
or
xchg
push
aaa
adc
or
mov
shl
jp
add
mov
in
data16
cld
fcomps
popa
call
cmpsb
icebp
lret
sbb
stc
pop
rcrl
adc
mov
sbb
test
cmpsb
orl
roll
rclb
or
enter
push
or
add
std
xchg
xor
decb
inc
mov
mov
dec
xchg
or
aaa
jno
ss
fnstcw
mov
pop
xchg
vpcmpeqd
aas
push
mov
stos
mov
mov
xchg
loopne
jl
add
mov
loop
aaa
gs
dec
pushf
dec
sahf
addr16
cmpsb
xchg
push
fwait
sub
lret
outsl
ret
sub
push
jmpw
jne
loope
pop
pop
cwtl
outsb
lahf
cwtl
sub
out
and
and
sub
cld
out
jecxz
xchg
loope
dec
cs
loope
pop
mov
dec
iret
sahf
mov
daa
jmp
jnp
mov
sbb
sub
lret
or
shrb
adc
movsb
sar
test
mov
repz
aaa
inc
adc
add
inc
leave
leave
adc
faddl
outsl
les
in
mov
and
scas
cmp
sahf
cmp
push
lods
out
das
test
ret
out
xchg
mov
fists
stos
aaa
push
jge
in
or
jae
es
std
fdivp
push
xor
push
inc
imul
sbb
xchg
dec
mull
fstpl
dec
cmpsb
or
or
ljmp
outsl
or
lcall
cmpsl
adc
mov
push
mov
jl
cld
sti
icebp
adc
and
rcrb
sbb
aaa
and
aad
add
loope
js
cmp
cli
or
push
xor
cs
push
pop
fbstp
fdivrl
dec
xor
test
repz
imul
mov
sarl
push
pop
insl
aaa
aas
inc
enter
push
and
xor
out
sbb
cmp
loop
popa
insb
jns
lods
jmp
pusha
pop
push
dec
mov
scas
mov
js
and
adc
sub
cli
jno
pop
stos
inc
jle
stos
shll
push
out
mov
xchg
lahf
iret
into
mov
mov
sbb
sti
or
hlt
movsb
shufps
mov
les
insl
sbb
push
fiaddl
cli
je
xchg
lock
inc
xor
js
in
xor
loop
fildl
jge
jbe
mov
mov
out
jg
not
inc
aaa
repnz
or
mov
xchg
mov
and
cmc
mov
adc
xor
lret
int
in
mov
aas
mov
jmp
pop
ret
inc
jae
jge
pop
test
fwait
add
icebp
pushf
cmpl
mov
shlb
aaa
out
cltd
out
outsb
lahf
movsl
pop
mov
dec
cmp
dec
sbb
jns
rolb
jecxz
ljmp
sbb
push
outsl
outsl
rol
sbb
cmpsb
mov
mov
test
jp
je
jbe
xor
aaa
ss
into
lock
xchg
mov
xchg
call
mov
into
pop
in
lret
hlt
inc
je
in
stos
mov
mov
and
and
loop
dec
push
push
test
jne
mov
icebp
popf
and
js
sub
repnz
sbb
js
xor
or
cmpsl
es
xchg
inc
inc
out
outsb
push
sbb
rcrb
enter
jp
test
je
mov
inc
fimull
add
sahf
out
and
mov
insl
decl
movsb
dec
cmp
cltd
test
add
mov
insl
jp
movsb
add
dec
mov
pop
leave
mov
das
imulb
cli
or
mov
popf
inc
inc
repz
and
enter
je
dec
mov
ret
cs
xor
jno
dec
mov
sbb
fst
rcrb
je
xor
test
pop
push
add
push
mov
dec
lods
nop
insb
dec
inc
xchg
jp
lret
out
xchg
gs
jns
jno
into
inc
test
mov
jmp
popl
stos
icebp
ds
or
int
push
mov
mov
and
gs
je
inc
test
mov
push
cwtl
cmc
ljmp
or
add
mov
test
lods
inc
dec
pop
cmp
cmc
mov
add
push
clc
insl
mov
addr16
imul
call
jne
rorb
call
mov
sub
test
add
add
mov
bound
fsubs
mov
cmc
movsb
inc
mov
les
mov
insl
jo
cmp
hlt
dec
fiaddl
stc
cmpsb
adc
dec
loope
iret
pop
xlat
xchg
mov
xchg
test
fidivl
mov
pop
shr
cmc
gs
js
rcrb
outsb
xlat
test
pop
inc
or
sub
dec
jg
or
add
sub
js
fiaddl
jns
dec
scas
pop
xchg
mov
push
sbb
imul
or
sbb
push
pop
mov
jns
add
jge
insl
flds
in
mov
pop
or
sbbb
mov
lahf
adc
mov
addr16
outsl
lret
daa
in
xor
stos
pop
and
xchg
stos
push
scas
mov
imul
in
lret
push
mov
adc
int3
xchg
mov
dec
repz
xlat
dec
shl
in
loop
push
inc
jg
loop
es
mov
sub
add
daa
hlt
jecxz
mov
cwtl
mov
movsl
lds
sbb
pop
sub
scas
add
push
in
popa
inc
shlb
negb
cmp
lret
cs
cwtl
sbb
jns
dec
fs
movsl
adc
lock
xchg
aad
pop
js
int3
lret
add
in
xchg
push
mov
aaa
data16
hlt
addr16
cmp
loop
mov
cmpsb
in
pop
xor
or
xorl
push
adc
dec
mov
jg
sbb
mov
mov
call
pop
mov
adc
xor
in
leave
shrb
lret
into
cli
repnz
or
pop
dec
cmp
das
push
insl
or
movsw
repz
divl
je
dec
sbb
cmp
push
mov
std
jno
sub
loope
or
sbb
bound
pop
pop
stc
or
mov
adc
sti
jo
push
fwait
dec
push
cwtl
inc
mov
orl
xor
sbb
out
call
xchg
mov
mov
int3
in
adc
aaa
jmp
sub
push
in
out
inc
pop
add
sbb
fidivl
test
fiaddl
fsubr
dec
xor
shlb
paddd
dec
scas
xchg
xor
push
stc
negb
fisttpl
or
add
mov
push
jecxz
inc
fisubrs
jmp
dec
push
out
or
dec
xor
into
popa
add
push
jg
std
es
dec
in
shrl
xor
xchg
jge
sub
rcrl
cld
jbe
mov
mov
lret
daa
jae
sub
push
cltd
enter
daa
lods
cmp
repnz
jae
lahf
int3
and
sbb
fidivrl
jbe
sbb
in
dec
mov
lods
rclb
or
xchg
and
xor
xchg
add
mov
xchg
imul
jmp
xchg
push
lret
xchg
sbb
sbb
stos
cmp
cmp
mov
mov
cmpsl
add
xlat
dec
adc
ljmp
xor
mov
mov
xorl
xchg
fs
lret
inc
cmp
jo
lret
inc
and
add
int
dec
bound
out
jns
xchg
xchg
rol
push
adc
hlt
dec
lret
out
add
inc
xchg
fmul
mov
hlt
push
aam
ficoms
fwait
add
adcl
mov
arpl
push
adc
ret
mov
bound
mov
pop
pop
shll
stc
sarl
pop
sub
and
addr16
dec
mov
xchg
and
aas
daa
fwait
jb
sbb
mov
mov
sub
xchg
outsl
sti
adc
stc
sbb
mov
cmp
add
jb
pushf
cli
add
pushf
cmp
and
add
shl
jno
push
ljmp
lock
adc
stos
adc
shr
mov
cli
int3
xor
std
xor
lret
es
adc
xchg
inc
aad
and
add
movb
cmp
out
sbb
stos
ret
stc
sub
jle
rcrb
imul
ljmp
cmp
arpl
lret
cwtl
inc
outsb
sbb
or
sub
inc
inc
adc
mov
dec
mov
imul
cmpsb
inc
or
push
xor
cwtl
scas
sub
rclb
push
ljmp
xchg
lret
inc
xchg
xchg
mov
in
mov
jae
dec
test
mov
dec
mov
adc
jl
sub
cmp
mov
shrb
aad
ds
inc
iret
mov
cld
pop
jns
jl
inc
xor
imul
xor
xchg
cmp
push
cmp
add
stc
jp
push
cmpsl
rorl
or
loop
jbe
jbe
push
popf
or
je
daa
push
push
sbb
and
fcmovb
ficoml
mov
mov
orl
xchg
mov
mov
sahf
push
fisubrs
stos
in
add
push
sbb
dec
sub
les
xlat
cli
adc
out
pushf
int3
lcall
pop
mov
xchg
inc
lcall
jmp
xchg
mov
sub
jmp
clc
sub
xchg
mov
xlat
adc
and
loop
xchg
pop
sub
pusha
and
mov
into
test
sub
fisubrs
mov
pop
out
cltd
jne
scas
xchg
int3
and
push
sbbl
sub
ficompl
in
xchg
lea
and
sub
mov
ret
xor
push
sub
adcb
popf
mov
dec
push
add
lods
mov
mov
mov
push
push
xchg
add
sub
sub
jge
sbb
jb
out
scas
jp
lea
or
shll
sbb
mov
clc
lods
lock
sbb
add
sti
mov
adc
xor
and
aad
imul
enter
mov
inc
pop
cltd
dec
inc
inc
gs
jp
pop
jmp
sbb
push
jge
sbbl
cmc
sub
mov
ja,pn
jns
aaa
je
dec
ss
sub
and
std
addr16
and
xor
idivl
sub
subb
push
scas
xor
dec
cmpl
inc
repz
inc
test
mov
jae
push
sbb
adc
mov
xchg
icebp
hlt
loopne
adc
in
xchg
psraw
sbb
adc
jno
push
push
lahf
pop
cmpsl
dec
jge
imul
sahf
inc
pop
iret
out
fildll
gs
hlt
cmp
jns
cld
sbb
and
ret
sub
push
into
cli
in
ds
xchg
and
jae
repz
cltd
push
loop
sub
inc
and
xorl
out
test
shrl
shlb
pop
fidivl
mov
jp
jmp
repz
and
xchg
jno
inc
cmpsb
int3
jl
push
hlt
dec
sbb
cmp
lods
inc
fidivs
mov
aaa
mov
cmpl
cs
mov
add
test
pop
or
xlat
inc
jb
jecxz
cwtl
and
jno
les
sub
mov
dec
jb
bnd
jne
adc
lea
les
addr16
and
mov
xor
push
sahf
pop
enter
repz
fidivrl
cmp
pop
adc
into
jne
sti
pushf
roll
pop
adc
add
hlt
movsb
push
push
test
jl
mov
xor
mov
cld
add
in
mov
icebp
cmp
mov
ucomiss
push
insb
inc
clc
aaa
sub
add
and
ret
clc
outsl
fidivrs
jmp
sub
xchg
stos
mov
add
aad
movsb
xor
leave
in
pop
dec
cmp
push
fnstenv
pop
sbb
sbb
and
push
aaa
callw
das
mov
jmp
pop
bnd
sti
int3
stos
mov
pop
sbb
dec
cmp
xor
dec
outsl
xlat
sub
sub
out
add
jmp
js
mov
loop
xchg
repnz
mov
shll
xchg
xlat
int
repnz
mov
rolb
xor
dec
xchg
fstpl
inc
cmc
sbb
repz
lock
dec
repz
and
sti
out
js
mov
inc
or
push
sbbl
push
push
outsl
push
std
rcl
push
repnz
test
and
fcoms
and
adc
icebp
fistpl
add
jle
push
out
or
data16
inc
fldt
inc
xor
cs
push
int
xchg
jge
aas
push
insb
push
or
and
lds
out
dec
aas
addr16
cwtl
mov
sbb
daa
mov
jno
push
jecxz
mov
dec
hlt
movsb
fstpt
push
sbb
inc
ret
in
push
dec
sub
rcll
mov
adc
leave
mov
sub
outsl
scas
or
push
adc
out
cmp
sbb
mov
and
inc
je
pop
pop
pop
pop
out
mov
sub
or
scas
pop
jbe
pop
je
jne
lds
push
adc
inc
cmp
cs
ljmp
push
loopne
in
push
push
cmp
test
inc
sbb
jne
mov
aad
das
jae
adc
mov
xchg
sahf
ret
push
or
xorb
jge
mov
movsl
adc
mov
clc
sarb
xchg
mov
and
inc
fldt
lcall
inc
adcl
dec
jns
loopne
push
and
and
rorb
dec
mov
mov
lds
sub
push
xchg
sbb
push
sbb
mov
or
aaa
rcll
jecxz
xchg
pop
aaa
add
shl
xor
cld
cmp
dec
push
iret
jne
sub
mov
icebp
push
xor
cmp
les
jae
outsb
daa
adc
mov
or
les
nop
pop
mov
cli
cmpsl
lods
daa
xor
cmc
outsl
loope
pop
fstl
rorb
cmpb
jp
ss
mov
sti
dec
jmp
aaa
pop
jp
cli
mov
sbb
in
add
lods
mov
and
jl
cld
adc
xchg
cs
int3
sahf
ret
and
cmp
leave
sti
jl
inc
mov
loopne
stc
adc
xor
mov
rcrl
fs
and
or
dec
adc
adc
mov
leave
xor
lods
call
jle
push
xchg
xchg
push
sub
aad
mov
mov
inc
adc
popf
pop
push
test
pop
xchg
ret
aaa
and
pop
inc
or
mov
pop
push
sbb
into
adc
jge
arpl
loope
mov
lods
xchg
movsl
or
or
mov
je
das
rorb
pop
cmc
mov
push
fucom
aaa
inc
inc
mov
push
ss
roll
ljmp
icebp
cmp
imul
aam
bound
jg
cld
dec
repz
xor
loope
jno
xlat
mov
mov
dec
xor
cld
inc
cli
loopne
daa
xchg
nop
test
adc
sbb
sbb
cmp
dec
mov
inc
mov
mov
push
jmp
adc
mov
ss
movsl
jno
int3
scas
fstpt
in
xchg
mov
ja
xor
cld
dec
cmc
mov
stc
sbb
imul
jno
xor
insl
int
or
adc
xlat
jecxz
ja
adc
nop
aad
and
std
fsubrp
movsl
flds
xor
cmpsl
xchg
filds
jae
out
inc
push
mov
lcall
pop
adc
std
cmp
push
mov
pop
push
das
xor
rorb
adc
popa
inc
aad
inc
inc
pop
inc
sub
jns,pn
hlt
jle
ds
push
fistpll
pop
mov
fwait
and
jle
fldt
loope
jns
adc
dec
aaa
lcall
jecxz
mov
test
daa
ss
mov
stos
and
pop
and
pop
xchg
mov
push
into
jg
js
jp
xor
out
outsb
int
push
pop
out
xchg
xor
add
popf
frstor
mov
sbb
dec
faddp
add
push
jno
dec
mov
sbb
dec
das
and
jb
fildll
imul
loopne
jg
pop
cmp
lds
negl
add
mov
inc
push
lahf
sub
fildl
cltd
jl
inc
sub
lret
jle
ja
idiv
add
jg
sub
jb
fwait
sbb
xchg
std
mov
mov
mov
jns
clc
xor
cli
frstor
daa
mov
push
daa
push
jbe
sub
lahf
call
cltd
mov
xchg
clc
repz
jnp
push
insb
sbb
aaa
adc
ret
pop
inc
shrd
cmp
outsl
jnp
dec
xor
inc
sub
cmp
int3
mov
stc
xor
mov
test
filds
aas
dec
add
jmp
cmpsl
adc
dec
fs
jnp
dec
out
int
sub
push
cmpsb
nop
out
fdivrs
push
pop
mov
jno
int3
mov
inc
scas
jl
push
movsb
inc
xchg
jne
and
stos
hlt
mov
es
daa
fwait
dec
sub
mov
fldcw
jecxz
sbb
pop
icebp
lret
mov
sar
mov
repz
mov
push
test
sbb
mov
jo
mov
mov
jne
jmp
fmull
mov
fstpl
daa
jg
xor
ss
mov
mov
cmpsl
sbb
test
xor
les
sahf
movb
dec
sbb
dec
dec
sarl
cmp
sarl
lods
dec
ljmp
and
movsb
in
and
jae
push
ficomps
cmp
mov
dec
lret
adc
test
rcr
sub
mov
rorb
popa
stos
incl
in
or
cmp
xor
adc
mov
inc
sbb
out
push
cmpsb
cwtl
loop
aam
mov
stc
mov
mov
shlb
mov
mov
jge
in
lahf
mov
mov
aas
sahf
outsl
sub
jmp
test
imul
inc
xor
fmull
push
sbb
or
repz
inc
pop
jae
jle
jno
repz
sub
sub
dec
call
xchg
std
sub
jns
xchg
jp
jne
xchg
dec
mov
dec
jle
lcall
fldt
ret
enter
xor
lock
push
cmp
cmp
test
shll
rcrb
data16
add
sarb
sub
clc
bound
xlat
int
xor
xlat
or
das
nop
scas
inc
pop
jp
push
jbe
xorb
mov
lahf
jg
das
roll
xor
xlat
cmp
mov
int
andl
adc
inc
lahf
ljmp
sti
jge
inc
stc
es
xchg
or
and
ret
dec
orl
clc
out
dec
es
and
std
movsb
adc
addr16
xchg
xchg
nop
rorb
jnp
test
inc
add
lods
popa
fisubs
jns
mov
cmp
add
mov
stc
push
adc
add
cltd
adc
dec
or
mov
jecxz
js
lods
mov
push
cmp
mov
sbb
adc
into
les
sahf
pop
inc
and
sti
cmpsl
mov
push
push
jnp
push
shll
cmp
loope
inc
jge
adc
shlb
scas
call
dec
inc
xchg
stc
sbbl
mov
pop
pop
mov
add
dec
mov
and
fidivl
or
inc
push
gs
push
mov
mov
fisttpl
push
pop
fsubrs
push
loopne
cmp
xor
inc
ret
push
lret
je
push
push
xor
mov
out
fnstcw
jnp
xchg
mov
ljmp
call
stos
out
js
ficoms
outsl
ficomps
pop
xchg
movsl
dec
sti
or
or
idivb
dec
xchg
and
sarl
inc
shr
jge
mov
or
mov
fwait
inc
dec
sbb
and
stos
fwait
and
xchg
lds
pop
ljmp
mov
jb
sub
inc
nop
stos
dec
xchg
sbb
cmpsb
adc
jae
loope
inc
xor
cwtl
push
jecxz
and
sub
cli
into
sbb
scas
in
add
ss
inc
fistps
dec
out
mov
insb
pop
cmpsb
mov
jl
or
dec
jl
cwtl
jns
push
mov
aam
lret
adc
loope
fldl
cmp
mov
fstpl
cmp
sbb
mov
push
sarb
mov
push
jmp
sbb
stos
rcll
clc
mov
push
pop
ljmp
sbb
sub
inc
daa
xchg
inc
dec
addr16
lods
xor
jl
jnp
jb
lret
and
shl
adc
or
mov
mov
test
xchg
push
cmpsb
call
cli
mov
aam
ficoml
jae
sbb
adc
jmp
fcoms
dec
pop
repz
mov
fdivs
inc
sub
pop
adc
ja
mov
fstpt
jae
aas
cwtl
lea
add
push
and
pusha
add
cwtl
stos
mov
jge
jo
aaa
outsl
iret
jno
cli
stos
dec
data16
jo
bound
mov
jne
ljmp
or
push
xor
rorb
lods
shrb
jb
es
andb
sub
mov
scas
dec
stos
scas
test
xchg
ficomps
pushf
mov
push
cmp
mov
add
sbbl
rcrb
in
in
cmpsb
lret
ret
add
cmp
xor
inc
push
imul
xor
and
test
inc
stc
jae
or
cld
pop
xor
jecxz
dec
cmp
lods
popa
movsl
and
mov
cwtl
hlt
mov
andl
or
in
data16
mov
jg
outsb
mov
cld
and
sub
and
push
movd
mov
test
push
fnstsw
mov
repnz
add
cmp
dec
leave
jnp
xchg
xor
jp
scas
lods
stos
stc
shll
xor
adc
lret
dec
mov
dec
cmp
xor
mov
ret
int
fdivl
add
add
insl
orl
pop
bound
rorb
mov
push
in
push
cli
leave
pop
cmp
adc
push
or
sbb
dec
loopne
jmp
adc
mov
lea
movhps
inc
fsubl
inc
xchg
add
fdivr
adc
sub
ljmp
icebp
mov
cltd
lret
lds
sub
dec
mov
inc
add
push
push
nop
xchg
imul
jno
dec
mov
add
dec
xor
repnz
push
ret
pop
in
add
cmp
movsl
hlt
les
push
pop
and
arpl
cmpsl
or
fimull
jl
inc
popa
jp
hlt
pop
testb
xor
das
decb
jb
jo
push
loop
scas
fisttpl
test
pop
pop
xor
loope
mov
movsl
into
cmp
sti
mov
into
insb
jne
out
xor
idivl
repz
aam
sub
rclb
push
and
pop
mov
lret
pop
sub
stos
push
push
push
fwait
cmc
mov
call
push
or
sbb
outsl
dec
add
cmovb
xchg
xor
iret
hlt
adc
mov
xor
jg
mov
test
dec
pop
jecxz
test
lret
into
pop
fdiv
int3
inc
aam
cld
push
fcoml
dec
movsb
lods
xchg
or
call
sub
pusha
jge
cmp
scas
addr16
pop
shlb
adc
jge
pmaxub
sbb
and
sahf
or
insl
pop
aad
jb
cltd
pusha
stos
fisubrl
loop
sbb
xor
sub
mov
testb
divb
psllq
andb
movsb
das
push
test
loop
and
sub
stos
testb
sub
mov
data16
shl
lds
mov
mov
cmpl
bound
mov
add
pusha
scas
movsl
mov
roll
call
in
pop
dec
arpl
pop
shl
fiaddl
ljmp
imul
xor
addb
movsl
jmp
mov
or
mov
sub
xchg
sahf
out
or
mov
adc
xchg
jnp
lea
mov
insl
jecxz
mov
aaa
ret
push
je
mov
cld
add
in
xor
mov
daa
mov
into
inc
adc
pop
xor
sbb
mov
lea
sub
aas
jmp
pop
pop
pop
test
imul
das
dec
lcall
or
fsubp
insb
cld
pop
rorl
mov
push
mov
dec
data16
icebp
test
push
and
adc
sbb
pop
push
pop
lods
or
subb
sub
loop
or
or
aas
mov
sbb
sbb
mov
jle
mov
ud1
jne
fbld
fildll
mov
jmp
out
pop
dec
and
or
popa
adc
mov
mov
popf
in
ret
cwtl
or
inc
gs
les
das
cmovnp
loope
jae
fsub
fidivs
dec
sub
addr16
out
add
cmp
fdivp
cmp
psubusb
insl
test
mov
jnp
adc
cmpsb
frstor
andb
bound
mov
nop
jns
and
jns
addl
or
mov
roll
push
push
mov
and
lret
sub
loopne
mov
movsb
mov
loop
cmp
dec
pop
xor
xchg
je
dec
jne
jne
lods
das
icebp
popf
jae
push
pop
sub
inc
ss
aad
mov
jg
repz
ss
lret
jg
shll
sub
mov
or
sar
adc
js
mov
sub
push
mov
or
clc
lods
movsl
adc
aaa
inc
pusha
mov
sbb
ficoms
into
clc
insl
push
sub
mov
dec
popa
pop
icebp
mov
cmp
std
jmp
jl,pn
mov
mov
bound
ja
mov
add
je
mov
outsb
fcmovu
inc
xchg
jae
cmp
in
mov
lock
jbe
inc
stc
add
test
dec
and
sbb
jg
mov
mov
int
inc
pop
lods
mov
lahf
jbe
sahf
push
test
lock
sub
dec
pop
aad
stc
sbb
mov
and
xorb
lea
scas
sbb
pop
in
movsl
mov
mov
mov
lahf
adc
and
test
inc
cld
mov
sbb
sbb
mov
xchg
cmp
mov
xor
cmc
roll
push
fbld
add
icebp
scas
adc
mov
fnstsw
cmpb
mov
daa
loop
rcrb
jge
into
lock
imul
test
fmull
je
shrb
in
mov
inc
test
mov
aaa
rol
push
sbb
sub
mov
sbb
call
aas
push
fnsave
in
add
mov
lods
dec
push
mov
sub
ret
push
leave
inc
aaa
jbe
push
xor
and
sbb
add
cwtl
jb
js
xor
add
out
lods
add
fldl
cli
popa
and
addr16
add
adc
cmpsl
or
and
in
add
mov
add
lds
jne
loopne
push
and
jbe
shrl
and
movsl
into
movsb
and
ficomps
data16
push
repnz
cwtl
mov
and
daa
cmp
sbb
stc
pop
test
data16
loope
push
mov
jbe
lods
jno
loop,pt
cs
and
inc
and
xorl
pop
movl
es
pushf
mov
outsb
push
and
pop
push
jle
push
mov
xchg
ret
popw
lock
pop
mov
dec
sahf
call
testl
push
lahf
cmp
rep
sbb
or
in
xor
insl
cltd
and
cmpl
sbb
cmc
mov
xor
add
clc
cmp
out
jne
xor
mov
cmp
in
bound
push
in
sub
fcomp
xor
push
cmpsl
fidivrs
push
mov
sbb
push
iret
jno
add
cmp
jp
sbb
pop
bnd
scas
loopne
xor
dec
loop
dec
mov
cld
push
fsts
aaa
loop
sub
dec
mov
imul
jno
ljmp
ds
jnp
sbb
inc
adc
xchg
pop
aaa
fdiv
mov
mov
mov
or
and
jl
pushf
push
push
cmp
cld
sub
mov
sub
jmp
inc
push
cld
jle
jmp
sub
jns
push
dec
xor
mov
or
mov
mov
mov
cmpsb
dec
rcrl
inc
dec
popa
shrb
sbb
and
adc
test
lahf
lcall
loope
loope
or
repnz
xchg
adc
jmp
loopne
loopne
clc
mov
adc
cmpb
inc
mov
xor
xor
cmp
fwait
das
push
pop
movsb
jb
movd
imul
lea
xorb
dec
iret
dec
lock
aas
or
push
mov
dec
push
push
js
test
in
lahf
cmpb
leave
jno
aas
std
int3
in
mov
sub
sub
sbb
bound
out
sbb
adc
rorl
jmp
outsl
pop
jne
dec
xorl
insl
lea
mov
ss
push
mov
or
dec
cmpsl
stos
rorl
pusha
xchg
stos
mov
adc
addr16
outsb
pop
jmp
ss
gs
pop
lods
push
pop
pop
pop
or
xor
rcrw
mov
adc
mov
addr16
sbb
hlt
stos
into
mov
inc
call
or
pop
sbb
clc
jb
int3
scas
cs
xchg
and
mov
enter
pop
jo
sti
pop
loop
or
loope
xchg
ljmp
test
jo
insb
test
jge
xchg
cmp
dec
popa
mov
clc
add
dec
mov
and
movsb
jae
out
int
inc
out
xor
negb
test
dec
push
es
icebp
cltd
push
dec
push
pop
push
mov
cs
dec
pushf
gs
sub
xor
loop
mov
out
leave
movsl
pop
daa
dec
aas
movsb
pop
aaa
inc
fdivrl
sti
mov
in
dec
sub
xor
fisubs
cmp
imul
or
out
jecxz
mov
pusha
mov
sub
pop
jb
mov
clc
test
pop
xchg
lods
add
addb
icebp
stc
das
xchg
aam
xchg
cwtl
push
xor
popf
dec
mov
clc
jge
jno
add
mov
jae
pop
cmpl
cmp
std
mov
jecxz
inc
pop
jo
sub
pop
stos
out
iret
cmp
add
insb
and
or
divb
cmp
jp
rcll
out
lret
mov
clc
mov
shrl
stos
enter
repz
sbb
mov
cmp
sub
aad
jmp
sbb
xlat
leave
jae
inc
pop
sub
inc
adc
xor
push
inc
les
cmp
mov
icebp
orb
dec
cmp
nop
fcmove
movsb
outsb
outsb
pop
pop
adc
mov
lret
and
insl
in
mov
cmp
daa
insl
push
dec
mov
xchg
inc
lock
jne
push
pop
add
push
mov
std
mov
hlt
popa
cmp
das
fsubrs
bound
daa
ss
inc
jnp
sbb
sub
fs
lods
leave
iret
ljmp
push
pop
and
call
cmp
dec
pop
xor
mov
sub
jle
cmp
in
out
or
cmp
push
aam
xor
inc
cmpsb
imul
icebp
lcall
stos
pop
iret
shll
push
and
pop
test
cmp
adc
fistl
testl
jb
xchg
ds
mov
inc
jmp
mov
cmp
popa
stos
int3
push
popf
or
xchg
jno
subl
hlt
cmpsb
std
into
push
adc
mov
pop
mov
dec
lcall
movsl
pop
xchg
stc
sbb
ja
dec
addr16
outsb
sarl
sbb
mov
cltd
jl
sarb
push
es
cli
fnstsw
leave
cld
or
mov
sub
fadd
insb
and
lods
xor
movsl
xchg
pop
xlat
jg
mov
cmp
push
in
in
mov
cmpxchg
fwait
mov
std
mov
xor
bound
mov
aaa
add
pop
inc
lea
jbe
xchg
push
dec
dec
fbstp
mov
sub
mov
mov
popa
mov
cmpb
pusha
pop
sub
insb
sarb
push
shll
movsb
pop
inc
mov
imul
add
lret
scas
mov
add
loope
xchg
inc
ss
imul
dec
incb
add
into
inc
jecxz
ret
adc
call
push
test
dec
lods
cmp
stc
lock
repnz
nop
adc
out
mov
jnp
jmp
bound
pusha
inc
and
testb
in
mov
popa
aas
je
lds
xor
jp
jp
call
out
xchg
gs
sti
pop
mov
repz
call
mov
loop
hlt
in
xchg
pop
pop
fs
mov
sbb
in
dec
rol
push
and
pop
push
add
pop
add
xchg
sub
lret
lods
aad
mov
jge
std
btcl
adc
mov
inc
pop
das
mov
fs
sub
and
fldenv
xchg
lcall
outsb
or
clc
sbb
or
push
popf
xchg
ljmp
sbb
test
test
jo
adc
jo
test
data16
sub
xorb
movsb
pop
sbb
imul
dec
fstpt
add
xlat
mov
push
sbb
sub
stos
cmp
sarl
imul
stos
rcrb
sbb
insb
pop
loop
mov
cld
scas
cli
mov
arpl
cmp
dec
push
shrl
pop
xchg
push
pop
lods
jno
ss
lods
jg
fadd
js
xchg
std
dec
cmp
gs
and
inc
pop
pop
sbb
add
outsl
adcb
mov
inc
lds
loop
loop
in
mov
sbb
lods
xchg
push
icebp
movsb
sbb
adc
imull
sbb
mov
lods
loope
add
pop
and
addr16
imul
push
push
aam
lea
das
cmp
enter
inc
mov
mov
sub
fcomp
dec
js
xchg
mov
mov
inc
cmp
outsl
push
aam
cmc
aas
repz
xor
pop
js
push
cmp
fs
add
ret
iret
adcl
in
mov
addr16
cmpsl
xchg
aad
xchg
ret
adcl
pop
mov
sub
in
insb
cmc
ret
neg
mov
mov
and
lret
popf
lret
lea
pop
out
mov
aaa
add
cmc
lods
cmp
out
aas
jmp
loop
daa
in
cltd
call
cmp
pusha
sub
data16
andl
jg
inc
vphadduwd
inc
or
dec
mov
mov
lret
scas
nop
pop
jmp
mov
mov
mov
aam
or
bound
pop
cmovnp
addr16
sub
sub
jne
pop
cmp
mov
ja
test
push
ljmp
loope
outsl
jg
repz
jns
movsl
cld
mov
es
cmp
rclb
jecxz
popl
lods
pusha
sub
aaa
fisubrs
xchg
int
test
rcll
jno
pop
cmp
lahf
fsubs
hlt
fcomps
xchg
lahf
outsb
and
js
ret
ret
push
imul
lret
inc
pushf
inc
inc
mov
ja
outsl
into
xchg
or
call
mov
push
addr16
mov
lcall
das
xchg
xchg
pop
ret
inc
test
js
cltd
sti
fiadds
in
imul
lods
and
sub
or
jbe
jnp
xor
shlb
jbe,pt
push
insl
xchg
scas
insb
ror
js
mov
fmull
xor
stc
pop
movsl
movsb
mov
fs
stc
or
imul
test
jmp
push
inc
jg
movsb
jno
push
les
and
je
xor
lods
pop
or
sub
or
test
sahf
cmp
out
and
mov
dec
imulb
lret
sbb
shlb
clc
ljmp
add
mov
sbb
daa
or
mov
insl
into
loopne
inc
mov
lods
dec
sub
or
push
jmp
jp
inc
shll
sbb
inc
mov
xchg
cld
loopne
cmp
mov
popf
scas
jle
push
out
aas
sbb
mov
mov
cmpsb
loopne
dec
jae
out
mov
mov
lds
lock
adc
push
stc
mov
add
mov
cli
xor
mov
jp
xor
pop
jbe
fbstp
inc
arpl
dec
xor
es
xor
dec
lret
mov
pusha
adc
mov
into
jmp
add
inc
fistl
mov
jae
dec
inc
push
push
repz
xor
daa
in
inc
adc
sub
or
adc
sbb
pushf
inc
dec
and
dec
mov
sbb
push
loopne
test
xchg
cld
or
popf
add
adc
adc
dec
mov
inc
push
sbb
xor
mov
lret
addb
lock
inc
xchg
dec
fwait
in
pop
cmp
insl
insb
in
sub
jo
ret
rolb
lds
pop
pop
push
fs
push
lret
jg
aad
test
push
and
rcrb
movsb
shl
inc
mov
rorl
xchg
clc
adc
cltd
ljmp
push
in
movsb
lcall
and
cmpb
and
jp
imul
int3
jecxz
mov
mov
jmp
add
mov
mov
mov
rorb
sbb
mov
outsl
ret
mov
mov
sbb
dec
lods
jbe
mov
mov
cmpsb
inc
pop
testb
scas
jle
aas
sbb
sub
arpl
lea
call
popf
push
pop
repnz
or
push
adc
sbb
jecxz
inc
in
push
movsw
mov
pop
sub
fcmovne
sbb
sub
adc
or
mov
scas
sub
inc
sbb
fcmove
std
in
and
mov
in
cmp
test
fstps
and
ret
popf
test
xchg
stc
mov
enter
mov
fcmovbe
in
sbb
icebp
cs
test
daa
push
mov
pop
movsl
mov
aad
imul
hlt
inc
lret
push
jns
sahf
xchg
gs
mov
xlat
dec
jae
clc
popf
rorb
xor
sub
roll
insb
popf
pop
dec
sub
xchg
pop
loop
or
pop
cli
rcrl
fwait
daa
push
push
lods
cmc
cltd
mov
cmp
and
pop
imul
in
clc
jle
sbb
lds
nop
lea
adc
fs
test
icebp
xchg
dec
mov
xchg
cmp
fiadds
sbb
shlb
test
popa
jmp
cmp
adc
cltd
test
inc
xchg
movsl
pop
aaa
idivl
xchg
dec
adc
lahf
pop
jno
sar
out
mov
orl
jne
push
mov
popa
and
ror
mov
daa
mov
sbb
xchg
or
jl
push
push
push
cmp
sub
rorb
stos
dec
mov
mov
push
mov
inc
jmp
mov
sub
and
nop
notl
aad
jmp
jp
or
popf
sub
adc
int3
add
call
xchg
popa
jne
in
sarl
mov
mov
scas
mov
xor
mov
mov
inc
std
lds
insl
popf
enter
cmp
ds
mov
test
fstpl
and
pushf
mov
aas
mov
aas
movsb
fiaddl
mov
gs
jmp
stc
arpl
ja
repnz
sbb
xchg
icebp
sbb
cli
ds
aaa
add
outsl
adc
mov
adc
pause
xor
jne
sti
shll
das
testl
shl
adc
xor
add
xor
pushf
aas
mov
adcb
pop
sub
dec
lods
sahf
je
stc
push
loope
push
scas
js
mov
sbb
in
or
xor
push
imul
mov
clc
scas
out
mov
test
jmp
push
push
push
push
bound
dec
jle
daa
in
popa
filds
lahf
mov
out
rcr
js
pop
and
loop
pop
sub
icebp
adc
xchg
mov
test
sub
mov
cwtl
mov
push
dec
insb
daa
rcll
enter
inc
rol
jne
adc
hlt
clc
push
mov
lret
into
cmpsl
ljmp
fs
dec
popa
inc
test
sub
jo
andb
in
in
or
aam
loope
scas
xchg
xor
or
dec
outsl
cmpsb
jge
rcr
sbb
add
aaa
lahf
adc
or
cmpsb
das
mov
int
cmp
in
push
adc
dec
mov
push
mov
jl
cmp
jge
lahf
xchg
shl
mov
sub
mov
cs
adc
bound
mov
xor
lds
shll
cmc
movsb
pop
sti
mov
bound
sub
cmp
loop
sub
cmc
loopne
jecxz
fimuls
repnz
adc
nop
jnp
loop
push
aam
fimull
or
push
jne
ret
ror
mov
sahf
add
test
sub
repz
inc
and
fldt
pushf
cmp
or
xchg
jl
inc
adc
xchg
xchg
mov
adc
rclb
iret
nop
pop
xchg
test
push
insb
dec
das
or
ja
push
xlat
cwtl
repnz
mov
sub
lahf
mov
dec
push
jo
fcoml
mov
sub
push
loope
lock
enter
xchg
or
sahf
pop
fdivrl
sbb
and
dec
dec
fs
lods
adc
xchg
ficoml
mov
push
sub
in
das
sbb
shrw
mov
cmpsb
pushf
fisttps
fists
jne
inc
gs
adc
or
shll
in
and
outsl
xor
lock
xchg
xorb
fcomp
mov
sub
movsb
add
mov
sub
enter
out
xchg
inc
call
or
pusha
adc
loope
and
sbb
mov
lods
fwait
inc
sbb
fnsave
movsb
jp
clc
sub
js
push
scas
xor
test
add
mov
lea
lret
fcomp
stc
mov
mov
xchg
mov
fwait
aas
mov
inc
and
jmp
jns
adc
push
cmp
cltd
mov
int3
mov
lods
add
jae
loop
mov
pusha
adc
fdivl
or
inc
xchg
inc
pop
or
mov
cli
in
dec
pop
stc
daa
frstor
lret
ss
mov
arpl
push
adc
call
mov
xor
cmp
clc
cs
fnsetpm(287
xor
mov
pop
and
jmp
pop
ja
enter
pop
stc
ljmp
pop
xchg
mov
subl
push
repz
rorb
insb
cmp
push
fisubl
pop
and
aad
pop
add
and
add
jle
mov
dec
sti
sub
sbb
repnz
insl
dec
aad
test
and
adc
push
cmp
push
ficompl
jl
dec
inc
cmp
test
ret
jo
and
xor
scas
inc
loopne
jo
adc
std
rcl
and
ds
cmp
pop
fcomps
xchg
insb
dec
dec
fbstp
lahf
xchg
lods
insl
xchg
insl
xlat
ljmp
icebp
into
sarl
dec
mov
stc
lret
mov
mov
aam
fadd
mov
push
mov
mov
push
or
es
pusha
inc
and
pop
pusha
pop
push
or
fxch
pop
lds
ljmp
mov
outsb
leave
add
ss
or
mov
fisubl
fwait
push
mov
sbb
inc
loopne
and
xchg
mov
inc
in
sbb
mov
nop
ret
adc
cmpsb
mov
adc
xchg
mov
mov
sbb
pushf
pop
jb
clc
cmp
push
mov
fwait
push
cwtl
outsl
mov
sub
jle
add
cmpsb
scas
insb
out
sub
push
adc
push
dec
pop
aam
push
or
mov
xchg
xor
scas
insl
hlt
lcall
mov
cmp
inc
ljmp
fcmovnb
roll
aad
in
sub
mov
pop
imul
mov
mov
pop
stos
out
or
imulb
es
mov
insb
mov
cmpsl
inc
pop
sti
push
popa
xor
fisubl
and
sub
loop
subb
std
gs
mov
test
mov
fdiv
push
sbb
adc
dec
jmp
jns
push
in
push
jae
or
fldt
test
adc
cmpsl
inc
loop
xchg
sbb
sahf
lcall
scas
and
fwait
call
orl
inc
leavew
es
inc
adc
fdivrl
fnstsw
pop
inc
aam
dec
mov
push
fildl
mov
dec
iret
cmp
add
jmp
push
mov
inc
or
or
cli
adc
xor
dec
push
enter
aaa
inc
push
enter
dec
daa
cmp
nop
test
aaa
fdivp
ljmp
stos
lret
adc
mov
sti
lods
cltd
rcrb
cmp
lods
and
mov
js
arpl
inc
inc
fs
in
nop
mov
sbb
xchg
adc
jmp
dec
outsb
orb
stc
push
das
pop
fscale
aaa
pop
lds
or
das
or
scas
iret
pop
xor
and
movsl
cmp
push
push
cli
sbb
sub
fistps
lahf
or
jae
jmp
jb
testl
sbb
mov
repnz
pop
sar
movsb
mov
testl
fmuls
push
shrl
and
jno
into
scas
aam
mov
cmpsb
sub
lcall
popa
xor
cmp
lret
sub
scas
arpl
jg
incl
in
mov
mov
sarl
fcoms
push
xchg
jo
rorb
mov
or
lds
push
push
inc
scas
loope
jb
cmp
sahf
jo
xchg
inc
jg
jb
ror
xchg
rcrl
jnp
xchg
mov
jne
add
inc
push
adc
push
add
mov
lds
fsubrl
icebp
pop
ret
or
popf
movsl
into
daa
mov
leave
jb
cmc
push
sbb
jmp
push
ljmp
iret
adc
stc
addl
jle
bound
stos
ja
insb
inc
sub
jmp
or
push
les
pop
mov
out
lret
popa
xor
sbb
adcb
mov
add
or
or
add
cmpsl
adc
mov
and
mov
mov
fcoml
adc
clc
xor
cwtl
jmp
loopne
sti
mov
sbb
mov
push
negb
mov
lahf
dec
pop
sub
jno
mov
sbb
sbb
cmpsb
mov
inc
xlat
push
imulb
loopne
sub
jb
pop
call
shll
mov
mov
adc
cmc
dec
cmpsl
in
xchg
icebp
shrl
hlt
mov
jle
imul
stos
loopne,pn
push
das
daa
hlt
lret
mov
or
into
mov
jle
sub
sub
daa
out
aad
rorl
push
nop
and
jno
inc
mov
mov
mov
sti
loope
fidivrs
pop
and
xchg
insb
dec
inc
cmpsb
lahf
out
adc
xlat
dec
loop
jp
stos
adc
out
push
fs
pop
dec
xchg
mov
inc
or
scas
popf
jp
mov
push
mov
xchg
dec
fisubrl
add
out
adc
outsb
inc
push
ret
mov
mov
out
repnz
in
std
push
scas
xchg
js
pop
sar
lcall
ss
lret
xchg
pusha
idivb
or
xchg
jbe
test
cld
and
insb
ja
pop
dec
push
push
jl
xchg
inc
jbe
ss
push
mov
mov
pop
cli
dec
jb
pop
cmp
push
adc
xor
add
mov
loopne
and
push
adcl
gs
mov
pop
jns
scas
pusha
sub
push
xor
push
outsb
test
jmp
mov
ds
insb
leave
mov
std
aaa
add
sahf
xor
adc
fstpl
cmp
cld
lods
add
mull
adc
out
psllw
or
jnp
mov
ljmp
bound
add
or
test
pop
in
adc
in
sbb
adc
jp
inc
cmp
cmpl
xchg
scas
mov
add
repz
mov
sbb
mov
push
arpl
mov
or
adc
adc
bound
inc
adc
pop
pop
fs
xchg
jno
jnp
cmp
insb
mov
mov
cs
imul
jae
mov
mov
xor
sub
mov
mov
jge
cwtl
xchg
sbb
sbb
mov
jne
push
and
icebp
out
adc
cmpb
mov
xchg
sbb
sbb
inc
jns
mov
add
fsts
into
jnp
loop
adc
pop
ja
stos
xor
inc
clc
and
lea
mov
lods
pop
push
and
or
add
jge
xchg
xchg
stos
shll
push
mov
sub
cld
divb
mov
xor
subl
push
adc
aas
divb
adc
outsb
popf
add
dec
pop
addr16
std
cmpsl
and
into
ja
xchg
fcomip
scas
mov
loopne
fs
repz
lea
pop
push
mov
cmpsl
dec
push
cmpsl
cltd
inc
jg
pusha
cmp
xor
enter
sub
cltd
inc
shll
mov
in
mov
rorl
xchg
jb
sub
loope
mov
inc
push
or
notb
je
loop
sub
loop
nop
xchg
or
jb
adc
lcall
scas
mov
adc
sbb
test
sbb
andl
fidivrs
adc
jns
es
fnstcw
jmp
push
insl
scas
orb
lock
insl
mov
mov
ret
jmp
mov
dec
icebp
xor
arpl
pushf
cmp
mov
iret
dec
pop
xchg
dec
mov
mov
mov
push
cld
es
sbb
pop
mov
ss
filds
mov
push
jg
loop
add
adc
push
add
fwait
das
add
cmp
addr16
xlat
push
data16
lock
jno
cmp
fwait
xor
adc
pop
enter
rolb
or
or
out
push
inc
dec
adc
enter
xchg
add
push
mov
add
xlat
pop
ficoml
push
stos
inc
mov
adc
jae
inc
lods
xor
push
nop
cmp
dec
mov
ret
sbb
adcl
rol
ss
and
enter
and
inc
xor
xchg
lds
insb
dec
aad
mov
dec
lret
sbb
pop
iret
sbb
call
repnz
test
dec
cmp
int
cmc
jecxz
imulb
dec
mov
mov
shrb
out
push
fsubs
es
mov
sarb
das
mov
dec
add
ss
add
cli
test
flds
inc
movsb
icebp
cwtl
mulb
sarb
pop
or
in
sbb
push
int
xchg
repnz
icebp
cmp
jecxz
lahf
aaa
std
ret
insl
jae
cmp
bound
jbe
fidivl
adc
pushf
xchg
adcl
repz
jl
jno
inc
mov
sbb
jnp
or
mov
stos
xor
fwait
pop
fldcw
push
dec
mov
xlat
inc
jno
and
sbb
push
ficoms
in
mov
cmp
sbb
jl
ficoms
in
cld
pop
sarl
dec
push
sub
mov
mov
push
xchg
cltd
push
cli
mov
sub
test
mov
cs
or
add
arpl
into
addr16
aam
arpl
sarl
data16
dec
shr
mov
add
lea
jge
add
add
lahf
pop
push
js
lock
sbbl
push
shlb
iret
push
mov
in
out
test
es
or
adc
or
add
sub
cmp
out
adc
mov
cmpsl
sarb
fcos
in
sbb
das
push
push
scas
push
pop
pop
jnp
push
adc
add
mov
shrl
movsl
icebp
pop
insb
mov
xchg
jmp
aad
out
inc
movsl
iret
sub
repz
mov
dec
add
push
out
fisubl
jb
cmc
and
pusha
ljmp
adc
lds
cld
xchg
xchg
scas
xchg
push
repz
sub
mov
inc
jns
xlat
xchg
idivb
dec
in
stos
push
pop
pusha
bound
lahf
jnp
sarb
call
xor
insl
rclb
out
push
jns
repz
icebp
ret
xor
inc
jbe
jmp
stc
adc
aam
das
inc
fisttpl
sahf
adc
aas
test
pop
loopne
lods
jno
imul
call
aas
fwait
inc
inc
or
xchg
sbb
xchg
cmpsb
clc
sbb
xor
ljmp
loopne
push
or
xlat
push
ja
aam
lcall
stos
orl
cld
mov
clc
imul
aaa
punpckldq
stos
jmp
sbb
cmpb
mov
adc
gs
inc
inc
les
dec
inc
xchg
stos
addb
cmpsb
in
sub
test
mov
idivl
cmp
sbb
cmp
lods
repz
push
push
fstl
mov
fwait
sbb
inc
fisubrl
dec
leave
jnp
pop
mov
xor
lods
call
adc
test
sub
outsl
pop
mov
lea
loope
mov
out
scas
pop
mov
loop
push
testl
cvtps2pi
test
jbe
adc
jne
dec
mov
mov
adc
pop
int
pop
jle
push
shll
push
outsb
adc
addr16
lcall
xor
or
jge
jbe
je
gs
mov
pop
cli
xchg
push
push
int
test
jmp
test
xchg
push
sub
dec
aad
adc
scas
pop
repnz
dec
add
and
adc
fsubl
xor
sub
scas
into
inc
popa
cltd
or
pop
jae
imul
add
mov
inc
in
or
and
inc
stos
cmp
xchg
lea
cmp
lds
xchg
movsl
jbe
jmp
jle
sbb
fwait
pop
outsl
push
aad
xor
dec
cmpsb
sbb
leave
adc
es
inc
arpl
into
cmp
fnstcw
les
insl
out
mov
iret
in
pop
fsts
lcall
cmp
xor
xor
data16
imul
xchg
fs
jne
dec
push
mov
jecxz
bound
pop
add
pushl
pop
mov
data16
mov
les
push
popf
in
pop
dec
std
mov
cli
dec
mov
push
ret
jmp
dec
mov
mov
aas
fidivs
rorb
pop
xor
ror
cmc
mov
adc
gs
repnz
push
shl
rolb
mov
add
cmc
shrb
cmp
mov
sbb
cmp
adc
gs
pop
aas
inc
or
test
adc
sub
ret
mov
not
icebp
push
fnstenv
in
pop
push
lods
pusha
sti
jmp
mov
xchg
mov
fists
jl
jne
shll
es
sbb
jl
cmpsb
xchg
add
fdivrs
test
in
stos
or
xchg
push
inc
das
outsl
lock
jmp
es
loop
mov
popa
lcall
push
mov
stc
mov
adc
aaa
sti
ret
jg
scas
fcom
pusha
inc
fistpll
push
or
mov
mov
data16
js
add
cld
jns
sbb
jno
push
dec
mov
aam
and
push
je
fwait
mov
out
mov
stc
dec
inc
jl
jle
xor
cmp
icebp
sbb
dec
leave
cmp
inc
iret
cmp
sbb
fdivrs
out
pop
and
ss
stos
xor
icebp
mov
and
sbb
add
and
aas
and
cmp
jg
adc
aad
es
mov
lock
cmp
pop
in
mov
cmc
jbe
mov
push
sbb
push
sub
sarl
mov
push
add
inc
int
test
push
pop
gs
dec
inc
stc
imul
sbb
adcb
inc
jbe
movntps
imul
fsts
dec
or
icebp
mov
mov
push
int3
mov
outsb
pop
movsl
inc
pop
and
inc
jmp
test
xor
popa
jbe
arpl
hlt
jecxz
cmp
aas
loope
push
int
lods
stos
lret
sbb
add
in
inc
push
pop
mov
or
push
les
out
xor
shrl
cmp
in
or
fsubrl
test
scas
nop
mov
push
jecxz
mov
arpl
xchg
push
sti
sbb
divl
into
jecxz
fucomp
loope
test
scas
ljmp
xchg
out
mov
jg
xchg
or
xchg
cmpsl
add
pop
lods
ss
jp
push
int
lock
sub
out
movsb
mov
in
cwtl
lret
push
pop
pop
add
movsl
mov
leave
sub
pop
xor
addb
mov
mov
cld
aam
les
jnp
xor
mov
outsb
fcoml
xor
xorl
pop
mov
pop
mov
xchg
cs
and
pop
js
movsl
stc
sbb
sub
xchg
mov
rcrb
fwait
xchg
mov
jle
aas
outsl
cmp
test
jae
lret
pop
dec
cmp
xchg
cwtl
stos
cmp
inc
or
scas
pusha
add
movsl
or
arpl
xor
sbb
adc
xor
aam
daa
mov
push
stc
sarb
mov
in
xor
scas
stos
popf
pop
or
movsl
inc
dec
data16
stos
cmpsl
push
push
jnp
in
jg
mov
in
xchg
xchg
add
orb
pop
das
andb
fbld
out
mov
sub
lea
into
fwait
inc
jae
stos
aas
push
mov
sub
and
aam
mov
sub
inc
or
pop
mov
in
sbb
sbb
lods
inc
in
xor
and
cs
dec
movsl
daa
cs
jmp
repnz
nop
mov
jl
mov
inc
push
or
cmp
dec
sbb
loop
and
inc
dec
mov
inc
xchg
sbb
sub
outsl
xlat
insb
out
jbe
into
into
jne
loopne
lret
je
jecxz
pusha
test
or
std
adcl
dec
add
sbb
add
jp
arpl
mov
imul
enter
shll
xor
add
movsb
cmpsl
mov
xorb
addr16
inc
jp
pop
xor
and
add
mov
xchg
mov
aam
mov
dec
clc
jle
mov
lea
xchg
cli
inc
enter
pop
aas
sub
mov
cld
push
pushf
fs
addr16
dec
sub
int3
ret
xchg
cltd
jge
xor
push
jb
imul
inc
aam
mov
nop
ds
scas
jg
scas
fucom
and
pop
sarb
cmp
lock
pop
mov
sbb
cmpl
pop
out
in
dec
sbb
adc
icebp
addr16
mov
sub
int
jecxz
xchg
cmp
dec
ret
out
mov
push
dec
test
xchg
xor
shll
shrb
inc
pop
push
mov
pop
inc
ror
mov
jnp,pn
insl
mov
movsb
inc
mov
jl
test
daa
shld
jno
jbe
sub
sbb
lahf
jmp
imul
enter
add
dec
fimull
pop
pop
add
or
outsb
mov
pop
repnz
add
cmpsl
std
int
ret
repz
xchg
jbe
sbb
mov
movsb
xor
rorl
lahf
xchg
adc
lret
jae
es
pop
stos
push
push
and
gs
fimull
in
or
in
mov
loop
mov
fcomps
push
xor
and
decb
ss
mov
xor
push
stos
jb
pop
pop
mov
std
xchg
lock
mov
jbe
mov
lods
dec
std
pop
sbb
cmp
cmp
cvtps2pi
loope
stos
pop
shlb
aam
test
popf
xchg
pop
push
arpl
mov
mov
cmpsb
xchg
cs
loopne
into
sub
sahf
adc
xchg
xchg
xchg
jmp
nop
mov
or
aas
mov
mov
std
pop
inc
mov
cmpsb
cmp
mov
in
orb
movsb
fdivrp
adc
pop
addr16
stc
inc
jmp
mov
leave
cmp
ret
rorl
push
and
iret
incl
es
lcall
jne
xchg
push
dec
movsb
mov
or
in
sbb
fwait
mov
and
sbb
gs
lret
adc
inc
das
pop
loopne
mov
icebp
shrb
lds
fcompl
push
mov
mov
mull
lea
sarl
movq
pop
inc
loop
loopne
insl
pop
jl
data16
pop
rorl
push
xor
dec
lret
dec
and
aaa
outsl
mov
push
inc
jns
shlb
xlat
push
inc
fs
iret
jae
dec
lahf
cmp
rorl
bound
inc
pop
jb
xchg
sarb
lock
push
int3
inc
cli
inc
jp
xlat
cmc
lds
or
ds
cmp
vaddps
mov
xor
cmc
or
cltd
jle
jb
inc
out
imul
leave
out
ficomps
jb
sub
or
std
or
and
adc
ljmp
cltd
xor
lea
call
pop
std
xor
and
jp
repnz
ds
out
or
in
jnp
jmp
xor
stos
ffree
jae
rcrl
gs
sub
idiv
cwtl
pop
mov
popf
push
lret
inc
mov
outsb
shrl
sub
lds
cmp
and
sub
mov
idivb
dec
aad
popf
adc
ret
jle
cmp
repz
scas
les
mov
jno
xchg
inc
iret
cld
push
negl
jmp
xchg
leave
adc
ret
or
mov
jle
mov
mov
add
cmp
cmp
add
addr16
push
cltd
pop
das
andl
test
cltd
icebp
mov
push
mov
test
std
out
int3
dec
daa
aas
cmp
push
test
jae
and
add
aam
xlat
add
repnz
sub
mov
mov
push
insl
mov
cmp
jo
dec
push
in
dec
mov
xchg
jb,pt
mov
cmp
xchg
clc
fiadds
push
sahf
mov
imul
mov
xchg
rolb
mov
lret
and
ljmp
stos
fisubrl
popa
lret
js
and
push
pushf
dec
jns
mov
imul
push
jecxz
loopne
leave
lcall
dec
rcll
sub
mov
xlat
and
out
notrack
push
dec
dec
xchg
mov
dec
inc
mov
pop
in
fistps
mov
mov
dec
ficoms
and
repnz
popa
jnp
es
out
test
test
testb
mov
or
mov
mov
cltd
stos
xor
lods
sar
dec
repz
mov
dec
cld
addr16
xchg
sahf
stc
adc
out
aas
jbe
add
cld
dec
out
jmp
adc
mov
std
jo
loop
testb
push
mov
mov
ret
mov
loope
mov
test
mov
rcrl
add
mov
fwait
out
sub
addl
jmp
fs
nop
or
enter
pop
push
clc
ficoml
jnp
inc
in
xchg
dec
enter
lock
fsubrl
and
and
stc
aas
leave
in
loop
sub
xlat
cwtl
mov
ret
adc
ret
inc
mov
outsb
dec
mov
fs
arpl
fcmovnb
adc
andl
xor
inc
mov
pushf
jns
dec
mov
mov
mov
jno
jecxz
xchg
push
icebp
test
fdivl
fadds
cmpsl
addr16
push
lea
mov
scas
or
aam
pop
inc
enter
jmp
test
loopne
mov
nop
pop
mov
push
inc
adc
pop
cmp
loopne
mov
loopne
dec
mov
xchg
pop
repz
ret
jp
jmp
xchg
and
and
loop
aam
jmp
aaa
lds
out
jmp
mov
inc
fucomp
pop
mov
fidivs
call
push
xchg
je
pop
imulb
add
inc
data16
lcall
das
inc
sarl
loope
in
and
adc
push
cli
jno
mov
mov
call
fcmovu
fwait
pop
enter
cmpsb
mov
mov
fbstp
mov
aas
jb
mov
imul
xor
std
je
lret
mov
sbb
dec
and
fxtract
mov
pop
mov
test
inc
aas
in
gs
imul
lods
push
mov
jno
pop
filds
adc
mov
and
fisubrs
or
out
and
cmp
inc
lea
xor
das
dec
mov
data16
shlb
adcb
cmpsb
stos
mov
add
in
clc
or
mov
push
call
scas
adc
nop
lret
bound
repz
lcall
outsb
mov
jecxz
jmp
add
xor
sbb
inc
jnp
inc
movsb
fmull
leave
or
fidivrl
in
dec
leave
cmp
mov
lcall
push
icebp
insb
mov
jmp
xchg
jmp
lock
mov
inc
lret
cs
rsm
ret
mov
xchg
lods
leave
xchg
pop
mov
cmp
int3
repz
dec
test
inc
in
ja
insb
adc
inc
hlt
sbb
xor
pusha
or
ficompl
jae
pop
test
in
xchg
pop
xchg
inc
xor
or
xlat
scas
test
sub
adc
cld
aad
mov
aas
ljmp
mov
hlt
cmpsb
aaa
outsb
ficomps
imul
or
enter
inc
aad
xor
lret
mov
xchg
mov
out
lret
out
mov
insl
sbb
push
movsb
imul
jo
adc
aad
push
or
sbb
icebp
jno
xchg
or
je
add
into
mov
jle
repnz
jle
in
cli
or
fwait
roll
stos
pusha
adc
jb
loope
movsb
mov
nop
cwtl
aad
pop
inc
and
add
xor
sbb
mov
rol
into
ret
xor
sub
or
xchg
sub
daa
push
lret
in
scas
rcrb
jp
xchg
arpl
insl
fstps
pop
dec
sub
and
cmp
add
lret
xchg
mov
sbb
mov
call
cmp
xor
adc
push
sub
ja
xchg
pop
mov
adc
jl
and
inc
mov
xlat
dec
sbb
sub
sbb
pop
mov
xchg
es
push
lcall
iret
repz
xor
or
loopne
mov
jnp
and
in
shlb
rcr
cwtl
and
jmp
jns
mov
sub
push
and
ds
jo
add
test
and
jmp
leave
daa
jno
inc
cmpsw
arpl
inc
inc
sub
out
shr
rcrb
imul
cwtl
lock
enter
cmp
jae
push
fistpll
ret
orl
imul
jbe
push
mov
dec
xchg
orb
in
in
addb
dec
jno
mov
in
xchg
mov
iret
loopne
mov
inc
sub
insb
push
xlat
decb
dec
je
iret
mov
cmp
stos
js
dec
adc
mov
dec
push
inc
jno
ja
mov
movsb
xchg
fdivrl
popf
jp
roll
insb
push
pusha
fmul
into
cmp
push
movsb
stos
lock
ds
push
mov
movb
call
cltd
mov
xor
test
cwtl
mov
je
daa
lcall
xchg
lock
xor
or
nop
mov
mov
push
jle
pop
addl
mov
xchg
xor
movsb
sbb
mov
dec
xchg
or
sub
rcrl
fmul
jbe
jo
bound
mov
lret
jmp
push
ljmp
fisubrs
or
loop
xor
scas
out
icebp
push
out
xchg
sbb
andb
mov
shrb
out
movsl
push
or
pop
in
cmp
lret
lret
and
push
cwtl
cltd
mov
or
jge
dec
sub
dec
lahf
les
bound
stos
push
mov
xor
mov
sub
je
rcl
xchg
pop
and
cmp
jns
sbb
push
out
push
mov
ja
test
shlb
push
and
jmp
popf
pushf
mov
jl
fsincos
scas
pusha
sarl
cmc
push
aam
ljmp
fists
xor
ds
into
jmp
cmp
mov
xchg
xor
sbbl
or
inc
sub
push
lds
ljmp
les
pop
or
or
fcmovnu
push
pop
movsl
out
loop
fsubl
lock
repnz
fwait
mul
nop
dec
cmp
aas
lahf
mov
xor
scas
dec
cmp
sbb
not
jecxz
inc
scas
push
jae
jns
or
push
popf
adc
int3
push
dec
jae
bound
add
push
mov
int
mov
and
mov
insl
and
shll
sti
cli
call
flds
jg
mov
jmp
xchg
and
aas
or
or
imul
jge
fcomps
popa
stos
stc
rol
pop
int
jns
mov
rorl
dec
jne
ss
mov
or
cmp
xchg
jp
int
xchg
aad
cmp
mov
push
rclb
cmp
mov
imul
rcrl
int3
jle
in
call
movl
rorb
es
lcall
pop
jno
rcrl
sub
mov
add
mov
and
ja
daa
jecxz
aad
cs
pusha
sub
xchg
or
pop
xchg
dec
data16
mov
pop
adc
pop
pop
pop
push
xor
and
mov
es
scas
jl
mov
add
or
push
lret
dec
out
pop
inc
push
hlt
shll
cmc
testb
das
inc
call
out
out
outsl
movsl
adc
xchg
lds
cmp
sub
mov
out
lcall
adc
mov
jmp
jns
std
mov
inc
cld
enter
and
fidivrl
int3
inc
push
imul
addr16
loope
popa
xchg
jmp
shl
mov
jge
repz
dec
out
mov
push
mov
mov
fdivr
dec
popf
test
mov
sbb
dec
pop
cmp
adc
out
cwtl
xchg
sub
push
cmp
std
mov
or
shl
push
push
imul
lods
or
insl
cwtl
mov
sbb
lret
hlt
adc
out
test
and
fldenv
jbe
loope
push
lret
into
mov
sbb
jns
shl
jl
mov
aad
cltd
xlat
call
sbb
adc
jp
mov
dec
mov
adc
repnz
push
mov
dec
std
mov
jbe
sub
pop
lods
jge
mov
rorl
idivl
sub
mov
inc
cmc
inc
addr16
test
cwtl
sub
sub
jmp
jno
rcrl
stc
and
sbb
shlb
sub
jno
xchg
or
or
dec
aas
fimull
das
mov
in
lahf
and
pop
mov
and
fldcw
pusha
in
cmp
lcall
mov
jb
push
cmpsl
pusha
pop
mov
pop
imul
mov
icebp
mov
sbb
adc
jecxz
xchg
test
divb
pop
rcr
arpl
bound
pop
mov
pop
clc
popa
mov
cmp
jge
cltd
ja
mov
jl
sub
cmpl
mov
pop
fisttpl
out
lcall
daa
jl
daa
and
fadd
pop
dec
test
pop
dec
aas
flds
popf
mov
inc
inc
jecxz
dec
or
cwtl
in
lods
jne
ss
inc
adc
movsb
sti
and
in
cmp
dec
inc
shl
add
sub
mov
lret
jb
inc
test
push
call
mov
shll
movsl
sbb
fidivrs
fucomip
cmp
fsubrl
or
mov
mov
popa
push
es
cmp
jo
xchg
rcrb
sti
pusha
andl
lock
mov
push
push
jbe
stos
call
lods
dec
jnp
ret
sahf
and
mov
mov
xchg
mov
xchg
shlb
icebp
inc
fs
mov
jg
sbb
mov
and
pusha
call
out
xlat
or
lret
mov
mov
add
jl
fdivr
test
and
push
inc
jae
daa
mov
arpl
add
idivl
mov
cmpsl
clc
sub
or
inc
mov
jmp
dec
subl
mov
test
je
aas
rolb
jne
adc
jle
push
scas
enter
mov
push
test
jne
xchg
mov
test
bound
jp
mov
xchg
lahf
adc
out
fisttps
loop
mov
sub
jb
shll
inc
mov
and
push
mov
testb
inc
mov
xchg
cs
stos
inc
inc
jb
ljmp
xchg
or
insl
xchg
nop
movsl
xor
cmp
adc
ret
cld
and
and
add
cld
inc
or
adc
cmp
aam
cwtl
divb
int3
jecxz,pn
pushf
xor
lahf
orl
imul
nop
xor
test
adc
inc
fnsave
xchg
or
sub
jle
jne
mov
mulb
fisubs
lahf
mov
jo
xchg
push
call
outsb
push
hlt
or
lcall
or
xor
aas
jae
data16
cmp
dec
jne
fstl
dec
mov
stos
adc
daa
dec
jl
inc
lods
icebp
movsb
testl
fidivs
dec
test
mov
out
in
lds
push
lea
or
dec
in
clc
and
xchg
cld
out
xchg
inc
fldt
ficompl
adc
outsl
cmc
dec
addr16
dec
mov
xchg
ret
xlat
sub
scas
incl
addr16
or
jp
out
fistps
pushl
mov
add
xchg
in
hlt
mov
xor
jp
clc
mov
enter
jmp
jmp
xorb
mov
push
add
adc
inc
xor
das
push
mov
ret
mov
sub
stos
add
in
into
lahf
lea
xor
and
mov
lock
movsl
mov
fisubrl
divl
dec
pop
subb
es
pop
and
js
jmp
imul
insb
loopne
es
sti
addb
pop
dec
les
jbe
sbb
enter
call
push
mov
ja
popa
inc
mov
aam
push
xchg
fwait
stc
cmp
inc
outsb
mov
repnz
or
pop
push
repnz
jb
ret
fnstcw
insl
lcall
xchg
fsubp
leave
cli
push
fucomp
repz
mov
test
jmp
add
pop
pop
ds
xlat
sub
or
or
lahf
sbb
imul
and
sbb
iret
mov
sub
movsb
mov
dec
cmovle
shl
fisubrs
push
cmp
sub
cld
test
cmp
fbstp
add
hlt
insl
jl
push
popf
sub
pop
hlt
push
xchg
mov
leave
mov
ss
icebp
cmp
inc
daa
mov
add
in
lcall
fsts
adc
pop
fdiv
dec
mov
jbe
sahf
sbb
dec
inc
scas
mov
lods
cld
cmp
cmp
xor
lcall
imul
inc
mov
jbe
lods
into
dec
rcl
decb
jmp
in
or
and
sub
push
es
sub
jnp
in
pop
jo
mov
in
int
mov
cmc
sbb
mov
dec
into
cmp
pop
imul
pusha
cmp
lods
popf
dec
lret
push
inc
out
lock
inc
or
or
push
lock
out
cwtl
xor
dec
sub
aam
cltd
lds
sub
lahf
push
testl
clc
jl
xor
or
loop
bound
fs
lret
pop
inc
fists
cmp
jno
and
lods
mov
out
loop
or
shl
sbb
cmpsl
xchg
aad
jne
lods
push
jecxz
rorb
jne
fadds
sbbb
inc
inc
popf
daa
jp
xor
subl
fwait
cmpsb
add
pushf
xchg
pushf
cmpsb
mov
out
mov
js
pushf
lods
or
jb
jbe
daa
pop
dec
imul
add
lret
mov
lfs
sbb
imul
ret
test
mov
inc
aaa
xchg
out
popf
fs
jecxz
sub
fistl
push
stos
mov
and
fiaddl
test
push
pop
adc
push
mov
mov
or
add
xchg
mov
and
daa
es
lret
jo
test
std
shrb
gs
shll
push
mov
push
adc
cmpsl
fwait
xchg
mov
inc
jnp
push
sub
sub
insl
mov
mov
jae
das
pushf
mov
movsb
lock
mov
mov
stc
mov
pop
dec
mov
xlat
into
mov
lcall
jb
fwait
movsl
std
cltd
loopne
pop
call
push
ss
in
faddl
cltd
mov
push
push
inc
pop
mov
dec
sti
imul
pop
mov
popa
sti
in
xchg
lret
fimuls
xchg
jg
cwtl
in
inc
xor
sti
lahf
jns
or
or
idiv
int
mov
arpl
out
jmp
push
out
jne
or
fwait
rolb
adc
sub
sahf
xchg
ljmp
les
les
jnp
mov
lret
mov
push
cltd
sbb
out
ret
cltd
mov
aam
xlat
ds
lahf
push
jno
mov
cld
ja
hlt
push
mov
movsl
sub
xchg
fs
jb
xchg
cld
movsl
push
iret
jne
xchg
sub
mov
out
or
xor
lock
cld
pop
test
ret
mov
lahf
xlat
jp
enter
ljmp
add
and
nop
lret
sub
sub
lcall
cmp
sbb
push
pop
add
ret
xchg
roll
pop
inc
sbb
iret
mov
sub
xchg
push
mov
sbbb
popa
push
or
mov
aas
aad
mov
out
mov
push
xor
scas
jne
cmpsl
pop
icebp
push
rcrl
in
mov
test
sub
notb
lcall
cmpsb
lret
es
jno
inc
icebp
fsts
jge
mov
push
sub
jg
lods
and
out
lahf
lret
addr16
daa
xchg
pop
adc
stos
add
sbb
out
stos
bound
pop
inc
inc
inc
lds
xchg
xlat
cmpsl
inc
into
xorl
push
jo
inc
in
nop
cmpsb
pop
mov
es
rclb
sbb
loop
dec
or
or
leave
ficompl
or
cmpsb
pop
mov
lods
inc
xchg
int
inc
lods
or
cld
add
push
mov
and
jecxz
jg
leave
push
nop
xchg
nop
mov
sbb
jae
je
adc
dec
rcl
sbb
lock
xor
xor
sbb
pop
fsubp
pushf
loopne
sbb
movsl
xlat
shrb
pop
fmull
xchg
jecxz
out
push
pop
inc
xor
pop
ret
add
mov
notl
mov
adc
push
out
sub
xorb
mov
loop
push
aad
bound
push
adc
mov
mov
mov
mov
jo
dec
jg
lds
fcmovu
les
sub
and
push
xchg
cmp
push
arpl
pop
in
cltd
test
and
mov
push
adc
or
fisubrl
enter
in
pshufw
jmp
imul
mov
or
mov
test
imul
jmp
xchg
cwtl
arpl
push
mov
mov
lahf
sub
dec
sahf
nop
std
inc
daa
sbb
mov
mov
jmp
gs
inc
call
fisubs
cld
xlat
xor
lret
cmp
or
nop
lret
adc
pusha
sti
fdivr
std
push
jne
adc
and
dec
mov
xor
mov
bound
mov
idiv
rorb
jb
push
insb
in
and
sahf
jbe
js
lods
sub
jo
pushl
sub
adc
in
add
and
inc
cmc
rorl
pop
jge
push
xchg
in
mov
shrl
inc
rclb
test
lock
lods
test
xor
mov
mov
ret
idiv
das
pop
jno
lcall
mov
aad
add
mov
in
inc
push
insb
jae
xchg
jno
jp
pop
mov
jb
pop
cld
sti
mov
sub
gs
xchg
fdiv
sbb
stos
repz
fmul
xor
cli
dec
hlt
pusha
push
and
fadd
xchg
sahf
insl
loope
cs
xor
adc
arpl
mov
ja
mov
je
pop
imul
fimull
xchg
outsb
add
aaa
repz
push
xchg
js
cmp
mov
dec
push
es
icebp
push
sbbb
out
adc
lret
int
stc
sbbl
popa
loopne
int
je
loopne
movsl
cmc
cli
sti
mov
js
push
stos
hlt
inc
mov
imul
jo
jne
ret
push
xchg
push
fs
outsb
inc
pusha
vsqrtpd
mov
pop
loop
movsb
push
push
xor
pop
lds
into
repnz
dec
cmp
add
nop
mov
insb
adc
fs
sub
shrl
and
fidivs
lds
scas
jp
shrd
xchg
inc
test
jle
dec
mov
xor
mov
movsb
shll
pop
loopne
sbb
sbb
sub
aad
hlt
push
adcl
sbb
das
adc
dec
out
and
and
or
sarl
or
mov
cmp
fldcw
and
test
cmp
jnp
in
dec
bound
mov
je
mov
add
cmp
movsl
mov
mov
cmp
stos
cli
test
movsb
jle
lock
movsl
rcrl
stos
fsubs
or
xor
mov
mov
lret
ret
xlat
js
dec
cld
xor
icebp
rol
cmp
aas
je
ret
pop
xor
in
add
outsb
leave
or
and
dec
jg
lock
mov
outsl
jg
call
xchg
popa
out
in
xchg
dec
add
mov
sub
sub
xor
pop
sbb
cltd
sub
mov
in
inc
sbb
popa
adc
das
shlb
xchg
fisubrs
sub
inc
push
test
xor
and
dec
incl
lea
pop
inc
and
sbb
testb
or
repz
mov
cmp
push
das
outsb
jne
lock
mov
dec
call
mov
int3
add
ret
jns
jo
imul
push
mov
inc
cmpl
lods
sbb
fsubrl
xor
popf
jo
jno
ss
les
sbb
pushf
inc
hlt
cmp
mov
mov
scas
xchg
sub
add
xor
insb
add
inc
xchg
ss
add
adc
sbb
add
mov
push
test
sbbl
xchg
push
mov
lret
popf
add
sub
in
cmp
dec
push
jmp
jle
mov
hlt
sbb
and
les
mov
cmpsb
and
fs
xor
jmp
pop
cmp
outsb
sbb
mov
clc
hlt
addr16
fnstenv
pop
xor
adc
jbe
stos
aam
mov
lods
mov
popf
mov
sbb
cmp
lds
fwait
leave
mov
mov
adc
movsl
push
sbb
imul
rorb
aas
add
data16
xchg
jne
mov
popf
in
into
les
push
add
aaa
push
xchg
mov
mov
shrb
out
divl
incb
pushw
jl
imul
jmp
pop
sub
pop
push
sbb
aam
fidivrl
jo
shll
movsb
cmovg
fcomps
cmp
inc
mov
jg
ficoms
aad
arpl
ss
pop
les
in
fcomi
xor
mov
adc
mov
add
or
cltd
add
and
lahf
shrl
mov
mov
out
sbb
inc
psubsb
sub
vpor
mov
inc
ss
cmpsb
dec
lods
jecxz
xchg
dec
adc
bound
adc
inc
mov
pop
pop
or
ret
sub
adc
in
out
daa
neg
int
ljmp
leave
ret
loopne
mov
cli
sub
cltd
pop
adc
sub
pop
insl
mov
mov
aas
es
push
js
fs
pop
out
mov
lods
rolb
ja
mov
mov
xor
into
mov
es
scas
in
lds
loop
test
out
mov
or
fdivs
scas
jl
sbb
xor
dec
xor
push
rcrb
pop
pop
xchg
jmp
call
xchg
mov
xchg
sub
pop
jne
lods
icebp
enter
sub
and
push
mov
dec
shll
movsl
dec
inc
lcall
clc
jmp
inc
in
nop
dec
pop
adc
xchg
or
lea
inc
sbb
nop
jmp
sub
push
pop
mov
jo
fs
and
movsl
popa
imul
xchg
movsb
dec
push
std
sbb
xor
fdivs
xor
push
adc
ss
dec
sub
mov
jnp
sub
add
sti
push
popa
add
push
xlat
stc
addr16
lods
ss
add
and
mov
sbbl
repz
or
push
nop
movsl
std
ret
nop
nop
jne
inc
pop
jp
or
and
ret
mov
dec
jle
sub
div
nop
daa
mov
sbb
xbegin
outsl
pop
pop
inc
es
sub
xchg
fidivrs
jp
in
out
push
sub
les
aaa
jns
iret
mov
mov
sar
scas
enter
scas
sub
mov
lock
data16
mov
push
dec
lds
scas
inc
mov
adc
into
test
lret
fcmovbe
fsubp
add
cmp
push
inc
call
ficoml
mov
push
cld
mov
mov
mov
test
fcoms
in
es
mov
aas
repnz
jno
clc
jb
scas
and
pop
jns
sti
lret
ljmp
sahf
dec
push
pop
or
in
add
push
jecxz
mov
jns
mov
aaa
or
dec
cmpb
jnp
or
cwtl
imul
sbb
pop
adc
fidivs
imul
pop
je
push
sarb
addr16
jl
jle
test
cmpsb
pop
dec
xchg
ljmp
or
pop
ja
arpl
mov
dec
xorb
sub
mov
divl
adc
push
les
aaa
movsl
sub
push
mov
pop
inc
dec
xchg
cmp
jae
stc
jg
sbb
jns
mov
cltd
arpl
cmp
leave
dec
jae
cmpl
aam
insb
inc
psubb
cwtl
add
sub
xchg
fiaddl
adc
clc
xor
jl
stos
shll
out
sar
inc
and
ficoms
mov
push
je
jb
scas
push
mov
mov
lcall
jae
into
jno
mov
mov
mov
rclb
adc
xchg
pop
mov
lret
push
jns
incb
repz
pop
xchg
nop
xlat
lahf
inc
mov
rolb
xor
out
inc
nop
loope
ucomiss
lods
dec
out
add
cmp
adc
jo
xor
jge
xor
cmpsl
adc
sbb
sbb
sbb
adc
mov
imul
add
push
repnz
popa
mov
out
leave
pop
scas
adcl
pop
mov
jmp
hlt
or
lret
mov
inc
repz
inc
push
mov
ret
push
hlt
jmp
mov
sahf
push
jmp
or
lret
sbb
xchg
lcall
aas
pop
mov
mov
loop
out
xor
icebp
stos
clc
movl
in
mov
lds
cmp
pushf
insl
aam
ljmp
inc
insl
hlt
and
enter
cmp
faddl
mov
mov
stos
out
jg
test
sub
ficomps
sti
add
mov
ret
enter
shr
pop
jno
or
inc
addr16
lret
icebp
xchg
cmp
jg
std
shlb
fistl
push
aad
jp
fcmove
js
scas
dec
fstl
mov
sbb
les
stc
mov
adc
and
scas
rcl
mov
scas
gs
sbb
mov
es
sarb
push
roll
sub
inc
mov
outsb
insl
fbstp
jle
dec
loopne
out
movsb
cltd
dec
rolb
imulw
dec
out
pop
frstor
mov
mov
push
movsl
rcrl
or
pop
dec
inc
and
addr16
lock
aaa
inc
sub
adc
mov
shll
fs
xor
and
fcoml
mov
mov
and
shrl
jle
in
adc
sub
push
loope
addr16
xor
iret
in
xor
cld
notl
sarl
xchg
js
ss
in
es
nop
jnp
jae
jmp
mov
cmp
insl
loopne
or
bound
mov
push
mov
xchg
fdivrs
in
pop
inc
pop
lea
push
adcb
loope
jmp
mov
adc
mov
in
push
jo
xor
out
addr16
iret
xlat
ret
ret
sti
in
sahf
pop
test
subb
sbb
or
test
ret
outsb
mov
lcall
cmp
sbb
pop
movsb
adc
mov
sbb
ret
lret
mov
mov
or
xchg
ret
ficompl
xor
cmpsb
sti
inc
arpl
push
cltd
sbb
push
ror
movsl
in
and
adc
and
std
scas
jge
sub
mov
fildll
leave
inc
in
lods
fsubs
cwtl
add
jmp
lea
fistpll
clc
cmpsl
rorl
rorl
mov
mov
push
js
insl
scas
adcb
xor
sbb
mov
leave
pushf
jnp
mov
sub
jle
stos
mov
inc
ja
dec
ja
jno
nop
movsb
sbb
pop
xchg
pop
pop
arpl
push
inc
lods
jns
mov
mov
in
push
ret
ljmp
inc
vpmaddwd
mov
cli
inc
xchg
jo
xchg
ljmp
xor
pop
xor
jb
sub
fwait
mov
sbb
pop
popa
orl
stos
mov
push
mov
or
push
rclb
push
aam
and
ret
lret
loope
lods
int
jo
xchg
dec
adc
test
add
pop
sbb
aaa
insl
sbb
subb
outsl
hlt
ficomps
cmpsb
ss
jae
in
cltd
pop
in
ret
lock
xor
movb
orl
or
sub
ljmp
ficompl
loope
mov
xchg
in
in
les
repz
out
addr16
dec
lock
push
ret
and
dec
mov
jno
push
fwait
sub
and
popf
imul
mov
sub
push
push
aad
inc
cmp
inc
mov
mov
cmpsb
pop
cmp
push
cs
sub
mov
cltd
das
nop
sahf
imul
cmp
sbb
fstpt
sbb
push
scas
xchg
mov
fmul
mov
sahf
aas
add
mov
ret
or
xchg
sub
push
adc
xchg
mov
ret
cli
inc
or
add
ja
dec
inc
outsb
xchg
test
stos
int3
cmp
adc
std
mull
lds
xchg
pop
add
jne
mov
jmp
mov
fcmovnb
mov
imul
dec
repz
mov
or
or
jbe
popa
or
enter
jb
xchg
adc
adc
inc
mov
xor
shll
dec
sub
cmpsl
pop
push
mov
mov
push
pop
loope
stos
in
xlat
mov
dec
jg
scas
ds
or
cmpsb
fs
gs
push
pop
test
add
pushf
sbb
divl
push
in
scas
andb
inc
mov
cmp
nop
mov
pop
push
ja
or
xor
sahf
adc
fcoms
or
push
stos
dec
adc
loopne
pop
jg
clc
mov
pusha
lea
andb
orl
loop
test
divl
pop
xor
ret
ret
sahf
cmc
dec
cli
push
push
in
mov
ror
iret
xchg
cmp
cmp
loop
pop
push
insb
xchg
jne
dec
call
add
or
mov
xlat
xchg
sub
repz
cmpsb
pop
jmp
sarb
xchg
sub
xor
xor
fldenv
pop
jmp
ficomps
insl
cmp
dec
idivl
roll
push
lods
mov
aas
mov
rorl
arpl
pop
mov
movsb
xchg
cli
xchg
movsb
dec
sbbl
mov
or
into
je
or
test
pop
jbe
fnsave
cmpsl
add
sbb
ja
lret
jbe
in
or
mov
mov
and
lods
adc
cmp
xchg
mov
push
mov
and
and
sbb
sub
add
and
lcall
mov
out
xchg
sub
sbb
insl
clc
mov
cmp
sahf
fistpl
in
mov
or
aas
mov
sbb
outsb
mov
or
push
or
mov
shlb
aaa
imul
ret
mov
lret
or
xchg
outsl
xchg
xor
xchg
stc
inc
mov
test
loope
sub
sub
insl
mov
mov
cmpsl
sbb
test
mov
cmpsl
push
into
incb
fildl
hlt
aam
push
fisubs
out
jmp
xor
cmp
add
fs
ljmp
add
mov
push
cld
jae
push
mov
lods
xchg
mov
and
pop
mov
sbb
cmp
mov
mov
sub
xchg
imul
mov
arpl
stos
repz
xchg
xchg
mov
fnstenv
lds
sahf
inc
sahf
imulb
ljmp
pop
leave
sbbl
incb
movb
stos
stc
lds
cmp
loope
jo
mov
push
push
stos
test
lea
sti
test
mov
and
dec
enter
loope
pop
xchg
arpl
data16
inc
cs
inc
lods
mov
hlt
jns
jl
dec
cs
pop
mov
les
add
sub
sbb
shl
push
scas
push
xchg
or
out
stos
or
divl
ja
bound
das
stc
mov
jae
arpl
mov
sub
and
pop
test
cli
mov
mov
mov
jecxz
cmc
mov
out
lret
sahf
add
cwtl
mov
xchg
push
xor
mov
xchg
call
pop
or
gs
outsb
call
fcompl
sub
movsb
inc
jae
test
xchg
daa
in
push
mov
addr16
leave
mov
jnp
pop
out
je
and
das
xchg
mov
lret
lods
add
in
inc
out
xchg
jne
dec
cmpsb
pop
pusha
call
je
clc
arpl
inc
pop
mov
subl
sahf
cmp
and
pop
ja
aaa
jns
sbb
xorl
sbb
or
mov
push
xor
aad
call
sbb
jno
jle
stos
push
push
test
bound
adc
mov
and
adc
insb
mov
bound
cmp
lcall
jno
xchg
inc
jmp
lcall
ds
lods
push
rcrb
ret
dec
pop
pusha
out
mov
in
jmp
jg
bound
or
xor
clc
aas
je
stos
fsubr
or
out
nop
jl
aam
mov
inc
scas
test
out
pusha
lea
cmp
pop
aaa
test
and
negl
fadd
or
popf
jno
adc
xlat
mov
and
loope
in
mov
stos
xor
sbb
mov
xor
add
push
adc
xchg
mov
push
push
xchg
xchg
outsl
es
push
icebp
aas
fcomi
clc
ss
movsb
add
inc
inc
cmpsb
xchg
fwait
mov
fcmovu
jne
sbb
fcomps
jo
lods
icebp
or
pop
rorl
xlat
pusha
mov
sub
inc
fwait
enter
mov
fimull
js
pop
aam
push
stc
and
add
or
jb
sahf
push
mov
or
pop
pop
ret
xchg
cmp
insb
ss
setne
mov
mov
and
jp
jge
xchg
sub
jo
pop
or
subb
jmp
sub
call
jp
ds
sbb
scas
pop
cmp
jge
fldl
push
fnstenv
inc
sbb
push
push
inc
jo
and
imull
stc
rorl
dec
outsb
push
jns
mov
add
out
ds
ret
mov
push
inc
pop
outsl
popa
xchg
loope
xchg
inc
mov
adc
test
adc
cmp
cmp
in
sahf
mull
dec
in
jne
movsb
fwait
mov
popa
mov
xor
clc
rcr
jp
movsb
out
sub
lahf
daa
cmp
aaa
aam
out
ss
xor
mov
test
jp
repnz
and
notb
xchg
push
and
jmp
xchg
mov
add
mov
adc
out
mov
dec
and
stos
ss
nop
sbb
xor
xchg
sub
rorb
pop
push
arpl
lahf
xor
cltd
sbb
sbb
add
out
adc
jne
cli
dec
push
push
sbb
movsl
clc
pop
mov
dec
dec
ds
jge
lret
gs
stos
adc
daa
repnz
sbbb
and
out
pop
pushf
mov
stos
das
xor
mov
inc
call
stos
push
lea
rcll
jl
daa
mov
pop
push
push
inc
fs
ret
mov
mov
in
sub
inc
dec
add
pushl
bound
cmp
add
scas
outsb
int
pushf
xchg
xor
mov
jbe
xchg
aas
movsb
dec
xchg
enter
pop
in
shrl
roll
cmpsb
stc
insl
cmpsb
leave
and
jge
dec
xchg
push
into
pop
icebp
inc
aas
lds
inc
pop
jo
std
mov
fisttpl
sub
mov
pop
jbe
lods
mov
negb
jecxz
lods
jle
and
pop
adc
scas
sbbl
fmuls
mov
xchg
iret
dec
dec
into
adc
mov
outsb
ja
repnz
cltd
push
and
mov
int3
sti
inc
dec
in
push
mov
push
das
or
in
shl
xchg
repnz
lcall
dec
cmp
jle
mov
in
push
out
or
subb
test
stos
jb
dec
outsb
mov
pop
pop
shlb
scas
mov
stos
push
add
xchg
dec
fnstsw
xchg
push
or
lcall
xchg
mov
mov
xchg
bound
jecxz
dec
and
jle
cltd
aad
or
jmp
mov
insl
cmpl
jge
push
rolb
cmp
lods
xor
mov
cmp
xchg
dec
dec
mov
push
iret
mov
lods
or
imul
in
int3
sahf
std
sub
imul
lahf
icebp
jg
and
call
imul
mov
cwtl
jae
mov
pop
xor
popf
add
in
inc
mov
mov
sub
dec
push
mov
test
fwait
cli
push
mov
pop
movsb
xor
pop
mov
pop
push
mov
dec
push
push
sbb
cmp
sahf
xor
fs
pop
pop
imul
mov
dec
sub
in
out
dec
dec
adc
out
je
mov
cli
lcall
in
stos
stc
xlat
into
add
dec
dec
add
jae
and
push
arpl
push
frstor
cli
or
xchg
loopne
inc
pop
loopne
push
lret
fsubl
mov
loop
push
pop
mov
inc
test
pop
dec
faddl
icebp
jmp
cmp
sbb
mov
in
sub
das
xchg
xchg
out
cmp
bound
imul
test
mov
mov
lret
inc
jp
push
adc
jmp
pop
je
icebp
iret
inc
mov
mov
xchg
cmpsl
js
or
mov
enter
out
imul
in
loopne
xor
xchg
jbe
xorl
or
sub
mov
fwait
or
cs
out
test
rcrl
dec
fcmovb
mov
cmpsb
inc
push
test
vstmxcsr
ja
dec
aad
jno
sbb
sar
pop
cld
rorl
xor
lds
sahf
sbb
pop
sbb
cmp
test
fwait
sub
pop
ftst
cmp
pop
mov
dec
stc
mov
adc
ret
test
lret
enter
sub
andl
mov
das
test
daa
lret
sub
lock
xor
jg
mov
cld
leave
sti
push
cmpsb
dec
adc
iret
iret
pop
stos
and
loope
inc
scas
mov
test
scas
repz
pop
mov
mov
daa
xchg
pop
sub
push
mov
cmp
inc
lock
cmp
in
mov
lods
cmp
jns
and
cmp
jno
sti
xchg
in
hlt
push
test
test
add
jp
out
lret
mov
insl
push
lea
push
or
mov
add
out
mov
std
or
cmpb
out
push
mov
cmpsb
fwait
popf
sub
push
ss
jns
enter
sahf
pop
adc
test
lods
sub
inc
xchg
ds
push
cmp
mov
push
daa
imul
out
mov
pushf
mov
lds
mov
ja
loopne
andb
cld
or
je
xchg
and
pop
and
xor
xchg
push
xor
cmp
xlat
xor
in
fdivrl
pusha
mov
fimuls
xlat
jb
jmp
ja
or
add
pop
dec
push
lods
enter
push
jnp
pop
aad
mov
pop
xchg
push
jp
mov
outsl
jno
mov
inc
stos
jnp
fwait
outsl
pop
lock
outsl
incb
es
cmp
mov
shrb
hlt
cltd
sub
sbb
sub
cmpsb
fstl
aad
popa
setle
cmpsb
and
mov
sub
mov
mov
sbb
add
out
sbb
cmp
push
pop
scas
mov
mov
lcall
and
pop
je
orl
add
mov
aas
and
xchg
or
fcmovnb
sbb
mov
lods
mov
dec
adc
enter
pop
mov
ret
je
push
stos
fistpl
jg
out
loopne
xorl
loop
scas
lock
sahf
or
or
jae
arpl
dec
pushf
aad
call
rclb
jbe
inc
jne
xchg
jge
mov
cs
jl
test
loop
inc
xchg
sti
xchg
pop
rol
sbb
inc
lcall
push
out
jle
jle
nop
ljmp
fcomps
dec
es
ds
test
and
jne
jl
icebp
mov
lds
mov
ja
stos
aas
mov
fsubr
jb
shrb
testb
mov
pusha
dec
lahf
pop
int
cmp
pop
lahf
jae
aas
push
pop
loopne
xor
iret
test
aaa
cmpsb
fcmovb
xor
pusha
pop
iret
pop
mov
xor
pusha
dec
inc
cld
into
shlb
pop
jnp
out
jl
sub
data16
cmc
xchg
add
negl
pop
rol
test
jle
xor
arpl
in
loopne
inc
je
inc
gs
push
cmp
sarb
mov
push
cmpsb
mov
xor
xor
push
cs
sbb
xchg
rclb
fildl
adc
pop
push
hlt
out
pusha
fcmovnu
mov
mov
adc
inc
lods
das
xor
mov
cwtl
icebp
sub
lds
pusha
lret
jmp
mov
mulb
sbb
push
mov
xorb
ja
fcomps
movsb
adc
jbe
adc
jecxz
jmp
mov
enter
xchg
sbb
xchg
scas
sbb
jb
stos
sub
outsl
scas
cmpsb
daa
addb
dec
push
pop
or
or
scas
cmc
cmp
test
or
lcall
xor
popa
lret
xorb
xchg
push
xchg
les
into
sub
jl
push
ret
and
xor
and
xchg
xchg
dec
xchg
mov
mov
mov
mov
or
inc
push
jo
rcrb
sub
outsb
xchg
stos
lcall
or
sarb
rclb
in
lret
xor
adc
out
inc
add
subl
cmpsl
inc
stc
dec
fldcw
sub
repnz
lods
sbb
jg
popa
pop
gs
inc
adc
es
jl
and
and
jo
jb
bound
imul
lods
mov
mov
xchg
sub
inc
sbb
dec
mov
enter
movsl
jb
xchg
mov
std
mov
shrb
mov
stos
push
pandn
jmp
sbb
aaa
fdivr
adc
mov
push
adc
les
mov
jns
les
popf
aaa
daa
pusha
loop
cmp
add
or
es
push
adc
mov
and
push
xchg
insb
daa
fmull
leave
xchg
fwait
ret
add
je
rorb
aad
cmp
insl
mov
xchg
adc
dec
xor
aas
lock
jb
push
sbb
pop
call
push
stc
push
and
sbb
aaa
add
lahf
clc
into
cmp
imul
dec
fisttpll
ret
cmpsl
ficoml
dec
hlt
xor
xchg
adc
cli
mov
test
adc
add
sbb
pop
dec
add
and
and
lods
adc
imul
xchg
push
xchg
dec
push
push
mov
rclb
arpl
mov
fwait
inc
mov
xchg
sbb
mov
icebp
mov
js
push
xchg
arpl
out
leave
add
adc
imul
scas
rorl
int3
mov
in
adc
pop
add
scas
sub
mov
jb
inc
xchg
xor
ljmp
cmc
or
stos
or
mov
scas
es
fwait
xor
pop
mov
and
or
stc
aam
mov
xchg
hlt
jo
jns
jp
pop
push
inc
xor
fsts
inc
jnp
mov
jo
sbb
push
mov
jno
pop
adc
pop
xor
sbb
dec
loop
ret
test
mov
int
pop
inc
add
mov
test
mov
push
andl
jp
or
jo
pusha
mov
and
jge
cmp
int3
and
push
mov
push
out
sti
mov
ja
pop
lret
and
in
xchg
call
or
cmp
pop
sub
inc
sub
and
lds
add
sub
subl
decl
jecxz
mov
inc
pop
fcmovne
ret
xor
sbb
imul
lcall
mov
mov
add
cld
jle
sub
stos
fiaddl
inc
jl
xor
fldl
movsl
repz
mov
add
sub
ljmp
mov
ja
sub
mov
jno
mov
and
pop
xchg
inc
out
add
scas
inc
and
neg
popa
out
mov
fldenv
outsl
lods
mov
dec
fwait
mov
clc
adc
pop
out
les
outsl
mov
aad
add
lret
xchg
dec
xlat
ret
xor
sbb
and
subb
mulb
outsl
fmuls
popf
push
ss
fmulp
fiadds
arpl
mov
movsb
or
inc
pop
adc
adc
cld
fmuls
mov
bound
es
xchg
lea
and
push
sbb
xchg
ret
inc
cmp
into
movsb
rorl
test
int3
xchg
jl
push
cmp
sbb
jo
add
popf
aad
lea
inc
mov
stos
test
cld
inc
int
push
push
jns
clc
notl
sbb
push
add
aad
je
and
add
shll
inc
add
push
pop
dec
and
arpl
shll
in
dec
cld
pop
jbe
jg
ljmp
adcl
arpl
lcall
sbb
es
out
enter
sub
daa
mov
sbb
mov
lds
xor
sbbl
cmp
cmc
test
pop
mov
fiadds
hlt
sahf
jnp
aad
mov
add
push
inc
in
pop
out
adc
mov
adc
test
rcrl
stc
jo
std
push
sbb
and
ds
outsb
sub
flds
es
sub
std
xor
mov
xchg
popf
imul
or
cmp
fstp
pop
adc
xor
incb
shl
jecxz
xchg
stos
push
pop
ja
push
cmc
popa
add
bound
push
push
mov
movl
jmpw
jge
stos
negb
adc
dec
and
mov
sbb
scas
and
in
jns
movsl
shlb
daa
mov
mov
test
cmpsb
ds
dec
sti
inc
cmpsl
jns
repnz
mov
cmp
fwait
xor
sub
dec
in
mov
lods
popa
imul
scas
mov
lahf
movsl
xor
mov
push
mov
adc
mov
mov
je
pop
ss
or
ljmp
or
xchg
xchg
lret
jno
dec
jge
fwait
sbb
in
sbb
inc
cmp
scas
test
dec
repnz
mov
andb
addr16
fisubl
dec
jno
dec
push
and
icebp
shlb
imul
jne
inc
mov
adc
imul
xchg
mov
lea
fwait
dec
arpl
mov
in
inc
sti
mov
add
jb
int
mov
shll
push
stos
xchg
icebp
xlat
add
jg
repz
cmpsb
imul
mov
pop
dec
sub
or
jg
rdtsc
stos
call
clc
or
popa
push
icebp
sub
cmpsb
add
incb
in
cmp
pop
push
aas
pop
mov
cmp
jge
sbb
mov
cs
push
je
jp
lock
test
imul
or
call
mov
and
daa
dec
out
ror
insb
xchg
enter
mov
rcrb
loopne
pop
inc
xchg
dec
insl
jo
pop
cmp
popf
jl
ja
jmp
dec
lea
test
rcl
jp
jl
or
xchg
adc
je
jge
iret
popf
mov
and
sbb
push
mov
or
mov
daa
jge
subb
popf
repz
adc
nop
or
jbe
das
notb
loope
enter
ljmp
xor
xchg
sbb
dec
pop
aam
aaa
cli
mov
pop
xor
or
pushf
sub
jb
and
push
push
into
push
mov
sub
cmp
mov
fstl
loope
and
pushl
or
repz
dec
cmp
pop
sub
insb
dec
lahf
pusha
sahf
les
loop
adc
jns
loope
push
orb
leave
push
bnd
add
aaa
xchg
sahf
in
aam
shl
int3
and
cld
xchg
xchg
outsb
jl
shlb
cmp
mov
fsubs
lods
inc
or
jb
jbe
lds
push
inc
into
sub
xchg
add
xor
cld
loope
fisubrl
aas
mov
addl
adc
inc
sub
or
jg
dec
jbe
in
mov
scas
xchg
xor
jl
mov
addr16
out
in
adc
mov
jl
leave
test
int3
rdtsc
jmp
mov
or
and
test
fidivrl
insl
fwait
push
mov
outsb
sar
test
adc
xor
hlt
pop
adc
std
and
incl
mov
repz
pop
mov
hlt
lahf
mov
icebp
dec
loope
cmpb
punpcklbw
and
add
sub
jae
push
jnp
xlat
inc
or
in
lea
adc
pop
pop
insl
or
rol
xchg
inc
jmp
push
jge
scas
or
mov
test
imul
or
sub
xchg
push
mov
mov
dec
inc
test
call
xor
stc
inc
test
js
cmp
jbe
fsubrs
dec
mov
out
out
dec
rcll
lds
outsl
xlat
sahf
pop
in
sub
jbe
aaa
sbb
and
xchg
and
mov
ss
add
lock
pop
pop
push
sbb
cmpsb
jnp
add
inc
sub
cld
pop
imul
dec
leave
push
xchg
and
aaa
fnstenv
ss
cmp
les
add
dec
mov
mov
outsb
int
jp
test
add
adc
jmp
xchg
sub
mov
lahf
pushf
loop
pop
inc
out
jp
jle
shl
mov
cltd
lds
loopne
pop
sbb
lahf
lods
cmp
fmuls
mov
loop
ljmp
sbb
hlt
gs
mov
add
add
leave
jge
lret
jae
mov
or
mov
cmpsb
adc
addr16
mov
es
jmp
push
rorb
frstor
iret
hlt
cmpsb
jbe
mov
adc
xor
push
popf
cmp
mov
sub
inc
in
rcrb
mov
sbb
mov
shr
addl
cmp
jmp
mov
repz
add
sub
mov
jmp
pop
or
mov
cmp
mov
jecxz
nop
inc
pop
xchg
xor
pop
pusha
bound
add
fsubrs
mov
add
pop
lahf
pop
adc
mov
rcr
iret
mov
fyl2x
lret
and
sbb
pushf
mov
out
push
adc
push
insl
ret
push
stos
js
stos
mov
fmull
test
repz
sbb
movsb
xchg
mov
dec
inc
add
mov
les
and
ljmp
sbb
adc
mov
jge
cs
cs
jl
xchg
pop
sub
push
cmp
dec
outsl
push
fnstenv
ljmp
pop
ljmp
ljmp
inc
mov
push
and
and
fbstp
andb
roll
cld
xlat
pop
and
cmpsl
add
popf
mull
or
inc
xor
cmp
inc
inc
ja
lret
xor
fmul
fisttpll
add
mov
leave
fldl
test
push
mov
dec
jmp
in
push
push
and
cmp
imul
shrl
icebp
fsts
sbb
and
lds
fwait
enter
scas
dec
rcl
cmp
xor
dec
fwait
incb
sar
faddl
in
inc
or
mov
int3
sbb
lret
lcall
outsb
and
flds
xchg
jecxz
lods
std
adc
icebp
add
add
or
and
dec
xchg
das
push
nop
sub
fiadds
xchg
and
outsb
sub
leave
daa
int3
idivb
out
push
jb
mov
or
lock
dec
xor
or
rorb
sbb
test
arpl
imul
call
xor
or
cmp
mov
dec
lcall
sbb
pop
jecxz
mov
pop
jno
out
inc
sub
clc
jg
mov
popf
xchg
mov
sbb
jecxz
aaa
jg
xchg
pop
sub
and
ret
mov
fildll
and
jne
shll
inc
mov
xchg
int
cld
aas
ret
xorb
flds
ljmp
loope
test
jp
hlt
jne
push
push
lcall
popa
dec
mov
pop
outsl
decl
push
es
cwtl
pop
push
clc
movsb
mov
jmp
push
les
push
inc
jmp
cld
les
sbb
mov
js
xchg
xchg
jne
fcomip
jmp
shrb
stos
sbb
sahf
test
xchg
fldenv
mov
mov
cmc
mov
data16
push
sub
dec
pop
lcall
les
rcl
mov
in
add
stos
les
pop
or
lret
cs
sbb
mov
imul
sbb
mov
scas
push
ljmp
roll
or
add
cmc
mov
sbb
leave
aad
jne
and
cmp
adc
rcrl
pop
lret
das
lahf
sbb
mov
sub
xchg
xor
inc
ljmp
jne
xchg
bound
and
int
dec
mov
and
les
hlt
jne
cwtl
dec
ljmp
loopne
call
xor
lahf
sub
ror
jge
lea
cwtl
sub
jecxz
add
clc
xlat
clc
int
das
add
sahf
test
add
jo
xor
mov
out
sahf
mov
jnp
sub
xchg
lret
dec
mov
rcr
mov
test
sarl
sbb
jne
aas
jne
icebp
ja
rcll
add
pop
mov
mov
mov
jnp
jg
fnsave
pop
movl
pop
and
mov
adc
roll
xlat
cmpl
mov
push
into
sarb
mov
add
mov
cwtl
sub
dec
xor
jne
jge
mov
data16
stos
push
or
loop
inc
fdivrs
enter
arpl
cmp
jmp
jg
xchg
sbb
jge
mov
xchg
aas
cmp
call
pop
inc
loopne
add
test
sub
jmp
push
adc
sti
lods
adc
mov
cltd
mov
pop
mov
adc
bswap
out
add
jbe
xor
cmp
mov
daa
in
out
loopne
dec
ds
outsb
lret
movsl
mov
pop
inc
mov
sub
or
push
or
mov
addr16
int
imulb
pop
aad
mov
stc
mov
mov
fstpt
adc
pop
sub
loopne
jp
or
imul
out
xor
push
bound
or
shlb
lcall
lds
mov
frstor
aas
and
repz
push
shlb
dec
jne
dec
sub
xchg
pushf
in
jnp
pop
inc
stc
fcoml
sub
movsl
imul
ss
dec
dec
test
lahf
cmp
xchg
sub
sbb
mov
je
mov
aas
fisttps
loop
fwait
lea
dec
inc
shrl
jnp
and
cmc
lods
lods
adc
jnp
pusha
notl
hlt
xchg
insb
mov
pop
mov
in
imul
aam
imul
cmp
mov
or
jae
popa
push
xchg
adc
mov
in
mov
jnp
jle
add
cmp
out
les
shrl
loope
inc
jnp
mov
add
mov
cld
push
int3
fwait
cmp
mov
lcall
in
jl
hlt
clc
leave
je
mov
xlat
lea
gs
push
insl
sub
inc
jbe
out
cmp
xchg
mov
and
int3
pushf
pop
cmp
shll
pop
cmp
push
jl
dec
movsl
insb
sar
add
into
adc
loop
cli
mov
stos
lods
mov
inc
sub
pop
add
sbb
mov
inc
push
cmp
in
popa
xchg
add
sbb
popf
jle
cmp
pop
hlt
fcompl
out
fcmovnu
fisttpl
arpl
jb
xchg
clc
pushf
push
repz
mov
int3
mov
xchg
and
ret
and
sbb
movsb
mov
mov
stos
add
mov
inc
adc
stc
and
loop
aas
xor
pop
ljmp
mov
pop
mov
leave
xor
in
aad
and
sub
xor
dec
pop
pop
mov
mov
mov
cmpsb
xor
orb
daa
popf
test
push
push
jmp
xorb
test
mov
sub
cmpb
or
pop
arpl
fs
pop
and
movsb
push
arpl
fisubs
push
inc
std
shll
das
or
das
popf
out
dec
cmpsb
clc
cmc
scas
cld
movsl
loop
mov
cltd
push
dec
loop
fistps
negl
or
xor
push
pop
adc
test
xor
lods
mov
xchg
scas
xchg
or
adc
push
and
mov
push
je
push
repz
fsubl
lahf
inc
adc
je
sti
imul
popf
pop
inc
movsb
mov
dec
add
and
dec
xor
push
popf
add
sub
mov
mov
lds
shrb
xchg
inc
cld
dec
popf
in
es
jl
adc
lcall
mov
mov
mov
cmp
mov
rorl
insl
push
xchg
adc
add
lods
cmp
jbe
xlat
out
sbb
addr16
cs
les
sbb
ret
lret
and
mov
mov
fcmovu
out
xchg
ret
lret
in
mov
mov
bound
andl
fldenv
push
pop
sti
push
dec
or
sbb
jg
hlt
sub
pop
mov
pop
out
aad
test
leave
adc
and
or
add
xor
sbb
mov
dec
jle
stos
adc
inc
mov
in
xlat
aaa
adc
ds
mov
jmp
push
popf
out
bound
push
mov
cmp
mov
sub
pop
out
push
aad
pop
addr16
mov
movsb
hlt
je
pop
bound
ficomps
mov
loope
mov
fdivrl
das
push
mov
daa
popa
ja
xlat
inc
xor
lret
scas
shrb
subl
jns
cmp
push
loope
jl
sub
call
fwait
xchg
in
mov
es
cld
lret
jo
mov
lock
pop
repnz
push
int3
sub
add
mov
adc
xor
cmp
lahf
or
stos
sub
jbe
cli
or
xchg
shlb
jmp
cs
cltd
ljmp
cmpsl
ljmp
and
stc
push
xchg
cli
cmp
das
xbegin
inc
mov
out
cmp
adc
enter
adc
pop
mov
mov
dec
in
mov
iret
sub
shrb
ror
jb
cmpsl
push
sbb
icebp
movsl
fidivl
pop
shrb
inc
loop
push
sarl
cmp
inc
ret
xchg
clc
xlat
and
push
and
stc
je
hlt
stos
out
pusha
cmpsb
dec
and
clc
mov
xchg
imul
sub
sahf
dec
mov
lcall
repnz
stos
ret
stc
jae
cmp
pop
outsl
stos
daa
mov
negl
in
sti
jge
cmp
or
mov
pusha
adc
inc
mov
iret
mov
push
fs
out
push
jns
loope
cld
test
clc
add
dec
roll
push
daa
jg
lock
sub
ret
sub
outsb
jno
sub
push
mov
push
cmp
rcr
out
sbb
movsl
pop
inc
push
push
cmp
add
f2xm1
dec
mov
js
subb
addr16
loopne
mov
loope
call
adc
inc
or
js
ret
ss
enter
out
push
mov
cmp
sahf
cmpsb
ret
mov
pop
xor
xor
shl
push
add
pop
cmp
xor
xor
dec
shr
lds
sbb
inc
lds
cmpsb
jo
push
cmpsl
sub
push
ja
ljmp
gs
mov
jne
and
mov
orb
test
jle
movsb
lock
jmp
adc
or
insb
and
push
mov
in
mov
ret
pop
jmp
mov
push
movsb
mov
jle
inc
testl
outsl
and
imul
rorl
mov
aam
mov
cmp
mov
outsb
ret
inc
and
mov
pop
inc
xor
jge
push
ret
adc
ljmp
pop
orl
movsb
aaa
sub
add
sbb
pcmpeqb
lret
in
push
inc
cmp
out
cmp
inc
gs
mov
insb
hlt
mov
mov
andl
gs
mov
mov
lock
add
dec
sti
mov
cmpsl
imul
or
out
dec
add
pop
loope
fists
push
cmp
nop
imul
jns
iret
push
xchg
pop
add
cld
push
inc
pushf
jae
jl
and
fildll
insb
push
js
cwtl
jge
and
loope
aas
push
sub
data16
cmp
jne
roll
imul
mov
sbb
mov
int
enter
add
into
jnp
lods
outsl
dec
and
mov
push
fimull
jnp
leave
fisubrs
and
clc
adc
pop
fst
mov
fidivl
cmp
nop
xchg
inc
xor
fisubl
sub
add
sub
out
sbb
mov
stos
jb
cmp
mov
or
adc
push
mov
out
pop
cli
mov
fadd
daa
push
dec
sub
push
ss
cmp
outsl
sbb
lcall
lods
lds
dec
and
aas
imul
inc
or
mov
lods
movsl
mov
push
cmpsb
jb
push
jns
dec
popa
dec
bound
adc
mov
bound
cmp
cld
mov
clc
mov
sahf
test
xor
mov
iret
inc
pop
bnd
das
adc
int
pop
xor
and
test
push
xor
test
imul
mov
out
xchg
dec
imul
hlt
rcl
and
jae
ret
cmpsb
jp
dec
adc
push
scas
mov
push
inc
imul
js
pusha
mov
pop
jp
out
or
mov
jae
cmc
mulb
in
push
cmp
add
push
aas
test
ljmp
and
cwtl
xlat
or
pop
addr16
mov
dec
lods
stos
bound
jbe
js
mov
add
scas
inc
test
movsl
mov
fwait
add
stos
adcl
es
loopne
lock
dec
pop
lods
push
insb
mov
adc
xchg
gs
pop
insb
xor
popf
test
incl
xor
in
lret
cld
in
add
adc
cli
cwtl
or
call
sub
lcall
pop
xchg
in
mov
fs
sbb
or
orb
movb
dec
jp
stos
mov
stos
mov
pop
inc
jl
xor
jae
arpl
mov
rorl
push
test
mov
mov
fistpll
fcoml
jb
mov
jbe
jg
arpl
aaa
lods
inc
out
xor
xchg
test
arpl
mov
scas
push
pop
push
mov
mov
xchg
xor
lcall
xchg
into
aad
adc
push
add
ljmp
and
addr16
loop
cmp
out
lods
aas
add
fninit
jp
xor
cmp
mov
or
lea
ds
pop
pop
sbb
fmulp
test
pop
lcall
lahf
imul
mov
adc
pop
inc
loope
dec
sarl
testb
rolb
xchg
sbb
daa
mov
xor
aad
push
popf
sbb
lds
xchg
mull
mov
xor
test
push
sub
lahf
rorb
aam
sbb
fwait
xchg
push
imul
adc
adc
lods
sbb
out
jnp
cmp
xchg
pop
nop
filds
ret
je
adc
sbb
inc
pusha
int3
push
pusha
sbb
aas
cmc
inc
dec
movsb
dec
push
jno,pt
test
cli
xor
dec
mov
mov
in
mov
mov
loope
rorb
push
push
jg
cwtl
ficoms
bound
xchg
mov
cmp
cld
pop
pusha
inc
mov
lds
lock
cwtl
pop
movsl
fnstcw
fdivrp
pop
adc
sahf
popf
mov
inc
adc
xor
pop
fistpl
add
push
test
outsb
insb
push
mov
rcrb
mov
jmp
rolb
dec
mov
outsb
enter
dec
fbstp
movsb
and
adc
add
es
loopw
das
adc
xchg
mov
xchg
xchg
cs
aaa
mov
mov
cmpsb
jne
xor
mov
jo
dec
clc
jne
jge
fmulp
pop
jge
pusha
xchg
arpl
jge
testl
jo
push
mov
dec
mov
cmc
lds
insl
mov
insb
fcom
jbe
xor
push
fldl
push
clc
movl
sub
jbe
xor
pop
lret
popf
stos
xor
ret
cmp
mov
vshufpd
or
and
push
sbb
js
jbe
je
dec
mov
push
push
cmp
dec
push
sbb
sub
jmp
scas
cmp
push
xchg
iret
and
inc
mov
jno
imul
sbb
rcrl
ja
adc
and
mov
dec
or
inc
sbb
or
popf
roll
sub
pop
mov
jnp
adc
push
scas
cwtl
mov
xchg
sub
push
lret
xchg
notl
int
pushf
mov
dec
scas
hlt
mov
and
popf
dec
in
cltd
xchg
dec
gs
test
jne
mov
jmp
fimuls
movsl
mov
mov
nop
sti
int
enter
push
push
ret
pop
adc
mov
sub
aam
enter
cmp
fisubs
push
jne
adc
pop
stos
cmpsl
int3
sbb
add
or
stos
jnp
mov
sbb
mov
lea
pusha
jo
adc
scas
mov
lahf
jg
lods
add
mov
pop
dec
cmpsl
out
mov
push
lock
lods
mov
out
push
adc
nop
pusha
xlat
or
sbb
xor
in
loopne
aaa
add
jns
fldcw
lea
mov
clc
ret
gs
daa
gs
incl
and
push
popf
add
mov
cmp
sahf
mov
imul
mov
cli
push
fistl
push
arpl
adc
inc
xchg
cwtl
decb
mov
popa
mov
xchg
leave
ds
jae
sbb
inc
out
sbb
jnp
dec
popa
pop
ficoml
loope
xchg
andl
and
push
push
vpcmpeqw
jo
mov
faddl
mov
dec
idiv
jno
jo
pusha
mov
jnp
mov
xchg
lock
out
dec
pop
jae
paddw
sti
lret
mov
adc
aaa
ljmp
pop
jecxz
shlb
enter
sbb
and
in
xchg
jns
movsb
loope
xor
sub
ret
adc
out
xchg
int3
lock
sub
or
mov
or
ds
xchg
mov
or
std
fwait
cli
pop
icebp
xchg
int
pop
loopne
cli
add
jns
mov
fisubrs
insb
cltd
push
mov
lahf
mov
mov
mov
mov
data16
test
adc
aam
cmp
ss
psubsw
or
in
sub
mov
jmp
xchg
and
adc
gs
push
push
daa
sub
add
sahf
cmp
push
imul
sub
push
popa
call
inc
fisttps
push
adc
fsubrl
movsb
cmp
not
scas
pop
aam
and
cmp
loope
das
out
cld
cmp
popf
adc
test
inc
lret
out
sub
or
adc
loope
jge
popa
insb
cltd
mul
loop
pop
inc
cwtl
xor
hlt
mov
inc
sub
imull
pop
daa
fisttpl
int
mov
adc
xchg
mov
ret
int
cmp
mov
rcll
stos
jb
es
je
xor
mov
and
jmp
into
out
push
inc
push
mov
sbb
hlt
sub
cmp
mov
movsl
inc
mov
xor
cmp
fucomp
push
xor
or
insl
xor
xchg
and
and
or
lods
repz
movsl
gs
test
xor
leave
jb
les
lcall
repnz
loope
jno
dec
sub
and
inc
mov
subl
sti
or
int3
inc
movsb
mov
cmc
or
cmpsb
inc
out
mov
mov
ret
sbb
adc
not
lret
mov
sti
adc
icebp
pop
dec
mov
sahf
push
nop
dec
sbb
mov
in
jns
adc
xchg
lret
fcmovne
sub
xor
pop
push
insl
cmpsl
ret
lea
jae
cwtl
jne
mov
pop
rsm
movsl
add
push
sbbb
fdiv
imul
dec
hlt
sub
mov
xchg
xlat
ljmp
mov
dec
jbe
add
mov
lds
aas
cmc
pop
or
jmp
andl
icebp
jp
jp
sub
dec
jl
add
shrb
arpl
addr16
repz
mov
repz
mov
cmp
lods
lcall
xchg
ja
jp
js
cmpsl
xor
mov
inc
mov
std
xchg
test
hlt
jne
jne
mov
adc
pusha
aam
or
adc
mov
cmp
aad
add
xchg
lods
insl
xlat
int
pcmpgtw
popa
push
out
xor
rol
mov
sbb
sbb
lock
sbb
push
jecxz,pn
and
fsub
imul
or
push
js
or
fs
mov
lods
call
movsb
push
xchg
and
lret
es
cmp
push
cmp
or
hlt
dec
hlt
int3
and
pop
pop
xchg
jecxz
std
lods
loope
rorb
mov
jb
stos
inc
dec
aam
data16
js
jbe
pop
pop
test
mov
inc
fsubp
mov
push
cli
in
test
or
ret
mov
pushf
mov
cmpsb
mov
adc
cmp
lock
inc
call
in
xor
repz
adcb
dec
jmp
xchg
cmp
mov
sbb
sahf
add
scas
mov
dec
data16
loop
ud2
aas
lods
ret
das
dec
push
xchg
cmp
in
movsb
sbb
adc
adc
jge
arpl
shlb
stos
or
push
into
out
sub
out
out
mov
cli
mov
das
scas
fnsave
cmpsl
mov
xor
dec
add
es
lret
cmp
dec
fcoms
mov
andb
pushf
and
fdivrl
dec
pushf
mov
mov
jno
sub
in
loop
scas
mov
cmp
test
inc
outsb
mov
imul
mov
push
pop
sbb
pop
pop
add
rclb
pusha
mov
xor
jnp
aad
xor
pop
stos
test
cmpsl
shll
aas
movsb
call
or
jl
leave
adc
mov
sti
push
test
fs
lret
sbb
clc
bound
or
jnp
jge
mov
pop
adc
das
ljmp
rorl
testl
mov
push
enter
adc
pusha
stos
fs
dec
je
das
sbb
mov
mov
loop
pop
or
mov
scas
movsl
sahf
adc
pop
fsubr
push
stos
xchg
ljmp
pop
sti
fwait
push
push
mov
mov
shll
subl
clc
jb
jno
or
xchg
dec
rol
add
test
test
add
dec
cli
push
insl
cld
push
es
das
fbld
es
sti
ficoml
pop
fwait
lahf
xor
cmp
and
and
cmp
adc
in
fcmovne
jno
xchg
nop
jnp
sbb
mov
pop
push
sub
in
gs
imul
pop
in
sbb
test
aam
ret
fadds
insl
loopne
push
inc
int
jmp
jl
sbb
movsb
inc
gs
mov
adc
inc
jnp
pop
or
jne
aam
mov
sub
ja
nop
iret
jbe
out
pop
mov
std
aad
sub
out
hlt
js
mov
add
lods
pop
call
sub
mov
pop
push
pop
or
in
adc
rcrb
mov
or
imul
hlt
adc
sbbb
mov
inc
push
xlat
pop
aas
dec
rcrl
pop
fwait
xchg
ljmp
xor
nop
cmpsl
imul
repz
int3
das
cs
inc
rcrl
orb
mov
or
stos
pop
aad
faddl
fstpt
dec
lret
pop
leave
call
cmp
mov
shlb
fnstsw
cmp
out
cmp
sub
mov
adcb
jns
int3
imul
adc
test
ss
decl
adc
loopne
fnsave
stc
imul
xchg
mov
lods
lcall
ss
inc
add
loop
bnd
push
adc
push
notl
ret
xchg
rol
sub
adc
arpl
ret
scas
inc
jns
sar
fidivs
jl
loop
adc
sub
mov
push
mov
loopne
fidivs
sbb
lret
adc
nop
or
test
inc
arpl
mov
iret
or
dec
int
inc
adc
mov
push
ljmp
loopne
add
mov
mov
and
js
push
and
cli
mov
dec
jg
sbb
aas
aad
mov
and
not
mov
cmp
sub
sub
dec
or
xchg
fwait
dec
ss
test
fdivs
push
shll
rorb
les
mov
xor
adc
cmp
int3
mov
out
mov
sub
fidivrs
popa
call
xor
lods
mov
int
mov
mov
roll
dec
bnd
test
ret
push
icebp
jae
xchg
xchg
push
xchg
inc
mov
xchg
inc
aaa
mov
orb
cmp
mov
enter
sub
mov
xor
xchg
mov
sbb
mov
fcmovbe
cmpsb
sbb
pop
hlt
cwtl
mov
cmp
mov
repz
pop
ret
movsl
inc
clc
push
loop
adc
mov
and
sbb
aaa
push
xchg
pop
je
jns
xor
mov
loopne
push
push
stos
popa
call
xor
cmp
cld
jo
rclb
mov
arpl
sbb
jno
sub
test
mov
shll
sbb
push
aad
bound
xor
and
add
ret
jno
movsl
cmp
adc
aam
mov
xchg
test
sub
lods
adc
lahf
out
sbb
sub
sbb
jno
sqrtps
cmp
jmp
stc
mov
fsubs
pop
hlt
push
xchg
mov
sbb
lds
jmp
fstpt
jnp
adc
stos
cmpsb
add
xchg
movsl
shll
cli
fnstsw
or
fstps
push
xchg
icebp
xor
movsl
push
add
jb
and
pop
imul
stos
scas
lock
fwait
push
sub
mov
xor
int
push
xor
sub
popa
int
mov
stos
mov
mov
jecxz
sbb
inc
dec
imul
dec
insb
cli
inc
movsl
imul
dec
leave
xor
aas
jae
popf
mov
or
sahf
mov
mov
out
pusha
xor
cmp
dec
or
lds
ja
adc
iret
adc
pusha
adc
xchg
mov
and
dec
xchg
into
push
pop
xchg
sbb
push
int
and
cmpsl
xchg
and
shrl
ja
mov
mov
popf
insb
sbb
and
addr16
mov
mov
sub
mov
movsl
xor
mov
mov
adc
sbb
shrl
in
adc
cmp
lahf
leave
movsb
push
inc
push
stos
cmpsb
in
inc
orb
sub
xor
mov
in
cmp
sbb
std
es
out
xchg
adcb
out
pop
and
je
aad
lcall
jle
mov
mov
xor
enter
aas
mov
sbb
test
xchg
stos
int
aad
jno
daa
push
sbb
int3
addr16
scas
ljmp
aaa
gs
movb
adc
jo
adc
scas
add
shll
jb
daa
psubw
or
pusha
sub
gs
mov
imul
xchg
xchg
mov
insl
addl
push
mov
mov
mov
xor
enter
insl
xor
aad
xchg
jbe
ljmp
push
xor
in
inc
mov
out
aas
lods
ja
dec
clc
inc
shll
loopne
in
dec
sub
inc
adc
jo
fcomps
cmp
in
or
lds
cli
out
or
scas
inc
mov
lods
inc
add
imul
nop
inc
and
lea
sbb
ds
leave
cmp
sub
xchg
aam
fistl
adc
enter
mov
enter
push
fisttpl
cmpsb
and
imul
adc
cmp
sbb
mov
sbb
mov
xchg
roll
icebp
test
loope
addr16
in
sub
repnz
xchg
adc
enter
push
cltd
addr16
dec
imul
pop
pushf
pushf
mov
inc
push
xchg
dec
pop
fimuls
aas
mov
add
sbb
push
mov
jg
loope
jl
sbbb
int
add
add
push
cwtl
add
dec
lret
call
mov
push
mov
fisubrl
insb
sub
in
jp
add
mov
jo
jae
cmp
add
mov
fstpt
insl
aad
fstpt
jmp
adc
pop
jmp
repz
dec
loop
imul
mov
jbe
mov
cmp
pop
mov
xor
mov
imul
es
rolb
cmp
mov
pusha
pop
push
xor
maskmovq
divl
push
push
mov
daa
std
sbb
jge
add
and
and
inc
push
fwait
sbb
push
and
lcall
outsl
cmp
sahf
nop
inc
out
test
xchg
add
icebp
pop
mov
ficoml
sbb
cmc
or
or
rorb
shrl
out
sbb
xor
xor
xchg
xor
pushf
sub
xor
in
add
ljmp
xorb
mov
int
jge
jg
ret
shrl
jle
lea
insl
dec
mov
pop
repnz
adc
outsl
lret
loope
cmpsl
xchg
testb
lret
push
cmpsb
shrl
jae
mov
aam
lcall
stc
mov
and
push
lds
into
jle
jno
lods
mov
jbe
adc
and
js
test
cmp
out
pushf
lds
sub
pusha
xor
cld
pusha
sbb
cmp
inc
cmp
fldenv
frstors
stc
or
mov
xchg
in
pusha
push
inc
pop
jecxz
xchg
xor
mov
imulb
aam
adcl
in
fistpll
int
xor
jecxz
lods
jge
in
loope
cmp
lahf
push
add
dec
mov
fisubs
jno
or
cmpsl
aas
xor
fwait
pop
call
jg
add
les
and
shl
rorl
imul
cmp
jae
vmwrite
mov
xchg
adc
cmp
sti
fildll
mov
arpl
movsb
cmc
addr16
popa
imul
mov
sub
scas
mov
aaa
sub
sbb
into
jp
mov
ja
push
cmp
leave
pop
fcoms
movsl
data16
cmpsl
xchg
les
cmp
mov
jb
push
mov
pop
cmpsl
sbb
mov
adc
testb
push
adc
xchg
inc
push
and
jno
aad
cmp
imul
popf
hlt
ss
and
in
sub
stc
addr16
add
dec
ret
lods
int
stos
or
ret
sub
xorl
push
inc
into
push
ja
jns
adc
cltd
lds
mov
pop
cmp
sbb
xchg
and
ret
das
insb
xchg
ja
add
mull
mov
movsl
hlt
xlat
or
mov
sbb
cmp
dec
xchg
dec
xchg
jl
stos
dec
push
loop
jmp
pop
ret
mov
add
sbb
adc
sbb
lahf
push
ljmp
test
cltd
xor
mov
and
dec
fcomi
jg
or
imul
fbld
outsl
fsubr
movntq
out
int3
add
in
subb
shrl
add
pop
lcall
or
sbb
stos
inc
in
aad
adc
in
push
loopne
iret
xor
xchg
mov
mov
jb
mov
jle
mov
sbb
and
dec
dec
xor
repnz
pop
jg
jge
xor
and
fdivs
mov
inc
fstpl
ret
shlb
stc
dec
iret
lods
enter
xchg
call
sub
or
pop
push
mov
es
mov
or
lret
es
jne
jecxz
mov
inc
cmpsl
push
push
xchg
icebp
xchg
push
and
sti
in
xor
roll
daa
ds
pushf
push
clc
ret
arpl
jecxz
lods
aas
push
sub
in
lret
or
cmc
xor
mov
xor
ds
and
sahf
mov
addl
xchg
dec
iret
fs
sub
stc
in
test
jae
pop
pop
xor
enter
mov
mov
adc
jge
or
add
xor
push
mov
or
mov
xchg
divb
cmp
inc
repz
das
cmc
add
sub
outsb
adc
idivl
cmp
sahf
mov
xchg
sub
pop
movsb
xchg
mov
lret
jle
adc
xchg
ds
lods
or
fnsave
xor
push
fstl
hlt
mov
mov
lea
shll
add
shrl
push
faddp
cmc
inc
or
cmp
add
lds
jecxz
aaa
stos
xor
loopne
xor
dec
pop
sbb
add
mov
inc
inc
int3
pop
xchg
mov
xchg
movsb
adcl
cmp
jp
dec
xchg
mov
xor
mov
sar
popf
cmp
push
js
dec
pop
sub
sbbl
xchg
stos
inc
lods
in
pop
jo
imul
leave
inc
adc
add
cwtl
test
and
xchg
push
inc
pop
cli
jo
cmpsb
xchg
bound
sbb
ljmp
and
mov
or
push
mov
add
shrb
xchg
stos
lret
pushf
and
mov
cwtl
fadds
sbb
sbb
xchg
ror
sarl
cmp
and
mov
cmpsb
xchg
add
cltd
outsb
mov
lahf
mov
gs
dec
faddp
xchg
cli
inc
pop
imul
mov
fisttpll
shrl
cmp
jns
mov
mov
xor
mov
jmp
mov
test
sarl
jno
adcb
and
jns
inc
test
push
aad
add
inc
or
sub
andb
loopne
mov
mov
jge
aam
mov
addr16
aad
and
push
int
shll
cmp
rorl
sbb
adc
stos
xlat
sbb
xchg
jmp
insl
jo
lret
xor
fldcw
test
push
popf
imul
sub
cs
cli
in
daa
pop
sub
pop
cs
or
in
mov
xor
loopne
dec
xchg
pop
arpl
pop
xchg
in
lods
adc
out
or
call
loope
mov
pop
test
jp
enter
pusha
jecxz
inc
lods
cld
imulb
push
aaa
sbb
int3
mov
add
push
inc
xor
int3
lahf
data16
test
jbe
adc
lcall
dec
repnz
mov
xlat
sub
popf
out
pop
inc
negl
stc
xchg
call
fcmovnu
jg
xchg
or
add
gs
xchg
cmp
lods
test
and
jae
cmp
js
xor
in
cmc
aas
or
call
adc
or
jle
ljmp
adc
jmp
sub
push
in
ret
cld
std
mov
loop
ret
dec
pop
into
push
dec
sub
adc
jmp
jecxz
xlat
push
insl
adc
xorb
or
sub
insl
lods
mov
out
inc
movsb
sub
mov
sub
in
jge
sub
ja
jne
dec
sub
mov
sti
pusha
popf
push
jbe
dec
adc
sbb
incl
cmpsb
lods
sbbb
testl
faddl
dec
test
popf
add
mov
jo
lock
inc
or
adc
sbb
mov
shrb
dec
test
cld
dec
lods
push
dec
inc
xor
or
stos
clc
push
pop
repz
in
clc
inc
jns
in
repz
inc
jmp
popa
or
out
adcl
lret
dec
sbb
pushf
das
gs
fs
dec
repnz
cmp
adc
push
outsl
ret
das
outsl
sbb
in
jns
mov
js
push
loop
and
adc
and
das
out
jb
lahf
mov
cmp
mov
sar
adc
cmp
je
ret
pop
aam
aam
xchg
daa
clc
in
dec
push
jp
cwtl
mov
pop
imul
xchg
pop
pop
push
jecxz
push
or
jg
push
sti
sub
push
imul
aad
out
xor
sbb
cmpxchg
ret
xchg
in
jle
add
repnz
insl
lock
call
arpl
xor
or
stos
pop
insl
pop
xchg
nop
movsb
or
xchg
add
stc
sbb
lcall
lahf
les
or
sbb
jne
lods
sub
mov
lods
mov
cltd
jno
push
cmp
mov
xchg
aaa
mov
daa
cli
adc
mov
loop
inc
sub
pop
sti
cmp
sbb
mov
addb
orb
adc
dec
xchg
lock
mov
seta
xor
jbe
mov
lock
movl
and
pop
lods
and
mov
leave
mov
jne
fs
rorb
loop
and
push
fdivrl
pop
mov
dec
push
aam
xchg
inc
and
cltd
lea
pop
scas
pop
push
mov
jmp
addl
in
fsts
test
mov
popf
and
test
mov
cmp
mov
dec
sarl
xchg
sahf
jge
cli
mov
test
ret
test
pop
das
cmp
adc
sub
lea
iret
cs
sbb
mov
mov
jmp
test
sbb
push
sub
out
lods
iret
add
outsl
std
fmulp
outsl
mov
shlb
pop
adc
lods
test
lock
loope
adc
inc
popa
loope
fs
inc
push
add
loopne
lret
or
mov
dec
jb
mov
movb
aaa
sbb
or
mov
xlat
inc
cmpsl
cld
xor
movsb
jmp
cli
mov
stos
mov
cli
pop
lods
popf
xor
mov
cmp
add
iret
cmpsl
push
imul
inc
adc
mov
filds
int
testb
jbe
icebp
pop
or
jno
sub
adc
stos
mov
inc
mov
cmp
mov
mov
in
sbb
push
dec
jecxz
and
xlat
daa
lahf
loopne
subb
mov
fcmovnu
xor
jl
mov
cld
je
jne
pop
das
or
ret
jmp
cmpsl
icebp
or
pop
adc
push
aaa
cmp
sbb
cmpsb
sbb
rcll
lcall
jp,pn
ret
dec
sub
xor
cwtl
mov
ja
xchg
pop
push
sbb
mov
lahf
mov
jo
ss
pop
xlat
push
lcall
lds
rcll
cmp
xor
addb
jle
push
js
frstor
daa
mov
dec
add
clc
jbe
mov
push
pop
add
repnz
lods
mov
sub
pop
fiaddl
dec
shrb
mov
mov
sub
xchg
mov
or
xchg
pushf
int3
imul
add
int3
mov
add
imul
aaa
es
call
cmp
pop
call
ja
xor
pop
and
jae
ror
jbe
insb
imul
popa
xchg
inc
aad
movaps
aad
pop
or
lret
jbe
adc
insb
add
imul
push
outsl
pop
mov
movsl
cmp
repz
lods
and
das
fdivrl
mov
ss
popf
jl
cmp
out
and
int3
and
xor
or
fs
ja
pop
out
adc
dec
gs
pop
lcall
fst
or
cmp
sbb
or
int
out
mov
movsb
mov
cmp
std
jp
and
push
shlb
movsb
sub
lods
out
jb
hlt
or
ljmp
test
int3
lods
sub
out
adc
jno
mov
mov
pop
sub
sbb
es
jmp
xor
cmovns
sti
adc
sbbb
mov
shlb
fidivrl
test
cwtl
xchg
sub
icebp
pop
daa
push
stos
fistpll
adc
ret
mov
inc
adc
test
fbld
aaa
ja
mov
jne
jo
sbb
stos
adc
dec
push
fsubs
pushf
pushf
js
mov
or
mov
sarb
pusha
sbb
jae
out
push
push
loop
mov
inc
loope
int3
outsl
cmp
dec
xor
bound
jl
lret
xchg
std
daa
out
xchg
mov
fsubr
insl
add
push
lods
xchg
mov
pop
jb
aam
insb
enter
frstor
pop
fs
das
jmp
inc
pop
sti
jno
xchg
movsb
fs
mov
stos
mov
out
sub
int
int3
jg
cmp
lods
xor
mov
xchg
cmc
inc
subl
xlat
xchg
dec
xor
loope
jo
pop
iret
xor
pop
push
lds
test
mov
mov
jecxz
inc
in
lds
cmp
dec
stos
push
mov
notl
jle
push
popf
pushf
inc
mov
mov
adc
jecxz
sbb
or
sbb
sbb
sbbl
sub
mov
call
fwait
out
mov
iret
stos
push
neg
jnp
in
loopne
inc
sub
outsl
sub
mov
clc
xchg
adc
fadds
mov
in
and
pop
adc
hlt
stos
je
call
jne
rorl
push
and
mov
aad
mov
insl
dec
adc
jmp
jecxz
fnstsw
dec
imul
data16
jns
int
inc
xor
pop
sub
scas
adc
loope
sbbl
in
jle
xor
or
xor
inc
or
mov
in
jmp
enter
inc
jmp
or
and
xchg
sahf
sub
pusha
cltd
test
dec
iret
pop
add
mov
dec
imul
jbe
mov
call
stc
pop
sub
lahf
xchg
push
mov
push
pop
stos
sbbl
in
sbb
fnstcw
shl
fmull
push
add
xorb
loope
sti
xor
xorl
add
in
sub
mov
sub
lock
sbb
insb
repz
pushf
mov
cmp
mov
ret
jno
adc
popa
jbe
into
or
in
push
es
pop
popf
cld
loopne
jle
sti
pop
xor
jge
push
mov
ss
leave
adc
ret
dec
imul
jbe
cltd
sbb
push
dec
repz
out
add
inc
xchg
jmp
mov
gs
sub
jg
sbb
mov
and
out
cmp
in
mov
stos
in
shlb
jo
les
sub
int3
push
in
add
fbld
add
cmc
sbbb
and
repz
pusha
adc
jle
jnp
arpl
dec
aad
jne
movsb
out
in
pop
bound
inc
sbb
cmc
loopne
inc
aas
xchg
cmp
xchg
cmp
push
cltd
fwait
xchg
scas
mov
es
movswl
ret
and
sbb
sarb
scas
mov
mov
or
gs
inc
loope
clc
push
ret
bound
push
mov
in
jecxz
xchg
sarb
test
sbb
cltd
stos
cmp
mov
pop
inc
mov
or
imul
mov
cld
xorl
ss
mov
cli
dec
cld
cmc
jp
divb
fdivs
out
fnsave
dec
add
inc
ja
sbb
sub
imul
cli
dec
rcr
ror
add
cld
or
xchg
dec
mov
mov
push
or
xchg
jmp
in
inc
cmp
or
jl
cwtl
push
repz
or
cmc
lcall
xchg
or
push
adc
lahf
shrb
jp
jne
xor
adcl
xchg
addr16
pop
adc
bound
mov
stc
cli
ljmp
pop
add
aam
out
xchg
xchg
cld
ret
sbb
mov
mov
fidivs
fucom
cwtl
mov
add
out
xchg
mov
mov
mov
fnsave
leave
cli
jge,pt
inc
popf
stos
jp
cs
or
insb
dec
xchg
cli
sbb
xchg
movsl
gs
cmp
icebp
fucomip
pop
nop
fstps
pop
sbb
iret
mov
popf
fsubrs
adc
push
aas
mov
push
sti
xor
cmp
clc
mov
lcall
sbb
out
out
jmp
fidivrl
push
cmp
fcmovu
mov
cmc
pop
xchg
jbe
cmp
jp
sbb
fisubs
xchg
mov
adc
jle
cmp
jp
scas
sub
pop
mov
xchg
xor
dec
sbb
mov
xor
mov
jne
xorl
imul
mov
das
shl
inc
jp
sahf
daa
push
test
cmc
sub
xchg
lock
subb
ljmp
mov
inc
mov
ljmp
inc
sub
mov
inc
dec
and
mov
rcr
add
faddp
lret
out
xchg
push
aad
dec
dec
out
ja
mov
lds
test
sub
push
add
push
loopne
in
mov
inc
dec
sub
lcall
vmovdqu
sbb
inc
mov
gs
pop
or
mov
cmp
or
bound
xchg
dec
movsl
pop
stc
push
inc
lcall
stos
sbbb
cltd
mov
adc
iret
push
lret
dec
adc
ss
push
fwait
test
dec
fistpl
cmp
ret
fsubs
mov
lea
cmp
add
ja
ljmp
mov
stos
movups
ja
movl
add
xchg
decl
xor
outsb
fwait
push
test
cmp
inc
fsubl
adc
xchg
fxch
cmp
pmaddwd
pop
fistpl
jl
jo
scas
mov
sahf
icebp
pop
insb
pop
sarb
inc
adc
mov
bound
jg
pop
xor
sub
cmpsl
rolb
std
cwtl
aam
sub
lods
call
push
add
test
js
cmp
xchg
loope
add
imul
push
lock
jno
mov
notl
jns
and
push
sbb
clc
jns
mov
repnz
mov
movl
cmp
ljmp
fs
cs
in
imull
cmpsb
jecxz
xchg
int
lret
xchg
dec
adcb
and
mov
adc
out
xchg
xchg
in
in
dec
inc
in
cmp
mov
into
je
sbb
aam
icebp
dec
jns
call
xor
daa
sbb
inc
movsl
out
pop
repz
pop
je
pop
cwtl
mov
and
adc
and
cmpsb
cmpsl
movsb
cmp
add
mov
rcrb
jmp
inc
stc
stc
aam
das
xor
xchg
leave
insl
sub
inc
loopne
jnp
out
loopne
repnz
fistl
dec
inc
movl
pop
and
cmp
pop
outsl
and
fs
adc
cld
add
aas
inc
shl
and
add
nop
jle
sbb
push
and
sbb
pop
pop
scas
shll
enter
shlb
sahf
mov
push
mov
and
xchg
push
pop
mov
repnz
and
xchg
das
mov
clc
pop
out
and
pop
push
js
sti
mov
daa
out
sahf
inc
xchg
mov
pop
scas
orl
jg
mov
insb
pop
push
mov
sbb
xor
jg
and
cmpsb
loopne
movsl
xor
pop
sbb
loope
xor
mov
lahf
jge,pt
out
fidivrs
jns
loope
dec
xchg
mov
das
into
enter
jne
das
push
and
popl
aas
pop
popf
mov
out
mov
inc
mov
add
into
lods
push
jle
bound
out
xchg
cvtpi2ps
test
inc
dec
cmpsb
rorb
leave
mov
mov
loop
insb
xchg
int
in
jmp
inc
xchg
out
and
cmp
pop
in
dec
dec
lahf
sbb
push
pop
pop
fsubp
je
out
pop
cmp
cmp
jmp
mov
mov
dec
sub
lds
imul
cs
mov
mov
sahf
or
sbb
mov
xchg
adc
loop
dec
xchg
mov
add
add
test
mov
sbb
movl
and
push
stc
dec
mov
mov
shlb
pop
aad
jae
xchg
or
jle
les
cmp
fidivl
xchg
je
into
std
test
ret
cmpsb
arpl
fisubrl
sarb
inc
fwait
outsb
out
xchg
jb
mov
xor
fmuls
add
mov
lret
dec
xor
cli
jge
lcall
fnsave
test
lcall
mov
pop
or
xchg
andb
incb
mov
xchg
mov
stos
sbb
inc
stos
xchg
pop
enter
xlat
data16
adc
pop
or
mov
mov
cmp
dec
mov
gs
jecxz
inc
sahf
shrl
int3
jns
ret
inc
ja
addr16
adc
fwait
out
adcb
pop
gs
std
sbb
jp
jno
into
popa
movsb
cli
into
addr16
mov
jo
lods
sti
pop
and
cmp
adc
outsl
inc
decl
sbb
jge
stos
in
es
leave
out
lds
call
rcl
jge
xchg
pusha
mov
pop
stc
data16
xchg
sub
pop
mov
das
push
in
sub
fisubs
js
cli
lods
mov
push
lret
adcb
loope
in
mov
jg
jnp
inc
jbe
mov
xlat
in
xchg
jle
fsubr
mov
sbb
mov
push
dec
lret
mov
sbb
fcoms
test
jl
cld
xor
mov
pop
xchg
fildll
mov
jl
imul
loope
dec
mov
les
test
sbb
xchg
xlat
or
sub
dec
dec
icebp
sbb
cmc
mov
or
adc
and
push
out
jne
cmpsl
jge
jo
in
pusha
lea
or
repnz
mov
das
xor
ret
cmp
push
mov
fldenv
dec
jl
push
or
and
xor
mov
pop
dec
data16
pop
cmp
add
into
in
sahf
jbe
adc
adcb
iret
fcmovb
push
shlb
cmp
cmp
push
in
aad
sbb
ljmp
test
mov
mov
mov
xchg
sub
jbe
push
jnp
jle
clc
inc
push
xchg
aam
cli
cmp
or
mov
aad
shl
movsl
out
and
cmc
ja
lds
push
rol
adc
push
out
cmp
push
sbb
jmp
mov
mov
mov
mov
sbb
pop
jg
pop
mov
mov
sti
clc
daa
sub
or
dec
push
ret
aaa
lds
fsubl
or
mov
popa
fs
ljmp
mov
pop
cmpsb
insb
or
jp
mov
jae
nop
inc
shl
lods
adc
mov
jne
arpl
pop
test
fisttpl
lods
jno
pop
loopne
scas
roll
mov
xor
lea
pop
dec
das
sbb
in
ja
mov
push
jb
sarb
xchg
push
andb
mov
stos
int
inc
sahf
mov
add
cmc
cwtl
jge
cmp
aaa
jnp
lds
shl
lods
adc
mov
dec
addr16
popa
xor
adcb
fsin
pop
dec
inc
sub
pop
ja
roll
sub
cli
push
push
jmp
inc
xchg
xchg
adc
sub
sbb
sub
mov
out
push
push
adc
jo
push
gs
std
pop
or
lods
mov
je
xchg
push
xor
and
das
test
push
ja
repnz
pop
mov
mov
lea
imul
mov
lods
mov
sbb
jp
loopne
push
inc
arpl
xchg
icebp
lret
int
dec
sbb
ret
mov
xor
mov
fcmovne
aas
std
mov
xchg
adc
stos
fcoml
mov
cli
js
xor
mov
jg
xchg
aas
jmp
jne
pop
inc
xchg
addl
nop
lea
testb
js
cmpb
call
pop
dec
into
mov
fdivrs
cmp
sti
in
adc
mov
dec
jg
jns
adc
adc
flds
inc
imul
je
sahf
xlat
jp
jg
cmp
cmp
xlat
dec
adc
or
cmp
aam
shl
jle
xchg
sub
imull
cld
test
loopne
mov
xor
repnz
dec
jl
mov
mov
xor
jne
rorb
movsb
and
pop
cmp
pop
jl
mov
add
repnz
adc
and
test
dec
jl
mov
mov
sahf
push
xor
push
sbbl
sub
pop
mov
test
and
insb
lret
cli
push
sbb
mov
movsl
xor
jmp
jne
mov
sahf
clc
mov
das
pushf
outsl
cmp
int3
fwait
push
inc
mov
jno
mov
cs
jl
hlt
aad
addr16
adc
xchg
lock
and
idivb
js
and
es
dec
cmp
ret
cld
insl
and
mov
mov
push
sarl
out
cs
test
filds
push
popf
aas
cmpsb
or
stos
das
or
jb
or
jne
wrmsr
jmp
or
fsub
push
mov
popf
push
aam
dec
mov
daa
lcall
pop
pop
lock
push
addr16
roll
push
jg
fstps
adc
test
mov
test
mov
fwait
shlb
sub
mov
sub
push
sub
mov
push
js
push
xorl
ja
shrb
stc
mov
out
daa
testl
xchg
xlat
jbe
out
push
sbb
cmp
pop
sub
ficomps
movsl
cltd
push
mov
mov
cmp
mov
xchg
mov
pop
sbb
mov
mov
and
push
insb
xchg
or
jae
mov
sub
push
adc
lds
jae
sbb
das
xor
mov
fadd
adc
js
nop
pop
movsl
add
mov
jnp
mov
mull
outsl
sub
add
cmp
ret
cmc
cmpsl
adc
jns
adc
ret
or
shr
fdivl
test
pushl
or
mov
loope
add
mov
inc
stc
cmp
or
shl
fidivrl
ss
xchg
leave
push
xchg
aam
fwait
jae
ja
nop
inc
je
lea
int
mov
lds
dec
test
cmpsb
loope
fwait
leave
adc
nop
cmpsb
and
push
inc
pop
sbb
pop
stos
jne
fisubs
xor
es
pop
push
pusha
sbb
pop
shrb
je
cltd
pop
lahf
xor
mov
pop
pop
sub
sub
dec
cs
mov
cld
das
f2xm1
cmp
fistps
cmpsl
arpl
inc
push
or
imul
mov
scas
call
push
fwait
repz
fldt
push
mov
jne
jae
nop
cwtl
ss
xchg
adc
sub
cmp
push
add
cmp
xor
mov
mov
rorl
sbb
daa
cmpb
ret
dec
cmc
or
sbb
or
mov
out
rcr
xorl
addr16
inc
out
lret
stc
popf
mov
aad
mov
push
mov
outsl
pop
js
js
inc
xor
cmpsb
lret
imul
loope
stc
or
xor
jmp
test
cmp
mov
ret
lock
loopne
imul
mov
je
test
jmp
jo
mov
sub
aam
mov
xor
push
es
sub
cmp
js
and
js
mov
test
bound
pop
sub
sub
aad
adc
push
dec
inc
fsubl
in
dec
cltd
or
pop
and
add
pop
sub
lret
and
fcoms
jecxz
int
cltd
in
in
test
bnd
sub
mov
outsl
adc
pop
push
movl
call
and
adc
mov
rolb
in
or
ds
add
xchg
adc
mov
stos
stos
stos
mov
cmpsb
pop
loopne
imul
inc
and
lock
xchg
or
xchg
test
roll
mov
or
xchg
push
push
fsubr
cmp
inc
imul
outsb
sub
iret
sti
aas
mov
hlt
dec
jmp
cmp
lock
push
cmp
add
sub
lahf
popa
mov
popf
cld
fimuls
jne
jnp
insl
addr16
jp
sub
ss
data16
pop
ljmp
jecxz
mov
pop
xchg
adc
lds
or
inc
pop
push
adc
adc
dec
cmp
mov
mov
mov
lret
pop
in
int3
int3
gs
xor
pop
mov
in
dec
sbbl
inc
outsb
mov
subb
adc
hlt
loop
sub
call
addr16
negb
loop
add
xchg
jmp
outsb
rolb
jbe
ret
xchg
popa
cmp
pop
repnz
jle
pusha
xlat
inc
insl
push
mov
adcl
sub
lahf
fcomip
or
shll
repnz
mov
jae
jno
addr16
cli
xchg
sarl
repnz
mov
push
inc
and
xchg
dec
pop
insb
sbb
pop
das
pop
into
negb
and
pop
jno
inc
outsl
sub
data16
mov
dec
or
ss
add
mov
and
and
and
push
aaa
insb
int
aad
in
rclb
fwait
sbb
pop
adc
pop
divl
push
gs
xor
sbb
pop
jae
stos
xchg
xchg
addl
adc
jp
cmc
cmc
mov
sbb
ljmp
pop
xrelease
sbb
aad
out
mov
test
data16
adc
cmp
ret
loop
movsl
lods
push
call
iret
xor
mov
push
shrl
mov
jmp
inc
bound
lcall
push
test
aas
test
or
out
fsts
cltd
xchg
daa
or
movsb
lret
push
inc
mov
popf
mov
sub
hlt
pop
iret
and
lret
add
dec
mov
cmp
sub
dec
xchg
neg
nop
int3
xchg
outsl
into
fdivs
jge
cmp
and
outsb
nop
mov
sbb
jecxz
cmp
hlt
or
pop
pop
insb
cmp
fmuls
mov
orl
sub
mov
mov
mov
sbb
xor
xor
sub
aaa
call
mov
data16
jle
incb
push
mov
mov
jle
repnz
int3
insb
xor
push
int
cmp
mov
sub
inc
dec
stos
inc
sub
pop
movsb
test
inc
xor
xlat
lret
pushf
loopne
sub
stos
mov
mov
cmp
imul
push
cmp
inc
shll
aam
cmpsl
sbb
push
fildl
mov
popa
mov
daa
adc
jmp
sbb
out
xor
fsubrs
lret
and
xchg
hlt
cmc
mov
cmp
fsubl
movsl
shll
or
mull
or
orl
jnp
push
loop
insb
sbb
pop
adc
sbb
xchg
xchg
jnp
shr
push
xor
arpl
out
push
jge
mov
movsl
pusha
dec
and
dec
scas
mov
xchg
push
in
push
hlt
mov
test
test
xchg
fistpll
xchg
inc
jo
call
sbb
fsubr
push
std
pop
arpl
cmpsl
push
push
xchg
or
in
dec
mov
sbb
adc
xchg
dec
sbb
imul
pusha
mov
dec
xor
cmp
test
adc
cmp
dec
cmp
xchg
lods
pop
aam
mov
adc
dec
cmc
iret
fdivrs
das
test
movsb
and
xor
cmp
idivb
out
mov
aas
pop
add
push
xrelease
cmpsl
or
mov
pop
and
rclb
push
mov
sbb
and
icebp
rclb
movsb
ficoms
push
jo
pop
out
push
ss
inc
dec
jp
lret
and
aaa
push
movsl
subb
daa
or
bound
lret
mov
pop
dec
jg
xchg
jo
pop
jmp
cmpl
dec
call
mov
into
cmpsl
hlt
pop
xlat
xchg
cmp
ss
sahf
cmpsb
xchg
mov
aas
dec
cmp
cmp
fcmovnbe
mov
aas
jge
pop
arpl
icebp
push
push
filds
insl
cld
repz
insl
and
repnz
les
aad
pop
inc
cld
pop
out
iret
xchg
popa
mov
insb
and
call
test
dec
js
mov
outsb
mov
fisubs
repz
push
call
movsl
popf
aaa
sbb
mov
daa
in
pop
out
sahf
adc
je
mov
push
or
mov
leave
mov
lret
mov
cmp
iret
lret
mov
into
jne
pop
mov
sbb
out
and
cltd
jge
movsl
dec
xchg
inc
iret
xor
inc
or
inc
add
adc
cmpsl
negl
incb
pop
je
mov
inc
fwait
mov
mov
mov
jge
mov
stc
divb
rclb
xor
jns
out
mov
aad
jg
das
cmpl
test
mov
adc
pushf
push
out
pop
cli
sub
dec
dec
lret
cmc
pop
sahf
ljmp
inc
insb
push
inc
rcrl
sbb
lds
xor
loop
das
inc
int3
xor
and
mov
pushf
cmp
pop
or
je
xor
rolb
aaa
sbb
fisttps
movsl
popf
mov
mov
fwait
push
adcl
xchg
cmp
sub
adc
pusha
loop
test
ret
cmp
adc
fsubl
dec
jae
mov
out
cmp
mov
add
inc
das
xor
push
mov
daa
mov
xor
out
xor
sub
negl
mov
in
jle
sub
mov
scas
mov
xor
xchg
adc
lds
stos
data16
push
inc
mov
mov
mov
gs
jmp
or
xchg
je
and
je
dec
mov
inc
test
xchg
mov
dec
sub
mov
or
testb
aas
loop
push
pop
out
pop
andb
fsubp
int3
mov
mov
in
cmc
or
in
cmp
fildll
and
dec
sub
push
adc
fadds
inc
sub
shlb
add
mov
lcall
mov
in
sbb
int3
pop
bnd
sbb
adc
sbb
xlat
ror
fdivrl
lahf
xor
rcll
or
xor
mov
aad
imul
cwtl
sbb
popa
sbb
or
pop
jge
inc
ret
pop
inc
stos
push
in
aas
mov
jo
out
pop
jg
mov
xor
ficoms
mov
fdivl
adc
sbb
sub
lods
and
or
cmpsb
pop
inc
divl
dec
cmp
and
call
sbb
je
mov
sub
push
arpl
enter
hlt
add
inc
sub
fiaddl
subl
mov
fmuls
fisttpl
jne
movsb
adc
ret
xor
sbb
std
mov
fcmovnb
jo
add
xchg
xchg
mov
ficoml
cmp
cmp
bound
in
rolb
negl
sub
sub
loop
xchg
or
or
sub
mov
mov
scas
jle
add
pop
mov
sbb
cmp
fwait
outsl
ficomps
ja
in
cld
adc
pop
inc
pop
jle
cmp
jne
xor
cmc
loop
dec
test
adc
lods
mov
test
inc
sub
sti
xor
jp
enter
cwtl
insb
adc
dec
ss
sub
rcrb
adc
push
bound
daa
mov
cmp
mov
arpl
loope
ret
dec
cmpsl
inc
push
lret
pop
ret
les
sub
aaa
bound
xor
push
and
fnstenv
ret
xchg
popa
mov
sbb
loopne
cltd
push
fnstsw
jne
mov
scas
jnp
xchg
jo
sub
pop
out
mov
pushf
ficompl
push
xchg
pop
dec
mov
sub
sbb
pop
repz
mov
add
adc
sub
jns
or
push
test
jns
push
push
sbbb
scas
rcrl
mov
shll
xchg
test
aaa
xchg
inc
ljmp
pop
or
mov
or
push
mov
lret
fscale
leave
negb
ljmp
std
call
mulb
push
aas
sub
mov
mov
pop
mov
sahf
jne
insl
push
mov
lret
push
lahf
scas
js
mov
ljmp
repz
lret
add
out
fistl
cmp
xchg
adc
cmpsb
test
push
mov
or
jb
imul
jno
mov
orl
aam
pusha
xor
hlt
lods
xchg
sahf
mov
movsb
sub
aaa
add
je
pusha
adc
out
dec
ljmp
lock
push
push
fiadds
sbb
sbb
inc
repnz
pushf
add
out
repnz
popf
jo
xchg
leave
add
mov
loopne
nop
popf
es
mov
adc
stos
shrl
mov
inc
pop
nop
adc
add
test
mov
and
outsl
and
stos
out
mov
sti
movsb
rcll
push
in
push
push
sub
push
push
int
pop
mov
ljmp
fmuls
dec
xlat
xchg
clc
mov
dec
enter
mov
adc
loop
in
jle
push
mov
add
int
mov
js
orb
and
mov
cmpsb
or
xchg
mov
gs
mov
add
jns
or
push
sbb
cmc
nop
sub
cmp
jnp
sbb
cmp
shrl
pop
sub
mov
mov
fildl
adc
pop
lcall
mov
sub
enter
dec
inc
or
outsl
je
pop
jns
cli
sbb
fwait
rcrb
aad
ljmp
das
xchg
jnp
xor
stos
outsl
fabs
imul
pushf
repnz
in
jb
test
sbb
mov
dec
aad
mov
jmp
add
lcall
test
push
test
sub
lahf
stos
mov
jb
fnsave
fcoml
hlt
call
aaa
lea
scas
fimuls
xchg
jo
hlt
ret
sbb
lret
mov
in
rclb
mov
and
push
into
pop
inc
push
mov
inc
out
and
mov
add
push
adc
nop
jle
hlt
adc
sub
mov
inc
cld
ss
loopne
pop
cmpl
fistps
mov
frstor
rcll
xor
or
sarb
xor
xchg
dec
inc
or
dec
lcall
adc
out
das
push
and
mov
jmp
cmp
and
mov
mov
push
add
xor
mov
sub
or
or
xchg
or
aad
inc
push
call
jg
bound
lds
xor
pop
test
and
testl
xchg
cltd
out
add
or
adc
outsl
shlb
adc
loop
jp
inc
push
mov
js
push
imul
sub
dec
push
test
js
test
mov
mov
arpl
in
gs
push
inc
cld
test
cmpsl
jg
lcall
cmpsl
ja
aam
mov
jg
das
push
cmp
leave
sbb
mov
daa
mov
inc
adc
orl
mov
sti
test
andl
pop
push
sbb
jne
add
rorb
mov
fistl
add
cmp
dec
subl
sbb
lcall
out
xor
sarl
sbb
addr16
loope
and
mov
pop
xlat
dec
sahf
cmp
push
repnz
repnz
push
add
xor
sarl
pop
iret
xchg
loop
mov
stc
fiaddl
inc
shlb
andl
xor
dec
add
je
test
jecxz
cli
popf
lock
mov
pop
je
daa
adc
nop
inc
mov
and
mov
sbb
adc
add
cmp
lret
jne
xchg
mov
or
lret
les
inc
out
test
jmp
push
add
dec
dec
adc
and
ret
test
stc
aaa
jne
jge
hlt
push
lods
cmc
inc
pop
cmp
pop
ja
lods
cli
in
mov
add
push
add
pop
out
add
adc
mov
repz
dec
jp
jbe
lret
loopne
sbb
shr
repnz
xchg
das
inc
iret
mov
push
push
pop
je
popf
in
test
mov
add
shlb
popa
sbb
jnp
pop
or
dec
rorl
dec
bound
imul
cmpb
int
fwait
inc
dec
sub
hlt
dec
stos
inc
lds
orl
jo
hlt
or
adc
loop
loopne
scas
jecxz
loop
cmpsl
out
loopne
leave
pop
iret
sbb
rcr
sub
mov
push
push
inc
loopne
xlat
movsb
cmc
scas
int
or
lods
push
sub
cltd
and
fwait
jl
call
cmp
jecxz
add
inc
movsl
outsl
fs
call
inc
jl
jnp
bound
test
xchg
mov
lods
dec
inc
xchg
xor
iret
popa
lods
fwait
sbb
inc
mov
ret
inc
jl
adc
pop
ja
mov
sub
add
ja
or
add
out
addr16
mov
fldenv
and
or
pop
mov
insl
pop
jge
sarb
jg
push
mov
xlat
sti
jl
test
stos
add
in
xchg
fildll
in
daa
fisttps
movsb
outsb
out
std
aaa
xchg
xchg
seto
clc
jp
es
lea
leave
jae
hlt
dec
daa
mov
pop
out
fldcw
mov
cmp
test
sbb
fisubs
insb
xchg
sbb
scas
push
insb
push
xor
rcrb
repnz
js
test
daa
jp
push
xchg
cwtl
pop
out
sbb
bswap
mov
call
cmp
enter
pop
cmp
adcl
jge
xchg
pop
fbstp
sub
in
cs
es
hlt
imul
flds
xchg
jmp
cmp
fsubp
sub
pop
rorb
cmpsb
push
insb
dec
pushf
and
cmpsb
jns
pop
adc
mov
and
into
mov
adc
dec
rorl
popa
fwait
test
xchg
push
and
dec
add
outsl
fldenv
xor
insb
adc
aad
push
mov
adc
xor
add
push
inc
movsl
cmp
ljmp
sub
sub
es
mov
icebp
fidivrs
sahf
sub
test
sahf
push
outsb
cs
gs
or
xchg
addr16
aam
pushf
iret
or
fiadds
jbe
inc
test
adc
sbb
mov
adc
xchg
imul
mov
mov
jp
xor
or
or
loope
loope
add
js
mov
jg
mov
xchg
cs
fs
stc
iret
dec
push
ss
movsb
jo
sbb
add
je
mov
lcall
sbb
popf
pop
loop
out
scas
mov
and
aaa
pop
lcall
test
bound
out
les
jo
and
icebp
xor
scas
arpl
lret
xchg
inc
and
adc
testb
shll
mov
pop
mov
je
jb
dec
or
popl
lcall
adc
cs
mov
inc
inc
repnz
dec
fadds
xor
imul
stos
push
rep
in
sbb
lcall
movsb
cli
lock
mov
mov
pusha
movsl
pop
mov
dec
push
imul
pop
cmpsl
push
dec
mov
faddl
push
imul
cmp
out
lret
outsl
add
ja
sbb
lods
add
in
aaa
sbb
loope
test
lock
push
pop
mov
cmp
arpl
mov
xchg
push
xlat
movsb
dec
mov
out
xor
test
scas
out
jnp
pop
aam
push
sbb
adc
adc
xchg
fs
jo
das
cli
or
mov
mov
scas
push
fucomp
loop
rorl
movsb
jne
sbb
add
fisubl
rcrl
xchg
xor
rcrl
cmpsb
cmp
dec
aad
cmp
push
es
lods
mov
cmp
cmp
call
loopne
pushf
pusha
push
ljmp
ret
push
dec
std
fsubrp
xchg
xlat
or
lods
xchg
lcall
or
icebp
inc
add
jp
sub
adc
in
loop
and
pop
adc
dec
icebp
inc
xchg
sub
sub
jo
int
aam
fisttpl
dec
sub
inc
out
inc
aaa
xchg
xchg
insb
stos
dec
hlt
dec
mov
repnz
jg
adc
adc
insl
call
xor
fcmovnbe
or
inc
sbb
xlat
xlat
sbb
imul
mov
pop
cmpsl
fdivs
cli
adc
xor
cmp
sahf
xchg
jecxz
push
andb
and
inc
push
jmp
in
lods
xchg
jl
xchg
loop
stos
dec
fwait
mov
std
xor
fdivl
lcall
dec
ret
mov
in
fisubs
jb
sbb
inc
addb
iret
mov
dec
or
data16
ss
xchg
cmp
data16
push
sti
dec
sahf
push
mov
rcrl
filds
into
lret
lret
call
cmpsb
ret
shll
push
jne
pop
pop
sahf
and
rcr
outsl
xchg
ja
enter
mov
cmp
aaa
xchg
adc
sbb
xorps
retw
divb
nop
nop
hlt
or
push
mov
ss
out
mov
nop
in
cmpl
xor
inc
and
in
imul
imul
pusha
pop
adc
adc
or
lock
xor
cwtl
ffreep
pop
stc
adc
inc
into
arpl
sub
add
aaa
sbb
cwtl
pop
insl
cmpsb
imul
and
mov
push
cmp
add
pop
and
mov
clc
fwait
push
sbb
pop
lret
xchg
fnstenv
jge
scas
and
xchg
fiadds
enter
cmp
xchg
outsb
inc
gs
dec
jl
scas
rorb
in
shrb
shll
outsb
pop
dec
pop
and
cmp
dec
incb
ret
imul
dec
xchg
sarb
adcb
lcall
mov
push
push
or
xlat
jae
std
rcll
enter
imul
inc
xchg
mov
lock
ja
fldenv
mov
je
mov
popf
pop
sbb
add
push
pmulhuw
push
test
andl
dec
jae
xchg
fwait
pop
lods
lods
cmp
xchg
xor
aas
mov
ficompl
ja
mov
mov
lds
stos
push
xchg
or
movsb
cmp
out
pop
into
shl
test
mov
imul
push
cmp
xchg
jo
ds
mov
sarl
mov
mov
inc
addr16
test
or
xor
dec
sub
xchg
in
aas
or
xchg
sbb
push
fdivrp
outsl
pop
xchg
sarl
dec
push
mov
lods
shr
xlat
cmp
pusha
push
adc
sub
jl
mov
cs
lods
cltd
stc
or
mov
pop
pushf
stc
cmp
sbb
cmp
sub
pop
and
inc
mov
adc
pop
mov
adc
mov
cmpl
dec
sub
cltd
cmp
aad
in
lret
push
adc
daa
iret
jns
cmpsl
dec
das
orb
add
pop
popf
adc
xor
adc
cmp
in
shl
xchg
rorl
mov
push
sarb
imul
and
mov
mov
mov
movsb
cmp
call
fidivrs
shll
hlt
shr
jecxz
cmp
orb
inc
stos
in
stc
fwait
ds
jmp
jae
jecxz
cmp
cld
xor
inc
out
mull
sbb
cmpsb
jecxz
xchg
mov
dec
repz
fstpl
mov
sahf
cvtpi2ps
mov
inc
mov
fs
mov
in
das
sbb
mov
jp
imul
inc
pop
pop
out
fwait
mov
imul
leave
push
lcall
rolb
xorb
mov
xor
cli
into
pop
mov
shlb
mov
cltd
push
movsl
xor
imul
jo
inc
iret
jo
xor
or
pop
inc
out
in
sub
mov
fmull
adc
pop
js
in
jnp
cltd
push
cmp
loope
je
push
and
sbb
aas
sbb
fdiv
out
inc
xchg
pop
sbb
ljmp
add
decl
jmp
or
adc
loopne
loopne
jle
dec
or
mov
push
dec
in
add
shl
imul
out
mov
sbb
stc
shl
sbbl
sbb
stos
std
lret
les
sbb
ret
sbb
mov
adc
aas
mov
cs
test
mov
add
inc
mov
sbb
ljmp
pop
hlt
icebp
xchg
pop
shlb
data16
or
dec
pop
mov
push
loopne
sbb
push
mov
cmp
outsb
cmpsb
fidivs
fsts
clc
mov
mov
enter
inc
mov
jnp
in
scas
mov
je
xorb
clc
xchg
dec
nop
jno
cmp
cwtl
jno
sti
jmp
or
in
or
cmp
int3
mov
enter
movsl
dec
mov
vmovhps
xor
shll
push
jo
daa
push
bound
mov
inc
add
bound
sbb
pop
popf
fsubl
inc
and
lock
jne
inc
mov
ja
hlt
push
mov
rolb
mov
lret
filds
cwtl
test
nop
je
cltd
and
dec
add
ss
cmp
rcrl
insl
in
into
arpl
stos
jmp
and
gs
popf
or
mov
imul
inc
jg
cld
or
cmp
jecxz
insb
lds
enter
push
mov
pop
add
data16
mov
test
or
rcl
leave
inc
adc
ss
mov
addr16
imul
int
imul
fistps
imul
inc
mov
mov
ljmp
push
aad
arpl
into
repnz
sbb
mov
shlb
or
ret
and
adc
sbb
ret
aad
test
push
scas
push
fiaddl
pop
sbb
jp
mov
inc
push
adc
mov
and
inc
mov
fdivrl
dec
mov
or
nop
cmc
or
lahf
sub
les
cs
or
mov
mov
xorl
jb
rcll
dec
mov
test
int
scas
jle
imul
jne
xchg
into
mov
lret
rclb
pop
out
jns
rorb
ret
jg
mov
js
out
jns
sub
and
ss
insb
sarl
mov
mov
mov
scas
push
repz
mov
push
or
cmpsb
mov
imul
sbb
or
jl
mul
rcll
mov
and
imul
or
pop
or
je
sub
xchg
repz
negb
and
lret
jno
cs
and
fiaddl
dec
adc
dec
les
push
sub
mov
stos
ret
inc
mov
roll
pop
aad
call
jb
and
inc
gs
mov
cli
mov
sub
inc
pusha
add
jge
dec
and
mov
push
mov
test
mov
mov
jns
lret
outsl
jbe
adc
jne
or
mov
insb
mov
nop
fdivrl
pusha
arpl
xor
cld
jge
rolb
ret
adc
mov
orl
push
les
inc
push
add
inc
jnp
cwtl
add
in
shlb
xor
mov
dec
leave
adc
in
ja
or
mov
xor
inc
loop
xlat
jmp
sar
sbb
and
xchg
int
enter
das
hlt
popf
sub
xor
mov
inc
xor
notl
add
push
xchg
cmp
inc
leave
test
pop
adc
pushf
out
adc
inc
bound
stc
aam
mov
lea
push
test
cmp
test
add
xchg
and
inc
or
or
mov
rolb
mov
mov
push
lods
hlt
sbb
cltd
dec
mov
mov
xor
mov
lea
inc
pop
test
outsb
shl
fnsave
ljmp
scas
mov
in
push
loope
movsl
jae
inc
add
cwtl
repz
jp
fwait
out
jmp
jo
popa
frstor
mov
mov
sub
dec
adc
push
scas
push
nop
sbb
add
mov
fiadds
push
xor
xor
andl
fidivrl
add
in
into
xchg
add
daa
ljmp
ret
xchg
push
xchg
dec
loopne
inc
jmp
cmp
aas
and
push
test
orl
jp
xor
hlt
in
inc
fnstsw
push
fstpl
mov
push
in
mov
dec
mov
lods
push
rolb
push
sbb
pushf
xchg
pop
adc
sbb
data16
and
mov
add
mov
inc
mov
nop
decl
dec
jo
repz
cltd
adc
dec
adc
fidivl
sahf
addr16
fwait
lahf
jmp
dec
out
sarb
scas
je
adc
fimuls
xlat
inc
or
test
lcall
add
mull
fdivr
inc
and
lret
clc
inc
sbb
cmp
rcrl
xchg
add
and
mov
cmpsb
jecxz
hlt
daa
dec
jp
pop
les
and
lds
mov
aaa
jb
int3
xchg
lahf
notl
ret
pop
add
mov
pop
ds
or
pop
imul
fnstenv
add
xor
adc
mov
pop
pop
repz
or
shlb
nop
sub
push
pop
movsl
test
std
inc
xor
inc
pop
iret
xchg
repz
xor
xchg
xchg
lock
lods
jo
xchg
movsb
mov
mov
push
mov
mov
xor
pop
fisttpl
ret
ljmp
inc
inc
lahf
loope
sub
sbb
push
push
sar
int
pushf
xchg
inc
push
mov
pop
lea
outsl
bound
cmpsb
mov
sub
imulb
xor
cmpsb
push
mov
dec
cmp
je
pop
test
xchg
xchg
mov
sub
imul
cltd
xchg
adc
mov
std
lods
mov
std
xchg
loop
cmp
xchg
add
mov
xor
in
mov
pop
cmp
test
call
loopne
fwait
pushf
add
fwait
mov
hlt
les
dec
lret
jne
cmc
adc
popf
cmp
aad
xor
addl
ds
dec
and
sub
dec
push
jp
out
add
out
mov
out
and
add
imulb
andb
mov
cmp
mov
add
jb
jne
daa
ret
addr16
popf
push
inc
xor
push
adc
sbb
int
cmp
dec
inc
aam
adc
arpl
in
jg
pop
sbb
dec
dec
jle
js
imul
in
dec
and
adc
mov
cli
sti
push
inc
dec
daa
test
jns
out
mul
mov
movsl
xchg
and
and
xchg
inc
test
jle
pop
ret
add
mov
xchg
ss
mov
lods
fucom
mov
add
stos
arpl
popf
dec
or
jmp
dec
in
scas
and
iret
pop
fldcw
pushf
sub
shrd
rclb
lret
daa
sub
lahf
mov
or
inc
cld
cmp
dec
jae
ljmp
dec
sbb
adc
stos
mov
sbb
sbbb
jp
fistpll
jno
adc
jae
in
mov
test
mov
ljmp
outsb
sti
xchg
push
lret
mov
push
dec
pushf
ret
add
or
sub
pushf
stc
mov
sti
mov
push
ja
scas
pushf
push
cmc
loopne
mov
sbb
divb
adc
cmp
jge
cltd
fisubs
mov
imul
jnp
pop
in
call
pop
and
jmp
adc
in
mov
clc
jns
mov
aaa
popa
cmc
ds
cmp
lret
fs
adc
es
enter
xchg
push
scas
fdivrs
pop
or
ds
loopne
xor
popf
sub
clc
icebp
ret
mov
push
fld
add
outsb
movl
mov
rcl
ret
or
sub
es
xor
lds
xchg
fisttpl
xlat
leave
mov
pop
sahf
inc
adc
ret
call
movsl
repnz
fmuls
iretw
in
xchg
add
and
bound
jno
ret
lods
stos
sbb
xchg
xor
mov
jle
ffreep
inc
adcb
mov
pusha
push
fcompl
dec
or
adc
mov
pop
cmp
push
dec
les
outsl
aam
sub
mov
rcl
loop
dec
cli
fidivs
scas
and
ret
mov
xlat
adc
mov
daa
cmp
outsl
dec
orb
jmp
add
add
movb
aad
mov
test
jp
mov
test
and
push
sub
xchg
fists
rcrb
in
mov
aam
cmp
lea
out
notb
iret
add
push
xchg
lock
add
or
jns
push
daa
test
cmpb
inc
xchg
iret
cmp
jbe
lods
or
mov
jae
inc
std
mov
ret
loopne
xchg
push
xor
dec
popf
dec
inc
adc
mov
ret
and
cmp
or
es
xchg
pop
inc
test
inc
sahf
jecxz
out
cmpsb
cwtl
push
lods
shrl
stos
push
sub
arpl
mov
adc
jecxz
adc
sar
mov
adc
mov
sarl
cmp
adc
inc
addl
push
rcr
jl
pop
inc
cmpb
repz
and
inc
dec
dec
cmp
mov
lret
push
xchg
adc
dec
sbb
xor
cli
or
shrl
stos
xor
or
cmp
fbld
cmp
xor
cwtl
cmp
sahf
dec
inc
sahf
jg
or
je
incb
pop
cmp
scas
push
in
enter
dec
mov
iret
les
jp
pusha
cwtl
leave
mov
in
out
xor
movsb
mov
test
clc
sub
push
push
test
divl
bound
fstpl
dec
jae
xor
push
dec
mov
fdivrs
out
lahf
add
xor
cmp
adc
pop
je
hlt
inc
iret
cld
aad
pop
jmp
mov
pop
jae
and
adc
pushf
and
or
in
addr16
or
out
addr16
jl
pop
test
subb
loop
dec
js
cli
sbb
mov
and
xor
cwtl
inc
lds
add
mov
jo
xchg
and
cmpsb
cwtl
and
mov
and
into
sti
leave
xorps
movsl
lahf
or
mov
mov
sub
sbb
lret
hlt
push
ljmp
add
stos
adc
mov
mov
inc
data16
xor
shrb
sub
mov
pop
and
xchg
je
mov
into
jb
jne
cmp
pop
ret
pop
ret
pop
in
lret
mov
bound
lods
leave
cmp
popa
test
jecxz
or
mov
std
adc
mov
sub
into
fs
repz
jns
sahf
push
push
rorb
sub
repz
out
clc
inc
or
and
ficompl
aaa
sbb
outsl
shll
inc
popa
add
xor
bound
out
mov
aad
mov
push
mov
into
xchg
frstor
sbb
sbbl
dec
sub
ja
fistps
xchg
mov
xchg
inc
adc
pop
ds
sahf
repz
xchg
add
mov
neg
jl
dec
cmp
cmp
sub
and
test
xchg
pop
ret
pop
scas
mov
or
jno
popa
filds
les
fucomi
mov
subb
xchg
dec
rcl
mov
das
shlb
loop
pushf
inc
cmp
pop
ror
adc
or
scas
lea
xchg
lods
fldcw
add
leave
push
or
int
dec
lahf
push
sbb
ret
xor
cmp
jbe
popa
or
jae
das
js
push
pop
push
test
aaa
sub
out
mov
or
je
adc
jecxz
jl
in
sub
movsl
inc
fs
insl
inc
pusha
sub
or
clc
sub
out
lahf
hlt
movsl
lods
xchg
push
or
out
nop
call
cmpb
cmc
int3
mov
bound
test
hlt
pop
jns
and
jne
sbb
dec
mov
scas
jmp
push
xchg
je
sbb
push
pop
rcrl
xorl
sti
stos
sahf
stc
fimull
or
mov
mov
mov
je
into
out
push
jns
inc
cltd
dec
loope
jb
push
jne
and
mov
mov
lock
js
mov
mov
xchg
popf
cli
out
and
pusha
mov
hlt
pop
xor
fiaddl
inc
inc
andl
jmp
jecxz
cli
lods
rcl
leave
ljmp
mov
fbld
pop
jp
push
push
xchg
insl
lods
dec
stos
shrl
stos
inc
xor
es
pop
jecxz
dec
fildll
cmp
movsb
fsubs
bound
adc
out
xchg
dec
pushf
mov
and
jno
lods
loopne
mov
pop
mov
sub
mov
dec
mov
jecxz
shrl
jnp
out
pushf
or
pop
pop
jle
ret
call
cld
test
ret
pop
aad
sbb
and
jle
sbb
into
mov
xchg
cli
ljmp
enter
push
sti
mov
mov
shll
push
jge
mov
cli
icebp
cmpsl
cmp
fsubrp
cli
jb
dec
mov
std
xchg
jb
xchg
mov
out
test
dec
into
sbb
aam
mov
popl
and
mov
popa
and
leave
mov
dec
aas
cmp
xchg
outsl
fs
mov
insl
js
sub
call
cltd
fmull
popf
and
xor
insl
inc
dec
cmp
push
jb
imul
fs
outsl
mov
xchg
ret
sub
xchg
inc
cmc
cld
in
and
or
sbb
lret
shl
jge
popa
shlb
inc
je
push
scas
test
cs
test
fcmovu
cli
jg
jmp
mov
leave
dec
test
pop
and
and
pop
scas
cs
test
jne
cmp
and
dec
push
or
jl
and
mov
int3
mov
in
xor
out
lcall
jo
loopne
pop
xor
fs
xchg
sbb
mov
or
inc
aad
icebp
inc
lahf
pop
mov
pop
orl
pop
inc
in
repnz
push
mov
push
add
pop
xor
cmp
cmp
psubusw
or
int3
mov
test
push
shl
fdivr
mov
stc
out
xlat
and
or
test
pop
imul
inc
ja
mov
fisttpl
cmp
test
mov
sbb
aas
test
dec
lods
call
xor
mov
xor
xchg
test
cmp
or
loope
loop,pn
push
push
ljmp
stos
out
rclb
jns
mov
sbb
aad
mov
fsubs
dec
cltd
lcall
bound
das
jle
cmp
movsb
add
outsl
inc
sbb
ret
test
ss
sub
cmp
jle
nop
pushf
jbe
jge
cmp
fcom
int
fnsave
loopne
sbb
iret
xor
inc
mov
jb
test
pop
js
loopne
subb
lods
mov
cmp
pop
rcl
movb
repnz
sub
xchg
inc
xchg
out
sub
scas
jne
int3
sub
and
lret
stc
and
pop
cmp
shll
mov
inc
fistl
lahf
aad
mov
icebp
or
mov
cmp
lcall
push
push
push
mov
hlt
dec
pop
sub
andb
pop
loop
int3
adc
mov
cmp
les
adc
sub
xor
movsb
mov
dec
out
stos
pop
ja
adc
jecxz
jns
sub
mov
and
pop
out
cmp
xor
xchg
mov
ja
daa
repnz
inc
popf
cmpsb
sub
mov
fistps
xor
shll
mov
sbb
xor
xor
cmp
out
sbb
aam
add
fildl
dec
lret
loope
lds
loopne
in
push
lret
add
xor
out
outsl
addr16
mov
cmpsl
adcl
xchg
imul
test
add
pop
aaa
lea
add
adc
rolb
push
mov
push
or
out
or
rorl
int
add
fcom
cli
inc
lret
aam
push
inc
add
xor
push
jg
lea
mov
sub
cltd
fstpl
sub
in
fs
in
push
jnp
movsb
and
lea
push
rcr
adc
xchg
icebp
cmp
push
or
rorb
jne
mov
adcb
aad
mov
cmc
test
loope
subb
fadds
xchg
cmc
aas
cmpsb
pop
mov
mov
test
out
rorl
add
jg
fsubl
dec
fisttps
arpl
push
push
jle
push
xchg
adc
lock
and
aaa
or
xchg
xchg
or
xchg
push
nop
dec
cltd
roll
push
jbe
shlb
outsl
xchg
imul
mov
mov
cmp
cltd
mov
int
cli
or
mov
sub
adc
popa
inc
inc
push
jb
outsb
adc
icebp
push
je
shlb
sbb
jle
lea
sbb
paddsw
pop
sub
addr16
hlt
cmpsb
dec
shrl
xor
lea
pusha
jmp
dec
popa
sub
es
ljmp
sbb
jno
sub
mov
add
orb
jno
mov
ror
sub
sub
popa
inc
into
clc
mov
test
push
adc
xor
imul
jns
xchg
cmp
cwtl
ret
xchg
push
cmc
addr16
mov
mov
pop
mov
loope
fnstcw
sub
or
insb
adc
lahf
cmp
push
xchg
jo
pop
lock
test
mov
mov
loopne
cmp
ret
sub
fadd
sub
push
pop
leave
test
test
addb
ret
mov
pop
std
add
leave
cld
push
clc
movsl
rclb
fnsave
add
out
cmp
xor
lock
and
pxor
ds
imul
push
out
xchg
xchg
dec
ja
cmpl
rorb
loopne
sbb
and
and
stc
and
test
loope
popf
cmp
xchg
jle
push
mov
into
std
add
adc
in
rcl
cmc
mov
sub
fstpl
sbb
jmp
jne
jae
push
jbe
out
sub
xlat
gs
cwtl
mov
movsl
xchg
add
and
jecxz
hlt
icebp
or
mov
cltd
mov
xchg
adc
in
inc
aam
push
leave
addl
xlat
jmp
inc
pop
scas
mov
out
aas
push
push
adc
and
cmp
lcall
jp
int
ret
in
bound
addr16
popa
cltd
test
iret
fists
mov
insl
jne
dec
inc
jno
hlt
lahf
xchg
xor
cwtl
xor
fidivrl
lret
push
daa
loope
jecxz
shlb
decl
sti
stc
sbb
fldt
pop
xor
loopne
mov
sub
xor
fcomi
xchg
jb
insb
addr16
add
aam
push
popf
push
enter
call
or
cwtl
movsb
lret
dec
clc
mov
pop
sbb
test
mov
adc
aaa
xor
sbb
mov
xchg
cmpl
fcmovnb
aaa
js
jo
iret
dec
sahf
mov
in
cmp
xlat
sbb
cwtl
aas
jge
mov
pop
cs
mov
adc
jecxz
incb
mov
lret
add
ljmp
or
enter
xchg
stos
call
jp
mov
insb
cmpsb
out
or
cld
xor
movsb
add
jle
lret
daa
cmp
pop
jmp
dec
xchg
add
into
adc
xlat
addb
inc
setnp
jno
roll
daa
jne
and
in
ds
jno
imul
xor
pop
jo
insl
mov
cmp
sbb
sbb
xor
xchg
sub
lods
mov
or
xor
sub
mov
fdivrs
sbb
ja
popf
test
pop
and
jo
out
orb
sub
xchg
xchg
mov
cltd
xchg
repnz
push
mov
pop
popf
in
xchg
ficoml
xor
decl
arpl
les
adc
pop
dec
mov
pop
dec
out
leave
mov
rcrl
cmpsl
enter
mov
aaa
or
movsb
jle
mov
sbb
mov
mov
or
lea
loopne
cmpb
lea
cli
lods
sbb
jg
mov
fisttpl
call
clc
fs
pavgb
push
xchg
adc
rcrb
sbb
loope
cmp
stc
fmul
xor
in
push
rep
mov
pop
test
ja
mov
ljmp
lret
push
pmaxub
sbb
xchg
adc
mov
std
push
clc
inc
sub
pushf
iret
insl
stos
push
lods
add
or
gs
bound
repnz
adc
nop
cs
stc
nop
inc
adc
data16
jns
sti
mov
inc
in
adc
push
jne
adcb
push
bnd
fistpl
aad
sub
lcall
xchg
mov
lock
add
or
stc
fstl
bnd
cs
jg
push
xor
xor
ja
out
and
ror
sti
cmp
rcrl
and
pop
jg
mov
notb
mov
pop
gs
inc
xlat
mov
adc
mov
dec
test
imul
sbb
hlt
aad
dec
lahf
adc
or
outsb
jbe
inc
notl
popf
dec
inc
stc
les
faddl
jle
pop
inc
mov
enter
push
iret
xchg
sub
outsb
pop
rep
es
std
das
repnz
das
and
out
pop
sbb
mov
ret
mov
popf
loopne
hlt
ficoms
shl
adcb
fs
imul
rcrb
inc
sub
mov
sar
cmp
sbb
add
test
xor
inc
mov
cltd
xor
xchg
fs
lcall
jge
pop
bound
dec
les
sub
orb
nop
js
test
lea
in
and
mov
in
inc
and
xchg
iret
push
mov
inc
mov
popa
jnp
in
ret
xchg
cwtl
cmc
jb
jp
push
test
sbb
insl
insl
push
icebp
xor
mov
pop
std
aam
int3
pop
divb
pop
in
daa
sub
fildll
loop
addr16
int3
sbb
loope
push
xor
xchg
push
sarb
loopne
or
out
clc
into
subb
stos
mov
mov
inc
mov
pop
or
jg
or
pushfw
aad
mov
out
mov
push
cmp
mov
add
nop
push
xchg
adc
push
test
jae
cli
add
fsubs
cmp
sysexit
mov
jmp
xor
or
and
jo
cmpsl
jle
push
notl
or
cmp
xchg
sbb
clc
es
dec
push
mov
stos
and
jg
out
into
fstpt
test
xchg
pop
mov
adc
mov
call
lret
in
jge
jnp
push
sbb
push
cmp
jae
xlat
cmpsb
loopne
outsl
in
push
add
mov
lock
dec
xor
in
cmc
xor
jb
cmpl
rolb
int3
stc
sbb
mov
stc
popa
mov
dec
xor
aaa
je
or
cmpsb
btr
clc
sahf
sti
sub
mov
lods
push
sub
xchg
mov
xchg
cmp
xchg
fimuls
lds
mov
cmp
mov
fsubrl
lock
ja
and
mov
dec
decl
cmp
imul
movsb
ds
xchg
inc
inc
sub
mov
fimull
push
push
fsubrs
outsb
sub
push
lcall
mov
repnz
xchg
shr
mov
cmc
sti
addb
cltd
popf
pop
xchg
add
add
test
mov
mov
pop
mov
shll
mov
mov
cmc
pop
mov
mov
fs
mov
pop
mov
xchg
insb
mov
insl
fs
add
cwtl
out
jbe
pop
daa
xchg
mov
mov
push
cmc
add
scas
and
fdivs
mov
mov
test
mov
push
inc
dec
jnp
pop
sub
pop
pop
sbb
and
subb
sti
sbb
outsb
mov
xchg
loope
sbb
cld
push
loopne
sub
jge
and
std
dec
int3
notl
lahf
pop
dec
mov
fisttpll
es
jp
psrld
nop
sbb
notb
sarb
aaa
push
fsubr
lret
fisubl
stos
xor
mov
xor
icebp
xchg
jo
xor
mov
adc
jle
mov
push
xchg
mov
jo
addr16
movsl
sbb
mov
mov
xor
mov
push
mov
pop
adc
mulb
adc
dec
int
sbb
mov
xor
rol
jns
mov
aas
stc
push
sahf
push
mov
sahf
ss
cmp
imul
xor
aas
shrl
frstor
daa
mov
xchg
mov
clc
imul
xor
mov
and
dec
fidivs
movsb
sub
imul
or
aam
push
out
ret
adc
aad
push
scas
xchg
insl
mov
pusha
ds
sub
mov
out
ficoml
scas
pushf
bound
outsl
xor
out
jns
xchg
dec
jmp
out
mov
mov
jp
aaa
fwait
int3
cwtl
adc
mov
adcl
and
aas
in
mov
cmpb
ljmp
push
jg
sbb
inc
push
lods
ror
jecxz
add
mov
imul
sub
inc
lret
out
insb
mov
xor
repz
or
addb
sbb
xchg
test
sahf
jmp
pop
test
das
jmp
pop
inc
popa
dec
shrl
std
lea
cmpl
jmp
pop
aam
adcb
jo
mov
and
push
cwtl
cmp
push
daa
jb
pusha
sbb
movsb
stc
push
xlat
push
xor
movsb
mov
jge
add
jl
mov
pop
and
cmp
clc
mov
inc
loop
and
shrl
cmpsl
lret
push
jno
int3
aam
std
fs
bound
jecxz,pt
jmp
cmp
lods
int
xor
add
mov
es
shl
dec
sbb
lods
cltd
insl
mov
pop
repnz
pusha
insl
or
call
mov
out
add
je
jp
jnp
mov
cmp
sub
mov
add
hlt
movsb
ss
out
test
in
xchg
out
ljmp
xchg
stos
adc
popf
shrl
mulb
ljmp
adcl
test
sub
and
or
int3
sbb
sbb
aad
mov
jno
les
mov
jb
imul
addr16
sbb
xor
stos
sbb
or
and
inc
dec
sbb
fstps
inc
add
das
push
scas
push
jg
and
cmpb
jnp
pop
sbb
and
pushf
cmp
lcall
imul
or
in
mov
inc
mov
pop
addr16
js
cmp
rclb
or
movsb
call
push
cs
adc
sbb
pop
cli
loop
rcll
ret
push
mov
es
push
cwtl
xor
data16
fisubs
jmp
lret
in
dec
fs
enter
sbb
xor
inc
daa
jl
in
inc
dec
sti
test
inc
movsl
call
push
scas
mov
and
jp
test
aaa
lret
mov
push
pop
mov
jno
adc
add
mov
mov
xor
push
fists
fs
and
inc
sub
outsb
cltd
add
or
push
mov
lods
orl
push
dec
or
mov
adc
fisubrs
aad
stos
or
enter
rorb
xor
out
sbb
out
push
ja
adc
ret
inc
push
or
lds
jb
popa
xor
insl
or
pop
sub
inc
push
sub
ret
mov
clc
out
add
das
das
mov
xor
xchg
push
fsubl
sub
mov
dec
loope
mov
je
test
mov
ss
shll
pop
pop
mov
mov
lahf
xor
cmp
imul
sub
inc
or
inc
test
lods
ja
xor
in
sbb
cmp
stc
clc
fnstenv
or
cmp
out
wrmsr
in
pusha
push
mov
or
xorb
add
xor
jne
pop
nop
or
fsubrs
sahf
mov
push
popa
add
mov
pop
scas
dec
arpl
push
out
dec
inc
hlt
mov
clc
mov
mov
sti
and
jnp
in
pop
aas
lock
rcl
arpl
std
into
in
inc
icebp
add
pop
lahf
jnp
pop
shll
iret
cwtl
aam
push
lods
movsb
xchg
xchg
push
sbb
popf
enter
cmp
das
out
push
nop
inc
pop
pushf
test
hlt
xor
and
lret
mov
or
std
mov
mov
pxor
lock
es
mov
jmp
pop
dec
cmp
dec
push
jns
aam
ds
push
popa
jg
stos
nop
dec
jb
or
sti
sar
push
scas
fs
mov
comiss
aas
es
int
push
pushf
sbb
sbb
pushf
repz
mov
mov
pop
mov
sub
mov
pop
popa
fcoms
mov
lods
adc
sub
cmc
leave
iret
lret
cmc
sbb
rolb
idivl
fwait
je
test
repz
loop
jmp
cmp
add
out
repnz
shrb
jbe
addr16
rol
adc
xor
pop
insl
leave
insb
jecxz
sbb
adc
sbb
xchg
pop
or
inc
dec
mov
jae
cli
out
push
mov
rolb
xchg
fists
xchg
inc
and
sbb
sbb
pop
jbe
je
cltd
add
xor
mov
dec
sbb
dec
or
mov
int
into
imul
add
mov
lahf
push
jae
pop
xchg
sbb
cmp
adc
fwait
or
out
push
xchg
out
out
fstl
cltd
ficomps
js
cli
xlat
xchg
pusha
jl
sbb
int
out
inc
push
popa
xchg
lret
adc
xchg
and
inc
fisubrs
mov
sbb
sbb
ret
outsl
push
adc
xlat
out
sbb
jnp
bnd
jg
orl
sbb
outsl
mov
dec
pusha
adc
mov
ret
lods
push
xchg
pop
psrld
fwait
ds
popa
pop
push
aaa
pop
popf
cmp
insl
pusha
lds
sub
lcall
mov
dec
jns
stc
push
push
gs
pop
fisttps
add
fimull
pop
sti
ljmp
fidivrl
mov
mov
lret
pusha
add
cmpsb
flds
pop
xor
outsl
sbb
movsl
mov
cmp
popa
fidivs
xchg
movsl
int3
mov
jmp
je
lods
imul
cmpl
add
push
stos
sbb
push
jmp
mov
push
aam
in
adc
sub
push
inc
jmp
fiaddl
loop
cmpsb
mov
movsl
fimull
push
xlat
je
add
fnstenv
out
adc
scas
outsb
mov
pushf
cmp
xchg
test
mov
movsl
out
repnz
dec
es
out
mov
in
addr16
popf
into
clc
jg
cwtl
jg
cmpsl
jns
test
mov
adc
iret
pop
roll
mov
xchg
test
cmpsb
mov
jecxz
cmc
mov
xchg
into
push
int
xchg
pop
add
scas
xchg
adc
inc
sti
leave
xchg
imul
mov
out
jnp
adc
mov
xchg
sarb
mov
out
pop
jno
mov
aas
mov
adc
movsb
call
pop
xchg
shlb
shlb
cmpsl
push
mov
mov
add
pop
sarb
inc
bound
dec
pushf
xor
mov
and
popf
shlb
inc
lods
adc
push
mov
and
pop
adcb
jecxz
loopne
cmp
dec
in
cld
or
pop
mov
aam
sub
dec
xchg
sub
sub
adc
jmp
xchg
mull
mov
fnstcw
into
cltd
popa
incb
les
push
lods
mov
jb
insl
push
bound
pusha
sbb
xchg
repz
adc
xchg
out
testb
mov
test
int
cltd
aas
stos
mov
cmpsb
imul
sub
ss
xlat
into
jnp
mov
test
jg
mov
test
popf
inc
jle
mov
jle
push
mov
insb
add
cmpsl
xchg
lods
dec
cs
xchg
xchg
push
addr16
add
insl
sub
ja
xor
inc
or
xor
pop
les
fcompl
mov
ret
stc
add
mov
xchg
bound
test
lock
stos
mov
xor
cmpsl
or
or
pop
add
dec
add
aas
insb
pop
cmp
stc
xchg
int3
subb
rcrl
pop
sub
mov
cmp
aad
sarl
or
nop
push
pop
sub
subb
out
dec
pop
jl
lods
cmpsl
pop
lock
scas
push
push
jnp
sub
mov
and
cmp
sbbb
xor
and
cmp
mov
sub
inc
sub
dec
in
daa
imul
into
popa
xor
and
cmp
inc
mov
sbb
fdivrp
sbb
push
mov
out
insb
mov
dec
std
imul
pop
jp
inc
cmp
cs
jae
dec
cld
fs
out
xchg
test
insl
adcb
inc
pop
xlat
cwtl
cmp
das
pop
sub
or
sarb
or
movsl
sti
mov
int3
inc
jb
xor
das
pusha
popa
jb
mov
adc
mov
movsb
mov
scas
xchg
rcr
push
pop
push
xchg
outsb
movl
dec
fcomps
test
mov
ret
test
leave
xorb
arpl
js
jg
pop
push
sbb
push
mov
in
mov
mov
mov
in
jp
and
push
mov
mov
mov
cs
outsb
roll
shrb
cmp
loopne
popa
cmp
pushf
add
aas
rdmsr
bswap
mov
outsl
outsl
fistl
loop
addr16
add
je
push
pushf
sbbl
daa
fisttpll
jge
mov
jne
adc
jb
loopne
or
pop
mov
out
out
adc
lret
jle
xor
sub
xor
sbb
pop
pusha
pop
push
add
sbb
pop
mov
push
push
xlat
pop
jp
sub
frstor
outsl
fcmovb
sahf
int3
mov
cld
pop
mov
bnd
push
cmpsb
and
pop
mov
sbb
cmp
in
outsb
push
inc
cmp
push
adc
repz
fisttpl
cltd
lahf
xor
pop
jp
aaa
call
mov
lcall
xor
test
or
stc
scas
movsl
mov
pop
or
inc
push
nop
test
lea
ret
add
cld
sahf
insl
andb
adc
jl
adc
adc
fwait
daa
push
loope
enter
pop
inc
jns
xor
fstps
test
lcall
lods
call
or
and
lret
fs
fs
xor
lahf
adcb
sbb
rclb
pop
call
rcrb
jg
mov
xor
cmpsb
xor
rolb
into
dec
fmuls
mov
out
adc
push
sub
callw
cld
dec
push
insb
test
into
in
ror
mov
aad
xor
add
fidivrl
adc
pop
jecxz
sti
aad
mov
int
xor
fisttpll
aaa
je
xor
aas
test
fldt
jns
mov
pop
sbb
pop
nop
cs
hlt
out
push
mov
leave
mov
xor
xchg
lea
mov
repnz
test
aad
mov
arpl
aaa
sbb
je
outsb
push
xchg
mov
mov
pop
or
push
test
loopne
push
add
mov
mov
sahf
cmp
push
out
pop
push
pusha
push
and
outsb
add
push
ja
test
shl
mov
jl
mov
xchg
xor
or
pcmpgtd
rcrb
dec
xor
fadds
idiv
inc
add
ljmp
mov
mov
fimuls
cmpsl
adc
pop
add
jmp
mov
cli
int3
outsl
in
sti
mov
xor
add
sbb
ret
ljmp
es
inc
mov
lea
xchg
mov
push
int
in
adcl
or
mov
loop
mov
test
call
pop
jecxz
mov
out
mov
ljmp
pop
adc
icebp
cli
jle
mov
mov
bound
pop
lock
movq
mull
lret
cli
icebp
push
xor
scas
adc
in
ret
mov
mov
mov
mov
roll
addl
in
inc
stos
movsb
int
bound
inc
add
stos
stc
mov
inc
movsl
dec
cmp
rorl
or
dec
jle
mov
je
neg
inc
gs
sub
mov
out
lret
push
jecxz
ret
adc
mov
push
jg
in
sub
jnp
mov
fstl
sbb
jl
js
xor
fadd
insl
sti
jae
std
xlat
adc
lods
lods
mov
hlt
xchg
mov
or
mov
or
fidivrs
push
cmpsl
cmp
ret
sti
xor
pop
or
lods
lods
cmpsb
adc
mov
mov
mov
ja
mov
xchg
inc
mov
fistl
inc
pop
hlt
pushfw
sub
and
pop
pusha
xlat
jnp
sbb
mov
jecxz
in
jae
aam
pop
imul
fs
dec
add
pop
insl
fistpl
ljmp
pop
adc
cwtl
roll
lret
fsubs
gs
pop
stc
sbb
out
and
jp
std
pop
and
push
and
jecxz
shll
jnp
popa
or
loope
sbb
xchg
stc
loopne
inc
push
jg
jns
mov
pop
or
stos
scas
sub
fmuls
mov
cmc
dec
push
sti
cmp
cmp
enter
jb
or
stos
sbb
pop
adc
pusha
add
fsubs
mov
aad
mov
adc
sub
dec
cmp
push
les
lods
add
inc
add
push
jle
int
imull
shld
mov
push
ljmp
pop
fstl
add
sub
jb
imul
lahf
call
and
lods
xor
test
or
mov
add
add
in
cltd
pop
mov
and
jbe
cmp
aas
push
ja
lea
or
xor
mov
xchg
mov
inc
add
aas
pop
fs
call
lret
add
lock
xchg
xor
jne
insl
in
cli
frstor
pop
mov
out
fdivl
rolb
push
sbb
aaa
cmp
fmulp
dec
rorl
lcall
xchg
in
std
and
es
mov
sub
dec
xor
loop
and
dec
push
cmp
push
repz
lods
inc
ss
xor
xchg
mov
push
loop
je
shlb
push
push
test
pop
jns
or
xchg
lods
adc
es
psubw
xchg
inc
push
and
push
mov
repz
ds
leave
fldcw
jo
lods
jg
mov
nop
mov
fucom
sbb
mov
xor
sub
pop
or
movsb
fcompp
adc
push
test
push
mov
cmp
inc
fnsave
je
cmpl
pop
fcmovnu
jbe
ret
mov
loopne
test
mov
in
scas
inc
ficomps
adcb
psllq
lahf
xchg
shlb
imul
imul
inc
mov
lret
test
xchg
or
lods
cld
dec
sbb
push
imul
inc
pop
sbb
clc
add
es
outsb
pop
dec
pushl
jnp
inc
inc
in
in
pop
xchg
cltd
mov
pop
hlt
sub
aad
stc
inc
pusha
xchg
cmpsb
push
jbe
adc
aaa
leave
sub
jns
cmp
int3
femms
sub
in
in
fiaddl
pop
into
ror
sbb
cmp
fwait
loop
dec
jmp
or
mov
mov
pop
add
sbb
push
in
sub
sahf
pop
decl
pop
int
test
ret
mov
add
mov
flds
fs
pop
mov
push
sbb
sub
sar
js
hlt
hlt
mov
decb
out
add
pop
or
xor
push
sub
pop
push
add
mov
pushf
call
mov
cwtl
mov
mov
and
adc
xor
xor
dec
jo
nop
mov
xor
loopne
dec
cmpsl
jb
cmp
dec
jns
popf
mov
test
push
jnp
fstps
fists
push
mov
mov
jg
dec
xor
ret
popf
dec
loop
or
cmp
push
lret
and
push
xor
dec
xchg
adc
push
imul
mov
xor
js
in
test
scas
imul
push
push
xor
sbb
nop
lret
movsb
lods
push
cmpb
xchg
sbb
inc
ret
cmp
sbb
scas
cli
mov
fdivrp
adc
inc
push
repz
call
pop
lcall
imul
jecxz
jl
ret
mov
mov
and
xchg
incb
xchg
repz
xchg
pop
xchg
sbb
insl
inc
cmc
fwait
outsl
cmpsb
lock
and
jg
lock
lret
es
mov
test
out
ljmp
cld
sbb
stos
push
aam
pop
ret
jmp
push
mov
pop
out
mov
in
lret
in
sbb
push
cmpsl
xchg
out
outsl
adc
sbb
cld
gs
sbb
pushl
je
cltd
faddl
adc
arpl
mov
dec
xchg
dec
sar
das
repz
pop
adc
cmc
sbb
xchg
cmp
mov
sarb
add
lea
push
movmskps
mov
pop
mov
xor
ss
shrb
mov
iret
gs
push
pop
add
cmpb
mov
and
sub
or
and
clc
daa
mov
inc
jnp
decb
aaa
xlat
xor
pop
jp
sub
sbbl
or
inc
push
xor
imul
shll
pop
sbb
pop
rclb
inc
ss
iret
stos
jae,pn
sbb
fsubs
icebp
clc
and
add
adc
push
movsl
dec
adc
stc
or
fucomp
lahf
into
and
clc
cli
insb
push
and
jbe
inc
jo
xor
inc
fs
loop
mov
sarb
mov
add
pop
and
dec
jmp
pop
mov
dec
fcmovnb
mov
je
loope
dec
cmp
ret
or
and
stos
rolb
mov
pop
push
pop
repnz
jle
cmp
inc
jg
fdivrs
lods
and
cli
inc
and
sbb
lods
fisubl
icebp
out
mov
insb
sub
fwait
daa
int3
test
test
or
shrl
mov
lret
icebp
cmp
cmp
sbb
mov
xchg
mov
push
xchg
sti
jnp
push
pop
div
jp
mov
xor
jne
lods
pop
aad
add
and
xlat
and
dec
add
xor
xor
mov
bound
stc
out
push
loopne
adc
mov
sbb
test
jbe
mov
aad
aad
gs
in
and
sbb
mov
testb
and
rolb
jle
cmp
and
xchg
push
icebp
js
mov
lds
repz
lock
sub
cmc
pop
sub
cli
fs
sub
sub
out
push
and
dec
mov
and
add
dec
pop
je,pt
rcpps
push
push
push
andl
dec
pop
loop
pop
mov
vpackssdw
test
push
insl
add
insb
pop
xchg
jns
pushl
xchg
lods
scas
mov
aas
shlb
in
push
dec
adc
outsb
incb
sub
cmp
subb
daa
imul
cmp
inc
test
fistl
push
adc
cwtl
xchg
mov
cmpb
push
addr16
or
jb
pop
fs
lea
daa
dec
es
inc
jns
stc
and
pop
xor
jb
sbb
push
cmp
mov
fnstsw
push
pop
xchg
jno
loope
and
add
dec
fidivs
fisttpl
xchg
mov
mov
fisubrs
push
inc
add
add
xor
lds
and
sbb
or
sub
pop
ret
cld
sub
push
pop
outsb
inc
mov
mov
pop
xchg
jno
and
inc
adc
adc
faddl
adc
jl
dec
xchg
ljmp
movsb
dec
fsubrp
dec
fwait
jb
inc
sbb
lea
hlt
notl
pop
out
outsb
repz
gs
ss
nop
push
lods
in
mov
fldt
push
pusha
movsl
fsubl
fs
sarb
popf
mov
xlat
int3
mov
jo
xchg
mov
push
mov
xor
loop
out
arpl
int
insb
jecxz
ss
xor
loop
mov
icebp
imul
int
les
add
mov
pusha
jae
pop
imul
fbstp
icebp
popa
sub
dec
mov
or
cmp
int3
adc
ret
pusha
lea
aad
sub
outsb
loop
jno
out
jp
jb
mov
pop
adc
ljmp
jle
test
cmp
outsl
mov
jno
std
jno
imul
push
fcom
lahf
insl
sti
adc
test
cmpsb
repnz
pop
dec
or
jbe
lods
int
sbb
lds
xlat
ja
mov
or
fsub
cli
inc
iret
sub
fwait
mov
fs
in
imul
lcall
je
aas
clc
fisttps
adcb
mul
sti
div
push
xor
sbb
adc
popa
push
addr16
or
cmp
and
pusha
int
fdivrl
or
pop
cmc
lcall
jl,pt
aad
xchg
repnz
jne
and
and
sbb
ljmp
sti
ja
lea
pusha
jne
push
sahf
scas
in
shrl
outsb
push
cld
or
cmp
inc
xchg
pushl
pop
push
mov
pop
or
adc
outsb
adc
xchg
pop
cmp
pop
sbb
outsl
rol
mov
fdiv
inc
pop
cmpsb
fnstcw
inc
mov
jae
inc
test
push
or
xchg
push
xchg
adc
shlb
dec
stos
jle
xchg
outsb
mov
pop
push
sub
pop
mov
in
mov
jmp
negl
pop
testb
adc
loop
and
jne
fdivr
test
lods
enter
mov
or
add
jb
cmp
cmpsl
push
lret
ret
idivl
sbb
testb
inc
ss
cld
or
pop
cmp
sbb
dec
or
mov
cli
lcall
das
cwtl
clc
mov
dec
ja
pop
cmc
mov
xor
sub
push
adc
lahf
jl
push
mov
or
mov
pushf
pushf
mov
ror
xchg
scas
sbb
out
push
test
xor
and
mov
adc
sarb
sti
icebp
aas
insb
adc
repz
inc
fxch
je
repz
xchg
cmpsl
sahf
movups
sub
inc
add
xchg
cmp
aam
adc
mov
mov
sub
dec
popf
dec
jp
lods
fwait
adc
aas
jns
jl
in
push
dec
cld
push
sbb
mov
sahf
and
and
mov
aaa
lods
rcl
data16
mov
fmull
out
pop
jb
je
push
mull
gs
scas
add
stos
hlt
pop
sbb
addb
adc
das
mov
add
daa
lea
dec
or
test
call
push
adc
and
je
je
dec
loope
xor
push
push
dec
repz
lods
inc
pop
inc
clc
jl
fsubrs
call
xlat
in
ret
lcall
jp
mov
mov
add
sub
pop
xchg
jnp
or
cmp
cmp
xchg
sbb
frstor
scas
jnp
repnz
push
push
dec
sub
daa
aam
pop
and
iret
pop
sahf
faddp
scas
lods
mov
cmp
inc
or
mov
imul
icebp
xchg
push
call
or
xchg
fcomp
mov
jl
and
jnp
xor
ja
fcomi
dec
adc
sbbb
push
add
xchg
mov
fisubs
adc
push
jle
aas
push
insb
test
dec
adc
xchg
mov
inc
int3
push
or
xchg
inc
or
fs
adc
in
cmpsb
mov
dec
fmull
inc
out
aam
xchg
mov
sbb
push
pop
scas
pusha
sub
mov
pop
cs
xlat
test
out
jecxz
fcomip
pop
add
xchg
jmp
fnstenv
add
movsb
flds
xor
push
push
xchg
push
xchg
out
inc
dec
hlt
pop
push
dec
fdivl
mov
js
jns
addl
and
mov
sti
pop
jle
mov
xchg
ss
pop
pop
pop
outsb
out
xchg
cmpl
loopne
jp
push
jbe
or
pop
or
xchg
mov
inc
orl
aaa
and
mov
inc
push
pop
xchg
dec
fdivs
lcall
outsb
loop
add
jl
mov
jl
cltd
out
cmpsl
imul
dec
pop
sbb
jg
jge
testb
iret
imul
jne
and
add
mov
scas
mov
or
xchg
jnp
je
out
pop
pop
cmp
xor
push
popf
mov
fisubrl
jns
fcmovnu
add
rcrb
fnstsw
sbb
mov
gs
inc
jp
iret
fnstenv
cltd
sbb
iret
push
gs
fldenv
xchg
stos
mov
ret
and
das
dec
cld
push
arpl
cmc
adc
repz
push
mov
call
shll
testb
outsl
push
outsl
mov
insl
mov
shll
filds
mov
sub
jecxz
mov
je
mov
and
cmp
inc
xor
cwtl
in
inc
dec
test
sbb
je
cmpsl
adc
adc
push
cld
fiaddl
mov
ss
cmc
ret
xor
xor
loop
stc
mov
in
imul
cwtl
xchg
cmp
jns
loope
ret
inc
fidivl
in
mov
mov
push
mov
addr16
adc
mov
data16
pop
insb
nop
cmp
sub
mov
ljmp
jmp
inc
dec
adc
test
xor
inc
mov
inc
mov
lcall
arpl
sub
rcrl
push
rcrb
addb
repz
mov
jne
jno
int3
xchg
pusha
mov
imul
stos
cltd
inc
out
sub
push
xchg
ss
pop
jg
lret
bound
out
rcrb
push
pop
out
fs
add
xchg
popf
aaa
js
xor
or
ja
mov
mov
mov
rcrb
mov
je
mov
xor
repnz
and
lods
xor
sbb
xchg
stos
adc
or
xchg
jbe
fdivp
xchg
pop
out
jmp
andps
and
fmull
icebp
subb
ja
clc
aad
add
dec
test
mov
push
sahf
or
cld
lea
mov
pop
out
aaa
call
aam
fadd
cmpsl
call
or
jge,pn
jmp
test
mov
pop
daa
test
mov
inc
imul
fsts
jl
or
int3
int3
adc
or
mov
mov
mov
imul
jno
out
adc
inc
pop
inc
add
test
xor
sub
scas
idivl
sub
int3
jp
adc
or
xchg
jle
test
mov
ror
pusha
sub
in
notb
sub
nop
loopne
cmp
sub
xor
ss
in
add
add
pop
lcall
adc
push
xchg
dec
inc
pop
xor
sub
dec
lret
cli
scas
jo
mov
jb
dec
popf
testl
inc
pop
xor
in
negl
fwait
xor
mov
pop
push
adc
daa
mov
mov
mov
xor
test
dec
lods
dec
int3
aas
adc
push
sub
and
jg
lock
dec
adcb
push
out
xchg
cmc
sub
xor
ret
mov
sbb
ljmp
nop
mov
aad
jge
jp
in
mov
mov
mov
sbb
mov
pop
jmp
jne
lods
sub
ret
inc
adc
xor
popf
ss
mov
xor
int
mov
mov
ret
push
cmpsl
mov
outsb
push
in
mov
sbb
dec
or
icebp
daa
iret
mov
or
push
mov
xchg
loope
mov
repnz
push
lods
cs
jp
int
scas
mov
jno
push
xchg
lods
mov
xlat
inc
sbbb
pop
addr16
sahf
loopne
cmp
add
test
mov
mov
fistps
ss
sbb
test
sub
or
xor
cltd
xor
push
mov
or
in
jns
xchg
jne
shrb
bound
in
and
push
fisubs
xchg
cmpsl
xchg
outsl
insb
roll
ss
leave
adc
mov
dec
mov
add
icebp
leave
xchg
cmp
out
mov
rcr
gs
dec
pop
sbb
mov
loopne
mov
push
les
xchg
cltd
loop
adc
pop
sub
jno
dec
adc
orl
in
pop
stos
lock
xor
addr16
pop
mov
mov
out
adc
pop
in
cmp
sub
xor
add
push
dec
negl
sub
fs
ss
ss
lock
cmp
cmp
push
subb
inc
andps
cwtl
insl
cmp
sbb
or
cmp
repnz
push
mov
pop
add
std
sub
lcall
les
and
xchg
dec
incb
sahf
daa
stos
or
sub
dec
test
mov
sub
xor
xor
bound
bound
lods
cmp
mov
xchg
popa
mov
mov
sbb
inc
lods
push
lahf
jg
dec
in
outsb
icebp
mov
mov
pop
and
mov
xchg
fiadds
scas
adcb
lock
sahf
cmpsl
lods
js
inc
call
xor
mov
scas
or
int3
cli
sahf
mov
cmp
mov
loopne
addr16
and
push
scas
repnz
jp
call
cmp
pop
xchg
shlb
jge
lahf
notb
sbb
ss
and
into
fs
sbb
orb
mov
iret
mov
lcall
jmp
mov
mov
push
pop
cmp
jl
adc
pop
sbb
mov
lods
cld
adc
movsb
into
js
fdivr
pop
scas
inc
xor
in
xor
das
pop
push
push
mov
subb
add
rcrb
mov
cmp
xchg
les
push
or
and
xlat
mov
dec
sbb
mov
push
and
jp
jge
cmp
inc
cs
mov
adc
adc
jmp
test
sbb
fdivs
movsb
mov
movsl
mov
xor
icebp
inc
cmp
and
add
dec
int
sub
push
js
fcmovne
xchg
das
mov
pop
mov
push
adc
int
int3
scas
ds
leavew
push
pop
xchg
push
aad
sti
hlt
jl
std
jns
pop
dec
pop
xchg
sarb
ljmp
fsubl
inc
hlt
ja
or
js
xor
iret
leave
data16
xor
shlb
xorl
mov
push
sub
lcall
xor
add
push
mov
fadds
inc
sbb
divb
mov
mov
fstps
cmp
mov
jg
pop
sarl
xor
pop
ja
out
repnz
jno
adc
xchg
adc
ljmp
scas
push
subl
inc
mov
shrb
pop
dec
xchg
inc
jle
push
stc
sbb
pop
loope
outsb
push
inc
mov
in
and
stos
ljmp
cwtl
xor
mov
xor
idivb
sbb
hlt
pusha
inc
scas
adc
jb
mov
fnstcw
lock
call
fldt
pop
push
test
add
movsb
xor
imul
insl
adc
adc
adc
or
push
mov
push
sahf
stos
mov
addl
mov
mov
shlb
push
popf
add
shlb
sbb
popf
mov
mov
jle
push
jae
inc
mov
outsl
mov
sbbb
dec
and
std
clc
movsb
push
insb
jge
pop
into
cli
repnz
push
popa
sub
ljmp
pop
mov
call
xor
cltd
mov
ja
jp
popf
mov
xor
rcrb
cmp
insb
enter
push
stos
mov
xor
or
call
inc
ljmp
mov
or
lcall
int
int
inc
inc
ja
push
sub
mov
mov
push
fdivrl
out
jnp
add
rorb
jge
ds
ficoms
xchg
inc
int
push
jle
daa
sub
sti
mov
movsb
es
fisubrs
and
add
test
ds
pop
push
in
lods
call
xor
fs
or
fmull
jmp
adc
cwtl
sbb
or
dec
test
xchg
mov
or
shl
sbb
ficoms
adc
xchg
jbe
sbbb
cmp
pop
mov
outsl
mov
jmp
out
sbbl
insb
sub
ds
cld
dec
mov
xchg
rclb
xchg
cmp
mov
arpl
sbb
rolb
in
loope
jg
popa
jns
leave
and
mov
aam
jmp
popf
sub
mov
and
add
cmp
mov
test
dec
inc
mov
xor
inc
xor
test
add
daa
xlat
cmc
mov
dec
jg
jmp
or
decb
lock
das
iret
sub
inc
adcb
xchg
aaa
xor
jmp
lahf
sbb
mov
mov
and
mov
arpl
mov
jp
pop
adc
xor
fucomip
inc
in
push
sub
rcrb
fmul
std
in
test
in
cmp
sti
das
repnz
sub
ficomps
xchg
adc
imul
mov
mov
mov
je
pushf
rcrl
andb
icebp
dec
scas
cmc
and
adc
or
sti
cs
subl
mull
pop
shr
mov
push
loopne
push
adc
gs
movsb
jl
nop
cmpsl
mov
dec
imul
jb
mov
cltd
cvtps2pd
inc
sbb
sub
or
or
xchg
repz
out
arpl
cmp
enter
lcall
fcoml
inc
push
lahf
aaa
stc
aas
or
dec
pushf
pop
negl
ss
jo
jae
idivb
outsl
jle
dec
out
in
cmp
dec
sub
adc
xchg
mov
push
mov
stos
adc
cld
je
mov
mov
and
pop
xchg
cld
in
out
mov
aam
push
jge
iret
arpl
push
pop
add
sbb
test
mov
push
mov
stos
test
faddp
test
push
cmp
movsb
imul
dec
lea
or
rcr
mov
mov
pop
test
pushf
mov
pop
shll
int
int
and
stos
scas
xchg
pop
dec
inc
pusha
imul
loop
aam
lret
or
cmp
jl
sub
inc
push
sbb
jns
lcall
test
cmpl
xor
mov
push
addr16
sub
aas
cmc
push
sbb
pop
dec
jbe
sub
dec
fcom
out
sub
pop
lret
lea
cli
jmp
jge
or
xor
repz
jp
jb
adcl
jbe
or
add
insl
or
ret
sub
mov
or
repz
test
dec
mov
adc
mov
mov
sbb
jecxz
imul
mov
dec
imul
test
into
xchg
jecxz
adc
outsl
imul
push
push
xchg
mov
scas
push
add
jno
fstpt
aam
imul
and
jg
xchg
inc
scas
and
lock
add
andl
imul
loope
das
add
inc
dec
pop
mov
push
int3
push
rcr
sbb
int3
notb
cmpsl
add
aas
and
cli
and
jp
sub
mov
sub
fwait
sbb
sti
sub
test
in
mov
add
mov
dec
pop
mov
aaa
repz
pusha
sbb
and
out
jp
lea
sbb
popa
cld
ss
push
aaa
sahf
mov
imul
je
sete
popa
mov
sbb
mov
jl
dec
pop
es
loope
fs
adc
inc
int
cmpsl
std
jbe
mov
sbb
enter
cltd
dec
test
les
dec
pusha
mov
mov
inc
data16
loop
bnd
icebp
stc
sti
and
test
xor
cmp
push
adc
mov
sahf
insb
cmpsl
pop
sub
out
xchg
int3
cmpsb
cli
gs
ljmp
xchg
inc
lret
push
fisubrl
sbb
sbb
xor
scas
leave
inc
xor
in
lcall
sbb
jl
sahf
stos
cmp
rcrb
add
inc
add
xchg
dec
push
in
dec
mov
fistps
sti
jg
jb
dec
hlt
xor
pop
mov
xlat
mov
jge
jns
mov
jb
pop
mov
popf
sub
decb
test
stos
or
les
loop
fbstp
mov
lods
sub
sub
fildll
inc
push
xor
lret
sub
addl
add
repnz
lcall
xor
adc
pop
push
ficoms
clc
inc
push
push
cli
sbb
mov
rorl
cmpb
inc
dec
push
inc
or
shld
add
ficoms
inc
sbb
sub
push
and
sub
mov
in
jecxz
outsb
mov
jmp
ds
pop
sbb
sub
jg
jmp
pop
cmpsb
or
sbb
ret
inc
daa
add
jl
shr
leave
cmp
xchg
lods
mov
and
add
repz
pop
ja
push
test
scas
dec
movsl
pusha
sbb
testl
xchg
add
push
mov
push
add
inc
xchg
aam
push
std
jnp
pop
pop
je
push
dec
cltd
xchg
xor
gs
ds
push
rolb
adc
push
loope
shl
fcompl
mov
hlt
pushf
sar
inc
push
inc
xchg
pop
aaa
jge
push
cmpsb
test
cmpb
data16
pushf
mov
pop
pop
jne
xchg
adc
shlb
pushf
push
jecxz
stc
pop
mov
inc
xor
xchg
repz
and
lcall
subb
mov
jle
movntps
test
js
jno
add
fldenv
pop
jns
aad
out
add
xor
cmp
out
jmp
pop
jns
pop
mov
xchg
std
je
xor
mov
outsl
aam
pop
add
aam
push
testl
push
cmpsb
jo
aam
mov
out
jle
jp
ret
and
pop
in
or
or
pop
mov
xchg
xchg
sbb
xchg
fcoms
lds
rcrb
sub
mov
stos
pop
pop
outsb
sahf
scas
or
push
clc
dec
and
and
or
sub
xor
out
es
bound
xchg
sbb
mov
and
jp
mov
mov
or
inc
std
xor
dec
rorl
jae
mov
lock
mov
jne
pop
mov
xchg
int
out
mov
push
fdivrs
inc
sbb
lds
enter
jl
inc
bound
inc
jo
call
xor
roll
jns
outsl
insb
stos
push
push
test
mov
sbb
dec
push
inc
sbbb
xchg
xchg
leave
scas
xor
or
dec
pop
cli
sti
mov
jno
js
out
push
sbb
lock
popa
jb
adc
xor
inc
and
adc
mov
jnp
push
jnp
cmpsb
sti
mov
dec
cmp
repz
inc
mov
pop
pushf
mov
sbb
scas
fmuls
out
inc
sbb
dec
pusha
loope
push
enter
stos
pop
mov
lea
imul
jge
adc
xchg
sbb
mov
push
xchg
lss
clc
and
shll
pop
pop
dec
imulb
xchg
js
push
je
mov
das
je
dec
inc
push
seto
cmp
cmpsb
jmp
mov
fldl
lods
cmp
sbb
xor
xchg
cwtl
mov
mov
mov
das
mov
mov
sahf
rcl
or
lds
mov
movl
cmc
jnp
bound
sub
pop
leave
addr16
jae
aad
scas
pop
inc
outsb
gs
ds
mov
stos
or
mov
shlb
xor
inc
cwtl
jmp
sub
mov
mov
xchg
mov
jae
ds
fcompl
ljmp
push
ljmp
lods
fbld
pushf
dec
fmuls
addl
fidivrl
dec
mov
movsl
enter
xchg
cld
aad
mov
xchg
add
imul
ret
fildl
or
inc
fldcw
xor
std
push
popf
inc
sbb
and
ds
lret
sbb
fdivr
loop
out
popl
cmp
decb
jle
cltd
mov
xchg
pop
mov
nop
je
enter
jecxz
loopne
jb
fidivrl
rolb
rorb
or
mov
sbb
sahf
add
lcall
mov
aaa
in
fcmovnu
into
jecxz,pn
xor
cmc
mov
mov
sbbl
jp
shll
lret
push
inc
mov
xchg
mull
add
push
rcrb
std
fcomp
mov
mov
in
xchg
push
pop
adc
xorb
xlat
xchg
out
xchg
jge
mov
mov
sub
mov
ficoml
jno
or
add
xor
daa
lds
addr16
cmc
rorl
hlt
mov
rcll
sbb
mov
fstl
lods
pop
add
ss
outsl
xchg
add
mov
inc
sub
dec
xchg
cmpsl
aas
jae
fsubrs
stc
out
pop
ss
adc
add
xchg
sub
hlt
jbe
push
in
rdmsr
inc
cmpsb
sub
cmp
xor
scas
adc
jo
jge
mov
jmp
mov
les
aaa
pop
jecxz
sub
pop
movsl
aam
stos
jecxz
xlat
stos
mov
push
inc
pop
ljmp
scas
aaa
dec
ljmp
fs
xchg
arpl
pop
sbb
lea
adc
xchg
mov
outsl
push
xchg
sti
inc
xlat
jno
cmc
je
int
add
cmp
cld
adc
mov
jmp
jecxz
adc
outsb
scas
push
scas
or
push
in
xor
ret
inc
xchg
cli
int
jle
jae
icebp
cmp
xchg
sbb
lods
sub
pop
cmp
xchg
push
sub
out
ds
and
fldt
sub
fcomip
jns
and
imul
jp
sub
cmp
push
push
movsl
addr16
scas
lret
loopne
out
xchg
fbstp
aas
arpl
scas
clc
adc
cmp
mov
lods
xor
pop
sbb
fldt
imul
and
lods
call
dec
mov
mov
inc
xor
pop
dec
adc
dec
je
imul
xchg
faddl
pop
mov
into
dec
scas
and
ror
mov
xchg
xlat
mov
jge
data16
cmp
test
inc
mov
test
divb
dec
jecxz,pn
dec
add
push
sub
sbb
stos
and
mov
and
lds
cmpsl
aaa
divb
ja
sahf
out
sbb
stos
inc
insb
in
int
cld
adc
or
lods
out
das
outsl
cmp
push
mov
sbb
adc
popa
push
adc
add
sbb
pop
std
mov
jl
cmpsl
mov
pop
lds
cli
xchg
mov
cs
not
jo
cmp
pop
add
push
popf
jns
imul
out
lahf
aad
inc
mov
je
hlt
ljmp
jmp
or
icebp
aaa
test
jmp
sbb
scas
and
adc
and
add
or
sub
xorps
sub
in
mov
cli
jnp
dec
lcall
aad
aam
arpl
cmp
out
das
sbb
addr16
mov
sbb
lods
call
in
sbb
inc
push
scas
dec
icebp
addr16
cli
sbb
pop
icebp
jecxz
jmp
xor
inc
mov
lahf
fcoml
inc
fistpl
push
jns
mov
xor
xchg
fprem1
xchg
push
pop
xchg
je
dec
adc
ljmp
sbb
cmp
test
cmc
aad
stos
std
pop
js
jle
mov
lods
adc
xor
sbb
inc
lret
in
inc
jmp
cmp
test
jno
add
sbb
pushf
into
or
jg
stc
mov
sbb
mov
in
out
add
push
dec
in
jmp
add
sub
fistl
cmpsl
mov
mov
pusha
pop
pop
xor
mov
es
jg
rorb
imul
jo
cmp
aaa
jae
shrl
loopne
add
int3
in
xchg
loop
add
and
stos
xchg
addb
lods
adc
or
jp
jb
int
cmp
push
ret
lock
data16
xchg
daa
pushf
mov
or
mov
jge
ror
xchg
imul
add
jg
sbb
std
xor
fdivrs
clc
lahf
out
pop
outsl
aas
rorb
sub
sbb
es
sti
jmp
xor
pusha
pop
cmp
push
jnp
push
in
pusha
movsb
stc
jo
js
fcoms
jne
pushf
jo
jne
loope
out
icebp
int
in
or
xchg
jno
and
jbe
inc
pushf
loopne
bound
loop
test
movsb
mov
and
stos
jl
push
add
or
xor
out
rep
mov
jecxz
add
xchg
stos
xorb
or
push
fyl2x
inc
mov
ja
cmp
insl
daa
mov
and
stos
push
jne
pop
pop
jo
loopne
jne,pt
dec
pop
imull
add
loop
mov
pop
test
cmp
push
dec
or
and
mov
jnp
xor
xlat
add
cltd
sti
loope
sbbb
inc
adc
add
push
cs
mov
jbe
out
pop
clc
subb
jbe
stos
sbb
in
lret
leave
inc
and
mov
add
arpl
in
mov
inc
lret
sub
adc
push
clc
add
xor
gs
fists
pop
outsl
xchg
jg
scas
sbb
mov
fisttpl
shl
jo
div
push
mov
jo
jmp
aad
pop
mov
mov
mov
nop
sahf
ret
adc
mov
xchg
cmp
jb
mov
scas
cwtl
adc
lahf
mov
xchg
sbb
and
mov
mov
pop
inc
out
dec
popf
lock
adc
sbb
push
mov
add
cmp
and
mov
cmp
mov
aas
test
popa
int
ljmp
scas
mov
push
insb
aas
addr16
stos
dec
in
add
inc
jns
xor
fdivs
shlb
or
cmp
in
xchg
xchg
add
fwait
xor
pushf
faddl
ret
xlat
jae
push
leave
and
inc
cmp
aas
aaa
arpl
ffree
add
and
or
mov
jno
aad
or
cli
push
cmpsl
inc
xor
sub
loope
mov
dec
aas
lret
pop
inc
sub
lret
imul
js
xchg
int
fwait
add
pushf
pop
scas
leave
hlt
mov
pop
cmp
cmp
mov
xchg
and
nop
add
stos
mov
adc
gs
mov
es
push
or
push
sbb
into
sti
in
fcomps
insb
mov
std
pop
gs
cmc
mov
jecxz
or
dec
shlb
insb
sbb
push
push
mov
mov
int3
jno
and
mov
inc
sahf
mov
repnz
mov
xchg
faddp
adc
cltd
pop
cmp
or
or
scas
push
add
std
push
pop
xor
pop
repz
inc
das
sbb
jb
sub
add
sbb
jb
mov
es
lea
xchg
fiaddl
xlat
cli
movsl
test
inc
lcall
jecxz
push
aam
add
fs
ret
fcomps
or
adc
ss
mov
pop
mov
ss
mov
adc
xchg
and
jg
pop
cmp
xor
lds
sbb
lods
mov
and
outsb
shrb
or
xchg
pop
iret
mov
lock
rcrb
or
hlt
rcll
in
out
inc
add
mov
aas
imul
push
ret
adc
adc
popa
and
mov
call
jmp
push
mov
mov
dec
iret
ljmp
les
lret
or
ret
adc
pop
jmp
int
mov
loope
mov
jno
stos
adc
sub
mov
divl
jle
or
fcmovb
insb
sub
jo
fabs
pop
cmc
xor
cltd
shlb
aam
stos
inc
jmp
movsb
inc
add
ds
cmp
in
or
dec
adc
shlb
add
aad
pop
scas
xchg
jecxz
or
icebp
sti
cmp
push
fdivrp
xchg
je
lea
mul
mov
pop
pop
mov
enter
and
ds
adc
jo
cs
and
rolb
adc
push
adc
outsl
lods
lods
rdpmc
jbe
popf
pop
xor
ret
jnp
leave
out
cltd
sbb
outsl
out
push
push
sub
or
aas
push
push
loope
jae
jne
iret
dec
dec
ljmp
icebp
addl
pop
fistps
cmp
repz
pop
aad
adc
test
scas
out
push
xchg
mov
dec
cltd
sub
xchg
popf
call
adc
js
in
aas
inc
adc
inc
subl
jnp
add
inc
mov
sbb
imul
arpl
fldcw
aad
mov
repz
leave
push
mov
incl
in
and
mov
testl
push
inc
nop
pop
sub
fwait
gs
addr16
push
jg
sbb
xchg
xchg
and
mov
xor
sub
cmc
insl
mov
dec
sub
enter
in
mov
rorb
out
mov
inc
jo
dec
pop
xor
stos
call
jl
shlb
push
jle
loop
inc
cmp
push
in
dec
popa
mov
mov
fsub
xor
jo
push
int3
test
cs
xchg
repnz
mov
push
negb
cs
inc
call
jp
clc
test
push
mov
adc
nop
inc
out
jl
stos
dec
dec
mov
and
shlb
jae
jo
out
xchg
push
xor
fmul
lret
loopne
push
add
subb
sub
mov
dec
rolb
push
andb
mov
movsb
pop
bound
dec
add
mov
xor
aam
jb
xor
xchg
mov
faddp
inc
inc
ljmp
cli
or
xor
xchg
inc
adc
data16
cld
push
sub
enter
in
mov
fimuls
pop
repz
lock
cmp
ss
dec
dec
shr
pusha
outsb
sahf
test
stos
pusha
test
push
lods
test
xchg
hlt
int3
push
adc
mov
mov
fsub
xor
jo
push
int3
test
cs
xchg
repnz
mov
push
negb
cs
inc
call
jp
clc
test
push
mov
adc
nop
inc
out
jl
stos
dec
dec
mov
and
shlb
jae
jo
out
xchg
push
ds
lods
int3
push
inc
loopne
push
and
bound
add
sbb
cwtl
push
mov
xor
cs
xchg
lret
js
movb
out
jl
ret
pop
scas
hlt
adc
jp
fsub
jbe
mov
fsubp
pop
mov
push
mov
fwait
xor
mov
cmp
jle
nop
sub
cltd
movsb
pop
out
or
stos
lds
pushf
inc
pop
sbb
fdivl
adc
xor
movsb
dec
push
lret
bound
pusha
aam
ss
aas
test
ss
out
loop
dec
int
add
bound
cmp
xor
into
dec
and
imul
mov
fsubl
dec
mov
push
fwait
ret
ja
inc
jno
and
pop
iret
movsl
pop
nop
mov
fisttpl
loope
adc
stos
lcall
pop
stos
cmp
xchg
mov
sbb
mov
xor
roll
or
xchg
gs
or
xor
mov
aas
pop
inc
into
cmp
test
mov
xchg
mulb
mov
lds
aam
dec
xchg
mov
sbb
mov
lock
add
jmp
cld
mov
pop
lret
mov
out
dec
pop
mov
nop
cmp
and
mov
sbb
cmpsb
insb
or
push
test
inc
xchg
dec
insl
adc
mov
loop
addr16
shl
test
fs
fwait
sbb
call
mov
movsl
pop
arpl
clc
dec
fcmovu
notl
or
in
sahf
lods
loope
mov
std
fsubrl
mov
idivb
push
mov
mov
cmpsb
scas
pop
loop
ds
insl
cli
pop
and
arpl
ret
gs
cmpsb
movsl
push
jne
mov
and
mov
ds
loope
push
out
subb
scas
and
cmp
jge
push
lods
and
mov
fwait
cs
hlt
push
lods
pop
fcoml
call
add
xchg
xchg
add
mov
je
addl
data16
loopne
movsl
cld
or
in
ja
fisubrs
addb
jle
rorl
cmp
jae
pop
cmp
lcall
xchg
lahf
pop
push
popf
lret
and
ljmp
in
mov
jns
in
xor
inc
addr16
lods
aaa
inc
je
cmp
insl
add
mov
pop
jmp
iret
lahf
push
lds
in
mov
jb
in
dec
jb
das
mov
dec
and
mov
mov
push
sub
mov
mov
sbb
testb
nop
test
jg
mov
xor
shll
jne
movsl
iret
adcb
jg
xorl
dec
movsb
sbb
push
outsl
imul
xor
mov
sbb
adc
and
stos
or
in
dec
xlat
dec
icebp
mov
add
dec
into
xor
inc
aad
push
popf
rcl
jne
mov
inc
jnp
and
and
xor
push
sahf
sub
ret
ret
fidivs
dec
test
cmp
out
sti
rcrb
dec
or
add
sar
dec
mov
xchg
sar
lock
mov
call
jnp
shl
clc
rolb
push
mov
adc
inc
scas
jne
pop
data16
sub
inc
call
pop
xlat
cmp
sbb
inc
sahf
call
xchg
xchg
dec
jecxz
loop
test
faddl
out
adc
xchg
idivb
dec
jl
sbb
out
cmp
sbb
pop
out
outsl
dec
jmp
out
imul
imulb
or
pop
std
frstor
inc
lahf
fcmovbe
movsb
imul
call
orb
add
xchg
push
sbb
daa
rcrb
shlb
cmp
insb
dec
adc
and
push
in
mov
addr16
aad
outsb
mov
out
lods
jnp
cmp
fs
adc
mov
and
pop
shll
jo
jl
lods
dec
cmpsl
scas
sbb
mov
and
in
sbb
dec
insb
iret
dec
je
mov
lods
into
icebp
fs
sbb
sbb
mov
push
xlat
daa
cmp
lods
cmp
jge
mov
or
outsl
jne
iret
and
mov
test
inc
testl
push
pop
dec
int3
adcl
shll
jne
dec
mov
jae
ja
pop
inc
movsl
mov
add
shrl
sahf
and
cmp
out
icebp
sub
movsl
mov
push
mov
out
push
or
sahf
jle
repz
sbb
and
call
and
push
insb
mov
jmp
les
mov
fcomps
add
sbb
pop
loope
cmpsb
inc
dec
dec
aaa
mov
push
adc
in
clc
mov
test
daa
or
gs
push
mov
cmp
push
push
leave
or
sub
into
das
sti
push
fs
xchg
dec
xor
pop
lcall
in
adc
cmp
push
daa
loop
mov
lds
roll
test
sti
rcr
mov
dec
mov
add
push
testb
xchg
dec
test
jmp
test
fcompl
int3
imul
imul
xor
aaa
arpl
fsub
fsts
daa
addr16
lahf
sbb
jle
and
dec
out
enter
xchg
je,pn
insl
shrl
out
jno
adc
nop
sub
hlt
inc
pop
ret
loopne
mov
mov
pop
lea
xor
fimuls
inc
inc
mov
clc
or
add
adc
dec
je
call
jae
sarl
jnp
gs
out
aam
ret
aas
aad
shll
inc
subb
ljmp
loope
jne
sbb
in
cmp
xor
out
fldl
les
push
cmp
loop
push
mov
daa
scas
dec
xor
pop
int3
roll
xor
leave
test
mov
jl
fidivl
iret
stc
loope
imul
add
xchg
rcl
jmp
dec
imulb
adc
mov
fadd
pop
rcrl
mov
sbb
test
shlb
shrl
xchg
dec
sbb
cmpsb
jnp
xchg
dec
or
xchg
dec
xor
add
xor
cli
xchg
call
fnstcw
in
inc
stc
addr16
and
mov
fnstsw
xchg
adc
negb
pop
jmp
xor
pop
into
inc
je
enter
repz
adcb
dec
fldl
xchg
pop
jb
insl
call
mov
inc
pusha
mov
cmp
subl
outsl
xor
imul
cs
sub
in
mov
je
imul
mov
icebp
dec
mov
shrl
xchg
xchg
cmp
jg
repnz
pop
sarl
add
xlat
repnz
cmc
xchg
mov
adc
mov
fsubl
pop
mov
add
cmp
xchg
push
adc
fwait
ss
ror
jl
pop
dec
testb
imul
inc
insl
jmp
dec
je
stos
xchg
xor
xchg
mov
add
loop
push
int3
mov
or
call
inc
lods
notb
lret
xchg
pop
cmp
sahf
mov
cmp
jne
pop
cmp
mov
sbb
imull
mov
into
outsl
fwait
mov
fsubr
sahf
loopne
sahf
cmp
mov
insb
xor
mov
sub
sar
push
pop
mov
xchg
and
mov
pop
cmp
daa
fcmovnb
dec
les
lea
lock
adc
loopne
shlb
xor
mov
sbbb
ret
push
mov
cs
insb
pop
lods
bswap
mov
xchg
sbb
sbb
inc
mov
push
pop
out
sahf
cmpb
xchg
dec
rolb
repnz
mov
mov
cmp
pop
std
mov
inc
shlb
cmp
mov
push
mov
cmp
out
push
mov
test
xchg
test
push
in
sbb
ror
mov
test
jnp
mov
cmpsb
aam
es
cltd
mov
jb
addl
lcallw
jg
sub
lcall
mov
sbb
cmp
pop
cltd
lds
mov
mov
rcll
shlb
and
mov
xchg
cmp
or
lahf
lret
aad
lret
mov
in
into
or
sub
or
out
push
mov
lock
dec
push
loopne
cmp
inc
mov
inc
aaa
adc
jbe
popa
gs
fwait
cltd
push
mov
push
sbb
vmwrite
je
add
push
dec
movsb
xor
cmpl
mov
pop
in
hlt
push
pusha
mov
jb
out
dec
cmp
rcrl
int3
adc
pop
testb
adc
mov
ds
repnz
out
daa
sub
mov
hlt
jae
xchg
loopne
mov
lods
or
sub
js
test
fbstp
xchg
xor
push
push
movsb
xchg
adc
ljmp
jg
je
xchg
cs
jno
xor
adc
movsl
push
push
jmp
push
ljmp
dec
test
in
cld
and
lods
cli
xchg
mov
fimull
xor
lods
jbe
ljmp
push
inc
and
sbb
inc
and
xor
add
cmpsl
cltd
sbb
xor
jmp
loop
movsb
shlb
leave
cld
jae
rcl
scas
mov
push
pusha
repnz
mov
pop
sti
sahf
adc
stos
and
cmp
jns
addr16
outsb
push
sbb
aaa
aas
push
cmpsl
enter
ret
leave
sub
xorl
xlat
insb
ss
testl
mov
add
data16
ljmp
stos
sbb
lods
inc
je
sub
dec
xor
lahf
jo
sub
sti
adc
jecxz
lahf
out
nop
cmp
mov
and
leave
test
mov
ja
aad
cmp
inc
out
cmp
or
mov
adc
jmp
and
sbb
mov
stc
inc
test
fdivl
xor
mov
pop
sti
cmc
or
and
js
xchg
add
scas
adc
xchg
xor
movsl
sbb
and
stc
popf
mov
cli
or
shrb
jmp
icebp
cmp
or
mov
insb
pop
add
dec
xchg
sbb
push
test
test
cltd
lods
in
sbb
adc
sbb
jp
xchg
jmp
sahf
stos
add
pop
or
call
outsl
push
mov
inc
outsl
mov
lcall
lock
xchg
pop
cmp
inc
popa
scas
xor
or
dec
testb
adcl
inc
cmc
jecxz
pop
inc
xlat
push
push
sub
ljmp
or
or
inc
mov
fs
pop
push
int3
xchg
or
in
stc
xchg
mov
mov
adc
fisttpl
loop
xor
jo
fld
inc
mov
mov
into
scas
test
fwait
pop
scas
mov
add
test
cld
outsb
add
in
ja
es
or
mov
ja
in
or
xor
jbe
push
cmp
mov
dec
ss
out
inc
push
call
nop
jno
ret
jmp
clc
fcomps
pop
mov
jg
sbb
mov
xchg
mov
and
mov
imul
mov
in
shrb
push
filds
ffree
cli
insl
xor
loopne
rol
lcall
movl
es
popf
or
dec
in
insl
in
imul
mov
pop
loop
sub
mov
out
or
das
fxch
loopne
loope
adc
adc
imul
lahf
cmp
movsl
hlt
cmp
mov
inc
mov
mov
clc
sub
cmpl
pusha
lret
push
xor
cmp
adc
mov
xor
daa
pop
shrb
lretw
mov
popa
scas
mov
pop
stos
cld
sbb
faddl
or
pop
pop
loop
push
gs
mov
mov
pop
sbb
push
mov
mov
in
xchg
pop
mov
push
xchg
jg
jns
cmc
mov
cmpb
gs
sti
mov
dec
test
jno
icebp
fcmovnu
add
mov
rorb
call
rol
and
pop
sub
scas
stc
mov
mov
das
sbbl
mov
add
mov
jl
mov
cs
mov
icebp
push
loopne
inc
sub
addb
arpl
repz
out
sub
xor
cmp
ljmp
insl
and
mov
cmp
iret
mov
pop
dec
cld
adc
scas
jb
scas
mov
inc
test
in
cmp
lret
mov
mov
xchg
dec
test
or
pop
xchg
lahf
stc
std
imul
jmp
inc
mov
dec
movl
pop
jle
mov
mov
sbb
sub
mov
and
aam
cmc
or
mov
mov
xchg
add
cwtl
lods
xchg
mov
or
pop
push
test
add
sbb
je
xchg
rolb
int
fidivrs
push
stos
jl
push
mov
sub
adc
lahf
shll
fildl
mov
push
pop
in
sbb
and
ret
sub
and
xlat
or
mov
fadds
mov
lcall
jne
es
addl
xchg
mov
mov
sbb
jg
mov
inc
pop
test
xchg
push
fcmovnb
sti
imul
xor
leave
int3
mov
int
outsb
mov
cmpsb
stos
in
outsb
xor
sub
mov
mov
int
loopne
jmp
cmp
fstps
push
xchg
pop
int
rol
mov
cmc
push
into
push
sbb
adc
dec
sbb
mov
out
rcr
movsl
push
xor
sub
pop
adc
and
mov
ljmp
push
into
test
sarl
add
imul
mov
movsb
cld
divl
stos
mov
lcall
pop
jle
inc
adc
jne
hlt
xor
out
jp
sbb
sarb
jns
push
fnstenv
xchg
xchg
jecxz
adc
mov
and
rorb
mov
pop
insb
into
xor
add
sub
cwtl
xchg
mov
das
popa
mov
fs
cmp
fdivs
push
push
mov
cmpsl
mov
cli
sbb
pop
inc
mov
movsb
jl
and
dec
movsl
hlt
fnstenv
pop
icebp
rorb
scas
or
cld
cmpsl
aam
push
in
popf
dec
push
scas
nop
add
das
inc
into
fcompl
lcall
mov
lret
and
fldt
loope
sbb
in
cld
ja
fbld
jg
ss
rcr
mov
lods
mov
push
lock
sub
adc
push
xchg
fdivr
test
fsubl
outsb
mov
out
aas
xchg
cltd
sub
sbbl
mov
dec
cmp
push
pop
adc
bound
cli
mov
popa
pop
sti
insb
or
sbb
loope
cltd
out
push
or
sbb
add
cld
dec
ficoml
cmpsl
mov
sub
jnp
push
fwait
test
mov
and
imul
cmc
mov
lret
sahf
mov
dec
inc
ss
lcall
daa
cld
jno
push
ret
test
scas
mov
and
dec
test
mov
dec
pop
pop
stos
loopne
lock
out
test
dec
jne
fwait
into
lea
testl
mov
stos
jnp
xor
mov
popf
stos
cltd
adc
mov
mov
xchg
out
jmp
xchg
scas
add
push
pop
repnz
push
mov
xor
stos
idivb
mov
outsb
pop
outsb
testl
mov
xchg
jp
in
pushf
sbb
in
mov
filds
pop
fs
mov
or
in
push
mov
leave
jg
fwait
sbb
loop
sub
xor
testb
jmp
add
mov
jae
xchg
xor
mov
test
mov
push
les
gs
adc
cmpsl
cmp
pop
xor
clc
mov
jg
fsts
int3
mov
xchg
sub
jo
xor
add
stos
xor
test
push
iret
inc
xor
lcall
ss
cmpsb
and
aam
es
mov
sub
fs
or
test
inc
inc
mov
jo
imul
fs
xor
xchg
pusha
clc
lock
inc
loop
mov
testb
in
movsb
loopne
scas
pusha
mov
adc
mov
daa
inc
popf
mov
sar
mov
aaa
stc
in
push
orb
pop
andl
fsubrl
pushf
sub
mov
in
cmpsl
mov
inc
shlb
or
nop
movsl
cs
fsubrl
fists
rorb
mov
jae
lret
xor
arpl
aaa
add
sbbl
mov
cmc
aad
xchg
cmp
pop
and
adc
jge
adc
and
sbbb
jno
jle
cli
bound
pusha
jmp
pop
pop
divl
mov
and
sbb
xchg
lea
std
sub
xor
push
ret
repnz
pop
jnp
popa
add
addb
push
sub
dec
add
sub
scas
jne
dec
or
ljmp
xchg
sub
lods
leave
mov
test
shlb
sarb
fnstcw
mov
push
xchg
sub
and
jmp
lock
mov
les
fmuls
fsubl
ss
fwait
lret
xchg
cmpsl
jp
push
pushf
and
mov
ret
inc
sub
repnz
aas
mov
sub
push
dec
xchg
dec
add
movsb
add
test
je
mov
sbb
outsb
pop
rorl
jmp
test
lods
outsl
scas
push
lock
lret
mov
add
les
xchg
inc
inc
ljmp
pop
repz
dec
cs
lret
arpl
mov
xchg
dec
stos
scas
fdivl
xchg
insl
add
sti
test
inc
lods
outsb
mov
addr16
notl
or
or
das
push
push
mov
sub
xchg
and
les
mov
sbb
sbb
push
sbb
lret
mov
sub
add
xchg
inc
xor
pusha
out
jns
clc
fs
push
add
pushf
int3
adc
movsl
sub
lods
cmc
xor
sub
dec
xchg
dec
sbb
add
iret
test
adc
inc
cmp
xchg
popa
fsubs
inc
mov
push
and
int3
cmp
dec
imul
sub
sahf
flds
scas
or
cwtl
sub
xchg
into
lahf
adc
testb
aas
idiv
lods
sarb
adc
out
adc
mov
sub
cmp
enter
mov
fiaddl
pop
xor
fwait
and
daa
lret
pop
xor
ds
fs
or
fwait
adc
lcall
pop
scas
sarb
jp
rcrb
jmp
daa
pushf
xchg
mov
insl
adc
adc
cmp
lock
hlt
lcall
jg
notb
xchg
inc
les
pop
jmp
sti
call
xchg
lret
aam
jp
mov
push
out
sub
insb
or
repz
sub
dec
adc
pop
and
or
and
lret
cs
inc
repnz
xor
nop
data16
pop
jmp
cmp
arpl
icebp
fildl
mov
imul
adc
mov
icebp
xor
fbld
les
daa
insb
mov
out
mov
std
lahf
sbb
mov
stc
fwait
loopne
ljmp
mov
icebp
jno
shll
pop
sub
dec
mov
xlat
xor
dec
faddl
fsts
jle
sub
jp
fwait
pop
dec
lret
int
fimuls
cwtl
and
iret
sbb
mov
mov
shlb
scas
or
arpl
xor
jp
fiaddl
mov
dec
push
dec
dec
aaa
test
push
lods
shlb
sbb
inc
stos
pop
adcb
call
js
dec
xchg
push
push
adc
sbb
mov
int
pushl
mov
jb
push
cmp
dec
mov
xchg
fnstenv
out
fwait
das
sahf
jns
testb
add
mov
sub
add
inc
lea
stos
aaa
leave
mov
jo
mov
stos
mov
lcall
bound
and
xchg
sbb
movq
inc
and
jae
mov
xchg
leave
repnz
out
push
push
sti
dec
adc
fildll
mov
mov
jg
fwait
pop
cmc
mov
sbb
pop
jb
mov
jb
lds
pop
sub
xor
or
out
fbstp
scas
or
inc
and
add
inc
sti
mov
xlat
mov
jp
sbb
mov
daa
jmp
cli
test
add
pop
xchg
sbb
dec
in
or
and
stc
jbe
shll
fisttpl
cmp
xchg
sub
test
pop
jae
aad
or
movsl
sbb
push
pop
pop
adc
push
add
xor
sub
outsl
shlb
mov
jmp
mov
ja
nop
sbb
adc
push
jecxz
mov
mov
aam
js
clc
xor
xor
int3
iret
and
jge
cmp
std
push
cmp
subl
aad
lods
inc
mov
mov
jns
inc
icebp
cltd
je
pushw
cli
aaa
and
in
dec
cli
mov
cmp
repnz
and
dec
xchg
js
cmp
fstl
sub
aaa
mov
jg
jge
mov
pop
xor
jnp
ljmp
push
and
test
rorb
mov
clc
mov
in
add
popa
mov
push
mov
or
push
aaa
fcomps
inc
mov
out
add
into
in
mov
jbe
in
add
lret
ljmp
adc
or
rcrl
cwtl
daa
jecxz
lods
fwait
lcall
and
into
test
mov
les
sub
fcoms
mov
insl
push
mov
jae
sub
ffreep
inc
xlat
test
cmp
and
xlat
jns
faddp
shlb
mov
xor
adc
popa
pop
jecxz
xchg
stc
jmp
add
pusha
jo
dec
lods
lret
lods
add
test
in
test
popa
shll
ljmp
out
pushf
push
dec
js
pop
sub
int3
xchg
popf
aad
sub
mov
in
inc
pop
cmp
fmul
dec
adcb
jg
push
pop
jnp
lahf
xchg
mov
inc
mov
out
scas
cmp
or
test
bound
and
nop
jecxz
add
mov
push
inc
lods
adc
shll
in
ljmp
sub
roll
inc
icebp
scas
cmp
out
rclb
cmpsl
push
lret
jge
cmp
aad
cli
push
test
mov
mov
insb
sub
call
xchg
mov
mov
rcl
mov
repnz
push
jbe
faddl
mov
inc
cmp
aas
stos
scas
mov
sbb
ja
pop
inc
fists
stos
data16
jl
subl
push
sub
pushf
sahf
int
fdivs
mov
out
or
popf
es
or
scas
daa
pop
lods
push
cmpb
ljmp
seta
dec
divb
dec
rcll
pop
mov
sbb
sub
jns
mov
and
pop
xor
outsl
mov
test
mov
inc
xor
popf
pop
xchg
xchg
push
xor
ljmp
subb
pop
test
scas
xor
add
jl
fiadds
mov
sub
popf
sbb
ljmp
lret
ja
mov
popf
mov
rcll
ret
mov
fldenv
dec
ret
mov
stos
scas
sub
lcall
fwait
jns
push
inc
stos
test
add
push
xor
dec
out
outsl
push
mov
stos
popf
sub
js
mov
movd
xor
shlb
sahf
out
adc
push
les
outsb
jb
int3
sub
jge
inc
jg
xor
cli
cwtl
mov
pop
aas
or
shl
insb
sarb
icebp
mov
cmovl
mov
mov
fldenv
cmc
sub
pop
and
fwait
jo
shlb
sub
aad
dec
push
or
xor
insb
adc
cmp
jge
lret
rcrb
mov
shlb
cli
mov
pop
out
fistpll
repnz
cmp
xor
xor
jnp
dec
jnp
mov
xchg
cmpsb
push
cmpsb
cmp
xor
ljmp
imul
stc
cld
sbb
test
aam
pushf
sub
sbb
pop
stos
pop
outsb
push
loopne
push
and
test
aaa
ja
popa
mov
dec
data16
inc
lcall
xchg
jns
scas
push
push
fcmovb
pop
outsl
rorl
cli
adc
fistpll
cmp
neg
mov
sbb
sbb
cmpl
pop
push
scas
orl
mov
cmp
mov
dec
test
jmp
popa
test
push
fstpl
div
loop
jmp
popf
add
push
cmpb
mov
fildll
mov
dec
push
jno
pop
mov
xchg
lock
aam
mov
push
cmc
cmpsb
dec
lock
mov
xchg
add
je
inc
and
push
pop
test
mov
and
and
sub
in
lret
jae
loop
imul
jae
popa
jg
cmp
xor
hlt
incl
outsb
sbb
test
loopne
lret
mov
das
dec
test
xchg
push
mov
jb
rolb
sbb
xor
and
fwait
inc
push
jl
lcall
push
xchg
std
dec
movsb
or
inc
aas
xchg
and
sub
xchg
sub
mov
or
dec
cli
jg
and
mov
ljmp
inc
lea
nop
ficompl
xchg
orb
nop
sub
jbe
adc
std
mov
pushf
xchg
inc
cs
mov
jbe
sbbb
cmp
pop
imul
xlat
adc
adc
adc
mov
jne
sub
pop
js
jo
mov
stc
sub
jno
dec
or
test
lods
imul
inc
sbb
gs
mov
pop
xor
in
in
and
jne
fidivrs
imul
ret
pop
aaa
push
pop
movb
loop
xchg
out
or
shll
jns
push
shr
and
cmp
jecxz
stc
mov
add
ret
mov
aam
mov
data16
mov
pop
in
xchg
push
mov
jp
inc
imul
das
adc
leave
adc
and
in
xchg
jp
push
push
ret
jg
add
pop
shl
popa
push
xchg
jmp
push
jg
sti
cmc
ja
push
push
test
mov
push
sub
stc
fld
sub
push
fdivs
cmpsl
ret
add
add
out
pop
xchg
push
popf
int3
add
fwait
sub
in
pop
ljmp
test
dec
dec
out
hlt
imul
cmp
push
int
jl
xor
lahf
mov
cmpb
adc
daa
cli
mov
inc
cmp
pushf
data16
mov
mov
aas
add
test
add
mov
xchg
mov
jnp
fistpl
sbb
sbb
cmp
popa
adc
movsb
andnps
add
mov
or
mov
lds
push
jno
scas
sub
fnstcw
test
push
sar
or
enter
push
std
or
sbb
mov
sbb
jb
aaa
les
mov
mov
dec
adc
mov
xchg
add
jae
mov
dec
sbb
push
test
pop
adc
cmpsb
push
mov
lock
popl
cwtl
stc
insl
imul
mov
pop
ret
sub
sub
adc
mov
or
mov
or
push
cltd
and
daa
test
xchg
int
cmp
shl
sbb
jae
jbe
pop
lds
gs
fcom
xor
mov
add
test
xor
jl
jo
clc
outsl
pop
jae
mov
xor
call
fs
fwait
idivl
int
ficoml
sub
mov
sbb
lret
mov
ss
adc
xchg
lods
loop
xor
gs
sub
mov
add
push
inc
es
aaa
mov
pop
fwait
.byte
.byte
add
add
js
add
push
cmp
cmp
jo
cmpl
cmpsl
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
cmp
jmp
cs
ds
ds
add
and
imul
mov
mov
xor
xor
xor
xorl
xor
pop
ss
lea
dec
ss
popa
shlb
ss
fbstp
mov
ss
aaa
adc
aaa
inc
aaa
sub
and
xor
pop
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
mov
cmp
cmp
cmp
cmp
xor
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
sahf
xor
xor
xor
xor
sbb
and
xor
xor
xor
xor
xor
and
add
cmp
mov
mov
cmp
cmp
cmp
cmpl
cmp
cmp
cmp
aas
mov
aas
dec
aas
add
daa
xor
xor
xchg
xor
xor
xor
xor
xor
clc
xor
xor
xor
pop
xor
data16
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
ss
pop
aaa
xor
cmp
out
pop
aaa
divl
push
aaa
and
sub
xor
aaa
xorb
aaa
popf
aaa
mov
aaa
cmp
push
cmp
outsl
cmp
xor
add
add
add
cmp
cmp
cmp
push
cmp
pop
cmp
test
nop
cmp
cmp
cmp
jl
fnstcw
loope
das
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
cmp
mov
popf
fnstcw
sti
jb,pt
jbe
add
or
xor
aaa
xor
jg
xor
or
push
xor
xor
xor
shlb
in
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
leave
xor
or
or
ss
ss
fnstenv
or
movsl
aaa
mov
mov
cmp
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
push
mov
xor
mov
fidivs
divb
add
sub
cmp
aaa
xchg
aaa
dec
xor
push
aaa
jb
ja
cmpsb
aaa
mov
aaa
pop
cmp
lahf
cmp
cmp
cmp
js
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
pushf
aas
push
xor
scas
xor
xor
xor
ja
mov
mov
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
push
xor
jae
jnp
sub
xor
xor
xor
xor
xor
xor
cmp
xor
cli
xor
xor
xor
xor
xor
xor
xor
xor
xor
iret
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sbb
and
cmp
cmp
cmp
cmp
cmp
cmp
jne
cwtl
ds
push
aas
xor
stos
aas
fidivrl
in
fidivrs
call
add
add
add
cmp
cmp
jp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
mov
je
mov
cmp
cmp
out
ds
ds
ds
mov
in
xor
movsl
ss
ss
mov
stos
les
int
fnsave
and
mov
mov
aaa
fbstp
jmp
std
aaa
inc
cmp
push
cmp
cmp
out
push
cmp
and
cmp
cmp
mov
fnstcw
in
icebp
cmp
cmp
cmp
push
cmp
pop
cmp
jge
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
add
add
add
dec
cmp
out
cmp
add
imul
repz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
cmp
sbb
and
or
xchg
aas
fwait
aas
mov
mov
push
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
jo
jg
xlat
xor
xor
xor
xor
jno
lahf
xor
xor
xor
mov
mov
mov
xor
xor
ss
ss
xor
xor
bound
mov
add
insb
aaa
test
xchg
cmp
jp
stc
cmp
cmp
cmp
cmp
cmp
add
add
je
in
cmp
cmp
cmp
test
lods
cmp
cmp
cmp
cmp
aas
ds
aas
bound
jp
jg
lods
aas
mov
out
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
xor
xlat
xor
xor
xor
jno
lea
sbb
test
fwait
or
sbb
push
xor
outsl
xor
xor
xor
je
jns
pushf
xor
xor
xor
xor
xor
xor
pop
xor
pop
ss
ss
ss
ss
mov
aaa
pop
aaa
arpl
jnp
xorb
cmp
cmp
push
cmp
add
add
adc
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
push
cmp
cmp
xor
cmp
inc
cmp
dec
cmp
pop
cmp
cmp
add
xchg
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
push
mov
mov
xor
pop
xor
movsb
xor
je
jns
call
aaa
dec
aaa
jl
xorl
mov
scas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
add
je
js
jl
cmpb
aas
mov
mov
aas
lock
loopne
in
aas
clc
aas
add
xor
cmp
cmp
inc
xor
xor
xor
xor
insb
xor
je
js
jle
xorb
xor
xor
shlb
xor
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
in
or
add
sub
sub
cmp
cmp
inc
ds
ds
js,pt
push
ds
movsb
je,pt
cwtl
ds
add
cmp
insb
cmp
js
jl
cmpb
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fs
xor
xor
xor
xor
xor
xor
enter
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
add
rolb
add
ss
fdivs
fdivl
cmp
cmp
inc
aaa
inc
aaa
sub
sub
test
lods
cmp
cmp
push
cmp
cmp
fdivrs
or
pusha
cmp
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
add
add
add
xor
or
or
pop
sub
hlt
js
mov
.byte
or
