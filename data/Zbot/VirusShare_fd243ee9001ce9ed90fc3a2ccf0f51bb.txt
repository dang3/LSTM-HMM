incl
jecxz
lcall
fisttpll
fcmovnb
push
jno
mov
push
jmp
or
iret
insb
adc
lcall
sbb
insb
pop
loop
sbb
pop
stc
xchg
stc
mov
xchg
jp
mov
lea
mov
jg
incl
mov
add
jne
cld
sti
xor
cltd
mov
aam
adc
xor
lret
add
pushl
fists
jl
inc
dec
leave
es
and
mov
pop
push
push
sub
ficompl
mov
jl
in
flds
and
cmp
and
aas
fisubrs
mov
jmp
insl
ss
ljmp
adc
inc
or
sbb
and
dec
sub
add
xchg
sub
sub
adc
adc
pop
add
add
add
add
and
sub
xchg
ljmp
clc
popl
test
mov
and
xor
mov
lcall
inc
inc
sub
aad
rcll
ljmp
and
adc
jmp
push
jb
sbb
inc
or
sar
add
add
sbb
push
or
mov
add
add
xchg
mov
dec
adc
adc
dec
stos
xchg
inc
test
mov
incb
sbb
pushl
adc
adc
or
or
or
mov
mov
inc
decl
or
ljmp
xchg
adc
add
test
mov
test
mov
or
test
add
inc
push
and
sub
or
adc
mov
or
adc
rcll
xchg
push
imul
inc
incl
mov
sub
incl
mov
or
sar
push
adc
adc
test
aas
push
inc
mov
mov
decl
jb
or
jmp
and
lret
and
fs
incl
orb
sbb
inc
and
cmp
adc
incl
sub
decl
decl
and
and
sbb
jmp
add
xchg
and
or
push
inc
or
call
sub
sub
inc
and
cmp
movsl
or
push
test
and
push
adc
decb
sbb
xchg
cmp
dec
and
inc
add
addr16
leave
mov
adc
cmp
and
stos
add
inc
xor
mov
pop
inc
jmp
add
incl
nop
add
dec
and
or
andb
xor
sub
call
adc
adc
push
xor
mov
add
xchg
push
push
push
add
xlat
decl
add
push
stos
sub
lcall
jmp
pusha
and
stos
mov
movsl
add
call
push
adc
cmp
inc
mov
xor
pop
push
mov
pushl
and
push
and
stc
or
xor
jecxz
adcl
sbb
incl
and
add
or
jmp
dec
inc
and
mov
push
xchg
push
incl
push
lea
xchg
pop
incl
add
loope
add
andb
and
mov
xchg
mov
test
and
mov
incl
mov
sbb
inc
mov
or
and
adcb
andb
pop
mov
lods
add
movsl
pushl
or
mov
or
dec
adc
mov
stos
or
orb
adc
stos
movsl
call
ret
mov
push
incl
push
cmp
push
rorl
push
jo
or
adc
pusha
std
push
push
arpl
push
sub
mov
dec
adc
inc
decl
add
icebp
push
sbbb
sub
nop
dec
and
push
push
jmp
test
add
call
push
nop
mov
test
add
add
and
adc
mov
sbb
and
inc
xor
incl
pusha
dec
pop
add
stos
call
or
inc
add
andl
inc
push
adc
decl
add
sti
inc
add
and
std
add
mov
nop
sbb
inc
push
orb
bound
jmp
add
and
test
sub
call
mov
xchg
add
adc
mov
les
bound
and
lods
stos
and
push
adc
call
test
mov
adc
in
mov
lods
adc
add
mov
adc
subb
stos
pusha
dec
adc
xor
mov
sub
incl
dec
push
sti
inc
dec
pop
adc
call
mov
or
and
adc
call
xor
pusha
pop
inc
das
inc
or
inc
decl
add
andb
and
add
inc
jne
stos
lcall
sbb
mov
push
xchg
add
and
xor
ret
pop
ret
push
add
orb
sub
stos
mov
xchg
call
inc
mov
subb
mov
mov
incl
push
and
inc
call
push
push
xor
call
mov
sbb
add
decl
incl
leave
orb
decl
imul
adcb
cmc
inc
add
mov
add
sbb
dec
add
push
rorb
adc
movsb
mov
and
or
decl
adc
add
orb
incl
nop
inc
add
push
jmp
adc
xchg
adc
inc
mov
int3
mov
sbb
call
add
adc
jmp
call
lods
add
add
or
add
call
adcb
call
and
add
inc
addb
push
dec
and
add
call
xchg
decl
or
or
xor
push
add
xor
sub
inc
nop
andb
into
mov
or
or
add
push
push
push
call
dec
ljmp
mov
and
and
test
nop
rorl
mov
adc
sbb
or
xor
mov
add
adc
adc
push
add
incl
or
add
inc
push
xor
stos
inc
and
mov
xchg
push
movsl
jne
cmp
stos
mov
call
stos
inc
rcll
jmp
push
add
xor
and
incb
adc
dec
incl
add
adcb
add
mov
or
adc
aam
inc
push
lcall
inc
rcll
incl
or
test
mov
decl
addb
mov
inc
and
jmp
lods
add
mov
inc
shl
sub
mov
mov
adcb
inc
incl
push
xor
or
adc
cmpsl
add
adc
sbb
incl
test
inc
mov
incl
inc
inc
add
add
sbb
call
and
call
inc
inc
dec
and
and
push
and
incl
xor
push
adc
dec
add
add
test
and
and
nop
adc
incl
aam
or
dec
orb
call
add
push
and
ljmp
and
adc
add
push
push
sub
sub
mov
incl
mov
stos
call
mov
sbb
add
mov
jmp
or
call
add
fcom
test
sub
fisubrs
mov
test
push
incl
xor
jmp
dec
add
stos
sbb
movsb
xchg
add
dec
push
inc
test
and
subl
adc
lea
xchg
inc
inc
add
and
in
xchg
incl
mov
add
stos
adc
xchg
decl
sub
inc
or
adc
sbb
dec
cmp
sbb
push
incl
roll
pop
add
stos
sub
repz
and
stos
inc
add
add
sar
leave
or
call
push
or
jmp
sbb
jmp
xor
push
ljmp
inc
add
add
dec
and
inc
push
pushl
imul
adc
push
enter
adc
andb
add
mov
pop
push
aam
incl
stos
and
push
and
push
fs
movsb
call
add
push
add
xor
and
add
test
call
test
aam
incl
and
stc
decl
add
dec
incl
inc
inc
pop
and
cmp
mov
fs
call
inc
and
incl
add
add
test
xchg
decl
mov
add
add
push
xor
and
add
adc
or
jmp
stos
sub
add
dec
or
ljmp
inc
add
add
add
lret
decl
dec
inc
sbb
or
ljmp
pop
cmp
adc
in
or
inc
dec
sub
or
jmp
inc
and
or
xor
inc
sar
pop
and
or
jmp
jb
add
decl
dec
test
decl
add
jmp
push
and
decl
adc
decl
dec
add
adc
push
adc
incl
add
or
dec
stos
inc
add
ljmp
or
push
and
inc
incl
or
sub
pop
adc
fs
adc
inc
add
adc
adcb
out
addb
add
sbbb
sub
ljmp
add
call
adc
adcb
sar
fs
test
xor
test
call
push
adcb
call
push
ret
popa
call
add
shlb
int3
and
mov
leave
add
sub
call
sub
call
add
xor
push
test
adc
movsb
test
call
adc
adc
sbb
andb
packssdw
or
nop
and
and
addb
stos
and
adc
and
mov
add
mov
sub
inc
fbstp
mov
jmp
and
push
jmp
dec
and
add
push
leave
incl
push
xchg
or
test
adc
test
push
add
sub
adc
jmp
mov
test
sbb
xchg
incl
add
rcll
mov
inc
xchg
add
dec
add
xor
adc
add
sbb
jmp
lods
orb
push
rcll
dec
adc
pop
mov
decl
shll
adc
xor
add
bound
adc
test
inc
adc
mov
and
incl
inc
rcrb
decl
loopne
push
or
jmp
push
dec
or
orb
subb
inc
call
push
add
dec
call
or
sub
inc
test
test
dec
test
adc
push
adc
jmp
sbb
inc
or
xchg
sub
lods
mov
inc
jmp
add
mov
sub
inc
or
call
add
jmp
and
call
test
aad
pusha
dec
or
adc
lret
test
inc
mov
adc
decl
and
xor
push
shll
cmp
inc
sub
push
stos
mov
incl
adcl
and
or
adc
incl
sub
adc
add
addb
add
adc
sub
sub
adc
test
ret
ljmp
cmp
inc
push
inc
add
push
adc
push
push
cmp
or
adc
inc
inc
bound
xor
mov
and
xor
nop
add
or
jnp
or
add
xor
push
add
sub
and
xchg
jmp
mov
xchg
adc
add
cmpsb
inc
incl
aam
mov
nop
jmp
and
mov
inc
cmc
or
sub
cmp
les
add
dec
call
add
incl
adc
enter
inc
inc
inc
push
xchg
add
inc
test
push
jmp
adc
add
and
xor
push
inc
ret
and
sub
xchg
inc
push
jmp
pop
inc
dec
xlat
xchg
add
dec
adc
dec
and
test
adc
bound
incl
dec
adc
mov
dec
push
pushl
dec
inc
push
jmp
dec
adc
movsl
push
xchg
movsb
test
and
incl
xor
xor
inc
bound
adc
inc
and
or
push
dec
insb
add
into
xchg
nop
adc
add
incl
sub
aad
call
loopne
daa
incl
or
and
add
push
inc
mov
add
pop
adc
inc
ljmp
decl
adc
daa
adc
mov
mov
pusha
sbb
add
inc
jmp
push
adc
incl
add
or
adc
inc
and
cmp
cmp
mov
inc
adc
and
sub
mov
pusha
adc
addl
mov
add
and
adc
mov
dec
inc
inc
mov
xor
sub
or
and
or
sub
add
sbbb
test
push
or
mov
inc
dec
andb
and
andb
add
add
xchg
nop
push
adc
incl
inc
adc
xchg
in
add
inc
xorl
xchg
movsb
stos
decl
adc
sbb
and
and
enter
add
dec
and
sub
pop
ljmp
inc
popa
push
incl
mov
mov
adcb
add
mov
arpl
ljmp
decl
adc
adc
sub
and
add
inc
movsl
test
and
addb
inc
aad
pusha
or
nop
xchg
add
inc
cmp
loope
add
sub
or
inc
sbb
sub
movsb
stos
ljmp
in
stos
incl
pop
add
inc
add
push
add
or
addb
and
lcall
test
test
adc
lcall
inc
or
adc
and
add
test
adc
add
sar
add
lods
mov
fs
or
adcl
push
and
push
call
pop
push
mov
dec
add
or
add
pusha
nop
lods
mov
popa
incl
and
or
push
and
push
or
and
cltd
stos
mov
xor
sub
in
nop
xchg
sbb
add
and
add
xchg
push
adc
add
fists
addl
add
addb
add
dec
add
sub
pushl
stos
sub
addb
or
dec
push
dec
imul
push
inc
adc
adc
test
sbb
jmp
inc
adc
or
inc
mov
add
jmp
adc
add
adc
test
add
and
or
jmp
adc
xchg
mov
test
or
test
adc
decl
push
nop
call
add
nop
or
call
stos
addb
xchg
add
and
incl
dec
push
sbb
push
mov
enter
inc
inc
and
inc
inc
adc
inc
decb
mov
jmp
add
pop
add
dec
fiaddl
adc
nop
adc
ljmp
pop
add
adc
push
mov
adc
cmp
or
add
adc
push
push
in
push
push
adc
sbb
and
sar
push
add
and
in
adc
and
or
and
dec
sub
or
dec
addb
or
adcb
sub
and
lods
add
jmp
add
and
lods
mov
lcall
andb
fsts
call
and
and
inc
push
add
pop
add
mov
ljmp
mov
test
push
add
xor
add
lods
sub
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
add
ljmp
rol
sub
or
stos
xchg
adc
or
xchg
xchg
add
in
sbb
or
adc
andb
inc
adc
add
add
nop
inc
movsb
add
lods
xchg
adc
add
add
gs
and
adc
bound
add
and
leave
and
adc
adc
test
inc
add
and
mov
adc
nop
push
and
inc
inc
xchg
and
add
xchg
or
and
or
add
ss
mov
and
and
leave
add
push
xor
adc
stos
adc
and
or
add
fs
add
xchg
add
dec
mov
dec
adc
stos
xor
xchg
add
add
or
test
add
xchg
push
enter
in
addl
jb
push
and
pop
add
or
mov
or
add
dec
stos
xchg
push
add
inc
push
or
test
dec
stos
add
test
fs
nop
adc
xor
inc
cmpb
fs
nop
and
sub
mov
fs
add
xor
xchg
and
and
add
adc
dec
push
test
adc
add
adc
in
sub
push
mov
nop
movsb
andb
mov
nop
and
dec
adc
sub
push
add
dec
and
and
enter
lods
pop
add
mov
or
jb
add
mov
pop
addb
andb
xor
push
dec
mov
fs
addb
mov
mov
into
and
sbb
xchg
inc
subl
push
xchg
sub
push
xor
or
or
add
xchg
add
and
dec
push
add
adc
mov
gs
dec
add
lods
mov
add
add
enter
stos
add
xchg
sub
mov
adcb
test
inc
and
add
stos
inc
and
sbb
or
les
nop
lret
inc
push
pop
orb
inc
and
or
mov
add
xor
leave
and
or
test
fs
or
xchg
add
nop
inc
nop
mov
andl
sub
addl
xchg
movsb
or
push
addb
adc
and
add
adc
push
add
daa
add
adc
test
push
mov
inc
dec
add
add
and
mov
xor
inc
inc
push
nop
test
sub
and
adc
inc
and
and
adcb
enter
push
add
and
push
xchg
add
add
add
pop
push
fs
dec
adcb
mov
inc
and
or
xor
push
and
nop
and
sub
push
and
add
sub
adc
nop
push
and
dec
adc
xchg
add
or
andb
and
xchg
add
leave
sub
inc
xchg
and
dec
cmpsb
add
andb
add
and
and
outsl
and
dec
sub
add
sub
add
and
and
inc
add
and
incl
mov
or
or
add
and
or
add
and
inc
mov
push
adc
in
nop
orl
xchg
movsb
jmp
dec
stos
sbb
stos
add
adc
and
in
rolb
add
sub
test
and
inc
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
adc
adcb
jbe
push
sbbl
icebp
xor
dec
incl
mov
out
mov
push
push
jb
inc
ja
int3
jae
sub
test
mov
push
push
ljmp
dec
mov
frstor
mov
arpl
lock
xor
repnz
stc
pushl
push
pop
sahf
jae
mov
shr
mov
mov
push
fucomip
out
mov
mov
adc
push
daa
and
idiv
sub
adc
add
cs
and
and
mov
cmp
cmp
fldt
ret
mov
ja
ja
mov
mov
roll
xorl
cmp
or
js
ficoms
lcall
sub
mov
pop
mov
dec
js
pop
xlat
jbe
mov
ficoml
sti
push
pop
inc
mov
mov
or
ljmp
dec
cwtl
and
ljmp
pop
sub
inc
add
cmp
stc
out
stos
inc
jge
scas
ror
adc
out
je
inc
jo
mov
dec
add
cmp
lahf
notb
ffreep
push
xor
out
test
adc
mov
push
jg
cmp
ret
add
popa
dec
push
and
test
sbb
inc
jno
mov
mov
push
push
mov
add
sub
sti
mov
add
xorb
jmp
jnp
mov
xchg
or
jns
mov
adc
adc
pop
jle
mulb
sub
mov
mov
nop
mov
in
lcall
nop
mov
clc
cmp
outsl
add
cmpsl
mov
adc
stos
in
popa
cli
out
mov
xchg
shrb
mov
mov
jne
ret
insl
aaa
enter
into
ret
jmp
jae
and
clc
sarl
inc
push
or
loope
pop
fstl
xor
fstpl
vcmpsd
inc
ds
mov
fimull
pop
jle
aad
mov
outsb
mov
into
enter
rsm
daa
cmp
pop
hlt
jmp
mov
in
shlb
fwait
rclb
sbb
jmp
lock
jle
push
fcoms
or
lds
fsts
sahf
mov
pop
push
stos
decl
loop
and
mov
sub
or
ret
ret
fsubl
xor
jo
push
aam
inc
out
adc
fmull
insb
jecxz
add
ljmp
dec
dec
incl
mov
adc
or
cmc
jo
sbb
mov
movsl
adc
call
push
addb
pop
dec
cmp
cltd
nop
push
dec
mov
or
inc
sbb
and
nop
mov
je
mov
add
mov
add
adc
adc
nop
inc
add
push
inc
rclb
decl
push
pop
call
add
ret
xlat
jp
cmpsl
dec
dec
nop
dec
push
test
cmp
mov
test
dec
aad
cld
xchg
cmovp
adc
sahf
pop
pushl
push
inc
push
inc
pop
or
enter
mov
or
inc
xchg
mov
xchg
sub
and
jo
std
jge
mov
imul
and
adc
sti
mov
out
loop
fwait
jmp
fisttps
data16
insl
daa
jnp
xlat
xlat
adc
jge
cmc
loopne
pushl
jmp
roll
cmp
ficoml
icebp
rcll
out
data16
ficompl
adc
stc
jge
fs
daa
shll
lds
pusha
adc
test
dec
pop
mov
ljmp
imul
pop
aas
push
outsb
outsb
repnz
outsl
fcmovnb
pop
comiss
mov
fiadds
out
push
imul
dec
sbbb
test
popa
ss
lcall
test
push
push
jg
xchg
rcl
xchg
mov
int3
rcrb
jl
jmp
std
sar
push
push
and
stc
lods
das
cld
ljmp
add
jmp
test
lcall
jecxz
push
cmpsl
jle
fldenv
sbb
jb
ret
xor
or
aad
lret
cmpsb
ljmp
adc
or
jb
aas
lods
daa
add
xchg
aad
xchg
outsb
dec
add
aaa
out
xlat
test
or
outsl
rorb
loop
push
cmp
lahf
add
inc
mov
push
inc
add
jae
jmp
rcrb
test
shr
adc
shl
xchg
int3
inc
movb
aam
test
out
dec
sub
pop
ljmp
push
and
outsb
cmp
push
jmp
es
pop
sbb
sti
test
or
jl
cmc
jno
mov
lods
in
stos
mov
jns
jmp
shrl
pop
jl
movsb
ret
scas
call
fmuls
push
adc
push
call
jmp
inc
ret
sub
out
cli
call
outsb
push
test
das
lock
sub
bound
mov
push
es
lea
decl
push
mov
frstor
push
pushf
js
inc
adc
in
or
decl
cli
aas
aaa
mov
dec
dec
iret
rcr
sbb
mov
test
xlat
adc
ret
inc
and
jecxz
sub
push
and
shlb
or
pop
in
cmc
cmpsl
jg
out
inc
pop
mov
dec
jmp
and
push
xlat
inc
lahf
sub
cmp
loop
in
outsb
mov
shrb
js
pop
call
mov
mov
mov
popa
repz
movsb
push
mov
mov
fists
jns
dec
mov
imul
xchg
push
inc
xchg
int
fwait
sbb
push
imul
pop
cmp
xor
xchg
jbe
cmp
insb
test
jo
shll
es
imul
pushl
cmp
mov
cmp
cld
pop
mov
xlat
imul
cld
mov
decl
dec
mov
sbb
dec
fwait
dec
lahf
push
and
jbe
mov
push
out
jmp
dec
sbb
fldl
gs
arpl
sbb
lahf
out
inc
mov
cwtl
cmp
dec
jbe
xchg
jmp
fwait
aas
pop
inc
pop
sub
dec
cwtl
mov
test
sahf
xor
iret
push
je
inc
jp
ds
decl
ljmp
nop
xlat
jge
cmpsb
cmp
sub
push
mov
out
mov
jmp
push
pop
dec
loope
push
fidivl
das
sbb
adc
inc
scas
mov
test
pushw
adc
call
jg
scas
add
pusha
lcall
sbb
pop
ss
mov
mov
mov
pushl
repnz
rol
mov
add
pop
sti
inc
cli
push
push
mov
xor
aas
pushl
stos
fcmovnb
movsb
jno
dec
lods
cmp
add
push
das
sub
mov
push
std
sub
sbbb
test
adcb
dec
inc
push
dec
pop
aas
inc
add
les
lock
jb
xchg
sahf
or
ljmp
cmp
sbb
aas
sub
in
rolb
ljmp
sbb
cld
cltd
out
sar
test
loopne
jo
sub
push
pop
fcos
jmp
and
imulb
cltd
sbb
into
jbe
push
mov
das
repz
decl
sub
push
fldcw
aam
scas
les
es
push
sub
mov
inc
mov
loope
pop
stos
fstl
add
sbb
hlt
arpl
leave
jae
decl
in
push
inc
movsl
out
jp
push
aad
or
scas
xorb
jg
sbb
push
cld
ljmp
pop
dec
mov
dec
jge
aas
lock
dec
adcb
outsl
test
jns
mov
jbe
and
mov
dec
mov
inc
mov
pop
cmc
fisubl
inc
cwtl
push
inc
push
jns
les
pop
stos
sbb
or
lods
cmp
aaa
dec
repz
ljmp
les
add
ss
xor
lods
adc
xchg
aam
aaa
cld
lods
popa
cmp
inc
pushf
adc
scas
pop
jb
negl
dec
xchg
sub
dec
lods
push
imul
orb
xlat
cwtl
push
scas
cmp
lcall
stos
cmp
nop
mov
cmp
ss
jl
pop
cld
cmpb
dec
mov
outsl
dec
lods
ss
pop
lock
sub
mov
pop
jle
mov
scas
add
sahf
adc
aas
sbb
push
decl
outsb
dec
mov
push
inc
stos
push
jb
mov
jnp
mov
je
out
outsl
jbe
outsb
jns
bound
xchg
cmp
scas
mov
push
xorl
xor
or
lcall
std
mov
f2xm1
decl
push
test
jg
negl
jb
mov
jge
add
cmc
sbb
mov
jns
jg
stos
dec
mov
inc
into
cmp
mov
fwait
inc
mov
sbbb
push
test
pop
cmpsl
jg
mov
mov
clc
jg
nop
inc
in
enter
cmp
in
sbb
les
cld
out
je
mov
inc
nop
pop
test
imulb
ds
mov
les
jb
lock
xchg
stos
pusha
dec
out
push
jae
mov
scas
mov
imulb
insb
out
rcl
add
negb
movb
push
and
jae
cmp
fstpt
insl
roll
xor
negl
xchg
lods
ds
dec
fwait
loope
jg
mov
or
insl
seto
rcrl
aam
sbb
std
or
scas
jmp
stc
dec
outsl
gs
les
lock
jno
jbe
lods
ss
ds
cmp
in
mov
sub
mov
mov
cli
jmp
clc
fistpll
pop
out
mov
fildll
int3
ficompl
xchg
sarb
jle
adc
jg
inc
outsl
xor
lcall
into
pop
int3
push
daa
cmc
mov
cltd
sbb
push
lret
and
sti
jg
es
int
xchg
int3
xor
xchg
inc
sarb
xor
idiv
mov
jae
popf
cmp
cmp
sarb
dec
pushf
ds
out
fstpt
in
jl
push
ss
fimuls
xchg
ja
ss
mov
inc
jl
call
sbb
icebp
push
xchg
outsl
int3
xor
xchg
les
nop
in
xchg
cmp
sub
mov
mov
outsb
cmp
out
and
pushl
pop
cmpsl
mov
cmc
ljmp
js
ds
and
jle
aam
mov
outsl
decl
dec
fucomi
sub
push
outsb
mov
shll
inc
sahf
push
nop
jmp
pop
aas
mov
ret
pushf
fisubl
mov
xchg
bound
lock
mov
call
popf
ret
lret
add
bound
es
sub
xchg
iret
jo
out
mov
das
xchg
in
call
int3
lahf
scas
call
rol
sub
fwait
pop
insl
es
sbb
pusha
mov
int
pushl
sahf
mov
xchg
test
or
and
xchg
test
in
incl
add
xchg
xor
rolb
dec
cs
xchg
lds
add
dec
dec
out
repz
ss
hlt
inc
aam
pop
mov
in
adc
hlt
add
mov
push
test
insb
faddp
adcb
movsb
in
cmp
lahf
nop
addr16
adc
jnp
fisttpl
fsts
mov
jle
xchg
leave
push
push
call
add
push
ljmp
out
call
mov
cwtl
enter
push
das
pop
sbb
fcomip
fadds
adc
out
dec
pop
lcall
repnz
pusha
ret
incl
or
das
hlt
push
inc
dec
adc
ja
fdiv
ljmp
dec
xor
pop
test
cs
mov
scas
sahf
lret
flds
lds
vmovaps
dec
push
inc
mov
push
cs
incl
sub
inc
data16
outsb
cmp
aaa
add
mov
and
call
sbb
add
scas
and
imul
dec
mov
std
pop
mov
mov
scas
jp
mov
scas
lea
std
subb
into
call
mov
int
jle
call
in
subl
inc
pop
pop
outsb
jg
shrb
cmpsl
inc
shll
adc
xlat
dec
mov
sbb
scas
push
ficomps
sbb
mov
fiadds
and
cmp
fcomip
jmp
jmp
pop
mov
cmpsl
test
and
js,pt
push
sbbb
sbb
adc
mov
inc
mov
add
mov
fstpt
lahf
lret
xchg
inc
cltd
cmp
jl
in
mov
push
arpl
push
mov
stc
iret
sub
mov
mov
lcall
pop
pop
nop
test
out
mov
xor
pusha
gs
cmp
call
push
push
xor
push
inc
jae
imul
pop
cmp
cmp
pop
inc
inc
dec
inc
bound
js
push
popa
dec
push
js
push
dec
bound
dec
inc
inc
jp
inc
xor
outsb
outsb
xor
jo
outsb
ljmp
inc
jae
inc
je
pop
dec
dec
ja
inc
dec
dec
insb
xor
jo
imul
inc
pop
loopne
sti
outsb
pop
imul
dec
gs
pop
jo
fs
dec
push
outsb
je
inc
decl
jo
aaa
push
dec
inc
jo
fs
aaa
dec
dec
dec
aaa
push
inc
ja
push
jb
je
arpl
inc
inc
ljmp
jbe
inc
pop
dec
jp
dec
pop
dec
xor
imul
push
push
pop
inc
push
dec
je
jp
jns
incl
push
ss
push
push
jb
push
aaa
jo
imul
dec
jo
inc
xor
arpl
fisttpl
lock
push
repnz
outsb
imul
xor
push
sti
in
push
xor
inc
outsl
fs
dec
arpl
pop
push
inc
imul
xor
jle
dec
outsl
inc
xor
jb
xor
pop
push
insl
insb
push
jns
imul
jg
jo
outsb
outsl
inc
inc
xor
jne
jb
xor
push
inc
push
xor
jbe
xor
dec
jbe
xor
decl
dec
inc
inc
dec
ss
push
gs
xor
push
addr16
ljmp
push
push
jns
dec
dec
insb
data16
ja
cmp
inc
jp
dec
inc
inc
dec
bound
std
decl
dec
push
imul
jb
jno
add
fs
mov
mov
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
orl
lcall
add
push
gs
je
jbe
outsb
je
adc
push
in
jb
arpl
jae
gs
jo
inc
outsb
arpl
gs
jns
je
insl
push
outsl
imul
jb
push
push
imul
out
popf
and
push
imul
inc
gs
jne
je
inc
dec
mov
jge
inc
ret
inc
jne
jp
xchg
dec
in
imul
stos
insb
call
arpl
insl
dec
insb
in
sti
das
int
bound
je
jb
jne
push
outsw
inc
and
testb
imul
adc
mov
addr16
arpl
popa
push
inc
je
push
dec
outsl
mov
or
inc
js
aaa
mov
sbb
inc
sbb
push
mov
xor
popa
fadds
shrb
testb
in
bound
sub
inc
ljmp
jae
push
push
dec
gs
sbb
fs
push
dec
and
jo
outsl
outsb
dec
popa
outsb
fs
cmp
out
lods
insl
or
push
data16
cmp
jne
mov
dec
add
call
mov
pop
inc
jns
shll
pushf
mov
je
sbb
fld
nopl
inc
insb
dec
inc
popl
outsl
sub
push
xor
and
mov
adc
xor
sub
mov
iret
add
inc
or
add
ljmp
xor
gs
lods
xchg
in
sub
pusha
cmp
jno
add
je,pt
stc
push
pusha
mov
sub
ficompl
mov
xchg
or
test
js
fs
push
dec
gs
leave
add
jb
push
jns
gs
imul
inc
mov
mov
outsl
jo
xchg
ret
mov
inc
jno
arpl
scas
pusha
inc
andb
and
test
in
sub
push
add
add
js
insl
add
push
stos
sbb
pop
shrl
push
or
jo
sub
cmpsl
inc
add
push
das
add
jo
lcall
inc
fists
lods
dec
subb
inc
daa
jg
mov
add
sahf
xor
push
je
insb
push
arpl
das
out
je
jo
aad
gs
imul
push
push
imul
adc
das
cmp
nop
mov
add
bound
das
andl
inc
add
add
mov
jg
and
xlat
out
adc
movsb
mov
sarl
mov
xor
pop
xchg
loope
or
pop
push
and
adc
add
mov
and
add
call
aam
pop
dec
fsubrs
popa
jb
dec
popa
movl
push
and
decl
fistl
push
dec
add
sub
loopne
popl
sti
jecxz
pop
add
nop
add
popf
push
adc
jbe
flds
xor
and
inc
add
jae
add
stc
add
push
inc
add
popl
pop
xchg
xchg
cs
je
mov
scas
std
and
pop
out
cmpsb
add
popa
sbb
sbb
in
mov
outsb
dec
push
sar
imulb
bsf
cs
add
xor
repz
sahf
cmpsb
lock
adc
jb
mov
xchg
dec
sbb
or
adc
dec
xchg
and
add
test
add
add
add
add
std
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
adcb
add
add
addb
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
sbb
add
inc
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
adc
pop
add
add
add
add
add
add
add
add
add
loopne
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
or
add
dec
adc
add
in
add
add
add
add
add
add
add
xor
add
push
push
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
inc
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
js
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
test
inc
add
add
add
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
nop
sbb
sahf
addl
in
add
add
add
and
add
add
push
sub
add
add
push
xor
add
add
push
inc
add
add
push
inc
push
inc
add
add
push
dec
push
inc
add
add
push
push
pop
inc
add
add
push
pop
pop
inc
add
add
push
pusha
pop
inc
add
add
push
push
mov
add
aaa
call
lcall
sbb
push
push
add
fiadds
aam
aad
add
fldl
add
xchg
orl
insl
fiadds
add
iret
addb
addl
fiadds
add
add
fildl
jle
add
sbb
push
addb
sbb
add
sbb
sub
add
faddl
pop
lds
xorb
stos
mov
bts
adcb
sarl
sub
add
mov
stos
mov
add
sarl
cmp
or
add
icebp
add
add
inc
cmpsb
std
inc
add
rolb
into
or
popf
inc
add
jg
jg
jg
jg
inc
inc
adc
pusha
add
pusha
add
add
add
add
push
pusha
add
pusha
add
pusha
ds
pusha
add
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
push
add
add
pusha
add
pusha
add
push
pusha
add
add
pusha
add
add
add
pusha
add
pusha
add
add
add
xor
add
das
aas
test
add
pusha
add
add
add
push
pusha
add
add
ds
jecxz
jnp
fldl
lret
pusha
add
pusha
add
add
add
pusha
add
pusha
add
add
pusha
add
pusha
add
pusha
add
loopne
pop
or
add
mov
fldl
stos
movsl
pusha
add
add
add
add
pusha
add
pusha
add
pusha
add
sti
pusha
add
pusha
add
pusha
add
add
pusha
add
add
pusha
add
aas
pusha
add
pusha
add
punpcklbw
pusha
add
pusha
add
add
pusha
add
add
adc
add
pusha
add
pusha
add
push
fldl
int
add
pusha
add
add
pusha
add
add
add
sbb
pop
pusha
add
pusha
add
or
pusha
add
pusha
add
pusha
add
add
add
add
pusha
add
pusha
add
xchg
pusha
psraw
sub
pusha
add
pusha
add
pusha
add
adc
add
pusha
add
pusha
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
add
pusha
add
add
pusha
sbb
loopne
fldenv
mov
aas
pusha
add
pusha
add
pusha
add
add
add
pusha
add
add
adc
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
add
or
add
pusha
add
add
xorl
out
add
add
cmpsl
pop
inc
rcrb
and
add
inc
and
stos
pusha
add
add
loopne
sbb
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
loopne
cmp
stos
punpcklbw
sbb
jno
add
add
pusha
add
add
repz
in
xchg
pusha
mov
pusha
add
pusha
add
pop
pusha
add
or
punpcklbw
add
adc
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
push
pusha
add
pusha
add
add
pusha
add
add
xor
das
inc
xor
fisttpll
fldl
leave
xor
call
add
xor
fwait
xor
xchg
add
xor
pop
xor
inc
xor
out
adc
add
xor
and
fstl
xor
aas
xor
sbb
add
xor
imul
mov
mov
xor
test
add
sub
xor
adc
add
add
inc
xor
int
fldl
xlat
mov
sub
xor
pop
xor
sbb
add
xor
jnp
add
add
xor
xorl
xchg
xor
loope
add
push
xor
std
xor
leave
xor
fnstenv
add
push
jo
aaa
xor
pop
xor
jmp
add
xor
cmc
xor
shll
add
xor
or
add
add
xor
fwait
jo
mov
add
xor
push
xor
inc
xor
ja
add
xor
sbb
add
xor
jno
f2xm1
and
xor
adc
add
add
xor
test
add
xor
iret
xor
daa
lock
stos
cmp
add
xor
xor
jnp
add
xor
cmc
xor
lahf
xor
push
lea
add
or
add
pop
shl
add
xor
scas
aad
add
dec
stc
xor
mov
xor
shll
leave
cmp
add
jge
sub
pop
int3
push
lock
xor
into
xor
pop
xor
int
jo
xor
jg
xor
push
enter
pop
movsl
xor
push
xor
inc
xor
jge
add
add
xor
sbb
add
xor
add
jo
xor
dec
lock
add
xor
xchg
xor
jns
add
mov
pop
pusha
in
imul
movsb
or
add
nop
inc
loope
mov
push
fsubrs
mov
sbb
push
data16
daa
add
cmp
jb
add
xchg
cwtl
push
enter
add
add
cltd
popa
das
cld
imul
mov
bound
imul
test
jg
xchg
aas
and
cwtl
inc
xchg
jns
test
verw
sub
push
push
sub
add
add
lds
jb
call
inc
test
sub
add
data16
sbb
roll
xchg
mov
mov
ljmp
adc
add
stos
mov
pushf
ljmp
mov
mov
mov
stos
mov
mov
add
mov
popf
add
add
add
or
pop
pop
add
inc
iret
fcompl
pop
pop
pop
add
fcmovu
lcall
add
out
out
pop
pop
pop
add
xlat
add
clc
out
mov
pop
add
add
out
out
popl
negl
mov
mov
xlat
xlat
add
cmpsl
scas
scas
test
scas
xlat
adc
add
jo
add
add
in
add
add
mov
add
add
add
add
add
mov
mov
xchg
add
rolb
mov
add
add
xchg
add
add
add
add
push
pushf
popf
add
jo
adc
add
lcall
inc
jo
adc
fs
adc
stos
sbb
adc
or
add
je
stos
push
je
or
add
add
jo
xor
add
or
xchg
jo
stos
or
xorl
jo
mov
jo
outsb
jo
add
add
add
add
jo
add
lahf
xchg
test
add
jo
movsl
jo
add
sub
add
jo
arpl
fstp
daa
rclb
adc
mov
add
in
push
adc
xor
out
sub
add
or
and
add
fldl
add
add
inc
add
add
incb
jno
add
and
lock
add
jp
adc
fidivs
rorb
das
add
add
add
std
cld
sti
cli
stc
clc
add
add
hlt
add
icebp
lock
add
in
in
jmp
jmp
push
add
mov
mov
mov
mov
mov
scas
lods
lods
stos
stos
test
movsl
add
addl
mov
pop
add
pop
add
add
add
add
add
ltr
add
sbb
add
fstp
fcmovnu
fcom
inc
add
aam
sar
rcl
sbb
lods
add
add
add
or
add
add
add
add
add
add
add
add
push
in
and
aas
add
add
add
push
mov
add
outsb
repz
rorb
xchg
xchg
aas
mov
shlb
shrl
les
add
mov
xchg
add
cltd
mov
lock
movsl
or
pushf
add
xchg
dec
sbb
fstps
pop
jbe
out
pop
stc
mov
add
xchg
jmp
cmp
adc
sbbl
movsb
xchg
add
cmpb
push
in
add
cmp
add
jb
or
das
sti
xor
repnz
jmp
lret
add
out
add
add
andb
push
fdivs
cmp
add
ret
xlat
push
fisttpll
cmpsl
push
add
jne
popa
es
push
xchg
push
aas
adc
inc
fldt
dec
jbe
iret
fidivl
sub
imul
xchg
sbb
popa
ret
xor
inc
lret
fidivrl
push
iret
add
movsl
loopne
sub
xor
pusha
jmp
bnd
xor
add
testl
fisttpll
push
inc
testl
jge
inc
cmp
into
or
add
jnp
out
aas
xchg
jge
popf
add
add
fldl
add
addb
addb
rolb
add
adc
mov
sub
add
add
add
test
add
add
addb
addb
addb
rolb
rolb
mov
iret
les
xchg
rolb
rorl
add
rolb
add
add
add
jecxz
add
add
add
inc
rolb
add
add
rolb
add
add
mov
add
xor
add
add
add
adc
pop
pop
rolb
add
push
add
rolb
rorb
rolb
adc
faddl
imul
ljmp
add
aad
dec
push
rolb
rorb
rolb
rolb
push
rolb
rclb
rolb
rorb
inc
rolb
add
add
rclb
out
add
inc
rolb
add
add
rolb
push
rolb
adc
rolb
add
int
sub
add
add
rolb
rorb
inc
rolb
add
add
add
adc
in
add
std
add
xchg
rolb
add
add
inc
rolb
add
add
rolb
push
add
add
rolb
shrb
add
add
rolb
add
aaa
das
mov
push
add
rolb
rolb
rolb
push
shlb
rolb
shrb
add
add
add
rcrb
rolb
rolb
add
push
add
add
add
rolb
rolb
rolb
adc
lret
rolb
add
push
add
rolb
rolb
rolb
push
shlb
rolb
sarb
rolb
inc
rorb
lahf
add
add
add
rolb
rcrb
rolb
rorb
push
rolb
rolb
add
loopne
cmp
cltd
fidivrs
out
mov
xlat
loopne
jno
add
add
xchg
lahf
add
loopne
pavgb
out
in
add
loopne
int3
loopne
dec
loopne
and
or
loopne
xor
repz
loopne
xchg
loop
fwait
add
loopne
inc
inc
loopne
sub
add
push
loopne
fwait
loopne
aas
loopne
into
loopne
pop
inc
loopne
cmp
stc
add
add
loopne
ja
add
loopne
jg
add
loopne
inc
loopne
out
add
add
loopne
jns
sbb
add
adc
sub
add
adc
push
repz
sahf
add
push
add
loopne
in
loopne
iret
loopne
cmp
add
loopne
add
loopne
sbb
add
add
push
add
add
or
add
add
inc
loopne
push
add
add
loopne
push
loopne
repz
inc
loopne
sti
loopne
dec
push
loopne
ret
loopne
sti
loopne
shl
add
inc
loopne
daa
xchg
lahf
add
loopne
mul
add
loopne
inc
loopne
sbb
add
loopne
pop
push
add
add
and
pushf
loopne
mov
add
add
pop
jecxz
add
adc
lods
loopne
push
loope
loopne
data16
lret
loopne
stos
dec
loopne
shl
add
sbb
loopne
addb
das
xchg
lahf
add
loopne
inc
loopne
adc
add
jae
add
loopne
jg
add
loopne
mul
inc
push
loopne
stos
jp
push
pop
loopne
jne
or
loopne
stos
loopne
and
add
loopne
xchg
add
loopne
xchg
loopne
stos
push
loopne
lahf
loopne
dec
loopne
jmp
add
loopne
xor
add
loopne
stos
sbb
push
lret
loopne
pop
loopne
shl
add
adc
add
loopne
ss
sub
loope
loopne
and
or
push
loopne
push
loopne
loopnew
pop
loopne
jae
loopne
int3
loopne
inc
loopne
ret
push
push
loopne
dec
loopne
mov
add
loopne
mov
or
loopne
mov
add
loopne
icebp
loopne
xchg
loopne
addr16
push
add
loopne
mov
add
loopne
ret
loopne
cli
loopne
lret
loop
ficoml
loopne
dec
loopne
add
add
inc
loopne
daa
xchg
lahf
add
loopne
das
push
loopne
pop
loopne
aaa
loopne
add
add
push
loopne
add
add
adc
push
loopne
sub
cmp
add
inc
push
push
loopne
out
loopne
mov
add
loopne
mov
add
add
loopne
loopne
or
addr16
mov
add
loopne
loopne
loope
shl
add
add
lahf
push
add
add
loopne
nop
loopne
or
add
add
add
loopne
jmp
dec
ja
add
loopne
inc
push
loopne
push
loopne
cmpsl
loopne
mul
adc
loope
loopne
sbb
add
loopne
and
in
loopne
mov
add
loop
roll
jecxz
add
jo
cmp
repz
push
icebp
or
jo
or
jo
roll
call
add
add
lock
jo
test
or
add
add
lock
cmpsl
jo
xchg
scas
jo
loopne
or
jo
xchg
jo
xchg
lock
dec
jo
repz
cmp
adc
mov
or
jo
inc
lock
shl
sub
add
add
jo
test
jo
cmp
addr16
xor
add
lock
jo
iret
jo
stos
pop
jo
mov
add
add
lock
sub
push
adc
jo
or
stos
ret
jo
repz
jo
cmp
add
and
cmp
stos
mov
add
jo
addr16
stos
dec
jo
jg
add
lock
push
jo
stos
popa
jo
stos
jo
pop
jo
xchg
mov
jmp
add
adc
shll
lods
jo
das
pushf
lahf
add
jo
loop
jo
stos
adc
add
mov
add
jo
or
ja
add
hlt
add
xor
test
add
jo
mov
add
jo
stos
shl
or
jo
sub
or
jno
sub
add
push
jo
push
jo
add
insl
jo
adc
sbb
pop
jo
dec
jo
stos
aas
lock
lock
jo
mov
add
pop
lock
push
divl
sub
or
lock
xor
jo
aas
jo
inc
lock
dec
jno
jo
movsb
jno
jo
stos
stc
jo
dec
jo
scas
jo
push
jo
stos
sub
mov
add
lock
addr16
xchg
mov
mov
insl
addl
add
add
jo
xor
mov
add
push
add
pop
lahf
add
lahf
and
add
sbb
add
jge
pop
fnstsw
add
jp
loop
jns
test
fidivs
mov
add
je
mov
add
jno
mov
add
outsb
fisubrs
add
fisubrs
loope
fisubrs
test
push
data16
add
fidivrs
add
fiadds
frstor
mov
mov
add
sbb
fstp
sbb
out
ficomps
fcompp
ficoms
add
adc
faddp
add
adc
rcr
pmaxub
add
push
ficomps
fimuls
fimuls
add
push
fidivs
add
add
mov
add
cmp
cmp
in
fidivrs
fidivs
add
xor
faddp
add
xor
rcr
das
fmulp
add
ficomps
add
sub
mov
daa
fiadds
mov
and
scas
add
and
mov
add
jle
stc
fidivrs
sti
add
jbe
out
fidivs
add
jae
jmp
outsb
add
imul
out
add
fs
fisubs
ljmp
sbb
xlat
push
fimuls
adc
ret
push
or
add
add
sbb
fst
add
cmp
fisubrs
add
daa
ffree
fisubs
fnsave
sbb
fsub
add
jl
mov
jp
testl
fidivs
int
fidivs
fidivs
mov
mov
push
testb
imul
int3
add
fs
fisubs
mov
xchg
fisubs
xchg
add
pop
faddl
ficomps
fdiv
add
adc
leave
ficoms
fdiv
add
push
fcompl
add
or
jmp
add
add
mov
add
mov
fidivrs
fidivrs
fdiv
add
xor
enter
hlt
add
fcompl
add
sub
call
add
and
mov
and
mov
fisubs
fcmovnu
add
jge
shr
jl
rolb
out
jnp
fsubrp
jp
and
out
jns
sub
add
ja
jl
jbe
jp
out
jne
js
je
jbe
out
jae
cmp
jb
cmp
out
jno
cmp
jo
sbb
out
outsl
out
outsb
fstpt
out
insl
fstpt
insb
fstpt
out
imul
out
push
jne
out
imul
jb
out
data16
out
fldt
fldt
out
arpl
push
add
popa
out
pop
push
fistpl
add
sbb
fistpl
add
sbb
pop
out
sbb
adc
adc
sbb
adc
out
pop
fistl
out
push
fistl
add
adc
fisttpl
or
adc
pop
add
adc
add
adc
add
out
pand
out
push
fstpt
add
or
fstpt
cmp
or
cmp
out
or
aaa
out
or
ss
pop
add
add
add
add
xor
add
sub
out
add
inc
out
inc
add
jae
rcr
fs
add
pusha
fcmovb
fstps
add
sbb
add
sbb
sti
fstps
add
sbb
stc
fstps
add
pop
fsts
add
adc
add
adc
repz
add
adc
icebp
fsts
add
pminub
add
or
add
or
jmp
or
ljmp
or
call
out
push
add
add
ficompl
sahf
fnstcw
cmp
pushf
fnstcw
ficompl
lcall
cmp
cwtl
fnstenv
ficoml
xchg
fnstenv
xor
xchg
fnstenv
ficoml
xchg
fnstenv
ficoml
nop
fldcw
fimull
mov
sub
jle
fstpt
mov
fstpt
fstpt
mov
fstpt
mov
jns
mov
fstpt
mov
ja
xchg
xchg
jne
test
addl
jb
dec
addl
fldt
leave
add
outsb
fldt
faddl
fldt
fldt
fildl
fldt
fcmovu
imul
xlat
add
data16
aad
roll
dec
roll
rcr
pop
fsts
out
fistpl
sbb
cltd
fistpl
fldpi
add
sbb
ljmp
sbb
in
fistl
fstps
out
adc
adc
in
adc
in
fistl
fistl
add
adc
loope
psubusw
add
push
fsts
add
or
sahf
fisttpl
fstps
pushf
fisttpl
fldl2t
add
or
in
fildl
fsts
xchg
fildl
add
xchg
fildl
fsts
xchg
fildl
fstps
xchg
fstpt
fyl2x
add
ds
fstpt
cmp
stc
fstpt
fxch
add
cmp
lret
fsincos
add
cmp
int3
fsqrt
add
ss
xor
fld
add
xor
ret
fld
add
xor
rcr
fld
add
cs
fldt
sub
fldt
fscale
add
sub
cld
fldt
fxch
add
sub
int
daa
fpatan
add
es
and
neg
and
repnz
and
neg
and
clc
add
and
cmc
fstpt
pop
add
jge
push
fdivrl
add
jnp
push
fdivrl
jne
fdivrl
push
fdivl
push
add
jbe
je
je
push
add
jno
pop
fdivl
lret
outsb
fdivs
insl
fdivs
fdivr
aas
insb
fdivs
imul
fsubrl
adc
fsubrl
adc
fcoms
fsubl
adc
fsubrs
fcoms
fcompl
fmuls
sbb
fmuls
fmuls
sbb
dec
fcompl
fmuls
sbb
dec
fcoml
fadds
push
fadds
adc
fadds
fadds
adc
inc
fcoml
fadds
adc
inc
fmull
fdivrs
push
fdivrs
or
fdivrs
or
jp
or
jns
or
js
pop
fdivs
push
fdivs
fsubrs
cmp
fsubrs
fsubrs
cmp
push
cmp
imul
aaa
fsubs
fsubs
xor
fsubs
fsubs
xor
fdivl
fsubs
xor
pusha
fsubrl
fcomps
fsubrl
fcomps
fsubrl
fcomps
fsubrl
fcomps
fsubrl
fcomps
fsubrl
fcomps
fsubl
fcoms
fsubl
fcoms
fdivrl
push
cli
jl
add
jnp
cld
jp
cld
jns
js
jle
ja
jl
jbe
jnp
jne
jns
je
inc
cld
jae
inc
cld
jb
inc
cld
jno
jg
jo
ja
outsl
xlat
jae
arpl
mov
std
popa
xlat
mov
std
pop
xlat
jmp
push
xlat
ret
xlat
sar
xlat
fdivr
pop
xlat
jecxz
push
xlat
pushf
std
adc
or
adc
or
std
or
xlat
pop
std
add
pop
std
add
idiv
add
cmc
std
add
clc
std
idiv
xor
sub
dec
fisubs
dec
and
dec
and
dec
and
dec
std
sti
aas
sbb
ds
dec
cli
cmp
sar
cmp
sar
cmp
aad
aaa
sti
sti
ss
aam
xor
iret
cli
xor
sar
xor
lret
cli
xor
jecxz
xor
gs
das
fs
cs
add
sub
cld
sub
ret
cli
sub
sti
cli
sub
jmp
sub
repz
daa
jle
fdivr
jge
jl
jnp
jp
fdivr
jns
xlat
js
pushl
aad
jbe
lret
pushl
int3
pushl
cld
sti
jno
stc
pushl
cli
ljmp
mov
outsb
aad
insl
aad
insb
aad
imul
push
xchg
imul
test
addr16
fs
jmp
idiv
aad
add
cmc
cld
sbb
test
sbb
cmp
aad
sbb
cmp
adc
aad
cli
adc
push
cli
adc
jo
pmullw
decl
aad
decl
aad
decl
aad
decb
aad
decl
aad
incl
aad
clc
add
jae
add
pop
cli
add
imul
jno
aas
aad
cli
ds
cli
cmp
aad
cli
cmp
cli
cmp
fyl2xp1
cmp
std
cmp
jne
aaa
aad
cli
ss
cli
xor
aad
stc
xor
mov
stc
xor
mov
clc
cs
ljmp
aad
clc
sub
enter
mov
sub
mov
sub
popf
stc
daa
aad
stc
es
stc
and
aad
and
out
and
aad
jl
jecxz
jns
loope
ja
idiv
jbe
clc
std
pop
aam
add
aam
std
sbb
aad
sbb
addb
aam
std
adc
dec
cld
adc
jnp
adc
adc
or
xlat
cld
or
cmc
std
pop
aam
std
add
aam
std
and
jl
enter
pminub
rorl
fidivrl
rorl
cmp
or
cmp
or
cmp
or
cmp
or
aaa
roll
fidivl
roll
fidivl
roll
xor
add
xor
add
xor
add
xor
das
sarl
fisubrl
sarl
fisubrl
sarl
sub
cmp
sub
cmp
sub
cmp
sub
cmp
daa
shll
fisubl
shll
fisubl
rcr
sarl
fst
jl
jnp
fcmovnbe
jp
fcmovbe
jns
js
fcom
ja
xlat
shll
shll
aad
je
aam
jae
rcl
jb
rcl
jno
rcl
jo
rcl
outsl
ror
shrl
into
shrl
int
insb
ror
shrl
lret
shrl
lret
ror
shrl
enter
shll
shll
vpcmpgtb
shll
ret
shll
ret
rol
shll
rcl
sar
rcrl
sar
rcrl
sar
rcrl
sar
rcrl
sar
rcrl
sar
rcrl
sar
rcll
shl
rcll
shl
rcll
shl
rcll
shl
rcll
shl
rcll
shl
rcll
shl
rorl
shr
rorl
shr
rorl
shr
rorl
shr
rorl
shr
rorl
shr
rorl
shr
roll
shl
roll
shl
roll
shl
rcr
shl
sarl
rcrb
sarl
rcrb
cmp
lcall
rcrb
shll
rclb
shll
xchg
shll
rclb
shrl
rorb
shrl
rorb
sub
mov
sub
mov
sub
mov
daa
rolb
sarl
out
out
jge
in
out
jl
in
out
jnp
jmp
jp
ljmp
shr
out
ja
out
jbe
out
jne
in
je
in
jae
jecxz
jb
loop
jno
loope
jo
loopne
outsl
rcrl
out
insl
rcrl
out
imul
out
push
lcall
rcrl
out
rclw
out
rcll
xchg
out
popa
rcll
out
pop
rorl
out
sbb
rorl
sbb
mov
sbb
mov
sbb
mov
pop
roll
out
adc
roll
adc
sub
roll
out
psrlw
out
or
sarl
or
jbe
or
jne
or
je
pop
shll
push
shll
add
shll
add
outsl
into
add
outsb
into
add
insl
into
insb
into
aas
shrl
shrl
cmp
shrl
cmp
addr16
cmp
data16
cmp
gs
cmp
fs
aaa
shll
shll
xor
shll
xor
pop
into
xor
push
into
xor
sbb
out
das
shrl
out
sub
rcrl
sub
pop
out
sub
pop
out
sub
push
out
sub
push
out
daa
shll
shrl
into
and
shll
jnp
jae
arpl
fisubs
mov
popa
int3
cmpsl
fidivrs
jg
jle
jle
jge
jge
jl
jl
jnp
jnp
jp
jp
jns
jns
js
js
ja
ja
jbe
jbe
jne
jne
je
je
jae
jae
xlat
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
mov
add
neg
add
mov
add
fiadds
add
fiadds
add
fiadds
add
add
add
add
add
add
add
add
mov
add
lock
add
add
pop
and
add
add
add
add
add
add
add
rcr
add
dec
and
add
and
add
and
add
and
add
add
sti
add
add
add
cli
add
add
add
stc
add
add
add
clc
add
add
add
testl
add
cld
add
add
add
incb
add
inc
and
add
add
add
add
roll
add
inc
and
add
add
add
add
icebp
add
add
add
mov
add
je
add
mov
add
jae
add
mov
add
jb
add
mov
add
jno
add
mov
add
jo
add
mov
add
outsl
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
stos
add
add
add
stos
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
add
adc
add
pop
add
add
and
add
add
push
and
add
add
add
add
add
pop
add
add
and
add
add
or
add
pop
add
add
and
add
add
cmp
add
add
add
jge
add
cmp
add
jl
add
and
add
add
xor
fiadds
add
add
test
add
xor
add
addl
add
add
add
addb
lods
xchg
mov
movsb
out
addr16
lods
std
cli
loope
sbb
mov
test
cmc
jl
push
icebp
add
rorb
in
inc
call
out
pop
push
loop
test
mov
pop
pushf
cmp
pop
ret
movsl
mov
xlat
inc
imul
imul
add
test
or
arpl
into
or
sar
and
pop
sub
mov
int
xchg
mov
xor
dec
xchg
pop
sbb
push
repz
outsb
dec
add
pop
out
in
cmpl
add
sti
xchg
lods
inc
pop
push
jecxz
imul
jae
xor
xlat
lret
sbb
imul
jge
das
enter
inc
cld
dec
xchg
sbb
out
hlt
mov
jle
mov
mov
add
xchg
mov
stos
jg
lret
les
mov
jnp
xchg
pop
outsl
sbb
or
cli
int
test
mov
xchg
xor
push
mov
stos
out
push
cmp
adc
xchg
imul
ret
in
push
out
inc
out
push
out
imul
loop
sti
in
ret
in
pop
pop
cmp
push
in
sub
pop
or
ret
or
cmp
lahf
xchg
dec
scas
je
ret
lods
ljmp
xchg
adc
mov
or
xchg
mov
mov
or
sub
and
mov
divb
aam
in
mov
stos
in
mov
in
dec
in
inc
in
jnp
jae
mov
jge
jle
mov
xor
mov
ret
pop
mov
lock
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xlat
lahf
jecxz
aam
mov
push
mov
test
mov
or
add
cmp
xor
sub
and
fucomi
shr
lret
adc
test
xrelease
sbb
mov
div
sahf
mov
outsb
xchg
ljmp
inc
ljmp
arpl
sbb
or
xor
pushf
or
ljmp
push
xchg
jmp
jecxz
fwait
jmp
sub
jmp
pop
adc
leave
cmc
cmpb
lods
outsb
dec
dec
xchg
cltd
cmovge
pop
loopne
lahf
add
lret
add
add
out
and
xchg
out
out
xor
aam
and
xlat
sub
lods
sub
sub
xor
inc
in
in
in
in
jecxz
jecxz
jecxz
jecxz
jecxz
inc
inc
out
inc
popf
cmpsb
lods
out
mov
div
xchg
test
jns
cmp
mov
loopne
loopne
loopne
loopne
loopne
loopne
add
mov
int3
pop
adc
stos
sti
jnp
fiadds
push
leave
jns
repz
or
cs
out
loopne
mov
xchg
cs
shr
xchg
in
mov
xor
xor
cmp
cmpsb
cmc
adc
mov
mov
ljmp
stos
ljmp
push
ljmp
pop
mov
aad
pop
cmpsb
mov
aas
adc
pop
insl
cs
arpl
imul
jmp
shr
jmp
jg
insb
mov
xchg
sbb
call
sbb
call
mov
adc
je
outsl
call
mov
cmpsb
out
out
out
out
sbb
jns
push
add
cwtl
mov
push
in
test
out
in
in
in
in
in
in
in
in
inc
fistpl
test
and
sbb
gs
adc
movsb
loop
subb
jecxz
loop
loop
loop
loop
loop
loop
loop
and
mov
mov
jmp
mov
xchg
mov
pop
loope
loope
loope
loope
loope
loope
loope
push
jns
cli
sub
and
dec
enter
test
mov
dec
mov
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
mov
or
ret
xor
fdivs
sbb
xchg
ds
out
out
in
in
in
in
in
in
dec
pushf
out
inc
leave
xor
or
daa
inc
push
mov
mov
outsl
jecxz
jecxz
jecxz
loop
loop
loop
loop
loop
loop
loop
movsb
ja
dec
and
mov
out
test
or
cmp
stos
les
loopne
loopne
loopne
loopne
pop
add
addl
add
roll
aaa
mov
rcll
int3
mov
inc
jb
cmpsb
in
mov
in
repz
jmp
jmp
ljmp
add
add
add
fstp
fcmovnu
xlat
aad
rcl
rcl
iret
into
int
lret
lret
mov
rol
std
cld
sti
cli
stc
clc
div
cmc
hlt
repz
lock
out
in
in
jmp
jmp
in
loop
loopne
mov
mov
mov
mov
mov
scas
lods
lods
stos
stos
test
test
mov
mov
mov
mov
mov
scas
lods
lods
stos
stos
test
movsb
mov
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
jg
jge
jnp
jns
ja
jne
jae
jno
outsl
outsb
insl
insb
imul
data16
pusha
pop
push
sbb
sbb
push
adc
adc
push
or
or
push
add
fistpll
ds
cmp
ss
xor
cs
sub
es
and
fcmovu
fcom
aad
rcl
rcl
iret
into
int
lret
lret
mov
rol
std
cld
sti
cli
stc
clc
div
cmc
hlt
repz
lock
out
in
in
jmp
jmp
in
loop
loopne
mov
mov
mov
mov
mov
mov
add
stos
test
movsl
test
mov
lcall
xchg
xchg
xchg
xchg
nop
add
mov
test
pop
pop
pop
pop
pop
pop
pop
pop
add
push
push
push
push
push
push
add
dec
dec
dec
dec
dec
dec
add
inc
inc
inc
inc
inc
inc
add
jge
jnp
jns
add
jne
jae
jno
add
insl
insb
imul
add
gs
pusha
add
push
sbb
sbb
pop
push
adc
adc
femms
or
or
pop
push
add
filds
aas
ds
cmp
aaa
ss
xor
das
cs
sub
daa
es
and
loope
add
add
mov
adc
and
adc
and
fdivs
sbbb
xchg
and
mov
push
addb
jo
daa
addb
cmpsl
lea
sbbl
mov
lea
ret
or
add
add
ret
push
add
lds
add
adc
pop
pop
add
iret
fildl
mov
aas
add
adc
nop
adc
add
xchg
rolb
add
and
bsf
mov
add
pushf
lods
mov
rolb
sbb
rolb
mov
sbb
or
lods
mov
rclb
lahf
add
dec
pop
lahf
add
lahf
add
fcoml
invd
add
repnz
add
mov
mov
icebp
out
add
nop
mov
inc
pop
add
cwtl
lcall
add
inc
add
add
add
aad
or
add
inc
cli
inc
jns
add
incl
ret
mov
add
add
add
incl
mov
cli
inc
adc
rclb
stos
rolb
add
xchg
or
xchg
add
inc
add
or
add
add
mov
and
imul
add
mov
nop
add
mov
sahf
add
addl
add
mov
add
add
mov
sbb
add
add
add
lods
add
mov
add
mov
pusha
add
pop
mov
push
mov
lods
pop
bound
arpl
stos
add
mov
pusha
ss
add
mov
stos
scas
in
lock
test
icebp
add
mov
mov
add
call
mov
add
inc
add
lahf
lahf
add
pusha
add
sbb
add
pusha
add
popa
or
pusha
add
pusha
add
dec
incb
pusha
sub
add
lea
in
push
icebp
pusha
add
xor
add
add
sahf
inc
add
mov
add
pusha
add
add
adc
mov
mov
dec
pop
add
dec
dec
pop
dec
push
jne
push
inc
push
je
push
pop
push
add
jnp
dec
push
push
inc
add
dec
arpl
fcmovu
enter
les
xchg
lret
add
cltd
lea
xchg
pushf
add
xchg
pop
repz
cmc
loope
add
out
leave
rol
roll
loopne
sbb
cmp
add
xor
xor
adc
xor
sub
loopne
xor
xor
and
sub
pusha
or
and
rolb
add
pop
and
bound
cs
add
out
in
cli
in
std
jmp
roll
repnz
out
testl
stc
ljmp
fsin
cmc
fcmovnb
or
popf
push
cmp
and
xor
aaa
add
ss
xor
add
jae
cmp
sub
add
and
insb
and
jbe
jp
popa
or
das
sub
sub
sub
cmp
xor
das
sub
and
sub
sub
add
jae
outsl
imul
add
repnz
loop
cld
into
testl
add
push
js
add
sbb
sbb
jnp
pop
push
dec
pop
push
add
pop
push
inc
push
inc
js
push
loope
adc
sub
cmp
add
sbb
and
add
mov
mov
xchg
cltd
xchg
mov
mov
mov
lret
movsb
mov
mov
xorb
mov
pop
or
add
sbbb
sbb
pop
add
add
and
and
cmp
jg
cmp
cmp
sub
popa
sub
and
stos
mov
lock
pop
inc
add
dec
add
add
movsl
mov
mov
in
cmpsl
jmp
jmp
add
inc
push
addr16
add
push
dec
push
inc
push
jge
ja
dec
inc
dec
pop
pop
jne
imul
dec
jge
add
gs
jne
dec
or
jno
pop
pusha
add
xchg
sti
std
add
fst
scas
add
fildl
mov
call
ror
int3
ret
add
int3
cltd
leave
flds
mov
stos
mov
add
stos
clc
sti
mov
loopne
iret
leave
movsl
stos
out
stos
add
xchg
xchg
les
xchg
xchg
aad
enter
add
arpl
outsb
imul
add
add
cltd
addl
add
fcmove
add
int
add
roll
xchg
ljmp
mov
rolb
les
ja
ja
bound
popa
add
xchg
aam
cmp
add
rol
les
lret
movb
rcl
add
add
jp
jo
add
bound
jle
js
add
and
push
insl
sub
sub
push
adc
inc
sbb
aam
cltd
int3
add
xchg
rcl
xchg
faddl
ror
rorb
iret
ret
ret
aad
add
lock
or
sub
add
and
xor
xor
aas
cmp
add
pusha
jno
das
movhps
add
or
push
fisttps
or
add
sbb
pop
add
test
mov
stos
xchg
fwait
xchg
mov
test
add
cmp
add
adc
and
xor
xor
cs
and
aas
add
subl
xchg
fwait
xchg
xchg
lcall
test
rol
sar
ret
rcl
lret
add
ret
into
ret
lock
add
movb
push
inc
push
js
dec
dec
dec
dec
pop
dec
dec
dec
adc
dec
inc
jo
dec
dec
pop
add
dec
dec
push
imul
push
pop
pop
push
pop
and
add
test
xchg
xchg
pushf
xchg
add
jge
jp
jns
outsb
imul
jb
jno
push
inc
add
sbb
add
push
adc
push
add
add
add
fs
gs
imul
jnp
jl
add
fs
xchg
nop
test
xchg
mov
orb
cltd
mov
and
add
and
xor
xor
sub
add
lret
jecxz
rcl
fadds
xlat
aam
mov
xchg
scas
lods
mov
popa
push
push
jl
dec
pusha
jbe
jns
pusha
jb
add
insl
add
push
inc
push
push
pop
add
or
dec
pop
dec
add
push
push
inc
add
movl
fcmovnu
enter
mov
flds
inc
mov
add
xor
add
sbb
or
cmp
adc
push
sbb
add
mov
cmpsl
add
movsb
mov
and
xor
and
pop
add
sub
add
rcr
les
out
ret
fcmovne
iret
flds
dec
popa
dec
pop
adc
push
inc
mov
and
add
and
cmp
sub
sub
add
clc
cld
cli
jecxz
add
in
div
hlt
bnd
add
sub
das
sub
add
mov
int3
cltd
mov
fstp
add
subl
test
and
mul
div
mov
push
inc
push
dec
dec
dec
push
fisttps
dec
push
dec
icebp
add
lret
fsts
fsubr
cli
pushl
add
leave
addb
dec
inc
push
push
add
inc
push
js
push
jns
dec
jae
jg
jb
popa
cmp
sub
insb
jns
push
dec
dec
inc
push
cmpb
dec
inc
pop
pop
jno
add
add
lret
rcl
add
fadd
add
flds
add
xchg
test
stos
add
mov
mov
ljmp
mov
addb
xorl
xchg
test
pop
push
stos
pusha
test
jno
jmp
add
imul
mov
adc
jae
lea
lods
add
xorb
mov
add
scas
sbbl
add
jo
push
xor
test
cwtl
xchg
pop
adc
adc
add
cmp
and
and
xor
and
adc
cwtl
mov
mov
cltd
mov
mov
mov
lahf
cltd
mov
xchg
xchg
xchg
cwtl
xchg
xchg
addl
enter
ret
and
fadds
mov
pop
fld
les
mul
loop
in
stos
jno
loopne
hlt
jmp
scas
cli
idiv
add
roll
aad
in
add
inc
faddp
fxch
icebp
add
test
add
push
dec
push
push
dec
push
dec
add
dec
sbbb
or
push
xor
pop
inc
dec
pop
add
pop
dec
pop
push
push
ja
add
jbe
arpl
add
xor
jo
dec
pop
and
inc
inc
push
rolb
stos
add
lea
aaa
es
and
adc
xor
add
xor
adc
add
add
cltd
mov
push
dec
inc
push
push
add
inc
push
dec
outsl
jge
add
addr16
jb
jns
add
insb
inc
jbe
imul
imul
jnp
insb
jl
jl
inc
push
js
jne
push
pop
push
push
dec
pusha
add
dec
insb
pop
pop
inc
inc
add
add
xor
ds
adc
xor
addb
fs
outsb
popa
insl
and
jb
mov
or
test
sub
add
or
push
repnz
bound
sbb
xor
aaa
add
rcl
adcb
mov
sbb
filds
adc
adc
push
adc
add
fst
leave
add
and
xor
xor
pop
sbb
sbb
and
sub
add
cmpsl
add
add
cltd
mov
add
adc
adc
mov
add
jo
pop
pop
add
add
sbb
sub
and
and
and
xor
call
mov
mov
out
add
test
test
stos
cmpsb
scas
movsl
cmpsl
mov
xor
jle
jge
adc
and
xor
sub
add
push
dec
dec
adc
inc
inc
nop
xor
stc
repz
in
jecxz
jecxz
aad
aad
fmul
sti
repnz
ret
jecxz
ret
shlb
fidivl
or
adc
pop
inc
push
mov
bound
popa
jp
jnp
inc
xor
add
jge
push
push
pop
pop
pop
push
push
add
push
push
dec
add
rolb
rcl
mov
arpl
orb
das
cmp
movlps
popa
push
add
jle
jne
pusha
jbe
bound
push
arpl
add
lods
add
stos
mov
xchg
sbbb
fiadds
push
inc
push
push
icebp
add
mov
add
jno
xor
lahf
lahf
xchg
ficomps
nop
xchg
mov
add
mov
test
mov
add
shll
mov
incb
in
call
out
add
into
mov
and
aaa
jl
outsl
add
ja
sbb
insb
sbb
jno
and
into
fstp
xchg
add
test
jecxz
adc
xor
imul
jb
cmp
add
je
and
bound
adc
outsb
add
or
add
sub
pop
inc
inc
jno
add
xor
add
cmp
femms
push
add
or
outsb
cmp
add
and
add
rol
rol
iret
fiaddl
lea
mov
cld
mov
sti
mov
and
sub
sub
pusha
push
push
push
cmp
imul
outsl
cmp
sbb
sub
jl
pop
or
jo
sub
or
fists
dec
push
push
add
add
lret
int3
rcr
add
or
lret
test
sahf
leave
mov
xchg
rcr
aad
add
add
add
or
sub
add
and
or
sub
add
mov
xchg
lcall
sahf
xchg
cwtl
add
or
in
stc
clc
in
ljmp
imul
icebp
jo
add
inc
dec
push
push
push
push
mov
dec
or
pop
add
add
mov
pushf
inc
add
jg
push
or
sub
add
pop
inc
xor
add
add
add
cmp
and
xor
aaa
add
adc
cmp
add
xor
adc
cs
sub
add
ds
cmp
fsubp
jmp
stc
out
fxch
out
add
repz
lock
sti
call
idiv
cmc
loop
mov
fcomi
stc
incl
in
out
in
add
std
out
lock
clc
test
call
repz
aaa
imul
dec
dec
add
imul
pop
add
fwait
add
cwtl
popl
mov
mov
orb
popf
fwait
add
fsub
add
call
lret
in
call
imul
add
stc
cmc
out
ljmp
jp
jo
push
pop
jo
jno
pusha
add
imul
popa
gs
imul
inc
add
adc
sbb
add
dec
dec
add
push
add
add
test
add
leave
div
stc
cmc
in
add
mov
repz
loop
dec
jbe
popa
insl
push
add
add
add
mov
mov
mov
xchg
test
xchg
stos
mov
movsl
lcall
aad
lahf
pushf
mov
mov
pop
and
jmp
pop
adc
sbb
adc
adc
adc
add
mov
popl
add
add
xor
sub
cmp
cmp
andb
and
sub
push
push
push
push
pop
dec
adc
push
inc
pop
push
inc
add
outsb
push
pop
inc
inc
pop
dec
add
filds
dec
dec
dec
add
and
cmp
add
mov
add
add
movsb
mov
add
and
daa
das
roll
add
jbe
addl
pop
push
inc
inc
push
inc
push
add
push
pop
dec
push
dec
push
add
jg
dec
dec
inc
dec
add
ja
pop
pop
pop
dec
add
inc
ja
addr16
add
push
je
jns
jo
fs
push
pusha
jo
outsl
add
js
push
arpl
adc
sub
pop
rcll
pushf
xchg
add
xchg
xchg
sahf
add
push
inc
push
inc
add
or
pop
inc
jle
bound
dec
inc
gs
or
arpl
or
inc
inc
and
inc
jno
add
mov
lods
scas
add
xchg
adcb
mov
addl
mov
nop
lcall
xchg
test
sahf
xchg
test
mov
lods
lea
cmpsb
add
sub
cmp
sbb
add
pop
add
adc
movlps
pop
adc
aas
sub
adc
adc
or
adc
add
and
ss
aaa
rcrb
xchg
adcb
mov
iret
mov
xchg
test
xchg
mov
pushf
mov
cmpsb
mov
jecxz
add
mov
mov
std
mov
mov
rol
rcl
aam
add
mov
mov
dec
add
dec
dec
pop
push
sbb
adc
inc
inc
pop
pop
inc
add
dec
inc
inc
inc
inc
inc
or
inc
dec
dec
dec
dec
inc
pop
jg
jno
imul
xor
ds
add
jle
imul
outsl
jae
sbb
add
adc
sbb
cmp
add
sbb
add
sbb
add
filds
push
add
dec
inc
filds
sub
add
push
push
sub
and
push
and
cmp
sub
cmp
cmp
insb
add
and
add
into
rcl
rcr
lret
aam
lcall
int
xchg
mov
sar
xlat
sar
add
out
cli
out
call
cli
aam
add
in
clc
out
jmp
out
add
clc
loop
stos
notl
nop
nop
sahf
cltd
rcr
add
xchg
xchg
lcall
loop
popf
mov
into
xchg
mov
add
mov
mov
xchg
cmpsb
add
mov
in
ljmp
push
add
push
inc
push
dec
add
pop
dec
add
pop
dec
push
pop
push
push
add
dec
inc
imul
jp
bound
add
jno
jns
addr16
push
bound
and
daa
add
push
jb
je
add
int
mov
add
mov
stos
popf
xchg
lahf
mov
xchg
test
dec
inc
inc
dec
dec
inc
add
pop
add
dec
inc
inc
dec
pop
prefetcht0
dec
loope
pusha
sbb
movsl
loopne
cli
add
jne
gs
inc
insl
jne
outsl
add
mov
xchg
add
shlb
sub
sub
add
push
push
add
inc
add
aas
and
add
add
gs
and
add
add
outsb
pusha
jns
dec
push
push
inc
jle
inc
add
inc
add
imul
jp
inc
pop
inc
add
mov
lcall
pop
pop
push
add
jle
imul
dec
gs
je
push
test
flds
fld
mov
cltd
inc
add
insl
jo
and
adc
jns
jnp
data16
jo
jo
outsb
imul
imul
test
add
out
ljmp
icebp
in
add
div
out
add
bnd
std
cmc
add
cld
add
scas
movsb
mov
scas
add
fwait
fwait
fnsave
lahf
cltd
popl
sbb
push
pop
push
push
pop
sbbb
push
push
pop
inc
pusha
add
call
loopne
add
jecxz
test
adc
movsb
nop
xchg
rolb
adc
addb
movsb
mov
incb
inc
dec
push
dec
push
pop
add
add
adc
pop
add
pop
sbb
adc
sbb
add
in
out
jmp
int
in
loopne
in
out
mov
lods
lock
out
add
pop
sbb
sub
sub
xor
aaa
xor
xor
jl
outsb
ja
cmp
and
jecxz
mov
cmpsl
stos
mov
test
mov
repz
mov
add
xchg
leave
add
xchg
adcl
mov
enter
pusha
sbb
add
inc
dec
dec
pop
dec
add
or
push
push
dec
add
pop
push
dec
push
push
dec
inc
add
pop
push
pop
push
push
imul
mov
inc
add
push
push
or
inc
dec
add
inc
inc
dec
adc
push
add
inc
push
adc
inc
push
pop
dec
pop
xor
popa
add
add
les
leave
ret
fiaddl
sahf
test
add
push
pop
cmp
cmp
add
std
std
out
xchg
add
adc
pop
outsl
add
fmuls
add
rol
rcrl
out
lret
fmul
lahf
aad
rol
mov
xchg
xchg
movl
fstp
lods
add
jecxz
loope
mov
or
push
add
adc
mov
sbb
addb
imul
ljmp
pop
pop
push
add
pop
or
add
push
add
mov
lods
add
jbe
jo
add
push
add
je
push
outsl
and
xor
add
lods
xchg
add
rcr
mov
add
lret
add
and
add
add
flds
bound
cmp
xor
das
outsb
add
adcl
pusha
or
fs
push
adc
insl
dec
pop
dec
push
adc
add
movsb
repz
imul
cld
add
mov
mov
add
xchg
ja
jge
add
rolb
addb
int
enter
sahf
cwtl
xchg
rcr
xchg
cmpl
mov
scas
sub
mov
jo
add
jnp
jp
and
add
fs
gs
jbe
outsl
gs
imul
add
push
bound
jne
data16
pop
inc
inc
inc
add
or
inc
inc
add
adc
push
xor
push
or
add
sahf
popf
pushf
fwait
lcall
xchg
xchg
xchg
xchg
nop
popl
mov
mov
mov
add
mov
mov
mov
scas
lods
lods
stos
stos
test
movsl
out
out
in
in
add
ljmp
addl
add
push
add
movsb
rolb
and
loope
lahf
clts
add
add
add
test
and
push
jno
repnz
add
cmpsb
add
push
add
mov
in
add
rolb
xchg
add
pushf
add
add
add
add
mov
mov
mov
mov
add
add
add
adc
mov
add
mov
add
nop
push
andb
add
jb
call
out
add
add
add
cltd
push
xchg
xchg
adc
mov
mov
mov
or
add
ss
mov
lods
pusha
add
mov
mov
inc
add
mov
mov
xor
xor
add
xchg
stos
add
xchg
mov
add
mov
mov
xchg
add
add
jecxz
adc
xchg
mov
fwait
mov
ss
and
mov
mov
mov
add
nop
or
pop
stos
jmp
and
sbb
add
cld
add
jge
xchg
mov
lea
add
adc
sub
sahf
lea
or
pushf
xchg
lcall
adc
sahf
pushf
mov
add
lea
add
pushf
xchg
add
lea
sahf
mov
add
xchg
fwait
xor
nop
mov
mov
sbb
add
add
add
mov
add
xchg
add
pushf
mov
and
sahf
xor
lcall
mov
mov
add
cmpsb
repnz
add
rolb
stos
add
mov
lock
mov
mov
or
stos
scas
mov
mov
mov
mov
mov
scas
inc
repnz
lock
add
cwtl
push
daa
mov
bound
xorl
shlb
stc
add
add
xor
xor
xor
xor
xor
movsl
mov
cmpsb
add
add
cmp
add
lock
inc
add
jno
shlb
aad
add
add
push
add
mov
icebp
mov
mov
popa
push
sahf
mov
stos
lods
jae
icebp
add
or
add
fistl
sub
rcll
mov
add
mov
xor
ljmp
in
jo
shlb
out
addb
mov
xor
lods
stos
lods
xor
xor
mov
add
add
aad
pushl
add
add
and
scas
in
pop
popf
mov
pushl
xor
mov
lods
int
or
stos
scas
xor
hlt
add
mov
stos
mov
add
add
popf
mov
mov
scas
add
popf
xchg
mov
xchg
sahf
mov
fwait
mov
scas
loope
push
xchg
mov
mov
inc
sub
repnz
lods
mov
mov
inc
adc
push
mov
add
mov
push
test
xchg
and
add
add
lea
add
mov
push
jno
sbbb
xchg
lea
rorb
pop
mov
inc
roll
stos
lock
lock
test
inc
jno
mov
mov
mov
and
add
add
fistl
into
pop
add
nop
pop
test
pop
mov
je
bound
pushl
push
aad
add
pop
and
bswap
pop
inc
repz
add
add
add
sarl
and
lock
sub
stos
cld
add
mov
pop
lods
lock
push
jno
mov
add
adc
inc
std
add
push
xor
mov
pushl
add
les
stos
jo
mov
xor
add
mov
mov
nop
sub
add
adc
mov
in
rcl
add
cli
lods
std
add
aad
mov
add
stos
loop
mov
pushl
pop
lahf
mov
pushl
cli
mov
arpl
lock
xchg
add
scas
call
or
nop
cs
jo
xor
das
out
dec
popf
repnz
mov
jo
aaa
mov
push
aaa
pop
xor
mov
jno
fiadds
pop
add
stos
popf
mov
and
daa
int
add
pusha
add
push
add
int3
add
mov
ljmp
or
pusha
cmp
xor
aaa
pop
mov
sbb
stos
xor
rolb
push
fiadds
in
pop
sbbb
xor
ja
jo
add
or
xchg
fiadds
push
lcall
lahf
ss
xlat
mov
add
out
and
add
and
inc
add
and
adc
aaa
movsl
pop
add
out
and
and
in
push
aaa
pop
pop
fiadds
push
sbb
sbb
and
push
int3
lahf
add
and
int
add
and
aaa
add
stos
add
xor
and
add
jo
add
sub
add
fs
add
mov
ljmp
or
in
in
stos
in
push
lcall
add
and
add
mov
add
push
lcall
add
push
xor
or
rcll
sub
add
mov
xchg
add
mov
push
sub
sub
aaa
add
movlps
andnps
add
sub
sbbl
pop
pop
stos
faddl
in
pop
sbb
pop
lahf
sbb
and
xor
add
sub
addb
jl
inc
add
add
add
xor
add
pop
add
adc
inc
inc
push
addb
mov
orb
jae
lcall
adc
push
mov
iret
lahf
or
add
into
add
out
and
pop
add
pop
and
lods
js
pop
add
outsl
fidivs
sub
dec
mov
mov
stos
xlat
pop
orb
push
lcall
push
lcall
push
add
add
pop
xor
fcompl
pop
and
stos
add
mov
fisubrs
stos
test
pop
add
fsubr
pop
mov
xchg
push
xor
pushf
and
mov
stos
fcoml
lcall
mov
pop
and
test
mov
aaa
cli
leave
shrb
sub
iret
mov
xorb
xor
call
rcrb
shrb
sub
push
add
daa
pop
cs
pop
cs
sbb
push
cs
aaa
les
adc
stos
fisubl
lcall
test
sub
xlat
adcl
iret
pop
or
and
cmp
and
and
add
rclb
pop
rcrb
lret
add
addb
in
add
mov
mov
xchg
rorb
outsb
popl
lret
or
shlb
and
mov
rolb
add
push
sbb
insb
fiadds
sbb
or
sbb
xor
pop
adcb
ljmp
sbb
push
andb
sbb
sub
and
adcb
add
xor
pop
add
fnsetpm(287
sbb
out
pop
aam
add
sub
add
inc
and
or
xorb
sub
add
xor
and
adcb
lcall
pop
popl
add
stos
sti
movl
sub
add
sub
les
pop
xor
sub
inc
xor
sub
add
add
mov
xor
enter
lret
mov
sub
pusha
add
loopne
and
sbb
sub
sti
arpl
andb
dec
das
rorb
bound
stos
rolb
add
loopne
pop
xchg
and
in
stos
adc
sbb
shll
push
mov
and
xor
in
pop
mov
mov
orb
neg
add
add
add
jmp
and
mov
pusha
or
mov
xor
sbb
lret
adc
xor
adcl
inc
add
inc
xadd
addl
add
daa
movsl
stos
lock
cs
pop
and
sbbb
pop
and
or
add
push
sbb
mov
xor
je
mov
outsl
and
mov
mov
int
and
add
pusha
pop
push
lcall
aaa
add
stos
int
stos
xlat
mov
inc
add
pop
xor
roll
xor
roll
pop
addb
cld
add
add
push
adc
adc
loop
and
pop
stos
int
add
loop
faddl
add
xor
mov
xor
mov
faddl
fiaddl
inc
add
rolb
xor
sbb
and
or
mov
mov
mov
imul
push
daa
pop
and
shll
icebp
add
pop
sub
jnp
add
add
sbb
xor
and
loopne
aaa
enter
add
adcb
cltd
xlat
and
cmp
add
sbb
push
shll
mov
addr16
add
loopne
sbb
pop
mov
pop
sbb
inc
adc
mov
adc
mov
and
lret
pop
sbb
add
push
stos
add
mov
add
fwait
mov
or
aaa
cltd
and
fildl
fmull
loopne
addl
cltd
shlb
sbb
jb
add
test
lldt
and
cs
xlat
pop
xor
add
push
pop
daa
pusha
pop
push
lcall
shrb
aaa
inc
test
and
push
sbb
or
add
ret
xlat
pop
daa
and
sti
pop
mov
roll
test
and
lret
and
add
push
inc
add
loope
mov
pop
adc
and
sub
shll
shlb
mov
shll
lahf
push
rorl
rorb
or
test
inc
sbb
push
stos
sti
xlat
mov
or
and
and
add
and
inc
aaa
mov
movsl
mov
dec
rcrb
or
filds
add
push
fwait
sti
adc
rorb
inc
dec
xchg
stos
cmc
push
mov
xchg
mov
adc
inc
lea
add
repz
add
pusha
add
sbbb
adc
aaa
ret
nop
adc
lea
xor
add
in
pop
adc
add
in
sub
mov
xor
mov
mov
or
push
cltd
inc
add
and
jmp
push
mov
movsb
add
test
and
pop
add
add
jno
fiadds
mov
mov
mov
mov
insl
lds
add
add
sbb
push
mov
adcl
jecxz
inc
and
imul
pusha
or
sub
mov
push
lcall
pop
inc
ret
or
or
adc
sbbb
add
lock
sbb
pop
aas
clc
inc
mov
jmp
sub
cmp
add
adc
shlb
push
xor
mov
popl
shll
inc
add
sbb
in
and
inc
loop
add
pop
jp
ss
roll
and
ja
add
sbb
push
add
sbb
pop
push
jo
jo
adc
add
and
xchg
mov
popa
add
adc
jl
pusha
add
add
pop
add
add
adc
jl
pusha
add
adc
add
roll
stos
lds
leave
mov
add
cmp
add
jno
mov
xchg
iret
and
inc
add
lock
fiaddl
or
cmpb
rclb
add
pop
adc
add
or
rcrb
xor
mov
and
inc
inc
push
push
rolb
push
add
aas
in
pop
aaa
into
arpl
and
rcrb
push
add
mov
mov
cmp
add
nop
sub
pop
pop
loopne
data16
mov
push
cltd
iret
push
xlat
in
add
sahf
mov
push
xchg
sti
push
inc
xchg
mull
push
add
push
pop
fnsave
adc
and
mov
lahf
add
stos
mov
add
movsb
or
inc
add
inc
add
push
cltd
adcl
xor
sbb
push
flds
cmp
xor
mov
fldt
add
addl
xor
jo
push
scas
mov
push
inc
and
or
and
add
sbb
add
sub
rorl
and
shlb
push
stos
sbb
aaa
add
mov
lahf
push
pop
inc
and
dec
push
lcall
aad
xchg
daa
xor
push
mov
in
add
lcall
aaa
mov
shlb
fidivs
inc
or
add
and
and
loope
pop
test
inc
adc
and
adc
add
enter
roll
mov
pop
fs
xor
adc
push
lea
aaa
mov
mov
push
cltd
rcl
rcll
xor
cmp
sub
adc
or
and
fidivs
jb
jo
mov
adc
add
orb
push
lcall
mov
sub
add
push
shll
sbb
mov
fistpl
mov
mov
das
mov
mov
mov
push
adc
dec
jo
out
stos
sub
mov
mov
out
shrb
cs
sbb
iret
icebp
sbb
and
push
or
and
inc
xor
leave
jo
jecxz
pop
and
sbbb
add
ja
stos
add
push
aaa
ljmp
fisttpll
aaa
xchg
stos
xor
fistl
mov
sahf
pop
es
je
lods
push
outsl
ficomps
loope
subb
das
mov
push
scas
out
jae
fsts
lock
xchg
xchg
stos
add
pop
stc
add
add
xor
pop
shll
pop
loop
addl
pusha
xchg
pop
shrb
xor
stos
rcrl
jno
sbb
mov
push
pusha
add
rcrb
inc
push
mov
cltd
fildl
stos
jecxz
pop
push
shll
or
loopne
or
roll
mov
mov
pop
xor
add
fucomi
add
shrb
sbb
rcll
lcall
push
addb
addb
icebp
scas
and
mov
adc
push
shlb
cmpsl
adc
cmpsb
lahf
pusha
add
sub
push
fldlg2
add
inc
push
out
shrl
subb
in
divps
aaa
xlat
in
fisttpl
adc
inc
xchg
shrl
inc
addl
mov
push
xchg
add
xchg
mov
push
or
adc
jb
iret
addl
push
inc
ret
mov
repz
pop
pop
daa
fiadds
or
in
adcb
sub
orps
outsl
fisubs
mov
mov
xor
aaa
push
sbb
xor
shrl
rcl
jg
ret
push
fistl
add
xorl
add
pusha
sbb
pop
pop
push
stos
int
push
lret
add
in
stos
aam
lahf
pop
sbb
sub
jo
sbb
mov
roll
nop
add
add
push
daa
in
sbb
pop
pop
inc
or
in
add
addb
sub
or
xor
push
das
add
daa
stos
inc
hlt
sahf
mov
mull
add
mov
sahf
push
loop
pop
and
push
add
add
icebp
add
add
push
andl
and
and
addl
push
or
push
cmp
push
sbb
mov
loop
mov
test
adcl
loopne
and
lret
aaa
shr
loopne
mov
aaa
popf
and
push
test
jle
or
and
adc
or
add
pop
pop
out
lods
mov
notl
daa
stos
clc
pop
and
add
loop
xlat
and
adc
mov
mull
sub
lods
int
add
push
loop
add
addl
mov
jge
add
orps
jecxz
add
xlat
pop
pop
rcrb
add
add
push
lcall
call
in
pop
daa
add
mov
scas
add
pop
mov
mov
xlat
push
add
mov
add
add
pop
pop
stos
popl
mov
cld
iret
add
xor
add
add
int
add
jmp
and
and
add
daa
and
stos
les
mov
xlat
fldt
xlat
xlat
and
dec
add
sbb
add
pop
add
stos
sbb
mov
add
stos
lret
and
add
mov
adcl
mov
in
add
rcr
pusha
add
mov
and
sbb
out
cmp
or
stos
lds
fistl
and
arpl
in
sbb
pop
adc
outsl
shlb
adcb
in
pop
in
test
aaa
addb
push
add
or
xor
fildl
push
popa
add
add
orl
orl
sub
ret
pop
and
orl
xorl
inc
in
stos
xorb
in
push
repnz
adcb
in
mov
mov
add
mov
cltd
add
jmp
cltd
aad
sbb
mov
andb
int3
fidivs
add
xor
rorl
mov
add
addb
add
or
pop
xor
mov
mov
lret
mov
mov
push
pop
add
push
lcall
push
mov
pop
pop
stos
iret
push
xchg
subb
push
stos
aaa
jne
adc
stos
rol
daa
mov
lret
rcrb
add
daa
xor
in
pop
add
test
add
push
mov
push
pop
xor
stos
add
sbb
inc
in
and
pop
push
add
xor
xorb
add
mov
or
pop
loop
fistpl
je
adc
stos
call
add
add
lret
fiadds
add
xchg
hlt
and
xor
sbb
add
fisttpll
lcall
aaa
adc
add
and
xchg
fiaddl
or
push
stos
mov
rorb
push
stos
out
or
push
lcall
sbb
mov
inc
stos
mov
lcall
rorl
push
add
sbb
and
and
add
scas
add
scas
mov
add
aaa
add
and
mov
push
stos
or
pop
pushf
push
stos
xchg
xchg
adcb
or
or
and
sub
iret
lahf
add
rol
sub
add
and
pop
int3
push
lcall
add
add
push
subb
fwait
sbb
jnp
aas
sbbl
out
aaa
incl
adc
add
out
push
lcall
stos
adc
lcall
stos
add
jnp
mov
test
and
aaa
cmp
xchg
add
adcl
add
inc
fadd
adc
pop
mov
adc
and
mov
add
add
stos
and
cmpb
sbb
xor
mov
mov
xlat
push
stos
cmpb
andb
sahf
je
gs
sahf
orb
xor
push
lcall
mov
push
lcall
add
add
and
and
pop
loopne
mov
push
sbb
or
sbb
cmp
cmp
xchg
push
mov
add
or
in
rcrb
add
push
xchg
xlat
push
lcall
stos
das
pop
sub
add
addr16
add
add
pop
add
add
aas
stos
pop
add
loope
loopne
add
add
adcl
add
jl
in
addb
addb
pop
and
aaa
aam
bound
inc
adc
mov
push
push
xor
inc
sub
xchg
adcl
aaa
dec
faddl
fsubp
subl
mov
push
scas
and
inc
push
hlt
inc
push
mov
pop
lcall
push
or
lcall
xor
shll
stos
and
xchg
adc
add
stos
and
scas
daa
push
mov
rolb
push
lcall
add
add
push
mov
repz
dec
daa
add
and
lea
lods
add
sub
mov
add
jns
lcall
and
inc
andb
nop
xlat
push
pop
push
test
fcoml
adc
mov
ret
push
fsts
fcompl
aaa
aam
rorb
aaa
sbb
fcomp
subb
jne
add
test
andl
pop
xor
adcl
xchg
push
stos
sti
repz
cmp
push
fwait
or
iret
pusha
sbb
add
in
and
fwait
sti
out
mov
push
mov
out
and
arpl
adc
xchg
xchg
rolb
mov
popa
cmp
mov
loopne
mov
repz
add
jno
add
ret
add
push
cmp
aaa
jbe
mov
test
out
loopne
rolb
mov
sti
push
xchg
rcll
inc
add
ret
push
xchg
iret
push
popa
xchg
push
adc
sbbb
mov
mov
xor
in
add
andb
xchg
rolb
lcall
aaa
add
rolb
xchg
push
mov
lods
inc
add
xchg
fstl
xorb
mov
and
ficoms
aaa
adc
fiadds
push
dec
sbb
mov
out
orb
call
clc
add
iret
and
add
add
mov
and
pop
pusha
xor
testl
lcall
movsl
push
stos
adc
dec
push
orb
popa
add
pop
mov
mov
and
and
mov
pop
xor
xorb
lcall
push
pusha
stos
cmp
lret
add
jns
or
lret
add
add
stos
push
lcall
fiadds
xor
push
sbbb
add
or
mov
jo
loopne
sub
pusha
aad
addb
mov
rolb
adc
out
aaa
jo
add
and
push
push
add
sub
pop
xor
pop
adcb
ret
add
mov
pop
daa
and
call
and
loopne
rcrb
add
jmp
in
push
inc
out
lret
rcrb
jo
pop
add
push
cltd
iret
add
xchg
fldt
xor
ss
jo
and
in
add
mov
pop
mov
sbb
icebp
gs
and
icebp
outsb
push
setnp
jmp
stos
inc
lret
and
fwait
adc
call
mov
add
enter
sub
and
ret
nop
add
mov
aas
dec
mov
fsubr
sub
mov
and
rolb
cmpsl
and
add
daa
repz
sti
push
add
mov
aaa
sub
add
nop
or
out
cltd
or
in
add
add
out
sti
xor
rcrb
and
decl
jno
rcrb
adc
xor
mov
xorb
inc
mov
and
jmp
xor
mov
imul
test
add
lock
push
sub
mov
adc
loopne
subb
xor
mov
push
and
ret
aaa
push
fdivl
add
add
xor
ret
add
fmuls
addl
stos
lds
inc
add
mov
aaa
lea
push
inc
sub
xor
aaa
xor
cmp
addb
pop
adc
push
cltd
pusha
add
push
cltd
adc
push
cltd
ret
and
hlt
cltd
add
push
daa
stos
out
mov
int
mov
addr16
and
add
mov
and
rcl
popf
mov
stos
int3
push
cltd
fcompl
daa
aaa
sbb
add
lock
sbb
loopne
popa
sbb
sbb
sarl
lret
add
or
aaa
inc
xchg
mov
inc
sbb
sub
negl
add
sti
lret
add
lret
jo
xor
mov
xor
mov
pop
aaa
rcl
adc
lcall
push
cltd
add
pop
and
add
test
mov
stos
adc
xor
adc
and
mov
add
xor
loopne
mov
cltd
shll
loop
rolb
aad
adcb
test
xor
cmp
adc
push
cltd
lret
mov
adc
mov
add
mov
fiadds
mov
iret
repz
adc
mov
push
add
lcall
mov
fisubrs
and
das
mov
jae
cltd
push
cltd
call
lock
pop
jno
jg
add
pop
add
pop
and
and
add
push
add
push
cltd
notl
pusha
or
cmp
mov
push
add
push
add
xor
jecxz
pop
out
stos
jmp
push
cltd
out
xor
or
or
sbb
bound
or
lock
inc
or
rcrb
nop
add
addb
aaa
push
f2xm1
jnp
aaa
or
add
ret
inc
popa
add
push
cmp
pop
xor
loopne
and
and
inc
xlat
pop
adc
push
es
xchg
mov
loopne
aaa
mov
ss
mov
popa
ds
xlat
aaa
pop
shlb
mov
or
lock
adc
cwtl
mov
lock
xor
sbb
ja
rcrb
scas
push
push
iret
add
in
and
fiadds
out
sti
mov
add
cmpsl
pop
cmpsb
fildl
stos
lahf
test
lahf
loopne
sti
aaa
xor
loope
add
jmp
aaa
movsl
mov
faddp
xor
aaa
lret
loopne
adc
lods
lret
and
and
rclb
shlb
addr16
xor
inc
rolb
add
fdivs
mov
adcb
testl
loopne
mov
push
jg
sub
sbb
sub
stos
push
add
xchg
mov
add
mov
and
mov
add
imul
lock
roll
inc
pop
rolb
aam
add
and
in
stos
aad
mov
mov
das
add
iret
push
fwait
out
inc
lret
aaa
sti
stc
add
inc
add
pusha
stos
fld
aaa
popf
sbbb
jae
nop
add
xchg
add
sbb
ret
adc
fldcw
rolb
lds
iret
rolb
sti
xor
jo
cmpsl
push
pop
sti
and
or
pop
cli
add
sarb
mov
fiaddl
or
rolb
stos
mov
jae
add
mov
push
mov
lods
jecxz
adc
add
shll
mov
rcll
add
ficoms
rcl
mov
sbb
push
sti
mov
inc
and
icebp
js
mov
mov
in
sub
stos
iret
stos
shl
stos
shrl
fbld
and
mov
push
stos
rcl
push
lcall
shlb
pop
nop
andl
and
mov
push
rorl
outsl
add
outsl
add
push
add
outsl
repz
or
mull
stos
lret
xchg
xor
mov
xlat
divl
xor
loopne
or
out
sti
lret
inc
stos
sti
push
add
stos
shl
stos
adc
mov
movl
out
push
add
add
pusha
jle
push
push
mov
or
push
ret
inc
add
xor
sbb
lcall
sarb
and
pop
lret
add
lret
add
mov
cmp
pop
add
xrelease
repnz
add
stos
stos
in
sub
sti
shl
stos
shrl
and
xlat
leave
lahf
add
pop
sbb
sbb
add
add
and
fcmovu
add
out
stos
sti
lret
stos
sti
add
iret
stos
add
mov
xor
and
push
add
popl
int3
push
stos
sti
iret
movsl
add
lret
add
mov
addb
push
aaa
sbb
and
and
xor
add
and
lret
and
pop
movsb
mov
mov
rorl
add
push
pop
aaa
xor
test
das
and
lret
lahf
add
and
xor
push
stos
fidivl
xor
or
add
adcl
out
testl
pop
out
shrl
iret
test
stos
test
popl
xlat
cmpb
sub
dec
fadds
cmpb
sbb
add
cmp
fiadds
push
stos
roll
add
cli
push
mov
lret
pop
or
movl
lret
mov
fimuls
aaa
flds
add
lret
es
add
andb
adc
sbb
add
sub
aaa
mov
pop
add
mov
aaa
faddl
add
shll
and
fisubrs
iret
pop
cmpsb
fildl
add
push
lcall
mov
inc
adc
inc
push
xchg
sti
xlat
aaa
or
dec
and
roll
add
orl
lret
fldt
addl
aaa
dec
inc
or
or
fwait
sti
fcmovnu
add
xchg
loopne
adc
pop
mov
inc
inc
xchg
mov
cltd
fildl
xchg
stos
add
push
daa
pop
inc
cmp
push
xlat
push
flds
mov
push
adc
iret
push
sbb
sbbb
stos
shll
jmp
or
stc
add
push
fisttpl
iret
mov
and
iret
xorb
and
adc
xor
popl
add
scas
add
or
in
pop
sbb
sbb
ficomps
pop
fisttpl
add
sti
fildl
stos
and
in
pop
xor
andb
adc
es
int3
push
pop
rclb
das
pop
and
int3
xchg
and
push
and
pop
sub
sbb
sbbl
cmpsl
lret
push
mov
movl
sbbl
xlat
push
fcmovnbe
hlt
add
fsts
adc
sub
shll
mov
inc
jo
roll
inc
ret
fiaddl
rol
push
faddl
aaa
cmp
and
orl
faddp
push
and
xor
in
pop
adcb
mov
push
add
hlt
das
push
rcr
push
iret
and
stos
rcrb
adc
and
imul
and
xlat
and
inc
imul
xlat
add
out
aaa
lods
in
test
enter
push
mov
or
adc
xor
in
push
pop
andb
inc
pop
xor
flds
add
mov
and
sbb
inc
cmp
push
subb
pop
sub
inc
or
push
subb
rol
sbb
push
lcall
add
scas
and
push
pop
pop
and
loopne
xchg
fcmovu
add
or
stos
aam
push
xchg
daa
aaa
pop
add
fiadds
in
push
push
bound
inc
and
sahf
push
pop
orb
or
inc
mov
mov
push
stos
aas
xchg
lcall
aam
sbb
lcall
in
add
mov
rolb
test
and
push
subb
add
stos
and
aas
mov
lret
test
addr16
frstor
add
cltd
loopne
rcrb
inc
pop
and
inc
rclb
orl
add
rcrb
pusha
add
in
add
mov
add
popa
fwait
pop
test
inc
add
and
stos
and
aas
addb
daa
and
aaa
mov
xor
push
mov
lcall
sub
add
and
rclb
out
mov
adc
add
mov
add
add
add
adc
stos
roll
push
inc
add
or
aaa
mov
aam
cmpsb
ret
and
inc
and
or
cs
addb
sbb
es
sbb
or
and
push
test
add
push
stos
pop
xchg
lret
fiadds
pop
sub
xor
and
sub
add
xchg
mov
and
aaa
fwait
jg
and
mov
add
lret
loopne
inc
mov
xor
pop
aam
out
push
pop
jg
add
mov
or
fsubl
sub
test
das
mov
add
aaa
mov
add
push
add
push
andb
mov
and
mov
xlat
or
add
test
push
cltd
sbb
sbb
xorb
rolb
pop
pop
add
lea
aaa
das
and
shrb
pop
rcrb
add
or
rcrb
add
in
stos
mov
and
mov
dec
pop
sub
stos
xlat
mov
into
add
push
out
pusha
push
sbb
stos
and
add
pop
mov
and
sbbb
sub
and
sub
stos
push
pop
andl
push
sub
and
add
push
pop
and
andl
leave
mov
inc
pusha
sub
add
add
add
push
test
sbb
popl
mov
aaa
or
sub
mov
pop
pusha
test
loopne
mov
outsb
mov
mov
or
cmp
mov
add
sbbb
mov
ljmp
push
cltd
fwait
mov
add
mov
add
shrb
add
mov
push
ds
mov
cltd
push
cwtl
adc
push
cltd
xchg
push
add
stos
pushf
mov
mov
enter
mov
ljmp
iret
add
mov
push
cltd
andl
push
addl
dec
test
mov
mov
push
daa
add
stos
xlat
push
xchg
daa
push
mov
and
pop
daa
enter
push
mov
push
xchg
and
ja
inc
sarb
xor
push
adc
ja
xor
shlb
add
test
adc
adc
in
and
sub
adc
mov
scas
sbb
and
or
push
and
stos
mov
mov
mov
adc
jo
das
and
int3
aaa
add
add
xchg
xchg
adc
test
mov
pop
enter
pusha
xor
push
shll
aaa
inc
xlat
mov
stos
into
push
fadds
adc
iret
je
ret
add
add
adc
fstps
lcall
pop
adc
shrb
add
push
pop
cmc
add
shrb
mov
aaa
lret
fiadds
push
lcall
mov
pop
inc
pop
repz
add
and
push
cwtl
iret
push
push
inc
jl
mov
push
stos
add
mov
adc
cwtl
fwait
mov
or
xchg
repnz
shll
push
cwtl
mov
add
adc
leave
adc
pushl
pushf
lock
test
mov
or
xchg
cmp
mov
pop
faddl
pusha
mov
add
push
pop
sub
sub
add
nop
iret
nop
cmp
add
sub
inc
in
pop
sbb
sbb
xchg
mov
and
or
inc
rcrb
test
add
adcb
incl
add
mov
inc
add
sti
out
aaa
int3
aas
sub
inc
add
push
push
add
nop
testl
or
xor
divl
add
aaa
xor
jo
ret
rcrb
addb
sub
adc
xchg
add
mov
mov
lret
push
add
cli
fiadds
add
fwait
sti
in
mov
mov
in
or
in
stos
sahf
rolb
in
sbb
push
das
and
lods
sbb
adc
sti
iret
pop
sbb
xchg
stos
xorb
and
icebp
push
sub
jno
lock
pop
loope
rorb
pop
xor
ret
icebp
dec
xchg
push
dec
popa
ret
addb
pop
or
cmp
rclb
add
mov
push
cmpb
cmpb
addb
inc
inc
push
sbbb
sbbb
push
addb
dec
xchg
rclb
add
or
mov
rolb
pop
add
aaa
int3
ljmp
xchg
xlat
push
jo
fistl
gs
add
push
add
push
mov
das
mov
ja
mov
push
subb
lea
xchg
or
call
ficoms
add
jp
inc
sbb
add
sbb
xchg
or
fiadds
push
sub
push
xchg
das
or
pop
rolb
aaa
stos
enter
jo
push
pop
mov
jns
add
push
lcall
push
xchg
aaa
pop
cmp
add
in
sub
stos
sub
and
push
pusha
dec
aaa
sub
mov
cs
add
pop
ss
add
add
add
xor
aaa
pop
out
mov
arpl
cmp
sbb
add
xor
mov
xchg
lcall
rolb
out
add
mov
add
push
orb
stos
pusha
stos
pop
rclb
inc
add
pop
lahf
push
pop
cmp
fs
and
mov
das
push
stos
daa
push
add
test
add
rol
roll
nop
mov
daa
push
add
in
xor
lods
add
sub
out
lcall
loop
adc
rcrb
add
lret
inc
push
stos
add
push
sub
shll
jo
add
sbb
dec
je
and
or
xlat
mov
pusha
push
cmpb
shlb
shrb
push
inc
lock
add
rolb
pop
inc
xor
push
sbb
adc
in
add
cltd
and
pop
xchg
adc
loopne
in
mov
sbb
aaa
add
push
push
lcall
loopne
inc
adc
mov
loopne
lcall
mov
push
js
inc
aaa
out
mov
sbb
push
lcall
sbb
ljmp
pop
nop
adc
mov
in
jg
sbb
cmp
fisubs
aaa
adc
and
add
xor
push
xchg
scas
push
sahf
add
sub
push
mov
test
cmp
and
jecxz
xor
stos
out
nop
inc
in
add
mov
push
and
inc
xchg
push
push
andl
and
aaa
test
fiadds
andb
mov
adc
mov
pop
lahf
pop
daa
fisubs
xchg
fcomi
mov
rcr
jo
addr16
lcall
mov
push
xchg
aas
add
lock
push
cmpb
aaa
pop
nop
add
pusha
and
and
aaa
mov
pop
pop
add
push
lcall
push
mov
lcall
and
lcall
xadd
in
sub
push
mov
movsb
xchg
push
mov
lcall
mov
mov
lea
mov
add
lcall
stos
sbb
lcall
fnsave
lret
pop
mov
pop
mov
and
and
aaa
in
push
add
add
aas
aaa
std
jo
out
pop
sbb
inc
shrb
iret
mov
and
xchg
jnp
adc
loopne
lcall
and
in
inc
lock
data16
mov
aaa
sub
cmp
stos
add
mov
pop
mov
add
addb
pop
add
add
sub
add
mov
aaa
mov
in
or
pop
mov
inc
out
add
add
sti
or
mov
lock
inc
rolb
and
xor
add
cmp
push
pusha
pushf
xlat
aaa
out
adc
push
fwait
sti
int
mov
test
nop
push
and
xor
or
dec
aam
pop
mov
fwait
inc
add
pop
add
stos
lds
fwait
sti
int
add
data16
add
sub
add
push
pushf
sbb
push
stos
movb
fwait
sti
lret
push
adc
push
and
mov
out
jl
add
add
add
fwait
add
in
fcmovnbe
push
add
sbb
mov
aas
add
add
cmp
stos
aad
and
push
cltd
ss
add
add
pop
pop
daa
in
mov
mov
add
lahf
add
fwait
sti
ret
loop
pop
adc
add
mov
xchg
dec
and
pop
stos
enter
pop
add
pop
add
pop
xchg
stos
add
xor
pushf
sub
add
add
pop
add
add
and
push
add
push
or
add
mov
test
add
adc
pop
rcrb
and
and
xor
add
fcompl
add
addb
add
ljmp
das
and
in
pop
jl
add
or
add
add
xor
push
xchg
aas
add
push
xchg
cmp
rcll
aaa
push
xchg
iret
push
add
push
xchg
add
mov
cmc
push
lcall
add
sbb
sbb
pop
mov
mov
push
mov
and
stos
rclb
pop
mov
add
push
stos
daa
add
out
in
xlat
and
daa
lods
xor
iret
push
mov
pop
and
into
fiadds
add
or
add
lcall
add
pop
xchg
nop
rcl
pop
or
or
push
add
adc
rcrb
add
pop
mov
roll
push
orb
push
pop
cmp
add
lcall
adc
add
pop
aaa
add
stos
sti
pop
aaa
xlat
stos
enter
iret
rcrb
inc
or
dec
cmpb
cltd
xlat
stos
mov
stos
push
cwtl
iret
push
nop
add
xor
push
cwtl
xlat
push
xchg
add
xor
push
pushf
sti
push
xchg
add
xor
push
pushf
iret
push
xchg
inc
lret
xor
push
pushf
movl
stos
shl
fiadds
cwtl
rolb
add
stos
loopne
push
pushf
xlat
push
xchg
rcll
add
stos
cli
pop
and
pop
sbb
stos
cli
add
push
cltd
adc
in
and
adc
xlat
pop
pop
cmpsl
shrb
cltd
or
subb
orb
fdecstp
add
mov
pop
and
insb
shll
out
das
stos
fsubr
pop
or
in
pop
xor
push
add
xor
push
mov
pop
push
add
fsubr
pop
inc
ss
add
mov
adc
or
push
xorb
andb
fiadds
push
lcall
mov
das
mov
pop
jmp
push
rolb
pop
xlat
rcrb
rolb
in
aaa
rcrb
add
pop
add
xlat
push
cs
xor
add
or
push
stos
aas
push
lcall
pop
sbbb
add
add
fidivs
inc
add
inc
add
mov
pop
mov
add
aas
inc
add
xorl
mov
aaa
and
adc
out
pop
sahf
addl
and
pop
and
mov
sbb
adcl
roll
rcrb
add
rcrb
addb
or
movb
sub
pop
iret
or
add
or
jecxz
rorb
push
xorb
add
push
push
add
adc
mov
fiadds
mov
add
mov
aaa
test
aaa
xchg
add
stos
aas
sbb
inc
pop
aaa
rorl
mov
loopne
arpl
orb
sub
add
xchg
cmp
add
pop
and
lods
xor
add
mov
sub
and
push
add
mov
orl
push
mov
cmp
lret
add
push
lcall
popa
inc
push
pop
rorl
and
add
push
sub
add
inc
add
mov
pop
movsb
xlat
add
inc
pop
and
aaa
shlb
addr16
add
fcoml
pop
mov
inc
add
jo
rclb
dec
pop
ret
dec
xchg
sarb
push
add
push
addb
aaa
adc
push
pop
add
push
or
pop
outsb
addl
add
sub
push
into
pop
add
or
lds
sub
hlt
add
and
lods
cmp
push
sahf
fldenv
push
popf
and
in
push
out
and
rorb
push
xchg
imul
add
inc
push
lcall
movsl
xchg
aas
push
xchg
sbb
pop
in
add
lcall
xchg
pop
out
add
subb
fnsetpm(287
add
aad
stos
imul
and
add
xor
inc
add
sahf
mov
push
test
out
or
shrl
push
push
mov
sahf
add
jecxz
push
xchg
imul
aaa
mov
or
pop
mov
add
lcall
aaa
xlat
rcrb
cmp
add
test
push
cwtl
jecxz
add
rolb
add
lcall
aaa
mov
push
push
cwtl
out
in
stos
fisubl
cwtl
jecxz
dec
cld
orl
and
inc
mov
add
push
jns
add
out
push
and
stos
adc
sbb
adc
pop
add
cwtl
jecxz
pop
sub
addb
push
sbb
xchg
enter
xchg
rcrb
imull
add
pop
aaa
add
mov
rclb
lcall
getsec
inc
add
mov
sub
pop
out
stos
fadds
sahf
pop
cmpsl
fiadds
stos
fcompl
ds
inc
cmpsb
ficoml
sahf
rcrb
mov
and
xor
push
lcall
and
mov
add
test
push
ljmp
mov
or
adc
cld
add
int3
loope
sub
add
inc
pop
pop
add
sbb
add
push
lcall
cwtl
divl
cmp
cmp
push
lcall
stos
add
pop
bound
mov
add
add
out
addb
in
add
cmp
push
subb
rcl
mov
inc
orb
aaa
out
mov
rorb
pop
adc
dec
inc
mov
pusha
xor
jb
add
outsl
sub
pop
rorb
add
and
xor
add
out
pop
es
sub
push
add
adc
dec
push
fistpl
pop
out
stos
jecxz
add
and
stos
ljmp
adc
pusha
shlb
lret
push
push
xchg
ja
lcall
mov
and
dec
add
fnsave
add
add
in
cmp
stos
lock
sbb
fdivr
pushf
xor
and
outsl
and
add
outsb
push
xchg
sub
adc
add
ficoms
or
aaa
add
push
lcall
jmp
inc
in
imull
aaa
jle
lock
xor
dec
rolb
incb
sub
sti
push
xor
mov
ficoms
push
mov
mov
push
mov
mov
add
stos
xlat
and
adc
push
lcall
mov
xchg
pop
xor
fiaddl
shlb
and
add
es
shrb
lcall
inc
push
jle
jnp
push
xor
pop
push
push
nop
insb
mov
in
das
test
sub
ret
push
adc
inc
and
shll
imul
and
loopne
cmpsb
mov
push
push
xor
mov
and
add
pushf
nop
data16
xchg
xor
sub
aaa
add
jp
inc
mov
pop
mov
push
pop
sbb
mov
andb
cmpxchg
loope
adc
xor
sub
sbb
icebp
push
and
push
fsubs
add
aaa
inc
pop
adc
rcrl
inc
jae
add
aaa
or
ret
push
push
xchg
add
sub
ljmp
add
push
add
aaa
incb
fistl
adc
push
add
add
push
aaa
pusha
pop
and
aaa
adc
mov
add
fsub
add
stos
ret
jecxz
stos
lret
jecxz
lahf
stos
shl
subl
xor
insb
add
xor
insb
fdivl
push
rcrb
test
xlat
mov
aaa
cmp
add
or
shlb
pop
aaa
add
stos
xchg
rcrb
loopne
pusha
add
or
push
xchg
stos
fcoml
xchg
daa
fidivs
ficomps
add
stos
rcll
pop
aaa
push
add
inc
daa
daa
pop
and
pop
add
aas
aaa
cmpsb
aaa
add
movsb
xlat
sub
and
mov
loopne
mov
dec
aaa
xor
and
fildl
pop
add
lds
mov
xor
lods
mov
sbb
and
add
nop
jg
push
cltd
jecxz
stos
push
fcomi
sub
add
push
pushf
repz
adcb
lcall
or
out
rcrb
addb
push
pushf
out
xor
dec
xor
mov
les
cmp
pusha
xchg
cmp
lods
out
push
sbb
lods
xor
push
cmp
adc
iret
ss
jno
jecxz
mov
push
lcall
lahf
addb
sbb
push
pop
add
jnp
add
push
test
dec
mov
sbb
and
jecxz
jo
daa
nop
ja
add
push
pop
mov
xor
nop
add
aaa
mov
or
add
add
jo
add
or
add
jmp
push
stos
test
xlat
stos
and
rcrl
xchg
dec
xchg
jb
jmp
and
inc
or
cmp
rcrl
mov
jo
aaa
push
mov
inc
or
out
mov
and
and
add
adcb
xor
stos
lret
add
fisubrs
testl
ljmp
nop
add
stos
icebp
adc
sbb
adc
adc
aam
jns
add
xchg
pop
andl
add
iret
stos
jecxz
lods
sti
aaa
enter
les
push
add
fwait
adc
push
lret
xlat
add
pop
es
stos
ficompl
add
aad
xlat
pop
es
stos
add
sbb
lcall
lods
aas
xor
mov
add
push
mov
not
add
add
xor
push
jecxz
add
xor
popa
lret
add
mov
mov
push
rcl
mov
sub
push
mov
cmc
shrb
and
mov
lcall
mov
ljmp
or
xchg
aam
sahf
in
lods
push
cmp
add
inc
sub
mov
rcrb
mov
cmp
mov
xor
pop
adc
jno
lods
rcrl
push
add
add
pop
stos
scas
mov
int3
test
mov
inc
push
stos
xchg
mov
stos
aaa
push
mov
push
xchg
iret
add
addr16
add
fwait
cvtps2pd
stos
fisubl
add
adcb
lcall
lea
adc
xor
push
or
pop
mov
aaa
mov
sbb
push
lcall
rolb
xor
cld
adc
das
aaa
les
pop
mov
sbb
aaa
aaa
add
add
add
push
adc
fnsave
add
stos
pusha
xchg
loopne
add
push
pushf
out
cmpsl
fildl
inc
stos
rorl
fildl
and
mov
or
lcall
pop
add
lret
mov
add
push
add
add
adc
pop
movl
ficomps
out
rolb
and
mov
push
xchg
push
in
add
push
cltd
and
pop
out
add
pop
test
shlb
and
adc
stos
fildl
push
lcall
mov
sbb
push
test
push
adc
and
lcall
roll
push
fistpl
push
xlat
push
xchg
add
push
fcoml
je
cmp
daa
and
sub
aas
mov
push
pop
aaa
movsl
push
popa
pop
ret
push
or
push
pop
repnz
and
and
add
adc
xchg
into
and
das
push
xchg
sub
push
stos
das
push
stos
push
nop
adc
aaa
mov
push
sbb
push
out
fsubrl
add
int
insl
push
cltd
fisttpll
aaa
sub
add
or
shlb
in
aaa
daa
lds
add
nop
add
jo
rolb
push
out
push
push
add
out
cltd
and
sub
pop
or
outsl
fisubrs
mov
mov
sub
xchg
das
mov
or
adc
push
push
in
adc
add
in
add
test
mov
add
fldt
sbb
out
sub
mov
push
and
add
add
push
xchg
das
push
mov
mov
aaa
lods
add
and
daa
xor
add
add
stos
out
add
add
pop
neg
add
add
push
lcall
and
mov
stos
das
aaa
add
and
and
rcrb
fadds
inc
mov
dec
mov
xlat
rcrb
add
loopne
add
dec
add
xchg
add
stos
add
in
pop
pop
pop
rclb
addl
rcrb
or
push
jecxz
push
lods
lret
hlt
test
fcmovnu
call
pop
andb
sbb
cltd
cmp
add
pop
jbe
adc
call
aaa
inc
add
add
and
aaa
add
andps
add
push
lea
fmull
add
pop
fcoml
aaa
lods
add
lods
iret
aaa
lock
and
push
lods
or
lcall
add
mov
iret
hlt
daa
mov
add
in
push
pop
add
mov
fiadds
push
lcall
push
add
push
xchg
out
aaa
mov
cmpl
mov
inc
or
fsub
push
flds
cwtl
push
in
or
bound
adc
and
sbb
xor
pop
xor
mov
add
lcall
pop
daa
sbbb
mov
in
add
test
push
mov
mov
xlat
mov
sub
adc
or
adc
iret
mov
add
je
or
incb
das
push
or
add
rcrb
or
add
and
add
insl
sbbb
and
lret
rcrb
add
pop
ds
shrb
sub
les
add
pop
push
call
push
pop
pop
daa
shrl
and
add
xchg
daa
mov
xor
push
mov
add
and
push
lcall
movsl
and
add
add
add
fldt
inc
pop
xchg
daa
add
add
or
aaa
imul
and
lret
push
pushf
fldenv
add
aaa
cmp
fwait
inc
sbb
jge
fidivl
add
or
push
fdiv
add
mov
pop
in
or
add
cltd
add
aaa
or
mov
stos
movb
and
mov
adcb
fiadds
mov
xchg
ret
xor
popf
rolb
fcomp
rolb
push
rolb
scas
and
pop
int
add
icebp
add
and
push
adc
mov
push
fcomps
inc
lods
and
orb
stos
fwait
rolb
add
push
fisubrs
and
push
fcoml
popa
push
addb
test
ffreep
cmp
and
push
rolb
add
faddl
mov
test
rcr
fiaddl
or
add
fdiv
pop
fsubl
pop
push
and
lods
inc
add
push
add
and
lcall
aaa
and
in
jge
aam
int
pop
add
lcall
add
add
das
and
test
sbb
ret
aaa
lods
ret
aaa
mov
ret
aaa
mov
test
rolb
test
rclb
and
aaa
xchg
inc
add
add
aaa
loop
inc
add
ljmp
add
sbb
push
daa
xor
mov
mov
fsubrl
xor
aaa
adc
nop
stos
pusha
sub
add
push
cmp
daa
push
lcall
add
mov
add
sti
jmp
pop
pop
fimuls
add
jge
add
mov
sti
add
push
cmp
int3
aaa
sbb
das
and
popa
fwait
sti
int3
addb
sti
add
lret
lret
mov
sti
ret
add
outsl
add
and
cmp
rcrb
addb
mov
and
ret
add
and
lahf
pusha
add
sbb
pop
mov
add
adc
pop
cmpsl
fisubs
loopne
adc
add
push
pop
add
rorb
adc
dec
pop
push
add
sub
pop
mov
scas
and
or
push
lret
or
and
shll
or
sti
xchg
xchg
cmp
pop
push
ljmp
jg
mov
push
sbb
adc
and
adc
enter
and
xlat
push
add
out
ljmp
ret
push
fwait
sti
xchg
popl
aaa
outsl
add
add
rcrl
mov
or
loopne
mov
and
add
loope
add
push
fwait
aaa
cmpxchg
add
mov
aaa
mov
or
in
stos
movsb
or
lret
mov
pop
popa
or
aaa
sub
inc
add
notl
and
sub
fisubrs
or
or
mov
nop
add
decl
mov
sti
mull
lret
add
aad
mov
add
xchg
mov
and
xor
add
mov
fstpl
rcrb
adcb
out
aaa
daa
push
add
popa
aas
xor
add
test
sbb
add
mov
push
add
xlat
shlb
xchg
pop
aas
add
cmp
xor
mov
add
faddl
decl
out
mov
imul
decl
jg
push
pusha
add
pop
daa
and
stos
out
and
sbb
testb
add
push
stos
ror
out
and
inc
inc
rolw
ret
and
addr16
jge
and
add
lods
or
mov
or
or
inc
out
xchg
andb
pop
ss
loopne
mov
push
fldlg2
and
xlat
and
rolb
push
pusha
mov
sbb
xorb
mov
adc
or
add
outsl
fimuls
addb
orb
pop
sbbb
xchg
rcrl
stos
aad
add
push
lahf
roll
sbb
xlat
in
lods
ret
push
scas
fcmovnu
sub
lods
int
into
sahf
pusha
add
or
stos
add
add
pop
sbb
shll
add
xor
fiadds
in
add
pop
mov
ljmp
add
sti
out
add
stos
lret
xlat
fisubrs
fldl
rorb
add
and
lahf
xor
add
pop
lahf
sbb
mov
in
pop
aaa
loopne,pt
subb
jae
mov
mov
push
andb
aaa
loopne
push
and
mov
aaa
mov
fildl
xchg
hlt
fcmovu
or
pushf
add
fiaddl
jo
dec
add
xchg
mov
in
stos
les
add
add
pusha
stos
xlat
and
jnp
add
loope
xchg
aas
lret
add
mov
insb
jo
xlat
shrl
or
inc
push
ret
mov
add
xor
mov
ffree
aaa
jo
push
lcall
rcrb
lock
push
pop
add
nop
pop
sbb
jo
addb
and
loopne
in
adc
pop
shlb
add
sarb
xchg
nop
add
pop
out
mov
mov
out
rcrl
pop
sbb
jo
daa
lods
xor
jge
outsb
shlb
nop
sbb
pop
je
add
push
add
mov
adc
in
mov
pop
push
mov
push
lcall
fisubs
daa
and
push
and
add
adc
lret
lahf
add
fiaddl
daa
ficomps
or
push
add
data16
stos
sahf
push
and
nop
add
sub
mov
push
adc
pop
push
xchg
sub
and
and
dec
mov
xor
pop
pop
stos
mov
jbe
inc
add
loopne
aaa
and
adc
add
jecxz
adc
rcrb
add
stos
das
and
mov
imul
sub
stos
inc
add
and
shlb
shlb
dec
subb
add
or
fsubs
mov
aad
add
and
add
dec
and
mov
inc
je
add
xlat
push
insb
mov
push
xchg
fildl
rorl
int
or
and
push
push
lcall
lock
loope
cmc
stos
rcrl
fiadds
stos
add
in
pop
mov
adc
push
pushf
jmp
roll
pop
push
stos
negl
out
stos
add
push
xchg
ficomps
cmpsl
stos
add
pop
xchg
aaa
imul
add
and
add
xorb
in
push
mov
jo
rolb
aad
cmpsl
xor
xor
test
mov
mov
or
sbbb
pop
add
pop
jo
mov
push
add
shrb
xchg
mov
and
push
mov
sti
lret
dec
xor
iret
mov
push
add
inc
mov
xchg
imul
lahf
xchg
mov
mov
jno
add
xor
mov
add
cmp
inc
fwait
sti
lret
in
or
pop
xchg
shrb
aaa
je
and
jo
xchg
mov
and
add
add
shrl
aaa
inc
push
add
mov
iret
aaa
loopne
add
add
fisubrs
xor
add
fs
outsl
fdivl
fsts
or
lahf
xchg
repnz
stos
add
adc
push
cmp
aaa
shrb
add
adc
iret
mov
mov
rorb
and
mov
ret
add
pop
rcr
stos
xlat
mov
jno
cli
xor
loope
fldt
and
rclb
xchg
and
iret
and
push
and
daa
andb
aaa
pusha
add
sti
xchg
sahf
mov
pusha
xchg
call
pop
adc
dec
mov
xor
xchg
jl
jb
adc
sti
and
aaa
test
add
lret
lahf
add
and
shr
add
out
sti
rcl
pop
jle
add
stos
sti
mull
loope
or
push
push
xchg
adc
jge
mov
and
out
xor
stos
mov
adc
sbb
aaa
xlat
movsl
add
fwait
orl
or
lock
or
inc
add
push
sbb
mov
cmp
stos
stc
mov
xor
adc
stos
sti
ret
push
ljmp
add
and
sbb
pop
mov
test
add
add
lahf
add
adc
imul
orb
mov
add
adc
out
mov
out
add
and
cmp
sahf
add
add
ss
xchg
and
inc
jb
xchg
mov
push
test
mov
add
xchg
mov
adc
xor
subb
sti
sbb
aaa
movsb
lock
lods
roll
and
rolb
sarb
mov
in
pop
mov
or
push
fwait
sti
roll
rcrb
rcrb
sbb
movl
push
and
sub
push
adc
inc
sti
sub
or
add
adc
pop
fstps
loop
shlb
cltd
add
ficoms
pop
push
add
sbb
out
inc
ljmp
shr
pop
and
mov
jns
pop
and
loopne
icebp
push
fcoml
adc
sti
out
imul
pop
lock
mov
aaa
hlt
sbb
repz
rclb
and
pusha
aaa
xchg
call
pop
adc
lock
sub
pop
in
pop
aaa
add
sub
fwait
sti
iret
rcrb
insb
nop
add
jl
mov
add
ret
add
aaa
test
or
mov
stos
lret
rolb
fwait
sti
leave
mov
mov
test
fucomp
pop
adc
add
xchg
xchg
inc
stos
aam
xchg
stos
mov
push
rorl
fidivs
push
add
fldt
aaa
je
out
lock
ljmp
adc
add
test
mov
push
add
mov
jns
add
fldl
andl
or
add
or
and
pop
and
nop
and
rorb
bound
nop
adc
aaa
jb
or
add
pop
mov
pop
and
aaa
add
lock
lods
aaa
pop
in
push
enter
sub
and
nop
dec
pop
xchg
rcrl
stos
xor
aam
push
stos
adc
or
mov
add
mov
test
push
cltd
fisttpl
nop
sbb
fisubs
movsb
mov
adcb
aaa
xor
inc
and
mov
xchg
inc
add
lea
add
add
loopne
add
push
and
incl
iret
pop
and
rcl
imul
mov
mov
subb
mov
into
lahf
jo
xlat
loopne
pop
inc
mov
aas
inc
mov
loop
add
add
stos
shlb
stos
xlat
and
jnp
add
pop
mov
xlat
add
stos
movsb
mov
mov
and
ljmp
adc
add
pop
and
fcmovne
lahf
add
fisttpl
and
or
fnstenv
inc
sbb
push
cwtl
lret
mov
push
lcall
pop
mov
cwtl
stos
cli
pop
mov
rolb
xchg
add
cmpsb
jbe
add
add
jno
fiadds
add
stos
fldt
xor
iret
mov
push
or
add
jecxz
fiadds
in
pop
addb
test
sbb
add
pop
cmp
pop
xor
mov
mov
lret
stos
aaa
out
and
add
add
ret
pop
pop
stos
fstps
add
mov
and
inc
daa
add
add
aaa
add
pop
rcrb
xchg
add
ss
add
xchg
sti
add
push
mov
lret
aaa
mov
add
cmp
pop
daa
and
pop
jnp
add
pop
mov
popl
push
fwait
sti
divl
adc
fiadds
push
mov
sbb
pop
mov
stos
movsl
and
and
inc
add
add
stos
mov
call
sti
in
add
fsts
maxps
add
pusha
pop
and
fistl
xor
push
add
inc
addl
xlat
ficomps
fcomps
aas
fistl
insb
fiadds
cltd
xor
pop
pop
stos
negl
add
sti
sbb
add
and
and
test
push
cmp
aaa
mov
daa
and
addb
push
add
and
push
fwait
sti
shll
add
push
add
iret
aaa
aam
andb
pop
pop
rcrb
add
aaa
cmpl
stos
cwtl
add
add
out
inc
sub
and
fiadds
andb
in
sbb
add
lret
add
add
add
xor
nop
stos
adc
mov
add
mov
stos
addb
and
pop
fstps
cmp
rcrb
add
ret
aaa
jg
mov
add
shll
addb
fwait
andb
rcll
add
outsl
push
das
aaa
jl
and
and
add
and
aaa
cltd
andb
push
addb
pop
add
rclb
add
dec
lods
fiadds
add
push
stos
daa
aaa
movb
push
sbb
jp
xlat
add
pop
mov
sub
or
pop
rclb
mov
inc
mov
add
aad
push
add
fldl
sub
rcrl
out
shrl
in
pop
mov
test
push
mov
sbb
stos
and
pop
sgdtl
stos
int
lcall
add
lcall
pop
push
adc
scas
adc
cmp
add
add
pop
sub
add
pop
inc
mov
pop
or
in
push
in
and
add
stos
int3
push
mov
pop
and
pop
and
mov
pop
sbb
orb
pop
and
test
iret
mov
fildl
mov
ss
xor
icebp
push
test
and
int3
add
test
add
adc
push
cltd
xor
test
sbb
fcompl
mov
sbb
mov
add
add
stos
mov
push
aad
push
stos
xchg
in
pop
add
repnz
fidivl
ficompl
hlt
stos
ficomps
xor
pop
es
mov
adcb
mov
push
aad
es
mov
fcompl
shrb
adc
stos
fnstenv
add
mov
pop
add
or
xchg
and
lods
add
pop
and
add
subb
sbb
sbb
pusha
and
and
addb
stos
xor
data16
faddl
add
out
inc
hlt
add
lret
pop
pop
add
lahf
add
or
xor
loopne
xchg
and
add
mov
sbb
nop
push
fistpl
mov
jns
mov
out
lcall
or
add
and
pop
shrb
add
jecxz
aaa
in
lahf
add
jecxz
lods
xor
addb
add
pop
dec
loope
add
adc
add
cmp
add
imul
mov
imul
lcall
lahf
int
add
pop
stos
cld
add
add
imul
or
imul
mov
mov
add
xor
in
pop
in
push
out
xchg
shrl
push
push
dec
fistl
rcrb
movsl
add
inc
mov
mov
lret
or
sub
pop
xor
pop
mov
divl
adc
and
shrb
pop
mov
xchg
iret
sub
sahf
mov
mov
add
mov
addr16
mov
and
push
rorb
add
push
stos
lret
punpcklbw
add
in
stos
rcrl
rcrb
lods
cs
pop
and
sbb
add
mov
in
pop
mov
add
push
sti
push
add
add
push
or
stos
adc
lahf
fmull
loopne
sub
adc
sub
add
sub
stos
out
sahf
mov
addl
aaa
arpl
and
pop
pop
nop
stos
popf
push
ret
and
mov
les
stc
mov
mov
fstl
mov
add
cwtl
mov
push
cltd
movl
addr16
fiadds
inc
mov
out
jo
add
sbb
pusha
jle
xchg
xor
mov
adc
push
add
sbb
xor
mov
out
fcompl
push
daa
add
out
push
lods
or
aaa
call
pushf
iret
add
and
fsub
push
add
stos
push
add
fcomp
popa
ret
push
scas
iret
mov
add
push
xchg
rcll
out
fldt
shrb
inc
mov
push
xor
sub
ja
stos
xchg
ja
fisubrs
pusha
xor
add
add
mov
test
aad
and
test
adc
test
loop
pushl
shl
testl
out
mov
faddl
sbb
sub
mov
subb
mov
and
xor
and
test
aaa
cmp
add
or
aaa
push
inc
add
add
mov
iret
test
sub
mov
inc
add
pop
sbb
in
iret
mov
aaa
push
cs
daa
adcb
mov
xor
push
into
cmpsl
add
pop
out
stos
or
pop
and
nop
stos
sub
cmc
pop
and
movsb
pusha
pop
incb
xor
push
add
dec
cmp
adc
or
or
test
push
xor
add
add
stos
and
xchg
jmp
and
mov
shrb
loopne
out
int3
mov
pusha
pop
test
push
inc
push
add
aaa
mov
rolb
call
xchg
das
adc
add
andl
add
sbb
lcall
push
pop
push
add
lret
push
jno
je
lock
pop
xchg
pushaw
add
outsl
xchg
jno
add
push
and
mov
and
mov
imul
aad
pop
add
aaa
pop
sbb
add
push
imul
add
lcall
and
xor
push
daa
pop
pusha
ss
dec
sub
add
loopne
in
mov
das
inc
add
loopne
mov
adcl
add
add
lock
push
pop
pop
fnstsw
xor
stos
sar
push
pop
mov
push
jecxz
les
test
lds
mov
adc
push
push
inc
add
mov
or
adc
shlb
and
and
push
mov
pop
xor
mov
xchg
push
mov
push
push
aaa
jbe
imul
and
or
andl
lahf
push
pop
jb
and
push
or
push
xor
and
mov
xchg
or
adc
xorl
pusha
cltd
mov
pop
loope
jo
and
or
lock
mov
add
and
mov
push
daa
adc
mov
add
stos
addl
addl
mov
in
add
dec
and
mov
add
mov
push
or
fiaddl
mov
fiadds
xor
add
push
das
or
pop
inc
pusha
or
jo
jmp
add
mov
or
pop
loope
stos
cmpsl
mov
test
xor
frstor
movsl
pop
and
xor
sbbb
and
add
sbb
add
mov
or
test
add
fwait
mov
push
inc
mov
adc
pusha
and
orb
pop
rolb
add
mov
rclb
add
loopne
xor
mov
add
push
add
loope
orl
adc
adc
add
imul
ret
push
rcll
dec
add
push
adc
add
jb
iret
jl
jb
lret
jl
add
mov
jl
nop
add
push
ljmp
adc
add
pusha
sbb
and
or
add
add
xchg
add
outsl
movsl
add
inc
mov
aaa
in
add
add
out
adc
stos
int3
out
loope
stos
aam
add
lret
fsubp
sbb
mov
lret
mov
xor
jo
fwait
mov
inc
adc
imul
mov
push
mov
add
push
mov
aas
nop
sub
add
sbb
cmpb
xchg
imul
sbb
pop
sbb
push
lcall
mov
movsb
mov
or
add
add
xchg
xor
mov
adc
stos
xchg
add
adc
push
adc
aaa
adc
cmpsb
pop
adc
adc
pop
xor
ljmp
mov
add
xor
xorl
mov
adc
icebp
lcall
cltd
adc
mov
stc
push
mov
or
sub
test
lods
add
pushf
pop
mov
mov
mov
pop
rclb
push
stos
jnp
aaa
mull
mov
aaa
cltd
int
add
rolb
pop
and
out
adc
rcrb
shlb
lcall
cmp
rcrb
or
add
and
faddl
add
push
add
lcall
pop
pop
mov
sbb
xchg
add
cli
mov
adcb
xchg
pop
push
shlb
xchg
add
cmpsb
inc
sbb
cmpsl
stos
aad
xlat
jo
repz
xchg
xor
cltd
inc
fcompl
push
fwait
xlat
fidivs
fisubrl
aaa
test
and
adc
mov
mov
pop
dec
aaa
ljmp
mov
adc
rolb
fiadds
pushf
rcll
pop
out
add
stos
aad
mov
pusha
sbb
iret
lock
mov
mov
push
xchg
rcr
xchg
xlat
mov
push
lods
test
pusha
add
fcmovnbe
add
ja
adc
mov
stos
iret
or
outsb
scas
jb
lret
daa
dec
adc
rorl
adc
add
push
lods
lret
push
lcall
stos
rcrl
add
stos
fstps
pushf
fidivs
leave
jecxz
rcrb
rorb
add
pop
cltd
nop
add
add
jnp
aaa
mov
clts
and
push
ret
push
lods
cmp
pop
push
xchg
and
inc
pop
add
test
push
xchg
pop
push
xchg
inc
sti
push
pushf
divl
movsl
into
add
rolb
orb
jno
add
push
pushf
push
and
daa
orb
lock
roll
lcall
jmp
aaa
movsl
xchg
add
lahf
shll
dec
mov
addb
mov
push
lcall
sbb
adc
dec
lock
pop
ss
sbb
pop
aaa
jns
dec
mov
adcb
rol
movsl
mov
jge
mov
popa
xor
adc
iret
loopne
orb
xchg
jecxz
inc
mov
hlt
mov
lea
add
add
mov
shr
mov
push
rolb
push
add
fnsave
pop
faddl
lcall
and
data16
lcall
loopne
int
push
shr
mov
mov
pop
xor
dec
jno
aaa
add
add
push
out
push
sbbb
lcall
inc
iret
inc
or
push
fcomps
adcb
std
adc
pusha
add
lahf
and
push
stos
fucomp
pop
pusha
imul
add
mov
stos
sti
xlat
and
add
and
pop
inc
and
add
add
add
pop
inc
pop
stos
les
mov
and
pop
int
add
and
add
push
add
addl
mov
roll
and
dec
push
pop
xchg
pop
add
out
sub
add
xor
mov
mov
mov
xor
and
pop
daa
and
sub
and
adc
adcl
cmpsl
stos
hlt
cmpsl
cmpsl
stos
out
add
scas
rclb
xchg
cmpsl
mov
aaa
inc
sbb
cmpsl
add
in
stos
stos
flds
stos
shlb
lret
xor
pop
cmpsl
mov
int3
push
out
aaa
push
adc
gs
push
inc
scas
scas
and
aaa
ret
mov
iret
mov
aad
and
or
add
xlat
add
pop
add
and
add
shrb
add
xor
sbb
mov
cmp
pop
xor
dec
add
add
jl
xlat
push
add
fwait
sti
ret
sbb
lret
mov
addl
sti
mov
add
out
push
mov
mov
sbb
add
sti
sti
popl
push
sbb
and
add
and
push
cmp
call
sti
sti
aaa
icebp
mov
fiadds
pop
mov
sbb
call
push
xchg
rcll
iret
push
xchg
sti
out
add
jmp
rcrb
fiadds
pop
aaa
add
and
pop
pop
rcrb
loopne
or
xchg
adc
add
push
sbb
sub
add
mov
add
adc
push
fdivl
in
and
and
mov
and
add
leave
lahf
add
mov
stc
add
or
add
push
mov
fiadds
add
in
or
mov
pop
aaa
hlt
stos
pop
ret
sbb
cmpb
or
lret
sbb
and
xor
sub
jmp
push
cmpb
adcl
popl
pop
mov
adcb
sti
pop
add
aaa
or
inc
and
add
mov
push
adc
push
pop
push
fwait
sti
lret
mov
push
les
and
inc
add
adc
faddl
repz
xchg
and
sub
pop
stos
nop
add
fnstenv
loopne
add
push
inc
rcrl
xorl
in
mov
divl
out
pop
flds
sarb
fcoml
cwtl
repz
cli
addb
rcrb
fidivs
addl
xor
andb
sub
sub
push
test
add
lcall
testl
andb
mov
ss
add
and
aaa
pop
and
and
inc
add
shrb
add
xchg
lods
sbb
add
add
pop
xchg
mov
addb
lcall
push
sbb
mov
mov
popl
mov
push
lcall
aaa
sahf
inc
or
cli
push
mov
addb
add
lcall
mov
adcb
aaa
adc
arpl
dec
inc
dec
mov
shlb
lcall
dec
mov
fildl
add
rcll
push
add
in
push
push
add
mov
sbb
inc
sbb
loopne
inc
mov
iret
add
add
add
and
push
inc
pop
pop
add
pop
lret
push
and
loopne
push
pushf
nop
mov
add
daa
pop
rol
add
roll
stos
shlb
jnp
xor
and
mov
and
stos
rcll
push
sub
jae
add
or
add
xchg
pop
adc
fcmovnb
add
aad
pop
fstpl
add
iret
inc
add
push
and
mov
jno
or
lcall
and
xlat
add
pop
mov
xchg
lahf
mov
fisubs
push
sarl
add
pop
pop
lret
aaa
add
or
pop
les
sub
or
cmp
adcb
push
mov
and
adc
rcrb
push
pop
cmpsb
lret
and
stos
lahf
mov
and
jo
addb
shrb
int
addb
iret
inc
pop
movl
pusha
sbb
subb
into
inc
pop
lcall
and
stos
cld
pop
pop
add
xor
mov
test
xchg
ret
stos
push
push
pusha
adc
add
jmp
xor
add
push
lahf
stos
add
push
adc
lahf
ret
fimuls
ret
push
in
add
push
loopne
mov
and
push
xor
mov
stos
les
and
cmp
and
fisubl
xchg
add
iret
mov
push
sub
in
pop
addl
cmpsl
fldt
jl
or
pushl
inc
mov
or
in
pop
mov
mov
and
mov
inc
mov
lods
ficompl
lods
add
push
iret
and
xchg
lret
mov
lahf
loop
add
lret
fs
mov
pop
fadd
dec
sbb
inc
mov
addb
inc
rcrb
and
iret
adc
rclb
and
push
stos
xlat
push
mov
nop
orl
or
and
aaa
adc
push
lcall
add
psraw
pop
cmpsl
stos
add
movsb
aaa
sbb
or
loopne
and
loope
das
in
add
mov
lcall
lcall
add
stos
leave
pusha
jno
aaa
add
and
pcmpeqb
add
push
adc
add
add
or
add
xchg
or
rcrb
outsl
loope
xchg
and
ret
arpl
add
popa
add
stos
enter
and
add
jg
push
add
into
push
pop
add
ret
aaa
add
test
and
and
stos
add
sub
dec
add
inc
push
popl
mov
or
xor
daa
pop
and
and
pop
and
pop
mov
ljmp
adc
aaa
imul
pop
push
mov
and
push
lcall
inc
aaa
and
add
add
and
out
sub
add
pop
pop
out
sbb
fiadds
add
fildll
and
andb
test
or
repnz
mov
ret
adc
xor
in
test
push
lret
lea
push
iret
inc
push
rolb
xchg
rorl
mov
adc
and
nop
sbb
sbb
add
jno
cmpsl
repz
pop
divl
sub
mov
ret
das
in
xchg
and
or
pop
rorl
retw
xchg
sub
mov
rcll
push
lahf
testl
scas
inc
add
mov
stos
rolb
jo
lcall
add
dec
adc
push
sahf
mov
testl
pop
inc
mov
rcrb
rcrb
push
add
adc
or
and
data16
mov
pusha
cmp
aaa
add
pop
nop
add
pop
cmpsb
nop
add
and
and
mov
mov
aaa
sarb
lret
sbb
dec
adc
xor
mov
mov
or
scas
or
add
ss
push
or
add
out
call
dec
mov
push
mov
and
xchg
xchg
mov
mov
mov
xor
mov
popf
or
add
and
stos
and
mov
stos
int3
xchg
fs
aam
and
out
stc
cmp
in
stos
enter
push
fs
xchg
je
nop
mov
xchg
inc
add
adc
mov
in
add
xor
xor
dec
add
pop
add
stos
push
add
fdiv
sbb
push
cltd
mov
fxtract
pop
pop
enter
dec
sysenter
mov
movsb
and
push
test
popf
sub
mov
jg
push
stos
sti
std
or
in
cmpsl
test
sbb
jno
or
xchg
lds
mov
add
mov
ret
scas
rcrb
and
push
ds
inc
mov
or
pop
ret
in
rclb
lret
mov
mov
add
mov
aaa
ds
add
pop
and
stos
mov
cmp
cmp
addl
add
or
mov
aaa
sbb
mov
add
add
sti
lahf
inc
add
add
sti
add
adc
push
fwait
sti
iret
dec
aaa
enter
xchg
stos
scas
add
in
add
rolb
loopne
nop
fwait
pusha
out
aaa
jns
and
ja
fisubrs
lea
jl
daa
ss
add
xorl
rcrb
mov
sbb
push
and
scas
or
add
scas
adc
cmpsb
xor
icebp
add
divl
loop
mov
adc
sti
rclb
aaa
loopne
inc
pop
pop
mov
pop
adc
loopne
mov
pusha
push
out
lret
shlb
add
aaa
xchg
imul
jnp
add
pop
out
pop
sub
xchg
sbb
mov
aaa
inc
or
adc
adc
sbb
xlat
sbb
adc
push
xchg
mov
lahf
mov
ss
popa
adc
scas
jo
add
int
add
rolb
mov
faddl
inc
add
aaa
loope
add
push
pushf
inc
xlat
mov
scas
push
pushf
shll
stos
add
push
arpl
mov
cmpsb
xchg
lahf
rol
mov
xchg
mov
add
add
add
aaa
pop
mov
push
pop
inc
add
xchg
xchg
inc
add
sahf
lods
mov
in
cmc
flds
cld
rolb
mov
orb
xor
rorb
ret
sub
sbb
stos
mov
mov
rcll
sti
push
ret
xor
or
push
add
adcb
rolb
mov
adc
adc
and
aaa
rcll
push
xor
in
push
add
and
mov
add
mov
cmp
adc
jo
pusha
jno
and
and
inc
cmp
lret
sbb
addl
xchg
loopne
mov
rcll
add
pushf
cltd
xchg
dec
mov
sub
lret
pop
rorl
mov
rclb
scas
in
and
shll
mov
xchg
ss
addb
xor
add
fiadds
stos
ljmp
pop
inc
ds
negl
cmp
loop
inc
jmp
cmp
fiaddl
mov
in
shll
add
push
pusha
push
ja
push
xchg
or
sbb
add
mov
fsts
cmp
stos
add
stos
loopne
add
pop
es
fidivl
ficompl
hlt
stos
fiadds
popf
mov
sub
pop
es
mov
shlb
push
push
stos
rorl
popf
push
aad
pop
es
mov
pop
add
fidivs
stos
add
push
call
add
loopne
fcmovnu
mov
sbb
loopnew
add
mov
mov
and
fcmovnbe
lcall
fisttpll
mov
and
cld
iret
aaa
xchg
add
adc
push
dec
fldenv
xlat
xor
fsts
mov
add
and
fnstenv
iret
sub
mov
fildl
mov
pop
sub
sbb
mov
add
stos
aaa
push
push
pop
xor
aaa
fiaddl
pop
fiadds
pop
pop
rorb
add
stos
xlat
push
fnstenv
and
push
sbb
addb
mov
xor
add
add
and
pop
add
adc
lcall
push
pop
xchg
and
add
lcall
int
lret
lahf
add
xchg
stos
iret
pop
pop
and
or
lret
adc
mov
sub
fisttpl
push
pop
addl
push
lcall
fidivs
je
and
mov
push
pop
test
adc
inc
add
xor
add
enter
mov
push
pop
mov
aaa
test
xor
aaa
mov
mov
add
into
insb
inc
and
add
xor
orb
inc
xor
add
add
flds
iret
push
lcall
push
lcall
sbb
andb
push
lcall
and
stos
xlat
aaa
scas
push
fiadds
in
add
pop
add
sbb
mov
fildl
add
mov
adcl
push
in
add
mov
push
lcall
xchg
aas
aaa
test
sbb
popf
fldl
add
adcb
rcrb
add
imul
mov
adc
test
aad
out
add
orl
pop
sub
les
cli
add
fisubs
and
and
add
fcompl
shrb
push
lcall
test
add
fiadds
add
stos
iret
outsl
fidivs
or
push
push
mov
pop
mov
cmp
inc
and
push
subb
cmp
add
or
sbb
rolb
jns
add
lcall
lcall
loop
shlb
xor
rolb
add
add
addl
add
rcrb
add
or
xchg
rcrb
mov
xlat
mov
ret
sub
aaa
mov
push
mov
add
and
push
lcall
and
mov
or
orl
and
inc
push
sub
adc
rclb
subb
or
add
and
dec
leave
test
cmp
push
push
inc
fiaddl
push
push
lcall
pop
add
push
and
inc
cmpsb
sbb
lcall
in
or
in
stos
int3
rolb
imul
stos
ret
ret
sbbb
sbb
ffreep
or
stos
add
sub
mov
and
aaa
repnz
and
and
stos
flds
or
xor
add
or
inc
push
xchg
xor
ret
adcb
aaa
cmpsb
popa
sbbl
int3
aas
inc
push
lret
fldl
fistl
imul
mov
aaa
inc
jo
and
adc
aaa
out
adc
pop
aaa
xchg
addb
lock
adcb
rcrb
add
pop
push
stos
pop
mov
addb
rcrb
fiaddl
sub
addb
addl
or
pusha
add
je
lcall
lcall
mov
pop
pusha
pop
push
lcall
mov
jp
sbb
popa
and
add
push
enter
pop
icebp
add
stos
rcll
fwait
xchg
loopne
push
inc
out
mov
add
movsl
pusha
gs
lcall
push
pusha
push
mov
add
add
inc
push
daa
in
stos
adc
and
stos
aas
add
aaa
mov
push
andl
pop
in
add
add
xchg
xor
pop
push
incl
and
addb
pusha
cmpb
pop
lret
loopne
rcll
push
and
push
pop
ret
mov
faddl
add
add
add
arpl
das
mov
add
das
and
rclb
and
lcall
add
rcrb
xor
or
das
gs
pop
aaa
and
add
pop
push
das
push
stos
or
in
rclb
orb
and
fnop
pop
scas
add
mov
pop
mov
rcrb
add
pop
daa
movl
and
les
stos
les
pop
pop
jmp
and
push
ret
pusha
add
ljmp
clc
addb
mov
pop
ret
out
rcrb
lret
add
out
cmp
das
push
inc
or
adc
loope
mov
jb
and
xor
and
add
inc
mov
das
addb
mov
leave
lahf
add
imul
rcrb
or
add
inc
imul
les
add
mov
xchg
inc
sbb
mov
and
and
test
frstor
mov
cmp
sub
lods
addb
imul
in
rclb
mov
nop
fimull
xchg
mov
push
jae
and
sbb
pop
add
adc
cmp
push
pop
and
adc
jb
pop
add
pusha
pop
in
or
sub
in
push
int3
popa
jb
stos
add
cmp
push
xchg
iret
mov
jno
and
mov
push
loopne
push
push
push
and
add
pop
and
dec
rclb
rclb
fldl
sbb
sbb
iret
mov
orb
xlat
test
pop
sbb
pop
mov
lret
sub
add
lds
pushf
push
pop
roll
mov
sub
push
add
push
lcall
lcall
sbb
pop
pop
mov
dec
pop
xchg
pop
aas
add
pop
pop
aad
lcall
hlt
shrb
cmp
adc
cmp
mov
hlt
sbb
push
fcmovnb
popa
inc
in
xor
lret
push
and
rolb
inc
adc
pop
aaa
and
and
pop
xor
push
push
xor
sbb
push
call
in
mov
push
loope
out
add
mov
fldl
gs
dec
push
and
pop
ds
and
add
push
nop
fsubrl
push
mov
add
adc
sahf
jo
push
xchg
adc
mov
cmp
roll
push
xchg
call
xor
add
stos
cmp
and
adc
mov
mov
push
or
fldl
xor
push
mov
push
pop
jno
pop
push
fldl
push
add
push
xchg
xlat
push
push
inc
icebp
cmp
push
and
mov
mov
lret
adc
push
xor
and
stos
xor
es
cmp
daa
and
and
aaa
lret
loopne
push
stos
cwtl
aaa
sub
addb
in
pop
mov
cltd
fldl
rolb
or
add
xor
push
sbb
inc
fiadds
popa
subps
and
dec
pop
add
adc
mov
mov
daa
pop
and
and
rolb
lcall
push
mov
rolb
and
stos
and
aaa
loop
inc
add
aas
and
mov
inc
aaa
insb
add
add
and
test
dec
jno
stos
or
in
push
add
pop
test
inc
rolb
addb
xchg
push
and
lret
or
das
jo
inc
or
adc
cmp
fisubs
aas
mov
addl
lock
mov
popf
add
fs
add
aaa
aad
and
push
or
data16
sbbb
add
pop
jo
add
or
and
add
ret
lock
adc
nop
add
enter
sbbl
lahf
xorl
lahf
rclb
lahf
adc
loopne
sahf
xor
add
cmp
pop
mov
pop
push
lcall
or
sub
xlat
sbb
lret
addr16
xchg
mov
dec
mov
xor
ja
lock
mov
sub
and
push
and
xchg
xor
lds
shr
pop
and
stos
lret
push
and
mov
xchg
aaa
and
loop
aaa
xor
fists
push
push
cli
lock
add
push
push
push
xor
push
push
pop
cmp
ds
aam
push
aaa
xlat
push
cmp
xchg
adc
test
and
pop
rcrb
pop
mov
test
add
dec
adc
pop
add
adc
sub
stos
rcrl
add
mov
loope
push
arpl
and
icebp
add
xchg
test
xor
push
stos
das
xor
pop
add
push
test
stos
sub
int
cltd
or
mov
ret
cmpsb
cmp
addb
add
dec
in
stos
mov
jo
test
and
cmp
sub
inc
jb
lcall
pop
mov
test
shl
push
lcall
sub
push
and
cmp
inc
mov
mov
push
mov
das
dec
aaa
movsl
shll
das
mov
inc
rolb
sub
roll
pusha
adc
test
jae
adc
popa
sub
sub
or
cmp
and
aas
aaa
addl
rcrb
adc
pusha
or
lock
mov
cmp
lcall
lcall
ret
pop
in
add
mov
scas
push
push
and
test
push
xor
xchg
xor
xor
jo
xchg
add
fisubrs
dec
nop
push
xor
mov
ljmp
add
sub
push
out
push
add
shrb
add
mov
fcoms
and
shlb
ss
lcall
lcall
nop
add
and
rcrb
jecxz
adc
mov
add
sub
add
push
add
pop
add
fcmovnu
scas
pop
rclb
lcall
pop
add
pop
lcall
inc
mov
addb
and
out
shrb
add
sbb
shr
push
mov
dec
shrb
mov
and
add
and
lcall
jae
imul
icebp
xor
mov
sub
subb
and
add
fcoml
pop
or
add
sbb
xor
icebp
add
repnz
inc
mov
out
add
fdivl
mov
mov
mov
add
lcall
mov
stos
add
mov
mov
add
add
adc
lcall
jo
and
jno
lcall
and
sti
lock
arpl
fiadds
xchg
ds
lcall
loop
add
xchg
rolb
xor
rolb
js
add
loop
add
stos
loope
in
or
xchg
sub
push
add
stos
adc
aaa
addl
add
rclb
adc
add
aaa
add
shll
adc
add
jl
mov
sbb
fidivs
mov
xlat
add
rcll
insl
push
scas
mov
sub
hlt
push
in
mov
xor
sub
mov
lds
out
hlt
shrb
rolb
imul
nop
sahf
add
ret
xorb
lahf
test
push
into
push
fsts
sbb
cs
xor
cmp
pop
xor
xor
push
add
lret
roll
repz
add
in
xlat
rolb
jmp
add
lcall
push
lcall
ret
push
lcall
adc
ret
push
rcrb
das
rclb
xor
cwtl
push
add
pop
daa
inc
test
add
add
mov
sti
dec
mov
sahf
rolb
cwtl
imul
mov
lcall
daa
pop
loop
lret
add
pop
rolb
imul
push
cltd
rcll
lcall
push
or
ja
jae
add
jae
adc
pop
pusha
add
push
push
mov
xchg
outsl
shrb
or
aam
add
push
lcall
push
aas
xlat
aam
push
push
lcall
hlt
sbb
imul
add
add
or
inc
add
push
xchg
inc
sbb
lcall
lret
lret
pop
pop
rclb
add
add
rclb
testl
fsts
add
push
xchg
das
pop
es
add
es
add
mov
add
mov
lret
adc
jle
add
daa
add
and
lahf
mov
fidivs
push
adc
mov
stos
iret
and
xlat
aaa
dec
and
and
pop
jns
add
je
stos
aam
shll
and
add
pop
add
mov
add
push
fcmovnbe
imul
lcall
rcrl
add
mov
fldl
sahf
mov
or
pop
fldl
xor
or
push
daa
pop
mov
das
push
xchg
xor
add
fiadds
stos
add
fcoml
push
add
lret
add
in
jmp
addb
push
pusha
addb
lcall
xchg
push
lcall
xor
popl
lret
leave
lahf
add
stos
repz
xchg
das
mov
test
xchg
imull
cmp
andb
daa
push
lcall
xor
stos
xor
xor
xor
cmpl
andl
insl
or
add
add
mov
pop
test
shll
shlb
inc
pop
ret
gs
stos
ret
push
or
push
adc
data16
bound
daa
stc
and
add
add
or
inc
imul
inc
arpl
and
orb
in
fcmovnbe
pop
roll
pop
add
scas
and
cmp
push
cltd
inc
fs
arpl
arpl
rolb
imul
xchg
daa
add
add
lret
imul
push
arpl
orb
imul
sub
sub
les
lahf
push
lcall
data16
popa
rclb
adc
xor
jge
or
mov
xor
push
push
add
hlt
sahf
pop
sbb
xchg
ss
adc
sbb
mov
sbb
mov
lret
add
push
mov
push
ret
mov
and
add
ss
inc
add
push
cmp
lret
push
mov
hlt
andps
add
mov
xchg
mov
xchg
iret
fildl
iret
rclb
orb
shlb
and
popa
add
rcrb
add
add
out
fcmovnbe
pop
and
add
push
rclb
push
push
cwtl
add
push
aas
fisttpll
and
add
adc
xchg
push
lcall
lcall
jno
cwtl
fisubs
pop
mov
fnsave
std
rolb
inc
add
jns
pusha
subb
sbb
cmpb
loop
pusha
inc
stos
cli
pop
pop
out
outsl
push
sti
addb
andl
stos
outsb
xor
fsts
push
lcall
pop
sub
push
sub
pop
mov
faddl
roll
push
pop
mov
faddl
sbb
adc
ret
adc
rcrb
loopne
inc
adc
pop
dec
inc
inc
add
mov
roll
sub
imul
inc
adc
push
adc
or
adc
and
and
out
hlt
pop
in
mov
rcrb
loopne
in
cmpsl
lods
add
andl
rcrb
mov
and
bound
push
addl
and
xlat
inc
add
inc
add
bound
pop
mov
adc
pop
inc
or
push
lcall
pushf
and
pop
mov
push
add
push
mov
or
pop
xchg
mov
movsb
push
mov
mov
std
inc
test
ss
add
rclb
push
subb
sub
ds
mov
jmp
dec
loopne
inc
gs
inc
adc
push
fsub
subb
fcmovb
mov
xor
inc
subl
adc
push
cwtl
faddl
pop
out
push
lcall
and
pop
ds
inc
fldl
movl
adc
adc
pop
ret
enter
pushl
inc
pushf
add
lret
pusha
push
loopne
pop
push
loopne
push
pusha
int
and
ss
add
fsubs
stos
fcoms
or
ss
and
imul
push
pop
out
stos
xor
sti
sahf
mov
xchg
int
scas
add
scas
add
ss
add
rorb
inc
pusha
or
push
sbb
rolb
lret
lods
iret
push
xchg
ret
push
mov
fistl
inc
xchg
ret
xor
add
add
pop
adc
pop
pop
xchg
rcrb
addb
rcrb
and
jb
add
addb
stos
pop
es
mov
sub
fistl
pop
push
lret
push
xchg
pop
sub
add
dec
xor
icebp
push
cltd
rcll
dec
mov
push
lret
push
jno
add
cltd
mov
fwait
push
fildl
xchg
sub
mov
arpl
stos
out
xchg
lahf
dec
xchg
dec
fistpl
pop
sub
lcall
push
shlb
pop
mov
cmp
addb
out
les
pop
aas
push
and
and
pop
hlt
lret
and
xor
pusha
mov
outsl
and
sub
sbb
lcall
lock
std
jo
inc
pop
mov
cmpl
fldl
stos
mov
xchg
mov
push
stos
addb
hlt
push
add
push
cltd
movl
rolb
ret
loopne
mov
mov
push
sbb
movsb
mov
fsts
xor
push
cltd
enter
inc
add
subl
into
in
repz
add
add
sahf
fsubp
and
add
cwtl
ss
inc
jo
addb
xor
add
in
xor
mov
cmp
or
push
lods
out
pop
shlb
aad
pop
xor
rolb
roll
pop
push
rolb
push
mov
jl
pushf
fidivs
dec
pop
mov
push
add
rcrb
xchg
add
mov
inc
add
cmpsb
xchg
mov
movb
inc
add
loopne
inc
push
lds
pushf
rorl
add
push
cltd
mov
hlt
cltd
ret
ss
dec
push
adc
sub
add
ss
rolb
loop
push
mov
adc
and
add
push
stos
repnz
pop
push
xchg
rorl
adc
nop
shl
and
ret
rorl
stos
aas
dec
add
xlat
push
or
ret
push
in
pop
stos
push
imul
fucomi
push
xor
push
pop
test
fsts
and
cmpsl
rolb
imul
push
fistpl
inc
push
or
jo
int3
add
adc
shr
or
and
rclb
add
in
pop
xor
shrb
add
mov
add
fstpl
aaa
fildl
pop
aas
ficoms
cwtl
pop
and
in
or
dec
sbb
dec
sbb
inc
pop
aas
sub
and
scas
lcall
les
and
cmpsb
adcb
and
xor
sub
lret
rcrb
fsubs
pop
and
or
sbbb
cltd
mov
pop
and
mov
icebp
or
pop
add
add
push
sahf
push
xchg
adc
rolb
mov
xchg
jo
nop
or
xchg
add
pushf
sub
xlat
cmp
add
imul
inc
icebp
add
add
ss
add
dec
add
pusha
add
pop
test
add
ss
mov
imul
add
pushf
inc
pop
daa
aad
pop
mov
pop
add
test
shrb
push
stos
leave
dec
loop
push
push
pop
add
adc
mov
add
pop
out
cltd
mov
add
add
inc
aas
push
rcrb
aas
in
mov
pop
adc
add
mov
push
shlw
push
test
rcrb
jo
pop
and
rcrb
addb
shl
pop
jp
add
jg
pop
lock
add
pop
popa
sub
inc
pop
add
pop
test
rolb
aad
add
icebp
add
test
mov
mov
out
shrb
addb
mov
out
pusha
add
pop
clc
addb
pop
mov
int3
xor
loop
pop
xchg
ret
add
add
loop
pop
mov
mov
mov
mov
addb
pop
mov
pop
lock
pop
daa
rcl
pop
sbb
aaa
lock
add
adcb
ss
lock
jnp
add
loope
inc
add
mov
mov
andl
movsl
dec
imul
fwait
das
in
fmul
and
push
xlat
pop
push
cmpsl
add
push
fcomi
push
xor
add
or
fsts
mov
or
push
fcoms
mov
jecxz
rcrb
lock
jecxz
test
pop
xor
mov
imul
rorb
pusha
faddl
jo
imul
ficoms
and
daa
sub
mov
add
pop
sbb
xor
shrb
pop
push
xchg
gs
add
popa
pop
lea
add
inc
add
iret
testb
and
mov
adc
jp
sub
stos
das
adcb
aaa
mov
andb
stos
jo
faddl
add
mov
push
lcall
xor
pop
mov
lret
pusha
dec
lcall
lahf
push
lcall
popf
sub
data16
rclb
pop
sbb
inc
int3
push
xchg
or
loop
xchg
test
mov
mov
xchg
xor
imul
imul
xlat
aam
push
add
stos
xlat
adc
and
mov
fiaddl
xor
shrb
push
xchg
or
add
popa
push
xchg
stc
inc
lahf
add
popa
pop
lea
or
and
pop
pop
pop
stos
int
bound
xor
push
sahf
push
add
popf
push
mov
in
mov
mov
pop
push
and
add
shrb
push
pop
in
or
popf
or
push
xchg
add
push
aaa
fcoml
xlat
pushf
inc
pop
pop
test
lret
push
xchg
and
xchg
lret
mov
daa
in
rcrb
add
and
pop
mov
xchg
lret
rcrb
lret
add
add
lahf
push
lcall
or
mov
push
add
sbb
in
rclb
add
add
push
fcompl
pop
rolb
dec
ss
push
or
enter
imul
add
push
lret
fldl
out
fidivs
add
fldl
jg
push
lcall
lods
sbb
add
orl
and
add
stc
add
dec
sbb
or
cwtl
xor
in
pop
orb
add
xor
add
pop
cwtl
xor
clc
push
xchg
xchg
mov
cwtl
sub
mov
rcrb
or
aas
push
xchg
add
into
in
or
orb
cmp
addb
pushf
and
sub
pop
int3
mov
dec
xor
mov
add
push
andb
pop
mov
rclb
orb
cli
add
lret
mov
push
cltd
mov
int3
in
xlat
test
push
xchg
add
push
cmp
pop
pop
inc
mov
loopne
adc
rcrb
daa
inc
pop
ret
add
stos
sti
push
or
ret
push
adc
stos
mov
and
and
xor
and
push
leave
add
orb
rorl
lret
add
fisubs
mov
aam
xor
les
adcb
test
add
push
int3
add
or
xor
xor
xor
sub
xor
inc
or
xor
xlat
push
xor
or
sub
or
lcall
pop
sbb
out
fst
in
rol
push
ss
inc
or
add
xor
mov
lahf
in
add
add
lahf
push
sahf
lds
inc
or
mov
stos
aam
xor
inc
push
xchg
or
push
mov
fists
push
and
into
inc
addr16
ret
push
xchg
ret
push
pop
mov
xor
mov
sarl
push
stos
insl
fists
subb
push
ja
or
push
push
fstl
mov
and
xchg
rolb
push
push
sub
loopne
cmpl
jae
add
push
div
inc
or
push
sub
and
push
pop
sbb
push
xchg
or
sbb
and
add
mov
add
sbb
add
lods
loopne
pop
add
xlat
loopne
popa
popf
mov
push
xor
sbb
pushf
ss
adc
lahf
mov
add
push
xchg
andb
push
in
pop
pop
loopne
cltd
xor
rorb
andb
daa
xor
fs
in
pop
pusha
pop
cwtl
fs
and
sub
xchg
cltd
add
xchg
in
pop
movsl
dec
add
sbb
pop
aas
ficoms
xor
popa
and
dec
loop
push
inc
loop
lcall
stos
xlat
data16
pusha
add
mov
push
mov
pop
sbb
rolb
pop
daa
iret
add
and
dec
adc
fstps
rclb
xchg
mov
mov
and
rcrb
add
mov
ret
pusha
nop
test
ret
push
sbb
in
add
add
ret
xor
push
add
push
test
add
in
rep
lret
and
mov
fsubp
xchg
repnz
and
mov
fldl
and
mov
rolb
pop
sbb
pop
ss
adc
daa
push
gs
add
mov
inc
aad
stc
rclb
orb
add
and
pop
and
mov
shrb
subb
orl
xor
aad
stos
ss
xor
sub
and
or
rcrb
and
and
movb
pop
and
pop
shlb
test
adc
ljmp
push
jmp
daa
push
add
loopne
ljmp
adc
sub
or
aas
and
stc
add
push
testb
mov
rclb
jo
and
pop
push
push
aaa
add
ss
cmp
push
xor
add
push
mov
add
mov
adc
add
pop
es
rolb
cmpsl
jo
shlb
inc
aam
add
pushf
pop
ds
rcrb
mov
push
ss
adc
add
mov
mov
clts
add
adc
add
ja
add
rcrb
push
mov
dec
mov
pop
xchg
mov
pop
mov
mov
add
rcrb
dec
add
adc
add
dec
add
das
inc
pop
push
add
mov
jne
dec
mov
adc
mov
xor
aaa
push
cmpsb
adc
loopne
call
add
cmpsl
push
cltd
inc
mov
pop
lods
mov
lds
ss
pop
add
adc
or
ss
lret
push
fsub
cltd
rep
rolb
shlb
jecxz
pushf
fsubp
cltd
or
stos
jmp
ss
lret
mov
hlt
pop
add
or
adc
iret
xchg
xchg
sbb
aaa
jo
pop
pop
int3
xchg
mov
mov
xchg
push
cmp
xor
rorl
jne
or
shlb
lock
stos
rcrl
cmp
xor
jno
ret
sbbb
pop
pop
and
roll
push
adc
or
ss
rolb
xchg
xor
addb
add
cmp
cmp
cmp
add
push
mov
mov
addb
add
cmp
ret
addb
add
and
jo
inc
jbe
add
add
add
rcrb
mov
adc
addb
rcrb
or
adc
sbb
popa
ss
cmpsb
dec
addb
add
rorl
roll
shlb
push
push
and
bound
adc
pop
mov
push
stos
mov
lea
jmp
fcmovne
lea
xor
adc
rolb
insl
adc
pushf
mov
addb
add
cmc
lock
add
rolb
adc
into
mov
xor
mov
xor
and
daa
lock
add
fbld
mov
add
push
loopne
sbb
add
add
add
adc
jb
add
add
add
add
mov
lock
add
add
movsb
mov
xchg
mov
push
mov
add
rol
rclb
fdivl
and
fsubl
pop
loopne
stos
xor
push
dec
lock
imul
push
in
lret
or
push
loop
jo
mov
lcall
mov
xchg
xor
and
fcom
mov
imul
mov
fmull
inc
mov
shll
and
push
mov
and
adc
mov
loope
and
cmpsl
fsubl
or
pop
jecxz
out
stos
jnp
mov
jge
pop
rolb
add
mov
mov
and
mov
rcrb
daa
aad
jb
pushl
push
fs
sti
nop
add
shlb
push
adc
add
test
in
fnop
pop
inc
sbb
jo
add
pusha
add
sahf
xchg
mov
pop
push
lcall
and
fsubl
sbb
getsec
mov
add
daa
or
ret
stos
ret
add
leave
lahf
add
aam
subl
pop
popa
inc
rcrb
add
push
pop
loope
add
jmp
pop
mov
stos
popf
adc
test
and
addr16
push
ss
xor
and
adc
rcl
sbb
xor
sbb
add
addr16
ret
add
push
lahf
daa
flds
ret
pop
fcompl
and
fmull
mov
xlat
aaa
pop
and
pop
and
push
xor
cmp
and
fbld
and
rcrb
in
add
push
subl
xor
lcall
lahf
and
add
stos
ret
shrb
add
add
fcompl
mov
sldt
xlat
aaa
sub
add
add
push
mov
add
nop
or
or
inc
add
add
add
push
roll
xchg
sub
mov
push
inc
and
enter
ds
push
lret
ficoms
lret
push
add
xor
iret
hlt
xchg
sub
das
push
add
push
push
xlat
push
xchg
daa
push
or
add
adc
hlt
xchg
mov
mov
xlat
stos
sbb
inc
xor
pop
mov
push
lock
xchg
ret
fmull
add
add
inc
cmp
add
arpl
add
fadds
add
inc
push
add
shrb
fiadds
lods
fldl
push
xlat
aam
fsubl
pop
add
mov
push
inc
add
das
push
jecxz
addl
push
addb
or
push
add
stos
push
lcall
dec
in
pop
ss
pop
add
sti
and
add
mov
sbb
cs
and
add
adc
out
mov
stos
jno
xchg
xchg
push
rclb
mov
lcall
iret
push
pop
add
add
lcall
sbb
lcall
cli
mov
lahf
ss
adcb
pop
lahf
ss
and
add
imul
xlat
aam
fcompl
add
jmp
push
stos
fstps
or
xor
shrb
and
shrb
fildl
ds
push
and
add
push
lcall
ret
cltd
add
pop
sbb
push
mov
aas
pop
daa
shll
add
xchg
add
add
pop
add
lret
popf
add
push
lcall
mov
ss
inc
sbb
push
aas
fisttpll
add
and
fcmovne
lahf
subb
add
push
lcall
shl
mov
cmp
inc
cmpsb
sahf
push
xchg
adc
ret
mov
push
mov
mov
mov
add
add
push
lcall
pop
subl
rcrb
and
pop
pop
stos
fadd
bound
add
stos
add
and
orb
test
inc
inc
and
and
andps
ds
pop
inc
cmp
pop
rcrb
mov
addb
cmp
cmp
xchg
inc
addb
or
push
stos
fldenv
ret
mov
fiaddl
or
or
fs
setp
push
mov
lret
add
aaa
ss
adc
leave
mov
stos
and
adc
daa
out
lret
rclb
add
loopne
stos
push
mov
and
stos
das
push
sbb
imul
cmpb
sbbb
subb
and
loopne
ret
push
add
add
fisttpl
loopne
andb
outsb
in
mov
pop
or
rcrb
add
rclb
pop
push
stos
in
mov
lods
int3
rclb
mov
andl
in
and
adc
push
or
adc
mov
mov
subb
pop
lods
or
inc
and
pop
xor
mov
cmp
add
add
add
or
and
inc
and
mov
pop
adc
fcoml
or
popf
or
push
xchg
sub
add
fcoml
xlat
pushf
pop
sets
pop
inc
loopne
cmp
or
js
push
fsubl
and
and
notl
negl
or
inc
dec
add
push
sahf
push
xchg
and
push
rclb
rclb
and
add
inc
push
and
xchg
pusha
adc
cmp
shlb
or
mov
inc
add
rcrb
add
lods
ss
pusha
add
adcb
in
ss
lds
mov
inc
dec
sbb
add
inc
and
sbb
andb
sub
pop
test
and
pop
mov
mov
xor
test
jmp
orl
mov
mov
mov
cmp
mov
add
dec
push
pop
sbb
add
and
or
fisubs
sti
lahf
imul
inc
push
pop
test
push
orl
push
pop
mov
or
jge
or
mov
ss
orb
pusha
xchg
movsl
and
mov
ret
push
xchg
inc
mov
push
rcrb
or
add
push
cltd
movl
add
push
sbb
in
addb
popa
std
add
cmp
push
cltd
add
hlt
pop
in
test
push
inc
aam
xchg
rep
lret
or
mov
in
repnz
push
mov
inc
add
pop
push
and
rcl
pop
lods
mov
add
sti
push
test
sahf
add
aad
pop
or
inc
rcrb
jg
add
test
shrb
add
push
inc
add
pop
out
mov
mov
add
aaa
pop
add
pop
in
rcrb
or
push
pop
daa
rolb
test
pop
daa
call
pop
xchg
mov
add
addb
stos
test
add
rcrb
ljmp
lods
add
cwtl
rcrb
mov
add
xor
add
int3
pop
lret
addb
sahf
push
or
add
mov
std
addl
xor
test
and
addl
xor
test
rcrb
adc
jo
outsl
dec
xor
adc
pop
rcrb
loopne
xor
mov
and
addb
add
aas
lahf
add
cmp
lahf
add
xor
and
sbbb
lahf
xor
stos
test
add
add
sub
sub
add
add
or
shlb
xor
push
cmp
sub
add
xor
sbb
or
mov
lahf
add
cli
xor
xor
stos
pushf
xor
mov
add
add
jge
add
add
xor
push
xor
cmp
add
mov
lahf
add
xor
aaa
cs
add
jo
lahf
xor
xchg
xor
orb
add
pop
add
lahf
add
and
add
xor
pop
xor
xchg
es
add
add
sub
inc
xor
jns
sbbb
dec
xor
cmpb
add
and
sub
add
lock
mov
jns
or
xchg
ficompl
fstp
fcmovnu
fcmovu
add
xlat
aad
rcl
xchg
add
into
xchg
int
int3
lret
lret
mov
sar
incb
add
std
cld
sti
cli
stc
add
testl
hlt
repz
icebp
xchg
add
lock
out
add
in
in
jmp
jmp
jmp
out
in
and
add
add
loop
loopne
sahf
popf
add
xchg
dec
and
lahf
add
xor
out
sub
add
add
lock
add
add
fcompl
lock
add
das
xor
out
xor
stos
xor
in
stos
jo
xor
inc
xor
wrmsr
add
jo
sub
add
sub
inc
cmc
add
sub
insb
adc
add
lock
fistpl
add
xor
fnsave
aam
xor
lret
xor
cmp
cmc
add
xor
jns
add
add
push
xor
jecxz
aas
mov
xlat
pop
xchg
sub
pop
xchg
das
add
add
and
mov
jge
push
fcompl
xchg
pusha
xchg
push
xchg
pop
add
sbb
cmp
add
push
sub
sbb
test
cmpb
push
pusha
fwait
and
rcrb
jno
push
rolb
pusha
jo
out
stos
inc
out
ret
rclb
rolb
ret
inc
mov
js
add
les
and
xor
pop
lahf
xchg
add
push
pop
add
popf
rolb
push
inc
pop
sti
mov
push
add
call
addr16
lcall
lcall
pop
loopne
lea
pop
sbb
mov
andl
out
adcb
pop
sub
popf
and
jmp
cltd
xlat
lock
aaa
int
adc
push
ss
or
orb
push
andb
push
fdivl
rolb
add
shlb
add
add
fcoml
fcompl
push
xchg
adc
push
lcall
add
lcall
add
add
scas
inc
adc
cltd
xlat
push
aaa
aam
add
mov
add
roll
mov
add
aaa
fcoms
add
add
roll
les
ret
roll
popf
sub
add
fidivl
fcoms
rclb
insb
dec
push
pop
pop
add
lahf
and
adc
push
pop
mov
sbbb
push
push
bound
mov
stos
lds
loop
add
stos
shll
add
inc
stos
ret
vldmxcsr
mov
lret
rorb
stos
nop
aad
aaa
enter
xor
mov
pop
and
add
stos
fiaddl
rolb
fstl
push
stos
inc
mov
stos
andl
dec
add
add
lahf
or
stos
xchg
rolb
popl
stos
jbe
sbb
and
jo
add
sub
shlb
loop
or
or
xlat
sbb
jecxz
add
xchg
nop
add
add
mov
xchg
push
mov
xor
push
dec
and
nop
xor
push
dec
addl
add
mov
cltd
shll
add
sub
mov
mov
fcoms
lock
push
sbb
faddl
sbb
hlt
and
push
add
push
sbb
add
pop
mov
and
mov
add
lret
sbb
add
add
push
lcall
fneni(8087
mov
pop
add
xchg
add
pop
xchg
jnp
mov
out
mov
push
add
and
iret
push
fwait
add
push
lcall
rclb
aaa
pop
inc
bound
push
adc
add
lcall
or
rsqrtps
add
fcompl
pop
ss
in
lods
sub
mov
stos
repnz
add
lret
push
pop
pop
add
push
aaa
or
pop
aas
and
push
lcall
push
rorl
rolb
stos
stc
rolb
mov
add
add
imul
push
xchg
das
push
lcall
mov
fistl
push
mov
push
mov
daa
pop
and
roll
pop
in
lods
shl
adc
sahf
pop
pop
and
je
mov
stos
mov
push
es
push
lods
sbbl
add
push
rclb
sbb
sbb
ss
mov
adc
pop
stos
in
xor
add
hlt
pop
jecxz
and
and
daa
test
push
fsub
test
add
lret
pop
bound
dec
add
stos
into
push
cwtl
fsubp
pop
add
cwtl
in
push
add
mov
in
add
out
xor
pop
sub
add
add
lcall
pop
stos
ljmp
push
bound
fildl
rcrb
add
sahf
push
xchg
and
adc
sbb
sbb
inc
add
fs
sbb
inc
ss
or
pop
ret
add
pop
add
or
push
lcall
rcrb
add
inc
in
lods
mov
faddl
adc
out
and
stos
clc
in
add
push
lcall
dec
add
aaa
sbb
fstl
ljmp
sbb
and
lods
rcll
ficoml
hlt
sbb
iret
stos
iret
pop
and
fisubrs
insb
out
or
stos
add
shrl
and
stos
incl
xor
or
add
shrl
stos
fildl
adc
in
or
add
mov
add
push
sbb
hlt
push
loop
faddl
add
mov
rolb
faddl
push
in
adc
sbb
pop
mov
fiadds
add
imul
das
stos
std
in
pop
stos
add
sbb
or
flds
or
ficoms
orb
lcall
mov
and
push
add
add
push
adc
push
orb
inc
push
bound
add
aaa
mov
lcall
adc
cmp
push
add
and
shlb
cmp
add
addb
push
stos
enter
or
roll
add
sbb
mov
stos
fcoml
fsubrp
add
rcll
stos
test
pop
add
pop
stos
clc
push
xchg
push
in
or
xchg
andb
push
sbb
sbb
lea
add
rcrb
fwait
adcl
cltd
ret
faddl
add
push
sbbb
add
add
and
daa
test
pop
mov
addb
cmc
pop
loopne
add
ljmp
int
stos
ret
stos
push
pop
mov
sbb
lret
xor
add
stos
mov
add
add
repz
cmp
add
add
shl
lcall
lret
outsb
subb
push
stos
lcall
adc
rclb
add
xchg
xlat
add
push
aad
xchg
daa
inc
addb
xchg
push
inc
add
ss
rolb
and
ret
out
add
daa
adc
sbb
pop
pop
xlat
adc
add
lret
leave
lahf
add
out
sarb
sbb
inc
or
ja
add
and
bound
stos
fucomi
add
xor
and
hlt
sbb
and
mov
add
push
xchg
and
push
mov
add
add
xor
mov
xchg
sbb
fildl
pop
pop
stos
aam
and
lret
or
sbb
add
aad
add
add
add
add
aad
add
add
loopne
fiadds
in
and
mov
add
add
aas
and
pop
fstps
ljmp
cmp
imul
add
inc
add
add
addl
add
clc
adc
add
push
pop
das
sub
and
sbb
mov
add
sbb
and
lret
push
pop
add
and
aaa
jo
fiadds
push
add
sub
and
lcall
push
add
and
and
sub
adc
add
and
push
pop
aaa
add
push
add
push
sbb
rorl
loopne
and
xchg
mov
addl
aaa
mov
mov
stos
xlat
and
and
mov
add
bound
and
pop
xchg
add
and
xor
in
pop
and
roll
pop
add
mov
fiadds
sbb
push
xor
rcr
add
bound
and
inc
loopne
push
orb
add
push
sbb
or
add
pop
pop
sub
adc
pop
adcl
mov
sub
dec
pusha
sub
add
cmpb
lcall
sub
add
int3
lahf
add
lcall
shlb
out
pop
mov
add
pop
sub
mov
loopne
add
loopne
xorb
push
mov
and
adc
push
lcall
add
fcoml
cmpb
stos
or
lret
or
in
and
mov
inc
mov
popa
loope
mov
mov
and
movl
add
sbb
cmp
mov
mov
push
sbb
and
mov
push
adc
add
sub
lcall
cmp
xor
sub
and
or
dec
push
and
push
sbb
mov
add
mov
sub
icebp
push
sbb
add
pop
aad
cwtl
inc
jmp
test
addr16
push
add
sbb
ds
insl
inc
push
scas
jb
test
pop
addr16
and
scas
add
lds
jb
cmp
out
dec
insl
popf
loop
pop
add
outsb
test
add
cwtl
xlat
add
ljmp
add
mov
add
in
sahf
mov
inc
cmpsl
addr16
and
sub
cmpsl
mov
add
data16
add
add
cmpsb
jecxz
pop
in
ljmp
ret
or
loop
add
pop
adc
cmpsb
loop
add
jge
sub
dec
mov
sub
push
dec
outsl
cmpb
rolb
arpl
cmp
out
stos
pusha
pop
mov
push
mov
add
push
fidivrl
and
push
add
dec
into
sti
add
pop
xor
cmp
mov
fwait
sti
add
mov
fstpl
add
add
push
addl
push
stos
sti
sti
es
mov
mov
add
and
fwait
sti
add
add
add
shll
push
daa
push
mov
and
ret
mov
cmp
sbb
ret
sti
iret
aaa
push
fsubl
push
add
and
and
rolb
adc
add
adc
fisubl
and
add
add
arpl
dec
loopne
aaa
sub
mov
pop
pop
mov
in
add
pop
lahf
mov
push
sub
push
or
push
nop
mov
dec
je
mov
inc
add
popl
push
pop
sti
jnp
add
add
add
mov
lret
add
shrb
rorb
mov
or
sbb
mov
dec
and
add
aaa
movsl
inc
add
xor
into
adc
incl
adc
add
and
add
popa
and
or
add
xor
mov
xlat
sarb
fldl
add
in
add
sub
mov
cli
fiadds
in
stos
cmc
sub
lahf
inc
adc
iret
stos
into
push
xlat
add
lods
aad
sub
sbb
shrl
add
xchg
push
add
and
in
pop
xor
jb
pop
loope
lret
push
mov
test
add
roll
and
shl
adc
push
add
daa
and
and
adc
divl
mov
aaa
repnz
add
add
xor
imul
fldenv
add
add
add
aaa
js
and
push
xchg
pop
jb
mov
out
stos
fsubr
pop
ss
sbb
mov
push
sbb
push
xchg
shlb
xchg
shll
inc
pop
or
sbb
add
lea
and
aaa
popa
nop
rsqrtps
inc
add
dec
add
jecxz
aaa
addb
push
lcall
push
pop
pusha
adc
mov
push
pop
and
add
and
or
fstl
push
pop
adc
add
or
push
or
and
push
sbb
push
dec
pop
jo
jo
enter
and
mov
push
add
pshufw
add
jbe
nop
push
addl
add
add
aas
nop
adc
and
adc
fdivp
insl
fildl
add
in
stos
add
es
stos
add
shrb
fstpl
add
stos
fidivl
jl
add
mov
xlat
faddl
sub
cs
call
xchg
add
add
push
xor
sub
inc
add
aam
add
inc
sbb
mov
pop
pop
ficoms
sbbl
mov
lcall
sbb
lret
rcrb
in
nop
test
jbe
in
push
add
sbb
not
push
or
subl
push
add
pop
pop
fnstsw
stos
cmp
pop
mov
rolb
movups
cs
xor
daa
mov
inc
sti
enter
iret
andb
sarb
bound
adc
mov
in
and
or
xor
lret
cwtl
mov
stos
sub
fwait
sti
rcr
ss
add
sbb
sbb
cmp
xor
or
aaa
int
push
mov
mov
push
ljmp
icebp
add
push
jl
mov
push
xor
xchg
mov
mov
fwait
sti
push
push
pop
rolb
add
cmp
jge
inc
mov
rclb
dec
test
jnp
and
stos
lret
lahf
add
add
lea
outsl
sti
push
rolb
addr16
add
jle
sti
cmpsl
pusha
or
inc
pusha
xor
push
push
add
push
add
mov
add
push
push
add
movsl
inc
dec
iret
xor
loopne
inc
dec
movl
push
sbb
ret
popl
mov
aaa
and
fidivl
mov
aaa
pushl
add
and
jg
andnps
add
push
sbb
push
mov
dec
pop
add
sub
inc
mov
stos
mov
and
pusha
add
push
lcall
lcall
pop
sub
pop
sub
rcrb
jo
pop
loope
rolb
pop
loope
pop
mov
xchg
add
add
sbb
pop
pop
jae
and
rsm
pop
mov
andps
addr16
ss
mov
xor
dec
pop
inc
add
push
xchg
pusha
adc
push
ret
push
lcall
pop
aaa
popf
mov
push
lcall
fistl
and
add
cmpsl
in
stos
add
xchg
push
lcall
sbb
mov
add
xchg
mov
sub
sbbl
sbb
pushf
push
adc
stos
inc
mov
orl
add
addb
sbb
mov
sub
add
push
dec
adc
and
rcll
rcrl
add
pushf
nop
stos
add
pop
and
and
adc
mov
fstl
mov
xor
mov
cld
mov
push
mov
xor
rclb
push
add
into
pop
push
fstl
aaa
sbbb
aam
ss
xchg
adc
and
inc
dec
lock
push
push
cmp
add
stos
fisttpl
nop
dec
xlat
pop
rcrb
inc
mov
pop
pop
cmpsl
pusha
lcall
rcll
stos
add
mov
sub
add
pop
ds
push
pop
inc
add
sub
subb
mov
addl
rcrl
bound
nop
cmpsb
lret
adc
loope
mov
pop
lock
and
ret
add
mov
add
mov
pop
shlb
mov
mov
add
add
adc
and
out
inc
iret
stos
leave
mov
pusha
cmp
push
pusha
sub
and
add
insb
fiadds
pop
and
stos
xlat
rolb
add
mov
xor
add
sbb
rorl
imul
les
fldenv
add
pop
mov
pop
daa
and
add
add
add
daa
add
into
lahf
add
pop
pop
stos
mov
mov
push
lcall
sbb
in
mov
lret
lahf
add
add
sbb
xlat
add
and
addr16
jp
push
lcall
leave
sub
roll
xor
add
add
mov
add
add
push
das
add
sbb
sbb
push
das
push
flds
xorb
add
mov
add
xlat
pop
sub
add
dec
sbbl
dec
add
add
daa
add
iret
add
xor
mov
push
mov
add
pop
and
stos
add
push
lcall
ficompl
and
sbb
mov
push
lcall
adc
push
je
and
adc
add
stos
sti
lret
cmp
andb
xor
fildl
add
das
and
and
scas
and
outsl
addb
add
adc
add
lahf
add
fs
fiadds
and
add
mov
sbb
add
iret
stos
loop
stos
rcll
push
inc
andl
pushl
fidivs
mov
sub
adcb
or
imul
cltd
pop
and
pop
orb
inc
subb
andb
orb
sub
fildl
sub
or
sbb
add
roll
sub
shlb
sub
sub
rcrw
inc
stos
rolb
pop
and
fisttpl
add
sub
js
mov
stos
shrb
fnstsw
rcrl
stos
add
mov
stos
faddl
outsl
ficomps
add
mov
add
sub
or
pop
cli
add
mov
orb
sti
cmpl
mov
rolb
mov
xor
push
mov
dec
sbb
lea
push
sbb
inc
xchg
frstor
inc
push
sbbb
add
popw
ja
inc
add
push
rcrb
rcrb
nop
sbb
pop
push
rolb
push
inc
add
add
sbb
add
add
sbb
sbb
mov
fiaddl
dec
iret
add
pop
dec
inc
add
fisttpll
fiadds
add
inc
push
lcall
push
add
mov
aaa
push
add
push
or
add
andb
lahf
add
xchg
sub
lds
and
aaa
add
and
and
stos
frstor
nop
inc
inc
into
test
or
lret
or
stos
sbb
ffree
dec
mov
inc
cmpl
add
cmp
mov
and
or
xlat
add
rorl
cmpb
or
das
pop
sub
shrb
pop
daa
subl
stos
fidivrl
push
daa
in
pop
mov
lret
dec
shlb
add
xor
ja
stos
add
mov
mov
sbb
xor
insb
ficomps
addb
pop
cmp
or
xchg
fwait
cmp
push
push
addr16
pusha
dec
or
xor
cmp
pop
cmpsl
push
pop
sti
ljmp
roll
and
andl
aaa
or
sub
and
ret
add
pop
rolb
ret
pop
iret
stos
aam
xchg
sti
dec
xlat
aaa
push
pusha
sub
and
and
add
subl
loopne
jbe
add
mov
add
loop
addl
add
mov
rorb
mov
mov
sti
aaa
icebp
and
rcrb
push
loopne
add
popl
and
sbbb
fwait
sti
shll
pop
and
dec
push
loop
inc
push
in
add
out
stos
lret
dec
stos
mov
frstor
rorb
or
and
rcrb
inc
push
fwait
sti
inc
pop
aas
iret
stos
flds
in
stos
fwait
and
fldt
xlat
test
sti
lret
and
outsl
mov
add
in
xlat
lods
add
xor
and
sti
ret
push
adc
mov
pusha
sub
stos
pop
mov
and
stos
jmp
or
rorb
stos
bound
lds
rorl
test
mov
addb
add
and
push
inc
sbb
push
push
sti
scas
pusha
sbb
pop
stos
adc
and
xlat
aaa
sub
and
and
mov
lret
rcrb
mov
and
lret
addb
fs
lcall
xor
fldl
pusha
addb
push
loop
inc
and
das
and
push
xchg
push
xlat
and
andb
scas
add
movsb
in
mov
mov
in
stos
aad
mov
cs
cmc
mov
pop
sub
push
lret
jmp
and
adc
lcall
and
dec
push
fcoml
faddl
adc
adc
add
sub
xlat
lea
and
fsubrl
add
mov
pop
and
addl
ret
push
mov
push
mov
ret
mov
pusha
push
pusha
and
add
and
roll
ds
pop
rcrb
addl
out
mov
and
pop
and
xchg
inc
test
mov
stos
jmp
push
add
stos
fildl
cs
out
popa
add
bound
mov
mov
xchg
xor
add
xor
loopne
lcall
test
or
add
sti
push
mov
xor
add
fiaddl
aad
or
mov
adcl
push
popa
pop
pop
add
lahf
xor
and
pop
lock
sbb
inc
mov
add
xlat
or
aaa
xor
add
data16
mov
out
or
lcall
lcall
adc
pusha
add
pop
sub
cld
xchg
add
test
lcall
shl
and
push
lcall
add
and
xchg
and
stos
mov
mov
inc
push
ret
notl
add
inc
aaa
mov
sbbb
loopne
mov
pusha
add
push
sbb
aaa
sbb
and
mov
push
xor
addl
in
rcll
lcall
push
add
test
and
and
and
inc
mov
call
rolb
push
add
push
in
in
sti
shrl
stos
int
pop
sbb
popa
lods
aaa
in
pop
addb
add
fcompl
xor
inc
in
mov
and
pop
add
add
lret
sub
adc
lahf
pop
sbb
xor
sbb
sahf
mov
push
addl
into
xchg
pusha
es
mov
xchg
or
fisubl
or
push
sub
push
sbb
mov
pusha
setle
push
pop
jecxz
push
push
add
daa
sub
and
adc
add
stos
sub
lds
add
xchg
and
popa
add
addl
push
mov
mov
add
sbbb
rcrb
xchg
add
nop
add
adc
adc
cmp
xlat
aaa
and
js
add
lcall
rcll
flds
fnstenv
adc
push
cmpsl
fistl
outsl
fildl
add
add
rcll
xlat
test
rcrb
out
iret
lods
fcmovnbe
or
iret
pusha
shrb
fmull
sbb
add
in
test
mov
roll
mov
jp
or
add
xlat
lock
dec
loopne
mov
iret
cmp
pop
xor
mov
add
push
lods
stos
add
fiadds
stos
mov
or
xor
jo
or
orb
mov
shrb
push
popa
add
out
add
or
or
rcll
mov
adc
stos
ret
xlat
aaa
insb
subb
sbb
xor
add
addl
pop
add
push
pushf
mov
add
shll
movsb
jo
add
stos
ret
pusha
add
and
mov
add
aaa
push
push
add
add
andl
mov
xor
xlat
pop
and
or
and
mov
push
shll
shll
sbb
adc
aas
xor
adc
jo
call
rolb
jo
pusha
add
xorl
push
add
lcall
sbb
aaa
and
popl
or
in
iret
add
lcall
push
stos
pushl
stos
addl
pushf
hlt
stos
ljmp
lcall
push
mov
push
cmpsl
cli
aaa
inc
add
ret
jo
aad
add
nop
or
mov
adc
and
adc
adcl
dec
stos
or
add
or
fwait
or
fwait
jmp
xchg
or
ja
or
cld
loopne
stos
shll
push
add
add
add
mov
or
rorb
insl
iret
loopne
mov
ret
xorb
popa
xchg
mov
xor
rcrl
leave
inc
add
sbb
add
pushf
add
xor
ret
add
fisubl
add
lret
and
das
push
subb
and
adc
push
add
roll
and
pop
push
lcall
and
stos
aam
add
and
insb
ficoms
mov
ret
xor
mov
or
mov
push
xorb
or
or
aaa
in
or
stos
rorl
adc
add
stos
inc
mov
stos
mov
pusha
orb
leave
lahf
ror
shll
movsl
or
nop
sub
pop
xor
nop
inc
push
push
das
in
add
in
stos
mov
xchg
addb
mov
insb
and
add
stos
xlat
mov
jb
sbb
stos
mov
add
mov
aaa
mov
and
mov
fisubl
aaa
adcl
mov
addl
add
ljmp
mov
outsl
fiadds
xorl
nop
or
adc
xlat
inc
inc
add
rcl
push
jo
and
stos
pushf
and
call
inc
outsb
icebp
add
lret
push
stos
roll
jo
mov
test
push
popl
aad
outsb
into
lock
add
aaa
mov
and
cmpl
out
andb
push
stos
dec
addr16
mov
aaa
in
jb
sbb
jp
lcall
mov
push
mov
jle
cmpb
jae
or
mov
stos
and
or
mov
fiadds
add
sbb
sbb
push
lcall
add
pop
in
sub
add
stos
mov
test
in
stos
lods
mov
sahf
lahf
add
aaa
mov
fiadds
and
add
into
lahf
add
xor
and
and
stos
xlat
and
add
push
lcall
mov
mov
pop
stos
jecxz
add
stos
daa
add
push
rcr
or
add
ficompl
subb
xor
add
ds
pop
sbb
in
add
lods
push
and
das
add
add
sbb
add
shll
mov
sub
jge
in
cmp
mov
add
inc
into
ret
lahf
cmpl
sub
cmpsl
sub
add
inc
repnz
add
ret
mov
addr16
jb
cmp
out
inc
rcrl
les
xorl
scas
add
aaa
xchg
xchg
add
or
jecxz
and
mov
sub
cmpsb
or
das
add
cmpsl
sub
pop
cwtl
cmp
cli
add
fidivrs
and
out
testb
inc
jmp
jecxz
sub
mov
shrb
cwtl
add
jmp
sub
out
imul
dec
das
out
add
sub
ljmp
sub
ljmp
cltd
cmpsb
addr16
in
testb
xorb
sub
aaa
sub
addr16
adc
jnp
pop
adc
cmp
xor
ljmp
jns
sbb
sub
out
movsb
add
jnp
mov
cwtl
cmp
push
mov
ficompl
stos
std
cmpl
into
adc
push
das
mov
ret
or
jae
sarl
pop
cmpb
ds
data16
cmpb
ret
fst
add
sub
popf
jne
in
add
jbe
mov
xor
mov
inc
jne
stos
fistpl
lahf
add
push
push
add
push
add
ja
add
add
aaa
add
pop
adcl
rorl
add
in
pop
push
sbb
mov
jmp
and
adc
push
aaa
stc
add
fstpl
nop
add
ret
or
add
add
sbb
xor
add
jnp
add
xchg
rsm
out
mov
mov
pop
cwtl
inc
jmp
shll
jmp
mov
imul
std
iret
mov
out
mov
test
outsl
add
pop
mov
adc
sbb
sub
cmpsl
and
add
lahf
add
movsb
int
pop
cwtl
dec
cmc
sub
out
add
jae
cmpsb
in
add
jno
add
test
int3
add
sti
pop
adc
mov
cmpsb
and
rcrl
jb
lock
cmp
xchg
sub
adc
sbb
std
add
or
outsb
and
add
cwtl
mov
add
mov
testl
imul
cmpb
dec
pop
pop
fs
mov
add
mov
mov
add
push
stos
adc
faddl
push
andb
call
sbb
loop
add
sbb
pop
jg
add
add
fildl
or
jae
sbb
aaa
add
lret
mov
lods
push
xchg
daa
add
and
mov
push
stos
daa
and
pop
daa
fiadds
add
inc
and
and
mov
mov
lret
add
cltd
push
pop
or
add
pop
push
lcall
out
mov
or
pop
lcall
add
add
pop
pushf
add
sbb
lcall
out
and
fsubr
pop
ss
sbb
xorb
jmp
push
lcall
add
mov
mov
push
andb
lret
loopne
loopne
add
aam
xor
pop
cmp
daa
rolb
adc
add
sub
subb
rcrb
inc
add
enter
outsl
and
roll
adc
pop
outsb
dec
inc
add
andl
pop
and
scas
iret
aaa
mov
cwtl
pop
stos
mov
sbb
sbb
add
or
loope
bound
xchg
push
sbb
or
bound
bound
popf
mov
mov
push
pop
dec
shlb
mov
and
lret
js
add
pop
cmc
mov
add
add
mov
add
and
and
and
xlat
inc
adc
rcrb
and
add
enter
and
xor
push
sub
mov
mov
mov
pop
mov
out
out
test
aaa
push
jns
ret
push
mov
push
mov
sub
add
popa
andnps
adc
mov
jnp
push
push
cmovo
mov
cwtl
bound
daa
mov
jo
inc
or
mov
or
push
push
add
sub
and
add
or
ljmp
shrb
ficomps
dec
pusha
inc
jle
mov
mov
rolb
add
aaa
pop
cmc
rol
mov
xor
orl
mov
test
bound
add
xchg
shlb
or
rolb
lret
adc
sub
pop
rcll
adc
inc
mov
or
add
cmp
cld
sub
addb
push
mov
loopne
pusha
stos
push
sub
loope
add
cltd
lret
add
mov
aaa
rolb
add
sbb
sahf
sbb
push
adc
pusha
xchg
outsl
fiadds
mov
and
sbb
cltd
iret
push
xlat
loopne
push
inc
xchg
sti
xlat
push
push
shll
add
add
push
inc
loop
mov
iret
loopne
bound
sti
and
mov
push
rorl
fldl
add
ljmp
inc
rcrb
loopne
push
and
sbbb
xor
mov
andps
pop
push
xchg
push
orl
or
xchg
and
loope
shrl
addr16
or
rolb
adc
mov
add
hlt
popa
add
push
or
inc
popa
inc
fisubs
xor
mov
add
shrb
daa
pop
daa
add
mov
xchg
stos
add
xor
lcall
stos
stc
add
out
xor
add
aaa
xor
pop
aaa
roll
stos
rcll
add
sub
mov
xor
jb
aaa
xor
jo
inc
xor
adc
push
xorb
or
mov
xchg
mov
jl
add
loop
loopne
lahf
stos
movl
push
inc
add
add
cmp
add
add
adc
hlt
inc
add
and
lock
iret
xor
cmc
sub
and
bnd
add
mov
stos
xchg
mov
xchg
push
stos
and
xor
out
repnz
push
stos
incl
push
rcrb
adc
adc
lcall
xor
repnz
xor
addb
int
add
xor
addb
xor
add
addb
push
add
and
xchg
sub
daa
push
lcall
add
push
xchg
sub
xchg
shrl
hlt
push
mov
aaa
add
test
pop
add
shlb
adc
or
nop
in
pop
push
pop
roll
push
pop
popa
add
lcall
push
xchg
rcll
add
popa
leave
add
addb
pop
mov
pop
and
jo
stos
adc
pop
and
jno
xlat
pop
and
jo
stos
mov
test
ret
popa
adc
in
scas
nop
or
stos
loopne
push
add
mov
shrb
mov
fstpl
aas
iret
aam
mov
mov
mov
pop
movb
nop
add
sub
pop
rclb
shrb
or
add
sub
add
jo
xlat
push
andb
call
add
or
cld
mov
jge
push
adc
mov
stos
ret
shrb
push
add
add
inc
aaa
mov
rclb
adc
movl
push
lcall
push
into
pusha
push
shlb
rolb
and
pop
lock
add
stos
test
and
add
pop
fimuls
test
loop
sbb
adc
stos
jmp
lock
mov
stos
mul
jp
add
addb
xlat
add
adc
add
pop
pop
lock
aaa
xchg
push
dec
push
lcall
stos
decl
add
mov
mov
inc
xor
xor
jb
and
or
add
mov
push
or
int
nop
add
inc
es
pop
rcrb
jo
mov
xor
xchg
adc
inc
test
or
or
and
add
xor
lock
sub
lahf
add
add
fldl
stos
inc
addr16
jo
xor
pop
and
stos
adc
rclb
rolb
pop
and
add
stos
rcrl
rcrb
and
mov
faddl
mov
add
mov
adc
data16
add
xchg
add
add
sti
lock
add
pop
call
adc
fisubrs
pop
les
cli
loopne
add
out
push
add
add
lret
and
push
push
mov
mov
xor
addb
mov
ss
push
rorb
adc
mov
and
mov
roll
add
sub
push
test
or
pushf
and
adc
and
fldt
mov
and
pop
xor
push
pop
popa
dec
push
lcall
push
mov
mov
pop
push
and
addl
cmp
adcb
popa
dec
loop
iret
push
adcb
in
rcrb
pusha
das
add
das
pop
mov
sbb
and
inc
add
addb
xor
mov
sub
add
add
pop
test
aaa
xlat
mov
iret
mov
fnsave
add
and
push
push
mov
daa
and
pop
mov
xchg
adc
xchg
fiadds
xchg
aas
daa
pop
pop
add
push
mov
test
jmp
das
jo
addr16
sti
data16
add
add
push
in
push
stos
enter
pop
stos
iret
pop
adc
and
ficoml
and
pop
and
add
stos
cld
in
mov
add
inc
sub
sub
push
fbstp
inc
nop
test
add
daa
shlb
xor
push
andb
jo
fcomi
cmp
ret
and
sub
cmp
stos
rcl
cmp
leave
pop
mov
sub
rcl
xor
push
mov
add
and
rcrb
loopne
push
lcall
ja
push
and
lret
jo
xchg
push
ljmp
and
cmp
aam
lock
fisubrs
or
adc
add
hlt
lcall
shl
lcall
add
daa
xor
push
mov
das
add
movsl
sarl
loope
xor
adc
ret
mov
sbb
stos
daa
icebp
pop
lret
push
pop
lock
andl
rclb
dec
bound
lahf
stos
popa
add
adc
xlat
insl
add
and
mov
add
or
rorl
iret
bound
imul
add
add
or
mov
mov
aaa
mov
or
inc
and
add
lcall
xchg
clc
add
pop
test
sub
mov
ds
aam
mov
and
push
inc
iret
add
add
rorl
adc
lds
add
and
push
push
sbb
and
pop
push
pop
adc
inc
adc
lock
fwait
sti
and
gs
add
push
xlat
aad
popa
add
and
push
aam
pop
pusha
xor
and
rol
and
icebp
fs
mov
cli
jle
pop
nop
xchg
imul
push
mov
std
mov
or
lahf
add
add
das
ficomps
mov
add
add
stos
jecxz
cmp
add
sub
add
mov
add
popl
pushf
add
aaa
shrb
and
addb
and
dec
lahf
add
mov
add
xchg
daa
stos
fimull
or
pop
xor
add
cli
pop
pop
mov
sahf
aaa
gs
add
mov
pop
rcr
add
stos
mov
in
pop
popl
and
in
pop
sbbl
int
add
in
pop
sbb
cli
add
inc
push
test
mov
push
popf
and
push
stc
push
outsb
xlat
add
sub
decl
aaa
pop
push
pop
stos
lret
bound
add
push
sbb
cli
jo
fildl
inc
stos
out
add
stos
in
add
icebp
inc
test
mov
pop
ret
and
pop
push
pop
add
lret
test
fildl
mov
sti
xlat
mov
stos
sti
or
subb
inc
and
and
subl
stos
xchg
inc
mov
push
stos
subb
add
and
and
subb
xchg
test
sbbb
add
rolb
adc
jl
add
aaa
xchg
mov
incb
stos
and
fcompl
lret
push
xchg
faddp
rolb
push
pop
stos
cld
add
daa
lods
les
push
scas
sbb
push
stos
cmp
scas
xchg
push
testl
in
sub
and
xor
in
pop
lahf
sbb
test
pop
aaa
repnz
xchg
sbb
mov
lcall
xlat
pop
mov
inc
jecxz
arpl
jnp
add
rolb
inc
aad
addb
push
or
add
pop
push
add
adc
push
push
adc
push
ret
fisubrs
pop
les
cld
add
mov
jmp
sub
mov
roll
aas
pop
in
stos
mov
fistpl
lods
cwtl
push
movsl
add
push
xor
iret
pop
mov
mov
in
lods
add
shrb
mov
mov
cli
pop
cmp
add
int3
fmull
in
xlat
add
leave
shrb
in
test
add
mul
push
in
add
push
in
mov
cmp
faddl
xor
mov
inc
xor
mov
add
xor
addb
push
cltd
jecxz
mov
cmpb
lahf
mov
out
add
add
and
repz
aas
in
subb
lahf
sarb
push
xchg
add
adc
out
add
aaa
add
add
lds
and
orb
push
lcall
loopne
and
cmpb
ror
add
add
push
ret
or
fwait
inc
lds
aas
inc
sub
aas
dec
pusha
je
fiadds
andb
subl
add
cwtl
jecxz
sbb
add
out
shlb
add
stos
pop
pop
add
add
fsubl
and
and
add
fists
faddl
sbb
cmp
add
addb
cmpsb
fdivr
and
adc
add
add
pop
fisttpll
roll
add
push
xchg
cmp
push
ficomps
pop
lcall
sbb
xor
movsl
xchg
sub
mov
adc
mov
rclb
sub
push
dec
xlat
add
and
loopne
lret
test
aad
adc
fld
sub
in
jecxz
adcl
add
aas
out
stos
movl
iret
stos
push
add
lcall
pop
pop
sub
push
loopne
add
adc
or
aaa
push
and
sbb
mov
iret
and
xor
bound
faddl
add
and
pusha
xchg
inc
pop
pop
rolb
and
xlat
addb
xor
and
and
add
mov
add
lret
add
jns
and
mov
push
and
and
rolb
mov
roll
psubusb
add
out
inc
or
cmp
add
add
sbb
pop
push
or
add
add
push
rcll
pop
pusha
add
lret
adc
loopne
popa
mov
add
xor
push
and
les
cmp
loop
cli
push
push
add
aaa
cmpsb
inc
push
ret
adc
adc
popa
xchg
leave
sbb
ljmp
shll
pop
in
pop
out
fwait
sti
xlat
stos
rol
or
and
aaa
mov
pop
mov
add
push
andl
xor
cmpb
mov
pop
loopne
mov
movsl
or
pop
in
addb
cwtl
fnclex
sbb
add
rcrb
shlb
and
pop
loop
push
add
pop
mov
add
dec
mov
inc
push
stos
sti
sti
addr16
mov
add
push
sbb
add
push
fwait
sti
orl
aaa
mov
push
mov
mov
jle
inc
adc
push
fstl
lret
pusha
xor
pushf
add
mov
push
arpl
push
popa
adc
out
or
stos
sti
ret
pop
sbb
push
sbb
aaa
punpcklbw
add
mov
sbb
xlat
add
movsb
adc
es
loop
inc
mov
xlat
les
cmpsl
and
ja
mov
rorb
add
adc
push
shlb
cwtl
sar
pusha
arpl
and
loop
mov
add
shlb
or
stos
mov
add
mov
int3
iret
ljmp
adc
fwait
iret
rorb
aaa
add
lret
loopne
and
push
cmp
xor
jae
loopne
push
daa
push
mov
mov
push
sbb
shll
inc
das
pop
mov
stos
aad
pop
and
stos
ficompl
and
lods
add
push
pop
add
stos
mov
inc
ret
fldcw
add
push
and
enter
or
sbb
daa
xor
mov
xchg
sbb
repnz
and
inc
or
adc
rorb
push
pop
push
add
and
fnstenv
nop
add
nop
push
adc
mov
and
out
test
and
and
rcrb
cwtl
in
lods
inc
xor
test
add
mov
add
in
xor
shrl
push
and
add
and
sub
add
jo
or
int
add
add
add
xor
push
shll
roll
pushf
lcall
add
push
adc
fstpl
adc
and
addl
stos
cltd
add
test
push
rcll
and
add
cmp
jo
add
and
jp
pop
lret
push
push
rolb
push
sbb
fistl
dec
fdivs
pusha
aad
add
in
add
add
in
sub
adc
div
sbb
lods
add
mov
xchg
mov
and
mov
push
jecxz
adc
pop
sbb
lahf
in
lods
or
addl
push
xchg
sahf
pop
es
stos
lret
pop
aad
xlat
pop
fldt
add
out
push
add
fstl
or
imul
aaa
push
mov
add
push
push
and
shlb
shlb
shrb
or
imul
imul
shlb
rolb
jo
push
xchg
daa
shrb
pusha
in
rcrb
mov
mov
js
lret
pop
mov
push
pop
mov
push
add
fcompl
adc
xchg
shrb
nop
sahf
ficomps
fisubs
in
iret
lods
add
push
cwtl
sahf
fcoml
stos
int3
nop
jl
sbb
add
push
int3
push
into
sahf
pushf
in
pop
lods
sub
jecxz
outsl
add
fldt
push
xchg
daa
fcoml
or
pop
mov
pop
addl
pusha
inc
in
or
in
pop
push
mov
push
mov
das
push
mov
push
mov
lret
rclb
mov
push
mov
push
xchg
xor
iret
push
mov
in
rclb
jo
add
mov
push
roll
into
push
xchg
and
xchg
rolb
loope
add
and
lcall
das
in
lret
add
push
mov
sub
out
add
stos
cltd
push
or
mov
add
cwtl
in
add
mov
stos
flds
push
mov
in
or
mov
mov
xlat
in
aaa
mov
fistpl
add
sbb
mov
lret
mov
cmp
hlt
xchg
add
hlt
setle
push
mov
hlt
mov
push
addb
hlt
das
shlb
popf
push
add
in
mov
push
xchg
aas
xor
push
add
pop
mov
nop
fcoml
shlb
lret
mov
or
imul
stos
shrl
add
call
pop
adc
fcmovnbe
pop
mov
push
xchg
aas
add
push
rolb
mov
aad
and
pop
push
xchg
call
add
push
orb
in
mov
push
push
push
or
mov
xor
add
add
pop
mov
lret
roll
stos
xlat
push
add
add
push
ret
in
sahf
in
or
cmp
adc
lcall
xchg
sub
xchg
bt
and
add
add
mov
or
mov
rclb
adc
roll
xlat
shrl
jno
sub
xchg
push
xchg
add
push
xchg
ret
mov
push
xchg
lret
push
and
pop
fsubl
and
add
lcall
push
mov
in
or
push
and
hlt
pop
mov
xchg
adc
adc
pop
xor
in
rclb
addl
pshufw
iret
xchg
push
xchg
sub
xchg
push
inc
sbb
adc
xchg
add
push
addb
shrb
aaa
shrb
push
xor
and
inc
dec
shlb
push
xchg
rcll
das
push
mov
rcrl
push
stos
arpl
addb
lcall
add
xor
or
sbb
add
lea
add
stos
ficoml
push
mov
push
add
in
and
cmp
adc
add
add
enter
stos
lret
lcall
inc
pop
lahf
pop
mov
mov
sbb
add
lcall
or
enter
enter
and
and
push
mov
add
stos
rcrl
rcr
push
fcmovnbe
adc
ficoms
lcall
jno
add
pop
pop
rcl
pop
mov
fsubrs
add
lock
add
fistl
push
fcoms
adc
and
push
inc
mov
xor
shll
and
add
and
shll
stos
sbb
movsb
sub
cwtl
das
movsb
aaa
jno
paddusb
orb
add
rcll
and
adc
arpl
fcomp
nop
adc
and
lcall
lcall
xorb
and
and
sub
lcall
pop
mov
iret
in
adc
rclb
adc
pop
lcall
mov
xor
rolb
push
nop
xor
test
push
ror
xchg
pop
repz
shrb
sarl
aaa
loop
js
sbb
and
das
bound
loopne
and
cmp
inc
xor
push
push
xchg
pop
shrb
rcl
mov
addl
jb
cmp
add
push
xchg
and
rolb
xchg
pop
jo
mov
stos
xchg
push
mov
in
iret
mov
add
stos
fld
cmp
les
aas
in
mov
rcrl
add
cmp
ret
fcoml
ficoms
ja
mov
add
and
cmp
push
mov
hlt
mov
aaa
in
pop
out
shlb
push
xchg
cmp
cmp
push
aas
call
cmp
or
cmp
rclb
inc
cmp
mov
push
cmp
and
cmp
cmp
push
lcall
cmp
xchg
and
pusha
cmp
inc
pop
xor
lock
inc
pop
mov
rolb
mov
adc
push
mov
cmpb
int
adc
xchg
addb
xchg
adc
lcall
push
pop
add
add
xchg
aas
fcoml
ficoms
lcall
and
push
lcall
xlat
push
sbb
sbb
xor
mov
push
xor
push
xchg
xlat
add
mov
push
xchg
lret
push
and
fcoml
fsubl
add
add
lcall
push
mov
in
push
rclb
fiadds
add
adcb
push
xchg
pop
xor
add
push
lcall
or
push
add
sbb
add
lcall
add
push
xchg
pop
in
mov
daa
push
lcall
addb
push
push
xlat
mov
add
aaa
xor
shlb
daa
push
xchg
add
push
lcall
pop
mov
add
cmp
add
rcrl
add
push
lcall
sbb
add
sbbl
add
push
mov
add
push
add
aaa
xor
pop
mov
push
jo
mov
orb
enter
cmp
and
fstpl
add
xor
subb
push
lcall
aad
push
mov
xor
addb
add
mov
stos
add
andb
stos
lds
fldl
push
fcmovnbe
shrb
push
aaa
adc
push
fwait
roll
inc
and
push
add
pop
mov
pop
inc
add
add
rcl
pop
mov
add
add
mov
mov
stos
testb
push
lods
lcall
andb
andb
xor
ror
add
stos
rsqrtps
shll
stos
pop
sub
stos
pop
adcb
add
and
das
pop
pop
stos
out
add
add
orb
fcomp
add
push
lcall
faddl
add
pop
sub
sbb
rorb
pop
lcall
pop
mov
iret
in
adc
push
xchg
addb
add
pop
mov
rolb
add
std
rolb
push
sbb
add
add
cwtl
in
pop
adc
jl
mov
sbbb
xor
out
lret
rclb
cmpb
add
cmp
aas
push
xchg
addl
push
pop
addb
push
fldl
aam
xchg
rcrb
mov
add
and
lcall
das
shrb
pop
push
mov
aam
xchg
push
mov
in
iret
mov
add
shll
cwtl
in
add
mov
stos
flds
push
mov
in
adc
inc
xchg
mov
xlat
in
mov
xor
pop
add
iret
push
cmp
fstpl
lret
mov
xor
hlt
add
popf
push
mov
push
mov
hlt
mov
and
shlb
popf
push
stos
add
shlb
in
mov
xor
aaa
xor
add
test
mov
pop
mov
nop
add
mov
push
cmp
push
adc
and
add
stos
les
push
add
call
mov
add
push
xchg
call
add
fistl
and
pop
ds
pop
ret
and
push
add
push
mov
aad
fadd
pop
add
ficomps
inc
push
add
add
mov
sbb
pushf
push
mov
add
fmull
push
mov
inc
push
adcb
xor
rolb
or
mov
inc
pop
and
add
jmp
inc
sahf
in
pop
mov
adc
or
or
rolb
xchg
and
push
pop
inc
cmp
or
subb
addl
pop
addl
adc
push
add
andl
xor
subl
subl
sub
and
aaa
and
pop
xor
loope
aaa
sub
jo
addb
jg
cmpl
das
push
jecxz
add
imul
add
pop
mov
add
stos
ficoml
lcall
pop
mov
mov
lcall
es
inc
and
sbb
pop
add
aas
test
pop
xchg
add
push
add
stos
lcall
rcll
xlat
push
mov
fiadds
add
addb
add
push
fwait
rcr
movsl
fiadds
sbb
pop
mov
add
sbb
xchg
arpl
push
rol
push
push
and
and
add
iret
push
xchg
arpl
mov
push
xchg
and
and
or
sub
shll
sbb
subl
xchg
or
and
sub
subl
frstor
pop
push
rol
mov
sbb
repnz
out
popa
sbbl
loopne
pop
lcall
jmp
inc
adc
in
adc
rcrb
add
mov
lret
fsubrl
add
mov
push
add
in
push
sbb
cmp
imul
out
faddl
in
lret
add
push
mov
add
sahf
fcompl
push
adc
fisubrs
lods
jmp
push
lahf
add
xor
pop
adc
fldl
int3
pop
and
fldt
xchg
loopne
fsubl
cwtl
rcll
shll
and
and
sbb
leave
shrb
add
pop
xor
add
or
pop
add
faddl
add
push
in
rcrb
addb
add
fmull
shrb
push
mov
pop
mov
fmull
inc
addb
push
addb
and
cmovo
sbb
mov
and
mov
stos
das
xor
into
inc
popa
das
cmpb
fldl
add
add
pop
stos
inc
add
pop
shlb
popa
aaa
shlb
sahf
fcoml
and
popa
iret
push
adc
or
inc
or
mov
rcrb
or
inc
or
inc
or
shrb
adc
adc
stos
aas
push
or
in
adcb
imul
sbb
xchg
jo
loopne
pop
xchg
out
push
push
rcrb
push
sbb
push
nop
out
pop
fisubrs
sbb
pop
sarb
sbbl
sbb
pop
push
xchg
pop
add
push
lods
push
nop
lret
hlt
add
fcoml
push
lret
fsubp
iret
sbb
pop
jg
add
inc
pop
lods
xor
fsubrl
add
add
in
add
xor
mov
faddl
sbb
add
das
fsubrl
push
stos
pop
push
and
nop
jb
stos
add
lods
xor
fcoml
adc
ret
add
rcrb
icebp
add
add
xchg
add
lcall
stos
int3
pop
pop
xor
jae
sub
or
adc
add
add
pop
mov
aad
lcall
aad
push
push
fsubrp
push
add
pop
and
add
add
pop
mulb
and
pop
pop
rcrb
rolb
push
lcall
jns
mov
mov
cmp
mov
das
mov
add
push
mov
loope
push
xchg
shrl
aaa
xorb
aaa
cmp
add
xchg
stos
out
stos
incl
xchg
xchg
stos
fstps
add
and
mov
loopne
push
add
aaa
dec
and
negl
mov
inc
add
dec
add
xor
or
pop
pop
stos
rclb
and
cs
xchg
ficoms
mov
xchg
adcb
jo
pusha
cmp
mov
xchg
stos
fidivl
or
pop
mov
push
lcall
push
sbb
push
addb
aaa
inc
out
add
adc
push
add
stos
or
aaa
push
adc
sub
sub
pusha
adc
notl
add
xchg
mov
push
xor
push
aaa
and
ja
fisubrs
fstpt
fwait
sti
xlat
push
xlat
adc
xlat
mov
mov
mov
xlat
and
iret
and
push
push
and
adc
lahf
inc
pusha
jge
sub
pop
mov
push
pop
add
mov
push
cltd
jo
cwtl
loopne
and
and
pushf
loopne
shrb
xchg
xlat
mov
lahf
add
shufps
add
push
cltd
lret
push
lcall
pop
add
mov
iret
pop
inc
sbb
lock
mov
xchg
and
aaa
add
push
cltd
out
shrb
rolb
shll
and
or
and
rolb
cwtl
rcll
cmp
push
cltd
decb
sbb
rcl
rolb
dec
pop
push
cltd
cld
jecxz
stos
add
daa
iret
stos
enter
xlat
add
lcall
sub
add
daa
ljmp
add
mov
push
add
sub
add
push
cltd
sti
inc
push
lcall
adc
hlt
lock
lock
aaa
sbb
add
lock
aaa
imul
add
out
popl
aaa
jo
and
push
cltd
out
add
sahf
shrb
aad
inc
jo
rcrl
cltd
jmp
insb
stos
mov
aaa
cli
mov
pusha
adc
leave
and
lret
push
adc
fistl
add
ficomps
add
gs
into
adc
inc
lret
add
in
or
push
sbb
fildl
and
inc
add
test
stc
nop
push
test
add
add
sbb
jo
mov
lret
rcrb
cli
add
add
iret
aam
push
adc
add
add
push
or
cmp
push
aaa
xlat
push
xlat
aam
push
and
popa
and
aaa
lahf
pusha
cmp
pop
sub
es
xor
fldt
xor
in
inc
pop
loopne
xor
pop
xor
push
adc
mov
mov
add
mov
and
ljmp
add
add
mov
push
mov
divl
jo
add
xchg
pop
mov
mov
add
and
rcrb
nop
add
adc
lcall
adc
sbb
add
cmp
or
aaa
addr16
imul
aas
xlat
dec
mov
fisubl
pusha
cmp
add
mov
inc
add
loope
in
lock
cwtl
push
inc
mov
rcrb
inc
push
push
pop
loop
and
xor
aam
push
lar
adc
or
aas
iret
aam
lgdtl
aas
push
xlat
push
cmp
aam
inc
mov
jmp
or
cmp
add
aaa
rcrl
xchg
rcrb
pusha
add
or
lcall
clts
xlat
nop
add
push
aam
dec
sbb
rorl
flds
add
or
add
push
inc
or
add
mov
push
pop
pop
push
rolb
nop
add
stos
iret
pusha
add
add
pop
add
pop
or
inc
add
and
imul
punpcklbw
mov
addb
xchg
adc
add
push
sbb
adc
ds
push
or
or
outsl
mov
iret
push
pushf
pushl
dec
sub
lcall
inc
add
mov
push
lcall
or
orb
pusha
stos
push
mov
stos
aas
xchg
inc
cld
je
iret
add
push
loop
leave
lahf
add
and
xor
push
xor
pop
mov
adc
pop
push
and
add
rolb
push
and
mov
sub
mov
mov
sbb
and
stos
xor
mov
add
pop
push
lock
mov
mov
adc
in
pop
aaa
xor
pop
and
and
pop
popa
mov
push
lret
loop
clc
add
pop
push
fidivl
mov
aam
and
stos
lret
and
add
adc
lcall
iret
inc
pop
mov
scas
adc
pop
mov
and
xchg
aaa
push
add
fidivrs
test
fadds
test
xor
inc
jo
popa
push
pop
les
push
add
add
add
lahf
in
daa
stos
add
and
push
adcb
stos
xor
sar
lock
inc
xlat
mov
mov
lods
adcb
sub
xchg
addb
dec
bound
rcrb
xor
bound
sti
loopne
lahf
add
ret
push
xor
xor
in
adc
push
fcmovnbe
or
imul
push
xor
mov
pusha
add
arpl
adc
xchg
rcrb
add
add
fildl
add
add
add
add
or
pop
cmpsl
push
pop
fistl
sbb
aaa
sbb
mov
add
push
push
cli
add
and
adcb
iret
aam
add
cmp
and
aam
add
aaa
xlat
push
cmp
push
lcall
pop
add
lods
std
and
push
das
pop
xor
rcrb
add
fsubl
stos
push
sbb
aam
adc
push
mov
push
xlat
mov
pop
mov
lods
add
ss
and
mov
push
and
add
push
faddl
lcall
xlat
mov
in
and
add
xchg
lret
lahf
add
pop
mov
dec
lcall
stos
aad
or
sub
fisubl
add
push
lcall
add
ficomps
fsubp
adc
push
stos
into
in
push
add
xchg
int3
rorb
xchg
pop
cmpb
pop
push
fnsave
or
inc
rcrl
aam
add
fisttpl
pop
cmp
pop
push
xlat
and
sbb
pop
push
iret
add
pop
ds
sti
fucom
pop
stos
iret
in
add
pop
push
rorb
xchg
pop
add
aas
pop
pop
lahf
aam
sub
lcall
pop
inc
adc
xlat
add
addb
iret
adc
pop
mov
js
lcall
and
shrb
lcall
popl
xchg
add
push
or
pop
ss
and
xchg
fcoms
dec
aaa
add
out
and
fldl
add
mov
pop
shrb
pop
add
dec
push
andps
push
nop
ss
pop
cmp
add
sub
iret
cli
add
adcb
adc
push
xor
and
and
push
push
lcall
add
addb
push
sbbb
pop
adc
add
add
or
xlat
pop
mov
push
in
add
push
lcall
lds
pop
pop
fdivrs
stos
fidivrl
cwtl
pop
pop
in
daa
lods
add
add
stos
and
daa
mov
push
stos
xor
aaa
xlat
jmp
and
and
add
add
and
jge
push
testl
fisubs
stos
xlat
aaa
sbb
or
fstl
push
cmp
push
push
rolb
mov
add
add
xlat
add
push
mov
pop
add
add
cmp
fstl
fwait
push
adc
pop
sbb
add
cmpsb
rorb
sbb
pop
aaa
sbb
ret
ds
mov
add
and
xchg
lods
lea
sbb
iret
push
fstl
aaa
faddl
pop
push
ficoms
cmp
add
and
and
rol
sub
cld
sbb
push
pushf
add
fiaddl
stos
fcoml
xchg
and
lcall
in
xchg
xchg
lods
push
push
add
xchg
inc
addr16
das
cld
sub
adc
xlat
cld
sub
nop
add
adc
adc
pop
daa
fisubrl
ret
add
pop
shlb
or
mov
rcl
xlat
and
add
and
int
lahf
add
ret
cmpb
xor
and
sarb
lods
or
aaa
shlb
mov
push
mov
shrl
in
push
pop
loopne
sub
push
lcall
inc
pop
stos
mov
mov
shll
add
pop
mov
lea
add
addl
imul
push
lcall
out
sbb
add
and
push
add
push
pushf
sahf
add
xchg
subps
int
stos
lret
and
sti
into
add
add
movsl
add
subl
addb
add
add
xchg
inc
add
xor
and
add
push
sbb
loope
stos
mov
pop
pop
add
repnz
fiaddl
mov
test
jecxz
stos
add
cltd
push
shr
pop
pop
es
mov
out
add
insb
aad
xor
push
repz
out
loopne
mov
loopne
fmull
pop
adc
sbb
mov
popa
inc
push
fcoms
sbbl
pop
mov
add
imul
es
ret
pop
shrb
sbb
aad
or
pop
sbbb
fucom
inc
adc
pusha
add
shll
adc
es
add
add
clc
incl
add
mul
add
cltd
add
xor
in
pop
out
sti
add
shlb
xor
in
pop
xorl
lret
loope
dec
mov
pop
add
stos
mov
andl
mov
repz
mov
sti
test
ret
test
icebp
mov
incl
in
xor
in
enter
rcrb
ror
sbb
add
shrb
add
rcll
fistpl
add
add
mov
aaa
add
and
pop
mov
sbb
push
fwait
movsb
lret
addb
sbb
xor
xor
add
add
sarb
add
imul
add
push
stos
adc
adc
adc
add
add
sbb
add
ss
push
adc
pushf
add
push
lcall
lcall
stc
addl
aaa
push
inc
add
out
push
lcall
mov
inc
stos
popf
mov
mov
iret
inc
and
pusha
and
sbb
pop
inc
adc
sarl
test
pop
add
pop
arpl
xor
dec
push
repnz
inc
or
imul
fsubrl
loopne
rcrb
inc
add
add
mov
and
add
push
mov
or
pop
pop
stos
enter
sub
imul
add
cmpl
add
fucomp
sub
add
lcall
hlt
push
fcoms
xchg
add
pop
add
stos
ret
mov
mov
push
fdivs
jmp
pop
lds
and
pop
push
lcall
push
rcr
pop
and
and
test
and
adcb
call
cltd
inc
xlat
pop
sbb
aaa
loopne
mov
mov
add
push
inc
addl
sbb
aaa
cld
mov
mov
inc
inc
and
iret
aaa
test
ss
dec
loopne
imul
fsubs
or
das
mov
xor
add
aas
push
out
mov
push
ficomps
rcrb
push
nop
add
pop
popa
or
pusha
or
test
pop
popa
or
fisubrs
add
repz
stos
shll
roll
into
pusha
add
mov
mov
xchg
push
stos
ja
jns
add
add
push
mov
roll
enter
xchg
or
stos
cmp
adc
push
sbb
pop
gs
dec
mov
push
add
and
adc
aas
fstpl
xlat
pop
lcall
fcmovnbe
pop
adc
outsl
lcall
push
and
mov
add
push
sub
pushf
ret
sbb
orb
inc
rcl
imul
xchg
pop
add
and
fildl
add
lahf
xor
push
fwait
insb
xchg
add
jle
stos
inc
cmp
and
stos
jo
rorb
adc
add
inc
add
add
xchg
add
lret
push
add
fucomi
pop
inc
sbbb
sbbb
pop
add
sti
mov
pushf
shrb
add
mov
sub
add
xor
add
xor
lret
loope
stos
daa
out
mov
and
mov
and
shlb
jmp
push
sbb
xchg
inc
add
xlat
mov
and
sub
add
xor
sbb
lcall
and
aas
fcoml
aas
sub
das
and
jo
shrb
cwtl
xlat
xchg
stos
rclb
mov
stos
into
push
xchg
mov
sarl
stos
fimull
push
xchg
fwait
add
pop
push
rolb
dec
mov
push
inc
iret
lock
and
sub
add
test
xor
add
push
mov
pop
or
ret
stos
xchg
pop
ss
rcrb
and
roll
in
sbb
popl
lock
add
and
or
test
pushf
xor
mov
add
mov
add
pusha
add
add
shll
ficoms
sub
fsubl
lcall
mov
lock
nop
add
adc
stos
iret
push
xchg
adc
sbb
add
add
add
enter
adc
add
arpl
cmp
rorl
xchg
rcrb
dec
xchg
movsl
and
ret
adcb
and
push
and
and
repz
mov
in
add
push
daa
inc
out
iret
rcrb
and
sub
pop
adc
and
push
lcall
push
andb
pop
mov
jo
dec
add
push
cwtl
jb
rol
pop
add
xchg
adc
lock
out
pushf
scas
jo
add
icebp
push
lods
iret
sub
les
sub
leave
cld
das
mov
or
xlat
pop
pop
lds
or
leave
lahf
add
add
and
cltd
fsubrl
cwtl
mov
and
mov
and
push
aam
mov
mov
xor
mov
xor
push
mov
stos
fidivl
rclb
and
das
inc
sysenter
lret
test
mov
jle
mov
add
xor
popf
in
mov
mov
test
mov
pop
jecxz
add
dec
push
ret
push
sahf
popf
in
mov
push
stos
add
push
nop
mov
add
sbbl
xlat
rorb
add
iret
adc
sahf
lahf
add
push
cmpl
mov
push
cltd
ret
addl
pop
add
push
cltd
out
push
addb
mov
add
or
jno
pop
sarl
push
add
adcb
shlb
es
int3
inc
add
xorl
sbb
mov
icebp
pop
push
sbb
push
push
in
subb
push
int
add
fistl
nop
sbb
push
sbb
inc
pop
out
add
out
aaa
test
and
pushf
add
orb
add
or
push
and
and
nop
add
rcrb
fsubs
add
pop
and
aaa
imul
addb
add
adc
cmp
daa
repz
pop
mov
popf
mov
aaa
jl
xor
dec
ljmp
adc
push
aaa
daa
lret
mov
adc
push
cmpsl
addb
cwtl
add
pop
and
mov
and
stos
xor
push
xor
add
mov
pop
pop
leave
sub
les
cld
xchg
inc
dec
nop
jns
add
dec
and
xor
in
sub
dec
test
push
fldt
xlat
add
stos
lahf
out
xlat
stos
add
push
sahf
iret
pop
push
leave
sub
pop
les
cld
push
mov
pop
inc
pop
fisttpl
sub
roll
push
jmp
aaa
out
push
or
mov
push
cs
inc
add
lods
je
cmp
adc
fs
insb
add
stos
inc
pop
inc
or
sbb
push
rcrl
rolb
xor
mov
inc
push
mov
xor
jo
aaa
sbb
cmp
mov
and
adc
add
push
lcall
add
stos
in
pop
movsb
rcrl
xor
add
pop
add
mov
xchg
and
and
push
xchg
shlb
gs
add
and
mov
lahf
and
das
push
cltd
iret
icebp
push
push
add
pop
pop
adc
subb
push
mov
push
mov
aaa
cmp
mov
xchg
add
jnp
out
nop
jnp
shl
in
aas
lods
pop
mov
adc
and
sub
sub
and
lcall
and
lahf
and
aaa
in
xor
mov
sub
lcall
add
cmpsl
loopne
rolb
add
fadd
xorl
mov
cwtl
fwait
lea
add
xchg
lret
add
mov
or
aaa
dec
and
lcall
mov
cli
loopne
push
and
xor
xor
add
pop
add
mov
push
add
orb
pop
pop
stos
int
jmp
aaa
test
rcr
add
lcall
inc
int
and
pop
add
push
pop
pop
add
add
and
push
int
lahf
add
and
stos
fcoms
outsl
fidivs
pop
add
pop
mov
pop
and
and
cwtl
mov
and
add
inc
push
lcall
push
sub
leave
mov
add
pop
pop
cmpsl
stc
push
das
mov
add
fsubr
mov
mov
add
aaa
pop
mov
add
add
push
int3
add
push
cltd
add
push
sbb
inc
nop
add
add
mov
push
lcall
popl
pop
add
sub
add
mov
sbb
lea
add
stos
add
add
addl
xor
xchg
mov
mov
lcall
mov
add
push
lcall
push
xor
lods
push
lcall
mov
push
and
add
pop
pop
add
push
add
lcall
sbb
in
rorb
jb
pop
orb
stos
test
mov
jle
leave
add
pop
sbb
and
xorl
add
stos
add
and
out
add
add
cmc
fiadds
addr16
adc
subb
subb
add
push
or
orb
orl
xor
push
add
xlat
add
push
mov
push
mov
fldt
addb
es
add
inc
lcall
out
add
lret
and
add
dec
add
and
stos
xlat
push
lcall
add
and
addb
add
add
lret
insb
sub
pop
les
sub
sbb
int
cld
in
sbb
push
cmp
pop
add
sub
add
mov
mov
in
push
sti
nop
sti
and
das
add
push
pop
add
and
movl
add
sti
out
push
fwait
sti
rorl
dec
aaa
scas
jg
imul
pop
aaa
sub
rorb
push
inc
pop
lea
pop
or
out
pop
jecxz
pop
dec
sub
adcb
rolb
mov
push
mov
mov
and
mov
aaa
lahf
add
and
pop
pop
stos
rcrb
add
mov
lahf
add
fildl
das
xor
in
sub
andb
pop
pop
stos
aam
push
sbb
cld
sarb
add
push
add
ret
inc
adc
shrb
jmp
mov
xor
sti
repz
sbb
into
lahf
add
adc
xchg
stos
xlat
rolb
imul
jmp
sbb
and
xor
push
xchg
pop
ret
in
adc
cmp
pop
jg
or
push
in
stos
rol
and
rcrb
add
rorb
sbb
shrb
add
fildl
xchg
fldt
add
sti
iret
fldt
orb
or
inc
pusha
pop
sub
pop
lcall
and
lret
lret
rcrb
rolb
xlat
rcrb
add
mov
pop
pop
rcrb
inc
push
rorb
lret
sbbb
push
test
add
inc
not
and
push
pop
pop
add
in
push
fwait
sti
lret
push
nop
fcoml
fildl
add
mov
dec
popf
add
add
filds
rorb
add
push
stos
sti
lret
pop
sub
dec
add
mov
and
shll
fistl
xchg
sti
nop
shll
xor
or
add
add
fisubrs
add
add
sbb
push
pop
inc
pop
and
push
add
sti
loope
mov
mov
stos
add
rolb
rolb
inc
sbb
inc
sbb
mov
add
mov
loopne
inc
add
add
movsb
push
das
rclb
mov
sub
add
and
mov
pop
in
mov
push
andl
rcrb
pop
loopne
and
add
xchg
and
mov
mov
lret
push
mov
nop
pusha
sbb
adc
dec
mov
sub
aaa
mov
and
test
sbbb
daa
pop
inc
mov
fdivl
loopne
jmp
pusha
sub
aaa
adc
mov
out
stos
add
mov
aaa
adc
fiadds
stos
aad
mov
loopne,pt
in
pop
xor
rclb
fidivs
adc
aaa
in
loopne
add
pop
andl
push
addb
mov
stos
add
aad
fiaddl
xchg
xor
add
and
push
lcall
cwtl
mov
push
addb
adc
or
jg
mov
push
stos
mov
jecxz
adc
in
pop
lahf
loopne
pop
push
sbb
daa
and
add
xor
sbb
mov
push
roll
add
add
or
in
iret
add
xchg
sbb
ret
out
test
push
pop
mov
stos
aam
pop
push
pop
loopne
stos
pop
shr
sub
adc
mov
pusha
imul
stos
shlb
shll
and
push
sbb
rcll
adc
mov
and
adc
adc
adc
add
xchg
inc
loope
mov
and
mov
in
push
mov
xchg
adc
pop
xchg
adc
cwtl
push
aaa
int
adc
mov
daa
push
add
jecxz
push
pop
push
fnsetpm(287
push
add
and
add
add
add
pop
sbb
add
sahf
pop
and
add
test
out
xchg
and
mov
orl
push
mov
pop
push
add
fsubl
add
fldenv
sbb
cld
pop
pop
popa
dec
add
pusha
shlb
sub
pop
sbb
or
loop
out
push
rclb
or
mov
mov
push
push
nop
mov
rcrl
fcmovnbe
add
or
subb
nopl
or
sarb
sub
pop
add
out
mov
pop
add
pinsrw
sbb
add
mov
sbb
and
fildl
adc
pop
ret
add
mov
loope
or
or
loopne
dec
add
and
les
add
or
flds
add
mov
stos
fucomi
pop
xor
or
mov
push
jmp
push
cltd
and
aad
pop
aam
and
rorl
add
xor
cmp
add
add
pop
and
xor
test
lret
das
push
cltd
fiadds
sub
aaa
loop
add
add
inc
sub
stos
lahf
push
xor
xor
pop
and
sbb
add
and
or
daa
mov
shl
adcb
fnsave
push
xchg
sbb
enter
push
fnstenv
add
push
pusha
fildl
add
cmp
sbb
pop
and
aad
mov
pusha
cs
out
loop
or
xlat
adc
or
add
push
xchg
rcr
mov
push
aaa
or
in
add
mov
andb
push
in
or
rolb
push
ljmp
sub
add
sahf
popf
in
mov
push
lret
xchg
push
xchg
and
push
cmpsl
leave
xor
xchg
cmp
fistl
and
test
aam
roll
mov
add
sbbb
sbb
mov
in
add
das
shrb
push
add
test
add
push
pusha
inc
rolb
fisubrl
es
rcll
inc
repnz
fidivl
lock
stos
fcom
ficomps
fcomps
aas
fistl
fisubrs
sbb
xor
add
pop
add
adc
adcl
test
xor
pop
or
and
xor
add
pop
incl
mov
daa
and
rcrb
imul
xor
xor
and
add
mov
add
lods
roll
push
iret
in
lret
stos
ficompl
push
daa
hlt
and
rorb
sub
xchg
push
pop
daa
lock
push
rcll
aaa
add
fisubl
xlat
icebp
sbb
pop
je
add
lds
inc
mov
and
push
fisttpl
pop
pop
rcrb
rolb
sub
mov
add
push
add
push
fistl
out
stos
sbbb
mov
adc
loopne
mov
pop
add
ljmp
pop
add
jo
popf
cwtl
in
mov
push
jecxz
push
and
push
shl
sbb
add
xchg
xchg
cmpsb
xor
and
xlat
cld
and
sbb
out
add
xchg
and
xlat
rcrb
jae
mov
loopne
push
sbb
and
add
and
pop
pusha
aas
xor
add
adc
adcl
add
xlat
mov
inc
adcb
in
rcrb
or
push
xlat
adc
aad
es
andb
xlat
mov
sbb
adc
push
cmpsl
ficomps
clc
add
stos
enter
and
push
rolb
inc
add
mov
ficompl
xor
xor
mul
shrb
cwtl
and
addb
stos
adc
add
in
stos
fsubl
xchg
and
add
lds
inc
add
ret
pop
add
aad
or
mov
inc
xchg
lahf
xor
and
and
pop
rcll
daa
and
stos
leave
and
cmpsb
mov
sbb
call
daa
xor
add
push
loope
sahf
cmp
in
and
jo
rcrb
sbb
shrb
pop
lock
pop
es
lods
rcrb
test
add
pop
adc
in
lods
cmp
add
fstpl
loopne
pop
es
stos
ret
push
push
adc
adc
shrb
add
stos
into
add
add
adc
and
cmp
adc
mov
leave
inc
adc
xor
sahf
mov
pop
jo
sub
add
in
stos
fistpl
and
lods
adc
and
push
ficoml
adc
lret
mov
pop
jecxz
add
adc
nop
add
adc
mov
in
and
sub
andb
adc
pop
icebp
sub
mov
push
lret
xor
xor
mov
and
push
add
lods
fsts
shrb
fst
push
cmp
loop
jecxz
push
shl
and
dec
xlat
push
stos
sub
iret
aaa
adc
fcomi
or
push
inc
subb
xlat
mov
loopne
fistl
loope
mov
roll
add
and
push
lcall
sub
fsubl
add
mov
push
lcall
pop
mov
push
sbb
cs
xlat
rcl
sub
push
nop
push
jo
xor
push
popa
add
sub
and
mov
stos
rcrl
stos
lret
inc
add
ss
add
in
adc
lahf
ss
mov
in
pop
bound
add
pusha
out
add
xchg
and
popa
add
shlb
hlt
sub
adc
mov
shll
stos
xor
mov
xchg
rorb
repnz
mov
add
rcll
shl
sub
ret
or
pop
or
add
hlt
sub
aam
sahf
cwtl
lahf
in
mov
hlt
sub
inc
push
xchg
push
sbb
test
adc
cld
inc
fwait
ret
xchg
mov
or
and
inc
mov
rorb
dec
mov
rorb
push
pusha
add
or
addr16
or
shrb
rolb
push
xor
sbb
sbb
add
out
and
stos
xor
iret
or
cli
rorb
rorb
ret
fsts
or
inc
fldl
xor
or
or
adc
push
xlat
pop
push
stos
sub
mov
xor
mov
int
ss
aaa
mov
add
iret
pop
mov
pop
sbb
push
xor
mov
push
lcall
pop
pop
and
sbb
mov
les
fsubl
and
rorl
mov
add
push
xchg
loope
and
add
int
add
sbb
sub
add
cmp
add
and
mov
ja
sbbb
adc
sbbb
loope
and
add
and
cmp
fucomi
add
and
aaa
cmpsb
add
add
cltd
mov
push
add
add
adc
xor
sub
and
lods
add
pop
adc
rcrb
mov
jmp
and
loope
xchg
add
fnsave
sbb
and
push
and
add
mov
push
lcall
lcall
das
nop
pop
sub
iret
sbbb
xor
add
push
xchg
xlat
push
fiadds
sbb
sbb
stos
iret
in
pop
add
stos
rcll
and
sbb
sub
sub
mov
sbb
inc
sbb
mov
add
sub
push
daa
pop
and
add
subb
lret
push
daa
adc
mov
sbb
add
movsb
sub
pop
stos
into
push
mov
add
add
xor
in
pop
sbbb
mov
and
addb
stos
aam
add
pop
pop
stos
mov
add
sbb
fiadds
add
push
fst
push
adc
pop
add
sbb
add
push
fsubp
add
stos
jecxz
stos
ficompl
cs
push
hlt
fwait
add
fnsetpm(287
adc
fsubp
or
stos
fcomps
aad
fstl
sahf
push
rol
sbb
test
jmp
mov
cltd
ret
inc
iret
mov
push
invd
aaa
rolb
add
add
and
or
cltd
rcr
sbb
add
push
cltd
iret
hlt
sbb
add
push
lcall
and
stos
rcrl
lods
add
lret
push
addl
aaa
inc
or
movl
add
and
lret
push
lcall
pop
addb
sahf
add
sub
daa
push
xchg
add
push
ret
xlat
in
stos
int3
adc
rcrb
rolb
inc
addl
addb
stos
aaa
push
add
push
xchg
ret
add
and
push
shrl
xlat
stos
ret
pusha
add
test
pop
sbb
add
xchg
addb
pop
sbb
add
xor
shlb
popl
and
inc
lret
lahf
add
nop
shlb
and
push
lcall
and
add
cmp
and
stos
add
pop
and
xchg
andb
xchg
iret
rcrb
add
pop
mov
add
cwtl
and
and
addb
and
rcl
pop
popl
add
inc
in
xlat
rcrb
add
fiadds
or
add
lahf
mov
or
in
aas
movsb
pop
rol
add
fiadds
add
inc
add
push
xchg
ficoms
fistpl
out
sbb
sub
sbb
xlat
inc
pop
and
imul
and
mov
push
and
and
lcall
adc
adc
testb
adc
xchg
pop
pop
rcrb
rolb
add
ss
add
add
ds
push
lcall
jae
lcall
and
add
das
push
sbb
push
xlat
push
lahf
add
cmc
mov
dec
add
lret
mov
aaa
xchg
std
fsubp
jbe
cmp
daa
pop
xor
mov
add
push
mov
stos
mov
rolb
popl
fstpl
mov
add
add
pushl
pop
fcomp
inc
add
push
stc
pusha
or
pop
add
add
mov
mov
pop
clc
add
add
loopne
fiaddl
adc
add
fisubrl
fiadds
pushf
add
stos
push
xchg
ret
pop
in
pop
outsl
pusha
adc
add
add
sbb
stos
sti
and
stos
jmp
stos
ret
and
jp
jb
xorb
or
sbbb
pop
xor
and
and
xlat
and
imull
pop
and
or
add
pop
push
lcall
aaa
add
sub
and
and
rcrb
loopne
pop
mov
pop
adc
add
bound
pop
pusha
addb
in
add
pop
pop
jo
add
add
push
lcall
add
add
push
das
push
stos
sti
pop
and
stos
mov
push
mov
jmp
and
call
pop
sbb
add
add
adc
and
mov
inc
pop
xor
in
ret
and
ret
and
in
push
rolb
pop
push
push
ret
pop
fucom
pop
xchg
pop
stos
add
mov
pop
add
mov
sub
pop
pusha
adc
ret
sub
repz
sbb
aaa
cmp
adc
jge
andb
jmp
loopne
stos
lret
loopne
stos
iret
stos
addl
add
lds
and
sub
pop
and
mov
cmpsl
popl
sbb
stos
cwtl
pop
mov
sahf
popa
out
add
and
sub
xchg
addb
inc
stos
cli
mov
loopne
pusha
sbb
andl
movsb
push
daa
aaa
adc
inc
dec
fcomps
add
push
push
add
add
adc
sbbb
pop
push
fistpl
out
roll
in
fcmovnbe
push
in
in
iret
in
push
sahf
push
add
loope
in
push
out
add
push
push
in
or
hlt
mov
imul
mov
sarb
and
xor
cld
and
mov
mov
addb
rcrl
adc
push
add
add
inc
and
add
add
adc
stos
xchg
add
hlt
adc
xlat
mov
lcall
push
lret
flds
add
and
add
push
ret
fsts
add
fnop
imul
and
push
roll
fsubrp
shl
push
rcrb
stos
sbb
and
or
xchg
and
or
adcb
mov
stc
pop
xor
and
pop
or
mov
daa
mov
adc
sbb
xchg
daa
andl
rcll
push
into
xor
fcompl
fiadds
sahf
xchg
stos
cmp
pusha
or
push
push
push
xor
push
mov
add
pop
fcoml
ds
push
xor
aam
push
push
add
pop
sbb
pop
mov
xchg
sub
pop
add
push
fsts
aam
push
dec
add
xor
insl
and
adc
loopne
push
push
arpl
outsb
pusha
add
pop
shlb
out
loopne
sub
add
imul
mov
mov
add
xlat
xor
push
push
addb
push
xchg
push
fstl
xchg
fcompl
adc
push
addb
pop
push
ja
cmp
jecxz
add
push
push
push
lcall
mov
mov
sub
or
xchg
in
push
pop
push
or
push
aam
fiaddl
pop
sbb
xor
pushf
push
sahf
add
jecxz
test
shrb
cmp
jp
push
xor
add
sti
push
sahf
sbb
dec
add
and
std
pop
in
lods
add
pop
push
stos
fcomps
xchg
lret
pop
and
jo
xchg
push
xchg
daa
push
add
pop
fldl
pop
aaa
fcmovnbe
push
push
xchg
and
push
push
pop
flds
aad
and
cmp
fst
sbb
mov
and
push
push
lcall
push
stos
sub
rolb
and
pusha
push
fstps
stos
add
sahf
in
mov
lods
pop
mov
or
or
xlat
add
push
fsts
pop
add
sahf
fdivp
or
push
xchg
inc
and
and
iret
lahf
xchg
stos
sub
sti
fldt
add
xlat
lea
pop
and
add
push
xchg
iret
and
rcll
iret
xchg
stos
sub
pop
incl
or
fstl
add
push
xchg
fisttpl
add
and
mov
mov
add
gs
rcrl
adc
push
and
jo
push
rol
push
leave
fstpl
add
rcll
xchg
inc
and
xchg
shrl
or
push
sbb
iret
pusha
cs
pop
and
in
pop
xor
push
orb
enter
and
xor
roll
sbb
mov
pop
and
and
and
or
stos
fsubl
push
iret
add
stos
sti
xchg
stos
lret
stos
rcll
adc
sub
xor
mov
add
push
sub
aaa
jmp
dec
sbb
add
dec
adc
sbb
ss
add
xchg
add
stos
int
stos
ret
add
cltd
fldl
aas
fnsave
jmp
aaa
frstor
and
push
add
push
xchg
and
stos
mov
sbb
mov
shll
cmp
add
add
mov
and
pop
addl
enter
push
loopne
mov
aaa
movsb
rorl
or
or
rolb
or
sub
aaa
cltd
inc
add
adc
aaa
loope
or
push
adc
sbb
inc
cmpsb
sbb
or
add
xchg
mov
fisttpll
xor
mov
xchg
mov
ret
popf
rcll
inc
push
or
or
xor
mov
fwait
xor
or
xorl
mov
mov
adc
shrb
out
push
test
hlt
or
jo
add
jo
hlt
sub
push
scas
fistl
sub
jo
test
fsubrl
fsubrl
xlat
add
daa
stos
xlat
add
push
lcall
xchg
hlt
and
fdivl
jno
aas
add
adcb
cld
dec
loopne
xor
mov
add
xlat
push
rcrl
add
fsubrl
in
sbb
cmp
jecxz
stos
or
popa
add
pusha
add
pop
xor
add
leave
pop
sbb
fstpl
in
lods
das
add
jecxz
stos
sti
inc
mov
les
xchg
add
stos
mov
nop
add
es
jp
jg
dec
mov
jge
nop
popa
repnz
add
fisubrs
ss
faddl
add
add
mov
lcall
sub
or
shlb
push
pop
pop
popa
nop
iret
sub
mov
push
add
push
xorb
push
cmpb
push
add
and
and
pop
lock
pop
and
addb
aaa
ror
push
add
mov
sbb
jl
sbb
orb
push
nop
fistl
inc
in
mov
sahf
push
sub
push
ret
add
mov
fstl
arpl
pop
inc
push
ljmp
push
xor
push
add
push
add
or
testl
xor
mov
add
aad
push
and
xor
push
mov
add
add
pop
shrb
and
or
and
pop
loop
rolb
nop
xchg
pop
inc
sbb
mov
and
push
jo
in
rcrb
sti
addb
mov
inc
shlb
push
lcall
add
rolb
ss
add
lcall
arpl
pop
add
rcll
jg
push
lcall
add
lcall
lcall
adc
inc
and
mov
ja
xorb
add
mov
loop
jo
stos
mov
lcall
lock
sbb
pop
sub
xorb
fiaddl
out
das
stos
rorl
stos
xor
and
inc
mov
sbb
lds
fidivs
rcll
addb
out
inc
stos
ror
fisttpll
xor
add
and
cmp
cmp
stos
sub
pop
adc
int3
inc
mov
xorb
stos
xlat
mov
out
cmp
ficoms
add
pop
add
cmp
mov
or
aaa
inc
rolb
mov
and
pusha
add
pop
lahf
mov
sbb
lret
lahf
add
mov
test
fldt
sbb
jecxz
add
xor
sub
lcall
and
xchg
push
or
adc
push
mov
pop
add
add
loopne
and
adc
mov
xlat
mov
lahf
add
and
addb
sub
lcall
xor
stos
subb
rorl
stos
xor
add
add
aaa
jl
and
mov
and
dec
lret
lahf
add
pop
pop
stos
jle
andb
ja
fisubrl
ficomps
cmp
mov
lret
stos
xchg
aaa
sbb
ret
add
pop
pop
stos
lcall
ljmp
lret
lahf
add
pop
sub
add
aaa
pop
sub
and
push
cltd
xlat
push
fcoms
ret
push
cwtl
rorl
aaa
add
sub
fidivs
add
int3
lahf
add
add
outsl
mov
sti
xlat
stos
cld
aaa
test
imul
pop
stos
aad
scas
fildl
stos
pop
lahf
xor
and
lret
inc
addl
xor
xlat
push
stos
call
icebp
push
push
ret
add
mov
lcall
jl
add
adc
and
and
cmp
add
andl
les
add
sub
dec
rolb
dec
add
sbb
ficoms
xor
fadds
fisttpl
pop
and
nop
add
mov
add
mov
and
push
add
or
push
adc
stos
shlb
xor
add
mov
rolb
insl
push
lcall
and
pop
mov
repnz
test
or
add
lret
test
jno
inc
sbb
pop
les
inc
pop
sbbb
cmp
bound
xor
push
orb
sbb
push
push
and
aaa
mov
andl
and
andl
and
and
roll
add
mov
mov
adc
and
leave
and
pop
pop
add
add
pop
xor
add
add
mov
popl
and
sub
lahf
add
fldl
inc
push
rcrb
add
add
insb
mov
and
and
and
ret
add
mov
aaa
clc
lea
aaa
xlat
rolb
in
and
and
and
divb
add
movl
mov
push
lcall
lahf
addb
sbb
and
stos
ja
lcall
sbb
lcall
mov
push
pop
inc
inc
pop
aaa
add
jo
pop
xor
add
or
mov
aaa
mov
and
mov
fcompl
add
pop
iret
mov
adc
and
mov
je
xor
add
xor
outsl
fiadds
shrb
cmp
pop
xor
decl
lret
rorb
and
andl
push
loop
popa
add
push
ljmp
and
mov
adc
in
xchg
roll
mov
and
inc
and
aaa
ljmp
inc
add
sti
mov
or
push
fwait
sti
movl
daa
and
pop
pop
adc
pop
adc
adc
push
add
sub
xlat
push
pop
aaa
out
fldl
add
shrb
push
lcall
cltd
and
push
lcall
dec
pop
mov
repz
push
pushf
popl
daa
add
jecxz
push
pushf
xchg
push
inc
push
cmpsl
pusha
sub
xor
inc
add
add
lcall
add
mov
mov
pusha
mov
and
cwtl
rcl
push
aas
iret
aam
shrb
popl
add
push
and
mov
xor
adc
pusha
mov
iret
mov
mov
and
and
orb
pop
mov
dec
rorl
push
andl
out
insl
xor
pop
and
stos
lds
push
xchg
add
mov
sub
lahf
stos
ljmp
inc
cmp
fsts
sub
insb
mov
or
mov
aad
add
pusha
add
add
inc
ret
mov
cltd
lret
mov
add
rorb
insb
add
sti
iret
mov
lret
and
add
add
sti
sub
inc
add
sbb
pop
sbb
and
iret
stos
popf
push
loop
inc
or
mov
and
popl
and
pop
pop
rorb
pop
sbb
stos
repnz
pop
roll
lret
and
lea
add
add
push
add
addb
sbb
xchg
iret
push
and
xor
add
push
fwait
sti
lret
mov
mull
lret
or
add
ljmp
add
enter
test
mov
shlb
pop
and
inc
add
pop
add
hlt
add
and
sub
imul
push
aaa
mov
sbb
adc
cmp
and
dec
int
sbb
rcrl
push
in
add
add
fildl
mov
rcll
mov
daa
nop
pop
xor
push
mov
dec
xor
cmp
or
fildl
adc
cmpb
mov
into
inc
push
pop
aaa
ror
add
lcall
push
pushf
xlat
and
stos
or
and
int
add
int3
add
mov
fisubs
fstpl
bound
shll
add
mull
and
loopne
push
adc
lret
inc
add
and
add
inc
and
mov
dec
paddusb
mov
mov
imul
in
rcrb
nop
xor
fst
or
push
add
add
pushf
iret
xor
xor
mov
nop
sbb
add
mov
add
mov
add
sti
push
lods
add
cmpb
pushf
add
and
push
xchg
repz
mov
add
and
or
and
lret
mov
sub
and
daa
aaa
leave
cltd
jo
fucomp
sbb
bound
ret
and
popa
push
lods
ret
or
pop
rol
add
add
fcoml
add
shrb
shlb
repz
jmp
fsubrl
and
cs
add
repz
mov
mov
bound
push
sub
jg
inc
add
aaa
add
add
mov
mov
dec
fistpl
rolb
inc
push
jo
aaa
stos
xchg
mov
pop
and
addb
pushf
xchg
inc
pop
mov
mov
pop
push
pop
adc
icebp
inc
aaa
aad
add
aaa
mov
push
sbb
pop
mov
sbb
lret
pop
mov
cmp
pop
into
mov
pusha
sbb
jle
das
push
in
stos
xchg
push
or
add
in
stos
out
mov
mov
adc
andl
stos
les
mov
xchg
arpl
orl
adc
lock
inc
sbb
ret
mov
das
adc
and
push
cltd
rcll
mov
adc
xchg
lock
push
cltd
mov
sbb
adc
xchg
iret
nop
add
lret
inc
jno
fldenv
mov
or
pop
mov
and
mov
adc
push
pop
orl
sahf
pop
addl
inc
cmpsb
push
pop
rorl
mov
add
push
pop
jno
rolb
sti
jb
stos
int
pop
int
imul
popa
cmp
iret
gs
adc
push
stos
adc
add
mov
adc
add
std
add
add
jle
add
jecxz
test
adc
add
jp
add
in
pop
xor
add
sahf
int
jmp
adc
jge
add
into
xor
sub
jg
add
add
in
add
pop
mov
stos
ficomps
stos
fcompl
pop
test
pop
mov
jno
rcr
pop
mov
jno
xlat
mov
cmpb
add
add
mov
push
aaa
xchg
push
nop
cmp
mov
mov
push
aam
divl
xor
push
xor
add
xchg
pop
mov
mov
add
dec
fs
adc
xchg
aaa
std
aaa
and
shrb
je
addb
adc
inc
mov
test
sbb
or
ficomps
js
sbb
adc
repz
mov
push
iret
add
hlt
mov
push
sbb
push
pop
mov
xor
xchg
jae
iret
push
add
lea
add
mov
aaa
aaa
clc
cmp
lea
outsl
mov
das
mov
mov
push
aad
cmp
popl
add
sbb
mov
iret
and
add
sbb
push
add
mov
xchg
or
rcll
pop
add
mov
xor
and
andb
pop
add
push
push
push
add
add
and
xorb
insb
pop
xor
and
daa
and
add
add
in
addb
ja
adcb
rcrb
mov
push
xchg
sti
lret
and
and
nop
pusha
iret
popa
add
pop
pop
push
mov
add
jo
pop
pop
pop
cmpsb
iret
roll
cmpb
push
add
cmp
dec
mov
or
outsl
and
inc
xor
lret
xor
pop
pop
and
push
daa
pop
push
sbb
out
add
imul
pusha
push
xchg
add
rcrb
and
sub
adc
rcrb
movsb
add
stos
lcall
and
rcrb
adc
aam
xlat
nop
add
add
adc
add
adc
mov
and
fildl
add
xor
sub
add
add
push
shrl
add
adc
xchg
add
adc
mov
loop
shrb
push
aaa
iret
jo
ret
sbb
push
add
push
ss
iret
inc
cltd
adc
sti
push
mov
sti
add
xor
and
shll
ljmp
add
push
lahf
addb
adc
pop
xor
aaa
push
sbb
cli
mov
in
rclb
cmpsl
stos
iret
push
lcall
adc
adc
sbb
add
call
aaa
lcall
shll
xchg
add
mov
movsb
push
mov
stos
inc
aaa
xchg
in
push
cmpsl
push
fsts
adc
mov
lock
add
nop
jmp
jge
add
addl
add
push
add
pop
add
mov
or
stos
pusha
push
and
mov
sti
mov
pop
pop
add
or
xor
sbb
push
add
jo
lahf
pop
add
or
jno
inc
push
mov
xor
and
lret
mov
stos
shll
add
int3
lahf
add
addl
fisubrl
ficomps
stos
iret
stos
aaa
sub
add
add
stos
in
inc
xchg
pushf
add
and
mov
nop
dec
adc
nop
jno
nop
iret
push
xchg
xor
add
aam
dec
add
stos
iret
add
mov
or
push
inc
sbb
xlat
or
adc
add
std
mov
lret
add
aaa
mov
mov
and
mov
aam
mov
shll
jmp
and
fiaddl
inc
add
sahf
pusha
add
fisubrl
add
push
fisttpll
addb
jg
push
mov
add
add
pop
les
sub
mov
jae
or
rcrl
xchg
and
stos
icebp
aaa
mov
sub
aaa
inc
add
and
pop
pop
stos
lret
testl
and
push
lcall
xor
mov
lret
add
push
sbb
adc
or
stos
nop
or
rorb
pop
or
out
dec
es
in
aaa
push
inc
es
adc
stos
andb
aaa
and
and
mov
bound
andl
andl
push
inc
xchg
xchg
dec
adc
push
adc
dec
adc
add
adc
mov
leave
lahf
add
add
add
push
pop
in
sub
in
stos
cmpsl
push
fmull
and
inc
add
add
fisubrs
add
addb
pop
iret
addl
mov
add
add
loop
inc
lcall
inc
mov
aam
mov
xor
iret
in
pop
add
sub
add
and
xor
jp
mov
mov
and
inc
adc
and
mov
addb
sbb
ja
andb
lcall
push
pop
pop
add
mov
lds
xlat
xchg
int
adc
inc
sbb
sbb
out
push
fcoml
sub
cmpb
sbb
xor
inc
es
pop
mov
fcmovnb
adc
add
ret
add
pop
mov
xlat
push
fmull
add
mov
mov
popa
sbb
or
inc
pop
mov
mov
sbb
sbb
cwtl
jecxz
mov
push
stos
out
fsubrl
in
add
out
test
add
cltd
ljmp
add
and
pop
and
and
xor
cmpb
add
add
addl
cltd
sti
push
xchg
ret
add
xchg
push
fistpl
fcompl
xor
cmp
push
hlt
fcmovu
fstpl
xlat
int
add
and
iret
cs
loopne
inc
andl
rclb
faddl
adc
mov
push
lcall
lret
lahf
add
rcll
xor
mov
mov
add
addb
addb
add
push
lret
cmp
lret
push
lods
mull
mov
in
pop
jae
mov
lcall
adc
fsubl
add
arpl
iret
push
int
push
andb
jecxz
lret
aaa
fs
pusha
jl
and
mov
ss
aaa
add
lcall
add
add
or
andl
hlt
mov
inc
cmp
push
daa
aaa
push
mov
push
dec
mov
inc
add
pop
add
rolb
roll
mov
and
pop
stos
rorl
pusha
adc
or
mov
and
push
add
and
and
pusha
push
in
rcrb
and
inc
ljmp
rolb
or
ljmp
add
add
daa
add
and
xchg
push
daa
add
and
mov
add
and
jl
rolb
loop
orl
inc
or
add
stos
iret
out
addl
stos
frstor
in
pop
addl
cmp
stos
iret
aaa
inc
and
and
pop
shl
enter
mov
loopne
popa
testl
jl
inc
add
andl
test
add
aad
mov
aaa
sbb
add
aaa
push
pop
adc
and
add
add
add
jge
add
and
add
xor
inc
pop
fninit
add
lods
outsw
fiadds
or
add
add
fadds
clc
mov
and
and
fwait
iret
loopne
jl
test
jle
add
out
pusha
and
add
sbb
and
fiadds
cmp
and
xlat
fldl
add
push
pop
daa
and
and
add
inc
cmp
out
add
dec
and
pop
xor
mov
push
subb
mov
add
cmp
adcb
push
orl
add
jl
mov
les
pop
push
mov
cmp
loop
push
pop
rclb
mov
pop
dec
ret
push
push
inc
mov
and
inc
or
rcrb
and
pusha
add
stos
hlt
add
inc
adc
getsec
mov
int3
and
inc
andps
add
xor
rolb
and
pop
and
mov
lcall
pop
dec
loopne
or
xor
ret
pop
fisubrs
sbb
rolb
add
or
faddl
add
dec
nop
sub
xorb
mov
in
add
popa
scas
and
xlat
xor
mov
add
shll
jl
inc
add
lret
mov
mov
or
inc
push
xor
push
lahf
sbb
add
aaa
xor
cpuid
add
mov
les
pusha
sbb
add
xchg
push
jo
mov
lock
or
pop
xchg
daa
and
sub
mov
fidivs
add
lcall
lret
or
inc
dec
clc
adc
inc
and
shll
rolb
push
mov
lcall
add
stos
fisubrs
aaa
in
pusha
push
mov
add
push
and
sbb
add
pop
iret
adc
and
ljmp
add
or
xor
xorl
and
roll
sbb
inc
add
loopne
rclb
ficomps
aaa
push
inc
in
addb
pop
or
jnp
lock
add
pop
pop
cmp
push
ret
xor
fsts
shll
and
fs
xchg
inc
push
mov
xlat
add
mov
popf
rorb
jl
adc
in
and
in
push
ret
inc
add
sbb
jno
ficoms
mov
addr16
lock
pop
xlat
xchg
stos
daa
push
ljmp
add
inc
sbbl
sti
iret
mov
shlb
push
inc
ret
adcb
add
and
push
fsubs
add
in
stos
cld
mov
and
mov
rclb
nop
or
jl
push
add
in
rcrb
and
pop
repnz
pop
subl
loopne
rolb
lret
sbb
mov
add
push
lret
aaa
fwait
dec
xor
and
add
adc
and
sbb
adc
arpl
jg
adc
aaa
xor
sub
sti
adc
ljmp
add
addr16
dec
pop
aaa
ret
add
icebp
push
push
hlt
push
adc
add
pop
mov
fstl
pop
and
jl
iret
pushf
add
stos
fdivs
div
and
fsubp
sbb
cmp
arpl
inc
xor
xor
push
andb
and
aaa
movsl
xor
mov
sbb
out
sub
fstl
add
mov
push
dec
jge
and
add
aaa
ret
push
lcall
rorb
push
das
jo
nop
leave
and
aas
add
loop
loopne
or
nop
inc
andl
add
andl
mov
pop
and
xchg
lock
xor
lock
pop
xor
adc
adcb
outsl
ret
mov
inc
mov
outsl
push
adc
or
mov
xchg
sbb
les
jo
xchg
xor
lret
mov
stos
shll
or
add
sub
and
insb
mov
and
in
add
xor
es
in
pop
sbb
mov
and
xor
andb
jnp
add
pop
sbb
lcall
aas
lret
inc
lcall
mov
and
mov
mov
fcompl
rorl
stos
fsubl
lcall
add
cmpsl
repnz
add
and
xor
addr16
add
aaa
jo
xorb
add
addr16
sub
out
andb
lret
orb
test
call
lcall
xchg
add
add
mov
mov
push
sbb
sbb
inc
mov
aaa
sbb
pop
jo
and
stos
aaa
addr16
add
inc
push
mov
nop
mov
mov
rolb
scas
shlb
mov
push
and
add
and
adc
add
mov
xor
mov
add
push
pop
pop
sbb
stos
push
adc
sub
push
stos
lahf
push
addr16
add
addl
add
pusha
mov
aaa
test
imul
push
stos
out
sub
add
icebp
add
push
push
add
stos
mov
add
and
add
int3
push
lcall
push
mov
add
xor
mov
and
in
test
mov
mov
add
aaa
sbb
and
push
lcall
push
ja
and
adc
popl
xor
rolb
mov
xlat
push
lcall
or
loop
mov
adc
stos
scas
popl
push
sbb
mov
add
and
add
adcb
test
aad
daa
inc
add
sbbl
popa
shl
xor
mov
andb
inc
faddl
xchg
sub
push
sbb
adc
sbb
iret
lahf
xchg
stos
sub
and
inc
jbe
mov
add
je
and
cmp
jmp
lock
scas
mov
aaa
and
sub
sbb
inc
mov
in
push
sub
mov
add
xchg
adc
rclb
addb
andb
push
xchg
das
shrb
ficoml
xor
push
pop
pop
fistl
add
push
add
push
stos
lahf
mov
in
push
stos
aas
add
add
pop
rcrb
add
and
aaa
sbb
daa
push
lcall
sarb
stos
sub
or
inc
inc
sub
xor
fsts
or
push
xchg
add
push
xchg
out
fstl
and
cmp
and
fnsetpm(287
loop
pop
and
shrb
fistpl
in
add
paddusb
xor
add
repnz
and
das
in
xlat
shlb
test
add
mov
and
pop
pop
stos
add
push
andb
aaa
and
ss
and
and
and
push
add
loope
and
dec
lahf
add
push
sbb
add
daa
pop
xor
rcr
add
mov
add
fwait
sti
adc
aaa
jp
add
push
add
add
sbb
fadds
fldl
add
stos
add
push
xchg
sti
xlat
mov
sti
ret
fiadds
add
add
add
pop
pop
stos
roll
aaa
add
jae
xor
in
pop
adcl
add
xor
add
and
pop
push
daa
or
pop
adc
and
and
insb
repz
in
sub
pop
adcb
daa
out
push
ljmp
fldt
add
push
stos
add
aaa
in
and
pop
mov
add
sub
add
add
mov
add
daa
pop
sub
test
and
aaa
aaa
mov
add
fsubl
push
adc
sbb
push
sub
aaa
adc
add
push
stos
daa
adc
aad
xor
push
in
sub
add
rcrb
push
sbb
add
pop
push
and
and
add
sbb
fcoms
push
xchg
cmpl
in
rcrb
add
add
jle
ficomps
add
rcrb
addb
mov
xlat
add
stos
hlt
fs
add
aaa
lcall
and
pop
fstps
inc
cmpb
add
and
sub
add
aam
bound
add
and
and
sub
or
add
add
jae
add
or
stos
fidivl
push
orl
inc
add
and
out
xlat
stos
std
dec
orl
rorb
ljmp
sub
aam
leave
add
mov
adc
and
addl
lcall
andb
cwtl
addb
pop
lock
mov
and
decl
and
call
sub
and
lret
rorb
lret
lret
lahf
add
add
add
addl
test
aaa
sub
inc
stos
iret
mov
aaa
jp
xorl
xor
fidivs
sbb
or
scas
subb
mov
and
jmp
lods
data16
out
stos
add
push
xchg
jecxz
jecxz
popl
lcall
fiadds
neg
pop
and
in
pop
sbb
aaa
jge
or
pop
add
pop
xor
mov
shrb
add
push
jmp
push
mov
adc
and
inc
add
outsl
jmp
cli
mov
addl
inc
push
dec
inc
push
aam
sbb
and
fisubrl
add
daa
mov
push
mov
dec
pop
xor
aad
add
inc
mov
and
add
push
stos
sbb
mov
xor
push
lcall
mov
mov
inc
subb
mov
fdivr
lcall
xor
or
inc
outsl
rcrb
rorb
mov
rorl
pop
std
and
andl
into
dec
out
aaa
push
sub
sub
mov
add
testl
push
lcall
sub
and
aas
inc
inc
push
ret
inc
add
push
and
stos
mov
mov
mov
add
insl
inc
loopne
ja
stos
fcomps
push
and
sbbb
push
and
jnp
push
aaa
pop
pusha
dec
push
pop
adc
and
cmp
cmp
dec
iret
stos
shlb
ret
cmp
adc
mov
add
mov
and
push
pusha
adc
pop
sub
dec
add
adc
aaa
push
pop
inc
and
and
lahf
add
adc
iret
rcrb
add
add
push
pop
inc
aaa
hlt
add
push
lcall
add
jg
loopne
in
add
aaa
push
mov
and
loop
outsl
mov
and
sub
add
leave
and
and
popl
iret
add
stos
lea
imul
mov
sbb
sub
aaa
dec
rorb
aaa
pop
jmp
push
stos
sbb
add
sbb
lcall
fstps
mov
mov
addb
loopne
adcb
pop
pop
mov
and
stos
in
lcall
ret
xor
int
add
les
pusha
inc
and
and
and
popa
popl
push
or
push
add
aaa
add
shlb
or
mov
mov
mov
stos
sarb
pop
sbbb
and
or
stos
xchg
jmp
shll
or
loopne
push
xchg
xorb
and
add
add
and
add
inc
and
inc
das
pusha
pop
pop
rcrb
inc
adc
sbb
pusha
or
push
add
sbb
mov
lcall
stos
mov
mov
adc
rcl
lcall
andb
mov
mov
mov
push
mov
in
stos
mov
add
sub
rorb
popa
inc
jecxz
adc
out
cmpb
and
or
loope
xorl
and
add
pop
mov
aam
subb
push
shll
mov
push
lcall
scas
push
sbb
xchg
inc
in
sub
ret
imul
mov
pop
inc
push
lret
and
add
lret
adcb
mov
daa
in
add
mov
push
pop
out
add
fstpl
mov
xlat
stos
cli
add
stos
xlat
xchg
stos
cli
add
xor
pop
pop
fistl
add
stos
enter
loopne
xchg
mov
xor
pop
adc
add
pop
adc
cltd
in
sub
mov
rorb
sbbb
and
pop
add
stos
repz
lds
ret
and
xor
push
sbb
aaa
add
sub
sti
imul
pop
cmp
add
aaa
pop
and
and
adc
stos
lret
inc
push
andl
pop
inc
adc
add
test
cltd
shll
or
loopne
mov
sbb
xchg
and
imul
adc
add
and
add
add
stos
sti
ret
and
and
addl
jo
fsin
fsubr
sbbb
addb
push
lahf
rcrl
lcall
add
mov
push
xchg
add
mov
daa
mov
xchg
stos
rcrb
add
stos
fcoms
ja
add
cmp
push
daa
faddl
pusha
mov
or
aaa
jo
pop
in
stos
fisttpl
lock
xlat
aaa
pusha
adc
inc
stos
xor
sahf
push
fwait
add
and
das
lods
lret
add
push
mov
push
iret
push
add
push
mov
sahf
push
iret
xchg
adc
pop
lods
xor
or
test
add
lret
pusha
pop
push
xchg
sub
sbb
xlat
addb
mov
adc
xor
sbb
pause
sbb
stos
movsl
ja
iret
stos
push
adc
sti
mov
and
and
fistl
mov
pop
xor
and
stos
sti
xlat
addr16
add
inc
inc
adc
add
xorb
sti
ret
push
add
or
add
xor
ret
fwait
roll
adc
dec
loope
les
aaa
pop
pusha
push
mov
stos
shl
mov
add
ret
out
iret
stos
ficompl
and
stos
leave
mov
clc
add
ret
add
sbb
xchg
inc
adc
addr16
push
jno
test
sbb
or
add
mov
nop
or
aaa
adc
pop
ja
sbb
sti
add
out
xlat
stos
std
and
roll
xor
shlb
fwait
sti
shl
or
aaa
add
mov
mov
add
aaa
jecxz
and
push
push
loopne
ret
rolb
cmp
iret
stos
xchg
mov
and
pop
push
fwait
sti
lret
rclb
out
xchg
add
stos
repz
decl
mov
and
and
repnz
lret
rolb
xor
scas
movsb
pop
mov
mov
jo
inc
cmp
or
sub
mov
fldcw
add
adc
push
iret
push
fildl
test
pusha
xor
lret
fstpl
jecxz
mov
pop
inc
mov
subb
or
ficoms
xor
rorb
sbb
das
xchg
pop
and
mov
push
sbb
sbb
push
lahf
and
mov
xchg
or
lods
fadd
orb
jecxz
stos
aad
jmp
jecxz
test
sbb
outsb
rorb
aam
push
out
lods
jecxz
adc
cmpsl
rclb
stos
mov
imul
adc
pop
stos
xchg
mov
push
jo
shrb
cltd
push
sbb
fchs
add
add
inc
add
pop
pop
adc
add
sbb
push
pop
daa
sub
lods
flds
addl
mov
push
add
mov
aaa
xchg
inc
push
push
pop
pop
add
stos
int
lcall
test
in
pop
mov
add
mov
and
pop
mov
stos
fnsetpm(287
das
lods
add
xchg
daa
pop
mov
jmp
out
and
and
add
rcll
hlt
push
push
xor
out
aaa
daa
and
jo
aam
push
lcall
ds
mov
aaa
xchg
lods
push
daa
stos
daa
push
daa
add
icebp
arpl
and
push
stos
adc
inc
popa
or
push
pop
add
and
mov
inc
mov
lcall
mov
aaa
sbb
mov
push
sbb
push
and
push
lcall
sbb
lcall
push
push
push
push
xor
add
aam
push
push
pop
cmp
add
ds
aam
add
aaa
xlat
push
cmp
rcll
icebp
inc
aam
xor
and
lcall
in
pop
add
cmp
mov
add
push
xchg
fildl
jb
add
push
xchg
xlat
aaa
inc
rolb
push
cltd
and
shrb
rcll
xlat
push
or
xlat
rolb
add
paddq
roll
lods
cld
push
add
add
xor
int
add
cmp
lret
xor
leave
cmp
stos
leave
xor
cmp
xor
lds
lds
add
push
xorb
cmpsl
pop
ret
add
stos
lock
mov
jecxz
aam
fbstp
push
stos
pop
iret
push
fldenv
jb
testl
cltd
notl
xlat
jb
xorb
lret
rcl
mov
push
mov
push
inc
add
sbb
add
lcall
enter
nop
pop
aaa
inc
mov
xor
push
lcall
and
xchg
sub
xchg
das
testb
xor
push
lcall
mov
add
push
and
xchg
mov
mov
push
fcom
adc
push
rclb
push
shlb
and
mov
and
and
lcall
in
mov
pop
xorb
andb
out
sub
push
movsb
xor
test
sub
or
stos
rclb
aaa
adc
cmpsb
int
sbb
add
and
fidivl
in
push
and
jl
and
dec
icebp
and
fisubl
in
sub
jp
xor
adc
ds
stos
add
out
and
xor
mov
iret
sbb
orb
in
and
out
and
add
jmp
fiaddl
and
in
sbb
out
push
pusha
pushf
adc
push
sbb
pop
mov
aad
mov
mov
loopne
xlat
mov
pop
daa
rolb
orl
in
pusha
xchg
push
mov
add
test
pop
pop
xor
xlat
and
add
adc
sbb
addb
mov
shll
pop
pop
sti
pop
push
jg
add
xor
daa
push
cwtl
ret
push
or
pop
daa
fsubl
sti
mov
dec
mov
and
mov
xor
in
pop
lahf
add
sti
xlat
push
add
fistl
fnsetpm(287
push
stos
add
pop
add
lahf
sbb
add
add
out
aaa
loope
add
add
sbb
push
xor
rcrl
mov
xlat
mov
push
xlat
push
add
push
faddl
push
add
add
xor
push
cmpsl
add
push
mov
push
lcall
and
ror
lahf
add
inc
rcrl
fildl
addb
push
add
xor
iret
mov
xchg
fisttpl
fcoml
out
sub
and
pop
pop
adc
pop
dec
add
push
cltd
fisttpl
das
push
subb
out
add
fsubl
and
subb
add
push
fsts
mov
lret
push
cwtl
xlat
pop
imul
lcall
sbb
in
das
mov
adc
add
and
cmpb
push
mov
out
add
mov
sahf
mov
and
fildl
add
pop
lcall
mov
dec
xchg
orb
addb
add
pop
cmpsl
je
adc
mov
ja
push
xor
pop
add
mov
push
cs
xlat
aaa
inc
sbb
cwtl
fistl
incl
in
pop
xor
add
sahf
andl
addb
inc
xor
addb
xor
sbb
mov
mov
xlat
mov
add
push
and
inc
add
test
icebp
add
sbb
outsb
and
aaa
add
fsubr
mov
out
mov
pop
mov
xlat
inc
fidivrs
add
and
add
test
push
push
pushf
ret
mov
push
lock
jp
push
lret
inc
rolb
pop
pop
subb
int3
orb
cwtl
ret
pop
or
adc
add
push
pushf
incl
stos
rcrl
roll
stos
roll
or
test
push
pushf
sti
adc
xchg
subb
sbb
push
cwtl
sti
add
stos
sti
push
sbb
add
jmp
sbb
add
add
and
add
shlb
push
cs
rcll
lret
ficoms
inc
cmp
in
push
lods
aam
xchg
out
aaa
and
add
fucomp
inc
xor
fcmovnb
pusha
andl
addl
mov
mov
aaa
insl
inc
jbe
add
sbb
and
push
push
les
aaa
inc
inc
push
shlb
pushf
pop
sbb
in
sbb
adc
addb
rorb
mov
adc
pop
add
inc
push
rclb
and
movb
into
test
add
add
sub
or
stos
clc
mov
flds
inc
add
stos
in
push
mov
es
lods
rcl
imul
mov
xlat
stos
das
rolb
rorb
sbbl
hlt
pop
hlt
das
add
iret
push
lret
pusha
fstps
jle
dec
pop
adc
cmp
add
push
push
push
inc
inc
popa
aaa
mov
adcl
ja
and
pop
jmp
int
add
fcompl
in
and
jbe
add
pusha
add
pushf
add
subb
inc
add
add
pusha
add
inc
add
inc
add
enter
orb
or
aaa
movb
add
outsl
fidivs
mov
lret
mov
mov
lret
insb
pop
push
or
add
sub
add
test
cmp
add
in
pop
add
xchg
and
ljmp
pop
pop
mov
aaa
stc
andb
nop
rcrl
loope
sbb
roll
rolb
adcl
aaa
push
add
roll
and
pop
les
lahf
mov
ret
mov
xor
cltd
xlat
in
xor
mov
and
sbb
mov
fstpt
rcll
cwtl
lret
ret
and
pusha
aam
cltd
ret
mov
add
mov
push
pop
pusha
add
fcomp
stos
and
inc
push
hlt
stos
lret
cwtl
les
addb
push
or
add
and
int
addb
sti
movsl
pop
and
in
pop
mov
pop
add
jmp
mov
adc
add
sbb
add
or
orl
shrb
lret
or
push
mov
lret
and
orb
add
push
cltd
movb
mov
stos
leave
pop
and
loopne
mov
pop
adc
xor
push
cltd
les
push
mov
add
hlt
inc
jns
les
xor
cltd
iret
add
loope
add
leave
cld
push
pop
pop
movl
cltd
xchg
shrb
add
sub
les
cld
add
shrb
xchg
xchg
stos
mul
pop
aaa
lret
and
pop
and
and
push
cltd
fst
imul
mov
push
cwtl
jmp
std
rolb
loope
mov
andl
cmp
shlb
inc
and
push
fwait
sti
faddl
inc
mov
push
mov
push
add
pusha
jl
enter
sti
xlat
rolb
add
repz
add
mov
frstor
stos
add
pop
es
stos
int
es
stos
lret
jle
stc
lahf
add
in
stos
fistl
mov
pop
ss
int
pusha
mov
pop
lret
pusha
add
pop
testb
fistl
sti
lret
pop
es
hlt
add
push
fcmovnb
loopne
iret
and
pop
cmp
loopne
and
orb
loop
inc
or
cmp
out
mov
neg
sbbb
add
add
rcrb
shrb
pop
mov
lahf
fiadds
rcrb
mov
push
xchg
pop
es
and
push
jb
or
rcrb
xchg
rcrb
add
add
fcompl
and
shll
push
fstps
xchg
sbb
and
rolb
and
ss
fldl
add
pop
mov
add
rcr
push
fnstenv
pop
and
rcrb
add
pop
stc
inc
and
sti
add
inc
pusha
add
sbb
loopne
jo
ss
addb
push
inc
pop
add
xor
popa
or
pop
dec
lock
and
fidivl
arpl
mov
add
push
add
add
push
push
add
push
add
add
add
adc
mov
sub
add
add
jecxz
test
mov
mov
xor
icebp
add
adc
icebp
arpl
aam
add
in
add
mov
add
push
and
mov
rolb
mov
mov
pop
iret
nop
add
cltd
fiadds
ficoms
iret
hlt
lcall
push
pushf
pavgw
push
test
mov
rcll
jno
pushl
adc
add
push
imul
int
dec
inc
add
inc
add
push
inc
add
dec
lods
mov
ret
rolb
filds
lret
ss
jo
nop
sbb
stos
les
call
pop
call
add
in
add
adc
add
shrb
add
addl
rcrb
aaa
and
rcrb
sbb
or
sub
rclb
push
jo
pop
and
rclb
scas
addb
and
sbb
and
and
add
mov
pop
aaa
pushf
stos
loopne
stos
in
add
stos
cli
xchg
rcrb
jbe
loopne
aaa
fldt
push
mov
ss
inc
add
push
addl
ss
addl
add
mov
stos
addl
lret
ss
add
stos
adc
inc
notl
loop
loope
add
ss
adc
addl
ss
ss
addl
ss
adc
addb
add
add
add
add
leave
shrb
pop
push
rcll
sub
stos
enter
pop
jecxz
push
add
mov
popa
add
or
push
aaa
icebp
rolb
fisubrl
fisubrs
add
stos
int
aaa
rcrb
addb
or
addb
and
faddl
rcrb
xorl
pop
xor
xlat
cmp
or
add
pop
and
les
ss
rolb
inc
cmp
rolb
int
rolb
repnz
outsb
addb
add
andl
rcrb
mov
sahf
rcrb
addb
add
ss
pop
addb
add
jecxz
or
pop
aad
maxps
add
xor
and
sub
xchg
rcrb
rcrb
addb
add
xor
mov
stos
rcll
and
rcl
pop
or
add
add
xor
pop
and
arpl
add
mov
mov
rcrb
jo
mov
add
add
lock
push
dec
sti
add
and
pop
dec
addb
lock
xor
pop
and
add
pop
adc
adc
pop
xor
rcrb
rcrb
rolb
sub
lret
and
mov
roll
jmp
mov
rclb
rolb
in
sbb
adc
fwait
sub
add
adc
in
adc
xor
inc
pop
and
rcrb
rolb
cmp
lock
je
sbb
xor
rcll
push
add
and
sub
xor
sub
sub
inc
pop
and
out
mov
push
cmp
add
icebp
rcrb
addb
rcrb
or
add
adc
lock
loopne
pusha
and
rcrb
inc
add
or
lods
mov
roll
roll
ret
lds
rolb
ljmp
adc
add
sbb
pop
cmpsl
les
pop
mov
add
ret
pop
push
add
add
adc
stos
or
and
rcrb
aam
pop
loopne
add
pop
ret
roll
mov
mov
loope
xchg
cwtl
int
fisubs
in
mov
add
mov
mov
cld
fs
gs
ss
add
add
inc
stos
jne
inc
mov
test
sbb
add
add
inc
pop
scas
mov
addb
arpl
pop
push
repnz
adc
pop
stc
push
scas
movsl
add
movsb
add
push
mov
mov
add
mov
add
rcrb
rolb
and
movl
push
add
push
nop
mov
add
sbb
and
mov
push
test
fisubrs
aaa
push
add
add
pusha
push
push
add
push
add
push
add
mov
add
xor
inc
outsb
xchg
add
rcrb
xchg
add
lea
inc
xchg
add
rcrb
fwait
add
data16
xor
test
add
jecxz
clc
sub
add
pop
push
xor
ss
rorb
bound
out
icebp
add
mov
push
pop
cmpsl
lahf
xor
mov
add
popa
pop
xor
aaa
sub
sti
mov
add
add
stos
out
aaa
shrb
fldt
add
faddl
add
fwait
sti
rol
xlat
add
add
xor
sub
xor
add
fiaddl
xor
add
or
add
sbb
sbb
imul
rolb
pop
rcr
add
push
mov
add
xchg
pop
and
add
cmp
sti
dec
pop
or
sti
ficomps
add
add
pop
pop
es
orb
pop
aas
fstl
outsl
sub
mov
mov
push
fdivl
filds
pop
pop
es
leave
pop
pusha
es
rcrb
add
fldcw
cmp
or
add
add
xchg
fwait
sti
sti
out
add
test
lods
fcomps
adc
aad
dec
add
orl
and
fiaddl
shrb
and
andl
cmpb
rcrb
and
and
rcrb
add
inc
andl
andb
pop
in
addb
shlb
sbb
add
rcrb
add
sbbl
sbbb
and
and
cmpsb
cmpl
add
addl
mov
add
subl
into
rcrb
add
subl
subb
jns
pop
pop
and
pop
sbbl
subl
mov
mov
or
pop
push
mov
jg
adc
rolb
pusha
and
sbbb
sti
mov
rcrb
addb
adc
rcll
add
pop
and
rcrb
add
add
roll
ss
addb
pop
or
pop
stos
int3
push
xchg
add
iret
hlt
adc
orb
pop
rcrb
sub
aas
dec
mov
xlat
cmc
add
scas
int
or
pop
xlat
repz
add
inc
in
or
incb
inc
or
inc
add
sub
and
mov
mov
add
sar
push
mov
sbb
xchg
sti
inc
add
sti
pop
and
stos
lock
add
lahf
add
push
stos
into
mov
orb
push
orb
mov
ss
add
stos
cld
rorl
or
push
mov
rcrl
stos
add
stos
int3
xchg
adc
adc
pop
mov
adc
lahf
ss
mov
stos
xchg
adcb
adc
inc
and
lea
add
pushf
verr
rcrb
sub
and
shlb
pop
aaa
out
inc
push
sbbb
ljmp
inc
or
inc
or
add
mov
add
add
sbb
adc
add
pop
push
jmp
push
adcb
inc
sub
loop
mov
cmpps
xor
add
loopne
inc
sbb
push
inc
inc
push
push
loopne
push
add
and
rcl
push
ja
adc
add
pop
pop
pusha
jbe
and
rcrb
add
xchg
stos
and
xchg
rcrb
and
ss
pop
inc
add
xor
xchg
mov
mov
and
xlat
aaa
sldt
pusha
push
mov
and
lds
pop
scas
dec
addb
sbb
jg
ret
loopne
lods
ret
pusha
or
pop
sub
iret
loopne
add
xor
stos
scas
pop
add
shrb
daa
or
push
ret
and
and
mov
popa
inc
movl
push
addb
push
arpl
add
rcrb
push
mov
inc
add
xor
stos
loope
push
jae
and
lods
pop
push
addb
or
or
add
cltd
out
pop
arpl
repnz
add
into
or
add
rcrb
sub
and
loop
aaa
iret
addb
testl
stos
shlb
and
mov
ror
ss
add
inc
ss
add
ss
add
mov
and
push
add
xlat
stos
popf
push
pop
and
and
popa
inc
add
mov
lds
push
fsincos
imul
pop
pop
aas
sub
pop
loop
pusha
mov
or
add
push
addb
test
add
ja
stos
fstps
add
fisubrl
fimuls
insb
pop
mov
pop
loopne
ja
stos
dec
ja
or
pop
lea
push
xchg
xlat
push
add
pop
rcrb
movsl
loopne
pop
pop
mov
pop
push
stos
add
ljmp
sub
loopne
insl
mov
adcl
jmp
popa
or
add
iret
push
xchg
rcll
add
push
mov
add
fsts
and
es
and
push
cmp
rclb
pop
add
and
pop
loop
inc
adc
stos
shrb
das
iret
mov
pop
lret
and
iret
xor
xlat
push
fwait
and
sbb
xlat
mov
rcl
pop
js
push
out
inc
rcrl
pop
shrl
ss
sbb
push
pop
pop
or
pusha
add
add
add
subb
and
inc
or
add
sbb
pop
cmpsl
add
lahf
add
and
pop
repnz
and
sbb
loope
stc
push
loopne
sarl
out
and
lret
sub
stos
add
pop
and
stos
pop
and
call
pop
ss
mov
lock
push
xor
rcll
mov
sarb
add
push
fistl
xlat
rolb
pop
xor
ficomps
inc
adc
rcrb
addb
xor
add
jns
add
xcrypt-ctr
cmpsl
sbb
xlat
pop
sar
mov
or
rolb
push
inc
add
or
pop
mov
pop
mov
stos
ror
pop
leave
adc
push
and
pop
stos
shl
sub
stos
xlat
xor
in
loopne
hlt
sbb
les
xor
shll
pop
rclb
rolb
into
rorb
aam
xor
pslld
add
xchg
and
add
in
sbb
ss
bound
shlb
sbb
add
pop
adc
adc
sbb
pusha
add
and
enter
lret
jl
inc
icebp
add
mov
push
fwait
sti
xlat
push
test
push
cltd
frstor
adc
push
cltd
faddl
push
notl
add
push
lcall
sbbb
add
cmp
add
mov
stos
xor
mov
add
add
jg
add
xor
rcrl
sahf
add
xor
push
xor
or
xor
ficompl
sahf
add
xor
mov
jns
add
xor
andb
add
push
sahf
add
xor
xor
add
adc
xor
push
xor
pop
xor
fbstp
add
adc
add
xor
stos
call
add
add
add
add
sahf
add
setle
xor
push
sahf
add
sahf
add
inc
xor
popf
or
notl
sahf
add
add
add
add
xor
jp
add
xor
rclb
push
add
add
xor
mov
adc
pop
cmpsl
iret
or
test
add
sub
mov
push
aaa
fildl
xor
shrb
push
aaa
faddl
pop
aas
ficomps
sti
fistpl
fsubr
xlat
sbbb
fildl
push
xlat
stos
fidivl
shr
or
add
push
mov
fstl
or
in
or
fistl
xlat
mov
fildl
inc
mov
xor
in
add
out
lret
stos
aad
and
and
or
mov
add
das
in
stos
add
mov
push
bound
cmp
push
je
add
mov
push
mov
mov
pop
popa
add
push
lcall
shlb
sbbb
stos
shlb
lret
push
lcall
and
out
lret
add
stos
fstl
pop
pusha
add
pop
js
and
add
add
iret
loope
pop
xor
loopne
ret
lahf
add
mov
add
stos
mov
mov
xor
jo
push
add
nop
jno
and
mov
add
push
and
pop
pop
stos
loopne
fcoml
add
xchg
cmp
and
lcall
ret
or
mov
add
adc
mov
fmull
cltd
lret
mov
add
test
xor
pop
mov
add
push
jmp
mov
inc
addb
ss
loopne
roll
fimuls
push
xorb
adc
mov
add
mov
and
daa
and
and
xlat
lea
mov
mov
adc
add
aaa
setbe
rorl
sti
pop
mov
rclb
rolb
and
xchg
int3
push
orl
lock
adc
and
add
add
fidivs
sub
pop
xor
mov
iret
lahf
add
add
add
daa
mov
mov
stos
xlat
push
andb
mov
push
pop
and
pop
pop
stos
and
add
add
mov
and
mov
xchg
sbb
insb
push
lcall
add
jb
shll
add
daa
and
aam
stos
sub
add
pop
mov
and
xlat
pusha
adc
lods
sbb
fistl
sbb
or
mov
xlat
add
push
pop
xor
mov
pop
push
push
jnp
jle
sti
in
add
and
or
ljmp
add
and
push
loop
into
lahf
dec
add
add
add
push
mov
loope
add
jae
in
inc
jns
sbb
movsb
stos
les
stos
add
lcall
and
fwait
leave
icebp
adc
xor
mov
adc
mov
addb
stos
push
add
pop
cmp
pop
and
lock
push
add
push
and
and
out
fwait
sti
xlat
mov
push
aaa
iret
jno
shr
push
in
add
push
mov
shr
mov
add
lahf
pop
daa
fldt
sahf
pop
xlat
lods
xor
add
xor
aaa
mov
sub
aaa
inc
add
add
imul
stos
ret
sbb
and
xor
or
adcb
xor
mov
sub
mov
adc
rorb
lahf
rorb
addb
icebp
push
xchg
xor
add
jo
mov
and
iret
and
popf
pusha
push
push
andb
lret
jo
and
rcrb
nop
pop
push
loop
adc
sbb
fisubs
fldenv
xor
and
adc
mov
push
add
add
stos
xor
and
xor
loop
sti
mov
and
xchg
push
pop
shrb
shrl
push
add
pop
aaa
fsubrl
lret
stos
into
mov
inc
xor
push
cmp
and
popa
add
jo
cltd
fcmovnbe
jo
inc
pop
cmp
push
daa
fmull
mov
lret
add
iret
in
stos
fstl
call
sub
add
pop
and
push
lcall
in
stos
lret
mov
add
add
and
push
or
mov
in
push
jl
fstps
add
push
add
shr
mov
mov
fsubrl
push
scas
fistpl
fistpl
add
mov
mov
sbbl
scas
fnsave
rclb
add
add
mov
and
add
push
add
inc
pushf
add
fistl
add
cld
add
add
push
daa
push
aaa
pop
cmp
fwait
sub
rcrb
pop
add
cmp
mov
add
add
mov
inc
add
fsubrp
sahf
fildl
sbb
push
daa
add
add
add
and
push
aaa
in
daa
push
add
pop
push
fistpl
dec
iret
inc
pushf
add
pop
jle
add
in
push
add
push
push
pop
add
add
add
in
fcmovbe
or
jo
jl
and
and
sub
push
push
add
aaa
aam
pop
push
push
cli
xorb
and
aas
fadds
or
push
fbld
add
rolb
or
aaa
add
in
push
sbb
push
xor
add
lret
add
and
add
lahf
add
stos
xlat
or
lret
or
push
lcall
and
adc
sbb
push
mov
or
pop
loop
mull
popf
add
mov
push
add
mov
add
stos
icebp
popa
xchg
or
rsm
lds
dec
andb
sbb
repz
add
fiaddl
dec
or
add
adcb
movsb
add
mov
push
daa
and
sbb
mov
stos
sti
sub
test
add
stos
fucomi
pop
xor
in
add
shlb
add
sbb
add
in
sub
add
mov
imul
and
cmpb
sti
rcll
add
cltd
add
iret
lods
cmp
add
jl
xor
mov
and
das
push
stos
or
aaa
repz
add
cmp
lcall
rol
add
add
add
add
and
iret
in
or
pop
les
or
lcall
lcall
xor
iret
add
add
stos
icebp
push
sbb
lcall
sti
aaa
jl
andps
pop
fiadds
cld
pop
in
add
mov
xchg
rcrb
sub
pop
add
stos
flds
pop
stos
divb
mov
rorb
add
stos
lea
rclw
rcl
imul
out
orl
lcall
lcall
pop
pop
and
add
dec
pop
mov
xchg
pop
cmpb
pop
pop
fidivl
pop
inc
or
mov
or
inc
add
stos
rcrb
add
aam
or
and
ljmp
stos
into
aaa
add
and
and
stos
xlat
add
aas
rcrb
fcoms
daa
pushf
and
adc
das
add
addb
pop
sub
scas
add
mov
aam
and
fstl
shr
add
add
fnstcw
add
shrb
pop
es
movsl
test
pop
push
add
mov
adcl
or
pushf
add
mov
lret
lahf
add
sbb
mov
inc
add
push
add
add
mov
add
mov
add
mov
lret
rorb
lcall
or
fisttpl
adcb
and
pop
add
aaa
test
and
mov
pop
aaa
pusha
inc
xor
add
addb
add
xor
and
mov
and
stos
xlat
push
push
pop
and
and
jbe
arpl
rcll
push
fs
push
push
pop
pusha
add
xchg
add
aaa
jmp
or
push
push
cmp
aaa
cli
ret
pop
aam
push
pop
adc
push
inc
add
into
dec
add
inc
add
push
pop
or
sbb
xor
in
and
push
call
pusha
push
push
nop
xchg
cwtl
pop
push
add
mov
loopne
add
in
pop
lea
and
aaa
ja
and
add
ljmp
sbb
mov
and
mov
inc
or
addl
and
sbb
mov
push
pop
or
and
dec
addl
add
add
lret
shll
add
add
fiaddl
add
sub
add
shrb
pop
push
andl
add
or
and
pop
and
sbb
add
cmp
jl
cmp
sarb
pop
xor
adcb
push
push
mov
and
addb
int3
mov
test
lds
fisubrs
fsubl
adc
fiaddl
push
xor
push
fiaddl
inc
push
and
add
or
mov
adc
stos
into
push
stos
jae
and
and
aaa
sub
add
rol
lret
push
push
loopne
or
add
add
add
fs
fldl
pushf
add
lock
pop
pop
stos
sbb
pop
mov
push
cmpb
pop
xor
flds
and
arpl
iret
inc
sub
test
rclb
sti
in
sub
mov
xlat
bound
cmpb
adcb
sbb
push
nop
cwtl
mov
inc
cmp
inc
inc
cmp
dec
cmp
or
call
mov
cmp
out
inc
mov
pop
cmpb
ret
push
pop
cmpb
mov
pusha
adc
pop
add
loopne
loope
ret
xor
and
and
arpl
jmp
sub
mov
pusha
add
mov
aaa
addl
rolb
roll
loopne
mov
adc
add
sub
cmpsl
mov
stos
pusha
insl
iret
and
sti
rcrb
pop
sub
cmpsb
call
push
xor
add
mov
push
stos
and
add
cli
push
stos
and
cltd
mov
fcoml
aas
nop
fisttpll
push
pop
inc
mov
xchg
pop
and
addb
add
xlat
push
cltd
add
push
cltd
iret
push
cltd
leave
in
adc
sbb
flds
add
xchg
lret
and
and
int3
mov
add
pusha
fisubrs
inc
loope
sbb
push
cltd
xlat
xor
pop
sub
stos
fdivs
jnp
outsb
and
inc
and
sbb
add
mov
leave
mov
adc
fidivs
and
rolb
shlb
in
pop
lahf
add
push
repz
shrb
and
pop
pop
or
bound
xor
movl
push
stos
aaa
aaa
add
and
aaa
inc
daa
and
push
lcall
lcall
lret
add
aad
and
push
lcall
adc
mov
or
add
add
adc
shll
xor
bound
add
roll
mov
sub
mov
mov
mov
add
mov
repz
xchg
add
push
add
or
push
mov
and
mov
inc
jbe
push
loop
add
push
adc
push
cltd
frstor
iret
push
cltd
add
sbb
fildl
rcll
push
stos
sti
and
or
lret
xorb
or
mov
or
inc
jg
add
js
and
loop
lret
sub
and
jp
mov
fisubs
lret
lahf
add
stos
cld
push
lcall
pop
mov
push
lcall
xchg
add
nop
add
mov
add
nop
pop
or
outsb
inc
inc
lret
lea
add
push
sbb
mov
add
iret
add
lret
mov
aam
add
sbb
xor
sbb
pop
lock
pop
xor
or
xor
jo
mov
mov
inc
popa
mov
cmc
inc
inc
and
mov
add
add
sub
and
and
push
inc
pop
loope
fwait
sahf
mov
adc
xor
sub
xlat
xchg
out
adc
sub
or
sub
out
test
enter
and
push
push
adc
adc
rclb
sub
mov
mov
add
push
sbb
in
sbbb
adc
sbb
inc
push
mov
lea
dec
push
add
mov
sbb
sub
cmp
mov
add
fildl
or
insb
and
mov
lds
aaa
push
pop
daa
rorl
cmp
push
add
orb
fiadds
addr16
xor
push
pop
mov
lods
and
adc
push
daa
add
sub
push
test
pop
add
push
lcall
push
pop
xor
add
inc
loopne
nop
daa
xchg
daa
aaa
or
add
xor
daa
loop
shll
inc
push
lock
sbb
push
dec
adc
shrb
cwtl
in
sub
test
sbb
sub
sbb
pusha
sbb
push
mov
jmp
push
add
sbb
adc
xor
ja
mov
mov
mov
loopne
and
jnp
repz
in
push
push
xchg
and
add
imul
out
lret
xlat
add
lcall
add
sbb
xchg
dec
shrl
daa
sbb
add
and
adc
pushf
inc
push
inc
or
rcrb
xorb
adc
rcrb
jo
pop
out
add
push
xchg
jae
mov
xchg
pop
mov
mov
shlb
mov
shrl
pop
and
rcrb
mov
inc
and
sahf
add
xlat
cli
mov
mov
xor
pop
stc
add
xor
shrb
iret
xor
add
int
mov
push
push
xor
xchg
mov
xor
add
xor
sub
add
xor
and
out
push
add
xor
push
add
xor
add
push
shll
add
fldenv
lahf
add
inc
jo
shrl
sysenter
iret
jno
push
adc
addl
pop
aas
add
push
fldlg2
pop
push
sbb
add
xor
mov
xchg
sbb
dec
mov
add
xor
pop
xor
stos
xor
jnp
add
xor
xor
push
xor
xor
adc
add
xor
cmp
add
add
add
mov
push
aaa
mov
mov
mov
pop
iret
push
daa
pusha
inc
add
sarb
dec
and
and
shrl
aas
movl
lcall
lret
add
pop
sbb
and
mov
add
mov
add
fnsetpm(287
sbb
dec
mov
aad
push
xor
add
test
xorb
dec
aaa
cld
and
push
cltd
xor
push
loop
nop
add
pop
or
fildl
push
fld
add
add
stc
add
lock
pop
mov
lock
fisttpll
and
rcrl
fisubl
xchg
pop
add
pop
pop
adc
add
add
mov
stos
fisubl
addb
imul
xchg
jo
mov
mov
xor
nop
or
inc
out
or
jo
add
mov
lcall
push
nop
cmp
pusha
add
jg
into
adc
adc
push
daa
fisubrs
and
stos
int
add
lahf
add
popf
jne
ret
xorl
xor
lret
add
and
fistl
xor
aaa
mov
mov
sbb
in
and
mov
sbb
add
in
stos
shlb
mov
mov
pop
push
mov
addb
aaa
xor
popa
jne
rcrb
pusha
or
stos
push
iret
and
sub
loop
mov
mov
scas
xlat
rclb
and
mov
or
pop
pusha
add
ficomps
daa
inc
ss
and
push
rclb
mov
cli
and
cltd
cmp
mov
add
or
cltd
rcr
dec
mov
push
inc
add
aaa
pop
nop
add
add
and
jmp
inc
or
or
mov
fiadds
add
and
imul
rcrb
inc
inc
or
popa
mov
add
mov
in
stos
stos
push
xorb
out
iret
xor
orb
fiadds
add
das
push
lcall
and
add
lahf
add
stos
jecxz
add
cmc
ficomps
daa
add
jg
add
xor
mov
lret
add
lcall
sub
add
sbb
aaa
push
push
and
add
add
add
andb
xlat
and
out
and
push
lcall
roll
mov
pop
xor
mov
push
stos
das
aaa
add
pop
pop
stos
mov
add
mov
fidivl
fucomp
and
rcl
imul
pop
ret
xchg
dec
and
add
movsl
and
add
lret
mov
add
jo
inc
sbb
clc
and
adc
lret
js
lcall
lods
pusha
xor
das
aaa
incl
xchg
add
sbb
addl
sti
add
and
add
sbb
daa
pop
pop
stos
sbb
sbb
mov
in
and
lret
or
add
pop
add
fwait
mov
iret
add
add
and
popf
add
lret
or
pop
add
stos
hlt
mov
and
rolb
lldt
or
and
and
push
lcall
sbb
fcmovnu
add
xor
mov
inc
dec
and
and
lret
sbbl
test
add
mov
mov
mov
sbbl
stos
pushf
and
cmpb
sbb
stos
out
sub
roll
clc
add
fisubrs
roll
and
push
xlat
push
sbb
mov
add
add
in
pop
addb
add
repz
sbb
popa
inc
sbb
inc
sbb
in
sbb
inc
sbb
pop
dec
and
ret
xlat
ret
or
sbb
inc
or
sbb
xorb
jns
lret
xor
stos
nop
lret
push
ljmp
adc
adc
and
add
adc
add
mov
sbb
cwtl
sbb
stos
cltd
aaa
lock
add
add
in
mov
mov
imul
add
inc
adc
andl
aas
lcall
aaa
incb
jge
mov
pop
mov
test
inc
push
lcall
push
addb
xchg
subb
xor
push
lcall
xchg
and
mov
lret
lcall
nop
daa
and
pop
add
stos
pop
inc
xchg
add
inc
xchg
sub
add
xor
pop
sbb
inc
cmp
lcall
rcl
or
cmpps
cmp
push
lcall
lahf
push
inc
pop
sbbl
cmp
js
cmp
addl
mov
pushf
rorb
in
pop
shll
add
mov
imul
pop
inc
mov
dec
add
lcall
sub
addl
daa
faddp
adcb
hlt
stos
cmp
sbb
push
daa
push
sbb
inc
rcll
xor
mov
sub
push
stos
daa
aaa
ja
and
rcrb
pop
sub
sbb
inc
mov
mov
mov
ret
pop
add
add
or
leave
lahf
addb
sbb
mov
popl
add
add
or
out
add
das
pop
and
rcrb
add
es
fiaddl
pop
es
stos
rcrb
add
lcall
add
lods
add
push
mov
incb
insb
add
pop
daa
and
loop
push
mov
ficoml
ljmp
add
fwait
ljmp
loopne
add
dec
stos
out
sbbb
mov
or
ss
lcall
rcll
mov
mov
adc
add
andb
and
xor
addr16
sub
adc
pop
xor
rcrb
aaa
or
and
sub
sbb
rcrl
push
xchg
or
push
das
pusha
xchg
sub
sub
pop
add
mov
mov
mov
mov
add
inc
cmp
imul
pusha
push
fldenv
stos
lahf
aaa
add
pop
cld
adc
call
sti
sti
add
stos
not
sbb
loopne
mov
sti
iret
or
ret
and
adc
sti
repz
add
and
addr16
or
int
or
test
pusha
jnp
and
inc
mov
inc
rolb
add
add
stos
mov
cmp
inc
in
adc
pop
push
add
faddl
cmp
push
daa
int3
mov
sbb
int3
daa
in
add
sti
test
lods
ftst
addl
mov
popl
test
mov
and
stos
sti
and
aaa
dec
cmc
sub
push
dec
adc
mov
mov
pop
mov
addb
addb
pop
mov
add
jmp
cltd
loopne
mov
out
and
jmp
add
xlat
and
and
repz
and
pusha
dec
and
inc
roll
leave
mov
xchg
arpl
pop
jecxz
pusha
pop
loopne
popl
mov
inc
push
and
and
and
add
aas
cld
sbb
inc
sub
pop
imul
sub
mov
pop
pop
or
pop
jle
add
stos
adc
add
inc
xor
das
mov
cltd
iret
in
xor
faddp
pop
mov
lcall
xor
or
push
clc
sarb
decb
inc
cmp
add
sarb
stos
fld
loop
leave
inc
js
and
stos
aaa
mov
in
loope
add
mov
aas
mov
popa
loopne
xor
in
pop
loopne
add
mov
rol
push
loop
add
add
xchg
out
sti
mov
stos
mov
jae
sbb
push
shlb
iret
rorb
addb
popl
rcrb
mov
sti
lret
fisubrs
stos
in
fiadds
push
add
adc
add
fsubl
mov
out
jno
stos
add
pop
pop
and
rorb
dec
lcall
adc
pop
shl
loopne
stos
add
xor
in
or
or
xchg
add
test
push
xchg
sti
adc
push
xchg
xlat
pusha
add
push
xchg
cli
roll
dec
dec
mov
sub
and
add
push
cltd
xlat
cld
cltd
rorl
sti
aam
sbb
loopne
inc
or
inc
or
or
sbbb
inc
shrb
daa
and
pop
pop
nop
add
test
xor
add
mov
stos
xchg
mov
xor
add
add
outsb
add
arpl
shlb
sbb
sti
aam
mov
subl
add
push
sub
mov
push
stos
inc
and
inc
stos
inc
mov
test
add
daa
test
dec
addb
in
stos
xchg
adc
push
stos
push
xlat
test
pop
adc
in
outsl
faddl
sbb
sbb
add
jo
daa
fsubrl
ffree
dec
and
ret
or
daa
mov
fidivs
mov
mov
mov
xchg
imul
ficomps
aas
xlat
fcompl
and
pop
xor
pusha
pop
mov
iret
pushf
add
mov
xor
add
add
pushf
add
sti
leave
aaa
mov
push
sahf
aaa
push
xor
dec
sbb
add
aaa
nop
sbb
mov
xor
aaa
jno
add
mov
lret
dec
mov
mov
xchg
add
aaa
add
push
inc
push
push
mov
pop
arpl
das
rolb
stos
clc
add
sbb
add
test
cmpsb
xor
aaa
push
mov
rolb
aaa
lock
sbb
add
addb
or
add
aaa
add
add
add
in
xor
pop
pop
mov
dec
pop
xchg
pop
aas
sub
pop
pop
iret
shlb
in
inc
rcrb
push
aaa
and
sub
add
sub
or
lods
push
add
in
cltd
add
add
push
xlat
stos
lret
sbbb
lea
lcall
fistpl
xor
int3
mov
pop
push
xlat
inc
add
add
iret
pop
sbb
and
in
mov
jmp
clc
add
stos
lret
popa
cmpsl
andb
loope
aaa
in
add
push
lcall
and
sbb
jo
add
xor
or
mov
loopne
subb
add
add
add
add
mov
ss
and
jo
fisubrs
lcall
push
and
and
aaa
cmp
and
out
mov
nop
pop
and
aaa
mov
pop
push
add
adc
sbb
pop
add
cwtl
push
lcall
add
add
mov
ret
add
ffree
add
std
pusha
add
push
fcoms
daa
mov
pusha
sbb
aaa
inc
cmpsl
sahf
add
push
pop
adc
fisttpl
rcrb
jo
pop
add
pop
and
sbb
inc
pop
push
pop
and
adc
and
roll
mov
pop
daa
fstl
mov
imul
faddl
mov
add
jo
add
movups
xor
fcompl
sbb
push
push
jo
push
fadds
xchg
add
add
mov
sbb
les
add
adc
cld
adc
and
xchg
lds
arpl
and
xlat
stos
lcall
mov
mov
flds
nop
add
and
arpl
push
xor
frstor
and
add
nop
add
fcmovnbe
sbb
add
add
cmp
in
loopne
push
lcall
add
sbb
add
adcb
mov
jo
mov
add
dec
and
test
add
and
out
xor
stos
lds
push
ljmp
rolb
add
add
or
pop
mov
leave
push
call
adc
repnz
and
mov
add
push
add
push
sbb
and
xor
mov
mov
xlat
push
mov
and
pop
loopne
stos
xchg
loope
aaa
and
movl
mov
sub
xchg
push
push
orb
adc
and
or
and
xchg
loopne
fimull
les
test
jmp
scas
movsl
mov
xchg
add
stos
mov
inc
xor
cmp
and
pop
ja
add
jbe
fildl
jo
loopne
fimull
aaa
aam
push
and
inc
aad
or
jl
and
pop
pop
push
pop
xor
stos
nop
hlt
aaa
add
pusha
dec
test
rolb
adc
aaa
add
add
pop
sbb
add
dec
movsb
pop
lahf
inc
mov
adc
push
and
rolb
das
nop
add
add
and
aaa
push
repz
lcall
adc
push
add
out
add
sub
inc
fst
lock
aaa
cmpb
add
iret
call
or
mov
mov
add
pop
push
adc
in
add
cmp
push
outsb
icebp
push
nop
adc
sub
loop
rcll
cmpsl
lret
lahf
add
nop
popf
add
mov
aaa
imul
fistpl
iret
add
add
add
ret
lock
shlb
fidivl
and
push
and
and
addb
xor
pusha
or
adc
out
mov
add
sbb
fdivl
lock
lret
in
and
mov
incl
mov
subl
add
fstps
out
push
pop
sti
xchg
add
add
push
arpl
faddl
add
sbb
inc
sahf
add
in
sahf
add
jecxz
push
jno
adc
mov
fiadds
mov
add
add
and
add
leave
lahf
add
imul
pop
aaa
add
ret
mov
sbb
push
xor
mov
xchg
fadds
movl
sti
mov
pop
mov
movl
or
add
pop
mov
popa
xchg
mov
add
add
pop
add
mov
mov
and
and
rcrb
add
rcrb
xchg
shrb
sti
add
sub
push
add
mov
add
fldenv
and
push
loop
ror
add
aad
sub
push
add
and
pop
adc
and
sbb
fadds
mov
iret
pushf
add
or
xor
pop
rolb
add
lret
push
sbb
adc
pop
mov
mov
arpl
and
add
sub
sub
pop
add
orb
aaa
shlb
add
and
add
out
sti
ljmp
rcrb
add
addb
mov
or
pop
jo
add
inc
add
and
lahf
add
pop
stos
in
fnsave
pop
aaa
xchg
jne
pop
daa
sbbl
mov
adcb
adcb
dec
adcl
mov
int3
aaa
and
and
adcb
xlat
add
out
mov
push
or
jl
pop
stos
mov
pop
mov
divl
popf
add
cltd
fcmovnbe
dec
inc
sbb
adc
cmp
add
aad
push
das
aaa
inc
sub
stos
xlat
adc
pusha
out
daa
rolb
out
add
and
and
mov
sub
add
add
and
inc
roll
out
stos
add
gs
cmpb
andb
mov
and
add
ret
aaa
stos
inc
cmp
dec
and
push
and
add
stos
adc
mov
adc
mov
xchg
add
mov
mov
and
iret
and
push
aaa
pop
xor
das
pop
sub
add
push
lret
rorb
bound
push
inc
mov
flds
les
inc
add
iret
cltd
add
add
push
pop
aaa
fiaddl
add
pop
pop
stos
fucomi
pop
xor
fsubr
pop
lahf
xor
in
pop
add
mov
pop
xor
mov
cltd
pusha
iret
mov
lcall
add
pop
adcb
daa
mov
add
aaa
stc
jecxz
shlb
jns
push
pop
inc
movsb
rcr
sbb
xor
fadds
add
rolb
push
xchg
stos
das
push
daa
andb
daa
mov
lret
xor
push
xchg
xlat
push
lcall
aaa
jge
and
adc
addb
aaa
add
pop
add
mov
test
xor
xlat
aaa
mov
mov
pushf
add
add
push
xchg
xor
or
loop
add
pop
add
sti
push
mov
stos
shlb
call
or
push
xchg
rcll
push
or
add
stos
xor
add
addb
cmp
mov
add
stos
pop
push
andb
push
sbb
add
ror
inc
mov
add
iret
add
push
adc
fldl
in
add
andb
pop
rolb
mov
add
xlat
mov
loopne
pusha
lret
and
cmp
sbbb
fldenv
lret
mov
aam
popa
push
add
aaa
push
xorb
addb
pop
and
outsl
add
and
pusha
and
push
loope
dec
add
push
lcall
aaa
inc
add
in
add
scas
lret
aaa
fiadds
adcl
mov
loopne
ficompl
rclb
pop
inc
add
push
out
xor
mov
mov
add
pop
push
cwtl
iret
addl
push
xchg
mov
or
and
aaa
push
sub
pop
aaa
mov
test
shlb
loopne
mov
aaa
jmp
out
mov
pop
subb
scas
pusha
push
dec
push
lcall
adc
test
rcrb
and
or
and
aaa
sub
and
push
lcall
mov
xor
and
add
add
out
add
jmp
addb
or
outsb
mov
push
lcall
inc
xor
lcall
mov
inc
or
add
adc
pop
test
loop
cmp
pop
or
cmp
add
add
inc
insl
add
sti
int3
add
pop
lret
mov
shll
aaa
jb
popa
dec
rolb
pop
popa
outsl
push
mov
adc
mov
add
mov
test
push
sbb
jbe
loope
rcrb
or
lret
push
add
mov
addb
add
add
add
pop
mov
and
addb
aaa
or
inc
bound
iret
bound
iret
mov
bound
lcall
inc
xchg
jg
inc
addb
push
mov
stos
sti
aaa
loopne
add
and
sub
shrb
xor
aaa
push
push
xor
add
xchg
lret
and
jae
rorb
mov
aaa
jo
add
lahf
test
pusha
xchg
aaa
stc
das
and
add
push
fwait
sti
enter
add
and
sub
and
mov
aaa
cmp
sahf
aaa
add
les
loopne
mov
or
and
cmp
push
fstps
mov
mov
pusha
xor
out
addb
lcall
lods
lahf
out
sbb
in
inc
inc
pop
jmp
or
movsb
and
push
daa
in
stos
sbb
push
flds
andb
mov
popl
shl
dec
mov
mov
add
and
push
pop
mov
pop
push
rolb
pop
and
iret
pop
mov
lcall
and
and
pop
daa
and
stos
das
aaa
xor
add
add
add
mov
stos
iret
pop
shrb
andb
movsl
rolb
add
xchg
mov
xor
fildl
add
push
daa
push
pop
aas
and
and
mov
pusha
daa
sbb
lret
jb
loop
sub
add
pop
mov
arpl
or
sub
jecxz
and
or
add
push
in
dec
movb
xorb
inc
adc
aaa
enter
pusha
jne
xchg
adc
and
push
stos
das
in
add
ja
or
add
fstl
movsb
stos
sub
adc
pop
push
lcall
sbb
aaa
adc
add
sbb
dec
mov
rclb
mov
inc
pop
nop
je
lret
popa
jnp
sbbb
and
loopne
pop
loop
lock
add
out
pusha
xchg
arpl
or
lds
insl
lock
insl
into
or
loopne
dec
fistpl
adc
ficoms
andb
and
pop
shll
shrl
add
rolb
xlat
push
cltd
push
sbb
and
xor
mov
add
push
add
push
push
lcall
loopne
mov
incl
add
aas
stos
xlat
pusha
stos
rolb
lret
or
pop
sbb
mov
xchg
and
int3
xchg
add
rolb
pop
and
sti
fstl
xor
fistpl
cltd
ficoms
add
add
aaa
lret
fucomi
pop
xor
outsl
fstl
xor
outsl
fisubs
push
fsts
and
fsubrl
sbb
imul
stos
fsubr
pop
add
xor
add
push
sahf
mov
push
cltd
xlat
dec
test
adc
and
dec
push
or
push
pusha
sub
inc
pop
sbb
pop
mov
out
pusha
rcl
dec
pop
sbb
mov
add
cltd
decb
and
arpl
add
xor
push
mov
and
pop
and
popa
or
and
lock
addb
psraw
shll
cli
push
push
add
addb
add
adc
adc
jbe
adc
adc
mov
stos
xlat
and
fldcw
jno
addl
push
push
in
lock
enter
xchg
lahf
sub
inc
add
inc
add
inc
add
xchg
nop
adc
test
sbb
add
shlb
xor
adc
add
rcrb
push
lcall
add
xor
sbb
add
aaa
jo
nop
adc
shrb
push
movsl
xor
push
push
cli
inc
or
add
aas
xlat
push
xlat
aam
adc
sbb
pop
rcrl
out
mov
mov
aaa
mov
sub
mov
xorb
add
fcompl
subb
shll
add
rorb
push
sahf
and
ret
mov
outsl
bound
stos
test
xchg
push
nop
add
or
push
arpl
aaa
push
push
add
inc
and
jg
add
sbb
stc
push
add
pshufw
add
xor
or
sub
shl
lcall
add
pop
addb
fildl
loopne
sub
mov
pop
pop
mov
adc
push
cmpsl
and
ficoml
fdivl
insb
pusha
cmp
or
roll
sahf
mov
xchg
and
mov
stos
shll
inc
xor
fildl
xor
push
daa
aaa
or
or
dec
mov
push
pop
arpl
stos
and
aaa
xchg
mov
subb
xor
ret
mov
mov
mov
xor
xor
xor
sub
pusha
pop
mov
push
pop
xlat
inc
add
add
add
roll
aaa
ret
and
xor
loop
rolb
and
daa
jno
test
adc
pushl
mov
lods
outsb
loope
loopne
jo
add
mov
add
in
add
mov
out
push
inc
fwait
sti
lret
and
dec
nop
or
lock
decb
and
and
shlb
xor
loopne
add
stos
iret
mov
faddl
push
push
add
xor
mov
test
pop
rolb
add
xor
test
mov
aaa
je
add
add
addb
repz
add
add
pop
pop
mov
daa
xor
stos
call
stos
ljmp
fidivs
adc
cld
sub
add
lcall
enter
and
and
xor
push
nop
xor
shlb
aas
pop
adc
loop
pop
cmc
xor
xchg
pop
xor
aas
stos
les
pop
inc
dec
sub
and
sbb
pop
in
adc
xlat
mov
ret
roll
xor
push
bound
and
sbb
and
push
sbb
insb
ficoms
pop
or
ss
roll
stos
ficoml
mov
outsb
push
loop
sbb
adc
push
cltd
sub
imul
push
pop
addl
pop
xchg
stos
clc
loopne
xchg
pusha
adc
addb
cmp
shlb
jp
popa
cs
lock
fcoml
adc
and
shlb
mov
push
cmp
inc
movsb
inc
shll
in
xchg
xlat
mov
or
or
leave
rolb
add
xor
mov
gs
add
bound
dec
mov
into
inc
push
xchg
and
stos
and
and
lret
add
pushf
jbe
ljmp
mov
xor
aaa
mov
pop
pop
stos
iret
sbb
jmp
and
add
ret
dec
mov
lret
add
lret
aaa
dec
add
daa
lret
add
mov
add
mov
mov
mov
and
push
daa
pop
and
stos
add
pop
and
stos
fucomp
add
push
ljmp
add
addl
push
xor
mov
in
add
out
mov
ljmp
add
adc
aaa
add
add
fiaddl
mov
add
mov
aaa
fsts
add
mov
daa
add
stos
fucomi
pop
xor
cmpsl
push
ljmp
adc
and
mov
mov
add
xchg
mov
push
andb
or
add
pushf
and
push
add
loop
add
add
jmp
sbb
stos
repz
pop
scas
and
push
adc
xlat
addb
popl
stos
xlat
mov
and
pop
pop
stos
aam
add
aaa
cmp
adc
add
xorl
test
push
add
xor
fiadds
add
mov
add
lret
pushf
add
leave
lahf
add
add
pushf
add
int
jmp
and
and
cmc
and
and
add
or
xchg
test
or
fiadds
fiadds
add
cmp
aaa
hlt
pop
and
sbbb
pop
loop
add
in
mov
or
cmpsb
and
lahf
rcrl
cmp
pop
test
add
and
mov
into
lahf
add
sub
add
inc
popa
rcrb
movsb
loop
inc
cs
movl
in
pop
addl
sti
add
push
fisubrs
xor
push
mov
pop
lds
lds
cmp
aaa
add
add
inc
test
xchg
and
fimull
push
mov
rorb
push
sbb
add
push
lcall
sub
and
lret
and
add
test
inc
inc
or
add
xor
faddl
add
sti
mov
jb
sbbb
ret
inc
jne
or
jecxz
dec
pop
mov
push
xchg
sti
lret
mov
sub
cltd
mov
pop
mov
shrl
sti
mull
lret
iret
lahf
add
stos
lds
popl
add
add
add
push
mov
add
pop
pop
and
xchg
stos
mov
dec
mov
and
ret
stos
add
lret
push
cmp
push
stos
and
mov
sbb
das
aaa
jl
rcrb
sti
das
add
adc
aaa
pop
mov
shlb
pop
iret
nop
mov
push
test
add
roll
adc
rorb
xor
inc
add
xchg
addb
pop
shlb
adc
aas
mov
fidivs
push
das
inc
pop
add
int
mov
rcll
aaa
stc
add
popa
shlb
aaa
ret
inc
add
and
fildl
es
add
add
fistpl
pop
ss
xor
stos
sti
aaa
mov
loop
lret
and
mov
add
sub
mov
jmp
sub
mov
xlat
aaa
add
sbbb
add
and
and
imul
push
mov
out
inc
sub
mov
push
inc
sti
out
fldl
inc
add
loopne
aaa
and
pop
daa
pop
and
aaa
and
xor
push
sbb
mov
or
aaa
iret
xchg
and
and
push
add
stos
flds
aaa
xchg
mov
and
sbb
inc
pop
push
sbb
and
mov
aaa
aas
rclb
mov
cmpb
stos
repnz
aaa
add
test
loop
or
lods
into
mov
test
mov
add
and
in
pop
mov
sub
pop
xlat
mov
and
in
pop
andb
pop
xor
fiaddl
and
inc
loopne
pop
inc
pop
stos
loop
bound
loopne
aaa
push
mov
add
or
push
pop
cmc
and
and
sbb
loopne
mov
loopne
push
pop
inc
add
cwtl
test
addl
inc
mov
rcrb
inc
inc
mov
rcrb
and
mov
aaa
stc
loopne
mov
add
pushf
fsubl
call
add
aaa
insl
xorb
add
frstor
popf
adcb
adc
rcrb
inc
cmp
iret
or
add
cmp
lods
and
add
jecxz
and
add
add
add
test
adcl
pop
adc
xor
and
and
sti
int3
mov
stos
pop
sti
inc
jg
mov
jbe
or
fisttpl
rorb
and
add
push
pop
aaa
adc
inc
inc
inc
inc
inc
or
dec
popl
inc
addl
push
sbb
inc
addl
push
pop
pop
sbb
pop
orb
add
and
ss
add
pop
loop
push
ficomps
add
pusha
adc
nop
and
add
mov
push
pop
inc
inc
ror
mov
or
rolb
sbb
pop
rorb
inc
inc
shll
mov
cmp
push
aaa
inc
mov
and
in
pop
xor
and
daa
add
test
add
xchg
mov
mov
inc
mov
xchg
add
mov
sub
aaa
mov
ret
in
adc
inc
adc
add
adc
sbb
pop
mov
stos
xchg
movsb
push
test
out
add
mov
cmp
add
add
cltd
sub
push
sbb
ss
popa
and
add
call
push
stc
jo
loop
adc
dec
lock
push
test
in
add
lret
pop
sbbl
push
daa
inc
or
mov
sti
rorl
pop
and
and
loopne
add
rcll
sti
iret
imul
in
add
cmpsl
sbb
sbb
mov
cmp
and
or
stos
inc
and
iret
push
arpl
rorl
xor
iret
push
sbb
inc
adc
inc
rcrb
jno
fwait
sti
gs
inc
push
inc
push
ss
loopne
sub
mov
mov
xor
xchg
adc
mov
push
adc
jbe
adcb
es
ret
push
push
sbb
mov
xchg
push
and
xchg
mov
addb
cmp
mov
xchg
repnz
nop
shl
adc
aaa
cltd
mov
adc
adc
nop
aaa
rolb
aaa
push
sbb
fnstenv
inc
mov
sbb
xlat
xchg
adc
or
aaa
pop
and
in
adc
gs
adc
test
push
adc
sahf
aaa
pop
adc
cmp
sub
push
pop
adc
aaa
hlt
sti
mov
adc
add
gs
cwtl
pop
adc
mov
adc
push
int3
fwait
sti
pop
adc
adc
dec
fildl
and
or
loop
add
xor
mov
andl
dec
loopne
mov
mov
das
and
dec
and
adc
lds
popl
add
or
push
adc
fs
add
add
bound
sbb
lret
push
cmpsl
ret
aaa
orb
nop
push
add
mov
lcall
add
aad
xchg
stos
fsubr
pop
sbb
in
mov
xchg
data16
inc
test
pop
pop
in
stos
sbb
pop
and
adc
lret
aaa
cmp
sub
adc
add
or
imul
xor
push
fwait
pusha
sti
out
aaa
inc
sub
or
mov
rcll
ret
stos
add
mov
adc
add
in
and
sti
add
sti
movl
push
stos
sti
call
or
pop
add
add
fiadds
add
pop
pop
dec
mov
aaa
dec
rclb
pop
sbb
push
add
add
ss
outsb
sbb
stos
orb
mov
push
cltd
cmp
pop
mov
loopne
pushl
xchg
rolb
in
add
pusha
cmp
aaa
sbb
and
push
sbb
call
mov
outsb
push
xor
add
popl
loopne
add
loopne
ret
xor
clc
addb
popa
sub
xor
xor
jo
daa
dec
rorb
jb
add
xchg
inc
sti
decl
jb
mov
cmp
movsl
dec
out
sub
add
sub
mov
aaa
into
adc
push
cmp
shl
or
pop
out
push
and
ss
rolb
lods
cmp
sbb
sub
and
dec
inc
sti
orl
sti
sti
mov
push
or
push
or
shrb
pop
inc
or
xchg
rolb
jl
aas
ss
lock
adc
rorl
cmpsl
aaa
push
sub
and
and
jb
pop
daa
shll
jbe
xchg
in
add
pusha
and
out
xlat
stos
mov
push
lcall
mov
out
or
add
shlb
or
lock
push
cmp
aaa
aam
rolb
mov
aaa
xor
pop
loopne
lret
mov
lret
aaa
push
rclb
jmp
push
xchg
pop
fwait
sti
sti
lock
lods
push
mov
lock
aaa
jbe
add
xor
pusha
outsb
push
ljmp
int3
and
mov
call
int3
aaa
pop
roll
and
in
and
ret
in
nop
pop
aaa
aad
add
cwtl
pushl
cmpsl
xor
int
xchg
nop
cs
rcr
pushf
xor
inc
hlt
add
inc
rcrb
push
add
adc
inc
and
adc
sbb
push
nop
lds
push
aaa
add
push
xor
dec
sub
mov
sub
rolb
add
das
sub
add
out
add
sti
shl
cmp
add
mov
fwait
sti
mov
aaa
mov
push
cmp
pop
mov
rcrb
and
add
and
mov
imul
in
push
pop
add
fcmovnbe
dec
push
mov
xchg
mov
hlt
push
aaa
loop
and
and
imul
in
pop
lahf
in
stos
push
push
inc
pop
sti
lahf
fldl
add
sahf
iret
add
push
inc
sti
add
mov
and
pop
add
pop
mov
test
fdivl
add
push
add
popl
or
add
popf
add
mov
add
mov
add
pop
add
inc
and
inc
mov
xlat
push
lcall
and
add
xlat
pop
mov
push
pop
sbb
mov
push
lcall
and
stos
hlt
xor
and
add
push
adc
aaa
ljmp
adc
adc
add
stos
add
lcall
sub
sub
pop
addb
add
xor
add
add
or
outsl
fidivs
add
mov
daa
mov
and
add
aaa
movsb
add
sbb
lcall
push
add
or
sub
pop
or
ret
out
push
and
sub
cld
add
push
cwtl
fildl
and
ror
lahf
add
rcrl
stos
pop
sbb
cmp
fildl
aaa
test
xor
and
cmpb
add
and
mov
aaa
lret
add
pop
pop
add
stos
ret
push
lcall
subl
out
stos
and
push
add
push
push
xor
mov
jmp
add
in
pop
adcl
in
or
stos
cld
add
in
stos
ret
in
add
out
stos
shl
fisubs
stos
aad
in
add
fcomps
pop
xor
lahf
xor
faddl
loopne
stos
fcoms
pop
ss
shlb
and
andl
mov
xor
mov
xlat
pop
add
add
popl
and
xorb
sti
add
iret
inc
fildl
push
addb
xor
push
cwtl
fistl
adc
fidivs
hlt
inc
or
stos
add
por
nop
fcmovnu
inc
nop
fcmovnb
or
fiadds
fildl
push
rcrl
fcmovnbe
or
and
addl
mov
jno
roll
das
push
stos
xlat
pop
and
add
xchg
mov
add
ficoms
in
hlt
pop
popa
subb
rorl
sbb
or
sbb
pop
fiadds
shlb
jmp
pop
add
add
pop
adcb
add
add
cmp
add
jmp
add
pop
mov
jl
pop
or
inc
mov
roll
inc
mov
test
in
add
add
adc
ret
pushf
add
add
push
stos
sti
xchg
or
pop
and
ret
mov
inc
push
sbb
add
sti
aaa
addb
push
pop
sti
jecxz
fadd
mov
roll
xchg
sti
lret
aaa
addl
aaa
cmp
inc
push
mov
sub
out
sbbb
orb
out
aam
xchg
jmp
sub
and
or
in
movsl
roll
rol
sbb
push
decl
add
pushf
add
adc
and
add
pop
inc
add
in
stos
xchg
or
xor
pop
loop
adcl
pusha
pop
inc
pop
mov
pusha
dec
pop
and
les
mov
add
pop
and
push
int3
xorl
and
or
setb
loopne
push
sbb
push
push
cmp
push
sti
and
pop
pop
pop
rolb
mul
add
xorb
xor
sbb
add
sub
inc
inc
and
mov
popa
ret
pop
mov
inc
add
mov
add
shl
mov
adc
mov
sub
repz
or
mov
dec
cwtl
mov
and
pop
add
test
iret
add
dec
rcll
daa
mov
add
or
in
stos
fsts
mov
adc
aaa
and
popa
loopne
ss
pusha
or
push
pop
and
movsb
lret
mov
push
sahf
push
fwait
add
or
stos
inc
loopne
rorl
cmp
adc
sti
ret
rclb
push
das
rcrb
add
mov
and
inc
and
addb
dec
and
push
sbb
sbb
dec
and
sub
das
and
loopne
mov
and
xchg
add
xor
inc
add
xor
inc
add
ret
lds
mov
shll
sbb
and
xor
xor
mov
loopne
fbstp
lds
xor
xor
add
jp
inc
mov
ror
add
inc
shlb
test
xor
xor
leave
xor
addb
and
mov
and
xor
pusha
daa
insb
xor
and
mov
add
or
aaa
and
ja
loop
lcall
test
xor
loopne
jae
add
lcall
adcb
adcb
adc
punpcklwd
xchg
add
mov
pop
mov
wbinvd
mov
add
add
lret
xor
push
andb
add
lret
add
daa
add
adc
orb
addb
and
out
lahf
add
jne
inc
sbb
call
outsl
rclb
cmp
add
rcll
adc
or
ror
lahf
add
stos
faddl
subb
ljmp
shlb
mov
das
test
sarb
jo
or
ret
add
push
ljmp
daa
and
push
lcall
incl
adc
and
push
inc
daa
and
imul
push
out
subb
stos
call
hlt
xchg
imul
lcall
hlt
add
mov
sbb
or
mov
xor
mov
add
push
pusha
mov
cmpb
or
xor
add
add
addb
add
popa
add
orb
pushl
stos
or
lret
rorb
pusha
fisubl
stos
pop
and
adc
rdtsc
mov
sbb
xchg
mov
push
mov
roll
frstor
test
or
adc
push
lcall
pop
xchg
dec
stos
rorl
xchg
add
mov
mov
add
and
adcl
stos
sti
pusha
shr
add
push
lock
inc
cmp
lret
aaa
mov
stos
and
mov
or
into
adcb
and
sbb
aaa
icebp
add
aaa
testl
jo
inc
stos
sti
lret
adc
add
jns
rorb
xchg
sbb
add
test
repz
mov
add
push
stos
cmp
cmp
and
and
or
mov
and
add
mov
add
push
and
add
js
add
push
mov
adc
rcrb
addb
mov
push
lcall
push
lcall
andl
push
mov
mov
mov
das
mov
lret
rolb
add
jmp
push
mov
and
and
mov
icebp
or
sbbb
adc
lock
or
xchg
and
mov
andb
rclb
and
jo
and
mov
push
cmpsl
stos
loopne
bound
xchg
push
adc
add
stos
repz
sub
add
add
lds
call
popa
fcmovne
add
popa
add
sbb
fstps
stos
ss
in
add
pop
add
or
push
nop
lcall
add
loop
imul
fstps
and
stos
je
push
stos
insl
stc
push
sbb
push
pop
stos
je
add
rcll
ficoms
frstor
pushf
adc
pop
xor
mov
mov
add
lcall
pusha
xchg
rcrb
jo
push
lcall
nop
add
sbb
lret
cmp
je
adc
mov
iret
mov
into
xchg
stos
or
test
add
aas
xor
push
lcall
aam
xchg
sub
and
das
and
test
push
or
sub
xlat
ficoms
fiadds
mov
and
push
cltd
fcomi
add
pusha
xchg
adc
rolb
xor
nop
aaa
lahf
sarb
aaa
add
add
stos
and
add
fwait
xlat
fimuls
add
add
add
push
add
ret
fcoms
lahf
push
cltd
add
mov
push
cltd
add
mov
stos
rcll
adc
cltd
rcr
xorb
fiadds
pop
xor
mov
adcl
or
xor
mov
fcmovnu
add
nop
add
lahf
pop
push
stos
es
xchg
in
sub
or
adc
and
pop
cmpsl
fiadds
add
and
or
xchg
nop
ret
cmc
mov
add
iret
add
xchg
loopne
loopne
pusha
iret
mov
jo
scas
adcb
xor
das
aaa
cmp
add
cmp
pop
loope
inc
stos
ficomps
add
rolb
add
push
fildl
loope
or
jecxz
stos
iret
jecxz
lods
fninit
shrb
stos
fninit
lock
fildl
adc
in
pop
adcl
xchg
sub
and
mov
out
xlat
sub
pop
jmp
and
out
xchg
sub
loope
pusha
enter
shlb
push
jmp
rclb
jecxz
pop
jb
ret
sbb
xchg
pop
sub
and
sub
and
rcr
stos
out
pop
and
rcrb
and
add
rcrb
addb
imul
xorb
adc
andb
lcall
flds
push
add
adc
adc
stos
rolb
fidivs
dec
inc
bound
and
shrb
jo
addr16
inc
pusha
add
add
jmp
mov
mov
push
fwait
mov
cmp
sbb
stos
aam
lcall
lods
push
xor
add
push
pop
xchg
ja
add
loope
add
fwait
jecxz
add
jecxz
stc
add
repnz
inc
hlt
sbb
inc
test
arpl
add
fwait
rcr
cs
rcl
push
pop
add
pushl
xlat
push
fnop
pop
push
fcmovnb
and
daa
push
mov
in
mov
rolb
addl
push
pusha
sbb
pop
jo
rcrb
xor
mov
iret
push
rcl
add
ljmp
add
xor
pop
es
lods
aad
pop
repnz
icebp
stos
ret
add
sahf
lods
ficompl
out
test
push
mov
and
add
test
pop
xor
add
rolb
and
pop
cmp
pop
sbb
fldl
add
adc
pop
sbb
fisttpll
add
out
ficoms
out
fldl
add
fcoml
out
cwtl
lahf
and
sti
lret
rcrb
pusha
adc
fcmovnu
add
fwait
sti
xlat
mov
fcompl
aaa
cltd
mov
add
out
loope
xor
aaa
in
add
inc
rolb
push
rcrb
pop
mov
shll
stos
iret
jecxz
sarb
push
fistpl
inc
sbb
loopne
mov
mov
jo
lret
pop
incb
add
in
lods
xchg
orb
jno
in
add
or
in
add
stos
into
out
iret
stos
xchg
inc
pop
mov
add
fldl
stos
sahf
in
and
and
add
pop
stos
add
pop
jecxz
in
add
add
addb
add
push
lcall
das
push
out
xor
cmp
rclb
add
ljmp
mov
shlb
lods
fildl
push
stos
dec
sub
lods
aas
add
lods
push
and
add
add
add
xor
push
subb
add
fcoml
add
sbb
fidivs
push
rol
add
push
fsub
incl
stos
xlat
jecxz
mov
mov
push
lcall
push
sbb
mov
mov
mov
mov
push
daa
andb
inc
int
add
lahf
add
push
fists
andb
and
and
or
pop
stos
lahf
push
mov
test
roll
jecxz
in
ret
push
adc
hlt
xchg
and
sbb
push
roll
mov
mov
lcall
add
xchg
addb
xlat
add
iret
mov
push
ljmp
push
lcall
rcll
add
add
pop
push
add
pop
jl
mov
add
xchg
addb
push
pop
pop
rcrb
add
push
mov
das
add
add
ret
mov
dec
add
adc
hlt
add
stos
hlt
push
mov
push
sbb
pop
or
enter
lcall
add
push
adc
pop
mov
and
xor
lods
aad
mov
sbb
aaa
mov
and
test
fcmovnb
incl
imul
inc
and
hlt
mov
push
stos
rcr
das
or
mov
add
pop
ret
push
adcb
jnp
aaa
das
adcb
add
aaa
xlat
inc
pop
or
and
test
and
aaa
lods
xchg
add
lahf
inc
push
lcall
or
in
mov
push
pop
pop
add
lock
add
sbb
add
inc
loopne
jmp
aaa
jecxz
or
sub
lds
sti
cmp
fstpl
cltd
aaa
mov
lcall
xorl
add
pop
pop
xor
or
add
sarb
push
das
add
out
xlat
or
pop
pop
add
mov
xchg
add
and
fsts
or
push
lcall
push
fcompl
das
mov
pop
inc
add
add
sbb
mov
add
inc
sub
insl
in
aaa
jg
add
daa
pop
and
and
add
and
aaa
xchg
pushf
rolb
add
pop
pop
and
ret
push
fiadds
and
add
push
lcall
xchg
mov
in
or
and
mov
sbb
adcb
push
adc
add
xor
push
fcmovnb
add
sbb
xor
pop
sub
lds
and
sub
add
popf
adcb
push
sbb
add
xchg
shrl
sbb
push
and
add
xor
rolb
imul
push
cmp
xlat
fcoml
popf
pop
es
test
andb
push
xchg
das
arpl
adc
push
push
stos
and
pusha
push
add
pop
and
mov
push
rclb
push
xchg
and
or
xchg
and
pop
sub
and
sbb
push
add
sbb
mov
lcall
add
in
daa
les
sub
push
ficoms
push
add
hlt
stos
daa
fsubrl
push
stos
sub
push
adc
out
sahf
and
add
movl
xor
xchg
sub
inc
mov
pop
in
mov
addb
pop
inc
sahf
mov
mov
sbb
inc
adc
leave
orb
sbb
push
cs
add
and
fwait
sti
xlat
fisubrs
jo
add
orl
inc
push
add
ficompl
stos
aad
add
out
pop
pop
xchg
adcl
add
loopne
stos
add
loop
pop
stos
faddl
in
pop
sbb
pop
lahf
sbb
add
fldenv
cli
push
lret
add
pop
mov
lcall
fwait
inc
add
lret
or
pop
cmpsl
fadds
in
pop
mov
sbb
inc
adc
and
adc
adc
add
pop
xor
mov
daa
inc
pop
and
rcrb
mov
and
rclb
pusha
add
shlb
shrb
pop
daa
stos
stos
push
stos
rcrl
xor
daa
and
add
cmp
adc
add
sbb
loope
stos
shrb
cltd
fstl
or
pop
lods
mov
aaa
mov
das
add
aaa
xchg
outsb
and
add
pop
inc
adc
sub
in
sub
add
popa
mov
aaa
fbld
push
cltd
iret
add
sbb
push
fnstenv
and
fs
xlat
add
inc
popa
sbb
pop
loopne
push
add
and
xlat
add
sbb
aaa
fmull
test
and
and
mov
or
add
cltd
leave
mov
xor
mov
das
and
ret
adc
or
adc
adc
pop
mov
pop
and
push
cwtl
add
push
adcb
and
in
pop
mov
mov
pop
pop
sbb
mov
add
mov
mov
pop
sbb
add
sti
addb
xor
iret
mov
add
and
mov
ret
add
push
pop
and
pop
mov
das
and
testl
cmp
pusha
push
lret
in
sbb
sbb
add
ret
sbb
enter
mov
int3
xchg
mov
or
and
or
lcall
xor
inc
add
and
and
sub
aaa
cmpb
out
das
rcrb
addb
jo
pop
std
jo
push
lcall
stos
daa
jo
xor
and
frstor
add
rolb
pop
xor
xchg
loopne
pop
loope
fnstsw
add
or
mov
lock
push
add
out
xor
stos
and
and
popa
test
add
aaa
xor
add
sub
rclb
aaa
pusha
mov
in
sub
push
pop
add
add
in
and
mov
pop
pop
add
stos
scas
push
add
test
mov
lock
add
movsl
addb
lcall
fimull
fcmovnbe
add
add
push
mov
push
xchg
xor
push
xchg
fimull
and
addr16
pop
xor
daa
xor
mov
aaa
pop
pop
loopne
stos
aam
xlat
xor
adc
out
add
or
mov
rolb
xor
push
popl
sbb
cwtl
fmull
mov
rclb
mov
mov
pusha
pop
xor
popa
or
aaa
mov
mov
adc
subl
jmp
mov
xchg
andb
lcall
xor
stos
stc
jo
mov
or
test
add
xor
or
and
and
and
mov
mov
adc
or
adc
adc
cltd
xlat
mov
fcmovnbe
xor
add
xchg
pop
aaa
int3
and
in
inc
dec
inc
fildl
lock
fildl
and
push
cwtl
xlat
aaa
jns
popa
pop
call
rorb
and
and
and
add
adc
sbb
arpl
subb
mov
add
and
and
pop
mov
add
in
fldt
mov
aam
ftst
rcrb
add
xor
mov
add
inc
mov
mov
adc
push
shrb
xchg
pop
pop
xchg
add
push
push
cld
add
shrb
xchg
xchg
stos
into
adc
stos
loopne
xlat
add
aad
lcall
and
push
push
aaa
aam
or
mov
lock
lret
shrb
lcall
xchg
rolb
pop
popa
dec
mov
mov
push
lea
xor
mov
fidivs
and
mov
pusha
push
add
add
pop
inc
loopne
test
call
aaa
lds
mov
lcall
jb
and
rsqrtps
adc
add
sub
push
mov
xrelease
andb
add
xor
add
sub
push
inc
mov
push
lock
and
aaa
cmp
int3
add
popf
add
or
lock
fldt
xor
lret
mov
pop
aam
and
pop
mov
add
enter
xor
repz
push
inc
mov
and
aaa
pusha
push
adc
test
mov
adcb
pop
mov
rorb
cmp
cmp
push
push
mov
rcrb
inc
add
add
xor
push
cltd
pusha
add
mov
stos
and
sbb
push
in
xor
add
pop
and
add
push
pop
frstor
and
popl
in
or
push
daa
mov
or
add
xchg
push
shl
and
xlat
and
stos
daa
ss
push
inc
cmpsl
ret
push
cltd
rorl
subb
dec
and
adc
mov
xlat
xor
stc
nop
sub
xlat
lods
cwtl
nop
add
add
out
adc
dec
pop
push
lcall
fldt
aaa
outsl
add
add
add
loop
aad
mov
sub
or
push
aaa
and
jno
mov
aaa
push
dec
xorb
inc
das
lcall
xor
add
and
fisubrs
xlat
mov
inc
mov
iret
aaa
sub
or
add
and
aaa
bound
mov
jb
add
add
stos
aaa
rorb
aaa
cld
shlb
adcb
xlat
mov
dec
addb
out
xchg
push
nop
add
test
push
fsts
push
adcb
and
and
loopne
add
cwtl
adc
push
adc
rorb
and
add
xlat
push
fadds
cwtl
mov
adc
push
fstps
ficoms
fstl
pusha
andb
popa
leave
iret
push
stos
sub
aaa
mov
stos
inc
sub
out
rorl
int3
and
xchg
andb
addr16
push
pop
addb
and
xor
adcl
add
rclb
cmpsl
lret
lahf
add
xor
push
add
iret
push
into
adcb
push
lret
push
pop
add
adc
scas
xlat
inc
fsubrl
in
subl
push
xlat
in
add
xlat
stos
rclb
pop
add
nop
push
scas
out
sti
shrl
sti
jns
push
add
add
lahf
lahf
mov
xor
aaa
loop
adc
xchg
add
cltd
fcmovnu
push
xchg
iret
stos
add
push
fwait
sti
fisttpl
xlat
mov
jno
push
sbb
add
inc
add
cltd
xlat
stos
aad
mov
loope
add
push
ret
mov
loope
cltd
rcrl
fcmovnu
add
inc
add
fcomp
add
addb
in
and
aaa
jo
and
cmp
out
and
test
or
jo
and
add
fadd
add
adc
ficoms
mov
pop
push
push
adc
or
das
pusha
push
mov
pop
adcb
add
roll
stos
xchg
and
add
and
sbb
adc
roll
shrl
cld
adc
xchg
shrl
push
sbb
add
add
add
rolb
adc
xor
pop
stc
add
sub
xchg
inc
xorl
rcrl
rolb
xchg
roll
sbb
add
pop
mov
mov
and
ljmp
adc
mov
pop
shl
adc
push
add
lret
sbb
out
add
add
push
rclb
push
xchg
add
add
ret
push
xchg
ret
in
pop
add
mov
add
pop
pop
add
fcoml
push
stos
rcll
add
aaa
mov
addb
pop
rcrb
add
lods
lret
push
sbb
xlat
add
push
xchg
fistl
xlat
push
xchg
add
rcll
roll
push
xchg
xlat
pop
push
stos
int
adc
iret
mov
xchg
leave
lahf
add
push
add
xchg
xlat
push
add
aaa
jae
and
push
daa
add
stos
dec
push
pushf
lret
loop
add
popl
test
pop
pop
add
push
pushf
out
push
movsb
add
in
pop
aaa
xor
and
add
stos
lea
mov
and
and
iret
add
stos
jmp
and
and
add
rorl
adc
aaa
cmpsb
xchg
and
and
cs
and
add
xlat
add
add
addb
push
lcall
xor
mov
into
andb
pop
addb
add
sahf
and
and
stos
fcomps
inc
push
das
xor
in
sub
sbb
add
ljmp
lret
lahf
add
sbb
sbb
sbbb
add
sbb
sbbl
cmp
pop
xor
add
add
mov
xorb
pop
imul
push
cwtl
add
loop
and
jns
push
push
add
and
mov
push
das
or
adc
or
add
stos
out
and
or
aaa
out
add
stos
xlat
mov
push
adc
mov
pusha
sbb
jp
stos
roll
addl
sbb
cltd
add
lahf
jo
add
push
cltd
decl
ret
roll
ret
pop
pop
stos
rol
sarb
ret
sarb
add
shlb
push
out
xor
pop
rolb
mov
xor
pop
inc
dec
and
sbb
push
add
push
rcll
lret
push
xchg
lret
push
adc
js
push
sbb
aaa
push
add
add
mov
test
push
ret
push
add
lahf
ret
push
add
ret
rolb
lret
pop
xor
add
nop
out
or
adc
rclb
lret
sbb
rorb
inc
and
sbb
inc
daa
xchg
pop
rclb
dec
daa
out
xlat
mov
push
mov
push
inc
andb
or
mov
push
cmpsb
xlat
push
lcall
das
inc
add
push
test
add
imul
aaa
aas
outsl
rclb
push
lcall
rorl
or
lahf
add
or
mov
pop
inc
sbb
mov
stos
das
inc
add
fildl
push
fiadds
inc
enter
and
stos
rolb
add
pop
sbb
and
rclb
mov
mov
cs
rcr
or
pushf
add
and
in
push
out
iret
addb
flds
rolw
push
fistpl
lods
xor
add
add
push
in
test
xlat
pop
pop
shl
add
xchg
push
add
sahf
ror
adc
mov
cld
mov
rcrb
inc
sub
in
stos
nop
push
andb
rorb
push
stos
xlat
pop
sbb
add
mov
loopne
add
mov
test
cmp
ss
push
loope
daa
and
fildl
in
lcall
out
lcall
rcll
add
je
push
in
add
add
mov
rcrl
fcmove
sub
add
rcrb
xor
jle
sbb
add
pop
sahf
add
add
incl
add
mov
jl
and
xchg
and
lahf
and
stos
pop
and
and
cmpsl
and
mov
and
scas
and
mov
add
add
and
scas
and
jg
add
and
xchg
add
and
stos
stos
and
mov
mov
add
mov
das
and
or
add
sub
add
and
iret
and
das
push
and
jmp
add
add
and
ret
stos
lret
and
and
and
dec
inc
and
mov
mov
add
popa
add
add
add
and
arpl
add
add
mov
add
popa
add
and
jg
add
push
and
and
aas
and
outsl
and
das
movsl
and
ja
add
sub
adc
and
stos
iret
and
shll
sub
add
mov
pop
and
stos
and
xor
add
add
and
pop
and
push
popa
pop
stos
dec
and
aas
popa
add
add
and
stos
outsl
and
pop
mov
shll
stos
mov
or
aas
and
pop
and
dec
das
and
add
adc
push
popa
add
and
arpl
add
and
imul
out
and
loope
lahf
and
lret
push
and
and
jnp
add
and
scas
and
inc
iret
lahf
add
inc
jl
add
aaa
fsubs
pop
ljmp
xchg
jg
add
add
or
push
addl
addb
addl
addb
xchg
addb
fidivl
mov
and
and
pop
inc
add
cli
and
pop
add
push
adc
and
pop
loopne
and
addr16
add
add
lods
inc
and
adcl
add
add
mov
stos
lret
lods
test
aaa
pop
adc
xchg
inc
add
and
jmp
pop
pop
and
icebp
inc
xlat
stos
in
pop
mov
aad
mov
dec
or
or
xor
mov
or
and
mov
jo
and
add
in
or
push
stos
sti
shrl
insb
aam
add
addb
subl
lahf
add
inc
lret
sbb
shlb
add
outsl
fisubs
and
lret
mov
das
and
mov
adc
jmp
lods
xlat
push
inc
stc
loop
shl
add
repz
leave
loopne
push
das
push
stos
add
out
out
sti
call
pop
xchg
not
pop
mov
rcrb
jo
out
adc
lret
and
and
aaa
shlb
add
push
cmp
aaa
add
push
add
push
mov
and
pop
into
mov
icebp
add
and
xchg
add
mov
sti
push
adc
add
fwait
sti
rorb
add
insb
filds
or
push
xchg
in
sub
rorb
or
mov
lock
mov
out
jmp
loope
pusha
add
add
pusha
add
or
or
loopne
mov
inc
xchg
cmpl
iret
and
ret
add
sti
jmp
add
xor
icebp
out
sbb
add
pusha
or
lret
and
pusha
sbb
xchg
add
sti
testb
nop
add
hlt
and
add
popa
or
nop
and
sti
faddp
add
xor
lret
fsubl
adc
rcrb
xchg
push
test
jo
stos
rolb
movups
aaa
sbb
mov
inc
add
add
out
and
repz
lahf
pop
addb
sti
pushl
inc
insl
adc
mov
addl
je
jg
add
addl
fldt
aaa
leave
pusha
push
lock
rolb
adc
mov
sbb
aaa
and
lea
add
add
add
pop
and
iret
and
nop
add
pusha
push
pop
xor
ffree
mov
add
mov
xor
addb
pop
call
cwtl
fstpt
sub
mov
mov
sbbl
dec
lock
test
dec
push
stos
aas
popa
es
pop
fsubl
push
pop
pop
loopne
or
aas
or
xchg
sub
inc
aam
push
sbb
popa
add
xchg
fildl
push
add
push
add
pop
adc
nop
jns
lcall
aaa
es
sbb
xor
fstps
push
add
push
add
lcall
xorb
mov
mov
push
dec
jmp
mov
inc
or
or
lret
shlb
xchg
loop
push
add
out
and
xor
sub
test
and
mov
in
inc
or
in
or
mov
and
xor
ud0
inc
lcall
mov
add
loopne
rorb
and
addl
rcrb
hlt
and
xor
loopne
add
add
icebp
mov
mov
loopne
dec
add
and
jnp
dec
mov
jmp
push
repnz
add
mov
lret
add
das
fcoms
add
stos
cmp
and
jg
add
dec
push
pop
add
xchg
and
and
sbb
pop
add
popf
mov
dec
loop
cmp
mov
add
orb
dec
inc
xchg
push
bound
mov
sahf
aaa
arpl
mov
inc
jo
mov
sub
pop
rolb
fisubrs
mov
stos
enter
loopne
inc
fcompl
and
sahf
or
and
shlb
or
and
mov
sub
das
xlat
aaa
xor
icebp
add
adc
add
les
cmp
aaa
fidivs
add
sbb
add
xor
or
mov
add
outsb
xchg
add
pusha
add
sbb
xchg
add
xor
cltd
add
cmpsb
and
add
push
aaa
gs
mov
mov
fdivs
mov
xchg
xlat
stos
aad
aaa
stc
and
addl
stos
add
mov
xchg
loopne
add
add
push
aaa
pop
aas
fimuls
pop
loopne
mov
or
stos
rcl
add
das
jo
xchg
push
pop
xor
xor
push
adc
mov
iret
add
stos
xlat
aaa
inc
out
jno
push
rcrb
loopne
push
add
inc
dec
shrb
lock
stos
or
cmp
fstps
stos
rclb
jg
cmp
dec
xor
push
bound
mov
add
push
pusha
mov
sub
push
add
sub
push
test
push
add
or
jb
cltd
rcrb
adc
mov
test
loop
xchg
add
push
pop
add
or
push
adc
push
loope
mov
mov
addb
dec
inc
jae
fucomi
rcrb
fdivl
movsb
mov
mov
mov
loopne
jecxz
mov
xchg
bound
push
orb
and
pop
add
add
add
aaa
mov
mov
or
aaa
xchg
rolb
addr16
lock
add
or
cmc
add
pop
add
je
add
ret
popa
add
or
pop
pop
stos
rcll
fcmovnb
add
mov
add
popl
jmp
or
and
adc
mov
nop
add
sbb
imul
push
cmp
add
pop
iret
mov
in
or
sub
pop
or
inc
add
out
add
add
sti
rclb
daa
push
add
stos
mov
in
cltd
fildl
adc
rcl
jo
or
push
fldenv
xor
push
flds
fwait
sti
imull
add
pop
pop
es
in
add
in
mov
lods
hlt
add
xchg
add
mov
and
popa
int3
shll
fwait
sti
iret
xor
sti
hlt
das
push
add
pop
addb
pop
sbb
in
loopne
rcrb
jne
stos
xchg
mov
add
mov
test
sti
and
movnti
rcr
out
add
add
mov
or
andb
mov
outsl
addl
insb
adc
add
adc
insl
and
push
rcr
pop
loop
add
pushf
add
test
in
add
xlat
and
imul
nop
getsec
add
and
push
fwait
mov
add
mov
add
push
sbb
and
push
cmp
pop
add
cmc
add
fwait
add
pop
lret
pushf
add
pop
and
push
int3
add
add
sbb
lds
and
test
and
ss
push
pop
sti
or
add
push
stos
faddl
add
aaa
pop
out
and
add
pop
and
pop
add
add
push
fwait
add
iret
push
fbstp
in
push
add
rorb
mov
add
aaa
fmull
and
shrb
xchg
pop
lahf
in
stos
or
fldl
add
addl
push
inc
sti
mov
add
pushf
pop
add
dec
add
aaa
pop
dec
add
pop
fwait
sti
mov
mov
xor
aaa
cs
and
push
fwait
sti
shl
add
stos
and
xor
cmp
or
stos
sti
ret
aaa
add
and
pop
add
iret
inc
push
stos
sti
pushl
pop
add
addr16
aas
add
xor
addb
addb
add
addb
add
add
ja
orb
mov
and
mov
das
push
stos
and
add
xor
lahf
add
cltd
add
daa
push
mov
rcrb
and
push
add
push
aad
rcrl
stos
add
pop
pop
fucom
sbb
xor
push
daa
hlt
mov
add
push
xchg
fucom
adc
lods
sarl
xlat
add
fstl
add
push
xchg
daa
push
rcll
add
and
stos
sub
and
add
out
and
pop
pop
stos
xchg
add
stos
enter
push
or
aaa
movsb
add
add
pop
pop
stos
adc
push
lcall
add
stos
fcoms
add
clc
add
and
rcrb
add
and
add
add
shrb
push
mov
add
and
in
and
mov
add
sbb
inc
pop
add
xor
add
out
xlat
rcrb
js
push
push
fcmovnbe
mov
pop
inc
rolb
cmpl
stos
or
push
pop
orl
adc
aaa
and
subl
pop
push
add
in
test
iret
movl
and
and
dec
jmp
or
sbb
and
and
lret
lahf
add
xlat
cwtl
add
lods
or
push
orb
and
and
rorb
pop
pop
stos
rol
push
push
xchg
xlat
shrb
adc
add
enter
ret
mov
mov
pop
mov
add
and
lcall
lcall
aas
xor
inc
rorl
lock
add
lcall
pop
add
daa
pop
xor
inc
js
fnsave
inc
aaa
pusha
xchg
and
cltd
pop
inc
pop
stos
fstps
addb
pushf
add
aaa
ss
push
mov
and
xor
push
add
push
cwtl
rcrl
rorb
or
shlb
push
sub
add
xor
or
xor
in
sub
pop
sub
pop
bound
push
mov
add
sti
lret
mov
mov
or
mov
mov
ss
adc
xor
rcll
and
stos
fsubs
rolb
mov
jg
rclb
mov
xchg
lock
mov
es
test
inc
add
test
inc
or
or
loope
lret
pop
mov
add
stos
add
xor
pusha
add
add
ret
push
mov
addl
ret
push
stos
sti
sti
sbb
xchg
popf
add
add
or
lahf
addl
aaa
add
and
sub
and
rcrb
ss
rcrb
mov
stos
shlb
in
aaa
imul
outsl
mov
rol
stos
sti
aaa
addl
jg
imul
stos
call
inc
mov
in
and
mov
pop
pop
pop
and
aaa
insb
repz
je
stos
ret
and
stos
and
mov
add
xlat
aaa
adc
loopne
mov
cltd
and
sti
fcmovb
cmp
iret
in
test
popl
arpl
or
das
aaa
adc
sub
pop
add
lret
sub
stos
int3
add
std
and
mov
and
pop
adc
iret
xor
sub
loopne
mov
mov
add
mov
sbb
stos
aad
aaa
xor
xor
sub
sbb
rolb
pusha
sub
xor
sub
stos
int3
and
xchg
aaa
push
fbld
cld
iret
add
add
xor
sub
xlat
stos
stc
loop
push
loope
jp
in
loope
xlat
push
xchg
loopne
add
shl
cmp
add
add
iret
aaa
and
addl
loop
fistpl
mov
mov
add
mov
push
das
add
sub
add
mov
lret
add
push
sub
imul
jnp
add
cwtl
pop
xor
mov
pop
push
stos
ja
and
lds
mov
push
lcall
fiaddl
add
mov
pop
xor
add
add
xchg
sbb
pusha
sub
mov
loopne
ret
jno
add
pop
and
pusha
mov
mov
movsb
add
outsb
sub
and
or
sbb
addl
and
add
adc
and
ret
mov
flds
mov
sub
xlat
mov
and
and
mov
das
and
loope
and
add
mov
mov
test
lahf
add
scas
xlat
mov
pop
testl
xchg
lea
mov
mov
and
add
and
out
add
test
lcall
and
insl
lahf
and
and
mov
adcl
mov
xchg
lret
mov
add
iret
loopne
in
pop
mov
pusha
push
or
mov
fs
add
and
pop
sbb
in
shlb
jl
subb
mov
and
add
rcrl
flds
adc
fiadds
mov
push
pop
mov
push
roll
xchg
pusha
and
shl
push
and
add
fsubl
and
sub
lahf
rolb
and
iret
mov
inc
add
and
mov
or
stos
iret
add
jns
adc
push
xlat
test
addb
rolb
fwait
mov
push
fadd
add
outsb
and
orb
mov
push
inc
add
mov
icebp
dec
dec
addl
push
fchs
sbb
or
fnsave
and
aam
inc
add
roll
roll
adc
in
inc
and
or
sarb
push
or
lcall
pop
addl
aaa
sub
and
and
and
xlat
pop
loop
add
add
push
mov
pop
add
mov
js
mov
pusha
xor
mov
fs
outsb
mov
push
push
pop
mov
adc
and
lret
inc
psubusw
add
lret
push
pop
mov
mov
movsl
ret
dec
lcall
or
add
mov
in
add
ficoml
pop
xor
lock
loop
push
jecxz
and
and
add
movsb
bswap
sub
adc
jb
cld
jo
push
daa
xor
add
and
xor
fisttpl
adc
sub
add
pop
xchg
mov
mov
push
stos
aaa
xchg
add
addr16
and
lcall
punpcklbw
push
pop
add
mov
rcrb
lea
and
adc
xchg
jbe
mov
push
sbb
jg
sbbl
push
shll
shl
orb
les
fnstenv
mov
add
rcrb
lcall
add
add
sbb
das
xchg
loope
and
add
stos
aaa
nop
mov
push
add
lock
fimuls
rorb
add
xor
or
sbb
add
jl
addl
sub
cmp
pop
inc
add
subb
pop
mov
loope
mov
pop
nop
or
lea
mov
rcrl
ficoml
aas
mov
addl
adc
les
push
xlat
adc
add
or
add
lret
adc
fucomi
and
add
add
add
mov
mov
ret
verr
and
fstl
xchg
add
push
stos
daa
in
rcrb
stos
aad
out
dec
stos
fisubl
cmp
pop
push
xor
adc
lcall
pusha
sbb
and
aaa
sbb
and
mov
inc
push
push
add
stos
inc
sbb
lcall
mov
stos
sbb
and
inc
add
add
xor
faddl
int
faddl
add
mov
push
rorb
add
addb
mov
push
mov
addb
push
int3
addb
int3
addb
loope
sbb
int3
test
roll
mov
and
xchg
cmc
lret
dec
addb
lret
addb
lret
addb
jmp
test
or
sub
inc
adc
adc
sbb
and
jp
mov
icebp
push
xor
dec
xlat
or
and
mov
xchg
jle
lock
and
popa
xor
aaa
or
cmc
jo
add
mov
adc
aaa
push
cld
add
and
decb
push
lcall
or
nop
push
dec
dec
jo
rolb
push
stos
rcl
pop
cwtl
and
inc
addr16
add
sub
lock
push
mov
mov
add
add
mov
mov
mov
lcall
mov
mov
add
mov
lcall
add
out
xor
mov
out
xor
cmpb
push
cmpb
xorb
aam
push
mov
push
lcall
add
sub
andb
ret
mov
add
jg
add
cltd
xchg
or
aaa
arpl
add
add
stos
or
push
loop
and
or
addb
stos
test
daa
fisubs
pop
xor
pop
cmpsb
fiaddl
xchg
pop
push
and
hlt
sbb
rsm
add
in
pop
xor
aaa
mov
mov
or
rcrb
stc
ret
ret
push
lcall
rcrb
jns
mov
lahf
add
add
adc
aaa
test
rorb
lcall
jle
stos
or
in
add
inc
les
mov
xor
icebp
inc
nop
xchg
mov
mov
jb
mov
ret
adcb
loopne
adc
stos
aas
les
mov
and
inc
xor
push
push
inc
mov
push
push
inc
sub
add
sti
and
stos
xor
mov
das
aaa
test
aaa
aaa
lea
jb
add
xchg
jb
daa
aaa
popf
or
push
lcall
add
inc
push
popf
xrelease
dec
xchg
xor
lea
cmp
sbb
xor
push
pop
popa
push
add
inc
lock
or
sbb
addb
fcoms
inc
and
andb
lods
pop
jae
add
inc
ret
roll
add
stos
loopne
mulb
jl
mov
mov
nop
cs
xchg
adc
inc
or
mov
add
and
and
pop
add
and
in
xchg
fdivl
sub
rcll
add
rclb
add
cmp
xor
xor
rcr
mov
push
stos
dec
xchg
mov
pop
push
add
aaa
insb
adc
sub
inc
push
push
or
push
stos
rcr
fwait
add
adc
sub
fwait
push
nop
imul
fiaddl
lea
and
daa
aaa
adc
xor
push
or
add
mov
add
rcrb
inc
adc
sbb
pushl
sbb
add
and
mov
stos
frstor
sbb
add
aaa
and
add
and
daa
sbb
push
and
add
push
addb
add
shll
stos
daa
push
add
aaa
mov
add
aaa
push
and
adc
addl
add
mov
push
fmuls
subb
push
sbb
push
xor
ja
add
add
pop
out
xlat
mov
rorb
mov
add
pop
pop
test
mov
insb
mov
adcb
xchg
mov
fcmovnu
add
add
and
push
bound
push
sbb
sbb
add
and
and
sbb
pop
add
add
shlb
jge
or
mov
add
fidivl
inc
mov
daa
push
mov
add
lahf
add
and
cmpb
daa
aaa
fcmovnu
andl
or
das
andb
iret
mov
add
das
mov
leave
lahf
add
mov
add
imul
and
push
lcall
mov
test
popf
add
mov
dec
aaa
insb
sbb
sbbb
jb
adc
dec
add
mov
and
addb
test
pusha
stos
pop
xchg
mov
sub
jns
movsb
add
add
cmpsl
add
add
inc
pop
aaa
or
and
orb
pop
rolb
pop
in
rcrb
or
dec
lret
into
lahf
add
push
lcall
mov
adcb
xchg
xor
add
mov
jae
lahf
or
add
adc
jl
and
and
and
rcrb
rolb
add
push
xlat
push
mov
lea
mov
lea
mov
movl
lea
stos
pop
and
out
or
push
fcmovnbe
pop
out
or
rcll
inc
lea
lds
roll
aaa
inc
push
pop
lea
push
and
inc
push
lcall
adc
add
cmp
push
add
push
subb
rcrb
add
push
cmpb
xchg
cmp
stos
push
subb
adcl
inc
add
xlat
fcompl
xlat
add
roll
out
stos
sti
add
xlat
mov
add
ret
and
and
stos
xchg
add
aaa
pusha
lret
push
pop
movsb
xor
add
insl
lahf
rolb
ret
pop
adc
mov
mov
daa
pop
and
addl
shlb
sarb
mov
lahf
add
lods
rolb
lcall
lcall
rcrb
shlb
and
and
add
pop
lcall
pop
ljmp
push
into
mov
mov
cmp
dec
jge
add
rclb
add
add
push
mov
popl
adcb
jbe
shlb
sbb
add
sbb
pop
adcb
and
add
pop
push
xorl
addb
mov
stos
ja
and
mov
push
stos
cmp
inc
add
pop
mov
adc
inc
jle
xor
fadd
sbb
add
add
or
and
dec
xchg
pop
add
lcall
and
lea
mov
popa
add
lcall
mov
adcb
and
add
add
lcall
and
popl
jmp
push
bound
mov
xchg
add
add
or
mov
test
inc
aaa
lea
lea
lea
and
add
mov
or
push
pop
roll
shrb
push
add
mov
int3
add
shrb
mov
xor
test
in
pop
addb
add
sub
jnp
aas
mov
sub
dec
pusha
add
stos
ficompl
stos
shll
add
rcrb
int
adc
arpl
inc
adc
cmp
and
pop
pop
push
andl
loopne
and
and
ret
aaa
mov
xor
sbbb
add
xchg
pushf
add
lods
roll
mov
aaa
aas
and
jmp
push
xor
aaa
stos
sub
and
and
add
aaa
sub
add
xor
and
loopne
faddl
lret
cmp
xor
inc
inc
sbb
or
push
stos
sub
enter
mov
push
rclb
sbb
aaa
add
and
mov
or
hlt
sbb
pop
and
loope
mov
rorb
stos
add
and
sub
pop
and
stos
or
in
sub
pop
push
fldt
data16
push
dec
rol
add
frstor
pop
cmc
sbb
mov
inc
cltd
in
mov
push
inc
sbbb
adcl
xor
mov
push
add
pusha
sbb
aaa
push
inc
add
add
aas
pusha
adc
pop
push
add
push
lcall
and
mov
pop
mov
xchg
and
adcl
pop
cmp
daa
pop
xor
mov
sub
push
inc
sbb
add
aaa
pop
pusha
and
cmp
iret
stos
lret
xlat
push
pop
inc
sti
push
and
aaa
mov
shll
mov
add
fldl
mov
and
iret
and
popf
add
or
add
in
rcrb
inc
pop
inc
push
orl
and
push
inc
cmp
and
out
mov
adc
sti
repz
mov
cmp
aaa
test
add
pop
and
mov
push
mov
call
add
or
add
and
fisubl
addb
add
add
add
push
stos
sti
mov
rol
cmpsl
pusha
add
xchg
test
cmpsb
pusha
add
popa
add
movsb
aaa
pushf
pusha
add
add
sbb
popa
inc
cmp
adcb
lahf
mov
and
imul
add
xor
pop
xchg
loop
mov
dec
pop
add
incl
add
lods
lds
roll
rolb
mov
push
cmp
jo
xchg
mov
or
mov
rclb
sti
and
push
mov
push
add
mov
sti
fs
faddl
add
aaa
lods
enter
add
add
int
stos
xlat
mov
push
adc
enter
fsubl
adc
push
sti
aaa
push
stos
call
daa
adc
pop
mov
add
aaa
nop
lds
and
adcl
sti
stos
loopne
repz
lahf
mov
add
cmp
fildl
add
lcall
movsb
push
stos
dec
xchg
fnsave
mov
ret
ret
and
xchg
push
lcall
cmpsb
ja
daa
mov
sbb
test
pop
push
cmp
adc
xchg
aaa
shlb
add
out
and
and
jo
push
sbb
sbb
sbb
add
stc
pusha
add
push
pop
push
push
mov
adc
ljmp
shll
add
jno
sub
mov
and
cltd
pop
and
lods
push
sbb
test
rolb
jp
and
xor
xlat
and
xchg
inc
add
and
inc
popa
aas
das
push
and
pop
add
add
adc
shlb
pop
lcall
sub
or
and
add
into
shrb
inc
fcmovb
add
add
popa
cmpb
push
sbb
push
jne
ljmp
mov
mov
push
sbb
push
nop
cmp
rolb
push
mov
mov
and
pop
push
fisttpl
test
cmpsb
gs
rorb
mov
bound
pop
add
sarb
cmp
cmp
push
mov
aaa
arpl
sarl
mov
add
jp
sarl
nop
add
add
xorl
pop
mov
add
adc
imul
roll
ret
addr16
roll
push
ret
addr16
roll
ret
xchg
addr16
roll
rolb
gs
add
push
push
lcall
cmp
inc
add
sbb
in
adc
or
cmp
and
or
sbb
movsl
mov
push
lcall
imul
pusha
add
stos
xchg
shlb
and
cmp
mov
aaa
aam
or
stos
and
stos
pusha
add
and
cmpb
xor
sbbb
mov
jno
shll
push
push
shll
and
aas
aaa
in
lea
jmp
and
add
push
leave
push
cmp
daa
aaa
aaa
arpl
add
xchg
mov
push
mov
xlat
insl
fs
xor
mov
mov
xlat
adc
or
or
mov
mov
mov
pusha
xor
push
push
xchg
jle
pop
pusha
adc
in
push
jo
push
stos
inc
addr16
roll
rolb
scas
adc
xor
push
push
push
pop
aaa
pop
sub
cmp
jo
push
pop
daa
shlb
cmp
stos
xor
hlt
add
lret
sbb
andb
mov
jo
and
imul
sub
addr16
loope
jns
add
roll
roll
sbb
lcall
lds
add
lcall
add
bound
push
pop
aad
or
mov
lret
inc
loopne
and
stos
lds
daa
xor
dec
and
loope
pop
mov
inc
jae
inc
jno
mov
mov
pop
inc
cltd
cmpb
add
ret
and
cwtl
pop
and
lods
jg
mov
mov
push
and
lods
loop
sub
fcomi
or
and
cmp
add
lcall
nop
adc
cld
sahf
adc
adc
sub
test
push
loope
and
cmp
dec
pop
xor
and
mov
inc
jl
and
aaa
aam
imul
push
add
jbe
xor
push
jns
loopne
js
addl
sub
xorb
mov
add
in
jge
lea
sbb
add
jb
data16
mov
sti
jl
adc
roll
xchg
adc
sub
nop
roll
fwait
addr16
push
roll
sahf
roll
jecxz
cmpl
jmp
dec
mov
cli
rolb
lods
ss
add
and
lret
add
inc
filds
jp
add
add
sti
inc
add
adc
popa
and
push
mov
stos
add
ret
push
fwait
sti
orl
int
add
pop
rcrb
add
mov
adc
je
add
sti
adc
xchg
loop
add
dec
sub
dec
add
or
xchg
cmp
add
lahf
or
add
or
lret
jae
xchg
mov
add
sti
stos
xchg
mov
add
and
xchg
call
call
add
push
sbb
add
add
add
sti
aaa
loopne
add
and
pop
pop
mov
xlat
mov
add
and
pop
pop
stos
fsubl
and
data16
aaa
add
add
push
daa
in
adc
pop
and
aaa
les
int
and
cmp
stos
and
add
repz
roll
pop
addb
cmp
mov
xor
addb
mov
and
lcall
leave
add
push
stos
push
add
jbe
adc
and
push
nop
stos
pop
addr16
add
pusha
add
add
fiadds
add
push
lcall
and
and
or
add
das
and
pop
daa
and
test
andb
sbb
sub
cmpb
daa
popl
and
out
and
pop
addr16
subl
sbb
lcall
lcall
add
adcb
in
sub
xorl
and
sbb
sbb
mov
add
lgs
mov
push
mov
push
push
add
and
cltd
pop
and
fsubrl
lret
push
mov
inc
adc
add
aaa
add
xlat
and
iret
and
addb
inc
pop
cmp
pop
or
jnp
addl
sti
ja
or
repz
push
aaa
clc
imul
pop
rolb
mov
pop
sub
iret
stos
in
shrb
dec
add
jbe
and
and
mov
in
pop
popl
and
push
pushl
fiaddl
sbb
and
push
out
orb
mov
push
aaa
and
add
push
daa
push
mov
or
pop
lret
stos
sti
mov
or
or
xchg
sti
add
mov
mov
dec
es
inc
add
rcrb
or
iret
push
inc
sbb
lea
addl
inc
mov
fwait
sti
roll
or
or
pop
pop
pop
stos
add
push
stos
sti
repz
add
and
pop
mov
orb
addr16
add
mov
add
push
lea
pop
out
aaa
adc
ret
orb
push
orl
push
jg
push
sti
inc
mov
rolb
sti
aaa
push
inc
cmp
add
fldl
addr16
adc
or
aaa
xchg
or
in
sub
in
rcrb
xor
pop
push
rclb
add
pop
add
mov
in
and
stos
stos
add
mov
cli
aaa
aad
add
add
fisubrs
add
pusha
jns
xlat
sbb
pusha
push
mov
push
stos
inc
sti
sti
push
imul
addb
sbb
add
mov
mov
aaa
pushf
roll
sub
jo
imul
and
jne
inc
outsl
stos
sti
adc
aaa
in
push
orb
aaa
cmc
adc
add
aaa
shrl
loopne
pusha
xor
xlat
and
dec
cmp
orb
addb
sub
xlat
lea
add
mov
push
stos
packuswb
push
aaa
cmc
and
push
push
sbb
daa
in
mov
xor
jnp
in
and
pop
xorb
xchg
loopne
bound
mov
jp
daa
and
imul
and
cwtl
pop
and
mov
add
ret
filds
subl
and
inc
sub
pop
add
and
add
fisubs
in
push
adc
add
frstor
in
pop
pop
add
push
lcall
mov
inc
add
push
rolb
imul
leave
pop
or
mov
cwtl
and
repz
rcl
add
mov
add
ljmp
add
orb
xchg
cmp
mov
push
add
addr16
mov
cltd
push
dec
and
inc
loope
sub
loopne
pop
adc
add
adc
daa
rsqrtps
inc
addr16
add
stos
jae
jle
add
pop
adc
jge
add
add
jl
addl
and
push
push
lcall
in
or
add
push
lcall
mov
sbbb
pop
nop
and
add
add
pop
mov
add
sbbb
add
mov
loopne
push
mov
xor
add
test
add
aaa
jo
and
and
daa
shrb
adc
sbb
pop
or
add
cmp
add
stos
fnsetpm(287
sbb
mul
add
jge
add
inc
or
add
mov
inc
loope
mov
pop
stos
add
mov
stos
das
push
lcall
aaa
divb
and
adc
xchg
push
mov
and
scas
push
push
pusha
xor
fisubl
stos
cmp
mov
stos
aaa
push
mov
fadd
cmp
mov
add
add
iret
mov
add
es
add
fstpl
and
add
sbb
and
mov
sub
pusha
cmp
loopne
add
add
lcall
rcrb
push
add
aaa
sbb
and
out
aas
inc
sub
add
popa
jnp
adc
mov
inc
sub
add
cmp
pop
popa
push
sub
es
jnp
inc
hlt
sbb
pop
loope
addb
push
push
addb
add
or
push
sbb
test
orb
in
add
pop
sub
add
sbbl
add
add
and
icebp
sub
add
add
pop
shll
imul
imul
imul
add
or
xlat
mov
add
and
cmc
adcb
inc
add
or
imul
jmp
popf
in
bt
xor
push
pop
nop
insb
mov
xchg
ret
push
xor
mov
jle
enter
loopne
pop
xor
es
or
je
pop
je
add
das
mov
adc
jp
prefetcht2
pop
sbb
aaa
jbe
rclb
mov
add
js
add
add
adc
mov
cmp
add
and
push
pop
inc
loope
icebp
xor
stos
pop
pop
ja
lcall
jbe
shll
andb
pop
repnz
dec
cmp
or
push
shrl
add
aas
jo
jg
das
cmpsb
add
mov
add
mov
add
stos
mov
push
lcall
aaa
or
mov
pop
orl
adc
push
daa
pop
and
or
add
test
adcb
xchg
mov
add
das
push
mov
pop
nop
lahf
stos
aas
sbbb
xorl
cmp
int3
das
and
mov
lahf
lcall
xor
xor
and
das
aaa
and
xorl
cmp
aaa
xchg
push
xor
add
mov
aaa
push
mov
shll
fstl
xchg
fsubp
into
mov
add
dec
andb
mov
inc
xchg
sub
inc
loopne
inc
xchg
lahf
addr16
push
stos
push
aam
xchg
decl
out
mov
dec
test
xchg
imul
jbe
xchg
adcl
jo
pop
sti
popa
sbb
aaa
and
mov
mov
add
js
inc
shlb
aaa
repz
rorl
lret
xor
mov
fnstcw
sti
push
mov
addl
sub
xor
push
roll
out
addr16
add
add
add
add
and
xor
rolb
lods
pop
dec
rolb
and
sub
jl
inc
or
rcrb
inc
add
push
ljmp
mov
push
jmp
and
addb
push
test
stos
push
add
adc
out
sbb
add
add
and
shlb
xor
rcrb
nop
add
test
jo
pop
fwait
sti
lret
push
test
lret
addb
fstps
aaa
inc
lcall
jecxz
add
aaa
ljmp
iret
in
add
push
sbb
inc
rclb
add
push
fnop
dec
testb
out
stos
push
cltd
fsubp
andb
rolb
add
push
or
mov
add
or
into
rclb
add
and
in
xor
inc
add
xchg
iret
xor
or
xchg
push
pop
lret
pop
out
inc
and
mov
add
pusha
add
movsb
add
add
faddl
stos
lea
mov
movl
pushf
mov
lods
lock
lock
sti
mull
lock
push
jae
sti
cltd
les
repnz
xor
and
sti
add
mul
nop
fistpl
rcrb
lock
rorl
ret
aaa
rolb
rorb
pop
pop
rcrl
add
pop
push
lahf
and
xchg
nop
add
setbe
roll
xchg
jle
adc
xchg
add
xchg
mov
jns
xchg
adc
outsb
inc
add
test
cmp
aaa
xchg
fcmovnbe
or
fs
sbb
mov
divps
jo
pop
aas
andb
pop
cmp
aas
push
push
and
insl
add
in
stos
outsl
insb
movsl
roll
ret
add
arpl
add
arpl
xchg
add
add
addr16
roll
roll
mov
pop
mov
mov
rolb
pop
lahf
adc
push
adcb
mov
fidivs
push
mov
das
and
repnz
daa
mov
addb
pop
arpl
jmp
xchg
lock
arpl
ror
add
dec
outsl
mov
push
mov
lcall
and
and
test
push
lcall
lods
in
test
lret
lahf
add
mov
pop
or
push
daa
pop
and
lods
xlat
add
and
add
test
xorb
xchg
jb
and
mov
add
and
and
add
add
and
pop
sbb
add
add
aaa
out
daa
and
pop
pop
add
in
add
adc
add
daa
add
add
stos
and
lcall
and
mov
add
and
outsl
stos
and
lret
add
add
frstor
and
out
xor
and
adc
fsubs
add
inc
add
and
and
add
addb
push
mov
push
pop
xor
add
dec
mov
cmp
add
lock
add
or
imul
add
add
add
test
add
addr16
mov
add
dec
addr16
aas
add
pop
dec
addr16
test
add
xlat
and
add
inc
addr16
cmp
add
addr16
andl
or
jg
test
jns
add
addr16
add
jnp
lods
add
jns
repnz
and
testb
jne
test
mov
add
addr16
add
jno
push
fildl
add
addr16
inc
inc
add
add
test
cmpl
addr16
xor
xor
add
addr16
inc
push
add
addr16
or
add
addr16
push
add
pop
addr16
pop
adc
add
sbb
and
or
addr16
test
add
add
adc
push
add
adc
inc
addb
packuswb
or
mov
add
scas
or
add
or
mov
test
roll
add
add
add
jg
add
fiaddl
add
aas
or
cmp
add
cmp
nop
and
add
insl
insb
add
aaa
addr16
dec
add
xor
add
xor
lods
add
xor
inc
mov
push
flds
add
add
sub
mov
addr16
cmp
test
clc
add
and
add
and
xchg
add
and
inc
add
add
and
add
fisttpll
addr16
push
add
sub
add
fldenv
dec
add
xlat
addr16
lds
inc
push
roll
addr16
xchg
addb
iret
addr16
adcl
inc
js
inc
add
addr16
add
leave
addr16
subb
inc
add
lds
pop
add
ret
addr16
inc
push
add
sbb
pop
cmpb
aaa
roll
std
in
add
sti
inc
push
rcr
push
stc
popw
add
adc
data16
push
cmc
dec
inc
sub
add
sbb
add
or
fldl
add
fiadds
inc
add
lcall
in
or
das
and
loope
pusha
outsb
mov
loop
add
data16
sub
sahf
pop
rclb
addr16
cmpsl
add
fwait
mov
inc
xchg
add
add
add
xchg
addr16
enter
xchg
addr16
ret
cmp
and
addr16
xchg
inc
orl
mov
loopw
addb
add
andl
inc
arpl
add
xor
mov
inc
add
add
mov
in
add
mov
sahf
inc
sbb
add
add
jg
addr16
daa
and
push
lods
addr16
cmp
add
sbb
sub
mov
mov
fcoml
fstpl
and
add
lods
xchg
push
push
push
inc
pusha
xchg
push
sbb
mov
add
pop
pop
sub
lcall
and
add
mov
aam
push
mov
mov
mov
in
sbb
fldt
fucomp
pop
sbbl
xor
pop
add
lret
mov
or
addr16
and
xchg
fisubs
and
add
popl
mov
mov
add
repz
adc
aaa
in
and
and
sbb
push
xor
outsl
add
mov
and
push
cltd
repz
mov
addb
fxch
subb
push
add
aaa
pop
inc
lods
ss
add
add
push
pop
add
and
or
add
ss
test
fcoml
and
mov
pop
pop
or
pop
adc
xlat
add
aaa
lea
addl
stos
pop
add
aaa
dec
add
and
aaa
pop
pop
and
aaa
push
mov
bound
addr16
add
aaa
scas
pusha
add
shll
push
or
or
loopne
pop
add
stos
rclb
aaa
mov
lcall
das
push
stos
pop
andb
mov
addr16
pop
outsb
push
pop
aaa
icebp
bound
add
popa
push
xor
outsl
arpl
loope
xlat
addr16
cmp
rcll
cmp
and
xor
shrb
push
or
add
and
and
or
daa
push
lcall
push
rolb
out
rcrb
add
add
fildll
add
stos
lods
push
andb
and
add
lcall
push
mov
mov
scas
push
push
xorb
xchg
mov
push
mov
loopne
aaa
fs
mov
inc
or
push
stos
inc
ficoms
sub
or
bound
and
sti
and
aas
stos
das
aaa
test
mov
jns
add
add
aaa
inc
jo
rclb
and
jb
mov
add
push
fmull
subl
inc
add
add
sub
mov
jo
leave
lahf
addb
sbb
push
push
push
add
pop
add
jae
and
dec
push
push
mov
getsec
inc
inc
icebp
add
add
ret
addr16
roll
roll
inc
xchg
add
cmp
and
push
add
push
lcall
in
sub
lcall
popa
orb
bound
and
cmp
and
pop
pop
and
and
mov
pop
pop
stos
rorb
mov
mov
mov
sub
and
aaa
add
add
and
pop
mov
sub
adc
adc
subl
aaa
sub
and
xor
sbb
add
mov
jl
add
movb
add
pop
mov
js
and
aaa
mov
inc
add
cmp
pop
xor
add
inc
xor
or
inc
add
push
mov
xor
in
pop
add
pop
xchg
and
and
into
and
push
xchg
roll
pop
push
stos
aad
xchg
xlat
push
add
sbb
popl
xlat
in
lods
cli
mov
fistl
lods
and
mov
add
mov
mov
or
add
pop
sbb
roll
div
or
add
in
add
pop
mov
call
pop
add
adc
lcall
lret
sahf
stos
leave
mov
inc
add
test
inc
or
lahf
xor
inc
popa
inc
or
pop
aaa
movsl
nop
add
sbb
pop
or
add
mov
daa
out
stos
add
shrb
fstpl
add
stos
fdivs
inc
pop
dec
inc
inc
sbb
aad
adc
add
sbb
in
sub
or
aad
in
stos
loope
in
pop
pop
es
fidivl
enter
stos
add
xor
mov
add
mov
aad
push
rorl
pop
sbb
add
out
lods
cmp
fcompl
ja
stos
fcoms
sub
xor
adc
sbb
or
stos
add
in
and
es
stos
int3
push
xchg
ficomps
es
pop
xchg
push
add
mov
push
xchg
maxps
test
shlb
push
fsubrl
push
stos
cs
cmp
xchg
and
daa
add
xor
push
xchg
add
inc
push
add
xor
test
add
ficoms
push
sbb
push
or
mov
fwait
lret
lahf
add
add
int
mov
roll
adc
and
aam
mov
mov
or
cmp
xor
add
stos
rcll
stos
xlat
add
sti
sti
push
xchg
sti
or
lret
add
pop
pop
add
rcrb
xor
shrb
xlat
and
sti
xchg
add
shll
aam
push
mov
mov
lock
scas
stos
fucomi
add
or
push
mov
xchg
push
ljmp
mov
sti
push
ret
rolb
loop
pusha
add
adc
jno
mov
jmp
pop
aaa
mov
xor
push
pop
and
cli
rolb
push
sub
lock
and
xor
add
stos
fstl
addb
popa
adc
mov
lcall
sub
lret
jb
stos
loop
add
add
das
inc
add
pop
mov
call
and
roll
xlat
and
iret
mov
stos
adc
aaa
sbb
and
rolb
or
inc
lret
aaa
push
sbb
xor
push
sbb
mov
lret
xchg
add
mov
in
stos
ljmp
sbb
sarb
xor
inc
popa
push
lcall
and
pop
aaa
mov
push
add
dec
pop
xor
mov
mov
and
daa
nop
add
repz
xchg
add
or
stos
fucomi
pop
xor
push
lcall
lcall
sbb
lret
push
add
mov
and
inc
add
and
or
insb
fiadds
push
sbb
push
mov
xlat
mov
in
add
push
rcrb
adc
push
loop
adc
adc
add
jo
lods
adc
stos
mov
stos
and
loopne
das
in
sub
rolb
inc
or
mov
add
and
cmpsl
loopne
add
in
test
pop
xchg
popa
add
push
add
add
add
add
loop
add
add
lds
sbb
test
aaa
repz
or
dec
mov
test
repnz
loopne
inc
adc
jae
add
sarl
adc
xor
loopne
add
sbb
mov
add
push
icebp
add
mov
or
in
sub
xchg
and
sbb
push
lcall
ret
pusha
sbb
inc
add
xlat
stos
fcoml
dec
mov
lea
test
mov
roll
add
out
iret
stos
iret
mov
add
sbb
aaa
outsl
sub
and
iret
and
push
ljmp
stos
xor
das
lcall
push
shll
lcall
int3
jo
mov
icebp
or
les
and
shll
xorb
add
inc
push
add
add
in
mov
push
lcall
aaa
out
add
adc
aaa
frstor
adc
pusha
sub
xor
mov
rolb
xchg
inc
lret
or
sub
sbb
or
adc
clc
or
jbe
aaa
nop
imul
pop
rol
loope
mov
add
xor
push
xor
adc
mov
mov
fwait
sub
and
lcall
shll
inc
push
mov
stos
adc
jle
lock
add
mov
cli
push
add
filds
inc
fisttpl
mov
andb
pop
leave
test
stos
aas
pop
adc
adc
cmp
xchg
and
and
lret
int
mov
test
addb
sbb
fisttpl
int
add
subb
flds
add
sub
and
sbbb
xor
iret
add
iret
and
xlat
add
popl
data16
and
add
iret
add
roll
add
pop
pop
xor
add
and
popl
cmpsl
lret
lahf
add
add
add
add
add
push
push
and
add
aaa
xor
and
roll
lret
push
add
adc
add
pop
pop
stos
fldt
xor
and
pop
push
sbb
fimull
add
pop
mov
roll
and
pop
pop
rcrb
add
push
les
add
push
pop
add
add
add
lret
add
or
iret
pop
daa
and
rcrb
sbbb
push
add
aaa
cwtl
add
pop
stos
xlat
push
pop
aaa
cmp
and
pop
add
pop
push
mov
sbbb
rcr
add
bound
add
xor
and
mov
or
cmp
and
adc
and
orb
cwtl
add
lcall
leave
lahf
add
mov
add
popl
imul
lcall
lcall
xorb
pop
les
sub
xor
add
and
in
pop
addb
or
stos
int3
pop
pop
fistl
inc
stos
sti
xlat
stos
rcrl
push
lods
das
in
pop
addl
daa
or
add
in
sub
test
lret
or
sub
mov
add
push
mov
add
add
daa
cld
push
and
inc
jae
sbb
ret
and
add
lret
lret
daa
fisubrs
mov
add
sbb
mov
ficomps
shll
add
rorb
adcl
test
inc
and
xchg
add
and
push
lcall
add
stos
rcrb
add
inc
stos
roll
rorl
popf
nop
stos
sti
iret
and
add
or
sbb
fwait
sti
rol
adc
adc
push
fnstenv
add
adcb
and
pop
loopne
rorb
xchg
pop
add
sub
and
outsl
rolb
mov
addl
mov
mov
shrb
inc
push
add
mov
aas
orl
add
mov
xor
adc
rcrb
rol
iret
and
test
and
push
add
daa
enter
and
add
push
test
stos
adc
sub
adc
rcrb
sbb
stos
rclb
push
xchg
add
out
ds
das
push
mov
stos
iret
shrb
aam
and
fnsave
incb
and
mov
rolb
rolb
sub
jle
mov
inc
aas
push
aas
pushf
adc
adc
mov
rcrb
addb
and
lret
add
and
cmp
jg
add
sbb
push
shlb
and
or
in
sub
push
stos
adc
adc
scas
push
pop
pop
mov
add
add
xlat
push
xchg
mov
xor
push
xorb
and
mov
mov
loope
push
lcall
mov
inc
outsl
mov
and
loop
pusha
or
lcall
jns
sbbb
mov
or
and
add
rolb
push
and
loopne
rclb
add
addb
inc
pop
mov
push
adc
subb
rcll
xchg
ficomps
lods
cmpsb
inc
aas
rol
in
or
mov
mov
mov
mov
push
rcrl
xor
and
sub
aas
frstor
cwtl
aaa
xlat
add
in
pop
inc
in
or
fs
add
andl
xchg
clc
add
and
lret
pop
and
addl
push
aaa
loop
xchg
pop
pop
stos
xlat
cltd
add
lods
aaa
xor
push
xor
insb
xor
loopne
loopne
in
pop
ret
scas
xlat
lahf
aaa
cmc
inc
and
pop
add
push
xchg
rorl
sbb
and
dec
lea
andb
ffree
cmp
pop
and
rolb
cmp
push
into
mov
pop
lret
daa
aam
and
jmp
inc
inc
or
aad
add
pop
adc
push
add
sbbb
cs
int3
add
or
fisubrs
or
pusha
mov
xlat
sbb
mov
pushf
mov
and
lret
fiaddl
and
jnp
adc
add
push
sbb
inc
mov
pop
add
add
repnz
add
das
pusha
sub
in
fstps
add
xchg
and
andb
std
and
or
push
xlat
push
mov
daa
rorb
add
add
jecxz
push
fldenv
xlat
push
lcall
push
pushf
xlat
xor
arpl
lahf
xlat
loope
addl
xchg
inc
or
pop
push
push
sbb
mov
inc
adc
inc
adc
inc
and
inc
adc
jl
sti
roll
lahf
add
dec
ljmp
adcb
adc
xchg
sti
iret
push
flds
add
and
mov
fnstenv
orb
adcl
sub
sbb
addb
lcall
and
ret
loop
add
and
and
mov
inc
or
adc
sbb
addb
xlat
mov
call
daa
in
pop
pop
and
int3
xor
pusha
pop
xor
clc
and
loopne
adc
fildl
movsl
out
mov
addr16
mov
or
loopne
ret
add
inc
or
rorb
push
add
mov
xlat
push
sbb
or
jne
xor
mov
mov
pushf
xchg
shrb
out
mov
add
sub
mov
push
lcall
cmpsb
xchg
and
push
adc
lret
pusha
cmp
loopne
push
cwtl
iret
rclb
push
cwtl
rcll
insb
push
add
push
push
add
es
xchg
stos
into
pop
add
lret
in
pop
xor
add
push
lahf
lds
add
outsb
das
push
pushf
iret
pop
add
leave
xchg
gs
cld
sbb
or
mov
push
cmp
aaa
adc
and
bound
add
or
and
cmpb
and
push
sbb
mov
pop
xor
lock
add
pop
mov
pop
add
sbb
imul
add
add
rcrb
adc
nop
or
in
pop
add
or
adcb
daa
ret
lods
xor
aaa
sbb
sbbl
push
inc
stos
and
sub
pop
add
paddq
sbb
push
lea
les
lea
cld
adc
fsubl
out
or
out
inc
or
inc
or
inc
or
mov
add
ficoml
daa
xor
fstps
shlb
mov
sbb
iret
xor
mov
push
mov
xor
pop
push
jg
adc
cltd
fildl
mov
jmp
push
cltd
xlat
push
stos
aas
push
and
shrl
and
lods
shll
adc
push
adc
sbb
stos
daa
push
lcall
xor
or
pop
push
cmpsl
nop
iret
push
lcall
add
rcll
lcall
pop
lcall
xchg
call
orb
aaa
lds
pop
and
adc
pop
cli
rorb
push
and
shll
add
pop
adc
xor
pop
lock
push
mov
mov
mov
fidivs
cwtl
and
sub
inc
push
cwtl
aaa
add
cltd
loopne
push
cwtl
leave
pop
lcall
and
shrl
sbb
push
add
add
adc
mov
and
mov
add
xchg
inc
loope
shlb
push
or
and
xchg
xor
push
push
pop
or
cmp
and
add
xor
push
xchg
xlat
push
js
aaa
xchg
inc
add
and
add
pop
les
daa
pusha
add
out
pop
rcrl
mov
outsl
rcll
sti
or
xrelease
insl
lods
xor
push
mov
push
fwait
sti
or
sbb
add
popl
aaa
int3
das
add
and
sti
roll
stos
add
pusha
add
add
fwait
sti
rcrb
stos
ret
and
xor
fistl
push
jnp
sbb
push
mov
and
rolb
add
sbbb
inc
int3
aaa
test
addb
adc
add
and
push
cwtl
mov
and
aaa
sbb
aaa
dec
mov
mov
dec
push
add
sub
push
cltd
roll
in
add
mov
std
mov
stos
cwtl
mov
iret
popa
arpl
aaa
or
adc
sbb
add
lock
xlat
stos
cmc
add
push
adc
mov
push
popf
iret
and
mov
and
xlat
lea
and
aaa
dec
cmp
adc
pusha
or
pop
add
jae
add
popf
add
push
add
adc
and
add
dec
pop
push
add
dec
push
add
push
add
push
add
bound
push
mov
and
rolb
pop
sbb
jp
pop
bound
jb
pusha
add
pop
xorl
push
pop
mov
and
out
addb
add
fiadds
push
pop
sub
and
pop
cmp
add
and
aaa
shlb
dec
adc
lret
push
sbb
or
and
add
in
loope
add
ss
flds
add
push
and
push
stos
enter
mov
push
push
iret
push
xchg
push
add
lahf
sahf
pop
sub
sbb
add
and
xlat
push
xchg
in
test
rcll
aad
rorb
mov
fcoml
add
push
add
push
jnp
add
or
push
xchg
lret
mov
iret
cmpb
enter
sbb
shl
sub
push
add
cs
sbb
fildll
les
adc
push
push
lret
ficoms
ficoms
push
iret
lahf
add
das
arpl
hlt
add
in
test
addl
xor
adc
mov
ss
add
notl
lahf
sti
cmp
lret
adc
xor
sbb
adc
adc
aaa
cmp
xor
or
test
pop
sub
lret
add
adc
push
add
fldl
lods
sub
and
sbb
es
aas
push
inc
add
sbb
or
pop
daa
xlat
test
push
add
movl
mov
aaa
push
bound
ss
push
xor
push
aaa
shlb
add
sbb
das
mov
repz
push
mov
push
sbb
add
mov
mov
mov
xchg
mov
xchg
mov
adc
repz
add
sub
faddl
lods
lret
jo
jmp
test
daa
test
loopne
or
sbb
mov
test
mov
add
test
push
mov
popa
sbb
imul
lret
imul
pop
or
sub
pop
test
cmp
mov
add
add
sbb
bts
in
or
shl
and
daa
test
stos
cmp
adc
adc
das
in
add
lret
and
push
pop
push
cmpsl
push
push
push
arpl
add
sahf
push
xchg
sub
mov
push
stos
iret
mov
and
add
add
cmpsl
add
lods
rcll
mov
ss
add
sub
push
lcall
add
add
and
mov
inc
imul
and
mov
mov
sti
iret
push
fwait
sti
lret
push
add
mov
popf
add
add
jle
das
popf
add
add
push
fwait
sti
xlat
mov
inc
add
add
scas
rcrl
add
in
xchg
pop
and
in
test
add
insb
iret
push
aam
xchg
add
pop
movsb
fildl
stos
adc
add
aaa
pusha
and
add
add
roll
fildl
add
mov
push
pop
sbb
addb
fldt
sahf
fcmovnu
add
or
daa
stos
in
add
push
xchg
xlat
add
pop
aaa
and
and
and
iret
and
and
pop
sbb
addb
add
push
inc
frstor
pusha
add
add
add
scas
ret
and
divl
lret
sbb
mov
add
in
add
or
and
push
test
push
xor
mov
sub
mov
orb
and
cmp
mov
mov
add
mov
push
fadds
xorb
sti
xlat
add
lret
aaa
imul
inc
sbb
add
push
add
push
lcall
mov
add
out
mov
lcall
add
movsb
iret
add
stos
aam
xchg
fildl
fcoml
in
shl
and
rcll
addl
lcall
add
int
pop
push
xchg
aaa
push
xchg
add
push
test
push
lcall
lcall
mov
add
push
xchg
dec
lret
push
fwait
add
push
lcall
daa
pop
push
stos
lret
push
or
xlat
add
cmp
pop
pop
mov
push
lcall
stos
adc
and
stos
sub
push
and
sarb
cmp
sbb
sub
push
lcall
mov
stos
xor
loop
lret
adcb
mov
add
adc
add
pop
add
fistpl
stos
rclb
iret
mov
mov
lret
pop
sbbb
push
xchg
lret
aaa
jo
dec
add
out
shrl
xlat
lea
pop
aaa
insb
inc
add
mov
addl
xchg
inc
or
and
mov
rcrb
cmpb
push
xchg
xlat
mov
mov
add
cli
xlat
ror
add
cli
lret
inc
add
or
testl
rclb
add
push
inc
add
pop
inc
add
pop
inc
add
mov
push
lret
add
inc
dec
addb
cmpsl
addb
stos
addb
adc
addb
push
fiaddl
lcall
fstpt
add
xlat
jl
jnp
add
and
and
inc
fidivrl
sub
jle
add
jl
inc
add
fimull
add
sbb
dec
inc
add
roll
orb
adc
push
pop
add
add
pop
into
lahf
add
xor
add
lret
addb
and
mov
add
sbb
mov
stos
testl
in
or
addl
rolb
push
sbb
mov
push
sbb
add
push
xor
adc
andl
mov
roll
popa
add
ss
add
xor
push
stos
sub
sub
or
mov
fwait
sti
iret
sub
fmull
lods
shl
loopne
test
xlat
lods
shl
pusha
subl
sti
lret
in
add
and
xlat
and
shrl
add
add
cmp
and
adc
sbbl
pusha
sbb
add
rclb
push
add
mov
add
addb
nopl
movsb
add
ss
cmp
addr16
test
add
fucomi
pop
add
jecxz
add
pop
out
lcall
or
mov
rorb
push
sbb
jecxz
lcall
add
lret
mov
fldlg2
or
movl
push
mov
shl
lods
and
and
aad
pop
pop
xor
or
jl
mov
mov
jl
add
add
pop
pop
mov
inc
add
orb
pusha
pop
loop
jnp
sbb
add
and
hlt
push
lahf
sti
push
add
shrb
pop
aas
ficomps
add
and
push
xor
push
lcall
in
push
loop
xchg
pop
rorb
push
push
sbb
test
pop
aaa
movsl
rorb
sbb
xor
iret
aam
mov
loopne
fldt
ds
sub
mov
cmp
fmull
inc
add
mov
add
iret
push
sbb
hlt
aas
adcb
add
sbb
stos
xor
push
lcall
lcall
add
xchg
nop
das
mov
xchg
sbb
daa
and
iret
and
mov
outsl
inc
popf
add
add
mov
sbb
sbbb
add
and
sbb
jne
adc
or
loopne
or
mov
addl
shll
or
add
push
loopne
lret
mov
roll
pop
or
xor
orb
add
rcll
pop
scas
and
fildl
pop
iret
add
add
shrl
push
sbb
andl
pop
inc
adc
add
add
mov
popf
add
and
pusha
and
popf
add
pusha
add
add
mov
sahf
add
pusha
add
add
call
add
pusha
add
in
xchg
loope
add
pusha
xchg
sahf
add
dec
mov
lahf
add
add
add
call
add
ror
sahf
add
pusha
add
add
mov
adc
popa
add
push
cmp
pop
iret
add
mov
andl
pusha
add
add
xor
pop
xor
lahf
xor
stos
jecxz
add
xor
jmp
add
xor
mov
add
lds
add
xor
xor
lret
xor
mov
xor
icebp
add
jo
mov
add
stos
and
daa
xor
sub
add
lock
add
add
add
xor
or
add
xor
icebp
add
stos
lock
arpl
add
add
imul
sbb
add
add
lock
add
add
add
add
xor
icebp
add
lock
aad
add
add
add
add
cltd
lock
shll
add
pop
xor
icebp
push
std
or
add
or
add
push
xor
ja
add
xor
repz
notl
add
xor
pushl
add
xor
push
xor
lret
xor
iret
xor
shll
add
adc
add
xor
and
add
xor
sub
add
xor
xor
add
lock
or
jno
add
xor
pusha
enter
xor
ficoms
add
jnp
add
mov
lock
jo
pop
jo
arpl
add
add
xor
outsl
jo
jae
add
add
xor
jg
add
add
add
xor
dec
xor
push
xor
push
xor
pop
push
xor
pop
xor
mov
add
add
add
xor
xchg
xor
fwait
xor
lahf
xor
stos
jecxz
add
xor
jmp
add
xor
push
xor
divl
add
sti
push
xor
pushl
add
xor
xor
lret
push
xor
iret
xor
shll
add
or
gs
add
add
shl
wrmsr
add
push
xor
fwait
jo
xor
jecxz
add
xor
add
add
xor
or
pop
mov
sbb
add
xor
stos
arpl
add
add
add
add
xor
jnp
add
add
xor
inc
xor
std
add
xor
adc
add
add
xor
push
jo
pop
jo
pop
xor
sbb
add
xor
xchg
mov
dec
jo
stos
fwait
jo
lahf
xor
mov
add
xor
stos
pushl
add
xor
xor
lret
xor
pop
hlt
jo
clc
xor
cmc
add
sbb
inc
xor
mov
add
jo
add
push
movb
cmpsl
xor
add
add
push
lock
add
xor
xor
add
push
xor
cmp
add
xor
add
add
push
xor
iret
xor
xor
pop
xor
arpl
add
add
xor
mov
add
add
jmp
mov
inc
stos
xor
xor
test
adc
mov
push
xor
stos
push
xor
pop
xor
pop
xor
mov
sub
lock
add
xor
popa
jo
xorl
add
xor
jns
add
jo
repz
out
add
add
xor
xor
lret
xor
stos
iret
xor
shll
add
xor
add
pop
lret
add
and
lock
xor
stos
sub
add
xor
xor
add
xor
push
xor
div
or
xor
jne
loope
xor
xor
in
xor
pop
push
xor
arpl
add
add
add
xor
jae
add
add
add
add
xor
sub
add
arpl
xor
add
xor
add
add
mov
xorl
xchg
add
xor
xchg
xor
xchg
xor
fwait
xor
stos
lahf
xor
jecxz
add
xor
jmp
add
xor
divl
add
xor
stos
pushl
add
xor
xor
lret
xor
stos
iret
xor
shll
add
xor
add
aam
wrmsr
add
xor
stos
das
xor
xor
add
xor
cmp
add
xor
pop
xor
or
add
xor
pop
xor
sbb
add
xor
xor
imul
stos
push
xor
sbb
add
add
add
xor
push
lock
mov
jno
dec
push
lock
add
add
add
xor
mov
sbb
mov
mov
add
add
xor
jae
add
or
add
xor
mov
add
add
add
stos
xor
cmc
add
mov
stos
xor
pushl
add
xor
lret
xor
iret
xor
stos
shll
add
xor
add
xor
lods
and
lock
add
xor
das
xor
push
xor
aaa
xor
cmp
add
add
push
lock
jmp
xor
cmpxchg
icebp
add
jo
imul
pop
hlt
lock
add
addr16
add
xor
inc
xor
inc
xor
dec
xor
dec
push
xor
push
xor
push
xor
pop
xor
pop
stos
xor
icebp
add
mov
stos
mov
scas
xor
stos
mov
add
add
xor
xchg
add
add
xor
xchg
xor
push
xor
stc
add
xor
jecxz
add
xor
jmp
xor
pushl
add
xor
xor
lret
push
xor
iret
xor
shll
add
or
gs
add
add
lock
add
push
xor
das
xor
xor
add
xor
cmp
add
xor
add
add
xor
or
add
xor
adc
add
jo
pop
xor
arpl
add
add
xor
outsl
xor
jae
add
add
xor
mov
inc
jo
inc
xor
dec
xor
stos
dec
xor
push
xor
push
xor
pop
xor
stos
pop
xor
mov
add
xor
mov
add
push
stos
mov
add
add
imul
add
stos
fwait
add
lahf
add
jecxz
sbb
add
sub
sbb
add
inc
add
dec
add
dec
push
add
pop
add
cmp
add
stos
test
push
mov
push
mov
push
or
push
das
xlat
add
stos
xor
push
aaa
add
lea
push
add
stos
sub
push
add
xor
push
add
stos
cmp
add
add
in
add
push
add
stos
or
add
add
adc
add
add
stos
lds
add
add
int
add
adc
add
jb
add
add
aad
add
pop
stos
inc
add
dec
add
dec
add
push
add
stos
push
add
pop
add
pop
add
mov
add
stos
add
sbb
das
sbb
add
addb
addb
addb
jno
add
add
add
add
addb
addb
addb
push
addb
addb
addb
addb
mov
add
add
addb
addb
addb
addl
addb
xchg
addb
addb
addb
addb
loope
add
addb
addb
addb
icebp
addb
addb
addb
addb
roll
addb
addb
roll
flds
stos
and
sub
stos
xor
cmp
stos
add
or
stos
adc
sbb
stos
popa
addb
rolb
rolb
rolb
jno
add
add
add
add
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
mov
add
add
rolb
rolb
rolb
add
mov
add
rolb
rolb
rolb
rolb
loope
add
rolb
rolb
rolb
icebp
rolb
rolb
rolb
rolb
rol
leave
rolb
rolb
rol
add
rolb
rolb
rolb
and
jb
rolb
rolb
rolb
xor
add
add
rolb
rolb
rolb
rolb
adc
add
add
rolb
rolb
rolb
rolb
jno
add
add
add
add
rolb
rolb
rolb
push
rolb
rolb
rolb
rolb
mov
add
add
rolb
rolb
rolb
add
mov
add
rolb
rolb
rolb
rolb
loope
add
rolb
rolb
rolb
icebp
rolb
rolb
rolb
rolb
rol
leave
rolb
rolb
lock
add
rolb
rolb
ffree
add
rolb
rolb
rolb
sub
add
add
rolb
rolb
rolb
or
add
add
rolb
pusha
add
add
fiaddl
add
pusha
add
add
pusha
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
loopne
loope
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
fldenv
frstor
and
add
stos
and
add
add
pusha
add
add
add
add
test
add
add
sbb
pusha
add
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
aam
push
fsubs
fsubl
and
test
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
loopne
and
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
loopne
and
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
dec
and
add
pusha
add
add
pusha
add
add
fiadds
add
pusha
add
pusha
add
pusha
add
xor
sub
xor
fidivl
add
xor
and
test
add
xor
sub
add
xor
xor
cmp
add
xor
stos
add
add
xor
or
add
xor
push
xor
sbb
add
xor
stos
bound
add
add
add
add
jb
add
add
add
push
lcall
sbb
sbb
pop
mov
add
add
shrb
xlat
push
fistl
add
subps
and
hlt
lcall
sbb
xorb
add
mov
lahf
fdivrp
sbb
add
roll
or
aad
pop
daa
fisubrs
adc
pop
daa
fldl
add
push
aas
fcmovu
das
fiaddl
inc
iret
add
push
fisttpl
add
pop
aas
out
aaa
fcoml
lcall
decl
inc
add
fadds
push
lcall
loopne
pop
mov
jae
inc
push
or
mov
fstpl
mov
push
nop
pop
lcall
sbb
lcall
mov
aaa
add
loopne
sbb
fldl
add
add
add
aaa
adc
aaa
lock
add
mov
mov
mov
ficoml
add
popa
add
faddl
lahf
stos
icebp
add
mov
add
loop
std
and
jg
adc
jb
sbb
mov
add
lcall
and
js
and
cmp
roll
ficoms
add
add
rsqrtps
mov
and
and
fistpl
aaa
xor
add
xchg
mov
cld
mov
lcall
fnstenv
repnz
add
add
fidivl
add
je
xor
fnstenv
adc
add
iret
adcb
add
adc
sbb
test
add
adc
adc
push
and
add
add
sbb
mov
aaa
jnp
add
test
aaa
inc
mov
fnsave
fadds
and
iret
stos
iret
aaa
stos
ret
push
fstps
mov
test
jp
aaa
pop
mov
push
pop
mov
sbb
icebp
arpl
and
add
mov
or
les
inc
ret
adc
sbb
adc
test
sbb
movsb
rolb
rclb
nop
and
aaa
mov
add
add
sub
and
aaa
fstpl
add
pop
aam
sub
adc
adc
jnp
mov
adc
mov
jno
adc
ja
fld
push
jb
shlb
adc
inc
pop
add
in
add
adc
mov
mov
add
mov
and
sbb
and
aaa
aaa
aas
test
push
add
push
add
push
add
enter
add
faddl
add
stos
inc
lds
cmp
rclb
inc
mov
jge
add
push
jge
add
fdivp
add
add
sub
push
pop
icebp
add
add
stos
sub
repz
add
stos
inc
rcll
stos
test
test
fcmovne
adc
xchg
aaa
aam
leave
fidivl
shlb
inc
push
push
add
aaa
cmc
hlt
add
xor
rcll
push
sub
add
add
roll
aaa
fsts
imul
sbb
push
or
mov
sbb
mov
aaa
adc
add
add
lods
icebp
sbb
add
add
xor
addr16
stos
fdivl
aad
or
add
loopne
push
mov
flds
outsb
data16
je
xor
inc
mov
add
mov
xchg
fs
and
sub
mov
add
and
stc
add
fldenv
add
adc
popa
add
and
mov
and
icebp
adc
and
pusha
or
mov
dec
scas
jo
mov
sub
mov
inc
mov
lock
inc
fs
sub
add
shll
jb
popa
add
lods
push
add
and
jl
adc
mov
movsb
or
sub
pop
fstl
stos
lret
inc
add
pop
movsb
inc
shll
fs
stos
ret
into
test
leave
add
stos
xorl
aaa
shll
icebp
sbb
mov
fisubl
sbb
ds
add
testb
add
stos
enter
adc
add
aaa
pop
rolb
mov
and
and
add
pop
lcall
daa
and
pop
andb
dec
add
aad
rcrb
add
add
push
push
push
stos
add
fldl
xor
push
xor
mov
xor
add
fsubrl
add
stos
mov
popf
add
fistl
fnstenv
jmp
and
push
add
add
flds
push
rcll
add
add
fsubs
sub
and
aaa
test
and
aaa
stc
add
adc
into
aaa
or
aad
fsubrl
es
into
inc
aaa
fs
add
ffree
xorb
add
add
add
add
add
aaa
pop
add
sbb
lcall
add
lcall
add
adcl
rolb
imul
add
jo
add
add
adc
ss
adc
sbb
mov
sbb
push
add
jecxz
stos
int
js
add
jecxz
stos
aad
jo
add
jecxz
stos
fnsave
sbb
add
or
or
fs
es
dec
inc
sbb
jecxz
stos
loope
adcb
jecxz
stos
jmp
in
adcb
jne
cmc
add
je
stc
jecxz
stos
std
push
jecxz
stos
roll
push
jecxz
sbbb
sbb
sbbb
xchg
nop
sbb
mov
xchg
adcb
add
add
test
dec
decb
and
mov
xchg
sbb
add
inc
lahf
fsubp
pusha
add
mov
sub
add
pusha
orl
and
jb
or
or
mov
mov
push
loop
pop
rclb
push
sbb
push
push
pop
rcrb
shrb
stos
popf
add
mov
shrl
fldl
orl
addb
addl
addb
addl
sbb
add
mov
sbb
arpl
sbb
es
aaa
loop
or
das
shrb
and
inc
andl
add
pop
mov
add
push
shlb
addb
fldt
fldcw
mov
aaa
pop
popa
or
or
lret
xlat
mov
fsubrl
leave
aaa
mov
inc
add
xlat
mov
loope
aaa
out
bswap
aaa
add
pusha
fsubs
push
add
lret
push
shlb
pop
aaa
cmp
aaa
aad
or
inc
sbb
pop
and
dec
daa
roll
pusha
xlat
mov
add
daa
push
mov
aaa
mov
jg
add
shll
push
and
and
stos
fnstenv
in
ret
cli
fisttps
into
aaa
xchg
lds
lea
push
and
aas
fs
and
and
aaa
or
shrl
xorb
mov
addl
arpl
aaa
outsl
loope
aaa
add
sub
adc
pop
inc
add
fldl
sub
mov
add
inc
int3
add
sbb
add
loopne
push
call
adc
out
add
push
push
add
pusha
add
push
dec
sub
pop
push
out
popa
pusha
add
leave
or
add
push
add
imul
pop
out
popf
aas
fldl
push
lret
aas
push
fldl
dec
loopne
mov
cmp
add
loopne
mov
pusha
add
loopne
mov
mov
add
aad
add
add
pusha
adc
lods
pusha
and
add
pusha
add
add
add
pusha
add
inc
pusha
add
add
add
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
push
add
add
pusha
add
pusha
add
push
pusha
add
add
pusha
add
add
add
pusha
add
pusha
add
pusha
cs
pusha
add
lods
pusha
add
das
loopne
adc
stos
outsl
pusha
add
add
add
pusha
add
loopne
popa
add
jo
lret
push
xor
inc
xor
and
sub
add
mov
cmpsl
xor
mov
add
xor
icebp
xor
std
xor
aaa
lock
or
add
add
movsl
xor
push
xor
inc
xor
jne
add
xor
cmp
add
xor
mov
sti
xor
out
xor
stos
cltd
xor
mov
add
add
xor
jae
add
xor
lret
add
xor
rorl
xor
xor
stos
loope
add
add
xor
dec
xor
jns
add
adc
add
mov
add
add
push
fldl
int
add
xor
xchg
xor
xorl
stos
pop
xor
inc
xor
ja
add
add
xor
xor
add
jo
stos
iret
xor
repz
fwait
xor
xor
sub
add
add
stc
xor
int
add
xor
stos
das
xor
xchg
mov
loope
add
xor
or
xor
aad
add
adc
add
xor
sbb
add
add
xor
pop
xor
stos
xor
stos
mov
add
xor
lds
add
xor
xor
sbb
add
xor
dec
xor
pop
xor
stos
mov
add
add
xor
sub
push
cmc
jo
fnstenv
add
adc
fldl
aas
xor
pop
xor
xor
stos
jne
add
add
add
xor
popf
xor
jmp
add
das
xor
aas
xor
stos
adc
add
add
add
add
xor
mov
add
xor
popf
xor
cmc
xor
stos
shll
shll
add
add
xor
jg
add
add
jo
icebp
and
add
inc
xor
icebp
add
add
pop
sarb
push
jo
nop
cmp
add
mov
and
xor
icebp
add
jo
sbb
xor
ja
add
add
add
xor
fwait
xor
jmp
xor
ret
xor
aad
add
jo
stos
cmp
add
xor
sbb
add
add
xor
cmpsl
xor
mov
add
or
inc
xor
stc
add
add
or
add
push
xor
add
add
add
xor
dec
xor
push
xor
movsl
xor
mov
xor
mov
add
xor
icebp
xor
shll
lret
xor
mov
xor
jnp
add
xor
add
add
xor
fisttpll
fstl
xor
pushl
add
xor
fwait
push
xor
xchg
add
add
xor
inc
xor
out
mov
std
xor
iret
inc
xor
and
fldl
sub
xor
sbb
add
add
add
push
xor
inc
mov
mov
add
jo
xor
adc
add
xor
sub
add
or
fs
mov
sub
add
push
xor
sbb
add
add
add
xor
mov
add
xor
loope
add
xor
std
xor
leave
push
xor
fnstenv
add
jo
aaa
xor
pop
push
xor
jmp
add
add
push
xor
shll
add
add
push
xor
arpl
add
add
xor
mov
add
add
xor
ja
add
add
xor
std
lret
xor
jno
f2xm1
and
cmp
stos
adc
add
add
add
add
xor
xchg
xor
icebp
xor
stos
iret
xor
daa
lock
cmp
add
xor
stos
xor
jnp
add
add
xor
lahf
xor
lea
add
or
fidivs
add
xor
scas
xor
xor
lock
stc
xor
shlb
sub
add
pop
pusha
popa
pop
stos
fwait
xor
mov
fdivl
loopne
pop
fidivl
push
xor
pop
xor
int
add
sub
pusha
gs
xor
enter
pop
stos
movsl
xor
xor
inc
xor
stos
jge
add
add
add
xor
or
add
inc
push
xor
dec
lock
add
xor
xchg
xor
jns
add
mov
lods
mov
mov
mov
mov
mov
ficomps
stos
lods
lods
mov
mov
mov
add
mov
add
lods
mov
add
fisttpl
lods
mov
lods
mov
add
cmpsl
scas
mov
mov
mov
mov
mov
and
stos
lods
rolb
fstp
jo
xchg
mov
lods
lods
mov
add
add
mov
mov
cltd
mov
mov
mov
inc
fwait
mov
fwait
mov
inc
pop
xor
mov
xchg
dec
mov
mov
add
cmpsb
add
fstl
mov
xor
add
add
mov
or
jb
test
cmpsb
add
rolb
add
add
fadd
lea
push
bound
add
push
add
add
mov
pop
mov
mov
pop
lcall
sahf
mov
lods
sbbb
mov
add
mov
mov
cmp
xchg
push
and
add
add
push
inc
push
xchg
mov
mov
mov
mov
popf
cmpsb
add
xchg
xor
xor
lcall
cmp
add
movsl
mov
mov
adc
out
fcoml
add
lods
add
add
pop
xor
lcall
add
rcr
lea
xchg
push
pop
je
loop
nop
wrmsr
pop
nop
pop
push
add
push
mov
mov
lods
mov
xor
add
mov
push
lea
mov
mov
add
stos
lods
mov
mov
mov
add
ficomps
mov
lods
lods
stos
cltd
mov
mov
mov
cltd
mov
lods
add
mov
lods
add
icebp
add
mov
xchg
mov
dec
add
pushf
add
add
add
fwait
mov
pushf
lods
add
mov
mov
mov
add
add
mov
add
jbe
jge
pop
adc
mov
add
fisttpl
stos
mov
mov
dec
faddl
in
in
jno
mov
add
adc
xchg
add
mov
mov
mov
in
mov
or
push
xchg
mov
stos
inc
mov
xchg
mov
popf
popa
orl
orb
mov
stos
lods
mov
mov
fiadds
stos
add
mov
lods
orb
sbb
add
add
mov
add
cwtl
fidivl
inc
scas
cmpsb
sahf
add
pop
andl
add
xchg
mov
add
scas
mov
mov
fisttpl
or
test
cmp
pop
test
add
sbbb
adcl
fwait
sub
stos
test
int3
inc
fisttpl
xchg
mov
mov
add
add
jno
inc
mov
mov
mov
and
sbb
mov
lret
sbb
mov
or
lds
mov
shrl
or
sbbl
test
sub
or
xor
inc
pop
lret
rcll
adc
pop
xchg
mov
push
add
cwtl
lcall
lcall
loopne
xchg
mov
mov
lods
mov
sub
sahf
add
mov
mov
mov
inc
setbe
xchg
inc
inc
scas
inc
cmp
sbb
pushf
stos
lods
lods
mov
lods
inc
or
mov
addb
fstl
lea
stos
lods
add
xor
push
icebp
fimull
jo
xchg
sarb
fldl
cwtl
mov
mov
and
add
rolb
fisttpl
cltd
mov
xchg
stos
mov
mov
scas
mov
nop
mov
loope
adc
mov
dec
xlat
add
fimull
mov
mov
or
mov
add
add
xchg
mov
add
sub
test
sub
ja
pop
and
mov
ja
es
pusha
jg
add
xor
inc
and
xchg
loope
fs
or
mov
add
mov
add
fcmovnb
mov
ret
outsb
and
fs
ret
dec
sbb
push
dec
in
sbb
loope
add
lods
lods
add
mov
push
bound
xor
mov
and
sbb
add
loopne
cmp
xorb
mov
out
inc
dec
add
add
sbb
or
inc
pop
sbb
pop
addl
or
add
or
aaa
addl
add
add
mov
mov
sub
shlb
or
and
cmpb
add
sahf
add
loope
ficomps
push
orb
les
insb
or
add
mov
mov
test
add
mov
dec
mov
stos
je
mov
push
jecxz
stos
inc
sahf
imul
cltd
push
cmpsl
aaa
arpl
add
mov
mov
mov
mov
andb
mov
mov
inc
add
mov
sbb
out
inc
mov
add
xchg
in
in
icebp
mov
add
fisttpll
xchg
shlb
and
xlat
frstor
popf
shlb
popa
jae
add
pop
xchg
mov
test
lods
loopne
out
add
mov
add
ficoms
es
jnp
adc
inc
adc
pushf
add
push
add
loope
add
bound
lods
add
mov
daa
adc
mov
lods
and
push
cwtl
add
movsb
test
stos
rorb
or
mov
sbb
mov
and
fisttpll
fs
sub
jmp
fndisi(8087
pop
sahf
rolb
mov
dec
add
add
aam
pop
loope
call
out
iret
mov
lods
lods
ret
add
add
icebp
add
pop
fistl
xchg
add
jae
or
adc
sahf
add
mov
mov
xchg
add
mov
mov
dec
popf
xor
mov
stos
add
add
add
fisttpll
mov
add
add
aam
mov
adc
mov
rclb
cmp
bound
lock
fldl
mov
push
add
lcall
or
jb
arpl
xchg
add
add
icebp
push
and
pushf
loopne
fiadds
jl
lods
lods
andb
add
xchg
add
mov
jb
roll
popf
mov
mov
sbb
add
mov
add
inc
addl
dec
roll
push
or
add
mov
add
lcall
add
mov
mov
add
mov
and
cmovs
setns
lods
pusha
dec
and
roll
mov
adc
add
add
les
ret
sahf
add
jo
arpl
fs
cmp
add
jne
ficoms
mov
pusha
mov
add
pop
xchg
fwait
rclb
loope
adc
mov
mov
jecxz
mov
push
add
fisttpll
mov
mov
fsubrs
mov
inc
xor
arpl
in
je
mov
icebp
add
jecxz
mov
add
rclb
loopne
lods
loope
push
mov
mov
mov
in
stos
scas
orl
add
or
sbb
xchg
fisttpl
mov
xchg
push
add
aad
and
mov
inc
add
fnsave
or
repnz
test
sbb
add
add
mov
add
dec
adc
jl
xchg
xchg
fwait
add
add
mov
xlat
sub
cmp
sub
xor
adc
add
rcrb
ja
pusha
ret
fstl
loopne
lods
test
in
adc
xchg
mov
mov
sbb
loope,pn
add
repnz
xchg
add
push
adc
or
add
xor
cli
add
adc
pop
add
add
out
jne
push
jg
and
pop
jo
out
xor
repz
sbb
mov
je
dec
repz
add
push
xor
shll
addr16
roll
mov
add
mov
out
push
pop
ret
int3
rcrb
and
adc
xor
fnsave
add
add
icebp
add
mov
roll
mov
repnz
mov
test
dec
jo
mov
nop
aam
shlb
mov
add
imul
add
add
add
xor
mov
into
filds
mov
notb
mov
add
sbb
xchg
mov
cmp
outsb
xor
sahf
mov
movb
push
adc
add
ret
push
add
pop
inc
add
xchg
add
cmpsb
and
pop
add
xor
roll
addr16
mov
mov
jbe
mov
and
adc
mov
pop
fcomp
jb
push
add
jge
mov
mov
mov
adc
or
jo
mov
cmpsb
mov
jg
add
jae
daa
jo
adc
xor
xchg
mov
scas
mov
stos
sbbl
sub
sbb
mov
stos
stos
mov
nop
jno
lcall
icebp
add
fisubs
and
and
mov
and
nop
or
stos
mov
xor
adc
add
cmp
mov
jno
fdivrs
mov
mov
cmpsb
add
mov
mov
lods
add
sahf
lods
mov
lods
mov
dec
fiadds
xchg
mov
mov
scas
lods
add
mov
mov
mov
add
stos
mov
push
cmp
sahf
xchg
in
in
icebp
mov
add
stos
mov
stos
mov
mov
add
mov
mov
insb
push
push
adc
add
mov
mov
push
add
lea
mov
mov
std
fimuls
or
and
lods
mov
add
add
adc
mov
stos
mov
inc
add
mov
movsb
orb
mov
add
add
test
xchg
mov
scas
add
test
mov
scas
lods
mov
mov
mov
push
sahf
add
out
sbb
mov
mov
mov
push
pop
add
mov
sub
out
orb
mov
in
test
lcall
mov
mov
add
mov
mov
lods
add
add
adc
adcb
lods
mov
orl
xchg
mov
add
lods
cwtl
mov
mov
mov
psubusw
add
mov
mov
mov
rclb
mov
lcall
shlb
xchg
enter
add
roll
adc
test
inc
or
add
add
or
mov
mov
and
add
fwait
sbb
add
rcrb
xchg
mov
add
add
mov
rolb
mov
mov
mov
ret
add
inc
add
movb
xor
movsl
add
mov
mov
cwtl
mov
mov
mov
mov
fisttpll
mov
add
cmp
inc
xchg
lds
mov
fisttpll
mov
scas
fisttpll
push
out
les
stos
mov
dec
mov
add
lea
mov
add
mov
mov
lods
mov
add
cmp
adc
inc
or
scas
mov
stos
nop
lods
or
adc
mov
faddp
dec
fwait
add
pushf
mov
adc
pop
lods
add
xchg
popf
add
jg
add
in
lds
mov
int3
add
orb
mov
add
cwtl
add
mov
mov
mov
push
add
xchg
add
mov
add
fwait
inc
add
xor
add
lcall
inc
add
add
arpl
add
clc
and
mov
mov
xchg
mov
mov
add
lods
add
jmp
mov
les
pushf
mov
lods
es
in
addb
mov
and
mov
mov
arpl
lods
mov
add
scas
mov
lods
stos
mov
and
loop
add
xor
add
fimuls
mov
sub
movsb
add
loop
lcall
mov
add
cli
mov
mov
push
dec
add
pushf
mov
stos
mov
leave
mov
or
aaa
add
sub
mov
add
add
and
sbb
stos
scas
subl
stos
orb
and
mov
mov
mov
sub
loopne
insb
add
mov
stos
mov
stos
mov
pushf
mov
inc
andl
cmpsb
add
or
mov
push
add
jg
cmpsb
add
inc
cmovo
jae
add
dec
mov
adc
adc
mov
pushf
mov
mov
rol
pop
mov
imul
mov
adc
push
mov
or
loopne
mov
add
test
add
es
or
ds
mov
add
add
cmpsl
add
loopne
and
lods
add
icebp
andb
popa
dec
les
loopne
dec
out
loope
sahf
add
add
and
pushf
sbb
mov
sub
mov
xchg
xchg
xchg
lcall
lcall
push
add
popa
mov
add
mov
scas
mov
stos
mov
cltd
mov
movsl
add
add
and
test
mov
cmpb
ja
scas
cmpsb
add
xor
add
and
bound
mov
xchg
faddl
mov
subb
add
add
add
loopne
lret
fisubrl
add
stos
mov
mov
test
mov
inc
jecxz
test
add
lods
stos
sbbb
push
fcoml
stos
pusha
je
stos
mov
adc
fisttpl
or
jbe
pop
xchg
dec
pushf
stos
lods
lods
add
inc
je
add
mov
mov
andb
lods
add
jp
nop
adc
out
add
add
xor
lods
cld
in
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
pusha
inc
fwait
movsl
add
fimull
add
addb
fisubs
and
ljmp
lahf
xor
and
add
sbbb
pop
and
and
jo
push
xor
pushl
add
jg
frstor
fidivl
mov
lahf
inc
shll
adc
mov
pop
dec
inc
inc
leave
mov
jmp
mov
pusha
push
les
mov
jle
add
adc
sbb
add
inc
push
hlt
ja
sbb
inc
mov
jb
lds
xor
lahf
scas
add
dec
pushf
rcr
push
testb
inc
lahf
es
jg
xor
pop
int
pop
pop
data16
pusha
add
or
and
or
mov
aas
push
add
cwtl
gs
ja
arpl
pop
mov
clc
out
sub
arpl
push
add
add
xor
jne
pushf
jle
cmp
lock
add
fwait
test
jno
cmp
sbb
or
xor
xchg
movsl
add
lcall
jns
jg
cmp
cltd
rolb
mov
pop
stos
test
xchg
out
ljmp
js
and
and
add
test
cmpb
add
pop
mov
call
push
test
adcb
add
jne
daa
sub
add
pop
addb
mov
add
inc
dec
call
lea
rcll
adc
add
add
scas
loop
or
inc
add
loopne
mov
push
dec
mov
pop
sub
add
repz
add
loopne,pn
sar
pop
add
js
loopne
lahf
jns
mov
jo
bound
call
loop
popf
add
or
loopne
sbb
pop
into
test
adc
lock
test
add
cmp
loopne
dec
sbb
add
jo
add
lcall
add
cld
sbb
add
mov
mov
add
xor
push
fldenv
pop
add
and
loopne
loopne
ss
jp
xor
add
mov
add
adc
cld
mov
loop
dec
and
cli
pushf
add
pop
jae
push
push
out
pop
cwtl
dec
add
or
add
push
xchg
les
cmp
pop
jns
in
pop
lcall
call
in
scas
ret
or
add
pop
popa
pop
add
jge
in
add
lea
add
xchg
cmp
add
jmp
mov
mov
add
fstpt
add
sbb
inc
cmp
add
pop
std
movl
and
add
dec
mov
inc
add
or
pop
aad
ret
sub
in
and
add
push
arpl
and
add
mov
add
cld
add
mov
cld
add
add
mov
cld
add
cld
add
movsl
cld
add
sti
add
add
sti
add
add
add
stos
inc
sti
add
add
cld
add
sti
add
add
inc
sti
add
cld
add
inc
xchg
sti
add
add
arpl
add
cld
add
movsl
cld
add
cld
add
push
sti
add
add
sti
add
adc
jecxz
add
bound
add
mov
push
xor
or
loop
jl
or
jg
push
xchg
adc
push
in
or
pushf
or
inc
rol
or
fisubs
or
inc
adc
or
icebp
sbbb
jle
add
add
loopne
add
add
xchg
add
lahf
add
stos
out
add
addb
addb
addb
movl
mov
add
addb
addb
jo
arpl
sbb
add
add
push
fildll
test
fildl
add
add
addb
addb
addb
pop
addb
addb
addb
addb
scas
addb
addb
jbe
push
iret
add
pop
rcrb
imul
lret
add
ret
out
out
out
add
jecxz
fwait
out
out
add
and
out
out
add
mov
out
add
inc
out
out
out
add
arpl
sbb
adc
push
add
aaa
loop
loop
loope
add
loope
loope
loope
add
fwait
loope
loope
loope
add
mov
loope
add
pop
loope
loope
loope
add
jnp
jae
imul
add
sbb
adc
or
add
loope
loope
loope
loope
add
fneni(8087
shl
lret
loopne
add
sti
loopne
loopne
loopne
add
fwait
loopne
loopne
loopne
add
mov
loopne
add
pop
loopne
loopne
loopne
add
jnp
jae
imul
add
sbb
adc
or
add
loopne
loopne
loopne
loopne
add
add
incl
add
add
add
out
shr
lret
out
ret
add
sti
out
repz
jmp
jecxz
out
fwait
out
xchg
out
mov
addl
mov
out
mov
push
out
dec
out
inc
add
jnp
jae
imul
add
sbb
adc
or
add
out
cmp
xor
sub
and
out
fucomi
shr
lret
out
ret
add
sti
out
repz
jmp
jecxz
out
fwait
out
xchg
out
mov
addl
mov
out
mov
push
out
dec
out
inc
add
jnp
jae
imul
add
sbb
adc
or
add
out
cmp
xor
sub
and
out
fucomi
shr
lret
in
ret
add
sti
in
repz
jmp
jecxz
in
fwait
in
xchg
in
mov
addl
mov
in
mov
push
in
dec
in
inc
add
jnp
jae
imul
add
sbb
adc
or
add
in
cmp
xor
sub
and
in
fucomi
shr
lret
in
ret
add
sti
in
repz
jmp
jecxz
in
fwait
in
xchg
in
mov
addl
mov
in
mov
push
in
dec
in
inc
add
jnp
jae
imul
add
sbb
adc
or
add
in
cmp
xor
sub
and
in
fucomi
shr
lret
jmp
add
sti
jmp
jmp
jmp
add
fwait
jmp
jmp
jmp
add
mov
jmp
add
pop
jmp
jmp
jmp
add
jnp
jae
imul
add
sbb
adc
or
add
jmp
jmp
jmp
jmp
add
fucomi
shr
lret
ljmp
ljmp
ljmp
ljmp
mov
push
ljmp
ljmp
ljmp
add
ljmp
and
ljmp
ret
add
sti
jmp
jecxz
jmp
mov
addl
mov
jmp
jmp
add
push
rolb
loopne
mov
addr16
pusha
cmp
loopne
shlb
add
xor
xor
addb
add
mov
add
loopne
movntq
push
in
in
add
imul
in
in
add
sahf
jecxz
jecxz
jecxz
add
sbb
adc
add
xchg
loop
loop
loop
inc
loope
loope
loope
mov
lret
loopne
loopne
inc
loopne
loopne
xor
and
mov
pusha
inc
fsubr
shr
in
out
lahf
out
mov
mov
inc
out
imul
out
cs
out
loopne
add
shr
or
out
in
cmpsl
in
or
loopne
push
jmp
jmp
ss
jmp
ljmp
ljmp
pop
ljmp
ljmp
ljmp
ljmp
xor
cs
jmp
shr
loope
and
jmp
jmp
add
jmp
jmp
clc
call
call
add
call
dec
out
dec
out
out
out
out
shl
in
out
out
out
xchg
out
out
out
out
pop
out
out
out
out
mul
cmpsb
in
in
in
in
in
in
mov
in
in
push
in
jecxz
sti
jecxz
jecxz
jecxz
jecxz
inc
jecxz
jecxz
jecxz
jecxz
aam
leave
loop
loop
cmc
loop
loop
and
scas
loop
test
mov
loop
jle
jb
sbb
jns
loop
and
fucom
xlat
loope
loope
pop
loope
loope
loope
loope
jp
ja
loope
loope
loopne
add
xor
pusha
pop
add
in
ja
jno
sbb
addb
jmp
jmp
loopne
add
jmp
jmp
jmp
loopne
and
jmp
push
call
pop
add
push
out
out
out
or
ds
out
out
fsubp
shl
loopne
cltd
in
mov
in
in
cmp
shl
loope
mov
pop
in
jecxz
and
add
jecxz
jecxz
jecxz
xor
out
loop
loop
loop
sbb
adc
cmp
and
add
loope
loope
loope
loope
mov
pop
loope
loopne
adc
add
loope
loope
loope
loopne
into
loopne
loopne
loopne
loopne
adc
add
out
out
gs
lcall
push
out
dec
out
add
out
lcall
clc
in
nop
in
mov
sub
repz
add
shl
pop
add
call
mov
add
lret
in
in
in
scas
in
in
jecxz
jecxz
cmp
and
into
loop
loop
hlt
loop
loop
loop
loope
add
add
add
out
push
out
fsubr
and
add
aaa
and
sub
add
jmp
call
push
or
add
out
out
out
out
stc
out
out
out
out
jb
mov
loopne
jmp
out
loopne
loopne
loopne
xchg
loopne
loopne
popa
push
jg
add
inc
loopne
test
pop
out
jg
out
js
push
out
pop
out
sub
out
push
out
insl
out
add
and
sub
and
in
mov
pusha
pusha
cs
xor
loopne
jmp
loopne
loope
mov
jmp
jmp
jmp
jmp
add
ljmp
pusha
dec
jmp
enter
out
loopne
popa
out
add
shl
lret
out
out
adc
repz
and
or
or
add
cs
add
aaa
in
in
in
adc
cld
jecxz
mov
stos
jecxz
add
or
loop
mov
outsl
xor
xchg
shlb
orb
cmp
xor
repz
pop
out
inc
out
outsb
out
add
add
ret
in
mov
inc
adc
data16
xor
jmp
jmp
ljmp
jmp
add
jmp
call
leave
call
call
add
call
call
jge
add
jo
push
sbb
in
in
xor
xlat
jecxz
jecxz
jecxz
icebp
jecxz
jecxz
jecxz
jecxz
mov
test
push
jecxz
fnclex
aad
xchg
loop
loop
shl
loope
loopne
insb
mov
out
mov
scas
out
mov
out
popa
out
mov
dec
in
inc
add
addr16
mov
add
sbb
ljmp
adc
add
flds
jmp
lock
jmp
push
cmp
jmp
call
sahf
call
call
ficoml
out
out
nop
adc
out
add
push
in
in
in
add
xor
in
add
out
in
in
in
inc
jecxz
jecxz
jecxz
adc
aam
loopne
loopne
icebp
sbb
add
add
popf
out
push
out
add
shr
xchg
out
in
or
nop
adc
jmp
inc
jmp
jmp
jmp
call
mov
in
in
in
in
cwtl
jecxz
loop
loop
loope
mov
add
add
ret
xor
in
je
loope
cmp
add
xor
in
popf
jecxz
loop
mov
add
mov
adc
int3
out
mov
add
jmp
adc
and
in
in
xor
in
jmp
jecxz
loop
add
mov
and
inc
loopne
loopne
rorb
fiadds
and
jo
loop
mov
mov
lock
lods
ljmp
ljmp
push
ljmp
ljmp
dec
add
adc
fs
ljmp
or
add
fucomip
cmp
cmpb
dec
xor
sub
sub
dec
add
ljmp
and
push
dec
enter
dec
cld
jmp
nop
push
in
jmp
jmp
cwtl
jmp
jmp
add
mov
mov
lods
jmp
jmp
and
add
call
shr
add
call
shr
cld
call
lock
call
add
nop
call
call
add
mov
add
mov
and
dec
call
call
add
push
jo
insb
call
in
mov
inc
loopne
loopne
sub
add
fiadds
arpl
add
out
std
out
cmc
out
lcall
xchg
out
mov
jg
pop
mov
je
push
out
es
or
nop
in
xchg
jo
jnp
out
in
call
in
or
sbb
cmp
in
and
add
jmp
ljmp
sub
fwait
jo
add
xchg
call
andb
out
out
lock
add
out
out
out
out
sub
pop
ficoml
and
jb
gs
in
jecxz
in
lock
pop
jecxz
jecxz
jbe
push
jecxz
insb
mov
pop
loop
push
loop
loop
loop
loope
mul
repnz
insl
and
mov
loopne,pn
add
fiadds
add
out
out
loopne
cmpsb
out
dec
mov
add
out
jmp
mov
mov
lea
mov
xchg
in
sti
jmp
in
jmp
jmp
jmp
jo
or
lock
jo
xchg
ljmp
jle
sbb
sbb
fucomp
shr
lret
jmp
in
cmp
mov
arpl
cmp
out
lock
add
out
out
out
out
mov
lods
out
out
out
pop
out
out
out
out
cmp
xor
out
and
fxam
aad
iret
in
leave
in
in
in
lock
in
nop
sub
imul
or
fsub
loop
mov
shl
out
and
loope
loope
mov
and
inc
adc
out
jae
fldl
lock
jp
out
pop
out
inc
add
xor
out
inc
out
sbb
out
hlt
adc
mov
sub
add
mov
jae
insl
in
cld
add
icebp
lock
pop
in
pop
in
jle
in
jbe
push
in
aaa
in
sub
in
cmpsb
jmp
jmp
jmp
add
adc
jecxz
scas
ljmp
ds
out
out
out
out
add
cltd
in
in
in
add
pop
jo
jb
sbb
adc
in
in
in
jecxz
add
repz
jae
jecxz
jecxz
add
stos
xor
jecxz
jecxz
inc
jecxz
shlb
jecxz
lock
add
loop
loop
add
push
loop
add
and
dec
push
loopne
loopne
lock
mov
out
fsubr
enter
push
sti
out
lock
mov
xchg
mov
mov
sub
push
lock
out
cmp
ss
out
sub
and
fsts
movsb
repz
in
in
scas
in
test
dec
in
adc
add
cmp
mov
lods
add
dec
rclb
in
jmp
push
jmp
jmp
rcrb
add
aad
xchg
ljmp
xchg
add
in
sub
cmpsl
add
pop
lock
adc
xor
aad
out
out
out
out
add
fsub
jle
ftst
std
add
data16
jecxz
loopne
inc
loopne
mov
and
out
cmpsl
xor
ljmp
mov
cs
call
jo
mov
push
out
out
add
out
out
inc
out
out
in
jo
imul
pop
in
jecxz
jecxz
inc
jecxz
jecxz
loop
jo
cmp
rcll
and
dec
inc
adc
xchg
jo
stos
add
cmp
or
xor
lret
inc
in
mov
mov
in
fcmovnbe
lods
stos
add
jge
cmc
jmp
inc
jmp
jmp
jmp
lock
add
jmp
pusha
out
adc
xchg
in
push
dec
mov
pop
add
mov
dec
loop
loope
xchg
adc
pop
fsubp
push
add
push
cmp
mov
adc
fstl
rcrb
out
add
out
cmp
shr
sti
in
xor
xchg
in
sub
nop
jle
dec
in
icebp
mov
in
sbb
adc
in
add
lret
in
std
jo
test
jmp
jmp
ljmp
aaa
out
out
in
add
stc
in
in
in
add
push
in
in
in
adc
and
xchg
mov
in
in
in
xor
in
shlb
jecxz
adc
push
jecxz
inc
mov
fsubp
loop
rclb
scas
loop
loop
adc
inc
rorb
loop
add
sub
loope
add
mov
loope
add
jb
mov
add
aad
iret
in
loopne
loopne
add
sbb
or
add
add
sti
xor
out
leave
out
jmp
pushf
out
xchg
nop
insb
mov
mov
adc
cmp
cli
nop
test
out
push
andl
movsb
in
inc
adc
ret
repnz
in
in
mov
das
adc
or
jmp
add
mov
mov
mov
imul
jmp
add
pop
jmp
jmp
push
call
call
add
out
out
aad
out
out
mov
mov
out
sbb
add
sub
lret
in
repnz
in
in
in
mov
pop
in
in
in
addr16
in
in
in
fsub
ret
in
in
mov
in
in
adc
push
in
in
jecxz
std
jecxz
jecxz
jecxz
jecxz
pop
jecxz
jecxz
jecxz
jecxz
ss
jecxz
loop
loop
lahf
loop
loop
loop
loop
push
loop
loop
loop
loop
jbe
outsl
loop
loop
loop
fndisi(8087
lret
loope
loope
jl
imul
loope
loopne
shl
xchg
loopne
loopne
loopne
fs
loopne
jg
add
mov
add
fucomi
inc
out
add
pxor
out
nop
out
add
test
add
jb
fs
pop
out
add
out
adc
or
add
cmp
xor
sub
and
fucomi
in
add
in
leave
in
in
std
in
add
in
out
in
out
lahf
in
add
in
pop
in
add
jl
insl
in
arpl
add
in
or
cmp
das
in
add
in
and
fucomp
ljmp
xchg
mov
add
jl
imul
in
and
fucomi
jmp
clc
jmp
jmp
jmp
jmp
sub
jmp
jmp
jmp
mov
jmp
jmp
por
jmp
jmp
ljmp
ljmp
ljmp
ljmp
add
fsubrp
jmp
jmp
loope
add
jmp
jmp
jbe
add
push
jmp
add
call
call
jge
add
call
shl
add
out
out
out
out
mov
out
out
insl
out
out
out
out
xor
sub
out
out
in
out
out
out
out
lret
in
in
in
add
inc
in
in
jecxz
cli
jecxz
jecxz
jecxz
loop
pop
loop
loop
loop
loop
or
xor
sub
and
add
loope
loope
loope
loope
pop
loope
loope
loope
loopne
lods
loopne
loopne
loopne
loopne
and
add
add
add
push
addb
out
out
mov
push
out
add
xor
sub
xchg
out
mov
mov
out
add
out
xor
aam
stc
in
add
in
call
in
add
imul
in
aas
in
add
in
cmc
in
out
in
stos
in
add
in
insb
in
add
in
shr
add
jmp
jmp
jmp
jmp
hlt
ljmp
add
ljmp
add
in
jecxz
mov
andl
inc
and
inc
loopne
add
fiadds
xchg
and
out
add
out
out
add
out
adc
or
cmp
add
out
sub
and
shr
out
dec
inc
jg
out
add
inc
jbe
in
test
mov
dec
out
out
jmp
xchg
in
in
in
xchg
jecxz
jecxz
jecxz
loop
pop
loop
loop
loope
loopne
mov
add
rclb
sub
mov
add
out
inc
in
in
in
pushf
in
add
in
sbb
add
in
jbe
pushf
ljmp
ljmp
ljmp
add
ljmp
add
ljmp
add
ljmp
sub
shlb
js
sarb
and
jmp
jp
jmp
jmp
add
jmp
xchg
jmp
jmp
jg
mov
mov
scas
jmp
jmp
add
push
jmp
add
inc
jmp
add
test
outsb
jmp
call
cmp
add
out
out
out
out
jae
data16
out
in
dec
in
in
inc
jnp
in
cld
in
in
in
in
sbb
adc
xor
es
jecxz
jecxz
jecxz
jmp
in
addb
jecxz
jecxz
jecxz
jecxz
jae
insl
jecxz
jecxz
jecxz
sub
shl
shl
cli
loop
loop
loop
loop
pushf
loop
loop
loop
loop
mov
scas
loop
loope
loope
loope
loope
loope
loope
mov
loope
loopne
jp
push
loopne
aas
fiadds
or
loopne
jbe
xor
sbb
ljmp
and
in
shr
pusha
arpl
jl
sub
and
ljmp
ljmp
and
push
call
out
out
out
fucom
aad
shl
or
out
and
add
out
out
out
out
jmp
out
mov
adc
sub
stc
in
lock
in
in
in
mov
test
inc
in
in
sub
and
jecxz
jecxz
jecxz
pusha
sbb
shl
lret
icebp
loop
sahf
loop
loop
loop
loop
insb
loop
loope
loope
loope
mov
loope
loopne
stc
loopne
loopne
loopne
loopne
add
fiadds
cmpsl
pusha
sbb
out
cmp
out
out
add
test
push
sti
in
out
in
pop
in
add
push
in
xor
cld
ljmp
fsubr
shll
add
jmp
out
out
out
out
push
out
in
in
jecxz
shl
xchg
jecxz
loopne
shl
and
loopne
xchg
push
pusha
setge
adcb
loope
pusha
cltd
inc
xchg
loope
add
add
loopne
ret
add
lock
mov
sbb
ds
xor
pop
jmp
jmp
add
jnp
je
outsb
jmp
add
sbb
adc
or
and
jmp
ljmp
ljmp
addb
pusha
dec
int3
jmp
jmp
pusha
xchg
call
call
sahf
inc
out
out
out
mov
loopne
mov
jg
out
out
out
in
inc
in
in
in
pusha
inc
xor
in
in
in
in
add
jb
or
add
sub
and
shl
int3
add
jecxz
jecxz
jecxz
adc
lods
jecxz
mov
adc
inc
jecxz
mov
add
sub
jecxz
and
add
mov
jo
loopw
add
sbb
or
add
cmp
pusha
mov
loope
add
xchg
loope
loope
loope
add
mov
test
arpl
into
inc
loopne
loopne
iret
fucom
sub
inc
out
mov
pusha
sub
add
in
lods
sbb
add
in
addr16
aas
in
xor
in
stc
loopne
or
cmc
ljmp
ljmp
mov
call
out
out
out
add
fs
in
in
add
and
mov
inc
mov
pop
loop
pusha
test
loope
loope
loope
loopne
adc
ja
daa
loope
fldl
add
sub
out
loope
xchg
out
add
add
cmp
ljmp
cmp
xchg
in
movsl
in
pop
in
or
add
in
mov
mov
imul
in
adc
or
or
jmp
loopne
sahf
jmp
jmp
mov
dec
jmp
jmp
cmp
aad
int3
ljmp
ljmp
and
int
cwtl
jmp
jmp
sbb
add
jmp
shr
add
call
cmp
add
out
out
out
in
cltd
in
in
in
in
jo
adc
cmc
jecxz
jecxz
shl
loop
loop
loope
cmp
add
out
fldl
mov
add
fwait
out
xchg
and
pop
out
insb
out
add
pusha
test
in
push
in
or
or
int
in
movsb
in
adc
cmpsb
scas
jmp
mov
add
mov
push
jmp
call
int3
and
cmp
in
pusha
jmp
jecxz
loop
add
and
loopne
add
loopne
lcall
loopne
loopne
lahf
loopne
pusha
fwait
cmc
inc
out
jmp
out
loopne
cmpsl
xchg
add
xchg
out
mov
xchg
addb
mov
scas
out
test
mov
out
dec
adc
je
out
jl
adc
insl
inc
out
push
push
push
adc
out
pxor
nop
pop
fists
xor
add
xor
sub
daa
out
and
out
fucomp
fsubr
shr
into
add
leave
out
out
out
cli
add
cmc
out
lock
jmp
out
out
loope
pushf
out
xchg
out
xchg
inc
out
out
mov
adcl
add
mov
scas
out
stos
out
movsl
add
mov
out
push
add
pop
inc
out
inc
out
jge
js
out
jae
outsb
xor
sarl
out
and
mov
add
sbb
aaa
push
sbb
jnp
out
ficoms
in
fldln2
aam
jnp
in
lds
in
shr
in
imul
icebp
add
in
rcrb
in
popf
in
cwtl
add
xchg
in
mov
mov
test
mov
mov
cmp
dec
in
inc
sarb
in
outsl
in
imul
in
adc
push
in
cmp
jge
in
dec
in
inc
in
jp
in
popa
jmp
jmp
ljmp
jmp
call
movsb
call
call
fiaddl
out
out
out
out
add
sub
out
add
je
in
in
jecxz
add
push
jecxz
jecxz
loop
inc
jo
push
loope
loope
icebp
es
mov
sbb
out
imul
pusha
outsl
out
pusha
out
sbb
push
xchg
inc
in
push
in
xchg
in
repnz
add
mov
push
jmp
ljmp
fsubr
imul
jmp
push
push
out
inc
out
in
in
jo
mov
loop
loop
loop
loopne
add
ja
loopne
mov
xor
dec
out
pop
add
imul
lcall
jmp
jmp
add
and
ljmp
jmp
jmp
call
call
shl
add
addr16
out
in
adc
enter
cltd
test
ret
mov
icebp
add
pop
loop
loop
loop
and
sub
push
out
or
out
in
xor
aaa
out
in
in
add
mov
ss
and
xor
ljmp
jmp
out
out
pop
out
in
in
in
xor
cmp
in
in
push
push
test
add
fldl
dec
pusha
add
sahf
mov
xchg
jmp
xor
nop
adc
dec
cltd
out
out
out
out
jns
outsb
out
out
rclb
out
jo
mov
add
out
out
sub
in
in
in
in
in
in
or
xor
in
pushf
in
in
adc
in
in
jecxz
jecxz
mov
test
insb
adc
xor
and
nop
pop
mov
mov
movsb
mov
add
loope
loopne
shl
in
pop
loopne
loopne
add
add
or
out
add
out
enter
clc
out
sbbb
mov
aaa
add
out
and
add
mov
adc
in
lcall
fsub
pop
out
lock
and
adc
lock
out
loop
xchg
adc
loope
loope
loope
and
loopne
loopne
int
loopne
lock
jmp
in
popf
loopne
loopne
mov
xchg
mov
test
push
loopne
loopne
inc
loopne
loopne
loopne
loopne
sbb
adc
add
adc
out
ljmp
in
jmp
fwait
in
xchg
add
inc
in
ret
in
in
repz
jecxz
lahf
in
xchg
in
popl
xorl
mov
scas
in
mov
in
dec
adc
in
outsl
in
arpl
pop
in
adc
in
paddsb
adc
pusha
add
in
jmp
fwait
in
mov
mov
dec
in
jnp
jo
sbb
cmp
sub
stos
lret
add
sti
jmp
jmp
jmp
add
mov
jmp
add
jmp
jmp
inc
jmp
jmp
ljmp
fwait
ljmp
add
jp
ljmp
ljmp
xor
add
fwait
jmp
stos
add
pop
jmp
imul
jmp
xor
add
das
jmp
and
jmp
xlat
call
call
ret
adc
call
call
call
lahf
add
xchg
call
addl
nop
and
add
stos
call
pop
call
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
cltd
mov
add
add
shrb
push
sbb
addl
adc
mov
adc
add
lock
pop
mov
add
mov
mov
xlat
mov
mov
add
imul
les
add
hlt
icebp
xor
xor
rclb
std
xor
add
dec
loop
test
cmpsb
mov
aad
pop
int3
mov
mov
cs
sbb
mov
mov
mov
subb
cmp
or
pop
mov
push
aaa
push
cmc
sar
pusha
add
enter
fdiv
insl
push
rcrl
fiadds
sub
mov
js
lcall
mov
push
test
adc
add
xor
ljmp
cltd
cmp
sbb
add
push
xor
add
int
cmp
or
mov
leave
ret
into
mov
fidivrl
cli
pop
and
add
stos
xlat
cltd
add
std
cmp
jo
push
fistpll
es
push
scas
in
dec
sbb
lahf
inc
xor
sarb
inc
or
lock
add
mov
jp
aad
ljmp
mov
jg
movsb
addr16
sti
clc
or
jge
mov
aam
jne
pushf
mov
add
add
or
stos
scas
add
pushf
fists
jl
add
mov
lret
fiadds
frstor
push
adc
fs
dec
inc
jp
xchg
pusha
lret
mov
jge
rcll
loop
add
jo
or
test
shll
aam
out
xchg
jnp
daa
in
push
int
xlat
or
in
or
and
add
xor
out
add
outsl
pop
mov
in
out
adc
leave
mov
add
lods
sub
ljmp
xor
test
das
ret
or
sub
outsb
mov
jb
add
mov
pop
mov
and
jl
sbb
add
sbb
dec
inc
js
mov
pop
adc
add
sub
cli
inc
sub
add
dec
iret
mov
push
aam
push
cmpsb
mov
incb
test
add
out
call
lds
lock
push
sub
nop
fcmove
add
sbb
add
add
inc
ja
pop
leave
cmp
mov
push
loop
lock
mov
mov
data16
in
lods
int
movsl
adc
sbb
xchg
xchg
fnsave
push
in
cmp
test
roll
push
and
or
and
pusha
ljmp
mov
xlat
repz
inc
movb
in
sub
in
push
and
jns
int3
xchg
cmp
push
or
adc
arpl
call
movsb
dec
bound
inc
addr16
inc
and
xlat
sbb
and
mov
mov
or
mov
les
pop
adc
sub
jb
repnz
adc
cmpsl
inc
inc
cs
cld
pop
jl
pushf
push
mov
iret
lods
pop
jmp
xor
cs
jecxz
xchg
lret
leave
ljmp
adc
push
bound
shll
movsb
or
cmp
hlt
jne
inc
jns
mov
in
arpl
bound
xchg
ret
inc
popf
in
push
or
sahf
aad
fistpl
enter
add
pusha
cmp
or
xor
loopne
jbe
mov
mov
and
rclb
int
stos
insb
inc
or
dec
cmc
jecxz
cltd
cmc
jne
mov
inc
fisttps
pop
and
inc
adc
add
or
xchg
pushf
movsl
fs
push
insl
pop
mov
fimull
push
dec
push
and
fidivrs
and
sbb
cltd
push
jge
and
jnp
xlat
inc
les
adc
aad
xor
out
std
and
push
lahf
xchg
shll
xor
rcrb
pop
out
xor
mov
and
push
jb
pop
mov
and
in
in
pop
sahf
xchg
lock
mov
lods
sahf
imulb
subl
push
add
mov
ffree
cmp
dec
sbbl
add
add
add
in
dec
add
add
add
lahf
dec
add
lahf
dec
add
add
add
lahf
dec
add
lahf
dec
add
add
add
mov
dec
add
add
add
mov
dec
add
add
add
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
jo
je
imul
outsl
insb
gs
cs
insb
add
jae
je
insb
jae
fs
insb
add
popa
jb
fs
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
insl
insl
outsl
outsb
push
jb
jo
jb
jns
push
dec
push
add
dec
insb
gs
dec
inc
push
push
outsl
jne
arpl
add
push
gs
je
insb
push
je
jo
gs
imul
je
jo
outsb
inc
popa
jb
dec
popa
insl
gs
