mov
mov
mov
push
lea
mov
sub
test
jne
mov
movzbl
add
mov
lea
mov
shr
and
lea
mov
add
sub
test
jne
mov
movzbl
add
mov
lea
mov
shr
and
add
test
jne
mov
mov
pop
ret
int3
push
mov
push
push
push
push
push
call
test
je
ret
sub
add
sub
call
test
je
call
sub
add
mov
pop
pop
pop
pop
xor
mov
xor
push
mov
mov
push
ret
int3
int3
int3
push
mov
sub
sub
mov
push
call
cmp
jae
jmp
push
push
push
sub
mov
mov
sub
sub
sub
sub
mov
mov
add
sub
mov
mov
mov
add
mov
mov
mov
add
add
mov
sub
mov
add
mov
mov
sub
mov
add
xor
cmp
mov
jg
pop
pop
xor
pop
mov
pop
ret
mov
mov
add
sub
mov
sub
mov
add
call
cmp
je
add
cmp
jl
pop
pop
xor
pop
mov
pop
ret
mov
sub
add
sub
add
mov
mov
movzwl
mov
mov
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
sub
sub
sub
cmp
je
jmp
lea
sub
sub
sub
mov
sub
sub
movsbl
rol
rol
rol
add
xor
cmpb
jne
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
add
mov
sub
cmpl
je
pop
mov
pop
add
ret
push
push
mov
mov
sub
movl
mov
mov
and
mov
sub
sub
mov
mov
mov
add
mov
sub
sub
mov
mov
mov
mov
push
call
mov
mov
mov
sub
sub
sub
mov
call
push
push
call
add
mov
mov
sub
mov
push
push
push
push
call
mov
sub
mov
mov
add
mov
sub
sub
sub
test
jbe
mov
mov
sub
mov
mov
sub
add
sub
jne
add
sub
sub
mov
sub
add
cmpl
je
mov
sub
shr
sub
add
mov
lea
sub
sub
mov
test
jbe
mov
movzwl
shr
mov
sub
cmp
jne
movzwl
mov
and
add
add
add
sub
add
sub
subl
jne
sub
sub
sub
add
cmpl
jne
sub
sub
add
sub
mov
mov
add
pop
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
test
lea
mov
jne
mov
movzbl
add
mov
mov
movl
mov
mov
shr
add
and
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
sub
sub
sub
mov
push
push
push
lea
push
call
test
je
push
mov
push
mov
lea
push
call
sub
sub
mov
lea
push
call
push
push
push
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
sub
mov
sub
mov
sub
mov
add
mov
movzwl
mov
mov
mov
mov
push
mov
call
mov
mov
sub
sub
mov
push
push
call
add
mov
mov
add
sub
lea
push
push
push
push
call
push
call
add
mov
mov
lea
mov
sub
addl
sub
sub
add
add
add
sub
jne
sub
mov
mov
sub
mov
mov
add
mov
mov
mov
sub
sub
sub
mov
mov
sub
add
cmpl
je
add
mov
mov
mov
add
sub
cmpl
mov
je
mov
sub
shr
add
lea
sub
sub
mov
sub
test
jle
mov
sub
mov
and
cmp
jne
sub
sub
mov
sub
movzwl
mov
and
add
add
mov
add
sub
sub
mov
add
mov
mov
sub
sub
jne
mov
sub
add
sub
add
add
sub
mov
cmpl
jne
mov
add
sub
add
sub
sub
sub
mov
add
sub
add
sub
mov
cmpl
je
mov
sub
sub
mov
add
cmpl
mov
je
jmp
lea
sub
sub
sub
mov
add
push
call
mov
test
mov
je
mov
test
jne
mov
mov
add
mov
sub
mov
add
cmpl
je
jmp
jmp
lea
nop
mov
mov
sub
mov
test
jns
mov
sub
movzwl
push
push
call
jmp
mov
add
mov
mov
add
push
push
call
add
sub
sub
add
mov
sub
add
mov
add
mov
sub
add
cmpl
jne
mov
mov
mov
add
mov
add
cmpl
mov
jne
add
sub
mov
add
movl
mov
push
mov
mov
pop
mov
mov
mov
mov
sub
sub
mov
mov
sub
add
mov
mov
cmp
jne
sub
sub
mov
sub
mov
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
push
push
sub
sub
sub
test
jbe
mov
sub
mov
lea
mov
mov
sub
add
sub
jne
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
call
push
mov
call
sub
sub
mov
push
push
call
push
push
mov
call
push
push
push
push
push
push
call
cmp
je
call
add
add
sub
sub
push
push
push
push
push
call
mov
sub
sub
mov
test
jne
jmp
mov
sub
sub
cmp
je
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
push
xor
xor
mov
add
mov
push
mov
mov
mov
and
mov
mov
sub
test
jne
movzbl
add
mov
lea
mov
shr
and
add
test
je
mov
sub
test
mov
jne
movzbl
add
mov
mov
mov
mov
shr
and
add
test
mov
je
mov
xor
or
mov
sub
test
jne
movzbl
add
mov
lea
mov
shr
and
add
test
je
or
xor
lea
lea
mov
sub
test
jne
movzbl
add
lea
mov
shr
and
add
sub
lea
jne
test
mov
je
mov
sub
mov
mov
add
mov
jmp
movb
add
mov
xor
jmp
movzbl
mov
and
add
add
shr
mov
je
test
je
jmp
lea
mov
sub
mov
mov
add
sub
jne
mov
mov
jmp
movl
mov
jmp
lea
call
sub
mov
add
test
jne
cmp
jne
sub
add
call
test
mov
je
lea
mov
sub
add
sub
mov
mov
jne
mov
jmp
sub
jmp
sub
mov
movzbl
shl
add
add
lea
mov
mov
call
cmp
jb
add
cmp
jb
add
cmp
jae
add
test
mov
je
mov
sub
mov
mov
add
sub
jne
mov
mov
mov
mov
mov
mov
add
mov
or
jmp
mov
mov
add
add
mov
mov
xor
cmpl
je
pop
pop
mov
sub
pop
pop
add
ret
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
fiaddl
add
add
add
clc
xchg
add
xchg
add
xchg
add
adc
add
add
xor
movsl
xor
xor
xor
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
mov
mov
ss
cs
inc
aaa
popf
aaa
stos
aaa
out
cld
aaa
adc
pop
cmp
push
cmp
cmp
cmp
cmp
add
add
adc
add
add
and
std
cmp
call
adc
inc
add
jo
cld
cmp
ds
cmp
or
icebp
adc
sub
mov
or
lret
adc
xorl
or
push
push
xor
test
adcb
dec
sub
or
or
xor
cmp
pop
fdiv
fldcw
pushf
test
push
fdivp
sbb
icebp
mov
push
add
enter
fsubp
pusha
je
lds
sahf
je
pop
hlt
sbb
lock
insb
pop
in
outsb
xchg
mov
mov
sub
or
add
fcompl
sbb
adc
mov
mov
xor
and
dec
lcall
sbb
add
call
mov
pushf
xchg
xchg
je
pop
inc
mov
adc
and
dec
lock
xchg
inc
adcb
push
xor
adc
enter
push
and
inc
adc
or
push
test
mov
dec
in
xchg
cld
sbb
adc
and
xor
mov
jp
mov
xchg
stos
and
adc
and
adc
xchg
cmp
adc
bound
pushf
dec
lods
xchg
mov
in
mov
and
xchg
dec
and
lcall
dec
out
mov
push
mov
psubusw
adc
call
and
dec
cwtl
xchg
mov
or
and
data16
sub
data16
and
pop
dec
push
inc
pushf
scas
mov
dec
hlt
mov
adc
dec
jno
xchg
or
and
lock
or
mov
dec
jbe
push
xor
les
dec
mov
test
jb
adc
mov
mov
adc
sbb
dec
or
sbb
or
and
dec
repnz
xorb
push
and
or
dec
pop
mov
xor
inc
sahf
jo
int3
sub
mov
pop
cmpsb
or
loop
fs
or
lock
sbb
adc
cltd
or
sbb
xchg
or
dec
pop
sub
inc
jl
mov
pop
xchg
mov
sub
and
and
movb
jle
push
xchg
sub
push
and
inc
ret
aaa
rclb
mov
rorb
sub
xchg
or
and
fs
dec
mov
rclb
mov
pushf
es
pop
sbb
or
sbb
mov
ret
jo
push
and
xor
xchg
dec
lock
sub
cld
rcll
bound
add
adc
cmc
add
sbb
cmp
cmp
test
loope
adc
mov
xchg
or
and
fs
je
inc
and
arpl
push
sub
or
adc
jae
push
jecxz
sub
xor
daa
xchg
adc
js
jo
push
sub
fldenv
pusha
push
shrb
sbb
pop
sub
sbb
outsb
adc
dec
js
jo
push
sbb
cmp
in
xchg
xor
inc
and
dec
dec
xchg
xor
pop
inc
xor
mov
adc
and
dec
cmp
dec
cmp
inc
dec
cmp
and
dec
aas
mov
mov
leave
and
dec
into
xchg
inc
and
inc
inc
fisttps
inc
inc
cmp
or
inc
and
dec
dec
add
add
push
jae
ljmp
xlat
pop
out
sub
out
in
and
fsubr
jmp
jo
pop
clc
ret
adc
pushf
es
loope
adc
sbb
int3
adcb
pop
fcomps
and
inc
dec
sub
lock
cmovns
fisubrl
add
xchg
fs
rorl
out
pop
mov
pop
mov
xchg
or
iret
add
mov
stc
ds
gs
jecxz
jnp
mov
jmp
aad
test
outsl
stos
loope
das
cmp
cmp
js
cs
or
adc
jge
mov
and
push
add
inc
jae
add
push
sbb
ret
sbb
mov
jb
add
testb
jecxz
repz
add
xchg
add
iret
in
inc
sbb
or
idiv
dec
pop
orl
enter
subb
cmp
call
cmpsb
cs
add
andl
popf
xchg
push
dec
push
add
mov
outsb
jmp
test
sub
movl
insl
xchg
cld
push
jne
ds
mov
test
jmp
dec
jae
inc
xchg
cmp
mov
and
rcll
xchg
xor
shll
mov
repnz
inc
lahf
call
pop
test
mov
es
mov
ja
cs
lds
xchg
jne
add
and
pop
xchg
add
pop
mov
xchg
aam
loopne
cmc
lods
sub
rolb
pop
inc
sub
aaa
sbb
add
cmp
pop
add
rorl
sbb
add
sub
js
cmp
pop
aas
adc
pop
cmp
pop
ja
inc
mov
add
ret
repz
in
add
mov
popf
xchg
arpl
jg
add
sti
lret
mov
fsubp
xorb
push
loope
pop
inc
mov
and
cmpsb
pop
xchg
mov
enter
add
dec
jmp
sub
daa
movsb
jl
cmpb
mov
adc
iret
cwtl
pop
and
cwtl
xor
cmp
ss
lods
call
xor
mov
jb
add
andb
and
ds
jge
push
xchg
mov
out
aad
mov
cmpsb
lea
roll
mov
pop
test
pop
sbb
pusha
and
dec
cmp
xlat
add
inc
cwtl
rorl
test
mov
push
add
call
adc
adc
xchg
mov
sub
and
xchg
cmp
orb
aaa
add
xchg
fnstsw
lret
xlat
pop
je
rclb
inc
or
das
jns
fnstsw
pop
add
insb
testl
mov
mov
data16
mov
ljmp
insl
shlb
movsb
fisttpl
ret
and
into
add
mov
dec
pop
leave
add
test
movsb
das
jg
push
scas
imul
gs
clc
dec
out
cmp
push
add
pop
add
push
ljmp
imul
add
push
divb
ret
bnd
jnp
enter
xorl
add
data16
cmp
lcall
cltd
mov
insl
rorb
mov
jg
cmp
adcb
jo
shrl
xchg
adc
adc
push
sbb
cld
adc
lock
sbb
push
hlt
scas
adc
jo
inc
in
pop
int3
push
loopne
adc
or
aam
mov
xlat
add
dec
scas
and
inc
nop
pushf
orb
adcb
xchg
jno
cmp
ss
adc
testl
imul
inc
add
lods
add
adcl
cltd
lock
sbbl
xor
adc
mov
mov
ret
subl
adc
add
inc
adc
and
outsl
inc
nop
mov
adc
loopne
or
adc
xor
cwtl
rorl
lock
xor
cmp
lret
addl
mov
rorl
dec
jno
inc
hlt
adcl
test
rolb
pop
or
xorl
and
enter
mov
jo
out
add
inc
or
and
addl
xchg
adc
mov
inc
adc
and
inc
int3
adcl
test
and
adc
addl
xchg
and
test
inc
movl
adc
arpl
lock
les
mov
es
xor
roll
adcb
test
dec
sbb
cltd
adc
adc
xchg
inc
xor
cmpsb
mov
and
mov
xor
enter
sbb
popa
adcb
and
push
adc
test
inc
sub
cltd
in
dec
and
fmul
adc
cltd
rclb
mov
enter
xchg
and
int3
adc
and
cwtl
ret
sbbb
sbbl
test
lcall
cmp
xor
and
enter
stos
cltd
xor
adc
cwtl
fdivl
adc
and
ficoms
dec
test
adc
xorw
and
movsb
dec
or
pushf
mov
xchg
adc
enter
cmp
jmp
or
xor
fadd
or
dec
adc
insb
mov
mov
movsb
pop
daa
mov
adc
test
or
sub
clc
data16
jg
es
cmpsb
mov
out
push
mov
mov
js
pushf
sbb
insb
adc
cmpsb
cwtl
adc
pop
dec
inc
jno
mov
push
nop
xor
adc
and
sbb
std
and
adc
adc
mov
inc
shl
movsl
cwtl
loopne
icebp
inc
js
fcoms
pop
test
mov
and
pushf
adc
mov
or
or
adc
mov
xor
xchg
inc
pop
push
mov
lret
cmp
mov
adc
xor
jo
xor
in
and
movsb
add
xchg
fcoml
imul
xor
adc
adcl
subb
mov
imul
push
adc
xchg
adc
dec
and
mov
leave
adc
cmpsb
cwtl
les
mov
xchg
adc
dec
or
xchg
rolb
cmpb
mov
adc
xor
ret
inc
jo
add
push
xlat
rolb
cwtl
jo
dec
adcb
xchg
adc
adc
push
add
push
xor
or
adc
and
mov
lock
mov
sub
adc
xchg
sbb
mov
or
and
hlt
xchg
or
fcompl
inc
rolb
aam
mul
jae
pop
and
bound
xorb
cmc
shll
lock
fs
popa
or
hlt
js
mov
adc
in
sbb
sub
cmc
inc
jb
adc
ljmp
add
sbb
repz
push
sub
mov
outsb
pop
sbb
lock
je
in
mov
addl
add
jno
sbb
fs
adc
aad
sbb
div
in
add
arpl
push
or
adc
add
pusha
outsb
adc
fs
dec
loope
adcl
es
pop
xchg
dec
dec
jl
or
fs
iret
or
mov
and
mov
or
stc
xor
mov
adc
imul
and
mov
or
add
push
push
fbstp
add
push
push
inc
or
push
fyl2x
pusha
add
rcll
sbb
push
sbb
pop
dec
dec
mov
fcomps
lahf
testb
ljmp
add
icebp
data16
adc
pop
mov
gs
jge
repnz
nop
daa
bnd
sub
xor
sub
push
add
xor
rolb
or
test
add
sti
les
cmc
out
dec
push
stc
iret
pop
inc
or
pusha
jl
in
jge
sub
push
xor
cli
jnp
or
iret
pop
push
and
inc
push
and
add
addl
into
push
cltd
add
leave
fisubs
xchg
jb
divb
in
xchg
push
xor
movl
push
vandps
add
jo
sbb
jae
das
icebp
insb
or
stc
in
xchg
add
add
in
or
add
nop
xor
dec
dec
lods
sbb
test
mov
push
jns
ret
sbbb
mov
cltd
dec
sbb
lahf
aas
or
out
cwtl
ds
test
jle
cmp
data16
lahf
mov
xchg
js
jmp
xchg
je
orl
push
add
or
pop
xor
dec
add
loopne
ja
add
fwait
jno
enter
call
loope
pop
dec
or
mov
stos
add
outsl
xchg
lea
mov
and
or
test
mov
imul
adc
mov
push
addb
pushl
lock
hlt
jae
cmp
subb
pop
push
sbb
das
cld
push
dec
sub
add
movl
pop
push
out
dec
add
jp
jle
add
or
aam
test
andl
jge
or
pop
inc
add
aam
jns
sarl
pop
mov
inc
incl
fdivp
push
movsb
mov
add
into
dec
dec
clc
sarb
dec
add
movb
rorl
enter
push
fimull
into
sarb
sbb
cwtl
loope
shl
ror
cltd
add
mov
mov
mov
and
stc
imul
aad
mov
xchg
pushf
xor
arpl
xor
rcll
pusha
xor
add
jp
ljmp
jb
cli
xchg
insl
mul
sbb
loopne
imul
mull
pop
xchg
loopne
add
push
pop
in
cmp
das
cmp
jae
and
xor
imul
and
movsb
lret
test
enter
movl
mov
push
add
xchg
sbb
mov
int
sbb
push
call
ret
sbb
pop
push
clc
add
dec
push
push
leave
push
dec
sub
sub
xor
popa
cmp
mov
pop
and
mov
add
enter
rcl
test
aad
insl
js
push
rcrb
jbe
jmp
stc
hlt
lods
xor
rcrb
push
add
dec
push
sbb
pop
leave
add
mov
add
dec
iret
flds
dec
je
pusha
mov
mov
xor
lret
cmpsl
and
xor
mov
and
and
cmp
lods
ds
imul
std
jb
sub
je
stc
leave
jo
inc
pop
sub
sbb
cmc
nop
adc
add
mov
cmp
add
call
add
add
es
jecxz
xchg
cmp
adc
bound
mov
or
mov
scas
add
jmp
mov
and
in
sbb
ret
jl
sbb
insb
add
negb
and
jl
jb
cmpb
hlt
je
fiaddl
fistpll
enter
stc
or
orl
sahf
fs
rcrb
xchg
push
icebp
xchg
add
nop
push
cmp
pop
mov
fcomi
mov
iret
lret
addl
inc
pop
divl
adc
cs
fsubrl
nop
add
mov
cmp
sub
mov
add
fimull
cld
cmp
inc
add
fisttpl
in
add
xchg
inc
imul
add
or
or
flds
nop
jb
loopne
int3
adc
push
cmp
xchg
pop
gs
enter
iret
mov
imul
lock
cmc
push
dec
inc
repz
loopne
mov
or
push
sbb
jno
or
leave
jns
test
cmp
sbb
push
adc
cltd
adc
mov
inc
lret
dec
add
int3
mov
in
jns
out
sahf
inc
push
mov
data16
mov
in
dec
add
lret
iret
int3
js
add
les
mov
push
into
popa
dec
inc
in
push
loopne
std
aad
dec
pop
pop
push
mov
dec
and
cmp
into
push
add
ret
sbb
adc
cmp
clc
scas
xchg
adc
push
aam
pusha
cmp
cmp
add
push
iret
enter
mov
inc
adc
das
in
jnp
ljmp
push
pop
ret
adc
loope
dec
sbb
pop
inc
add
lock
dec
push
add
push
push
cmc
andb
imul
sbb
add
push
shll
add
cmp
sbb
enter
stos
xor
sub
loope
dec
xchg
pop
mov
rorb
sub
push
cmp
mov
xor
out
orb
fidivrs
pop
mov
stos
jle
push
xchg
insb
in
mov
loopne
stos
sti
cmc
lods
insl
mov
mov
sbb
adcb
inc
and
jmp
sub
mov
pop
add
jmp
inc
or
dec
dec
inc
fcoms
mov
jae
std
rep
jnp
add
rol
jb
add
inc
pop
sbb
mov
or
stos
xor
inc
and
jb
jecxz
and
in
dec
pop
lret
cmc
jp
lock
pop
pop
repnz
push
sar
push
adc
int
dec
orb
rorb
xadd
pusha
loope
movsb
or
jecxz
cmpb
je
adc
fwait
outsl
mov
mov
cmpsl
pop
and
roll
das
mov
cmp
stos
cmp
sbb
mov
jns
andb
xchg
jno
test
inc
ss
lods
inc
and
jo
add
mov
sub
mov
add
loope
push
mov
jmp
xorb
xchg
jl
repnz
aaa
shrb
stos
mov
xchg
xor
in
xchg
push
lret
leave
jp
push
or
jns
aam
stos
inc
rcll
dec
push
push
fisubrl
add
add
dec
and
stc
jbe
ja
clc
jp
mov
cmp
add
cmp
test
sbb
mov
inc
push
adc
add
add
push
sbb
push
out
adc
leave
add
sbb
into
icebp
jo
test
mov
lret
inc
jp
rcrb
dec
rcl
ja
enter
pop
nop
sub
mov
mov
mov
nop
addl
xchg
xor
mov
pop
cli
mov
shlb
mov
scas
push
add
mov
xor
stos
xor
orb
aam
or
lds
inc
add
cmc
jb
push
inc
lods
mov
xchg
sub
sbb
daa
mov
push
loopne
and
jecxz
xor
adc
push
pop
mov
sbb
mov
adc
pop
cs
scas
pop
sub
mov
rcll
psubusw
clc
aam
jbe
ds
push
push
or
cmp
enter
lret
add
or
sub
push
stos
and
and
test
lahf
push
push
cli
cmpb
jg
repz
inc
je
dec
cltd
cwtl
add
mov
test
inc
rcr
popf
push
jnp
pushf
dec
and
push
xchg
dec
fsubrs
mov
insb
sbb
push
add
fcmovnbe
mov
cmp
lods
and
jecxz
ja
fadds
add
xchg
add
add
loopne
xor
cmpl
push
dec
clc
addb
and
mov
icebp
imul
sarb
lods
es
aad
adc
paddq
cmp
fnstenv
ja
out
xchg
inc
nop
jo
sti
std
lods
add
mov
cltd
pop
jbe
in
push
inc
lock
lahf
outsl
repz
lods
sub
loope
or
mov
imull
lock
lret
xchg
loopne
xorb
dec
mov
inc
lret
inc
fidivrs
add
lahf
xlat
pop
pop
add
call
mov
test
call
outsb
sub
and
in
sub
sbb
icebp
jge
pusha
stc
jbe
imul
pop
or
add
adc
pop
addr16
add
pop
pusha
lcall
sub
mov
adc
hlt
and
adc
lret
adc
ret
adc
popf
pop
adc
xor
xchg
loopne
mov
sbb
add
xchg
push
pop
lret
xor
dec
push
or
add
and
mov
add
sbb
push
sti
fcoml
jnp
adc
loop
sbb
push
inc
jo
cmp
jp
in
and
sti
cmpsl
sahf
add
push
dec
pop
in
add
push
int3
pop
mov
jb
cmpsl
add
into
pop
mov
sbb
pushf
sbb
xchg
pop
rol
jbe
add
xlat
xchg
jae
fnstsw
cmp
aad
push
sti
out
jg
sar
dec
pop
fisttpl
stos
push
sti
les
scas
pusha
popf
inc
mov
sub
test
dec
sbb
or
dec
lock
lret
dec
or
arpl
int
dec
loopne
inc
adc
je
pop
adc
shll
add
rcll
inc
sbb
pop
cld
rorl
testl
enter
add
add
pop
and
mov
int
std
xchg
and
add
pop
jno
in
sub
sub
push
add
mov
shlb
lea
pop
push
lret
fimuls
loope
pop
insb
inc
pop
push
inc
cmp
test
add
mov
pop
cmp
mov
mov
jl
mov
pop
add
xchg
xor
adc
js
add
cmp
lcall
inc
pop
aad
xor
test
xchg
sahf
ja
in
xchg
outsl
ljmp
movsb
jbe
loopne
je
add
cmpsb
jns
repz
popa
js
decb
push
and
fnstenv
clc
add
addl
dec
push
fiaddl
fnstsw
into
inc
sbb
xlat
jae
pusha
in
aam
aaa
daa
in
adc
fcompl
out
bound
mov
add
and
push
push
shrb
mov
dec
sbb
rcll
adcb
rorb
xchg
adc
ficompl
pop
add
in
add
call
es
test
test
adc
lods
cli
mov
xor
lock
push
add
push
nop
push
pop
xlat
dec
popa
add
inc
pop
push
sbb
inc
push
rcrb
add
pusha
cmp
mov
imul
insb
sbb
and
clc
push
xor
lock
add
xorl
int3
jne
cmp
xchg
lahf
sub
addb
fiaddl
scas
imul
fwait
pop
int
shrb
addb
inc
jle
add
imul
sub
fimull
and
xor
sbb
mov
sub
xor
cwtl
rcrl
add
rolb
cmp
mov
lock
sbb
mov
add
in
cmp
jg
cmp
pushf
scas
je
sbb
add
outsb
push
sti
jb
and
jbe
clc
adc
mov
mov
stos
jle
lock
ss
imul
test
subb
pushf
jns
cmpsb
dec
ja
aam
lret
and
fisubrl
ret
pop
std
mov
sub
or
pusha
gs
mov
fs
add
lods
cli
xor
jmp
in
insb
sub
test
pushf
inc
cmc
rcrb
xor
lahf
sahf
dec
fmul
or
mov
enter
xor
out
xor
mov
mov
bound
out
dec
arpl
mov
loopne
mov
add
scas
insl
inc
cli
shll
mov
movsb
pushf
cmp
out
loop
inc
fs
les
sbb
sub
push
add
loope
ds
jmp
push
push
cmp
mov
sub
pop
loopne
jnp
inc
dec
add
mov
xchg
jmp
out
add
divl
adc
imul
in
or
and
or
pop
sbb
sbb
jae
fs
stc
insl
and
out
imul
clc
adc
inc
sbb
ljmp
dec
sbb
adc
jo
adc
cmc
out
bound
out
hlt
add
push
jns
hlt
pusha
sbb
jecxz
add
out
pusha
addr16
push
xor
sbb
cs
test
je
aas
pusha
insl
sbb
inc
dec
sbb
cld
push
and
inc
push
pop
or
inc
outsl
sbb
add
les
adc
or
jae
adc
dec
xchg
add
push
loopne
mov
adc
push
dec
bound
cmp
inc
sbb
xor
fidivl
adcb
adc
loopne
je
dec
test
cld
xchg
or
or
and
xor
in
repnz
faddl
aam
dec
and
insl
add
push
outsl
adc
fs
inc
sub
inc
int3
sub
or
push
adc
or
jmp
adc
sbb
or
mov
dec
mov
mov
mov
adc
jne
and
pushf
inc
xor
enter
fidivl
mov
adc
xor
jp
addl
hlt
push
outsl
daa
mov
in
adc
andl
or
shrb
in
adc
push
cmp
inc
outsb
es
outsl
push
jl
icebp
lock
les
cwtl
js
push
inc
inc
enter
js
sub
jo
jl
adc
sbb
shrb
in
cltd
and
arpl
call
add
ror
push
dec
cmc
add
pop
push
sbb
lock
mov
push
sbb
mov
shl
insl
pop
outsb
je
rorl
jno
out
iret
ret
hlt
imul
sub
xchg
popa
jo
push
xor
inc
arpl
enter
lods
sbb
cmpl
cmpsl
or
xor
clc
dec
xchg
cwtl
dec
cmp
xchg
dec
je
xor
pop
daa
or
push
push
fstps
lea
pop
sahf
or
adc
ds
js
dec
rcrb
jne
and
push
hlt
push
xor
rorb
lret
sbb
mov
jecxz
imul
add
les
rcl
je
pop
sbb
or
or
and
sub
sub
movsb
cmc
adc
fs
sub
in
or
push
jno
jl
xchg
inc
and
leave
inc
fldenv
push
adc
pop
mov
mov
mov
rolb
pop
loopne
or
jno
mov
push
adc
imul
sbb
mov
lret
push
mov
push
adc
mov
pushf
aaa
loopne
scas
or
xor
pusha
dec
cmp
pop
push
cmp
xor
in
arpl
ljmp
jno
lock
pop
shl
push
testl
mov
test
ljmp
imul
cmpsb
jb
mov
shl
ja
and
negb
add
hlt
and
pop
icebp
jae
outsl
shl
shrl
lock
bound
mov
pusha
xor
out
cld
das
sbb
mov
mov
insb
mov
ret
rcrb
xchg
push
shll
and
and
shrl
inc
pusha
mov
and
dec
push
xchg
dec
and
inc
inc
mov
mov
mov
inc
or
and
jno
jo
jmp
pushf
sbb
cmp
or
cmp
cmp
ficoms
movsb
ficompl
loop
mov
sti
sbb
cmpsl
rcrb
sbb
lret
arpl
je,pn
add
xor
sbb
and
or
clc
lock
mov
out
jecxz
mov
test
je
pop
sub
test
push
cld
out
addr16
cld
or
and
sbb
js
orb
adc
cs
xor
push
inc
clc
je
orb
cs
dec
add
insl
arpl
out
mov
adc
je
sbb
std
lock
ret
inc
test
hlt
add
shrb
arpl
and
jge
push
int3
or
pop
pusha
and
or
cs
mov
adc
in
aam
dec
sub
mov
outsb
fs
lretw
lock
and
sub
mov
sub
add
mov
and
bound
dec
pop
and
push
xchg
mov
xor
jno
icebp
jae
sub
insl
and
add
jp
push
rcl
push
call
cmp
jnp
hlt
add
mov
cltd
dec
push
fdivr
adc
add
fsubs
adc
add
pop
subl
popa
pushf
hlt
je
adc
mov
inc
mov
sub
push
sub
cmp
pop
test
or
dec
and
test
loopne
sub
cltd
inc
inc
cmp
push
ret
incl
clc
mov
and
mov
lret
dec
adcl
and
jae
push
sbb
notl
push
or
xor
xorb
or
mov
sub
jne
lock
enter
fsubrs
add
and
sahf
inc
enter
je
jle
add
sub
rorb
cli
faddl
cmpsb
and
mov
test
rolb
jge
jecxz
jmp
cmp
rorb
xor
arpl
xorb
js
adc
shl
pushf
das
rcrb
mov
aam
jo
or
cmp
arpl
sbb
lea
or
fcmovnb
jecxz
icebp
orl
outsl
aam
aam
test
xchg
test
aas
mov
xor
add
cld
fdivs
sbb
xchg
jg
mov
xor
scas
xor
in
xchg
call
mov
adc
add
sub
sub
aam
and
xor
scas
cmp
lret
mov
sbbl
jns
inc
sub
loopne
into
push
xchg
xor
inc
jne
into
andl
sbb
test
adc
and
leave
js
and
xlat
push
dec
sub
fsubrs
add
xor
hlt
push
loopne
je
push
xor
pushl
push
inc
test
cmp
push
mov
inc
loope
mov
lods
add
push
pop
les
loopne
testl
repnz
add
dec
inc
add
mov
mov
pusha
dec
pop
xchg
rclb
pop
pop
pop
push
frstor
add
adc
lock
testl
clc
imul
rcrl
pop
push
imul
add
shr
syscall
add
mov
test
jl
jns
fcomp
rorl
mov
pop
push
test
add
mov
add
out
xchg
pop
fadds
je
stc
add
repz
es
lock
rolb
test
test
inc
cmp
xor
add
iret
call
in
je
scas
movl
add
mov
pop
or
mov
enter
call
and
cmp
inc
aaa
mov
popf
push
mov
or
jmp
xchg
insb
adc
mov
inc
cmp
push
mov
popf
lret
leave
add
adcb
pop
lea
rcl
dec
adc
or
add
cmc
xchg
outsb
dec
rol
fcom
les
inc
mov
sub
imul
cld
rorl
cwtl
clc
test
lcall
jp
or
cmp
sti
and
fwait
lahf
cmc
subl
dec
jecxz
sbb
mov
inc
jne
vmread
or
add
or
nop
add
repz
rclb
mov
out
popa
push
sar
xor
shlb
je
ljmp
outsb
inc
les
xor
mov
push
outsb
jmp
jbe
mov
xchg
xor
pop
popa
xor
jbe
or
clc
jae
bound
inc
jle
sbb
and
cmp
adc
jno
nop
ss
inc
cmp
adc
xor
cltd
push
lahf
enter
cmp
shrb
data16
inc
aam
adc
icebp
daa
imul
shlb
mov
pop
jae
fildl
ret
pop
jns
cld
test
test
movsb
pop
add
add
popa
call
mov
cmp
adc
mov
jae
xchg
mov
jne
rolb
pop
ret
clc
test
test
or
call
mov
ret
pushf
cmpsl
cmp
mov
cltd
push
adc
mov
xor
shll
adc
sub
in
and
aam
test
mov
out
dec
aaa
inc
push
and
xchg
loope
xor
test
idivb
add
jno
mov
nop
xlat
test
cmp
push
ffreep
cmp
add
adc
rorb
test
push
orb
loope
mulb
jne
icebp
pop
ret
fsts
mov
cmpsl
adc
xchg
clc
outsl
cmp
adc
add
and
imul
ja
in
andb
addr16
push
hlt
cmpb
xchg
xor
push
enter
sub
cwtl
cltd
mov
cmc
loop
cwtl
addb
divb
in
mov
or
ja
loopne
jmp
in
dec
or
in
and
fimuls
cs
fcomps
into
cmp
dec
push
sub
test
in
add
or
scas
add
jno
fwait
cmpsb
push
mov
imul
insb
sub
testb
xorb
iret
mov
call
movsl
mov
adc
sbb
dec
mov
mov
push
or
lahf
imul
popa
sbb
and
sbb
or
rorb
pop
push
adc
push
nop
and
loop
aas
test
mov
sarb
or
sbb
fwait
adc
mov
xor
loopne
xlat
aam
inc
pop
lods
pusha
cmp
jne
sbb
rcll
add
inc
test
test
jl
or
testl
inc
cmp
call
cmp
out
and
lea
jae
rclb
inc
pusha
xlat
jnp
rcrb
test
or
pop
mov
movsl
lret
xor
xchg
adc
cmp
pushf
pop
aas
mov
push
add
jo
les
or
push
sub
dec
pop
sbb
fmul
sub
inc
stos
mov
adc
cwtl
add
dec
add
mov
test
mov
stos
orl
pop
and
push
or
cmp
pop
adc
call
hlt
push
xchg
int
cmpsl
inc
mov
mov
mov
mov
sbb
lds
and
or
add
and
ret
add
push
lods
jo
add
push
inc
mov
imul
adc
int3
adc
test
mov
inc
imul
nop
mov
sbb
jae
adcl
pop
test
add
aaa
mov
aam
adc
xor
cwtl
inc
xchg
cmpb
or
pop
or
rcrb
and
push
and
movsb
push
inc
inc
push
inc
xchg
addb
call
test
jns
testl
sbb
mov
inc
mov
subl
cmp
inc
clc
test
push
adc
test
mov
and
add
out
nop
shr
mov
push
add
mov
or
inc
mov
mov
fadds
mov
loopne
call
and
andb
lds
mov
inc
add
mov
or
cmp
daa
loopne
and
mov
ret
outsb
andl
inc
aas
mov
nop
mov
and
sbb
leave
mov
hlt
movsl
or
cwtl
jo
movsb
jmp
lea
daa
jae
sub
cmp
jb
pop
mov
out
jne
lahf
pop
mov
dec
pop
fsubr
mov
mov
cltd
push
or
jo
addb
push
pusha
xor
gs
cmpb
mov
mov
add
and
fcompl
dec
enter
inc
push
pop
and
adc
add
cmp
dec
ds
inc
add
addl
and
mov
std
xor
and
daa
ret
enter
in
bound
push
call
cmp
cmp
mov
push
imul
nop
imul
dec
sub
pop
xchg
in
incb
pop
mov
inc
add
and
aam
mov
xchg
mov
or
mov
xchg
test
push
sbb
test
push
inc
push
push
add
test
and
aad
add
sub
mov
and
roll
xor
mov
cmpsl
pop
push
xchg
push
les
jp
call
add
scas
movl
popa
or
hlt
out
cli
pop
jge
adc
cmpb
push
notb
les
add
clc
and
andb
mov
popf
xor
fistl
sub
sbb
push
rol
cmp
add
push
push
xchg
cmpsb
pop
andb
lds
xor
mov
cmp
dec
jne
loopne
adc
in
sbb
pop
add
mov
addb
rol
mov
push
cltd
mov
out
and
fisubl
xor
push
cwtl
aam
push
daa
test
dec
mov
mov
test
lock
add
push
jae
cmc
sub
sbb
addb
cmc
add
dec
and
inc
jne
cmp
mov
les
out
orb
add
imul
or
xor
sbb
sarb
addr16
and
add
add
cwtl
pop
aad
xchg
jns
add
clc
sub
sub
les
add
lock
call
in
ljmp
lea
sub
add
dec
mov
call
adc
in
fwait
cmp
sub
pop
jno
enter
into
cwtl
les
xor
jmp
mov
adc
mov
adc
mov
cwtl
orl
test
hlt
add
andl
pavgb
jb
sub
fmuls
rclb
push
add
inc
push
test
adc
js
push
leave
xchg
movhps
xlat
and
js
sub
mov
aam
xor
add
cmp
js
loopne
xor
and
nop
je
or
or
filds
dec
add
sub
je
cld
incb
push
push
ret
aaa
call
pop
mov
adc
mov
test
jnp
jl
pushf
pop
leave
mov
cmpsl
in
mov
fs
adc
push
cwtl
mov
push
fs
dec
fimuls
rcl
push
lea
adc
cmp
lcall
cmp
push
stc
jl
ret
leave
int3
enter
rsqrtps
ljmp
mov
sub
repz
dec
push
loopne
sub
xor
cmp
and
adc
lods
mov
mov
roll
je
add
pop
das
ret
call
cmpsb
xchg
add
mov
fs
cmp
pop
and
xchg
and
gs
mov
push
mov
push
adc
mov
rcll
pop
cmp
pop
ret
and
or
sbb
imul
and
pusha
xchg
cwtl
and
xor
dec
cmp
push
pop
sbb
pop
int3
or
and
adc
sbb
inc
cmp
push
nopl
push
je
or
mov
in
pop
xchg
mov
aas
jmp
fstps
pop
cmp
adc
ja
pop
push
js
mov
data16
jo
mov
add
clc
negb
lea
pop
add
push
cs
sbb
sub
jge
push
inc
and
sti
mov
xlat
mov
nop
mov
jo
enter
inc
mov
adc
push
mov
loopne
jbe
sahf
je
out
arpl
je
xor
fwait
inc
dec
adc
clc
or
push
imul
iret
push
xor
cwtl
dec
mov
inc
call
or
xchg
sbb
adc
dec
mov
mov
and
imul
or
push
sbb
cld
add
and
and
nop
xlat
and
test
or
sbb
jae
add
mov
pop
and
ja
or
xorl
xchg
and
and
sbb
mov
sub
adc
sbb
pusha
hlt
test
and
inc
cmp
call
add
xor
psubsb
andb
and
jmp
sbb
mov
aam
fs
cwtl
mov
dec
enter
and
cmp
ror
mov
clc
mov
es
inc
jl
cmp
mov
arpl
lock
pop
adc
dec
jno
les
lods
sbb
and
or
imul
mov
mov
popf
mov
cltd
je
mov
xor
les
nop
js
adc
or
call
xor
xor
xchg
add
push
dec
and
pop
sar
xorl
nop
rorb
in
roll
addr16
adc
call
mov
mov
out
pop
lcall
or
les
addl
sarb
push
and
mov
add
mov
rolb
cmp
sbb
cmp
cmpl
mov
idivl
rcrl
adc
in
dec
sarb
testb
mov
adc
cwtl
or
mov
and
jbe
add
mov
bound
add
mov
shlb
or
call
mov
mov
push
mov
jns
aad
mov
dec
test
adc
fnstenv
imul
mov
mov
loopne
mov
xchg
add
mov
jl
dec
ret
movsb
prefetch
jbe
movsb
adc
mov
xchg
mov
jo
xchg
add
jp
jne
and
inc
mov
inc
call
test
hlt
pushf
cmp
push
jl
mov
xlat
mov
mov
ror
push
sbb
bound
icebp
sub
cmp
inc
hlt
or
mov
xorb
outsl
mov
xor
xchg
pop
adc
pop
add
sbb
add
xor
mov
push
cmp
mov
xor
subl
cwtl
and
adc
mov
add
shll
dec
call
pop
or
call
cmp
sub
mov
mov
dec
mov
push
or
sub
or
bswap
and
cmp
sbb
shl
rorl
inc
fisubrl
mul
xor
fdivrl
testb
rorb
fmuls
sbb
jmp
mov
push
test
push
add
bound
and
adc
adcb
ret
fcomps
inc
rolb
lods
mov
pop
clc
adc
imul
mov
xor
adc
fwait
imul
cmp
orb
pop
mov
inc
or
xor
mov
xorb
cwtl
or
sysenter
xor
push
inc
add
cli
pop
add
add
add
ljmp
movsb
orb
sbb
clc
xlat
adc
test
loope
sub
add
xor
cs
or
pop
pop
leave
je
out
cmp
imulb
add
lret
add
adc
jnp
je
add
stc
outsb
and
ljmp
repz
mov
push
inc
dec
xchg
or
add
push
js
jnp
pop
lea
nop
addl
add
xchg
mov
shll
pushf
stc
repnz
pop
ret
clc
adc
fisttpl
inc
adcl
pop
mov
shr
or
movsl
es
ja
js
push
pop
jns
xchg
jbe
fsub
shll
decl
jns
push
sbb
insb
or
add
pop
and
test
inc
sbb
sub
and
js
idiv
call
outsb
stc
shrb
cld
push
mov
lock
add
or
dec
shll
pushf
xchg
sbb
cwtl
dec
push
pop
shrb
movsb
rol
jl
xchg
xor
add
jp
push
jge
pop
and
adc
fmuls
xchg
les
mov
and
cmc
es
ud0
aaa
or
xchg
scas
adc
mov
mov
jno
inc
mov
into
lcall
lea
addr16
lods
movsb
adc
idivl
loopne
push
push
aam
inc
enter
mov
add
cmp
or
cwtl
jecxz
jno
add
mov
push
adc
mov
cmc
mov
fmul
inc
and
sub
push
or
movsb
cli
add
push
jb
and
jne
or
adc
pop
rorl
inc
pop
orb
pop
dec
inc
dec
decl
push
or
inc
and
xor
push
add
lds
dec
test
add
jecxz
cmc
call
or
lret
dec
jl
adc
or
dec
andl
xor
call
dec
sbb
xchg
fadd
out
bound
or
dec
adcl
out
mov
mov
add
leave
sub
add
mov
add
cmp
and
cmp
jmp
or
or
mov
int
cmpsb
jl
imul
ljmp
pop
add
sub
das
push
xorb
mov
pushl
iret
ret
aas
or
or
or
cltd
call
rolb
dec
and
push
pushf
mov
cltd
mov
pop
nop
shr
mov
adc
mov
push
mov
mov
adc
xor
sub
inc
nop
and
xlat
mov
xchg
adc
dec
and
push
mov
psubsb
add
and
mov
xchg
es
xorb
shr
mov
push
aas
rcrb
cmpb
cmp
adc
mov
clc
xchg
repz
cmp
push
cwtl
jmp
cmp
jmp
mov
or
fisubrl
popf
push
jo
fwait
xchg
rolb
sbb
xchg
clc
int3
or
add
aam
push
sbb
nop
call
cmp
mov
adc
hlt
add
hlt
nop
mov
mov
jmp
push
push
clc
shll
enter
call
cwtl
xor
repnz
sub
cwtl
pushf
mov
notl
iret
dec
adc
rorb
aad
out
push
add
xor
pusha
call
sub
or
daa
dec
inc
test
jg
jl
jmp
and
pop
pop
add
ds
inc
push
notb
cmc
or
addl
pop
jb
jle
call
mov
call
gs
mov
iret
xlat
subl
pop
xorb
notl
out
movsl
pusha
mov
movl
rcrb
add
add
out
pop
xorb
inc
ja
rclb
adc
sbbb
fcmovu
cmc
sbb
sub
jbe
sbb
fsts
push
jae
pushf
lods
sub
insb
and
inc
loope
fimull
loopne
or
in
ss
dec
mov
fadds
adc
cmc
insl
enter
dec
loopne
jle
mov
mov
xchg
enter
cmp
pop
nop
add
push
loopne
mov
std
pop
into
stos
lods
add
rorl
ret
cwtl
jno
xchg
sbb
mov
les
int
xchg
pop
mov
fidivrl
sub
add
pushf
xchg
jg
enter
mov
rcrb
sbb
jp
and
fs
xchg
loopne
call
lret
test
lock
sarl
or
pusha
call
je
add
rorb
int
jp
pushf
xchg
and
add
or
dec
rolb
lea
and
or
xor
push
inc
mov
jo
push
xor
iret
adc
mov
xchg
mov
enter
xor
xchg
sbb
inc
jo
xchg
mov
adc
in
clc
pop
xor
test
or
add
shl
and
push
fadd
fmuls
push
mov
mov
fmuls
cwtl
and
rorb
aam
gs
push
jo
push
in
and
xor
and
add
gs
mov
jnp
les
fs
adc
inc
or
call
jb
gs
test
data16
mov
sbb
and
push
icebp
push
arpl
or
add
ljmp
loope
addr16
mov
and
or
mov
and
push
call
add
adcb
jmp
loopne
and
in
lods
ror
push
mov
mov
or
mov
lret
mov
inc
mov
sbb
cld
enter
push
push
and
jbe
mov
sub
pushf
push
or
jo
jne
push
sbb
mov
push
xchg
les
imul
xchg
push
xchg
push
call
add
andl
imul
mov
sbbb
xor
inc
mov
jmp
dec
jle
es
dec
push
pusha
lea
in
gs
or
int3
inc
rorb
jb
popf
adc
xchg
sbb
add
cmpb
rcl
subl
add
loopne
xor
packuswb
adc
iret
jmp
cld
jns
mov
mov
mov
push
mov
jmp
mov
nop
and
mov
pop
sub
mov
add
bound
mov
and
subb
in
xor
jbe
scas
clc
add
daa
jge
mov
cmp
enter
mov
inc
push
sbb
test
lock
shl
push
addr16
popa
pop
addb
cmp
rolb
in
cmpb
mov
test
or
ret
int
and
fdivr
es
sti
inc
mov
pop
adc
xchg
dec
jle
cmpb
push
incb
call
or
nop
cwtl
and
repnz
repz
push
jle
mov
add
inc
mov
or
jae
dec
pop
lock
add
cmovae
sbb
jg
and
pop
lock
push
and
mov
pusha
mov
dec
sub
dec
test
insl
add
dec
jae
clc
shl
cmc
sub
out
inc
jb
call
or
dec
xor
push
pop
sbb
iret
or
ja
push
sbb
leave
add
shlb
push
imul
pushf
test
and
insl
adc
inc
shlb
add
gs
fcoms
mov
pop
fcompl
jo
push
cmp
or
xor
prefetchnta
ror
mov
dec
push
dec
in
cmp
andb
and
lds
inc
xor
or
adc
lcall
minps
adcl
aam
mov
xchg
pop
nop
xor
dec
mov
pop
call
sbbb
cli
loopne
mov
lods
inc
imul
jns
cmp
dec
mov
dec
inc
rolb
push
sub
dec
imul
add
push
push
inc
jo
or
out
sbb
jl
jl
repnz
addl
jns
test
mov
in
dec
mov
jbe
ja
addl
pop
xorb
inc
sub
sub
mov
add
imul
test
sbb
fwait
mov
jne
push
dec
or
mov
xor
push
inc
inc
or
add
or
popf
xor
jg
in
jecxz
cmp
fcompl
aas
orl
xor
das
test
sub
xor
mov
cmp
jo
call
lock
cwtl
loope
in
in
adc
mov
mov
mov
cwtl
mov
testb
mov
ljmp
xor
ja
and
aam
imul
push
add
pop
daa
test
in
loopne
inc
aam
and
and
repnz
das
out
cwtl
pusha
pop
jecxz
sbbl
cwtl
scas
loope
enter
test
mov
loop
jns
mov
and
or
xor
jl
adc
and
or
cmpsb
addr16
pop
test
cmc
out
pusha
xor
iret
sbb
xchg
sar
std
jne
invlpg
mov
cmp
cmc
ja
loopne
or
scas
insl
cmp
mov
jmp
es
nop
lock
add
mov
addb
adc
addb
push
jmp
adc
enter
notl
nop
fnstsw
cmp
pushf
hlt
rolb
mov
mov
inc
adc
add
or
fs
pusha
push
call
sub
pushf
pop
add
cmp
pop
and
jne
jo
mov
add
pusha
pop
ja
testb
and
xor
int3
jge
dec
jne
and
sbb
je
sub
mov
mov
mov
jecxz
mov
int3
inc
out
sub
push
push
fcoms
jmp
stos
and
dec
ret
in
add
push
clc
aas
inc
fiadds
or
hlt
sbb
xchg
mov
stc
jo
jmp
je
jmp
jae
aad
test
shrb
out
mov
ret
clc
movsl
sbb
xor
jmp
in
adc
cmpsl
inc
mov
xchg
in
mov
stc
push
cwtl
fimuls
pop
add
sbb
pop
out
sub
scas
aaa
mov
test
mov
popf
sarl
mov
and
and
mov
movsl
mov
punpckhbw
iret
jo
mov
or
cwtl
mov
add
pop
je
sar
dec
mov
jo
icebp
cld
mov
push
in
mov
adc
rorl
filds
adc
arpl
popl
jne
inc
stc
or
nop
push
jg
push
mov
nop
mov
add
leave
push
test
nop
adc
call
out
rclb
sti
shlb
and
stos
and
cmp
fs
clc
adc
add
ds
sub
dec
pmulhuw
addb
addl
mov
xorb
mov
jns
mov
and
xchg
xchg
mov
mov
add
lock
scas
in
pop
or
lock
in
je
add
fbld
jbe
insl
addr16
in
fistl
mov
sub
pusha
jno
test
jg
inc
mov
cmc
and
or
xlat
push
mov
push
pusha
jle
loopne
test
push
stc
in
cli
mov
mov
dec
sub
lea
les
sbb
stc
sub
jmp
add
or
mov
das
enter
lcall
nop
jmp
lea
sub
int
insb
dec
and
insb
push
subb
lock
imul
rorl
adcl
add
mov
or
jnp
sbb
sarl
repz
jmp
mov
fcoml
add
cwtl
pop
mov
sbb
adc
rcrb
push
jge
add
xor
and
pop
sub
or
push
sbbb
pop
push
clc
nop
adc
sbb
mov
or
mov
call
js
loopne
out
imul
or
int3
ror
addb
cwtl
pop
sti
mov
mov
test
adcb
lock
cmpsb
js
nop
sbb
mov
aad
push
lret
fsts
enter
mov
subl
lock
xchg
adcb
or
fisttps
hlt
clc
inc
pop
and
push
jl
or
jmp
cmpsb
adc
or
rol
inc
stos
add
xor
repz
movsb
push
call
mov
iret
repz
xor
inc
clc
xchg
push
pop
loop
movsb
push
and
add
mov
mov
cld
fldcw
inc
in
dec
dec
adc
fcomps
jl
cmp
leave
je
rcll
sub
adc
ds
movsl
or
loope
push
cmp
or
push
mov
in
cmp
subb
movsb
or
or
pop
adc
and
dec
mov
roll
mov
jbe
dec
popf
push
or
movsb
mov
and
add
mov
ljmp
leave
add
xchg
and
mov
movzwl
movb
addr16
mov
je
test
out
pop
daa
xor
pop
les
insb
xor
push
add
lods
in
xchg
and
ja
xor
mov
inc
adcl
mov
daa
mov
xchg
inc
pushf
push
inc
mov
dec
mov
cmp
mov
sbb
sub
inc
mov
mov
mov
push
ret
ror
cltd
xor
lea
je
lods
out
adcb
or
push
add
sub
cltd
cs
movsb
ljmp
jo
aas
or
pop
icebp
pop
mov
addl
mov
dec
and
sub
je
xor
sub
mov
inc
mov
cwtl
cld
pusha
xchg
test
jmp
sub
sar
xor
nop
lea
push
xorl
push
cmpl
mov
push
clc
lea
and
popf
add
add
out
fidivrs
popa
adc
mov
and
mov
cmpsl
mov
mov
inc
add
add
push
je
int3
imul
nop
test
fwait
jns
aam
add
dec
mov
mov
pop
add
test
les
push
inc
sbb
adc
and
jmp
aad
adc
mov
scas
jo
fistps
adc
add
cmpsb
and
adc
mov
mov
dec
cmp
xor
xchg
inc
mov
adc
inc
mov
fmuls
pusha
and
adcb
shl
mov
loopne
shrb
add
mov
cmc
push
add
mov
or
xor
xchg
test
push
push
scas
xchg
pop
mov
ss
shrl
cwtl
fildl
pop
bound
dec
arpl
data16
leave
sub
mov
sar
adc
mov
jmp
lock
popa
movsb
adc
inc
sub
rcl
mov
mov
push
fs
inc
jmp
jmp
xchg
push
cwtl
push
pop
popa
faddl
push
mov
cs
push
jmp
lahf
cmpb
jbe
lahf
inc
mov
les
push
cwtl
and
mov
xor
adc
clc
sti
or
inc
xorb
shl
xchg
add
dec
addb
test
popa
popa
sub
loop
add
lods
push
jp
push
lods
cmp
inc
cwtl
sub
or
js
inc
cmp
cwtl
dec
addr16
adc
adc
mov
insb
test
add
rcrl
insb
sbb
pop
sub
nop
rcll
in
jl
mov
xor
and
adc
inc
and
cld
adc
ret
sbb
shlb
cwtl
xor
jb
push
cwtl
out
clc
pushf
sbb
pop
add
inc
pop
testl
or
outsb
adc
cmp
sti
fisttps
xor
mov
xchg
adc
cmpsl
or
movsb
xor
ret
adc
xchg
adc
pop
js
je
xlat
mov
sbb
dec
add
or
insl
push
fdivs
jne
push
loope
in
or
and
mov
fsts
jge
les
dec
loopne
and
inc
test
add
insb
in
scas
inc
fs
inc
adc
cmp
jo
adc
and
inc
or
lock
shr
add
adc
mov
or
inc
cmpb
andl
jg
les
cmpb
cmp
cmp
xor
mov
push
xchg
xchg
lock
dec
loop
xor
dec
add
mov
push
push
scas
add
add
mov
add
and
or
xor
push
fstl
xchg
psubb
out
clc
push
mov
ret
push
shr
add
jbe
xorb
adc
sub
add
mov
sbb
adc
incb
pop
push
orl
xchg
out
bound
imul
out
mov
push
push
inc
lock
and
call
xor
xchg
or
loopne
stos
js
ret
push
pop
cmpb
mov
jmp
test
lret
or
add
sbb
lret
cli
sbb
mov
or
hlt
push
push
pop
test
js
or
and
cmpsb
jo
xlat
push
movsb
pushf
pop
inc
cmp
mulb
push
dec
add
adc
push
ja
dec
sub
pusha
pushf
push
movsb
xchg
push
addr16
cmp
push
lods
stc
rolb
stc
lods
or
dec
add
mov
pop
shrb
std
mov
ret
or
inc
adc
mov
xchg
ljmp
aam
shrl
adc
je
lods
adc
pop
call
scas
adc
or
jo
je
push
je
sub
add
mul
je
rol
cmp
add
mov
test
arpl
or
leave
and
sbb
das
mov
xrelease
test
push
jl
inc
sbb
mov
rorb
addr16
adc
test
sbbb
cmp
and
or
inc
pop
and
add
add
pop
int3
inc
pop
or
inc
ret
add
add
mov
dec
mov
jp,pt
or
rorl
inc
cld
or
clc
loope
inc
push
pop
call
inc
fldl
sarb
subl
mov
cmp
lock
adc
pop
pop
push
cwtl
je
inc
fdivrl
dec
in
jno
or
mov
lock
icebp
test
mov
and
out
dec
dec
pop
cmp
lret
push
shlb
test
push
outsb
adc
mov
or
faddl
addr16
imul
in
jmp
mov
adc
cld
pushf
xlat
loopne
ret
jb
pop
pushf
xchg
les
pop
lahf
sbb
xchg
sub
cmp
mov
shll
call
sbb
lods
enter
push
adc
jmp
push
stos
mov
mov
scas
mov
fwait
fs
jae
sbb
lea
xchg
pushf
sahf
nop
push
xlat
mov
mov
xor
adc
or
cld
rcrl
mov
cmp
push
xchg
cmp
leave
add
mov
cmpb
pop
cmp
gs
mull
mov
cmp
push
xor
mov
loop
mov
ss
fs
je
sbb
push
or
inc
jl
push
aas
call
add
mov
divb
pop
xchg
or
push
xor
test
pop
xor
pusha
dec
push
mov
and
add
ffreep
mov
mov
push
pop
cmp
and
enter
ret
jmp
push
cwtl
sub
fcoms
rorb
sbb
sub
dec
cmp
incl
out
out
dec
mov
rclb
mov
gs
push
push
test
ds
inc
sbb
enter
test
int3
rorb
sub
push
or
mov
fcoml
dec
add
jl
mov
inc
mov
mov
mov
and
outsb
xchg
pop
adc
sub
mov
xor
insb
mov
rorl
das
push
subb
cmp
repz
scas
out
mov
mov
loop
sub
loopne
daa
cli
dec
mov
test
dec
aam
or
shlb
out
pop
inc
sti
add
cmp
push
mov
hlt
les
lock
hlt
cmc
or
cmp
xor
pushf
daa
lea
dec
fsubl
xor
lret
add
jne
sub
cmc
push
call
sub
xchg
sbb
cltd
mov
mov
lods
mov
pop
xor
rcrb
lea
and
out
orb
mov
hlt
and
inc
jg
xor
jae
xlat
xchg
push
ret
push
lods
lods
adc
add
clc
dec
mov
hlt
addb
mov
call
fsub
rcr
cmc
add
inc
repnz
mov
nop
cld
sub
mov
xor
xor
adc
lock
pop
cmp
adc
nop
mov
or
or
test
push
cld
cmp
pop
sbb
or
adc
xadd
adc
mov
dec
push
mov
adcb
pop
outsb
and
hlt
test
ljmp
mov
jne
testl
mov
inc
mov
and
andb
cwtl
mov
cli
ret
jg
into
mov
add
lds
iret
scas
push
movsb
loop
shlb
dec
push
sbb
inc
and
imul
push
cmp
add
mov
cwtl
xor
lods
pop
xchg
or
inc
jl
or
dec
mull
inc
mov
stos
lods
hlt
orb
hlt
sbb
addr16
loope
add
or
pop
or
call
ret
mov
sbb
ret
xor
inc
cmc
push
cltd
or
push
enter
std
dec
call
inc
bound
loope
sarb
xchg
addr16
sbb
cmp
stc
inc
or
add
dec
je
dec
divl
and
push
add
sbb
dec
pop
mov
add
imul
mov
xor
xchg
test
sbb
inc
mov
mov
jle
pushf
xor
xor
mov
xor
jo
nop
sub
lods
cmp
xor
xor
adcl
lock
int3
dec
add
js
dec
dec
push
clc
and
cmp
imul
rcrl
jg
jno
xchg
cmp
ja
push
add
inc
mov
aad
jbe
cmovo
addr16
xorb
mov
nop
cltd
cmp
aam
roll
inc
or
jo
int3
mov
rcrl
jmp
sub
push
push
add
addr16
call
insb
adc
mov
adc
add
loop
cmc
cmp
and
jmp
call
inc
add
push
imul
pop
les
push
push
cli
adc
hlt
test
addb
adc
ret
aad
shr
add
lahf
gs
es
cmp
adc
mov
jns
call
sbb
je
cmp
push
jmp
add
add
jne
sub
inc
push
mov
add
les
mov
pop
mov
and
lahf
xorb
fnstcw
add
sub
subb
adc
and
lock
lods
mull
call
in
cmp
je
and
add
imul
pushf
test
pop
dec
cwtl
hlt
add
mov
pusha
push
aaa
in
mov
adc
enter
bound
imul
movsb
jge
jo
add
add
add
inc
add
clc
adc
adc
push
sbb
dec
cmp
dec
roll
push
add
aam
add
add
inc
add
imul
lea
push
mov
mov
cwtl
cmp
cld
xchg
or
dec
mov
arpl
or
inc
lar
fcmovnb
sarb
incb
test
cli
push
mov
clc
pushf
je
fdivl
xchg
xchg
push
xor
imul
or
xor
cmp
dec
add
test
inc
into
pop
aam
xchg
mov
add
mov
loopne
add
cmp
adc
adc
pop
push
and
push
std
jge
movsbl
sbb
imul
je
add
xchg
xchg
cmp
cs
or
out
push
fadds
add
xor
cmp
xchg
mov
js
xor
sbb
push
shlb
xchg
fadds
jmp
jl
out
inc
test
cs
or
pushw
add
add
jbe
jl
jp
mov
js
hlt
dec
sub
shll
add
mov
shr
pushf
sbb
xchg
shrl
push
or
push
inc
push
lds
mov
inc
addb
xor
pop
ljmp
scas
mov
mov
loopne
test
popa
lcall
data16
incl
dec
pop
shrl
sbb
ss
adc
dec
add
loope
std
inc
sbb
pop
dec
in
pop
je
mov
sbb
clc
sbb
cmp
cwtl
add
test
mov
and
inc
call
dec
aam
cmp
cmp
jecxz
mov
lea
and
adc
add
pop
pop
pop
in
xor
adc
test
push
mov
sbb
lods
in
sbb
mov
jle
sub
dec
icebp
pop
push
dec
mov
dec
cmc
gs
sbb
and
mov
mov
xchg
cmp
cld
scas
push
test
es
or
movzwl
dec
cwtl
cmp
push
push
push
pop
push
imul
dec
pop
loope
rcll
loopne
pusha
aam
push
pop
lock
test
cs
fdivrs
fdivs
or
mov
loopne
xor
mov
dec
js
js
mov
inc
or
inc
mov
mov
pop
or
enter
pop
test
push
iret
ja
push
hlt
dec
or
and
imul
push
ret
fsubl
mov
call
lahf
in
mov
test
push
add
and
rol
sbb
sbbb
nop
jo
inc
cmpsl
pop
out
or
movsb
or
ret
shl
xor
add
cli
or
cwtl
adc
mov
push
test
mov
mov
cmp
and
lds
fdivs
imul
pusha
xchg
add
cwtl
mov
mov
mov
addl
aam
sbb
loopne
inc
adc
mov
cld
lods
and
dec
push
mov
sbb
je
mov
lods
jge
adc
cld
sub
pop
popa
dec
or
xor
test
adcl
dec
push
rcr
cmp
orl
jno
pop
loop
add
dec
adc
mov
enter
cmp
or
push
mov
adc
adc
xchg
and
add
movsl
push
jmp
aam
fs
lock
cld
inc
xchg
jl
stos
adc
cld
mov
adc
and
and
xor
sbb
cmpsl
icebp
test
cmp
movsb
inc
xor
pushw
mov
and
inc
cld
mov
adc
sti
push
xchg
push
enter
or
mov
call
push
and
mov
or
lods
add
add
addl
mov
je
cs
dec
push
mov
xor
imul
jl
in
aas
sbb
mov
insb
push
cmp
and
int
stc
fcompl
mov
ljmp
cmpsb
mov
sarl
lret
push
int3
pop
cltd
mov
jno
or
int3
les
or
jecxz
out
daa
and
pop
add
xor
nop
dec
sub
or
dec
inc
sbb
add
adc
int
sbb
insb
leave
adc
nop
data16
fcomp
popa
daa
push
faddl
lret
pop
in
adc
adcb
repz
xor
push
inc
cmp
or
adc
mov
mov
enter
jno
sbb
int
cmp
cmp
mov
or
and
push
sahf
leave
push
sub
and
mov
test
xchg
int3
or
jl
pop
cmp
add
xchg
call
aaa
mov
adc
mov
dec
nop
pop
test
xor
pop
enter
jmp
call
test
push
cmp
lods
xchg
in
xchg
loopne
add
push
call
lods
outsb
inc
int
xchg
outsl
loop
and
xor
call
mov
inc
adc
lods
adc
dec
xor
in
sbb
adc
test
inc
and
shlb
imul
mov
inc
movsb
push
mov
mov
cmp
iret
inc
xor
cmc
cld
bound
dec
add
or
divb
movsb
and
nop
aas
cltd
mov
inc
push
scas
push
mov
jo
add
filds
imul
cmp
rcrb
or
nop
lds
mov
push
push
and
dec
rcll
add
cmp
push
jns
or
in
and
or
xchg
xchg
test
testl
out
inc
mov
push
jl
pop
cltd
imul
inc
loopne
call
or
and
or
call
xchg
imul
cmp
adc
daa
call
inc
cmp
push
cltd
cmp
inc
and
ret
cmp
nop
sub
add
ja
jle
jmp
jmp
je
push
mov
or
hlt
mov
mov
xlat
sarl
jp
xchg
add
adc
notb
or
mov
push
cmpsb
popa
sbbl
pop
ss
push
push
and
stc
xor
in
out
push
jb
inc
lcall
cld
mov
push
dec
mov
adc
pop
inc
inc
mov
scas
pop
jmp
cmp
jl
in
pop
cmp
or
or
filds
lods
push
incl
or
mov
int3
adc
lcall
icebp
push
sarl
mov
mov
ret
out
pop
fxch
push
movl
clc
xor
pop
push
adc
dec
test
loop
and
or
xchg
jecxz
sbb
loopne
rolb
fsubrs
push
push
in
test
into
xlat
push
in
in
sbb
in
and
add
mov
and
adc
fmull
adc
dec
add
mov
cwtl
imul
shrl
push
xor
dec
pop
scas
daa
cmp
jg
in
popf
xor
jmp
lea
in
inc
testb
mov
movsb
add
mov
xchg
lret
cld
mov
mov
loop
cmovle
enter
cmp
pop
xor
call
int3
mov
push
adc
mov
push
pop
lock
sbbb
fimuls
das
xor
rolb
pop
lea
nop
add
mov
loopne
scas
dec
cwtl
pop
mov
push
test
dec
mov
mov
cmp
nop
movsb
inc
mov
jge
jo
sbb
cmp
sbb
lods
dec
fbld
push
dec
push
cmpb
and
sub
add
mov
adc
mov
cmp
rorl
mov
inc
jns
mov
mov
test
or
adc
mov
dec
mov
mov
or
cld
mov
jb
test
loope
cmpb
shll
xor
sub
sub
push
fs
lods
lahf
xchg
call
xor
dec
sbb
and
leave
adc
fs
sub
sub
int
xorb
test
cld
jo
mov
sar
xor
enter
mov
sbbb
cmp
sarl
ret
bound
sub
cmp
mov
or
fsubp
adc
or
fcmovnbe
js
call
aam
movb
ds
je
dec
jbe
inc
cmp
jmp
mov
push
jle
sbb
push
and
pop
fmull
and
sti
fcomps
inc
rcll
mov
mov
bound
aam
shlb
dec
nop
push
dec
sub
call
js
xor
mov
andb
aam
orl
es
or
and
rol
andl
add
rdmsr
lock
enter
and
in
aam
adc
loopne
jbe
adc
jecxz
lds
pop
ds
stc
mov
movsb
cmp
loopne
mov
cmp
call
push
idivb
pusha
movsl
mov
sbb
or
cmp
sub
mov
or
jg
hlt
mov
hlt
inc
xor
fs
adc
cmp
aaa
ret
add
in
subb
aad
jecxz
inc
invd
sub
jg
cmp
cwtl
add
sub
nop
mov
ret
jecxz
enter
cmp
push
inc
jmp
jl
sub
mov
xchg
sahf
test
pushl
jo
jge
pop
inc
jl
lds
push
adc
shr
and
fmull
fs
jmp
and
pop
jnp
push
mov
pop
enter
push
call
jecxz
cmp
xor
pop
adc
jo
cmpsl
sub
push
lea
and
out
pusha
inc
js
or
add
inc
test
scas
testb
push
push
push
js
lock
mov
xor
jge
clc
testl
or
in
or
out
test
or
dec
pop
imul
dec
clc
mov
leave
mov
nop
ror
fidivrs
dec
sti
shll
test
lea
sahf
cmpsb
ss
cwtl
js
ret
inc
pusha
movsl
subb
inc
and
add
aam
jno
call
or
jo
test
int3
sub
bound
lods
loope
clc
adc
sub
call
popa
mov
mov
mov
add
mov
subb
jecxz
adc
addr16
test
bnd
fs
les
in
test
aad
mov
and
or
scas
jb
and
addps
jge
mov
cwtl
ret
jmp
mov
rcrb
dec
out
add
inc
fdivr
dec
test
or
or
inc
adc
mov
add
or
push
addl
sub
dec
je
and
enter
cmp
adc
test
cwtl
clc
cwtl
mov
mov
sub
push
clc
or
dec
test
push
adc
imul
hlt
daa
xchg
aad
out
dec
and
sbb
mov
test
les
mov
or
pop
xchg
xor
lds
testb
mov
test
lea
cld
movsl
and
ret
lret
adc
enter
jmp
mov
adc
mov
sbb
call
fs
and
inc
jmp
and
call
test
mov
sub
ja
orl
test
xorl
push
in
in
or
into
and
loop
loope
or
cld
cld
pusha
sbb
rorl
incb
xor
adc
test
adc
mov
movsb
mov
push
addr16
mov
xchg
rclb
repz
inc
pop
add
test
orb
mov
fisubrl
test
mov
add
xorl
iret
cmp
push
and
test
jge
sbb
dec
dec
jp
lds
int3
pusha
test
add
push
loopne
xchg
mov
lods
cmc
je
les
cmp
xor
lock
fs
pop
cmpb
xor
lcall
movsl
cmpb
jmp
or
cmp
fcoms
sbb
les
adc
enter
and
shrb
cld
sbb
mov
scas
push
bound
or
lds
mov
inc
int3
or
sbb
call
js
inc
mov
adc
data16
nopl
mov
add
add
push
push
out
mov
insl
inc
sbb
inc
mov
movsb
ds
call
adc
inc
mov
hlt
push
push
sub
pushl
add
add
std
inc
popf
xchg
xor
idiv
jbe
jmp
jg
sbb
ret
xchg
loopne
add
out
rcrl
mov
test
cmpsb
cwtl
push
test
sbb
cwtl
jbe
lcall
and
in
mov
add
jmp
adc
jecxz
or
mov
add
mov
push
mov
pop
and
insl
and
and
inc
icebp
adc
cvtps2pd
nop
push
rol
cmp
repz
push
lods
adc
pop
xorb
enter
jg
xchg
pop
dec
sbb
loopne
popf
adc
sub
test
stos
pop
call
add
and
ret
cwtl
in
test
lea
inc
js
jo,pn
cltd
jnp
inc
loopne
push
mov
or
loopne
rcrl
adc
sub
nop
outsb
mov
ss
and
test
mov
nop
mov
xor
jne
sbb
push
dec
loopne
jmp
xchg
inc
fsubs
adc
movsb
and
inc
xchg
lods
jl
imul
cmp
int3
cmp
addb
jmp
scas
andb
in
xor
xchg
or
xor
or
add
jl
lock
jb
lahf
add
or
test
loop
pop
out
pop
mov
aam
sub
pushf
addl
cmp
out
and
mov
add
cld
int3
ret
add
add
or
push
out
mov
and
or
leave
inc
shl
int3
inc
nop
push
adc
xchg
test
mov
repnz
cwtl
push
cmp
mov
xchg
xchg
sbb
adcb
movsb
sbb
inc
cmp
xchg
fldl
nop
shrl
adc
in
shrl
lods
iret
cmc
xchg
mov
inc
popf
or
adc
and
xor
mov
aas
outsl
dec
lock
push
jge
and
cmp
mov
rolb
sbb
and
cmpsb
mov
add
push
and
test
push
adc
adc
rorl
cmp
int
jno
loope
rclb
push
cmp
insl
or
lret
and
aad
jns
sbb
pop
or
mov
and
xchg
xchg
cwtl
fstl
sbb
push
xchg
cmp
sbb
cld
in
bound
push
cmp
mov
sbb
addr16
xchg
out
jecxz
lock
mov
jne
and
das
mov
dec
or
push
cmp
mov
std
dec
pop
outsb
add
ret
sbb
addb
dec
inc
adc
and
rcrl
lea
nop
dec
mov
xchg
cmpsb
pusha
ret
cmpsl
xchg
xchg
mov
imul
sbb
or
lret
outsl
test
imul
fdivrs
cmpl
inc
adc
and
jbe
cli
mov
pop
test
push
cmp
inc
cmp
xor
mov
inc
sbb
rdmsr
push
xor
push
adc
xchg
pop
ror
fld
loop
and
dec
stos
and
aad
jmp
lock
aad
mov
aam
and
pop
push
cmp
xchg
mov
mov
jl
pop
mov
and
push
push
jle
adc
std
cmpsl
mov
inc
movsb
add
mov
roll
adc
cmp
cmp
scas
insb
cmpb
jo
inc
stc
add
cmp
mov
cmpl
subl
xchg
sbb
pop
fwait
arpl
mov
outsb
rorl
sbb
cmpsb
mov
icebp
push
xor
fs
cmp
inc
jecxz
and
and
xor
addb
and
mov
rorl
addb
jae
push
lea
popa
aas
push
test
mov
sub
sbb
incb
mov
fs
mov
add
sbbl
add
xchg
inc
add
inc
jl
jecxz
and
mov
clc
repz
push
add
ret
adc
adcb
shl
add
or
cld
pop
sbb
fldenv
rolb
ljmp
jmp
loopne
sub
mov
dec
lock
push
push
cmp
sub
or
or
and
sbbb
adc
jg
xor
fistps
mov
add
hlt
mov
add
add
nop
sub
clc
test
subb
push
int3
imul
imul
sbb
or
in
mov
sar
inc
jl
addb
add
imul
add
cmp
aam
mov
or
addr16
jmp
add
cwtl
sub
add
cmpsb
sahf
pop
je
lahf
ds
jecxz
ret
mov
fcoms
adc
enter
int3
mov
cmp
pop
out
pop
scas
adc
inc
push
adc
call
sbb
and
xchg
jno
push
and
outsb
or
add
cmp
test
gs
mov
pop
jbe
add
mov
das
cmp
push
stc
cld
pop
inc
in
cli
adc
cld
movsb
pop
mov
clc
adc
jl
push
jne
loope
clc
adc
mov
xlat
mov
sub
rclb
in
and
enter
scas
sbb
xor
imul
cmp
add
in
cwtl
loopne
in
lock
sbb
daa
fwait
mov
mov
lcall
or
ret
push
add
pop
push
andl
in
adcb
jecxz
loope
cwtl
adc
aam
pop
mov
fstl
and
and
inc
jne
pushf
std
xchg
cmp
jns
or
push
lods
push
dec
inc
fidivrl
es
xchg
dec
adc
je
imul
mov
cmp
inc
mov
mov
lea
insl
push
push
test
je
xchg
cmp
and
and
inc
pop
add
mov
stos
and
jno
daa
fs
enter
test
stos
pop
add
dec
xor
ret
mov
repnz
push
test
cmp
repz
or
call
fstl
loope
or
and
gs
xor
clc
push
jmp
mov
jo
and
and
xchg
sub
pop
ret
les
jecxz
xor
lcall
inc
mov
add
dec
jmp
push
lret
imul
lods
pusha
and
call
cmc
push
lea
sbb
xor
call
mov
lock
inc
add
xchg
push
call
hlt
cmp
pop
adc
ljmp
sbb
or
rcl
mov
popa
sbb
xchg
dec
sbb
xor
xchg
leave
jl
loop
rol
jne
adc
mov
verr
cmp
sub
ret
adc
dec
scas
lcall
mov
fstps
mov
or
adcb
test
addb
add
test
cmpsb
cld
add
xorl
jne
or
call
test
stos
shll
int3
xor
or
test
jg
fmuls
cwtl
dec
ljmp
hlt
hlt
movsl
imul
and
lea
call
cmpsb
mulb
pusha
mov
cwtl
mov
outsl
enter
mov
aas
inc
bound
xor
adc
inc
pop
mov
adc
loopne
andb
nop
mov
int
cmp
cwtl
ret
enter
pop
or
cmp
xor
mov
inc
orb
jl
jmp
and
xchg
cs
repnz
stos
mov
call
cmp
insb
ds
and
adc
and
dec
or
jg
sub
xor
jge
add
add
fs
push
mov
ds
mov
fs
or
push
cmp
xchg
loopne
pop
push
les
ja
and
mov
push
cs
lcall
pop
pop
dec
popa
xor
push
mov
idiv
addb
and
cmp
mov
icebp
jb
loop
add
cwtl
outsb
inc
push
push
xchg
js
insl
shlb
jge
jl
sarl
mov
cmp
push
push
mov
xor
jmp
fisttps
add
mov
xor
cmp
mov
inc
jl
outsb
js
cld
jo
cmpsb
inc
and
dec
or
or
mov
pop
out
into
je
lcall
nop
mov
jp,pt
dec
sub
insl
jecxz
adc
mov
push
lods
nop
add
out
mov
mov
dec
mov
and
lret
orb
and
xchg
add
fwait
test
addr16
ret
push
or
xor
lret
cld
int3
scas
pop
mov
cmp
xchg
and
pop
dec
mov
mov
add
add
insb
pop
jb
adc
inc
dec
pusha
cs
sahf
push
add
lock
jle
mov
sbb
adc
adc
xchg
clc
pushf
add
pop
push
int3
cmp
push
lock
or
cmpb
jns
sbb
push
and
lock
cmc
popa
repnz
dec
and
fisttps
sbbb
jo
add
cmc
or
or
mov
mov
push
addb
ss
aaa
aad
or
mov
ret
jge
push
dec
jno
xchg
sub
ds
dec
or
fcoml
stc
mov
add
xchg
adc
jl
pop
cli
mov
mov
xlat
inc
int3
cld
test
mov
into
dec
jle
movsb
rorb
outsb
shr
pusha
add
clc
xchg
call
push
int3
mov
add
add
pop
or
jge
sarb
mov
mov
push
mov
push
aas
sub
pop
xchg
sub
jle
std
mov
call
lock
mov
mov
jnp
mov
and
cmp
xor
roll
mov
movsb
outsl
add
cwtl
test
imul
cwtl
mov
dec
or
out
fwait
les
and
dec
ljmp
aaa
add
xchg
jo
les
icebp
scas
stc
mov
aam
cmc
mov
xchg
mov
fs
aam
add
xor
jno
movsb
pop
adc
push
aam
mov
and
mov
mov
mov
and
es
rcrb
fidivrl
loop
adc
jmp
cmpsb
add
xchg
gs
push
in
nop
enter
xchg
dec
adc
js
or
rcl
and
scas
xor
jge
lods
or
cmc
mov
mov
insl
mov
std
ljmp
mov
push
add
movsb
cmp
jmp
inc
mov
pop
loopne
push
xorl
scas
jbe
cmpsb
pusha
sbb
dec
mov
loope
jle
and
in
mov
xor
out
cmp
fnsave
add
mov
cmc
mov
sbb
inc
mov
dec
lea
sub
movsl
nop
sbb
ror
push
and
xor
loope
xor
imul
flds
xor
scas
int
call
clc
push
dec
repnz
mov
mov
cwtl
test
rcl
jns
add
add
fidivs
jmp
mov
and
adc
add
adc
pop
fsubrl
aam
inc
dec
in
mov
mov
dec
mov
imul
inc
jno
add
ret
in
and
call
scas
cmp
xor
cmp
js
sub
adc
sub
cltd
inc
cmpl
mov
dec
fadds
sbb
mov
pop
lcall
and
xchg
jnp
es
xor
aad
leave
add
out
jo
add
push
cmpl
js
and
mov
fmull
adc
mov
push
fstpt
mov
sub
test
les
sub
inc
pop
dec
and
or
inc
cmp
xor
lret
push
ret
push
aam
jae
mov
out
ss
mov
dec
std
roll
mov
imul
and
xor
rcr
inc
call
add
pop
int3
aad
dec
add
and
inc
xchg
adc
mov
xor
dec
inc
in
xchg
out
pop
xor
mov
call
clc
leave
lods
sub
mov
push
add
pop
add
inc
ss
ja
decl
push
add
mov
push
cmp
jo
je
push
cmp
push
inc
add
cmp
sub
imul
fcom
mov
cmp
fstl
dec
lea
cmpsb
popf
sbb
int3
fcmovne
js
xor
inc
add
jecxz
cld
mov
pop
xchg
mov
movb
lods
and
mov
mov
push
mov
and
adc
les
inc
sbb
test
mov
adc
inc
sbb
in
dec
shrb
inc
xorb
add
mov
push
cmp
mov
cmp
call
push
or
mulb
add
adc
fcoms
incl
das
adc
stos
add
call
dec
add
lock
xchg
scas
push
cmpl
inc
sti
imul
pop
add
mov
movsb
adc
inc
xor
jge
clc
jge
sarl
jae
fcomps
sahf
mov
movsb
xor
dec
push
sub
pusha
out
dec
mov
push
mov
inc
jmp
push
shlb
insb
or
cli
sub
or
sahf
out
ss
test
mov
pop
push
aam
rcrb
fisubrl
shlb
testl
mov
mov
jb
xchg
clc
lock
xor
add
dec
aam
ror
nop
imul
mov
divl
aas
scas
repnz
out
push
fs
or
pop
movsb
bnd
sti
adc
sub
shl
inc
es
je
adc
in
inc
jnp
inc
push
imul
and
call
std
add
leave
jo
push
and
rorb
mov
and
dec
and
adc
push
cwtl
cmp
mov
push
xor
pop
les
inc
stos
imul
inc
lods
add
sbb
addb
mov
sbbl
or
nop
aam
or
cmp
push
test
test
test
sbb
mov
mov
mov
daa
cmpl
cwtl
rorb
mov
push
rcl
loop
xor
add
ret
inc
jl
cmp
add
and
pop
add
sbbb
adc
shr
add
add
lea
adc
pop
incl
enter
sarl
clc
cmp
sub
or
movsl
leave
cli
call
cmp
mov
daa
enter
xchg
lock
cmp
jle
pusha
or
sbb
je
in
sbb
mov
fstl
dec
pop
in
js
lock
clc
test
fnstcw
sub
test
stos
ret
bound
divl
push
push
push
push
pop
and
mov
inc
and
in
adc
and
lcall
push
sub
adc
fcoms
cmp
test
aam
enter
cmp
sbb
jmp
rcll
push
pop
in
lds
fmuls
shr
fistpl
xchg
inc
adc
add
push
movsb
sub
dec
mov
add
test
int3
jecxz
inc
cmpl
decl
pusha
lret
movsb
add
xor
cmp
jnp
pop
lods
sarb
push
add
or
add
lahf
jne
cmp
sub
bound
push
add
mov
aam
cmp
loopne
jae
pusha
ret
adc
shrb
dec
sub
rolb
add
cmp
and
xchg
adc
mov
inc
dec
mov
rclb
shrb
cwtl
idivb
and
call
push
cwtl
sub
test
fisttps
call
test
xchg
mov
or
rorl
pop
mov
adc
xor
inc
loope
mov
jle
xchg
or
call
adc
cmp
xor
call
inc
inc
repz
sti
shll
ret
push
mov
arpl
nop
cmc
lea
daa
je
shlb
add
mov
jmp
mov
xlat
daa
inc
call
pop
testb
jae
xor
lock
add
and
xchg
test
and
pop
ljmp
or
sub
and
dec
enter
in
faddl
push
xchg
and
addr16
mov
dec
adc
adcb
inc
adc
pop
push
mov
mov
dec
shl
movsb
sysret
je
push
jne
cwtl
pusha
cs
mov
sahf
mov
cwtl
push
xchg
sub
int
inc
xchg
mov
sub
mov
sub
test
fsubrs
mov
mov
push
pop
mov
mov
lahf
push
mov
out
mov
cmp
add
lea
fs
test
add
es
dec
stc
mov
adc
dec
mov
call
and
test
jl
sbb
jns
push
daa
add
mov
add
adc
je
cmpsb
add
cmpsl
test
call
pop
adc
inc
jmp
inc
lods
subb
ss
mov
loope
dec
mov
cld
sub
fiaddl
or
roll
sbb
out
or
cwtl
das
psubusw
mov
in
jl
sub
xchg
cmp
cmp
pop
dec
ds
add
adc
dec
push
push
ja
jnp
mov
mov
push
sbb
pop
je
add
sub
mov
in
js
pusha
scas
adc
ja
leave
cmp
jo
push
mov
add
mov
jmp
mov
inc
ja
or
movsb
push
adc
int
je
into
sbb
icebp
cltd
and
add
xchg
add
dec
pop
xor
mov
out
xor
xchg
mov
sbb
test
xchg
loope
les
cwtl
sbb
bnd
mov
rorb
add
and
pop
subb
or
mov
les
subl
mov
mov
es
js
shll
adc
jb
shl
pop
stos
pushf
jne
mov
sbb
test
lret
jl
inc
mov
mov
add
ja
fsubs
mov
mov
insb
pop
pushf
jne
mov
addb
adc
xchg
or
pop
cmp
mov
adcb
xchg
loop
and
adc
ja
push
cwtl
xor
mov
ret
outsb
sub
sarl
and
call
sub
sub
les
rsqrtps
adc
adc
ret
and
orb
push
jbe
adc
movups
pop
xchg
push
and
or
je
leave
add
mov
jb
bound
cwtl
adc
add
cwtl
xchg
sub
enter
push
xor
push
mov
enter
cltd
cmp
adc
rclb
lcall
jo
stos
mov
insb
sub
push
cwtl
inc
dec
dec
push
cwtl
sti
pop
stos
dec
xor
push
cmp
mov
and
out
lahf
pop
xchg
and
cmc
add
lret
inc
push
fiadds
inc
cmpsl
pop
sbb
cmp
dec
fsubr
jo
mov
and
adc
push
test
add
jmp
jmp
rcll
add
adc
clc
movsl
and
push
call
sub
es
test
test
xchg
adc
sub
push
mov
sbb
dec
push
add
ret
sbb
add
aaa
push
mov
and
jo
sbb
mov
xchg
or
stos
jns
push
call
adc
andb
mov
pop
fnstsw
and
pusha
adc
sub
cwtl
xor
cmp
add
int3
cmc
inc
and
or
das
les
and
lods
hlt
loopne
xor
orb
pushf
or
imul
add
enter
jle
add
loopne
insl
push
xor
orb
scas
in
and
fidivs
js
sbb
fcomps
mov
dec
pushf
adc
pop
add
fs
adc
push
xor
cmp
add
push
pop
xor
js
and
adc
mov
fadd
pop
mov
repnz
pop
je
sub
push
je
hlt
sbb
add
or
mov
add
mov
sub
out
push
push
cmc
or
inc
cld
inc
or
shlb
jecxz
xor
pop
or
lods
imul
mov
cmp
les
pop
cwtl
mov
or
jp
add
mov
inc
pop
or
dec
add
push
call
xchg
je
or
fwait
pop
cmpb
cmc
ja
and
push
jns
mov
jmp
loop
or
mov
mov
push
adc
mov
mov
icebp
or
inc
scas
cmc
or
push
mov
call
lea
mov
hlt
pop
inc
or
cwtl
fidivrl
je
add
push
sbb
cld
add
push
test
std
lea
rcll
aad
insb
dec
mov
hlt
add
and
loope
sub
int3
call
inc
adc
xorl
movb
sub
js
popf
push
cmc
dec
dec
movsb
fs
sub
or
add
mov
lea
ret
data16
mov
insl
push
jno
pop
sbb
nop
mov
scas
cmpsl
xorb
add
lock
hlt
cmp
inc
cwtl
jns
sbb
jp
pop
out
xorb
and
add
inc
cmp
clc
push
push
cmp
cmp
movsb
jp
dec
pop
mov
push
add
ss
and
lret
add
das
and
add
mov
sbb
test
mov
or
mov
xor
enterw
or
int3
lahf
ret
leave
mov
sarb
push
push
out
pop
pop
test
cmpsb
sub
sbb
dec
rcrl
je
xor
pop
add
pop
push
sbb
shrb
jne
xor
mov
rolb
sbb
iret
or
adc
xchg
aaa
call
push
and
clc
in
fs
adc
xchg
mov
inc
xor
in
dec
test
and
mov
fsubrs
shlb
adc
je
mov
movsb
es
inc
clc
or
cwtl
imul
push
adc
jnp
push
call
cmpb
cwtl
cmp
add
push
mov
nop
or
sub
add
rcll
mov
dec
cld
and
mov
and
cmp
pop
push
jns
add
mov
dec
lret
test
sub
je
adc
add
push
push
int3
scas
dec
shr
xor
adc
pop
push
in
pop
hlt
inc
inc
sbb
jae
repnz
or
xchg
sub
xor
das
sbb
lret
sub
push
clc
es
scas
leave
mov
push
sub
pop
dec
cmp
adc
push
push
or
rcrl
xchg
enter
pop
sub
das
pop
add
mov
cmp
lea
and
and
push
call
jbe
stc
adc
lods
fstl
and
ljmp
fscale
add
scas
add
fimuls
ret
mov
adc
clc
and
std
shl
sub
inc
sbb
fcoml
enter
insb
adc
fcomp
mov
and
cmc
inc
mov
hlt
lods
or
ljmp
jge
pop
andb
shrb
jbe
lods
and
sbb
dec
das
movsb
jg
enter
cwtl
pop
rol
sbb
and
push
int3
out
adc
and
or
rorb
shlb
rcrb
test
sbb
sub
add
icebp
mov
les
inc
mov
hlt
cmp
clc
xorl
xchg
mov
add
inc
movzwl
lock
lcall
add
inc
add
scas
shlb
add
cmp
hlt
pop
outsb
mov
loop
stos
cmp
and
in
iret
pusha
shll
fldl
push
mov
xorl
push
or
cwtl
mov
hlt
or
in
and
or
movsl
sub
xchg
or
cmc
ja
je
and
movsb
cmpsl
das
incl
scas
sub
and
loopne
enter
ljmp
out
cmc
cmc
and
hlt
sbb
lock
cmp
add
mov
test
push
mov
push
pop
jae
add
test
nop
mov
pop
add
mov
rcrb
scas
or
cmp
or
ret
xorl
sbb
adc
mov
sbb
clc
rorl
mov
cmc
dec
and
pushf
andl
mov
jne
cmp
cmp
pop
mov
and
and
cwtl
les
imul
sub
jo
and
clc
and
nop
mov
pop
nop
push
scas
inc
and
push
ja
mov
pusha
add
mov
mov
adc
fwait
call
ja
shlb
or
push
add
mov
and
aad
push
cmp
and
inc
lcall
nop
popf
adc
dec
push
push
aas
mov
shrb
xchg
and
out
xchg
je
push
lea
test
push
sub
or
call
jne
adc
pop
clc
mov
loope
jmp
pusha
cwtl
adc
mov
mov
cmp
por
leave
pop
add
out
dec
mov
jb
sarb
sub
jmp
inc
pop
mov
jne
test
push
fsub
mov
shl
enter
jl
daa
cmp
rolb
inc
jns
xchg
add
enter
push
sub
lock
push
push
or
add
or
and
es
andb
push
add
push
dec
subb
inc
mov
push
sub
sub
and
push
add
mov
inc
jo
andl
std
in
lock
sbb
cmp
pop
jmp
das
pop
sarb
add
jo
mov
adc
jl
sub
int3
mov
shll
push
and
clc
jbe
in
xor
xor
inc
xor
dec
dec
cmp
inc
lcall
mov
fs
loopne
test
mov
adc
sbb
rclb
lock
xor
je
add
sub
data16
icebp
cmp
pop
insb
js
mov
mov
shr
sub
mov
xchg
and
inc
sbb
hlt
xchg
addl
xor
mov
subb
pop
cmp
imul
push
dec
or
into
ds
push
adc
xor
clc
test
push
nop
je
pop
gs
or
mov
cwtl
je
xor
insl
or
rcl
xor
rcr
dec
adc
leave
insb
add
xchg
or
pop
dec
cld
mov
or
sbbl
cmp
sbb
out
je
test
adc
mov
dec
xchg
inc
repz
adc
and
pushf
rcrb
cmpsb
mov
or
call
lods
or
and
mov
jb
adc
rcll
and
cmp
movsb
ds
cmp
fcoml
and
push
cmp
call
push
push
sbb
push
mov
push
test
pop
mov
push
ret
cmp
mov
test
rolb
add
and
das
jmp
or
adcl
mov
hlt
pop
xchg
push
jbe
in
sbb
loop
inc
xor
jno
repz
ret
push
push
les
pop
fadds
mov
out
add
test
cmp
mov
sti
inc
les
and
add
xorl
shll
jmp
push
aam
icebp
push
sbb
mov
adc
sbb
jne
test
cwtl
repz
and
cmpsl
mov
mov
lods
cmp
dec
enter
pop
mov
jle
cmp
or
cs
mov
les
mov
pop
pop
jnp
sbb
mov
shlb
sub
pushf
das
in
mov
adc
stos
xor
add
xchg
or
cmc
or
adc
add
hlt
push
push
inc
jbe
cmp
push
lods
cld
xchg
pop
fildl
incl
xlat
xor
jns
lock
push
add
dec
adc
fwait
xchg
mov
sub
mov
cmp
adc
xor
push
xor
ljmp
mov
or
mov
jnp
mov
inc
pop
cmp
jmp
cwtl
sti
jne
jmp
add
mov
out
or
clc
inc
fmul
cwtl
sub
add
sbb
push
das
jp
and
add
imul
add
clc
call
and
jp
sbb
out
and
jl
js
outsl
in
sub
dec
fs
sbb
imul
adc
ret
push
cmp
clc
sub
or
xor
in
sub
jae
or
sbb
inc
out
and
xchg
dec
mov
xor
test
inc
rorb
js
mov
push
jae
add
pusha
or
adc
roll
or
pop
int
call
mov
add
cmpsl
dec
int
cmp
enter
push
nop
pop
psubusb
jo
add
cmp
movl
lock
sbb
add
imul
inc
push
or
mov
hlt
pop
dec
dec
inc
call
sbb
cwtl
cmp
pop
mov
adc
push
nop
add
cmovge
pop
out
and
add
pop
pop
jne
sarb
push
mov
and
xor
mov
call
loopne
inc
mov
mov
imul
shlb
jb
jo
or
addl
mov
fcomi
icebp
cs
sbbl
inc
hlt
test
in
fadds
sahf
testb
shlb
dec
pop
mov
and
movsb
inc
loope
cmp
or
cwtl
mov
sbb
ja
push
add
push
mov
or
pop
popf
imul
jmp
fcoml
xor
add
add
cwtl
adc
inc
add
loope
add
add
mov
and
push
mov
sbb
pop
shrb
std
mov
stc
and
dec
cmp
out
mov
xlat
push
outsl
es
mov
sahf
outsb
pop
pusha
fcompl
enter
push
xchg
lock
pop
call
sbb
cmc
daa
mov
loopne
mov
lahf
fsubrs
test
adc
jp
cmp
jns
jge
push
push
aaa
call
aam
mov
adc
cmp
addr16
dec
push
mov
add
incb
or
jns
cmp
push
push
mov
mov
xchg
call
mov
add
add
mov
mov
inc
mov
loopne
sbb
clc
mov
js
testl
jp
or
mov
orb
sub
pop
mov
int3
push
aam
push
add
adc
stos
adc
dec
rcl
push
jo
imul
or
or
and
or
push
imul
mov
mov
mov
in
add
fwait
push
pusha
mov
push
dec
mov
fs
and
fcoms
sub
call
and
push
aam
sbb
sub
test
adc
pop
test
clc
dec
mov
sub
pop
dec
int3
dec
lds
push
mov
out
and
mov
test
mov
inc
and
inc
jbe
cwtl
test
movsb
movsb
mov
or
mov
pop
lahf
call
lock
xchg
push
call
pushf
mov
pushf
mov
cmpb
or
or
sbb
cmp
mov
or
mov
in
mov
mov
orb
sub
adc
add
inc
mov
addr16
mov
jg
adc
testl
mov
inc
cmpb
lahf
das
adc
popa
pop
ret
mov
push
dec
adc
xchg
push
or
xlat
and
dec
ret
pusha
mov
pop
mov
push
xor
dec
sub
and
xchg
add
adc
rorb
sbb
mov
add
and
fs
lods
lock
push
mov
btr
adc
sti
mov
gs
sbb
and
loope
adc
mov
pusha
lea
shlb
fwait
pop
lret
jl
adc
pop
sbb
xor
inc
hlt
scas
push
mov
js
pushf
xchg
push
add
outsl
mov
pop
enter
femms
fbstp
or
add
orb
orl
ja
xor
stc
hlt
aaa
cwtl
dec
ret
test
loopne
mov
sbb
inc
and
jno
js
jo
test
xchg
mov
push
cmp
jnp
xorb
lds
divb
add
ja
adc
les
xchg
std
pop
mov
jae
jmp
test
aad
add
aaa
inc
adc
inc
push
push
clc
cmp
call
push
xor
cmpsb
and
rcl
add
dec
push
dec
cmp
ss
sub
cwtl
mov
add
xchg
push
call
add
push
test
adc
xor
or
call
mov
insl
fmuls
test
dec
push
push
rorl
mov
loopne
adc
or
mov
idivb
mov
mov
xor
pop
add
lret
mov
xorb
ret
adc
push
or
or
and
mov
cltd
ljmp
cmp
insb
adc
lods
cmp
test
xor
cmp
sub
add
cmp
cmp
out
pusha
js
xchg
push
addr16
or
mov
push
enter
adc
lcall
jl
and
test
mov
or
loopne
push
in
inc
adc
test
cmp
push
addr16
and
cmp
adcb
cmp
push
xor
jecxz
mov
test
in
jae
mov
lods
stos
push
inc
mov
lock
jnp
adc
push
or
xor
in
add
lea
inc
call
sub
or
enter
xor
jne
mov
mov
je
lods
add
add
xor
andb
inc
and
add
xchg
sbb
addr16
add
lea
sahf
mov
pusha
push
sub
inc
sbb
add
sub
adc
jl
cmp
dec
and
cwtl
int3
pop
call
xchg
adc
xor
cmp
insb
fidivrs
cld
movsl
pop
jmp
mov
xchg
movsl
lock
ret
dec
enter
decl
ret
push
mov
mov
repz
jg
add
das
and
pop
xchg
adc
shr
push
mov
add
mov
incl
or
fsub
add
sbb
and
out
pop
pop
lods
mov
xadd
add
jmp
push
pushf
sub
push
iret
xchg
pushf
add
out
lahf
jmp
inc
ja
mov
sbb
mov
push
call
imul
aad
xchg
sbb
mov
add
xchg
jb
mov
adc
xorl
push
mov
mov
testl
arpl
mov
cmpsb
daa
adc
mov
dec
cli
jo
adc
sbb
fdivr
xchg
xlat
push
and
or
push
adc
sbb
mov
popf
adc
into
push
sbb
clc
push
jmp
mov
pusha
imul
pop
mov
adc
push
and
lods
xor
icebp
out
pop
test
sbbl
je
cli
shll
sub
pop
imul
je
jae
je
pusha
lahf
mov
mov
add
aam
pop
or
les
imulb
shlb
jp
push
lock
sub
fcompl
push
and
add
mov
dec
add
imul
lds
cmp
call
push
cmp
insb
xchg
add
add
or
mov
sbb
in
and
pop
sub
xorb
or
pop
cmc
xchg
movsb
mov
fdivs
je
cwtl
cmp
jb
xchg
push
mov
inc
jns
push
dec
int3
shrb
mov
xor
sbb
mov
hlt
push
add
fmuls
adc
or
mov
xchg
out
jl
cmp
jg
je
cmc
push
sbb
push
add
shlb
mov
or
or
rcr
nop
out
shrb
test
mov
or
pushf
xchg
and
adc
clc
xchg
adc
push
inc
pushf
loope
xchg
test
insb
inc
test
sbb
and
xchg
mov
or
icebp
and
xchg
je
mov
cwtl
pop
lock
xchg
xor
cwtl
xchg
or
movsb
push
xchg
or
or
es
cmp
xchg
mov
je
int3
xchg
imull
fsubs
aad
rclb
rcll
rorb
orl
mov
push
adc
add
sbb
mov
rcll
xchg
dec
cmpl
mov
aas
adc
pop
fstpt
rclb
mov
jmp
imul
xor
inc
shrb
add
xchg
dec
dec
push
lock
out
mov
hlt
mov
push
add
sti
loop
push
mov
andps
shr
mov
adc
icebp
cmp
adcl
lods
or
push
mov
or
out
xor
jns
push
daa
jp
mov
xchg
and
push
and
in
xor
imul
or
dec
xor
and
xor
cmp
ret
sti
mov
call
or
jmp
sub
and
jo
iret
xrelease
add
in
xorb
push
lea
mov
or
fcoms
addl
adc
push
xor
add
or
adc
daa
mov
or
add
cmp
aaa
xor
adc
cmp
cmp
xrelease
lock
add
or
jo
xchg
adcb
cmc
xor
mov
cmp
inc
ljmp
mov
sti
loopne
add
and
dec
ret
dec
dec
pop
push
sbb
addr16
js
xchg
and
add
jle
fisubs
stos
xchg
cwtl
pop
add
or
clc
mull
daa
and
rolb
scas
movl
add
mov
pusha
cmp
neg
jmp
inc
cwtl
clc
orb
xorb
and
test
xchg
add
inc
les
or
mov
lahf
sbb
xor
lock
mov
sbb
mov
adc
sub
sub
inc
mov
adc
inc
and
into
adc
mov
inc
pusha
and
adc
or
inc
adcb
adc
loopne
int3
sahf
popa
adc
adc
push
xchg
sub
cmp
push
movsl
pushf
rolb
or
add
adc
mov
cmp
test
jnp
ret
movsb
dec
loopne
sbb
mov
sub
mov
test
adc
and
jnp
add
andb
push
fs
test
push
loop
jns
lock
and
cmp
cwtl
js
aaa
in
inc
mov
inc
jmp
dec
clc
leave
mov
sbb
push
out
gs
insb
xor
jge
mov
daa
adc
mov
and
add
loop
ret
mov
sbb
add
jmp
cmp
sbb
inc
add
push
mov
mov
pop
adcb
rclb
add
push
cwtl
dec
mov
or
ret
dec
push
sbb
xchg
cmp
adcl
nop
mov
out
sub
or
andb
lret
dec
imul
and
xchg
mov
mov
or
cmp
push
inc
lock
jnp
ret
repz
xor
mov
add
mov
xchg
mov
fistl
inc
jmp
adcb
out
mov
push
add
sbb
dec
add
je
pop
pminub
fdivrs
jno
and
frstor
adc
orb
or
call
sarl
inc
rorl
mov
mov
xor
sub
cmp
or
hlt
aam
add
icebp
enter
pop
addb
lret
push
add
sbb
inc
push
ljmp
cwtl
or
lret
or
rorb
inc
js
sbb
or
pop
mov
jg
cmp
jmp
adc
iret
popa
mov
test
out
in
ret
or
imul
mov
adc
xchg
push
adc
or
mov
mov
or
add
jl
int3
mov
pop
int3
movsb
lock
cmp
testl
mov
add
or
cmpsb
loopne
add
mov
mov
jle
and
movsl
push
lock
xor
test
lock
xor
push
jo
and
das
pop
insb
loope
jb
jp
mov
cwtl
and
add
jl
cltd
adc
rclb
decl
out
and
push
add
pop
push
push
xor
test
xchg
addl
or
call
subb
inc
lea
out
mov
mov
clc
adc
jl
sub
dec
add
sbbb
mov
fdivs
stc
pusha
add
out
inc
jo
leave
jg
pop
inc
out
cmpl
xchg
neg
dec
mov
inc
rcrb
mov
scas
jge
lods
mov
sub
stc
sub
mov
out
cwtl
les
mov
subb
mov
enter
mov
enter
mov
adc
push
rcrb
into
push
or
clc
or
pusha
mov
test
test
dec
shlb
sti
and
xchg
pop
and
mov
add
push
mov
xor
jge
cmp
adc
add
dec
dec
jo
xlat
mov
jo
pop
add
in
shrb
add
and
push
mov
add
xor
jae
paddq
or
outsl
add
lret
push
and
add
xor
test
sbbb
pop
ret
popa
sub
or
add
xor
push
and
das
mov
mov
test
in
or
rolb
add
sysenter
sarb
adc
cwtl
jge
call
xchg
ljmp
in
icebp
shlb
adc
add
leave
and
enter
call
mov
cwtl
loopne
mov
mov
mov
fs
add
xorb
cmc
push
cmc
loopne
inc
aam
and
mov
jbe
add
dec
xor
push
les
testl
subl
test
cwtl
push
fs
testb
inc
stos
sbb
cs
cltd
mov
pop
jae
jo
out
aad
jg
xor
daa
add
and
hlt
or
and
dec
iret
and
stos
jg
push
es
mov
mov
mov
testb
lock
dec
fdivr
mov
mov
add
cli
or
mov
mov
jne
lahf
lock
add
loop
jno
dec
cmp
jns
sbb
and
push
adc
mov
or
sub
mull
mov
push
pop
sbb
cli
call
jne
mov
or
mov
dec
add
push
stos
or
testb
adcb
push
add
int3
xchg
or
and
mov
icebp
cmp
sub
sub
sarl
xchg
loopne
push
mov
in
cmp
loopne
or
inc
sbb
bound
xchg
push
test
rorb
test
push
push
xchg
clc
gs
inc
adc
aad
je
xor
lods
push
js
cmpl
enter
pop
inc
cmp
test
in
mov
subl
mov
je
out
push
cmp
loopne
pop
daa
xchg
ficompl
insb
popa
les
xchg
sbb
test
cld
xor
dec
lock
push
and
push
loop
dec
push
mov
outsb
inc
mov
dec
add
ror
clc
ljmp
subb
dec
call
test
mov
cmpb
sub
shrl
orb
fs
js
dec
addl
flds
mov
push
repz
xor
inc
shlb
jnp
inc
cwtl
jp
add
test
xor
or
mov
pop
cmp
loope
pushf
cli
jae
jl
jne
sti
sarl
or
mov
clc
add
jp
insl
sbb
aaa
sbb
popa
cmp
shrl
int3
inc
and
mov
shl
mov
lock
fwait
pop
lret
stc
jmp
mov
push
mov
mov
mov
or
or
cmp
mov
add
jae
cmpsl
pusha
mov
push
mov
mov
les
sub
xchg
les
shll
testb
repnz
sbbb
je
and
or
idivl
arpl
rolb
add
jle
and
aam
mov
xor
dec
incl
push
loop
ror
jo
xchg
shrb
rolb
popa
insb
jmp
loope
daa
xchg
push
mov
fmuls
jo
hlt
in
xor
pop
je
mov
fimull
xor
mov
call
or
jns
adc
and
add
adc
pusha
jl
cmpl
jbe
decl
and
push
mov
or
dec
cmp
hlt
icebp
pop
mov
adc
je
or
cmpb
add
cmp
cmp
inc
out
add
add
sub
cmp
lock
fwait
xchg
mov
adc
insb
add
jbe
ret
shrd
or
mov
or
or
shlb
add
xor
mov
test
or
fwait
mov
mov
pop
inc
jmp
mov
fistpl
mov
das
fnstenv
adc
push
cwtl
push
ds
enter
mov
adc
scas
les
testl
lock
cwtl
push
mov
sbb
add
add
rol
fistpll
add
mov
test
hlt
xor
mov
push
inc
xor
cmc
dec
or
dec
adc
aas
lock
add
mov
lret
addl
dec
test
pop
jp
and
lock
mov
add
mov
imul
lret
shll
sub
mov
mov
xor
cmc
dec
lock
add
cmp
repnz
or
call
nop
add
or
jb
sbb
clc
mov
call
movsb
daa
jmp
xchg
rclb
cmc
clc
push
pop
fidivl
push
cmp
idivl
mov
or
and
mov
cmc
adc
mov
stc
or
jmp
jb
xchg
add
lret
cmpl
dec
add
cmp
or
xchg
dec
add
jne
jge
cmp
or
test
pop
movsl
jns
mov
jne
popa
mov
lahf
in
cmp
test
mov
or
mov
and
test
testl
push
stos
rolb
mov
je
push
adc
mov
and
daa
fsubl
inc
or
out
loope
js
repnz
mov
sbb
push
mov
push
movsb
mov
stos
les
lock
adc
jno
rorb
xchg
loope
adc
orl
add
jne
and
ror
sti
jmp
adc
xchg
xchg
add
mov
jmp
jb
in
jge
clc
fwait
lcall
repz
mov
insl
cld
mov
add
sub
rcrl
sub
movsb
inc
add
xor
mov
lock
push
dec
stc
jo
das
mov
dec
nop
or
pop
clc
pop
jns
rclb
push
jae
xor
test
ds
sbb
adc
enter
enter
jo
fldl
in
movsb
cld
cmp
jmp
and
out
int3
mov
add
int3
or
push
sub
adc
push
clc
enter
or
pushf
mov
add
in
xchg
in
and
mov
mov
and
shlb
pusha
clc
test
hlt
mov
add
fsubr
sbb
inc
rcr
mov
cwtl
or
lock
push
and
cld
hlt
mov
pushf
testl
sbbl
xchg
jmp
pushf
push
jne
call
les
push
dec
call
mov
cmp
mov
dec
ret
inc
dec
add
mov
and
aas
lods
or
inc
sub
ret
pop
jl
push
fadds
cmp
jmp
nop
loopne
insl
pop
jnp
jl
pusha
ret
jb
outsb
enter
dec
mov
or
call
push
cmp
cld
jle
dec
xchg
fs
push
jne
xchg
xchg
xor
inc
sub
cs
orl
jns
pusha
aas
mov
out
jmp
mov
mov
aas
enter
pop
in
dec
add
cmovg
hlt
ret
lods
cmp
roll
and
mov
and
ret
xor
mov
mov
xor
lods
sbb
mull
daa
clc
push
dec
popf
add
xor
call
push
sub
testl
jmp
jl
in
fwait
test
inc
jecxz
mov
testl
scas
movsl
clc
ret
add
push
sarb
mov
rorb
push
cwtl
jge
sub
shlb
shl
loopne
jl
ret
js
dec
out
jg
je
orb
push
pop
jmp
or
pop
pusha
loope
nop
je
xor
rolb
out
popf
mov
dec
pop
add
mov
addb
ds
dec
dec
movsb
push
pop
sub
adc
hlt
test
nop
pushf
lds
push
movsl
je
add
xchg
test
inc
dec
mov
and
out
cmpsl
adc
sub
mov
dec
shl
sub
les
adc
mov
lods
push
lods
icebp
mov
add
mov
mov
mov
cld
pop
cmpb
lret
xor
jae
mov
cmp
or
push
pushf
sbb
xor
mov
outsl
test
imul
mov
imul
pop
add
call
cwtl
outsl
and
push
dec
js
mov
push
jle
cwtl
push
std
and
inc
or
or
clc
pop
loopne
add
ret
subb
les
mov
ret
mov
mov
dec
inc
mov
and
add
repz
incb
xor
or
and
pushl
push
inc
add
xchg
ret
cmp
jo
icebp
insb
jmp
jecxz
mov
adc
inc
mov
test
add
hlt
test
cmp
out
lods
mov
jle
fmuls
aam
call
add
and
pmuludq
addb
addb
or
mov
loopne
ret
jl
fsubl
int
dec
loopne
test
sbb
out
nop
add
sarb
push
mov
cmp
xchg
shl
pusha
cld
or
sbb
xchg
or
psubsb
push
or
repnz
mov
loope
or
inc
inc
xor
cmp
insb
push
imul
pop
lret
cmpsb
add
roll
mov
mov
add
jno
pop
test
lea
mov
or
pop
xor
or
or
lret
mov
cmp
pusha
jl
mul
popf
or
push
and
push
popf
into
inc
rolb
push
out
push
faddl
fcmovnb
sarb
pop
rcrb
add
jb
xchg
adc
adc
mov
or
xor
or
pop
adc
loopne
mov
or
call
inc
in
sbb
dec
sub
adc
in
inc
mov
mov
add
ret
mov
aam
sbb
add
push
and
add
roll
cs
pop
sarb
fdivs
cmp
out
add
lea
sbb
cmp
add
jno
jae
cmpsb
inc
add
je
or
sbbb
clc
add
push
xor
or
and
jmp
or
xchg
xlat
lahf
or
jae
add
mov
cmc
adcb
or
call
mov
inc
add
xorl
ror
aam
dec
pop
and
mov
jno
mov
mov
adc
fs
and
filds
dec
or
cmp
xor
xor
dec
mov
or
test
aaa
push
mov
push
xchg
jecxz
fdiv
addl
sub
clc
or
xor
inc
adc
call
enter
cs
add
or
insb
pop
mov
fadds
add
inc
jae
call
inc
call
cltd
xor
or
pop
push
and
cwtl
in
lret
sbb
xlat
mov
or
or
ja
jno
adc
sub
dec
rcl
fucomip
aad
sarb
mov
test
jmp
and
push
jmp
inc
cltd
sbb
and
cmc
bound
rorb
aas
mov
gs
aaa
jp
xchg
cmp
jmp
mov
fbld
in
xor
ret
push
jle
enter
cmpb
clc
add
pusha
das
pusha
mov
xchg
cmp
lods
inc
pop
add
xor
dec
or
cld
in
push
shlb
cld
and
and
or
xor
jnp
add
dec
outsl
andb
loopne
cmp
add
and
orb
or
pop
xor
clc
jo
push
call
inc
test
stc
in
arpl
orl
push
jecxz
and
call
loope
lea
mov
pusha
popa
addr16
pop
push
outsb
push
mov
mov
mov
inc
shr
mov
mov
jno
addps
addb
fucomip
sbb
xlat
mov
rcrb
nop
or
out
push
fisubrl
add
lock
pop
mov
xchg
arpl
cltd
add
cmp
aam
adc
test
es
xor
and
xchg
mov
insb
dec
xor
sbbb
aam
pop
movsb
xchg
test
add
repnz
and
or
sahf
add
cmp
shl
mov
out
jo
mov
enter
xchg
push
shll
test
cmp
jns
sub
adc
push
sub
or
cmp
icebp
imul
pop
xchg
sbb
or
or
mov
cmp
xchg
cmc
daa
and
inc
aam
repnz
clc
lock
orb
mov
mov
lods
roll
test
cmpl
xorl
cmp
pop
test
cmc
mov
pop
subl
add
dec
jne
sahf
or
out
or
call
xchg
aam
cmp
inc
sub
mull
stos
jl
add
fbstp
nop
pop
rcrb
stos
rclb
ret
aam
jno
cmpsl
dec
push
mov
leave
cwtl
pop
push
xchg
or
cmp
scas
fmull
mov
inc
pop
sarb
mul
cmp
and
lock
pop
add
mov
ret
call
or
cmpb
mov
and
sub
cmp
ljmp
int3
or
mov
mov
push
roll
lcall
sub
add
mov
mov
sysenter
add
cwtl
call
pop
adc
push
jo
mov
add
xor
push
lock
roll
cmp
repz
pop
or
mov
lock
mov
add
fldl
test
xor
xchg
xchg
hlt
in
mov
adc
sbb
das
inc
pusha
cmp
or
and
out
fdivs
das
rol
cwtl
ja
or
sub
pop
std
and
lret
push
stc
jo
push
push
ficoml
daa
sbb
dec
in
jo
in
repnz
and
add
adc
jae
ja
inc
dec
add
xor
pop
sub
xlat
out
mov
jnp
inc
lret
adc
mov
cs
cld
xchg
add
push
pop
mov
pop
push
cld
in
adc
mov
jmp
jno
xor
jecxz
add
dec
inc
in
stos
movsb
push
xchg
subl
cmp
pop
push
xchg
mov
mov
movl
jecxz
fsubrl
cwtl
fsubl
in
gs
lock
mov
cwtl
mov
and
mov
sbb
sub
add
jmp
pusha
call
and
bound
jne
sub
call
add
push
arpl
sbb
sub
mov
clc
inc
fmull
dec
sbb
add
jns
sub
xor
jl
insb
ficomps
cmp
sub
pushf
xlat
fcompl
adc
pop
jmp
jle
fsub
cmp
mov
in
or
in
sbb
in
push
cwtl
cmp
xchg
or
pop
jmp
pop
cs
cmpb
es
jp
push
lret
jmp
pushf
and
cmp
push
mov
call
ljmp
fwait
add
push
lds
sub
xor
push
frstor
inc
mov
sbb
adc
mov
sarb
ret
cld
or
shlb
ret
test
jle
sub
leave
inc
jl
pushf
ficoml
inc
or
jl
add
push
cmpsl
fs
out
or
sbb
cmc
add
pushf
aam
scas
xor
test
pop
sbb
rorb
cmp
push
jae
sbb
fadd
imul
pop
jb
xor
pop
jge
fsubr
lods
test
pop
sti
pop
das
jl
add
hlt
and
out
jp
pushf
dec
call
xchg
jmp
les
rolb
sarb
nop
adc
lock
rcr
xchg
push
pop
pop
pop
test
mov
je
dec
mov
inc
mov
aad
dec
inc
dec
xlat
fldenv
pop
ljmp
das
icebp
or
mov
push
inc
test
enter
add
or
mov
jmp
pushf
hlt
add
pop
xor
imul
push
cmpb
call
rolb
std
xchg
dec
clc
push
xchg
cmc
clc
cmp
mov
cmpsl
aam
cmp
or
mov
push
insb
push
sub
xor
sub
cmp
pop
hlt
and
add
movsb
adcl
adc
loopne
add
je
ljmp
push
sub
test
adc
loop
adc
xor
test
rolb
imul
testl
aad
out
add
testb
push
ds
subb
mov
sbb
test
adc
dec
or
or
movsl
sbb
add
and
push
fistpll
and
jle
jo
jnp
scas
and
les
imul
ds
mov
insb
movsl
pop
and
pop
mov
adc
mov
and
cmpb
jae
shr
add
icebp
movsb
lds
mov
pop
and
adc
lods
daa
jno
dec
push
and
or
ljmp
call
repz
jl
mov
cltd
and
inc
les
movsb
mov
jle
pop
push
jp
loopne
xchg
test
push
mov
and
mov
cmpsl
testb
pop
cmp
andb
inc
je
fs
lahf
icebp
adc
pop
cli
les
add
push
pop
enter
pop
push
les
push
or
leave
fwait
add
leave
dec
ficompl
add
data16
loop
sbb
std
test
push
inc
dec
or
mov
adc
les
jle
mov
add
xor
push
xor
int3
add
fstpl
mov
push
cs
jl
or
mov
rolb
mov
push
and
inc
xchg
popa
cmp
jp
sarb
inc
jnp
loopne
lret
adc
xchg
or
cwtl
mov
fmuls
pusha
call
out
inc
in
push
dec
or
lcall
push
jmp
sub
pop
cmp
dec
xorl
lds
jecxz
rorb
add
test
cld
incl
lods
xor
xchg
imull
fsubs
sahf
adc
sbb
cmp
or
je
ficoms
jecxz
aam
dec
sub
fsubrl
mov
and
inc
loopne
push
and
mov
mov
stos
dec
push
in
jp
cwtl
xchg
pop
imull
mov
inc
pushf
and
fcoms
sbb
inc
and
cmpb
call
mov
lahf
leave
pop
push
fisubrs
mov
mov
adc
fcoms
ja
mov
jbe
clc
loopne
clc
sub
mov
add
mov
inc
and
cld
add
add
lock
cmp
subb
lahf
cmp
jnp
pop
and
cli
pop
mull
mov
mov
jg
jo
inc
xchg
in
popa
cmpl
test
mov
and
sub
or
xchg
jbe
and
jge
repz
in
mov
movsb
xorb
lahf
rclb
lea
mov
test
mov
stc
pop
dec
daa
sahf
int3
add
in
or
pop
test
or
stos
dec
or
iret
std
call
fcom
out
push
push
push
cmp
ss
aam
sub
shlb
sub
sti
out
sbb
in
aam
jb
scas
cmp
aam
inc
mov
subl
call
lock
mov
in
add
addr16
loopne
adc
ret
and
loopne
repz
push
push
xchg
mov
sti
sbb
nop
push
cmp
and
and
lahf
subb
mov
xor
or
mov
cmp
loop
es
jl
les
or
andb
push
mov
or
fcomps
cwtl
enter
sbb
fld1
dec
jmp
jg
sub
cmp
movsl
inc
addb
test
cmp
and
rcl
shrb
test
fcoms
in
mov
enter
cs
pop
nop
adc
lods
call
movsb
mov
pushf
adc
pop
xor
jne
or
inc
add
call
mov
sbb
hlt
cld
mov
or
jmp
push
js
nop
das
loope
pop
das
int3
pop
sarl
sbb
fadds
dec
seto
cld
and
call
je
cmp
xlat
nop
xchg
out
aaa
add
lret
push
ret
push
pushf
sbb
pop
stc
xlat
bound
lods
push
int
mov
push
inc
cmp
inc
xor
addb
cmp
jbe
add
or
cwtl
push
and
mov
push
fdivrl
cmp
repz
lret
mov
je
push
mov
jecxz
pop
rorb
or
add
add
imul
push
pop
and
bound
mov
test
cld
cmp
sbb
repz
mov
pop
adc
sbb
xchg
add
jbe
sarb
jbe
dec
movsb
scas
xor
mov
or
xchg
lock
lret
cmp
or
xor
push
sbb
add
add
insb
dec
pusha
inc
and
mov
and
enter
or
add
mov
enter
scas
shlb
mov
mov
nop
mov
cs
bound
mov
lds
nop
xchg
and
mov
push
inc
cmpsl
mov
mov
adc
push
popl
shr
adc
add
outsb
or
push
test
pop
lods
sub
inc
cmp
inc
iret
mov
mov
xorb
cmp
es
add
jb
clc
pushf
xor
pop
jns
push
mov
push
in
orb
hlt
and
sarb
call
xchg
loopne
fisubrs
out
mov
mov
or
add
inc
mov
inc
or
or
adc
inc
clc
mov
jb
add
jbe
rorb
in
imul
shrb
mov
sbb
jno
addl
enter
mov
jle
cs
add
or
sub
dec
jbe
dec
test
adc
mov
shll
jb
lods
orb
cmp
aaa
sub
mov
sub
imul
xor
rorb
inc
iret
jp
test
lea
lods
dec
sub
jle
push
pop
sbb
or
push
cwtl
fmul
rcr
inc
add
sub
addr16
pop
into
movsb
sub
adc
pop
mov
dec
add
clc
leave
lcall
pushf
cmp
dec
sar
ss
insb
or
push
mov
pusha
push
or
jns
add
scas
mov
push
enter
unpcklps
testb
mov
or
ljmp
push
mov
mov
pop
jmp
jae
pop
cmp
cmpb
and
idivl
pop
mov
cmc
and
and
adc
ja
call
mov
mov
add
ja
xor
aas
mov
leave
add
pusha
aam
push
mov
js
es
cld
push
sub
ja
mov
mov
sub
push
cltd
clc
inc
cmp
add
cmp
pop
cwtl
jo
add
loopne
pop
cmpl
cwtl
mov
add
inc
dec
pop
cmp
in
mov
gs
adc
shll
xchg
call
mov
add
ja
ljmp
psrld
call
in
mov
mov
mov
mov
inc
jmp
xchg
rorb
cmp
xchg
inc
or
mov
add
jbe
xor
clc
leave
idiv
mov
cmp
mov
push
add
xchg
push
mov
or
adc
leave
or
mov
notb
sarb
inc
dec
subl
pop
xchg
inc
mov
movsb
add
push
mov
fiadds
mov
add
add
or
add
cmp
pop
subl
jne
lock
inc
daa
mov
out
test
sbb
jmp
mov
lods
es
insl
pop
sarb
add
call
mov
jmp
pop
sar
leave
das
mov
mov
mov
cmp
cmp
shrb
cmpsb
jb
or
pop
add
mov
insb
add
cmpl
imul
push
jge
or
clc
push
dec
outsl
cmp
loope
or
sub
xchg
aam
xchg
in
pop
test
mov
mov
loopne
inc
fmull
push
sub
aaa
cltd
xor
scas
and
mov
mov
xor
pop
jmp
mov
test
cmpb
js
int3
or
les
xor
inc
call
and
push
xchg
jns
mov
pop
push
or
or
repnz
xchg
loop
out
ja
mov
jne
ficoms
rorb
stc
push
mov
sidtl
mov
test
dec
dec
or
shr
mov
xor
cltd
push
and
mov
loope
inc
movsb
stc
jbe
and
dec
arpl
daa
xchg
push
push
loopne
add
dec
inc
or
mov
js
test
cmp
or
movsb
xchg
mov
imul
js
push
decb
mov
or
cmp
xor
cmp
xor
dec
mov
repnz
push
xor
add
mov
test
sarl
dec
clc
notl
jmp
xchg
scas
sbb
xchg
subb
inc
nop
jl
jb
div
cmp
clc
test
add
push
pop
popf
add
push
jns
pop
roll
paddusw
dec
les
add
fldl2e
adc
inc
jmp
push
test
fs
lock
or
ret
sbb
and
adc
or
mov
faddl
and
mov
pusha
pop
in
or
xor
hlt
cwtl
test
sbb
push
adc
fs
and
or
dec
clc
daa
mov
test
or
xchg
test
xchg
cmp
adc
fcomps
mov
out
sbb
mov
sub
xor
nop
call
mov
mov
fcompl
mov
loop
push
shrb
push
mov
pop
or
addb
and
and
push
popa
push
and
cwtl
inc
je
enter
insb
ja
jo
fdivrl
jo
lret
lock
xor
jo
testl
stos
test
mov
clc
inc
push
lds
js
pop
jae
xorl
and
cmpsl
popa
sbb
or
daa
fildll
nop
enter
add
loop
cmp
clc
sbb
and
mov
xor
pop
pop
test
fdivs
clc
les
cmp
cmp
incl
inc
lock
pop
mov
pop
mov
fisttpl
add
add
or
mov
cwtl
dec
inc
and
xorb
adc
push
fwait
mov
iret
adc
mov
or
sbb
push
leave
pop
xor
cmp
and
fadd
lret
add
invd
cmp
imul
jne
adc
dec
pop
in
inc
add
push
shlb
nop
or
jns
sub
and
test
cmp
movsb
cwtl
jl
inc
dec
xor
adc
sbb
repnz
sub
cmp
xor
inc
jbe
out
or
pusha
lods
rolb
mov
fbstp
mov
mov
call
ret
fldl
cld
incb
or
fnsave
outsl
aam
mov
std
outsl
xchg
cmp
mov
sar
movsl
js
jl
data16
pop
adc
je
inc
cmp
and
cmpsb
adc
aam
push
or
mov
push
negb
int3
jns
or
addr16
scas
pop
hlt
add
inc
scas
add
jmp
or
adc
push
mov
xchg
popa
mov
adc
test
xor
xchg
cmpsb
sbb
cwtl
inc
mov
jb
clc
negb
and
gs
cld
adc
popa
cmp
test
jmp
les
xchg
js
aam
addl
sbb
cmp
dec
jl
or
inc
cmp
and
sbb
and
mov
xor
jae
adc
cmp
pop
ljmp
adc
xor
subb
jbe
pop
mov
jmp
in
push
adc
and
pusha
es
inc
enter
jecxz
arpl
or
cltd
and
call
adc
or
add
test
cmp
and
sti
jge
xor
mov
dec
sub
pop
enter
popf
rcl
lods
add
push
popf
pusha
push
sbb
jbe
into
imul
add
clc
cmp
aam
cltd
jno
mov
nop
loopne
xchg
jl
imul
popf
mov
pop
or
mov
lods
xor
cli
test
test
sbb
pop
jl
add
sub
rorb
jecxz
cmp
stos
and
sub
mov
rcll
mov
pop
test
nop
fmull
das
getsec
cld
jge
inc
fisttps
fmull
test
mulb
loopne
push
test
shr
addr16
sbb
mov
cmp
sbb
add
ljmp
cwtl
pop
push
in
and
cmp
nop
dec
ja
and
leave
jle
or
mov
cli
fs
dec
shll
jle
movsb
xor
mov
enter
or
rcll
or
xlat
xrelease
mov
loopne
roll
sahf
add
loopne
lret
push
and
out
pop
das
add
push
jbe
mov
cmp
xor
in
dec
jns
int3
adc
jbe
mov
push
out
adcl
aas
or
jb
pop
rcrl
les
call
divl
icebp
dec
call
push
mov
push
inc
mov
imul
or
shr
pop
push
add
jne
xor
or
lock
pushf
push
mov
mov
inc
out
pushf
dec
inc
add
je
push
push
cmp
or
fwait
xchg
mov
or
jmp
mov
dec
sti
mov
cmp
sbb
movb
cmpsl
push
push
inc
jbe
rorb
shr
xor
adc
mov
rorb
adc
jo
cs
or
incb
pop
push
jne
enter
std
jns
leave
cmpsl
pop
add
pusha
xchg
hlt
cmp
jae
jne
test
cmp
mov
movsb
in
lock
sahf
xor
add
jbe
push
mov
adc
nop
pop
clc
loopne
std
daa
jmp
xchg
inc
inc
movsb
mov
loopne
or
nop
adc
cmp
clc
sub
clc
mov
cmp
push
mov
repnz
jmp
jb
loop
ja
call
push
inc
insb
and
repnz
fsubs
jno
call
xchg
sbb
add
push
cld
icebp
js
fstps
jns
add
dec
push
xor
xor
sub
or
mov
xor
out
xchg
lods
and
cs
inc
push
push
ds
in
pop
and
mov
and
or
cmpl
notl
mov
mov
xchg
xorb
push
mov
pop
dec
sub
add
test
cltd
mov
loopne
js
hlt
mov
sbb
add
std
lea
and
cmp
fadd
out
scas
mov
xchg
or
je
xor
leave
jno
cltd
clc
mov
add
mov
mov
sub
mov
bound
mov
push
in
add
int3
and
popf
xor
mulb
mov
nop
xchg
rorb
add
hlt
mov
fcomp
inc
imul
jle
mov
out
pop
push
push
pop
call
je
adc
clc
mov
sub
sbb
or
jmp
cmp
jmp
fimuls
add
int3
mov
aad
jo
push
or
jmp
mov
and
xor
cwtl
fwait
pop
rol
aam
sbb
test
adc
sub
movsb
xor
pusha
clc
or
push
or
cwtl
mov
dec
sub
add
testl
call
stos
inc
cmp
scas
push
push
push
pop
cmp
loope
mov
push
push
jmp
sti
shlb
jge
mov
out
push
jo
rolb
jo
dec
adcl
push
add
xchg
ja
fadds
mov
fnstenv
js
xor
int3
pop
loope
jae
addb
add
int3
or
addr16
imul
add
pop
mov
mov
xor
test
mov
lea
add
ret
pusha
outsb
mov
arpl
call
add
das
dec
mov
adc
mov
push
sub
hlt
mov
dec
add
por
sbb
cmp
mov
ljmp
addb
ret
xchg
xor
nopl
xlat
fldpi
inc
pusha
and
pusha
add
inc
mov
or
mov
xor
repnz
mov
popa
fmull
test
pop
or
add
ljmp
sbb
stos
xchg
jno
xchg
jl
subb
push
push
mov
or
mov
int3
adc
mov
outsb
cltd
fs
scas
mov
jb
cmpsb
mov
or
cmp
test
or
icebp
pop
aas
mov
nop
push
mov
hlt
and
xchg
repnz
addb
inc
jb
les
mov
sub
cld
mov
call
int3
cmp
fldl
ret
pop
in
push
xchg
scas
xor
push
fsubr
repnz
les
add
adc
into
jmp
mov
scas
shlb
repz
mov
lea
mov
push
pop
xorl
pop
nop
push
pop
mov
insl
cli
and
outsb
mov
cwtl
loope
cmc
sbb
mov
dec
mov
and
add
mov
pushf
testb
xor
mov
dec
mov
jp
in
add
dec
push
sbb
sub
jo
fdivl
xchg
push
hlt
in
int3
mov
or
outsl
ret
fmull
js
dec
movsb
enter
imul
orb
lock
jle
adc
lock
add
dec
pop
dec
in
and
add
fcomps
push
mov
call
push
nop
and
or
arpl
add
sahf
push
sub
imul
xlat
out
cmp
enter
or
mov
mov
cmp
or
sahf
fcompl
test
ret
add
incl
inc
subb
cmpsl
pop
je
mov
dec
call
jbe
add
and
xchg
adc
ljmp
je
push
add
xchg
cmovno
push
sarb
and
out
dec
mov
loopne
jg
sbb
cwtl
push
inc
cmc
adc
shl
out
mov
xchg
daa
fwait
cmp
cmp
sbb
sub
mov
scas
and
enter
push
sti
sub
add
clc
mov
daa
add
lret
in
repz
and
test
mov
mov
sbbb
pushf
xor
lea
cld
test
fcomps
sbb
in
lret
mov
mov
loopne
xchg
fimull
dec
aad
lock
sbb
adc
mul
sbb
push
sbb
jge
push
dec
mov
mov
inc
adc
cli
jo
adc
imul
in
sub
sbb
inc
stc
xlat
xchg
movsb
cmp
and
out
roll
or
push
xchg
data16
pop
rep
insb
test
adc
or
sbb
add
or
xor
inc
mov
dec
mov
nop
xor
push
loope
push
xchg
inc
lods
or
or
xor
adc
idivb
adc
sub
sbb
and
sbb
sbb
push
cmp
addr16
cmp
test
ret
mov
movsb
push
jnp
pusha
pop
rclb
mov
xor
fs
test
imul
mov
xor
mov
insl
or
dec
shr
and
mov
addb
push
sti
out
or
cmp
int3
jae
dec
xlat
jmp
mov
cmp
inc
in
add
outsb
jmp
xor
cmp
push
dec
adc
lods
push
inc
dec
nop
or
push
add
and
popa
enter
icebp
add
cmp
pusha
jae
push
pop
ret
int3
pop
aam
jp
lret
mov
hlt
cmc
pop
fdivrl
je
mov
imul
or
jno
test
cmpb
sbb
adc
cli
add
or
cmc
or
sub
jmp
inc
mov
jns
frstor
or
jno
testl
mov
clc
pop
movzwl
lock
loopne
jg
pushf
inc
pop
fucomp
hlt
gs
loopne
shlb
roll
mov
loope
insb
push
push
notl
pop
or
adc
js
mov
xor
test
mov
faddl
cltd
jg
shl
mov
or
shr
ja
loopne
mov
push
call
mov
inc
or
cmpsl
call
dec
loop
lods
adc
pop
add
enter
mov
clc
cmc
adc
jl
ret
es
or
mov
adc
ljmp
inc
cmp
push
push
and
jmp
or
and
aam
pushf
cmp
mov
jae
mov
gs
xchg
xchg
xor
push
insb
push
call
cmp
adc
or
and
cmp
and
lock
mov
test
mov
sub
cmc
or
enter
mov
cmp
or
cli
jne
fadds
mov
filds
add
pop
sbbl
dec
test
mov
icebp
roll
inc
fdivl
cmp
sbb
loopne
into
mov
mov
test
add
push
ds
enter
jmp
inc
add
push
call
maskmovq
notl
lret
mov
adc
fisubl
call
jne
and
dec
and
dec
mov
adc
dec
call
mov
and
fdivrs
sub
loop
pop
mov
xor
jge
mov
mov
xchg
pop
aam
mov
jmp
inc
xchg
leave
jo
inc
mov
xchg
xchg
enter
push
dec
clc
daa
jp
dec
call
mov
mov
repz
xorb
pop
xor
mov
inc
pop
dec
cld
loopne
scas
test
ss
dec
in
ds
nop
int3
es
dec
jge
les
sbbl
and
popf
icebp
xor
cmc
sub
jo
es
test
loopne
ret
stos
aad
or
lock
cmpb
add
lock
inc
jg
lahf
call
lock
or
fcoms
dec
and
insl
dec
mov
sbb
xchg
rcrb
ljmp
push
mov
pushf
mov
pop
ja
insb
mov
call
leave
adc
out
mov
mov
pop
int3
push
leave
cmp
mov
and
incl
lods
push
sbb
dec
rolb
sub
in
jbe
adc
and
inc
out
hlt
xchg
pop
mov
inc
sub
push
pusha
xchg
lea
jb
js
xchg
add
dec
call
aam
jmp
hlt
inc
ss
xor
mov
pop
cmc
push
aas
lds
sarl
mov
pop
push
pushf
dec
fcoms
out
movsb
jl
adc
arpl
pop
push
cmovne
cs
mov
loop
je
mov
loopne
xchg
adc
xchg
mov
add
xchg
and
ret
mov
add
mov
inc
lret
mov
mov
mov
pop
popl
lcall
mov
pusha
push
jns
push
shrb
or
push
xor
arpl
adcb
xor
jbe
pop
sbb
xchg
and
loopne
sbb
adc
mov
inc
mov
add
in
mov
lock
call
xor
aam
test
jmp
inc
jae
adc
inc
mov
mov
jmp
dec
je
pop
ljmp
adc
and
xor
cmp
rcrb
mov
or
xor
shr
mov
and
and
scas
popl
mov
mov
mov
adc
inc
mov
jl
lahf
icebp
call
addr16
mov
push
adc
xchg
add
xlat
mov
sarb
cwtl
pop
sbb
int3
sub
xchg
mov
sbb
inc
push
dec
sub
and
jne
sbb
add
inc
or
dec
shlb
cmp
mov
sub
out
sub
xor
pop
scas
push
adc
cli
in
and
addr16
mov
ret
sub
mov
add
les
call
cmp
inc
test
cmc
mov
movsl
mov
test
push
test
and
in
or
adc
sub
xor
and
push
pusha
mov
test
les
hlt
adc
inc
in
icebp
sub
fbstp
in
test
push
lea
push
test
ret
inc
adc
cwtl
and
add
mov
orb
jae
mov
push
cwtl
stos
push
fmuls
pop
mov
dec
cmp
call
out
add
cwtl
add
loopne
faddl
mov
push
fs
inc
mov
inc
mov
shrb
ret
incb
int3
mov
int3
mov
mov
bnd
inc
in
loopne
daa
pop
test
push
add
mov
cwtl
fcoms
das
test
imul
jo
mov
imul
popa
or
popf
inc
cwtl
icebp
cmp
loope
add
ret
out
jl
idivb
je
rorl
out
and
push
mov
sbb
shrl
and
adc
sub
inc
test
push
adcb
scas
mov
test
adc
lods
je
or
sub
loopne
imull
mov
std
mov
mov
pop
cld
pop
add
mov
add
add
dec
pusha
and
mov
fmul
js
jne
dec
out
pusha
adc
or
or
push
nop
std
mov
add
jg
cmp
push
repz
decb
xor
sarb
mov
popf
mov
cmpb
inc
or
cmc
and
imul
mov
dec
add
xor
fmuls
xchg
mov
xchg
push
adc
mov
sbb
mov
mov
shll
bound
insb
cmp
add
cmp
notl
inc
jo
je
xchg
mov
and
lret
sbb
fsubs
enter
pop
lret
rcll
fmull
jl
pop
repnz
test
add
fimuls
add
mov
sbb
imul
test
inc
or
and
jmp
mov
sbb
adc
je
cmpsl
hlt
xchg
mov
inc
fs
jne
adc
outsl
push
int3
int
or
xchg
jl
jne
mov
inc
or
push
push
lods
jbe
call
hlt
enter
push
lahf
fildl
mov
popf
js
pop
adc
add
cmpl
nop
je
cli
mov
test
jge
cmp
repz
dec
mov
adc
insb
add
dec
sbb
cmp
xchg
call
xchg
mov
pop
mov
rcl
int3
cli
pusha
pop
sbb
sar
push
mov
inc
adc
rolb
les
mov
clc
adc
cmp
jge
add
sub
xchg
cwtl
mov
mov
mov
or
mov
mov
inc
add
call
aam
and
push
scas
or
pop
inc
mov
rclb
rcl
mov
imul
je
adc
or
fs
pop
cmpsl
pop
mov
repnz
ja
sbb
lcall
inc
push
pop
adc
aad
call
adc
mov
or
int3
pop
sti
rorb
mov
sub
and
or
cmp
cwtl
test
jmp
push
mov
lahf
or
add
adcb
dec
mov
mov
jge
dec
inc
mov
insl
movsb
jge
xor
mov
aas
or
ss
ret
lods
push
mov
cwtl
daa
inc
add
dec
in
mov
and
dec
sbb
pop
push
push
scas
aaa
cmp
push
pusha
adc
or
ss
xor
xchg
jo
xor
mov
jecxz
sarl
mov
xor
sub
dec
sar
adc
pushf
sbbl
sbb
inc
aas
mov
dec
enter
popf
scas
or
jmp
mov
ds
fidivrs
int3
inc
sahf
pusha
or
pusha
push
or
push
cwtl
cmpsb
dec
rorb
mov
adcb
add
jge
clc
cmc
or
inc
cwtl
push
xor
repz
or
mov
sub
push
testb
and
cli
test
bound
inc
pusha
subl
je
cwtl
or
enter
xor
jecxz
imul
stc
out
add
sub
and
inc
test
cld
jl
dec
shrb
mov
insl
je
dec
sub
add
cmp
mov
js
and
es
je
sbb
adc
mov
out
inc
call
xor
js
rcr
inc
jle
push
sub
inc
testb
add
out
jbe
or
popf
cmp
hlt
dec
and
or
dec
clc
sub
mov
lock
cmpsb
cwtl
clc
pop
add
lock
and
push
mov
andl
pop
mov
mov
ret
sub
cmp
enter
jmp
inc
out
js
lock
out
daa
lds
in
je
xchg
lahf
mov
or
xor
icebp
loopne
adc
movsb
ljmp
cmp
inc
maskmovq
testl
sub
xor
push
pop
lret
test
in
mov
mov
cwtl
cmp
mov
add
push
and
and
push
push
aam
push
cmp
sbb
or
add
or
mov
mov
out
les
movsb
adc
xor
rorl
add
test
rsm
aaa
sub
shrb
shlb
or
shlb
test
pop
inc
fsubr
daa
ljmp
push
sbb
cmp
jg
cmp
sub
test
sub
loopne
lods
test
and
xchg
cmp
inc
jnp
lret
adc
cmc
jne
in
jo
rcrb
jg
call
sbb
mov
adcl
pushf
nop
sbb
out
setge
nop
stc
cmp
or
mov
push
add
hlt
jno
adc
xchg
js
nop
je
mov
or
inc
testl
inc
lock
or
or
adc
aad
insb
mov
mov
imul
scas
cmp
mov
inc
adc
rorl
xor
clc
or
sbb
dec
adc
cs
sub
add
xlat
cwtl
xor
ja
sbb
lds
jo
lahf
jbe
loop
test
push
or
testb
xchg
and
adc
addr16
jmp
nop
cld
add
call
je
mov
mov
mov
test
xchg
mov
or
lahf
hlt
or
loopne
and
test
cmp
lea
sub
xchg
xchg
cmp
shrb
mov
aam
xchg
dec
mov
pop
add
mov
in
adc
xchg
add
push
push
movsl
std
cwtl
adc
mov
sbb
cs
adc
cwtl
mov
push
pushf
add
fistpl
pminsw
sbb
lock
xor
clc
icebp
insb
add
sbb
ja
mov
sbb
mov
adc
lea
imul
insb
dec
inc
call
rolb
inc
jmp
ljmp
mov
push
lods
jle
xor
or
mov
xchg
add
mov
pusha
jo
lods
add
incb
sub
inc
iret
add
xor
jmp
rol
adc
dec
loope
hlt
andl
fcomps
imull
mov
or
cmp
leave
dec
loope
jecxz
nop
add
sub
lds
xor
xchg
or
lods
das
clc
or
ror
add
jmp
jb
push
hlt
cmp
shl
js
and
sahf
mull
add
add
xor
aam
add
mov
xchg
or
pop
loope
cmp
jg
enter
std
xor
rorb
and
addb
adc
fsubr
pop
mov
add
cmc
je
rcll
and
mov
xchg
clc
dec
sbb
in
sbb
mov
lods
mov
je
add
scas
inc
mov
cltd
testb
lret
inc
mov
mov
mov
mov
mov
sub
inc
or
pushf
cld
or
ljmp
jmp
imul
dec
std
sbb
and
adc
das
addr16
sbb
enter
ret
sysenter
and
icebp
fmuls
in
insl
xor
jp
push
push
mov
mov
xor
je
addb
and
idivb
hlt
pop
sub
add
mov
adc
push
cwtl
or
in
and
stos
or
mov
call
xor
cli
or
aam
jbe
lock
mov
mov
sub
test
adc
test
pop
test
outsb
mov
mov
movsb
cmp
or
jge
paddsw
mov
or
clc
lret
test
call
cmp
js
pop
loopne
clc
mov
outsb
adc
inc
scas
cmpsl
push
adc
sub
imul
push
jl
mov
pop
aaa
jp
cmp
adc
mov
aaa
je
xchg
leave
jmp
add
ss
cmp
sub
imull
mov
mov
xor
xlat
hlt
sub
sub
mov
add
or
add
sub
rorb
or
test
or
add
lea
cli
sub
mov
add
inc
movsb
mov
clc
inc
jno
add
mov
fsubl
in
push
xchg
mov
setne
adcb
dec
ss
fdivr
and
das
inc
dec
imul
xchg
sarl
pop
aam
das
push
mov
mov
dec
or
cltd
cmp
shl
mov
mov
jb
add
testl
add
or
pop
pushf
jb
cs
jl
add
out
shlb
mov
mov
inc
jmp
cli
push
ja
or
test
mov
shl
loopne
pop
adc
in
cmp
hlt
add
ret
stc
hlt
add
mov
insl
cmpsb
cld
inc
movsb
int
cld
inc
dec
and
subb
xorb
and
or
sbb
add
adc
sti
jo
jmp
rcl
mov
xlat
inc
mov
daa
clc
mov
loopne
nop
add
add
das
and
test
test
pop
add
ja
fsubs
pop
je
dec
leave
les
mov
call
jl
and
jg
in
jns
pusha
cli
or
fld
push
sbb
add
inc
mov
dec
hlt
xchg
xorb
mov
push
cwtl
negb
jbe
mov
int3
mov
mov
call
shlb
push
daa
je
hlt
xchg
add
loopne
jmp
inc
add
mov
add
testb
sub
dec
cld
mov
mov
mov
jae
sbb
repz
hlt
cmp
aas
aas
test
clc
dec
mov
mov
shlb
cmp
loopne
aas
test
adc
sar
andl
sub
add
cmpps
fs
push
push
nop
cmp
cwtl
ss
mov
popa
mov
add
pop
loope
adcb
push
mov
pushf
dec
cmp
movsb
inc
mov
ds
loope,pn
popa
hlt
test
mov
push
stos
xchg
push
mov
sub
les
or
push
imul
jg,pn
or
pop
fsubrs
mov
sub
das
jo
adc
out
push
in
jns
add
test
jb
mov
cld
leave
jmp
add
cmp
out
imulb
or
mov
push
test
stos
test
clc
mov
inc
int3
mov
mov
mov
js
arpl
loope
push
pop
mov
and
popa
and
cmp
fistl
cmp
push
push
imul
stos
or
outsl
pusha
shl
xchg
cld
dec
or
mov
jmp
cmp
insb
or
mov
clc
push
and
sub
inc
add
inc
sbb
push
add
jge
mov
setno
fs
ljmp
sarb
scas
xorb
mov
sbb
mov
cmp
cmpsl
je
enter
add
imul
xor
pop
inc
mov
das
push
in
xor
jno
sbb
cltd
pop
jmp
or
mov
add
cmpb
cmp
sub
jle
sbb
jne
adc
inc
pop
xor
cmp
fimuls
cmp
or
jb
shrb
je
sbb
adc
add
add
pop
and
xchg
imul
test
jmp
mov
test
and
pop
push
sub
xchg
mov
and
add
imul
insl
xchg
mov
hlt
mov
mov
and
mov
jbe
dec
sbbb
movsl
dec
jecxz
jp
and
inc
shl
adc
or
les
addl
or
sti
jbe
jo
xchg
adc
je
mov
jl
cmp
pop
ljmp
xor
cmp
mov
sub
xchg
xor
and
and
xchg
nop
add
je
add
sub
jg
mov
stos
test
add
xchg
hlt
repnz
and
cli
mov
mov
sub
hlt
fwait
push
lcall
repz
clc
jmp
test
and
enter
lods
lds
pop
jmp
inc
cmp
xchg
mov
dec
add
sbb
mov
enter
subb
insb
add
add
pop
mov
push
pop
mov
mov
insl
pop
or
cmp
das
ror
pop
and
pop
jp
cmp
pop
inc
leave
pop
lret
test
xchg
mov
jl
push
test
negb
mov
iret
fcmovne
or
sub
push
nop
add
push
call
fistpl
clc
jbe
lods
xchg
sub
xor
mov
jl
mov
push
mov
clc
add
lcall
dec
mov
das
lods
push
add
fsub
cli
cwtl
sub
xor
xchg
movsb
sub
xor
sub
inc
adc
jp
pop
in
mov
sub
jle
dec
adc
adc
cwtl
pop
dec
scas
xchg
lock
int3
pop
xchg
inc
inc
jge
push
push
es
push
shrb
adc
push
mov
test
das
out
push
mov
call
dec
adc
xor
mov
ret
dec
xor
fucomip
insb
push
dec
lock
or
rdmsr
iret
and
loope
or
into
pushf
mov
cwtl
mov
orb
cld
inc
mov
push
inc
inc
js
cwtl
cmp
and
mov
mov
shlb
cmp
and
mov
je
andl
test
mov
call
call
shrb
lods
add
jmp
jo
jae
push
icebp
enter
xor
inc
cmp
mov
jns
loope
cmp
sbb
stos
mov
mov
daa
aam
push
push
ja
xchg
mov
mov
xor
mov
imul
jns
adc
clc
je
mov
popf
ja
lods
cmc
adc
dec
mov
lods
add
sbb
jg
sub
inc
insb
push
int3
add
pop
pop
cmpsb
loopne
inc
nop
xchg
lock
neg
sbb
loopne
lock
add
jo
addl
push
pusha
or
xchg
pusha
cwtl
mov
rol
add
inc
add
dec
jne
cmp
movb
pop
into
sti
xor
rcll
in
and
or
cmp
and
mov
sbb
or
js
movsb
inc
xchg
inc
in
or
cmp
add
jns
stos
mov
xchg
pusha
out
mov
out
xchg
clc
or
js
mov
imul
jmp
add
and
jbe
mov
inc
or
inc
push
and
rcrb
xchg
sub
shl
mov
add
xor
add
inc
pop
sub
hlt
mov
add
xchg
insb
testb
in
and
xchg
sub
movsb
add
rorb
jle
arpl
dec
inc
jb
pusha
lods
fsubs
add
mov
adc
jo
test
pop
rclb
push
cwtl
and
lds
nop
pop
lds
mov
dec
xchg
cwtl
push
pop
test
mov
popa
popf
inc
pop
mov
pusha
fisubrs
sarb
mov
dec
mov
fsubs
clc
mov
pop
jecxz
ja
loopne
xlat
shl
push
sbb
xor
sbb
jge
cwtl
shll
adc
pusha
xchg
xorl
imul
sbbb
nop
das
sbbb
in
xchg
add
imulb
add
test
clc
cwtl
xchg
stos
cmp
add
mov
call
jg
and
pushf
jo
dec
mov
int
mov
xlat
addr16
xchg
cld
pop
xor
sub
adc
adc
adc
test
test
mov
mov
leave
or
out
je
loopne
cmpsb
mov
add
out
cmp
idivb
add
dec
hlt
or
and
sub
sub
mov
ret
inc
mov
push
clc
adc
push
push
and
pop
add
sbb
adc
pushf
das
jmp
dec
lcall
sub
fmuls
xchg
jae
int
xor
dec
mov
add
orl
mov
pop
movsl
call
push
add
loopne
xchg
jo
inc
xor
jno
xchg
lock
or
fdivrl
push
call
push
loop
or
push
inc
inc
and
adc
push
data16
clc
fcomip
add
js
jne
sub
pop
mov
leave
in
or
mov
jmp
sub
test
out
push
or
ret
push
fstpl
bound
xchg
std
and
inc
movsb
lock
lods
inc
nop
out
addl
jns
inc
adc
mov
sahf
and
shrl
clc
mov
mov
mov
sahf
fsubl
push
pop
inc
jo
popa
inc
mov
push
xor
jb
inc
scas
jmp
mov
daa
lods
add
cmp
je
xchg
inc
mov
pop
and
adc
jmp
lock
popa
shl
pop
and
mov
movsb
fs
enter
mov
loope
sbb
into
and
test
movsb
es
inc
in
cmp
xor
stos
aam
xchg
xchg
test
mov
test
sbb
pop
je
enter
pop
mov
test
out
stos
mov
aad
test
addl
xchg
jae
cmpsb
inc
add
mov
ret
cmp
fnclex
sub
cmp
rolb
mov
and
inc
ljmp
inc
cmp
jno
fwait
fs
rol
sbb
add
adcb
sub
xor
add
adc
iret
mov
or
inc
das
movsl
inc
or
pusha
cltd
dec
call
cltd
cs
sbb
add
mov
cltd
sbb
add
and
hlt
int
or
inc
inc
dec
mov
jecxz
or
inc
mov
pop
mov
les
or
and
in
movsb
adc
sub
sbb
xor
adc
adcl
scas
inc
mov
mov
mov
addb
jo
xchg
jo
add
push
dec
lock
pop
cmpsb
sarb
lock
ror
jae
xor
fs
cmpsl
sbb
adc
pop
int3
mov
or
cmp
push
mov
mov
mov
or
pop
daa
cld
pusha
jp
rorb
incb
fstpt
fdivrl
and
dec
xlat
sub
cmp
adc
adc
and
pop
xor
inc
or
addb
cmp
and
popa
xchg
dec
call
and
fsts
xchg
cmp
and
lock
mov
pop
xor
sbb
push
je
pop
mov
out
movsb
inc
loop
pop
and
sbb
addb
lods
call
add
cld
cwtl
cmpsb
dec
push
xor
cmp
hlt
enter
call
inc
or
mov
push
push
push
or
mov
sbb
mov
dec
sbb
add
xor
lods
push
jg
mov
fiaddl
adc
or
pusha
or
add
loop
inc
and
sbb
mov
push
lods
adc
add
or
add
add
sbbl
movsb
outsb
pop
jo
mov
sbb
push
cmpb
sbb
shlb
jo
mov
push
movsb
xchg
test
push
push
pop
inc
aam
rcl
clc
nop
test
cld
cwtl
inc
orb
xchg
mov
fsubrs
ficomps
cwtl
adc
jmp
add
adc
lock
add
test
jb
hlt
setge
fs
leave
adcb
ja
lock
push
adcb
loopne
xchg
inc
fadd
cs
dec
stos
push
mov
testb
adc
outsl
jmp
lcall
pop
test
jl
pop
sarb
mov
pop
jbe
add
add
out
push
xchg
dec
and
rcl
ja
inc
add
push
mov
pop
xchg
xor
push
clc
bswap
adc
add
fsub
loopne
push
jo
or
andb
nop
imul
test
rclb
adc
mov
daa
imul
add
mov
leave
push
push
imul
mov
call
subl
js
dec
std
mov
cmp
xchg
adc
xlat
pop
lods
jno
cld
into
subl
mov
mov
popf
jl
in
cmpsl
nop
jbe
lods
jne
cmp
lock
orl
cwtl
inc
lahf
shr
or
loop
leave
sbb
jg
inc
testl
sbb
add
add
shlb
ret
mov
cld
sub
or
addb
push
and
aas
movsb
into
cmp
ret
sub
push
adc
sub
mov
jne
loopne
es
or
add
inc
mov
lock
mov
or
mov
mov
filds
enter
cmp
orb
jmp
cmp
in
add
adc
inc
or
outsb
xchg
aam
adc
xchg
mov
xor
dec
roll
inc
pop
dec
mov
or
lea
mov
roll
je
push
adc
popf
or
or
call
test
enter
xor
enter
pop
fcoml
clc
mov
je
fldcw
mov
mov
pop
cmpl
add
cmc
sub
clc
inc
call
xorb
pop
add
jbe
add
and
adc
mov
cwtl
mov
mov
sarb
fwait
notl
arpl
fcoml
lock
mov
add
inc
shr
push
aas
in
dec
mov
jmp
push
push
sbb
xchg
cmp
xchg
flds
nop
adc
fdiv
clc
add
mov
mov
xor
mov
out
lahf
rcr
xchg
add
rclb
das
push
pop
addl
orb
add
sti
pop
adc
add
vmread
cmp
lock
out
mov
andb
mov
sub
sbb
pop
shrb
aas
add
xor
pandn
or
push
mov
mov
jae
mov
push
call
aas
repnz
shlb
sbb
adc
xchg
loopne
in
push
adc
ja
rcr
in
cwtl
shlb
movsl
leave
push
hlt
cmp
pop
cmpsl
or
mov
stos
push
cmp
inc
out
movl
jmp
fs
adc
jb
push
xor
inc
mov
or
pop
xor
xchg
xor
sbbb
cwtl
or
add
mov
clc
push
shlb
jge
iret
cmp
cmpb
arpl
jmp
push
or
call
mov
dec
add
jg
rorb
in
jne
loopne
fsubr
xorl
sbb
imul
ret
xor
or
xor
pop
mov
test
enter
xor
test
movsb
sbb
mov
in
movsl
mov
mov
fs
add
pop
cmpl
add
shl
sbb
imul
dec
data16
dec
inc
test
rcrb
jp
and
test
ss
out
bnd
adc
roll
pusha
pushf
add
das
repnz
lahf
and
inc
shlb
adc
nop
dec
out
push
cmp
and
mov
cmp
daa
loopne
add
int
sub
in
mov
sbb
mov
div
je
push
loopne
jmp
inc
push
loopne
adc
shlb
loopne
xchg
mov
out
mov
pop
sub
xor
and
mov
jmp
xlat
shrb
nop
enter
or
int3
add
push
sub
sbb
mov
inc
call
das
xchg
xchg
jbe
addl
inc
xchg
or
ss
jne
insl
pop
mov
inc
cmpsb
mov
and
orb
push
fdivl
loopne
jge
call
jne
out
xchg
xchg
pop
inc
mov
test
sub
sbb
cwtl
sbb
mov
movsb
rolb
pushf
or
fwait
xor
test
out
lret
sti
or
jg
test
or
sub
jne
pop
stos
cld
icebp
mov
or
ret
xlat
xchg
jo
addb
aam
xchg
mov
push
mov
mov
and
mov
and
inc
sbbb
les
icebp
or
push
leave
popa
movlps
and
inc
clc
pop
mov
or
and
notb
ffreep
or
push
add
inc
sbb
and
push
push
xchg
or
mov
in
mov
stos
adcb
addb
lea
add
in
pushf
adc
rorb
add
pop
xor
je
dec
add
int3
push
add
hlt
jl
dec
mov
pop
ret
pop
sbb
add
xchg
dec
dec
pop
or
dec
lret
subb
inc
call
xor
inc
inc
push
movl
lods
jo
jle
fsub
les
cmp
testb
shl
pop
daa
xchg
sub
xor
or
jno
mov
in
jbe
sbbb
pop
cmpsb
add
pop
or
mov
packuswb
nop
int3
push
mov
adc
lods
testl
pop
push
dec
push
inc
icebp
xlat
cwtl
cmp
sti
dec
or
mov
cmp
push
sbb
adc
negl
les
adc
inc
mov
push
test
hlt
je
fmull
inc
cmc
and
mov
jns
pop
shll
xchg
clc
mov
mov
sub
hlt
xchg
and
xchg
int3
pop
mov
cwtl
mov
loopne
movb
cmc
push
xor
ds
cmp
or
add
shll
shlb
testl
xor
mov
ja
cmc
std
and
loopne
inc
mov
nop
bound
dec
nop
cmc
ficompl
sbb
loop
cmp
testl
mov
add
roll
xchg
xor
cld
jno
out
mov
add
rcll
pushf
or
xchg
pop
js
inc
scas
xchg
or
or
das
fists
xchg
mov
xchg
xchg
cld
mov
in
mov
stos
pop
adc
shlb
call
xor
cmp
imul
and
sbb
test
xchg
jg
in
adc
mov
ret
xor
push
insl
aam
and
mov
adc
in
daa
movsl
push
rolb
and
data16
repz
xor
sub
hlt
loope
loopne
cwtl
pop
pop
push
test
dec
loopne
push
andb
add
daa
shll
and
test
shrb
sti
addb
je
or
fs
push
movsb
mov
hlt
aas
cmpsl
jbe
jl
inc
les
mov
and
jne
mov
or
or
pop
nop
xchg
or
or
and
sub
test
xlat
sub
add
push
ja
rolb
add
push
fldenv
mov
test
scas
add
or
xor
lds
inc
fistps
scas
in
ds
gs
xchg
mov
and
insb
cs
or
out
mov
out
dec
repz
pop
or
mov
test
lahf
mov
xor
aaa
jmp
dec
xchg
bound
mov
cmp
scas
dec
and
cltd
loopne
out
push
add
imul
test
mov
clc
mov
cli
cwtl
movsb
scas
imul
shlb
sbb
aad
flds
subb
fs
mov
clc
ds
subb
jbe
inc
mov
and
fdivrl
xchg
lods
mov
mov
call
stos
pop
pop
fs
enter
jne
jmp
pop
call
sub
psubb
ret
mov
adcl
adc
mov
push
inc
or
adcb
fmull
stos
mov
in
adc
stos
sbb
testb
push
inc
call
repz
pop
push
add
jge
lea
pop
pop
cmp
and
adc
and
les
xor
jmp
push
cmp
mov
jmp
jne
sbb
cwtl
fstl
enter
adc
push
and
js
dec
mov
dec
adc
mov
cmp
xor
jo
ret
and
scas
lock
jmp
sti
mov
sub
mov
outsb
xlat
sub
adc
push
and
hlt
mov
mov
loopne
and
mov
xchg
test
nop
lods
add
or
mov
cwtl
std
mov
clc
jle
and
das
cmp
in
dec
inc
xor
pushf
out
pop
sub
adc
and
adc
and
push
or
ljmp
cwtl
and
mov
cmp
xchg
fs
xor
sbb
pop
cmp
and
andb
arpl
fcoms
mov
inc
push
mov
fcompl
inc
or
or
loop
jmp
clc
sub
inc
int
dec
mov
dec
decl
cmp
xchg
sub
cld
xchg
xchg
out
mov
jge
and
push
mov
pop
mov
or
jg
les
jl
repnz
adc
cmp
mov
je
or
lods
adcb
fs
or
enter
aam
and
rcrb
sub
push
call
popf
ret
aam
outsb
lret
rolb
pusha
xor
sub
jns
fs
pop
adc
pop
jo
push
mov
js
pop
lock
sbb
cmp
lret
enter
out
pop
shll
mov
add
ret
push
dec
jmp
daa
sbb
sbb
xor
pop
push
pop
mov
jno
dec
cli
add
cwtl
cmp
xchg
jae
pop
mov
add
mov
push
xor
cmp
pop
mov
dec
mov
mov
lea
mov
mov
sub
clc
add
inc
or
ja
hlt
jle
les
imul
mov
add
or
sub
je
dec
lock
inc
add
fwait
mov
mov
pop
std
call
cmp
lods
xchg
xor
iret
stc
cmp
push
mov
out
sbb
xchg
stc
lahf
or
aam
aad
imul
pushf
je
jbe
add
cwtl
in
jno
xchg
xor
add
lock
xchg
cli
jl
je
push
cmpsb
stc
fcoms
pop
inc
mov
addb
mov
adc
mov
out
inc
rcr
push
in
enter
lods
add
mov
pushf
lock
addl
or
jmp
mov
xchg
adc
mov
pop
inc
add
and
lea
xor
jg
dec
sarb
ret
jbe
jmp
and
xlat
mov
or
mov
mov
cmp
and
daa
rdmsr
movsl
enter
and
lcall
loope
push
scas
and
xchg
mov
push
or
and
jbe
fs
int3
cld
mov
in
das
or
xor
std
xor
loopne
pop
push
clc
test
xchg
sbb
sub
stos
inc
shlb
jg
mov
mov
insb
or
jmp
js
inc
pop
xlat
push
mov
aas
or
pop
test
sub
mov
ret
cltd
fidivrs
incb
test
push
inc
nop
addr16
mov
add
cmp
fcomp
sub
and
mov
inc
pushf
adc
push
sub
mov
inc
and
call
jg
mov
je
xor
dec
add
mov
subl
ja
test
scas
pop
jp
xor
movups
inc
les
testb
push
inc
push
add
dec
pop
dec
pop
mov
int3
add
push
add
push
je
adc
aam
push
add
pushf
les
dec
jns
mov
dec
dec
cli
and
adc
mov
adc
jne
sub
push
inc
pop
sti
pop
jl
xchg
jg
or
mov
sub
sbb
test
sti
mov
add
int
push
loopne
pop
cwtl
xchg
sahf
hlt
pushf
je
repz
xchg
and
cld
push
or
mov
mov
loopne
rolb
cmc
pop
icebp
pop
sbb
pop
dec
sbb
mov
and
adc
cwtl
and
dec
add
sbb
addl
pop
jmp
stos
cmp
add
sub
mov
pop
in
adc
incl
cwtl
sar
cltd
test
jns
mov
fadds
scas
cmpsl
es
mov
repnz
sub
jg
add
xor
addb
push
or
xor
negb
push
test
aad
push
rol
add
cwtl
jnp
enter
lock
insl
insb
cmp
cld
adc
sub
sbb
shr
sbbb
pusha
sub
ret
lock
les
mov
sub
test
mov
mov
mov
pop
inc
mov
xor
dec
add
ds
sub
xchg
decb
or
aam
xor
sub
and
pop
mov
outsb
je
cmp
push
ret
pop
call
or
pop
pop
cwtl
repnz
xor
or
sbb
push
sub
inc
inc
mov
add
xor
push
test
ds
add
jns
add
mov
call
jns
pushf
in
pop
mov
fs
out
shlb
inc
mov
hlt
rcll
mov
dec
test
nop
mov
jl
sub
sub
cmc
or
dec
add
cltd
jo
stc
js
xor
mov
mov
push
and
into
cwtl
adc
pushf
adc
xor
or
call
push
dec
dec
frstor
les
or
push
sti
xor
test
leave
lock
adc
jmp
cmp
jne
js
and
xchg
xor
push
pusha
add
popf
dec
sub
mov
push
rcll
int3
pop
pop
scas
lcall
push
sbb
adc
and
int
lods
push
jne
mov
adc
cmp
in
aam
sbbb
lock
out
icebp
in
jle
dec
jno
repnz
pushf
test
push
mov
push
pop
mov
scas
push
cwtl
ljmp
mov
pop
jns
out
dec
scas
dec
xor
ja
test
jmp
mov
nop
dec
xorb
sbb
cwtl
dec
mov
loopne,pn
jne
call
je
ret
fmull
or
dec
dec
push
movsb
js
je
sub
rcrl
and
fsubl
neg
movb
jmp
push
test
rol
ret
ja
test
inc
mov
mov
subb
add
add
and
xchg
shlb
insb
or
sbb
add
les
test
les
lods
mov
lds
in
add
add
xor
mov
inc
dec
test
push
xchg
adc
push
adc
imul
mov
mov
rorl
sub
pop
adc
adcl
test
mov
icebp
imul
xor
loopne
daa
adc
cmp
insb
dec
pushl
push
push
stos
enter
push
sub
loop
gs
lds
daa
pop
jbe
inc
cwtl
or
sub
inc
mov
mov
lret
inc
dec
js
les
push
popf
clc
xor
xchg
dec
gs
xchg
pop
in
add
cmc
mov
pop
jmp
pop
scas
and
scas
bound
jno
add
mov
dec
xor
lock
sub
push
mov
cmpb
cmp
pop
jge
and
push
test
mov
xorl
mov
mov
arpl
or
fisubs
push
xchg
adc
xlat
repz
enter
add
push
call
cmp
out
je
sbb
fldenv
mov
sbb
xchg
or
cmpsl
cmp
push
cwtl
leave
mov
push
popa
movsb
mul
inc
xchg
das
mov
je
xorl
lcall
or
push
cmp
or
call
jl
cmp
testl
push
mov
or
test
jne
cwtl
sbb
jmp
mov
pusha
int3
std
das
clc
jl
sarl
call
pusha
scas
xor
sbb
mov
mov
cmp
jge
adc
int3
jbe
inc
dec
cmp
jo
sbb
mov
adc
je
push
and
mov
enter
or
xor
jo
mov
xor
xchg
sub
insl
or
mov
push
das
clc
and
mov
or
mov
inc
cwtl
add
mov
cmp
imul
call
jae
or
addb
adcl
pop
pop
add
faddl
mov
mov
leave
sbb
or
sbbl
shl
sub
add
lock
mov
nop
push
add
add
cmp
mov
imul
push
sti
inc
or
ret
fsub
inc
adc
rclb
adc
in
enter
adc
xor
mov
pop
rolb
ja
mov
adc
lock
mov
in
inc
sbb
insb
jnp
ficomps
imul
loopne
js
mov
or
sub
dec
cld
or
sti
mov
lret
insb
jne
sbb
add
dec
call
cwtl
xor
mov
add
push
jno
mov
pop
pop
jl
icebp
inc
sub
cmp
mov
jo
push
xchg
dec
sbb
js
jmp
jg
sub
stc
sbb
mov
test
xorb
cli
mov
add
inc
push
dec
shrb
sbb
mov
or
aad
xorb
xor
xchg
sbb
enter
push
xchg
xchg
mov
or
pop
js
sbb
aad
and
sub
clc
dec
add
pop
lea
jbe
popf
and
and
andl
push
sbb
add
cmp
sbb
jne
mov
mov
inc
push
mov
std
pop
call
lea
cmp
add
dec
add
push
or
and
cli
pop
push
and
mov
nop
cld
sete
mov
movsb
or
icebp
jp
lods
xchg
inc
cmp
xchg
das
dec
xor
cmpsb
dec
fdiv
fsubl
xlat
xchg
push
sub
adc
test
mov
test
adc
notl
or
mov
add
movsb
shll
idivl
lock
dec
dec
hlt
mov
sbb
mov
aam
mov
or
push
ficoml
in
cmp
rolb
mov
or
push
fcoml
incb
ljmp
orl
sbb
cs
mov
jae
loopne
pop
arpl
xchg
adc
pop
adc
lahf
ret
fsub
ret
push
sbb
push
call
xor
push
push
es
and
pop
outsb
sbb
dec
or
les
dec
or
push
lahf
jae
imul
jge
mov
std
mov
adc
inc
xchg
pop
pop
mov
jmp
cmpsl
pop
xchg
in
ret
in
mov
push
lock
jb
xor
xchg
cs
or
dec
xor
cmp
pushf
addr16
les
sbb
inc
sbb
xor
in
mov
sbb
sbb
adc
xor
cmp
faddl
sbb
imul
and
mov
sbb
rcll
out
incb
in
aaa
nop
movsb
add
fstps
add
add
add
jg
dec
aad
je
add
push
mov
imul
lods
push
or
mov
xchg
test
mov
insl
mov
pop
mov
push
call
cwtl
shll
cmpl
subb
dec
push
ret
rclb
inc
mov
ljmp
es
out
nop
adcl
inc
gs
push
pop
aad
test
js
inc
add
push
test
add
test
cwtl
aam
cs
movsb
rolb
sbb
mov
mov
push
sbb
dec
nop
addr16
adc
mov
mov
jo
inc
mov
or
mov
xchg
push
add
mov
inc
or
jb
frstor
cmpb
mov
repz
rdmsr
fucomip
jo
inc
hlt
fsubr
std
mov
test
pop
sbb
roll
push
loope
and
mov
sub
and
je
pop
test
jns
sbb
cmp
mov
aad
call
adc
popa
cmp
or
or
inc
adc
xchg
test
les
or
push
sub
fsubr
cltd
pop
jns
sbb
push
sbb
inc
mov
adc
mov
cmpsl
call
hlt
daa
fdivs
mov
mov
mov
add
or
fmull
and
in
adc
test
ja
push
mov
nop
cli
loopne
dec
add
xchg
ds
sbb
out
inc
loopne
loopne
mov
cmp
jle
or
int3
and
pop
pusha
cwtl
xchg
xchg
jbe
adc
fwait
repnz
fimull
scas
mov
mov
fisttpl
js
faddl
and
pop
loopne
sub
pop
movsb
rorb
aas
cwtl
jne
int3
js
xor
and
xor
add
mov
adc
push
pop
js
pop
call
cmp
or
cwtl
std
sbbb
xchg
mov
cmp
call
repnz
adc
cmc
mov
xchg
test
fmuls
hlt
addb
or
add
pop
push
addl
push
sarb
add
sub
mov
add
add
pop
or
jns
lea
pop
push
iret
mov
mov
daa
sbb
hlt
push
fmull
mov
sti
add
xchg
pop
push
pusha
and
mov
add
jle
movsl
decl
movb
ret
sarl
xchg
mov
cld
movsl
pop
mov
lea
cmc
cltd
or
pop
rolb
in
sub
or
inc
mov
subb
dec
pop
cwtl
sub
xor
push
and
xor
mov
mov
inc
add
testl
jbe
sub
cmp
ljmp
push
fldl
jge
push
insb
int3
pop
ds
jno
pop
mov
dec
mov
and
popa
dec
popa
call
clc
mov
call
fcom
iret
mov
mov
add
jne
fisttps
xchg
sbb
jo
insl
push
lock
inc
sub
leave
je
inc
add
dec
jmp
fsubr
mov
lea
fcompl
fdivrs
movsb
fldcw
movl
mov
cwtl
movsb
filds
mov
push
add
mov
dec
and
or
pushf
add
inc
mov
cli
push
in
mov
mov
cmp
mov
and
add
cmc
cmp
mov
aas
mov
test
icebp
and
or
test
test
in
es
in
notb
daa
cmp
or
das
sub
inc
sbb
ret
dec
add
mov
call
mov
loopne
enter
push
pushl
cmp
jp
in
mov
shlb
jg
adc
add
xchg
movsb
xor
cmp
add
inc
push
fsub
jns
sub
or
cmp
or
and
inc
lea
push
nop
mov
xlat
adc
xor
cmp
pushf
and
shl
enter
jo
das
cmp
push
mov
jne
add
adc
fwait
lea
add
mov
jo
testb
call
sub
das
je
add
js
push
mov
ret
add
pushf
adc
adc
mov
pusha
xchg
or
mov
add
add
bound
pusha
les
shll
scas
add
shrb
hlt
mov
mov
popa
sub
or
or
mov
mov
xor
je
out
loopne
nop
subl
scas
jno
add
pushf
and
inc
or
mov
xchg
fcoml
mov
or
loope
inc
fildll
ja
enter
les
inc
sbb
pop
mov
jge
loop
add
xlat
mov
mov
call
fcoms
lods
fsubs
inc
cmp
add
jne
mov
cmp
inc
mov
add
stos
hlt
js
or
cwtl
cmp
inc
fsts
in
or
out
and
out
mov
shlb
xorl
dec
and
xchg
adc
aam
int
mov
mov
ret
and
enter
call
subb
inc
push
aaa
ret
dec
decb
pushf
repnz
fadds
mov
aad
lock
add
mov
xchg
test
push
mov
rclb
or
sub
inc
cmp
rorb
mov
dec
lea
imul
sbb
sub
push
addb
mov
addb
mov
xchg
add
inc
enter
enter
add
lcall
in
fcoml
das
mov
fdiv
mov
inc
aas
subb
or
and
and
mov
cwtl
and
jmp
xchg
mov
cwtl
sbb
movsl
xor
mov
shll
fimuls
xchg
sbb
fsub
push
clc
lahf
lock
sbb
or
dec
test
les
sub
mov
mulb
sbb
movsl
lock
call
sbbl
mov
push
and
mov
mov
cwtl
int
orb
pop
pop
cwtl
test
dec
jno
aas
push
pop
add
mov
add
mov
and
jbe
and
sub
sub
aam
in
cld
jl
aas
push
cwtl
hlt
int
xor
mov
and
popa
mov
repz
leave
pop
cmp
cmp
movsb
pop
dec
adc
push
and
int
or
rcll
repz
mov
fdivs
subl
sub
lcall
lock
adc
jle
movsb
jae
add
or
adc
xchg
pop
jl
xchg
jae
or
pushf
sbb
int3
pop
mov
mov
mov
mov
cmp
clc
xor
stc
mov
into
test
sbb
xchg
mov
jo
push
fcomi
xor
rclb
jl
pop
add
lea
scas
ljmp
das
pop
test
jl
subl
lret
clc
mov
je
js
and
and
mov
push
ss
mov
fwait
mov
adc
cld
fcomps
inc
sub
insb
shlb
pushf
jl
hlt
pusha
push
jbe
add
pushf
into
mov
scas
mov
or
adc
cs
pop
mov
pop
popa
int3
xchg
fiadds
mov
cmp
rcrl
in
in
mov
mov
rol
push
xchg
or
jge
inc
dec
shrb
imul
sub
adc
imull
mov
ret
mov
mov
hlt
xchg
pop
xor
pop
test
mov
test
mov
rorb
add
mov
mov
sahf
and
imul
pop
push
or
movsb
lock
mov
jno
outsl
hlt
test
mov
in
mov
mov
psrld
test
cwtl
push
pop
xchg
insl
dec
jo
and
and
jp
or
pop
add
lods
out
das
je
pop
push
xchg
lods
rcrl
mov
and
test
dec
push
nop
add
push
fsts
adc
push
pop
call
xor
dec
int3
adc
rolb
xchg
std
dec
lods
les
adcl
inc
rcrl
or
or
lahf
adc
lock
in
imul
pushf
push
mov
lock
mov
or
negb
adc
stos
ss
inc
les
clc
mov
cwtl
sub
int3
pop
cmpsb
pusha
sbb
mov
push
les
shrb
ja
aas
add
mov
push
das
cmc
lock
das
cltd
add
les
hlt
popa
pop
movsb
loopne
scas
test
into
imul
sub
loopne
push
jmp
ljmp
and
hlt
jne
add
sub
sub
dec
shl
jns
push
mov
push
add
jmp
push
mov
and
clc
test
pusha
xorl
out
loopne
lea
add
icebp
in
inc
and
enter
clc
lock
sbbl
stc
in
mov
jo
dec
xor
jne
mov
out
iret
lods
enter
inc
add
push
and
cmp
movsb
lret
test
and
or
jmp
mov
push
das
cwtl
movsb
mov
popa
jns
xlat
jmp
enter
add
popf
mov
les
rorb
movsb
pusha
and
xchg
nop
out
jge
mov
adc
in
jmp
xor
ljmp
push
adc
incl
enter
pop
imul
sbb
sbb
or
cmp
js
sbb
imul
adc
dec
and
xor
pop
and
push
cmp
lock
adc
inc
adc
cmp
aas
inc
xchg
lfs
dec
xor
mov
sbb
or
push
push
cli
out
fmull
pop
dec
in
std
ja
mov
rolb
push
scas
sub
movsl
adc
xchg
xlat
sbb
lock
js
push
xor
mov
mov
add
jl
fcoml
daa
jns
lods
xchg
aaa
adc
fdivrp
iret
vpaddw
dec
push
dec
aam
scas
mov
movsb
mov
insl
or
sbb
je
mov
mov
in
movsb
lret
push
outsb
xchg
push
xor
bound
enter
or
add
add
popa
inc
out
jne
xor
fdivl
inc
enter
adc
mov
inc
push
inc
clc
flds
daa
movsb
sbb
scas
test
jge
out
or
fildl
and
nop
sub
push
mov
dec
decl
pop
xchg
adc
jno
or
outsl
hlt
je
sub
orb
leave
jae
nop
imul
sahf
cltd
sbb
test
or
xor
and
push
sarl
cmc
jmp
push
cs
call
cwtl
inc
xorl
adc
dec
cmc
ja
mov
push
or
jl
loopne
mov
and
adc
leave
sub
fs
push
add
push
add
push
push
push
inc
test
pushf
sub
push
mov
push
cs
adc
lret
in
sbb
mov
cmp
cmc
jns
daa
lock
js
or
ret
add
xorb
int3
outsl
and
repnz
lcall
insl
cmp
xor
adc
cmp
enter
fwait
push
das
test
cli
or
pop
nop
xor
mov
adc
hlt
out
dec
xor
adc
mov
add
add
rorb
daa
das
idiv
sub
mov
mov
ret
xchg
loopne
cmp
imul
cmc
out
mov
cmp
mov
push
sbb
cmc
inc
lock
cmp
mov
mov
xorb
test
mov
mov
mov
repnz
mov
shrb
or
xchg
stc
xchg
dec
xchg
mov
mov
int3
add
or
pop
cmp
inc
jge
arpl
insl
scas
xchg
call
cld
adc
js
and
out
popf
dec
xor
adc
gs
push
cmpsb
push
lret
je
jl
addr16
xorb
cmp
adc
push
xchg
fcmovnbe
fdiv
push
xor
neg
fsubl
stos
add
jl
iret
out
jecxz
decb
mov
pop
mov
cwtl
loopne
pop
daa
adc
test
test
sbb
adc
aam
xchg
adc
das
loope
adc
mov
add
std
clc
pusha
ds
mov
dec
dec
mov
mov
add
inc
vblendpd
xor
mov
xor
jg
or
pop
sub
cmpb
xor
test
adc
hlt
js
push
or
sbb
cmp
sbb
sub
jne
imul
xor
sbb
call
and
add
add
bound
iret
pop
sbb
xchg
cmp
in
in
and
pop
dec
cwtl
mov
push
jae
mov
je
adc
pop
lods
rolb
dec
sarb
cli
rorb
push
cmp
imul
push
ret
lock
shrb
lea
shl
jne
test
cltd
or
test
adc
jb
nop
push
cltd
data16
or
add
inc
push
adcl
lea
clc
mov
icebp
pop
push
push
cmp
out
pusha
and
sti
mov
add
sarb
mov
lret
dec
fmul
stos
fwait
pop
lcall
test
cmp
lret
mov
sbb
sbb
shlb
inc
add
jmp
lret
add
jno
push
push
pushf
data16
cwtl
test
aaa
inc
icebp
adc
dec
mov
insb
das
subl
subl
enter
pop
lods
out
imul
pop
and
push
mov
inc
cmp
pop
test
test
movsb
push
add
cmp
or
push
or
mov
adc
add
or
call
xor
jge
fadd
pop
in
fs
or
push
sbb
pop
addb
rolb
push
mov
sub
aam
or
sub
ret
scas
dec
dec
xchg
xchg
sub
mov
enter
movsb
fmuls
mov
push
sahf
mov
test
add
rcrb
negl
and
inc
xchg
push
mov
dec
test
stos
push
test
inc
or
cmp
pop
mov
and
dec
mov
js
sub
repz
add
add
or
inc
xor
sub
testb
lock
push
cmp
inc
jo
xor
and
mov
decb
call
neg
sub
mov
jbe
push
gs
addb
ret
addb
or
mov
push
cmp
cmp
sbb
scas
lock
scas
or
mov
mov
xchg
sub
ret
inc
jge
nop
add
call
nop
mov
push
jmp
or
pop
sti
pop
push
outsl
xorl
adc
movsb
call
jne
cld
inc
pop
and
dec
or
daa
and
call
cmp
cmp
cwtl
aam
aad
and
loop
and
mov
js
jecxz
push
testb
je
sub
inc
js
mov
stos
cmp
xlat
sbbb
pop
or
mov
push
push
cmp
pusha
mov
inc
add
mov
lahf
and
je
xor
outsl
push
fdivrs
cmp
movl
jge
sbb
popf
dec
ljmp
mov
ss
cwtl
mov
std
cmp
faddl
fsubr
jl
idivb
mov
and
or
in
sub
inc
jns
inc
sub
add
out
div
xor
mov
jmp
negl
adc
jb
xor
mov
xorb
sub
in
or
adc
sub
jge
jae
mov
pop
and
rcrb
and
clc
je
call
push
fimull
pop
or
js
or
sbb
pop
pushf
repz
pusha
icebp
cmp
cmp
push
into
loop
inc
fdivs
cmp
jp
push
add
lret
cld
daa
sbb
or
push
imul
fcom
test
or
mov
pusha
dec
add
adc
mov
rorb
sub
jnp
xchg
xchg
or
jno
or
out
mov
ret
push
fsubrl
inc
ja
dec
jl
mov
mov
and
dec
sahf
cmp
or
test
jge
adc
rcr
push
add
inc
mov
xlat
lds
jecxz
js
fwait
mov
or
insb
add
jmp
or
sbb
xchg
push
mov
mov
js
jl
add
xlat
les
lods
xchg
pop
push
adc
int3
daa
mov
dec
pop
mov
sbb
and
xchg
xor
or
jmp
enter
sbbl
roll
add
sarb
nop
es
int3
shlb
dec
test
or
cli
outsb
inc
and
mov
pop
cltd
shrb
jmp
rcrb
add
in
pop
shlb
das
pop
add
or
or
cmp
sbb
aam
loopne
das
cmc
add
xchg
or
xchg
je
and
das
cmp
fimuls
icebp
enter
popa
pop
inc
push
test
mov
and
jp
leave
xlat
out
dec
roll
jl
fucomp
stos
adc
cwtl
pop
loope
jge
adc
subb
pop
hlt
js
push
roll
imul
xchg
rcrb
mov
dec
stos
add
ret
ror
sub
adc
jp
xorb
and
idivb
insl
or
add
and
pop
rcll
mov
push
adc
adcb
addl
adc
xor
cwtl
in
push
or
insb
movsl
xor
or
push
div
adc
xchg
call
or
sub
cmp
popl
subl
mov
out
in
and
add
js
unpcklps
push
out
cltd
push
popa
fdivr
insb
cmp
out
dec
cmp
adc
les
push
stc
push
xor
insl
pop
push
nop
cmpsl
mov
and
sbb
mov
xchg
nop
cmpsl
adc
or
ja
inc
pop
push
cmp
mov
imul
gs
push
bnd
jo
lds
addb
enter
adcb
ljmp
cmp
mulb
sub
mov
add
cmp
add
and
push
mov
shl
and
sbb
packuswb
jae
xor
cmp
mov
in
push
pop
jae
jmp
pop
lods
add
icebp
mov
cltd
jl
mov
pop
lahf
clc
loop
add
pop
in
popf
jmp
das
insl
xchg
xor
adc
lds
daa
cmp
mov
les
lahf
inc
sbb
out
cmp
adc
xchg
xorl
dec
mov
sub
mov
jns
adcl
ljmp
loopne
in
rcl
mov
push
push
mov
pusha
mov
and
fcoml
adc
xchg
mov
mov
dec
push
or
and
or
inc
cld
or
sub
push
push
sarb
insb
test
and
es
nop
inc
sbb
hlt
or
aas
mov
sbb
push
mov
and
push
std
pop
sbb
and
inc
pop
stc
add
jge
mov
push
add
push
mov
mov
fsubrp
int3
push
jns
das
jle
std
cmp
cmpb
mov
data16
sub
sub
jb
shl
into
sub
or
es
jo
xchg
loopne
ja
mov
push
call
aas
mov
hlt
or
imul
sbb
or
subl
fsubs
pop
jne
aad
adc
adc
int3
arpl
jbe
lret
xor
je
push
call
mov
fwait
cltd
push
repz
enter
imul
jno
js
jg
adc
and
inc
das
jmp
push
in
add
insb
or
jmp
je
pop
push
addr16
call
and
pop
xchg
push
test
push
add
jmp
lcall
add
in
jne
shr
lock
jmp
in
jmp
test
adc
adc
mov
and
sbb
push
pusha
inc
outsl
outsl
rorb
push
call
inc
push
fidivs
je
sahf
mov
lods
dec
dec
mov
sbb
and
dec
xchg
push
jmp
aam
adc
test
je
mov
mov
jmp
les
mov
xor
lock
fsubrl
cwtl
lea
dec
in
adc
dec
jae
lods
cld
lock
mov
lea
inc
add
or
cmp
divl
clc
push
or
cmp
or
out
pop
push
push
test
aam
cli
enter
cmpsb
aad
in
sbb
pop
push
hlt
push
mov
cmpsb
fsubs
lods
or
fadds
and
inc
add
movsl
push
and
add
mov
loopne
fisttpl
bound
sbb
xor
inc
mov
push
xchg
lock
pop
pusha
mov
mov
fdivl
cli
and
dec
add
fldt
and
shll
xchg
push
cld
mov
testl
xchg
jmp
cmp
jle
or
ret
mov
lods
lock
push
add
push
push
data16
les
add
mov
cmpsl
popf
loopne
mov
and
push
inc
dec
dec
cmp
add
sarl
mov
insb
subb
rcrl
testb
sub
outsb
jo
lcall
push
mov
lods
mov
mov
imul
dec
xrelease
rcll
jge
add
ja
das
jmp
pop
jl
mov
jbe
or
jo
xchg
add
mov
sbb
or
and
adc
ret
dec
call
js
xor
sbb
cmp
test
loopne
add
daa
scas
lret
nop
lods
into
add
jnp
divb
rclb
mov
cmp
out
test
or
inc
mov
adcl
cwtl
inc
fs
jo
inc
int3
jle
cmp
mov
mov
xchg
lock
xor
cmp
mov
pop
cwtl
clc
loopne
add
jmp
das
or
jl
or
push
lret
stc
std
inc
push
adcl
add
and
push
push
push
add
lahf
xchg
xchg
mov
jb
shl
popl
or
repnz
pop
sbb
sbb
psubsw
fsubr
gs
hlt
aaa
rorb
int3
loop
cld
mov
outsl
call
sbb
mov
cmp
subb
subb
std
dec
mov
adc
and
lret
std
jg
sbb
je
pop
mov
idiv
adc
stos
sahf
fs
push
je
or
pop
insb
xchg
adc
nop
push
jl
loopne
daa
test
fistpl
push
mov
adc
cmp
movntq
addl
and
in
addl
pushf
push
push
pop
jmp
mov
add
iret
xchg
and
mov
aaa
jb
adc
mov
sub
jae
nop
and
xor
call
or
mov
insb
or
mov
in
call
shlb
test
lods
in
mov
jnp
add
xor
mov
stos
mov
stos
cmp
mov
mov
out
xor
scas
mov
mov
movsb
dec
mov
fucomip
jb
inc
cmp
dec
gs
mov
inc
add
in
add
mov
inc
divl
cld
lret
shr
call
pop
lea
mov
inc
aam
shl
mov
jns
clc
cwtl
push
lock
inc
xor
xor
push
in
sub
add
sub
movsl
dec
andb
clc
iret
nop
mov
ja
cld
sbb
mov
cwtl
jbe
sub
pop
jb
mov
test
imul
loopne
cwtl
and
inc
cmp
jl
sub
pop
lock
pop
add
mov
test
pop
mov
subl
hlt
sub
enter
fsubs
or
gs
xbegin
add
xorb
pop
jecxz
loopne
stc
add
pop
or
inc
psubusb
pop
popa
dec
loopne
xchg
cmpsb
mov
adc
out
outsl
fistpl
add
cld
or
cmp
or
outsb
adc
and
xchg
jl
outsl
rcrb
aam
lock
movsl
js
mov
or
jmp
aas
inc
dec
or
insl
pop
xchg
add
mov
cmp
test
mov
mov
mov
dec
gs
cmp
lret
sbb
sbb
stos
sbb
cwtl
popa
sbb
jecxz
sub
packuswb
hlt
inc
cld
call
inc
lea
xchg
mov
repz
dec
adc
or
and
inc
fs
ja
in
and
adc
inc
ret
out
sahf
test
inc
or
or
xchg
fstpl
test
or
fistl
xor
outsb
xchg
shrl
sbb
sub
or
sub
add
and
les
and
inc
clc
mov
imul
or
pusha
insb
mov
bound
loope
pop
pop
push
rorb
or
imull
add
cmpsb
push
add
mov
fadds
cmp
sub
insb
aam
in
mov
in
pop
lea
shrl
add
or
or
xchg
push
fwait
or
inc
cmp
out
push
adc
nop
push
xor
or
lret
cwtl
jns
fstps
test
clc
enter
dec
call
mov
mov
mov
mov
dec
adc
push
mov
or
lea
and
adc
mov
test
bound
add
inc
cmp
pop
push
loopne
push
cwtl
jo
sar
cld
jo
cmp
lock
test
inc
pop
imul
icebp
push
jo
mov
push
sub
inc
cmp
inc
enter
pop
adc
shll
jp
pop
cmp
xlat
or
cwtl
mov
adc
int3
add
cwtl
pop
popa
mov
sub
inc
sub
or
call
jg
mov
or
cmp
cwtl
bound
popa
int3
outsb
dec
adc
xorl
or
and
and
xchg
adc
lods
add
fstpt
cmpb
adc
mov
sub
fcom
push
mov
mov
cmp
ret
filds
jg
adc
clc
sub
rcrb
and
notl
add
add
pop
lahf
push
js
pusha
and
sbb
inc
pop
gs
add
outsb
adc
orl
gs
out
pop
or
mov
lock
cs
and
lea
in
mov
adc
mov
dec
insb
xchg
fs
imul
dec
cli
andl
je
dec
call
out
cwtl
enter
fdivs
or
ljmp
mov
out
pop
sbb
pusha
nop
je
pop
or
dec
xorb
stos
data16
sbb
adc
inc
inc
push
mov
mov
cmp
scas
or
or
cmp
mov
jl
bound
imul
cli
mov
rcll
cmp
outsb
cmp
mov
movsb
sub
dec
fisubs
mov
test
and
mov
add
and
movsb
cwtl
mov
mov
cmp
push
js
jmp
xor
dec
ret
mov
pop
pushf
daa
xlat
sub
enter
cwtl
sub
add
lods
dec
adc
mov
or
arpl
add
mov
lahf
popa
fsubl
adc
hlt
ret
les
sbb
or
sub
cli
scas
add
add
int3
jae
std
je
inc
cmp
pusha
cmp
fcomps
mov
divb
jl
addl
add
mov
rcll
mov
outsl
or
mov
cmc
dec
in
pop
popa
imul
movsl
mov
pusha
dec
xchg
dec
out
add
xchg
fistl
push
lods
dec
and
dec
pop
nop
and
pop
and
clc
pop
pop
or
stos
mulb
cmp
jmp
dec
sbb
mov
pop
mov
mov
imul
inc
add
out
or
xchg
xor
sub
push
cwtl
test
pop
xchg
rcrb
movsl
int3
fiaddl
cwtl
test
inc
xor
jae
add
subl
jmp
push
add
add
imul
sbb
sub
orl
sbbl
nop
sub
and
xlat
div
mov
fcoms
dec
mov
mov
dec
pushf
push
and
mov
xchg
test
push
in
pusha
mov
jne
jb
sub
movsb
adc
jmp
call
inc
or
add
cmp
lea
inc
dec
xor
mov
pop
dec
pop
sbb
in
pushf
adc
dec
mov
inc
mov
shrb
call
xorb
jo
repz
push
cmp
fwait
mov
xor
jae
pop
cmpb
sbb
push
mov
jle
test
sbbl
adcb
mov
xor
divl
xchg
scas
or
cmp
add
sbb
ret
test
push
lahf
cmpsl
mov
xchg
nop
shrl
pop
fldenv
test
add
call
and
imul
mov
or
cmp
popa
mov
inc
cwtl
or
jae
cmp
push
jo
mov
lahf
in
pusha
mov
sar
xor
mov
cmc
inc
andb
inc
mov
xor
pop
shlb
xor
cs
or
sar
mov
lcall
push
call
or
cmp
push
or
jp
push
mov
mov
and
fldl
fcmovnb
test
cmc
or
jge
mov
push
test
sub
add
xor
pusha
adc
sub
in
lock
push
mov
aad
subl
and
rorl
push
in
jl
ret
addb
notb
hlt
mov
xor
inc
das
or
pop
sbb
cmp
add
test
add
push
mov
mov
or
mov
popa
push
out
mov
dec
rorl
pop
mov
cmc
add
push
mov
sbb
push
pop
mov
xchg
jp
pop
mov
sub
cvtdq2ps
mov
jnp
inc
addl
fucomi
mov
pop
push
mov
cld
cmpsb
sbb
mov
adc
cld
sbb
push
imul
xchg
int3
add
das
icebp
cld
das
cld
fcoms
gs
sbb
jns
adc
ret
and
arpl
dec
mov
divb
rclb
adc
xchg
loopne
mov
out
mov
nop
sub
addl
xchg
cmp
and
jnp
rorb
clc
sbb
mov
mov
add
pop
push
push
cwtl
inc
mov
bound
into
add
pop
mov
call
pusha
add
pusha
repnz
sub
pushf
inc
cltd
jne
and
cmp
adc
pop
xor
jge
jecxz
dec
decb
mov
pop
adc
dec
movsb
mov
in
add
aad
insb
or
daa
call
cli
pop
test
loop
pop
rcll
test
mov
or
aam
mov
mov
mov
or
mov
add
mov
cmp
mov
push
sarl
stos
jbe
mov
xchg
fs
pushl
add
mov
lock
lods
cmp
push
je
or
cs
jecxz
mov
add
inc
xor
insl
pop
mov
xchg
cld
mov
in
testl
insb
mov
cmp
adc
dec
or
and
imul
call
cmc
jne
lcall
cwtl
xchg
sbbl
popa
dec
and
fisttpll
cwtl
or
push
xchg
insb
imul
movsb
add
cld
outsl
lock
and
cmp
xchg
int3
push
sub
mov
mov
pop
pop
lock
sub
xchg
add
lock
add
ljmp
std
push
or
mov
mov
cwtl
xchg
out
arpl
mov
jle
add
cmp
mov
add
std
rol
ss
add
adc
outsb
sbb
inc
lods
cli
xor
scas
mov
inc
inc
lods
sub
je
fwait
pop
shll
test
mov
pushf
add
test
mov
outsl
sub
into
das
clc
xor
push
mov
out
pop
pop
into
sub
and
lods
int3
pop
mov
adcl
cmpsb
aaa
scas
adcb
xchg
clc
adc
mov
adc
cmpsl
out
mov
jnp
subb
pop
sbb
or
mov
adc
pop
dec
add
movsb
pushf
pop
mov
sbb
inc
popf
js
and
scas
test
xor
sbb
cwtl
jl
push
dec
sti
mov
or
adc
stos
sub
sub
das
cmpsl
mov
loopne
cld
dec
or
bound
xchg
adc
adc
adc
dec
sbb
mov
int3
scas
add
addr16
push
push
adc
adc
sub
or
mov
arpl
dec
xchg
cmp
mov
adc
jnp
mov
sbb
pop
adc
xchg
or
and
push
and
inc
sub
dec
sti
xchg
or
and
push
add
daa
sub
fildll
fistl
inc
jecxz
push
movsl
sub
mov
mov
mov
ret
push
adc
adc
lahf
or
and
adc
jg
jnp
or
jae
adcl
adc
movups
lret
jo
mov
rorb
stos
adc
sub
mov
adc
and
dec
pop
xchg
adc
cmove
pop
mov
adc
roll
or
mov
adc
lods
xor
or
add
or
cmp
mov
adc
mov
mov
scas
and
dec
cmpsl
xchg
mov
xchg
mov
dec
xchg
jnp
mov
adc
mov
into
int3
sbb
dec
mov
inc
and
dec
cmp
das
sub
pop
adc
and
pop
and
dec
pop
xchg
adc
or
ret
add
jnp
add
das
adc
inc
xor
cmp
cltd
fildll
fistl
mov
ret
or
mov
adc
xchg
lahf
and
and
jl
xchg
fisubl
fs
arpl
adc
xchg
mov
sbb
dec
mov
aas
add
and
inc
pop
sbb
sub
movsl
adc
mov
mov
scas
inc
sub
or
fstl
xor
adc
or
out
jecxz
fbld
dec
xlat
cltd
jns
test
or
dec
jge
dec
adc
inc
adc
into
sbb
es
sbb
xchg
xchg
jg
jnp
mov
inc
push
int3
sub
mov
adc
dec
or
movsl
and
inc
fs
adc
dec
aaa
or
sbb
pop
or
and
dec
or
test
sti
or
div
mov
adc
and
dec
jecxz
daa
shlb
jns
cltd
test
xor
mov
mov
mov
scas
and
adc
fwait
cltd
cmc
cltd
icebp
mov
mov
ficoml
loope
fisttpll
inc
mov
adc
pop
pop
or
push
dec
dec
xchg
dec
and
inc
aas
mov
adc
and
dec
das
xchg
sub
daa
inc
and
mov
adc
and
dec
setno
and
inc
add
sti
add
and
dec
repz
out
and
inc
out
mov
adc
and
dec
rcll
mov
and
dec
mov
enter
cmpsl
mov
adc
adc
mov
xchg
or
jnp
in
and
imul
and
dec
scas
xchg
stos
sub
orb
xchg
inc
rclb
sbbl
ja
jae
pop
xchg
sbb
pop
inc
adc
mov
dec
pop
xchg
add
decl
and
inc
div
mov
adc
and
dec
jecxz
adc
imul
iret
or
xchg
adc
dec
mov
pop
sbbb
fwait
and
mov
xchg
dec
jg
jmp
add
dec
outsl
xchg
imul
or
pop
dec
pop
xchg
push
and
dec
dec
mov
fmuls
pop
adc
inc
or
and
dec
aaa
xchg
xor
pop
inc
sbb
mov
adc
and
dec
test
xor
adc
or
sti
and
testl
and
dec
fists
ror
mov
adc
add
mov
scas
adc
movsb
pop
inc
fwait
adc
xchg
dec
xchg
mov
xchg
mov
ja
jae
outsl
xchg
imul
sarl
dec
pop
xchg
push
and
dec
dec
mov
inc
and
dec
cmp
popf
imul
mov
test
adc
xor
and
jne
sbb
insl
adc
inc
gs
mov
or
push
and
mov
adc
and
call
cmp
or
int3
sbb
or
mov
adc
adc
sub
test
movsb
adc
or
pushf
xor
cwtl
or
mov
test
mov
je
lds
rorl
dec
mov
inc
lods
test
and
dec
cltd
xchg
xchg
and
test
fcoms
jne
mov
imul
push
mov
dec
and
dec
inc
xchg
cmp
xor
and
and
inc
adc
or
pusha
inc
stc
cmc
mov
adc
and
dec
in
loope
fldl
mov
adc
and
dec
lds
mov
lods
and
dec
movsl
xchg
mov
xchg
mov
dec
test
adc
jno
insl
xchg
imul
mov
push
and
dec
dec
xchg
dec
and
inc
cmp
and
dec
sub
inc
and
and
dec
or
add
std
or
stc
and
dec
icebp
xchg
in
and
inc
in
mov
adc
and
dec
rcll
mov
dec
mov
lods
and
popf
adc
xchg
lea
mov
mulb
and
insl
imul
push
and
dec
dec
mov
inc
and
dec
cmp
sub
and
and
and
pop
inc
sub
std
int3
sbb
or
mov
adc
and
dec
in
loope
fldl
mov
adc
and
dec
lds
mov
push
add
bound
xchg
pop
and
push
and
or
sub
xchg
or
and
insw
sub
inc
gs
mov
pop
and
dec
push
cltd
or
xchg
or
xor
cmp
xor
sub
and
inc
adc
or
push
adc
and
inc
icebp
in
mov
adc
and
dec
fstl
rorl
adcb
xor
mov
dec
mov
lods
and
popf
adc
xchg
lea
mov
mulb
and
insl
imul
push
and
or
stc
or
adc
add
cmp
xor
xchg
sub
and
sbb
adc
xchg
or
add
add
and
dec
icebp
xchg
in
and
inc
in
mov
adc
and
dec
rcll
mov
dec
mov
lods
and
popf
adc
xchg
lea
mov
mulb
and
insl
imul
push
and
dec
dec
mov
inc
and
dec
cmp
sub
and
and
inc
or
add
and
inc
icebp
in
mov
adc
and
dec
fstl
ror
mov
adc
and
dec
mov
inc
mov
mov
dec
popf
xchg
cltd
and
mov
test
mov
jge
jns
mov
insl
and
dec
gs
popa
and
pop
push
mov
dec
and
dec
inc
xchg
inc
and
xor
sub
xchg
and
sbb
adc
or
xchg
add
std
add
stc
inc
cmc
icebp
mov
adc
and
dec
loope
frstor
flds
mov
add
adc
adc
add
daa
cld
or
clc
and
inc
icebp
in
mov
adc
and
dec
fcoml
ror
mov
adc
and
dec
mov
std
adc
pop
jmp
roll
and
dec
xchg
add
stos
hlt
dec
add
sub
mov
push
lock
and
pcmpgtd
xorb
xchg
rcr
enter
add
fcmovnb
cs
or
add
xlat
faddp
or
ret
xor
sbb
or
mov
shl
mov
push
js
add
test
clc
mov
lret
add
inc
loopne
mov
cmpsl
jne
fs
mov
add
addb
nop
nop
mov
inc
push
loopne
jno
add
mov
xchg
ret
jmp
imul
lahf
js
movups
mov
pusha
mov
fwait
jmp
ret
mov
jo
mov
call
inc
sbb
and
stc
mov
cmp
test
cmp
ret
call
jae
jge
rclb
jp
enter
cwtl
ja
xchg
rcrb
shll
xchg
and
add
lret
adc
or
or
push
or
mov
push
and
jae
cmpb
add
incb
enter
xchg
in
scas
push
movl
sub
and
loope
nop
nop
stc
sub
mov
nop
add
add
pop
jl
adc
incb
inc
sbb
lcall
mov
lock
adc
clc
cmp
sbb
and
add
xor
mov
sub
cwtl
cmp
call
cwtl
mov
xor
test
mov
cmp
jge
mov
and
xchg
leave
push
cmp
jge
mov
push
inc
subb
test
xor
sbb
mov
xchg
mov
dec
mov
inc
dec
mov
pop
ljmp
cmp
adc
movsl
fmuls
push
mov
sbb
and
mov
xor
mov
bound
push
xchg
mov
push
add
push
test
xchg
cld
loopne
jge
adcb
call
xchg
cmp
fdivl
mov
mov
push
out
xchg
adc
mov
call
or
cwtl
jmp
add
inc
and
xor
sub
add
cmp
jp
push
or
sbb
cwtl
sti
popf
call
or
movb
shlb
sbb
sub
cmp
cmpsb
xor
and
dec
cs
sbb
dec
add
sbb
mov
scas
lea
and
and
xchg
push
push
mov
sti
sbb
call
add
mov
test
jae
js
add
ds
enter
adc
movsb
and
mov
adc
add
pop
push
insb
or
sbb
cwtl
sub
mov
testb
popa
or
dec
sub
clc
mov
add
and
mov
xor
xor
cwtl
xor
imul
xchg
pop
adc
push
mov
or
mov
push
daa
xor
out
stos
inc
loop
xor
and
cli
xor
je
data16
inc
push
and
out
jl
cmp
mov
adc
jnp
pushf
or
or
out
dec
test
and
add
and
stos
lock
dec
std
add
add
and
xor
cli
and
pop
mov
test
sub
lods
scas
call
pushf
adc
sbb
mov
rol
test
cld
mov
adc
rcrb
sbb
je
adc
xchg
push
clc
hlt
push
mov
or
cld
mov
pusha
and
dec
leave
xchg
cmp
aaa
push
push
test
mov
pusha
aas
push
je
dec
jo
lods
nop
push
mov
nop
add
mov
movsb
stc
xor
insb
adc
fstpl
xorb
jo
or
mov
and
or
cmp
adc
call
mov
int3
push
lock
rolb
test
jne
push
sti
adc
mov
lock
je
je
leave
mov
mov
negb
call
loopne
clc
movsl
inc
jns
nop
loopne
cmc
stos
and
jns
or
add
push
cli
sub
out
hlt
cmp
nop
mov
bound
xchg
push
adc
out
inc
insb
orb
jl
or
xchg
std
mov
adc
stc
and
imul
and
leave
and
movsl
mov
add
pop
push
dec
add
or
add
movsb
push
xchg
xor
add
mov
mov
sbb
lods
pop
mov
pop
push
das
hlt
test
aas
mov
pop
loopne
andb
inc
jae
inc
cmp
adc
je
and
adc
es
xor
sub
cs
sub
sub
es
push
clc
das
clc
sbb
xor
push
clc
in
jae,pt
cmp
ds
cmp
or
lock
ds
and
mov
jnp
out
sub
ret
cmp
add
add
mov
or
lea
xor
dec
xchg
adc
mov
fstl
xchg
or
test
addb
dec
fimull
or
cli
clc
push
add
test
in
leave
ret
pop
nop
sbb
xchg
mov
lock
dec
jle
adc
test
mov
call
mov
mov
dec
mov
lret
add
call
test
arpl
shrb
rcrl
and
aas
js
jnp
repnz
cwtl
xor
and
sub
and
test
idivl
add
fiaddl
mov
pop
jns
leave
mov
stos
movsb
and
mov
movsb
fdivrl
mov
hlt
or
xor
call
shlb
and
ljmp
cmp
mul
sbb
mov
push
push
js
mov
mov
hlt
rcrb
les
push
das
or
adc
popa
in
je
cmc
bound
sbb
jg
pusha
inc
call
xor
adc
mov
int3
add
add
add
out
push
cmpsl
fcoml
jl
mov
in
inc
adcl
mov
pop
hlt
shll
xchg
mulb
je
lds
insl
inc
push
jne
sbb
out
and
lods
sbb
call
and
adc
mov
cmpsb
nop
sbb
inc
inc
std
and
mov
ljmp
in
cli
add
std
jo
inc
pop
js
mov
xchg
cwtl
mov
cwtl
repnz
mov
or
cwtl
aad
pop
lret
xor
mulb
call
icebp
lret
repnz
adc
lods
ja
inc
xor
mov
mov
or
andb
xchg
stc
shlb
call
fldenv
or
mov
add
add
ja
fs
xor
adc
push
xchg
sub
adc
pop
sbb
mov
and
sbb
lods
inc
sbb
mov
adc
repnz
adc
xchg
adc
xchg
add
cmp
mov
adc
mov
xor
xchg
sub
adc
fs
and
enter
xchg
or
add
mov
in
xchg
call
ret
in
sbb
or
xchg
lret
inc
lcall
sbb
add
call
mov
pushf
xchg
inc
dec
xor
lock
data16
cmpb
fmuls
cltd
adc
or
sub
or
adc
dec
or
push
xchg
test
mov
in
adc
and
adc
loope
xor
xchg
push
and
jp
mov
enter
out
cld
adc
push
mov
xchg
cmp
dec
xchg
or
js
mov
into
dec
loopne
in
jo
push
jns
and
pop
dec
jbe
lcall
out
pop
add
or
xchg
push
sbb
jns
adc
call
mov
mov
or
add
dec
je
sub
jmp
and
pop
mov
andb
pushf
xchg
scas
and
hlt
adc
adc
dec
xor
or
and
dec
lock
enter
shlb
inc
sahf
mov
pop
dec
inc
xchg
xor
and
fwait
mov
cwtl
dec
pop
test
jb
push
adc
inc
mov
int3
xchg
or
and
mov
sbbl
mov
adc
and
xor
dec
xchg
pop
xor
jl
mov
nop
jo
sub
or
sub
xchg
decb
inc
or
lock
add
xor
les
sbb
sbb
or
dec
dec
pop
sub
or
and
pop
sub
cltd
sub
adc
repnz
fimull
and
dec
pushf
xchg
jle
push
sub
push
add
and
dec
ret
jno
mov
inc
rol
sub
les
int3
dec
inc
mov
enter
stos
adc
andb
retw
sbb
or
stc
xor
push
and
inc
xor
data16
sbb
inc
gs
addr16
jecxz
inc
pop
lock
sub
sub
test
outsb
sbb
push
gs
ror
pusha
or
add
bound
icebp
dec
insl
mov
xchg
and
fidivrs
add
jno
adc
test
adc
clc
fs
and
jae
adc
jecxz
push
mov
sub
ret
imul
and
out
jno
inc
xchg
shlb
adc
sbb
stc
push
jnp
adc
push
mov
pop
popa
jne
push
or
repz
adc
arpl
push
addb
aam
cwtl
dec
aad
outsb
cld
bnd
xchg
xorl
ljmp
add
inc
jb
pusha
gs
cld
inc
add
jecxz
pusha
testb
push
sbb
adcb
push
cmp
jne
push
hlt
sub
fs
push
pop
in
addl
add
mul
jae
pop
mov
or
pusha
insl
sub
ror
add
int3
call
insb
jbe
adc
cmp
push
and
sbb
cmc
js
xchg
jae
hlt
bound
jmp
jo
test
jo
bound
and
xorb
sbb
push
sti
jb
enter
dec
adc
cmp
mov
bound
hlt
loop
push
push
std
out
or
sti
enter
into
andb
push
imul
lock
push
sbb
mov
addb
add
ljmp
and
or
sub
xor
add
cld
push
adc
inc
dec
js
sub
dec
push
test
jne
or
pop
call
les
push
int
je
lret
outsl
popa
daa
push
out
in
mov
dec
add
and
jb
hlt
js
and
mov
int3
sub
outsl
inc
mov
pusha
test
out
dec
jle
shr
mov
inc
push
pop
inc
pusha
pushf
inc
pop
lldt
add
fs
icebp
in
add
xor
dec
mov
cmpsl
and
xor
orb
adc
mov
sub
ljmp
mov
test
sbb
je
fs
and
xlat
je
add
fs
imul
dec
loopne
jmp
sub
xchg
inc
into
lret
jno
adc
and
pushf
test
cmp
mov
lock
dec
stos
lret
xchg
adc
popa
xchg
adc
aam
mov
int3
inc
outsl
hlt
lock
inc
adc
fs
or
repnz
push
pushf
adc
or
repnz
es
imul
lea
sbb
push
fdivl
and
or
clc
fldenv
arpl
outsl
sub
inc
and
mov
jbe
imul
pusha
jo
push
sub
sti
dec
jb
sub
mov
and
add
insb
xchg
je
les
push
pop
jmp
int3
adc
xor
mov
sbb
fcompl
adc
jno
adc
and
push
push
fs
fs
cli
jmp
push
xor
mov
push
call
xor
xchg
mov
adc
push
rcrl
jo
push
jmp
mov
cmp
inc
and
mov
nop
in
hlt
adc
xor
cmp
jmp
or
jmp
add
sbb
push
or
sub
iret
nop
pop
icebp
xor
push
xchg
push
xchg
inc
xchg
es
sub
pop
loopne
loope
mov
mov
lods
dec
dec
sbb
test
fdivl
pop
push
xchg
insb
push
adc
jbe
les
pop
fists
out
inc
sbb
jno
icebp
nop
call
addr16
bound
or
in
rolb
sbb
sbb
xchg
loopne
in
loopne
pop
adc
dec
mov
pusha
adc
sbb
nop
aam
and
leave
push
dec
xchg
pop
fs
adc
icebp
jne
js
loopne
or
ss
and
push
stos
fwait
pop
movsb
add
pop
out
addr16
nop
push
and
lock
and
outsb
cmp
fmuls
shlb
movsb
daa
imul
iret
je
in
cli
es
enter
jp
jo
jl
cltd
int3
xchg
enter
icebp
imul
dec
outsl
and
pusha
xor
loope
ljmp
or
pop
loope
cli
inc
jne
mov
movsb
inc
loopne
in
loope
test
fcoml
mov
xor
nop
lock
and
xchg
inc
adc
sbb
in
sub
pop
cwtl
in
outsb
xchg
adc
push
aam
icebp
mov
in
cli
sbb
adc
adc
lock
fmuls
es
dec
add
xlat
lock
cmpb
adc
inc
outsb
ja
dec
movsb
mov
in
lock
insb
and
sbb
and
outsb
sub
sub
adc
dec
adc
insl
sbbl
outsb
subb
add
adc
dec
arpl
xor
add
imul
out
test
jecxz
add
insb
sub
mov
cwtl
pop
push
and
adc
dec
das
cmp
addr16
fldl
push
jo
ret
sbb
sbb
cmp
fs
jb
adc
jl
sub
and
or
jbe
fs
mov
dec
add
fldenv
and
je
cwtl
dec
repnz
pop
mov
and
xorl
dec
insl
cmp
jl
outsl
add
rolb
jns
popa
icebp
inc
adc
jae
sbb
fiaddl
adc
inc
xor
push
es
shrl
push
hlt
push
pusha
sbb
dec
cmp
pop
xchg
insl
push
adc
js
add
outsb
pop
mulb
adc
adcb
clc
fs
mov
mov
movsb
push
inc
movsb
insl
addr16
add
out
dec
sbb
dec
adc
dec
adc
sub
inc
and
out
mov
nop
pop
jno
inc
push
jo
inc
in
jae
inc
adc
mov
add
insb
andl
xchg
push
add
mull
and
clc
jae
cmc
or
push
js
jo
ret
bound
pop
and
cli
in
cmc
adc
push
mov
sub
cwtl
loopne
movsl
inc
insb
pusha
je
outsb
js
push
lock
push
pop
in
xchg
out
gs
pusha
mov
inc
jecxz
pusha
test
fadds
sub
insb
or
fs
jb
insb
sbbl
in
or
push
add
shll
cmp
mov
aas
and
enter
andl
xchg
test
jb
les
outsl
je
andb
push
movsb
adc
and
movb
icebp
jno
adc
mov
enter
adc
test
sub
icebp
je
inc
push
adc
jbe
in
insb
pop
fsubrs
sub
mov
and
jns
cmp
mov
jbe
hlt
fsts
test
aam
push
push
movsb
dec
inc
mov
push
enter
shlb
aam
sub
aad
arpl
mov
mov
mov
xor
clc
loop
addr16
in
jne
and
xchg
imul
pusha
and
dec
ja
cltd
nop
mulb
inc
mov
dec
adc
addr16
pusha
pop
pusha
adc
enter
or
ljmp
sahf
adc
mov
push
inc
or
xchg
enter
mov
insl
popa
jno
inc
mov
shlb
insb
outsl
es
in
pop
mov
add
inc
add
divb
adc
adc
inc
push
ret
mov
adc
repnz
sub
fadds
iret
orb
xor
adcl
xlat
insl
rcrb
pusha
push
push
jbe
push
cmc
outsl
adcl
dec
mov
test
bound
adc
hlt
cmpsb
aam
loop
loopne
das
stos
adc
sbb
inc
call
pop
repz
mov
add
inc
inc
test
inc
push
subb
in
cld
xorb
fs
adc
lock
bound
into
dec
mov
lcall
in
faddl
inc
fs
lock
add
insl
xor
push
outsb
and
iret
pop
sub
outsl
push
adc
cmp
loop
arpl
sub
sub
in
inc
add
and
testl
and
push
icebp
add
dec
cs
ret
test
icebp
arpl
sub
dec
movsb
out
rcll
test
faddl
jmp
addb
xchg
fmull
pop
jno
add
dec
xor
scas
arpl
xor
mov
repz
sbb
xor
dec
mov
xchg
mov
adc
pop
test
or
add
imul
lock
pop
add
div
outsb
test
dec
dec
inc
xor
pop
cwtl
cmpl
cwtl
mov
clc
gs
pushf
pusha
push
adc
inc
sbb
rorb
insb
movsb
sub
sub
inc
adc
jno
clc
inc
in
pop
imul
jo
dec
icebp
lret
and
mov
mov
cmp
sbb
mov
sub
dec
sbb
and
dec
push
rcll
inc
notb
repz
push
and
insb
push
mov
mov
push
push
xor
push
xor
pop
sbb
in
outsb
jae
cltd
dec
fmull
adc
and
enterw
clc
add
js
andb
clc
push
adc
jae
lock
push
test
shlb
cmpsb
sub
repz
add
xchg
or
addb
repnz
dec
js
inc
dec
pop
outsl
push
stc
out
mov
lock
outsb
xchg
mov
sub
cmp
xor
xlat
jno
ret
pusha
push
cmp
jae
jo
dec
test
subb
push
push
adc
and
adc
lock
out
cwtl
lds
dec
pop
push
out
dec
mov
sub
sub
lods
xchg
sub
enter
movsl
jle
and
movsl
inc
les
dec
mov
dec
pop
gs
js
mov
xchg
cltd
test
add
xchg
and
sbb
adc
jne
sbb
mov
mov
je
enter
shlb
xchg
nop
pop
je
mov
and
mov
dec
test
inc
rcll
sub
mov
scas
pusha
movsb
pusha
ds
and
pusha
ret
dec
sub
add
xor
aam
jno
and
ds
insb
dec
mov
and
fcoms
movsb
aam
rcrl
rolb
dec
dec
and
push
mov
ror
inc
add
fcoml
fs
cwtl
dec
cltd
call
add
ret
outsl
imul
mov
add
scas
test
sbb
ret
dec
dec
shll
jg
test
cmp
rorb
mov
fs
cs
aam
xchg
add
jbe
push
inc
outsl
push
icebp
push
cmp
and
loop
cmp
into
les
xchg
xor
scas
push
and
loop
scas
cmp
xor
ret
cmp
shrl
inc
mov
and
xor
std
das
nop
mov
cli
mov
subb
xor
sbb
jecxz
pushf
pop
repz
lods
pop
add
int3
and
in
movl
or
arpl
sbb
jae
pushf
mov
pop
add
mov
and
in
movl
or
arpl
sbb
jae
sub
xor
icebp
xchg
icebp
dec
icebp
mov
icebp
insb
icebp
ret
icebp
jl
shl
mov
jecxz
pushf
icebp
repz
lods
lock
jl
je
jl
js
jl
jl
jl
jl
jl
jl
pop
or
arpl
sub
sbbl
pop
xchg
pop
dec
pop
mov
pop
insb
pop
ret
pop
jl
rcrl
mov
jecxz
pushf
pop
repz
lods
lsl
lcall
and
fcompl
xor
in
pop
inc
pop
cld
pop
push
pop
or
arpl
sbb
jae
sub
add
xchg
dec
mov
insb
mov
mov
jecxz
pushf
repz
lods
movb
clc
adc
int3
clc
and
fdivr
xor
in
clc
inc
clc
cld
clc
push
clc
or
mov
jae
sub
cmpl
clc
dec
clc
mov
clc
insb
clc
ret
jl
sar
mov
jecxz
pushf
clc
repz
lods
clc
add
cmp
int3
cmp
fdivrl
xor
in
ds
ds
ds
mov
jae
sub
orl
mov
insb
pop
jl
rorl
pushf
repz
lods
addl
mov
jecxz
ret
fsub
xor
in
jecxz
jecxz
jecxz
loopne
shlb
call
mov
dec
clc
mov
clc
js
and
mov
or
fdivs
call
lock
inc
clc
clc
clc
dec
sti
shlb
cmp
cmpl
flds
fs
mov
mov
ret
mul
mov
clc
dec
call
cmp
ds
ds
ds
cltd
cmp
mov
scas
mov
shr
and
add
mov
addr16
jne,pt
sub
cmpl
inc
ds
ds
and
int3
lahf
mov
push
pop
leave
pop
sbbb
pop
xchg
pop
out
and
inc
push
add
insl
jecxz
mov
inc
jecxz
loop
dec
lods
sbb
jl
je
adc
mov
pop
adc
ja,pt
aad
xchg
ds
ds
or
mov
in
aas
psadbw
push
loop
dec
addb
icebp
jo
hlt
icebp
stos
repz
and
jl
sti
loope
icebp
dec
icebp
mov
icebp
insl
icebp
ret
loope
cwtl
clc
in
clc
stos
clc
push
ds
cmp
sarb
ds
ds
ds
ds
cmovbe
fwait
mov
cmpsl
pop
btr
mov
shll
call
fdivr
cmpsl
stc
add
add
mov
xor
mov
outsl
lock
movsb
clc
pop
clc
into
clc
xchg
clc
jmp
xor
mov
push
pushf
repnz
incb
xor
mov
push
xor
lds
xchg
pxor
push
mov
call
ffreep
pusha
xor
aad
mov
mov
push
sub
in
sbb
insl
xchg
rol
mov
cmp
pop
inc
sbb
shll
cmp
sar
icebp
pop
loopne
mov
jge
js
pop
sub
add
xchg
test
mov
or
push
xchg
cmp
jmp
push
jl
mov
inc
shr
rorb
outsb
mov
fst
mov
cmp
cmp
repz
shlb
adc
jge
ds
shrl
je
add
loope
and
insl
mov
test
andl
shll
call
js
je
push
adc
fcompl
pop
xchg
xchg
lret
xor
mov
jo
js,pn
add
mov
xor
je
je
lock
push
cmp
add
cmp
call
mov
je
mov
or
inc
adc
or
push
mov
or
adc
jo
cmp
xchg
cmpb
mov
or
add
test
aaa
je
add
cmp
sbb
bound
sbb
ds
inc
sbb
outsl
xchg
jb
sbb
ret
dec
add
stos
xor
adc
pop
adc
in
cld
mov
push
add
mov
xor
in
loopne
and
es
mov
and
mov
inc
fsubp
scas
rorb
cmp
ret
and
adc
adc
mov
inc
xor
sbb
cmpsb
pop
or
ret
dec
hlt
add
xor
add
xchg
inc
or
aam
lock
push
mov
pop
push
cmp
mov
push
push
pop
ret
pop
jp
ficomps
xchg
pop
repnz
mov
mov
add
lods
mov
lock
or
adc
lock
sbb
dec
xchg
or
lcall
call
mov
xor
mov
cli
cmp
and
xchg
push
fxrstor
mov
fimuls
push
orl
imul
mov
pop
cmp
sbb
scas
cmp
mov
mov
lret
shll
lock
pop
into
or
mov
js
rol
lcall
mov
sarb
mov
xchg
mov
cmp
or
out
push
inc
xor
jecxz
cmpsl
repz
ret
xchg
mov
gs
mov
mov
ss
ja
lock
clc
pop
adc
into
sbb
imul
pop
jns
xor
aad
xchg
andl
rorb
js
je
pop
xchg
cmp
jecxz
movsl
cmp
cs
dec
mov
call
fdivr
jb
cmp
jb
cs
adc
mov
cltd
in
mov
addl
mov
or
lret
jecxz
loop
imul
clc
repz
inc
clc
std
clc
push
clc
pop
ds
gs
jo,pt
es
xor
test
fwait
pop
push
pop
test
pop
pop
mov
insb
jns,pt
iret
mov
call
movsb
xchg
ds
cmp
push
test
rcrl
mov
inc
rorb
mov
inc
adc
addl
push
mov
add
outsb
mov
lock
popa
cltd
rcrb
push
cmp
rdtsc
sbb
clc
jl
jl
pop
pop
mov
sbb
dec
pop
mov
push
xor
jl
je
push
sbb
push
cmp
nop
pop
pop
pop
mov
popf
pop
rdpmc
iret
movl
jge
loope
in
push
xor
inc
inc
movsb
xchg
mov
mov
xor
sti
icebp
jne
cmp
jl
jmp
sub
sbb
push
adc
jle
dec
cmp
mov
test
jno
sar
xchg
clc
call
ds
cmp
cmp
cmova
add
mov
inc
add
adc
clc
clc
lock
push
cmp
mov
setno
mov
cmp
push
mov
ficompl
xlat
add
ds
xchg
shl
and
popa
sbb
cmp
mov
aas
call
clc
mov
add
aas
or
fs
jno
rolb
xor
mov
call
mov
fidivrl
xor
push
clc
popf
mov
sbb
test
clc
dec
and
or
pop
mov
push
push
mov
movsl
sarl
cld
icebp
pop
shrb
mov
test
sarl
sarb
mov
inc
mov
ss
mov
pop
or
pop
mov
int3
cmp
shll
sub
jl
js
dec
fmull
je
mov
or
rorl
icebp
and
fdiv
cs
out
cmp
femms
mov
ja
xor
mov
js
icebp
jno
div
sarl
idivl
dec
invlpg
pop
adc
andl
fucom
xor
or
adc
movd
sub
clc
jecxz
sarb
fs
shlb
sub
mov
jl
dec
lods
sub
adcl
push
xor
mov
call
xchg
lock
xor
mov
mov
mov
jl
add
lods
mov
xor
mov
int3
lock
in
add
add
sbb
pop
xor
daa
mov
loope
shr
icebp
loopne
ss
mov
in
out
sarb
pop
jns
pushf
ret
incb
inc
pusha
cmp
xchg
xlat
shrb
subl
xchg
add
jge
push
cmp
cmp
fnstcw
inc
ud2
mov
push
jp
cmp
ds
movsb
daa
sub
mov
loope
shl
lret
add
and
shlb
js
je
push
sysexit
aam
das
pop
clc
push
jb
xor
ss
xchg
pop
mov
mov
or
aaa
dec
cmp
push
andb
ret
mov
test
popf
cmp
add
sarl
mov
mov
xor
mov
xor
mov
cmp
xor
push
jnp
sbb
jbe
in
cmp
rdtsc
aaa
in
mov
nop
inc
in
test
icebp
cmp
sbb
fs
push
mov
cmc
adc
mov
xor
mov
movsb
pop
in
sub
inc
enter
mov
sahf
mov
rol
dec
jp
mov
and
inc
insb
inc
movl
call
sahf
clc
arpl
mov
adc
sbb
ret
pushf
add
js
js
jl
jl
pop
add
sbb
js
cmp
add
inc
mov
ss
je
jge
js
js
adc
aaa
dec
addl
scas
ret
imul
iret
mov
notl
scas
addl
out
or
jno
cs
icebp
cmp
xor
ss
mov
js
pop
pop
mov
test
ljmp
sub
jl
je
dec
xor
and
jnp
sti
push
jl
and
shll
mov
xor
sub
dec
mov
push
inc
popf
ror
insb
xor
mov
cmp
add
mov
fldl
xor
fsubl
add
mov
rcll
addb
sbb
dec
mov
nop
and
int3
inc
pop
ds
push
xor
mov
and
ffreep
jmp
inc
rorl
push
cmc
push
loope
icebp
jae
and
clc
ljmp
push
call
push
push
sub
test
lcall
test
insl
loopne,pt
test
mov
add
ret
shl
mov
fucom
lcall
aaa
and
mov
fstpt
add
cmp
mov
ljmp
js
dec
addl
hlt
add
mov
cmpsl
mov
add
dec
clc
and
inc
adc
sbb
rolb
pop
loopne
ret
clc
jns
inc
push
mov
xor
lahf
xor
in
nop
nop
add
mov
orb
cmp
mov
inc
sub
cli
xchg
cmpsl
test
mov
jbe
lret
clc
cmp
clc
mov
and
and
xor
xor
cmp
adc
jae
xor
xchg
cltd
loopne
icebp
je
shrl
ds
adc
aam
xor
add
push
pop
cld
pop
jg
insb
add
add
xor
bound
xor
xor
add
add
jb
gs
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
popa
jb
popa
jb
gs
jne
inc
jb
insl
push
je
add
push
popa
jb
outsl
jb
popa
je
add
lods
xchg
add
xchg
add
and
add
add
add
add
add
xchg
add
add
movsb
xchg
add
add
add
add
cmp
add
fiaddl
add
add
add
clc
xchg
add
xchg
add
xchg
add
add
add
push
jb
arpl
fs
jae
add
push
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
add
add
cmp
inc
gs
gs
popa
addr16
add
outsb
jae
popa
je
dec
gs
popa
add
mov
jo
je
push
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
lret
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
add
add
sbbb
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
add
add
nop
add
push
add
adc
add
add
incl
add
add
add
add
add
add
add
add
outsl
add
add
add
add
insb
add
add
add
add
add
push
add
add
inc
add
add
add
add
jne
bound
insl
add
je
add
dec
add
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
