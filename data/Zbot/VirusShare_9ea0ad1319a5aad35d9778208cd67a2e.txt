ficompl
bound
clc
out
add
pop
leave
ret
pop
leave
ret
inc
add
add
and
xor
sub
or
fucomp
faddl
ss
ret
or
pop
pop
add
mov
ret
adc
or
add
or
imul
call
and
sbb
mov
adc
cmp
add
adc
mov
pop
pop
fldcw
cmp
adc
add
adc
popa
int
imul
and
add
adc
lods
mov
pop
cmp
adc
sbb
adc
fisubrs
dec
xchg
mov
and
or
push
inc
adc
in
mov
cwtl
dec
sub
fs
dec
inc
xor
jbe
insb
push
mov
or
roll
adc
adc
mov
and
add
inc
add
mov
cwtl
rolb
jp
adcb
lods
cmp
cmpsb
xchg
insb
andl
pop
adc
pop
xor
dec
fistpl
imul
sub
stos
test
dec
adc
sub
or
and
mov
insl
xor
add
pusha
popa
push
mov
mov
sub
lcall
cmp
mov
test
push
in
add
adc
mov
decl
add
or
jl
incl
and
adc
and
orb
mov
std
and
inc
dec
mov
inc
inc
push
adc
and
add
mov
nop
add
cmp
test
fistpl
inc
mov
and
add
pop
mov
sbb
mov
adc
adcb
inc
mov
mov
cs
pop
nop
lock
adc
sub
or
adc
dec
add
inc
or
xor
mov
xchg
test
data16
adc
add
adc
cmp
imulb
dec
inc
inc
inc
add
dec
adc
sbb
pop
adc
nop
cwtl
out
sub
add
xchg
cltd
or
bnd
push
insb
es
or
inc
push
and
add
push
add
push
roll
dec
ss
add
push
pusha
cs
aam
xor
js
data16
es
sbb
shlb
adc
xor
xchg
bound
mov
inc
je
sub
mov
xchg
inc
xchg
push
or
fimull
ret
sub
xor
bound
and
jl
inc
push
pusha
data16
or
add
mov
inc
in
nop
int
in
out
nop
test
mov
nop
push
pop
adc
push
inc
and
sub
or
xchg
fcmovb
sub
xor
inc
test
mov
xchg
pop
mov
cmp
je
and
lods
cli
nop
push
xor
lods
or
or
js
loopne
push
mov
and
loop
test
test
xor
movsb
and
mov
mov
adc
adcl
ljmp
insb
mov
andb
pop
cmp
shlb
fsubrs
mov
rclb
out
inc
or
and
loopne
mov
cld
inc
push
ds
jno
stos
fs
or
add
test
dec
xchg
and
pop
sub
sbb
or
sub
adc
add
in
push
jbe
sub
and
pop
js
cltd
sarb
or
lcall
xchg
loopne
push
ss
orb
adc
pop
cwtl
cmp
data16
pushf
push
dec
in
cmp
lock
and
pop
int
jno
lods
orb
nop
xchg
adc
data16
out
mov
lcall
mov
cmpl
and
and
pop
mov
adc
cwtl
pop
and
int3
sahf
adc
and
inc
out
mov
lcall
test
and
fimull
shlb
and
mov
addl
fsub
jo
xor
lods
add
inc
dec
stos
and
je
mov
sarb
lret
push
mov
roll
into
cmp
xor
adc
cs
adc
jno
xchg
pop
in
and
sbb
int3
and
nop
and
jmp
xor
push
mov
push
andb
in
add
xor
les
mov
mov
test
adc
xchg
outsb
mov
adc
push
es
push
sub
jp
push
lret
loopne
pushf
or
mov
insb
in
mov
jecxz
push
add
xacquire
les
push
inc
adc
inc
loopne
pop
lods
sbbl
lret
push
lret
push
adc
sbb
adc
cmpsb
sbb
dec
jo
or
jb
out
bound
push
scas
test
xor
inc
mov
clc
lods
mov
jp
pop
and
adc
jbe
test
inc
pop
mov
xchg
sahf
rclb
fdivrs
jno
pushf
push
push
dec
jo
popa
xchg
fld1
inc
cmp
mov
sub
rorb
orl
or
xor
ret
das
insl
test
rolb
addl
xor
sub
flds
daa
es
xor
push
pop
xor
nop
dec
bound
xchg
inc
adc
scas
adc
shlb
inc
sub
scas
push
cmp
add
loopne
mov
push
mov
sbb
xor
test
and
and
and
sti
cmp
fmuls
es
dec
inc
inc
ret
mov
bound
xchg
lods
pop
mov
push
jbe
bound
mov
cmpb
dec
sbb
cwtl
add
nop
fisubs
xchg
addb
lcall
or
test
pusha
cmp
mov
push
scas
dec
jb
nop
xchg
push
mov
addb
sbb
xor
inc
adc
mov
jno
sbb
or
lret
cmp
pusha
cwtl
inc
stos
inc
pop
mov
dec
movsb
xor
adc
add
mov
call
jp
stos
jp
addr16
xor
rolb
in
shl
sbbb
cmp
je
cmp
fldenv
mov
mov
jp
and
pusha
mov
pushf
ret
cmp
rorl
mov
and
xchg
xor
jp
inc
out
mov
adc
and
or
idivb
scas
enter
add
out
push
jo
mov
xor
stos
add
bound
mov
pop
mov
xorb
add
stos
xchg
jb
jo
lds
push
repnz
inc
nop
test
sbb
mov
call
mov
ret
xchg
jl
js
loope
jmp
cmpsb
mov
sahf
dec
out
les
mov
push
jbe
and
mov
je
pop
mov
or
mulb
jl
inc
cmp
jl
flds
or
cwtl
push
pusha
mov
xor
push
js
bound
cwtl
push
lods
dec
pushf
mov
sbb
nop
mov
push
stos
and
stos
dec
mov
mov
mov
mov
and
dec
and
inc
add
in
ret
sub
push
mov
push
stos
cmpl
mov
sub
das
xor
cmp
popf
add
adc
and
rclb
fld1
inc
lcall
mov
and
push
sbb
push
mov
lret
sub
xor
cmp
xchg
mov
addb
jbe
adc
jae
push
mov
add
xchg
mov
loop
into
int
popa
orb
js
es
xor
pusha
clc
js
and
xor
mov
push
mov
sub
shr
adc
test
scas
mov
enter
or
mov
js
and
push
inc
cmpsb
bound
push
mov
pushf
int3
dec
mov
cmpsb
out
nop
adc
xchg
inc
mov
pop
sub
mov
inc
xchg
pushf
loopne,pt
cs
in
js
xlat
pushf
js
sbb
andb
adc
nop
or
lret
xchg
adc
jp
adc
jae
pusha
sbb
xchg
pop
and
mov
xor
pushf
sbb
jmp
push
add
jo
push
rolb
adc
pushw
ror
or
loopne
mov
ret
adc
cmpsb
inc
fimuls
inc
add
mov
sahf
cli
jne
orl
pusha
pusha
rcr
adc
mov
sbb
xor
mov
fsts
into
cld
lock
adc
mov
cli
push
cld
js
adc
push
out
inc
or
rorl
mov
ret
stos
or
nop
pusha
mov
adc
push
out
popf
scas
add
cwtl
cltd
pushf
push
sbb
pop
test
lcall
jp
ret
and
call
pop
adc
inc
cli
addl
cmp
or
push
ret
fxch
int3
jo
mov
cmp
shlb
fcoml
cmpsb
sbb
mov
jle
push
and
xchg
and
adc
rorb
add
xchg
xchg
jo
int3
add
and
jl
add
cmc
xchg
sub
ljmp
loopne
xor
and
mov
or
lock
test
rcrl
mov
mov
or
mov
mov
enter
cmp
pusha
jl
cli
rcrb
cmp
xor
push
roll
mov
mov
or
xchg
add
movl
decl
inc
mov
dec
mov
mov
fmuls
pop
loopne
clc
data16
sub
xor
mov
jge
jne
mov
ss
mov
sarl
fst
not
mov
add
enter
std
ljmp
cmp
add
sbb
jbe
xchg
cmp
jne
cmp
testl
jge
adc
lods
push
clc
or
inc
inc
and
sbb
jbe
pop
jo
rorb
outsb
add
loopne
dec
adcb
add
mov
int
in
cmovo
js
sbb
hlt
or
hlt
xor
mov
shr
stos
jne
dec
sahf
neg
rorl
roll
add
jne
sbb
fimuls
call
pop
fistps
mov
jb
xor
mov
ret
or
mov
insb
jg
add
fsts
stos
rcll
adc
mov
fsub
push
sub
ret
xchg
cld
and
test
stc
lds
test
or
or
adc
lds
in
sub
addb
mov
adc
add
sbb
cmp
js
jge
push
or
in
clc
xor
movsb
and
sub
xlat
add
movswl
into
push
jge
inc
adc
pusha
jg
adc
mov
xchg
sarl
cltd
inc
enter
mov
aas
mov
sbb
in
and
js
adc
pop
not
add
mov
clc
popa
mov
add
jp
pop
divl
add
xlat
cmp
clc
mov
loopne
out
cmp
sbb
jl
loope
ja
push
in
xchg
push
sbb
sub
movl
add
inc
or
mov
xchg
popl
pop
push
cli
push
lahf
aas
pop
fadds
into
mov
adc
cmp
pusha
dec
daa
test
jae
popa
mov
sub
xor
lret
xchg
mov
dec
cmp
sbb
not
neg
jo
int
cmp
cmp
fildll
lea
xchg
cs
popf
stc
pop
sarl
add
insl
sub
sub
in
pusha
in
pop
and
aas
je
xor
cmp
sbb
cli
div
mov
sub
mov
dec
adc
or
pusha
inc
ja
sbb
adc
mov
pusha
push
pop
loope
add
jo
lods
imull
add
inc
dec
add
ds
das
mov
xchg
pushf
xchg
sub
mov
sub
jl
cmp
sti
in
leave
aad
add
daa
fdivrs
sub
cmp
test
clc
das
js
sub
clc
jmp
test
jbe
ja
pop
cld
fs
jmp
test
jae
out
adc
andl
das
mov
add
out
dec
jmp
dec
sub
or
xor
fcomps
sub
adcb
or
fadds
js
add
and
add
push
clc
add
pushl
lea
push
add
add
loop
rcrb
enter
je
add
inc
pop
adc
rcll
aas
data16
dec
rorl
sbb
fnstenv
repz
mov
in
adc
mov
adc
mov
movsl
scas
sub
push
das
leave
ret
xor
sub
inc
fistl
add
mov
mov
sbb
sbb
and
xchg
and
outsl
stos
cld
cmp
int
add
mov
sub
pusha
pop
icebp
stos
xor
sbb
roll
push
fcmovb
cltd
ficoml
ljmp
sbb
or
icebp
cmpl
pop
push
dec
push
xor
int3
xchg
adc
push
fisubrl
ja
push
sbb
pushf
jl
rcrl
sub
pop
nop
push
into
cmp
ret
jge
sub
sbb
addb
push
jbe
pop
sub
adc
xor
test
sub
clc
cld
add
lcall
idivb
ljmp
mov
adc
sbb
lock
mov
add
sbb
adc
popa
push
pusha
jle
add
pop
lock
xor
stos
add
mov
pop
mov
adc
scas
pusha
aam
xlat
ja
rcl
adc
sahf
and
jmp
push
lock
int3
lds
rcl
addl
lock
test
jle
sub
stos
mov
addl
test
ret
add
add
rorl
mov
repz
mov
shlb
ds
jne
sbb
repz
fdiv
dec
and
int3
and
clc
and
int3
jge
cmp
jb
mov
mov
inc
push
pop
rcl
scas
insb
sub
cwtl
mov
enter
sbb
adc
pop
lcall
divl
jno
aas
cmp
mov
jle
inc
inc
push
loope
ss
xor
adc
shlb
int3
add
in
mov
inc
jne
cmp
data16
add
stos
scas
inc
dec
hlt
push
push
hlt
push
call
scas
lock
popf
into
maxps
pop
add
adc
push
imul
loopne
clc
xor
and
xor
lods
and
jl
notb
inc
not
mov
movsb
lret
out
add
push
xor
js
cmp
lods
jno
adc
les
or
sub
insb
push
pop
lods
adc
add
add
and
xchg
and
push
mov
mov
or
addr16
lock
adc
stc
push
rorl
adc
jmp
and
shll
stc
mov
cs
lock
rolb
int
adc
or
rcrl
lock
out
lret
add
cmp
xor
mov
lods
cwtl
add
xchg
add
insl
dec
push
sub
mov
xchg
cs
inc
in
push
icebp
popf
jge
loopne
loop
jno
sti
jecxz
wrmsr
js
fcomps
aas
stos
cmp
mov
pop
inc
pop
xor
mov
or
rclb
xor
mov
mov
or
addb
xorb
lock
adc
pop
out
jbe
lea
add
gs
cs
icebp
pop
imul
pop
or
pop
xchg
rorl
or
ret
mov
push
aaa
jae
or
dec
push
das
cmp
clc
hlt
test
out
sub
sbb
cmpsb
and
fildl
cmp
fiadds
adc
mov
call
in
out
adc
push
and
or
aas
fimull
xlat
imul
repz
call
pop
lret
fsubs
jmp
xchg
les
test
mov
add
add
das
mov
pop
call
mov
xorl
ss
adc
sarb
jnp
mov
int3
add
das
ljmp
clc
sbb
fsub
out
push
fs
cmpsl
sub
repz
and
mov
lock
inc
push
mov
and
decb
loope
std
adc
repz
fcomip
inc
addb
jbe
rdtsc
inc
mov
add
loope
mov
dec
jg
idivb
and
addl
lock
flds
mov
sub
sbb
cs
cld
ljmp
data16
xor
sar
testl
dec
cmp
dec
add
inc
push
push
inc
aam
clc
mov
jbe
add
add
roll
xor
mov
outsl
xor
inc
cwtl
outsl
mov
idivb
pop
dec
cmp
add
mov
adc
mov
lcall
ficompl
dec
rorb
push
mov
push
sbb
xor
pop
inc
decl
mov
popf
xchg
ficompl
or
scas
mov
mov
jecxz
jmp
pop
xchg
mov
fmull
and
adc
cmp
jno
adc
and
fadds
ss
outsl
mov
jp
and
add
inc
xor
ljmp
sbbl
jne
dec
sbb
sahf
mov
out
mov
in
je
add
cwtl
in
adc
js
jbe
jae
sbb
jae
sub
fcoml
mov
sbb
add
mul
push
aaa
push
in
fdivrl
nop
mov
mov
cli
dec
movsb
mov
xor
in
push
push
sub
mov
enter
cmpl
call
cld
cmpsb
js
inc
jbe
in
sbbb
push
sbb
lock
cmp
xor
scas
mov
fwait
in
or
add
fxam
insl
movl
add
pop
dec
mov
mov
mov
imul
lds
out
je
mov
push
test
dec
mov
mov
adc
inc
hlt
pushf
out
call
add
mov
insb
daa
cwtl
push
adc
loop
fisubrl
mov
push
iret
cmpsb
loope
jb
push
call
out
les
loopne
and
mov
in
mov
jo
dec
cld
shll
xlat
jo
cmp
pop
mov
out
cmp
roll
xchg
add
shrb
xorb
xchg
div
mov
rol
scas
faddl
stos
and
stc
fsub
xchg
add
sbb
iret
lcall
out
add
cwtl
ret
in
adcl
fs
cli
dec
int3
test
fnstsw
int
push
mov
lock
dec
test
push
mov
sbb
paddq
out
xor
shll
add
sub
mulb
js
jae
sarl
pop
add
and
movsl
sbb
clc
cmp
add
rcll
ljmp
cmp
sbb
xor
push
xchg
push
jae
and
pop
jbe
loope
lods
fwait
in
add
or
loop
adc
xchg
adc
xchg
jo
sete
testl
pop
pop
add
js
aam
andb
out
xor
clc
sub
add
cmp
push
int
add
mov
movsb
ret
mov
imul
mov
sbbl
repnz
aad
loope
aam
cmp
dec
mov
in
inc
fsubs
xor
enter
fmul
scas
or
mov
cmp
push
and
cmp
mov
js
sub
cmp
bswap
dec
sbb
fcomip
jno
xchg
and
pop
mov
lret
sbb
jg
ds
dec
inc
sarb
inc
jp
movsb
or
fdivs
and
ret
jg
rcl
imul
and
adc
jl
pop
fsubrs
dec
mov
gs
dec
dec
mov
inc
aas
push
dec
jb
test
je
cltd
fs
push
or
cld
push
or
clc
loopne
mov
call
xlat
call
inc
sti
push
sub
sub
jmp
cmpsl
cmp
std
loopne
add
sub
shlb
shl
dec
add
pop
shrl
push
addr16
data16
int3
add
jmp
push
test
cs
cmp
mov
sarl
dec
xor
js
mov
inc
loopne
add
jp
aas
mov
shrl
inc
outsb
pushf
sahf
jmp
arpl
mov
pop
and
adc
cld
fwait
lcall
adcb
or
fucomip
rorb
test
inc
sbb
js
imul
pop
ljmp
jnp
inc
inc
sub
ret
in
add
pop
pop
out
out
fdivrl
jge
mov
sbb
sbb
call
inc
or
shll
jnp
or
testl
out
pop
cmp
sub
push
das
adc
jae
test
push
jl
xor
sbb
lret
outsl
pop
mov
iret
sbb
repz
repnz
ss
xlat
add
subb
ljmp
test
add
aam
subl
dec
lock
add
cltd
out
fwait
aaa
cmp
adc
add
in
jno
jl
pop
or
es
push
fisubl
inc
testb
and
adc
adc
cmp
fmul
stos
and
inc
and
adc
fldl
icebp
or
push
pop
sub
or
add
dec
inc
cmpsb
mov
add
int3
fdiv
and
jmp
adc
mov
and
inc
mov
fsubs
je
sbb
add
jbe
sub
shrb
aas
movsb
add
mov
add
fdivl
mov
xor
inc
test
mov
fsubl
enter
add
subb
shrb
movsl
pusha
adc
add
push
add
dec
dec
movsb
pop
es
fidivs
pushf
popa
pop
sub
test
filds
push
fiaddl
pop
fwait
or
fcmove
je
push
out
out
ja
loope
xadd
add
add
sub
lock
lods
das
mov
pop
aas
movsl
inc
inc
mov
jmp
into
adc
je
dec
jg
scas
dec
movsl
negl
jmp
xor
loop
or
mov
fmull
int3
dec
int3
data16
add
ljmp
pop
add
fstl
sbb
das
repnz
test
jbe
loop
jb
shll
pusha
adc
sub
shll
sbb
rol
lock
pop
jmp
test
ja
fs
jno
mov
dec
clc
inc
int3
mov
aam
sbb
xor
pop
std
test
xor
dec
push
out
leave
sub
cmpsl
lds
in
sahf
jo
shr
jle
push
push
jne
rolb
jmp
xadd
add
push
loope
stos
cmc
test
lea
push
push
ficoms
mov
jge
push
push
mov
andl
add
sahf
fdivl
jb
inc
repz
push
fnstenv
ret
clc
add
push
or
aad
pop
lods
mov
cmp
mov
scas
rcrl
pop
add
or
das
repz
rorl
dec
shll
xlat
adc
shll
mov
sti
sar
sub
fiadds
lock
mov
pop
ret
sub
add
xor
xor
fwait
inc
sub
icebp
rcll
call
sub
pop
negl
dec
and
das
das
jo
push
je
jmp
arpl
jmp
dec
rol
scas
hlt
insb
test
add
shll
add
push
mov
push
lgs
sbb
fstenv
daa
ljmp
sbb
aaa
push
adc
jge
addb
xor
hlt
mov
push
pop
mov
jbe
loope
aas
jns
filds
js
or
xor
adc
dec
clc
add
fimuls
sti
fadd
subl
out
shll
movsb
or
mov
pop
pop
cltd
pop
int3
ljmp
outsl
nop
out
dec
add
out
xchg
cmc
hlt
into
xchg
adc
xchg
mov
sti
es
call
call
call
mov
push
cmp
int3
stos
mov
jo
jecxz
mov
sub
jno
lds
imul
sub
sbb
and
movsb
pop
pop
js
cli
out
rorl
insl
loope
lods
sbb
call
add
fmul
dec
adc
aaa
fdivrl
push
divl
aaa
ret
mov
add
pop
or
insl
add
into
out
ja
scas
and
xor
jge
jmp
push
loopne
mov
nop
rolb
inc
stc
pop
jecxz
and
js
dec
push
rolb
xor
clc
lcall
lcall
jecxz
jno
repz
lock
pop
jmp
paddusb
sbb
clc
and
subb
mov
add
push
fs
pop
adc
hlt
and
out
fsubs
lods
loopne
and
std
mov
nop
sti
insl
or
dec
xlat
push
outsb
add
out
and
popf
mov
jne
lcall
aam
scas
aam
int3
movsl
push
mov
mov
je
or
sbb
pop
xchg
xchg
mov
xor
push
mov
adc
fimull
dec
fistps
jo
outsl
mov
cmp
aam
lahf
not
insb
faddl
loop
add
or
inc
movsb
mov
add
push
mov
daa
lock
push
push
lods
lcall
mov
sub
cmpsl
jecxz
rolb
push
test
ljmp
xchg
shlb
ficomps
loop
add
xorl
sti
push
jmp
mov
lock
and
pop
sbb
mov
add
add
repnz
popl
mov
pop
mov
adc
inc
stos
push
and
push
fstl
sbb
daa
add
and
orb
sarl
insb
or
rcr
scas
fldt
pusha
neg
fwait
push
sub
sarb
es
mov
jo
xchg
xor
jl
pop
movsb
push
push
lods
add
aas
faddp
adcl
mov
repz
gs
shrb
loopne
aam
mov
dec
pop
icebp
jo
push
fmuls
jle
mov
add
add
sbb
lods
mov
jp
mov
daa
loope
cs
pusha
test
adc
and
loopne
ret
or
mull
test
dec
cmp
lods
repz
xlat
xlat
xor
jo
shl
add
xchg
movhps
lock
adc
add
loop
ja
cmp
rcr
or
aad
xor
xor
lds
je
cld
test
rcrl
pop
cld
int3
xrelease
mov
popa
mov
sbb
out
jno,pt
adc
mov
ficomps
cld
andl
fistpll
dec
and
jbe
cltd
shlb
cmp
ljmp
mov
or
dec
andl
dec
pop
test
adc
loopne
int3
mov
xor
shl
ljmp
push
lahf
mov
and
push
pop
arpl
inc
jne
and
sub
push
sbb
cmpsl
push
sbb
push
xchg
repz
les
mov
adc
out
cmpsb
out
mov
add
ja
jae
mov
pop
aad
stc
cli
ja
cmp
inc
xchg
mov
cmc
and
sbb
adc
fldl
add
inc
gs
or
xor
popa
cmp
enter
lret
add
push
out
sti
out
pop
insb
fisubl
add
sub
jne
jns
inc
test
inc
adc
pop
arpl
push
push
scas
add
enter
pop
popa
xor
push
mov
cs
fstps
adc
ret
enter
popf
and
loopne
or
jp
push
mov
jnp
test
aaa
sahf
popa
mov
sti
out
clc
test
pop
pop
xor
cmpsl
loopne
das
loopne
add
fbstp
outsb
mov
mov
add
or
in
mov
icebp
sbb
and
xchg
push
rolb
mov
add
dec
xchg
cmc
adc
mov
inc
loopne
xchg
pop
movsb
test
jno
dec
pop
lock
ss
jl
adc
scas
jb
xchg
sub
dec
add
inc
out
push
stos
ret
xchg
lcall
push
call
sbb
mov
cs
and
dec
jecxz
xor
jl
push
ds
adc
push
int
ja
push
cwtl
add
xchg
inc
movsl
inc
loope
mov
test
loop
or
addr16
or
mov
cmpsb
mov
daa
test
jno
pop
imul
dec
je
jbe
pop
sub
push
mov
fistpl
sbb
push
and
imul
cli
adcb
dec
outsl
stc
inc
and
out
lds
loope
addl
ss
aam
outsb
fadd
cmp
aam
and
inc
jl
xor
xchg
adcl
adc
push
jecxz
clc
ja
xchg
leave
push
add
arpl
mov
jo
insb
mov
adc
aaa
push
rorb
in
cld
pop
or
add
roll
popa
ret
outsb
pop
push
int
inc
pop
mov
add
bound
sbb
cmp
jno
inc
js
or
inc
test
in
les
loop
popa
xlat
jecxz
adc
inc
and
adc
rolb
adc
mov
int3
adc
pop
pop
sub
insb
mov
add
test
jle
xchg
inc
les
fiaddl
mov
add
cmp
je
ja
andb
test
pop
loope
in
mov
jecxz
add
loopne
xchg
inc
sbb
mov
add
clc
pop
xorb
jecxz
mov
pop
call
std
pusha
mov
sbbb
incb
push
outsb
fdivl
and
and
lahf
jle
insl
leave
push
arpl
shr
fdivrl
inc
pop
pop
sub
add
sbbb
cld
lds
inc
rol
add
push
ja
mov
jmp
fcoml
out
lret
or
mov
jmp
icebp
cld
and
mov
bound
dec
cld
push
shl
push
fcoml
test
xor
aaa
push
scas
or
out
or
sub
cmc
pop
aaa
lock
sbb
or
pop
inc
lds
adc
adc
lock
add
lea
inc
sub
ja
add
xchg
pop
cmpsl
xchg
cltd
in
inc
pusha
call
add
add
sar
dec
add
into
jmp
push
clc
and
cmp
ret
nop
cmpsl
inc
xchg
fadds
jg
push
icebp
mov
and
sbb
jmp
shlb
or
loope
in
popa
movsb
sbb
inc
in
jo
pop
push
data16
push
push
mov
inc
cmp
js
sbb
mov
cltd
fs
adc
loopne
xchg
and
loope
fiaddl
xchg
mov
scas
xor
icebp
lahf
outsl
inc
xchg
inc
mov
push
or
add
cli
mov
or
add
push
faddl
push
cmp
les
and
jnp
lods
or
daa
sarb
jl
xchg
cmp
dec
jns
mov
inc
inc
sub
clc
jo
js
rolb
lds
loope
mov
adc
std
sbb
out
shll
push
sub
push
outsl
inc
mov
std
or
inc
and
inc
add
fcmovbe
roll
mov
leave
cs
or
subb
add
push
cli
jp
xchg
dec
add
scas
adc
mov
inc
xchg
xor
inc
or
in
pushf
out
loope
cmp
mov
lods
and
dec
mov
dec
cld
imul
and
stos
sbb
dec
or
jbe
xchg
dec
mov
inc
cwtl
pop
hlt
mov
bound
dec
jo
add
jo
xchg
jae
jge
loopne
int
sub
xchg
fbstp
add
jo
int
add
orl
adc
call
clc
stos
sti
out
inc
imul
jmp
jecxz
sahf
dec
jo
sub
sbbl
mov
push
cli
or
push
push
fisubs
loop
call
clc
push
rorl
sbb
jns
or
inc
rorb
stos
cvtps2pi
fiadds
movsb
lahf
dec
popf
shlb
mov
sbb
ret
dec
xchg
scas
int3
ljmpw
lcall
aam
xor
pop
adc
stos
cmpsl
xchg
and
adc
bound
or
fmull
pop
sub
out
sub
test
xchg
js
lret
loope
inc
scas
int
inc
pushf
test
mov
jo
xchg
inc
push
adc
mov
sbb
sbb
mov
ss
insb
int3
cmp
pop
inc
pop
mov
aaa
loope
rorl
shlb
cmpsl
movsl
pusha
out
fwait
pop
jl
inc
pusha
inc
repnz
xchg
inc
jb
adc
or
xor
pop
add
test
mov
or
and
inc
das
shll
mov
inc
or
push
add
es
fiadds
push
add
jo
dec
data16
jno
sti
inc
cmp
adc
mov
adc
pop
adc
popf
mov
orb
adc
testb
inc
lahf
sub
mov
cmp
into
add
xor
mov
es
cmp
pushf
pop
lods
shlb
scas
mov
ds
dec
pop
or
cld
adcb
scas
jg
add
pop
mov
adc
dec
cmp
xor
and
add
daa
add
jns
insb
inc
pop
sahf
lock
xchg
mov
cmp
std
xor
es
mov
xlat
repz
out
sub
es
loope
fists
add
roll
loope
clc
rcl
jp
mov
mov
addb
imul
adc
push
mov
sti
xor
jb
add
and
fisubrl
test
adc
test
cmpsb
inc
loope
mov
ret
cmc
adc
lret
ljmp
adc
sbb
adc
jnp
adc
repz
pop
pop
pop
and
jmp
out
roll
mov
pop
ljmp
ret
adc
xor
pop
push
push
cwtl
test
cmpsl
sub
sbb
add
adc
lea
fmul
xor
push
sbb
out
add
fs
pop
cmpsl
xor
je
shlb
scas
cmc
mov
sub
aaa
cmp
dec
inc
and
or
loop
sub
adc
pop
loopne
and
push
loopne
lock
out
push
in
add
cwtl
ret
jo
or
pop
pusha
sbb
cltd
cld
pop
rcll
mov
adcl
mov
add
in
mov
clc
sarb
decl
rorl
sub
pop
rorl
sbb
jno
mov
push
pop
loopne
sbb
addb
sbb
fimull
mov
or
sub
pop
fiadds
std
andl
in
adc
fsubp
sub
xchg
inc
jnp
xor
imul
insb
dec
arpl
xor
lock
xchg
pushf
mov
add
cld
pmaxsw
test
daa
idiv
call
out
fwait
or
lock
les
cld
push
fs
cmp
fdivs
icebp
sti
or
je
rcrb
pusha
aaa
pop
fdivs
push
mov
lock
adc
inc
adc
fmuls
inc
rcrb
aas
mov
idivl
test
sub
xchg
add
jge
dec
inc
xor
mov
sbb
bound
push
dec
call
pop
and
adc
jae
add
popa
adc
jb
adc
es
cmp
int3
push
dec
adc
mov
cmp
push
lea
xlat
mov
xchg
lahf
outsl
jbe
adc
mov
daa
dec
daa
adc
enter
lods
xor
add
aam
repnz
xor
and
inc
cltd
mov
xlat
decb
mov
inc
mov
stos
hlt
xor
dec
xor
sbb
add
pop
ficoml
jecxz
rclb
bts
jge
fsubrs
mov
in
stos
jo
test
pop
mov
ret
pusha
repz
lret
lds
pop
and
jge
repnz
add
fwait
cmpsb
or
ret
mov
mov
out
mov
push
xor
idivb
mov
xchg
sbb
xchg
frstor
repnz
fadd
rol
je
sti
push
stc
mov
pop
call
pop
aam
enter
or
in
and
mov
stos
cs
mov
push
jbe
sbb
jo
scas
xchg
ljmp
sarb
xchg
push
xchg
cli
fwait
sahf
jp
jecxz
pop
int3
cltd
pop
sub
or
rclb
hlt
push
jo
shlb
or
pop
mov
push
push
push
cmp
sbb
jmp
pcmpeqb
sub
or
in
mov
outsl
loop
sbb
add
dec
stos
aas
add
stos
sub
jmp
sub
and
sub
dec
js
sbb
cmp
cmpsl
pop
xchg
inc
outsl
pop
ret
sub
mov
sub
adc
mov
cmpsl
ret
dec
or
lcall
push
and
mov
aaa
lahf
jmp
loop
pop
jbe
jnp
add
dec
sar
add
adc
shlb
inc
fnstcw
cmc
jp
mov
pusha
out
sbb
dec
inc
xor
imul
js
mov
xor
sbb
xchg
dec
jns
push
inc
outsb
and
mov
jl
rolb
mov
and
cmp
add
jo
xchg
enter
mov
das
inc
and
xchg
jne
add
ja
in
push
ljmp
cmp
in
in
repnz
mov
loopne
xchg
sbbb
jbe
fdivp
push
mov
add
sbb
xor
mov
cwtl
js
pop
lcall
cmc
dec
mov
stos
mov
mov
add
dec
leave
sub
mov
add
jp
hlt
dec
les
adc
xor
out
adc
imul
add
sbb
add
sub
ds
push
xlat
dec
addb
dec
aaa
add
add
adc
je
or
and
rclb
cmp
int3
sub
adc
xor
sahf
movsl
loope
sbb
or
dec
jp
xor
cs
or
inc
add
adc
dec
insl
leave
and
jo
repz
add
and
int3
aad
cmp
dec
add
enter
xor
sub
cmp
repnz
lods
shll
mov
inc
xchg
push
mov
loopne
push
push
loopne
sub
push
and
push
stos
lods
lea
aas
loopne
mov
push
push
out
loop
roll
fisubrl
xchg
les
roll
pop
stos
stos
lods
leave
jecxz
ja
mov
add
and
pop
add
adc
lods
and
and
jl
ret
add
inc
shl
mov
ljmp
cmpl
xor
flds
into
sub
jno
in
add
add
fwait
scas
mov
fs
arpl
adc
enter
add
sti
push
clc
pop
mov
nop
movsb
and
movsl
aaa
xchg
push
mov
jo
xchg
scas
and
loop
push
pop
jl
mov
loopne
xor
xchg
add
gs
enter
mov
loop
or
push
mov
repz
add
ret
movsl
adcb
jne
dec
in
add
xchg
cmp
js
arpl
into
push
push
inc
shlb
or
or
adc
aam
adc
or
xor
test
adc
dec
mov
xor
sub
imul
dec
pushf
cmp
and
shll
pop
bound
jg
fld
sbb
fwait
int3
sarb
xor
add
adc
xorl
push
push
aad
pop
std
adc
or
int3
inc
cli
adc
clc
rcr
cmp
mov
es
mov
stos
lea
out
dec
out
or
or
and
out
outsl
push
sbb
mov
push
sbb
ret
hlt
push
add
add
test
xchg
push
mov
daa
jl
ficomps
fcomp
fdivl
aam
loope
mov
mov
mov
arpl
push
test
push
xchg
daa
or
mov
adc
bound
pop
push
call
push
out
std
out
push
dec
and
pop
mov
roll
sbb
inc
pop
clc
std
dec
cs
dec
dec
or
movsl
adc
outsl
cwtl
fistl
imul
xor
ret
bound
add
xor
sarl
jge
aaa
inc
mov
test
mov
pushf
xor
lcall
mov
sbb
jnp
push
mov
fmull
xor
xor
and
rcll
adc
cwtl
mov
insb
jno
dec
insb
xor
ja
shrl
inc
fisttpl
push
and
es
mov
incl
out
ss
sbb
pusha
or
stos
xor
enter
xchg
sub
and
cmp
cwtl
addr16
xchg
fadd
push
mov
adc
imul
out
arpl
xchg
jecxz
enter
push
dec
pop
repz
jns
dec
xor
push
push
or
mov
sbb
sbb
adc
adc
cld
pop
cmp
pop
adc
adc
imul
sbb
push
cmp
lret
adc
push
xor
dec
inc
in
xchg
adc
dec
int
aaa
fstps
jo
aam
mov
mov
xorb
fwait
or
mov
mov
mov
loope
jp
xchg
sti
jmp
ja
add
gs
ficoms
nop
or
xor
mov
mov
sbb
push
jae
sbb
mov
xchg
push
add
icebp
mov
and
mov
and
xchg
lret
inc
jg
fwait
lods
cmp
push
inc
inc
inc
dec
jmp
aas
sbb
movq
cmp
sti
add
jmp
addb
inc
lcall
push
ret
and
ja
sub
push
lahf
cmp
lahf
xor
mov
call
jo
push
sbb
adc
add
pop
sbb
adc
lods
arpl
sub
adc
pusha
fidivs
cmp
mov
lret
push
sbb
ret
sub
shll
adc
or
push
add
dec
xor
fdiv
add
cmp
ret
cmpsb
and
sbb
and
lock
xchg
outsl
add
xor
in
pusha
and
jbe
or
xor
sub
orb
xchg
pop
pop
pop
xchg
inc
fisttps
and
out
jmp
jne
aaa
xchg
incl
push
out
sbb
add
jno
and
sti
jno
push
jo
mov
xchg
sbb
cmp
add
data16
jb
pop
xor
shr
repz
or
sub
fwait
sbb
mov
cld
mov
add
fadds
movsb
push
fbstp
jo
movsb
int
mov
sub
and
subb
int
push
je
popa
fidivrs
mov
loop
pusha
or
mov
sub
call
shlb
adc
adc
pop
mov
lea
ret
mov
jbe
leave
pmulhuw
adc
sbb
in
or
dec
jmp
es
mov
cmpsb
push
fistpl
pop
jbe
loope
add
add
adc
add
ffree
arpl
dec
clc
lods
xor
sub
mov
or
pusha
cmp
ljmp
mov
addb
fbstp
add
cmp
adc
fisubs
lea
and
repnz
das
in
add
rolb
or
xchg
sub
out
mov
add
bound
movb
int
xor
mov
and
or
and
mov
loop
popa
or
add
nop
cmp
std
nop
push
and
pop
pmuludq
inc
in
sub
sbb
rclb
or
cmpsl
sub
scas
loop
push
jmp
or
nop
or
adc
pusha
cwtl
inc
inc
or
and
ss
push
aad
test
pop
push
mov
jo
mov
js
ret
hlt
mov
lock
std
dec
data16
ret
pop
and
shlb
outsl
fisubs
mov
lds
jae
or
push
loope
lcall
cwtl
and
dec
lahf
pop
jl
femms
mov
xchg
add
mov
js
cli
mov
mov
add
jne
fimull
inc
sar
movsb
std
jecxz
mov
int3
jnp
shll
mov
and
mov
jns
jo
ja
jge
sahf
hlt
dec
int3
adc
inc
sbb
mov
arpl
cwtl
add
movsl
imul
push
pop
call
mov
or
and
or
shr
or
or
movsl
rorb
cld
xor
sub
add
sub
inc
cmp
inc
mov
dec
rclb
fmuls
jg
push
cld
xor
daa
les
ret
addb
inc
or
icebp
cltd
shlb
pusha
filds
xlat
hlt
inc
pop
cli
mov
notl
pop
aas
cmp
or
push
ss
jg
mov
xchg
add
mov
adc
xlat
es
in
loope
inc
jp
shrl
inc
cmp
cmp
pushf
mov
test
mov
and
fdivrs
sbbb
aam
rcrb
or
mov
into
mov
cltd
inc
enter
movl
mov
mov
insl
aas
dec
jae
sbb
movhps
sbb
addl
das
xor
stos
pop
pop
inc
loopne
or
push
ret
sbb
js
add
cmpb
sub
add
sti
sbb
xchg
sub
dec
xor
jp
push
sbb
and
js
adcb
ficomps
fistpll
adc
or
sbb
mov
jo
inc
std
xlat
ja
inc
fs
scas
in
call
mov
mov
aaa
nop
sub
cmpsl
sbbb
lcall
or
sahf
or
sti
fsubs
pop
or
adc
lret
dec
inc
mov
insl
pop
and
stc
movsb
sbb
sbb
cli
pop
jecxz
testl
xlat
or
out
pop
push
sbb
adc
aaa
popf
popa
testb
jp
xor
push
iret
mov
inc
inc
sub
sub
roll
movsb
adc
mov
cmc
out
ds
mov
test
movsb
xchg
sbb
loopne
out
or
std
push
loop
sbb
mov
sbb
outsl
ret
inc
adc
mov
ds
mov
inc
sub
stos
lret
imul
aad
and
or
jne
jp
int3
ffree
lcall
pop
call
scas
ss
out
push
adc
lock
aas
ss
scas
dec
jne
mov
mov
add
es
sbb
or
sub
add
iret
lcall
loop
or
inc
and
ret
out
push
popf
dec
mov
es
jle
fldcw
cmp
add
sub
lods
or
pop
dec
xor
pop
pop
loope
bound
push
push
ljmp
leave
pop
xor
xchg
jge
iret
dec
xor
loopne
loope
inc
jae
jbe
repz
jo
add
hlt
adc
cmp
add
test
rorl
loopne
push
inc
or
cmp
scas
xchg
daa
bound
cmp
cmp
push
sbb
and
lret
mov
cld
cld
fiadds
push
or
hlt
inc
dec
lret
cmp
push
loopne
push
outsb
jns
fwait
lods
int
cmc
pusha
xorb
xor
dec
aaa
dec
hlt
cmp
sub
and
pushf
mov
dec
or
add
insb
mov
pusha
adc
adc
add
scas
je
and
pop
add
and
test
jecxz,pn
pop
fildll
and
loop
fimull
call
loopne
es
jb
cmp
pop
inc
mov
movb
orl
push
fdiv
jmp
cmp
sahf
inc
mov
out
mov
popa
adc
std
or
push
out
iret
pop
pop
jecxz
pop
adcl
xor
add
sbb
mov
mov
add
xor
sub
cmp
lock
push
push
lahf
xor
in
xor
add
sbb
push
or
in
inc
in
push
push
es
inc
add
lock
fistpl
in
inc
pop
testb
in
test
test
jbe
sbb
sub
sub
mov
hlt
inc
cs
pop
lret
aam
loopne
dec
loope
cld
lock
cmp
je
cmpb
fdivl
jb
add
or
in
sbb
inc
xlat
loop
push
xchg
jg
insl
rcrb
js
dec
mov
dec
testl
jb
xchg
dec
fsubs
sahf
popa
pop
cmc
outsb
or
dec
ss
insl
xchg
xlat
sbb
sub
xchg
ret
mov
xchg
adc
in
aas
imull
sahf
push
aas
bound
push
cmp
cmp
loop
sbb
xor
mov
inc
cmpsl
add
dec
leave
push
fst
pop
pusha
xlat
mov
loope
pop
sbb
adc
shlb
arpl
push
sbb
iret
xor
incl
adcb
sub
add
cld
out
call
int
nop
mov
aaa
adc
push
xchg
fwait
fs
incb
pop
mov
into
sbb
cld
xor
js
and
adc
cs
mov
push
push
jmp
pop
gs
cwtl
mov
stos
and
cs
divb
mov
cmp
and
orl
shrl
leave
adc
mov
aas
dec
cmp
mov
fcoms
in
push
and
popa
adc
hlt
dec
cwtl
pop
dec
inc
sbb
loop
data16
adc
jae
xor
mull
jnp
ljmp
add
in
sarb
sub
rcl
and
fildl
jmp
and
or
mov
pop
dec
lea
cmp
mov
in
push
icebp
popf
in
in
pusha
adc
in
in
inc
mov
in
mov
jg
sub
loopne
mov
push
pop
mov
add
aam
lret
adc
xor
jns
std
mov
lret
jge
enter
xor
add
lock
sahf
stos
push
fmul
xor
das
popa
test
lret
ds
aas
in
sub
push
orb
jo
push
ja
jnp
js
mov
jg
jp
ja
adc
sbb
add
mov
fiaddl
aaa
mov
and
hlt
sbb
insb
jnp
jge
pop
in
das
mov
xor
adc
xchg
cli
cmp
inc
mov
aaa
xor
sbb
jge
adc
sub
mov
push
and
or
xor
xchg
mov
mov
loope
mov
aas
sbb
movl
lods
mov
adc
add
pushf
dec
inc
ret
shlb
add
mov
push
mov
or
leave
movsb
lcall
hlt
sbb
dec
add
scas
jbe
mov
pop
test
push
fwait
xchg
inc
dec
mov
lods
scas
inc
sarb
xchg
and
fdivr
pop
inc
shl
mov
test
jne
add
mov
mov
or
sar
andb
jnp
inc
add
dec
dec
and
pop
test
test
or
mov
xchg
adc
jle
dec
dec
lret
inc
test
sub
dec
out
add
test
pop
mov
sub
shl
out
and
pop
sbb
push
das
stos
adc
mov
pop
movsb
fists
or
pusha
arpl
aaa
mov
mov
sub
mov
mov
or
pop
rcrb
xor
pop
cmp
push
xor
test
adc
hlt
or
push
ss
mov
ljmp
xchg
jecxz
loop
jmp
mov
loope
xchg
mov
cs
cld
nop
push
in
in
jne
inc
dec
das
fisubs
adc
dec
pop
sub
or
adc
xorl
fdivp
or
adc
jle
xchg
mov
add
imul
sub
ret
sbb
ja
pop
dec
xor
loope
xlat
sbb
fmuls
adc
mov
push
stos
sbb
call
dec
cmp
mov
lock
ret
test
push
sub
pop
cmp
xor
dec
mov
roll
jg
or
add
sub
lock
pop
mov
inc
int3
sarl
popa
mov
insl
movsl
stos
push
mov
or
cld
outsb
iret
cmp
jg
fisttpl
pushf
adc
sbb
pop
mov
daa
sbb
or
and
in
sbb
shlb
mov
ret
pusha
pop
cwtl
ficompl
call
lcall
in
pop
daa
je
inc
out
clc
movsl
leave
mov
mov
ja
or
push
mov
dec
mov
shll
loop
xor
jmp
adc
popa
sub
lods
jo
pop
xor
mov
in
mov
ret
jb
and
jmp
jge
and
inc
xor
jmp
int3
icebp
cmpsb
sbb
jge
insb
dec
mov
pushf
mov
fmull
movsb
push
or
jl
mov
les
inc
ficoms
dec
xchg
push
dec
add
xchg
pop
insl
je
cld
int
inc
repz
add
push
mov
in
fbstp
or
sub
das
rcrl
mov
xor
std
xchg
aas
ret
lret
loopne
xor
fisttpl
popf
sub
lret
fsubs
int3
inc
js,pt
lods
mov
add
xor
cld
call
xor
inc
fstpl
jno
icebp
or
add
pop
insb
call
add
push
lea
popf
sbb
xchg
ret
popa
nop
push
insl
xor
jne
enter
or
cmp
mov
dec
sbb
and
jno
mov
aas
fadds
rcrb
arpl
fisubrl
pop
daa
faddl
pop
clc
arpl
add
fisttps
push
lea
push
adc
nop
push
test
sti
inc
call
adc
aaa
pop
imul
movsl
mov
scas
xchg
daa
pop
sub
movsb
jecxz
and
sbb
ja
add
jg
pop
xor
push
out
sub
mov
and
mov
mov
movsb
fcompl
push
add
inc
xchg
push
insb
adc
inc
mov
les
push
mov
adc
or
adc
inc
sub
push
sbb
jo
mov
fwait
add
mov
pop
notl
sbb
adc
cmp
add
or
clc
roll
addb
cmc
xchg
js
add
pop
xchg
fistps
lret
adc
adc
rclb
xor
xor
cmp
fdivl
xchg
sbb
aam
jbe
mov
adc
lock
mov
add
fimuls
pop
push
jno
lret
cmpsl
inc
aam
nop
push
test
sbb
xchg
pop
mov
fists
gs
or
inc
jne
xlat
rol
pop
pop
ret
js
pop
rolb
adc
in
push
pusha
shl
cld
lret
movl
movsb
cmp
lock
pushl
jo
test
jae
loope
js
inc
decl
call
pop
sbb
sbb
icebp
fisubl
fwait
mov
hlt
adc
or
jmp
mov
cld
ror
adcl
dec
cmp
xor
aad
pop
fninit
shr
and
mov
pop
sbb
add
in
pop
push
sub
je
filds
insb
out
cmc
cli
mov
pop
pop
cmp
fwait
pop
aas
addr16
fs
dec
lds
mov
pop
sbb
pusha
rol
clc
insl
sub
cmpsb
out
fisubs
sbb
mov
pop
add
pop
fdiv
fcoms
in
test
push
pop
loope
add
in
add
jbe
push
leave
insb
jo
cwtl
inc
into
push
ljmpw
cmp
add
sahf
and
sub
icebp
aaa
dec
nop
sub
add
push
fadd
scas
dec
rorl
sbb
pusha
lds
xlat
sub
fmuls
mov
inc
scas
pop
sbb
add
loopne
fldl
push
add
push
repnz
or
dec
fldl
push
adc
imul
jno
sbb
ljmp
add
and
mov
push
cwtl
xorl
pop
outsl
daa
arpl
sbbl
outsl
scas
inc
and
pop
push
and
cld
mov
jae
mov
mov
or
loope
out
loope
imul
in
push
scas
jb
mov
dec
pop
and
hlt
lds
stc
loope
mov
aad
jecxz
fxch
push
xor
scas
subb
not
stos
add
enter
or
mov
or
pop
orl
ja
hlt
jg
loope
scas
imul
icebp
add
popa
inc
ret
mov
add
xor
icebp
inc
and
mov
push
sbb
fldl2e
jmp
cmp
add
js
pop
aam
push
loop
imul
int3
repnz
jb
sub
sub
fmull
rcr
sub
lret
dec
pop
cmp
dec
mov
cmpb
add
pusha
inc
fcompl
clc
imul
popf
cld
add
mov
scas
add
or
mov
jecxz
push
xrelease
mull
adc
pop
dec
or
popa
ljmp
aad
inc
lret
and
sub
mov
scas
ret
jbe
cmpsb
xor
rorb
leave
dec
dec
frstor
loopne
mov
js
xorl
test
es
xor
pop
or
xchg
into
add
psrad
sti
mov
jo
and
adc
mov
add
outsb
xor
enter
mov
loop
popf
sahf
add
lea
xchg
mov
add
out
or
add
sub
aaa
jnp
dec
push
jp
sbb
pop
dec
mov
fldcw
mov
xchg
clc
add
inc
mov
clc
xchg
inc
push
std
dec
lock
rorl
xchg
stos
push
mov
adc
ret
ljmp
ret
movsb
popa
iret
inc
jge
dec
lea
xlat
push
adc
mov
call
cmp
outsb
mov
sbb
cmp
dec
cld
ret
leave
dec
std
jg
pop
fcompl
inc
or
adc
in
out
pop
in
scas
or
push
push
jno
mov
mov
adcb
dec
adc
or
inc
cmpsl
ffree
dec
or
add
je
repz
push
inc
adc
inc
mov
mov
ja
cmp
sbb
jle
xor
jb
mov
jmp
push
or
xor
sbb
das
or
dec
and
add
jb
insb
cmp
dec
inc
stos
mov
mov
ret
rcl
inc
mov
add
sub
adcb
xchg
sbb
add
call
nop
xlat
cmp
mov
sub
inc
js
push
sti
jl
push
mov
es
lahf
daa
dec
ret
addr16
rcrb
xchg
push
hlt
mov
add
mov
out
mov
add
jo
push
iret
ret
mov
call
xlat
cld
ror
pop
add
jnp
xchg
push
or
adc
inc
adc
adc
and
js
jp
jp
stos
and
mov
imulb
icebp
mov
push
and
mov
mov
pushf
aad
insb
sbb
and
mov
xchg
adc
cmp
or
and
lods
pavgw
lea
push
mov
xchg
call
lods
sahf
add
ret
cmp
repz
mov
in
lret
inc
xchg
push
loopne
lock
outsb
fnstenv
call
arpl
jmp
es
jbe
sub
popf
call
xor
adc
pop
movsb
out
aad
and
add
cld
outsb
scas
filds
sbb
call
cld
pop
dec
fs
repnz
push
ljmp
or
add
fimull
outsl
ret
rcll
sbb
jmp
adc
pop
adcb
sbb
nop
add
call
push
ja
out
or
pushf
fwait
add
das
mov
xchg
out
loopne
fmuls
mov
cwtl
stc
xchg
cwtl
aas
roll
push
aad
sub
cli
mov
ret
ljmp
fcomip
call
mov
mov
add
dec
xchg
fildl
data16
cmp
pop
push
adc
mov
in
or
cmc
xchg
call
ljmp
cltd
ss
mov
ds
cmp
test
jge
mov
and
and
mov
mov
cli
les
push
push
cmp
sub
pop
out
test
lea
stos
movsb
loopne
fsub
fbld
in
icebp
adc
cmpsb
adc
and
repnz
sub
sbb
out
popw
cli
lsl
arpl
sbb
lds
sub
dec
inc
cld
mov
add
rorb
rorb
xlat
stc
and
sub
mov
jae
and
lock
push
subl
dec
jge
test
push
ret
ss
or
push
fldcw
pop
inc
or
xorl
sub
cmp
mov
mov
popf
in
cld
inc
pusha
in
roll
lea
int
cmp
push
mov
adc
or
adc
adc
mov
sbb
imul
or
mov
popa
pop
push
dec
test
mov
cltd
sbb
inc
mov
fisttpl
adc
and
test
ds
mov
loop
pop
jns
mov
mov
rcrb
mov
daa
xor
scas
outsl
jae
sub
or
daa
cmc
inc
xor
iret
test
add
mov
not
xor
cmc
fadds
sbb
repz
mov
jne
std
jo
inc
pop
mov
shlb
pop
lea
in
into
or
inc
shr
add
jmp
cli
loope
dec
hlt
adc
cmp
sahf
repz
inc
out
iret
dec
rcrb
leave
xchg
add
lcall
or
add
push
sub
mov
jnp
ret
xchg
std
push
outsl
mov
xor
call
ficoms
imul
push
jo
sub
add
ss
adc
jbe
insb
and
les
in
adc
dec
loope
sub
fadds
sub
lret
leave
rolb
sbb
pop
loopne
jecxz
mov
les
out
js
fidivrs
icebp
rorb
push
fdivs
ds
in
cmp
dec
cmp
jae
push
rcrl
sbb
xchg
mov
cmp
adc
dec
mov
imul
or
sbb
hlt
out
xor
add
int
jl
loopne
dec
fidivl
jp
loopne
mov
sub
push
pop
adc
clc
or
pop
xchg
dec
xor
nop
and
sbb
jmp
mov
jp
enter
adc
push
fdiv
rcl
xor
jns
pushf
sbb
or
adc
pop
jb
adc
and
add
add
adc
mov
popa
test
or
mov
inc
movsb
js
pop
gs
mov
xor
push
and
xchg
clc
or
or
adc
test
les
mov
mov
sub
repz
out
cmp
sbb
rcll
jmp
jns
adc
out
orl
rorb
push
sub
mov
and
repz
adc
mov
adc
dec
or
sbb
mov
rcrb
cmc
xor
mov
xor
cmc
push
fadds
push
or
loopne
out
push
rol
ds
rol
mov
ret
clc
imul
ss
cmp
jnp
and
popl
lea
sub
mov
insl
xchg
push
sbb
pop
or
add
cmp
xor
mov
iret
adc
pusha
mov
in
push
jecxz
sub
push
call
cs
cli
ret
push
dec
rorb
inc
das
pop
xlat
lea
rcll
and
add
adc
es
pop
sub
sub
sbb
xor
test
les
les
add
dec
loopne
mov
xchg
adcb
clc
add
sbb
fucompp
fwait
mov
xorl
adc
test
mov
cld
or
add
inc
adc
jne
xchg
aam
xchg
and
adc
lret
inc
jmp
and
pop
enter
data16
dec
inc
pop
add
cwtl
adc
cli
add
ss
xor
mov
pop
ljmp
jnp
mov
clc
sti
sbb
add
cli
jae
push
dec
xlat
inc
mov
lahf
pop
insl
dec
or
inc
ja
xor
jmp
inc
xchg
ss
cmp
arpl
push
xorb
sbb
mov
std
fstl
jle
mov
sbb
adc
andl
sbb
loopne
dec
sbb
inc
cmp
ja
inc
sbb
js
out
inc
or
and
lods
push
cmp
sbb
sbb
jp
cmp
loopne
xor
loopne
pop
dec
add
sbb
in
cmp
lret
sbb
jge
imul
shrl
pop
andb
je
mov
es
mov
sbb
jg
pop
add
je
xchg
jae
dec
xor
add
mov
mov
add
inc
ss
mov
jno
pop
push
sub
call
cs
insb
sbb
adc
pushf
fisubl
popa
sarb
mov
add
outsb
xor
add
inc
push
lcall
fucomi
out
addr16
jp
test
daa
sti
test
cmpsl
mov
adc
add
mov
xlat
jo
push
test
add
sarb
in
cmpsl
mov
ret
mov
adc
in
ffree
mov
push
xchg
scas
leave
flds
lock
inc
xchg
add
pushf
shrb
inc
cmp
inc
imul
sbb
pop
cld
fs
mov
sbb
les
jge
bound
push
push
aas
stos
add
cld
xor
lea
repz
sub
cmp
imul
sbb
mov
push
or
setns
fs
adc
mov
and
and
out
fadds
fcomi
xchg
pop
incl
cmp
es
add
sbb
ret
arpl
dec
les
or
mov
test
cmpsb
cmpsb
inc
rcrb
fstps
adc
cli
in
and
arpl
cmp
push
and
mov
loopne
inc
repz
nop
mov
pop
cmp
adc
loopne
data16
rorb
rcll
divb
sub
je
sub
mov
mov
out
aaa
push
popa
mov
adc
mov
es
shlb
inc
or
mov
jl
mov
icebp
and
sti
mov
or
or
clc
xchg
cmpsb
jmp
add
test
in
add
add
dec
cmp
scas
or
xchg
cmp
dec
call
mov
dec
jge
frstor
push
insl
pop
inc
sbb
cs
pop
sub
and
push
rclb
das
mov
mov
in
rcll
dec
repnz
out
or
ret
rcl
das
jp
xor
dec
pusha
test
adc
mov
push
jl
insl
pop
add
jecxz
ss
in
push
into
icebp
dec
fucomp
stos
test
js
add
or
iret
xor
fucomip
xchg
adc
jle
push
push
or
add
jp
call
clc
call
shll
shll
xor
rcl
in
scas
add
adc
mov
mov
pop
shrb
fiaddl
les
lcall
das
cmp
push
fmulp
movsb
add
ret
jle
add
mov
int
jmp
scas
int3
fdivr
inc
cmp
sub
add
inc
rorb
inc
popl
sbb
jmp
add
cmp
add
push
adc
mov
sti
pop
and
add
xor
js
lcall
mov
lahf
sub
push
jne
xor
sub
mov
inc
jmp
ret
pop
inc
insb
adc
lock
mov
add
loopne
movsb
roll
sbbb
sahf
xor
aaa
add
xchg
in
in
and
and
lock
je
jmp
add
xor
aam
scas
test
or
pop
push
or
dec
ret
test
scas
lock
in
inc
cld
loopne
adc
adc
sbb
push
push
push
jmp
sbb
pop
add
xor
adc
fld
stos
add
popa
outsl
cmp
lret
rolb
in
jmp
das
aad
lods
sbb
sub
cld
mov
out
jl
mov
in
push
icebp
cld
push
or
jecxz
mov
mov
mov
xchg
mov
adc
push
testl
enter
inc
or
imul
push
add
mov
into
lock
xchg
aad
inc
and
scas
dec
and
adc
cmpsl
out
adc
push
pushf
or
ljmp
mov
dec
aaa
call
add
lret
or
xchg
and
test
lock
xlat
int
pusha
scas
pop
or
add
les
mov
push
push
call
pusha
dec
add
ljmp
or
mov
dec
adc
in
inc
in
pop
into
jle
jns
dec
add
bound
jle
je
add
sbb
jbe
push
sbb
aaa
in
adc
les
in
movsb
imul
movsl
cmpsl
jl
adc
div
andb
pusha
xor
mov
sub
ljmp
lea
add
push
jge
aad
cwtl
loop
add
repz
leave
pop
popa
lds
mov
mov
add
decb
adcb
push
xor
add
xchg
push
in
xor
or
jo
or
out
inc
movsb
icebp
push
nop
jge
or
shll
add
ljmp
pop
rclb
ds
in
xchg
es
push
enter
lods
push
pusha
adc
leave
adc
test
and
rcrl
xchg
ds
sbb
ret
vandnps
pop
add
push
mov
shr
push
mov
pop
nop
cmp
stos
lds
add
push
faddl
jmp
inc
adc
and
mov
dec
adc
fsubrs
jge
fwait
add
outsb
add
mov
lds
sbb
mov
addr16
imul
test
pusha
adcl
mov
pop
mov
inc
nop
jno
std
incb
dec
pop
js
lock
sbb
xchg
dec
in
sub
rcl
int3
ror
cmp
test
jo
and
push
lea
bound
scas
jg
mov
hlt
and
adc
xor
add
dec
push
xor
scas
rorb
mov
or
lcall
mov
dec
loope
test
dec
jnp
enter
pop
xor
dec
fisubrl
xor
aas
imul
mov
pop
add
or
shl
daa
call
sub
push
push
jge
adc
dec
add
pop
int
aam
insl
pop
sbb
lret
imull
xor
out
jmp
mov
rorb
sbb
mov
sbb
push
int
loop
js
in
xor
or
loop
sbb
rep
xchg
fcomps
adc
add
pop
in
and
add
push
push
das
cmpsl
dec
lods
pop
or
data16
sarl
inc
add
daa
out
mov
adc
or
lods
xchg
jo
pop
andl
jno
inc
lods
aas
addl
inc
inc
jnp
mov
cwtl
inc
dec
leave
mov
adc
mulb
inc
adc
adc
dec
add
rcll
push
fstpl
xor
inc
repz
pop
inc
clc
mov
jp
mov
pop
ljmp
add
and
push
loope
add
mov
add
jne
shrb
sub
mov
xchg
js
mov
rorl
adc
lea
push
xchg
aas
jo
xlat
mov
add
jne
mov
les
pop
out
loop
jle,pn
and
imul
sub
out
fdivrp
and
dec
cwtl
add
and
les
dec
dec
leave
xorb
test
inc
add
test
dec
pushf
and
fisttpll
and
hlt
fadd
sub
xchg
cs
jle
and
pop
and
popa
mov
xchg
add
jae
or
jmp
fisubrl
sbb
inc
lock
aaa
pop
inc
mov
xor
push
testl
lock
out
das
push
fstpl
adc
inc
nop
rclb
cmp
lods
push
les
dec
push
enter
mov
xor
inc
ret
mov
dec
mov
pop
test
inc
cltd
sbb
add
add
mov
and
fdivr
sbb
faddl
hlt
inc
add
xor
iret
or
pop
mov
add
or
fiadds
notb
push
cmp
mov
push
js
add
fwait
fwait
jecxz
add
mov
movsl
das
sub
movsl
mov
je
adc
cmc
inc
jp
shll
sbb
clc
and
fdivrl
adc
clc
jbe
push
fs
mov
fld1
inc
add
jo
mov
and
fwait
inc
ret
nop
outsl
pop
repz
add
pop
loopne
addb
cli
sub
inc
cmp
add
and
inc
push
dec
fmuls
iret
cmp
xchg
xchg
inc
sub
cmc
sub
sbb
fisubl
orl
sbb
lea
fsubrs
dec
cmp
jns
mov
popf
mov
inc
fidivrl
je
pop
pop
out
pop
mov
or
testl
and
rcrb
push
pusha
sbb
jne
fs
xchg
call
inc
sub
dec
mov
movq
aaa
sbb
in
pop
or
push
or
orb
aam
and
dec
sbb
xchg
fadd
loop
clc
loope
lret
fadds
stos
imul
lock
sbb
mov
fwait
cmpsl
and
lods
cmpsl
mov
xchg
bound
mov
imul
shl
loope
popf
and
call
out
and
pop
jae
pop
into
sbb
cmp
loope
mov
fidivrl
in
mov
pop
adc
xchg
inc
mov
mov
pop
mov
xchg
mov
fdiv
adc
addb
dec
mov
inc
add
mov
cmp
clc
lods
inc
or
push
jp
shll
add
and
mov
push
aaa
sbb
sbb
je
outsl
or
mov
inc
pusha
outsl
inc
lods
add
movsb
mov
stos
in
popa
js
outsb
les
xor
in
mov
into
mov
es
in
lds
mov
ret
sub
add
cld
adc
add
sbb
js
out
mov
imul
or
add
in
mov
pop
and
mov
jl
push
cmp
adc
das
ret
pop
in
jg
nop
cld
clc
cmp
ja
xlat
outsl
sub
mov
shlb
in
adc
pop
xor
sar
mov
jmp
popa
mov
test
and
xor
cmp
pop
add
fisttpl
movsb
fwait
mov
push
mov
out
fcoml
lret
add
sub
dec
dec
int3
push
scas
icebp
loopne
push
aam
pop
adc
adc
pop
das
adc
pop
or
sub
shl
xor
cmp
mov
mov
js
xchg
pop
divb
mov
inc
mov
cmp
mov
sub
mov
sub
hlt
xlat
scas
add
enter
jbe
mov
fidivl
xchg
pop
push
loop
pop
loopne
test
cli
or
add
push
stos
push
dec
mov
mov
inc
add
clc
call
nop
add
in
in
jmp
sbb
int
mov
and
mov
popf
cmp
dec
pusha
shr
out
sarb
fcomip
pop
arpl
mov
adc
or
imul
loopne
add
xchg
orl
jl
pop
mov
enter
pop
mov
aam
jo
cmpsb
test
sti
ret
enter
loop
add
or
cmp
cs
xchg
dec
test
dec
adc
push
dec
or
xchg
xor
jg
pop
jmp
mov
jecxz
lods
inc
push
orb
or
add
adc
cli
loope
sub
nop
jg
ret
adc
pop
xchg
loope
movntps
stos
cmpsl
dec
and
rcrb
mov
rcrb
lea
movsb
inc
jle
gs
cmpb
adc
xchg
lods
dec
test
pop
test
push
clc
rorb
xorl
out
outsb
inc
mov
in
or
xlat
adc
movsb
mov
ret
xchg
sbb
fildll
test
pop
addb
xchg
cltd
insl
int
adc
and
enter
xor
push
mov
cmpsw
xor
or
sbb
or
mov
xchg
jbe
dec
add
lock
xchg
dec
fsubr
and
stc
add
loope
sub
or
xchg
inc
stos
or
cmpb
nop
insl
scas
jmp
je
sbb
adcb
sub
out
inc
jl
int3
pop
add
lds
cmp
inc
add
out
mov
inc
incb
ret
cltd
add
sar
nop
sbb
outsl
stc
lret
sbb
in
test
fsubrp
jp
inc
sub
or
jmp
mov
daa
pop
pushf
cld
sbbl
add
popf
cmpsl
pusha
and
lret
push
aam
arpl
sti
jmp
xchg
aad
add
mov
mov
addb
fwait
jle
adc
adc
jo
mov
add
sub
outsl
dec
sub
jbe
mov
fadd
or
pop
jp
aaa
sub
sub
fiaddl
jg
pop
mov
out
mov
sbb
scas
push
shlb
fadds
sub
dec
jp
jge
in
jmp
pop
cmp
or
add
loop
xchg
in
sub
sub
in
call
loopw
adc
ds
jmp
push
inc
sbb
in
shrl
jmp
or
test
out
daa
sub
les
scas
or
es
out
jno
inc
fimuls
or
ret
aaa
inc
lds
lahf
loope
push
sbb
cmp
jb
jne
push
sbb
cwtl
mov
fidivrs
mov
lea
nop
inc
icebp
les
jb
mov
mov
push
and
movb
mov
aam
test
movsl
test
mov
not
jbe
and
push
fimuls
in
cmpsb
lcall
aad
adc
ss
mov
ret
mov
mov
js
into
add
inc
js
cmpsl
sbb
ret
outsl
dec
fadds
jl
mov
xor
push
lds
gs
shll
les
push
pop
fidivl
mov
test
mov
sarb
xor
in
dec
adc
cld
mov
adc
adc
pop
rol
cs
cmp
add
adc
dec
test
jo
call
or
xchg
ss
and
std
or
shrl
inc
cmpsl
sahf
mov
inc
adc
mov
int
aaa
push
xchg
aas
out
repz
lea
in
sub
mov
out
dec
scas
add
inc
pop
mov
sub
enter
es
mov
shll
mov
cmpsl
sbb
ds
add
test
jne
inc
add
sti
jg
mov
add
or
push
dec
cwtl
mov
cmp
or
adc
ljmp
icebp
lahf
ficoms
xor
or
imul
add
add
adc
pusha
and
xchg
es
jmp
aaa
fcoms
sub
sbb
jb
sbb
cmp
sub
adc
add
adc
lods
test
xchg
sbb
pusha
push
inc
or
sbb
mov
sti
jnp
rcl
and
pop
mov
cli
jne
sbb
add
adc
orb
xchg
push
imul
add
imul
jl
xor
dec
xor
dec
sbb
xchg
pop
daa
push
sbb
mov
add
nop
jp
repnz
add
daa
adc
xlat
mov
jg
loope
push
adc
inc
pushf
cltd
test
add
js
xor
add
xor
lds
ss
imul
dec
jmp
sub
push
imul
xor
and
and
adc
repnz
add
sbb
loopne
call
popf
sub
out
in
shlb
dec
je
dec
sbb
adc
jp
es
jmp
aaa
lcall
popa
inc
pusha
rcll
fmuls
popa
push
jae
les
sbb
push
add
inc
inc
js
lods
jo
xorb
add
loop
sbb
lea
ret
ret
pop
mov
inc
out
test
cli
rclb
arpl
jecxz
pop
pop
leave
jecxz
fstpl
jb
in
mov
push
ss
fildl
insl
mov
loop
ret
sbb
ret
bound
mov
sub
add
loopne
pop
mov
push
inc
mov
adc
mov
add
subb
mov
mov
sub
or
or
mov
xor
test
shl
das
leave
popa
loopne
into
loop
push
cli
add
jmp
jb
push
daa
add
lret
je
pop
cmp
mov
stos
dec
jnp
iret
add
aad
das
ret
adc
sahf
xchg
jb
jo
and
and
sub
jb
jo
pusha
fdivs
cmc
out
andb
pop
sbb
jnp
ud0
daa
jo
loopne
repz
gs
sbb
mov
jae
fimuls
out
xchg
cmp
iret
pushf
sbb
and
and
sbb
pusha
xor
cmpsl
sbb
ss
add
jl
pop
jle
mov
dec
xor
icebp
sub
sbb
stos
xchg
add
test
mov
subb
lret
in
mov
xchg
loope
js
adc
xchg
cmpsb
inc
int
push
gs
test
xchg
jne
pusha
pop
xor
dec
cmp
ret
xorb
in
mov
jno,pt
adcl
ljmp
fstpl
lds
mov
mov
adc
or
push
call
xor
mov
les
out
fldl2t
scas
add
mov
jo
shll
pop
cld
in
jns
jecxz
outsl
add
js
adc
cmpsl
shll
ficompl
fisubrl
xchg
mov
aaa
cmpl
dec
insl
push
push
mov
cwtl
pop
repz
in
clc
push
sub
push
call
sub
and
or
aas
cmp
es
or
xlat
xchg
test
inc
cs
imull
cmp
es
xchg
cmpsb
loop
mov
cld
pop
dec
cmp
repz
addl
out
pusha
fmuls
sub
call
aaa
xchg
les
sub
fbld
testl
loopne
add
pcmpgtw
inc
cmp
mov
xor
adc
cmp
or
add
sti
cmpsl
xchg
mov
test
je
test
stc
sub
xor
fsubs
cs
dec
dec
nop
jb
mov
jecxz
aad
hlt
nop
cmpl
in
lret
cmpsb
arpl
dec
pop
mov
cld
rcrl
loopne
popa
mov
dec
add
mov
sub
rcr
mov
jmp
cmp
inc
dec
push
xchg
je
and
lods
jns
shlb
jbe
sub
inc
pop
fadds
xchg
lock
and
je
rcrb
scas
mov
psraw
push
call
push
cmp
push
fldenv
cltd
push
add
sbb
add
mov
push
clc
or
repz
inc
pop
xchg
jmp
orb
mov
push
jp
insl
out
mov
imul
push
and
push
icebp
jg
or
cmp
dec
insl
adc
sbb
or
test
std
jbe
add
repnz
mov
cmp
inc
inc
push
inc
scas
jmp
ss
dec
lahf
outsl
incb
test
test
mov
jo
push
jne
out
pop
add
jecxz
je
mov
test
outsb
scas
rcrl
push
lds
sbb
jae
loopne
sbb
inc
insb
fcoms
cmp
inc
cmp
jg
mov
mov
test
mov
sbb
clc
iret
xorb
add
pop
out
xchg
mov
lods
mov
push
mov
loopne
mov
push
das
ret
sbb
lock
shlb
ljmp
pop
popa
sbb
scas
sar
add
mov
xor
sbb
rcl
repz
push
aas
inc
dec
push
cmp
cwtl
outsb
fdivs
mov
sti
inc
loop
lods
add
aaa
add
or
and
sub
out
sahf
js
add
cltd
scas
mov
xor
nop
jbe
lock
psubusw
add
ja
jae
lods
out
inc
mov
sub
out
dec
dec
test
ds
mov
cmpsb
and
repnz
ljmp
jno
xchg
sahf
repnz
jmp
shr
hlt
push
repnz
js
mov
pop
sbb
call
cmp
cwtl
xchg
sub
fidivrl
push
fwait
loopne
jmp
cltd
jle
rcll
movsb
inc
loopne
movl
and
xchg
xchg
pop
cmp
loope
inc
add
dec
mov
in
test
dec
pop
sahf
rcrl
ja
and
lahf
jge
pusha
sub
cmp
inc
aas
stos
call
xor
clc
loop
mov
lods
push
inc
lods
leave
loopne
clc
cs
dec
in
pusha
pop
ja
sbb
pop
inc
test
es
pop
sub
jb
sbb
xchg
insl
in
ja
adc
lock
daa
jne
jle
loope
add
dec
fs
mov
test
aam
sbb
or
mov
adc
ror
add
rorl
sar
cs
aam
add
cmp
inc
sub
inc
out
or
repz
add
inc
inc
clc
add
cli
push
mov
or
popf
repz
jne
inc
or
sbb
call
add
mov
ds
mov
lret
mov
xchg
push
mov
scas
sbb
aad
outsb
pop
and
in
icebp
iret
mov
test
aas
mov
add
cmpl
out
sbb
loopne
js
adc
inc
aad
xor
pop
dec
sarl
inc
loope
fistl
jmp
outsb
ret
inc
jae
lock
clc
mov
into
jnp
sub
addb
jne
jmp
push
shrb
jge
sbb
out
repz
add
mov
cmp
push
adc
fidivs
sub
or
jecxz
dec
add
cmp
xor
test
ret
repnz
aas
flds
mov
or
push
rclb
test
jbe
xchg
jb
push
rcrl
js
movsb
xchg
pop
and
dec
cwtl
outsb
in
stc
in
and
sbbl
jno
cmp
push
int
insb
sub
cmc
adc
iret
enter
jl
dec
sbb
add
incb
out
stc
mov
mov
sub
xchg
jg
shrb
inc
adc
fildl
mov
fistpll
cmovno
mov
pop
push
sub
addr16
mov
fstps
mov
stc
and
jmp
pop
push
jl
je
inc
inc
xchg
roll
inc
lret
out
loop
es
sub
inc
js
push
test
sbb
mov
mov
mov
jmp
aaa
dec
or
out
push
sbb
jne
orb
orb
cmpsb
leave
mov
mov
jmp
add
into
or
add
mov
clc
outsb
push
jecxz
or
push
and
or
enter
add
daa
inc
sub
xor
int
sbb
pop
cltd
test
in
adc
std
push
js
fcmovb
ja
movsb
inc
sbb
jecxz
fstps
inc
and
js
lret
or
sbb
aaa
push
sahf
xor
cmp
ret
arpl
dec
pop
ret
adc
testb
imul
testl
mov
aas
in
sahf
mov
sub
test
jne
fwait
das
mov
mov
xchg
in
or
hlt
data16
pop
jp
jp
in
sub
dec
inc
fwait
mov
movsb
movsb
imul
test
push
mov
inc
inc
addr16
push
aas
adc
xor
ret
stos
xlat
mov
or
add
popl
mov
inc
adc
push
in
or
and
and
ja
mov
jmp
inc
xchg
sbb
add
stos
repz
xchg
loop
mov
inc
outsl
push
sub
lods
mov
subb
call
loopne
mov
inc
enter
lea
sar
ljmp
inc
push
lea
outsb
adc
decb
dec
rorb
fnstenv
repz
in
sbb
jb
sub
dec
das
inc
es
in
jmp
inc
xchg
stos
or
call
stos
out
arpl
cmpsl
adc
xor
shrb
mov
inc
jl
push
add
leave
ret
es
cmp
xor
sbb
call
pop
adc
test
notl
cmp
dec
jbe
leave
loopne
jl
adc
adc
mov
gs
adc
push
idiv
add
jb
or
imul
fs
or
pop
cmpsl
imull
add
adc
inc
add
cmc
mov
shlb
ljmp
cmpsb
pushf
mull
addl
xor
mov
rolb
mov
mov
div
loopne
sub
sbb
aaa
fisttps
in
ret
leave
js
insl
add
inc
dec
sbb
cmp
dec
adc
sbb
xor
loopne
inc
movsl
test
pop
dec
loopne
xorl
inc
mov
sub
and
sbb
add
lock
push
ret
cld
inc
cmp
cmpsl
arpl
dec
ret
test
jg
pusha
call
push
xorl
xlat
fcomp
and
add
fwait
test
xchg
cmp
xor
add
pusha
jb
push
xlat
cmp
fdivl
sbb
push
ds
das
loop
jmp
subb
inc
icebp
jg
mov
filds
je
rcll
das
sbbb
xorl
mov
in
jae
push
add
scas
aas
pop
cmp
std
negl
pop
enter
and
xor
sbb
dec
sub
jg
dec
pop
pop
idivb
pop
nop
clc
or
jmp
dec
sub
mov
add
or
or
bound
pushf
inc
pop
sbb
rep
jne
and
imul
jae
aaa
aam
adcl
pushf
test
mov
lods
rorb
xchg
push
mov
or
sbb
mov
dec
enter
push
add
xor
cld
jbe
or
cmpsb
nop
push
pop
lahf
dec
cli
pcmpeqb
bound
sbbb
xor
dec
rclb
lods
imul
out
xchg
jbe
or
cmp
orb
rcll
rol
pop
mov
sbb
daa
jae
xchg
jecxz
hlt
add
xlat
sahf
sub
xor
sbb
aas
and
mov
lds
xorl
lar
add
push
or
out
sbb
dec
ret
pop
fdivrp
push
inc
pop
xchg
add
adc
cwtl
sbb
mov
sub
adc
adc
jecxz
jns
enter
inc
loopne
and
loopne
cmp
and
rorl
cmp
pop
or
cmc
ret
sub
lds
call
outsb
out
fsub
rorb
pop
mov
orl
arpl
mov
outsl
nop
out
adc
fcmovnb
pop
icebp
ja
mov
cmp
xchg
imul
test
mov
fadds
mov
jg
sti
jbe
dec
jge
testb
mov
test
jae
or
lret
xor
sbbb
mov
xchg
shll
cmp
movsb
shll
icebp
mov
ds
sub
adc
add
jne
push
pop
or
or
push
lock
sbb
nop
into
push
test
cmp
pop
fwait
fs
inc
push
cmpsb
adc
movsb
loopne
and
call
into
subb
and
adc
dec
test
sarl
aad
adc
dec
dec
incl
rol
cli
sub
push
add
and
shll
cli
sbbb
inc
push
test
loopne
xchg
dec
push
jle,pn
or
adc
rolb
jb
repz
dec
notl
pop
js
cwtl
vaddpd
fidivrs
fldl
mov
sbb
out
push
inc
xor
sahf
jb
mov
pop
mov
push
jg
rolb
into
add
sbb
add
ds
popa
loopne
mov
mov
sbb
adc
xchg
psubusb
sti
movl
mov
inc
or
jne
loop
test
and
sbb
js
sub
inc
push
mov
dec
test
insl
cmp
jp
mov
daa
push
push
and
push
inc
ror
or
dec
adc
rclb
out
inc
arpl
dec
sbb
out
sbb
loopne
push
dec
clts
mov
inc
push
dec
jne
xchg
sbb
xor
fisubs
and
or
test
lock
jge
adc
dec
or
cmpb
icebp
and
dec
out
bound
jl
dec
adc
pop
rcl
mov
xlat
leave
js
repz
push
ret
adc
add
test
repz
bound
mov
fimuls
dec
imul
sub
icebp
adc
sub
lcall
mov
fiaddl
hlt
pop
loope
xor
sbb
ficomps
mov
loope
bswap
fstpl
in
inc
int
sub
xchg
jge
cmp
xchg
inc
clc
jmp
out
loope
add
arpl
stos
int3
jecxz
and
inc
jmp
pop
adc
pop
or
xor
daa
out
xor
cli
jbe
lock
call
sbb
call
push
testb
hlt
lea
and
out
adc
jno
ljmp
and
mov
lds
xchg
fldcw
mov
jbe
adcb
pop
push
add
scas
dec
fbld
add
nop
or
sahf
nop
add
xchg
shl
pop
dec
js
lea
lds
pop
pop
dec
mov
xor
addr16
lret
inc
hlt
adc
pop
mov
leave
adc
xor
sti
mov
pushf
adc
in
and
call
pop
adc
or
dec
insl
lock
push
mov
and
fldt
add
sarb
sbb
lods
sbb
push
mov
mov
orb
pop
or
popa
mov
push
rcl
adc
adc
mov
rcrl
sub
ffree
add
adc
cmp
dec
jmp
add
cmc
sub
and
lea
sahf
add
sub
mov
dec
and
inc
ret
dec
adc
push
pop
cmp
lods
xor
daa
cmpb
ret
loopne
fidivs
xchg
add
ds
mov
add
or
fbstp
sbb
dec
imul
les
add
dec
or
out
aas
aaa
popa
cmp
pop
iret
xabort
clc
adc
mov
or
sarl
lods
xchg
jns
xchg
jecxz
fisubrl
add
and
adc
push
mov
or
or
out
sbbl
aaa
pop
clc
dec
adc
jno
xor
cmp
add
and
dec
xchg
mov
inc
imul
cmp
push
das
fmuls
mov
sbb
ss
cld
es
and
cmp
cmpsl
xchg
add
pop
hlt
and
and
push
mov
cld
out
push
std
add
dec
xchg
fs
add
lock
pop
lea
out
mov
test
mov
sbb
hlt
imul
cmc
jns
pop
roll
push
aas
fidivrs
push
and
mov
pop
adc
aad
orb
cmpsb
xor
imul
cltd
adc
add
inc
shr
cmp
lock
and
and
jae
jg
sbb
mov
pop
push
testl
orb
jnp
cmp
call
push
inc
jmp
test
movl
fldenv
andb
inc
icebp
jnp
roll
ficomps
cs
jb
mov
fs
inc
push
add
int3
sub
fldl
mov
stc
roll
stos
test
pushf
add
add
mov
push
clts
mov
pshufw
pop
mov
addl
hlt
subb
shrb
aaa
mov
and
sub
enter
cmp
pop
rclb
or
lret
ret
jecxz
mov
enter
inc
push
xorl
imul
loopne
sub
push
and
xor
pop
push
xor
or
int3
mov
jne
ds
mov
fistpl
ficomps
and
xor
test
push
sbb
rorb
sub
ret
aam
pusha
mov
fs
lret
int3
inc
adc
xor
in
xchg
and
inc
adcb
sbb
pop
or
mov
stos
lock
xchg
jo
dec
rorb
ret
jns
jno
in
repnz
pxor
int3
scas
inc
sbb
xor
jae
bound
or
mov
popa
dec
and
pusha
clc
cli
xor
push
mov
and
fistl
push
inc
clc
movsl
lret
mov
pop
ja
pop
add
test
add
mov
ret
inc
hlt
push
das
cmp
dec
push
fldenv
inc
test
jmp
xchg
lea
xor
stos
scas
dec
push
call
cmpb
out
add
mov
push
icebp
fistps
add
imul
rolb
sbb
decl
inc
roll
shrb
push
adc
enter
or
sbb
mov
push
or
enter
mov
ljmp
lds
dec
sbb
arpl
xchg
cld
icebp
mov
sub
out
mov
cmp
rolb
or
adc
ds
and
push
mov
mov
push
gs
mov
cmp
sahf
adc
lret
or
int
mov
cmpsl
call
push
test
ret
les
add
mov
sahf
add
pushf
cmp
hlt
cmc
cmp
ja
add
into
jno
clc
rcll
shrb
or
push
mov
jno
stos
jne
lret
and
ret
or
adc
std
inc
decl
test
pop
pop
push
call
test
cmp
shlb
aaa
inc
xor
and
add
mov
jl
or
pop
fucomi
or
and
scas
and
pop
popa
sbb
xorb
pop
roll
bound
enter
and
test
ret
jb
pop
mov
push
test
mov
pop
popa
popa
lret
aas
rolb
mov
pop
inc
push
ss
jmp
rcl
mov
push
inc
insl
movsb
lock
sub
xchg
shlb
fmuls
imul
mov
xchg
out
cli
and
mov
sub
sbb
mov
addb
into
leave
rcrb
inc
test
fildll
scas
and
cltd
cli
imul
addl
test
mov
push
push
fidivs
jg
lea
push
call
shr
xor
adc
test
rcl
sbbb
or
mov
shl
jae
mov
shrb
adc
add
jae
sbb
cltd
xchg
mov
inc
shl
mov
xchg
repnz
ret
loop
mov
xlat
sub
pop
sub
sub
inc
js
sbb
ja
mov
jno
xchg
dec
sub
faddl
loopne
jno
call
adc
dec
frstor
pushf
fisubs
push
fsub
addb
xchg
pop
fwait
js
push
jg
icebp
adc
inc
sub
and
ss
mov
lods
enter
push
push
arpl
pop
loope
sbb
out
xor
call
add
push
scas
les
pop
xor
and
pop
psrld
shrl
outsb
cli
mov
repz
add
adc
cmp
xchg
js
xor
loopne
push
mov
je
fdivrl
inc
inc
adc
adc
or
cmp
test
adcb
adc
in
loope
lock
icebp
jo
es
push
sbb
cs
lock
sbb
sahf
or
jmp
push
and
jmp
into
inc
sub
and
fmull
add
pop
test
out
sub
les
jae
gs
les
mov
daa
inc
or
popa
and
aas
add
xor
andb
sub
push
leave
dec
clc
cmpsb
repz
sub
rcrb
into
ret
mov
int3
ljmp
mov
loop
dec
lods
inc
cld
xchg
lods
icebp
lods
mov
mov
loope
push
dec
dec
lret
push
pop
adc
imul
mov
jae
sub
xor
stos
sbb
push
push
call
test
les
inc
sbb
xlat
lock
clc
dec
sbb
ret
dec
or
mov
fistps
sub
cld
add
dec
jb
rcrb
clc
je
and
and
stos
rorb
icebp
or
adc
jecxz
lods
out
sub
dec
loope
and
sub
fisttpl
jmp
fstpl
and
call
fldcw
orb
mov
inc
jne
pop
dec
inc
sbb
mov
fwait
sbb
pop
fcoms
je
sub
xorb
pop
or
mov
rcl
pushl
xor
push
xlat
cmc
and
int3
jg
fcomps
xor
cld
stos
lods
push
xchg
das
push
add
and
stos
jp
adc
or
movsb
cmp
pop
in
jle
inc
icebp
cmp
inc
ret
or
pop
and
fcomip
aaa
stos
mov
repnz
into
in
flds
pop
lahf
pop
fdivrs
aad
add
popa
mov
xor
int3
adc
shll
sbb
inc
push
inc
in
and
lods
shl
shlb
pusha
std
adc
pop
mov
ror
ret
fcoms
or
push
push
imul
call
mov
xchg
rorb
mov
in
pop
bound
in
inc
dec
jmp
gs
sub
insl
mov
cld
jns
add
cmp
inc
arpl
cmp
xchg
cs
pop
dec
xchg
call
or
pop
jne
push
sbb
loop
mov
jg
in
inc
mov
fsts
mov
or
jbe
sub
adc
ljmp
mov
int3
xchg
ret
cmp
mov
lcall
std
push
ret
nop
pusha
jecxz
jmp
das
jmp
sbb
cmp
or
es
adc
push
jecxz,pn
sti
dec
loopne
insl
repz
mov
daa
mov
add
adc
push
je
test
adc
add
adcl
cmpsl
and
xchg
sbb
push
mov
xchg
inc
dec
out
nop
int3
cld
sbb
movsb
cld
shl
pop
aam
into
outsl
addb
fisttpll
js
fs
faddl
roll
push
hlt
cmp
into
dec
inc
jl
sub
sub
xchg
sbb
and
aas
mov
mov
push
xor
xchg
nop
jo
push
jmp
cmp
lcall
out
push
rorl
rorb
rclb
loope
add
addr16
test
icebp
into
jne
fstl
pusha
add
mov
sbb
add
sub
pusha
dec
mov
xor
sti
push
xor
pop
cmp
pushf
mov
pop
xchg
sbb
sub
dec
aam
adc
inc
sbb
mov
test
xor
pop
test
or
xchg
popf
cmpl
dec
sub
movsl
ret
pop
cmp
cld
jns
js
test
sbb
stc
mov
loopne
lret
outsb
dec
pop
add
fdivl
mov
ret
sbb
cmp
fs
jecxz
icebp
insb
std
add
or
lahf
clc
in
test
xor
push
clc
shr
push
mov
rorb
or
inc
pop
dec
loope
cmp
cmp
xchg
out
jno
lods
or
pop
inc
inc
mov
xchg
lock
mov
pop
pop
clc
roll
sti
in
in
mov
aas
sub
jge
ret
push
lods
lea
add
in
jmp
add
daa
pusha
dec
push
push
loop
push
sub
jno
pop
adc
jecxz
out
test
addr16
fs
pusha
cmp
call
stos
test
sbb
sbb
inc
cmp
add
ret
stos
jg
pop
insb
loop
shll
add
sub
daa
pop
repnz
or
dec
in
std
adc
or
enter
sub
das
sbbl
or
sub
push
in
push
add
pop
sbb
mov
dec
inc
add
push
xchg
cmp
test
sub
push
lods
xchg
jnp
or
stos
push
ss
cmp
xor
adcb
mov
rcrb
stc
sbb
arpl
arpl
inc
add
and
lods
and
mov
inc
cmpsb
movsb
pushw
fbstp
test
popa
test
mov
testb
outsl
mov
lods
push
jecxz
and
jg
or
cld
or
sbb
addr16
pop
ret
test
pop
xchg
aas
sub
xor
fidivl
dec
lret
out
push
das
and
mov
icebp
lret
fistpl
mov
mov
incl
sbb
repz
mov
gs
cmp
and
push
jp
xchg
rcrl
dec
dec
xchg
push
mov
in
add
mov
scas
adc
dec
bound
test
mov
mov
sahf
xor
adc
push
cmp
push
aad
lea
push
push
mov
dec
aam
mov
mov
sub
mov
mov
gs
or
in
and
aaa
mov
xlat
jne
repz
in
hlt
je
xchg
call
inc
inc
and
mov
add
cmc
pop
mov
sbb
mov
jecxz
push
sub
outsl
mov
sub
test
xchg
pop
lods
test
inc
loopne
dec
ret
ja
bound
cmp
es
sbb
dec
fadd
sbb
or
mov
ficomps
dec
clc
daa
xor
test
ret
push
pushf
incb
inc
adc
ficoml
adc
in
inc
mov
dec
pop
add
in
ss
scas
rolb
cld
add
jmp
and
inc
mov
lock
push
mov
notb
adc
or
movsl
mov
push
in
or
cmpsl
lods
pop
shrb
and
sarb
lret
add
lock
scas
pushf
les
addb
lock
out
ret
sub
mov
jecxz
and
push
or
popa
lods
sbb
scas
int3
mov
movhps
ss
push
in
stos
aaa
jecxz
add
test
adc
push
movsb
dec
rcll
cmp
mov
and
pop
hlt
push
pop
or
pop
add
mov
pop
mov
mov
imul
sbb
pop
push
sbb
sahf
add
push
fidivs
repnz
adc
outsb
enter
cmpb
inc
outsl
add
lret
push
dec
gs
cmp
xchg
and
sbb
movsb
stos
rorl
lahf
adc
mov
dec
adc
add
mov
xlat
and
inc
sub
xor
push
mov
sub
pushf
inc
sub
push
pusha
popa
test
lret
cld
push
and
add
adc
pop
dec
stos
and
sti
jb
divl
push
adc
mov
and
xchg
inc
xchg
xchg
adc
aad
xor
cli
ljmp
xchg
or
mov
push
sub
lcall
call
xor
sub
out
dec
lret
xor
stos
jo
mov
push
add
xor
data16
or
lcall
pop
add
mov
dec
adc
mov
das
clc
cmp
add
mov
je
fnsave
push
mov
xor
pmaddwd
push
or
aas
shlb
outsl
out
push
dec
adc
outsb
or
test
mov
frstor
adc
xchg
and
add
sub
xlat
mov
cmp
fildl
inc
sbb
mov
fldcw
lea
push
push
mov
or
adc
mov
leave
ret
adc
add
sub
xor
pop
aam
jg
jmp
in
mov
adc
mov
lret
jmp
stos
pop
stc
push
rcr
pushl
sbbl
bnd
out
mov
and
call
imul
adc
cmpsb
push
cmp
pop
mov
movsb
jae
mov
adc
adc
shll
mov
fcmovb
fildl
stc
lods
push
addr16
repnz
out
aas
lock
pop
ficoms
push
sub
stc
insb
add
and
iret
or
inc
and
inc
clc
scas
and
mov
lea
add
shl
lcall
push
or
adc
sti
fisubl
test
in
xchg
adc
sbb
jae
mov
in
ret
dec
test
pop
adc
and
cmp
les
mov
inc
push
pushf
mov
inc
mov
add
mov
or
imul
dec
fadd
test
js
rcrl
cmp
jns
addb
push
cmp
test
icebp
mov
adc
dec
lock
and
mov
imul
clc
and
inc
das
dec
xorb
mov
lret
pop
hlt
lds
add
sbb
orb
lock
loopne
jmp
leave
insl
sub
in
stc
or
sbb
push
lock
push
imul
sbb
sub
and
or
xchg
and
sarb
sbb
jo
pextrw
sbb
adc
clc
mov
cmc
push
fidivl
lods
mov
add
jno
inc
inc
pop
jno
or
jmp
add
push
pop
mov
in
nop
movsl
gs
and
divb
sbb
xchg
imul
sub
add
dec
jmp
loope
and
rol
or
push
cltd
sbb
add
inc
xor
aad
mov
add
out
loopne
mov
fucomi
pop
jnp
out
xchg
out
arpl
pop
outsl
or
and
inc
popf
cmc
enter
xor
xchg
test
xor
rcrb
inc
and
xorb
insb
lea
push
cmp
or
repz
roll
xor
repz
imul
ds
sub
cmc
push
mov
lea
outsb
jb
dec
adc
sub
jecxz
popf
dec
push
jle
int3
xor
and
and
add
or
and
addb
adc
scas
and
xor
arpl
rorb
fnstsw
jns
pop
call
rcrb
inc
pop
dec
pop
leave
push
pop
nop
or
mov
pop
sub
cmp
cli
mov
ja
cld
sub
adc
adc
lea
ret
ret
lret
leave
js
or
xchg
mov
ret
sarb
lds
mov
lds
inc
loopne
sbb
adcb
hlt
cwtl
insl
sbb
jb
add
sub
or
or
mov
fsubl
pop
gs
add
pusha
mov
or
fildl
push
push
push
sub
push
call
inc
cli
out
cmpsl
inc
push
rolb
fiadds
int3
mov
add
inc
add
ret
add
xchg
xchg
mov
les
jp
jle
in
hlt
shrb
and
scas
inc
or
and
in
cli
xor
cld
pop
jge
or
je
paddb
sub
popa
repnz
jne
popf
and
ror
xchg
jmp
push
repz
or
mov
cmp
dec
pop
dec
loopne
dec
pushf
hlt
call
bound
stos
inc
test
adc
or
lret
mov
push
inc
aam
sub
cmpb
mov
adc
js
or
test
pop
add
add
xlat
mov
sub
incb
in
rcrb
cmp
dec
int3
mov
js
mov
popa
add
loopne
sub
les
inc
mov
mov
jecxz
syscall
cmc
sbb
enter
aas
ret
dec
push
jp
test
push
pop
shlb
test
inc
mov
in
dec
sbb
xchg
sbb
mov
dec
orl
xchg
xchg
pop
hlt
pop
inc
out
je
mov
insl
mov
aaa
add
test
and
lods
push
add
inc
mov
add
bound
insb
hlt
mov
repz
add
lds
sub
inc
dec
mov
jns
in
icebp
test
rolb
es
xor
mov
roll
and
lock
xchg
inc
and
clc
push
pop
std
add
scas
outsl
aam
or
pop
adc
cmp
gs
xchg
add
and
sub
adc
cli
or
add
outsl
xchg
inc
sub
jnp
xchg
sub
push
lahf
cmc
movsb
mov
sarl
movsb
pop
or
lods
test
push
pusha
orl
out
clc
add
mov
lds
dec
push
stos
sahf
mov
cltd
cwtl
ret
sbb
in
rcll
dec
inc
int
pushf
inc
cs
cmp
or
sbb
nop
dec
sbb
enter
xor
outsl
aas
sub
mov
popf
test
repnz
addr16
cmp
pop
call
sbb
loope
ret
and
push
pop
scas
insl
or
inc
push
pop
idivl
jo
iret
ja
lea
mov
lret
push
add
sbb
in
xchg
or
lret
mov
fdecstp
lea
pop
pusha
stos
inc
sbb
imulb
clc
sbb
repnz
adc
push
cmp
jecxz
cltd
lret
adcb
sub
lock
pop
cmp
add
in
je
dec
loop
popf
fcompl
mov
sbb
jne
inc
cwtl
mov
inc
dec
mov
jne
xor
adc
je
in
sbb
xchg
sti
xor
adc
xor
shl
ljmp
ja
nop
or
jg
insb
cld
pop
xor
ret
inc
scas
popl
add
or
pop
test
scas
pop
pop
je
mov
fwait
ret
mov
fistps
cmp
or
push
sub
pop
orb
jl
adc
xchg
rcr
push
mov
jg
or
mov
mov
mov
mov
adc
fcomps
mov
dec
and
sub
popf
fildll
outsb
add
push
les
mov
out
mov
mov
mov
shl
jge
or
add
mov
push
adc
sbb
and
fsubrl
cmp
xchg
jmp
loopne
call
lret
mov
and
push
mov
pop
out
mov
jno
pop
lods
scas
push
push
cmp
cmp
sbb
push
pop
cmp
cs
insb
loop
aad
icebp
xchg
fs
ja
and
sbb
push
fadd
push
callw
or
and
imul
loopne
jmp
cmp
out
or
inc
jb
je
jg
fs
and
test
popa
cmp
add
dec
test
jp
push
rorb
int3
inc
scas
and
std
test
scas
jb
fsts
inc
sub
inc
dec
xor
inc
lret
incl
mov
dec
outsl
test
shl
sub
loop
mov
roll
pop
hlt
dec
jbe
or
add
ljmp
mov
cs
dec
pusha
testl
negl
rcll
pusha
js
rolb
imul
mov
pop
jbe
mov
add
shll
jle
movsb
push
loopne
pop
and
xor
mov
enter
sbb
cmpb
mov
sbb
adc
rcrb
sub
icebp
lret
ljmp
test
or
aaa
pusha
and
push
and
inc
push
imul
xchg
fsubp
mov
sub
ret
sub
pop
add
fmul
enter
lock
mov
repz
rorl
xor
add
jmp
ret
xor
repz
pop
jo
mov
jae
bound
jl
out
cld
fsubl
xchg
jae,pn
call
pop
mov
dec
lock
imul
cmpb
cwtl
ficoml
fists
sbb
sbb
ljmp
icebp
add
and
mov
aaa
xor
or
test
loope
adc
pop
xchg
shrb
jno
sbb
sub
cmp
scas
cmp
lret
sbb
inc
xor
push
jo
loope
push
xor
xor
rcr
push
mov
lock
shlb
and
mov
sub
mov
mov
lea
and
sbb
push
pop
shll
neg
dec
sub
jb
clc
jmp
add
mov
enter
inc
and
lret
sub
in
lods
int
inc
or
stc
test
push
xor
nop
popa
or
test
ficomps
fsubl
loopne
add
xchg
je
rcll
add
xor
cmpsl
mov
xor
inc
ja
mov
shlb
or
mov
repz
mov
push
add
mov
fadds
or
xchg
sub
pop
or
and
popf
dec
adc
push
rcr
jo
push
mov
xor
es
std
push
mov
les
loope
adc
or
add
xchg
mov
adc
enter
call
xchg
lea
push
movsb
ss
mov
fwait
or
add
movsb
das
or
mov
sbb
loopne
test
xchg
pop
sub
aam
ret
add
xchg
rolb
push
add
mov
jb
mov
adc
dec
into
sub
scas
push
aas
dec
mov
push
shr
push
ljmp
shrl
cmp
push
fmull
sub
sti
dec
cli
sti
adc
adc
inc
arpl
clc
mov
dec
fisubl
jecxz
in
cmp
dec
push
inc
xor
ljmp
testb
xor
push
add
sub
insl
push
pop
add
jns
mov
sbb
adc
pop
mov
int
pop
mov
push
inc
jecxz
aas
je
cli
int3
or
dec
movsl
xor
aad
je
adc
xchg
ret
pop
pmuludq
cltd
sub
negl
add
or
xchg
xchg
jle
sbb
push
cmp
add
xorb
and
std
loope
pandn
inc
sub
mov
loop
push
xchg
dec
aad
subl
and
daa
ret
pushf
cmp
adc
add
shrb
nop
jns
add
xor
push
pop
adc
out
adc
mov
test
adcb
cmp
and
pop
rcrb
test
jbe
sub
push
addr16
inc
cmp
jl
xor
inc
or
push
mov
cmp
mov
in
ss
popf
mov
sti
call
add
icebp
and
jmp
fimull
mov
inc
pop
lret
rclb
call
mov
mov
rorb
mov
in
int3
sbb
ss
cld
add
dec
cld
mov
adc
aam
out
call
xchg
jmp
add
pop
lods
inc
sbb
push
pop
cmp
ffreep
cmp
ss
lods
int3
cmpb
dec
xor
test
xchg
out
add
jle
mov
in
dec
les
js
and
fistps
xor
add
icebp
and
or
lods
das
fsincos
lods
xor
push
mov
push
cmp
adc
rcll
and
test
adc
cmp
xchg
add
movsl
push
std
les
sbb
nop
sbb
std
xchg
fcoms
cmpsb
and
add
add
mov
xor
dec
imul
push
push
lahf
arpl
cwtl
dec
mov
sub
mov
arpl
lock
cli
outsl
imul
outsl
xchg
cld
inc
and
je
adcl
jle
lret
out
xor
push
push
cli
push
inc
add
sbb
sbb
call
add
xor
inc
jmp
call
and
pop
mov
add
mov
fldl
adc
dec
shlb
xor
fbstp
test
ss
stc
cmp
and
xchg
ja
cmpsl
mov
jmp
and
movl
fnstcw
clc
and
add
adc
dec
int3
mov
jle
sub
daa
xchg
mov
into
adcl
test
xchg
pop
mov
mov
rcrl
inc
mov
xor
adc
loope
mov
cmp
inc
lods
xor
mov
test
ss
or
cld
inc
and
pop
sub
add
sbbb
add
or
loop
lods
mov
xor
fbstp
cwtl
jg
fs
adc
ret
mov
xchg
test
sahf
sarb
popa
lock
dec
cmp
adc
fdiv
and
push
xchg
or
ficoml
pop
sbb
pop
enter
rclb
lea
jmp
pop
test
and
enter
add
xor
push
mov
cmp
fsubs
dec
adc
dec
outsb
dec
jb
clc
pop
add
push
ljmp
mov
push
ja
mov
jmp
push
or
clc
adc
adc
push
pusha
xchg
movsl
das
jp
push
mov
sub
push
loope
push
psubb
inc
sub
sbb
jle
mov
xlat
lret
pop
sbb
shr
movsl
test
jecxz
push
pop
rcrb
sbb
cmpsl
hlt
outsl
ss
sub
je
sub
push
xchg
or
out
push
mov
mov
clc
cmp
cmpsb
pop
mov
and
push
pop
test
fimull
push
mov
add
mov
in
lock
xchg
out
inc
add
outsl
xchg
in
cmp
das
jp
adc
mov
fstpl
pop
lea
dec
and
ja
stos
test
test
pop
movsl
inc
xchg
mov
sub
push
add
pusha
scas
fsubr
push
adc
xchg
mov
aas
fisttpll
mov
hlt
out
adc
mov
push
iret
rol
les
mov
xchg
mov
fbstp
popl
xchg
mov
mov
ret
push
cwtl
or
add
gs
movsl
aas
mov
push
mov
push
shrb
bound
mov
and
loope
xchg
adc
inc
movsb
lock
or
andb
jmp
in
xor
and
lods
test
pop
sahf
or
ret
mov
addr16
ret
je
clc
xchg
xor
lock
push
loop
in
pusha
inc
outsl
jno
push
pop
shlb
rclb
iret
mov
mov
dec
adc
or
adc
add
add
pop
xchg
xchg
or
fiadds
jg
mov
add
xor
xor
mov
rep
ud0
jb
mov
dec
ja
mov
add
nop
lock
fisubrs
inc
sub
repnz
pusha
cmp
sahf
cli
inc
popa
rorl
dec
int3
out
cltd
leave
inc
dec
cli
aaa
adc
add
loopne
pop
in
enter
mov
jns
jb
call
sbbb
dec
add
in
cli
xlat
rcr
imulb
rolb
pop
jmp
add
adc
and
inc
loop
daa
movsl
in
fildll
addr16
test
dec
or
xchg
push
jno
sbb
xchg
or
fstpt
inc
sub
out
ret
add
dec
out
scas
faddl
pop
or
jg
arpl
sti
sbb
add
lods
jp
sbb
inc
cmpsl
push
pop
push
or
and
cmpsb
lret
clc
dec
loop
adc
nop
ficoms
sbb
jp
add
cmp
sub
mov
inc
adc
fmull
cs
ljmp
push
adc
inc
loopne
adc
xchg
xchg
cmp
sub
jmp
cmp
or
dec
mov
jbe
lcall
imul
out
aam
jg
mov
fisubrl
dec
mov
sbb
fcoml
jp
dec
and
clc
cmp
adcl
je
push
outsl
je
fisubl
jne
sub
jmp
xor
xchg
xchg
sbb
das
scas
es
push
incb
pop
add
movb
negb
or
add
inc
sub
inc
test
repnz
ljmp
mov
loop
sbb
add
mov
cmc
daa
sbb
and
shlb
dec
mov
and
and
shll
mov
adc
movsl
and
loop
sub
stc
movsb
ror
push
test
scas
sub
outsb
jecxz
inc
push
roll
mov
sub
inc
sbb
jp
sub
loop
jp
loope
or
cli
ret
xchg
inc
push
add
inc
add
dec
and
mov
loopne
push
xchg
imul
sbb
inc
int
mov
push
push
fs
xchg
cmp
jecxz
push
movsb
and
insb
push
inc
mov
sub
add
sub
rcrl
jg
sbb
mov
and
rorb
xchg
jl
ja
jle
clc
enter
pop
sbb
subb
lcall
pop
push
popa
add
add
lods
sbb
filds
loope
add
mov
push
cmpsb
xchg
pop
shlb
adc
fs
mov
clc
aas
sub
push
mov
dec
cmp
dec
cmpsb
push
cmpsb
les
lret
fisttpll
push
dec
and
inc
or
sbb
adc
mov
mov
loop
mov
add
cltd
xchg
cmp
xchg
push
cmpl
jmp
loopne
repnz
fcomi
mov
xor
mov
lcall
push
loopne
icebp
daa
xchg
das
movsl
add
sbb
inc
sub
adc
xor
add
push
imul
loopne
jae
or
sub
mov
cmp
inc
sub
ret
lcall
lock
inc
xchg
push
mov
arpl
and
mov
lret
sbb
xlat
clc
in
dec
sbb
add
sbb
cmpxchg
dec
fidivl
fimuls
mov
or
inc
lods
rol
hlt
xorb
push
push
pop
xchg
mov
int
aaa
mov
lods
dec
daa
jno
mov
call
iret
fs
mov
dec
mov
ror
rol
cmp
or
mov
dec
jge
testb
pop
mov
sub
stos
addr16
jl
or
fcompl
push
add
push
push
sbbl
stos
mov
or
mov
mov
or
cld
jb
clc
mov
fdivrs
dec
subb
scas
loope
repz
popa
popa
fidivrl
je
adc
adc
xchg
bound
cmpsl
mov
dec
inc
lock
pusha
xchg
test
mov
mov
inc
call
mov
adc
fstpt
pop
cmpsl
adc
and
mov
cmc
arpl
pop
pop
test
dec
test
pop
fstps
add
sub
and
scas
ret
ds
mov
push
jmp
sbb
jnp
xor
sub
dec
jmp
push
and
sbb
js
add
pop
dec
cltd
insl
sbb
out
lea
adc
or
xchg
out
cmp
je
inc
dec
or
lahf
cmp
jmp
push
mov
scas
adc
jle
or
out
cltd
mov
jecxz
mov
push
call
push
jp
stos
xchg
scas
jae
arpl
or
xor
cli
inc
stc
into
sub
cmpsl
mov
mov
mov
test
mov
movsb
xchg
inc
xlat
push
rorl
pusha
and
adc
popf
cmp
mov
insl
add
aaa
popa
sub
mov
jno
hlt
jp
lock
pop
testl
mov
call
jo
xor
dec
mov
or
adc
or
out
adcb
pop
jecxz
adcl
mov
mov
push
mov
adc
es
jle
or
push
mov
dec
inc
xchg
sbbb
lcall
out
dec
call
cmp
add
dec
cltd
jecxz
add
mov
repz
fistps
mov
dec
cmp
out
jl
pop
sbb
lret
lcall
hlt
mov
dec
insl
sub
scas
enter
and
inc
andb
add
adc
add
xor
and
xchg
pop
pusha
out
xchg
push
sbb
adc
or
inc
pop
imul
push
test
js
aaa
jp
adc
and
lret
icebp
fsubrl
xor
jecxz
inc
pop
or
lea
xor
and
mov
add
mov
adc
movsl
mov
pop
jbe
sbb
aam
mov
pop
lea
lret
sbb
adc
sub
out
or
or
dec
int
push
add
sub
in
adc
stos
add
leave
lods
sub
out
hlt
movl
iret
xchg
adc
and
and
inc
mov
or
popf
insb
or
clc
rorb
mov
aaa
movntps
cmp
mov
insl
insl
aad
test
sub
sbb
addr16
push
sub
iret
jg
pop
adc
push
push
loop
add
cmp
out
xor
mov
xor
mov
js
xorb
pop
lahf
mov
inc
subb
jmp
cmp
xor
roll
les
fldenv
pop
and
pushf
sub
pushf
popa
stc
pop
add
test
setno
popf
cwtl
cmpsl
xchg
call
fld
push
cmp
jne
lcall
jmp
cmp
push
and
dec
mov
jle
sbb
jmp
or
jmp
or
call
mov
mov
call
mov
mov
rcll
adc
rorb
mov
fldt
or
mov
ja
js
mov
out
and
inc
xchg
xchg
cmp
push
pop
push
mov
test
mov
daa
dec
add
xchg
aam
iret
rcrb
pop
sbb
addl
jmp
sahf
into
pop
mov
adc
and
cmp
add
mov
add
jmp
add
add
and
push
in
add
rorl
or
sub
fdivs
in
jg
shr
sbb
xor
sbb
outsl
mov
push
push
popa
add
outsl
xlat
insl
sub
stc
clc
daa
mov
loope
rclb
loop
xchg
cli
out
cmp
dec
xchg
push
sti
pop
xchg
inc
or
cmpsl
iret
or
loopne
gs
mov
add
rorb
sub
add
sbb
pop
movb
dec
ret
xchg
xorb
push
insl
mov
push
insl
loope
and
lea
adc
xor
mov
pop
das
xchg
mov
mov
test
cmp
mov
movsl
add
es
sahf
cltd
mov
lcall
out
cmp
push
sub
aam
inc
ss
adc
jnp
inc
jb
xor
rorl
mov
fadds
xchg
aam
xchg
inc
fisubrs
iret
flds
mov
push
aaa
fiaddl
fs
add
and
es
mov
loopne
mov
push
inc
xchg
test
or
lds
das
shll
dec
inc
sub
dec
stos
gs
sbb
sub
mov
dec
mov
int
xor
into
xchg
ds
popl
fistl
lret
inc
js
fucomi
popa
js
cmpsl
dec
iret
bound
mov
xchg
and
or
mov
xor
loop
sbb
jg
adc
mov
mov
jecxz
fadds
dec
add
popa
das
sbb
add
fsubrs
xchg
ret
andb
xor
pop
fiadds
rol
movl
xor
gs
movsl
sbb
jno
xor
stc
jl
movsl
dec
add
push
mov
call
xchg
sbb
mov
jmp
pop
xor
iret
or
dec
and
cs
pop
leave
movsb
and
xchg
gs
dec
xor
inc
jmp
push
xor
pop
icebp
jmp
add
incl
adcb
jo
jmp
jg
pop
mov
pop
xchg
mov
or
fnstenv
add
add
inc
cwtl
ret
nop
sub
add
decl
idivl
push
pop
mov
adc
jg
jg
mov
sub
jecxz
mov
add
sub
js
cmpsl
mov
or
fldt
incl
sbb
sti
add
add
add
mov
mov
adc
mov
mov
or
aad
add
sahf
xchg
pop
outsb
mov
add
add
std
jg
fisubrl
cld
pusha
rcr
mov
test
out
bound
push
add
imul
in
in
or
add
andl
xchg
add
adc
lret
inc
aam
push
jo
add
add
js
mov
test
loopne
incl
jecxz
add
xchg
aad
les
pop
subl
push
sub
adc
add
or
movsb
jno
adc
repz
mov
stos
stos
add
xchg
out
xchg
xbegin
insl
xchg
movsb
mov
aaa
arpl
mov
inc
incl
popl
add
push
and
add
add
loopne
mov
xor
or
in
add
outsl
add
xchg
xor
iret
outsb
push
xchg
mov
fwait
mov
adc
movsb
jb
popf
jo
and
xor
and
add
leave
andb
mov
inc
push
orl
outsl
sahf
jmp
dec
xor
sbb
mov
or
xorl
cmp
jno
mov
xorb
mov
data16
fadds
sarb
je
in
add
fistps
xor
xor
or
inc
add
in
aaa
pop
mov
sti
leave
jmp
fcompl
sbbb
add
jmp
push
pop
push
dec
ljmp
dec
push
add
out
add
add
and
xchg
aam
loop
data16
outsl
jle
add
and
xor
mov
mov
sbb
ljmp
decb
add
add
loop
mov
jo
inc
add
cmp
pop
shlb
es
cwtl
mov
vcvtpd2psx
fs
dec
inc
inc
in
mov
push
cmp
cld
jo
xchg
js
incl
dec
add
loopne
sub
adc
aas
pop
cmpsb
outsb
mov
int
jg
fbld
sub
xor
mov
lcall
and
aas
dec
mov
idiv
add
test
cli
sbb
mov
call
inc
xchg
pop
ret
aam
xlat
mov
sub
out
pop
clc
push
aaa
enter
loope
jge
sbb
fadds
in
mov
mov
adc
push
push
and
enter
push
cld
out
push
push
je
mov
lret
lock
sbb
aam
push
std
test
add
cld
add
pusha
sbb
mov
or
pop
dec
decl
push
pop
stc
xchg
int
add
mov
mov
cmp
outsl
es
add
pop
clc
pop
inc
outsl
dec
fisubrl
mov
cmpsb
lea
call
fdivr
shll
jnp
fdivrs
insb
add
jmp
or
push
push
pop
inc
in
cmpsb
and
dec
inc
mov
or
sub
insl
jnp
pop
test
xchg
or
or
or
dec
sub
cmc
cwtl
loope
pop
clc
or
sbb
rclb
pushf
adc
pop
sub
aad
fsubrs
xor
pop
cmpsb
scas
pop
or
fldl
lods
xchg
in
pop
dec
test
inc
andb
std
cs
ss
pop
jae
fmuls
in
add
adc
cld
out
or
imul
mov
inc
stos
mov
sub
ret
inc
fildl
add
push
sti
cmp
es
sti
pop
push
les
add
add
mov
les
push
dec
movsb
les
xchg
and
push
pop
sbb
jno
pop
cwtl
jbe
pop
add
loop
les
test
fisubrs
std
mov
rcrl
mov
scas
or
cld
in
add
enter
add
add
push
inc
lock
xchg
mov
fwait
jg
outsb
push
and
cmp
mov
cwtl
push
adc
jg
sbb
inc
cwtl
shlb
imul
push
dec
mov
xor
add
add
push
cmp
sub
fcmovnbe
xlat
or
xchg
inc
or
jmp
sti
mov
scas
jl
cmpsb
or
mov
add
insb
or
mov
xchg
loope
inc
sub
sti
incl
fadds
pop
call
in
xchg
js
cmc
and
push
pop
pusha
sbb
mov
gs
pcmpgtb
inc
add
and
add
inc
fdivs
cmp
call
dec
int
pop
mov
inc
pop
jno
inc
ss
sbb
push
insl
and
cmp
push
int3
push
in
or
hlt
je
sarb
xlat
inc
repnz
imul
dec
ljmp
xor
rcl
dec
mov
lock
daa
scas
mov
mov
testb
rol
adc
cmp
xor
je
sbb
outsl
jg
cmp
mov
add
xor
scas
pop
f2xm1
or
xor
mov
sub
ss
push
push
pop
mov
add
cmp
mov
cmp
push
xchg
and
loop
fisubs
xor
out
lcall
lahf
dec
add
add
outsb
push
rorb
aaa
jl
inc
test
mov
pushf
pop
cmpsl
mov
sbb
adc
ja
mov
stos
sub
dec
test
and
movsb
sbb
mov
mov
sub
das
ds
mov
addr16
xor
es
pop
jo
inc
cwtl
mov
push
mov
mov
and
js
adc
mov
daa
movsb
sarb
popf
scas
mov
cmpsb
rcrl
cli
push
sub
scas
mov
push
xchg
movsb
cltd
mov
ret
jg
add
xchg
cld
push
mov
lds
decb
cmpsb
and
jbe
cltd
push
and
call
jg
cli
cwtl
pop
scas
test
mov
inc
iret
xor
lret
mov
add
testl
std
test
daa
int
sahf
xor
jg
shrl
mov
aam
dec
sub
insl
fiadds
xorb
jmp
mov
xor
sub
push
lcall
out
jg
push
je
ret
aaa
lret
or
sbb
das
clc
pop
xchg
lcall
sub
inc
jecxz
fdiv
incl
data16
dec
sbb
test
sub
inc
push
loop
add
sti
sbb
add
fwait
jg
mov
je
and
mov
hlt
clc
pop
icebp
in
xchg
ret
fxch
call
cli
push
shlb
jg
add
sbb
jl
inc
push
mov
mov
cli
inc
mov
ljmp
inc
add
das
insl
jbe
xor
jge
lea
mov
push
adc
dec
mov
pop
mov
add
adc
xchg
push
jle
enter
incb
dec
bnd
js
sbb
add
mov
push
rorl
pop
or
add
or
data16
jbe
es
out
add
mov
or
mov
xorb
inc
sub
xlat
ja
rorb
xor
outsb
dec
or
lret
movq
adc
and
add
imul
fbstp
mov
sub
loope
iret
dec
jmp
fisubrs
or
inc
adc
pushf
add
pusha
lahf
jg
xor
test
mov
and
mov
pop
pop
adc
hlt
xchg
push
mov
mov
lods
stos
loope
lock
pop
xor
sti
clc
or
pop
pusha
arpl
add
stos
stos
add
imul
xchg
and
test
roll
adc
and
jecxz
mov
andb
sbb
and
pop
cmp
mov
cmp
mov
pop
add
inc
add
jl
jg
adc
or
inc
fstps
cmp
mov
gs
cltd
ret
dec
sahf
pusha
mov
push
add
inc
push
outsl
adc
add
adc
cmp
mov
bound
dec
adcb
inc
mov
dec
dec
outsl
mov
test
popl
mov
rol
sahf
inc
adcb
dec
lods
add
add
loopne
cmp
cmp
popa
arpl
cmp
lret
out
mov
sub
je
add
clc
out
pop
nop
or
cmp
gs
fsubs
fildll
dec
adc
mov
inc
push
or
cwtl
outsl
mov
call
mov
stos
push
xchg
add
cmp
xor
jb
fcomip
inc
cmp
ds
jo
pop
inc
lret
negb
iret
xor
inc
leave
cmp
loop
sbb
pop
and
pushf
inc
cmp
inc
sbb
sbbl
add
push
add
clc
push
sub
mov
jb
fstpt
pop
sbb
xchg
mov
or
sub
repnz
cmpl
inc
int
out
cld
xchg
xor
cmp
add
or
push
adc
mov
loope
inc
dec
mov
shll
ffreep
adc
xor
add
lods
adc
incb
fs
jle
sbb
inc
sbb
fwait
inc
enter
jl
mov
and
inc
sbb
add
fistpll
inc
or
mov
push
push
pop
leave
iret
add
mov
mov
icebp
ja
and
pop
add
sti
inc
outsl
jle
cmpsl
imul
xor
pusha
mov
stos
sti
add
inc
ss
in
xor
mov
add
pop
xchg
jle
mov
das
mov
in
sahf
ret
sub
mov
jmp
inc
xchg
pop
xchg
inc
push
lret
pop
bound
pop
adc
or
xor
ja
mov
test
aas
push
daa
adc
mov
push
inc
sbb
ror
mov
add
cmp
das
les
add
jge
fcompl
std
jmp
je
rclb
mov
dec
dec
sti
das
mov
dec
sub
push
mov
sbb
lock
push
and
cmc
call
call
es
pop
mov
gs
aas
cmp
rclb
in
cmp
lock
mov
call
int3
dec
add
in
pop
xor
xchg
mov
sub
push
shlb
in
cmpsb
push
adc
adc
sbb
inc
adc
sub
mov
pop
movsb
inc
shlb
pop
xchg
xchg
lcall
add
adc
lea
outsb
push
pushf
adc
sbb
jp
inc
jg
fdivr
imul
bound
mov
add
sti
mov
pop
aam
add
push
pop
mov
add
cmp
push
mov
andb
negl
dec
adc
mov
mov
add
inc
pusha
mov
test
ja
mov
inc
jmp
or
dec
adc
fiaddl
and
shlb
nop
loop
adc
repnz
sbb
inc
cmpsb
xor
fxch
push
add
add
sbb
xor
jae,pt
les
mov
mov
popa
aam
enter
aad
les
or
or
into
dec
into
xor
or
sub
push
mov
push
cmp
es
fwait
cmpsb
add
loope
rcrl
clc
dec
mov
jbe
outsl
mov
push
clc
push
xchg
push
sbb
call
cmp
push
sub
jb
xlat
outsl
sub
push
fcoml
mov
cmpl
mov
add
imul
test
call
ret
roll
lds
nop
fwait
or
or
add
mov
xchg
add
in
push
lds
ljmp
add
mov
inc
mov
or
ljmp
call
pop
ret
icebp
mov
fnsave
loopne
push
test
adc
mov
dec
test
add
mov
movb
aas
push
adc
push
push
hlt
negb
xchg
lds
mov
dec
test
aas
mov
inc
ja
and
push
insb
test
adc
push
mov
jle
test
inc
xchg
in
loopne
push
lods
movsb
ss
fwait
outsl
mov
xchg
shll
mov
inc
inc
xor
pusha
rcll
cmp
lret
nop
scas
mov
xor
sbb
cmc
aad
popa
in
mov
cld
call
xor
dec
dec
in
xor
scas
jp
ret
stos
or
js
mov
leave
add
cli
push
or
and
ds
test
push
testl
lcall
add
mov
sahf
add
xchg
shrl
mov
xor
lcall
outsl
cmpsb
negb
mov
jecxz
icebp
fists
pop
or
imul
andb
pop
add
mov
jle
js
stc
sub
jbe
mov
jge
cmp
sbb
js
sub
outsb
cmp
push
inc
hlt
xchg
adc
outsl
jo
mov
out
bound
cmp
ljmp
mov
mov
inc
add
stos
cmpsl
add
pop
jnp
inc
sbb
xor
sbb
bound
mov
dec
mov
roll
add
out
dec
pop
pop
and
inc
add
das
in
push
imul
stc
data16
jb
stos
mov
je
stos
mov
out
sbbb
shrl
pusha
xlat
aad
mov
pop
scas
loop
jle
cmp
mov
sbb
xlat
aas
xor
call
mov
dec
outsl
fmull
out
jg
scas
cld
decl
jns
movb
vmread
xchg
aaa
push
xor
repnz
jb
dec
rclb
jno
mov
pushf
pop
js
mov
xchg
pop
clc
lcall
lods
not
adc
mov
or
fists
lods
and
jne
inc
dec
mov
and
jno
out
push
xor
int3
mov
arpl
ret
shlb
jo
js
test
dec
mov
sub
sbb
xor
lods
sahf
add
pop
ret
fnstenv
cmpsb
jmp
sbb
ss
xor
dec
insl
cmp
dec
ret
cmpxchg
or
subl
add
subb
xchg
xchg
inc
xchg
xor
add
cld
movl
push
inc
adc
stos
cmp
sbb
and
ds
pop
into
add
and
clc
add
int3
cmc
sbb
lock
jl
xor
sub
scas
das
sbb
insl
xchg
mov
mov
jb
les
mull
mov
fbstp
mulb
xor
push
jb
mov
jecxz
xlat
into
cmp
push
push
sub
mov
out
push
data16
cmp
stos
lcall
cmp
rclb
cmp
jge
popf
sbb
loop
mov
add
js
imul
pop
aam
pop
outsb
dec
mov
lea
add
fstps
out
add
pop
mov
pop
push
decl
enter
sub
mov
scas
push
in
test
add
sbb
sub
add
mov
inc
mov
or
rclb
mov
sahf
fwait
addb
jp
pop
push
xor
xchg
and
adc
cmp
cmp
sub
dec
mov
loopne
mov
add
cmp
pusha
sub
fdivl
fcoml
orl
push
sahf
pop
push
inc
fmull
stos
push
pop
leave
add
fmuls
sbb
ss
or
enter
stc
push
stc
xchg
test
dec
jg
decl
cld
cmpl
test
cmpsl
inc
adc
stos
ret
loopne
mov
mov
sarl
nop
cltd
dec
xchg
and
insl
cmp
xchg
pop
test
ss
in
sub
cmpb
lahf
lods
pop
cld
pop
or
lds
pop
xchg
mov
push
adc
mov
sub
xchg
out
sub
cmp
das
push
lds
out
dec
fs
xchg
sub
loopne
sub
nop
adcb
fmull
sub
mov
test
mov
cmp
jmp
arpl
test
fcmovbe
lock
rorb
push
fsub
dec
pop
rclb
dec
add
xchg
repz
pushf
and
or
movups
bound
addb
nop
cwtl
xchg
in
push
mov
incl
mov
in
btr
into
push
mov
stc
or
pop
outsl
outsl
test
fidivs
push
sbb
ds
popa
add
mov
stos
int3
lock
add
sarb
dec
sbb
jle
insb
iret
jno
dec
clc
xor
inc
enter
dec
cbtw
lock
std
sbb
adc
and
cmp
pop
xor
mov
test
lahf
add
or
or
icebp
sarl
repz
mov
ljmp
lahf
mov
shr
mov
icebp
pushf
lods
inc
pop
and
lcall
add
call
or
mov
iret
mov
add
mov
cmpsb
test
stos
popa
js
and
or
sub
push
test
and
ret
loope
loopne
mov
lock
or
cli
out
mov
stos
xor
cmp
mov
mov
sbb
cmc
testb
divl
adc
and
loop
clc
dec
mov
in
pop
mov
push
cmp
jp
lock
js
sub
sbb
clc
pushf
inc
inc
test
cli
pop
popa
call
xchg
aad
pop
ja
and
jge
mov
es
cmp
clc
xchg
jae
mov
xor
xor
push
inc
rclb
pop
dec
push
cmp
jp
enter
jg
mov
dec
stos
cs
push
aam
adc
fs
dec
inc
push
pop
and
decl
pop
and
fwait
jge
rolb
mov
mov
clc
dec
outsb
cli
jno
loopne
scas
imul
popf
jo
scas
mov
loop
pushl
test
mov
shlb
pop
shll
aaa
push
div
xor
adc
pop
xor
test
mov
lret
dec
pop
stos
pop
hlt
mov
pop
pop
cli
movl
mov
xchg
jno
adc
aaa
clc
in
in
call
jo
jecxz
mov
iret
mov
cli
jmp
or
add
in
popa
int3
pop
lods
shl
xchg
cli
mov
popf
push
sti
lret
arpl
imul
and
lret
inc
sub
cltd
or
insl
xor
add
cwtl
jle
pop
xor
xlat
adc
out
rcl
dec
jo
inc
sarb
add
dec
xchg
push
inc
jg
pop
or
jb
fwait
xchg
lock
js
sub
xor
hlt
in
sbb
adc
ret
jae
sahf
loopne
xchg
outsb
sub
int3
push
arpl
imul
pop
inc
sbb
mov
xor
stos
loop
cmp
in
ljmp
dec
xor
push
sbb
insb
popf
cli
add
mov
loop
sbbb
inc
fnsetpm(287
mov
lahf
lock
outsl
jg
incb
lret
rorb
jmp
ret
sub
cmpb
pop
or
sub
and
mov
sbb
jmp
test
dec
mov
incb
mov
xchg
pop
fmull
lret
movsb
lock
jg
cld
sbb
popa
mov
adc
jo
cmpsb
clc
push
lds
mov
cmp
cmp
mov
clc
pop
pusha
vpsrad
cmpsb
loop
clc
outsl
je
out
push
std
mov
faddp
lret
jb
fs
mov
mov
lods
jno
sbb
xor
pop
and
jp
add
mov
add
js
movsl
call
std
pop
add
lret
mov
shlb
dec
cmp
and
insb
mov
loope
add
lock
jnp
loopne
mov
dec
adc
lahf
fcmove
mov
mov
xchg
push
sbb
dec
sarb
jmp
sarl
ret
cmc
lret
mov
push
cmp
nop
fisubrl
repnz
pop
or
lcall
ds
jo
mov
into
or
jb
sub
push
adc
hlt
mov
adc
add
pop
lock
shll
mov
in
and
jne
pop
add
mov
jl
add
push
imul
clc
inc
xchg
out
dec
and
pop
jmp
out
movsl
or
cld
mov
or
inc
pop
dec
je
mov
inc
loopne
cld
ljmp
adc
sub
and
add
call
add
loop
movsb
cmp
and
cmp
enter
incb
mov
ss
adc
push
dec
and
and
inc
jecxz
rolb
add
push
add
in
fwait
icebp
mov
es
add
pop
or
popf
js
sbbl
push
sarb
addl
in
xchg
mov
pop
mov
add
ljmp
mov
andl
xchg
fidivl
out
jp
xchg
mov
les
xor
sahf
dec
loopne
xchg
mov
inc
test
loop
fcoms
mov
cmp
cs
sti
imul
mov
cmpl
aaa
add
mov
jge
int
xorb
or
in
lret
jp
mov
enter
jge
pop
and
mov
xor
test
mov
xor
push
sbb
es
popf
inc
xlat
pop
jle
data16
out
xor
clc
in
push
sbb
int
cmpsl
and
or
shrl
sub
cmp
inc
lock
jno
lods
lods
fwait
jecxz,pt
pop
insl
dec
fbld
mov
hlt
mov
test
out
hlt
xor
cmp
adc
xchg
cli
ret
add
push
push
jle
adc
mov
cmp
jg
inc
xchg
lahf
js
inc
adc
and
and
xchg
movsb
test
xchg
jbe
call
cwtl
cmpl
push
and
fadds
popa
sbb
iret
push
inc
orl
test
cmp
push
insl
ret
jp
fdivrl
mov
incb
loopne
inc
stos
mov
pop
mov
ja
push
xor
sbb
xor
dec
pusha
push
repz
push
pop
in
shll
loopne
sbb
xor
addb
loopne
inc
xchg
test
data16
hlt
ss
pop
loopne
out
mov
pop
mov
sahf
decl
adcb
cmp
scas
ja
xchg
cmp
ja
mov
adc
or
add
nop
sarb
nop
mov
pop
jp
mov
mov
sahf
add
dec
in
push
aaa
mov
jl
mov
lods
adc
pusha
or
sti
dec
std
lcall
add
icebp
cmpsl
xchg
push
mov
inc
xchg
cmp
adc
mov
lret
lea
xor
pop
xchg
test
or
jae
xor
out
out
jg
xchg
iret
mov
loope
push
jmp
dec
out
cmpsl
dec
fnstenv
fsubrs
nop
add
dec
aad
cld
xchg
push
dec
add
jae
sub
pusha
jbe
cmp
and
rorb
pop
data16
mov
mov
mov
or
cli
xchg
xlat
sbb
adcb
or
fs
or
aam
pop
mov
das
sahf
xor
mov
push
sti
sbb
test
int3
dec
adc
test
push
lock
xor
push
mov
mov
xor
mov
mov
addl
mov
into
inc
test
jl
and
outsl
mov
repz
fildl
push
call
fucomip
sub
xor
test
pusha
loope
dec
mov
adc
push
lea
aad
xor
mov
sbb
sbb
addb
jecxz
aam
rolb
xchg
add
cmp
lret
xchg
push
adc
test
or
inc
int
je
sub
ja
inc
mov
lds
mov
into
sbb
rcrl
mov
enter
les
push
lret
loopne
add
mov
movsb
xchg
shl
cmp
stos
push
addl
das
data16
jg
jg
mov
clc
dec
xchg
xor
lods
push
or
pusha
ljmp
aam
mov
push
outsb
in
in
jo
add
push
adc
bound
jns
mov
push
imul
pop
std
les
push
shl
call
jg
loopne
and
or
push
ljmp
add
shll
adc
imul
lock
je
pop
lock
dec
pop
outsl
add
mov
fstpt
cmp
imul
sbb
push
mov
xlat
aas
adc
out
jbe
push
cli
lahf
scas
dec
cltd
xor
jle
iret
les
je
loop
divb
repnz
pop
shlb
sbb
out
clc
jno
out
and
stc
leave
movsb
fs
jecxz
xchg
sbb
xor
bnd
add
call
mov
sarb
jbe
xchg
sub
or
pop
loop,pt
mov
xchg
jg
cs
sbb
movsl
adc
push
dec
mov
add
jle
jnp
inc
incl
stos
roll
adc
test
cld
push
sti
or
and
outsl
xlat
mulb
enter
loopne
cmp
jecxz
lods
popf
mov
loopne
dec
inc
sbb
test
inc
out
imul
lahf
fisubrs
ds
mov
inc
dec
ret
inc
inc
jmp
roll
jp
fdivl
xor
jg
test
roll
cmc
or
scas
stc
mov
push
lock
push
adc
lds
data16
mov
xchg
call
add
lock
stos
orl
push
pop
adc
push
pop
dec
xor
pop
or
xchg
fnsave
loopne
loopne
clc
mov
cmp
shlb
inc
mov
ja
test
sub
stc
ret
pop
hlt
scas
jmp
js
out
lcall
mov
scas
lret
and
lods
in
push
stos
in
mov
mov
lahf
pop
dec
inc
lock
pop
in
jl
mov
cwtl
adc
mov
outsl
dec
lods
or
movsl
int3
and
ds
inc
sbb
out
mov
or
jae
daa
fisttpl
xchg
mov
mov
mov
cmp
add
cli
adc
out
movsb
xchg
sbb
insb
pop
push
add
and
out
sarb
cltd
shlb
push
es
mov
push
jns
js
lcall
mov
xor
and
xor
cmp
sub
sub
add
pop
test
ss
fmul
mov
cmp
push
mov
les
ljmp
adc
js
add
push
mov
mov
cld
gs
out
pop
test
cmpb
mov
jbe
ljmp
loopne
dec
sbb
xchg
and
std
std
mov
push
dec
cmp
testl
call
pushl
mov
es
clc
je
add
jge
pusha
cmpl
cmc
outsb
sbb
inc
js
sbb
pop
pop
fcomip
pop
inc
imul
jle
aam
jns
xor
mov
sbbl
out
mov
idivb
loopne
push
mov
inc
repnz
dec
adc
or
add
mov
mov
stc
mov
mov
fisttpl
hlt
mov
push
jge
mov
sub
mov
addl
mov
and
dec
mov
cmp
mov
xchg
imul
inc
std
lods
fcoms
outsb
xor
mov
add
fdivl
xor
mov
dec
sbbb
imul
pushf
sarl
add
out
pop
or
test
push
in
sar
mov
or
sbb
push
inc
aad
pushf
rclb
xchg
dec
and
push
loope
mov
sti
mov
into
cld
cmc
jl
xlat
mov
push
and
adc
mov
xchg
sti
bound
loope
pusha
in
dec
jns
and
or
stos
call
jae
sub
ss
or
aam
jge
ljmp
orb
mov
imul
popf
add
test
clc
lahf
jle
wrmsr
clc
cmp
das
aas
xchg
fidivrl
stc
adc
ljmp
std
fwait
sub
lcall
jg
arpl
mov
inc
lahf
pop
jg
das
orb
and
cwtl
pusha
and
mov
adc
xchg
and
repz
incb
mov
mov
rcrl
cmp
adc
pop
icebp
das
jle
xorl
das
adc
call
jecxz
inc
adc
stos
xchg
xor
mov
sub
sub
push
push
fcoml
mov
aam
cmc
dec
rolb
out
add
or
mov
or
fimuls
cltd
jmp
mov
sub
scas
mov
pop
xchg
mov
rolb
sbb
xor
ret
int
das
xchg
sub
in
or
into
dec
dec
pop
nop
xor
es
imul
mov
jmp
mov
dec
ljmp
stos
fsubrs
jp
xor
adc
mov
xchg
push
pop
pushf
jae
xchg
movsb
inc
push
aaa
repz
add
cltd
and
add
popa
icebp
cmpsb
push
ror
dec
adc
test
movsb
cmpsb
pop
mov
add
sbb
sub
mov
cmp
push
xlat
mov
jns
mulb
xor
dec
out
std
or
jne
hlt
ljmp
xchg
dec
dec
mov
adc
push
add
icebp
mov
ss
pusha
sub
sub
jecxz
push
cmp
sti
cmpsb
adc
stos
push
fdivr
xchg
jp
ror
test
das
test
stos
mov
repz
pandn
and
mov
adc
xor
mov
outsl
clc
fcoms
xchg
cltd
shll
fildl
cmp
and
and
push
dec
xchg
jo
out
arpl
filds
fcoms
adc
pop
push
fnstsw
les
pop
xor
mov
cmp
lds
outsb
lock
push
ljmp
push
mov
sarl
call
inc
addb
xchg
faddl
aas
rclb
and
mov
test
loop
mov
sahf
push
lahf
inc
or
in
jmp
rcrl
dec
jle
fisttpll
and
std
jg
sbb
daa
and
insl
jecxz
and
and
les
mov
inc
clc
clc
subb
int
loope
inc
loop
jle
out
or
mov
mov
pop
roll
nop
mov
enter
decl
in
jo
inc
enter
jg
or
sub
repnz
pusha
pop
mov
add
mov
xchg
jb
xor
pusha
cld
push
cmp
add
std
add
add
xor
lcall
jl
mov
jo
call
fwait
push
add
int
sub
dec
fucom
inc
insb
idivl
cmp
repnz
mov
push
jl
and
scas
jmp
and
mov
cmc
decl
ror
adc
push
out
sub
add
mov
cmp
pop
sbb
paddb
or
stc
daa
mov
rcrl
pop
jg
divb
mov
sti
outsl
inc
sarb
sbb
or
inc
mov
iret
fisubl
mov
pop
lods
in
mov
push
mov
and
and
or
pop
aam
sub
push
inc
mov
sbb
fdivrs
aam
lcall
outsb
pop
xor
testb
aas
fldl
jl
pusha
stc
inc
add
sahf
aaa
popf
adc
and
mov
repz
data16
cmp
incb
outsb
pop
mov
jo
or
mov
add
daa
fwait
scas
sbb
jmp
test
mov
lret
lods
out
mov
fwait
or
std
cwtl
imul
dec
pop
push
stc
push
and
loop
enter
lcall
andl
roll
test
ljmp
jbe
sarb
add
in
aas
lret
jns
pop
sbb
add
pop
push
mov
inc
imul
lock
cmp
stos
jge
jg
xchg
sub
cli
add
mov
imulb
xor
mov
xor
inc
rcr
and
stos
mov
xor
ss
jo
fucomip
shlb
mov
xor
xchg
loope
lock
lock
jo
sbb
out
mov
add
sub
int
mov
sub
fcmovb
adc
mov
sarl
ret
xchg
outsb
cld
outsb
dec
mov
cmp
and
push
in
outsl
pop
push
mov
xchg
sbb
lds
or
push
pop
sbb
incl
xor
pop
js
mov
incl
and
out
popf
sbb
in
mov
adcl
leave
mov
cli
jg
inc
out
aad
bnd
mov
iret
sub
lds
decl
cs
jo
clc
mov
add
pop
fnstsw
inc
add
sub
call
js
addb
xor
lret
nop
push
add
add
or
sub
test
jecxz
or
mov
pushf
stc
mov
popf
cmp
and
xor
pop
outsb
adc
daa
arpl
xor
popf
inc
xor
jl
pop
pusha
fnstenv
aad
je
mov
ror
shll
and
nop
inc
mov
cld
test
js
xchg
mov
xchg
in
std
or
or
and
inc
insl
dec
imul
rcrl
cwtl
iret
nop
fdiv
outsl
test
lods
cltd
add
scas
sti
imul
xor
inc
cwtl
mov
xor
dec
adc
cwtl
xchg
push
sub
loop
sbb
add
dec
or
mov
cwtl
rolb
dec
popa
xor
mov
icebp
and
dec
or
mov
fmul
inc
pop
lret
mov
mov
add
jo
push
mov
push
add
mov
sbb
add
rcrl
test
int3
inc
or
push
js
pop
sub
sbb
dec
lock
rolb
cli
subl
and
test
sbb
clc
nop
pop
xchg
outsb
and
mov
mov
and
cmp
cmp
xchg
push
test
out
cmp
push
jno
pop
pusha
bound
cli
adc
xor
loope
mov
jl
add
mov
push
sub
pop
clc
adc
add
roll
repnz
push
ficoml
adc
sbb
popa
cmp
hlt
jbe
and
pusha
clc
test
mov
adc
test
mov
fiadds
mov
sub
sahf
sub
xor
stos
add
add
mov
mov
dec
ret
mov
fs
sub
add
mov
sub
xor
adc
pop
sarl
ret
dec
and
icebp
sbb
popf
add
pop
pop
xlat
inc
xchg
adc
add
xlat
push
insb
enter
orb
cmp
fucomip
dec
or
push
inc
mov
add
addr16
xchg
cld
gs
int
aad
icebp
xor
add
mov
les
cmpsb
jb
pop
fcoml
jns
mov
mov
icebp
scas
into
divb
dec
add
roll
sbb
push
test
jo
jle
ret
out
test
mov
popf
mov
aam
sbb
pusha
add
adc
adc
mov
xor
rcrl
push
dec
cmp
push
lock
dec
mov
cmpsb
cld
movsb
hlt
cli
sbb
in
add
push
fs
push
sbb
push
add
jge
mov
mov
pop
sub
mov
outsb
mov
out
loop
insl
popa
add
test
fistps
ret
push
pop
loope
mov
ljmp
shll
mov
pop
cmc
jbe
xor
sub
dec
or
out
fstpt
test
push
xorb
fistpl
lds
jl
add
inc
push
in
pop
lock
rcrl
or
dec
sbb
loopne
xor
or
popa
mov
mov
push
ljmp
pop
aad
mov
and
pop
pop
icebp
incl
imul
xchg
add
inc
sub
push
jle
dec
lock
es
inc
dec
dec
sub
lods
mov
lcall
mov
dec
mov
jo
sbb
fisubs
pop
nop
jne
xor
test
aam
mov
cmp
xor
sti
adc
daa
jp
jmp
clc
xorb
and
or
ljmp
mov
andl
rclb
mov
les
in
into
xor
inc
out
fs
fsubs
mov
std
xchg
xchg
or
inc
and
test
pop
and
mov
jge
sbb
orl
mov
lods
cmp
and
sbb
jg
out
and
cld
sbb
mov
sub
lea
testb
rcll
push
enter
inc
fsubp
pop
std
pop
loopne
jno
adc
add
sbb
fs
add
add
mov
pop
add
sbb
adc
sbb
push
sub
test
loope
jecxz
daa
mov
in
daa
cmp
inc
push
or
enter
cmp
jg
call
sbb
sub
adc
jmp
addr16
cmp
test
add
addb
dec
mov
inc
popa
add
loope
ret
adc
xlat
shl
rorl
adc
lahf
insb
mov
enter
push
clc
out
fisubl
pop
loope
adc
out
add
mulb
mov
leave
fnsave
inc
cmp
sbbb
and
lods
test
dec
popa
jl
loop
idiv
push
shl
sub
jmp
add
xor
jge
and
call
jo
rep
clc
jl
dec
jl
insb
inc
nop
call
sub
ljmp
or
push
adc
in
jns
js
xor
jbe
pop
cmp
xchg
xor
pushf
sbb
fcomps
mov
push
mov
mov
orl
sub
mov
and
test
push
sub
lods
popa
mov
jns
ret
jge
imul
call
lds
adcb
push
mov
rorl
pushf
lcall
push
ljmp
pop
fmul
jne
lods
mov
inc
pop
sbb
sbb
or
push
dec
jge
clc
and
dec
dec
imul
pop
movntps
bound
scas
mov
and
pop
adc
push
popf
clc
adc
cs
inc
inc
mov
or
js
jle
push
sbb
sbb
push
cli
add
inc
jl
sbb
es
mov
jno
stos
or
pushf
pop
pop
sbb
add
mov
jle
mov
lods
mov
push
scas
test
push
push
inc
scas
sbb
push
addr16
notl
sub
push
sub
sahf
cwtl
xchg
lock
mov
cld
mov
push
je
jecxz
je
sbb
dec
adc
adc
sbbl
ds
test
add
cld
dec
lret
adc
movsb
jmp
adcb
push
mov
test
add
nop
inc
push
pop
out
mov
in
rcr
xor
andb
mov
and
rolb
test
sti
mov
gs
or
jle
xchg
pop
outsb
mov
jp
nop
in
cmpsb
bound
xchg
sub
add
mov
or
cmpsl
sbb
fsubrs
jmp
aam
mov
adc
push
adc
sbbl
in
pop
add
inc
decb
mov
pmuludq
cmp
jecxz
gs
push
in
mov
sbb
inc
mov
mov
sbb
enter
mov
fcmovbe
or
and
push
adc
mov
aaa
insb
out
mov
push
and
xor
cmp
mov
and
test
cli
adc
call
cmp
sbb
pop
mov
loop
pop
test
scas
mov
jl
push
insb
lods
push
mov
mov
adc
push
mov
inc
xor
jg
inc
xchg
sub
testb
movsl
push
xchg
adc
test
dec
xchg
jmp
mov
in
lcall
std
ss
mov
xchg
sub
fiadds
or
and
mov
hlt
add
daa
insb
fcomip
in
in
rolb
add
es
mov
decl
sbb
mov
out
sbb
jle
and
sahf
or
add
xchg
cmp
pop
or
mov
jg
iret
roll
pop
incb
push
rcrb
cmp
sar
push
xchg
sbb
push
push
iret
pop
loop
adc
mov
not
push
adc
mov
ret
mov
fimuls
pushf
dec
mov
sub
jmp
out
movsb
push
je
xor
mov
push
xor
notb
es
mov
sbb
push
inc
out
mov
pop
enter
pop
into
dec
hlt
jge
ja
lret
xchg
or
jg
push
dec
rolb
fiaddl
fs
xor
add
pusha
clc
sahf
mov
bound
lahf
push
jbe
mov
cmp
cltd
pop
mov
roll
adc
mov
call
mov
fisttpl
clc
in
xor
bnd
insl
add
dec
das
push
decb
testl
in
cmp
adc
cmpsb
ljmp
mov
ja
fildl
jl
addl
mov
js
mov
push
mov
and
sbb
or
movsb
mov
shll
or
add
lods
add
or
adc
sbb
push
push
jl
jecxz
xor
xchg
ljmp
repz
mov
jb
pop
test
mov
fsubrs
std
and
add
jbe
inc
mov
in
lods
sub
sub
fwait
jbe
rorb
hlt
adc
in
paddw
add
sbb
dec
cmp
jne
icebp
add
bound
xor
call
jecxz
push
push
jno
adc
rorb
mov
sbb
cmpsb
aaa
adc
adc
movsb
bound
std
mov
and
push
test
push
test
ja
add
xchg
adc
add
mov
lret
mov
dec
dec
push
add
sub
xchg
xor
lock
dec
sbb
clc
stos
jbe
fwait
das
ret
sub
popa
fs
add
jecxz
push
inc
mov
jg
mov
jo
add
cwtl
mov
call
ret
in
xchg
test
divb
test
ja
int
jp
sbb
push
mov
jle
ja
mov
mov
call
sbb
push
shlb
fs
ret
js
divb
incl
sbb
das
cmp
sub
jl
or
jle
cmp
pop
mov
xchg
pop
or
and
out
xor
add
call
mov
fildll
fcmovnbe
jle
mov
inc
cmpsb
and
sbb
ret
outsb
xor
bound
repz
outsl
add
das
js
sub
jno
arpl
pop
push
adc
fstpl
cld
and
fmul
repz
and
xchg
jecxz
jg
adc
clc
lea
and
push
frstor
fiadds
loopne
pop
movsl
mov
stos
or
popa
mov
push
loopne
fwait
add
les
mov
cmp
aaa
jo
push
lds
sub
loopne
cli
and
out
adc
mov
out
movsl
sbb
in
aas
pop
push
dec
mul
adc
call
adc
jg
in
or
loope
push
sar
adc
fld
icebp
loope
lahf
jg
jg
xchg
roll
jo
cltd
xchg
in
or
mov
and
hlt
jmp
enter
adc
cmp
cmc
adc
mov
je
decl
ljmp
aas
repz
lea
mov
vsubps
rolb
adc
mov
mov
out
jl
pop
sub
fsubs
inc
cmp
decl
mov
dec
pop
and
int
sub
adc
xor
mov
mov
pop
pushf
mov
inc
aas
adc
mov
or
adc
or
es
cltd
loop
imul
and
cld
shlb
add
jge
sbb
cs
mov
xchg
push
ret
or
imul
clc
mov
and
xor
inc
cli
mov
pop
sub
adc
add
test
jae
jg
scas
fmuls
inc
pushf
lds
hlt
cmpsb
dec
cmpsl
aas
repnz
mov
dec
jp
in
aad
clc
divl
divb
pop
cld
inc
sub
push
loop
mov
adc
xabort
scas
icebp
incl
or
xchg
int3
mov
mov
xchg
cltd
push
xor
lods
dec
mov
insb
inc
lock
dec
call
jns
loopne
mov
shll
mov
fwait
add
and
jmp
cld
out
les
std
stos
cli
in
xlat
dec
jg
pushf
flds
sbb
cmpsb
ja
lahf
ljmp
sub
xlat
or
outsb
xor
mov
stos
jle
out
xor
outsb
push
jb
je
int3
push
pop
jle
cmpsb
aas
repnz
je
inc
inc
out
or
ret
aaa
add
cmp
push
sbb
xchg
movsb
mov
sahf
pop
jp
testl
mov
jo
push
sbb
ret
add
popl
xor
and
fwait
push
cltd
lea
into
movsb
mov
xchg
ljmp
xor
and
loop
cmp
fildl
rorb
pushf
pop
jl
cld
lcall
pop
pop
or
icebp
scas
out
xchg
test
test
add
jmp
aam
lcall
cmpsl
clc
jg
mov
sbbb
or
pop
leave
mov
out
movsb
scas
sub
addr16
mov
lcall
lahf
mov
incb
dec
int3
pop
daa
movl
sub
test
jnp
daa
cwtl
pusha
push
loope
inc
add
mov
mov
mov
hlt
and
mov
and
clc
push
cltd
je
cmp
ja
pusha
jo
add
lcall
adc
aas
push
jbe
mov
mov
std
rcrl
aaa
add
lmsw
mov
mov
jl
xchg
xor
std
fcmove
js
nop
call
add
sarb
insb
in
ret
mov
and
arpl
lods
subl
cmp
sub
mov
jmp
mov
mov
or
jmp
push
pusha
dec
add
or
in
add
pop
dec
cld
inc
pusha
stc
pop
insb
mov
adc
xor
sub
subb
sbb
inc
sbb
or
out
out
jl
fmull
or
fdivr
ss
add
mov
mov
aam
loopne
xchg
add
stos
adc
or
or
mov
mov
and
add
sbb
insb
push
xchg
add
adc
or
inc
push
lock
pop
mov
loope
and
and
mov
fdivl
test
mov
jge
and
push
sbb
pushf
push
push
dec
push
jo
outsl
fidivrl
push
adc
in
loopw
and
fmuls
push
fbld
and
gs
or
loopne
pop
mov
push
fldl
lret
arpl
cld
sbb
jbe
stos
ja
push
ret
push
and
imul
or
outsb
cld
or
add
sbb
js
mov
jg
out
jle
into
push
inc
lret
call
add
insb
outsb
outsl
push
mov
repnz
push
test
loop
lcall
cld
adc
insb
out
add
shlb
sbb
xor
lock
push
mov
cmp
sub
clc
call
frstor
mov
push
imull
mov
mov
dec
nop
je
rcr
xchg
dec
xor
insb
icebp
mov
jo
pop
js
pop
sbb
sub
mov
outsl
jg
mov
adcl
xchg
mov
and
or
shl
push
pusha
jl
rcrl
add
or
jbe
cmp
rorb
test
andb
stos
jo
xchg
adc
pushf
jg
mov
inc
fidivs
fsubs
mov
in
inc
lods
add
jb
repz
dec
sub
sarb
adc
mov
std
mov
das
sub
inc
or
loope
pop
mov
jo
jle
xchg
movsl
rolb
mov
xor
sub
fstp
and
xchg
popl
adc
jmp
xor
aam
fs
cmpl
int3
sub
jnp
stos
addl
out
add
fnstsw
mov
push
xor
or
popf
shl
roll
std
sub
ja
xchg
mulb
cmp
push
aaa
fimuls
cmp
sti
push
imul
xor
dec
lcall
cmpsl
pop
hlt
inc
ja
push
int3
insl
aam
popa
adc
sbb
push
inc
in
loopne
add
in
out
pop
stc
sbbb
adc
movsl
sbb
push
xchg
lods
arpl
js
push
sbb
lea
xor
and
subb
fdivrl
fmuls
in
push
pop
mov
dec
push
inc
inc
jp
push
mov
clc
test
mov
xor
loopne
xchg
daa
adc
fwait
xchg
test
adc
ljmp
push
push
mov
xor
inc
pop
xchg
xor
add
xor
mov
cmpsl
inc
sahf
jbe
xor
sahf
jecxz
mov
mov
fwait
push
inc
mov
repnz
add
xchg
xchg
addl
subb
cltd
outsb
repnz
cltd
xlat
sbb
pop
push
mov
inc
xchg
adc
rcrl
xchg
dec
cs
lock
jno
mov
cmp
rolb
add
hlt
inc
mov
ret
addb
cwtl
cmp
mov
dec
adc
lret
in
mov
fbstp
test
and
cmp
fcmovnu
jo
outsb
sub
mov
or
jg
mov
shrb
test
mov
mov
pusha
inc
or
std
out
int
xchg
xchg
push
test
lods
add
xlat
scas
adc
pop
pusha
adc
andl
sbb
shl
je
add
fsubr
subb
sbb
sub
inc
in
xor
push
push
inc
xor
jl
jp
lcall
lret
mov
sub
or
jmp
sarb
inc
mov
adc
add
sarl
and
stc
push
xchg
enter
dec
lods
shlb
adc
les
inc
call
jo
sbb
cmc
loope
adc
shrl
test
mov
gs
das
int
pop
jge
jnp
lret
jecxz
xchg
es
sbb
dec
jp
or
scas
hlt
rorb
scas
sbb
fwait
out
pusha
rcrl
xor
jo
popa
fst
movl
adcl
test
loop
cwtl
into
mov
xor
out
jno
icebp
mov
out
imul
stos
push
mov
js
gs
hlt
dec
ja
inc
xlat
pusha
je
in
pop
movsb
push
pop
and
cmp
add
or
outsb
out
scas
pop
popa
jp
mov
cld
jb
out
outsb
or
or
fcompl
xor
jnp
xchg
les
inc
push
jmp
dec
rol
stos
mov
js,pn
and
adc
std
shrb
cmp
cmp
add
add
out
push
mov
mov
jo
dec
inc
imul
std
mov
ror
xchg
mov
iret
fdivrs
adcb
cmp
out
push
mov
jl
lods
jae
jg
nop
push
cs
and
cmpsl
inc
test
xchg
inc
das
faddl
orb
sub
mov
call
and
cmpb
loopne
inc
mov
sbb
popf
arpl
out
cmpsb
sub
sbb
ja
add
call
xchg
andl
aas
mov
int3
std
add
cli
ja
icebp
or
adc
ret
or
push
and
shll
add
push
aas
inc
jb
pop
mov
in
cmp
mov
cld
lahf
sub
out
sbbb
decb
aad
idivb
into
cmpb
push
push
movsb
add
mov
in
mov
push
inc
aad
mov
pop
ljmp
stos
xchg
jae
jnp
test
stc
stos
aas
sbb
jo
jp
mov
std
test
test
sahf
push
sub
test
mov
fldenv
dec
pop
lret
test
mov
aam
ds
lcall
adc
jmp
jg
mov
mov
inc
cmp
call
mov
adc
xor
or
outsl
fcomp
repnz
push
cmp
repnz
lcall
push
jl
outsb
pop
or
call
mov
xor
scas
js
dec
jae
pop
sub
mov
or
hlt
in
mov
out
rcrb
daa
pop
push
add
xchg
test
pop
jecxz
fs
bound
mov
mov
add
mov
add
jle
lock
jecxz
lret
xchg
mov
jg
insb
movsl
sub
push
xor
mov
add
sbb
aad
mov
adc
add
xor
das
add
nop
das
cmovp
aad
mov
pop
ljmp
sarb
rcll
push
add
and
jmp
inc
mov
and
push
movsl
jbe
ret
popa
insb
rorl
and
push
or
and
xchg
or
mov
repnz
adc
enter
dec
sbb
pop
cmpsb
inc
insl
or
xchg
orb
fisubl
dec
movsb
push
and
lods
mov
mov
mov
aaa
or
adc
jb
das
sahf
fadds
repz
cs
pushl
xor
test
add
mov
sbbb
cwtl
push
cli
mov
jo
sti
push
add
xchg
in
fucomip
mov
in
jle
inc
pop
jp
lock
arpl
mov
clc
and
pop
data16
nop
imul
add
or
cwtl
bnd
clc
jg
cwtl
repz
jl
test
pop
inc
es
or
cmp
inc
inc
je
icebp
sbb
les
sbb
jge
outsb
add
cli
stos
bound
cmp
pop
jp
push
xchg
jle
outsb
test
add
cld
add
test
mov
lahf
or
mov
jge
fsubp
sub
outsb
pop
adcb
out
fbstp
xor
mov
arpl
sbb
xchg
decl
clc
mov
lds
cld
push
xor
pop
dec
cltd
mov
mov
ljmp
fadds
mov
testb
or
orb
lods
sahf
negb
out
cmpsl
and
cmp
ret
push
mov
inc
jbe
cmp
cwtl
in
test
aaa
lods
add
test
jo
jbe
push
fadds
icebp
cli
dec
fnstsw
xor
enter
stos
call
and
jbe
mov
or
xchg
sbbb
mov
add
mov
movsb
nop
out
and
pop
ljmp
lods
nop
push
push
and
inc
xchg
mov
push
fnsave
nop
and
dec
mov
adc
pusha
cmpsl
pop
outsl
insb
adc
jo
xchg
in
add
cmp
test
movsb
pushf
dec
stc
loopne
add
inc
cmpsb
adc
or
daa
pop
or
pop
lods
xor
mov
scas
je
mov
jp
and
notl
sub
outsl
lea
inc
xchg
fnstenv
scas
and
add
data16
and
aas
dec
inc
int3
enter
stos
aam
loop
leave
xlat
aam
add
sbb
roll
int3
mov
push
mov
dec
fwait
xchg
push
cmp
movl
aas
jge
lock
fcomps
fdiv
jg
das
pop
fs
xchg
jecxz
pusha
insl
mov
bts
sbb
mov
and
dec
lock
incl
inc
cmp
jmp
cmp
and
ficoml
pushf
jne
mov
cmpsb
inc
lret
fsqrt
jmp
loop
or
iret
pop
cld
jmp
add
mov
pop
int3
add
xchg
sub
xor
hlt
jecxz
dec
adc
mov
fsubrs
mov
add
push
cld
push
clc
push
stos
pop
mov
add
inc
stos
clc
mov
sbb
adc
adcl
sbb
adc
sbb
xlat
outsb
sbb
test
sub
loope
xchg
inc
outsb
sbb
out
cmp
pop
sahf
das
cmp
call
jo
int3
push
mov
js
inc
call
mov
sbb
inc
das
sar
push
or
pop
and
xor
addr16
cmc
arpl
sub
in
fcomip
mov
jp
test
call
loop
jg
inc
xchg
fsqrt
decl
jo
in
aad
js
movsb
mov
aaa
std
aas
add
mov
jecxz
sub
loop
insb
into
add
lock
aam
lret
sbb
outsl
push
sti
fdivl
add
js
xchg
out
movsb
mov
sbb
pop
dec
cmp
mov
push
loopne
push
shlb
mov
ret
pop
or
enter
divb
jmp
jge
fildl
mov
jmp
sub
cmp
loope
cmpsb
loop
sbb
push
cltd
sbb
stos
rorl
adc
inc
mov
xor
adc
mov
jg
in
jnp
sub
je
stos
movsl
rcrl
scas
add
adc
fucomip
cmc
mov
mov
jne
mov
mov
jbe
dec
cmp
cmc
ret
cmp
mov
call
adc
pop
inc
xchg
loopne
scas
aaa
mov
adc
dec
inc
fs
scas
push
incl
xchg
cmpsb
fld1
seto
nop
pop
adc
in
fs
push
lock
pop
fcmove
cmp
insb
and
fdivrl
or
ljmp
push
add
push
cmp
jecxz
data16
dec
rolb
or
lcall
mov
pop
inc
insl
mov
mov
cs
add
sti
rol
push
cmp
hlt
xchg
jge
sbb
push
push
xor
mov
in
xchg
fwait
pop
inc
rolb
test
lds
add
add
pop
push
test
sbb
out
imulb
jle
sahf
pop
sbb
push
sbb
jbe
xor
cs
pop
stos
daa
leave
orb
and
insl
decl
mov
cmp
jno
sbb
xchg
dec
pop
icebp
aaa
sbb
inc
shl
pop
jns
ds
in
add
test
cld
das
incb
daa
add
rcrb
xchg
test
pusha
sub
out
fnsave
out
push
insl
sub
test
inc
insb
inc
sbb
push
ret
gs
incl
jmp
mov
add
andb
int
decl
mov
adc
inc
jle
cmpl
pop
shrb
fcomip
aad
xchg
lods
cmp
cmp
imul
ljmp
or
leave
bound
and
mov
pop
gs
or
fdivr
cmpsl
daa
icebp
mov
jecxz
outsb
and
sbb
inc
dec
inc
repnz
mov
adc
mov
shlb
jge
fidivs
or
pop
add
in
add
inc
ss
xchg
data16
xor
add
dec
mov
lret
add
or
call
mov
mov
dec
ret
ret
jge
loopne
push
je
es
clc
push
jecxz
cmp
mov
mov
rcrb
jecxz
xchg
mov
and
pop
outsb
lahf
mov
sub
mov
nop
lret
jg
mov
leave
jae
jno
mov
call
mov
das
adc
insl
loope
mov
sti
rclb
add
pop
inc
movsb
pusha
orl
jae
pop
pushf
or
es
shrb
or
add
xchg
jl
add
imul
fsubl
xor
xlat
pop
test
subb
addb
fmull
cmpsb
roll
decl
cmp
nop
sgdtl
loope
fs
aad
icebp
unpckhps
mov
adc
movl
arpl
push
inc
jp
push
or
mov
and
pop
mov
sbb
push
or
fists
into
gs
imul
or
aas
scas
out
mov
lcall
jg
test
sbb
mov
mov
push
rol
jb
nop
mov
loope
cmp
jnp
sbb
in
sub
rol
mov
adc
inc
repz
test
mulb
pop
xchg
loopne
es
aam
sub
sbb
lds
xchg
and
mov
cmc
jp
xor
fsubs
xchg
or
sbb
push
xor
cmc
fmull
bound
jecxz
pop
jmp
sarb
cmc
idivb
cmpb
push
push
or
mov
push
fbld
in
push
inc
and
outsl
xor
adcl
and
mov
fs
fldcw
mov
nop
push
ja
dec
mov
xchg
hlt
inc
sbb
dec
xor
mov
dec
and
inc
sub
sbb
dec
or
xchg
inc
cmp
add
outsb
pop
decl
xor
les
add
adc
andl
push
loop
jmp
lret
push
js
inc
pop
jbe
add
shll
popf
out
adc
div
subl
inc
mov
pop
and
xor
sti
popf
push
lock
js
and
xlat
adc
lahf
push
movsb
and
add
mov
fistps
stos
std
lret
push
lcall
stos
lock
mov
cmpsb
pop
add
mov
ss
mov
les
sub
cmp
into
xor
dec
cld
dec
fidivrl
lds
es
add
inc
mov
inc
cmp
int3
sub
iret
mov
fiaddl
call
rcll
leave
dec
pop
mov
js
adcl
jno
fs
or
cli
pop
or
sub
dec
mov
cmp
cmpsb
sahf
ds
lods
cmc
fbstp
clc
pop
mov
nop
in
add
inc
push
ljmp
in
xor
stos
fbld
es
add
das
clc
into
add
mov
stc
and
inc
adc
mov
xchg
push
mov
insl
jle
mov
jmp
mov
push
and
clc
and
mov
int
cmp
in
mov
mov
sub
in
loope
jp
lods
mov
cld
pop
jl
imul
mov
sub
repz
or
loope
cmp
xchg
call
inc
ficompl
adc
adc
add
ds
add
push
dec
add
xchg
lock
es
es
jb
cmp
mov
stc
into
cmpsb
push
cs
mov
fisubs
sar
adc
dec
mov
fs
rol
enter
xor
xchg
jmp
inc
pusha
lock
mov
outsl
push
cld
inc
pop
movsl
js
and
cmp
lret
rolb
jle
pushl
sbb
hlt
sub
and
pop
mov
add
in
mov
dec
mov
pop
hlt
or
ds
lret
scas
pushw
xchg
das
test
mov
fbld
jns
adc
std
jmp
scas
mov
pop
enter
add
or
aas
adc
lcall
push
pushl
push
in
adc
add
testb
mov
int3
add
aad
fadd
mov
mov
xor
add
in
les
or
or
add
stos
adc
nop
and
in
or
jg
mov
je
mov
cmpsl
adc
out
xchg
xor
xor
dec
mov
aas
xchg
add
jno
sub
and
pop
ficoml
cmpsl
pushf
and
lods
sarb
lcall
mov
or
xchg
mov
mov
pusha
daa
ds
repnz
cli
adc
sbb
adc
fs
adc
mov
sub
pusha
mov
mov
es
jmp
and
nop
outsb
jg
outsl
mov
mov
xchg
aam
inc
sub
xchg
dec
andl
cmp
push
gs
lea
push
test
lcall
js
aaa
xor
enter
xor
in
push
mov
mov
adc
pop
ror
xor
cmp
sbb
sti
subb
sbb
push
pop
test
popf
jge
sub
jns
xchg
mov
in
mov
mov
adc
cld
push
jmp
fisttps
cmp
mov
daa
fistpl
or
adc
les
pop
mov
pop
jo
jb
insb
and
in
mov
sbb
jo
sub
outsb
cmc
popa
or
add
pushf
stc
test
and
jp
xchg
xchg
imul
mov
jmp
push
xchg
inc
sbb
and
in
add
sub
xchg
adc
add
adc
loope
or
push
jne
dec
pop
lea
loopne
in
push
and
scas
or
inc
pop
repnz
push
mov
icebp
jg
dec
mov
addr16
add
roll
ret
fbstp
xor
add
push
lods
mov
or
xor
xlat
lock
adc
jb
ret
test
jmp
movsb
or
inc
push
fisttps
pop
dec
mov
push
dec
jmp
sub
loop
jge
idiv
xor
push
mov
or
xor
les
xchg
or
mov
add
and
mov
mov
jae
push
mov
fsts
push
dec
cmovne
sarb
loopne
rcr
adc
cmpsb
int3
and
insb
popl
imul
test
loop
cwtl
js
ret
lods
orb
rolb
sub
and
xor
cmp
into
and
jg
and
lret
dec
jl
and
in
jno
addr16
icebp
into
pop
enter
fimull
push
push
scas
leave
xchg
stc
and
loopne
cmp
out
loope
out
rolb
incl
and
mov
daa
into
shrb
mov
sti
inc
lcall
push
jmp
adc
loop
push
cmpsb
mov
and
adcb
bound
sub
jmp
loope
fisttpll
push
ja
nop
into
push
push
cmp
int
sub
fisubl
ds
cmp
mov
xor
sbb
xchg
jb
das
mov
xchg
pusha
xor
or
js
inc
mov
lods
adcb
loopne
push
xor
jo
loopne
or
js
xchg
fwait
adc
or
sub
xchg
cmp
sub
xor
nop
cmpsl
lds
ror
ljmp
pop
jle
jg
movsl
jp
push
lods
scas
push
xchg
rclb
push
cmp
loopne
cli
pusha
push
ja
inc
ret
frstor
fdivrl
jmp
pop
xor
jb
pop
mov
and
jge
ret
into
mov
sub
mov
fcomip
incl
push
stos
roll
and
pop
sub
jno
pop
aam
adc
aaa
cld
incl
lret
mov
ja
cwtl
stos
popf
adc
out
test
loope
js
and
mov
push
and
cli
jl
stos
repz
sti
inc
mov
xor
sbb
push
repz
add
inc
sub
xchg
fcmovnb
bound
jmp
jne
mov
aaa
shlb
loop
push
cmp
jp
mov
movsl
stos
ja
call
and
inc
cmp
icebp
sbb
jle
dec
and
cwtl
inc
push
xchg
dec
push
insb
int3
mov
push
adc
bound
ret
push
mov
jg
pushl
pop
lds
lret
lock
add
mov
out
mov
inc
into
jp
cmpsb
pushl
sbb
push
xlat
ficoml
arpl
test
inc
leave
stos
mov
lret
sub
loopne
jg
lcall
shll
dec
imul
lret
jmp
push
add
decl
andb
xchg
cmp
jp
mov
repnz
sbb
jp
cmp
inc
cli
push
sub
repz
jmp
lods
cld
aad
jnp
push
addr16
into
shrb
incl
and
lahf
sti
sub
xor
sub
pop
lret
bound
sub
gs
rcll
xchg
sbb
sbb
dec
jle
jp
outsl
push
mov
rorb
and
int3
out
insb
scas
lea
repz
cmp
add
add
in
inc
mov
sahf
mov
xor
inc
sarl
mov
mov
jg
or
mov
adc
lods
es
stos
inc
icebp
mov
jg
push
lahf
xchg
xchg
mov
sahf
pop
jg
xchg
xchg
cmpsb
aaa
ja
aad
repnz
or
data16
dec
lret
loop
out
clc
jmp
add
daa
stos
mov
cld
mov
add
xlat
fnstsw
jmp
sub
sbb
movaps
mov
rorl
pop
outsl
imul
dec
gs
pushl
and
or
into
dec
shlb
sbb
xchg
outsb
adc
mov
ds
pushl
pop
insl
mov
and
lods
jnp
xchg
roll
push
iret
lret
pop
es
xchg
mov
lock
xchg
and
adc
std
movups
xor
jmp
xchg
fdivr
mov
pop
jns
je
dec
iret
iret
cmp
pop
rcll
xchg
inc
aaa
ljmp
loopne
inc
pop
push
cltd
mov
flds
pop
dec
scas
sub
into
setbe
jne
jmp
jbe
mov
addr16
icebp
jp
xor
mov
sbb
call
and
xchg
das
push
push
mov
or
sub
incl
test
inc
adc
push
mov
push
aas
mov
dec
mov
mov
shll
push
and
pop
in
mov
add
jg
sub
and
in
push
sbb
call
cmp
xor
xlat
dec
or
push
cltd
xchg
and
lods
outsb
xchg
cld
fidivrs
test
scas
sub
adc
outsl
inc
jle
xor
mov
clc
pushl
adc
xor
dec
jecxz
lcall
cld
int3
inc
xchg
mov
push
fstl
pushl
aad
mov
js,pn
cltd
jle
mov
adc
inc
xor
xchg
leave
test
pushl
lods
stos
je
das
push
add
shll
scas
jnp
adc
sub
lret
outsl
jge
int
cmp
push
inc
mov
shlb
xor
outsb
cmp
adcl
dec
cmp
inc
xor
and
mov
shrl
popa
icebp
cmp
int3
in
mov
imulb
cmp
mov
mov
inc
ret
fsubl
or
ret
mov
jo
jp
outsb
es
and
test
out
clts
mov
lcall
cmpsb
sahf
xchg
xor
and
inc
mov
xor
pop
into
lcall
xchg
cwtl
add
or
cmc
mov
fistpll
mov
xorb
gs
in
les
movsb
outsb
test
fisubs
ds
jg
xchg
ljmp
leave
jp
fs
xchg
leave
out
xor
xor
insb
addr16
call
xchg
xchg
fdivr
jmp
pop
out
in
add
jmp
ret
das
movsb
pop
gs
xchg
jno
ss
in
test
mov
testl
inc
cwtl
adc
int3
dec
out
out
out
lock
outsl
jl
and
cmp
loope
call
xchg
dec
add
cmp
inc
mov
xchg
pop
mov
mov
stc
fcoms
bnd
cmp
jl
pop
dec
les
test
decl
outsb
push
cmpsl
mov
pop
repnz
jmp
insl
add
mov
pop
in
cmpsl
lds
mov
fcoms
adc
mov
push
lret
dec
aaa
call
push
mov
sbb
out
add
mov
jbe
ficoml
arpl
xor
repz
jo
cltd
sahf
ljmp
repnz
dec
fdivrl
fdivrl
les
xchg
cmp
test
incl
fwait
inc
adc
adc
stos
mov
xchg
pop
pop
mov
or
sar
incl
jbe
loop
push
dec
or
lds
dec
jge
cld
pushf
jg
cs
cmpsl
xchg
push
insb
insl
mov
xchg
lods
cmp
sub
call
std
ljmp
mov
pop
gs
push
das
ret
add
lret
jo
xor
cmp
cltd
push
aaa
and
lret
adc
xlat
das
pop
mov
jne
repz
mov
mov
jnp
cmp
fldl
pop
mov
jge
aaa
cmp
clc
ss
jo
in
lods
enter
gs
xchg
clc
inc
fisttps
mov
popa
test
cmpsl
fimull
mov
mov
and
cli
or
bound
and
dec
fs
push
cmc
cmp
mov
incl
in
cmpsl
das
pop
sub
mov
add
rorl
or
lods
mov
outsb
xor
cmp
sahf
insl
cmp
sub
push
jecxz
sub
repnz
mov
ret
jae
xlat
mov
and
popa
pop
out
rcrl
jg
test
mov
in
nopl
jmp
movsb
cmp
movsb
sbb
mov
cli
call
repnz
cmpsl
je
xor
repz
bound
subb
cmp
adc
addr16
and
decl
and
leave
rorb
ljmp
mov
mulb
mov
incl
mov
xor
add
dec
pop
xlat
jb
jb
cmc
mov
mov
mov
jns
sbb
jle
test
mov
mov
or
jo
fidivs
mov
ljmp
xchg
jno
shlb
insb
jmp
or
xchg
xlat
cltd
fdivl
fistps
and
cmc
xlat
out
jmp
add
fwait
or
fbstp
push
adc
sbb
sbb
imul
push
dec
subl
push
mov
les
cmp
jecxz
and
push
je
and
push
testb
mov
icebp
adc
in
adc
fistl
adc
aas
jmp
outsl
inc
push
adc
cwtl
xchg
addr16
push
xorb
cld
dec
das
xor
fdivrl
not
call
sbb
add
mov
stos
jmp
jg
mov
or
pop
fucom
outsl
shlb
outsb
xchg
fidivs
add
out
rcl
cmc
xchg
mov
add
push
mov
xor
fcomip
dec
xchg
mov
aam
cli
enter
jne
repnz
stc
mov
repnz
cmp
jnp
repnz
pop
enter
aam
rcrb
jl
pop
cmp
decl
sahf
mov
mov
movsl
mov
inc
sub
add
pop
add
addr16
nop
cmpb
cmc
in
cmp
cmp
jp
cmp
cmpb
mov
push
test
cmc
jne
mov
in
es
cwtl
repz
rorb
sti
jbe
or
incb
sbb
mov
movsb
loopne
push
dec
arpl
addr16
sub
fdivr
incl
push
out
push
mov
push
sbb
arpl
mov
movsl
push
inc
ja
dec
lcall
std
lret
pop
iret
mov
dec
mov
pop
push
push
jmp
loop
xchg
ds
mov
cmp
pushf
push
cmp
aad
flds
sub
arpl
incl
jmp
adc
setp
cltd
xchg
cltd
ljmp
lret
icebp
push
incl
push
push
cli
pop
jb,pn
fs
cmp
push
cmp
call
mov
mov
int3
adc
pop
call
leave
adc
hlt
mov
xchg
adc
adc
inc
xchg
sub
ss
lock
fwait
inc
stc
popa
call
jl
fistpll
jnp
jmp
movsb
cli
popf
and
out
mov
lret
xchg
inc
adc
into
inc
cmp
push
loope,pt
je
jg
inc
dec
popf
lea
aad
adc
and
sti
or
in
jno
mov
sbbl
and
into
in
lods
pop
sbb
or
jg
sahf
mov
pop
push
ljmp
lock
pop
dec
xchg
mov
stc
jmp
mov
mov
scas
add
mov
pushf
xor
pop
int
jge
cld
push
rep
dec
push
movb
fstpl
in
jne
loop
je
bound
lcall
int
out
jnp
dec
mov
stos
pop
leave
int
jnp
js
push
add
xor
jl
decl
jbe
add
sbbl
stos
repnz
arpl
pushl
sub
cs
sub
xor
roll
rorl
lcall
or
or
jmp
mov
sbb
pop
push
xchg
xor
dec
sub
xchg
shl
insl
xchg
incl
jo
mov
or
gs
cmpsb
xchg
insl
xchg
stc
push
mov
jl
xor
stos
imul
jmp
mov
or
cmc
inc
add
and
imull
add
mov
loopne
jmp
jg
xchg
xchg
lea
cmp
jp
enter
insl
call
lret
in
inc
int
arpl
sub
int
out
adc
std
ret
jge
sub
pushl
stos
jp
cmpsb
cmp
xchg
testl
xchg
sbb
out
cmp
ja
fists
mov
cli
dec
xor
lods
fidivrl
adc
add
push
or
ficoms
adc
mov
add
add
ret
test
inc
adc
push
ljmp
add
xchg
xor
push
and
adc
jno
and
jecxz
fdivrp
in
push
jne
mov
sub
lret
xchg
rcll
or
mov
cmp
jg
mov
stos
insb
out
fisttpl
mov
xor
scas
into
inc
jbe
mov
cmp
or
and
es
adc
add
sbb
mov
ss
cmc
jmp
fcmovb
pusha
dec
bound
jmp
shlb
push
ret
inc
push
lcall
aaa
cld
ret
movsl
xor
sub
fstpt
adc
or
ret
fsts
je
inc
pop
loopne
mov
mov
test
mov
daa
js
imul
fisubs
cmpl
aas
jmp
xchg
pop
xchg
sub
adc
or
push
mov
test
fnstcw
xchg
sbb
pop
inc
pop
jecxz
push
sub
mov
push
mov
incl
push
ljmp
dec
stos
add
test
lahf
xchg
decl
sahf
xor
or
stos
push
mov
cmpsl
mov
mov
and
push
cmp
in
mov
xor
mov
sbbb
push
in
cs
pop
push
iret
cmc
jl
clc
faddl
lods
jl
add
pushl
dec
jl
pop
mov
stc
xor
loopne
in
aam
mov
lcall
pop
in
movsl
shrl
stc
push
scas
pop
in
dec
pop
adc
call
sahf
lods
lcall
pushl
test
bound
scas
xchg
mov
popa
loop
xchg
xor
mov
cltd
insb
sub
fwait
adc
push
xor
adc
sub
and
cwtl
in
aam
cld
adc
and
or
xchg
adc
and
cli
dec
sahf
jns
and
inc
cmpsl
ljmp
loop
jg
mov
pop
add
cmp
ljmp
jp
jl
push
xchg
pop
jmp
loopne
out
stc
push
and
and
jmp
ljmp
cli
or
insb
gs
and
adc
push
in
cli
mov
sub
inc
pop
jg
movsb
jmp
push
and
aaa
aam
mov
jne
loopne
shlb
lods
sub
cmp
in
ret
jnp
fsubrs
mov
xorb
xchg
imul
mov
decl
ja
jl
dec
int
aaa
xchg
loopne
jb
mov
pop
in
xor
xor
int3
dec
lock
call
sub
cmp
and
insl
mov
cli
fildll
stos
lret
into
or
sub
sub
dec
push
rcrb
cli
or
jge
sub
popf
adc
inc
testl
cmp
test
push
cmp
pop
daa
mov
cmp
out
inc
inc
push
jl
aaa
or
jg
lods
add
daa
popa
push
test
sbb
sbb
test
dec
push
mov
push
cmpsl
fsubl
push
pushl
cld
cmpsl
xchg
pop
sarl
hlt
cli
push
pop
out
enter
mov
and
pop
test
out
sar
inc
mov
das
cmc
jecxz
push
push
std
or
jecxz
ds
add
pop
enter
ljmp
shll
movsl
dec
out
and
sbb
loopne
fisubrl
pop
sti
and
ret
lcall
lcall
cs
xor
ljmp
xor
adc
cmp
fmuls
decl
inc
stos
and
fisttpl
pushf
popf
pop
daa
aam
inc
xchg
cld
mov
and
cmpsb
call
sarb
hlt
in
xchg
out
daa
fs
inc
jmp
jecxz
adc
fwait
imul
aad
xchg
xor
fcoms
outsl
outsl
jmp
inc
mov
mov
cld
ja
sbb
frstor
mov
movsl
sbb
and
stos
andl
ljmp
hlt
rcrb
in
aad
pushf
insb
nop
ljmp
and
sar
mov
mov
sahf
sub
cmpsl
ja
xlat
and
adc
out
or
push
jae
lock
jg
ljmp
cmp
or
lcall
jns
out
mov
xchg
insl
inc
cwtl
sbb
cmp
sbb
cmp
popl
mov
arpl
int
out
test
xor
jl
pop
stc
cwtl
or
lea
or
add
xchg
incl
xor
mov
push
xchg
pop
outsl
sbb
pop
addr16
fldl
dec
jmp
jg
sub
cmp
sbb
push
or
andl
out
push
ja
mov
jmp
pushf
pop
imul
fwait
cltd
clc
icebp
rcrl
push
xlat
mov
test
sbb
stos
test
cmpl
sub
cmp
ljmp
clc
mov
mov
lret
cli
out
ljmp
out
filds
fcomip
movsbl
cld
or
inc
jecxz
sub
jp
push
popf
call
mov
je
outsb
pop
lret
ret
loope
pop
inc
scas
daa
mov
cmp
dec
pushl
jns
jecxz
xor
pop
push
cmp
xor
add
jp
dec
xor
fcos
inc
pop
push
loope
mov
mov
xchg
decl
nop
mov
mov
dec
push
push
into
jg
cmp
leave
fsubl
cwtl
sub
adc
add
lods
decl
and
int3
movsb
xor
and
inc
incl
or
inc
loop
pop
bnd
js
xchg
add
mov
add
push
stos
shrb
pushl
cmc
repnz
xchg
ds
sahf
mov
push
fnsave
shll
test
cli
mov
stos
sub
addr16
fidivrs
lret
cmpb
push
xor
loopne
adc
cmp
mov
lock
or
jle
jmp
sarl
dec
mov
aaa
std
push
jae
stos
jecxz
mov
sub
andl
push
loope
inc
popa
and
pop
loopne
jbe
or
dec
test
rcl
jae
ss
aaa
cli
mov
call
pop
repz
shl
and
repz
xchg
test
aad
addr16
sarb
add
jmp
mov
mov
fisttps
addr16
fwait
into
cmp
jo
jmp
push
fbstp
orb
pop
ficoml
cmc
lcall
fisttps
mov
js
insl
pop
ret
test
pushf
jl
add
in
call
xchg
test
sahf
push
xor
dec
xchg
jmp
rcrl
mov
inc
mov
rcrb
int3
outsb
pushl
pop
and
js
dec
or
int
mov
dec
inc
imul
xchg
lret
jae
jl
decl
fs
and
jge
push
ror
leave
popa
mov
mov
mov
clc
cmp
call
or
sub
cwtl
insl
xor
subl
idivl
jo
fs
lahf
rcrb
push
mov
test
jmp
fisubrs
xorl
mov
ja
outsb
pop
pop
frstor
icebp
rcrl
mov
lcall
test
insl
mov
dec
stc
mov
add
mov
int3
dec
adc
lcall
or
repnz
es
xchg
jb
mov
in
sub
cmp
jle
lock
sub
mov
jne
in
out
xchg
test
jns
ljmp
ljmp
mov
sbb
xchg
leave
cltd
out
sub
pop
sub
fiadds
decl
int3
hlt
lods
inc
inc
push
jne
rorb
push
jecxz
in
test
jl
xchg
lock
incl
rclb
inc
inc
stos
dec
xor
dec
incb
dec
das
cmpsb
xchg
push
test
jmp
fldenv
sub
pop
xchg
out
sti
aad
inc
xor
mov
jl
pop
fidivrl
jmp
or
mov
mov
push
mov
sbb
jl
adc
scas
jl
or
data16
ret
stc
sub
add
ficoms
dec
inc
test
loope
adc
clc
xor
loope
lahf
mov
lock
repz
push
jmp
sahf
ljmp
cmp
loopne
pop
decl
in
lcall
repz
dec
loopne
mov
js
test
xchg
mov
xor
xchg
mov
out
aas
and
int3
jg
pushl
incl
and
test
das
aam
addb
addl
mov
mov
lds
fbld
jbe
outsl
ja
call
mov
mov
lahf
mov
mov
mov
add
shrb
inc
and
mov
xor
and
roll
lret
xchg
ja
clc
pushl
adc
fs
mov
adc
decl
pop
dec
sbb
adc
jp
insl
addl
jp
std
pop
push
mov
push
cld
call
test
enter
mov
mov
jle
lds
pop
add
inc
mov
decl
push
pushf
test
and
enter
jg
rorl
and
adc
rol
pop
xchg
decl
mov
mov
daa
decl
cmpsl
or
jg
test
idivl
call
adc
inc
jp
shr
nop
mov
sub
or
repz
ljmp
lods
inc
divb
in
xchg
xor
aad
sub
xchg
push
paddusw
lahf
in
or
test
xor
pop
out
js
xchg
mov
movsl
and
dec
mov
inc
pop
cmp
in
mov
cmp
adc
push
xor
jmp
imul
das
sar
mov
bound
adc
jle
mov
and
jno
movsb
mov
pushl
xor
pushf
je
ficoml
lcall
mov
adc
stos
sub
push
sub
out
dec
pop
lret
test
pop
outsb
mov
pushl
daa
add
adc
xchg
mov
jne
xorb
mov
add
cmpsb
jbe
xor
push
mov
sub
pop
mov
jno
mov
inc
xchg
dec
jp
mov
jl
mov
xchg
int3
cmpsb
jmp
sbb
and
pop
inc
ret
bound
xor
cmp
fcmovnbe
mov
lds
xchg
jb
rol
loopne
mov
xlat
in
in
bound
inc
and
adc
outsl
fwait
out
popa
ljmp
aad
mov
nop
sarb
repnz
imul
mov
cld
rcrb
push
inc
pop
inc
sub
mov
xchg
fcomps
add
push
sbbl
fdivr
add
jo
fistl
sahf
pop
cli
stc
scas
aas
sub
aas
lds
dec
mov
xor
cmpsl
jae
out
sub
loop
insl
loop
jbe
push
mov
fldl
pop
xchg
adc
scas
jns
test
enter
dec
sbb
dec
xor
push
repnz
stos
loopne
mov
add
push
andb
mov
xchg
dec
sti
push
inc
xor
ds
mov
insb
lods
adc
pushf
sub
pop
hlt
aas
mul
cltd
lret
repnz
add
movsl
xor
ss
dec
test
sub
adc
call
outsb
cli
popa
popf
dec
pop
mov
dec
cli
mov
sbb
cmp
jne
rcrb
lock
call
les
fisttpll
clc
adc
inc
shll
adc
push
int3
fcomip
std
addl
and
push
mov
xor
shr
adc
out
cli
dec
push
mov
mov
mov
dec
ffreep
addr16
iret
std
test
into
icebp
mov
jg
pushl
mov
ss
cwtl
add
andl
sbb
out
leave
xor
incl
pusha
jns
fs
andb
movsl
jg
jmp
pusha
and
icebp
fnstsw
cmp
cmpl
call
enter
and
dec
std
stc
dec
pop
mov
shrl
test
out
adc
andl
incl
mov
neg
mov
lahf
rcl
cld
push
add
in
adc
cld
cmp
add
push
pop
mov
daa
ja
and
add
mov
incl
stos
mov
sub
cmp
xor
mov
mov
movsl
jmp
add
cmp
imul
pushf
push
in
fiadds
pop
mov
mov
mov
mov
fsubrl
inc
ret
sub
popf
pop
inc
mov
ss
cmp
push
call
cs
push
iret
fisttpll
and
test
gs
push
lcall
cmp
cmp
jo
repz
push
ja
sub
pop
gs
lock
push
push
pop
bound
mov
in
add
mov
fisttps
sub
inc
gs
rcll
mov
daa
xor
or
aaa
incl
pop
mov
mov
and
adc
cmp
ljmp
mov
movsl
mov
or
mov
cld
push
sbb
fisubl
mov
call
jg
adc
fnstenv
bnd
outsb
push
dec
ret
es
mov
mov
fisubrs
xchg
inc
stos
adcb
lahf
inc
inc
adc
mov
add
test
pop
add
lcall
test
adc
int3
add
imull
lods
xchg
jecxz
cli
mov
in
or
add
aas
inc
jmp
aaa
pushf
jge
call
pop
mov
ljmp
jnp
jmp
insl
lcall
testb
in
mov
add
loop
hlt
iret
push
and
test
aas
arpl
mov
cmp
cld
jp
xor
addl
adcl
daa
stos
pop
decl
mov
int3
pop
mov
movsb
cmp
adc
cmp
adc
mov
xchg
jnp
sub
cld
mov
shll
cmp
jbe
lcall
out
mov
or
cmp
pop
ss
mov
insb
inc
insb
popf
sbb
lret
aas
jae
mov
jmp
mov
jbe
aam
setb
sarb
cmp
and
cmovns
dec
mov
cmp
mov
in
sbb
dec
test
adc
cmpsl
mov
ret
jge
std
ljmp
add
scas
or
lret
xor
das
add
pop
in
pop
incl
pop
cmp
jge
jl
xchg
int3
stc
sub
xor
cmp
hlt
stos
xor
pushl
ljmp
cmpsl
pusha
movsb
es
cmpsb
aaa
adc
mov
xchg
mov
inc
lea
push
or
shrl
mov
pop
inc
mov
and
jns
adc
pop
rorb
add
sbb
push
jge
add
cmp
push
cmp
sahf
xchg
xchg
jg
rolb
xchg
xchg
or
ljmp
lahf
aas
fs
test
xchg
cmp
jle
fistps
in
pop
pop
bsf
jg
fldl
jne
mov
xchg
mov
dec
loope
inc
mov
int
call
scas
ljmp
negb
data16
push
mov
bound
pop
pop
std
call
sbb
rcrb
ret
jp
lcall
loopne
push
ljmp
std
lcall
push
push
addr16
mov
cmp
or
inc
dec
push
into
push
int
incl
pop
dec
mov
jne
dec
jmp
xchg
fistl
mov
sbb
and
jl
mov
dec
xchg
fsts
repz
iret
iret
mov
out
xchg
pop
xchg
jns
jbe
sbb
aad
nop
mov
cmp
cmp
or
jno
shll
push
adc
xchg
std
jns
scas
adc
sbb
xor
mov
mov
call
decl
arpl
inc
inc
data16
daa
mov
adc
ds
inc
and
jbe
filds
adc
sahf
bound
out
xor
lcall
clc
mov
int
fimuls
inc
imul
sti
dec
out
jo
cltd
cli
adc
fs
inc
in
movsl
outsl
dec
cwtl
xchg
pop
dec
std
xchg
lods
inc
xchg
mov
cmp
rorb
fisttpl
lods
and
fs
loope
and
sbbb
dec
cmp
dec
js
mov
adc
mov
and
mov
or
xor
mov
mov
incl
lahf
daa
andl
dec
add
into
and
xchg
out
cmpl
call
data16
inc
push
jnp
cltd
inc
xchg
pop
pop
imul
and
in
in
pop
mov
jmp
mov
fcom
out
mov
or
mov
and
pop
cmpl
call
aad
dec
std
jae
or
mov
icebp
lods
xor
or
loop
lcall
cltd
jmp
mov
sbb
mov
nop
insb
xor
outsb
inc
cmp
fisttps
cmpsl
dec
and
outsb
cli
ljmp
mov
sub
ret
xchg
dec
inc
mov
xor
pop
aas
adc
fcmovne
mov
push
mov
adcb
sti
call
jl
pusha
ja
or
push
push
in
arpl
es
ja
push
push
or
push
inc
sbb
jne
clc
push
das
enter
aam
push
cmpsl
adc
pop
adc
and
cmp
decl
sti
test
pop
push
pop
ss
xchg
outsb
cwtl
add
push
mov
mov
push
add
pusha
call
dec
xor
mov
pop
mov
pop
mov
cmpb
fistl
iret
sarb
ljmp
xchg
jno
jno
stc
test
jmp
dec
pushf
scas
es
xchg
mov
daa
fisttpll
ljmp
into
mov
stos
aaa
sahf
or
fisubrl
inc
fmuls
scas
aam
xchg
decl
mov
adc
or
pushl
and
insb
push
mov
roll
mov
sub
fs
je
lock
inc
sub
pop
mov
adc
pushw
mov
dec
clc
cltd
rorl
insl
and
incl
cmp
inc
leave
sub
xor
dec
pop
and
and
imul
inc
mov
sub
hlt
or
scas
sbb
mov
cli
ja
gs
jo
jle
jmp
cmpsl
add
push
inc
mov
mov
dec
sub
or
xchg
test
inc
lret
scas
xchg
test
sub
cmc
cwtl
outsb
lea
jno
jl
popf
mov
outsl
xchg
lds
sub
push
or
mov
cmpsl
lahf
dec
xchg
loope
jl
sar
jg
add
addr16
dec
insl
pop
je
push
jg
call
gs
jmp
imull
dec
idivb
mov
mov
movsb
test
inc
lcall
jmp
movsl
fwait
lret
ljmp
bound
cld
xor
movsl
dec
outsb
mov
fimull
pop
cmpsb
xor
hlt
into
pusha
and
jge
test
test
fwait
fwait
mov
clc
and
in
loopne
decl
xor
outsl
imul
push
daa
out
inc
mov
inc
iret
cmpsl
pop
int
jmp
ljmp
jmp
lret
scas
cmc
mov
pop
out
mov
pop
mov
cli
addr16
shlb
push
jbe
clc
mov
push
movsb
cs
push
repnz
test
inc
sbb
add
jne
jge
and
cld
jmp
mov
xor
insl
jp
lcall
fs
ja
sar
push
mov
sbb
outsb
andb
orb
push
xorb
in
call
fsubrs
mov
rclb
push
xchg
fcomp
ja
rcr
in
sbbb
mov
dec
jle
adc
push
ljmp
inc
sbbl
pop
cmp
mov
jae
cmpsb
ljmp
pop
jns
rorb
scas
pop
dec
fucom
sahf
aaa
insb
cwtl
mov
inc
xor
das
call
out
addr16
call
cmpsl
imul
hlt
mov
pop
dec
daa
es
sub
test
incl
testb
cwtl
aas
jmp
dec
lods
jge
dec
not
or
in
and
aaa
ljmp
cmp
orb
mov
push
cwtl
jle
sahf
hlt
push
cmpsl
xor
mov
fcomip
mov
cmp
lcall
xchg
push
repz
jb
dec
jmp
jge
imul
xchg
inc
sbb
les
into
pop
cwtl
ja
xor
jge
jecxz
xchg
push
cmp
dec
arpl
mov
popf
dec
adc
xchg
fcomps
or
out
ljmp
addl
inc
xchg
jecxz
nop
clc
jbe
ffree
cmp
pop
mov
sub
inc
mov
js
cld
cmpsb
jns
adc
out
scas
mov
test
std
pop
jge
add
cltd
xor
xchg
add
push
inc
roll
mov
push
dec
jp
ret
push
cld
adc
adc
sbb
jo
mov
sbb
rcr
incl
sub
push
add
or
arpl
cmpsb
sub
lcall
adc
sub
lret
insl
xor
negl
out
das
in
ret
fdivr
cmp
sbb
in
jbe
jg
add
pop
jmp
mov
incl
xchg
xor
jp
shr
jl
jle
jne
scas
fsubp
or
add
enter
cmc
sub
lcall
pusha
jo
sbbb
sbb
enter
push
cmp
rcrb
decl
pusha
push
mov
pop
cmpsb
lds
scas
lds
push
push
add
pop
sbb
cmova
adcl
mov
fsts
aas
or
repz
xchg
or
test
dec
aas
test
es
cli
jg
sbb
fnstsw
aas
cmpsb
neg
push
mov
push
lahf
jns
lock
mov
mov
popf
pop
cmpsl
push
jmp
ret
sbb
sub
call
push
and
sub
mov
sbb
vmovlps
xorl
ds
imul
inc
fwait
inc
arpl
pushl
hlt
outsl
xor
sub
lret
dec
std
jp
mov
or
ja
testl
cli
js
loope
dec
insb
push
cmp
adc
test
fs
jae
mov
out
fdivrs
pop
fbld
lods
add
xchg
inc
mov
and
push
sbb
mov
jmp
dec
jle
inc
push
mov
push
lret
sahf
lcall
adc
adc
fucomi
lret
push
mov
mov
xchg
and
xchg
mov
mov
sbb
scas
mov
data16
push
sub
pop
pop
inc
pop
ret
or
sub
inc
leave
sub
lcall
inc
jno
repnz
mov
xor
adc
test
decl
fwait
or
cvtpi2ps
mov
dec
es
clc
push
ror
repnz
mov
inc
lcall
cld
stc
cmp
daa
pop
out
dec
pushf
mov
jns
or
incl
test
dec
jecxz
inc
push
sub
movsb
out
cmp
cli
insb
cmp
popf
imul
aas
incl
out
pop
repnz
lret
mov
jo
sub
mov
xor
fs
decl
pop
and
jmp
add
or
mov
mov
xor
decl
jnp
adc
addr16
xchg
ret
ljmp
pop
in
fcmovnbe
push
dec
lret
fiadds
ljmp
stos
cli
pop
mov
jo
push
add
xchg
loop
and
sub
push
subl
lods
jns
adc
mov
aad
push
pop
mov
ret
or
cmp
cmp
pop
clc
jne
xchg
imul
push
out
and
mov
out
sbb
push
sub
mov
loopne
scas
imul
adc
fldpi
into
fnstenv
sub
insb
pushl
inc
inc
xchg
sbb
jl
xor
pop
sub
sti
call
push
cmp
movsl
in
push
adc
out
insb
push
or
sub
imul
cmp
mov
scas
js
or
call
pop
arpl
pop
dec
push
insb
shll
push
adc
jg
inc
adc
out
push
ljmp
ret
sti
xlat
dec
mov
cld
mov
insl
inc
aaa
std
outsl
dec
in
mov
movsb
push
clc
popa
jecxz
icebp
jge
jo
popf
repnz
icebp
jg
jmp
std
fmull
cmp
pop
dec
or
xor
mov
pusha
and
pop
xor
mov
loopne
fldenv
sbb
jmp
leave
push
cmp
push
push
int3
loop
sbb
jg
xor
inc
mov
int
lret
inc
dec
xor
clc
mov
fcmovne
shl
mov
das
cli
inc
mov
int
pop
decl
mov
test
lret
insl
enter
loope
call
pop
sbb
mov
incl
jae
xor
repnz
jb
ja
dec
loope
ja
fs
dec
int
fisubrs
rcrl
inc
jne
mov
jae
fcomip
decl
mov
adc
inc
jns
jmp
fwait
imul
sub
jmp
pop
adc
push
sbb
int3
subb
sbb
dec
xor
inc
outsb
xchg
ljmp
call
xchg
push
scas
call
cmp
or
cmp
or
int3
add
cwtl
adc
incl
aaa
or
aaa
scas
imul
push
xchg
mov
lcall
test
dec
push
data16
mov
sbb
or
insb
call
xchg
mov
pushl
mov
je
xchg
movsl
mov
inc
adc
ucomiss
sub
in
mov
call
dec
mov
push
out
gs
push
lods
ljmp
fnstcw
push
dec
mov
daa
ds
enter
lcall
or
push
add
arpl
lods
insl
mov
pushl
data16
cltd
or
mov
cs
dec
xor
dec
or
push
adc
les
sub
call
or
mov
rcrl
shlb
rcll
bound
sbb
inc
xor
icebp
inc
decl
and
push
pop
lret
pushf
jl
mov
in
int3
or
insl
lea
les
xchg
incl
int
aad
sub
popa
push
dec
dec
out
sbb
sub
pop
push
jle
addl
fnstenv
repnz
sub
daa
mov
test
lods
fiaddl
xlat
stos
rdmsr
sub
xchg
jmp
enter
pop
dec
or
enter
pop
in
adc
mov
or
lahf
call
pop
clc
dec
push
sub
pop
out
fisubs
push
mov
jg
mov
mov
dec
mov
xchg
mov
jmp
out
mov
in
cmp
decl
pop
jae
add
push
mov
clc
ja
lcall
mov
cld
cwtl
inc
pop
into
imul
cltd
ret
testb
jmp
sarl
shl
push
imul
mov
test
dec
inc
pop
out
lcall
call
jge
pop
js
mov
fnstcw
cmpsb
add
in
xor
cli
xchg
hlt
mov
push
cmp
jne
imul
and
jg
incl
pop
icebp
cltd
scas
or
fildll
adc
xchg
cli
push
nop
adc
lods
pop
dec
mov
mov
stos
push
mov
pop
test
inc
inc
jle
dec
xchg
decl
push
jne
clc
in
mov
cli
bnd
ljmp
call
adc
and
xor
mov
into
inc
push
jg
xor
test
sbbl
lcall
xchg
jle
cwtl
sbb
mov
cmpb
sub
icebp
cmpsl
fbld
mov
decl
pusha
lret
out
xchg
inc
popa
jb
into
and
popf
jl
outsl
mov
lea
loope
jmp
ja
jge
mov
orb
dec
cld
xchg
push
daa
and
cmpsb
lea
sub
push
or
decl
movsl
mov
mov
fisubrl
push
movlps
enter
lock
dec
lea
xchg
mov
pop
std
decl
shll
clc
mov
leave
lods
push
mov
jl
pushl
iret
inc
lds
push
mov
stc
and
loop
mov
xor
repnz
or
jmp
add
xchg
in
insl
pop
mov
xor
data16
mov
dec
scas
jl
movsl
fdiv
or
push
jl
rcll
push
push
sahf
aaa
out
and
sub
dec
jno
pushf
cli
xchg
inc
adc
mov
insl
hlt
pop
cmp
out
adc
mov
loopne
aam
pop
push
dec
fidivrl
arpl
xchg
fsubr
mov
scas
jo
xchg
dec
mov
inc
jmp
push
add
addr16
ffreep
aas
shll
pop
mov
push
cmp
fnsave
mov
dec
push
dec
aas
rol
lods
shrb
push
jne
loop
incl
inc
je
js
pop
stos
mov
fs
outsb
test
call
cvtps2pd
sahf
mov
inc
dec
push
out
pop
fcomp
sbb
outsb
in
addr16
adc
inc
data16
jg
movsb
xchg
pushl
je
cmp
sbb
push
das
mov
jg
dec
pop
xor
sub
cmc
orb
fwait
jmp
xor
inc
sahf
loope
idiv
cmp
jle
out
data16
sub
iret
test
lret
lcall
xor
sbb
rcrl
cmpb
aad
cmp
imul
psubb
lcall
pop
mov
les
mov
aaa
pushf
ss
call
pop
xchg
inc
lret
outsl
mov
mov
shll
jl
mov
stc
sbb
lcall
mov
outsl
mov
arpl
int
add
filds
ret
dec
or
mov
xor
out
mov
inc
mov
and
daa
pushf
insl
ud0
aas
ljmp
push
icebp
int
mov
mov
fistps
fdivr
lcall
js
rorb
adc
ficompl
cli
mulb
jecxz
xchg
pop
nop
pop
cld
pushl
add
pop
bound
popf
xchg
xchg
pop
xor
in
push
jmp
in
xor
je
ds
not
add
or
sbb
dec
inc
lds
incl
lahf
in
mov
mov
mov
inc
add
jle
fcomi
call
mov
into
jge
ljmp
ss
push
movl
bswap
fcoml
cmp
pushl
pop
xchg
and
cltd
jp
divb
adc
shll
xchg
mov
mov
movsl
mov
outsb
imul
push
stos
sub
and
sub
mov
mov
ljmp
inc
in
mov
push
push
adc
push
add
popf
aas
push
mov
mov
sub
incl
inc
push
push
xchg
hlt
push
mov
xchg
punpcklwd
sbb
std
pop
clc
add
out
xchg
and
mov
call
jg
mov
std
lret
adcl
addr16
pop
pop
mov
not
imul
lock
lcall
addr16
jmp
sub
cmc
imul
push
jb
cmpsl
loopne
fldt
lret
ljmp
lahf
sub
xor
lock
repz
adc
insb
cmp
cmp
cltd
pop
and
imul
cmp
sbb
scas
pop
mov
fdivs
loop
test
dec
test
sub
jp
and
cmc
inc
pop
or
cmp
std
ljmp
into
pushf
sub
imul
push
fs
push
dec
dec
mov
jbe
pushl
rolb
fcompl
pop
pop
pusha
in
xchg
mov
sub
push
ljmp
adc
xor
je
cltd
aam
pop
jg
pop
push
rorb
pushl
pop
iret
mov
push
nop
cmc
cwtl
add
imul
inc
scas
and
icebp
lds
pusha
arpl
jg
dec
jmp
mov
inc
fwait
sub
insb
andb
fistpl
je
inc
adc
into
mov
push
fcmovb
dec
in
pop
cmpsb
sbbl
pop
loopne
jnp
mov
pop
adc
jae
push
jnp
insl
or
adc
and
movsl
out
jmp
mov
gs
cwtl
push
fadd
and
inc
cmp
out
jns
stos
and
jle
dec
idivl
xor
xchg
fimull
sbb
sub
and
or
push
fstps
outsl
movb
or
cmp
insl
push
incl
in
mov
cmp
notl
sbb
lcall
push
pop
iret
mov
pop
sub
xchg
mov
mov
sub
ja
fwait
push
adc
jnp
jo
mov
popa
fbld
xor
lods
adc
enter
xchg
mov
mov
mov
inc
add
push
pop
test
icebp
adc
mov
cld
inc
mov
call
push
imul
test
and
mov
mov
xor
jne
testl
sub
decl
es
inc
std
mov
push
sub
rorl
out
stc
imul
mov
jo
incl
cmc
pop
xchg
sub
hlt
add
xchg
and
sahf
cmp
jg
fs
adc
out
push
xchg
xor
imul
dec
xchg
loop
lcall
dec
dec
jl
push
int
orl
jmp
push
mulb
cmp
js
rorl
xchg
push
inc
jno
faddl
mov
movsb
cmp
jae
jmp
in
js
mov
mov
in
clc
jmp
jmp
loope
jle
adc
notl
jne
sti
daa
lods
xor
incb
and
cltd
pop
sub
push
jno
in
out
mov
nop
shll
lcall
jg
outsb
mov
sbb
adc
notrack
pop
jno,pt
ss
lcall
and
sbb
or
mov
xor
push
xor
pop
jl
jb
inc
lea
movsl
jp
sub
std
mov
xchg
and
test
jp
dec
ss
loopne
mov
jmp
and
xchg
lret
mov
lcall
popa
or
push
push
jb
ror
out
mov
addl
clc
std
ret
mov
pop
rcr
cmc
arpl
push
xchg
fcoms
dec
stos
daa
adc
fidivl
mov
dec
sub
arpl
mov
jle
nop
xorl
subl
into
jae
or
mov
cmp
jl
mov
fisttpll
pop
test
lahf
xor
pop
mov
jmp
aaa
and
and
adc
iret
adc
xchg
or
call
fcmove
pop
into
add
jmp
inc
lcallw
aas
mov
fldcw
addr16
or
jno
mov
jmp
roll
add
push
cltd
adc
jp
notl
inc
movsl
push
call
pop
sub
fwait
inc
mov
lea
dec
mov
dec
mov
cwtl
jmp
ret
mov
cmpsb
icebp
adc
pop
jo
mov
jp
pushl
lock
jbe
or
fiadds
mov
stos
add
inc
and
xchg
pop
stc
jmp
decl
fbld
hlt
push
push
pop
das
repz
pop
lds
xchg
ljmp
sub
ljmp
pop
int3
scas
push
imul
aas
sub
xor
ret
mov
lods
ljmp
jmp
sub
movl
sbb
pop
pop
call
popa
repz
push
push
mov
movsl
fwait
inc
aaa
inc
mov
adc
cmp
dec
add
sub
dec
pop
clc
sub
mov
xchg
daa
clc
fs
add
mov
sbb
rcrl
stc
adc
pop
cld
pushl
ror
adc
pop
and
dec
push
mov
imul
incl
adc
nop
fwait
movsl
xlat
jmp
mov
or
cld
mov
pushl
cld
jnp
cld
mov
or
call
je
mov
jg
call
jmp
mov
add
xor
mov
push
pushl
std
icebp
aad
shrb
gs
xchg
or
and
fidivrs
mov
xlat
jg
ljmp
addl
sub
push
gs
inc
add
movb
mov
mov
xchg
pop
popa
inc
dec
and
xchg
lods
sbb
add
aam
and
push
scas
decl
push
add
je
adc
imul
popa
mov
fidivl
mov
mov
test
cmp
stos
data16
vpmullw
jno
lea
lcall
popa
movsb
mov
ljmp
or
mov
daa
xor
out
clc
mov
xor
dec
mov
jecxz
jg
jbe
das
pop
mov
nop
out
mov
outsb
pop
loope
xchg
jns
neg
imul
inc
pop
mov
jae
dec
ljmp
jmp
test
and
stc
sbb
mov
inc
pusha
or
rcrl
call
mov
test
lcall
xchg
add
sahf
cwtl
dec
fcmovb
imul
mov
into
lcall
in
test
and
jmp
pop
icebp
js
add
cld
arpl
or
jmp
call
inc
pop
daa
xor
and
mov
mov
mov
test
sar
pushl
stos
adc
jg
cmp
addl
iret
mov
sbb
pop
ds
cli
pop
loopne
bound
in
and
popl
and
adc
add
dec
rcll
sar
test
jp
pop
orb
xchg
xchg
or
cmc
push
sbb
cmp
add
in
call
data16
add
add
mov
sarb
cli
sub
add
and
dec
call
frstor
enter
dec
add
insb
add
push
mov
add
pusha
imul
add
lds
add
das
in
repz
or
or
add
add
daa
loop
int
pop
or
addb
sbb
sub
je
lcall
inc
lcall
xor
lds
push
and
pop
repz
add
les
rcrl
mov
mov
xor
or
xchg
mov
test
jno
dec
push
jb
jp
incl
jae
cli
push
mov
inc
div
lahf
lods
mov
nop
in
out
add
push
enter
cmp
sub
cmp
dec
push
bound
sbb
push
mov
mov
adc
mov
leave
fisubl
inc
sbb
sub
add
push
lods
loopne
add
repnz
push
jecxz
mov
pop
shlb
push
add
ss
xchg
or
push
dec
adc
mov
jbe
fsubs
test
sti
ss
sbb
add
bswap
hlt
test
icebp
add
mov
out
pop
shr
mov
mov
sub
push
sub
lds
lahf
add
std
popa
daa
xor
int3
int3
loop
pusha
test
sub
pop
or
jae
imul
or
stos
xchg
sbb
adcb
vpshufhw
dec
add
dec
subb
or
loopne
mov
dec
addr16
mov
adc
push
sub
ficoml
sub
mov
dec
std
fcomip
add
in
sbb
pushf
lock
movsl
cld
jg
fstp
popf
das
dec
cmpsb
xchg
push
xchg
enter
and
add
mov
sub
mov
cs
xchg
loope
adc
jns
pop
jo
and
push
inc
mov
pop
lock
xor
or
push
add
rcrb
sub
push
push
jo
mov
xor
enter
test
mov
ret
test
icebp
cltd
out
dec
sub
pop
or
mov
sbb
sub
xor
lock
sub
out
inc
je
scas
adc
add
cld
fst
and
fidivs
xor
push
or
mov
adc
aam
mov
add
int3
pusha
jle
in
out
rolb
nop
gs
bound
lds
jp
sbb
xor
mov
cwtl
add
and
pop
lock
sub
pop
cmpb
dec
xchg
mov
sahf
cmpb
mov
mov
bound
mov
fisttps
in
jno
stc
mov
cmp
jg
sbb
and
mov
pop
push
cld
mov
mov
stos
push
add
test
rorl
push
mov
add
cli
mov
fnstcw
rolb
and
stos
push
std
or
inc
and
loope
adc
push
sub
pushf
cltd
push
fisubrs
sub
mov
add
push
lock
push
aaa
push
inc
andb
inc
pop
pop
inc
mov
mov
sub
push
lock
pop
push
jne
jb
lods
test
adc
mov
je
jg
sarl
sub
jmp
imul
loop
push
mov
or
mov
and
inc
in
mov
sbb
xchg
add
aas
insb
mov
lods
clc
push
push
jno
xchg
and
xor
push
inc
scas
and
push
add
dec
adc
nop
or
call
ror
push
xchg
xor
adc
dec
cli
cli
add
inc
xor
push
pop
sbb
dec
leave
xor
xchg
pop
or
scas
and
ljmp
into
or
test
scas
sub
add
push
lret
insb
js
jmp
es
imul
inc
lods
loope
inc
or
in
mov
scas
fnsave
das
add
or
mov
sbb
mov
sub
fbstp
fbld
lods
cli
in
adc
sbb
dec
jbe
sarb
mov
add
and
aam
mov
clc
scas
aam
inc
js
jmp
xor
cmc
sbb
push
add
nop
push
push
pop
adc
in
or
cmpb
dec
imul
loope
push
fisubs
xchg
fdivrl
or
dec
rcrl
mov
mov
bound
shlb
sbbl
testb
push
mov
sbb
cld
and
cmp
or
mov
adc
in
addr16
ss
cmp
xor
out
mov
dec
and
data16
rclb
lock
je
xchg
add
or
push
int
data16
popf
rcrb
add
pusha
fsubs
nop
idiv
aam
fisttpl
push
rcll
test
push
rcrb
mov
mov
aam
jecxz
lock
sbb
add
add
mov
jb
mov
adc
dec
adc
mov
sub
push
pushl
push
xchg
and
dec
in
call
mov
outsl
jmp
jnp
in
ret
pop
push
scas
add
push
and
adc
cmp
cmc
lods
test
loope
xchg
mov
pop
das
cmp
sub
sub
stc
inc
add
add
test
or
test
dec
imul
jecxz
ljmp
and
mov
lock
mov
call
adc
or
std
aas
clc
inc
lret
xchg
mov
pop
xor
ja
in
sti
mov
in
jae
mov
fadds
push
xchg
loop
loopne
jecxz
lods
jle
push
mov
test
jle
aaa
sbb
push
out
cmp
cli
dec
mov
inc
ljmp
repz
sbb
incl
mov
push
in
data16
rcl
push
idiv
scas
scas
lahf
mov
jecxz
divl
mov
jp
movsl
adc
pop
add
decb
lock
push
fisttpl
std
ja
pop
lcall
imull
aam
clc
in
shl
dec
inc
pop
lcall
or
repz
in
or
dec
call
add
das
ret
push
test
sub
dec
out
push
push
lock
or
adc
sub
cmpsb
mov
loop
mov
daa
lret
xchg
repnz
and
inc
fcomps
test
and
mov
jl
outsb
push
jae
sbb
xor
and
clc
sbbb
insb
out
xor
push
add
vpmulhuw
cmp
ljmp
inc
inc
mov
stc
call
pop
cmc
roll
lock
mov
test
push
aam
add
cmp
sub
push
and
lock
stc
adcb
dec
xor
xor
mov
shr
bnd
es
push
xchg
mov
pop
pop
hlt
xor
pop
adc
loope
cld
fucomp
xchg
xor
cmc
mov
cmp
out
xchg
pop
push
mov
push
call
push
lahf
sub
pop
push
xchg
mov
xor
adc
jmp
xor
and
jge
inc
test
rclb
adc
sub
and
adc
pop
mov
or
pop
mov
push
adc
out
ret
clc
jmp
in
dec
leave
cmc
push
mov
xchg
mov
shlb
push
sahf
aad
pop
cmp
mov
inc
daa
mov
call
cld
mov
push
dec
rcl
cmpsb
mov
and
test
xchg
hlt
mov
push
cmp
scas
xchg
rorb
add
xchg
inc
popf
cwtl
mov
lds
mov
pop
dec
mov
sbb
rorl
decl
sbb
rolb
push
rep
inc
lock
xchg
adc
in
addr16
enter
lcall
mov
lock
sarb
movsb
dec
dec
push
adc
addb
mov
loop
xchg
pop
inc
scas
out
pop
sbb
pushf
push
incl
loopne
cmpsb
mov
dec
or
cmpsb
xor
or
inc
sbb
sbb
adc
sbb
out
add
jl
call
add
jl
mov
and
jbe
xchg
rolb
cwtl
jle
jp
lods
inc
sbb
sbb
pop
cmovo
nop
jne
movsb
adc
je
xchg
adc
aad
aaa
loop
xchg
mov
jns
lret
cmp
dec
push
or
mov
dec
cmp
les
repnz
add
inc
stos
xor
loop
jmp
cli
xor
pop
shrb
fisttps
push
dec
fwait
add
jl
fidivl
mov
xchg
or
stos
inc
loop
mov
pop
mov
xchg
pop
or
aam
adc
movsl
lods
das
jo
loopne
lock
jge
sub
push
xor
gs
aas
cld
sbb
adc
lahf
loop
and
inc
xor
or
pushf
out
mov
sub
jl
xorb
jecxz
jmp
hlt
outsb
enter
inc
pop
rorb
push
test
into
addr16
push
lahf
movsl
lcall
movsb
out
dec
and
xchg
sub
adc
sub
mov
cmp
pushf
nop
push
push
jg
pop
adc
add
xchg
add
xchg
mov
add
rorl
stos
fcomp
lods
into
add
pop
aaa
add
push
shl
push
outsl
cmp
sub
mov
lcall
jo
fs
arpl
cmp
mov
repnz
or
xor
add
jge
call
xor
mov
jns
imul
enter
stos
ret
pop
cmp
cmpsb
or
jnp
dec
in
jbe
lock
push
das
jl
add
lret
shrb
add
cmpb
cmp
enter
cwtl
icebp
mov
inc
fisttps
dec
inc
out
mov
or
insb
push
mov
pusha
sub
stos
idiv
xchg
lock
flds
cmp
sbb
mov
scas
aam
inc
sub
mov
mov
push
mov
xchg
in
xchg
jne
sub
push
sbb
into
push
sub
inc
and
adc
pop
sbb
es
xor
int
sub
mov
pusha
fwait
ja
or
cmp
jbe
js
mov
enter
out
pop
mov
cwtl
xchg
xor
cld
dec
and
ljmp
mov
loop
jge
stos
or
shlb
xlat
scas
cmpl
mov
leave
mov
mov
fidivrs
int
shlb
xor
es
pop
lock
les
ficompl
sbb
inc
call
mov
repnz
in
jge
aas
mov
test
adc
sub
mov
push
mov
mov
es
sbb
pop
adc
or
cld
add
mov
call
pusha
add
mulb
cwtl
xchg
rcr
js
outsl
add
bound
xor
xchg
push
pop
push
mov
orl
sarb
rcl
and
mov
dec
and
or
or
mov
pushf
jg
test
icebp
fidivl
sbb
jbe
sub
mov
andb
inc
arpl
or
mov
push
js
cmp
lods
mov
dec
mov
xchg
inc
adc
xchg
push
add
out
test
ret
jg
mov
pop
lahf
add
test
pop
icebp
in
loop
mov
or
dec
jae
push
push
pop
mov
mov
insb
jo
jg
mov
clc
call
imul
mov
or
repz
push
cmp
jo
outsl
ja
inc
cmc
icebp
and
add
aaa
dec
movb
mov
sub
pop
movsl
mov
arpl
scas
cli
xchg
test
sub
roll
or
or
cltd
jo
xor
xchg
jecxz
nop
jecxz
dec
cmp
dec
jno
jg
stos
push
mov
mov
and
add
or
and
mov
and
scas
subl
add
jle
pushl
add
cmp
jecxz
scas
ficomps
xchg
inc
add
in
and
std
sbb
dec
jbe
push
test
sbb
decl
inc
dec
cmp
jne
jo
ds
sbb
enter
mov
sti
or
cwtl
pop
scas
jg
dec
add
adc
push
dec
ja
sub
push
pop
decl
dec
jb
pushf
in
jp
cmp
cld
cmp
cmp
sub
out
cmc
jg
insl
or
sbb
fs
pop
ror
push
xchg
push
xor
push
mov
push
lock
or
dec
mov
outsb
in
sbb
loopne
push
adc
imul
mov
xchg
movsb
lock
cmp
and
les
dec
mov
push
aas
lahf
jmp
mov
insl
es
test
outsl
into
mov
cmpb
test
mov
jbe
inc
push
xor
es
call
mov
rolb
sbb
test
imul
rcrl
incl
add
cmp
push
mov
adc
xchg
or
enter
sub
mov
mov
push
je
repnz
outsl
adc
sbb
ss
rorb
jbe
push
lea
sti
and
fwait
in
jb
cld
xor
movsb
aad
xchg
jo
push
stos
jbe
sbb
jb
push
loop
and
je
shrb
sub
aas
lcall
mov
add
add
push
pop
fwait
xor
gs
decl
add
pusha
push
es
rcl
in
mov
into
xchg
mov
ss
ss
call
sub
push
fstpl
sbb
fcomi
sarb
add
mov
jmp
lret
push
cmp
pop
imul
rcl
pushf
add
mov
adc
xor
lock
filds
inc
add
push
in
or
and
repz
aaa
push
mov
bound
leave
cmp
mov
push
mov
and
shll
mov
fiadds
lock
into
jo
into
loopne
push
popf
in
push
adc
les
les
sub
stos
pusha
sub
sbb
mov
push
test
sti
xor
fisttps
nop
orl
nop
inc
incl
pusha
xor
add
add
fldl
add
add
jl
pop
cmpb
or
popf
movsb
mov
pop
and
leave
or
ret
nop
jl
or
jb
lcall
add
inc
aaa
cmp
push
pop
popf
adcl
pop
add
ret
xchg
xor
lds
pop
jecxz
push
pop
into
mov
cmp
mov
pop
mov
outsb
and
pop
adc
cmp
dec
inc
sahf
cmp
pop
loop
and
outsb
clc
data16
add
mov
mov
test
push
add
sbb
add
pop
cmp
lahf
inc
iret
jno
push
dec
ret
cs
lock
lock
xchg
pop
pusha
daa
mov
add
push
sbb
cmp
pop
out
stos
ss
cli
xchg
mov
je
pop
iret
lods
mov
sbb
movsb
ds
jbe
or
push
pop
sbb
ret
pop
cld
add
xchg
add
loop
inc
inc
scas
sub
add
ljmp
movl
pop
xor
hlt
aaa
pop
out
nop
mov
mov
aaa
pop
rcll
dec
sub
pop
or
in
sub
pop
test
jnp
outsb
cmc
inc
shr
cs
filds
fistps
pop
fimull
lods
mov
dec
movsb
add
js
add
sbb
pop
jo
or
sbb
lcall
mov
xorb
cld
nop
enter
mov
xor
xchg
xchg
add
or
ljmp
stos
arpl
add
sub
dec
jg
sub
insb
data16
jb
adc
lock
pop
sahf
xor
test
mov
add
adc
test
push
icebp
ja
push
packsswb
add
sti
xor
js
jmp
cltd
mov
add
add
or
inc
test
cmp
inc
or
cmp
mov
xor
mov
das
out
pop
xor
xor
cmp
push
sub
xchg
mov
or
and
fcomip
and
data16
sbb
mov
jno
mov
sub
push
push
push
sahf
sbb
int
or
arpl
movb
nop
or
cmpsb
lock
cmp
inc
mov
fs
rclb
cmp
pop
lock
ja
test
orl
cli
lcall
pop
int
mov
es
jo
jp
dec
imul
jle
call
test
std
adc
inc
sbbl
add
jo
xor
dec
loopne
lods
add
mov
pop
mov
in
mov
arpl
sub
cmp
push
pop
jl
je
jo
pop
add
or
mov
sub
add
out
mov
pusha
lock
pushf
cmc
and
shlb
pusha
sbb
adc
sarb
stos
adc
test
dec
add
adc
fidivs
sub
outsl
test
cs
push
orb
mov
xchg
enter
push
enter
popa
mov
sti
or
mov
pop
inc
xchg
mov
rcr
inc
inc
inc
into
push
push
sub
icebp
pop
push
movb
jnp
mov
jg
mov
mov
mov
dec
clc
test
and
push
mov
adc
mov
enter
mov
jne
les
mov
push
fwait
ja
mov
js
sbb
push
and
outsl
add
adc
push
loope
inc
aaa
ret
sbbb
mov
or
cmp
cs
stc
push
xchg
or
and
aam
adc
jae
jo
push
flds
rclb
out
pusha
pop
fisttps
mov
inc
sub
jp
jbe
pop
les
in
fcomip
pop
loop
cwtl
hlt
mov
movsb
aam
into
hlt
imulb
lods
inc
in
push
push
rorl
push
hlt
pop
and
loop
into
pop
je
dec
sub
test
mov
je
imul
gs
pusha
add
mov
sbb
inc
lds
inc
adc
push
mov
inc
inc
loop
adc
ss
rcrb
cld
outsl
mov
or
pusha
mov
ret
rcrb
pop
push
adc
mov
jg
inc
and
cmp
push
jecxz
add
xor
xchg
out
into
xchg
aas
mov
pop
mov
fwait
cwtl
mov
pop
adc
cmp
dec
xchg
je
pop
mov
xor
and
push
push
pop
mov
push
fadds
add
or
xchg
pushf
out
lret
xorb
mov
cld
loop
push
inc
cmpsl
jecxz
add
das
jl
call
mov
mov
sbb
and
aad
push
or
dec
sbb
inc
outsb
and
lods
enter
int
in
shl
mov
mov
inc
lret
sar
jg
push
aad
inc
ljmp
inc
je
inc
jle
jg
jle
stc
push
call
sub
loop
push
cs
cmc
dec
in
and
dec
pop
pushl
dec
insb
mov
pushl
cltd
sub
pop
outsb
bound
pushl
mov
add
sbb
lods
and
jb
xchg
mov
jo
mov
xor
sbb
mov
jmp
std
push
adc
scas
sub
sbb
and
cmp
mov
sub
sbb
enter
loope
xchg
es
push
sti
mov
addr16
jp
ret
lock
add
test
roll
bound
mov
dec
ljmp
stos
inc
fidivs
movsb
stos
adc
movsb
sub
cwtl
scas
pop
mov
fcoms
mov
iret
push
ljmp
cmpl
mov
in
sub
rclb
leave
adc
subb
aaa
cltd
jb
and
cmp
lods
mov
push
clc
aam
lock
jge
mov
push
xor
mov
or
call
pop
push
push
mov
aaa
xor
test
fildll
cwtl
pextrw
nop
jecxz
mov
jae
mov
lea
test
cli
xchg
inc
mov
xorl
fdivp
mov
call
popf
adc
push
mov
nop
jbe
es
inc
jmp
dec
mov
rol
sub
pop
add
int3
and
mov
fistpl
mov
ss
daa
shrl
lea
jmp
sti
ds
add
sbb
out
and
mov
xchg
mov
jns
mov
inc
push
or
int3
dec
pushf
idivb
cmpsb
sti
cmp
loopne
mov
xorb
fisubl
mov
adc
loop
push
adc
cmc
sbb
add
sar
stos
cmp
xchg
xchg
or
aaa
pushl
jb,pt
mov
cmp
and
sub
xor
push
adc
sbbl
and
mov
inc
faddl
adc
je
fwait
jbe
loop
jle
shlb
ljmp
push
loope
push
js
nop
mov
mov
push
insb
jg
or
xor
lret
xor
rcl
mov
in
push
xor
or
inc
ljmp
fbld
add
xor
add
std
mov
add
pop
pusha
decl
int3
aam
cmp
inc
and
mov
js
loopne
push
mov
xor
je
jge
or
js
ret
in
mov
lds
les
jbe
sbb
dec
pop
mov
mov
cmp
lods
es
lods
loop
mov
jl,pn
pop
pop
rclb
mov
inc
daa
mov
icebp
push
sahf
stos
xchg
movsb
add
lods
sub
insl
add
pusha
and
dec
xchg
loope
insb
cmpb
inc
insb
jmp
jge
rcll
div
sub
push
icebp
jg
xor
inc
xchg
addb
imul
add
cli
lock
fdivs
in
cmpsb
insl
xchg
mov
cmp
cmp
add
shl
pop
push
cld
push
stc
cmpb
push
and
sbb
mov
ds
test
add
mov
ficompl
lods
jge
lock
xor
inc
sti
pop
cmp
push
imul
inc
dec
inc
xorl
inc
pusha
cwtl
pop
lret
repz
inc
add
inc
sbb
pop
mov
inc
and
push
sarb
add
add
add
add
ds
push
aad
jle
or
test
mov
test
xor
jg
pop
fidivrs
jl
nop
adc
ret
test
mov
int3
jl
push
sbb
decb
sub
xchg
enter
push
xchg
inc
cmp
xchg
stos
xor
sub
loopne
xor
dec
or
scas
cmpb
scas
lock
mov
fucomp
add
jp
jl
adc
fwait
push
xor
aad
test
mov
jb
or
cld
jge
fwait
jle
scas
js
pop
sarb
call
push
xor
jg
or
mov
das
ds
cmp
sarb
or
push
ljmp
xor
rorb
imul
add
cmp
add
add
sub
out
jg
sub
nop
into
inc
or
into
scas
mov
dec
subb
push
and
nop
cmpsb
add
mov
inc
sub
out
mov
jno
add
ja
adc
rolb
mov
pushf
addb
add
jl
mov
pop
aad
sub
pop
mov
mov
sub
mov
fisubrs
jmp
cmpsb
xlat
and
out
rol
bound
mov
add
mov
add
mov
inc
les
or
cli
dec
rcrb
das
inc
and
pop
ljmp
ffree
pop
jae
pushf
sbb
jns
sbb
decl
lea
adc
lock
mov
loopne
push
adc
cld
cmpsl
rol
push
inc
mov
sub
mov
and
loop
and
mov
sub
aam
and
pop
inc
mov
adc
nop
lcall
ret
outsl
mov
lods
fstps
mov
rorl
inc
lds
adc
lea
adc
add
insl
cli
cltd
inc
and
push
add
xchg
jnp
clc
mov
in
and
mov
push
call
call
hlt
nop
lret
cmpsb
iret
mov
push
call
adc
fwait
ret
mov
inc
xchg
jo
push
mov
lds
xor
insb
aam
cmp
push
mov
jp
dec
pop
push
loopne
sti
in
jg
mov
inc
push
add
push
and
movsl
cmp
jb
and
cmp
or
sub
pushf
xchg
test
scas
mov
lock
xchg
pop
jl
cltd
int3
xchg
adc
lahf
adc
fbstp
ljmp
push
dec
in
and
test
xor
xchg
mov
pushl
add
int3
test
mov
adc
dec
cmp
adc
insb
xor
movsb
out
pop
inc
push
insb
sub
mov
decl
or
ret
adc
dec
ds
cmpl
push
out
xor
cltd
mov
ss
test
ljmp
push
xchg
dec
cmp
inc
xor
fsubrl
in
mov
pop
fldl
add
cmp
jecxz
insl
or
mov
movsl
mov
push
adc
pop
ss
rclb
in
aam
fisubrl
xchg
je
jbe
push
push
je
aad
in
inc
divb
ss
mov
dec
adc
leave
jo
test
data16
push
add
pop
jb
pop
mov
push
mov
nop
mov
adc
jmp
je
jmp
push
add
aam
movsl
call
rcll
cld
into
and
xchg
imul
adc
pop
test
mov
push
add
stos
adc
out
cltd
enter
pop
int
mov
pop
adc
ret
sti
cmp
hlt
mov
je
sub
lret
inc
push
jecxz
in
ja
adc
and
xor
cli
pushl
jmp
jle
or
fildll
jb
push
shll
xor
decl
lcall
mov
add
inc
dec
lcall
popa
or
outsb
jmp
mov
cwtl
adc
and
add
sbb
imul
inc
test
orb
inc
ret
icebp
adc
sbb
or
test
lods
es
mov
add
lds
jbe
das
xor
shrb
adc
cli
push
or
fcompl
xchg
push
sti
and
lret
mov
push
enter
add
insl
adc
out
out
stos
add
cmp
pop
inc
es
sbb
add
out
lods
out
mov
cwtl
mov
test
add
dec
outsb
ss
outsl
add
dec
lret
mov
jmp
es
jae
leave
pop
sub
jne
lret
inc
call
or
jl
push
cwtl
and
sub
cs
inc
les
cmp
fmull
mov
inc
mov
push
cmp
aad
add
call
out
push
rcl
call
push
pushf
or
inc
cmp
addb
decl
pop
loope
jno
test
cmpsb
sahf
add
add
std
stos
and
mov
loopne
insl
lret
dec
jmp
shrb
clc
lds
not
mov
loop
sahf
xchg
mov
cs
movsb
out
push
fsubl
lcall
negb
lods
mov
cmp
add
mov
lock
test
scas
ss
ds
pop
xor
adc
sub
loope
sbb
pop
clc
inc
mov
adc
sbb
mov
cmp
mov
out
imul
add
out
das
in
testb
cmp
xlat
cmp
or
dec
inc
lods
xchg
push
or
aaa
mov
orb
loopne
xchg
mov
and
imul
call
call
std
mov
cmp
jle
xor
adc
sbb
std
fistps
pop
jne
jg
jp
and
nop
jb
mov
loope
dec
adc
xor
mov
ljmp
xchg
inc
outsl
sub
add
xchg
jo
bound
dec
jge
xor
dec
mov
xor
lock
lcall
lcall
mov
movsb
and
mov
add
sti
pop
xor
lock
dec
sub
xchg
inc
aaa
lret
hlt
inc
inc
sarl
push
sbbb
mov
aad
fists
incb
insl
and
mov
sbb
bound
inc
push
pop
sbbb
cld
jge
jns
mov
dec
sub
scas
loop
sbb
mov
jecxz
in
jg
lock
inc
xchg
inc
stc
mov
fs
pop
cld
add
mov
call
lock
and
dec
dec
sbb
or
rcll
add
push
fmull
pop
loop
xchg
cli
or
xchg
mov
fiaddl
mov
jae
daa
sbb
inc
das
dec
dec
mov
sub
fadd
adc
mov
jno
add
jecxz
test
mov
out
adc
rcrb
ret
cmp
shl
call
ja
out
add
int3
ja
cmp
sahf
mov
mulb
inc
and
aas
lock
or
mov
jo
fsubp
jl
dec
cli
add
pop
leave
xchg
xchg
cmove
insl
addl
push
lds
int3
adc
push
mov
ret
testb
mov
sub
fisttps
mov
out
orl
hlt
xchg
jle
cmpsl
mov
pop
and
xlat
xlat
in
cmp
xor
pop
fisttpl
dec
mov
mov
cs
push
loop
outsl
dec
xchg
cmc
fcomip
adc
in
rorb
mov
xorl
jg
scas
in
lods
inc
cmp
xchg
aam
lods
clc
fiadds
add
insl
and
sbb
std
sbb
ret
test
leave
cmpsb
call
xchg
sahf
sub
push
sbb
inc
xor
fistl
fsubl
sub
adc
mov
dec
mov
jno
je
fiadds
mov
aad
inc
inc
xchg
add
pop
ret
fwait
rcll
nop
mov
adc
outsl
cwtl
push
sub
adc
mov
in
mov
adc
neg
xchg
jb
bound
sbb
add
push
xchg
and
test
pop
cwtl
mov
or
cmp
sub
stos
xor
or
add
cmp
fidivl
sbb
jb
cmp
cmpsb
xor
adc
adc
movsl
loope
sbb
mov
int3
jne
hlt
or
test
xchg
cwtl
imul
push
lock
bound
lahf
adc
rcr
mov
in
jg
mov
or
je
rolb
clc
push
or
cmpsb
xlat
inc
mov
in
jmp
mov
push
into
sbb
mov
in
dec
fs
loop
cmp
loope
in
mov
fs
bound
jl
pop
xchg
sahf
inc
or
popa
inc
adc
sub
das
and
inc
adc
sahf
aaa
dec
xlat
jecxz
jg
xchg
xor
xor
addl
adc
and
mov
mov
lods
push
testb
push
mov
outsb
dec
nop
jnp
inc
pop
sbb
push
lods
icebp
sbb
dec
lock
ret
loopne
push
mov
stc
adc
pop
mov
dec
cmpl
outsl
out
clc
push
xchg
add
xor
ss
orb
loopne
xor
orb
mov
pushf
lock
inc
adc
mov
les
call
jp
mov
dec
dec
roll
outsb
stos
into
enter
cmc
sar
aaa
cld
lcall
mov
or
cmp
fidivrl
lret
inc
add
add
adc
nop
push
mov
loopne
cmp
jbe
mov
cld
push
jb
or
aas
fisubl
sbb
xchg
shll
or
xor
loope
sub
cmpsb
xchg
and
sbb
mov
sub
pop
mov
mov
das
mov
sbb
push
js
dec
add
loop
jmp
adc
sub
fcoml
test
addb
jle
xor
std
in
shrb
pusha
and
xchg
clc
mov
add
pop
mov
and
sub
push
add
jecxz
imul
mov
mov
sub
pop
add
mov
call
fsubs
pop
adc
adc
das
xchg
nop
inc
xor
and
pop
cmp
xchg
and
lret
pop
pushf
push
mov
add
insl
fbld
or
lock
xchg
clc
aaa
stos
dec
shll
inc
sbb
mov
enter
or
lods
jge
push
push
pop
sbb
and
inc
pop
cmp
jecxz
mov
cld
mov
push
out
fidivrl
mov
adc
inc
push
ds
or
decb
xchg
inc
mov
je
nop
negb
pop
sar
push
mov
fisubl
adc
cmp
lds
xchg
arpl
cmp
and
mov
add
and
adc
mov
insb
lds
mov
push
fdivr
sbb
xorb
imul
and
test
pop
sbb
sub
xchg
rolb
aas
push
ficompl
push
dec
mov
xlat
and
popf
js
into
or
fcmovne
cld
add
and
rorb
bound
out
mov
and
inc
and
pop
loope
dec
aam
daa
mov
pushf
js
pop
ljmp
cltd
shlb
lcall
xchg
push
shll
add
cs
dec
jg
ljmp
in
inc
adc
mov
pop
add
push
or
or
subb
fdivp
add
repnz
ss
dec
jg
cmpsb
aaa
rcll
jle
loope
loope
sbb
call
mov
sub
dec
mov
in
dec
shl
push
hlt
in
pusha
shll
leave
mov
ljmp
movsl
adc
or
loopne
pushf
out
enter
sbbl
cmp
xchg
cmpsb
and
inc
loop
hlt
outsl
jo
jecxz
add
mov
in
xor
aam
mov
xlat
dec
dec
sub
test
xchg
inc
in
dec
mov
aaa
jns
pmullw
jle
fisubl
mov
mov
or
cwtl
or
mov
add
lret
or
rcl
scas
aaa
and
add
test
xor
xchg
hlt
xchg
gs
shlb
ss
jmp
mov
arpl
aam
in
lahf
push
adc
pop
and
pop
lock
jbe
xchg
xor
sub
loopne
and
mov
out
incl
mov
xor
test
or
decl
push
cmp
adc
out
add
ds
xchg
les
lea
and
lock
daa
inc
ret
popa
mov
dec
loopne
pusha
enter
dec
sbbb
add
test
or
jg
jb
dec
mov
mov
dec
rorb
jle
imul
adc
add
sarl
lock
mov
pop
inc
xor
sbb
hlt
push
push
lods
mov
in
mov
xor
push
xchg
call
fistpll
mov
loopne
lock
andb
clc
scas
sbb
rclb
test
lds
push
adc
inc
push
or
je
push
mov
mov
sub
or
add
or
sbb
call
dec
pop
in
xchg
movb
cmp
push
std
mov
lret
inc
xor
ret
add
dec
push
jmp
lods
lods
add
shrb
in
pop
pusha
lock
sti
data16
lcall
sub
and
outsl
sub
lock
cld
pop
xor
push
mov
dec
roll
inc
out
sbb
fdivp
mov
or
push
testb
inc
test
xchg
jp
sbb
divb
push
push
adc
jbe
lock
nop
cmp
out
pushf
sub
negb
or
dec
sub
pop
adc
or
rcll
insl
mov
jecxz
test
mov
xor
loopne
stos
orb
push
pop
add
push
push
sbbl
loopne
lea
nop
or
cmp
mov
xchg
dec
push
mov
out
jno
rorl
mov
xor
xor
pop
dec
add
icebp
cltd
jnp
sbb
mov
je
movsl
sub
lods
repnz
daa
jns
add
push
loope
les
push
mov
mov
cld
fcmovnu
xor
insl
cltd
pusha
dec
inc
mov
and
ljmp
dec
cmp
pop
cmp
ljmp
loopne
data16
lret
or
dec
add
dec
stc
dec
fcoml
inc
jecxz
imul
mov
pop
push
and
aas
pop
lret
sahf
add
xor
sbb
add
push
pop
push
jp
pusha
lds
cmp
and
and
cmpsl
dec
test
sbb
pop
xchg
and
mov
lret
adcb
jo
xchg
mov
and
jg
dec
push
mov
ja
jmp
decb
xlat
mov
dec
push
sbb
inc
dec
clc
sub
fisttps
jp
fcompl
outsb
pusha
cmp
mov
mov
das
push
sbb
jg
mov
jmp
aam
ds
leave
lret
addr16
xchg
in
jnp
fidivl
popf
lock
test
jecxz
and
mov
inc
lahf
pop
adc
imul
icebp
sbb
cmp
push
mov
pop
sub
out
inc
jno
outsb
int
jle
push
and
inc
cmpb
xor
or
je
pop
pop
rolb
ret
dec
daa
add
outsl
cli
cli
sub
or
pop
mov
pop
adc
test
add
pusha
scas
rclb
cmp
adc
push
loopne
push
stos
inc
movsb
cmp
adc
mov
jo
outsb
scas
push
std
mov
sysret
adcb
je
cmp
inc
ret
adc
xor
outsb
adcb
mov
push
or
test
leave
mov
jnp
xor
ret
mov
mov
cmp
xor
scas
mov
mov
faddp
nop
xor
and
ds
mov
or
rorb
mov
cltd
xchg
fstl
subb
push
fistl
ficoml
int
mov
bound
xor
inc
pop
mov
push
decb
aas
jmp
and
push
call
icebp
and
mov
sub
inc
inc
xor
testb
out
add
shlb
aas
lods
sub
jp
inc
add
cwtl
sub
jnp
test
jg
arpl
and
sbb
inc
cmpl
jmp
xchg
in
test
inc
cltd
popa
mov
clc
into
add
sub
cmpsb
cmc
ret
fidivrs
xor
push
pusha
adcb
jecxz
cli
pushf
js
cmp
cltd
mov
sub
bound
aad
dec
mov
pop
add
mov
out
push
push
fiaddl
dec
xchg
into
ja
es
push
jle
lcall
add
scas
jmp
clc
data16
cwtl
dec
cmp
pop
mov
push
sub
mov
xchg
das
pusha
mov
loop
fisubl
inc
mov
xchg
or
inc
xor
test
arpl
and
inc
shl
jnp
pop
mov
pop
pop
sub
das
jbe
ret
loopne
fdivr
mov
push
cs
inc
stc
mov
xchg
jb
cs
fcmove
ret
sahf
inc
imul
jl
hlt
mov
inc
fwait
iret
movsb
add
mov
xor
xor
lods
push
push
addl
clc
jecxz
jecxz
push
dec
jl
xchg
push
mov
adcl
pop
xchg
push
pushf
leave
adc
lcall
sbb
cmc
mov
mov
rolb
es
inc
pusha
stos
clc
xor
add
ds
rorb
popf
jge
pop
out
pop
jbe
adc
cmpsb
out
fsubrl
adc
and
and
sub
mov
cmp
add
push
mov
cs
jmp
dec
sub
leave
pop
pop
test
dec
pusha
out
repnz
ja
dec
stos
push
jne
outsb
rcrl
add
cmp
lock
je,pn
ds
push
test
mov
out
inc
stos
or
ss
shrb
xchg
push
and
int3
pushf
loop
dec
add
pop
in
mov
imul
loopne
loop
cmp
lahf
sbb
inc
xor
jl
es
out
dec
insb
rol
sub
and
jnp
adc
mov
cwtl
pop
mov
xchg
add
les
pop
cmc
and
xchg
adc
jns
pop
jle
shl
xor
mov
pop
sub
sbb
adc
sub
cmp
fst
mov
add
jbe
jle
cli
pop
repnz
sub
addb
mov
jmp
jne
cmp
adc
sub
or
lock
xchg
lea
cld
sub
movsb
dec
insl
xor
mov
jecxz
mov
out
jb
dec
adc
ja
push
rolb
stos
xchg
cmp
shlb
fsub
ficomps
mov
add
pop
pop
and
jnp
add
add
mov
lret
bound
jbe
fiadds
subl
iret
sahf
inc
roll
add
stos
and
inc
mov
pop
cmp
lret
andb
or
inc
fisttpll
push
fdivrl
loopne
iret
pop
mov
cli
cltd
and
and
outsl
add
in
rorl
test
mov
test
lds
xorb
std
push
lea
add
test
inc
adc
sub
mov
fsubrp
adc
and
or
pop
fdivrs
fs
xor
and
or
push
mov
push
sbb
sub
cmp
lahf
jp
sbb
adc
test
mov
je
dec
cmp
call
mov
popa
pop
xchg
std
mov
mov
sub
mov
sub
mov
xlat
and
loope
mulb
mov
gs
or
mov
movsl
sbb
sbb
sbb
inc
lods
and
cld
data16
rorl
pop
test
cmp
xchg
sbb
and
lods
pop
inc
xchg
inc
js
lock
lods
jle
push
and
cmp
or
std
mov
cmp
sbb
jo
jle
filds
or
pushf
push
xor
gs
arpl
daa
out
jecxz
inc
push
adc
aad
push
dec
hlt
mov
xchg
inc
jle
nop
adc
lea
push
aas
jle,pt
std
clc
jo
nop
into
popf
clc
push
push
xchg
les
clc
divl
mov
jg
push
xor
and
lcall
sbb
push
jl
inc
inc
sub
mov
xor
mov
jb
out
mov
je
loopne
add
call
jmp
pcmpgtw
outsb
push
adc
mov
cmpsl
sbb
std
or
sbb
clc
cmp
mov
in
js
loopne
sub
xorb
push
dec
pop
pop
outsl
and
insl
or
inc
in
xchg
rorb
pop
mov
out
sub
or
movsl
lret
add
xchg
aad
jle
cwtl
push
es
aad
cltd
clc
or
in
adc
adc
pop
mov
in
mov
in
or
push
adc
inc
or
pushf
mov
fwait
out
cmc
xchg
ja
pop
cmpsb
fists
test
and
jp
push
sbb
and
sub
pusha
sti
push
mov
cmc
mov
sbbl
mov
into
hlt
shll
xchg
faddl
scas
add
sbb
enter
js
mov
fwait
je
nop
in
mov
push
dec
jecxz
sub
rcrb
movsl
or
test
icebp
das
call
xor
cli
and
ret
inc
inc
jbe
in
add
out
ds
pop
jg
imul
dec
jb
mov
push
add
or
out
fisttpll
add
lret
out
in
push
sub
sub
hlt
and
mov
scas
push
mov
cmpsb
add
aaa
test
cmp
adc
lds
xchg
push
inc
daa
test
mov
movsb
mov
icebp
int3
call
icebp
ja
cmpb
push
filds
and
inc
xchg
mov
cs
or
dec
fbstp
sahf
in
xchg
pop
insb
cmp
sbb
aaa
insb
mov
test
rcrb
inc
inc
out
mov
movb
pusha
clc
sbb
xor
lods
jge
sar
mov
fcoms
clc
xor
mov
out
scas
cmp
or
push
sbb
cld
add
dec
fstps
insb
or
jo
sub
dec
outsb
xchg
andb
and
push
adc
test
jnp
andb
mov
push
sub
cwtl
add
popa
popa
add
mov
sub
ss
cmpsl
out
bound
add
xor
pop
sar
imul
inc
testb
pop
addb
push
fisubs
add
jl
fsubp
jle
lea
int3
lds
xchg
mov
mov
sbb
jle
inc
and
sbb
out
popa
and
in
decl
cli
lcall
adc
shrb
nop
inc
inc
jo
jle
xchg
or
clc
fildl
pop
les
push
fcomip
sub
add
inc
fst
inc
push
in
jnp
add
je
inc
loope
mov
push
loop
sbb
adc
sti
push
loopne
test
sub
inc
push
rcrb
xchg
inc
cmp
sub
loop
das
lock
dec
jne
sub
nop
dec
ret
push
ror
in
push
sub
mov
xchg
rcll
ljmp
jbe
jl
mov
ret
and
and
lea
jle
pop
fimull
pop
sub
inc
mov
cli
hlt
and
mov
sbb
insl
sub
jecxz
fildl
ret
xchg
inc
imul
inc
mov
cld
nop
xchg
ss
dec
pop
xorb
aaa
stos
cli
push
jne
push
inc
lods
cmc
or
outsl
sar
mov
and
mov
jb
xor
sbb
sub
pop
jno
push
xchg
test
fcomps
js
rorl
fimuls
sbb
leave
sbb
ja
cmc
sbb
mov
pop
scas
adc
push
mov
test
cmp
je
mov
cltd
pusha
orl
add
ljmp
adc
jb
mov
repnz
pop
jo
les
push
sbb
sbb
rcrl
loop
push
mov
sbbb
in
shrl
push
ljmp
ja
aaa
pop
roll
ret
sub
dec
or
jno
rcrb
dec
mov
push
ds
cld
jg
push
test
and
fdivrl
inc
mov
mov
fcomip
ja
aas
in
xor
test
mov
push
shl
cmpsb
xchg
inc
xlat
push
enter
dec
and
push
jb
rorb
push
aaa
cmp
in
pop
jb
stc
lea
and
push
xor
pop
xor
xchg
push
mov
fmull
push
rcrb
mov
and
je
shrl
scas
jne
stos
pop
and
out
addl
lcall
mov
xor
inc
mov
mov
call
loop
out
in
aad
push
dec
add
sub
aas
cmp
push
jo
stos
push
jl
sar
cmp
inc
cmp
adc
pusha
negb
push
add
mov
shll
out
scas
xchg
add
and
fistl
ja
inc
sub
rcrl
jb
ljmp
cld
es
xor
jge
nop
mov
pop
xor
sub
orb
jo
or
sub
cld
fisttps
les
xchg
ds
jne
and
iret
andb
fdivrl
mov
xor
test
mov
pushf
push
cld
fadds
stc
lret
pop
xchg
sbb
xor
cmpsl
je
enter
loopne
pop
clc
in
cli
pop
fdivrl
and
mov
fldcw
xor
loopne
aaa
pop
jo
cs
or
pusha
test
adc
aas
lcall
push
popf
inc
cmp
je
aas
mov
mov
mov
fcmove
imul
sub
or
fsubp
lret
lds
out
mov
addl
pop
mov
dec
loope
mov
push
dec
or
inc
clc
pushl
data16
pop
push
sub
nop
mov
hlt
mov
icebp
inc
jecxz
mov
jo
mov
inc
je
and
in
jg
adc
mov
ja
jno
jae
pushf
sbb
nop
iret
lock
mov
xchg
lock
icebp
stos
dec
mov
add
jg
scas
jle
es
cltd
adc
adc
mov
aas
ret
call
jecxz
out
test
add
inc
xor
fwait
sbb
dec
jo
pop
cmp
fstl
hlt
inc
mov
ljmp
lock
pop
inc
insb
lods
mov
dec
dec
data16
shrb
decb
insl
mov
imul
and
add
mov
lcall
fbstp
stos
inc
inc
xor
pop
fldcw
add
data16
cmp
ds
or
jbe
negl
or
subb
fdivs
mov
call
push
dec
inc
mov
gs
daa
sbb
sbb
push
aaa
je
sub
cld
faddp
fistl
arpl
sub
test
int3
clc
inc
mov
imul
fucomp
jno
faddl
data16
jle
dec
mov
mov
dec
pop
mov
pop
and
mov
jmp
sbbl
addl
xor
add
sarb
lret
or
fnstcw
jge
or
icebp
and
xchg
mov
cmp
into
pushf
mov
cld
and
cmp
or
adc
inc
sbb
and
clc
and
testb
jmp
and
mov
adc
andb
adc
ret
sbb
fcmovb
lret
dec
xor
jns
insl
mov
inc
mov
stos
enter
cmp
enter
mov
cmp
jb
repnz
cwtl
dec
mov
jle
popf
pop
in
mov
fcoml
xor
cltd
lock
jne
aam
add
dec
jo
cmp
mov
sbb
mov
and
push
stos
add
xchg
inc
out
push
jb
pop
repnz
insb
in
dec
mov
mov
sub
scas
push
call
push
divb
rorb
mov
mov
jle
aaa
inc
ret
inc
sub
cmp
and
call
stos
dec
clc
push
xor
int3
push
enter
add
sbb
push
out
xchg
mov
cmc
fstps
cmc
sarb
pop
xchg
ss
cmp
adc
sub
xchg
add
pop
or
into
push
enter
sbb
clc
xchg
or
pushf
pop
mov
test
push
cli
ficoms
pop
lock
fadds
mov
mov
sub
lods
push
and
and
call
sub
in
loopne
shlb
mov
cmpsl
sahf
es
jb
push
pop
fimuls
pop
inc
imul
shrb
shrl
inc
inc
push
in
xchg
flds
jne
mov
sbb
push
sbb
fwait
sub
pushf
psubw
ret
in
mov
loop
jne
xor
cmpsb
bnd
in
int
in
test
cld
sbb
jge
add
rcrl
or
lods
cmp
testl
pop
push
mov
lret
hlt
fs
sbb
adc
lock
cmp
imull
test
pushf
and
mov
jno
lcall
and
jmp
mov
ja
loopne
fwait
push
jns
sbb
cmp
cld
cs
fidivs
and
push
les
pop
ret
jl
pop
xor
inc
test
movsb
arpl
ss
rep
sahf
in
mov
aad
int
addb
or
pop
shlb
inc
inc
adc
fs
dec
jb
mov
mov
pusha
jge
lcall
js
xor
and
lods
mov
jecxz
adc
dec
addr16
cwtl
xchg
jmp
imul
outsb
jne
or
sub
sbb
inc
nop
lret
stos
sub
and
imul
fs
sub
mov
push
daa
ret
std
sbb
pop
add
pop
or
inc
rcr
addl
je
addr16
mov
and
pop
fadds
pusha
stos
add
xchg
pusha
cmp
dec
cmpsb
mov
jg
mov
pushf
insl
sbb
inc
loop
mov
sbb
mov
call
shlb
cs
pop
push
clc
decl
push
nop
js
sbb
add
push
shrl
ja
pop
sub
mov
pop
mov
and
mov
jb
insl
jg
stos
out
adc
add
jecxz
xor
add
xor
mov
mov
xor
adc
movsb
push
lds
adc
shlb
mov
dec
incl
jg
xchg
add
mov
dec
lret
jns
jecxz
incl
arpl
mov
pop
icebp
loop
pushf
mov
sti
ljmp
pushl
std
mov
divb
cwtl
sbb
iret
jmp
dec
stos
sub
mov
add
sbb
and
lahf
enter
xor
cmpsb
fbstp
push
mov
nop
push
in
jmp
push
and
test
ret
xchg
sub
jecxz
scas
shlb
adc
cmove
push
mov
and
jo
aam
imul
rclb
push
push
jbe
cmc
pop
push
mov
inc
cmp
cwtl
xor
repnz
push
and
jg
rorl
add
mov
ljmp
mov
sbb
mov
xchg
lahf
xchg
cld
mov
das
or
xor
gs
pop
adc
jne
mov
push
and
adc
ss
dec
inc
push
mov
push
sbb
or
aaa
push
out
xchg
inc
mov
push
ds
or
lea
inc
aas
cmc
jmp
mov
fdivrs
sub
cmc
inc
fsts
push
cmp
adc
and
call
cwtl
jo
je
mov
outsl
cmp
jge
clc
and
sub
std
icebp
cmp
sbb
dec
dec
xchg
fistl
sbb
ret
clc
in
or
cs
mov
out
imul
data16
cmp
rcr
xor
push
aaa
xor
cmp
mov
or
push
push
lds
ret
lret
lcall
inc
jp
dec
xor
in
pop
fcomps
adc
sbb
dec
adc
xor
js
aad
sbb
sahf
nop
scas
idivl
icebp
push
mov
mov
pop
mov
xor
in
lret
or
add
mov
jbe
das
mov
mov
out
dec
cld
or
test
cmpl
xchg
xchg
adc
mov
cmc
cltd
ds
push
ret
dec
mov
ljmp
add
inc
adc
ljmp
into
dec
add
add
mov
pop
mov
shlb
cmp
pop
add
dec
popa
xor
xchg
cltd
xorb
push
xor
mov
mov
xchg
mull
ret
add
xchg
cli
dec
adc
xchg
shrl
mov
add
sbb
cltd
lahf
inc
sub
mov
inc
fisubrl
push
push
mov
outsb
sti
mov
stos
or
aad
setae
jge
sbb
inc
cwtl
xor
pop
sbb
stos
ss
mov
repnz
cltd
add
dec
mov
inc
out
or
je
add
cmpsl
mov
cmp
sbbb
ficoms
out
dec
inc
jno
cmp
scas
add
dec
xor
pop
or
xlat
add
int
and
cmp
pusha
adc
incl
inc
aad
inc
and
mov
xor
bound
mov
or
push
xchg
cmpl
adc
mov
sbb
jge
std
dec
or
pushf
sub
sahf
jge
faddl
cmpsb
imul
mov
sbb
orb
sbb
dec
xchg
xchg
mov
add
sahf
mov
jle
mov
xlat
push
inc
mov
jl
shlb
in
mov
xor
sub
jl
push
jb
mov
cmovne
inc
mov
mov
dec
jge
mov
mov
push
mov
inc
mov
jne
sub
and
ret
push
test
or
mov
add
rcrb
jle
dec
inc
adc
popa
jb
sub
dec
dec
in
inc
mov
jnp
xchg
cld
out
mov
or
xor
nop
stos
xchg
fmuls
pop
test
gs
adc
rolb
js
add
in
pop
dec
testl
fimuls
mov
or
adc
push
ja
clc
pop
fcoms
lahf
push
adc
aad
add
sub
push
scas
in
dec
in
and
adc
xor
xor
nop
test
dec
inc
sub
decl
scas
mov
popa
ret
clc
push
pop
pop
jb
sbb
es
push
mov
scas
mov
jecxz
fwait
call
in
jnp
jbe
mov
cmp
sar
lock
fiaddl
sti
and
push
mov
decb
jecxz
sub
dec
and
lret
in
mov
inc
mov
adc
mov
push
pop
mov
mov
jmp
data16
jl
xor
dec
sbb
shrb
mov
in
xchg
lcall
loop
inc
pop
or
scas
mov
int
push
add
stc
cltd
xor
cltd
push
cmp
cmp
xor
push
and
inc
ret
fwait
adc
add
push
cmc
jle
call
xchg
xor
jle
push
xor
dec
sub
cli
mov
push
cld
inc
pushf
mov
rcr
inc
nop
jg
or
test
sbb
or
jecxz
testb
or
push
mov
sti
push
or
ret
inc
insb
push
stos
dec
ficoms
mov
mov
lahf
push
in
ja
mov
fcmovb
push
sbb
jecxz
xor
aad
mov
lcall
aam
fsts
shlb
sahf
repnz
out
mov
jg
push
fisubs
movsl
int
loop
outsb
decl
mov
and
xchg
es
cmc
cmc
and
scas
pushf
mov
add
ja
push
cmpsl
mov
hlt
jecxz
fistpl
and
adc
pop
jb
and
cmp
add
or
mov
jle
push
ret
and
lods
lcall
cli
int
adc
nop
aam
or
dec
cld
inc
sbb
pop
xchg
mov
ds
arpl
xchg
and
push
push
add
hlt
dec
cmpsb
push
adc
fstpl
sbb
adc
es
rcrb
xchg
sbb
mov
pusha
call
pop
test
sbb
mov
push
mov
ds
test
notb
pushf
or
or
sbb
adc
pop
inc
out
dec
pop
add
outsb
movsb
mov
hlt
xchg
adc
icebp
jbe
mov
call
mov
std
out
xor
cmp
cmpb
add
lcall
lods
je
add
inc
add
pop
cld
aam
lret
and
add
scas
push
orb
jne
shll
xchg
loopne
lock
mov
mov
push
lret
clc
push
std
mov
xchg
sbb
in
xor
data16
rorb
testb
test
repnz
ss
push
push
std
mov
insb
add
sbb
icebp
add
rorl
faddl
call
test
dec
cwtl
out
and
sarb
cmp
test
jmp
adc
fwait
add
into
fs
mov
int3
loop
sub
sbb
cmp
adc
fcoml
mov
lret
mov
push
push
hlt
xchg
cmpsl
add
dec
fdivl
inc
xor
mov
mov
stos
cmp
and
cmp
fdiv
mov
int3
pop
adc
mov
cmp
dec
mov
push
or
lcall
pusha
lds
hlt
inc
dec
aaa
xchg
mov
adc
ds
test
jns
rorl
dec
dec
and
scas
out
fwait
rolb
lcall
clc
les
outsl
call
sub
sub
dec
lods
fisubrs
test
jne
xor
nop
add
sbb
shrl
int3
dec
add
lods
add
xchg
xor
mov
mov
push
cld
dec
popa
add
push
pop
jmp
shrl
outsl
lock
cs
inc
dec
jl
idivl
sub
pop
cmpl
sub
mov
cmp
lcall
ds
cmp
push
cmp
jecxz
scas
and
push
test
mov
or
push
xchg
mov
xchg
inc
enter
fimuls
inc
or
arpl
dec
cmp
insb
inc
rcll
repnz
fwait
les
xchg
aam
push
js
mov
jecxz
or
mov
or
push
stc
push
subl
js
or
testb
mov
dec
orb
loopne
push
gs
jle
rcl
push
ffreep
push
jp
cli
sub
cmp
jg
test
mov
jne
xchg
sub
decl
push
loope
adc
adc
jle
bound
hlt
xchg
adc
sahf
adc
pop
loope
call
adc
mov
sarl
in
lcall
addr16
jb
push
gs
lods
adcl
push
cmp
dec
fwait
adc
add
push
jbe
aam
fs
xchg
sub
pop
rcrb
das
fldl
add
jbe
jl
scas
push
cli
or
dec
mov
lcall
sbb
push
or
adcb
imul
push
insl
jb
adc
lock
sub
mov
rclb
inc
sbb
pop
ret
xchg
jle
lock
sub
inc
pushf
mov
or
adc
js
or
push
lds
popa
call
or
cmc
push
stos
dec
adc
jl
mov
cmpsb
fisubrl
stos
idivb
or
sub
subb
inc
test
cmp
dec
cmpb
inc
les
mov
cwtl
cld
frstor
add
mov
loopne
lcall
jbe
dec
pusha
inc
push
xorb
out
lods
mov
add
mov
bound
mov
jl
and
scas
mov
in
clc
cmp
std
adc
js
and
inc
out
leave
roll
ret
pop
add
fdivrs
sub
jp
push
call
inc
dec
test
aaa
clc
out
xchg
sub
in
mov
mov
mov
pop
adc
xchg
mov
jae
andb
sbb
cmp
je
and
xor
and
shrb
xor
pop
mov
cwtl
mov
in
clc
sub
mov
adc
push
into
xchg
jmp
mov
js
sahf
push
cmp
iret
gs
repz
jle
fwait
jo
movsb
aad
cmp
or
lcall
dec
pushf
les
sbb
push
sub
and
xor
xchg
add
cmpb
mov
mov
mov
or
daa
mov
dec
in
leave
jo
testb
adc
mov
push
rdtsc
dec
jo
pop
push
sbb
pop
daa
movsb
scas
sbb
call
pop
ljmp
ss
inc
mov
aas
lret
adc
jp
add
mov
pop
movl
js
mov
lds
push
add
and
sbb
jbe
and
roll
mov
adc
sbb
jno
jp
stc
rcrb
push
loopne
sbb
movb
pop
in
inc
jo
mov
xor
lcall
fs
add
jecxz
dec
jle
enter
jae
xor
mov
mov
pop
shl
sti
xor
int
lods
xor
stc
ds
dec
enter
loopne
adc
or
incb
push
lahf
test
mov
cmp
inc
pop
lahf
inc
fisubrl
shl
cmp
lcall
insb
rorl
mov
add
push
and
mov
cmpb
jne
jb
in
mov
clc
xchg
push
push
or
inc
adc
sub
out
and
or
xchg
sti
mov
add
pop
push
and
sub
mov
add
ja
int3
adc
leave
pop
test
inc
sub
shll
inc
sub
je
or
xorl
neg
add
push
mov
push
outsl
cwtl
lcall
pushl
xchg
push
or
mov
lods
leave
jbe
stos
mov
pop
cmp
or
clc
mov
test
add
fwait
xorl
das
stos
aam
into
cli
std
cmp
or
ror
jns
mov
adc
test
push
pusha
jno
mov
lahf
push
jecxz
xchg
xor
ret
testb
push
ds
push
sar
sub
mov
xor
mov
pop
into
data16
xchg
push
jp
mov
fs
cmp
push
add
or
pop
clc
lcall
mov
add
push
add
pushf
xchg
dec
movsb
add
sbb
outsb
sbb
and
or
cmpb
sbb
pop
clc
pop
out
cmp
mov
add
xlat
push
xchg
sbb
dec
icebp
fs
es
aas
xchg
and
or
ss
inc
aam
mov
ss
into
xor
popa
jl
popf
imul
movsl
or
xchg
jbe
or
jno
into
lret
xor
test
inc
mov
lock
cmp
pop
and
sbb
sub
xchg
mov
jle
jne
test
stos
decb
cmp
subl
call
mov
and
adc
loop
stos
mov
out
or
loopne
lret
sub
or
daa
movsb
lods
sbb
es
adc
sbb
pop
or
ret
test
sbb
lock
dec
cmp
mov
jl
daa
mov
es
push
jmp
sub
mov
add
lock
jo
jmp
cwtl
add
or
lret
je
shll
push
rolb
sbb
xor
dec
fmul
sarb
adcl
mov
mov
mov
lcall
push
sub
push
andb
mov
inc
aas
ljmp
mov
sahf
es
jo
mov
icebp
ljmp
push
pop
and
sahf
mov
and
movsb
dec
repnz
xchg
lcall
sbb
loopne
push
ds
cmpsb
mov
add
and
outsb
mov
dec
cmp
test
icebp
inc
sti
adc
fldl
faddp
movsb
test
xchg
ljmp
pop
xchg
inc
out
adc
dec
shll
jne
in
mov
clc
mov
mov
cmc
add
cld
imul
fidivrs
inc
mov
sub
add
stos
arpl
mov
cmp
fdivs
xor
sub
test
adc
fldl
and
sub
ss
outsb
scas
mov
test
incb
add
mov
or
pop
sti
push
push
scas
adc
xor
xchg
scas
cld
imul
inc
xchg
nop
lcall
add
out
dec
xor
xorl
xorl
js
xchg
ficomps
stc
mov
mov
sahf
adc
sbb
and
test
sub
mov
sbb
addb
xor
popf
cmp
add
push
shrl
jb
movb
minps
adc
xchg
addr16
inc
ret
inc
add
dec
adc
nop
call
sbb
or
in
mov
sub
and
push
or
mov
ret
and
and
sahf
sbbl
ss
fisttps
push
cli
call
cmp
and
test
push
cmp
jp
lock
adc
aam
mov
inc
pop
outsb
out
lcall
dec
mov
rcr
jl
xor
add
jns
dec
popa
sub
push
and
jle
inc
mov
lds
lods
and
cmpsb
sbbl
fisubs
dec
in
mov
push
es
sub
jb
ja
hlt
add
push
test
pop
add
mov
inc
in
fisttps
lcall
xchg
or
loopne
fsubs
movl
out
and
jbe
mov
ret
je
and
rcrb
pop
out
ljmp
mov
femms
cmp
and
xchg
das
push
inc
ss
or
fdivrl
scas
mov
jecxz
lcall
mov
pop
cltd
fisubl
xchg
sarl
jbe
loopne
clc
shlb
mov
repnz
loope
mov
xor
mov
or
push
clc
jecxz
pop
fldl
add
lcall
out
pop
icebp
pop
mov
outsl
cli
pmaxub
fidivrs
out
xor
add
fldenv
mov
and
repnz
adc
mov
push
test
push
icebp
xchg
add
enter
mov
inc
xor
cmp
out
adc
ds
push
or
ret
call
mov
cmp
movsb
subb
aad
xor
mov
pop
rsm
negb
in
mov
jo
pop
push
stos
dec
mov
mov
adc
jl
push
push
sbb
xor
addb
mov
orl
test
aad
hlt
sub
mov
les
add
sub
sbb
pop
orb
adc
xor
mov
pop
fs
mov
divb
cmp
lret
es
sarb
jb
xlat
pushf
shr
rcr
icebp
lods
cmpsl
ret
loope
inc
adc
loopne
icebp
ficoms
cmp
fstps
sub
lret
add
scas
fcomps
scas
sbb
rol
stos
mov
loopne
test
outsl
mov
or
stos
jb
ret
sbb
xor
mov
pop
xchg
jb
push
adc
jne
das
incb
jbe
sbb
mov
out
int
mov
pop
mov
cmc
sbb
mov
xor
lret
or
out
pushf
test
sahf
xchg
out
jbe
decb
cmp
pop
mov
pop
aas
call
push
and
lock
cli
add
add
xor
aam
sbb
dec
adcb
sbb
adc
xchg
dec
mov
or
js
outsl
pop
jno
fcompl
push
popa
dec
sbb
push
cs
out
roll
pusha
scas
sbbb
mov
dec
push
mov
pop
jmp
insb
xor
movsb
ret
push
and
dec
xor
loopne
cs
clc
out
and
xchg
mov
dec
pop
loopne
test
fists
jp
or
cmp
int3
or
lds
or
xchg
add
xchg
cmp
jne
sti
jg
sbb
push
add
add
ds
fcomp
mov
sbb
ret
loopne
ljmp
into
leave
adc
xchg
dec
push
cmpsl
jge
push
dec
jl
lods
clc
and
push
rolb
sbb
cli
and
mov
fidivrl
jle
pop
loop
ss
mov
jl
adc
mov
push
dec
mov
sub
fisttps
sub
mov
push
xchg
pop
sub
lcall
mov
xchg
pop
icebp
outsl
inc
fcompl
je
pop
movsl
dec
push
add
movsl
add
faddp
shlb
push
xchg
test
adc
fidivl
fbstp
mov
sahf
and
add
and
aad
cli
mov
ds
adc
ds
push
xorb
xor
push
lock
decb
cmc
pop
das
xchg
pop
lcall
xchg
je
cmpsb
test
jg
dec
leave
in
adc
jnp
loopne,pt
jo
jle
sbb
add
or
cmp
aam
shrl
mov
cmp
inc
or
movsb
xlat
jg
loop
fwait
or
call
add
pop
lock
clc
dec
pushl
addr16
add
jge
adc
std
int3
jns
or
aaa
add
sbb
xchg
jo
mov
xchg
xchg
xor
and
sbb
aam
dec
fst
shrb
cmp
jg
in
adc
xchg
jecxz
ficomps
lahf
out
call
xorl
pop
shll
sub
roll
adc
addr16
movsb
mov
lods
mov
addl
roll
in
or
fildll
push
adc
ret
mov
sbb
add
mov
test
leave
lcall
or
jmp
mov
daa
fnstenv
ljmp
cmp
ret
push
aas
dec
sbb
out
jo
scas
repnz
stos
fdivl
call
icebp
sahf
or
pop
or
xchg
movb
adc
jnp
pop
inc
rcr
mov
fisubs
add
jo
nop
mov
popa
xchg
fwait
jno
testl
cltd
mov
shlb
pop
sub
arpl
cmp
adc
sbb
mov
mov
ja
pop
pop
ret
inc
incb
sti
mov
jge
sahf
call
mov
icebp
outsl
jle
js
sar
lock
scas
scas
add
jge
or
push
sahf
hlt
fcomps
call
je
shrb
addr16
sub
jle
das
adc
jbe
sub
dec
ljmp
imul
xchg
sbb
insl
fsubrs
push
push
xchg
sbb
pushf
add
add
inc
push
test
pop
insb
mov
or
inc
pop
in
mov
pop
and
push
jge
fdivs
js
xchg
hlt
aam
cmc
aas
sbb
and
das
pop
mov
scas
cwtl
icebp
pusha
sub
insl
rcr
test
pop
test
mov
inc
jbe
sbb
adc
loopne
movsb
lock
inc
cmp
dec
jbe
xorl
outsl
jl
cmpl
xor
push
pop
hlt
push
mov
mov
loop
out
or
das
outsb
xor
aad
push
mov
push
aam
xchg
push
jl,pn
popf
aaa
push
stos
pop
insl
mov
xor
pop
stos
and
fwait
call
rcl
enter
orl
test
adc
rclb
mov
mov
xor
pusha
mov
insb
adc
push
cmp
xor
lods
xorl
das
cmpsb
shl
aaa
push
in
or
add
in
sti
add
inc
enter
loop
push
jb
cmp
sub
mov
pmaxsw
jecxz
and
xor
cmpsl
or
arpl
lods
jo
adc
incl
fdivl
sti
dec
ds
imul
push
xlat
mov
addb
insb
scas
add
jp
jb
les
in
sbb
add
ds
cwtl
push
inc
xor
lds
fisubs
mov
mov
nop
cli
test
clc
loope
and
sti
xor
add
push
loopne
sub
enter
lcall
push
std
jb
dec
inc
add
iret
pop
pop
sub
mov
cli
loope
pop
loop
mov
lret
testb
fcoml
and
add
xchg
xor
stc
sahf
outsb
xchg
fchs
dec
pop
hlt
stc
lds
or
test
cmp
scas
das
fiaddl
mov
cmp
push
inc
cmc
cmp
xchg
push
mov
pusha
ficompl
ret
dec
test
andl
clc
add
iret
or
add
push
cmpsl
jg
lock
lods
rcll
aad
and
das
aam
add
pop
sub
pusha
loopne
inc
notl
push
je
push
inc
fcomps
out
lahf
adc
fcmovnbe
adc
xchg
lods
push
cli
fwait
sbb
cmp
add
lcall
lret
push
and
and
jp
hlt
inc
adc
incb
inc
and
clc
adc
pop
mov
aaa
push
or
push
stc
push
dec
call
mov
les
sbb
or
lods
sbbl
push
sub
push
enter
call
rcl
rolb
lcall
adc
xor
xor
stos
popf
mov
xchg
loope
or
outsb
add
xchg
mov
js
popa
call
test
jg
scas
add
dec
rolb
outsb
dec
cli
dec
decl
add
int
mov
push
add
cmp
and
mov
pop
lcall
push
pop
and
jecxz
inc
mov
add
addb
add
fists
mov
movsl
add
mov
aad
or
xor
rorb
cmpsb
nop
loopne
cltd
shll
std
mov
and
fadds
lret
mov
pop
loopne
adc
sbb
les
scas
sbb
adc
addb
aaa
push
mov
mov
test
adc
fildll
cs
in
cs
jge
mov
jo
cs
sub
mov
push
fcoms
sar
ss
xor
outsl
sarb
dec
dec
pop
mov
ss
fdiv
mov
pop
pushf
mov
push
sbb
lahf
inc
mov
hlt
pop
and
sub
decl
mov
into
ror
add
cwtl
mov
ja
in
lret
call
cld
dec
mov
movsb
pop
mov
adc
push
clc
add
nop
into
iret
subb
pushf
jl
and
and
clc
mov
rcrl
lods
push
jg
nop
or
dec
xor
int
push
loope
hlt
daa
and
mov
mov
xchg
push
stos
insb
fsubl
add
adc
mov
xchg
mov
adc
rcrl
fbld
push
xor
cmpsb
scas
mov
adc
loopne
jb
test
dec
test
outsl
mov
adc
or
test
popa
bound
mov
mov
stos
xor
jo
movsl
aad
pop
loopne
cmpsb
filds
xchg
je
jp
and
jle
dec
pushf
repnz
aam
dec
mov
inc
mov
dec
shr
add
inc
mulb
add
movsl
pop
and
sub
clc
cs
jg
test
mov
mov
nop
ret
cmpsl
add
rorb
mov
inc
dec
test
addr16
inc
jae
jle
add
xchg
pop
repz
fiaddl
or
pop
and
xchg
pop
lock
ss
cli
lods
cld
add
add
add
les
dec
adc
inc
xchg
xor
inc
jle
xlat
cmpsb
pop
daa
lcall
inc
mov
sub
loope
negl
sub
addr16
mov
push
in
nopl
add
movsb
int
arpl
nop
xorl
and
cwtl
pop
push
jl
mov
mov
jne
je
loop
lcall
mov
xchg
pusha
or
sub
add
sbbb
sbb
call
dec
jg
mov
pusha
jecxz
jl
or
ret
hlt
fsubl
push
adcb
or
push
push
rolb
hlt
adc
pop
adc
pop
std
cmpl
and
cmp
jnp
pop
movsl
pop
and
int3
add
or
fdivrp
iret
mov
add
pop
mov
add
jmp
cmp
add
fs
dec
inc
mov
rolw
jae
cmp
out
bound
cmp
notl
jmp
ss
lds
xchg
dec
lods
jb
fwait
es
dec
mov
sbb
dec
dec
lea
es
dec
inc
add
mov
pop
push
subl
roll
call
dec
or
mov
ss
xchg
and
mov
mov
das
notb
leave
pop
sub
xlat
pop
fisubrl
push
sbb
sahf
and
push
lock
sbb
xor
or
mov
and
stos
adc
xor
loope
pop
mov
inc
dec
cmp
xchg
js
push
jnp
pop
add
clc
clc
mov
fcoms
decl
mov
popa
xor
adc
mov
loope,pt
mov
xchg
xchg
sbb
les
cwtl
in
add
das
mov
add
mov
sub
xor
push
mov
roll
xchg
adc
out
dec
fisubl
js
cmp
adcb
call
inc
es
and
outsb
into
push
fdivrs
out
cmp
iret
xor
data16
dec
cmp
sub
mov
jle
xchg
add
test
bound
mov
xchg
jno
pushf
cmp
addl
xor
pusha
mov
inc
cmp
sub
mov
push
sbb
push
lds
movl
ss
push
rorb
xchg
pop
nop
cmpsb
inc
push
mov
loopne
lock
cmc
outsb
xor
aam
push
ficoms
loopne
jbe
int3
lahf
andb
push
fdiv
fadd
test
adc
or
mov
add
or
cli
xchg
add
sbb
push
xchg
jmp
ds
lods
add
jmp
cmp
lods
pop
and
cmpl
mov
es
mov
stos
mov
cli
dec
daa
mov
xor
lods
test
loop
aam
mov
shrl
imul
sub
stc
int
xchg
jmp
out
mov
mov
lock
lahf
cmp
or
rolb
das
scas
icebp
int3
fld
sub
pushf
mov
fsts
test
roll
adc
sub
dec
mov
push
and
add
dec
dec
pop
std
addr16
xchg
es
testb
test
sub
shlb
test
sar
mov
mov
mov
lods
ds
aad
adc
inc
fwait
push
sbb
pusha
lcall
mov
xchg
sbb
cld
out
in
rcrb
add
or
mov
xlat
inc
push
jmp
fcomi
in
ficoms
test
nop
stos
mov
adc
mov
mov
ret
add
adc
lods
out
sti
fisubl
mov
inc
loop
sbb
outsl
push
adcl
mov
adc
roll
push
jb
aaa
sub
cmp
js
jnp
insl
inc
hlt
dec
div
sub
js
mov
and
hlt
sahf
ja
ja
dec
in
inc
sti
in
cmpb
sub
inc
cmp
inc
sar
popa
test
sahf
mov
stos
rcrl
pop
adc
and
lods
inc
or
test
push
xor
sti
add
jecxz
je
cmp
imul
sub
out
mov
xlat
sub
add
dec
pop
loop
jae
and
mov
ficoml
scas
lcall
xor
adc
fstl
fwait
in
lea
push
mov
jle
ret
jecxz
repnz
add
jecxz
jnp
addr16
sti
cld
xor
test
push
sub
test
cmc
imul
xchg
cmpsb
jl
xchg
jge
push
fisttpll
adc
mov
sub
mov
sbb
add
mov
test
or
jecxz
dec
or
cmp
cmp
pop
mov
sbb
mov
cwtl
cli
xor
sub
xchg
aas
aam
xor
js
push
push
sub
mov
sbb
add
call
cmpsl
aaa
outsl
dec
ss
mov
pusha
lods
xchg
lcall
add
inc
dec
and
and
ret
sbb
adc
inc
rorl
dec
test
insb
mov
mov
insl
inc
mov
inc
inc
fcompl
fmuls
inc
lods
ljmp
mov
out
inc
jmp
pop
xchg
and
les
dec
rorb
rorl
push
je
ret
aas
mov
pop
mov
mov
adc
and
in
ret
icebp
sbb
ljmp
mov
mov
dec
int3
and
xchg
pop
int3
or
xor
adc
shll
mov
test
je
mov
mov
push
push
pushf
es
adc
jl
xlat
xchg
pop
xchg
addb
jmp
test
or
jl
sub
xchg
pop
mov
out
cli
mov
pop
lock
xchg
sarb
push
pop
outsb
movsb
call
out
out
and
lods
outsb
das
sub
and
lods
xchg
inc
push
push
icebp
mov
test
or
out
jp
xchg
add
pop
test
cwtl
push
ror
push
clc
mov
sti
jl
mov
ja
sahf
push
loope
test
add
jo
sbb
jg
in
mov
adc
xlat
les
xchg
xor
lcall
sbb
das
rorb
sahf
shl
or
inc
jno
sub
ds
imulb
mov
pop
or
push
add
movb
int
pop
sbb
sbb
xor
clc
sbb
xchg
lcall
out
cmp
lea
in
nop
icebp
sbb
adc
sub
addr16
jae
xchg
js
lret
lods
dec
add
and
mov
push
xchg
repnz
add
push
push
dec
and
add
dec
add
mov
lds
cmp
repnz
out
incb
sub
aad
ret
dec
repnz
cmp
or
std
xchg
xchg
icebp
bnd
jecxz
cmpsb
imul
jae
mov
xchg
add
movsb
sub
pop
je
fisubrs
add
sub
xchg
movsl
xchg
pop
ss
xchg
loop
ljmp
testb
rorl
jecxz
ds
pop
and
inc
test
xchg
dec
ss
pop
mov
add
fisttpl
xor
xor
outsl
std
pop
mulb
jge
lods
pop
add
daa
insl
sar
scas
sub
mov
addr16
sbb
fisubs
adc
aaa
mov
pop
xorl
pop
cwtl
or
fwait
mov
or
out
dec
sub
inc
xor
lock
cmp
lock
jecxz
ss
and
add
push
hlt
out
movsl
loop
pop
inc
mov
in
mov
jecxz
jmp
mov
add
sub
popf
inc
xor
dec
or
adc
or
sbb
mov
pusha
add
notb
aam
data16
sbbl
ficomps
push
dec
loopne
faddl
jl
icebp
jl
mov
lcall
mov
cmp
call
or
int
jns
sub
lods
add
pusha
push
enter
dec
jl
pop
mov
mov
jnp
stos
mov
mov
int
cmp
push
xchg
hlt
sar
add
lret
or
fadds
sbb
xchg
xchg
daa
mov
push
pop
jo
sarb
push
jg
inc
fwait
orl
jo
test
lret
inc
push
and
popa
aaa
icebp
xchg
ss
loop
inc
gs
pushl
pop
loopne
push
stos
popa
ret
xor
stos
xchg
cmp
out
mov
js
shr
push
add
sub
xchg
icebp
push
cli
sbb
sbbb
lcall
xlat
mov
mov
push
les
jle
pop
testb
notl
hlt
xor
int3
callw
fsubl
ret
subb
push
mov
cmc
mov
jmp
cs
sbb
imul
xchg
xchg
int3
inc
adc
sub
or
repnz
adc
fcompl
push
adc
or
divb
aaa
call
pop
enter
mov
scas
addb
mov
call
cs
aam
cmp
xor
adc
xchg
sahf
add
out
pop
or
data16
lock
cld
int
mov
inc
into
and
mov
out
test
mull
sub
sub
sbb
pusha
lmsw
cmpsb
call
repnz
fisttps
and
repz
scas
cli
xchg
push
sbb
scas
pop
loopne
ficoms
dec
inc
or
dec
test
aaa
cmp
dec
mov
mov
or
jne
faddl
adc
das
mov
push
pop
in
xorl
and
out
adc
dec
cmp
ljmp
repz
out
clc
popa
pushf
add
pop
mov
bound
add
adc
xlat
mov
call
pop
adc
mulb
aam
add
dec
inc
push
data16
or
icebp
testb
std
mov
push
adcl
adc
in
cmp
mov
addb
push
incl
addr16
in
sbbb
mov
mov
xchg
nop
lock
dec
or
mov
jg
mov
xchg
add
pop
mov
scas
add
std
inc
call
inc
mov
push
cmp
or
orl
xchg
outsb
clc
fidivl
and
outsl
dec
test
aad
sbb
jge
pop
push
test
sar
lcall
scas
add
or
sbb
bswap
sbb
js
cwtl
fcomip
test
in
adc
jecxz
test
lds
insb
dec
push
sarb
subl
or
jl
and
rclb
fs
jle
mov
xor
cmp
jp
repnz
push
mov
or
test
jnp
lds
sbb
dec
push
insb
int
adc
lcall
negl
loope
aam
sbb
and
ja
mov
or
aad
scas
aaa
lock
test
mov
fiadds
out
mov
in
and
pop
lods
scas
pop
nop
or
push
stos
mov
fwait
dec
sub
cltd
or
sbb
mov
js
cmp
cltd
inc
nop
adc
inc
dec
xlat
sbb
clc
testl
mov
les
xchg
sbb
cli
popa
add
js
or
pop
shll
rolb
sbb
aam
pop
sahf
aam
inc
mov
xchg
cwtl
lahf
or
jecxz
add
mov
mov
sbb
sbb
out
sar
or
in
push
mov
popa
jmp
shlb
mov
pushf
xor
in
cmp
movsb
xor
call
es
and
pop
clc
dec
je
push
ret
or
cmp
cmp
sub
add
push
je,pt
sbb
cli
cmpsb
push
ss
or
adc
dec
shrb
xchg
mov
pushl
scas
cmp
stc
mov
or
mov
fs
ret
popa
fs
sbb
xchg
shlb
je
out
shl
add
or
pop
inc
cmp
imul
lcall
sbb
push
mov
jg
clc
push
ds
sbb
add
jp
and
mov
in
pop
xor
adc
push
fbld
dec
and
movsl
mov
or
lock
xchg
xor
push
loop
jbe
lret
cmpsb
test
pop
adc
das
mov
pop
je
and
add
dec
inc
shlb
sbb
xchg
cmpb
js
push
add
bound
loop
rclb
sbbl
mov
mov
dec
cmp
cs
and
inc
sbb
rorb
fidivl
dec
inc
or
adc
fs
adc
test
in
sbb
scas
aam
push
sbb
sub
sub
cmp
mov
add
adc
outsb
fmuls
insl
pop
testb
cmp
fdivr
xlat
push
mov
out
movsb
push
test
inc
mov
nop
xor
js
lods
cmp
cwtl
outsl
out
pop
cmp
mov
mov
stos
icebp
sbb
call
clc
push
add
jp
push
push
loope
leave
or
or
mov
les
add
xor
pop
push
inc
fcmovne
mov
add
scas
inc
mov
mov
mov
xchg
ret
jp
inc
push
xor
call
add
imul
andb
jg
test
or
mov
in
enter
ljmp
cwtl
jge
add
inc
imul
pushf
xor
enter
pop
cmp
push
mov
sbb
fcmovb
cld
fucomp
sbb
cmpl
push
and
push
aam
in
subb
inc
inc
sub
shr
cmp
and
jp
stc
dec
inc
lock
xchg
aam
pop
shrl
push
and
add
faddp
out
into
jle
les
pop
inc
imul
sub
lret
aam
sub
sub
sub
mov
stos
dec
push
dec
aas
adc
cmpsl
cmc
or
mov
cmpsb
mov
fdivrs
push
add
aam
xchg
loopne
lock
mov
pop
push
in
xchg
rorb
insl
or
mov
ds
outsb
packssdw
call
std
mov
jecxz
lcall
xchg
test
push
fdivrl
out
repnz
ss
icebp
loop
in
or
mov
cmpsb
pop
xor
and
push
or
mov
lcall
rcll
jecxz
mov
mov
jp
aad
les
lea
jbe
mov
in
adc
das
push
rol
rcl
lock
dec
lret
imul
inc
push
jecxz
js
mov
mov
push
es
ljmp
subb
data16
movsl
xor
cwtl
dec
test
jo
xchg
into
xchg
jne
fiadds
adc
mov
jmp
inc
shlb
sub
stos
in
es
out
mov
inc
mov
sub
inc
lahf
push
pop
sub
sbb
inc
sar
sub
in
scas
fdivrl
push
push
es
cmp
xor
mov
jb
loopne
cmp
mov
mov
and
push
or
cmpsl
stos
mov
sbb
push
jg
inc
push
std
mov
loope
pop
sarb
test
pop
add
ret
aaa
mov
xchg
out
fldl
pushf
ljmp
mov
pop
add
cli
loopne
pop
jmp
stc
hlt
adc
cmpl
mov
aaa
adc
xor
adc
out
mov
test
filds
dec
cmc
loope
cli
inc
mov
shrb
mov
jbe
and
xchg
push
mov
push
xor
lret
pop
pusha
xor
aam
mov
sub
dec
pop
push
jl
push
and
enter
sbb
je
loope
add
push
imul
xlat
sbb
std
jg
inc
stos
and
and
outsl
outsb
xorb
adc
enter
xor
je
data16
adc
and
push
jl
decb
rol
xchg
pop
rcrb
jns
dec
hlt
cmpsb
mov
outsl
pop
imul
inc
addb
into
mov
inc
add
sub
inc
jmp
shrb
out
mov
ljmp
dec
frstor
sbb
gs
stos
pop
fsubrl
clc
shrb
or
ret
je
adc
cld
push
faddl
inc
cmp
jns
and
push
push
into
call
pop
loopne
nop
add
mov
popa
xchg
nop
ss
pop
test
call
lock
jo
jnp
jg
push
shll
fwait
adc
inc
jns
inc
sti
int
dec
cmpsl
push
insb
pop
lock
shlb
icebp
and
mov
jecxz
lock
mov
bound
or
push
sbb
cmp
pop
mov
int
ljmp
outsb
orl
outsl
data16
mov
cld
cmp
leave
mov
outsl
gs
add
xchg
jle
xor
mov
jne
jb
hlt
out
xchg
jns
enter
or
mov
and
dec
jmp
add
arpl
daa
ljmp
and
rcrb
call
mov
orb
xchg
fdivr
shlb
aam
cmc
cmp
stos
or
mov
movsb
cltd
test
je
ret
lds
cmpsl
or
cmp
call
push
loope
mov
lock
arpl
push
hlt
scas
sbb
ror
inc
jb
dec
inc
push
int3
sbb
nop
mov
lods
imul
into
ljmp
push
xchg
push
and
mov
cli
aam
sbb
in
xor
add
push
push
sbb
sti
adc
and
cmc
sahf
jl
jge
clc
xchg
jge
out
test
and
pusha
xchg
mov
or
jmp
stos
jp
lods
xchg
mov
in
sub
pop
adc
adc
int3
mov
out
out
adc
or
mov
sub
loop
stc
out
cltd
inc
or
iret
sbb
fsubrl
fmull
push
lahf
adc
out
test
js
enter
rcrl
sbb
push
add
mov
add
test
leave
sub
loopne
xlat
xor
rcrl
add
dec
movsb
adc
mov
or
clc
cli
adc
test
incl
cli
jge
and
sub
adc
xor
sti
inc
into
sti
inc
andb
sub
cld
out
loopne
lock
cmp
add
sbb
mov
sbb
mov
aas
aam
mov
into
adc
sub
jecxz
mov
or
ss
xchg
or
clc
insl
mov
gs
leave
sbb
das
lock
outsl
sub
add
popa
out
add
xor
ja
call
jne
pop
cs
push
lcall
int3
pop
lea
sahf
inc
lahf
mov
mov
ja
stos
pmulhw
inc
xchg
in
sbb
mov
push
pop
sbb
lret
enter
mov
inc
xor
pop
idiv
fistl
xchg
xor
sub
sub
mov
jo
lods
add
repz
cli
inc
or
push
shrb
push
ss
push
sbb
sub
dec
clc
imul
add
aam
and
dec
stos
push
jbe
mov
lcall
ds
sbb
adc
add
out
lods
lcall
inc
sub
mov
add
push
fs
inc
mov
lock
lret
mov
xchg
add
lret
repz
je
fisttpll
sti
ds
push
mov
decl
push
popa
lret
or
pop
ljmp
and
pushl
pop
mov
je
sbbb
jns
sbb
lcall
shlb
and
out
fldenv
ss
push
lods
ds
test
and
dec
adc
xor
es
sahf
adc
loop
sarl
mov
adc
aaa
ljmp
mov
rorb
popa
sbb
jg
mov
jp
jbe
nop
clc
loope
xchg
outsb
push
mov
dec
fistl
xchg
cmc
fcmovbe
iret
add
inc
fstps
hlt
js
push
xor
jl
loopne
or
cli
ds
mov
push
mov
sti
iret
lock
or
addr16
inc
bound
sbb
cmp
adc
cmp
add
add
addb
movl
fidivs
xchg
fsubr
jbe
enter
adc
jo
mov
dec
shrb
sbbb
ja
inc
in
fdivrl
xor
jo
sub
sub
insl
mov
adc
jge
adc
inc
fdivs
xchg
push
xchg
loopne
je
into
js
mov
adc
add
scas
insb
cmp
stos
and
stos
mov
jo
and
and
pop
ljmp
xor
xchg
inc
test
dec
sarl
mov
jmp
sub
pop
inc
push
dec
inc
jnp
and
ret
mov
pop
outsb
inc
and
adc
xor
mov
je
ret
cmpsb
ret
into
xchg
xor
xchg
out
push
int3
mov
add
jne
sbb
leave
js
scas
jae
sub
xchg
mov
stc
inc
pop
add
mov
inc
rcrb
int3
call
xorl
in
mov
sub
push
push
push
mov
mov
or
shlb
clc
lods
add
dec
inc
inc
dec
and
daa
jecxz
push
mov
test
fwait
or
jl
shlb
jns
pusha
push
sbb
jg,pt
shll
add
test
enter
adc
mov
sub
or
xchg
cltd
jbe
fs
call
xor
xlat
les
mov
je
jg
fcmove
pop
cmp
test
or
mov
dec
into
adc
addb
sbb
cs
push
in
push
adc
jbe
stos
es
push
jmp
adc
jecxz
test
adc
pop
jl
lcall
and
imul
mov
sbb
mov
js
fs
lret
test
lcall
push
fcoml
out
xor
sbb
popa
push
mov
mov
pop
and
out
and
mov
xor
xchg
jecxz
jecxz
scas
js
movsl
and
pop
mov
callw
xor
insb
xor
fdivrp
push
mov
lret
dec
cld
mov
sbb
rorb
push
mov
push
pop
cmp
dec
bound
sub
and
inc
dec
adc
mov
ret
sbb
cwtl
and
or
push
inc
pop
lods
cmpsl
data16
or
test
roll
cmpsb
jle
and
add
sbb
les
mov
in
inc
inc
mov
fs
mov
xor
inc
mov
pop
ljmp
pop
pop
adc
dec
pusha
lcall
jno
jp
or
xchg
and
or
test
mov
pop
push
in
cmp
ret
lret
mov
push
hlt
push
mov
fmulp
mov
sti
and
leave
xor
aam
mov
jle
cmp
adc
stos
cli
fisttpl
inc
aaa
mov
cmc
aam
dec
xchg
and
sbb
negb
mov
movsl
hlt
and
jg
sahf
adc
or
jl
xor
push
aad
test
push
jno
sub
add
push
xchg
clc
outsb
add
mov
and
lods
movsb
push
fs
push
fidivs
xchg
mov
vmwrite
es
and
jae
add
daa
outsl
mov
pushf
or
push
push
push
movsl
dec
pop
ds
xchg
cmc
and
leave
insb
xchg
cmp
pop
and
mov
or
fwait
mov
iret
or
int
lock
aam
lret
push
rcl
xor
fstpl
cmp
popf
hlt
mov
hlt
mov
call
orb
jl
js
pop
add
push
jns
loop
push
repz
call
pushf
fsts
jg
loopne
mov
push
xor
mov
fistpll
out
mov
lret
mov
xor
xor
mov
push
add
lea
xchg
add
sbb
call
mov
loopne
js
lcall
daa
sarl
xchg
mov
cld
and
xor
jle
mov
jo
das
adc
xchg
fwait
lods
push
incl
mov
ss
add
addb
int3
mov
jg
pop
xor
add
xor
out
dec
in
add
or
adc
andl
leave
movsl
push
call
cmp
je
dec
jg
outsb
push
mov
mov
dec
mov
and
cmp
dec
test
dec
jg
aaa
in
mov
sbb
xlat
adc
inc
add
inc
dec
cmp
add
pop
fisttps
mov
rolb
push
mov
js
stos
or
mov
mov
aaa
cmp
inc
ret
call
mov
lea
xchg
ret
sbb
lock
mov
push
cld
inc
mov
jg
pop
fldenv
dec
jecxz
add
fbld
push
pop
mov
push
cmp
out
push
xchg
clc
pop
lock
dec
jge
sbb
mov
out
pop
mov
popa
int3
add
mov
add
outsb
call
pop
add
pusha
jo
test
mov
jmp
sbb
popf
cmp
add
push
mov
loop
inc
and
cmp
fcmove
aad
test
imul
add
or
lods
jno
ljmp
xor
test
imul
aaa
xlat
pop
out
loopne
shl
xchg
hlt
mov
jecxz
lds
iret
fsubs
imul
and
add
rcll
xor
mov
pop
and
lods
in
cmp
or
xor
int3
imul
mov
sbb
stos
cmpsb
lock
xchg
cld
bound
or
push
mov
dec
cmpsl
sbb
test
ret
dec
jl
cmc
jg
aam
add
cmpsb
addr16
sarb
add
fwait
or
add
fadds
cltd
sarb
or
sub
imulb
subb
hlt
inc
sbb
jg
fildl
lods
stos
sbb
mov
dec
sub
movsl
cmpsb
incb
repnz
adc
ss
xchg
dec
fsubrs
movsl
pop
push
push
ret
cmp
imul
lods
inc
cwtl
jl
fwait
pop
and
push
xor
aaa
fdivs
push
dec
mov
or
es
fwait
mov
and
adc
dec
dec
xor
scas
outsl
sub
pop
seto
lahf
pop
loopne
mov
and
movsb
push
test
ret
es
jecxz
or
lods
movsl
out
loope
or
push
outsb
lock
xchg
loopne
and
push
ficoms
fmull
loope
lret
insl
rorl
add
popa
enter
inc
ss
out
jecxz
cmpsb
push
push
add
test
push
inc
add
xchg
out
inc
jmp
mov
dec
int3
lret
inc
jle
xchg
mov
mov
xlat
push
daa
hlt
jl
push
inc
fcomi
sbbb
movsb
dec
in
mov
add
push
je
sar
jg
test
add
jbe
push
shl
jno
xchg
fstpt
jle
shrl
mov
add
sbb
xchg
enter
jo
in
mov
incl
mov
or
cmp
adc
cmp
push
orb
lds
cmp
push
test
push
cwtl
aaa
xor
adc
jae
adc
hlt
jo
stos
sub
xchg
push
sbbb
aaa
mov
stos
pop
adc
push
cmp
push
inc
mov
dec
sub
mov
addb
fwait
repz
jne
outsb
inc
push
xchg
pop
mov
cs
rolb
push
outsb
cld
xchg
dec
js
movsb
xor
adc
mov
mov
mov
test
sbb
movsl
cli
inc
push
cmc
jmp
nop
inc
and
lcall
jo
stc
inc
adc
inc
lcall
loopne
xor
das
int3
adc
icebp
cs
xlat
cmp
adc
push
mov
jp
sbb
jmp
stos
rorl
aaa
std
ficomps
ljmp
mov
test
mov
fs
xorb
cmp
cwtl
std
sub
mov
pop
call
mov
xor
or
sti
adc
adcl
mov
enter
cld
xchg
push
jl
inc
stc
mov
aam
xlat
xchg
push
add
mov
pop
or
test
leave
scas
loopne
cmc
jg
jp
sarb
pushf
or
mov
pop
aam
cs
or
jle
ret
sub
dec
nop
mov
mov
out
pop
pop
ss
jno
cmp
cs
scas
push
dec
mov
cli
adc
sbb
add
mov
inc
add
sub
mov
inc
sub
sbb
jno
lock
adc
and
mov
fistps
mov
scas
push
repnz
movsb
cli
mov
in
push
and
ret
loopne
ja
dec
push
aam
adc
inc
icebp
stos
xor
jmp
mov
mov
xlat
mov
mov
add
lahf
sbbb
scas
scas
xchg
lock
arpl
cmp
mov
jmp
inc
push
adcb
incl
popf
add
pusha
aam
push
loope
xchg
and
and
fstl
je
inc
jle
orb
clc
decl
or
cmp
add
lods
aaa
push
stos
call
enter
dec
in
shrb
insb
out
xorb
pop
pop
add
sbb
rclb
out
rolb
stos
pop
ss
loopne
ret
shlb
shr
mov
pop
pop
mov
or
or
push
into
mov
inc
jge
pop
fcomip
pop
pop
leave
loop
stos
data16
push
insb
hlt
push
pop
lock
or
imul
arpl
or
aam
int
dec
lods
sahf
pop
jl
int
xlat
call
mov
mov
pop
aas
push
sbb
and
pop
push
mov
es
clc
out
loopne
shlb
daa
orb
div
mov
enter
mov
jmp
push
nop
xchg
pop
pop
jbe
or
ss
pop
outsl
add
inc
jb
in
mov
jecxz
dec
dec
fwait
repnz
es
push
sbb
call
xor
mov
push
adc
jecxz
cmc
inc
inc
jl
clc
fwait
icebp
mov
call
cmp
rorl
add
dec
fucom
push
add
inc
sti
pop
insb
push
xor
inc
fdivr
dec
xchg
mov
pop
xchg
mov
and
add
ret
or
inc
ja
sub
in
xor
xchg
adc
add
cmp
loopne
pop
jb
xlat
jecxz
adc
les
dec
clc
push
ret
push
shlb
adc
mov
add
mov
push
roll
ljmp
and
xchg
or
in
jge
mov
sbb
adc
lock
rcr
lret
jle
adc
mov
push
rcrl
sbb
and
mov
ljmp
add
jne
pop
cmc
jne
sbb
das
fcmovu
out
jb
call
std
enter
sbb
clc
or
out
sub
mov
mov
cltd
add
xchg
ret
ja
or
xchg
clc
sbb
mov
cmp
je
fcmovnbe
add
out
xchg
and
mov
push
outsb
inc
lock
loop
aaa
std
push
xchg
adc
in
jo
push
jb
jl
mov
jle
xchg
cmp
jbe
xorb
inc
ret
inc
xchg
das
sbb
rcrl
scas
aam
rorb
lea
hlt
cmp
stos
inc
dec
xor
mov
xchg
and
jecxz
daa
add
jecxz
out
pop
mov
out
ret
inc
cld
stc
clc
lods
mov
push
adc
xor
icebp
aad
decb
add
clc
daa
mov
cmpsb
ja
jb
push
cld
scas
rcr
mov
add
imul
adc
icebp
imul
adc
pop
ret
dec
mov
lahf
subl
pop
dec
clc
incl
enter
frstor
add
clc
fadds
rolb
mov
inc
sub
test
lea
imul
dec
ja
jno
inc
or
faddl
sbb
mov
dec
mov
ljmp
filds
add
clc
iret
pop
jns
mov
adc
inc
push
dec
add
addr16
pop
or
insb
insb
inc
ficoml
cli
push
mov
pop
adc
adc
hlt
inc
fidivl
pop
clc
popf
aad
mov
and
mov
pop
nop
fldenv
in
fdivrs
inc
rolb
iret
pop
iret
lock
mov
xor
loop
imulb
jecxz
cwtl
push
or
fsubrl
jno
orb
movsb
xor
ss
and
scas
aam
test
jnp
push
push
mov
mov
xchg
or
pop
mov
sbb
push
flds
pop
adc
fmul
loopne
js
push
loopne
inc
or
sub
mov
add
cli
jbe
cmc
pop
or
in
mov
xchg
pop
test
inc
mov
into
mov
aaa
fucomip
dec
js
pop
sub
inc
add
lock
add
fiadds
fidivl
loope
or
push
data16
dec
adc
movsb
fldl
push
incl
rclb
add
jmp
mov
adc
test
sbb
inc
pop
inc
inc
lock
popf
mov
test
cmp
dec
divb
enter
push
mov
lock
sbb
adc
pusha
movsl
ss
js
ds
or
cli
mov
mov
sbb
adc
outsl
sbb
jno
mov
pop
in
jl
xor
hlt
cli
mov
push
push
leave
loop
and
daa
mov
cmp
lods
push
in
sub
js
daa
int
xchg
jb
fs
test
popa
or
clc
ljmp
je
pop
xchg
pusha
jo
pop
clc
mov
shlb
sbb
adc
pop
push
cmpsl
fcoml
int3
or
ds
loope
dec
and
icebp
and
out
xchg
pop
loopne
sbb
lods
inc
es
adc
les
mov
test
rcrb
sbb
push
push
push
xor
inc
dec
adc
ret
adc
jbe
shl
pop
aas
std
pop
insl
or
mov
inc
out
clc
jbe
sub
mov
aam
sti
sub
arpl
xchg
ret
out
shlb
dec
adc
adc
sub
ret
aad
sbb
mov
sbb
mov
aad
and
xchg
dec
movsl
sub
xor
incl
lods
mov
mov
stos
int3
xor
shl
or
testb
icebp
mov
sub
pop
adc
push
lret
mov
data16
daa
jl
clc
sbb
repz
call
mov
xor
mov
inc
push
or
enter
hlt
pop
shrb
sub
mov
push
inc
sbb
jmp
and
leave
dec
xchg
iret
and
mov
leave
ja
aam
sahf
in
mov
mov
jo
lods
mov
hlt
jle
clc
sbb
push
jp
aas
sub
push
ret
sbb
cvtps2pi
mov
fildll
push
xor
into
push
testb
test
add
add
push
adc
and
jg
out
test
outsl
or
inc
pop
xor
push
fs
sub
adc
xchg
arpl
pop
rclb
mov
xchg
and
pop
int3
lret
cwtl
and
rep
movsb
mov
data16
lret
mov
push
push
and
shrl
lret
test
jg
aad
adc
mov
fisubrl
xor
mov
std
add
sub
add
scas
cld
sbb
sbb
adc
xor
hlt
adc
xchg
pop
aas
clc
xchg
mov
or
test
test
loope
je
lea
jl
pop
add
lea
fbstp
pusha
and
js
mov
lds
ja
add
xchg
pop
mov
cld
cmp
or
xor
popf
mull
cmp
add
xchg
pop
xor
sbb
adc
cwtl
inc
mov
and
push
add
add
push
int
sbbb
add
insb
push
push
add
test
push
lock
xchg
xor
insb
shlb
sbb
cmpsb
or
pop
push
loop
mov
es
inc
xor
adc
test
dec
cmp
mov
movsb
mov
std
add
inc
cmc
into
adc
clc
hlt
lds
push
xchg
ljmp
sti
scas
sarl
test
out
jmp
cld
jmp
in
sbb
mov
jo
inc
and
aaa
mov
hlt
push
jmp
cmpsb
push
cmp
mov
jo
iret
stos
ds
dec
cmp
mov
or
dec
enter
cli
push
loope
adc
pusha
xorl
mov
xchg
mov
subb
lods
jp
xchg
or
das
mov
pusha
pop
shlb
push
jo
shll
jo
sub
xchg
and
pushl
shrl
inc
loope
inc
rorl
insl
xor
sbb
aas
subb
loopne
into
dec
pop
push
stc
push
inc
push
sbb
adc
xor
pop
cwtl
lock
ljmp
fldl2e
pop
and
xchg
cs
faddl
cmc
sbb
gs
or
push
push
or
loop
add
mov
and
jl
pop
push
xor
jmp
lahf
mov
repnz
lret
mov
aad
pop
push
mov
push
call
xchg
cmp
data16
sub
es
mov
orb
push
iret
aas
mov
sbb
adc
dec
mov
int
fadd
inc
pop
fistpl
adc
mov
jo
cli
stc
ja
std
add
insb
nop
imul
arpl
roll
es
add
inc
mov
mov
pop
outsb
or
and
les
nop
ljmp
test
xchg
cmp
mov
add
loopne
push
push
adc
nop
dec
stos
outsl
mov
fistpl
inc
jmp
jmp
outsb
nop
xchg
inc
sti
xchg
and
sub
repnz
scas
in
xchg
aad
sbb
push
arpl
adc
retw
inc
push
addl
cmp
add
add
mov
and
rcl
mov
fwait
sub
into
test
add
ljmp
hlt
sub
int
fsubrl
fiaddl
loop
sbb
mov
push
test
push
mov
pop
sub
aam
inc
adc
cmp
je
pop
add
mov
scas
xor
bound
add
sbbl
inc
add
mov
ljmp
ds
pusha
pop
xchg
cmp
jnp
pop
xchg
fcom
popa
and
lea
mov
scas
adc
fisttps
decb
pop
sbb
or
test
ret
ja
push
sub
mov
sahf
mov
jmp
cli
sbb
xchg
loope
aam
test
lock
pop
js
insl
sbb
lock
push
mov
rorb
cwtl
ljmp
lret
xlat
test
inc
dec
mov
add
push
cld
push
lret
icebp
push
sub
lods
mov
add
std
xchg
xchg
xchg
ret
or
add
dec
mov
call
add
loop
test
and
clc
add
scas
lret
xchg
push
xor
repz
ljmp
std
dec
ljmp
jmp
dec
rcrl
dec
stos
push
mov
add
mov
or
and
clc
cmpsb
out
ret
std
lds
push
add
xchg
aam
sub
ja
mov
push
fs
pusha
rcrl
in
xor
add
pop
test
mov
push
push
mov
into
inc
mov
or
je
shl
cmp
dec
andb
std
mov
pop
rcll
mov
dec
in
out
mov
int
lcall
jb
aas
xor
sbb
dec
lds
or
addb
xchg
adc
pop
loope
aaa
cld
das
popa
outsb
xchg
orl
dec
inc
inc
enter
loope
adc
ljmp
jp
out
call
mov
push
pop
jo
imul
mov
test
lock
test
pushf
sub
cmp
mov
dec
int
add
cmpsb
out
jge
lock
je
insb
ret
xabort
xchg
xchg
inc
jb
mov
mov
mov
or
es
mov
jne
rol
fldt
push
hlt
iret
and
adc
jp
pop
jnp
lods
movsb
pop
push
out
or
and
add
ljmp
clc
cmp
fs
or
ret
rcrb
ret
push
aad
mov
inc
push
cld
add
ror
sub
out
add
xchg
ficomps
xor
and
movsl
repnz
xchg
and
mov
mov
jg
or
test
pop
fbld
cmp
js
dec
mov
sub
mov
pop
cs
loope
sub
jbe
fwait
sub
loop
lods
lret
xchg
out
lret
and
out
popa
inc
mov
inc
jmp
mov
outsb
mov
push
mov
shrl
insb
cmp
mov
push
subb
jle
in
pop
pop
mov
jo
xchg
jo
push
push
or
icebp
and
pop
xor
adc
inc
insl
jge
sbb
aas
pop
test
test
out
decb
or
jge
es
leave
lds
stc
inc
das
xchg
cs
repnz
fst
sbb
sbb
jo
cmc
lcall
pop
mov
or
jbe
or
jae
pop
jg
mov
dec
ds
mov
cmpsl
add
lods
ljmp
pop
lret
xor
adc
stc
mov
incb
adc
nop
dec
push
pushf
or
cmp
stos
test
int3
push
out
jge
jno
lock
icebp
in
fistps
sbb
or
sub
decl
dec
aas
xchg
jo
movsb
mov
dec
adc
enter
or
cmp
loop
aaa
cmp
jo
adc
dec
mov
mov
mulb
xor
mov
ret
shll
arpl
dec
out
adc
jmp
jo
shll
aas
adc
mov
sahf
lcall
sahf
out
scas
pop
fildl
ljmp
cli
insl
xlat
mov
push
inc
cmp
pop
aas
xchg
mov
push
cmp
jo
call
fs
movsl
ja
scas
in
and
dec
xchg
dec
or
inc
cmpsb
jle
xor
clc
mov
add
sbb
orb
cmp
xor
add
adc
sub
mov
aaa
sub
jl
test
push
sbb
dec
push
dec
ljmp
sub
fidivrs
add
pusha
das
sbb
mov
xor
out
and
add
enter
add
dec
pop
pusha
mov
ds
jmp
sar
or
jne
xchg
push
cltd
push
add
mov
aad
push
scas
in
fwait
test
mov
mov
sahf
test
cmp
cmp
adc
inc
mov
sbb
leave
dec
ljmp
push
imul
insl
add
xor
dec
or
rclb
sbb
push
subl
je
test
ret
xor
sub
fwait
push
inc
adc
xchg
sbb
and
sub
cltd
mov
xchg
cld
inc
sub
les
icebp
ds
dec
ja
fisttpl
lods
cwtl
jb
push
cmp
je
fwait
jmp
push
sti
inc
aam
call
call
inc
lcall
push
sub
outsb
arpl
and
mov
dec
decl
push
xchg
and
pop
sbb
popw
lock
cld
mov
adc
jb
inc
dec
mov
sbb
xchg
aad
jle
repz
cld
add
xchg
pop
test
js
add
sar
xchg
popa
sub
fadds
jle
add
adc
dec
pop
or
sbb
sub
loopne
sbb
das
mov
jecxz
lcall
lcall
outsb
and
fidivrs
add
test
mov
cli
add
sbb
xchg
xchg
faddl
pop
imul
pusha
mov
xchg
mov
jg
adc
inc
pop
jo
pop
push
clc
repz
jb
test
bound
xchg
and
dec
cld
jmp
or
movsl
jo
out
xchg
adc
jg
mov
int
into
inc
cmp
cmpl
loop
sahf
insl
xlat
popa
jmp
jne
aad
or
rolb
std
mov
sub
jl
loopne
inc
inc
pop
outsl
adc
scas
cwtl
dec
add
push
push
jge
push
loop
ret
lock
scas
pushf
rclb
test
xchg
adc
mov
pop
scas
pop
aam
shl
pop
lds
in
test
add
push
popa
sub
loopne
fists
ret
dec
cmp
hlt
outsb
sub
sti
add
ljmp
call
xchg
pop
fisttps
jecxz
sbb
repnz
in
push
cmp
add
xchg
cwtl
inc
and
loope
mov
lcall
pop
sbb
cld
mov
inc
push
nop
icebp
mov
cmp
test
icebp
std
mov
jbe
movsb
adc
push
repnz
hlt
lcall
loopne
popf
leave
push
push
jb
jno
ror
mov
mov
dec
mov
adc
sahf
pop
ss
cs
mov
repz
ret
test
rcr
or
sub
push
xchg
mov
pop
push
sbb
inc
sbb
aad
mov
mov
int3
xchg
out
jo
in
pop
je
js
in
out
push
xor
test
add
xchg
mov
inc
mov
jg
test
add
outsl
adc
inc
mov
cld
jp
jo
push
jle
movsb
xchg
in
pop
cmp
lret
test
js
shl
cli
adc
cwtl
movsb
inc
add
mov
push
add
int3
jl
ja
push
and
pop
jg
jbe
mov
and
push
pop
and
sbb
ret
add
sbb
pop
pop
jp
mov
mov
les
dec
mov
jns
data16
lock
xchg
sub
test
mov
xor
insl
or
cmc
rol
movsb
dec
loopne
mov
add
in
mov
push
lods
mov
dec
shl
mov
pop
mov
xchg
ss
cli
addl
push
pop
cwtl
sarb
mov
or
imul
aas
mov
in
xor
xchg
mov
lock
add
daa
repz
test
cmpsb
and
fcmovb
push
out
test
movsb
xchg
ret
inc
js
jo
xor
push
test
mov
xor
sub
lds
pop
or
mov
ret
les
inc
bound
daa
pusha
inc
int3
sti
clc
loop
lock
mov
add
cmp
mov
int
xor
jp
sbb
dec
push
mov
jge
orb
xchg
ret
pusha
dec
enter
adc
pushf
add
add
sbb
xor
lcall
dec
in
jp
mov
js
inc
add
loop
inc
or
mov
sub
jbe
sbb
nop
ss
es
clc
or
mov
cwtl
in
push
mov
lock
mov
or
data16
mov
and
lock
pop
jle
pop
cli
pop
mov
orb
xor
adc
xor
cld
imul
inc
inc
sbb
ljmp
add
mov
add
add
cmp
cmpsl
lock
test
dec
pop
adcb
inc
jge
xchg
and
incl
sti
sbb
stos
adcl
mov
jl
mov
jp
jno
movsb
test
loop
lret
fs
inc
icebp
jo
shlb
pop
push
lret
dec
idivl
jg
jno
sbb
cld
shlb
inc
xor
cmp
dec
xchg
mov
stos
in
insb
cmpsl
add
and
sar
fisttps
loopne
mov
mov
jbe
sub
push
rclb
mov
mov
idiv
enter
cltd
mov
roll
adc
cltd
popf
hlt
stc
mov
xchg
jecxz
leave
adc
pop
pusha
sub
or
xchg
stos
xchg
xchg
insb
mov
add
xor
std
not
rcll
push
rolb
cli
lret
dec
dec
adc
mov
and
or
mov
incl
mov
pop
sbb
jge
adc
mov
les
jno
jecxz
jl
outsl
andb
xor
or
adcb
and
lahf
cmc
jmp
les
mov
outsl
fsubl
mov
mov
insl
mov
test
push
add
sbb
lods
pop
lds
mov
mov
orb
ds
or
outsl
add
push
out
fwait
push
pop
mov
idivb
ret
or
icebp
std
je
sub
lods
ja
cmp
cmp
aam
mov
pop
jg
shrl
sbb
fcmovu
icebp
xchg
icebp
cmp
popa
cld
sbb
pop
icebp
jne
or
les
outsl
adc
fcoms
pushf
jge
and
jno
popl
mov
in
mov
dec
pop
mov
mov
jo
sub
aad
adc
cmp
cmp
pop
and
stos
decb
sbb
and
test
dec
pop
lahf
push
xchg
lret
pop
int3
xchg
fnstsw
jecxz
or
pop
jbe
js
pushf
daa
mov
jbe
adc
jno
decl
cmpsl
out
subb
clc
test
rorb
outsl
push
rorl
lahf
xor
mov
orl
mov
cltd
jge,pt
lods
push
js
jae
iret
scas
pop
or
out
cmp
push
inc
dec
lods
loope
lock
rorl
pushf
leave
jo
stos
and
lock
push
loop,pt
inc
dec
push
outsl
and
stos
jo
cmp
lretw
lds
and
sub
inc
aas
in
stos
sbb
ret
test
movswl
imul
mov
stos
outsb
bound
add
push
dec
gs
jns
push
icebp
push
addr16
inc
shr
dec
push
push
sbb
inc
pop
jbe
adc
push
xchg
jge
cmp
jmp
lock
adcl
lods
mov
movsb
outsb
orb
pusha
pop
xchg
mov
fisubl
push
jecxz
iret
sbb
mov
push
pop
and
cmp
or
pop
movups
mov
push
cli
lret
rorb
sbb
mov
inc
and
xor
shlb
ss
mov
hlt
jmp
orb
add
push
daa
icebp
call
nop
and
imul
stos
sub
and
or
nop
inc
push
xorb
push
div
ljmp
push
ret
sub
ljmp
sub
mov
sub
cmp
loop
stos
mov
pop
fwait
adc
pop
scas
into
rclb
rclb
sbb
push
mov
dec
lahf
sbb
xchg
push
jp
das
out
or
dec
jnp
imul
sbb
and
pop
push
adc
inc
adc
add
nop
push
push
aaa
cmp
mull
data16
stos
ds
jmp
mov
fdivl
mov
cwtl
cmc
push
cmp
push
add
mov
in
repnz
je
cmpsl
sbb
inc
pop
mov
sbb
sbb
mov
jge
ret
push
std
mov
loop
sbb
repnz
add
inc
mov
test
outsb
add
in
hlt
fbld
adc
or
mov
lret
and
mov
jp
jmp
cmp
mov
in
push
enter
cmp
insb
rcrl
inc
and
add
js
mov
lds
clc
int3
shlb
ljmp
test
lret
rcll
hlt
mov
jg
push
std
or
push
mov
jmp
push
pop
push
inc
adc
arpl
lret
mov
clc
testb
into
outsl
mov
and
dec
repz
test
or
sub
or
mov
pusha
scas
dec
aam
inc
out
cmp
inc
mov
in
or
jo
stos
push
out
sub
fimull
adc
mov
cmp
mov
adc
hlt
inc
ret
xor
lods
add
ret
push
movsb
add
std
push
add
jns
jp
mov
cli
fiadds
inc
add
cmp
cld
mov
rcl
inc
flds
xor
cwtl
push
rcrl
clc
xchg
loop
mov
addr16
jl
in
mov
sub
scas
mov
icebp
push
and
pmaddwd
mov
clc
andb
mov
pop
sub
js,pn
sbb
lret
mov
mov
lret
xor
fimull
aam
jecxz
jl
repz
push
add
xchg
les
push
lock
mov
add
push
add
sub
push
cmp
loop
sbb
clc
out
repnz
push
inc
adc
dec
inc
sbb
outsl
pusha
adc
fwait
ja
xor
aas
lock
out
mov
scas
ja
pop
sahf
inc
sbb
cmp
mov
clc
cvtps2pd
lret
mov
mov
aam
cmp
adc
cmc
loop
sarb
fidivrl
sti
outsb
adc
cmp
rorb
push
xor
inc
sbb
jb
pop
push
loope
xor
stos
push
adc
add
jo
pop
push
in
daa
or
clc
clc
aad
add
enter
mov
int3
mov
leave
fstps
pusha
fucomip
mov
add
xor
loopne
and
orb
add
push
call
fdivrl
xchg
inc
popf
test
jnp
sub
cld
stc
mov
stos
add
shl
jbe
ljmp
jbe
push
mov
or
and
punpcklbw
aad
pop
pop
rolb
inc
pop
rcl
ret
mov
jl
xchg
mov
inc
stos
subb
add
sbb
sbb
out
dec
out
es
mov
cli
or
movsb
shll
mov
ja
ret
sub
mov
mov
inc
dec
hlt
xchg
adc
ds
pop
sbb
inc
or
rcrb
mov
sahf
mov
shll
addr16
and
dec
push
and
pop
jecxz
bound
insb
dec
pop
sahf
xchg
fimull
sub
imul
inc
rcl
mov
inc
clc
push
ret
cmpl
sbb
jno
mov
or
and
cmp
movhps
inc
ljmp
js
fwait
cmp
popa
out
xor
jno
ficoml
mov
pop
add
adc
enter
ret
cwtl
xor
xchg
adc
ljmp
scas
add
xchg
and
sbb
out
dec
add
fdivl
cmp
push
outsl
mov
pop
stos
mov
inc
xor
test
xchg
movsb
and
mov
bound
hlt
stos
mov
and
fwait
imul
loopne
or
xchg
ljmp
mov
sbb
fst
mov
in
jne
adc
mov
dec
fs
mov
adc
add
ljmp
pop
ljmp
icebp
loop
and
call
test
inc
rcll
cmp
je
push
cli
mov
lret
add
push
fstps
loope
jmp
subb
mov
cld
arpl
cmp
pushf
and
jge
fsts
cmc
push
mov
mov
jne
add
push
sbb
mov
mov
pusha
test
les
test
sub
subl
mov
pop
xchg
out
cmpb
cli
fucomip
xchg
fadds
test
mov
test
push
lods
hlt
push
sbb
push
movsb
push
xor
push
cmp
jb
jmp
jmp
lea
lods
push
dec
test
mov
adc
mov
xchg
pop
insb
pop
lret
repz
push
mov
jecxz
roll
vandnps
or
jle
add
cwtl
or
inc
push
rcrl
pop
sbb
inc
fisubl
imul
std
xor
pop
mov
loope
aas
enter
inc
adc
push
mov
gs
fiaddl
call
sbb
lock
xchg
and
loope
adc
orl
jle
cli
inc
mov
ljmp
xor
mov
insl
add
loop
mov
mov
in
dec
cmc
mov
pop
rcl
movsl
inc
inc
rclb
clc
test
add
jns
sub
daa
jno
std
lock
or
fisttpll
and
lods
fbld
in
push
lds
aad
sbb
and
mov
jo
push
push
or
mov
enter
mov
aam
loopne
call
dec
fildll
lods
dec
push
add
je
js
and
cli
outsl
mov
jnp
fimuls
xor
loopne
dec
cmp
push
pushl
push
mov
pushf
scas
push
addl
jp
imulb
and
fbstp
push
shll
jmp
test
xor
xchg
mov
add
fs
scas
fildll
xadd
imul
adc
andb
addb
inc
adc
aas
lods
xchg
sub
inc
lods
nop
adc
popf
rclb
scas
push
clc
mov
cltd
mulb
test
sbb
inc
loop
xchg
or
pop
jne
hlt
test
test
sbb
addr16
jl
fiaddl
mov
hlt
ja
insb
jmp
test
inc
hlt
jae
out
jo
push
add
clc
add
dec
or
inc
cmp
test
pop
cmp
sar
mov
enter
sbb
adc
add
pop
nop
loope
das
mull
sbb
xor
outsb
stc
add
mov
xchg
inc
fbld
or
lods
xchg
inc
imul
push
out
ds
jl
xor
lcall
cmp
ljmp
stos
icebp
push
xor
mov
data16
lds
cli
fsubrl
or
into
sub
mov
adc
jmp
mov
cmc
fbstp
mov
cli
sbb
inc
test
es
push
adcb
out
lcall
out
clc
mov
rcrl
push
movsl
stos
adc
and
xor
or
jle
pusha
cli
dec
ret
inc
mov
orb
call
enter
push
push
fs
ret
fisubs
xor
sbb
add
lds
clc
xor
rcrl
pop
and
xor
enter
stos
lods
sub
loopne
std
pushf
sub
jl
cmc
add
push
mov
fwait
push
jae
dec
lods
lds
mov
mov
leave
mov
sub
dec
call
add
clc
mov
inc
xor
mov
add
in
fadds
add
xchg
cmp
hlt
lea
aad
inc
call
or
loope
in
xor
lods
dec
je,pn
adcb
adc
ret
push
loop
xor
clc
adc
xor
call
test
arpl
or
lds
inc
xor
or
and
mov
add
fists
and
andl
icebp
pop
push
add
sub
push
add
sbb
adc
pop
pop
push
int3
add
fcomip
sub
dec
mov
cmp
cmp
movsl
std
data16
pop
mov
popf
movsb
push
fldt
and
das
outsb
xchg
jecxz
mov
and
pop
push
movsb
mov
ja
mov
adc
pusha
and
fildl
fmul
jns
pop
lds
pop
cmp
rorl
mov
pop
cli
add
and
lcall
or
mov
cmc
insb
imul
adc
ret
mulb
xor
add
add
pop
and
lods
mov
or
dec
mov
xor
inc
sbb
test
adc
or
sbb
lods
push
cwtl
mov
dec
cli
add
movsb
inc
ret
jns
inc
es
call
je
mov
xor
adc
out
dec
adc
outsl
jg
js
pop
add
hlt
hlt
sbb
add
or
pop
cmp
andb
scas
pushl
nop
add
xor
push
test
jl
loopne
insl
cli
ljmp
xchg
sub
sub
loopne
fisubrl
daa
cwtl
pop
nop
mov
jmp
filds
or
mov
fiaddl
push
xchg
sbbl
mov
or
stos
out
push
scas
jl
and
fcmovnb
add
sahf
shlb
sahf
sbb
jno
add
ljmp
add
xchg
ja
pop
cmp
fdivrs
mov
sub
and
adc
mov
dec
dec
cmpsb
movl
sbb
push
bound
sti
or
stos
sbb
out
fsts
xor
dec
rclb
insb
xor
jecxz
jb
decl
xchg
out
ss
pop
test
enter
xchg
clc
fwait
or
and
add
in
lods
add
and
fcmovu
test
jle
xchg
insb
push
fs
mov
out
in
sub
pop
loope
sahf
ljmp
inc
out
cmp
mov
mov
or
adc
je
xor
ret
add
push
xlat
icebp
cs
sub
clc
ret
hlt
xadd
jb
or
dec
cli
int
push
pushf
dec
mov
into
mov
sbb
aam
cmc
cld
sub
adc
test
in
stc
or
mov
stos
les
loop
pop
loopne
mov
pop
xor
jae
and
xchg
lods
outsl
lret
mov
dec
sub
push
cwtl
sbb
cltd
add
fnstenv
out
insb
lods
movsb
sbb
int3
push
es
or
rep
pop
aad
cmp
xchg
popa
in
into
in
cmp
aam
orb
dec
adc
and
lret
lock
xchg
jne
rcr
icebp
jecxz
jns
cwtl
and
imul
in
nop
jo
or
out
fldcw
outsl
lock
fdivr
inc
add
pop
mov
clc
mov
cmp
adc
test
insb
sarl
test
push
cli
jg
jecxz
mov
mov
sti
push
cli
add
shl
fimull
mov
jne
fdivrs
je
or
cmpsl
iret
push
pop
je
jmp
pop
and
xchg
stos
imul
movsl
add
mov
add
imul
fildll
pop
cmp
or
dec
pop
clc
mov
inc
sub
sbb
xlat
sub
mov
loope
xchg
xchg
aam
pop
imul
loop
sbb
or
mov
leave
cmc
jmp
nop
hlt
mov
out
mov
pop
popa
daa
gs
push
pop
call
ret
jecxz
cmp
pop
test
push
mov
sbb
aaa
mov
mov
sbb
mov
test
loope
mov
xor
inc
int3
cmp
cmc
push
lahf
repnz
push
icebp
xchg
outsb
cmpsb
push
adcl
jmp
pop
clc
or
ficompl
cs
jmp
push
outsl
sbbb
xchg
insb
mov
dec
xor
pop
loopne
push
inc
mov
jmp
cwtl
lcall
push
cmp
adcb
adc
aam
mov
push
loop
sbb
cs
mov
cmpsb
cmp
xchg
out
push
add
imulb
loopne
pop
popa
mov
xor
loop
dec
sbb
mov
pop
cmpsb
mov
mov
push
push
push
lock
jb
shll
in
rolb
pop
std
or
jge
mov
pop
xor
test
jg
inc
repz
xchg
mov
js
jp
jg
jns
sub
fucomip
inc
ret
outsl
out
insb
inc
enter
dec
stos
stos
cmpb
xchg
dec
cmpsb
repnz
aam
fs
mov
inc
and
jnp
pop
mov
outsl
xchg
add
cmpb
push
pushf
inc
cmp
scas
sbb
mov
inc
sbb
enter
outsb
mov
test
mov
sub
repz
adc
and
loope
pop
cs
jno
adc
xchg
sub
push
cwtl
adc
add
add
push
adc
add
xor
cmp
add
adc
add
jecxz
ret
xchg
popa
xchg
sub
mov
inc
stos
into
inc
loope
cmp
out
fstl
mov
add
ja
mov
mov
push
add
sub
sbbb
int3
aas
sub
mov
push
ja
nop
jle
cmp
or
pop
mov
push
mov
dec
jl
arpl
outsb
and
mov
xchg
shlb
js
in
jo
xchg
popa
loop
fwait
add
outsb
into
cltd
cmp
pop
pushf
mov
push
dec
je
into
clc
inc
js
inc
dec
add
pop
sbb
jecxz
enter
mull
or
or
in
ret
mov
shrb
loop
mov
arpl
pop
adc
cmpsl
les
xchg
jb
dec
call
es
mov
jg
push
xchg
xorl
add
push
mov
add
clc
aam
scas
push
test
jo
cld
sbb
adc
push
inc
mov
leave
nop
xchg
test
into
ret
jae
pop
sbbb
xchg
xchg
lods
fdivs
.byte
cli
.byte
ficompl
bound
clc
out
add
pop
leave
ret
pop
leave
ret
inc
add
add
and
xor
sub
or
fucomp
faddl
ss
ret
or
pop
pop
add
mov
ret
adc
or
add
or
imul
call
and
sbb
mov
adc
cmp
add
adc
mov
pop
pop
fldcw
cmp
adc
add
adc
popa
int
imul
and
add
adc
lods
mov
pop
cmp
adc
sbb
adc
fisubrs
dec
xchg
mov
and
or
push
inc
adc
in
mov
cwtl
dec
sub
fs
dec
inc
xor
jbe
insb
push
mov
or
roll
adc
adc
mov
and
add
inc
add
mov
cwtl
rolb
jp
adcb
lods
cmp
cmpsb
xchg
insb
andl
pop
adc
pop
xor
dec
fistpl
imul
sub
stos
test
dec
adc
sub
or
and
mov
insl
xor
add
pusha
popa
push
mov
mov
sub
lcall
cmp
mov
test
push
in
add
adc
mov
decl
add
or
jl
incl
and
adc
and
orb
mov
std
and
inc
dec
mov
inc
inc
push
adc
and
add
mov
nop
add
cmp
test
fistpl
inc
mov
and
add
pop
mov
sbb
mov
adc
adcb
inc
mov
mov
cs
pop
nop
lock
adc
sub
or
adc
dec
add
inc
or
xor
mov
xchg
test
data16
adc
add
adc
cmp
imulb
dec
inc
inc
inc
add
dec
adc
sbb
pop
adc
nop
cwtl
out
sub
add
xchg
cltd
or
bnd
push
insb
es
or
inc
push
and
add
push
add
push
roll
dec
ss
add
push
pusha
cs
aam
xor
js
data16
es
sbb
shlb
adc
xor
xchg
bound
mov
inc
je
sub
mov
xchg
inc
xchg
push
or
fimull
ret
sub
xor
bound
and
jl
inc
push
pusha
data16
or
add
mov
inc
in
nop
int
in
out
nop
test
mov
nop
push
pop
adc
push
inc
and
sub
or
xchg
fcmovb
sub
xor
inc
test
mov
xchg
pop
mov
cmp
je
and
lods
cli
nop
push
xor
lods
or
or
js
loopne
push
mov
and
loop
test
test
xor
movsb
and
mov
mov
adc
adcl
ljmp
insb
mov
andb
pop
cmp
shlb
fsubrs
mov
rclb
out
inc
or
and
loopne
mov
cld
inc
push
ds
jno
stos
fs
or
add
test
dec
xchg
and
pop
sub
sbb
or
sub
adc
add
in
push
jbe
sub
and
pop
js
cltd
sarb
or
lcall
xchg
loopne
push
ss
orb
adc
pop
cwtl
cmp
data16
pushf
push
dec
in
cmp
lock
and
pop
int
jno
lods
orb
nop
xchg
adc
data16
out
mov
lcall
mov
cmpl
and
and
pop
mov
adc
cwtl
pop
and
int3
sahf
adc
and
inc
out
mov
lcall
test
and
fimull
shlb
and
mov
addl
fsub
jo
xor
lods
add
inc
dec
stos
and
je
mov
sarb
lret
push
mov
roll
into
cmp
xor
adc
cs
adc
jno
xchg
pop
in
and
sbb
int3
and
nop
and
jmp
xor
push
mov
push
andb
in
add
xor
les
mov
mov
test
adc
xchg
outsb
mov
adc
push
es
push
sub
jp
push
lret
loopne
pushf
or
mov
insb
in
mov
jecxz
push
add
xacquire
les
push
inc
adc
inc
loopne
pop
lods
sbbl
lret
push
lret
push
adc
sbb
adc
cmpsb
sbb
dec
jo
or
jb
out
bound
push
scas
test
xor
inc
mov
clc
lods
mov
jp
pop
and
adc
jbe
test
inc
pop
mov
xchg
sahf
rclb
fdivrs
jno
pushf
push
push
dec
jo
popa
xchg
fld1
inc
cmp
mov
sub
rorb
orl
or
xor
ret
das
insl
test
rolb
addl
xor
sub
flds
daa
es
xor
push
pop
xor
nop
dec
bound
xchg
inc
adc
scas
adc
shlb
inc
sub
scas
push
cmp
add
loopne
mov
push
mov
sbb
xor
test
and
and
and
sti
cmp
fmuls
es
dec
inc
inc
ret
mov
bound
xchg
lods
pop
mov
push
jbe
bound
mov
cmpb
dec
sbb
cwtl
add
nop
fisubs
xchg
addb
lcall
or
test
pusha
cmp
mov
push
scas
dec
jb
nop
xchg
push
mov
addb
sbb
xor
inc
adc
mov
jno
sbb
or
lret
cmp
pusha
cwtl
inc
stos
inc
pop
mov
dec
movsb
xor
adc
add
mov
call
jp
stos
jp
addr16
xor
rolb
in
shl
sbbb
cmp
je
cmp
fldenv
mov
mov
jp
and
pusha
mov
pushf
ret
cmp
rorl
mov
and
xchg
xor
jp
inc
out
mov
adc
and
or
idivb
scas
enter
add
out
push
jo
mov
xor
stos
add
bound
mov
pop
mov
xorb
add
stos
xchg
jb
jo
lds
push
repnz
inc
nop
test
sbb
mov
call
mov
ret
xchg
jl
js
loope
jmp
cmpsb
mov
sahf
dec
out
les
mov
push
jbe
and
mov
je
pop
mov
or
mulb
jl
inc
cmp
jl
flds
or
cwtl
push
pusha
mov
xor
push
js
bound
cwtl
push
lods
dec
pushf
mov
sbb
nop
mov
push
stos
and
stos
dec
mov
mov
mov
mov
and
dec
and
inc
add
in
ret
sub
push
mov
push
stos
cmpl
mov
sub
das
xor
cmp
popf
add
adc
and
rclb
fld1
inc
lcall
mov
and
push
sbb
push
mov
lret
sub
xor
cmp
xchg
mov
addb
jbe
adc
jae
push
mov
add
xchg
mov
loop
into
int
popa
orb
js
es
xor
pusha
clc
js
and
xor
mov
push
mov
sub
shr
adc
test
scas
mov
enter
or
mov
js
and
push
inc
cmpsb
bound
push
mov
pushf
int3
dec
mov
cmpsb
out
nop
adc
xchg
inc
mov
pop
sub
mov
inc
xchg
pushf
loopne,pt
cs
in
js
xlat
pushf
js
sbb
andb
adc
nop
or
lret
xchg
adc
jp
adc
jae
pusha
sbb
xchg
pop
and
mov
xor
pushf
sbb
jmp
push
add
jo
push
rolb
adc
pushw
ror
or
loopne
mov
ret
adc
cmpsb
inc
fimuls
inc
add
mov
sahf
cli
jne
orl
pusha
pusha
rcr
adc
mov
sbb
xor
mov
fsts
into
cld
lock
adc
mov
cli
push
cld
js
adc
push
out
inc
or
rorl
mov
ret
stos
or
nop
pusha
mov
adc
push
out
popf
scas
add
cwtl
cltd
pushf
push
sbb
pop
test
lcall
jp
ret
and
call
pop
adc
inc
cli
addl
cmp
or
push
ret
fxch
int3
jo
mov
cmp
shlb
fcoml
cmpsb
sbb
mov
jle
push
and
xchg
and
adc
rorb
add
xchg
xchg
jo
int3
add
and
jl
add
cmc
xchg
sub
ljmp
loopne
xor
and
mov
or
lock
test
rcrl
mov
mov
or
mov
mov
enter
cmp
pusha
jl
cli
rcrb
cmp
xor
push
roll
mov
mov
or
xchg
add
movl
decl
inc
mov
dec
mov
mov
fmuls
pop
loopne
clc
data16
sub
xor
mov
jge
jne
mov
ss
mov
sarl
fst
not
mov
add
enter
std
ljmp
cmp
add
sbb
jbe
xchg
cmp
jne
cmp
testl
jge
adc
lods
push
clc
or
inc
inc
and
sbb
jbe
pop
jo
rorb
outsb
add
loopne
dec
adcb
add
mov
int
in
cmovo
js
sbb
hlt
or
hlt
xor
mov
shr
stos
jne
dec
sahf
neg
rorl
roll
add
jne
sbb
fimuls
call
pop
fistps
mov
jb
xor
mov
ret
or
mov
insb
jg
add
fsts
stos
rcll
adc
mov
fsub
push
sub
ret
xchg
cld
and
test
stc
lds
test
or
or
adc
lds
in
sub
addb
mov
adc
add
sbb
cmp
js
jge
push
or
in
clc
xor
movsb
and
sub
xlat
add
movswl
into
push
jge
inc
adc
pusha
jg
adc
mov
xchg
sarl
cltd
inc
enter
mov
aas
mov
sbb
in
and
js
adc
pop
not
add
mov
clc
popa
mov
add
jp
pop
divl
add
xlat
cmp
clc
mov
loopne
out
cmp
sbb
jl
loope
ja
push
in
xchg
push
sbb
sub
movl
add
inc
or
mov
xchg
popl
pop
push
cli
push
lahf
aas
pop
fadds
into
mov
adc
cmp
pusha
dec
daa
test
jae
popa
mov
sub
xor
lret
xchg
mov
dec
cmp
sbb
not
neg
jo
int
cmp
cmp
fildll
lea
xchg
cs
popf
stc
pop
sarl
add
insl
sub
sub
in
pusha
in
pop
and
aas
je
xor
cmp
sbb
cli
div
mov
sub
mov
dec
adc
or
pusha
inc
ja
sbb
adc
mov
pusha
push
pop
loope
add
jo
lods
imull
add
inc
dec
add
ds
das
mov
xchg
pushf
xchg
sub
mov
sub
jl
cmp
sti
in
leave
aad
add
daa
fdivrs
sub
cmp
test
clc
das
js
sub
clc
jmp
test
jbe
ja
pop
cld
fs
jmp
test
jae
out
adc
andl
das
mov
add
out
dec
jmp
dec
sub
or
xor
fcomps
sub
adcb
or
fadds
js
add
and
add
push
clc
add
pushl
lea
push
add
add
loop
rcrb
enter
je
add
inc
pop
adc
rcll
aas
data16
dec
rorl
sbb
fnstenv
repz
mov
in
adc
mov
adc
mov
movsl
scas
sub
push
das
leave
ret
xor
sub
inc
fistl
add
mov
mov
sbb
sbb
and
xchg
and
outsl
stos
cld
cmp
int
add
mov
sub
pusha
pop
icebp
stos
xor
sbb
roll
push
fcmovb
cltd
ficoml
ljmp
sbb
or
icebp
cmpl
pop
push
dec
push
xor
int3
xchg
adc
push
fisubrl
ja
push
sbb
pushf
jl
rcrl
sub
pop
nop
push
into
cmp
ret
jge
sub
sbb
addb
push
jbe
pop
sub
adc
xor
test
sub
clc
cld
add
lcall
idivb
ljmp
mov
adc
sbb
lock
mov
add
sbb
adc
popa
push
pusha
jle
add
pop
lock
xor
stos
add
mov
pop
mov
adc
scas
pusha
aam
xlat
ja
rcl
adc
sahf
and
jmp
push
lock
int3
lds
rcl
addl
lock
test
jle
sub
stos
mov
addl
test
ret
add
add
rorl
mov
repz
mov
shlb
ds
jne
sbb
repz
fdiv
dec
and
int3
and
clc
and
int3
jge
cmp
jb
mov
mov
inc
push
pop
rcl
scas
insb
sub
cwtl
mov
enter
sbb
adc
pop
lcall
divl
jno
aas
cmp
mov
jle
inc
inc
push
loope
ss
xor
adc
shlb
int3
add
in
mov
inc
jne
cmp
data16
add
stos
scas
inc
dec
hlt
push
push
hlt
push
call
scas
lock
popf
into
maxps
pop
add
adc
push
imul
loopne
clc
xor
and
xor
lods
and
jl
notb
inc
not
mov
movsb
lret
out
add
push
xor
js
cmp
lods
jno
adc
les
or
sub
insb
push
pop
lods
adc
add
add
and
xchg
and
push
mov
mov
or
addr16
lock
adc
stc
push
rorl
adc
jmp
and
shll
stc
mov
cs
lock
rolb
int
adc
or
rcrl
lock
out
lret
add
cmp
xor
mov
lods
cwtl
add
xchg
add
insl
dec
push
sub
mov
xchg
cs
inc
in
push
icebp
popf
jge
loopne
loop
jno
sti
jecxz
wrmsr
js
fcomps
aas
stos
cmp
mov
pop
inc
pop
xor
mov
or
rclb
xor
mov
mov
or
addb
xorb
lock
adc
pop
out
jbe
lea
add
gs
cs
icebp
pop
imul
pop
or
pop
xchg
rorl
or
ret
mov
push
aaa
jae
or
dec
push
das
cmp
clc
hlt
test
out
sub
sbb
cmpsb
and
fildl
cmp
fiadds
adc
mov
call
in
out
adc
push
and
or
aas
fimull
xlat
imul
repz
call
pop
lret
fsubs
jmp
xchg
les
test
mov
add
add
das
mov
pop
call
mov
xorl
ss
adc
sarb
jnp
mov
int3
add
das
ljmp
clc
sbb
fsub
out
push
fs
cmpsl
sub
repz
and
mov
lock
inc
push
mov
and
decb
loope
std
adc
repz
fcomip
inc
addb
jbe
rdtsc
inc
mov
add
loope
mov
dec
jg
idivb
and
addl
lock
flds
mov
sub
sbb
cs
cld
ljmp
data16
xor
sar
testl
dec
cmp
dec
add
inc
push
push
inc
aam
clc
mov
jbe
add
add
roll
xor
mov
outsl
xor
inc
cwtl
outsl
mov
idivb
pop
dec
cmp
add
mov
adc
mov
lcall
ficompl
dec
rorb
push
mov
push
sbb
xor
pop
inc
decl
mov
popf
xchg
ficompl
or
scas
mov
mov
jecxz
jmp
pop
xchg
mov
fmull
and
adc
cmp
jno
adc
and
fadds
ss
outsl
mov
jp
and
add
inc
xor
ljmp
sbbl
jne
dec
sbb
sahf
mov
out
mov
in
je
add
cwtl
in
adc
js
jbe
jae
sbb
jae
sub
fcoml
mov
sbb
add
mul
push
aaa
push
in
fdivrl
nop
mov
mov
cli
dec
movsb
mov
xor
in
push
push
sub
mov
enter
cmpl
call
cld
cmpsb
js
inc
jbe
in
sbbb
push
sbb
lock
cmp
xor
scas
mov
fwait
in
or
add
fxam
insl
movl
add
pop
dec
mov
mov
mov
imul
lds
out
je
mov
push
test
dec
mov
mov
adc
inc
hlt
pushf
out
call
add
mov
insb
daa
cwtl
push
adc
loop
fisubrl
mov
push
iret
cmpsb
loope
jb
push
call
out
les
loopne
and
mov
in
mov
jo
dec
cld
shll
xlat
jo
cmp
pop
mov
out
cmp
roll
xchg
add
shrb
xorb
xchg
div
mov
rol
scas
faddl
stos
and
stc
fsub
xchg
add
sbb
iret
lcall
out
add
cwtl
ret
in
adcl
fs
cli
dec
int3
test
fnstsw
int
push
mov
lock
dec
test
push
mov
sbb
paddq
out
xor
shll
add
sub
mulb
js
jae
sarl
pop
add
and
movsl
sbb
clc
cmp
add
rcll
ljmp
cmp
sbb
xor
push
xchg
push
jae
and
pop
jbe
loope
lods
fwait
in
add
or
loop
adc
xchg
adc
xchg
jo
sete
testl
pop
pop
add
js
aam
andb
out
xor
clc
sub
add
cmp
push
int
add
mov
movsb
ret
mov
imul
mov
sbbl
repnz
aad
loope
aam
cmp
dec
mov
in
inc
fsubs
xor
enter
fmul
scas
or
mov
cmp
push
and
cmp
mov
js
sub
cmp
bswap
dec
sbb
fcomip
jno
xchg
and
pop
mov
lret
sbb
jg
ds
dec
inc
sarb
inc
jp
movsb
or
fdivs
and
ret
jg
rcl
imul
and
adc
jl
pop
fsubrs
dec
mov
gs
dec
dec
mov
inc
aas
push
dec
jb
test
je
cltd
fs
push
or
cld
push
or
clc
loopne
mov
call
xlat
call
inc
sti
push
sub
sub
jmp
cmpsl
cmp
std
loopne
add
sub
shlb
shl
dec
add
pop
shrl
push
addr16
data16
int3
add
jmp
push
test
cs
cmp
mov
sarl
dec
xor
js
mov
inc
loopne
add
jp
aas
mov
shrl
inc
outsb
pushf
sahf
jmp
arpl
mov
pop
and
adc
cld
fwait
lcall
adcb
or
fucomip
rorb
test
inc
sbb
js
imul
pop
ljmp
jnp
inc
inc
sub
ret
in
add
pop
pop
out
out
fdivrl
jge
mov
sbb
sbb
call
inc
or
shll
jnp
or
testl
out
pop
cmp
sub
push
das
adc
jae
test
push
jl
xor
sbb
lret
outsl
pop
mov
iret
sbb
repz
repnz
ss
xlat
add
subb
ljmp
test
add
aam
subl
dec
lock
add
cltd
out
fwait
aaa
cmp
adc
add
in
jno
jl
pop
or
es
push
fisubl
inc
testb
and
adc
adc
cmp
fmul
stos
and
inc
and
adc
fldl
icebp
or
push
pop
sub
or
add
dec
inc
cmpsb
mov
add
int3
fdiv
and
jmp
adc
mov
and
inc
mov
fsubs
je
sbb
add
jbe
sub
shrb
aas
movsb
add
mov
add
fdivl
mov
xor
inc
test
mov
fsubl
enter
add
subb
shrb
movsl
pusha
adc
add
push
add
dec
dec
movsb
pop
es
fidivs
pushf
popa
pop
sub
test
filds
push
fiaddl
pop
fwait
or
fcmove
je
push
out
out
ja
loope
xadd
add
add
sub
lock
lods
das
mov
pop
aas
movsl
inc
inc
mov
jmp
into
adc
je
dec
jg
scas
dec
movsl
negl
jmp
xor
loop
or
mov
fmull
int3
dec
int3
data16
add
ljmp
pop
add
fstl
sbb
das
repnz
test
jbe
loop
jb
shll
pusha
adc
sub
shll
sbb
rol
lock
pop
jmp
test
ja
fs
jno
mov
dec
clc
inc
int3
mov
aam
sbb
xor
pop
std
test
xor
dec
push
out
leave
sub
cmpsl
lds
in
sahf
jo
shr
jle
push
push
jne
rolb
jmp
xadd
add
push
loope
stos
cmc
test
lea
push
push
ficoms
mov
jge
push
push
mov
andl
add
sahf
fdivl
jb
inc
repz
push
fnstenv
ret
clc
add
push
or
aad
pop
lods
mov
cmp
mov
scas
rcrl
pop
add
or
das
repz
rorl
dec
shll
xlat
adc
shll
mov
sti
sar
sub
fiadds
lock
mov
pop
ret
sub
add
xor
xor
fwait
inc
sub
icebp
rcll
call
sub
pop
negl
dec
and
das
das
jo
push
je
jmp
arpl
jmp
dec
rol
scas
hlt
insb
test
add
shll
add
push
mov
push
lgs
sbb
fstenv
daa
ljmp
sbb
aaa
push
adc
jge
addb
xor
hlt
mov
push
pop
mov
jbe
loope
aas
jns
filds
js
or
xor
adc
dec
clc
add
fimuls
sti
fadd
subl
out
shll
movsb
or
mov
pop
pop
cltd
pop
int3
ljmp
outsl
nop
out
dec
add
out
xchg
cmc
hlt
into
xchg
adc
xchg
mov
sti
es
call
call
call
mov
push
cmp
int3
stos
mov
jo
jecxz
mov
sub
jno
lds
imul
sub
sbb
and
movsb
pop
pop
js
cli
out
rorl
insl
loope
lods
sbb
call
add
fmul
dec
adc
aaa
fdivrl
push
divl
aaa
ret
mov
add
pop
or
insl
add
into
out
ja
scas
and
xor
jge
jmp
push
loopne
mov
nop
rolb
inc
stc
pop
jecxz
and
js
dec
push
rolb
xor
clc
lcall
lcall
jecxz
jno
repz
lock
pop
jmp
paddusb
sbb
clc
and
subb
mov
add
push
fs
pop
adc
hlt
and
out
fsubs
lods
loopne
and
std
mov
nop
sti
insl
or
dec
xlat
push
outsb
add
out
and
popf
mov
jne
lcall
aam
scas
aam
int3
movsl
push
mov
mov
je
or
sbb
pop
xchg
xchg
mov
xor
push
mov
adc
fimull
dec
fistps
jo
outsl
mov
cmp
aam
lahf
not
insb
faddl
loop
add
or
inc
movsb
mov
add
push
mov
daa
lock
push
push
lods
lcall
mov
sub
cmpsl
jecxz
rolb
push
test
ljmp
xchg
shlb
ficomps
loop
add
xorl
sti
push
jmp
mov
lock
and
pop
sbb
mov
add
add
repnz
popl
mov
pop
mov
adc
inc
stos
push
and
push
fstl
sbb
daa
add
and
orb
sarl
insb
or
rcr
scas
fldt
pusha
neg
fwait
push
sub
sarb
es
mov
jo
xchg
xor
jl
pop
movsb
push
push
lods
add
aas
faddp
adcl
mov
repz
gs
shrb
loopne
aam
mov
dec
pop
icebp
jo
push
fmuls
jle
mov
add
add
sbb
lods
mov
jp
mov
daa
loope
cs
pusha
test
adc
and
loopne
ret
or
mull
test
dec
cmp
lods
repz
xlat
xlat
xor
jo
shl
add
xchg
movhps
lock
adc
add
loop
ja
cmp
rcr
or
aad
xor
xor
lds
je
cld
test
rcrl
pop
cld
int3
xrelease
mov
popa
mov
sbb
out
jno,pt
adc
mov
ficomps
cld
andl
fistpll
dec
and
jbe
cltd
shlb
cmp
ljmp
mov
or
dec
andl
dec
pop
test
adc
loopne
int3
mov
xor
shl
ljmp
push
lahf
mov
and
push
pop
arpl
inc
jne
and
sub
push
sbb
cmpsl
push
sbb
push
xchg
repz
les
mov
adc
out
cmpsb
out
mov
add
ja
jae
mov
pop
aad
stc
cli
ja
cmp
inc
xchg
mov
cmc
and
sbb
adc
fldl
add
inc
gs
or
xor
popa
cmp
enter
lret
add
push
out
sti
out
pop
insb
fisubl
add
sub
jne
jns
inc
test
inc
adc
pop
arpl
push
push
scas
add
enter
pop
popa
xor
push
mov
cs
fstps
adc
ret
enter
popf
and
loopne
or
jp
push
mov
jnp
test
aaa
sahf
popa
mov
sti
out
clc
test
pop
pop
xor
cmpsl
loopne
das
loopne
add
fbstp
outsb
mov
mov
add
or
in
mov
icebp
sbb
and
xchg
push
rolb
mov
add
dec
xchg
cmc
adc
mov
inc
loopne
xchg
pop
movsb
test
jno
dec
pop
lock
ss
jl
adc
scas
jb
xchg
sub
dec
add
inc
out
push
stos
ret
xchg
lcall
push
call
sbb
mov
cs
and
dec
jecxz
xor
jl
push
ds
adc
push
int
ja
push
cwtl
add
xchg
inc
movsl
inc
loope
mov
test
loop
or
addr16
or
mov
cmpsb
mov
daa
test
jno
pop
imul
dec
je
jbe
pop
sub
push
mov
fistpl
sbb
push
and
imul
cli
adcb
dec
outsl
stc
inc
and
out
lds
loope
addl
ss
aam
outsb
fadd
cmp
aam
and
inc
jl
xor
xchg
adcl
adc
push
jecxz
clc
ja
xchg
leave
push
add
arpl
mov
jo
insb
mov
adc
aaa
push
rorb
in
cld
pop
or
add
roll
popa
ret
outsb
pop
push
int
inc
pop
mov
add
bound
sbb
cmp
jno
inc
js
or
inc
test
in
les
loop
popa
xlat
jecxz
adc
inc
and
adc
rolb
adc
mov
int3
adc
pop
pop
sub
insb
mov
add
test
jle
xchg
inc
les
fiaddl
mov
add
cmp
je
ja
andb
test
pop
loope
in
mov
jecxz
add
loopne
xchg
inc
sbb
mov
add
clc
pop
xorb
jecxz
mov
pop
call
std
pusha
mov
sbbb
incb
push
outsb
fdivl
and
and
lahf
jle
insl
leave
push
arpl
shr
fdivrl
inc
pop
pop
sub
add
sbbb
cld
lds
inc
rol
add
push
ja
mov
jmp
fcoml
out
lret
or
mov
jmp
icebp
cld
and
mov
bound
dec
cld
push
shl
push
fcoml
test
xor
aaa
push
scas
or
out
or
sub
cmc
pop
aaa
lock
sbb
or
pop
inc
lds
adc
adc
lock
add
lea
inc
sub
ja
add
xchg
pop
cmpsl
xchg
cltd
in
inc
pusha
call
add
add
sar
dec
add
into
jmp
push
clc
and
cmp
ret
nop
cmpsl
inc
xchg
fadds
jg
push
icebp
mov
and
sbb
jmp
shlb
or
loope
in
popa
movsb
sbb
inc
in
jo
pop
push
data16
push
push
mov
inc
cmp
js
sbb
mov
cltd
fs
adc
loopne
xchg
and
loope
fiaddl
xchg
mov
scas
xor
icebp
lahf
outsl
inc
xchg
inc
mov
push
or
add
cli
mov
or
add
push
faddl
push
cmp
les
and
jnp
lods
or
daa
sarb
jl
xchg
cmp
dec
jns
mov
inc
inc
sub
clc
jo
js
rolb
lds
loope
mov
adc
std
sbb
out
shll
push
sub
push
outsl
inc
mov
std
or
inc
and
inc
add
fcmovbe
roll
mov
leave
cs
or
subb
add
push
cli
jp
xchg
dec
add
scas
adc
mov
inc
xchg
xor
inc
or
in
pushf
out
loope
cmp
mov
lods
and
dec
mov
dec
cld
imul
and
stos
sbb
dec
or
jbe
xchg
dec
mov
inc
cwtl
pop
hlt
mov
bound
dec
jo
add
jo
xchg
jae
jge
loopne
int
sub
xchg
fbstp
add
jo
int
add
orl
adc
call
clc
stos
sti
out
inc
imul
jmp
jecxz
sahf
dec
jo
sub
sbbl
mov
push
cli
or
push
push
fisubs
loop
call
clc
push
rorl
sbb
jns
or
inc
rorb
stos
cvtps2pi
fiadds
movsb
lahf
dec
popf
shlb
mov
sbb
ret
dec
xchg
scas
int3
ljmpw
lcall
aam
xor
pop
adc
stos
cmpsl
xchg
and
adc
bound
or
fmull
pop
sub
out
sub
test
xchg
js
lret
loope
inc
scas
int
inc
pushf
test
mov
jo
xchg
inc
push
adc
mov
sbb
sbb
mov
ss
insb
int3
cmp
pop
inc
pop
mov
aaa
loope
rorl
shlb
cmpsl
movsl
pusha
out
fwait
pop
jl
inc
pusha
inc
repnz
xchg
inc
jb
adc
or
xor
pop
add
test
mov
or
and
inc
das
shll
mov
inc
or
push
add
es
fiadds
push
add
jo
dec
data16
jno
sti
inc
cmp
adc
mov
adc
pop
adc
popf
mov
orb
adc
testb
inc
lahf
sub
mov
cmp
into
add
xor
mov
es
cmp
pushf
pop
lods
shlb
scas
mov
ds
dec
pop
or
cld
adcb
scas
jg
add
pop
mov
adc
dec
cmp
xor
and
add
daa
add
jns
insb
inc
pop
sahf
lock
xchg
mov
cmp
std
xor
es
mov
xlat
repz
out
sub
es
loope
fists
add
roll
loope
clc
rcl
jp
mov
mov
addb
imul
adc
push
mov
sti
xor
jb
add
and
fisubrl
test
adc
test
cmpsb
inc
loope
mov
ret
cmc
adc
lret
ljmp
adc
sbb
adc
jnp
adc
repz
pop
pop
pop
and
jmp
out
roll
mov
pop
ljmp
ret
adc
xor
pop
push
push
cwtl
test
cmpsl
sub
sbb
add
adc
lea
fmul
xor
push
sbb
out
add
fs
pop
cmpsl
xor
je
shlb
scas
cmc
mov
sub
aaa
cmp
dec
inc
and
or
loop
sub
adc
pop
loopne
and
push
loopne
lock
out
push
in
add
cwtl
ret
jo
or
pop
pusha
sbb
cltd
cld
pop
rcll
mov
adcl
mov
add
in
mov
clc
sarb
decl
rorl
sub
pop
rorl
sbb
jno
mov
push
pop
loopne
sbb
addb
sbb
fimull
mov
or
sub
pop
fiadds
std
andl
in
adc
fsubp
sub
xchg
inc
jnp
xor
imul
insb
dec
arpl
xor
lock
xchg
pushf
mov
add
cld
pmaxsw
test
daa
idiv
call
out
fwait
or
lock
les
cld
push
fs
cmp
fdivs
icebp
sti
or
je
rcrb
pusha
aaa
pop
fdivs
push
mov
lock
adc
inc
adc
fmuls
inc
rcrb
aas
mov
idivl
test
sub
xchg
add
jge
dec
inc
xor
mov
sbb
bound
push
dec
call
pop
and
adc
jae
add
popa
adc
jb
adc
es
cmp
int3
push
dec
adc
mov
cmp
push
lea
xlat
mov
xchg
lahf
outsl
jbe
adc
mov
daa
dec
daa
adc
enter
lods
xor
add
aam
repnz
xor
and
inc
cltd
mov
xlat
decb
mov
inc
mov
stos
hlt
xor
dec
xor
sbb
add
pop
ficoml
jecxz
rclb
bts
jge
fsubrs
mov
in
stos
jo
test
pop
mov
ret
pusha
repz
lret
lds
pop
and
jge
repnz
add
fwait
cmpsb
or
ret
mov
mov
out
mov
push
xor
idivb
mov
xchg
sbb
xchg
frstor
repnz
fadd
rol
je
sti
push
stc
mov
pop
call
pop
aam
enter
or
in
and
mov
stos
cs
mov
push
jbe
sbb
jo
scas
xchg
ljmp
sarb
xchg
push
xchg
cli
fwait
sahf
jp
jecxz
pop
int3
cltd
pop
sub
or
rclb
hlt
push
jo
shlb
or
pop
mov
push
push
push
cmp
sbb
jmp
pcmpeqb
sub
or
in
mov
outsl
loop
sbb
add
dec
stos
aas
add
stos
sub
jmp
sub
and
sub
dec
js
sbb
cmp
cmpsl
pop
xchg
inc
outsl
pop
ret
sub
mov
sub
adc
mov
cmpsl
ret
dec
or
lcall
push
and
mov
aaa
lahf
jmp
loop
pop
jbe
jnp
add
dec
sar
add
adc
shlb
inc
fnstcw
cmc
jp
mov
pusha
out
sbb
dec
inc
xor
imul
js
mov
xor
sbb
xchg
dec
jns
push
inc
outsb
and
mov
jl
rolb
mov
and
cmp
add
jo
xchg
enter
mov
das
inc
and
xchg
jne
add
ja
in
push
ljmp
cmp
in
in
repnz
mov
loopne
xchg
sbbb
jbe
fdivp
push
mov
add
sbb
xor
mov
cwtl
js
pop
lcall
cmc
dec
mov
stos
mov
mov
add
dec
leave
sub
mov
add
jp
hlt
dec
les
adc
xor
out
adc
imul
add
sbb
add
sub
ds
push
xlat
dec
addb
dec
aaa
add
add
adc
je
or
and
rclb
cmp
int3
sub
adc
xor
sahf
movsl
loope
sbb
or
dec
jp
xor
cs
or
inc
add
adc
dec
insl
leave
and
jo
repz
add
and
int3
aad
cmp
dec
add
enter
xor
sub
cmp
repnz
lods
shll
mov
inc
xchg
push
mov
loopne
push
push
loopne
sub
push
and
push
stos
lods
lea
aas
loopne
mov
push
push
out
loop
roll
fisubrl
xchg
les
roll
pop
stos
stos
lods
leave
jecxz
ja
mov
add
and
pop
add
adc
lods
and
and
jl
ret
add
inc
shl
mov
ljmp
cmpl
xor
flds
into
sub
jno
in
add
add
fwait
scas
mov
fs
arpl
adc
enter
add
sti
push
clc
pop
mov
nop
movsb
and
movsl
aaa
xchg
push
mov
jo
xchg
scas
and
loop
push
pop
jl
mov
loopne
xor
xchg
add
gs
enter
mov
loop
or
push
mov
repz
add
ret
movsl
adcb
jne
dec
in
add
xchg
cmp
js
arpl
into
push
push
inc
shlb
or
or
adc
aam
adc
or
xor
test
adc
dec
mov
xor
sub
imul
dec
pushf
cmp
and
shll
pop
bound
jg
fld
sbb
fwait
int3
sarb
xor
add
adc
xorl
push
push
aad
pop
std
adc
or
int3
inc
cli
adc
clc
rcr
cmp
mov
es
mov
stos
lea
out
dec
out
or
or
and
out
outsl
push
sbb
mov
push
sbb
ret
hlt
push
add
add
test
xchg
push
mov
daa
jl
ficomps
fcomp
fdivl
aam
loope
mov
mov
mov
arpl
push
test
push
xchg
daa
or
mov
adc
bound
pop
push
call
push
out
std
out
push
dec
and
pop
mov
roll
sbb
inc
pop
clc
std
dec
cs
dec
dec
or
movsl
adc
outsl
cwtl
fistl
imul
xor
ret
bound
add
xor
sarl
jge
aaa
inc
mov
test
mov
pushf
xor
lcall
mov
sbb
jnp
push
mov
fmull
xor
xor
and
rcll
adc
cwtl
mov
insb
jno
dec
insb
xor
ja
shrl
inc
fisttpl
push
and
es
mov
incl
out
ss
sbb
pusha
or
stos
xor
enter
xchg
sub
and
cmp
cwtl
addr16
xchg
fadd
push
mov
adc
imul
out
arpl
xchg
jecxz
enter
push
dec
pop
repz
jns
dec
xor
push
push
or
mov
sbb
sbb
adc
adc
cld
pop
cmp
pop
adc
adc
imul
sbb
push
cmp
lret
adc
push
xor
dec
inc
in
xchg
adc
dec
int
aaa
fstps
jo
aam
mov
mov
xorb
fwait
or
mov
mov
mov
loope
jp
xchg
sti
jmp
ja
add
gs
ficoms
nop
or
xor
mov
mov
sbb
push
jae
sbb
mov
xchg
push
add
icebp
mov
and
mov
and
xchg
lret
inc
jg
fwait
lods
cmp
push
inc
inc
inc
dec
jmp
aas
sbb
movq
cmp
sti
add
jmp
addb
inc
lcall
push
ret
and
ja
sub
push
lahf
cmp
lahf
xor
mov
call
jo
push
sbb
adc
add
pop
sbb
adc
lods
arpl
sub
adc
pusha
fidivs
cmp
mov
lret
push
sbb
ret
sub
shll
adc
or
push
add
dec
xor
fdiv
add
cmp
ret
cmpsb
and
sbb
and
lock
xchg
outsl
add
xor
in
pusha
and
jbe
or
xor
sub
orb
xchg
pop
pop
pop
xchg
inc
fisttps
and
out
jmp
jne
aaa
xchg
incl
push
out
sbb
add
jno
and
sti
jno
push
jo
mov
xchg
sbb
cmp
add
data16
jb
pop
xor
shr
repz
or
sub
fwait
sbb
mov
cld
mov
add
fadds
movsb
push
fbstp
jo
movsb
int
mov
sub
and
subb
int
push
je
popa
fidivrs
mov
loop
pusha
or
mov
sub
call
shlb
adc
adc
pop
mov
lea
ret
mov
jbe
leave
pmulhuw
adc
sbb
in
or
dec
jmp
es
mov
cmpsb
push
fistpl
pop
jbe
loope
add
add
adc
add
ffree
arpl
dec
clc
lods
xor
sub
mov
or
pusha
cmp
ljmp
mov
addb
fbstp
add
cmp
adc
fisubs
lea
and
repnz
das
in
add
rolb
or
xchg
sub
out
mov
add
bound
movb
int
xor
mov
and
or
and
mov
loop
popa
or
add
nop
cmp
std
nop
push
and
pop
pmuludq
inc
in
sub
sbb
rclb
or
cmpsl
sub
scas
loop
push
jmp
or
nop
or
adc
pusha
cwtl
inc
inc
or
and
ss
push
aad
test
pop
push
mov
jo
mov
js
ret
hlt
mov
lock
std
dec
data16
ret
pop
and
shlb
outsl
fisubs
mov
lds
jae
or
push
loope
lcall
cwtl
and
dec
lahf
pop
jl
femms
mov
xchg
add
mov
js
cli
mov
mov
add
jne
fimull
inc
sar
movsb
std
jecxz
mov
int3
jnp
shll
mov
and
mov
jns
jo
ja
jge
sahf
hlt
dec
int3
adc
inc
sbb
mov
arpl
cwtl
add
movsl
imul
push
pop
call
mov
or
and
or
shr
or
or
movsl
rorb
cld
xor
sub
add
sub
inc
cmp
inc
mov
dec
rclb
fmuls
jg
push
cld
xor
daa
les
ret
addb
inc
or
icebp
cltd
shlb
pusha
filds
xlat
hlt
inc
pop
cli
mov
notl
pop
aas
cmp
or
push
ss
jg
mov
xchg
add
mov
adc
xlat
es
in
loope
inc
jp
shrl
inc
cmp
cmp
pushf
mov
test
mov
and
fdivrs
sbbb
aam
rcrb
or
mov
into
mov
cltd
inc
enter
movl
mov
mov
insl
aas
dec
jae
sbb
movhps
sbb
addl
das
xor
stos
pop
pop
inc
loopne
or
push
ret
sbb
js
add
cmpb
sub
add
sti
sbb
xchg
sub
dec
xor
jp
push
sbb
and
js
adcb
ficomps
fistpll
adc
or
sbb
mov
jo
inc
std
xlat
ja
inc
fs
scas
in
call
mov
mov
aaa
nop
sub
cmpsl
sbbb
lcall
or
sahf
or
sti
fsubs
pop
or
adc
lret
dec
inc
mov
insl
pop
and
stc
movsb
sbb
sbb
cli
pop
jecxz
testl
xlat
or
out
pop
push
sbb
adc
aaa
popf
popa
testb
jp
xor
push
iret
mov
inc
inc
sub
sub
roll
movsb
adc
mov
cmc
out
ds
mov
test
movsb
xchg
sbb
loopne
out
or
std
push
loop
sbb
mov
sbb
outsl
ret
inc
adc
mov
ds
mov
inc
sub
stos
lret
imul
aad
and
or
jne
jp
int3
ffree
lcall
pop
call
scas
ss
out
push
adc
lock
aas
ss
scas
dec
jne
mov
mov
add
es
sbb
or
sub
add
iret
lcall
loop
or
inc
and
ret
out
push
popf
dec
mov
es
jle
fldcw
cmp
add
sub
lods
or
pop
dec
xor
pop
pop
loope
bound
push
push
ljmp
leave
pop
xor
xchg
jge
iret
dec
xor
loopne
loope
inc
jae
jbe
repz
jo
add
hlt
adc
cmp
add
test
rorl
loopne
push
inc
or
cmp
scas
xchg
daa
bound
cmp
cmp
push
sbb
and
lret
mov
cld
cld
fiadds
push
or
hlt
inc
dec
lret
cmp
push
loopne
push
outsb
jns
fwait
lods
int
cmc
pusha
xorb
xor
dec
aaa
dec
hlt
cmp
sub
and
pushf
mov
dec
or
add
insb
mov
pusha
adc
adc
add
scas
je
and
pop
add
and
test
jecxz,pn
pop
fildll
and
loop
fimull
call
loopne
es
jb
cmp
pop
inc
mov
movb
orl
push
fdiv
jmp
cmp
sahf
inc
mov
out
mov
popa
adc
std
or
push
out
iret
pop
pop
jecxz
pop
adcl
xor
add
sbb
mov
mov
add
xor
sub
cmp
lock
push
push
lahf
xor
in
xor
add
sbb
push
or
in
inc
in
push
push
es
inc
add
lock
fistpl
in
inc
pop
testb
in
test
test
jbe
sbb
sub
sub
mov
hlt
inc
cs
pop
lret
aam
loopne
dec
loope
cld
lock
cmp
je
cmpb
fdivl
jb
add
or
in
sbb
inc
xlat
loop
push
xchg
jg
insl
rcrb
js
dec
mov
dec
testl
jb
xchg
dec
fsubs
sahf
popa
pop
cmc
outsb
or
dec
ss
insl
xchg
xlat
sbb
sub
xchg
ret
mov
xchg
adc
in
aas
imull
sahf
push
aas
bound
push
cmp
cmp
loop
sbb
xor
mov
inc
cmpsl
add
dec
leave
push
fst
pop
pusha
xlat
mov
loope
pop
sbb
adc
shlb
arpl
push
sbb
iret
xor
incl
adcb
sub
add
cld
out
call
int
nop
mov
aaa
adc
push
xchg
fwait
fs
incb
pop
mov
into
sbb
cld
xor
js
and
adc
cs
mov
push
push
jmp
pop
gs
cwtl
mov
stos
and
cs
divb
mov
cmp
and
orl
shrl
leave
adc
mov
aas
dec
cmp
mov
fcoms
in
push
and
popa
adc
hlt
dec
cwtl
pop
dec
inc
sbb
loop
data16
adc
jae
xor
mull
jnp
ljmp
add
in
sarb
sub
rcl
and
fildl
jmp
and
or
mov
pop
dec
lea
cmp
mov
in
push
icebp
popf
in
in
pusha
adc
in
in
inc
mov
in
mov
jg
sub
loopne
mov
push
pop
mov
add
aam
lret
adc
xor
jns
std
mov
lret
jge
enter
xor
add
lock
sahf
stos
push
fmul
xor
das
popa
test
lret
ds
aas
in
sub
push
orb
jo
push
ja
jnp
js
mov
jg
jp
ja
adc
sbb
add
mov
fiaddl
aaa
mov
and
hlt
sbb
insb
jnp
jge
pop
in
das
mov
xor
adc
xchg
cli
cmp
inc
mov
aaa
xor
sbb
jge
adc
sub
mov
push
and
or
xor
xchg
mov
mov
loope
mov
aas
sbb
movl
lods
mov
adc
add
pushf
dec
inc
ret
shlb
add
mov
push
mov
or
leave
movsb
lcall
hlt
sbb
dec
add
scas
jbe
mov
pop
test
push
fwait
xchg
inc
dec
mov
lods
scas
inc
sarb
xchg
and
fdivr
pop
inc
shl
mov
test
jne
add
mov
mov
or
sar
andb
jnp
inc
add
dec
dec
and
pop
test
test
or
mov
xchg
adc
jle
dec
dec
lret
inc
test
sub
dec
out
add
test
pop
mov
sub
shl
out
and
pop
sbb
push
das
stos
adc
mov
pop
movsb
fists
or
pusha
arpl
aaa
mov
mov
sub
mov
mov
or
pop
rcrb
xor
pop
cmp
push
xor
test
adc
hlt
or
push
ss
mov
ljmp
xchg
jecxz
loop
jmp
mov
loope
xchg
mov
cs
cld
nop
push
in
in
jne
inc
dec
das
fisubs
adc
dec
pop
sub
or
adc
xorl
fdivp
or
adc
jle
xchg
mov
add
imul
sub
ret
sbb
ja
pop
dec
xor
loope
xlat
sbb
fmuls
adc
mov
push
stos
sbb
call
dec
cmp
mov
lock
ret
test
push
sub
pop
cmp
xor
dec
mov
roll
jg
or
add
sub
lock
pop
mov
inc
int3
sarl
popa
mov
insl
movsl
stos
push
mov
or
cld
outsb
iret
cmp
jg
fisttpl
pushf
adc
sbb
pop
mov
daa
sbb
or
and
in
sbb
shlb
mov
ret
pusha
pop
cwtl
ficompl
call
lcall
in
pop
daa
je
inc
out
clc
movsl
leave
mov
mov
ja
or
push
mov
dec
mov
shll
loop
xor
jmp
adc
popa
sub
lods
jo
pop
xor
mov
in
mov
ret
jb
and
jmp
jge
and
inc
xor
jmp
int3
icebp
cmpsb
sbb
jge
insb
dec
mov
pushf
mov
fmull
movsb
push
or
jl
mov
les
inc
ficoms
dec
xchg
push
dec
add
xchg
pop
insl
je
cld
int
inc
repz
add
push
mov
in
fbstp
or
sub
das
rcrl
mov
xor
std
xchg
aas
ret
lret
loopne
xor
fisttpl
popf
sub
lret
fsubs
int3
inc
js,pt
lods
mov
add
xor
cld
call
xor
inc
fstpl
jno
icebp
or
add
pop
insb
call
add
push
lea
popf
sbb
xchg
ret
popa
nop
push
insl
xor
jne
enter
or
cmp
mov
dec
sbb
and
jno
mov
aas
fadds
rcrb
arpl
fisubrl
pop
daa
faddl
pop
clc
arpl
add
fisttps
push
lea
push
adc
nop
push
test
sti
inc
call
adc
aaa
pop
imul
movsl
mov
scas
xchg
daa
pop
sub
movsb
jecxz
and
sbb
ja
add
jg
pop
xor
push
out
sub
mov
and
mov
mov
movsb
fcompl
push
add
inc
xchg
push
insb
adc
inc
mov
les
push
mov
adc
or
adc
inc
sub
push
sbb
jo
mov
fwait
add
mov
pop
notl
sbb
adc
cmp
add
or
clc
roll
addb
cmc
xchg
js
add
pop
xchg
fistps
lret
adc
adc
rclb
xor
xor
cmp
fdivl
xchg
sbb
aam
jbe
mov
adc
lock
mov
add
fimuls
pop
push
jno
lret
cmpsl
inc
aam
nop
push
test
sbb
xchg
pop
mov
fists
gs
or
inc
jne
xlat
rol
pop
pop
ret
js
pop
rolb
adc
in
push
pusha
shl
cld
lret
movl
movsb
cmp
lock
pushl
jo
test
jae
loope
js
inc
decl
call
pop
sbb
sbb
icebp
fisubl
fwait
mov
hlt
adc
or
jmp
mov
cld
ror
adcl
dec
cmp
xor
aad
pop
fninit
shr
and
mov
pop
sbb
add
in
pop
push
sub
je
filds
insb
out
cmc
cli
mov
pop
pop
cmp
fwait
pop
aas
addr16
fs
dec
lds
mov
pop
sbb
pusha
rol
clc
insl
sub
cmpsb
out
fisubs
sbb
mov
pop
add
pop
fdiv
fcoms
in
test
push
pop
loope
add
in
add
jbe
push
leave
insb
jo
cwtl
inc
into
push
ljmpw
cmp
add
sahf
and
sub
icebp
aaa
dec
nop
sub
add
push
fadd
scas
dec
rorl
sbb
pusha
lds
xlat
sub
fmuls
mov
inc
scas
pop
sbb
add
loopne
fldl
push
add
push
repnz
or
dec
fldl
push
adc
imul
jno
sbb
ljmp
add
and
mov
push
cwtl
xorl
pop
outsl
daa
arpl
sbbl
outsl
scas
inc
and
pop
push
and
cld
mov
jae
mov
mov
or
loope
out
loope
imul
in
push
scas
jb
mov
dec
pop
and
hlt
lds
stc
loope
mov
aad
jecxz
fxch
push
xor
scas
subb
not
stos
add
enter
or
mov
or
pop
orl
ja
hlt
jg
loope
scas
imul
icebp
add
popa
inc
ret
mov
add
xor
icebp
inc
and
mov
push
sbb
fldl2e
jmp
cmp
add
js
pop
aam
push
loop
imul
int3
repnz
jb
sub
sub
fmull
rcr
sub
lret
dec
pop
cmp
dec
mov
cmpb
add
pusha
inc
fcompl
clc
imul
popf
cld
add
mov
scas
add
or
mov
jecxz
push
xrelease
mull
adc
pop
dec
or
popa
ljmp
aad
inc
lret
and
sub
mov
scas
ret
jbe
cmpsb
xor
rorb
leave
dec
dec
frstor
loopne
mov
js
xorl
test
es
xor
pop
or
xchg
into
add
psrad
sti
mov
jo
and
adc
mov
add
outsb
xor
enter
mov
loop
popf
sahf
add
lea
xchg
mov
add
out
or
add
sub
aaa
jnp
dec
push
jp
sbb
pop
dec
mov
fldcw
mov
xchg
clc
add
inc
mov
clc
xchg
inc
push
std
dec
lock
rorl
xchg
stos
push
mov
adc
ret
ljmp
ret
movsb
popa
iret
inc
jge
dec
lea
xlat
push
adc
mov
call
cmp
outsb
mov
sbb
cmp
dec
cld
ret
leave
dec
std
jg
pop
fcompl
inc
or
adc
in
out
pop
in
scas
or
push
push
jno
mov
mov
adcb
dec
adc
or
inc
cmpsl
ffree
dec
or
add
je
repz
push
inc
adc
inc
mov
mov
ja
cmp
sbb
jle
xor
jb
mov
jmp
push
or
xor
sbb
das
or
dec
and
add
jb
insb
cmp
dec
inc
stos
mov
mov
ret
rcl
inc
mov
add
sub
adcb
xchg
sbb
add
call
nop
xlat
cmp
mov
sub
inc
js
push
sti
jl
push
mov
es
lahf
daa
dec
ret
addr16
rcrb
xchg
push
hlt
mov
add
mov
out
mov
add
jo
push
iret
ret
mov
call
xlat
cld
ror
pop
add
jnp
xchg
push
or
adc
inc
adc
adc
and
js
jp
jp
stos
and
mov
imulb
icebp
mov
push
and
mov
mov
pushf
aad
insb
sbb
and
mov
xchg
adc
cmp
or
and
lods
pavgw
lea
push
mov
xchg
call
lods
sahf
add
ret
cmp
repz
mov
in
lret
inc
xchg
push
loopne
lock
outsb
fnstenv
call
arpl
jmp
es
jbe
sub
popf
call
xor
adc
pop
movsb
out
aad
and
add
cld
outsb
scas
filds
sbb
call
cld
pop
dec
fs
repnz
push
ljmp
or
add
fimull
outsl
ret
rcll
sbb
jmp
adc
pop
adcb
sbb
nop
add
call
push
ja
out
or
pushf
fwait
add
das
mov
xchg
out
loopne
fmuls
mov
cwtl
stc
xchg
cwtl
aas
roll
push
aad
sub
cli
mov
ret
ljmp
fcomip
call
mov
mov
add
dec
xchg
fildl
data16
cmp
pop
push
adc
mov
in
or
cmc
xchg
call
ljmp
cltd
ss
mov
ds
cmp
test
jge
mov
and
and
mov
mov
cli
les
push
push
cmp
sub
pop
out
test
lea
stos
movsb
loopne
fsub
fbld
in
icebp
adc
cmpsb
adc
and
repnz
sub
sbb
out
popw
cli
lsl
arpl
sbb
lds
sub
dec
inc
cld
mov
add
rorb
rorb
xlat
stc
and
sub
mov
jae
and
lock
push
subl
dec
jge
test
push
ret
ss
or
push
fldcw
pop
inc
or
xorl
sub
cmp
mov
mov
popf
in
cld
inc
pusha
in
roll
lea
int
cmp
push
mov
adc
or
adc
adc
mov
sbb
imul
or
mov
popa
pop
push
dec
test
mov
cltd
sbb
inc
mov
fisttpl
adc
and
test
ds
mov
loop
pop
jns
mov
mov
rcrb
mov
daa
xor
scas
outsl
jae
sub
or
daa
cmc
inc
xor
iret
test
add
mov
not
xor
cmc
fadds
sbb
repz
mov
jne
std
jo
inc
pop
mov
shlb
pop
lea
in
into
or
inc
shr
add
jmp
cli
loope
dec
hlt
adc
cmp
sahf
repz
inc
out
iret
dec
rcrb
leave
xchg
add
lcall
or
add
push
sub
mov
jnp
ret
xchg
std
push
outsl
mov
xor
call
ficoms
imul
push
jo
sub
add
ss
adc
jbe
insb
and
les
in
adc
dec
loope
sub
fadds
sub
lret
leave
rolb
sbb
pop
loopne
jecxz
mov
les
out
js
fidivrs
icebp
rorb
push
fdivs
ds
in
cmp
dec
cmp
jae
push
rcrl
sbb
xchg
mov
cmp
adc
dec
mov
imul
or
sbb
hlt
out
xor
add
int
jl
loopne
dec
fidivl
jp
loopne
mov
sub
push
pop
adc
clc
or
pop
xchg
dec
xor
nop
and
sbb
jmp
mov
jp
enter
adc
push
fdiv
rcl
xor
jns
pushf
sbb
or
adc
pop
jb
adc
and
add
add
adc
mov
popa
test
or
mov
inc
movsb
js
pop
gs
mov
xor
push
and
xchg
clc
or
or
adc
test
les
mov
mov
sub
repz
out
cmp
sbb
rcll
jmp
jns
adc
out
orl
rorb
push
sub
mov
and
repz
adc
mov
adc
dec
or
sbb
mov
rcrb
cmc
xor
mov
xor
cmc
push
fadds
push
or
loopne
out
push
rol
ds
rol
mov
ret
clc
imul
ss
cmp
jnp
and
popl
lea
sub
mov
insl
xchg
push
sbb
pop
or
add
cmp
xor
mov
iret
adc
pusha
mov
in
push
jecxz
sub
push
call
cs
cli
ret
push
dec
rorb
inc
das
pop
xlat
lea
rcll
and
add
adc
es
pop
sub
sub
sbb
xor
test
les
les
add
dec
loopne
mov
xchg
adcb
clc
add
sbb
fucompp
fwait
mov
xorl
adc
test
mov
cld
or
add
inc
adc
jne
xchg
aam
xchg
and
adc
lret
inc
jmp
and
pop
enter
data16
dec
inc
pop
add
cwtl
adc
cli
add
ss
xor
mov
pop
ljmp
jnp
mov
clc
sti
sbb
add
cli
jae
push
dec
xlat
inc
mov
lahf
pop
insl
dec
or
inc
ja
xor
jmp
inc
xchg
ss
cmp
arpl
push
xorb
sbb
mov
std
fstl
jle
mov
sbb
adc
andl
sbb
loopne
dec
sbb
inc
cmp
ja
inc
sbb
js
out
inc
or
and
lods
push
cmp
sbb
sbb
jp
cmp
loopne
xor
loopne
pop
dec
add
sbb
in
cmp
lret
sbb
jge
imul
shrl
pop
andb
je
mov
es
mov
sbb
jg
pop
add
je
xchg
jae
dec
xor
add
mov
mov
add
inc
ss
mov
jno
pop
push
sub
call
cs
insb
sbb
adc
pushf
fisubl
popa
sarb
mov
add
outsb
xor
add
inc
push
lcall
fucomi
out
addr16
jp
test
daa
sti
test
cmpsl
mov
adc
add
mov
xlat
jo
push
test
add
sarb
in
cmpsl
mov
ret
mov
adc
in
ffree
mov
push
xchg
scas
leave
flds
lock
inc
xchg
add
pushf
shrb
inc
cmp
inc
imul
sbb
pop
cld
fs
mov
sbb
les
jge
bound
push
push
aas
stos
add
cld
xor
lea
repz
sub
cmp
imul
sbb
mov
push
or
setns
fs
adc
mov
and
and
out
fadds
fcomi
xchg
pop
incl
cmp
es
add
sbb
ret
arpl
dec
les
or
mov
test
cmpsb
cmpsb
inc
rcrb
fstps
adc
cli
in
and
arpl
cmp
push
and
mov
loopne
inc
repz
nop
mov
pop
cmp
adc
loopne
data16
rorb
rcll
divb
sub
je
sub
mov
mov
out
aaa
push
popa
mov
adc
mov
es
shlb
inc
or
mov
jl
mov
icebp
and
sti
mov
or
or
clc
xchg
cmpsb
jmp
add
test
in
add
add
dec
cmp
scas
or
xchg
cmp
dec
call
mov
dec
jge
frstor
push
insl
pop
inc
sbb
cs
pop
sub
and
push
rclb
das
mov
mov
in
rcll
dec
repnz
out
or
ret
rcl
das
jp
xor
dec
pusha
test
adc
mov
push
jl
insl
pop
add
jecxz
ss
in
push
into
icebp
dec
fucomp
stos
test
js
add
or
iret
xor
fucomip
xchg
adc
jle
push
push
or
add
jp
call
clc
call
shll
shll
xor
rcl
in
scas
add
adc
mov
mov
pop
shrb
fiaddl
les
lcall
das
cmp
push
fmulp
movsb
add
ret
jle
add
mov
int
jmp
scas
int3
fdivr
inc
cmp
sub
add
inc
rorb
inc
popl
sbb
jmp
add
cmp
add
push
adc
mov
sti
pop
and
add
xor
js
lcall
mov
lahf
sub
push
jne
xor
sub
mov
inc
jmp
ret
pop
inc
insb
adc
lock
mov
add
loopne
movsb
roll
sbbb
sahf
xor
aaa
add
xchg
in
in
and
and
lock
je
jmp
add
xor
aam
scas
test
or
pop
push
or
dec
ret
test
scas
lock
in
inc
cld
loopne
adc
adc
sbb
push
push
push
jmp
sbb
pop
add
xor
adc
fld
stos
add
popa
outsl
cmp
lret
rolb
in
jmp
das
aad
lods
sbb
sub
cld
mov
out
jl
mov
in
push
icebp
cld
push
or
jecxz
mov
mov
mov
xchg
mov
adc
push
testl
enter
inc
or
imul
push
add
mov
into
lock
xchg
aad
inc
and
scas
dec
and
adc
cmpsl
out
adc
push
pushf
or
ljmp
mov
dec
aaa
call
add
lret
or
xchg
and
test
lock
xlat
int
pusha
scas
pop
or
add
les
mov
push
push
call
pusha
dec
add
ljmp
or
mov
dec
adc
in
inc
in
pop
into
jle
jns
dec
add
bound
jle
je
add
sbb
jbe
push
sbb
aaa
in
adc
les
in
movsb
imul
movsl
cmpsl
jl
adc
div
andb
pusha
xor
mov
sub
ljmp
lea
add
push
jge
aad
cwtl
loop
add
repz
leave
pop
popa
lds
mov
mov
add
decb
adcb
push
xor
add
xchg
push
in
xor
or
jo
or
out
inc
movsb
icebp
push
nop
jge
or
shll
add
ljmp
pop
rclb
ds
in
xchg
es
push
enter
lods
push
pusha
adc
leave
adc
test
and
rcrl
xchg
ds
sbb
ret
vandnps
pop
add
push
mov
shr
push
mov
pop
nop
cmp
stos
lds
add
push
faddl
jmp
inc
adc
and
mov
dec
adc
fsubrs
jge
fwait
add
outsb
add
mov
lds
sbb
mov
addr16
imul
test
pusha
adcl
mov
pop
mov
inc
nop
jno
std
incb
dec
pop
js
lock
sbb
xchg
dec
in
sub
rcl
int3
ror
cmp
test
jo
and
push
lea
bound
scas
jg
mov
hlt
and
adc
xor
add
dec
push
xor
scas
rorb
mov
or
lcall
mov
dec
loope
test
dec
jnp
enter
pop
xor
dec
fisubrl
xor
aas
imul
mov
pop
add
or
shl
daa
call
sub
push
push
jge
adc
dec
add
pop
int
aam
insl
pop
sbb
lret
imull
xor
out
jmp
mov
rorb
sbb
mov
sbb
push
int
loop
js
in
xor
or
loop
sbb
rep
xchg
fcomps
adc
add
pop
in
and
add
push
push
das
cmpsl
dec
lods
pop
or
data16
sarl
inc
add
daa
out
mov
adc
or
lods
xchg
jo
pop
andl
jno
inc
lods
aas
addl
inc
inc
jnp
mov
cwtl
inc
dec
leave
mov
adc
mulb
inc
adc
adc
dec
add
rcll
push
fstpl
xor
inc
repz
pop
inc
clc
mov
jp
mov
pop
ljmp
add
and
push
loope
add
mov
add
jne
shrb
sub
mov
xchg
js
mov
rorl
adc
lea
push
xchg
aas
jo
xlat
mov
add
jne
mov
les
pop
out
loop
jle,pn
and
imul
sub
out
fdivrp
and
dec
cwtl
add
and
les
dec
dec
leave
xorb
test
inc
add
test
dec
pushf
and
fisttpll
and
hlt
fadd
sub
xchg
cs
jle
and
pop
and
popa
mov
xchg
add
jae
or
jmp
fisubrl
sbb
inc
lock
aaa
pop
inc
mov
xor
push
testl
lock
out
das
push
fstpl
adc
inc
nop
rclb
cmp
lods
push
les
dec
push
enter
mov
xor
inc
ret
mov
dec
mov
pop
test
inc
cltd
sbb
add
add
mov
and
fdivr
sbb
faddl
hlt
inc
add
xor
iret
or
pop
mov
add
or
fiadds
notb
push
cmp
mov
push
js
add
fwait
fwait
jecxz
add
mov
movsl
das
sub
movsl
mov
je
adc
cmc
inc
jp
shll
sbb
clc
and
fdivrl
adc
clc
jbe
push
fs
mov
fld1
inc
add
jo
mov
and
fwait
inc
ret
nop
outsl
pop
repz
add
pop
loopne
addb
cli
sub
inc
cmp
add
and
inc
push
dec
fmuls
iret
cmp
xchg
xchg
inc
sub
cmc
sub
sbb
fisubl
orl
sbb
lea
fsubrs
dec
cmp
jns
mov
popf
mov
inc
fidivrl
je
pop
pop
out
pop
mov
or
testl
and
rcrb
push
pusha
sbb
jne
fs
xchg
call
inc
sub
dec
mov
movq
aaa
sbb
in
pop
or
push
or
orb
aam
and
dec
sbb
xchg
fadd
loop
clc
loope
lret
fadds
stos
imul
lock
sbb
mov
fwait
cmpsl
and
lods
cmpsl
mov
xchg
bound
mov
imul
shl
loope
popf
and
call
out
and
pop
jae
pop
into
sbb
cmp
loope
mov
fidivrl
in
mov
pop
adc
xchg
inc
mov
mov
pop
mov
xchg
mov
fdiv
adc
addb
dec
mov
inc
add
mov
cmp
clc
lods
inc
or
push
jp
shll
add
and
mov
push
aaa
sbb
sbb
je
outsl
or
mov
inc
pusha
outsl
inc
lods
add
movsb
mov
stos
in
popa
js
outsb
les
xor
in
mov
into
mov
es
in
lds
mov
ret
sub
add
cld
adc
add
sbb
js
out
mov
imul
or
add
in
mov
pop
and
mov
jl
push
cmp
adc
das
ret
pop
in
jg
nop
cld
clc
cmp
ja
xlat
outsl
sub
mov
shlb
in
adc
pop
xor
sar
mov
jmp
popa
mov
test
and
xor
cmp
pop
add
fisttpl
movsb
fwait
mov
push
mov
out
fcoml
lret
add
sub
dec
dec
int3
push
scas
icebp
loopne
push
aam
pop
adc
adc
pop
das
adc
pop
or
sub
shl
xor
cmp
mov
mov
js
xchg
pop
divb
mov
inc
mov
cmp
mov
sub
mov
sub
hlt
xlat
scas
add
enter
jbe
mov
fidivl
xchg
pop
push
loop
pop
loopne
test
cli
or
add
push
stos
push
dec
mov
mov
inc
add
clc
call
nop
add
in
in
jmp
sbb
int
mov
and
mov
popf
cmp
dec
pusha
shr
out
sarb
fcomip
pop
arpl
mov
adc
or
imul
loopne
add
xchg
orl
jl
pop
mov
enter
pop
mov
aam
jo
cmpsb
test
sti
ret
enter
loop
add
or
cmp
cs
xchg
dec
test
dec
adc
push
dec
or
xchg
xor
jg
pop
jmp
mov
jecxz
lods
inc
push
orb
or
add
adc
cli
loope
sub
nop
jg
ret
adc
pop
xchg
loope
movntps
stos
cmpsl
dec
and
rcrb
mov
rcrb
lea
movsb
inc
jle
gs
cmpb
adc
xchg
lods
dec
test
pop
test
push
clc
rorb
xorl
out
outsb
inc
mov
in
or
xlat
adc
movsb
mov
ret
xchg
sbb
fildll
test
pop
addb
xchg
cltd
insl
int
adc
and
enter
xor
push
mov
cmpsw
xor
or
sbb
or
mov
xchg
jbe
dec
add
lock
xchg
dec
fsubr
and
stc
add
loope
sub
or
xchg
inc
stos
or
cmpb
nop
insl
scas
jmp
je
sbb
adcb
sub
out
inc
jl
int3
pop
add
lds
cmp
inc
add
out
mov
inc
incb
ret
cltd
add
sar
nop
sbb
outsl
stc
lret
sbb
in
test
fsubrp
jp
inc
sub
or
jmp
mov
daa
pop
pushf
cld
sbbl
add
popf
cmpsl
pusha
and
lret
push
aam
arpl
sti
jmp
xchg
aad
add
mov
mov
addb
fwait
jle
adc
adc
jo
mov
add
sub
outsl
dec
sub
jbe
mov
fadd
or
pop
jp
aaa
sub
sub
fiaddl
jg
pop
mov
out
mov
sbb
scas
push
shlb
fadds
sub
dec
jp
jge
in
jmp
pop
cmp
or
add
loop
xchg
in
sub
sub
in
call
loopw
adc
ds
jmp
push
inc
sbb
in
shrl
jmp
or
test
out
daa
sub
les
scas
or
es
out
jno
inc
fimuls
or
ret
aaa
inc
lds
lahf
loope
push
sbb
cmp
jb
jne
push
sbb
cwtl
mov
fidivrs
mov
lea
nop
inc
icebp
les
jb
mov
mov
push
and
movb
mov
aam
test
movsl
test
mov
not
jbe
and
push
fimuls
in
cmpsb
lcall
aad
adc
ss
mov
ret
mov
mov
js
into
add
inc
js
cmpsl
sbb
ret
outsl
dec
fadds
jl
mov
xor
push
lds
gs
shll
les
push
pop
fidivl
mov
test
mov
sarb
xor
in
dec
adc
cld
mov
adc
adc
pop
rol
cs
cmp
add
adc
dec
test
jo
call
or
xchg
ss
and
std
or
shrl
inc
cmpsl
sahf
mov
inc
adc
mov
int
aaa
push
xchg
aas
out
repz
lea
in
sub
mov
out
dec
scas
add
inc
pop
mov
sub
enter
es
mov
shll
mov
cmpsl
sbb
ds
add
test
jne
inc
add
sti
jg
mov
add
or
push
dec
cwtl
mov
cmp
or
adc
ljmp
icebp
lahf
ficoms
xor
or
imul
add
add
adc
pusha
and
xchg
es
jmp
aaa
fcoms
sub
sbb
jb
sbb
cmp
sub
adc
add
adc
lods
test
xchg
sbb
pusha
push
inc
or
sbb
mov
sti
jnp
rcl
and
pop
mov
cli
jne
sbb
add
adc
orb
xchg
push
imul
add
imul
jl
xor
dec
xor
dec
sbb
xchg
pop
daa
push
sbb
mov
add
nop
jp
repnz
add
daa
adc
xlat
mov
jg
loope
push
adc
inc
pushf
cltd
test
add
js
xor
add
xor
lds
ss
imul
dec
jmp
sub
push
imul
xor
and
and
adc
repnz
add
sbb
loopne
call
popf
sub
out
in
shlb
dec
je
dec
sbb
adc
jp
es
jmp
aaa
lcall
popa
inc
pusha
rcll
fmuls
popa
push
jae
les
sbb
push
add
inc
inc
js
lods
jo
xorb
add
loop
sbb
lea
ret
ret
pop
mov
inc
out
test
cli
rclb
arpl
jecxz
pop
pop
leave
jecxz
fstpl
jb
in
mov
push
ss
fildl
insl
mov
loop
ret
sbb
ret
bound
mov
sub
add
loopne
pop
mov
push
inc
mov
adc
mov
add
subb
mov
mov
sub
or
or
mov
xor
test
shl
das
leave
popa
loopne
into
loop
push
cli
add
jmp
jb
push
daa
add
lret
je
pop
cmp
mov
stos
dec
jnp
iret
add
aad
das
ret
adc
sahf
xchg
jb
jo
and
and
sub
jb
jo
pusha
fdivs
cmc
out
andb
pop
sbb
jnp
ud0
daa
jo
loopne
repz
gs
sbb
mov
jae
fimuls
out
xchg
cmp
iret
pushf
sbb
and
and
sbb
pusha
xor
cmpsl
sbb
ss
add
jl
pop
jle
mov
dec
xor
icebp
sub
sbb
stos
xchg
add
test
mov
subb
lret
in
mov
xchg
loope
js
adc
xchg
cmpsb
inc
int
push
gs
test
xchg
jne
pusha
pop
xor
dec
cmp
ret
xorb
in
mov
jno,pt
adcl
ljmp
fstpl
lds
mov
mov
adc
or
push
call
xor
mov
les
out
fldl2t
scas
add
mov
jo
shll
pop
cld
in
jns
jecxz
outsl
add
js
adc
cmpsl
shll
ficompl
fisubrl
xchg
mov
aaa
cmpl
dec
insl
push
push
mov
cwtl
pop
repz
in
clc
push
sub
push
call
sub
and
or
aas
cmp
es
or
xlat
xchg
test
inc
cs
imull
cmp
es
xchg
cmpsb
loop
mov
cld
pop
dec
cmp
repz
addl
out
pusha
fmuls
sub
call
aaa
xchg
les
sub
fbld
testl
loopne
add
pcmpgtw
inc
cmp
mov
xor
adc
cmp
or
add
sti
cmpsl
xchg
mov
test
je
test
stc
sub
xor
fsubs
cs
dec
dec
nop
jb
mov
jecxz
aad
hlt
nop
cmpl
in
lret
cmpsb
arpl
dec
pop
mov
cld
rcrl
loopne
popa
mov
dec
add
mov
sub
rcr
mov
jmp
cmp
inc
dec
push
xchg
je
and
lods
jns
shlb
jbe
sub
inc
pop
fadds
xchg
lock
and
je
rcrb
scas
mov
psraw
push
call
push
cmp
push
fldenv
cltd
push
add
sbb
add
mov
push
clc
or
repz
inc
pop
xchg
jmp
orb
mov
push
jp
insl
out
mov
imul
push
and
push
icebp
jg
or
cmp
dec
insl
adc
sbb
or
test
std
jbe
add
repnz
mov
cmp
inc
inc
push
inc
scas
jmp
ss
dec
lahf
outsl
incb
test
test
mov
jo
push
jne
out
pop
add
jecxz
je
mov
test
outsb
scas
rcrl
push
lds
sbb
jae
loopne
sbb
inc
insb
fcoms
cmp
inc
cmp
jg
mov
mov
test
mov
sbb
clc
iret
xorb
add
pop
out
xchg
mov
lods
mov
push
mov
loopne
mov
push
das
ret
sbb
lock
shlb
ljmp
pop
popa
sbb
scas
sar
add
mov
xor
sbb
rcl
repz
push
aas
inc
dec
push
cmp
cwtl
outsb
fdivs
mov
sti
inc
loop
lods
add
aaa
add
or
and
sub
out
sahf
js
add
cltd
scas
mov
xor
nop
jbe
lock
psubusw
add
ja
jae
lods
out
inc
mov
sub
out
dec
dec
test
ds
mov
cmpsb
and
repnz
ljmp
jno
xchg
sahf
repnz
jmp
shr
hlt
push
repnz
js
mov
pop
sbb
call
cmp
cwtl
xchg
sub
fidivrl
push
fwait
loopne
jmp
cltd
jle
rcll
movsb
inc
loopne
movl
and
xchg
xchg
pop
cmp
loope
inc
add
dec
mov
in
test
dec
pop
sahf
rcrl
ja
and
lahf
jge
pusha
sub
cmp
inc
aas
stos
call
xor
clc
loop
mov
lods
push
inc
lods
leave
loopne
clc
cs
dec
in
pusha
pop
ja
sbb
pop
inc
test
es
pop
sub
jb
sbb
xchg
insl
in
ja
adc
lock
daa
jne
jle
loope
add
dec
fs
mov
test
aam
sbb
or
mov
adc
ror
add
rorl
sar
cs
aam
add
cmp
inc
sub
inc
out
or
repz
add
inc
inc
clc
add
cli
push
mov
or
popf
repz
jne
inc
or
sbb
call
add
mov
ds
mov
lret
mov
xchg
push
mov
scas
sbb
aad
outsb
pop
and
in
icebp
iret
mov
test
aas
mov
add
cmpl
out
sbb
loopne
js
adc
inc
aad
xor
pop
dec
sarl
inc
loope
fistl
jmp
outsb
ret
inc
jae
lock
clc
mov
into
jnp
sub
addb
jne
jmp
push
shrb
jge
sbb
out
repz
add
mov
cmp
push
adc
fidivs
sub
or
jecxz
dec
add
cmp
xor
test
ret
repnz
aas
flds
mov
or
push
rclb
test
jbe
xchg
jb
push
rcrl
js
movsb
xchg
pop
and
dec
cwtl
outsb
in
stc
in
and
sbbl
jno
cmp
push
int
insb
sub
cmc
adc
iret
enter
jl
dec
sbb
add
incb
out
stc
mov
mov
sub
xchg
jg
shrb
inc
adc
fildl
mov
fistpll
cmovno
mov
pop
push
sub
addr16
mov
fstps
mov
stc
and
jmp
pop
push
jl
je
inc
inc
xchg
roll
inc
lret
out
loop
es
sub
inc
js
push
test
sbb
mov
mov
mov
jmp
aaa
dec
or
out
push
sbb
jne
orb
orb
cmpsb
leave
mov
mov
jmp
add
into
or
add
mov
clc
outsb
push
jecxz
or
push
and
or
enter
add
daa
inc
sub
xor
int
sbb
pop
cltd
test
in
adc
std
push
js
fcmovb
ja
movsb
inc
sbb
jecxz
fstps
inc
and
js
lret
or
sbb
aaa
push
sahf
xor
cmp
ret
arpl
dec
pop
ret
adc
testb
imul
testl
mov
aas
in
sahf
mov
sub
test
jne
fwait
das
mov
mov
xchg
in
or
hlt
data16
pop
jp
jp
in
sub
dec
inc
fwait
mov
movsb
movsb
imul
test
push
mov
inc
inc
addr16
push
aas
adc
xor
ret
stos
xlat
mov
or
add
popl
mov
inc
adc
push
in
or
and
and
ja
mov
jmp
inc
xchg
sbb
add
stos
repz
xchg
loop
mov
inc
outsl
push
sub
lods
mov
subb
call
loopne
mov
inc
enter
lea
sar
ljmp
inc
push
lea
outsb
adc
decb
dec
rorb
fnstenv
repz
in
sbb
jb
sub
dec
das
inc
es
in
jmp
inc
xchg
stos
or
call
stos
out
arpl
cmpsl
adc
xor
shrb
mov
inc
jl
push
add
leave
ret
es
cmp
xor
sbb
call
pop
adc
test
notl
cmp
dec
jbe
leave
loopne
jl
adc
adc
mov
gs
adc
push
idiv
add
jb
or
imul
fs
or
pop
cmpsl
imull
add
adc
inc
add
cmc
mov
shlb
ljmp
cmpsb
pushf
mull
addl
xor
mov
rolb
mov
mov
div
loopne
sub
sbb
aaa
fisttps
in
ret
leave
js
insl
add
inc
dec
sbb
cmp
dec
adc
sbb
xor
loopne
inc
movsl
test
pop
dec
loopne
xorl
inc
mov
sub
and
sbb
add
lock
push
ret
cld
inc
cmp
cmpsl
arpl
dec
ret
test
jg
pusha
call
push
xorl
xlat
fcomp
and
add
fwait
test
xchg
cmp
xor
add
pusha
jb
push
xlat
cmp
fdivl
sbb
push
ds
das
loop
jmp
subb
inc
icebp
jg
mov
filds
je
rcll
das
sbbb
xorl
mov
in
jae
push
add
scas
aas
pop
cmp
std
negl
pop
enter
and
xor
sbb
dec
sub
jg
dec
pop
pop
idivb
pop
nop
clc
or
jmp
dec
sub
mov
add
or
or
bound
pushf
inc
pop
sbb
rep
jne
and
imul
jae
aaa
aam
adcl
pushf
test
mov
lods
rorb
xchg
push
mov
or
sbb
mov
dec
enter
push
add
xor
cld
jbe
or
cmpsb
nop
push
pop
lahf
dec
cli
pcmpeqb
bound
sbbb
xor
dec
rclb
lods
imul
out
xchg
jbe
or
cmp
orb
rcll
rol
pop
mov
sbb
daa
jae
xchg
jecxz
hlt
add
xlat
sahf
sub
xor
sbb
aas
and
mov
lds
xorl
lar
add
push
or
out
sbb
dec
ret
pop
fdivrp
push
inc
pop
xchg
add
adc
cwtl
sbb
mov
sub
adc
adc
jecxz
jns
enter
inc
loopne
and
loopne
cmp
and
rorl
cmp
pop
or
cmc
ret
sub
lds
call
outsb
out
fsub
rorb
pop
mov
orl
arpl
mov
outsl
nop
out
adc
fcmovnb
pop
icebp
ja
mov
cmp
xchg
imul
test
mov
fadds
mov
jg
sti
jbe
dec
jge
testb
mov
test
jae
or
lret
xor
sbbb
mov
xchg
shll
cmp
movsb
shll
icebp
mov
ds
sub
adc
add
jne
push
pop
or
or
push
lock
sbb
nop
into
push
test
cmp
pop
fwait
fs
inc
push
cmpsb
adc
movsb
loopne
and
call
into
subb
and
adc
dec
test
sarl
aad
adc
dec
dec
incl
rol
cli
sub
push
add
and
shll
cli
sbbb
inc
push
test
loopne
xchg
dec
push
jle,pn
or
adc
rolb
jb
repz
dec
notl
pop
js
cwtl
vaddpd
fidivrs
fldl
mov
sbb
out
push
inc
xor
sahf
jb
mov
pop
mov
push
jg
rolb
into
add
sbb
add
ds
popa
loopne
mov
mov
sbb
adc
xchg
psubusb
sti
movl
mov
inc
or
jne
loop
test
and
sbb
js
sub
inc
push
mov
dec
test
insl
cmp
jp
mov
daa
push
push
and
push
inc
ror
or
dec
adc
rclb
out
inc
arpl
dec
sbb
out
sbb
loopne
push
dec
clts
mov
inc
push
dec
jne
xchg
sbb
xor
fisubs
and
or
test
lock
jge
adc
dec
or
cmpb
icebp
and
dec
out
bound
jl
dec
adc
pop
rcl
mov
xlat
leave
js
repz
push
ret
adc
add
test
repz
bound
mov
fimuls
dec
imul
sub
icebp
adc
sub
lcall
mov
fiaddl
hlt
pop
loope
xor
sbb
ficomps
mov
loope
bswap
fstpl
in
inc
int
sub
xchg
jge
cmp
xchg
inc
clc
jmp
out
loope
add
arpl
stos
int3
jecxz
and
inc
jmp
pop
adc
pop
or
xor
daa
out
xor
cli
jbe
lock
call
sbb
call
push
testb
hlt
lea
and
out
adc
jno
ljmp
and
mov
lds
xchg
fldcw
mov
jbe
adcb
pop
push
add
scas
dec
fbld
add
nop
or
sahf
nop
add
xchg
shl
pop
dec
js
lea
lds
pop
pop
dec
mov
xor
addr16
lret
inc
hlt
adc
pop
mov
leave
adc
xor
sti
mov
pushf
adc
in
and
call
pop
adc
or
dec
insl
lock
push
mov
and
fldt
add
sarb
sbb
lods
sbb
push
mov
mov
orb
pop
or
popa
mov
push
rcl
adc
adc
mov
rcrl
sub
ffree
add
adc
cmp
dec
jmp
add
cmc
sub
and
lea
sahf
add
sub
mov
dec
and
inc
ret
dec
adc
push
pop
cmp
lods
xor
daa
cmpb
ret
loopne
fidivs
xchg
add
ds
mov
add
or
fbstp
sbb
dec
imul
les
add
dec
or
out
aas
aaa
popa
cmp
pop
iret
xabort
clc
adc
mov
or
sarl
lods
xchg
jns
xchg
jecxz
fisubrl
add
and
adc
push
mov
or
or
out
sbbl
aaa
pop
clc
dec
adc
jno
xor
cmp
add
and
dec
xchg
mov
inc
imul
cmp
push
das
fmuls
mov
sbb
ss
cld
es
and
cmp
cmpsl
xchg
add
pop
hlt
and
and
push
mov
cld
out
push
std
add
dec
xchg
fs
add
lock
pop
lea
out
mov
test
mov
sbb
hlt
imul
cmc
jns
pop
roll
push
aas
fidivrs
push
and
mov
pop
adc
aad
orb
cmpsb
xor
imul
cltd
adc
add
inc
shr
cmp
lock
and
and
jae
jg
sbb
mov
pop
push
testl
orb
jnp
cmp
call
push
inc
jmp
test
movl
fldenv
andb
inc
icebp
jnp
roll
ficomps
cs
jb
mov
fs
inc
push
add
int3
sub
fldl
mov
stc
roll
stos
test
pushf
add
add
mov
push
clts
mov
pshufw
pop
mov
addl
hlt
subb
shrb
aaa
mov
and
sub
enter
cmp
pop
rclb
or
lret
ret
jecxz
mov
enter
inc
push
xorl
imul
loopne
sub
push
and
xor
pop
push
xor
or
int3
mov
jne
ds
mov
fistpl
ficomps
and
xor
test
push
sbb
rorb
sub
ret
aam
pusha
mov
fs
lret
int3
inc
adc
xor
in
xchg
and
inc
adcb
sbb
pop
or
mov
stos
lock
xchg
jo
dec
rorb
ret
jns
jno
in
repnz
pxor
int3
scas
inc
sbb
xor
jae
bound
or
mov
popa
dec
and
pusha
clc
cli
xor
push
mov
and
fistl
push
inc
clc
movsl
lret
mov
pop
ja
pop
add
test
add
mov
ret
inc
hlt
push
das
cmp
dec
push
fldenv
inc
test
jmp
xchg
lea
xor
stos
scas
dec
push
call
cmpb
out
add
mov
push
icebp
fistps
add
imul
rolb
sbb
decl
inc
roll
shrb
push
adc
enter
or
sbb
mov
push
or
enter
mov
ljmp
lds
dec
sbb
arpl
xchg
cld
icebp
mov
sub
out
mov
cmp
rolb
or
adc
ds
and
push
mov
mov
push
gs
mov
cmp
sahf
adc
lret
or
int
mov
cmpsl
call
push
test
ret
les
add
mov
sahf
add
pushf
cmp
hlt
cmc
cmp
ja
add
into
jno
clc
rcll
shrb
or
push
mov
jno
stos
jne
lret
and
ret
or
adc
std
inc
decl
test
pop
pop
push
call
test
cmp
shlb
aaa
inc
xor
and
add
mov
jl
or
pop
fucomi
or
and
scas
and
pop
popa
sbb
xorb
pop
roll
bound
enter
and
test
ret
jb
pop
mov
push
test
mov
pop
popa
popa
lret
aas
rolb
mov
pop
inc
push
ss
jmp
rcl
mov
push
inc
insl
movsb
lock
sub
xchg
shlb
fmuls
imul
mov
xchg
out
cli
and
mov
sub
sbb
mov
addb
into
leave
rcrb
inc
test
fildll
scas
and
cltd
cli
imul
addl
test
mov
push
push
fidivs
jg
lea
push
call
shr
xor
adc
test
rcl
sbbb
or
mov
shl
jae
mov
shrb
adc
add
jae
sbb
cltd
xchg
mov
inc
shl
mov
xchg
repnz
ret
loop
mov
xlat
sub
pop
sub
sub
inc
js
sbb
ja
mov
jno
xchg
dec
sub
faddl
loopne
jno
call
adc
dec
frstor
pushf
fisubs
push
fsub
addb
xchg
pop
fwait
js
push
jg
icebp
adc
inc
sub
and
ss
mov
lods
enter
push
push
arpl
pop
loope
sbb
out
xor
call
add
push
scas
les
pop
xor
and
pop
psrld
shrl
outsb
cli
mov
repz
add
adc
cmp
xchg
js
xor
loopne
push
mov
je
fdivrl
inc
inc
adc
adc
or
cmp
test
adcb
adc
in
loope
lock
icebp
jo
es
push
sbb
cs
lock
sbb
sahf
or
jmp
push
and
jmp
into
inc
sub
and
fmull
add
pop
test
out
sub
les
jae
gs
les
mov
daa
inc
or
popa
and
aas
add
xor
andb
sub
push
leave
dec
clc
cmpsb
repz
sub
rcrb
into
ret
mov
int3
ljmp
mov
loop
dec
lods
inc
cld
xchg
lods
icebp
lods
mov
mov
loope
push
dec
dec
lret
push
pop
adc
imul
mov
jae
sub
xor
stos
sbb
push
push
call
test
les
inc
sbb
xlat
lock
clc
dec
sbb
ret
dec
or
mov
fistps
sub
cld
add
dec
jb
rcrb
clc
je
and
and
stos
rorb
icebp
or
adc
jecxz
lods
out
sub
dec
loope
and
sub
fisttpl
jmp
fstpl
and
call
fldcw
orb
mov
inc
jne
pop
dec
inc
sbb
mov
fwait
sbb
pop
fcoms
je
sub
xorb
pop
or
mov
rcl
pushl
xor
push
xlat
cmc
and
int3
jg
fcomps
xor
cld
stos
lods
push
xchg
das
push
add
and
stos
jp
adc
or
movsb
cmp
pop
in
jle
inc
icebp
cmp
inc
ret
or
pop
and
fcomip
aaa
stos
mov
repnz
into
in
flds
pop
lahf
pop
fdivrs
aad
add
popa
mov
xor
int3
adc
shll
sbb
inc
push
inc
in
and
lods
shl
shlb
pusha
std
adc
pop
mov
ror
ret
fcoms
or
push
push
imul
call
mov
xchg
rorb
mov
in
pop
bound
in
inc
dec
jmp
gs
sub
insl
mov
cld
jns
add
cmp
inc
arpl
cmp
xchg
cs
pop
dec
xchg
call
or
pop
jne
push
sbb
loop
mov
jg
in
inc
mov
fsts
mov
or
jbe
sub
adc
ljmp
mov
int3
xchg
ret
cmp
mov
lcall
std
push
ret
nop
pusha
jecxz
jmp
das
jmp
sbb
cmp
or
es
adc
push
jecxz,pn
sti
dec
loopne
insl
repz
mov
daa
mov
add
adc
push
je
test
adc
add
adcl
cmpsl
and
xchg
sbb
push
mov
xchg
inc
dec
out
nop
int3
cld
sbb
movsb
cld
shl
pop
aam
into
outsl
addb
fisttpll
js
fs
faddl
roll
push
hlt
cmp
into
dec
inc
jl
sub
sub
xchg
sbb
and
aas
mov
mov
push
xor
xchg
nop
jo
push
jmp
cmp
lcall
out
push
rorl
rorb
rclb
loope
add
addr16
test
icebp
into
jne
fstl
pusha
add
mov
sbb
add
sub
pusha
dec
mov
xor
sti
push
xor
pop
cmp
pushf
mov
pop
xchg
sbb
sub
dec
aam
adc
inc
sbb
mov
test
xor
pop
test
or
xchg
popf
cmpl
dec
sub
movsl
ret
pop
cmp
cld
jns
js
test
sbb
stc
mov
loopne
lret
outsb
dec
pop
add
fdivl
mov
ret
sbb
cmp
fs
jecxz
icebp
insb
std
add
or
lahf
clc
in
test
xor
push
clc
shr
push
mov
rorb
or
inc
pop
dec
loope
cmp
cmp
xchg
out
jno
lods
or
pop
inc
inc
mov
xchg
lock
mov
pop
pop
clc
roll
sti
in
in
mov
aas
sub
jge
ret
push
lods
lea
add
in
jmp
add
daa
pusha
dec
push
push
loop
push
sub
jno
pop
adc
jecxz
out
test
addr16
fs
pusha
cmp
call
stos
test
sbb
sbb
inc
cmp
add
ret
stos
jg
pop
insb
loop
shll
add
sub
daa
pop
repnz
or
dec
in
std
adc
or
enter
sub
das
sbbl
or
sub
push
in
push
add
pop
sbb
mov
dec
inc
add
push
xchg
cmp
test
sub
push
lods
xchg
jnp
or
stos
push
ss
cmp
xor
adcb
mov
rcrb
stc
sbb
arpl
arpl
inc
add
and
lods
and
mov
inc
cmpsb
movsb
pushw
fbstp
test
popa
test
mov
testb
outsl
mov
lods
push
jecxz
and
jg
or
cld
or
sbb
addr16
pop
ret
test
pop
xchg
aas
sub
xor
fidivl
dec
lret
out
push
das
and
mov
icebp
lret
fistpl
mov
mov
incl
sbb
repz
mov
gs
cmp
and
push
jp
xchg
rcrl
dec
dec
xchg
push
mov
in
add
mov
scas
adc
dec
bound
test
mov
mov
sahf
xor
adc
push
cmp
push
aad
lea
push
push
mov
dec
aam
mov
mov
sub
mov
mov
gs
or
in
and
aaa
mov
xlat
jne
repz
in
hlt
je
xchg
call
inc
inc
and
mov
add
cmc
pop
mov
sbb
mov
jecxz
push
sub
outsl
mov
sub
test
xchg
pop
lods
test
inc
loopne
dec
ret
ja
bound
cmp
es
sbb
dec
fadd
sbb
or
mov
ficomps
dec
clc
daa
xor
test
ret
push
pushf
incb
inc
adc
ficoml
adc
in
inc
mov
dec
pop
add
in
ss
scas
rolb
cld
add
jmp
and
inc
mov
lock
push
mov
notb
adc
or
movsl
mov
push
in
or
cmpsl
lods
pop
shrb
and
sarb
lret
add
lock
scas
pushf
les
addb
lock
out
ret
sub
mov
jecxz
and
push
or
popa
lods
sbb
scas
int3
mov
movhps
ss
push
in
stos
aaa
jecxz
add
test
adc
push
movsb
dec
rcll
cmp
mov
and
pop
hlt
push
pop
or
pop
add
mov
pop
mov
mov
imul
sbb
pop
push
sbb
sahf
add
push
fidivs
repnz
adc
outsb
enter
cmpb
inc
outsl
add
lret
push
dec
gs
cmp
xchg
and
sbb
movsb
stos
rorl
lahf
adc
mov
dec
adc
add
mov
xlat
and
inc
sub
xor
push
mov
sub
pushf
inc
sub
push
pusha
popa
test
lret
cld
push
and
add
adc
pop
dec
stos
and
sti
jb
divl
push
adc
mov
and
xchg
inc
xchg
xchg
adc
aad
xor
cli
ljmp
xchg
or
mov
push
sub
lcall
call
xor
sub
out
dec
lret
xor
stos
jo
mov
push
add
xor
data16
or
lcall
pop
add
mov
dec
adc
mov
das
clc
cmp
add
mov
je
fnsave
push
mov
xor
pmaddwd
push
or
aas
shlb
outsl
out
push
dec
adc
outsb
or
test
mov
frstor
adc
xchg
and
add
sub
xlat
mov
cmp
fildl
inc
sbb
mov
fldcw
lea
push
push
mov
or
adc
mov
leave
ret
adc
add
sub
xor
pop
aam
jg
jmp
in
mov
adc
mov
lret
jmp
stos
pop
stc
push
rcr
pushl
sbbl
bnd
out
mov
and
call
imul
adc
cmpsb
push
cmp
pop
mov
movsb
jae
mov
adc
adc
shll
mov
fcmovb
fildl
stc
lods
push
addr16
repnz
out
aas
lock
pop
ficoms
push
sub
stc
insb
add
and
iret
or
inc
and
inc
clc
scas
and
mov
lea
add
shl
lcall
push
or
adc
sti
fisubl
test
in
xchg
adc
sbb
jae
mov
in
ret
dec
test
pop
adc
and
cmp
les
mov
inc
push
pushf
mov
inc
mov
add
mov
or
imul
dec
fadd
test
js
rcrl
cmp
jns
addb
push
cmp
test
icebp
mov
adc
dec
lock
and
mov
imul
clc
and
inc
das
dec
xorb
mov
lret
pop
hlt
lds
add
sbb
orb
lock
loopne
jmp
leave
insl
sub
in
stc
or
sbb
push
lock
push
imul
sbb
sub
and
or
xchg
and
sarb
sbb
jo
pextrw
sbb
adc
clc
mov
cmc
push
fidivl
lods
mov
add
jno
inc
inc
pop
jno
or
jmp
add
push
pop
mov
in
nop
movsl
gs
and
divb
sbb
xchg
imul
sub
add
dec
jmp
loope
and
rol
or
push
cltd
sbb
add
inc
xor
aad
mov
add
out
loopne
mov
fucomi
pop
jnp
out
xchg
out
arpl
pop
outsl
or
and
inc
popf
cmc
enter
xor
xchg
test
xor
rcrb
inc
and
xorb
insb
lea
push
cmp
or
repz
roll
xor
repz
imul
ds
sub
cmc
push
mov
lea
outsb
jb
dec
adc
sub
jecxz
popf
dec
push
jle
int3
xor
and
and
add
or
and
addb
adc
scas
and
xor
arpl
rorb
fnstsw
jns
pop
call
rcrb
inc
pop
dec
pop
leave
push
pop
nop
or
mov
pop
sub
cmp
cli
mov
ja
cld
sub
adc
adc
lea
ret
ret
lret
leave
js
or
xchg
mov
ret
sarb
lds
mov
lds
inc
loopne
sbb
adcb
hlt
cwtl
insl
sbb
jb
add
sub
or
or
mov
fsubl
pop
gs
add
pusha
mov
or
fildl
push
push
push
sub
push
call
inc
cli
out
cmpsl
inc
push
rolb
fiadds
int3
mov
add
inc
add
ret
add
xchg
xchg
mov
les
jp
jle
in
hlt
shrb
and
scas
inc
or
and
in
cli
xor
cld
pop
jge
or
je
paddb
sub
popa
repnz
jne
popf
and
ror
xchg
jmp
push
repz
or
mov
cmp
dec
pop
dec
loopne
dec
pushf
hlt
call
bound
stos
inc
test
adc
or
lret
mov
push
inc
aam
sub
cmpb
mov
adc
js
or
test
pop
add
add
xlat
mov
sub
incb
in
rcrb
cmp
dec
int3
mov
js
mov
popa
add
loopne
sub
les
inc
mov
mov
jecxz
syscall
cmc
sbb
enter
aas
ret
dec
push
jp
test
push
pop
shlb
test
inc
mov
in
dec
sbb
xchg
sbb
mov
dec
orl
xchg
xchg
pop
hlt
pop
inc
out
je
mov
insl
mov
aaa
add
test
and
lods
push
add
inc
mov
add
bound
insb
hlt
mov
repz
add
lds
sub
inc
dec
mov
jns
in
icebp
test
rolb
es
xor
mov
roll
and
lock
xchg
inc
and
clc
push
pop
std
add
scas
outsl
aam
or
pop
adc
cmp
gs
xchg
add
and
sub
adc
cli
or
add
outsl
xchg
inc
sub
jnp
xchg
sub
push
lahf
cmc
movsb
mov
sarl
movsb
pop
or
lods
test
push
pusha
orl
out
clc
add
mov
lds
dec
push
stos
sahf
mov
cltd
cwtl
ret
sbb
in
rcll
dec
inc
int
pushf
inc
cs
cmp
or
sbb
nop
dec
sbb
enter
xor
outsl
aas
sub
mov
popf
test
repnz
addr16
cmp
pop
call
sbb
loope
ret
and
push
pop
scas
insl
or
inc
push
pop
idivl
jo
iret
ja
lea
mov
lret
push
add
sbb
in
xchg
or
lret
mov
fdecstp
lea
pop
pusha
stos
inc
sbb
imulb
clc
sbb
repnz
adc
push
cmp
jecxz
cltd
lret
adcb
sub
lock
pop
cmp
add
in
je
dec
loop
popf
fcompl
mov
sbb
jne
inc
cwtl
mov
inc
dec
mov
jne
xor
adc
je
in
sbb
xchg
sti
xor
adc
xor
shl
ljmp
ja
nop
or
jg
insb
cld
pop
xor
ret
inc
scas
popl
add
or
pop
test
scas
pop
pop
je
mov
fwait
ret
mov
fistps
cmp
or
push
sub
pop
orb
jl
adc
xchg
rcr
push
mov
jg
or
mov
mov
mov
mov
adc
fcomps
mov
dec
and
sub
popf
fildll
outsb
add
push
les
mov
out
mov
mov
mov
shl
jge
or
add
mov
push
adc
sbb
and
fsubrl
cmp
xchg
jmp
loopne
call
lret
mov
and
push
mov
pop
out
mov
jno
pop
lods
scas
push
push
cmp
cmp
sbb
push
pop
cmp
cs
insb
loop
aad
icebp
xchg
fs
ja
and
sbb
push
fadd
push
callw
or
and
imul
loopne
jmp
cmp
out
or
inc
jb
je
jg
fs
and
test
popa
cmp
add
dec
test
jp
push
rorb
int3
inc
scas
and
std
test
scas
jb
fsts
inc
sub
inc
dec
xor
inc
lret
incl
mov
dec
outsl
test
shl
sub
loop
mov
roll
pop
hlt
dec
jbe
or
add
ljmp
mov
cs
dec
pusha
testl
negl
rcll
pusha
js
rolb
imul
mov
pop
jbe
mov
add
shll
jle
movsb
push
loopne
pop
and
xor
mov
enter
sbb
cmpb
mov
sbb
adc
rcrb
sub
icebp
lret
ljmp
test
or
aaa
pusha
and
push
and
inc
push
imul
xchg
fsubp
mov
sub
ret
sub
pop
add
fmul
enter
lock
mov
repz
rorl
xor
add
jmp
ret
xor
repz
pop
jo
mov
jae
bound
jl
out
cld
fsubl
xchg
jae,pn
call
pop
mov
dec
lock
imul
cmpb
cwtl
ficoml
fists
sbb
sbb
ljmp
icebp
add
and
mov
aaa
xor
or
test
loope
adc
pop
xchg
shrb
jno
sbb
sub
cmp
scas
cmp
lret
sbb
inc
xor
push
jo
loope
push
xor
xor
rcr
push
mov
lock
shlb
and
mov
sub
mov
mov
lea
and
sbb
push
pop
shll
neg
dec
sub
jb
clc
jmp
add
mov
enter
inc
and
lret
sub
in
lods
int
inc
or
stc
test
push
xor
nop
popa
or
test
ficomps
fsubl
loopne
add
xchg
je
rcll
add
xor
cmpsl
mov
xor
inc
ja
mov
shlb
or
mov
repz
mov
push
add
mov
fadds
or
xchg
sub
pop
or
and
popf
dec
adc
push
rcr
jo
push
mov
xor
es
std
push
mov
les
loope
adc
or
add
xchg
mov
adc
enter
call
xchg
lea
push
movsb
ss
mov
fwait
or
add
movsb
das
or
mov
sbb
loopne
test
xchg
pop
sub
aam
ret
add
xchg
rolb
push
add
mov
jb
mov
adc
dec
into
sub
scas
push
aas
dec
mov
push
shr
push
ljmp
shrl
cmp
push
fmull
sub
sti
dec
cli
sti
adc
adc
inc
arpl
clc
mov
dec
fisubl
jecxz
in
cmp
dec
push
inc
xor
ljmp
testb
xor
push
add
sub
insl
push
pop
add
jns
mov
sbb
adc
pop
mov
int
pop
mov
push
inc
jecxz
aas
je
cli
int3
or
dec
movsl
xor
aad
je
adc
xchg
ret
pop
pmuludq
cltd
sub
negl
add
or
xchg
xchg
jle
sbb
push
cmp
add
xorb
and
std
loope
pandn
inc
sub
mov
loop
push
xchg
dec
aad
subl
and
daa
ret
pushf
cmp
adc
add
shrb
nop
jns
add
xor
push
pop
adc
out
adc
mov
test
adcb
cmp
and
pop
rcrb
test
jbe
sub
push
addr16
inc
cmp
jl
xor
inc
or
push
mov
cmp
mov
in
ss
popf
mov
sti
call
add
icebp
and
jmp
fimull
mov
inc
pop
lret
rclb
call
mov
mov
rorb
mov
in
int3
sbb
ss
cld
add
dec
cld
mov
adc
aam
out
call
xchg
jmp
add
pop
lods
inc
sbb
push
pop
cmp
ffreep
cmp
ss
lods
int3
cmpb
dec
xor
test
xchg
out
add
jle
mov
in
dec
les
js
and
fistps
xor
add
icebp
and
or
lods
das
fsincos
lods
xor
push
mov
push
cmp
adc
rcll
and
test
adc
cmp
xchg
add
movsl
push
std
les
sbb
nop
sbb
std
xchg
fcoms
cmpsb
and
add
add
mov
xor
dec
imul
push
push
lahf
arpl
cwtl
dec
mov
sub
mov
arpl
lock
cli
outsl
imul
outsl
xchg
cld
inc
and
je
adcl
jle
lret
out
xor
push
push
cli
push
inc
add
sbb
sbb
call
add
xor
inc
jmp
call
and
pop
mov
add
mov
fldl
adc
dec
shlb
xor
fbstp
test
ss
stc
cmp
and
xchg
ja
cmpsl
mov
jmp
and
movl
fnstcw
clc
and
add
adc
dec
int3
mov
jle
sub
daa
xchg
mov
into
adcl
test
xchg
pop
mov
mov
rcrl
inc
mov
xor
adc
loope
mov
cmp
inc
lods
xor
mov
test
ss
or
cld
inc
and
pop
sub
add
sbbb
add
or
loop
lods
mov
xor
fbstp
cwtl
jg
fs
adc
ret
mov
xchg
test
sahf
sarb
popa
lock
dec
cmp
adc
fdiv
and
push
xchg
or
ficoml
pop
sbb
pop
enter
rclb
lea
jmp
pop
test
and
enter
add
xor
push
mov
cmp
fsubs
dec
adc
dec
outsb
dec
jb
clc
pop
add
push
ljmp
mov
push
ja
mov
jmp
push
or
clc
adc
adc
push
pusha
xchg
movsl
das
jp
push
mov
sub
push
loope
push
psubb
inc
sub
sbb
jle
mov
xlat
lret
pop
sbb
shr
movsl
test
jecxz
push
pop
rcrb
sbb
cmpsl
hlt
outsl
ss
sub
je
sub
push
xchg
or
out
push
mov
mov
clc
cmp
cmpsb
pop
mov
and
push
pop
test
fimull
push
mov
add
mov
in
lock
xchg
out
inc
add
outsl
xchg
in
cmp
das
jp
adc
mov
fstpl
pop
lea
dec
and
ja
stos
test
test
pop
movsl
inc
xchg
mov
sub
push
add
pusha
scas
fsubr
push
adc
xchg
mov
aas
fisttpll
mov
hlt
out
adc
mov
push
iret
rol
les
mov
xchg
mov
fbstp
popl
xchg
mov
mov
ret
push
cwtl
or
add
gs
movsl
aas
mov
push
mov
push
shrb
bound
mov
and
loope
xchg
adc
inc
movsb
lock
or
andb
jmp
in
xor
and
lods
test
pop
sahf
or
ret
mov
addr16
ret
je
clc
xchg
xor
lock
push
loop
in
pusha
inc
outsl
jno
push
pop
shlb
rclb
iret
mov
mov
dec
adc
or
adc
add
add
pop
xchg
xchg
or
fiadds
jg
mov
add
xor
xor
mov
rep
ud0
jb
mov
dec
ja
mov
add
nop
lock
fisubrs
inc
sub
repnz
pusha
cmp
sahf
cli
inc
popa
rorl
dec
int3
out
cltd
leave
inc
dec
cli
aaa
adc
add
loopne
pop
in
enter
mov
jns
jb
call
sbbb
dec
add
in
cli
xlat
rcr
imulb
rolb
pop
jmp
add
adc
and
inc
loop
daa
movsl
in
fildll
addr16
test
dec
or
xchg
push
jno
sbb
xchg
or
fstpt
inc
sub
out
ret
add
dec
out
scas
faddl
pop
or
jg
arpl
sti
sbb
add
lods
jp
sbb
inc
cmpsl
push
pop
push
or
and
cmpsb
lret
clc
dec
loop
adc
nop
ficoms
sbb
jp
add
cmp
sub
mov
inc
adc
fmull
cs
ljmp
push
adc
inc
loopne
adc
xchg
xchg
cmp
sub
jmp
cmp
or
dec
mov
jbe
lcall
imul
out
aam
jg
mov
fisubrl
dec
mov
sbb
fcoml
jp
dec
and
clc
cmp
adcl
je
push
outsl
je
fisubl
jne
sub
jmp
xor
xchg
xchg
sbb
das
scas
es
push
incb
pop
add
movb
negb
or
add
inc
sub
inc
test
repnz
ljmp
mov
loop
sbb
add
mov
cmc
daa
sbb
and
shlb
dec
mov
and
and
shll
mov
adc
movsl
and
loop
sub
stc
movsb
ror
push
test
scas
sub
outsb
jecxz
inc
push
roll
mov
sub
inc
sbb
jp
sub
loop
jp
loope
or
cli
ret
xchg
inc
push
add
inc
add
dec
and
mov
loopne
push
xchg
imul
sbb
inc
int
mov
push
push
fs
xchg
cmp
jecxz
push
movsb
and
insb
push
inc
mov
sub
add
sub
rcrl
jg
sbb
mov
and
rorb
xchg
jl
ja
jle
clc
enter
pop
sbb
subb
lcall
pop
push
popa
add
add
lods
sbb
filds
loope
add
mov
push
cmpsb
xchg
pop
shlb
adc
fs
mov
clc
aas
sub
push
mov
dec
cmp
dec
cmpsb
push
cmpsb
les
lret
fisttpll
push
dec
and
inc
or
sbb
adc
mov
mov
loop
mov
add
cltd
xchg
cmp
xchg
push
cmpl
jmp
loopne
repnz
fcomi
mov
xor
mov
lcall
push
loopne
icebp
daa
xchg
das
movsl
add
sbb
inc
sub
adc
xor
add
push
imul
loopne
jae
or
sub
mov
cmp
inc
sub
ret
lcall
lock
inc
xchg
push
mov
arpl
and
mov
lret
sbb
xlat
clc
in
dec
sbb
add
sbb
cmpxchg
dec
fidivl
fimuls
mov
or
inc
lods
rol
hlt
xorb
push
push
pop
xchg
mov
int
aaa
mov
lods
dec
daa
jno
mov
call
iret
fs
mov
dec
mov
ror
rol
cmp
or
mov
dec
jge
testb
pop
mov
sub
stos
addr16
jl
or
fcompl
push
add
push
push
sbbl
stos
mov
or
mov
mov
or
cld
jb
clc
mov
fdivrs
dec
subb
scas
loope
repz
popa
popa
fidivrl
je
adc
adc
xchg
bound
cmpsl
mov
dec
inc
lock
pusha
xchg
test
mov
mov
inc
call
mov
adc
fstpt
pop
cmpsl
adc
and
mov
cmc
arpl
pop
pop
test
dec
test
pop
fstps
add
sub
and
scas
ret
ds
mov
push
jmp
sbb
jnp
xor
sub
dec
jmp
push
and
sbb
js
add
pop
dec
cltd
insl
sbb
out
lea
adc
or
xchg
out
cmp
je
inc
dec
or
lahf
cmp
jmp
push
mov
scas
adc
jle
or
out
cltd
mov
jecxz
mov
push
call
push
jp
stos
xchg
scas
jae
arpl
or
xor
cli
inc
stc
into
sub
cmpsl
mov
mov
mov
test
mov
movsb
xchg
inc
xlat
push
rorl
pusha
and
adc
popf
cmp
mov
insl
add
aaa
popa
sub
mov
jno
hlt
jp
lock
pop
testl
mov
call
jo
xor
dec
mov
or
adc
or
out
adcb
pop
jecxz
adcl
mov
mov
push
mov
adc
es
jle
or
push
mov
dec
inc
xchg
sbbb
lcall
out
dec
call
cmp
add
dec
cltd
jecxz
add
mov
repz
fistps
mov
dec
cmp
out
jl
pop
sbb
lret
lcall
hlt
mov
dec
insl
sub
scas
enter
and
inc
andb
add
adc
add
xor
and
xchg
pop
pusha
out
xchg
push
sbb
adc
or
inc
pop
imul
push
test
js
aaa
jp
adc
and
lret
icebp
fsubrl
xor
jecxz
inc
pop
or
lea
xor
and
mov
add
mov
adc
movsl
mov
pop
jbe
sbb
aam
mov
pop
lea
lret
sbb
adc
sub
out
or
or
dec
int
push
add
sub
in
adc
stos
add
leave
lods
sub
out
hlt
movl
iret
xchg
adc
and
and
inc
mov
or
popf
insb
or
clc
rorb
mov
aaa
movntps
cmp
mov
insl
insl
aad
test
sub
sbb
addr16
push
sub
iret
jg
pop
adc
push
push
loop
add
cmp
out
xor
mov
xor
mov
js
xorb
pop
lahf
mov
inc
subb
jmp
cmp
xor
roll
les
fldenv
pop
and
pushf
sub
pushf
popa
stc
pop
add
test
setno
popf
cwtl
cmpsl
xchg
call
fld
push
cmp
jne
lcall
jmp
cmp
push
and
dec
mov
jle
sbb
jmp
or
jmp
or
call
mov
mov
call
mov
mov
rcll
adc
rorb
mov
fldt
or
mov
ja
js
mov
out
and
inc
xchg
xchg
cmp
push
pop
push
mov
test
mov
daa
dec
add
xchg
aam
iret
rcrb
pop
sbb
addl
jmp
sahf
into
pop
mov
adc
and
cmp
add
mov
add
jmp
add
add
and
push
in
add
rorl
or
sub
fdivs
in
jg
shr
sbb
xor
sbb
outsl
mov
push
push
popa
add
outsl
xlat
insl
sub
stc
clc
daa
mov
loope
rclb
loop
xchg
cli
out
cmp
dec
xchg
push
sti
pop
xchg
inc
or
cmpsl
iret
or
loopne
gs
mov
add
rorb
sub
add
sbb
pop
movb
dec
ret
xchg
xorb
push
insl
mov
push
insl
loope
and
lea
adc
xor
mov
pop
das
xchg
mov
mov
test
cmp
mov
movsl
add
es
sahf
cltd
mov
lcall
out
cmp
push
sub
aam
inc
ss
adc
jnp
inc
jb
xor
rorl
mov
fadds
xchg
aam
xchg
inc
fisubrs
iret
flds
mov
push
aaa
fiaddl
fs
add
and
es
mov
loopne
mov
push
inc
xchg
test
or
lds
das
shll
dec
inc
sub
dec
stos
gs
sbb
sub
mov
dec
mov
int
xor
into
xchg
ds
popl
fistl
lret
inc
js
fucomi
popa
js
cmpsl
dec
iret
bound
mov
xchg
and
or
mov
xor
loop
sbb
jg
adc
mov
mov
jecxz
fadds
dec
add
popa
das
sbb
add
fsubrs
xchg
ret
andb
xor
pop
fiadds
rol
movl
xor
gs
movsl
sbb
jno
xor
stc
jl
movsl
dec
add
push
mov
call
xchg
sbb
mov
jmp
pop
xor
iret
or
dec
and
cs
pop
leave
movsb
and
xchg
gs
dec
xor
inc
jmp
push
xor
pop
icebp
jmp
add
incl
adcb
jo
jmp
jg
pop
mov
pop
xchg
mov
or
fnstenv
add
add
inc
cwtl
ret
nop
sub
add
decl
idivl
push
pop
mov
adc
jg
jg
mov
sub
jecxz
mov
add
sub
js
cmpsl
mov
or
fldt
incl
sbb
sti
add
add
add
mov
mov
adc
mov
mov
or
aad
add
sahf
xchg
pop
outsb
mov
add
add
std
jg
fisubrl
cld
pusha
rcr
mov
test
out
bound
push
add
imul
in
in
or
add
andl
xchg
add
adc
lret
inc
aam
push
jo
add
add
js
mov
test
loopne
incl
jecxz
add
xchg
aad
les
pop
subl
push
sub
adc
add
or
movsb
jno
adc
repz
mov
stos
stos
add
xchg
out
xchg
xbegin
insl
xchg
movsb
mov
aaa
arpl
mov
inc
incl
popl
add
push
and
add
add
loopne
mov
xor
or
in
add
outsl
add
xchg
xor
iret
outsb
push
xchg
mov
fwait
mov
adc
movsb
jb
popf
jo
and
xor
and
add
leave
andb
mov
inc
push
orl
outsl
sahf
jmp
dec
xor
sbb
mov
or
xorl
cmp
jno
mov
xorb
mov
data16
fadds
sarb
je
in
add
fistps
xor
xor
or
inc
add
in
aaa
pop
mov
sti
leave
jmp
fcompl
sbbb
add
jmp
push
pop
push
dec
ljmp
dec
push
add
out
add
add
and
xchg
aam
loop
data16
outsl
jle
add
and
xor
mov
mov
sbb
ljmp
decb
add
add
loop
mov
jo
inc
add
cmp
pop
shlb
es
cwtl
mov
vcvtpd2psx
fs
dec
inc
inc
in
mov
push
cmp
cld
jo
xchg
js
incl
dec
add
loopne
sub
adc
aas
pop
cmpsb
outsb
mov
int
jg
fbld
sub
xor
mov
lcall
and
aas
dec
mov
idiv
add
test
cli
sbb
mov
call
inc
xchg
pop
ret
aam
xlat
mov
sub
out
pop
clc
push
aaa
enter
loope
jge
sbb
fadds
in
mov
mov
adc
push
push
and
enter
push
cld
out
push
push
je
mov
lret
lock
sbb
aam
push
std
test
add
cld
add
pusha
sbb
mov
or
pop
dec
decl
push
pop
stc
xchg
int
add
mov
mov
cmp
outsl
es
add
pop
clc
pop
inc
outsl
dec
fisubrl
mov
cmpsb
lea
call
fdivr
shll
jnp
fdivrs
insb
add
jmp
or
push
push
pop
inc
in
cmpsb
and
dec
inc
mov
or
sub
insl
jnp
pop
test
xchg
or
or
or
dec
sub
cmc
cwtl
loope
pop
clc
or
sbb
rclb
pushf
adc
pop
sub
aad
fsubrs
xor
pop
cmpsb
scas
pop
or
fldl
lods
xchg
in
pop
dec
test
inc
andb
std
cs
ss
pop
jae
fmuls
in
add
adc
cld
out
or
imul
mov
inc
stos
mov
sub
ret
inc
fildl
add
push
sti
cmp
es
sti
pop
push
les
add
add
mov
les
push
dec
movsb
les
xchg
and
push
pop
sbb
jno
pop
cwtl
jbe
pop
add
loop
les
test
fisubrs
std
mov
rcrl
mov
scas
or
cld
in
add
enter
add
add
push
inc
lock
xchg
mov
fwait
jg
outsb
push
and
cmp
mov
cwtl
push
adc
jg
sbb
inc
cwtl
shlb
imul
push
dec
mov
xor
add
add
push
cmp
sub
fcmovnbe
xlat
or
xchg
inc
or
jmp
sti
mov
scas
jl
cmpsb
or
mov
add
insb
or
mov
xchg
loope
inc
sub
sti
incl
fadds
pop
call
in
xchg
js
cmc
and
push
pop
pusha
sbb
mov
gs
pcmpgtb
inc
add
and
add
inc
fdivs
cmp
call
dec
int
pop
mov
inc
pop
jno
inc
ss
sbb
push
insl
and
cmp
push
int3
push
in
or
hlt
je
sarb
xlat
inc
repnz
imul
dec
ljmp
xor
rcl
dec
mov
lock
daa
scas
mov
mov
testb
rol
adc
cmp
xor
je
sbb
outsl
jg
cmp
mov
add
xor
scas
pop
f2xm1
or
xor
mov
sub
ss
push
push
pop
mov
add
cmp
mov
cmp
push
xchg
and
loop
fisubs
xor
out
lcall
lahf
dec
add
add
outsb
push
rorb
aaa
jl
inc
test
mov
pushf
pop
cmpsl
mov
sbb
adc
ja
mov
stos
sub
dec
test
and
movsb
sbb
mov
mov
sub
das
ds
mov
addr16
xor
es
pop
jo
inc
cwtl
mov
push
mov
mov
and
js
adc
mov
daa
movsb
sarb
popf
scas
mov
cmpsb
rcrl
cli
push
sub
scas
mov
push
xchg
movsb
cltd
mov
ret
jg
add
xchg
cld
push
mov
lds
decb
cmpsb
and
jbe
cltd
push
and
call
jg
cli
cwtl
pop
scas
test
mov
inc
iret
xor
lret
mov
add
testl
std
test
daa
int
sahf
xor
jg
shrl
mov
aam
dec
sub
insl
fiadds
xorb
jmp
mov
xor
sub
push
lcall
out
jg
push
je
ret
aaa
lret
or
sbb
das
clc
pop
xchg
lcall
sub
inc
jecxz
fdiv
incl
data16
dec
sbb
test
sub
inc
push
loop
add
sti
sbb
add
fwait
jg
mov
je
and
mov
hlt
clc
pop
icebp
in
xchg
ret
fxch
call
cli
push
shlb
jg
add
sbb
jl
inc
push
mov
mov
cli
inc
mov
ljmp
inc
add
das
insl
jbe
xor
jge
lea
mov
push
adc
dec
mov
pop
mov
add
adc
xchg
push
jle
enter
incb
dec
bnd
js
sbb
add
mov
push
rorl
pop
or
add
or
data16
jbe
es
out
add
mov
or
mov
xorb
inc
sub
xlat
ja
rorb
xor
outsb
dec
or
lret
movq
adc
and
add
imul
fbstp
mov
sub
loope
iret
dec
jmp
fisubrs
or
inc
adc
pushf
add
pusha
lahf
jg
xor
test
mov
and
mov
pop
pop
adc
hlt
xchg
push
mov
mov
lods
stos
loope
lock
pop
xor
sti
clc
or
pop
pusha
arpl
add
stos
stos
add
imul
xchg
and
test
roll
adc
and
jecxz
mov
andb
sbb
and
pop
cmp
mov
cmp
mov
pop
add
inc
add
jl
jg
adc
or
inc
fstps
cmp
mov
gs
cltd
ret
dec
sahf
pusha
mov
push
add
inc
push
outsl
adc
add
adc
cmp
mov
bound
dec
adcb
inc
mov
dec
dec
outsl
mov
test
popl
mov
rol
sahf
inc
adcb
dec
lods
add
add
loopne
cmp
cmp
popa
arpl
cmp
lret
out
mov
sub
je
add
clc
out
pop
nop
or
cmp
gs
fsubs
fildll
dec
adc
mov
inc
push
or
cwtl
outsl
mov
call
mov
stos
push
xchg
add
cmp
xor
jb
fcomip
inc
cmp
ds
jo
pop
inc
lret
negb
iret
xor
inc
leave
cmp
loop
sbb
pop
and
pushf
inc
cmp
inc
sbb
sbbl
add
push
add
clc
push
sub
mov
jb
fstpt
pop
sbb
xchg
mov
or
sub
repnz
cmpl
inc
int
out
cld
xchg
xor
cmp
add
or
push
adc
mov
loope
inc
dec
mov
shll
ffreep
adc
xor
add
lods
adc
incb
fs
jle
sbb
inc
sbb
fwait
inc
enter
jl
mov
and
inc
sbb
add
fistpll
inc
or
mov
push
push
pop
leave
iret
add
mov
mov
icebp
ja
and
pop
add
sti
inc
outsl
jle
cmpsl
imul
xor
pusha
mov
stos
sti
add
inc
ss
in
xor
mov
add
pop
xchg
jle
mov
das
mov
in
sahf
ret
sub
mov
jmp
inc
xchg
pop
xchg
inc
push
lret
pop
bound
pop
adc
or
xor
ja
mov
test
aas
push
daa
adc
mov
push
inc
sbb
ror
mov
add
cmp
das
les
add
jge
fcompl
std
jmp
je
rclb
mov
dec
dec
sti
das
mov
dec
sub
push
mov
sbb
lock
push
and
cmc
call
call
es
pop
mov
gs
aas
cmp
rclb
in
cmp
lock
mov
call
int3
dec
add
in
pop
xor
xchg
mov
sub
push
shlb
in
cmpsb
push
adc
adc
sbb
inc
adc
sub
mov
pop
movsb
inc
shlb
pop
xchg
xchg
lcall
add
adc
lea
outsb
push
pushf
adc
sbb
jp
inc
jg
fdivr
imul
bound
mov
add
sti
mov
pop
aam
add
push
pop
mov
add
cmp
push
mov
andb
negl
dec
adc
mov
mov
add
inc
pusha
mov
test
ja
mov
inc
jmp
or
dec
adc
fiaddl
and
shlb
nop
loop
adc
repnz
sbb
inc
cmpsb
xor
fxch
push
add
add
sbb
xor
jae,pt
les
mov
mov
popa
aam
enter
aad
les
or
or
into
dec
into
xor
or
sub
push
mov
push
cmp
es
fwait
cmpsb
add
loope
rcrl
clc
dec
mov
jbe
outsl
mov
push
clc
push
xchg
push
sbb
call
cmp
push
sub
jb
xlat
outsl
sub
push
fcoml
mov
cmpl
mov
add
imul
test
call
ret
roll
lds
nop
fwait
or
or
add
mov
xchg
add
in
push
lds
ljmp
add
mov
inc
mov
or
ljmp
call
pop
ret
icebp
mov
fnsave
loopne
push
test
adc
mov
dec
test
add
mov
movb
aas
push
adc
push
push
hlt
negb
xchg
lds
mov
dec
test
aas
mov
inc
ja
and
push
insb
test
adc
push
mov
jle
test
inc
xchg
in
loopne
push
lods
movsb
ss
fwait
outsl
mov
xchg
shll
mov
inc
inc
xor
pusha
rcll
cmp
lret
nop
scas
mov
xor
sbb
cmc
aad
popa
in
mov
cld
call
xor
dec
dec
in
xor
scas
jp
ret
stos
or
js
mov
leave
add
cli
push
or
and
ds
test
push
testl
lcall
add
mov
sahf
add
xchg
shrl
mov
xor
lcall
outsl
cmpsb
negb
mov
jecxz
icebp
fists
pop
or
imul
andb
pop
add
mov
jle
js
stc
sub
jbe
mov
jge
cmp
sbb
js
sub
outsb
cmp
push
inc
hlt
xchg
adc
outsl
jo
mov
out
bound
cmp
ljmp
mov
mov
inc
add
stos
cmpsl
add
pop
jnp
inc
sbb
xor
sbb
bound
mov
dec
mov
roll
add
out
dec
pop
pop
and
inc
add
das
in
push
imul
stc
data16
jb
stos
mov
je
stos
mov
out
sbbb
shrl
pusha
xlat
aad
mov
pop
scas
loop
jle
cmp
mov
sbb
xlat
aas
xor
call
mov
dec
outsl
fmull
out
jg
scas
cld
decl
jns
movb
vmread
xchg
aaa
push
xor
repnz
jb
dec
rclb
jno
mov
pushf
pop
js
mov
xchg
pop
clc
lcall
lods
not
adc
mov
or
fists
lods
and
jne
inc
dec
mov
and
jno
out
push
xor
int3
mov
arpl
ret
shlb
jo
js
test
dec
mov
sub
sbb
xor
lods
sahf
add
pop
ret
fnstenv
cmpsb
jmp
sbb
ss
xor
dec
insl
cmp
dec
ret
cmpxchg
or
subl
add
subb
xchg
xchg
inc
xchg
xor
add
cld
movl
push
inc
adc
stos
cmp
sbb
and
ds
pop
into
add
and
clc
add
int3
cmc
sbb
lock
jl
xor
sub
scas
das
sbb
insl
xchg
mov
mov
jb
les
mull
mov
fbstp
mulb
xor
push
jb
mov
jecxz
xlat
into
cmp
push
push
sub
mov
out
push
data16
cmp
stos
lcall
cmp
rclb
cmp
jge
popf
sbb
loop
mov
add
js
imul
pop
aam
pop
outsb
dec
mov
lea
add
fstps
out
add
pop
mov
pop
push
decl
enter
sub
mov
scas
push
in
test
add
sbb
sub
add
mov
inc
mov
or
rclb
mov
sahf
fwait
addb
jp
pop
push
xor
xchg
and
adc
cmp
cmp
sub
dec
mov
loopne
mov
add
cmp
pusha
sub
fdivl
fcoml
orl
push
sahf
pop
push
inc
fmull
stos
push
pop
leave
add
fmuls
sbb
ss
or
enter
stc
push
stc
xchg
test
dec
jg
decl
cld
cmpl
test
cmpsl
inc
adc
stos
ret
loopne
mov
mov
sarl
nop
cltd
dec
xchg
and
insl
cmp
xchg
pop
test
ss
in
sub
cmpb
lahf
lods
pop
cld
pop
or
lds
pop
xchg
mov
push
adc
mov
sub
xchg
out
sub
cmp
das
push
lds
out
dec
fs
xchg
sub
loopne
sub
nop
adcb
fmull
sub
mov
test
mov
cmp
jmp
arpl
test
fcmovbe
lock
rorb
push
fsub
dec
pop
rclb
dec
add
xchg
repz
pushf
and
or
movups
bound
addb
nop
cwtl
xchg
in
push
mov
incl
mov
in
btr
into
push
mov
stc
or
pop
outsl
outsl
test
fidivs
push
sbb
ds
popa
add
mov
stos
int3
lock
add
sarb
dec
sbb
jle
insb
iret
jno
dec
clc
xor
inc
enter
dec
cbtw
lock
std
sbb
adc
and
cmp
pop
xor
mov
test
lahf
add
or
or
icebp
sarl
repz
mov
ljmp
lahf
mov
shr
mov
icebp
pushf
lods
inc
pop
and
lcall
add
call
or
mov
iret
mov
add
mov
cmpsb
test
stos
popa
js
and
or
sub
push
test
and
ret
loope
loopne
mov
lock
or
cli
out
mov
stos
xor
cmp
mov
mov
sbb
cmc
testb
divl
adc
and
loop
clc
dec
mov
in
pop
mov
push
cmp
jp
lock
js
sub
sbb
clc
pushf
inc
inc
test
cli
pop
popa
call
xchg
aad
pop
ja
and
jge
mov
es
cmp
clc
xchg
jae
mov
xor
xor
push
inc
rclb
pop
dec
push
cmp
jp
enter
jg
mov
dec
stos
cs
push
aam
adc
fs
dec
inc
push
pop
and
decl
pop
and
fwait
jge
rolb
mov
mov
clc
dec
outsb
cli
jno
loopne
scas
imul
popf
jo
scas
mov
loop
pushl
test
mov
shlb
pop
shll
aaa
push
div
xor
adc
pop
xor
test
mov
lret
dec
pop
stos
pop
hlt
mov
pop
pop
cli
movl
mov
xchg
jno
adc
aaa
clc
in
in
call
jo
jecxz
mov
iret
mov
cli
jmp
or
add
in
popa
int3
pop
lods
shl
xchg
cli
mov
popf
push
sti
lret
arpl
imul
and
lret
inc
sub
cltd
or
insl
xor
add
cwtl
jle
pop
xor
xlat
adc
out
rcl
dec
jo
inc
sarb
add
dec
xchg
push
inc
jg
pop
or
jb
fwait
xchg
lock
js
sub
xor
hlt
in
sbb
adc
ret
jae
sahf
loopne
xchg
outsb
sub
int3
push
arpl
imul
pop
inc
sbb
mov
xor
stos
loop
cmp
in
ljmp
dec
xor
push
sbb
insb
popf
cli
add
mov
loop
sbbb
inc
fnsetpm(287
mov
lahf
lock
outsl
jg
incb
lret
rorb
jmp
ret
sub
cmpb
pop
or
sub
and
mov
sbb
jmp
test
dec
mov
incb
mov
xchg
pop
fmull
lret
movsb
lock
jg
cld
sbb
popa
mov
adc
jo
cmpsb
clc
push
lds
mov
cmp
cmp
mov
clc
pop
pusha
vpsrad
cmpsb
loop
clc
outsl
je
out
push
std
mov
faddp
lret
jb
fs
mov
mov
lods
jno
sbb
xor
pop
and
jp
add
mov
add
js
movsl
call
std
pop
add
lret
mov
shlb
dec
cmp
and
insb
mov
loope
add
lock
jnp
loopne
mov
dec
adc
lahf
fcmove
mov
mov
xchg
push
sbb
dec
sarb
jmp
sarl
ret
cmc
lret
mov
push
cmp
nop
fisubrl
repnz
pop
or
lcall
ds
jo
mov
into
or
jb
sub
push
adc
hlt
mov
adc
add
pop
lock
shll
mov
in
and
jne
pop
add
mov
jl
add
push
imul
clc
inc
xchg
out
dec
and
pop
jmp
out
movsl
or
cld
mov
or
inc
pop
dec
je
mov
inc
loopne
cld
ljmp
adc
sub
and
add
call
add
loop
movsb
cmp
and
cmp
enter
incb
mov
ss
adc
push
dec
and
and
inc
jecxz
rolb
add
push
add
in
fwait
icebp
mov
es
add
pop
or
popf
js
sbbl
push
sarb
addl
in
xchg
mov
pop
mov
add
ljmp
mov
andl
xchg
fidivl
out
jp
xchg
mov
les
xor
sahf
dec
loopne
xchg
mov
inc
test
loop
fcoms
mov
cmp
cs
sti
imul
mov
cmpl
aaa
add
mov
jge
int
xorb
or
in
lret
jp
mov
enter
jge
pop
and
mov
xor
test
mov
xor
push
sbb
es
popf
inc
xlat
pop
jle
data16
out
xor
clc
in
push
sbb
int
cmpsl
and
or
shrl
sub
cmp
inc
lock
jno
lods
lods
fwait
jecxz,pt
pop
insl
dec
fbld
mov
hlt
mov
test
out
hlt
xor
cmp
adc
xchg
cli
ret
add
push
push
jle
adc
mov
cmp
jg
inc
xchg
lahf
js
inc
adc
and
and
xchg
movsb
test
xchg
jbe
call
cwtl
cmpl
push
and
fadds
popa
sbb
iret
push
inc
orl
test
cmp
push
insl
ret
jp
fdivrl
mov
incb
loopne
inc
stos
mov
pop
mov
ja
push
xor
sbb
xor
dec
pusha
push
repz
push
pop
in
shll
loopne
sbb
xor
addb
loopne
inc
xchg
test
data16
hlt
ss
pop
loopne
out
mov
pop
mov
sahf
decl
adcb
cmp
scas
ja
xchg
cmp
ja
mov
adc
or
add
nop
sarb
nop
mov
pop
jp
mov
mov
sahf
add
dec
in
push
aaa
mov
jl
mov
lods
adc
pusha
or
sti
dec
std
lcall
add
icebp
cmpsl
xchg
push
mov
inc
xchg
cmp
adc
mov
lret
lea
xor
pop
xchg
test
or
jae
xor
out
out
jg
xchg
iret
mov
loope
push
jmp
dec
out
cmpsl
dec
fnstenv
fsubrs
nop
add
dec
aad
cld
xchg
push
dec
add
jae
sub
pusha
jbe
cmp
and
rorb
pop
data16
mov
mov
mov
or
cli
xchg
xlat
sbb
adcb
or
fs
or
aam
pop
mov
das
sahf
xor
mov
push
sti
sbb
test
int3
dec
adc
test
push
lock
xor
push
mov
mov
xor
mov
mov
addl
mov
into
inc
test
jl
and
outsl
mov
repz
fildl
push
call
fucomip
sub
xor
test
pusha
loope
dec
mov
adc
push
lea
aad
xor
mov
sbb
sbb
addb
jecxz
aam
rolb
xchg
add
cmp
lret
xchg
push
adc
test
or
inc
int
je
sub
ja
inc
mov
lds
mov
into
sbb
rcrl
mov
enter
les
push
lret
loopne
add
mov
movsb
xchg
shl
cmp
stos
push
addl
das
data16
jg
jg
mov
clc
dec
xchg
xor
lods
push
or
pusha
ljmp
aam
mov
push
outsb
in
in
jo
add
push
adc
bound
jns
mov
push
imul
pop
std
les
push
shl
call
jg
loopne
and
or
push
ljmp
add
shll
adc
imul
lock
je
pop
lock
dec
pop
outsl
add
mov
fstpt
cmp
imul
sbb
push
mov
xlat
aas
adc
out
jbe
push
cli
lahf
scas
dec
cltd
xor
jle
iret
les
je
loop
divb
repnz
pop
shlb
sbb
out
clc
jno
out
and
stc
leave
movsb
fs
jecxz
xchg
sbb
xor
bnd
add
call
mov
sarb
jbe
xchg
sub
or
pop
loop,pt
mov
xchg
jg
cs
sbb
movsl
adc
push
dec
mov
add
jle
jnp
inc
incl
stos
roll
adc
test
cld
push
sti
or
and
outsl
xlat
mulb
enter
loopne
cmp
jecxz
lods
popf
mov
loopne
dec
inc
sbb
test
inc
out
imul
lahf
fisubrs
ds
mov
inc
dec
ret
inc
inc
jmp
roll
jp
fdivl
xor
jg
test
roll
cmc
or
scas
stc
mov
push
lock
push
adc
lds
data16
mov
xchg
call
add
lock
stos
orl
push
pop
adc
push
pop
dec
xor
pop
or
xchg
fnsave
loopne
loopne
clc
mov
cmp
shlb
inc
mov
ja
test
sub
stc
ret
pop
hlt
scas
jmp
js
out
lcall
mov
scas
lret
and
lods
in
push
stos
in
mov
mov
lahf
pop
dec
inc
lock
pop
in
jl
mov
cwtl
adc
mov
outsl
dec
lods
or
movsl
int3
and
ds
inc
sbb
out
mov
or
jae
daa
fisttpl
xchg
mov
mov
mov
cmp
add
cli
adc
out
movsb
xchg
sbb
insb
pop
push
add
and
out
sarb
cltd
shlb
push
es
mov
push
jns
js
lcall
mov
xor
and
xor
cmp
sub
sub
add
pop
test
ss
fmul
mov
cmp
push
mov
les
ljmp
adc
js
add
push
mov
mov
cld
gs
out
pop
test
cmpb
mov
jbe
ljmp
loopne
dec
sbb
xchg
and
std
std
mov
push
dec
cmp
testl
call
pushl
mov
es
clc
je
add
jge
pusha
cmpl
cmc
outsb
sbb
inc
js
sbb
pop
pop
fcomip
pop
inc
imul
jle
aam
jns
xor
mov
sbbl
out
mov
idivb
loopne
push
mov
inc
repnz
dec
adc
or
add
mov
mov
stc
mov
mov
fisttpl
hlt
mov
push
jge
mov
sub
mov
addl
mov
and
dec
mov
cmp
mov
xchg
imul
inc
std
lods
fcoms
outsb
xor
mov
add
fdivl
xor
mov
dec
sbbb
imul
pushf
sarl
add
out
pop
or
test
push
in
sar
mov
or
sbb
push
inc
aad
pushf
rclb
xchg
dec
and
push
loope
mov
sti
mov
into
cld
cmc
jl
xlat
mov
push
and
adc
mov
xchg
sti
bound
loope
pusha
in
dec
jns
and
or
stos
call
jae
sub
ss
or
aam
jge
ljmp
orb
mov
imul
popf
add
test
clc
lahf
jle
wrmsr
clc
cmp
das
aas
xchg
fidivrl
stc
adc
ljmp
std
fwait
sub
lcall
jg
arpl
mov
inc
lahf
pop
jg
das
orb
and
cwtl
pusha
and
mov
adc
xchg
and
repz
incb
mov
mov
rcrl
cmp
adc
pop
icebp
das
jle
xorl
das
adc
call
jecxz
inc
adc
stos
xchg
xor
mov
sub
sub
push
push
fcoml
mov
aam
cmc
dec
rolb
out
add
or
mov
or
fimuls
cltd
jmp
mov
sub
scas
mov
pop
xchg
mov
rolb
sbb
xor
ret
int
das
xchg
sub
in
or
into
dec
dec
pop
nop
xor
es
imul
mov
jmp
mov
dec
ljmp
stos
fsubrs
jp
xor
adc
mov
xchg
push
pop
pushf
jae
xchg
movsb
inc
push
aaa
repz
add
cltd
and
add
popa
icebp
cmpsb
push
ror
dec
adc
test
movsb
cmpsb
pop
mov
add
sbb
sub
mov
cmp
push
xlat
mov
jns
mulb
xor
dec
out
std
or
jne
hlt
ljmp
xchg
dec
dec
mov
adc
push
add
icebp
mov
ss
pusha
sub
sub
jecxz
push
cmp
sti
cmpsb
adc
stos
push
fdivr
xchg
jp
ror
test
das
test
stos
mov
repz
pandn
and
mov
adc
xor
mov
outsl
clc
fcoms
xchg
cltd
shll
fildl
cmp
and
and
push
dec
xchg
jo
out
arpl
filds
fcoms
adc
pop
push
fnstsw
les
pop
xor
mov
cmp
lds
outsb
lock
push
ljmp
push
mov
sarl
call
inc
addb
xchg
faddl
aas
rclb
and
mov
test
loop
mov
sahf
push
lahf
inc
or
in
jmp
rcrl
dec
jle
fisttpll
and
std
jg
sbb
daa
and
insl
jecxz
and
and
les
mov
inc
clc
clc
subb
int
loope
inc
loop
jle
out
or
mov
mov
pop
roll
nop
mov
enter
decl
in
jo
inc
enter
jg
or
sub
repnz
pusha
pop
mov
add
mov
xchg
jb
xor
pusha
cld
push
cmp
add
std
add
add
xor
lcall
jl
mov
jo
call
fwait
push
add
int
sub
dec
fucom
inc
insb
idivl
cmp
repnz
mov
push
jl
and
scas
jmp
and
mov
cmc
decl
ror
adc
push
out
sub
add
mov
cmp
pop
sbb
paddb
or
stc
daa
mov
rcrl
pop
jg
divb
mov
sti
outsl
inc
sarb
sbb
or
inc
mov
iret
fisubl
mov
pop
lods
in
mov
push
mov
and
and
or
pop
aam
sub
push
inc
mov
sbb
fdivrs
aam
lcall
outsb
pop
xor
testb
aas
fldl
jl
pusha
stc
inc
add
sahf
aaa
popf
adc
and
mov
repz
data16
cmp
incb
outsb
pop
mov
jo
or
mov
add
daa
fwait
scas
sbb
jmp
test
mov
lret
lods
out
mov
fwait
or
std
cwtl
imul
dec
pop
push
stc
push
and
loop
enter
lcall
andl
roll
test
ljmp
jbe
sarb
add
in
aas
lret
jns
pop
sbb
add
pop
push
mov
inc
imul
lock
cmp
stos
jge
jg
xchg
sub
cli
add
mov
imulb
xor
mov
xor
inc
rcr
and
stos
mov
xor
ss
jo
fucomip
shlb
mov
xor
xchg
loope
lock
lock
jo
sbb
out
mov
add
sub
int
mov
sub
fcmovb
adc
mov
sarl
ret
xchg
outsb
cld
outsb
dec
mov
cmp
and
push
in
outsl
pop
push
mov
xchg
sbb
lds
or
push
pop
sbb
incl
xor
pop
js
mov
incl
and
out
popf
sbb
in
mov
adcl
leave
mov
cli
jg
inc
out
aad
bnd
mov
iret
sub
lds
decl
cs
jo
clc
mov
add
pop
fnstsw
inc
add
sub
call
js
addb
xor
lret
nop
push
add
add
or
sub
test
jecxz
or
mov
pushf
stc
mov
popf
cmp
and
xor
pop
outsb
adc
daa
arpl
xor
popf
inc
xor
jl
pop
pusha
fnstenv
aad
je
mov
ror
shll
and
nop
inc
mov
cld
test
js
xchg
mov
xchg
in
std
or
or
and
inc
insl
dec
imul
rcrl
cwtl
iret
nop
fdiv
outsl
test
lods
cltd
add
scas
sti
imul
xor
inc
cwtl
mov
xor
dec
adc
cwtl
xchg
push
sub
loop
sbb
add
dec
or
mov
cwtl
rolb
dec
popa
xor
mov
icebp
and
dec
or
mov
fmul
inc
pop
lret
mov
mov
add
jo
push
mov
push
add
mov
sbb
add
rcrl
test
int3
inc
or
push
js
pop
sub
sbb
dec
lock
rolb
cli
subl
and
test
sbb
clc
nop
pop
xchg
outsb
and
mov
mov
and
cmp
cmp
xchg
push
test
out
cmp
push
jno
pop
pusha
bound
cli
adc
xor
loope
mov
jl
add
mov
push
sub
pop
clc
adc
add
roll
repnz
push
ficoml
adc
sbb
popa
cmp
hlt
jbe
and
pusha
clc
test
mov
adc
test
mov
fiadds
mov
sub
sahf
sub
xor
stos
add
add
mov
mov
dec
ret
mov
fs
sub
add
mov
sub
xor
adc
pop
sarl
ret
dec
and
icebp
sbb
popf
add
pop
pop
xlat
inc
xchg
adc
add
xlat
push
insb
enter
orb
cmp
fucomip
dec
or
push
inc
mov
add
addr16
xchg
cld
gs
int
aad
icebp
xor
add
mov
les
cmpsb
jb
pop
fcoml
jns
mov
mov
icebp
scas
into
divb
dec
add
roll
sbb
push
test
jo
jle
ret
out
test
mov
popf
mov
aam
sbb
pusha
add
adc
adc
mov
xor
rcrl
push
dec
cmp
push
lock
dec
mov
cmpsb
cld
movsb
hlt
cli
sbb
in
add
push
fs
push
sbb
push
add
jge
mov
mov
pop
sub
mov
outsb
mov
out
loop
insl
popa
add
test
fistps
ret
push
pop
loope
mov
ljmp
shll
mov
pop
cmc
jbe
xor
sub
dec
or
out
fstpt
test
push
xorb
fistpl
lds
jl
add
inc
push
in
pop
lock
rcrl
or
dec
sbb
loopne
xor
or
popa
mov
mov
push
ljmp
pop
aad
mov
and
pop
pop
icebp
incl
imul
xchg
add
inc
sub
push
jle
dec
lock
es
inc
dec
dec
sub
lods
mov
lcall
mov
dec
mov
jo
sbb
fisubs
pop
nop
jne
xor
test
aam
mov
cmp
xor
sti
adc
daa
jp
jmp
clc
xorb
and
or
ljmp
mov
andl
rclb
mov
les
in
into
xor
inc
out
fs
fsubs
mov
std
xchg
xchg
or
inc
and
test
pop
and
mov
jge
sbb
orl
mov
lods
cmp
and
sbb
jg
out
and
cld
sbb
mov
sub
lea
testb
rcll
push
enter
inc
fsubp
pop
std
pop
loopne
jno
adc
add
sbb
fs
add
add
mov
pop
add
sbb
adc
sbb
push
sub
test
loope
jecxz
daa
mov
in
daa
cmp
inc
push
or
enter
cmp
jg
call
sbb
sub
adc
jmp
addr16
cmp
test
add
addb
dec
mov
inc
popa
add
loope
ret
adc
xlat
shl
rorl
adc
lahf
insb
mov
enter
push
clc
out
fisubl
pop
loope
adc
out
add
mulb
mov
leave
fnsave
inc
cmp
sbbb
and
lods
test
dec
popa
jl
loop
idiv
push
shl
sub
jmp
add
xor
jge
and
call
jo
rep
clc
jl
dec
jl
insb
inc
nop
call
sub
ljmp
or
push
adc
in
jns
js
xor
jbe
pop
cmp
xchg
xor
pushf
sbb
fcomps
mov
push
mov
mov
orl
sub
mov
and
test
push
sub
lods
popa
mov
jns
ret
jge
imul
call
lds
adcb
push
mov
rorl
pushf
lcall
push
ljmp
pop
fmul
jne
lods
mov
inc
pop
sbb
sbb
or
push
dec
jge
clc
and
dec
dec
imul
pop
movntps
bound
scas
mov
and
pop
adc
push
popf
clc
adc
cs
inc
inc
mov
or
js
jle
push
sbb
sbb
push
cli
add
inc
jl
sbb
es
mov
jno
stos
or
pushf
pop
pop
sbb
add
mov
jle
mov
lods
mov
push
scas
test
push
push
inc
scas
sbb
push
addr16
notl
sub
push
sub
sahf
cwtl
xchg
lock
mov
cld
mov
push
je
jecxz
je
sbb
dec
adc
adc
sbbl
ds
test
add
cld
dec
lret
adc
movsb
jmp
adcb
push
mov
test
add
nop
inc
push
pop
out
mov
in
rcr
xor
andb
mov
and
rolb
test
sti
mov
gs
or
jle
xchg
pop
outsb
mov
jp
nop
in
cmpsb
bound
xchg
sub
add
mov
or
cmpsl
sbb
fsubrs
jmp
aam
mov
adc
push
adc
sbbl
in
pop
add
inc
decb
mov
pmuludq
cmp
jecxz
gs
push
in
mov
sbb
inc
mov
mov
sbb
enter
mov
fcmovbe
or
and
push
adc
mov
aaa
insb
out
mov
push
and
xor
cmp
mov
and
test
cli
adc
call
cmp
sbb
pop
mov
loop
pop
test
scas
mov
jl
push
insb
lods
push
mov
mov
adc
push
mov
inc
xor
jg
inc
xchg
sub
testb
movsl
push
xchg
adc
test
dec
xchg
jmp
mov
in
lcall
std
ss
mov
xchg
sub
fiadds
or
and
mov
hlt
add
daa
insb
fcomip
in
in
rolb
add
es
mov
decl
sbb
mov
out
sbb
jle
and
sahf
or
add
xchg
cmp
pop
or
mov
jg
iret
roll
pop
incb
push
rcrb
cmp
sar
push
xchg
sbb
push
push
iret
pop
loop
adc
mov
not
push
adc
mov
ret
mov
fimuls
pushf
dec
mov
sub
jmp
out
movsb
push
je
xor
mov
push
xor
notb
es
mov
sbb
push
inc
out
mov
pop
enter
pop
into
dec
hlt
jge
ja
lret
xchg
or
jg
push
dec
rolb
fiaddl
fs
xor
add
pusha
clc
sahf
mov
bound
lahf
push
jbe
mov
cmp
cltd
pop
mov
roll
adc
mov
call
mov
fisttpl
clc
in
xor
bnd
insl
add
dec
das
push
decb
testl
in
cmp
adc
cmpsb
ljmp
mov
ja
fildl
jl
addl
mov
js
mov
push
mov
and
sbb
or
movsb
mov
shll
or
add
lods
add
or
adc
sbb
push
push
jl
jecxz
xor
xchg
ljmp
repz
mov
jb
pop
test
mov
fsubrs
std
and
add
jbe
inc
mov
in
lods
sub
sub
fwait
jbe
rorb
hlt
adc
in
paddw
add
sbb
dec
cmp
jne
icebp
add
bound
xor
call
jecxz
push
push
jno
adc
rorb
mov
sbb
cmpsb
aaa
adc
adc
movsb
bound
std
mov
and
push
test
push
test
ja
add
xchg
adc
add
mov
lret
mov
dec
dec
push
add
sub
xchg
xor
lock
dec
sbb
clc
stos
jbe
fwait
das
ret
sub
popa
fs
add
jecxz
push
inc
mov
jg
mov
jo
add
cwtl
mov
call
ret
in
xchg
test
divb
test
ja
int
jp
sbb
push
mov
jle
ja
mov
mov
call
sbb
push
shlb
fs
ret
js
divb
incl
sbb
das
cmp
sub
jl
or
jle
cmp
pop
mov
xchg
pop
or
and
out
xor
add
call
mov
fildll
fcmovnbe
jle
mov
inc
cmpsb
and
sbb
ret
outsb
xor
bound
repz
outsl
add
das
js
sub
jno
arpl
pop
push
adc
fstpl
cld
and
fmul
repz
and
xchg
jecxz
jg
adc
clc
lea
and
push
frstor
fiadds
loopne
pop
movsl
mov
stos
or
popa
mov
push
loopne
fwait
add
les
mov
cmp
aaa
jo
push
lds
sub
loopne
cli
and
out
adc
mov
out
movsl
sbb
in
aas
pop
push
dec
mul
adc
call
adc
jg
in
or
loope
push
sar
adc
fld
icebp
loope
lahf
jg
jg
xchg
roll
jo
cltd
xchg
in
or
mov
and
hlt
jmp
enter
adc
cmp
cmc
adc
mov
je
decl
ljmp
aas
repz
lea
mov
vsubps
rolb
adc
mov
mov
out
jl
pop
sub
fsubs
inc
cmp
decl
mov
dec
pop
and
int
sub
adc
xor
mov
mov
pop
pushf
mov
inc
aas
adc
mov
or
adc
or
es
cltd
loop
imul
and
cld
shlb
add
jge
sbb
cs
mov
xchg
push
ret
or
imul
clc
mov
and
xor
inc
cli
mov
pop
sub
adc
add
test
jae
jg
scas
fmuls
inc
pushf
lds
hlt
cmpsb
dec
cmpsl
aas
repnz
mov
dec
jp
in
aad
clc
divl
divb
pop
cld
inc
sub
push
loop
mov
adc
xabort
scas
icebp
incl
or
xchg
int3
mov
mov
xchg
cltd
push
xor
lods
dec
mov
insb
inc
lock
dec
call
jns
loopne
mov
shll
mov
fwait
add
and
jmp
cld
out
les
std
stos
cli
in
xlat
dec
jg
pushf
flds
sbb
cmpsb
ja
lahf
ljmp
sub
xlat
or
outsb
xor
mov
stos
jle
out
xor
outsb
push
jb
je
int3
push
pop
jle
cmpsb
aas
repnz
je
inc
inc
out
or
ret
aaa
add
cmp
push
sbb
xchg
movsb
mov
sahf
pop
jp
testl
mov
jo
push
sbb
ret
add
popl
xor
and
fwait
push
cltd
lea
into
movsb
mov
xchg
ljmp
xor
and
loop
cmp
fildl
rorb
pushf
pop
jl
cld
lcall
pop
pop
or
icebp
scas
out
xchg
test
test
add
jmp
aam
lcall
cmpsl
clc
jg
mov
sbbb
or
pop
leave
mov
out
movsb
scas
sub
addr16
mov
lcall
lahf
mov
incb
dec
int3
pop
daa
movl
sub
test
jnp
daa
cwtl
pusha
push
loope
inc
add
mov
mov
mov
hlt
and
mov
and
clc
push
cltd
je
cmp
ja
pusha
jo
add
lcall
adc
aas
push
jbe
mov
mov
std
rcrl
aaa
add
lmsw
mov
mov
jl
xchg
xor
std
fcmove
js
nop
call
add
sarb
insb
in
ret
mov
and
arpl
lods
subl
cmp
sub
mov
jmp
mov
mov
or
jmp
push
pusha
dec
add
or
in
add
pop
dec
cld
inc
pusha
stc
pop
insb
mov
adc
xor
sub
subb
sbb
inc
sbb
or
out
out
jl
fmull
or
fdivr
ss
add
mov
mov
aam
loopne
xchg
add
stos
adc
or
or
mov
mov
and
add
sbb
insb
push
xchg
add
adc
or
inc
push
lock
pop
mov
loope
and
and
mov
fdivl
test
mov
jge
and
push
sbb
pushf
push
push
dec
push
jo
outsl
fidivrl
push
adc
in
loopw
and
fmuls
push
fbld
and
gs
or
loopne
pop
mov
push
fldl
lret
arpl
cld
sbb
jbe
stos
ja
push
ret
push
and
imul
or
outsb
cld
or
add
sbb
js
mov
jg
out
jle
into
push
inc
lret
call
add
insb
outsb
outsl
push
mov
repnz
push
test
loop
lcall
cld
adc
insb
out
add
shlb
sbb
xor
lock
push
mov
cmp
sub
clc
call
frstor
mov
push
imull
mov
mov
dec
nop
je
rcr
xchg
dec
xor
insb
icebp
mov
jo
pop
js
pop
sbb
sub
mov
outsl
jg
mov
adcl
xchg
mov
and
or
shl
push
pusha
jl
rcrl
add
or
jbe
cmp
rorb
test
andb
stos
jo
xchg
adc
pushf
jg
mov
inc
fidivs
fsubs
mov
in
inc
lods
add
jb
repz
dec
sub
sarb
adc
mov
std
mov
das
sub
inc
or
loope
pop
mov
jo
jle
xchg
movsl
rolb
mov
xor
sub
fstp
and
xchg
popl
adc
jmp
xor
aam
fs
cmpl
int3
sub
jnp
stos
addl
out
add
fnstsw
mov
push
xor
or
popf
shl
roll
std
sub
ja
xchg
mulb
cmp
push
aaa
fimuls
cmp
sti
push
imul
xor
dec
lcall
cmpsl
pop
hlt
inc
ja
push
int3
insl
aam
popa
adc
sbb
push
inc
in
loopne
add
in
out
pop
stc
sbbb
adc
movsl
sbb
push
xchg
lods
arpl
js
push
sbb
lea
xor
and
subb
fdivrl
fmuls
in
push
pop
mov
dec
push
inc
inc
jp
push
mov
clc
test
mov
xor
loopne
xchg
daa
adc
fwait
xchg
test
adc
ljmp
push
push
mov
xor
inc
pop
xchg
xor
add
xor
mov
cmpsl
inc
sahf
jbe
xor
sahf
jecxz
mov
mov
fwait
push
inc
mov
repnz
add
xchg
xchg
addl
subb
cltd
outsb
repnz
cltd
xlat
sbb
pop
push
mov
inc
xchg
adc
rcrl
xchg
dec
cs
lock
jno
mov
cmp
rolb
add
hlt
inc
mov
ret
addb
cwtl
cmp
mov
dec
adc
lret
in
mov
fbstp
test
and
cmp
fcmovnu
jo
outsb
sub
mov
or
jg
mov
shrb
test
mov
mov
pusha
inc
or
std
out
int
xchg
xchg
push
test
lods
add
xlat
scas
adc
pop
pusha
adc
andl
sbb
shl
je
add
fsubr
subb
sbb
sub
inc
in
xor
push
push
inc
xor
jl
jp
lcall
lret
mov
sub
or
jmp
sarb
inc
mov
adc
add
sarl
and
stc
push
xchg
enter
dec
lods
shlb
adc
les
inc
call
jo
sbb
cmc
loope
adc
shrl
test
mov
gs
das
int
pop
jge
jnp
lret
jecxz
xchg
es
sbb
dec
jp
or
scas
hlt
rorb
scas
sbb
fwait
out
pusha
rcrl
xor
jo
popa
fst
movl
adcl
test
loop
cwtl
into
mov
xor
out
jno
icebp
mov
out
imul
stos
push
mov
js
gs
hlt
dec
ja
inc
xlat
pusha
je
in
pop
movsb
push
pop
and
cmp
add
or
outsb
out
scas
pop
popa
jp
mov
cld
jb
out
outsb
or
or
fcompl
xor
jnp
xchg
les
inc
push
jmp
dec
rol
stos
mov
js,pn
and
adc
std
shrb
cmp
cmp
add
add
out
push
mov
mov
jo
dec
inc
imul
std
mov
ror
xchg
mov
iret
fdivrs
adcb
cmp
out
push
mov
jl
lods
jae
jg
nop
push
cs
and
cmpsl
inc
test
xchg
inc
das
faddl
orb
sub
mov
call
and
cmpb
loopne
inc
mov
sbb
popf
arpl
out
cmpsb
sub
sbb
ja
add
call
xchg
andl
aas
mov
int3
std
add
cli
ja
icebp
or
adc
ret
or
push
and
shll
add
push
aas
inc
jb
pop
mov
in
cmp
mov
cld
lahf
sub
out
sbbb
decb
aad
idivb
into
cmpb
push
push
movsb
add
mov
in
mov
push
inc
aad
mov
pop
ljmp
stos
xchg
jae
jnp
test
stc
stos
aas
sbb
jo
jp
mov
std
test
test
sahf
push
sub
test
mov
fldenv
dec
pop
lret
test
mov
aam
ds
lcall
adc
jmp
jg
mov
mov
inc
cmp
call
mov
adc
xor
or
outsl
fcomp
repnz
push
cmp
repnz
lcall
push
jl
outsb
pop
or
call
mov
xor
scas
js
dec
jae
pop
sub
mov
or
hlt
in
mov
out
rcrb
daa
pop
push
add
xchg
test
pop
jecxz
fs
bound
mov
mov
add
mov
add
jle
lock
jecxz
lret
xchg
mov
jg
insb
movsl
sub
push
xor
mov
add
sbb
aad
mov
adc
add
xor
das
add
nop
das
cmovp
aad
mov
pop
ljmp
sarb
rcll
push
add
and
jmp
inc
mov
and
push
movsl
jbe
ret
popa
insb
rorl
and
push
or
and
xchg
or
mov
repnz
adc
enter
dec
sbb
pop
cmpsb
inc
insl
or
xchg
orb
fisubl
dec
movsb
push
and
lods
mov
mov
mov
aaa
or
adc
jb
das
sahf
fadds
repz
cs
pushl
xor
test
add
mov
sbbb
cwtl
push
cli
mov
jo
sti
push
add
xchg
in
fucomip
mov
in
jle
inc
pop
jp
lock
arpl
mov
clc
and
pop
data16
nop
imul
add
or
cwtl
bnd
clc
jg
cwtl
repz
jl
test
pop
inc
es
or
cmp
inc
inc
je
icebp
sbb
les
sbb
jge
outsb
add
cli
stos
bound
cmp
pop
jp
push
xchg
jle
outsb
test
add
cld
add
test
mov
lahf
or
mov
jge
fsubp
sub
outsb
pop
adcb
out
fbstp
xor
mov
arpl
sbb
xchg
decl
clc
mov
lds
cld
push
xor
pop
dec
cltd
mov
mov
ljmp
fadds
mov
testb
or
orb
lods
sahf
negb
out
cmpsl
and
cmp
ret
push
mov
inc
jbe
cmp
cwtl
in
test
aaa
lods
add
test
jo
jbe
push
fadds
icebp
cli
dec
fnstsw
xor
enter
stos
call
and
jbe
mov
or
xchg
sbbb
mov
add
mov
movsb
nop
out
and
pop
ljmp
lods
nop
push
push
and
inc
xchg
mov
push
fnsave
nop
and
dec
mov
adc
pusha
cmpsl
pop
outsl
insb
adc
jo
xchg
in
add
cmp
test
movsb
pushf
dec
stc
loopne
add
inc
cmpsb
adc
or
daa
pop
or
pop
lods
xor
mov
scas
je
mov
jp
and
notl
sub
outsl
lea
inc
xchg
fnstenv
scas
and
add
data16
and
aas
dec
inc
int3
enter
stos
aam
loop
leave
xlat
aam
add
sbb
roll
int3
mov
push
mov
dec
fwait
xchg
push
cmp
movl
aas
jge
lock
fcomps
fdiv
jg
das
pop
fs
xchg
jecxz
pusha
insl
mov
bts
sbb
mov
and
dec
lock
incl
inc
cmp
jmp
cmp
and
ficoml
pushf
jne
mov
cmpsb
inc
lret
fsqrt
jmp
loop
or
iret
pop
cld
jmp
add
mov
pop
int3
add
xchg
sub
xor
hlt
jecxz
dec
adc
mov
fsubrs
mov
add
push
cld
push
clc
push
stos
pop
mov
add
inc
stos
clc
mov
sbb
adc
adcl
sbb
adc
sbb
xlat
outsb
sbb
test
sub
loope
xchg
inc
outsb
sbb
out
cmp
pop
sahf
das
cmp
call
jo
int3
push
mov
js
inc
call
mov
sbb
inc
das
sar
push
or
pop
and
xor
addr16
cmc
arpl
sub
in
fcomip
mov
jp
test
call
loop
jg
inc
xchg
fsqrt
decl
jo
in
aad
js
movsb
mov
aaa
std
aas
add
mov
jecxz
sub
loop
insb
into
add
lock
aam
lret
sbb
outsl
push
sti
fdivl
add
js
xchg
out
movsb
mov
sbb
pop
dec
cmp
mov
push
loopne
push
shlb
mov
ret
pop
or
enter
divb
jmp
jge
fildl
mov
jmp
sub
cmp
loope
cmpsb
loop
sbb
push
cltd
sbb
stos
rorl
adc
inc
mov
xor
adc
mov
jg
in
jnp
sub
je
stos
movsl
rcrl
scas
add
adc
fucomip
cmc
mov
mov
jne
mov
mov
jbe
dec
cmp
cmc
ret
cmp
mov
call
adc
pop
inc
xchg
loopne
scas
aaa
mov
adc
dec
inc
fs
scas
push
incl
xchg
cmpsb
fld1
seto
nop
pop
adc
in
fs
push
lock
pop
fcmove
cmp
insb
and
fdivrl
or
ljmp
push
add
push
cmp
jecxz
data16
dec
rolb
or
lcall
mov
pop
inc
insl
mov
mov
cs
add
sti
rol
push
cmp
hlt
xchg
jge
sbb
push
push
xor
mov
in
xchg
fwait
pop
inc
rolb
test
lds
add
add
pop
push
test
sbb
out
imulb
jle
sahf
pop
sbb
push
sbb
jbe
xor
cs
pop
stos
daa
leave
orb
and
insl
decl
mov
cmp
jno
sbb
xchg
dec
pop
icebp
aaa
sbb
inc
shl
pop
jns
ds
in
add
test
cld
das
incb
daa
add
rcrb
xchg
test
pusha
sub
out
fnsave
out
push
insl
sub
test
inc
insb
inc
sbb
push
ret
gs
incl
jmp
mov
add
andb
int
decl
mov
adc
inc
jle
cmpl
pop
shrb
fcomip
aad
xchg
lods
cmp
cmp
imul
ljmp
or
leave
bound
and
mov
pop
gs
or
fdivr
cmpsl
daa
icebp
mov
jecxz
outsb
and
sbb
inc
dec
inc
repnz
mov
adc
mov
shlb
jge
fidivs
or
pop
add
in
add
inc
ss
xchg
data16
xor
add
dec
mov
lret
add
or
call
mov
mov
dec
ret
ret
jge
loopne
push
je
es
clc
push
jecxz
cmp
mov
mov
rcrb
jecxz
xchg
mov
and
pop
outsb
lahf
mov
sub
mov
nop
lret
jg
mov
leave
jae
jno
mov
call
mov
das
adc
insl
loope
mov
sti
rclb
add
pop
inc
movsb
pusha
orl
jae
pop
pushf
or
es
shrb
or
add
xchg
jl
add
imul
fsubl
xor
xlat
pop
test
subb
addb
fmull
cmpsb
roll
decl
cmp
nop
sgdtl
loope
fs
aad
icebp
unpckhps
mov
adc
movl
arpl
push
inc
jp
push
or
mov
and
pop
mov
sbb
push
or
fists
into
gs
imul
or
aas
scas
out
mov
lcall
jg
test
sbb
mov
mov
push
rol
jb
nop
mov
loope
cmp
jnp
sbb
in
sub
rol
mov
adc
inc
repz
test
mulb
pop
xchg
loopne
es
aam
sub
sbb
lds
xchg
and
mov
cmc
jp
xor
fsubs
xchg
or
sbb
push
xor
cmc
fmull
bound
jecxz
pop
jmp
sarb
cmc
idivb
cmpb
push
push
or
mov
push
fbld
in
push
inc
and
outsl
xor
adcl
and
mov
fs
fldcw
mov
nop
push
ja
dec
mov
xchg
hlt
inc
sbb
dec
xor
mov
dec
and
inc
sub
sbb
dec
or
xchg
inc
cmp
add
outsb
pop
decl
xor
les
add
adc
andl
push
loop
jmp
lret
push
js
inc
pop
jbe
add
shll
popf
out
adc
div
subl
inc
mov
pop
and
xor
sti
popf
push
lock
js
and
xlat
adc
lahf
push
movsb
and
add
mov
fistps
stos
std
lret
push
lcall
stos
lock
mov
cmpsb
pop
add
mov
ss
mov
les
sub
cmp
into
xor
dec
cld
dec
fidivrl
lds
es
add
inc
mov
inc
cmp
int3
sub
iret
mov
fiaddl
call
rcll
leave
dec
pop
mov
js
adcl
jno
fs
or
cli
pop
or
sub
dec
mov
cmp
cmpsb
sahf
ds
lods
cmc
fbstp
clc
pop
mov
nop
in
add
inc
push
ljmp
in
xor
stos
fbld
es
add
das
clc
into
add
mov
stc
and
inc
adc
mov
xchg
push
mov
insl
jle
mov
jmp
mov
push
and
clc
and
mov
int
cmp
in
mov
mov
sub
in
loope
jp
lods
mov
cld
pop
jl
imul
mov
sub
repz
or
loope
cmp
xchg
call
inc
ficompl
adc
adc
add
ds
add
push
dec
add
xchg
lock
es
es
jb
cmp
mov
stc
into
cmpsb
push
cs
mov
fisubs
sar
adc
dec
mov
fs
rol
enter
xor
xchg
jmp
inc
pusha
lock
mov
outsl
push
cld
inc
pop
movsl
js
and
cmp
lret
rolb
jle
pushl
sbb
hlt
sub
and
pop
mov
add
in
mov
dec
mov
pop
hlt
or
ds
lret
scas
pushw
xchg
das
test
mov
fbld
jns
adc
std
jmp
scas
mov
pop
enter
add
or
aas
adc
lcall
push
pushl
push
in
adc
add
testb
mov
int3
add
aad
fadd
mov
mov
xor
add
in
les
or
or
add
stos
adc
nop
and
in
or
jg
mov
je
mov
cmpsl
adc
out
xchg
xor
xor
dec
mov
aas
xchg
add
jno
sub
and
pop
ficoml
cmpsl
pushf
and
lods
sarb
lcall
mov
or
xchg
mov
mov
pusha
daa
ds
repnz
cli
adc
sbb
adc
fs
adc
mov
sub
pusha
mov
mov
es
jmp
and
nop
outsb
jg
outsl
mov
mov
xchg
aam
inc
sub
xchg
dec
andl
cmp
push
gs
lea
push
test
lcall
js
aaa
xor
enter
xor
in
push
mov
mov
adc
pop
ror
xor
cmp
sbb
sti
subb
sbb
push
pop
test
popf
jge
sub
jns
xchg
mov
in
mov
mov
adc
cld
push
jmp
fisttps
cmp
mov
daa
fistpl
or
adc
les
pop
mov
pop
jo
jb
insb
and
in
mov
sbb
jo
sub
outsb
cmc
popa
or
add
pushf
stc
test
and
jp
xchg
xchg
imul
mov
jmp
push
xchg
inc
sbb
and
in
add
sub
xchg
adc
add
adc
loope
or
push
jne
dec
pop
lea
loopne
in
push
and
scas
or
inc
pop
repnz
push
mov
icebp
jg
dec
mov
addr16
add
roll
ret
fbstp
xor
add
push
lods
mov
or
xor
xlat
lock
adc
jb
ret
test
jmp
movsb
or
inc
push
fisttps
pop
dec
mov
push
dec
jmp
sub
loop
jge
idiv
xor
push
mov
or
xor
les
xchg
or
mov
add
and
mov
mov
jae
push
mov
fsts
push
dec
cmovne
sarb
loopne
rcr
adc
cmpsb
int3
and
insb
popl
imul
test
loop
cwtl
js
ret
lods
orb
rolb
sub
and
xor
cmp
into
and
jg
and
lret
dec
jl
and
in
jno
addr16
icebp
into
pop
enter
fimull
push
push
scas
leave
xchg
stc
and
loopne
cmp
out
loope
out
rolb
incl
and
mov
daa
into
shrb
mov
sti
inc
lcall
push
jmp
adc
loop
push
cmpsb
mov
and
adcb
bound
sub
jmp
loope
fisttpll
push
ja
nop
into
push
push
cmp
int
sub
fisubl
ds
cmp
mov
xor
sbb
xchg
jb
das
mov
xchg
pusha
xor
or
js
inc
mov
lods
adcb
loopne
push
xor
jo
loopne
or
js
xchg
fwait
adc
or
sub
xchg
cmp
sub
xor
nop
cmpsl
lds
ror
ljmp
pop
jle
jg
movsl
jp
push
lods
scas
push
xchg
rclb
push
cmp
loopne
cli
pusha
push
ja
inc
ret
frstor
fdivrl
jmp
pop
xor
jb
pop
mov
and
jge
ret
into
mov
sub
mov
fcomip
incl
push
stos
roll
and
pop
sub
jno
pop
aam
adc
aaa
cld
incl
lret
mov
ja
cwtl
stos
popf
adc
out
test
loope
js
and
mov
push
and
cli
jl
stos
repz
sti
inc
mov
xor
sbb
push
repz
add
inc
sub
xchg
fcmovnb
bound
jmp
jne
mov
aaa
shlb
loop
push
cmp
jp
mov
movsl
stos
ja
call
and
inc
cmp
icebp
sbb
jle
dec
and
cwtl
inc
push
xchg
dec
push
insb
int3
mov
push
adc
bound
ret
push
mov
jg
pushl
pop
lds
lret
lock
add
mov
out
mov
inc
into
jp
cmpsb
pushl
sbb
push
xlat
ficoml
arpl
test
inc
leave
stos
mov
lret
sub
loopne
jg
lcall
shll
dec
imul
lret
jmp
push
add
decl
andb
xchg
cmp
jp
mov
repnz
sbb
jp
cmp
inc
cli
push
sub
repz
jmp
lods
cld
aad
jnp
push
addr16
into
shrb
incl
and
lahf
sti
sub
xor
sub
pop
lret
bound
sub
gs
rcll
xchg
sbb
sbb
dec
jle
jp
outsl
push
mov
rorb
and
int3
out
insb
scas
lea
repz
cmp
add
add
in
inc
mov
sahf
mov
xor
inc
sarl
mov
mov
jg
or
mov
adc
lods
es
stos
inc
icebp
mov
jg
push
lahf
xchg
xchg
mov
sahf
pop
jg
xchg
xchg
cmpsb
aaa
ja
aad
repnz
or
data16
dec
lret
loop
out
clc
jmp
add
daa
stos
mov
cld
mov
add
xlat
fnstsw
jmp
sub
sbb
movaps
mov
rorl
pop
outsl
imul
dec
gs
pushl
and
or
into
dec
shlb
sbb
xchg
outsb
adc
mov
ds
pushl
pop
insl
mov
and
lods
jnp
xchg
roll
push
iret
lret
pop
es
xchg
mov
lock
xchg
and
adc
std
movups
xor
jmp
xchg
fdivr
mov
pop
jns
je
dec
iret
iret
cmp
pop
rcll
xchg
inc
aaa
ljmp
loopne
inc
pop
push
cltd
mov
flds
pop
dec
scas
sub
into
setbe
jne
jmp
jbe
mov
addr16
icebp
jp
xor
mov
sbb
call
and
xchg
das
push
push
mov
or
sub
incl
test
inc
adc
push
mov
push
aas
mov
dec
mov
mov
shll
push
and
pop
in
mov
add
jg
sub
and
in
push
sbb
call
cmp
xor
xlat
dec
or
push
cltd
xchg
and
lods
outsb
xchg
cld
fidivrs
test
scas
sub
adc
outsl
inc
jle
xor
mov
clc
pushl
adc
xor
dec
jecxz
lcall
cld
int3
inc
xchg
mov
push
fstl
pushl
aad
mov
js,pn
cltd
jle
mov
adc
inc
xor
xchg
leave
test
pushl
lods
stos
je
das
push
add
shll
scas
jnp
adc
sub
lret
outsl
jge
int
cmp
push
inc
mov
shlb
xor
outsb
cmp
adcl
dec
cmp
inc
xor
and
mov
shrl
popa
icebp
cmp
int3
in
mov
imulb
cmp
mov
mov
inc
ret
fsubl
or
ret
mov
jo
jp
outsb
es
and
test
out
clts
mov
lcall
cmpsb
sahf
xchg
xor
and
inc
mov
xor
pop
into
lcall
xchg
cwtl
add
or
cmc
mov
fistpll
mov
xorb
gs
in
les
movsb
outsb
test
fisubs
ds
jg
xchg
ljmp
leave
jp
fs
xchg
leave
out
xor
xor
insb
addr16
call
xchg
xchg
fdivr
jmp
pop
out
in
add
jmp
ret
das
movsb
pop
gs
xchg
jno
ss
in
test
mov
testl
inc
cwtl
adc
int3
dec
out
out
out
lock
outsl
jl
and
cmp
loope
call
xchg
dec
add
cmp
inc
mov
xchg
pop
mov
mov
stc
fcoms
bnd
cmp
jl
pop
dec
les
test
decl
outsb
push
cmpsl
mov
pop
repnz
jmp
insl
add
mov
pop
in
cmpsl
lds
mov
fcoms
adc
mov
push
lret
dec
aaa
call
push
mov
sbb
out
add
mov
jbe
ficoml
arpl
xor
repz
jo
cltd
sahf
ljmp
repnz
dec
fdivrl
fdivrl
les
xchg
cmp
test
incl
fwait
inc
adc
adc
stos
mov
xchg
pop
pop
mov
or
sar
incl
jbe
loop
push
dec
or
lds
dec
jge
cld
pushf
jg
cs
cmpsl
xchg
push
insb
insl
mov
xchg
lods
cmp
sub
call
std
ljmp
mov
pop
gs
push
das
ret
add
lret
jo
xor
cmp
cltd
push
aaa
and
lret
adc
xlat
das
pop
mov
jne
repz
mov
mov
jnp
cmp
fldl
pop
mov
jge
aaa
cmp
clc
ss
jo
in
lods
enter
gs
xchg
clc
inc
fisttps
mov
popa
test
cmpsl
fimull
mov
mov
and
cli
or
bound
and
dec
fs
push
cmc
cmp
mov
incl
in
cmpsl
das
pop
sub
mov
add
rorl
or
lods
mov
outsb
xor
cmp
sahf
insl
cmp
sub
push
jecxz
sub
repnz
mov
ret
jae
xlat
mov
and
popa
pop
out
rcrl
jg
test
mov
in
nopl
jmp
movsb
cmp
movsb
sbb
mov
cli
call
repnz
cmpsl
je
xor
repz
bound
subb
cmp
adc
addr16
and
decl
and
leave
rorb
ljmp
mov
mulb
mov
incl
mov
xor
add
dec
pop
xlat
jb
jb
cmc
mov
mov
mov
jns
sbb
jle
test
mov
mov
or
jo
fidivs
mov
ljmp
xchg
jno
shlb
insb
jmp
or
xchg
xlat
cltd
fdivl
fistps
and
cmc
xlat
out
jmp
add
fwait
or
fbstp
push
adc
sbb
sbb
imul
push
dec
subl
push
mov
les
cmp
jecxz
and
push
je
and
push
testb
mov
icebp
adc
in
adc
fistl
adc
aas
jmp
outsl
inc
push
adc
cwtl
xchg
addr16
push
xorb
cld
dec
das
xor
fdivrl
not
call
sbb
add
mov
stos
jmp
jg
mov
or
pop
fucom
outsl
shlb
outsb
xchg
fidivs
add
out
rcl
cmc
xchg
mov
add
push
mov
xor
fcomip
dec
xchg
mov
aam
cli
enter
jne
repnz
stc
mov
repnz
cmp
jnp
repnz
pop
enter
aam
rcrb
jl
pop
cmp
decl
sahf
mov
mov
movsl
mov
inc
sub
add
pop
add
addr16
nop
cmpb
cmc
in
cmp
cmp
jp
cmp
cmpb
mov
push
test
cmc
jne
mov
in
es
cwtl
repz
rorb
sti
jbe
or
incb
sbb
mov
movsb
loopne
push
dec
arpl
addr16
sub
fdivr
incl
push
out
push
mov
push
sbb
arpl
mov
movsl
push
inc
ja
dec
lcall
std
lret
pop
iret
mov
dec
mov
pop
push
push
jmp
loop
xchg
ds
mov
cmp
pushf
push
cmp
aad
flds
sub
arpl
incl
jmp
adc
setp
cltd
xchg
cltd
ljmp
lret
icebp
push
incl
push
push
cli
pop
jb,pn
fs
cmp
push
cmp
call
mov
mov
int3
adc
pop
call
leave
adc
hlt
mov
xchg
adc
adc
inc
xchg
sub
ss
lock
fwait
inc
stc
popa
call
jl
fistpll
jnp
jmp
movsb
cli
popf
and
out
mov
lret
xchg
inc
adc
into
inc
cmp
push
loope,pt
je
jg
inc
dec
popf
lea
aad
adc
and
sti
or
in
jno
mov
sbbl
and
into
in
lods
pop
sbb
or
jg
sahf
mov
pop
push
ljmp
lock
pop
dec
xchg
mov
stc
jmp
mov
mov
scas
add
mov
pushf
xor
pop
int
jge
cld
push
rep
dec
push
movb
fstpl
in
jne
loop
je
bound
lcall
int
out
jnp
dec
mov
stos
pop
leave
int
jnp
js
push
add
xor
jl
decl
jbe
add
sbbl
stos
repnz
arpl
pushl
sub
cs
sub
xor
roll
rorl
lcall
or
or
jmp
mov
sbb
pop
push
xchg
xor
dec
sub
xchg
shl
insl
xchg
incl
jo
mov
or
gs
cmpsb
xchg
insl
xchg
stc
push
mov
jl
xor
stos
imul
jmp
mov
or
cmc
inc
add
and
imull
add
mov
loopne
jmp
jg
xchg
xchg
lea
cmp
jp
enter
insl
call
lret
in
inc
int
arpl
sub
int
out
adc
std
ret
jge
sub
pushl
stos
jp
cmpsb
cmp
xchg
testl
xchg
sbb
out
cmp
ja
fists
mov
cli
dec
xor
lods
fidivrl
adc
add
push
or
ficoms
adc
mov
add
add
ret
test
inc
adc
push
ljmp
add
xchg
xor
push
and
adc
jno
and
jecxz
fdivrp
in
push
jne
mov
sub
lret
xchg
rcll
or
mov
cmp
jg
mov
stos
insb
out
fisttpl
mov
xor
scas
into
inc
jbe
mov
cmp
or
and
es
adc
add
sbb
mov
ss
cmc
jmp
fcmovb
pusha
dec
bound
jmp
shlb
push
ret
inc
push
lcall
aaa
cld
ret
movsl
xor
sub
fstpt
adc
or
ret
fsts
je
inc
pop
loopne
mov
mov
test
mov
daa
js
imul
fisubs
cmpl
aas
jmp
xchg
pop
xchg
sub
adc
or
push
mov
test
fnstcw
xchg
sbb
pop
inc
pop
jecxz
push
sub
mov
push
mov
incl
push
ljmp
dec
stos
add
test
lahf
xchg
decl
sahf
xor
or
stos
push
mov
cmpsl
mov
mov
and
push
cmp
in
mov
xor
mov
sbbb
push
in
cs
pop
push
iret
cmc
jl
clc
faddl
lods
jl
add
pushl
dec
jl
pop
mov
stc
xor
loopne
in
aam
mov
lcall
pop
in
movsl
shrl
stc
push
scas
pop
in
dec
pop
adc
call
sahf
lods
lcall
pushl
test
bound
scas
xchg
mov
popa
loop
xchg
xor
mov
cltd
insb
sub
fwait
adc
push
xor
adc
sub
and
cwtl
in
aam
cld
adc
and
or
xchg
adc
and
cli
dec
sahf
jns
and
inc
cmpsl
ljmp
loop
jg
mov
pop
add
cmp
ljmp
jp
jl
push
xchg
pop
jmp
loopne
out
stc
push
and
and
jmp
ljmp
cli
or
insb
gs
and
adc
push
in
cli
mov
sub
inc
pop
jg
movsb
jmp
push
and
aaa
aam
mov
jne
loopne
shlb
lods
sub
cmp
in
ret
jnp
fsubrs
mov
xorb
xchg
imul
mov
decl
ja
jl
dec
int
aaa
xchg
loopne
jb
mov
pop
in
xor
xor
int3
dec
lock
call
sub
cmp
and
insl
mov
cli
fildll
stos
lret
into
or
sub
sub
dec
push
rcrb
cli
or
jge
sub
popf
adc
inc
testl
cmp
test
push
cmp
pop
daa
mov
cmp
out
inc
inc
push
jl
aaa
or
jg
lods
add
daa
popa
push
test
sbb
sbb
test
dec
push
mov
push
cmpsl
fsubl
push
pushl
cld
cmpsl
xchg
pop
sarl
hlt
cli
push
pop
out
enter
mov
and
pop
test
out
sar
inc
mov
das
cmc
jecxz
push
push
std
or
jecxz
ds
add
pop
enter
ljmp
shll
movsl
dec
out
and
sbb
loopne
fisubrl
pop
sti
and
ret
lcall
lcall
cs
xor
ljmp
xor
adc
cmp
fmuls
decl
inc
stos
and
fisttpl
pushf
popf
pop
daa
aam
inc
xchg
cld
mov
and
cmpsb
call
sarb
hlt
in
xchg
out
daa
fs
inc
jmp
jecxz
adc
fwait
imul
aad
xchg
xor
fcoms
outsl
outsl
jmp
inc
mov
mov
cld
ja
sbb
frstor
mov
movsl
sbb
and
stos
andl
ljmp
hlt
rcrb
in
aad
pushf
insb
nop
ljmp
and
sar
mov
mov
sahf
sub
cmpsl
ja
xlat
and
adc
out
or
push
jae
lock
jg
ljmp
cmp
or
lcall
jns
out
mov
xchg
insl
inc
cwtl
sbb
cmp
sbb
cmp
popl
mov
arpl
int
out
test
xor
jl
pop
stc
cwtl
or
lea
or
add
xchg
incl
xor
mov
push
xchg
pop
outsl
sbb
pop
addr16
fldl
dec
jmp
jg
sub
cmp
sbb
push
or
andl
out
push
ja
mov
jmp
pushf
pop
imul
fwait
cltd
clc
icebp
rcrl
push
xlat
mov
test
sbb
stos
test
cmpl
sub
cmp
ljmp
clc
mov
mov
lret
cli
out
ljmp
out
filds
fcomip
movsbl
cld
or
inc
jecxz
sub
jp
push
popf
call
mov
je
outsb
pop
lret
ret
loope
pop
inc
scas
daa
mov
cmp
dec
pushl
jns
jecxz
xor
pop
push
cmp
xor
add
jp
dec
xor
fcos
inc
pop
push
loope
mov
mov
xchg
decl
nop
mov
mov
dec
push
push
into
jg
cmp
leave
fsubl
cwtl
sub
adc
add
lods
decl
and
int3
movsb
xor
and
inc
incl
or
inc
loop
pop
bnd
js
xchg
add
mov
add
push
stos
shrb
pushl
cmc
repnz
xchg
ds
sahf
mov
push
fnsave
shll
test
cli
mov
stos
sub
addr16
fidivrs
lret
cmpb
push
xor
loopne
adc
cmp
mov
lock
or
jle
jmp
sarl
dec
mov
aaa
std
push
jae
stos
jecxz
mov
sub
andl
push
loope
inc
popa
and
pop
loopne
jbe
or
dec
test
rcl
jae
ss
aaa
cli
mov
call
pop
repz
shl
and
repz
xchg
test
aad
addr16
sarb
add
jmp
mov
mov
fisttps
addr16
fwait
into
cmp
jo
jmp
push
fbstp
orb
pop
ficoml
cmc
lcall
fisttps
mov
js
insl
pop
ret
test
pushf
jl
add
in
call
xchg
test
sahf
push
xor
dec
xchg
jmp
rcrl
mov
inc
mov
rcrb
int3
outsb
pushl
pop
and
js
dec
or
int
mov
dec
inc
imul
xchg
lret
jae
jl
decl
fs
and
jge
push
ror
leave
popa
mov
mov
mov
clc
cmp
call
or
sub
cwtl
insl
xor
subl
idivl
jo
fs
lahf
rcrb
push
mov
test
jmp
fisubrs
xorl
mov
ja
outsb
pop
pop
frstor
icebp
rcrl
mov
lcall
test
insl
mov
dec
stc
mov
add
mov
int3
dec
adc
lcall
or
repnz
es
xchg
jb
mov
in
sub
cmp
jle
lock
sub
mov
jne
in
out
xchg
test
jns
ljmp
ljmp
mov
sbb
xchg
leave
cltd
out
sub
pop
sub
fiadds
decl
int3
hlt
lods
inc
inc
push
jne
rorb
push
jecxz
in
test
jl
xchg
lock
incl
rclb
inc
inc
stos
dec
xor
dec
incb
dec
das
cmpsb
xchg
push
test
jmp
fldenv
sub
pop
xchg
out
sti
aad
inc
xor
mov
jl
pop
fidivrl
jmp
or
mov
mov
push
mov
sbb
jl
adc
scas
jl
or
data16
ret
stc
sub
add
ficoms
dec
inc
test
loope
adc
clc
xor
loope
lahf
mov
lock
repz
push
jmp
sahf
ljmp
cmp
loopne
pop
decl
in
lcall
repz
dec
loopne
mov
js
test
xchg
mov
xor
xchg
mov
out
aas
and
int3
jg
pushl
incl
and
test
das
aam
addb
addl
mov
mov
lds
fbld
jbe
outsl
ja
call
mov
mov
lahf
mov
mov
mov
add
shrb
inc
and
mov
xor
and
roll
lret
xchg
ja
clc
pushl
adc
fs
mov
adc
decl
pop
dec
sbb
adc
jp
insl
addl
jp
std
pop
push
mov
push
cld
call
test
enter
mov
mov
jle
lds
pop
add
inc
mov
decl
push
pushf
test
and
enter
jg
rorl
and
adc
rol
pop
xchg
decl
mov
mov
daa
decl
cmpsl
or
jg
test
idivl
call
adc
inc
jp
shr
nop
mov
sub
or
repz
ljmp
lods
inc
divb
in
xchg
xor
aad
sub
xchg
push
paddusw
lahf
in
or
test
xor
pop
out
js
xchg
mov
movsl
and
dec
mov
inc
pop
cmp
in
mov
cmp
adc
push
xor
jmp
imul
das
sar
mov
bound
adc
jle
mov
and
jno
movsb
mov
pushl
xor
pushf
je
ficoml
lcall
mov
adc
stos
sub
push
sub
out
dec
pop
lret
test
pop
outsb
mov
pushl
daa
add
adc
xchg
mov
jne
xorb
mov
add
cmpsb
jbe
xor
push
mov
sub
pop
mov
jno
mov
inc
xchg
dec
jp
mov
jl
mov
xchg
int3
cmpsb
jmp
sbb
and
pop
inc
ret
bound
xor
cmp
fcmovnbe
mov
lds
xchg
jb
rol
loopne
mov
xlat
in
in
bound
inc
and
adc
outsl
fwait
out
popa
ljmp
aad
mov
nop
sarb
repnz
imul
mov
cld
rcrb
push
inc
pop
inc
sub
mov
xchg
fcomps
add
push
sbbl
fdivr
add
jo
fistl
sahf
pop
cli
stc
scas
aas
sub
aas
lds
dec
mov
xor
cmpsl
jae
out
sub
loop
insl
loop
jbe
push
mov
fldl
pop
xchg
adc
scas
jns
test
enter
dec
sbb
dec
xor
push
repnz
stos
loopne
mov
add
push
andb
mov
xchg
dec
sti
push
inc
xor
ds
mov
insb
lods
adc
pushf
sub
pop
hlt
aas
mul
cltd
lret
repnz
add
movsl
xor
ss
dec
test
sub
adc
call
outsb
cli
popa
popf
dec
pop
mov
dec
cli
mov
sbb
cmp
jne
rcrb
lock
call
les
fisttpll
clc
adc
inc
shll
adc
push
int3
fcomip
std
addl
and
push
mov
xor
shr
adc
out
cli
dec
push
mov
mov
mov
dec
ffreep
addr16
iret
std
test
into
icebp
mov
jg
pushl
mov
ss
cwtl
add
andl
sbb
out
leave
xor
incl
pusha
jns
fs
andb
movsl
jg
jmp
pusha
and
icebp
fnstsw
cmp
cmpl
call
enter
and
dec
std
stc
dec
pop
mov
shrl
test
out
adc
andl
incl
mov
neg
mov
lahf
rcl
cld
push
add
in
adc
cld
cmp
add
push
pop
mov
daa
ja
and
add
mov
incl
stos
mov
sub
cmp
xor
mov
mov
movsl
jmp
add
cmp
imul
pushf
push
in
fiadds
pop
mov
mov
mov
mov
fsubrl
inc
ret
sub
popf
pop
inc
mov
ss
cmp
push
call
cs
push
iret
fisttpll
and
test
gs
push
lcall
cmp
cmp
jo
repz
push
ja
sub
pop
gs
lock
push
push
pop
bound
mov
in
add
mov
fisttps
sub
inc
gs
rcll
mov
daa
xor
or
aaa
incl
pop
mov
mov
and
adc
cmp
ljmp
mov
movsl
mov
or
mov
cld
push
sbb
fisubl
mov
call
jg
adc
fnstenv
bnd
outsb
push
dec
ret
es
mov
mov
fisubrs
xchg
inc
stos
adcb
lahf
inc
inc
adc
mov
add
test
pop
add
lcall
test
adc
int3
add
imull
lods
xchg
jecxz
cli
mov
in
or
add
aas
inc
jmp
aaa
pushf
jge
call
pop
mov
ljmp
jnp
jmp
insl
lcall
testb
in
mov
add
loop
hlt
iret
push
and
test
aas
arpl
mov
cmp
cld
jp
xor
addl
adcl
daa
stos
pop
decl
mov
int3
pop
mov
movsb
cmp
adc
cmp
adc
mov
xchg
jnp
sub
cld
mov
shll
cmp
jbe
lcall
out
mov
or
cmp
pop
ss
mov
insb
inc
insb
popf
sbb
lret
aas
jae
mov
jmp
mov
jbe
aam
setb
sarb
cmp
and
cmovns
dec
mov
cmp
mov
in
sbb
dec
test
adc
cmpsl
mov
ret
jge
std
ljmp
add
scas
or
lret
xor
das
add
pop
in
pop
incl
pop
cmp
jge
jl
xchg
int3
stc
sub
xor
cmp
hlt
stos
xor
pushl
ljmp
cmpsl
pusha
movsb
es
cmpsb
aaa
adc
mov
xchg
mov
inc
lea
push
or
shrl
mov
pop
inc
mov
and
jns
adc
pop
rorb
add
sbb
push
jge
add
cmp
push
cmp
sahf
xchg
xchg
jg
rolb
xchg
xchg
or
ljmp
lahf
aas
fs
test
xchg
cmp
jle
fistps
in
pop
pop
bsf
jg
fldl
jne
mov
xchg
mov
dec
loope
inc
mov
int
call
scas
ljmp
negb
data16
push
mov
bound
pop
pop
std
call
sbb
rcrb
ret
jp
lcall
loopne
push
ljmp
std
lcall
push
push
addr16
mov
cmp
or
inc
dec
push
into
push
int
incl
pop
dec
mov
jne
dec
jmp
xchg
fistl
mov
sbb
and
jl
mov
dec
xchg
fsts
repz
iret
iret
mov
out
xchg
pop
xchg
jns
jbe
sbb
aad
nop
mov
cmp
cmp
or
jno
shll
push
adc
xchg
std
jns
scas
adc
sbb
xor
mov
mov
call
decl
arpl
inc
inc
data16
daa
mov
adc
ds
inc
and
jbe
filds
adc
sahf
bound
out
xor
lcall
clc
mov
int
fimuls
inc
imul
sti
dec
out
jo
cltd
cli
adc
fs
inc
in
movsl
outsl
dec
cwtl
xchg
pop
dec
std
xchg
lods
inc
xchg
mov
cmp
rorb
fisttpl
lods
and
fs
loope
and
sbbb
dec
cmp
dec
js
mov
adc
mov
and
mov
or
xor
mov
mov
incl
lahf
daa
andl
dec
add
into
and
xchg
out
cmpl
call
data16
inc
push
jnp
cltd
inc
xchg
pop
pop
imul
and
in
in
pop
mov
jmp
mov
fcom
out
mov
or
mov
and
pop
cmpl
call
aad
dec
std
jae
or
mov
icebp
lods
xor
or
loop
lcall
cltd
jmp
mov
sbb
mov
nop
insb
xor
outsb
inc
cmp
fisttps
cmpsl
dec
and
outsb
cli
ljmp
mov
sub
ret
xchg
dec
inc
mov
xor
pop
aas
adc
fcmovne
mov
push
mov
adcb
sti
call
jl
pusha
ja
or
push
push
in
arpl
es
ja
push
push
or
push
inc
sbb
jne
clc
push
das
enter
aam
push
cmpsl
adc
pop
adc
and
cmp
decl
sti
test
pop
push
pop
ss
xchg
outsb
cwtl
add
push
mov
mov
push
add
pusha
call
dec
xor
mov
pop
mov
pop
mov
cmpb
fistl
iret
sarb
ljmp
xchg
jno
jno
stc
test
jmp
dec
pushf
scas
es
xchg
mov
daa
fisttpll
ljmp
into
mov
stos
aaa
sahf
or
fisubrl
inc
fmuls
scas
aam
xchg
decl
mov
adc
or
pushl
and
insb
push
mov
roll
mov
sub
fs
je
lock
inc
sub
pop
mov
adc
pushw
mov
dec
clc
cltd
rorl
insl
and
incl
cmp
inc
leave
sub
xor
dec
pop
and
and
imul
inc
mov
sub
hlt
or
scas
sbb
mov
cli
ja
gs
jo
jle
jmp
cmpsl
add
push
inc
mov
mov
dec
sub
or
xchg
test
inc
lret
scas
xchg
test
sub
cmc
cwtl
outsb
lea
jno
jl
popf
mov
outsl
xchg
lds
sub
push
or
mov
cmpsl
lahf
dec
xchg
loope
jl
sar
jg
add
addr16
dec
insl
pop
je
push
jg
call
gs
jmp
imull
dec
idivb
mov
mov
movsb
test
inc
lcall
jmp
movsl
fwait
lret
ljmp
bound
cld
xor
movsl
dec
outsb
mov
fimull
pop
cmpsb
xor
hlt
into
pusha
and
jge
test
test
fwait
fwait
mov
clc
and
in
loopne
decl
xor
outsl
imul
push
daa
out
inc
mov
inc
iret
cmpsl
pop
int
jmp
ljmp
jmp
lret
scas
cmc
mov
pop
out
mov
pop
mov
cli
addr16
shlb
push
jbe
clc
mov
push
movsb
cs
push
repnz
test
inc
sbb
add
jne
jge
and
cld
jmp
mov
xor
insl
jp
lcall
fs
ja
sar
push
mov
sbb
outsb
andb
orb
push
xorb
in
call
fsubrs
mov
rclb
push
xchg
fcomp
ja
rcr
in
sbbb
mov
dec
jle
adc
push
ljmp
inc
sbbl
pop
cmp
mov
jae
cmpsb
ljmp
pop
jns
rorb
scas
pop
dec
fucom
sahf
aaa
insb
cwtl
mov
inc
xor
das
call
out
addr16
call
cmpsl
imul
hlt
mov
pop
dec
daa
es
sub
test
incl
testb
cwtl
aas
jmp
dec
lods
jge
dec
not
or
in
and
aaa
ljmp
cmp
orb
mov
push
cwtl
jle
sahf
hlt
push
cmpsl
xor
mov
fcomip
mov
cmp
lcall
xchg
push
repz
jb
dec
jmp
jge
imul
xchg
inc
sbb
les
into
pop
cwtl
ja
xor
jge
jecxz
xchg
push
cmp
dec
arpl
mov
popf
dec
adc
xchg
fcomps
or
out
ljmp
addl
inc
xchg
jecxz
nop
clc
jbe
ffree
cmp
pop
mov
sub
inc
mov
js
cld
cmpsb
jns
adc
out
scas
mov
test
std
pop
jge
add
cltd
xor
xchg
add
push
inc
roll
mov
push
dec
jp
ret
push
cld
adc
adc
sbb
jo
mov
sbb
rcr
incl
sub
push
add
or
arpl
cmpsb
sub
lcall
adc
sub
lret
insl
xor
negl
out
das
in
ret
fdivr
cmp
sbb
in
jbe
jg
add
pop
jmp
mov
incl
xchg
xor
jp
shr
jl
jle
jne
scas
fsubp
or
add
enter
cmc
sub
lcall
pusha
jo
sbbb
sbb
enter
push
cmp
rcrb
decl
pusha
push
mov
pop
cmpsb
lds
scas
lds
push
push
add
pop
sbb
cmova
adcl
mov
fsts
aas
or
repz
xchg
or
test
dec
aas
test
es
cli
jg
sbb
fnstsw
aas
cmpsb
neg
push
mov
push
lahf
jns
lock
mov
mov
popf
pop
cmpsl
push
jmp
ret
sbb
sub
call
push
and
sub
mov
sbb
vmovlps
xorl
ds
imul
inc
fwait
inc
arpl
pushl
hlt
outsl
xor
sub
lret
dec
std
jp
mov
or
ja
testl
cli
js
loope
dec
insb
push
cmp
adc
test
fs
jae
mov
out
fdivrs
pop
fbld
lods
add
xchg
inc
mov
and
push
sbb
mov
jmp
dec
jle
inc
push
mov
push
lret
sahf
lcall
adc
adc
fucomi
lret
push
mov
mov
xchg
and
xchg
mov
mov
sbb
scas
mov
data16
push
sub
pop
pop
inc
pop
ret
or
sub
inc
leave
sub
lcall
inc
jno
repnz
mov
xor
adc
test
decl
fwait
or
cvtpi2ps
mov
dec
es
clc
push
ror
repnz
mov
inc
lcall
cld
stc
cmp
daa
pop
out
dec
pushf
mov
jns
or
incl
test
dec
jecxz
inc
push
sub
movsb
out
cmp
cli
insb
cmp
popf
imul
aas
incl
out
pop
repnz
lret
mov
jo
sub
mov
xor
fs
decl
pop
and
jmp
add
or
mov
mov
xor
decl
jnp
adc
addr16
xchg
ret
ljmp
pop
in
fcmovnbe
push
dec
lret
fiadds
ljmp
stos
cli
pop
mov
jo
push
add
xchg
loop
and
sub
push
subl
lods
jns
adc
mov
aad
push
pop
mov
ret
or
cmp
cmp
pop
clc
jne
xchg
imul
push
out
and
mov
out
sbb
push
sub
mov
loopne
scas
imul
adc
fldpi
into
fnstenv
sub
insb
pushl
inc
inc
xchg
sbb
jl
xor
pop
sub
sti
call
push
cmp
movsl
in
push
adc
out
insb
push
or
sub
imul
cmp
mov
scas
js
or
call
pop
arpl
pop
dec
push
insb
shll
push
adc
jg
inc
adc
out
push
ljmp
ret
sti
xlat
dec
mov
cld
mov
insl
inc
aaa
std
outsl
dec
in
mov
movsb
push
clc
popa
jecxz
icebp
jge
jo
popf
repnz
icebp
jg
jmp
std
fmull
cmp
pop
dec
or
xor
mov
pusha
and
pop
xor
mov
loopne
fldenv
sbb
jmp
leave
push
cmp
push
push
int3
loop
sbb
jg
xor
inc
mov
int
lret
inc
dec
xor
clc
mov
fcmovne
shl
mov
das
cli
inc
mov
int
pop
decl
mov
test
lret
insl
enter
loope
call
pop
sbb
mov
incl
jae
xor
repnz
jb
ja
dec
loope
ja
fs
dec
int
fisubrs
rcrl
inc
jne
mov
jae
fcomip
decl
mov
adc
inc
jns
jmp
fwait
imul
sub
jmp
pop
adc
push
sbb
int3
subb
sbb
dec
xor
inc
outsb
xchg
ljmp
call
xchg
push
scas
call
cmp
or
cmp
or
int3
add
cwtl
adc
incl
aaa
or
aaa
scas
imul
push
xchg
mov
lcall
test
dec
push
data16
mov
sbb
or
insb
call
xchg
mov
pushl
mov
je
xchg
movsl
mov
inc
adc
ucomiss
sub
in
mov
call
dec
mov
push
out
gs
push
lods
ljmp
fnstcw
push
dec
mov
daa
ds
enter
lcall
or
push
add
arpl
lods
insl
mov
pushl
data16
cltd
or
mov
cs
dec
xor
dec
or
push
adc
les
sub
call
or
mov
rcrl
shlb
rcll
bound
sbb
inc
xor
icebp
inc
decl
and
push
pop
lret
pushf
jl
mov
in
int3
or
insl
lea
les
xchg
incl
int
aad
sub
popa
push
dec
dec
out
sbb
sub
pop
push
jle
addl
fnstenv
repnz
sub
daa
mov
test
lods
fiaddl
xlat
stos
rdmsr
sub
xchg
jmp
enter
pop
dec
or
enter
pop
in
adc
mov
or
lahf
call
pop
clc
dec
push
sub
pop
out
fisubs
push
mov
jg
mov
mov
dec
mov
xchg
mov
jmp
out
mov
in
cmp
decl
pop
jae
add
push
mov
clc
ja
lcall
mov
cld
cwtl
inc
pop
into
imul
cltd
ret
testb
jmp
sarl
shl
push
imul
mov
test
dec
inc
pop
out
lcall
call
jge
pop
js
mov
fnstcw
cmpsb
add
in
xor
cli
xchg
hlt
mov
push
cmp
jne
imul
and
jg
incl
pop
icebp
cltd
scas
or
fildll
adc
xchg
cli
push
nop
adc
lods
pop
dec
mov
mov
stos
push
mov
pop
test
inc
inc
jle
dec
xchg
decl
push
jne
clc
in
mov
cli
bnd
ljmp
call
adc
and
xor
mov
into
inc
push
jg
xor
test
sbbl
lcall
xchg
jle
cwtl
sbb
mov
cmpb
sub
icebp
cmpsl
fbld
mov
decl
pusha
lret
out
xchg
inc
popa
jb
into
and
popf
jl
outsl
mov
lea
loope
jmp
ja
jge
mov
orb
dec
cld
xchg
push
daa
and
cmpsb
lea
sub
push
or
decl
movsl
mov
mov
fisubrl
push
movlps
enter
lock
dec
lea
xchg
mov
pop
std
decl
shll
clc
mov
leave
lods
push
mov
jl
pushl
iret
inc
lds
push
mov
stc
and
loop
mov
xor
repnz
or
jmp
add
xchg
in
insl
pop
mov
xor
data16
mov
dec
scas
jl
movsl
fdiv
or
push
jl
rcll
push
push
sahf
aaa
out
and
sub
dec
jno
pushf
cli
xchg
inc
adc
mov
insl
hlt
pop
cmp
out
adc
mov
loopne
aam
pop
push
dec
fidivrl
arpl
xchg
fsubr
mov
scas
jo
xchg
dec
mov
inc
jmp
push
add
addr16
ffreep
aas
shll
pop
mov
push
cmp
fnsave
mov
dec
push
dec
aas
rol
lods
shrb
push
jne
loop
incl
inc
je
js
pop
stos
mov
fs
outsb
test
call
cvtps2pd
sahf
mov
inc
dec
push
out
pop
fcomp
sbb
outsb
in
addr16
adc
inc
data16
jg
movsb
xchg
pushl
je
cmp
sbb
push
das
mov
jg
dec
pop
xor
sub
cmc
orb
fwait
jmp
xor
inc
sahf
loope
idiv
cmp
jle
out
data16
sub
iret
test
lret
lcall
xor
sbb
rcrl
cmpb
aad
cmp
imul
psubb
lcall
pop
mov
les
mov
aaa
pushf
ss
call
pop
xchg
inc
lret
outsl
mov
mov
shll
jl
mov
stc
sbb
lcall
mov
outsl
mov
arpl
int
add
filds
ret
dec
or
mov
xor
out
mov
inc
mov
and
daa
pushf
insl
ud0
aas
ljmp
push
icebp
int
mov
mov
fistps
fdivr
lcall
js
rorb
adc
ficompl
cli
mulb
jecxz
xchg
pop
nop
pop
cld
pushl
add
pop
bound
popf
xchg
xchg
pop
xor
in
push
jmp
in
xor
je
ds
not
add
or
sbb
dec
inc
lds
incl
lahf
in
mov
mov
mov
inc
add
jle
fcomi
call
mov
into
jge
ljmp
ss
push
movl
bswap
fcoml
cmp
pushl
pop
xchg
and
cltd
jp
divb
adc
shll
xchg
mov
mov
movsl
mov
outsb
imul
push
stos
sub
and
sub
mov
mov
ljmp
inc
in
mov
push
push
adc
push
add
popf
aas
push
mov
mov
sub
incl
inc
push
push
xchg
hlt
push
mov
xchg
punpcklwd
sbb
std
pop
clc
add
out
xchg
and
mov
call
jg
mov
std
lret
adcl
addr16
pop
pop
mov
not
imul
lock
lcall
addr16
jmp
sub
cmc
imul
push
jb
cmpsl
loopne
fldt
lret
ljmp
lahf
sub
xor
lock
repz
adc
insb
cmp
cmp
cltd
pop
and
imul
cmp
sbb
scas
pop
mov
fdivs
loop
test
dec
test
sub
jp
and
cmc
inc
pop
or
cmp
std
ljmp
into
pushf
sub
imul
push
fs
push
dec
dec
mov
jbe
pushl
rolb
fcompl
pop
pop
pusha
in
xchg
mov
sub
push
ljmp
adc
xor
je
cltd
aam
pop
jg
pop
push
rorb
pushl
pop
iret
mov
push
nop
cmc
cwtl
add
imul
inc
scas
and
icebp
lds
pusha
arpl
jg
dec
jmp
mov
inc
fwait
sub
insb
andb
fistpl
je
inc
adc
into
mov
push
fcmovb
dec
in
pop
cmpsb
sbbl
pop
loopne
jnp
mov
pop
adc
jae
push
jnp
insl
or
adc
and
movsl
out
jmp
mov
gs
cwtl
push
fadd
and
inc
cmp
out
jns
stos
and
jle
dec
idivl
xor
xchg
fimull
sbb
sub
and
or
push
fstps
outsl
movb
or
cmp
insl
push
incl
in
mov
cmp
notl
sbb
lcall
push
pop
iret
mov
pop
sub
xchg
mov
mov
sub
ja
fwait
push
adc
jnp
jo
mov
popa
fbld
xor
lods
adc
enter
xchg
mov
mov
mov
inc
add
push
pop
test
icebp
adc
mov
cld
inc
mov
call
push
imul
test
and
mov
mov
xor
jne
testl
sub
decl
es
inc
std
mov
push
sub
rorl
out
stc
imul
mov
jo
incl
cmc
pop
xchg
sub
hlt
add
xchg
and
sahf
cmp
jg
fs
adc
out
push
xchg
xor
imul
dec
xchg
loop
lcall
dec
dec
jl
push
int
orl
jmp
push
mulb
cmp
js
rorl
xchg
push
inc
jno
faddl
mov
movsb
cmp
jae
jmp
in
js
mov
mov
in
clc
jmp
jmp
loope
jle
adc
notl
jne
sti
daa
lods
xor
incb
and
cltd
pop
sub
push
jno
in
out
mov
nop
shll
lcall
jg
outsb
mov
sbb
adc
notrack
pop
jno,pt
ss
lcall
and
sbb
or
mov
xor
push
xor
pop
jl
jb
inc
lea
movsl
jp
sub
std
mov
xchg
and
test
jp
dec
ss
loopne
mov
jmp
and
xchg
lret
mov
lcall
popa
or
push
push
jb
ror
out
mov
addl
clc
std
ret
mov
pop
rcr
cmc
arpl
push
xchg
fcoms
dec
stos
daa
adc
fidivl
mov
dec
sub
arpl
mov
jle
nop
xorl
subl
into
jae
or
mov
cmp
jl
mov
fisttpll
pop
test
lahf
xor
pop
mov
jmp
aaa
and
and
adc
iret
adc
xchg
or
call
fcmove
pop
into
add
jmp
inc
lcallw
aas
mov
fldcw
addr16
or
jno
mov
jmp
roll
add
push
cltd
adc
jp
notl
inc
movsl
push
call
pop
sub
fwait
inc
mov
lea
dec
mov
dec
mov
cwtl
jmp
ret
mov
cmpsb
icebp
adc
pop
jo
mov
jp
pushl
lock
jbe
or
fiadds
mov
stos
add
inc
and
xchg
pop
stc
jmp
decl
fbld
hlt
push
push
pop
das
repz
pop
lds
xchg
ljmp
sub
ljmp
pop
int3
scas
push
imul
aas
sub
xor
ret
mov
lods
ljmp
jmp
sub
movl
sbb
pop
pop
call
popa
repz
push
push
mov
movsl
fwait
inc
aaa
inc
mov
adc
cmp
dec
add
sub
dec
pop
clc
sub
mov
xchg
daa
clc
fs
add
mov
sbb
rcrl
stc
adc
pop
cld
pushl
ror
adc
pop
and
dec
push
mov
imul
incl
adc
nop
fwait
movsl
xlat
jmp
mov
or
cld
mov
pushl
cld
jnp
cld
mov
or
call
je
mov
jg
call
jmp
mov
add
xor
mov
push
pushl
std
icebp
aad
shrb
gs
xchg
or
and
fidivrs
mov
xlat
jg
ljmp
addl
sub
push
gs
inc
add
movb
mov
mov
xchg
pop
popa
inc
dec
and
xchg
lods
sbb
add
aam
and
push
scas
decl
push
add
je
adc
imul
popa
mov
fidivl
mov
mov
test
cmp
stos
data16
vpmullw
jno
lea
lcall
popa
movsb
mov
ljmp
or
mov
daa
xor
out
clc
mov
xor
dec
mov
jecxz
jg
jbe
das
pop
mov
nop
out
mov
outsb
pop
loope
xchg
jns
neg
imul
inc
pop
mov
jae
dec
ljmp
jmp
test
and
stc
sbb
mov
inc
pusha
or
rcrl
call
mov
test
lcall
xchg
add
sahf
cwtl
dec
fcmovb
imul
mov
into
lcall
in
test
and
jmp
pop
icebp
js
add
cld
arpl
or
jmp
call
inc
pop
daa
xor
and
mov
mov
mov
test
sar
pushl
stos
adc
jg
cmp
addl
iret
mov
sbb
pop
ds
cli
pop
loopne
bound
in
and
popl
and
adc
add
dec
rcll
sar
test
jp
pop
orb
xchg
xchg
or
cmc
push
sbb
cmp
add
in
call
data16
add
add
mov
sarb
cli
sub
add
and
dec
call
frstor
enter
dec
add
insb
add
push
mov
add
pusha
imul
add
lds
add
das
in
repz
or
or
add
add
daa
loop
int
pop
or
addb
sbb
sub
je
lcall
inc
lcall
xor
lds
push
and
pop
repz
add
les
rcrl
mov
mov
xor
or
xchg
mov
test
jno
dec
push
jb
jp
incl
jae
cli
push
mov
inc
div
lahf
lods
mov
nop
in
out
add
push
enter
cmp
sub
cmp
dec
push
bound
sbb
push
mov
mov
adc
mov
leave
fisubl
inc
sbb
sub
add
push
lods
loopne
add
repnz
push
jecxz
mov
pop
shlb
push
add
ss
xchg
or
push
dec
adc
mov
jbe
fsubs
test
sti
ss
sbb
add
bswap
hlt
test
icebp
add
mov
out
pop
shr
mov
mov
sub
push
sub
lds
lahf
add
std
popa
daa
xor
int3
int3
loop
pusha
test
sub
pop
or
jae
imul
or
stos
xchg
sbb
adcb
vpshufhw
dec
add
dec
subb
or
loopne
mov
dec
addr16
mov
adc
push
sub
ficoml
sub
mov
dec
std
fcomip
add
in
sbb
pushf
lock
movsl
cld
jg
fstp
popf
das
dec
cmpsb
xchg
push
xchg
enter
and
add
mov
sub
mov
cs
xchg
loope
adc
jns
pop
jo
and
push
inc
mov
pop
lock
xor
or
push
add
rcrb
sub
push
push
jo
mov
xor
enter
test
mov
ret
test
icebp
cltd
out
dec
sub
pop
or
mov
sbb
sub
xor
lock
sub
out
inc
je
scas
adc
add
cld
fst
and
fidivs
xor
push
or
mov
adc
aam
mov
add
int3
pusha
jle
in
out
rolb
nop
gs
bound
lds
jp
sbb
xor
mov
cwtl
add
and
pop
lock
sub
pop
cmpb
dec
xchg
mov
sahf
cmpb
mov
mov
bound
mov
fisttps
in
jno
stc
mov
cmp
jg
sbb
and
mov
pop
push
cld
mov
mov
stos
push
add
test
rorl
push
mov
add
cli
mov
fnstcw
rolb
and
stos
push
std
or
inc
and
loope
adc
push
sub
pushf
cltd
push
fisubrs
sub
mov
add
push
lock
push
aaa
push
inc
andb
inc
pop
pop
inc
mov
mov
sub
push
lock
pop
push
jne
jb
lods
test
adc
mov
je
jg
sarl
sub
jmp
imul
loop
push
mov
or
mov
and
inc
in
mov
sbb
xchg
add
aas
insb
mov
lods
clc
push
push
jno
xchg
and
xor
push
inc
scas
and
push
add
dec
adc
nop
or
call
ror
push
xchg
xor
adc
dec
cli
cli
add
inc
xor
push
pop
sbb
dec
leave
xor
xchg
pop
or
scas
and
ljmp
into
or
test
scas
sub
add
push
lret
insb
js
jmp
es
imul
inc
lods
loope
inc
or
in
mov
scas
fnsave
das
add
or
mov
sbb
mov
sub
fbstp
fbld
lods
cli
in
adc
sbb
dec
jbe
sarb
mov
add
and
aam
mov
clc
scas
aam
inc
js
jmp
xor
cmc
sbb
push
add
nop
push
push
pop
adc
in
or
cmpb
dec
imul
loope
push
fisubs
xchg
fdivrl
or
dec
rcrl
mov
mov
bound
shlb
sbbl
testb
push
mov
sbb
cld
and
cmp
or
mov
adc
in
addr16
ss
cmp
xor
out
mov
dec
and
data16
rclb
lock
je
xchg
add
or
push
int
data16
popf
rcrb
add
pusha
fsubs
nop
idiv
aam
fisttpl
push
rcll
test
push
rcrb
mov
mov
aam
jecxz
lock
sbb
add
add
mov
jb
mov
adc
dec
adc
mov
sub
push
pushl
push
xchg
and
dec
in
call
mov
outsl
jmp
jnp
in
ret
pop
push
scas
add
push
and
adc
cmp
cmc
lods
test
loope
xchg
mov
pop
das
cmp
sub
sub
stc
inc
add
add
test
or
test
dec
imul
jecxz
ljmp
and
mov
lock
mov
call
adc
or
std
aas
clc
inc
lret
xchg
mov
pop
xor
ja
in
sti
mov
in
jae
mov
fadds
push
xchg
loop
loopne
jecxz
lods
jle
push
mov
test
jle
aaa
sbb
push
out
cmp
cli
dec
mov
inc
ljmp
repz
sbb
incl
mov
push
in
data16
rcl
push
idiv
scas
scas
lahf
mov
jecxz
divl
mov
jp
movsl
adc
pop
add
decb
lock
push
fisttpl
std
ja
pop
lcall
imull
aam
clc
in
shl
dec
inc
pop
lcall
or
repz
in
or
dec
call
add
das
ret
push
test
sub
dec
out
push
push
lock
or
adc
sub
cmpsb
mov
loop
mov
daa
lret
xchg
repnz
and
inc
fcomps
test
and
mov
jl
outsb
push
jae
sbb
xor
and
clc
sbbb
insb
out
xor
push
add
vpmulhuw
cmp
ljmp
inc
inc
mov
stc
call
pop
cmc
roll
lock
mov
test
push
aam
add
cmp
sub
push
and
lock
stc
adcb
dec
xor
xor
mov
shr
bnd
es
push
xchg
mov
pop
pop
hlt
xor
pop
adc
loope
cld
fucomp
xchg
xor
cmc
mov
cmp
out
xchg
pop
push
mov
push
call
push
lahf
sub
pop
push
xchg
mov
xor
adc
jmp
xor
and
jge
inc
test
rclb
adc
sub
and
adc
pop
mov
or
pop
mov
push
adc
out
ret
clc
jmp
in
dec
leave
cmc
push
mov
xchg
mov
shlb
push
sahf
aad
pop
cmp
mov
inc
daa
mov
call
cld
mov
push
dec
rcl
cmpsb
mov
and
test
xchg
hlt
mov
push
cmp
scas
xchg
rorb
add
xchg
inc
popf
cwtl
mov
lds
mov
pop
dec
mov
sbb
rorl
decl
sbb
rolb
push
rep
inc
lock
xchg
adc
in
addr16
enter
lcall
mov
lock
sarb
movsb
dec
dec
push
adc
addb
mov
loop
xchg
pop
inc
scas
out
pop
sbb
pushf
push
incl
loopne
cmpsb
mov
dec
or
cmpsb
xor
or
inc
sbb
sbb
adc
sbb
out
add
jl
call
add
jl
mov
and
jbe
xchg
rolb
cwtl
jle
jp
lods
inc
sbb
sbb
pop
cmovo
nop
jne
movsb
adc
je
xchg
adc
aad
aaa
loop
xchg
mov
jns
lret
cmp
dec
push
or
mov
dec
cmp
les
repnz
add
inc
stos
xor
loop
jmp
cli
xor
pop
shrb
fisttps
push
dec
fwait
add
jl
fidivl
mov
xchg
or
stos
inc
loop
mov
pop
mov
xchg
pop
or
aam
adc
movsl
lods
das
jo
loopne
lock
jge
sub
push
xor
gs
aas
cld
sbb
adc
lahf
loop
and
inc
xor
or
pushf
out
mov
sub
jl
xorb
jecxz
jmp
hlt
outsb
enter
inc
pop
rorb
push
test
into
addr16
push
lahf
movsl
lcall
movsb
out
dec
and
xchg
sub
adc
sub
mov
cmp
pushf
nop
push
push
jg
pop
adc
add
xchg
add
xchg
mov
add
rorl
stos
fcomp
lods
into
add
pop
aaa
add
push
shl
push
outsl
cmp
sub
mov
lcall
jo
fs
arpl
cmp
mov
repnz
or
xor
add
jge
call
xor
mov
jns
imul
enter
stos
ret
pop
cmp
cmpsb
or
jnp
dec
in
jbe
lock
push
das
jl
add
lret
shrb
add
cmpb
cmp
enter
cwtl
icebp
mov
inc
fisttps
dec
inc
out
mov
or
insb
push
mov
pusha
sub
stos
idiv
xchg
lock
flds
cmp
sbb
mov
scas
aam
inc
sub
mov
mov
push
mov
xchg
in
xchg
jne
sub
push
sbb
into
push
sub
inc
and
adc
pop
sbb
es
xor
int
sub
mov
pusha
fwait
ja
or
cmp
jbe
js
mov
enter
out
pop
mov
cwtl
xchg
xor
cld
dec
and
ljmp
mov
loop
jge
stos
or
shlb
xlat
scas
cmpl
mov
leave
mov
mov
fidivrs
int
shlb
xor
es
pop
lock
les
ficompl
sbb
inc
call
mov
repnz
in
jge
aas
mov
test
adc
sub
mov
push
mov
mov
es
sbb
pop
adc
or
cld
add
mov
call
pusha
add
mulb
cwtl
xchg
rcr
js
outsl
add
bound
xor
xchg
push
pop
push
mov
orl
sarb
rcl
and
mov
dec
and
or
or
mov
pushf
jg
test
icebp
fidivl
sbb
jbe
sub
mov
andb
inc
arpl
or
mov
push
js
cmp
lods
mov
dec
mov
xchg
inc
adc
xchg
push
add
out
test
ret
jg
mov
pop
lahf
add
test
pop
icebp
in
loop
mov
or
dec
jae
push
push
pop
mov
mov
insb
jo
jg
mov
clc
call
imul
mov
or
repz
push
cmp
jo
outsl
ja
inc
cmc
icebp
and
add
aaa
dec
movb
mov
sub
pop
movsl
mov
arpl
scas
cli
xchg
test
sub
roll
or
or
cltd
jo
xor
xchg
jecxz
nop
jecxz
dec
cmp
dec
jno
jg
stos
push
mov
mov
and
add
or
and
mov
and
scas
subl
add
jle
pushl
add
cmp
jecxz
scas
ficomps
xchg
inc
add
in
and
std
sbb
dec
jbe
push
test
sbb
decl
inc
dec
cmp
jne
jo
ds
sbb
enter
mov
sti
or
cwtl
pop
scas
jg
dec
add
adc
push
dec
ja
sub
push
pop
decl
dec
jb
pushf
in
jp
cmp
cld
cmp
cmp
sub
out
cmc
jg
insl
or
sbb
fs
pop
ror
push
xchg
push
xor
push
mov
push
lock
or
dec
mov
outsb
in
sbb
loopne
push
adc
imul
mov
xchg
movsb
lock
cmp
and
les
dec
mov
push
aas
lahf
jmp
mov
insl
es
test
outsl
into
mov
cmpb
test
mov
jbe
inc
push
xor
es
call
mov
rolb
sbb
test
imul
rcrl
incl
add
cmp
push
mov
adc
xchg
or
enter
sub
mov
mov
push
je
repnz
outsl
adc
sbb
ss
rorb
jbe
push
lea
sti
and
fwait
in
jb
cld
xor
movsb
aad
xchg
jo
push
stos
jbe
sbb
jb
push
loop
and
je
shrb
sub
aas
lcall
mov
add
add
push
pop
fwait
xor
gs
decl
add
pusha
push
es
rcl
in
mov
into
xchg
mov
ss
ss
call
sub
push
fstpl
sbb
fcomi
sarb
add
mov
jmp
lret
push
cmp
pop
imul
rcl
pushf
add
mov
adc
xor
lock
filds
inc
add
push
in
or
and
repz
aaa
push
mov
bound
leave
cmp
mov
push
mov
and
shll
mov
fiadds
lock
into
jo
into
loopne
push
popf
in
push
adc
les
les
sub
stos
pusha
sub
sbb
mov
push
test
sti
xor
fisttps
nop
orl
nop
inc
incl
pusha
xor
add
add
fldl
add
add
jl
pop
cmpb
or
popf
movsb
mov
pop
and
leave
or
ret
nop
jl
or
jb
lcall
add
inc
aaa
cmp
push
pop
popf
adcl
pop
add
ret
xchg
xor
lds
pop
jecxz
push
pop
into
mov
cmp
mov
pop
mov
outsb
and
pop
adc
cmp
dec
inc
sahf
cmp
pop
loop
and
outsb
clc
data16
add
mov
mov
test
push
add
sbb
add
pop
cmp
lahf
inc
iret
jno
push
dec
ret
cs
lock
lock
xchg
pop
pusha
daa
mov
add
push
sbb
cmp
pop
out
stos
ss
cli
xchg
mov
je
pop
iret
lods
mov
sbb
movsb
ds
jbe
or
push
pop
sbb
ret
pop
cld
add
xchg
add
loop
inc
inc
scas
sub
add
ljmp
movl
pop
xor
hlt
aaa
pop
out
nop
mov
mov
aaa
pop
rcll
dec
sub
pop
or
in
sub
pop
test
jnp
outsb
cmc
inc
shr
cs
filds
fistps
pop
fimull
lods
mov
dec
movsb
add
js
add
sbb
pop
jo
or
sbb
lcall
mov
xorb
cld
nop
enter
mov
xor
xchg
xchg
add
or
ljmp
stos
arpl
add
sub
dec
jg
sub
insb
data16
jb
adc
lock
pop
sahf
xor
test
mov
add
adc
test
push
icebp
ja
push
packsswb
add
sti
xor
js
jmp
cltd
mov
add
add
or
inc
test
cmp
inc
or
cmp
mov
xor
mov
das
out
pop
xor
xor
cmp
push
sub
xchg
mov
or
and
fcomip
and
data16
sbb
mov
jno
mov
sub
push
push
push
sahf
sbb
int
or
arpl
movb
nop
or
cmpsb
lock
cmp
inc
mov
fs
rclb
cmp
pop
lock
ja
test
orl
cli
lcall
pop
int
mov
es
jo
jp
dec
imul
jle
call
test
std
adc
inc
sbbl
add
jo
xor
dec
loopne
lods
add
mov
pop
mov
in
mov
arpl
sub
cmp
push
pop
jl
je
jo
pop
add
or
mov
sub
add
out
mov
pusha
lock
pushf
cmc
and
shlb
pusha
sbb
adc
sarb
stos
adc
test
dec
add
adc
fidivs
sub
outsl
test
cs
push
orb
mov
xchg
enter
push
enter
popa
mov
sti
or
mov
pop
inc
xchg
mov
rcr
inc
inc
inc
into
push
push
sub
icebp
pop
push
movb
jnp
mov
jg
mov
mov
mov
dec
clc
test
and
push
mov
adc
mov
enter
mov
jne
les
mov
push
fwait
ja
mov
js
sbb
push
and
outsl
add
adc
push
loope
inc
aaa
ret
sbbb
mov
or
cmp
cs
stc
push
xchg
or
and
aam
adc
jae
jo
push
flds
rclb
out
pusha
pop
fisttps
mov
inc
sub
jp
jbe
pop
les
in
fcomip
pop
loop
cwtl
hlt
mov
movsb
aam
into
hlt
imulb
lods
inc
in
push
push
rorl
push
hlt
pop
and
loop
into
pop
je
dec
sub
test
mov
je
imul
gs
pusha
add
mov
sbb
inc
lds
inc
adc
push
mov
inc
inc
loop
adc
ss
rcrb
cld
outsl
mov
or
pusha
mov
ret
rcrb
pop
push
adc
mov
jg
inc
and
cmp
push
jecxz
add
xor
xchg
out
into
xchg
aas
mov
pop
mov
fwait
cwtl
mov
pop
adc
cmp
dec
xchg
je
pop
mov
xor
and
push
push
pop
mov
push
fadds
add
or
xchg
pushf
out
lret
xorb
mov
cld
loop
push
inc
cmpsl
jecxz
add
das
jl
call
mov
mov
sbb
and
aad
push
or
dec
sbb
inc
outsb
and
lods
enter
int
in
shl
mov
mov
inc
lret
sar
jg
push
aad
inc
ljmp
inc
je
inc
jle
jg
jle
stc
push
call
sub
loop
push
cs
cmc
dec
in
and
dec
pop
pushl
dec
insb
mov
pushl
cltd
sub
pop
outsb
bound
pushl
mov
add
sbb
lods
and
jb
xchg
mov
jo
mov
xor
sbb
mov
jmp
std
push
adc
scas
sub
sbb
and
cmp
mov
sub
sbb
enter
loope
xchg
es
push
sti
mov
addr16
jp
ret
lock
add
test
roll
bound
mov
dec
ljmp
stos
inc
fidivs
movsb
stos
adc
movsb
sub
cwtl
scas
pop
mov
fcoms
mov
iret
push
ljmp
cmpl
mov
in
sub
rclb
leave
adc
subb
aaa
cltd
jb
and
cmp
lods
mov
push
clc
aam
lock
jge
mov
push
xor
mov
or
call
pop
push
push
mov
aaa
xor
test
fildll
cwtl
pextrw
nop
jecxz
mov
jae
mov
lea
test
cli
xchg
inc
mov
xorl
fdivp
mov
call
popf
adc
push
mov
nop
jbe
es
inc
jmp
dec
mov
rol
sub
pop
add
int3
and
mov
fistpl
mov
ss
daa
shrl
lea
jmp
sti
ds
add
sbb
out
and
mov
xchg
mov
jns
mov
inc
push
or
int3
dec
pushf
idivb
cmpsb
sti
cmp
loopne
mov
xorb
fisubl
mov
adc
loop
push
adc
cmc
sbb
add
sar
stos
cmp
xchg
xchg
or
aaa
pushl
jb,pt
mov
cmp
and
sub
xor
push
adc
sbbl
and
mov
inc
faddl
adc
je
fwait
jbe
loop
jle
shlb
ljmp
push
loope
push
js
nop
mov
mov
push
insb
jg
or
xor
lret
xor
rcl
mov
in
push
xor
or
inc
ljmp
fbld
add
xor
add
std
mov
add
pop
pusha
decl
int3
aam
cmp
inc
and
mov
js
loopne
push
mov
xor
je
jge
or
js
ret
in
mov
lds
les
jbe
sbb
dec
pop
mov
mov
cmp
lods
es
lods
loop
mov
jl,pn
pop
pop
rclb
mov
inc
daa
mov
icebp
push
sahf
stos
xchg
movsb
add
lods
sub
insl
add
pusha
and
dec
xchg
loope
insb
cmpb
inc
insb
jmp
jge
rcll
div
sub
push
icebp
jg
xor
inc
xchg
addb
imul
add
cli
lock
fdivs
in
cmpsb
insl
xchg
mov
cmp
cmp
add
shl
pop
push
cld
push
stc
cmpb
push
and
sbb
mov
ds
test
add
mov
ficompl
lods
jge
lock
xor
inc
sti
pop
cmp
push
imul
inc
dec
inc
xorl
inc
pusha
cwtl
pop
lret
repz
inc
add
inc
sbb
pop
mov
inc
and
push
sarb
add
add
add
add
ds
push
aad
jle
or
test
mov
test
xor
jg
pop
fidivrs
jl
nop
adc
ret
test
mov
int3
jl
push
sbb
decb
sub
xchg
enter
push
xchg
inc
cmp
xchg
stos
xor
sub
loopne
xor
dec
or
scas
cmpb
scas
lock
mov
fucomp
add
jp
jl
adc
fwait
push
xor
aad
test
mov
jb
or
cld
jge
fwait
jle
scas
js
pop
sarb
call
push
xor
jg
or
mov
das
ds
cmp
sarb
or
push
ljmp
xor
rorb
imul
add
cmp
add
add
sub
out
jg
sub
nop
into
inc
or
into
scas
mov
dec
subb
push
and
nop
cmpsb
add
mov
inc
sub
out
mov
jno
add
ja
adc
rolb
mov
pushf
addb
add
jl
mov
pop
aad
sub
pop
mov
mov
sub
mov
fisubrs
jmp
cmpsb
xlat
and
out
rol
bound
mov
add
mov
add
mov
inc
les
or
cli
dec
rcrb
das
inc
and
pop
ljmp
ffree
pop
jae
pushf
sbb
jns
sbb
decl
lea
adc
lock
mov
loopne
push
adc
cld
cmpsl
rol
push
inc
mov
sub
mov
and
loop
and
mov
sub
aam
and
pop
inc
mov
adc
nop
lcall
ret
outsl
mov
lods
fstps
mov
rorl
inc
lds
adc
lea
adc
add
insl
cli
cltd
inc
and
push
add
xchg
jnp
clc
mov
in
and
mov
push
call
call
hlt
nop
lret
cmpsb
iret
mov
push
call
adc
fwait
ret
mov
inc
xchg
jo
push
mov
lds
xor
insb
aam
cmp
push
mov
jp
dec
pop
push
loopne
sti
in
jg
mov
inc
push
add
push
and
movsl
cmp
jb
and
cmp
or
sub
pushf
xchg
test
scas
mov
lock
xchg
pop
jl
cltd
int3
xchg
adc
lahf
adc
fbstp
ljmp
push
dec
in
and
test
xor
xchg
mov
pushl
add
int3
test
mov
adc
dec
cmp
adc
insb
xor
movsb
out
pop
inc
push
insb
sub
mov
decl
or
ret
adc
dec
ds
cmpl
push
out
xor
cltd
mov
ss
test
ljmp
push
xchg
dec
cmp
inc
xor
fsubrl
in
mov
pop
fldl
add
cmp
jecxz
insl
or
mov
movsl
mov
push
adc
pop
ss
rclb
in
aam
fisubrl
xchg
je
jbe
push
push
je
aad
in
inc
divb
ss
mov
dec
adc
leave
jo
test
data16
push
add
pop
jb
pop
mov
push
mov
nop
mov
adc
jmp
je
jmp
push
add
aam
movsl
call
rcll
cld
into
and
xchg
imul
adc
pop
test
mov
push
add
stos
adc
out
cltd
enter
pop
int
mov
pop
adc
ret
sti
cmp
hlt
mov
je
sub
lret
inc
push
jecxz
in
ja
adc
and
xor
cli
pushl
jmp
jle
or
fildll
jb
push
shll
xor
decl
lcall
mov
add
inc
dec
lcall
popa
or
outsb
jmp
mov
cwtl
adc
and
add
sbb
imul
inc
test
orb
inc
ret
icebp
adc
sbb
or
test
lods
es
mov
add
lds
jbe
das
xor
shrb
adc
cli
push
or
fcompl
xchg
push
sti
and
lret
mov
push
enter
add
insl
adc
out
out
stos
add
cmp
pop
inc
es
sbb
add
out
lods
out
mov
cwtl
mov
test
add
dec
outsb
ss
outsl
add
dec
lret
mov
jmp
es
jae
leave
pop
sub
jne
lret
inc
call
or
jl
push
cwtl
and
sub
cs
inc
les
cmp
fmull
mov
inc
mov
push
cmp
aad
add
call
out
push
rcl
call
push
pushf
or
inc
cmp
addb
decl
pop
loope
jno
test
cmpsb
sahf
add
add
std
stos
and
mov
loopne
insl
lret
dec
jmp
shrb
clc
lds
not
mov
loop
sahf
xchg
mov
cs
movsb
out
push
fsubl
lcall
negb
lods
mov
cmp
add
mov
lock
test
scas
ss
ds
pop
xor
adc
sub
loope
sbb
pop
clc
inc
mov
adc
sbb
mov
cmp
mov
out
imul
add
out
das
in
testb
cmp
xlat
cmp
or
dec
inc
lods
xchg
push
or
aaa
mov
orb
loopne
xchg
mov
and
imul
call
call
std
mov
cmp
jle
xor
adc
sbb
std
fistps
pop
jne
jg
jp
and
nop
jb
mov
loope
dec
adc
xor
mov
ljmp
xchg
inc
outsl
sub
add
xchg
jo
bound
dec
jge
xor
dec
mov
xor
lock
lcall
lcall
mov
movsb
and
mov
add
sti
pop
xor
lock
dec
sub
xchg
inc
aaa
lret
hlt
inc
inc
sarl
push
sbbb
mov
aad
fists
incb
insl
and
mov
sbb
bound
inc
push
pop
sbbb
cld
jge
jns
mov
dec
sub
scas
loop
sbb
mov
jecxz
in
jg
lock
inc
xchg
inc
stc
mov
fs
pop
cld
add
mov
call
lock
and
dec
dec
sbb
or
rcll
add
push
fmull
pop
loop
xchg
cli
or
xchg
mov
fiaddl
mov
jae
daa
sbb
inc
das
dec
dec
mov
sub
fadd
adc
mov
jno
add
jecxz
test
mov
out
adc
rcrb
ret
cmp
shl
call
ja
out
add
int3
ja
cmp
sahf
mov
mulb
inc
and
aas
lock
or
mov
jo
fsubp
jl
dec
cli
add
pop
leave
xchg
xchg
cmove
insl
addl
push
lds
int3
adc
push
mov
ret
testb
mov
sub
fisttps
mov
out
orl
hlt
xchg
jle
cmpsl
mov
pop
and
xlat
xlat
in
cmp
xor
pop
fisttpl
dec
mov
mov
cs
push
loop
outsl
dec
xchg
cmc
fcomip
adc
in
rorb
mov
xorl
jg
scas
in
lods
inc
cmp
xchg
aam
lods
clc
fiadds
add
insl
and
sbb
std
sbb
ret
test
leave
cmpsb
call
xchg
sahf
sub
push
sbb
inc
xor
fistl
fsubl
sub
adc
mov
dec
mov
jno
je
fiadds
mov
aad
inc
inc
xchg
add
pop
ret
fwait
rcll
nop
mov
adc
outsl
cwtl
push
sub
adc
mov
in
mov
adc
neg
xchg
jb
bound
sbb
add
push
xchg
and
test
pop
cwtl
mov
or
cmp
sub
stos
xor
or
add
cmp
fidivl
sbb
jb
cmp
cmpsb
xor
adc
adc
movsl
loope
sbb
mov
int3
jne
hlt
or
test
xchg
cwtl
imul
push
lock
bound
lahf
adc
rcr
mov
in
jg
mov
or
je
rolb
clc
push
or
cmpsb
xlat
inc
mov
in
jmp
mov
push
into
sbb
mov
in
dec
fs
loop
cmp
loope
in
mov
fs
bound
jl
pop
xchg
sahf
inc
or
popa
inc
adc
sub
das
and
inc
adc
sahf
aaa
dec
xlat
jecxz
jg
xchg
xor
xor
addl
adc
and
mov
mov
lods
push
testb
push
mov
outsb
dec
nop
jnp
inc
pop
sbb
push
lods
icebp
sbb
dec
lock
ret
loopne
push
mov
stc
adc
pop
mov
dec
cmpl
outsl
out
clc
push
xchg
add
xor
ss
orb
loopne
xor
orb
mov
pushf
lock
inc
adc
mov
les
call
jp
mov
dec
dec
roll
outsb
stos
into
enter
cmc
sar
aaa
cld
lcall
mov
or
cmp
fidivrl
lret
inc
add
add
adc
nop
push
mov
loopne
cmp
jbe
mov
cld
push
jb
or
aas
fisubl
sbb
xchg
shll
or
xor
loope
sub
cmpsb
xchg
and
sbb
mov
sub
pop
mov
mov
das
mov
sbb
push
js
dec
add
loop
jmp
adc
sub
fcoml
test
addb
jle
xor
std
in
shrb
pusha
and
xchg
clc
mov
add
pop
mov
and
sub
push
add
jecxz
imul
mov
mov
sub
pop
add
mov
call
fsubs
pop
adc
adc
das
xchg
nop
inc
xor
and
pop
cmp
xchg
and
lret
pop
pushf
push
mov
add
insl
fbld
or
lock
xchg
clc
aaa
stos
dec
shll
inc
sbb
mov
enter
or
lods
jge
push
push
pop
sbb
and
inc
pop
cmp
jecxz
mov
cld
mov
push
out
fidivrl
mov
adc
inc
push
ds
or
decb
xchg
inc
mov
je
nop
negb
pop
sar
push
mov
fisubl
adc
cmp
lds
xchg
arpl
cmp
and
mov
add
and
adc
mov
insb
lds
mov
push
fdivr
sbb
xorb
imul
and
test
pop
sbb
sub
xchg
rolb
aas
push
ficompl
push
dec
mov
xlat
and
popf
js
into
or
fcmovne
cld
add
and
rorb
bound
out
mov
and
inc
and
pop
loope
dec
aam
daa
mov
pushf
js
pop
ljmp
cltd
shlb
lcall
xchg
push
shll
add
cs
dec
jg
ljmp
in
inc
adc
mov
pop
add
push
or
or
subb
fdivp
add
repnz
ss
dec
jg
cmpsb
aaa
rcll
jle
loope
loope
sbb
call
mov
sub
dec
mov
in
dec
shl
push
hlt
in
pusha
shll
leave
mov
ljmp
movsl
adc
or
loopne
pushf
out
enter
sbbl
cmp
xchg
cmpsb
and
inc
loop
hlt
outsl
jo
jecxz
add
mov
in
xor
aam
mov
xlat
dec
dec
sub
test
xchg
inc
in
dec
mov
aaa
jns
pmullw
jle
fisubl
mov
mov
or
cwtl
or
mov
add
lret
or
rcl
scas
aaa
and
add
test
xor
xchg
hlt
xchg
gs
shlb
ss
jmp
mov
arpl
aam
in
lahf
push
adc
pop
and
pop
lock
jbe
xchg
xor
sub
loopne
and
mov
out
incl
mov
xor
test
or
decl
push
cmp
adc
out
add
ds
xchg
les
lea
and
lock
daa
inc
ret
popa
mov
dec
loopne
pusha
enter
dec
sbbb
add
test
or
jg
jb
dec
mov
mov
dec
rorb
jle
imul
adc
add
sarl
lock
mov
pop
inc
xor
sbb
hlt
push
push
lods
mov
in
mov
xor
push
xchg
call
fistpll
mov
loopne
lock
andb
clc
scas
sbb
rclb
test
lds
push
adc
inc
push
or
je
push
mov
mov
sub
or
add
or
sbb
call
dec
pop
in
xchg
movb
cmp
push
std
mov
lret
inc
xor
ret
add
dec
push
jmp
lods
lods
add
shrb
in
pop
pusha
lock
sti
data16
lcall
sub
and
outsl
sub
lock
cld
pop
xor
push
mov
dec
roll
inc
out
sbb
fdivp
mov
or
push
testb
inc
test
xchg
jp
sbb
divb
push
push
adc
jbe
lock
nop
cmp
out
pushf
sub
negb
or
dec
sub
pop
adc
or
rcll
insl
mov
jecxz
test
mov
xor
loopne
stos
orb
push
pop
add
push
push
sbbl
loopne
lea
nop
or
cmp
mov
xchg
dec
push
mov
out
jno
rorl
mov
xor
xor
pop
dec
add
icebp
cltd
jnp
sbb
mov
je
movsl
sub
lods
repnz
daa
jns
add
push
loope
les
push
mov
mov
cld
fcmovnu
xor
insl
cltd
pusha
dec
inc
mov
and
ljmp
dec
cmp
pop
cmp
ljmp
loopne
data16
lret
or
dec
add
dec
stc
dec
fcoml
inc
jecxz
imul
mov
pop
push
and
aas
pop
lret
sahf
add
xor
sbb
add
push
pop
push
jp
pusha
lds
cmp
and
and
cmpsl
dec
test
sbb
pop
xchg
and
mov
lret
adcb
jo
xchg
mov
and
jg
dec
push
mov
ja
jmp
decb
xlat
mov
dec
push
sbb
inc
dec
clc
sub
fisttps
jp
fcompl
outsb
pusha
cmp
mov
mov
das
push
sbb
jg
mov
jmp
aam
ds
leave
lret
addr16
xchg
in
jnp
fidivl
popf
lock
test
jecxz
and
mov
inc
lahf
pop
adc
imul
icebp
sbb
cmp
push
mov
pop
sub
out
inc
jno
outsb
int
jle
push
and
inc
cmpb
xor
or
je
pop
pop
rolb
ret
dec
daa
add
outsl
cli
cli
sub
or
pop
mov
pop
adc
test
add
pusha
scas
rclb
cmp
adc
push
loopne
push
stos
inc
movsb
cmp
adc
mov
jo
outsb
scas
push
std
mov
sysret
adcb
je
cmp
inc
ret
adc
xor
outsb
adcb
mov
push
or
test
leave
mov
jnp
xor
ret
mov
mov
cmp
xor
scas
mov
mov
faddp
nop
xor
and
ds
mov
or
rorb
mov
cltd
xchg
fstl
subb
push
fistl
ficoml
int
mov
bound
xor
inc
pop
mov
push
decb
aas
jmp
and
push
call
icebp
and
mov
sub
inc
inc
xor
testb
out
add
shlb
aas
lods
sub
jp
inc
add
cwtl
sub
jnp
test
jg
arpl
and
sbb
inc
cmpl
jmp
xchg
in
test
inc
cltd
popa
mov
clc
into
add
sub
cmpsb
cmc
ret
fidivrs
xor
push
pusha
adcb
jecxz
cli
pushf
js
cmp
cltd
mov
sub
bound
aad
dec
mov
pop
add
mov
out
push
push
fiaddl
dec
xchg
into
ja
es
push
jle
lcall
add
scas
jmp
clc
data16
cwtl
dec
cmp
pop
mov
push
sub
mov
xchg
das
pusha
mov
loop
fisubl
inc
mov
xchg
or
inc
xor
test
arpl
and
inc
shl
jnp
pop
mov
pop
pop
sub
das
jbe
ret
loopne
fdivr
mov
push
cs
inc
stc
mov
xchg
jb
cs
fcmove
ret
sahf
inc
imul
jl
hlt
mov
inc
fwait
iret
movsb
add
mov
xor
xor
lods
push
push
addl
clc
jecxz
jecxz
push
dec
jl
xchg
push
mov
adcl
pop
xchg
push
pushf
leave
adc
lcall
sbb
cmc
mov
mov
rolb
es
inc
pusha
stos
clc
xor
add
ds
rorb
popf
jge
pop
out
pop
jbe
adc
cmpsb
out
fsubrl
adc
and
and
sub
mov
cmp
add
push
mov
cs
jmp
dec
sub
leave
pop
pop
test
dec
pusha
out
repnz
ja
dec
stos
push
jne
outsb
rcrl
add
cmp
lock
je,pn
ds
push
test
mov
out
inc
stos
or
ss
shrb
xchg
push
and
int3
pushf
loop
dec
add
pop
in
mov
imul
loopne
loop
cmp
lahf
sbb
inc
xor
jl
es
out
dec
insb
rol
sub
and
jnp
adc
mov
cwtl
pop
mov
xchg
add
les
pop
cmc
and
xchg
adc
jns
pop
jle
shl
xor
mov
pop
sub
sbb
adc
sub
cmp
fst
mov
add
jbe
jle
cli
pop
repnz
sub
addb
mov
jmp
jne
cmp
adc
sub
or
lock
xchg
lea
cld
sub
movsb
dec
insl
xor
mov
jecxz
mov
out
jb
dec
adc
ja
push
rolb
stos
xchg
cmp
shlb
fsub
ficomps
mov
add
pop
pop
and
jnp
add
add
mov
lret
bound
jbe
fiadds
subl
iret
sahf
inc
roll
add
stos
and
inc
mov
pop
cmp
lret
andb
or
inc
fisttpll
push
fdivrl
loopne
iret
pop
mov
cli
cltd
and
and
outsl
add
in
rorl
test
mov
test
lds
xorb
std
push
lea
add
test
inc
adc
sub
mov
fsubrp
adc
and
or
pop
fdivrs
fs
xor
and
or
push
mov
push
sbb
sub
cmp
lahf
jp
sbb
adc
test
mov
je
dec
cmp
call
mov
popa
pop
xchg
std
mov
mov
sub
mov
sub
mov
xlat
and
loope
mulb
mov
gs
or
mov
movsl
sbb
sbb
sbb
inc
lods
and
cld
data16
rorl
pop
test
cmp
xchg
sbb
and
lods
pop
inc
xchg
inc
js
lock
lods
jle
push
and
cmp
or
std
mov
cmp
sbb
jo
jle
filds
or
pushf
push
xor
gs
arpl
daa
out
jecxz
inc
push
adc
aad
push
dec
hlt
mov
xchg
inc
jle
nop
adc
lea
push
aas
jle,pt
std
clc
jo
nop
into
popf
clc
push
push
xchg
les
clc
divl
mov
jg
push
xor
and
lcall
sbb
push
jl
inc
inc
sub
mov
xor
mov
jb
out
mov
je
loopne
add
call
jmp
pcmpgtw
outsb
push
adc
mov
cmpsl
sbb
std
or
sbb
clc
cmp
mov
in
js
loopne
sub
xorb
push
dec
pop
pop
outsl
and
insl
or
inc
in
xchg
rorb
pop
mov
out
sub
or
movsl
lret
add
xchg
aad
jle
cwtl
push
es
aad
cltd
clc
or
in
adc
adc
pop
mov
in
mov
in
or
push
adc
inc
or
pushf
mov
fwait
out
cmc
xchg
ja
pop
cmpsb
fists
test
and
jp
push
sbb
and
sub
pusha
sti
push
mov
cmc
mov
sbbl
mov
into
hlt
shll
xchg
faddl
scas
add
sbb
enter
js
mov
fwait
je
nop
in
mov
push
dec
jecxz
sub
rcrb
movsl
or
test
icebp
das
call
xor
cli
and
ret
inc
inc
jbe
in
add
out
ds
pop
jg
imul
dec
jb
mov
push
add
or
out
fisttpll
add
lret
out
in
push
sub
sub
hlt
and
mov
scas
push
mov
cmpsb
add
aaa
test
cmp
adc
lds
xchg
push
inc
daa
test
mov
movsb
mov
icebp
int3
call
icebp
ja
cmpb
push
filds
and
inc
xchg
mov
cs
or
dec
fbstp
sahf
in
xchg
pop
insb
cmp
sbb
aaa
insb
mov
test
rcrb
inc
inc
out
mov
movb
pusha
clc
sbb
xor
lods
jge
sar
mov
fcoms
clc
xor
mov
out
scas
cmp
or
push
sbb
cld
add
dec
fstps
insb
or
jo
sub
dec
outsb
xchg
andb
and
push
adc
test
jnp
andb
mov
push
sub
cwtl
add
popa
popa
add
mov
sub
ss
cmpsl
out
bound
add
xor
pop
sar
imul
inc
testb
pop
addb
push
fisubs
add
jl
fsubp
jle
lea
int3
lds
xchg
mov
mov
sbb
jle
inc
and
sbb
out
popa
and
in
decl
cli
lcall
adc
shrb
nop
inc
inc
jo
jle
xchg
or
clc
fildl
pop
les
push
fcomip
sub
add
inc
fst
inc
push
in
jnp
add
je
inc
loope
mov
push
loop
sbb
adc
sti
push
loopne
test
sub
inc
push
rcrb
xchg
inc
cmp
sub
loop
das
lock
dec
jne
sub
nop
dec
ret
push
ror
in
push
sub
mov
xchg
rcll
ljmp
jbe
jl
mov
ret
and
and
lea
jle
pop
fimull
pop
sub
inc
mov
cli
hlt
and
mov
sbb
insl
sub
jecxz
fildl
ret
xchg
inc
imul
inc
mov
cld
nop
xchg
ss
dec
pop
xorb
aaa
stos
cli
push
jne
push
inc
lods
cmc
or
outsl
sar
mov
and
mov
jb
xor
sbb
sub
pop
jno
push
xchg
test
fcomps
js
rorl
fimuls
sbb
leave
sbb
ja
cmc
sbb
mov
pop
scas
adc
push
mov
test
cmp
je
mov
cltd
pusha
orl
add
ljmp
adc
jb
mov
repnz
pop
jo
les
push
sbb
sbb
rcrl
loop
push
mov
sbbb
in
shrl
push
ljmp
ja
aaa
pop
roll
ret
sub
dec
or
jno
rcrb
dec
mov
push
ds
cld
jg
push
test
and
fdivrl
inc
mov
mov
fcomip
ja
aas
in
xor
test
mov
push
shl
cmpsb
xchg
inc
xlat
push
enter
dec
and
push
jb
rorb
push
aaa
cmp
in
pop
jb
stc
lea
and
push
xor
pop
xor
xchg
push
mov
fmull
push
rcrb
mov
and
je
shrl
scas
jne
stos
pop
and
out
addl
lcall
mov
xor
inc
mov
mov
call
loop
out
in
aad
push
dec
add
sub
aas
cmp
push
jo
stos
push
jl
sar
cmp
inc
cmp
adc
pusha
negb
push
add
mov
shll
out
scas
xchg
add
and
fistl
ja
inc
sub
rcrl
jb
ljmp
cld
es
xor
jge
nop
mov
pop
xor
sub
orb
jo
or
sub
cld
fisttps
les
xchg
ds
jne
and
iret
andb
fdivrl
mov
xor
test
mov
pushf
push
cld
fadds
stc
lret
pop
xchg
sbb
xor
cmpsl
je
enter
loopne
pop
clc
in
cli
pop
fdivrl
and
mov
fldcw
xor
loopne
aaa
pop
jo
cs
or
pusha
test
adc
aas
lcall
push
popf
inc
cmp
je
aas
mov
mov
mov
fcmove
imul
sub
or
fsubp
lret
lds
out
mov
addl
pop
mov
dec
loope
mov
push
dec
or
inc
clc
pushl
data16
pop
push
sub
nop
mov
hlt
mov
icebp
inc
jecxz
mov
jo
mov
inc
je
and
in
jg
adc
mov
ja
jno
jae
pushf
sbb
nop
iret
lock
mov
xchg
lock
icebp
stos
dec
mov
add
jg
scas
jle
es
cltd
adc
adc
mov
aas
ret
call
jecxz
out
test
add
inc
xor
fwait
sbb
dec
jo
pop
cmp
fstl
hlt
inc
mov
ljmp
lock
pop
inc
insb
lods
mov
dec
dec
data16
shrb
decb
insl
mov
imul
and
add
mov
lcall
fbstp
stos
inc
inc
xor
pop
fldcw
add
data16
cmp
ds
or
jbe
negl
or
subb
fdivs
mov
call
push
dec
inc
mov
gs
daa
sbb
sbb
push
aaa
je
sub
cld
faddp
fistl
arpl
sub
test
int3
clc
inc
mov
imul
fucomp
jno
faddl
data16
jle
dec
mov
mov
dec
pop
mov
pop
and
mov
jmp
sbbl
addl
xor
add
sarb
lret
or
fnstcw
jge
or
icebp
and
xchg
mov
cmp
into
pushf
mov
cld
and
cmp
or
adc
inc
sbb
and
clc
and
testb
jmp
and
mov
adc
andb
adc
ret
sbb
fcmovb
lret
dec
xor
jns
insl
mov
inc
mov
stos
enter
cmp
enter
mov
cmp
jb
repnz
cwtl
dec
mov
jle
popf
pop
in
mov
fcoml
xor
cltd
lock
jne
aam
add
dec
jo
cmp
mov
sbb
mov
and
push
stos
add
xchg
inc
out
push
jb
pop
repnz
insb
in
dec
mov
mov
sub
scas
push
call
push
divb
rorb
mov
mov
jle
aaa
inc
ret
inc
sub
cmp
and
call
stos
dec
clc
push
xor
int3
push
enter
add
sbb
push
out
xchg
mov
cmc
fstps
cmc
sarb
pop
xchg
ss
cmp
adc
sub
xchg
add
pop
or
into
push
enter
sbb
clc
xchg
or
pushf
pop
mov
test
push
cli
ficoms
pop
lock
fadds
mov
mov
sub
lods
push
and
and
call
sub
in
loopne
shlb
mov
cmpsl
sahf
es
jb
push
pop
fimuls
pop
inc
imul
shrb
shrl
inc
inc
push
in
xchg
flds
jne
mov
sbb
push
sbb
fwait
sub
pushf
psubw
ret
in
mov
loop
jne
xor
cmpsb
bnd
in
int
in
test
cld
sbb
jge
add
rcrl
or
lods
cmp
testl
pop
push
mov
lret
hlt
fs
sbb
adc
lock
cmp
imull
test
pushf
and
mov
jno
lcall
and
jmp
mov
ja
loopne
fwait
push
jns
sbb
cmp
cld
cs
fidivs
and
push
les
pop
ret
jl
pop
xor
inc
test
movsb
arpl
ss
rep
sahf
in
mov
aad
int
addb
or
pop
shlb
inc
inc
adc
fs
dec
jb
mov
mov
pusha
jge
lcall
js
xor
and
lods
mov
jecxz
adc
dec
addr16
cwtl
xchg
jmp
imul
outsb
jne
or
sub
sbb
inc
nop
lret
stos
sub
and
imul
fs
sub
mov
push
daa
ret
std
sbb
pop
add
pop
or
inc
rcr
addl
je
addr16
mov
and
pop
fadds
pusha
stos
add
xchg
pusha
cmp
dec
cmpsb
mov
jg
mov
pushf
insl
sbb
inc
loop
mov
sbb
mov
call
shlb
cs
pop
push
clc
decl
push
nop
js
sbb
add
push
shrl
ja
pop
sub
mov
pop
mov
and
mov
jb
insl
jg
stos
out
adc
add
jecxz
xor
add
xor
mov
mov
xor
adc
movsb
push
lds
adc
shlb
mov
dec
incl
jg
xchg
add
mov
dec
lret
jns
jecxz
incl
arpl
mov
pop
icebp
loop
pushf
mov
sti
ljmp
pushl
std
mov
divb
cwtl
sbb
iret
jmp
dec
stos
sub
mov
add
sbb
and
lahf
enter
xor
cmpsb
fbstp
push
mov
nop
push
in
jmp
push
and
test
ret
xchg
sub
jecxz
scas
shlb
adc
cmove
push
mov
and
jo
aam
imul
rclb
push
push
jbe
cmc
pop
push
mov
inc
cmp
cwtl
xor
repnz
push
and
jg
rorl
add
mov
ljmp
mov
sbb
mov
xchg
lahf
xchg
cld
mov
das
or
xor
gs
pop
adc
jne
mov
push
and
adc
ss
dec
inc
push
mov
push
sbb
or
aaa
push
out
xchg
inc
mov
push
ds
or
lea
inc
aas
cmc
jmp
mov
fdivrs
sub
cmc
inc
fsts
push
cmp
adc
and
call
cwtl
jo
je
mov
outsl
cmp
jge
clc
and
sub
std
icebp
cmp
sbb
dec
dec
xchg
fistl
sbb
ret
clc
in
or
cs
mov
out
imul
data16
cmp
rcr
xor
push
aaa
xor
cmp
mov
or
push
push
lds
ret
lret
lcall
inc
jp
dec
xor
in
pop
fcomps
adc
sbb
dec
adc
xor
js
aad
sbb
sahf
nop
scas
idivl
icebp
push
mov
mov
pop
mov
xor
in
lret
or
add
mov
jbe
das
mov
mov
out
dec
cld
or
test
cmpl
xchg
xchg
adc
mov
cmc
cltd
ds
push
ret
dec
mov
ljmp
add
inc
adc
ljmp
into
dec
add
add
mov
pop
mov
shlb
cmp
pop
add
dec
popa
xor
xchg
cltd
xorb
push
xor
mov
mov
xchg
mull
ret
add
xchg
cli
dec
adc
xchg
shrl
mov
add
sbb
cltd
lahf
inc
sub
mov
inc
fisubrl
push
push
mov
outsb
sti
mov
stos
or
aad
setae
jge
sbb
inc
cwtl
xor
pop
sbb
stos
ss
mov
repnz
cltd
add
dec
mov
inc
out
or
je
add
cmpsl
mov
cmp
sbbb
ficoms
out
dec
inc
jno
cmp
scas
add
dec
xor
pop
or
xlat
add
int
and
cmp
pusha
adc
incl
inc
aad
inc
and
mov
xor
bound
mov
or
push
xchg
cmpl
adc
mov
sbb
jge
std
dec
or
pushf
sub
sahf
jge
faddl
cmpsb
imul
mov
sbb
orb
sbb
dec
xchg
xchg
mov
add
sahf
mov
jle
mov
xlat
push
inc
mov
jl
shlb
in
mov
xor
sub
jl
push
jb
mov
cmovne
inc
mov
mov
dec
jge
mov
mov
push
mov
inc
mov
jne
sub
and
ret
push
test
or
mov
add
rcrb
jle
dec
inc
adc
popa
jb
sub
dec
dec
in
inc
mov
jnp
xchg
cld
out
mov
or
xor
nop
stos
xchg
fmuls
pop
test
gs
adc
rolb
js
add
in
pop
dec
testl
fimuls
mov
or
adc
push
ja
clc
pop
fcoms
lahf
push
adc
aad
add
sub
push
scas
in
dec
in
and
adc
xor
xor
nop
test
dec
inc
sub
decl
scas
mov
popa
ret
clc
push
pop
pop
jb
sbb
es
push
mov
scas
mov
jecxz
fwait
call
in
jnp
jbe
mov
cmp
sar
lock
fiaddl
sti
and
push
mov
decb
jecxz
sub
dec
and
lret
in
mov
inc
mov
adc
mov
push
pop
mov
mov
jmp
data16
jl
xor
dec
sbb
shrb
mov
in
xchg
lcall
loop
inc
pop
or
scas
mov
int
push
add
stc
cltd
xor
cltd
push
cmp
cmp
xor
push
and
inc
ret
fwait
adc
add
push
cmc
jle
call
xchg
xor
jle
push
xor
dec
sub
cli
mov
push
cld
inc
pushf
mov
rcr
inc
nop
jg
or
test
sbb
or
jecxz
testb
or
push
mov
sti
push
or
ret
inc
insb
push
stos
dec
ficoms
mov
mov
lahf
push
in
ja
mov
fcmovb
push
sbb
jecxz
xor
aad
mov
lcall
aam
fsts
shlb
sahf
repnz
out
mov
jg
push
fisubs
movsl
int
loop
outsb
decl
mov
and
xchg
es
cmc
cmc
and
scas
pushf
mov
add
ja
push
cmpsl
mov
hlt
jecxz
fistpl
and
adc
pop
jb
and
cmp
add
or
mov
jle
push
ret
and
lods
lcall
cli
int
adc
nop
aam
or
dec
cld
inc
sbb
pop
xchg
mov
ds
arpl
xchg
and
push
push
add
hlt
dec
cmpsb
push
adc
fstpl
sbb
adc
es
rcrb
xchg
sbb
mov
pusha
call
pop
test
sbb
mov
push
mov
ds
test
notb
pushf
or
or
sbb
adc
pop
inc
out
dec
pop
add
outsb
movsb
mov
hlt
xchg
adc
icebp
jbe
mov
call
mov
std
out
xor
cmp
cmpb
add
lcall
lods
je
add
inc
add
pop
cld
aam
lret
and
add
scas
push
orb
jne
shll
xchg
loopne
lock
mov
mov
push
lret
clc
push
std
mov
xchg
sbb
in
xor
data16
rorb
testb
test
repnz
ss
push
push
std
mov
insb
add
sbb
icebp
add
rorl
faddl
call
test
dec
cwtl
out
and
sarb
cmp
test
jmp
adc
fwait
add
into
fs
mov
int3
loop
sub
sbb
cmp
adc
fcoml
mov
lret
mov
push
push
hlt
xchg
cmpsl
add
dec
fdivl
inc
xor
mov
mov
stos
cmp
and
cmp
fdiv
mov
int3
pop
adc
mov
cmp
dec
mov
push
or
lcall
pusha
lds
hlt
inc
dec
aaa
xchg
mov
adc
ds
test
jns
rorl
dec
dec
and
scas
out
fwait
rolb
lcall
clc
les
outsl
call
sub
sub
dec
lods
fisubrs
test
jne
xor
nop
add
sbb
shrl
int3
dec
add
lods
add
xchg
xor
mov
mov
push
cld
dec
popa
add
push
pop
jmp
shrl
outsl
lock
cs
inc
dec
jl
idivl
sub
pop
cmpl
sub
mov
cmp
lcall
ds
cmp
push
cmp
jecxz
scas
and
push
test
mov
or
push
xchg
mov
xchg
inc
enter
fimuls
inc
or
arpl
dec
cmp
insb
inc
rcll
repnz
fwait
les
xchg
aam
push
js
mov
jecxz
or
mov
or
push
stc
push
subl
js
or
testb
mov
dec
orb
loopne
push
gs
jle
rcl
push
ffreep
push
jp
cli
sub
cmp
jg
test
mov
jne
xchg
sub
decl
push
loope
adc
adc
jle
bound
hlt
xchg
adc
sahf
adc
pop
loope
call
adc
mov
sarl
in
lcall
addr16
jb
push
gs
lods
adcl
push
cmp
dec
fwait
adc
add
push
jbe
aam
fs
xchg
sub
pop
rcrb
das
fldl
add
jbe
jl
scas
push
cli
or
dec
mov
lcall
sbb
push
or
adcb
imul
push
insl
jb
adc
lock
sub
mov
rclb
inc
sbb
pop
ret
xchg
jle
lock
sub
inc
pushf
mov
or
adc
js
or
push
lds
popa
call
or
cmc
push
stos
dec
adc
jl
mov
cmpsb
fisubrl
stos
idivb
or
sub
subb
inc
test
cmp
dec
cmpb
inc
les
mov
cwtl
cld
frstor
add
mov
loopne
lcall
jbe
dec
pusha
inc
push
xorb
out
lods
mov
add
mov
bound
mov
jl
and
scas
mov
in
clc
cmp
std
adc
js
and
inc
out
leave
roll
ret
pop
add
fdivrs
sub
jp
push
call
inc
dec
test
aaa
clc
out
xchg
sub
in
mov
mov
mov
pop
adc
xchg
mov
jae
andb
sbb
cmp
je
and
xor
and
shrb
xor
pop
mov
cwtl
mov
in
clc
sub
mov
adc
push
into
xchg
jmp
mov
js
sahf
push
cmp
iret
gs
repz
jle
fwait
jo
movsb
aad
cmp
or
lcall
dec
pushf
les
sbb
push
sub
and
xor
xchg
add
cmpb
mov
mov
mov
or
daa
mov
dec
in
leave
jo
testb
adc
mov
push
rdtsc
dec
jo
pop
push
sbb
pop
daa
movsb
scas
sbb
call
pop
ljmp
ss
inc
mov
aas
lret
adc
jp
add
mov
pop
movl
js
mov
lds
push
add
and
sbb
jbe
and
roll
mov
adc
sbb
jno
jp
stc
rcrb
push
loopne
sbb
movb
pop
in
inc
jo
mov
xor
lcall
fs
add
jecxz
dec
jle
enter
jae
xor
mov
mov
pop
shl
sti
xor
int
lods
xor
stc
ds
dec
enter
loopne
adc
or
incb
push
lahf
test
mov
cmp
inc
pop
lahf
inc
fisubrl
shl
cmp
lcall
insb
rorl
mov
add
push
and
mov
cmpb
jne
jb
in
mov
clc
xchg
push
push
or
inc
adc
sub
out
and
or
xchg
sti
mov
add
pop
push
and
sub
mov
add
ja
int3
adc
leave
pop
test
inc
sub
shll
inc
sub
je
or
xorl
neg
add
push
mov
push
outsl
cwtl
lcall
pushl
xchg
push
or
mov
lods
leave
jbe
stos
mov
pop
cmp
or
clc
mov
test
add
fwait
xorl
das
stos
aam
into
cli
std
cmp
or
ror
jns
mov
adc
test
push
pusha
jno
mov
lahf
push
jecxz
xchg
xor
ret
testb
push
ds
push
sar
sub
mov
xor
mov
pop
into
data16
xchg
push
jp
mov
fs
cmp
push
add
or
pop
clc
lcall
mov
add
push
add
pushf
xchg
dec
movsb
add
sbb
outsb
sbb
and
or
cmpb
sbb
pop
clc
pop
out
cmp
mov
add
xlat
push
xchg
sbb
dec
icebp
fs
es
aas
xchg
and
or
ss
inc
aam
mov
ss
into
xor
popa
jl
popf
imul
movsl
or
xchg
jbe
or
jno
into
lret
xor
test
inc
mov
lock
cmp
pop
and
sbb
sub
xchg
mov
jle
jne
test
stos
decb
cmp
subl
call
mov
and
adc
loop
stos
mov
out
or
loopne
lret
sub
or
daa
movsb
lods
sbb
es
adc
sbb
pop
or
ret
test
sbb
lock
dec
cmp
mov
jl
daa
mov
es
push
jmp
sub
mov
add
lock
jo
jmp
cwtl
add
or
lret
je
shll
push
rolb
sbb
xor
dec
fmul
sarb
adcl
mov
mov
mov
lcall
push
sub
push
andb
mov
inc
aas
ljmp
mov
sahf
es
jo
mov
icebp
ljmp
push
pop
and
sahf
mov
and
movsb
dec
repnz
xchg
lcall
sbb
loopne
push
ds
cmpsb
mov
add
and
outsb
mov
dec
cmp
test
icebp
inc
sti
adc
fldl
faddp
movsb
test
xchg
ljmp
pop
xchg
inc
out
adc
dec
shll
jne
in
mov
clc
mov
mov
cmc
add
cld
imul
fidivrs
inc
mov
sub
add
stos
arpl
mov
cmp
fdivs
xor
sub
test
adc
fldl
and
sub
ss
outsb
scas
mov
test
incb
add
mov
or
pop
sti
push
push
scas
adc
xor
xchg
scas
cld
imul
inc
xchg
nop
lcall
add
out
dec
xor
xorl
xorl
js
xchg
ficomps
stc
mov
mov
sahf
adc
sbb
and
test
sub
mov
sbb
addb
xor
popf
cmp
add
push
shrl
jb
movb
minps
adc
xchg
addr16
inc
ret
inc
add
dec
adc
nop
call
sbb
or
in
mov
sub
and
push
or
mov
ret
and
and
sahf
sbbl
ss
fisttps
push
cli
call
cmp
and
test
push
cmp
jp
lock
adc
aam
mov
inc
pop
outsb
out
lcall
dec
mov
rcr
jl
xor
add
jns
dec
popa
sub
push
and
jle
inc
mov
lds
lods
and
cmpsb
sbbl
fisubs
dec
in
mov
push
es
sub
jb
ja
hlt
add
push
test
pop
add
mov
inc
in
fisttps
lcall
xchg
or
loopne
fsubs
movl
out
and
jbe
mov
ret
je
and
rcrb
pop
out
ljmp
mov
femms
cmp
and
xchg
das
push
inc
ss
or
fdivrl
scas
mov
jecxz
lcall
mov
pop
cltd
fisubl
xchg
sarl
jbe
loopne
clc
shlb
mov
repnz
loope
mov
xor
mov
or
push
clc
jecxz
pop
fldl
add
lcall
out
pop
icebp
pop
mov
outsl
cli
pmaxub
fidivrs
out
xor
add
fldenv
mov
and
repnz
adc
mov
push
test
push
icebp
xchg
add
enter
mov
inc
xor
cmp
out
adc
ds
push
or
ret
call
mov
cmp
movsb
subb
aad
xor
mov
pop
rsm
negb
in
mov
jo
pop
push
stos
dec
mov
mov
adc
jl
push
push
sbb
xor
addb
mov
orl
test
aad
hlt
sub
mov
les
add
sub
sbb
pop
orb
adc
xor
mov
pop
fs
mov
divb
cmp
lret
es
sarb
jb
xlat
pushf
shr
rcr
icebp
lods
cmpsl
ret
loope
inc
adc
loopne
icebp
ficoms
cmp
fstps
sub
lret
add
scas
fcomps
scas
sbb
rol
stos
mov
loopne
test
outsl
mov
or
stos
jb
ret
sbb
xor
mov
pop
xchg
jb
push
adc
jne
das
incb
jbe
sbb
mov
out
int
mov
pop
mov
cmc
sbb
mov
xor
lret
or
out
pushf
test
sahf
xchg
out
jbe
decb
cmp
pop
mov
pop
aas
call
push
and
lock
cli
add
add
xor
aam
sbb
dec
adcb
sbb
adc
xchg
dec
mov
or
js
outsl
pop
jno
fcompl
push
popa
dec
sbb
push
cs
out
roll
pusha
scas
sbbb
mov
dec
push
mov
pop
jmp
insb
xor
movsb
ret
push
and
dec
xor
loopne
cs
clc
out
and
xchg
mov
dec
pop
loopne
test
fists
jp
or
cmp
int3
or
lds
or
xchg
add
xchg
cmp
jne
sti
jg
sbb
push
add
add
ds
fcomp
mov
sbb
ret
loopne
ljmp
into
leave
adc
xchg
dec
push
cmpsl
jge
push
dec
jl
lods
clc
and
push
rolb
sbb
cli
and
mov
fidivrl
jle
pop
loop
ss
mov
jl
adc
mov
push
dec
mov
sub
fisttps
sub
mov
push
xchg
pop
sub
lcall
mov
xchg
pop
icebp
outsl
inc
fcompl
je
pop
movsl
dec
push
add
movsl
add
faddp
shlb
push
xchg
test
adc
fidivl
fbstp
mov
sahf
and
add
and
aad
cli
mov
ds
adc
ds
push
xorb
xor
push
lock
decb
cmc
pop
das
xchg
pop
lcall
xchg
je
cmpsb
test
jg
dec
leave
in
adc
jnp
loopne,pt
jo
jle
sbb
add
or
cmp
aam
shrl
mov
cmp
inc
or
movsb
xlat
jg
loop
fwait
or
call
add
pop
lock
clc
dec
pushl
addr16
add
jge
adc
std
int3
jns
or
aaa
add
sbb
xchg
jo
mov
xchg
xchg
xor
and
sbb
aam
dec
fst
shrb
cmp
jg
in
adc
xchg
jecxz
ficomps
lahf
out
call
xorl
pop
shll
sub
roll
adc
addr16
movsb
mov
lods
mov
addl
roll
in
or
fildll
push
adc
ret
mov
sbb
add
mov
test
leave
lcall
or
jmp
mov
daa
fnstenv
ljmp
cmp
ret
push
aas
dec
sbb
out
jo
scas
repnz
stos
fdivl
call
icebp
sahf
or
pop
or
xchg
movb
adc
jnp
pop
inc
rcr
mov
fisubs
add
jo
nop
mov
popa
xchg
fwait
jno
testl
cltd
mov
shlb
pop
sub
arpl
cmp
adc
sbb
mov
mov
ja
pop
pop
ret
inc
incb
sti
mov
jge
sahf
call
mov
icebp
outsl
jle
js
sar
lock
scas
scas
add
jge
or
push
sahf
hlt
fcomps
call
je
shrb
addr16
sub
jle
das
adc
jbe
sub
dec
ljmp
imul
xchg
sbb
insl
fsubrs
push
push
xchg
sbb
pushf
add
add
inc
push
test
pop
insb
mov
or
inc
pop
in
mov
pop
and
push
jge
fdivs
js
xchg
hlt
aam
cmc
aas
sbb
and
das
pop
mov
scas
cwtl
icebp
pusha
sub
insl
rcr
test
pop
test
mov
inc
jbe
sbb
adc
loopne
movsb
lock
inc
cmp
dec
jbe
xorl
outsl
jl
cmpl
xor
push
pop
hlt
push
mov
mov
loop
out
or
das
outsb
xor
aad
push
mov
push
aam
xchg
push
jl,pn
popf
aaa
push
stos
pop
insl
mov
xor
pop
stos
and
fwait
call
rcl
enter
orl
test
adc
rclb
mov
mov
xor
pusha
mov
insb
adc
push
cmp
xor
lods
xorl
das
cmpsb
shl
aaa
push
in
or
add
in
sti
add
inc
enter
loop
push
jb
cmp
sub
mov
pmaxsw
jecxz
and
xor
cmpsl
or
arpl
lods
jo
adc
incl
fdivl
sti
dec
ds
imul
push
xlat
mov
addb
insb
scas
add
jp
jb
les
in
sbb
add
ds
cwtl
push
inc
xor
lds
fisubs
mov
mov
nop
cli
test
clc
loope
and
sti
xor
add
push
loopne
sub
enter
lcall
push
std
jb
dec
inc
add
iret
pop
pop
sub
mov
cli
loope
pop
loop
mov
lret
testb
fcoml
and
add
xchg
xor
stc
sahf
outsb
xchg
fchs
dec
pop
hlt
stc
lds
or
test
cmp
scas
das
fiaddl
mov
cmp
push
inc
cmc
cmp
xchg
push
mov
pusha
ficompl
ret
dec
test
andl
clc
add
iret
or
add
push
cmpsl
jg
lock
lods
rcll
aad
and
das
aam
add
pop
sub
pusha
loopne
inc
notl
push
je
push
inc
fcomps
out
lahf
adc
fcmovnbe
adc
xchg
lods
push
cli
fwait
sbb
cmp
add
lcall
lret
push
and
and
jp
hlt
inc
adc
incb
inc
and
clc
adc
pop
mov
aaa
push
or
push
stc
push
dec
call
mov
les
sbb
or
lods
sbbl
push
sub
push
enter
call
rcl
rolb
lcall
adc
xor
xor
stos
popf
mov
xchg
loope
or
outsb
add
xchg
mov
js
popa
call
test
jg
scas
add
dec
rolb
outsb
dec
cli
dec
decl
add
int
mov
push
add
cmp
and
mov
pop
lcall
push
pop
and
jecxz
inc
mov
add
addb
add
fists
mov
movsl
add
mov
aad
or
xor
rorb
cmpsb
nop
loopne
cltd
shll
std
mov
and
fadds
lret
mov
pop
loopne
adc
sbb
les
scas
sbb
adc
addb
aaa
push
mov
mov
test
adc
fildll
cs
in
cs
jge
mov
jo
cs
sub
mov
push
fcoms
sar
ss
xor
outsl
sarb
dec
dec
pop
mov
ss
fdiv
mov
pop
pushf
mov
push
sbb
lahf
inc
mov
hlt
pop
and
sub
decl
mov
into
ror
add
cwtl
mov
ja
in
lret
call
cld
dec
mov
movsb
pop
mov
adc
push
clc
add
nop
into
iret
subb
pushf
jl
and
and
clc
mov
rcrl
lods
push
jg
nop
or
dec
xor
int
push
loope
hlt
daa
and
mov
mov
xchg
push
stos
insb
fsubl
add
adc
mov
xchg
mov
adc
rcrl
fbld
push
xor
cmpsb
scas
mov
adc
loopne
jb
test
dec
test
outsl
mov
adc
or
test
popa
bound
mov
mov
stos
xor
jo
movsl
aad
pop
loopne
cmpsb
filds
xchg
je
jp
and
jle
dec
pushf
repnz
aam
dec
mov
inc
mov
dec
shr
add
inc
mulb
add
movsl
pop
and
sub
clc
cs
jg
test
mov
mov
nop
ret
cmpsl
add
rorb
mov
inc
dec
test
addr16
inc
jae
jle
add
xchg
pop
repz
fiaddl
or
pop
and
xchg
pop
lock
ss
cli
lods
cld
add
add
add
les
dec
adc
inc
xchg
xor
inc
jle
xlat
cmpsb
pop
daa
lcall
inc
mov
sub
loope
negl
sub
addr16
mov
push
in
nopl
add
movsb
int
arpl
nop
xorl
and
cwtl
pop
push
jl
mov
mov
jne
je
loop
lcall
mov
xchg
pusha
or
sub
add
sbbb
sbb
call
dec
jg
mov
pusha
jecxz
jl
or
ret
hlt
fsubl
push
adcb
or
push
push
rolb
hlt
adc
pop
adc
pop
std
cmpl
and
cmp
jnp
pop
movsl
pop
and
int3
add
or
fdivrp
iret
mov
add
pop
mov
add
jmp
cmp
add
fs
dec
inc
mov
rolw
jae
cmp
out
bound
cmp
notl
jmp
ss
lds
xchg
dec
lods
jb
fwait
es
dec
mov
sbb
dec
dec
lea
es
dec
inc
add
mov
pop
push
subl
roll
call
dec
or
mov
ss
xchg
and
mov
mov
das
notb
leave
pop
sub
xlat
pop
fisubrl
push
sbb
sahf
and
push
lock
sbb
xor
or
mov
and
stos
adc
xor
loope
pop
mov
inc
dec
cmp
xchg
js
push
jnp
pop
add
clc
clc
mov
fcoms
decl
mov
popa
xor
adc
mov
loope,pt
mov
xchg
xchg
sbb
les
cwtl
in
add
das
mov
add
mov
sub
xor
push
mov
roll
xchg
adc
out
dec
fisubl
js
cmp
adcb
call
inc
es
and
outsb
into
push
fdivrs
out
cmp
iret
xor
data16
dec
cmp
sub
mov
jle
xchg
add
test
bound
mov
xchg
jno
pushf
cmp
addl
xor
pusha
mov
inc
cmp
sub
mov
push
sbb
push
lds
movl
ss
push
rorb
xchg
pop
nop
cmpsb
inc
push
mov
loopne
lock
cmc
outsb
xor
aam
push
ficoms
loopne
jbe
int3
lahf
andb
push
fdiv
fadd
test
adc
or
mov
add
or
cli
xchg
add
sbb
push
xchg
jmp
ds
lods
add
jmp
cmp
lods
pop
and
cmpl
mov
es
mov
stos
mov
cli
dec
daa
mov
xor
lods
test
loop
aam
mov
shrl
imul
sub
stc
int
xchg
jmp
out
mov
mov
lock
lahf
cmp
or
rolb
das
scas
icebp
int3
fld
sub
pushf
mov
fsts
test
roll
adc
sub
dec
mov
push
and
add
dec
dec
pop
std
addr16
xchg
es
testb
test
sub
shlb
test
sar
mov
mov
mov
lods
ds
aad
adc
inc
fwait
push
sbb
pusha
lcall
mov
xchg
sbb
cld
out
in
rcrb
add
or
mov
xlat
inc
push
jmp
fcomi
in
ficoms
test
nop
stos
mov
adc
mov
mov
ret
add
adc
lods
out
sti
fisubl
mov
inc
loop
sbb
outsl
push
adcl
mov
adc
roll
push
jb
aaa
sub
cmp
js
jnp
insl
inc
hlt
dec
div
sub
js
mov
and
hlt
sahf
ja
ja
dec
in
inc
sti
in
cmpb
sub
inc
cmp
inc
sar
popa
test
sahf
mov
stos
rcrl
pop
adc
and
lods
inc
or
test
push
xor
sti
add
jecxz
je
cmp
imul
sub
out
mov
xlat
sub
add
dec
pop
loop
jae
and
mov
ficoml
scas
lcall
xor
adc
fstl
fwait
in
lea
push
mov
jle
ret
jecxz
repnz
add
jecxz
jnp
addr16
sti
cld
xor
test
push
sub
test
cmc
imul
xchg
cmpsb
jl
xchg
jge
push
fisttpll
adc
mov
sub
mov
sbb
add
mov
test
or
jecxz
dec
or
cmp
cmp
pop
mov
sbb
mov
cwtl
cli
xor
sub
xchg
aas
aam
xor
js
push
push
sub
mov
sbb
add
call
cmpsl
aaa
outsl
dec
ss
mov
pusha
lods
xchg
lcall
add
inc
dec
and
and
ret
sbb
adc
inc
rorl
dec
test
insb
mov
mov
insl
inc
mov
inc
inc
fcompl
fmuls
inc
lods
ljmp
mov
out
inc
jmp
pop
xchg
and
les
dec
rorb
rorl
push
je
ret
aas
mov
pop
mov
mov
adc
and
in
ret
icebp
sbb
ljmp
mov
mov
dec
int3
and
xchg
pop
int3
or
xor
adc
shll
mov
test
je
mov
mov
push
push
pushf
es
adc
jl
xlat
xchg
pop
xchg
addb
jmp
test
or
jl
sub
xchg
pop
mov
out
cli
mov
pop
lock
xchg
sarb
push
pop
outsb
movsb
call
out
out
and
lods
outsb
das
sub
and
lods
xchg
inc
push
push
icebp
mov
test
or
out
jp
xchg
add
pop
test
cwtl
push
ror
push
clc
mov
sti
jl
mov
ja
sahf
push
loope
test
add
jo
sbb
jg
in
mov
adc
xlat
les
xchg
xor
lcall
sbb
das
rorb
sahf
shl
or
inc
jno
sub
ds
imulb
mov
pop
or
push
add
movb
int
pop
sbb
sbb
xor
clc
sbb
xchg
lcall
out
cmp
lea
in
nop
icebp
sbb
adc
sub
addr16
jae
xchg
js
lret
lods
dec
add
and
mov
push
xchg
repnz
add
push
push
dec
and
add
dec
add
mov
lds
cmp
repnz
out
incb
sub
aad
ret
dec
repnz
cmp
or
std
xchg
xchg
icebp
bnd
jecxz
cmpsb
imul
jae
mov
xchg
add
movsb
sub
pop
je
fisubrs
add
sub
xchg
movsl
xchg
pop
ss
xchg
loop
ljmp
testb
rorl
jecxz
ds
pop
and
inc
test
xchg
dec
ss
pop
mov
add
fisttpl
xor
xor
outsl
std
pop
mulb
jge
lods
pop
add
daa
insl
sar
scas
sub
mov
addr16
sbb
fisubs
adc
aaa
mov
pop
xorl
pop
cwtl
or
fwait
mov
or
out
dec
sub
inc
xor
lock
cmp
lock
jecxz
ss
and
add
push
hlt
out
movsl
loop
pop
inc
mov
in
mov
jecxz
jmp
mov
add
sub
popf
inc
xor
dec
or
adc
or
sbb
mov
pusha
add
notb
aam
data16
sbbl
ficomps
push
dec
loopne
faddl
jl
icebp
jl
mov
lcall
mov
cmp
call
or
int
jns
sub
lods
add
pusha
push
enter
dec
jl
pop
mov
mov
jnp
stos
mov
mov
int
cmp
push
xchg
hlt
sar
add
lret
or
fadds
sbb
xchg
xchg
daa
mov
push
pop
jo
sarb
push
jg
inc
fwait
orl
jo
test
lret
inc
push
and
popa
aaa
icebp
xchg
ss
loop
inc
gs
pushl
pop
loopne
push
stos
popa
ret
xor
stos
xchg
cmp
out
mov
js
shr
push
add
sub
xchg
icebp
push
cli
sbb
sbbb
lcall
xlat
mov
mov
push
les
jle
pop
testb
notl
hlt
xor
int3
callw
fsubl
ret
subb
push
mov
cmc
mov
jmp
cs
sbb
imul
xchg
xchg
int3
inc
adc
sub
or
repnz
adc
fcompl
push
adc
or
divb
aaa
call
pop
enter
mov
scas
addb
mov
call
cs
aam
cmp
xor
adc
xchg
sahf
add
out
pop
or
data16
lock
cld
int
mov
inc
into
and
mov
out
test
mull
sub
sub
sbb
pusha
lmsw
cmpsb
call
repnz
fisttps
and
repz
scas
cli
xchg
push
sbb
scas
pop
loopne
ficoms
dec
inc
or
dec
test
aaa
cmp
dec
mov
mov
or
jne
faddl
adc
das
mov
push
pop
in
xorl
and
out
adc
dec
cmp
ljmp
repz
out
clc
popa
pushf
add
pop
mov
bound
add
adc
xlat
mov
call
pop
adc
mulb
aam
add
dec
inc
push
data16
or
icebp
testb
std
mov
push
adcl
adc
in
cmp
mov
addb
push
incl
addr16
in
sbbb
mov
mov
xchg
nop
lock
dec
or
mov
jg
mov
xchg
add
pop
mov
scas
add
std
inc
call
inc
mov
push
cmp
or
orl
xchg
outsb
clc
fidivl
and
outsl
dec
test
aad
sbb
jge
pop
push
test
sar
lcall
scas
add
or
sbb
bswap
sbb
js
cwtl
fcomip
test
in
adc
jecxz
test
lds
insb
dec
push
sarb
subl
or
jl
and
rclb
fs
jle
mov
xor
cmp
jp
repnz
push
mov
or
test
jnp
lds
sbb
dec
push
insb
int
adc
lcall
negl
loope
aam
sbb
and
ja
mov
or
aad
scas
aaa
lock
test
mov
fiadds
out
mov
in
and
pop
lods
scas
pop
nop
or
push
stos
mov
fwait
dec
sub
cltd
or
sbb
mov
js
cmp
cltd
inc
nop
adc
inc
dec
xlat
sbb
clc
testl
mov
les
xchg
sbb
cli
popa
add
js
or
pop
shll
rolb
sbb
aam
pop
sahf
aam
inc
mov
xchg
cwtl
lahf
or
jecxz
add
mov
mov
sbb
sbb
out
sar
or
in
push
mov
popa
jmp
shlb
mov
pushf
xor
in
cmp
movsb
xor
call
es
and
pop
clc
dec
je
push
ret
or
cmp
cmp
sub
add
push
je,pt
sbb
cli
cmpsb
push
ss
or
adc
dec
shrb
xchg
mov
pushl
scas
cmp
stc
mov
or
mov
fs
ret
popa
fs
sbb
xchg
shlb
je
out
shl
add
or
pop
inc
cmp
imul
lcall
sbb
push
mov
jg
clc
push
ds
sbb
add
jp
and
mov
in
pop
xor
adc
push
fbld
dec
and
movsl
mov
or
lock
xchg
xor
push
loop
jbe
lret
cmpsb
test
pop
adc
das
mov
pop
je
and
add
dec
inc
shlb
sbb
xchg
cmpb
js
push
add
bound
loop
rclb
sbbl
mov
mov
dec
cmp
cs
and
inc
sbb
rorb
fidivl
dec
inc
or
adc
fs
adc
test
in
sbb
scas
aam
push
sbb
sub
sub
cmp
mov
add
adc
outsb
fmuls
insl
pop
testb
cmp
fdivr
xlat
push
mov
out
movsb
push
test
inc
mov
nop
xor
js
lods
cmp
cwtl
outsl
out
pop
cmp
mov
mov
stos
icebp
sbb
call
clc
push
add
jp
push
push
loope
leave
or
or
mov
les
add
xor
pop
push
inc
fcmovne
mov
add
scas
inc
mov
mov
mov
xchg
ret
jp
inc
push
xor
call
add
imul
andb
jg
test
or
mov
in
enter
ljmp
cwtl
jge
add
inc
imul
pushf
xor
enter
pop
cmp
push
mov
sbb
fcmovb
cld
fucomp
sbb
cmpl
push
and
push
aam
in
subb
inc
inc
sub
shr
cmp
and
jp
stc
dec
inc
lock
xchg
aam
pop
shrl
push
and
add
faddp
out
into
jle
les
pop
inc
imul
sub
lret
aam
sub
sub
sub
mov
stos
dec
push
dec
aas
adc
cmpsl
cmc
or
mov
cmpsb
mov
fdivrs
push
add
aam
xchg
loopne
lock
mov
pop
push
in
xchg
rorb
insl
or
mov
ds
outsb
packssdw
call
std
mov
jecxz
lcall
xchg
test
push
fdivrl
out
repnz
ss
icebp
loop
in
or
mov
cmpsb
pop
xor
and
push
or
mov
lcall
rcll
jecxz
mov
mov
jp
aad
les
lea
jbe
mov
in
adc
das
push
rol
rcl
lock
dec
lret
imul
inc
push
jecxz
js
mov
mov
push
es
ljmp
subb
data16
movsl
xor
cwtl
dec
test
jo
xchg
into
xchg
jne
fiadds
adc
mov
jmp
inc
shlb
sub
stos
in
es
out
mov
inc
mov
sub
inc
lahf
push
pop
sub
sbb
inc
sar
sub
in
scas
fdivrl
push
push
es
cmp
xor
mov
jb
loopne
cmp
mov
mov
and
push
or
cmpsl
stos
mov
sbb
push
jg
inc
push
std
mov
loope
pop
sarb
test
pop
add
ret
aaa
mov
xchg
out
fldl
pushf
ljmp
mov
pop
add
cli
loopne
pop
jmp
stc
hlt
adc
cmpl
mov
aaa
adc
xor
adc
out
mov
test
filds
dec
cmc
loope
cli
inc
mov
shrb
mov
jbe
and
xchg
push
mov
push
xor
lret
pop
pusha
xor
aam
mov
sub
dec
pop
push
jl
push
and
enter
sbb
je
loope
add
push
imul
xlat
sbb
std
jg
inc
stos
and
and
outsl
outsb
xorb
adc
enter
xor
je
data16
adc
and
push
jl
decb
rol
xchg
pop
rcrb
jns
dec
hlt
cmpsb
mov
outsl
pop
imul
inc
addb
into
mov
inc
add
sub
inc
jmp
shrb
out
mov
ljmp
dec
frstor
sbb
gs
stos
pop
fsubrl
clc
shrb
or
ret
je
adc
cld
push
faddl
inc
cmp
jns
and
push
push
into
call
pop
loopne
nop
add
mov
popa
xchg
nop
ss
pop
test
call
lock
jo
jnp
jg
push
shll
fwait
adc
inc
jns
inc
sti
int
dec
cmpsl
push
insb
pop
lock
shlb
icebp
and
mov
jecxz
lock
mov
bound
or
push
sbb
cmp
pop
mov
int
ljmp
outsb
orl
outsl
data16
mov
cld
cmp
leave
mov
outsl
gs
add
xchg
jle
xor
mov
jne
jb
hlt
out
xchg
jns
enter
or
mov
and
dec
jmp
add
arpl
daa
ljmp
and
rcrb
call
mov
orb
xchg
fdivr
shlb
aam
cmc
cmp
stos
or
mov
movsb
cltd
test
je
ret
lds
cmpsl
or
cmp
call
push
loope
mov
lock
arpl
push
hlt
scas
sbb
ror
inc
jb
dec
inc
push
int3
sbb
nop
mov
lods
imul
into
ljmp
push
xchg
push
and
mov
cli
aam
sbb
in
xor
add
push
push
sbb
sti
adc
and
cmc
sahf
jl
jge
clc
xchg
jge
out
test
and
pusha
xchg
mov
or
jmp
stos
jp
lods
xchg
mov
in
sub
pop
adc
adc
int3
mov
out
out
adc
or
mov
sub
loop
stc
out
cltd
inc
or
iret
sbb
fsubrl
fmull
push
lahf
adc
out
test
js
enter
rcrl
sbb
push
add
mov
add
test
leave
sub
loopne
xlat
xor
rcrl
add
dec
movsb
adc
mov
or
clc
cli
adc
test
incl
cli
jge
and
sub
adc
xor
sti
inc
into
sti
inc
andb
sub
cld
out
loopne
lock
cmp
add
sbb
mov
sbb
mov
aas
aam
mov
into
adc
sub
jecxz
mov
or
ss
xchg
or
clc
insl
mov
gs
leave
sbb
das
lock
outsl
sub
add
popa
out
add
xor
ja
call
jne
pop
cs
push
lcall
int3
pop
lea
sahf
inc
lahf
mov
mov
ja
stos
pmulhw
inc
xchg
in
sbb
mov
push
pop
sbb
lret
enter
mov
inc
xor
pop
idiv
fistl
xchg
xor
sub
sub
mov
jo
lods
add
repz
cli
inc
or
push
shrb
push
ss
push
sbb
sub
dec
clc
imul
add
aam
and
dec
stos
push
jbe
mov
lcall
ds
sbb
adc
add
out
lods
lcall
inc
sub
mov
add
push
fs
inc
mov
lock
lret
mov
xchg
add
lret
repz
je
fisttpll
sti
ds
push
mov
decl
push
popa
lret
or
pop
ljmp
and
pushl
pop
mov
je
sbbb
jns
sbb
lcall
shlb
and
out
fldenv
ss
push
lods
ds
test
and
dec
adc
xor
es
sahf
adc
loop
sarl
mov
adc
aaa
ljmp
mov
rorb
popa
sbb
jg
mov
jp
jbe
nop
clc
loope
xchg
outsb
push
mov
dec
fistl
xchg
cmc
fcmovbe
iret
add
inc
fstps
hlt
js
push
xor
jl
loopne
or
cli
ds
mov
push
mov
sti
iret
lock
or
addr16
inc
bound
sbb
cmp
adc
cmp
add
add
addb
movl
fidivs
xchg
fsubr
jbe
enter
adc
jo
mov
dec
shrb
sbbb
ja
inc
in
fdivrl
xor
jo
sub
sub
insl
mov
adc
jge
adc
inc
fdivs
xchg
push
xchg
loopne
je
into
js
mov
adc
add
scas
insb
cmp
stos
and
stos
mov
jo
and
and
pop
ljmp
xor
xchg
inc
test
dec
sarl
mov
jmp
sub
pop
inc
push
dec
inc
jnp
and
ret
mov
pop
outsb
inc
and
adc
xor
mov
je
ret
cmpsb
ret
into
xchg
xor
xchg
out
push
int3
mov
add
jne
sbb
leave
js
scas
jae
sub
xchg
mov
stc
inc
pop
add
mov
inc
rcrb
int3
call
xorl
in
mov
sub
push
push
push
mov
mov
or
shlb
clc
lods
add
dec
inc
inc
dec
and
daa
jecxz
push
mov
test
fwait
or
jl
shlb
jns
pusha
push
sbb
jg,pt
shll
add
test
enter
adc
mov
sub
or
xchg
cltd
jbe
fs
call
xor
xlat
les
mov
je
jg
fcmove
pop
cmp
test
or
mov
dec
into
adc
addb
sbb
cs
push
in
push
adc
jbe
stos
es
push
jmp
adc
jecxz
test
adc
pop
jl
lcall
and
imul
mov
sbb
mov
js
fs
lret
test
lcall
push
fcoml
out
xor
sbb
popa
push
mov
mov
pop
and
out
and
mov
xor
xchg
jecxz
jecxz
scas
js
movsl
and
pop
mov
callw
xor
insb
xor
fdivrp
push
mov
lret
dec
cld
mov
sbb
rorb
push
mov
push
pop
cmp
dec
bound
sub
and
inc
dec
adc
mov
ret
sbb
cwtl
and
or
push
inc
pop
lods
cmpsl
data16
or
test
roll
cmpsb
jle
and
add
sbb
les
mov
in
inc
inc
mov
fs
mov
xor
inc
mov
pop
ljmp
pop
pop
adc
dec
pusha
lcall
jno
jp
or
xchg
and
or
test
mov
pop
push
in
cmp
ret
lret
mov
push
hlt
push
mov
fmulp
mov
sti
and
leave
xor
aam
mov
jle
cmp
adc
stos
cli
fisttpl
inc
aaa
mov
cmc
aam
dec
xchg
and
sbb
negb
mov
movsl
hlt
and
jg
sahf
adc
or
jl
xor
push
aad
test
push
jno
sub
add
push
xchg
clc
outsb
add
mov
and
lods
movsb
push
fs
push
fidivs
xchg
mov
vmwrite
es
and
jae
add
daa
outsl
mov
pushf
or
push
push
push
movsl
dec
pop
ds
xchg
cmc
and
leave
insb
xchg
cmp
pop
and
mov
or
fwait
mov
iret
or
int
lock
aam
lret
push
rcl
xor
fstpl
cmp
popf
hlt
mov
hlt
mov
call
orb
jl
js
pop
add
push
jns
loop
push
repz
call
pushf
fsts
jg
loopne
mov
push
xor
mov
fistpll
out
mov
lret
mov
xor
xor
mov
push
add
lea
xchg
add
sbb
call
mov
loopne
js
lcall
daa
sarl
xchg
mov
cld
and
xor
jle
mov
jo
das
adc
xchg
fwait
lods
push
incl
mov
ss
add
addb
int3
mov
jg
pop
xor
add
xor
out
dec
in
add
or
adc
andl
leave
movsl
push
call
cmp
je
dec
jg
outsb
push
mov
mov
dec
mov
and
cmp
dec
test
dec
jg
aaa
in
mov
sbb
xlat
adc
inc
add
inc
dec
cmp
add
pop
fisttps
mov
rolb
push
mov
js
stos
or
mov
mov
aaa
cmp
inc
ret
call
mov
lea
xchg
ret
sbb
lock
mov
push
cld
inc
mov
jg
pop
fldenv
dec
jecxz
add
fbld
push
pop
mov
push
cmp
out
push
xchg
clc
pop
lock
dec
jge
sbb
mov
out
pop
mov
popa
int3
add
mov
add
outsb
call
pop
add
pusha
jo
test
mov
jmp
sbb
popf
cmp
add
push
mov
loop
inc
and
cmp
fcmove
aad
test
imul
add
or
lods
jno
ljmp
xor
test
imul
aaa
xlat
pop
out
loopne
shl
xchg
hlt
mov
jecxz
lds
iret
fsubs
imul
and
add
rcll
xor
mov
pop
and
lods
in
cmp
or
xor
int3
imul
mov
sbb
stos
cmpsb
lock
xchg
cld
bound
or
push
mov
dec
cmpsl
sbb
test
ret
dec
jl
cmc
jg
aam
add
cmpsb
addr16
sarb
add
fwait
or
add
fadds
cltd
sarb
or
sub
imulb
subb
hlt
inc
sbb
jg
fildl
lods
stos
sbb
mov
dec
sub
movsl
cmpsb
incb
repnz
adc
ss
xchg
dec
fsubrs
movsl
pop
push
push
ret
cmp
imul
lods
inc
cwtl
jl
fwait
pop
and
push
xor
aaa
fdivs
push
dec
mov
or
es
fwait
mov
and
adc
dec
dec
xor
scas
outsl
sub
pop
seto
lahf
pop
loopne
mov
and
movsb
push
test
ret
es
jecxz
or
lods
movsl
out
loope
or
push
outsb
lock
xchg
loopne
and
push
ficoms
fmull
loope
lret
insl
rorl
add
popa
enter
inc
ss
out
jecxz
cmpsb
push
push
add
test
push
inc
add
xchg
out
inc
jmp
mov
dec
int3
lret
inc
jle
xchg
mov
mov
xlat
push
daa
hlt
jl
push
inc
fcomi
sbbb
movsb
dec
in
mov
add
push
je
sar
jg
test
add
jbe
push
shl
jno
xchg
fstpt
jle
shrl
mov
add
sbb
xchg
enter
jo
in
mov
incl
mov
or
cmp
adc
cmp
push
orb
lds
cmp
push
test
push
cwtl
aaa
xor
adc
jae
adc
hlt
jo
stos
sub
xchg
push
sbbb
aaa
mov
stos
pop
adc
push
cmp
push
inc
mov
dec
sub
mov
addb
fwait
repz
jne
outsb
inc
push
xchg
pop
mov
cs
rolb
push
outsb
cld
xchg
dec
js
movsb
xor
adc
mov
mov
mov
test
sbb
movsl
cli
inc
push
cmc
jmp
nop
inc
and
lcall
jo
stc
inc
adc
inc
lcall
loopne
xor
das
int3
adc
icebp
cs
xlat
cmp
adc
push
mov
jp
sbb
jmp
stos
rorl
aaa
std
ficomps
ljmp
mov
test
mov
fs
xorb
cmp
cwtl
std
sub
mov
pop
call
mov
xor
or
sti
adc
adcl
mov
enter
cld
xchg
push
jl
inc
stc
mov
aam
xlat
xchg
push
add
mov
pop
or
test
leave
scas
loopne
cmc
jg
jp
sarb
pushf
or
mov
pop
aam
cs
or
jle
ret
sub
dec
nop
mov
mov
out
pop
pop
ss
jno
cmp
cs
scas
push
dec
mov
cli
adc
sbb
add
mov
inc
add
sub
mov
inc
sub
sbb
jno
lock
adc
and
mov
fistps
mov
scas
push
repnz
movsb
cli
mov
in
push
and
ret
loopne
ja
dec
push
aam
adc
inc
icebp
stos
xor
jmp
mov
mov
xlat
mov
mov
add
lahf
sbbb
scas
scas
xchg
lock
arpl
cmp
mov
jmp
inc
push
adcb
incl
popf
add
pusha
aam
push
loope
xchg
and
and
fstl
je
inc
jle
orb
clc
decl
or
cmp
add
lods
aaa
push
stos
call
enter
dec
in
shrb
insb
out
xorb
pop
pop
add
sbb
rclb
out
rolb
stos
pop
ss
loopne
ret
shlb
shr
mov
pop
pop
mov
or
or
push
into
mov
inc
jge
pop
fcomip
pop
pop
leave
loop
stos
data16
push
insb
hlt
push
pop
lock
or
imul
arpl
or
aam
int
dec
lods
sahf
pop
jl
int
xlat
call
mov
mov
pop
aas
push
sbb
and
pop
push
mov
es
clc
out
loopne
shlb
daa
orb
div
mov
enter
mov
jmp
push
nop
xchg
pop
pop
jbe
or
ss
pop
outsl
add
inc
jb
in
mov
jecxz
dec
dec
fwait
repnz
es
push
sbb
call
xor
mov
push
adc
jecxz
cmc
inc
inc
jl
clc
fwait
icebp
mov
call
cmp
rorl
add
dec
fucom
push
add
inc
sti
pop
insb
push
xor
inc
fdivr
dec
xchg
mov
pop
xchg
mov
and
add
ret
or
inc
ja
sub
in
xor
xchg
adc
add
cmp
loopne
pop
jb
xlat
jecxz
adc
les
dec
clc
push
ret
push
shlb
adc
mov
add
mov
push
roll
ljmp
and
xchg
or
in
jge
mov
sbb
adc
lock
rcr
lret
jle
adc
mov
push
rcrl
sbb
and
mov
ljmp
add
jne
pop
cmc
jne
sbb
das
fcmovu
out
jb
call
std
enter
sbb
clc
or
out
sub
mov
mov
cltd
add
xchg
ret
ja
or
xchg
clc
sbb
mov
cmp
je
fcmovnbe
add
out
xchg
and
mov
push
outsb
inc
lock
loop
aaa
std
push
xchg
adc
in
jo
push
jb
jl
mov
jle
xchg
cmp
jbe
xorb
inc
ret
inc
xchg
das
sbb
rcrl
scas
aam
rorb
lea
hlt
cmp
stos
inc
dec
xor
mov
xchg
and
jecxz
daa
add
jecxz
out
pop
mov
out
ret
inc
cld
stc
clc
lods
mov
push
adc
xor
icebp
aad
decb
add
clc
daa
mov
cmpsb
ja
jb
push
cld
scas
rcr
mov
add
imul
adc
icebp
imul
adc
pop
ret
dec
mov
lahf
subl
pop
dec
clc
incl
enter
frstor
add
clc
fadds
rolb
mov
inc
sub
test
lea
imul
dec
ja
jno
inc
or
faddl
sbb
mov
dec
mov
ljmp
filds
add
clc
iret
pop
jns
mov
adc
inc
push
dec
add
addr16
pop
or
insb
insb
inc
ficoml
cli
push
mov
pop
adc
adc
hlt
inc
fidivl
pop
clc
popf
aad
mov
and
mov
pop
nop
fldenv
in
fdivrs
inc
rolb
iret
pop
iret
lock
mov
xor
loop
imulb
jecxz
cwtl
push
or
fsubrl
jno
orb
movsb
xor
ss
and
scas
aam
test
jnp
push
push
mov
mov
xchg
or
pop
mov
sbb
push
flds
pop
adc
fmul
loopne
js
push
loopne
inc
or
sub
mov
add
cli
jbe
cmc
pop
or
in
mov
xchg
pop
test
inc
mov
into
mov
aaa
fucomip
dec
js
pop
sub
inc
add
lock
add
fiadds
fidivl
loope
or
push
data16
dec
adc
movsb
fldl
push
incl
rclb
add
jmp
mov
adc
test
sbb
inc
pop
inc
inc
lock
popf
mov
test
cmp
dec
divb
enter
push
mov
lock
sbb
adc
pusha
movsl
ss
js
ds
or
cli
mov
mov
sbb
adc
outsl
sbb
jno
mov
pop
in
jl
xor
hlt
cli
mov
push
push
leave
loop
and
daa
mov
cmp
lods
push
in
sub
js
daa
int
xchg
jb
fs
test
popa
or
clc
ljmp
je
pop
xchg
pusha
jo
pop
clc
mov
shlb
sbb
adc
pop
push
cmpsl
fcoml
int3
or
ds
loope
dec
and
icebp
and
out
xchg
pop
loopne
sbb
lods
inc
es
adc
les
mov
test
rcrb
sbb
push
push
push
xor
inc
dec
adc
ret
adc
jbe
shl
pop
aas
std
pop
insl
or
mov
inc
out
clc
jbe
sub
mov
aam
sti
sub
arpl
xchg
ret
out
shlb
dec
adc
adc
sub
ret
aad
sbb
mov
sbb
mov
aad
and
xchg
dec
movsl
sub
xor
incl
lods
mov
mov
stos
int3
xor
shl
or
testb
icebp
mov
sub
pop
adc
push
lret
mov
data16
daa
jl
clc
sbb
repz
call
mov
xor
mov
inc
push
or
enter
hlt
pop
shrb
sub
mov
push
inc
sbb
jmp
and
leave
dec
xchg
iret
and
mov
leave
ja
aam
sahf
in
mov
mov
jo
lods
mov
hlt
jle
clc
sbb
push
jp
aas
sub
push
ret
sbb
cvtps2pi
mov
fildll
push
xor
into
push
testb
test
add
add
push
adc
and
jg
out
test
outsl
or
inc
pop
xor
push
fs
sub
adc
xchg
arpl
pop
rclb
mov
xchg
and
pop
int3
lret
cwtl
and
rep
movsb
mov
data16
lret
mov
push
push
and
shrl
lret
test
jg
aad
adc
mov
fisubrl
xor
mov
std
add
sub
add
scas
cld
sbb
sbb
adc
xor
hlt
adc
xchg
pop
aas
clc
xchg
mov
or
test
test
loope
je
lea
jl
pop
add
lea
fbstp
pusha
and
js
mov
lds
ja
add
xchg
pop
mov
cld
cmp
or
xor
popf
mull
cmp
add
xchg
pop
xor
sbb
adc
cwtl
inc
mov
and
push
add
add
push
int
sbbb
add
insb
push
push
add
test
push
lock
xchg
xor
insb
shlb
sbb
cmpsb
or
pop
push
loop
mov
es
inc
xor
adc
test
dec
cmp
mov
movsb
mov
std
add
inc
cmc
into
adc
clc
hlt
lds
push
xchg
ljmp
sti
scas
sarl
test
out
jmp
cld
jmp
in
sbb
mov
jo
inc
and
aaa
mov
hlt
push
jmp
cmpsb
push
cmp
mov
jo
iret
stos
ds
dec
cmp
mov
or
dec
enter
cli
push
loope
adc
pusha
xorl
mov
xchg
mov
subb
lods
jp
xchg
or
das
mov
pusha
pop
shlb
push
jo
shll
jo
sub
xchg
and
pushl
shrl
inc
loope
inc
rorl
insl
xor
sbb
aas
subb
loopne
into
dec
pop
push
stc
push
inc
push
sbb
adc
xor
pop
cwtl
lock
ljmp
fldl2e
pop
and
xchg
cs
faddl
cmc
sbb
gs
or
push
push
or
loop
add
mov
and
jl
pop
push
xor
jmp
lahf
mov
repnz
lret
mov
aad
pop
push
mov
push
call
xchg
cmp
data16
sub
es
mov
orb
push
iret
aas
mov
sbb
adc
dec
mov
int
fadd
inc
pop
fistpl
adc
mov
jo
cli
stc
ja
std
add
insb
nop
imul
arpl
roll
es
add
inc
mov
mov
pop
outsb
or
and
les
nop
ljmp
test
xchg
cmp
mov
add
loopne
push
push
adc
nop
dec
stos
outsl
mov
fistpl
inc
jmp
jmp
outsb
nop
xchg
inc
sti
xchg
and
sub
repnz
scas
in
xchg
aad
sbb
push
arpl
adc
retw
inc
push
addl
cmp
add
add
mov
and
rcl
mov
fwait
sub
into
test
add
ljmp
hlt
sub
int
fsubrl
fiaddl
loop
sbb
mov
push
test
push
mov
pop
sub
aam
inc
adc
cmp
je
pop
add
mov
scas
xor
bound
add
sbbl
inc
add
mov
ljmp
ds
pusha
pop
xchg
cmp
jnp
pop
xchg
fcom
popa
and
lea
mov
scas
adc
fisttps
decb
pop
sbb
or
test
ret
ja
push
sub
mov
sahf
mov
jmp
cli
sbb
xchg
loope
aam
test
lock
pop
js
insl
sbb
lock
push
mov
rorb
cwtl
ljmp
lret
xlat
test
inc
dec
mov
add
push
cld
push
lret
icebp
push
sub
lods
mov
add
std
xchg
xchg
xchg
ret
or
add
dec
mov
call
add
loop
test
and
clc
add
scas
lret
xchg
push
xor
repz
ljmp
std
dec
ljmp
jmp
dec
rcrl
dec
stos
push
mov
add
mov
or
and
clc
cmpsb
out
ret
std
lds
push
add
xchg
aam
sub
ja
mov
push
fs
pusha
rcrl
in
xor
add
pop
test
mov
push
push
mov
into
inc
mov
or
je
shl
cmp
dec
andb
std
mov
pop
rcll
mov
dec
in
out
mov
int
lcall
jb
aas
xor
sbb
dec
lds
or
addb
xchg
adc
pop
loope
aaa
cld
das
popa
outsb
xchg
orl
dec
inc
inc
enter
loope
adc
ljmp
jp
out
call
mov
push
pop
jo
imul
mov
test
lock
test
pushf
sub
cmp
mov
dec
int
add
cmpsb
out
jge
lock
je
insb
ret
xabort
xchg
xchg
inc
jb
mov
mov
mov
or
es
mov
jne
rol
fldt
push
hlt
iret
and
adc
jp
pop
jnp
lods
movsb
pop
push
out
or
and
add
ljmp
clc
cmp
fs
or
ret
rcrb
ret
push
aad
mov
inc
push
cld
add
ror
sub
out
add
xchg
ficomps
xor
and
movsl
repnz
xchg
and
mov
mov
jg
or
test
pop
fbld
cmp
js
dec
mov
sub
mov
pop
cs
loope
sub
jbe
fwait
sub
loop
lods
lret
xchg
out
lret
and
out
popa
inc
mov
inc
jmp
mov
outsb
mov
push
mov
shrl
insb
cmp
mov
push
subb
jle
in
pop
pop
mov
jo
xchg
jo
push
push
or
icebp
and
pop
xor
adc
inc
insl
jge
sbb
aas
pop
test
test
out
decb
or
jge
es
leave
lds
stc
inc
das
xchg
cs
repnz
fst
sbb
sbb
jo
cmc
lcall
pop
mov
or
jbe
or
jae
pop
jg
mov
dec
ds
mov
cmpsl
add
lods
ljmp
pop
lret
xor
adc
stc
mov
incb
adc
nop
dec
push
pushf
or
cmp
stos
test
int3
push
out
jge
jno
lock
icebp
in
fistps
sbb
or
sub
decl
dec
aas
xchg
jo
movsb
mov
dec
adc
enter
or
cmp
loop
aaa
cmp
jo
adc
dec
mov
mov
mulb
xor
mov
ret
shll
arpl
dec
out
adc
jmp
jo
shll
aas
adc
mov
sahf
lcall
sahf
out
scas
pop
fildl
ljmp
cli
insl
xlat
mov
push
inc
cmp
pop
aas
xchg
mov
push
cmp
jo
call
fs
movsl
ja
scas
in
and
dec
xchg
dec
or
inc
cmpsb
jle
xor
clc
mov
add
sbb
orb
cmp
xor
add
adc
sub
mov
aaa
sub
jl
test
push
sbb
dec
push
dec
ljmp
sub
fidivrs
add
pusha
das
sbb
mov
xor
out
and
add
enter
add
dec
pop
pusha
mov
ds
jmp
sar
or
jne
xchg
push
cltd
push
add
mov
aad
push
scas
in
fwait
test
mov
mov
sahf
test
cmp
cmp
adc
inc
mov
sbb
leave
dec
ljmp
push
imul
insl
add
xor
dec
or
rclb
sbb
push
subl
je
test
ret
xor
sub
fwait
push
inc
adc
xchg
sbb
and
sub
cltd
mov
xchg
cld
inc
sub
les
icebp
ds
dec
ja
fisttpl
lods
cwtl
jb
push
cmp
je
fwait
jmp
push
sti
inc
aam
call
call
inc
lcall
push
sub
outsb
arpl
and
mov
dec
decl
push
xchg
and
pop
sbb
popw
lock
cld
mov
adc
jb
inc
dec
mov
sbb
xchg
aad
jle
repz
cld
add
xchg
pop
test
js
add
sar
xchg
popa
sub
fadds
jle
add
adc
dec
pop
or
sbb
sub
loopne
sbb
das
mov
jecxz
lcall
lcall
outsb
and
fidivrs
add
test
mov
cli
add
sbb
xchg
xchg
faddl
pop
imul
pusha
mov
xchg
mov
jg
adc
inc
pop
jo
pop
push
clc
repz
jb
test
bound
xchg
and
dec
cld
jmp
or
movsl
jo
out
xchg
adc
jg
mov
int
into
inc
cmp
cmpl
loop
sahf
insl
xlat
popa
jmp
jne
aad
or
rolb
std
mov
sub
jl
loopne
inc
inc
pop
outsl
adc
scas
cwtl
dec
add
push
push
jge
push
loop
ret
lock
scas
pushf
rclb
test
xchg
adc
mov
pop
scas
pop
aam
shl
pop
lds
in
test
add
push
popa
sub
loopne
fists
ret
dec
cmp
hlt
outsb
sub
sti
add
ljmp
call
xchg
pop
fisttps
jecxz
sbb
repnz
in
push
cmp
add
xchg
cwtl
inc
and
loope
mov
lcall
pop
sbb
cld
mov
inc
push
nop
icebp
mov
cmp
test
icebp
std
mov
jbe
movsb
adc
push
repnz
hlt
lcall
loopne
popf
leave
push
push
jb
jno
ror
mov
mov
dec
mov
adc
sahf
pop
ss
cs
mov
repz
ret
test
rcr
or
sub
push
xchg
mov
pop
push
sbb
inc
sbb
aad
mov
mov
int3
xchg
out
jo
in
pop
je
js
in
out
push
xor
test
add
xchg
mov
inc
mov
jg
test
add
outsl
adc
inc
mov
cld
jp
jo
push
jle
movsb
xchg
in
pop
cmp
lret
test
js
shl
cli
adc
cwtl
movsb
inc
add
mov
push
add
int3
jl
ja
push
and
pop
jg
jbe
mov
and
push
pop
and
sbb
ret
add
sbb
pop
pop
jp
mov
mov
les
dec
mov
jns
data16
lock
xchg
sub
test
mov
xor
insl
or
cmc
rol
movsb
dec
loopne
mov
add
in
mov
push
lods
mov
dec
shl
mov
pop
mov
xchg
ss
cli
addl
push
pop
cwtl
sarb
mov
or
imul
aas
mov
in
xor
xchg
mov
lock
add
daa
repz
test
cmpsb
and
fcmovb
push
out
test
movsb
xchg
ret
inc
js
jo
xor
push
test
mov
xor
sub
lds
pop
or
mov
ret
les
inc
bound
daa
pusha
inc
int3
sti
clc
loop
lock
mov
add
cmp
mov
int
xor
jp
sbb
dec
push
mov
jge
orb
xchg
ret
pusha
dec
enter
adc
pushf
add
add
sbb
xor
lcall
dec
in
jp
mov
js
inc
add
loop
inc
or
mov
sub
jbe
sbb
nop
ss
es
clc
or
mov
cwtl
in
push
mov
lock
mov
or
data16
mov
and
lock
pop
jle
pop
cli
pop
mov
orb
xor
adc
xor
cld
imul
inc
inc
sbb
ljmp
add
mov
add
add
cmp
cmpsl
lock
test
dec
pop
adcb
inc
jge
xchg
and
incl
sti
sbb
stos
adcl
mov
jl
mov
jp
jno
movsb
test
loop
lret
fs
inc
icebp
jo
shlb
pop
push
lret
dec
idivl
jg
jno
sbb
cld
shlb
inc
xor
cmp
dec
xchg
mov
stos
in
insb
cmpsl
add
and
sar
fisttps
loopne
mov
mov
jbe
sub
push
rclb
mov
mov
idiv
enter
cltd
mov
roll
adc
cltd
popf
hlt
stc
mov
xchg
jecxz
leave
adc
pop
pusha
sub
or
xchg
stos
xchg
xchg
insb
mov
add
xor
std
not
rcll
push
rolb
cli
lret
dec
dec
adc
mov
and
or
mov
incl
mov
pop
sbb
jge
adc
mov
les
jno
jecxz
jl
outsl
andb
xor
or
adcb
and
lahf
cmc
jmp
les
mov
outsl
fsubl
mov
mov
insl
mov
test
push
add
sbb
lods
pop
lds
mov
mov
orb
ds
or
outsl
add
push
out
fwait
push
pop
mov
idivb
ret
or
icebp
std
je
sub
lods
ja
cmp
cmp
aam
mov
pop
jg
shrl
sbb
fcmovu
icebp
xchg
icebp
cmp
popa
cld
sbb
pop
icebp
jne
or
les
outsl
adc
fcoms
pushf
jge
and
jno
popl
mov
in
mov
dec
pop
mov
mov
jo
sub
aad
adc
cmp
cmp
pop
and
stos
decb
sbb
and
test
dec
pop
lahf
push
xchg
lret
pop
int3
xchg
fnstsw
jecxz
or
pop
jbe
js
pushf
daa
mov
jbe
adc
jno
decl
cmpsl
out
subb
clc
test
rorb
outsl
push
rorl
lahf
xor
mov
orl
mov
cltd
jge,pt
lods
push
js
jae
iret
scas
pop
or
out
cmp
push
inc
dec
lods
loope
lock
rorl
pushf
leave
jo
stos
and
lock
push
loop,pt
inc
dec
push
outsl
and
stos
jo
cmp
lretw
lds
and
sub
inc
aas
in
stos
sbb
ret
test
movswl
imul
mov
stos
outsb
bound
add
push
dec
gs
jns
push
icebp
push
addr16
inc
shr
dec
push
push
sbb
inc
pop
jbe
adc
push
xchg
jge
cmp
jmp
lock
adcl
lods
mov
movsb
outsb
orb
pusha
pop
xchg
mov
fisubl
push
jecxz
iret
sbb
mov
push
pop
and
cmp
or
pop
movups
mov
push
cli
lret
rorb
sbb
mov
inc
and
xor
shlb
ss
mov
hlt
jmp
orb
add
push
daa
icebp
call
nop
and
imul
stos
sub
and
or
nop
inc
push
xorb
push
div
ljmp
push
ret
sub
ljmp
sub
mov
sub
cmp
loop
stos
mov
pop
fwait
adc
pop
scas
into
rclb
rclb
sbb
push
mov
dec
lahf
sbb
xchg
push
jp
das
out
or
dec
jnp
imul
sbb
and
pop
push
adc
inc
adc
add
nop
push
push
aaa
cmp
mull
data16
stos
ds
jmp
mov
fdivl
mov
cwtl
cmc
push
cmp
push
add
mov
in
repnz
je
cmpsl
sbb
inc
pop
mov
sbb
sbb
mov
jge
ret
push
std
mov
loop
sbb
repnz
add
inc
mov
test
outsb
add
in
hlt
fbld
adc
or
mov
lret
and
mov
jp
jmp
cmp
mov
in
push
enter
cmp
insb
rcrl
inc
and
add
js
mov
lds
clc
int3
shlb
ljmp
test
lret
rcll
hlt
mov
jg
push
std
or
push
mov
jmp
push
pop
push
inc
adc
arpl
lret
mov
clc
testb
into
outsl
mov
and
dec
repz
test
or
sub
or
mov
pusha
scas
dec
aam
inc
out
cmp
inc
mov
in
or
jo
stos
push
out
sub
fimull
adc
mov
cmp
mov
adc
hlt
inc
ret
xor
lods
add
ret
push
movsb
add
std
push
add
jns
jp
mov
cli
fiadds
inc
add
cmp
cld
mov
rcl
inc
flds
xor
cwtl
push
rcrl
clc
xchg
loop
mov
addr16
jl
in
mov
sub
scas
mov
icebp
push
and
pmaddwd
mov
clc
andb
mov
pop
sub
js,pn
sbb
lret
mov
mov
lret
xor
fimull
aam
jecxz
jl
repz
push
add
xchg
les
push
lock
mov
add
push
add
sub
push
cmp
loop
sbb
clc
out
repnz
push
inc
adc
dec
inc
sbb
outsl
pusha
adc
fwait
ja
xor
aas
lock
out
mov
scas
ja
pop
sahf
inc
sbb
cmp
mov
clc
cvtps2pd
lret
mov
mov
aam
cmp
adc
cmc
loop
sarb
fidivrl
sti
outsb
adc
cmp
rorb
push
xor
inc
sbb
jb
pop
push
loope
xor
stos
push
adc
add
jo
pop
push
in
daa
or
clc
clc
aad
add
enter
mov
int3
mov
leave
fstps
pusha
fucomip
mov
add
xor
loopne
and
orb
add
push
call
fdivrl
xchg
inc
popf
test
jnp
sub
cld
stc
mov
stos
add
shl
jbe
ljmp
jbe
push
mov
or
and
punpcklbw
aad
pop
pop
rolb
inc
pop
rcl
ret
mov
jl
xchg
mov
inc
stos
subb
add
sbb
sbb
out
dec
out
es
mov
cli
or
movsb
shll
mov
ja
ret
sub
mov
mov
inc
dec
hlt
xchg
adc
ds
pop
sbb
inc
or
rcrb
mov
sahf
mov
shll
addr16
and
dec
push
and
pop
jecxz
bound
insb
dec
pop
sahf
xchg
fimull
sub
imul
inc
rcl
mov
inc
clc
push
ret
cmpl
sbb
jno
mov
or
and
cmp
movhps
inc
ljmp
js
fwait
cmp
popa
out
xor
jno
ficoml
mov
pop
add
adc
enter
ret
cwtl
xor
xchg
adc
ljmp
scas
add
xchg
and
sbb
out
dec
add
fdivl
cmp
push
outsl
mov
pop
stos
mov
inc
xor
test
xchg
movsb
and
mov
bound
hlt
stos
mov
and
fwait
imul
loopne
or
xchg
ljmp
mov
sbb
fst
mov
in
jne
adc
mov
dec
fs
mov
adc
add
ljmp
pop
ljmp
icebp
loop
and
call
test
inc
rcll
cmp
je
push
cli
mov
lret
add
push
fstps
loope
jmp
subb
mov
cld
arpl
cmp
pushf
and
jge
fsts
cmc
push
mov
mov
jne
add
push
sbb
mov
mov
pusha
test
les
test
sub
subl
mov
pop
xchg
out
cmpb
cli
fucomip
xchg
fadds
test
mov
test
push
lods
hlt
push
sbb
push
movsb
push
xor
push
cmp
jb
jmp
jmp
lea
lods
push
dec
test
mov
adc
mov
xchg
pop
insb
pop
lret
repz
push
mov
jecxz
roll
vandnps
or
jle
add
cwtl
or
inc
push
rcrl
pop
sbb
inc
fisubl
imul
std
xor
pop
mov
loope
aas
enter
inc
adc
push
mov
gs
fiaddl
call
sbb
lock
xchg
and
loope
adc
orl
jle
cli
inc
mov
ljmp
xor
mov
insl
add
loop
mov
mov
in
dec
cmc
mov
pop
rcl
movsl
inc
inc
rclb
clc
test
add
jns
sub
daa
jno
std
lock
or
fisttpll
and
lods
fbld
in
push
lds
aad
sbb
and
mov
jo
push
push
or
mov
enter
mov
aam
loopne
call
dec
fildll
lods
dec
push
add
je
js
and
cli
outsl
mov
jnp
fimuls
xor
loopne
dec
cmp
push
pushl
push
mov
pushf
scas
push
addl
jp
imulb
and
fbstp
push
shll
jmp
test
xor
xchg
mov
add
fs
scas
fildll
xadd
imul
adc
andb
addb
inc
adc
aas
lods
xchg
sub
inc
lods
nop
adc
popf
rclb
scas
push
clc
mov
cltd
mulb
test
sbb
inc
loop
xchg
or
pop
jne
hlt
test
test
sbb
addr16
jl
fiaddl
mov
hlt
ja
insb
jmp
test
inc
hlt
jae
out
jo
push
add
clc
add
dec
or
inc
cmp
test
pop
cmp
sar
mov
enter
sbb
adc
add
pop
nop
loope
das
mull
sbb
xor
outsb
stc
add
mov
xchg
inc
fbld
or
lods
xchg
inc
imul
push
out
ds
jl
xor
lcall
cmp
ljmp
stos
icebp
push
xor
mov
data16
lds
cli
fsubrl
or
into
sub
mov
adc
jmp
mov
cmc
fbstp
mov
cli
sbb
inc
test
es
push
adcb
out
lcall
out
clc
mov
rcrl
push
movsl
stos
adc
and
xor
or
jle
pusha
cli
dec
ret
inc
mov
orb
call
enter
push
push
fs
ret
fisubs
xor
sbb
add
lds
clc
xor
rcrl
pop
and
xor
enter
stos
lods
sub
loopne
std
pushf
sub
jl
cmc
add
push
mov
fwait
push
jae
dec
lods
lds
mov
mov
leave
mov
sub
dec
call
add
clc
mov
inc
xor
mov
add
in
fadds
add
xchg
cmp
hlt
lea
aad
inc
call
or
loope
in
xor
lods
dec
je,pn
adcb
adc
ret
push
loop
xor
clc
adc
xor
call
test
arpl
or
lds
inc
xor
or
and
mov
add
fists
and
andl
icebp
pop
push
add
sub
push
add
sbb
adc
pop
pop
push
int3
add
fcomip
sub
dec
mov
cmp
cmp
movsl
std
data16
pop
mov
popf
movsb
push
fldt
and
das
outsb
xchg
jecxz
mov
and
pop
push
movsb
mov
ja
mov
adc
pusha
and
fildl
fmul
jns
pop
lds
pop
cmp
rorl
mov
pop
cli
add
and
lcall
or
mov
cmc
insb
imul
adc
ret
mulb
xor
add
add
pop
and
lods
mov
or
dec
mov
xor
inc
sbb
test
adc
or
sbb
lods
push
cwtl
mov
dec
cli
add
movsb
inc
ret
jns
inc
es
call
je
mov
xor
adc
out
dec
adc
outsl
jg
js
pop
add
hlt
hlt
sbb
add
or
pop
cmp
andb
scas
pushl
nop
add
xor
push
test
jl
loopne
insl
cli
ljmp
xchg
sub
sub
loopne
fisubrl
daa
cwtl
pop
nop
mov
jmp
filds
or
mov
fiaddl
push
xchg
sbbl
mov
or
stos
out
push
scas
jl
and
fcmovnb
add
sahf
shlb
sahf
sbb
jno
add
ljmp
add
xchg
ja
pop
cmp
fdivrs
mov
sub
and
adc
mov
dec
dec
cmpsb
movl
sbb
push
bound
sti
or
stos
sbb
out
fsts
xor
dec
rclb
insb
xor
jecxz
jb
decl
xchg
out
ss
pop
test
enter
xchg
clc
fwait
or
and
add
in
lods
add
and
fcmovu
test
jle
xchg
insb
push
fs
mov
out
in
sub
pop
loope
sahf
ljmp
inc
out
cmp
mov
mov
or
adc
je
xor
ret
add
push
xlat
icebp
cs
sub
clc
ret
hlt
xadd
jb
or
dec
cli
int
push
pushf
dec
mov
into
mov
sbb
aam
cmc
cld
sub
adc
test
in
stc
or
mov
stos
les
loop
pop
loopne
mov
pop
xor
jae
and
xchg
lods
outsl
lret
mov
dec
sub
push
cwtl
sbb
cltd
add
fnstenv
out
insb
lods
movsb
sbb
int3
push
es
or
rep
pop
aad
cmp
xchg
popa
in
into
in
cmp
aam
orb
dec
adc
and
lret
lock
xchg
jne
rcr
icebp
jecxz
jns
cwtl
and
imul
in
nop
jo
or
out
fldcw
outsl
lock
fdivr
inc
add
pop
mov
clc
mov
cmp
adc
test
insb
sarl
test
push
cli
jg
jecxz
mov
mov
sti
push
cli
add
shl
fimull
mov
jne
fdivrs
je
or
cmpsl
iret
push
pop
je
jmp
pop
and
xchg
stos
imul
movsl
add
mov
add
imul
fildll
pop
cmp
or
dec
pop
clc
mov
inc
sub
sbb
xlat
sub
mov
loope
xchg
xchg
aam
pop
imul
loop
sbb
or
mov
leave
cmc
jmp
nop
hlt
mov
out
mov
pop
popa
daa
gs
push
pop
call
ret
jecxz
cmp
pop
test
push
mov
sbb
aaa
mov
mov
sbb
mov
test
loope
mov
xor
inc
int3
cmp
cmc
push
lahf
repnz
push
icebp
xchg
outsb
cmpsb
push
adcl
jmp
pop
clc
or
ficompl
cs
jmp
push
outsl
sbbb
xchg
insb
mov
dec
xor
pop
loopne
push
inc
mov
jmp
cwtl
lcall
push
cmp
adcb
adc
aam
mov
push
loop
sbb
cs
mov
cmpsb
cmp
xchg
out
push
add
imulb
loopne
pop
popa
mov
xor
loop
dec
sbb
mov
pop
cmpsb
mov
mov
push
push
push
lock
jb
shll
in
rolb
pop
std
or
jge
mov
pop
xor
test
jg
inc
repz
xchg
mov
js
jp
jg
jns
sub
fucomip
inc
ret
outsl
out
insb
inc
enter
dec
stos
stos
cmpb
xchg
dec
cmpsb
repnz
aam
fs
mov
inc
and
jnp
pop
mov
outsl
xchg
add
cmpb
push
pushf
inc
cmp
scas
sbb
mov
inc
sbb
enter
outsb
mov
test
mov
sub
repz
adc
and
loope
pop
cs
jno
adc
xchg
sub
push
cwtl
adc
add
add
push
adc
add
xor
cmp
add
adc
add
jecxz
ret
xchg
popa
xchg
sub
mov
inc
stos
into
inc
loope
cmp
out
fstl
mov
add
ja
mov
mov
push
add
sub
sbbb
int3
aas
sub
mov
push
ja
nop
jle
cmp
or
pop
mov
push
mov
dec
jl
arpl
outsb
and
mov
xchg
shlb
js
in
jo
xchg
popa
loop
fwait
add
outsb
into
cltd
cmp
pop
pushf
mov
push
dec
je
into
clc
inc
js
inc
dec
add
pop
sbb
jecxz
enter
mull
or
or
in
ret
mov
shrb
loop
mov
arpl
pop
adc
cmpsl
les
xchg
jb
dec
call
es
mov
jg
push
xchg
xorl
add
push
mov
add
clc
aam
scas
push
test
jo
cld
sbb
adc
push
inc
mov
leave
nop
xchg
test
into
ret
jae
pop
sbbb
xchg
xchg
lods
fdivs
cmp
and
dec
mov
adc
sarw
lods
cltd
sbb
mov
gs
xlat
sub
sub
inc
push
scas
mov
lret
mov
mov
repnz
pop
push
pushf
ret
gs
loope
rcl
xor
xchg
jp
lahf
and
cld
sbb
cld
aas
mov
jae
adc
shll
jo
cmp
in
adc
cld
dec
out
dec
sub
inc
dec
in
into
rorb
test
icebp
jge
hlt
pop
cmp
or
rorb
jp
call
xchg
sub
dec
adc
xor
loop
lods
cmp
xchg
and
ret
sti
mov
lcall
dec
adc
mov
arpl
icebp
push
lea
sbb
ljmp
iret
mov
dec
cmpb
push
pushf
jo
push
adc
or
pushl
pop
sbb
cs
adc
sbb
cld
call
pop
mov
or
movsb
jle
jge
in
pop
rorb
loopne
fs
aaa
pop
fstpt
lods
and
test
movsl
and
lcall
xchg
cmc
rolb
and
mov
pusha
jle
xchg
sbb
cmp
ret
cli
mov
es
inc
ja
or
rorl
lcall
or
jb
or
and
out
push
mov
adc
cmp
xor
sbb
sbb
xor
dec
std
sub
pop
adc
cmpsl
add
lods
mov
loope
icebp
subl
add
cld
xchg
xchg
lret
and
sbb
jecxz
jb
push
add
cmp
std
jg
mov
mov
test
imull
cmpsb
dec
ss
pushf
lock
and
xor
call
rorb
mov
or
dec
pop
adc
add
dec
test
jno
mov
or
mov
sbb
pusha
test
lcall
cltd
mov
or
shlb
nop
fisttps
std
jg
loopne
or
loopne
add
dec
jbe
and
orl
cs
mov
ss
or
lods
call
mov
ljmp
add
mov
shl
mov
call
or
aaa
inc
fidivrs
inc
out
jo
cli
mov
call
jg
in
sbbl
fimuls
inc
pop
mov
and
adc
jg
or
cld
leave
stos
pop
and
sti
sub
add
test
das
pop
jmp
and
das
fidivs
call
nop
mov
sub
in
pop
shrb
sub
shlb
push
sub
scas
xor
ss
shl
mov
xor
jge
je
add
sbb
and
out
sub
ds
int3
mov
jle
das
xor
aam
xor
mov
loop
lock
imul
sar
scas
ret
insb
mov
push
jb
stc
loope
adc
fstpt
inc
hlt
jecxz
movsl
popf
je
jo
mov
icebp
mov
leave
and
xchg
add
lock
sub
les
push
or
cs
add
scas
add
adc
mov
lock
mov
int
add
ss
jb
push
cld
aad
jge
jecxz
arpl
mov
ficompl
test
inc
xchg
and
stos
bound
add
leave
push
xchg
and
insl
xlat
cmp
ret
lahf
xchg
and
add
xchg
loopne
mov
sub
pop
mov
gs
ljmp
jg
sub
xor
mov
adc
cld
mov
mov
xchg
jp
adcb
adc
dec
and
xchg
sbbb
cmpsb
xor
pop
test
fs
xor
stc
inc
aaa
and
js
cs
adc
aaa
pop
std
sti
lock
sbb
cli
lret
mov
xchg
das
adc
inc
xlat
cld
es
loopne
test
xchg
sbb
stos
jl
lea
jo
mov
inc
push
dec
cmp
outsb
push
mov
mov
push
fldt
icebp
mov
mov
inc
and
and
es
in
out
mov
adc
aas
pop
xor
pushl
inc
sub
test
cmp
mov
std
fsubrs
xor
or
mov
dec
popa
test
mov
push
jbe
push
mov
and
cmpb
cmp
imulb
cmp
mov
mov
adc
push
xchg
lods
ret
mov
testb
push
push
pushf
cmp
sub
mov
and
iret
cmpsb
inc
ret
push
test
sub
adc
push
mov
int3
or
cmp
mov
icebp
inc
push
adc
push
cmc
mov
add
push
push
jp
data16
lods
mov
cmpsb
sbb
lcall
mov
push
push
les
test
int3
add
js
std
mov
es
rclb
fwait
cmp
ficoms
rcrb
adc
sub
xchg
or
test
push
das
push
add
lret
mov
jno
adc
lds
sbbb
shrl
aam
ret
jecxz
fidivl
jb
add
cmp
push
sbb
sar
mov
dec
shr
push
outsb
add
sti
sub
push
xchg
jl
roll
xchg
cmp
jp
ficomps
mov
js
fcomps
inc
inc
imul
mov
scas
push
push
xchg
sbb
outsb
lock
bound
incb
dec
incl
pop
pusha
sbb
pop
fldcw
and
cmp
lret
add
sub
adc
inc
sbb
sahf
mov
inc
test
imul
cld
insl
jp
or
xor
jl
and
xor
sub
mov
dec
mov
hlt
lock
daa
sahf
lcall
icebp
jno
push
jl,pn
jp
or
adc
pop
add
add
jmp
dec
shll
mov
add
call
cmpsb
mov
mov
loope
sbb
push
sti
lods
or
and
jbe
mov
lea
mov
test
into
jg
test
enter
sti
mov
adc
or
ljmp
add
bound
sub
add
cmp
lahf
mov
lods
clc
adc
sbb
jo
ret
xchg
mov
scas
lods
cmp
push
sub
add
sbb
inc
ret
jae
outsb
add
and
jnp
rcr
imul
test
out
adc
push
sahf
dec
ficoms
cld
xor
xchg
dec
push
add
int3
mov
popa
xor
into
adc
rcr
adc
push
xor
push
push
add
sub
sti
sbb
sub
or
cmpsb
push
andb
push
subl
add
sub
stc
fwait
or
loope
mov
adc
insl
push
divl
cmpsb
cwtl
cli
sbb
ficompl
out
push
ljmp
sbb
cmpeqps
mov
xchg
mov
stos
clc
ret
jbe
cmp
pop
roll
xchg
loopne
ja
mov
push
mov
fucomip
xchg
or
in
add
stos
inc
inc
clc
jle
and
iret
jle
je
push
sub
inc
stos
arpl
enter
xorl
xor
mov
add
fistpl
shll
dec
stos
sbb
jo
pushf
dec
adc
test
lea
aam
mov
aas
push
in
loop
add
pusha
cld
movsb
mov
mov
out
shlb
fdivrs
xchg
mov
add
cli
mov
pop
scas
inc
dec
in
shl
or
sub
adc
xor
in
insl
push
jno
inc
mov
aaa
movl
push
addl
jle
push
clc
aaa
sbb
jnp
push
jl
int3
sbb
es
adc
clc
movsl
test
js
xlat
mov
inc
sub
inc
js
xchg
ficoml
pop
in
mov
jl
lds
add
inc
aaa
add
sbb
pop
lods
in
xchg
add
clc
cs
arpl
inc
inc
stc
bound
lods
jo
jne
leave
push
cs
mov
in
pop
sarb
adc
mov
pop
sbb
dec
sub
mov
les
xchg
ret
add
pop
cmp
sub
aaa
jl
and
fwait
push
dec
movsb
lcall
cmp
push
jb
inc
outsl
sub
mov
mov
pop
or
jle
mov
into
pop
inc
jb
pop
shll
sub
cmp
outsb
or
rorl
loop
pop
inc
xor
frstor
dec
filds
add
push
and
inc
pop
call
xchg
inc
aam
cli
insb
ljmp
and
insb
xor
aaa
std
stos
sbb
sbb
inc
sub
cltd
xor
cmp
add
sub
sub
jmp
in
mov
push
je
xchg
cmpl
rclb
mul
pop
test
jle
jg
pushf
rcll
std
mov
and
push
loopne
push
sbb
xchg
add
stos
mov
lret
xor
lahf
pop
push
rorb
test
sub
mov
xchg
or
mov
add
sbb
adc
loope
adc
add
movsb
js
loop
pop
or
add
pop
cs
xchg
jecxz
ret
arpl
and
addr16
mov
mov
cli
dec
mov
dec
adc
mov
pop
mov
mov
adc
fsubp
xchg
and
jne
das
push
mov
or
mov
stc
dec
sub
xor
shll
outsb
shl
lcall
sub
pop
mov
mov
jmp
push
out
dec
push
jle
push
mov
arpl
pop
cltd
mov
sub
jp
call
pop
xchg
or
int3
cmp
pop
shrl
dec
shlb
sbb
push
xchg
xchg
mov
test
lods
int3
push
aaa
adc
push
addb
mov
mov
mov
add
and
ss
pop
aas
ljmp
sub
int3
add
jae
xchg
scas
add
add
pop
lds
push
arpl
jecxz
push
push
sbb
inc
mov
cmp
sbb
xchg
and
ds
arpl
es
popf
mov
jne
clc
dec
test
cmp
mov
pushf
ljmp
ljmp
mov
pusha
push
sub
into
add
and
add
out
shlb
sbb
xor
scas
shlb
xor
in
faddl
dec
int3
lods
or
push
andl
sbbl
pop
mov
cmp
cmp
ret
test
pop
hlt
lds
js
pushl
mov
and
jmp
clc
aam
mov
inc
cmp
push
outsl
xchg
gs
xchg
test
push
call
dec
add
xor
dec
add
sub
mov
mov
popa
shr
push
sub
jbe
xchg
xchg
xchg
test
pop
je
arpl
pop
pushf
mov
jl
or
inc
icebp
popa
ds
int
cmovl
ds
add
aam
adc
sbb
jnp
rorb
push
inc
fdivrs
testb
sbb
xchg
mov
sbb
dec
jb
cmp
out
mov
push
pop
lret
ja
or
iret
cmp
push
push
sbb
sbb
sbb
inc
jne
push
sahf
addr16
clc
pop
add
cmpsb
pop
adc
sti
data16
mov
mov
add
fwait
bound
ss
lahf
insb
or
mov
jns
sbb
aad
cmp
icebp
and
push
inc
ss
mov
out
rcrb
xchg
inc
stc
xchg
insb
out
and
xchg
popf
xchg
cmp
xorb
sarb
mov
dec
aam
sub
pop
adc
pop
lods
xchg
insl
sti
enter
insb
sbb
sbb
out
lahf
push
mov
mov
clc
lret
pop
xlat
lcall
jle
add
add
lods
pop
dec
lcall
push
fisubrs
fidivl
adc
push
cmpsb
fdivrl
aas
adc
push
push
push
or
rclb
lods
adc
dec
or
sbb
shlb
mov
push
popf
push
out
jg
movsb
dec
jns
pop
cwtl
inc
sbb
mov
loop
outsl
push
push
push
mov
push
lock
mov
daa
out
js
and
iret
cld
mov
cld
sbb
or
adc
test
mov
stc
mov
xchg
or
xor
cmpsl
mov
pop
arpl
fldenv
add
sbb
mov
and
loope
loop
lods
test
cmpsl
add
nop
repnz
imul
mov
pop
ret
mov
adc
lods
dec
mov
and
lcall
int3
adc
hlt
or
aas
hlt
or
dec
insl
loopne
adc
pusha
xor
orb
insl
mov
pop
mov
sub
jne
hlt
lds
adcb
arpl
jg
sbb
test
hlt
call
notb
dec
in
cli
or
stos
dec
mov
xchg
mov
dec
mov
xchg
or
rclb
imul
mov
in
adc
icebp
shl
pop
lds
sub
xchg
push
stos
dec
sub
mov
xchg
or
lret
test
lods
popa
subb
inc
fs
xchg
lock
insl
push
arpl
test
lret
jmp
adcl
push
cmp
mov
cmp
xor
cmp
jge
push
pop
lds
and
pop
inc
ljmp
fisttpll
jp
dec
outsl
aam
dec
xor
add
lock
mov
mov
insb
je
xchg
inc
cmp
adc
xchg
xor
test
pop
xor
call
cwtl
mov
cmp
pop
sbb
aas
or
in
push
das
pop
cmp
lods
xor
add
popf
sub
cld
sbb
scas
or
mov
dec
dec
jg
gs
gs
cld
test
push
idivb
cs
and
punpcklbw
sbb
xor
inc
adc
pop
aas
mov
mov
push
pop
xor
push
cwtl
add
jmp
sbb
mov
mov
and
inc
or
push
add
mov
insb
dec
cmpsb
push
pushf
push
cmp
inc
sub
xor
movsb
add
bound
movsl
xchg
test
lock
fmull
sti
jle
sub
cmp
loop
and
pop
xor
push
outsb
add
lock
push
add
jbe
pop
jo
lock
mov
pusha
xor
jle
test
inc
xchg
fwait
jb
mov
pop
or
cmp
or
dec
fmuls
mov
sub
inc
inc
repz
pop
adc
adc
mov
testl
aaa
pop
or
cmpsb
pusha
push
xchg
loop
lret
lods
enter
push
imul
inc
jl
xor
mov
jp
test
push
jbe
outsl
rorb
out
lock
pop
or
mov
adc
and
shlb
incb
xlat
jbe
sbbb
xchg
nop
mov
pop
sub
sbb
cwtl
push
add
out
popf
pop
and
mov
inc
mov
add
cmp
sbb
femms
aam
jno
aaa
sub
in
push
sub
cld
inc
mov
cmp
cwtl
fistps
dec
pop
pop
in
cmp
test
les
xchg
dec
xchg
sar
or
test
outsb
or
das
adc
or
or
mov
adc
subl
movsb
xor
push
mov
mov
jp
mov
popa
loopne
xchg
or
ret
test
jb
pop
int
rol
sbb
mov
xchg
inc
clc
add
gs
push
sub
cmp
cmp
push
jb
hlt
rorb
pop
in
push
sahf
or
mov
mov
rorb
cmp
cmp
push
mov
sub
add
adc
sub
out
inc
mov
out
cs
mov
inc
aad
push
mov
sbb
incl
inc
stc
cwtl
and
mov
or
mov
out
ret
add
cmpsb
mov
pop
push
sbb
fisttps
fwait
jle
inc
inc
lret
adc
es
test
add
loopne
jns
and
xchg
fmulp
xorb
icebp
xlat
es
sbb
sbb
and
ret
and
scas
shlb
stos
and
imul
inc
inc
aam
xor
mov
xchg
pop
pop
cwtl
mov
jbe
fisttpll
sbb
scas
mov
and
mov
repz
scas
std
sub
lret
and
push
push
sbb
push
bound
dec
pop
sub
sub
addl
add
rcl
xlat
pop
lods
js
dec
dec
idiv
jl
aaa
push
mov
lock
inc
in
gs
movsb
fidivl
dec
fdiv
repnz
jo
scas
outsl
imul
pop
and
imull
mov
ret
inc
mov
pop
inc
jl
add
jle
and
push
test
je
pop
cld
mov
hlt
push
arpl
fsubs
shlb
in
lcall
mov
movsb
or
sbb
push
push
jbe
cmp
inc
cld
bound
or
sahf
and
add
aaa
push
lret
adc
push
jg
pop
jno
xor
inc
sarl
es
mov
and
test
sbb
daa
push
jb
jae
and
lret
pop
sub
pop
les
sub
xchg
test
cmp
mov
fst
add
inc
add
in
mov
inc
jmp
pop
push
mov
clc
cmp
mov
cmp
arpl
jo
stos
push
pop
in
xor
dec
int
pop
and
subl
icebp
subl
xlat
jb
mov
movsb
push
mov
cmpsb
mov
stos
mov
mov
inc
aas
mov
add
or
and
incb
mov
out
dec
es
cmpsl
push
push
jae
clc
cmpsb
cli
lcall
lods
sbb
push
pop
test
stos
clc
icebp
or
ret
das
int3
jne
push
jb
jbe
xchg
inc
add
subl
call
insb
icebp
outsl
push
in
test
outsl
sub
rcr
rcrl
cmp
pop
jp
cmp
lahf
imul
lahf
into
pusha
mov
fsubr
aaa
push
rolb
sti
or
sbb
fsts
mov
movsb
mov
cmovo
nop
jns
cli
pop
or
cltd
dec
mov
daa
add
jne
loope
stos
xchg
cmp
loop
add
popa
adc
mov
aam
sbb
inc
add
lods
mov
dec
bound
fs
xchg
push
loopne
fidivl
movsb
xchg
sbb
test
incl
fstpl
push
mov
aas
aam
mov
dec
mov
push
sbbl
xor
stos
es
loopne
in
xor
cmp
ljmp
sti
xor
adc
mov
out
icebp
and
add
xlat
je
or
xchg
out
xor
cli
decl
mov
iret
adc
cmp
in
les
dec
lcall
and
jg
sub
push
mov
inc
push
pop
xchg
inc
aad
mov
xchg
push
lcall
nop
mov
data16
or
pop
inc
pop
pushf
jmp
sar
out
call
inc
pop
pop
test
fucomi
shlb
pop
in
lahf
cli
nop
xchg
lock
call
je
and
int
popa
mov
jle
jp
insb
aam
mov
adc
mov
rol
shl
ljmp
andb
pusha
mov
dec
jne
push
fidivrl
xchg
insb
dec
push
push
rcl
mov
mov
mov
add
dec
jle
clc
xor
xor
cmpsb
subb
popa
jg
fildl
fstpl
jg
incb
jo
cld
inc
mov
scas
fbstp
mov
push
test
lock
clc
sbb
test
stos
xor
ljmp
lahf
inc
fwait
mov
subb
add
fcoml
loopne
ljmp
mov
movsb
add
outsl
cli
dec
test
and
lea
sbb
push
cmc
loopne
rolb
call
subb
pop
xchg
or
or
mov
mov
lret
sub
es
mov
push
imul
cld
cli
pusha
lret
test
and
mov
fsubrl
or
jmp
push
movsb
push
and
loope
jb
hlt
mov
stos
aas
jge
pop
imul
push
add
or
add
jne
andl
mov
mov
inc
cmpsl
adc
js
inc
decb
cmp
pop
jge
notb
cmp
xchg
push
pop
cmpl
cmp
shrb
adc
xor
imul
mov
xor
into
xchg
add
jnp
cld
pop
pop
jecxz
pop
inc
and
mov
sbbb
push
adc
call
push
adc
adc
push
sub
sub
dec
sbb
ljmp
xor
inc
out
stos
sub
adc
dec
dec
pop
push
jp
xor
mov
out
push
cmpsl
cmpb
jmp
aas
into
pop
inc
hlt
pop
mov
xchg
in
ds
xor
shl
outsb
dec
lcall
bound
and
xor
add
aas
cld
mov
ret
dec
cmpsb
or
inc
mov
push
and
lock
clc
jnp
push
call
push
xor
aas
es
adc
pop
xor
mov
lods
shrl
int
js
jle
and
cmp
test
gs
add
outsb
cmp
jl
je
idivb
movsl
cwtl
inc
mov
xor
add
lret
and
fidivl
and
pop
adc
call
mov
in
mov
fnstsw
outsb
out
ss
xchg
mov
scas
mov
mov
cmpl
inc
xor
and
sub
out
mov
mov
sub
aas
cmc
sbb
inc
adc
icebp
outsl
fbstp
and
xlat
push
xchg
push
push
sbbl
loop
dec
mov
pop
add
adc
dec
lret
imul
js
sbb
mov
mov
aaa
rcrl
mov
pop
out
sahf
movsl
jns
mov
push
test
dec
shl
out
mov
sub
aaa
icebp
js
je
adc
loope
mov
and
stos
test
inc
rol
sub
sub
or
inc
jg
mov
std
xchg
mov
pop
and
mov
jl
sbb
dec
cmp
clc
outsl
and
adc
push
jg
sti
test
dec
fiaddl
lock
outsb
add
sahf
mov
sbb
mov
daa
icebp
fwait
xchg
push
add
jmp
adc
pop
sbb
sub
pushl
sbb
push
xchg
je
jno
or
loopne
incl
mov
insb
adc
mov
pop
or
in
jp
adc
and
mov
stos
dec
mov
movsb
insl
and
xlat
in
scas
in
cmpb
lahf
adc
mov
adc
cmp
and
call
jge
add
jae
add
fsubrs
loopne
or
and
adc
jbe
fdivs
stos
pop
mov
and
mov
mov
mov
clc
sub
adc
xchg
lods
sbb
mov
xorb
int3
sbb
in
adc
fbstp
pop
xchg
adc
outsl
test
shrl
xor
imulb
push
push
mov
clc
dec
or
shr
lock
icebp
call
push
ret
mov
mov
shlb
jl
loop
jnp
xor
out
aad
and
in
mov
adc
xchg
dec
data16
mov
aam
push
je
jae
stc
push
clc
push
jmp
adc
mov
xchg
cmp
jbe,pt
iret
mov
dec
movsb
fdivrl
mov
mov
inc
aaa
test
lea
or
lea
or
jl
jl
lds
mov
stos
sbb
xchg
sbb
cli
sahf
jo
aas
push
loope
js
pop
push
add
add
mov
add
pop
jne
loopne
push
std
sbb
test
ds
in
xor
mov
sub
test
lods
sbb
lret
mov
ficoms
or
shll
push
mov
clc
jge
in
je
jmp
and
test
inc
outsl
cld
pop
push
push
fildl
pop
fs
fcompl
clc
in
incl
outsl
clc
xor
popa
ss
rcrb
inc
andl
scas
adc
dec
pusha
pop
aam
mov
push
inc
and
xor
sarl
xchg
testl
inc
lods
sub
rol
mov
sbb
std
dec
enter
lods
fstpt
int
push
mov
decb
test
xchg
dec
ja
mov
jecxz
mov
mov
sub
adc
aas
and
loope
decl
outsb
or
shlb
js
movsl
mov
test
pop
pop
add
aam
loopne
sbb
inc
push
out
test
xor
xor
mov
out
mov
scas
dec
sub
dec
mov
scas
pop
add
cwtl
mov
cmpsl
mov
mov
decl
xlat
sub
inc
xchg
push
arpl
or
pop
mov
cmc
iret
push
adc
pop
scas
mov
adc
fs
icebp
sub
mov
out
mov
test
xchg
shlb
add
push
in
outsb
and
add
sar
jl
in
xor
shl
or
cmpsl
cmc
bound
fistpll
sbb
in
rorb
pop
shr
push
cltd
mov
mov
jg
lahf
lock
ss
push
fwait
roll
inc
dec
in
push
std
rcl
cld
cltd
inc
and
add
jg
gs
sbb
imul
mov
xor
std
dec
pop
adc
xchg
xchg
jo,pt
adc
vmwrite
ja
adc
push
decb
xchg
pusha
imul
pusha
incb
mov
mov
dec
mov
jp
fimuls
sbb
je
int3
mov
inc
and
lahf
pop
sbb
dec
lcall
sbb
xchg
aam
roll
ss
mov
jo
incl
test
bound
inc
xor
sub
sarb
andb
jns
call
mov
and
test
js
rolb
push
pop
cli
cwtl
inc
outsb
adc
out
jge
mov
sarl
inc
xlat
sahf
repnz
ja
or
inc
xchg
xchg
jmp
jle
call
xchg
in
xor
popa
lds
pop
arpl
push
negb
adc
aaa
hlt
mov
pop
add
clc
test
and
mov
outsb
push
fmulp
push
cmp
add
add
sub
into
add
add
mov
cmp
shll
jl
jnp
in
mov
cmp
call
mov
sub
or
push
inc
es
jl
push
sahf
iret
or
icebp
mov
xchg
and
roll
fsubs
xor
shll
add
cmp
fstpt
out
xchg
das
js
mov
sub
push
add
mov
pop
call
xchg
push
fsubs
xchg
xor
mov
and
cmp
push
lods
mov
xor
sbb
cs
jg
or
jnp
push
mov
out
jge
lods
sbb
add
lds
test
and
ret
push
sub
or
and
rcll
cmpb
sub
das
orb
and
mov
cmp
das
rcrb
dec
mov
xor
cmp
sub
mov
decl
jb
inc
push
add
push
add
bound
lock
push
mov
ljmp
std
xlat
add
andb
dec
adc
fs
add
xchg
mov
lcall
ds
clc
adc
subb
pop
loopne
stos
fs
mov
imul
jg
jg
push
rolb
adc
push
hlt
nop
out
xchg
in
scas
clc
and
imul
ret
or
and
mov
sub
gs
into
cs
repnz
dec
xchg
cld
rcl
mov
sub
mov
dec
mov
ret
mov
jbe
sub
push
sbb
and
arpl
pushf
jbe
add
push
lods
daa
fwait
mov
inc
les
loop
sar
jle
pop
ljmp
pop
xchg
mov
jmp
cmp
popa
cmp
incl
push
xor
xchg
inc
dec
jno
clc
fimuls
pushf
inc
fsts
xor
es
subb
rcll
cmp
mov
xchg
push
jo
call
mov
shlb
and
or
pop
inc
daa
jecxz
pop
hlt
aas
lea
test
gs
mov
ds
incl
add
out
and
out
cmp
mov
mov
push
out
enter
add
adc
cmp
inc
inc
inc
jb
mov
dec
xor
mov
cmp
adc
ds
pop
xchg
ret
call
test
dec
sub
adc
add
cmp
fmuls
xchg
add
sbb
shrb
subb
mov
pop
in
js
sbb
pop
stc
insl
dec
adc
xor
cmp
mov
pop
dec
popl
pop
jne
dec
xor
ss
cmc
stc
cwtl
in
mov
dec
mov
test
adc
stc
je
jae
movsb
cmp
jo
xor
xorb
push
lods
ret
jle
dec
rclb
or
and
test
popf
mov
ret
jecxz
inc
dec
std
das
add
fs
jp
pop
sub
xor
or
pushf
fiaddl
jbe
bound
movsl
decl
movsb
push
mov
addl
pop
sub
loopne
pushl
scas
add
and
adc
das
call
repnz
push
dec
out
lcall
jnp
or
cli
cmpb
inc
sub
call
movsl
sub
pop
sub
arpl
xchg
std
shlb
lahf
mov
jb
cli
mov
bound
rcr
xlat
push
nop
mov
ds
cmp
rcr
add
lea
pushf
mov
mov
mov
dec
adc
scas
cld
int
mov
pusha
dec
add
lods
dec
rcr
test
cmp
adc
out
jl
xor
into
mov
mov
xchg
push
mov
mov
hlt
push
mov
sti
imul
test
jnp
lahf
fists
add
ret
xchg
cli
xchg
lea
adc
mov
test
pop
ret
adc
dec
js
jg
pushf
inc
mov
pop
xchg
push
mov
pop
mov
insb
mov
scas
jo
xchg
xor
lcall
sbb
xchg
push
pop
dec
push
arpl
add
cs
mov
sub
inc
bound
fimull
decb
xchg
add
jp
cli
stos
mov
push
cld
adc
push
jg
popa
clc
data16
adc
sbb
mov
scas
mov
js
into
sahf
sub
mov
dec
ljmp
inc
and
jb
inc
lcall
push
sbb
jp
fs
dec
xor
scas
shrb
cmp
add
add
or
dec
adc
mov
lcall
push
dec
dec
pusha
shlb
call
jnp
inc
dec
inc
fisttpll
stos
subb
pop
repz
sub
push
or
cmp
cli
lods
mov
enter
and
dec
inc
inc
out
shlb
inc
adc
fisttpl
dec
leave
pushw
mov
jl
pop
psraw
jmp
bound
bound
or
fwait
jle
xchg
xchg
pop
fcomps
mov
mov
out
fdivr
jecxz
or
push
gs
push
push
xchg
or
mov
lods
call
mov
and
aas
sbb
test
mov
adc
xor
jbe
jbe
and
loopne
add
add
mov
jo
aaa
in
mov
rcrb
testb
add
jle
sub
in
mov
das
jns
nop
add
sub
icebp
pop
test
jb
fiadds
out
or
or
call
repnz
push
xchg
test
mov
add
out
into
call
mov
int3
mov
mov
stos
mov
and
dec
pop
mov
push
jno
xchg
fisubrs
lahf
in
fld
jmp
pushf
jae
loopne
ret
add
loop
loop
fisubrl
or
and
xor
inc
push
decb
fimuls
sti
data16
aaa
orl
ds
inc
fs
or
es
mov
lcall
inc
xor
lock
les
sbb
add
stos
lds
enter
call
add
or
sub
or
outsl
rolb
pop
rorb
cmpb
test
aad
rclb
cmp
outsb
repnz
int3
sbb
or
inc
jb
jb
mov
aas
movsb
dec
insl
fstpl
je
mov
xchg
cmc
jg
xchg
je
test
mov
cmpb
clc
fildll
fs
outsl
cmp
sahf
push
or
sbb
fsubl
fcos
mov
or
pop
fs
jl
push
ficoms
test
xlat
leave
push
push
add
mov
push
jo
daa
pushf
add
xchg
or
ja
fdivl
push
inc
push
xchg
mov
insb
mov
subb
mov
jg
mov
arpl
cs
clc
pop
inc
or
jno
mov
arpl
add
negw
dec
pushf
subb
push
cmpl
pop
in
ljmp
mov
repnz
mov
cld
nop
adc
jmp
pop
inc
cmpsb
inc
xlat
mov
ljmp
out
int
push
out
js
fists
cli
mov
ret
or
and
xor
aam
loop
or
mov
xor
push
aad
aaa
call
aas
or
out
sub
pop
cli
push
dec
movsb
out
subl
push
xchg
xorl
popl
add
mov
push
imul
cmp
xchg
adc
js
pop
js
push
push
cmp
xor
aad
or
cmp
pop
mov
flds
mov
add
pushf
push
fcomip
push
inc
cmp
jb
jp
es
adc
pop
jo
ja
fidivl
pop
ss
pop
je
call
jl
fidivrl
mov
dec
cli
mov
scas
popl
lcall
mov
bound
adc
orl
adc
pop
mov
push
jle
repnz
test
loop
loopne
shll
es
sar
cli
sbb
orl
push
xchg
pop
mov
and
jg
add
xor
data16
fildl
adc
dec
mov
sbb
xor
lds
dec
out
cmp
test
enter
pop
sub
mov
inc
adc
pop
hlt
ss
adc
cmpsb
and
mov
push
subb
inc
xor
pop
and
jecxz
jmp
cmpl
or
cmpsl
jg
and
leave
push
nop
divl
sub
add
inc
sub
orb
pop
incl
mov
inc
outsb
bswap
sub
and
sti
shrl
jle
mov
ljmp
sbb
or
pop
cmp
movsb
mov
inc
jbe
and
cli
outsb
stos
icebp
call
cmp
shll
or
mov
mov
test
lcall
std
jmp
mov
sub
mov
mov
xchg
cli
push
scas
pop
fcomp
out
mov
add
je
fmuls
daa
or
inc
add
shlb
lods
or
fimull
cld
pop
inc
push
rolb
xchg
jne
jns
call
loop
call
xchg
jae
add
movsl
mov
sbb
clc
lock
setp
cmp
sbbl
sahf
push
inc
cmp
in
inc
shlb
inc
and
jmp
test
int
xchg
fmuls
ss
xor
ret
rol
pop
mov
dec
sbb
mov
das
outsb
int
stos
lock
and
inc
sbb
jb
jge
out
stc
or
cmpsb
scas
mov
outsb
cli
mov
pop
mov
std
dec
dec
push
xlat
roll
mov
jmp
lea
shll
dec
and
mov
inc
orl
aad
or
adc
cmp
rorb
cmc
out
lock
insl
cltd
mov
test
push
sbb
rolb
inc
negl
push
jg
xchg
sahf
frstor
mov
incl
addr16
lret
fcoms
mov
sub
xor
pop
sub
fcoms
push
arpl
adc
int
pusha
clc
stos
fisubs
push
inc
sub
and
jns
xchg
jp
ja
mov
cmp
pop
cmp
and
xchg
mov
addr16
call
mov
mov
fimuls
xchg
adc
clc
dec
inc
loopne
rorb
aam
jp
fsubl
dec
inc
lahf
cmp
xor
inc
sub
add
cmp
loope
jb
push
pop
push
arpl
adc
jge
scas
shrl
mov
out
shlb
xchg
or
jo
or
mov
cmp
ss
shl
popf
jle
cmpsl
sti
sub
jmp
pushf
cmc
add
movsb
and
cmpsb
inc
adc
inc
sub
popf
jb
pushl
jp
daa
nop
adc
shll
decb
cmovne
inc
in
add
insb
pop
in
lcall
adc
lods
call
jg
incl
loopne
xchg
push
inc
mov
clc
stc
outsl
dec
adc
loop
movb
das
clc
scas
stc
ss
or
cwtd
rcrb
mov
sbb
test
fdivl
std
mov
xor
mov
or
sub
lea
out
inc
mov
data16
cmp
subl
xor
mov
inc
sbb
sub
push
jmp
push
adc
fiaddl
sbb
sbb
dec
jne
sti
jne
ja
inc
push
cmpsl
subl
jno
jg
cmp
scas
xchg
push
ret
repz
fidivrs
jno
push
lods
pop
hlt
mov
stos
pop
cmp
or
imulb
adc
cmpsb
fisttps
jp
lcall
pusha
ljmp
jle
cwtl
roll
push
lret
shrl
pop
fists
or
push
push
aad
sbb
cltd
stc
repnz
adc
ret
push
pop
cmp
mov
int3
imull
inc
lds
add
mov
xor
add
jg
lds
inc
lea
js
mov
daa
rclb
cmpb
push
test
jb
test
les
fimull
fwait
mov
incb
pop
xchg
lea
push
add
and
mov
dec
loopne
pop
and
sub
movb
mov
and
je
mov
enter
scas
test
mov
adc
push
mov
jnp
in
cmp
jp
stos
fs
std
adc
enter
loop
xor
out
in
or
lcall
test
adc
jmp
pop
mov
push
pop
push
jb
test
pop
lock
xchg
hlt
push
mov
test
imul
outsl
repnz
aam
pcmpeqb
scas
jecxz
adc
mov
aaa
mov
test
or
les
hlt
mov
les
add
cli
sub
cli
cmp
xchg
add
divb
ret
or
adc
divb
mov
and
faddl
dec
xor
nop
cli
nop
sbb
ja
hlt
jo
lock
fisttpl
scas
loope
inc
jl
cmp
pop
add
data16
rclb
and
cmpsb
daa
mov
loop,pn
sub
ret
mov
jo
mov
sbb
mov
cmp
inc
mov
mulb
mov
add
push
add
xbegin
inc
cmovle
push
add
daa
adcb
and
jg
mov
mov
lret
mov
outsl
das
cld
shl
xchg
xchg
or
test
cs
lret
sub
sub
xchg
mov
mov
js
and
cmc
push
imul
gs
lcall
dec
xchg
xchg
pop
push
and
testb
fs
in
mov
subb
push
or
push
imul
add
cmp
sbb
test
xor
jmp
in
scas
push
dec
je
xchg
aam
ret
ljmp
xchg
jg
orl
fldl
mov
out
pop
sti
test
xor
xor
inc
or
lret
xor
mov
cs
ja
mov
jl
add
clc
xor
lock
inc
sbb
inc
cwtl
outsl
call
pop
adc
mov
or
enter
push
adc
lret
mov
insb
imul
lret
jecxz
call
inc
fs
sub
movsb
sbb
sbb
jl
pop
icebp
cmp
ret
inc
loopne
add
or
push
ds
lds
test
mov
movb
pushf
cld
push
icebp
ljmp
sbb
mov
add
inc
shl
push
and
clc
lods
xor
sbb
inc
std
push
add
mov
jbe,pn
lods
mov
es
cwtl
add
pop
push
jmp
aam
xchg
pop
lahf
inc
and
push
popf
dec
movsl
add
add
push
aaa
inc
push
xor
popa
cld
sbb
lret
cmp
sbb
or
push
cmpsb
sbb
pop
dec
mov
clc
mov
cmpsb
sub
pop
lock
xchg
outsl
push
jle
lods
shlb
and
and
and
adc
lcall
mov
xchg
rcrb
sarl
mov
mov
loop
adc
adcl
or
lcall
mov
mov
jge
popa
mov
popfw
daa
js
mov
pop
aam
xor
lret
cmp
lods
mov
sub
test
adc
mov
into
ds
dec
mov
les
mov
xor
xchg
fidivs
jns
mov
outsb
clc
fdivrp
decl
inc
pop
cli
dec
inc
pop
call
jb
pop
lahf
mov
subl
jbe
mov
mov
jg
mov
dec
dec
shrl
and
adcl
je
sarb
popa
push
stos
push
cmp
dec
cmpsb
cs
lock
mov
test
jmp
cwtl
and
cmp
pushl
enter
jp
enter
jnp
add
imul
pushl
rclb
inc
cmp
mull
inc
das
jb
into
add
cmp
ficoms
ret
cmpsb
dec
je
dec
pop
adc
fdivs
mov
push
sarb
jle
ss
psrlw
andl
dec
mov
mov
xor
sbb
jp
add
call
cmp
xchg
add
pusha
fstps
xchg
popa
mov
nop
jo
popa
inc
hlt
ffreep
mov
add
enter
adc
or
add
pop
movsl
mov
out
les
in
cs
repz
movsl
add
push
aaa
sub
int3
lock
cmp
fsubl
jmp
test
imul
cld
dec
clc
je,pn
xchg
nop
repnz
fs
xchg
ds
sub
inc
fs
dec
inc
push
dec
xor
add
add
ds
add
js
push
add
aas
mov
and
addl
daa
std
cmp
xchg
push
or
mov
scas
jg
sbb
or
shlb
jbe
in
test
dec
cmp
inc
pushf
inc
jg
mov
mov
or
cmpsl
xor
mov
or
push
outsl
lcall
and
or
in
mov
fs
loop
add
or
leave
ds
xchg
mov
scas
push
ds
cmp
push
inc
push
add
lock
negb
das
xor
fcoml
mov
lods
push
jmp
test
rcrb
jl
int3
mov
add
jmp
ss
ss
xor
cmp
jle
or
pusha
mov
scas
xorl
mov
add
in
push
jo
aaa
sbb
inc
outsb
xor
adc
aaa
jge
lret
fs
nop
mov
nopl
nop
cmp
inc
lahf
jg
inc
roll
mov
jp
leave
les
add
push
inc
inc
sbb
add
clc
loopne
sbb
and
sbb
rclb
loop
mov
int3
ljmp
mov
add
clc
std
dec
shlb
pop
pushf
mov
xchg
insb
movsl
xchg
inc
mov
aaa
std
das
push
sbb
xchg
xor
cmp
sbb
gs
mov
lods
insb
mov
icebp
push
push
stos
adc
hlt
popf
mov
daa
clc
out
or
in
shll
add
in
push
jl
les
cltd
add
push
in
lret
scas
outsl
jg
push
xchg
es
jg
pop
imul
sub
sar
fcomp
jno
add
inc
pop
dec
or
out
adc
push
jmp
jge
jl
test
lock
movsb
or
or
ljmp
cli
sub
and
xor
lock
add
ds
pusha
and
cmp
inc
test
or
adc
dec
std
or
cld
mov
sub
sqrtps
jge
fcomip
pop
inc
sbb
jo
xchg
ret
jae
push
ss
cmovno
ficompl
mov
dec
cmp
decb
movsb
add
xor
fwait
sbb
inc
jo
andb
mov
addr16
and
inc
aas
jp
test
inc
inc
add
lods
sbb
jo
xchg
loope
in
stos
pop
es
sub
fildl
roll
lock
pop
dec
sub
push
inc
data16
cld
jle
lahf
ret
das
fdivrs
aas
adc
xor
sbbb
aas
loopne
cld
mov
push
movsb
mov
ja
hlt
aas
push
clc
aaa
addl
xor
and
sbb
cmp
pushf
das
pop
sub
mov
lahf
xchg
arpl
dec
inc
add
sbb
inc
ret
adc
and
dec
dec
push
subb
mov
orl
xchg
pusha
lods
and
repz
and
mov
lods
es
stos
mov
or
test
shlb
jb
push
xchg
lods
pop
inc
lret
lahf
or
inc
xchg
in
in
inc
out
shrb
fsubrs
adcl
ljmp
mov
loopne
adc
mov
push
and
push
jge
jnp
shl
push
das
push
or
lock
jl
xchg
xchg
add
mov
loopne
push
mov
xor
call
and
jb
dec
cwtl
xor
mov
ficomps
imul
imul
sbb
adc
inc
jae
push
xchg
cli
sti
mov
iret
cmp
jb
rclb
jno
dec
icebp
js
fldt
fidivrl
pop
cs
jo
int3
inc
enter
mov
test
dec
jecxz
lcall
mov
mov
ror
inc
pop
into
aas
push
jae
cld
mov
in
lock
into
and
jp
mov
pop
sarb
js
aam
xchg
pushf
stos
xchg
addr16
lea
and
ja
xchg
rcrb
mov
sbb
incl
ret
xor
cmp
and
mov
loope
es
xchg
pop
dec
aam
loop
dec
mov
inc
clc
pop
xchg
mov
mov
lcall
adcb
pusha
add
push
nop
cmc
inc
adc
sbb
test
es
pushf
lds
push
rolb
adc
in
dec
clc
mov
rcl
and
out
enter
roll
ret
and
test
cmp
and
add
or
and
adcl
daa
pop
ljmp
cwtl
nop
sub
mov
js
lret
xchg
ret
inc
hlt
jmp
xchg
xor
jge
sarl
lcallw
pusha
lock
mov
sahf
inc
daa
or
mov
aaa
cld
jnp
and
int
or
les
int3
movsb
or
imul
cmpsb
xlat
pop
mov
xlat
ja
cli
in
pop
cmp
clc
mov
or
add
sbb
shll
lods
int
iret
cmpsb
xorb
push
fdivr
cli
decl
lds
mov
sub
es
mov
push
test
stos
fdivp
cmpsb
mov
and
adc
push
mov
add
ficompl
shrb
mov
pop
aad
cli
in
sub
pop
dec
fisttps
clc
dec
add
pop
sub
adc
dec
dec
or
jecxz
inc
adc
jecxz
sub
fstpt
popw
hlt
xchg
push
test
aam
xchg
sbb
xchg
mov
into
mov
arpl
pop
push
mov
add
push
cltd
add
and
xlat
sbb
dec
add
sbb
xor
sti
cmp
and
loop
mov
arpl
pop
and
jbe
inc
xchg
je
mov
fildll
push
stc
imul
sub
pop
push
dec
ljmp
xor
fsubrp
add
mov
mov
xor
sbb
pop
jmp
add
cmc
scas
xor
mov
sub
jo
ret
push
xchg
cmp
cli
add
jl
into
adc
xchg
inc
cld
inc
jbe
xlat
test
bound
mov
je
xchg
dec
cmp
add
push
xor
enter
js
sti
jbe
adc
add
iret
xor
push
shlb
push
dec
jl
pop
xor
xor
push
or
insl
sub
sbb
pop
lock
pop
adc
dec
xchg
inc
xchg
sbb
pop
cmpsw
fldl
dec
jne
xorl
push
pop
xor
das
call
in
inc
push
inc
test
andb
mov
add
cld
test
dec
cmpsb
adc
lods
loopne
rcr
add
aam
or
addb
mov
js
and
sub
push
es
rcrb
adc
rorb
fiadds
rcl
lods
push
lods
fiadds
inc
je
outsl
stos
pop
lret
pusha
dec
push
pop
inc
pop
add
cs
mov
cmp
iret
mov
or
mov
or
roll
sbb
mov
inc
jg
test
pop
push
sti
mov
adc
push
les
push
or
pop
add
fdivl
cmpsb
movaps
inc
ja
mov
fildll
push
leave
xchg
mov
pusha
push
int3
in
sub
sbbb
outsl
sbb
and
jbe
jns
push
xchg
jg
add
into
icebp
or
punpckhdq
ja
or
sub
out
loope
push
pop
jl
sub
clc
sub
xchg
sub
pusha
sub
incb
inc
into
scas
xor
orb
lods
sbb
mov
adc
icebp
cmpsb
sub
add
lods
out
and
cmc
sub
das
xor
aam
dec
aad
pop
lock
test
push
pop
inc
test
push
adc
sub
and
lods
jg
lock
mov
fdivrl
insl
or
xor
pop
test
lret
adc
iret
mov
in
push
dec
xorb
or
pop
movsb
push
aam
sbbb
xor
and
sub
and
jmp
push
stos
sub
movsb
sarb
ljmp
or
jbe
insl
mov
cmp
mov
pop
icebp
xchg
push
mov
test
and
and
cmc
jnp
push
rcl
and
decl
cltd
lret
test
rorb
push
pop
lods
shll
pop
sub
push
daa
lock
int
adc
or
call
fwait
add
mov
xor
pop
jp
push
outsl
adc
inc
push
inc
cwtl
testl
inc
ret
stos
fists
loope
outsb
sub
lds
sbb
and
sbb
jg
xlat
out
filds
ss
inc
xchg
pop
mov
inc
jno
mov
pop
dec
mov
pop
movsl
pop
cmp
inc
sbb
les
dec
outsl
enter
ret
mov
xor
and
or
dec
mov
inc
je
inc
xchg
push
je
ss
sbb
ja
add
fsubs
cvttps2pi
sbb
mov
clc
imul
test
in
ret
mov
inc
adcl
clc
or
push
push
fidivrl
xor
cmp
sarb
pusha
fimull
jecxz
loopne
out
xchg
aad
pop
pushf
push
cwtl
testb
mov
aaa
clc
push
or
daa
jne
mov
ljmp
mov
add
jle
xorl
js
push
in
bound
mov
lock
sarb
mov
js
cmp
dec
test
push
stc
iret
fldenv
adc
rep
mov
mov
jbe
dec
adc
mov
mov
dec
les
insb
mov
cmc
sbb
int
xlat
and
and
lds
cmp
in
or
fst
fsubs
lock
es
push
lds
jg
outsb
fcomps
push
adc
inc
dec
in
jo
les
lddqu
lods
inc
mov
cltd
mov
inc
jo
inc
adc
push
mov
inc
cmp
loop
flds
and
inc
outsl
in
mov
pop
dec
testb
std
scas
mov
mov
test
xor
add
inc
mov
adc
dec
mov
cli
shlb
shlb
push
dec
inc
outsl
clc
test
lahf
scas
jle
and
push
adcb
stos
push
sbb
push
push
shrb
fmuls
inc
jbe
inc
pushf
add
xchg
inc
inc
mov
and
jge
pop
pop
imul
nop
xchg
rcrb
pop
push
push
outsl
push
icebp
imul
enter
or
movsb
add
shrl
mov
dec
mov
mov
mov
movsb
sub
jl
data16
jl
mov
shlb
push
sbb
test
push
and
mov
ljmp
out
fisttps
mov
andb
jb
jae
jbe
rcl
scas
negb
and
sub
sbb
ret
ret
sub
ljmp
xchg
adc
jge
adc
and
push
mov
jo
stc
jo
aaa
loopne
dec
sarb
in
add
sbb
and
mov
clc
gs
add
inc
aaa
mov
pop
mov
popaw
ret
push
add
jb
jbe
cmp
cmp
or
push
cmp
push
psrlq
and
aaa
pop
sub
movsb
addb
rcrl
push
and
mov
repnz
stos
add
test
xchg
xchg
cld
test
fdivrp
fwait
xchg
loop
shr
insb
icebp
sbb
inc
inc
aaa
inc
out
insl
movsl
inc
inc
test
sbb
loope
sub
inc
xor
add
es
inc
int3
xor
dec
mov
push
adc
mov
push
lret
jge
jns
lahf
pop
fadds
cmp
push
lcall
mov
mov
lahf
xchg
push
mov
dec
stc
xorb
std
push
mov
fsubrs
nop
add
add
xchg
mov
test
mov
je
push
insl
sub
jecxz
iret
scas
pop
cmpb
cmp
movsb
test
add
dec
icebp
mov
inc
pop
pushf
js
das
push
jae
mov
push
mov
stos
faddp
ss
mov
adc
add
adc
mov
add
in
lcall
int3
mov
adc
in
pop
sarb
dec
or
or
std
insl
mov
jge
sar
xchg
cmp
or
ret
jl
ss
pop
sbbb
imul
sub
mov
lcall
daa
pusha
outsb
in
xchg
cwtl
inc
sub
lods
push
jl
mov
mov
test
int
daa
mov
adc
or
inc
mov
cli
pusha
incl
inc
les
outsl
sbb
imul
mov
cwtl
cmp
sub
sbb
push
mov
mov
sbb
lock
cld
mov
add
in
test
scas
test
cmp
xchg
call
int
scas
adc
jno
and
jo
add
aaa
dec
stos
cmpsb
js
push
push
fmuls
dec
rcr
lock
dec
xchg
mov
xchg
cmp
loop
add
lods
dec
enter
test
push
bound
insb
pop
inc
ret
shll
ds
pop
or
aaa
inc
mov
add
adc
rolb
cmc
cmp
mov
mov
mov
testb
fsubr
fsub
scas
sub
inc
cs
push
fimull
js
jns
push
loope
ret
stos
test
and
loopne
enter
mov
push
mov
scas
inc
jmp
jbe
mov
imul
pop
inc
dec
push
mov
jb
pop
xchg
sbb
out
push
push
jecxz
cmpsb
and
addl
stc
add
mov
cwtl
ror
xchg
fistpll
test
std
mov
loope
mov
rol
imul
je
ss
ud1
hlt
filds
icebp
adc
test
ret
mov
aaa
push
lods
xchg
nop
dec
sub
ficoms
xchg
shrb
mov
nop
sbb
or
ret
mov
icebp
es
movsl
jle
jbe
push
mov
add
push
and
fnsave
out
aam
inc
ss
in
or
dec
pop
in
adcb
cli
and
push
in
sbb
rolb
movsb
inc
xor
sub
imul
je
mov
loopne
imul
loopne
xchg
add
mov
movsb
mov
push
pop
xor
fnstsw
pop
fdivrs
shrb
push
xor
jbe
or
cs
adc
ret
stos
dec
push
repnz
popa
push
lret
sub
pop
inc
stos
push
fidivl
push
enter
fcoml
or
and
clc
mov
jbe
insb
sub
jl
daa
pop
sbb
gs
mov
or
push
inc
dec
push
cwtl
and
add
aas
mov
in
inc
bound
lcall
sbb
jo
inc
stos
jo
lods
jne
call
inc
pop
or
adc
push
pop
inc
mov
push
xchg
and
add
xor
add
dec
lcall
stos
enter
fbstp
pop
subb
push
add
cmp
flds
loope
leave
lea
jns
sub
push
sub
rcrb
fisttps
arpl
ret
jbe
adc
cmp
add
cmpsb
dec
test
pop
dec
jne
repnz
and
js
sub
dec
or
jg
insb
in
push
xchg
stc
push
bound
push
inc
inc
dec
orb
mov
xor
js
add
in
ja
es
xor
pop
dec
mov
add
cld
xchg
inc
push
rcrl
cld
call
stos
mov
and
xchg
lods
sbb
outsl
or
pop
hlt
ja
int3
xor
mov
or
add
xchg
mov
jge
ret
out
xchg
adc
sarl
ficoml
add
je
cmc
push
cmp
stos
das
hlt
filds
aas
pop
inc
sbb
pop
loope
popf
xor
or
fwait
adc
je
rorb
jg
jg
push
ss
popa
add
jb
icebp
je
insl
and
pop
aam
xchg
ljmp
jmp
lock
add
sub
adc
mov
mov
jg
fistps
mov
dec
addb
jg
or
add
adc
leave
add
push
mov
cli
ret
lcall
dec
sbb
lret
push
adc
cmc
aas
cli
push
cmp
inc
sahf
subb
dec
lea
dec
in
leave
pop
sbb
and
pushf
bound
pusha
lods
cmp
xchg
lods
mov
decl
lret
data16
add
and
cmp
xor
push
mov
push
pop
mov
pushl
add
and
mov
jle
xchg
inc
rcl
pop
je
pop
stos
xchg
push
mov
mov
push
enter
repz
adc
icebp
and
mov
jno
mov
fdivrl
jae
ret
mov
scas
decl
lahf
bound
jl
dec
dec
sub
shrl
test
xor
cld
ds
aas
ja
cmp
and
inc
sarb
shrl
loopne
call
movsb
sub
adc
dec
addb
xchg
sbb
pop
push
jp
lret
add
scas
mov
sub
rcrb
add
mov
mov
sbb
stc
sahf
pop
jecxz
sub
pop
rolb
cmpsl
in
cmp
nop
int
rorb
into
addr16
jecxz
call
daa
andb
sarb
mov
stos
mov
dec
pushf
or
ds
cmpsb
nop
cmp
dec
adc
and
inc
pop
inc
add
jns
jo
sbb
out
adc
movsl
stos
pop
hlt
jle
dec
jae
into
push
inc
mov
lock
loop
orl
add
int
xchg
dec
jge
lcall
es
inc
imul
inc
ret
and
push
sbb
sbb
adc
ljmp
inc
jp
mov
fwait
ret
push
test
aad
push
in
sbb
jg
and
mov
rol
cld
je
mov
mov
enter
ret
push
pop
mov
adc
adc
ret
dec
andl
pusha
sbb
into
pop
into
cmp
xchg
sub
mov
add
pop
lahf
mov
movsb
into
xor
cwtl
inc
jl
imul
fldenv
pop
pop
push
mov
pop
xor
fldl
mov
pop
push
vpmacsswd
sbb
cs
mov
mov
test
test
inc
adc
sbb
in
test
dec
jbe
lret
adc
hlt
ret
test
pop
cld
lods
aaa
jo
mov
lret
add
dec
movsl
mov
add
das
leave
inc
inc
lahf
and
inc
push
je
ss
cli
and
push
adc
stos
add
pop
push
xchg
je
lea
xor
dec
adc
clc
daa
sahf
sbb
dec
insb
jmp
mov
adc
cmp
imul
loope
imul
shlb
loop
jecxz
cld
xchg
icebp
xchg
inc
add
js
pop
inc
enter
and
pop
add
lock
sahf
mov
or
mov
out
push
scas
icebp
pop
add
mov
jg
sub
mov
pop
inc
fcomps
test
sub
jle
fsub
fidivs
out
mov
outsl
bnd
insb
rcr
push
mov
mov
lds
fs
nop
and
jb
scas
pop
xchg
dec
shrl
imul
rolb
jmp
fistps
push
dec
movsl
push
out
adc
nop
rcr
icebp
mov
imul
dec
inc
inc
fbstp
add
push
push
pop
push
fistpl
mov
push
bound
adcb
outsl
add
mov
repnz
fcomps
xlat
mov
xchg
icebp
inc
inc
test
shll
mov
retw
lahf
les
idivb
xchg
dec
inc
push
enter
mov
movsl
push
sbb
stos
xchg
pusha
or
ds
aam
xor
in
fdivrl
enter
daa
ret
adc
rolb
sub
fcompl
and
jne
cmpsb
or
pop
dec
stos
aas
and
mov
outsl
add
adcl
adc
sub
cmc
mov
inc
jecxz
fs
dec
pop
ret
cmp
or
jle
data16
dec
les
or
sub
ret
aad
into
repnz
and
loopne
arpl
cmp
xor
dec
ljmp
jle
andb
outsl
adc
sub
inc
test
mov
cli
aas
pushf
pushf
leave
add
ret
repnz
mov
xor
sbb
sbb
mov
lret
mulb
shl
jg
xor
loope
sub
addl
rorl
pop
adc
incb
shlb
xor
add
je
mov
test
pop
scas
fs
sbb
mov
jg
in
fcoml
xchg
pop
and
fdivrs
cmpsl
lret
sub
xchg
lock
sub
enter
fbstp
fsubrl
add
inc
sub
and
sar
push
jg
add
jg
mov
jle
pop
test
adc
push
test
inc
jnp
cmp
das
mov
cmp
shrl
push
sbb
add
push
push
adc
xor
mov
call
dec
adcb
loop
xor
inc
push
sub
pusha
iret
push
fwait
test
and
es
aas
lret
lods
bound
lret
sbb
add
stos
cmpsb
inc
ret
cltd
das
fdiv
sub
insb
dec
push
js
insb
ret
push
fidivrl
pop
outsb
incl
cld
push
lcall
int
push
sub
clc
repnz
lahf
decb
add
mov
mov
test
xor
or
mov
dec
xor
imul
ss
push
and
test
dec
inc
es
ja
ss
mov
mov
test
lret
loope
pop
es
enter
adc
fists
jno
push
jecxz
pop
in
jmp
and
adc
add
sbb
lds
mov
in
inc
add
pusha
in
addr16
es
mov
insl
imul
cltd
iret
add
int3
cmp
push
cmpsb
test
cmp
push
loope
fists
dec
mov
jge
sbb
mov
add
es
icebp
inc
mov
adc
cs
mov
loope
mov
sti
inc
inc
or
imul
jbe
incl
es
and
imul
pop
mov
stc
cmp
cmpsb
mov
jle
or
inc
mov
in
inc
cld
mov
mov
int3
xchg
jle
aad
mov
pop
cmc
fisttps
xor
pop
sbb
jb
loop
dec
xlat
test
pop
mov
movb
and
ss
fidivrl
add
aad
add
xchg
fwait
push
jle
mov
ss
out
xor
lahf
add
dec
adc
sbb
sbb
imul
push
das
inc
inc
and
ja
jmp
bound
adc
xor
mov
sbb
jno
adc
fdivrp
xchg
dec
ljmp
cmp
shlb
scas
xchg
rcrl
mov
push
int3
loop
cmp
and
sbb
outsl
in
and
add
and
ss
popf
testb
std
dec
add
pop
ds
inc
ret
inc
aaa
mov
test
insb
adc
pusha
jecxz
push
shlb
ret
leave
jns
sbb
mov
jge
add
or
shrb
pusha
mov
cmp
jmp
push
mov
jl
inc
cmp
loopne
mov
add
fwait
jp
ret
shl
mov
cwtl
aaa
rcrb
js
stos
pop
push
call
sbb
shl
insl
xor
in
adc
clc
or
cmp
sub
sub
clc
jl
pop
icebp
push
mov
push
shlb
inc
pop
sbb
jle
mov
mov
nop
subb
ljmp
cmpsb
xchg
cld
fsubrs
mov
mov
xchg
jo
mov
mov
aas
call
or
pop
push
popa
adc
dec
mov
sti
jbe
xlat
jmp
enter
jl
xchg
xchg
mov
das
mov
in
mov
or
fisubs
or
ljmp
int
pop
js
mov
popa
jle
jg
push
mov
lahf
and
movsl
sub
push
add
xor
out
mov
gs
jnp
fadds
movsl
push
xor
insl
pop
idivl
xchg
fsts
dec
repnz
jge
fnstsw
clc
xor
add
xchg
repnz
or
push
outsb
or
ficomps
std
movsb
pusha
lea
fadd
iret
jns
lahf
push
clc
pusha
mov
sahf
xchg
ss
push
push
xorb
sarl
mov
or
insb
mov
xchg
es
jl
movb
popaw
in
cwtl
xor
ret
sbb
adc
loope
jo
loopne
dec
test
loop
popa
fiadds
inc
add
push
adc
xor
test
add
and
mov
pop
out
out
push
and
fidivs
insl
jl
enter
inc
xchg
orl
orl
cld
and
inc
dec
loope
insl
or
clc
adc
mov
mov
enter
mov
cmpsb
ficompl
push
push
call
add
cmpb
ficompl
ret
add
push
gs
cmp
xchg
xorb
dec
cmpsb
inc
sub
jl
pop
addb
enter
rolb
sbb
inc
sahf
lods
repnz
mov
add
xchg
or
mov
icebp
sbb
pop
xor
pop
in
mov
sarl
lcall
mov
mov
leave
mov
inc
mov
adc
sahf
cmpsb
add
or
mov
fmuls
fmul
pop
pushf
inc
mov
pop
dec
cmp
je
add
push
xlat
dec
mov
es
jmp
mov
lock
arpl
movsb
add
push
dec
bound
add
fcomip
pop
int3
ss
or
and
xor
fsubs
das
mov
rcrl
xor
out
and
inc
fdiv
add
push
adc
sbb
inc
cmc
filds
mov
pop
sbb
cmp
lock
inc
neg
std
pop
or
pop
adc
push
mov
push
or
inc
pop
mov
mov
or
push
cmc
dec
xor
inc
les
shr
fists
push
dec
mov
adc
loope
mov
dec
inc
jecxz
fistl
push
adc
cli
mull
mov
dec
nop
adc
and
test
test
dec
mov
xchg
cmp
ret
jno
add
xor
or
test
int3
jle
les
sbb
mov
dec
or
sub
cmp
inc
xchg
test
cmpsb
popa
xor
outsl
je
es
inc
enter
mov
jl
stc
nop
ret
test
ja
sub
movsb
sti
cmp
push
jl
push
sbb
hlt
jg
ljmp
mov
in
push
xor
lret
pop
sbb
adc
xchg
pop
add
add
addb
pop
shll
jle
lock
add
and
std
outsb
cld
mov
fwait
popa
add
push
push
inc
mov
sbbl
inc
sbb
push
jp
cmpsb
icebp
jmp
jmp
lods
insb
fs
mov
add
aas
hlt
jg
jle
push
lea
sub
cld
fisubs
adc
mov
or
cmpsl
xchg
in
mov
push
jno
inc
inc
outsb
arpl
mov
lea
ret
inc
mov
xchg
in
sub
mov
cmp
in
inc
pop
shll
aad
repnz
add
cmc
mov
test
adc
cs
fadd
sbb
fwait
inc
ror
pop
inc
cmp
xor
in
lcall
cmc
add
push
dec
dec
dec
pop
inc
repnz
mov
lea
fidivs
pop
scas
add
fs
jne
and
or
mov
sub
test
lods
jg
cwtl
push
xor
push
mov
punpckhwd
insl
and
and
or
sti
fcomps
fnsave
push
in
pop
xchg
cli
sbb
inc
xchg
jns
pushl
or
rclb
cmp
sbb
jmp
pop
shrb
xor
dec
push
dec
mov
pop
shll
sbb
or
imul
adc
fidivl
out
cmpsb
push
xchg
fisttpll
add
hlt
push
popa
mov
int
mov
clc
sbb
rorb
fs
xor
adc
jo
mov
dec
and
loopne
xchg
jecxz
fsubp
mov
aad
sub
inc
pusha
push
jp
jg
push
daa
in
sahf
insb
mov
cmp
sbb
xchg
push
stos
call
mov
dec
xchg
push
push
lods
cmp
sub
es
mov
pop
aad
repz
lret
jmp
loope
rcrb
lret
jle
and
mov
pushl
mov
xchg
mov
out
jl
es
mov
ljmp
lock
add
test
jmp
incl
insb
mov
loopne
cmp
adc
mov
xor
sub
in
stos
jp
and
mov
lret
push
and
lret
xor
adc
orl
inc
sti
scas
push
mov
imul
incb
in
push
call
hlt
in
mov
add
ret
and
pop
adc
dec
dec
xchg
add
clc
aam
xor
mov
mov
adc
cld
xchg
mov
pusha
pushf
lcall
add
xchg
cmc
enter
loop
ss
fsubs
add
sub
add
loope
cltd
lock
shrl
xchg
lcall
mov
les
sbb
inc
adc
stos
add
es
dec
mov
adcb
and
clc
ret
adc
movsl
push
xchg
add
add
popf
cmp
dec
pop
fstl
clc
icebp
and
movsb
xchg
mov
fisubrl
mov
iret
or
mov
imul
xor
andb
dec
push
icebp
pop
setbe
xor
stc
shrb
mov
jnp
mov
outsl
jo
rorl
lcall
mov
in
mov
js
fdivr
push
xor
or
inc
mov
cmp
test
test
aas
mov
mov
ja
sub
subb
cmc
mov
cli
inc
rorb
push
and
cwtl
sarl
andb
loope
js
stos
les
xor
rclb
insl
mulb
data16
fidivl
loop
add
rclb
ljmp
int3
dec
xor
andb
jge
sub
andl
in
sub
aaa
dec
or
cs
lret
adc
mov
fimull
dec
or
sub
push
sub
neg
lgs
pop
lods
jl
jns
and
jg
in
mov
cmc
push
and
pop
sbb
or
pushf
cmp
pusha
cs
dec
pop
lods
ret
xchg
call
push
jp
fnstenv
dec
lods
popf
xlat
aaa
out
push
mov
testb
mov
lcall
or
pop
icebp
ret
sub
fbstp
xchg
loopne
push
dec
gs
movsl
repnz
clc
add
in
mov
push
jmp
or
inc
push
data16
fs
and
call
ret
in
out
lods
mov
rorb
jp
stos
sbb
push
jb
xor
movsl
bound
ljmp
or
iret
scas
cli
add
cmp
ficoml
hlt
or
jecxz
xchg
pop
and
inc
add
adc
nop
mov
push
mov
outsb
negl
fdivs
and
jno
inc
rclb
adc
cld
das
clc
inc
dec
hlt
dec
add
rorb
rcrb
test
inc
dec
push
loopne
jle
test
ret
mov
jecxz
loope
and
xchg
pushf
jp
shll
cmp
jbe
pop
xchg
int3
aas
test
mov
repz
mov
in
fcomip
push
inc
add
inc
cmpsb
pusha
aam
imul
iret
pop
or
aam
pop
cmp
push
adc
push
sbb
repnz
dec
daa
push
loopne
jo
stos
inc
add
fs
lods
into
adc
icebp
mov
scas
ds
cmpsb
loopne
subl
push
dec
inc
cld
inc
fs
mov
add
popa
push
in
hlt
adc
or
mov
pop
jl
mov
cs
shrb
dec
pop
push
sub
xchg
mov
movsl
jecxz
frstor
dec
pop
adc
aas
les
repnz
mov
call
imul
sti
sbb
dec
add
add
adc
add
das
out
jo
mov
outsl
popf
fdivrs
sar
pop
xor
sbb
fadd
push
jne
mov
hlt
fistps
enter
sub
mov
xor
js
insl
mov
xchg
fcomps
scas
lahf
mov
jbe
popf
jo
mov
mov
pop
sub
out
stos
push
and
cltd
mov
push
movsb
orb
sub
ret
mov
push
xchg
movsb
dec
cwtl
inc
pop
sub
sbb
mov
add
mov
adc
xor
stc
scas
and
fmuls
mov
je
sub
les
sti
lds
ret
sbb
lock
pop
push
sbb
rclb
sub
dec
ljmp
inc
push
pop
cmp
cmpsl
outsb
cmp
add
inc
int
sbb
icebp
push
aaa
jl
or
sub
mov
sub
faddl
push
aas
mov
sbb
rcll
add
inc
cltd
loopne
ret
mov
dec
sbb
adc
xor
xor
or
pcmpgtb
push
stos
inc
fdivrs
mov
bound
add
sar
mov
jle
cmpb
adc
mov
call
push
mov
and
jg
outsl
dec
dec
jmp
or
xor
fnstenv
dec
enter
mov
insb
mov
test
inc
pop
pop
test
es
repz
mov
and
jo
pop
fwait
aas
lahf
adc
ret
jae
loope
bound
fldl
push
mov
idivb
mov
insb
adc
xchg
pop
test
les
mov
shrb
xlat
jecxz
lock
jae
xor
mov
dec
cli
sbb
mov
adc
leave
test
lock
xchg
push
pop
aas
sbb
incl
jno
mov
es
rorl
mov
lcall
inc
out
cs
lret
test
out
cmp
sbb
sbb
arpl
push
sbb
stos
push
inc
cli
cmp
fstpt
inc
cmp
pushl
jno
test
mov
movsb
and
shrb
push
lock
add
ja
sub
fs
sub
cmpsb
or
sbb
dec
rorb
dec
jecxz
mov
push
fmull
push
push
lods
arpl
ds
jecxz
pop
jmp
das
rolb
sub
loop
cmpsl
jl
lcall
push
or
fnstsw
mov
out
sar
loop
fdivrs
loope
jg
incl
xchg
inc
mov
pop
cmpsl
out
jmp
xchg
clc
rorb
xchg
inc
mov
add
imul
js,pn
dec
jb
test
outsb
dec
push
shlb
adc
aam
inc
jo
rorb
call
sarb
test
daa
dec
cmp
push
icebp
pop
and
xor
adc
push
mov
xchg
shrl
hlt
push
es
cmp
cmpsb
testb
stos
cmp
mov
xor
loop
mov
test
lods
mov
in
testl
es
jp
adc
int3
arpl
mov
push
lock
icebp
jo
jle
inc
insb
daa
pop
pop
xorl
or
inc
stos
cmp
fwait
js
adc
adc
mov
lds
loop
inc
loope
jecxz
es
push
sarb
sbb
sub
aam
jae
fnstenv
les
mov
rolb
imul
es
cwtl
clc
mov
push
push
xchg
insb
jne
ficoms
ljmp
sbb
xor
nop
sbb
in
sub
lock
xchg
push
push
sbb
andb
dec
and
out
adc
adc
push
subb
repz
xor
add
cli
push
incb
mov
ficoms
sbb
pop
call
hlt
sti
push
add
ljmp
test
adc
xchg
jecxz
sub
pop
sub
xchg
add
test
sbb
roll
dec
test
mov
mov
adc
paddsw
pop
icebp
insb
mov
inc
and
addb
ljmp
mov
xor
mov
add
pop
pop
outsb
ror
shlb
repz
mov
mov
and
lods
clc
mov
dec
or
xorb
mov
lds
mov
xlat
jge
and
data16
add
stos
jmp
jge
mov
adc
adc
mov
inc
and
mov
addb
inc
mov
and
mov
pop
dec
mov
lcall
pop
or
or
loopne
pop
mov
test
sahf
loop
rolb
arpl
jg
dec
jg
fwait
or
ljmp
inc
cmp
xor
in
jmp
cwtl
call
negl
imul
mov
clc
hlt
fs
out
push
arpl
aas
scas
sub
mov
dec
daa
inc
adc
jnp
pushf
and
ret
sbb
add
xchg
mov
out
dec
and
movsl
jns
push
insl
inc
ret
add
fisubrs
dec
call
scas
js
imul
pop
or
pop
repnz
mov
clc
incl
xor
ja
iret
call
push
data16
or
push
sbb
lret
mov
push
pop
cwtl
push
js
and
mov
dec
ret
std
fnstsw
mov
incl
inc
aas
adc
iret
adc
and
add
push
cwtl
icebp
std
or
dec
scas
mov
and
int
add
sbb
loopne
xchg
adc
add
sub
inc
lock
mov
pusha
mov
push
or
arpl
loop
and
inc
ss
or
sbb
xor
fwait
adcl
mov
std
mov
les
or
orl
push
cmpsb
push
loopne
jle
sarb
je
lea
mov
and
in
mov
push
jno
cld
addb
pop
dec
testb
sar
or
pop
bound
add
ds
add
mov
lods
sub
push
mov
js
insb
mov
mov
sbb
pop
shl
sub
mov
push
pop
mov
sbb
or
stos
add
cs
jle
int3
mov
lods
and
mov
rolb
cmpb
cmp
xchg
pop
sahf
mov
push
add
test
in
push
cmc
pop
xor
push
enter
js
dec
in
dec
clc
icebp
inc
in
pop
adc
cmp
loope
or
neg
aam
mov
int3
pop
pop
xorb
mov
shll
pop
mov
adc
loopne
fcmovbe
les
push
sti
cltd
jbe
ljmp
pusha
ss
pop
ret
jo
xor
jno
sbb
das
adc
aaa
adc
fwait
or
or
and
in
clc
ljmp
sub
cmp
or
roll
arpl
cmc
mov
xor
lods
push
dec
or
cmpsb
xchg
dec
dec
lods
xchg
in
sub
push
std
jecxz
scas
xchg
imull
jmp
mov
jge
cli
pop
clc
lds
xor
jno
int3
and
xor
loope
add
inc
test
cli
aas
push
jmp
fstps
enter
subl
lods
push
popl
sbb
inc
or
enter
das
icebp
rcr
lock
mov
scas
outsb
cmpsb
ret
jl
lea
es
sbb
lds
les
inc
jo
scas
mov
loopne
adc
pop
mov
icebp
lea
movsl
out
pushf
test
js
test
adc
movsl
or
fsubrp
mov
lock
push
and
hlt
sbb
adcb
aam
xchg
push
jl
ret
push
cmp
push
pop
dec
mov
incb
or
mov
movsb
mov
xlat
adcl
cli
add
nop
inc
cmp
lods
cmp
sub
lret
aam
xchg
popa
test
sti
push
ss
mov
ja
int3
push
insb
sub
test
sbb
add
push
xchg
inc
outsb
cmpsb
mov
call
cmp
cmp
cmp
and
rorl
jp
je
sti
jo
cmp
sbb
xor
or
data16
mov
andl
sbb
shll
cmp
pop
and
fbld
cmp
fsub
lds
js
mov
lahf
test
adc
mov
dec
mov
shll
adc
cmpsb
jae
mov
xor
mov
or
inc
cmpb
xor
mov
jne
jp
cmp
jnp
aas
add
leave
push
lock
sbb
pop
adc
dec
push
stc
push
aam
aad
test
cld
outsb
xor
mov
loopne
add
bound
pop
add
rorb
fisubs
dec
in
cli
es
add
sbb
test
add
mov
mov
enter
mov
mov
mov
pop
pusha
or
inc
inc
push
or
lea
roll
movsb
add
or
add
aam
stos
mov
push
dec
sub
adc
and
inc
lock
inc
loopne
push
xor
jge
pop
sub
or
mov
mov
push
push
or
cs
lea
out
adc
ss
adc
cwtl
lods
cmpsb
xor
xor
movsl
addl
adc
and
sbbl
mov
fadd
add
movsb
or
add
aam
sbb
leave
ljmp
call
aad
push
pop
stos
data16
imul
sbb
jl
mov
push
dec
sbb
and
jo
por
outsl
dec
mov
pusha
lods
jo
mov
cmpsl
jnp
ret
loop
nop
fidivl
movsl
out
mov
test
insl
popf
sbb
inc
loope
mov
ljmp
xchg
pusha
inc
inc
scas
cmp
sbb
dec
sahf
jl,pt
mov
inc
andl
or
in
popa
inc
sub
mov
dec
push
xchg
shr
push
mov
hlt
mov
xor
cmp
into
subb
sbb
cwtl
shll
sbb
pop
sbb
test
cmp
sbb
mov
mov
add
push
rclb
or
jmp
dec
dec
stos
nop
popl
cmp
or
mov
or
inc
lahf
adc
ljmp
fcoms
pusha
mov
mov
pop
xchg
sub
jno
jbe
popa
imul
aam
clc
das
ljmp
imul
gs
in
scas
xor
jb
cmp
or
dec
cli
mov
outsl
or
or
cmp
sbb
jo
push
sbb
rcrb
dec
mov
add
mov
jb
add
test
in
or
call
outsl
pop
nop
jmp
sub
pop
add
push
jl
push
ja
sbb
adc
xor
into
or
cmc
inc
mov
jmp
lar
sbbb
mov
pop
cmp
data16
push
popf
stos
test
ret
adc
popa
pop
lods
sub
cld
loopne
mov
pmaxub
stos
inc
enter
stc
popa
mov
jb
loope
mov
adc
ret
divb
scas
and
test
inc
xchg
and
pop
jno
adcb
mov
xor
add
or
ja
mov
fs
test
aaa
pop
cmp
popf
inc
mov
rcrb
popa
jb
test
outsl
loopne
test
mov
cltd
cmp
insl
rcll
inc
fldl
cmp
cltd
fdivr
push
push
js
imul
mov
mov
mov
mov
jb
fcomps
adc
mov
inc
ljmp
flds
adc
adc
cmp
mov
dec
or
dec
in
sub
adc
cltd
mov
popl
in
jl
add
ja
movsb
dec
loope
imul
pop
mov
icebp
outsl
xchg
loopne
xor
xchg
insl
test
inc
cld
test
pop
rcll
in
sbb
nop
movsb
dec
push
push
incl
pop
orw
push
jmp
enter
dec
movsb
int3
fwait
xor
xor
mov
mov
mov
push
test
outsl
aam
sub
addr16
xorb
stos
in
inc
dec
mov
cmp
pushl
mov
xchg
shll
je
shll
xor
nop
adc
clc
pop
dec
popw
pusha
add
test
adc
sbb
push
call
push
add
mov
sbb
push
loope
and
subl
ret
inc
push
jo
test
stos
inc
inc
pop
lods
push
loop
enter
bound
stos
push
push
enter
add
mov
pop
fnstsw
aam
cld
imul
mov
pop
mov
aad
inc
add
pushf
shll
xor
test
dec
test
icebp
mov
ret
std
aas
mov
pop
repz
arpl
adc
add
sbb
insb
add
xor
adc
cld
inc
and
mov
lcall
sub
sub
loop
mov
stos
mov
ror
aad
sbb
enter
test
pop
and
sub
push
aam
inc
lea
push
push
std
fisubrl
lfs
pop
incb
mov
mov
ljmp
call
lret
dec
adcb
push
and
sbb
xor
addl
packssdw
jl
in
lcall
mov
cld
stos
int3
mov
std
inc
popa
push
add
jle
push
push
cltd
push
push
addb
icebp
push
sbb
pop
xchg
hlt
and
cmp
lods
nop
mov
xchg
sarb
int3
mov
js
mov
mov
sbb
cmp
mov
add
dec
cmp
fisubs
push
sbb
dec
ja
pop
xchg
arpl
lahf
pushl
sub
xchg
je
push
pop
jmp
inc
or
movsb
insb
out
enter
popl
call
scas
push
jp
push
cmp
mov
push
add
std
popa
and
fbld
or
cwtl
push
jge
jbe
aas
and
add
cmp
and
lret
mov
clc
into
jb
shl
jg
bound
add
or
jo
and
aam
lret
and
jp
pushf
les
pop
ds
fsubs
cvtps2pd
add
adcb
fists
sbb
clc
test
push
addl
inc
cmpsl
or
dec
stos
fsts
xchg
push
xlat
lahf
push
jmp
fsts
push
mov
data16
pop
cmp
xlat
mov
decl
mov
in
jb
pop
mov
dec
sahf
lods
push
pop
into
xchg
sub
push
mov
and
sbb
xchg
or
mov
jp
push
repnz
aaa
lea
imul
dec
jg
add
in
push
xor
loop
lahf
inc
in
adc
js
jb
ficomps
ret
mov
push
out
or
mov
lods
nop
scas
les
dec
sub
jae
lea
jo
add
clc
mov
add
xchg
push
cld
jbe
xor
inc
xlat
cmp
inc
fwait
fs
call
sub
jge
add
jmp
ja
sbbl
nop
mov
mov
stc
and
rcrl
cmc
sahf
and
mov
adc
mov
testb
cmp
test
cmpsb
incb
daa
je
rcr
jl
xchg
bound
sbb
faddl
or
test
stos
in
popf
lea
xchg
decb
test
pop
or
inc
mov
adc
mov
loopne
inc
shrl
lods
and
push
add
sti
sbb
add
mov
cld
jo
je
aad
ret
add
and
or
mov
inc
fmuls
xchg
fprem
mul
sarb
scas
push
loopne
xor
push
xorl
sbb
mov
xor
xchg
adcb
push
push
adc
cmp
push
test
dec
lcall
or
gs
daa
ss
nopl
ret
push
inc
rorb
mov
mov
add
or
push
jne
jmp
inc
mov
inc
cli
lahf
cmp
je
sti
pop
sub
scas
xor
mov
mov
push
aam
adc
cwtl
in
adc
cli
pcmpgtw
sbb
jns
in
repz
js
xor
xchg
fidivrs
stos
and
xchg
mov
out
cmpl
or
out
mov
fildll
or
cmpsb
inc
inc
pop
sbb
push
push
dec
jge
cmpb
js
rolb
popf
pushf
pop
inc
mov
cmc
mov
data16
dec
sbb
push
ds
ljmp
dec
jp
ja
outsl
nop
dec
iret
inc
and
or
je
sub
faddl
cmp
add
inc
js
mov
push
pusha
sbb
adc
bound
es
mov
addr16
nop
xchg
push
inc
or
incl
add
adc
imul
sub
out
pusha
fildll
mov
ret
jb
cmp
mov
cs
adc
lock
cld
movsb
movsb
mov
sbb
pop
fs
mov
xor
pop
fstl
shll
shrl
in
sub
push
push
insb
mov
mov
shll
dec
inc
push
or
xchg
fidivrs
pop
add
jno
sbbb
movsl
jle,pn
mov
push
mov
dec
inc
pop
jb
ja
adc
sbb
loop
xor
jb
mov
push
mov
mov
movsl
movsb
pop
push
pop
rcrb
inc
ror
fldl
out
push
insb
inc
xchg
mov
jge
popf
mov
out
xchg
push
inc
mov
rcl
push
sbb
cld
cmpsb
mov
xor
mov
pushf
add
cli
mov
bound
add
js
fwait
lds
movsb
mov
sarb
xchg
dec
and
jae
xor
int3
inc
mov
xor
ljmp
or
js
push
inc
gs
inc
jnp
jl
cmp
mov
enter
inc
adcb
mov
lcall
and
fs
adc
pop
and
pushf
imul
mov
dec
sbb
cmc
or
mov
lock
cmp
jo,pn
imul
in
mov
add
sbb
sub
push
xchg
jecxz
cs
and
push
aam
push
xchg
in
pop
add
test
inc
les
sub
sbb
cmp
mov
mov
lcall
pop
cld
push
push
icebp
orb
push
add
in
mov
mov
sahf
xchg
popf
sbb
mull
push
jmp
lock
arpl
cmpsb
das
jns
outsb
adc
fs
jno
test
data16
inc
jg
ffreep
sub
cmp
popa
in
lahf
jp
test
jge
mov
cmp
push
lods
das
stos
stos
or
movsb
xchg
inc
cs
in
outsb
mov
push
in
cmpsl
mov
stc
adc
daa
add
xlat
ljmp
cld
loopne
inc
adc
inc
xorb
sarl
sbb
xor
inc
pushf
in
and
lock
fdivr
mov
jl
rorl
icebp
jmp
sub
add
lock
ror
nop
adc
out
hlt
inc
hlt
decl
add
xchg
out
pop
or
lahf
xor
hlt
sub
dec
hlt
inc
jmp
or
dec
dec
dec
shll
pop
enter
scas
clc
xchg
std
inc
adc
mov
lds
ja
test
ljmp
data16
dec
cmc
cmpsl
and
sbb
xchg
fsubrl
ljmp
push
nop
mov
jmp
das
mov
loop
mov
repz
js
add
std
push
adc
xchg
xor
pop
jmp
and
fsubs
push
and
or
adcl
dec
xchg
mov
scas
movsb
push
idivb
ret
mov
loopne
mov
out
jmp
je
in
subb
adc
daa
aam
push
cld
fcomip
jo
xchg
push
xor
and
lahf
mov
xchg
adc
andb
mov
lahf
shl
add
sbb
pushf
cli
pop
insb
push
mov
iret
mov
push
in
xor
outsl
and
pop
rcrl
jo
xor
pop
cmp
and
lahf
push
push
cld
xchg
cmp
jbe
std
call
mov
or
fidivl
out
xchg
add
mov
jb
mov
xchg
inc
or
sbb
scas
cmpsb
adcb
bound
es
xor
adc
aaa
adc
xchg
dec
nop
sbb
mov
pushf
cmp
lods
decl
std
or
mov
in
data16
cmpl
call
lds
jle
lea
pop
fsubs
call
jne
push
mov
dec
jne
jno
mov
push
add
xorl
shll
fwait
mov
imul
jp
jg
push
shl
inc
les
and
js
fidivs
adc
cmp
mov
lret
roll
std
scas
push
add
jnp
clc
cmpsb
leave
push
dec
xor
rcrl
call
sub
inc
imul
stos
test
sub
mov
mov
mov
adc
jge
lods
lret
dec
add
repz
fcoms
pop
push
dec
mov
pop
daa
dec
mov
mov
sbb
inc
jge
and
fisubrs
and
js
mov
cmpsb
cmp
add
jmp
jmp
mov
jl
fs
mov
mov
pop
add
and
add
leave
inc
call
add
add
adc
fsubl
lahf
pop
add
rcrl
add
ficompl
xor
cmp
xchg
test
divb
jne
enter
fstpt
scas
outsl
pop
mov
cli
mov
add
sub
shlb
add
movsb
sub
hlt
or
mov
lcall
jns
mov
lea
sbb
cmp
repnz
das
loopne
cmpsb
lahf
sub
inc
jg
sarl
jno
add
iret
test
ss
rclb
cmpsb
popf
cld
mov
and
jmp
orb
das
arpl
ss
xchg
cli
xchg
or
adc
mov
std
call
stos
xchg
dec
jb
enter
jo
sti
test
leave
loope
jle
inc
inc
shlb
dec
adc
mov
aaa
sbb
loopne
rol
mov
das
shlb
mov
inc
stos
shl
xlat
movsl
adc
iret
mov
cmc
fildl
lods
pop
or
jo
cmp
divb
add
push
add
push
pop
xchg
xor
pop
add
sahf
push
inc
xor
mov
mov
hlt
das
push
ret
dec
cmp
shll
cwtl
push
dec
push
mov
pop
js
lods
cmp
sbb
or
scas
call
and
roll
cmp
mov
int3
or
test
clc
enter
inc
in
popf
dec
push
movups
sbb
pop
clc
jae
popf
clc
and
int
sub
int
cld
cli
or
aaa
sarl
push
shr
or
push
jle
gs
adc
lock
cli
das
fs
push
fs
sub
dec
std
mov
mov
movhps
cmp
sub
fwait
daa
xor
pop
mov
sub
xor
fildll
sar
rcll
outsb
ljmp
sub
je
outsb
sbb
out
clc
mov
inc
jg
push
cmp
add
sub
movsb
stos
shlb
dec
nop
mov
incl
or
loopne
pop
andl
out
cmpsb
or
outsl
xor
mov
mov
ljmp
aam
cwtl
or
scas
dec
fadds
cmpsl
dec
push
add
xor
ret
pop
hlt
mov
outsl
shlb
mov
icebp
out
mov
in
or
mov
jge
fldt
bound
or
xor
inc
nop
sti
fistps
or
les
pop
cwtl
xor
or
int
bound
loope
data16
lret
xlat
iret
mov
les
orl
add
js
loope
add
sbb
cs
in
pop
fmull
orl
les
and
insb
test
iret
inc
out
jl
xor
mov
lret
fcoms
es
push
sub
and
inc
or
sbb
sbb
or
icebp
leave
push
adc
mov
or
push
sar
pusha
and
imul
mov
mov
icebp
callw
leave
sbb
hlt
add
mov
jl
inc
fs
push
jne
jg
fistps
incl
inc
das
mov
sub
inc
loopne
into
or
hlt
int
mov
pop
mov
int
mov
push
add
xlat
add
loope
jnp
mov
fs
fstp
mov
les
stos
repz
aam
scas
hlt
loope
mov
cmpb
into
stc
push
ss
sbb
pusha
lock
aam
aam
xchg
shlb
clc
pop
inc
and
inc
out
loop
je
push
dec
jo
push
stos
and
add
adc
outsb
sub
or
leave
pop
xlat
adc
rcrl
mov
bound
incb
push
sub
jecxz
jmp
shlb
jno
push
xchg
and
loopne
mov
movsb
pop
dec
int3
mov
mov
aad
ret
add
subb
xor
jae
push
ljmp
or
sub
repz
mov
inc
incl
push
das
stos
lock
inc
xor
mov
repz
lcall
cmp
popf
in
mov
pop
push
mov
decl
or
sbb
insb
xchg
jo
push
jl
push
test
lds
dec
mov
hlt
xchg
sbb
pop
in
lock
sub
pushl
dec
add
cmp
xor
pop
ljmp
sub
push
push
and
jae
mov
push
lahf
sbb
hlt
out
dec
popf
add
inc
out
push
inc
mov
xchg
ficomps
or
mov
adc
outsl
mov
add
pop
adc
add
popf
and
scas
inc
shll
imul
movsb
lock
fs
push
add
push
add
inc
inc
dec
xchg
mov
jge
push
js
jl
aas
out
xorb
lcall
stos
pop
xor
test
das
push
lods
in
pushf
add
fdivs
mov
jb
imul
sub
test
jl
mov
jl
imul
orl
sbb
lahf
mov
xchg
subb
cmp
ljmp
sbb
xchg
xlat
push
fcmovb
or
dec
jo
sbb
shll
xchg
inc
fildl
xor
cmpsb
inc
cmp
push
xor
dec
js
cmpb
sub
bound
add
test
ljmp
lods
push
mov
and
jp
mov
xor
xchg
mov
popa
mov
imulb
add
pop
add
cmp
sub
sub
add
fwait
jns
stos
test
xchg
or
insb
and
outsl
mov
cmp
rcrl
sahf
ret
es
iret
add
pop
cmp
cmpsl
pusha
pushf
mov
cltd
jg
cmp
inc
mov
into
sbb
aam
adc
lods
pushf
loopne
add
fs
and
sti
mov
sbb
pop
cld
cmc
sub
and
jle
stos
push
cmp
pop
dec
orb
outsb
sub
pop
lods
push
xor
mov
das
mov
or
call
sbb
lea
addr16
int3
dec
out
call
inc
mov
insl
inc
xor
js
jl
or
add
jg
cmp
stos
test
sbb
ds
insb
lods
lock
push
xchg
mov
lcall
or
or
mov
les
data16
hlt
ret
xor
fiadds
sub
mov
pop
inc
les
mov
test
xchg
pop
mov
adc
and
push
jne
lock
jae
adc
and
ljmp
sbb
jp
nop
mov
xor
loopne
mov
sub
and
xchg
mov
xchg
and
mov
pop
inc
inc
mov
push
mov
sbb
mov
dec
int
and
pop
decl
adc
and
add
sahf
lahf
call
xchg
xor
addl
push
mov
adc
mov
int3
pop
decl
or
lock
adc
cwtl
loopne
je
xor
or
out
push
incl
sti
test
outsl
aam
addl
jle
mov
mov
mov
test
imul
mov
add
popf
mov
clc
leave
pop
sahf
int3
pop
call
pop
adc
ficomps
or
clc
xor
add
decl
pop
mov
and
out
mov
xlat
jl
test
push
jg
inc
je
sub
xor
add
mov
pop
cli
les
mov
mov
pop
sti
mov
int3
mov
movsl
insl
cwtl
clc
mov
test
xor
out
dec
inc
call
arpl
xchg
mov
push
cltd
sub
pop
dec
out
cmp
cli
idiv
lret
pop
mov
scas
addr16
cmp
jge
loope
loopne
and
and
mov
inc
cmpsb
test
hlt
sbbb
roll
sub
ljmp
addl
sbb
pop
and
adc
pop
mov
adc
mov
aaa
lcall
push
xchg
mov
adc
cmpsb
imull
sbb
or
xor
ja
cmp
rol
jo
pop
mov
mov
cmp
inc
js
cmp
xor
mov
in
pmaxub
xchg
xor
inc
xchg
cmp
pop
push
add
aaa
sar
icebp
test
dec
mov
inc
test
mov
nop
push
xchg
lds
cli
insb
sbb
testb
aaa
in
jp
cld
add
std
add
mov
fs
decl
sbb
sub
loope
lock
loop
add
fcompp
int
pop
clc
and
pop
mov
sbbb
dec
pop
inc
imul
cmp
xchg
loop
enter
jg
cmc
mov
call
leave
add
mov
mov
jb
ss
mov
xor
fisttps
push
push
adc
dec
clc
ljmp
test
cmpsb
lea
negb
xor
pop
mov
cmp
imul
loopne
xlat
mov
mov
push
dec
call
rorb
mov
call
push
rorb
mov
pop
pop
lods
dec
or
add
pop
lret
fcmovu
mov
pop
push
xor
xchg
js
mov
push
xor
mov
dec
outsl
fildl
fs
cmp
add
mov
clc
stc
test
mov
es
xor
push
fcmovbe
fildll
lock
mov
pop
cmp
xorl
shll
hlt
jo
inc
mov
jb
dec
stos
jo
sbb
and
sbbb
mov
mov
or
xchg
push
pop
fs
notb
cmp
lahf
lcall
xchg
jae
cmc
jmp
std
add
fisttps
sub
add
mov
jmp
add
push
adc
aad
push
fiaddl
ja
and
std
push
movsb
xchg
xlat
pusha
fsubrs
sub
push
sbb
scas
shlb
bound
int
jns
and
dec
push
mov
cmpsb
xchg
popf
outsl
xchg
xchg
call
or
repnz
in
mov
rorb
sarb
add
addr16
add
jo
loop
or
jo
mov
nop
out
inc
das
or
data16
xchg
lret
cmpsb
cmpsb
pop
cmp
jl
test
add
arpl
inc
ret
mov
push
mov
and
andb
push
call
adc
ds
inc
add
add
or
sti
inc
sbb
ja
push
les
test
cmp
into
adc
xchg
mov
lcall
cld
and
dec
andb
fcom
pop
leave
xchg
in
jecxz
clc
jge
or
mov
hlt
dec
mov
cmpsl
mov
xor
aam
push
pop
and
je
adc
mov
pop
mov
sbb
sub
aas
sbb
push
inc
popf
test
jo
sti
push
shlb
enter
mov
pop
dec
adc
cs
pop
pop
mov
lcall
xor
arpl
js
call
imul
and
or
or
lods
xor
stos
push
lret
popf
cmpsb
lea
xor
cli
test
jg
and
dec
jp
adc
sbb
pop
insb
pop
fdivrs
sti
dec
dec
arpl
in
inc
ret
in
mov
mov
bound
mov
enter
xor
in
in
inc
cmp
daa
imulb
and
xor
pop
iret
add
and
movsb
mov
mov
push
out
jnp
out
inc
test
mov
lret
mov
scas
and
sahf
mov
sbb
aam
movsb
andb
cli
xor
cmp
xor
inc
sbb
popa
mov
push
mov
jle
xchg
dec
sbb
adc
lods
xlat
insl
jnp
or
xor
ret
or
jg
push
lds
mov
out
jnp
icebp
call
icebp
pop
nop
rorl
pop
clc
push
cld
xor
lock
jg
jge
loop
popf
pop
or
subl
stc
cmpsb
push
sti
test
pop
les
pop
sub
lahf
push
lret
pop
jge
or
pop
leave
cmp
repnz
add
and
ret
dec
je
inc
lods
sar
cwtl
icebp
jecxz
adc
jno
mov
push
aas
ds
ljmp
xchg
and
or
sub
ret
mov
rcrl
mov
mov
inc
xchg
movsl
pop
xor
mov
addl
xor
rol
add
sahf
xchg
testb
jnp
dec
dec
fmull
xchg
sbb
cld
scas
mov
push
call
popa
jl
scas
xor
cmp
inc
or
leave
ljmp
cli
cmp
xbegin
loope
add
jbe
and
pop
lods
push
or
add
jecxz
jl
xor
dec
int
sub
insb
pushf
dec
lods
clc
stos
mov
pop
mov
pop
sarl
sub
ss
cmp
fcoms
ficoms
adc
dec
inc
mov
mov
jp
paddsb
inc
mov
or
repnz
pop
sub
adc
and
adc
mov
stos
aas
ja
or
sbb
sbb
movsb
pusha
xchg
lds
insb
adc
xchg
loope
ficoms
inc
les
add
inc
xlat
les
ljmp
push
adcb
shll
xchg
orb
sub
push
cld
popa
mov
ljmp
lods
lret
cmpb
lods
nop
leave
and
rorb
xchg
add
jecxz
pop
add
aas
or
loop
xor
enter
lock
test
mov
aam
fstl
orb
fwait
jnp
call
or
adc
dec
int
fimull
aas
mov
jecxz
sti
movsb
sbb
add
std
stos
ret
and
mov
pop
nop
pop
mov
and
jae
jmp
cmp
cmc
lods
mov
xchg
cmp
jl
cltd
cs
or
mov
jecxz
jno
sti
mov
cmp
aad
std
and
stos
push
or
xchg
xchg
push
add
mov
test
ljmp
fmul
addl
sub
cmpsb
pop
inc
push
decl
fs
in
mov
fs
scas
push
movsb
sahf
mov
popa
add
repnz
icebp
mov
in
std
test
mov
inc
inc
add
add
sbb
pop
mov
decb
mov
dec
xor
subl
clc
mov
movsl
add
jnp
notb
adc
add
jns
stos
lock
clc
scas
sub
pop
lret
inc
sbb
mov
ficoml
aas
adc
stc
sti
cmp
dec
cs
shrb
subl
and
rolb
xchg
loop
pop
rclb
sub
jmp
in
dec
clc
fcmovnbe
push
sub
pop
cwtl
lcall
clc
dec
pop
std
rcrl
in
add
cmp
add
or
adc
pop
jno
inc
pop
rolb
in
fidivrl
pop
hlt
mov
push
adc
or
popa
mov
test
or
dec
cmp
jbe
nop
lods
jae
xchg
enter
add
inc
mov
loope
pop
push
lea
add
in
push
movsb
roll
push
les
out
mov
pop
std
inc
adc
and
or
pop
sar
inc
aad
adc
test
add
mov
shrb
dec
insl
add
or
popf
or
sub
sub
push
into
sbb
decl
loop
xchg
mov
xchg
sbb
lock
adc
cli
sub
ss
outsb
mov
insb
aam
add
push
pop
fs
and
outsb
cmp
bound
inc
sbb
pop
cltd
adc
out
es
call
adc
fwait
or
fistps
jle
adc
sub
pop
stos
loope
jo
xor
test
pop
xchg
rorb
push
and
sbb
adc
jl
repnz
push
and
sbb
inc
or
pop
pop
std
filds
cmp
mov
xlat
xchg
not
loopne
inc
jg
cmp
nop
in
push
js
ret
stos
popa
aad
pop
cmp
nop
or
xor
ljmp
adc
xor
mov
or
cmp
rcll
and
xchg
subl
cmp
or
testl
imulb
xchg
test
outsl
jp
test
adc
decl
shlb
rol
scas
jp
out
pop
adc
jg
shrb
sbb
aam
mov
subl
sub
daa
cmc
xchg
aaa
mov
stos
das
mov
mov
cmpsb
mov
pop
mov
clc
mov
mov
mov
das
inc
sub
sbb
adc
lock
push
jecxz
daa
stc
test
loopne,pt
dec
push
jbe
xor
or
stos
sbb
push
rol
xor
push
adc
push
xor
jge
sbb
xchg
gs
lcall
sub
lahf
call
fwait
adcb
mov
adc
or
ss
icebp
inc
lock
jmp
xchg
push
xchg
out
mov
mov
xor
fildll
inc
std
jl
inc
or
add
inc
or
mov
fwait
adc
jbe
and
mov
shll
push
rcrb
ja,pt
stc
jmp
mov
cwtl
xchg
and
mov
lods
and
push
jp
fsubs
aaa
lret
roll
push
sub
jp
pop
in
sub
or
lock
bound
cs
cld
ljmp
out
fldcw
sub
fildl
outsl
out
mov
jmp
mov
cld
add
fld
jmp
loope
or
in
add
dec
pop
incl
test
jns
popa
push
hlt
sub
out
pop
adc
les
ljmp
jns
cmpsb
out
or
or
xor
sub
sbb
jo
ss
pop
mov
rolb
pop
xchg
loopne
aas
jbe
test
call
shll
add
xor
sbb
dec
enter
ds
das
add
lods
pushf
inc
add
das
adc
adc
hlt
cmp
push
pop
adc
xchg
jb
xchg
test
xlat
dec
mov
xchg
or
insl
adc
sbb
filds
or
xchg
lcall
push
cmpl
and
mov
inc
scas
fcmovbe
cmpsl
jmp
cli
clc
jle
jg
mov
leave
add
cmpsl
ret
ret
pop
adc
and
cltd
push
mov
jle
aam
hlt
fdivl
jbe
aad
cmp
out
adc
pop
lcall
jp
mov
rcpps
andb
push
inc
mov
mov
and
adc
xchg
rol
pop
push
add
ret
gs
ret
xchg
fisttps
pop
push
enter
loopne
outsb
or
add
loop
dec
jge
rcrl
jle
xchg
pusha
or
addl
mov
mov
mov
mov
pop
mov
insb
pop
push
lcall
cmp
shlb
addl
test
dec
pop
push
mov
into
lcall
decl
ret
cmp
add
ficomps
mov
inc
inc
stc
cmc
out
mov
nop
je
repnz
or
out
mov
mov
mov
sbb
sub
mov
jo
mov
push
mov
aam
mov
mov
je
adc
addb
sub
leave
or
push
ss
push
jo
ret
mov
mov
clc
or
sub
push
loop
aam
sbb
fcomip
fisttpl
or
inc
sbb
pop
ret
add
dec
movsb
outsb
pop
jl
sub
jg
inc
jge
outsb
xchg
roll
xor
fsub
ss
cld
cmp
sbb
mov
fisubs
ret
add
nop
loope
mov
add
xchg
mov
jnp
ss
lea
mov
mov
cmp
or
inc
inc
cmpsl
lock
mov
add
arpl
cwtl
lods
dec
pop
sbb
lods
ret
add
push
sbb
lock
lods
pop
cmp
aaa
lcall
pushf
shr
pusha
fidivs
push
ret
push
fnsave
jecxz
pusha
pop
ret
xor
je
or
mov
cmp
sti
call
std
inc
push
inc
sbb
addr16
data16
mov
movsb
push
mov
rcrb
pop
sbb
cwtl
bound
in
adc
das
sbb
stos
rol
lret
jo
xchg
cmp
inc
inc
outsl
popl
lcall
sbb
call
adcl
nop
pop
sub
add
push
jns
les
call
stc
jae
push
dec
add
fldt
mov
pushf
es
and
pmullw
pop
cmp
mov
fbstp
cmp
call
jo
xor
mov
mov
sub
aad
gs
and
mov
adc
push
cld
mov
pop
loope
bound
push
fwait
cld
push
jl
xor
sbb
sbb
adc
mov
xchg
or
mov
mov
fsubrs
mov
fisttpl
sub
add
int
inc
mov
or
mov
lods
mov
or
cmpsb
xor
jp
pop
cmp
je
and
out
test
aad
and
test
inc
jbe
leave
inc
ljmp
ds
inc
inc
fwait
lock
cmp
pop
or
mov
add
das
call
pop
enter
nop
test
and
imull
cwtl
push
push
lods
and
sbb
mov
lds
int3
mov
or
mov
xor
loop
scas
pusha
and
dec
adcl
dec
and
adc
mov
pushf
loop
cmc
pop
fnstenv
test
je
andb
adc
push
fistl
jno
les
lret
popf
sub
add
xchg
mov
dec
test
dec
adc
jecxz
mov
or
and
scas
cmpsl
addb
xchg
cmp
push
adc
mov
jne
hlt
dec
insl
or
dec
mov
sub
add
jmp
pop
xor
fwait
scas
inc
aam
mov
and
in
out
xor
add
les
fs
out
mov
mov
sub
loope
leave
lds
inc
ljmp
or
gs
or
rorl
push
sbb
add
fsubrs
inc
sub
aam
faddl
ljmp
mov
sbbb
call
in
fisubrs
mov
mov
popa
les
push
nop
enter
adcb
sbb
pop
mov
sbb
xchg
inc
cmpsb
fstl
jecxz
jp
shl
lcall
fidivrs
push
and
pushf
rolb
dec
xchg
sbb
lods
dec
mov
imul
inc
pusha
scas
sti
xchg
inc
js
or
mov
lock
add
mov
lods
push
aas
mov
sub
scas
je
xor
sbb
dec
aas
rorb
mov
cli
subb
add
mov
ja
cmp
jg
dec
sub
hlt
add
lea
mov
or
out
add
cmp
push
das
popl
push
push
inc
add
push
fildll
inc
lret
mull
cmpsl
lahf
sbb
arpl
xlat
lret
mov
ljmp
cli
xor
add
iret
lret
sti
mov
fmul
mov
jp
ss
mov
in
ja
jb
jle
loop
xor
insl
xor
sahf
sti
push
mov
insl
adc
mov
sub
sub
das
mov
jns
repnz
xchg
gs
or
shrb
sub
ljmp
test
jmp
test
mov
test
adc
push
bound
decl
stc
jle
xor
mov
mov
out
sub
add
inc
ja
fists
push
push
adc
dec
adc
fstps
mov
mov
push
or
push
mov
inc
jns
jle
adc
xchg
pop
nop
lret
mov
out
xor
or
test
call
xchg
push
adc
rclb
test
mov
sbb
dec
pop
imul
call
aam
mov
jle
hlt
mov
test
sbb
ljmp
xor
push
and
push
or
jnp
rcl
dec
dec
push
ret
popf
sbb
jle
stos
inc
sarb
adc
push
jl
ret
pop
out
push
fs
mov
dec
dec
cmpsl
outsb
push
es
push
popa
roll
es
push
add
fcos
ja
sub
mov
mov
push
push
inc
clc
jmp
mov
and
mov
cmp
rcl
mov
and
rclb
sbb
mov
leave
out
xchg
push
add
into
xor
jnp
lcall
jmp
adc
es
jg
js
aaa
adc
sbb
adc
addr16
mov
jl
jbe
dec
sbb
xor
stos
push
scas
add
rep
in
mov
or
scas
xchg
aad
mov
je
mov
fisttpl
and
sbb
clc
cwtl
pop
aas
push
inc
fs
add
test
lcall
out
jg
outsb
jecxz
insl
lcall
jno
adc
mov
inc
insb
jmp
scas
div
ficoms
inc
fs
fcmovne
push
xor
push
pop
test
xor
aas
clc
cli
push
pop
sub
cmpsb
jge
push
out
adcb
leave
jb
and
push
out
mov
xlat
mov
and
in
jne
in
inc
test
popa
fbld
xor
sbb
or
nop
inc
cld
xchg
sub
in
rclb
sbb
aas
addl
movsb
and
inc
mov
mov
jno
push
das
sarb
sahf
push
or
push
icebp
outsl
mov
inc
mov
sti
dec
add
mov
inc
lcall
cmp
je
or
icebp
enter
inc
loopne
mov
ss
pop
je
sub
ret
arpl
out
pop
bnd
sti
int3
call
sbb
sub
lods
dec
adc
inc
or
into
jae
mov
mov
lret
cli
cltd
repnz
insb
outsl
adc
sub
jle
sbb
add
inc
scas
and
adc
xchg
pop
inc
or
pop
cli
xchg
movl
or
shr
notb
sub
jae
xchg
pop
jo
sub
scas
inc
pop
jg
pop
and
int
sbb
pop
cli
iret
cmpsl
lret
mov
pop
xchg
mov
sarb
shrb
mov
loope
clc
out
push
pop
aaa
sarb
in
jg
add
mov
js
jnp
out
lds
call
flds
fcmovb
mov
jl
loope
pop
shll
adc
pop
cltd
inc
sbb
insb
push
jb
or
xor
jl
or
sub
call
lock
gs
cmp
hlt
icebp
inc
mov
test
jecxz
jne
sbb
loop
dec
rcll
push
loopne
test
adc
je
decl
pop
xchg
mov
sbb
push
sahf
mov
add
addb
pop
push
sub
ja
js
ja
push
adc
pushf
gs
aaa
jle
mul
mov
testl
jle
jecxz
jg
enterw
mov
lret
pop
lock
push
notb
incl
cmpsb
out
cs
and
adc
sbb
push
xchg
test
jge
nop
or
mov
fstpl
adc
fwait
imul
sbb
jb
mov
cmp
pop
js
xor
movsl
int
rorl
cmp
pop
pop
pop
mov
pushf
pop
movsl
mov
ljmp
sarl
addb
add
jo
push
popa
call
jecxz
dec
icebp
hlt
push
or
js
xor
sub
jp
sbb
add
adc
scas
stos
fcoms
sub
rclb
xor
dec
inc
inc
pusha
add
xlat
sub
xchg
dec
lds
inc
test
inc
stos
mov
shrb
jl
xchg
xchg
xchg
push
sar
mov
sbb
mov
pop
add
xor
in
jo
les
jmp
fisubs
out
loope
mov
lcall
sub
push
fists
inc
adc
push
cmp
shrb
lcall
leave
test
lahf
and
shl
hlt
mov
inc
int3
fmuls
loope
inc
ja
lods
arpl
aaa
dec
add
out
adc
adc
inc
incl
loop
add
js
cmp
mov
dec
mov
adc
xchg
in
pop
push
fdivrp
fcoml
xor
scas
jle
dec
jnp
xor
push
cmp
and
sbb
fsubr
mov
ret
xchg
mov
bound
pop
out
inc
ds
int
insl
testb
lret
inc
fmuls
stos
scas
xor
pop
adc
loopne
sub
add
add
aas
cmp
sbb
mov
insl
out
call
outsb
sub
sub
lcall
mov
push
jmp
mov
out
inc
mov
hlt
xor
bound
push
cmpb
push
test
and
push
shrb
sub
je
pusha
adc
push
addb
jns,pn
inc
xor
popa
xor
scas
adc
mov
sub
sbb
or
lock
or
dec
lret
rcrb
add
movl
jp
pusha
int3
add
inc
shrb
adc
add
lods
idivb
jo
pop
leave
insb
lods
jmp
ljmp
sub
imul
mov
sti
call
into
loope
stc
loopne
mov
lock
dec
or
pop
xchg
fstpl
test
xchg
and
roll
repnz
movsl
icebp
loope
loop
pop
or
frstor
or
fcmovu
test
fists
mov
popa
jne
clc
and
subb
adc
adc
sub
sbb
or
ja
cmc
jo
add
jl
subb
jmp
gs
xor
inc
fsubrl
ss
jle
push
inc
xorl
das
sarb
inc
adc
adc
adc
pop
xchg
add
pop
fcoms
in
adc
sub
icebp
sbb
jg
mov
insb
or
xor
pop
or
push
enter
aas
or
sbb
jecxz
pop
add
jmp
js
cmp
cmc
or
out
sbb
into
pushf
mov
or
sub
aas
dec
or
aam
movsb
in
cmp
pusha
dec
adc
call
sbb
hlt
xor
repz
pop
bound
mov
hlt
repz
scas
test
fwait
dec
jg
jo
mov
inc
rcrl
pop
lahf
data16
cmpsb
lock
adc
loopne
repz
jle
add
adc
cwtl
cmp
cs
jecxz
lds
adc
jo
test
cli
dec
xchg
xchg
leave
fmul
push
push
dec
test
dec
ljmp
push
or
orb
ds
fs
stos
cli
push
fwait
cmp
cld
cltd
call
inc
push
add
pop
jecxz
add
xchg
call
lahf
dec
pop
aad
adc
cmp
cmpsb
loop
jp
and
repz
sub
mov
or
or
xor
xor
or
jns
push
push
mov
inc
pop
dec
ss
jl
lds
in
mov
fildll
dec
cli
ljmp
ljmp
cs
push
and
sbb
decl
jge
add
inc
clc
xchg
dec
pop
rcrb
and
pushf
fs
dec
movsb
adc
cmpl
aaa
std
sbb
xor
xchg
lret
data16
aam
xor
dec
lcall
jb,pt
push
nop
pop
inc
jge
ds
pushf
adc
pop
xor
fistl
mov
js
add
xchg
mov
call
xor
jle
jecxz
adc
shl
dec
dec
cwtl
jl
xor
jne
mov
imull
cmp
inc
cld
add
imul
add
sbb
call
dec
lea
lahf
mov
cmp
fildll
dec
test
and
jmp
xor
gs
test
aaa
jle
fwait
sub
cmc
mov
sub
test
inc
cltd
test
insb
mov
mov
xchg
into
add
je
xchg
push
stos
push
insl
cmp
shrl
fmull
sub
or
adc
mov
sahf
add
xor
fimuls
inc
push
dec
call
xor
inc
mov
pinsrw
cmp
scas
mulb
je
ljmp
jne
sub
dec
cwtd
aam
test
out
mov
mov
test
cli
inc
dec
xlat
pop
mov
push
lods
jne
pop
out
nop
loop
add
xor
pop
jg
cli
out
call
inc
loopne
adc
jbe
pushl
subb
xor
mov
pusha
fisubs
addb
dec
loopne
inc
bound
xchg
mov
lock
mov
cmp
outsb
adc
mov
rorb
mov
pop
rcrl
push
push
and
fmuls
and
adc
frstor
shll
push
xor
imul
mov
mov
pop
push
cmp
es
enter
jl
mov
mov
xor
shll
mov
or
push
mov
fbld
les
mov
jp
orl
ljmp
insl
mov
pusha
inc
xchg
dec
or
mov
mov
idivl
mov
out
pop
daa
loopnew
or
xor
orl
das
sub
push
stos
rcr
or
scas
loop
mov
test
pop
cmp
dec
inc
loopne
sbb
xor
mov
push
mov
in
lock
push
sbb
xchg
cwtl
les
roll
in
fstp
mov
xor
mov
mov
mov
lds
mov
cmp
imul
test
aad
or
enter
cli
jo
lock
add
cmp
or
inc
imul
sub
xor
rorl
sbb
push
push
imul
lret
pop
mov
in
icebp
adc
cltd
xor
pop
clc
xor
mov
jmp
shlb
pop
bound
xchg
mov
mov
add
test
pop
mov
in
mov
clc
fidivs
ret
sahf
or
sbb
in
data16
pop
jl
adc
int
pop
dec
aam
lahf
insb
jp
inc
xchg
sar
xor
pop
nop
inc
cli
loop
add
mov
add
xchg
test
cmp
add
cmp
push
dec
and
fstl
dec
dec
shlb
add
mov
pusha
cmpl
test
icebp
jo
scas
loopne
popf
pop
add
stos
adc
cmp
sbb
test
loopne
loopne
loopne
xchg
add
cmpsb
das
js
add
incb
sbb
ljmp
inc
stc
cmp
pop
fwait
movsl
ja
orl
inc
or
arpl
jecxz
adc
outsl
rcl
icebp
or
inc
mov
mov
or
lods
pushf
jge
adc
mov
or
pop
or
outsb
mov
test
push
in
or
xchg
push
pop
inc
jl
scas
xor
pop
pop
call
and
repz
shlb
inc
and
xchg
adcl
adc
sub
dec
push
test
cli
jmp
mov
add
in
outsl
sub
testb
pop
jge
into
rclb
mov
outsb
shlb
hlt
xor
inc
inc
inc
or
mov
incl
cmp
mov
and
arpl
sbb
fistpll
xor
jg
imul
jo
inc
sbbl
pusha
adc
sbb
lock
stos
xor
into
xor
scas
ds
fistpll
or
stc
adc
cld
cmp
inc
xor
ss
loopne
dec
fiaddl
mov
in
or
rcr
pop
sbb
sbb
push
les
inc
push
sub
les
and
decl
ret
out
dec
in
mov
mov
out
or
sub
je
jne,pt
loopne
in
adc
xchg
mov
insb
cld
daa
pusha
jo
jbe
add
bound
pop
push
fdivrs
hlt
mov
cld
aas
inc
add
aam
int3
nop
push
push
mov
sub
cmp
adc
jle
xlat
and
addr16
adc
cmpsl
sub
xor
loopne
lea
call
fdiv
jg
mov
mov
jno
ret
jp
push
arpl
scas
adc
pop
daa
movsl
clc
adc
sbb
lock
in
ret
mov
inc
jecxz
mov
mov
mov
popa
xor
and
in
pop
pop
call
sbb
mov
ret
dec
dec
dec
xor
push
rcr
sti
pusha
cmc
loopne
faddl
or
aam
pop
insb
cld
cmp
xchg
adc
adc
dec
and
jp
mov
sbb
rorb
sbb
scas
clc
add
test
push
jg
add
add
sbb
hlt
cli
stos
jecxz
pop
jb
ljmp
out
mov
cld
push
adc
jmp
cld
mov
cmp
add
xchg
add
sar
inc
adc
adc
fsubrs
imul
adc
out
idivl
fs
mov
out
mov
or
xor
jp
sub
stos
jb
mov
sub
inc
cs
cmp
add
jg
shr
hlt
sarb
ds
stc
add
movl
pushf
cmp
mov
fcoms
and
cmp
cwtl
sub
leave
and
push
xor
or
mov
jl
mov
inc
aas
es
sbb
scas
test
mov
sub
push
pop
pusha
mov
js
aam
dec
fcomps
mov
lcall
xor
rorl
pusha
or
push
pop
cli
pusha
loop
test
mov
mov
lahf
aad
push
pop
mov
xchg
xchg
xorb
dec
dec
cld
sahf
add
lods
push
cmpsb
xor
das
imulb
sub
fcoml
push
adc
adc
cmpl
xchg
inc
mov
cmc
add
jbe
jg
rcl
mov
mov
jnp
pop
inc
fcomi
ljmp
dec
aam
mov
movsb
mov
jle
in
rol
inc
jbe
jbe
mov
mov
adc
lret
jae
ss
xchg
lcall
mov
subl
sbb
sbb
aad
insl
mov
jmp
enter
hlt
sbb
jmp
mov
mov
xor
add
scas
popf
mov
jge
mov
fildl
test
shll
out
rclb
add
jp
adc
pusha
adcl
push
fimull
stos
push
inc
mov
int
xchg
jo
and
fwait
cmc
fcompl
mov
ds
pop
add
or
sbb
into
dec
and
push
push
xchg
mov
test
dec
repz
fsubl
es
sub
repz
mov
push
ret
mov
add
es
decb
inc
les
xchg
fcomps
mov
fs
xchg
inc
mov
stc
adc
jge
push
sub
test
cld
imul
pop
pushf
cmp
and
add
test
sbb
xor
movsb
dec
xchg
add
es
aam
sbb
outsb
movsb
cs
bound
jnp
leave
push
and
push
ds
or
fwait
add
sbb
incb
push
ds
lret
rcrb
cmpsb
jg
lods
sti
pusha
xchg
pop
leave
xor
mov
test
xabort
mov
es
dec
mov
shlb
andb
fcmovbe
out
sub
and
push
mov
and
or
stc
lock
xchg
push
jns
mov
cmp
xorb
xchg
mov
out
mov
pop
sub
sub
fadds
jne
jecxz
outsb
xchg
dec
mov
repnz
subl
pop
pop
adc
mov
push
cld
test
and
popf
sahf
cmp
push
repnz
xor
pop
add
dec
mov
push
push
ljmp
or
dec
test
pop
test
jg
xchg
and
jns
jbe
adc
aas
in
pop
or
ja
ljmp
sub
mov
out
ret
or
andb
imul
into
jno
jnp
jl
ret
subl
in
out
jle
add
jle
add
or
mov
popa
xchg
pushf
lods
sti
sahf
jne
sub
cmpsb
lret
cli
loopne
mov
sahf
enter
das
mov
mov
jne,pt
inc
repz
sbb
add
jl
and
pop
call
stos
pusha
scas
fcmovu
mov
ss
add
sbb
adc
frstor
sub
mov
add
imul
filds
mov
sbbl
out
incl
jl
xor
add
inc
loope
cmp
mov
dec
hlt
push
test
jne
cmpsb
addr16
test
mov
add
pop
lret
pop
cld
jno
jbe
sub
adc
aas
push
jno
mov
pop
push
fdivrl
cmpsb
dec
inc
nop
subb
aam
fwait
mov
ret
fdivp
stos
sub
sbbl
movsl
popf
add
fcomps
enter
xlat
xor
incl
rorl
adc
mov
jle
loopne
push
sbb
xor
in
movsl
ds
cli
xchg
xor
xchg
inc
adc
fidivl
in
cwtl
jae
push
mov
lahf
jl
jnp
outsb
adc
inc
adc
cld
xchg
dec
mov
sub
sbb
hlt
lds
add
mov
add
cs
push
mov
pop
shlb
add
mov
fsubrl
add
inc
inc
push
mov
cmp
jo
xchg
orb
add
ds
pop
ss
mov
movsl
pop
cs
andb
pop
cvtps2pd
sbb
in
xor
mov
push
adc
ss
sbb
mov
fnstsw
lods
adc
jle
lods
dec
jp
aam
mov
scas
pop
shrl
leave
sub
test
int3
and
call
push
sbb
incb
xchg
or
adc
xchg
cmp
ljmp
mov
subb
fsubrl
outsl
cmpb
aas
ret
test
mov
inc
push
popa
ds
xor
add
call
das
cmp
es
sbb
je
lods
pop
jl
test
jg
push
cwtl
es
xchg
loopne
sub
aas
test
popf
inc
dec
in
mov
adc
pushf
push
push
scas
mov
loopne
cmpb
ljmp
into
inc
add
pusha
jle
bound
jg
jno
adcb
adc
ljmp
repz
jae
incl
add
or
or
sbb
cmpsb
rcrb
dec
pop
xchg
leave
add
bnd
decl
dec
adc
int
or
push
push
fs
icebp
call
push
xadd
insb
push
lds
lahf
mov
or
inc
enter
sbb
or
adc
jg
outsl
and
sub
adc
inc
dec
and
mov
push
fidivl
pusha
dec
pop
lea
ds
xchg
rcrl
adc
inc
and
xor
inc
jmp
lock
mov
mov
pop
je
adc
pop
pusha
loope
xor
loopne
mov
inc
dec
sbb
sub
jno
push
out
adc
adc
add
dec
mov
ljmp
cmp
jmp
test
and
dec
pop
adc
fwait
inc
jmp
loop
sub
hlt
push
loopne
inc
jne
pop
jecxz
xor
push
shl
pop
imul
stc
mov
insl
xchg
ljmp
pop
xchg
inc
hlt
mov
dec
xchg
mov
mov
rcrl
call
inc
lret
mov
mov
scas
jmp
cld
pop
inc
ljmp
mov
rorl
pop
dec
cwtl
push
adc
dec
xchg
xor
loopne
bound
push
fcmove
mov
stc
mov
adc
or
dec
add
aas
xor
js
push
enter
or
incl
enter
add
leave
in
xlat
add
aam
fisttps
adc
adc
mov
call
inc
movsb
add
xor
sbb
dec
jg
loopne
and
cmpsb
sbb
aam
or
icebp
mov
dec
xor
sub
or
and
mov
repnz
movsb
stos
or
outsl
or
dec
ja
push
xchg
adc
adc
adc
rcr
outsb
sti
and
data16
adc
nop
inc
adc
call
ret
mov
xlat
or
xor
shlb
std
mov
mov
and
fldl
ret
cltd
insb
jbe
adcb
aam
push
es
lahf
cmpsb
cli
inc
mov
das
loope
and
test
pusha
mov
jge
ljmp
mov
jp
cmc
rcll
cmc
xchg
cs
rolb
mov
push
mov
fs
lret
adc
hlt
aad
push
mov
xor
add
movsb
cmp
add
fiadds
push
fwait
cs
xchg
adc
pop
insb
pop
les
popl
cli
pop
sub
dec
aam
mov
cmpb
dec
cwtl
pop
pop
filds
lock
or
mov
sub
rcrl
test
scas
stc
dec
shlb
mov
cmp
test
sub
dec
jbe
stc
cli
xchg
test
int3
ds
inc
mov
fdivp
mov
push
andl
adc
scas
out
call
shrl
in
and
scas
mov
and
jno
dec
lcall
mov
adc
in
dec
shll
xchg
push
add
scas
rclb
dec
push
out
test
push
lods
add
into
mov
aaa
loope
pop
xor
sbb
sbb
sar
hlt
lcall
and
andb
nop
sahf
pop
jge
aaa
cld
inc
pop
call
addr16
ss
loop
dec
cld
push
dec
cmpsb
loope
add
lock
mov
push
outsb
inc
cmp
into
add
mov
jp
movsl
add
mov
add
pop
mov
inc
mov
dec
fdivs
sbb
or
insl
and
sbb
sar
sub
fistps
jp,pt
mov
mov
into
pop
mov
dec
insb
test
cltd
push
xchg
xchg
bound
mov
add
hlt
nop
push
adc
mov
xor
adc
mov
add
int3
pop
add
inc
clc
mov
pop
cmpsl
fsubr
inc
and
cwtl
movsl
jmp
enter
or
aaa
stc
dec
addr16
mov
xor
jl
xor
cs
inc
popf
in
es
mov
sub
jne
jo
push
jb
xchg
gs
add
inc
shlb
cmpsl
fisubrs
insb
lods
fisubs
test
js
inc
mov
clc
aaa
jp
mov
pmulhw
jl
rcr
lods
mov
pop
out
push
xchg
mov
or
aas
pop
mov
insl
subb
mov
mov
pop
cltd
scas
xlat
jo
subl
mov
dec
loope
les
cmp
dec
push
lea
mov
mov
loopne
and
push
enter
cmp
shlb
ss
inc
dec
dec
sub
aaa
adc
js
aas
fsubrl
fisttps
ja
inc
pop
fisubrs
mov
xchg
idivb
data16
add
mov
lods
enter
jnp
cmp
jle
test
add
repnz
je
in
int
mov
fstl
cmp
fadd
add
rolb
dec
icebp
shlb
movl
mov
repz
add
xor
or
pop
and
and
les
xlat
adc
mov
iret
hlt
and
popf
clc
push
dec
dec
lods
in
mov
mov
mov
jb
loopne
mov
mov
lods
shrb
scas
mov
sub
aad
jecxz
test
int3
int
mov
movswl
xor
test
dec
movsb
das
outsb
and
and
or
or
ss
xchg
inc
ret
xchg
push
repnz
lret
shrl
loop
jle
sub
test
loopne
and
mov
insb
jno
loop
mov
test
sub
pop
pop
dec
stos
jmp
add
cmpsb
dec
push
fistpl
fs
js
scas
jo
in
sbb
repz
sub
push
mov
fadds
mov
mov
mov
fcompl
or
cwtl
faddl
call
jb
pop
add
sub
or
push
push
lock
rcl
lret
inc
mov
sub
push
pop
mov
xchg
ficompl
into
por
dec
pop
adc
shlb
sbbb
mov
pushf
xor
adc
or
shlb
xchg
ret
enter
ds
and
mov
cmp
ret
dec
and
les
mov
xchg
push
ror
cmp
int
xor
fmuls
adc
xor
rcll
adc
xchg
out
push
mov
ss
cmpsl
clc
xchg
add
inc
xchg
out
rcrl
imulb
mov
mov
jb
dec
jbe
andb
das
push
mov
mov
mov
iret
fwait
mov
add
push
cwtl
das
or
pusha
cpuid
int
in
test
cmp
pop
js
mov
in
sub
xchg
mov
scas
xchg
or
cmp
add
fsubl
out
push
mov
dec
push
sub
push
push
inc
rcrb
add
jg
fildll
sbb
imul
push
out
mov
inc
xchg
add
mov
or
pop
push
dec
sub
mov
mov
sub
mov
sub
shrl
popf
cmp
lods
sbb
pop
aam
pop
out
mov
sti
sti
inc
hlt
push
sarl
stc
jge
enter
xor
push
pop
daa
icebp
movsl
icebp
incb
push
sub
push
insl
lods
in
xchg
jno
clc
lahf
clc
addb
out
sub
push
clc
mov
cmp
fs
outsb
in
daa
xor
pmaxub
enter
cmpl
imul
insl
roll
mov
xor
subb
mov
adc
jmp
loopne
cs
cli
test
test
sbb
lcall
cmp
sbb
cs
sub
add
les
xchg
pusha
js
enter
sar
addl
adc
xchg
lods
add
andb
jb
sbb
lods
or
jge
cli
andb
out
pop
mov
ret
scas
in
pusha
call
daa
lret
loopne
cli
xor
mov
shr
cmp
cld
pusha
mov
outsb
push
leave
add
test
sbb
add
nop
adc
ljmp
push
fbstp
je
xchg
fmuls
jl
xor
inc
dec
sub
mov
mov
movsb
jno
rol
xor
and
stc
es
dec
fs
pop
add
dec
mov
subb
mov
fwait
cmpsb
out
mov
dec
add
loopne
xor
mov
and
add
cmpsl
xor
popa
mov
sti
mov
sub
dec
or
pop
cwtl
cli
xorb
aam
and
dec
adc
jg
add
adc
mov
inc
out
pop
pop
pusha
fsubr
adc
dec
fimull
mov
ds
sahf
dec
lcall
mov
add
pop
mulb
pop
gs
popa
jb
and
push
adc
insl
sti
ljmp
mov
mov
aas
pop
ret
adc
popa
mov
test
mov
xchg
repnz
loop
stos
push
or
xor
rorb
sub
sarl
sbb
sbb
fs
xchg
pop
aad
fistpll
pop
push
mov
adc
imul
sub
mov
cli
lods
adcl
cmpsl
pop
hlt
mov
daa
icebp
incl
xchg
and
mov
adc
fdivrs
mov
imul
dec
enter
call
add
xchg
std
or
test
mov
out
ret
push
fdivrs
and
cmp
sbb
dec
ret
push
roll
cmpb
add
pushf
fdivrl
dec
imul
testb
psllw
dec
and
push
pop
in
stc
cmp
stos
popa
mov
faddl
fs
test
andb
les
mov
dec
mov
cli
mov
xchg
or
add
loop
jmp
and
cmp
pop
lods
push
testb
add
xor
mov
mov
xchg
loop
sbb
pusha
faddl
rorb
mov
arpl
scas
fucom
adc
cmp
lret
ljmp
fisubrl
out
inc
cmc
es
lret
test
mov
dec
shlb
add
loopne
orb
clc
dec
aaa
sbb
inc
jmp
in
test
xchg
cmp
scas
mov
xor
dec
fadd
movsl
xchg
pusha
cli
sbb
les
mov
popa
jo
int
cmp
mov
ror
pop
loope
push
and
push
insb
mov
inc
mov
jle
popf
inc
cmp
inc
adc
call
push
cmp
les
notl
or
push
cmp
int3
inc
shufps
fisttpll
jecxz
call
ss
push
sahf
adc
and
pop
and
sub
add
dec
mov
mov
lock
sub
pop
jo
mov
push
cmc
jg
push
mov
clc
and
cmp
xchg
dec
popf
mov
mov
mov
dec
inc
popf
sbb
sbb
fists
jmp
mov
ss
test
mov
add
out
adc
cwtl
clc
loop
inc
push
add
jg
out
push
mov
adc
and
inc
mov
mov
cs
mov
mov
sarl
inc
sti
lods
inc
mov
lcall
filds
sub
test
loope
xchg
jg
clc
mov
shlb
je
mov
jbe
jne
mov
inc
push
enter
and
nop
mov
xchg
dec
js
test
movsl
pop
xlat
hlt
fistpll
sbb
testb
sbb
push
sbb
push
mov
jo
and
inc
and
pop
idivb
out
test
sbb
jne
pop
xchg
sub
xchg
idivl
lcall
mov
mov
sbb
enter
std
std
dec
test
dec
add
push
fisubrl
hlt
or
pop
pop
nop
sub
inc
cmp
es
adc
mov
sbbl
inc
inc
js
inc
xchg
orl
rorb
push
inc
pop
icebp
inc
sub
fs
rol
les
lahf
addb
jp
and
push
clc
jo
je
jle
popf
out
out
jg
rcr
pop
icebp
xchg
inc
sub
mov
ljmp
and
push
orl
mov
cmp
in
and
and
mov
iret
pusha
push
mov
pusha
jl
or
xor
incl
aas
mov
enter
pop
mov
aad
push
es
adc
dec
les
inc
call
mov
loop
pop
outsb
or
sbb
outsb
pop
add
sub
test
nop
mov
nop
shl
ja
cli
scas
push
das
jb
aaa
jo
cmp
jbe
popf
test
cld
mov
stos
push
fnstsw
imul
jne
sub
mov
outsl
gs
lock
sub
mov
mov
dec
movsb
lahf
dec
shll
stos
and
aaa
les
lret
sub
add
lock
mov
pop
lock
add
push
push
mov
push
pop
adc
shrb
call
daa
jmp
cmpsb
test
ret
fisttpl
icebp
in
add
hlt
hlt
movsl
inc
jg
call
xchg
in
ss
or
ljmp
sbb
les
cld
lock
rorl
mov
xchg
dec
std
jo
pop
ret
add
je
in
pop
es
cmp
dec
cmpsb
shlb
sbb
lock
or
push
fcoms
lahf
mov
sub
xchg
loopne
mov
fnstcw
cld
xchg
shrl
repnz
jmpw
xor
push
pushf
mov
fs
gs
iret
popa
scas
xchg
lock
jl
rol
or
inc
xchg
inc
inc
push
and
aaa
mov
and
outsl
add
add
shll
sub
lock
sub
dec
ljmp
ret
fnstsw
xor
inc
sbb
test
pop
imul
push
dec
push
idiv
fucom
int3
js
cmc
popf
mov
or
xlat
cmpsl
fstps
push
mov
xchg
inc
dec
sbb
xchg
cwtl
in
jge
or
pop
xchg
cmc
xchg
movlps
jns
aaa
add
dec
add
mov
push
or
loopne
or
hlt
dec
xor
adc
leave
mov
adc
push
ret
in
sbb
xchg
add
mov
mov
cld
mov
out
imul
push
fisttpl
jecxz
inc
leave
sbb
shrb
cmp
and
sbb
testb
dec
hlt
xchg
mov
out
test
stos
adc
in
nop
and
mov
mov
dec
adc
rclb
dec
add
push
adc
ja
xchg
or
lds
ja
scas
adc
push
mov
rorl
mov
es
int
push
mov
xchg
adc
sub
xor
jl
aam
test
push
or
mov
js
dec
add
clc
cmp
adc
std
addb
mov
ss
scas
xlat
add
pop
add
jnp
std
add
jp
jg
decb
sarb
and
in
insb
std
cwtl
dec
addl
cli
push
or
aas
mov
addb
subb
xlat
adc
cld
adc
lret
out
nop
cli
jbe
dec
push
sbbb
or
mov
leave
outsl
dec
pop
fnstsw
insb
xor
dec
call
movsl
push
adc
in
add
dec
lock
xchg
push
mov
adc
sbb
inc
mov
cltd
ret
mov
jg
cpuid
jecxz
mov
cmp
fs
test
in
pop
sbb
lret
sbb
imul
addb
mov
lcall
inc
sbb
cmp
sub
into
enter
sbbb
mov
and
bound
cmp
inc
cmpsb
enter
clc
cs
mov
pusha
out
xor
push
sahf
mov
xchg
pop
and
xchg
add
mov
inc
shrl
mov
mov
fsubrs
jo
or
jle
xchg
inc
mov
xor
fisubrl
loopne
jmp
roll
xchg
sub
jne
jecxz
sub
insb
and
arpl
mov
and
mov
loope
cs
dec
adc
push
push
shlb
pop
cli
xchg
xor
adc
push
inc
out
jle
jb
aas
inc
push
jecxz
sub
lret
outsb
loop
xchg
bound
ret
push
push
push
cmp
movsb
dec
arpl
ror
orl
jno
in
insb
pusha
popf
into
xchg
insb
adc
add
adc
ficomps
pop
pop
and
ljmp
pop
inc
sti
sub
clc
inc
dec
loope
mov
inc
std
xor
repnz
imul
and
loop
sub
fmul
aad
dec
andb
jne
out
dec
jo
or
push
rorb
test
or
pop
dec
ret
and
inc
pop
push
or
inc
mov
out
xor
push
jo
stos
inc
std
and
add
pop
test
sbb
pop
sub
cmp
or
out
mov
bnd
push
sarl
add
mov
push
ss
icebp
pushf
aad
cwtl
cmp
in
jle
jg
sbb
mov
ss
or
push
in
inc
fcos
add
and
dec
push
clc
jo
mov
xor
inc
lods
sbb
andb
mov
sub
fstpl
add
and
push
add
fiadds
je
mov
xchg
pushf
test
loope
pop
adc
or
push
in
and
fs
add
add
xchg
inc
inc
pop
addr16
jp
dec
or
jae
aam
scas
ds
mov
sahf
xor
mov
imul
sti
shll
mov
addb
and
add
adc
test
sbb
loop
mov
inc
repnz
aam
je,pt
dec
sbb
add
test
loop
push
fcmovbe
pop
repz
push
addr16
test
sbb
or
add
fimuls
sub
mov
outsb
sbb
add
daa
test
cmp
adc
dec
jl
cmp
orb
lock
popa
in
inc
jno
cmp
sbb
scas
stos
pop
fiaddl
xchg
pop
lock
cmp
mov
das
sub
repnz
test
sub
in
xchg
imul
inc
popf
popa
cs
and
inc
dec
jno
mov
in
lods
clc
stos
jne
jmp
mov
jo
je
xchg
dec
sbb
movb
test
pusha
shlb
jmp
loopne
push
jl
nop
add
mov
nop
sbb
scas
test
inc
call
enter
mov
test
outsl
inc
cmp
push
push
in
inc
jne
dec
lret
add
inc
push
gs
pop
push
iret
sti
push
cmp
lods
es
test
or
insb
faddl
mov
cmpsb
in
mov
cmp
pop
cmp
dec
aad
jl
inc
xchg
mov
lock
and
inc
mov
imulb
mov
xor
ficomps
jg
call
lret
mov
push
inc
pop
xor
pop
repz
and
clc
jbe
and
orl
jle
mov
push
pop
pop
orb
in
insb
mov
sbb
filds
loop
test
push
and
outsl
add
jmp
dec
sub
adc
pop
sub
nop
sbb
mov
mov
mov
sbb
sub
cltd
bound
jg
jb
outsb
inc
adcb
pop
leave
pop
sarl
mov
jb
jb
or
mov
jno
adc
mov
lahf
and
stos
and
clc
jl
fmuls
mov
divl
push
add
jmp
mov
sub
inc
int
lahf
rolb
mov
push
pop
cmp
fbld
inc
cmp
and
sub
cmp
sub
mov
sbb
aad
cltd
lods
popa
int3
or
xchg
push
es
inc
insl
cmp
push
lock
adc
movsl
xor
dec
aam
jo
sub
in
xchg
subb
pop
test
sbbb
mov
das
dec
cltd
dec
fbstp
insb
xlat
dec
pop
repnz
aam
xchg
lcall
andl
pop
call
pop
ss
out
xchg
mov
push
in
and
das
test
stos
rcl
stos
or
jae
lods
repz
and
je
xchg
nop
js
push
call
jle
test
push
mov
orb
rclb
mov
push
gs
mov
add
out
add
insb
adc
mov
jecxz
jno
sub
xchg
sarl
pop
adc
fsubr
out
nop
pop
sbb
inc
adc
inc
mov
lcall
rolb
addb
mov
xor
push
xchg
lea
es
jp
call
bound
sbbl
jecxz
push
ret
mov
pop
mov
fmul
jb
out
out
je
xorb
incl
mov
call
addl
mov
adc
pop
push
test
call
mov
mov
xchg
sbb
push
shrb
sbbl
mov
loop
jmp
xlat
xchg
loope
cmp
sahf
stos
xor
sub
or
pop
mov
mov
nop
in
fwait
xor
or
jl
lods
sbb
add
add
movsb
pop
pop
xor
movsl
xchg
in
inc
or
out
fidivl
and
mov
insb
sbb
mov
fildll
test
inc
insb
xchg
inc
push
lcall
les
movsb
push
insl
inc
out
mov
mov
add
pop
adc
mov
add
xchg
mov
cmp
pop
sbb
push
sbb
sbbl
mov
cmp
call
les
xlat
sbbb
cli
sahf
sbb
lods
mov
push
xchg
xchg
cmc
es
dec
push
sbb
mov
shrl
testb
call
lcall
add
xchg
and
enter
and
adc
inc
add
or
inc
mov
repz
inc
sbb
mov
aaa
xor
jb
add
ret
jle
iret
cmc
sbb
jo
aam
inc
add
insb
jb
lods
cld
pop
scas
jg
mov
cmp
test
insb
dec
repnz
push
pop
pop
fs
addb
jge
mov
lods
lds
or
lods
mov
mov
pop
nop
fdivrs
jge
jb
aad
pop
adc
xchg
mov
sub
roll
or
push
cli
fists
fimuls
push
outsl
xor
cmpsb
movsb
and
loop
cmpb
arpl
and
pop
sbb
sub
jg
ljmp
pop
in
push
lcall
mov
outsl
clc
mov
icebp
pop
icebp
outsl
mov
call
jno
xchg
push
pushf
mov
rorl
and
mov
fwait
mov
or
add
pushl
aad
mov
test
fdivrs
enter
sub
cmp
push
int
jmp
adc
sub
adc
push
call
xorl
xchg
mov
data16
or
in
xor
pop
xor
add
inc
inc
dec
rcr
mov
call
or
jne
stos
sub
mov
cwtl
and
sub
inc
daa
or
add
or
shlb
and
stc
out
xorb
scas
rorb
jge
les
outsb
mov
out
mov
imul
leave
cld
into
ljmp
cld
leave
movsb
lahf
push
pop
fisttpl
repz
out
add
pop
rcr
push
es
jo
lcall
cmp
call
dec
es
pop
stos
addr16
jmp
mov
in
mov
jno
jb
lock
fs
xchg
shrl
outsb
add
and
mov
inc
xchg
xchg
mov
cld
das
xchg
mov
inc
sub
push
adc
rclw
cli
test
adc
dec
lds
fdivs
outsb
loopne
cmp
shlb
sub
shrb
inc
xchg
mov
bound
imul
fwait
pusha
insb
cmp
inc
jo
pop
aam
sub
movsl
movsl
xchg
mov
cmp
mov
adc
dec
jmp
vmread
test
out
rorb
test
decl
push
and
notb
pop
std
dec
pop
push
push
iret
push
pop
xchg
dec
dec
imul
fistpll
jnp
xor
outsb
xchg
and
add
mov
in
pop
jmp
lret
sub
std
push
sub
dec
mov
jmp
push
mov
or
sbb
dec
jl
test
shlb
or
xchg
dec
mov
rolb
scas
clc
mov
adc
cmpsl
or
jg
les
mov
jno
fs
cmc
pusha
pop
jle
and
clc
aaa
mov
sbb
jg
dec
mov
xchg
mov
lds
jbe
sbb
jb
and
sub
loop
push
lret
jg
je
xchg
pop
mov
fisubrl
pop
loopne
ret
jge
lock
pop
lcall
fcoms
aad
ja
int3
sub
out
inc
xchg
jg
fcom
fildl
jecxz
fsubrs
adc
mov
xchg
mov
push
pop
insl
je
lretw
adc
cmp
leave
pop
popa
adc
pusha
testb
fcoms
xchg
push
lods
outsb
cli
test
fisttps
adc
jle
mov
bound
adc
aas
push
jnp
sbb
mov
hlt
loope,pn
jae
pushf
mov
ds
sub
aad
pop
sub
pop
jne
or
std
jle
xor
jecxz
push
or
cli
mov
or
inc
aaa
jg
ret
sahf
or
push
mov
push
adc
and
outsb
mov
jb
mov
es
sub
std
je
imul
jbe
pop
sbb
dec
dec
lods
adc
push
pop
sbb
cmpl
stos
aad
sub
addr16
xchg
jno
ljmp
and
loopne
adc
and
inc
and
divl
ds
out
movsb
mov
cmpl
and
fiadds
xor
lret
or
cmc
das
fdivr
xchg
les
dec
js
push
push
jecxz
xlat
scas
andps
jo
addr16
lcall
push
fdiv
das
dec
push
jb
ret
aam
cmp
test
decl
and
ss
sbb
dec
fdivrl
mov
lods
pminsw
incl
les
mov
aad
leave
lahf
add
mov
mov
sbb
repnz
xchg
rcr
dec
push
inc
jne
mov
test
pop
sub
jl
mov
dec
loop
aam
sub
ss
icebp
loopne
movsb
aaa
or
cwtl
sub
test
or
orl
dec
stos
push
rcll
ds
xchg
push
decb
xchg
add
pop
inc
outsl
mov
es
mov
je
or
test
ret
les
pusha
jmp
adc
dec
dec
dec
nop
push
out
xor
int
roll
pusha
mov
dec
call
sbb
mov
cmp
and
ljmp
dec
mov
inc
sbb
push
xchg
cwtl
stc
adc
bnd
push
xor
push
jle
dec
popa
sbb
clc
and
jle
add
daa
jmp
pop
add
push
add
das
mov
jnp
xor
dec
jno
add
adc
push
mov
mov
or
push
mov
dec
dec
inc
or
test
es
nop
je
sbb
loopne
pop
and
adc
xchg
into
dec
dec
cmp
popf
dec
push
sbb
inc
bound
mov
testb
shrl
xor
gs
adc
mov
and
gs
and
mov
mov
cwtl
ljmp
je
push
ss
and
outsl
adc
push
cmp
push
mov
dec
xor
mov
repnz
insl
les
pop
push
addb
fists
incl
sub
mov
xchg
add
sbb
dec
jnp
mov
js
aam
nop
hlt
push
or
mov
fldcw
add
xchg
jae
cmp
adc
adc
and
xchg
sbb
ror
mov
cmc
xor
sar
mov
jns
mov
or
add
push
hlt
dec
pop
add
xchg
jp
inc
insb
adc
xchg
sbb
xlat
pusha
into
pop
mov
add
dec
cld
push
lods
pop
addr16
adc
mov
add
inc
fldt
sbb
sub
lahf
ret
or
lahf
jo
or
pop
sub
je
sbb
mov
in
clc
fldt
cmp
xchg
sarb
sub
and
repz
fimull
aas
and
xchg
loopne
inc
imul
test
mov
fs
fucom
dec
adc
xor
jle
shlb
pop
movsb
jbe
sbb
add
test
nop
sbb
imul
inc
cwtl
mov
inc
jo
sub
xor
loop
hlt
gs
aam
jle
jl
incb
movsb
or
xchg
out
movsb
test
push
cmp
and
cs
inc
mov
popa
lods
loopne
hlt
repz
adc
sbb
and
adcb
cli
out
jp
mov
dec
add
add
mov
lret
mov
dec
jecxz
ret
cs
ror
sub
sbbl
push
add
fstpt
scas
mov
mov
dec
aaa
mov
stos
or
inc
into
pop
jg
and
xchg
push
mov
std
mov
xchg
cwtl
call
mov
int3
jp
insb
ljmp
mov
js
and
xchg
imul
add
je
xchg
adcl
pop
icebp
loope
dec
out
adcb
movsl
pushf
jmp
mov
aam
jmp
cmpsb
jno
lock
cltd
jecxz
insb
mov
std
xchg
scas
sbb
pop
adc
movsbl
adc
mov
inc
mov
pop
icebp
incl
adc
jge
sub
popf
mov
pop
cmp
inc
jl
shrb
cmp
cmp
dec
or
clc
cmc
add
push
scas
outsb
cmc
rclb
out
mov
out
add
xor
imul
cmp
int3
cld
push
xor
dec
mov
addl
mov
sbb
pusha
loopne
movsl
xchg
ljmp
xor
or
data16
or
popa
mov
or
pushf
push
mov
rclb
enter
mov
xchg
dec
outsb
es
xchg
movsl
ret
jl
xchg
mov
scas
pop
ret
mov
and
pop
incl
lods
sbb
cwtl
test
les
es
std
and
xorb
lcall
jbe
mov
insb
rcr
lods
mov
jg
xor
ret
outsl
mov
ljmp
xchg
pop
inc
out
xchg
jl
movsl
mov
les
pop
sbb
je
lods
cli
sbb
sar
decl
les
bound
and
cltd
pop
xchg
dec
shll
push
cmp
cld
xchg
cmpsl
rolb
pop
xor
and
pop
mov
lret
iret
cmp
cmc
pop
sub
roll
push
mov
pop
jmp
sub
jmp
pop
movsb
xlat
mov
push
xor
ds
mov
loope
mov
xchg
clc
ljmp
enter
add
jg
xor
nop
sbb
outsl
and
jl
js
sub
popf
ds
mov
loop
push
or
stos
mov
pop
jo
adcb
adc
movsb
mov
lret
lcall
xchg
bnd
imul
mov
lahf
jl
icebp
xlat
shlb
inc
mov
das
adc
popa
adc
mov
or
push
dec
loopne
cmpsl
push
lods
add
sbb
inc
jns
mov
mov
sahf
pop
andb
inc
push
add
stos
loop
sbb
dec
mov
out
add
mov
sti
in
inc
push
add
sarl
inc
pop
dec
test
ss
lds
in
push
or
sbb
pop
sub
inc
mov
sti
out
push
push
ret
cmp
push
mov
adc
and
test
push
scas
mov
cmp
lock
fwait
xorb
push
fdivr
push
cltd
leave
or
sbb
inc
js
pop
lret
out
sub
enter
nop
mov
pop
loopne
divl
inc
sub
push
or
cld
nop
mov
sbb
es
mov
cmp
xor
push
mov
pop
jbe
int3
push
and
xor
mov
cltd
dec
mov
dec
pop
pusha
je
or
int3
test
popa
and
cli
mov
jne
out
and
pop
pop
jmp
je
and
iret
cmp
mov
or
add
jmp
jge
mov
mov
jb
scas
mov
and
push
jge
jg
pop
loope
mov
push
loopne
mov
sbb
push
push
xchg
scas
shrl
insb
insl
mov
ja
mov
jg
add
rol
adc
je
js
cmp
pop
or
xchg
adc
int3
jbe
dec
adc
scas
clc
sbb
xor
pop
stos
inc
inc
sar
std
js
faddl
lock
test
adc
movb
fdivl
ret
sahf
lock
lods
adc
dec
mov
or
pop
lret
sub
push
out
jp
std
mov
sub
loop
or
push
dec
stos
ds
ljmp
xchg
xchg
adc
ljmp
inc
test
js
jae
push
adc
lret
cmp
lds
mov
mov
test
pop
leave
or
dec
mov
scas
push
push
mov
icebp
cmp
dec
pop
adc
push
jmp
xchg
call
mov
fstpl
clc
push
inc
xor
out
data16
and
inc
sub
imul
pop
scas
imul
mov
inc
mov
pop
and
out
ret
ja
jl
aad
and
inc
test
cmpsb
icebp
vaddps
aas
mov
add
cld
mov
and
inc
loopne
mov
push
add
aas
mov
or
sub
cltd
roll
mov
and
rol
cmpsb
mov
xor
loope
push
jg
popl
mov
hlt
jbe
jo
repnz
aaa
clc
jbe
mov
rcr
inc
fdivl
fwait
fs
mov
pop
xchg
lock
nop
subl
stos
ret
negb
enter
int3
xchg
push
or
dec
decb
dec
movl
jno
call
sbb
cmpsl
leave
fbld
fmuls
aad
mov
dec
or
daa
push
mov
js
push
jl
inc
nop
and
hlt
lods
pusha
mov
in
pushf
lret
sbb
sbb
push
int
pop
test
mov
push
fimuls
fs
dec
lret
push
pop
adc
outsl
xor
fnstsw
inc
sub
call
add
mov
lock
mov
pop
repnz
mov
call
ret
rcll
sbb
les
mov
arpl
lcall
pop
mov
adc
add
insl
mov
adc
mov
incl
sub
add
fwait
inc
cmc
mov
jl
jno
cwtl
outsb
mov
xchg
rcll
pop
outsb
xchg
inc
es
clc
imul
fs
fs
mov
adcl
rcrb
sbb
xor
std
add
icebp
xchg
adc
pop
popa
fisubrl
mov
jbe
xchg
fidivl
add
pop
jb
ja
xor
push
jecxz
les
aas
xchg
rol
xchg
mov
inc
cmp
pop
mov
inc
adcb
or
and
mov
rcrl
popf
mov
mov
movl
mov
dec
push
mov
fs
xor
ret
xor
xchg
pop
in
filds
imul
jne
add
sbb
stc
jb
and
pop
inc
xor
sub
mov
aaa
adc
cs
hlt
pushf
clc
push
inc
or
aas
test
out
jle
inc
out
ljmp
mov
mov
xchg
cmc
or
inc
add
push
icebp
in
sarb
xchg
pusha
xor
cmpsl
and
pop
push
test
adc
xchg
scas
pop
or
repnz
sub
scas
imul
les
pop
mov
std
imul
shll
add
mulb
sbb
rolb
inc
bound
or
inc
and
je
xchg
cmpsb
rcrb
or
mov
or
aas
js
cwtl
inc
sub
xor
push
scas
push
dec
fnstcw
cld
or
roll
and
mov
inc
pop
jmp
sbb
test
std
addl
adc
or
outsl
or
popf
jno
add
and
into
or
notb
orb
xorb
inc
mov
add
push
xor
fsubrs
sub
mov
inc
pushf
cmp
pop
mov
xor
lock
mov
lods
pop
test
fisttpl
mov
faddl
or
xchg
sarb
inc
js
test
je
adc
test
shlb
fnstcw
adc
jecxz
movsb
mov
push
cmp
ficoms
cld
sbbb
jmp
inc
mov
rol
lds
and
or
and
mov
cs
mov
jg
ja
sub
test
popf
shlb
je
mov
addr16
adc
nop
dec
xchg
orl
inc
and
cmp
lret
xchg
ret
push
lock
lock
mov
fwait
jne
scas
dec
ljmp
clc
out
jmp
pop
and
aas
cmp
in
cs
icebp
jg
test
loope
fisttpll
xchg
stc
jp
nop
repnz
test
adc
push
and
stos
addl
mov
dec
outsl
sub
mov
jp
in
mov
adc
jo
sub
into
cld
cmpsb
fs
mov
jo
inc
rcll
push
xor
sti
adc
mov
jnp
cvtpd2pi
outsl
ret
xchg
shl
push
push
or
aaa
lock
pop
mulb
mov
xchg
xchg
imul
add
xor
cmpl
adcb
in
clc
push
std
mov
ret
xchg
inc
xchg
lret
lods
push
sub
daa
mov
imul
or
xchg
fiadds
and
jns
mov
xchg
cwtl
clc
aad
push
cmp
xchg
push
push
pusha
xchg
loop
jg
mov
xor
dec
gs
adc
xchg
in
mov
mov
mov
add
jle
scas
ret
and
and
movb
cs
es
adc
mov
cmpb
xor
ret
cmp
ljmp
jge
test
jae
push
lock
push
fidivl
lock
lahf
and
ds
les
fwait
push
stos
inc
or
sub
jno
jl
sbb
cmpl
dec
lds
sub
sub
mov
loop
push
ret
jo
faddl
das
test
std
mov
neg
ret
bound
es
mov
adc
decb
lock
test
cmp
push
xorb
cmp
xor
inc
stos
inc
clc
mov
in
mov
pop
or
inc
or
jg
add
push
ljmp
and
cs
add
sbb
mov
bound
leave
adc
add
in
in
fs
push
add
inc
in
mov
nop
jo
cmp
out
in
and
ds
pop
push
jg
vucomisd
rclb
dec
je
jecxz
loopne
sub
add
xchg
in
ja
jmp
push
pop
xlat
jecxz
push
mov
xor
adc
xchg
xlat
mov
xchg
dec
pop
dec
popa
xchg
sbb
push
in
or
sub
movsb
call
xchg
mov
sub
stc
fimuls
push
sub
outsl
pop
das
add
cmc
sub
sbb
mov
adc
jno
lods
clc
add
lods
in
jb
cmp
or
mov
sahf
into
ljmp
fs
dec
jl
lret
jns
rorb
aaa
and
movsl
mov
or
mov
and
jp
add
jo
pop
push
fisubrs
test
idivb
jns
inc
or
sar
add
cmpsb
test
dec
xlat
test
mov
orb
or
mov
mov
sub
stos
xor
call
shlb
push
and
add
clc
call
sub
cmp
cmpl
lods
fcompl
daa
fs
cmpsb
leave
xor
jge
push
inc
dec
pop
in
pop
subl
sbb
loope
rdmsr
sub
xchg
sub
add
pop
outsb
stos
dec
lods
rclb
xchg
decl
stos
dec
mov
pushf
xor
insl
mov
ja
aaa
fstpt
push
call
cli
outsl
cli
or
out
mov
mov
push
push
subl
out
popl
inc
rclb
mov
mov
outsl
aaa
push
inc
sbb
lock
mov
or
sahf
repnz
adc
xor
sbb
mov
pop
inc
aas
roll
das
jo
into
push
daa
inc
test
test
push
dec
clc
das
adc
sub
hlt
jge
lock
push
inc
sub
or
mov
xchg
roll
add
lea
int3
shrl
add
sahf
pop
inc
lcall
lods
rcrl
ss
cmc
add
inc
push
mov
loopne
and
add
stos
btc
fnstsw
lods
push
mov
in
daa
cmc
jg
pop
test
cmp
test
add
mov
loop
push
jg
cmp
dec
sbb
test
packssdw
insb
mov
stos
mov
or
mov
cmp
loope
xor
test
and
mov
push
jo
bound
lret
inc
loope
pop
mov
add
adc
imul
xchg
add
pop
je
fs
sub
int3
jge
push
nop
pop
mov
jg
enter
lgs
outsb
sub
ja
cmp
add
fisubrl
sbb
stc
fimuls
fnstcw
cmp
int3
dec
cs
insb
or
xchg
outsb
or
inc
dec
repz
fs
sub
jmp
js
das
insl
adc
in
or
cli
pop
out
xchg
and
dec
test
or
dec
test
mov
mov
mov
mov
ds
aad
adc
and
jge
and
sub
stc
xchg
inc
sbb
push
stos
aam
xor
daa
cli
lcall
dec
out
push
adc
jbe
call
push
cmp
pushf
inc
fcoml
sub
xchg
scas
hlt
addr16
ljmp
enter
mov
jmp
std
dec
rclb
in
ror
aaa
or
and
fsubl
out
mov
mov
mov
icebp
mov
xchg
adc
adc
sar
ret
push
inc
jo
push
jecxz
sahf
xchg
mov
and
mov
fcoml
scas
xchg
push
inc
mov
and
dec
lock
push
add
pop
orl
lock
call
xchg
xchg
int3
or
sub
imul
or
sub
pop
test
mov
jo
xchg
js
outsl
insl
fsubl
sbb
imul
stos
cli
pop
outsl
imul
inc
xor
das
sbb
and
xchg
mov
cmpb
mov
mov
sbb
sarb
inc
mov
inc
xchg
add
mov
popa
ljmp
pop
pop
push
xor
cmc
mov
loopne
jo
std
sbb
data16
scas
pop
dec
dec
mov
push
xor
int3
or
inc
lcall
ds
pop
loopne
xchg
rorb
clc
loopne
cli
xchg
imulb
idivb
mov
add
dec
add
push
inc
in
mov
in
mov
jbe
pusha
push
lret
mov
mov
xor
subb
fstpt
pop
std
aam
test
pop
inc
out
sbb
fdivrs
push
adc
aaa
pop
inc
stc
dec
dec
std
sub
cmpb
sti
movsl
imul
cmp
stos
mov
mov
xchg
scas
add
les
pusha
ret
cmp
ja
mov
les
dec
cmp
sbb
cli
or
repnz
lea
inc
pushf
test
in
adc
cli
shlb
mov
call
mov
xor
pop
popw
shrl
je
adc
mov
movsb
stos
sarb
incb
rolb
xor
pop
imul
pop
icebp
sub
in
cltd
mov
lock
cmpsb
leave
push
mov
inc
pop
or
insb
push
inc
mov
sahf
xlat
cmp
dec
outsb
movsb
popf
sahf
ja
lahf
pop
mov
shll
mov
and
pop
xchg
ds
out
inc
rcrl
aaa
xor
insb
adcb
mov
pop
cmp
adcb
adc
dec
fucomip
cmp
push
out
dec
cltd
fsubr
mov
sbb
sbb
or
lods
test
inc
out
pushf
and
pop
dec
inc
mov
in
xchg
sub
movsb
push
or
popa
mov
mov
push
mov
insl
ljmp
andl
incl
repnz
cmpsl
pop
fcomps
sub
jle
bound
cmp
in
mov
jl
inc
jg
cmpsb
xor
xor
add
and
js
jg
pop
push
rorb
mov
fcmovnbe
pop
dec
mov
add
fiaddl
cmpsl
sarb
pusha
mov
push
sbb
jne
clc
sbb
fs
xchg
pop
add
ljmp
jecxz
adc
loope
push
add
and
pusha
rcrb
mov
inc
rolb
mov
test
xor
push
mov
fsubrl
xor
iret
nop
dec
sbb
pop
pop
and
js
xchg
push
mov
lcall
and
or
xorb
jo
and
jecxz
lods
push
int3
jno
xchg
inc
mov
jo
push
cmpxchg
pop
std
imulb
cmp
sbb
scas
jbe
xor
xchg
rorb
fs
lds
push
movsl
fdivrs
mov
or
scas
inc
mov
mov
xor
test
test
sub
sub
enter
inc
jge
jle
xchg
stos
mov
jl
test
cmc
decl
or
mov
into
stos
loop
clc
pop
and
xchg
inc
aad
jp
stos
outsb
pop
push
out
or
sub
jle
push
sbb
sub
mov
aam
adc
push
xor
push
clc
lcall
xor
mov
adc
cltd
cli
js
inc
inc
js
dec
mov
xor
add
pop
sub
mov
shl
fwait
pop
dec
sbb
xchg
and
sbb
imul
adc
sub
popf
mov
cmp
loopne
sbb
cmc
jmp
dec
std
mov
dec
adc
mov
lods
jb
jle
xor
stos
jecxz
sbb
cwtl
mov
bound
inc
notb
decl
sarl
lret
lcall
inc
insb
inc
push
icebp
ja
push
std
and
sub
adc
mov
jmp
jns
mov
movsl
rcr
adc
mov
inc
mov
jecxz
adc
adc
pop
or
adc
mov
test
stos
inc
ljmp
pop
ror
mov
inc
in
ds
or
popa
repz
lock
iret
add
sbb
pop
loopne
popf
test
movsb
pop
inc
add
data16
js
push
cld
out
cmpsb
icebp
rcrb
pusha
shlb
das
pop
dec
sbb
test
je
arpl
aam
mov
test
enter
jle
cli
cs
ror
dec
dec
cmp
mov
pop
rcrb
test
push
dec
dec
cld
leave
clc
push
cmp
mov
sub
movsb
icebp
pop
mov
add
test
cld
and
adc
sbb
and
scas
mov
pusha
cmpb
and
cmp
pcmpeqb
icebp
out
cwtl
xchg
xchg
sub
jnp
clc
xor
jg
add
xchg
jle
mov
sbb
imul
pop
dec
mov
dec
cmp
pop
and
and
mov
push
jl
cmp
pop
hlt
ljmp
push
sub
sub
jmp
jl
iret
inc
mov
rclb
outsl
add
inc
insl
or
xor
mov
pop
mov
jns
out
cmpsl
pop
cli
sbb
mov
cli
or
mov
and
aas
or
les
stos
loop
loope
dec
por
dec
push
shlb
jmp
adc
lods
rclb
shll
jae
enter
mov
adc
lahf
mov
sar
fnstcw
gs
mov
jl
mov
xchg
and
scas
cs
inc
mov
or
mov
mov
enter
pop
ljmp
sbb
ja
mov
daa
ss
outsl
sbb
inc
repz
test
fdivp
mov
xor
mov
push
pop
ret
out
and
pushf
rcrb
ja
call
leave
call
nop
xor
sub
sub
add
sbb
pop
cld
outsb
push
dec
cmpsb
jo,pt
into
push
rcr
insl
jns
das
inc
cmc
cmp
mov
and
repnz
movsl
jg
push
dec
movsl
nop
cmp
push
mov
lcall
cmpsb
inc
bound
imul
add
pop
push
loopne
aas
add
movsl
les
aas
pop
pop
ficompl
mov
movsl
ret
xchg
pop
push
mov
ljmp
adcb
push
inc
add
shll
and
or
inc
pop
push
xlat
jmp
mov
adc
jmp
lods
flds
jbe
jae
dec
xor
jl
ja
lds
adc
mov
movsb
sahf
push
rclb
push
push
adc
mov
pop
imul
bound
in
inc
xchg
movsl
and
mov
jg
sbb
cmp
mov
mov
pop
or
pop
test
lock
mov
jmp
movsb
xor
orb
int
cmp
pop
add
nop
xor
fistpl
push
adc
lock
push
rorl
sub
mov
outsl
addb
or
frstor
loope
out
into
div
and
ljmp
push
lret
inc
es
addl
mov
add
dec
jmp
xchg
mov
cmp
inc
ljmp
std
mov
movsl
loope
pop
or
rolb
sub
adcb
mov
mov
adc
clc
lret
loop
pop
lret
clc
mov
iret
mov
add
repz
test
xchg
sbb
jne
push
dec
push
icebp
clc
subl
pop
inc
sbbb
aam
or
je
and
dec
or
xchg
jnp
xor
ds
push
cltd
mov
cld
callw
mov
cmpsl
inc
or
push
push
pop
aam
roll
inc
insb
push
push
jp
push
call
cld
loop
shlb
cmp
push
cmpsb
sub
shr
mov
or
ljmp
and
add
mov
leave
mov
les
insb
neg
xchg
jg
or
and
or
or
pushf
loopne
jp
mov
jle
clc
jo
sbb
or
inc
push
je
rorl
insl
pop
or
mov
pop
push
mov
jne
add
sbb
inc
mov
outsl
ljmp
jmp
mov
sub
inc
mov
and
mov
in
jne
mov
dec
and
cmp
mov
push
sub
inc
pushw
mov
push
add
or
cmpsb
in
jg
push
ja
loopne
adc
xchg
les
pop
pop
ret
pushl
push
mov
shlb
mov
pop
pop
shl
inc
jae
popa
mov
mov
ret
push
orb
test
daa
push
cli
xchg
dec
xchg
mov
mov
std
mov
das
adc
xor
adc
push
rclb
jbe
sub
insb
pop
mov
ret
add
xor
mov
or
pop
je
insl
es
mov
aaa
mov
sahf
dec
popa
sbb
xchg
mov
bound
mov
and
in
or
pop
and
mov
aad
in
mov
loopne
jno
mov
sub
xchg
xchg
mov
and
xor
fs
dec
int3
std
jo
sahf
ret
js
jmp
shr
and
or
in
notb
lods
loop
les
dec
shr
add
mov
xlat
jb
jp
push
jle
push
or
fldl
fldenv
das
js
in
ficoml
rcrb
jg
scas
pop
scas
mov
in
cmp
stos
andb
jmp
push
mov
jo
xchg
xchg
shr
adc
scas
mov
add
movb
imul
jg
hlt
lahf
mov
leave
mov
insb
and
stc
les
xor
sub
lods
xor
sub
mov
outsl
jp
add
cmp
push
pop
sbbl
add
or
dec
cli
loopne
sbb
insl
pushl
xor
cmp
sti
pusha
jne
std
stos
sbb
and
mov
mov
aaa
call
inc
inc
jmp
push
mov
cmc
test
arpl
mov
and
add
call
inc
push
push
cwtl
rcr
jb
inc
mov
test
shll
jno
push
lcall
enter
add
test
in
cli
test
aam
jl
mov
jne
jp
popf
xor
inc
sub
xchg
shrl
pop
data16
and
or
and
insb
ljmp
xlat
call
das
in
dec
push
pop
outsb
pop
inc
pop
mov
les
lea
clc
or
jo
and
add
mov
dec
in
mov
cs
je
pushf
adc
sbb
inc
ljmp
xchg
dec
pop
sub
les
aam
add
sbb
pop
xchg
cmpsl
rcll
adc
sub
rcrb
scas
sar
dec
xchg
nop
adc
in
daa
nop
mov
aaa
ret
call
sub
test
shll
adc
cmovle
cs
jp
add
or
jg
addb
sahf
pop
lods
movsb
bound
push
add
cmp
push
pop
or
cmpsb
xor
add
sub
repnz
fwait
sub
pop
push
fildl
out
orb
jmp
out
jns
in
je
bound
in
cmp
negl
adc
dec
jle
decl
aam
std
xor
pushl
inc
fists
mov
rcrb
fadds
clc
pop
mov
add
xchg
rcrb
negb
add
pop
cmp
mov
cli
adc
or
and
dec
jb
cmpsl
hlt
mov
inc
incl
clc
push
scas
clc
dec
inc
cmp
mov
inc
pop
aaa
dec
std
mov
fs
frstor
fst
in
faddl
clc
or
jg
cwtl
mov
dec
pop
pop
mov
inc
nop
dec
aas
lret
hlt
xor
shlb
cltd
das
ss
or
repnz
bound
pop
mov
mov
adc
push
jg
dec
adc
sbb
and
cmp
push
pop
inc
dec
jge
icebp
or
jmp
mov
mov
aad
loope
sub
pop
pop
loop
xchg
fists
sahf
and
popa
add
pop
sub
inc
or
mov
pop
mov
inc
inc
cli
or
inc
movsl
inc
push
dec
js
adc
xchg
iret
inc
lcall
push
sub
cmc
add
scas
mov
loopne
and
and
xchg
sbb
cltd
push
sbb
pop
fs
sahf
push
mov
pop
xor
ja
mov
insb
pop
xchg
jno
push
and
dec
pusha
shll
sub
aaa
add
out
xorl
cmp
idiv
or
les
std
and
enter
pop
mov
and
test
or
andb
in
test
xchg
and
cwtl
mov
jecxz
ss
iret
and
insl
lods
test
xor
fists
icebp
decl
push
daa
fldcw
call
adcl
dec
stos
inc
push
aam
loope
push
loopne
pop
ljmp
fcompl
inc
in
xchg
cmp
mov
ud2
pop
movsl
clc
pop
push
stos
sub
inc
out
cmp
dec
cli
insl
cmp
push
daa
cmp
loope
inc
dec
jge
push
ja
sub
lods
adc
sub
outsb
dec
scas
cmp
mov
bound
or
sbb
ret
push
std
xchg
in
adc
jp
aaa
loopne
lcall
pop
sub
push
mov
fmull
rclb
xchg
mov
mov
lret
dec
mov
adc
sub
nop
cli
xor
jmp
mov
xor
hlt
jle
add
fwait
xor
cs
and
ret
mov
and
popa
clc
pop
clc
xchg
in
loop
jecxz
in
cmp
xor
push
jge
cli
inc
mov
mov
and
dec
add
cmp
cmc
sbb
inc
inc
and
jmp
fdivl
xabort
or
pushf
fnstcw
insl
sti
xlat
inc
add
rcll
out
mov
push
lods
mov
dec
xor
dec
or
mov
mov
fadd
pop
clc
cli
sub
jp
loopne
ja
add
loop
rcll
mov
lret
popa
dec
adc
shlb
cmp
jae
add
out
mov
sar
js
xchg
mov
add
adc
jg
mov
pop
adc
cmp
add
or
inc
in
jecxz
lea
lret
mov
ja
out
nop
mov
xchg
lret
add
mov
push
pusha
or
adc
sub
fs
mov
jb
sub
sub
roll
xor
xor
je
xchg
jp
add
aaa
int3
adc
mov
sti
pop
jge
bound
add
loope
jns
addb
outsb
xor
inc
mov
xor
fisttps
push
mov
push
outsl
add
lods
sti
pop
push
fs
xchg
loop
mov
iret
mov
dec
shlb
jp
aaa
out
pushf
pop
orb
test
sbb
es
jne
pop
clc
pop
insb
xchg
add
lods
pop
cmc
pop
add
mov
ret
js
push
mov
mov
bound
cmpsb
mov
mov
je
repnz
xor
test
js
test
fisttpl
mov
dec
inc
or
imul
cmp
sbb
dec
mov
xchg
pop
clc
lcall
pusha
add
popa
fsubs
pop
fistps
sahf
push
icebp
sub
das
xchg
dec
andb
repz
stos
dec
push
lods
repnz
cs
mov
notl
js
jecxz
pop
mov
insb
or
sbb
jl
xchg
cmp
cli
aad
out
adc
adc
pop
addr16
and
and
mov
mov
stos
rol
rcrl
sbb
inc
mov
test
pushl
jg
dec
pusha
xchg
dec
into
scas
sbb
imul
lahf
test
add
lret
inc
push
lds
add
mov
cld
mov
cmp
in
and
addb
or
pop
int3
fs
test
fmuls
fisttpl
call
fs
lds
loope
mov
fimull
inc
loopne
push
mov
inc
add
mov
jle
xor
and
mov
fcmovnb
outsl
push
dec
ja
inc
es
loopne
push
push
push
adc
inc
loop
push
and
sub
push
inc
or
pop
inc
inc
push
push
cs
add
pop
aam
push
pop
adc
fiaddl
sub
mov
cld
js
cmp
sub
sub
cltd
daa
cs
test
xchg
push
stos
sbb
adc
xor
inc
in
and
push
jecxz
mov
cmp
push
das
mov
jle
mov
je
and
ret
push
cmp
insb
fbstp
xchg
lods
jnp
push
jg
nop
clc
adc
xchg
jp
xor
ss
sbb
inc
std
jge
push
or
lret
fisubs
rorb
lods
xchg
push
out
sbb
call
inc
push
nop
int3
ljmp
sarb
cmp
push
sub
ljmp
imul
mov
and
orb
dec
imul
push
nop
adc
es
fwait
cmpb
add
insb
jbe
xchg
xorb
adc
add
imul
inc
inc
pop
cs
pop
dec
inc
data16
sbb
nop
push
rcrb
and
dec
add
adc
pushaw
ds
xor
add
orl
test
and
pop
adc
lret
jbe
mov
in
js
pop
dec
and
dec
adc
push
adc
mov
push
adc
cs
mov
xor
jg
and
or
jo
and
orb
adcb
int3
add
imul
jo
mov
je
add
int3
sub
mov
cli
lcall
ljmp
or
and
add
insb
pusha
in
dec
add
inc
addl
and
and
adc
push
adc
xor
or
mov
and
cwtl
adc
adc
or
call
int3
pusha
add
inc
push
sbbl
les
ljmp
xor
mov
addb
xchg
fadds
scas
outsb
movsb
cli
hlt
add
rcrl
inc
xor
push
push
or
adc
bound
inc
push
insb
push
pop
mov
inc
jo
insl
test
or
addl
sub
inc
jbe
pusha
xchg
fsubr
mov
inc
mov
mov
push
and
or
xor
rorb
and
nop
shll
inc
mov
gs
sub
add
lds
mov
jl
mov
sub
mov
inc
inc
xchg
insb
nop
data16
cmp
cwtl
fldenv
and
lock
inc
sahf
inc
push
push
sub
aam
movsb
push
xor
scas
sub
es
mov
lods
ret
adc
lcall
push
into
mov
push
inc
dec
jp
add
or
cmp
sub
or
mov
mov
out
sub
movsb
or
imul
or
sbb
cmp
or
imul
pusha
pop
nop
insb
jp
cs
mov
or
inc
je
ret
mov
xchg
fld1
mov
xchg
jp
mov
sub
roll
cmp
mov
dec
lock
rcrb
pop
xor
das
add
add
mov
push
or
shlb
xor
or
dec
or
je
mov
loop
inc
in
adcl
and
add
xor
or
dec
ds
and
jae
inc
idivb
or
mov
ss
adc
adc
add
movsl
or
test
xor
call
nop
adc
or
add
lahf
mov
add
stos
nop
dec
aas
adc
inc
shlb
or
inc
push
push
mov
ljmp
inc
cld
adc
xchg
mov
sbb
push
mov
out
pop
lret
int3
movsb
adc
lret
mov
notb
or
cs
add
or
push
mov
xchg
add
adc
inc
pop
cmpsb
int
pop
push
fs
adc
push
cmpb
rorb
fimuls
or
inc
sbb
repnz
xchg
cltd
pop
xor
cmpsb
cmp
adc
ljmp
addb
pop
and
adc
pop
push
push
adc
xchg
shlb
push
add
inc
adc
mov
and
movb
or
nop
adc
andl
data16
and
add
mov
in
enter
lods
dec
mov
cmp
dec
clc
adc
xor
mull
notl
cmp
inc
jge
mov
int3
xchg
ds
mov
adc
lahf
xor
inc
adc
cmpb
lret
mov
xor
pop
push
adc
fs
xchg
int3
mov
jo
inc
pusha
push
mov
xor
lret
cmpsb
or
movsl
xchg
sub
in
sbb
push
cwtl
cmp
adc
test
pop
push
adc
test
dec
pusha
cs
notb
mov
or
outsb
test
pop
push
cmpsb
adc
lret
xor
gs
pusha
pop
cmpsb
insb
add
out
adc
xor
xchg
cli
push
dec
sbb
sub
sbb
adc
ss
inc
inc
loopne
test
ss
add
add
jb
int3
sub
rcrl
push
cli
adc
push
push
pop
mov
nop
or
push
xor
xchg
decb
cli
xacquire
push
inc
fcomps
ficoms
bound
mov
xchg
scas
int3
dec
sub
push
cmpsl
xchg
into
lock
je
push
nop
nop
dec
rcll
mov
jo
rolb
into
inc
sbb
xchg
dec
sub
mov
cld
rorb
jo
test
and
sbb
and
je
cltd
push
pushf
xchg
mov
xchg
fdivr
adc
mov
je
xlat
and
xchg
adcl
sub
push
ljmp
jo
add
flds
push
dec
out
loop
push
ss
mov
aam
addb
hlt
mov
mov
xchg
in
sahf
push
mov
movsb
or
mov
clc
dec
sbb
add
inc
push
xlat
pop
data16
adc
cltd
sbb
adc
push
dec
int
rolb
dec
jo
push
sub
add
dec
or
stos
xchg
push
push
inc
push
adc
mov
or
test
mov
push
xchg
mov
xchg
xchg
fs
andb
call
inc
nop
inc
mov
js
sub
lcall
or
enter
or
dec
enter
cmp
dec
sahf
and
and
jo
scas
fs
push
jmp
mov
inc
mov
loopne
xor
mov
pop
jnp
and
inc
sbb
insb
dec
movb
inc
jne
test
sub
es
dec
adc
nop
mov
add
jmp
sbb
adc
je
push
cmp
push
mov
add
pop
mov
and
jbe
popf
pop
pop
add
pop
call
jnp
hlt
call
xchg
pop
lods
lret
test
lcall
mov
mov
or
adc
lea
clc
in
fs
sbbl
push
add
mov
push
mov
fxch
push
out
cld
shl
cmpsb
in
inc
xchg
jne
sub
cwtl
cmp
fdivrl
add
rcrb
enter
in
push
adc
or
cmp
mov
dec
ret
flds
add
push
nop
cwtl
ret
mov
bound
lcall
nop
dec
or
ror
mov
fdivrl
loop
push
and
mov
imul
mov
repnz
pop
inc
iret
push
dec
mov
nop
add
pop
jae
push
xor
add
outsb
lods
and
int3
xchg
scas
mov
mov
pushf
and
sbb
add
cwtl
add
jae
adcl
inc
pusha
jbe
pop
push
push
mov
xchg
and
jmp
dec
pusha
jbe
sub
ds
sbb
flds
pushw
add
cmp
popf
and
cmpb
inc
popa
loopne
push
out
pop
push
sahf
jo
or
jb
push
add
scas
test
add
lret
in
add
data16
iret
test
aaa
push
inc
loopne
jbe
outsb
xchg
and
add
rcrb
lods
adc
je
mov
pop
test
adc
add
lret
push
and
fisubl
xor
lods
push
and
push
or
popa
daa
mov
xor
xor
adc
clc
inc
imul
xor
pop
pushf
add
fisubl
scas
jbe
mov
push
cmc
jo
repnz
add
mov
mov
js
fdivl
dec
xor
int3
adc
ss
adcb
and
insb
popa
adc
sbb
pop
jecxz
in
mov
hlt
push
xor
sub
lret
fadds
adc
fs
enter
lret
rorb
stos
xchg
pop
or
cmp
cmp
or
adc
in
loopne
push
ror
fs
ret
pusha
cmp
add
dec
bound
loope
jbe
sub
mov
add
jo
inc
xchg
cld
test
mov
pusha
sub
jl
jle
mov
adc
and
mov
xor
inc
mov
or
das
inc
rolb
outsb
sbb
bound
aam
adc
pop
ud2
rcrl
divb
pushf
test
bound
sbbl
ljmp
cmp
push
nop
adc
cmp
aam
pusha
sub
ja
mov
cmp
sbb
sub
ljmp
into
test
mov
js
add
je
pop
mov
adc
pop
inc
dec
movsb
xor
push
gs
xor
or
add
ljmp
dec
inc
xchg
inc
mov
and
pusha
rorl
fcoms
sbb
jo
mov
xor
cmp
int3
mov
jle
adc
add
and
sbb
adc
dec
pop
or
sbbb
pop
sbb
sub
xchg
add
clc
jbe
adc
mov
xchg
mov
cmp
in
rolb
push
and
xchg
in
dec
dec
pop
and
sub
out
cwtl
cs
int3
sbb
or
xorb
mov
ror
inc
xor
xor
xchg
out
jp
fcomp
shll
mov
or
ds
xor
dec
insb
jb
mov
addl
js
add
or
push
add
xor
dec
pop
popf
push
mov
mov
xor
dec
adc
sbb
andl
sbb
call
or
adc
cmpb
inc
or
and
addb
and
scas
inc
cwtl
inc
rol
pop
lods
sbb
mov
loopne
xchg
cld
and
dec
out
inc
dec
loop
incb
jle
out
add
and
scas
sahf
xor
mov
dec
jle
adc
sub
adc
xor
mov
test
or
add
cmp
imul
pop
mov
loop
sahf
sub
add
xchg
mov
xor
xorl
sbb
push
inc
add
je
inc
jle
cmp
int3
call
jbe
pop
cld
gs
es
inc
rolb
and
js
cli
xor
push
in
call
push
pop
adc
cwtl
mov
inc
adc
cwtl
or
mov
or
cmpsb
mov
loop
adc
ljmp
das
mov
sub
jb
inc
rorl
cmpsb
add
pop
ret
loopne
sbb
add
mov
pusha
adc
addl
js
cmp
adc
in
js
dec
call
cmpsl
loopne
les
xorb
shll
aaa
in
adc
mov
dec
sub
js
and
mov
xchg
push
out
dec
adc
and
sbb
loope
sbb
jp
je
jp
popa
sbb
mov
jl
enter
bound
push
cmpsb
inc
pop
cmpb
sbb
cmp
sbb
push
pop
push
mov
mov
dec
adc
cwtl
push
add
or
adc
scas
and
push
cwtl
ljmp
fs
xchg
add
shll
data16
cmpsb
xchg
inc
add
pop
cmp
sbbl
dec
cmp
sbb
mov
dec
mov
or
rcrl
mov
aam
mov
dec
mov
sbb
pusha
mov
sbb
out
negb
adc
scas
push
push
mov
mov
rol
pop
xor
clc
pop
adc
jb
sub
cltd
add
dec
into
dec
jbe
adc
push
rorb
and
inc
xor
cli
negb
fcoms
xor
les
aam
adc
lea
nop
pushf
aam
cmp
mov
loope
pop
mov
rclb
adc
push
bound
faddl
pop
adcl
inc
es
dec
outsb
shlb
pusha
and
fcomps
or
orb
xor
mov
push
popa
loop
add
pusha
inc
lret
mov
push
sub
push
lcall
or
ret
pushf
push
loopne
jb
jle
loope
jo
fisubs
sbb
and
jl
jne
sub
add
push
loopne
inc
push
pusha
mov
out
push
mov
or
movsb
or
or
outsb
xor
lods
je
daa
add
or
je
inc
faddl
imul
adc
inc
push
jl
cs
and
sbb
sbb
ret
dec
sbb
cmp
push
mov
in
popa
and
repnz
sub
push
leave
inc
fsubrl
sbb
call
jmp
js
jo
rcrb
xchg
int3
and
data16
mov
push
mov
cmpb
jo
xor
js
and
in
sbb
mov
or
or
and
in
andb
add
test
mov
cmpsb
addb
in
push
mov
lret
push
dec
push
push
mov
ret
int3
jp
je
imul
inc
and
mov
daa
or
cmpb
lods
or
xchg
testl
mov
addb
and
sub
aam
or
sbb
adc
into
mov
leave
mov
push
mov
outsb
add
or
mov
push
and
out
inc
enter
jo
mov
push
ss
cmp
es
sbb
mov
inc
mov
dec
fs
das
test
stos
ss
sub
add
shlb
mov
sbb
orb
into
negb
adc
add
nop
and
rcrl
cmp
jecxz
dec
jo
jle
ljmp
into
push
rolb
leave
jl
xor
mov
fbld
in
int3
int3
push
add
jo
loope
sub
scas
hlt
or
insb
mov
movsb
sbbb
jae
or
mov
dec
jp
or
xor
es
and
and
xor
enter
mov
sahf
sbb
repnz
mov
inc
shrl
loopne
dec
andb
cmpsl
pop
andb
cwtl
cltd
or
add
out
nop
add
aam
dec
xor
repnz
adc
cmp
pop
mov
arpl
xchg
mov
ljmp
into
faddl
in
or
xor
push
or
movsl
jo
mov
xor
push
push
xchg
lcall
add
ficompl
push
scas
pop
mov
push
mov
mov
mov
and
mov
adc
bound
mov
mov
es
and
pop
and
add
push
xor
adc
push
mov
add
scas
lret
adc
inc
inc
mov
shll
test
add
pop
push
jl
xchg
xchg
sbb
jp
inc
andl
adc
xor
inc
into
ret
aam
or
push
arpl
adc
inc
adc
test
cld
cmpsl
and
arpl
inc
mov
pop
ret
push
into
movsl
add
or
add
add
cwtl
scas
rorb
pop
sub
cmp
test
cld
push
cmp
xor
push
clc
inc
jo
or
push
in
cltd
roll
cwtl
pop
xor
inc
loope
mov
nop
push
mov
lock
movsb
scas
xchg
and
test
scas
xor
int3
test
loopne
and
jb
and
adc
add
fiadds
test
xor
int3
xchg
xchg
fdivr
inc
or
subb
mov
mov
inc
outsb
ror
insb
scas
xor
mov
xor
fcomp
sbb
adcb
js
test
adc
cmp
mov
mov
popa
jo
sub
push
mov
xchg
pop
lds
repnz
push
js
ret
insl
lods
or
bound
imul
inc
test
cli
testb
xchg
je
xchg
add
pop
or
out
ds
in
or
mov
mov
pop
mov
test
fidivrl
pop
addr16
add
push
push
cwtl
shl
push
sub
pop
inc
movsl
and
dec
pusha
cwtl
rorb
or
jbe
call
pop
jle
dec
inc
inc
sub
cmp
add
mov
sbb
mov
icebp
mov
pushf
shlb
xlat
faddl
sub
mov
adc
push
mov
stos
clc
mov
xor
lcall
sbb
or
outsb
inc
in
rcr
mov
mov
sbb
nop
out
add
mov
inc
jo
pop
cmpsl
adc
cmp
lods
jns
mov
add
sahf
mov
scas
sahf
pushf
inc
loopne
mov
jp
adc
lea
xor
lcall
js
mov
into
dec
jb
add
mov
sbb
dec
test
mov
out
xor
les
loopne
push
xchg
xchg
and
push
int3
or
dec
js
add
push
pop
jbe
sub
sub
jb
push
xor
enter
pusha
mov
inc
inc
mov
or
cmpsl
add
into
mov
hlt
lods
jb
data16
jne
cmp
fadd
int3
insb
xchg
mov
clc
out
adc
sub
subl
and
mov
cwtl
lock
es
flds
pop
andb
xchg
ljmp
dec
dec
mov
adc
pop
mov
jno
push
xor
lods
cmpsb
stos
rol
push
js
pop
mov
xchg
pusha
movb
faddl
insb
loopne
add
push
repnz
mov
in
pop
in
pusha
cmpsb
orb
hlt
and
or
jecxz
sub
jnp
mov
cltd
cs
sbb
or
lcall
or
pusha
js
cwtl
add
inc
xchg
mov
adc
pushf
addb
les
push
push
mov
xor
loopne
lret
and
rclb
dec
jmp
sbb
sahf
inc
and
add
lret
mov
cmp
inc
jne
xlat
rorl
out
ret
push
jl
adcb
cmpsb
cltd
loopne
adc
push
ljmp
push
push
push
pushf
push
jl
or
or
inc
out
and
cmp
rcrl
adc
lret
adc
mov
test
fiadds
enter
fxch
data16
xchg
stos
addl
mov
and
mov
test
cmp
add
sub
add
lret
mov
and
jbe
adcb
pop
pusha
aad
dec
stc
nop
adc
jo
add
cli
ret
xchg
out
inc
call
inc
xchg
xchg
jp
add
xor
adc
test
cmp
shrb
insb
jno
int3
lcall
push
dec
cmp
test
mov
push
mov
int
fiadds
and
adcb
cmp
orl
andb
dec
out
sbb
dec
or
rol
test
rclb
and
adc
push
sahf
std
push
add
xor
iret
sub
sub
add
add
arpl
adc
fidivs
testb
or
or
call
mov
fcmove
imul
push
fmuls
popf
fnstcw
add
adc
cld
lods
push
mov
or
add
push
pop
fidivrl
mov
mov
into
into
sarb
repnz
outsb
lret
xor
int3
mov
mov
fcmovnbe
add
mov
addr16
imul
add
das
inc
add
dec
fisttpl
leave
pop
aam
fisttpll
test
daa
adc
cmp
lcall
xor
dec
pop
ror
lcall
inc
sub
sbb
cmp
xor
inc
jge
cmp
mov
and
ret
xor
pop
aas
insb
sti
idiv
xor
inc
push
push
add
cmp
popa
outsl
in
push
xor
mov
pop
aas
fcmovne
in
wrmsr
and
rolb
xchg
or
pxor
sub
xchg
daa
add
sbb
out
pop
jo
pop
sub
and
push
es
add
std
or
and
daa
cmp
sub
sub
add
or
cmp
push
cs
add
das
or
aaa
dec
out
jge
add
cmp
add
cmp
adc
push
adc
insl
sti
sub
dec
imul
adc
dec
insb
dec
dec
jb
dec
mov
mov
je
adc
inc
push
testb
into
xchg
fwait
mov
outsb
adc
ss
mov
pop
sbb
aaa
fisttpl
jbe
xchg
addr16
add
data16
add
pushf
add
std
mov
and
imul
movsb
push
insl
mov
aas
aaa
sbb
pop
jb
add
je
ss
stos
clc
insl
fisttpl
jbe
push
je
push
js
add
loop
data16
icebp
pop
xchg
push
and
test
es
cmpsb
mov
fistpl
or
lret
push
mov
add
mov
add
nop
ja
mov
sarl
cwtl
out
movsl
ljmp
std
push
hlt
add
inc
mov
icebp
mov
add
leave
dec
mov
insl
cmpsb
xchg
in
push
in
int
insb
mov
sahf
fcmovnb
push
fadd
leave
push
fmulp
fisttps
fstps
int
into
loop
out
jge
iret
jecxz
rcrb
rcll
shll
rcr
repz
out
in
push
out
pop
aam
fdivrl
in
aam
pop
ss
cmp
xlat
faddl
out
call
insb
in
fsub
jecxz
bnd
repz
movsl
jns
dec
hlt
in
repz
cld
stos
sbb
cld
jae
sbb
test
and
data16
pop
mov
pop
xchg
xchg
out
jge
jp
outsb
pop
push
push
and
push
push
pop
jg
mov
mov
jne
push
pop
push
lods
or
mov
pop
popa
test
movsb
pop
mov
pop
pop
pop
pop
pusha
pop
mov
or
out
push
pop
pop
push
pop
pop
imul
pusha
push
add
push
outsb
pusha
pop
pop
rcrl
arpl
push
and
pop
mov
pop
mov
jne
dec
jnp
fdiv
adc
pop
jp
mov
bound
pop
push
sbb
adc
adc
in
ret
mov
cmp
pmaxsw
mov
popa
or
xchg
xchg
mov
aas
inc
sbb
pop
outsb
add
jmp
jp
push
rcrl
mov
pusha
xchg
and
pop
addl
add
add
jl
addb
popa
or
jnp
adcb
and
add
add
jmp
cmp
sub
daa
pushf
push
nop
insl
ret
jne
add
adc
push
jo
outsb
jbe
ret
and
movq
jbe
add
jns
je
jae
xchg
xchg
outsl
popa
popa
mov
push
pop
in
push
mov
pop
sbb
sub
lods
xor
jg
fadds
daa
mov
jae
pop
pop
jnp
les
testb
gs
add
js
out
sub
outsb
pop
xor
pop
cld
lret
cmpl
push
mov
subl
xor
decl
cmpsb
pop
pop
imul
jns
ret
mov
pop
mov
push
add
jae
popa
pop
aas
pop
adc
daa
cwtl
pop
pop
arpl
add
mov
pusha
outsl
jne
pop
jge
jne
data16
push
sub
pusha
bound
outsb
push
fdiv
pop
sub
fistpll
nop
inc
adc
pop
add
inc
dec
add
sbbl
aas
mov
mov
call
flds
xchg
cmc
mov
cli
xor
jg
sub
incl
stos
out
add
fcmovu
cs
jge
out
pop
inc
add
inc
mov
pop
fstl
add
push
inc
sbb
add
push
dec
add
int
cmp
cltd
cltd
lcall
pop
mov
mov
in
insl
pop
xor
xor
xor
in
mov
sub
add
push
js
in
jge
ja
fstl
xor
das
ja
pop
jne
mov
xor
xor
fldl
fcoms
cmp
test
jg
xor
shrb
push
movsb
inc
sub
add
fstp
mov
add
jae
into
jnp
stc
add
or
cmc
mov
or
or
sbb
and
adc
add
sbb
inc
lcall
push
push
cmp
es
pop
cs
add
and
add
idivb
lds
sub
add
sub
ss
mov
cs
push
xor
cmp
dec
push
push
inc
ds
inc
outsb
shr
je
inc
xor
dec
cmp
push
add
aaa
xchg
cld
inc
add
push
push
aas
pop
dec
dec
lock
cld
mov
scas
inc
pop
add
dec
ret
dec
add
inc
pushl
or
jo
dec
push
push
push
add
bound
pop
cmpsl
fwait
outsl
mov
push
popa
pop
pop
es
dec
add
push
pop
fs
add
imul
es
pushl
jbe
add
js
data16
imul
mov
es
inc
add
sahf
jl
dec
add
add
push
pop
repz
addr16
add
popa
add
push
mov
jge
insl
bound
bound
jp
imul
sti
cld
outsb
push
js
imul
push
jo
jne
jle
jge
mov
jnp
nop
jne
add
ja
mov
cmpl
mov
add
push
jnp
jge
mov
jle
push
jl
mov
xchg
add
fwait
dec
pop
ds
jge
add
lea
cltd
cltd
cwtl
mov
sub
xchg
jnp
xchg
push
xchg
xchg
push
jg
std
out
mov
jle
mov
mov
add
insb
mov
lahf
popf
cwtl
movsl
lods
xchg
addb
mov
cld
test
mov
mov
mov
push
loope
aad
and
outsb
roll
mov
stos
f2xm1
mov
push
sahf
mov
add
into
add
jmp
scas
lret
mov
iret
call
mov
add
xchg
cmpsl
add
mov
idivb
test
mov
lods
sahf
cmpsb
lods
mov
lods
mov
loopne
ret
ret
xlat
in
fnstenv
in
jnp
push
mov
mov
add
mov
push
test
in
outsl
mov
mov
add
cmpsb
add
mov
mov
aaa
mov
add
push
mov
leave
fldcw
mov
xchg
enter
leave
leave
lds
leave
into
mov
push
mov
push
aam
add
outsl
ja
xchg
loope
cmpsb
in
add
clc
dec
push
fcmovb
cmpsb
mov
mov
int
out
iret
rcr
rcl
add
fcmovbe
add
loop
aam
ficompl
fcmovu
push
loop
loop
fmulp
out
ss
ss
loop
insb
pop
push
in
dec
fsub
cs
neg
notl
in
data16
jmp
ss
add
out
in
mov
pop
mov
cli
sti
jmp
shl
mov
loop
clc
push
sti
fdivr
testb
cli
add
out
xor
sti
aam
push
push
loopne
idiv
loopne,pt
lahf
out
push
call
push
repnz
mov
cs
cli
push
decl
cli
out
in
fdivp
cli
ljmp
call
push
push
push
dec
cmpsb
shl
push
sub
scas
add
inc
and
cmp
adc
jmp
shrb
jle
jbe
mov
add
mov
scas
mov
test
shrb
xlat
cld
testb
add
rol
rol
sbb
cmp
add
test
scas
ret
ret
int3
ret
ret
lds
dec
out
ret
adc
mov
fcomp
fstp
div
hlt
fbld
cli
or
sub
fstp
xchg
not
outsb
add
icebp
hlt
sub
push
and
into
ret
add
into
aad
aad
push
mov
pop
lds
fimull
int3
push
in
insb
sti
into
int3
iret
fcomp
mov
mov
jmp
ret
sbb
js
jae
jo
or
jae
push
je
jp
out
popf
ja
push
je
add
jb
mov
insl
lcall
pop
pop
pop
pop
pop
pop
or
pop
pop
sub
xor
cmpsb
pop
repz
jnp
add
jle
mov
fnstsw
mov
cs
lods
std
scas
jp
jp
mov
mov
int3
enter
adc
lods
lods
movsl
mov
push
xchg
add
push
mov
repnz
ja
add
incb
cld
adc
loop
out
or
cld
hlt
stc
repnz
vmovd
lcall
cmpsb
mov
jne
outsb
outsl
or
bound
lret
int
lret
pop
adc
jae
dec
add
dec
add
dec
dec
stc
jge
dec
push
dec
dec
dec
push
push
push
add
dec
dec
ss
ss
ss
sub
sbb
sbb
adc
push
sbb
sub
sub
sub
sub
imul
inc
dec
dec
dec
push
push
pop
pop
imul
fcmovnu
pop
insl
addr16
imul
jbe
jne
jnp
je
in
sti
jnp
jbe
jg
movsl
xchg
xchg
jnp
jp
cmp
pop
pop
pop
push
add
fistpl
pop
jb
imul
xor
ds
arpl
in
or
cld
sti
sti
push
sbb
mov
pop
xor
and
in
repnz
out
sarl
ds
ljmp
cmp
xchg
cltd
mov
mov
jnp
jge
shll
add
sub
ss
call
test
inc
dec
or
and
mov
fstps
out
push
sub
sbb
push
xor
xlat
mov
push
push
add
gs
push
mov
xchg
pop
xchg
add
or
mov
addr16
jp
loopne
jp
ss
in
xchg
xchg
xchg
adc
jbe
xchg
mov
fisubl
mov
mov
mov
leave
in
pop
cs
int
ror
push
mov
cmp
and
and
notb
mov
ljmp
pop
rorl
testl
mov
clc
ss
std
xchg
div
imul
ljmp
es
push
inc
fisubl
cltd
mov
mov
stc
mov
pop
jns
adc
inc
dec
inc
inc
inc
sub
orl
sub
xor
add
xor
sub
sbb
mov
inc
ss
repnz
jo
adc
sbb
outsb
insl
push
add
push
xchg
nop
adc
ret
loope
outsb
gs
or
jle
out
jg
xchg
xchg
movsb
cli
cmpsb
lods
lods
mov
mov
cmpsl
lods
lods
cmpsl
cmpsl
sar
jmp
and
adc
cmp
cmp
fwait
mov
out
test
inc
roll
sti
clc
out
imul
jmp
repnz
fstpl
sub
clc
cld
and
clc
bnd
pop
rcrl
out
cmp
out
add
or
jns
ret
outsl
add
lret
mov
push
or
and
mov
jne
fs
sbb
xor
fsubp
mov
add
inc
inc
dec
sahf
push
pushf
ss
dec
xor
dec
dec
pop
cmpsl
pop
push
movsl
fcoms
sbb
insl
aas
out
adcl
inc
inc
push
push
pop
fs
push
add
and
fs
shll
cmp
pop
xor
ljmp
shl
out
push
cmp
insb
jg
pusha
xorl
cltd
xchg
fs
cmp
sub
jle
xchg
lcall
fucomi
divb
clc
adc
add
idivb
xchg
inc
or
adc
mov
out
out
ljmp
loop
mov
loopne
lods
mov
movsl
mov
dec
push
jne
push
rorl
loop
pshufw
shrb
in
inc
pop
pop
aaa
inc
clc
or
push
cmpsl
push
sti
mov
adc
and
sbb
outsb
outsb
prefetch
or
or
or
insb
push
add
sbb
xchg
sahf
jne
sbb
sub
cmp
loopne
pusha
fs
bnd
inc
dec
fs
mov
inc
jnp
xor
movsl
movsl
stos
sbb
es
inc
stos
add
fwait
aas
clc
lahf
cmp
mov
imul
addl
popa
jbe
ret
mov
out
cmc
or
mov
es
clc
add
sti
std
dec
pop
dec
and
push
das
inc
cmp
pushf
and
in
out
xlat
enter
mov
mov
xchg
movsl
popf
mov
fistpl
mov
mov
lods
push
clc
aas
pop
adc
std
rcl
add
add
dec
adc
cmpsl
scas
or
adc
push
or
je
inc
inc
pushf
or
or
int3
jg
pop
cmp
add
push
push
dec
dec
ss
aaa
dec
dec
dec
xor
pop
pop
add
inc
jo
cmp
outsl
cmp
inc
xchg
ret
leave
gs
push
popa
outsb
adc
jl
push
daa
push
jg
adc
lods
scas
lods
add
inc
scas
mov
cmpsl
xchg
push
xor
daa
cmp
mov
pop
mov
mov
fdiv
adc
xor
push
scas
clc
and
out
dec
push
jno
in
lock
in
lock
cwtl
insl
addr16
or
cmc
push
pusha
or
repz
movsb
and
lock
cli
jne
mov
mov
lock
leave
add
inc
das
pop
fsubrl
sahf
add
shlb
sub
test
push
std
push
imul
add
sub
cs
cmp
adc
jge
add
add
inc
sbb
sbb
sbb
mov
cs
pop
dec
adc
inc
pop
adc
push
cwtl
out
add
xor
addr16
pop
cmp
popa
clc
mov
sub
dec
xlat
sbb
ja
push
aaa
xor
mov
push
sub
jl
mov
enter
jecxz
in
xor
popl
dec
cli
dec
jb
lock
or
call
lock
adc
jecxz
ror
mov
cmpsb
xchg
dec
cmc
pop
divb
das
sbb
jbe
mov
jmp
mov
stos
movsl
pop
fidivrs
pop
dec
inc
dec
inc
inc
inc
rcrl
sbb
sub
inc
cmp
xor
in
aas
out
sbb
jo
mov
or
andb
mov
push
dec
xor
cmpb
mov
adc
and
outsb
dec
fdivl
mov
ds
sbb
or
pop
ret
js
ficompl
cs
adc
fidivrs
add
movsl
mov
dec
das
pop
dec
inc
pop
dec
cmp
xchg
push
pushf
call
lret
fsts
push
jecxz
push
fidivl
jb
add
inc
inc
xor
imul
xor
pop
jnp
out
add
pop
int
sbb
cmc
mov
mov
aaa
in
adc
adc
shll
pusha
or
lods
cs
das
add
push
js
pop
xor
inc
inc
mov
shlb
pop
inc
es
inc
xor
out
ljmp
cmp
ss
sbb
das
loop
dec
inc
sub
sbb
loopne
imul
adc
fcomip
add
push
xor
and
ss
dec
dec
dec
pop
sbb
lods
xor
pop
dec
or
mov
add
jae
fs
shr
jbe
jbe
push
pop
mov
adc
pushl
push
pop
adc
jmp
xchg
xorb
fildl
jnp
cmp
enter
push
enter
jg
ror
fcmovu
xor
fucomp
out
fucomi
fldl
add
fcmovnu
lret
rcl
fldz
and
and
test
int
xor
loope
into
movsl
cmp
push
scas
mov
sub
stos
or
insb
pcmpeqw
jmp
and
inc
sub
inc
cmp
mov
push
xor
inc
pop
sbb
andl
std
cmpb
add
sub
sub
push
fwait
and
dec
push
dec
inc
std
mov
lock
and
ds
xor
inc
push
adc
and
pop
pop
pop
les
aaa
or
or
add
ss
xlat
mov
dec
dec
push
mov
loopne
inc
xchg
push
mov
jnp
outsl
push
xor
mov
clc
cmp
cmp
outsb
jne
xchg
cmpsb
cltd
push
int
leave
les
pop
cld
add
out
repz
cld
rcl
ror
leave
mov
add
int
fstps
inc
cltd
mov
cmc
jnp
lret
es
int
xchg
fsubl
sbb
daa
bound
stos
cli
movsl
push
cmpl
push
xchg
push
iret
jae
pop
inc
inc
add
popa
inc
add
sub
outsb
fisttps
or
xor
mov
or
mov
jg
mov
mov
push
or
dec
mov
inc
sbb
mov
dec
jo
mov
dec
mov
push
or
add
adc
cmp
or
dec
xor
ljmp
lock
or
dec
xor
xor
push
gs
xchg
add
mov
jle
nop
call
mov
jbe
pusha
push
bound
xchg
xchg
xchg
mov
and
sbb
add
out
cs
ljmp
xchg
pop
ret
dec
mov
lret
push
cwtl
outsb
lods
sbb
rcrl
negb
pop
cmp
les
pop
outsl
mov
or
mov
add
pop
stc
xchg
iret
pop
inc
inc
add
pop
xor
or
inc
testl
pusha
jp
cmp
or
mov
add
pop
push
add
sbb
inc
pop
push
mov
xor
jg
sbb
xchg
popa
cli
mov
cmp
push
xor
adc
add
or
dec
xor
push
insb
dec
gs
fidivs
cwtl
pop
push
xor
add
aaa
dec
pop
mov
je
push
sub
cmp
outsb
xchg
ja
xor
mov
ds
ja
les
mov
xchg
std
mov
fstp
lret
cwtl
imul
cmp
pusha
add
fistpll
ret
mov
andl
scas
fimull
mov
and
add
popa
movsl
es
mov
sbb
shlb
je
cld
jle
das
mov
jmp
push
pop
inc
add
xor
inc
cmp
bound
push
adc
aam
rorl
in
out
and
or
daa
xchg
add
or
mov
cmc
push
dec
fs
push
push
insb
push
dec
inc
jg
loopne
into
and
in
mov
push
in
out
dec
dec
sub
sbb
daa
add
xor
sbb
loope
and
pop
pop
ja
jmp
cli
push
dec
and
push
and
cld
dec
inc
shll
dec
or
lahf
mov
scas
test
push
pop
xchg
imul
and
push
es
push
push
push
aam
enter
in
mov
sbb
and
add
cmp
andl
xor
clc
and
scas
int3
sbb
and
inc
lahf
cmp
adc
mov
jle
or
gs
push
push
jmp
add
sbb
and
loope
aad
inc
sub
cmp
orl
stos
adc
js
sbb
pop
or
push
and
pop
ss
or
dec
inc
inc
sub
in
pushf
and
sbb
sub
pop
push
add
out
cmp
call
sub
mov
pop
or
addb
mov
xor
xor
orl
dec
aaa
ds
push
xor
pop
fistpl
adc
mov
or
lcall
xchg
movb
ret
mov
fmul
fadds
int3
mov
cmp
cmpl
push
push
push
rorb
cld
xor
and
add
mov
nop
fsubl
outsl
stos
scas
stos
lods
stos
lods
stos
test
or
rorb
mov
jns
comiss
les
or
inc
cltd
cmpsb
lahf
mov
sbb
psllq
nop
popf
andb
es
loope
mov
push
sub
or
call
pop
adc
mov
dec
inc
pop
push
sub
cmc
es
or
inc
xor
test
mov
lcall
out
and
pop
push
add
aaa
sbb
popf
mov
and
add
subb
or
cmpl
push
stos
add
push
jbe
cmp
adcb
mov
pop
fisubrs
mov
int3
testb
and
and
mov
xor
sbb
mov
ja
divb
and
movsl
or
scas
cmp
mov
ret
pusha
add
sbb
sbb
pushf
je
mov
pop
or
cld
jle
adc
add
sub
pop
push
sbb
adc
cmp
ljmp
jl
or
push
or
sub
inc
inc
inc
inc
inc
push
sahf
cmc
mov
sub
rolb
push
and
test
push
adc
addl
mov
dec
pop
add
adc
sbb
add
jno
push
xor
jo
sbb
mov
and
xor
scas
mov
adc
cmp
xchg
scas
xchg
ljmp
imul
scas
mov
fcoms
lea
pushl
ljmp
sbb
push
xchg
or
movsl
ds
aad
push
push
mov
jge
adc
jo
adc
mov
xor
add
sbb
adc
test
mov
sbb
and
mov
lahf
stos
pop
adc
ds
adc
push
scas
fldl
inc
mov
add
outsl
xchg
or
cmp
ds
popa
inc
sub
lahf
in
sub
je
sub
fnstsw
sbb
lcall
xor
jmp
adc
add
pop
insb
pop
and
xorb
out
outsl
mov
test
or
adc
jg
pop
add
pop
aas
mov
xor
xor
xor
adc
js
cmp
lcall
es
mov
ja
xor
out
xor
movsb
or
and
sbb
jnp
test
cmpsl
lcall
jno
insb
and
sub
pop
add
daa
sarl
or
adc
or
adc
and
or
pusha
popf
adcl
sbbl
cs
repz
lcall
sbb
and
sub
and
out
cli
jg
push
adc
push
inc
xor
or
lret
sbb
mov
push
inc
pop
xor
push
lock
mov
sub
pop
dec
sub
push
cmp
adc
add
test
imul
in
xchg
and
and
imul
idiv
incl
mov
xor
iret
fmul
iret
fadd
ja
mov
testb
outsl
xor
mov
outsl
jle
stos
sub
mov
insb
inc
das
jbe
ret
jb
pop
or
or
and
rolb
mov
out
inc
sbbl
and
jnp
jge
in
test
push
test
inc
add
inc
idivb
mov
pop
add
or
mov
xor
je
out
cli
jg
sub
dec
mov
pop
jno
js
js
dec
sbb
lea
pop
pusha
repz
xor
and
mov
pop
or
or
add
mov
xor
or
and
cmp
aaa
cwtl
pushl
ds
cmp
lods
push
fdivrs
fdivl
sbb
sub
shrl
cmp
xor
inc
mov
jl
push
sub
ljmp
cmp
and
sbb
or
pop
dec
daa
mov
loopne
sbb
adcl
fimull
and
pushf
cs
and
xchg
pop
inc
sbb
push
inc
pop
sbb
cmp
sbb
in
jg
inc
pop
xchg
nop
and
lcall
aaa
xor
sbb
or
sbb
push
push
pop
xor
and
lcall
pop
scas
add
je
mov
insb
push
pushl
sahf
lahf
add
mov
popf
push
aaa
cltd
xchg
std
iret
repnz
xchg
cmp
movsl
push
pusha
iret
jae
insl
push
xor
ret
mov
outsl
sahf
xchg
mov
cmp
ds
inc
inc
inc
sub
inc
and
loopne
sbb
adc
mov
popf
cmpsb
or
pop
sub
adc
push
jne
sarb
sbb
dec
fiadds
xor
cmp
cmp
push
pop
push
xor
and
sbb
sbb
mov
pop
dec
cs
cmc
call
cld
add
push
and
cmpb
xor
add
add
ret
ja
decl
lcall
mov
arpl
mov
lock
arpl
fsubr
adc
notb
fmulp
lock
jg
push
mov
and
stos
sbb
jl
or
mov
push
movsl
bound
jg
push
push
iret
pop
mov
mov
xor
addb
inc
inc
inc
cmp
jmp
push
ret
pop
push
mov
rcrb
inc
adc
xchg
lcall
xor
sub
inc
xor
sub
je
je
clc
mov
sbb
dec
ja
push
ss
sbb
lcall
push
mov
pop
gs
dec
sub
call
js
jnp
or
insl
push
sbb
mov
test
xor
in
or
inc
pop
push
push
push
scas
mov
data16
mov
stos
xchg
push
mov
in
mov
imul
cmp
test
pushf
fucomi
pop
jmp
std
xchg
nop
push
fdivr
lock
sbb
cwtl
mov
in
aas
pop
mov
push
or
lret
sbb
xchg
or
lods
adc
xor
imul
psadbw
icebp
shrb
and
push
outsl
jp
sbb
sub
lahf
fwait
and
adc
mov
scas
inc
inc
sub
subb
dec
xor
sbb
dec
inc
cs
adc
daa
mov
push
push
rcrl
push
push
adc
pop
sbb
in
pop
pusha
adc
notb
es
dec
ja
aaa
jne
sahf
cs
fs
jle
jb
notb
mov
inc
test
data16
lock
mov
lahf
clc
jle
int3
lret
mov
xor
or
imul
stc
mov
xchg
xchg
fprem
std
push
jg
xor
rcrl
mov
out
popf
or
aam
int
les
test
loopne
or
stos
ret
sbb
test
push
iret
jns
popf
jg
mov
push
push
test
inc
inc
push
loope
push
shrb
sbb
orl
movsb
and
popf
or
add
sub
ud0
mov
cmp
push
shll
dec
xor
cmp
addb
test
and
jo
push
aaa
push
lea
mov
jbe
insl
dec
and
cli
fwait
inc
sbb
mov
add
pushf
aas
pop
outsl
lods
or
inc
sbbl
int
lret
ljmp
movups
in
in
stos
lret
fstp
fildl
mov
push
out
xchg
cmpsb
fcomps
loope
hlt
std
push
sti
pop
out
xor
jmp
push
xor
movsb
lcall
enter
lret
lcall
mov
andl
adc
xchg
push
andnps
push
sub
or
inc
js
dec
push
mov
sbb
pop
mov
movsb
push
cmp
jne
dec
testb
mov
add
stc
decl
test
dec
dec
dec
sub
in
aam
xchg
mov
dec
ss
push
cmc
xchg
or
and
ss
or
xor
pushf
test
mov
aas
jmp
hlt
stos
test
mov
call
pusha
jo
add
enter
lret
fcom
fcos
ja
rcl
aam
mov
and
mov
lock
fnstsw
in
jle
pushf
popf
in
shlb
add
std
outsl
cmpb
cltd
ds
lea
sahf
jmp
mov
push
movsbl
popl
jmp
jb
mov
mov
cs
lods
and
push
ficomps
clc
push
add
xor
movsb
mov
mov
pop
mov
or
push
sub
pop
inc
ss
jle
xchg
xchg
and
push
xor
cmp
jmp
dec
xor
sbb
push
insb
push
xchg
and
and
or
dec
cs
pop
xchg
arpl
adc
cmp
lock
psrlq
icebp
push
xchg
adc
ja
pop
leave
fcom
fcom
rcl
popl
ja
mov
cmc
xchg
out
lock
mov
sbb
xchg
mov
adc
mov
or
loop
daa
nop
cwtl
mov
ret
pop
cmpb
lret
mov
lret
push
mov
adc
mov
pop
add
adc
xchg
cmc
das
ret
mov
jge
push
sbb
sub
cmp
push
add
js
aas
sbb
dec
add
dec
sub
adc
mov
and
mov
out
fistpl
mov
push
mov
das
fwait
loop
sahf
mov
dec
das
fmull
je
xchg
sbb
clc
cmp
pop
push
pop
push
aaa
push
fiaddl
jp
cld
sbb
push
adc
or
call
loop
out
cmc
in
test
bound
outsl
dec
movsb
add
int
adc
jecxz
cld
mov
jbe
fucomi
out
mov
ljmp
fwait
inc
sub
add
lret
aas
cld
lcall
daa
or
mov
imul
mov
push
data16
mov
aaa
add
mov
push
movsl
push
pop
rolb
dec
push
dec
lods
sub
jmp
jle
sub
push
push
dec
sub
or
sbbl
sbb
push
xor
or
hlt
add
push
push
pop
pop
insl
adc
xor
adc
pop
pop
cld
cmpb
sbb
cmp
push
loopne
mov
cmp
ds
lahf
mov
shlb
popa
aaa
clc
xchg
fsubrp
call
mov
dec
and
popf
xchg
add
push
lcall
cmp
xor
or
in
mov
mov
push
mov
fcmovnu
mov
imul
decb
icebp
add
sbb
xchg
or
out
push
movsb
or
mov
ljmp
in
pushf
dec
aaa
sti
or
cltd
mov
lret
sarb
ss
pop
or
mov
pop
mov
rorb
fisubrs
mov
xor
movsb
test
enter
loope
and
sbb
test
add
or
dec
pop
loop
or
cmc
cmp
and
push
and
es
pushf
cmp
dec
and
pusha
adc
dec
push
dec
or
push
lcall
xor
mov
mov
mov
insl
push
dec
and
nop
outsl
mov
outsb
std
jg
daa
lea
jne
mov
cmpsb
xchg
pusha
aas
mov
inc
and
pop
int
ret
pop
add
fisubrl
out
mov
mov
test
pop
clc
popf
out
stc
enter
adc
lock
fnstcw
add
push
mov
lret
mov
cmp
popf
and
cwtl
mov
mov
add
enter
push
and
adc
cmp
sub
jae
int3
adc
inc
add
push
ljmp
orb
lock
add
push
fs
out
xchg
push
add
push
pop
add
rclb
xor
pop
fwait
xor
mov
lret
call
sbbb
lcall
outsb
pop
pusha
xor
ja
jne
popa
das
cmc
pop
cld
rcrl
push
lods
sbb
mov
cltd
outsl
cmp
fisttps
or
rolb
push
jecxz
loop
out
lock
cmpsb
cwtl
push
jmp
incl
mov
bswap
movd
repnz
fstp
in
xor
push
and
sbb
cmp
rcl
xlat
icebp
or
ret
rcl
adc
adc
mov
fwait
dec
out
and
test
dec
sub
out
in
shll
push
cmp
fsubrl
lcall
dec
xor
mov
pop
pop
pop
xor
dec
add
movaps
jo
add
jbe
loope
add
popf
push
mov
jb
jmp
xor
outsl
addr16
dec
mov
mov
arpl
loopne
cmp
mov
mov
cmp
push
das
xchg
lea
loop
sahf
or
sub
or
sbb
adc
push
or
mov
xor
and
lcall
call
icebp
fmul
mov
mov
xchg
ds
orl
out
add
sbb
adc
mov
xchg
mov
outsb
dec
inc
movsb
rcrl
sarb
ja
jp
dec
mov
and
imul
jecxz
sub
push
add
sbb
sbb
push
sub
adc
mov
cmp
push
push
adc
orl
gs
popa
adc
mov
cmpb
xor
add
pop
or
cmp
outsb
or
jle
in
popa
push
push
data16
ja
xchg
add
fistpll
xchg
ja
outsb
imul
or
aaa
xor
das
and
pop
and
push
mov
clc
cmpsb
xorb
mov
shlb
xchg
sbb
or
jo
jg
fidivl
pusha
test
hlt
sbb
fld
mov
push
cmp
cmp
ret
scas
cmpsb
ljmp
push
add
and
leave
in
shl
js
shlb
nop
mov
lock
push
mov
pop
ja
ficoml
xchg
adc
dec
sbb
pop
dec
xchg
mov
xchg
mov
adc
dec
and
cmp
inc
sbb
fs
addb
outsb
and
or
xchg
into
outsb
outsl
or
xchg
adc
sbb
xchg
add
and
xchg
add
arpl
cmp
decl
and
mov
add
sub
cmp
sbb
lahf
test
push
push
cltd
jbe
add
out
sub
ss
ljmp
popf
in
mov
xchg
aaa
and
les
cmp
test
mov
fcmovnu
or
ds
cld
in
and
mov
shl
rclb
rol
mov
or
adc
jmp
mov
sub
mov
call
mov
sub
es
pushf
call
dec
mov
xor
aaa
sbb
cmpl
xchg
mov
mov
popa
clc
es
cmp
adc
jb
cmpsl
test
outsl
je
jp
push
push
or
xor
ja
xchg
xchg
cmpsb
pop
and
xchg
outsl
bound
or
aaa
loopne
mov
call
nop
xor
jg
xchg
cltd
or
daa
lahf
in
lcall
cmpsb
push
ss
jecxz
jecxz
nop
push
push
mov
lock
pusha
mov
loop
in
mov
loope
xchg
fisttpll
std
ffree
lcall
ljmp
sahf
jmp
lret
lret
mov
and
and
fadds
or
shl
add
xor
ja
inc
rclb
add
push
mov
mov
hlt
xchg
sbb
jae
adc
popf
and
lcall
sub
adc
and
xchg
pushl
xor
and
adc
push
cmp
call
mov
loope
sti
lahf
lcall
push
jne
add
or
or
in
pusha
mov
cmpsb
sbb
push
or
xor
mov
popf
loop
push
es
arpl
pop
shll
and
mov
fnstcw
cmp
ljmp
js
push
shll
fwait
bound
repnz
imul
jnp
pop
mov
inc
jl
pop
cmp
push
in
inc
inc
xorl
adc
loop
roll
pushl
mov
imul
rclb
jns
adc
or
pop
cli
push
adc
and
mov
pop
adc
or
push
pop
pop
lock
pop
adc
mov
dec
mov
popa
gs
pop
adc
mov
loopne
hlt
and
jne
je
push
adc
scas
ret
xchg
adc
out
xchg
xchg
movsb
add
lock
cmpsl
cmpsb
adc
lock
mov
stos
lahf
mov
nop
arpl
mov
lock
lahf
mov
scas
xchg
mov
or
shlb
sub
adc
push
fcmovne
cwtl
pusha
fwait
test
jmp
jmp
arpl
stc
std
or
out
push
ret
lret
mov
cmpsb
incl
jnp
push
push
jmp
daa
sbb
shl
stos
or
and
lahf
xor
adc
imul
pop
or
push
mov
lea
mov
cmp
inc
sahf
jnp
add
mov
and
mov
jmp
adcb
mov
dec
add
push
xchg
cmp
dec
jbe
or
or
xchg
xchg
cltd
xchg
jo
push
sub
clc
add
mov
adc
jmp
loop
cmc
mov
xchg
sbb
mov
mov
orb
in
jmp
push
adc
testb
cld
nop
aas
hlt
test
add
pushl
lods
stc
repnz
out
fxch
mov
mov
fdivp
ja
adc
mov
mov
cwtl
rcr
in
pop
mov
rcll
loopne
fistpll
fidivs
mov
hlt
stos
pop
jg
add
push
xor
mov
push
call
test
mov
sub
daa
call
andb
addr16
xchg
shll
xor
inc
lahf
pushf
fwait
shl
shll
outsb
sbb
adcl
add
mov
fwait
xchg
cmpsl
mov
mov
push
mov
push
fstps
out
sahf
test
pushf
mov
mov
les
lock
ljmp
fistpl
sbbb
push
in
aaa
mov
lock
lock
aas
adc
movsb
imul
xchg
mov
dec
in
mov
popf
dec
pmulhw
loope
daa
mov
jp
xchg
repnz
jle
popa
pop
data16
pop
and
popa
dec
aaa
dec
aaa
ss
aaa
xor
add
xor
int3
push
sbb
add
and
sub
add
or
popa
cmpsl
pop
popa
jp
push
add
jp
pop
unpckhps
jecxz
insb
and
xchg
push
adc
mov
pop
push
push
xchg
nop
add
or
mov
cmp
xchg
xchg
cwtl
mov
xor
push
add
or
jno
out
in
in
out
push
and
sahf
xchg
ljmp
stc
incb
std
push
adc
mov
test
repnz
fbld
mov
cld
int
fwait
out
movsb
mov
loope
mov
and
shr
jno
mov
setae
push
xor
pop
data16
add
lea
pop
xor
push
pop
adc
sub
fcomps
adc
push
data16
sbb
pop
push
adc
outsl
or
jne
push
xchg
add
xchg
and
sti
jo
jl
sbb
add
pop
daa
sbb
xchg
cltd
sbb
sahf
mov
adc
add
push
add
push
sbb
xchg
mov
xor
dec
pop
or
in
aas
push
push
int
in
or
sbb
out
dec
push
std
pop
inc
imul
mov
sbb
cld
or
out
loopew
cmp
rcr
cwtl
add
jo
fcmove
sbb
ljmp
jns
cwtl
xor
push
cmp
nop
clc
lods
bndstx
mov
or
and
clc
or
clts
addr16
push
or
ljmp
adc
addr16
ret
lock
outsl
xchg
add
lret
sbb
push
add
jbe
xchg
push
ret
dec
dec
xchg
and
icebp
push
jmp
mov
mov
and
mov
add
xor
adc
mov
out
or
pop
cmp
nop
jmp
sub
and
push
loope
pusha
shl
testb
add
repz
or
dec
in
int3
sub
mulb
bound
xorb
lret
add
or
in
in
scas
daa
xor
mov
adc
cmpsb
movl
shrl
int
push
data16
out
cmp
shrl
adc
add
outsb
insl
or
outsl
outsl
clc
xchg
and
add
xchg
pop
adc
adc
or
cs
pop
mov
cmp
ret
ret
pop
or
add
add
add
add
or
shrl
xchg
or
xchg
out
es
fxch
mov
arpl
hlt
jo
add
div
repnz
ret
add
out
cmp
divl
jle
or
jmp
adc
test
cmpsb
loope
mov
aas
mov
sbb
icebp
stos
mov
mov
or
add
lods
movsl
cwtl
jo
push
dec
inc
in
xchg
jl
stos
jmp
mov
xorb
and
mov
sub
mov
sub
mov
xor
inc
mov
push
inc
or
jo
xor
jb
mov
popf
mov
in
cmc
out
neg
lock
or
incl
mov
std
or
popf
cmp
or
push
outsb
push
push
imul
mov
pop
and
lcall
sbb
sub
out
mov
xor
xor
xor
or
rdpmc
xor
ss
aaa
dec
ss
dec
or
dec
dec
dec
xlat
int3
mov
dec
pop
dec
push
dec
push
add
add
es
xor
ds
push
push
push
in
fnstenv
push
push
add
sbb
je
cmp
push
pusha
add
arpl
add
add
popf
jnp
imul
imul
das
mov
add
adc
popf
push
enter
or
bound
jg
add
xor
pop
into
adc
adc
sbb
adc
ja
or
adc
push
sbb
in
push
push
push
push
adc
push
add
in
xchg
add
add
pop
mov
jnp
sbb
and
and
sub
and
add
out
std
divb
xor
or
xor
xor
std
cmp
aaa
ds
add
jnp
pop
fs
add
dec
or
mov
add
add
mov
lds
xor
iret
into
out
mov
xor
movl
dec
repz
fmuls
or
fadds
out
imul
add
icebp
or
repnz
xor
dec
push
add
incb
fstps
dec
xchg
push
aas
inc
xchg
or
push
sbb
mov
cmp
cmp
jne
js
dec
sub
or
aas
test
add
dec
sub
dec
add
js
push
ss
int
addb
xchg
inc
mov
mov
insb
xchg
dec
xchg
dec
insb
ss
int
dec
pushf
push
sahf
push
mov
data16
cmpsb
push
test
stos
pop
lods
pop
mov
insb
ss
pop
mov
mov
mov
int
mov
bound
gs
push
int3
imul
je
mov
jp
jp
inc
outsb
cmpsl
xor
sub
jl
fnstcw
fnstcw
xchg
ss
int
xchg
mov
lea
lea
nop
pop
data16
insb
xchg
pop
xchg
pop
xchg
pop
pushf
or
stc
mov
push
stos
lods
mov
fldcw
cmpsl
mov
scas
mov
mov
lea
or
cwtl
sub
or
fnstenv
scas
ss
aam
push
or
fcmovne
mov
insb
aaa
or
gs
addr16
push
int
imul
insl
pop
jl
jo
xlat
jno
jecxz
jb
out
je
out
inc
add
push
call
in
aam
or
outsl
div
out
add
call
add
in
fdivr
repnz
js
cld
int3
push
push
int
pop
jo
sahf
mov
mov
inc
ret
add
mov
int3
mov
sarl
mov
xchg
xchg
outsb
xchg
sahf
int
repz
sahf
clc
cmpsb
cli
lods
sti
mov
fsubrs
ss
rcr
fcmovnb
faddp
push
sub
sub
jecxz
out
push
out
es
imul
cs
out
filds
push
int3
add
lock
inc
repnz
faddl
scas
loopne
lret
filds
div
fsubp
pop
cli
pop
jmp
pop
cld
in
pop
call
incl
add
or
mov
es
and
xor
sbb
push
lcall
sbb
push
adc
add
jns
mov
aas
jp
xchg
jp
jne
pop
add
add
sbb
popf
mov
pop
es
sub
add
pop
maxps
cmp
lea
xor
cmpsl
mov
push
lea
dec
dec
xor
add
add
inc
sbb
pop
pop
or
push
jbe
dec
xor
pop
mov
or
pop
or
pop
jl
pop
pop
aad
xor
or
mov
pop
and
and
ss
push
pop
pop
aas
cmp
fstl
and
out
pop
or
outsl
pop
push
aas
aad
divl
or
pop
xor
aas
adc
adc
stos
dec
push
in
push
nop
or
jns
mov
jbe
pop
add
and
stc
or
push
das
dec
add
pushl
mov
add
push
mov
pushf
std
push
push
dec
dec
dec
dec
pop
add
jae
add
mov
push
push
push
push
arpl
fnstcw
dec
add
pop
pop
push
mov
arpl
pop
jb
and
ss
mov
lcall
sub
xor
pop
test
out
dec
push
daa
add
or
dec
jae
jne
xchg
mov
les
leave
mov
sbb
pop
jb
or
mov
daa
fadds
sub
sbb
outsl
push
testb
push
ja
inc
pop
sub
jle
mov
outsl
data16
pop
inc
pop
loopne
mov
sbb
pop
out
mov
ja
inc
inc
pop
mov
or
pop
ja
inc
inc
add
dec
add
test
add
or
pop
sbb
add
aad
outsl
jnp
jle
or
add
aas
pushl
mov
mov
popf
push
jnp
pusha
ja
pop
cmp
cmp
ja
lret
fidivrl
push
bound
pop
add
repnz
xchg
xchg
xchg
cwtl
lcall
pop
cmp
mov
pushf
mov
fwait
cltd
xchg
xchg
xchg
mov
add
xchg
lods
addb
add
cs
imul
addr16
push
inc
pop
repnz
push
fidivrl
add
pop
arpl
pop
push
inc
xchg
mov
pop
push
stc
pusha
pop
pop
push
aas
add
mov
pop
push
pop
dec
cmp
xor
push
dec
pop
push
pop
dec
xor
lods
xor
inc
into
out
nop
aaa
dec
aas
addb
icebp
jg
pop
adc
add
pop
pop
add
rolb
xor
mov
mov
mov
add
add
ret
xchg
aad
cmpsb
rcr
add
jg
call
cmc
inc
add
and
mov
xor
mov
lcall
decl
mov
rorb
fiadds
push
in
fucom
pcmpeqd
lock
sarb
xor
es
or
jl
lret
shrb
adc
stos
cltd
mov
ja
push
inc
mov
das
lods
push
pusha
iret
jmp
push
incl
push
push
sbb
adc
ss
add
adc
pop
push
or
push
or
int
adc
sbb
pop
cmp
cmp
cmp
push
insl
ss
int
inc
sub
dec
xor
push
int
data16
cmp
inc
pop
add
dec
push
add
insb
ss
pusha
dec
dec
push
push
imul
pop
insb
add
push
popa
jge
fs
jnp
sbb
je
pusha
jns
inc
add
dec
add
fldcw
push
add
pop
add
pusha
mov
popa
add
outsl
mov
es
add
addb
test
outsb
xchg
add
aaa
mov
jp
add
jl
sbbb
mov
out
mov
mov
rcl
mov
mov
mov
enter
fadd
lret
mov
int
mov
add
add
insb
add
add
add
mov
mov
mov
insb
add
mov
ss
int
mov
add
int3
xchg
rolb
ret
add
mov
insb
ss
add
add
add
xor
add
add
add
fwait
int
ror
rolb
add
add
add
mov
insb
ss
add
add
add
ss
int
add
add
add
add
add
data16
insb
add
add
add
add
insb
ss
int
in
call
add
int
mov
add
add
add
add
add
insb
ss
repnz
add
add
add
fwait
int
mov
testl
cli
add
subb
add
mov
mov
movsl
in
in
add
jge
mov
add
pop
xor
addl
das
inc
dec
imul
dec
inc
das
das
inc
add
outsl
call
dec
dec
push
sti
mov
imul
push
xchg
sbb
inc
cmp
inc
inc
jae
pop
out
cmpsb
decb
mov
ja
jl
je
jl
jge
addl
mov
adc
pop
push
add
dec
jl
nop
pop
je
bnd
icebp
dec
mov
push
jl
dec
sub
jb
dec
sti
decl
jl
jp
jp
adc
pop
cmpl
ret
clc
jg
js
jle
cmpl
imul
sub
pop
pop
pop
pop
popl
pop
jbe
addb
mov
jle
xchg
adc
pop
and
lock
rcl
ja
test
bound
dec
cmp
pop
mov
ja
addb
xchg
push
cmpb
cmpl
bound
adc
mov
pusha
mov
xchg
cmpl
ja
pop
inc
adc
js
out
imul
dec
bound
test
push
mov
jbe
imul
mov
pop
inc
adc
add
std
jg
jmp
push
push
push
imul
sub
pop
push
dec
dec
push
pop
data16
push
mov
cmp
pop
dec
and
std
pop
mov
push
jbe
dec
daa
push
sbbl
sbb
bound
imul
mov
jne
pop
inc
adc
jl
dec
push
push
mov
jle
or
dec
push
pop
sbb
pop
je
imul
fbld
xchg
jne
es
je
or
xchg
clc
pop
les
adc
insb
and
mov
test
orl
mov
jle
push
push
or
fisttpl
or
sbbb
mov
push
dec
es
subb
cld
push
pop
ja
nop
lea
mov
and
or
pop
je
xchg
or
imul
jbe
pop
adc
outsb
jge
mov
ja
sbb
sbb
sar
jo
dec
outsb
jl
xor
cmp
insb
jnp
xchg
mov
xor
mov
jp
or
cmp
sbb
lds
push
or
jno
pop
and
push
push
inc
ret
pop
gs
cli
dec
jbe
push
daa
push
xchg
adc
ret
push
imul
arpl
adc
jne
mov
and
pop
inc
cmp
sub
outsl
outsl
aas
push
cmp
jl
mov
push
jne
jle
mov
push
sub
push
addb
ja
stos
outsl
je
jle
xor
test
hlt
rorl
mov
je
insb
push
sub
push
call
fcompl
cmpsb
mov
pop
mov
push
mov
jl
cli
je
ja
xchg
sbb
cmpsb
bound
xlat
mov
jge
sub
sbb
dec
xor
movsb
push
jle
scas
push
fs
pop
push
ja
jb
cmpsb
int
jbe
test
addl
adc
fiadds
add
jge
cmpsb
xchg
push
in
gs
popf
lret
push
insb
xor
je
fs
jle
out
outsb
pusha
mov
jge
or
jg
ret
inc
xorb
sahf
and
sub
sub
mov
xor
xchg
jo
ja
xor
addr16
push
out
mov
jle
je
inc
mov
add
in
repz
push
add
pop
dec
add
or
add
pop
data16
mov
adc
adc
or
add
jne
add
jnp
sub
jl
add
add
pop
sub
inc
imul
sub
fbstp
dec
js
sub
mov
and
insl
stos
add
outsb
xchg
add
insl
mov
imul
push
insb
push
outsl
push
pop
mov
pop
jae
je
pusha
push
arpl
sbb
sbb
movsl
pop
dec
sbb
or
mov
ds
cmp
add
gs
mov
cli
dec
inc
add
repnz
testb
jne
js
jge
andl
push
sbb
mov
and
fisubrs
pop
xchg
les
push
outsb
ret
pop
jb
pop
inc
int3
data16
dec
mov
in
popa
lock
lock
mov
mov
cmp
fmull
mov
dec
nop
jnp
stos
push
pop
xchg
dec
and
mov
imul
addb
fwait
int
xrelease
je
ja
js
cmp
jg
nop
push
jp
xchg
sbb
mov
jle
xchg
xchg
jae
mov
or
push
out
dec
imul
push
xchg
push
outsb
xchg
add
cwtl
lcall
add
adc
add
jge
sti
mov
mov
xchg
push
xchg
into
test
xchg
push
mov
fwait
mov
fidivrs
push
mov
sahf
idivl
mov
nop
lahf
mov
dec
mov
mov
test
lcall
push
lahf
test
dec
mov
mov
stos
push
lods
push
movsl
mov
lea
or
push
pop
lods
mov
mov
scas
fsubs
mov
add
mov
mov
mov
push
aad
lcall
add
jbe
jle
mov
mov
outsl
mov
mov
push
mov
dec
mov
lds
cli
sub
cs
and
push
ret
out
insb
fcmovnb
leave
push
leave
push
ret
int
iret
dec
jnp
mov
push
enter
push
sarb
rcll
lret
lret
into
out
sub
push
insb
jle
rolb
add
fst
cmpsl
fnstcw
fmuls
fcmovu
jecxz
fsubr
sarl
int
call
loopne
in
push
in
fldcw
lock
hlt
div
mov
js
call
inc
pop
leave
rcrl
lret
mov
add
cmpsb
pusha
push
push
negb
dec
scas
fmuls
test
push
lahf
push
cli
mov
adc
fnsave
fstp
outsb
sbb
loope
out
push
loop
int3
adc
dec
aas
icebp
cmc
repz
add
nop
dec
leave
sbb
fwait
sbb
adc
pop
mov
jecxz
mov
fnstsw
movl
in
pusha
pop
stos
fstl
out
shll
xor
out
fstpt
mov
outsl
pop
fcmove
xchg
sbb
ror
popa
mov
pop
add
fs
xlat
fmul
ret
popa
call
or
aad
lds
test
xchg
mov
aas
pop
mov
in
pop
loope
fcmovbe
lret
mov
pop
fadds
repnz
loopne
aam
ret
mov
add
in
rol
mov
lods
cmpl
add
fwait
and
call
stos
xchg
test
mov
add
lcall
sahf
jmp
xchg
mov
int
dec
addb
mov
iret
add
mov
hlt
mov
push
add
bound
add
jle
mov
rcrl
mov
out
orb
cwtl
insl
pop
stos
std
call
or
xor
cmp
sbb
jns
sbb
jg
popa
pop
sub
jg
and
ss
lcall
pop
and
sub
and
add
cmp
push
xor
cmp
dec
push
jbe
jne
imul
sub
cmp
inc
pop
repz
dec
popa
push
pusha
orb
inc
push
pop
push
or
pop
dec
jo
jns
dec
jnp
andl
in
mov
cld
roll
insl
mov
adc
std
fnstcw
pop
push
movsb
pop
popa
pop
dec
movsl
insl
js
pop
jp
movsbl
push
fdivr
jbe
jbe
pushf
lock
and
pop
andb
outsb
jg
or
inc
inc
inc
pop
xor
call
out
pusha
push
lods
pop
push
and
pop
pusha
pop
push
mul
stc
mov
or
jnp
jp
push
mov
pop
push
mov
and
or
jbe
add
sti
js
push
mov
push
pop
push
sub
call
jae
push
fwait
push
pop
pop
pop
sub
ja
nop
sub
stc
jb
push
add
fcomps
add
imul
les
dec
add
pop
pop
jns
pop
les
add
sub
push
fimuls
push
scas
pop
add
add
or
stos
push
push
jle
dec
push
dec
add
pop
add
lods
jmp
jo
push
fs
jl
add
iret
add
js
add
add
ror
dec
stc
jle
xchg
adc
stos
add
sbb
dec
push
xor
mov
daa
add
mov
fildl
stc
leave
lret
push
mov
rcrl
psubq
sbb
mov
sub
adc
loopne
out
sub
and
add
stc
and
pop
das
pushf
cld
cltd
cmp
push
add
push
ret
in
popa
bound
out
or
pushw
inc
add
jns
jo
push
jbe
fildl
adc
fildl
push
push
add
cld
inc
add
add
fmull
clc
add
xchg
sub
adc
adc
add
out
xor
and
add
lahf
repnz
and
neg
mov
sbb
add
ss
inc
es
out
sahf
inc
push
push
push
arpl
jae
inc
mov
shrl
cmp
mov
mov
xchg
fs
arpl
fdivrl
int
dec
shl
jae
call
pop
inc
out
mov
arpl
jecxz
adcl
inc
jns
fwait
int
inc
mov
mov
xchg
stos
xchg
add
sub
mov
mov
push
test
mov
rol
mov
xor
dec
lret
aam
ret
int3
and
xor
into
mov
fcompl
add
jecxz
in
orb
repz
repz
cmp
ds
push
push
hlt
pop
hlt
in
add
sti
cld
idiv
add
or
inc
push
test
adcl
in
fidivl
add
add
add
addr16
sub
or
inc
sub
or
cmp
cmp
dec
dec
dec
dec
dec
dec
inc
out
ja
cld
inc
inc
cmp
pop
push
push
popa
sub
sub
ds
cmp
inc
push
push
push
and
je
inc
cmp
scas
stos
pusha
and
pop
push
jmp
aad
aas
add
sbb
pop
adc
or
or
or
mov
decb
mov
cmp
inc
inc
daa
sub
sub
pop
or
dec
adc
cmp
ss
push
xor
fildl
shr
inc
push
sub
pop
or
dec
pop
cmp
loopne
mov
pop
xor
xor
mov
add
aas
inc
daa
sbb
and
mov
sbb
sbb
and
sarb
mov
sbb
test
pop
cmp
mov
sbb
mov
push
and
aas
inc
mov
cld
push
push
mov
cmp
jnp
sbb
add
or
ds
pusha
sbb
sbb
das
add
mov
pop
inc
dec
add
adc
pop
filds
dec
pop
inc
sbb
jo
roll
dec
push
and
add
mov
pop
push
push
adc
or
pop
fcom
or
push
push
and
cmp
xor
push
add
push
push
and
fistps
jmp
pop
push
push
push
mov
jg
pop
push
push
pop
pop
shr
push
push
pop
pop
mov
mov
pop
pop
inc
pop
sbb
pop
xor
aad
in
shlb
pop
scas
add
nop
pushf
ret
pop
pop
outsl
xor
mov
pop
adc
aaa
add
xor
add
xor
add
xchg
adc
pslld
xchg
fcomip
jg
cmp
add
and
dec
xor
add
xor
xor
inc
push
add
out
push
xor
add
push
inc
add
adc
dec
add
sub
add
pop
add
cmp
add
inc
mov
xor
pusha
test
into
ss
js
add
inc
mov
es
inc
dec
push
dec
ss
stc
fbstp
push
pop
addr16
popa
add
pop
bound
fidivl
jge
pop
push
pop
imul
cmp
jp
cld
add
inc
add
push
pop
push
push
jo
fistpl
add
ss
insl
imul
inc
mov
add
sbb
insb
push
mov
add
sbb
sahf
xor
add
pusha
sti
xor
push
fwait
cmp
inc
fsubrs
fcomi
sbb
cs
push
ds
push
push
xlat
push
es
pop
mov
repz
ljmp
xchg
imul
jbe
out
jl
mov
mov
popf
add
outsb
lods
into
mov
cmpb
sti
mov
push
add
xchg
pop
pop
sbb
push
or
pop
cmp
xchg
or
add
cmp
testb
scas
add
mov
or
fistps
add
add
dec
xor
adc
push
cs
popf
add
pop
xchg
add
insl
add
jbe
sbb
mov
push
sub
add
mov
ja
daa
cbtw
jbe
xchg
into
repz
movsl
mov
mov
das
dec
scas
aaa
pop
mov
cmp
dec
push
lahf
cmp
mov
inc
push
out
pop
jle
dec
test
je
push
jnp
in
outsl
jg
outsl
mov
push
jge
add
mov
pop
add
or
loop
add
mov
inc
ret
mov
mov
jl
dec
pop
ret
jae
add
mov
incl
push
xchg
push
add
push
add
mov
push
cmp
cmp
mov
mov
adc
push
inc
fcom
outsb
sub
test
jo
mov
mov
pop
fwait
mov
push
sub
dec
orl
test
push
xchg
mov
lds
pop
movsb
arpl
add
outsl
ss
aad
ds
fildl
push
mov
addl
xchg
daa
mov
insl
mov
xor
add
loope
sub
es
push
mov
pop
mov
pop
xchg
xchg
add
lret
rcrl
test
lods
fisubrs
mulb
repnz
add
divb
jo
fdivl
imul
jmp
mov
push
jne
stc
add
sub
es
fmulp
mov
push
shl
add
rorb
sub
std
add
enter
cmp
out
int
cs
add
in
repz
outsb
rcl
inc
inc
lods
popa
ror
out
clc
xchg
in
push
push
ret
jmp
mov
mov
jle
sahf
mov
cmpsl
lods
push
mov
mov
loop
sbb
push
testl
aad
jg
fnstenv
push
cmpsl
fcoms
xchg
out
sti
rcr
add
push
mov
out
into
repz
jge
repnz
sbb
sbb
push
sbb
add
add
add
add
add
or
push
ficoml
add
and
sub
lods
sbb
push
fdivs
push
add
sub
insl
imul
mov
adc
lcall
imul
sbb
mov
add
push
sbb
insl
mov
in
sub
insl
sub
cmp
jg
jp
sub
imul
jbe
imul
aad
mov
and
les
add
out
filds
insl
outsl
jns
test
data16
divb
jle
and
add
nop
push
popf
ss
sub
push
mov
dec
inc
pop
inc
pop
divb
mov
adc
cmp
loope
mov
cmp
push
mov
outsb
jo
or
and
and
xor
out
adc
std
jge
outsl
sub
pusha
push
fidivl
cltd
mov
mov
add
insb
jnp
mov
add
sti
pusha
ja
mov
cmp
jbe
cmp
mov
and
adc
outsl
mov
iret
mov
jl
ror
jbe
push
add
add
jnp
lock
mov
decb
loopne
sbb
and
pusha
xor
add
fcoml
sbb
and
lods
pusha
sbb
push
mov
fdivrp
scas
sbbl
mov
test
lds
imul
and
loope
out
cmpsb
out
xchg
sub
and
mov
test
mov
jne
sahf
push
add
shr
push
add
sub
sbbl
sahf
dec
jns
insl
into
ljmp
jge
in
push
and
into
imul
cld
and
stos
adc
sbb
pusha
imul
es
pusha
sbbb
dec
and
popa
sub
jns
lods
or
cld
mov
insl
sbb
enter
xchg
roll
or
jl
test
adc
add
push
jp
pop
jno
jne
outsl
imul
hlt
out
sub
xchg
sbb
dec
mov
clc
subb
sar
jbe
add
push
sbb
shrl
and
sub
cli
clc
inc
outsl
adc
push
ret
sbb
sub
pusha
or
jo
dec
mov
fsts
jg
jmp
ret
sar
ret
loop
test
pop
mov
movsl
add
outsb
mov
mov
testl
mov
add
daa
cmp
les
outsl
mov
loop
add
push
pop
mov
cmpl
das
in
lock
xchg
pop
imul
sbb
pop
jle
jle
jno
mov
les
and
add
cmpl
scas
add
call
xor
cmp
pop
bound
and
imul
jle
and
jge
lods
jo
mov
lods
jl
jo
fs
fists
sarb
cld
xor
jge
jl
jle
inc
ret
xor
jle
or
das
cmp
dec
in
cmpsl
cmp
xor
pi2fd
push
adc
inc
dec
dec
pop
pop
pop
push
push
pop
in
out
les
loopne
pop
add
popl
pop
jp
xor
movb
cmp
leave
mov
push
push
cmp
loop
decl
decl
dec
push
out
rorb
or
addr16
lods
and
rcl
mov
or
xor
stos
leave
out
lret
movsb
xor
or
cmp
jbe
dec
inc
or
push
dec
push
orb
mov
jle
clc
push
cli
cmc
jl
aad
mov
daa
cs
fidivl
pop
xchg
frstor
ret
mov
or
popf
sub
dec
roll
mov
aad
cmc
aad
mov
outsl
jle
sahf
mov
cltd
cs
pop
add
cmp
or
push
enter
dec
inc
cmp
aad
push
sbb
ret
js
xlat
mov
mov
jg
fabs
mov
jno
and
cmp
jmp
or
inc
cmp
pop
cli
dec
dec
adc
addb
xchg
jl
call
and
push
or
frstor
and
es
or
or
dec
in
aas
int3
fnsave
adc
orl
mov
cmc
div
aad
and
sbb
jl
lret
mov
aad
sarb
addb
sub
cmc
xlat
cmc
outsl
mov
and
sub
and
mov
jg
jg
mov
jg
sbb
push
orb
pop
imul
mov
orl
lods
add
lods
jl
call
imul
sub
imul
cld
clc
add
roll
fistpll
test
xlat
xlat
add
scas
jle
jge
sbb
lea
rol
mov
cmc
jp
pop
test
jae
cli
inc
adc
xorb
pop
mull
subb
add
popf
mov
loope
inc
mov
sbb
add
sub
fildl
scas
test
mov
roll
mov
call
fs
mov
fstp
pushl
add
adc
jle
subb
stc
pop
es
jg
clc
push
adc
and
mov
dec
icebp
mov
imul
fs
andl
xor
adc
add
insb
jg
cli
std
fistpll
pusha
and
rcll
andl
cs
mov
sti
addl
in
jle
add
jle
inc
shll
sbb
out
sar
xchg
jnp
mov
and
jno
mov
fsubp
addb
aad
sahf
mov
int
pop
fsubrl
addl
fucomp
ljmp
sub
jb
enter
loopne
cli
sti
cmc
int3
stos
jo
or
add
in
frstor
push
inc
cld
jle
gs
fdivrl
shr
or
jg
aad
popa
xchg
sti
cli
in
aad
call
pusha
sub
iret
addr16
gs
jle
mov
xchg
jmp
loope
clc
call
mov
stc
sti
pop
mull
sarl
cli
ret
jl
andl
clc
faddp
jge
mov
sti
jle
outsb
xchg
sti
adcl
addr16
xchg
fs
addr16
xchg
ss
rcr
insb
popa
xchg
cld
jle
stos
lret
ret
jle
mov
idivl
testl
test
ret
pop
push
jge
dec
cli
pop
jg
repnz
cld
push
dec
in
adc
xchg
mov
mov
xlat
fnsave
add
jle
adcw
jecxz
mov
sbb
adcl
push
adc
jns
jle
lods
fwait
jle
mov
xchg
cmpl
idiv
sub
jne
jg
ret
sbb
mov
sbb
or
loopne
jge
ja
inc
icebp
mov
mov
jp
pop
fsts
sub
sbb
xor
jg
dec
sti
or
add
push
jge
es
loopne
outsl
and
sub
call
flds
cwtl
xchg
xor
fstl
call
mov
mov
in
dec
mov
add
repnz
dec
jle
sti
sbb
xorb
std
lds
jns
lods
add
jp
out
out
jg
xchg
jle
mov
xchg
lret
jmp
push
lods
mov
pusha
mov
addl
jg
popa
mov
idiv
arpl
test
or
fs
xchg
mov
push
fnstcw
cwtl
push
fnstsw
popa
arpl
cli
lds
ret
aaa
add
xchg
call
xor
jp
incl
jbe
mov
fadds
jg
rorb
lods
in
pushf
repnz
adc
jge
jle
or
idivb
clc
lods
outsl
enter
cld
and
jg
ret
xchg
ss
push
jge
jl
cmp
cmp
jns
popf
mov
or
rolb
push
sti
js
jl
jge
sti
xlat
ret
jl
add
es
jl
int3
add
push
orl
into
jg
movl
jge
gs
mov
js
push
sub
outsl
icebp
xlat
jo
iret
lds
iret
or
out
insl
jns
clc
shrb
push
xlat
jo
test
ror
subb
pop
mov
jnp
cmc
lret
jle
out
fwait
subl
aam
add
rcl
adc
pop
mov
out
lds
shr
mov
sbb
ret
addb
stos
test
cmpl
push
or
jle
call
mov
sbb
rolb
fimull
jle
push
lret
ret
ret
ret
sbb
add
lret
cmc
xor
jp
clc
je
in
pop
mov
jl
subl
add
jbe
movsb
mov
adc
icebp
adc
mov
jo
jmp
add
loopne
mov
add
mov
rolb
dec
out
add
repnz
pop
in
push
xor
mov
cmpl
push
xchg
and
mov
inc
ds
xor
push
xchg
xchg
push
jnp
and
addl
fwait
in
pop
jb
mov
add
arpl
add
in
add
cltd
sub
adc
jmp
jo
push
inc
or
nop
aas
mov
inc
adc
jae
add
sar
gs
add
ffree
lahf
dec
adcb
arpl
mov
dec
ss
pop
pop
inc
inc
mov
stos
mov
sbb
push
jbe
and
fwait
data16
sbb
sbb
add
xor
fnstsw
or
cmp
jns
rcll
jae
sbb
push
xor
xor
cmp
aas
cmp
xor
add
inc
push
add
cmp
ds
mov
call
xor
cmp
add
dec
pop
ds
lods
fbstp
aaa
adc
pop
dec
pusha
push
push
add
push
insb
fcmovnbe
lcall
dec
and
daa
pop
push
aas
mov
aas
out
or
push
push
dec
cld
bound
jp
or
jbe
pop
ror
outsb
fwait
je
jg
arpl
add
inc
mov
mov
mov
or
dec
inc
push
dec
push
dec
push
push
fcompl
push
push
pop
pop
add
pop
fs
insb
pop
push
inc
push
popa
push
push
arpl
pop
pushw
dec
xor
arpl
jne
add
fs
insb
mov
imul
add
jb
jae
je
je
fucomip
add
cmpl
jp
out
mov
mov
jnp
push
xchg
add
jb
push
jl
fwait
out
fcomip
jb
add
ss
mov
fwait
and
pushf
dec
xchg
or
mov
push
cld
mov
into
lahf
scas
mov
mov
imul
xchg
jbe
mov
popf
shlb
jnp
jge
gs
and
cs
sti
mov
push
fsub
push
xchg
outsl
iret
fs
or
leave
rcl
push
addb
xorl
xchg
inc
push
mov
mov
pop
mov
push
cmpsb
xchg
push
push
pushf
cwtl
xchg
mov
xchg
push
sahf
add
cltd
mov
in
pushf
mov
scas
add
add
mov
insl
xor
test
push
stos
movsb
lods
movsb
aad
dec
jnp
push
scas
stos
mov
add
rcr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmpsb
mov
mov
das
fdivs
mov
shll
sbb
ret
ret
cmpsb
mov
mov
lret
scas
and
enter
sub
into
into
into
dec
mov
lret
add
into
int
push
ror
fisubrl
stos
std
ror
add
ror
push
shr
ror
cs
repnz
int3
rcl
testl
adc
xlat
roll
mov
add
add
aam
aam
imul
dec
inc
fcmovu
mov
pop
inc
aaa
fidivs
in
fninit
dec
fucom
frstor
data16
inc
jmp
push
aam
in
or
pop
out
pusha
fisubl
aam
jmp
in
call
xchg
cs
out
out
push
pop
rorb
adc
loop
daa
aam
mov
scas
repz
pop
out
imul
mov
lahf
xchg
cmpsl
or
movups
pusha
lock
cmp
jg
in
xor
pop
sub
rorb
sbb
xchg
adc
stc
sbb
rorb
pop
in
mov
or
add
pop
lcall
sbb
xor
xor
psubsw
lret
xchg
iret
push
and
call
int
scas
pop
movups
xor
filds
leave
jl
push
cmp
xor
mov
push
sti
mov
call
shlb
cmp
aaa
xor
popa
push
sbb
pop
and
jg
inc
dec
adc
xchg
out
xchg
js
dec
inc
cmp
xor
sbb
dec
sti
fwait
out
sub
inc
lock
mov
inc
xor
in
or
xor
pop
adc
ret
sar
dec
adcb
dec
pop
loopne
lock
lods
mov
rorl
xor
adc
fistps
xchg
jne
lcall
call
push
in
or
pusha
or
rolb
dec
xor
lcall
stos
lcall
add
pusha
add
fistps
dec
xor
mov
orb
adc
dec
cmp
jge
cmp
mov
dec
test
shlb
mov
mov
pop
push
cmp
jge
xchg
loopne
leave
loope
loope
mov
cwtl
xchg
idivb
pop
push
decl
or
mov
mov
lock
mov
mov
repz
jns
loopne
pop
shlb
scas
mov
call
ja
xor
stc
mov
dec
js
lock
js
dec
invlpg
inc
dec
or
stc
xchg
jno
xlat
lock
lock
jno
inc
pop
xor
mov
call
lods
repnz
pop
fwait
mov
shll
inc
mov
jmp
aad
gs
pop
sub
mov
lcall
shll
pop
pop
sub
aas
cmpsl
mov
ljmp
xor
inc
dec
jle
xchg
mov
dec
sub
sub
ds
mov
fldl
in
aaa
xor
adc
and
cmp
push
adc
adc
adc
pop
sbb
add
mov
ljmp
pop
popa
push
pop
sub
dec
pop
outsb
les
das
decl
jmp
popa
pop
cs
and
inc
dec
push
imul
cmpsb
in
sub
and
add
ret
push
loopne
lahf
xchg
mov
mov
jle
dec
movsl
dec
add
add
or
vmovaps
mov
adc
bound
pop
add
or
cmp
aas
lods
leave
fsubp
in
lret
stos
outsl
or
mov
pusha
cmp
into
in
mov
int
xor
dec
pusha
or
sar
inc
dec
jbe
mov
add
int
xchg
mov
dec
inc
cmp
pop
imul
pushf
lcall
or
jns
mov
lock
bound
cmp
ss
or
or
pop
add
mov
add
add
lods
or
dec
and
push
sbb
ljmp
mov
push
pop
cmp
and
add
and
daa
pop
fwait
in
jg
dec
add
sub
add
ss
push
cs
add
aaa
push
add
cmp
pop
xor
cmp
jg
sbb
push
outsb
jmp
out
and
add
inc
popa
add
ja
dec
jle
imul
aas
push
and
add
push
inc
and
push
dec
jns
push
cs
push
insl
sub
push
jns
jnp
mov
dec
mov
ds
addb
mov
pop
nop
jbe
mov
xor
out
out
incl
daa
pop
xchg
add
pop
xchg
add
push
arpl
sub
inc
loopne
popf
add
push
push
jg
lcall
jno
add
jns
xor
add
jp
imul
push
ss
add
test
inc
jno
js
inc
jge
jle
sti
in
mov
inc
jle
add
mov
jg
mov
outsl
mov
mov
pop
dec
mov
push
mov
inc
xorl
fwait
lea
mov
dec
xchg
mov
add
inc
xchg
rolb
dec
xchg
lds
mov
push
lahf
int3
add
add
roll
pop
stos
aam
stos
fldl
addr16
fcompl
ss
test
add
ljmp
data16
ficoml
mov
push
loopne
je
xlat
add
add
in
push
decl
push
rcr
add
in
add
testb
leave
repnz
repz
sub
mov
faddl
addl
or
test
xchg
lea
push
mov
xchg
push
xchg
xchg
out
cwtl
mov
cltd
push
xchg
xchg
popf
add
mov
lcall
adc
stos
mov
fisttps
mov
cmp
add
push
stos
mov
add
pop
xchg
add
scas
sbbl
add
push
push
ret
add
jbe
mov
push
into
enter
fildl
lds
iret
mov
jns
mov
sarl
lret
mov
iret
mov
fwait
int
mov
mov
lods
jbe
sahf
test
mov
push
push
rol
iret
insb
mov
sarl
mov
fcmovb
fistps
mov
rol
dec
pusha
push
int
rolb
in
fwait
fwait
call
mov
add
fiadds
add
repz
pushl
jns
stos
mov
mov
add
lret
lret
insl
fbstp
int3
leave
out
enter
int
fmul
push
ror
lret
rcr
ss
es
push
loopne
push
mov
mov
fcmovnbe
rcll
flds
in
outsb
out
roll
fstpt
loop
fsts
sub
jecxz
push
jmp
mov
fstl
fstl
add
fstp
add
loope
add
loop
jns
jbe
in
push
jecxz
in
jmp
insl
inc
imul
add
jecxz
in
hlt
jle
out
jo
mov
xchg
es
call
cs
out
push
repnz
pop
les
std
cmp
push
fdiv
std
add
push
xchg
in
in
divl
out
loop
out
ljmp
mov
out
repz
push
clc
repz
sub
fcompl
push
in
cli
out
push
idiv
outsb
call
jo
aam
repnz
push
mov
add
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
cmp
adc
xchg
xchg
ss
push
and
mov
xor
fildl
fnstcw
xor
or
fistpl
and
add
negl
adc
fsts
popa
sbb
rcr
rcl
jecxz
jecxz
fcomp
sub
out
xchg
fists
rcl
fcom
nop
add
pop
mov
push
cmpsl
scas
mov
ror
aaa
sti
cmp
test
scas
mov
pop
rcr
std
xor
scas
test
jnp
mov
idivb
test
lret
sub
jnp
xchg
test
rorb
xchg
mov
neg
jg
outsb
jbe
lahf
scas
fdivrs
jbe
jne
mov
mov
scas
pushf
jge
imul
incl
and
jge
scas
ret
sub
mov
loop
std
ljmp
sub
pop
sub
shrl
aas
outsb
jl
sarb
clc
fcomip
ds
outsb
mov
pop
int
or
or
sbb
push
jbe
pop
sbb
aas
ret
sub
and
sbb
std
mov
and
push
sub
and
aaa
cmp
xor
sbb
mov
in
jg
jbe
shlb
pop
je
lods
std
stos
orb
sub
out
xlat
jle
and
rcrb
cmp
ljmp
cmp
subb
adc
mov
sbb
sbb
popa
pop
push
or
lahf
jo
ucomiss
push
jecxz
pop
pop
sbb
clc
sbb
fs
in
sti
mov
mov
ds
stos
stos
jg
scas
jl
popa
mov
jmp
mov
pop
sbb
sbb
lcall
cmp
dec
pop
pop
jmp
pop
pop
pop
addr16
inc
cmp
decl
mov
pusha
dec
adc
cwtl
loope
adc
sbb
jmp
cmp
inc
xor
sub
cmp
cmp
out
sub
and
xor
mov
cmp
push
daa
mov
in
aas
mov
mov
ret
jecxz
out
imul
imul
mov
in
ret
xor
lea
lds
stos
mov
call
stos
push
sti
jbe
mov
pop
loope
jmp
sub
call
ror
xor
mov
xorl
icebp
jmp
fwait
jmp
xor
mov
xor
shll
loop
fs
std
imulb
xchg
loope
mov
or
rol
out
in
out
mov
sub
into
mov
lds
lcall
cmc
icebp
jecxz
rclb
fcmovnu
in
pop
out
les
mov
ss
data16
jecxz
mov
mov
data16
mov
js,pn
or
out
sub
push
mov
outsl
mov
shl
into
lds
les
out
into
into
ja
or
or
outsb
addr16
push
sub
icebp
adc
mov
ret
vpunpckhbw
xlat
sahf
mov
out
mov
adc
sub
gs
ljmp
or
addr16
bound
aam
iret
fwait
std
mov
mov
sarb
notb
pop
adc
fs
mov
push
jno
sub
inc
jb
movsl
fucom
out
mov
cmc
pop
add
push
movsb
mov
mov
jae
push
push
inc
jae
ret
mov
mov
push
in
testb
push
icebp
add
lock
movsb
andl
ja
push
sub
push
insl
ja
mov
sub
mov
negb
fucomip
mov
movsl
sbb
sub
mov
xor
js
mov
jns
dec
enter
das
mov
repz
sbb
or
xor
fstpl
push
ret
inc
pop
or
sub
movsb
leave
in
mov
repz
mov
xchg
cld
pop
dec
push
add
add
pop
sub
daa
dec
sub
mov
mulb
sar
fdivp
mov
pop
adc
jb
push
mov
lsl
push
adc
leave
jg
lock
pop
stc
clc
stc
loop
cmp
mov
outsl
scas
push
mov
movsb
pusha
push
push
add
mov
mov
fsubrp
pop
data16
jg
push
adc
sub
jmp
arpl
mov
ja
fidivrs
sbb
xor
adc
sbb
notb
mov
repnz
stc
insb
or
not
mov
add
mov
clc
aaa
clc
repnz
clc
cld
sarl
cld
or
add
fistpll
js
pop
sub
mov
into
lcall
clc
std
es
adc
lock
sahf
jae
jo
orb
out
push
popf
fstp
mov
push
les
sub
arpl
push
push
dec
and
add
std
cmp
les
cmp
pop
add
push
das
cmp
rcl
sbb
push
and
std
cltd
cld
fnstsw
ja
or
or
cmp
and
inc
adc
adc
mov
jmp
cld
xor
push
in
mov
cld
std
insl
rclb
pop
jne
push
mov
add
and
pop
sub
push
bound
mov
mov
mov
incl
in
lods
xor
stc
mov
add
ret
pop
jge
xchg
mov
cltd
les
rol
mov
fnsave
idivb
int3
push
inc
pop
out
and
cli
test
pop
add
inc
in
enter
mov
test
add
mov
lahf
inc
or
mov
inc
inc
pop
push
xchg
mov
or
rolb
push
in
lods
pop
xorb
daa
add
or
aaa
fwait
sub
das
add
cmp
insl
or
sub
call
xor
dec
dec
aaa
add
cmp
dec
push
ss
mov
dec
inc
pop
mov
pop
add
inc
push
fidivs
dec
pop
add
push
cs
push
gs
push
insl
ss
jbe
and
out
add
sub
das
cs
pop
dec
add
pop
push
les
add
add
add
push
mov
and
pop
add
pop
add
pop
pusha
dec
cld
incl
add
dec
add
dec
add
push
lods
mov
sub
pop
add
popa
push
popa
data16
insb
inc
loopne
push
outsb
outsb
push
int3
imul
jbe
add
jge
mov
roll
addl
mov
test
jns
add
jl
mov
or
popf
fwait
stos
movsl
scas
add
lods
mov
adc
arpl
push
sub
rolb
into
xlat
mov
int3
loopne
add
hlt
stc
mov
scas
pop
addb
xchg
xchg
xchg
add
add
pushf
mov
pushf
add
lods
cltd
add
stos
add
cmpsl
mov
test
outsl
fistl
push
xchg
lods
mov
fwait
lods
xchg
insl
aaa
out
push
jle
mov
add
mov
push
mov
mov
mov
sahf
mov
mov
dec
adc
test
mov
add
sarl
inc
jo
ss
fldl
mov
lret
lds
movsl
push
pushf
int3
es
into
xchg
jbe
divl
es
rolb
scas
into
push
test
fbstp
fcmovne
aad
iret
fcmovnbe
fimull
rcr
add
js
out
aaa
aad
add
add
jbe
push
add
fisubl
cmpsl
loope
pop
in
fsubp
mov
ljmp
mov
mov
push
fabs
push
in
fimull
mov
cmpsb
mov
out
es
out
insl
int
xchg
fucomi
add
scas
loope
mov
fldt
in
es
data16
sti
out
cli
fistps
data16
out
mov
hlt
add
ljmp
call
mov
out
clc
push
jmp
in
std
add
insl
mov
push
mov
shll
xlat
shlb
fsubp
ret
ret
in
push
mov
fnsave
mov
out
dec
jmp
call
out
in
cmc
add
jmp
add
jmp
into
in
ss
jmp
fisubl
cs
int
shr
lds
push
in
in
jge
lcall
out
decb
push
in
mov
in
movlhps
out
shr
testl
push
ret
hlt
sti
push
sarl
cmc
jbe
hlt
int
lret
iret
repz
lret
enter
out
in
lret
stc
ds
aam
cli
add
rcl
jle
popf
pushw
hlt
ds
push
inc
in
in
in
outsl
dec
imul
lahf
fisubrl
sub
sub
push
sbb
outsb
adc
shrl
mov
bound
push
sbb
pop
fdivs
sysret
or
or
lahf
sub
mov
sub
pop
andl
cmpsb
stos
or
fwait
dec
or
pop
cmp
fidivrl
add
mov
fsub
jmp
or
xor
outsl
pop
cmp
bound
fdivrs
orl
pop
add
cld
mov
inc
jle
in
xlat
pop
push
sbb
inc
dec
dec
adc
stos
sub
inc
aas
sbb
std
or
ja
sbb
inc
push
dec
inc
inc
sbb
pop
mov
fs
mov
dec
jle
ja
iret
loope
inc
inc
clc
fcomip
push
movlps
push
sub
clts
add
fiaddl
add
repnz
adc
sub
es
sub
sbb
push
rcrl
pusha
inc
dec
push
sbb
out
fistpll
jo
insb
nop
shl
lock
repz
adc
sub
cmp
and
sbb
push
mov
aas
pop
jle
aad
cld
ficompl
sbb
insb
fwait
mul
aas
and
dec
pop
add
repnz
xor
aas
add
adc
sub
sub
adc
or
insl
sahf
fdivp
out
lahf
add
mov
jnp
sbb
fistps
mov
inc
push
inc
inc
push
push
jg
lods
int3
popf
idivb
sbb
push
inc
bound
test
push
popa
fs
fcmovu
int3
sbb
clc
idiv
call
pop
or
sub
out
jmp
jg
lahf
cld
idiv
fidivrs
test
in
fdivr
hlt
pop
sti
aaa
ret
xor
and
test
lods
sbb
fs
hlt
cmc
fdivr
fistps
je
je
mov
mov
add
mov
fsubr
fmul
sbb
hlt
loop
or
negb
mov
fsubr
out
xlat
sbb
fwait
lahf
insb
loopne
test
add
jg
pop
fsubrs
mov
popf
pushf
lcall
xchg
subb
arpl
pop
mov
pusha
fdivr
fidivrl
icebp
loopne
iret
fiadds
cmp
and
incl
ljmp
fucomi
jmp
repnz
aad
fiaddl
pushl
push
push
dec
dec
inc
mov
mov
fcomp
shl
loope
repnz
in
xor
pop
fcoml
mov
or
ss
rcr
jmp
icebp
hlt
xor
in
jnp
mov
out
ret
loopne
push
lods
call
xor
mov
mov
jmp
icebp
lock
add
mov
fsub
in
loope
repnz
jecxz
mov
xor
mov
ljmp
repnz
xor
pop
add
and
add
and
sbb
add
pop
dec
sub
insl
fdivr
pop
add
imul
adc
jmp
ja
addb
daa
mov
aaa
cmp
add
mov
lods
and
add
loopne
pop
mov
fwait
into
loop
shlb
push
add
pop
aaa
cmp
cmpl
add
pusha
ds
fucomip
push
sub
dec
push
or
or
pop
loop
insb
stc
out
fdivs
xor
cmp
jb
fisubs
idivl
les
sub
or
ret
popa
mov
xor
xor
inc
rorl
lret
pop
clc
push
mov
idivb
arpl
inc
mov
mulb
xchg
mov
pop
inc
mov
add
roll
sub
pop
pshufw
test
int3
pop
paddsw
pop
add
pop
mov
clc
comiss
xor
pop
maxps
mov
aas
dec
inc
add
emms
paddusw
add
imul
lds
xor
dec
or
mov
outsl
popa
xor
pop
mov
add
sbb
lds
mov
pop
dec
jp
push
movhps
mov
inc
sahf
and
rcpps
orb
loope
lods
into
notl
test
rcr
rolb
mov
loopne
lods
arpl
imulb
pop
xchg
adc
stos
out
out
xlat
popa
or
dec
or
or
cltd
cltd
stos
jmp
std
out
sbb
or
out
out
or
inc
in
fs
outsl
cs
cld
cld
sbb
iret
cld
mov
cltd
jns
push
cltd
cltd
ja
cld
hlt
mov
lret
incl
dec
iret
iret
or
bswap
dec
insb
inc
lock
or
jg,pn
decl
dec
mov
or
stc
in
fnstenv
stc
push
out
iret
iret
int3
iret
cs
cld
out
xchg
lahf
fs
das
aam
inc
add
out
stos
fldl
inc
push
pusha
add
cltd
lcall
subb
imul
add
or
filds
jecxz
in
adc
add
cmp
sub
aaa
fldcw
pop
add
push
push
fs
jo
js
dec
pushl
inc
cmp
add
dec
jnp
add
das
add
add
push
outsb
add
add
sbb
mov
push
add
push
xor
mov
test
cmp
jbe
inc
add
add
mov
ja
push
add
push
ds
add
add
push
jbe
ss
and
add
dec
dec
jle
dec
xchg
pop
pop
jbe
adc
push
inc
insb
push
dec
jb
dec
dec
mov
dec
adc
add
jbe
push
jae,pn
mov
lock
add
scas
mov
inc
inc
push
dec
sub
xchg
add
fidivs
repz
ds
add
outsb
add
out
addr16
pop
imul
push
add
push
or
xor
lea
pop
add
pop
mov
movsl
ds
adc
cmp
sbb
mov
sbb
sub
push
lods
dec
xor
shr
outsb
push
cmp
loop
ss
or
push
pop
add
pop
rcrb
push
and
lret
fisttpl
shrb
push
outsb
outsl
pop
mov
std
outsl
xchg
add
push
add
jae
push
outsb
dec
iret
jae
sub
jbe
jp
push
jnp
add
jp
adc
push
cmp
jae
cmpsb
jnp
push
bound
jg
push
insb
push
add
orb
lds
add
push
loopne
orl
orl
cmpsl
push
jecxz
cmpsb
fldl
test
test
ret
mov
out
mov
mov
adc
in
xchg
push
icebp
xchg
outsb
add
inc
outsl
adc
movb
add
pop
subl
mov
jle
xchg
arpl
outsl
fbstp
outsl
xchg
ja
add
fs
xor
add
push
add
jne
add
js
push
push
jb
outsb
jns
jl
xchg
jnp
dec
dec
jle
push
mov
pop
nop
out
sub
mov
mov
mov
arpl
je
jb
mov
outsb
or
adc
stos
mov
loop
jnp
add
loop
mov
xchg
pop
fs
dec
and
xchg
insl
shrl
xchg
into
mov
mov
cmpsb
jle
sub
mov
dec
mov
pop
test
pop
jo
sub
popa
xchg
idivb
inc
mov
push
add
outsb
in
push
test
and
sub
add
lcall
xor
aam
xchg
fiadds
push
inc
stos
push
pop
push
insb
rorl
mov
ss
ss
into
sbb
push
add
loop
lods
std
xchg
fmulp
leave
inc
lret
jle
xlat
aad
and
ljmp
out
push
mov
cs
stos
lcall
cmpsl
test
xchg
mov
pop
sbb
movsl
data16
int
mov
mov
out
icebp
popf
push
rep
push
rcll
imulb
into
fnstsw
push
jmp
enter
into
pop
dec
push
dec
inc
push
int3
add
sub
faddp
out
aad
jmp
aam
movsl
test
push
shll
es
lret
pop
imul
xlat
add
fcoms
fneni(8087
fbld
inc
imul
add
sub
xor
jle
jp
lock
sti
cld
add
jl
sub
pusha
push
mov
idiv
jmp
push
pop
bound
pop
push
dec
inc
inc
inc
js
es
mov
pop
loopne
mulb
stc
pusha
jmp
push
dec
dec
dec
inc
inc
pop
inc
or
xchg
arpl
pop
dec
inc
enter
pushl
xor
ror
mov
add
pusha
aaa
fs
pop
ja
mov
lret
dec
dec
inc
inc
adc
xor
cmpsb
scas
lret
pop
inc
and
push
push
aaa
mov
fs
dec
pop
or
sar
xor
popa
or
into
scas
pop
dec
cmp
inc
dec
pushf
pop
or
pop
pop
inc
pop
xor
cmp
fbld
xchg
sub
cmp
es
inc
insl
aaa
lds
in
in
add
sub
sub
pushf
xchg
mov
dec
pop
fidivrl
sbb
xor
inc
adc
mov
outsl
sarb
or
pop
add
mov
add
aas
xchg
or
xchg
cmc
sub
sub
sar
mov
lea
roll
add
out
xor
xchg
lods
lods
pop
lret
mov
subb
out
cmc
fst
fidivrs
cmp
add
lods
mov
clc
outsb
loope
pop
push
mov
aaa
incl
xchg
mov
sub
mov
adc
into
popa
rcl
pop
imull
xor
es
sub
pop
ret
adc
sbb
jmp
aam
mov
mov
cmc
cld
cmc
test
outsb
das
xor
outsl
sti
loope
pop
ret
shrl
adc
jno
shlb
xor
sti
out
fidivl
and
lret
movsb
xchg
mov
adc
das
dec
cld
or
jbe
in
clc
jmp
out
dec
add
mov
jl
mov
push
pop
or
jmp
divb
mov
and
sub
or
idiv
mov
pop
addr16
in
pusha
mov
rcrb
adc
in
andl
loope
repz
stc
ljmp
jle
fsubl
pop
lds
cmpl
fsubp
in
loop
pop
cld
pop
cmp
inc
cmovge
les
aaa
push
and
clc
incl
push
adc
out
mov
xchg
adc
pop
and
jg
fistpl
add
pushf
cmp
sub
lock
mov
mov
cmp
pushl
and
add
cmp
mov
jbe
fucomp
and
mov
pop
add
aas
fcoml
adc
imul
add
push
orb
fidivl
xchg
adc
pop
mov
add
and
repz
add
cs
imulb
sub
mov
stc
mov
pop
push
xor
jb
sbb
sbbl
mov
xor
lods
adc
pop
movsb
pop
cmpsb
enter
pop
pop
ficomps
insl
pop
movsl
mov
mov
int
cld
popa
pop
add
or
movsl
adc
mov
sbb
or
mov
outsl
push
pop
adc
jbe
lods
dec
ljmp
popa
adc
pop
add
dec
pop
push
pop
mov
ds
push
pop
or
int
imul
fidivl
imul
dec
jg
aad
push
add
or
add
insb
jae
aam
add
jp
adc
lcall
das
andl
lcall
and
xchg
cmpsb
rclb
sub
xor
test
cmp
mov
imul
push
inc
push
ror
int
test
pushl
xchg
adc
and
fs
push
dec
test
and
popf
push
xor
xor
popa
cs
push
or
dec
or
xor
jecxz
aas
mov
pop
scas
mov
test
sahf
mov
dec
adc
ss
mov
xchg
xchg
and
outsl
fldenv
push
and
fcmovu
add
in
lahf
or
es
mov
mov
push
insb
arpl
push
add
lods
push
pop
pop
jae
mov
push
pusha
inc
dec
dec
repnz
int
lods
push
lds
inc
pushf
add
inc
pop
inc
mov
ficoms
pusha
inc
bound
pop
sbb
pop
and
and
xor
push
sbb
clc
add
sbb
xchg
fnsave
pop
sub
pop
xor
xor
sub
in
sbb
sbb
pop
pop
push
es
dec
jle
fwait
pusha
pop
sbb
and
push
scas
cmpsb
int3
popa
inc
pop
pop
sbb
scas
mov
jbe
pop
popa
pop
or
push
fcomps
insb
shll
sub
cwtl
ficompl
popa
pop
or
push
and
inc
pusha
add
insl
sbb
pop
inc
popa
add
fisubrs
dec
popa
pop
roll
das
lcall
xor
mov
rcrb
and
aam
cmp
push
dec
pop
pop
or
lea
daa
fs
mov
pop
rolb
and
pop
shl
xor
and
ret
pusha
and
arpl
mov
popa
es
mov
gs
dec
add
lods
popa
add
add
fcmovbe
fsubl
push
popa
dec
inc
sti
pop
bound
and
inc
inc
aas
adc
push
pop
ds
popa
lods
les
arpl
mov
push
dec
pop
pusha
ret
ss
push
pop
dec
and
mov
popa
les
jge
pop
push
pop
dec
pop
popa
mov
arpl
fistpl
dec
adc
ja
pop
pop
popa
push
or
sbb
sbb
sbb
sbb
or
sbb
lods
movsb
push
inc
pop
push
pop
pusha
or
ud0
sbb
and
sbb
sbb
pop
push
pusha
add
ds
test
xor
or
fsubs
adc
icebp
pop
push
cmp
cmp
adc
or
sbb
sar
add
add
xor
out
and
popa
dec
add
add
popa
dec
pop
in
pop
fwait
pop
add
push
pop
lds
inc
add
pusha
sbb
jno
or
inc
test
daa
iret
andl
pslld
jg
or
sbb
adc
sbb
sbb
pop
add
push
int3
push
push
and
sbb
xchg
sbbb
sub
or
add
out
insl
stos
mulb
sub
das
sub
xor
cs
mov
loop
sub
add
xor
xor
push
aaa
mov
add
xor
cmp
cmp
shrb
out
xor
push
xor
cmp
cmp
xor
ds
pop
cmp
shlb
add
push
test
dec
add
outsb
insl
add
insb
adc
testb
outsl
jns
jae
add
push
movsb
cmpsb
fidivl
imul
ja
add
push
arpl
scas
adc
je
out
int
jle
xchg
addl
xchg
xchg
fistpl
mov
add
bound
out
aaa
ja
add
shl
add
mov
ja
push
jmp
xchg
popf
add
mov
lea
int
xchg
cs
xchg
xchg
xchg
add
add
popf
lcall
mov
int
mov
jle
mov
out
xchg
scas
mov
mov
add
mov
mov
cmpsb
push
movsl
cmpsl
movsb
test
test
movsl
stos
cmpsl
and
and
lods
push
test
das
dec
sbb
push
scas
int
adc
mov
scas
out
mov
mov
mov
scas
mov
mov
mov
mov
mov
mov
mov
or
cs
inc
loop
mov
mov
mov
push
mov
inc
and
ss
mov
inc
dec
mov
mov
adc
fcmovne
mov
out
mov
enter
lret
leave
aam
mov
outsb
call
lds
outsb
add
mov
enter
enter
leave
pop
leave
lret
lret
lret
into
push
daa
cmpsb
lcall
dec
push
xor
out
sarb
mov
roll
rcl
aam
in
cmp
xchg
push
xor
xlat
aad
aam
mov
adc
fsts
fcom
xlat
ss
rcr
iret
movsb
cmpsl
jnp
pop
fistl
pop
fcmovu
jnp
out
push
roll
push
push
shll
sahf
fldenv
scas
aaa
mov
faddl
fcmovu
fidivrl
push
adc
push
fdivrl
fcompl
fimuls
ficomps
fisubrs
push
loopne
fiaddl
repnz
mov
push
fiaddl
fmull
dec
push
fsubrl
filds
loopne
jecxz
fsubp
loopne
insl
rorl
int
idiv
push
sti
jbe
or
sti
add
sti
push
add
in
cmp
xor
in
push
out
out
fdivl
incl
in
out
call
mov
jmp
fucom
int3
and
ljmp
dec
int
pop
mov
push
in
push
jmp
xchg
push
dec
dec
in
pop
add
lock
lock
in
repnz
loopne
cmc
testl
div
add
stc
repz
stc
hlt
push
push
push
cmc
sti
clc
add
std
cli
in
sub
stc
and
add
push
addr16
cmpsb
pop
cmp
popa
pushf
mov
movsl
lods
mov
cmpb
lahf
mov
fwait
scas
cltd
inc
aaa
mov
aas
mov
cmp
mov
vsubps
jg
mov
mov
js
sti
data16
sbb
mov
xchg
push
popa
mov
cli
dec
inc
mov
mov
mov
mov
xchg
jbe
jg
mov
mov
lea
xchg
pusha
loope
lcall
mov
pop
test
inc
in
mov
mov
loopne
ficomps
xchg
jns
popa
test
cmp
lods
add
shlb
mov
fisubrl
les
pop
mov
jne
pop
push
enter
mov
inc
ret
mov
mov
mov
mov
jne
mov
lods
mov
ror
add
mov
and
in
subl
movsb
xchg
mov
cmp
inc
inc
mull
in
dec
mov
lods
dec
mov
jp
mov
sbb
lods
mov
xchg
ret
cs
mov
cmp
in
mov
sbbb
in
mov
hlt
mov
mov
pop
out
inc
ret
mov
pop
popa
add
push
mov
ret
ja
out
ja
ret
mov
aaa
sar
fidivrs
mov
mov
jle
mov
test
xchg
mov
inc
xchg
sbb
fld
and
ret
add
sub
cmpb
jle
jl
enter
sbb
insb
jb
les
pop
mov
jnp
pop
pop
mov
mov
scas
and
je
or
in
mov
jl
mov
out
shll
mov
mov
dec
mov
ja
lds
in
lcall
ret
mov
mov
or
bound
push
in
outsb
mov
adc
test
sub
jle
jns
mov
adc
or
pop
mov
mov
jle
aaa
in
leave
sarb
jbe
add
insb
jns
sbb
xor
call
adc
push
ret
inc
adc
cmp
jp
mov
inc
mov
push
push
cmpsb
insb
dec
fildl
jnp
mov
mov
xchg
or
push
repz
jecxz
dec
cmp
jecxz
fsub
fcompp
fst
cmpl
and
out
pop
leave
js
mov
push
mov
push
pop
lret
call
out
mov
or
or
lock
jmp
lock
mov
push
stc
loope
mov
jmp
fildll
mov
pop
pop
pop
imul
pop
pop
xchg
dec
call
into
loopne
lcall
inc
out
icebp
mov
repz
jae
xor
daa
pop
cmpb
xchg
call
sbb
dec
jg
jg
aam
mov
fs
std
fildll
dec
das
add
add
lcall
pop
add
push
cmpsl
pop
lock
adc
out
add
jge
mov
test
jnp
add
dec
bound
push
ss
orb
outsl
mov
in
ljmp
mov
lret
push
mov
into
cli
aaa
jecxz
mov
or
pop
adc
or
push
mov
gs
push
sub
incb
mov
pop
xor
xor
aas
sub
adc
lahf
dec
jmp
xchg
repnz
mov
sbb
adc
push
adc
sbb
fisttpl
adc
or
push
mov
mov
or
pop
or
push
push
push
adc
sbb
add
sub
out
cmp
push
pop
sub
pop
addr16
and
lcall
das
imul
inc
jae
mov
flds
dec
jne
push
push
jbe
push
jl
or
clc
inc
sbb
add
dec
out
push
add
pop
call
ja
data16
add
fcomi
jbe
test
sub
es
mov
shl
outsb
jbe
test
addl
jmp
insb
push
pop
test
or
nop
add
addl
arpl
lcall
or
adc
popa
xchg
ds
dec
or
lods
push
lcall
jo,pn
jae
dec
jl
add
mov
jle
sbb
adc
add
sbb
scas
imul
or
or
js
add
jl
ds
jbe
jg
or
popf
push
or
dec
cmp
fcoml
sbb
test
shll
lea
scas
xchg
scas
dec
xchg
mov
mov
mov
mov
jle
mov
adcb
xchg
and
fisttpl
and
cltd
mov
sub
es
insl
xor
mov
xor
xchg
repz
mov
xor
push
inc
scas
addl
mov
orb
into
popa
ret
roll
fwait
ret
mov
mov
fldt
mov
and
fcomi
pop
mov
test
movsl
ret
lods
ss
push
xor
push
stos
data16
inc
aas
mov
cmp
add
fidivl
mov
insl
sti
cmpsl
roll
lods
inc
mov
inc
mov
dec
mov
and
push
mov
pop
mov
mov
es
push
mov
or
outsb
in
inc
mov
pop
mov
es
imul
inc
imul
ret
flds
adc
mov
iret
sbb
call
add
fucomip
add
add
rolb
mov
cmpsb
pop
rcl
push
les
divb
pop
lret
faddl
js
int
leave
aad
jne
push
jns
filds
dec
ret
loope
mov
jecxz
enter
pop
shrl
std
jg
xlat
hlt
add
add
in
jle
out
shr
mov
imul
add
push
aam
jle
outsb
je
in
xor
lods
dec
fistpl
gs
sahf
fdiv
es
pop
sub
lcall
add
stos
jbe
lods
pop
or
mov
mov
or
push
jbe
fcmove
ret
scas
mov
mov
ret
mov
pop
iret
xlat
add
fbld
int
adc
sti
cmpsb
fucomp
shl
push
fiaddl
into
xchg
fdivrl
mov
mov
out
xchg
jecxz
test
fimuls
sbb
adc
cwtl
out
in
mov
ss
mov
mov
xor
fs
faddp
sarb
mov
push
loope
mov
insl
mov
jmp
int3
jecxz
shr
lcall
push
enter
leave
hlt
xlat
repz
ret
mov
es
into
stc
repz
cli
push
orb
std
cld
add
add
lea
sbb
clc
sub
xor
aas
inc
add
push
pop
fdivs
fucomi
inc
inc
inc
push
push
aas
xor
sub
adc
or
jg
inc
std
adc
cmp
push
fs
xchg
in
aas
idiv
andb
push
push
push
inc
cmp
cs
jp
ja
cli
addl
rol
in
in
imul
mov
lcall
cmp
push
inc
dec
dec
pop
push
push
cld
jmp
imul
xchg
lahf
mov
lahf
xchg
jb
insl
insb
arpl
push
push
dec
dec
cmp
cmp
sub
call
bound
addl
loopne
out
fidivl
outsl
lock
push
dec
aaa
sub
pop
mov
adc
sbb
pop
les
jmp
xchg
jbe
jmp
mov
stos
mov
pop
push
pop
dec
dec
cmp
xor
pop
mov
sbb
sbb
pop
call
mov
add
push
fisubrl
adc
pop
pop
sbb
mov
jg
out
and
pusha
mov
pop
jl
popf
scas
nop
andb
sub
mov
cld
mov
jnp
mov
ljmp
mov
sbb
or
mov
inc
xor
sbb
sbb
ljmp
bound
fucom
ljmp
mov
mov
pop
pop
inc
sub
push
pop
sbb
out
mov
pop
or
pop
mov
mov
jne
mov
pop
pusha
xchg
sbb
or
pop
pop
fdivr
scas
add
adc
add
stc
out
and
pop
jne
push
in
dec
arpl
and
jo
or
pop
sti
jmp
xor
or
out
cli
sti
lock
bound
push
loopne
mov
sbb
and
std
jmp
pop
inc
sub
mov
std
std
icebp
pop
jne
xor
jg
mov
mov
fprem1
jae
sarb
cmpl
sti
std
pop
fdivs
std
imull
lods
mov
sbb
fcomps
push
les
mov
pop
sbb
out
div
sbb
jle
add
pushl
mov
repz
inc
mov
push
adc
or
out
sbb
mov
cld
stc
sbb
lods
adc
adc
rcrb
in
mov
or
out
leave
fbstp
and
sbb
sbb
pop
jecxz
loopne
es
sbb
cs
iret
push
jg
jno
call
pop
clc
lahf
cmp
rcrb
cli
mov
cmpl
xchg
cmp
push
push
lock
pop
std
into
stc
rcrl
and
lcall
sti
mov
div
mov
or
pop
std
into
fistpll
in
data16
int
pop
mov
iret
or
mov
xchg
push
and
into
push
into
pop
fsubrs
movsl
movsb
mov
jbe
push
dec
aaa
es
sbb
pop
lock
add
int3
and
cmp
pop
sub
xchg
ljmp
cmp
push
mov
clc
mov
jle
dec
ss
stc
mov
insl
lock
pop
adc
enter
call
scas
stos
cltd
mov
pop
std
pop
cli
in
int
into
into
outsb
aaa
leave
popa
lods
stos
pop
sub
pop
pop
push
push
cld
insb
fnop
add
popa
pop
fwait
test
or
orb
mov
test
inc
in
pusha
ds
mov
insl
lret
minps
sub
add
ja
pop
movsb
or
add
rolb
and
rcrb
add
or
add
pop
push
cmc
jns
jb
test
push
jne
pop
push
loopne
add
roll
js
inc
idivl
dec
inc
les
psrlw
or
sub
outsl
repnz
das
outsl
inc
inc
sub
add
xchg
mov
inc
inc
loopne
add
adc
mov
out
add
mov
inc
ret
insb
movsb
stc
popl
pop
popl
movsb
jge
add
xor
pop
shll
inc
inc
fs
test
test
aaa
add
sub
adc
cmp
add
repz
xchg
xor
xor
xor
or
xor
sub
and
bound
or
imul
sub
push
fs
int
fnsave
push
push
arpl
xchg
inc
sub
push
inc
xor
or
ds
adc
test
pop
mov
fcmovne
push
or
adc
push
sbb
xor
inc
push
sbb
int
sbb
add
or
or
lcall
inc
push
and
inc
add
and
aaa
fildll
and
push
xor
xor
dec
ds
movsb
int
pop
mov
fs
adc
mov
idivl
and
inc
and
jle
lods
xor
sbb
push
adc
push
je
push
rorb
push
adc
adc
jmp
cs
push
push
jl
pop
push
mov
imul
mov
roll
cmp
das
call
dec
and
sub
mov
jae
xchg
push
mov
movsl
fucom
cmpl
test
or
iret
lahf
push
xchg
ds
xchg
add
pushf
add
sahf
jg
push
mov
add
add
insl
add
scas
aas
lahf
mov
lods
add
scas
push
mov
pop
mov
add
fdivl
jge
mov
inc
xchg
data16
add
dec
in
push
push
mov
dec
test
sub
adc
push
fs
pop
mov
mov
ret
push
jae
sub
les
jl
lcall
pop
movb
add
out
sti
int
mov
lret
push
xchg
mov
or
and
out
jnp
adc
test
push
mov
lcall
out
sub
mov
ss
xchg
and
stc
movsb
sti
cmpsl
ljmp
lods
hlt
push
xor
inc
mov
mov
push
add
fs
push
cmpsl
xchg
mov
mov
xchg
add
outsl
xchg
mov
mov
add
mov
lret
fnstenv
lds
loop
call
out
add
push
xor
insb
jg
cmc
out
add
div
push
sti
repz
sub
mov
lret
add
inc
add
in
sbb
mov
cmpl
mov
mov
std
mov
xchg
and
ret
sbb
cwtl
std
in
ret
add
mov
jnp
pop
pusha
add
sti
pop
jae
ret
ret
mov
inc
cmpb
sarb
inc
sti
imul
sbb
pop
popa
mov
add
mov
pop
popa
idiv
jg
pusha
adc
adc
unpckhps
cltd
mov
lahf
jns
adc
push
and
fcompl
daa
sahf
fwait
mov
pusha
mov
lahf
cmpsl
mov
or
mov
lahf
mov
pop
dec
pusha
pop
test
call
cltd
mov
mov
cmp
mov
dec
pusha
mov
pop
or
test
push
popa
fwait
fwait
fwait
pop
lock
cmp
fstp
out
add
das
pop
or
movsl
bound
es
sub
push
dec
dec
mov
pop
pop
pusha
add
stos
cmpsb
lahf
push
pusha
dec
lahf
test
push
mov
mov
add
fstpl
popa
test
call
dec
lahf
scas
cltd
mov
divb
pusha
push
push
lahf
mov
or
jb
scas
mov
inc
pusha
push
mov
stc
out
bound
popa
lahf
fwait
fwait
push
dec
shl
sbbl
out
inc
fs
adcl
pushl
xor
mov
scas
mov
inc
inc
insl
mov
pushf
jge
push
push
mov
xchg
xchg
mov
std
divb
pusha
mov
andl
add
jo
ja
xor
inc
mov
pusha
pop
in
jns
dec
xchg
xchg
mov
movsb
jle
jb
pop
push
arpl
pushf
mov
adc
insl
xchg
pop
call
push
jno
stos
and
pop
cmp
mov
addb
pusha
pop
add
mov
fs
imul
pop
pop
push
sbbb
mov
popa
add
scas
mov
jmp
add
js
lahf
pushf
jl
aas
das
fst
add
add
xchg
pop
sbb
mov
divb
mov
pusha
pop
popa
add
in
cld
enter
test
pushf
pop
dec
insb
adc
jns
dec
aas
cmp
in
xchg
mov
mov
mov
lret
ficomps
sarb
pusha
inc
pop
mov
test
movsb
popa
leave
or
xchg
aas
add
aas
pop
bound
inc
jnp
push
pusha
in
inc
pop
mov
mov
cs
arpl
mov
andb
pop
cmp
fsubl
mov
fs
in
lret
jbe
xchg
pop
mov
cmp
or
push
push
pusha
lods
outsl
clc
aaa
inc
cmp
xor
or
lahf
cltd
cmp
xor
jo
sub
sub
adc
push
adc
sub
sbb
dec
out
inc
cmp
or
cmp
dec
xchg
push
inc
inc
add
fsin
cmp
push
push
add
push
add
mov
add
mov
push
mov
fwait
int
and
mov
mov
mov
xor
mov
push
mov
add
cld
call
flds
pop
mov
fiadds
inc
mov
dec
mov
jg
rorb
loop
pop
out
push
rcll
ret
push
insl
xchg
je
pop
pop
les
dec
icebp
push
dec
fldcw
repnz
repz
hlt
pop
cmc
pop
neg
repz
movb
cld
add
es
push
push
enter
pushl
lcall
outsb
lret
leave
es
push
jo
imul
fstps
jo
push
jae
jne
ja
lcall
lret
jle,pt
repz
jp
jp
data16
push
jl
jge
jg
jg
popa
data16
mov
push
gs
push
outsb
cli
out
ss
jno
sti
ja
xchg
lea
nop
ja
add
xor
xchg
cmpsb
stc
insb
dec
add
ljmp
mov
pushf
addb
hlt
addl
test
mov
add
cmpsl
mov
add
lea
xchg
xchg
add
xchg
fwait
add
xchg
pushf
add
push
or
subb
or
mov
push
iret
push
sar
test
push
test
push
xchg
xchg
mov
mov
ss
int
mov
mov
mov
xchg
rcrb
xchg
rolb
xchg
aad
xlat
xchg
mov
mov
push
xchg
xlat
push
xchg
fcoms
ss
fdivr
lcall
push
pushf
fistpl
repz
out
xchg
xchg
push
cltd
sahf
rolw
cmpsb
aad
cmpsb
jnp
cmpsl
jne
fisubs
cmpsl
fcoml
cmpsb
stos
es
loope
in
lods
filds
scas
mov
fcmovne
imul
mov
mov
in
out
mov
mov
jp
dec
int3
movb
lds
xlat
mov
aaa
dec
aam
add
call
int3
sahf
andl
inc
into
cmp
jns
aam
out
fisttps
mov
repnz
xchg
frstor
in
in
push
jbe
mul
imull
jmp
repnz
cmc
clc
add
push
stc
cli
mov
dec
pop
add
add
roll
add
and
bound
in
mov
cmpsb
pop
in
mov
pop
add
add
sbb
mov
les
mov
leave
dec
xchg
xchg
xchg
mov
test
sbbb
ljmp
pop
add
sbb
das
xor
xor
aaa
adc
add
pushl
jne
orb
mov
dec
dec
jbe
js
jl
cmp
lea
pusha
and
xchg
mov
add
jg
sahf
lahf
mov
test
mov
ret
movb
fwait
inc
inc
push
ja
jnp
jg
mov
movsb
mov
cmpb
and
sti
mov
cmpl
cmp
jg
test
add
in
inc
std
or
popa
test
or
push
aas
mov
lods
add
inc
popa
andl
stc
outsl
pop
mov
lret
lret
outsb
imul
aas
popa
jle
insb
aas
jg
mov
pop
mov
cmp
std
les
movsl
xchg
leave
lret
insl
push
mov
test
pop
jle
cli
sub
add
fmulp
inc
popa
jns
cmpb
add
data16
or
mov
popa
ja
jle
xchg
sbb
daa
push
pusha
lahf
arpl
jae
fsubrs
mov
imul
popa
pop
in
sti
popf
dec
fwait
pop
pop
popa
pusha
pusha
push
cmp
outsb
mov
js
mov
fs
jbe
es
fwait
pusha
andb
shlb
sub
push
ss
dec
pop
das
xchg
mov
call
scas
es
std
inc
fwait
dec
daa
xchg
mov
js
std
les
inc
fwait
dec
daa
xchg
pop
test
fiaddl
es
lret
inc
fwait
dec
es
addl
shl
ret
fwait
inc
and
or
pop
pop
add
and
fcompl
add
push
negb
add
xor
and
inc
or
add
adc
pop
lods
xchg
mov
push
bound
add
push
push
push
push
cmp
in
mov
pop
ret
push
leave
aad
add
adc
pop
in
jo
mov
jg
test
inc
push
dec
and
fisubrs
jb
and
fwait
and
addb
std
jg
dec
inc
dec
dec
dec
inc
add
adc
or
add
pusha
push
adc
sub
mov
sbb
add
adc
in
outsb
add
orb
add
adc
and
inc
sub
push
sub
scas
add
mov
push
test
push
inc
and
int
xlat
or
lock
js
and
add
push
lcall
sub
jmp
add
adc
or
outsl
dec
and
dec
addb
pusha
adc
pop
add
adc
addb
add
mov
mov
xor
add
add
or
or
and
or
and
push
mov
and
dec
adc
adc
or
fidivrl
inc
adcb
inc
push
adc
push
mov
outsb
push
or
jbe
clc
lods
mov
inc
and
mov
and
pusha
inc
add
dec
add
push
or
loop
adc
insb
roll
in
xor
fcmovb
cmp
add
ret
test
and
add
add
sub
adc
xor
push
mov
xchg
and
or
xor
cwtl
loopne
and
insb
inc
pop
into
adc
shlb
add
inc
and
push
jle
or
sbb
enter
push
pop
add
or
push
inc
push
add
mov
add
adc
inc
mov
inc
nop
inc
or
xorb
push
sar
add
adc
bound
add
cs
inc
bound
pushf
sbbb
mov
andb
imul
jbe
nop
push
adc
pusha
push
bound
shrb
inc
and
add
test
dec
loop
bound
cli
adc
push
pop
inc
fimull
mov
push
sbb
jle
jbe
insb
dec
addb
ds
test
insl
add
stos
pop
nop
push
adc
add
mov
adc
mov
push
push
loop
add
sub
push
movsb
inc
and
cmp
insb
xor
add
bound
pusha
andb
or
dec
decb
and
xor
fisubl
addb
test
adc
and
pusha
adc
in
icebp
mov
and
sub
mov
inc
or
rorb
mov
andb
inc
and
xchg
into
add
and
mov
add
push
es
inc
and
ljmp
xchg
or
and
or
addb
fs
push
push
adc
push
xchg
xor
fisubrs
push
mov
test
and
addb
fsubl
shll
dec
inc
add
and
xchg
and
pushf
inc
push
push
xchg
idivb
cmp
bound
add
adc
push
sbbb
add
add
or
and
andb
or
jge
sub
xchg
mov
addb
call
or
ret
pusha
and
and
mov
inc
cld
aam
add
pop
std
loope
and
incb
jle
in
fsincos
push
jns
fdivrs
in
push
inc
mov
push
jle
jmp
pop
in
add
fldenv
pop
jg
add
fstps
fstps
fstpt
std
jns
outsb
fbstp
cld
sti
out
sti
xchg
fistps
sahf
fbld
fistpll
fcompl
fnstcw
icebp
jle
ja
jge
fdivr
stc
dec
push
pop
mov
jnp
test
jbe
xchg
jg
pop
jg
pop
fisttpll
test
pop
out
adc
stc
pop
outsl
decw
cs
pop
push
jl
jbe
xor
push
fdivrl
fldt
fucom
add
pop
pop
fcmovu
push
pop
outsb
pop
rcll
pop
jge
scas
fucom
jne
fwait
outsl
jg
add
js
into
fldenv
pop
pusha
mov
std
es
adc
adc
jnp
jle
jge
xor
push
ljmp
jbe
push
pop
and
jns
out
cli
lods
pop
mov
mov
stc
push
fidivrs
cmc
push
pop
xchg
jle
and
push
stc
mov
jge
ds
stc
push
pop
jns
loope
cmpl
push
jbe
jle
sti
jle
xchg
fcomps
jp
push
pop
jbe
jge
lods
pop
insl
imul
jns
fisttps
icebp
aam
sub
ret
pop
jbe
insl
dec
cs
enter
negb
cld
mov
jbe
out
ljmp
in
jns,pt
jg
negl
fucomip
insb
pop
fcmovbe
neg
out
ficomps
pop
es
sahf
fnstsw
mov
pop
addr16
jnp
pop
fisttps
pop
xchg
pop
fnstcw
pop
scas
scas
cmp
pop
cld
data16
loope
loope
pop
pop
out
fdivrs
jle
jg
jge
pop
pop
jmp
mov
orl
fistl
and
in
mov
jbe
xorps
add
jg
jle
shrl
frstor
cmc
mov
fstpt
pop
push
mov
fiaddl
pop
aas
mov
movd
jp
out
outsb
fcomp
not
inc
xlat
push
push
stc
push
push
jbe
jns
fdivrl
pop
out
jp
mov
fcomi
jbe
cli
ss
push
shrl
lahf
jnp
jg
cmpsb
push
stc
pop
divl
jge
jge
inc
fmull
jge
push
pop
jnp
fcmovu
scas
cltd
rcr
dec
push
xor
scas
dec
mov
xor
xchg
pop
testb
pop
jnp
and
jecxz
xchg
push
push
decl
jnp
fildl
pop
push
js
pop
jge
outsb
faddp
rol
push
fmull
cs
outsb
jl
push
sahf
and
mov
inc
stc
jnp
insl
popf
push
mov
pop
out
push
sahf
push
fcmovnu
fnstsw
pop
cmpsb
push
jl
jge
mov
push
pop
ss
sbb
fstps
aad
mov
or
pop
repz
jns
add
jle
loope
pusha
xchg
pop
jmp
add
mov
fidivrs
decl
loope,pn
outsl
jb
js
and
incl
or
and
or
gs
pop
adc
rclb
scas
iret
in
pop
test
ljmp
lcall
outsl
lret
insb
mov
movsl
xchg
fdivrp
mov
mov
cmp
xchg
nop
into
fdivr
ljmp
xchg
mov
insl
clc
je
cs
xor
mov
mov
and
mov
lahf
mulb
sub
nop
cmpsb
jle
inc
jmp
or
rol
test
negb
add
rcr
test
popa
adc
mov
incl
int3
push
and
cmpsb
add
in
cli
cmp
or
in
push
dec
and
out
xchg
lea
jo
stos
sbb
or
int3
sbb
das
xor
pop
inc
pop
or
out
mov
sahf
jg
sub
jp
pop
lcall
xor
mov
scas
xorb
ljmp
enter
mov
mov
adc
outsb
lods
dec
pop
xchg
inc
int
inc
es
mov
decl
cltd
es
xchg
hlt
mov
jecxz
mov
or
xlat
dec
lcall
call
jmp
test
fsubrl
dec
push
push
popa
int
xchg
push
sub
pushl
mov
xor
or
stos
and
xor
push
jbe
dec
imul
sbb
jl
popa
lods
pop
dec
scas
ja
xchg
or
add
in
jle
mov
and
inc
fsubl
lock
decl
mov
imul
out
add
jmp
jbe
inc
dec
outsl
test
xchg
repnz
xchg
outsl
jnp
jle
adc
sahf
xor
mov
mov
inc
cmp
icebp
jmp
cmpsl
push
aad
addr16
aam
adc
jns
ljmp
int3
dec
add
and
insl
pop
loopne
mov
imul
lcall
adc
shll
dec
push
call
insl
push
push
in
jbe
sbb
fildll
or
daa
in
cmpl
loope
add
mov
decl
sub
lahf
cmpsb
jp
ds
xchg
lea
pop
dec
dec
mov
sub
decl
ret
test
stos
mov
pop
fucomp
lret
or
jg
dec
js
movl
hlt
mov
movsb
in
pop
sub
jmp
dec
xchg
clc
mov
insl
sbb
sub
ja
push
popa
pop
sar
adc
inc
ficomps
jmp
push
stos
push
mov
sbbl
or
cltd
jae
adc
js
incl
lds
lret
sbb
sub
sub
dec
aad
xchg
cs
rcrb
or
add
jg
jnp
outsb
insb
rcrb
xor
adc
sbb
push
das
test
ljmp
mov
addb
insl
mov
push
movsb
clc
sub
aaa
cmp
xor
mov
bound
lahf
mov
xchg
mov
push
add
shll
fdivr
xchg
jecxz
mov
js
decl
sub
jns
mov
cmc
mov
add
xor
dec
call
and
negb
cmp
loopne
loope
cltd
filds
test
and
loop
icebp
cmpsb
repz
pop
cmp
or
ljmp
repz
into
mov
adc
int3
addb
mov
xchg
dec
adc
cmpsl
addb
pusha
mov
cmp
dec
add
addb
dec
push
ljmp
ret
shlb
push
addl
or
inc
and
xor
pop
or
dec
add
xchg
push
or
xor
mov
or
add
add
nop
add
orb
adc
sbb
rorb
lods
aam
sub
fsubl
push
shlb
js
or
mov
loop
inc
insb
sbbb
or
adc
xor
mov
adc
inc
mov
shrl
inc
push
sahf
adc
pushw
push
or
aas
jl
and
mov
push
lret
imul
aam
sbb
inc
jp
xor
data16
push
dec
inc
adc
push
nop
sub
pop
sarl
dec
mov
loopne
add
xorb
inc
xchg
add
orb
and
ret
ficoml
sbb
push
into
mov
negb
sub
push
jnp
xchg
cltd
sbb
data16
stos
add
or
movb
mov
int3
pushf
adc
test
pusha
sbb
push
inc
cmpb
cwtl
adc
pop
add
imul
adc
bound
and
or
jle
inc
dec
and
xor
push
adc
nop
or
addl
test
addb
lret
or
xor
int3
push
out
bound
call
lcall
xor
and
add
and
inc
ss
aad
xor
jp
inc
outsb
mov
pop
pop
lods
mov
andb
dec
inc
dec
mov
xor
nop
sub
pop
test
inc
sub
xchg
int3
int3
inc
ret
push
cmp
andb
cmp
mov
push
daa
or
xchg
cltd
or
pop
add
dec
sbbb
sbb
push
ja
mov
addb
js
fimuls
cli
sbb
or
xchg
pop
and
xchg
adc
andb
or
sbb
push
or
or
jl
add
data16
add
or
lds
je
cwtl
ljmp
lods
cltd
inc
popa
adc
clc
sub
inc
xor
aam
mov
or
lcall
xchg
cltd
jge
inc
fs
push
pop
xor
fiadds
daa
es
add
movsb
loope
add
cmp
inc
add
mov
push
jo
xor
push
insb
mov
xchg
adc
add
and
mov
xor
push
jo
je
jle
adc
xor
jp
adcb
repnz
pushf
out
test
scas
add
inc
cmpl
shll
push
mov
ror
sub
and
frstor
pop
cmc
movsb
sub
pusha
push
shrb
aam
dec
cmp
mov
data16
dec
inc
mov
sub
pop
jp
mov
test
cmp
push
add
data16
adc
or
pop
es
cs
and
pop
jl
jae
data16
cwtl
inc
lret
mov
sub
mov
inc
jo
rolb
fmul
dec
lret
pop
sbb
mov
and
and
xor
push
cmpsb
cli
push
inc
push
mov
and
sbb
jae
fsubrs
mov
or
xchg
dec
mov
lret
into
push
negb
cmp
xchg
add
push
jo
xorb
mov
add
add
adc
shrl
test
cmp
outsl
or
call
or
xor
push
dec
sub
lock
push
or
or
inc
xchg
and
lcall
pop
ficoml
je
data16
pop
mov
test
sbb
ficomps
and
jle
inc
shl
in
notb
movb
lds
and
test
and
mov
mov
xor
ror
push
into
ret
es
pop
sbb
int3
mov
and
inc
mov
testb
cltd
add
xchg
xchg
lea
loop
jl
bound
xchg
cltd
adc
lods
push
ret
or
scas
xchg
mov
lods
xchg
sub
out
push
das
lds
into
lret
es
sub
push
js
hlt
push
cld
cmp
and
add
ss
push
cld
inc
into
xor
hlt
lock
pop
lret
or
fiadds
daa
add
sbb
pop
fldl2e
stos
cs
lcall
push
mov
pop
lods
jo,pt
pushf
mov
movl
lcall
scas
xchg
rolb
dec
lock
lods
sarb
add
jp
pop
jl
data16
data16
add
fld
or
into
pop
dec
jl
cmpsb
sub
jne
adc
mov
in
inc
jo,pt
js
test
insb
bound
cmpsb
add
aam
test
pop
cld
repnz
xor
push
add
jp
push
out
loope
int3
mov
cltd
sbb
adc
loope
add
xchg
push
scas
inc
push
mov
add
insb
hlt
sbbl
fcoms
and
rol
lcall
or
imul
push
and
dec
add
lret
jp
jecxz
cmp
bound
xor
dec
and
adc
inc
xor
add
mov
mov
adc
fdivl
sub
push
xchg
sti
cmp
stos
pop
adc
and
inc
xor
push
mov
adc
shrb
icebp
mov
or
sbbl
test
inc
add
dec
cmp
jbe
jmp
cmp
dec
addl
data16
mov
adc
lods
push
subb
or
roll
push
packssdw
add
js
inc
push
out
and
sbb
add
xor
addl
push
adc
cmpsl
stos
stos
addb
outsb
pop
xor
push
loop
in
les
add
pusha
or
push
inc
adc
sbb
xor
sbbl
sub
ss
adc
push
and
int3
pusha
sbb
dec
adc
adc
adc
sbb
dec
in
je
bound
test
add
and
xor
test
rolb
jb
add
cli
sbbb
lods
lea
dec
sbb
into
and
push
xchg
popa
add
mov
adc
jl
sbb
popa
rclb
push
xchg
xor
imul
loop
negb
mov
add
push
or
or
bound
ret
add
andl
sub
fiadds
mov
sub
xchg
cwtl
sahf
clc
cmc
xor
jp
dec
xor
movsl
xorb
mov
mov
shlb
adc
and
bound
add
andb
adc
pusha
pusha
stos
inc
mov
loopne
mov
jle
jo
and
push
js
and
xor
nop
jle
jle,pt
sbb
fadds
pop
int3
sbb
enter
xor
icebp
mov
outsb
pop
in
test
test
push
pop
and
popa
push
lret
idivb
sbb
sahf
and
filds
popa
dec
ja
inc
pusha
and
add
aaa
incl
je
outsl
fs
gs
popa
outsb
fs
gs
inc
js
je
jb
arpl
jle
enter
jne
jb
push
push
outsw
jb
mov
push
int
es
mov
sahf
mov
sbb
jb
outsl
dec
js
imul
not
inc
insl
push
fs
imul
mov
imul
addr16
jl
pusha
inc
imul
sti
addr16
imul
outsl
jae
adc
insl
sbb
jbe
push
std
dec
gs
jo
mov
insb
push
outsb
ja
mov
testb
cmc
inc
outsl
inc
out
loopne
mov
mov
adc
cmp
insb
leave
sti
in
sbbl
adc
andb
sub
sahf
mov
jge
inc
sub
bound
lret
pop
sbb
jmp
fidivs
jae
arpl
push
cmc
jg
addl
push
mov
or
push
imul
fs
fsubrp
push
jg
xor
dec
inc
dec
sbb
push
lcall
sbb
push
jns
gs
cmpsb
js
out
push
inc
jae
adc
fs
jbe
add
popa
bound
gs
pop
cwtl
jg
dec
outsl
arpl
sub
sbb
push
jo
jge
rclb
xor
adc
sbb
sub
mov
lds
dec
jae
jb
pop
fs
or
ret
cmp
pop
mov
flds
inc
rcll
pop
cmovl
clc
fidivs
push
dec
mov
andb
andl
push
push
ret
fs
push
popa
imul
test
inc
xchg
inc
loopne
jnp
jp
dec
js
insb
ret
cmp
outsb
inc
arpl
inc
imul
addr16
jo
dec
pop
lock
cmp
inc
pushf
imul
rol
andb
shld
fnsave
je
xchg
fcmovnu
sbb
mov
jns
ss
mov
je
outsl
imul
push
movsb
sbbl
jne
push
sub
cmpb
fs
sub
lods
sub
adc
insl
jp
inc
insb
inc
insb
jns
js,pt
rclb
js
mov
push
push
inc
dec
xor
mov
sahf
loopne
xchg
xchg
iret
xor
inc
sub
add
mov
dec
mov
inc
pop
add
inc
xlat
ss
ja
or
flds
sbb
enter
imul
adc
les
mov
pop
mov
jbe
mov
xor
loope
jb
mov
push
pop
add
inc
dec
addr16
in
popf
inc
fimuls
dec
or
pop
testl
sbb
addr16
dec
and
in
mov
mov
dec
int3
pusha
cs
add
repnz
lock
aas
shrb
nop
dec
repz
add
nop
out
js
dec
mov
cmp
rorb
or
add
jae
push
sarb
stc
sahf
pop
add
xor
ja
add
aaa
xchg
xor
xchg
and
js
xor
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
add
add
inc
pop
add
addb
addb
and
or
add
pusha
add
orb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
addb
add
mov
add
add
add
addb
add
lock
addb
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
cmp
add
or
cmp
add
xor
cmp
add
pop
add
cmp
add
addb
testl
add
rolb
xor
add
clc
add
xor
add
and
add
dec
add
add
jo
add
cwtl
add
add
rolb
add
add
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
or
add
add
rcl
add
add
add
add
add
flds
add
or
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
call
add
add
add
add
add
push
daa
add
call
add
add
add
add
add
cmp
add
call
add
add
add
add
xor
call
add
add
add
add
ds
mov
add
or
add
add
add
or
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
popa
add
call
add
add
add
add
insb
add
call
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
sub
add
or
add
add
add
add
add
add
add
add
pusha
nop
add
call
add
add
add
add
add
dec
fwait
add
sub
add
add
add
add
add
scas
add
mov
add
or
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
or
add
add
add
mov
add
or
add
add
js
add
mov
add
or
add
mov
add
or
add
ret
call
add
add
add
add
add
add
call
add
add
add
add
push
add
mov
or
add
add
add
add
add
push
add
mov
or
add
add
add
add
add
add
mov
add
call
add
add
add
add
add
jo
add
call
add
add
add
add
add
add
add
add
add
add
push
add
loopne
add
add
add
add
add
add
push
add
enter
call
add
add
add
add
pop
add
add
add
or
add
pop
add
les
add
add
add
add
add
add
add
add
add
add
or
add
add
test
add
add
add
add
add
add
add
add
add
add
and
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
and
inc
add
add
insb
add
add
add
insl
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
inc
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
popa
add
add
popa
add
imul
and
inc
add
outsl
add
add
add
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
popa
add
jae
and
dec
add
outsb
add
add
popa
add
and
dec
add
add
add
add
add
add
add
sub
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
je
jns
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
and
push
add
jae
add
add
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
push
add
push
add
imul
sub
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
