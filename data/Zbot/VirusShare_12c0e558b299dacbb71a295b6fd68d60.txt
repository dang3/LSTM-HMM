stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
xor
mov
mov
pusha
call
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
pop
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
cld
sub
lea
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
sub
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
add
lret
add
add
or
add
jle
add
inc
and
add
and
add
and
add
add
add
add
and
add
add
and
add
and
add
add
cld
and
add
add
or
add
and
add
and
add
add
add
add
push
add
es
add
and
add
add
add
add
add
and
add
and
add
and
add
add
sbb
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
add
lret
add
add
or
add
jle
add
inc
and
add
and
add
and
add
add
add
add
and
add
add
and
add
and
add
add
cld
and
add
add
or
add
and
add
and
add
add
add
add
push
add
es
add
and
add
add
add
add
add
add
je
jne
jb
outsb
je
jb
arpl
jae
call
inc
imul
bound
gs
add
addl
jb
popa
je
inc
imul
jns
add
push
add
outsl
jae
dec
popa
outsb
fs
add
add
gs
outsl
jbe
inc
imul
jns
add
movsl
add
je
gs
imul
repnz
imul
jb
je
arpl
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
imul
bound
gs
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
outsb
fs
insb
outsl
jae
add
inc
gs
je
dec
popa
outsb
fs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
outsl
bound
inc
insb
popa
addr16
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
jb
add
xchg
add
je
jne
jb
outsb
je
push
add
push
push
je
imul
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
dec
inc
dec
xor
cs
insb
add
mov
push
push
gs
popa
addr16
outsl
js
add
sbb
insb
imul
outsl
outsb
add
add
inc
jb
add
lods
add
gs
insb
inc
bound
je
add
inc
push
add
addr16
jne
jb
inc
imul
inc
js
jb
arpl
outsl
outsb
inc
add
push
add
addr16
arpl
jo
inc
imul
insb
insb
push
outsb
jb
imul
jb
gs
pop
add
addr16
imul
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
mov
push
dec
inc
gs
gs
imul
inc
dec
dec
xor
cs
insb
add
add
arpl
je
js
insb
imul
jb
gs
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
gs
outsb
fs
jb
popa
jns
pop
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
sub
cwtl
xor
mov
fsubs
addr16
out
stos
fcmovnbe
fisubrs
add
rclb
dec
xchg
aad
or
mov
sbb
sbb
jl
pop
mov
hlt
adc
scas
shll
mov
lret
jl
push
test
out
jmp
pusha
lahf
inc
das
pop
pop
sub
fcomi
mov
or
imul
arpl
mov
in
push
cmc
fnsave
cmpsl
or
jo
adc
sub
outsb
shrl
xchg
shlb
mov
insl
imul
scas
insb
into
gs
jb
inc
xchg
aam
aam
idivl
mov
adc
mov
adc
add
ljmp
leave
push
push
sarb
pop
stos
adc
push
aad
adc
fcomp
sub
out
fwait
movl
xor
ds
addl
xor
cmp
ds
popf
movsb
jge
add
pop
adc
cmp
shl
push
push
sbb
sbb
mov
push
jnp
or
jno
pop
jecxz
add
in
pop
cmp
clc
cmpsl
sahf
xchg
mov
mov
popf
divl
movsl
std
in
repnz
push
and
and
pop
popa
cmpsb
xor
sub
arpl
out
or
cmp
les
dec
pop
push
and
pop
pop
sbb
bound
frstor
push
loopne
sbb
xor
lret
jp
or
jle
fs
mov
xchg
pop
jae
mov
mov
jl
push
mov
jnp
test
stos
inc
dec
pop
int3
ljmp
xchg
push
sbb
ss
dec
jle
pop
xor
push
push
xor
rcrb
je
adc
aaa
stos
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
test
add
clc
data16
test
add
mov
or
add
addl
add
mov
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jg
add
add
xchg
xchg
add
mov
inc
mov
ret
leave
lret
int3
int
rcl
in
rcl
shl
ror
shl
int3
into
int3
hlt
leave
enter
leave
enter
mov
mov
lods
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
not
rcl
cld
xlat
fcom
std
xlat
xlat
fcom
aam
aad
iret
rcl
dec
into
int3
aad
dec
rcl
inc
ret
mov
mov
lods
iret
movsb
mov
mov
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
lods
sbb
mov
jnp
mov
sar
dec
lret
leave
call
iret
iret
aad
fcom
xlat
call
xlat
call
aad
dec
int3
into
dec
int3
int3
call
aam
dec
int3
int
sarb
mov
scas
lods
std
test
cmpsl
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
push
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int3
int
rcl
sar
fcom
fcomp
call
aam
dec
int3
int
lret
dec
int3
into
inc
mov
mov
mov
cmpsb
cmpsl
test
mov
fwait
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
imul
pop
pop
pop
fs
ds
push
push
sbb
prefetch
sbb
aaa
ss
cmp
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
inc
leave
call
iret
sar
aad
aam
aam
call
ror
dec
enter
inc
ret
mov
mov
ljmp
mov
pushf
xchg
cwtl
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jo
jge
jge
jle
jge
jno
jb
popa
popa
bound
cmp
cmp
pop
pop
pop
stos
outsl
outsl
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
lret
dec
lret
lret
inc
leave
inc
ret
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
fwait
fwait
lcall
aas
ds
push
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
pusha
lea
incb
jnp
idivb
jnp
outsb
outsl
outsb
out
push
data16
ret
jg
jns
jns
fs
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
incl
addl
xchg
xchg
mov
mov
xchg
mov
js
jp
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
lcall
mov
cmp
mov
clc
jge
jg
jno
jo
jae
jne
jge
jg
addb
xchg
pushw
cmp
cmp
and
and
cmp
movsl
movsl
mov
icebp
lods
lods
lods
sti
lods
lods
lods
lods
lods
lods
stos
stos
stos
std
movsb
mov
cltd
xchg
xchg
xchg
decl
jge
jns
js
jl
jp
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
movsb
cmpsl
out
scas
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
push
femms
xor
inc
dec
imul
test
xchg
leave
lcall
out
cltd
cltd
cltd
stc
xchg
nop
std
mov
decl
mov
fwait
lcall
lods
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
cmpsl
lods
call
cltd
xchg
cltd
incl
test
decb
xchg
xchg
pushf
pushf
sahf
std
mov
mov
xchg
in
nop
nop
xchg
in
test
push
jne
push
or
inc
or
or
sub
push
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
mov
nop
call
mov
cmpsl
ljmp
test
scas
mov
xchg
test
rorb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
lcall
mov
decl
xchg
decl
xchg
xchg
popf
pushf
popf
movsl
movsb
movsl
test
test
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
popa
jne
je
mov
jle
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
ss
mov
jbe
mov
movsl
mov
mov
mov
stos
lods
stos
mov
movsl
mov
add
pop
pop
adc
mov
ljmp
popf
decl
nop
xchg
call
xchg
xchg
call
cwtl
cwtl
lcall
sahf
sahf
lahf
movsb
movsb
movsl
std
movsb
movsb
mov
out
nop
xchg
mov
cwtl
aad
xchg
lcall
lea
stc
xchg
xchg
std
xchg
jb
cltd
imul
ljmp
cmp
mov
jae
mov
outsl
ljmp
packuswb
lods
or
lods
or
pushl
lahf
scas
mov
test
movsl
and
add
add
mov
add
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
sahf
popf
jmp
popf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
cwtl
cltd
cld
cwtl
xchg
popf
stc
mov
xchg
popf
cld
sahf
mov
xchg
imul
xchg
dec
jns
cltd
jbe,pt
lcall
sahf
pop
jmp
adc
ljmp
adc
lods
pcmpgtw
scas
adc
mov
imul
mov
imul
ds
lcall
lods
lods
scas
scas
movsl
movsb
movsl
sub
movsb
movsl
movsb
add
pop
pop
adc
mov
ljmp
popf
call
sahf
sahf
lcall
movsb
movsl
jmp
mov
xchg
decl
mov
decl
fwait
jb
lcall
call
sub
decl
adc
nop
or
pop
call
add
sahf
pop
pop
ljmp
sbb
mov
outsl
pushl
push
outsl
mov
and
and
mov
inc
test
ret
xchg
lods
mov
scas
scas
mov
lahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
mov
cwtl
popf
lcall
movsl
movsb
ljmp
cmpsb
cmpsb
ljmp
cmpsb
cmpsb
lcall
orb
mov
decl
sub
mov
decl
or
addl
incl
add
lea
pop
call
add
fwait
add
mov
or
mov
jo
mov
jne
mov
sub
sub
ret
inc
sub
jg
leave
cs
inc
mov
leave
mov
cld
scas
mov
lret
mov
add
add
add
add
add
push
push
adc
test
ljmp
popf
jmp
stos
test
ljmp
mov
scas
scas
scas
jmp
jo
decl
or
push
incl
add
incl
add
test
push
incl
add
add
xchg
add
cltd
add
lahf
add
add
ljmp
sub
mov
cmp
leave
cmp
dec
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
cltd
popf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
decl
push
decl
push
pop
decl
or
add
incl
add
popl
pop
call
add
add
test
pusha
ljmp
sbb
ret
dec
inc
dec
inc
call
inc
mov
rorb
fmuls
fmuls
fmull
fistl
call
xchg
std
mov
mov
movsl
movsl
mov
or
add
add
add
add
inc
dec
adc
jnp
mov
test
jmp
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
insl
decl
sbb
call
adc
decl
or
mov
push
call
add
popf
add
mov
add
stos
add
mov
arpl
shll
int3
inc
mov
aad
cltd
fcoms
fsts
fstl
ficomps
fists
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
test
test
mov
mov
add
add
add
xchg
xchg
xchg
add
adc
js
sahf
cltd
popf
jmp
sahf
cltd
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
pop
call
and
call
sbb
nop
or
nop
add
xchg
add
lcall
jmp
add
mov
gs
mov
xor
fistpl
fisubs
loopne
mov
jmp
data16
call
push
test
fldl
ret
mov
cmpsb
mov
sahf
sahf
add
inc
inc
adc
jp
xchg
cwtl
call
lahf
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
sbb
pop
call
add
mov
add
lods
add
mov
pushl
movd
roll
jmp
outsb
lods
jmp
jo
jmp
jo
ljmp
in
jae
in
je
out
je
in
jb
jmp
xchg
mov
cmpsb
cmpsl
lcall
mov
add
add
add
jg
cmp
insb
insl
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
outsb
lcall
cmp
xor
lcall
call
add
add
stos
add
mov
arpl
mov
fs
mov
sbb
fsts
in
mov
call
jle
in
cmpb
icebp
cmpl
push
test
ljmp
inc
mov
test
sahf
sahf
sahf
daa
mov
mov
add
bound
cmp
cmp
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
pushl
insl
mov
cltd
cmp
inc
jle
movsb
inc
jle
mov
sbb
add
pushf
add
movsb
add
stos
add
scas
add
add
mov
add
dec
daa
cmp
jmp
mov
push
pop
push
pop
push
pop
push
xchg
ret
push
xchg
xchg
stc
mov
in
mov
fidivl
lods
stos
mov
pushf
pushf
xor
pushf
popf
add
add
add
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
push
decl
mov
mov
mov
mov
inc
ret
ret
mov
ljmp
inc
jnp
cmpsb
dec
cmp
movsl
xor
pusha
lcall
add
cmpsb
add
lods
add
mov
arpl
mov
add
leave
add
fdivs
mov
out
xchg
push
fwait
push
fwait
push
lcall
negb
lret
popf
int3
sti
popf
int
cli
lcall
fidivs
cli
mov
mov
lahf
sahf
sahf
aas
nop
xchg
add
add
add
cmp
add
xor
or
cmp
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
mov
mov
mov
lcall
push
xchg
lods
dec
xchg
mov
or
popf
add
add
stos
add
mov
arpl
mov
add
enter
rorl
je
filds
out
mov
push
cmpsb
into
push
movsb
into
stc
test
cld
test
cli
cmpsl
sar
cld
test
sar
stos
iret
std
cmpsl
sar
negl
lret
lret
mov
mov
sahf
lahf
mov
add
fwait
fwait
add
add
add
sub
inc
inc
inc
bound
pop
xlat
jae
jo
mov
sarl
mov
mov
leave
leave
enter
ret
pushl
push
xchg
lods
push
mov
scas
dec
xchg
mov
add
movsb
add
stos
add
mov
arpl
mov
add
int3
add
fadds
jb
fists
jge
in
pop
cmpsl
push
popf
leave
sti
lods
aam
cld
scas
cld
mov
cli
scas
sar
cld
mov
mov
mov
cld
mov
pushl
sar
mulb
dec
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
push
sbb
ss
outsb
mov
fcomp
jmp
not
rcl
std
lret
int3
int
leave
lret
lret
dec
lret
leave
dec
lret
mov
mov
lods
jmp
push
mov
stos
cmp
lcall
add
stos
add
mov
fs
mov
add
roll
outsb
fadds
jb
fiadds
je
ljmp
sti
lods
aam
mov
fcos
mov
fdivr
mov
xlat
mov
fcos
mov
xlat
stc
mov
call
leave
int3
mov
lahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
loop
call
out
test
in
leave
fsubp
fcmovu
xlat
fcmovnbe
cli
aad
std
into
iret
sar
mov
imul
jmp
add
mov
mov
add
lret
add
aad
jno
fildl
ja
in
ja
out
das
xchg
stc
mov
sti
mov
inc
std
loop
inc
fdivrp
inc
inc
loopne
inc
dec
std
std
leave
cli
mov
lret
lret
mov
mov
xchg
adc
add
add
std
add
incb
std
add
cmc
hlt
or
out
jmp
in
out
in
sub
out
in
dec
call
ljmp
in
out
fsubr
ret
stc
stos
jno
test
ja
movsb
adc
jmp
popa
pushl
imul
into
add
add
loopne
ja
jmp
inc
pushf
cli
mov
loop
std
int3
jecxz
dec
in
std
int3
in
dec
jecxz
dec
jecxz
dec
loope
shl
std
iret
loop
call
in
shl
sti
out
mov
inc
ret
cmpsl
test
mov
cwtl
xchg
add
add
add
incl
std
std
incl
idiv
clc
add
repnz
add
hlt
icebp
push
out
icebp
out
pop
in
lock
cmp
in
in
pop
loopne
loopne
les
sti
lahf
and
pop
jmp
add
mov
gs
add
leave
add
add
fiaddl
je
jecxz
jnp
jmp
jle
negl
cld
mov
std
shl
std
iret
in
shr
shl
std
shl
std
aad
fsubr
xlat
call
fld1
std
std
iret
loopne
repz
jmp
aad
dec
leave
leave
repz
xchg
xchg
and
xchg
xchg
add
sti
add
clc
add
cld
clc
add
cmc
hlt
or
aad
xor
je
negb
add
add
lods
add
mov
add
lret
add
roll
jo
fildl
ja
out
ja
out
sbb
cli
std
fsubr
fucomi
fldlg2
std
fucomi
std
fucompp
fucomp
fucomp
fucomp
fsubrp
std
fucomip
loopne
aam
push
ret
out
fdivr
rcl
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsl
outsl
outsb
add
add
add
loopne
add
mov
xchg
repnz
ljmp
add
mov
add
into
add
aad
jae
loopne
je
ljmp
sti
pop
std
shr
std
fdivp
fsubr
std
fldpi
fucomi
call
shl
cld
shl
cli
shl
clc
int
stc
lret
cmc
rcl
out
mov
fcom
sti
mov
mov
fwait
lcall
cltd
lcall
mov
mov
add
enter
mov
mov
lcall
add
mov
mov
add
roll
outsb
call
add
loopne
js
call
ss
cli
xchg
enter
cli
lret
cld
idivl
aam
hlt
mov
sar
lock
int3
ljmp
jmp
ret
sar
jmp
fsub
cmc
fsubp
fsubrp
mov
mov
xchg
add
add
add
int3
int
mov
sarl
sahf
xor
jmp
add
mov
gs
mov
add
into
pop
jb
rorb
fsts
js
loope
cmp
dec
cwtl
call
scas
int3
call
mov
std
loop
ret
cld
loopne
ret
cli
fstpt
enter
enter
int
fmul
into
iret
aad
loop
fcmovb
out
loop
jmp
call
popf
ljmp
push
stos
stos
lods
adc
test
cmpsl
add
ret
mov
ret
mov
stos
aam
dec
jg
popf
sbb
cmpsl
sbb
lods
es
mov
jns
mov
dec
test
ret
stc
lret
test
mov
out
mov
mov
lret
int3
rcl
int3
mov
iret
shll
rcl
jg
fcmovu
jb
fsubp
gs
in
out
call
xor
div
cmc
and
repnz
sbb
fcmovnu
or
mov
int
mov
add
mov
rol
mov
scas
mov
test
insb
mov
test
sbbb
mov
cmpsl
sarb
test
mov
mov
cmpsl
mov
enter
int
ror
into
addr16
rcll
rcl
dec
aad
rcr
xor
fcmovnu
daa
fcomp
fistpl
fchs
ficoms
fsubp
loop
loope
jecxz
out
jmp
jmp
out
add
cld
cmc
add
sti
add
std
incl
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
ret
xor
int3
leave
daa
lret
rcl
and
aam
rcl
rclb
rcl
rorl
rcl
aad
rcr
xlat
add
fstp
add
add
jecxz
add
in
ljmp
incb
mov
mov
add
ret
ret
sub
mov
mov
push
rol
or
leave
enter
leave
add
into
lret
roll
rcl
aad
rcl
aam
aad
aad
aam
add
fchs
add
flds
loop
loopne
in
out
icebp
icebp
lock
incl
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
mov
mov
mov
ja
test
dec
test
test
pop
add
add
add
add
add
add
scas
mov
adc
mov
aam
iret
shr
aam
aam
aam
sar
iret
ror
cli
int
int3
stc
int3
int3
lret
mov
mov
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
rcl
into
aad
aad
aad
call
rcl
dec
int
dec
lret
mov
mov
cld
stos
lods
stos
icebp
cltd
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
je
je
gs
dec
inc
dec
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
lret
rcl
call
rcl
dec
int3
lret
inc
mov
sarb
ljmp
sahf
lahf
xchg
xchg
xchg
jmp
outsl
jno
push
pop
push
dec
add
add
add
add
add
add
addb
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
sar
mov
mov
mov
ljmp
fwait
pushf
call
xchg
cltd
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
cltd
cltd
add
pushf
cwtl
lcall
addl
jmp
js
sarb
jns
jns
jp
jae
jae
push
push
push
cmp
jne
pushf
pushf
sahf
mov
lods
scas
repz
scas
scas
sti
lods
lods
scas
std
cmpsl
test
pushf
call
test
call
mov
lods
jmp
scas
lods
leave
cmpsb
cmpsb
movsl
cltd
je
jae
adc
adc
add
add
add
add
outsb
insl
insl
pop
mov
mov
test
std
nop
nop
nop
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
lcall
mov
call
sahf
ljmp
stos
scas
std
mov
mov
stc
mov
mov
cmpsb
movsb
cmpsl
pop
addb
add
add
add
popa
or
lods
mov
cmpsl
lahf
movsl
decl
lea
lcall
popf
sahf
sti
sahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
insl
outsb
outsl
xchg
subl
mov
std
xchg
mov
ljmp
jle
pushl
pop
mov
jl
mov
scas
lods
insl
stos
stos
test
add
add
add
pusha
or
mov
in
movsb
test
call
xchg
xchg
call
cwtl
fwait
fwait
pushf
lcall
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
push
cld
xchg
pop
jg
pushf
dec
jp
movsb
inc
js
lods
xor
jb
scas
push
insl
ljmp
sbb
mov
lods
mov
scas
mov
jle
movsl
movsb
push
pop
pop
pusha
or
mov
in
movsb
test
lcall
mov
lahf
call
mov
xchg
jp
std
xchg
jae
cld
xchg
pop
cmp
dec
jp
xchg
cmp
nop
sub
xchg
sbb
cltd
adc
sahf
punpckldq
cmpsl
pop
ljmp
pushl
sbb
mov
and
mov
stos
mov
lods
scas
scas
xchg
lahf
popf
sahf
adc
add
add
pop
popa
pop
or
lods
mov
stos
movsb
test
mov
cmpsb
cmpsb
ljmp
cmpsl
cmpsl
lcall
pop
jnp
mov
imul
sub
mov
pusha
decl
or
mov
decl
add
pushf
add
cmpsb
or
je
mov
sub
jge
leave
das
cmp
leave
pop
xchg
inc
test
divl
test
add
add
add
pusha
pop
pusha
or
cmpsb
test
cmpsl
mov
test
scas
scas
scas
pushl
mov
jmp
inc
jno
mov
pop
decl
or
push
push
decl
add
xchg
add
lahf
add
add
mov
insb
inc
cmp
dec
inc
mov
roll
call
inc
nop
call
popa
sahf
inc
test
stc
mov
mov
movsl
mov
std
add
add
add
pop
or
popf
mov
ljmp
mov
mov
mov
stos
call
sbb
popa
decl
or
nop
add
xchg
add
sahf
add
test
pop
ljmp
and
iret
dec
xchg
fcomps
ficompl
fistps
jmp
pop
mov
fildll
int
mov
ret
cmpsb
xor
add
add
dec
pop
jge
jl
fwait
xchg
lcall
lods
scas
pushl
mov
mov
lcall
sub
lcall
and
call
add
popf
add
cmpsl
add
mov
arpl
mov
push
fsubl
jmp
insl
test
in
stos
ljmp
in
jno
call
test
mov
inc
jg
addb
add
dec
dec
dec
pop
outsl
outsb
push
mov
cwtl
pushl
mov
mov
mov
jbe
lcall
cmp
sahf
sub
cwtl
or
lcall
ljmp
gs
or
inc
xchg
jmp
js
jmp
mov
in
cmpl
xacquire
out
mov
mov
test
push
lcall
add
sub
push
push
push
dec
pop
pushw
loopne
mov
mov
mov
ret
mov
xchg
ljmp
sub
cltd
pop
pop
jmp
add
mov
arpl
mov
push
ja
loope
mov
push
xchg
push
cltd
push
xchg
enter
leave
stc
pushf
lret
push
xchg
jmp
stos
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
xchg
test
cmpsb
push
mov
lods
dec
test
mov
add
ljmp
add
add
leave
add
and
push
mov
sar
stc
test
sti
test
sar
cld
lods
sar
cli
cmpsb
lret
call
rol
stos
test
pushf
or
add
add
dec
push
dec
aaa
je
je
test
int
out
int
cmc
lret
sti
leave
lret
lret
leave
mov
bound
mov
add
mov
gs
add
iret
add
flds
je
call
xchg
mov
mov
fdivr
std
mov
mov
sar
ljmp
repz
scas
lods
mov
add
add
add
add
or
rcl
dec
loope
fsubp
fistps
fcom
out
shll
test
or
mov
popa
mov
add
aad
jae
loop
jnp
icebp
dec
mov
std
inc
loop
inc
inc
loopne
dec
dec
std
fdivr
lock
leave
divb
pushf
pushf
sbb
add
add
std
std
add
std
incl
jmp
or
in
in
sbb
in
in
xor
loopne
loop
les
mov
mov
add
pushl
push
fildl
jbe
call
insb
mov
cld
ret
cld
iret
out
call
in
shl
shl
call
std
shl
push
enter
int
stc
mov
mov
add
std
add
incl
cld
std
cld
pop
aad
aam
mov
pop
mov
lahf
or
ljmp
add
add
rolb
outsl
filds
jne
in
and
std
shl
fldl2t
std
std
fsub
std
fsubr
cld
std
fsub
cld
aam
push
jmp
rcl
sti
mov
sahf
sahf
das
add
add
int3
into
int3
or
bound
ljmp
add
enter
roll
jae
loope
jns
out
das
xchg
push
fwait
enter
loop
stc
leave
loopne
cmc
bnd
repz
out
aam
out
aam
in
jmp
aam
in
fsubr
enter
stos
stos
stos
das
std
incl
aad
push
mov
jae
or
imul
pop
jb
int
jge
xlat
sub
fwait
clc
loop
mov
out
loop
leave
jmp
fidivrs
lret
leave
loopne
iret
mov
in
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
mov
mov
ljmp
fidivrl
jg
rol
stos
mov
lahf
mov
sarb
enter
int3
insl
aam
into
pop
aam
iret
dec
xlat
fcomp
cmp
das
jecxz
fisubs
in
icebp
adc
jmp
or
incl
std
incb
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
enter
aam
aam
mov
rcl
or
fnstsw
or
int
add
std
add
incb
fwait
lcall
or
int
int3
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
fwait
add
rol
enter
leave
enter
mov
ret
sarl
mov
insb
stos
stos
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
rcl
sar
int
int
mov
stc
mov
mov
sarl
sbb
push
add
add
add
add
add
add
add
add
jb
jae
push
inc
inc
das
das
das
das
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int
call
aad
dec
int
dec
enter
mov
jmp
mov
push
add
add
add
add
jae
jne
test
aad
outsl
outsl
ret
arpl
outsb
outsl
insl
jb
pusha
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
cltd
lds
jae
and
add
pop
add
add
jb
jb
popf
xchg
lcall
test
xchg
or
addb
dec
push
push
inc
mov
popf
into
mov
lahf
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
popf
popf
popf
cmc
cwtl
lcall
push
push
push
imul
jge
lea
testl
mov
mov
jb
mov
scas
lods
push
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
cltd
lcall
lcall
xchg
mov
loope
je
out
xchg
fs
push
jnp
fwait
inc
jne
cmpsl
cmp
lods
sub
mov
outsl
pushl
cmp
mov
mov
imul
int3
add
xchg
pop
lods
movsb
stos
test
sahf
popf
popf
jmp
movsb
call
jl
lea
nop
inc
jb
lea
push
mov
call
or
or
scas
sbb
pushl
es
shrl
inc
inc
xchg
rcrl
subl
jne
push
mov
mov
cmpsb
pushl
scas
mov
mov
sub
adc
xchg
push
decl
add
xchg
add
mov
adc
ret
dec
ds
iret
inc
mov
aad
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
movsl
push
add
add
push
imul
movsl
lahf
mov
pushl
mov
ljmp
outsb
call
pop
pop
decl
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsw
call
fwait
mov
mov
mov
cmpsb
cmpsb
test
add
add
arpl
adc
sahf
pushf
lcall
mov
mov
lcall
jno
cltd
and
xchg
pop
pop
jmp
add
mov
xor
call
jl
out
jle
out
jge
fstps
mov
and
add
add
adc
push
cmp
mov
mov
rol
mov
arpl
jmp
add
pop
pushl
or
fmull
out
lea
push
xchg
push
cwtl
leave
push
xchg
jmp
movsl
mov
movsb
movsl
sub
inc
aas
aas
adc
push
xchg
xchg
mov
inc
inc
mov
xchg
ljmp
sbb
movsl
add
mov
gs
add
aad
js
jmp
scas
clc
test
stc
stos
sar
sti
scas
sar
sti
scas
sar
scas
sar
in
scas
enter
mov
ds
incl
xor
add
mov
mov
rcl
aam
aad
aam
rcl
shr
lret
enter
xchg
jmp
add
add
aad
jb
out
xchg
clc
pop
std
mov
fdivr
cld
ret
cld
ret
std
rcr
out
mov
ret
in
cmpsl
cmpsl
dec
jg
jg
add
add
lods
stos
stos
add
in
in
or
call
out
outsb
fisubl
movsl
and
pop
mov
add
add
out
cmp
cld
iret
in
dec
in
std
shl
call
in
aad
push
enter
int
lods
scas
lods
popa
addb
add
std
incl
std
push
int3
int3
shrl
sahf
sbb
lods
add
mov
add
loope
jp
cmc
push
cmpsl
cld
enter
out
cld
in
std
aam
sti
aad
cli
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
scas
push
arpl
mov
push
jne
fstpl
jg
jmp
stos
cld
out
mov
shl
ljmp
jmp
out
rcl
call
fcmovnu
scas
ret
vsqrtsd
add
add
mov
stos
xchg
inc
and
push
mov
ret
int3
lret
mov
mov
int3
adc
int
xlat
lret
rcrb
rcl
dec
jecxz
loope
out
out
out
out
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
ret
mov
ret
and
ret
fisttps
into
int3
int3
or
aam
push
std
incl
addl
add
lods
incl
rol
add
incb
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
loope
pop
mov
call
test
stos
sub
mov
les
push
cmp
lods
and
inc
pop
mov
pop
lret
jge
mov
inc
enter
pop
push
divl
cmp
aaa
sub
push
test
pop
mov
inc
pusha
int
ljmp
aam
data16
es
jge
ret
push
daa
in
repnz
mov
cmp
jb
pop
pop
icebp
adc
in
and
mov
cmp
fstl
into
cld
mov
mov
mov
fidivrl
mov
add
sub
sub
cmp
xchg
sar
mov
and
lret
lahf
popa
xor
xor
pop
rcl
out
icebp
inc
cmp
xor
and
outsb
dec
ror
cmpsb
lock
cmp
stos
clc
adc
scas
in
and
mov
mov
iret
mov
in
sub
adc
js
cmpsb
repz
inc
shll
lret
nop
out
xchg
sbb
pushf
hlt
push
xchg
pusha
pop
stos
jle
mov
pop
stos
sbb
into
xchg
mov
mov
scas
cld
push
cs
je
clc
mov
pop
mov
int3
add
adc
shlb
jp
pushf
ja
mov
sub
jecxz
outsl
dec
xchg
jg
jmp
out
and
xor
call
nop
mov
inc
xor
enter
mov
iret
sbb
fwait
pop
xchg
pop
mov
and
mov
adc
scas
or
mov
lds
popf
push
push
std
push
hlt
stc
cld
dec
ret
cld
mov
int3
dec
adc
in
mov
or
scas
inc
dec
sbb
dec
push
and
lock
mov
stc
sbb
test
imul
in
fldenv
xorb
mov
dec
sbb
or
loope
cmp
out
sbb
cmp
mov
xchg
cmp
xorb
mul
mov
lock
icebp
popf
pop
arpl
lea
jae
cmc
sub
and
aam
jno
gs
xchg
push
dec
ror
imul
test
xchg
cwtl
sub
add
mov
push
adc
push
sbb
cmp
mov
cmc
arpl
mov
push
cmp
pop
ret
and
lea
jg
imul
or
dec
or
das
and
stc
cmpl
std
int
jns
dec
or
mov
and
pusha
outsb
lods
sbb
lret
test
call
mov
jmp
cs
push
repnz
xchg
adc
lock
int
xchg
adc
inc
xor
aad
dec
mov
rcr
sub
lods
sub
cmpsb
xor
xor
sub
sbb
xlat
out
ficomps
icebp
push
mov
sbb
cmp
data16
shlb
push
xor
xor
pop
fbstp
pop
lods
sahf
leave
icebp
pop
or
cmpsb
int3
xchg
scas
jmp
push
sbb
mov
xorl
push
ret
adcl
jne
adc
scas
or
arpl
cwtl
push
jmp
fsubl
jp
dec
aaa
repnz
xchg
dec
sbb
dec
into
inc
ja
les
int3
and
lds
imul
sub
fnstcw
iret
divb
rol
fstps
adc
fmul
adc
jg
adc
shl
pop
xchg
sbb
and
xchg
pop
cmp
inc
sbb
sub
mov
push
addl
sub
jmp
clc
mov
xorb
push
orl
pop
test
and
push
out
int
sub
lods
xlat
outsb
filds
mov
out
cli
sub
mov
push
movsl
out
fisubrs
jae
outsl
out
cmp
lahf
cmp
pop
std
pop
xchg
xchg
roll
push
push
pop
mov
js
jb
mov
xchg
and
mov
rclb
int
daa
imul
xchg
hlt
xchg
fnstenv
test
movsl
aad
loop
out
cmp
test
int
sub
pushf
frstor
jp
negl
data16
pop
add
jp
fistps
mov
gs
mov
lea
pusha
enter
lret
aad
and
addb
jle
add
out
outsl
xchg
cmp
test
cmpsl
jb
gs
jp
pop
and
dec
xor
stos
gs
enter
mov
mov
mov
fisubrl
push
cmpsb
lret
xchg
faddl
or
dec
leave
nop
and
sar
dec
test
insl
ss
mov
xor
jecxz
loop
add
sarb
fs
and
lds
cmp
mov
sub
cmp
fldenv
roll
mov
repnz
pop
rolb
cmp
ds
daa
xor
cmpsb
cmpsl
pusha
aaa
dec
sub
lahf
mov
push
and
pop
jg
or
rorl
out
jmp
ds
sbbb
std
gs
xor
test
push
insb
lret
push
sub
adc
insb
das
pushf
in
outsl
dec
movsl
lea
or
int
jl
lock
call
pop
xlat
push
das
jp
loope
cmpsb
dec
xchg
fistpll
icebp
call
xor
arpl
pop
adc
cmpl
adcb
and
mov
and
in
insl
aas
or
sub
sbb
loope
lods
das
inc
ds
cmp
pusha
loop
es
sbb
jl
enter
xchg
jge
shrl
mov
mov
cmpsl
icebp
das
jo
sahf
adc
jmp
sbb
dec
pop
xlat
sub
rolb
sti
out
inc
faddl
loop
mov
int
pop
icebp
aad
adc
jb
adc
pop
pop
sub
movsb
test
fwait
lods
push
push
add
rorl
or
hlt
test
outsl
lahf
popf
push
sub
and
mov
sbb
pop
hlt
mov
pop
out
outsl
test
jbe
ret
xor
in
sub
push
test
orb
jnp
pop
aad
in
into
mul
jnp
lock
jnp
and
int
ds
or
sbb
pop
jge
int
xchg
push
stc
rcl
test
push
push
in
aaa
dec
stc
nop
jle
jae
imul
pop
das
dec
mov
outsb
cmp
mov
push
xor
xor
and
push
js
push
aad
xor
inc
popl
and
fdivl
adc
mov
icebp
stos
inc
adc
jns
cld
arpl
sub
dec
sbbl
jmp
or
push
es
pop
repnz
jb
scas
jns
loope
stc
nop
int3
add
scas
push
push
mov
mov
xor
imul
push
ljmp
jno
push
push
adc
imul
dec
jecxz
fmulp
bound
inc
push
jns
jmp
pop
int3
test
lods
push
addr16
fnsave
lahf
mov
arpl
scas
int
inc
dec
call
mov
adc
in
adc
outsb
and
sbb
and
add
shlb
insl
mov
cwtl
lods
or
jns
clc
sahf
in
rol
mov
scas
hlt
xchg
ret
rcrl
mov
into
push
fsub
mov
iret
mov
les
out
jno
ret
scas
cwtl
incb
mov
shlb
mulb
test
cmpsb
or
xlat
pushf
fbstp
clc
sub
sub
std
xchg
and
fistpll
mov
popf
data16
into
xchg
cmp
out
test
and
push
out
sbb
cmp
jne
insb
xchg
rclb
xchg
sub
loope
dec
adc
iret
data16
sbb
mov
fisttpl
mov
sub
pop
xchg
jg
fidivs
shlb
pop
adc
das
sbb
add
xor
enter
jbe
xchg
out
adc
xchg
sub
xor
repnz
cmp
mov
push
call
jae
and
add
es
sub
mov
insl
add
dec
es
dec
loop
pop
sub
dec
leave
jno
mov
xchg
addl
fnstenv
adc
or
sbb
es
lods
lret
xor
or
shrb
scas
push
enter
rclb
cmp
in
sahf
xor
ja
clc
jno
repnz
push
dec
loop
sub
iret
pushf
ljmp
xor
inc
flds
cmc
mov
arpl
push
xchg
sbb
adc
fwait
xor
pop
mov
adc
pusha
testl
scas
inc
xlat
push
and
xchg
gs
inc
push
xor
jno
js
dec
push
adc
ss
sub
or
pop
mov
stos
popa
clc
out
mov
mov
mov
mov
pop
xor
fisttpl
or
pop
bnd
es
loope
ror
cli
fbstp
sahf
mov
shlb
cld
xchg
xlat
outsb
mov
dec
jno
addb
aaa
daa
pop
mov
pop
call
dec
and
pop
lds
add
sub
cmp
mov
inc
push
in
xchg
or
dec
pop
lret
mov
fimuls
iret
cmpsl
ds
lock
push
movl
shrl
xchg
lret
cmp
pusha
push
daa
mov
jle
in
subl
imul
loope
hlt
sbb
push
push
mov
cli
xchg
addr16
gs
mov
mov
outsb
jbe
testl
and
mov
shll
data16
mov
inc
fadds
pop
js
sbb
xor
mov
xchg
sub
mov
cs
call
shlb
addr16
movsl
inc
dec
loopne
dec
or
inc
sbb
pop
jmp
popf
xor
enter
out
xchg
mov
mov
and
outsb
xchg
jno
outsl
cltd
mov
jbe
xor
mov
inc
mov
cmp
sub
add
jne
stos
jb
fildll
cli
pop
ja
jae
addb
pop
sahf
xor
test
arpl
xlat
outsb
pop
sti
cmpsb
cmp
stos
adc
cld
int3
sub
mov
fiadds
pop
cmpsb
lock
inc
loop
stc
jg
addr16
je
mov
inc
xchg
lds
aas
sbb
xchg
sub
mov
shrl
dec
cmpsb
cmp
cltd
popa
enter
aaa
into
push
add
cmp
fsubrs
sbb
inc
fisubrs
pushf
xor
pop
repnz
and
or
mov
lcall
imul
cld
mov
sbbl
xchg
mov
mov
lcall
push
fnsave
test
inc
push
jb
sub
push
mov
pop
repz
mov
in
xchg
cwtl
das
in
mov
clc
and
cmpsb
cmp
ss
in
adcb
dec
sub
outsb
pop
dec
pop
sub
push
outsl
ret
data16
notb
clc
int3
and
gs
push
xchg
sub
cmp
pop
dec
mov
xor
popf
mov
jb
arpl
lds
cmp
adc
and
cmpsl
mov
cmp
cmp
lods
movsl
stos
inc
insb
add
loopne
aaa
rolb
cmp
xor
jns
push
pop
hlt
ja
jo
repnz
fwait
xor
mov
sbbl
imul
icebp
js
mov
inc
push
jge
insb
fs
loope
add
addr16
ljmp
jb
out
cmpsl
sbb
mov
cmp
push
cs
mov
sub
inc
fcmovb
ret
push
in
rcl
xchg
jmp
pop
cmc
call
or
pusha
jnp
ljmp
cmp
xchg
pop
cs
lahf
repz
shll
mov
and
lds
test
pop
and
ja
mov
sbb
call
and
ja
sti
xor
mov
fwait
xor
nop
daa
lret
sbb
ds
popa
clc
fst
call
das
lock
ss
adc
andb
test
dec
dec
loope
xor
jl
aas
enter
shrl
cmpsb
int
mov
xchg
loopne
out
movsl
add
sub
jo
add
rcrl
sbbl
sub
or
aas
ja
sub
pusha
hlt
mov
pop
scas
pop
jae
adc
clc
add
stos
notl
mov
mov
int3
lahf
stos
les
xor
out
scas
and
jns
rcrb
shr
inc
xor
test
cmp
call
or
lds
lcall
sarb
sub
fbstp
mov
insl
add
push
fnsave
sub
test
cmp
icebp
mov
xchg
push
rclb
das
cld
les
push
push
inc
fmuls
mov
and
push
jl
inc
fidivs
push
fnstenv
push
in
inc
in
fbstp
push
lods
inc
or
insl
mov
mov
add
mov
lret
xchg
fcompl
mov
mov
xchg
sub
fnsave
pop
idivb
mov
jle
pop
lds
jmp
jmp
pop
aaa
into
ja
cmpsb
cmp
dec
adc
les
cmpsl
stc
nop
sbb
and
shrb
dec
fidivs
loopne
ret
rorl
fnsave
push
call
push
add
pushf
jne
cmpsb
cmp
or
aam
adc
lea
mov
cmp
imul
dec
cmp
inc
and
pop
pop
popa
shrl
jmp
inc
xor
fiaddl
nop
daa
mov
mov
adc
push
xor
inc
fidivs
rclb
ret
lods
xchg
sub
in
xchg
xchg
mov
mov
fwait
or
mov
xor
outsl
fwait
jge
or
lea
cmc
aaa
into
sub
dec
loopne
fistpll
rorb
aad
scas
mov
xlat
outsb
fsts
add
mov
mov
nop
sbbb
inc
dec
xor
stc
or
shlb
fcomps
or
testb
add
jno
xchg
outsb
xchg
jle
les
fldcw
shlb
mov
shrb
push
cmpb
lods
jne
cs
xor
fldenv
hlt
push
add
pop
xorl
cmp
insl
testb
iret
imul
inc
call
mov
fistpl
out
out
test
sbb
adc
sbb
test
js
shll
icebp
mov
push
loop
sahf
divl
mov
jmp
aam
sti
xchg
jge
ja
into
sahf
jnp
sub
dec
in
insb
in
jp
sti
lea
andl
fldcw
add
mov
mov
or
jecxz
add
fs
push
sahf
test
lea
repnz
cli
int
das
lcall
cmpsl
ds
and
pop
push
outsb
mov
mov
shl
xrelease
notl
xchg
inc
sbb
dec
data16
icebp
loope
rolb
shrb
nop
push
jmp
stos
loop
call
fidivs
xor
jne
dec
push
pop
icebp
inc
std
data16
out
testb
cmp
xor
jl
mov
mov
bound
jge
jle
pop
sahf
sub
orl
cmp
aas
mov
sbb
popa
inc
ficoml
mov
cmpsl
add
dec
jecxz
and
mov
popf
add
jl
and
sub
sbbl
add
es
sub
or
xor
dec
pop
inc
dec
loope
in
test
cmc
dec
loope
inc
sub
inc
pop
inc
xor
gs
js
xlat
std
fdivrl
push
clc
lds
adc
sbb
lcall
pop
out
dec
sbb
mov
sbb
rcll
sub
xchg
pushfw
and
test
mov
pop
and
pusha
lock
es
ror
call
and
mov
iret
adc
dec
outsb
add
or
mov
sbb
add
and
test
mov
adc
mov
adc
xchg
mov
fldenv
xchg
mov
ret
mov
rcl
mov
lcall
addl
mov
rolb
stos
xor
nop
imul
jb
add
out
mov
ds
movsl
xchg
sbb
and
sub
jne
clc
sub
ds
push
cmp
test
inc
or
imul
mov
test
lods
decb
cmp
movsb
jbe
jbe
lds
rclb
pop
sahf
and
popa
pusha
lods
and
in
xchg
adc
sub
stos
aad
sbb
ds
sub
adc
sbb
lock
shlb
cs
jb
add
in
es
movsl
push
push
lcall
ret
mov
into
gs
mov
mulb
push
cmp
fnstenv
pop
rcrl
mov
cmp
sahf
xor
int3
adc
or
xor
push
mov
mov
inc
fcomp
sub
jno
faddl
lock
inc
dec
in
ljmp
dec
xlat
testb
xchg
xor
clc
pop
push
adc
outsb
in
adc
ss
jne
inc
fsubrl
inc
and
fcmovb
mov
cmp
push
xor
add
outsb
add
sbb
dec
cmpb
ss
mov
mov
jns
loopne
xor
mul
mov
sub
adc
pop
stc
sub
jmp
inc
fbstp
js
pop
mov
pop
add
mov
sub
xor
fsubrs
jns
subb
std
addl
xor
cwtl
das
xchg
outsl
adc
add
jae
cmp
jne
fwait
inc
jo
add
es
ficoms
push
call
test
lret
and
xchg
jmp
cmpsl
mov
in
sub
dec
jae
inc
cmpsb
inc
ficompl
adc
and
cmp
outsb
shrl
std
stos
inc
out
es
cltd
cmpb
inc
les
jno
outsl
bound
mov
jae
outsb
add
fistpll
aas
outsb
add
ret
push
out
leave
xchg
loopne
pop
and
mov
jge
xor
and
mov
or
adc
ret
pop
dec
xor
orl
ja
cld
insb
mov
push
sbb
mov
cmpsl
ret
jp
cmp
adc
repnz
rolb
out
scas
loop
and
push
jle
xchg
sub
mov
jbe
push
adc
test
iret
adc
iret
jae
xor
and
sbb
es
dec
std
xchg
addb
daa
mov
pop
mov
add
adc
and
mov
inc
into
test
dec
in
mov
decl
jne
xchg
ja
jno
icebp
mov
loope
cmp
mov
push
adc
orb
clc
fists
and
add
jmp
add
push
sti
xchg
sub
cmp
insl
stos
iret
inc
fnstsw
sbb
out
mov
fldt
test
mov
add
stos
fstpt
jb
dec
fists
pop
test
pusha
test
addr16
mov
sti
jle
sub
mov
jo
cmc
js
xlat
adc
push
iret
push
hlt
mov
sbbb
mov
jge
stc
mov
cmp
mov
fsubrs
aad
aaa
pop
add
mov
shlb
mov
add
jbe
jle
outsl
xchg
jecxz
sub
popf
xor
cmp
mov
es
push
ljmp
or
and
mov
or
mov
jg
cmp
popf
mov
sbb
cmp
lcall
outsl
push
fdivs
in
add
dec
loop
jecxz
push
mov
flds
cwtl
ficompl
push
in
mov
shll
fldl2t
cli
xchg
sbb
pop
icebp
lret
cmp
sbb
call
pop
jp
movsb
negl
mov
lds
shr
pop
mov
repnz
and
cmp
sbbl
lds
ret
fstps
repz
dec
test
pop
mov
push
dec
ds
jno
xchg
lods
inc
das
insl
movsl
cmp
push
mov
addr16
shlb
mov
sbbb
cmpsb
cmp
pop
insb
fstpt
ljmp
or
push
xchg
sub
and
gs
cmp
fwait
xchg
imul
push
xchg
sub
mov
je
mov
loope
xchg
adc
inc
push
xor
push
xchg
dec
xor
push
mov
fs
sarl
mov
icebp
sub
mov
mov
xor
loope
xor
in
dec
xchg
mov
fldenv
sbb
sub
xchg
nop
pop
call
or
pop
xchg
sub
mov
fnstenv
cwtl
imul
jne
in
cmpl
mov
cmova
push
cmp
cmp
xchg
sub
arpl
outsl
gs
xchg
sub
xchg
inc
out
xchg
xchg
sub
xlat
mov
jno
imul
lcall
popf
adc
pop
mov
out
xchg
shl
mov
gs
xor
xchg
sub
pop
call
aaa
push
xor
pop
movsb
in
cmp
fbld
mov
cmp
daa
mov
sbbb
dec
adc
lods
inc
pusha
pop
hlt
xchg
push
pusha
testl
sarl
xor
popa
loope
fwait
adc
scas
test
jp
jp
dec
in
xor
add
mov
mov
sub
stc
fnstenv
jp
xor
movsl
inc
xor
pop
lret
pusha
mov
jmp
pushf
sub
aaa
into
or
xor
imul
push
call
scas
fsubrl
shrb
jecxz
lahf
xchg
enter
repnz
sbb
jle
mov
stos
idivl
arpl
mov
test
sahf
or
pusha
jl
cmp
xchg
adc
xorl
xlat
inc
cmp
addr16
cmpsb
cmp
xchg
push
testl
push
iret
popa
clc
and
inc
dec
loope
mov
movsl
negl
aam
sbb
or
test
cmp
stos
cmp
lret
xchg
sub
cmp
lds
into
sbb
dec
dec
clc
dec
insb
mov
xor
das
int3
push
mov
int
jbe
outsl
inc
shrl
movb
in
push
mov
insl
add
or
imul
repnz
mov
stc
pop
repz
push
icebp
mov
movsb
and
movsl
divb
out
mov
lods
adc
pop
lock
cmp
ficomps
outsb
dec
pop
inc
fimuls
in
out
test
pusha
xchg
jns
adc
xlat
outsb
fwait
scas
jae
pop
lahf
xlat
sub
popa
add
push
or
inc
jb,pt
cmc
push
mov
aam
fdivs
mov
and
xorb
iret
data16
stc
dec
aaa
pop
mov
push
pop
shlb
dec
cmp
fldt
testb
dec
fs
loopne
lods
adc
add
bound
fdivl
sbbl
insb
jne
shlb
push
stc
andl
or
jnp
cmp
push
add
test
je
sub
push
ljmp
xor
imul
pop
filds
movsl
jbe
lahf
arpl
inc
jge
cmp
pop
sbb
ds
aaa
out
sub
cld
lds
mov
in
repnz
addr16
lods
or
call
rcll
add
push
arpl
lret
shll
into
notb
lea
add
loope
test
jns
jb
or
xchg
jge
inc
add
pop
icebp
xlat
push
lret
mov
jmp
arpl
sti
mov
adc
mov
aad
push
sarb
sub
int
jecxz
mov
out
sbb
ret
les
repz
into
and
xor
aad
adc
inc
sarl
push
cmp
push
pop
push
or
mov
ljmp
pop
incl
xchg
jge
lea
and
fs
imul
sub
insl
mov
cmp
jg
addl
nop
outsb
mov
outsb
cmp
lock
sbb
nop
add
icebp
xchg
adc
mov
call
insl
mov
lahf
cmpb
outsb
mov
sub
les
jl
push
scas
pop
xor
cmp
sahf
ja
adc
stc
pop
push
hlt
mov
scas
pop
mov
mov
xchg
or
insb
add
lret
loope
into
dec
cmp
lods
sbb
push
lods
in
stos
adc
adc
test
lret
sbb
cmp
insb
add
sub
mov
sub
jnp
xor
cmpsb
aas
xchg
nop
jg
mov
xchg
movsl
pop
repz
sbb
cltd
aam
adc
pop
dec
aam
lret
fsub
inc
sbb
in
clc
dec
loopne
or
adc
sbb
dec
dec
notl
xor
jb
mov
cwtl
adc
mov
jb
fldt
xor
lods
push
or
pushf
daa
push
in
pop
mov
xor
popa
push
sbb
mov
sub
mov
cmpsb
cmp
fwait
cwtl
cltd
xor
mov
popf
xor
and
pop
jg
xchg
mov
insb
add
repz
sbb
adc
cs
lock
scas
jecxz
enter
insl
lods
pop
mov
xor
test
in
xor
adc
xor
add
add
inc
mov
xor
leave
pusha
je
push
cmpsb
adcl
or
fwait
cmc
xor
jp
sbb
fdivl
test
and
cwtl
sub
mov
sub
sbb
dec
dec
cmp
inc
ss
enter
repnz
mov
or
insb
call
jae
push
lret
inc
mov
add
sbb
rcrb
mov
jl
sbbl
ja
or
int
pop
mov
shll
pop
fbstp
mov
fsubrl
push
ljmp
and
add
fdivrs
cmpl
mov
pop
add
imul
add
fidivs
pusha
or
out
lahf
sbb
pop
aam
ret
jg
cmp
stos
cs
jp
sbb
pop
pop
push
push
fistl
roll
cli
inc
in
cmpsb
hlt
in
jo
lods
or
popf
in
lds
add
sub
mov
fildl
mov
std
sbb
xchg
pop
cmc
push
jmp
jle
or
cmp
dec
pop
sti
and
sbbb
dec
lret
push
pop
or
pop
scas
push
mov
and
jg
sub
jno
pop
dec
addr16
dec
pop
mov
popl
outsb
jl
add
imul
xchg
dec
sbb
dec
fs
xor
test
push
lahf
push
dec
das
mov
xor
repnz
mov
outsl
dec
out
mov
xchg
fucom
jns
mov
xchg
pop
je
jb
cs
pop
pusha
subb
jns
imul
outsb
add
jp
jnp
xchg
fwait
cmpl
add
xchg
lcall
lcall
and
sbb
push
push
pop
mov
cmp
pop
dec
ja
push
inc
dec
test
movsl
ljmp
and
and
lods
and
out
test
es
xchg
fisubrs
clc
pop
cli
push
lods
shlb
cmp
and
loop
notb
mov
adc
mov
and
cwtl
push
add
sbb
inc
push
hlt
mov
stos
sbbl
mov
cs
mov
xor
test
iret
fwait
movsl
sub
cmp
test
sbb
sti
fst
mov
in
add
and
add
and
in
fsub
xchg
xlat
inc
jbe
sub
jbe
nop
dec
xor
dec
in
mov
jne
mov
cmp
in
jecxz
or
xchg
lds
cmp
jmp
pop
les
jecxz
sbb
or
pusha
testl
lds
jle
iret
jbe
xlat
outsb
les
pop
push
jle
outsb
xchg
repnz
repnz
lcallw
lcall
sub
fisttpl
in
jecxz
push
in
not
scas
jne
mov
xchg
sahf
jne
scas
scas
push
cld
fwait
ret
mov
cmpsl
sub
shlb
mov
fnsave
pop
addr16
scas
popa
jo
mov
gs
cli
mov
or
lock
inc
xor
bound
scas
test
push
popf
add
inc
fcoms
rclb
aad
pop
pop
pop
sbb
fucom
scas
pop
cmp
mov
or
rorl
push
sub
mov
mov
movsb
test
push
push
outsb
xor
push
outsl
jns
mov
inc
insl
fnsave
push
xor
adc
xor
xchg
push
stc
jo
sub
arpl
rcrl
es
outsl
add
push
rcrl
fmulp
dec
into
and
lret
mov
je
mov
adc
jbe
lea
push
adc
pop
mov
jp
dec
lods
sahf
cmp
pop
cmp
cmp
xlat
mov
mov
and
loop
loop
ret
stc
adc
inc
cmp
jge
shll
xchg
mov
fstpl
mov
xchg
sbb
aam
xchg
push
sbb
ds
mov
xor
in
addl
jbe
xorl
sub
xor
sbb
pop
lcall
out
lahf
ss
mulb
mov
mov
add
das
pushf
inc
cmp
andb
lcall
imul
sub
or
xchg
dec
lss
jle
jg
shlb
sbb
lds
jb
cmpsb
ret
sbb
mov
add
and
add
jge
push
sbb
lahf
add
or
mov
add
lods
jo
and
jmp
xor
test
sbb
dec
lods
xor
or
inc
lret
cmp
mov
mov
sbb
add
and
rclb
push
push
rcr
mov
lcall
pushf
mov
fbld
adc
push
mov
adc
aas
out
jno
cld
mov
mov
lods
cmp
in
xlat
jo
shrb
cli
push
imulb
adc
aam
loopne
call
jecxz
mov
and
push
repnz
ds
aam
or
sbb
cltd
test
shrl
mov
movsl
mov
ds
test
pusha
fucomp
fcompl
inc
repz
pop
sti
insl
popa
jge
into
add
add
sbb
inc
mov
push
push
jo
sub
jnp
jae
add
test
pop
cmp
movb
inc
jo
mov
adc
xor
fs
adc
loopne
and
cmp
and
xor
mov
inc
ds
jp
mov
js
or
inc
insl
add
frstor
xor
movsb
mov
pushf
ret
imul
hlt
adc
fildl
add
add
dec
nop
mov
aad
daa
push
cmpsl
sub
jge
andl
iret
fs
or
aas
inc
sbb
jl
and
inc
sub
sub
adc
pop
nop
xchg
cmp
in
std
jecxz
bound
icebp
pushf
into
flds
mov
insl
hlt
mov
leave
adc
xor
xchg
in
int3
adc
sar
xlat
outsb
xchg
and
sbb
sbb
stos
andl
mov
into
pop
add
pop
cmp
nop
arpl
ja
test
dec
in
sbb
gs
je
insl
mov
pop
adc
add
adc
dec
imull
clc
outsb
inc
jmp
cmc
or
dec
mov
or
inc
sub
ret
xor
inc
repz
jno
sub
subl
popa
mov
and
inc
xchg
jo
je,pn
imul
shl
sub
outsl
or
add
mov
sub
out
and
push
lret
ds
scas
loope
pop
sub
push
pushf
fsubrl
lcall
add
pop
xor
scas
cmpsl
divl
or
cmp
gs
cmp
dec
dec
outsl
push
jl
adc
stc
push
pop
cmp
subl
or
mov
dec
or
mov
movsb
call
popl
nop
push
sbb
push
fistpl
sbb
fildl
insb
pminub
mov
ds
and
sub
xchg
sub
push
and
in
push
mov
mov
decb
inc
cmpsl
jne
mov
mov
lods
inc
dec
shrl
inc
nopl
orl
xchg
hlt
enter
lret
dec
mov
mov
push
incb
test
inc
push
aam
push
bt
mov
lock
leave
nop
mov
inc
mov
call
je
jp
int
enter
stos
scas
sub
imul
bound
aad
jns
xor
xor
movsb
lcall
imul
mov
mov
push
push
mov
popa
add
xchg
xor
add
pop
dec
rcll
and
sar
int3
arpl
hlt
int3
hlt
test
push
push
shlb
mov
push
pop
ret
add
and
jg
mov
dec
mov
pop
xchg
test
test
sub
testb
pop
sbb
adc
sub
adc
pop
jmp
jns
mov
dec
je
adc
insl
jne
xor
jp
popf
push
and
ret
inc
sbb
pop
push
mov
movsl
mov
and
jmp
pop
stos
push
fsub
jp
ja
stos
jb
add
cmpsb
gs
test
push
sti
das
xlat
jne
cld
cmp
dec
negb
xchg
gs
dec
pop
loopne
std
jg
adc
imul
pop
outsl
adc
rcrb
int3
das
mov
pop
in
mov
or
mov
or
add
xor
xchg
sub
inc
mov
mov
cmc
mov
daa
rorl
and
xchg
popa
push
bound
imul
dec
push
fdivl
das
add
push
pop
bound
mov
push
lret
and
push
mov
mov
scas
dec
xchg
jno
mov
leave
mov
mov
xlat
call
repz
lea
aam
aad
push
adc
stc
jmp
jl
int
dec
jbe
pop
je
das
scas
out
stc
or
jnp
pop
push
dec
push
test
push
push
addb
pop
js
sarb
push
stos
inc
fcomp
adc
sub
add
sub
aad
dec
sbb
movnti
enter
test
xor
pop
cmpsl
sbb
gs
cmp
mov
in
pop
lds
jecxz
xlat
shrb
or
enter
xor
cltd
icebp
mov
fwait
push
bound
test
js
cmp
cmp
push
stos
inc
inc
pop
pop
jno
mov
pop
arpl
fdivrl
inc
incb
mov
jae
jmp
xchg
ss
adc
lret
frstor
add
dec
pop
addb
and
iret
decl
jne
je
push
sbb
and
mov
cmp
cmp
sbb
sbb
repz
cli
dec
xchg
into
push
mov
std
mov
mov
adc
mov
sub
mov
push
adc
xlat
fstpl
or
pop
lahf
xor
cmpsb
cmp
xor
pop
dec
sahf
int3
sub
jno
mov
je
mov
aas
pop
push
fwait
dec
or
add
test
and
pusha
mov
sbb
fnstenv
rorl
cmp
ljmp
ret
daa
in
mov
icebp
and
lret
mov
adc
push
in
cmp
outsb
rcrb
loope
hlt
scas
inc
xor
push
dec
shrl
inc
fwait
mov
call
cmp
movsl
hlt
loop
or
pushf
cs
ffreep
popf
loop
pop
sub
pushf
sbb
mov
push
cmpsb
or
push
inc
cmpl
ficoms
cmp
sub
aas
jge
insb
arpl
lds
inc
call
or
cmp
fptan
icebp
or
cmp
mov
andps
pop
arpl
movl
push
cwtl
push
setp
pusha
ficomps
ret
loopne
sub
pop
sub
ds
pushf
sbbl
mov
aaa
into
cmp
dec
out
call
adc
cs
ss
dec
push
cmc
inc
mov
sub
cltd
push
lret
mov
clc
test
rep
push
das
pop
sbb
addb
jae
jp
and
pop
dec
xchg
outsb
sar
cmp
and
sbb
ret
inc
pop
cmpsl
inc
xlat
fdivrs
pop
cmpsl
ss
and
shll
test
jmp
xchg
out
pop
movsl
fdivrp
mov
mov
scas
ficoml
pop
inc
sbb
mov
jbe
mov
or
xchg
int
cmpsb
push
inc
sub
cmp
pop
xor
loope
sti
sbbb
push
jg
jnp
insb
test
mov
cmp
dec
mov
mov
xchg
add
icebp
sahf
flds
das
fwait
mov
test
push
stos
mov
fnsave
dec
push
lock
jmp
dec
xor
pop
mov
leave
mov
es
popf
adc
inc
clc
jae
push
mov
aad
stos
in
test
int
push
cmp
lock
add
hlt
or
mov
rcll
jo
push
mov
test
addb
xchg
aad
adc
dec
add
out
jnp
xchg
mov
adc
shll
add
and
movsl
or
and
clc
stos
loop
lret
dec
out
mov
sbb
sbb
dec
ljmp
xlat
aas
scas
mov
test
and
incb
dec
push
add
iret
mov
and
jmp
call
jb
mov
test
rclb
mov
push
int3
jbe
call
and
dec
push
ret
sbb
xor
mov
rol
cmpsl
nop
std
mov
arpl
shlb
xor
dec
mov
out
mov
pop
pop
pop
xor
push
movsl
inc
rcrl
xor
jb
add
shlb
xor
push
dec
push
or
cmp
in
or
xchg
jbe
iret
mov
test
ret
xchg
adc
mov
arpl
sahf
fistl
mov
cwtl
mov
mov
stc
sar
ja
pushl
mov
notb
cs
jno
leave
adc
cld
jbe
push
cmp
das
mov
jle
iret
push
test
xor
push
mov
dec
loopne
clc
inc
xchg
test
std
xchg
cmpb
hlt
add
mov
pop
and
test
into
push
adc
leave
push
lds
pop
xchg
inc
inc
jnp
mov
jg
push
mov
dec
xor
inc
sbb
inc
imul
ss
scas
sahf
out
cmpsb
cmp
insb
jecxz
ljmp
inc
stos
scas
mov
add
xor
mov
jmp
mov
sub
stos
outsl
push
cmp
outsl
nop
dec
mov
ss
xchg
pop
sti
out
push
push
jno
out
sbb
ss
jno
fiadds
loopne
jecxz
sub
jle
or
mov
cmpb
nop
popf
and
movsl
fwait
loopne
test
shlb
stos
inc
arpl
pop
clc
ret
imul
mov
jno
add
imul
loope
fcoml
movsl
mov
inc
jb
out
nop
mov
mov
adcb
enter
popf
mov
fstpt
je
inc
inc
adc
push
lret
mov
push
mov
ret
daa
insl
test
cwtl
aaa
into
pop
cmp
cld
xchg
push
addr16
incb
iret
shrl
mov
jo
stc
fcmovne
arpl
mov
jp
ret
xor
in
int3
or
stos
cmpsb
cmp
call
test
inc
xor
jb
shlb
lret
push
adc
fs
pusha
or
adc
std
add
push
xchg
mov
enter
push
or
jp
gs
arpl
sub
scas
mov
ficompl
sbb
cmpsl
mov
bound
mov
pop
dec
adc
pop
movsb
xor
popf
and
shll
test
cmpsl
call
push
add
out
lods
or
dec
jecxz
int
push
lods
mov
xchg
leave
fiadds
mov
mov
push
lods
addw
xor
pushf
xorb
mov
add
loop
and
dec
popf
add
xchg
sbb
pop
dec
mov
out
sub
mov
xchg
outsl
sahf
movsb
adc
sti
ret
out
push
mov
xchg
sub
adc
push
fistl
mov
cs
cmpb
insl
mov
stc
mov
loope
pop
adc
lcall
and
mov
fcmovnu
jno
inc
pop
hlt
jb
clc
pushf
xorl
mov
push
lods
out
aad
hlt
or
sub
je
mov
add
mov
ss
cwtl
lods
stos
mov
mov
jnp
out
aam
add
ret
and
je
mov
jge
push
addr16
inc
inc
mov
xor
or
rcll
movsb
inc
mov
mov
lahf
insl
jg
sahf
inc
fistps
outsl
orl
mov
adc
jns
jbe
sbb
gs
and
and
pop
pop
add
sbb
cmp
js
fdivp
in
xor
dec
pop
pop
clc
mov
iret
arpl
jmp
inc
jp
ss
ret
push
dec
shl
cmpsl
fldcw
inc
fs
movsb
dec
pop
xor
sbbb
jg
movsb
mov
push
push
xchg
mov
push
sti
jmp
sahf
lods
push
and
mov
stos
cmp
ds
mov
pop
lea
fsubrl
cld
in
fwait
shll
aaa
data16
lea
dec
inc
mov
das
sbb
pusha
and
lahf
test
icebp
adc
lds
cli
loop
xchg
xchg
daa
stos
sahf
loope
ss
cltd
mov
les
xor
out
pop
mov
adc
jp
outsl
mov
sahf
and
cmp
inc
lcall
mov
popa
inc
push
outsb
inc
xlat
mov
and
test
andb
into
fisubl
xor
ljmp
inc
fistpll
mov
or
aaa
dec
pop
or
daa
insb
shrb
ljmp
jo
lock
pop
call
pop
hlt
hlt
inc
insl
lahf
fsts
insb
xchg
push
push
icebp
cmc
aad
cs
arpl
repz
shl
int3
adc
adc
inc
cmpsl
pop
aaa
push
xchg
pop
mov
aaa
mov
xor
mov
into
pop
mov
test
pop
xchg
sub
add
jo
out
cli
or
notl
cld
out
sti
mov
call
subl
cmc
pop
mov
loopw
mov
inc
cli
stos
xchg
ror
lock
pop
ds
push
jo
pop
scas
rcll
fistpll
xchg
test
iret
js
add
hlt
dec
lods
add
or
mov
mov
cmp
xchg
sub
sbb
cmpsb
inc
sbb
push
je
call
out
shlb
mov
and
xor
test
add
or
into
arpl
test
or
inc
and
ret
cld
jl
xor
push
movsl
cmp
dec
outsb
jecxz
fsubs
push
in
sti
sti
jnp
push
xchg
cmpsb
push
out
sub
mov
cmpl
mov
mov
pop
xchg
decb
push
sub
or
pop
add
ss
frstor
test
enter
es
sahf
jno
pop
out
pop
sbb
mov
insl
and
movl
jae
or
cmp
dec
pop
insb
mov
cmpsb
lahf
xor
popf
xor
ljmp
jp
lahf
mov
or
jle
daa
mov
pop
add
xchg
sub
frstor
mov
jl
sub
sbb
add
dec
xor
pop
adc
out
ljmp
or
int
int
iret
pop
dec
mov
in
cmpsb
inc
push
mov
or
arpl
xchg
mov
cli
fwait
and
and
cmpsl
inc
mov
imul
test
and
cmp
adc
jns
daa
jmp
mov
sarb
adcl
xchg
sahf
xor
das
rorb
push
insl
and
cmp
fdivp
push
jne
jmp
dec
cmpsb
fisttpll
xlat
and
push
add
mov
call
dec
push
icebp
inc
xchg
jns
in
add
xchg
in
pop
jecxz
xor
lcall
pushf
pop
xchg
jbe
fadds
cmp
pop
add
fidivrs
or
notl
rorl
pop
stos
sbb
mov
push
lods
inc
pushf
clc
sbb
push
cltd
and
iret
dec
out
lock
sub
stc
mov
push
or
mulb
mov
adc
iret
fdivr
mov
xor
inc
fisttpll
lods
fs
loopne
scas
imul
idiv
mov
das
sbb
pop
sahf
mov
adcb
nop
adc
sub
js
mov
movsb
loopne
jp
dec
jle
mov
arpl
mov
pop
cmp
jne
pop
gs
push
pop
shr
cmp
popf
cmp
cltd
popf
arpl
leave
repz
inc
mov
scas
add
aas
mov
fcmovnbe
xor
or
inc
and
clc
jae
mov
imul
repnz
movsb
insl
stos
push
shrd
je
jp
inc
bound
xor
outsb
or
sub
enter
add
in
nop
stos
stos
push
stos
add
lds
out
sub
and
call
mov
mov
sub
sub
movsb
aam
popa
sbb
add
push
mov
arpl
fiaddl
js
jno,pn
fwait
pop
xlat
mov
jnp
stc
imul
movsl
sbb
or
hlt
push
xor
dec
scas
mov
arpl
call
sub
inc
pop
out
xchg
orl
sbbb
pop
aad
jae
pop
pop
in
or
mov
fs
jne
inc
mov
xchg
fucomip
sahf
mov
add
mov
popa
nopl
arpl
mov
andl
mov
push
sbbl
jno
insl
inc
fsts
int
out
add
cmp
jmp
mov
mov
rcll
in
adc
mov
les
dec
lods
ljmp
push
mov
push
mov
push
mov
movsl
and
pop
arpl
adc
adc
add
out
inc
push
pop
mov
or
sub
test
scas
stc
or
mov
imul
nop
lock
dec
push
jno
dec
push
sub
jmp
push
jno
xor
cmp
ret
and
shlb
icebp
sbb
ds
dec
andl
loope
outsl
and
lcall
mov
push
jmp
pop
pop
add
lret
jmp
adc
jp
int
call
lret
adcb
inc
mov
loop
mov
in
mov
sarb
fidivs
dec
shrl
mov
cmp
ret
rorl
shlb
jbe
push
cmp
xchg
je
jg
adc
jae
dec
lret
aas
mov
cmp
jmp
push
aam
or
shll
pop
icebp
pop
aam
dec
dec
lods
js
mov
aad
lods
push
inc
mov
arpl
mov
push
adc
int3
dec
in
cmp
and
push
movsl
mov
ret
sub
add
popf
push
stos
mov
push
leave
loopne
xlat
mov
mov
jle
and
xor
ds
bnd
mov
aaa
into
dec
out
lret
pop
inc
in
movsl
fbstp
mov
lods
jecxz
or
into
into
sbb
in
cmpl
test
aas
pop
pop
sbb
movsb
dec
jbe
sbb
loopne
cld
cmp
mov
cwtl
sub
mov
mov
jno
fcomps
adc
pop
xor
jle
push
out
adc
xor
xor
aas
mov
jmp
cmp
xchg
ss
push
or
rcrb
push
insl
sar
jbe
loop
jae
imulb
sti
add
daa
popf
idivl
mov
pop
je
fdivl
lret
and
rcrl
inc
push
out
enter
test
loope
mov
icebp
jnp
aaa
es
pop
movsb
mov
clc
test
mov
dec
out
stc
cmp
test
and
cwtl
sub
dec
fistps
int3
popf
int3
adc
add
in
mov
adc
jae
mov
clc
roll
add
or
pop
sbb
aaa
cli
xchg
push
cmp
roll
sub
loope
inc
sbb
add
sbb
ljmp
shrb
in
mov
ret
jbe
cmc
enter
adc
fsubr
cld
xor
sub
dec
inc
fstpt
loopne
dec
stc
cmp
cltd
jne
lea
mov
cli
xchg
fcmovne
or
lock
xlat
and
shl
lret
rorl
sbb
imul
sbb
sub
sbb
mov
jg
aam
cmp
inc
mov
cmp
xchg
or
push
adc
pop
dec
std
fbstp
imul
data16
xor
lds
test
enter
ja
leave
mov
jns
xchg
dec
mov
sbb
rcrl
loop
test
popf
cmpsb
jnp
xlat
mov
imul
cmpsb
pop
pop
popa
in
mov
push
add
sbb
addr16
and
test
popa
in
leave
pop
incb
inc
lods
test
out
int
fnstenv
and
fildl
cmp
xor
inc
mov
or
inc
xlat
sarb
push
imul
push
cmp
cmpsb
ds
enter
mov
push
jmp
lcall
xchg
rolb
in
mov
push
pusha
nop
cmp
ret
je
addr16
imul
dec
out
xchg
and
push
push
push
dec
push
lods
inc
inc
std
or
xchg
jmp
lods
mov
sbb
les
xor
out
fnsave
or
lea
cmp
push
and
xchg
movsl
cmp
shlb
add
iret
mull
or
dec
popa
dec
fldl2t
sub
addr16
outsl
add
xor
fs
rcrb
scas
dec
and
jp
movsl
mov
js
inc
pushf
adc
sbb
mov
inc
test
push
cmp
insb
mov
loopne
dec
adc
mov
lds
rcr
xchg
dec
in
xchg
or
movd
jne
xchg
inc
xor
pop
sbb
add
dec
cmc
mov
or
int3
and
sti
sbb
mov
fmull
out
mov
call
es
pushf
xchg
stos
int
gs
mov
mov
cmpsl
push
and
in
imulb
cmp
fwait
adcb
jp
cmpsl
and
lods
inc
adc
std
lods
xorl
mov
popa
pop
out
or
dec
and
adc
lahf
ss
in
xchg
test
mulb
xor
dec
dec
xchg
hlt
repz
mov
push
cmp
sahf
bound
jb
mov
jbe
lods
aad
sub
mov
int3
movsb
je
dec
gs
push
mov
and
mov
or
in
dec
inc
mov
aad
sub
and
bound
jp
lds
jge
add
cli
mov
int3
gs
stc
insl
testb
dec
popa
ljmp
mov
ret
sarb
insl
mov
adc
aaa
jle
xor
stos
push
mov
xor
andl
sub
pop
dec
push
lcall
adc
mov
pop
lea
xlat
push
xchg
cs
jecxz
and
popf
xor
rcrl
cmove
fcomip
add
data16
aad
lret
pop
inc
cld
xchg
jns
sbb
repz
loop
lcall
clc
outsb
jge
pushf
push
cld
cmp
sub
lcall
jae
mov
lcall
in
je
xchg
jne
mov
jecxz
cwtl
mov
les
fadds
arpl
adc
imul
sti
and
xor
sub
pop
pop
add
sub
clc
pop
cmp
lcall
dec
cmp
rclb
bound
cmp
or
popf
xor
int
in
mov
pusha
pop
divps
lret
push
xor
sahf
lods
add
xor
and
push
cs
add
add
xchg
sbb
jmp
xor
push
jns
pusha
ljmp
xor
ficomps
fbld
mov
aam
scas
inc
mov
push
repz
pop
int
shlb
add
cmpsl
sti
and
shl
jp
out
jmp
mov
das
ss
cmpsl
decl
jle
aad
lods
cmpl
push
movsb
fstpt
loope
cmc
dec
in
dec
pop
fidivl
mov
or
or
aam
ja
push
or
test
pushf
sub
dec
pop
outsb
test
mov
sub
les
outsl
add
lea
test
rorb
mov
jno
pop
xor
jnp
iretw
jge
sbb
cli
dec
loope
loop
pop
rcll
stos
xchg
les
cmp
mov
out
fisttpll
scas
sbbl
adc
xchg
xor
mov
sbb
or
lods
push
inc
mov
fwait
push
cmpsb
sti
or
mov
or
pop
cmp
cmp
mov
push
xchg
dec
test
or
int3
lea
xchg
lret
out
or
cld
mov
fildll
inc
mov
jl
xor
add
aas
dec
call
and
xlat
xlat
sub
in
sahf
xor
test
mov
push
repnz
repz
cmp
sti
in
xchg
xor
inc
pop
dec
mov
hlt
push
cwtl
add
mov
fstpl
mov
rorl
leave
inc
mov
out
jmp
jo
insl
sub
das
mov
int
sbb
scas
lcall
rcrl
cmp
mov
jbe
xlat
mov
dec
maskmovq
divl
in
push
jnp
out
lods
aad
addl
add
sub
jecxz
lret
dec
mov
jle
shrl
pop
ja
fs
add
add
xchg
test
mov
xor
loope
cltd
mov
mov
inc
sub
push
fistl
inc
int3
incb
cmpsb
pop
pop
pusha
fwait
clc
jl
jbe
push
insb
paddsw
or
adc
bound
adc
pop
ds
fcoml
mov
divb
mov
dec
scas
or
lcall
push
cs
push
mov
lret
cld
cld
pop
imul
in
mov
pop
pop
out
test
icebp
insb
dec
sbbb
xchg
xchg
insb
dec
mov
xchg
sbb
jno
cs
fidivs
fwait
movsl
push
in
xchg
adc
mov
pop
push
aad
xchg
mov
lahf
xor
add
push
and
jns
jnp
cli
dec
insb
sarl
lods
dec
jno
fbld
test
or
mov
mov
cmp
dec
jae
movsb
cmp
sbb
mov
fwait
out
notb
mov
movsb
pop
push
sbb
push
dec
mov
dec
repnz
xchg
sti
adc
and
and
mov
or
fidivrl
outsb
fs
aad
test
cli
clc
pop
mov
shl
ja
cwtl
hlt
sar
sub
stos
mov
movl
test
mov
sub
adc
adc
adc
push
push
mov
cmp
pop
sbbl
dec
xor
loop
testl
lea
cmp
outsb
xor
je
and
in
shll
test
cld
mov
add
xor
xor
xor
int3
add
lret
bound
cmpsl
push
inc
cmp
nop
out
xor
mov
pop
outsb
movsl
xchg
xlat
out
mov
jp
sub
adc
xchg
inc
xchg
iret
data16
push
loopne
mov
jne
ret
call
add
xor
mov
adcl
dec
outsl
xchg
add
lods
mov
mov
fwait
push
insl
cmpsb
jno
mov
cmpsl
enter
mov
mov
mov
fimull
sbb
out
out
xchg
or
or
xchg
mov
xorb
test
fucomi
xchg
xchg
pop
insb
pop
shrb
cmp
pop
mov
pop
adc
inc
mov
gs
sbb
adcb
mov
dec
scas
adc
call
stc
lods
ljmp
fiadds
rorl
lahf
mov
dec
insb
add
ret
pop
adc
fistpl
imul
repz
push
push
adc
ss
sub
sbb
ljmp
jno
je
pop
adc
sbb
and
fdivrl
inc
pop
adc
dec
inc
jle
xchg
test
sahf
or
fisttpl
adc
lods
or
scas
jne
scas
xor
mov
jnp
int
mov
and
pop
call
adcb
sbb
jae
jbe
daa
mov
dec
add
or
fld
dec
hlt
push
in
nop
lcall
or
pop
ds
daa
in
push
repnz
rcll
inc
and
mov
push
add
xor
addr16
dec
jno
cli
stos
inc
sub
aaa
enter
add
xchg
adc
ret
mov
jecxz
jne
cmp
cmp
inc
scas
dec
jb
fsubl
add
mov
les
push
out
adcl
mov
stos
ret
lods
out
rol
pop
add
xchg
out
cltd
loopne,pn
fisttps
add
mov
loop
pop
adc
nop
adc
xchg
imul
mov
xchg
loopne
popa
decb
int
dec
sub
mov
push
ljmp
and
les
add
mov
fdivr
or
mov
mov
inc
in
cmpl
in
push
or
add
outsb
jo
and
xchg
cmc
movsl
dec
inc
push
test
imul
loop
jmp
xchg
sbb
mov
xchg
pusha
fistl
inc
je
in
aam
dec
mov
mov
mov
scas
pop
sahf
xchg
iret
push
out
sbb
jb
outsl
cmp
mov
inc
dec
test
popa
lahf
pusha
cmpsb
cmp
mov
jo
and
xchg
in
fs
mov
xchg
dec
push
test
jns
call
jp
cltd
jno
arpl
inc
ret
jmp
loope
sbb
inc
and
inc
int3
fiadds
orl
and
andl
inc
fcoms
push
ret
mov
dec
jb
pop
fmuls
loope
scas
lahf
mov
loope
dec
xor
jmp
sub
push
sbb
ja
lods
sar
pop
add
daa
cmpsb
les
sub
mov
js
adc
mov
pop
pop
sti
pop
jge
mov
jle
scas
stc
add
sub
mov
stc
mov
outsb
loopne
pop
testb
repz
shl
mov
pop
or
cs
imul
xor
push
loop
fnstsw
mov
cmpsb
pop
inc
fisttpll
outsb
fs
lahf
sub
jle
add
adc
in
sbb
xor
call
add
in
sahf
into
lods
dec
mov
dec
call
push
xchg
ja
push
loope
sbb
cli
stos
push
adc
stc
test
in
cltd
lea
out
jns
aam
cmpsl
add
sbb
xchg
jmp
sahf
ljmp
mov
inc
pop
aad
aam
cmpsb
mov
in
insl
mov
mov
lret
sti
ret
lret
sub
push
daa
adc
repnz
jp
aaa
pushf
xchg
inc
dec
mov
or
not
adc
call
cmp
in
loop
inc
fwait
mov
fisubs
mov
jmp
clc
and
aad
in
inc
aas
nop
jae
sub
pop
imul
xchg
mov
negb
int
jmp
repz
dec
lock
and
out
popa
sahf
arpl
stc
pop
cmp
dec
aas
fldenvs
cmp
lods
cmp
stos
iret
js,pt
mov
dec
hlt
push
negl
in
cld
push
dec
out
shl
lcall
adc
xor
xorl
fsubrs
out
jb
inc
sarl
push
jg
pushf
mov
in
inc
inc
mov
jno
mov
inc
test
jmp
ficoms
in
test
pop
call
movb
test
add
gs
pcmpgtw
mov
xchg
xchg
movsl
insb
loopne
pop
xor
push
cmp
out
jge
or
push
outsb
rcr
xchg
jl
mov
push
loop
mov
stc
stos
xlat
cmp
add
icebp
and
push
cmp
push
cmp
mov
je
xor
push
or
xchg
fnstcw
lret
inc
popa
leave
pusha
dec
mov
lods
or
outsb
ds
jae
inc
aam
fs
cmp
loope
xbegin
pop
popa
or
jbe
xlat
mov
xchg
and
std
fmul
fisttps
push
aas
popf
addr16
cmpsb
outsl
shlb
mov
das
jno
jle
fiaddl
dec
cmp
pop
ret
lahf
mov
out
or
imull
fisubrs
frstor
push
dec
xor
aam
mov
xchg
js
mov
call
inc
and
pop
add
xchg
loop
push
push
lods
pop
xor
mov
sbb
xchg
stc
or
dec
inc
xor
pop
mov
or
mov
inc
dec
mov
xorb
shlb
popa
jle
rcrl
adc
jge
lret
mov
out
sbb
pop
mov
fldcw
sub
mov
dec
dec
pop
std
fwait
and
or
out
nop
addr16
mov
push
cwtl
out
enter
and
xor
pop
insl
iret
cmpsl
out
rolb
gs
aas
or
mov
pusha
push
mov
adc
lret
add
nop
mov
mov
orl
addl
out
sbb
mov
sub
in
adc
pop
mov
cmc
pop
aad
dec
xlat
adcl
add
push
lret
sarl
mov
push
or
aam
mov
movsl
cmp
popf
stc
cmpsb
fbstp
enter
popf
stos
mov
int
aaa
sti
pop
pop
das
cmpsb
insb
cmp
jo
add
pushf
and
mov
mov
dec
and
inc
xor
scas
arpl
test
jl
cs
jno
es
cmp
and
stos
inc
xor
out
or
dec
fnsave
jae
cli
pusha
or
or
lods
popa
loope
fists
cmp
adc
insl
data16
imul
cmp
rorb
or
mov
cs
repnz
cmp
sub
repnz
sub
inc
adc
sti
sti
xchg
mov
outsb
mov
jo
lock
jno
add
pop
mov
and
filds
test
xchg
mov
push
scas
int3
lds
adc
cmp
push
aaa
imul
mov
nop
idivl
and
dec
enter
insl
ljmp
lcall
inc
loopne
test
insl
leave
inc
or
sarb
mov
or
imul
lods
xor
mov
dec
mov
push
mov
cmp
mov
fists
das
pop
pop
in
xchg
lock
push
mov
call
cltd
or
movsl
in
xchg
xchg
lds
aaa
jl
ss
loop
cli
push
xor
dec
ljmp
pop
and
cmpsl
in
jmp
rorl
cmp
movsl
scas
mov
arpl
rcrb
add
mov
mov
jne
lods
into
testb
push
jae
dec
in
ss
dec
or
dec
in
int
xor
push
call
dec
jecxz
mov
ds
js
fucomp
loop
outsl
leave
dec
fucomip
loop
lds
jae
xchg
iret
mov
lret
inc
hlt
outsl
jge
mov
mov
dec
mov
pop
shl
jno
push
fcoml
nop
push
dec
leave
mov
push
fwait
push
push
leave
xor
jne
repz
sub
sar
or
shll
cs
jne
jp
jmp
jae
jg
xchg
cld
push
mov
cmp
popf
icebp
sbb
scas
addl
int
popa
xor
cmpb
mov
sti
cmp
jecxz
jb
stc
ds
mov
in
mov
xchg
stos
push
divl
and
cmc
mov
push
insb
hlt
in
not
pop
icebp
mov
and
xor
xchg
cmp
in
outsl
jge
mov
mov
sub
mov
dec
xchg
aas
dec
sahf
mov
inc
cltd
sub
jno
cld
scas
cmp
popa
adc
int
push
fsts
push
and
fsts
or
bound
sti
and
int3
je
push
lods
fdivrl
push
in
pop
lcall
sti
outsl
pushf
sub
int
pusha
ret
jnp
and
cmp
inc
pop
sarb
outsb
add
inc
cmc
or
cmp
punpckldq
sub
or
pop
inc
push
xchg
push
stos
xchg
cs
repnz
or
cmc
into
lahf
js
loope
rorb
pop
movsb
cmp
std
aaa
fsubl
inc
jnp
movsl
xor
iret
xchg
loop
cwtl
ror
aad
imul
shrb
xor
test
adc
rcrb
pusha
push
fiaddl
das
les
pop
dec
add
loop
outsl
daa
sbb
outsb
push
mov
mov
movsb
stos
sub
and
jl
rolb
into
movsb
nop
xor
gs
test
into
and
or
and
pop
dec
sbb
cmpsl
arpl
ds
hlt
jmp
dec
lds
lds
mov
imul
sub
lret
push
push
jmp
dec
sbb
mov
cmpsb
stc
nop
adc
pop
dec
cmp
fistpll
jecxz
daa
fucom
mov
inc
dec
push
in
push
xor
xchg
nop
test
jp
pushf
outsb
jp
inc
add
loopne
ja
fwait
imul
lock
lods
rclb
xchg
iret
popa
lock
inc
insl
ja
repnz
ret
sbb
push
out
test
loope
movsl
add
xor
jle
xchg
sub
or
cmpsb
push
mov
fs
xchg
and
mov
daa
mov
fs
ret
shl
adc
mov
inc
cli
imul
sbb
stc
inc
call
jmp
sub
test
fisubrs
daa
in
std
cltd
push
ret
mov
mov
out
out
add
mov
test
ret
sub
xchg
mov
jb
clc
cmp
and
mov
mov
mov
repnz
movsl
add
popf
jl
mov
lcall
aas
mov
out
loopne
mov
push
mov
and
pop
stos
xchg
inc
sub
cmpsb
lods
xor
push
lea
fstpt
sub
add
jb
xor
dec
sbb
idivb
jo
mov
mov
pop
sbb
xchg
outsb
aam
cld
or
sahf
addb
cmp
xchg
adc
mov
cmpsl
push
cmp
fisttps
inc
cmp
xchg
loopne
mov
repz
xchg
sub
rcrl
sbb
decb
fidivrl
call
ljmp
popf
stc
push
sahf
lea
pop
lds
ficompl
repnz
xchg
hlt
lods
daa
imul
xchg
pop
push
and
int
jecxz
imul
stc
jp
aaa
pop
add
fwait
out
push
setb
dec
push
cmpsl
jecxz
mov
push
cmpsb
or
fisubrs
scas
lcall
out
push
mov
pop
dec
repnz
je
pop
gs
dec
inc
add
ret
aas
icebp
pusha
xor
or
popf
xchg
jb
mov
jge
push
adc
jne
pop
jb
push
mov
shrb
mov
out
mov
lock
push
jno
pop
repz
add
sbb
or
jne
sub
push
jmp
sub
dec
adc
mov
fisubs
push
ljmp
out
orl
or
out
mov
cmp
filds
lock
xchg
lods
mov
mov
sbb
cmpsl
ds
jp
dec
les
xchg
sub
addr16
imul
dec
mov
imul
lds
jecxz
and
or
mov
adc
jl
xchg
push
jns
xchg
pop
mov
hlt
into
cwtl
inc
imull
jnp
icebp
dec
addr16
cmp
cld
xchg
lahf
sub
push
das
inc
subps
and
ret
or
in
andl
mov
mov
push
in
xchg
mov
cwtl
addb
addr16
fwait
cmp
adc
mov
xchg
pushl
icebp
shrl
jnp
and
adc
insb
inc
push
xor
add
repz
dec
pop
sbb
mov
or
sti
scas
fsubl
jb
mov
out
inc
jbe
inc
pop
cmp
imul
inc
lcall
add
xor
or
sbbl
push
xor
adc
scas
pop
mov
scas
in
sbb
shrl
outsb
lret
jne
dec
pop
icebp
repnz
cmc
xchg
pop
sub
test
out
xchg
fwait
sub
lahf
imulb
popf
push
loopne
pop
clc
push
add
adc
sbb
ficomps
test
aas
xchg
mov
hlt
mov
scas
mov
lahf
push
std
enter
std
pusha
test
push
call
mov
fpatan
in
jo
in
mov
lods
mov
imul
shlb
xorb
jb
lods
mov
test
aad
add
or
in
insb
into
scas
adcb
fildl
or
cmc
insb
dec
cltd
fnstenv
pop
cs
jo
push
pop
dec
dec
mov
jb
aas
push
rclb
or
leave
imul
inc
xor
pop
inc
stos
push
dec
std
mov
hlt
xor
repnz
mov
mov
int3
iret
inc
nop
mov
add
cmp
push
dec
sub
mov
js
mov
in
dec
mov
jne
fcoms
or
xchg
mov
cmp
test
sahf
fbstp
pop
add
mov
cmp
pop
test
adc
aas
xchg
int3
cmp
lcall
cmc
adc
xor
mov
adc
mov
push
insb
sbb
xchg
cmp
mov
dec
into
push
popf
add
jmp
scas
and
addb
lods
and
in
ret
stc
ret
jecxz
ret
aam
test
mov
push
sub
or
stos
dec
fidivl
mov
fidivrs
push
in
push
jmp
cmpsl
cmc
sbb
lret
movsb
sti
sub
pop
dec
mov
stc
inc
outsl
test
cltd
ficompl
iret
or
or
pop
jge
js
push
mov
xlat
sbb
add
add
pop
jmp
sbb
jge
pop
stos
enter
test
jae
dec
jmp
and
jp
jmp
mov
xchg
rcl
mov
aas
out
popa
lods
sub
out
orb
das
mov
cmp
lds
lcall
jno
or
addr16
ret
sub
pusha
jmp
xor
xchg
in
jl
insb
shll
push
jecxz
test
repnz
into
add
int3
and
mov
jmp
pushl
imul
popl
stc
push
addr16
push
ret
pop
push
shrl
int
cltd
or
aaa
sbb
push
mov
iret
rcl
mov
push
mov
test
repnz
add
push
xchg
fsts
stos
out
pop
inc
cld
call
or
adc
cmp
push
pushfw
xor
fstps
lods
push
bound
mov
mov
fucomp
out
lret
sti
cmp
flds
add
inc
sti
shl
sub
mov
push
inc
int3
xchg
push
jns
out
test
jnp
mov
add
push
roll
adc
sbbl
dec
es
push
jle
push
mov
push
mov
stos
aam
fsubrs
jp
mov
adc
inc
cwtl
mov
addr16
cli
cmp
or
jb
sub
xchg
xorb
xchg
cmp
sbb
test
mov
cmpsl
mov
dec
push
in
push
sti
inc
int
cmc
hlt
xchg
adc
push
outsl
sbb
call
and
sbb
or
movsl
xor
xchg
movsb
inc
push
lahf
outsb
dec
dec
adc
cmpb
fistpl
ret
pop
std
or
outsb
cmp
aaa
push
hlt
daa
sbbb
in
fidivl
inc
mov
sti
shrb
jg
test
push
mov
and
sub
cmc
xor
inc
xchg
in
dec
cmp
or
cs
pop
scas
xchg
jp
das
adc
in
jge
push
scas
inc
sbb
sbbb
fisttpll
mov
jmp
pop
ljmp
dec
es
lcall
in
adc
mov
lahf
and
out
dec
addr16
jp
dec
subl
std
mov
lahf
scas
addb
xchg
outsl
loope
ret
mov
mov
cmp
leave
clc
mov
or
lret
cli
sub
mov
jle
push
lods
mov
js
push
cs
jg
xlat
inc
scas
call
pop
cmp
mov
jl
adcb
sub
mov
adc
sbb
loopne
dec
inc
ja
xor
mov
ss
cmp
fldcw
lret
js
cmp
mov
sbb
enter
xchg
mov
shll
mov
push
aas
scas
xchg
sub
int3
scas
outsl
inc
jg
push
leave
arpl
shlb
sub
sti
sub
pop
mov
popf
loope
adc
sti
stos
je
stos
outsb
popa
jp
int
orb
xchg
and
adc
and
in
add
es
bound
ljmp
inc
mov
or
push
pop
enter
pop
sahf
xor
lcall
loope
jmp
push
add
jle
data16
jmp
rcl
gs
cld
into
jl
pop
mov
ret
arpl
jae
fsubl
pop
push
pop
mov
mov
in
pop
mov
push
push
sbb
mov
lods
and
jo
movb
or
rclb
jp
push
cmpsl
fimuls
and
lret
xchg
push
clc
subb
loop
dec
inc
pop
je
out
test
xchg
mov
imul
add
test
pop
lods
or
dec
xchg
pushf
scas
adc
sbbl
aad
js
test
push
lods
divb
cmpsl
out
jmp
icebp
push
cmp
mov
xor
arpl
adc
cmpsb
imul
scas
int
sbb
lods
push
shrl
cwtl
dec
inc
mov
les
test
cs
cmp
xlat
xchg
pusha
pushf
lea
imul
fst
push
popf
arpl
out
sub
out
insb
adc
outsb
inc
and
cmc
js
mov
xchg
pop
cmp
loopne
int
lret
adc
cmp
loop
mov
aas
repnz
push
dec
xchg
adc
flds
mov
outsl
int3
jo
int
push
pop
push
dec
push
jne
xor
clc
sbb
sub
mov
jle
or
loop
mov
pop
adc
movd
in
dec
cmp
cmp
test
bound
and
pop
xor
stc
pop
jo
rorb
orb
ss
xchg
mov
jp
push
mov
ret
add
iret
jb
mov
fsubs
dec
push
aas
addl
out
add
mov
popf
adc
jae
cwtl
icebp
mov
pop
cmp
imulb
addr16
dec
in
into
add
adc
mov
sub
aas
mov
imul
xlat
xor
jecxz
xor
sahf
fucomip
cld
adc
sub
push
push
aas
out
aaa
out
test
xor
xor
xchg
bound
xchg
outsl
mov
sbb
hlt
adc
call
and
fs
lods
jno
xor
loope
sub
loop
imull
xchg
popa
cmp
xchg
mov
cmpsl
ficoml
cmp
cli
das
mov
dec
scas
inc
cmpsl
fcomps
or
out
fbld
shl
fistps
frstor
sbb
rcll
insb
dec
daa
lods
dec
xor
cmp
hlt
jns
cmpxchg8b
iret
or
mov
insb
mov
push
movsb
mov
ljmp
cmpsl
jp
subl
pop
mov
mov
daa
adc
pmullw
mov
xor
sti
mov
cmp
xor
movsb
loope
dec
loop
movsl
push
aas
xlat
enter
cmp
iret
stos
mov
popa
or
cmpsl
lret
out
inc
and
xchg
stos
mov
aam
jb
cmpl
cmp
jmp
subl
sti
dec
test
sub
ror
repz
xchg
xor
aas
add
bound
add
or
enter
mov
in
jecxz
fwait
and
dec
and
call
sbb
fisubl
gs
bound
mov
rorl
xor
add
cld
mov
popf
xor
stos
pop
popf
hlt
mov
pop
les
mov
sbb
lods
mov
scas
mov
cmpsl
js
clc
mov
push
jge
xchg
loop
cmp
cmp
pop
bound
mov
cmpsl
dec
sbb
ficoml
sbb
adc
xor
mov
inc
fs
jo
push
stos
shll
pop
arpl
fisubrl
addr16
rcl
push
or
pop
and
push
icebp
sbb
loope
les
xlat
mov
leave
test
daa
iret
fisttps
or
jo
pop
insb
cwtl
inc
stos
cld
cmp
stos
cld
adc
fcmovu
jno
sti
xor
fistpll
sbb
jne
push
into
aam
mov
rcrl
decb
sub
aad
pop
pop
inc
xchg
cld
std
mov
bswap
pop
fdivrl
fcomp
jle
fs
pop
and
bound
loop
add
push
clc
dec
arpl
pop
icebp
ficoms
test
int3
arpl
sarl
xor
shlb
mov
mov
or
pop
mov
test
aas
loop
cmpsb
mov
dec
dec
nop
sub
arpl
jno
in
mov
jnp
push
sbb
dec
lret
fsts
cmc
andb
pop
push
mov
pop
add
xorb
rcll
pop
xlat
outsb
rolb
xlat
sbb
mov
adc
lret
mov
push
cmpsl
fwait
mov
ret
adc
cmp
stos
xchg
imul
int
notb
gs
je
mov
jle
jmp
pop
add
mov
gs
lret
jb
xor
bound
push
jg
lahf
cs
loop
xor
mov
jg
aaa
ljmp
pop
xchg
cmp
andb
cltd
in
sahf
nop
add
inc
in
incl
lds
clc
push
or
add
inc
repnz
add
mov
imul
push
add
mov
mov
pop
mov
and
cld
push
test
jns
dec
call
enter
lcall
in
mov
test
adc
mov
or
arpl
shlb
push
add
push
outsl
mov
mov
mov
jbe
les
jp
test
dec
aad
ficompl
in
sub
jle
stos
fs
shl
inc
lret
addb
out
loop
lret
push
cli
lock
fsubrs
and
outsl
mov
negb
xor
daa
lahf
ss
sbb
cmpsb
cmp
mov
les
mov
mov
add
imul
push
inc
jmp
adc
test
lock
pusha
pop
std
inc
and
sbb
mov
fwait
jae
cltd
mov
js
pop
cs
cli
decb
sbbb
mov
mov
fists
add
mov
and
cmp
push
inc
push
or
js
push
andl
xor
jo
sahf
test
movsb
xchg
shll
aam
stos
push
aam
leave
movsb
arpl
cmpsb
lock
das
scas
cwtl
dec
cmp
stos
lcall
data16
lret
mov
arpl
roll
insl
cmp
test
inc
mov
mov
lds
insb
pop
inc
xlat
push
mov
bndstx
stos
into
lods
pop
and
jnp
sub
iret
cmp
test
jle
jns
lahf
mov
xchg
xor
fidivrl
mov
ljmp
and
xor
xor
lret
popa
fsubr
or
cmp
outsb
adc
jae
mov
les
aad
lret
jnp
sub
cmc
pushf
loop
mov
sbb
movsb
dec
pop
fwait
cmpsl
jne
push
inc
or
inc
rol
inc
cmp
jae
jnp
cmpsl
sahf
stc
nop
rcl
sbb
aas
movsb
adc
xor
sub
push
pop
icebp
test
mov
and
in
push
mov
jmp
push
ss
add
add
test
inc
cmovns
rep
dec
lret
xlat
jle
mov
pushf
mov
ficoml
xchg
xchg
outsl
adc
cmpsb
cld
test
cs
and
jno
les
sbb
mov
xor
mov
ss
daa
movb
lret
dec
mov
mov
arpl
scas
pushf
je
mov
arpl
mov
sbb
jge
pop
shrl
jle
out
repz
mov
dec
adc
jbe
aas
int3
in
xchg
xchg
and
addr16
sbbb
ss
out
xor
cmp
adc
sbb
iret
cwtl
dec
andb
das
dec
xchg
push
dec
lds
mov
and
out
inc
and
nop
test
dec
cmpsb
test
mov
lret
sub
sbb
test
cmp
jle
adc
sti
push
insl
pandn
add
mov
add
xor
sub
inc
orb
dec
jg
add
inc
out
cld
js
mov
xchg
push
xchg
pop
stos
cmp
adcb
or
daa
sub
mov
jae
dec
les
rcrl
les
aaa
insb
orb
inc
inc
sbb
or
dec
mov
test
xchg
sti
movsb
dec
push
aam
or
xchg
adc
fs
push
dec
cmp
push
ss
push
outsb
addl
test
std
xor
xor
imul
nop
jne
or
imul
filds
mov
sbb
mov
xchg
jecxz
mov
xchg
add
iret
test
inc
xchg
jmp
lock
mov
sub
jne
fsub
jge
lea
cmpsl
cmpsb
add
aad
stos
push
xor
das
or
loope
mov
lret
in
cmpsb
dec
jb
push
xchg
push
xchg
xchg
scas
pushf
test
repz
adc
mov
and
mov
pop
imul
lret
rol
pop
inc
xor
out
xchg
sbb
addr16
mov
data16
pop
jnp
mov
repnz
jp
xorl
clc
cld
push
inc
dec
adc
jbe
inc
pop
and
mov
cmpl
jle
push
fstp
push
and
push
add
popw
and
push
pop
mov
xor
sbb
decl
push
xchg
aam
xor
jecxz
mov
push
test
pop
scas
je
dec
mov
xchg
mull
cmc
sbb
sbb
dec
fstpl
sbb
dec
je
add
insb
jo
mov
inc
xor
orb
enter
vhsubpd
loop
cmp
lods
xchg
jns
or
or
push
repnz
fcos
xchg
lds
sbb
mov
int
jb
imul
sbb
insl
ja
es
shl
cld
std
xor
lahf
sbbl
jns
adc
mov
fdivp
mov
lret
scas
stos
adc
stos
mov
jmp
xor
shrl
pusha
cmp
xchg
dec
repnz
jb
idivl
push
adc
xor
sbb
cmp
adc
push
sbb
mov
icebp
mov
or
inc
jnp
adc
lods
adc
jb
aas
xor
mov
xor
sub
and
out
cli
ja
sti
pop
pop
arpl
jl
adc
sbb
aaa
loope
adc
pop
mov
or
outsb
mov
arpl
cmp
pop
jg
shld
out
pushf
fwait
sub
jle
fiaddl
mov
xlat
es
dec
in
stc
ljmp
daa
icebp
pop
and
inc
mov
sub
in
push
loop
xor
jne
mov
imul
pop
push
push
lods
fwait
jb
daa
data16
lods
cmp
es
ret
mov
movd
xchg
orl
and
xchg
lods
lret
jae
jb
dec
aam
jnp
sbb
fisubrl
cmpb
ret
xor
jbe
insl
cwtl
rorl
jmp
cmpsb
sbb
jne
insb
arpl
shl
rorl
add
xor
pop
pop
adc
ljmp
js
in
cli
or
sbbb
push
int3
xchg
hlt
adc
mov
stos
arpl
cmp
dec
inc
scas
dec
adc
push
add
fbstp
xor
pop
ljmp
lcall
loopne
inc
xchg
in
je
addr16
push
jg
pushf
push
decb
popa
add
test
mov
aam
loopne
ss
shrl
adc
or
aaa
into
cmp
notb
test
jae
in
lret
mov
inc
dec
imul
gs
sti
push
aad
jnp
lods
iret
pop
insl
add
cwtl
jae
sub
xchg
mov
push
mov
pop
or
xor
lds
lcall
aam
xor
mov
test
lret
cld
mov
mov
stos
sub
out
xchg
repz
mov
inc
mov
insb
mov
push
sbb
jb
dec
aaa
or
pusha
movb
mov
xchg
repnz
push
mov
lret
mov
repnz
pop
test
push
mov
dec
sub
les
xor
xor
sub
xchg
femms
int
xor
push
sahf
adc
adc
clc
and
pop
cmc
jno
sub
rorl
xchg
mov
xor
mov
outsl
arpl
ja
popf
pushf
mov
rcll
es
xchg
push
jne
popf
mov
adc
or
sar
xor
imul
int
inc
decl
aas
push
mov
mov
xchg
in
mov
jbe
jge
xor
add
mov
inc
push
cmp
popf
repz
pop
lock
inc
inc
insb
sub
fs
mov
inc
out
inc
imul
pop
push
cli
dec
adc
leave
xor
rcrb
sbb
mov
dec
cmp
pop
icebp
insb
dec
js
out
mov
fidivs
push
mov
aaa
cmp
orl
icebp
inc
shll
pop
rcrb
jmp
loopne
sbb
xor
enter
jge
xor
js
add
xchg
xchg
cmp
fidivs
mov
dec
adc
and
fildll
adcl
pop
addr16
mov
pop
das
icebp
iret
or
js
cltd
jge
movsb
inc
dec
dec
test
push
lcall
mov
out
adc
imul
xor
mov
mov
mov
jp
loope
mov
dec
mov
fldl
or
test
mov
ds
jne
enter
aad
mov
lret
adc
mov
lret
repnz
xchg
jecxz
insb
cli
es
cltd
andl
adc
push
mov
xchg
enter
ljmp
push
sub
ds
gs
mov
sub
ds
sub
scas
repz
sub
jo
movsl
aam
adc
and
or
xchg
sub
xchg
aad
sti
xchg
xchg
lret
push
lods
imul
arpl
scas
inc
or
ljmp
push
out
sti
xor
in
mov
sahf
incl
xchg
adc
lock
incb
insb
mov
gs
add
shr
enter
loop
jnp
mov
lcall
cmp
sti
lock
or
shrb
lret
jp
mov
arpl
cmp
repz
cmc
call
pop
xchg
sub
cmp
loope
scas
out
sub
pop
lahf
push
adc
movsb
mov
js
mov
push
xor
imul
arpl
ss
scas
gs
mov
sbb
push
out
and
outsb
xor
mov
mov
cmpsl
imul
int3
out
cmp
test
nop
out
repz
jbe
scas
arpl
mov
sub
fdivs
inc
je,pt
out
xchg
test
and
cld
test
int3
jg
popa
xor
sbb
add
sub
shlb
xor
out
mov
add
sbb
shrl
fwait
xor
dec
mov
mov
fidivrl
imul
dec
je
mov
popf
out
dec
mov
xor
test
cld
pop
int3
cmp
in
cwtl
sub
mov
fidivs
out
icebp
cmp
and
sbb
cli
xchg
lcall
xor
mov
and
cmp
or
int3
jne
xor
push
jmp
adc
mov
sub
add
shld
push
in
addl
xchg
xchg
and
adc
push
inc
mov
mov
adc
repnz
cmp
cli
daa
imul
fldenv
jmp
in
jge
out
jbe
and
mov
in
mov
mov
jae
pop
ds
or
push
test
das
jnp
movsl
dec
out
test
rorb
pop
adc
push
scas
repnz
loope
inc
rcl
cmc
fmuls
cmpb
scas
les
and
pop
call
into
mov
lds
sbb
lods
fcmovnb
push
lods
jge
xor
mov
dec
adcb
jo
out
inc
add
xor
and
and
jne
mov
dec
add
pop
add
xchg
mov
fsubrp
add
sbb
pop
jno
sarl
loope
xor
lock
cltd
xchg
dec
mov
mov
inc
loop
cmp
subl
xlat
stos
movsb
add
mov
in
add
add
leave
lods
and
das
or
add
add
shl
jmp
aad
jno
imul
inc
jg
xchg
decl
dec
out
mov
lret
cltd
ljmp
pop
jb
mov
adc
mov
fisubl
inc
in
sbb
out
push
hlt
dec
inc
fcompl
inc
pushf
repz
enterw
hlt
or
sub
sbb
into
sub
push
popf
xchg
sub
adc
fmull
cltd
xchg
es
call
xchg
popa
jnp
fidivs
roll
push
or
popf
jp
mov
shrl
xchg
jp
andb
mov
fs
imul
xor
jp
lret
cld
dec
adc
fisubrs
xor
sub
mov
or
out
popaw
aas
lahf
sbb
fwait
jb
cld
mov
or
aad
jge
sbb
or
jne
aam
fisubrl
pop
inc
sti
inc
mov
push
sbbb
insl
loopne
ret
mov
pushf
sbb
cmp
jbe
mov
xchg
mov
adc
test
ret
hlt
dec
insl
cmp
idiv
das
add
in
mov
sbb
mov
mov
fs
arpl
das
mov
xchg
adc
lahf
inc
dec
aaa
push
jmp
filds
por
and
movsb
dec
pop
push
cmp
test
adc
shrl
subl
sbb
mov
jo
movl
loopne
bts
cld
sub
std
or
lahf
cltd
dec
mov
jno
or
stos
mov
lret
sub
sub
push
pop
xchg
inc
fisttps
sbb
xchg
pop
andb
cmp
fistpll
push
data16
cmp
loopne
mov
push
jnp
add
int3
loopne
in
adc
mov
fcmovnu
sub
cmp
bound
mov
cmp
movsl
add
cmp
les
pop
imul
or
mov
fnsetpm(287
push
test
mov
dec
add
jmp
pop
mov
inc
adc
and
fisubrl
jl
mov
sti
lock
scas
and
mov
mov
lcall
mov
lcall
insl
sub
das
and
jns
aaa
jbe
push
loop
xorl
or
push
imul
lea
xchg
call
or
xchg
out
push
and
push
imul
lret
iret
jne
repnz
iret
data16
dec
loope
jne
leave
push
out
push
andb
sarl
mov
arpl
lcall
and
test
or
jecxz
fbstp
adc
lahf
scas
imul
faddl
push
lcall
jp
push
jne
adc
movb
jmp
inc
xor
test
jo
mov
in
insl
std
aaa
das
test
jle
push
ljmp
jg
push
jg
mov
clc
cltd
inc
lds
adc
pop
xchg
and
fldl
xlat
imul
pop
and
jne
icebp
inc
popf
mov
adc
mov
ficoml
push
loop
lcall
stos
inc
shr
jnp
fdivrs
mov
mov
movsb
rcll
fpatan
push
inc
sbb
scas
xchg
xchg
dec
sub
mov
mov
shll
in
inc
ret
xchg
loop
shl
out
push
and
enter
push
add
fsubs
icebp
and
jo
cmp
xchg
jg
mov
arpl
xchg
pop
adc
outsb
sub
lods
xchg
arpl
in
push
pop
hlt
lret
es
cld
fisubs
faddl
jnp
mov
mov
cmpsb
aaa
xor
jp
push
nop
lcall
subl
mov
cmp
mov
push
push
movsl
cmpsb
je
pop
out
aam
aas
loope
and
das
cmp
imul
pop
bound
and
in
pslld
dec
mov
mov
sub
push
and
mov
test
icebp
cwtl
jae
bound
int
jnp
in
fists
push
jne
push
inc
stos
dec
ja
aaa
test
fs
ljmp
addr16
xchg
dec
jns
push
add
loopne
pop
insl
std
lods
out
repz
and
pop
xor
sub
sub
xor
pop
sub
fs
or
and
frstor
aam
arpl
insl
jns
in
dec
orl
in
loopne
lret
pop
insl
std
mov
jl
cli
test
call
mov
mov
shr
into
xor
and
inc
xchg
dec
in
faddl
jmp
or
add
loope
cwtl
xchg
pop
or
add
xchg
add
in
xchg
xor
sub
xlat
jge
xchg
add
ds
sub
mov
push
adc
or
push
xor
adc
sub
add
mov
int
pop
imul
and
jecxz
xor
test
sahf
fneni(8087
sar
orb
push
mov
movsl
xor
lods
push
mov
mov
sbb
mov
leave
mov
ret
push
imul
dec
fwait
mov
cmp
outsb
aas
test
xor
jnp
stc
or
inc
push
into
jbe
lea
inc
dec
or
enter
mov
push
scas
xorb
das
push
mov
xchg
insl
inc
jmp
mov
ljmp
mov
sbb
pop
xchg
xor
xlat
inc
ljmp
jl
loopne
aas
popf
xchg
jle
popa
mov
insb
popf
or
cmp
rcrl
ja
jg
or
mov
cmpsl
movlps
dec
add
push
or
mov
pushf
and
cmpsb
lcall
ljmp
sti
mov
jl
in
inc
push
roll
out
cs
mov
push
dec
stos
pop
xor
insl
icebp
pop
out
jnp
mov
sub
outsl
adcb
push
lea
decl
jo
pop
xchg
lods
lret
push
clc
mov
or
arpl
push
clc
push
pop
push
testl
cmpl
sub
pop
lods
push
or
rorl
xchg
jg
jno
pop
inc
sbb
pushf
fwait
sub
cld
xor
outsb
cmp
sbb
jle
mov
pushf
xor
loopne
push
imul
and
or
das
mov
shlb
or
andl
sar
jb
in
xor
dec
add
out
sti
push
xchg
ds
pop
xchg
jnp
in
mov
sub
push
orl
and
enterw
pusha
pop
mov
xor
xchg
sarb
aam
aad
lock
jb
jge
mov
sbb
loope
popl
mov
ficoml
cld
stc
popf
fildl
or
dec
sub
push
mov
add
adcl
or
popa
fsubrl
mov
mov
cmpsb
aad
lds
sub
scas
and
cmpb
xor
xchg
add
dec
lret
orb
pop
dec
aam
rcl
jp
mov
jo
icebp
test
js
das
sub
dec
pop
cmp
in
cmp
test
jp
sbb
test
shl
mov
lods
add
adc
and
mov
dec
inc
add
rol
dec
inc
push
lret
xor
daa
dec
flds
imul
rcr
out
jge
inc
frstor
cmp
aad
adc
push
xlat
jb
mov
dec
jnp
lahf
divl
imul
sub
jae
fwait
aas
rol
stos
xor
xor
fdivrs
imul
cmp
cmp
push
push
pop
and
popf
stos
and
je
fsub
inc
rcr
push
sbb
jns
scas
push
lods
push
aas
ret
in
and
daa
jmp
push
cmpsb
push
jb
addl
add
inc
push
fdivrs
push
jb
xor
push
sbb
sub
dec
pop
sub
mov
jo
xchg
jge
mov
aad
mull
xchg
outsb
sbb
push
mov
ja
sarb
sbb
cmpsl
or
fistps
add
xor
in
lret
rcrb
enter
push
or
add
xchg
aam
pushf
mov
scas
cmp
push
shr
int3
inc
in
stos
in
aad
dec
push
jns
lcall
add
cmp
adc
mov
adc
ss
jno
adc
sub
lret
mov
out
in
xchg
or
sub
cwtl
and
add
out
mov
lods
xor
push
push
mov
addr16
shlb
dec
xchg
loope
push
jecxz
or
jg
test
rcr
ss
std
imul
movhlps
mov
mov
xchg
das
addr16
sahf
xchg
sbb
inc
movsb
cld
int3
sub
inc
dec
inc
xchg
push
sahf
mov
aam
xor
mov
cmpsb
inc
sbbl
stos
call
shrb
or
jge
jbe
sbb
sahf
aas
push
jp
cmp
pop
mov
fcoml
or
sub
nop
loopne
jae
pushf
mov
ljmp
xchg
xor
push
fs
fnstcw
hlt
jo
outsl
cli
aam
mov
in
and
mov
scas
push
faddl
mov
call
or
fbld
add
and
pop
pop
xchg
sahf
and
pop
cmp
popf
gs
pop
fildll
cmp
and
cmp
mov
rcrl
cmp
cld
pop
jne
push
std
mov
adc
sub
jb
out
lcall
add
xor
cs
inc
lea
cmp
pop
and
jne
jns
clc
rcrb
sub
jle
lods
jmp
mov
push
insb
test
push
mov
adcl
mov
mov
sub
nop
cltd
adc
cmc
xchg
dec
dec
inc
cs
xlat
xchg
mov
out
js
and
mov
push
or
push
inc
aas
xor
popa
sahf
in
inc
cmp
push
and
ja
test
addl
mov
lahf
xor
scas
call
test
test
enter
inc
jmp
fiaddl
xor
ljmp
pushf
cli
sahf
icebp
cltd
test
cwtl
ja
out
xchg
xsha1
cmpsb
into
test
jge
adc
imul
add
aaa
mov
and
push
jge
mov
andb
std
xchg
cwtl
dec
dec
mov
cwtl
cmp
bound
or
ljmp
int3
pop
dec
cmp
or
mov
xor
dec
mov
ret
aam
loop
jmp
add
jo
lahf
in
test
pop
xlat
popf
or
adc
cli
xchg
jge
xchg
xchg
and
sub
push
mov
dec
jle
lret
inc
push
dec
xchg
dec
cmp
ljmp
or
sub
leave
mov
inc
jb
inc
push
loopne
mov
mov
ret
pop
aaa
pop
and
cwtl
xor
mov
jl
push
arpl
push
or
repz
icebp
mov
in
pushf
or
js
mov
adc
outsb
or
imul
divb
jno
dec
pop
ja
aas
push
xchg
fs
sub
cmc
cmc
xchg
out
pushf
sahf
sub
call
inc
xchg
mov
mov
pop
jns
or
daa
lods
xor
scas
pushf
aas
xchg
add
stc
in
loope
mov
mov
dec
mov
outsl
inc
dec
push
xchg
addr16
xor
cmc
arpl
mov
fists
adc
jno
movsb
cmp
sub
or
scas
cmp
fsubrp
ret
hlt
or
mov
pop
sbb
and
push
lods
pop
jae
ja
add
inc
mov
mov
lea
mov
inc
aad
add
lret
fdivs
mov
mov
notl
outsb
and
inc
cmp
int3
popf
mov
push
insl
dec
xlat
sub
jae
in
cltd
push
outsb
push
fisubrs
lcall
inc
pop
pop
cmp
dec
pop
xor
xchg
jno
xchg
test
fcompl
std
into
adc
add
ret
in
xchg
outsb
sbb
cltd
or
mov
cmpsl
std
push
pop
cmp
sti
jbe
xor
repnz
aam
xor
push
int
repz
sbb
jno
mov
mov
lods
inc
and
sbb
and
and
mov
sahf
cmp
adc
add
andb
in
pop
inc
cltd
pop
xchg
std
in
jle
xchg
mov
sbb
cmpsl
call
hlt
jo
les
enter
fisttpll
int3
lods
jo
fisubs
dec
imul
js
xchg
ds
enter
jge
xlat
cmpsl
jecxz
and
push
lret
add
in
or
fnsave
sti
lcall
cli
push
sbb
sbb
xor
pop
mov
mov
pop
push
and
lock
aad
test
jns
cld
cmc
insw
adc
add
mov
push
cmp
cmpsl
nop
daa
sbb
scas
addr16
sub
mov
stos
lcall
adc
xchg
movsl
icebp
mov
mov
lret
js
add
aaa
adc
pop
fs
shl
inc
into
hlt
lahf
cmp
in
pop
pop
inc
in
fildll
push
jbe
mov
and
mov
push
cwtl
cmp
pusha
inc
xchg
lcall
xchg
popf
or
xor
into
xor
out
test
out
mov
stc
leave
cmp
sub
in
dec
and
pop
mov
outsl
adc
inc
addr16
movsl
icebp
testb
stos
or
sbbl
and
pop
cmp
mov
pop
jmp
push
ja
pop
and
pop
dec
das
ret
loope
inc
jb
sub
adc
cmp
add
test
in
mov
push
push
or
aas
lock
imul
roll
scas
daa
ja
faddl
in
inc
dec
loope
dec
and
xchg
add
inc
ljmp
imul
aad
and
dec
iret
xorb
lock
or
pushf
cmp
leave
icebp
out
push
test
jle
out
pushf
pop
out
mov
fs
dec
pusha
orb
inc
in
ss
jp
and
add
push
pusha
adc
in
xor
lret
aad
push
inc
sub
cs
cltd
popf
xor
out
int
pop
ret
mov
clc
xchg
mov
mov
mov
sbb
mov
je
cld
sarl
or
in
pop
pop
nop
mov
add
xor
dec
cmp
pop
notb
xchg
xchg
test
arpl
mov
xlat
es
mov
adc
adc
cltd
add
scas
xor
xchg
xchg
std
push
xor
ja
call
arpl
sub
inc
jmp
test
std
xor
push
jmp
sti
in
jne
arpl
test
outsb
jmp
lds
dec
pop
cmpsb
aaa
adc
aad
subl
xchg
dec
and
push
mov
sbb
push
mov
out
mov
push
hlt
mov
add
cmpsb
hlt
jne
mov
jb
lcall
inc
pushf
movsb
into
or
dec
push
and
cmp
insl
ja
pop
call
inc
and
pop
push
int3
xor
std
loope
das
loopne
pop
sub
pushf
mov
pop
xor
aas
lods
inc
test
sbb
int3
inc
int3
lret
outsb
jp
out
mov
dec
idiv
in
jae
mov
and
shrl
pusha
fildl
movsl
push
or
pop
testl
cld
inc
frstor
enter
roll
repnz
xor
je
cmp
sub
cmp
imul
xchg
ret
pop
dec
addr16
loope
push
sub
mov
mov
lret
in
pop
mov
shlb
xchg
out
lods
in
adc
or
xchg
test
push
xchg
pushf
push
aas
mov
add
jne
adc
mov
xchg
notb
xchg
test
mov
pop
or
insb
stos
mov
xchg
pusha
inc
adc
pop
cmpl
div
addl
sbb
enter
nop
pop
sub
and
dec
imul
leave
jmp
mov
cld
jmp
pop
cld
push
aaa
fnstcw
xlat
push
fdivl
mov
dec
sub
fwait
pushf
inc
xor
psllw
mov
imul
xchg
mov
negl
aad
ret
jg
push
pop
xchg
popf
lret
mov
xchg
adc
push
or
sti
aad
pop
popa
mov
aas
dec
ret
stos
scas
inc
push
jecxz
mov
lret
loope
arpl
push
sbb
cmc
popfw
push
arpl
push
negl
ja
push
in
out
in
int3
sub
inc
sbb
mov
sbb
cmp
sbb
movl
jns
xor
fdivl
imul
fisubs
jg
fs
push
inc
cli
movb
cli
mov
in
aam
push
pop
rorl
sbb
or
icebp
cmp
call
mov
ret
push
fsubrs
loope
cli
bound
lcall
imul
mov
hlt
cmp
out
sbb
shrl
rcrb
clc
test
insb
mov
and
cmp
int
sti
arpl
dec
in
scas
rol
clc
out
xchg
sub
jb
iret
dec
out
popa
cmpsl
mov
loopne
pop
ret
ret
add
inc
sub
fdivr
inc
pop
shlb
in
jne
jnp
fsubl
push
dec
or
loopne
cmpb
or
mov
adc
inc
pop
cli
mov
mov
loopne
xor
cli
lahf
jp
push
in
cmp
insl
icebp
dec
sbb
sbb
clc
push
mov
jbe
push
dec
test
fstl
test
sbb
stc
aaa
push
cmpsb
sbb
jl
jge
movsl
insl
xor
lahf
mov
add
or
in
outsl
lcall
lcall
in
clc
add
testb
lret
in
mov
lea
nop
mov
sub
jb
mov
xor
popa
mov
mov
sbb
xchg
in
sbb
pop
test
xchg
mov
xchg
subb
and
xchg
fwait
pop
mov
sbb
loop
cmp
or
movsl
jno
cwtl
das
mov
pusha
sub
lret
cwtl
idivl
push
cs
idivl
pop
sub
dec
insb
pop
ljmp
xchg
mov
or
jl
mov
cld
dec
mov
push
and
mov
sbb
lock
mov
jg
popa
mov
daa
int3
lahf
and
add
xlat
dec
aam
mov
add
sbb
or
xchg
add
lahf
icebp
jns
jecxz
pop
cmp
and
aad
test
dec
ljmp
xchg
dec
in
sahf
in
imul
movsl
cmp
push
sub
sbb
movsb
pop
jmp
pushf
jae
push
popa
add
mov
mov
xor
xchg
sub
lahf
push
imul
dec
sbb
push
sbb
xchg
fidivl
or
xchg
inc
jae
stos
popf
pop
xor
pop
push
cld
movsb
dec
out
out
test
mov
push
sub
xchg
lcall
lods
inc
and
scas
sbb
aaa
push
push
shlb
pop
in
dec
cmp
adc
shr
not
and
xchg
js
into
jne
adc
dec
dec
out
mov
pop
movsl
dec
testb
pop
in
sub
jp
dec
repz
aad
jl
loope
lods
pop
xchg
add
fstpt
inc
in
adc
into
jb
push
lds
push
jnp
mov
add
jo
push
sub
push
mov
fldl
cmp
add
aas
inc
pusha
and
pusha
cmpsl
test
mov
cwtl
push
in
and
jae
push
sub
les
out
inc
cmp
arpl
fcoml
pop
xor
repz
cld
xchg
mov
fdivrs
iret
or
sbb
push
stc
rcrb
mov
and
jbe
dec
arpl
aas
fs
jl
lahf
add
add
rolb
jno
fnstcw
shll
shrb
xor
lds
jle
repz
inc
pop
push
aaa
cmc
insb
sbb
pop
ret
pop
lea
test
fisttps
out
and
push
sub
xlat
jl
movsl
adc
jbe,pt
dec
movsl
push
in
mov
xchg
lods
sub
fnsave
mov
repnz
lahf
mov
mov
daa
movb
lds
gs
in
pop
addr16
das
push
mov
xor
pop
inc
xchg
aas
sbb
xchg
and
inc
push
mov
aaa
out
mov
jecxz
pop
mov
insb
xchg
mov
fstpt
sub
push
xor
mov
pop
mov
shlb
or
cwtl
popf
xchg
add
mov
cld
xlat
neg
enter
or
insl
popf
sub
xchg
ja
pushf
mov
into
pushf
push
ljmp
sub
js
cltd
shrb
push
add
and
incl
jle
xchg
imul
leave
bound
movsb
jmp
cmp
icebp
cmp
out
mov
sahf
icebp
bound
lret
cs
or
or
adc
inc
clc
dec
out
fs
push
repnz
xchg
ljmp
and
lock
xchg
push
sub
xchg
popa
or
xchg
mul
ret
mov
inc
cli
shrb
out
pop
push
arpl
xchg
and
and
es
stc
mov
fcoml
mov
scas
pop
jne
and
adc
testb
cmp
push
and
imul
inc
fidivrs
sbb
inc
scas
out
out
outsb
inc
cld
mov
js
pop
mov
xchg
mov
js
and
lret
js
jge
in
xchg
call
cmpsl
xchg
mov
filds
pop
xchg
loopnew
sbb
mov
add
test
jnp
jno
xor
roll
pop
lock
daa
pushf
mov
popa
cmp
mov
or
sahf
out
subl
popa
mov
dec
call
adc
ss
stos
in
cmp
outsl
test
pop
hlt
push
mov
sbb
push
add
xor
negb
sbb
mov
pop
lea
sub
inc
mov
xchg
ljmp
in
mov
add
mov
cmp
xchg
sub
inc
xchg
mov
add
and
push
pop
loop
jnp
lock
mov
pop
mov
sbb
or
push
aas
pop
lahf
xor
shl
push
add
xor
push
pop
push
icebp
mov
daa
or
jmp
or
add
lcall
jb
sti
jae
mov
lcall
bound
into
sub
outsb
jp
enter
xlat
mov
mov
bound
inc
lret
imull
dec
add
mov
xchg
cmpsb
mov
in
and
mov
paddusw
add
mov
sub
xor
addr16
jp
nop
add
mov
push
sub
jne
mov
dec
cmp
mov
push
or
cmpl
push
data16
mov
inc
lea
cmpsb
or
out
dec
and
in
dec
jecxz
cwtl
icebp
testl
push
iret
out
imul
test
cmc
xor
fucomp
sbb
dec
mov
ja
stc
loopne
shll
movsl
vsubsd
mov
mov
push
cmpsb
and
sub
lds
lods
push
scas
push
dec
lods
mov
push
jp
sti
outsl
decb
adc
cli
iret
add
adcb
dec
mov
xor
xor
jns
std
dec
inc
sbb
std
testb
inc
lret
pop
out
notl
aaa
pmaddwd
pop
add
aam
clc
rcll
imul
cmpsl
mov
rorb
mov
aad
stos
ficompl
mov
in
jp
push
inc
dec
cs
mov
cli
or
dec
push
sub
add
jg
add
lret
adc
pop
clc
xor
movsl
fwait
ret
sbb
dec
xchg
and
push
or
xor
test
sub
fcomps
inc
rolb
fwait
pop
mov
lds
inc
stc
ret
and
add
nop
jns
shll
ss
sub
test
jp
xor
popa
xor
cmp
cli
lock
out
sbb
lods
push
test
pop
aaa
movsl
lret
push
mov
shlb
push
push
scas
imul
add
jo
push
enter
mov
ja
xor
test
popf
popa
in
mov
arpl
js
or
push
mov
xchg
mov
repnz
mov
pop
insl
add
movsl
or
jl
scas
scas
repz
sub
dec
xchg
daa
mov
cs
pop
pop
dec
dec
pop
fldcw
adc
imul
xorl
cltd
lods
nop
and
xchg
movsb
cmp
dec
les
add
loop
mov
xchg
movsb
out
and
lcall
jne
outsb
pand
jecxz
call
loope
sbb
hlt
sub
add
shr
push
xchg
sarl
mov
imul
xor
ja
bound
add
xor
adc
cwtl
mov
fcoms
mov
shll
imulb
mov
and
cltd
loopne
add
mov
repz
sub
jp
rcr
ret
fstpl
xchg
dec
mov
jnp
out
or
inc
lods
xchg
les
call
shlb
mov
sbb
fcmovbe
icebp
mov
mov
mov
push
xorl
loopne
in
pop
jo
pop
pop
dec
mov
cltd
lods
push
inc
test
mov
test
push
movb
ljmp
cmp
mov
inc
mov
in
test
pop
hlt
lea
stc
and
cltd
loop
cmp
sbb
mov
adc
rorb
outsl
cmpb
push
out
leave
pusha
pop
jecxz
xchg
inc
je
xchg
ficoms
aas
into
xor
xchg
cmp
sub
jl
lock
jns
adc
mov
lret
loope
xor
adc
inc
rolb
xor
push
mov
sbb
gs
push
adc
mov
std
dec
mov
inc
test
and
fdivs
insl
or
jns
pop
inc
add
dec
or
dec
mov
outsb
pop
movsl
movsb
cmp
cmc
js
dec
cmp
rolb
pop
sub
pushf
fisubrl
rclb
jo
xor
xchg
into
cmp
decb
mov
arpl
xchg
aad
aam
add
push
daa
pop
lret
push
jb
fstps
das
pop
mov
mov
out
out
cmp
outsb
cmpb
lods
test
lods
inc
cmp
mov
fsubrs
leave
mov
daa
xor
mov
into
pop
scas
ljmp
inc
dec
pusha
mov
jbe
push
js
cwtl
aad
leave
scas
xchg
sub
xchg
add
imul
ret
cmp
mov
push
jae
movsl
js
lea
jne
nop
aas
lea
imul
es
fistps
or
fs
adc
ret
cmp
addr16
cli
leave
jmp
gs
lea
lcall
cwtl
pop
xor
stos
jbe
rcr
imul
sahf
and
inc
arpl
inc
into
xor
insl
mov
jne
add
inc
dec
aam
and
push
mov
sub
xor
in
int
push
stos
push
inc
xchg
mov
inc
pop
mov
sahf
push
jle
ret
dec
int3
dec
rclb
push
xchg
cmp
stos
shr
icebp
js
adc
call
das
imul
nop
push
cmp
sbb
sub
je
sbb
add
push
dec
xchg
mov
push
ljmp
pop
test
or
icebp
aaa
adc
in
cltd
out
mov
in
rclb
sbb
call
and
fmull
sbb
ljmp
adc
out
ret
fsubl
daa
clc
mov
sub
rcrb
out
cmp
mov
std
cmp
fmull
xchg
xor
add
xchg
mov
out
mov
sarb
pop
iret
test
inc
xchg
xor
bound
leave
mov
mov
stos
cmpsb
int
lods
les
fdiv
daa
addr16
cmp
push
lock
jmp
xchg
pusha
test
sub
xchg
pop
add
or
insb
imul
mov
popfw
rorb
cmp
adc
psllq
add
xchg
push
lcall
popa
and
xchg
fistpll
popf
mov
das
push
sti
xor
in
cmp
lret
jecxz
testb
push
adc
adc
xor
sahf
sbbb
mov
mov
push
cmc
scas
mov
testl
inc
xchg
push
andb
jno
sbb
sbb
ret
sub
rcr
rcrb
pop
mov
cld
xchg
inc
sub
mov
pusha
or
adc
int3
pop
mov
lea
mov
lahf
dec
mov
xor
insl
es
lahf
mov
fcmovu
popf
xor
cld
cld
xchg
testl
std
push
sbb
stos
ret
push
mov
out
and
in
ss
pop
pop
movsb
dec
scas
dec
mov
fs
mov
cli
add
jbe
fbstp
cs
fcompl
push
dec
call
cld
js
arpl
cwtl
jge
int3
call
es
pop
push
xor
mov
or
cmp
xchg
test
jb
int3
xor
les
push
out
mov
mov
js
in
jno
fsubrs
or
xchg
orb
cmp
js
push
add
es
push
cwtl
mov
mov
or
loope
adc
and
pusha
arpl
dec
sbb
repnz
fidivs
or
scas
dec
fsubl
outsl
loopne
ret
loopne
or
faddl
cmp
xor
xor
xchg
xchg
daa
push
xchg
dec
lock
shrl
out
xchg
pop
mov
test
sub
push
dec
les
jge
int3
pop
jb
push
cmp
arpl
sarb
cwtl
call
mov
pop
rorb
jecxz
or
inc
and
push
cmp
stos
mov
xchg
test
rcr
xor
xchg
sub
jg
aas
jns
dec
stos
data16
iret
sbb
dec
test
jb
cmpsl
orb
mov
pop
loope
data16
jno
lock
adc
add
and
stos
jae
xchg
pop
sub
mov
adc
mov
or
lods
pop
test
sbb
sub
adc
add
mov
inc
dec
jne
or
xor
dec
push
nop
notb
mov
ja
repz
mov
lock
aaa
ss
scas
mov
idiv
jne
xor
mov
pusha
jge
out
or
lea
jge
ret
fisttps
stos
mov
rcrl
xor
in
and
bound
cwtl
dec
dec
sahf
sbb
or
cmp
leave
jns
rep
xchg
lds
add
xchg
stos
int3
xor
sti
in
pop
testb
dec
push
jnp
inc
lcall
or
xor
add
ficompl
dec
aad
sbb
jle
jae
push
jmp
xchg
mov
push
jle
jae
insb
sarl
insl
inc
fmul
out
adc
sti
js
and
cwtl
and
aad
jns
rorb
je
pusha
stos
sub
pop
push
xor
imul
jbe
dec
mov
popf
movl
pushf
fs
and
mov
ret
sub
inc
scas
es
sub
into
sub
pop
ljmp
mov
je
outsb
add
mov
jo
sti
mov
mov
js
mov
jmp
fisubrs
int
int
mov
bound
jno
jnp
mov
push
fdivs
rcr
sub
xor
push
out
stc
lock
daa
inc
pop
pop
mov
nop
ljmp
and
push
scas
inc
pop
lds
pop
mov
xor
jl
loop
loope
test
push
dec
mov
mov
pop
imul
sub
fildl
and
inc
sbb
jbe
lahf
stos
adc
cmp
add
fnsave
insl
jnp
sti
sti
stos
adc
sarb
or
xchg
or
cmp
mov
inc
sub
jp
mov
mov
xor
jl
sbb
test
or
mov
adcl
sub
idiv
push
mov
mov
mov
mov
out
in
pushf
pop
mov
ds
ss
push
ljmp
std
sub
mov
inc
out
ret
xchg
push
adc
ljmp
pop
pop
fistps
adc
push
xchg
stc
push
jle
mov
jne
push
cmpsb
js
iret
loope
out
xchg
sbb
dec
ljmp
cli
mov
dec
test
shrb
mov
xchg
and
mov
insb
mov
insl
mov
sub
outsb
lahf
aad
fidivs
insl
adc
in
mov
ss
in
enter
ja
jg
ss
jno
xor
pop
fisubs
test
and
jbe
loopne
add
and
loop
push
fnsave
shrl
xor
sahf
xchg
jp
mov
dec
sub
fstps
adc
push
cld
xchg
ret
or
pushf
add
das
and
scas
mov
mov
mov
out
test
or
add
fsts
nop
xor
adc
addr16
sbb
cmp
popf
aad
out
aas
pop
pop
or
into
fdivrl
out
push
daa
das
jo
add
dec
dec
hlt
pop
and
sub
inc
cwtl
sbbb
mov
addr16
insb
add
scas
dec
das
ss
test
cltd
xor
mov
aas
push
xchg
xchg
dec
movsb
addr16
pushf
mov
std
lods
xlat
pop
icebp
push
gs
fistps
mov
dec
loop
xchg
lret
push
dec
fdivrs
and
shl
adcl
xchg
repz
test
mov
test
inc
fcoml
xor
arpl
cmpb
cmp
jae
cmp
push
mov
aad
popa
into
gs
orb
xchg
inc
stos
int
xor
mov
shl
jnp
push
and
daa
dec
popa
cmp
dec
mov
adc
xor
xchg
xchg
or
push
or
imul
loope
add
lahf
test
xlat
xlat
xor
and
dec
mov
jecxz
jle
adc
or
or
orb
cmpsb
mov
fistl
jmp
aam
pop
adc
dec
roll
repnz
lahf
xor
xor
xchg
in
out
push
and
mov
sub
xor
and
inc
ffree
mov
cmc
dec
xchg
jae
scas
jns
xchg
pop
in
push
sbb
sub
or
shl
mov
xor
data16
fildll
xchg
adc
cmc
mov
push
aaa
mov
and
xor
int
push
inc
test
inc
mov
jae
call
jg
mov
pop
repz
mov
mov
xchg
out
add
std
dec
pusha
pop
repnz
or
or
adc
sub
push
mov
out
xchg
cmc
jbe
aam
imul
adc
mov
adc
mov
adc
jg
loope
lods
and
xlat
aaa
into
or
push
test
fcmovne
adc
or
pushf
bound
dec
add
popa
repz
adc
enter
add
xor
ds
fisubl
push
out
sub
xchg
outsl
dec
cmp
data16
jnp
clc
mov
ja
pop
jne
or
bound
or
mov
pushf
xor
sarl
dec
push
cmpsb
mov
mov
iret
movsb
lret
lret
jl
cmp
sbb
mov
movsl
scas
inc
sbb
xchg
cwtl
loopne
lds
fs
lea
jns
sbb
add
jp
aad
mov
test
pusha
add
pusha
call
fnstcw
jno
push
fsubr
mov
xchg
add
mov
adc
jbe
pop
gs
lea
add
inc
sar
lea
mov
add
fidivl
and
inc
loopne
mov
cmp
sub
leave
pop
fucomip
cmp
jge
sbb
xor
pop
adc
and
sbb
inc
xlat
xor
dec
mov
push
ret
les
dec
xchg
add
aam
aam
adcb
cmc
pop
mov
dec
xchg
xchg
lcall
dec
jmp
or
mov
out
jle
xchg
scas
enter
xchg
cmp
imul
push
add
mov
pushaw
pop
cwtl
add
xorb
push
pop
dec
add
add
cld
xchg
lods
inc
fists
test
add
xor
rcll
pop
dec
loop
lahf
out
sar
mov
ret
and
mov
lret
shld
fsubrp
add
sub
mov
cmc
pop
dec
fmuls
xchg
or
jne
aam
shlb
mov
dec
out
dec
pop
jae
push
push
jmp
out
push
in
out
test
add
pcmpeqb
inc
int3
lods
push
xor
bound
sub
and
fs
in
adc
dec
mov
jg
xchg
outsl
jno
xor
repz
inc
mov
js
xchg
jne
dec
clc
or
push
fsubs
cltd
mov
sahf
aas
push
mov
sbb
adc
pop
in
jle
rorl
jbe
push
inc
pop
jae
xchg
daa
popa
cwtl
xor
ret
pop
bnd
mov
in
sbb
mov
xlat
push
jno
push
dec
inc
stc
outsb
lret
sub
pop
xor
rolb
dec
aaa
ret
ficoml
or
pop
lock
sub
inc
sub
push
std
xchg
push
lods
inc
movsl
mov
push
sbb
movsb
cli
pop
hlt
sub
jnp
adc
bound
fsubs
imulb
mov
jae
mov
or
mov
cmpsb
jbe
addl
sahf
xor
repz
or
imul
repz
in
insb
dec
scas
xchg
jmp
mov
inc
xor
sti
inc
ret
inc
cli
cld
mov
xor
stc
subl
xchg
cmp
rol
mov
fisubl
fidivrs
scas
adc
fmuls
lods
pop
pop
pop
adc
xlat
xchg
jns
push
insb
js
clc
adc
pop
pop
addr16
lods
pop
enter
call
outsb
mov
lcall
jne
dec
dec
inc
stos
aam
jnp
mov
rcll
adc
ds
pop
xor
mov
and
or
lods
xor
outsl
ret
or
enter
fmuls
dec
fsubrs
xchg
dec
fmuls
push
cmp
add
cs
and
inc
push
cld
pop
movsl
and
aaa
repnz
out
data16
xchg
and
jge
das
addr16
test
mov
testl
mov
daa
inc
fiaddl
jne
insb
fwait
push
pop
mov
in
std
push
push
jecxz
jge
inc
fstpt
mov
lods
icebp
insb
sbb
mov
xchg
js
xor
mov
mov
xchg
and
adc
repnz
cmpsl
cmpsl
xchg
jecxz
inc
push
outsl
imul
inc
cmp
sub
mov
adc
incl
cmp
lods
or
push
xchg
mov
cmp
xchg
sub
add
out
push
sbb
out
aas
mov
xchg
sub
inc
stos
pop
cmp
cmc
inc
stos
add
sbb
sub
mov
movsl
cmpsl
insb
push
imul
push
cmp
sbb
in
pushf
push
cmp
push
jo
dec
scas
xchg
push
arpl
fcmovb
stos
out
mov
dec
dec
lods
pop
inc
sbb
fisubs
jbe
test
movl
sub
in
outsl
lods
scas
add
xorl
popf
leave
or
adc
ds
pop
popa
data16
mov
bound
cvtps2pd
jno
shrb
sbb
imul
imul
inc
iret
cmpsb
notb
rcrb
pop
dec
es
jns
insl
lahf
test
mov
pop
jp
mov
jnp
jg
adc
and
push
jg,pt
in
sbb
sbb
int
fcoml
add
mov
jg
xchg
dec
mov
mov
les
xchg
movsl
mov
mov
push
add
ds
mov
lods
stos
ret
inc
push
mov
rcl
imul
shrl
in
add
daa
outsb
lock
lret
lret
rcrl
shrb
shlb
cmc
mov
movzbw
jle
mov
insl
rclb
les
cmp
mov
fsts
sbb
add
repnz
add
or
sub
sub
mov
fwait
sbb
or
or
and
sti
push
ds
inc
mov
dec
xchg
mov
std
clc
xchg
scas
inc
stos
cmp
sti
cs
sub
adc
pop
push
mov
aad
pop
outsb
scas
shr
fisttps
push
jo
cmc
pop
ret
xor
movb
push
call
xor
ret
inc
pop
mov
out
lock
cltd
lcall
and
xorb
mov
cmp
xlat
pop
imul
gs
lahf
sbb
adc
mov
popa
icebp
outsb
pushf
pop
xor
cmp
jmp
addl
ret
fs
pop
out
test
jns
je
push
fwait
aad
mov
mov
jb
inc
scas
fs
and
jmp
daa
out
xlat
insb
inc
cmp
add
fstp
jb
pop
adc
cmpsb
mov
les
xor
mov
sub
ljmp
mov
daa
push
icebp
cmp
popf
hlt
leave
mov
pop
addr16
and
jecxz
add
sub
xchg
xor
inc
cltd
lret
daa
repz
rolb
imul
push
or
movsl
out
mov
and
or
test
lret
mov
push
loop
fisubrl
hlt
iret
lea
pop
rcll
jns
cltd
push
add
je
iret
mov
in
clc
push
lds
mov
mov
sub
fisubl
push
ljmp
dec
add
inc
fstpl
jb
xor
iret
ret
pushw
fprem
xor
jno
scas
sbb
push
fsub
ror
and
add
xor
push
std
push
decl
movsl
stos
mov
outsb
cs
lret
mov
xor
xor
inc
hlt
xor
sbb
sbb
dec
add
inc
adc
mov
jmp
pop
sub
mov
and
ret
add
and
int3
jg
push
lret
ss
sub
mov
das
test
outsb
idivl
stc
lods
aaa
ss
adc
dec
js
dec
mov
aas
repz
outsb
and
leave
fwait
inc
sbb
mov
dec
inc
rcr
hlt
bound
lret
repnz
xchg
test
je
push
hlt
das
xor
xor
pusha
push
sti
xchg
ficompl
sub
sub
fcmovnbe
divb
jb
pusha
sti
in
sbb
push
lods
push
std
mov
rclb
lods
cld
xchg
sub
test
fadds
adc
pop
das
imul
mov
js
sbb
xor
lret
sti
sarl
testl
lret
cs
popa
stos
fnstcw
mov
fwait
jle
bound
sarb
mov
out
in
xor
fnsave
stos
push
cmpsb
lahf
es
in
jecxz
ss
push
addr16
rcrb
jno
inc
xchg
mov
adc
insl
adc
insb
ljmp
xor
fucomp
arpl
sbb
or
inc
decl
in
mov
cmp
dec
sbb
pusha
aas
mov
mov
movsl
xchg
lock
aas
add
jo
mov
daa
sbb
es
jne
loopne
jmp
jl
jg
ror
lods
mov
scas
jg
lods
push
test
imul
inc
fsubs
inc
fnstenv
push
mov
jmp
aaa
cmc
mov
call
cmp
xchg
jg
jmp
and
sbb
fcoms
add
mov
out
add
jo
push
cmpsb
jmp
mov
jb
out
inc
int
fisubrs
sti
shrb
lods
stc
ss
adc
add
daa
inc
sbb
mov
or
push
sub
mov
test
pop
inc
lahf
fisubl
push
pop
push
sub
hlt
int
sub
ja
call
inc
frndint
fldcw
or
mov
pushf
push
and
int3
dec
movsl
cmp
fsubs
pushf
loopne
sub
pop
add
xor
test
cltd
fisubrs
add
mov
xchg
out
icebp
or
es
mov
je
sbb
rcr
mul
arpl
cltd
sbb
add
xchg
push
outsl
jno
pop
cmp
dec
fldcw
pop
mov
or
jmp
mov
pusha
jl
mov
xor
adc
mov
cmp
stc
sub
adc
jp
mov
pop
xor
lahf
push
mov
lret
dec
lret
rclw
jbe
daa
icebp
xchg
test
scas
push
and
lods
mov
add
pop
dec
mul
imul
push
push
fsubrs
add
jle
outsl
ja
adc
shlb
jo
pusha
mov
out
pop
sub
push
sub
push
mov
adc
lods
inc
and
lret
icebp
jp
jecxz
stc
jno
sbb
das
dec
ficoml
lea
test
inc
add
pop
das
push
jbe
mov
std
and
popa
cld
outsl
pop
mov
ret
and
in
or
adc
in
shlb
jecxz
lcall
repnz
inc
and
lock
push
cmpsl
cld
or
mov
pop
out
add
push
mov
bound
fidivl
fs
dec
iret
mov
cwtl
stos
xor
push
cwtl
mov
ja
test
add
pop
outsl
and
popf
add
lea
ret
hlt
dec
add
xchg
arpl
movsb
in
js
and
jp
and
xchg
aam
daa
push
fldl2t
and
mov
loope
insl
fwait
mov
cmp
les
in
dec
test
lds
or
mov
in
lods
adc
jg
cltd
std
test
jecxz
sti
mov
xor
sbb
sub
push
mov
jp
xchg
nop
lret
push
nop
lock
inc
orb
xchg
xchg
mov
addr16
push
orl
out
fbstp
push
je
and
inc
push
arpl
xorl
push
nop
int
dec
and
push
pusha
pop
jne
enter
push
in
sub
lret
or
mov
insb
lret
mov
in
xchg
sbb
push
jbe
inc
int
push
fs
cmp
push
cmp
mov
dec
sub
cmp
mov
pushf
jg
push
movsl
lds
test
mov
into
push
cltd
int3
in
and
sbb
cwtl
jmp
sub
xchg
jl
jne
mov
xchg
mov
xor
cltd
xor
xchg
sarb
lret
xlat
fnstsw
lret
enter
sbb
aam
popa
outsl
hlt
mov
es
out
jp
stos
cmp
push
sub
mov
sub
pop
mov
mov
inc
inc
push
mov
push
sbb
cmpsl
icebp
leave
and
adc
xchg
fildl
jg
lods
or
mov
fadd
int3
or
rcr
pop
sub
pop
or
lcall
mov
dec
and
adc
lods
inc
inc
dec
cs
sub
jae
lods
jo
sbb
dec
enter
dec
jmp
dec
push
mov
repz
bound
es
or
out
push
pop
repz
lods
cwtl
xor
adc
jo
imul
ret
mov
fstpl
stos
inc
aad
jl
sub
mov
or
into
or
xor
imul
xor
lods
jne
aaa
pop
adc
jmp
mov
mov
or
cmp
xchg
cmpsl
sysexit
mov
outsb
fbstp
mov
jno
inc
mov
lds
imulb
pop
cmp
mov
in
imul
pusha
adc
lods
push
sti
push
inc
je
pop
xchg
addr16
outsb
mov
mov
imul
cmp
or
das
ss
inc
lcall
test
jae
das
ret
and
cmp
cmp
hlt
pushf
dec
ljmp
lods
addr16
aas
scas
mov
addb
xor
push
out
or
inc
sbb
dec
lahf
test
dec
es
aam
lock
loopne
and
jg
les
insb
repnz
aas
insl
adc
js
stos
pop
aad
mov
pushf
scas
xlat
mov
cwtd
dec
stos
lret
adc
mov
pop
inc
decb
or
lcall
and
mov
jno
mov
arpl
cwtl
sti
mov
mov
mov
addb
test
orb
out
arpl
cmp
das
stos
dec
fcomps
lods
xor
sub
pushf
ret
outsl
mov
sbb
dec
fimuls
or
fnop
addr16
push
data16
pushf
sub
add
jge
ljmp
cmp
incl
rol
add
movsb
jecxz
pop
bound
sbb
std
sbb
and
jae
leave
stos
mov
add
push
jle
scas
scas
mov
ret
out
sbbl
sbb
or
and
cmp
dec
or
xchg
pop
mov
mov
cmpsl
dec
jmp
loopne
out
inc
add
mov
mov
lds
pop
jbe
lods
es
in
mov
xor
xchg
fmull
sti
subl
push
xor
stc
dec
mov
lret
out
sti
mov
and
pop
mov
cltd
push
ret
lcall
jg
lret
ret
fildll
push
outsl
pop
adc
mov
ja
pop
sarb
pop
rol
dec
adc
push
jmp
js
push
ret
pop
insb
stc
sbb
and
or
test
push
loope
loope
or
mov
test
ficoml
outsl
imul
into
repnz
inc
or
xchg
and
pusha
push
loop
add
call
outsl
cwtl
lret
inc
xlat
cld
mov
pop
jae
ffree
pop
sub
mul
stc
rcr
fidivs
mov
in
stc
je
movsl
out
and
dec
dec
cvtpi2ps
fcoms
cmp
stos
push
jb
cld
lods
mov
js
and
sbb
cwtl
cmpsl
nop
stc
movsl
fwait
xor
pop
push
mov
sub
and
jne
cli
push
and
mov
jbe
xor
rorl
adc
std
push
fwait
and
int3
push
jle
push
sub
xchg
sub
ficomps
mov
inc
add
in
repz
out
leave
out
or
lods
jle
ficoms
inc
or
jne
xor
dec
andb
inc
fs
and
sbb
andb
outsb
xlat
ss
out
insb
xchg
jle
fldenv
mov
and
int3
mov
fsubrl
loope
mov
shll
jo
dec
mov
std
pop
and
sbb
leave
scas
std
sub
jbe,pn
pop
cmp
dec
dec
out
repnz
push
pusha
stos
add
jb
clc
pop
sbb
dec
dec
pop
arpl
push
sarb
ret
pusha
mov
inc
out
stos
repz
ja
lea
stc
aad
insb
pusha
negl
jecxz
push
ljmp
movsb
jl
cmpsl
mov
popf
das
shr
mov
orb
cmp
test
pop
loopne
sbbl
or
push
in
out
cmp
mov
mov
call
xor
dec
fcomip
pop
inc
fldl
mov
cmp
out
sbb
cmp
add
call
movzbl
cmp
pop
imul
mov
insb
movsb
jno
ss
sbb
aam
push
movl
lcall
sbb
mov
aad
ret
inc
push
pusha
push
sahf
mov
xor
sar
mov
cmpsl
incl
mov
xor
mov
push
test
stos
xchg
addr16
fstpt
out
out
fdivs
cmp
fs
pop
testl
inc
shlb
jp
add
jbe
imul
mov
lds
xor
mov
push
test
sbb
dec
mov
fdivl
lret
aas
dec
stc
cmp
test
sbb
fwait
push
cmp
jge
add
or
cmp
or
cs
inc
ret
repz
xor
fnsave
and
jne
lds
repz
call
sbb
mov
in
orl
jmp
mov
addr16
pop
andb
mov
adc
xchg
xor
pop
out
and
xchg
popf
bound
xchg
mov
fnsave
xchg
jle
rolb
push
xchg
insb
mov
mov
jnp
mov
sub
mov
lahf
push
fidivl
scas
pop
push
int3
ret
hlt
in
adc
and
cs
ljmp
out
mov
movsb
out
pop
cmc
jl
pushf
sub
subl
shrb
sbb
push
scas
xor
ret
jl
jmp
shr
pop
mov
and
in
xchg
loopne
outsl
push
mov
cmp
jns
clc
lock
pop
icebp
and
mov
popl
dec
loope
cmpsl
xor
adc
leave
loope
and
xchg
sbb
movsl
mov
js
std
push
jmp
flds
or
divl
xchg
clc
mov
adc
push
adc
addb
sbb
sub
das
leave
mov
fstl
shll
mov
mov
cmpsl
mov
das
in
popa
jbe
and
nop
leave
shrb
pop
hlt
mov
ds
cwtl
mov
wbinvd
pop
mov
adc
dec
inc
cs
and
dec
cmpsb
data16
int3
xchg
mov
or
jne
or
loop
inc
pop
cmp
pop
push
cmpsl
or
idivl
sbb
mov
jno
imul
and
mov
decb
insl
inc
les
xor
nop
sbb
addb
inc
pushf
sbbb
jecxz
xchg
cmp
pop
sbb
pop
out
test
pop
in
fsubrs
xor
mov
push
xchg
cli
sub
scas
mov
sbb
imulb
sahf
xor
pop
jns
sbb
adc
fstpt
mov
nop
jmp
sbb
repz
loope
push
mulb
outsl
push
rcl
outsb
inc
js
subl
or
sti
push
pushf
aad
fmull
ja
push
std
cmp
cltd
cmpb
pop
notb
ss
add
pop
lods
jnp
cltd
push
xor
jecxz
out
out
ficoml
jns
push
out
int3
add
and
push
test
stc
lahf
mov
ret
jnp
pop
and
nop
inc
push
or
out
and
xor
lods
inc
fists
inc
cmp
dec
ret
pop
movsl
push
pop
lds
cmc
jns
fidivrs
mov
mov
and
jecxz
pop
or
mov
mov
int3
mov
and
sar
or
data16
loope
xor
jmp
mov
jl
lock
push
xchg
and
sub
add
cli
adc
ljmp
push
mov
sub
cmp
mov
insl
insl
test
addr16
insb
sub
add
in
dec
pop
pushf
in
jmp
mov
arpl
mov
ljmp
push
rclb
pop
push
cwtl
or
icebp
pop
and
adcb
jnp
and
outsl
xorb
cmp
push
jae
jle
jo
xchg
mov
imul
push
gs
in
jge
push
fimull
out
dec
pop
and
jge
lds
mov
adcl
mov
sahf
mov
mov
pop
pop
xlat
mov
imul
xchg
push
adc
out
out
jp
repnz
mov
cmp
outsb
mov
pop
dec
and
xor
shll
jno
out
gs
mov
mov
or
mov
sub
push
or
push
lods
test
incl
xchg
jp
data16
arpl
xor
xor
mov
insb
out
outsl
fsubrs
push
call
lcall
aaa
lea
test
cmc
mov
daa
or
adc
push
test
and
cld
outsl
push
jle
sbb
xchg
sbb
mov
adc
mov
dec
pop
mov
popf
aad
fucomi
mov
imul
mov
shl
shlb
mov
int3
push
push
pop
dec
mov
push
xor
lret
mov
pop
or
shrb
adc
icebp
xchg
int3
mov
mov
cli
xchg
or
sahf
std
sub
adc
xor
mov
aas
outsb
fdivs
sbb
pop
inc
in
fcmovnu
sub
lods
mov
mov
rep
ds
cmp
mov
out
mov
cmp
push
popf
inc
cwtl
cld
or
push
jmp
inc
add
divb
int3
dec
dec
push
cld
sub
sbb
lods
js
and
je
pop
pushf
sbb
sahf
lcall
pop
mov
ja
mov
dec
mov
ss
sub
pop
scas
out
add
xchg
mov
jg
sub
jns
sarl
adc
mov
cmp
inc
jg
inc
pop
and
and
cwtl
imul
sbb
adc
adc
sbb
rcl
sub
cmp
sub
xchg
bound
lds
insb
mov
xor
dec
addr16
js
insl
jb
outsl
int3
mov
in
xchg
int3
xor
ficompl
mov
hlt
ret
stos
iret
daa
mov
dec
loope
hlt
idivb
pop
push
inc
push
loope
ja
mov
jbe
jbe
nop
imul
int
mov
jae
stos
sahf
sub
fcoml
jg
pop
xor
jmp
mov
jo
lret
fildll
popf
pop
rorb
pop
addr16
aad
imul
jne
rorb
xchg
ret
lret
es
pop
stos
or
ds
xor
loopne
inc
mov
sub
fistpl
repz
dec
and
ret
inc
pop
in
push
aam
rol
lret
cmp
dec
dec
cmp
shrb
rol
icebp
outsb
sub
mov
push
xor
popa
in
in
push
icebp
orb
add
xor
add
jecxz
adc
dec
imul
xchg
push
cli
repnz
icebp
addr16
mov
mov
inc
leave
pushf
cli
testb
cmpl
leave
ss
adc
sbb
push
clc
pop
enter
arpl
sbb
mov
in
addr16
mov
add
cmpsb
dec
pop
fmuls
xchg
sub
pusha
cmpsl
aas
rcr
mov
push
sub
scas
test
push
into
loop
inc
out
cld
add
mov
js
sub
lods
xor
daa
ss
aad
jmp
in
mov
cmp
fadd
fmull
and
fmull
jp
mov
aam
fisttpll
mov
aaa
and
sarl
or
dec
loop
cmp
fldt
dec
bound
aad
sub
shrl
cmp
aaa
sub
jp
leave
xchg
mov
sbb
pop
inc
daa
test
cmp
jns
or
pop
cmc
mov
dec
jl
negb
mov
xlat
ds
jno
xchg
ficoms
clc
popl
dec
in
inc
out
sbb
insb
sub
sbb
xlat
shl
call
dec
insb
outsl
rclb
ret
int
jge
cld
mov
adcb
mov
xchg
cmc
push
fdivl
mov
push
es
jne
int3
add
adc
seta
pop
fwait
lods
gs
xor
test
inc
mov
mov
fdivs
movsl
lds
sub
out
shld
ljmp
xor
add
fisubrl
or
fdivs
or
push
sub
dec
mov
or
test
popf
xor
mov
rol
cmp
aas
xchg
adc
inc
mov
imul
scas
pop
movsb
ds
es
shll
adcl
add
subl
mov
sbb
inc
xlat
add
jecxz
and
adc
jecxz
scas
in
loope
or
inc
pop
inc
mov
lds
stos
iret
in
mov
lahf
ss
mov
ss
fs
and
jge
ljmp
sub
jne
mov
aam
or
out
subl
and
in
test
lret
cmp
mov
das
mov
push
push
jge
popf
jg
mov
fidivs
jl
xchg
sbb
inc
lcall
push
imul
mov
rol
mov
div
jnp
mov
jns
int
add
mov
int
les
das
mov
add
test
dec
int
jns
cvtps2pi
mov
jae
mov
pop
shrl
fistpl
andb
call
aam
jo
mov
add
mov
pop
push
jmp
aam
jmp
jmp
dec
inc
fwait
hlt
xchg
lret
es
cmc
inc
xor
test
mov
pop
push
loope
imul
repz
xchg
out
cld
jb
sub
cmp
ds
nop
mov
loop
loop
adc
push
das
sub
mov
mov
idivb
outsb
leave
fidivs
mov
cld
stos
adc
cwtl
lock
or
inc
in
push
ljmp
jno
out
int3
fbstp
dec
dec
ds
rorl
cs
mov
mov
xlat
sub
movsb
mov
fmuls
rorl
stos
shr
fisubs
xor
out
cmc
add
rorb
sbb
push
xchg
fwait
push
xchg
mov
rcrl
shll
and
push
xor
aaa
cmp
into
enter
rcrl
daa
cmp
enter
ss
pop
push
xchg
jp
sti
cmp
xor
ror
fstpt
mov
mov
mov
pushf
addr16
mov
and
sbb
push
test
fcomp
inc
dec
dec
das
mov
pop
sarl
xchg
jno
out
inc
jns
sbb
dec
sub
sbb
jno
popf
xchg
int3
xor
ficompl
add
in
add
sbb
cmpsl
jecxz
mov
stos
es
cltd
mov
and
shlb
pop
dec
scas
mov
mov
bound
je
pop
jg
xor
clc
mov
or
fsubrl
loopne
cmp
lds
pop
adcb
jae
jmp
inc
sub
andb
jle
or
data16
call
mov
ljmp
les
jae
imul
insb
mov
pusha
sbb
or
bound
jle
lahf
pop
js
daa
repnz
lahf
mov
dec
in
jmp
stos
pop
dec
adc
adc
jbe
pushf
xchg
or
push
out
adc
adc
ret
andb
stc
insl
testb
sbb
mov
les
sbb
pop
jle
fsubl
xor
aaa
cli
clc
shrl
push
jp
ret
gs
jecxz
mov
pop
jne
jle
addr16
pop
pop
jae
cmp
mov
lahf
pop
sti
lock
jae
adc
mov
push
or
mov
xchg
mov
or
iret
pop
adc
cmp
sub
popf
mov
xlat
sbb
push
insl
xor
sarl
push
mov
or
cmp
push
pop
xor
dec
in
lret
ss
out
imul
pop
add
inc
cmpsl
popf
pop
xchg
jg
mov
sub
pop
imul
sub
push
mov
mov
test
jg
leave
pop
mov
and
cmp
loop
jbe
pop
lock
mov
mov
cmp
pop
sbbb
rclb
mov
ficoml
test
jg
mov
out
stos
rcrb
ss
leave
cmp
jnp
popa
outsl
add
pop
mov
inc
fistps
xor
cmpsl
push
data16
add
inc
cmp
mov
cli
add
aaa
mov
or
mov
icebp
push
call
push
pop
insl
dec
jg
inc
insl
cwtl
mov
and
jnp
xchg
sbb
pop
sub
in
scas
cmp
mov
insb
push
mov
repz
mov
push
mov
or
inc
pop
notl
lcall
xor
aaa
push
insl
gs
sbb
adc
and
or
push
rorl
adc
bound
dec
cmp
das
fnstcw
mov
jo
jl
or
add
scas
call
outsb
stc
scas
icebp
clc
push
adc
add
pop
dec
jns
mov
jb
ljmp
clc
aas
in
in
push
mov
and
imul
pop
jle
cmp
mov
cmpsl
movsb
adc
pop
dec
cmp
jg
je
das
inc
out
push
inc
in
xchg
sub
lds
sbb
es
cwtl
mov
hlt
dec
pop
mov
shl
fbstp
mov
imul
popl
outsb
addl
loop
pop
push
push
jb
repnz
xchg
pop
jmp
sbb
and
sbb
jo
outsl
push
in
pusha
inc
jg
dec
in
std
sarl
mov
mov
stc
xchg
dec
iret
jb
push
lods
cs
or
mov
xchg
xor
ret
rcrl
lret
data16
jp
stos
xchg
add
add
sarb
std
mov
or
rclb
scas
sub
popa
push
test
jmp
jmp
iret
sbb
dec
rorb
out
adc
jle
push
outsb
add
icebp
jae
sbb
test
xchg
fistpll
sbb
add
mov
pop
mov
dec
aam
ds
or
int
test
lods
mov
and
mov
fisubs
dec
pop
mov
mov
xor
stos
in
cld
stc
mov
andb
push
mov
push
cmc
sti
dec
and
cmp
push
pop
fistps
stc
lahf
lcall
adc
scas
mov
fdivrp
outsl
loop
js
cmp
stos
shr
mov
mov
daa
hlt
pop
push
inc
adc
out
mov
inc
sbb
lods
jne
or
scas
mov
repz
cmp
les
jb
or
hlt
daa
stos
lds
cs
arpl
les
push
rcr
out
and
daa
ret
xchg
repz
mov
ljmp
adc
push
pop
cltd
mov
jecxz
mov
inc
pop
jmp
mov
jno
push
dec
cmp
mov
in
data16
fldl
imull
mov
adc
mov
push
rol
std
subl
and
cwtl
aad
pusha
mov
ds
pop
iret
addb
sub
and
out
movsl
jmp
aaa
loop
pop
pop
inc
hlt
xchg
push
add
clc
sub
nop
sbb
hlt
cwtl
loop
sub
or
xor
std
mov
popa
xchg
pop
mov
pop
mov
jge
jecxz
lock
js
int
add
push
inc
sub
fsubrp
push
aaa
repz
in
inc
xchg
cli
enter
dec
jmp
test
icebp
iret
loop
sbb
dec
jbe
pop
pop
jg
xchg
sbb
cmp
mov
fidivrl
imul
jmp
or
decl
mov
and
fistps
fs
mov
sub
pop
jp
ljmp
and
lcall
mov
mov
pop
aad
aaa
push
mov
dec
sub
stc
in
xor
xchg
push
lods
dec
cmp
aaa
lock
mov
in
pop
daa
add
mov
xor
push
push
ret
cmp
data16
loopne
xor
in
idivl
nop
gs
ret
fisttps
dec
sub
dec
loop
je
inc
out
cmc
sbb
add
aam
aam
loop
inc
push
add
sub
popf
jge
mov
sbb
stos
int3
pop
adc
test
pop
and
push
jp
cmpsl
ret
push
and
or
outsl
mov
fsubrl
mov
fwait
imul
inc
push
movsb
or
sub
int3
pop
xchg
hlt
inc
mov
cmc
rcrl
sub
les
sbbl
pop
clc
fcmovu
loope
fcomi
sub
sub
sarl
daa
mov
iret
xchg
inc
pop
ret
out
cs
fcomps
ja
mov
int3
lds
or
add
push
cmpsb
incl
rorb
fadds
jns
movsl
mov
add
xchg
ja
jae
cmc
dec
in
mov
test
xchg
inc
dec
xor
fnsave
push
out
outsl
adc
cmp
outsl
jmp
sub
push
mov
or
adc
loopne
push
ret
add
adc
fildl
sbb
lret
inc
and
xor
adc
xchg
mov
adc
into
aad
mov
pop
in
int
ds
pusha
dec
cmp
xchg
sub
push
mov
fs
cs
stos
std
adc
pusha
and
outsl
jl
xor
jge
xor
inc
out
test
sti
scas
call
mov
test
add
cmp
mov
sbb
dec
jnp
cmp
in
std
nop
jno
ss
ret
fcoms
or
jge
cltd
rcr
mov
mov
imul
filds
cld
xchg
mov
xchg
insb
mov
cmp
mov
sbb
std
in
test
jae
mov
xlat
aad
push
pop
adc
stos
mov
jl
xor
mov
pop
xchg
sub
xchg
sub
and
out
and
lret
inc
mov
xchg
fsub
outsb
adc
sub
clc
rcrl
or
test
and
cmpsb
jp
adc
dec
loopne
in
and
lret
pushf
jl
xchg
or
xor
dec
push
mov
dec
pop
cmp
scas
ds
xchg
je
sbb
divl
mov
ss
jne
xor
mov
add
jbe
inc
mov
pop
loopne
shrl
adc
sti
lahf
push
icebp
aad
or
xchg
iret
push
jbe
mov
aaa
scas
in
in
test
enter
imul
mov
jnp
cmc
mov
out
subb
cmp
rorb
cmp
inc
lods
cmp
add
mov
xlat
mov
in
cmp
xchg
add
xor
mov
pop
inc
pusha
orl
gs
add
je
mov
stos
push
call
and
incb
add
test
jmp
stos
in
push
pop
inc
or
testl
xchg
mov
shrl
ljmp
xchg
cmp
pop
adc
sbb
xchg
in
mov
stos
add
ljmp
movsl
and
jmp
loopne
pop
inc
mov
clc
or
inc
test
in
mov
mov
pop
mov
mov
add
int3
mov
cwtl
fs
mov
cmpl
mov
leave
mov
mov
inc
or
xchg
and
into
outsb
sbb
test
mov
sbb
je
xchg
dec
lcall
cmc
int3
js
rcrb
push
jl
or
es
lcall
mov
jmp
fwait
sti
lret
or
inc
push
mov
xor
test
pop
fiaddl
mov
and
jnp
in
fldenv
mov
addr16
incl
test
jp
fnstcw
in
fwait
push
dec
xchg
sub
xor
add
xor
jge
sbb
jae
hlt
sbb
push
xchg
jo
leave
jno
adc
adc
mov
cs
adc
lcall
cmp
aad
fdivl
jnp
and
push
cli
fiaddl
mov
inc
sbb
inc
bound
mov
movsl
popa
push
mov
xchg
xchg
mov
imul
pop
jne
ljmp
and
mov
scas
adc
adc
add
fdivl
fildll
inc
sub
cwtl
xor
int3
mov
lret
jecxz
bound
lcall
cmpsb
and
clc
xlat
mov
cmp
or
inc
mov
mull
add
scas
fstpl
mov
push
loopne
aam
dec
and
repnz
lock
inc
ds
lahf
test
lods
and
xchg
daa
fwait
push
add
mov
lods
cmp
adc
arpl
sbb
ja
pop
pop
pop
lds
xchg
and
or
ret
cmp
jle
nop
das
mov
cmp
push
adc
popf
jne
inc
std
ja
test
and
iret
dec
lret
push
repz
enter
stc
popf
jno
sub
jnp
inc
lods
movsb
cmpb
rcr
mov
lret
movsb
cmp
and
imull
addr16
bound
cmp
pop
adc
mov
dec
arpl
jb
mov
test
pop
mov
nop
loope
mov
dec
sub
ja
mov
fwait
in
inc
jmp
cli
sbb
and
mov
pop
add
fistps
hlt
in
xor
push
addps
cltd
xchg
mov
push
out
dec
repz
in
ja
fmuls
std
pop
into
mov
out
xor
fldl
iret
pop
sub
pop
imul
mov
sbb
fcmovnb
adc
in
int
stos
inc
popl
dec
mov
shl
jo
jb
test
test
lock
push
loopne
and
mov
stc
xchg
ja
mov
test
in
mov
push
push
push
call
mov
mov
out
push
xor
dec
mov
adc
sub
jne
sbb
xchg
jb
inc
mov
push
int3
ss
daa
in
shl
push
push
cmp
jl
stos
in
add
sub
dec
fsubr
xor
push
je
testb
xchg
push
xor
out
fimuls
xchg
stos
push
gs
and
xchg
jle
mov
cmp
mov
or
mov
mov
std
or
mov
shll
out
xor
lds
mov
cwtl
dec
les
jg
movsl
loope
sub
xchg
dec
pusha
xchg
adc
call
or
or
push
or
or
outsl
call
xor
ds
aaa
add
es
lods
inc
mov
je
dec
add
adc
push
imul
imul
shll
movsb
les
pop
pop
out
call
add
gs
pop
dec
bound
ret
jle
push
sub
inc
stos
pop
cwtl
mov
pusha
dec
xchg
mov
lahf
or
lock
sahf
and
mov
xor
cld
jl
cmpsb
les
pop
jne
jl
jo
rcrl
push
in
aaa
fimull
and
xchg
in
mov
adc
dec
pop
push
arpl
cwtl
ljmp
js
jg
insb
mov
xor
cmpsl
es
andl
push
mov
xchg
adc
push
ds
mov
cmpl
call
push
mov
scas
popl
dec
cmpsl
mov
jp
xorl
pop
dec
jge
pushf
fs
cltd
xchg
sbb
dec
mov
pop
movsl
mov
adc
stos
push
jb
jno
ljmp
fnsave
call
enter
xlat
inc
loopne
mov
jnp
dec
cmpsb
jae
inc
negl
adc
rcll
in
pop
xor
dec
mov
jnp
rcll
xor
cs
pop
fdivl
in
lods
push
push
mov
outsb
add
scas
xlat
or
mov
fcmovne
pop
mov
aaa
mov
dec
cmpsb
shl
out
push
shrl
and
pop
stos
xchg
xlat
adc
mov
pop
iret
adc
jae
push
cli
ret
or
cs
xlat
enter
clc
subl
mov
fwait
aam
pop
inc
loop
cs
fiaddl
popf
hlt
mov
pop
fwait
mov
mov
cltd
xor
sub
mov
dec
dec
bound
shl
mov
sbb
div
pop
mov
and
cmpsb
ret
rol
push
test
cmp
lods
test
les
push
outsb
pop
xor
dec
mov
pop
arpl
fs
jne
sub
mov
lcall
jbe
test
fnsave
mov
fidivrl
inc
and
iret
hlt
outsb
sub
or
jecxz
push
inc
cld
gs
aad
scas
jae
sahf
pushf
mov
dec
in
popf
cmpsl
mov
cwtl
les
sub
xor
jmp
out
je
cmpsb
dec
fiaddl
lds
push
hlt
frstor
mov
xchg
push
mov
rcrb
fstps
loop
jne
es
cltd
out
xor
push
popa
je
mov
loopw
out
outsb
popa
js
or
or
cld
cmp
enter
jno
dec
shll
insl
out
aaa
addr16
clc
mov
shrl
sbb
jnp
sbb
fadds
dec
out
mov
push
pop
ret
inc
push
cld
sub
pop
loope
jmp
mov
in
and
int3
pop
mov
fdivrs
push
dec
add
mov
mov
les
mov
jge
pop
je
push
push
fistpl
mov
cmpsl
out
adc
pop
xor
scas
in
inc
push
loope
mov
mov
jecxz
and
jle
dec
pop
test
xchg
lods
sbb
cmp
mov
sbb
je
add
mov
xchg
popf
ret
rcrb
add
shll
pop
popl
out
das
aad
shll
movnti
int
int
loope
clc
pop
add
cmp
cli
cmp
rcrb
push
loopne
sbb
and
mov
cmpsb
loope
push
fwait
pop
int
outsb
add
fcoms
lea
int3
dec
cmp
scas
mov
sub
loope
jecxz
movl
and
pop
movsl
xchg
mov
push
cmp
addr16
fldenv
mov
push
jp
fsubl
out
je
sub
ss
xchg
into
pop
popf
mov
xchg
or
sarl
mov
sbb
into
mov
loope
lods
mov
mov
icebp
push
popf
insb
jge
in
lea
mov
enter
jp
pop
out
lahf
ss
and
cmp
nop
pop
push
popa
add
jbe
sbb
jne
and
stos
pusha
ds
push
scas
add
call
addl
add
out
cmp
mov
push
arpl
aaa
mov
ret
jle
cmc
add
ds
mov
fadds
loope
push
push
pop
imul
call
outsl
mov
fsubrl
mov
xorb
mov
cs
xchg
out
jne
andl
adc
sbb
hlt
adc
notb
cmpl
rolb
dec
ss
into
arpl
jns
or
fs
out
jae
cld
push
test
test
ficomps
fdivl
popl
mov
adc
push
fidivl
push
mov
insb
dec
add
inc
mov
push
imul
int
cmc
cmpsb
test
pop
sub
pushf
jg
stc
pop
out
lock
and
idivl
das
loopne
adc
mov
cmp
dec
in
sbb
pop
cltd
inc
fstp
je
cmpsl
dec
mov
mov
insb
xchg
cld
js
cs
js
cmp
stc
pushf
ret
cmpsl
push
pop
cmpsb
xchg
test
add
push
insb
mov
movsl
fs
cld
xchg
cwtl
test
jne
sub
insl
out
sub
shrl
lock
arpl
test
inc
mov
pop
shlb
xchg
dec
pop
push
lcall
and
pushf
arpl
sti
mov
jecxz
pushf
notl
stc
je
mov
in
mov
pushl
pop
inc
inc
xchg
test
sbb
dec
sti
fs
lahf
arpl
xor
inc
test
mov
mov
idivb
lcall
xor
mov
mov
sbb
push
pushf
jl
test
xchg
lcall
xor
cmpsb
inc
cwtl
sbb
sub
scas
fwait
dec
rolb
mov
adc
adc
cltd
rcr
into
call
mov
outsl
xor
jmp
mov
xor
or
jecxz
mov
xchg
sbb
mov
fildl
mov
jbe
cmp
cmp
cli
push
rdmsr
mov
and
xchg
lahf
push
sarb
or
and
push
jne
xchg
sahf
xor
and
sub
shlb
pop
out
cli
push
sti
arpl
insl
test
ds
dec
mov
test
pop
in
aam
cli
fcompl
or
imul
sahf
mov
mov
mov
cmp
adc
stos
ja
insb
push
jno
cld
jno
xchg
and
and
jecxz
rorb
or
or
jge
enter
pop
mov
add
mov
sbb
cmp
mov
cmc
lcall
call
cmp
sbb
xlat
jbe
cltd
fsubrl
insb
std
jo
mov
out
test
andb
sub
jnp
enter
mov
jbe
inc
lahf
sbbl
cltd
pusha
cwtl
sbb
cmp
sahf
pop
xor
pushf
addr16
pop
int3
out
ror
sbb
push
int3
sarb
pop
fists
jg
divb
out
or
and
rorl
out
inc
addl
sbb
sub
push
pop
ja
addr16
out
and
lret
push
push
test
add
cmpsl
mov
dec
inc
aad
ds
repz
push
dec
pop
sub
aas
and
and
xchg
pop
mov
daa
cld
shll
push
xor
mov
sub
popa
int
dec
jno
lahf
dec
pop
mov
mov
add
or
mov
xchg
push
rclb
test
ss
xchg
scas
dec
shrb
jne
cmpsb
das
and
push
cmp
cmp
inc
lock
adc
xor
xchg
repz
inc
hlt
lods
pop
nop
xchg
cmp
repz
push
sub
mov
sbb
xor
mov
jl
pop
sbb
sti
out
mov
repnz
into
xorb
outsb
aad
mov
sbb
xchg
nop
ret
ljmp
jns
xor
push
or
sbb
mov
icebp
out
inc
or
clc
jbe
addl
xor
xorl
gs
cmp
out
cmpsb
mov
mov
xchg
insb
js
outsb
jl
iret
mov
negl
mov
enter
loop
and
xchg
dec
xor
adc
mov
fsubrs
bound
sbb
inc
scas
dec
mov
dec
xchg
and
jmp
push
lea
xchg
pop
ficoms
mov
or
leave
xchg
push
or
fs
mov
addl
fmull
push
aad
iret
mov
inc
icebp
sbb
jl
mov
jae
insl
movsl
sti
sub
int
jl
loopne
cmpsb
lock
subl
js
das
test
mov
mov
arpl
sub
mov
jge
pushf
fwait
push
or
push
mov
cltd
push
sub
mulb
jg,pn
mov
cmp
jmp
xor
test
jg
push
fisttps
add
xchg
sub
out
mulb
out
in
and
mov
dec
and
xchg
mov
and
mov
test
sbb
cmp
subb
xchg
xlat
mov
out
cld
fsubrs
test
ret
xchg
inc
cmp
iret
cmpsb
cld
push
int
xchg
es
pusha
sub
lock
and
fcoms
add
ja
xchg
jmp
xlat
outsb
repz
xchg
pop
push
mov
xchg
xlat
cwtl
orl
cs
loop
stos
fbstp
push
xchg
push
shr
addb
pop
out
cmp
xor
test
jne
ja
fisubrl
mov
mov
mov
push
or
jbe
dec
cwtl
call
and
fdivl
dec
pop
insb
xchg
or
call
mov
inc
in
clc
dec
cmp
test
icebp
int3
and
add
sub
mov
xchg
xor
sbb
js
mov
adc
add
xor
filds
push
adc
aaa
dec
gs
inc
xlat
out
mov
ficomps
adc
and
cmp
xchg
jns
mov
sub
addr16
mov
xor
cwtl
cld
inc
rcll
sub
sbb
in
mov
fldt
ret
sahf
divl
imul
jp
sarl
sti
inc
icebp
pop
mov
lahf
or
xchg
and
clc
arpl
mov
xor
mov
test
movsl
jg
stc
cmpsl
andb
sub
and
lds
jp
xchg
scas
jg
incb
jl
cmc
mov
ljmp
xchg
out
fs
out
push
adc
shl
int3
rorb
xchg
jle
out
xor
fldl
cmp
in
xchg
cmp
imul
out
push
mov
popa
ss
fwait
jbe
xchg
cmp
aam
enter
mov
scas
mov
mov
jmp
lcall
and
push
push
popf
adcl
push
mov
add
cmpsb
arpl
dec
or
jl
incb
cmp
decb
mov
or
cmp
movsl
push
aas
jp
out
jne
js
std
loopne
es
push
sbb
icebp
jb
jo
test
jns
push
fs
inc
cmp
sbb
jmp
lahf
out
sbb
mov
fsts
sbbl
ret
gs
adcb
push
ds
push
popf
stc
fdivl
sub
cmp
xor
mov
rol
test
iret
push
repnz
ret
or
push
inc
cmpsl
idivl
jns
out
hlt
dec
and
jg
push
push
add
inc
shlb
ds
imul
push
icebp
or
xor
or
fdivrl
lgdtl
inc
xor
mov
lret
test
mov
divl
xchg
aaa
sub
scas
push
jo
mov
mov
movsl
sbb
dec
ds
and
cmc
or
xchg
xchg
das
add
jne
sbb
sti
imul
add
push
dec
loope
or
arpl
call
loope
rorl
mov
daa
mov
pop
xchg
or
movsb
aad
jge
test
or
add
or
sub
jnp
loope
hlt
mov
mov
sub
dec
lcall
mov
ror
mov
ljmp
rcll
push
in
dec
or
testl
sti
inc
mov
push
xchg
out
jmp
sub
fs
pop
aaa
pop
popa
fnsave
inc
test
push
popa
in
rol
jmp
mov
jg
ljmp
mov
lods
add
mov
daa
lea
add
shll
jmp
idivl
pusha
rol
cmpsb
cwtl
hlt
lretw
call
call
int3
pop
aas
data16
lcall
or
dec
and
push
insb
add
lods
pop
adc
lds
push
lods
es
pop
lods
push
pop
mov
inc
into
sbbl
adc
and
loope
jle
in
push
sub
dec
cld
popf
imul
out
pushf
sbb
push
stc
stos
jo
ss
frstor
xor
cmp
lock
pop
pop
fisttps
mov
push
repz
xor
xlat
repz
fsubl
sub
lods
fcomps
inc
sbb
aaa
stos
cmp
pop
cltd
js
inc
fdivr
cld
adc
jbe
test
bound
pusha
sbb
insb
mov
push
daa
data16
inc
push
das
xor
shlb
xor
sub
adc
sbb
sti
int3
aam
jecxz
sbbl
xchg
push
mov
or
js
popa
imul
lret
push
test
cwtl
daa
or
jmp
out
push
or
imul
xchg
ja
pop
popf
mov
xlat
jmp
js
xchg
outsb
iret
les
jle
repnz
mov
dec
ja
std
in
cmc
mov
sbb
mov
lretw
in
xchg
dec
pop
mov
mov
inc
call
or
cs
pop
out
mov
and
in
mov
dec
pop
adc
ret
movsl
cmp
xor
movsl
in
xchg
ret
pop
or
xchg
push
jns
dec
loop
and
lock
out
arpl
sub
adc
or
rcrb
push
sub
inc
test
clc
sub
icebp
mov
mov
int3
fdivrs
push
sahf
push
cmp
sahf
scas
mov
jmp
loop
jo
std
mov
repnz
js
stos
insl
orb
pop
repz
js
std
mov
ret
je
dec
out
xchg
subb
cmp
int
mov
int
push
inc
pop
ds
shl
sub
or
test
push
inc
out
gs
and
ljmp
mov
lds
test
mov
sbb
stc
mov
inc
in
sbb
xchg
stos
iret
cmp
shl
jl
and
jae
lods
fwait
add
call
popf
pop
les
pusha
idivl
daa
sbb
sbb
cmc
in
mov
cwtl
jne
clc
leave
push
sub
lea
jno
imul
sbb
stos
push
jl
xlat
and
aas
xchg
dec
cmc
add
xor
dec
and
adcb
adc
arpl
mov
mov
into
push
adc
outsb
mov
int3
mov
divb
jmp
loop
cwtl
mov
adcb
scas
cmp
in
das
mov
das
adc
and
mov
cmp
movsl
scas
mov
jl
aas
roll
fistpl
push
test
mulb
pop
iret
pop
jecxz
cmp
pop
movsl
lods
mov
into
push
dec
ja
push
popa
popa
ret
pop
xor
cmpsb
leave
adc
or
pop
sbb
fmull
and
lock
push
sbb
cmc
add
lock
inc
movsl
shlb
popa
jmp
insb
sub
inc
mov
std
sbb
cmpxchg
mov
pop
movl
or
jo
and
jp
push
leave
adc
ss
jb
addps
aam
repnz
inc
xlat
test
xor
ss
push
or
adc
sahf
or
jle
cli
scas
cs
in
scas
jno
fldenv
sub
jno
pop
jno
insb
stc
cld
or
push
xor
cmp
and
scas
dec
clc
imul
push
cwtl
pop
adc
negl
lret
cmp
mov
mov
cmp
push
nopl
shl
adc
sbb
cmp
ret
mov
xor
rcl
push
clc
lods
sub
fldl
mov
decb
aam
inc
in
scas
jp
sub
imul
jns
jecxz
sub
xchg
pop
faddl
mov
inc
ficoms
faddl
add
shrb
fdivrl
gs
pop
inc
aad
gs
cli
inc
cmp
sbb
aad
fldl
or
inc
xchg
gs
cmp
enter
popf
push
cld
and
scas
and
stos
inc
rcrl
pop
and
mov
sahf
push
or
popf
lea
sbb
sahf
jg
ret
jge
sarl
popf
clc
sbb
sub
call
in
push
and
dec
pushf
mov
pusha
mov
dec
cld
cmp
adc
push
les
jmp
push
sub
test
jbe
int3
mov
lcall
push
push
cld
xchg
jne
les
mov
push
cmp
cmp
sbb
jecxz
cmp
fistps
cmp
arpl
ret
ljmp
iret
pushf
add
inc
jne
ficompl
adc
gs
xor
push
jne
lods
lret
data16
iret
mov
mov
fcmovnu
jbe
add
data16
jge
popf
fildll
push
mov
inc
cmpsl
cwtl
mov
and
lahf
test
inc
cmp
imul
xlat
insl
fists
nop
push
inc
loope
jb
xchg
aam
inc
pop
xchg
pop
inc
add
push
or
cs
push
lock
mov
imul
adcl
mulb
nop
popa
mov
adc
push
xchg
test
cli
imul
mov
mov
fwait
int3
sub
and
rcrb
jns
xor
rcrl
xor
out
and
pop
jle
in
es
clc
or
repz
sub
cwtl
loopne
ds
xchg
sbb
cmp
cli
push
imulb
sbb
pop
or
dec
imul
and
xchg
sub
scas
push
dec
push
aas
lods
sub
cs
mov
jl
jg
repz
ret
pushf
adc
stc
sbb
pop
mov
cmp
jg
xchg
sbb
jno
mov
push
jecxz
fidivs
cmpsb
pop
ljmp
out
test
adc
or
mov
push
add
je
sub
cmp
jae
mov
or
arpl
and
jecxz
or
cmp
test
jecxz
cld
xchg
sub
dec
mov
or
cmp
sub
sub
ljmp
fnstcw
movsb
rcrb
ss
lret
xor
jmp
sub
cmc
dec
xor
fs
adc
push
in
icebp
test
xor
popa
adc
push
adc
les
icebp
movsb
add
mov
jmp
lret
pop
push
pop
pushf
pop
lahf
sti
xor
mov
sbb
mov
fxam
scas
fs
cmp
xlat
cli
xchg
movsb
xchg
sti
pop
sbb
push
push
dec
add
jnp
movsb
cmp
aad
add
and
cmc
xlat
mov
test
pushf
nop
adc
inc
mov
lcall
and
js
out
sahf
loope
pop
idivb
pop
add
push
fsubrs
pusha
testl
jle
mov
lock
mov
xor
push
push
mov
push
std
and
out
adc
or
cs
cli
xchg
cmp
sbb
sub
or
sub
pop
int3
fimuls
enter
inc
mov
aam
cltd
or
jbe
xor
xchg
push
push
sbb
xchg
adc
icebp
jl
jne
cmc
mov
subb
xchg
sub
adc
jb
cmpsb
icebp
inc
xchg
cmp
movsb
mov
leave
frstor
ret
sub
mov
cmp
and
and
and
leave
sub
cli
clc
mov
push
fcom
pop
cs
inc
fsubrl
cmp
test
fs
inc
jns
mov
cmpb
inc
stc
cmp
sahf
cmpsl
xor
and
lret
leave
and
jle
mov
inc
in
loope
cli
ja
xor
cmc
adc
sbb
fcoms
mov
shll
out
mov
cld
push
push
mov
jge
mov
push
addr16
pop
icebp
dec
xchg
jge,pt
mov
sbb
insl
inc
push
test
or
mov
not
sub
xchg
inc
mov
push
hlt
and
pop
xor
pop
cltd
daa
imul
popf
inc
push
jge
cmp
imul
addb
sub
jecxz
inc
sbb
icebp
jo
mov
cmpl
jo
rclb
fimull
imulb
sarl
push
out
add
pop
sbb
xchg
rcrb
scas
jno
mov
into
mov
call
add
rcrl
stos
mov
and
mov
and
stos
lods
inc
fcompl
outsb
cmp
mov
push
aaa
jno
or
dec
ja
jp
sub
daa
gs
push
hlt
push
adc
push
test
outsl
xchg
mov
ss
in
lea
ret
ljmp
sarl
lods
ds
cmp
lods
cmp
loopne
iret
dec
cwtl
lods
inc
pusha
fistpll
mov
xchg
pop
mov
push
icebp
scas
jl
push
adc
rol
sub
xor
cld
mov
xchg
mov
movsb
jb
in
mov
dec
pop
mov
inc
call
push
or
bound
stos
jnp
mov
int3
mov
adc
push
in
mov
sbb
js
loope
mov
cmp
xor
lea
in
out
adc
setle
sbb
or
mov
imul
dec
xchg
xorb
mov
shll
sbb
inc
faddl
ror
push
inc
cmpsb
arpl
sbb
sarb
shrl
push
int
notb
dec
stc
lret
das
scas
sub
enter
cmc
jmp
call
into
bound
or
inc
dec
int3
push
out
iret
or
ja
fsubrs
mov
testb
inc
rorb
in
inc
cli
roll
add
push
ret
xchg
jno
lea
js
add
popf
outsl
jns
mov
shll
push
dec
xor
fwait
scas
mov
inc
movsl
shlb
xor
idivb
add
mov
fnstenv
add
jecxz
and
inc
out
cmp
pop
fstl
fwait
push
out
in
shll
dec
push
cli
pushf
cmp
stc
ljmp
fyl2xp1
or
ljmp
outsl
jl
stos
xchg
adc
push
and
mov
or
or
dec
outsl
test
rol
sub
add
pop
stos
push
fdivl
mov
shrl
cltd
push
jns
insl
lcall
push
out
adcl
pop
shlb
int3
cs
push
xchg
inc
popa
ret
pushl
pop
leave
insl
lock
xor
stc
pop
or
rclb
pop
out
mov
add
push
addl
cmp
inc
into
repnz
in
test
cmpl
cs
add
data16
pop
and
jno
in
clc
push
sbb
addr16
mov
sub
into
cltd
lock
stc
mov
push
sbb
or
gs
inc
arpl
sub
or
loope
cmp
xor
xchg
stos
sub
mov
js
scas
inc
xor
push
sbb
out
data16
xchg
js
mov
cli
cmp
or
ljmp
mov
push
and
in
sub
mov
fxam
mov
jb
mov
sub
xchg
mov
xor
pop
dec
cmp
int
jo
dec
lea
out
test
mov
jg
and
movsb
lds
adc
incb
test
sti
out
inc
imul
in
negl
mov
enter
shll
imul
sub
scas
dec
add
push
push
adc
gs
loopne
xor
fmuls
sub
mov
jmp
pop
sub
inc
cmp
and
fadd
aam
pusha
pop
pop
test
cmp
mov
fmulp
push
push
lods
xchg
test
jae
mov
or
xchg
dec
lods
lea
aas
dec
ljmp
adc
testl
les
insb
mov
push
shl
loope
movsl
cmp
mov
push
xor
das
in
andl
faddl
mov
outsb
add
lods
bound
pop
fidivl
mov
dec
lahf
mov
push
scas
push
stos
out
sub
sub
inc
enter
sub
scas
lods
shrb
inc
vsqrtsd
loope
mov
jbe
sti
aam
pop
mov
lahf
shrl
fcmovne
fdivrs
push
test
les
int
stos
xchg
pop
mov
cmp
jns
pop
pushf
dec
and
ja
outsl
xor
clc
or
inc
loope
mov
out
mov
inc
out
add
push
push
pop
pushf
imul
or
lea
jle
sbb
or
xchg
in
repz
stos
jmp
lcall
push
and
lea
and
push
pop
lahf
iret
je
push
pop
adc
pop
out
cmp
lea
sti
in
stc
pop
push
popa
jnp
repnz
or
cli
enter
pop
data16
lret
rolb
cmp
mov
std
jo
pusha
sub
sbb
push
dec
pusha
fidivl
sarb
cmp
lods
ljmp
imul
stos
fidivl
shlb
fidivl
loopne
imul
or
scas
mov
dec
inc
sbb
fldcw
sub
cmp
arpl
lcall
fucom
jnp
gs
adc
jnp
popa
xchg
cmpsl
xchg
dec
call
fisttps
cltd
pop
pop
fmulp
jae
aas
and
lcall
xchg
notl
and
rcrl
test
cmpb
push
jmp
in
xlat
mov
lds
and
push
jo
dec
bound
test
mov
sti
xchg
iret
stos
cmp
ljmp
or
cld
popf
xchg
sub
mov
adc
int
xor
aaa
out
xchg
jae
xchg
xor
cmpsb
popf
fs
in
mov
jnp
jecxz
pop
repz
cmpsb
xchg
sub
repnz
push
aas
xchg
add
mov
mov
mov
pop
add
in
les
push
js
hlt
test
dec
jnp
jp
insl
stc
mov
lret
in
dec
or
jl
int
ficoms
inc
mov
cmpsl
je
test
negb
clc
jns
pusha
repnz
clc
int3
xchg
mov
jmp
jno
imul
das
hlt
sti
fdiv
sbb
jg
flds
sbb
add
mov
pop
aas
sbb
mov
fistps
repz
and
cmp
jle
xchg
ljmp
lret
jmp
popf
sbb
mull
roll
mov
fs
bound
clc
out
movsl
imul
sub
divb
mov
xchg
xchg
shl
roll
inc
xor
mov
or
add
and
loop
test
sbb
in
add
rcrb
cmp
or
mov
pusha
fimuls
inc
rolb
mov
rep
mov
orb
xor
lret
stos
mov
push
repz
sbb
dec
or
clc
pushl
adc
xchg
iret
jg
sbb
imul
sbb
lods
pop
mov
pop
insl
and
mov
pop
inc
and
mov
add
mov
xchg
jmp
dec
pop
xchg
sub
and
pusha
and
jb
cmp
jae
dec
mov
xor
mov
pop
push
fildl
xorl
and
fwait
addr16
stc
ret
dec
lods
iret
enter
jnp,pn
xlat
inc
mov
push
push
fsubs
cmpl
jb
insb
fdiv
adc
sbb
movsl
mov
shll
dec
pop
int3
shrb
pushf
xchg
gs
sub
jns
adc
jmp
push
xchg
popa
stc
and
pop
imul
and
out
jecxz
push
ja
add
and
mov
push
jo
mov
cmp
inc
std
adc
lcall
mov
pushf
roll
mov
mov
cmpsl
push
xor
lret
cli
test
in
jecxz
mov
rcl
mov
inc
xor
jmp
mov
jg
aam
sbb
inc
xchg
add
inc
dec
addl
mov
push
hlt
cld
scas
out
lahf
xor
inc
sbb
arpl
dec
pop
pop
out
xor
xor
pusha
addb
mov
imul
sahf
sub
ds
shll
divl
or
ror
test
repnz
pop
push
es
jbe
or
fdiv
stos
mov
push
pop
pusha
ja
inc
push
ljmp
icebp
mov
mov
rclb
leave
pop
aad
cld
add
fildll
mov
xor
sbb
cmpsb
jp
test
or
sbb
stc
add
cmc
insl
lcall
loope
movsb
xlat
stos
xor
jae
sbb
sbb
cmp
cmp
pop
rorb
sbb
cmpsl
int
adc
sub
std
sbb
fildl
jb
cltd
and
lcall
cltd
xor
int3
inc
cwtl
repnz
mov
cli
sbb
loope
icebp
clc
ja
mov
nop
xor
sbbl
cld
call
jnp
add
push
inc
das
movb
int3
cmp
xchg
mov
inc
ret
rclb
sbb
adc
aad
lret
xchg
je
jns
stc
mov
sar
pop
repnz
add
mov
int3
insl
add
adc
inc
dec
dec
push
pop
jb
adc
dec
dec
repnz
add
and
out
orl
fidivs
ljmp
pop
int3
xchg
add
push
lods
mov
fsubrs
add
dec
cmp
sub
xchg
xor
pop
cmp
ss
outsl
lret
lret
cmpsb
push
int
mov
adc
dec
inc
mov
ss
sub
jae
jbe
rorb
aad
inc
mov
popf
or
cmpsl
adc
xor
mov
cmp
add
jae
mov
mov
jno
jecxz
sbbl
jge
mov
les
repz
xchg
rcll
cwtl
inc
or
aas
push
or
sub
or
dec
repz
and
sti
mov
jle
dec
sbb
jl
cmp
js
insb
xchg
out
jae
dec
arpl
sub
fidivrs
leave
pusha
test
jbe
sub
mov
test
repnz
pop
push
fs
cmp
ret
inc
push
orb
arpl
sub
lea
shrl
lret
insb
jecxz
sub
inc
in
repz
in
cmp
mov
push
jge
adc
stos
pushf
sti
sbbl
lock
add
lcall
jne
pop
mov
hlt
leave
sub
adc
fsubrl
push
sub
xchg
add
add
xchg
mov
aam
xor
stos
add
std
mov
mov
mov
ret
out
jnp
int3
sub
xor
push
add
es
enter
mov
mov
pop
hlt
sbb
or
jge
mov
and
adc
add
push
mov
icebp
cmc
jl
mov
mov
in
push
sbbl
dec
jl
or
dec
dec
sub
jecxz
test
rolb
jne
dec
shrb
sbb
repz
fwait
jne
cli
test
das
rcrl
sbb
inc
cltd
dec
mov
mov
ret
call
dec
cmc
and
movb
push
sbb
or
in
jl
mov
shll
cmc
sahf
cmpsl
mov
xchg
ss
inc
jo
pop
adc
mov
sub
jle
add
or
dec
push
hlt
xchg
mov
test
lret
mov
adc
aaa
enter
cwtl
in
aaa
inc
mov
nop
pop
or
lds
adc
mov
repz
xor
lret
fcmovne
dec
push
jnp
jp
test
sar
sbb
pop
pop
aaa
pop
jae
adc
xchg
loop
jno
xor
subb
fistpl
clc
sbb
outsl
arpl
out
cmc
mov
scas
lret
inc
pop
stos
inc
or
mov
xchg
adc
popa
jne
ss
int3
and
andl
xlat
jge
and
inc
mov
push
inc
fisubrl
xor
pop
pop
fxch
cmpsb
clc
lods
push
faddp
mov
out
pop
jne
push
mov
or
push
cmp
mov
cmp
sub
mov
mov
into
popa
add
and
mov
test
rcrb
int
mov
add
pop
lock
mov
sub
enter
mov
adc
lcall
enter
cmp
enter
cmp
adc
adc
cmp
xor
jb
cli
rcrb
add
popa
scas
ja
mov
dec
popf
push
push
dec
leave
bswap
subl
daa
lret
mov
sar
rcll
jo
and
test
xor
and
imul
sbb
mov
loop
fisubrl
mov
inc
push
lahf
dec
aam
scas
mov
fbstp
jo
dec
sub
add
popa
fucomi
xchg
sbb
jns
mov
jg
xlat
rol
jle
imul
mov
or
int3
enter
das
push
adc
xchg
mov
test
out
inc
lock
subl
ja
in
lock
js
mov
mov
inc
out
test
sahf
xchg
ja
xor
pop
js
imul
sbb
enter
dec
push
repz
pop
stc
stos
into
movsb
fsts
mov
ss
pop
lret
jl
sti
ljmp
loop
dec
or
fcomps
push
or
pop
scas
fwait
jp
sbb
and
mov
dec
push
xchg
adc
pop
sbb
enter
fbld
cli
mov
movsb
jns
notl
pop
jle
add
int3
push
jmp
hlt
loope
dec
movb
xchg
sbb
out
push
xchg
es
inc
bound
in
mov
sbb
mov
pusha
or
mov
mov
out
cmp
pop
jge
sbb
xchg
in
shl
js
repz
pop
dec
lcall
inc
push
daa
push
push
stos
ja
lret
xchg
xor
fldt
dec
dec
lret
cwtl
sub
pop
pushf
push
fidivrs
xor
popa
mov
iret
inc
add
subb
jb
sbb
push
nop
inc
adc
jmp
cmpsl
out
pop
popl
inc
xchg
push
je
leave
mov
lods
push
sub
or
andb
mov
jns
shl
pop
push
call
sub
xor
push
dec
xchg
out
sub
push
stos
mov
call
inc
add
loopne
aam
ljmp
ja
mov
adc
add
jae
sub
xchg
lea
mov
sub
test
pop
add
xor
popa
jb
mov
imul
addl
popf
mov
ficompl
sub
aas
or
inc
repz
xchg
add
jns
xor
andb
jno
and
fcomps
shr
bound
loope
mov
xor
sub
adc
add
ds
push
shl
jnp
mov
mov
jle
mov
add
outsb
jp
lret
or
lds
sbb
int
stos
inc
rcl
add
les
pusha
outsl
inc
cli
fs
fiaddl
mov
mov
sub
je
xchg
xor
mov
sbb
notb
dec
jle
jg
fbstp
jl
mov
cmp
ret
ss
xchg
shrb
and
mov
xchg
lret
dec
add
push
stos
xchg
dec
sub
test
inc
push
and
or
out
xchg
ja
sbb
cld
jp
dec
push
loope
pop
adc
loope
pushf
mov
sbb
push
xchg
test
mov
mov
jg
je
add
fcom
and
icebp
inc
sub
push
pop
push
xor
xchg
shll
sbb
iret
jae
jp
lock
xchg
mov
incl
hlt
jl
or
inc
fisubl
and
pop
loope
popa
stos
in
sti
fldcw
mov
sarb
mov
xor
jo
nop
int
pop
xor
clc
loope
push
push
and
push
jbe
bound
mov
cmpsl
inc
int3
js
out
cmpsl
gs
xlat
mov
push
add
mov
sarb
mov
push
xchg
ja
iret
loopne
jbe
fisttpll
mov
lahf
mov
xchg
in
push
jmp
push
sub
ret
leave
ss
icebp
icebp
mov
pop
call
negl
xor
dec
add
xor
mov
out
cmp
add
xor
ret
xor
cwtl
mov
repnz
jns
loop
adc
mov
and
aad
cs
jno
sbb
sub
testl
sbb
leave
enter
hlt
inc
ds
adc
mov
insw
xor
xchg
ja
push
fcomps
mov
in
lss
xor
push
out
cld
inc
inc
sub
out
pop
pop
lret
push
aad
lods
lods
addr16
adc
les
lock
xchg
jecxz
add
cmc
xorl
inc
call
imul
repnz
mov
dec
mov
mov
adc
jmp
or
int
or
xchg
pop
xor
js
and
les
jecxz
subl
or
stos
cli
btr
stc
mov
sbb
sbb
push
fiadds
push
cmp
cmp
push
movsb
shlb
or
sub
negb
xchg
xor
pop
mov
es
fsubrl
push
pop
pop
std
adcb
jge
dec
xchg
data16
sub
in
rcll
xchg
add
ret
mov
movsb
mov
xchg
push
movsl
repnz
sbb
int3
and
jns
cmc
iret
popf
xchg
dec
pusha
ljmp
out
cld
xchg
pop
sahf
push
or
repz
pusha
mov
cmc
testl
add
pop
cltd
leave
hlt
stc
nop
loop
cld
cmpb
xchg
sbb
and
mov
add
divb
xor
fnstsw
fcmovnb
cmpsb
test
rcr
pusha
imull
mov
int
sbb
add
pop
jge
jp
jo
pusha
adc
pusha
inc
xor
rcrl
sbb
jl
stos
adcb
test
loop
ret
pop
jne
mov
xor
cmp
cmp
push
sub
lods
in
fistl
and
xchg
ljmp
ds
add
xchg
in
inc
insb
jmp
test
stc
imul
push
outsb
out
cltd
cmp
push
dec
insl
adc
sub
test
push
mov
cwtl
or
pop
or
out
lcall
ds
push
cmpsl
jne
dec
sub
push
jmp
push
movsb
std
push
outsl
test
inc
pop
jg
mov
orl
cmc
shrb
mov
rol
popf
roll
xchg
add
arpl
pop
rolb
enter
outsl
outsl
pop
mov
ret
mov
scas
outsl
icebp
pop
cmp
in
addr16
and
in
add
pop
repnz
out
sbb
mov
jecxz
mov
lret
cs
push
sub
inc
negb
lret
sti
jns
rcrl
dec
loopne
data16
or
inc
dec
push
or
fldl
stos
rclb
sub
sti
leave
shlb
xlat
push
xor
or
andl
inc
jns
dec
mov
leave
cltd
notl
or
mov
inc
lea
add
inc
out
xchg
mov
push
push
cwtl
test
jae
stc
enter
lret
bound
jl
lds
xor
push
gs
sub
adc
xor
xchg
or
cmp
cmc
imul
lahf
movsb
push
test
pop
mov
push
daa
lock
imul
pop
jmp
rol
movsb
stc
jbe
jle
ret
lahf
xchg
and
ret
into
aad
addr16
mov
sub
lea
cli
ficomps
xlat
inc
leave
mov
jnp
fsubrl
ljmp
jno
push
scas
or
cli
lods
mov
ds
gs
push
or
jecxz
mov
sub
lds
cmc
push
pop
movsl
cmp
pop
insb
and
inc
lahf
cs
mov
mov
push
add
outsb
sbb
dec
and
test
scas
aas
test
loop
adc
add
negb
sub
scas
push
sti
dec
cmp
cmp
fldcw
mov
movsl
shl
cmp
pop
dec
imul
xchg
ds
stc
and
es
xchg
jbe
inc
aaa
jle
inc
sub
hlt
mov
out
jp
jae
repz
sbb
jp
xchg
push
mov
dec
mov
mov
mov
or
scas
xchg
insl
push
push
into
enter
repz
pop
insb
outsl
pop
fs
insb
addr16
int
cmc
mov
mov
xor
inc
cmp
cmp
jecxz
sar
cs
loopne
xchg
or
push
mov
dec
ds
dec
popa
jl
add
or
js
cld
xchg
xor
call
leave
mov
out
mov
movsl
rol
and
repz
imul
sbb
sub
movb
lods
stc
popf
mov
sbb
push
sbbl
inc
add
inc
xchg
or
adc
movsl
stos
jmp
xor
outsl
jne
fidivs
mov
cmpsl
movsl
mov
add
xchg
pop
sbb
iret
jle
ja
scas
mov
shlb
sti
mov
sbb
sbb
mov
jnp
sbb
jnp
sbb
mov
aad
outsb
mov
mov
mov
es
insb
xchg
idivl
ret
dec
or
cs
mov
sbb
xchg
cmc
leave
int
sub
inc
cwtl
int
inc
lret
push
andb
daa
mov
int3
fdivs
and
mov
xlat
jecxz
adc
mov
push
jmp
push
jg
or
pop
and
ret
rsm
and
sti
mov
cmp
test
add
clc
adc
inc
int3
mov
push
xchg
je
fldt
movsb
cli
mov
fiadds
aam
icebp
cmp
mov
int
adc
sbb
jle
dec
jb
pushf
cmpsl
jl
jnp
lock
mov
jecxz
and
jl
fimuls
pop
push
sbb
dec
hlt
loop,pt
in
push
or
push
mov
or
sub
xchg
xor
xor
hlt
pop
fprem
xchg
dec
push
mov
movsb
movb
cmpsl
sbb
lods
mov
stc
mov
sbb
mov
scas
jae
fistpll
pop
sub
jno
movsb
push
stos
mov
adc
je
xor
fisttpll
and
add
cmp
std
cmc
pop
aaa
adc
and
or
mov
lret
pop
sbb
jmp
lods
pusha
das
orl
sbb
cmp
outsb
sbb
sub
mov
push
sub
cmp
aas
icebp
es
pop
cmp
rorb
pop
sub
adc
add
mov
add
dec
mov
pop
aad
pop
mov
or
in
add
cmp
ljmp
xchg
adc
cld
pop
in
arpl
int
mov
dec
mov
sarb
pop
lea
lret
pop
ficoms
mov
and
cmpsb
fcomi
sbb
inc
push
rcr
cmp
lock
mov
mov
test
mov
add
test
add
adc
mov
lods
push
fisttps
mov
shll
or
xchg
push
fdivr
add
fistps
mov
test
iret
nop
adc
pop
std
cmp
lock
sbb
leave
jge
jo
scas
popa
les
cltd
xchg
addr16
jecxz
xchg
lcall
test
cmc
xchg
daa
dec
cmp
sub
daa
mov
adc
shll
repnz
cmpsb
mov
repnz
push
mov
movl
or
pop
or
fldt
push
jno
loop
xor
insl
bound
mov
sbb
scas
dec
jae
jbe
gs
addr16
ret
xchg
mov
cmp
jne
icebp
push
fst
sub
mov
and
or
aad
popa
fmul
mov
adc
mov
or
jae
and
inc
bound
jmp
loopne
popf
push
mov
lods
jmp
pop
test
add
sbb
dec
push
xor
or
dec
xchg
fsubrp
push
clc
je
repnz
push
cmpsb
std
or
pushf
shll
insb
add
notl
cmp
mov
stc
ds
lcallw
fbstp
pop
dec
mov
test
adc
mov
jmp
cmpl
jl
es
addr16
mov
pop
mov
sbb
sbb
stc
jnp
cmp
mov
orl
xlat
test
lahf
mov
push
push
inc
fcmovb
outsl
dec
jp
push
in
and
in
jae
xchg
mov
mov
dec
push
imul
xor
mov
addr16
and
or
shl
xchg
push
stos
jmp
aam
or
movsl
test
add
xchg
jbe
loope
arpl
and
out
outsl
jmp
dec
pop
sti
mov
pushf
scas
sbb
adc
xchg
int3
adc
addr16
std
xchg
sahf
in
aaa
cmc
dec
out
push
mov
subb
loope
or
movsl
insl
pop
cmp
aas
mov
cmc
orl
sarl
cmpsb
mov
jg
mov
test
hlt
mov
adc
adc
mov
pop
sbb
cmp
jl
mov
hlt
mov
or
rorl
or
out
sbb
jmp
mov
jmp
outsl
push
and
in
clc
pop
push
or
inc
sbb
add
dec
in
pop
clc
jg
mov
push
xchg
aam
or
sbb
repz
xlat
mov
out
mov
or
mov
dec
sarb
andb
repnz
test
or
mov
jecxz
add
or
outsl
lea
pop
nop
hlt
sbb
adc
sbb
mov
out
xchg
ja
and
jns
out
cld
mov
sub
sbb
mov
xchg
inc
cmpsl
aas
cmp
add
or
mov
xor
add
inc
push
out
ja
lcall
mov
fsubl
cmpsl
ja
stos
movsl
ss
push
mov
imul
je
shlb
jae
push
int
loop
cmp
inc
aas
sub
push
mov
cmp
call
xlat
mov
roll
ret
push
and
cld
xchg
loope
jecxz
hlt
dec
inc
cld
insl
fnsave
arpl
fbld
mov
xor
ret
outsl
jecxz
pop
push
jle
fcmovnb
sub
int
pop
lods
sub
jnp
mov
imul
add
xor
aam
pop
dec
in
lret
iret
xor
rcll
mov
popa
pop
mov
adc
pop
shlb
data16
pop
cli
mov
shrl
jnp
sub
ja
lea
aam
inc
pop
mov
fmuls
test
cmp
jb
sub
popa
rcrb
pop
mov
push
fisttps
rorb
addr16
cmp
add
mov
or
and
push
aaa
sub
movsl
inc
adc
pop
repnz
dec
clc
and
std
sub
call
xchg
cmpsb
dec
push
pop
aas
sahf
or
outsb
jbe
mov
xor
push
cltd
or
dec
je
popa
lods
insb
aaa
into
popf
int
mov
mov
ret
and
es
mov
popf
insl
cld
push
dec
lcall
aad
xchg
jbe
xor
sti
ss
sti
leave
mov
inc
imul
sub
insl
aas
cltd
out
cmp
ss
pop
jbe
or
in
std
push
mov
cltd
push
jne
mov
jbe
aaa
test
cmp
push
aaa
shrl
cmpsb
aad
sub
add
lds
and
sti
xchg
pop
or
xor
fstpl
aas
xchg
repz
dec
and
iret
ret
movsb
jmp
add
shlb
sbb
sarl
out
popf
pop
jg
out
mov
push
jo
xchg
add
mov
lock
fsubrs
adc
jb
popf
aas
bound
mov
pop
insb
cmp
inc
inc
fcomps
repz
cmp
hlt
or
push
or
fistl
lcall
addr16
xor
sub
mull
pop
cmc
sarb
jl
es
jmp
xchg
fucomp
xorb
or
mov
loopne
jnp
jns
mov
bound
or
lcall
sbb
mov
pop
out
and
mov
cld
push
mov
add
mov
push
fwait
xor
aaa
jbe
sbb
iret
fidivs
fnsave
xchg
cmp
mov
pop
pop
adc
mov
inc
insl
inc
push
pop
arpl
dec
pop
jp
mov
fwait
sub
imul
testl
mov
insb
movsl
push
inc
push
stos
or
inc
out
jp
lock
and
cmp
rorb
jb
pop
push
sub
ja
jb
and
jns
mov
add
lcall
rolb
and
js
pop
mov
mov
jnp
lods
pop
orl
clc
xor
out
and
or
outsl
xchg
inc
cli
or
rorb
cli
loop
sub
xchg
sti
jns
xor
pop
lock
mov
mov
pop
mov
jb
mov
lds
stos
aad
or
fcomps
mov
test
clc
jb
cmp
call
or
cmp
jmp
mov
adc
popf
lods
xor
out
dec
rcll
cltd
mov
mov
pop
push
push
loopne
rcrb
flds
jmp
ja
jmp
mov
enter
xorl
push
sbb
mov
stos
and
or
jnp
push
lds
mov
outsl
jnp
scas
inc
mov
push
cs
sbb
ja
xchg
sahf
test
adc
sti
jb
insb
xchg
stos
notl
loope
and
xor
imul
inc
test
jb
mov
ljmp
movsl
mov
aam
lods
fisttpl
and
cmp
mov
lods
scas
out
cmpsl
and
negb
int3
and
bswap
fildl
sbb
jmp
movsb
dec
mov
push
repnz
push
sub
in
mov
xchg
add
mov
mov
dec
shll
ja
data16
ja
mov
lret
lahf
mov
mov
adc
jo
cltd
int
mov
mov
jnp
add
cltd
lock
fildl
add
lahf
pusha
xlat
mov
or
nop
popl
adcl
mov
popf
jmp
pushf
mov
lods
outsl
add
xor
out
popa
lods
addl
mov
into
fdiv
movsl
and
stc
push
adc
fsubl
gs
cmp
inc
pusha
mov
pop
xor
and
jecxz
add
call
and
gs
hlt
sub
jnp
je
add
sub
dec
xchg
jb
in
xlat
cmp
adc
subl
jecxz
jae
sub
sbb
cld
shll
dec
ljmp
dec
enter
xchg
ja
cld
cmp
sbb
jle
xorb
scas
mov
lret
xchg
adc
fldt
adc
inc
mov
fisubs
sub
sub
insb
cmp
dec
loop
push
pop
in
xor
and
jmp
leave
lret
lods
jb
in
and
std
adc
mov
mov
pop
cmpsl
call
pushf
pusha
pushf
ss
adc
mov
in
inc
xchg
mov
rcr
in
sti
aaa
mov
mov
sub
test
push
stos
rclb
in
xor
ss
mov
sbb
frstor
mov
fcomps
add
sub
xchg
addr16
dec
testl
repnz
dec
adc
xor
pop
sub
ds
push
sbb
mov
xchg
add
pushf
jmp
aas
fistpll
scas
clc
xchg
cmp
or
sbb
loope
jle
mov
mov
push
cmp
in
lret
data16
mov
and
es
pop
rorb
add
add
mov
inc
adcl
xor
lea
test
lods
mov
inc
or
ljmp
lods
in
loop
imul
call
data16
nop
fildl
scas
dec
adc
push
mov
in
jae
mov
sbb
mov
jnp
popf
mov
cmovp
xchg
sub
jp
jbe
in
fsubrs
add
mov
push
inc
outsl
in
and
aad
xor
daa
inc
add
dec
mov
aaa
cmp
dec
popf
aam
dec
imul
pop
test
stos
outsl
adc
push
dec
movsl
xor
lods
xchg
fdivp
sbb
in
jb
mov
push
cmp
out
adcb
mov
imul
roll
repnz
js
jns
setle
mov
pop
mov
push
and
jns
repnz
and
test
xorb
mov
call
jne
aaa
cmp
imul
cli
stc
nop
sub
push
nop
test
mov
add
jmp
inc
and
xor
dec
mov
pusha
mov
insl
mov
xchg
push
dec
lret
aas
pop
loopne
sahf
pop
jmp
loope
repnz
sub
shrb
enter
pop
addr16
inc
xor
pop
bnd
out
mov
dec
aad
int3
divps
push
cmp
nop
mov
popf
ljmp
mov
imul
cld
aam
ja
in
outsl
sbb
sub
cmc
mov
shlb
pop
mov
inc
sahf
or
fisubs
sub
push
cmpsb
shrb
sub
push
xchg
ds
inc
inc
scas
sub
xor
and
xchg
inc
xchg
mov
scas
out
or
jb
ret
cmpb
out
xchg
push
mov
xchg
movsl
cmp
push
mov
das
mov
mov
xchg
out
stos
xchg
imulb
fstpt
push
aam
sbb
addl
stc
mov
out
lods
rorl
add
jns
mov
fists
jnp
and
repz
adc
inc
cmpb
ljmp
movb
mov
enter
roll
sbb
push
int
insb
aad
pop
sarl
inc
or
cmp
call
add
minps
sbb
and
in
xchg
mov
test
cmp
notl
sbb
jb
ret
orb
push
notl
mov
daa
add
out
mov
addb
out
xchg
sbb
adc
test
dec
fists
xchg
pop
pop
cmp
aaa
imul
adcl
xor
jno
fdivrl
aad
sbb
mov
rcl
push
stos
mov
dec
loopne
test
inc
sbb
inc
fwait
arpl
test
cmp
inc
lret
cmp
mov
jecxz
rorl
clc
add
mov
sub
pop
jnp
push
inc
jno,pn
jbe
jge
stos
fucomip
fildl
or
xor
pop
push
dec
jp
cmpsb
lock
mov
dec
mov
lahf
inc
int3
sub
sbb
out
cli
shlb
jns
dec
fwait
imul
jno
jmp
sbb
je
or
push
xchg
in
add
dec
cmpsb
out
out
pop
rcr
cmpl
lods
sbb
xor
push
mov
adc
icebp
icebp
or
xor
loope
pop
cs
mov
lahf
arpl
or
inc
mov
test
mov
inc
pop
daa
sbb
inc
dec
add
or
mov
push
cs
xchg
jle
pop
loope
rorl
out
xor
adcb
out
bound
insl
sub
mov
in
movsl
pop
mov
or
aam
scas
das
je
stos
sbb
filds
lds
xchg
push
mov
add
cmp
hlt
pop
pop
pop
cmc
or
add
jnp
fistps
and
rcll
mov
xor
repnz
sti
jge
pop
cmp
arpl
lea
jge
sub
outsb
pop
pop
adc
lret
insb
mov
sub
fs
gs
inc
cmpsl
add
mov
jmp
xor
incl
mov
mov
xchg
in
ljmp
popf
pop
jge
push
pop
mov
in
and
pop
clc
addr16
insl
cltd
sbb
std
imul
dec
pop
das
inc
fsubp
in
jnp
add
fidivrs
dec
add
mov
xchg
sti
add
fiaddl
loope
lock
jmp
or
imull
sub
sbb
mov
xchg
orl
push
push
fldenv
cli
dec
and
jp
push
mov
cwtl
das
test
push
sub
testb
cmc
dec
push
jl
addr16
pusha
aad
or
cwtl
lods
stos
sub
sti
pushf
sub
enter
icebp
mov
mov
dec
and
dec
mov
mov
inc
les
pop
sbb
mov
and
fs
popf
fdivl
push
mov
pop
and
in
stc
pop
dec
inc
in
sbb
sbb
icebp
aas
cld
xchg
pop
cs
ja
push
lds
xchg
out
aam
negl
sub
pop
mov
js
imul
and
gs
adc
call
out
lahf
jge
daa
mov
fadd
or
cmc
std
int
das
xchg
jmp
jl
xchg
call
ds
and
xchg
sub
les
pushf
sbb
loopne
cmp
mov
or
inc
pop
mov
jae
ds
xchg
popf
lret
cld
mov
lods
inc
or
lret
jb
inc
mov
jle
les
ja
stos
inc
mov
ja
lahf
test
sub
sub
jno
mov
pop
cmc
addr16
fcompl
fadds
mov
pusha
xor
xchg
sbb
dec
dec
mov
inc
in
aam
fadd
hlt
in
repz
aad
inc
mulb
push
sub
add
lcall
insl
xor
pop
cmp
push
mov
adc
sub
pop
test
mov
mov
sub
xor
sar
repnz
mov
clc
outsb
stos
cmp
xchg
sbbb
in
mov
adc
loope
fwait
les
fwait
rcl
in
mov
and
popa
add
sbb
dec
dec
mov
dec
fwait
inc
push
icebp
in
outsb
pop
adc
mov
mov
test
jnp
insl
xor
cmp
and
stc
jle
mov
dec
pop
sub
or
cltd
pop
adc
iret
std
mov
or
cltd
xor
dec
mov
aas
add
pop
mov
cmpsb
fsubrs
and
ljmp
mov
mov
cmp
call
fldcw
bound
scas
test
xchg
sub
inc
addr16
cwtl
and
dec
sbb
out
mov
xchg
mov
shr
sbb
jle
jl
mov
ljmp
push
ss
rcrl
xchg
gs
pop
jb
ret
mov
cmp
stc
xchg
mov
push
cli
push
mov
scas
ret
mov
push
mov
push
jnp
aad
cmp
inc
outsb
rcll
lret
xchg
inc
out
pop
xor
or
push
sub
ss
int
add
fwait
jb
push
in
fnstsw
jae
test
fwait
add
outsl
jl
push
into
leave
push
out
xchg
pop
fwait
jb
mov
fdivs
cmc
cmpsl
lahf
and
ret
iret
jecxz
sub
fdiv
lahf
sbb
out
push
aaa
jno
xchg
pop
test
in
push
xchg
cmc
sbb
movsb
lods
cmp
mov
mov
fildl
or
in
pusha
loopne
popa
clc
flds
insb
rorl
fbstp
mov
mov
std
xchg
jb
mov
dec
lret
cmp
cld
fucom
lods
mov
pusha
repnz
aas
add
rcrl
pop
xchg
adc
shl
cltd
rorl
jle
add
out
sti
add
fimull
mov
xchg
push
mov
rep
repnz
xchg
pop
jb
fadd
mov
fnstcw
lahf
popa
jo
and
mov
jno
cli
push
insb
ja
sbb
rorb
mov
arpl
imul
fucomip
loop
sbb
dec
or
int3
jg
sbb
adc
lret
hlt
testl
jecxz
mov
dec
or
lret
xchg
dec
das
pop
arpl
adc
xor
je
ret
dec
nop
addr16
xlat
dec
mov
xchg
adc
pop
movsl
lea
enter
sbb
xor
ss
pop
inc
fimull
push
push
in
call
cld
mov
push
adc
das
xorb
push
icebp
mov
mov
sbb
sub
xchg
push
xchg
imul
inc
mov
not
imul
mov
push
loop
in
test
hlt
lock
test
inc
mov
add
out
cmc
add
cmpsl
cmp
fisubrl
aam
or
and
cmp
fs
cli
xchg
xor
leave
nop
imul
imul
fisubs
xchg
roll
es
xor
and
andb
sub
inc
scas
jb
push
xchg
testl
daa
nopl
insl
aam
jl
ret
inc
fdiv
mov
arpl
or
sbb
push
mov
leave
sbb
in
lods
shrl
decb
sbb
fcoml
pusha
imul
xor
cmc
in
lahf
cmp
scas
movsb
cmp
arpl
adcl
ljmp
lret
add
jno
aad
rcll
gs
jl
push
mov
mov
andb
clc
sbb
dec
xchg
jae
mov
nop
outsl
rclb
adc
sbb
jne
dec
stos
insl
test
mov
push
jp
or
out
flds
mov
dec
into
adcl
mov
xchg
jb
gs
push
push
add
popa
daa
cmp
cmpsl
ret
cli
pop
pop
mov
pop
push
mov
insb
and
sti
pop
inc
aas
lea
movsl
cltd
xchg
shl
xchg
fisttpl
xchg
aas
mov
jmp
add
pop
mov
sub
aaa
xchg
xlat
in
nop
aad
mov
fistps
cmpsl
mov
aad
testl
pop
xchg
jl
sbb
dec
out
cmp
insl
cmc
testb
cmp
out
sbb
mov
jno
adc
test
ja
sbb
aas
enter
fldenv
sbbb
xor
cld
movsb
rcll
test
rorl
adc
or
fnstenv
jno
out
in
cmpsb
out
dec
shll
or
sub
out
mov
stos
mov
cwtl
outsl
lea
hlt
adc
in
mov
test
jne
ss
in
test
aad
out
cwtl
mov
bound
xchg
daa
test
mov
inc
sbb
aam
mulb
mov
mov
nop
sbb
fidivrl
mov
ljmp
pop
xchg
pop
ds
dec
nop
addr16
pusha
mov
shrb
out
shlb
es
sbb
cltd
dec
mov
in
jmp
loopne
pop
adc
xchg
xchg
ljmp
mov
xchg
jecxz
and
and
dec
push
rorl
pop
push
in
adc
inc
cltd
inc
fsubs
imul
out
inc
out
sbb
cwtl
arpl
test
lea
sahf
je
mov
mov
in
add
stos
das
out
add
out
sbb
aaa
dec
dec
movsb
mov
push
cs
mov
mov
shl
es
dec
inc
and
jo
adc
mov
adc
push
outsb
fs
iret
fs
lcall
fisubs
out
jns
dec
in
sbb
in
mov
ds
mov
cs
mov
out
test
jo
in
sar
jnp
push
loope
aad
roll
jne
dec
fisubrl
or
in
push
or
push
sub
push
ret
push
loopne
idiv
jp
aad
lea
gs
sbb
stc
or
adc
int3
cmp
dec
push
mov
xor
dec
sbb
push
jnp
mov
loopne
dec
call
test
mov
and
aas
cmp
js
sbb
adcb
mov
push
mov
shlb
mov
jns
dec
arpl
cld
xchg
out
popf
test
rorl
add
adc
cmc
or
mov
add
lods
push
adc
notb
cmc
lods
mov
pop
std
mov
faddl
lods
lret
fimull
subb
pop
shlb
push
mov
mov
sbb
sarl
cmp
or
cld
mov
mov
dec
mov
mov
dec
mov
scas
stos
dec
inc
adc
aas
xchg
jle
pushf
ret
adc
imull
dec
loopne
int3
jg
mov
pop
xor
dec
lret
or
add
and
shrb
push
call
ss
inc
arpl
push
insl
mov
xor
mov
inc
and
pop
mov
sbb
or
pop
andl
sub
rclb
in
sbb
arpl
cmpsb
mov
jno
ja
lock
shl
cmc
jae
scas
fsubrl
jecxz
or
sahf
cmp
xchg
add
mov
adc
int
sbb
xchg
leave
jecxz
imul
xor
and
dec
push
addr16
scas
cmpsl
popf
loopne
xchg
adc
into
andl
pop
iret
xchg
jp
jecxz
pop
dec
xchg
add
mov
in
sbb
int3
dec
push
mov
dec
mov
sbb
sahf
jle
mov
les
add
lahf
mov
jmp
in
lods
inc
sbb
mov
mov
js
popf
pop
xchg
add
scas
and
fbld
sbbb
stos
imul
sub
mov
pushf
jo
decb
sbb
pop
fwait
shrl
jge
add
mov
dec
adc
adc
xor
je
push
insb
cmp
cmpsb
inc
ret
mov
dec
mov
adc
ljmp
orb
cmp
filds
pushf
dec
or
inc
xlat
sbb
mov
dec
jmp
out
adc
aas
and
xor
rorb
mov
loopne
fiadds
jp
sbb
pop
sarb
mov
cmp
roll
sahf
add
inc
sti
mov
and
push
ret
inc
xlat
hlt
sub
sar
pusha
imul
cltd
daa
imul
xor
cmc
push
cmp
in
stc
adc
mov
xor
ss
out
mov
mov
ja
ret
repz
lods
xchg
xor
ficoml
leave
pusha
insl
jmp
xor
ds
mov
xor
insb
fidivl
fstl
push
xor
push
push
jge
xor
jmp
addr16
je
in
icebp
dec
cmpsb
or
lds
test
cmp
jg
rcrb
pop
adc
dec
loopne
cli
xor
adc
insl
add
add
inc
fmuls
out
test
jmp
mov
push
or
test
pop
popf
inc
dec
imul
push
mov
movsb
or
imul
lock
fsubl
subl
das
jge
in
push
out
outsl
add
ja
push
and
out
andb
sbb
enter
call
xor
sub
pushf
mov
xchg
lret
and
sbb
lea
cli
sbb
sub
imul
ss
stos
ljmp
xchg
adc
popf
cld
xor
add
and
adc
xchg
or
add
mov
adc
mov
pop
sub
sarb
inc
mov
adc
add
pop
nop
and
pop
xchg
stos
pop
xor
jmp
xchg
adc
sbb
xor
jno
ss
sub
cmp
xor
cmp
adcb
dec
imull
and
out
imul
popf
dec
out
and
add
call
sub
cmpsb
dec
mov
lret
dec
aam
js
inc
cltd
into
insb
mov
dec
sub
mov
cwtl
dec
loope
jns
fsubrp
pop
jno
sub
call
mov
ret
hlt
cli
push
faddp
add
imul
inc
xchg
repnz
or
out
incl
push
aaa
push
cmp
pop
mov
movsl
shll
jo
hlt
lea
xor
js
jmp
jae
lret
and
test
xor
pop
jno
push
pop
je
inc
push
into
mov
adc
pop
lret
mov
pusha
daa
hlt
lgs
sub
lahf
mov
cmpsl
fists
and
add
adc
push
fst
pop
xchg
sub
sti
xchg
dec
fisubrl
ret
popf
pop
push
decb
lock
adc
fwait
add
es
ret
popa
lds
inc
leave
gs
aam
cmpsb
mov
int
mov
cmc
push
dec
push
out
es
xor
js
mov
enter
lcall
sbbl
int
jp
mov
cld
outsl
pop
movsl
dec
call
repnz
jno
push
imul
push
lock
out
loop
add
popf
scas
dec
and
push
pop
xlat
imul
cmpsl
nop
mov
push
jbe
out
or
push
sub
inc
mov
adcb
pop
popf
and
ljmp
xchg
xor
push
mov
inc
adc
xchg
sahf
push
adc
outsl
jb
testb
push
insl
ja
std
adc
loop
push
adc
dec
adc
jo
and
adc
test
arpl
jbe
jno
push
mov
imul
dec
aad
aad
sub
fdivs
aad
repnz
jp
sbb
mov
jg
cld
mov
add
pop
fsubrl
cs
mov
fs
aad
push
stc
and
or
fs
mov
lret
loopne
scas
or
bound
mov
pop
dec
add
dec
shrb
pop
jno
pop
rcrb
add
add
xchg
or
push
repz
repz
mov
fiaddl
bound
jo
xor
rcrl
aaa
mov
or
dec
adc
jns
mov
pop
call
mov
xchg
cmpsl
stos
pop
icebp
xchg
fwait
fwait
xchg
add
test
popf
jnp
jg
push
push
arpl
mov
xor
test
and
jbe
cmpl
sbb
sarb
outsl
enter
fwait
test
inc
push
inc
out
lods
mov
jle
push
xchg
out
or
fwait
inc
fwait
arpl
nop
xor
dec
ljmp
fwait
mov
cmpsb
and
inc
pop
push
jecxz
and
inc
pop
sbb
cmp
nop
adc
fdiv
sbbl
les
pop
neg
jne
xchg
jmp
sti
sbb
cmp
idiv
xchg
shrb
mov
mov
loop
pop
push
int3
dec
loope
inc
imul
nop
jmp
test
add
mov
xor
repnz
mov
leave
jecxz
test
add
lea
xor
cmp
ljmp
mov
or
adc
nop
sub
gs
insl
dec
daa
stos
jp
sbb
jne
or
mov
sbb
inc
lret
icebp
je
popa
gs
push
jg
and
xacquire
ljmp
imulb
mov
dec
cmp
push
mov
inc
cmp
mov
cltd
and
cmpsl
loope
daa
fcomps
or
xlat
jle
int3
jns
cmp
inc
mov
mov
mov
orl
dec
nop
lea
pop
mov
mov
lea
mov
dec
lds
jb
loopne
inc
fldcw
mov
mov
mov
cld
xchg
sub
dec
aam
lret
dec
lahf
push
aas
xchg
in
adc
les
adcb
and
int
mov
shrl
sahf
orb
and
push
sbb
sbb
sub
inc
cmpsl
lock
dec
inc
cmpsl
arpl
xchg
pop
incb
in
sbb
mov
int3
or
jbe
jbe
out
mov
xchg
jmp
hlt
cmp
inc
sahf
sub
xor
cwtl
out
repz
mov
mov
xchg
in
pop
pop
outsl
decb
daa
xor
addr16
pop
jne
fistpl
je
scas
shl
sub
notl
add
cld
sbbl
and
popl
mov
lahf
loope
cld
mov
sbb
ficoml
adc
and
ja
mov
rcll
inc
jb
ljmp
fs
int
cmp
xor
sbb
add
inc
xor
pop
aad
and
imul
in
test
push
das
fnstsw
lcall
sub
mov
dec
lds
les
testb
test
mov
int
repz
sbb
clc
mov
fucomi
xor
jo
mov
into
out
push
inc
leave
jo
mov
out
in
pop
cmp
cmpsb
je
imul
adc
data16
popa
inc
pop
outsb
adc
pop
stos
mov
sbb
jmp
adc
int
lahf
push
mov
jno
sub
or
dec
mov
imul
or
loop
subl
jge
leave
pop
pop
lods
adc
icebp
sbb
xchg
push
xor
movsl
icebp
jno
lods
lds
add
ror
ficompl
ret
aad
int3
jg
dec
jl
iret
icebp
loop
pop
or
mov
fnstenv
lock
les
and
sub
fcmovbe
xchg
inc
jp
ljmp
cmpsb
lods
xor
aad
adc
fwait
mul
jns
jno
cmp
sbb
inc
xor
imul
xchg
mov
push
ja
add
mov
shrl
movsb
cmp
add
xchg
adc
inc
jo
jmp
nop
clc
aam
insb
lods
mov
jmp
push
outsb
cli
xchg
inc
in
stc
mov
stos
push
jae
test
pushl
xor
cld
dec
inc
push
rol
aaa
mov
mov
int
lret
movsb
mov
mov
push
add
push
sbb
and
xchg
mov
or
movsb
cs
mov
std
aam
imul
and
inc
xor
xchg
aaa
mov
orb
inc
push
mov
aad
ret
nop
dec
add
fstpt
or
add
dec
stos
dec
pop
push
jnp
decb
add
xchg
hlt
pop
inc
push
arpl
repz
fdivl
repnz
push
mov
mov
mov
test
cmp
repz
mov
cs
in
sub
mov
sub
shl
mov
fcmovu
mov
jp
pushf
ss
and
movsl
out
pop
xchg
rclb
pop
xlat
mov
xchg
jb
pop
push
in
stc
lcall
and
arpl
mov
mov
rol
xchg
and
test
mov
ret
xchg
js
sbb
adc
mov
mov
sbb
mov
lcall
fistl
fistl
scas
add
jbe
cmp
std
lret
outsb
fsts
pop
mov
ljmp
xchg
cmp
dec
and
inc
aad
in
mov
adc
inc
mov
dec
fsubrl
fbld
mov
pop
lods
ljmp
mov
enter
xchg
arpl
pop
or
mov
sbb
inc
fldcw
push
xlat
jecxz
adc
lret
aam
push
pop
outsl
xchg
sub
xorb
inc
mov
dec
lea
icebp
movsl
xor
xor
sbbl
imul
adc
fistps
xlat
or
popl
in
hlt
and
int
pop
xchg
add
adc
pop
insb
icebp
xor
mov
addb
lahf
xor
je
aas
test
adc
lea
push
add
je
imul
xchg
xchg
xor
bnd
push
bound
adc
sub
xchg
pop
sarb
mov
push
and
in
stos
movups
popf
and
xor
add
notb
xor
push
push
inc
xchg
repnz
test
jle
aad
inc
inc
jns
pushf
stos
mov
and
mov
jo
cmpsb
aam
mov
popa
arpl
xor
or
daa
dec
add
int3
popf
add
adc
xchg
out
out
pop
push
sbb
jae
sbb
inc
lock
and
into
jae
movsl
movsb
xor
mov
loopne
out
lds
mov
into
shrl
imul
adc
or
out
push
sbb
inc
test
jp
dec
xchg
and
sbb
pop
sub
cmp
cmp
and
popf
mov
sti
mov
rolb
div
shr
and
inc
cwtl
outsl
jne
or
mov
or
lret
fstps
mov
sahf
xor
insl
inc
bound
pop
cmp
push
inc
sbb
ja
add
movsl
shlb
jecxz
add
pop
roll
mov
pop
and
ret
pop
fcmovb
mov
mov
repnz
jg
pop
sbb
mov
sbbb
mov
dec
add
cld
outsl
ret
loope
hlt
dec
arpl
pop
xchg
outsb
xchg
sub
dec
mov
idivl
mov
repnz
pop
sarb
and
xor
sets
out
shrb
mov
jp
aam
and
xor
aad
dec
aad
mov
push
pop
inc
push
lea
aam
inc
jg
xorb
mov
mov
add
inc
adcl
stos
pushf
out
jecxz,pn
outsl
ret
in
mov
test
pop
mov
or
inc
xchg
and
cltd
jecxz
imul
lods
jne
loop
inc
out
imul
inc
faddp
mov
aam
xchg
jae
xor
jg
sub
scas
inc
inc
inc
dec
or
xchg
adc
fadds
out
mov
ja
addr16
aad
andl
sub
scas
or
pop
inc
mov
movsl
jg
add
ja
jbe,pt
cmp
mov
lods
mov
pusha
push
mov
mov
adc
add
sub
jl
pushl
movsl
and
push
popa
fnstenv
orb
in
jp
push
add
cli
mov
sbb
aaa
dec
adc
shlb
cmpsl
scas
or
jecxz
mov
shr
adc
xchg
bnd
mov
dec
loopne
adc
xchg
pop
cmpsb
lods
js
clc
mov
xchg
dec
paddw
fnsave
je
lds
loopne
rorl
or
mov
xchg
nop
popf
adc
push
mov
hlt
movsl
hlt
icebp
enter
pop
jbe
inc
mov
push
std
clc
fisubs
sub
xor
mov
pop
in
cmp
jle
pop
xchg
push
xor
out
nop
loopne
test
mov
pavgw
cmp
mov
xchg
dec
minps
dec
shrb
xchg
jecxz
bound
adc
shl
es
and
adc
push
hlt
mov
and
dec
sbb
lahf
leave
pop
andl
inc
mov
ror
adc
and
dec
ds
les
fsubr
jl
stos
je
das
add
popf
outsl
ds
sub
pop
or
inc
loopne
sub
inc
inc
push
push
push
jne
jp
mov
leave
jecxz
psubq
xor
stos
sbb
lods
aas
sbb
adc
dec
mov
mov
cltd
test
pop
or
sub
mov
imul
cmc
push
cmp
mov
jns
inc
ret
add
dec
sub
pop
outsl
mov
loop
xchg
jle
cmp
cmp
stc
pop
mov
inc
xchg
mov
adc
adc
rcrl
arpl
push
jb
insl
mov
push
sahf
or
xchg
les
xchg
call
mov
insl
xor
sahf
cld
stos
xchg
icebp
push
inc
inc
test
shlb
jp
lea
aaa
adc
push
mov
dec
inc
jmp
sub
stos
and
stc
popf
sti
hlt
mov
cmp
dec
mov
imul
int3
movsl
fxch
jno
adc
mov
mov
mov
sahf
adc
lret
and
mov
mov
js
jecxz
ljmp
sbb
dec
dec
insl
and
imul
in
or
pop
into
in
add
cld
notb
xor
mov
jns
jb
xchg
push
push
bound
fimull
gs
daa
jmp
push
test
rorl
or
rol
cmp
push
mull
mov
and
adc
push
bound
pusha
add
cmp
xor
cmpsl
sbb
iret
enter
add
nop
ss
mov
pop
rorl
inc
inc
inc
ljmp
jp
loopne
stos
lret
pop
mov
or
push
fnstenv
lret
mov
xchg
shlb
fnsave
and
jns
sti
push
and
pop
movsl
aaa
sti
data16
mov
push
movsl
and
jbe
jp
aam
sub
jns
sub
mov
mov
xchg
push
push
push
mov
jne
icebp
aam
repnz
xlat
and
repz
adc
leave
decl
push
and
test
and
or
and
pop
cmp
add
mov
xorl
push
test
shll
sbb
pop
cmp
add
add
cmp
dec
scas
xchg
xchg
mov
fdiv
sbbl
lea
in
pop
mov
cmpsb
ja
das
das
stos
mov
sarl
cmc
xchg
add
lods
in
push
data16
inc
mov
mov
sti
daa
out
stos
les
mov
test
lret
jmp
dec
enter
fwait
jmp
xchg
xchg
jo
jno
mov
push
add
es
loop
mov
ljmp
and
sbb
aas
adc
ds
cmp
xchg
repz
in
pop
adc
popf
sub
push
mov
inc
lret
outsb
int3
hlt
dec
jae
lock
mov
adc
mov
inc
lret
pop
js
lret
push
stos
mov
jp
loope
push
dec
inc
pop
ffreep
test
fwait
aas
jnp
lret
pop
xchg
lahf
inc
sbb
mov
stos
popa
inc
mov
or
inc
movsb
sub
iret
add
mov
push
in
xor
add
cmp
loop
repnz
imul
jbe
xor
xor
fbld
sbb
cmp
repnz
pop
fwait
pop
lret
fisttpll
xor
dec
pusha
push
dec
mov
jno
pop
ret
iret
cmc
pop
test
fdivrs
loope
cmp
or
xchg
xor
cmpsb
les
cli
mov
aas
push
push
aad
pusha
ljmp
push
jne
addl
stos
cmp
sarl
lods
ret
xchg
pop
pop
addr16
rcr
and
lahf
iret
xor
sbb
mov
cltd
xchg
adc
fdiv
sbb
in
ljmp
mov
mov
daa
int3
xchg
fidivrl
push
lret
cmpsl
test
fdivrs
sbb
inc
xorb
pusha
fs
mov
mov
mov
pop
cltd
in
sbb
mov
jns
lds
xchg
xchg
pusha
repz
mov
jg
mov
ret
ret
add
ds
ss
sbb
pop
xor
mov
imul
xchg
adc
faddp
fisttps
jecxz
decl
loope
sub
xchg
jle
cmp
xchg
jp
iret
sbb
mov
push
rclb
lods
lds
imul
arpl
mov
jcxz
sub
sub
add
sti
mov
lock
sbb
hlt
push
out
adc
mov
sub
sbb
push
push
pop
sub
test
fs
or
scas
jno
in
xchg
adc
mov
pusha
sub
pop
and
lcall
aad
jmp
fnsave
cmc
push
mov
xchg
cmpsb
mov
pop
cli
scas
lock
es
cli
push
into
sbb
adc
sub
jge
push
inc
lret
insl
mov
xor
adc
loopne
ljmp
cmpsb
xor
std
push
addr16
shrl
sub
ljmp
or
and
movsl
lds
scas
jns
rol
mov
xlat
and
mov
xchg
jne
adc
jl
addr16
cmpsl
pop
push
fidivl
je
cmp
jge
mov
pop
test
cmp
fisttps
imul
lock
inc
xchg
push
inc
daa
mov
cmp
cs
adc
repz
insb
lock
mov
mov
shr
out
jecxz
xchg
xchg
stos
imul
cltd
and
cmp
push
incl
ss
ljmp
sbb
xor
add
jmp
mov
das
pop
ficoml
insl
int
fwait
jno
xor
push
inc
inc
push
imul
lret
fdivrs
jl
sbb
or
mov
cmc
lods
add
pop
cmp
lds
icebp
cmpsl
cmc
adc
cmp
test
mov
adc
pop
pop
lods
add
mov
jo
in
mov
sbb
pusha
fnsave
lahf
pop
int3
nop
pushw
push
or
loop
lcall
imul
lea
mov
push
lds
scas
daa
inc
or
dec
fbstp
xlat
data16
insl
mov
add
movsl
mov
insl
mov
int3
mov
mov
mov
fcmovnb
loop
cmc
rcl
pop
xchg
sub
iret
fsubs
cmp
xor
std
jecxz
push
ljmp
jno
mov
dec
cmp
ret
outsb
sahf
pop
scas
jmp
ljmp
adc
add
push
adc
mov
mov
fwait
ss
add
add
jmp
or
cmc
inc
shrl
test
mov
ja
jbe
and
and
je
inc
nop
hlt
mov
andl
jp
sub
sahf
lcall
data16
jae
popf
add
popf
loop
popa
sarb
cld
pop
jl
add
jb
jns
in
mov
and
inc
mov
ss
rolb
int
push
dec
cmp
adc
sub
rcrl
push
mov
dec
or
and
andps
or
hlt
sub
pop
xor
cmpsb
inc
mov
sbb
repnz
and
cmp
sbb
aaa
insb
jg
insl
sbb
jns
jl
pop
cmp
pop
sahf
sub
cmc
mov
lcall
shl
dec
inc
es
jb
out
pop
int
call
mov
mov
fwait
ljmp
cmpsl
sti
inc
cmpsb
adc
jnp
xor
fcomi
outsl
int3
fidivrl
push
aam
xchg
scas
data16
dec
out
push
ja
cmp
mov
mov
push
sub
mov
fnsave
push
enter
in
sub
insb
das
sub
jno
add
stos
aam
mov
in
stos
mov
arpl
and
inc
leave
xchg
xchg
push
push
or
in
xchg
shl
pushf
xor
sti
lods
clc
xchg
jae
push
ljmp
inc
pop
inc
adc
jle
and
insb
and
rolb
in
cmp
loop
sub
popl
test
lahf
div
cmp
fwait
mov
fdivrl
mov
inc
push
test
ror
pop
dec
insl
iret
gs
pop
sbb
push
mov
fwait
lret
mov
xchg
mov
ret
mov
cmp
movsl
repnz
loope
mov
scas
pop
push
mov
out
in
in
dec
sub
dec
loopne
dec
cli
test
adc
hlt
loop
fsubl
insb
and
mov
sbb
push
dec
mov
add
push
jo
adc
jmp
cmp
js
ret
call
dec
push
popf
out
inc
fcompl
stos
out
xlat
arpl
lea
lahf
push
adc
rclb
add
pop
bound
pop
imul
mov
jecxz
aam
jmp
ja
mov
xor
or
scas
lods
cltd
mov
inc
mov
fnsave
shrb
lock
out
mov
into
inc
aam
mov
mov
cld
xchg
in
jo
mov
adc
xor
leave
xor
sti
ja
or
rcll
dec
xchg
push
jbe
xchg
dec
loopne
inc
pop
aam
sbb
aam
fcmovnbe
jo
mov
xor
and
inc
pop
dec
fwait
xor
pop
xor
sub
or
js
dec
sbbb
xchg
scas
push
in
pop
cmp
loope
in
adc
loop
adc
cwtl
adc
imul
lock
inc
mov
or
hlt
add
outsl
jnp
stos
mov
loop
xchg
cwtl
pop
lods
stc
int
insl
add
cwtl
stos
push
or
or
in
pusha
mov
mov
push
or
les
scas
add
ficoml
imul
add
add
mov
inc
xchg
test
inc
bound
daa
mov
les
idiv
and
jne
pop
sbb
jae
dec
mov
xchg
mov
into
mov
pop
mov
pushf
and
cmpsb
mov
pop
dec
mov
jp
push
push
pushf
rcrb
mov
cmpsl
adc
mov
repz
mov
xchg
xchg
jbe
sub
cmp
push
test
mov
fisttpll
push
push
xlat
jnp
xchg
insb
std
daa
lcall
or
ss
test
aam
pop
xchg
imul
shrb
xor
pop
ja
insl
cmp
pop
inc
nop
cmp
insb
mov
fsubr
int
js
or
pop
mov
loope
and
lods
pop
lahf
jo
test
lret
addr16
lret
xchg
xchg
sub
jne
inc
sbb
outsb
sbb
addr16
notb
popf
mov
rcl
jl
repnz
repnz
insb
xlat
or
inc
mov
dec
into
fstpt
mov
pop
cmp
std
ja
bnd
jge
test
mov
js
fimull
jl
xor
lahf
scas
out
cld
stos
mov
push
and
pop
stos
fbstp
mov
mov
inc
pop
int
dec
outsb
divb
cld
cmp
mov
or
sbbl
sbb
and
or
inc
and
and
and
xchg
in
roll
lea
cmp
push
out
shrl
je
cld
aaa
iret
lea
mov
mov
cld
outsl
cmp
cmp
aam
mov
inc
hlt
mov
add
mov
and
cmp
jne
adc
mov
cmp
xor
mov
ret
pop
mov
push
jnp
imul
lods
ljmp
fs
pop
pop
lret
xor
inc
jne
loope
popf
mov
aas
and
in
cmc
divl
setne
lret
cmpsl
out
int3
dec
call
cmc
andl
jp
push
pusha
sub
popf
jo
or
orl
lahf
lods
push
mov
add
xchg
pusha
jnp
push
or
add
clc
insl
push
scas
pop
mov
mov
fildll
out
mov
jl
mov
dec
addr16
std
sub
jae
mov
lds
cwtl
pop
pop
cmpsl
cs
insb
daa
jp
push
sbb
add
std
jo
lods
fucomp
fisubs
fists
mov
cltd
push
xor
mov
mov
mov
insb
fmuls
mov
cld
jcxz
sarl
xor
adc
mov
push
xchg
aad
ja
mov
in
push
and
mov
mov
loope
popf
lods
jb
adcb
sbb
lcall
je
mov
lahf
jmp
ljmp
inc
fidivs
dec
pop
cli
fsub
and
add
pop
fs
pop
and
repnz
pop
pusha
xchg
sub
mov
adc
popa
pop
sub
aas
test
jnp
inc
lods
xchg
fwait
add
jge
outsl
pop
je
mov
aaa
adc
rorl
xchg
sbbb
stos
mov
jnp
adc
add
or
scas
orb
lret
sbb
adc
xor
or
jmp
sahf
add
mov
cwtl
out
sbb
xchg
adc
mov
mov
test
add
adc
pop
inc
mov
dec
popf
jl
imul
aas
jbe
dec
cli
pop
test
jl
imul
cmp
jge
push
mov
mov
setb
adc
inc
jl
repnz
jns
hlt
mov
test
push
jb
dec
inc
out
aas
jle
dec
push
jmp
ficoms
or
movsb
lahf
sub
xchg
jl
dec
icebp
ljmp
out
rolb
pop
rorl
add
and
xchg
test
push
adc
jae
in
fs
mov
cmp
fidivrl
fcmovnu
push
das
xor
sub
scas
mov
and
pop
sub
cmpsb
out
cltd
jecxz
and
inc
fyl2xp1
lock
cmpsb
and
cltd
inc
ret
dec
pop
mov
nop
inc
lahf
adc
test
pop
xor
js
rcl
sbbl
iret
out
xlat
cmpsb
js
push
es
push
jb
xchg
mov
xchg
cmc
cmpsl
xor
lds
movl
or
mov
lret
imul
imul
xchg
or
lret
movsb
out
push
push
jbe
adc
add
pushf
mov
push
mov
rclb
popa
push
and
ja
das
jnp
sbb
pushf
mov
sbb
xchg
loope
dec
push
mov
fsubs
dec
pop
dec
lret
loopne
pop
mov
je
scas
jns
push
xor
loope
out
das
adcl
pop
mov
shl
jle
jg
call
nop
xchg
cwtl
nop
std
dec
andb
jae
or
jo
xchg
jp
pop
lret
mov
inc
add
fcoml
fucomip
ret
jbe
cmp
mov
popa
rcrl
aam
mov
arpl
ds
cmp
in
mov
scas
jae
mov
and
mov
daa
arpl
ss
mov
shl
mov
inc
sbb
or
aam
mov
mov
xchg
test
adcl
stos
fistpll
mov
fmull
cmc
pop
xlat
add
mov
lcall
andb
outsl
xor
mov
cs
adc
or
cli
cld
sub
outsl
push
out
out
lret
xchg
jns
xchg
out
mov
mov
pushf
jp
mov
scas
mov
add
int3
xchg
mov
lret
fisubl
mov
mov
jne
pop
jmp
popf
fdivrl
popf
inc
push
pushf
fbld
out
or
inc
ds
loopne
dec
cmp
popa
cs
push
push
mov
mov
shl
sub
aam
sahf
jo
mov
mov
insb
popa
cld
fistps
dec
xlat
jl
andl
iret
clc
xchg
xor
dec
add
lods
je
pop
stc
pop
push
xor
js
push
fildl
sar
and
nop
scas
scas
xor
repnz
aaa
jp
in
loopne
leave
dec
repnz
push
xchg
jns
insb
xchg
add
mov
or
aad
mov
xchg
and
mov
daa
stos
enter
mov
repnz
dec
adc
mov
notb
mov
gs
pop
lahf
sahf
add
add
je
pop
mov
push
std
pushf
lret
add
sar
leave
clc
mov
pop
pop
pushf
mov
sbb
cmp
lds
or
mov
int
inc
sbb
mov
add
loope
inc
ds
jne
jnp
mov
dec
pop
mov
daa
test
or
cmp
ret
mov
dec
mov
pop
jmp
std
loop
xlat
insl
hlt
push
insb
clc
inc
or
xor
dec
sub
jne
cwtl
mov
jae
pop
jp
sarl
sub
jmp
cmp
in
insl
decb
loopne
xchg
add
and
mov
ret
fisttps
lods
shld
test
in
add
cmpsl
je
aad
jg
lret
jg
dec
mov
push
movsl
add
cwtl
xor
cmpb
mov
and
xchg
rcrl
movaps
inc
mov
push
jno
or
jg
pop
jmp
ret
fcompl
les
dec
push
mov
in
mov
in
mov
push
movsl
lds
lock
add
mov
cli
push
add
out
insl
and
jecxz
testb
cs
je
js
and
push
and
enter
add
aam
pop
enter
fsts
aas
adc
xchg
jl
and
mov
mov
call
mov
add
xor
xor
aam
data16
xchg
dec
daa
push
pop
mov
mov
cmp
stc
sbb
xchg
or
lock
outsb
cmpsb
cmp
int3
inc
and
xor
sub
adcb
idiv
pop
lcall
dec
in
jmp
mov
test
dec
mov
cld
mov
mov
mov
lds
adc
dec
jecxz
hlt
xchg
dec
add
icebp
adc
test
pop
fiaddl
cmpsl
xchg
pop
movsb
les
aad
sahf
lock
add
inc
pop
dec
out
xchg
es
add
insl
in
sbb
inc
dec
dec
js
cmc
ja
fildll
ret
les
sbb
add
je
int
aad
adc
xchg
int3
push
out
cmp
mov
push
gs
xor
sti
push
lds
push
push
xchg
xchg
loope
lret
xor
enter
and
je
dec
cwtl
fdivrs
dec
idivb
push
push
loopne
pusha
lret
cld
xor
mov
mov
test
mov
out
sub
out
pop
aam
inc
or
push
into
ja
enter
sbb
push
popa
mov
dec
das
incb
lret
sahf
dec
loope
xor
fsubl
push
shrl
notl
push
in
inc
pop
cltd
sti
cli
in
xchg
lahf
mov
test
pop
movsb
xor
or
es
jns
pop
mov
pop
cs
lock
repnz
mov
popf
cmc
adc
sbb
inc
jle
cmp
sbb
add
mov
mov
orl
or
pop
lods
add
repnz
push
and
pop
adc
cli
adcl
jb
inc
clc
sbb
pop
sti
push
rolb
add
adc
faddl
mov
mov
out
xor
add
and
fnsave
subb
sti
nop
insl
jbe
nop
jnp
rcr
or
mov
loop
sub
adc
mov
push
insb
stc
in
ja
das
test
scas
ljmp
addb
inc
test
stc
add
xchg
les
int3
mov
add
xchg
out
pop
mov
and
xorb
fmul
imul
sub
adc
dec
push
cs
js
aaa
enter
ret
ret
notl
aaa
jge
mov
dec
shl
mov
ljmp
mov
jp
mov
mov
loopne
mov
sbb
dec
dec
mov
into
inc
bound
xor
sti
xchg
mov
or
insl
dec
jle
sub
lahf
ss
into
and
inc
adc
pop
cld
outsl
dec
in
insb
add
in
cmp
test
xchg
push
pop
dec
push
test
scas
lcall
fmulp
fidivrs
fnstcw
mov
mov
mov
inc
inc
lret
rolb
mov
cmp
cwtl
test
mov
xor
cmp
lret
cmpsl
sbb
mov
mov
dec
cmpl
outsl
mov
mov
push
inc
pusha
inc
cmp
push
sbbl
in
in
mov
sbb
mov
rorb
insl
xchg
adc
rol
insb
sbb
sti
hlt
push
sub
out
mov
stc
and
sub
dec
pop
ja
les
and
ds
and
enter
mov
push
add
lea
or
jb
mov
fsubr
cmpl
lahf
enter
mov
adc
shlb
int
xchg
shr
lret
sub
add
fisttps
mov
in
jns
xor
push
aas
mov
adc
test
xchg
cltd
inc
fldenv
loopne
inc
or
call
mov
pop
lock
push
mov
mov
fildl
xor
jp
popf
leave
pop
pop
xor
out
out
cltd
pusha
nop
in
add
mov
add
fwait
cmp
or
or
xchg
pop
xchg
aas
loop
std
sbb
and
jae
imul
int3
lds
pop
imul
pop
repnz
ljmp
jl
adc
sub
gs
mov
cmpsl
cli
push
fs
xchg
adc
iret
std
int3
adc
lods
mov
xor
pop
ret
ds
popf
mov
push
mov
jecxz
mov
out
nop
sbb
pop
jg
jge
xor
jmp
mov
clc
ds
test
leave
test
rorb
mov
jo
push
popa
aam
lea
cmpsb
dec
mov
mov
rorl
std
pop
addr16
cwtl
js
pop
mov
subb
adc
cmp
jecxz
sub
cmp
sbb
and
or
test
add
fistl
mov
mov
gs
cmp
fstps
mov
cli
push
adc
sub
pop
faddl
std
mov
imul
stos
xchg
fdivp
or
cmp
sbb
dec
or
fdivrp
sub
cwtl
push
test
sbb
out
aad
inc
outsl
stos
movsl
sbb
mov
adc
mov
sti
or
xor
rcrb
stos
inc
add
sbb
icebp
mov
call
xlat
mov
subl
add
lods
adcb
mov
xor
js
xor
add
jg
leave
int
movsb
inc
and
and
test
xchg
jmp
push
cmpsb
icebp
dec
mov
xchg
xchg
cmp
scas
adc
and
lret
xor
pop
jg
mov
jae
xchg
xlat
stos
or
enter
cmpsl
jns
xchg
sub
frstor
aad
sbb
repnz
nop
mov
cli
pusha
jecxz
mov
loop
jp
ljmp
cmc
mov
sub
test
mov
mov
jmp
imul
je
enter
mov
fwait
jmp
xor
pop
in
nop
fmull
and
xchg
lock
es
mov
aad
in
mov
adc
add
mov
push
out
test
shl
jne
imul
jne
xchg
fldln2
inc
xchg
push
jb
jnp
gs
int
add
scas
inc
bound
popa
notb
inc
lods
mov
add
ss
out
insb
jl
je
stos
inc
jno
loop
sbb
xchg
lods
sub
sbb
pop
scas
ljmp
or
aad
push
push
dec
mov
xchg
adc
lock
jno
add
dec
filds
push
pop
dec
aas
xchg
cli
xchg
ret
and
mov
pop
add
xchg
icebp
adc
nop
sti
mov
imul
pop
mov
push
in
fsubr
or
rol
insb
xchg
sub
out
mov
lret
cld
pop
call
lock
sub
jg
fldcw
rep
push
and
dec
repz
mov
pop
fnstsw
add
sbb
inc
pusha
mov
cmp
add
pop
arpl
or
dec
test
lret
xlat
fmul
mov
push
xchg
push
mov
shrl
mov
aam
rorb
hlt
push
adc
lea
or
jl
jle
and
push
scas
xchg
hlt
scas
test
popa
add
in
sub
or
mov
imul
int3
mov
repz
adcb
outsb
and
test
scas
pop
or
stc
cli
inc
popf
imul
sbb
sti
jbe
mov
lcall
and
pop
add
xchg
rol
les
aad
push
pop
lock
test
in
xor
imul
mov
ds
cmp
jp
ljmp
in
cltd
jp
xchg
sub
pop
cmpsl
stos
xchg
cwtl
enter
mulb
xor
ja
lock
jmp
or
frstor
cld
lret
cmp
jp
add
pop
sarl
jns
xchg
jp
popl
adc
clc
xor
or
or
pop
fbld
arpl
mov
inc
arpl
das
pop
sub
dec
scas
jl
imulb
xchg
add
cmp
cs
jne
mov
cmc
xchg
adcb
repnz
rcl
es
push
add
jmp
scas
xchg
jle
subl
popa
insb
rclb
mov
push
aaa
jmp
out
inc
cmp
loopne
lods
lcall
jecxz
sbb
ret
dec
fwait
pop
pop
insb
inc
sbb
pop
dec
arpl
xchg
shll
pop
xor
sahf
out
cld
jl
test
dec
xor
mov
xchg
mov
fsubl
cmpsb
sbb
sub
and
loop
loopne
jmp
sub
int
sbb
inc
ret
dec
mov
mov
lret
mov
adc
cmc
aas
out
add
out
pop
sbb
adc
add
and
je
cwtl
mov
leave
jns
std
dec
cltd
dec
rcll
movsl
mov
inc
inc
sbb
ds
in
push
in
add
mov
sub
enter
dec
xchg
dec
js
imul
ficompl
mov
shl
rorl
dec
loopne
std
add
adcl
rcrb
ret
mov
cmp
mov
dec
mov
mov
or
mov
mov
jp
mov
or
jl
sbb
int3
jmp
sbb
faddl
add
jbe
sub
fldenv
xchg
mov
loop
mov
cmp
pop
and
fs
ds
icebp
mov
ljmp
push
dec
add
add
stos
stos
sub
notl
xchg
outsb
popf
js
repnz
sub
mov
mov
outsl
outsb
leave
jae
pop
testb
mov
push
jp
add
repz
std
pop
jbe
cmp
insb
cli
inc
and
and
and
lods
cmp
inc
scas
inc
jne
inc
cld
lods
pop
into
addl
js
dec
ljmp
adc
xchg
pusha
or
sbb
arpl
pop
adc
push
push
lcall
imul
test
int
dec
mov
mov
xchg
testb
insl
stos
jp
mov
sahf
out
add
push
lret
lcall
pop
mov
dec
test
cmp
or
push
inc
cmpsl
mov
sbb
scas
ficompl
mov
ret
out
add
cli
sbbl
pop
and
ljmp
mov
loopne
daa
jne
pop
mov
adc
inc
lds
out
or
xchg
jecxz
pusha
dec
dec
call
mov
xchg
mov
jmp
mov
out
bound
xor
lods
xlat
sub
fstpl
lods
inc
jmp
in
faddl
imulb
int
dec
or
loopne
test
sbb
mov
cmpsl
aad
popa
push
jl
xor
push
xchg
dec
pusha
push
jmp
or
pop
dec
rol
stc
test
andnps
icebp
jns
pop
mov
inc
faddl
and
test
xor
icebp
mov
cmpsb
inc
xchg
lock
lret
xchg
mov
jae
xor
out
add
mov
out
cmpsl
inc
pop
call
mov
fimuls
stc
inc
pop
lahf
gs
sbb
out
or
sbb
xchg
xor
jnp
imul
pop
mov
imul
mov
shlb
sub
cmp
sbb
xchg
cmp
pop
dec
shl
add
stos
and
popa
fnstsw
sub
pop
fcomp
mov
xchg
aam
push
xchg
fsubl
fdivrp
hlt
addr16
cwtl
in
and
cmc
loop
jg
repz
in
xor
mov
insb
in
sbb
ficomps
ja
jne
push
fsubrs
imul
addr16
cmpsb
imul
sub
daa
and
mov
cmpsb
adc
aaa
subl
xor
adc
adc
aad
int
dec
mov
cmp
jns
sub
sbb
aas
mov
jae
rol
mov
cld
popf
mov
inc
fists
iret
mov
dec
in
dec
inc
pop
inc
lcall
cmp
emms
cmp
mov
pop
xor
fwait
adc
int
fdivrp
mov
loopne
jns
mov
inc
ficompl
mov
roll
int
xchg
bound
fcoml
cmp
negl
xor
aad
orl
loopne
xchg
testb
jns
dec
cmpsb
lock
call
lods
insb
scas
popf
add
test
xchg
cmp
push
lcall
push
cmpsb
jo
mov
arpl
out
sahf
mov
lea
pop
jecxz
push
cltd
ja
sub
scas
cmc
stc
pop
idivl
sub
mov
inc
and
dec
mov
insl
xor
es
in
inc
loope
popa
xchg
xchg
scas
leave
stos
sub
inc
out
scas
mov
adc
loope
push
mov
mov
aaa
xchg
xor
adc
std
push
insl
mov
ret
repz
test
ret
adc
inc
sub
xchg
mov
dec
scas
pop
out
push
sbb
ret
addl
cmp
mov
popa
popa
clc
cmp
sub
push
test
bound
ja
dec
cmp
in
es
sub
xor
adc
leave
clc
push
clc
mov
and
stc
push
data16
dec
sbb
push
vandnps
push
mov
cmp
cli
xchg
add
pop
xchg
pushf
and
repz
ljmp
imul
fistpll
sbbb
mov
outsb
xor
add
imul
mov
shrb
arpl
movl
mov
inc
ficoms
inc
lret
jbe
and
je
adc
dec
stos
jmp
mov
test
es
xchg
jmp
push
fidivrs
sub
adc
out
out
add
test
bound
dec
dec
popa
test
js
jge
inc
repnz
sbb
fwait
ret
jle
push
negl
shl
mov
pop
or
cmpl
xchg
out
lea
sbb
adc
shlb
filds
adc
jnp
push
jns
leave
xor
mov
or
aad
xchg
push
inc
lcall
push
mov
or
inc
repz
in
repnz
int3
lret
fs
int
roll
adc
repnz
enter
xchg
addr16
mov
push
std
sbb
gs
nop
push
insb
mov
divb
dec
sub
or
push
push
call
addr16
nop
mov
stos
pop
inc
inc
scas
lret
lret
lock
jno
rcrb
lds
cmp
jbe
pop
insl
aam
nop
std
test
pop
mov
mov
push
or
stos
in
test
aad
and
testb
inc
and
jns
je
mov
sbb
mov
lock
aam
das
mov
jp
call
fcomps
outsb
push
out
bound
out
and
xchg
pop
jge
cmp
fisttpll
icebp
sub
lods
jle
insl
lods
data16
or
les
sub
pop
scas
mov
int
add
ss
jge
fistl
insb
out
jo
or
or
fs
fsubl
scas
sub
repz
xlat
in
inc
stc
and
rol
adc
push
in
inc
xchg
je
xchg
outsb
shlb
je
add
insl
aad
mov
addb
imul
movsb
cmpsb
clc
test
jmp
jg
inc
cs
xor
call
cmp
adc
mov
sub
cld
call
add
sbb
fs
pushf
xor
adc
addb
mov
icebp
insb
sub
cli
adcb
jecxz
cmp
jmp
ljmp
mov
inc
sti
xchg
bound
mov
sbb
mov
or
and
repz
xor
and
scas
fwait
jnp
int3
int3
jl
sbbb
adcl
orl
stos
pushw
adc
mov
push
xbegin
fmulp
insb
mov
pusha
xor
jne
jmp
pop
outsb
sub
jb
mov
pop
std
mov
ret
adc
lea
fisttpl
in
into
cmp
mov
mov
xlat
lods
push
add
jnp
mov
shll
shr
or
test
lret
sub
adcb
or
sahf
or
rcr
fwait
mov
push
js
shld
cltd
mov
and
inc
iret
pop
mov
inc
jno
fcoml
nop
in
adc
cmp
push
and
icebp
xchg
mov
cs
push
push
cltd
cld
in
cs
jge
lret
mov
sbb
test
or
aas
adcl
xchg
test
mov
or
aas
cmp
js
bound
outsb
int3
fidivrs
push
sbb
test
xchg
add
sti
mov
mov
pop
sub
mov
and
and
icebp
sbb
cmpsb
inc
cmpsl
xlat
cmp
mov
lahf
call
jge
xchg
xorl
outsb
test
inc
sbb
lahf
or
sbb
and
add
call
fwait
loopne
sbb
xchg
out
inc
adc
inc
into
xor
pop
cmp
xor
stos
sbb
repnz
sbb
mov
mov
out
mov
leave
icebp
aam
int3
sub
shrl
adc
gs
lcall
and
pop
test
rcl
outsl
xchg
jns
mov
push
push
lahf
icebp
xor
mov
add
lahf
js
scas
in
in
cwtl
and
aas
insb
and
adc
das
add
ss
arpl
inc
fucomip
push
insl
hlt
adc
fs
or
pusha
aas
inc
mov
push
and
pop
fidivrl
pop
scas
stc
out
test
mov
fisubs
mov
push
mov
sbb
test
push
jbe
je
mov
and
and
pop
add
push
in
jne
cld
das
sub
fwait
sbb
xchg
sub
hlt
dec
mov
roll
test
mov
in
cmpsb
in
push
or
push
lret
outsl
imul
fiaddl
enter
cmp
aad
jb
push
mov
push
iret
pop
out
pop
pop
daa
add
das
sbb
push
jno
sbb
daa
dec
outsb
jge
icebp
scas
push
cmpsl
lock
int
xchg
fnstsw
push
adc
inc
inc
test
push
les
add
testl
push
dec
push
cmpsb
aaa
push
test
cmp
cs
mov
shlb
int3
sub
clc
mov
insb
mov
shlb
out
test
push
mov
arpl
push
jb
arpl
pushl
ror
xchg
push
iret
inc
in
sub
jmp
fnstsw
mov
clc
insl
jae
ret
add
insb
imulb
mov
ljmp
pop
push
mov
cs
ret
jae
jno
sbb
loopne
enter
in
stos
movsb
repz
mov
addl
xor
lea
jl
mov
pop
fisttps
cmpsb
pop
cld
add
ficomps
rcll
test
fnstcw
sub
pop
dec
sbb
jge
lret
adc
fimuls
xchg
lods
fnstenv
push
fidivs
repz
inc
mov
mov
aam
dec
cmpsb
cmp
inc
dec
les
jle
stos
pop
dec
loop
jg
xor
jno
jns
add
push
mov
cmp
push
sbb
ficoml
mov
add
test
dec
mov
mov
jmp
cwtl
rcrl
popf
push
inc
testl
add
pop
mov
lea
add
cmp
aam
fcomip
mov
call
fdivrs
adc
std
mov
adcb
push
lds
orl
pop
push
ret
lds
sbb
push
xor
cmp
jmp
xor
test
lds
sub
pop
mov
bound
outsl
iret
addb
nop
stos
addb
xlat
sbb
clc
frstor
and
sbb
jns
add
jg
ljmp
shld
in
nop
jnp
or
mov
push
subl
and
xchg
push
mov
andl
dec
push
jnp
adc
jmp
mov
inc
and
lret
jmp
sub
test
insb
sub
inc
mov
loop
je
xchg
jne
or
iret
xor
aad
filds
pop
mov
mov
lods
mov
data16
push
push
inc
fdivs
push
pop
lock
out
outsb
add
movsl
sbb
sahf
jne
adc
sar
pop
push
mov
mov
pop
or
ret
jns
outsb
ret
add
mov
subb
lds
mov
into
loope
dec
add
aaa
jb
and
stos
test
int
cmp
addl
sbb
sub
imul
adc
jge
jae
test
pop
test
push
mov
mov
arpl
daa
ljmp
jle
adc
cwtl
pop
inc
or
push
jmp
xchg
xchg
jp
pop
sar
repz
pop
icebp
adc
cwtl
dec
fs
je
or
adc
jnp
sbb
jecxz
stc
inc
insl
test
aam
and
cmp
jne
out
sti
popf
aam
loopne
in
push
inc
jno
nop
add
xchg
fisubl
out
mov
loopne
stc
sub
sub
inc
mov
cwtl
xchg
pop
mov
pop
scas
daa
clc
xchg
jo
dec
lods
mov
mov
loopne
popa
adc
mov
pop
mov
mov
add
scas
lret
xor
jno
push
pop
xor
imul
jbe
insl
pop
mov
icebp
pop
inc
sbb
sbb
push
dec
das
es
lahf
jmp
xchg
aas
mov
xor
enter
add
repnz
sub
out
test
adcb
mov
push
pop
sahf
jns
ds
jbe
and
dec
mov
fsubrs
shrl
lods
push
push
int
push
scas
scas
jb
icebp
lds
aam
xchg
in
xchg
xchg
daa
fs
fst
lods
sub
aad
js
rcrl
in
outsb
xor
xchg
notb
mov
xlat
ds
pop
mov
jne
mov
mov
mov
in
xor
adc
or
pop
loope
jp
inc
sub
sbb
aad
jbe
jecxz
notb
inc
cwtl
xchg
jnp
xchg
adc
mov
cs
sahf
xor
repnz
adc
sbb
mov
es
test
mov
or
mov
mov
popf
outsl
push
je
dec
int
ret
lret
sbb
mov
pushf
repnz
jbe,pt
hlt
out
mov
xor
leave
mov
jnp
arpl
push
mov
jns
mul
xor
jmp
mov
stc
mov
gs
pop
lds
pop
shrl
stos
jne
subl
inc
dec
cmp
xor
scas
mov
int3
push
xor
pop
repnz
addr16
push
sbb
xchg
jmp
pop
sbb
in
pushf
sub
insl
jg
arpl
sbb
mov
je
pop
arpl
ret
inc
lods
dec
sub
xor
test
dec
rcrl
and
xchg
jle
and
pop
lret
out
mov
stc
jb
ljmp
jne
arpl
jo
push
movsb
jecxz
mov
xchg
mov
outsl
lods
add
aam
pushf
popa
movsb
movsb
sub
or
mov
dec
loopne
pusha
jmp
rcrb
bound
rorl
add
pop
dec
stos
push
in
mov
mov
mov
out
rep
andl
into
data16
sub
pop
fwait
jbe
sarl
loop
movsl
jl
es
into
int
inc
inc
xchg
sub
mov
pop
xorb
xchg
rolb
aad
sub
std
add
daa
jg
cmp
jae
out
bound
mov
aad
sub
iret
cmp
arpl
dec
mov
cmpsl
mov
aaa
into
out
or
int3
arpl
popa
outsl
shll
arpl
fbstp
jnp
iret
and
frstor
sbb
xchg
pop
xchg
cmp
add
mov
pop
adc
gs
sub
sahf
clc
in
shrb
shr
sbb
dec
or
xor
ljmp
xchg
call
fwait
sti
stc
cmp
sahf
es
jo
push
jae
inc
lds
imul
mov
mov
fsts
fdivrs
insb
jb
dec
cmp
xor
or
lcall
sbb
imul
stc
dec
jo
out
mov
mov
add
arpl
or
sahf
test
cs
movsl
cmp
pusha
loop
mov
ret
push
sbb
cwtl
repnz
hlt
dec
sub
inc
fildl
int3
scas
inc
cmpsl
outsl
cli
iret
insl
popa
sub
loop
ficoml
cmp
push
in
xor
shrl
into
das
sub
add
outsb
add
sub
xor
sahf
jo
rorb
icebp
mov
inc
movd
add
mov
testl
mov
mov
hlt
in
jnp
push
adc
pop
pop
xchg
push
xor
jno
mov
or
cmp
jl
in
mov
fdiv
xchg
dec
ret
call
mov
xchg
ret
scas
sbb
sub
rcrl
or
ret
mov
mov
lds
daa
lret
xchg
into
and
outsb
mov
ret
lods
and
or
lock
cwtl
out
rcrl
sub
mov
call
fstp
mov
xchg
jmp
movsl
nop
fsubl
pop
and
aad
fdivs
fistl
sub
ljmp
or
sub
add
popf
icebp
mov
sbb
dec
adc
cmp
inc
sub
aad
sti
adc
stos
cltd
xor
fs
inc
sbb
mov
in
pop
mov
push
iret
and
jo
lods
xchg
jbe
scas
das
push
sub
and
das
cmp
jo
mov
xchg
xor
push
push
jmp
cwtl
aad
xor
cmc
inc
repnz
int3
dec
jl
sbb
dec
loopne
fmuls
jle
adc
inc
sbb
mov
pop
fisubrs
dec
or
imul
ljmp
leave
sub
sti
jbe
mov
fs
jp
fistpl
sub
inc
popa
sub
aad
and
mov
cmp
adc
imul
push
add
jbe
xchg
mov
jae
dec
xor
sub
push
out
sub
xchg
sub
pushf
movsl
clc
or
aad
pusha
fidivs
xchg
cs
fwait
addr16
cmpsb
rolb
adc
xor
pop
add
mov
pushf
push
shrb
loope
pop
loop
dec
fwait
imul
imul
add
mov
scas
out
cmp
insl
test
mov
cmpsl
arpl
aaa
lahf
or
sbb
mov
or
dec
mov
in
cmp
inc
mov
jne
jge
ja
fimuls
sbb
idiv
and
and
jnp
sbb
icebp
or
pop
pop
aam
shrb
jecxz
dec
mov
cmp
inc
cmpsb
pop
cltd
xchg
jmp
mov
jns
pop
popa
sub
adc
adc
bound
mov
fisubrl
mov
in
pop
stos
jmp
fldcw
test
dec
repnz
mov
or
or
dec
pusha
aad
cmp
mov
cmpsb
ret
add
mov
enter
fldl
aaa
les
xchg
or
fidivrl
sti
es
mov
stos
inc
jmp
add
cmp
pop
data16
cmp
push
cld
push
mov
stc
sub
pop
inc
dec
out
loope
add
mov
mov
push
or
mov
sub
adc
stos
cmp
out
lret
es
ss
psrlq
and
mov
lods
jmp
in
rcrl
int
xor
movsl
icebp
test
inc
scas
fnsave
cmp
imul
jbe
int3
jno
js
lods
inc
dec
mov
dec
xor
bound
lds
dec
adc
mov
insb
inc
fiadds
stos
out
mov
cmp
push
popf
cs
rclb
jnp
int
push
arpl
fistpl
andb
loop
sub
pop
pusha
xchg
rclb
icebp
inc
adc
arpl
popa
xor
int
add
pop
mov
inc
ss
push
js
jle
mov
ret
out
addr16
ret
test
repnz
repnz
test
xor
imul
xchg
test
aaa
rolb
add
in
in
jge
push
mov
jne
call
insl
fdivrs
lods
and
nopl
iret
loope
jl
adc
test
add
cwtl
add
cmc
rcr
xchg
pop
int3
lret
int3
jns
addl
sub
jmp
lea
xlat
dec
aam
out
dec
jecxz
or
sarb
sbb
cmp
sub
pop
xlat
scas
or
pop
popa
lret
cmp
pop
cmpsb
lods
test
mov
adc
mov
cmp
negl
loopne
shll
xor
dec
ljmp
ds
cmp
mov
out
xchg
insb
adc
jns
dec
scas
subl
adc
adc
addl
rcrl
mov
repz
push
cmc
mov
adc
jbe
and
dec
mov
iret
jmp
rcr
xor
mov
sub
jne
sub
dec
fwait
dec
push
sahf
adc
add
xor
or
xchg
cs
xor
test
dec
add
lcall
mov
jl
xorl
or
scas
mov
lods
push
xlat
sub
lahf
cmp
mov
rcl
adc
cmp
add
and
out
das
xor
mov
jge
and
cmpsl
fs
rcrb
test
cld
clc
dec
cmp
and
mov
lods
mov
push
nop
icebp
adc
movsb
mov
inc
stos
mov
fucomi
stc
or
adc
and
push
sub
int
das
js
call
fcmovbe
push
aam
pushl
dec
push
mov
fucomp
es
adc
mov
daa
mov
push
jg
sub
jecxz
inc
leave
xor
add
hlt
pop
jno
jge
in
mov
mov
icebp
adc
push
cmpsb
je
add
sbb
mov
das
inc
push
inc
mov
cmpsb
mov
lods
cmp
ret
sub
fsts
xor
clc
adcl
cmpsb
pop
lods
mov
cmp
adc
mov
pop
insb
out
mov
stos
mov
mov
nop
mov
pop
jl
aam
add
adc
jns
mov
push
jecxz
and
sbb
sarb
mov
lea
in
enter
addr16
and
sahf
pop
xor
fcoml
cld
icebp
shrb
std
mov
daa
and
dec
sub
cmpsb
xor
out
repnz
aad
aam
mov
scas
in
ljmp
xor
stos
rcl
pop
data16
pop
sub
shrb
push
jo
imulb
sbb
push
repz
and
loop
icebp
add
inc
and
imul
mov
ds
jae
mov
push
cmpsl
add
adcl
sub
and
adc
pcmpeqw
add
inc
pop
pop
and
out
psubd
pop
movsw
imul
push
insb
ljmp
jmp
jge
xor
jmp
outsb
add
in
sub
jno
ljmp
cmpsb
icebp
mov
daa
sbb
mov
add
push
sub
mov
pop
cmp
lret
jmp
fdivl
cld
shrl
cmp
leave
sbbb
push
inc
stc
mov
mov
sbb
bswap
daa
sti
stos
mov
adc
dec
lea
orl
stos
jle
loopne
cli
jp
cs
xchg
incl
or
push
push
jmp
xor
and
test
add
inc
mov
movsb
jo
sbb
fiaddl
pop
loopne
addl
dec
cmpsb
xorl
shll
adc
nop
pop
mov
sahf
sbb
lret
rol
cmc
cmpsb
hlt
mov
jmp
rol
std
aad
sahf
mov
rcrb
adcb
cmp
pusha
xchg
xor
int
outsb
int3
mov
mov
out
cld
push
ja
xchg
add
fwait
pop
ss
gs
in
mov
or
mov
cmpsb
jnp
push
push
jp
jl
sub
js
fldl
pop
sti
mov
dec
repz
loope
mov
sub
mov
dec
imul
push
popf
sar
into
xor
aaa
movsl
mov
cmc
inc
pop
cmp
push
cwtl
xor
xor
jle
out
mov
pop
data16
mov
popa
cmp
fcoms
popa
add
push
fldl
xchg
test
std
bound
push
inc
mov
test
add
or
int3
sahf
mov
inc
adc
fnsave
das
aad
jmp
mov
ja
lds
notl
push
jmp
repz
mov
cmp
fwait
jb
xchg
rorl
add
lcall
push
mov
and
dec
mov
adc
sahf
sub
repz
movsl
adc
push
loope
jge
icebp
insb
repnz
shr
xchg
push
lahf
sub
in
mov
lret
xchg
inc
lds
adc
pop
jo
in
adcl
in
and
jmp
pop
dec
lods
push
out
cmc
mov
repz
xchg
inc
repz
sti
dec
fcmovnb
aaa
mov
ja
xor
adc
ret
push
inc
mov
and
dec
pop
inc
fnstsw
push
add
insl
jo
sahf
rorb
insb
dec
inc
lds
sbb
pop
fwait
cmpsl
mov
mov
scas
scas
jnp
insb
push
shlb
pusha
mov
mov
sbbl
push
pop
in
je
xchg
jae
push
cli
adc
mov
lret
pop
imul
inc
cmpsl
mov
orb
sub
cltd
imul
push
ret
rolb
push
fwait
inc
and
ds
mov
lds
int3
cltd
das
bound
dec
icebp
out
xchg
sub
das
cmp
mov
ljmp
dec
jecxz
sti
sub
sbb
insl
adc
popa
iret
bound
popa
add
cmp
outsb
or
push
add
jb
mov
cmc
adc
mov
popa
xor
sbb
inc
clc
mov
push
addr16
mov
sahf
push
ljmp
negl
fisubs
outsl
loop
mov
dec
mov
cld
fcmovbe
test
and
iret
add
add
sbb
aaa
xor
mov
lret
ret
ret
jmp
ss
pop
push
inc
call
insl
sub
jne
stos
lea
lret
daa
inc
lret
push
fbld
mov
sahf
dec
loopne
mov
sbb
outsl
inc
cmp
in
add
sahf
push
inc
fsts
sub
mov
aad
jle
dec
ss
in
inc
and
test
ja
xor
adc
scas
inc
lds
clc
rorl
mov
ret
and
push
outsb
loope
dec
adc
xchg
mov
mov
jns
pop
insb
ss
cwtl
jns
mov
mov
xlat
adc
mov
aas
mov
inc
in
icebp
nop
stos
aas
xor
ja
mov
clc
aas
and
ja
pop
enter
sbb
and
push
lahf
mov
dec
jp
fsubrp
pushl
in
test
jmp
add
ss
into
add
sub
cltd
bound
mov
les
inc
out
jns
ret
call
jle
ljmp
mov
lret
or
mov
cmp
xor
jle
pop
mov
sbb
add
push
outsl
ss
push
mov
jecxz
add
lods
jnp
nop
imul
mov
into
xchg
xchg
push
lahf
pop
dec
mov
sbb
cmp
mov
gs
test
mov
cli
movsb
insl
push
pop
repz
or
xchg
jp
xor
push
shrb
inc
xchg
aas
sbb
test
mov
mov
mov
sub
lret
or
cli
mov
mov
sbb
adc
sahf
iret
mov
imul
lds
cltd
cmp
loope
sbb
popa
sub
sub
add
in
cmpsl
icebp
sbb
js
dec
repnz
aas
jl
push
and
test
xchg
in
push
pop
and
cmp
imul
repnz
cmpsl
mov
int3
or
or
push
inc
dec
push
fidivs
lea
ror
adc
sbb
sbb
out
sub
test
loope
pop
popf
insb
icebp
xchg
dec
addr16
dec
in
lock
ss
jo
or
sti
jne
in
mov
sbbb
nop
mov
add
pop
sub
and
pop
push
and
fsubrs
mov
push
das
ss
mov
xchg
enter
push
push
gs
cld
test
sbb
ret
or
iret
xchg
adc
push
pop
inc
in
repz
je
int
pop
mov
ret
jle
push
in
hlt
inc
stos
sub
add
mov
arpl
jo
into
es
push
push
rorl
dec
xchg
mov
subb
jp
mulb
mov
popf
pop
pop
stos
add
xor
ficomps
fldcw
jl
movsb
sub
scas
fdivs
or
lods
divb
adc
lods
mov
repz
fcmovnbe
pop
movsl
mov
arpl
push
pop
jp
xchg
and
mov
clc
lea
test
dec
jnp
fstpt
ljmp
or
sti
push
jbe
xor
ss
and
inc
ja
out
inc
jl
dec
sub
add
bswap
mov
out
dec
gs
or
in
pop
sub
jnp
out
test
cmp
imul
in
mov
jae
and
cmpsl
or
jne
and
jecxz
arpl
sarl
jg
fisubs
sbb
lock
pop
jge
lock
lahf
push
into
popa
insb
inc
insb
mov
adc
enter
ss
add
inc
mov
cmp
shrl
cmp
dec
aad
int3
int
sti
and
sub
sub
sbb
add
push
daa
pop
mov
aaa
pop
das
in
push
mov
andl
jns
dec
dec
pop
aas
mov
xchg
push
adc
xchg
push
add
push
pushf
adc
andl
xchg
lahf
sub
push
sub
adc
pop
jbe
cmp
cmp
insb
inc
mov
ret
cld
cmp
or
adc
loop
xor
mov
sub
jnp
xchg
test
mov
sub
addr16
or
and
addr16
inc
jne
xor
bound
mov
fwait
pop
je
lret
outsb
clc
popa
push
jmp
inc
cmpsb
lahf
sub
add
add
jl
cmp
out
vpmovmskb
clts
cltd
cli
sbb
mov
adc
int
xor
adc
jbe
dec
mov
adc
inc
fdivp
or
scas
inc
fsubp
and
pop
lods
add
pop
or
sarb
dec
imul
in
add
sbb
mov
insb
and
out
fldt
and
push
push
jbe
jno
nop
dec
dec
sbb
add
dec
out
aaa
sub
les
xchg
pop
cmp
cmpsb
clc
add
mov
mov
shrb
sbb
mov
lret
jno
out
and
and
xchg
inc
ficomps
mov
xorb
ja
pushf
movsl
mov
mov
dec
xor
test
mov
outsb
cwtl
pop
fwait
pop
adc
repnz
popa
js
les
pushf
cmp
ljmp
push
ds
fistpl
cmp
cs
push
sbb
scas
stos
ss
mov
jnp
dec
jecxz
hlt
sub
or
push
fsubrs
mov
or
pop
pusha
test
mov
xchg
jmp
jo
mov
enter
jnp
push
mov
in
fsubs
bound
or
mov
iret
aam
sbb
cmp
mov
sub
mov
lods
mov
push
and
xchg
outsl
adc
xchg
test
daa
jnp
pop
lahf
out
aam
pop
pop
ss
arpl
mov
arpl
sub
xor
dec
in
std
loop
dec
pop
sub
inc
xlat
sbb
repnz
cmp
in
test
sbbl
clc
ret
repnz
repnz
hlt
arpl
dec
fistps
push
rorb
leavew
add
sahf
dec
mov
mov
aaa
push
ud2
psadbw
mov
les
push
outsl
aas
or
dec
filds
dec
cmp
pop
addr16
sbb
xchg
push
ja
shrl
sub
dec
pushf
cld
loope
sbbb
lock
mov
xchg
out
lahf
ss
push
push
aad
and
ror
shrb
mov
add
adc
lret
cmp
xchg
cmc
add
cltd
dec
cmp
sbb
xchg
dec
sbb
push
cli
mov
mov
out
test
add
fdivrp
fsubs
add
mov
cmp
cmp
cmpsb
or
xchg
test
in
jp
pop
insl
jge
push
or
mov
and
test
rorl
outsl
ljmp
lock
pop
not
add
lret
ficomps
adc
pop
aas
mov
adc
pop
ds
call
push
shlb
rorl
add
sbb
scas
in
jae
lea
lea
rolb
dec
negl
hlt
fsub
inc
dec
mov
sahf
xor
pop
fwait
pop
dec
adc
xchg
jns
out
imul
xor
inc
les
xor
pop
imul
ds
jmp
aad
xlat
aas
in
idivl
and
bound
cmpsb
push
in
pop
add
hlt
mov
mov
fisubl
std
push
inc
mov
movsb
xchg
and
std
cwtl
pop
add
dec
outsl
loope
mov
adc
xor
ja
aaa
jo
imul
mov
mov
xor
dec
ss
leave
daa
lahf
outsl
shl
in
sarl
rorl
orb
or
fnsave
stos
outsl
jno
sub
mov
push
add
sbb
sub
enter
shrl
aad
sub
jbe
mov
clc
jo
pop
add
mov
jae
mov
xor
push
pop
inc
inc
mov
in
sub
aas
daa
arpl
and
jno
test
loope
xor
enter
mov
dec
int3
fwait
mov
jg
out
adc
sbb
inc
inc
add
sub
and
dec
test
dec
sub
fadds
sbbb
repz
sbb
pop
imul
out
aas
xchg
aam
or
or
aam
mov
or
push
jmp
push
divl
scas
das
mov
xchg
sbb
mov
arpl
push
mov
push
xchg
push
or
imul
mov
hlt
mov
push
in
leave
loop
jns
lock
pusha
add
imul
and
cld
std
int
out
mov
jmp
shrb
xchg
fnstenv
fs
leave
cld
int
fiadds
and
cmp
xchg
and
inc
inc
cs
cli
xchg
int
xor
add
dec
mov
and
lret
sub
add
nop
lock
mov
loop
cltd
xchg
loop
into
jp
leave
insb
fs
in
or
cmc
dec
subb
xchg
inc
xchg
cmp
sub
pop
out
push
mov
jo
ja
das
jmp
dec
inc
lahf
repnz
out
popa
lret
cs
repz
popa
in
jbe
push
xchg
xor
cmp
sahf
loop
sub
scas
mov
hlt
addr16
popa
enter
shll
xor
xor
or
test
pushf
in
sub
lock
jnp
mov
cli
adc
andb
cmp
mov
cld
mov
cltd
cmp
pop
loop
add
pushf
sahf
je
lcall
xchg
pop
inc
dec
push
cmc
cltd
cmp
xor
in
or
addr16
imull
sub
cmpsl
cmp
idivl
pop
lds
loopne
gs
jge
bound
popa
adc
out
xchg
add
test
hlt
mov
push
dec
loop
int3
or
pop
push
stc
movsl
test
cmpsl
fiaddl
stc
popf
pop
mov
ldmxcsr
mov
inc
sbb
mov
lods
js
pop
lea
mov
push
and
into
cmp
out
add
inc
push
insb
sbbb
lea
imul
mov
sbb
movsl
sarl
popa
cld
call
test
inc
xchg
sub
or
lcall
xchg
sti
push
pop
cli
push
mov
dec
clc
xchg
outsl
add
fwait
stos
addr16
cs
jle
jb
ja
jo
dec
inc
pop
xor
fxch
xchg
mov
mov
fdivr
xchg
add
es
aam
sbb
xchg
andb
xchg
sub
mov
aam
leave
add
mov
push
repz
sub
movsb
inc
dec
notl
sti
jo
aaa
mov
jmp
mov
std
ss
mov
repz
in
cld
inc
adc
add
mov
int
pop
daa
and
or
xor
sub
faddl
pusha
fimuls
fistpl
jno
mov
call
add
ljmp
jmp
fsubrs
jae
or
adc
nop
sub
mov
fisttpl
repnz
fisubrs
xor
jbe
cmp
loop
jb
in
aad
add
es
push
scas
mov
cld
mov
mov
aas
les
data16
push
push
out
mov
sbb
and
stc
jecxz
test
cs
xlat
leave
fisubrs
dec
insl
add
pop
je
les
stos
and
popa
je
enter
sub
or
sub
sub
mov
xchg
icebp
mov
fidivs
adc
ljmp
or
nop
inc
scas
popa
inc
leave
mov
mov
imul
inc
into
or
lcall
and
lock
mov
lods
lds
les
cwtl
inc
out
lret
and
mov
cmp
iret
movl
ret
mov
mov
outsl
inc
inc
test
clc
into
loope
mov
testl
pop
mov
je
ficomps
stos
add
scas
inc
add
into
jne
push
out
inc
lret
mov
lahf
in
in
sbbl
inc
or
or
es
dec
int3
mov
pop
push
or
fwait
jmp
xor
push
pop
mov
or
mov
ljmp
push
cs
rcll
jge
mov
xor
xor
inc
mov
inc
pop
dec
xchg
sbb
adcl
xchg
sub
cmp
stos
or
das
lret
test
xor
cmp
push
movl
lahf
push
outsl
push
test
pop
setno
in
mov
ds
or
lods
pop
and
jle
or
call
iret
ljmp
jne
pop
in
dec
pop
push
dec
into
sub
and
popf
push
pop
mov
jo
push
push
or
rol
mov
mov
decb
xor
mov
mov
mov
fisttpl
into
inc
and
das
bound
imul
adc
cwtl
push
cmp
xlat
mov
adc
into
jge
popf
fisubs
lret
adc
and
or
cmpb
dec
movsb
fistps
fidivrs
sbb
jl
inc
sub
add
mov
adc
es
lods
jo
push
in
cmp
fdivrl
lea
test
sbb
lds
fidivs
sub
jl
popa
cld
sub
aam
add
mov
mov
push
xor
rcrl
xlat
sub
std
xchg
clc
pop
mov
cmp
scas
sub
ja
jne
mov
mov
xlat
mov
aaa
into
pop
scas
jl
mov
sahf
or
jecxz
sbb
fst
pop
sub
mov
and
xchg
int3
rorb
aad
push
imul
lock
or
mov
xchg
xor
mov
stc
xor
add
stos
enter
pushf
xor
sarb
mov
jbe
pop
repnz
inc
add
dec
dec
popf
push
pop
jg
adc
xchg
add
jmp
lret
int
mov
push
and
inc
and
push
lea
fists
mov
adc
movsl
push
ljmp
mov
inc
and
fdivl
mov
xchg
xchg
jl
and
mov
mov
lds
loop
mov
pop
mov
rorb
dec
sahf
mov
lea
push
addl
rcll
lea
out
pop
sbb
mov
decl
and
out
dec
and
mov
push
jb
sahf
mov
lret
fsubs
xor
cli
lret
mov
adc
rorl
repnz
mov
scas
sub
test
ljmp
mov
andl
fdivs
in
jb
subb
sti
jnp
insb
mov
dec
icebp
and
mov
jle
jo
cwtl
cmpsb
or
jp,pt
pop
xor
dec
loope
jp
popf
sbbb
sub
pop
adc
add
into
sub
pusha
les
decb
sub
push
pop
sahf
jle
and
rcl
and
dec
dec
pcmpgtw
bound
inc
ffreep
lods
push
mov
test
dec
jne
jg
jo
cmp
in
outsl
sub
icebp
je
out
dec
or
adc
jns
lret
addr16
imul
cwtl
cmp
dec
in
push
cmp
inc
and
orl
shlb
jge
jae
and
stos
testb
iret
rcr
sbbb
sbb
sbb
lahf
pop
cmp
xchg
pop
add
add
mov
push
call
sbb
jo
int3
inc
mov
cli
jle
sub
ss
js
pushf
repz
test
icebp
int3
stos
push
mov
cmpsl
lss
dec
test
dec
leave
hlt
negb
daa
adc
shlb
cltd
mov
cmp
jge
fldcw
or
popl
repnz
aas
in
dec
mov
pusha
mov
repnz
shrb
enter
andl
adc
cmp
insb
jns
mov
xor
fsubrs
mov
pushf
lods
aaa
int3
clc
mov
sbb
data16
fnstenv
add
push
jb
imull
scas
mov
lcall
insb
jae
sbb
pop
repz
cmp
mov
or
aas
cmp
sub
lock
sbbb
xchg
adc
dec
mov
mov
fwait
push
sbb
cltd
jl
sub
mov
sahf
out
fstl
clc
popa
cmp
lret
cli
aaa
stc
cmp
scas
inc
mov
lcall
xor
imul
inc
jp
add
cmp
pop
cmp
or
mov
push
lock
lea
aad
push
in
subl
xchg
push
push
jmp
push
mov
push
cld
scas
fnstenv
sbb
jp
xchg
icebp
mov
lock
adc
jae
fisubl
xchg
lea
mov
rorl
adc
inc
inc
addr16
imul
fstenv
bnd
push
jne
jecxz
push
or
mov
subb
pop
xor
in
push
xor
das
xor
xchg
and
pushf
fucom
sbb
adc
aaa
dec
sub
cmp
xchg
shl
ss
adc
fs
in
jae
insb
jge
daa
mov
xlat
sub
inc
inc
stos
clc
sbb
jns
ficompl
mov
push
test
xchg
mov
cmp
sub
sub
outsb
jg
add
imul
je
fiaddl
lods
xchg
sub
and
aaa
insb
sub
outsl
inc
xchg
jl
inc
ficoml
lods
pop
loop
inc
fwait
jl
pop
and
ljmp
movl
or
adc
ljmp
dec
jmp
je
add
popa
cmp
pop
test
popf
lret
adc
mov
inc
sbb
shll
in
mov
fucomi
insb
out
xlat
fiaddl
in
xchg
int
pusha
mov
sbb
dec
das
sub
pusha
push
test
out
stos
inc
jnp
mov
test
lcall
mov
adc
arpl
pop
loop
nop
jae
inc
loop
rcrl
xor
xchg
pop
out
enter
fwait
bound
inc
test
outsb
or
test
and
jne
stos
mov
int
add
add
mov
fisttpl
adc
outsl
mov
lret
lods
add
adc
push
inc
xchg
inc
js
inc
pusha
add
outsb
std
or
sarl
stc
and
dec
adc
in
sbbl
push
push
jecxz
pop
icebp
in
push
lds
sub
insb
sub
ds
cmc
push
or
insb
xchg
loopne
xchg
inc
sub
cld
incb
and
xor
mov
push
add
jns
and
in
stos
add
lcall
jecxz
cmp
call
mov
pop
ret
loop
and
cmpb
sbb
lret
int3
int3
iret
sbbb
mov
pop
jb
std
cltd
lds
jne
inc
inc
test
xor
push
call
pop
push
cmp
out
aad
mov
and
adc
cmp
fisttps
fistl
pop
insl
popa
xor
fistpl
popa
clc
mov
push
inc
pop
scas
subl
and
js
add
repnz
test
cmc
or
adc
imul
mov
push
shll
push
pop
stos
aaa
cmc
inc
clc
mov
lds
adc
test
mov
mov
push
popf
mov
push
push
ljmp
pushf
rep
sbb
test
adc
sub
xor
js
out
loopne
dec
js
mov
popa
dec
in
jbe
xchg
and
jno
cmp
nop
call
or
scas
cmp
ret
mov
ss
adc
pop
cwtl
cwtl
gs
icebp
test
xchg
xor
mov
and
outsl
inc
inc
inc
sbbl
rcr
jnp
mov
pushf
sub
jge
and
and
cmc
mov
xchg
fucomi
popf
outsb
cltd
gs
mov
mov
xchg
add
lahf
lds
sub
mov
out
add
rcrb
xor
rcrb
xor
popa
mov
shll
ret
aas
cli
mov
test
sbbl
lcall
out
inc
push
sahf
lods
sbb
push
xor
adc
cwtl
fs
call
or
in
push
pop
lock
or
jge
out
mov
pop
dec
insl
sub
add
data16
xchg
addl
pop
add
dec
fdivl
clc
dec
cltd
outsl
out
mov
jle
inc
cmp
xchg
push
and
add
mov
xlat
outsb
or
inc
imul
pusha
gs
cs
mov
xor
add
sbb
push
push
inc
push
cmp
roll
push
xor
jmp
iret
shlb
mov
out
es
cmp
lods
dec
adc
shr
add
or
or
cwtl
mov
add
outsb
push
imul
xor
push
call
and
add
jmp
dec
dec
test
ds
inc
push
pushf
adc
adcb
ret
fstl
or
or
xlat
mov
ret
push
mov
mov
xchg
jp
sbb
mov
data16
pop
push
push
fucomi
push
or
jl
push
xchg
fstpl
push
jp
add
dec
mov
or
ds
xchg
inc
andb
push
xchg
fwait
push
sbb
call
pop
in
in
sti
jle
rcrl
sbb
das
mov
sub
ficompl
orb
mov
loope
loope
cs
leave
or
push
cld
arpl
pop
adc
inc
fisubs
ss
out
adc
sbb
jnp
jno
dec
xlat
pop
rol
inc
int3
arpl
push
mov
imul
xchg
push
add
cmp
cmp
movb
notb
inc
pop
test
clc
push
sbb
and
and
inc
push
pop
xchg
pushf
xor
out
and
or
inc
push
testl
test
xchg
icebp
cwtl
dec
inc
cli
push
scas
movsb
frstor
ficompl
ja
cwtl
xor
cli
xchg
mov
loopne
insl
add
xor
hlt
ljmp
aad
mov
outsl
jo
jl
sahf
dec
pop
dec
dec
movsl
idivb
lods
inc
test
or
iret
mov
pushf
sub
mov
cmp
hlt
pop
cmpsb
mov
loope
mov
movsl
in
sub
jnp
call
aas
push
dec
ret
out
jne
and
and
insb
inc
push
or
push
cmp
fnsave
cmc
xor
xor
pop
aaa
js
lea
adc
mov
enter
hlt
dec
sbb
xchg
aam
dec
repnz
loopne
xor
in
jecxz
push
cmp
ljmp
es
add
int
xchg
add
push
mov
or
dec
pop
jo
test
loopne
shll
mov
or
mov
js
adc
dec
and
ret
cmp
and
adcb
mov
dec
mov
fs
add
and
jbe
push
into
sub
fucom
push
adc
inc
mov
int
pop
js
shlb
or
and
xchg
push
cmp
push
scas
and
test
out
pop
imull
pop
test
jg
shrl
jne
ficomps
sbbb
fucomip
mov
out
dec
pop
or
mov
pop
inc
shll
aad
inc
fcmovnbe
mov
push
mov
xchg
add
jae
lods
sub
scas
test
arpl
cmc
jecxz
xchg
lcall
mov
inc
mov
xchg
mov
and
mov
cmpsb
mov
loopne
call
movsb
movsl
lea
lret
mov
in
gs
and
pop
fmul
sbb
jne
ds
mov
dec
adc
mov
adcb
add
aad
jecxz
sahf
pop
ds
rcll
mov
add
nop
dec
and
lock
inc
dec
sahf
stc
iret
aas
mov
or
mov
stc
inc
inc
int3
cli
lret
data16
mov
xchg
and
int3
cs
shrb
push
mov
mov
and
push
xor
scas
fildll
push
out
push
je
and
ret
pop
cmpb
cmp
xchg
and
int3
arpl
xchg
xchg
pop
scas
lds
jb
sbb
setne
jecxz
add
jle
dec
push
mov
mov
adc
rclb
sahf
or
jg
sub
int
rep
dec
push
mov
shrb
push
pushf
pop
imul
sbb
push
xchg
insl
mov
ret
repz
addl
rcll
sub
cs
sbb
push
push
aam
jg
outsb
lret
es
jo
mov
mov
mov
pop
jmp
movsb
pop
aaa
cmpsl
mov
push
sub
cmpl
and
jle
mov
dec
mov
ret
dec
lock
sbb
sub
loop
jl
das
repnz
sbb
mov
arpl
xor
mov
mov
sub
inc
push
fucomi
in
sub
in
outsl
inc
add
fidivl
and
add
popf
xchg
adc
mov
fnstsw
mov
aaa
into
pop
lahf
mov
jle
mov
cltd
add
rcrl
idivl
int
push
pop
orl
imul
mov
test
incl
into
sbb
fidivrl
xchg
out
repnz
xor
push
addr16
mov
stos
insb
xchg
or
xchg
aaa
sti
jp
cmp
xor
nop
outsb
jmp
push
or
jmp
xor
dec
sbb
jb
ja
and
cwtl
in
xchg
sbb
lret
dec
out
xchg
int
movsb
std
ss
push
xchg
cwtl
sub
mov
add
popa
shrb
out
stos
xor
xlat
xor
mov
pop
fs
pop
adc
stos
push
insb
pushl
lret
dec
push
xor
mov
adc
stos
add
dec
sub
jge
xchg
xor
xchg
cmp
out
aad
and
xchg
mov
pop
insl
lret
gs
jle
xor
orb
stc
lea
repnz
std
arpl
loopne
dec
cmp
cwtl
sahf
xor
loopne
inc
cmp
idivl
and
sbb
sbb
pop
xchg
hlt
arpl
sub
xchg
push
push
sub
jne
repz
repnz
push
dec
xchg
xchg
arpl
jmp
dec
lret
insl
dec
sub
test
sub
mov
and
xchg
std
mov
sbb
pop
add
sbb
jns
pushf
ret
xlat
imul
repnz
xstore-rng
cmpsl
inc
mov
outsb
inc
es
ret
fs
mov
mov
or
cwtl
adc
repz
loop
ret
sub
inc
lret
call
or
popf
jne
scas
inc
and
and
mov
pop
jp
emms
iret
jb
pop
stos
ss
mov
je
mov
add
outsb
cmp
fcomi
out
mov
popf
data16
jge
aam
pop
sti
pop
loope
pop
in
lock
inc
jne
dec
jmp
fst
jmp
or
mov
mov
or
add
or
inc
mov
cmp
adc
mov
xor
pop
xchg
xor
aad
aas
arpl
mov
movsl
mov
dec
int
jne
stos
loop
ja
and
stc
pop
std
or
movsl
test
inc
jb
rcr
xchg
adc
rcrb
adc
push
pop
pop
ss
mov
scas
ljmp
xor
mov
inc
repnz
das
int
sub
dec
inc
inc
hlt
js
jmp
dec
add
jge
xor
xchg
mov
std
and
add
fimull
in
mov
push
in
dec
inc
pop
push
ja
mov
scas
or
cs
mov
xchg
xlat
sahf
jg
into
sub
dec
jecxz
imul
inc
les
aas
ds
stos
pushf
pusha
ret
out
into
das
out
xor
push
ss
adcl
test
paddsw
lea
adc
lea
fadds
xchg
push
sbb
pop
jle
cmp
sub
clc
mov
xchg
hlt
data16
xor
lcall
aaa
jb
gs
dec
cmp
dec
pop
ja
scas
add
xchg
xchg
mov
pop
mov
call
dec
sub
stos
add
popa
test
js
xor
sbb
mov
mov
or
mov
in
push
stos
mov
fdivl
mov
out
mov
test
iret
popf
mov
addr16
out
and
inc
mov
lcall
sbb
out
dec
push
mov
xchg
pop
pop
dec
cmp
gs
dec
cmp
mov
xchg
leave
inc
jmp
mov
inc
sub
lret
psubusb
xchg
sub
xor
into
cmp
xchg
mov
pop
in
shlb
jp
jmp
aad
movhps
mov
sbb
jge
and
adc
test
xchg
out
jecxz
lock
mov
xor
or
scas
push
imul
pop
lds
and
cmp
dec
ret
mov
jb
fsubs
cmpsl
dec
out
push
mov
out
in
mov
ljmp
jae
pop
lea
add
jp
mov
or
stc
jnp
pop
jge
in
add
fwait
scas
xchg
aaa
mov
hlt
push
fiaddl
or
stc
push
sub
jns
push
push
xor
jp
mov
push
xor
sub
mov
jmp
out
jecxz
adc
cmpsb
xchg
inc
cmp
adcb
sbb
xchg
imul
out
sti
shlb
cmp
xchg
fsts
or
fwait
adc
notl
inc
stos
cmp
inc
adc
push
test
aas
jo
pop
mov
pop
lea
mov
lods
inc
jno
pop
xchg
xchg
int3
arpl
inc
sub
in
jl
sbb
jecxz
adc
iret
xchg
push
stc
push
mov
aas
out
cmpsl
xor
cmp
shll
pop
outsl
and
jno
or
dec
aaa
xchg
mov
lahf
pop
inc
pop
roll
sub
fwait
outsb
push
iret
out
pop
sub
icebp
pop
jns
sub
mov
int3
sub
das
cltd
dec
pop
jl
popa
sub
cltd
cwtl
mov
mov
jle
pop
mov
aaa
mov
xchg
jbe
stos
movsb
mov
in
push
lock
in
mov
sub
outsl
add
dec
popa
fdivl
mov
push
jmp
xchg
jb
add
into
push
fistpl
and
inc
lret
clc
addl
lods
outsb
movsl
nop
out
into
in
clc
lods
jg
mov
jno
test
scas
xchg
xorl
lahf
push
aam
scas
in
cwtl
movsl
std
cmp
les
dec
pop
push
outsl
cmpsl
inc
push
cmp
push
aaa
out
sti
push
dec
cli
inc
cmpsl
jmp
call
mov
pop
xchg
or
outsb
fs
mov
add
jl
lahf
cmc
int3
dec
inc
jge
sbb
dec
aad
cmp
dec
addb
test
stos
outsb
loope
xchg
or
popf
sub
fcmovnu
mov
gs
sub
or
out
in
enter
xlat
scas
jmp
shlb
incb
clc
push
pop
movsl
icebp
push
roll
repz
ds
loope
popf
xor
lds
ds
sbb
aad
and
xlat
mov
xor
sahf
jno
outsl
mov
push
jno
push
mov
aad
repnz
push
or
mov
shl
mov
lds
pushf
lods
js
dec
mov
std
jo
pop
loopne
into
das
mov
jecxz
xor
orb
popa
lret
adc
bound
inc
xchg
shl
and
js
mov
pushf
dec
sbb
jecxz
inc
gs
dec
cltd
pusha
mov
mov
fiaddl
aaa
push
sti
mov
mov
pop
jno
repz
and
andb
mov
iret
imul
add
pop
add
mov
lods
out
popf
pop
mov
push
add
xor
sbb
mov
cmc
cmp
jne
movsb
cmp
movsl
cmpsb
ret
ret
shll
and
sbb
xorl
jle
cmpl
push
test
jbe
mov
loop
xchg
jmp
jo,pt
jne
nop
pop
stc
and
xchg
xchg
nop
add
mov
stos
mov
fnsave
sub
mov
fnstsw
push
das
xlat
mov
sbb
push
cmp
mov
dec
xchg
xor
jb
add
mov
dec
cmp
aad
shrb
sub
iret
shlb
inc
daa
fxch
fnsave
xchg
cs
push
aam
xor
fimull
xor
flds
mov
ret
or
sub
arpl
pop
jne
pop
adc
sbb
pop
mov
je
es
sbb
jno
fisubrl
es
pop
repnz
cmp
ja
insl
mov
xchg
fnstcw
lcall
xchg
mov
sbb
xlat
stc
jge
fisubl
inc
sbb
lea
cmp
test
and
rol
inc
xchg
and
cmp
int
pop
adc
aam
mov
in
inc
add
jno
push
test
mov
xchg
movsb
jns
cmp
jmp
fimull
rol
scas
loope
jns
iret
ror
inc
movhps
mov
sub
dec
push
mov
cmp
jl
test
dec
or
in
pop
xor
scas
lahf
jno
in
fwait
shl
pop
sahf
daa
fcoml
out
and
push
inc
inc
or
add
mov
jns
xchg
and
sbbb
sbb
fnsave
push
push
and
cmp
icebp
mov
nop
into
xor
mov
ljmp
sbbl
fsubp
aaa
or
or
or
xchg
add
repnz
popf
fldt
pusha
inc
pop
mov
test
cli
push
jg
jbe
mov
pop
adcl
xlat
mov
and
push
in
and
bound
lods
adc
sahf
dec
fs
cmp
jno
sbb
mov
nop
add
sbb
mov
lock
sbb
aas
mov
xchg
lock
bound
int
cwtl
stos
lods
cmp
xor
inc
pop
std
sahf
xor
std
call
leave
dec
shrb
aas
rorl
fists
xchg
and
imul
add
mov
or
lea
jae
mov
test
data16
mov
mov
inc
adc
divb
push
xor
loopne
add
in
aas
scas
into
adc
lahf
pusha
pop
jns
nop
inc
adc
out
out
xchg
fcomps
mov
daa
loop
mov
in
pop
adc
and
or
mov
scas
lds
or
mov
movsl
in
idivl
adc
push
lock
mov
sbb
mov
nop
jnp
mov
addr16
scas
jp
add
in
or
fwait
mov
mov
mov
mov
push
loop
push
or
xchg
mov
out
cli
aas
movsl
dec
outsl
xor
bound
push
arpl
outsb
jecxz
mov
in
cmp
inc
push
mov
cwtl
xchg
mov
mov
fwait
enter
and
xchg
add
cmp
ja
xor
fs
jp
rclb
fiaddl
lret
mov
arpl
js
xor
and
daa
inc
orb
sub
add
in
cltd
cmp
dec
repz
cmp
and
dec
je
nop
lea
push
mov
insb
push
xchg
fldcw
sarb
ret
lods
xchg
jno
push
sub
stc
aam
mov
pop
aaa
stc
mov
pop
imul
out
sub
scas
mov
loope
daa
lods
or
mov
or
or
xor
dec
jg
jecxz
stos
fldcw
jmp
xchg
jge
dec
not
inc
push
movsl
mov
popf
stos
xchg
nop
jne
sahf
push
popf
movsl
cmp
xchg
sbb
xor
xchg
loopne
fidivs
push
mov
cld
es
out
mov
mov
shlb
lods
fisubrl
fnstenv
add
fs
popf
stc
sub
adc
push
or
push
ljmp
testb
inc
in
mov
aam
mov
jne
add
sarl
add
aam
pop
push
gs
pop
push
sub
sahf
out
cmovb
std
jge
fwait
cmpsl
shll
imul
ss
push
inc
addr16
aam
lret
lret
scas
or
adc
xlat
cwtl
test
pop
cmp
add
std
xor
cmpsl
or
lea
mov
pop
inc
out
movsl
cmp
fisubrl
add
dec
mov
nop
out
ret
lret
sub
shrl
dec
mov
sti
jns
scas
and
roll
fcmovu
in
or
movsl
lods
push
xor
inc
clc
inc
stc
or
adc
push
inc
inc
in
inc
orb
pop
lea
std
repz
dec
gs
jae
jb
movsl
aad
dec
pop
test
xlat
sbb
mov
lock
and
mov
xor
jns
fst
test
adc
dec
and
dec
mov
dec
push
sub
inc
cld
lea
int
pop
xor
testb
movsb
sub
ljmp
lods
addr16
jb
test
movsb
divb
inc
inc
xlat
and
push
enter
js
clc
adc
iret
pop
and
leave
lods
inc
mov
sbb
xor
inc
cmp
and
aas
stos
jne
pop
pusha
pop
bound
mov
push
popa
push
into
rolb
into
fisubrl
lods
in
shll
movsl
add
cmpsb
mov
push
test
nop
stos
and
call
lcall
jns
inc
lahf
and
hlt
sub
fdivrs
bound
dec
jmp
lcall
push
mov
mov
out
fldcw
les
test
ljmp
pushf
repz
push
loopne
dec
test
push
lods
aam
inc
and
adc
jbe
aaa
clc
cmp
mov
sbb
push
add
dec
jle
push
in
push
or
repnz
xor
push
fldenv
and
pop
xchg
push
sbb
dec
inc
cld
stos
test
cmpsb
pop
pushf
sub
dec
pop
stc
mov
aad
fwait
cmp
jmp
jl
push
xchg
hlt
mov
cmpsb
and
sti
fcmovb
test
xor
dec
stos
lcall
popf
call
in
pusha
cli
not
pop
testb
jnp
pavgw
adc
xchg
aas
lods
aam
mov
into
pop
sub
je
enter
jne
int
pop
icebp
xlat
cmp
stc
nop
addr16
cmp
lods
mov
scas
mov
xlat
xor
xchg
push
outsb
mov
dec
sub
repz
mov
mov
adc
inc
inc
ss
mov
imul
mull
ds
cwtl
cmp
fisttpll
or
test
mov
sahf
std
ja
adc
hlt
imul
xor
je
ja
icebp
sbb
data16
xchg
stos
mov
adc
andb
mov
out
lds
cmc
push
insb
xchg
flds
or
imul
mov
movsb
xor
imul
imul
dec
jge
test
out
pop
test
sbb
clc
mov
cmp
and
test
repz
insb
add
ds
jl
ja
push
xor
shrb
mull
jl
push
push
mov
dec
pusha
out
popa
pop
into
jbe
icebp
xchg
inc
push
shll
sti
mov
addr16
ret
outsl
sbb
stos
xchg
cltd
iret
mov
je
clc
movsl
inc
movsl
lret
pushf
pop
add
or
cltd
mov
std
int3
mov
arpl
mov
sub
push
add
mov
mov
add
daa
out
sbb
or
jmp
cld
sbb
sbb
or
hlt
lds
es
roll
inc
popl
or
mov
sub
pop
mov
pop
jae
imul
or
icebp
imul
add
ret
cmc
mov
add
jg
std
fs
ljmp
std
cmp
mov
scas
das
aaa
in
popf
addr16
adc
arpl
lcall
and
add
or
or
mov
jo
inc
call
cmc
sub
or
inc
fidivs
xchg
in
aam
adc
adc
icebp
loopne
out
adc
xor
push
or
cmp
mov
sub
mov
pop
xchg
ja
and
mov
stc
or
jns
int
fisttps
shl
incl
sbb
push
dec
mov
sahf
in
outsb
fnstsw
push
mov
xor
jle
mulb
flds
mov
rclb
sbb
nop
xchg
xchg
loop
inc
out
rol
cmp
leave
inc
pop
into
sbb
sub
mov
dec
xchg
jecxz
popa
adc
mov
sti
div
xchg
sub
pushf
jbe
or
dec
shll
dec
mov
and
loopne
shrl
dec
sub
push
jae
mov
add
pop
fimuls
cmp
adc
mov
and
inc
mov
test
mov
test
jle
push
inc
scas
cmp
testl
adc
mov
insb
dec
nop
pop
movsl
jl
jns
pop
jnp
lret
jae
out
sub
jno
push
xchg
out
jno
imul
sbb
test
fidivl
xchg
inc
cmpsb
cmc
cld
test
loopne
sbb
mov
inc
ffreep
pop
adc
in
mov
sbb
adc
jge
mov
movsb
movsb
aas
inc
fidivl
push
sbb
mov
insl
lahf
test
inc
imul
jbe
ret
jno
and
fildll
shll
xchg
cmp
mov
ss
sahf
ds
jmp
inc
or
cmc
or
add
sbb
pushl
push
sbb
add
je
mov
int
cwtl
sti
xchg
lret
std
std
int
pop
sbb
fbstp
test
xchg
shld
popf
test
pop
imul
or
mov
ficoms
mov
je
lds
popf
cmpsb
ja
mov
rorb
cmpsl
inc
pop
mov
scas
aaa
jns
stc
pop
jne
test
and
popf
rcrl
lock
call
leave
iret
loope
fs
outsl
push
fwait
movsl
sbb
out
cmp
stos
movsl
sbb
push
mov
xor
inc
cmp
divl
mov
sub
or
jo
stos
jl
inc
outsb
repnz
popf
aam
popf
dec
stc
xor
mov
and
cmp
xchg
inc
dec
push
fiadds
xor
inc
xchg
pop
fs
idivl
xchg
sub
addl
sti
and
rcll
or
inc
movsb
inc
popa
push
insl
mov
xor
in
xlat
xchg
inc
sub
stc
hlt
jle
stos
sbb
sbb
je
pop
cld
and
adc
adc
inc
inc
pop
adc
loopne
lods
inc
and
xchg
sbb
jl
int
lret
dec
loope
jbe
cmpsb
dec
sub
fcmovne
loopne
enter
inc
cmpsl
shl
bound
jecxz,pn
stos
adc
cmpsl
ss
stos
ljmp
and
inc
aam
sub
mov
xchg
mov
xchg
int
sbb
jno
jo
lahf
gs
insb
pop
roll
mov
lea
pusha
inc
test
test
out
cmp
and
mov
mov
xlat
pop
xchg
jne
les
nop
cmpsb
sub
flds
fnstsw
xchg
sub
pop
inc
cld
fdivrs
sbb
sub
adc
out
lret
xchg
mov
sarb
push
jb
loop
pusha
push
iret
xchg
lds
cld
imul
sahf
xor
pop
xor
push
insl
and
inc
movsb
jecxz
jecxz
pushf
add
lock
sbb
shrb
pop
inc
lret
icebp
fdivs
insb
cli
popf
xchg
jnp
push
mov
xor
loope
enter
cmp
sahf
dec
inc
sub
xchg
pop
push
jno
inc
jbe
cmpsl
lds
loope
jle
ja
into
mov
subb
add
xor
mov
sahf
enter
pop
jmp
mov
arpl
lock
daa
repnz
daa
lods
dec
imul
aam
cvtps2pd
mov
jno
loope
xor
jmp
inc
and
cli
stos
fs
iret
int3
or
mov
inc
push
pop
adcl
push
cmp
les
mov
push
xor
dec
dec
fbld
dec
data16
push
data16
inc
sbb
sub
scas
sub
das
and
cmpsl
adc
sub
ret
lahf
fnsave
cmpsb
cmp
imul
sahf
add
sub
dec
mov
into
jno
add
cmp
push
xchg
rcrb
adc
push
xorb
cltd
add
fsubrs
mov
orl
rolb
dec
mov
rol
pop
imul
and
insl
add
shlb
and
in
icebp
mov
jne
ja
dec
cwtl
in
push
out
addr16
or
mov
nop
daa
xlat
adc
and
cwtl
in
mov
push
ss
jo
mov
ja
je
lods
jnp
and
mov
shll
in
dec
lods
loopne
jnp
jge
ret
mov
hlt
inc
sbb
mov
stc
nop
jle
push
out
jl
add
sbb
dec
clc
add
or
cli
int
movsb
out
aad
gs
int3
dec
adc
jl
popf
xor
call
mov
lahf
inc
test
pop
mov
jo
or
pop
xchg
jecxz
pop
out
inc
pop
aaa
into
cmp
loop
mov
dec
mov
movsb
out
rcll
add
mov
lea
scas
stc
fsubp
jp
dec
push
ret
lret
daa
mov
or
movb
and
fxch
sub
scas
jne
mov
adc
and
lds
imul
pusha
cmpsb
cmp
in
or
xlat
std
sub
test
xchg
inc
aaa
pop
cmpsb
cmp
and
or
fdiv
xchg
insl
push
inc
lods
stos
aad
hlt
sub
cld
push
mov
test
js
aas
stos
inc
cwtl
mov
inc
in
ljmp
sub
lahf
push
mov
inc
lods
jmp
dec
add
enter
aaa
and
imul
pop
dec
push
fmulp
jge
scas
out
call
imul
mov
sahf
negl
icebp
sbb
fnstsw
js
jge
and
adc
mov
lret
push
add
and
pop
pop
add
cmp
sbbb
icebp
insb
xchg
movsb
or
aam
dec
or
inc
dec
xchg
popa
mov
or
pop
cld
add
loope
lret
push
shrb
aam
sbb
icebp
mov
push
call
lret
test
xchg
cltd
psadbw
subb
icebp
lcall
icebp
enter
lcall
cmc
mov
cmc
jle
inc
add
call
lret
cld
in
out
fists
or
jns
mov
or
sbb
add
push
xor
sub
addr16
pop
aaa
dec
mov
push
int
test
in
repz
sahf
sbb
idivl
repz
sub
pop
cmc
cmpsl
nop
dec
aad
jle
shl
mov
adc
cmp
cmpsb
hlt
sarb
sahf
sbb
mov
cmp
inc
sub
inc
cmp
adc
popf
lods
cmpsb
loope
daa
insb
inc
fstpt
push
sbb
mov
rorb
cltd
dec
sbb
fists
in
sub
mov
fwait
clc
mov
mov
mov
pop
mov
pop
sbb
ds
in
jo
cmp
push
jno
xor
jbe
sarb
test
pop
jmp
or
add
cmp
inc
enter
bound
outsl
push
cli
jle
sub
pop
enter
push
fidivs
shlb
inc
xor
inc
sbb
and
adc
into
add
aas
xlat
sahf
idivb
gs
sbb
fnstenv
xchg
rcll
fcmovu
mov
leave
repz
lds
pop
mov
lahf
pop
stos
repnz
and
push
mov
fsubl
or
mov
push
cmp
and
inc
rolb
xchg
imul
push
sbb
add
xchg
and
and
icebp
dec
data16
adc
mov
fsubrp
mov
dec
xor
jge
lock
daa
mov
cmp
dec
pop
bound
into
jl
mov
cli
fst
pushw
mov
and
and
and
cmpsl
out
sbb
cmpsl
or
push
xorl
decb
setnp
gs
in
cs
sbb
xchg
cli
cmp
in
sbb
pop
nop/reserved
and
mov
test
mov
adc
lcall
in
repnz
lods
mov
enter
int3
fcomps
sbb
aad
and
pop
repnz
cmp
inc
cmp
aam
fisubl
test
shl
mov
xchg
and
leave
sbb
add
mov
mov
mov
add
xor
xor
mov
sub
popf
add
cs
pusha
inc
nop
mov
xor
cmp
scas
imul
pushl
pop
jbe
aaa
pop
lahf
xchg
sbb
sub
gs
pop
xchg
mov
mov
popf
shll
iret
xchg
lock
dec
mov
imull
mov
jmp
and
and
imul
data16
sbb
or
lahf
in
xchg
cmp
arpl
pop
and
mov
xlat
jle
or
xchg
mov
insb
or
sbb
push
sub
sub
dec
cmp
ret
mov
add
stos
into
pop
loopne
rorb
mov
xor
inc
icebp
daa
dec
aam
or
mov
nop
daa
push
aad
mov
lds
sub
adc
jg
xor
mov
cmpsl
pop
mov
lock
mov
cmc
and
mov
dec
cmp
inc
xor
out
pop
jae
push
lret
mov
call
das
or
mov
add
cmp
cmp
sub
mov
out
dec
mov
in
mov
mov
fidivs
sbbb
or
cmp
sub
test
fldcw
insl
gs
xchg
orb
push
mov
xchg
mov
pop
aas
push
mov
jg
mov
dec
ljmp
inc
shld
xchg
add
cld
scas
out
or
fst
adc
fbstp
ljmp
and
dec
mov
inc
push
nop
mov
fidivrs
push
pusha
mov
movl
sub
xor
out
out
and
inc
das
push
mov
bound
int
sub
test
repz
cmp
or
orl
in
cmc
mov
jns
shrb
sub
xor
fs
xchg
xor
dec
inc
xchg
xor
stc
cmp
or
pop
sbb
cmp
pop
lock
mov
push
in
data16
inc
lods
sbb
out
jmp
mov
push
pop
jb
and
addl
inc
fbld
repnz
lods
ja
lock
add
nop
pushf
shrb
test
dec
dec
cmc
dec
cmc
imul
push
fs
xor
push
loop
je
int3
pop
js
add
xchg
ret
outsb
xchg
sub
mov
cmp
dec
in
jnp
mov
inc
and
sbb
mov
cmpsb
pop
js
mov
outsl
daa
pop
and
fs
mov
aas
popf
or
loopne
in
inc
test
pushf
pop
mov
jmp
into
and
adc
inc
jb
stc
xchg
insl
adc
int3
mov
fsts
xchg
or
inc
inc
les
popa
or
sahf
inc
xor
cmpsl
popf
adc
ja
xchg
jnp
adc
xor
jecxz
mov
cld
mov
mov
dec
mov
outsb
xor
mov
push
ror
es
mov
ljmp
pusha
cli
dec
loope
pop
mov
ljmp
sub
sbb
ss
pop
ljmp
mov
pop
inc
shlb
add
fbld
stos
push
imul
into
es
pop
xchg
xchg
leave
inc
inc
and
insl
and
stc
sahf
je
sub
add
into
outsb
out
mov
scas
loop
cmp
add
repnz
mov
ficompl
test
in
dec
lods
aas
push
loop
bound
lods
mov
rcl
lcall
std
cmp
in
inc
popf
push
loope
inc
push
inc
xchg
sub
push
cltd
pop
mov
mov
inc
xlat
xchg
sub
lods
out
in
dec
mov
xchg
xchg
cmp
stc
adc
call
cmpsb
je
fnsave
push
sbb
jbe
insb
ds
sub
repnz
mov
and
loope
mov
shl
out
lea
adc
pop
enter
stos
insl
jbe
andb
sbb
sbb
arpl
mov
jg
adc
jmp
and
cld
push
add
jp
movsl
mov
add
ds
dec
jle
inc
jle
mov
fs
nop
in
cli
ljmp
or
xchg
inc
fwait
ljmp
inc
decl
xor
xchg
inc
gs
popa
sbb
cltd
lock
and
rclb
inc
insb
loopne
das
js
add
sbb
clc
sub
ret
and
pop
clc
aam
cs
or
out
inc
imul
adc
pop
push
or
sbb
pop
push
jns
scas
jb
sbb
sti
loop
enter
insb
push
imul
fldlg2
pop
sbb
sbb
mov
lcall
in
jnp
ficoml
cld
imul
lods
aaa
dec
imul
ds
aas
enter
popa
jmp
mov
stos
inc
pop
xor
add
sbb
enter
cmp
ja
cmpsb
sub
inc
or
pop
lret
lock
insl
push
insl
add
push
fstps
fistl
call
scas
hlt
lds
or
stc
popf
xchg
shll
and
push
adc
out
xchg
cmp
xor
out
enter
gs
test
out
das
lds
testl
into
aas
sbb
iret
cmp
lahf
arpl
or
lea
fsts
mov
pop
cmpsb
mov
sbb
inc
dec
movsl
mov
adc
mov
inc
popf
ljmp
lock
jne
inc
xchg
loopne
xchg
mov
or
stos
xchg
lret
bound
loope
jge
lock
shlb
pop
dec
sbb
outsb
lds
push
xchg
and
adc
push
aam
jge
push
pop
dec
adc
push
add
push
xorl
add
in
xchg
or
xchg
loope
adc
or
dec
xor
push
test
sub
mov
sbb
cmp
and
jp
out
push
in
incb
stos
xor
dec
sti
repz
pop
jp
sbb
xlat
xor
or
and
sbb
mov
cwtl
movsb
push
or
xchg
dec
add
lcall
push
add
xchg
bound
sbb
sarl
lods
mov
xchg
outsl
sbb
xchg
mov
stos
xor
filds
sub
mov
icebp
jge
fimuls
adcl
cmp
mov
out
pop
aas
mov
fbstp
sahf
out
xchg
xor
test
ss
xor
mov
gs
adc
sub
mov
or
das
sub
test
mov
mov
pmaxsw
pop
cmp
mov
je
pop
xor
dec
fwait
das
rcrl
or
push
cmc
xchg
mov
aam
dec
and
outsb
daa
pop
lret
shlb
dec
in
jbe
pop
mov
cs
test
inc
in
mov
and
rolb
jl
mov
sarl
out
push
pop
pop
mov
cmp
mov
pop
xor
or
pop
mov
enter
xchg
arpl
mov
repz
jmp
push
xchg
idivl
xor
mov
loopne
xchg
inc
test
mov
lods
subb
out
fisttps
xor
test
loop
mov
dec
mov
out
sub
dec
xchg
aaa
and
mov
xchg
fcomp
clc
into
in
pusha
aaa
sub
incl
adc
jne
push
mov
lret
les
mov
jp
inc
insl
mov
xchg
push
jns
js
fidivrl
mov
mov
mov
jo
jmp
sti
pop
dec
cs
dec
xchg
loop
fisttpl
loopne
insb
inc
pop
adc
mov
mov
mov
add
adc
push
jmp
roll
mov
xor
lods
je
scas
and
pop
pop
andl
sub
cmp
imull
mov
in
popa
or
icebp
lret
in
mov
popa
dec
aam
and
jp
sbb
push
int3
mov
loope
out
jo
xor
les
jmp
pop
cmpsl
jg
push
or
sub
sarl
shr
push
andb
pop
ss
adc
stos
sbbl
or
cld
repz
pop
and
popf
lods
sub
mov
aad
xchg
mov
mov
mov
repnz
mov
jns
push
mov
imul
mov
ret
mov
jecxz
inc
sarb
repnz
icebp
jb
popf
cld
loope
ja
pop
inc
add
or
lock
in
inc
das
out
sub
xchg
fmull
mov
pop
rclb
pop
jecxz
popa
cmp
push
cld
sahf
xor
push
jnp
sbbl
and
cmp
repz
in
push
adc
push
sub
xchg
sub
lahf
pop
movsb
xchg
outsl
pop
mov
outsl
mov
mov
ja
jmp
push
rorl
jl
sbb
clc
adc
jge
add
popa
pop
out
mov
mov
xor
inc
test
push
sub
pop
stos
ss
pop
xchg
jb
xor
adc
cmp
jmp
add
xchg
sbb
fisubrl
or
insb
mov
xchg
lcall
sbb
aam
and
jle
add
add
inc
mov
pop
mov
push
jae
mov
mov
jne
xor
cmp
ja
push
xchg
ss
pop
jl
mov
push
movsl
cltd
sub
pushf
fbstp
jno
loope
fimull
mov
mov
call
inc
cmc
adc
push
int
daa
cltd
sub
loopne
mov
pusha
mov
push
ret
aam
pusha
pop
daa
cmp
jmp
push
pop
jmp
fidivs
fwait
scas
xchg
dec
out
cmc
mov
imul
jno
pop
call
negb
adc
mov
push
jne
xor
inc
xchg
in
fildll
sbb
add
dec
cmc
arpl
test
pop
lods
out
std
test
clc
ljmp
inc
inc
or
mov
pop
inc
or
insl
js
cmp
push
add
jecxz
lock
mov
mov
mov
jge
mov
add
pop
aam
pop
cmpsb
jo
push
and
jno
push
xchg
pop
push
jo
mov
mov
sar
int3
dec
fwait
jb
cs
push
inc
and
imul
dec
cmp
pushf
rclb
rclb
mov
in
aaa
clc
or
imul
inc
shl
orb
popa
add
ja
pop
lods
out
xchg
cmp
xchg
cwtl
in
pop
lock
and
push
fwait
inc
xor
push
dec
adc
arpl
fldcw
or
and
movsb
jnp
and
adc
mov
in
arpl
cmp
inc
ret
fsubr
repz
imul
dec
lods
or
out
push
addr16
das
lcall
and
add
test
shrb
sbb
xlat
jecxz
sbb
dec
xlat
ret
ret
movsb
les
pop
mov
push
ja
lahf
std
js
imul
nop
js
xlat
pop
dec
loopne
mov
enter
mov
or
shrl
imul
jo
idivb
adc
dec
mov
cwtl
sbb
or
insb
test
cmp
cmp
cmc
sbb
cmc
mov
int
ficoms
test
mov
sub
outsl
out
inc
inc
xor
xor
in
xchg
xor
bound
test
dec
es
inc
fildll
gs
cli
push
pop
mov
add
cmp
add
jnp
insl
movsb
movb
mov
test
jge
fwait
lds
cmpsl
add
fdivs
sbb
jne
mov
inc
roll
mov
push
dec
add
push
add
lods
popl
and
popf
je
cld
xor
mov
loope
dec
sahf
push
insl
test
mov
lret
clc
adc
xchg
mov
fstps
out
pop
and
js
add
jne
dec
in
in
and
push
jb
mov
sti
pop
sub
cltd
imull
sub
mov
mov
jnp
outsb
sbb
dec
iret
push
movsl
add
or
xchg
push
jnp
insb
xor
pop
lock
lods
xchg
mov
add
xchg
stos
lret
es
adc
lret
and
ljmp
loopne
gs
mov
cmp
addl
int
inc
in
pushf
pop
es
push
ds
lods
sti
test
mov
push
lds
inc
mov
pusha
enter
fdivs
lea
cli
adcb
int
aas
jl
sahf
scas
stc
popf
pop
inc
test
negl
out
jbe
mov
decb
pop
imul
push
in
xchg
fsts
mov
dec
loop
add
div
movsl
movsl
sbb
mov
movsb
outsl
lds
or
sbb
lea
insl
mov
fistpll
popa
sbb
push
inc
scas
insl
test
arpl
jp
into
mov
add
xor
cmc
adc
das
mov
inc
iret
movsl
test
dec
xor
test
test
sbb
bound
scas
jmp
cmp
int3
or
in
test
adc
lcall
pop
mov
xor
adc
repnz
fstps
mov
rolb
xchg
out
mov
lret
enter
adc
shrl
leave
add
das
mov
rclb
mov
push
add
aaa
movsb
inc
jne
loop
fs
dec
xor
fnsave
push
mov
sarl
mov
lret
fucomi
cmc
sbbl
push
push
adc
sti
xchg
push
filds
adc
ja
xchg
xor
pop
dec
jecxz
xor
inc
lods
jmp
inc
mov
jmp
pop
cmpsb
xlat
jb
cmp
inc
xor
xchg
push
mov
and
or
xor
fwait
push
arpl
mov
sbb
jecxz
jns
ret
jle
push
ljmp
dec
lahf
push
xor
pop
icebp
pushf
fnstsw
aas
test
les
inc
in
incl
pop
sahf
icebp
les
add
jno
hlt
mov
mov
stc
xchg
adc
mov
inc
in
mov
xchg
jne
mov
inc
jb
sub
rolb
pop
aas
cmp
jo
inc
testl
sti
rorb
ret
test
push
mov
scas
mov
insb
xor
inc
jecxz
iret
enter
sti
mov
fnsave
jg
in
add
dec
mov
rcl
repnz
cmpsb
mov
sbb
pop
or
push
mov
mov
mov
jb
out
jmp
aaa
mov
loope
adc
push
dec
out
mov
or
nop
cmp
jg
lods
cld
rcrl
mov
jl
and
stos
std
inc
stc
ljmp
mulb
movsb
cmp
aad
mov
inc
lret
fisttps
loop
pop
imul
nop
clc
into
jb
jecxz
mov
dec
in
stc
scas
outsl
mov
sbb
mov
gs
xor
sub
jae
jg
fwait
and
dec
enter
mov
sbbl
ds
sahf
lods
xchg
cmp
or
jg
sub
or
xor
xor
add
sarl
pop
hlt
cmp
or
sub
enter
mov
lret
les
push
test
or
lods
push
sub
adc
xchg
and
push
cmp
jmp
jns
or
neg
in
add
pusha
fwait
and
popa
pop
mov
lock
das
mov
push
in
push
out
cmpps
mov
push
jmp
testl
sahf
jnp
xlat
stos
in
scas
add
dec
dec
outsb
add
mov
dec
lock
into
inc
enter
insb
sub
pop
cwtl
xchg
push
xor
pop
xchg
outsb
sbb
pushf
cmp
hlt
fdivrl
cmp
dec
nop
inc
jp
lea
data16
imul
cmp
clc
sbb
jmp
sbb
pop
add
pushf
mov
push
lahf
dec
push
sbb
lahf
insb
imul
mov
out
fs
xor
xchg
negl
enter
cmp
mov
lds
inc
xlat
adc
add
mov
adc
repnz
cmpsl
vpsubusb
bound
mov
mov
rolb
jb
jne
push
cmpsl
mov
test
add
xchg
mov
data16
testl
mov
sub
sub
pop
dec
dec
ret
outsl
shl
je
roll
pop
out
and
nop
mov
fbstp
inc
fcoml
shlb
jbe
xor
xchg
mov
shrb
in
dec
pop
cltd
outsb
in
mov
dec
add
or
xor
fbstp
ret
repz
std
pop
hlt
roll
push
ret
sahf
xor
cltd
lcall
mov
ss
fwait
jne
pop
mov
scas
adc
int
jp
mov
xor
shrb
test
lret
cld
aam
push
and
sahf
and
icebp
clc
nop
fists
or
sbb
jle
aas
mov
out
popa
imul
mov
dec
xchg
add
test
mov
add
push
shlb
int3
lret
push
push
add
xchg
js
mov
lea
xchg
add
xchg
adcl
adc
pop
jo
adc
out
out
iret
pop
sti
mov
out
sub
push
sbb
scas
mov
ja
mov
dec
movsb
cmp
test
int3
gs
bound
imul
rclb
xlat
jns
mov
push
out
test
jb
fbstp
xor
cmp
stc
rorb
dec
mov
xchg
fdivrs
mov
pop
imul
cmpb
mov
cmp
xor
lea
mov
nop
mov
sub
cs
ljmp
push
ds
into
pop
cld
in
pop
repz
push
jae
adc
mov
sbb
ds
scas
test
stos
loopne
push
mov
xchg
cmpsl
or
ret
sub
cmp
ja
subb
pop
cmpsb
push
incl
shll
and
push
jecxz
push
xchg
into
addr16
sbb
jbe
sub
jecxz
movsl
fwait
cwtl
test
lret
and
arpl
inc
mov
int
mov
enter
add
lods
pop
addr16
fidivl
sbb
les
xor
xchg
inc
repnz
or
js
int3
pusha
xor
fmul
push
ljmp
jno
and
and
inc
dec
jbe
xor
jle
adc
pop
andb
insb
jne
ret
aam
or
repnz
xchg
jmp
dec
sub
adc
out
addr16
imul
in
icebp
movsl
data16
ror
mov
test
mov
cltd
movsl
insb
ja
sbb
push
jg
lret
xlat
adc
sbb
xor
stc
mov
ret
jg
mov
cmp
rorb
xchg
popf
sub
test
push
fisttpl
xchg
jmp
or
jbe
jns
and
iret
daa
jne
movsb
pop
mov
fsub
scas
sbb
add
repz
push
inc
stc
jecxz
adcb
push
addr16
push
xlat
pop
push
in
inc
or
pop
add
mov
shll
aam
dec
lret
loop
inc
pop
mov
pusha
loop
out
pop
repz
in
orb
adc
sub
lcall
das
mov
cltd
push
mov
les
out
iret
xlat
scas
jnp
lahf
sbb
pop
sub
scas
xchg
bnd
and
in
popf
ret
sub
out
xor
mov
sti
clc
push
or
fwait
mov
jg
xor
sbbl
mov
mov
rorl
lods
pop
popf
mov
fisubl
push
xor
push
aas
push
push
sahf
ss
xchg
adc
cmc
pusha
mov
fldlg2
int3
movsb
push
mov
pop
xorb
push
dec
dec
das
lret
pop
sbb
fs
mov
mov
ljmp
lds
in
cli
shlb
fs
sub
dec
mov
aam
mov
bound
lods
xlat
push
push
inc
jmp
addr16
sbb
jns
mov
pop
std
jbe
das
andl
mov
jmp
xchg
xor
jmp
aad
push
sbb
xchg
push
inc
jno
cmp
pop
jp
xor
mov
shrb
mov
sti
aam
sbbb
sbb
xor
xchg
fisttpl
cmpsb
dec
cmp
pusha
dec
pop
sbb
push
xchg
push
shll
lcall
cwtl
stos
cld
jno
lret
cs
sub
enter
or
mov
add
push
in
mov
insb
or
mov
xchg
and
inc
sbb
add
stos
xchg
arpl
mov
sahf
xor
stos
test
push
dec
cmp
push
lret
das
xchg
sub
aam
mov
in
inc
bound
push
jp
mov
fmull
pop
cld
stc
pop
mov
outsb
mov
ficoml
mov
cmpsl
mov
cli
test
ja
shr
cmp
and
pop
jp
mov
lret
adc
sub
push
push
in
test
xor
insb
push
stc
int3
gs
mov
cmpsb
repz
fimull
cmpsb
loopne
in
push
or
xor
add
frstor
xlat
insl
or
test
fistps
loop
inc
call
mov
call
mov
cwtl
ds
sub
ljmp
outsb
imul
pop
outsb
mov
pushf
add
cmp
cmp
xlat
in
cld
xchg
jb
adc
roll
sbb
aad
cmpsb
popf
rcrb
iret
xbegin
jge
rorl
sti
xchg
loopne
bound
test
xor
fistpll
xchg
mov
popa
jmp
shrb
lods
int
pop
shll
fwait
std
inc
ret
cmpsl
mov
outsb
out
or
and
jo
jecxz
addl
cwtl
push
pop
insl
aam
and
scas
xchg
orb
bound
xchg
outsb
fwait
loopne
scas
dec
cs
and
fwait
hlt
bound
or
orb
and
out
jge
sbb
inc
scas
sub
stos
jp
push
jo
sbb
jle
dec
clc
jle
ss
iret
ss
add
scas
mov
or
dec
inc
and
cwtl
add
push
jg
dec
in
orl
das
arpl
adc
hlt
pop
insb
inc
mov
lds
adc
cmpsb
sbb
push
mov
insl
aam
xor
shl
popa
out
adc
sub
test
subl
jae
cwtl
mov
ror
flds
fsub
int
popa
adc
mov
pushf
pop
mov
adc
mov
lods
pop
test
out
enter
sub
inc
xor
outsl
jmp
or
sub
pop
sub
dec
pop
movsb
or
jle
add
jp
cmp
shll
jg
int3
sub
jno
sbb
or
daa
arpl
insb
mov
gs
xchg
jg
xor
mov
jecxz
getsec
sub
inc
fmuls
icebp
adc
pop
out
test
xchg
int3
mov
adc
lock
mov
mov
or
mov
ret
addr16
hlt
ret
fmull
ficomps
pop
push
insb
test
sbb
in
mov
fnsave
mov
and
leave
pop
push
and
lahf
push
push
les
push
call
jbe
jmpw
iret
mov
mov
mov
jmp
dec
dec
mov
push
inc
inc
inc
std
cmp
add
xor
mov
cmpsl
sarb
xchg
mov
dec
sahf
aaa
scas
inc
or
fsubrp
cmp
mov
inc
pop
cmp
jg
inc
aad
sbb
pop
hlt
out
cmpsl
inc
jp
jl
mov
je
adc
mov
subl
adc
mov
pop
aas
and
and
sbb
and
or
lods
cmp
or
aam
stos
jns
cmc
mov
xchg
adc
fwait
ret
imul
mov
mov
loope
lods
adc
and
or
push
fistl
aas
and
test
in
test
inc
xchg
fstpl
sahf
les
movsl
mov
stos
inc
jnp
insb
add
dec
in
cmp
arpl
loopne
jmp
scas
or
les
add
xchg
cs
fisttps
insl
add
or
dec
sbbl
daa
inc
mov
and
adc
push
and
fimull
jle
int3
arpl
test
ljmp
insl
or
inc
lds
inc
pusha
inc
out
pop
pusha
add
js
mov
xchg
popf
scas
call
cmp
sahf
mov
test
jo
pop
pop
dec
cmp
mov
mov
aad
fcoml
pushf
shr
adc
js
xor
xor
xchg
mov
add
js
xchg
inc
jo
rcrb
test
mov
loopne
mov
cld
sbb
int
push
lods
das
add
dec
or
cmp
mov
test
insb
iret
js
jae
test
sub
fnstenv
mov
lods
xor
xor
inc
mov
or
sti
aad
mov
jmp
ds
push
out
inc
jne
lods
outsb
or
add
inc
sbb
add
pop
cmp
loop
cmp
push
cli
pushf
adc
ljmp
int
fsubs
mov
cmc
daa
fcompl
add
cmp
lret
mov
jmp
xor
dec
pop
jmp
adc
icebp
cmp
lea
sub
pop
sub
pop
push
sbb
rclb
int
mov
push
jp
pusha
test
pushf
aaa
nop
cwtl
cmp
jmp
mov
outsb
mov
shll
aad
cli
outsb
push
push
sbb
stos
dec
inc
adc
xor
dec
rol
in
lods
scas
push
je
ljmp
xor
icebp
push
imul
sbb
ss
dec
pusha
test
int
push
mov
adc
push
or
pop
or
push
loop
insl
sbb
push
mov
ja
mov
mov
call
popa
aam
sub
or
dec
in
stos
dec
fcomp
jo
mov
and
outsl
sbb
push
out
jl
mov
loopne
add
stos
add
shlb
test
add
push
mov
les
cmp
xchg
mov
loopne
ret
arpl
mov
sbbl
lahf
inc
outsl
lcall
sbb
adc
xor
add
xchg
inc
lahf
mov
mov
daa
mov
int
inc
or
mov
arpl
jmp
ss
sti
imul
dec
cmp
in
dec
pop
or
add
inc
push
cmp
xor
call
push
mov
fmuls
and
das
sub
mov
mov
mov
aam
mov
cmp
push
mov
imul
pop
push
jo
mov
mov
fsubl
pop
ljmp
ja
clc
add
pop
cmp
jmp
dec
cmc
xchg
rol
pop
movl
aad
fwait
adc
adc
fs
xor
fisttps
int3
fnsave
nop
adc
xchg
ljmp
imul
lret
div
sahf
jne
mov
cld
push
orb
pop
in
in
shll
mov
push
jp
jbe
mov
test
cmp
push
or
hlt
mov
mov
ds
test
mov
je
ljmp
push
xor
jo
dec
loope
jne
jl
rol
lcall
imul
pop
sahf
or
insl
jl
lahf
insl
cli
xchg
mov
adc
scas
mov
sbb
jg
jbe
stos
mov
add
cmp
ds
icebp
loop
or
js
inc
dec
clc
or
fucom
mov
jb
and
fwait
sbb
ret
xchg
jns
stos
inc
scas
sbb
add
enter
std
loop
jg
leave
jge
ds
jbe
add
clc
push
stos
cli
jne
arpl
xchg
pop
xchg
add
mov
mov
out
xchg
add
xor
mov
push
jmp
test
in
cmp
mov
aaa
fwait
add
or
lods
shl
cwtl
loopne
mov
fldl
lock
xchg
vtestps
scas
leave
lret
jb,pt
insl
mov
cmp
and
xor
mov
lea
mov
sub
cmp
dec
pop
or
roll
fidivl
mov
sbb
or
f2xm1
cmp
popa
and
gs
jno
mov
fcmovnbe
imul
cmc
push
or
add
test
test
mov
fcomps
faddl
popa
fmull
cli
sbb
adc
xor
pop
sbb
jle
cmc
in
mov
add
jbe
rcrl
pop
mov
or
es
dec
add
xchg
push
mov
jb
fisubrs
pop
out
pop
pop
fildl
dec
jo
push
and
sti
ja
mov
mov
cmp
cmpsb
daa
cmp
pusha
gs
stos
loopne
cmpsb
pop
sbb
repz
add
fldcw
jb
add
add
dec
inc
lret
insl
test
mov
adc
xor
jns
into
stc
adc
daa
jnp,pt
dec
jle
jmp
insl
sahf
fs
mov
adc
add
adc
rorb
cmp
hlt
mov
mov
xchg
std
cmp
cmpsl
iret
adc
add
rol
loop
lock
mov
pop
inc
cld
test
push
sub
sub
dec
subb
cmpsb
lds
rcrl
lahf
leave
je
outsb
loope
pushf
jl
test
out
cmpsl
stc
pop
jle
or
pusha
and
xor
sbb
int
or
dec
mov
and
outsl
mov
sbb
aad
pop
rorb
sbb
daa
das
test
inc
sub
sub
sub
loope
lods
push
jo
shrl
mov
loop
lods
icebp
popa
mov
xlat
xor
jp
xchg
leave
and
fadd
outsl
dec
movsb
xchg
sbbl
pop
fs
sbb
and
jecxz
xor
mov
mov
mov
cmp
out
inc
smsw
scas
push
insb
push
jle
and
mov
cli
mov
push
and
rcrb
inc
mov
cli
fbstp
outsb
das
jnp
sahf
std
cltd
movsl
cmp
jno
pmaxsw
mov
xchg
mov
sbb
scas
push
stc
cmpsl
pop
jb
xor
cmp
test
call
pop
cmpsb
jo
mov
push
test
movsb
mov
mov
mov
xor
jae
inc
aas
jae
mov
sbb
pushf
mov
and
cmp
or
mov
fidivl
out
xchg
dec
fsubrl
and
loopne
hlt
push
add
mov
inc
mov
insb
sbb
push
dec
pop
cmp
sub
cmp
aaa
imul
add
jl
sti
addr16
cs
jne
stc
pop
ret
mov
je
jge
sub
call
loopne
jge
inc
and
es
inc
mov
cltd
xor
dec
push
cmp
mov
cmp
sbb
jecxz
cmp
les
mov
mov
xchg
inc
cld
push
imul
mov
add
lds
and
push
add
in
jno
push
in
fistpll
push
and
cwtl
das
daa
or
jns
int
dec
fld
mov
fisttpll
sub
push
and
into
data16
mov
sahf
arpl
sbb
fldt
int
mov
sbb
jnp
cld
mov
push
subb
cmp
insl
sub
shrl
test
call
adc
jb
xchg
cmp
cmp
test
jle
hlt
xchg
jns
cmp
icebp
movsl
jne
mov
xor
enter
mov
cmp
inc
lea
out
fstl
bound
mov
sbb
jp
and
jbe
xor
xor
push
gs
and
int
and
int
xor
scas
mov
fdivs
andl
pop
and
sbb
cld
pop
cmp
inc
hlt
xor
pop
pop
jne
mov
test
fs
push
mov
inc
add
jb
movsb
inc
jb
out
sbb
sbb
cwtl
mov
loope
push
shrl
mov
sbbl
testb
ja
sbb
ret
jl
movb
test
inc
ret
sub
and
and
push
fs
sbb
shl
cmp
ret
sub
test
ja
ljmp
inc
nop
mov
and
cmp
mov
shrl
adc
data16
lret
push
lcall
push
out
pop
out
gs
repnz
and
adc
shrl
inc
or
cli
adc
pop
or
out
mov
mov
pushf
sub
push
add
mov
scas
inc
testb
cmp
int
sub
cmpsl
in
xor
ljmpw
or
push
pop
push
lahf
dec
insb
inc
pop
int3
repz
test
ret
in
cmc
add
pop
in
aad
mov
ficoml
fwait
cmpsl
push
jnp
outsl
push
mov
sbb
pop
fs
ds
xchg
mov
cmpl
xchg
setge
dec
pop
insl
jle
dec
jl
cmpsb
dec
addb
fstps
fisttpll
adc
jg
cmpsl
dec
add
dec
push
fidivs
addps
rorl
sbb
lea
sbb
sti
out
jo
cmpsb
cmp
sub
cmc
gs
cmc
rcrl
mov
xchg
enter
pop
insl
and
pop
jge
or
pop
sti
popa
insb
test
inc
shl
push
in
and
xor
daa
pop
scas
outsl
loopne
xchg
pushf
nop
ss
daa
push
or
das
push
es
addb
xchg
in
pop
fdivs
out
dec
xchg
movsl
vpunpckhdq
fsubrl
mov
pop
pop
add
xchg
das
sarl
adc
sub
pop
pop
out
mov
jbe
in
jp
sub
mov
sub
jne
sub
push
jno
jp
cltd
stos
xor
in
push
jb
add
jno
bound
sbb
dec
lods
cmp
mov
adc
bswap
mov
lret
xor
clc
push
push
jne
sbb
rorb
push
pop
inc
or
subb
cmp
and
push
mov
mov
lret
aad
dec
outsb
lahf
jmp
int
call
add
xor
loope
dec
out
sbb
popa
xchg
and
push
mov
shl
aas
adc
or
mov
in
nop
pop
pop
ja
popf
pusha
cmp
add
out
not
pop
pushl
jg
out
mov
loop
sub
jns
push
imul
lahf
stos
adc
lds
fnstcw
movsb
adc
mov
jp
dec
fsubl
leave
popa
pop
inc
jmp
test
cmp
ficomps
adc
in
pop
xlat
sub
adc
aaa
iret
xor
add
rol
mov
adc
jmp
and
lock
out
and
dec
xchg
xchg
cmpsb
sub
mov
stos
jae
cld
mov
push
enter
jnp
ret
pop
push
std
in
mov
adc
cmpsl
sbb
push
and
cld
js
stos
int
sbb
lret
cmp
or
inc
iret
bound
cmp
xorb
cwtl
jbe
lods
movsl
mov
icebp
adc
rcr
sub
stos
rcrb
adc
loop
adc
mov
xor
in
pop
out
movsl
cmp
or
outsb
inc
cmc
sub
push
lcall
xor
into
sbb
fistl
mov
sahf
or
jmp
push
repz
push
mov
dec
push
gs
test
lahf
ss
icebp
jp
sub
dec
inc
je
jne
insb
mov
popf
inc
out
inc
sbb
mov
enter
cmp
daa
ds
fsubrs
sbb
pop
mov
mov
xor
dec
dec
mov
in
cmp
hlt
inc
ja
lret
test
jl
in
test
addr16
xchg
inc
pop
inc
lock
mov
pop
sub
pop
mov
inc
mov
into
jno
adc
cli
push
push
shrl
jae
push
push
cli
fidivrl
push
lret
imul
mov
mov
pop
lods
addb
cmp
xor
cmpsl
pop
icebp
mov
push
inc
in
cmpl
lods
fidivl
mov
sbb
ds
les
popl
call
jg
mov
inc
and
in
lahf
push
icebp
shl
imul
dec
cld
outsl
cmp
sahf
add
cltd
movl
insl
ret
mov
dec
popa
dec
cmpsl
mov
fs
dec
into
sub
enter
bts
mov
into
gs
inc
notl
add
in
aad
adc
mov
pop
fsubs
cmp
stos
scas
fisubrs
fimuls
leave
sub
fcomps
lds
cmc
fimuls
out
jno
mov
les
aaa
xor
sbb
push
lcall
out
inc
cld
fmul
push
sarb
jo
pop
clc
lahf
idiv
orb
ja
fnsave
int3
aaa
push
cmp
mov
mov
mov
mov
xchg
pop
add
push
rcll
outsl
mov
cmpsl
lods
add
mov
cmc
and
pop
sarl
push
mov
addl
mov
pop
idivb
add
aad
pop
pop
rcll
add
aam
mov
notb
cmpsb
movb
or
jl
xor
fsubrs
jb
cmp
sub
jl
sub
mov
cs
push
iret
fwait
mov
cmpsb
lds
int3
jg
insl
insl
stos
loopne
repnz
cmp
cltd
pop
data16
test
stos
mov
inc
pop
jp
out
and
adc
andl
ss
cs
popa
or
push
hlt
mov
scas
aaa
pop
xor
fdivl
xchg
push
leave
sub
xchg
dec
loop
ljmp
and
jb
inc
sbb
call
sbb
mov
scas
jns
cld
push
test
sahf
mov
cmp
jbe
filds
scas
data16
dec
xor
repz
ljmp
mov
loop
mov
rcrl
mov
or
mov
in
sub
sbb
add
aad
jle
int
xchg
das
dec
inc
inc
lea
mov
outsb
pop
mov
add
pop
and
imul
shl
loop
imul
mov
adc
sub
xor
in
test
incl
mov
jecxz
lods
mov
mov
xchg
in
andl
or
push
fildll
rclb
push
push
in
sbb
and
mov
cmp
in
jb
sbb
insl
jae
sub
push
fcomip
xchg
fsubr
aas
sbb
mov
cli
jns
xor
dec
pop
mov
push
fmuls
or
pop
or
fadd
pop
mov
gs
fimull
mov
leave
fldenv
jmp
or
pop
es
adc
xchg
scas
push
push
push
stos
add
xchg
add
mov
and
in
aam
lret
push
mov
cmpsb
or
mov
testl
dec
into
jbe
mov
nop
ja
mov
dec
addr16
cli
cli
adc
push
xor
sbb
in
sub
hlt
pop
repnz
fwait
sti
in
sub
call
loop
add
clc
and
sbb
mov
cld
push
jns
xor
rcrl
leave
sar
pop
xor
inc
ljmp
lahf
push
inc
xor
clc
push
push
in
inc
xor
mov
xlat
outsb
daa
loope
dec
cmpsb
jle
fildl
loope
inc
out
add
jp
mov
jp
and
out
sub
pop
in
push
cltd
shl
ja
loope
jp
inc
fstp
fwait
jge
cld
jg
mov
and
push
fstl
xchg
or
sar
add
add
xchg
cltd
test
lret
cmp
sbb
loopne
imul
shlb
adc
push
push
lods
xchg
push
js
ret
into
movsb
push
xchg
outsl
pop
jg
sbb
lret
cmp
xchg
insl
lods
rorb
xchg
mov
call
pop
fdivrs
xor
lods
ljmp
insl
add
dec
mov
out
iret
xor
aam
ljmp
push
pop
and
jmp
jmp
addr16
push
std
fwait
std
mov
inc
out
test
sahf
push
ret
filds
push
aas
pop
arpl
lcall
adc
mov
push
imul
mov
mov
push
ljmp
mov
push
push
jecxz
push
jge
cmp
add
fistps
push
popf
lods
dec
dec
fnsave
fwait
jno
pop
stc
popf
adc
lods
xchg
je
sbb
push
xor
jg
add
mov
movsl
push
pop
jle
out
js
mov
push
insb
cmp
pop
xor
inc
pop
les
push
dec
fisttpl
and
push
insl
lcall
or
jns
mov
loope
clc
mov
movsb
pop
into
inc
faddp
popf
xchg
popa
cmpsb
call
out
leave
bound
shrl
pushl
and
add
xor
mov
pop
xor
xchg
jl
xlat
jns
xchg
add
sbbl
jo
mov
mov
jmp
push
cli
movsl
cmp
fs
dec
loope
ret
sub
and
push
adc
push
cmp
sbb
repz
ja
xor
xchg
or
stos
mov
aad
popa
or
xchg
adc
stos
mov
dec
pop
jl
xchg
popa
or
out
aas
push
mov
in
dec
ficomps
jno
adc
ss
xchg
mov
repnz
movsl
cli
rcr
or
fwait
xor
mov
mov
sub
and
inc
out
js
sbb
mov
push
dec
dec
mov
outsb
pop
lret
or
dec
out
in
mov
shrl
scas
mov
sub
lock
das
inc
and
cld
pminsw
test
mov
jb
test
pop
loopne
leave
xchg
stos
addr16
ret
xchg
lds
movsb
cld
pop
adc
xchg
pop
test
cmpsl
std
add
dec
filds
stos
cmp
movsl
data16
push
dec
mov
cld
sbb
addl
ret
rclb
cmc
xchg
dec
mov
sbb
dec
arpl
xchg
sub
push
inc
xor
cltd
sbb
sub
pop
dec
xchg
push
int
addr16
les
and
and
pop
add
jbe
cld
and
pop
jnp
aam
arpl
jg
pop
cmp
adc
ja
repnz
or
push
jle
orb
sub
sub
mov
iret
jle
inc
pop
mov
lahf
inc
fiaddl
cmpsb
popa
sub
orb
xor
gs
pop
or
lods
cmp
push
pusha
idiv
or
loope
sub
shlb
loop
mov
ja
xchg
and
cltd
cmp
xorl
add
push
push
testl
dec
scas
pop
fsubs
push
lret
dec
daa
mov
lret
push
inc
fildl
sub
cmc
pop
sbb
sti
les
aam
dec
adc
notb
pop
scas
pop
pop
push
jae
cwtl
adc
cmpsl
sahf
fucomp
iret
enter
or
imul
stos
stc
xchg
fisttpll
and
sbb
ja
daa
cli
mov
fsubs
les
push
insl
mov
stc
inc
lret
xchg
or
shl
xchg
sub
pop
imul
xlat
movsb
sub
into
movsl
scas
clc
loop
inc
pusha
pop
push
cld
push
mov
push
and
cmc
push
cmp
lea
inc
sti
jp
mov
daa
inc
test
sahf
xor
inc
ss
jl
enter
mov
mov
stos
bound
and
lods
xor
or
adc
push
scas
xor
fptan
push
xrelease
adc
lret
jp
push
or
xorb
movsb
lcall
jecxz
push
mov
repz
add
lds
into
adc
out
mov
mov
inc
sbb
outsl
mov
lahf
jae
pop
mov
add
and
push
pop
lock
ja
out
imul
cmp
cmp
inc
cmpsl
out
ss
leave
int
adc
sahf
cmp
je
cmp
xor
inc
outsb
inc
in
jnp
fisubrl
sbb
push
inc
lock
aam
test
mov
adc
jecxz
in
add
cmp
out
jo
lock
popf
dec
jl
inc
mov
jmp
and
stos
mov
mov
or
cmp
push
cmp
mov
push
jge
pop
sti
pop
icebp
mov
inc
lods
ja
scas
call
in
jg
mov
rcrb
xor
or
lock
lock
or
inc
xchg
push
jmp
xor
xor
out
jmp
xchg
xlat
pop
inc
testl
sbb
xor
dec
push
loope
sahf
outsl
pop
jmp
mov
pop
scas
mov
pushf
xor
pop
clc
inc
out
add
inc
lods
and
push
dec
loopne
adc
daa
outsl
cmpsb
repz
pop
add
or
inc
js
mov
addr16
daa
mov
push
jg
mov
jb
bound
mov
mov
imulb
movsl
jecxz
lret
sti
sub
ja
movsl
shrl
cs
mov
repnz
add
je
add
clc
pop
icebp
mov
hlt
push
push
fisttpl
cmc
xchg
leave
pop
mov
out
daa
push
push
sarb
fbld
cmp
pop
lods
stos
jmp
sbb
xlat
shl
jno
and
dec
in
sti
inc
subb
lods
mov
vpmaddwd
in
mov
int3
ja
pop
test
jg,pt
jo
sbb
jb
sub
xchg
cmp
push
aaa
jne
or
cmp
ret
jns
hlt
pop
shll
ret
xor
pop
push
pop
stos
jmp
sub
je
clc
fwait
push
out
push
mov
or
in
add
xor
sbb
inc
cmpsl
fadds
mov
mov
call
mov
imulb
fsubrl
push
jo
ja
fildl
xchg
es
sub
inc
sbb
ljmp
sbb
mov
icebp
inc
xchg
sbb
dec
lahf
mov
popa
movsl
out
das
and
jle
adc
ret
fs
xchg
dec
jmp
imul
add
ja
xor
mov
punpckhwd
and
or
sbbl
int
aaa
cmp
mov
inc
fbstp
mov
sbb
adc
shrb
push
rcrl
lods
lret
xlat
test
fcmove
mov
inc
negl
shrl
imul
xchg
sbb
out
mov
and
sbb
pop
xor
jbe
insl
inc
popf
push
inc
xor
mov
fcomps
pop
call
daa
pop
push
mov
mov
lret
jg
std
jmp
sub
aaa
mov
dec
mov
mov
inc
in
hlt
movsl
pop
cs
dec
xlat
lods
cmc
es
decl
or
out
mov
pop
xchg
popl
xor
jae
sbb
test
sbb
daa
jle
imul
push
lret
or
mov
enter
xlat
push
sbb
lods
mov
pop
ss
stos
xchg
jb
adc
jno
mov
xchg
sarl
xor
or
negl
xchg
icebp
mov
mov
mov
xor
pop
cmp
sbb
mov
lods
cld
lea
lret
dec
lret
sub
xchg
push
addr16
pop
and
arpl
jecxz
xor
bound
pushf
imul
sbb
test
or
es
sbb
xlat
sarb
xor
mov
lods
sbb
fnstcw
xor
dec
inc
xchg
inc
jge
call
add
jbe
sti
cltd
imul
in
inc
pop
dec
arpl
add
cmc
imul
pushf
adc
out
push
xchg
fidivs
shlb
shlb
add
movsl
icebp
dec
pushf
fwait
inc
or
sub
pop
rclb
loop
inc
mov
les
into
stos
inc
cld
in
ja
xor
lret
es
stos
add
jmp
std
and
outsl
or
aaa
dec
push
cmp
mov
ds
or
insl
adcb
dec
sbb
pop
push
cmp
movsl
test
pop
xsha1
cmpsb
mov
adc
jecxz
sub
push
pop
popf
ret
jp
clc
mov
xchg
stos
gs
add
lcall
movsl
push
pop
or
aad
orl
sub
mov
stos
rclb
mov
leave
jne
sbb
outsb
cmpb
clc
nop
sub
neg
jmp
loope
mov
leave
roll
xlat
int
or
mov
pop
pop
pop
fidivl
shll
add
pop
dec
jns
xlat
cs
bound
iret
sbb
imul
xchg
inc
aam
inc
aas
test
into
enter
mulb
dec
or
sbb
jg
xchg
dec
sbb
daa
pop
inc
fisttpll
lods
ds
shlb
mov
add
cmp
push
xchg
and
dec
mov
leave
cmp
pop
fdivrs
lea
mov
mov
decb
stos
jne
push
add
pop
lods
lods
dec
test
mov
arpl
add
sub
into
sub
fwait
jg
lock
imulb
sub
rcr
push
fwait
mov
out
and
je
sub
sub
adcb
xchg
imul
lock
pop
push
pop
mov
mov
fbstp
mov
jbe
ret
sbb
faddl
cmp
ds
fyl2x
arpl
loop
pop
cwtl
vmread
bound
test
addr16
xchg
lcall
push
mov
lds
push
out
sub
mov
movsl
hlt
mov
add
cmc
das
and
cltd
popf
popl
pushl
loope
sahf
icebp
arpl
call
rorb
adc
add
scas
insl
rol
ret
jp
loop
test
imul
jle
xchg
movsb
test
daa
mov
call
dec
fsubl
movsl
cmp
rol
xor
xchg
inc
mov
jmp
mov
mov
dec
in
pop
xor
cmp
and
sbb
dec
sti
mov
push
inc
int
mov
test
imul
stos
arpl
shrb
push
pop
loope
cmp
inc
imul
pop
adc
jo
pop
inc
shlb
scas
xchg
jge
mov
push
sahf
lea
xor
or
movsb
and
inc
push
xchg
cmp
jae
xor
arpl
lea
enter
mov
outsb
jl
xchg
sub
mov
iret
adc
js
pushf
or
xchg
mov
mov
daa
mov
mov
dec
aad
pop
idivb
dec
repz
repz
cmp
pop
out
dec
lods
mov
xchg
into
rol
push
push
xchg
lods
loopne
popf
cmpl
pop
xchg
aad
push
and
mov
inc
fistl
ljmp
push
mov
xlat
dec
push
sub
out
daa
sbb
scas
mov
sub
imul
push
mov
dec
inc
lods
clc
aam
sahf
jnp
sub
ljmp
out
inc
enter
ljmp
mov
or
or
int
ljmp
sub
dec
and
pop
loopne
mov
mulb
pushf
xor
and
xchg
push
pop
mov
cmp
lret
push
push
sbb
push
sbb
popf
jae
cmp
cs
cmpsb
or
cmpsb
xor
sbb
inc
out
loopne
inc
fistpll
stc
fistpl
and
xchg
xor
inc
cmpsb
lock
or
scas
stos
sub
add
mov
push
pop
and
test
cmp
cmp
testl
mov
fidivrs
cmp
enter
adc
mov
or
das
jl
fisubrl
mov
btc
jl
je
jp
add
xchg
xchg
add
std
sub
push
jg
push
sub
xor
int3
and
call
hlt
jo
dec
mov
rcl
iret
nop
and
repz
mov
jmp
into
roll
in
jp
mov
hlt
outsl
lcall
mov
pop
dec
cli
cmc
lret
das
mov
lods
scas
dec
fistps
int
popw
cmpsb
pop
jp
adc
rorl
mov
add
inc
loopne
or
mov
jle
mov
pushf
mov
enter
adc
inc
cltd
jo
testb
inc
pop
or
jae
lods
lea
pop
es
xor
sub
dec
push
leave
mov
cmp
rorl
and
imul
pushl
mov
outsb
cmpsl
mov
roll
push
in
lds
adc
lret
shrl
lcall
popa
clc
gs
mov
or
mov
lods
lock
and
mov
jnp
imul
inc
fnstenv
into
sub
es
popa
push
gs
fs
inc
pop
popa
lds
dec
fucomip
jns
mov
fsts
pop
mov
fchs
arpl
inc
fsubl
adc
ja
inc
add
sub
repnz
push
dec
push
inc
ljmp
shll
ja
jb
into
xor
xchg
xchg
add
les
movsl
push
push
int3
mov
xchg
cmc
mov
cmpl
movsl
xchg
mov
pop
cltd
shlb
filds
push
sbb
push
jo
pop
ss
add
mov
aam
add
dec
add
mov
iret
scas
decb
mov
dec
imul
mov
fs
or
mov
push
or
xchg
cmpsb
and
orl
sub
aad
pop
hlt
mov
pusha
add
xchg
and
mov
outsl
pop
xchg
add
mov
cmpsb
arpl
outsl
dec
push
and
xor
and
ljmp
xrstors
je
pop
xchg
lods
mov
cmp
jmp
push
xor
pushf
mov
mov
es
data16
mov
xchg
dec
mov
lret
cld
lods
je
pop
cwtl
mov
cmp
push
scas
mov
jge
mov
in
fstpl
jae
xchg
fs
mov
inc
popf
stc
mov
add
xor
std
pop
mov
pop
push
inc
jecxz
mov
mov
push
aaa
jmp
lock
aas
movsl
jle
xchg
ja
mov
nop
push
test
cmp
dec
in
add
mov
fabs
mov
adc
sti
aaa
adc
inc
push
add
pop
cmp
and
fbstp
sub
mov
loop
push
pop
in
mov
jae
push
cs
mov
and
sub
xor
add
xor
cmp
xchg
cmp
lods
mov
sbb
sbb
and
jns
cwtl
ja
ret
mov
f2xm1
enter
andl
test
sbbl
fnstcw
sub
hlt
xlat
xchg
shrl
outsb
or
iret
add
jl
xor
rcll
pop
imul
add
jl
jns
add
jno
mov
cltd
xor
pop
ficompl
jge
mov
push
stc
push
jno
into
jae
add
mov
xchg
mov
add
or
cs
das
fwait
shrl
jmp
cmc
dec
into
es
test
add
or
nop
adc
mov
addr16
lcall
insb
lds
and
movsl
sti
jne
pop
xchg
in
fsub
mov
fadd
push
xor
inc
addb
jnp
popf
int3
and
out
lods
test
pop
mov
scas
or
mov
test
xchg
imul
repnz
or
sub
ds
into
and
push
mov
push
jg
xchg
in
inc
lock
fcmovne
cmp
and
sbb
test
or
inc
clc
lcall
mov
dec
shlb
dec
movsl
dec
add
sub
sub
test
and
dec
loop
adc
fistps
add
push
inc
pop
push
test
leave
int
addr16
add
add
insl
dec
test
aad
or
push
jmp
sarb
sub
inc
movsl
frstor
push
sbb
daa
cld
mov
xchg
xchg
add
orb
mov
data16
xchg
sbb
pop
sbb
cmp
jmp
inc
add
xchg
sbb
or
cmpsl
jle
shr
xlat
pop
jmp
push
fmulp
pop
mov
cmp
xor
pushf
push
inc
lds
mov
es
fsub
pop
push
mov
and
mov
push
cmp
mov
sbb
mov
sbb
mov
pushf
dec
mov
test
sub
dec
add
jbe
sub
or
aam
cmpsb
add
lods
aad
jb
cmpsl
in
cmp
mov
push
js
sbb
or
inc
fdivrl
jecxz
mov
in
shlb
adc
addr16
pop
ja
cmp
lods
std
mov
pop
flds
cmpb
xchg
jmp
cmp
shl
pop
and
push
cmp
insl
sbb
hlt
mov
cmp
xchg
adc
fnsave
push
xor
mov
lea
rcr
notl
aam
or
in
mov
mov
dec
loop
adc
imul
in
les
ljmp
mov
mov
leave
pusha
test
inc
inc
inc
addr16
rolb
sahf
repz
call
xor
daa
sub
pop
adc
iret
loopne
push
sub
pushl
or
ret
pop
inc
movsl
pop
shl
or
mov
mov
sub
adc
lahf
or
hlt
in
jp,pt
int3
ljmp
pop
xchg
mov
popa
mov
dec
jmp
dec
loop
ss
push
imul
mov
mov
or
add
xor
nop
adc
pop
sub
push
mov
mov
scas
or
pop
dec
cld
cmpsl
inc
inc
scas
push
jno
xchg
or
repz
pop
movsb
clc
xchg
sub
jecxz
mulb
rclb
mov
cmpl
loope
int
xchg
mov
push
add
ds
pop
adc
cmp
jmp
stos
sub
jnp
loope
repz
push
stos
imul
int3
fldt
mov
hlt
lock
xor
jl
fsts
popl
nop
adc
dec
rolb
nop
test
sbb
test
mov
shlb
sbb
divb
movsl
into
mov
cltd
xor
jp
xor
mov
nop
cli
or
mov
call
fstl
movsl
roll
loop
shlb
pushf
pop
ficoml
ficoms
push
sbb
jb
dec
out
pop
inc
push
lahf
rolb
mov
and
cld
push
push
std
aaa
int3
dec
mov
repnz
mov
add
ja
ret
pop
xlat
movsb
or
pop
push
dec
and
mov
mov
insl
cmp
sahf
outsb
pop
mov
pop
mov
add
sub
lds
cmp
xorl
pop
xchg
sbb
dec
cmp
push
jo
test
fldcw
cmpsb
pop
jno
sbb
inc
dec
stos
fdivrl
jns
enter
xchg
add
push
sbb
xchg
inc
aaa
xchg
popf
lea
xor
mov
xchg
add
or
or
and
popa
mov
jno
repnz
sub
test
ret
repnz
xchg
push
std
sarl
movsb
ja
popf
andl
or
cmp
xor
aas
add
gs
jle
cmc
cmpsl
test
lods
gs
call
jge
inc
inc
popa
orb
gs
mov
add
pop
imul
dec
pop
lret
sub
fsubr
jg
addb
or
cmpsl
push
stos
xor
ss
aaa
pop
jp
lea
xor
xlat
les
lcall
add
mov
and
stc
jg
mov
xchg
push
push
ds
mov
repz
mov
pop
dec
pop
mov
jnp
js
adc
call
mov
lods
sub
fiadds
dec
pop
adc
sub
xchg
dec
incl
lds
mov
pop
mov
dec
xor
aad
push
dec
jbe
and
fldcw
hlt
sbb
add
aaa
out
cmpsl
jge
and
sub
and
xlat
repz
lea
inc
mov
xchg
xchg
or
lahf
ss
lahf
dec
aad
adc
popl
xchg
les
iret
and
mov
push
xchg
cs
ret
sub
mov
or
sbb
cs
int
sub
in
inc
in
das
xchg
jmp
es
repnz
test
dec
mov
dec
push
pop
mulb
push
mov
mov
cmp
mov
test
and
and
mov
push
add
mov
mov
mov
repz
int3
mov
sbb
push
xchg
and
sub
mov
pop
mov
adc
fs
push
cld
out
mov
push
push
lret
push
or
fidivrl
and
aaa
outsl
dec
dec
jg
cmp
jg
pop
inc
pop
xchg
sub
inc
jg
mov
or
loopne
xchg
stos
xor
pop
loope
out
jae
push
test
mov
inc
add
dec
fs
mov
cmpsb
arpl
cmpsb
stc
fildl
jnp
adc
popa
jns
clc
cmpsb
cmp
in
cmp
jecxz
mov
daa
pushf
sbb
leave
push
lods
push
jmp
sub
lea
push
out
mov
xor
xchg
dec
add
mov
push
fisubl
call
ja
inc
es
mov
push
les
inc
neg
add
loop
adc
test
mov
imul
and
adc
lods
pop
mov
popf
js
pop
and
jmp
call
dec
enter
mov
rol
inc
iret
xchg
lds
ret
rcr
or
scas
inc
outsl
push
fiadds
lock
decl
and
dec
xchg
ret
jl
push
leave
in
cmp
xchg
mov
ret
in
jecxz
xchg
lcall
rorb
rclb
insl
jae
out
stos
mov
arpl
xor
fcmove
adc
mov
hlt
in
mov
jnp
pop
fmul
adc
and
dec
dec
lret
outsl
fstpt
out
pop
dec
and
push
leave
xchg
std
xchg
pushf
imul
call
or
data16
test
lods
xchg
lcall
sbb
mov
inc
jmp
fwait
sub
dec
xchg
inc
cli
adc
push
adc
rol
pop
ficoms
fld
add
sub
or
xchg
daa
lahf
xchg
inc
in
xchg
mov
idivl
mov
pop
pop
dec
and
jne
aaa
pop
sub
int
scas
sbb
xor
push
push
mov
mov
and
sub
sti
dec
cmp
ds
scas
sahf
lea
fists
add
sbb
test
sub
inc
or
sub
popa
sbb
loop
aaa
mov
stos
and
add
lahf
lret
sbb
out
inc
aaa
push
push
xlat
repz
xchg
lods
icebp
fs
scas
xchg
push
fistl
jecxz
es
mov
dec
mov
push
push
negb
mov
popl
push
pop
xchg
in
jge
adc
fstps
sahf
push
js
and
inc
jge
lret
imul
dec
push
mov
fld
repz
push
in
das
addr16
dec
cmp
xor
fcom
mov
cmpsl
mov
out
dec
aad
mov
aaa
pop
inc
xchg
push
fcompl
scas
clc
dec
push
scas
repz
hlt
dec
cmp
add
in
jl
or
cmp
inc
xchg
aad
mov
dec
jne
or
jb
mov
xor
mov
fnstenv
aam
jl
lods
iret
aad
jmp
xor
add
pop
orb
add
test
mov
filds
jl
std
dec
cs
mov
jbe
push
push
shlb
ss
dec
loop
out
lock
adc
mov
add
or
in
pusha
xchg
sbb
dec
inc
out
cmpsl
jns
xlat
insb
sub
jle
dec
pop
out
mov
xor
imul
adc
aam
ss
mov
push
or
or
notb
mov
repz
fcoms
xchg
push
out
jmp
or
cmp
dec
mov
inc
pop
sub
test
or
sbb
daa
lcall
sbb
jae
and
mov
cs
into
das
jp
test
scas
dec
cs
and
cmp
inc
pop
cmpsb
incw
inc
lods
pop
jmp
pusha
sbb
arpl
mov
std
adc
mov
pop
fyl2x
loope
push
popa
sub
sbb
jno
test
les
xchg
test
insl
loopne
mov
cmc
cli
sub
out
xchg
jl
add
jne
or
mov
cli
or
jns
lret
pop
xor
cmp
call
and
cmp
sub
leave
das
push
push
inc
push
cmp
bound
jnp
adc
jb
std
xchg
mov
test
ljmp
cmpl
pop
int
call
cmp
shlb
ss
movsl
xchg
ret
out
inc
pop
adc
inc
xor
mov
insb
push
sub
mov
lds
adcb
shrl
inc
fstp
loope
jb
add
adc
lcall
or
test
inc
sbb
jg
imul
repnz
outsl
mov
xchg
out
mov
jge
inc
popa
add
js
mov
push
stos
fnstenv
or
sarb
sbb
xchg
jecxz
les
xchg
mov
test
push
jle
imul
dec
adc
jecxz
jne
cwtl
je
and
push
mov
push
insl
adc
mov
add
loop
mov
push
mov
frstor
dec
hlt
outsb
push
in
pop
xchg
pop
sarb
cwtl
pop
xor
cmp
xor
sbb
add
mov
sub
mov
jbe
jge
sbb
dec
imul
data16
dec
fsubr
pop
ljmp
adc
mov
jne
pusha
orb
dec
and
push
fnstenv
popa
shrb
add
inc
test
or
loope
push
sti
das
sub
adc
push
dec
sbb
cmpsl
nop
imul
mov
jle
rcll
pop
xchg
mov
mov
xchg
in
sbb
ficoml
pop
es
inc
pop
jp
cmpsl
out
leave
push
in
mov
loopne
inc
adc
or
sbb
lods
lea
adcl
inc
mov
fidivs
and
cltd
jle
mov
loop
jno
fiaddl
nop
pop
xorl
mov
in
jbe
rcrl
ljmp
cmovs
repz
movsl
lea
loop
adc
xor
adc
data16
mov
out
fstps
push
dec
mov
cwtl
rep
popa
inc
pop
and
cmp
mov
into
jns
insl
cmpsl
loop
scas
or
ja
lods
inc
popa
addr16
pop
insl
lret
bound
jne
xor
jmp
jnp
push
test
stos
js
xchg
sbb
xchg
or
mov
sbb
adc
mov
xacquire
leave
pop
inc
mov
mov
push
mov
jbe
lahf
pusha
dec
es
jo
loop
lods
xchg
push
rclb
push
popf
cltd
and
es
push
sbb
movsl
adc
scas
data16
dec
cmp
cmpsl
sbb
sub
dec
fmull
or
ret
pop
daa
mov
pop
fcomps
mov
mov
out
jl
and
xchg
lods
xchg
sub
push
fmuls
rolb
xchg
sbb
cwtl
dec
mov
sub
sbb
sub
leave
sbb
inc
push
pop
cltd
push
inc
mov
out
movb
cmp
or
mov
fstl
dec
push
xchg
xor
mov
mov
sub
rorl
insl
in
cmp
sahf
mov
and
jg
lcall
mov
lahf
icebp
inc
fst
fcoml
pop
repz
leave
mov
push
sti
inc
cmpl
xchg
fsubrs
pop
repnz
gs
insl
or
fists
xchg
and
sub
jmp
mov
into
dec
repz
or
adc
lds
sbb
mov
pop
sahf
ja,pn
cld
sub
xchg
or
pushf
xchg
cmp
test
jp
and
sbb
add
mov
cwtl
lds
pop
repnz
fstpt
cmpsb
pusha
pop
out
decl
push
dec
and
movsb
mov
xor
inc
adc
in
mov
stos
inc
testl
fidivl
iret
jb
call
mov
add
adc
loop
fdivrp
imul
mov
into
pop
lock
sti
stos
sbb
mov
inc
out
mov
push
dec
xchg
out
mov
push
addr16
popa
push
int
dec
or
mov
sbb
insl
xchg
add
test
fimull
and
shll
cmp
pusha
dec
and
adcb
lret
stos
xchg
jnp
mov
gs
pop
pop
adc
popa
push
or
ret
jle
xor
in
or
pop
cmp
pusha
jl
imul
inc
pop
test
mov
daa
repz
xchg
aad
sbbl
adcl
adc
in
cmp
adc
sub
mov
sahf
dec
jg
imul
mov
mov
add
mov
mov
daa
cmc
iret
fnsave
jle
jno
mov
adcl
xor
loop
or
jb
inc
lods
ret
popl
mov
lcall
sbb
dec
xchg
sbb
mov
add
test
pop
data16
mov
popf
sar
and
cmpb
mov
stos
xor
pop
jns
mov
add
stc
addr16
jne
fimull
push
adc
iret
and
or
dec
pop
sbb
movsl
stos
sbb
gs
jae
lds
pop
jge
add
cmp
cmp
pop
dec
cltd
add
fidivrs
addr16
cmp
mov
fisubrs
jle
cmp
ss
nop
sbb
inc
test
clc
dec
or
fistps
mov
clc
or
arpl
or
aad
or
mov
loope
push
pop
data16
push
xchg
je
lds
xchg
xchg
nop
aad
sub
jb
jns
movsl
popf
pop
xor
aaa
or
dec
xchg
subb
push
pop
popf
lods
xchg
jb
mov
dec
leave
gs
stc
mov
xchg
in
cmc
shll
dec
jo
je
enter
inc
cmp
inc
out
ljmp
mov
or
pop
lahf
dec
in
pushf
sbb
push
arpl
push
out
or
xchg
sub
seta
lcall
jns
mov
inc
fistl
and
leave
imul
icebp
jle
int
sbb
stos
push
jl,pn
push
popa
dec
xlat
sub
mov
int
daa
mov
aaa
stc
fsubl
cmp
mov
stos
cs
or
int
lea
fwait
cmp
popl
fcoms
or
cmpsl
pop
add
xchg
cs
inc
loop
push
out
push
fiadds
rclb
fnsave
add
or
orb
hlt
or
cmp
xchg
stos
int3
mov
mov
or
and
gs
cli
out
or
push
and
sub
cmpsb
add
sbb
mov
jno
sbb
jl
dec
inc
xlat
cmp
or
fidivl
ret
pop
test
jl
ret
insl
mov
stos
test
scas
in
scas
sbb
jmp
test
mov
fnsave
andb
sti
sarb
and
xchg
inc
push
mov
pop
sub
jnp
adc
testl
clc
xlat
push
cwtl
mov
dec
adc
adcb
mov
jecxz
pusha
xor
loopne
push
jmp
push
jmp
dec
or
pop
mov
test
lahf
jle
cmp
or
mov
pop
xor
fisubl
sbb
stc
test
xor
out
movb
push
push
je
ret
psadbw
lret
cld
repnz
addr16
jp
mov
test
out
pushf
ret
pop
mov
xchg
mov
cs
gs
jns
xor
lea
mov
xlat
and
mov
divl
pop
mov
ja
shl
push
mulb
outsl
adcl
test
jnp
jge
dec
scas
mov
push
shl
xor
push
pop
ds
pop
jl
mov
cmc
scas
test
lahf
out
jl
mov
ja
outsb
movsl
in
data16
pop
sbb
cmp
pop
jl
movsb
inc
push
jne
icebp
js
or
lods
pop
fdiv
xchg
pop
mov
popa
sub
xchg
int3
jl
jns
imul
fldt
pop
imul
je
mov
jnp
mov
push
fidivs
sysexit
pop
ja
sub
jle
pop
es
push
sub
dec
adc
cmp
xor
sbb
xor
fwait
les
mov
cmp
cmp
in
cmpsb
inc
push
mov
out
sar
stc
fndisi(8087
fwait
or
sti
fwait
sbbb
insl
mov
test
mov
adcb
ljmp
aas
xor
lcall
int3
imul
push
movsl
ss
enter
subl
adc
loopne
xor
pop
pop
fsubrl
pop
xchg
imul
lahf
dec
mov
imul
or
popa
sub
mov
dec
mov
mov
push
sub
ljmp
fistpl
mulb
xor
pop
addr16
mov
push
mov
mov
jl
pop
repz
pop
or
movsl
jp
jg
add
in
push
pushf
mov
out
aas
loope
jecxz
xchg
loope
jge
xchg
decb
shl
rorl
call
enter
push
mov
lcall
dec
cwtl
fldenv
mov
outsl
les
sbb
or
xor
xchg
mov
lea
inc
sbb
xchg
add
push
mov
inc
call
in
mov
pop
pop
push
cmpsb
mov
test
or
fsts
sub
cmp
aas
adc
jns
les
jg
jno
pop
mov
mov
mov
lcall
pop
mov
mov
inc
pushf
lods
out
pop
insb
nop
divb
movsl
mov
cmp
aaa
movsl
test
sbb
data16
cltd
insb
jge
jns
sub
out
jge
lods
inc
daa
jns
aam
fldcw
fimull
jg
adc
or
mov
add
pop
xor
pmulhw
mov
clc
cmp
xchg
enter
outsb
fsubl
test
incl
aaa
in
nop
jno
inc
sub
jcxz
mov
xchg
sub
xchg
nop
dec
inc
mov
jno
rorl
popa
hlt
sub
or
xchg
leave
arpl
andl
lret
sub
out
mov
adc
xor
xor
sub
movsl
js
mov
in
adc
mov
ljmp
ljmp
pop
adc
ds
mov
iret
xor
fdivr
mov
scas
fisttpl
lods
repz
lcall
test
jge
mov
push
sub
in
out
fnstcw
aaa
mov
repz
sub
repnz
jns
mov
xor
sbb
insl
cmp
lods
lods
addr16
push
jle
mov
mov
rorl
sub
inc
arpl
sub
cmp
iret
das
repz
imul
mov
icebp
jge
sarl
pop
pop
in
scas
outsl
mov
getsec
mov
popf
cmp
scas
stos
aaa
push
test
int3
lods
mov
push
cmp
in
popa
aaa
adc
inc
sbb
xor
push
mov
cmc
mov
cltd
mov
xchg
pop
mov
and
or
mov
ds
popf
sub
sub
shll
andl
rcr
enter
sub
lock
les
scas
inc
xor
mov
insb
xor
xlat
mov
in
push
sub
cmp
xchg
add
hlt
sbb
lcall
jo
mov
js
rcll
or
inc
push
subl
test
repnz
or
lods
pop
mov
dec
hlt
xor
arpl
jae
test
push
sub
pop
scas
mov
push
jbe
or
sbb
sub
xchg
pop
addr16
pop
ret
push
fwait
adc
pushf
shrl
test
test
outsl
mov
mov
icebp
xchg
pop
mov
jmp
adc
imul
mov
ja
push
jae
aad
aas
xchg
xor
ss
outsb
jo
movsb
xchg
std
popf
cmpsl
dec
sbb
sub
movsb
cmp
lods
dec
fistpl
pop
sbb
cmp
and
cmpsb
cmp
push
jns
inc
es
push
push
and
in
das
mov
pop
xor
lods
scas
hlt
jne
xor
scas
inc
jg
sbb
pop
pop
enter
sahf
pusha
loopne
arpl
aam
je
ss
inc
sub
cmp
call
pop
int3
movl
mov
adc
inc
popf
or
adc
fistl
jno
or
inc
arpl
jae
pop
loope
push
clc
jg
jle
movsl
xchg
xchg
aaa
adc
mov
mov
adc
test
mov
std
insl
pop
das
mov
aad
mov
mov
mov
pop
dec
sub
jp
loop
js
xor
and
cmp
jp
push
popf
mov
and
scas
lret
dec
subl
fdivs
dec
bound
sbb
xchg
arpl
xchg
dec
xchg
cmp
dec
dec
jecxz
lods
addl
orl
addr16
out
adc
and
test
inc
mov
adc
js
divl
sub
fsubs
repnz
dec
or
int
inc
lock
inc
cld
and
rcrl
jmp
das
adc
call
mov
fldt
and
cmp
inc
dec
les
scas
pushf
sbb
inc
xchg
sbb
mov
cltd
daa
and
loop
jns
and
inc
js
lret
sahf
push
adc
int3
pop
push
fbstp
or
pop
mov
push
cltd
stos
fsubr
test
mov
mov
and
cltd
and
or
mov
xchg
sub
mov
dec
leave
dec
push
repz
aas
jg
or
mov
pushf
mov
fucomp
std
aad
or
push
xchg
mov
movsb
push
inc
ficoml
ret
je
inc
xor
icebp
or
mov
lods
push
sub
addr16
sbb
pop
lock
test
xchg
jne
int3
mov
or
arpl
push
fistps
mov
or
pop
mov
mov
mov
test
xor
pop
mov
loope
push
xchg
lea
xchg
sub
sub
cwtl
sbb
mov
sub
jnp
sbb
xchg
mov
sbb
arpl
push
dec
es
insl
ret
sbb
mov
jl
aas
or
daa
lret
repnz
push
test
stc
xor
dec
add
int
push
cmpsb
inc
je
cmc
jp
jp
pushf
lret
dec
xlat
movl
mov
xchg
jb
ret
aaa
add
push
adc
push
mov
loopne
cmpsl
mov
dec
cld
push
loop
cmp
jae
cmpsl
pop
loop
enter
push
jno
fwait
mov
imul
adc
pusha
notl
or
push
mov
paddusw
mov
pop
insb
xchg
fisubl
clc
lcall
test
inc
inc
push
mov
stos
xor
adc
add
rorl
and
adc
lret
hlt
mov
idivb
cmpsb
xor
subl
out
or
lds
out
adc
jns
in
jle
pusha
test
pop
mov
int
out
or
aam
mov
loope
hlt
adc
jns
adc
pop
lods
or
mov
out
call
mov
pop
enter
cmpsl
add
lcall
lods
mov
pop
or
stc
popa
test
inc
and
es
xchg
sti
insl
stos
mov
push
out
push
mov
dec
popa
andl
out
arpl
out
test
mov
jecxz
cmp
jge
js
and
nop
outsb
add
mov
sub
cmp
cld
mov
xchg
push
shrl
fimull
test
mov
je
fisttpll
ret
ret
lock
pop
inc
and
or
decl
mov
mov
das
iret
or
inc
mov
sarb
mov
and
std
xlat
shrl
add
imul
push
add
leave
xchg
mov
pop
pop
popf
mov
adc
aad
and
adc
xor
shr
push
and
and
xor
xor
push
inc
insl
xchg
cmp
xor
hlt
test
inc
imul
pushf
adc
les
cmp
xchg
mov
cmp
mov
out
int3
lahf
lods
sbb
sbb
dec
dec
xlat
outsl
test
jecxz
or
jb
xchg
lahf
add
mov
fidivl
pop
sub
push
pop
jo
add
pop
and
add
insl
cltd
rcr
add
test
fimuls
lcall
imul
mov
imul
push
adc
je
and
jns
and
push
push
mov
loop
test
xorl
lcall
jae
ret
pop
addl
cwtl
mov
add
insl
jge
rclb
jbe
ret
sub
cltd
icebp
sbbl
cmp
inc
pop
insl
jbe
test
push
cmp
int
ror
jne
stc
adc
bound
mov
dec
inc
and
pop
ljmp
rorl
lock
or
outsb
jmp
sbb
out
mov
jmp
mov
movsb
paddq
shll
lret
and
outsb
popa
xchg
mov
xchg
outsl
ljmp
notb
pop
fsubrl
ds
xchg
jge
lret
rcrl
mov
dec
data16
mov
rcrl
popf
gs
into
jle
inc
pop
jmp
mov
adc
sub
mov
fwait
jne
int
mov
cmpsl
mov
xchg
and
ret
repz
aad
int
mov
jg
loopne
push
shrl
ret
imul
inc
mov
cmpsl
dec
add
js
or
cmp
jge
dec
pop
mov
fidivrl
jno
movsb
lods
pop
jne
push
sub
sub
cmp
daa
insl
add
or
or
fmull
cwtl
cmp
testl
out
and
pop
adc
inc
lcall
lea
mov
mov
sub
mov
andb
cmp
inc
into
dec
scas
lahf
mov
or
lret
pop
bound
mov
mov
xchg
frstor
or
inc
stos
sub
fwait
sub
aam
sbb
inc
arpl
pop
ljmp
testb
push
adc
mov
push
xchg
mov
cmp
cmpb
jge
repnz
xor
dec
cld
xchg
jg
ret
sub
aas
add
or
mov
cmp
mov
ret
lcall
sbbl
push
mov
sar
xchg
mov
stc
push
sbb
adc
cmpl
jno
xorl
or
stos
sti
push
pop
xchg
and
push
les
xor
test
mov
or
loope
das
or
sbb
inc
sub
fsubrs
popf
pop
cmpsb
sub
push
outsl
push
adc
cmp
inc
mov
dec
push
jo
add
dec
mov
adc
inc
or
sub
mov
cs
cmp
jo
mov
iret
xchg
lods
arpl
mov
jg
sbb
sahf
into
movsb
in
ljmp
inc
enter
jge
jecxz
xchg
pop
out
add
jg
rcl
xchg
push
repnz
inc
int3
mov
push
out
mov
hlt
or
scas
nop
sahf
mov
dec
inc
mov
xchg
sub
sar
inc
sahf
adc
cmp
dec
xchg
pop
inc
in
or
cmp
hlt
imul
test
stc
ret
mov
lret
je
aad
sub
push
int
lea
xor
daa
fwait
jge
pop
xor
pop
imul
dec
je
dec
and
fwait
sbb
enter
rol
jmp
pop
repnz
cmp
jge
dec
add
lcall
fsts
push
push
insb
testl
ficompl
arpl
call
test
adc
pusha
pop
pop
mov
dec
add
push
adc
bound
jo
jmp
lods
into
repnz
in
push
sbbl
jb
xchg
mov
repz
addr16
aam
leave
adc
or
popa
clc
es
mov
leave
sub
ss
fistpll
dec
push
insb
lret
lret
pop
sbb
int3
imul
lods
add
inc
ja
out
movsl
sbb
popa
jnp
movsl
or
cmp
jae
mov
sahf
fwait
rol
pop
add
sub
scas
jno
pop
mov
xor
in
lret
pop
sar
cwtl
pop
inc
outsb
pop
mov
sub
les
enter
mov
xor
clc
inc
lret
sbb
fstpl
push
pushf
das
xchg
lcall
jmp
push
mov
xor
sub
cmp
insb
mov
mov
nop
xchg
repnz
icebp
mov
cmpl
xor
sub
in
in
xor
icebp
arpl
je
ds
xchg
iret
rolb
in
cltd
sub
icebp
xchg
cs
jmp
fs
lret
cmp
cli
push
loope
dec
dec
dec
and
sub
in
jmp
dec
mov
mov
cmpsb
cmpsl
jno
roll
repnz
mov
aas
mov
jbe
test
pop
loop
cmp
push
cs
rorb
mov
shrl
iret
lcall
mov
cmp
xor
push
jg
aas
inc
stos
in
out
rcl
push
mov
lcall
cmp
fmull
sub
lret
andl
add
lret
and
jbe
or
ja
jmp
pop
pushf
subb
data16
cmc
fs
jle
lahf
pop
and
sub
lds
and
sbb
je
movsb
cmp
lcall
jmp
inc
dec
mov
adc
push
inc
xchg
popa
lods
pusha
data16
fadds
pop
test
jmp
sbb
iret
push
movsl
pop
lcall
int
add
dec
lret
sub
pop
dec
inc
or
mov
and
outsb
push
jne
push
stc
and
loop
push
push
push
mov
out
or
push
es
jo
and
insb
push
xchg
rorb
mov
leave
aas
mov
adc
jb
push
mov
out
xor
adc
int3
inc
lods
ja
pusha
insl
into
jno
and
fwait
orb
xor
sub
pop
imul
and
insb
pop
xchg
jp
or
xchg
scas
daa
hlt
sbb
andb
lods
aad
shlb
sbb
push
mov
push
out
movsl
in
mov
into
loopne
adc
int3
je
loope
xchg
xchg
loop
sbb
cmc
pop
les
mov
inc
mov
pop
and
sbbb
push
data16
pop
mov
rorb
mov
data16
xchg
pushf
nop
adc
mov
and
push
iret
out
sbb
jns
out
mov
loopw
adc
sbb
pop
cmp
lret
mov
cmpsl
jp
rolb
mov
mov
std
fcom
cld
mov
pop
xchg
lock
dec
push
bound
sub
mov
push
and
mov
mov
imul
push
push
xchg
sub
push
lea
add
lret
fisttpll
and
or
call
sbbl
sub
cmp
cmp
mov
pop
cmc
mov
pop
icebp
in
pop
cmp
mov
and
mov
jmp
mov
stos
insl
jo
jno
cmp
and
cmpsb
and
mov
xchg
ds
daa
xor
push
inc
jg
add
rorb
cmp
insb
dec
dec
lds
rcll
dec
pop
aad
pop
mov
cli
mov
add
loop
xchg
dec
jne
fwait
das
jge
mov
lds
in
xor
xor
jmp
mov
mov
popa
jnp
daa
mov
sub
mov
andl
insb
and
pusha
iret
lcall
xor
cld
dec
dec
jmp
ss
gs
popa
or
jmp
sarl
cmc
leave
fbld
icebp
mov
and
loope
ret
fisttps
adc
mov
mov
lods
fimuls
setl
orl
lock
pop
xchg
xadd
test
xor
arpl
pop
cmp
outsl
insb
lds
sti
push
jo
push
dec
sbb
sahf
in
xchg
push
js
xlat
inc
aad
cli
ret
jmp
test
dec
or
xchg
push
jecxz
sbb
add
sub
sbb
xor
ss
js
ja
inc
in
jae
cmp
mov
lods
mov
or
rcrl
jp
hlt
mov
test
adc
call
iret
jp
xchg
movsb
test
push
cmpsl
ja
dec
xlat
outsb
pop
xor
adc
fbstp
mov
push
sub
leave
inc
sar
outsl
iret
shr
pop
cltd
xor
lret
xlat
imul
jmp
inc
xchg
mov
pop
lock
and
mov
push
popa
out
arpl
in
cmp
pop
aas
stc
sub
in
mov
das
mov
popa
test
shrl
std
push
cmp
mov
xchg
add
test
imull
test
rclb
outsl
or
xlat
aas
mov
fwait
or
inc
daa
inc
sti
or
loop
enter
ja
ja
int3
fidivrs
jp
fistl
loopne
jb
aas
movsb
fcmovnbe
and
test
cwtl
aas
push
test
push
loope
orb
adc
std
jg
das
cmp
repz
lret
add
lds
cs
aas
insb
lea
mov
inc
addr16
mov
loopne
fstps
mov
xor
aad
mov
repz
sub
jmp
fstl
sub
mov
adc
bound
mov
dec
xor
imul
inc
cmc
mov
xor
mov
xchg
sub
pop
repz
ss
jae
or
daa
mov
or
sbb
add
jge
in
mov
js
push
scas
lds
jge
ret
dec
xlat
jmp
aam
mov
xchg
cmc
pop
mov
ss
xor
imul
adc
xchg
mov
pop
out
js
test
ja
lret
addb
popa
shrl
jbe
andl
bound
lcall
mov
pop
dec
and
jnp
mov
mov
les
jmp
outsl
stos
mov
iret
jmp
sub
int3
scas
and
inc
fdivl
jecxz
jge
in
cmpsl
icebp
push
inc
rcrl
cmpsl
pop
hlt
xor
insl
ficompl
hlt
mov
and
outsl
pop
mov
pop
and
shrb
movsl
mov
mov
xchg
cmpsb
jae
cld
push
xlat
pushf
jmp
mov
jno
sub
lock
cs
into
jb
and
xchg
xchg
lcall
cs
cmp
sbbl
adc
jp
push
mov
dec
loope
enter
clc
inc
jo
xchg
dec
xor
imul
or
or
xor
loopne
daa
scas
pop
jae
ss
add
stc
icebp
enter
lods
xchg
add
or
cmp
repz
adc
data16
aas
xchg
push
push
loope
dec
jb
je
imul
pusha
xor
std
mov
and
enter
notl
sbb
icebp
iret
lcall
fldz
mov
loope
sbb
mov
cltd
call
cmp
pushf
stc
xchg
aas
sbb
push
sahf
jg
xor
movb
ja
or
mov
xlat
outsb
lret
pop
and
mov
fistpl
sti
lea
test
arpl
cltd
xor
mov
mov
push
rorb
fstl
insl
cmp
xor
xchg
mov
or
xchg
push
xlat
inc
notl
sub
hlt
push
jne
mov
lods
sbbb
jl
mov
fwait
xchg
add
cmp
pop
push
adc
shll
fwait
into
repnz
fnstenv
push
pop
nop
jo
push
inc
les
into
ja
sti
adc
pop
imul
jle
jo
pop
cmpsl
xchg
data16
lret
mov
xchg
sub
fstps
sti
push
movsl
mov
fnstcw
xchg
dec
repnz
or
xor
shrl
push
cmp
pop
mov
pop
mov
cld
lock
fwait
jnp
push
je
shlb
stc
pop
in
ja
imul
aaa
insb
ret
jnp
jmp
dec
fsubs
dec
xlat
jle
mov
jno
aas
mov
pop
orl
int3
outsb
icebp
movsl
lahf
lods
rcrl
sbb
xor
jnp
jo
xchg
sbb
shl
out
inc
lcall
and
mov
imul
sub
mov
insl
mov
dec
addr16
pop
mov
sub
xor
call
push
sbb
lods
into
popf
pop
in
mov
ss
sti
mov
jae
lret
xchg
pop
cmp
scas
and
dec
jnp
cwtl
fsubrl
test
scas
dec
or
and
cwtl
jmp
ror
xor
test
inc
xlat
cmp
mov
xor
js
jne
mov
sbb
and
fstl
mov
jne
in
push
stos
cwtl
cmp
cmp
daa
ds
fwait
mov
adc
or
mov
das
sbb
xchg
pop
shrl
ljmp
dec
bound
pusha
or
or
cwtl
fucomip
leave
jne
cmp
insl
jno
fcomip
ret
xor
xchg
mov
push
not
lret
hlt
jmp
xor
sti
pop
filds
push
in
leave
popa
es
ljmp
fdivs
cmp
aaa
jb
cli
push
dec
dec
insb
xor
mov
mov
adc
mov
hlt
jge
fwait
push
lock
fwait
pop
cmp
dec
lods
xor
mov
pop
test
sub
aam
icebp
hlt
mov
mov
sub
scas
jae
icebp
xchg
jno
xchg
ret
lock
pop
add
mov
pop
mov
movsb
repnz
stos
pop
mov
scas
lea
outsl
jne
add
xor
lods
aas
fldenv
cmp
push
sub
andb
fdivrl
cld
pop
push
or
fsubrs
or
in
sub
dec
fildll
addr16
imul
arpl
mov
add
jne
in
mov
push
or
shll
out
mov
out
stc
xlat
xchg
shrb
fildl
dec
lds
jno
adc
pop
sti
test
ljmp
jecxz
int3
movsb
jle
cmp
jg
in
push
aad
test
dec
mov
das
xchg
mov
sbb
jl
addb
jle
mov
add
jg
dec
pop
lret
lods
push
and
dec
icebp
cmp
ret
sub
sahf
loop
sarb
test
aad
pop
fisubrs
js
lcall
add
jns
test
filds
xor
ja
and
lea
sub
inc
xor
lcall
push
mov
and
je
pop
lock
mov
dec
mov
xchg
add
repnz
cli
lods
xchg
enter
xchg
mov
ret
loopne
mov
out
push
fnsave
cmp
mov
xchg
into
sahf
pop
in
cmp
add
pushf
movsl
cmp
dec
or
push
xchg
ret
jle
cmp
lret
ret
pop
notb
repz
mov
nop
mov
ljmp
movsb
lret
sti
lds
mov
in
shll
mov
dec
sub
lcall
stos
or
pop
icebp
fistpll
fldcw
int
xchg
pusha
idiv
fwait
xchg
sub
sbb
scas
mov
add
sub
dec
inc
fbstp
lea
lea
xchg
cld
lcall
cwtl
add
scas
sbb
cmp
lds
insb
stc
fstpl
rcl
push
xor
xor
rorl
lahf
add
xchg
xchg
es
sub
mov
fwait
data16
or
loopne
int
decl
cld
push
mov
xchg
mov
movsb
mov
out
xor
std
xor
ret
fisttpll
xchg
movsb
inc
adc
dec
dec
adc
cmp
mov
or
jle
adc
mov
fstpl
pop
push
js
outsb
cmp
pushf
xchg
sbb
pushl
or
ljmp
cmpl
push
mov
mov
pop
jb
aam
jecxz
pop
push
out
loope
subb
sbb
push
sbb
push
jecxz
push
cmc
arpl
dec
loopne
outsl
cmp
in
jo
mov
sbbb
cltd
sub
outsl
xchg
jp
stos
dec
lods
inc
push
test
cmpsl
inc
leave
mov
decl
xlat
jmp
in
jns
dec
stos
sbb
mov
add
mov
xchg
dec
lret
into
add
mov
push
leave
divl
leave
jecxz
cmovle
push
out
jle
rcrl
mov
sti
xor
ret
divl
aam
fwait
insl
daa
out
sti
or
flds
mov
mov
mov
sti
cmp
jno
je
and
mov
pushf
push
data16
js
in
inc
fcoml
xchg
cltd
gs
stos
xor
jno
xor
dec
pop
sub
stos
fcmovbe
jns
mov
std
aas
cltd
imul
xor
xchg
sti
xor
push
jecxz
xchg
lcall
js
or
push
mov
pop
xor
in
jo
xor
inc
aam
data16
clc
xchg
sub
xor
cmc
mov
push
daa
repz
insb
xor
pop
jmp
pop
je
xchg
out
jmp
movsb
das
sbb
jl
aad
daa
or
push
push
pop
rclb
popa
add
sbb
pop
rcrw
outsb
mov
aaa
xor
adc
loopne
mov
lcall
jne
jnp
lret
pusha
dec
pop
xchg
xor
es
ror
jb
daa
lods
inc
cltd
outsb
std
gs
mov
leave
mov
xchg
call
jmp
add
inc
es
xchg
push
xor
mov
jb
sbb
cmp
xlat
pop
push
mov
int
xor
pop
out
add
lahf
pop
mov
adc
pop
mov
jecxz
add
rcr
dec
mov
sbb
cmp
sbb
pop
push
lods
mov
into
leave
mov
pop
adc
bound
iret
mov
test
hlt
outsb
leave
pusha
pushf
push
or
cmp
xchg
sub
mov
dec
cmp
fidivl
sbb
add
cmp
jne
lea
push
add
test
gs
fiadds
outsl
fnstenv
mov
mov
cli
inc
push
test
push
adc
clc
inc
sbb
cmp
xor
popa
aam
popa
push
push
in
jbe
pushf
dec
push
push
xchg
sub
jg
pop
lock
pop
cmp
sub
lret
inc
adc
adcb
aam
mov
ljmp
jno
mov
jg
stos
lock
ffreep
movsl
sub
jbe
fwait
notl
loopne
lock
fiaddl
fadds
inc
fwait
aaa
lock
sbb
pop
jb
fbstp
pushf
jne
or
repz
push
add
popf
loope
pop
aas
aaa
pop
call
shrb
cs
mov
cld
or
lret
and
sub
repz
jl
insb
cmc
adc
cmp
mov
imul
push
mov
iret
mov
or
repz
mov
add
or
ficoml
cltd
inc
cmp
or
add
jl
and
testb
clc
lahf
xlat
fdivrs
push
out
pop
das
mov
add
mov
or
test
mov
cwtl
or
hlt
adc
in
int3
push
ljmp
push
incl
loop
ret
popf
jnp
push
mov
idivb
jp
xchg
shll
and
add
push
std
es
jbe
hlt
popf
pop
cmp
dec
sub
fs
jmp
pop
xor
add
cli
xchg
jle
dec
loope
loopne
les
dec
scas
add
and
push
push
sub
adc
adc
mov
sbb
fimull
mov
cmp
mov
pop
xor
ss
dec
cmp
inc
mov
movsl
xorl
cmpsb
sbb
mov
in
mov
push
ss
xor
pushl
mov
ljmp
fimuls
movsb
xchg
xchg
shll
fnsave
sbb
lret
ds
mov
movsl
lds
cmpsb
les
imul
jnp
icebp
jnp
sbb
xchg
pop
mull
lock
xor
shl
js
adc
push
outsl
ret
movsl
fwait
xchg
fcomps
cmp
pop
lea
rcr
mov
repnz
mov
cmc
xchg
mov
fildl
add
jge
cltd
jg
add
adc
sbb
dec
ss
jmp
aad
dec
nop
sbb
fstpt
out
data16
stos
mov
xorl
cli
rolb
gs
iret
jae
ret
xor
aaa
jb
add
lret
sti
inc
inc
outsb
orb
pop
xor
cmp
icebp
lret
icebp
das
arpl
jo
sub
data16
ds
push
sub
pop
xor
xchg
jne
inc
stos
dec
loopne
daa
fisttpl
test
mov
stos
shl
je
decl
adc
push
dec
sub
psrlw
mov
sub
loopne
repz
cmp
jecxz
cmp
cmp
dec
pop
rcl
scas
into
jae
cmp
insl
jle
lods
inc
stos
xlat
insl
sahf
adc
inc
cmpsl
inc
sbb
jmp
add
cmp
sub
shll
cmp
jg
rcrb
jne
inc
adc
ds
adc
add
adc
shrb
bound
sub
cmpsb
in
mov
cmpl
mov
mov
add
out
push
xchg
fistpll
xor
sub
sbb
cmp
iret
inc
mov
out
fstpt
lods
pop
push
inc
add
fisttps
xchg
sbb
iret
and
int3
mov
nop
xchg
dec
xchg
mov
xor
popf
pop
jmp
roll
xor
shlb
in
jg
add
xchg
cmp
sti
andl
push
rorl
mov
sub
mov
sub
push
in
subl
or
outsl
movsb
push
stos
jo
pop
fdivs
shll
lret
rclb
shl
shll
notl
divb
xlat
mov
and
mov
aad
repz
or
pop
scas
xor
arpl
push
std
and
orl
fdivrs
jns
mov
mov
or
test
pop
mov
mov
addr16
sbb
adc
int
pop
jecxz
enter
push
aaa
push
mov
adc
rol
aam
insl
stos
in
bound
cmc
aam
jmp
xchg
jle
sbb
imul
inc
in
sarl
or
xor
mov
mov
std
orb
sub
cmp
cltd
xchg
xchg
das
pop
sti
add
sub
jbe
mov
aas
xor
mov
cli
fmull
cli
push
push
jns
cmp
or
sub
jne
dec
mov
mov
imul
jnp
sub
and
cmp
fwait
lret
xchg
stc
shlb
or
xchg
es
test
leave
fldenv
fs
or
mov
inc
out
pop
mov
invd
das
shrl
pop
push
popf
push
pop
pop
repz
daa
add
shll
lret
add
fnsave
cmp
imul
mov
adc
addr16
cmp
pop
outsb
jnp
mov
or
pop
fadds
add
int3
dec
sub
repnz
jmp
lcall
and
pop
popl
int
mov
popa
cmp
mov
decl
jge
adc
cmp
lahf
arpl
cmp
lret
pop
mov
mov
dec
outsl
and
inc
mov
lea
shll
test
push
in
mov
mov
xchg
adcl
stc
mov
pop
adc
mov
xchg
mov
xchg
lcall
sub
daa
sahf
cmp
adc
and
rorb
test
cmc
xchg
lods
lods
mov
out
jne
mov
adc
mov
lock
and
ret
push
mov
push
dec
ret
mov
fistps
out
xchg
cmp
cmp
xchg
loope
mov
movsl
ret
shrl
rorl
jle
xlat
jl
mulb
mov
fistl
out
cmpsl
jne
mov
ja
xchg
daa
data16
iret
cld
xlat
xchg
shl
into
sub
cmpsb
push
push
icebp
cmpsl
sbb
pop
ret
mov
sti
ret
mov
xor
fbstp
or
sbb
stos
add
imul
push
cmp
jge
stc
xor
adc
adc
enter
mov
mov
xor
sahf
aas
shlb
sti
aas
ljmp
cmp
jno
inc
add
mov
cmp
dec
loopne
enter
or
xchg
ja
std
dec
push
test
push
and
push
jne
cmpsb
mov
sbb
pop
out
mov
mov
jp
mov
mov
ficoms
sbb
jle
orl
mov
repnz
ffreep
dec
adc
dec
xchg
jp
cmp
clc
out
fstpl
shll
ret
xchg
out
lret
jns
mov
cmpsb
mov
xlat
push
jnp
cmc
lahf
or
clc
daa
fstpt
mov
cmc
inc
cli
movsl
mov
cltd
push
mov
out
xor
mov
stc
jnp
inc
stos
aaa
adc
push
shrl
cmp
cmpb
nop
mov
inc
sarl
je
lahf
inc
and
cmp
mov
push
mov
pop
jle
pushf
cli
idivl
mov
sub
push
aam
jg
in
int3
pop
aas
pop
mov
push
jmp
cmp
jp
or
leave
shlb
or
out
push
jae
xor
push
je
sbbb
jnp
jnp
pushf
mov
mov
sub
mov
test
dec
inc
sbb
gs
ja
adc
outsb
lods
ljmp
and
hlt
je
push
insl
cmp
xor
ret
repz
mov
jp
shlb
jge
xor
push
je
ret
das
xor
fs
je
pop
rclb
add
inc
and
jno
ljmp
push
int
ror
inc
sbb
mov
sbb
inc
pop
and
lock
mov
xchg
gs
loop
icebp
jo
std
test
inc
fisubs
jg
mov
les
xor
stos
push
jno
xchg
cmp
xchg
cs
fcompl
xor
out
mov
ret
jle
push
data16
ficoml
out
addl
xor
cwtl
clc
pop
lcall
loopne
les
lret
xchg
les
lret
dec
repnz
scas
jecxz
push
arpl
scas
int
imul
mov
xchg
pop
ret
insb
mov
jae
lds
outsl
sbb
xchg
in
pop
pop
mov
push
rorb
xchg
cs
mov
popf
subb
inc
test
inc
imul
cli
fs
aas
imul
inc
pop
xchg
insl
adc
hlt
inc
push
dec
imul
add
pop
sahf
and
std
dec
xchg
mov
jne
insl
jge
push
jg
int
mov
fistpll
push
cmp
add
aam
cwtl
add
lcall
push
clc
daa
jnp
aaa
fiadds
rcll
cli
pop
repz
das
ds
xor
cmp
sub
in
inc
in
cmp
pusha
xor
adc
sub
jmp
dec
int
out
pop
movsl
mov
cmp
not
call
sbb
jge
xchg
cmp
mov
dec
add
lret
arpl
adc
sti
sub
hlt
sahf
lods
es
ficompl
jle
xchg
pop
testb
add
dec
repnz
sbb
ret
cmc
shlb
mov
cmpsb
push
addr16
lahf
mov
jae
pop
repnz
cmp
test
adc
mov
xor
rcrb
ror
adc
inc
pop
int3
push
pop
and
pusha
test
jle
jno
mov
sbb
mov
xchg
addr16
push
outsb
xchg
out
xor
mov
test
lea
out
je
jne
jle
jg
and
mov
negb
xor
out
adc
mov
or
add
sbb
pop
cmp
enter
lcall
xchg
mov
mov
mov
stos
cmpsl
pop
mov
ss
cmc
addr16
icebp
push
push
xchg
or
sbb
arpl
insb
pushf
and
dec
mov
dec
rorb
gs
push
jg
dec
leave
movsl
mov
insl
loopne
shll
psubusw
ljmp
mov
fstpt
fidivl
pusha
bound
cmp
mov
fnstcw
add
je
push
sub
das
rolb
add
push
push
shll
clc
aam
loopne
sti
test
sbb
mov
jmp
iret
sub
ds
pop
mov
fbstp
sbbl
pusha
std
cltd
rclb
rcr
mov
mov
nop
rcr
adc
xor
dec
dec
out
in
jne
mov
jecxz
add
push
inc
pop
sub
mov
jne
ljmp
pop
loope
mov
shlb
and
and
iret
movsl
inc
mov
stos
jmp
push
fwait
sub
mov
dec
popa
pop
xor
or
sarl
xchg
loope
mov
xchg
sub
jge
icebp
lahf
or
rcll
sti
fwait
push
pop
mov
dec
or
adc
jno
dec
in
add
adc
int3
fsubs
and
or
and
xchg
mov
add
push
out
mov
pop
fldlg2
fsubr
cs
das
adc
int3
fwait
mov
int
das
adc
insb
std
je
cmpsl
mov
inc
push
xchg
rcl
and
rcll
je
aas
cmpsb
sub
flds
rcrb
jno
cmp
pop
jmp
mov
aas
adc
cmp
sbb
in
std
mov
jg
xor
or
int3
push
sub
lahf
sub
sub
sbb
push
xor
cmp
sub
out
adc
iret
push
and
in
xor
loopne
jb
sbb
adc
shl
xor
scas
cmpsl
loope,pt
nop
sarb
sbb
push
sbb
jno
and
push
push
aam
xor
mov
iret
jns
popa
popa
sub
sbb
add
int
in
repz
xor
xor
mov
jmp
adc
mov
jo
or
and
cltd
pop
popa
lods
pop
mov
insb
lret
test
jecxz
enter
mov
jnp
mov
sbb
cmp
and
dec
push
fcomps
sbb
aad
insl
add
es
xor
mov
ljmp
jbe
adc
pop
leave
cmpsb
je
push
out
sbb
jbe
and
lret
in
add
push
cmpsb
cli
mov
mov
fistpll
push
mov
inc
in
lcall
mov
mov
pop
mov
push
dec
sub
shrl
jecxz
bound
push
ss
das
stos
adc
sub
lods
add
scas
adcb
add
ret
sbb
xchg
repnz
aas
mov
in
cmpsb
dec
lret
fsubrs
xchg
test
call
jp
loopne
lcall
or
mov
xlat
inc
neg
ss
xchg
mov
adc
and
and
push
xor
imul
adcb
xchg
xor
pop
adc
and
xor
fisttpll
scas
cmpsl
pop
sub
mov
add
daa
push
mov
clc
push
aas
xchg
ljmp
and
aam
cli
push
jae
push
daa
inc
jbe
cmpsb
les
mov
fimuls
and
xchg
pop
jbe
ret
cmp
lods
fwait
int
lock
jnp
insb
mov
pop
ss
les
pop
imul
pop
lea
out
inc
lcall
das
add
fsubl
lds
fidivs
insb
sub
xchg
pop
outsl
or
push
dec
mov
mov
sub
pop
push
mov
cmp
cltd
fcoms
scas
lds
mov
dec
cltd
xlat
pusha
sti
xchg
sub
cmpsb
xchg
or
jg
mov
int3
cltd
push
mov
xor
mov
aad
jo
mov
sub
mov
dec
nop
int
jl
mov
neg
insb
sbb
mov
xchg
stos
mov
xlat
sbb
shll
xchg
loope
ret
out
lods
inc
cmp
push
sti
inc
ret
dec
jbe
int3
pop
xchg
push
lret
pop
in
cmp
cmpsb
pop
pop
loop
test
mov
add
mov
mov
and
pop
pushf
sub
pop
inc
out
fcmove
out
cli
cld
sti
sbb
inc
xor
dec
gs
rol
jecxz
out
insl
push
mov
rep
dec
pop
push
pop
or
loop
ljmp
imul
popf
hlt
std
pop
mov
mov
xchg
pop
jle
lods
flds
les
leave
adc
cwtl
mov
mov
lgs
ret
mov
add
scas
hlt
mov
scas
xlat
imul
clc
lret
xor
jmp
push
ja
xlat
int3
sbb
popa
cwtl
push
mov
das
and
mov
testb
xchg
out
and
jp
pop
and
jle
jns
stos
stos
jmp
pushf
and
and
inc
mov
clc
nop
sbbb
shll
ja
pop
insb
jg
inc
pop
sub
stos
hlt
inc
ror
lock
test
xchg
mov
push
inc
les
js
mov
dec
jecxz
add
cmc
cmp
je
rolb
mov
push
daa
into
ja
pop
das
xor
popa
push
jle
cmpsl
sub
pop
leave
cmp
mov
add
in
adc
xor
inc
pop
out
int
sahf
jg
outsb
add
jg
and
add
ret
push
push
push
aam
decl
sbb
adc
mov
popa
or
add
inc
mov
or
xchg
dec
sub
leave
mov
ficoms
sar
loope
fldcw
xchg
lds
testb
test
jle
or
push
addr16
cs
out
addr16
xchg
test
fcmovbe
iret
and
cmp
popa
stc
jns
pop
mov
movsl
jns
ds
add
test
push
popa
clc
mov
add
pop
add
js
int3
out
dec
jp
out
mov
jnp
test
leave
or
aaa
jae
cli
subl
sahf
loopne
cwtl
out
ret
pop
orl
pop
das
sbb
xchg
dec
mov
sbb
sbb
fbstp
or
cmp
aam
and
out
xor
push
sub
repnz
das
and
push
inc
insl
push
xorb
mov
hlt
xchg
mov
push
sahf
gs
xchg
or
jne
sub
jp
cmp
xchg
shr
les
test
xchg
shlb
or
sbbb
mov
xor
sub
push
dec
sbb
add
or
mov
xchg
sbb
cmp
xchg
pop
sahf
lds
bound
aas
jmp
lods
add
pusha
mov
inc
sub
stos
fldln2
pop
stos
add
fdivl
clc
xchg
push
add
insl
push
inc
lcall
mov
std
leave
int3
test
ja
iret
pop
cmp
scas
imul
enter
adc
adc
out
je
lret
shrl
push
xor
mov
jb
jmp
xor
rorb
mov
xor
sub
mov
fidivl
inc
filds
cmpl
adc
mov
addr16
add
movsb
loopne
ljmp
jno
xor
mov
jnp
in
or
fiadds
cwtl
pcmpeqd
stos
lock
xchg
mov
stc
dec
fbld
cmp
pusha
mov
adc
jno
popa
in
jns
push
mov
add
or
arpl
sub
jge
into
pop
or
insb
sub
mov
mov
jp
mov
fisubrl
add
sbb
test
and
popf
aaa
jle
cmpsl
mov
ret
jb
inc
inc
repnz
sahf
js
ja
jns
outsl
adc
jmp
mov
mov
xor
in
out
add
inc
shrl
addr16
aad
inc
push
adc
mov
fwait
and
adc
lds
cs
aaa
aad
inc
cmp
ret
cwtl
dec
mov
push
push
and
bound
ret
push
flds
mov
and
lahf
stos
and
test
mov
xchg
xchg
and
je
aas
mov
push
pop
dec
mov
inc
mov
xchg
inc
loope
inc
sti
mov
loop
les
cmp
xor
fdivrl
js
loop
lock
lods
outsb
gs
mov
fsubrl
jae
cli
cmpsb
mov
lea
fcompl
repz
mov
lock
les
je
mov
inc
adc
cmp
aaa
test
add
fildll
and
xchg
mov
xchg
ss
adc
clc
sub
hlt
xchg
mov
pop
mov
or
stos
cmp
fnsave
enter
in
or
inc
fsubrl
push
addr16
stos
xlat
daa
fnsave
adc
mov
add
repz
fsubr
jp
pop
xchg
sarl
mov
sti
push
sahf
xchg
fistpll
nop
out
dec
add
cwtl
pusha
lds
cmp
popl
pop
aam
shlb
dec
dec
out
inc
sbb
rcll
xchg
stos
push
lahf
pop
jg
fidivs
pop
mov
rorl
fdivl
sarb
shlb
jg
mov
inc
test
mov
addr16
mov
mov
pop
bnd
push
dec
out
push
jle
jnp
ss
cli
loope
add
scas
ret
std
jno
pop
pop
xchg
cmp
movsl
jp
pop
adc
fdivr
adc
out
mov
and
push
mov
mov
pop
xor
cmpsb
add
testl
pop
in
pop
stos
pop
in
xchg
mov
aad
test
jp
sbb
arpl
fsts
pop
inc
xor
mov
or
sbb
mov
mov
mov
cmpl
sub
dec
mov
mov
or
add
sub
jnp
movsl
nop
jge
jl
mov
jge
inc
push
rol
fld
adc
dec
jle
jge
xchg
test
inc
lock
sbb
sub
xchg
push
jl
das
cs
cmc
push
xlat
sub
jecxz
push
sub
mov
ss
pop
cmpsl
push
ja
xchg
sub
mov
les
mov
scas
in
pusha
lcall
aaa
in
cmp
pop
jle
mov
in
add
pop
scas
popf
orl
sbb
popf
lods
arpl
push
cmc
and
in
cmp
add
mov
pop
int
ja
xor
dec
push
mov
jp
cmp
jg
xchg
lods
outsb
mov
hlt
sbb
ret
and
popa
lods
and
aaa
sub
mov
nop
mov
sbb
insl
and
jg
sbb
out
clc
mov
stc
insb
pop
push
push
sbb
dec
movsb
imul
fwait
out
vmovlps
pop
pop
inc
in
jle
stos
sarl
sub
sbb
mov
mov
jae
jl
decb
sbb
popf
cltd
push
ljmp
sbb
aaa
lds
push
int3
sbb
mov
arpl
inc
mov
mov
xor
sbb
outsb
insl
and
fisttpl
lock
lahf
lods
and
cld
pop
je
sbb
cmp
dec
jmp
inc
std
lods
inc
popf
lcall
movb
std
js
lds
pop
jecxz
imul
and
adc
jg
repz
push
dec
push
jg
insl
stc
or
dec
and
add
rorb
sub
pusha
or
xchg
rcr
mov
js
fsubs
sti
cmpsb
sbb
sbb
push
loopne
mov
divps
sbb
shrb
cmpsb
imul
xlat
xchg
adc
lds
xchg
sbb
stos
sti
fwait
jge
jnp
sub
in
aad
pop
or
hlt
sub
sub
push
icebp
adc
xchg
pop
cli
dec
dec
loop
lcall
mov
add
testb
and
jo
jno
mov
clc
bound
test
cmp
and
mov
bnd
add
inc
fnsave
cmovp
sub
les
dec
inc
add
dec
xor
andb
dec
cmc
push
les
jmp
daa
jnp
mov
mov
cltd
adc
ljmp
lahf
lods
adc
loope
imul
movsl
mov
push
testl
stos
outsb
adc
xchg
pop
lcall
stc
or
out
gs
imul
push
dec
dec
int3
std
jl
push
scas
push
push
add
andl
lahf
sbb
xchg
test
scas
rorl
cmp
cmc
int
jecxz
sub
das
out
ret
adc
add
mov
push
mov
xor
lods
xchg
dec
add
fnsave
cmp
sbb
loopne
inc
mov
push
insl
mov
dec
loop
lret
cli
pop
call
mov
stos
loop
adc
loop
daa
and
out
pushf
push
xor
neg
inc
enter
cmpsb
ret
out
jecxz
adc
sti
mov
add
test
imul
ljmp
aaa
adc
test
mov
xor
lret
mov
cld
cmp
fcomp
jae
add
jb
fldl
test
subb
subb
dec
push
mov
xor
push
mov
cwtl
cltd
test
mov
or
add
inc
inc
nop
pop
push
jmp
ss
push
daa
xor
cld
je
jne
xor
test
xchg
pop
icebp
adc
ds
adc
jp
les
add
dec
repz
cmp
ja
insl
test
lock
pop
clc
aad
leave
mov
jbe
add
jbe
sbb
pushf
in
int
xchg
and
sbb
nop
int3
fwait
push
mov
sahf
cltd
and
xor
js
scas
test
scas
imul
sub
jecxz
loop
pop
xor
push
clc
xchg
mov
das
push
jno
scas
clc
loopne
in
js
test
sbb
int3
mov
and
dec
vhaddpd
pop
mov
icebp
dec
in
les
xor
idiv
xchg
rcrb
or
sbb
and
cwtl
loope
xchg
cwtl
cmpsl
shll
pop
stos
push
jnp
mov
in
or
idivl
imul
enter
sbbl
add
jmp
or
popl
imul
pop
mov
push
add
jo
sbb
das
in
jge
dec
ljmp
lcall
sahf
mov
and
mov
sub
xchg
mov
std
pop
pop
sbb
sbb
dec
xor
xor
loopne
aad
adc
jae
dec
sbb
mov
or
aad
add
cltd
cmp
fucomp
xor
cmc
adc
xor
scas
xchg
xor
ss
je
ljmp
push
pusha
pop
out
insb
ss
cmc
in
es
inc
cmp
or
mov
xchg
xor
push
jp
test
lds
hlt
sbb
jmp
shll
imul
add
dec
popa
outsb
int3
xchg
fwait
les
shll
dec
pop
fisttpl
mov
out
out
dec
lahf
dec
sub
lods
add
les
add
bound
and
fucomp
xlat
cmpl
sbbl
cmp
es
adc
mov
mov
xchg
mov
fdivl
test
sti
jno
cmp
fcoms
psrad
jp
push
mov
dec
hlt
fidivrl
pop
mov
cs
push
add
sub
popf
fcoms
leave
int
and
out
add
jecxz
adcb
pop
sahf
scas
outsl
das
std
pop
sti
pop
testb
jp
mov
sbb
imul
inc
jge
insl
mov
mov
rcr
fdivrs
pop
movsl
cmpb
jnp
sub
clc
cmpsb
add
xor
test
xchg
aam
cmpsl
and
out
jmp
xor
int
fisubrl
leave
popa
aam
stc
sti
xchg
bnd
jle
lcall
clc
movsl
pop
lret
jp
mov
lds
xor
loope
aaa
jbe
mov
xchg
rolb
xchg
xor
rcrb
ja
imul
cmpsb
pop
nop
stos
add
inc
fdivr
or
scas
cmp
arpl
inc
xchg
jne
jecxz
inc
test
shl
pop
cli
stos
sbb
cmc
or
inc
mov
or
ret
mov
fnstenv
push
adc
cmpsl
jp
dec
mov
dec
es
fmuls
add
xlat
push
cmp
cmpsb
je
sbb
pop
mov
sbb
push
sub
mov
lcall
out
ficomps
out
adc
enter
mov
ret
sub
pop
cmp
repnz
inc
imul
adc
mov
aad
imul
test
inc
aad
into
fsubrl
daa
jae
movsb
inc
lret
push
jns
sbb
xchg
mov
mov
adc
cmp
pop
sbb
jb
lea
sbb
roll
pusha
sbbb
pop
fimull
xor
sbb
or
mov
adc
pushf
xchg
out
gs
mov
mov
rcrl
cmc
mov
or
and
aam
dec
pop
pop
mov
mov
sahf
cmc
andl
mov
call
or
data16
je
pop
fwait
cmp
xchg
inc
pusha
filds
mov
adc
cld
fidivrl
mov
shll
js
inc
cld
cli
adc
addr16
cmp
lock
out
inc
dec
or
cmp
pusha
or
cmpl
add
and
popf
lods
fwait
mov
pop
mov
popf
movsl
or
inc
aad
ljmp
pop
lock
add
inc
out
clc
jmp
adc
dec
shl
pop
nop
shr
mov
movsl
xor
adc
xchg
cmp
in
data16
xor
inc
push
ficoms
or
cmp
stc
je
fstps
mov
cli
arpl
mov
pmulhw
inc
or
lods
mov
arpl
add
mov
enter
cmp
lods
sti
stos
mov
xor
je
xchg
cmpsb
jns
mov
outsl
mov
mov
mov
outsb
mov
fdiv
and
mov
adc
popa
nop
xor
ss
shl
out
inc
sbb
sbb
mov
ret
xchg
sarl
in
push
out
bound
inc
arpl
fsts
jae
stos
movsb
mov
mov
aam
out
inc
xchg
negl
test
stos
in
dec
push
inc
cmc
scas
testl
xchg
pop
dec
test
popf
movsb
pop
mov
mov
in
push
out
aam
cmp
movsb
aam
jecxz
aad
outsb
xorl
mov
movsb
dec
inc
add
mov
add
adc
cmp
sbbl
daa
mov
insb
adc
lods
inc
xor
push
stc
inc
xor
add
ja
push
test
adc
mov
jmp
xchg
cmc
fisubrl
xor
adc
or
mov
bound
int
pop
add
push
push
lret
dec
mov
dec
test
cmpsb
sbb
das
mov
clc
cmpsl
xor
and
ljmp
mov
sbb
xor
popf
cmp
mov
imull
fisubl
dec
add
lcall
outsl
in
and
insl
in
xchg
mov
aas
dec
bound
ja
cmp
ror
fbld
inc
lret
incl
jns
popf
jecxz
mov
lods
fs
push
inc
fnsave
and
fsubl
stc
stos
xchg
inc
adc
movsl
sbb
icebp
or
pop
subb
push
outsl
push
xor
scas
mov
dec
xor
cli
pusha
clc
mov
bound
lock
lds
enter
push
in
lret
cltd
clc
std
inc
mov
inc
dec
push
stos
sub
nop
mov
in
test
mov
adc
push
fsts
bound
in
rorb
enter
out
popf
xor
push
nop
mov
lret
pop
roll
fmull
aam
push
cmp
sbb
dec
push
inc
cmp
mov
subb
adc
addb
fmull
lock
push
jmp
and
ljmp
sub
fildll
mov
cltd
dec
pop
push
jns
movsb
mov
std
sub
mov
imul
sti
mov
lahf
add
in
mov
cmp
popf
mov
jno
push
add
pusha
stos
in
pusha
fnstenv
test
jo
dec
mov
dec
sub
jnp
jbe
inc
lcall
loop
pop
addr16
aaa
out
cli
loopne
rcl
adc
mov
call
mov
xorb
jecxz
ds
dec
pop
mov
fdivl
xor
and
adcb
gs
cli
mov
adc
lods
jge
mov
mov
pop
or
push
push
ret
xor
adc
jle
lds
out
or
push
movsl
mov
aam
imul
xor
mov
ret
xlat
add
cmp
ficomps
lret
fbld
out
xchg
cmp
sbbb
or
jno
fimuls
mov
or
pop
scas
inc
mov
pusha
push
pop
xchg
dec
in
icebp
pop
xchg
arpl
sti
popf
inc
xor
jb
add
sub
mov
imul
jns
sub
mov
inc
push
pusha
call
jo
cltd
jge
rclb
xor
into
arpl
mov
adc
adc
das
cs
fwait
jne
mov
pop
mov
add
push
ror
lcall
popf
ss
sbb
testl
hlt
mov
mov
jnp
rolb
loope
mov
stos
add
mov
scas
pop
push
decb
mov
cmp
push
out
jno
mov
daa
and
repnz
fwait
pop
adcb
xchg
and
add
lahf
rcrb
das
jno
pop
fadds
sbb
int
rol
rorb
loop
cmp
mov
cmpsb
pop
sub
inc
in
or
push
sub
xlat
into
test
cmp
pop
mov
cwtl
mov
rclb
icebp
mov
xor
cmpsb
inc
jl
sbb
add
mov
mov
sub
cmp
lret
test
dec
rep
cmp
push
ror
mov
cmpsl
sub
std
xchg
dec
dec
cwtl
cmp
pop
cmp
mov
xchg
mov
push
mov
xchg
icebp
int3
inc
mov
repz
mov
mov
es
orb
cmp
fimuls
jg
test
bound
sbb
add
push
adc
rolb
lods
stc
icebp
aas
push
dec
cmc
int3
das
mov
arpl
lret
mov
jae
jg
sub
cmp
les
and
daa
ja
aam
dec
mov
xchg
sub
adc
das
xor
push
lret
js
pusha
and
call
int3
or
cmpsl
outsl
adc
mov
cli
insl
insl
insl
lahf
push
data16
push
cmc
inc
xchg
cmp
clc
int
iret
cmpsb
sbb
lret
ds
aad
aad
pop
cmp
dec
js
mov
mov
sub
lock
sub
and
inc
testl
lret
xorb
mov
push
jmp
xor
xor
andl
xchg
jmp
dec
into
arpl
xchg
imul
ljmp
add
les
or
mov
or
cmp
inc
mov
aad
xchg
pop
ret
arpl
repz
rorl
adc
insb
fcomip
out
lcall
lret
mov
aad
xor
jmp
jno
inc
mov
dec
lcall
out
fadd
lret
push
lcall
mov
arpl
jbe
mov
push
sub
adc
dec
in
jne
jbe
adc
ss
loopne
icebp
mov
in
fsts
add
add
in
xchg
jo
clc
dec
ss
loope
or
inc
js
push
fistl
nop
xchg
fildl
outsl
add
xchg
mov
mov
rorb
loopne
and
jo
enter
popa
and
mov
ret
pop
rcll
out
jge
cmpsw
rclb
je
cmp
push
outsl
or
sbb
sbb
cmp
imul
inc
lock
jo
push
aam
xor
cmp
lea
scas
aas
jg
in
cld
rcrb
xor
repz
int
mov
popf
outsl
pop
lahf
dec
lea
sarl
dec
aaa
das
mov
adc
adc
in
sub
dec
jg
jae
pop
inc
pop
xchg
push
mov
push
sahf
rorl
dec
xchg
push
mov
enter
sarl
add
jae
and
xor
jge
jg
xchg
arpl
cwtl
iret
fxch
out
iret
xchg
push
in
xchg
mov
mov
testb
jo
push
fidivs
cld
xlat
popf
mov
cmc
ja
cmpsb
jo
adc
cmpb
push
sub
dec
xor
movsl
mov
xchg
sub
pop
jge
and
pop
pushf
lock
xchg
add
lock
xor
xchg
popf
aaa
xchg
sub
fidivl
inc
cmp
or
adc
into
xorl
mov
ret
add
adc
lcall
hlt
mov
inc
gs
adc
mov
pop
in
mov
inc
out
in
loop
inc
adc
iret
aaa
ds
lds
push
add
add
daa
das
sub
nop
lods
inc
mov
stc
idivb
nop
fidivs
mov
mov
jae
push
in
sbb
mov
in
add
movl
popl
sbb
jmp
aam
into
hlt
arpl
loope
cwtl
gs
cmpb
push
mov
cwtl
mulb
jnp
cmp
mov
aam
inc
sub
cmp
jae
leave
int
stc
fdivrl
imul
test
mov
ds
adc
or
stos
in
les
cmpb
add
testb
xor
test
ja
push
insb
pop
mov
outsb
clc
sahf
adc
add
movsb
dec
lahf
jp
loope
inc
adc
in
movsl
testb
dec
add
test
outsb
arpl
dec
scas
test
inc
push
out
es
adc
fiadds
scas
pop
cmp
xchg
cmp
xor
dec
in
icebp
dec
cwtl
not
push
lods
out
xchg
mov
mulb
mov
insl
xchg
sbb
add
ja,pn
pop
lock
or
out
or
dec
push
jmp
ret
cmp
cmp
pop
and
inc
add
inc
push
loope
es
inc
bound
dec
rorl
pop
sar
push
or
pop
pop
push
add
out
dec
ret
rclb
std
pop
add
outsl
mov
stos
xlat
push
pop
arpl
iret
mov
jno
mov
fsubr
addr16
gs
fisubl
pushf
ficoml
lret
popa
sbbl
fs
shll
repnz
fimuls
or
dec
repz
cmp
push
jmp
dec
sahf
pop
clc
push
cltd
xor
mov
jo
arpl
jne
inc
xor
sbb
cmpl
cwtl
cmpsb
inc
cwtl
pop
fsts
arpl
lret
lock
loopne
rol
cmpsb
insl
dec
iret
jp
aad
and
es
or
pop
cmp
dec
or
sbb
mov
mov
cltd
int
movl
je
pop
add
pop
loop
inc
push
roll
mov
daa
cmp
test
rcr
cmpsb
subl
cmp
clc
test
cmp
popa
scas
mov
xlat
dec
std
mov
jp
push
push
fsubrl
leave
push
testl
jle
jo
push
sub
mov
adc
int
ss
push
nop
inc
and
mov
pop
mov
int3
mov
shll
repnz
cmp
adc
inc
pop
mov
fidivrl
jl
jle
fnstenv
push
mov
int
sub
testl
in
dec
pop
push
mov
stos
pop
sbb
jne
pop
cwtl
mov
out
pop
test
and
pusha
sbb
cmp
jno
or
cmp
inc
and
out
sbb
aad
movsl
push
mov
lds
insl
das
sbb
imul
mov
sub
sub
add
cmp
clc
imul
test
xchg
daa
xchg
imul
in
les
imul
leave
int
pop
adc
dec
cmp
xor
lea
cld
or
push
inc
sbb
fnstsw
mov
mov
out
ds
addb
jbe
xchg
sub
cmpsl
movsb
sub
in
popa
add
sub
jecxz
cmpsb
fisttps
test
inc
out
aad
pusha
out
loop
sub
cmpsb
or
cmp
rorl
xchg
lock
out
insb
dec
dec
push
ja
xlat
shrb
lock
push
mov
sub
sbb
pop
mov
in
mov
adc
pop
int3
cltd
xor
std
adc
xchg
shll
sbb
adcb
bswap
hlt
cmp
and
lock
lcall
fisubl
loop
sub
pop
aaa
pop
mov
cs
ror
test
ja
xor
test
push
push
cld
push
std
sub
xor
jecxz
fdivr
shlb
mov
jno
dec
sub
arpl
jg
add
repnz
aas
into
fdivrl
sahf
repnz
and
mov
nop
ljmp
lahf
inc
cmp
or
sti
jg
pop
in
pop
mov
add
mov
in
dec
repnz
test
enter
ret
ss
es
mov
pop
push
jbe
test
xchg
scas
aam
imul
lcall
sbb
xchg
push
mov
sub
cmpsl
mov
pop
xor
cmp
sahf
rcrl
mov
js
arpl
call
iret
sub
push
xor
sbb
fs
mov
repz
test
mov
adc
sti
push
addr16
repz
lock
xlat
jge
push
bound
mov
jl
push
daa
pop
test
mov
mov
mov
push
lods
xchg
xchg
aaa
inc
clc
lods
jo
loop
icebp
fdivr
jmp
es
ds
and
push
ds
out
andb
les
push
mov
or
mov
push
decb
lock
jne
xor
test
cmpsb
arpl
imul
push
lret
mov
push
sbb
out
xor
daa
loop
fdivrp
ja
add
out
lods
lods
push
adc
testb
mov
adc
aas
movsb
ss
aaa
repnz
dec
insb
lret
sbbb
call
adc
icebp
sub
jo
pop
mov
jne
mov
mov
mov
xchg
inc
fstl
bound
xchg
dec
xor
scas
mov
mov
jg
sbb
xchg
cmpsl
ret
repz
push
or
sbb
ljmp
jne
add
xor
cmp
cmp
jae
xchg
xchg
fists
aaa
push
inc
adc
xchg
sbb
pop
dec
je
pushf
sub
addr16
les
aaa
and
int
mov
xor
or
test
mov
mov
xchg
jns
mov
movsl
mov
push
sbb
push
out
sub
jbe
movsb
mov
loop
fs
int
push
sbbb
mov
adc
sbb
ret
cltd
fisubl
jmp
mov
mov
int
loopne
dec
push
mov
pop
mov
frstpm(287
clc
or
xchg
test
mov
add
push
dec
inc
add
jmp
xchg
mov
sbb
or
xchg
shll
ss
imul
aad
dec
xchg
mov
daa
cwtl
and
inc
cltd
scas
adc
jns
dec
cwtl
lea
test
roll
orl
iret
adc
xchg
fdivl
jle
repnz
push
sbb
hlt
push
lahf
xchg
pop
mov
push
aad
rcl
fisttpl
xchg
or
push
jae
adc
sbb
mov
out
cltd
pop
adc
jbe
mov
in
pop
pop
cmpsl
pop
adc
lds
mov
dec
inc
data16
bound
rcl
jl
mov
scas
adc
dec
fldt
jae
mov
jle
xor
aam
add
shlb
daa
insb
out
je
jmp
aaa
push
ret
aas
int3
imul
jne
jb
idivb
daa
pop
cmp
push
adc
dec
sbb
push
push
dec
sbb
imull
cltd
push
dec
sub
fsubs
nop
mov
lods
jl
les
sbb
test
ret
out
pop
jecxz
adc
sub
movsb
movsb
test
fwait
aas
and
mov
es
push
inc
fistps
inc
sbb
addr16
mov
add
insb
jb
out
dec
loopne
ret
scas
int
push
jbe
out
xor
dec
rorb
mov
jmp
ds
imul
push
cmp
stc
out
arpl
ret
hlt
hlt
outsb
mov
lret
fsubrs
icebp
pusha
lods
daa
cmpsb
cmpsb
push
add
cmc
mov
sub
xchg
aas
incb
mov
loopne
gs
adc
push
movsl
insb
mov
and
mov
les
leave
imul
pushf
je
mov
mov
shl
push
ljmp
jb
add
push
mov
cmp
or
fucomp
sbb
hlt
pop
dec
es
adc
xlat
test
and
jae
sbb
mov
or
iret
and
jle
aaa
cmc
cwtl
shll
fs
adc
negl
lods
stos
mov
in
mov
mov
jo
xchg
mov
sarb
xor
rcl
cmp
gs
bound
sub
pop
in
addb
out
push
mov
sub
push
jbe
dec
mov
ret
jl
push
ja
nop
jecxz
push
inc
ds
leave
pop
inc
and
inc
jb
sti
and
in
movsb
or
repnz
push
leave
push
pop
cs
mov
jb
pop
les
push
add
andl
test
scas
mov
insb
shrd
mov
sbb
jl
fdivs
outsl
scas
push
jge
pop
fdivrs
xchg
jmp
repnz
sub
xor
inc
mov
cmp
mov
sub
xchg
cmp
lods
add
cmp
nop
xor
xorb
nop
jge
stos
cmp
push
outsb
xlat
in
and
lcall
jb
stos
mov
xlat
fdivl
adc
mov
jae
js
stos
aam
jl
enter
out
mov
xor
sbb
inc
sbb
cmp
xchg
add
sbb
or
imul
inc
push
mov
lahf
jbe
movsl
enter
std
scas
jge
xor
rclb
jmp
mov
push
xlat
and
dec
fwait
xchg
cmpsl
rcrb
bsr
xor
lahf
pop
add
cmpsl
cmp
pop
cltd
aam
cmp
test
clc
aas
leave
hlt
push
fimull
inc
and
ret
push
dec
out
pop
jmp
sbb
adcl
dec
mov
lret
out
and
mov
and
mov
mov
sub
hlt
mov
dec
jge
mov
sahf
pop
mov
add
imulb
cmp
test
push
cltd
sbb
scas
dec
jl
movsl
shl
sbb
fcmovnbe
repnz
or
or
push
lock
jge
sub
add
or
dec
rcrl
shrl
push
imul
les
xor
pop
fnstenv
int
mov
lods
jl
pop
mov
test
cld
subb
mov
iret
ret
mov
in
loopne
clc
mov
add
movsl
bound
dec
mov
xchg
dec
out
mov
jae
pop
insl
stos
push
test
movsl
hlt
scas
xor
sbb
jae
pop
pop
inc
mov
add
xchg
or
int
std
ficoml
dec
ret
dec
mull
pop
mov
xor
sbb
and
scas
jne
cmp
and
or
mov
jmp
test
cmpsb
dec
iret
xchg
pop
jno
lods
cmp
push
outsl
das
and
ret
xchg
jb
xor
rol
inc
cli
fbld
outsl
cmp
pusha
inc
test
jle
ficompl
stos
fbstp
mov
add
cmpsb
pushf
cmp
xchg
lds
stc
add
je
into
jbe
sti
xchg
add
mov
pop
or
repnz
or
pusha
xchg
lods
mov
fisubl
mov
das
shlb
out
stc
and
or
je
cmpsl
fs
and
lahf
clc
lret
lret
addr16
and
push
xor
int
and
dec
dec
xchg
mov
hlt
dec
imul
sub
mov
xchg
ljmp
es
aam
or
inc
sbb
inc
and
sti
jge
xor
jmp
enter
nop
pop
int
jb
mov
scas
inc
into
adc
adc
cs
popa
and
xchg
or
sbb
mov
iret
cmp
jmp
iret
enter
insl
mov
ret
xor
push
sub
pop
sahf
insl
mov
in
ret
push
stos
mov
jbe
movsl
sarl
push
cmp
inc
mov
cmp
sbb
jge
sub
fnstenv
pop
or
xorl
mov
clc
mov
rol
xor
mov
or
mov
add
xchg
orl
aaa
or
dec
cmp
xor
and
gs
ret
not
sbbb
bts
out
repnz
cmp
cmp
test
inc
int
inc
lea
cmp
dec
lock
push
jmp
aaa
bound
mov
fcmove
inc
dec
jmp
pop
popa
aas
xor
mov
fcoml
adc
mov
fst
or
cmpsl
inc
push
imul
or
push
pusha
jnp
pop
ja
xchg
rolb
push
cmp
mov
into
or
enter
cmp
push
mov
mov
push
arpl
mov
sbb
xor
jl
mov
sti
jnp
leave
arpl
cwtl
std
rcll
fsubrp
scas
nop
jecxz
xor
inc
into
enter
mov
or
enter
mov
pop
adc
sub
test
ret
mov
and
sti
lods
and
inc
or
mov
pop
iret
pop
or
in
add
add
add
push
ret
outsl
xor
mov
pop
dec
xor
lahf
mov
aad
es
pop
xchg
add
int
push
jmp
or
mov
hlt
add
dec
fldl
fyl2x
cmp
popa
sti
push
nop
xchg
mov
ja
sub
adc
gs
push
shl
xor
add
push
jnp
jle
dec
aad
xchg
je
adc
jg
and
inc
leave
pop
sub
adc
dec
push
cmp
inc
andb
cmp
call
shlb
jge
sub
and
jo
cs
ds
arpl
xchg
push
and
aas
jae
movsl
or
mov
int3
cmpsb
mov
inc
fistps
scas
mov
std
jae
jecxz
iret
mov
bound
jnp
adc
or
xchg
dec
in
scas
or
mov
mov
sub
xchg
jns
or
test
sbb
and
pop
jmp
aaa
sarl
cmp
in
or
lret
mov
mov
mov
jbe
dec
andb
pop
xor
cmpsb
mov
add
cld
inc
push
mov
loopne
dec
fadds
push
daa
mov
rcrl
inc
scas
xor
shr
insb
mov
mov
lahf
xchg
pop
movsl
loope
in
adc
add
lock
loope
fdivrs
sub
jmp
rorl
repnz
jae
out
test
inc
push
stos
xorl
xchg
or
lret
jecxz
push
xor
ljmp
jno
cmpsb
fwait
mov
pop
xor
mov
loopne
dec
cmp
inc
loop
xchg
inc
add
ds
pusha
pop
mov
xor
mov
in
rorb
call
mov
pop
aam
psubd
xchg
test
sub
rcll
or
lea
sub
mov
add
mov
mov
dec
sub
outsl
stos
mov
aam
icebp
adc
scas
pop
mov
lods
sbb
fs
dec
adc
xor
sub
mov
mov
xorl
mov
xor
test
xchg
lcall
enter
add
add
sbb
jns
dec
xchg
push
insl
jl
add
mov
aaa
mov
jo
insb
xchg
hlt
sub
push
sub
xchg
stc
pop
test
or
jne
mov
insl
rcl
insl
iret
lea
bound
rcl
push
xchg
mov
dec
dec
mov
dec
in
rcrb
popa
or
sbb
mov
adc
icebp
rol
xchg
mov
pop
hlt
mov
mov
and
in
push
jae
test
dec
xchg
into
pop
ret
adc
push
shl
in
adc
pusha
sub
pop
outsb
je
ret
xchg
xchg
cmp
add
mov
jl
fnstsw
xchg
xchg
push
pop
sbb
shlb
enter
out
popf
push
push
fdivrs
inc
fsubp
lcall
jae
and
pop
insl
inc
push
insl
pop
fstpl
cld
push
jbe
dec
push
inc
out
and
fucomi
sbb
mov
mov
adc
and
sbb
cmpsb
mov
add
cmp
add
mov
jae
loop
out
xor
int3
imul
inc
sub
fsubs
jl
stos
iret
xchg
jg
pop
and
clc
xchg
adc
dec
pop
xorb
mov
push
jl
inc
push
mov
aad
push
mov
and
movsl
cwtl
pop
cs
lds
testl
clc
in
mov
nop
xor
test
mov
mov
nop
jp
cmpsl
add
aam
pop
push
call
int
dec
jbe
sub
xchg
int
call
pop
out
adc
andb
pop
sbb
mov
ds
sahf
cld
xchg
inc
pop
shl
xchg
mov
pop
xchg
inc
dec
xchg
aam
add
in
push
push
xor
jbe
out
ror
cwtl
add
jg
mov
clc
popf
pop
dec
xchg
sub
jge
jo
pop
stos
jo
enter
dec
incl
rcll
fnstsw
dec
fidivrl
sbb
jmp
addl
sbb
arpl
sbb
arpl
pusha
pop
push
cmp
aam
je
insl
icebp
out
inc
push
mov
arpl
imul
pushf
inc
cli
or
cli
popl
sub
mov
sbb
add
addl
mov
cmp
test
outsl
out
mov
cmp
inc
fbld
add
mov
pusha
cmp
cmpsb
fldenv
fnsave
testl
dec
rorl
in
dec
sub
xor
popf
jecxz
add
scas
mov
mov
pop
imul
sar
leave
int
dec
out
sahf
sbb
adc
mov
out
jle
loope
sub
xor
lret
aaa
add
clc
adc
xor
inc
cli
aad
stos
mov
repz
add
sbb
insl
loope
pushf
mov
btc
cltd
cmp
dec
clc
adc
enter
shrl
mov
push
addb
push
fisttpll
cli
cmpsl
sub
adc
xchg
and
mov
xor
xchg
xor
dec
inc
ficomps
inc
cmpsb
movsb
jecxz
xchg
iret
sahf
jns
in
mov
int3
pop
dec
push
jae
adc
lea
inc
movsl
sbb
inc
cs
sub
sbb
jmp
cltd
in
imul
add
out
dec
mov
loop
push
out
adc
ret
movsb
rcr
loope
push
jae
push
sub
bnd
adc
jmp
sub
insl
pushf
nop
sbb
and
rolb
repnz
insl
sbb
pop
xor
arpl
xlat
pop
jg
std
mov
sbb
and
lcall
test
mov
jae
lods
mov
jae
es
dec
jp
xor
daa
adcb
pop
xor
xor
xchg
fucom
aaa
sti
ja
dec
jmp
xchg
sbb
lcall
add
imul
sbb
aas
xchg
cmpsb
sub
fs
lods
call
es
orl
mov
leave
jne
sub
xor
sahf
dec
dec
iret
fs
dec
mov
shl
ret
imul
add
int3
icebp
dec
cmp
dec
mov
int
mov
mov
cmp
push
shrb
fstps
sti
cmpsl
pop
mov
sub
int
popl
fsubl
fdivs
xor
sbb
cmp
or
push
loope
ljmp
call
leave
leave
jge
push
pop
aam
mov
sarl
push
xchg
mov
gs
push
outsb
jle
cmpsl
mov
mov
add
cltd
fcmovu
out
faddp
fldcw
std
xor
daa
jge
jnp
mov
out
fwait
jns
inc
mov
pop
push
cltd
ja
idivb
dec
or
cmp
jle
sub
mov
loopne
push
in
jno
cmp
push
imull
add
lret
repnz
mov
cmp
je
in
xchg
out
xchg
pusha
stc
adc
call
pop
inc
in
mov
xchg
jnp
ficomps
cltd
pushf
movsl
mov
mov
clc
out
fdivrl
loopne
mov
sub
leave
jns
or
jo
loope
sbb
mov
es
sub
inc
lods
add
lcall
cmp
mov
lea
es
and
jne
or
cltd
ret
xchg
fiadds
jne
movsb
inc
out
inc
adc
test
xor
inc
jle
adc
push
lds
cli
or
insb
int3
dec
loope
mov
xor
imul
loope
and
test
rcrb
xchg
cmp
xchg
outsb
dec
or
pushf
das
mov
into
push
jge,pn
clc
xchg
ss
pop
jns
sbb
out
sarb
add
adc
cli
push
inc
lret
xchg
xor
xor
lahf
or
fdivl
mov
sbb
jbe
mov
jb
sub
or
add
nop
adc
xor
mov
xchg
adc
out
cmc
es
shlb
negl
push
call
mov
inc
pusha
xor
cmp
cmp
jge
jecxz
test
lahf
lea
jns
sbb
fstl
jo
in
leave
and
mov
xchg
xor
sub
rcl
inc
and
add
sub
jge
mulb
add
addb
int
pop
fidivl
rolb
add
push
adc
mov
sub
and
clc
xchg
mov
xorb
shrb
notl
divb
fmull
fnstenv
xchg
mov
pop
mov
nop
std
and
add
mov
shl
lock
mov
incb
jo
jmp
loopne
dec
pop
shl
sbb
fistpll
cmp
jecxz
mov
mov
xor
inc
ljmp
and
pop
pop
cmp
cs
aas
pop
jno
sub
push
pop
adc
mov
mov
inc
iret
add
inc
cmp
jl
lods
jnp
loope
fiaddl
mov
test
xor
outsl
jmp
shll
insl
inc
les
icebp
xor
stos
jbe
js
iret
xchg
inc
pop
lret
xor
test
add
stos
mov
arpl
xor
dec
adc
jb
jno
call
test
into
or
sbb
sbb
popf
xor
sarb
xor
mov
fstps
sub
iret
loopne
cmpsb
cmp
pop
jg
shlb
pop
jecxz
dec
dec
cwtl
das
subb
mov
dec
mov
scas
add
jg
push
mov
outsb
movsb
and
test
add
cmpsb
sbb
xor
loop
int3
es
lea
int3
push
mull
out
jae
std
push
ss
ss
xor
test
jmp
add
mov
jnp
inc
fwait
lahf
nop
sti
movsb
rorl
and
dec
adc
lds
inc
jge
jbe
addr16
loope
dec
xchg
sub
mov
mov
add
insl
xor
pop
sub
hlt
or
iret
sbb
push
lea
mov
fists
mov
cmp
push
int3
pop
or
nop
jmp
stc
dec
sbb
lcall
and
fdiv
into
je
ret
stc
popf
sti
fwait
xchg
loopne
and
out
dec
mov
lds
sub
idivl
adc
mov
call
les
cmpsl
inc
cmc
mov
pop
and
in
mov
fs
push
pop
lret
push
pop
jp
popa
adcl
clc
push
or
or
xor
or
push
fcomi
icebp
cmp
jb
mov
pop
dec
ficoms
and
addb
aad
mov
outsl
jo
ds
push
push
xlat
sbb
jl
movsl
cmp
lahf
cmpb
pushf
repnz
js
pusha
ljmp
dec
push
dec
dec
repnz
lahf
imul
push
cmp
std
push
cmp
mov
dec
cli
lods
add
fisttpll
scas
fs
fs
and
aas
mov
mov
add
or
add
mov
pop
add
hlt
mov
enter
or
cmp
test
dec
std
sub
clc
sahf
adc
sbb
mov
fsubs
and
add
daa
loope
mov
shl
imul
daa
testl
aad
push
push
push
and
out
cli
rcll
jne
lods
push
lahf
stc
loopne
ja
or
sub
add
pushf
cmpb
add
dec
push
repz
or
jae
sub
les
cmp
and
cmpsl
pop
mov
pop
and
cwtl
arpl
lock
mov
in
add
push
hlt
and
mov
xchg
std
test
out
xchg
mov
scas
testb
fstl
cmp
mov
adc
cs
add
dec
subl
sub
sbb
jge
mov
pop
xorb
aaa
jns
dec
xor
sbbb
sarb
mov
scas
jl
sub
push
fnstsw
rorb
sub
loopne
xchg
sub
mov
mov
int3
movsl
ret
push
xor
xor
jge
push
das
scas
mov
sbb
or
je
pop
inc
fidivrl
xchg
and
and
popa
enter
add
in
push
sub
test
mov
inc
popa
dec
mov
xchg
loope
jge
cmp
in
lods
lret
into
into
inc
stos
mov
add
bound
js
sub
leave
xchg
push
push
dec
inc
adc
aam
insb
iret
xchg
mov
lcall
adc
int
insw
jge
mov
ret
rcl
xrelease
aas
push
aam
mov
dec
and
jb
in
adcl
push
cli
dec
mov
arpl
xor
std
mov
jp
pushl
outsl
fisubrs
pop
aad
in
mov
or
repnz
in
sbb
dec
arpl
pop
xchg
sbb
dec
mov
out
aaa
out
mov
in
int3
icebp
fisttpl
add
sub
add
daa
xor
push
cld
test
cli
lret
out
ret
sbb
adc
sbb
mov
pusha
in
fstl
ss
scas
movsl
jmp
aad
mov
pop
xor
fcompl
push
xchg
mov
mov
push
mov
jp
iret
mov
adc
push
xchg
mov
xchg
push
mov
sub
data16
fmuls
adc
lahf
cmc
aaa
into
out
iret
lcall
xor
lods
xor
add
lret
sbb
add
lea
pop
adc
cli
mov
xorl
add
aas
fwait
mov
xor
add
xorl
sbb
lea
xchg
stos
and
jge
jmp
mov
or
lcall
es
push
pop
shrl
popf
xor
les
movsl
mov
jo
in
scas
inc
das
test
cs
adc
in
pushf
test
push
jbe
ret
add
push
shll
repnz
fwait
adc
sahf
mov
jnp
mov
or
adc
call
orl
cmpsb
ret
inc
mov
sti
in
in
movsl
mov
enter
mov
fdivr
cmp
dec
cmp
out
ljmp
orb
ja
jnp
out
cwtl
mov
mov
enter
aad
and
loop
lret
add
inc
shl
push
mov
dec
and
cltd
push
repz
pop
out
movsb
in
test
lret
outsb
fstpl
mov
adc
leave
or
imul
movsb
mov
adc
xchg
scas
test
fucomi
pop
std
lret
jnp
outsb
mov
push
inc
cwtl
fwait
cwtl
gs
mov
lcall
pop
movsb
adc
loop
hlt
movsl
fadds
sub
jnp
aaa
pop
je
aad
fdivs
shlb
daa
in
xlat
test
mov
lds
cwtl
stos
stos
mov
push
fsubl
push
sbb
repz
mov
test
push
jbe
cmp
cs
mov
add
sub
shlb
xchg
mov
repz
clc
lret
mov
mov
inc
frstor
dec
fs
repz
cmpsl
pusha
cmpsb
xor
xchg
add
arpl
imul
cmovbe
xchg
dec
addl
adcb
cmp
mov
xor
push
ja
cld
sub
push
xchg
fnstenv
andb
adc
ds
outsb
sbb
sarb
aas
testl
aam
imul
mov
jmp
outsl
push
mov
mov
mov
jge
pushf
push
xchg
mov
bound
pop
mov
clc
sahf
insb
out
fmul
adc
push
push
in
inc
dec
inc
iret
call
pop
or
jbe,pn
cmp
xlat
push
pop
sbb
out
push
adcb
mov
cmpsl
mov
dec
addl
inc
and
pop
xchg
dec
inc
sbb
adc
jle
fs
pop
pop
or
cwtl
out
xchg
mov
mov
xchg
pop
sbb
in
js
lds
push
sub
cltd
adcl
imul
or
js
add
xor
cmpl
neg
in
int
dec
jae
dec
jb
pop
push
jnp
cmpsb
cmc
popa
movsl
xor
add
idiv
pop
loop
adcb
movsb
pusha
push
icebp
enter
or
cld
dec
mov
sti
adc
imul
or
addr16
or
ds
xor
or
jle
mov
cli
gs
pop
test
and
adcl
mov
addr16
jle
sub
mov
test
out
popa
mov
in
pop
cmp
call
lret
push
aas
imull
and
cmp
rolb
jp
dec
mov
dec
in
movl
pop
cs
cmp
sbb
push
lahf
stos
xor
loope
or
xor
mov
out
lea
add
pop
xchg
test
fstps
repz
out
ret
notl
xor
push
outsl
ss
sbb
cwtl
sub
pop
fbstp
sub
sbb
aaa
dec
xchg
loope
mov
mov
stc
ja
dec
jb
pop
das
addl
sbb
ljmp
cmp
cmp
push
call
cmpsl
das
or
repnz
icebp
mov
mov
lea
sub
cwtl
mov
jae
les
ss
xchg
xlat
stc
push
adc
cmp
pop
cltd
pop
repnz
inc
and
cld
in
mov
cs
rcl
repnz
add
mov
push
sub
jge
sub
dec
inc
lcall
cmpsb
dec
jb
in
push
sbbl
xchg
sbb
je
cmp
add
je
or
mov
sbb
and
push
data16
jae
push
sub
xchg
int
push
cmp
xsha1
cmpsb
or
sub
sub
ja
pop
push
jb
sub
push
arpl
scas
por
rcll
mov
jo
add
jbe
inc
cltd
mov
or
sti
push
lret
jmp
inc
shl
or
pop
movsb
dec
mov
xor
or
cmp
and
cmp
add
clc
jns
mov
aad
push
ret
xchg
xchg
aaa
lahf
mov
adcl
aaa
dec
lret
in
flds
push
ja
mov
mov
sbb
sub
xor
cmc
pop
pusha
out
or
fisttpl
sbb
stc
stc
pop
repnz
repnz
int
clc
pop
or
ds
negb
and
iret
cs
sbb
repz
or
aas
inc
jbe
inc
out
cmpb
jge
dec
mov
in
push
xlat
sbb
push
sub
cmpsb
add
push
or
addr16
and
lret
out
mov
clc
test
mov
in
and
test
mov
mov
mov
int3
and
in
jo
stos
in
stc
adc
and
outsl
mov
push
jge
fists
mov
xchg
xor
add
mov
dec
inc
push
dec
call
rcrl
jne
jne
mov
fdivs
inc
xchg
dec
arpl
neg
repnz
inc
enter
jg
mov
mov
xchg
mov
mov
jecxz
sbbb
sbb
jbe
push
std
mov
pop
ljmp
out
and
enter
sbb
scas
jecxz
lcall
pop
lret
in
inc
pop
jmp
cltd
xor
add
push
push
push
insl
jns
cmp
xchg
lds
jl
xlat
in
dec
push
jecxz
xchg
jp
cmc
add
outsl
xchg
add
dec
imul
ss
mov
push
dec
imul
outsl
sub
xchg
cld
jno
adc
das
movsb
in
inc
pop
sbb
std
neg
cmpsb
xchg
inc
testb
cltd
mov
movsbl
in
adc
push
push
cmp
push
mov
lret
mov
rcll
and
rcll
sub
cmp
loop
xor
dec
xor
sti
xchg
jmp
loopne
and
cli
sbb
inc
xor
inc
cmpsb
lret
lea
enter
xchg
pop
cmp
jecxz
mov
lods
mov
ja
xchg
mov
test
int3
jg
xchg
stos
push
icebp
cli
cmp
xchg
jp
mov
out
int
fbld
adc
cmc
outsb
lret
pop
jb
iret
xor
addr16
ja
mov
das
adc
jl
mov
sti
inc
insb
pop
cld
iret
mov
das
arpl
shll
sub
xor
notb
push
sbb
jmp
sub
lods
jg
sbb
or
cmc
dec
in
push
aad
xor
push
pop
push
inc
cmp
ja
stos
popl
test
std
repz
test
fisubrl
fildll
dec
dec
cmpl
xor
pop
dec
dec
aad
mov
push
lahf
faddp
fdivl
shrl
arpl
jg
sbb
cli
push
sbb
int3
sbb
mov
sbb
mov
icebp
pushf
pop
fs
scas
out
mov
adc
fs
xchg
or
sub
push
pop
pop
mov
scas
and
mov
and
sub
sub
xor
push
sub
mov
mov
sti
fildl
xlat
out
popa
test
or
popf
inc
xor
fldenv
xchg
dec
addr16
call
add
mulb
jg
inc
popa
xor
sub
xchg
push
icebp
or
test
push
cwtl
mov
dec
pop
jmp
ja
xor
movsb
imul
insl
inc
movb
into
push
int
std
pop
add
push
mov
arpl
in
pop
inc
lcall
xor
ljmp
fidivrl
ss
addb
inc
jmp
out
xchg
cmp
inc
xor
pop
cmp
push
shll
sti
mov
icebp
pop
pop
pop
xor
sbb
pushf
sahf
mov
cmp
fistpll
fdivl
and
out
shll
mov
ret
js
push
in
movsl
test
fstps
dec
inc
inc
dec
lea
pop
movsl
adc
jbe
fs
inc
pushf
loope
das
adc
out
test
rorb
dec
adc
cmpsb
dec
pop
dec
sub
shrl
xorb
fs
sub
and
outsl
push
cwtl
lods
xchg
jg
inc
cmp
xchg
test
aam
fs
daa
and
push
xor
lret
jne
divl
push
in
insb
pop
add
cmpb
outsb
imul
outsb
cmpsl
sbb
mov
add
mov
xor
fisttpl
mov
mov
pusha
jb
push
jae
mov
sti
clc
das
add
sbb
test
repnz
jl
clc
jg
sbb
xlat
mov
data16
pusha
xor
mov
imul
cld
sarl
cld
or
push
pushf
push
ljmp
inc
sbb
movsb
addr16
xor
jno
lock
inc
dec
inc
xchg
sub
adc
bound
pop
imul
rcrl
and
aas
mov
lret
idivl
and
mov
mov
aad
mov
sub
or
and
pop
mov
add
addr16
cld
cmp
adc
sbb
jg
gs
mov
dec
fs
cmpsl
adc
hlt
rclb
sub
jl
push
xlat
cmc
rolb
adc
xchg
inc
rcrb
jge
incl
mov
xor
jo
jmp
sbb
mov
push
popf
movsl
pop
push
or
dec
andb
fildll
les
loopne
dec
dec
pop
clc
or
jecxz
xchg
clc
inc
lret
mov
jmp
cmc
xor
sbb
mov
or
sub
push
subb
addl
push
popa
lea
or
push
adc
mov
shll
jl
xchg
cmp
sbb
scas
xor
les
outsb
scas
and
pop
decb
jbe
pop
add
sub
inc
mov
cmc
mov
pushf
sub
fsubrp
nop
fistps
dec
sbb
adc
and
aaa
dec
pop
cmp
xorb
mov
xor
mov
jbe
aas
out
and
ret
inc
inc
dec
sbbb
enter
pop
insl
mov
pop
or
cli
mov
aaa
std
sub
out
dec
mov
adc
mov
jnp
rolb
into
popa
mov
sbb
lods
xor
push
popf
pop
cmp
cli
pop
add
push
scas
fbstp
testl
pop
inc
push
xchg
jbe
jp
clc
fisubl
out
mov
ljmp
dec
xchg
push
jecxz
jnp
and
es
enter
test
mov
sub
jnp
push
and
jno
mov
mov
ljmp
js
bound
mov
out
dec
ja
mov
into
test
jl
lds
nop
xor
repnz
dec
in
adc
push
xor
data16
sub
out
push
test
lods
jbe
jnp
fists
mov
adc
insl
add
jno
movsb
dec
sbb
pop
sarl
inc
sub
mov
add
daa
cmp
pop
push
fs
mov
and
push
sub
push
push
notb
dec
pusha
shrl
xchg
pop
and
or
jg
xchg
addl
sahf
es
dec
aad
daa
cmp
jle
fisubrs
sub
cmp
ss
lds
outsb
cmp
aam
sub
mov
in
cmp
pop
mov
test
repnz
mov
rolb
pop
xchg
dec
loope
add
sahf
mov
xchg
lret
out
or
imul
jbe
imul
jno
dec
stc
popf
out
clc
jae
lds
xchg
xor
ja
push
in
sbb
cmpsl
pop
pop
push
movups
sub
cwtl
lods
xor
mov
fdivrl
xor
sbbl
xorb
pop
ss
and
sti
imul
xorb
in
or
sub
pop
imul
aad
aam
push
sbb
add
testl
inc
aas
push
out
xlat
adc
sub
das
fistpl
adc
hlt
popf
out
push
dec
in
mov
jno
ret
mov
mov
pop
repz
lret
mov
scas
jns
imul
out
subl
or
mov
pushf
loopne
movsl
pushf
ljmp
test
aad
xchg
sub
loope
fnstcw
data16
dec
mov
fmuls
mov
or
sub
lret
movsl
pushf
out
test
add
shlb
adc
addr16
xor
cwtl
arpl
pop
test
mov
inc
mov
fidivs
not
clc
in
sarb
mov
cmpsl
lds
inc
out
and
iret
or
cmc
lods
mull
sahf
mov
sahf
add
mov
in
jns
jmp
pop
aaa
or
test
or
pop
push
imul
sbb
sub
pop
js
mov
aad
sbb
cmp
dec
js
push
sub
pop
movsb
imul
xorb
mov
dec
dec
addr16
push
adc
mov
jp
mov
imul
push
ds
ret
sbb
cmp
lret
sub
orl
stos
or
sub
into
popa
adc
adc
into
add
jg
stos
pop
ja
and
adc
mov
mov
or
push
pop
pusha
jb
in
jbe
and
lahf
mov
mov
or
inc
scas
add
xchg
push
fildl
xorl
jmp
push
or
ss
push
xchg
aam
loopne
pop
icebp
xor
pushf
scas
mov
mov
sub
nop
xchg
or
lcall
or
in
stos
in
cmp
push
mov
lods
mov
xor
xchg
cwtl
hlt
push
lret
push
or
icebp
dec
mov
lret
sarb
imul
jg
mov
scas
jle
mov
mov
les
sub
sbbb
outsl
imulb
les
xchg
mov
sbb
mov
add
shll
loop
xchg
and
repz
pop
repnz
pop
stos
sbb
or
and
adc
jge
ficompl
xor
inc
enter
mov
fbstp
adc
cmc
in
fidivrs
ljmp
stc
loop
fcomp
xchg
cmp
les
nop
adc
inc
inc
cld
addr16
test
js
and
mov
adcb
fwait
and
sub
jge
mov
shrl
lods
jo
rcrb
mov
dec
pop
lock
dec
pop
lea
adc
je
cs
rclb
push
adc
decb
jmp
push
sub
mov
loopne
pop
add
inc
ljmp
xadd
xor
mov
stc
insl
push
in
pop
xchg
mov
adc
iret
sub
scas
fstl
enter
stos
nop
xchg
ja
jle
mov
out
sti
mov
xchg
js
jne
je
inc
mov
cld
xchg
subb
mov
add
daa
stc
xchg
outsl
ror
dec
sbb
loop
rclb
pop
popa
add
ss
and
popa
frstor
xorb
jns
sbb
lods
inc
cmp
sbb
mov
inc
add
and
adc
lods
out
sahf
sahf
pop
jne
pop
xor
sti
repz
mov
das
ret
fbstp
sub
pop
push
sub
lods
xchg
mov
and
insl
dec
ficomps
mov
loope
in
pop
inc
stos
dec
cwtl
pop
xchg
pop
cltd
cld
mov
or
sbb
adc
cmp
sbb
mov
xchg
jmp
or
out
call
mov
push
or
inc
cmpsl
rol
and
out
jae
aad
sbb
das
mov
jmp
mov
push
sub
xchg
push
xchg
sbb
enter
int3
insb
cmp
xlat
outsl
test
out
imul
gs
mov
movsl
negb
test
inc
push
inc
mov
popa
divb
or
test
imul
mov
testl
sbbb
repnz
push
std
adc
jle
cmp
loope
shr
xchg
icebp
mov
mov
mov
jp
aas
pop
rclb
xor
cmp
or
mov
jmp
or
stos
adc
mov
sub
repz
lods
pop
mov
xchg
fwait
pop
jo
sbbl
or
sub
mov
mov
dec
and
dec
mov
jmp
xchg
decb
and
rcrl
leave
pop
dec
stos
into
movsb
sbb
out
add
mov
xchg
movsl
aad
jp
bound
xchg
fwait
call
lcall
pop
dec
sub
ror
push
cmp
test
negl
push
fsubs
inc
or
jbe
dec
xchg
jmp
insb
int3
aaa
sbb
xor
lds
ljmp
and
andl
cli
cmp
mov
ret
aam
pushf
data16
jb
icebp
cmp
clc
jmp
or
push
dec
sbb
mov
mov
imul
xchg
das
add
imul
lcall
fsubr
sbb
push
sti
sub
mov
icebp
adc
insb
and
and
jo
jo
xor
adc
enter
clc
xchg
xor
sbb
add
fdivrs
bound
xchg
call
subb
sub
fs
jmp
push
pop
lock
test
dec
xchg
xchg
push
xor
aam
and
lds
popf
sub
into
lcall
and
fstp
int3
or
loopne
inc
mov
popa
cmpsl
push
push
sub
xchg
flds
divl
mov
clc
push
or
std
jge
mov
pop
aaa
jbe
cmp
sar
dec
push
movsb
aad
test
push
movsl
arpl
cs
test
mov
out
sbb
sti
stos
sbb
adc
or
sub
pop
test
push
adc
cli
mov
outsl
jmp
fisubrl
push
arpl
dec
out
sbb
out
cmp
mov
in
std
cmc
andb
lock
adc
loope
mov
scas
hlt
fldpi
sbb
sbb
out
sti
data16
mov
xor
scas
xchg
mov
cmp
inc
js
es
mov
mov
pop
fldenv
loop
or
mov
mov
repz
dec
or
cmp
into
push
in
or
scas
repnz
sbb
sti
mov
sub
push
shll
dec
add
or
les
jbe
sub
sub
hlt
sti
es
mov
addr16
pop
jae
cltd
leave
jg
sbb
xor
push
adcb
dec
ret
jb
lock
cmp
or
cmp
out
add
dec
das
int
and
mov
dec
daa
xchg
dec
fmul
movsb
addr16
pop
in
mov
repz
push
scas
inc
jmp
shrl
aad
cmpsb
in
adc
mov
cwtl
gs
aad
push
add
aad
mov
and
pop
aam
jmp
or
outsl
jge
mov
xor
xchg
ds
shl
mov
test
or
sbb
mov
or
dec
jmp
cmpsb
in
cmpb
fidivl
out
cmpsl
out
inc
mov
bound
in
adc
pop
xor
cmp
jns
pop
in
or
push
shrl
jnp
xor
jo
out
pop
and
or
or
mov
les
inc
imull
xor
or
shrl
shr
aaa
mov
pusha
ret
jbe
lcall
ret
fsub
pop
push
xchg
mov
inc
cmp
addl
mov
add
daa
mov
and
rcrl
arpl
jns
or
sahf
mov
out
adc
adc
mov
addl
or
pop
stos
das
mov
outsb
dec
aas
mov
pop
xchg
mov
add
add
push
xchg
dec
inc
fists
or
clc
mov
cmpsl
inc
jecxz
mov
push
mov
lahf
lahf
in
inc
inc
frstor
xchg
xor
fdivl
out
dec
adc
sbb
inc
mov
dec
stos
out
jns
inc
icebp
cli
iret
and
std
pop
fdivl
xchg
pop
insb
cmp
inc
pop
aam
scas
inc
inc
push
sahf
push
ret
fs
loope
xor
fidivs
mov
and
mov
mov
nopl
ficoml
in
aad
pop
into
hlt
pop
mov
mov
xchg
xor
adc
decl
mov
push
mov
popf
cld
and
cs
pop
enter
adcb
pushf
lods
inc
sbb
add
test
mulb
call
aas
mov
out
mov
iret
xor
dec
out
jae
sarl
pop
jmp
subl
sbb
bnd
insl
push
sub
lods
cmp
pop
test
shlb
stc
or
imulb
in
insl
roll
mov
inc
pusha
xchg
and
cmpsl
pop
and
xlat
data16
outsb
mov
aam
rcll
add
jg
push
jle
xchg
daa
mov
xor
push
cmp
or
sti
xchg
xor
andl
jnp
rcrl
pop
movd
sbb
andl
mov
mov
jl
push
xchg
dec
popa
lock
dec
loopne
cmc
movsb
ds
sbb
cmp
sbbb
jmp
jno
adc
xchg
pop
and
mov
mov
bound
xlat
dec
testb
jmp
adc
dec
idivl
ja
pop
mov
jg
movsb
xchg
mov
mov
and
insb
dec
inc
aas
out
cld
icebp
fistl
lret
xchg
lock
fucomp
jg
push
lds
push
or
mov
mov
leave
push
adc
adc
enter
lret
pop
sbb
call
adc
loopne
push
insb
int
inc
imul
xchg
adc
jns
adc
cmpsb
ja
push
sub
jbe
cld
insb
xchg
pop
out
test
iret
bound
sub
insl
sbb
xor
push
repz
jne
or
testl
inc
pop
push
lods
dec
mov
pushf
add
lea
ljmp
cmp
and
jns
pop
xor
sub
clc
push
loopne
movsb
fstl
int3
mov
arpl
or
sub
sahf
cmp
cmpsl
or
add
in
sub
ret
movsb
pop
mov
dec
in
sbb
mov
push
inc
sahf
sub
cmp
mov
dec
aas
push
mov
int
mov
adc
add
clc
out
pop
push
pusha
push
push
xchg
das
and
cmc
mov
xor
shlb
xor
scas
outsl
jnp
or
push
rcrb
ret
aam
in
fstpl
push
por
cmp
cmp
lahf
fs
jb
mov
loopne
cltd
and
out
hlt
clc
cwtl
das
sub
mov
ret
sub
pop
cmp
lods
cmp
pop
pop
ss
mov
xor
and
jl
ljmp
push
loop
inc
adc
sub
lea
sub
inc
lret
test
dec
jne
rcrl
shll
fisttpll
pop
sub
loope
mov
imul
mov
cpuid
andb
mov
pop
jno
bound
iret
sub
sbb
sub
push
add
cmpsb
inc
cmp
cltd
jnp
hlt
das
insb
dec
clc
pushf
imull
sbb
mov
scas
pop
jb
jae,pt
ss
push
pop
jb
mov
or
adc
jbe
test
inc
add
aas
hlt
vpsrlq
xchg
sbb
or
adc
push
lahf
rcll
pop
js
pop
mov
cmp
mov
je
dec
cmp
push
xor
lds
xor
movsb
push
leave
fwait
add
push
out
mov
mov
adc
mov
insl
jge
sahf
lock
in
mov
cwtl
fwait
das
ret
add
test
or
mov
push
jl
dec
imul
je
cmp
sahf
jge
and
cld
cmp
imul
jns
repnz
cwtl
jae
jns
loop
add
jns
sub
pop
push
repnz
mov
pop
addr16
mov
mov
sbb
push
sbbl
inc
push
hlt
xor
add
jge
std
es
push
aas
mov
fistpll
lock
scas
andl
sub
int3
popa
push
jne
push
mov
xchg
imul
push
mov
test
sti
loop
or
mov
xchg
sub
fidivs
mov
sarl
in
test
mov
sbb
jns
mov
cld
std
nop
outsb
movl
jne
jns,pn
xchg
lret
std
mov
lcall
push
or
inc
stos
testl
dec
pop
sbb
popf
mov
ds
cmp
or
push
sub
push
cmc
arpl
mov
jl
mov
pop
sarb
les
mov
hlt
mov
add
fnstenv
adc
cmp
in
test
clc
dec
popf
or
outsl
xor
xchg
pop
stos
cltd
aad
lret
cmp
imul
pop
xchg
ret
cld
popa
clc
jae
mov
stc
xchg
andb
mov
rorl
mov
mov
xchg
pop
shrb
int3
push
inc
das
jne
mov
les
inc
cmp
xchg
fisubrl
loop
ret
pushf
scas
mov
imul
aam
cld
push
mov
and
pop
loop
and
jle
and
movl
mov
push
ja
pop
call
and
sti
pop
jg
fucomi
jne
pop
cmpsb
and
push
sbb
clc
inc
xchg
sub
jne
mov
sbb
mov
test
fdivl
xchg
sub
out
jg
paddb
adc
imul
sbb
cwtl
dec
fs
push
outsl
push
inc
data16
leave
scas
xchg
adc
push
rclb
xor
pop
sbb
or
aaa
into
das
sub
sub
dec
pop
repnz
jns
sbb
xchg
mov
popf
fwait
xor
imul
xorb
xchg
mov
out
addr16
mov
fiaddl
lcallw
mov
xor
scas
ret
icebp
cmp
test
popf
sub
iret
or
and
cli
push
jmp
mov
dec
ret
outsl
adc
push
stos
mov
adc
jne
lock
fsubrl
ret
add
clc
mov
mov
push
inc
scas
xchg
jge
icebp
stos
xchg
addr16
cmp
add
mov
int3
adc
in
sti
xor
xlat
or
aaa
push
pop
adc
pushf
xor
out
jle
roll
in
jne
pushf
es
clc
or
out
insb
dec
dec
inc
fdivrs
mov
adc
inc
ds
pop
in
push
out
xchg
add
push
pop
cmp
inc
sbb
dec
adc
inc
nop
jg
shll
or
fsubl
fisubrs
jle
in
jns
sti
pop
push
sahf
mov
xor
filds
xchg
sub
jl
mov
lcall
rolb
push
cltd
fwait
and
xchg
aam
sbb
push
adc
mov
test
xor
jg
xchg
sub
adc
adc
push
mov
xor
sub
daa
pop
notb
mov
jne
adc
das
lds
jnp
aad
hlt
pop
mov
or
fnstsw
mov
push
mov
push
gs
and
aaa
test
fwait
subl
pop
pop
data16
mov
popa
cmp
pop
mov
insb
jns
sbb
xor
cmp
cmp
push
insl
aam
and
sub
xor
decl
cmp
pop
mov
sbb
pop
or
adc
jnp
out
inc
mov
sbb
dec
inc
jnp
js
mov
shlb
push
mov
and
loopne
inc
jecxz
jbe
imul
orl
data16
repnz
inc
dec
sbbl
pop
scas
jb
xor
aas
jnp
xchg
mov
loope
cmp
imul
out
push
sbb
xor
bound
add
adc
jno
movsl
iret
mov
push
xchg
push
sahf
xor
and
dec
or
mov
stc
or
imul
or
pop
scas
pop
xor
arpl
test
mov
push
leave
mov
mov
outsl
loop
popa
sti
test
jle
iret
outsl
loop
mov
rcl
lds
mov
push
imul
lret
jo
xchg
xchg
cs
shll
mov
movsb
sbb
insl
loopne
mov
sbb
fs
pop
xchg
xchg
mov
pop
scas
popl
das
pop
imul
gs
hlt
mov
inc
sub
lea
jecxz
jae
gs
inc
pop
mov
daa
je
mov
mov
jle
mov
in
es
mov
push
in
ss
lock
ljmp
and
or
mov
das
rcrb
mov
repnz
cld
popa
clc
sub
cmp
push
and
sub
stc
jmp
push
dec
lea
pop
mov
in
repnz
lds
outsl
jg
loopne
movsb
cmp
sub
sub
mov
jg
mov
pop
jmp
fsubs
mov
nop
xchg
ret
sub
push
add
pop
dec
sbb
lcall
sub
jmp
mov
inc
faddl
cltd
dec
fs
push
jbe
ljmp
dec
xorl
mov
and
xchg
call
sbbl
sub
mov
in
aas
int3
push
sbb
mov
ret
sbb
push
pminsw
lds
jns
jg
xchg
sub
jnp
imul
or
mov
pop
sbb
js
xchg
mov
fsubrl
movhlps
push
cltd
call
lret
sbb
mov
sti
fstpt
xchg
mov
ret
fnsave
clc
push
fdivs
fstl
add
inc
out
ss
xchg
sub
jo
ret
leave
dec
cs
or
cltd
rcrl
les
jecxz
mov
das
imul
jb
xchg
dec
sub
out
sbb
mov
mov
or
lods
or
pusha
cmp
cmpsb
lock
add
xchg
hlt
out
xchg
sbb
push
fisubrl
add
jg
cmpsl
sub
push
dec
xchg
cli
jle
aas
shrl
xchg
andl
lock
ja
cmp
movsl
fs
adc
movl
enter
lea
aam
test
dec
inc
notb
scas
lret
lret
loop
imul
lea
insl
fldcw
das
jbe
adc
and
lea
stos
in
js
jp
jb
adc
push
inc
ss
in
dec
testl
shrb
repnz
push
and
xor
gs
adc
push
push
int3
pushf
jno
xor
lcall
addr16
orb
les
cld
jl
cmp
jns
xchg
cmp
push
imull
pusha
nop
pop
ja
xchg
nop
mull
mov
mov
lea
faddl
cld
push
cmpl
inc
cli
add
loope
xor
stos
add
sbb
jae
xchg
pop
add
adc
cmp
jecxz
add
mov
mov
shrb
pop
mov
jp
cmp
mov
dec
pop
or
xchg
adc
push
test
aaa
lock
dec
popl
sbb
push
cmp
add
cli
filds
jne
and
mov
adc
jae
add
mov
scas
add
das
sub
cmp
mov
out
mov
mov
cmp
push
push
not
dec
jecxz
lahf
stc
test
outsl
push
subl
shlb
orb
mov
mov
aaa
lds
xchg
bt
cwtl
idivl
cltd
mov
clc
pop
lods
sbb
jne
mov
inc
adc
xor
lods
shr
xor
or
dec
scas
mov
pop
pop
rcl
jbe
lahf
pop
inc
pop
std
jnp
int
pushf
test
sbb
xor
aaa
cmp
cmpsb
mov
dec
fisubs
loope
popa
ror
gs
mov
scas
sbb
push
fdivrs
lds
sahf
xor
push
js
xchg
jge
inc
fst
movsb
add
xlat
test
jnp
test
push
movsb
imul
aam
andl
cmp
scas
push
cld
push
in
hlt
adc
clc
xchg
shlb
xor
scas
dec
xchg
sub
sub
push
dec
div
into
mov
xchg
add
inc
andb
imul
xchg
dec
lods
ljmp
jb
gs
int
xchg
sbb
in
icebp
fbld
rcrb
insl
out
xor
hlt
cmp
mov
cmp
mov
aas
cmp
repz
movsb
jmp
sub
cmc
mov
or
mov
mov
xchg
loop
or
sub
mov
mov
icebp
xchg
xchg
out
inc
mov
push
xor
pusha
mov
cmp
mov
xchg
daa
mov
mov
xor
and
in
adc
icebp
pusha
jmp
push
dec
mov
stos
in
or
daa
mov
mov
xchg
mov
cmc
jl
mov
aaa
popa
add
dec
xchg
imul
cmc
adc
xchg
test
mov
sbbl
adc
lahf
stos
call
hlt
xor
in
jne
dec
ret
jl
mov
iret
push
push
adc
paddsb
idivl
mov
leave
mov
outsl
daa
fs
ja
sbb
testl
mov
sub
das
addr16
push
push
or
pusha
jno
iret
addr16
fistps
jnp
ss
dec
or
test
cmpsl
mov
mov
jmp
scas
xchg
mov
mov
mov
cld
arpl
pusha
test
cmpsl
call
scas
add
push
push
psubusw
aad
xor
mov
fs
jns
jl
lcall
inc
ds
xor
adc
xlat
lcall
inc
cli
iret
test
and
rorl
imul
hlt
jp
aad
fadd
idivl
popf
mov
sub
fldt
outsb
add
rorb
popa
test
fcompl
cmpsb
sbb
lcall
outsl
jne
sarl
iret
mov
je
or
and
ja
in
sub
jns
and
mov
mov
or
cmp
aad
fstpt
mov
add
add
and
lret
nop
int
nop
jl
push
imulb
sbb
rcl
push
mov
imul
cmp
dec
add
fsubrp
imul
adc
adc
cmpsl
mov
es
ss
add
jae
xor
xor
gs
cmp
sbb
stos
xor
push
icebp
mov
inc
sub
push
stos
ss
dec
shl
lds
cmp
movb
andb
sbbl
and
sub
cmc
repz
out
mov
addr16
mov
shrb
xrelease
stos
cltd
lock
lods
sub
rolb
mov
cmp
call
dec
ret
js
pop
dec
sbb
lret
and
push
and
adc
scas
aad
lahf
mov
add
cs
lret
adc
fimuls
push
sbb
mov
jge
cmpsl
daa
sbb
lods
mov
stos
mov
push
jle
insb
dec
shr
movsl
dec
jne
fdivrl
push
sub
pushf
pop
mov
add
aas
or
pop
mov
lcall
inc
mov
mov
ds
dec
xor
xchg
imul
inc
lock
shll
mov
jne
in
pushf
sub
cmc
test
repz
pop
add
lcall
xlat
inc
lods
add
bound
xchg
sub
adcb
inc
xor
mov
sub
in
test
sbb
push
jae
jbe
hlt
iret
sbb
out
lock
inc
dec
movsl
repz
mov
adcb
jo
outsl
sub
inc
sarb
jge
jb
clc
lods
mov
insb
pop
push
mov
repnz
cs
rorl
fdivrl
inc
push
sub
stos
inc
push
xchg
xchg
mulb
adc
das
add
test
and
std
cmpsl
ds
ljmp
rcrl
push
mov
call
rcl
push
fcoms
cmp
jo
ss
stc
push
jnp
inc
mov
es
push
push
pop
jnp
mov
addb
xchg
aas
les
aam
dec
xor
lods
inc
dec
push
pop
sahf
dec
aas
xor
incb
add
lds
into
mov
pop
lahf
xchg
faddp
cwtl
daa
pop
mov
lods
xor
loopne
mov
cltd
inc
xrelease
dec
cmpsl
or
shrl
roll
adc
jle
mov
mov
push
dec
jno
mov
mov
loopne
and
sbb
jecxz
sbb
sti
xchg
lret
push
aam
mov
mov
adc
test
mov
push
cmpb
js
adc
sub
sub
aam
push
outsl
ljmp
mov
addr16
pusha
pop
cmc
out
xchg
add
or
xor
add
cld
stc
insb
ret
arpl
xlat
fdiv
clc
cmpsl
out
add
sbb
ljmp
jo
lret
data16
lods
scas
aad
hlt
add
in
gs
test
jae
pushf
mov
dec
or
cmp
xchg
hlt
jo
inc
cmp
pusha
testl
outsl
scas
insb
cld
enter
mov
pop
mov
lods
fcomps
dec
loopne
negl
movsl
xor
jno
aaa
into
notb
aam
movsb
cmc
adc
mov
inc
add
orl
cmp
add
dec
xchg
pushf
or
mov
add
test
std
or
int3
xchg
sti
xchg
enter
sti
aad
cmp
push
or
pop
mov
mov
jns
testb
pop
pop
xor
mov
inc
push
daa
push
xchg
adc
jno
fdivl
scas
scas
inc
pop
iret
cli
arpl
xor
ret
jg
pusha
mov
pop
and
and
adc
std
jbe
aad
mov
test
lret
aas
xchg
loop
sbb
repz
aaa
xchg
scas
push
mov
es
jne
mov
pop
ftst
or
movsl
cmp
jnp
xor
aas
clc
mov
or
pop
or
adc
xor
int3
mov
faddl
mov
mov
mov
mov
sub
insl
xor
out
call
mov
mov
fs
daa
gs
lret
addr16
data16
inc
test
jb
inc
push
aaa
xchg
add
shll
adc
filds
mov
mov
or
mov
outsb
das
inc
xchg
add
insl
mov
les
div
mov
popa
sub
mov
jmp
inc
add
shrl
pop
loopne
ss
or
outsl
fdivrp
xor
mov
push
xchg
jle
in
mov
ret
ret
loope
ret
cmpsb
adc
dec
cmp
mov
lret
notb
inc
push
dec
nop
stos
je
add
and
xchg
mov
pop
mov
lea
lahf
test
dec
mov
jl
repz
cld
lcall
xor
repnz
ret
dec
mov
jns
pop
pop
push
or
in
jnp
pop
je
movsl
inc
fbld
imul
xchg
lds
mov
inc
pop
lret
mov
aad
repz
xchg
idiv
mov
lock
xor
jo
push
sub
sbb
jno
cmp
jbe
out
int
and
xchg
es
leave
jge
test
rol
sbb
ja
xor
add
push
adcb
in
inc
mov
push
push
mov
cmp
jo
cmp
stc
lods
fcoml
addr16
add
cmp
jne
add
stos
movsl
sbbb
into
clc
popa
sub
daa
popf
aam
push
sbb
cmc
and
adc
fnstsw
negb
pop
mov
scas
fld
jb
bound
dec
fwait
adc
inc
inc
pop
jmp
cmp
lock
lahf
stos
pop
xor
test
xchg
pop
out
cmpsl
mov
pushf
test
cmp
scas
ffree
pop
orl
mov
movsl
jno
test
rorl
mov
xorps
push
cmp
cld
cld
cli
jne
int3
test
jno
jle
out
sti
dec
adc
or
in
pop
adc
add
imul
sbbl
hlt
fldt
mov
mov
daa
dec
pop
sbb
sbb
pop
ret
jp
dec
pop
dec
mov
stos
fisttpl
jmp
mov
push
mov
mov
mov
into
adc
daa
add
xchg
cmpsl
sbb
mov
xor
test
pushf
bound
cmp
test
mov
jne
pop
cmp
push
rorl
mov
pop
sub
add
xchg
dec
mov
mov
adc
xchg
sub
rolb
mov
xor
clc
jns
pop
mov
or
dec
xchg
pop
movsl
cmp
subb
push
cli
cmc
mov
push
and
jno
rclb
stc
inc
lods
mov
imul
pushl
and
lret
jmp
xchg
cmp
cmc
xchg
dec
adc
fistps
cmpsb
faddp
insb
jo
sub
in
mov
dec
jmp
sbb
imul
sub
inc
pop
mov
mov
in
adc
push
cli
movsb
push
bound
mov
cmp
inc
call
inc
pop
adc
mov
jecxz
test
std
sub
mov
idivl
lods
mov
test
and
mov
ret
dec
pop
out
insb
pop
adc
push
xchg
sbb
test
mov
pop
aad
and
push
push
call
push
mov
iret
out
test
jns
mov
jbe
cmpsl
ja
push
fisttps
sbb
mov
fisubl
daa
and
mov
or
andb
adc
fcmove
and
loope
in
fwait
ds
fs
lret
stos
jbe
pusha
outsb
les
xor
pop
sti
lods
push
inc
popa
pop
repz
mov
les
sub
repz
das
daa
cmpsl
sbb
out
test
les
dec
cmp
dec
stos
xlat
in
dec
or
dec
pop
mov
in
xor
cmpsb
leave
sbb
jb
adc
out
mov
lcall
inc
in
sub
xchg
jns
push
or
jmp
jns
loop
push
sub
ret
je
jns
outsl
add
dec
fsts
stos
push
scas
jp
xchg
cmpsb
sbbl
clc
pusha
xchg
imul
pop
stos
xchg
fwait
cmp
sbbb
push
cli
pop
xor
imul
lds
loop
mov
movsl
pop
lock
add
mov
loopne
jle
mov
nop
push
dec
mov
mov
and
mov
dec
das
jae
adc
cmp
push
clc
popl
xchg
sub
jnp
mov
shll
ljmp
ljmp
aas
xor
push
imul
dec
loop
sbb
adc
xchg
pop
aaa
inc
scas
test
pop
insb
ret
rcrl
cmp
jmp
ljmp
movsb
sbbl
daa
xchg
jp
and
mov
xor
cmpsb
xchg
cwtl
mov
add
dec
inc
or
dec
nop
sbb
fnstcw
jecxz
lahf
daa
pop
or
enter
inc
mov
pusha
imul
cmpsl
cmpsl
into
pop
cwtl
jl
paddb
popf
and
xor
outsl
lock
ljmp
icebp
xor
xchg
add
cmpsb
sbb
aam
lret
pusha
lcall
and
cli
jge
int3
pusha
cltd
outsb
mov
test
sbb
in
out
jle
mov
pushl
jge
jecxz
xlat
out
les
popf
sbbb
dec
sldt
mov
mov
je
enter
pusha
jnp
int3
jbe
or
inc
and
mov
xchg
fisttpl
cmp
sbbl
stos
mov
dec
mov
jb
pop
xchg
aaa
xchg
push
scas
sub
fcmovnbe
sahf
mulb
test
hlt
shl
mov
xchg
mov
in
pop
pop
test
mov
and
add
je
mov
inc
cmp
outsl
cmp
pop
cmpsb
jg
lret
jecxz
outsl
popa
pop
cmp
xchg
mov
hlt
jecxz
lcall
pushf
repnz
jle
out
scas
icebp
sbb
arpl
mov
push
mov
pop
notl
sbb
and
sbb
pop
pop
push
mov
jbe
out
dec
je
mov
push
shr
and
xchg
and
notb
das
lods
fwait
pop
pushf
lds
fistpll
add
push
and
and
pusha
insb
out
mov
and
ret
inc
call
cmpsb
cmp
dec
jg
pop
outsl
enter
movsl
popa
clc
ficompl
icebp
cmp
xchg
shrb
or
cmc
sub
scas
pop
mov
popf
fisubs
imul
and
in
cmp
jge
cmp
rcrb
push
xchg
add
mov
ljmp
add
push
in
je
add
ds
cs
testb
xor
mov
inc
mov
cld
enter
push
mov
pop
popa
outsb
rcrl
mov
cltd
out
mov
jecxz
jle
fisubs
xor
cmpl
int
add
in
add
cmpb
shrl
fisubrl
add
aas
xchg
mov
loope
jg
sar
xchg
sub
out
test
repnz
data16
nop
jns
ret
lea
mov
sub
sub
data16
imul
mov
jmp
add
sbbb
cmp
mov
cs
loop
decb
lret
jne
adcb
out
aad
fcomip
jae
insb
movsl
lods
adc
or
dec
xchg
outsb
mov
mov
or
fmul
ficomps
lds
punpcklbw
int3
push
inc
inc
test
lods
mov
xor
int
je
lods
push
mov
push
pusha
ret
mov
movsb
mov
idivl
adc
insb
sbb
sub
int3
cmp
outsl
out
in
push
push
adc
ret
out
cmp
add
mov
int3
loopne
fiadds
out
jmp
outsb
push
sbb
mov
imul
int3
mov
mov
jns
push
jmp
and
add
xor
pop
pop
test
ret
lahf
inc
lds
insb
jb
scas
lea
mov
nop
sbb
hlt
sbb
lods
pop
shr
xchg
push
inc
push
cltd
mov
mov
push
into
mov
enter
sub
lcall
cmpsb
sbb
jbe
mov
rcrl
hlt
adc
test
fs
mov
lret
cmp
push
in
mov
sbb
xor
mov
and
rclb
lods
inc
inc
dec
fidivl
movsb
into
sub
push
iret
fcmovnu
into
pop
dec
jge
cmp
mov
fildll
add
dec
and
fcmovu
addr16
aam
mov
out
jo
pop
stos
les
cmpsb
dec
jbe
push
mov
imul
mov
mov
shrl
mov
xchg
inc
fstps
aam
dec
pop
add
xchg
out
xlat
inc
push
dec
test
out
out
or
or
jl
sub
fsubrs
test
cmp
or
nop
outsl
loopne
jge
movsb
lock
mul
add
or
out
pop
rorl
mov
mov
cwtl
xchg
dec
roll
arpl
out
push
scas
dec
inc
lods
sarb
xlat
mov
jecxz
repz
inc
jmp
xchg
scas
jl
push
jbe
sub
push
sbb
outsb
cmp
stc
push
sbb
shlb
pop
enter
std
sbb
cmp
mov
adc
daa
add
dec
lods
mov
adc
stc
xchg
btc
sub
imul
out
out
and
hlt
dec
ljmp
jl
pop
jb
scas
lds
loop
pop
stos
fstp
repz
mov
pop
insl
mov
adc
and
xchg
xchg
lret
mov
sbb
xor
jle
mov
movsl
jl
pop
ret
cmpsl
ds
mov
mov
lods
jl
push
lods
or
xor
stos
lcall
or
fsubs
aad
call
mov
mov
cwtl
cs
mov
fnsave
mov
stos
or
aad
vminpd
jg
sahf
clc
repz
pop
lret
pop
and
cmp
jg
dec
aad
lcall
arpl
mov
mov
je
ret
mov
popa
ja
sahf
aad
xchg
daa
push
xchg
xor
sub
leave
stos
mov
cmp
adc
xor
lods
push
inc
test
repz
daa
inc
push
mov
in
jae
jno
fstps
dec
xchg
loope
addr16
iret
pop
jle
call
and
xchg
mov
lahf
into
inc
das
ja
fimull
add
jg
stc
add
add
push
cmp
jge
outsl
sub
out
and
sub
push
addr16
dec
fbld
cmp
and
fucomp
mov
das
sbb
xchg
add
scas
sub
push
sub
bound
testl
addr16
fs
les
mov
inc
xchg
lahf
out
scas
xchg
into
lahf
cltd
jb
or
push
aas
std
pop
clc
adc
mov
pop
stos
pop
stc
pop
jbe
ja
ret
sti
or
stos
inc
repz
or
push
mov
pop
fisubl
fnclex
dec
cmp
or
mov
xchg
cmpsb
dec
add
sbb
test
cmc
cld
pushf
mov
mov
adc
cltd
jne
insb
daa
mov
in
adc
mov
out
push
and
aad
stos
lock
mov
insl
jmp
or
enter
ret
lods
hlt
out
sub
test
mov
fucomip
in
inc
popa
add
lea
insb
jecxz
add
mov
cli
mov
test
inc
cmp
aad
je
mov
jbe
sub
or
push
insl
add
sub
dec
loopne
int
or
rcrl
pop
lds
lods
mov
dec
fisubrs
pop
ja
xor
lcall
in
iret
icebp
stos
dec
pop
xchg
mov
mov
pop
dec
bound
add
jae
aaa
fdivl
js
xchg
sub
and
inc
pop
outsl
js
add
andl
mov
andb
and
lods
out
pusha
shll
es
pop
jae
stos
popa
jl
scas
ja
ss
and
lods
out
ljmp
cmp
pop
pop
dec
mov
popf
sub
clc
sub
and
xor
or
dec
jg
push
inc
mov
cmp
push
fcompl
push
mov
cmp
outsl
jmp
cld
pop
inc
jg
jp
addl
pop
mov
sub
mov
dec
push
mov
cmp
jne
dec
xchg
outsb
repnz
nop
xchg
pusha
xor
push
movsb
in
out
mov
sahf
cmp
pushf
imul
and
push
bound
lahf
mov
xchg
mov
pop
js
ret
les
divb
pop
sub
jge
mov
cmp
inc
or
das
fidivrl
fsubrl
cmc
mov
imul
movb
das
add
sub
jno
add
jne
fcmove
and
xchg
sbb
stos
add
push
cwtl
or
pop
repnz
sbb
call
xor
mov
mov
pop
sbb
cld
out
push
rcll
fisttps
ljmp
rorb
and
bound
mov
ret
sbb
xor
imull
mov
inc
fidivl
sbb
inc
xchg
movsl
inc
push
nop
shrb
dec
jno
push
stos
xchg
andl
pop
stc
fimuls
adc
cmp
add
insl
inc
and
push
dec
fwait
push
icebp
xchg
jmp
or
add
lahf
rclb
lea
inc
ret
xchg
das
push
jge
pop
test
rcrb
rcr
jecxz
test
jmp
xchg
sub
int3
add
aaa
aam
movsl
mov
mov
dec
iret
inc
in
in
test
scas
in
sub
and
xor
cmc
loopne
jne
mov
adc
enter
or
sbb
dec
adc
leave
insb
fwait
insb
and
leave
add
call
fsubl
mov
fs
arpl
sbb
repz
cmp
scas
inc
mov
and
cltd
sub
mov
cmpsb
push
xchg
in
jne
lahf
push
imul
in
outsl
cld
sub
fsubrs
imul
das
sub
hlt
dec
and
fldl
xlat
daa
inc
addr16
out
mov
add
pop
lds
add
movsl
test
inc
lock
loopne
push
mov
xchg
lock
mov
cmp
gs
in
jns
fmul
cli
rorl
cmp
mov
or
xchg
mov
push
imul
push
jmp
cmp
ljmp
add
icebp
mov
fwait
pop
test
mov
push
sbb
add
xor
clc
jg
jg
out
sbb
cwtl
int
insl
test
fldenv
fucomp
add
inc
enter
mov
sti
out
stos
lods
cltd
stos
push
dec
les
inc
imulb
sti
xchg
movl
fbld
push
mov
fs
sub
js
pop
in
sbbb
xchg
je
and
mov
push
jp
dec
testl
enter
jne
test
dec
cmp
out
or
iret
cmp
les
aas
enter
repz
inc
ss
bound
insb
xchg
inc
repz
or
sbb
fisttpll
jne
cmp
mov
and
sub
ret
je
jecxz
sti
and
stos
mov
mov
push
lock
cmpsb
mov
cmc
jp
and
xchg
imul
shr
jmp
pop
repnz
dec
flds
xlat
or
jmp
mov
cmc
xchg
scas
ja
in
cmpsb
imul
insl
fwait
les
xchg
sub
mov
rorl
add
je
and
stc
adc
testl
pop
jns
in
fadd
rorb
cmpsl
ja
mov
xor
in
stos
icebp
add
inc
push
addr16
das
insb
lods
jmp
aam
popf
scas
cwtl
negb
cmp
cmp
ljmp
sbb
mov
sbb
repz
rcll
outsw
cmpsb
jle
adc
lret
mov
fmul
xlat
out
cmpsb
std
ficompl
sbb
push
mov
xchg
mov
fwait
pushf
das
repz
in
pop
test
lods
sahf
repnz
xor
jnp
call
xchg
test
insb
hlt
cmp
pop
push
dec
pop
dec
add
sbb
out
mov
pusha
or
cmp
xchg
add
add
jo
in
out
push
cltd
xor
imul
aad
call
or
les
sar
shrb
jg
or
test
mov
pushf
xor
pop
imul
jno
xadd
push
lods
mov
inc
jo
xor
nop
mov
sub
inc
test
data16
pop
dec
jne
cmpsl
out
pop
mov
jmp
and
setns
dec
movb
dec
jle
ds
fsubrs
jge
push
jmp
cmc
mov
pop
es
rorb
jl
jmp
push
jecxz
popa
mov
scas
sub
sub
mov
pop
jnp
imul
xchg
lret
std
stos
adc
mov
sub
mov
ss
and
pop
xor
aam
and
in
pop
aas
into
pop
mov
sahf
jne
adc
sub
pusha
stc
out
xor
ja
cmp
adc
pop
scas
sub
jle
pushf
lea
and
push
adc
and
sbb
hlt
popf
hlt
xchg
sbb
cmp
xchg
sub
jbe
jb
pop
repnz
pop
fs
pop
xchg
lcall
out
cmp
mov
sub
into
pushf
xor
dec
dec
pop
cwtl
cmp
sbb
and
pop
cmp
in
mov
orb
rorl
rcll
add
arpl
loope
lcall
and
sbb
rol
movsl
pop
enter
rcr
mov
ds
ficompl
ja
aaa
mov
inc
cmp
cmpsb
fs
loope
bound
leave
adc
dec
dec
les
imul
fnstcw
push
ret
shrl
repnz
jne
mov
dec
push
or
inc
jo
xchg
aad
sub
scas
xchg
scas
sar
xor
pop
sbb
jbe
cli
jae
test
js
add
popa
repnz
test
rclb
pop
adc
inc
ljmp
mov
jmp
aad
push
cs
or
cmpsb
and
cwtl
test
xor
xchg
aam
in
cld
jnp
fnstenv
sbb
xchg
test
push
loope
js
mov
mov
mov
mov
cmp
inc
pop
loope
in
pop
call
scas
adc
lea
adc
inc
pusha
ret
push
inc
push
scas
mov
lods
mov
jl
mov
mov
cmp
iret
popa
sbb
lods
jne
sbb
stos
mov
insl
adc
add
add
pop
jae
xchg
mov
push
fldenv
roll
imul
std
mov
adc
inc
pop
dec
sahf
ja
dec
mov
pop
and
sti
ja
outsb
dec
fildl
imul
pop
dec
inc
lret
sbb
insl
outsb
xchg
adc
pop
mov
xchg
pop
mov
shrl
hlt
cld
mov
mov
dec
cwtl
les
sub
adc
push
push
adc
mov
stos
test
imul
jge
fs
push
and
jbe
test
cmp
dec
sbb
xchg
shl
rcl
or
and
inc
mov
inc
cmp
movl
pop
leave
test
push
pop
adc
fsts
jp
xchg
lods
cld
rcr
repnz
fildl
sub
cmp
and
push
push
cmpsl
rcrb
inc
aad
mov
cmp
sub
insl
int
or
and
jle
fcoms
or
clc
pop
jmp
pop
and
cmp
jecxz
sbb
cmpsl
in
sti
mov
xor
in
jmp
add
push
adc
aam
imul
jo
cld
lcall
mov
outsl
push
out
mov
jnp
jns
and
xchg
stos
out
dec
mov
in
insb
sbb
or
lods
and
dec
mov
in
and
insb
or
stos
and
pushl
or
into
rcrb
adc
xchg
out
adcl
cmp
repnz
dec
sub
jp
ret
and
pop
test
sti
pushf
adc
pop
sbb
sub
sti
dec
pop
lock
jg
sbb
data16
jae
jle
mov
lret
out
aas
push
mov
stos
inc
sub
das
js
pusha
mov
cli
ja
fldcw
sarb
mov
andl
add
pop
fistpll
outsl
daa
mov
dec
out
fstl
xor
dec
ds
je
inc
cli
rcrb
int
sub
lea
out
jmp
adc
mov
mov
and
cmp
jbe
dec
bound
sub
shlb
stos
call
dec
fistpl
push
mov
aad
inc
shrb
loope,pt
dec
dec
jmp
out
add
jg
mov
outsl
push
jb
aaa
inc
mov
jmp
lahf
addb
sbb
mov
mov
mov
loope
icebp
fnstenv
ljmp
sub
sahf
and
movsb
cmp
ja
mov
ret
push
mov
sub
and
push
insb
subb
sbb
fidivl
fdivl
aad
loopne
add
fsts
call
cld
notb
pushf
sub
fildll
ret
dec
xor
cld
sbbl
lods
adc
xchg
jno
lods
dec
or
push
fldenv
push
in
imul
cmpl
and
shll
xor
scas
adc
pop
jns
sti
inc
cmc
add
ljmp
xor
mov
inc
loope
adc
call
fs
mov
test
inc
or
push
sbb
xor
fcompl
test
push
testb
xlat
jne
nop
lds
xorl
int3
lahf
jae
inc
shl
mov
imul
test
leave
popf
popa
insb
adc
mov
xchg
sub
add
inc
push
test
imul
or
add
xor
xor
lret
xchg
xor
cmp
stc
inc
pushf
and
xchg
push
xlat
leave
rorl
pusha
lcall
inc
scas
push
cmp
int
inc
jns
dec
fdivrs
jno
push
dec
xor
xlat
mov
add
divl
loop
movsb
inc
leave
lea
cmp
pop
ret
dec
jecxz
sub
mov
sbb
adc
mov
shlb
mov
cmc
sub
out
cmp
dec
aad
call
inc
shr
jns
hlt
mov
out
scas
mov
push
xor
decl
aad
pop
or
adc
loop
jbe
cld
popf
call
stos
inc
in
dec
into
enter
addb
fdivs
outsb
scas
inc
pop
mov
rcrl
mov
out
inc
ss
and
xchg
fwait
push
ljmp
and
or
in
xor
mov
push
aad
shrl
inc
jb
aaa
and
xchg
out
and
adcl
cmp
xor
xchg
jmp
sbb
mov
insb
cld
dec
and
movsb
lock
in
or
stos
mov
ljmp
mov
push
ljmp
sub
push
scas
mov
and
lock
add
xchg
adc
xor
cmp
push
subb
pop
lcall
mov
stc
nop
test
in
nop
pop
cmc
add
rclb
jp
fisttpl
inc
fiaddl
xor
xchg
rolb
sbbl
jnp
inc
sub
rcrb
shrl
push
out
inc
sub
mov
lea
add
inc
inc
sbb
mov
popa
cmp
mov
pop
es
shrl
mov
push
dec
mov
gs
push
out
movsb
rorl
lea
ds
add
fisubs
fildl
sbb
mov
mov
mov
add
pushf
repz
or
sbb
pop
stc
add
lods
loop
mov
mov
leave
int
and
adc
out
fsts
out
scas
inc
adc
cmc
push
cld
pop
insb
ret
rcrl
cmp
pop
imul
or
fs
xchg
dec
call
sahf
pop
pop
xchg
sbb
lret
xlat
sub
pop
add
cmpsb
mov
arpl
lret
adc
or
jno
dec
dec
addr16
dec
xchg
xorl
mov
dec
dec
jl
mov
test
xchg
mov
enter
int3
ret
stos
mov
out
cmp
stos
bound
pop
mov
xor
push
outsb
inc
insl
mov
push
loop
dec
stc
dec
orl
repz
add
div
jmp
cli
adc
add
fidivrl
jne
xchg
call
sub
jns
inc
in
sbb
sahf
rolb
adc
push
sub
fsts
pop
xorb
out
mov
fbstp
mov
repnz
mov
mov
imul
out
mov
mov
add
pusha
testl
repnz
loope
adc
xor
daa
or
mov
xchg
movsb
lahf
out
pop
int3
movl
call
imul
jge
negl
lahf
jno
ja
cmc
fs
testl
xchg
lock
inc
push
outsb
xchg
lahf
mov
push
ss
cmp
pusha
loop
add
xchg
ret
jns
jb
ss
les
lcall
jne
pop
mov
add
mov
int3
xchg
mov
mov
lds
cmp
jb
dec
out
test
ret
inc
inc
sti
mov
bound
mov
push
sub
ret
jge
out
pop
and
je
addr16
pusha
jns
pop
push
mov
mov
cmp
push
mov
or
outsb
lods
cmp
pop
mov
fwait
out
and
out
fcoml
dec
add
cmp
jbe
mov
pop
xor
ret
arpl
jae
dec
enter
mov
jb
jg
testb
je
mov
pop
pusha
xchg
out
ds
and
loopne
push
xor
and
xor
pop
cmp
push
mov
test
loopne
imul
and
dec
jmp
push
dec
mov
cmpsb
and
insb
sub
hlt
mov
das
push
pusha
push
in
das
jnp
push
pop
push
cltd
inc
xchg
dec
cmp
mov
jp
aam
data16
jo
mov
mov
fsubrp
shll
popf
stos
dec
shrb
filds
xor
mov
pop
mov
clc
test
leave
std
mov
in
rcl
xchg
dec
and
push
aas
in
or
aaa
mov
jb
lea
xor
arpl
imul
jns
xchg
fwait
add
or
sbb
mov
arpl
pop
mov
mov
push
das
mov
or
scas
adc
fs
lock
shl
jle
ss
pop
pop
mov
in
data16
nop
push
repnz
andl
and
fildl
inc
xchg
push
popf
mov
add
sbb
test
mov
mov
dec
dec
loop
jecxz
arpl
popl
fmuls
repz
subb
jp
dec
sbb
or
push
out
sbb
jne
imul
in
mov
push
jbe
pop
stos
xchg
aaa
xchg
je
and
adc
loop,pn
pushf
cwtl
mov
cmp
adcl
mov
enter
aam
or
or
inc
sub
cli
lods
sbb
push
or
xlat
out
adcl
jnp
sbb
std
iret
data16
mov
push
mov
frstor
mov
int
sbb
dec
push
xchg
adc
xor
aas
pop
imul
sub
ljmp
push
ja
outsb
jmp
idivl
mov
add
fwait
inc
pop
pop
xor
repz
addl
sahf
cmc
mov
mov
jecxz
lock
leave
dec
repnz
ret
out
adc
jl
jno
rcll
pop
mov
inc
cmp
mov
bound
ja
mov
xchg
xor
ja
clc
gs
iret
hlt
fadds
pop
and
or
lcall
pop
cmp
and
out
repnz
decl
mov
push
daa
les
dec
and
fldpi
popa
std
lret
or
addr16
fstpl
in
mov
clc
imul
xchg
inc
aaa
or
and
clc
test
cmp
cs
dec
lea
xor
jge
xchg
ds
mov
xchg
sbb
inc
aam
push
imul
mov
push
adc
push
cmp
lret
push
insl
lods
jmp
xor
std
test
pop
xchg
je
cmp
insb
aaa
cmp
jmp
lods
loope
pop
or
insl
jge
inc
mov
add
enter
int
xchg
push
lods
mov
stos
ljmp
pop
popa
jl
xchg
scas
call
repnz
lret
das
mov
and
jle
fs
cmp
or
push
out
xchg
jbe
sub
pop
int3
jae
adc
scas
or
push
ss
fnstsw
ja
cmp
out
dec
popa
std
jo
inc
push
adc
xrelease
test
nop
add
jecxz
xor
xor
push
pop
leave
pusha
xchg
jbe
scas
repnz
loop
cs
pusha
inc
xchg
jnp
add
push
pushf
fistpl
bound
nop
cmp
in
mov
stc
push
xchg
mov
cmp
orl
imul
mov
test
and
mov
clc
mov
mov
out
daa
cli
mov
rcll
scas
gs
fdivrl
lcall
mov
mov
outsb
mov
xchg
out
in
popa
rcl
mov
and
mov
adc
mov
adc
mov
lret
inc
outsb
jl
mov
sbb
dec
in
pop
imul
hlt
mov
mov
testl
test
push
or
adc
xor
pop
stos
xor
cmp
push
xor
iret
daa
inc
scas
daa
adc
cmpsl
xor
dec
push
or
xor
and
and
or
sub
loop
ljmp
mov
pop
ror
fldt
daa
xchg
or
jns
and
negb
lds
lds
fcoms
fwait
loop
cvtps2pi
aas
jle
xor
pusha
push
popf
jne
inc
out
push
fwait
push
test
testb
repnz
and
dec
push
addr16
sub
push
cwtl
ficompl
ds
bound
idivb
dec
out
rcrl
out
jno
scas
iret
xchg
jne
lock
jo
jecxz
std
dec
add
mov
jae
or
and
popf
sarb
outsl
adc
jmp
ljmp
popa
xor
mov
pop
inc
pop
push
xchg
in
pusha
sbb
mov
scas
stos
ds
fneni(8087
stos
push
test
cmp
iret
jecxz
inc
fpatan
stc
push
lds
test
aad
adc
scas
das
push
push
test
xor
ljmp
push
loopne
shl
adc
inc
fdivp
pop
gs
xlat
mov
fmull
mov
in
test
lret
mov
cmc
cmp
jg
in
test
xchg
lods
adc
out
inc
std
and
xchg
and
adc
push
xor
ja
stos
loopne
jo
sbb
jnp
fisttpl
xor
mov
mov
pop
cwtl
in
add
and
test
data16
jbe
cwtl
mov
cmpsb
mov
dec
fidivs
mov
dec
and
scas
mov
add
mov
adc
ret
mov
jne
hlt
aam
sub
test
dec
cltd
test
aaa
test
cmp
and
jge
adc
mov
sub
cmpsb
xor
pop
mov
dec
mov
mov
push
adc
adc
int
movsl
mov
shr
repnz
stc
inc
mov
cmpsb
lret
sub
imul
xor
fldcw
jnp
dec
jns
movsl
ds
sbb
lea
push
add
inc
out
insb
je
lea
and
insl
clc
lds
jp
leave
ss
iret
push
mov
jno
push
mov
lret
mov
jmp
out
pop
xchg
jecxz
sbb
push
rcll
shlb
in
fsubrs
xchg
mov
lret
dec
or
jns
popf
xor
mov
cmpsl
imul
or
mov
cmp
cmp
xchg
arpl
pop
xchg
mov
sub
jmp
lea
jg
sbb
shlb
pop
xor
xchg
jno
leave
out
out
fimuls
dec
notb
in
add
aam
les
jno
in
cmp
setbe
cmp
imul
push
mov
and
and
mov
shlb
lahf
scas
push
mov
jmp
in
mov
sbbl
sub
pop
rcrb
add
cs
mov
pushl
out
adc
lock
test
cld
fsubrl
aam
lea
in
jns
shll
aam
xchg
push
push
mov
cld
xchg
lret
rcrb
adc
test
cmp
pop
out
mov
lods
adcb
add
add
fbstp
push
pop
fwait
xor
into
mov
inc
inc
push
cli
xchg
pop
data16
cmpsb
aaa
pop
push
mov
mov
adc
and
aaa
fistpll
mov
adc
inc
insl
and
fiadds
std
mov
fildl
mov
jg
std
sub
test
lret
push
sub
lods
adc
enter
notl
adc
int
and
pop
sub
pusha
aaa
roll
in
fs
xchg
add
jo
inc
data16
in
cmp
add
pop
mov
mov
xchg
out
xchg
and
inc
cmpl
dec
fisttpl
loop
outsl
aam
ficomps
fs
movsb
aad
rclb
mov
mov
test
sub
fcomi
adc
xchg
mov
in
push
daa
xor
inc
xchg
xor
mov
fs
into
mov
mov
or
pop
xchg
in
outsb
mov
fsubs
pop
jae
push
sti
testb
dec
test
xlat
hlt
inc
fs
jp
and
iret
cs
push
push
dec
test
lret
jo
mov
pop
lock
aam
insl
xchg
mov
or
ret
inc
mov
lret
sub
sar
adc
pop
adc
je
stos
movsl
out
add
test
out
cld
mov
ds
dec
movsb
enter
insl
fdivs
scas
dec
mov
add
mov
inc
jmp
lods
sahf
sbbl
push
jne
push
repnz
popa
or
lods
adc
or
mov
repz
sbb
mov
enter
loopne
mov
movsl
orb
inc
jl
jge
lods
sub
xor
cmp
jns
or
mov
or
cld
rcll
xor
icebp
cmpl
mov
mov
or
xor
hlt
jle
cmp
mov
mov
cld
shlb
in
and
jg
rclb
push
jmp
jmp
push
test
inc
and
push
sti
xchg
mov
cld
out
xlat
sbb
or
cmpsl
jp
popa
pop
hlt
xchg
sub
xor
mov
sahf
insb
add
ja
jns
sbb
test
sahf
stos
int
stc
aas
or
bound
push
in
sub
jbe
sbb
cmp
mov
pop
mov
xchg
aad
sbbb
push
mov
daa
jecxz
push
pop
lds
jmp
jp
xchg
sub
xchg
outsb
mov
pusha
test
dec
mov
lahf
push
add
push
adc
rclb
call
adc
aas
push
or
cltd
sbb
mov
pushf
cmpsb
mov
movsb
cmp
xchg
xchg
pop
mov
popa
jmp
push
jo
mov
test
and
popa
push
and
loope
mov
fsts
or
int
dec
incl
or
in
inc
sbb
pop
inc
stos
mov
lret
jb
daa
add
sbbb
lods
cld
pop
xor
push
xchg
daa
cmp
stos
mov
sub
sbb
xchg
mov
jmp
or
push
cltd
inc
jnp
iret
mov
call
inc
test
sbb
mov
stos
jno
add
enter
and
out
imul
xchg
aaa
sbb
push
jnp
inc
leave
cmp
fmul
jecxz
jo
enter
in
jecxz
inc
incb
ds
push
pop
pop
bound
xchg
das
into
and
cmp
pushf
stos
aaa
or
pop
cmpsb
mov
jl
add
std
jl
cwtl
mov
pop
je
cltd
inc
sti
cmp
xchg
stos
inc
adc
call
mov
std
nop
mov
mov
lahf
inc
xor
fldl2t
leave
rcl
push
inc
scas
out
mov
clc
xchg
outsb
sbb
aaa
mov
cmc
aaa
pop
dec
mov
stos
xor
fmull
call
shlb
addr16
add
or
push
lods
aam
and
movsl
iret
data16
mov
test
and
nop
cmc
dec
ret
sbb
test
sub
repz
insb
jno
adc
inc
in
lods
lock
out
notb
add
add
mov
fistps
push
push
dec
pop
jns
pop
fdivrp
pop
iret
jbe
or
add
into
cld
jae
xor
xchg
dec
mov
mov
sub
or
or
xor
mov
jp
pop
stos
pop
scas
in
jge
jnp
mov
cld
or
fbld
fs
fwait
ss
jmp
repnz
and
ds
push
fdiv
rcrb
push
lock
cmp
push
movsl
outsb
sub
subb
cmp
popa
out
jle
cwtl
cmp
and
loopne
adc
mov
test
incb
add
jmp
lret
out
jo
sub
mov
notl
into
lcall
mov
mov
daa
xchg
xchg
sbb
sbb
adcl
es
sub
fwait
lea
or
popa
out
xor
fdivrl
sbb
push
mov
loope
push
in
jb
test
dec
xchg
dec
nop
leave
pop
fimuls
test
popl
mov
aam
cmc
test
pusha
cmp
cmp
jg
testb
imulb
lods
push
outsl
mov
lret
bound
bound
push
jb
fwait
mov
xchg
arpl
out
sbb
pop
int3
out
ss
mov
sbb
sbb
cld
pop
lds
sub
jle
jb
int
ffreep
js
cltd
and
lret
inc
dec
call
ljmp
inc
call
lahf
cld
push
into
adcl
js
ret
call
xchg
add
clc
xchg
and
inc
mov
jne
mov
out
xchg
jge
jecxz
hlt
and
repz
and
out
arpl
inc
mov
pop
adc
mov
jbe
inc
push
xor
adc
cmpsl
mov
jnp
insl
ret
xor
mov
cmp
aas
sub
push
fsubr
add
mov
fcoms
pop
xor
dec
mov
dec
sarb
jbe
imul
fsubp
es
imul
inc
inc
fisttpl
mov
popa
mov
inc
sbb
xchg
enter
je
divl
bound
sahf
push
es
dec
sub
subl
cmp
ljmp
or
flds
and
psubusb
mov
inc
jle
cmp
push
rclb
lock
fsubrp
cmpsb
mov
sub
leave
jne
loop
fcmovbe
pop
xor
lock
add
xlat
into
test
sub
aad
ljmp
push
pushf
iret
jge
pop
mov
sub
outsb
dec
xlat
lahf
sub
dec
pop
rcrb
add
inc
ss
clc
or
sbbb
and
repnz
testb
lcall
andb
xchg
js
out
xchg
mov
les
adc
jl
sub
push
cmc
stos
rorl
sub
and
lcall
in
adc
repnz
xlat
test
test
sub
daa
mov
enter
mov
dec
in
lock
xor
dec
xchg
icebp
mov
fistpll
out
lods
and
sbbl
cmp
dec
dec
pusha
imul
pop
aaa
inc
sub
push
xor
cli
fs
outsl
daa
ficoml
pop
dec
mov
and
scas
test
in
les
or
cmp
mov
push
imul
lods
add
dec
sbb
dec
dec
push
mov
and
inc
push
cmp
xor
cli
nop
das
into
loope
nop
jmp
mov
int3
in
rcr
mov
repz
lods
pop
fisubrs
mov
adc
sub
movsb
stos
jmp
stos
dec
repnz
jns
stos
cmp
popa
lahf
inc
push
xor
lock
mov
jo
xlat
outsb
clc
mov
or
mov
cmpsb
or
ljmp
loope
out
mov
ja
inc
test
pop
xor
add
push
pop
sbb
rcrb
in
add
fbstp
mov
outsb
adc
xchg
sub
xchg
dec
jecxz
sbb
inc
sahf
jmp
mov
jne
in
arpl
lea
xchg
cs
sbb
sti
push
bound
adc
je
cmc
cmc
and
sub
push
jns
push
repz
inc
fcmovb
cmp
sub
adc
stos
sbb
lea
cmp
cli
shll
cmpsl
call
sbb
je
ret
repnz
ds
dec
in
pushf
xor
sub
mov
push
adc
pop
aaa
inc
stos
test
ret
mov
daa
mov
add
outsl
enter
stc
xchg
lahf
xchg
sub
mov
lret
mov
ds
pop
and
push
inc
push
mov
popa
mov
add
inc
push
mov
xor
xchg
negl
and
fidivs
popa
fsubl
sarb
mov
out
mov
push
je
scas
outsl
sub
inc
test
mov
sbb
mov
adc
out
pop
mov
push
in
jbe
aam
repnz
and
loop
adcb
fisubs
sahf
clc
xlat
and
push
ficoms
das
scas
xchg
or
icebp
das
inc
and
mov
shl
xor
mov
pop
sti
fwait
ret
xchg
stc
mov
jne
and
xchg
cmpsl
dec
sub
add
lcall
dec
cmp
clc
push
mov
mov
lds
ja
stos
lret
cld
or
in
test
push
out
xchg
xor
cs
dec
pusha
call
test
or
lahf
cmp
daa
addr16
push
insl
jnp
gs
cmp
sbb
push
mov
xchg
xor
lret
inc
dec
repz
ljmp
cmpl
pushf
ss
jb
inc
sub
push
sub
divl
dec
dec
xchg
loope
xchg
daa
aad
push
add
mov
outsl
and
mov
fwait
cmpsl
sbb
pop
bswap
push
add
mov
sbb
pop
bnd
dec
clc
popa
cmpl
imul
icebp
imul
xchg
mov
dec
outsl
icebp
popf
stc
push
insl
ret
push
adc
sbb
mov
rcll
or
hlt
cmp
pop
fwait
int3
cmpb
sti
lods
push
or
jg
aas
push
mov
ret
ror
jl
adc
aaa
out
ds
popa
mov
pop
sbb
sub
ret
jg
xchg
insl
sbb
orl
mov
adc
ja
repz
setle
push
bound
loopne
call
xor
nop
inc
pop
lcall
cmc
cld
out
fcoml
stos
pop
mov
jbe
jae
fbstp
or
dec
loopne
cmp
div
inc
ljmp
fs
fstl
xor
push
pop
pop
mov
mov
leave
push
jo
mov
jo
xor
testl
ud2
icebp
popl
lods
inc
mov
jl
xor
pop
adc
cmp
cltd
push
and
pop
push
or
sub
ss
ret
dec
pop
outsl
mov
repnz
push
or
or
das
or
shlb
ljmp
and
add
and
test
or
cs
out
xor
stos
pop
test
test
sbb
push
add
sbb
pop
loop
movsb
adc
jns
jmp
jno
add
fsubrs
mov
mov
ja
mov
ret
and
push
xchg
sbb
leave
pop
out
sub
fcmovbe
adc
xlat
sbb
lcall
daa
cld
scas
sbb
inc
shlb
repz
sub
xor
test
mov
lds
fnsave
lods
sbb
mov
cli
leave
sbb
jle
mov
push
inc
fs
rcrb
push
add
in
sbb
cmp
addr16
lea
imul
cltd
sbb
mov
push
jae
sub
push
shrl
sbb
dec
mov
loope
fidivrl
dec
push
test
aas
loop
mov
imul
and
jecxz
insb
vpunpcklqdq
adc
mov
xor
mov
sub
xchg
jbe
cltd
lcall
inc
ljmp
in
mov
mov
inc
mov
in
scas
lods
ljmp
es
cmp
jp
and
mov
lock
cmp
lahf
cmpsb
mov
cmp
mov
add
bnd
lret
lds
loopne
das
andb
jl
addl
mov
inc
shl
sub
inc
push
fldl
and
fmul
push
ret
insl
fcmovne
mov
add
cmpsl
loop
adcl
imul
or
mov
sbb
sub
sub
int3
inc
inc
inc
loope
mov
mov
push
cmpsb
into
shlb
xchg
cmovge
add
sub
mov
xor
sbb
aaa
xor
inc
or
push
insl
dec
add
or
ret
cld
push
or
fisubrl
dec
cmpsb
dec
mov
andb
push
add
ret
ja
cmc
mov
sahf
std
and
sbb
mov
leave
xor
ds
fildl
push
sub
inc
rcr
movsl
pop
xor
subl
mov
sbb
jbe
add
sti
subl
dec
daa
lods
and
fcoml
xchg
xor
loopne
fists
and
push
dec
xor
mov
jle
lcall
xchg
enter
lahf
cmpsb
cltd
mov
jmp
or
popa
aas
out
test
shlb
inc
inc
mov
in
jmp
inc
inc
xor
out
std
dec
gs
inc
push
cmc
mov
and
xor
in
lods
push
xchg
ss
jle
mov
enter
rcrb
dec
jo
adc
ret
sbb
jl
jmp
sbbb
cs
div
mov
xchg
js
sub
xchg
shrl
pop
jno
jmp
mov
push
add
jbe
jae
rcl
loope
test
sbb
push
push
fsts
cmp
or
scas
xchg
test
pop
sbb
pop
dec
clc
nop
divb
mov
add
cli
mov
in
or
mov
cmp
dec
cwtl
test
dec
pop
xor
sbb
mov
push
roll
cmp
and
sub
dec
je
sbb
cmc
and
mov
repnz
inc
xchg
jle
jns
test
fmuls
jae
arpl
pop
enter
sub
add
or
shlb
popf
cmpsb
pop
push
out
dec
aam
bound
or
cwtl
cli
fs
adc
add
stc
out
imul
das
or
inc
outsb
or
dec
pop
in
adc
inc
nop
fisttps
inc
xlat
push
test
jbe
push
in
das
xchg
les
rcrb
xor
push
stc
dec
lods
mov
ds
dec
sub
subb
add
xorl
pop
loope
mov
stos
sub
enter
mov
les
dec
cmc
mov
adc
inc
das
adc
xlat
mov
or
mov
adc
adc
sub
sub
fidivrl
lahf
dec
arpl
jge
cld
sub
sub
aas
into
jp
ja
dec
dec
xor
sub
fstpt
iret
or
es
and
scas
gs
loopne
and
repnz
lds
dec
iret
jecxz
dec
dec
jecxz
xchg
fsubs
mov
add
icebp
imul
test
jnp
mov
pop
imul
arpl
jl
xor
idivl
inc
lds
or
mov
dec
out
ss
or
cmp
shll
dec
mov
adc
arpl
das
das
sub
cmp
mov
jle
dec
or
addr16
popa
xchg
cld
mov
fxsave
addr16
pusha
lods
sub
mov
inc
test
dec
xlat
lret
xchg
icebp
push
icebp
pop
push
mov
add
aas
data16
mov
mov
lods
data16
aam
xchg
fld
xor
fstps
mov
cmp
jmp
jg
fadds
mov
leave
sbb
imulb
push
push
fbstp
fwait
rorb
push
fcoml
inc
fs
fistpll
iret
bound
adcb
push
imul
lcall
push
fdivrl
push
cmp
xorb
and
cmc
fwait
adcl
stc
inc
xchg
cmc
pop
clc
mov
and
js
jp
or
push
in
mov
rorl
rorl
cltd
outsb
sbb
in
imull
inc
pop
mov
or
mov
push
cmc
in
push
not
mov
push
mov
mov
testb
stc
mov
sub
add
stc
scas
push
jae
cmp
sbb
idivb
mov
int3
dec
or
ja
orb
imul
dec
loope
dec
roll
ljmp
je
xor
lret
mov
out
cmpsl
dec
pop
cmp
push
and
ficoml
inc
stos
fidivl
push
inc
add
push
jb
pushf
nop
push
mov
mov
jle
lret
outsb
adc
repz
mov
xor
pop
sahf
mov
mov
mov
jne
scas
lea
out
cmp
cmp
push
jmp
mov
clc
xchg
cli
fucomip
mov
fdivl
dec
scas
inc
cmp
adc
adc
mov
inc
jns
jns
adc
ret
or
pop
push
loope
push
cltd
or
iret
pop
mov
push
outsb
sar
and
aad
mov
push
or
and
pop
imul
call
imul
push
scas
fimull
loop
inc
ja
dec
test
imul
out
cli
jecxz
sbb
mov
lods
rcll
mov
insl
jno
movsbl
mov
pop
test
pop
mov
push
stc
jg
jp
sub
aad
inc
fs
movsb
mov
cmp
test
push
push
aad
mov
jmp
add
jmp
popf
and
or
stos
cmp
jecxz
adc
out
imul
push
cmc
int3
sti
repz
fsubrs
scas
nop
stos
stos
das
push
mov
movsl
mov
xchg
and
lds
or
inc
divl
in
test
cmp
inc
push
lds
mov
insb
and
pop
test
push
out
cmc
les
dec
sub
lock
ds
stc
sbb
mov
push
addr16
out
imul
cwtl
repz
mov
or
jl
cmpps
dec
pop
and
or
loope
popa
sub
adc
lea
adc
repz
incb
xor
insl
or
outsl
add
data16
adc
sbb
lahf
inc
cli
hlt
cs
jbe
push
jl
xchg
std
lods
sub
popf
sub
leave
xor
fstpt
ret
outsb
inc
cwtl
jne
and
xchg
enter
repz
lret
and
dec
loope
lahf
push
mov
popf
xor
and
movb
notl
xor
jmp
jmp
or
aad
mov
es
pusha
movsb
testl
das
stc
sbb
inc
xchg
add
shlb
mov
pop
outsl
xor
pop
cmc
sbb
push
jno
sahf
push
adc
jmp
mov
mov
dec
sarl
pop
and
jmp
outsb
mov
push
imul
mov
dec
in
test
aam
jne
pop
jne
push
push
xchg
mov
add
dec
sub
inc
pop
out
ja
loope
adc
lcall
imul
movsl
sahf
in
inc
cmp
mov
add
inc
dec
movsb
mov
push
sbb
jbe
cli
aaa
cs
sub
xchg
sbb
mov
pop
outsl
sarl
mov
xchg
jle
mov
sub
decl
dec
cmp
stos
int3
arpl
pop
test
out
mov
or
mov
jecxz
mov
std
cmp
or
movsb
push
push
pushf
dec
pop
mov
mov
push
jl
bts
jl
aad
shrb
jmp
pop
or
scas
push
adc
xor
loope
cmp
inc
mulb
adc
les
fisubrs
mov
jo
ficompl
in
jg
add
push
nop
mov
mov
and
jae
subl
dec
lods
add
jne
jnp
jge
xor
jg
pop
mov
out
test
scas
arpl
push
in
inc
testl
adc
sbb
adc
cmp
mov
fldt
sbb
inc
jb
movd
sbb
imul
gs
push
mov
scas
arpl
hlt
xor
fimull
pop
testb
aaa
xchg
ss
sbb
rorb
std
in
jmp
lret
sti
aam
xchg
mov
test
sub
mov
insl
xchg
push
and
mov
sahf
and
push
pop
fldenv
inc
stc
push
popa
cmp
pop
push
fstl
xchg
sahf
or
adc
xchg
leave
cltd
orl
push
rcrb
sub
xchg
std
pop
lds
lahf
jge
dec
push
ret
jmp
hlt
cltd
cmp
add
push
cmp
inc
jp
pop
adc
push
dec
pop
mov
mov
mov
jnp
jne
mov
pop
jl
lods
pop
mov
push
mov
out
test
enter
out
add
arpl
lret
out
lea
shrl
enter
ficomps
mov
fs
mov
cltd
or
jae
mov
adc
andb
fdivl
mov
cltd
mov
aaa
or
adc
sbb
cli
rorl
jecxz
cmp
and
stc
mov
jmp
aam
sbb
sub
push
out
dec
sbb
push
lahf
jnp
out
xor
in
or
insl
ja
adc
mov
mov
ds
lret
bound
aad
nop
push
xor
mov
add
sbb
add
pop
xor
sub
sti
stos
dec
jb
insb
add
pop
mov
sbb
and
sbb
sub
outsl
mov
cmp
mov
cmpsb
hlt
test
mov
rclb
test
fstps
mov
xor
xor
mov
xchg
add
aaa
inc
cwtl
pop
dec
pop
xchg
mov
lods
mov
fsubp
dec
popa
sbb
movsl
adc
stc
inc
outsb
loopne
sbb
mov
aaa
mov
test
add
lods
je
outsb
pop
mov
jbe
jp
mov
mov
fsubrl
shrl
call
icebp
xchg
mov
dec
pusha
xchg
outsl
sbb
insl
jo
or
and
es
mov
iret
sub
iret
push
inc
xor
inc
xchg
jmp
jl
sbb
add
xchg
dec
fcmove
inc
andl
das
in
lea
daa
mov
mov
push
sahf
mov
or
lahf
fwait
push
jns
push
jl
lods
push
fidivs
test
test
sbb
insl
or
pop
mov
shll
sbb
rclb
aaa
jecxz
adc
mov
cmp
push
test
sbb
jbe
push
mov
mov
xchg
aam
adc
jecxz
mull
faddl
cltd
ja
mov
dec
inc
in
fcoms
call
fcoml
dec
aas
or
arpl
sub
in
push
movsl
shlb
movsb
loope
push
cmpsl
push
jmp
out
enter
dec
adc
pop
xchg
cmp
imulb
push
mov
xchg
mov
data16
add
pop
shr
pushf
mov
push
aas
cwtl
imul
sub
xor
pop
cli
dec
ja
neg
lods
mov
inc
mov
pop
pop
andb
jns,pn
sub
dec
add
inc
xchg
mov
dec
mov
adc
cmp
es
push
out
mov
lods
mov
pushf
dec
flds
mov
mov
pusha
jo
std
andb
cmp
js
cmp
mov
or
in
jecxz
xchg
push
mov
cmp
in
mov
inc
push
cmp
test
lds
outsl
xorl
out
inc
std
sti
pop
jo
loop
std
adc
ds
mov
push
out
std
leave
movsb
jge
and
popa
xor
sbb
leave
int
add
int
and
xor
std
jge
or
push
lcall
dec
in
lods
inc
pop
gs
and
lret
daa
mov
test
dec
or
mov
sbb
and
scas
or
inc
adc
xchg
stos
cmc
mov
daa
int
add
sub
mov
lahf
xor
into
xor
sti
int
loopne
sbb
nop
dec
out
scas
jno
aad
cmp
fdiv
stc
mov
arpl
mov
mov
pop
movsl
pop
repnz
jle
and
add
out
jp
mov
in
cmp
cmp
lea
mov
xchg
ficompl
rcrb
pop
div
push
mov
mov
adc
ss
stos
lods
out
imul
int
lea
mov
xor
les
push
pop
ret
jge
mov
and
mov
jo
pop
xchg
cmpsl
scas
dec
mov
sub
and
aaa
into
mov
and
xlat
jne
pop
insl
sbbl
ljmp
xchg
jp
ljmp
pop
push
lock
cwtl
mov
adc
jmp
fldln2
test
mov
add
or
in
sbb
jb
xchg
mov
fimull
add
stos
ja
jle
imul
mov
push
add
in
adc
mov
pop
push
andb
addr16
scas
sarb
hlt
add
roll
shll
push
sub
or
or
lret
xchg
sub
js
aad
xchg
lcall
cmpsb
sub
std
jp
das
xorl
jl
cwtl
mov
jmp
pop
jnp
jecxz
or
pop
and
lods
aad
test
dec
or
xor
pop
incb
dec
imull
cmp
mov
shll
sbb
lahf
jge
sub
sti
les
dec
jo
cmp
loop
xor
push
jmp
mov
loopne
lods
adc
xor
mov
fstl
push
adc
inc
aaa
jl
inc
imul
test
xchg
dec
cmpsb
inc
fmulp
mov
mov
jecxz
and
push
stos
fwait
outsb
mov
mov
dec
jge
test
outsl
test
mov
push
cmp
and
mov
mov
jmp
xchg
sbb
mov
test
fwait
mov
iret
or
sub
xor
fildll
xorb
into
and
pushf
mov
dec
mov
in
sub
hlt
and
dec
cmp
xor
hlt
adc
mov
and
jge
push
pop
inc
jne
jbe
in
and
inc
xchg
sub
rorl
cmp
xor
popa
cmp
add
xorb
jb
fstl
daa
mov
cwtl
icebp
sub
adcb
inc
inc
cwtl
out
sahf
and
mov
hlt
jae
mov
or
out
add
sub
hlt
or
loopne
sub
and
mov
sbb
push
sarb
fidivrs
pop
fnstsw
mov
pop
push
stos
faddp
push
daa
es
mov
imull
mov
mov
fnsave
fadd
out
rclb
jecxz
mov
test
lds
gs
std
pushf
cmp
test
aam
add
push
in
or
cmp
cmp
iret
loopne
test
mov
jmp
scas
loop
mov
int
cmp
imulb
cmc
adc
sti
push
in
sub
fwait
jl
pop
and
pop
rorl
arpl
shll
add
mov
push
xchg
mov
push
nop
mov
fildll
lcall
and
icebp
add
in
enter
mov
mov
dec
movsl
cmpsb
fmull
jecxz
lret
or
push
add
test
mov
popf
cli
cmp
mov
ret
lods
push
insl
in
or
les
and
sbb
mov
mov
push
mov
fsub
adc
lret
xor
inc
movsb
inc
push
insb
add
sbb
stos
xor
pop
les
fwait
dec
out
mov
xchg
out
cwtl
dec
xor
mov
daa
out
mov
lea
outsl
inc
daa
cmp
or
adc
ss
add
loopne
and
cmpsb
fimuls
inc
jp
sub
arpl
leave
push
call
pop
aas
repnz
fcomip
mov
in
pop
ret
xor
cmpsb
dec
loop
int
div
pop
out
test
pushf
xchg
into
insl
loop
xchg
push
and
jnp
xchg
bound
fwait
xor
pop
mov
fldz
dec
push
pop
sti
mov
add
enter
sti
jbe
sbb
js
daa
fnstsw
xchg
roll
rclb
jbe
repz
sbb
pop
fistpll
push
aam
inc
dec
dec
data16
outsl
out
pop
pushf
sub
in
inc
test
cwtl
xor
add
jecxz
dec
adc
outsb
aam
stos
arpl
test
jmp
and
jl
jb
mov
cld
xchg
cwtl
jle
xor
push
popf
sbb
cmp
jmp
pop
sbb
cmc
or
adc
mov
lds
test
test
fs
lods
add
sbb
pop
test
mov
std
movsl
push
nop
je
jge
mov
shr
stc
add
jp
sbb
or
cli
add
mov
stos
mov
jo
push
fmull
int
loopne
das
add
movlps
or
je
xor
mov
or
adc
daa
mov
stos
push
iret
xor
push
je
pop
loopne
push
cs
jno
or
dec
push
cmp
cs
fwait
out
xor
mov
sahf
xor
jnp
or
add
mov
xchg
popf
add
mov
scas
pop
mov
pop
sub
push
rorl
sbb
cld
rcl
pop
add
xor
mov
or
mov
loop
sar
jp
andb
repnz
mulb
and
push
add
out
fcoms
cltd
leave
pusha
or
lcall
mov
mov
lds
cmp
xchg
pop
rcl
mov
not
mov
pop
cmc
mov
dec
test
stos
push
repnz
repnz
and
int
das
cmp
mov
push
gs
fdiv
data16
sbb
loopne
or
xor
xchg
mov
sbb
jmp
js
adc
int3
mov
loop
xlat
jnp
jnp
mov
fs
push
mov
dec
pop
sbb
test
fst
das
mov
add
cmc
adc
lcall
dec
loop
dec
and
adc
fs
mov
and
and
int
adc
sbb
jge
sub
test
jno
das
rcrb
arpl
pushf
cmp
lock
dec
xchg
out
ljmp
addr16
add
push
xor
fsub
ljmp
std
aas
xchg
mov
push
xchg
sbb
std
lret
jb
or
xor
mov
je
and
adc
push
fidivl
sub
imul
sbbl
dec
sub
xchg
sbb
pop
in
push
jge
lea
mov
sbb
lock
pushf
hlt
lret
orl
xchg
iret
mov
and
enter
shlb
sbb
fisubs
mov
mov
lret
cltd
cs
inc
in
push
repnz
pop
imul
and
jne
fldl2t
mov
sub
cmp
and
insb
xchg
push
pop
mov
add
push
pop
dec
mov
stos
xchg
negl
hlt
cmp
movsb
mov
bound
push
leave
xor
mov
lahf
shl
aad
fwait
xor
adc
ror
jb
sahf
sub
lds
pop
inc
int3
rcl
dec
pop
xor
call
data16
out
sbb
inc
cmpsl
out
add
pop
jbe
mov
cmp
mov
sahf
dec
loope
lret
pop
insl
and
int
pusha
adc
fcoms
pop
dec
adc
pop
push
loopne
test
cmpsb
daa
cmpsl
jg
notl
jge
mov
stos
sbb
or
movsl
in
or
aad
iret
iret
pushf
test
push
mov
and
dec
aas
inc
cmpsb
and
or
stc
out
jle
inc
jmp
pop
mov
xchg
mov
lds
pop
les
dec
pop
cmp
xchg
pop
jne
dec
aaa
fwait
loop
sbb
jmp
shlb
outsb
or
mov
int
popf
int3
mov
dec
outsl
mov
into
enter
adc
mov
cli
fists
andl
add
mov
mov
fstpt
sbb
push
or
out
cmpsl
out
push
push
repnz
test
jmp
or
fdivl
cmpsl
xchg
and
jp
negb
pop
pop
jmp
push
pop
cltd
fsubp
add
movsb
mov
sub
arpl
xchg
lods
jmp
cwtl
jle
stc
sahf
or
adc
sub
xor
mull
addr16
dec
loope
mov
mov
inc
stos
mov
push
test
adc
imul
jecxz
or
into
enter
xor
push
inc
push
fistps
scas
mov
cmp
push
dec
jo
pop
mov
push
mov
nop
adc
push
nop
movsl
rcl
ret
pop
insl
iret
mov
fs
imul
dec
mov
jecxz
mov
or
inc
jbe
int
mov
sahf
push
add
out
cmpsl
mov
sahf
loop
loope
adc
lcall
mov
lods
jl
mov
xchg
nop
xor
push
inc
enter
and
lock
popf
pushf
jle
mov
or
bound
aad
movsb
push
mov
sarl
push
mov
rcr
fsubrl
mov
or
in
sbb
fnstenv
fists
mov
aad
into
fwait
aad
push
push
sub
and
dec
or
push
push
lret
cld
sub
or
push
aas
mov
ret
push
inc
inc
iret
cmp
mov
adc
pop
mov
push
mov
pop
icebp
in
jle
push
sub
xor
shll
mov
mov
sbbb
sub
sbb
push
fcoms
pop
fldenv
jae
mov
adc
jno
mov
inc
mov
out
push
rol
std
daa
fs
fisubs
mov
stos
push
mov
inc
sbb
stos
clc
or
stc
lret
lahf
jbe
inc
pop
in
cmp
sahf
mov
sbbb
cmp
out
pop
divb
lret
shl
push
addr16
cli
adc
call
inc
sbb
push
icebp
push
movsl
loop
cltd
mov
int
aad
add
ficomps
or
or
addr16
mov
in
jo
sbb
mov
cmp
mov
movsl
scas
pop
loop
outsb
add
sbb
divl
rorl
leave
xor
pop
call
dec
cwtl
dec
and
add
nop
xchg
and
scas
dec
add
fidivs
dec
push
dec
add
ret
ret
sbb
pop
addr16
repz
int
jecxz
mov
sbb
mov
test
pop
mov
mov
jp
mov
jge
dec
fdivs
jmp
sub
push
enter
adc
lret
std
lret
mov
fisttps
ss
lcall
xor
jae
mov
mov
inc
push
movsl
jb
cmp
sahf
sub
shr
in
movsb
sub
in
orl
push
xchg
cmp
xchg
cmc
cmp
mov
cmpsl
and
stos
xor
inc
fsubrl
std
push
jns
cwtl
add
out
sub
cs
mov
add
out
jns
sti
xchg
adc
mov
ljmp
push
ret
mov
pop
rolb
mov
cmp
sub
test
aad
insb
das
daa
out
cli
movsl
mov
daa
daa
cwtl
pop
cltd
cmpl
aam
int
pop
js
popf
popa
mov
or
jl
popf
je
adc
aad
xchg
scas
inc
add
jl
pop
loope
add
hlt
lods
subl
jp
pop
les
imul
xor
sub
inc
sub
dec
hlt
jne
jmp
or
xchg
pop
jae
jmp
or
shrb
inc
jbe
or
sub
cmpsl
push
push
insl
add
sub
popf
cmp
push
xchg
out
les
mov
xlat
mov
loopne
and
or
sbb
xchg
fs
mov
add
xchg
leave
popa
sbb
dec
inc
jecxz
jns
out
fmuls
and
jl
sub
or
pusha
dec
popf
lods
dec
push
lcall
dec
mov
push
adc
ss
push
xchg
ja
mov
inc
cmpsb
mov
data16
cmp
adc
add
mov
fildll
jns
push
cs
mov
das
stc
inc
add
sbb
aas
adc
je
call
orl
repz
mov
stc
add
xchg
sub
hlt
sub
dec
dec
mov
mov
xor
and
fldenv
scas
adc
push
test
stos
daa
ljmp
mov
dec
and
enter
inc
dec
icebp
mov
enter
lods
sbb
jae
jg
fbld
jecxz
fucomp
jecxz
data16
mov
ds
loope
dec
or
xchg
or
add
loope
mov
mov
dec
add
hlt
hlt
out
add
sbb
popf
pop
lods
cmp
push
divb
xor
in
enter
out
mov
jg
testb
cmpsl
ljmp
push
dec
push
add
or
andl
mov
pop
add
mov
jp
and
fcoml
adc
sub
gs
push
subl
mov
idiv
jmp
dec
aaa
int
dec
aam
mov
ja
stos
pop
imul
jbe
or
inc
add
sti
sbbl
cmc
pop
or
jne
xor
dec
mov
scas
or
xchg
and
rcl
xchg
inc
cld
pop
jg
cltd
push
jns
inc
push
sub
jecxz
je
jb
dec
cli
inc
cmpsl
cmp
push
inc
jl
sub
scas
sbbb
or
subb
jne
sbbb
mov
sub
push
filds
sarb
inc
enter
cld
xchg
xor
mov
pop
xchg
out
fbstp
or
lcall
sahf
xor
clc
inc
mov
sub
dec
das
cmp
incl
aaa
adc
push
fdivs
inc
push
push
pop
mov
mov
xor
in
lock
push
and
jbe
xchg
mov
call
cmpsb
out
jg
enter
dec
jnp
in
out
cmpb
enter
or
ljmp
mov
jmp
wrmsr
mov
xor
sub
stos
push
mov
adc
push
es
pop
add
shl
pop
es
pop
scas
mov
lods
fcmovnbe
sbb
sbb
scas
dec
xor
aad
ret
mov
jmp
mov
shl
or
mov
xchg
cmpsb
push
out
fistpl
jne
xor
in
test
testb
dec
gs
fistl
sbb
out
clc
ficoms
push
adc
cmp
add
cmpsl
jb
mov
mov
jo
xor
cmpsl
cmp
imul
test
jno
inc
inc
mov
mov
cmp
outsb
insl
out
and
pop
xchg
sub
shll
jle
push
jg
push
adc
inc
enter
loop
mov
gs
mov
pop
mov
push
mov
xor
cs
mov
mov
and
in
cltd
and
cs
arpl
data16
test
scas
in
mov
out
fxtract
pop
jle
mov
movsb
dec
sub
push
adc
cld
cwtl
fidivrl
mov
or
jne
mov
jnp
shlb
lcall
cmpsb
imul
add
pop
or
iret
xchg
cs
sub
push
xchg
dec
stos
xchg
dec
or
rorb
xor
jg
and
dec
adc
pop
mov
xor
xlat
and
sti
lods
mov
loop
push
call
rorb
inc
cmp
pop
js,pn
adc
js
gs
cltd
xor
add
mov
test
and
xchg
jmp
roll
mov
push
or
cwtl
iret
idivb
scas
addr16
ret
hlt
out
sbb
cwtl
inc
aad
dec
icebp
mov
dec
in
lahf
pop
loope
xchg
pushf
xor
xchg
leave
cmp
push
movsl
inc
add
pop
ret
repz
test
lods
push
cmp
push
dec
mov
jmp
cmp
xchg
outsl
mov
loopne
cmp
inc
push
ldmxcsr
mov
in
push
add
cmp
cs
mov
loope
call
mov
or
mov
xchg
outsl
sbb
in
imul
inc
lock
lret
mov
jl
rcl
cmp
add
cmp
mov
scas
pop
cmp
ret
imul
mov
cmp
in
pop
and
pop
sub
add
in
push
jno
in
adc
push
inc
pop
mov
cmpsb
mov
iret
jne
insl
jnp
push
mov
pushf
push
add
push
mov
test
cmpsb
aas
cmpb
add
xor
rcr
cmpb
xchg
or
cmp
sti
in
out
aam
rorl
stos
pop
sub
repnz
das
sub
popa
fsubrl
dec
sbb
push
fs
sahf
adc
arpl
lret
inc
mov
inc
fmull
cwtl
dec
out
shr
test
test
mov
adc
xor
fcmove
sbbl
xchg
mov
fld
incb
aaa
jno
das
or
inc
andl
xchg
xor
fnstcw
jnp
add
pop
push
scas
add
lea
dec
adc
dec
or
xor
cmp
fs
and
mov
rcrl
int
inc
data16
not
xor
bound
ja
adcb
fbstp
sti
sarb
xor
mov
fcompl
in
xchg
or
arpl
into
jmp
cmp
adc
stos
and
mov
stc
push
test
int
daa
jl
or
jge
push
sbb
cltd
lahf
push
mov
mov
mov
and
or
pop
mov
fimuls
mov
in
push
aas
loope
xlat
enter
je
push
scas
adc
mov
in
fwait
flds
sbb
outsl
sbb
js
movsl
in
adc
add
clc
loope
inc
hlt
push
xor
fistpll
js
testb
or
ret
jns
fs
ret
mov
dec
jbe
fwait
xchg
not
xor
sub
add
inc
mov
xor
mov
sahf
clc
push
outsb
repnz
mov
or
fcmovbe
add
xor
sub
push
mov
jle
aad
in
in
push
xor
cmp
pop
push
aam
pop
dec
mov
xor
add
js
pop
and
add
or
push
imul
inc
sti
mov
push
inc
bound
shrb
mov
std
and
fwait
mov
mov
xor
aad
mov
sbb
pushf
lea
jecxz
cmp
in
xchg
cmpsb
adc
xlat
xor
xor
xchg
loopne
jno
out
mov
push
inc
lret
test
loope
and
jl
inc
pop
pop
xchg
add
push
push
inc
and
bound
mov
dec
jecxz
pop
scas
clc
add
sub
ds
cmc
das
shrb
push
mov
cmp
dec
mov
sbb
popf
xchg
bound
push
les
mull
insb
mov
adc
sub
mov
jae
clc
into
push
lcall
cmp
add
mov
inc
addr16
adc
xor
jecxz
daa
pop
fidivs
leave
pop
mov
fs
bswap
into
clc
or
ficoml
mov
dec
fcoml
cmpsl
stos
inc
dec
sbb
push
dec
xorl
sub
shrl
mov
ficoms
mov
add
inc
xor
inc
mov
push
stos
add
mov
push
mov
aam
sbb
cmp
add
add
fadds
popf
inc
cmp
add
push
mov
and
pop
mov
je
out
aas
dec
cmp
adc
sub
test
orb
mov
mov
icebp
sub
xchg
jb
js
outsl
push
xor
insb
push
jno
dec
std
inc
lahf
out
jb
jae
imul
xchg
sti
sbb
add
jnp
adc
cmp
or
in
ret
aaa
stos
mov
mov
outsb
add
fwait
xchg
mov
loop
imul
pop
call
push
popf
dec
pop
addr16
fs
sbbl
aad
xchg
scas
mov
popa
ja
dec
movsb
sti
pop
mov
insb
push
dec
sbb
push
jmp
jbe
jno
mov
js
mov
scas
daa
and
jb
mov
dec
mov
jnp
cld
lcall
push
pusha
mov
arpl
dec
sbbl
or
cmpsb
mov
pop
nop
outsl
popa
inc
push
xchg
sub
jbe
xor
ja
inc
fwait
or
cmp
mov
mov
pop
sahf
out
jecxz
mov
pushf
out
xchg
adc
lea
movsb
sub
movsl
mov
add
push
cmp
ds
addr16
xlat
aad
dec
loop
mov
shll
mov
fnstenv
cltd
xor
xor
push
or
jns
push
leave
jecxz
ret
les
xchg
stos
mov
mov
mov
adc
push
sbb
icebp
insb
insl
mov
lret
fnstsw
dec
rcrl
cmp
test
mov
ret
rep
iret
dec
les
cmpb
inc
jae
lods
pop
clc
sbb
inc
sti
sahf
out
or
add
add
mov
mov
adc
pop
push
inc
into
sbb
or
stos
jnp
ffree
mov
subb
push
fcoms
loope
sbb
adc
rcrl
pop
ret
hlt
xor
movsb
in
in
fstp
sbbl
sub
xor
sub
pop
xor
scas
dec
repz
loope
mov
rcll
lret
in
sbb
int
call
in
push
xchg
out
andl
xchg
adc
testb
mov
mov
js
dec
mov
xchg
push
addb
mov
xchg
bound
cmp
mov
popa
xor
cmpsl
pop
insb
inc
push
sbb
or
cmpsl
movsb
mov
inc
push
dec
mov
bound
movsl
adc
std
jle
std
test
mov
mov
jle
loop
and
push
or
arpl
data16
daa
mov
insl
adc
jl
xchg
in
add
push
mov
pop
and
add
sbb
repnz
stos
clc
cs
das
sub
movsb
lea
fsubrl
into
cmp
outsl
imul
push
adc
mov
gs
push
stos
mov
jecxz
lods
cmp
and
sti
pop
xchg
rcrl
jne
push
insl
or
es
aad
adc
ja
aam
and
push
mov
xor
inc
inc
sbb
iret
lret
jno
out
sub
les
mov
xchg
inc
or
rolb
movsl
mov
adc
push
aaa
jg
lret
xor
mov
int
lret
adc
ljmp
ljmp
add
jl
popf
pop
or
pop
mov
aad
cmpsl
loopne
sbb
mov
push
add
fnstsw
hlt
addr16
fisubrl
into
pop
or
sub
das
push
and
dec
xor
scas
addr16
ds
mov
and
and
mov
push
inc
cwtl
jne
leave
push
in
das
loope
cmp
out
push
pop
or
in
add
fimull
das
jmp
loope
sub
inc
dec
test
cmp
mov
fs
and
pop
lods
and
jbe
testb
mov
or
inc
out
cltd
sbbl
ss
add
push
mov
push
mov
dec
std
push
imul
js
mov
push
mov
push
inc
jl
fwait
xor
lods
leave
or
lods
push
sub
cmp
push
lcall
aaa
mov
int
arpl
sbb
loop
into
enter
inc
fnstcw
mov
mov
and
xchg
dec
push
repnz
mov
movsl
aaa
jmp
sbb
jge
mov
mov
scas
lret
insl
sarb
cld
popa
mov
push
and
imul
out
pusha
add
push
insl
xchg
push
stos
dec
cld
dec
jno
sbb
fwait
arpl
jo
add
jo
dec
stos
inc
cmp
sbb
inc
jg
lahf
mov
ret
jle
and
cmpsb
ljmp
cmpsl
in
jbe
mov
in
pop
dec
pop
imul
ljmp
mov
mov
lods
mov
fidivl
mov
shll
or
jnp
pop
mov
mov
adc
mov
hlt
adc
sahf
push
fwait
ret
mov
shll
mov
imull
pop
shl
cmc
aas
in
test
iret
or
pop
int3
inc
sbb
loopne
or
jecxz
sbb
cwtl
cld
jecxz
in
or
fwait
pop
xchg
cmp
imul
stc
jo
ret
jle
sbb
mov
or
push
push
pusha
gs
push
mov
aaa
pop
rolb
into
xor
mov
dec
repnz
add
sbb
outsb
dec
fsts
sub
cmp
movsl
andb
xlat
mov
mov
xchg
xor
dec
icebp
imul
js
fidivl
push
dec
bswap
das
dec
mov
jg
ss
movsb
mov
push
add
and
and
leave
das
or
frstor
lods
jae
test
push
push
outsl
iret
cmpb
add
fldl
push
push
pop
mov
pop
add
cmc
push
sub
shlb
mov
adc
xor
and
push
pop
mov
movsl
js
pushf
stos
xchg
cld
outsb
jecxz
jo
fisubl
push
xchg
add
outsl
aam
mov
or
popf
andb
cmpsl
fcompl
cmp
test
sub
mov
pop
adc
cmp
jns
in
cmp
push
mov
test
push
jge
inc
cli
pushf
in
pop
and
cmp
dec
loope
sbb
jmp
dec
cli
xchg
mov
loope
icebp
push
push
lret
cmp
cmp
loop
xchg
or
pop
add
movsb
les
xor
pcmpgtd
xchg
subl
cltd
xchg
cmp
and
imul
dec
popf
adc
repnz
movsb
shlb
popa
scas
inc
aas
test
push
mov
out
lcall
sarl
sarl
testb
sub
mov
dec
enter
fistpll
dec
iret
aam
inc
xchg
pop
dec
mov
sarb
or
testl
and
jne
pop
jg
mov
dec
repnz
pushf
xor
push
mov
add
movsb
iret
pusha
cli
scas
inc
test
cltd
xor
leave
int3
mov
pop
mov
ror
cltd
adc
sub
aaa
pop
sub
loopne
cmp
and
cmpsl
ds
into
rcrl
sbb
enter
outsb
in
xchg
stos
stc
xchg
inc
out
xor
in
pop
repz
ljmp
mov
add
jno
pop
mov
xchg
daa
dec
scas
pop
cltd
sub
and
andb
addr16
push
adc
ja
xor
push
pop
add
jg
mov
hlt
mov
pushf
push
out
cli
mov
adc
xchg
pop
cs
pop
clc
bound
xchg
sbb
pop
inc
cs
cmc
out
push
mov
sarl
nop
add
sub
leave
mov
mov
mov
subb
test
mov
fimuls
mov
pop
fdivrl
mov
int
pop
subb
cmp
pop
mov
fdivl
mov
xlat
sbb
in
mov
movl
mov
es
sub
xor
dec
arpl
ret
insb
or
or
pop
cmpsb
mov
push
into
xlat
sub
add
call
lahf
out
orb
pop
pop
and
testb
jne
gs
lret
rcr
inc
pop
movsb
stos
mov
out
xor
in
xor
jb
jg
clc
scas
mov
sbb
mov
fsubs
cmp
pop
clc
fsubrp
cmp
and
pop
fistps
pop
in
xchg
xor
gs
loop
add
xchg
pushf
mov
movsl
lds
or
js
adc
dec
xor
ret
in
nop
lcall
popf
or
jg
inc
mov
adc
xor
xchg
repz
mov
jecxz,pt
loope
push
aas
pop
lods
adc
mov
out
test
cld
repnz
or
addr16
dec
mov
sarb
mov
ret
movsb
icebp
inc
lea
inc
scas
jno
push
or
adc
inc
pop
push
mov
aas
sub
or
sbb
cmp
imul
xchg
dec
sbb
sub
pop
sarb
add
dec
cmp
cmp
jbe
cmp
test
cmp
les
ss
ljmp
out
push
mov
scas
ret
fdivs
push
mov
xlat
lcall
imul
mov
movsb
lea
inc
lret
pop
adc
jle
mov
pushf
add
jbe
cmc
push
mov
bound
daa
js
xor
jb
cwtl
xor
dec
icebp
flds
fwait
rcrl
pop
add
jmp
inc
scas
ljmp
insl
mov
cmpsb
adc
and
xchg
push
sub
jnp
cmp
das
bound
out
stc
mov
mov
ficompl
jo
xchg
xchg
lahf
mov
fwait
repnz
cmp
fucomi
adc
inc
mov
or
loop
mov
mov
jmp
pop
and
sub
cmp
and
jge
daa
inc
loope
out
in
xchg
imul
jae
and
loop
cmp
adc
xlat
lcall
stos
sbb
add
stos
push
fistl
push
and
adc
push
xor
arpl
dec
mov
arpl
dec
popa
xor
bound
adc
or
cmp
daa
adc
leave
push
xchg
dec
add
mov
std
mov
xor
das
outsl
xchg
test
xchg
push
imul
mov
mov
aaa
stos
push
cltd
sub
mov
jns,pt
mov
sbb
jbe
mov
icebp
sbb
xchg
adc
scas
movsl
xlat
lods
mov
pusha
shrb
pop
insb
sub
js
lahf
xchg
push
out
jl
add
xchg
je
lds
pushf
shrl
popa
lods
imul
dec
pushf
cmpps
mov
test
sbb
scas
insb
adc
and
hlt
lds
imul
bound
ja
test
stc
dec
inc
jl
and
les
sub
aam
xchg
add
scas
scas
cmpsl
lahf
leave
inc
ficompl
fidivrs
sarb
negb
scas
mov
dec
pusha
push
jno
jmp
xchg
es
aaa
push
push
leave
mov
aam
pop
jb
mov
xchg
in
lea
inc
in
arpl
outsl
daa
xor
and
decl
and
lret
imul
iret
out
xor
mov
int3
inc
sub
mov
mov
ror
adcb
arpl
xorb
xchg
insb
jg
loopne
add
add
loop
xchg
xlat
incb
scas
out
ja
repz
lahf
or
insb
adc
jo
bound
add
clc
or
xchg
mov
imul
pop
mov
arpl
mov
adc
repz
in
stos
out
jmp
scas
mov
sahf
sahf
jg
and
xchg
fstpt
rorb
scas
jecxz
repnz
ret
pop
xor
push
push
mov
out
movsl
jge
insb
and
pop
xchg
pop
rolb
testl
aam
out
outsl
dec
lods
mov
mov
add
jb
fwait
and
hlt
mov
mov
in
sti
or
push
push
inc
addr16
add
mov
dec
aaa
xchg
fdivrp
cmp
jmp
lret
movb
push
adc
enter
xchg
sbb
push
mov
mov
jle
btc
and
sub
cmpl
pushf
dec
pop
pop
test
pop
push
aad
jge
imulb
addr16
loop
push
movsb
jecxz
fsub
mov
pop
outsb
aad
xor
loopne
or
sub
inc
mov
fldt
mov
mov
test
cmp
sub
ret
outsl
arpl
xchg
int
mov
mov
and
dec
xchg
test
jnp
outsb
mov
jmp
mov
psadbw
dec
fmuls
stos
test
pop
imul
rcl
repz
dec
mov
jge
leave
int3
imul
and
iret
clc
mov
dec
push
sub
dec
into
movsb
hlt
scas
adc
test
data16
popa
push
loope
loopne
pop
xchg
out
cmpsb
or
addr16
jno
fmuls
sbb
add
push
inc
and
fisubs
mov
push
jae
lea
push
stc
mov
jne
dec
imul
sub
pusha
ss
in
fsubl
aaa
cmp
sbb
sti
fidivs
or
push
xlat
repz
mov
dec
cmpsb
cmp
es
ret
lcall
cli
or
testl
cmp
ljmp
addr16
pop
pop
jae
movsb
mov
outsb
mov
sbb
dec
in
mov
insl
ljmp
rcl
pop
lea
push
jbe
sti
xor
xchg
push
or
jb
mov
rcrl
out
or
and
inc
push
mov
test
int
lock
out
push
mov
out
les
push
or
jmp
cmp
out
pop
push
push
adc
sub
jle
dec
xchg
nop
lods
mov
push
sbb
repz
fstpt
jb
out
sahf
dec
ret
or
sub
add
jne
jp
xchg
xchg
call
dec
xchg
cmp
sbb
aas
sbb
dec
pusha
pop
cmpsl
push
push
push
pop
out
cmp
ret
jmp
sbb
mov
shrb
fs
in
insb
dec
mov
or
or
push
cmpsb
insl
jmp
and
xor
push
rorb
xor
aad
inc
outsl
sub
ljmp
mov
dec
in
xchg
jne
push
dec
jns
cmp
adc
mov
test
add
test
sub
push
push
jge
pop
and
fsub
mov
daa
cmp
sahf
sbb
into
andb
pop
xor
mov
mov
and
pop
jmp
jb
enter
test
mov
xchg
fucomip
ret
jae
pop
cmp
mov
mov
push
cltd
std
adc
and
sbb
pushf
int3
rclb
clc
push
cwtl
pop
xchg
repz
repz
lea
sbb
jl
subl
cmp
mov
mov
fcmovbe
rcll
stos
cs
hlt
ja
test
aad
ljmp
fldt
leave
fidivl
xlat
imul
imulb
sbb
xor
dec
or
and
push
push
divl
cmp
loopne
pop
pop
push
fcomi
insl
movd
adc
jecxz
push
subl
add
cmp
or
sarl
insl
mov
cmpsl
cmpsl
xor
rclb
mov
sti
fistl
mov
test
or
imul
jge
push
loopne
xor
mov
in
inc
inc
enter
test
push
clc
out
inc
fcmovnbe
xchg
push
xchg
stos
mov
out
ficoml
cwtl
xor
push
lret
in
insl
mov
jns
mov
lods
nop
inc
xor
mov
rdmsr
int
inc
jmp
xlat
icebp
fs
gs
fcoms
xor
pop
ret
int
rcrl
cmp
dec
pop
fcmovnbe
ret
xchg
call
xchg
fnstsw
stc
adc
mov
inc
mov
jb
mov
loopne
inc
xchg
jle
push
mov
or
popa
inc
pop
sub
mov
jmp
les
popa
add
mov
decb
dec
jbe
test
pushf
dec
pushf
xchg
int
jl
lcall
jle
sbb
mov
popf
imul
push
jle
fadd
add
outsl
mov
mov
imul
nop
fwait
jno
movsb
mov
es
mov
xlat
push
out
add
aas
in
dec
imul
sbb
mov
jmp
adc
popa
add
xchg
loop
in
ljmp
aam
iret
lret
iret
ja
sbb
fbstp
cmc
in
xchg
mov
cmp
push
cmp
out
push
push
out
lea
adc
or
aam
dec
push
xchg
mov
mov
sub
inc
and
sub
and
testl
jge
outsb
cwtl
shlb
jns
popa
and
loopne
ret
push
jo
in
shlb
test
push
lock
mov
dec
jecxz
shl
cmpsl
push
sbb
gs
sbb
and
inc
rcrb
fdivrp
xchg
add
mov
cmp
enter
lea
mov
ds
cltd
push
test
shlb
in
jecxz
lds
xchg
sub
dec
pop
lods
outsl
popa
mov
xchg
nop
sbb
imul
dec
mov
rcrb
stos
adc
xchg
int3
xor
std
mov
into
shl
push
clc
imul
mov
sti
mov
dec
mov
inc
pop
jbe
insb
out
rcrb
inc
cld
inc
sbb
mov
add
dec
jp
test
aam
nop
inc
and
clc
call
out
adc
fldenvs
inc
dec
fstpt
mov
mov
cmc
aas
in
shrl
mov
cmpsl
jbe
pop
pop
aaa
pop
imul
inc
pop
xchg
daa
arpl
sub
mov
in
push
or
sahf
out
jns
or
cmp
sahf
dec
dec
mov
call
pop
or
inc
mov
jecxz
popf
jmp
add
sti
insl
xor
cmpl
push
stc
int3
lea
sbb
cmpsl
out
push
xlat
push
test
xchg
ds
imul
scas
inc
xchg
inc
mov
int
xchg
fs
cld
test
cld
outsl
adc
out
push
ljmp
addr16
mov
xor
out
mov
xchg
addl
popa
test
xchg
xchg
addr16
mov
xchg
movsb
call
cmp
jge
cmpsl
add
pop
lahf
sahf
pusha
sti
sub
mov
jle
mov
aad
mov
jnp
clc
adc
jecxz
test
mov
aad
movsb
inc
data16
xchg
mov
imul
jbe
mov
push
jp
movl
icebp
fidivrs
xor
mov
jg
repnz
xor
loopne
imul
or
dec
shl
xor
shrl
pop
mov
shll
mov
or
cwtl
pop
cli
inc
sbb
pop
xchg
sbb
cmc
sbb
inc
imul
ret
fsubrl
mov
lret
push
or
and
dec
sti
out
cmp
pop
aaa
aas
xchg
cmp
jns
mov
lods
aam
sbb
aaa
pop
jae
pop
loop
xchg
enter
and
pop
popf
ja
insl
fstl
sbb
add
shl
pop
pushf
out
xor
adc
push
mov
cltd
sahf
call
dec
sub
jae
mov
sbb
sarl
imul
mov
or
or
insl
ja
sub
int
xor
adc
mov
in
fisubs
jl
mov
add
mov
rol
dec
pop
push
lock
iret
outsl
imulb
in
aam
sbb
mov
scas
inc
mov
xchg
cld
xor
or
cmp
ret
xor
sub
int
xchg
insl
out
popa
xor
pop
test
into
mov
mov
icebp
movsl
dec
cmp
loop
in
add
inc
xlat
add
and
xor
dec
sub
loop
dec
dec
pop
jecxz
stos
test
test
notb
and
pop
add
add
test
jo
daa
or
out
mov
jp
ret
xor
pop
dec
lret
jno
mov
mov
dec
jb
shl
fwait
in
xchg
icebp
enter
xchg
mov
xor
dec
xlat
into
sbb
loopne
in
ret
jb
inc
hlt
rorl
test
jl
roll
push
sub
ja
xor
jge
xor
jno
int3
xchg
sbb
mov
mov
shlb
mov
mov
and
sbb
loope
or
mov
push
mov
mov
inc
mov
mov
xchg
sub
shrl
mov
rorb
or
pop
dec
test
daa
aam
out
jns
sbb
dec
xor
add
imul
fstp
shrl
add
sub
cmpsb
mov
lods
leave
xorl
pop
push
pop
dec
add
std
aaa
test
inc
push
hlt
mov
push
inc
inc
push
inc
push
out
mov
cmpsl
ret
ret
and
bound
lock
je
or
dec
fistl
jbe
jb
push
test
call
sti
sahf
jb
inc
cltd
jae
sbb
sahf
pop
iret
xor
shlb
mov
and
cmc
bound
xlat
cmp
mov
mov
push
jne
pop
push
in
andb
loope
inc
rcrb
mov
cwtl
das
sub
or
cmp
sbbl
jb,pn
hlt
stos
or
and
add
pop
adc
scas
call
pop
sub
popa
lahf
lods
fnstenv
mov
imull
stc
xchg
rolb
fidivrl
push
push
movsb
frstor
ss
and
es
add
rolb
cmp
fwait
mov
movsl
out
cltd
xor
xlat
cmp
roll
dec
jne
cli
jbe
mov
cpuid
push
pop
lods
xchg
mov
outsb
shlb
data16
sbb
mov
cmp
mov
push
jg
and
sbb
pushf
or
xchg
push
popf
xchg
rol
test
mov
mov
adcl
jge
mov
pop
lcall
and
sub
orl
mov
ds
adc
push
mov
lcall
into
jno
fbld
cltd
and
cwtl
cmpsl
aaa
inc
pop
jmp
rcl
mov
lock
push
xor
mov
outsb
mov
push
mov
mov
scas
and
sti
ss
xchg
aad
xor
fnsave
outsl
inc
cmp
mov
adc
int3
and
das
push
lods
inc
pop
test
push
es
aad
lcall
hlt
jg
pop
pop
out
pop
pushf
or
sub
sbb
sti
xchg
stc
jle
loop
sbb
mov
push
int3
sbb
sub
rcr
sbb
or
xorb
mov
mov
mov
pop
ficompl
dec
cmp
pop
rcrl
pop
xchg
cmp
mov
fisubrs
push
jle
test
jno
rcrl
pop
pop
mov
out
jmp
mov
loope
inc
fmul
mov
daa
xor
arpl
pop
andb
stos
push
xchg
sub
sub
hlt
insl
mov
or
add
mov
sbb
jo
xor
pop
sub
lods
inc
incb
clc
sub
fsubr
orb
jp
das
push
fstpl
jo
xchg
sarb
sbb
mov
xchg
sub
aaa
outsb
mov
pusha
inc
xchg
pop
orb
mov
pop
mov
adc
push
cmp
adc
test
push
out
jg
add
arpl
or
test
dec
testb
and
js
pushf
das
enter
xchg
cmpsl
sub
pop
ret
mov
shll
pop
in
fistl
mov
adc
mov
bound
jo
inc
fdivrs
adc
hlt
sbb
push
out
mov
test
xchg
cmpsl
mov
mov
cmp
shlb
pop
xor
ss
jmp
shlb
inc
std
std
test
sti
iret
xchg
or
fsin
push
ret
stos
xor
xor
pop
mov
idivb
push
popf
lods
sub
cld
mov
add
sbb
movsb
les
jbe
push
test
push
push
mov
push
fbstp
ret
mov
push
cmp
ss
pop
imul
sbb
int
dec
mov
ja
lds
rorb
adc
push
pop
pop
xor
jle
mov
nop
dec
mov
xorb
sbb
loopne
nop
push
xchg
push
je
xor
in
ds
inc
lods
mov
cmc
icebp
andb
xchg
push
mov
mov
rol
or
jmp
roll
into
lret
sub
inc
outsb
mov
insb
gs
jo
mov
push
cmpsl
push
push
mov
jns
in
pop
cmpsl
or
lock
push
xor
call
adc
mov
insb
jl
xchg
add
test
inc
mov
sub
lcall
in
push
ds
push
push
push
xchg
data16
jle
dec
lods
mov
loope
sahf
mov
sbb
ret
and
ja
sbb
ds
into
das
jmp
dec
aam
addl
outsl
in
cmp
dec
out
popf
jle
jnp
pop
pmaxub
sub
stos
xorl
jl
mov
sbb
push
loope
and
aad
push
mov
jae
mov
and
orl
fcoms
stos
adc
add
test
push
jle
jecxz
fwait
inc
nop
sub
pop
mov
or
mov
or
adc
insl
ja
stc
or
cltd
hlt
cmp
inc
in
je
aas
add
mov
imul
sbb
pop
sbb
rorb
mov
popa
pushf
je
sbb
pusha
bound
push
into
sub
into
test
push
inc
loop
inc
ret
rcrl
int3
clc
shlb
lea
lods
fimull
push
sub
xor
cmp
sbbb
and
add
push
jbe,pt
mov
incb
pop
loop
mov
mov
jo
add
inc
addr16
push
xchg
sti
xor
mov
pop
cmp
jecxz
fildl
push
adc
dec
leave
lcall
lea
pop
into
jb
call
lods
jmp
outsb
rcrb
insb
hlt
mov
subb
mov
lret
loop
sub
push
cli
mov
leave
test
ljmp
inc
stos
ret
pop
sbb
and
mov
cs
jno
les
adc
mov
stos
cmp
mov
cs
push
cli
inc
out
imul
sti
rcrb
pusha
addb
je
add
cmpsl
xchg
adc
and
out
xor
jmp
mov
push
sbb
adc
movsl
jp
fildll
in
mov
inc
in
push
popf
or
fcomps
xor
pop
xor
mov
sbb
bound
add
add
adc
sub
xchg
mov
iret
leave
outsl
or
push
or
shlb
sbb
addr16
int3
fcomps
test
xchg
xor
jp
jbe
and
inc
push
inc
in
clc
dec
cwtl
fbstp
int3
dec
cmp
rcrl
xchg
js
stc
xchg
add
out
jecxz
inc
das
fsubrl
push
jns
gs
sti
mov
and
call
gs
clc
cmp
sub
cmpsl
scas
mov
enter
jmp
dec
mov
lahf
jns
das
outsb
jns
sbb
cmp
and
mov
mov
or
push
aaa
cwtl
pop
dec
sti
in
mov
insl
push
mov
sub
rcrl
mov
hlt
lahf
int3
cmp
xchg
jg
push
daa
clc
mov
stos
cmp
xchg
enter
adc
dec
mov
ljmp
jbe
scas
mov
enter
shr
or
adc
sarb
sub
mov
sub
jecxz
movsb
hlt
cmpsb
les
inc
mov
pop
imul
mov
xchg
sarl
pop
mov
aaa
jnp
in
xchg
xor
int3
jns
stc
sub
inc
adc
mov
dec
sti
fdiv
add
int3
pop
add
dec
sbb
lods
mov
js
fdivs
sbb
in
lcall
inc
mov
scas
rcrb
xor
cli
dec
fucomi
inc
jmp
mov
mov
jg
mov
xchg
int3
psubusw
in
sbb
sbb
ds
push
cmp
jbe
das
adc
adc
cli
sub
cs
inc
adc
cmp
rcrb
add
ja
adc
mov
mov
cmp
xchg
leave
adc
pop
mov
jae
adc
aam
jp
adc
enter
inc
sub
repz
jp
mov
inc
jp
std
or
shll
jbe
sti
mov
addr16
xor
outsb
jle
cmp
pop
jmp
push
mov
jcxz
repz
adc
into
and
dec
aad
sbb
add
out
test
adc
inc
fcoml
subb
jbe
push
lock
jb
movsl
cmp
jo
sbb
ret
adc
push
sarl
jo
mov
incb
shrb
xchg
mov
push
push
ljmp
adc
in
adc
lcall
fnstenv
mov
lret
adc
cli
sbb
and
sbb
ja
sbb
dec
jbe
test
and
adc
lret
in
inc
pop
mov
cmp
lcall
sti
inc
cmpsb
push
mov
sub
into
mov
paddb
mov
lods
sbb
pop
std
add
fildl
pop
jecxz
inc
cli
out
sub
push
dec
xchg
jns
xchg
popa
cld
fldenv
pop
xchg
ljmp
cltd
std
lds
les
mov
inc
jmp
cs
add
mov
xchg
mov
mov
shrl
notb
lods
or
mov
dec
pop
mov
inc
pop
jge
mov
dec
xor
loop
xchg
popf
push
add
xor
jnp
jnp
and
mov
clc
test
push
pop
jns
push
es
out
stos
inc
aam
imul
js
sub
and
jle
out
xchg
mov
inc
pop
stc
nop
cmp
movsl
popl
sub
sub
sbb
cwtl
bound
dec
mov
sub
pop
mov
xchg
popf
ljmp
insb
shlb
pop
incb
mov
cmc
popf
dec
jne
xor
outsb
jl
nop
push
repnz
or
mov
subb
lock
lods
sbbl
mov
sti
or
and
pop
push
jbe
sbb
ja
xor
stos
fbstp
mov
pop
xor
mov
mov
dec
in
xchg
xor
pop
in
sbb
xchg
push
adc
movswl
add
ret
pop
repz
data16
mov
divl
xor
push
or
lods
push
jne
movsl
mov
mov
call
int
cli
dec
or
mov
inc
sti
dec
popa
daa
push
icebp
mov
mov
call
adc
mov
jge
gs
test
mov
dec
jg
icebp
jge
mov
hlt
or
leave
lods
sub
xor
add
fistpll
in
pop
sbb
bound
xchg
addb
hlt
and
add
xor
adc
cmp
mov
icebp
outsb
mov
mov
pop
sub
lahf
imul
and
cmp
movsb
in
fwait
fwait
xor
add
mov
fadd
jecxz
mov
or
xor
es
pop
jno
outsl
sub
sbb
cmp
cmp
xor
out
in
je
pop
xor
mulb
roll
jnp
out
enter
dec
adc
sub
ja
mov
into
pop
lret
fs
push
push
jnp
mov
lds
inc
addr16
test
lret
cmp
jb
adc
loopne
fstpt
push
test
test
jmp
jns
repz
sbb
push
sahf
jge
xchg
idivb
jnp
adc
lret
jns
jp
sub
ja
and
pop
xchg
cmp
xchg
cmp
pop
push
jnp
sbbb
mulb
gs
push
cmpsl
lock
sbbl
shlb
push
sub
repnz
stos
jge
pop
out
inc
xchg
add
add
adc
xchg
mov
ja
mov
cs
inc
fdivl
cld
movsb
fdivl
aam
pop
add
xlat
stos
jmp
inc
out
mov
mov
cld
push
cmpsb
pop
mov
dec
xor
daa
cmp
data16
out
jno
or
xor
fistpll
dec
leave
pop
mov
push
adc
push
cwtl
jp
mov
mov
sub
loope
xchg
or
shl
xor
sbb
inc
inc
mov
in
fdivl
or
add
lahf
push
xchg
pushf
cld
pop
shrb
arpl
pop
mov
mov
mov
sbb
shrl
mov
pop
cmp
or
nop
insl
repz
jno
mov
stos
in
jl
mov
or
in
aas
cwtl
adc
mov
pop
jl
jg
ret
notl
jecxz
popa
pop
jecxz
inc
or
lret
cs
dec
dec
mov
push
lahf
sbb
xor
adc
inc
ficoms
jmp
dec
xchg
inc
pop
sahf
aad
fimuls
stc
add
adc
shl
xlat
push
sbb
fdivrl
lock
shll
fs
in
les
stc
and
jne
ret
stos
mov
and
popa
movl
ljmp
mov
les
push
movsl
icebp
into
ror
frstor
add
push
negb
push
adc
imul
cli
aaa
mov
roll
mov
stos
dec
and
addr16
stos
pop
xor
mov
xchg
hlt
xor
movsl
mov
fwait
jno
enter
dec
and
sbb
je
movsb
sti
add
xchg
jmp
stos
cltd
jnp
outsl
xor
and
inc
sub
fisttpll
xor
inc
movsb
sti
repnz
adc
adc
mov
mov
mov
hlt
iret
aad
inc
sub
adc
dec
jae
cmp
icebp
sbb
mov
sbb
js
cmpsb
dec
sbb
divl
jle
sbbb
mov
and
mov
xchg
je
or
adc
xor
xor
and
mov
popf
jne
cli
mov
sti
mov
xor
cli
add
inc
cmp
stc
adc
call
pop
jbe
xchg
push
add
pushf
inc
dec
adc
call
cmp
xlat
fs
aad
je
push
dec
std
jae
jbe
mov
lods
cmp
and
jmp
out
mov
push
jae
pop
xor
outsb
test
lret
or
call
rcl
repnz
pop
mov
pop
pop
mov
sbb
add
outsl
bound
sub
fldt
popa
dec
gs
or
add
imul
jmp
cli
xchg
inc
into
lcall
xchg
push
push
ss
lret
sarl
lods
int3
cmp
rorb
jp
inc
repz
mov
dec
jno
aas
pop
scas
xor
pop
lret
or
push
dec
push
mov
xor
bound
ss
jg
cmp
push
loopne
sub
scas
in
sub
mov
sub
popf
scas
cs
push
add
xor
and
dec
ret
inc
fsubl
xor
jecxz
shl
ss
pusha
fs
fsubr
test
daa
sbb
mov
js
mov
xchg
mov
jp
or
arpl
dec
pop
lds
dec
ljmp
lock
add
and
add
xchg
je
add
lcall
int3
adc
mov
mov
push
and
or
dec
movsl
data16
pop
sbb
push
out
add
cmp
lret
mov
push
cmp
insl
cli
je
stos
sub
jns
dec
sub
cmp
adc
or
add
mov
pushf
and
sbb
xor
test
js
pop
and
add
mov
leave
out
test
data16
icebp
pop
mov
ja
xchg
dec
pop
out
cmp
xlat
pop
inc
loopne
or
cmpsb
data16
cs
sub
and
ret
jnp
shl
pop
iret
and
jae
sub
mov
or
inc
add
cmp
leave
xor
mov
inc
les
inc
sti
push
out
sbb
ds
jmp
dec
sbb
push
jno
adc
xor
frstor
xchg
mov
mov
loopne
notl
std
mov
cmp
loope
movsb
push
enter
clc
mov
arpl
jg
jb
jmp
bnd
aas
out
cmpsb
cmp
fistl
fs
jle
out
test
mov
add
mov
hlt
and
and
jo
decl
pop
stc
or
and
mov
adc
es
add
lea
mov
sbb
lea
add
mov
pop
insb
lods
jl
lret
es
mov
pusha
into
ss
ret
bound
pop
mov
lds
adc
out
or
sub
dec
mov
push
push
jbe
loopne
data16
push
jmp
pop
outsl
out
cmp
jb
jle
inc
push
pusha
movsl
jmp
add
mov
ds
pusha
notl
mov
out
xor
lcall
in
jno
dec
loope
loop
repnz
jecxz
jp
mov
jae
bsr
push
adc
mov
mov
nop
daa
rorl
mov
sub
lcall
loopne
mov
push
mov
xchg
int
nop
ret
adc
mov
mov
stos
or
mov
mov
inc
das
stc
or
ljmp
and
pop
xor
scas
xchg
xchg
orl
dec
mov
push
das
sbb
jle,pt
movsb
sub
rcrb
or
or
push
popf
sarl
loope
pop
push
sub
xor
inc
mov
xor
mov
paddw
sbb
andb
push
insl
and
clc
iret
stos
inc
xor
repz
lock
inc
xor
mov
xchg
push
sub
mov
loopne
loop
inc
add
test
jmp
lods
mov
cmpl
lods
out
test
pop
pop
push
pusha
out
imull
pop
xlat
adc
cmp
add
and
and
mov
dec
mov
mov
cmp
mov
cmc
or
inc
ja
std
fs
sbb
jbe
pop
sti
hlt
lret
scas
and
xchg
fmul
inc
or
mov
push
mov
sub
dec
ljmp
xor
fcomps
rcr
lds
testb
outsl
dec
repnz
jge
pop
fwait
jo
fnstsw
mov
push
js
push
ljmp
cs
inc
push
popa
rcrl
xchg
add
cs
test
or
and
xchg
push
in
mov
jnp
mov
xchg
xor
insb
adcl
pusha
cmc
addb
mov
test
mov
dec
repz
and
cmc
int
dec
cmp
dec
push
movsb
pop
and
xor
sti
mov
dec
mov
js
ljmp
test
dec
lock
sahf
int
in
bound
in
ret
jnp
inc
pusha
pop
fwait
nop
mov
lods
stc
jge
jnp
dec
jae
xor
out
imul
dec
cmp
in
fisttps
sub
or
cmp
dec
mov
imul
sti
or
mov
dec
aaa
jmp
cmp
shll
packsswb
loope
xchg
add
dec
pop
aas
sbb
in
cs
sbb
in
repnz
xchg
push
xor
leave
insb
inc
les
std
leave
shl
hlt
loop
jle
das
or
adc
mov
push
repnz
lods
mov
jl
mov
enter
sti
jecxz
mov
cld
jl
jle
fimull
test
mov
lret
pop
stc
roll
outsb
movsl
out
jbe
and
xchg
sub
dec
mov
arpl
inc
cltd
jmp
xor
mov
icebp
cmc
add
outsl
movsb
dec
push
call
pop
xlat
outsl
add
xor
cwtl
mov
into
pop
sbb
sbb
cmp
cmp
push
jbe
dec
ret
lcall
ja
rcrl
xchg
cmpsl
and
sub
jne
xor
scas
outsb
jmp
fnstcw
jge
add
jecxz
insl
add
adc
aaa
in
imul
insb
outsl
cmp
repz
addb
mov
hlt
mov
add
mov
fcmovbe
imul
jns
cmp
lods
dec
fstpl
filds
push
es
and
inc
fs
ljmp
jp
enter
push
outsl
cwtl
das
mov
inc
mov
jne
stos
jmp
fsts
jle
cli
jl
mov
jmp
daa
add
jno
je
or
mov
lahf
pop
outsl
lret
pop
arpl
mov
lcall
push
lock
push
pop
scas
test
push
lods
cltd
push
mov
les
and
sahf
into
outsb
and
jg
lret
out
mov
pop
cmovae
xor
movsl
jl
and
jecxz
push
cmc
sahf
inc
int
outsb
icebp
add
cmp
clc
or
dec
jns
mov
sub
rclb
das
pop
gs
fsubl
mov
sub
xchg
test
dec
mov
test
push
lods
jnp
sub
push
gs
je
out
or
or
ljmp
and
int3
add
scas
outsl
pop
xchg
sub
fldt
xchg
or
or
push
mov
call
xlat
mov
inc
pusha
es
js
pushf
or
or
lret
and
and
push
imulb
shrl
push
jnp
and
add
fisubs
jnp
mov
push
insl
dec
mov
insl
adcb
ret
xor
dec
and
or
dec
ss
aad
or
sub
xchg
into
gs
inc
pop
or
insl
inc
adc
inc
xchg
xor
fisubrl
int
test
ret
fwait
or
jae
jmp
or
and
cmp
jae
enter
sbb
out
pop
jmp
mov
push
lret
and
movsb
sub
lret
mov
fs
lods
xchg
inc
pop
shlb
shll
lahf
cld
adc
and
xor
jns
psllw
push
jmp
push
arpl
sbb
jno
jecxz
data16
testl
dec
dec
jbe
add
add
dec
pop
outsl
daa
and
out
cmp
insl
xchg
into
add
push
xor
sbb
dec
mov
or
cli
cmp
mov
loope
adc
adc
mov
mov
sti
and
frstor
cmp
ljmp
add
mov
pop
cs
pop
jns
inc
pop
insb
jmp
push
sbb
rcl
scas
push
mov
mov
lds
popl
faddl
out
adc
cmp
xchg
loope
out
cmpsl
cmp
xchg
int3
fcmovu
jae
sub
ja
in
mov
mov
cmp
adc
dec
fcmovu
hlt
cmpxchg
push
in
mov
ja
fdivrs
pop
les
imul
or
cwtl
aad
dec
cmpsb
popf
add
mov
cli
pushf
cmpsl
cmpsb
add
and
add
popf
ret
cmp
popl
dec
fisttps
sarl
pop
pushf
sti
cmpsb
inc
hlt
int
cmp
fbstp
sub
aam
daa
xor
push
cwtl
xor
or
inc
cmp
xor
push
mov
sbb
pop
cmp
test
or
pop
aaa
push
or
jp
dec
loope
scas
cmp
nop
cmp
aaa
xlat
dec
popa
jnp
dec
dec
inc
call
sahf
push
jae
lods
rolb
cltd
inc
sub
and
pop
mov
xchg
sbb
hlt
ret
mov
pop
xchg
add
icebp
cmp
jne
mov
and
enter
push
or
imul
and
movsl
dec
push
loop
pusha
aas
adc
cs
out
cli
enter
mov
pop
mov
or
cmpsl
pop
cmp
cld
dec
or
xor
sahf
xchg
nop
mov
sbb
inc
jmp
sbb
jb
dec
mov
cltd
daa
mov
outsl
in
int
lahf
arpl
jmp
mov
sub
pop
outsb
aam
ret
hlt
cmp
enter
mov
int3
js
call
sub
xchg
pop
je
pop
js
or
aaa
xchg
jo
ret
sbb
adc
or
mov
mov
test
insl
stc
and
cmp
arpl
jle
mov
pushl
adc
cld
test
mov
jge
sbb
insl
sbb
cmp
negl
pop
nop
push
push
sti
mov
lods
mov
test
mov
jg
push
push
dec
or
mov
mov
mov
cs
daa
or
mov
jle
divl
xlat
mov
jecxz
jle,pn
add
mov
pop
jl
mov
mov
cltd
cld
dec
xchg
add
and
push
add
push
movsb
push
xor
jmp
and
adc
xchg
in
stos
mov
pop
dec
xor
xchg
aam
pushf
lods
sub
test
sbb
inc
mov
repnz
pop
dec
fstpt
cwtl
leave
lret
lret
mov
sub
cltd
shl
dec
pop
xor
jne
or
cmp
adc
ds
jo
jle
mov
pusha
pop
int
xlat
rolb
call
add
mov
jns
repnz
pop
pop
sub
ret
bound
mov
pop
xchg
xchg
cli
div
xor
es
mov
dec
push
aas
jp
sub
loop
pop
sarb
repnz
imul
mov
stc
movsl
xchg
and
add
clc
push
or
pop
sbb
inc
sbb
call
push
lret
jns
scas
pop
mov
popa
jo
repz
sbb
ret
cmpsb
dec
mulb
or
fldl2t
jb
inc
jae
and
jns
test
push
xlat
xchg
sub
repnz
inc
cld
pop
hlt
and
fisttpll
pop
arpl
roll
outsl
jnp
jnp
fucomi
jo
les
stc
mov
sbb
not
adcb
mov
cmpsl
mov
dec
and
cmp
adc
lahf
pusha
sbb
lret
in
nop
jb
lret
pop
push
imul
icebp
inc
jle
push
and
cs
js
xor
loope
push
sahf
xor
mov
fiaddl
jne
dec
subb
pop
mov
not
mov
xchg
movsb
decl
and
mov
inc
arpl
sar
stc
jp
and
pusha
adc
xchg
mov
in
mov
and
mov
push
call
xor
add
rcrl
mov
jle
mov
test
pop
xchg
sbb
cwtl
adc
push
imul
xchg
cs
mov
test
and
jmp
or
dec
or
pop
stos
sbb
mov
scas
fdivr
subb
lods
fldl
in
jo
fstl
sbb
adc
sbb
push
ror
ftst
dec
fsub
icebp
mov
mov
cltd
subb
out
cwtl
das
fstps
cmp
arpl
mov
and
mov
push
push
add
jl
dec
loopne
adc
aas
push
jnp
stos
in
test
imul
fsts
bound
and
dec
or
data16
adc
test
data16
mov
cmp
ja
xor
loop
push
adc
sub
push
nop
gs
pop
into
push
dec
in
negl
mov
shl
lret
and
incb
int3
arpl
popa
pop
xchg
jns
cli
std
push
out
cs
clc
dec
mov
call
jmp
cmpsl
ds
mov
jl
loop
test
pop
andl
lods
roll
jo
sahf
mov
popf
pusha
pop
imul
cmpsb
in
adc
outsl
push
inc
cmpb
scas
das
adc
pusha
dec
fs
je
leave
movsl
xor
mov
or
aas
jg
cmp
push
arpl
mov
ljmp
ljmp
or
iret
dec
sub
and
sarl
lret
loopne
repnz
push
lods
lret
mov
lock
xor
jg
cmp
lea
mov
je
inc
cmovbe
je
pop
or
mov
mov
test
or
cmp
rol
mov
loope
jmp
ljmp
iret
mov
shlb
dec
not
mov
push
or
adc
jbe
shll
cmp
out
stos
test
ja
cmpsl
in
sti
adc
repnz
add
lea
enter
lods
mov
int3
push
and
push
das
push
sub
adc
sub
scas
dec
sbbb
dec
dec
in
loope
cmp
test
add
xor
bound
jle
cmp
repz
aaa
pop
pushf
xor
mov
pop
adc
adc
outsl
xor
cmp
stos
daa
pop
cmpsb
lock
pop
or
cmpsb
jmp
inc
stos
and
fadd
or
ljmp
shrb
pop
xor
repz
bound
dec
jne
ret
cmpsb
adc
fmuls
repnz
in
cwtl
das
int3
fsubrs
jb
clc
xor
mov
cmp
jno
mov
dec
and
arpl
jge
cmp
pop
mov
mov
into
mov
jge
test
sti
jnp
xlat
adc
add
lods
jmp
xor
shl
mov
imul
push
xor
sub
jae
sbb
cmp
xorl
shrb
insb
lods
xchg
mov
sub
jmp
pop
push
icebp
shl
loopne
movsl
add
sahf
jmp
cwtl
mov
xchg
mov
jge
es
mov
push
xchg
cli
mov
out
mov
ja
xor
fsts
mov
and
out
push
clc
js
inc
sbb
lret
daa
push
pop
cli
int
jl
sbb
and
imul
adc
rcll
xor
aam
ja
outsl
mov
insl
jg
sahf
push
adc
inc
xor
adc
lods
das
sbb
inc
xor
jmp
cmpl
cmp
pop
mov
push
outsb
in
xlat
cmpsb
add
stc
sbbl
mov
push
sub
or
out
les
inc
mov
aas
jb
jg
jae
cmp
adc
ret
pusha
divl
popa
lods
inc
test
iret
and
sub
fstpt
dec
loop
fwait
popa
aas
fisubl
inc
call
outsl
icebp
in
nop
inc
pop
stc
dec
je
adc
arpl
adc
in
jbe
in
fsubl
xlat
adc
lahf
jge
ret
mov
adc
dec
pop
aas
mov
gs
add
fadds
cltd
pop
jae
mov
stos
and
ds
ljmp
pop
xor
loop
xor
fbstp
rcll
arpl
xchg
out
arpl
xor
or
jmp
sti
xchg
fsubrs
mov
mov
jp
cmc
sbb
or
fnstenv
pop
ret
push
ds
andb
sarl
sub
and
cmp
ds
dec
sbb
adc
imul
jb
fs
adc
nop
fldenv
or
xchg
repnz
es
jae
xor
xor
pop
mov
ret
xchg
mov
sbb
out
lret
daa
repnz
push
aad
push
out
jg
jecxz
pop
cmc
stos
lds
cltd
outsb
jo
stos
ljmp
outsl
push
in
fs
mov
ffreep
in
sub
inc
pop
in
push
jnp
mov
inc
adc
inc
pop
shl
data16
jnp
pop
xor
add
push
xchg
shl
maskmovq
negl
sbb
mov
sbb
pop
mov
imul
dec
pop
add
xlat
fucomip
or
shrb
scas
cmp
lds
sti
adc
mov
nop
xor
or
pop
cltd
in
or
push
call
adc
leave
push
pop
mov
xchg
shl
in
int
into
les
sub
xchg
out
pop
ljmp
out
cli
iret
sbb
xor
sub
sub
fdivrp
sub
aaa
scas
jnp
or
and
push
adc
dec
dec
pop
and
in
imul
jno
cltd
xor
scas
inc
in
cmc
mov
mov
in
mov
nop
andb
sub
mov
pop
mov
cmpl
push
push
jb
mov
cld
cld
aam
inc
xchg
adc
loope
subl
jbe
pop
repnz
std
adc
int
scas
mov
mov
mov
sbb
push
sbb
into
add
out
stos
and
cmp
jns
mov
add
ret
divl
add
mov
and
lret
mov
adc
pop
filds
roll
sbb
mull
in
mov
inc
lds
shrl
icebp
push
push
push
mov
mov
pushf
call
test
xchg
or
xchg
addr16
sbb
xor
cmp
xchg
pop
repz
mov
repz
mov
ss
jno
insl
pusha
aas
in
and
sub
or
addr16
push
mov
mov
mov
pminub
ret
in
fsubs
or
add
mov
push
in
sbb
call
mov
shll
inc
in
and
cli
xchg
add
mov
or
in
dec
or
cmp
and
aas
xchg
jp
call
mov
mov
cmc
push
mov
mov
mov
fwait
lret
mov
lods
cltd
mov
push
das
or
add
das
push
pop
jp
sbb
pop
sbb
flds
mov
dec
pop
push
fnstcw
and
dec
inc
and
pop
imul
inc
int
movsl
clc
jae
mov
sbbb
cmc
or
insl
xchg
imul
cs
sbb
cmp
call
in
cmp
push
jo
out
pop
jmp
pop
mov
test
add
inc
stos
repnz
frstor
mov
add
bound
add
push
jge
add
lret
popa
insl
pop
xchg
cmp
aad
fisubrs
pop
scas
push
cmc
inc
in
dec
xchg
sub
sub
test
jbe
and
inc
xchg
movsl
lret
mov
push
dec
push
rcrl
or
hlt
inc
mov
in
and
pusha
mov
mov
xor
test
rep
notl
dec
sbb
sub
mov
ret
adc
pop
jg
mov
mov
push
shl
inc
cmp
movsl
lods
dec
popa
shrl
mov
test
push
mov
fldcw
sti
fwait
pop
lret
jg
jmp
and
xlat
lods
lret
cmp
int
mov
mov
mov
mov
fiadds
adc
arpl
pop
add
jge
test
test
ret
aam
fistl
je
movsb
movsl
test
ja
stc
call
movsb
xchg
add
shlb
aad
or
pop
cmp
sbb
cmp
test
sub
sbb
add
lcall
ss
xchg
insl
sub
sarb
cmp
lods
in
add
jmp
cmp
xor
lods
or
mov
push
add
loope
and
sbb
adc
call
repnz
mov
mov
jge
cld
jp
test
mov
or
subl
push
xchg
push
jge
or
imul
and
jmp
clc
jl
movsb
push
push
jno
inc
hlt
mov
hlt
call
or
js
nop
call
add
jno
movsb
and
ja
pop
mov
inc
test
popw
jbe
loopne
inc
sub
jmp
cmp
cmp
sub
xchg
sbb
or
xchg
mov
push
add
dec
xor
push
aaa
dec
inc
push
notb
pop
pop
pop
mov
fnstenv
or
inc
jbe
loopne
decb
add
mov
or
mov
inc
cmpsl
xchg
inc
cltd
out
shlb
stos
mov
add
aaa
hlt
in
cmc
jecxz
loop
adc
jmp
or
pop
dec
clc
cmp
aas
add
outsl
lcall
cwtl
pop
inc
loope
insl
dec
push
cmp
out
lods
sbb
in
lcall
push
jbe
mov
stc
mov
shrl
andl
dec
pop
idivb
jno
pushf
jge
sbb
pop
cmp
pop
lea
mov
into
in
or
inc
mov
icebp
call
sar
xor
cltd
jno
xchg
sub
leave
adc
push
mov
dec
inc
sti
sbb
mov
lods
push
int
pop
and
xchg
pop
js
popa
shl
cmpsb
jle
mov
push
rclb
push
int3
adc
cltd
push
imulb
inc
pop
adc
sbbl
cmp
loope,pt
push
ljmp
jno
popa
les
cmc
dec
outsl
jge
push
cmc
and
cmp
xlat
and
pusha
push
mov
idiv
lea
mov
gs
inc
clc
sahf
sub
gs
xor
daa
dec
roll
mov
sbb
cmc
rcll
ja
repnz
gs
loop
cmp
dec
ret
outsl
mov
dec
pop
or
adc
sbb
dec
mov
out
push
leave
andb
push
dec
adc
subl
loopne
lock
pop
insl
repz
out
adc
out
pop
xchg
daa
or
rcrb
sub
cmc
fsubp
sub
sbb
and
fiaddl
jl
xor
rcrl
jl
lret
xchg
aam
push
jbe
dec
mov
aaa
outsl
aaa
popa
mov
test
inc
or
fiadds
add
dec
mov
mov
sbb
scas
jae
dec
push
out
push
lahf
pusha
bswap
mov
imulb
popa
pop
loope
push
lods
out
and
mov
mov
pop
scas
sub
sub
mul
pop
xor
xchg
jns
sub
push
jl
shll
and
jo
push
xor
testb
lea
mov
dec
xor
inc
ficomps
mov
and
out
imul
shrb
stos
push
in
ror
dec
subb
adc
insl
mov
cmc
in
mov
fiaddl
cmp
std
cltd
std
test
dec
jns
neg
fstpt
inc
xchg
sbb
xor
inc
stos
cltd
adc
je
adc
mov
cmp
scas
cmp
dec
scas
inc
dec
and
and
dec
lret
cmp
lods
sbb
jbe
adc
dec
push
jo
pop
imul
jb
testl
ret
xchg
jge
outsb
jl
sub
pusha
fisubs
lahf
or
xor
pop
push
fstps
add
xchg
pop
xchg
cmp
sub
sbb
push
pusha
gs
sbb
add
pop
sub
jnp
cmpsl
xchg
and
std
push
fcoml
mov
inc
fdivrs
fidivl
pop
fiaddl
ss
rcrl
mov
jge
outsl
cltd
cmp
stos
lea
mov
inc
pop
in
push
mov
mov
xchg
jno
dec
pop
cmc
dec
cmc
int
iret
and
lods
sbb
mov
sbbl
or
jg
xor
mov
jne
sbb
xchg
add
cld
loopne
test
dec
mov
sub
mov
shl
clc
lds
dec
in
jecxz
pop
lcall
lods
mov
aad
fcompl
adc
jnp
mov
fldt
add
jnp
dec
inc
push
lret
jb
aaa
lret
jg
add
or
inc
sbb
xor
fwait
dec
mov
push
add
push
and
xor
addb
jns
push
pop
mov
out
leave
push
gs
add
xor
aaa
sbb
test
add
clc
cmp
inc
adc
inc
adc
test
jmp
or
shrl
xchg
sbbl
lods
mov
fisubrs
add
sahf
or
mov
add
mov
adc
push
pop
mov
or
adc
cmp
dec
push
mov
inc
mov
xlat
push
loope
popf
lods
xchg
add
loope
mov
add
mov
and
xchg
ss
je
push
lcall
lea
adc
cmp
outsl
out
sbb
scas
popa
insb
push
insl
mov
xor
mov
push
xchg
jo
mov
jnp
mov
cmp
pop
scas
jo
sbb
sub
std
or
jae
rclb
and
sbb
sub
inc
mov
jne
ds
daa
aaa
popf
stos
orl
es
in
sbb
ljmp
sbb
mov
inc
push
jb
mov
fdivs
pop
sbb
mov
js
sti
xor
push
mov
fstpt
in
push
stos
pop
aas
fidivs
arpl
cli
test
dec
add
mov
loopne
cmp
lahf
mov
inc
in
pop
mov
ret
movb
dec
mov
cmp
sub
int
jle
and
fidivl
sub
stos
and
pop
addr16
lahf
fldl
aad
xchg
popa
orb
mov
lahf
mov
shrl
push
sarb
ffree
mov
add
addl
clc
leave
mov
inc
cmp
cmp
dec
xor
ja
or
jg
daa
dec
lcall
mov
notb
adcb
rorb
mov
xor
aad
in
aaa
rcl
daa
scas
arpl
xor
mov
icebp
bound
or
test
loop
inc
pop
inc
mov
xor
and
pop
std
sbb
fistps
xor
lret
sub
inc
leave
pop
scas
addr16
push
inc
punpckldq
push
jo
dec
cmpsb
jle
scas
inc
jbe
es
push
out
xchg
sub
push
js
sbb
mov
mov
and
ljmp
xorl
fwait
xchg
int3
dec
mov
add
sub
xor
sti
pop
pop
enter
addb
adc
sahf
mov
and
movsl
dec
roll
xor
fstps
mov
dec
ret
repnz
and
adc
sbb
jne
in
sbb
cs
addb
stc
popf
loopne
pop
push
iret
jbe
ret
pop
outsl
and
push
rcrb
mov
ret
jp
les
and
mov
mov
mov
mov
and
popa
sbb
inc
lds
mov
sbb
fstpt
lret
jb
pop
xchg
shl
movsl
jmp
fcomps
mov
lea
jb
xlat
sub
loopne
and
cmp
xor
xchg
sub
fldl
dec
sbb
mov
rcrl
or
roll
dec
insl
stos
repnz
pop
dec
xchg
gs
inc
sub
or
mov
iret
data16
push
jmp
xchg
xor
cmp
pop
sbb
nop
cs
lcall
sbb
and
adc
test
xchg
mov
xor
pop
xchg
jb
push
push
dec
or
inc
sbb
dec
cmp
lock
andb
or
movsl
inc
or
xor
and
test
ja
leave
mov
in
stos
aam
inc
fsubr
subl
jns
and
jne
jno
ficoms
ret
mov
stos
daa
fldt
lret
stc
xchg
adc
arpl
ss
daa
mov
fucom
dec
push
out
test
outsb
jle
int
xchg
pop
add
fsubs
fsubrp
xor
mov
int3
jno
mov
clc
or
pop
mov
add
xor
sbb
pusha
sti
add
inc
rclb
push
xor
ljmp
je
push
outsl
call
popf
xor
movsb
xor
or
pop
dec
movsb
stos
jecxz
faddl
movsb
xchg
aad
fdiv
das
iret
inc
fwait
mov
hlt
jns
insl
movsb
jns
and
xchg
push
std
mov
mov
std
push
xor
dec
ja
negl
testb
scas
add
lods
sti
and
mov
jp
popf
push
gs
pop
cli
sti
nop
shrb
sbb
push
mov
cmc
xor
into
push
jl
test
cltd
pop
addr16
dec
and
enter
adc
cli
fldcw
mov
outsb
jl
jo
sub
cmp
shll
mov
mov
dec
dec
or
pop
scas
jg
inc
xchg
test
lcallw
cltd
into
ljmp
je
push
inc
aas
adc
mov
loope
sbb
xorb
pop
push
push
add
pop
cmp
cmp
rorl
loope
ficomps
adc
jge
movsl
jp
lahf
dec
pop
shll
and
stos
mov
push
fcomps
adc
outsb
push
pop
fstps
dec
arpl
popa
cmpsl
or
call
or
push
sub
cs
dec
sub
scas
xchg
sbb
loop
insl
dec
pop
lahf
in
icebp
lahf
adc
xor
mov
and
inc
mov
repz
mov
xchg
mov
mov
pusha
mov
loop
sub
push
dec
aad
repz
int3
test
pop
outsb
cmpsb
leave
push
mov
jmp
cmpsb
scas
sbb
dec
iret
aaa
into
add
dec
stc
and
loope
int
lds
es
icebp
call
mov
sub
mov
stos
inc
xor
aaa
mov
in
leave
aas
mov
rclb
dec
jae
mov
imul
sbb
xchg
inc
xchg
out
add
notb
repnz
movsb
psrad
pop
cmp
lds
mov
cmc
dec
data16
cmpl
int3
mov
sub
arpl
daa
repz
das
cmp
roll
insl
dec
xor
jo
cltd
and
pop
push
or
push
data16
add
test
mov
sub
jo
xor
push
xchg
subb
xor
out
cltd
mov
outsl
cmpsb
xchg
jmp
lret
or
dec
pop
iret
loope
cwtl
xchg
and
ret
mov
pop
repnz
add
test
lret
lret
xor
xchg
ficompl
lret
pop
es
adc
das
and
pop
cmpsl
bound
jo
xor
sub
fisubrs
inc
adc
jg
jp
add
adc
lcall
test
inc
pop
dec
add
leave
pushf
xchg
and
jno
adc
jge
inc
lods
push
pop
outsl
test
or
mov
dec
cmp
push
xor
shlb
lcall
jmp
mov
aas
loop
data16
sahf
aas
mov
mov
add
push
cmp
adc
adc
out
xchg
ss
out
addr16
aaa
fnstcw
hlt
dec
xor
leave
and
xchg
fnstcw
jns
int
sarb
xor
cmp
sbb
cld
push
dec
stc
shr
daa
mov
mov
fidivrl
mov
pop
cmp
fs
adc
rorl
enter
pusha
sbbb
dec
lods
ljmp
nop
mov
int
hlt
ja
adc
inc
inc
sti
pop
cmpb
lret
enter
gs
add
test
inc
daa
lret
imul
mov
es
lds
mov
cmp
xor
jno
movsb
cmpsb
inc
mov
aaa
push
sub
call
popf
in
icebp
loopne
and
and
cmc
mov
add
xor
mov
in
pop
lock
enter
or
enter
cmp
cld
movsb
sbb
push
mov
cmp
push
scas
and
out
inc
data16
dec
daa
sahf
xchg
sub
dec
js
out
insb
in
lret
int3
out
imul
ljmp
aam
imul
rcrb
mov
push
scas
cmpsb
dec
cmp
mov
cmp
test
or
stc
out
cltd
xchg
push
in
ljmp
icebp
mov
aad
pop
int
sbb
mov
rclb
add
test
in
cmp
dec
xchg
orl
int
lret
or
hlt
vpunpcklqdq
insl
sahf
and
daa
sub
push
in
cmpsl
dec
imulb
imull
std
add
ss
inc
and
mov
decl
cmpsb
mulb
bound
test
adc
jle
and
in
jns
orb
xchg
fidivrs
rolb
loop
sbbb
and
aas
mov
lcall
push
xor
mov
and
shrl
xor
fisubs
push
ja
jne
negb
push
push
add
mov
and
dec
inc
jle
adc
loop
xlat
test
sub
xor
lcall
test
addr16
popa
aas
std
aad
xchg
aas
inc
jge
push
jge
dec
ss
hlt
pop
scas
lods
imul
mov
shll
aad
stc
adc
orl
jmp
mov
sbb
cmp
add
pop
sub
fsubrl
pusha
popa
fwait
pop
adc
or
or
sub
scas
pop
cmp
mov
scas
fwait
sub
push
dec
xchg
call
insb
sbb
in
dec
lock
lods
and
xlat
pop
jecxz
sub
aad
pop
mov
incl
sub
jl
mov
or
lds
adc
add
fcomps
sahf
push
adc
out
lock
xlat
sbb
or
mov
add
clc
rcrb
or
pop
pusha
or
mov
cwtl
and
pop
sbb
mov
lods
inc
in
movsl
jp
pop
lret
xorb
xchg
lea
inc
test
lods
int3
mov
lea
cmp
or
rcl
push
xlat
adc
pop
popfw
adc
adc
rcrb
mov
push
cmpsl
or
cmp
adc
ss
out
mov
js
ja
jbe
adc
mov
xor
bound
arpl
iret
xchg
loopne
adc
inc
push
add
iret
and
call
in
add
icebp
pop
pushf
scas
aam
cli
iret
je
outsl
cmp
js
mov
lcall
arpl
insb
ret
adc
lea
cmpsb
jg
xor
adc
adcl
out
shrb
fisttpl
pusha
cmp
sub
sbb
pop
clc
movsl
in
sub
mov
sbb
pop
cmp
lret
mov
add
gs
out
les
dec
notb
in
lds
xchg
cmpsl
xor
push
scas
ret
push
sbb
aas
xor
xchg
jns
cmp
pop
movsl
push
out
clc
pop
iret
decb
das
sti
rcrb
rcrl
sub
push
scas
sub
jmp
mov
lods
inc
leave
rcll
adc
mov
xchg
cltd
cmc
lret
fists
rorb
outsl
cmc
adc
gs
sahf
out
add
pusha
negl
in
inc
mov
pop
in
jne
jo
dec
add
cmp
scas
in
fbstp
fisttpll
sarb
sahf
jne
sub
mov
mov
inc
das
and
gs
int
push
std
mov
push
add
mov
daa
mov
xchg
mov
aam
pop
push
cltd
shrl
ss
jmp
push
cltd
and
sbb
cltd
xor
int3
addr16
aas
loope
mov
les
notb
mov
pop
sbb
loope
xlat
test
lods
pop
outsl
push
xor
sti
fwait
xor
movsl
aaa
imul
inc
or
mov
jmp
or
pop
jno
jne
cmp
aaa
movsb
shl
mov
jle
adc
xchg
mov
adc
popf
in
lods
dec
mov
das
add
push
call
fisubrl
leave
fsubs
sbb
imul
and
cmp
pop
jge
dec
lahf
sub
adc
push
loopne
es
leave
inc
das
mov
sti
push
inc
pop
jge
dec
loopne
stos
cmp
xchg
mov
pop
decl
xchg
jne
add
cmp
pop
test
mov
ljmp
mov
jecxz
mov
cmpsl
out
adcb
lock
mov
ret
xchg
and
mov
xchg
jle
es
loope
jno
loope
icebp
push
mov
loop
cld
xchg
loop
push
scas
pop
mov
mov
inc
xor
push
xor
fldt
fnsave
mov
sahf
ljmp
or
push
das
mov
push
in
push
jmp
int3
cmpsb
das
cmp
rcll
mov
pop
cmp
stc
aas
dec
out
aaa
cli
push
les
and
cmp
es
call
pop
loop
popf
pop
test
or
lret
bound
call
cwtl
mov
call
into
aam
pushf
cli
mov
mov
out
test
mov
jo
jbe
or
sub
and
bound
fwait
and
int3
lods
loope
mov
push
int
cmovb
ss
je
fucom
cmp
add
and
sbb
stc
push
push
jne
sti
leave
pop
and
push
mov
daa
and
lcall
sti
shl
push
stos
lods
add
jle
inc
loop
mov
or
fiadds
rcl
adc
div
fisubrs
shrl
filds
scas
inc
jne
push
scas
jne
scas
stos
fcoml
push
mov
lret
or
mov
cmpl
cmpsb
test
adc
xchg
out
jo
dec
shll
test
scas
test
xor
mov
cli
jmp
jge
pop
cmp
add
adc
xor
ret
sar
test
xor
or
pop
and
insb
leave
cmp
dec
dec
and
inc
push
rcrl
cmp
jecxz
pop
mov
mov
mov
je
jbe
adc
adcb
hlt
pushf
xor
push
mov
or
push
in
push
cmpsb
cmp
pop
sbb
sbb
aaa
push
mov
mov
into
insl
dec
repz
mov
sbb
sbb
enter
in
adc
inc
shl
ss
decb
and
jmp
pushf
xchg
fsub
mov
mov
xor
push
fimuls
add
mov
shrl
adc
push
xor
cmp
mov
cmp
mov
inc
jg
bound
sub
mov
aas
dec
or
clc
or
xchg
xchg
sub
add
enter
iret
dec
in
xor
adcb
fnsave
addr16
sub
push
xchg
cwtl
add
scas
mov
ljmp
push
cmp
int
in
dec
pop
addr16
mov
push
and
or
xor
ret
xchg
and
xor
mov
rcr
jmp
in
stc
lcall
ret
lcall
mov
pop
add
sarb
add
mov
or
lds
sahf
lods
cmp
sub
shll
mov
fsubs
or
pop
and
shll
mov
jle
ljmp
and
pop
mov
loope
testl
sub
gs
ss
sbb
mov
cmp
into
stos
ror
push
adc
iret
es
mov
mov
cmp
mov
aas
sbb
rcrl
dec
dec
addr16
cmc
incl
movsl
push
mov
inc
out
pop
xchg
jmp
or
or
insb
push
lock
mov
add
mov
pop
mov
dec
movsb
into
stos
daa
pop
jbe
sub
dec
stos
sub
xchg
inc
cmp
imul
jnp
pop
ficoms
xor
push
lods
add
call
js
stc
jne
loopne
mov
inc
out
or
xor
mov
inc
leave
pushf
mov
dec
or
pop
jo
and
sbb
les
mov
dec
pop
xor
nop
jae
xchg
xchg
in
orl
mov
push
loop
push
dec
out
arpl
test
add
out
lret
lret
inc
inc
xorb
jg
aad
cmp
dec
daa
mov
cmp
adc
rorl
insl
cmpsl
adcl
mov
push
xchg
cltd
or
xchg
mov
repnz
push
shl
movb
scas
mov
sbb
mov
fistpll
jle
add
and
jp
push
imull
jg
stc
lods
or
and
mov
inc
aaa
inc
rolb
ljmp
ljmp
stos
iret
fistl
cmpsb
loopne
mov
inc
mov
mov
jo
cmp
add
dec
and
mov
sub
dec
mov
or
inc
cmp
into
pop
push
andb
mov
dec
jno
dec
les
and
fcompl
cmc
push
test
xchg
xchg
inc
scas
and
repz
cmp
lods
mov
adc
push
inc
mov
repnz
rorl
loop
mov
imul
ss
nop
mov
ljmp
push
lds
jne
sub
test
out
int
call
lret
mov
xchg
cmp
xor
outsl
add
andb
pop
das
dec
xlat
inc
fimull
jb
inc
pop
sub
mov
aam
pop
xor
ja
or
js
aaa
xchg
dec
cmpsb
mull
jge
mov
ret
inc
sub
mov
rcrl
orb
repnz
add
xchg
sub
and
jg
imul
and
stc
in
jae
mov
jle
daa
jns
jno
stos
sub
dec
loop
mov
fimuls
inc
sbb
hlt
dec
cwtl
mov
adc
jb
xchg
sub
sbb
subl
jge
lcall
into
lods
or
mov
fmull
cltd
and
inc
and
rcll
jo
cmp
test
mov
jg
pop
outsl
ljmp
mov
add
xor
insb
push
push
aam
jg
fcomps
lcall
inc
nop
sti
adc
mov
mov
push
push
cmpsb
enter
data16
adc
movsl
push
cltd
aad
inc
ja
neg
mov
jp
aam
and
push
stos
cmpsl
add
xor
leave
loope
bound
push
xlat
subb
clc
mov
push
jne
pop
test
pop
jmp
sub
jecxz
add
xor
ja
mov
out
movsb
lods
cs
std
fmulp
sub
pop
or
nop
xchg
fwait
insl
push
mov
or
sub
pop
ja
add
dec
lods
movsb
mov
in
popf
or
mov
sbb
mov
adc
and
xor
stc
nop
ja
push
and
lea
xor
sub
sbb
mov
add
sub
adc
cld
add
lock
mov
inc
pop
push
sbbl
cmc
ss
mov
inc
cld
and
int3
cmp
loopne
in
out
sub
cs
movb
into
lret
sub
sahf
adc
sub
dec
mov
stc
in
adc
pop
cmp
pop
loope
xchg
push
arpl
test
fildl
pop
nop
dec
cwtl
outsl
mov
popa
out
pop
scas
movsl
lret
pop
js
fwait
test
mov
mov
insb
or
test
push
cld
adc
fistpll
pushl
jno
sbb
mov
sub
xor
loopne
pop
push
in
leave
pop
ds
xor
icebp
gs
or
shlb
xor
mov
out
xchg
mov
gs
dec
push
ds
mov
js
push
sub
dec
push
rcrb
jp
xchg
cmpsb
adc
and
jmp
inc
mov
or
sbb
or
add
rcrl
mulb
jne
add
cli
push
cmc
in
jp
iret
push
movsl
adc
xchg
filds
ds
mov
rolb
test
mov
mov
add
sub
cmp
das
pusha
in
pop
rcrl
push
test
fiaddl
out
repz
jmp
adc
out
ret
loope
sub
mov
les
jge
cli
mov
fucom
dec
addb
sbb
gs
sbb
ss
sub
enter
aaa
gs
ja
lcall
test
outsb
iret
ss
or
hlt
fwait
mov
xchg
movsl
hlt
loope
ljmp
adc
mov
mov
mov
es
dec
pusha
sub
icebp
ret
add
mov
sub
out
gs
xchg
pmaxsw
mov
lcall
subb
sbb
popf
jle
fbstp
lahf
and
rolb
fs
adc
mov
fstpt
xchg
out
rolb
insb
movsl
lock
dec
movsl
sahf
notb
clc
fbstp
sub
dec
loopne
jmp
fisubrs
push
jge
int3
fsubl
pop
sbb
add
mov
outsb
rcl
insb
mov
cld
push
jecxz
xor
sub
ja
ljmp
mov
outsl
loope
insl
fs
mull
xor
jmp
in
imul
insb
jle
arpl
hlt
mov
aaa
push
jl
mov
out
lds
fpatan
daa
jl
push
stos
mov
repnz
scas
or
jecxz
jp
clc
xor
fisubl
cmpsl
xchg
insl
mov
popf
sbb
add
adc
sahf
xor
inc
in
xchg
mov
xchg
pop
xor
push
mov
test
lea
pcmpgtb
rclb
cmpsb
push
xor
add
mov
sub
mov
and
aam
add
movsb
sti
test
inc
fcoms
mov
ret
jb
cli
inc
sbbl
sub
ret
loope
xor
fs
jns
cmp
dec
insl
sub
testl
aaa
ret
or
inc
pushf
mov
push
out
scas
mov
or
hlt
pop
leave
push
fdivs
cmp
movl
pop
jbe
test
sbb
add
mov
leave
and
cmpsl
testl
push
lods
inc
test
dec
loopne
jecxz
lret
adc
outsl
push
xchg
mov
sar
lea
dec
adc
loop
jle
pop
fistps
ljmp
or
xchg
jno
jg
addr16
hlt
jp
iret
imul
add
cmp
test
ds
fidivs
ss
inc
fdivrl
je
sarb
push
sbb
mov
sbb
dec
lods
cmp
pop
jge
test
subl
xchg
lcall
adc
sarl
pop
jno
jge
mov
pop
dec
dec
inc
icebp
aaa
shll
lret
pop
aas
xchg
pop
je
cltd
pop
xor
mov
testl
jge
and
cmpsl
dec
jmp
add
and
insl
push
aaa
adc
add
xchg
sub
push
mov
fsubrp
lret
pop
es
sub
or
mov
xchg
cmpsb
or
add
sahf
push
push
pushf
das
loopne
xchg
inc
lods
jmp
das
inc
dec
pushf
mov
jecxz
cli
std
test
lods
jecxz
fimuls
or
mov
xchg
add
pop
mov
js
push
mov
mov
jp
pop
out
dec
mov
jle
inc
jle
pusha
xor
fucom
orl
sub
and
hlt
pop
xor
popf
and
xchg
pop
mov
and
or
call
push
mov
ss
scas
shll
xchg
pushf
shr
scas
rolb
cmp
sub
jmp
mov
mov
ja
loop
and
add
aad
mov
cmp
pop
cmpsb
xchg
ror
out
mov
cmp
mov
cwtl
xor
ss
push
mov
mov
outsb
clc
int3
fcoml
dec
pop
xchg
mov
fisubs
mov
xchg
mov
push
or
and
push
xor
sahf
ljmp
sbb
fcomps
xor
addr16
mov
cwtl
bound
sub
inc
inc
daa
dec
fiaddl
test
mov
xchg
notb
shll
es
add
sti
bound
jnp
outsl
mov
testb
shll
repnz
aas
scas
adc
mov
add
lock
sub
aas
pushf
out
cmp
and
pop
sbb
xlat
jmp
xchg
xchg
das
push
xor
jp
cmp
das
push
ljmp
rclb
inc
mov
jg
hlt
mov
inc
add
mov
sub
inc
sub
aaa
bound
mov
pop
hlt
and
adc
call
xor
lret
xchg
cmp
add
xchg
inc
inc
xor
dec
loop
xor
insl
outsb
mov
hlt
xchg
mov
ret
sbb
data16
push
or
mov
push
cmp
jmp
sub
je
loopne
xchg
adc
cmp
add
sbb
rorl
outsb
inc
jns
rcll
repz
and
adc
aaa
xorb
setle
mov
inc
bound
xor
shrb
pop
xchg
add
cwtl
aam
or
push
or
xor
je
les
mull
sbb
addr16
lods
repnz
push
repz
ja
daa
mov
loopne
add
jns
sub
iret
lock
mov
sub
pop
dec
adc
inc
das
xchg
lcall
insl
mov
dec
pusha
lods
sub
inc
fisubrs
fsubrl
dec
and
mov
pop
sbb
ja
lods
push
sbb
movsl
hlt
lods
sahf
test
gs
test
popw
call
test
cltd
push
and
pop
mov
fwait
xor
aam
add
js
or
ja
or
cmp
cmpsb
sub
cltd
mov
cltd
arpl
xchg
sbb
pushf
cmpsl
sbb
lock
ret
xchg
cmc
lock
stos
push
movsl
aaa
out
mov
jecxz
jecxz
xchg
push
jl
inc
stos
loopne
cmp
scas
loop
sbb
sbb
lock
jl
pop
or
dec
cmp
imul
shr
fwait
mov
xchg
sub
pop
pop
add
cs
fildl
sub
xor
push
pop
dec
loopne
fists
pop
aaa
out
mov
mov
cmpsl
enter
enter
mov
lea
outsl
push
xor
test
test
int
xor
jl
sub
loope
jmp
push
add
push
sahf
mov
insb
add
pop
xor
pop
mov
outsb
fs
pop
sub
or
mov
adc
imul
popa
mov
insl
mov
add
mov
jmp
dec
mov
fisubrs
cld
dec
mov
sbb
lock
jnp
mov
and
ret
dec
stos
add
push
out
xchg
mov
xor
es
or
cmp
iret
lretw
cmc
fmuls
xchg
lcall
inc
xchg
les
cmp
dec
shrl
mov
insl
add
push
cmp
je
repz
popf
imul
ret
hlt
das
pushf
push
xor
lods
mov
mov
cmp
dec
test
push
aas
mov
or
and
push
test
daa
cs
mov
add
sti
icebp
aaa
mov
dec
pop
push
cmp
leave
sbb
dec
hlt
mov
push
je
xor
mov
push
cmp
leave
loopne
dec
or
pop
pop
nop
mov
cmp
es
pop
xor
sub
in
add
in
movl
jbe
sbb
push
cli
mov
inc
jnp
inc
lods
fs
and
shr
sub
aam
mov
subl
pusha
jne
call
or
sbb
loopne
jns
ret
ret
lret
or
insb
xchg
sub
loopne
ljmp
call
sub
cli
dec
loope
xchg
mov
out
shll
lcall
ja
mov
outsl
test
int
outsb
in
push
or
jbe
out
cmp
mov
fwait
push
jne
xchg
xchg
popf
and
lret
sti
mov
aas
pmulhw
sbb
cmpb
inc
sub
sbb
rcr
and
cmp
xchg
add
inc
sbb
or
inc
out
push
jno
arpl
mov
inc
idivl
cmp
lcall
enter
mov
pop
add
inc
mov
mulb
loopne
std
test
add
xchg
shrl
mov
sti
push
lret
pop
inc
xlat
cmp
cmp
or
stos
inc
push
pop
dec
fbstp
jle
incb
andb
xchg
dec
hlt
outsl
jnp
outsb
mov
or
aad
insb
mov
int
mov
mov
mov
test
mov
inc
loope
push
in
mov
stc
xor
mov
and
mov
adc
loope
daa
mov
mov
in
push
push
sbb
add
jg
xor
add
xor
jnp
subb
adc
mov
filds
push
aam
test
pop
das
mov
dec
lcall
stc
or
or
push
mov
adc
push
int3
sub
std
mov
pop
jle
pushf
sub
add
push
sarl
cmp
mov
sub
pusha
fs
pop
das
stc
add
nop
mov
insb
test
cmp
rcll
jp
cmp
wrmsr
roll
icebp
arpl
and
mov
inc
andl
add
in
jg
dec
js
movsl
lret
rcl
add
rcr
add
inc
mulb
cmc
adc
stos
add
mov
adc
stc
mov
xor
mov
xchg
ret
jae
jg
test
inc
fwait
cmpb
mov
xorl
lods
rcr
and
or
xor
mov
les
in
xor
adc
jle
test
add
mov
xor
lahf
out
push
sbb
mov
mov
lea
push
sahf
imul
cmp
xchg
mov
push
leave
pop
nop
xlat
inc
sbb
jb
ret
xor
push
scas
inc
xchg
dec
fildll
jno
dec
dec
jae
jecxz
fistps
xor
pop
mov
popf
in
lock
or
xchg
jae
jb
and
mov
pop
cmp
sarb
nop
mov
in
pop
or
dec
movsl
cmc
inc
pop
ljmp
xor
sbb
sub
xchg
push
or
mov
cs
fsubr
jp
pop
jnp
idiv
xchg
pop
and
sbb
xchg
movsl
jl
das
pusha
add
dec
or
and
jae
sahf
lcall
mov
loopne
mov
leave
or
xchg
int3
pushf
jl
scas
xchg
jns
ret
arpl
out
stos
push
out
and
inc
jne
mov
mov
cmp
neg
loope
jbe
jge
pusha
movsb
repz
cwtl
out
jl
mov
mov
imul
movsb
mov
outsb
fwait
or
lret
notl
mov
shl
cld
and
pop
mov
popf
jns
leave
jbe
fbld
adc
xchg
fsubrl
ficompl
cmc
rcrl
pop
aam
int
mov
jecxz
arpl
dec
and
pop
test
aad
push
ljmp
jno
std
jb
pop
rcll
ds
adc
ds
mov
outsb
sub
xor
cmp
pop
sub
mov
jp
mov
adcb
cmc
jns
dec
fldt
push
add
adc
cmc
aam
inc
mov
lods
sub
int
xor
mov
mov
dec
cli
ljmp
push
inc
mov
and
or
dec
daa
jo
mov
mov
std
rolb
xchg
jb
or
push
test
bound
lahf
mov
shrb
test
sbb
daa
pop
mov
or
fs
out
out
inc
mov
sub
pop
dec
mov
mov
fnsave
pusha
repz
mov
mov
or
sahf
hlt
clc
pop
push
inc
dec
icebp
int3
clc
xchg
jns
mov
mov
lea
xchg
js
repz
lcall
aam
in
arpl
inc
sbb
lea
iret
mov
adc
xlat
or
mov
out
fisttpll
test
pop
aaa
bound
jmp
adc
push
pop
or
jno
sbb
adc
movsl
lds
clc
adc
xchg
add
xchg
and
push
jno
test
clc
in
fstps
inc
jg
jbe
fbld
cmpsl
jne
xlat
adc
nop
jge
scas
mov
sbb
loopne
mov
dec
dec
fsubrl
jns
jnp
out
and
mov
data16
sub
out
aaa
fsubl
aaa
daa
jp
push
mov
mov
insl
mov
outsb
sbbl
inc
pop
push
xorb
rorb
cmp
mov
jle
adc
stos
adc
jl
mov
xor
pusha
jns,pt
ja
mov
sub
rclb
inc
int
es
lods
mov
ret
paddusb
sub
mov
xor
pop
lock
ror
ljmp
sbb
mov
or
scas
mov
insb
jb
xchg
jle
or
stc
mov
imul
arpl
mov
cwtl
and
ljmp
cmp
jnp
push
jmp
inc
call
lret
sub
fsubrs
in
ljmp
int3
movsb
xchg
inc
stc
lcall
jns
lcall
sub
aad
pop
jl
dec
sbb
lahf
stos
cmp
mov
mov
or
iret
pusha
jae
xchg
daa
outsl
xchg
out
out
push
cmc
or
add
xchg
faddp
jb
mov
sbb
enter
fidivs
adc
or
outsl
aam
push
outsl
iret
pop
cmp
mov
push
mov
ret
pop
negb
sub
lods
repnz
popf
or
dec
cmpsl
cli
fadds
int3
hlt
loopne
es
xor
pop
je
pop
outsl
or
xchg
outsb
insl
and
mov
loopne
mov
nop
enter
int3
out
mov
and
cmpsl
mov
sbb
dec
push
cmc
xchg
pop
add
mov
sub
cmp
cmc
lods
shrl
das
addr16
out
cs
ljmp
popf
sub
ds
sarb
lea
and
ds
hlt
pop
mov
and
mov
jnp
mov
cmpsb
inc
lahf
push
ljmp
loope
popa
adc
stos
inc
cmp
xchg
popf
or
xchg
aaa
decl
mov
sub
stos
mov
adc
mov
sub
dec
or
andl
rorl
jnp
gs
jns
scas
dec
mov
or
lret
xor
lock
push
fs
insb
xchg
jmp
add
jl
dec
mov
pop
fnstcw
shll
xor
xor
push
shll
insb
loope
cli
cs
andl
ja
fnsave
fsubrs
insl
in
scas
ja
sbb
ficompl
dec
mov
ds
pop
pop
lods
mov
dec
mov
cmp
cmpsl
cmp
rorb
jb
adc
xchg
jl
ljmp
mov
sub
or
stos
jno
or
jmp
popa
inc
jle
push
pop
bound
into
jecxz
pop
les
inc
loop
fstp
in
cmc
cs
inc
fisttpll
sbb
and
and
pop
xchg
jbe
adc
ds
xchg
jg
sub
sbb
int3
jnp
les
push
mov
orl
es
and
daa
jns
pop
lock
add
loop
jno
andl
pop
mov
imul
xor
jp
pop
cmpsl
ds
add
jns,pn
int3
arpl
or
dec
adc
rclb
jg
ret
or
pop
div
out
inc
xlat
je
mov
sbb
in
xchg
sub
aas
mov
popa
xchg
mov
cli
mov
and
xor
das
enter
and
cli
ficomps
dec
mov
sbb
xchg
leave
inc
pop
jle
call
xor
jmp
dec
xor
mov
jecxz
mov
add
or
call
add
xor
fisubs
gs
push
cmp
lret
mov
cmp
sub
push
test
or
lcall
pop
je
pop
pop
add
jge
cld
push
scas
sub
add
loop
ja
aaa
push
imul
test
jbe
xor
fs
fstl
das
pop
outsb
cmp
add
daa
cli
xor
pop
jb
out
cltd
outsl
jg
gs
sbb
mov
lods
cmp
loope
les
testl
push
sub
xchg
xchg
mov
outsl
mov
out
nop
shll
loope
jp
cs
adc
dec
je
repnz
push
jge
sbb
clc
sti
into
gs
lret
sahf
mov
mov
aaa
fldcw
and
jbe
repnz
es
lcall
fadds
out
sub
jne
cmp
mov
jb
icebp
xchg
ljmp
orb
jl
lods
inc
xchg
mov
adc
mov
pop
xor
push
xor
adcl
inc
pop
movsb
lods
inc
jg
pop
test
pop
mov
push
xchg
aam
push
es
jb
and
xor
int3
nop
push
jns
gs
mov
jne
mov
pushf
popf
xor
dec
mov
push
call
sbb
jno
out
hlt
test
mov
aaa
fwait
dec
jl
das
push
notl
addb
pop
bound
rcrb
insl
xlat
or
pop
movsb
repnz
js
sbb
push
cmpsb
adc
cmp
or
cmp
js
popf
in
pop
push
push
into
gs
loopne
stos
push
cmp
cmp
or
fists
add
cld
mov
scas
pop
jno
push
rolb
nop
andb
jbe
add
jb
lcall
inc
lds
data16
jcxz
pop
dec
popa
xorl
lret
cs
adc
jg
fwait
cmp
out
jnp
ds
pusha
pop
mov
lds
jno
dec
mov
std
mov
inc
mov
je
rolb
jae
cwtl
inc
ret
push
mov
adc
mov
sub
pop
cmp
push
cmp
pop
or
xchg
inc
sbb
push
mov
leave
stos
das
addr16
sbb
out
pop
je
pop
lahf
mov
push
adc
lds
lds
mov
and
jl
stc
das
dec
push
jmp
xor
xchg
push
push
xchg
inc
jae
shlb
mov
insl
add
sub
sbb
insb
mov
mov
dec
fsubl
nop
icebp
mov
ret
sbb
cltd
std
icebp
mov
test
xchg
push
dec
dec
or
mov
mov
cmp
aam
je
dec
adc
jnp
aaa
lods
testl
rep
lret
cmp
lods
jp
je
movntq
out
xorb
fwait
xor
sub
dec
or
in
cmp
jle
in
mov
fdivl
mov
imul
inc
movsb
stos
sahf
adc
xor
push
jg
insl
hlt
pop
leave
mov
ret
mov
icebp
mov
cmp
leave
adc
test
jo
cmp
sarb
mov
fidivs
insb
aad
pop
cs
scas
xor
jg
out
into
mov
inc
jmp
add
or
call
sbb
icebp
fdiv
sub
jns
imul
sub
sbb
lods
dec
sub
dec
loopne
jp
or
shlb
or
pop
or
push
dec
mov
lock
jb
sub
aad
adc
cmp
fdivrl
pop
mov
mov
les
adc
dec
or
lock
fs
and
lea
adc
push
sbb
mov
mov
sbb
mov
mov
xor
mov
vmwrite
dec
sbb
xlat
dec
sbb
sbb
iret
jb
lods
mov
xor
or
sbbl
cmpsl
sbb
add
pop
daa
sub
dec
or
mov
mov
outsb
pop
pop
cmp
push
ja
movsl
xchg
or
inc
inc
xor
enter
mov
fbld
adc
pusha
lcall
mov
pop
sbb
inc
sbb
xchg
rcll
jne
jp
push
mov
fistl
scas
mov
in
insb
loopne
je
into
adc
jne
pop
or
cli
fs
push
xchg
sbb
jecxz
sub
lods
fsubs
sub
jae
outsl
movsl
ss
mov
pop
mov
adc
sub
shrb
dec
add
fnstsw
push
cmpsl
jnp
std
and
xchg
testb
sub
lock
out
add
arpl
sbb
jo
je
jnp
pushf
and
jmp
push
jae
mov
adcb
in
inc
sbb
mov
xchg
mov
ret
hlt
push
les
popf
addl
test
xchg
mov
je
push
cmpsb
pop
imul
dec
push
sbb
xlat
adc
jo
andb
lret
mov
mov
push
cmpsl
call
cmp
push
imull
push
xor
cwtl
paddq
mov
insb
add
adc
stos
jbe
mov
mov
mov
fistl
push
jmp
icebp
sarl
adc
lcall
mov
mov
pop
and
jns
mov
outsl
cmp
iret
test
inc
test
mov
jae
lahf
out
popf
mov
mov
xor
rorb
repnz
iret
mov
leave
xchg
orl
push
imul
pusha
mov
stc
call
jne
pop
cmpsl
fists
jl
test
pop
icebp
push
xchg
roll
add
mov
fsts
xlat
dec
scas
sahf
mov
mov
pop
ss
addr16
inc
mov
aad
fwait
in
int3
gs
mov
inc
sub
jns
popf
dec
pop
and
xor
lock
ljmp
notb
fsubs
dec
adc
int3
arpl
xor
ret
outsl
sbb
sub
lea
cmp
cs
cltd
fidivl
and
dec
dec
cltd
sbb
dec
fcompl
xchg
xchg
mov
push
jle
or
cmc
loopne
cmc
ss
dec
xchg
repnz
imul
push
add
adc
stc
jge
repnz
pop
push
add
jp
int3
sub
xlat
cmpsl
sbb
sbb
imul
je
mov
inc
popa
pop
pushf
xor
sbb
dec
insl
add
in
mov
mov
aam
mov
mov
outsl
jmp
ret
xor
mov
dec
xchg
inc
imul
imul
cmp
out
mov
stc
das
xchg
inc
out
adc
mov
adc
xor
dec
pop
adc
movsl
cmp
in
shrl
push
cmpsl
scas
and
subb
imul
pop
jmp
and
xlat
imul
xchg
out
out
pop
cwtl
xchg
sub
pop
scas
je
loope
aad
sahf
cli
push
jp
xchg
mov
push
cmc
inc
jp
adc
test
push
xor
push
jl
adc
pop
dec
stc
in
lret
jge
sub
cwtl
outsb
xchg
loopne
dec
mov
es
daa
mov
ret
mov
ret
mov
insl
jo
pop
mov
into
sub
add
iret
dec
daa
adcb
add
bnd
subl
dec
cld
sbb
stos
pop
xchg
xor
xor
mov
dec
pop
inc
in
cmp
xchg
insb
xchg
lock
mov
mov
fldenv
inc
fst
nop
cs
pop
jg
idivl
adc
sbb
sub
sti
xchg
pop
push
lods
adc
sbb
mov
decl
std
inc
movsb
shrl
adc
sahf
inc
pop
repnz
pushf
jae
lea
inc
fwait
mov
pop
ljmp
mov
ljmp
xor
pop
and
dec
sbb
pushf
addr16
adc
inc
cmpsl
ret
push
inc
jl
data16
add
cli
xchg
dec
fsubs
insb
cmp
inc
pop
data16
and
lods
lea
aad
aas
sbb
jge
dec
scas
pop
xchg
add
jmp
orl
jb
mov
mov
mov
add
dec
mov
cmp
popf
or
sarl
pop
jle
nop
pop
dec
fisubrl
fwait
jle
sbb
cld
movsl
int
mov
sbb
loop
outsb
hlt
cmp
imull
test
lret
jb
pop
in
xchg
mov
std
pop
sahf
or
lret
xlat
adc
popf
xor
leave
into
mov
push
arpl
or
int3
stos
aaa
lret
pop
pop
fs
pop
xchg
jnp
fisttpll
nop
daa
iret
pop
in
and
scas
imul
dec
ljmp
pop
int
icebp
cmp
pop
insl
adc
xor
sti
add
mov
into
fwait
xor
cmp
xor
bound
xchg
push
sub
xor
pop
push
js
xchg
testl
pushf
xchg
cmp
adc
jb
and
mov
test
xchg
push
push
out
cld
je
mov
ror
psubq
xor
loope
pop
mov
mov
mov
in
enter
sbb
ret
cld
pop
out
outsl
adc
jb
lods
mov
addb
push
inc
sahf
sub
shlb
call
scas
fs
loopne
mov
push
or
iret
or
mov
movsb
hlt
mov
decb
inc
lock
mov
xchg
mov
dec
or
clc
std
movsb
mov
xchg
imul
sub
jbe
add
js
stos
inc
add
outsl
xchg
test
std
xchg
jecxz
rcl
and
pop
roll
mov
cmp
dec
cmp
sbb
and
rcr
jb
pushf
cmp
mov
push
stc
nop
pop
test
fistps
imul
pop
xor
pop
and
sub
jecxz
test
dec
gs
mov
scas
pop
mov
add
pusha
sbb
and
jo
add
cmpsl
xchg
rcl
aam
xchg
push
jl
adc
and
arpl
add
sbb
jg
push
fwait
mov
lea
mov
fstpt
es
jl
pop
into
sub
dec
jno
cmpsb
cmpsl
fmuls
cmp
inc
inc
jle
push
lahf
nop
stos
and
mov
lret
cld
lcall
push
je
stc
stc
add
adc
imul
jmp
ret
jl
daa
pushf
popl
adc
scas
dec
mov
out
subl
sbb
inc
mov
fnstenv
xchg
push
jne
jae
xorb
popf
xor
xchg
sbb
outsl
repnz
leave
fcmovu
pop
cwtl
jp
adc
out
loope
xor
outsl
sub
adcl
push
push
das
sbb
cmpsb
clc
sbb
xchg
dec
sbb
xchg
bnd
das
outsl
aaa
inc
cmpsl
add
shlb
aas
arpl
pushf
adc
sti
daa
jno
sbb
push
cmp
insl
test
lahf
mov
pop
scas
pop
test
lret
push
sbb
les
test
cli
in
stos
push
xchg
sbb
mov
fdivp
inc
adc
fmul
inc
ficoml
fcoms
jnp
add
leave
xor
xor
fbld
push
xlat
outsb
dec
lods
ds
jl
es
dec
mov
fsubrl
movl
add
cmpsl
sahf
push
xchg
dec
pop
decb
pop
xor
loop
or
loop
jb
cmpsb
add
dec
xor
jg
cld
push
fisubs
mov
dec
xchg
jno
mov
pop
out
or
fwait
cmpl
xchg
adc
sbb
fwait
xchg
pop
push
enter
iret
or
mov
or
insb
cmc
jp
ds
movsb
out
daa
add
sub
mov
outsl
cld
adc
loope
notl
mov
repz
mov
or
jmp
cmp
xchg
sub
mov
mov
ficompl
mov
adcb
mov
cmp
pushf
push
sbb
xchg
push
mov
sbb
pop
pushf
add
mov
sub
cmpsl
pop
outsl
cmp
cmc
in
in
xchg
decb
cmp
push
sbb
andl
sbb
scas
jle
imul
ret
loop
and
jecxz
cmp
shll
jns
dec
jno
jnp
imul
xchg
and
or
ljmp
subl
and
inc
jl
insb
into
mov
mov
imul
sbb
mov
pop
out
xchg
scas
cli
or
daa
es
or
jae
test
add
inc
hlt
cmp
shr
or
xor
daa
push
std
sbbb
fmuls
and
adc
fwait
movsb
mov
rcrb
add
add
mov
pop
jl
pop
dec
ret
es
jle
sub
pop
repz
add
addr16
jp
xchg
dec
out
jmp
jo
xchg
mov
mov
xor
aad
in
fldcw
jo
and
sbb
adc
fisttps
pop
cmp
es
pop
call
test
aas
jno
adc
fsubr
xchg
xchg
and
andnps
mov
xchg
inc
out
jg
sbb
popf
xchg
mulb
adc
lds
sbb
push
dec
push
jb
fs
sbb
adc
xor
mov
mov
std
jae
sbb
setl
hlt
push
lret
pop
jbe
dec
ret
pop
jecxz
mov
push
push
jl
sti
pop
add
jecxz
js
imul
mov
xor
lret
pop
push
push
or
xchg
ljmp
leave
daa
inc
nop
jecxz
fmul
xchg
add
and
mov
mov
jle
test
lahf
and
outsl
inc
mov
push
int
xchg
rolb
and
rclb
dec
out
adc
repnz
cmc
adc
in
dec
fbstp
xchg
push
stos
outsb
and
dec
sbb
mov
popa
mov
pop
jbe
pop
mov
jg
pop
and
mov
decb
iret
pop
jecxz
test
push
push
mov
dec
subb
cltd
cmp
pop
call
mov
dec
pop
dec
push
mov
ja
pop
jg,pt
stos
lds
inc
fcos
popa
dec
xchg
dec
imul
outsl
lret
jnp
out
in
and
int
leave
pmaxub
movsl
int3
lea
pop
hlt
addr16
andb
pop
ja
dec
lock
lcall
bound
xchg
or
addr16
or
jle
cmpsb
push
xor
mov
dec
mov
lds
and
sti
mov
sbb
movsl
xor
mov
fisubrl
cwtl
xor
hlt
in
mov
xchg
sub
ss
push
jmp
push
jmp
ja
jp
scas
loope
daa
mov
and
inc
cmp
enter
inc
lods
sarl
das
fs
loope
repz
jb
addr16
and
push
inc
add
lret
incl
std
inc
xchg
jb
lahf
cmp
pop
mov
fninit
pusha
std
rol
mov
mov
push
mov
jp
sahf
repz
jge
cmp
es
cli
mov
mov
push
sub
sbb
aas
dec
jecxz
sub
fmulp
jp
adc
and
cmpsb
cmp
sub
test
nop
sub
aam
add
ret
or
das
push
bound
mov
call
cltd
inc
mov
insl
int
pop
popf
sub
pop
int3
sbb
outsb
ret
push
sahf
movsl
or
cmp
scas
aad
imul
testb
sub
push
push
pop
mov
cli
jns
push
stos
sbb
dec
les
cmpsb
repz
sbb
pop
or
adc
inc
aas
icebp
mov
pop
mov
add
jnp
test
outsl
or
or
sti
mov
and
jge
jae
mov
mov
mov
out
outsb
dec
mov
add
test
lcall
inc
cltd
std
je
jmp
sbb
inc
dec
icebp
sahf
dec
mov
scas
fcmovne
andl
scas
scas
pop
loopne
repnz
mov
jmp
stos
jp
mov
ljmp
push
or
in
orl
add
std
imulb
loopne
mov
push
test
push
lcall
stos
jae
jb
inc
push
lret
imul
pop
adc
test
cmp
rolb
push
std
shrb
sub
ja
xlat
in
push
mov
incb
insl
xchg
add
lcall
clc
push
push
jb
add
imul
jmp
les
into
jmp
mov
xchg
movsl
inc
mov
mov
inc
ljmp
lret
mov
shll
outsl
xchg
push
dec
pop
outsb
jb
call
loope
sub
mov
jmp
in
ds
stos
mov
daa
push
mov
xchg
sub
int
mov
outsl
mov
sti
hlt
mov
out
xchg
test
inc
cmp
ljmp
jb
xor
adc
pop
rorb
addr16
push
sbb
pushf
jbe
mov
fs
idivb
movsl
pop
xchg
int
cwtl
cmpsb
and
ffreep
pop
fnstcw
and
inc
inc
adc
jae
mov
or
mov
pusha
imull
movsl
xchg
rorb
push
movsb
lods
push
lods
cmp
adc
pop
call
aas
and
cwtl
push
jge
sbb
xor
mov
pusha
adc
xchg
in
xchg
push
pcmpeqw
es
inc
cmc
mov
or
test
cmp
pop
jp
in
xchg
sub
les
dec
loope
inc
push
in
sbb
xor
jo
add
bound
rolb
cltd
ljmp
lods
dec
xchg
lahf
dec
sbb
data16
mov
repz
xchg
fsubs
or
push
xor
pop
testl
out
sub
rol
and
and
push
bound
imul
imul
lods
fldcw
vmread
push
and
ficoms
aam
xchg
loopne
in
adc
jmp
leave
jne
jbe
ljmp
xchg
mov
push
movsl
push
aas
mov
in
mov
mov
cld
push
popf
shl
and
dec
movsl
mov
lods
notb
sub
clc
aam
lret
jno
jle
xchg
pushf
adcl
push
push
pop
repnz
std
push
mov
or
jecxz
jno
add
call
sahf
daa
inc
mul
std
iret
and
inc
add
ljmp
xchg
cmpsl
ret
pop
sub
mov
jmp
in
jmp
ret
and
mov
in
xchg
outsb
rcl
push
cmpsb
jne
loopne
lods
loope
call
jmp
push
mov
mov
ds
lret
fisubrl
stc
mov
sbb
ss
lock
jmp
pop
cwtl
dec
cld
jae
pop
jbe
outsb
mov
push
add
jno
repz
pop
aam
push
push
or
bound
adc
sbb
rorb
es
inc
push
aam
push
addr16
movsl
cwtl
jns
jmp
test
mov
dec
xlat
inc
pop
nop
insb
push
popf
popf
mov
loope
lcall
ljmp
jno
stos
dec
vpmullw
mov
pop
adc
test
lods
mov
int3
call
in
outsl
mov
pop
sar
mov
pop
cs
sbb
xchg
into
push
jmp
dec
movl
shl
add
loopne
jbe
inc
inc
and
psubw
lock
cmp
and
sbb
cmp
cmc
cmp
cmp
push
jbe
out
adc
jp
mov
lea
ret
or
std
orb
pop
sbb
lods
shrl
push
add
pusha
sub
xor
jge
imul
dec
adc
add
mov
popf
jmp
jcxz
pop
clc
call
xchg
leave
mov
adc
and
or
lret
filds
dec
xchg
bound
lods
fstl
or
lahf
cld
inc
data16
xchg
mov
movsb
pop
scas
sbb
addl
movsb
les
or
movsb
repnz
sub
add
daa
or
cld
in
dec
mov
inc
test
pop
sub
movsl
jo
dec
sahf
stc
aaa
std
dec
push
daa
test
push
inc
inc
movsb
cmp
int
in
sub
push
mov
xlat
inc
inc
inc
icebp
out
test
sarb
rolb
push
or
cmpsl
enter
lds
ds
fldt
incl
mov
or
ret
push
daa
push
mov
scas
push
out
push
scas
jbe
fldz
mov
adc
jmp
cmp
pop
hlt
pop
in
hlt
loope
push
xor
jl
cmp
test
mov
inc
fdivrl
stc
lods
mov
add
insl
addl
mov
popf
and
shlb
scas
es
lds
lret
stos
dec
ficompl
cmpb
arpl
fldl
std
sbb
push
ret
mov
pop
push
lock
insl
add
rol
and
popa
cmp
leave
repz
lret
mov
mov
movsw
cmp
mov
ds
std
inc
call
add
xor
push
mov
in
fwait
and
clc
mov
out
imul
mov
fistpl
jae
ljmp
lods
mov
ftst
ret
jne
push
cmpsl
mov
test
andb
insl
sub
cmpsb
adc
or
addr16
sbb
add
lds
lret
inc
inc
cmc
iret
push
call
inc
and
push
and
push
inc
std
jmp
sub
push
in
call
jne
add
pop
push
lret
bound
out
popa
lahf
ss
psubd
xor
lret
inc
cli
hlt
test
xor
faddl
movsl
stos
push
pop
pop
int3
jno
mov
stc
push
cmpl
imul
adc
movsb
cltd
stos
fmuls
outsb
add
jbe
mov
pop
fisttpl
pop
dec
mov
rorb
or
fnstenv
cmpsl
ret
dec
fstpl
jbe
stos
push
not
leave
test
mov
les
fs
mov
pop
sarl
imulb
les
test
xchg
jo
outsb
stos
loop
cmp
scas
or
daa
xlat
call
jnp
lret
sbb
fbld
icebp
cltd
mov
sub
push
xchg
dec
filds
or
hlt
cwtl
xor
sbb
int3
mov
cmp
cld
adc
dec
lret
leave
cmp
lds
mov
fldcw
cld
out
inc
ss
pushf
imul
lds
mov
int
arpl
push
cld
mov
jne,pn
mov
or
leave
jbe
gs
mov
xchg
jp
gs
sub
or
rcrb
scas
mov
cmp
push
loop
int
cs
xchg
test
sub
add
pop
pop
and
add
push
inc
popa
aas
push
movsl
pop
mov
xor
sub
mov
mov
inc
inc
mov
test
idivb
dec
jp
mov
daa
lret
mov
movsl
fsubr
cmpsl
mov
lds
adc
mov
inc
pop
movsl
std
ds
xchg
cmp
mov
int
mov
lcall
test
pop
cmp
arpl
mov
pop
es
jg
mov
jbe
fsts
scas
or
ja
mov
mov
push
mov
enter
lods
and
push
popa
cmp
xor
mov
mov
test
aad
das
in
test
add
and
decb
mov
lds
pushf
outsl
jnp
sahf
rol
aam
xchg
xor
push
test
inc
pusha
lods
xchg
xor
add
jp
cmp
xor
xlat
sub
jo
add
ja
push
adc
cmp
lcall
pop
xor
sbb
push
and
pop
lea
dec
sbb
popf
lods
mov
or
shrb
cmpsl
inc
pop
mov
cmpsl
xor
and
in
adc
push
and
fcompl
ss
es
lret
pop
sbb
pop
in
push
in
jmp
jbe
xlat
xor
into
jmp
pop
das
mov
mov
xlat
fnsave
shl
mov
fbstp
out
lret
scas
mov
add
add
xchg
add
in
cwtl
cmp
mov
jno
jne
xor
mov
fcoml
stos
sti
lret
or
xor
test
inc
fisttpl
loopne
shr
bound
test
xchg
push
pop
fdivs
js
ss
es
or
jg
sti
cwtl
xor
aam
test
fnstenv
inc
lods
add
jmp
jno
sub
jle
sub
jecxz
sub
lods
sbb
test
push
mov
loop
into
aas
push
pop
mov
mov
jg
sub
pop
cmp
and
shr
push
in
loop
cltd
cmp
push
ds
dec
jne
mov
jno
push
sbb
cwtl
lods
cmp
jno
dec
cwtl
and
aad
xor
int3
add
pushf
mov
sti
ficoms
dec
out
in
sbb
fcomip
adc
sbb
mov
daa
jmp
es
mov
js
shrl
adcb
icebp
movsl
xor
out
dec
loop
loope
add
inc
and
ljmp
and
fdivs
push
fcomps
sbb
xor
cmp
mov
jb
or
shll
adc
mov
icebp
mov
fstpt
push
xchg
mov
xchg
sub
mov
out
push
sub
or
mov
cmp
mov
cltd
sub
mov
pusha
xor
mov
ss
inc
es
cmp
push
inc
std
xchg
in
and
clc
push
rcrb
jo
cwtl
scas
out
cmp
mov
cmp
cltd
sbb
iret
test
popa
sub
repz
mov
push
scas
xchg
pushf
ds
mov
add
hlt
int3
xchg
enter
mov
into
or
shll
je
fdivrs
jmp
xor
mov
inc
push
cli
nop
and
lods
movmskps
jns
sub
cmp
cmp
push
mov
mov
hlt
jp
aas
js
add
push
popa
stc
fsubl
jae
hlt
mov
jmp
push
and
dec
idiv
nop
inc
jo
int3
divl
jns
adc
cmp
pop
clc
inc
lods
jg
mov
adc
pop
jg
mov
jno
stc
mov
fdivrl
das
push
rcll
aam
push
dec
push
jne
and
or
jle
inc
sub
sbb
mov
push
test
adc
cltd
sub
dec
insl
sub
js
hlt
ficompl
or
jnp
mov
mov
lahf
push
mov
ret
das
cltd
xor
mov
push
test
jmp
ret
insb
pop
jno
rolb
test
imul
subl
jno
push
repnz
xchg
mov
ret
sub
loopne
xor
stos
xchg
push
sbbb
jb
or
loop
icebp
dec
push
mov
ret
repnz
out
loope
mov
xchg
jb
push
add
cmp
jno
push
xchg
pop
shlb
fcom
repnz
cltd
imulb
aam
add
adc
mov
push
or
xchg
dec
pusha
dec
sub
push
dec
xchg
out
test
inc
aad
loope
enter
popl
pop
leave
jno
gs
ss
pop
fnsave
aas
imulb
insb
adc
sub
dec
subb
sbb
push
fnsave
add
rcrl
aam
sub
sub
sahf
decb
divl
xchg
sbb
jl
roll
xor
das
movsl
pop
mov
lock
sti
inc
jnp
movsb
xor
aad
jl
lds
jp
sahf
outsl
push
and
fstpt
iret
mov
leave
mov
or
fidivrs
xchg
fcoms
fcoms
dec
pop
shrl
lods
mov
cmc
rolb
fisttpl
mov
push
push
pop
or
loop
jg
sarl
push
lock
sub
mov
xchg
dec
cmc
jecxz
ret
xchg
sbb
cmp
mov
dec
add
mov
push
ss
fidivs
fwait
test
shll
jbe
sub
mov
sub
mov
inc
out
mov
jns
cmpsb
fadds
les
adcl
fdivrs
cmp
lahf
ror
mov
cmp
hlt
or
push
fsubrs
xor
outsl
imul
jecxz
std
mov
repz
sub
and
mov
fnstsw
xchg
adc
dec
out
and
and
daa
orb
and
cmc
out
stos
test
ret
out
cmp
dec
jl
add
pop
add
dec
jne
in
fld
sbb
rol
xor
or
mov
add
inc
jne
movsl
lds
jb
sbb
cmp
imul
lds
fisttpl
dec
cld
popf
pop
sahf
inc
in
dec
mov
mov
pop
xchg
push
mov
std
cmpsl
sub
pop
lea
cmp
mov
mov
aad
je
add
test
pop
push
xor
mov
aad
push
movsl
notb
jns
inc
fidivl
jb
movsb
mov
int
jns
lock
loop
movsb
adc
lods
mov
jecxz
jo,pt
jno
loop
mov
movsb
or
jnp
jl
jno
mov
test
jl
fidivl
cmp
movsb
clc
mov
mov
sub
xchg
or
xorb
push
nop
movb
into
test
fsts
es
outsl
push
std
lahf
mov
js
dec
and
dec
xor
divb
in
inc
testb
pushf
daa
mov
js
adc
mov
mov
xchg
jae
dec
jmp
sbb
aas
mov
inc
fbld
jl
mov
ret
outsl
sbb
or
inc
xchg
xchg
mov
repz
push
mov
and
mov
cmp
or
adc
mov
mov
sahf
cmp
nop
stos
push
cmp
cmpsb
pop
mov
inc
mov
and
cmp
inc
repz
data16
pop
lods
xchg
popl
jmp
push
sbb
pop
push
mov
in
ds
push
cmp
sub
in
cmp
jb
js
mov
ja
add
outsb
push
int3
faddl
add
cmpsl
push
out
cmpl
mov
in
cmp
call
bound
jne
cmp
or
jne
lock
cmp
in
adcl
ficoml
adc
sub
icebp
scas
icebp
mov
mov
push
xlat
cmpsl
cmp
or
ret
stc
inc
inc
lcall
and
es
mov
out
sarb
adc
mov
sarl
lret
cltd
and
loopne
push
ficomps
mov
mov
pop
xchg
cmp
jg
bound
mov
out
sbbl
mov
in
adc
jle
daa
mov
les
cld
mov
addr16
cmp
jo
jp
cmp
fs
inc
mov
lea
mov
sbb
xchg
push
dec
mov
inc
cmp
imul
mov
in
sti
test
push
test
mov
jno
pop
cltd
or
xchg
or
cmpb
dec
pop
adc
cmp
shrl
jp
jge
and
sub
test
hlt
and
inc
stos
das
cmpl
pop
test
int
out
dec
stos
jns
xlat
stos
in
fdivr
lea
mov
sbb
sbb
cmp
inc
es
jbe
shrl
cwtl
mov
nop
inc
mov
jbe
xor
push
arpl
popl
fwait
es
fbld
ss
cs
mov
sub
push
add
or
xor
scas
call
cmp
ret
push
jmp
push
push
out
andl
jne
mov
pop
dec
cmp
rolb
popa
pop
or
inc
sbbl
cmpsb
dec
in
xchg
sub
cmpsl
and
bound
loope
adc
sub
sbb
nop
aas
add
mov
adc
pop
mov
sub
and
inc
sub
mov
sbb
xchg
shrl
cld
loop
xchg
js
nop
adc
je
bound
fmull
jl
inc
pusha
fidivrs
or
add
data16
mov
push
xor
inc
rol
push
dec
clc
rolb
pop
adc
nop
jge
arpl
outsb
inc
cmpb
jp
and
xor
pop
out
cmp
adc
mov
shlb
jnp
push
mov
subb
sub
lods
or
out
or
mov
arpl
push
out
js
in
int
sbbl
das
ss
sbb
sub
ret
js
xchg
adc
cmpb
cmpsl
push
pop
sahf
dec
movb
pop
cs
in
and
jecxz
pop
sbb
subb
imul
jno
movsb
repz
insb
jmp
mov
jge
and
inc
mov
fs
dec
cmp
nop
stos
aam
int
lods
icebp
repz
dec
mov
mov
mov
sub
jno
adc
outsl
call
add
lahf
cli
loope
out
cmp
stc
and
cmp
sub
sub
or
das
shlb
in
jg
out
jmp
out
xor
sahf
fisttpl
or
cmpsl
pop
stos
jg
dec
fbstp
fnsave
fisubrl
push
lcall
iret
sbb
repnz
dec
inc
movb
popf
ja
pusha
rcrb
lret
lret
mov
inc
insl
sbb
aad
imul
nop
or
testl
jg
pop
call
add
test
xchg
jae
stc
lcall
add
jae
push
or
mov
xchg
sub
jg
adc
jnp
cmpsb
ds
cltd
pop
jo
jno
leave
in
inc
je
xor
jmp
js
add
stos
outsl
push
int3
inc
aad
out
sbb
inc
push
les
lahf
imul
jl
sbb
xchg
mov
notl
aad
pop
dec
cmp
xlat
nop
push
fdivs
fnsave
stos
mov
imulb
loope
sbb
scas
mov
pop
push
dec
or
bound
in
ljmp
or
dec
or
imul
test
push
jo
pushf
pop
lret
pop
sbb
mov
add
xor
or
sub
movsl
cmp
inc
cmp
pop
or
cmp
addr16
fidivl
mov
push
insl
cmp
sbb
mov
lea
les
enter
aaa
ret
xchg
sub
or
xlat
stos
sub
and
outsb
dec
daa
or
arpl
mov
sub
add
lock
sti
ds
leave
int3
mov
sub
mov
ss
push
mov
out
adc
je
ja
pop
test
add
test
push
mov
aas
sahf
dec
mov
pushf
sub
xor
frstor
imul
push
sub
aaa
cmpsl
dec
inc
in
lds
aad
insl
mov
int
insb
xor
pop
leave
pop
bnd
xchg
mov
out
rol
and
mov
test
shr
sahf
push
lret
xor
negb
add
pusha
ss
push
dec
lahf
rcrb
int3
mov
loop
in
int3
and
aas
sbb
mov
sub
sbb
lock
rcrb
out
or
adc
xrelease
inc
xchg
push
mov
cmp
test
aam
loopne
data16
pop
inc
cli
lret
popa
xor
xchg
imul
or
rorl
out
dec
imul
pop
jnp
adc
jle
cmp
ret
rcrl
aas
rolb
pop
push
rcrb
rcll
sub
popa
sbb
mov
out
sub
ss
mov
test
sbb
inc
movsb
sbb
xchg
sub
xchg
jno
push
mov
gs
pop
inc
ljmp
negb
stc
les
test
push
xchg
aaa
leave
mov
sub
jle
add
xor
xor
or
or
push
mov
push
add
xor
enter
mov
stos
mov
cmp
out
pop
or
add
or
and
ljmp
ljmp
xor
test
das
push
loopne
push
sbb
vgf2p8affineinvqb
bound
adc
pop
push
fistps
ss
jae
pop
mov
scas
sbb
jp
add
mov
jl
mov
fcoml
test
jmp
xor
xchg
or
mov
mov
cs
fwait
pop
jmp
dec
pop
mov
jg
cs
push
and
dec
aaa
jne
cmc
andl
nop
es
jne
sbbl
push
out
mov
cmp
and
dec
mov
ss
dec
cmp
out
add
mov
clc
jne
sub
mov
packsswb
xchg
mov
nop
in
dec
and
mov
push
sub
imul
stos
fldt
jns
lret
jmp
call
into
inc
out
mov
mov
sbb
sub
cmc
lcall
shll
pop
mov
mov
lds
inc
push
xor
nop
pop
jnp
jl
xchg
repnz
fcoms
push
test
test
in
push
fs
lret
mov
push
stos
inc
push
sti
mov
sub
inc
or
cld
or
mov
push
jb
dec
mov
loope
xor
lock
xchg
push
push
rorb
adc
movsl
leave
add
andb
je
jp
lcall
adc
sub
lcall
mov
repnz
cwtl
and
movsl
inc
out
push
fisubrl
repz
test
jbe
or
mov
or
pop
push
les
clc
cmc
jno
sub
sub
xchg
pop
and
or
test
fwait
ss
add
imul
push
cwtl
or
aas
dec
sbb
les
outsl
sub
loop
dec
adc
jg
stos
jo
dec
xlat
stos
outsl
sub
test
adc
ss
in
mov
pop
mov
add
jns
fisubrs
ret
sti
adc
aad
push
stos
push
pop
jge
sbb
ror
out
pop
inc
fadds
cltd
std
insl
mov
subl
mov
push
push
jmp
jbe
dec
in
pop
ret
stos
jne
incb
xor
jg
adc
das
xor
inc
bound
nop
cs
sahf
loop
out
in
adc
lret
cwtl
xor
mov
xchg
call
clc
jp
sbb
les
mov
js
nop
iret
lahf
jb
xchg
gs
adc
cmp
movsl
mov
adc
jmp
dec
jne
mov
xor
ss
sub
insb
insl
daa
ror
outsb
jns
dec
pop
aaa
in
jae
cld
movsb
dec
inc
lea
add
and
imul
jo
cld
cli
sbb
pop
mov
mov
pusha
sahf
lods
rorb
mov
cmc
jo
cmp
loope
pop
lcall
ret
insl
outsb
insb
fsubr
les
xor
in
mov
int
mov
ss
lea
stos
mov
cwtl
xor
add
fs
mov
xchg
mov
sahf
sub
add
popa
js
stos
aas
mov
lods
fmul
rolb
jecxz
sbb
psubd
dec
ds
fwait
sti
push
mov
mov
imul
cltd
aas
cmp
rcr
pop
mov
les
cwtl
jmp
or
push
mov
mov
mov
addr16
test
mov
sahf
xor
gs
inc
leave
mov
dec
jbe
subl
or
mov
shrl
jo
xor
clc
clc
jnp
cmpsb
addr16
cmpsb
int
mov
addr16
mov
lock
fwait
aam
mov
push
test
push
lret
xchg
dec
jecxz
adc
mov
pop
aas
mov
addl
adcl
push
insl
push
lcall
adc
les
in
cmpsb
lock
neg
xor
inc
mov
and
mov
mov
xchg
mov
outsb
mov
pop
add
cmc
les
push
mov
ljmp
pop
lcall
sbb
cld
dec
icebp
or
lods
addl
inc
nop
push
in
inc
xor
repz
loope
test
fs
ds
lcall
inc
xor
insb
out
cmp
pop
pop
hlt
into
pop
mov
test
jp
jbe
roll
outsb
lret
mov
leave
lretw
je
push
xchg
xchg
mov
jne
xchg
icebp
push
imul
adc
mov
add
mov
dec
stos
xchg
xchg
sbb
jmp
or
dec
sarb
sti
ret
mul
mov
rcl
jae
imul
ret
out
mov
insl
sbb
jne
push
mov
jo
pop
xchg
stos
jecxz
add
icebp
test
rorl
leave
mov
jecxz
repz
andb
ja
adc
mov
mov
jg
daa
adc
push
aas
sub
test
sbb
cltd
xchg
mov
not
lods
lods
aas
mov
out
pop
insl
pop
dec
rorl
or
sub
cwtl
mov
cmp
xchg
inc
iretw
gs
pop
jmp
hlt
test
cmp
xlat
jne
pop
pop
cmc
gs
test
mov
xor
icebp
push
clc
and
inc
xchg
pop
inc
sub
das
stos
fisttpl
lahf
test
cld
out
xchg
pop
and
mov
mov
ret
xor
loope
mov
jns
jl
subb
xchg
add
les
mov
insb
daa
mov
xchg
cmpsl
pop
sub
mov
xor
shrb
jecxz
repz
addr16
adcb
pop
in
jle
and
jnp
in
mov
aaa
inc
leave
ss
sti
rclb
js
outsb
sub
cmp
xchg
jl
es
inc
inc
movsl
outsl
std
jno
fldl
mov
cltd
cmpsl
int
decl
inc
pop
imul
int
pop
lods
adc
cmpsb
dec
mov
mov
ja
mov
movsb
sbb
js
lret
daa
pop
mov
scas
mov
outsl
sbb
or
or
cmpsl
pop
fxch
scas
out
rcr
pop
cmp
push
outsb
jmp
xlat
repz
or
int
std
cmp
jle
dec
or
mov
mov
out
fdivl
mov
pop
inc
push
xor
data16
pop
xchg
xchg
sbb
mov
fwait
lock
xchg
cltd
mov
int
add
cli
push
xor
xchg
xchg
cltd
xchg
std
scas
cmp
push
or
mov
repz
sub
bound
xlat
ljmp
imul
or
loop
sti
xchg
pop
ficompl
popl
xchg
std
or
imul
lret
shlb
rorb
and
insb
xchg
sub
xor
mov
cmp
lock
push
insl
sub
cld
inc
test
sub
lds
test
out
scas
dec
in
out
adc
sbb
mov
rolb
pop
out
dec
les
xlat
out
mov
jmp
add
movsb
dec
scas
pusha
and
and
push
in
cmp
and
sbb
mov
pusha
mov
mov
pop
xchg
inc
lock
loope
and
dec
inc
inc
dec
mov
ss
in
std
mov
push
scas
ds
xchg
mov
scas
jg
xor
lds
mov
sub
repnz
or
sbb
cmp
js
and
pop
lcall
xor
jno
xor
cmpsb
xor
xlat
rcr
sbb
cs
xor
mov
inc
inc
std
push
push
sub
outsb
and
test
int
jle
and
mov
fnsave
flds
or
push
push
jg
fcmovne
les
mov
movsl
dec
pop
jecxz
mov
dec
call
mov
adc
mov
stos
ret
test
cmpsl
xchg
mov
icebp
or
sub
jge
add
push
jmp
loopne
push
pop
jecxz
fldl2t
icebp
mov
mov
stc
movsb
mov
gs
jl
mov
js
add
adc
stos
or
pop
xor
xchg
data16
sub
pop
ja
jmp
std
lods
sbb
dec
in
cmp
sub
pushf
push
mov
xchg
es
sbb
aad
or
mov
cmpb
cmp
das
mov
jg
fbstp
add
dec
dec
or
movsl
clc
mov
add
mov
mov
ret
bound
add
ret
dec
sti
jb
inc
test
push
lods
fmull
loope
shrl
mov
jge
imul
stos
xchg
jo
cli
adc
mov
int
mov
pop
out
cs
xor
push
repnz
xchg
mov
loop
divl
mov
test
push
or
cli
sar
iret
mov
push
and
scas
cs
in
xor
les
adc
lea
sub
imul
fisttpll
aas
fisttps
cmp
ja
pop
mov
push
cltd
das
rorb
mov
mov
mulb
int3
push
dec
mov
mov
shll
push
ja
jne
xchg
inc
xchg
mov
or
lret
dec
or
cmc
call
xchg
scas
movsb
mov
daa
push
and
inc
jl
lret
push
jo
xor
iret
xor
lods
mov
lahf
ds
sub
cmp
gs
mov
in
lods
ljmp
sbbb
nop
push
je
bound
xchg
ljmp
jl
pop
cmpsb
xchg
sbb
push
pop
ret
fstps
jecxz
lret
inc
addr16
jb
pop
imul
ljmp
es
adc
inc
fucomi
inc
out
je
mov
mov
lret
icebp
mov
inc
mov
insl
jge
adc
mov
ss
data16
inc
sbb
cmp
push
sbb
pop
push
pop
scas
push
je
cs
popa
incb
xchg
std
and
xor
lds
hlt
push
adc
mov
cmp
iret
aaa
mov
and
inc
or
jl
push
js
movsl
mov
fistpl
and
adc
sbb
mov
sub
in
pop
pop
lock
sbb
mov
jnp
inc
sub
or
or
mov
or
adc
inc
add
mov
cmpsl
mov
cmp
push
mov
and
jns
fcompl
mov
rcll
stos
and
fbstp
inc
fs
pop
cmpsl
jecxz
cmp
sub
jge
imul
jle
lods
fsubrs
insb
in
int
lss
pusha
je
cmpsl
ret
ljmp
sub
add
test
and
adc
cmc
mov
inc
stos
mov
pushf
cmp
lcall
adc
mov
movsb
cmp
mov
ret
adc
mov
ret
inc
outsl
jecxz
cmpsb
fcomps
and
iret
push
jecxz
ret
repz
ljmp
into
inc
popf
or
pop
sbb
inc
cmp
fs
ret
sub
popf
test
iret
xor
mov
loopne
mov
or
dec
add
sti
daa
test
xor
sbb
out
pop
mov
push
pusha
clc
xchg
mov
sbb
jp
js
call
call
cs
dec
jecxz
cmp
fnstcw
test
push
popa
xor
outsl
push
test
hlt
fwait
insl
sub
das
rorl
mov
cmp
push
stos
inc
jb
cmpsb
lea
fdivr
roll
cmpsb
add
pop
fiadds
aaa
mov
gs
insb
push
inc
fadd
movb
in
ror
fcoml
pushf
dec
mov
cmpsb
les
out
ja
mov
cmp
inc
gs
lret
xor
add
lcall
adc
movsl
xchg
std
andb
mov
enter
add
aam
xchg
xchg
cmp
icebp
mov
xchg
xchg
xchg
cmp
mov
lahf
or
mov
inc
mov
decl
mov
xor
and
adc
addr16
jne
mov
jne
cmp
scas
inc
lods
aaa
xchg
add
pop
add
mov
adc
jle
cltd
xor
push
xor
mov
lcall
test
push
add
xchg
pcmpgtd
and
scas
lret
cmp
dec
in
lea
xchg
in
imul
dec
stos
sub
mov
gs
int3
cvtsd2ss
xchg
fldl
push
sub
inc
lock
cmp
inc
fildl
mov
insl
lcall
cmp
cmp
jge
ret
sub
push
ret
sahf
xor
xor
cmp
addr16
push
fstpt
dec
shrb
fadds
les
pop
sbb
dec
xor
ds
cmc
adc
popa
xchg
push
add
repz
xlat
add
jle
mov
das
xor
and
ret
cmp
es
add
mov
cmp
jle
orb
jb
jo
sbb
push
add
cmovb
jmp
pop
mov
fisubl
fbstp
xor
add
cmp
test
xchg
sub
loope
jno
std
bound
cmp
clc
push
fiadds
mov
test
mov
mov
lods
push
pop
add
ljmp
or
fimuls
add
and
push
push
fiaddl
cli
push
stos
arpl
gs
or
xchg
mov
mov
add
insl
add
and
popf
jmp
sub
push
pop
fsubl
popf
int3
xor
inc
jmp
hlt
mov
arpl
jecxz
addr16
scas
call
and
push
rolb
in
testb
popa
stos
inc
aam
add
icebp
mov
adc
das
push
call
int
lret
sbb
push
movsl
inc
xchg
int
test
test
clc
xchg
ljmp
or
jns
insb
push
call
sbb
jge
aas
clc
xchg
inc
dec
and
sub
stos
jae
cltd
push
cmp
cs
pop
stos
or
cmp
call
add
jmp
mov
lods
sti
lret
dec
imul
jl
movsl
arpl
sbb
dec
jne
repnz
add
mov
int
pop
push
xchg
lcall
cmp
dec
dec
push
dec
xlat
mov
shrl
cmp
roll
outsl
movsb
call
out
in
pop
aam
xor
push
and
mov
lret
es
cmc
fs
cltd
jbe
inc
call
mov
rcrl
in
mov
pop
dec
icebp
jnp
iret
lcall
fnstsw
iret
push
inc
push
ficoml
imul
clc
fidivl
or
stc
popf
and
sbb
aam
fsubrs
cmpsb
ljmp
dec
add
insb
cli
jnp
mov
je
xchg
addr16
pop
mov
and
int
and
push
mov
pusha
adc
outsb
icebp
fidivl
xchg
incb
mov
test
or
stos
mov
sbb
jecxz
or
adc
flds
es
ss
inc
fdivrs
dec
mov
adc
fs
pmulhuw
add
clc
mov
sbb
mov
fldcw
aaa
adc
call
loope
sbb
imul
sub
push
mov
cmp
hlt
loope
pop
cmp
leave
testb
fistl
push
mov
sub
loopne
dec
dec
xor
pop
xor
sub
ret
roll
in
dec
dec
pop
mov
cmpsb
loope
push
imul
xchg
stc
test
scas
xor
push
ss
fldt
push
jmp
sbb
dec
enter
insl
mov
dec
xchg
lret
cmpb
adc
jo
mov
cwtl
das
inc
in
xlat
sbb
lret
cmp
imul
pop
mov
arpl
imul
cltd
jbe,pn
pusha
mov
xchg
sub
mov
clc
mov
shrl
hlt
pop
cmc
sub
pop
lock
lret
popl
inc
ss
jmp
xchg
jo
jno
mov
out
out
lock
data16
add
pop
sbb
outsb
mov
cmc
mov
push
and
fcmovnb
js
hlt
cld
cmp
sub
dec
hlt
mov
mov
lods
mov
loopne
lret
adc
and
rcll
inc
jae
out
movsb
adc
call
andb
or
mov
lret
cli
ret
hlt
sbb
dec
adc
in
mov
push
ljmp
jno
ljmp
dec
dec
shlb
movl
and
push
mov
mov
popf
and
lock
imul
pop
hlt
std
and
jl
dec
je
mov
adc
lcall
xor
dec
and
pop
push
imul
iret
sbb
mov
mov
push
insb
jns
mov
jg
push
dec
jae
pusha
mov
jnp
mov
pop
jae
inc
jae
dec
mov
jnp
inc
stos
adc
mov
mov
jp
pop
stos
adc
das
mov
jp
sub
jb
cmpsb
mov
jp
inc
stos
sbb
xchg
push
jb
inc
mov
jnp
and
sbb
dec
jno
pop
movsb
aam
sbb
jg
mov
inc
jne
mov
lret
ljmp
pop
repz
jns
mov
lahf
int
mov
in
sbb
jne
push
pop
idivb
imul
mov
ret
clc
mov
push
in
aad
dec
push
testb
push
xor
add
jle
mov
add
dec
stc
jo
sub
rclb
inc
fidivs
mov
push
fiadds
push
pop
mov
adc
repnz
fsubp
jge
push
imul
sbb
pop
scas
pop
lds
testl
jb
and
pop
hlt
push
adcb
sub
mov
es
dec
out
pushf
xor
xor
lock
mov
sbbb
cmp
inc
xlat
and
repnz
xor
jns
data16
sub
lods
inc
jp
sub
cmp
push
ljmp
adc
imul
lds
push
in
ds
dec
out
in
scas
inc
and
inc
fsubl
fnsave
sbbl
mov
fnstenv
bound
and
aaa
into
bound
xchg
icebp
add
mov
call
xchg
icebp
and
mov
insb
iret
mov
js
push
lods
hlt
std
xchg
sub
mov
cltd
xor
push
and
sar
pushf
cs
adc
sub
xor
sbb
icebp
mov
jno
out
mov
jae
call
and
xor
je
add
jp
into
stos
divb
pop
mov
mov
dec
xchg
clc
mov
cmp
outsl
pop
sahf
popf
loop
sub
mov
test
add
js
jecxz
scas
adc
lahf
xor
xchg
mov
sub
cs
or
iret
cmp
xchg
in
and
mov
push
movsl
and
cltd
hlt
xor
sub
scas
inc
sbb
adc
mov
mov
mov
and
jle
xor
lret
mov
push
scas
sub
popf
cmp
mov
mulb
es
and
sbb
jg
es
mov
inc
jecxz
jns
imulb
sbbl
imul
mov
cmpsl
sub
aam
adc
daa
jp
fisubrs
lret
sbbl
cltd
pop
test
push
out
out
xchg
cs
scas
inc
mov
lret
push
insb
rcll
mov
in
adcl
cmpsb
lcall
jle
in
cmpsb
push
fiaddl
addr16
sbb
test
ljmp
adc
cmpsl
mov
push
testb
frstor
aaa
popf
push
pop
repnz
dec
sbb
std
xchg
add
loopne
shl
mov
pop
xchg
sub
inc
xchg
data16
enter
push
push
cmp
test
mov
cltd
test
int3
xlat
adcb
push
mov
test
sahf
xor
lret
dec
sti
push
pop
xchg
in
push
mov
inc
mov
js
pop
out
push
mov
pop
icebp
std
dec
inc
flds
lcall
hlt
push
jle
subb
cmp
ror
push
in
cld
dec
lds
xchg
pop
mov
mov
hlt
dec
loop
jp
and
sarb
add
and
ret
inc
fs
jno
push
in
pusha
xchg
push
movsl
enter
mov
jp
sbb
outsb
add
jno
movsb
cmp
out
leave
jnp
jmp
sbb
test
add
sub
push
mov
sub
movsl
ffreep
pop
or
cs
pop
sbb
adc
xorl
rcrb
cmc
and
sub
movsb
arpl
pop
cltd
movb
mov
dec
loope
or
mov
bound
cwtl
pusha
sub
xchg
mov
dec
out
adc
add
push
xchg
pop
sbbb
lods
and
fimuls
std
adc
pushl
dec
ret
mov
repz
push
push
xor
lock
and
inc
sti
xchg
js
pop
scas
fstpl
pop
imulb
ljmp
jp
lret
bound
mov
int
push
call
pop
fcmovu
je
cmp
xor
nop
movb
scas
adc
sbb
mov
arpl
iret
cmpsb
cwtl
add
cmc
push
mov
xchg
lods
inc
pop
lcall
notl
mov
pop
lcall
mov
gs
adc
jge
pop
xlat
and
out
push
shrl
adc
insl
cmp
dec
std
lcall
rorl
dec
adc
cmp
sub
cmp
lock
cmp
jl
out
cmp
sarb
push
scas
jo
or
int
or
dec
push
xor
fisttps
pop
inc
les
scas
gs
sub
call
imul
cltd
test
sub
mov
je
stos
roll
sarb
sti
cmp
sarb
stc
mov
call
mov
std
cs
test
in
lgdtl
scas
jb
inc
leave
cmp
mov
testb
mov
cltd
pop
cmpl
dec
xchg
push
shll
pop
push
jmp
push
inc
leave
insb
xchg
inc
cmpsl
sbb
push
es
sti
xchg
pop
data16
data16
sub
mov
pusha
xchg
xchg
xchg
aaa
pop
shlb
jl
and
mov
sbb
xchg
adc
xchg
dec
push
mov
inc
test
scas
mov
push
in
in
mov
and
outsb
sub
xor
adc
decb
sub
lea
inc
fstpt
outsb
inc
aad
pop
cmp
pop
jns
test
jle
iret
jbe
shll
and
shlb
dec
xchg
in
jne
repz
mov
and
inc
mov
daa
inc
push
rclb
sahf
xor
cmpsb
mov
and
fsts
cmp
test
out
jmp
sbb
pop
repnz
fmul
push
adc
into
and
add
mov
or
push
in
test
sub
xchg
sub
int
and
xor
add
jge
adc
ljmp
call
pop
pop
rclb
add
jg
aaa
dec
incl
outsl
sbbl
jno
pop
pop
adc
xor
dec
mov
aas
fdivl
mov
fnstenv
cltd
adc
nop
cmc
mov
add
test
mov
scas
int
divb
mov
imul
dec
push
push
xor
dec
shlb
dec
fs
sub
jnp
mov
out
bound
enter
add
mov
mov
fsubrl
lock
inc
scas
adc
arpl
push
mov
sub
jbe
loopne
das
pop
mov
lea
cld
push
pop
inc
in
rol
pop
lahf
mov
inc
ret
test
or
jge
jp
cmp
outsb
fwait
jns
das
ds
sbb
nop
jno
sahf
ss
push
xchg
andb
or
int3
add
xorb
sub
gs
scas
jno
inc
int3
cmp
test
push
jns
mov
push
mov
mov
fisubrs
out
and
int
cmp
adc
cmp
push
mov
xchg
jo
fists
fsubl
pop
cmc
jl
or
ss
mov
into
data16
stos
or
imul
cmpsl
push
mov
hlt
or
mov
in
sub
mov
aas
in
xchg
sub
adc
add
cld
incb
clc
pusha
test
jmp
mov
lea
xor
test
add
icebp
movsl
loope
sub
or
lret
pop
addb
push
jbe
jo
repnz
mov
jmp
loopne
aam
int3
stos
call
aaa
add
lods
mov
out
insl
mov
es
pop
int3
mov
clc
sub
lock
sbb
mov
cli
icebp
sub
and
aad
out
aad
push
in
aad
sbb
mov
hlt
mov
iret
pop
adc
or
pop
mov
mov
mov
repnz
xlat
call
mov
pop
push
out
jbe
mov
sti
push
int
mov
inc
cmpsl
ret
push
xchg
enter
repz
hlt
iret
sbb
or
or
adcb
mov
adc
mov
sahf
xchg
sub
inc
addb
mov
jge
push
iret
mov
mov
pusha
ljmp
loope
test
adc
xchg
loop
lds
sbb
mov
lock
ret
mov
es
in
sbb
xchg
fldcw
sub
hlt
dec
fsubl
push
iret
lods
pop
aam
ret
inc
jg
cltd
xchg
push
mov
cmp
sarl
xchg
pop
mov
sub
sbb
sbb
and
mov
xlat
sub
xchg
jmp
int
pushl
or
pop
iret
lahf
dec
pushl
insl
out
sub
and
lret
inc
imul
jge
mov
mov
fistl
pop
shrb
or
repnz
stos
jle
repz
jns
les
and
push
lret
fiadds
xchg
push
pop
mov
jnp
cli
push
xor
or
push
cli
cmpsl
mov
or
movsb
cmp
fistpl
scas
push
cmpsb
xchg
mov
pop
cmpb
jo
sahf
gs
xor
movlps
ret
ss
mov
push
imul
jle
dec
stos
outsl
pop
js
xor
mov
dec
inc
pop
dec
mov
data16
rcll
add
add
and
xchg
push
jnp
or
ret
dec
add
outsl
xchg
fnsave
nop
and
and
dec
mov
repz
addr16
inc
jl
pop
ds
mov
mov
std
cld
imul
xlat
cmp
popa
and
cmp
jmp
cltd
or
push
push
imul
mov
pop
shrb
jbe
pop
pop
cmp
and
and
cmp
loop
jl
adc
adc
dec
dec
rcrl
add
sub
inc
jb
out
aas
ljmp
je
pop
cmpb
je
jg
cmp
rol
inc
call
fnstcw
pop
lcall
arpl
inc
mov
jg
xchg
pop
adc
imul
push
lea
xchg
repnz
sarb
aam
jno
out
rcrb
fbld
cmpsb
pop
xchg
sbb
dec
jl
mov
cltd
xor
bound
ret
cmp
fadds
jmp
lahf
mov
loopne
cmpsl
shrb
dec
aam
shr
cs
stos
mov
sub
in
and
repnz
out
xchg
jns
in
dec
mov
sti
mov
add
cli
fldl
mov
mulb
sbb
je
clc
xchg
jb
push
ficoms
ds
bound
push
pop
cs
lcall
in
mov
call
lock
imul
mov
mov
inc
mov
xchg
in
push
mov
mov
pop
repnz
loop
fadds
ret
mov
mov
ret
icebp
pop
shrl
sti
test
mov
jmp
or
loop
or
or
pusha
lds
inc
mov
cmp
and
dec
sbbl
sti
xchg
mov
mov
aad
cmc
in
mov
and
push
lods
aas
sarl
add
cmpsl
jo
pop
push
pmaddwd
xchg
inc
mov
jl
jg
push
cmp
jne
push
inc
adc
clc
cmpsl
push
mov
mov
subb
xor
jo
push
cmpsb
testl
jmp
mov
add
aaa
lods
push
out
xchg
stos
dec
mov
repz
adc
iret
cmp
ljmp
mov
mov
in
test
pop
adc
xchg
mov
mov
cli
insl
rcl
pop
outsl
mov
icebp
or
push
enter
out
sbb
in
jg
or
mov
mov
pop
lea
int3
std
sub
fists
dec
jmp
popf
ss
and
out
cmp
jmp
pop
repnz
xor
or
lahf
mov
pxor
and
mov
dec
loop
popf
xchg
pushl
push
or
mov
and
jge
icebp
inc
out
and
gs
sub
cltd
xor
fldpi
and
nop
bnd
icebp
mov
in
mov
push
ucomiss
mov
adc
cmp
push
xor
ret
jle
cmpsl
jb
std
clc
pop
mov
fistps
faddl
dec
out
push
ljmp
and
ljmp
cld
call
lret
xchg
or
and
imul
inc
xlat
cmp
repnz
adc
std
mov
in
test
stos
xchg
mov
cmp
test
jns
out
xor
mov
popf
mov
ss
rorl
dec
les
mov
fcoml
mov
repnz
es
arpl
mov
xor
cwtl
cmp
lahf
sbbb
or
or
push
dec
sbb
xchg
pop
aam
inc
out
jnp,pn
imul
ljmp
je
fwait
xor
cli
xor
arpl
daa
popa
in
inc
frstor
lret
ss
mov
jmp
int
push
xor
add
mov
sti
arpl
sub
js
sbb
xchg
rorl
xor
jge
data16
lods
pop
cli
and
dec
sbb
xchg
popl
in
jae
mov
or
dec
fwait
imul
faddp
inc
test
fadds
xchg
into
push
daa
mov
cmpsl
pusha
or
lea
pop
mov
or
adc
mov
xor
mov
or
add
fisttpl
jge
mov
lahf
xchg
dec
mov
sbb
xor
xor
adc
inc
inc
cwtl
sbb
xor
popfw
pop
sub
jns
sbbl
dec
push
leave
push
movsb
imull
sbb
jmp
mov
js
pop
adc
outsl
in
xor
ljmp
das
loope
ret
mov
leave
shrb
mov
test
cld
push
ljmp
cmp
mov
idivb
mov
pop
cmc
xlat
testl
shll
std
sub
cs
cmc
and
lea
add
mov
icebp
sbb
mov
fists
out
push
rorb
adc
cmp
jle
sub
cmpl
jg
roll
and
into
stos
jne
jl
lock
enter
dec
mov
loop
ss
aad
arpl
mov
mov
lcall
leave
js
fldl
sbb
lret
test
out
mov
in
scas
int
es
mov
add
adc
push
jecxz
movsb
push
inc
cwtl
gs
pop
mov
adc
pop
xchg
mov
nop
jnp
mov
cmpsb
cmp
push
xchg
cmp
sbb
cld
aaa
je
mov
push
ja
mov
aaa
bound
cmpsb
sbb
mov
lds
pop
pop
iret
inc
loopne
enter
add
xchg
push
out
gs
fidivl
push
dec
mov
dec
lods
inc
jl
pop
les
cmovne
adc
xchg
in
hlt
sub
mov
or
or
push
fwait
mov
xchg
loop
pop
or
add
das
test
cli
leave
inc
roll
fidivl
repnz
push
mov
sbb
xor
in
pop
fldenv
iret
or
xor
mov
and
ja
outsl
mov
xchg
out
popa
xchg
lock
subb
enter
push
shll
mov
sub
inc
mov
jo
ss
cmpsb
mul
negl
adc
lods
sbb
fdivs
sub
mov
out
test
sti
stos
jo
sbb
imul
xchg
mov
ret
fbstp
outsl
shlb
data16
fwait
xor
xchg
and
ljmp
addr16
dec
xchg
xor
scas
jmp
push
mov
imul
and
push
mov
and
inc
xchg
jge
mov
cmp
dec
fwait
pop
xlat
shrb
jle
mov
or
lret
xchg
xchg
pop
xor
push
dec
xor
mov
pop
das
jecxz
shll
jmp
into
pop
ret
out
push
test
cmp
sbb
mov
add
addl
ret
imull
std
xor
int3
add
iret
xor
and
xor
sbb
dec
lahf
inc
add
push
in
mov
push
dec
jmp
sbb
xchg
xchg
call
mov
cld
xchg
dec
dec
ja
pusha
pop
popa
cltd
xor
jno
addl
or
or
or
sub
cs
callw
lret
mov
aam
fsubs
add
fcomps
cmp
sub
arpl
mov
lahf
jne
popa
xor
mov
push
add
popf
inc
sbbb
pop
shrl
sbb
fisttpl
add
dec
mov
movsb
xchg
add
in
and
and
add
dec
fisttpl
insl
fwait
lods
lods
lods
pusha
repnz
or
mov
sarl
mov
jb
cmp
push
jg
test
inc
mov
mov
mov
mov
pop
sub
not
add
hlt
out
push
lret
inc
fcoms
enter
xchg
pmuludq
mov
aas
cmc
mov
loopne
jne
or
cmp
xor
clc
leave
inc
iret
sbb
test
popf
jne
aaa
pop
stos
stos
in
ss
lret
addl
mov
lret
shrl
xor
enter
cltd
shll
fstpl
addr16
sahf
pop
pop
loope
jg
inc
xlat
lock
repnz
lds
xchg
xlat
add
mov
xchg
mov
imul
ret
imul
adc
or
sbb
jg
sarb
xchg
pushf
mov
imul
pop
lods
jo
xor
mov
mov
fimuls
rcrb
aam
stos
mov
sbb
imull
jae
pop
aas
sub
mov
les
mov
mov
sbb
enter
insl
mov
cmp
or
sahf
adc
test
push
jns
stos
push
insb
movsb
xchg
sbb
lcall
jmp
out
jmp
xchg
sub
sub
and
fdivrl
mov
mov
add
xchg
inc
cmp
pop
and
stos
jg
sarl
loop
jp
cmp
imul
sub
xchg
sarb
repnz
jecxz
and
fcoms
mov
jno
mov
mov
in
js
pop
pop
or
mov
inc
dec
pop
mov
dec
ja
cmp
jns
movsl
dec
sub
stos
imul
stos
xchg
loope
mov
sbb
mov
sbb
push
popf
cld
cwtl
data16
or
pop
mov
repz
inc
enter
stos
mov
fcoml
test
push
fcmovb
jns
test
rorl
cmp
jp
ja
ss
es
je
push
push
pusha
out
and
pushf
push
dec
inc
xchg
dec
mov
jno
pop
hlt
int
mov
and
aaa
adc
je
bound
movsb
sti
xchg
jge
jns
testl
imul
sbb
aas
ja
add
sub
push
cmc
push
loope
push
jmp
mov
and
sahf
fimull
test
cmp
xchg
nop
daa
shlb
js
shr
and
cwtl
fpatan
sub
pushf
or
repz
scas
add
xchg
and
mov
iret
pop
sbb
jb
pop
sub
jge
insb
inc
ficompl
mov
data16
fmuls
arpl
fsubl
cmpl
inc
xlat
adc
inc
mov
or
ret
ret
fiadds
ret
aam
mov
in
movsb
jg
adc
mov
cld
xor
ret
fmull
ret
jo
popf
fs
inc
ret
cmpsb
jl
mov
pushf
fnsave
in
adc
push
push
and
pushf
inc
xor
xor
popw
adc
cmp
and
mov
cmp
mov
pop
pop
mov
inc
negb
fs
sub
xor
scas
jecxz
cmpsb
in
mov
cmp
adc
jb
push
imull
stc
pop
push
in
mov
hlt
xor
stos
test
pop
sbb
aad
dec
fidivl
push
cmp
bound
inc
sub
cld
jb
dec
loopne
ds
mov
aaa
call
in
mov
out
stos
scas
jle
mov
cmc
or
jl
pushf
les
or
xchg
lock
and
pop
or
mov
repz
cmpsb
cwtl
das
and
pop
movsb
mov
std
dec
shr
xor
cmp
adc
stc
nop
rcrl
mov
call
lret
ljmp
pop
jl
sbb
mov
not
insl
jmp
or
dec
stos
inc
mov
pushl
xor
push
in
xor
call
mov
and
fildl
out
cmp
inc
fisubrl
or
test
pop
iret
jns
dec
iret
js
inc
lahf
cmp
faddl
test
repnz
or
mov
test
pop
je
movsl
xchg
mov
mov
stos
lods
adc
repz
inc
adc
test
jmp
mov
and
sbb
lds
negb
lock
pop
pop
rolb
inc
mov
call
incl
icebp
pushl
mov
mov
arpl
rcrb
pop
out
pusha
stos
sbb
nop
dec
loop
sbb
leave
sbb
in
sbb
jl
or
xchg
mov
sbb
mov
mov
jns
dec
sarl
xlat
outsb
cmp
jp
outsl
cmp
sub
and
sbb
pop
mov
lock
mov
xor
ficoml
push
loope
dec
inc
stos
outsl
daa
or
push
and
and
dec
or
cld
aas
icebp
mov
loopne
loop
xor
out
xchg
test
das
repnz
addb
pop
call
lock
adc
xor
call
inc
dec
mov
dec
pop
pop
mov
push
scas
mov
das
and
jp
imull
sub
jecxz
adc
jmp
sbb
cmp
jbe
addr16
fiadds
leave
jns
in
sti
mov
enter
and
insl
inc
les
ds
push
aaa
faddl
or
mov
inc
add
jp
movsl
bound
adc
inc
inc
mov
inc
icebp
mov
cltd
mov
loope
sbb
cmpl
sti
xchg
outsb
popa
ret
pop
mov
cmc
daa
into
stc
lcall
fstpl
in
loope
add
xor
movsb
xchg
mov
and
popa
test
test
jecxz
popf
mov
ljmp
lods
incb
lock
xchg
jge
ret
and
loope
popl
or
outsb
add
mov
lock
dec
fnstcw
lea
sub
cwtl
sub
or
mov
in
pop
notl
push
add
imull
xlat
in
mov
mov
mov
test
mov
out
out
aaa
lds
lret
fisubrs
mov
roll
popa
mov
ret
call
test
stos
orl
insb
mov
push
jno
dec
ds
lret
lret
bound
or
xor
push
fmuls
js
sti
dec
push
mov
jb
xor
xor
sti
sbb
std
dec
ds
insl
jo
pop
adc
or
fmuls
adc
mov
in
fs
lods
pop
fbld
add
push
xchg
jl
mov
cltd
xchg
rorl
lods
ret
test
pop
into
jle
aam
cld
xchg
mov
pusha
pushf
fldcw
js
push
pop
popl
xor
cltd
fldenv
jae
sarb
movsl
insb
mov
repz
hlt
dec
mov
fmulp
popa
ljmp
fisubrl
out
shrb
add
scas
xor
or
adcl
lea
mov
sbb
xchg
mov
clc
xor
adc
pop
shl
int
pop
shlb
les
ss
mov
fidivrl
mov
dec
or
fwait
mov
cmc
adc
adc
push
add
icebp
pusha
call
and
jns
pop
stos
movsl
fmuls
rclb
out
lods
xorb
sub
pushl
test
mov
in
or
jne
jnp
lahf
jecxz
and
cld
daa
fldt
dec
pop
loopne
push
ret
mov
les
in
outsb
push
mov
rorb
mul
push
mov
mov
enter
mov
xchg
sub
fcoms
or
mov
push
sub
leave
pop
jne
cmpsl
jl
out
enter
into
outsb
add
dec
and
lahf
je
inc
cmpsb
rolb
enter
data16
inc
sbb
jle
test
xchg
insl
add
cmp
mov
rcrl
inc
flds
fbstp
arpl
xchg
mov
xchg
loop
jle
out
sbb
je
insb
add
fimull
dec
les
in
xorl
loop
adcl
xchg
aam
inc
fsts
ss
mull
leave
pusha
cmp
pop
out
nop
fistl
mov
cld
xchg
sub
and
roll
mov
inc
fcmovnb
divl
cmp
clc
mov
xor
scas
cli
xchg
loopne
jne
xor
cltd
std
cs
and
add
mov
inc
fadd
test
sub
arpl
fdivl
inc
fsubrs
add
sub
pop
div
dec
stc
jnp
jle
dec
mov
pop
repz
cmc
sahf
jne
and
cld
xchg
jle
pop
scas
test
lret
ss
xor
push
sub
pop
je
pop
cmpsb
jl
gs
pop
push
jmp
out
mov
fnstenv
std
mov
enter
sbb
nop
mov
mov
and
xor
and
ja
lcall
xchg
imul
mov
clc
clc
jno
mov
or
cmovo
pop
dec
out
xchg
mov
lahf
or
xchg
mov
jbe
hlt
dec
fnsave
js
or
repnz
jnp
fcmovne
loop
jo
enter
dec
push
ljmp
cltd
je
adcl
push
ljmp
jg
scas
jg
mov
stc
and
and
gs
adc
rorl
repnz
cmp
push
in
inc
adc
in
jbe
scas
sahf
es
push
les
add
stos
or
push
xchg
lahf
pop
jmp
xor
sti
pop
adc
mov
mov
repnz
xchg
and
add
ret
mov
aas
push
inc
or
cwtl
ds
adc
sbb
jae
mov
mov
pop
dec
or
inc
or
out
cmpsl
cltd
insl
jmp
in
rolb
and
mov
mov
pop
notl
dec
dec
jbe
adc
imul
std
xor
sbb
xlat
xchg
or
adc
push
js
movsb
inc
fistpl
sub
or
sti
stc
jo
mov
iret
push
and
push
cmp
xchg
insb
mov
jns
jmp
fprem1
shll
pop
lahf
fld
imul
push
negl
mov
xor
aam
xchg
adc
mov
lods
xor
mov
pop
push
mov
cmp
push
in
stos
aad
lods
xchg
inc
or
dec
or
cmpsb
pop
mov
inc
xchg
insl
xor
add
mov
out
fmul
push
jb
rcrb
bound
in
push
mov
mov
int
mov
icebp
je
add
and
push
test
aad
repz
ret
adc
je
sbb
pop
in
or
cld
inc
in
mov
xchg
movsl
and
sbb
nop
repnz
sbb
dec
adc
xor
sbbl
leave
xchg
push
adc
movsl
pop
cmpsl
ds
inc
push
in
aaa
icebp
shrl
fcomps
scas
leave
test
imulb
inc
pop
xchg
and
sti
out
test
fidivs
mov
cmp
push
shl
jle
mov
cmp
fs
push
lret
mov
pop
lcall
lock
loop
jmp
adc
cmp
and
lahf
ss
dec
loope
xor
mov
arpl
out
adcl
cmp
shlb
jl
out
insl
jg
test
xchg
xor
ret
pop
mov
fcmovne
mov
rcrb
repnz
mov
cltd
xor
pop
negb
ds
pusha
inc
adcl
je
and
das
aaa
mov
fucomp
mov
mov
xor
fdivrs
pushf
cmp
inc
adc
mov
lcall
in
mov
push
sarb
stos
inc
push
repz
fsubs
adc
pop
mov
push
cld
call
stc
aas
cmpsb
rcll
pop
dec
adc
mov
int
cmp
adc
roll
dec
loope
add
das
repz
or
inc
push
sti
lea
movsb
sub
frstor
adc
lahf
inc
scas
inc
xor
ficomps
mov
jae
and
mov
push
scas
fwait
inc
xchg
dec
dec
shufps
les
jae
adc
dec
fs
test
push
stc
adc
dec
inc
or
push
xchg
lock
sbb
xlat
jl
dec
fs
add
outsl
hlt
int
sarb
and
xchg
pop
push
inc
or
aam
jo
addl
jno
shll
das
in
jbe
out
push
stc
add
leave
xchg
xchg
push
inc
push
aas
dec
push
fsubrl
ljmp
push
insb
mul
outsb
sarl
repnz
xchg
jo
inc
push
mov
int3
xchg
mov
stos
jmp
out
push
call
adc
ljmp
dec
lss
add
pop
loop
pop
mov
loopne
push
movsl
orb
jmpw
adc
mov
out
js
cli
data16
pop
movsb
or
pop
mov
int
flds
sub
pop
add
movsb
std
pop
pop
bound
das
xchg
push
outsb
cmp
gs
lods
sub
mov
cmc
pop
iret
popa
add
scas
sbb
ja
mov
lret
mov
dec
cmovnp
push
stc
jbe
add
inc
popa
add
cs
out
insl
cmp
pop
mov
pop
add
mov
pop
decl
aam
js
xchg
cmp
jo
lret
mov
imul
in
je
sub
xor
xor
lods
sub
jbe
jnp
ljmp
lret
xor
adc
loop
xor
push
jb
cld
xchg
es
push
add
mov
sarl
scas
cli
pop
or
lcall
je
fwait
add
ds
mov
push
iret
test
cli
and
adcb
popf
ds
push
xor
sbb
aad
push
ret
mov
mov
fidivl
scas
add
or
mov
cmpsb
hlt
subl
xchg
lea
mov
bound
mov
adcl
pop
xor
mov
gs
adc
fidivl
push
insl
sbb
rcrl
les
cmpl
rcll
mov
add
mov
adcl
je
lahf
xchg
add
int
xchg
fistpl
ret
out
jecxz
push
cld
cmp
cltd
popl
inc
movsb
cmpb
mov
popf
cmp
cmpsl
pop
std
aam
les
pop
ret
daa
test
icebp
cmp
mov
mov
negb
mov
rcll
or
mov
sarb
clc
pop
and
das
mov
pop
shl
stos
dec
or
stc
mov
pop
add
xchg
test
jmp
pushl
cmpsl
xor
test
je
jo
and
cmpb
dec
inc
adc
mov
pop
xorl
pop
shlb
add
out
sub
and
xorb
scas
or
pop
arpl
push
outsl
daa
mov
aad
mov
pop
or
mov
das
or
push
jecxz
sarl
add
dec
pop
icebp
mov
and
mov
jp
hlt
pop
cmc
imul
push
pop
call
hlt
aas
fwait
cmp
cs
imul
paddw
mov
loop
xchg
loopne
jp
addr16
dec
or
jl
adc
and
rcr
das
push
mov
sbb
movsb
xor
bnd
push
add
mov
rolb
adc
test
mov
gs
aad
dec
jnp
out
xchg
movsb
xor
roll
mov
roll
push
xor
xchg
push
in
mov
loopne
es
jbe
scas
fwait
dec
mov
mov
mov
scas
popf
inc
hlt
mov
sbb
fwait
lock
xchg
into
mov
ret
inc
mov
ret
lcall
xor
in
mov
xor
enter
pop
mov
cmp
sub
cmpsl
sub
loop
xor
mov
ret
mov
aam
pushf
xchg
fs
test
mov
dec
adc
mov
and
inc
test
inc
or
aaa
pushf
inc
jge
jmp
dec
adc
add
fisttpll
movsl
and
fldl
and
and
sbb
add
std
gs
push
dec
adc
clc
bound
mov
test
call
add
popf
inc
jns
gs
out
dec
adc
mov
movsl
cmp
fiadds
pop
xlat
jnp
dec
sbb
mov
push
cmp
xchg
inc
inc
mov
mov
cmpsl
in
outsl
sub
cmp
rcr
insl
inc
or
push
int
aam
ss
mov
lods
das
jmp
orb
or
mov
inc
or
loopne
add
mov
sub
push
std
pop
je
hlt
pop
cmpsb
bound
cli
xchg
sarl
lock
cmp
lcall
mov
mov
push
fwait
in
cmp
cmp
push
daa
cmpsl
cmpb
fadds
sbb
cwtl
inc
adc
mov
int
xchg
loop
stc
sub
sub
daa
cmpsl
pop
cmp
dec
outsb
loop
mov
mov
sub
imul
loopne
daa
into
pop
stc
jae
jg
inc
push
stc
lahf
jae
aam
dec
or
movaps
jge
adcb
pop
cli
inc
cmpb
inc
sub
in
outsb
mov
xor
mov
std
pop
add
inc
adc
fs
leave
cld
jno
sub
call
pop
xchg
jg
adc
adc
inc
pop
adcb
daa
mov
insl
rcll
cltd
cwtl
cmp
roll
jo
sub
lret
xor
inc
mov
pop
sti
shrl
scas
cwtl
push
xchg
lds
lods
push
mov
mov
push
aaa
mov
mov
pop
cld
cmp
pop
clc
push
and
pop
in
sti
pop
inc
cld
push
add
lcall
xchg
jnp
adc
vmptrst
movsl
push
shrb
mov
push
xor
mov
dec
into
mov
lock
es
ret
pop
clc
mov
std
pop
xchg
lods
lret
mov
cmp
test
inc
jp
scas
lahf
xchg
jns
lock
movsl
adc
inc
and
xor
inc
or
and
jecxz
add
pop
mov
mov
jp
and
jne
and
aas
bound
cmpsb
xchg
shrb
lds
mov
repz
push
push
popa
mov
stos
cmp
and
andb
mov
fdivrl
aas
lods
lea
sub
and
ret
inc
adcl
loop
sbb
sti
xchg
jne
add
rclb
lds
push
jnp
fsubs
xchg
mov
xor
inc
dec
cmpsl
sarl
popf
int
mov
mov
clc
mov
pop
lock
pop
mov
lahf
mov
orl
push
add
fdivr
mov
into
cmp
faddl
lret
inc
push
push
negb
jns
push
adc
mov
fdivl
cmpsb
mov
adc
aas
pop
addr16
or
mov
cmpsl
test
dec
adc
or
jno
and
and
aaa
add
or
jge
inc
pop
mov
lods
sub
nop
fidivrs
pop
add
mov
push
cli
xchg
sub
mov
insb
icebp
sahf
daa
fiaddl
push
stos
les
int
sbb
ret
sbb
outsb
jns
sbb
push
push
lret
loope
ss
jbe
mov
inc
adc
rcll
mov
iret
inc
loopne
sbb
lcall
int
xlat
test
sbb
or
roll
xlat
pop
lret
or
push
lcall
rcrb
inc
lds
pop
mov
aaa
mov
lea
mov
jnp
bswap
shll
insb
adc
mov
lret
xor
or
mov
mov
std
pop
dec
or
cmp
push
pop
mov
jne
adc
pop
add
inc
mov
and
sub
stc
pusha
jmp
scas
xor
fwait
imul
lret
add
aad
repnz
mov
xchg
mov
push
push
sti
jb
ja
gs
add
inc
mov
or
jae
pop
jge
lods
xor
insb
test
pop
or
in
or
aaa
sti
mov
fs
ret
iret
add
lods
testl
fdivl
inc
mov
sub
dec
push
push
xor
sbb
call
cmc
lea
fs
mov
fstpt
fwait
les
push
add
lret
adc
sbb
dec
pop
sbb
jmp
mov
pop
cld
jmp
jg
cmp
js
sarb
insb
lahf
inc
cmovg
lds
mov
ret
cmp
xlat
ret
adc
mov
sub
push
outsb
sbb
lea
mov
scas
outsb
pushf
cmp
push
cmc
data16
nop
inc
push
xor
xchg
cmp
xchg
out
out
jle
cli
mov
sub
cwtl
sbb
jae
js
popf
xor
cltd
and
mov
or
adc
or
icebp
inc
pushf
inc
jno
loop
xchg
je
popa
and
xor
mov
scas
lcall
push
orl
daa
test
pop
add
mov
aaa
xchg
mov
scas
xchg
inc
rcrb
fidivrl
lods
sub
cmpsl
fs
dec
push
sarl
pop
mov
cmpsl
daa
mov
sbb
mov
lds
jl
rorb
icebp
out
mov
rclb
scas
test
sub
mov
outsb
jne
in
addr16
sbb
clc
gs
dec
leave
xchg
mov
mov
dec
or
rclb
rcll
and
mov
movsb
dec
or
cmpsl
pop
mov
dec
repnz
mov
imul
test
add
out
mov
insb
jnp
cmp
lods
xchg
cmp
divb
sbb
mov
pop
push
xchg
scas
sub
sub
leave
pop
stos
sub
pop
jae
dec
push
repnz
jns
cmp
dec
or
pop
sub
cltd
rcrl
mov
movsb
mov
lret
mov
xchg
inc
jo
push
into
outsl
push
iret
bound
inc
push
mov
das
test
scas
jmp
pop
mov
mov
jmp
rcrb
add
subb
out
cmp
adc
daa
scas
stos
or
mov
mov
out
in
test
pop
push
clc
and
mov
lock
out
jae
or
test
fdiv
rcrb
mov
stos
sub
mov
sbb
ret
je
pop
mov
mov
jno
mov
and
pop
and
test
rorb
repz
inc
scas
adc
mov
xchg
call
ret
nop
addr16
sarb
adc
adc
mov
mov
js
jp
mov
xchg
int
jo
jecxz
and
outsl
jmp
pop
bswap
mov
or
and
loopne
ss
inc
push
imulb
ret
jmp
mov
icebp
xchg
aas
inc
gs
inc
push
mov
push
inc
pop
cld
rorl
xchg
aas
xchg
add
popf
cltd
sbb
sub
stc
insb
mov
sahf
mov
cmpsl
ror
xlat
jle
add
stos
sbb
dec
ja
mov
test
pop
mov
mov
in
gs
sbb
imul
add
xchg
jmp
pop
push
cmp
pop
mov
and
insb
in
mov
movsl
out
sub
sbb
cltd
and
jae
cld
ja
mov
ja
push
stc
ljmp
cmpsl
sbb
xchg
ds
dec
repz
xchg
xchg
scas
xor
ret
loopne
faddl
cwtl
push
xchg
cmp
int3
cmp
dec
and
lret
cwtl
fwait
dec
adc
iret
or
push
ss
add
pop
orb
leave
xchg
fstps
mov
xchg
sbb
add
cmp
and
sub
lds
stos
lret
xor
iret
sub
daa
out
enter
sbb
cld
jno
jge
mov
insl
mov
cli
jl
sarb
or
idivb
orb
mov
movsb
inc
adc
inc
adcb
es
xchg
xchg
ret
mov
jns
stos
ljmp
movsb
xlat
subb
mov
loop
mov
imul
insb
pop
lea
aad
jbe
out
jne
push
mov
lcall
orb
or
pushf
cmp
push
dec
rcrb
lahf
fadds
pop
push
or
push
push
dec
adc
in
stos
xor
mov
mov
les
mov
ret
fucomp
lds
repnz
nop
cli
arpl
inc
or
jp
add
pop
push
testl
daa
pop
mov
xor
aad
or
shrb
add
pop
aam
xchg
inc
decb
xchg
cmpsl
in
sub
popa
aad
push
imul
scas
sub
and
rol
mov
dec
adc
inc
aaa
pop
fiadds
jl
pusha
jmp
imul
mov
ja
lods
movsb
fwait
inc
cmpsb
mov
daa
test
std
in
jb
pushf
lea
lcall
cld
out
aam
in
test
movsl
dec
sub
push
mov
jnp
push
add
mov
lds
imul
ds
lds
adc
jb
push
out
stc
xchg
stc
cmp
dec
in
imul
xor
xchg
jge,pt
adc
cltd
mov
sarl
fdiv
pop
lcall
ret
negl
sbb
fiadds
aas
movlps
and
repnz
inc
notl
xchg
nop
aas
aad
and
jb
stc
dec
or
stos
and
mov
mov
inc
pop
in
testl
lock
imul
sti
ret
ja
mov
mov
mov
test
sahf
and
cltd
pop
inc
or
int
xchg
add
ds
adc
ds
mov
shrb
hlt
cwtl
jg
push
dec
shlb
fwait
rorb
mov
shl
mov
into
adc
jne
nop
dec
sbb
movl
mov
mov
aas
push
scas
sub
daa
imul
cmp
jecxz
mov
int
jno
xchg
push
rolb
xorl
sbb
js,pn
mov
mov
cmpsl
sub
mov
or
notb
mov
sar
loop
sbb
cwtl
inc
inc
adc
loopne
add
mov
popa
push
scas
push
mov
jl
xchg
inc
pop
popa
bswap
inc
xchg
aad
sahf
fidivs
mov
push
ljmp
sbb
outsb
les
mov
lods
mov
out
lock
stc
pop
cld
les
sub
cmp
js
data16
inc
pushf
scas
sub
jns
push
mov
pushf
cmp
stos
push
add
add
xor
sub
inc
adc
ror
dec
or
or
mov
or
aam
or
data16
iretw
jp
mov
inc
cmp
shrb
mov
ret
sub
adc
out
cmp
pop
adc
pop
outsl
lea
aas
jge
sub
negb
push
les
cmpsb
adc
and
dec
adc
xchg
cmp
sbb
cmp
xor
cs
and
xor
jns
xchg
lea
push
lret
xchg
daa
mov
scas
inc
sbb
push
ficompl
int3
js
fists
aaa
cwtl
dec
lea
aam
aaa
cwtl
sub
movsl
pushf
inc
test
int3
pop
add
shlb
cwtl
popa
inc
jmp
enter
sbb
aaa
fistpll
mov
add
jle
jg
aaa
fidivrl
xor
sahf
js
mov
pushf
mov
mov
lret
cmc
leave
adc
shlb
adc
mov
xchg
inc
out
mov
shrb
fnsave
adc
insl
mov
orl
enter
xchg
insl
cmc
jp
fadds
shrl
and
cmp
je
cmp
shl
mov
sti
mov
jns
dec
push
shll
imul
dec
adcb
fbstp
mov
push
jmp
or
bound
mov
xchg
cmp
stos
mov
int
mov
xchg
dec
sub
lea
cltd
inc
dec
sub
das
push
imul
and
inc
adc
mov
sub
and
jns
cmp
mov
ja
ss
inc
or
sbb
inc
jne
shll
stos
and
sti
mov
pusha
in
arpl
outsb
add
lcall
movsb
sub
mov
sbb
popa
sub
mov
or
in
pusha
sbb
xor
mov
pusha
lock
mov
fidivrs
outsb
lds
dec
cmc
pop
and
int
ss
jmp
es
mov
mov
adc
mov
mov
and
dec
cvtdq2ps
xchg
cmp
bound
and
jle
notb
icebp
pop
addl
and
in
fbstp
sahf
cmp
jmpw
int3
sti
test
jbe
lret
data16
pop
je
dec
lods
nop
cmp
fsubrs
sub
lret
shr
and
stos
mov
lods
pop
add
loopne
aaa
cld
enter
jmp
cmp
sbb
ja
sbb
jp
sbb
je
enter
xor
mov
sub
jle
hlt
jle
cmpsl
jnp
pop
hlt
mov
sbb
push
out
xlat
rorb
xor
xlat
lcall
sub
insb
notb
or
sbb
rclb
out
or
cltd
sub
pop
sbb
add
push
dec
jecxz
daa
push
in
push
cmp
cwtl
cld
adc
adc
cltd
xor
mov
cmp
sub
add
push
pop
dec
inc
dec
adc
jae
mov
sbb
pop
cmovnp
loopne
sub
mov
mov
fistpll
lds
xchg
lods
stc
add
cld
out
adcb
push
bswap
shll
rcll
loop
dec
or
jbe
jmp
insb
sub
cmp
cs
sub
or
sub
jmp
xchg
cs
cld
inc
fisubrs
ds
inc
push
les
mov
sbb
inc
or
push
outsl
icebp
mov
mov
ret
sbb
or
and
mov
sbb
cli
dec
add
ret
in
mov
ds
pushf
inc
xor
orl
pushf
add
push
mov
jbe
ficoml
int3
std
jmp
push
cld
jmp
push
hlt
in
ret
in
sbb
pop
inc
push
dec
pop
test
inc
fwait
sarb
add
sti
in
mov
mov
test
xor
pop
push
mov
add
push
repnz
fadds
mov
inc
push
push
stos
sub
test
add
dec
shll
aaa
sub
fnstcw
xchg
ret
xchg
and
inc
adc
jbe
in
dec
or
out
outsb
cltd
push
and
fwait
inc
xchg
inc
and
sti
pop
scas
cmp
fldt
mov
movsl
xor
mov
push
loope
or
inc
mov
test
push
shll
cmp
int3
mov
dec
sahf
mov
rclb
shrl
in
jl
repz
ljmp
mov
jg
push
pop
dec
adc
push
aas
mov
ds
sarb
or
fldenv
cwtl
inc
mov
das
scas
in
fisubl
aaa
sti
mulb
and
mov
mov
mov
adcl
push
add
dec
fcomp
push
add
int
push
int3
xchg
popa
hlt
bound
dec
pop
cli
jg
jae
out
in
mov
fbstp
add
xor
test
repnz
and
jle
je
push
imul
or
pop
xor
icebp
gs
insb
test
cltd
cmp
ficompl
mov
inc
fstpt
mov
fdecstp
inc
xlat
daa
cli
push
std
sbb
aaa
pushf
nop
dec
xor
ds
test
shrb
data16
cmp
xor
push
insb
inc
push
lea
sbb
loope
lods
xchg
cmc
out
xchg
mov
aaa
ret
pop
push
dec
and
pop
add
ljmp
arpl
pop
add
pusha
mov
in
outsl
sub
out
clc
cmp
sti
data16
cs
pop
adc
adc
sarl
inc
or
xchg
inc
hlt
pop
adc
jp
cmp
xlat
cs
pop
adc
push
jge
sarb
insb
push
shlb
lret
xchg
jno
shrl
pop
clc
xchg
jae
test
lret
jle
push
add
filds
ds
das
or
sbbb
int
test
imul
jle
ficoms
fwait
xchg
inc
adc
orb
cmp
jns
push
or
cli
rcrb
fs
out
test
and
test
daa
mov
xor
mov
mov
test
js
movsb
cmp
ret
sub
push
xchg
xchg
aaa
mov
stos
daa
jne
aad
xor
inc
or
arpl
jle
outsl
lock
push
adcb
cmp
adcb
add
mov
mov
pop
fisttpl
hlt
mov
inc
pcmpeqd
push
add
stos
jno
jae
loope
and
aaa
mov
std
pop
lods
mov
dec
pop
mov
inc
or
and
push
lds
sbb
jmp
cmp
imul
js
xchg
outsb
out
ficomps
rclb
aam
fucomp
lea
outsl
dec
in
inc
lret
nop
add
sbb
cmp
in
jo
xor
ds
in
fdivs
ret
mov
adc
add
pop
cmp
dec
jnp
into
or
add
adc
cltd
iret
fbstp
stc
pop
xchg
imul
dec
jmp
jp
cwtl
ret
fiadds
cwtl
pmaxsw
adc
rcrb
inc
cmp
push
stos
ja
popa
test
mov
je
dec
cmpsl
xchg
mov
pop
lds
sti
pop
in
jle
jns
sbb
movsb
outsb
push
ret
fiadds
stos
pushf
jecxz
lret
lds
push
aam
push
dec
lea
dec
notl
es
pop
insb
cmp
mov
jne
xchg
gs
inc
adcl
leave
movsb
mov
mov
push
push
je
sarb
push
enter
ljmp
popf
cwtl
jb
sub
fisttps
xchg
dec
rcr
ja
xchg
xchg
add
push
cld
daa
outsb
add
pop
or
add
cs
mov
loop
inc
test
jle
xchg
sub
xorb
dec
shrb
or
cmp
xor
inc
lret
jne
adc
and
ja
cmp
ret
stos
push
adc
aaa
inc
test
leave
dec
pushf
sbb
lcall
xchg
adc
sub
fiadds
inc
jno
cmp
inc
dec
ja
jb
jbe
jmp
cld
adc
dec
and
add
sbb
out
jb
dec
push
ja
sub
mov
pushf
inc
add
xchg
cmp
stc
pop
stc
gs
call
or
add
ret
inc
in
jbe
xchg
jnp
mov
addr16
mov
mov
movsl
sub
movsb
hlt
pop
cmp
mov
loope
add
xchg
repz
test
fldl
shr
xor
movsb
or
mov
adc
in
push
aam
or
pop
add
mov
outsb
lods
mov
cmp
mov
bound
roll
fdivrp
pop
cmp
cmc
pop
pop
sub
sbbb
push
add
push
mov
int3
nop
in
adc
push
into
add
insb
mov
fsubs
push
pop
pop
push
push
jmp
testl
lret
inc
pop
into
sbb
negl
push
sbb
jge
and
dec
test
pushf
ljmp
fistpll
jg
iret
push
call
rcll
pushf
outsl
out
dec
mov
in
insb
cmp
xor
and
mov
cmpsb
fs
aad
and
cmp
sub
sar
jbe
sbb
jmp
add
fwait
aaa
adc
dec
into
mov
scas
sub
jg
aas
and
aas
movsb
aam
xchg
mov
movsb
ret
popl
test
lcall
aad
pop
testl
mov
mov
mov
mov
dec
xchg
xor
mov
outsl
lods
daa
movsl
push
sbb
enter
mov
test
rcrl
adc
inc
ljmp
sub
pop
rol
ss
jae
sub
cltd
lret
sbb
xor
test
push
mov
out
inc
pop
sub
loope
cmp
cmp
dec
sub
aas
test
mov
push
mov
mov
imul
pop
incb
fmull
fildl
cmpsb
xor
enter
and
aad
mov
leave
rcll
or
out
dec
cmc
pusha
movsl
loopne
push
call
cmc
stos
sub
insb
imul
jno
push
sbbb
jne
mov
pushf
or
cmpsl
xor
icebp
data16
mov
inc
adc
hlt
pop
divl
aas
xchg
and
inc
fwait
push
push
mov
mov
cmp
shll
adc
inc
test
ret
mov
addl
sbb
fdivl
lock
push
mov
ss
push
std
mov
lds
mov
lods
and
ja
fwait
aas
bound
sbb
add
sbb
dec
hlt
pop
es
cmp
and
sbb
dec
inc
or
push
fadds
fstps
lds
cmp
or
sub
fdivs
xchg
and
outsb
out
fdivs
pop
add
ret
es
ja
inc
stos
sub
rcll
xlat
adcb
push
add
jns
add
pop
cltd
cmp
add
mov
ljmp
sbb
lods
inc
sti
pop
dec
mov
push
ljmp
cmp
pop
scas
sub
movsl
ds
and
fldl
loopne
mov
inc
fs
jae
js
pop
fs
add
aad
testl
push
pop
clc
jecxz
and
notb
es
out
cmp
lds
xchg
inc
lea
cmp
insb
or
pop
repz
ret
rolb
pop
mov
mov
iret
lds
scas
xor
sbb
test
sti
adc
in
jae
fdivrp
addr16
icebp
pop
jno
les
sti
xchg
mov
cmpsb
lock
aam
and
addl
fwait
dec
inc
push
into
popf
aaa
movsb
dec
sbb
sub
push
inc
lds
fs
sub
or
and
cmp
mov
push
or
mov
movsb
xor
lods
sub
fwait
xchg
aas
lds
adcb
mov
and
movsl
cmp
and
and
pop
sbb
mov
test
popa
jecxz
std
push
or
fistpll
push
mov
sbb
sub
jl
shlb
popf
lret
or
jl
add
add
push
lret
fistpl
cltd
adc
lcall
nop
cmp
arpl
or
movsb
sub
into
daa
test
loop
orb
cmp
iret
xlat
lahf
inc
dec
sbb
mov
xchg
cmp
aad
lret
mov
test
fistpll
fidivs
incl
out
lea
mov
push
inc
outsb
mov
js
push
lahf
ss
scas
xor
and
push
sahf
sbb
dec
mov
arpl
cmp
mov
cmpsb
cs
inc
repz
xchg
aaa
xchg
push
imul
fisttps
int3
faddl
cmpsb
das
xchg
push
stos
sub
leave
sub
sti
jo
dec
mov
mov
or
lret
imul
jle
stc
inc
hlt
mov
pushf
xor
xchg
aaa
adc
dec
roll
push
push
iret
dec
js
adc
xchg
enter
fwait
xor
or
mov
mov
xor
pop
cli
push
lock
mov
mov
leave
mov
test
push
lcall
subl
mov
call
repz
sub
lret
scas
sub
mov
cmp
sbbl
pusha
and
add
aas
sbb
ret
inc
adc
loopne
cli
fwait
xor
mov
lods
lret
push
cwtl
adc
roll
cmp
mov
sbb
outsb
fdivl
js
push
loop
cwtl
cmp
ljmp
xor
xlat
and
jne
jmp
faddl
mov
movsb
shl
xchg
inc
sub
adc
jnp
cmp
insb
jp
cltd
stos
ret
mov
mov
cld
gs
and
mov
jle
adc
push
xchg
aas
es
in
rcrl
scas
jnp
loope
ljmp
pushf
sarb
push
iret
sbb
push
repz
into
xchg
add
dec
adc
push
mov
mov
inc
es
xbegin
sti
popa
adc
and
push
or
sub
inc
push
les
adc
arpl
inc
pop
add
lods
jne
inc
pop
adc
mov
add
mov
ja
dec
ljmp
jnp
aaa
sbb
dec
xor
insl
cmp
das
push
jge
cmc
into
dec
jp
ljmp
sub
sahf
test
lock
mov
push
xor
faddl
xchg
jg
pushf
push
ret
add
jecxz
adc
mov
aaa
push
call
cld
mov
iret
cmpsb
sub
cmp
xor
push
fisubrl
out
je
or
jle
dec
aaa
fwait
lret
out
mov
sub
into
mov
scas
test
jbe
add
pop
xor
std
xchg
outsl
push
out
xchg
add
cmp
adc
and
dec
inc
xlat
jle
jne
mov
ficoml
adc
mov
pusha
inc
lcall
cwtl
mov
test
in
insl
push
sub
mov
jno
sub
stos
xchg
adc
std
in
adc
ss
in
jno
sbb
les
and
cs
pusha
imul
popf
add
xchg
lock
jnp
adc
inc
daa
add
xchg
jns
mov
mov
out
out
ds
or
cmp
xchg
sub
outsl
jnp
mov
ret
hlt
add
imul
push
lock
cmpsl
push
movsl
fdivrs
sub
sub
adc
jl
xor
xchg
popf
push
out
out
xchg
cmp
cmp
and
lods
stos
inc
fsubrp
loopne
sbb
leave
pusha
xor
xchg
insl
push
out
test
add
rcll
stc
and
fs
inc
fdivrs
or
into
fcoms
and
dec
pop
inc
fwait
xor
shlb
xchg
mov
test
xlat
outsb
sbb
or
push
cmp
sub
test
lret
sti
loop
enter
decb
dec
out
outsl
test
xchg
mov
pop
dec
sub
inc
pop
imul
pop
mov
xchg
out
shl
jl
adc
lcall
and
in
aas
cli
push
js
cmp
pop
cmc
dec
pop
xchg
sub
lahf
lods
mov
faddp
lcall
adc
push
inc
push
lock
push
movsl
mov
sub
sub
adc
aas
dec
dec
loope
pusha
xor
xchg
fwait
push
out
in
xchg
aaa
inc
movsb
cmp
lea
xchg
ret
stos
stos
inc
fucom
loopne
sbb
leave
pusha
xor
xchg
insb
push
out
test
add
rcll
clc
and
arpl
fdivrs
jbe
mov
pop
test
xchg
sub
out
jge
and
mov
pop
inc
fwait
xor
addr16
mov
test
jmp
or
push
cmp
mov
sub
test
adc
cli
loope
enter
decb
dec
out
outsb
test
test
mov
mov
and
adc
test
ja
jle
pop
mov
xchg
in
shl
jl
nopl
popa
cmp
xchg
jbe
mov
in
aas
stc
add
pop
cmc
dec
pop
xchg
sub
sahf
stos
mov
fnstsw
shrb
adc
xchg
movsb
push
movsl
aad
cmc
mov
imulb
daa
or
dec
loope
pop
xor
nop
lcall
loop
xchg
ss
movsb
cmp
lea
xchg
ret
stos
stos
inc
fsub
loopne
pop
dec
pusha
xor
xchg
imul
orl
aad
cmp
maskmovq
mull
mov
bound
fdivrs
jbe
mov
pop
test
xchg
sub
out
jge
and
mov
pop
inc
fwait
xor
shlb
xchg
mov
test
call
or
push
cmp
mov
sub
cmpsl
mov
stos
mov
loopne
enter
decb
out
insl
test
test
mov
mov
and
adc
pop
inc
sub
ja
jge
pop
scas
mov
in
add
sbb
lcall
and
jecxz
aas
clc
add
sbb
dec
push
xchg
sub
popf
stos
mov
fdivrl
shrb
adc
xchg
mov
cmc
mov
cmc
sub
es
stos
cmp
pop
xor
cltd
push
out
jmp
sbb
xor
push
lea
xchg
ret
test
loopne
push
std
leave
pusha
das
cmp
xchg
push
out
orb
pushf
aam
cmp
push
mulb
mov
popa
dec
inc
fdivrs
jbe
mov
pop
test
xchg
sub
in
jge
pop
sub
xor
shlb
xchg
mov
test
out
outsb
sbb
or
push
cmp
mov
shll
dec
fbstp
enter
decb
dec
out
insb
test
subl
mov
mov
or
ret
sub
ja
jl
pop
scas
mov
in
add
add
nop
je
mov
loop
aas
testl
pop
cmc
dec
push
xchg
sub
pushf
test
lcall
adc
xchg
mov
cmc
mov
hlt
sub
and
inc
dec
loope
pop
xor
mov
push
out
ljmp
xor
movsb
cmp
lea
nop
ret
test
inc
loopne
adc
aaa
xchg
imul
mov
mov
cmp
or
das
pop
out
pusha
inc
inc
fdivrs
jbe
mov
pop
test
xchg
sub
in
jge
push
sub
xor
shlb
xchg
mov
test
out
outsb
sbb
or
push
cmp
mov
sub
movsl
mov
stos
mov
fidivs
enter
decb
dec
out
imul
mov
mov
and
adc
pop
inc
sub
ja
jnp
pop
lods
mov
in
add
lcall
and
loope
aas
testb
sysenter
pop
pop
cmc
dec
push
xchg
sub
fwait
test
dec
fidivrl
imul
arpl
outsb
xchg
mov
cmc
mov
repz
and
adc
cmp
loope
pop
xor
lea
push
out
jmp
outsl
push
xor
cmp
lea
pop
pop
shll
ja
sti
leave
pusha
sub
dec
out
orb
pushf
rcr
cmp
or
and
pop
inc
inc
fdivs
jbe
mov
pop
test
xchg
sub
daa
mov
pop
ds
xor
shlb
xchg
mov
test
in
outsb
push
and
mov
sub
movsb
mov
stos
mov
fdivl
enter
decl
dec
out
push
sbb
mov
movsb
cmp
rorl
pop
inc
es
js
jns
pop
stos
mov
xchg
jmp
or
mov
pop
add
push
pop
cmp
lea
mov
ffreep
inc
xlat
hlt
add
xor
xchg
test
adc
cmpsb
mov
fdivrs
shrl
push
mov
mov
fsubrs
lahf
xsha256
mov
out
sub
lods
cmp
loop
pop
xor
mov
push
call
sbb
outsl
push
xor
and
pop
pop
shll
js
stc
leave
pusha
sub
call
jle
sbb
pushf
rcr
cmp
or
and
pop
inc
inc
fdivs
ja
mov
pop
test
xchg
sub
jmp
mov
pop
cmp
xor
shrl
mov
xchg
loop
outsb
adc
push
movsl
push
xor
sub
movsb
mov
stos
mov
fidivl
enter
add
dec
out
imul
mov
movsl
cmp
rorl
pop
inc
and
inc
push
gs
xchg
ja
pop
test
lret
cld
or
mov
sbb
cmp
mov
ffreep
inc
xlat
repnz
xor
pop
testb
test
adc
cmpsb
mov
fdivrs
aam
sub
push
ds
repnz
fsubrs
lahf
adc
in
lds
push
adc
jecxz
pop
xor
mov
push
call
sbb
outsl
push
das
cmp
cmp
orb
inc
aad
loop
adc
leave
pusha
sub
add
jl
push
mov
popf
add
rorl
lock
pop
inc
inc
fdivs
js
mov
pop
test
xchg
sub
sbb
mov
pop
cmp
imul
loopne
outsb
adc
xsha256
cmpsb
push
xor
mov
sub
stos
mov
dec
loop
fdivs
enter
add
dec
out
push
pop
pushf
jl
add
mov
mov
add
lds
test
jp
jne
pop
cmpsl
mov
cwtl
call
or
mov
sbb
dec
pop
ds
insl
and
fidivrs
jp
xor
pop
testb
das
test
xchg
movsl
mov
xlat
mov
xor
clc
aam
sub
mov
mov
fsubrs
sahf
adc
jecxz
lds
add
dec
jecxz
push
xor
mov
call
sbb
outsl
push
cmp
and
mov
pop
shlb
jns
test
sub
out
jnp
push
mov
pushf
add
rorl
out
and
pop
inc
inc
fdivs
js
mov
pop
test
xchg
sub
sbb
fwait
xor
shrb
mov
xchg
outsb
adc
xsha256
cmpsb
push
xor
mov
les
ret
dec
loop
xlat
xor
or
push
dec
sub
pop
imul
cmp
add
lds
test
jp
je
pop
cmpsb
mov
cwtl
out
in
stc
or
mov
sbb
dec
pop
ds
insb
and
fnstsw
jp
xor
pop
testb
das
andl
xchg
movsb
mov
mov
xor
not
imul
mov
mov
outsl
popf
adc
loop
lds
add
lods
xor
push
xor
xchg
push
call
sbb
outsl
push
sub
dec
lea
les
mov
loop
adc
leave
pusha
daa
xor
xchg
gs
out
jp
push
mov
fwait
add
rorl
out
and
pop
inc
inc
fdivs
js
scas
xchg
pop
test
xchg
sub
pop
and
dec
push
cmp
imul
outsb
adc
xsha1
cmpsb
dec
xor
mov
sub
stos
mov
dec
loop
xor
pop
adc
dec
out
push
insl
add
mov
mov
decl
lds
stos
inc
push
popa
jecxz
xchg
jae
pop
movsl
mov
cwtl
in
out
clc
push
and
dec
pop
ds
imul
pushf
stos
pop
repz
jp
adc
inc
dec
cwtl
das
andl
dec
aam
pushf
xor
cmc
aam
daa
or
mov
fnstenv
fwait
adc
loope
lds
add
lods
xor
dec
jecxz
push
xor
xchg
push
jmp
push
cli
jo
sub
cmpsb
cmp
jg
les
mov
loop
adc
lret
xor
xchg
arpl
jg
test
mov
lcall
pop
in
and
push
sub
pop
aas
inc
fnstenv
js
lods
xchg
pusha
test
in
adc
push
aaa
pushf
xor
shrb
mov
xchg
fstp
outsl
nopl
cmpsb
dec
xor
lea
sub
stos
mov
dec
loop
aad
leave
push
adc
inc
daa
push
out
data16
cwtl
jns
add
jmp
mov
decb
inc
push
pop
jecxz
xchg
jb
pusha
movsb
mov
cwtl
jecxz
out
testl
popf
dec
push
ds
push
mov
fnstcw
adc
popa
clc
inc
dec
cwtl
das
jg
jg
xchg
mov
popf
xor
repz
and
inc
repnz
fidivl
cltd
adc
loopne
lds
pop
scas
xor
xor
add
cmpsb
push
ljmp
jno
sub
cmpsb
cmp
jle
les
lahf
lods
inc
rcr
loop
push
repz
bound
inc
jmp
mov
cltd
pop
sahf
lret
roll
daa
pop
icebp
pop
ds
fisubrl
js
stos
nop
popa
clc
ror
sub
adc
mov
push
xor
shrl
mov
mov
fcmovnu
jo
sbb
cmpsl
dec
testl
mov
dec
jecxz
shll
lret
imul
and
mov
xchg
ja
push
test
lret
cld
or
pop
cmp
lods
inc
dec
pop
in
jo
popa
mov
ret
call
mov
inc
push
aas
test
mov
xlat
mov
jnp
sub
cltd
xor
adcb
sahf
mov
shlb
aad
and
mov
mov
xchg
adc
fsubrp
das
sbb
sbb
insb
push
ss
lea
mov
loopne
and
divl
sub
ds
nop
daa
jl
lds
scas
inc
iret
jp
icebp
int3
arpl
add
jbe
pop
mov
xchg
or
add
es
push
cmp
fldt
jns
test
lret
cld
loopne
pop
adc
mov
push
xor
imul
repnz
jno
sbb
test
sub
pop
push
fwait
jg
lods
mov
dec
in
shll
add
insb
add
push
jmp
xchg
jne
pop
cmpsl
mov
aas
out
mov
cmp
lods
inc
dec
pop
in
lea
bound
shr
repz
mov
inc
push
inc
xlat
andl
xchg
movsb
pop
cmc
aad
inc
fucomi
idivb
or
cmp
lcall
pushf
mov
ss
insl
and
push
ss
hlt
mov
jae
xchg
adc
fsub
xor
sbb
sbb
imul
orl
and
cmc
jb
daa
xor
daa
jp
pop
mov
ftst
jnp
out
int3
arpl
sub
ljmp
xchg
or
add
es
push
cmp
jbe
adc
leave
cwtl
das
sti
fiadds
dec
dec
xor
insb
mov
ret
repz
xlat
fidivl
pop
adc
pop
imul
lods
scas
mov
xor
add
insl
add
and
push
popa
mov
xchg
jae
pop
movsl
mov
inc
out
mov
cmp
lods
inc
dec
pop
out
mov
sahf
lods
add
fidivrs
and
inc
push
inc
xlat
andb
xchg
mov
inc
fucomi
cmc
jl
daa
or
cmp
xor
sbbl
int
lahf
ss
insl
and
mov
mov
fdivl
xchg
adc
xor
pop
std
sbb
push
ss
mov
mov
mov
adc
jb
xor
daa
jns
pop
mov
scas
inc
int3
fsub
jnp
out
int3
arpl
sub
cltd
pop
inc
ljmp
xchg
or
add
es
push
cmp
jne
adc
enter
fldl
dec
dec
xor
insb
mov
ret
hlt
fidivl
push
adc
pop
push
push
lods
lods
mov
xor
decl
ljmp
jno
movsb
mov
inc
in
testl
out
mov
arpl
mov
and
inc
dec
inc
xlat
andb
mov
inc
fsub
repz
and
inc
lcall
cltd
mov
aaa
loopne
insl
push
add
mov
fnsave
adc
xor
adc
aaa
dec
in
dec
aaa
into
jg
insb
add
fmull
or
inc
xchg
sub
pop
mov
scas
inc
lret
in
or
int
pop
sub
cltd
pop
inc
jmp
jb
and
into
ds
in
mov
push
aaa
inc
fsubrl
jnp
movsl
mov
mov
fildl
dec
dec
cs
ss
insl
insl
lahf
cmpl
jb
adc
stos
inc
daa
stc
nop
pop
xor
xchg
jp
scas
stos
mov
xor
add
dec
pop
mov
jo
or
ret
nop
daa
cmc
add
pusha
xor
push
out
mov
fs
test
jmp
out
sti
and
inc
dec
inc
fdivrs
sub
shlb
adc
pop
gs
cmp
jbe
sbbl
xchg
mov
cmp
ljmp
xor
fidivs
nop
adc
fsub
xor
adc
sbb
dec
cmp
jge
insl
add
sahf
push
in
iret
fimull
or
cs
sub
pop
mov
mov
leave
aam
jl
jmp
gs
ds
xorl
mov
ret
std
jecxz
mov
push
xor
jl
mov
les
sbb
sbb
aaa
pop
imul
popf
jg
push
mov
cmc
mov
rcr
jae
adc
inc
and
xor
xchg
js
scas
test
lret
sti
or
cmp
and
outsb
jae
mov
rcll
xor
inc
inc
push
call
gs
cmpsl
push
popf
fdivrs
and
sub
or
jl
sub
xchg
popf
pusha
test
out
jle
and
pushf
xor
sbb
stos
mov
outsl
sbb
rclb
idiv
inc
out
std
leave
repnz
lret
ja
sub
pop
pop
sbb
sbb
ret
test
push
jne
or
adc
cltd
mov
stc
jl
in
sbb
mov
sbbl
scas
sti
jae
push
test
lcall
rorb
cmp
dec
int3
stos
insl
loopne
jle
dec
adc
shll
add
stc
mov
outsl
cli
or
mov
jbe
mov
es
enter
inc
pop
addr16
adc
les
cmp
or
add
and
shrl
lret
inc
add
adc
jae
add
cmp
jo
cmp
imul
loopne
mov
sub
xor
dec
das
data16
jbe
out
sub
xor
sub
xchg
jp
xor
outsl
xchg
movsl
and
sub
push
cmc
iret
adc
mov
movsl
shlb
int
ja
pop
movsb
push
dec
neg
fcmovne
xor
fwait
neg
cmp
add
add
mov
mov
shll
jmp
icebp
sub
xchg
xlat
loopne
xor
and
pop
imul
ja
rcr
sub
adc
arpl
lock
xlat
loope
mov
jb
iret
daa
mov
ss
mov
andl
mov
and
sbb
inc
jl
and
push
cmp
lea
push
and
mov
mov
clc
jae
and
ret
in
jl
xchg
inc
inc
xchg
dec
mov
imul
loopne
test
push
dec
leave
inc
into
ret
sbb
cmpsl
leave
pop
mov
idivl
das
insl
icebp
dec
arpl
inc
scas
movsl
mov
shlb
ret
xchg
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
and
sub
and
cmp
test
jae
sbb
pop
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
add
and
ljmp
into
ja
fwait
pop
gs
insl
or
inc
lret
call
