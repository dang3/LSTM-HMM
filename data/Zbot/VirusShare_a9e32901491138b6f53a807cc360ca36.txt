push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
push
movl
movl
movl
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
movl
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
push
call
xor
jmp
lea
push
push
push
call
test
jne
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
movl
jmp
mov
add
mov
mov
shr
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
les
inc
add
or
int3
or
rorb
inc
add
or
fmuls
inc
add
or
loopne
inc
add
or
call
or
lock
dec
push
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
or
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
clc
or
fmuls
inc
add
or
add
inc
add
or
les
inc
add
or
enter
rorb
inc
add
inc
add
or
or
inc
add
push
inc
add
pop
inc
add
inc
add
pop
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
pop
inc
add
inc
add
or
cwtl
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
xor
inc
add
or
cmp
inc
add
inc
add
inc
add
or
sbb
inc
add
inc
add
or
enter
les
inc
add
pop
inc
add
push
inc
add
inc
add
push
inc
add
add
push
inc
add
inc
add
inc
add
add
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
pop
inc
add
inc
add
push
inc
add
add
inc
add
add
add
pop
inc
add
pop
inc
add
inc
add
push
inc
add
pop
inc
add
inc
add
or
sub
inc
add
or
xor
inc
add
or
cmp
inc
add
inc
add
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
or
add
inc
add
or
or
inc
add
or
pushf
pop
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
or
add
add
add
jbe
add
loop
nop
xor
and
xor
and
add
daa
or
outsb
sbb
jno
sub
js
push
aaa
mov
and
shll
pop
es
cmp
sub
fisubrl
lea
shrl
cmp
sub
movsl
sub
jo
fldt
cmp
sub
cmp
add
add
ret
sub
cmp
subb
sbb
cmp
aas
sub
cmp
leave
sub
cmp
push
das
push
ds
and
ds
shrl
mov
sbb
and
sub
ds
sub
cmp
aas
push
sub
aas
jbe
sub
aas
add
add
add
xchg
aas
loop
aas
add
addl
push
and
xor
sub
and
xor
and
aas
and
and
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
mov
pop
addb
je
or
arpl
jne
gs
jle
and
jb
bound
out
add
stos
jle
mov
arpl
movb
mov
jne
insb
ret
pop
popa
outsb
mov
adc
add
je
imul
je
jge
je
pop
adc
add
add
add
inc
jg
outsl
dec
bound
je
je
arpl
pop
adc
add
je
dec
cmp
insb
cmp
outsb
add
push
pop
adc
add
inc
add
inc
add
inc
add
adc
push
adc
or
inc
add
adc
mov
jl
inc
ret
lods
pusha
add
lcall
jb
pop
jns
add
add
add
jbe
outsb
jnp
xor
dec
jne
insb
pop
adc
add
jbe
insb
gs
jge
add
insl
jae
add
xor
arpl
add
cmp
arpl
push
add
jp
je
jb
inc
cli
jl
arpl
add
adc
popa
out
inc
imul
jl
add
jb
push
add
add
add
jl
gs
jbe
jo
jge
outsl
mov
jbe
outsb
cmpl
inc
jne
insb
pop
adc
add
jl
gs
pusha
dec
gs
add
pop
adc
pop
mov
add
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
add
add
add
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
fiaddl
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
adc
add
jmp
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
cmp
add
cs
jmp
pop
adc
leave
bound
add
pop
push
add
xchg
or
add
pop
adc
sub
adc
jmp
lea
add
add
add
dec
adc
jmp
pop
adc
call
repnz
add
adc
add
imul
push
adc
add
adc
add
add
add
add
add
adc
add
adc
add
add
add
ja
add
xchg
add
adc
add
add
add
ja
add
inc
adc
add
add
jnp
add
aaa
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
add
pop
cli
add
pop
shrb
add
add
pop
cli
add
pop
cli
adc
pop
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
add
add
add
add
ds
pop
and
add
cli
adc
pop
cli
xor
cli
pushl
add
pop
cli
add
pop
cli
add
pop
fadds
add
sbb
pop
sbb
add
push
add
clc
ljmp
stc
sub
add
jmp
add
test
jb
jne
bound
movsl
cmp
jmp
aaa
pop
adc
cmp
add
add
pop
adc
add
jmp
add
test
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
add
add
inc
adc
add
add
aaa
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
ja
add
add
add
add
adc
add
add
ja
add
inc
adc
add
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
mov
add
dec
das
add
cmp
add
add
add
pop
xor
add
adc
add
loopne
add
ljmp
pop
cmp
sub
add
inc
cmp
js
add
inc
cmp
pop
cmp
adc
cmp
popf
cmp
out
bound
jecxz
pop
adc
cmp
pop
cmp
pop
cmp
xchg
cmp
daa
cmp
xor
pop
adc
bound
inc
cmp
mov
add
bound
xchg
cmp
dec
cmp
fnstcw
pop
adc
cmp
jecxz
pop
adc
add
or
pop
adc
xor
mov
xor
mov
pop
adc
xor
jmp
pop
adc
add
dec
das
bound
add
or
add
or
add
mov
add
js
add
add
add
add
add
dec
or
add
or
add
or
add
das
or
add
jne
add
gs
add
pop
or
add
dec
or
add
jne
add
or
add
or
add
int
add
mov
add
add
add
add
cld
add
loope
add
jmp
add
cmp
add
daa
incl
add
incb
add
incl
add
incl
add
incl
add
incl
add
add
push
incl
add
incl
add
std
add
mov
std
add
or
add
add
add
incb
add
add
add
add
add
std
add
add
sbb
pop
mov
pop
add
sbb
add
sub
add
add
add
push
and
xor
add
jbe
add
push
pop
add
push
pop
add
mov
pop
add
pusha
pop
add
je
add
loop
add
loop
add
ficomps
add
scas
push
add
jp
add
aam
add
movsb
push
add
xchg
push
add
add
add
pop
inc
push
add
inc
push
add
add
add
add
add
ljmp
pop
mov
pop
sub
sub
sub
pop
sub
outsl
sub
push
sub
subl
pop
adc
sub
test
bound
xchg
sub
icebp
sub
fldcw
pop
adc
sub
mov
pop
adc
sub
add
add
pop
adc
sub
xlat
sub
jno
bound
push
sub
test
bound
jno
pop
adc
sub
add
sub
movaps
or
cs
adc
fildl
add
cmp
add
cmp
add
cmp
add
adc
add
adcl
mov
add
add
adcl
in
adcb
mov
cmp
add
cmp
add
adc
add
adcb
cmp
adc
add
push
adc
add
cltd
stc
add
aad
add
mov
std
add
adc
std
add
add
add
add
cld
add
ja
add
icebp
cs
fldt
add
out
add
aaa
adc
add
add
adc
cmpb
add
movsl
sub
mov
add
jmp
add
notl
add
mov
adc
xorb
add
imul
add
daa
add
mov
add
pop
adc
add
add
add
sub
pop
ss
pop
sbb
pop
dec
sub
pop
sub
jo
add
dec
sub
pop
add
pop
or
add
lock
in
sub
pushf
xor
pop
mov
pop
scas
xor
pop
stos
xor
pop
push
xor
pop
je
add
insb
xor
pop
xor
add
ljmp
pop
inc
sub
sbb
add
mov
add
ljmp
add
xor
ljmp
pop
adc
xor
and
pop
adc
bound
pop
xor
xor
ja
pop
adc
bound
ja
pop
adc
xor
bound
popf
xor
bound
mov
xor
pop
adc
xor
pop
adc
bound
out
pop
adc
add
add
add
add
bound
jns
pop
adc
bound
xorl
bound
sbb
pop
adc
bound
add
adc
add
mov
add
jno
add
dec
adc
add
cmp
add
xor
add
sub
add
add
add
add
adc
add
jo
add
push
add
push
add
dec
adc
add
dec
adc
add
adc
add
xor
add
lds
add
pop
testl
add
testl
add
testl
add
testb
add
add
add
testb
xor
clc
add
arpl
add
gs
add
lahf
testb
and
add
stc
sti
add
sar
add
fwait
push
add
mov
add
or
add
jmp
add
daa
and
add
sti
add
sti
cli
add
das
sti
add
lret
cli
add
pop
clc
sbb
adc
add
dec
ss
xchg
xor
pop
ljmp
add
add
add
sub
sub
ljmp
pop
test
add
mov
sub
repnz
mov
add
cwtl
es
mov
add
andb
pop
xchg
add
cmp
add
ljmp
ficomps
add
fimuls
add
add
add
fidivrs
add
fsubrp
add
ficoms
andl
add
in
pop
xchg
gs
bound
xlat
daa
pop
adc
add
lahf
daa
pop
adc
add
cld
add
cmc
add
shll
bound
out
pop
xchg
fiadds
pop
xchg
sub
adc
pop
xchg
ljmp
xchg
in
add
call
sub
in
daa
bound
out
daa
pop
adc
sub
jmp
inc
add
add
add
lahf
bound
jmp
bound
aad
pop
adc
xlat
inc
or
add
inc
or
add
cmp
add
js
add
pop
adc
inc
orl
add
jge
add
pop
adc
xchg
inc
or
add
or
add
add
add
add
or
add
xchg
add
pop
adc
in
dec
mov
sub
inc
jp
outsb
fsubp
inc
aad
add
lret
dec
inc
inc
cmc
jle
lods
push
movb
mov
jle
testb
out
sbb
cmp
fistps
sub
mov
rcrl
adc
or
cs
add
add
popa
cmp
and
push
or
jae
shrb
sub
rclb
mov
push
pop
pop
cmc
jbe
rcll
mov
psrad
mov
push
adc
idiv
loope
mov
jle
daa
push
ret
sbb
dec
mov
lret
ss
sbb
call
test
sub
add
add
jmp
bound
push
outsb
pop
sbb
pop
dec
sub
repz
sbb
pop
sbb
mov
dec
fcomp
pop
or
movsl
bound
xchg
lahf
call
sub
dec
mov
push
fcomps
scas
negl
imul
lar
pop
rcrl
scas
out
call
add
fistl
sbb
popa
ss
cmpsl
jmp
popf
dec
mov
jo
add
pop
cmpsl
jmp
rcrl
push
add
pop
add
test
popl
inc
push
rcrl
lea
add
rcrl
and
dec
push
xor
pop
rcrl
lcall
cs
add
add
add
add
jl
adc
and
cmc
mov
out
cmpsl
sub
cmpsb
aaa
xchg
mov
adc
adc
push
aam
and
mov
rcrb
sahf
mov
push
mov
adc
inc
cld
jmp
adc
rcrb
mov
adc
add
add
xchg
adc
sahf
xlat
mov
push
adc
adc
adc
add
cld
popf
int3
jb
adc
push
addl
rcll
xchg
sar
cmovge
push
pop
adc
rclb
xchg
xor
rcrb
and
xchg
jae
push
cli
repz
insl
xor
std
out
push
aas
push
rclb
fidivrl
rolb
add
add
xchg
std
jmp
jns
xchg
add
xchg
push
xchg
sti
mov
adc
add
jbe
nop
inc
cmp
jno
add
dec
jp,pn
push
sahf
and
outsl
cmp
add
xchg
fcomi
rorb
pop
add
xor
mov
pop
pusha
add
xor
add
jbe,pt
xchg
sub
rorb
lret
add
insb
and
outsl
cwtl
stos
add
aas
stos
adc
xor
les
rcrl
jmp
push
xor
mov
call
mov
pushf
daa
cmp
mov
pop
adc
add
mov
adc
add
icebp
add
add
add
bound
fnstcw
adc
add
stc
add
mov
add
leave
add
adc
add
stc
add
leave
jp
adc
add
or
adc
jp
adc
add
imul
sbb
adc
pop
adc
add
adc
add
add
pop
adc
jmp
adc
dec
add
add
add
push
add
pop
adc
jmp
popa
adc
jmp
and
aad
inc
add
pusha
cs
push
inc
add
add
jmp
pusha
sbb
jmp
gs
call
push
adc
jmp
gs
add
bound
add
push
imul
jmp
pusha
or
jmp
add
add
add
add
add
cmpsb
pop
adc
ja
push
add
sbb
add
mov
inc
sbb
inc
sbb
add
aaa
sbb
sbb
or
jecxz
and
sub
aaa
sbb
sbb
pop
sbb
or
add
sbb
pop
sbb
add
negl
test
sbb
add
add
sbb
add
sbb
sbb
sbb
add
sbb
mov
or
pop
ljmp
pop
mov
or
pop
mov
or
mov
add
pop
mov
or
pop
in
mov
pop
mov
or
pop
mov
add
add
add
pop
mov
or
pop
mov
or
pop
mov
or
mov
add
pop
mov
or
pop
mov
std
add
adc
or
jmp
or
adc
or
jmp
or
adc
or
adc
or
flds
add
add
pop
adc
or
adc
or
adc
add
adc
or
adc
or
adc
add
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
jmp
push
lods
add
pop
xor
jmp
or
jmp
pop
sub
jmp
add
add
gs
call
push
sbb
jmp
gs
add
pop
int
dec
pop
adc
jmp
and
aam
mov
sti
pop
sub
jmp
add
jmp
pop
pop
add
xor
jmp
pop
outsl
add
push
adc
jmp
gs
add
pop
scas
add
cmpsl
clts
add
push
pop
add
add
add
push
sbb
mov
xchg
add
jns
xchg
cmp
ja
rolb
cmpsb
movups
xchg
imul
ja
mov
ja
or
inc
push
mov
inc
push
dec
add
sbb
add
inc
push
push
add
adc
add
sub
pop
push
jne
pop
push
xor
add
prefetch
pop
push
add
push
and
add
negl
add
adc
test
pop
mov
or
pop
call
or
mov
or
pop
int3
add
mov
or
pop
out
pop
pop
mov
or
pop
mov
or
pop
mov
add
pop
mov
or
pop
fisttpll
ret
add
add
add
add
pop
mov
or
pop
mov
add
pop
mov
or
pop
mov
jmp
or
adc
or
adc
add
jmp
or
jmp
add
adc
or
jmp
add
jmp
or
adc
or
add
add
gs
or
adc
or
adc
add
jmp
or
sub
adc
add
jmp
or
jmp
add
jmp
jmp
push
ja
jmp
gs
add
push
push
add
push
mov
fstps
add
gs
add
push
cmpsl
add
pop
xor
jmp
add
add
push
or
jmp
pop
sub
jmp
push
clc
call
gs
add
gs
add
push
push
add
push
movl
jmp
push
and
aad
inc
add
sbb
add
gs
add
push
add
jmp
pop
enter
sbb
negl
and
notl
add
sbb
add
mov
inc
add
movl
add
cmp
xchg
js
ja
cmp
ja
roll
xchg
adc
xchg
push
add
mov
inc
sbb
add
mov
aaa
sbb
aaa
adc
add
inc
sbb
sbb
or
jecxz
adc
sub
pop
sbb
mov
add
add
or
pop
jmp
or
or
mov
or
mov
or
or
pop
call
or
or
mov
push
pop
mov
or
mov
push
pop
mov
or
mov
or
mov
or
or
add
add
add
cld
add
or
mov
or
cmp
jmp
or
or
adc
cld
fs
or
or
jmp
or
or
adc
or
jmp
cld
pop
adc
or
jmp
or
adc
cld
sbb
jmp
or
or
add
add
dec
adc
or
adc
or
jmp
or
or
adc
or
frndint
pop
adc
or
sbb
sub
add
adc
call
push
sti
call
repnz
jmp
push
jmp
call
or
jmp
push
dec
add
fs
fnstenv
add
add
push
arpl
jmp
cmpsb
add
xchg
cs
push
inc
add
push
add
jmp
jb
add
push
xor
jmp
test
jmp
inc
xchg
add
inc
push
add
cmp
add
cmpsl
push
add
aaa
push
add
adc
xor
addb
sbb
add
jo
test
ret
sbb
add
pusha
add
add
add
test
mov
add
movb
xchg
pop
push
add
sbb
xchg
xchg
add
js
ja
cmp
xchg
rolb
xchg
pop
adc
ja
push
add
mov
inc
or
aaa
mov
pop
mov
cld
repnz
call
sti
push
pop
mov
add
add
sti
add
or
pop
mov
sti
xor
mov
or
pop
mov
cld
stos
pop
mov
sti
test
sti
inc
pop
mov
or
pop
mov
sti
sbb
mov
or
mov
sti
cmp
mov
or
pop
mov
sti
sub
stos
cld
mov
add
jmp
sti
rclb
jmp
cli
xor
pop
adc
sti
mov
jmp
sti
sbb
cli
or
adc
sti
sub
jmp
or
jmp
sti
jl
jmp
sti
pop
adc
sti
fcoml
jmp
cli
mov
adc
sti
add
jmp
cli
call
add
add
sbb
adc
sti
xor
jmp
or
jmp
jmp
push
xchg
jmp
inc
mov
jmp
xor
add
push
push
add
and
daa
add
adc
cli
push
add
jmp
cmc
push
add
hlt
into
add
push
adc
jmp
aad
call
lds
add
add
add
add
xchg
add
mov
add
mov
add
push
or
jmp
xchg
push
add
xchg
sahf
add
push
xor
jmp
jne
call
test
sbb
ja
outsb
add
add
mov
add
mov
dec
add
incb
pop
or
add
or
add
adc
sub
add
push
or
add
add
add
cli
or
add
add
or
add
or
add
or
and
or
add
add
mov
or
add
or
add
pop
add
add
pop
mov
or
xlat
or
mov
add
or
pop
int3
or
mov
or
push
or
add
add
add
or
pop
fadds
adc
add
pop
mov
pop
pop
mov
push
pop
ret
pop
ret
add
mov
add
add
pop
movb
pop
scas
add
pop
test
add
add
pop
test
add
add
pop
test
add
add
pop
test
add
add
pop
test
add
pop
adc
add
call
add
jmp
add
add
add
jmp
pop
adc
add
ljmp
adc
add
ljmp
adc
add
in
add
in
pop
adc
add
in
pop
adc
add
in
pop
adc
add
stc
repnz
adc
add
adc
push
gs
filds
pop
adc
add
jmp
add
jmp
add
add
add
pop
adc
add
add
pop
adc
jmp
adc
ljmp
add
pop
adc
in
adc
in
pop
adc
in
adc
out
pop
adc
out
adc
out
pop
adc
out
adc
loope
adc
loope
adc
lock
adc
lock
adc
jecxz
adc
jecxz
adc
repnz
adc
repnz
adc
in
adc
fstpl
add
pop
adc
in
add
add
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
mov
add
xchg
add
xchg
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
sldt
inc
sldt
xor
add
xor
add
inc
sldt
cmp
or
mov
or
lret
adc
add
add
or
mov
or
jmp
or
jmp
or
jnp
or
cmp
or
or
or
jnp
or
mov
adc
add
pop
es
pop
add
pop
out
or
add
pop
xchg
pop
xchg
or
add
pop
mov
or
add
pop
xchg
add
pop
push
add
pop
jbe
or
add
add
pop
testb
pop
push
add
pop
add
pop
scas
add
pop
add
pop
incb
or
add
pop
push
add
pop
mov
or
add
pop
sahf
add
pop
mov
add
pop
out
add
pop
outsb
add
pop
jle
or
add
pop
adc
add
arpl
adc
add
add
scas
add
daa
add
push
adc
add
push
adc
add
incl
push
adc
push
adc
add
mov
add
pop
add
adc
add
adc
add
pop
add
adc
add
adc
add
adc
push
adc
add
adc
add
outsl
add
adc
add
adc
mov
or
das
pop
or
out
add
add
pop
or
pop
pop
or
call
pop
or
test
or
sub
add
bound
add
pop
or
or
add
pop
or
js
or
cwtl
pop
or
sbb
add
pop
or
pop
bound
add
pop
or
loopne
or
pusha
pop
or
xor
add
bound
add
bound
add
add
add
pop
or
jo
or
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
ficoml
or
ljmp
add
or
ljmp
add
or
or
or
mov
or
lcall
add
add
add
inc
adc
add
or
or
bound
or
push
or
or
pop
mov
add
pop
in
add
pop
xchg
add
pop
jge
or
add
pop
lods
add
pop
push
add
pop
mov
add
pop
pop
add
pop
pop
add
or
add
pop
sti
add
pop
sti
add
pop
fildl
or
add
add
pop
fildl
pop
sti
add
pop
sti
add
pop
cmp
or
add
pop
fildl
or
add
pop
mov
or
add
pop
inc
add
pop
inc
add
pop
repz
pop
repz
pop
adc
add
adc
add
ret
adc
adc
push
adc
add
adc
add
adc
push
adc
add
repnz
add
add
adc
adc
push
adc
add
adc
adc
push
adc
add
rolb
adc
adc
push
adc
push
adc
addr16
add
adc
add
out
add
out
adc
adc
push
adc
cs
or
es
or
scas
pop
or
cmpsb
pop
or
into
pop
or
pop
or
dec
add
add
add
add
or
push
pop
or
push
pop
or
dec
pop
or
inc
pop
or
pop
or
negb
pop
pop
or
push
pop
or
sahf
pop
or
xchg
pop
or
ds
or
ss
or
ficomps
add
pop
or
ds
or
ss
or
jle
or
jbe
or
ficomps
add
pop
or
out
or
ficomps
add
add
add
js
or
cmp
or
test
or
mov
adc
add
wbinvd
add
adc
add
wbinvd
add
or
mov
adc
add
wbinvd
add
push
or
clc
wbinvd
add
wbinvd
add
wbinvd
add
push
or
sbb
or
sub
or
mov
or
sub
or
cwtl
push
or
mov
or
add
add
add
push
or
enter
cmp
or
or
add
pop
call
add
pop
dec
add
pop
fadds
pop
pop
sbb
pop
fadds
pop
pop
sbb
pop
mov
pop
pop
lock
pop
loopne
pop
pop
and
pop
loopne
pop
pop
and
pop
lock
pop
mov
pop
pop
movsb
add
pop
insb
add
pop
add
pop
pop
int3
add
pop
aam
pop
add
add
add
add
pop
aam
pop
pop
pushf
add
pop
cmpsl
add
pop
daa
add
pop
add
pop
out
or
add
pop
inc
add
pop
adc
push
adc
add
jmp
add
icebp
add
loope
pop
adc
add
aad
pop
adc
add
std
add
jmp
arpl
sti
add
repz
jecxz
pop
adc
add
xlat
add
add
add
pop
adc
add
incl
pop
adc
add
clc
add
lock
loopne
pop
adc
add
aam
pop
adc
add
cld
add
ljmp
adc
add
loop
pop
adc
out
pop
push
add
pop
push
add
pop
adc
in
push
add
out
sbb
icebp
push
sbb
icebp
push
sbb
loopne
sbb
loopne
sbb
repz
add
add
or
push
sbb
jecxz
sbb
jecxz
sbb
repnz
sbb
repnz
sbb
loop
sbb
loop
sbb
cmc
pop
sbb
or
imul
or
push
sbb
or
popa
sbb
or
in
push
or
add
or
or
adc
or
push
add
add
add
add
push
add
push
push
xor
push
push
adc
push
push
icebp
add
push
add
push
push
adc
push
push
icebp
add
push
icebp
add
push
roll
push
mov
push
push
roll
push
push
mov
push
push
roll
push
xchg
add
push
mov
cmpxchg
jo
add
seto
pshufw
jo
add
pshufw
pshufw
sldt
add
add
adc
popa
iret
adc
pop
cmpsl
adc
push
mov
adc
popa
iret
adc
pop
mov
adc
insl
lods
pop
adc
movsl
sbb
push
iret
push
pop
dec
push
pop
push
adc
inc
adc
jbe
sbb
jbe
sbb
data16
sbb
sbb
push
rcrl
rcrl
adc
sbb
sbb
sbb
add
add
je
sbb
fs
sbb
sbb
sbb
sbb
sbb
add
jne
repnz
repnz
loop
gs
sbb
rcrb
push
or
sbb
add
pop
jp
cmc
pop
jb
in
pop
push
in
bound
aad
push
or
add
pop
jp
cmc
pop
jb
in
pop
add
add
add
in
bound
aad
push
or
add
inc
or
and
hlt
and
in
and
in
arpl
and
add
ds
int3
ds
add
or
cld
jle
sbb
in
jle
sbb
fdivrl
sbb
int3
jle
sbb
in
adc
loope
sbb
jecxz
sbb
cmc
add
add
add
or
push
sbb
ficomps
psubw
adc
insl
add
clc
insb
add
clc
insb
add
fldt
adc
dec
call
fimull
adc
dec
add
std
dec
add
adc
imul
adc
adc
xchg
add
push
push
push
push
push
push
push
push
push
push
push
push
push
and
add
add
add
pop
pop
adc
sbb
pop
or
sbb
invd
sbb
incl
sbb
incl
sbb
invd
sbb
invd
sbb
pop
or
sbb
sbb
into
push
sbb
into
push
sbb
mov
push
sbb
mov
sbb
mov
sbb
pop
pop
sbb
pop
pop
sbb
pop
mov
sbb
fs
sbb
sbb
add
add
push
rcrb
inc
rcrb
inc
nopl
jne
sbb
jne
sbb
gs
sbb
gs
sbb
push
scas
sbb
push
mov
sbb
inc
mov
add
pop
mov
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
pop
enter
les
add
add
add
add
add
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
leave
add
mov
add
adc
pop
adc
add
adc
add
adc
add
jmp
add
call
add
ljmp
adc
add
icebp
add
in
add
flds
pop
adc
add
add
add
pop
adc
add
flds
pop
adc
add
adc
add
adc
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
inc
adc
jmp
dec
test
add
jge
add
pop
adc
push
sub
pop
out
xor
add
add
push
aaa
pop
outsb
into
cmp
test
sub
push
test
jns
mov
loopne
add
pop
or
jle
shlb
imul
sbb
jg
mov
test
jno
insl
aaa
aam
cmp
roll
inc
xor
std
and
mov
inc
add
add
add
sahf
stc
add
cli
push
or
roll
imul
data16
cmp
add
xor
or
movsl
sbb
test
insb
mov
xor
filds
outsl
push
mov
repz
add
xlat
xchg
mov
scas
mov
sbb
mov
add
add
xor
mov
mov
jnp
inc
mov
fimull
or
aaa
outsl
subl
out
lock
inc
fsubrl
fsub
rol
rclb
aad
and
mov
xchg
mov
mov
jbe
mov
or
rcrb
inc
es
clc
cmp
jle
add
add
add
sub
cmp
cmp
and
cmp
xchg
pop
xor
sub
imul
jl
lcall
xor
mov
daa
cld
sbb
sub
stos
mov
push
repz
aam
sub
pop
mov
es
shrb
shrb
add
ret
xchg
fdivrl
ljmp
shrb
ficompl
adc
adc
ss
sbb
lds
push
push
and
daa
mov
or
cmp
fidivs
mov
divl
sub
ret
jne
mov
pop
push
test
addr16
add
add
fsubrl
aaa
lods
fs
arpl
mov
popf
cld
and
add
push
sbb
subl
or
int3
int
in
pop
or
push
jnp
jge
orb
lds
or
or
push
imul
mov
sbb
mov
aam
add
add
add
mov
fsts
jnp
frstor
mov
mov
pop
jb
mov
dec
xor
test
iret
fdivrs
cmc
popa
fisttps
add
mov
mov
out
in
mov
jo
or
negb
or
pop
cmp
ja
pusha
test
mov
imul
scas
andb
add
add
pop
shrl
pop
mov
or
mov
or
orb
or
mov
test
xlat
sbb
rorb
xor
ficoms
lret
xor
nop
insl
pop
adc
cli
push
mov
sub
cli
pop
pop
or
ds
scas
xchg
add
add
add
daa
icebp
push
or
addb
lods
pop
mov
xchg
push
popf
lea
jno
mov
add
enter
fwait
dec
cmp
or
push
cltd
mov
out
arpl
pop
add
xchg
ret
xchg
nop
popa
mov
xor
push
jno
push
mov
dec
sub
add
add
mov
cmp
sub
and
cmp
xor
xor
scas
popf
xchg
mov
inc
mov
cmp
test
push
popf
pop
inc
sub
xor
repz
mov
clc
pop
and
xchg
mov
add
enter
sub
jmp
sub
xor
sub
add
add
add
or
dec
fisttps
pop
pop
cld
adc
add
movsl
sbb
test
xor
sub
xlat
insb
cmp
jge
sub
mov
push
fxch
cs
jge
cli
cld
int3
hlt
jecxz
push
mov
jb
lods
mov
rolb
inc
pop
ret
mov
push
hlt
in
js
push
out
popa
lret
add
add
add
sub
add
jg
add
lods
pop
ss
inc
add
out
inc
or
add
dec
call
lahf
ljmp
test
pmovmskb
repz
push
test
sbb
test
add
inc
and
shrb
scas
jo
dec
sbb
xchg
add
add
cli
push
gs
jmp
dec
sbb
inc
sbb
push
jo
pop
imul
lds
mov
add
outsl
lahf
dec
xchg
jle
push
mov
sub
pop
cmp
xchg
or
push
int
or
in
inc
cmpsl
mov
outsb
fisubs
mov
sub
mov
add
add
add
pop
hlt
enter
mov
call
add
add
push
bound
mov
mov
push
in
aam
mov
mov
repz
stos
cmp
movsb
movsl
cld
and
movsl
xlat
sub
pop
xlat
inc
inc
dec
dec
pop
shrl
add
fldenv
jb
add
add
mov
pushf
gs
movsb
mov
int3
adc
push
test
int
mov
mov
or
jbe
dec
scas
pop
sub
lods
fnsave
cmp
mov
inc
rol
sbb
sti
add
loop
jb
cs
cmc
xor
mov
incl
pop
icebp
inc
dec
lcall
jns
leave
push
pusha
add
add
add
sbb
out
sar
decb
xchg
aad
xor
int3
jge
mov
iret
inc
mov
test
mov
and
push
or
scas
adc
out
pop
or
repz
mov
fwait
shll
repz
imul
push
ja
jo
ss
shll
add
sbb
add
add
cmp
pop
push
out
enter
fisubrs
pop
fistps
inc
in
verr
mov
repnz
and
in
fwait
hlt
sbb
out
sbb
gs
xchg
fldcw
add
enter
leave
mov
xor
iret
pushf
sub
les
imul
jo
push
or
flds
enter
mov
add
pop
call
adc
shrl
aam
lahf
ja
pop
lds
pop
mov
call
nop
pop
dec
lods
jns
sti
enter
frstor
out
in
aaa
push
pop
in
inc
je
mov
mov
lds
andb
mov
adc
out
movsl
mov
add
add
cltd
pop
xchg
mov
push
shrb
out
arpl
inc
movsl
xchg
das
dec
jge
out
xchg
imull
push
jmp
ljmp
inc
push
rclb
mov
jns
push
std
or
add
in
push
cld
jo
das
xlat
xor
sbb
ficoms
push
pop
daa
ret
jnp
add
add
add
cli
mov
xorl
push
pop
cmp
jno
adc
sbb
xchg
dec
insb
mov
out
cmp
mov
pop
add
ficoml
int
jb
test
andb
repnz
ss
xchg
fwait
ror
mov
add
jne
adc
mov
mov
jno
xchg
aas
add
add
add
add
imul
pop
fmull
xchg
push
out
or
or
add
aas
mov
imul
enter
loope
test
out
sub
and
or
or
lret
push
add
add
filds
inc
cmpsb
rorb
jmp
jp
or
insb
sbb
add
add
add
or
popf
push
lds
gs
imul
mov
pop
jle
cs
xchg
and
inc
in
enter
outsl
imul
mov
insl
mov
mov
cmp
jae
xchg
dec
cmp
lret
repz
push
test
dec
jne
jp
or
push
call
mov
xchg
leave
inc
loope
or
cltd
inc
xor
add
add
fsubr
mov
fwait
repnz
inc
daa
pushf
xchg
cwtl
fimull
adc
or
pop
into
shl
sbbb
pop
sahf
add
in
jbe
jo
lahf
dec
dec
out
mov
cld
repz
leave
repnz
xor
jo
jmp
leave
add
scas
and
mov
jnp
sbb
scas
in
xor
in
mov
add
call
sub
and
lahf
cmpsb
and
pusha
and
adc
push
adc
pop
pop
mov
sbb
inc
enter
outsb
adc
add
jl
outsb
xchg
jns
pusha
push
js
cmp
jnp
test
insb
pushw
pop
insl
xchg
mov
outsb
adc
outsb
aad
pop
imul
push
push
pavgb
add
add
add
imul
outsb
and
iret
movsb
ljmp
and
or
repz
jnp
addr16
aam
dec
cmp
cmpsl
pop
inc
dec
jo
orb
mov
mov
stc
dec
jnp
cmp
js
add
mov
inc
fsubs
inc
add
aas
inc
push
mov
inc
andl
inc
popf
jae
inc
mov
add
add
lock
pusha
adc
push
leave
sub
mov
jmp
clc
push
mov
push
jl
xchg
out
mov
pop
push
jns
pop
mov
movsb
pop
adc
pop
xor
sub
outsl
pop
lcall
loope
loopne
pop
mov
dec
xor
fwait
and
mov
out
clc
sbb
ret
lods
idivb
adc
add
add
add
hlt
test
ret
xchg
in
mov
out
stos
test
imul
sbb
jno
adc
fs
gs
push
pop
push
bound
ret
out
cs
inc
or
inc
fxch
sub
lea
cmc
movsb
dec
or
in
mov
add
lods
jp
adc
mov
scas
outsl
mov
test
mov
cmp
mov
jg
leave
mov
in
pop
cmp
fidivl
cmpb
movsl
sub
loop
neg
xchg
lret
push
int3
xor
out
iret
mov
outsl
rcll
mov
add
add
add
lret
gs
lds
rcrb
ret
mov
lea
addl
rclb
insb
xchg
xchg
es
xchg
movsb
fidivl
lahf
scas
dec
adc
mov
popf
int
pop
cwtl
cli
push
sbb
or
sahf
lcall
inc
mov
ret
add
add
add
add
loope
push
fists
mov
or
mov
ja
jle
cmp
sbb
mov
mov
mov
test
adc
mov
loop
test
and
out
fbld
scas
sub
sub
pop
lods
lods
mov
bound
cmpsb
jns
je
xchg
add
add
movsb
mull
sbb
pop
mov
mov
xchg
add
mov
rolb
cmp
btr
cmp
mov
dec
stos
push
mov
mov
sbb
pop
inc
inc
pop
rorl
add
pop
xchg
sub
nop
jno
dec
dec
jns
add
add
add
sub
ficoms
mov
in
mov
add
or
fisubs
add
int
push
imul
jle
hlt
bound
idivl
sbb
xchg
aam
xchg
adc
lods
sbb
les
popf
imul
lret
sbb
into
sbb
and
mov
movsb
jno
mov
loope
into
stos
adc
stos
nop
add
add
add
shll
test
jo
mov
lret
call
sbb
add
ret
xchg
inc
in
inc
lret
xchg
aaa
xchg
data16
dec
cwtl
mov
cmc
je
je
adc
pop
out
jmp
or
mov
jecxz
mov
das
mov
xor
fadd
sarl
jmp
cmp
jb
xor
adc
push
push
aam
add
add
add
std
mov
loope
adc
pushf
add
cmp
add
roll
jnp
test
push
mov
cmpsl
les
fwait
mov
insl
sub
sbb
mov
push
adc
adc
inc
pop
lods
enter
adcb
push
pop
jbe
sub
adc
mov
dec
insb
stc
push
rorl
sbbb
add
add
add
push
ret
dec
push
sbb
cmpsb
dec
shlb
adc
fstps
inc
jns
popa
cld
xlat
imul
repnz
add
ja
push
dec
aad
mov
mov
or
pop
in
cmp
sub
insl
xchg
hlt
cmpsb
es
add
xchg
ljmp
mov
push
clc
or
cli
dec
push
in
pop
icebp
cmpsb
add
add
add
ljmp
mov
daa
in
cmp
out
jno
jle
leave
mov
stc
fistl
inc
arpl
icebp
ds
adc
cmp
shll
jns
addr16
in
inc
loope
pop
mov
jl
dec
enter
gs
aaa
dec
inc
inc
andb
cmp
aas
mov
mov
aad
push
pop
dec
dec
push
pop
add
add
add
lods
mov
mov
push
mov
out
cmp
inc
xchg
lea
xchg
fwait
push
into
and
in
adc
testl
xor
ret
lea
lret
fisubs
cld
pop
push
ljmp
adc
jl
ja
repz
rcrl
test
mov
xor
movd
add
add
cmpsb
push
sub
sub
es
testl
inc
fdivrl
jmp
jbe
cli
test
mov
jl
add
in
cmp
or
mov
pop
stc
mov
add
cwtl
outsb
xor
nop
cs
xor
fs
rol
int3
fildll
push
arpl
sub
add
add
add
add
pop
mov
mov
and
scas
dec
sub
or
cmpb
pusha
aaa
mov
dec
lret
in
mov
cmpsb
mov
out
inc
and
std
sbb
lret
fdivl
in
into
fs
fildl
pushf
mov
cmp
adc
xor
push
mov
jmp
pushf
mov
dec
push
sbbl
add
jb
mov
ret
test
or
cs
jmp
es
call
mov
loopne
xchg
ja
test
cli
scas
aas
add
cmpl
mov
jmp
icebp
adc
aam
push
mov
pusha
cld
ss
aad
shrb
outsb
and
jbe
dec
mov
les
add
add
xor
mov
repz
lret
adc
hlt
sarl
test
pushf
fimull
lahf
dec
mov
call
mov
fisubrl
push
mov
shl
ljmp
pcmpgtb
js
mov
ret
popf
adc
xchg
xchg
je
scas
mov
add
add
and
and
js
add
pop
incl
xor
adc
popa
xor
or
js
les
sub
movsl
mov
pop
xchg
std
cmpb
pop
scas
jmp
out
lock
and
push
or
mov
jns
pop
mov
adc
jp
out
fsubs
add
int3
mov
add
add
inc
jl
mov
loop
mov
dec
fisubl
faddp
sub
push
xor
daa
or
daa
jne
add
push
or
pop
or
jle
sub
pop
lods
sub
sbb
insl
dec
and
and
add
test
push
mov
push
hlt
call
xor
loop
in
mov
add
add
iret
adc
pop
iret
mov
lods
sbb
jg
or
jge
mov
dec
and
mov
lods
movups
sahf
sahf
sub
mov
push
and
inc
add
adc
cmp
stos
push
aas
xor
jg
rorb
push
stos
xor
sub
jbe
insl
movsl
roll
add
add
pop
xor
pop
xchg
mov
add
mov
cmp
sub
loope
pop
add
hlt
mov
popa
aad
add
test
mov
hlt
rcll
fadd
add
fbstp
jl
enter
enter
ret
dec
rorl
add
add
loope
into
xchg
jmp
das
loop
mov
xchg
xlat
pop
xchg
mov
dec
lret
lods
hlt
mov
sub
fldenv
mov
add
jnp
or
or
add
dec
add
cmp
pop
and
ret
sub
or
and
in
lods
mov
add
add
add
mov
cwtl
cmp
scas
test
push
push
cmp
push
pop
xor
sbb
push
mov
ja
loop
push
shl
adc
scas
and
mov
mov
mov
dec
nop
lret
pop
push
and
in
add
xor
xor
lea
cltd
sbb
andl
jns
int
gs
add
add
mov
stc
std
pop
sbbl
out
pop
mov
add
mov
sti
outsl
mov
jno
mov
movsb
push
and
hlt
outsb
push
icebp
mov
dec
mov
pop
pop
scas
mov
add
mov
dec
les
es
lock
fsubl
sub
frstor
or
dec
mov
push
sub
add
add
pop
xlat
cmc
sub
pusha
cmp
fs
fadds
out
daa
inc
ret
jns
cmp
mov
sbbb
subb
popa
cli
xchg
mov
pop
sbb
sub
inc
mov
add
testl
push
int
xor
mov
mov
jl
ret
xor
es
cmp
add
lds
xchg
or
test
aas
adc
push
push
adc
fimuls
xchg
aad
adc
fsubrl
scas
mov
sbb
add
enter
shr
jl
fbld
stc
mov
loop
pop
shlb
mov
adc
pop
and
jbe
das
out
ja
test
pusha
push
push
sub
cmp
ss
add
add
sub
decl
fdivr
loope
sbb
ror
test
push
mov
xchg
sub
aas
enter
xor
ja
cltd
mov
adc
mov
or
jp
cmp
ret
mov
addr16
pushl
dec
repnz
mov
push
xchg
mov
mov
add
add
add
mov
push
xchg
lods
addr16
ss
movsl
sbb
pop
adc
sub
adc
ret
dec
sub
jmp
mov
adc
jmp
out
mov
mov
loopne
push
dec
and
ds
xchg
push
inc
rcrb
stos
aam
cwtl
aad
mov
xchg
push
push
adc
add
add
int
test
data16
dec
push
xor
dec
loop
stos
jge
icebp
xchg
into
or
sub
adc
imul
in
loop
imul
fldenv
sbb
jns
jp
andb
packuswb
pop
push
ds
sbb
cmp
sahf
pop
xor
insl
dec
es
sub
pop
das
and
jno
rcl
pusha
out
add
add
add
xchg
and
mov
scas
stos
and
jae
sub
jb
imul
fldz
loop
or
jns
insl
cmpsb
pop
inc
repz
mov
mov
insl
in
jne
hlt
das
mov
or
mov
inc
mov
xor
add
mov
mov
sti
in
cmp
movsl
jns
int
dec
mov
add
add
add
or
outsb
xor
inc
test
sub
insb
inc
sbb
inc
js
add
mov
sbb
fadd
pop
cmc
les
jge
cmpsl
movsb
xchg
xchg
into
sbb
or
xor
mov
push
mov
lret
pop
push
movsb
cmc
imul
pop
push
xchg
cltd
cwtl
push
adcb
pop
aam
cli
or
mov
add
add
add
mov
or
jae
aaa
mov
mov
std
adc
dec
lret
outsl
add
loop
lds
pop
mov
sahf
mov
cmp
scas
std
lahf
mov
adc
movsl
out
leave
add
iret
and
cmpb
sti
mov
sarb
lds
or
ja
data16
js
add
add
push
or
sbb
jbe
sub
jg
cmp
rcl
or
leave
or
or
mov
sbb
mov
ja
je
mov
inc
data16
ret
enter
or
pop
les
pop
xchg
mov
sbb
es
inc
or
dec
push
ret
mov
inc
add
add
add
push
xchg
adc
nop
aam
fistpll
dec
add
push
dec
jmp
in
adc
adc
imul
in
or
pop
push
aaa
sub
fldl
filds
bound
loopne
inc
push
push
and
sbb
xchg
pop
mov
aad
arpl
test
add
add
add
push
mov
cli
in
mov
js
outsl
enter
dec
enter
cltd
adc
sbb
cmc
and
jo
movsb
fabs
mov
es
push
scas
mov
jmp
xchg
std
jnp
xlat
push
fsubp
pop
std
fcoml
and
xor
xor
add
add
clc
pop
jbe
scas
push
loope
mov
shl
int
xorb
sub
dec
jne
out
into
mov
test
leave
clc
and
xor
outsl
enter
mov
imul
cmpl
test
cwtl
inc
push
inc
test
cli
sahf
sbb
lret
fucomip
lret
les
out
test
cli
cmpsb
jecxz
lock
add
add
add
int
add
cmp
test
es
sbb
dec
imul
mov
adc
mov
jno
mov
arpl
scas
mov
repz
ret
cmp
mov
divb
imull
push
xor
lret
fisubl
jp
inc
dec
ret
mov
in
jl
inc
adc
add
mov
xchg
mov
scas
test
mov
aas
mov
bound
jbe
jge
cmp
mov
mov
stos
mov
xchg
sti
and
test
inc
ss
inc
cmp
jmp
ret
ret
enter
adc
add
add
call
jg
out
inc
clc
cli
stc
push
out
add
add
add
in
jo
div
cs
add
push
mov
fisttpll
loope
cmpl
mov
push
jecxz
and
cmp
aas
mov
fsubr
dec
inc
mov
push
sub
pop
or
sbbb
je
cmc
or
out
cwtl
fsubrs
nop
cld
sbb
adc
xlat
inc
and
add
add
add
insl
dec
rorl
xlat
mov
mov
mov
pop
fmull
or
loope
add
out
jl
andb
add
out
mov
mov
add
and
in
and
mov
and
leave
fs
dec
dec
push
in
es
mov
and
add
add
data16
adc
insb
fstpl
pop
mov
pop
dec
or
and
hlt
sbb
jne
sbb
mov
rolb
testl
cltd
adc
and
sub
out
lock
mov
sbb
jl
push
aaa
cmp
push
and
bound
xor
int
add
add
add
add
dec
cs
add
int3
stc
sbb
nop
inc
arpl
mov
push
aam
pop
push
xchg
cmp
push
jg
dec
sbb
orb
popl
pop
mov
adc
mov
lret
jle
lock
sub
cmpsb
cmp
dec
and
insb
mov
das
rolb
add
add
cwtl
es
jno
sub
sub
cmpb
sub
or
sub
loop
sbb
rcrl
sbb
dec
or
mov
leave
idivl
mov
mov
lods
push
nop
sbb
fld
les
in
mov
and
lods
pop
and
or
add
add
adc
dec
scas
fxch
xchg
mov
imul
in
xor
fs
add
iret
mov
xchg
push
mov
xchg
jb
nop
leave
mov
xorb
mov
jge
pop
ja
in
outsb
orl
sub
repnz
push
orb
inc
mov
dec
cmp
jg
add
add
add
xor
adc
cmpsl
daa
mov
pop
mov
jle
pop
pusha
jg
ss
dec
mov
cmp
loopne
mov
andb
ret
inc
dec
in
sbb
jmp
pushf
fdivs
cmpsl
xor
adc
jo
adc
sub
adc
ljmp
add
add
add
data16
dec
jne
push
int3
je
cmp
inc
roll
dec
cmp
lahf
aas
mov
jns,pt
icebp
xor
pop
je
hlt
insb
inc
pop
sub
shll
mov
push
fcoms
inc
adc
sub
test
push
ljmp
mov
lods
test
lds
add
add
add
xchg
sti
add
pushl
movsb
jbe
lret
std
mov
popa
ljmp
mov
sbbl
icebp
pop
dec
fsubr
dec
and
out
fs
in
or
clc
call
insl
xchg
adc
arpl
add
insl
sbb
addr16
dec
add
data16
mov
and
cltd
inc
ljmp
xchg
outsb
add
add
add
cmc
lea
movb
mov
sbb
clc
or
cmpl
dec
dec
cmp
push
mov
cmp
int
xor
ret
clc
scas
test
fwait
fwait
push
add
sub
int3
pusha
repz
mov
stc
sbbb
sar
jo
addr16
jo
lea
gs
mov
add
add
add
adcl
and
add
clc
fs
bound
shr
mov
pusha
xor
iret
fldt
mov
cmp
loopne
inc
mov
fs
pop
cwtl
add
add
mov
mov
and
gs
and
jae
nop
adc
out
push
enter
lods
faddl
add
add
or
inc
sbb
add
add
add
adc
orb
daa
and
fistpl
lods
mov
daa
scas
ds
sub
mov
lcall
adc
pop
or
dec
out
loop
clc
xchg
xchg
fwait
xchg
fisubrl
dec
pop
xor
sub
int
jbe
xchg
xlat
or
add
inc
mov
mov
dec
aaa
xor
aad
push
dec
cmp
inc
out
xchg
pop
sub
jg
insw
mov
mov
cwtl
sbb
sbb
jg
bnd
ja
ret
push
lret
repz
pop
jnp
stos
aas
push
test
mov
into
add
dec
test
xchg
push
jg
inc
pusha
add
add
add
movsb
jo
push
and
test
or
fbld
test
jg
add
pop
mov
adc
cld
push
push
ja
mov
out
icebp
arpl
adc
mov
dec
or
mov
sahf
cmp
mov
pop
push
or
out
in
rcll
jp
pusha
gs
add
add
mov
push
into
notb
imul
in
jnp
and
rol
dec
xchg
xchg
cltd
jl
cs
sbb
es
adc
je
test
iret
orb
fisubs
or
cmp
adc
decb
add
xlat
sbb
dec
and
mov
xor
jne
and
xlat
add
add
add
jl
in
imull
xor
enter
xorb
scas
fisubl
cmpsb
cmp
out
scas
out
xor
aad
push
xor
rorl
mov
rcrb
aam
lea
imul
pop
repz
cmp
sbb
in
push
or
insl
add
in
test
add
add
add
push
sub
pusha
in
dec
jne
jbe
lea
mov
sbb
inc
pop
lods
cs
in
add
sbb
sbbl
cmp
jns
lea
repnz
add
pop
outsl
rorb
lds
mov
mov
inc
fld
stos
and
jo
push
ret
clc
popa
add
add
add
lods
cmpsb
mov
pop
aad
outsb
mov
or
aad
sub
sub
test
inc
loope
out
fldenv
ljmp
adc
xor
imul
dec
cmpsb
dec
scas
loopne
lock
icebp
jl
sbb
divl
int
pop
cmp
cmp
xchg
jnp
add
add
add
cmp
mov
dec
sahf
mov
pop
shlb
cwtl
enter
in
scas
stos
and
and
iret
testb
fldcw
loop
xor
clc
lea
rcll
fs
loop
xlat
repz
lahf
insb
xchg
fwait
mov
add
pop
xor
nop
mov
xor
pop
pop
sti
push
sub
icebp
popf
and
sbb
push
fimull
pusha
jne
lods
testl
add
mov
call
add
lds
in
std
pop
or
ret
aas
jmp
lds
sub
mov
dec
lock
add
add
outsl
xchg
mov
jp
mov
push
stos
mov
dec
inc
test
ret
cwtl
mov
mov
jp
add
xchg
das
pop
psllw
pop
or
add
pop
sbb
loopne
sbb
repnz
push
add
pop
add
cli
pop
add
repnz
or
add
add
add
jae
les
jecxz
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
pop
add
or
add
xor
pop
cmp
add
add
add
add
pop
jns
sbbl
incl
pusha
jns
add
adc
data16
add
js
add
add
pop
dec
add
pop
dec
add
pop
dec
add
pop
imul
pop
pop
add
add
pop
inc
add
pop
jo
sbb
add
pop
inc
add
pop
adc
pop
add
pop
add
add
add
add
jmp
arpl
loope
jmp
fnsave
adc
push
lock
repz
in
or
or
sub
fistl
div
inc
and
fildl
int
cmp
add
jmp
rcrb
adc
sbb
imul
fcoml
mov
add
sbb
shrb
add
add
pop
sbb
sub
sub
add
cltd
jmp
and
imul
stc
nop
jmp
sbb
out
xchg
cmc
outsl
jbe
cmc
pop
icebp
pop
adc
jmp
pop
adc
pop
sar
pop
mov
call
mov
call
add
lcall
add
pushl
hlt
sar
cs
sar
test
sar
outsl
pop
sar
push
hlt
sar
pop
add
add
add
sar
add
cli
pop
repz
pop
cmc
lcall
pop
pop
add
in
mov
pop
adc
cmpsb
loopne
mov
rcr
pop
pushl
pop
adc
imul
clc
jno
push
and
inc
jno
adc
call
pusha
xor
jb
pop
js
xchg
add
push
or
je
add
add
add
add
inc
adc
add
push
add
inc
add
inc
add
or
outsl
add
outsl
add
adc
xorps
push
adc
sbb
outsl
add
or
pop
add
jne
in
jb
fimull
outsb
add
add
lea
jb
out
imul
add
add
add
pop
call
add
add
cs
pop
movl
and
pop
or
pop
and
pop
add
pop
or
add
pop
or
pop
pop
add
js
add
add
pop
cmpl
addr16
jecxz
sub
daa
and
out
sbb
pop
mov
pop
cmp
add
add
adc
jp
cmp
xchg
jbe
sbb
mov
xchg
fs
sbb
add
mov
sbb
pop
push
xor
jg
mov
cmp
loop
ret
add
mov
and
imul
das
push
xchg
mov
dec
ljmp
add
or
and
sbb
add
nop
mov
add
add
pop
add
call
lock
push
fbstp
test
mov
stos
je
lods
pop
mov
or
push
sbb
lcall
sti
cltd
shl
xor
je
sbb
stc
shrb
imul
outsb
push
test
xchg
mov
dec
int
add
add
add
ljmp
das
fisubrl
xchg
out
jno
push
cmp
jge
cli
mov
mov
add
push
ss
fld
inc
xlat
add
jbe
adc
add
add
aaa
push
add
xchg
adc
add
add
adc
add
adc
add
add
mov
adc
add
push
add
bound
add
add
push
add
push
adc
add
pop
add
bound
add
out
add
and
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xchg
add
pop
sti
mov
add
mov
add
mov
add
mov
add
add
add
pop
insb
mov
add
mov
add
movl
inc
movb
add
pop
ds
inc
pop
faddl
add
leave
inc
pop
fildl
add
mov
add
mov
add
mov
add
ret
pop
add
pop
or
inc
pop
adc
lret
nop
add
arpl
add
add
add
adc
push
adc
pop
adc
push
adc
pop
adc
push
adc
adc
mov
pop
adc
mov
pop
adc
add
adc
mov
pop
adc
mov
pop
adc
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
pop
adc
add
jmp
adc
jmp
adc
add
pop
adc
jmp
adc
add
pop
adc
jmp
adc
pop
adc
call
data16
jmp
pop
adc
ljmp
add
ljmp
add
pop
adc
call
pop
adc
jecxz
xor
add
add
pop
sbb
cmpsl
shr
push
push
xor
adc
pop
and
mov
add
pop
push
mov
adc
loop
stos
pop
ljmp
pop
or
popa
xchg
push
nop
in
loope
mov
xlat
cmpl
dec
pop
dec
addr16
shl
rcl
fnstenv
sub
movl
cltd
dec
je
fsubrl
leave
shll
add
add
add
inc
jb
out
popa
push
cmp
into
fcoml
xlat
testb
nop
pop
add
sub
pop
pop
xchg
pusha
roll
sub
out
inc
ss
insb
or
sti
sbb
rcr
clc
aad
add
or
or
or
and
cmp
add
add
add
push
dec
loope
mov
and
sub
mov
je
rep
xor
dec
fildll
les
mov
mov
into
lcall
xchg
imull
sub
adc
lret
hlt
adcl
mov
ljmp
pop
cld
mov
sbb
xchg
xor
add
add
lret
mov
and
add
adc
dec
enter
lret
addr16
dec
popa
subb
imul
or
mov
pop
or
dec
out
xchg
fidivl
sub
add
cwtl
stc
lahf
mov
xchg
inc
cmpsl
jne
incb
add
hlt
dec
dec
push
popa
addb
add
add
fildll
xchg
mov
jle
push
jmp
inc
pop
fldln2
out
add
xor
xor
sub
xor
mov
flds
or
add
xchg
loope
add
adcb
inc
jecxz
mov
jmp
xor
add
dec
sbb
pop
dec
cmp
add
add
add
and
je
fwait
mov
and
xchg
mov
addr16
int3
xor
push
fdivl
jecxz
in
xor
push
cld
xor
and
dec
mov
inc
pop
add
sub
push
add
sub
jg
add
jl
inc
pop
mov
xor
pushf
xor
pop
lods
xor
mov
aad
pop
push
scas
jge
dec
mov
add
mov
mov
adc
sub
ret
sub
ret
sub
and
and
inc
mov
add
jl
enter
mov
aam
jecxz
xchg
hlt
imul
push
xor
outsb
xor
inc
mov
push
nop
mov
jbe
ffree
pop
addr16
jmp
jmp
add
add
sbb
lock
xor
fidivs
les
xor
push
mov
hlt
dec
dec
punpckldq
add
mov
les
push
push
jbe
push
sub
inc
xor
and
ljmp
xor
mov
mov
jne
mov
push
jp
mov
push
xor
add
add
add
in
inc
sbb
sub
mov
mov
dec
test
ror
push
or
jmp
dec
pop
repnz
adc
sbb
mov
sbb
ret
sub
sbb
xor
sbb
xor
sbb
xor
sbb
mov
int
popf
addl
cmp
fnstsw
push
mov
cmp
add
add
jnp
cmp
mov
sbb
std
cmp
pusha
repnz
aam
mov
loopne
add
dec
in
sub
cmp
inc
mov
mov
enter
clc
cmp
pusha
push
mov
sub
sub
test
cmp
inc
or
cmp
push
dec
mov
add
add
add
fs
fbstp
sub
scas
fwait
hlt
inc
cmp
or
dec
cmpl
daa
xchg
cmp
daa
movsb
cmp
daa
mov
mov
les
shll
pop
or
push
xchg
fsubrp
adc
into
sub
sahf
aam
lret
daa
pop
insl
cmp
sub
cmp
sub
sub
je
mov
add
inc
inc
xor
add
sub
add
add
add
dec
mov
repz
add
hlt
cmp
es
sub
outsb
sub
inc
sub
inc
imul
pop
lock
mov
pop
nop
mov
daa
add
repz
add
pop
push
xor
outsb
clc
mov
adc
decl
or
jp
xorl
add
add
loope
jmp
cs
xor
cs
xor
pop
xor
push
mov
daa
mov
stos
fcmovu
mulb
aas
xchg
or
and
lcall
and
ljmp
xor
and
xchg
repnz
mov
mov
test
mov
sub
mov
add
add
mov
or
xor
pop
jne
ljmp
xor
and
xor
pop
push
xor
pop
in
xor
cmc
xor
or
xor
add
outsb
mov
lea
xor
dec
test
jne
jne
dec
dec
movsl
xor
cs
xor
add
add
add
xor
dec
adcb
pop
nop
jg
add
adc
adc
mov
dec
movsb
mov
fld
cltd
jne
in
and
mov
mov
arpl
bt
jno
addb
les
scas
leave
pop
fucompp
pop
adc
add
or
pop
mov
add
xcrypt-ctr
cmpsl
pop
adc
add
add
add
push
sbb
jnp
push
pop
xchg
sub
and
and
sub
cld
xor
jae
ss
outsl
cmp
pop
repnz
arpl
imul
data16
jae
jne
outsl
outsb
jns
cmp
pop
push
ss
arpl
gs
imul
data16
mov
jne
add
add
add
fdivrl
pop
loopne
inc
mov
xchg
aad
mov
lret
in
ja
jmp
mov
mov
cmpsb
mov
push
mov
mov
xchg
mov
cmpsb
xchg
mov
mov
lahf
mov
sbb
jb
lret
dec
into
adc
aaa
sub
add
add
lcall
stc
xchg
imul
int
out
icebp
adc
int3
inc
push
push
enter
les
pop
rorb
pop
adc
push
pop
sbb
or
push
push
and
repnz
and
imulb
icebp
cli
addr16
arpl
leave
and
les
cmp
shrb
cld
mov
adc
adc
test
or
add
orb
jecxz
mov
out
mov
jmp
mov
sbb
pop
adc
mov
adc
xchg
sub
mov
shlb
fwait
jmp
adc
fisttpll
or
push
mov
in
mov
jmp
jle
fcoml
xchg
fwait
mov
lahf
jns
mov
xchg
jno
stos
fwait
insl
add
add
add
cmpsl
inc
mov
stos
cmp
repz
jmp
mov
test
cmpsl
push
mov
pop
iret
mov
push
xlat
mov
imul
lahf
outsl
filds
out
loope
jmp
out
aaa
in
repz
cmc
imull
in
stc
sti
adc
add
add
add
add
adc
add
adc
add
adc
add
add
ja
add
xchg
add
xchg
incl
icebp
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
cmp
add
add
pop
cmp
add
add
add
pop
les
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cld
pop
jmp
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
lcall
pop
fnstcw
add
add
pop
cmp
add
add
pop
cmp
add
pop
ljmp
sbbl
add
add
and
lcall
adc
add
jmp
add
jmp
pop
jmp
dec
outsb
pop
fxch
call
add
jmp
add
jmp
pop
pop
dec
call
add
call
add
jmp
add
push
pop
jno
jmp
add
jmp
add
pop
xchg
jmp
add
jmp
add
imul
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
call
pop
adc
imul
xchg
add
leave
es
rorl
pop
adc
jecxz
sub
fldt
and
sti
add
add
add
and
sti
and
jmp
sub
fldt
adc
dec
and
sti
dec
and
sti
push
and
sti
dec
and
add
add
aaa
push
add
aaa
push
add
pop
push
add
pop
push
add
testl
add
pop
push
add
testl
add
or
add
add
or
add
or
add
mov
add
xchg
add
ja
add
ja
add
xchg
add
ja
add
ja
add
inc
adc
add
aaa
adc
add
pop
cmp
add
and
inc
pop
cmp
inc
pop
cmp
add
xchg
inc
add
add
add
and
inc
pop
ss
jmp
xor
cltd
inc
pop
cmp
inc
pop
aaa
hlt
mov
inc
and
inc
pop
xor
inc
pop
inc
hlt
decl
xor
inc
pop
ds
ljmp
cwtl
inc
pop
sub
xchg
inc
pop
adc
and
lahf
adc
adc
add
add
pop
adc
cwtl
lahf
adc
and
lahf
adc
and
lahf
adc
and
lahf
adc
and
lahf
adc
and
lahf
adc
and
pop
adc
and
pop
adc
and
pop
adc
and
pop
adc
repnz
inc
mov
xrelease
cltd
pop
adc
bnd
cwtl
cltd
add
add
add
adc
repnz
aam
inc
js
sar
push
dec
inc
lcall
sar
cmc
adcl
adc
sar
or
sar
pop
inc
adc
repz
adc
jecxz
sar
leave
inc
adc
ror
sar
int3
in
inc
clc
sar
lret
int3
inc
clc
not
decl
int
fsub
sar
or
xlat
sar
adc
add
add
adcb
add
sar
incl
add
jmp
adc
jecxz
sar
roll
ror
sar
call
sahf
inc
add
in
add
or
repz
jge
inc
add
add
dec
test
lcall
inc
add
lock
decl
lock
std
popf
inc
add
decl
out
incl
add
add
sbb
lock
decl
cmp
jmp
cmp
call
cmp
jmp
fwait
inc
add
fwait
inc
add
jmp
fwait
inc
add
hlt
pushl
xchg
inc
pop
dec
hlt
jmp
xchg
inc
pop
jge
call
xchg
inc
pop
in
hlt
incl
xchg
inc
pop
sbb
pushl
ljmp
pop
adc
add
pop
stc
and
pop
inc
xchg
inc
pop
clc
and
pop
xor
add
xchg
inc
pop
mulb
add
xchg
inc
pop
cmc
and
pop
adcb
pop
lock
inc
pop
jae
add
cwtl
inc
pop
andb
pop
adc
add
xchg
inc
pop
adc
xchg
pop
adc
xchg
pop
adc
xchg
lahf
adc
add
mov
lahf
adc
and
and
pop
adc
cwtl
lahf
adc
and
add
pop
adc
xchg
lahf
adc
and
jecxz
lahf
adc
and
rcll
pop
adc
xchg
pop
adc
pop
adc
and
and
pop
adc
cwtl
pop
adc
cwtl
pop
adc
nop
aas
adc
repz
add
add
sar
ret
add
rcl
pushl
rcl
jmp
sar
xchg
jg
add
jl
add
sar
xor
sar
dec
jl
add
not
incl
adc
repz
sar
or
add
rcl
decl
cmp
add
rcl
decl
adc
ret
icebp
sar
or
mov
sar
into
add
add
add
add
sar
int
adc
adc
sar
decl
test
add
lea
add
jge
inc
add
lock
lea
add
sbb
out
add
or
jmp
add
inc
add
mov
add
pop
mov
add
or
sbb
add
add
add
std
xchg
inc
add
add
jmp
add
jmp
add
jmp
add
inc
add
and
inc
pop
push
hlt
lcall
xor
inc
pop
outsb
hlt
jns
xchg
inc
pop
lahf
hlt
ljmp
xchg
inc
pop
mov
lcall
nop
inc
pop
dec
mov
and
inc
add
add
add
and
inc
pop
stos
pop
adc
nop
inc
pop
test
popl
lods
pop
adc
popl
stos
pop
adc
popl
scas
pop
adc
popl
lods
pop
adc
popl
adc
dec
adc
nop
pop
adc
dec
adc
nop
pop
adc
outsb
adc
nop
pop
adc
outsb
adc
pop
adc
dec
adc
pop
adc
add
add
add
rorl
outsb
adc
lahf
adc
adc
pop
dec
adc
nop
lahf
adc
dec
adc
nop
lahf
adc
pop
adc
nop
lahf
adc
pop
adc
lahf
adc
pop
adc
lahf
adc
pop
adc
lahf
adc
pop
adc
pop
adc
pop
adcb
mov
sar
jle
adc
and
sar
jge
adc
adc
add
add
into
sar
pusha
inc
adc
add
sar
dec
inc
adc
repz
incl
loope
pushl
adc
rcl
sar
adcb
ret
loope
call
adc
mov
sar
xchg
sar
jne
adc
adc
sar
mov
add
out
sar
xchg
add
rcl
decl
adc
jecxz
sar
dec
inc
adc
rcl
sar
incl
add
add
sub
inc
add
hlt
add
or
inc
call
inc
incl
hlt
lcall
inc
add
hlt
decl
hlt
jge
inc
add
add
lea
add
sbb
hlt
add
or
repnz
jge
inc
add
repnz
dec
mov
add
add
add
add
inc
add
mov
xchg
repz
std
lea
pop
add
popl
cld
and
pop
push
popl
std
and
pop
orb
pop
repnz
lahf
and
pop
and
call
shl
cmpl
add
popl
jecxz
add
popl
and
pop
push
popl
add
add
pop
add
popl
je
add
popl
mov
nop
inc
pop
push
add
nop
inc
pop
imul
inc
pop
adc
lahf
adc
pop
adc
pop
adc
pop
adc
adc
and
pop
adc
nop
pop
adc
and
add
add
add
add
repz
pop
adc
and
jecxz
pop
adc
and
rorl
pop
adc
lahf
adc
pop
adc
and
and
pop
adc
nop
lahf
adc
mov
adc
repz
adc
jecxz
sar
mov
jmp
adc
ret
lcall
add
add
add
sar
jl,pt
add
into
sar
cmp
out
sar
and
add
out
sar
adc
repz
adc
jecxz
sar
xor
add
jmp
adc
ret
fnop
call
jl
add
jg
add
into
sar
mov
adc
adc
sar
jmp
icebp
add
pop
mov
add
in
mov
add
add
add
lock
std
mov
aam
add
lods
mov
jecxz
add
popf
mov
shl
add
in
mov
and
add
jge
inc
add
lock
insl
mov
add
pop
mov
add
insl
mov
dec
lock
jge
inc
add
add
lock
sbb
lock
in
mov
or
add
add
add
add
inc
add
add
mov
js
decl
stc
mov
jns
add
xchg
xchg
add
xchg
xchg
add
xchg
mov
xchg
mov
xchg
fisubl
inc
pop
inc
pop
shlb
inc
pop
add
add
xchg
out
and
inc
add
add
add
add
xchg
push
add
xchg
cmp
xchg
adc
and
lahf
adc
hlt
sbb
pop
mov
adc
add
jmp
pop
pop
adc
add
clc
pop
pop
adc
add
clc
pop
pop
adc
add
fcomps
pop
adc
add
fcomps
pop
adc
add
clc
pop
pop
adc
add
add
add
pop
adc
pop
pop
adc
add
fcomps
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
call
pop
adc
call
pop
adc
call
pop
adc
call
pop
adc
in
stc
adc
icebp
adc
loope
add
fsts
add
add
add
add
adc
rcll
in
mov
adc
mov
adc
xchg
adc
adcl
add
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
notl
add
notl
add
pop
in
add
in
mov
imul
add
std
mov
add
in
add
popf
mov
lret
in
in
mov
mov
mov
mov
ljmp
inc
add
lcall
inc
add
add
insl
mov
outsb
in
add
jge
inc
add
and
inc
pop
inc
and
add
pop
push
xchg
sub
add
xchg
cmp
xchg
cs
call
and
incl
roll
add
xchg
cmp
add
xchg
cmp
add
xchg
pop
and
pop
push
xchg
push
and
pop
addb
pop
xacquire
ss
call
push
hlt
incl
add
add
pop
pusha
and
pop
inc
xchg
adc
and
jecxz
lahf
adc
and
roll
pop
adc
xchg
adc
adc
and
adc
out
add
or
pop
adc
xchg
adc
xchg
adc
and
roll
pop
adc
xchg
adc
and
add
add
pop
adc
adc
and
xchg
xor
mov
adc
cmc
xorl
add
add
loope
dec
aas
adc
jecxz
sar
ret
add
loope
call
jg
add
loope
inc
jg
add
push
adc
and
sar
push
or
sar
adc
out
clc
aas
adc
repz
add
add
sar
xlat
aas
adc
jecxz
sar
fidivrl
add
loope
mov
loope
mov
loope
lcall
push
adc
and
sar
push
lea
cld
loopne
incl
mov
outsl
icebp
add
insl
mov
jle
add
cmp
icebp
add
sub
icebp
add
sbb
lock
in
mov
add
add
add
add
cmp
ds
decl
mov
pop
ds
lcall
inc
add
in
mov
ss
mov
ds
ljmp
ds
lcall
ds
in
mov
repnz
cmp
mov
arpl
jns
mov
jo
ljmp
xchg
xor
add
pop
xchg
outsb
repnz
xchg
jg
cmp
inc
pop
insb
repnz
jle
inc
pop
std
adc
pop
out
jg
pop
ljmp
pop
sti
adc
pop
push
addb
adc
inc
pop
stc
adc
pop
jg,pn
pop
notb
pop
pop
jg
pop
pop
adc
inc
pop
adc
add
jg
pop
adc
add
add
add
adc
sbbb
sahf
adc
adc
sbbb
xchg
adc
adc
jg
adc
adc
adc
jg
adc
jg
adc
jg
adc
jg
adc
adc
sbbb
adc
pop
adc
sbbb
repz
adc
adc
pop
adc
out
add
add
pop
adc
jg
adc
out
adc
jg
adc
or
dec
jb
add
sar
into
jb
add
sar
int
adc
sbb
inc
data16
repz
decl
rcl
incl
rcl
xchg
xor
add
mov
incl
sar
push
insl
adc
and
sar
inc
insl
adc
adc
add
add
call
adc
add
sar
cmp
and
dec
popa
sar
pop
rcrb
or
lcall
rcrb
or
pushl
inc
add
mov
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
xor
add
scas
inc
add
xor
add
scas
inc
add
add
add
fdivl
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
add
in
scas
inc
add
add
mov
jg
pop
mov
jg
pop
mov
jg
pop
mov
jg
pop
mov
addb
in
add
add
add
addb
in
pop
and
pop
mov
jg
pop
mov
add
jg
pop
mov
jg
pop
mov
add
jg
pop
movsl
loope
pop
bnd
pop
mov
add
addb
loope
pop
adc
add
jg
pop
adc
pop
adc
jg
adc
pop
adc
jg
adc
pop
adc
jg
add
add
pop
adc
pop
adc
adc
pop
adc
pop
adc
sbbb
pop
adc
pop
adc
pop
adc
jg
adc
jg
adc
inc
sbb
bound
lahf
adc
pop
adc
adc
adc
sbbb
adc
pop
adc
sbbb
add
add
sub
repz
sar
inc
sub
jecxz
sar
dec
sub
sarl
sar
dec
mov
pop
ret
sub
decl
add
push
add
decl
decl
incl
decl
sub
jecxz
sar
inc
push
add
mov
adc
ret
test
adc
mov
add
add
cltd
sar
xchg
insl
adc
and
sar
xchg
add
dec
lcall
inc
add
dec
stos
inc
add
das
mov
das
decl
das
lcall
das
dec
stos
inc
add
cs
cmp
cs
decl
inc
add
cs
lcall
inc
add
and
jg
stos
inc
add
add
add
mov
stos
inc
add
stos
inc
add
inc
add
dec
stos
inc
add
xchg
inc
add
idiv
stc
jg
pop
xchg
idiv
jmp
js
add
jg
pop
jns
add
jg
pop
jbe
mov
ja
add
jg
pop
jl
add
jg
pop
std
loopne
add
add
add
jg
pop
cli
out
add
jg
pop
sti
les
bound
addb
lcall
jg
pop
loope
add
jg
pop
out
out
ljmp
jg
pop
fists
add
jg
pop
hlt
adc
outsb
pop
jg
pop
adc
lahf
adc
js
adc
js
adc
ja
adc
ja
add
add
pop
adc
ja
adc
ja
adc
ja
adc
mov
and
adc
adc
pop
adc
adc
pop
adc
out
adc
ja
adc
pop
adc
ja
adc
out
adc
ja
adc
out
adc
ja
adc
adc
mov
inc
add
add
xchg
pushl
add
adc
adc
jmp
data16
enter
repz
sar
xchg
sbb
dec
sar
mov
sbb
sub
decl
daa
sar
mov
sar
dec
subl
and
sar
dec
subl
adc
sar
dec
subl
add
sar
inc
dec
sbb
repz
sar
cmovle
add
leave
sar
add
psrlq
add
add
test
cs
test
add
dec
lahf
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
sahf
inc
add
add
add
inc
add
add
add
sahf
inc
add
add
xchg
sahf
inc
add
add
add
lahf
inc
add
add
add
or
inc
add
add
add
sub
inc
add
lahf
inc
add
add
cmp
add
add
ja
pop
adc
add
ja
pop
sbb
add
ja
pop
sub
ja
pop
ds
pop
add
pop
dec
add
pop
loopne
inc
pop
cmp
add
add
pop
cmp
add
add
add
add
add
add
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
adc
loop
repz
fiadds
cli
call
repnz
loop
out
push
fidivs
add
jmp
mov
xchg
cmp
add
add
add
xor
sub
or
inc
scas
add
cmp
hlt
mov
sahf
lock
or
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
dec
and
pop
xor
push
sub
dec
xor
add
lcall
incl
add
add
js
js
lcall
decl
lcall
pushl
or
push
pop
call
clc
clc
push
or
push
ud0
fdivrp
lcall
fdivrp
lcall
fdivrp
lcall
fdivrp
decl
fdivrp
clc
clc
push
or
or
fcomp
fcomp
lcall
fdivrp
decl
fdivrp
clc
incl
add
add
ja
add
xchg
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
add
pop
cmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
call
add
call
add
call
add
call
add
add
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
call
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
add
ja
add
ja
inc
add
add
jbe
add
add
add
add
inc
add
add
das
adc
add
inc
add
adc
inc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
aad
fadds
in
inc
add
adc
add
adc
or
adc
add
add
loopne
jge
add
add
pop
movl
add
pop
fildl
inc
pop
jge
ds
mov
pop
pop
jg
pop
addl
pop
pop
xchg
add
movsb
add
lods
add
pop
mov
jle
mov
add
add
pop
in
add
pop
testb
pop
lock
repnz
pop
add
pop
outsl
add
pop
pop
add
pop
pop
add
jp
inc
add
add
add
add
addb
pop
addl
add
adc
add
adc
add
add
addl
push
adc
push
adc
pop
adc
dec
adc
mov
adc
scas
adc
add
adc
add
adc
add
adc
inc
adc
cmp
push
add
add
inc
add
xor
cwtl
add
adc
add
adc
add
adc
scas
pop
or
xchg
pop
icebp
add
pop
std
add
mov
add
pop
lock
cld
add
add
mov
add
pop
jmp
add
add
add
add
add
mov
pop
pop
les
push
pop
ljmp
pop
add
inc
pop
lock
pop
movl
test
pop
jmp
movsl
pop
add
sahf
pop
out
add
cmovne
in
dec
add
add
add
punpckhdq
xlat
sgdtl
loopne
das
add
movhps
fmuls
sub
push
cmovbe
add
add
add
push
dec
add
aaa
add
push
jae
or
imul
sbb
and
adc
xor
adc
in
or
xor
adc
xor
adc
xor
adc
xor
jecxz
fimull
in
pop
xchg
or
mov
pop
cld
mov
pop
movsb
outsb
xchg
pop
cmpsb
add
add
add
pop
test
lds
stos
outsb
mov
pop
lods
dec
rolb
scas
dec
roll
mov
loopne
mov
filds
mov
jbe
mov
jge
mov
mov
pop
mov
mov
pop
les
pop
outsb
in
pop
enter
lret
pop
lret
dec
repz
int3
dec
loopne
int
loope
into
dec
out
pop
iret
cs
pop
shrb
adc
add
adc
stos
pop
push
loop
pop
mov
popf
pop
mov
cwtl
pop
test
loope
pop
mov
loope
pop
ret
pop
mov
loope
pop
xchg
mov
pop
jne
xchg
pop
mov
xchg
pop
and
pop
jns
cmp
insl
loope
pop
cmc
loopne
pop
repnz
push
pop
adc
push
pop
adc
push
jg
sub
jl
sub
add
add
add
sub
push
cmp
das
push
inc
adc
push
cmp
add
pusha
jmp
add
mov
out
movsl
pop
in
add
mov
jmp
scas
pop
ljmp
pop
loopne
mov
pop
fiadds
mov
in
lahf
pop
jecxz
xchg
pop
loop
xchg
pop
flds
inc
pop
xlat
add
dec
add
add
add
add
dec
pop
aam
inc
pop
int
dec
pop
into
add
push
pop
rolb
add
add
add
push
push
adc
adc
icebp
adc
adc
dec
push
pop
adc
mov
push
push
mov
push
push
adc
aad
push
add
adc
fistl
push
add
adc
sbb
push
add
adc
add
add
add
adc
adc
sub
adc
xor
pop
add
adc
add
adc
notl
push
and
adc
add
adc
add
adc
add
adc
mov
add
add
mov
pop
pop
ret
add
pop
aam
or
add
pop
out
or
insl
add
bound
cvtps2pd
dec
add
add
add
add
pop
insb
add
bound
inc
pop
outsb
add
add
bound
xor
add
popa
add
pop
add
bound
cmp
add
fldl
cmp
call
add
pop
fadds
aas
stc
add
cli
add
sti
add
cld
add
adc
popf
or
add
add
add
add
xchg
or
adc
cmpsb
or
les
xchg
or
mov
and
leave
add
enter
lret
add
lret
or
mov
dec
or
mov
insl
or
nop
add
xchg
add
addb
or
push
add
dec
add
inc
add
pop
add
cmp
jno
cmp
add
add
add
add
pop
lock
pop
repnz
pop
incl
push
pop
add
pop
in
add
add
pop
incb
repnz
jmp
add
loopne
add
fsubr
add
shl
add
rorl
lea
add
mov
push
cltd
addl
xchg
push
inc
mov
add
cld
pop
cmp
add
add
jno
add
imul
pop
add
test
add
adc
add
adc
add
adc
add
nop
add
xchg
add
xchg
add
adc
add
xchg
add
xchg
add
xchg
add
adc
add
adc
add
adc
add
adc
add
adc
add
enter
out
lahf
add
adc
add
adc
add
adc
add
adc
add
enter
std
mov
std
mov
int
mov
std
mov
lret
std
mov
add
mov
add
mov
pop
paddd
pop
add
mov
add
add
add
std
mov
pop
cmp
ret
std
rcrl
ret
pop
pop
std
les
std
lds
std
pop
jb
pop
jno
enter
mov
enter
sti
incl
sti
pop
cmp
int3
sti
add
adc
cld
cld
out
jg
std
out
cmp
out
xchg
cld
aam
mov
shr
cmp
out
jle
shr
cld
add
add
add
out
pop
cld
vandps
jge
dec
cld
mov
out
cmp
cld
sub
out
stos
sti
jnp
mov
sti
test
lahf
sti
sbb
mov
lock
sti
lock
sti
ds
xchg
sti
inc
out
ret
out
sar
out
mov
ss
stos
sti
aaa
out
cmpsb
sti
inc
out
popf
sti
cmp
incl
addb
push
andb
add
add
add
and
and
jg
es
and
dec
and
dec
and
and
adc
and
adc
and
add
and
add
and
hlt
push
and
hlt
stc
and
in
and
aam
std
and
arpl
and
pop
push
and
push
push
and
arpl
mov
push
cmc
and
imul
xchg
arpl
and
add
add
add
and
push
add
add
and
add
sbb
add
and
pop
or
fcomps
or
fistps
or
into
pop
adc
int
adc
jecxz
and
pop
and
pop
push
and
pop
push
and
push
and
pop
push
and
pop
pop
and
pop
pop
and
push
pop
and
push
add
and
add
add
rcrl
sub
loop
add
push
sub
hlt
push
pop
and
push
pop
and
push
pop
and
mov
and
mov
adc
or
cmp
or
cmp
or
sbb
or
sbb
jg
or
xor
or
lods
cmp
rolb
mov
inc
or
add
inc
aaa
or
out
sbb
lods
sbb
mov
or
push
js
or
stos
jnp
or
mov
inc
adc
push
std
test
clc
ss
add
jns
cmp
xor
aas
xor
insl
ss
push
imul
pop
push
mov
push
push
pushf
aaa
inc
push
add
add
add
aaa
xor
dec
xor
push
jno
and
push
xor
push
pusha
xor
cmp
dec
or
xor
cmp
sub
sti
xor
or
xor
or
xor
cmpsl
push
mov
sahf
push
and
bound
and
push
xchg
and
bound
add
add
and
imul
add
pop
jecxz
dec
push
loop
inc
imul
add
pop
out
dec
push
out
inc
imul
add
pop
jmp
add
add
push
in
add
pop
out
add
push
out
add
push
lock
outsb
repz
outsb
repnz
dec
cmc
add
repnz
add
add
add
add
and
add
mov
and
add
and
and
push
and
add
adc
add
push
loopne
pop
push
out
and
push
fisubs
or
frstor
or
int3
and
push
or
fisubl
or
push
test
femms
cmpsl
and
push
cmpsb
and
push
xchg
and
push
xor
adc
xor
adc
and
adc
add
xchg
and
push
lock
push
jmp
sbb
pop
mov
bndldx
bndstx
adc
test
sbb
pusha
jae
pop
pop
mov
mov
mov
mov
mov
and
mov
pusha
cmp
daa
pop
inc
adc
push
xor
sub
adc
pusha
aas
adc
pop
adc
xor
adc
add
add
add
adc
pop
dec
adc
push
dec
adc
push
daa
adc
pop
adc
sub
adc
pusha
adc
jbe
sbb
punpckhbw
sahf
punpcklwd
leave
nopl
enter
mov
sbb
mov
sbb
sbb
and
xchg
sbb
orl
cmpsl
sbb
add
add
add
inc
rsm
sbb
mov
sbb
jg
sbb
shrd
sbb
bts
pop
seto
push
jns
sbb
ja
inc
xor
aas
xor
push
inc
xor
inc
xor
push
dec
xor
arpl
push
pop
inc
xor
add
add
push
dec
xor
xor
arpl
push
pop
dec
xor
push
push
xor
imul
arpl
lcall
xor
push
xor
push
xor
imul
arpl
bound
xor
pop
xor
xor
pop
xor
mov
sbb
xor
sbb
xor
push
push
xor
push
push
xor
add
add
or
push
xor
push
push
xor
push
push
xor
push
pop
xor
push
pop
xor
push
pop
xor
push
pop
xor
push
pop
xor
push
pusha
xor
sbb
cmc
sbb
test
arpl
mov
test
jp
test
adc
stos
adc
lods
adc
lods
adc
scas
adc
mov
pop
cmp
add
add
or
dec
sbb
mov
sbb
mov
sbb
mov
fisttpl
mov
into
or
dec
rorb
mov
dec
loop
mov
outsl
aam
mov
outsl
xchg
or
dec
lea
rorl
ret
or
mov
jno
mov
js
mov
jg
imul
pop
or
pusha
or
add
or
outsl
inc
or
outsl
inc
or
outsl
adc
or
xor
adc
adc
imul
dec
jecxz
xor
pushl
mov
cld
xor
in
xor
in
xor
in
xor
in
xor
lds
loope
pop
adc
add
lock
add
add
pop
adc
add
loop
pop
adc
add
hlt
sbb
in
add
cli
sbb
cli
add
loop
pop
adc
add
add
ja
add
pop
adc
mov
pop
adc
mov
pop
adc
fwait
inc
adc
pop
adc
lcall
add
pop
adc
cmp
adc
or
add
inc
adc
or
add
add
pop
adc
push
ja
add
pop
adc
or
add
pop
adc
or
add
inc
adc
rcrb
add
ja
add
adc
push
bound
add
push
adc
ljmp
add
addr16
add
adc
add
adc
add
add
adc
add
adc
add
add
add
xor
add
inc
adc
add
add
adc
add
xor
add
arpl
add
bound
add
popa
or
add
mov
sbb
add
sti
sbb
add
lods
sbb
add
adc
add
sbb
add
add
pop
jge
add
add
pop
insb
pop
add
add
pop
pop
pop
add
add
add
pop
add
add
pop
add
add
pop
dec
pop
add
add
pop
pop
pop
add
add
pop
dec
pop
add
add
pop
pushf
adc
add
adc
add
push
add
add
pop
mov
add
add
pop
push
add
pop
addr16
add
add
pop
inc
push
add
add
pop
inc
push
add
add
add
add
add
lahf
push
pop
adc
add
sahf
push
pop
adc
add
adcl
pop
adc
pop
adc
add
addr16
pop
adc
push
pop
adc
push
pop
adc
pop
adc
push
pop
adc
pop
adc
add
adc
add
adc
add
adc
pop
adc
add
pop
adc
add
adc
add
adc
add
adc
mov
pop
adc
xor
add
pop
adc
and
add
pop
adc
xor
pop
adc
and
adc
scas
pop
adc
aaa
push
adc
imul
add
adc
sbb
add
adc
sbb
add
adc
mov
add
add
add
add
pop
adc
popf
jb
add
adc
pushf
jb
add
adc
mov
add
adc
mov
add
adc
add
sbb
add
sbb
add
add
fisttpl
add
fimull
add
lods
sbb
add
mov
or
add
mov
add
add
add
add
lods
and
cmpsl
call
fs
in
pusha
jmp
ds
les
fwait
sti
cmpsl
ja,pt
xlat
and
xlat
fldt
ja,pt
fdivrs
dec
dec
jbe
addr16
rolb
xlat
ficomps
subl
cwtl
adc
lds
sbb
aad
out
adc
int
push
add
add
pusha
mov
sbb
push
lcall
inc
lcall
xor
enter
int3
and
nop
lcall
sbbb
outsl
jo
iret
fsubrs
xor
pusha
cmp
fcomps
in
push
push
sbb
add
pop
xchg
adc
adc
add
popf
je
add
add
sahf
adc
je
adc
je
adc
dec
adc
sahf
adc
add
loope
sahf
adc
sahf
adc
add
std
jne
adc
pop
adc
jne
adc
add
shll
adc
outsl
adc
add
xchg
jne
adc
add
inc
jbe
adc
jg
cmp
add
add
add
adc
push
adc
push
pop
sbb
dec
lock
add
adc
add
pop
pop
add
pop
or
xor
pop
push
add
pop
and
xor
daa
add
push
add
push
add
push
add
jb
add
adc
in
jb
add
pop
add
push
push
add
or
fldl
add
add
push
push
add
xor
enter
sbb
pop
push
add
adc
add
add
inc
add
adc
add
inc
add
test
adc
or
imul
iret
test
lds
adc
xchg
test
xor
or
iret
test
loopne
or
repz
test
or
aaa
test
add
add
add
adc
add
inc
add
test
nop
adc
add
inc
add
adc
iret
test
or
adc
stos
test
add
inc
add
add
pop
xor
inc
pop
mov
adc
js
pop
jmp
adc
js
pop
es
pop
push
add
pop
outsb
js
pop
lds
push
pop
dec
js
pop
cmp
add
add
js
pop
out
add
inc
js
pop
daa
add
pop
js,pt
pop
push
add
pop
ljmp
pop
loop
inc
pop
popf
add
pop
jg
xor
ja
pop
inc
add
pop
jle
inc
pop
aad
or
jns
pop
adc
js
adc
add
adc
push
adc
js
adc
js
add
add
push
adc
add
js
adc
add
adc
sahf
adc
add
adc
sahf
adc
bound
aad
sahf
adc
add
std
jne
adc
imul
push
add
cmc
jne
adc
push
adc
add
adc
add
mov
adc
add
xchg
jne
adc
into
pop
push
add
push
add
add
add
add
add
push
add
or
mov
adc
pop
or
mov
add
push
add
str
push
add
bound
add
add
push
add
sbb
add
test
add
pop
add
pop
cmp
inc
mov
jne
adc
icebp
push
add
add
add
push
add
adc
cltd
dec
push
add
repz
add
add
push
push
add
inc
add
or
daa
test
or
push
add
test
sub
test
fs
inc
add
push
adc
pop
test
lcall
add
or
inc
add
inc
add
or
inc
add
add
add
scas
push
or
insl
inc
add
add
push
insl
inc
add
or
jmp
inc
add
push
mov
inc
add
add
pop
mov
add
mov
inc
pop
cmpsb
add
pop
nop
push
pop
leave
add
pop
fs
inc
pop
sub
pop
push
add
subb
add
cwtl
insb
inc
pop
cltd
add
pop
loopne
inc
pop
xchg
add
add
add
add
outsb
inc
pop
push
add
pop
or
pop
jmp
outsb
inc
pop
mov
outsb
inc
pop
push
add
pop
xchg
insl
inc
pop
aaa
add
pop
xor
pop
stc
add
outsb
inc
pop
adc
add
fldcw
adc
outsb
push
adc
push
adc
add
popf
outsb
push
adc
add
adc
add
dec
outsl
add
add
add
adc
outsb
push
adc
pop
adc
push
adc
add
jns
sahf
adc
adc
sahf
adc
add
inc
outsb
sahf
adc
add
adc
add
inc
outsb
sahf
adc
add
push
outsb
sahf
adc
addr16
adc
negl
add
adcl
std
inc
push
add
pop
sub
leave
inc
push
add
add
add
add
add
pop
sbb
addl
add
push
add
notb
sub
add
pop
sub
add
pop
or
xchg
push
add
pop
or
add
or
add
add
add
adcl
adc
jae
or
add
add
add
outsl
inc
add
outsl
inc
add
adc
add
outsl
inc
add
outsb
inc
add
or
jnp
inc
add
outsb
inc
add
inc
add
outsl
inc
add
adc
mov
inc
add
push
add
push
push
add
dec
push
push
add
push
add
add
adc
pop
push
push
add
imul
popf
add
test
inc
pop
jmp
push
pop
shrb
test
or
push
or
mov
inc
pop
fldl
or
imul
nop
push
or
imul
jl
inc
pop
roll
pop
mov
pop
out
add
pop
js
inc
pop
rolb
or
add
inc
pop
jmp
push
pop
cmpsb
gs
pop
jnp
adc
pop
mov
adc
jbe
inc
pop
xchg
add
pop
fisubs
pop
adc
sahf
adc
add
adc
add
adc
add
adc
add
mov
adc
pushw
adc
push
adc
dec
adc
add
add
add
adc
pushw
adc
add
adc
add
cltd
pushw
adc
pushw
adc
add
popf
data16
adc
add
cmc
arpl
adc
arpl
sbb
sub
sbb
mov
pop
xor
sarl
add
pop
add
push
add
push
add
add
add
add
add
cmp
or
add
pop
or
or
pop
inc
add
cmp
add
std
push
add
std
push
add
add
push
add
and
test
push
add
sbb
add
adc
mov
lahf
or
inc
add
or
inc
add
push
add
add
add
aas
outsl
inc
add
or
inc
add
or
iret
outsl
inc
add
push
cmp
imul
mov
outsl
inc
add
or
inc
add
jno
add
or
out
jno
add
push
or
cmp
add
jo
add
push
or
push
jo
add
push
or
pop
jo
add
sub
jg
inc
add
add
add
pop
add
or
pusha
inc
pop
cmp
pusha
inc
pop
mov
pop
inc
pop
cmc
add
pop
cmp
inc
pop
push
add
pop
dec
pusha
inc
pop
mov
pusha
inc
pop
mov
pusha
inc
pop
push
add
int3
pop
inc
pop
ja
adc
pop
add
pop
ja
adc
pop
inc
pop
int
or
test
pop
add
add
add
add
test
pop
aam
or
test
pop
xlat
add
pop
nop
cmpsl
aas
pop
adc
adc
mov
cmpsl
add
adc
add
mov
push
adc
pop
adc
add
adc
dec
adc
adc
test
adc
test
adc
add
adc
test
adc
add
jmp
add
leave
push
add
add
add
mov
pop
adc
add
out
add
mov
add
sbb
adc
add
fldl
pop
adc
ja
or
ja
or
ficompl
loopne
sti
js
mov
add
adc
adc
mov
add
imul
add
add
dec
adc
rcll
add
inc
adc
shll
add
add
add
add
arpl
imul
jo
pop
adc
repz
sbb
jecxz
sbb
jecxz
sbb
jmp
adc
ljmp
add
pop
jns
push
bound
inc
pop
add
inc
adc
add
inc
adc
arpl
gs
imul
cmp
add
add
add
add
aaa
adc
add
adc
movlps
pop
adc
add
gs
outsl
and
xor
adc
add
push
adc
and
adc
add
adc
add
adc
add
gs
pusha
jbe
sarl
add
fs
xor
outsb
xor
outsl
pop
push
outsl
or
add
add
addr16
add
add
ljmp
imul
push
js
mov
imul
push
pop
sbb
xor
add
pop
adc
insb
pop
les
add
push
insb
sbb
jae
in
imul
adc
outsl
je
fsubs
pop
lcall
pop
mov
and
sahf
or
add
inc
imul
cli
adc
ds
and
xor
and
jmp
add
adc
add
adc
int
or
adc
add
adc
lods
adc
add
adc
add
adc
cmp
adc
lahf
adc
cmp
adc
lahf
adc
lahf
adc
cmp
adc
add
flds
pop
adc
add
add
add
pop
adc
add
cli
add
std
add
hlt
add
filds
pop
adc
add
add
pop
adc
rcrb
add
bound
add
pop
adc
cmc
pop
adc
in
pop
adc
out
adc
ficomps
add
bound
add
pop
adc
lret
pop
adc
lret
add
pop
adc
les
add
pop
adc
pop
adc
rcrl
rcrb
adc
add
add
bound
add
pop
adc
add
pop
adc
scas
jbe
inc
shlb
dec
movl
imul
inc
push
js
pop
adc
add
js
inc
into
jnp
dec
loope
outsl
jb
jne
imul
jo
and
xor
add
add
adc
outsl
add
adc
add
add
jbe
pop
adc
add
add
adc
add
and
insl
add
sldt
jb
insl
add
jo
pop
sldt
or
insl
add
adc
cmp
pop
adc
cmp
mov
cmpsb
add
mov
add
pop
iret
add
pop
mov
push
pop
roll
add
jae
pop
stc
incl
add
add
add
push
jae
pop
jo
pop
xor
into
push
ja
lods
and
jb
or
push
jae
adc
ret
outsb
pop
xor
mov
jb
jg
gs
ja
insl
popa
mov
inc
dec
mov
imul
dec
shrl
daa
lods
popa
addr16
adc
add
cmpsb
addr16
popa
scas
data16
add
add
pop
jl
inc
je
insl
cmp
pop
lcall
adc
pusha
mull
popa
repnz
inc
gs
jae
push
jns
popa
in
pop
jmp
pusha
popa
sbb
outsb
xor
jo
push
leave
inc
sbb
add
cmp
test
xor
dec
dec
push
fnstenv
std
and
adc
add
iret
sbbb
add
add
adc
popa
outsl
dec
add
dec
add
out
add
out
add
pusha
push
add
pop
push
add
loope
add
inc
push
add
push
add
rclb
cmp
push
add
push
add
pop
adc
call
pop
adc
sti
jnp
add
push
add
add
add
push
add
hlt
push
add
mov
push
add
lods
push
add
sub
add
es
add
and
aas
add
adc
add
adc
add
add
mov
add
test
add
adcl
add
add
adcl
add
ja
add
sub
add
add
add
add
add
mov
add
mov
aas
add
int
add
pop
dec
inc
or
arpl
pop
adc
add
add
pop
push
add
pop
testb
pop
out
add
pop
scas
add
add
cltd
add
add
pop
test
outsl
pop
fwait
add
xchg
add
add
add
add
pop
repnz
pop
int
test
js
dec
jp
add
cmp
inc
pop
pop
jmp
inc
pop
dec
jmp
or
dec
rorl
mov
jmp
test
test
outsb
js
outsl
jp
add
pop
fcompl
adc
call
sahf
adc
sahf
adc
sahf
adc
and
fs
incl
add
leave
add
or
and
xlat
adc
jmp
test
popf
dec
xchg
gs
sti
dec
scas
jmp
mov
aaa
adcl
data16
ljmp
pop
rcrl
or
in
adc
adc
add
fnstcw
outsb
adc
add
jmp
add
jmp
scas
outsl
dec
add
add
add
add
add
push
dec
add
inc
dec
add
outsl
dec
add
push
add
jp
add
mov
pop
push
dec
add
dec
dec
add
push
add
pop
adc
cltd
and
leave
pop
adc
mov
dec
add
xor
sub
pop
adc
cs
cmp
inc
jmp
cltd
inc
push
jmp
add
add
cmp
dec
and
cmp
push
dec
inc
dec
push
add
inc
inc
cmp
push
pop
pop
adc
add
dec
inc
dec
testl
inc
dec
add
add
add
inc
mov
add
testl
inc
mov
add
out
dec
push
testl
in
inc
push
mov
add
cmp
dec
add
add
add
add
inc
add
xchg
pop
inc
inc
imul
imul
je
inc
inc
insb
dec
push
push
inc
sldt
pop
sub
add
pop
sbb
push
inc
xchg
clc
add
pop
add
cmpsl
mov
add
dec
inc
lea
add
pop
test
mov
inc
sub
inc
inc
pop
mov
sbb
test
push
add
add
add
mov
add
arpl
xchg
pop
je
xchg
add
jno
push
popa
arpl
cmp
std
cmp
clc
testl
outsb
rclb
je
push
pop
outsb
shll
pop
sbb
popa
enter
mov
outsb
push
pusha
mov
push
add
adc
jae
pop
or
adc
insb
mov
pop
adcb
pop
jnp
or
jp
fistps
add
add
pop
adc
addr16
pop
int3
add
int
push
adc
dec
sbb
push
negl
adc
dec
sbb
outsb
dec
sbb
pop
dec
sbb
aam
or
jmp
add
adc
or
adc
stc
adc
pop
adc
add
adc
add
adc
jmp
bound
pop
pop
add
bound
or
dec
add
add
add
add
add
pop
push
add
pop
fs
pop
adc
stos
pop
push
lret
add
pop
jo
pushf
pop
dec
add
pop
push
add
pop
jbe
jmp
pop
push
add
pop
push
test
add
adc
lcall
add
add
inc
add
jbe
add
add
add
nop
adc
add
jns
add
add
add
add
add
inc
add
inc
inc
add
stos
aas
add
inc
inc
add
fs
add
inc
add
fs
add
inc
add
pop
inc
add
stos
aas
add
cs
add
outsl
inc
add
stos
aas
add
add
add
jmp
push
add
adc
rcll
add
adc
outsb
add
add
pop
sub
push
pop
sbb
pop
dec
add
pop
push
add
pop
and
imul
add
pop
and
push
pop
add
jb
add
pop
pop
add
pop
adc
pop
adc
add
iret
add
add
pop
add
js
or
add
add
add
pop
test
and
pop
fwait
cmp
test
outsb
xor
inc
or
or
popa
je
out
add
mov
adc
xchg
adc
test
adc
test
adc
out
movsl
mov
adc
adc
cmc
sub
cwtl
mov
jle
jmp
add
pop
adc
les
imul
dec
cmpsl
push
sbb
inc
sbb
add
fnstsw
scas
das
in
lock
jge
call
jne
test
inc
add
fs
ljmp
or
daa
and
and
or
add
mov
ljmp
add
mov
add
sbb
scas
aam
sbbb
lcall
cltd
movsl
scas
mov
mov
std
inc
and
out
pop
adc
dec
lret
loop
inc
shl
dec
mov
push
out
loopne
jp
fcomi
add
clc
cli
cmp
mov
mov
add
add
jle
div
das
mov
jecxz
aaa
adc
add
dec
push
mov
fisubs
out
aaa
adc
add
or
inc
add
xlat
cltd
ror
aad
sahf
aam
lret
add
sub
iret
fmuls
rcl
fisubrl
out
fistl
rol
aam
pushl
cwtl
xchg
add
add
add
pop
add
xor
dec
mov
jb
aam
add
rol
fwait
sti
add
pop
daa
lea
popa
mov
xchg
fisubrl
add
pop
inc
pop
popa
into
and
leave
sbb
xchg
testl
pop
cmp
xchg
fucomp
add
pop
dec
cmpsb
cmpsl
mov
out
push
pop
xchg
xor
pop
inc
loopne
cmc
and
int3
add
add
add
shll
dec
jp
jg
jbe
jnp
mov
pop
adc
ret
add
sbb
fisubrs
shlb
adc
sbb
sbb
jmp
pop
adc
mov
ja
xchg
cli
mov
jle
fisubl
dec
cltd
and
jb
gs
add
adc
sub
jnp
loop
dec
adc
add
add
add
xchg
insl
out
imul
sbb
xor
sub
sub
sub
push
mov
sbb
adc
push
adc
paddq
pusha
pop
add
pop
adc
ds
rcrl
lcall
daa
movsb
mov
add
cltd
in
out
pop
jge
icebp
add
jecxz
int
fsin
push
fwait
dec
dec
inc
cmpsb
cmp
add
add
dec
jbe
enter
shlb
mov
hlt
scas
mov
pop
pop
adc
popa
in
cmpsb
loopne,pt
mov
xlat
stos
lods
bound
adc
jns
cmpsl
mov
push
mov
mov
dec
popf
mov
in
inc
jne
repnz
jo
cmp
out
jae
imul
or
or
add
sar
pop
jl
add
test
sbb
pop
incl
cmp
pop
fldt
and
add
ret
mov
mov
cmp
sti
vpsrlq
leave
aam
mov
leave
into
lret
xchg
out
adc
add
add
or
adc
pop
lock
sub
add
add
xchg
mov
push
fwait
lahf
out
inc
lcall
xor
call
mov
outsb
daa
mov
cld
pop
jo
clc
pop
insb
jnp
xchg
dec
add
mov
adc
in
xchg
test
jg
push
mov
add
adc
jge
push
xor
adc
push
fcomip
or
cld
add
add
pop
dec
fstpt
add
add
add
push
in
cld
adc
push
lcall
test
fimuls
mov
imul
adc
ja
jnp
popl
imul
pop
adc
sub
int3
jl
stc
stc
bound
push
sub
adc
subl
inc
sub
add
clc
pop
jle
lret
insb
xorl
or
in
pop
std
xor
push
xor
add
mov
pusha
imul
dec
push
jmp
adc
add
cmp
pop
adc
jmp
add
incl
adc
mov
adc
jmp
push
aad
sbb
add
add
jecxz
xchg
pop
adc
or
add
pop
or
lds
ret
cmp
in
mov
ret
dec
sarl
jge
jnp
test
pop
adc
add
xchg
les
mov
pushl
fcmovnu
mov
add
call
adc
add
adc
add
add
add
add
mov
scas
stos
adc
mov
cwtl
out
dec
fildl
sbb
and
add
mov
add
sti
int
incl
adc
add
aam
call
leave
xchg
loopne
xchg
in
pop
ljmp
xor
shlb
and
and
imul
push
add
add
add
add
pop
cltd
cmp
fwait
dec
dec
pop
dec
in
mov
stos
std
mov
mov
adc
ja
popa
or
in
jg
jns
adcl
fwait
push
addr16
gs
mov
sub
inc
inc
push
cmc
cmp
sub
setno
push
pop
nop
cli
imul
add
pop
adc
add
add
add
pop
adc
sub
shll
insb
push
pop
cmp
lret
add
xor
insl
cwtl
sbb
pop
inc
jno
mov
hlt
cmp
pop
repz
cmc
push
adc
mov
pop
adc
add
out
add
iret
jb
sub
es
pop
xchg
lcall
leave
cs
adc
sub
adc
ljmp
shr
jmp
add
adc
pushf
adc
iret
jmp
addb
fimull
cli
dec
push
jbe
sbb
rolb
pop
imul
inc
dec
lock
ss
xor
sub
adc
call
pop
hlt
push
fbld
ss
pop
cli
dec
jmp
cld
imul
adc
jnp
add
add
repnz
push
xchg
lret
mov
cmp
jecxz
into
mov
sar
mov
jp
insl
mov
mov
out
add
leave
jg
shll
add
xlat
jbe
rep
ret
notl
add
push
inc
inc
pop
dec
je
fs
inc
inc
bound
pop
cmp
outsl
add
sbb
adc
add
lret
adc
adc
add
add
add
xchg
and
and
adc
add
dec
mov
push
lcall
xchg
sub
xor
shrb
outsb
aad
and
loop
jne
test
imul
imul
jnp
push
inc
inc
xchg
or
jno
cld
cs
add
fwait
pop
dec
dec
mov
cld
cmp
push
pusha
add
add
add
sub
mov
adc
andb
jo
daa
sbb
mov
sub
sbb
jno
or
aad
pop
inc
mov
push
add
fcoms
sbb
or
add
add
adcb
aam
adc
loop
pop
mov
cmp
in
cmp
xchg
cmpsb
call
mov
jecxz
enter
in
stos
into
add
add
add
jmp
xchg
les
fisttpll
mov
out
cmpl
mov
mov
ret
jo
scas
push
js
ljmp
popa
cmpsl
std
adcl
les
mov
cwtl
insl
jbe
nop
ja
xlat
jno
jns
scas
jge
frstor
xchg
jmp
enter
add
add
add
mov
jne
lods
inc
data16
insb
pop
mov
cmp
xor
pushf
push
and
outsl
je
stos
fs
sub
inc
sti
scas
addr16
je,pn
push
xor
pop
xor
adc
and
dec
push
and
and
pop
push
inc
mov
and
sbb
adc
mov
dec
cmp
add
je
mov
sub
xorb
cmp
jg
add
je
call
and
push
cmp
sbb
adc
pop
push
jb
push
bound
dec
xchg
xchg
stos
nop
cltd
mov
mov
mov
xchg
mov
sahf
andb
mov
cwtl
adc
xchg
test
add
add
cmp
jmp
push
or
sub
lcall
jge
xor
jns
nopl
int
divps
sub
xor
pop
aas
daa
xor
cltd
subb
pop
jbe
bound
ffree
lret
lret
inc
add
pop
arpl
pop
xchg
sti
cmp
push
pop
pop
stos
clc
cmp
jb
add
add
js
inc
dec
xchg
lock
push
pop
adc
insl
jnp
testb
pop
jne
mov
js
jmp
xchg
popf
xchg
loope
add
pop
fdivrs
inc
sub
stos
xor
scas
aaa
add
dec
sbb
cmp
sbb
data16
inc
lods
inc
sbbb
pop
jge
dec
push
add
add
add
arpl
popa
mov
adc
add
ljmp
adc
dec
lahf
pop
jmp
mov
rolb
loope
lcall
lret
xor
cmp
bound
outsb
or
push
lcall
pop
dec
lods
imul
psraw
adc
ds
mov
push
add
add
add
add
lcall
dec
mov
jl
sarb
push
mov
inc
push
mov
jg
mov
add
sbb
fmull
aam
inc
push
bound
add
push
pop
xor
inc
out
jo
inc
or
mov
test
sub
jmp
and
jmp
adc
in
test
cmp
add
add
add
xor
push
sub
adc
adcb
sub
inc
xchg
lcall
and
xchg
sub
jne
sub
and
xor
mov
add
sbb
pop
push
jo
pop
pop
jb
inc
inc
push
or
cmp
push
push
insl
dec
push
dec
dec
gs
inc
push
dec
cmp
sbb
aaa
add
add
add
jno
shrl
push
pop
jae
dec
sbb
xor
push
pop
js
inc
pop
insl
cmp
ja
jle
jne
jb
fsts
cmp
jnp
xchg
add
in
jmp
adc
pop
add
mov
out
xchg
mov
scas
cmc
mov
add
add
sub
cmp
scas
and
cvtdq2ps
sbb
daa
mov
xor
call
repz
adc
mov
int3
push
fisubrs
fistpll
out
xchg
xchg
movsb
xlat
call
or
add
dec
and
add
int
inc
adc
add
cmp
add
call
add
pop
adc
pushf
dec
sbb
popf
jle
pushf
call
shll
enter
mov
mov
pop
adc
mov
jns
and
fs
mov
jmp
mov
adc
push
fsubrl
stos
xchg
pop
test
mov
jge
xor
scas
icebp
add
and
xlat
add
add
add
invd
ljmp
xor
jae
sbb
sbb
pop
fcoml
adc
cld
add
movsb
inc
out
loopne
and
scas
scas
scas
sbb
test
pushf
jecxz
stc
test
mov
xchg
pop
adc
pushf
ret
mov
dec
pop
adc
add
cmp
jle
push
add
mov
add
sar
or
sub
bound
xor
push
pushf
add
es
test
pop
xchg
scas
mov
adc
add
adc
add
lock
aaa
adc
add
cmp
addb
add
aaa
and
add
jns
mov
jns
test
add
add
add
sub
and
out
lcall
lret
lret
add
pop
aam
das
cmp
jns
stos
xor
and
es
sub
pop
mov
cmp
aam
dec
sub
popf
mov
sub
mov
pop
pop
rclb
fdivr
cmp
shl
pop
iret
or
jae
and
add
lahf
lea
into
xchg
sahf
mov
nop
add
pop
std
push
imul
adc
lds
xchg
imul
push
fs
push
dec
cmp
aad
or
jecxz
cs
rclb
adc
iret
cmp
cmpb
fstl
mov
add
mov
add
hlt
pop
mov
or
cmp
push
mov
lahf
pop
jmp
popf
out
lahf
xchg
jmp
lahf
lahf
in
andl
in
leave
sarl
call
jge
bound
mov
push
jp
popa
jmp
sarl
xorl
nop
popf
jle
nop
xchg
jmp
add
add
add
cmp
inc
out
and
inc
in
xor
cmp
das
jmp
fdivrs
jbe
test
outsb
mov
mov
out
outsb
push
pop
daa
or
inc
and
call
cmp
dec
adc
loopne
cmp
in
int3
sub
add
add
cwtl
push
inc
pop
movsb
cld
push
push
pushf
pushl
add
pop
add
add
add
push
pop
jo
pop
push
mov
add
mov
xchg
ss
xchg
nop
xor
das
push
add
pop
jmp
sub
mov
xor
daa
mov
add
lret
jns
cmp
hlt
sub
loop
arpl
addr16
aaa
adc
push
inc
popl
dec
push
pop
or
test
xor
add
add
add
in
gs
push
imul
popa
test
pop
add
cmp
in
dec
adc
sbb
pop
sub
inc
sbb
sub
push
sub
popa
stos
add
pop
outsl
pop
jb
fcomps
int3
pop
bound
sub
jp
addr16
dec
pusha
add
dec
jo
jae
cmp
fldcw
pop
push
add
iret
pop
bound
push
ret
adc
gs
dec
fs
inc
inc
sbb
inc
push
arpl
xor
cmp
je
in
jo
and
add
stc
sbb
jnp
iret
es
shrb
sub
adc
loope
das
adc
mov
cld
cmc
imul
icebp
adc
add
add
ficoms
jmp
pop
pop
push
mov
sub
inc
rep
sub
or
dec
add
dec
xor
or
dec
icebp
popa
arpl
dec
pop
add
and
push
loope
push
xor
daa
push
and
inc
adc
test
and
jnp
and
pop
adc
xchg
movsb
mov
inc
cmpsb
fsubp
jno
add
add
fsubrs
stos
pop
xchg
mov
push
adc
mov
cmp
lods
idivl
xchg
cmpl
fnsave
and
cld
add
enter
repnz
arpl
std
clc
data16
jecxz
push
in
pop
adc
add
or
pop
sbb
add
sbb
or
add
add
add
pushl
mov
xlat
add
int3
stc
into
shr
enter
adc
add
cmc
push
pop
mov
in
cmp
mov
push
xor
lods
lcall
hlt
incb
pushf
xchg
out
fdivrp
ds
out
ficomps
mov
std
sub
push
sbb
add
jb
int
xchg
add
add
add
mov
mov
inc
int3
cltd
rcrb
xchg
mov
mov
stos
add
pop
stos
add
pop
adc
ds
aam
and
scas
hlt
adc
mov
xor
jno
and
adcl
aas
leave
sbb
gs
adc
adc
add
cmc
adc
push
jae
loop
sbb
add
dec
adc
add
xor
mov
pop
iret
xor
dec
adcl
jp
ja
mov
push
dec
scas
sub
repnz
daa
cmp
test
cs
pop
mov
fldenv
gs
iret
adc
add
inc
inc
sub
push
jbe
and
mov
sbb
decb
push
add
cmp
repnz
add
add
lret
cmp
adc
popf
cli
gs
add
add
inc
bound
xor
mov
arpl
nop
dec
push
stos
lea
jno
mov
mov
xchg
jb
xor
mov
dec
imul
add
mov
rcll
test
shr
pop
adc
pop
mov
je
inc
add
add
add
jb
mov
stc
mov
ret
cmp
jp
sbb
jne
adc
insl
mov
fwait
call
scas
call
in
jmp
push
add
leave
popa
jns
jmp
inc
pop
push
hlt
in
aas
pop
or
jb
pop
push
dec
inc
aad
pop
push
mov
jo
sti
jge
mov
add
add
testl
jb
xor
repnz
daa
cli
push
daa
sbb
and
es
add
ficoml
test
out
mov
movsb
bound
mov
pusha
insl
add
test
and
sbb
les
xor
xlat
jmp
cmp
and
add
in
adc
testb
into
or
add
add
add
out
or
cld
adc
ja
decl
pop
push
sbb
push
or
push
sbb
add
ret
imul
add
rol
jb
test
outsb
into
in
mov
lcall
fdecstp
movsl
mov
in
sahf
add
adc
mulb
cld
or
cmc
add
add
add
in
add
sbbl
adc
mov
xor
cs
push
mov
mov
mov
push
xchg
xchg
arpl
inc
mov
arpl
cmp
or
adc
mov
cmp
inc
daa
pop
push
push
pop
insb
cmp
push
dec
adc
in
scas
scas
ffreep
stos
nop
xlat
mov
add
add
rcrl
pushf
aas
into
jo
or
mov
out
pop
sbb
clc
test
fwait
mov
adc
pop
adc
lea
xchg
add
xchg
push
aam
mov
inc
in
mov
mov
mov
fnsave
add
loopne
mov
mov
js
repz
mov
add
adc
in
add
add
pop
adc
cmc
addr16
add
clc
idiv
pop
push
push
add
push
add
push
xchg
ds
cmp
jge
inc
add
inc
inc
add
cmp
pop
cmp
mov
inc
add
inc
je
pop
sbb
ja
popa
addr16
insb
ljmp
add
inc
je
sub
popa
cs
into
push
addr16
insl
das
add
add
add
adc
add
xchg
add
adc
add
adc
add
adc
add
adc
add
adc
add
xchg
in
test
pop
mov
or
inc
pop
or
cmp
gs
pop
push
les
push
fsts
fimuls
hlt
arpl
dec
pop
fwait
add
insb
add
mov
add
add
jle
pop
jl
aas
pop
outsl
ret
mov
inc
pop
imul
movsb
mov
mov
add
pop
call
and
pop
add
add
pop
adc
pop
add
and
pop
or
int3
add
adc
add
mov
or
adc
fistpl
adc
fistps
adc
add
add
add
adc
fistpl
adc
fcomps
adc
enter
das
pop
adc
daa
sbb
adc
add
adc
add
adc
inc
xchg
push
jnp
jg
dec
add
adc
inc
xchg
push
dec
pusha
cwtl
sub
inc
cmpsl
dec
dec
push
insl
sub
sub
imul
sbb
add
add
sub
adc
std
nop
push
add
mov
jp
dec
add
push
add
dec
add
mov
scas
mov
lea
add
dec
out
mov
pop
push
push
dec
jecxz
jmp
mov
in
mov
sub
leave
pop
adc
stos
nop
and
mov
negl
sub
or
pop
add
add
add
arpl
mov
add
das
je
sahf
pop
push
jae
pop
inc
bound
push
jae
imul
pop
inc
add
lods
inc
add
lods
inc
add
test
inc
add
pop
inc
add
lods
inc
add
lods
inc
add
in
inc
add
cwtl
ds
cwtl
ds
xchg
add
inc
add
inc
add
out
inc
add
add
add
jbe
inc
add
adc
stos
pusha
jae
mov
dec
jnp
arpl
and
icebp
cmp
inc
popf
in
ds
cltd
add
dec
xchg
in
dec
xchg
sbb
push
sub
les
and
int3
push
pop
daa
sub
and
aas
push
popa
fs
or
aaa
push
pop
insb
or
add
pop
test
add
inc
inc
and
inc
add
add
add
cmpl
dec
push
cltd
xor
test
mov
sub
fwait
pop
gs
xchg
push
insl
rolb
jne
das
dec
jns
push
xor
sbb
std
xor
jmp
dec
pushf
icebp
clc
repz
clc
repz
jmp
dec
sbb
call
add
adc
add
adc
add
adc
add
add
add
sbb
or
adc
pop
adc
add
adc
push
adc
sbb
pop
sbb
push
push
adc
sbb
daa
pushf
adc
add
jmp
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
add
add
pop
adc
and
pop
adc
jmp
sub
mov
pushf
pop
xor
lcall
rcrl
push
pop
sub
outsl
push
je
pushf
inc
inc
mov
or
mov
stos
scas
dec
icebp
push
fiaddl
mov
lcall
cmp
add
add
inc
or
ds
mov
inc
and
add
jl
sbb
in
add
xchg
mov
pushl
mov
test
dec
adc
fildl
lea
rolb
inc
sbb
adc
push
scas
movsl
movl
popf
pop
and
inc
push
push
in
jns
and
in
punpckhdq
inc
add
add
add
fildl
add
dec
or
pop
lods
inc
push
sahf
mov
out
outsb
mov
ret
push
mov
imul
fmull
mov
inc
rcr
sbb
xor
sub
testl
cmpsl
push
mov
push
pop
ja
cmp
push
inc
add
add
add
mov
add
sbb
push
mov
imul
add
jg
add
mov
and
out
addr16
push
jmp
add
leave
mov
in
add
push
lea
xchg
or
push
imul
sahf
hlt
test
aam
scas
inc
cmp
ret
push
or
ret
lods
sbb
add
add
add
aaa
hlt
mov
sar
stos
icebp
test
add
iret
lock
adc
add
sub
cwtl
push
mov
pop
cwtl
xor
orl
lods
adc
aas
jmp
imul
call
std
dec
inc
jmp
popf
adc
jne
dec
pop
stos
stos
cwtl
lock
add
add
stos
adc
inc
jmp
aam
push
sbb
sub
arpl
pop
jb
mov
aam
adc
jmp
leave
out
push
pop
sub
push
adc
mov
in
leave
sbb
push
jne
inc
add
mov
add
add
repnz
pusha
repz
jne
add
add
add
stos
pushl
mov
push
cmp
ljmp
jb
jae
rcll
pusha
inc
adc
add
je
pushl
test
pushl
pop
add
xor
add
inc
insl
add
inc
xchg
pushl
adc
movb
jns
cmp
jne
pop
cli
push
addb
add
add
jae
push
jne
test
inc
add
pop
cmp
mov
cmp
test
loop
inc
add
incl
jne
rcrl
jne
cli
push
cmpb
add
in
xor
inc
testl
push
jp
cmpb
add
pop
in
pop
cmp
inc
pop
mov
adc
push
cmpb
add
add
add
push
out
clc
lret
shll
jecxz
xchg
adc
dec
xor
add
sub
pop
imul
inc
pop
and
and
mov
test
and
push
and
inc
ficoms
add
add
pushf
sbb
jnp
repz
cmp
jae
mov
test
cmp
and
cmp
call
addl
jmp
inc
pop
das
add
dec
inc
jmp
sbb
jecxz
mov
dec
leave
sub
add
dec
add
popf
adc
in
xor
pop
add
addr16
add
add
add
in
cmp
jmp
push
fimuls
adc
bound
imul
adc
cmp
cmp
add
cmc
cld
sar
sbb
xor
jmp
out
pop
sti
call
sub
cmp
out
incl
sbb
insl
mov
add
adc
repnz
add
add
add
pusha
add
add
incl
fisubl
inc
add
imul
and
stos
imul
pop
pop
ss
push
daa
mov
cmp
push
add
ja
cmp
or
rclb
xchg
addr16
inc
add
pop
and
xchg
std
addr16
inc
add
push
sub
clc
add
add
add
add
xor
cmpxchg
push
cmpxchg
push
call
out
mov
sbb
fstpt
inc
sub
les
or
lcall
int
push
incb
pop
and
pop
sbb
add
enter
outsl
add
clc
add
pop
or
or
add
add
pop
adc
dec
dec
push
jmp
jne
psubsw
aas
mov
cs
aas
pop
push
add
mov
pop
push
push
jmp
divb
call
ret
xor
popf
jge
or
inc
pop
mov
bound
dec
rcll
sbb
jno
fildl
push
jmp
addb
add
add
out
dec
jmp
dec
cs
cmp
add
sub
pop
inc
add
adc
push
pop
sub
cmpsb
or
out
xchg
or
push
mov
adc
pop
mov
hlt
lods
jmp
int
popf
push
push
rcrl
mov
cs
sub
jno
test
sahf
in
bsr
pop
cltd
lock
or
xchg
cltd
inc
icebp
add
add
add
ds
cmp
jb
loope
ljmp
jbe
out
popf
ljmp
push
xchg
call
xor
jb
test
xor
push
xchg
inc
and
movsb
push
or
mov
lea
xchg
add
test
in
push
push
mov
add
add
dec
mov
add
stc
decl
pop
push
push
ret
dec
clc
pushl
add
inc
aaa
xchg
mov
imul
lea
aas
push
call
repz
and
je
pop
add
pop
movsl
sub
lea
push
or
ljmp
adc
cmpsb
ret
dec
ret
fimull
das
wrmsr
add
add
add
add
jb
xor
mov
mov
sahf
jl
pusha
ljmp
add
mov
push
outsl
jbe
mov
inc
adc
lds
push
in
and
pop
xchg
add
loop
das
pop
fstpl
mov
mov
dec
inc
pop
adc
into
test
cmp
add
add
add
mov
es
xor
pop
and
sbb
imul
mov
mov
lea
mov
mov
cwtl
add
pop
cs
fucomp
xor
out
sbb
lods
loopne
pop
adc
ret
into
sub
dec
movsl
add
iret
out
fcmovbe
jnp
add
add
add
das
sarb
nop
cmp
push
sbbl
daa
sbb
add
and
add
ficoms
dec
push
pop
mov
add
lea
cmp
mov
mul
pusha
enter
jmp
mov
inc
push
pop
mov
lahf
jmp
cltd
adc
not
cmp
add
add
add
cmc
cli
in
xor
inc
jmp
in
sahf
out
aaa
adc
pop
out
cld
add
dec
push
std
cmp
inc
pop
ljmp
jne
xchg
subl
std
lea
insb
sti
incl
inc
mov
lahf
mov
mov
pusha
push
insb
sti
jmp
inc
call
cli
shll
add
add
add
or
arpl
fidivrs
imul
mov
or
push
sti
adc
adc
mov
inc
inc
cmp
je
adc
getsec
adc
pop
pop
cmp
daa
in
push
mov
sub
jmp
scas
icebp
jnp
push
mul
clc
add
je
pop
test
mov
test
fcmovu
push
jge
add
add
add
add
push
dec
inc
lods
pushf
incb
sub
cmc
xlat
mov
fcoml
repnz
jmp
mov
and
test
xchg
mov
insl
call
xor
pop
adc
jle
mov
loopne
xchg
and
sbb
dec
test
scas
add
add
add
popf
cmp
pop
loop
pop
sub
ljmp
adc
loop
mov
mov
cmpsb
inc
stos
sahf
out
pop
xchg
mov
cwtl
add
adc
adc
fcompl
insb
inc
jp
jbe
jb
arpl
or
jmp
dec
dec
inc
inc
push
mov
test
fstpl
imulb
pop
and
add
add
ret
aam
mov
leave
cld
push
into
xchg
sub
pop
lcall
lds
jb
ds
jmp
stos
sub
in
cmp
test
cld
push
and
rcrl
insb
lcall
mov
dec
inc
cld
jns
inc
jmp
add
mov
add
push
add
push
inc
inc
add
sub
dec
psubsb
insb
insb
std
mov
movsb
push
inc
notl
iret
call
adc
test
pop
out
mov
fwait
orb
str
lar
push
mov
dec
add
clc
push
rolb
add
add
ljmp
scas
push
push
dec
push
push
call
mov
in
push
add
pop
xchg
mov
cmp
add
mov
arpl
fucomi
std
xorl
lods
adc
mov
push
inc
pop
js
and
jecxz
add
clc
sbb
add
add
add
rcr
sbbl
scas
mov
les
imul
dec
call
dec
add
jp
dec
das
das
pushl
sub
add
mov
add
fldt
pop
xor
adc
pusha
xor
mov
add
pop
adc
fwait
jge
jmp
pop
pop
adc
push
mov
jne
mov
inc
lods
add
jns
add
add
add
push
test
adc
pop
xor
test
insb
ret
dec
add
rcrb
fwait
sub
ret
jns
test
lret
add
dec
add
inc
jb
fisubrs
jns
mov
jo
jge
mov
add
pop
mov
aam
add
mov
call
rolb
add
or
push
lahf
mov
pop
movsl
pop
test
mov
fs
cld
push
mov
call
jo
cwtl
cltd
inc
adc
mov
out
adcl
insb
or
push
into
outsl
push
adc
mov
pop
adc
sets
dec
push
add
iret
mov
aas
rcl
push
out
jmp
pop
adc
add
mov
add
add
add
sbb
cli
lock
inc
sbb
sub
xor
fsubrp
pop
inc
aaa
jl
cmp
adc
pop
dec
iret
add
lret
andl
push
mov
insb
std
incl
popa
push
push
rolb
adc
xchg
mov
lahf
add
add
push
out
mov
dec
leave
ret
add
add
add
jp
adcl
push
pop
sbb
mov
out
push
lods
cmc
sub
js
inc
mov
push
or
push
push
push
inc
pop
pop
lret
sbb
cmp
call
aad
out
push
lcall
mov
push
add
push
push
aad
sbb
int
lods
sub
push
push
test
stos
adc
mov
adc
add
add
sahf
test
enter
mov
pop
jbe
push
sbb
fisttps
ds
fwait
cmpsl
push
xor
jne
jp
push
mov
adc
fcmovnbe
icebp
xor
out
sub
add
inc
pop
test
pop
xchg
test
inc
sub
jl
in
adc
lods
add
adc
ret
ds
loop
mov
out
add
add
add
xor
add
cmp
jecxz
mov
aas
pop
mov
pushf
stos
cwtl
add
add
std
xor
in
lods
cmp
mov
test
sarb
push
mov
fs
add
add
inc
adc
sbb
pop
dec
adc
pop
test
mov
xchg
mov
and
ret
sub
outsb
dec
mov
lods
add
add
add
adc
jo
add
clc
mov
push
xor
add
xchg
xchg
dec
inc
lea
and
inc
lds
call
push
push
add
push
insb
cltd
in
aas
xor
sti
iret
call
inc
aad
lcall
adc
add
hlt
lea
cli
add
les
and
add
add
mov
push
stos
and
or
sub
aaa
or
push
ret
mov
add
jmp
das
adc
add
sbb
add
aas
call
mov
or
pop
adc
call
jp
and
mov
incl
js
iret
testb
inc
adc
sahf
add
psubsb
jmp
add
add
fbld
test
aas
and
ret
pop
stos
ja
inc
ret
pop
aam
addl
add
add
pop
sub
out
fisubs
xlat
in
sub
xchg
fisubs
pop
mov
jg
rcll
jns
jp
push
push
jmp
fisubrs
jecxz
ficomps
sbb
pop
das
das
and
dec
add
or
test
jne
push
add
add
add
push
add
mov
test
add
adc
loopne
pop
int3
add
adc
jp
rolb
cltd
adc
jbe
in
mov
pop
adc
add
je
inc
cmc
aas
pushf
insl
xchg
ljmp
or
sbb
loopne
cmp
jbe
in
mov
int
hlt
movsb
int
cld
push
jmp
add
add
mov
into
inc
add
sub
out
add
adcb
pushf
not
mov
call
add
adc
jmp
inc
or
lock
and
jmp
pusha
push
add
mov
and
sub
push
add
xor
orl
lret
xor
and
add
add
or
jmp
add
stc
jb
loope
popf
inc
xchg
nop
xchg
loop
jmp
pop
pushf
push
insb
mov
loopne
pop
cmc
rcrl
pop
adc
insb
sbb
mov
add
dec
push
insb
mov
pop
pop
cltd
add
lahf
adc
jmp
adc
add
add
add
movsb
push
pop
pop
mov
xchg
ljmp
lods
cld
call
dec
push
mov
mov
add
ja
cmpsb
push
xchg
add
mov
fs
ret
adc
sbb
lea
std
push
mov
or
pop
out
adcl
add
pop
lret
ret
inc
movb
add
add
pop
stc
scas
xor
add
push
cmp
adc
inc
and
sarb
mov
aam
lcall
aas
pop
sti
or
xor
clc
daa
pop
lret
ret
jge
inc
es
aam
loop
add
mov
push
add
es
js
lea
mov
sbb
add
add
push
ljmp
shrl
inc
and
jmp
and
cmp
cmp
jns
pop
pop
adc
sub
adc
or
mov
xchg
test
gs
sbb
insl
jns
orw
jns
inc
add
inc
jg
rcl
out
adc
mov
add
add
add
sub
aad
mov
enter
add
adc
xor
lcall
cmp
mov
mov
pop
mov
mov
ljmp
adc
out
xor
dec
push
adc
push
mov
sub
mov
cs
and
pop
adc
lea
add
add
add
add
lea
jmp
adc
add
cmp
mov
data16
std
in
inc
jmp
mov
add
inc
shlb
pusha
add
adc
add
lock
push
ret
adc
dec
and
call
mov
mov
add
and
xor
hlt
pop
inc
mov
push
add
not
decl
inc
jmp
mov
push
push
jae
test
push
das
push
push
cmp
call
stos
aam
testl
or
out
insb
les
adc
add
mov
int3
pop
out
xchg
adc
sub
sub
popf
aad
cmp
or
pop
or
xlat
add
add
add
add
mov
xor
jle
inc
add
inc
js
adc
fidivl
push
xor
inc
pop
push
js
pop
jp
xor
fadds
fcmovne
push
push
aad
stos
xor
mov
in
add
sbb
fbstp
push
aad
test
push
adc
add
mov
xor
add
add
aad
sbb
pop
adc
add
insl
pop
pop
adc
sub
fisubrl
mov
divb
or
mov
ficoml
dec
das
pushf
arpl
inc
shrl
pop
adc
cmpl
test
inc
mov
xchg
mov
sub
call
popf
add
add
add
push
xor
and
hlt
xchg
adc
and
mov
sub
addr16
mov
and
sti
popf
adc
xlat
dec
pop
xor
clc
add
jmp
mov
adc
mov
push
ret
call
or
ret
mov
fxch
jae
ja
call
mov
push
mov
je
add
adc
sarb
push
add
adc
int
add
decb
add
xchg
mov
shl
in
add
xchg
ljmp
fcomip
push
lcall
ret
call
adc
call
jnp
jae
jl
mov
jg
ljmp
cwtl
push
cwtl
dec
data16
push
xchg
dec
cwtl
pop
fisttpl
add
nop
mov
add
into
cmpsb
roll
adc
ret
push
ljmp
adc
call
psubusw
add
push
test
jb
push
inc
xchg
mov
subb
push
jle
mov
dec
testb
lock
jecxz
aad
ficoms
in
mov
add
add
add
or
xchg
adc
pop
in
ficoms
aad
ficoms
fists
stos
add
or
aad
lods
jns
jp
test
jp
xor
push
cmp
xchg
xchg
decb
sub
push
pop
mov
jae
shr
mov
xchg
or
in
ljmp
shr
fadds
add
add
or
jmp
lcall
cmp
loop
ljmp
xchg
or
fisubrs
sbb
adcb
lea
adc
adc
add
out
imul
adc
rorb
jmp
xchg
stos
in
call
add
inc
int
hlt
stc
pop
inc
jmp
ds
in
sub
xor
repnz
sub
mul
cmp
add
imul
inc
jmp
ss
cmp
pop
int3
xchg
fs
sub
dec
xchg
pop
xchg
roll
addr16
cld
add
add
add
xchg
test
add
insl
mov
mov
adc
jbe
adc
jmp
or
or
add
cwtl
test
fwait
mov
mov
test
iret
add
aaa
mov
add
pop
rolb
adc
mov
ss
call
sbb
add
add
add
and
jae
adc
adc
ret
push
sbb
or
fs
enter
jg
and
adc
aaa
pop
out
or
cs
or
add
mov
out
pop
jp
fimull
pop
pop
jp
add
jmp
mov
cmpb
jp
ss
into
push
mov
add
add
pop
mov
stos
imul
or
stos
push
cmpsb
jp
mov
jae
xchg
pop
jp
lea
dec
testb
xor
inc
fwait
add
jbe
add
rol
adc
jmp
ret
loope
add
fstl
sub
lret
sbb
andl
sub
add
add
movb
pop
sbb
insb
shr
mov
sub
add
sub
push
lock
test
ret
cltd
xchg
movsb
fbld
ret
sbb
icebp
xor
push
inc
sbb
cli
inc
pop
std
out
dec
sub
je
popa
cmp
sar
and
enter
cli
xor
jmp
dec
pop
or
add
add
add
push
sub
pop
adc
call
outsl
jecxz
cmp
xchg
in
pop
fisttpll
mov
repnz
icebp
jbe
lea
imul
inc
jmp
cs
fcompl
and
dec
adcb
mov
popf
adc
leave
loopne
test
out
mov
and
add
add
add
nop
ss
pop
adc
orl
je
jl
jmp
jmp
nop
leave
add
push
push
decl
xchg
rorl
sbb
push
loopne
adc
test
adc
call
fcoml
roll
lahf
dec
cli
jmp
popa
hlt
testb
add
add
je
inc
pop
adc
cmpsb
std
adc
dec
mov
pop
fimuls
sub
aas
or
add
xchg
stos
add
cmpsb
fimuls
jne
into
iret
and
mov
cmp
mov
xor
enter
pop
pop
or
add
sbb
int3
add
scas
test
lahf
ljmp
dec
inc
add
add
add
lret
adc
insl
sub
push
les
pop
jmp
add
mov
inc
add
jge
in
jnp
inc
adc
pop
imul
xlat
fs
xchg
mov
jg
adc
xchg
or
pop
adc
xchg
pusha
cmp
cld
pusha
xchg
pop
aad
jg
xchg
adc
add
add
add
mov
sub
cmp
inc
sbb
das
jp
outsl
aas
sbb
xchg
out
pop
mov
adc
add
aam
add
popa
pop
pop
inc
sub
cmp
add
xor
movd
movl
clc
sbb
getsec
push
adc
aas
es
or
add
add
movsl
or
imul
sub
fdivrs
pop
dec
push
adc
test
pop
adc
sub
shlb
or
inc
in
shlb
or
cmpsb
xor
sub
mov
adc
add
mov
push
xor
mov
push
mov
movzbl
add
add
mov
shl
jl
rdtsc
pop
mov
imul
loope
jl
mov
inc
add
ret
inc
imul
ja
andb
add
cld
mov
mov
cld
dec
and
clc
andb
add
fadds
ret
decl
stc
xchg
and
adc
add
add
push
pop
xchg
pop
pop
pop
or
shrl
psrad
add
pop
out
pop
idivb
clc
inc
cmpsb
adc
frstor
sbb
sbbl
imul
sub
jmp
pop
incl
add
cmp
mov
mov
xor
pop
push
lret
push
and
imul
pop
add
add
add
add
adc
add
lcall
sub
rcrb
and
jmp
shlb
push
pop
xchg
loope
add
inc
sub
jmp
stos
aad
les
pop
shll
leave
out
pop
hlt
jp
or
imul
jl
xor
in
mov
psubsw
add
add
add
roll
mov
popl
jns
scas
jl
xor
add
jp
or
pusha
ret
cs
sbb
mov
addr16
mul
lcall
pusha
inc
xor
sbb
push
xor
sub
xor
dec
or
lea
sbb
daa
lahf
mov
icebp
movsb
jecxz
pusha
add
add
add
cwtl
loopne
push
fistps
mov
and
xor
add
pop
dec
cmp
rolb
jmp
sbb
lea
xor
mov
jbe
dec
stc
dec
and
cltd
mov
subl
jnp
es
mov
and
cmp
jb
cli
inc
add
add
add
outsb
shll
sub
aad
mov
push
addb
pop
cmp
test
add
sub
and
shl
punpckhwd
add
push
jge
enter
mov
add
ja
or
cmp
cmp
jl
addl
and
into
shlb
and
into
pop
divps
add
ja
andb
add
add
add
xchg
pushf
aad
jbe
and
mov
adc
sti
mov
data16
mov
insl
shl
xorl
in
mov
loope
xchg
fsin
add
pop
arpl
add
out
jecxz
pop
push
jae
pop
jg
inc
outsl
test
pop
push
sbbl
add
sub
jg
xlat
ss
xlat
loopne,pn
clc
js
jae
push
jg
add
add
add
std
push
test
add
sbb
adc
loopne,pt
cmp
jecxz
jo
sbb
jb
adcb
xor
sbb
fidivl
and
nop
sub
jl
sub
pusha
cmp
loope
mov
incb
fisubrl
jle
sub
out
add
add
add
adc
movsb
popa
or
jle
pushf
call
add
mov
popa
or
ja
call
sub
daa
push
lods
mov
sub
and
cmp
push
insb
imul
and
decb
inc
jmp
loopne
cld
dec
pop
inc
jmp
dec
aas
mov
pop
push
mov
add
add
add
fcomip
rorb
cmp
jmp
or
test
lret
dec
sub
popf
mov
sub
jl
xchg
add
mov
mov
sub
jmp
aaa
jns
mov
pop
or
sbb
aaa
fwait
xor
pop
adc
mov
add
add
rclb
movzbl
or
loop
je
mov
incl
incl
adc
and
rclb
jl
pop
mov
jmp
cmp
jnp
sub
and
sub
orl
dec
adc
aaa
xchg
pop
add
add
testl
inc
imul
call
jge
add
add
add
mov
bound
icebp
push
push
mov
push
add
sub
xor
xchg
xchg
fucomi
dec
push
stos
add
push
add
mov
add
scas
fiadds
testl
pop
push
psubsb
xor
pop
push
add
addr16
mov
xchg
add
add
orb
add
mov
dec
loope
cs
mov
jmp
xchg
adc
add
jno
inc
and
inc
push
push
hlt
lret
push
sbb
or
pop
add
jne
xchg
in
in
jae
dec
xchg
adc
dec
and
sub
mov
fwait
add
out
jp
add
add
in
test
inc
sbbb
js
nop
and
pop
inc
leave
sub
hlt
cmp
in
add
adc
pop
add
adc
jae
fisubs
int
test
or
mov
pop
fnsave
movsb
mov
pop
adc
jmp
pop
adc
jmp
add
add
add
pop
push
lahf
cmp
add
push
fldl
xchg
fdivrs
add
adc
pop
call
hlt
push
add
std
xor
cmp
xor
and
orl
xchg
cld
mov
push
cmp
mov
shrb
push
jecxz
std
bswap
pop
sbb
inc
jge
dec
add
add
add
jge
inc
xor
mov
jmp
sub
mov
add
pop
stc
inc
and
cwtl
jle
imul
add
es
enter
jge
and
add
pop
pop
imul
and
jg
pop
add
and
adc
xchg
repz
shl
outsl
mov
push
add
add
add
pop
sub
sar
pop
and
ds
std
ret
loopne
add
xor
mov
jb
adc
mov
jns
cmpl
add
pop
repz
neg
xchg
pop
jp
mov
ficomps
loop
int
pop
adc
fcomps
adc
add
popf
int3
addr16
js
add
add
pushf
cmp
hlt
lret
fsubrp
jp
xor
out
mov
pop
sbb
adc
xor
out
mov
sbb
fnsave
add
sbb
nop
fnsave
mov
adc
add
xchg
les
fmuls
sub
pushf
or
loope
call
jge
add
add
pop
adc
cmpsb
xor
insb
sbb
clc
test
add
in
sbb
pop
xchg
out
xor
fcompl
add
popf
cwtl
imul
lcall
mov
pop
call
popa
outsb
mov
adc
jmp
and
add
fsubl
add
fstps
pop
movsb
outsl
mov
or
test
add
sbb
pop
fisubrs
out
out
sbb
pop
push
mov
bound
mov
mov
shl
pop
enter
jnp
repz
add
adc
sahf
cmp
outsb
mov
ss
add
test
inc
jbe
add
adc
jns
ja
movzbl
adc
mov
pop
shl
sbb
jnp
add
add
add
adc
pushl
popf
pop
je
cltd
and
adc
jae
sub
and
add
pop
mov
mov
jno
adc
movb
fwait
daa
push
pop
js
clc
push
cld
daa
push
pop
js
mov
pop
fiadds
pop
js
jg
js
dec
imul
fdivr
rclb
add
jg
add
add
add
add
pop
das
xorl
mov
out
push
mov
mov
mov
pop
jp
imul
add
pop
adcl
mov
adc
inc
sbb
dec
pop
jp
jmp
mov
sbb
fs
xor
jmp
fld
movsl
int3
fistps
jmp
add
mov
or
jmp
daa
cmp
jmp
fistps
jmp
ret
jae
fisttpll
inc
adc
push
test
out
adc
ljmp
jp
add
sbb
inc
xlat
fwait
jg
pop
lock
bound
mov
sub
pop
jb
loopne
pop
add
mov
add
add
add
add
das
pop
call
pop
insb
mov
mov
push
push
imulb
pop
call
jbe
add
pop
insb
mov
mov
pop
hlt
testb
mov
jmp
lock
out
faddl
fisubrs
adc
mov
js
xor
lds
mov
sti
cmpsb
mov
sbb
loope
add
add
push
pop
mov
cli
aaa
rorl
cmc
sub
pop
cwtl
mov
adc
add
xorl
add
push
mov
dec
lcall
mov
sub
cmp
sbb
mov
pop
and
add
cmp
add
pop
psubq
sbb
xchg
pop
psubq
sbb
ja
pop
je
sub
add
add
add
movsb
incl
mov
xor
inc
and
iret
loopne
xor
xchg
pop
cld
add
pop
int
adc
sbb
inc
aas
xlat
cmp
dec
out
les
in
push
sub
orl
and
call
mov
add
jae
pop
ja
daa
dec
pop
js
jg
testl
pop
js
mov
add
add
loope
add
pop
icebp
iret
and
dec
jae
xor
add
mov
xlat
cli
xchg
jmp
xchg
mov
icebp
or
adc
imul
inc
pop
adc
jge
push
push
pushf
sub
aad
loopne
jb
cmp
add
out
pop
jp
ja
push
imul
jge
jo
add
add
add
out
pop
sbb
mov
and
or
adc
shl
pop
adc
dec
fdivl
ficompl
xchg
shrl
jno
outsl
mov
rcr
ja
jmp
and
xchg
push
ljmp
push
sahf
out
xor
adc
push
lds
jmp
xor
add
add
add
add
hlt
outsb
jne
mov
jmp
add
add
fiadds
insb
add
add
fdivr
and
xor
jmp
rcrl
mov
jge
add
fidivs
push
call
sbbl
imul
pop
push
jmp
fiadds
out
cwtl
dec
push
add
repz
inc
sub
mov
add
add
cld
cli
pop
adc
adc
pop
aaa
adc
xor
lea
cmp
clc
mov
pop
notl
mov
sbb
mov
cmp
lahf
sbb
inc
insb
mov
cmp
cmp
test
or
add
notb
pop
iret
sbb
inc
pop
sbb
lcall
test
mov
cmp
pop
repz
add
add
add
cwtl
and
adc
jmp
pop
jno
subb
add
out
dec
aad
call
mov
push
mov
mov
xor
orl
jg
pop
js
mov
shrl
in
xor
pop
js
rcrb
rcrl
jecxz
inc
pop
sar
rcrl
ja
shr
mov
cmp
add
add
push
ja
adc
add
adc
out
cmpsb
jbe
popa
sbbl
shr
adc
cmp
inc
adc
shr
aam
shlb
add
add
push
in
sbb
add
aam
insl
je
sub
pop
push
adc
inc
int3
int3
or
push
add
test
pop
aam
out
add
add
add
add
add
int3
aam
pop
sub
push
arpl
or
mov
add
jp
js
fs
rolb
push
js
cwtl
xchg
sbb
aas
jl
sub
jmp
inc
ret
movsl
insb
push
sti
pop
adc
or
lea
push
js
pop
sbb
sub
fs
push
data16
add
add
add
add
push
cmp
inc
adc
sub
adc
mov
or
mov
pop
daa
inc
adc
mov
or
mov
xor
test
adc
push
frstor
ss
addr16
push
shlb
jmp
les
fwait
xchg
inc
push
jecxz
ja
nop
mov
decl
xor
cmp
add
inc
into
call
cmp
jns
pop
les
add
add
add
stos
add
pushf
pop
dec
pushl
jne
mov
or
mov
notl
ud1
mov
or
or
and
shr
and
xchg
push
arpl
add
cmp
xchg
rcrb
rcrb
ja
mov
add
cmc
fcomi
sbb
push
pop
nop
shlb
cmp
xchg
add
out
movsl
adc
adc
mov
pop
js
leave
lahf
out
inc
inc
xchg
sub
push
fcompl
hlt
jnp
imul
js
cmp
push
ret
js
xchg
add
mov
pop
add
test
aad
xor
add
aad
out
cltd
fs
fcoms
mov
lea
ret
cmp
cld
out
mov
add
add
xchg
and
pop
out
rolb
adc
and
add
and
cmc
orl
loope
add
out
adc
adc
pop
push
mov
adc
adc
inc
xchg
sbb
clc
fsubs
jecxz
push
call
mov
add
inc
jne
popa
rcl
test
lahf
add
or
mov
add
add
add
out
mov
jmp
je
sbb
out
scas
in
mov
rcr
call
xor
scas
xchg
pop
push
mov
dec
inc
inc
stos
adc
add
sbb
mov
inc
mov
dec
push
out
pop
cmp
jae,pt
fiadds
or
in
add
push
add
add
add
ret
cmpsb
lods
movzbl
and
mov
outsl
push
call
cmp
insb
pop
adc
aad
push
daa
or
packuswb
add
mov
sub
adc
xchg
pop
pop
rdmsr
stc
push
add
in
pop
or
cmpl
std
sbbb
incl
add
add
mov
addr16
js
cmp
adc
psllw
mov
inc
pop
xlat
jne
cmp
cmp
adc
rcrb
adc
sub
je
sbb
test
ja
call
adc
and
jno
mov
add
test
pop
jb
or
pop
testb
add
das
das
ds
adc
pop
dec
rcrl
pop
push
add
xor
add
inc
cmp
les
or
jo
popa
jle
mov
popf
adc
mov
shlb
jno
adcl
jo
insb
decb
dec
mov
xorl
sbb
pop
xchg
adc
loope
data16
add
add
add
jmp
adc
or
popa
adc
add
test
mov
push
and
adc
xchg
pop
and
add
insl
repnz
das
pop
and
add
sbb
outsb
pusha
pop
cmc
mov
addr16
roll
test
testb
xchg
call
dec
inc
adc
cs
xor
add
add
add
popa
xchg
aad
or
sbb
adc
add
dec
fildl
pop
push
lds
mov
jmp
pop
pop
mov
or
imul
pop
xchg
rdmsr
cs
cmp
pop
adc
mul
adc
shr
adc
pop
ret
sbb
pop
push
repz
pop
push
aaa
mov
adc
enter
ljmp
pop
ljmp
and
test
add
mov
xchg
adc
bound
mov
ret
adc
push
arpl
out
aam
jmp
and
std
push
insb
insb
rolb
xor
mov
js
inc
mov
loope
dec
jmp
xchg
aad
xchg
movzbl
adc
shl
and
add
add
add
pop
xchg
rolb
mov
dec
add
aas
pop
mov
inc
fimuls
into
push
and
inc
movsl
inc
add
push
and
lods
push
and
inc
push
inc
and
nop
ret
add
dec
sub
inc
adcb
mov
loopne
dec
sahf
push
sarl
pop
cmc
inc
push
and
adc
mov
sub
pushf
es
add
add
jecxz
std
add
insl
insl
sub
mov
adc
cmp
push
rolb
pop
push
aad
in
pop
out
sbbb
sahf
jae
insl
dec
push
sub
lcall
inc
orb
shll
daa
enter
in
sbb
cmpsb
adcl
adc
cmp
add
add
pop
rorl
insb
lods
xor
add
mov
mov
push
xchg
or
dec
adc
add
xor
xor
andb
jb
mov
in
das
and
imul
jecxz
das
adc
jno
adc
fistpll
push
jge
inc
or
sub
add
add
orb
jg
adc
mov
push
dec
mov
jp
jle
sbb
xor
pop
and
jo
xor
pusha
add
push
lahf
sbb
shrb
inc
or
mov
jmp
mov
add
int3
and
add
and
fcomps
incb
orb
mov
add
rorb
mov
les
stc
lret
or
jnp
mov
jae
aaa
adc
mov
pop
rorb
rcr
cmp
sbb
fisttpll
inc
test
push
or
add
and
adc
sub
jle
fadds
pop
sub
cmovae
ljmp
or
incl
add
add
cld
nop
and
add
cmp
add
inc
insb
xchg
mov
ret
push
adc
ja
add
push
decl
ret
add
mov
icebp
pop
aas
imul
sbb
jbe
dec
push
jge
dec
pop
mov
pop
loop
setge
adc
cmp
pop
push
pop
call
imul
add
add
mov
or
imul
sub
mov
or
psubsb
lods
add
jl
std
iret
dec
sub
mov
movsb
push
and
std
xor
mov
out
sub
xor
push
xor
aam
rcrl
rol
xor
cmp
cmc
test
add
les
les
mov
inc
push
dec
jl
shrb
mov
push
jne
push
int3
call
aam
adc
add
mov
or
xlat
int3
add
xlat
in
or
lock
jb
cmp
pop
add
mov
dec
mov
int3
dec
jno
enter
pop
push
inc
nop
add
add
add
add
setg
jnp
dec
rorb
jg
sbb
add
pop
sbb
add
mov
shll
sub
and
cmp
gs
push
and
pop
add
add
add
mov
jle
lret
lcall
cmpsb
mov
pop
adc
ja
mov
xchg
and
add
add
add
leave
orb
add
aad
and
sldt
mov
imul
mov
out
pop
andb
add
pop
adc
cmp
xor
dec
in
mov
inc
push
add
jl
std
mov
dec
push
inc
std
mov
dec
inc
ljmp
push
xlat
leave
call
cld
nop
mov
add
cmp
add
or
add
push
and
dec
and
test
adc
add
in
pop
inc
pop
push
je
dec
dec
jne
xchg
inc
aas
out
cmp
xor
inc
nop
push
xor
jbe
sahf
imul
sbb
aas
out
and
adc
push
fstpl
lods
add
add
add
popf
push
mov
mov
sbb
xlat
movsb
push
sub
sub
testb
dec
push
and
arpl
outsl
push
mov
cmp
dec
add
rol
add
push
call
mov
pushf
shlb
js
shl
add
sub
dec
mov
adc
jle
add
add
icebp
addr16
xorl
jmp
das
mov
out
pop
xchg
add
push
gs
adc
jge
out
pop
shlb
pop
push
mov
mov
xor
push
cs
call
pop
sbb
jae
add
mov
add
add
add
mov
sbb
cltd
cmp
xor
inc
xor
mov
inc
mov
dec
mov
roll
jmp
jp
cmp
push
and
fidivrs
aam
and
jno
add
pop
lds
jb
add
xchg
lock
jmp
mov
add
mov
popf
pop
add
add
add
mov
mov
incl
mov
and
test
std
ljmp
adc
push
ss
mov
xor
add
lret
add
cwtl
and
push
and
or
add
shlb
xor
int3
psrlq
inc
and
ljmp
scas
std
lcall
xchg
inc
jmp
add
add
push
fucomp
in
push
aad
mov
mov
mov
adc
push
rol
inc
aaa
cwtl
inc
pop
stc
gs
aad
test
nop
inc
mov
inc
aad
es
jae
scas
js
mov
mov
push
sahf
cmp
test
popa
xor
adc
cwtl
inc
pop
std
pop
addl
add
mov
push
add
add
adc
imul
adc
das
adc
xor
or
cli
mov
adc
mov
int
pop
add
jmp
mov
xchg
sbb
iret
pop
adc
sbb
cmc
enter
fiadds
pop
lcall
jge
mov
ret
pop
and
add
add
push
dec
imul
fisttpl
test
sbb
push
pop
mov
cltd
mov
jmp
mov
fcoml
adc
jmp
icebp
pop
frstor
inc
and
lret
into
icebp
aas
call
inc
and
in
mov
decl
fdiv
jecxz
push
jmp
add
or
adc
jmp
jno
push
jmp
adc
inc
pop
adc
ss
adc
into
leave
lock
call
mov
dec
test
pop
adc
jmp
dec
fdivrs
add
mov
adc
mov
mov
xchg
add
add
add
xorb
push
xchg
daa
inc
jl
mov
out
dec
mov
mov
repz
add
mov
xor
push
xchg
cmp
shl
cmp
and
psubusw
inc
cmp
pop
btc
add
xchg
inc
and
push
xchg
cmp
push
sarl
lret
fwait
out
jmp
jl
hlt
decl
pop
mov
add
add
mov
out
daa
adc
cmp
add
mov
xchg
add
and
xor
inc
push
add
out
mov
add
cli
pop
sub
popa
mov
in
and
fcoms
or
jp
add
pop
js
inc
jp
mov
cmp
add
cmpb
add
add
add
mov
xchg
and
int
pop
pop
cmp
push
in
mov
mov
push
in
mov
jmp
ret
pop
adc
mov
in
repz
dec
xchg
dec
adc
subb
call
add
adc
xchg
mov
in
out
cmc
sbb
jo
sbb
pop
aam
jmp
add
mov
sbbl
pop
das
lock
test
cmc
or
aam
sub
push
jmp
add
ljmp
pop
push
in
and
bound
and
dec
push
jg
xchg
aas
jb
sbb
lcall
mov
mov
or
sub
add
add
cmp
mov
shll
inc
call
xchg
in
pop
fdivp
int
lock
pop
jb
cmp
sbb
xor
jo
hlt
and
lret
cwtl
inc
cmp
dec
or
add
inc
test
icebp
mov
push
mov
or
jns
fcomi
sbb
mov
add
add
ljmp
stos
adc
jmp
lcall
sub
ud2
xor
add
inc
and
cltd
dec
insb
insb
or
andl
add
hlt
fs
add
inc
mov
jle
inc
cmp
add
adc
rcrb
jne
inc
adc
push
arpl
lret
sbb
rcrb
in
sbb
cmp
sti
xor
cli
sbb
add
add
add
jle
dec
cmp
mov
das
jle
insl
cmp
mov
push
out
inc
pop
rol
push
dec
jge
nop
push
add
lea
and
xchg
andl
mov
add
adc
and
xor
loop
push
add
mov
repz
sbb
mov
jnp
notl
cmp
pop
or
add
add
mov
stc
xchg
adc
call
imul
sbb
mov
andb
jmp
lock
stos
fldenv
adc
mov
test
hlt
pop
sbb
xchg
sahf
rcrl
jge
and
xchg
into
add
add
inc
inc
or
adc
jg
and
add
dec
enter
add
add
mov
dec
add
fidivrs
and
add
int3
out
sbbl
call
sbb
sbb
and
pop
adc
push
notb
adcl
inc
fmulp
adc
mov
je
fidivrl
mov
insb
sahf
pop
add
rcl
and
popf
cwtl
inc
ret
cmp
call
add
xor
mov
or
mul
gs
pop
or
xchg
push
cmp
inc
push
pop
arpl
andb
lds
push
adc
add
aaa
sbb
add
adc
test
inc
mov
cwtl
inc
and
es
mov
add
adc
shlb
inc
and
rorb
add
incl
es
insb
lock
into
icebp
shr
mov
add
add
les
clc
mov
adc
sbb
jle
bnd
inc
sbb
mov
and
inc
incb
jl
cs
pushl
rolb
and
add
mov
mov
pop
mov
pop
pop
cmp
mov
mov
incb
xorb
test
pop
adc
sarl
add
add
add
push
and
pop
cmp
rcrb
xor
loop
add
pop
das
mov
push
mov
pop
pop
cmp
xor
cs
add
in
pop
adc
sarl
mov
insb
call
sarl
ljmp
inc
and
nop
dec
push
pop
inc
in
fs
movsl
sldt
add
add
or
test
pop
popa
adc
mov
int
lock
dec
push
xor
imul
pop
test
int
lock
in
leave
adc
add
mov
addb
push
pusha
jnp
mov
std
jb
pop
scas
les
cmpsl
push
fiaddl
lods
pop
dec
shrl
cmp
pop
inc
jmp
push
test
add
add
add
push
loop
jns
jmp
in
xor
dec
adc
jb
in
adc
inc
dec
jge
mov
xor
push
pop
rorb
push
pop
push
pop
mov
pop
adc
jg
xchg
inc
cmc
push
cwtl
add
inc
and
adc
add
out
and
popf
cwtl
inc
int
push
ret
add
add
jne
inc
int
xchg
mov
popf
adc
jmp
arpl
or
in
decl
or
pop
and
nop
testb
les
inc
adc
icebp
inc
aaa
mov
sbb
or
add
pushw
add
outsl
mov
test
mov
adc
rolb
push
arpl
push
add
add
add
cmp
dec
adc
sub
inc
xor
xchg
sbb
inc
mov
sbb
mov
inc
inc
jo,pt
adc
jo
and
push
lcall
jg
inc
adc
jns
mov
lcall
mov
pop
sub
mov
jg
add
and
mov
cmpsb
add
add
add
add
push
mov
add
pop
pop
xchg
and
mov
out
dec
push
movsl
mov
push
fildl
add
jg
sahf
sub
add
cmc
daa
xor
push
sub
sub
cmpl
add
pop
sub
mov
inc
add
out
mov
and
inc
push
xchg
cmp
daa
mov
add
xor
roll
dec
xchg
or
fiadds
xchg
ds
and
mov
mov
xor
call
test
fldl
into
push
add
shll
fnstsw
loop
dec
clc
xor
push
fdivrs
imul
or
call
cld
mov
pushl
sarb
cwtl
xchg
jns
add
add
add
aas
jb
repnz
inc
push
xchg
pop
inc
or
push
ja
xchg
mul
pop
xchg
loop
or
andb
push
test
aas
aam
cmp
into
pop
mov
inc
stos
pusha
pusha
jnp
mov
out
mov
inc
sub
and
test
dec
pop
xchg
push
or
inc
pop
cmp
pop
adc
insb
dec
cmp
sahf
add
add
add
pop
call
add
and
int3
or
xor
loopne
psubw
cmp
adc
das
cmp
test
int
psubq
testb
loop
test
adc
btc
inc
cmp
mov
mov
sbb
pop
mov
add
add
xor
std
psubsw
sbb
je
or
testb
adc
divps
ret
inc
jne
into
into
movl
imul
std
cltd
mov
mov
mov
add
mov
cld
jns
ret
inc
xor
and
arpl
dec
cmp
sbb
pop
fdivr
mov
add
add
cltd
pop
add
incl
popf
push
into
fiadds
je
adc
scas
imul
incb
dec
mov
mov
add
pop
lods
test
loope
ret
adc
pop
icebp
cmp
cld
fdivrl
orl
aaa
sti
aam
mov
fnstsw
stos
or
cmc
or
mov
add
add
js
add
push
xor
lea
add
or
cmp
daa
jle
and
dec
fiaddl
in
sbb
pop
adc
fldl
aam
add
sub
xchg
cmc
or
cld
sub
push
call
mov
fucom
sbb
cmpsb
and
add
and
mov
add
add
add
mov
push
mov
ljmp
setg
pop
enter
jl
mov
ljmp
and
sbb
loope
add
pop
mov
jmp
pop
cmpsl
add
stc
adc
jmp
inc
fldl
jmp
fldl
jmp
scas
adc
add
orb
add
call
test
cmp
cmp
or
sub
ss
pushl
mov
jnp
add
sub
std
je
push
push
call
pop
add
cmp
and
push
add
pavgb
ljmp
xchg
mov
incl
ret
add
in
push
ss
inc
aam
or
lea
add
add
or
cmp
andl
add
mov
add
inc
repnz
pop
aam
pop
imul
test
pop
sub
xorb
je
ret
xchg
add
add
push
mov
and
sti
mov
sub
add
sti
mov
cmp
and
sub
add
add
add
pop
sbb
scas
add
ja
inc
es
pop
sub
ljmp
dec
add
dec
test
mov
in
or
out
mov
ljmp
adc
pop
movl
pop
rcrl
cld
push
dec
popa
sarb
or
in
orb
jmp
add
add
add
popa
jg
adc
shr
push
jbe
les
pop
mov
push
sbb
cmp
dec
mov
mov
pop
adc
inc
popa
adc
jge
out
pop
rcrl
dec
in
in
call
aaa
mov
mov
add
int3
aaa
mov
adc
jmp
dec
aad
jmp
push
adc
jmp
add
add
add
mov
jb
push
rorb
add
pop
mov
xchg
adc
ljmp
mov
pop
adc
jmp
pop
adc
jb
icebp
inc
call
mov
adc
push
dec
cmp
push
add
inc
rorl
call
mov
jmp
mov
add
add
adc
inc
aaa
jg
mov
imul
and
leave
jb
mov
incl
enter
jns
pushl
adc
mov
icebp
aas
add
mov
or
xchg
and
cmp
dec
lock
add
mov
push
lcall
adc
sbb
lret
xor
add
add
add
xchg
dec
push
mov
inc
cmpsb
add
inc
inc
inc
push
ret
and
add
jge
mov
incb
add
cmp
mov
pop
pop
sub
call
pop
test
pop
sub
or
add
fnstcw
mov
test
inc
mov
dec
out
cmp
dec
mov
pop
sub
cmp
scas
push
in
pop
pop
add
add
add
out
mov
push
and
xor
jns
adcb
or
in
clc
or
leave
test
clc
movsl
xlat
scas
sbb
addr16
mov
outsl
mov
push
xor
test
sbb
jmp
test
adc
ret
int3
int3
ucomiss
popf
nop
jge
out
pop
mov
add
in
in
and
pop
adc
xor
and
adc
add
adc
inc
lods
in
mov
pop
adc
xchg
inc
andl
aad
add
push
aad
cmc
or
call
push
mov
cmc
mov
negb
or
cmp
pop
sub
rcrl
or
add
orl
mov
jle
pcmpeqb
add
shrb
cmp
mov
dec
push
mov
dec
push
mov
pop
into
sub
add
icebp
in
pop
call
mov
adc
arpl
mov
imul
jmp
push
mov
lock
sti
or
add
and
add
add
push
add
push
adc
or
std
test
pusha
mov
cmp
std
jle
and
cmc
jnp
pop
insb
push
pop
cmp
adc
int
lret
add
dec
mov
mov
or
cmp
and
int3
jno
sub
jmp
add
ljmp
sub
push
cli
ret
mov
add
add
cltd
xchg
inc
lret
aam
clc
inc
cmp
xor
jg
cmpb
add
mov
pop
cmp
stc
xchg
pop
pop
cmp
mov
testb
pop
outsl
mov
xor
add
leave
cmpsb
push
pop
pop
cmp
call
fstpt
test
sahf
inc
aad
pop
xor
push
cmpsb
and
test
add
add
add
aaa
add
fstl
out
jns
gs
pop
adc
or
adc
or
cmp
jg
int
add
adc
in
int3
jmp
push
sahf
imul
xor
movsb
test
push
or
in
repz
sbb
dec
aam
jns
adc
enter
mov
jmp
loopne
adc
add
add
add
add
sarl
in
hlt
cmp
pop
adc
test
fistps
jmp
js
int
out
adc
xor
pop
xor
jmp
sbb
cmp
cmp
ss
add
pop
shr
fucomi
fisubl
add
stc
dec
pushf
or
pop
adc
cmpsb
leave
pop
sbb
das
out
adc
sbb
pop
testb
add
add
and
or
sbb
dec
pop
sbb
adc
bound
das
mov
cltd
adc
jmp
xor
pop
call
pop
ss
add
dec
pushl
test
add
add
out
or
std
mov
xor
inc
jmp
sahf
push
and
das
push
and
add
cmp
add
add
lock
xorl
or
dec
push
add
mov
push
add
popf
andb
add
xor
push
dec
push
mov
adc
mov
iret
mov
push
adc
add
push
decl
cmp
pop
cmp
ljmp
mov
or
add
or
cmpl
inc
mov
add
add
loop
loopne
pop
cmp
ljmp
shlb
xor
cmp
or
add
addr16
pop
imul
add
pop
jns
dec
inc
sub
dec
mov
and
gs
mov
testb
pop
lahf
dec
push
leave
scas
out
pop
cmp
push
adc
fistps
jmp
add
add
add
pop
adc
xchg
movsl
popa
sub
push
jg
ja
gs
cmc
mov
sub
adc
add
les
xchg
lds
pop
sahf
push
push
pop
adc
adc
je
inc
sub
adc
xchg
fldt
imul
rcr
rcl
int3
rorl
and
add
push
in
je
jmp
add
in
or
vmovss
gs
mov
mov
sub
loopne
sub
add
pop
xchg
inc
call
loope
add
pop
cwtl
inc
lds
mov
fsubrl
stos
fsubl
push
out
mov
dec
cltd
sub
insb
jle
aas
jmp
call
adc
push
push
jbe
fsubrl
or
ja
clc
insb
add
add
add
add
sub
jmp
push
adc
lcall
push
push
sub
add
mov
or
push
inc
jmp
inc
in
pop
cmovae
mull
mov
push
cmp
fsubl
stc
jle
jp
sub
sahf
add
jmp
in
or
testl
add
push
cmp
dec
aas
cmp
xor
add
xchg
addl
or
xor
add
std
ljmp
negb
add
push
add
cmpsl
inc
bound
add
adc
pop
sub
dec
cltd
lcall
pop
dec
or
inc
cmp
add
mov
pop
pop
cmp
inc
xlat
arpl
nopl
adc
loopne
pop
cmp
pop
pop
cmp
mov
dec
add
pop
pop
js
cmpb
add
mov
add
das
cmp
or
test
adc
aam
pushf
pop
call
in
push
xlat
aad
add
fcomp
call
add
pushf
in
mov
int
adc
nop
insb
add
pusha
cmp
rclb
stos
pop
lcall
pop
adc
lock
mov
or
push
cmpsl
mov
in
or
xchg
sub
adc
add
stos
add
pop
fistps
jmp
rcll
sahf
cmp
in
pushf
add
add
nop
daa
mov
add
add
add
adc
jmp
dec
add
pop
cmp
mov
daa
mov
fisubrl
sbb
add
shll
fstp
mov
pop
cmpsl
adc
push
lahf
adc
mov
enter
jl
test
repz
repz
lcall
loope
or
repz
mov
in
inc
fucom
lret
add
add
add
lret
rcl
punpckldq
mov
xor
lock
or
notb
add
pop
mov
decl
pop
mov
add
adc
mov
inc
add
mov
push
or
add
dec
decb
pop
add
ljmp
add
add
add
push
sti
inc
pop
add
call
test
test
test
pushl
cmc
jae
inc
jmp
test
add
ret
in
pop
pop
cmp
cmpxchg
stos
dec
add
pop
mov
pop
aas
pop
aas
outsl
and
cmp
add
add
push
rcrl
mov
or
push
pop
into
add
rolb
add
add
add
imul
aad
fists
xlat
jmp
xor
cmp
loope
icebp
inc
int
dec
push
flds
push
sbb
cmp
pop
jecxz
in
fidivs
adc
and
push
cmp
fwait
cmp
sub
sbb
cmp
int3
xlat
pop
adc
ret
cltd
and
filds
pop
sub
add
add
rcrl
fcomps
jmp
aad
adc
add
mov
xlat
pop
adc
cmp
in
sub
pop
adc
lea
imul
push
xor
cmpsb
sbb
or
jmp
fcomps
jmp
fists
adc
movsb
pop
and
int
adc
jmp
sub
decl
add
pop
call
push
and
jmp
pop
adc
cmp
push
out
sub
and
test
jo
jg
and
add
pop
cwtl
or
adc
jmp
popf
sar
push
jle
add
pop
adc
and
and
int
adc
jmp
mov
lcall
out
pop
call
sbb
add
add
add
push
dec
incl
sar
mov
pop
add
sqrtps
js
add
mov
jmp
mov
cmovo
mov
pop
testb
psllw
repz
pop
add
push
push
inc
add
pop
add
cmp
pushl
mov
out
jg
incl
add
add
clc
nop
mov
clc
xchg
pop
jo
cli
sti
mov
cmp
mov
or
add
add
dec
xor
psubsb
rorb
add
add
aas
pop
or
lcall
mov
add
dec
fnstcw
pop
pop
cmp
push
aad
sub
sahf
xor
add
add
add
mov
mov
cld
cltd
subb
mov
mov
dec
add
ret
fcmovnu
pop
pop
cmp
cmpxchg
add
stos
adc
add
sbbb
mov
dec
jo
mov
adc
xor
fcomps
jmp
add
mov
push
or
arpl
or
push
repnz
mov
add
add
movsb
add
jo
cmc
adc
add
push
mov
mov
cmc
and
pop
adc
insl
or
sub
test
add
pop
adc
add
call
add
fisubrs
loope
les
xor
adc
adc
push
sub
pop
adc
ljmp
add
sub
lret
dec
ds
push
insb
repz
add
add
add
and
jae
push
fcom
add
jl
call
or
arpl
sub
adc
aaa
mov
or
ljmp
cmp
mulb
rorb
mov
popa
adc
icebp
cwtl
push
mov
out
jmp
inc
xchg
inc
and
sahf
test
sbb
add
imul
push
sahf
inc
and
cwtl
negb
adc
lea
sahf
dec
and
add
mov
filds
inc
clc
jmp
mov
push
and
jae
int
out
hlt
jecxz
mov
pop
push
cmp
push
dec
pop
adc
mov
andb
add
sub
and
push
and
push
incb
pushw
shrb
add
add
loop
ret
out
pop
sub
inc
out
out
xlat
cld
out
or
xor
pop
das
js
dec
jl
pop
pop
sub
mov
push
sahf
sub
repnz
add
add
pop
pop
sub
mov
sub
add
jl
icebp
pop
cmp
imul
and
sub
add
add
add
leave
xchg
sahf
fisttpl
cmp
xor
jle
jp
jp
repnz
add
and
sbb
push
cs
adc
sub
std
pushl
xor
push
adc
jns
adc
jns
movaps
pop
or
add
aam
call
loopne
aad
clc
aam
or
aaa
mov
mov
movsl
mov
adc
add
add
add
inc
inc
fldl
lock
adc
popf
adc
cmp
sbb
jl
cmc
sub
cmc
and
fadds
insb
out
adc
add
jmp
fnstenv
cld
scas
dec
sbb
stos
sar
sub
shlb
sub
and
pop
adc
call
addr16
push
xor
lcall
lcall
add
push
jae
inc
outsb
stos
cli
push
fsubl
ss
es
pop
cwtl
fdivr
and
filds
push
cmp
pushl
fdivr
push
sahf
fdivr
sub
fdivr
ficoml
fdivr
icebp
sub
fdivr
mov
fdivrl
add
lds
add
lds
add
lds
add
add
add
cmc
sarl
add
fstpt
add
sarb
add
mov
ds
ret
cmp
add
add
mov
add
mov
ds
add
add
ds
ds
ds
add
int
add
add
dec
aas
pop
cmp
pop
jecxz
aas
add
add
add
dec
aas
pop
lret
dec
aas
pop
dec
aas
pop
notb
pop
pop
push
aas
pop
xor
aas
pop
ret
inc
aas
pop
jns
aas
pop
into
cmp
pop
inc
inc
aas
pop
jg
aas
pop
popf
inc
aas
pop
stos
cmp
pop
sahf
and
pop
dec
and
pop
pop
inc
aas
pop
mov
cmp
pop
ljmp
pop
inc
sbb
pop
scas
sbb
pop
push
sbb
aas
pop
aad
aas
add
add
add
pop
aas
pop
mov
aas
inc
mov
jle
adcl
jmp
pop
arpl
out
push
pop
loop
push
and
pusha
add
adc
hlt
push
push
div
or
loope
dec
cld
fimuls
lock
repz
hlt
or
xor
fiaddl
out
fstl
lret
mov
add
dec
loope
repnz
in
notb
hlt
dec
loopne
ljmp
mov
xchg
lret
mov
and
ljmp
cwtl
into
inc
jmp
adc
ljmp
fdivr
inc
and
decl
adc
call
sub
dec
es
aas
cs
aas
cs
mov
push
fdivr
adc
fdivr
xchg
adc
call
test
decl
add
fdivr
push
jl
push
jg
call
jg
ljmp
fdivr
mov
fdivr
adc
fdivr
xchg
cmp
fdivr
cmp
cmp
ljmp
add
add
repnz
ds
idivb
add
clc
add
clc
add
add
add
add
add
inc
clc
add
add
cmc
add
add
idivl
add
idivl
add
idivl
add
stc
cmp
inc
adc
pushl
cwtl
xchg
and
or
and
mov
daa
in
orl
rorb
pop
sub
ficompl
rorl
in
jnp
addb
pop
add
add
add
jl
orb
adcb
jp
xor
or
sti
loope
das
pushf
cld
ja
cli
incl
lret
jno
inc
push
loop
cli
jmp
jbe
ret
add
sub
jne
lods
cmp
jmp
lods
cmp
inc
xor
cmpsl
and
add
rcll
out
test
adc
jl
in
cwtl
cli
add
add
add
in
cmp
int
jl
in
or
pop
adc
fwait
sub
call
addl
sub
inc
pop
sub
pop
adc
jge
outsl
sarb
xor
pop
pop
adc
roll
adc
adc
mov
xchg
nop
out
in
pop
cwtl
jge
arpl
rorb
daa
ss
add
jl
add
add
add
lock
or
inc
add
add
adc
pop
rorl
adc
fucomip
je
and
pop
adc
imulb
sbb
jne
orl
mov
mov
mov
push
add
mov
pop
inc
icebp
pop
inc
add
pop
adc
jb
lock
call
test
mov
jmp
add
add
add
add
sbb
add
adc
jmp
les
add
or
inc
xor
cmpsb
inc
dec
mov
mov
xchg
add
adc
or
inc
adc
test
pushf
incl
xchg
inc
or
clc
sbb
xor
add
cmp
push
rcrl
dec
xchg
and
add
aam
test
add
add
push
xchg
incl
adc
nop
and
vcvttpd2dqy
movsb
rolb
pushl
rol
or
mov
str
fimull
add
cwtl
add
sarl
sahf
daa
add
xlat
mov
ret
pop
sub
mov
inc
pop
jmp
add
add
add
add
pop
mov
add
xlat
test
ja
imul
test
and
sub
lcall
into
sbb
iret
sub
add
rorl
sub
and
in
sti
test
imul
mov
dec
pop
incl
jmp
ret
or
sub
call
add
aas
mov
add
add
add
lret
loopne
pop
xchg
loop
popf
into
call
push
roll
pop
icebp
call
add
adc
ret
leave
popf
loop
rcll
add
jge
add
fmuls
adc
mov
adc
aad
adc
push
add
add
push
add
push
xchg
adcl
jmp
add
jle
sarl
add
pop
cltd
inc
add
leave
sti
mov
push
xor
add
xor
adc
lock
jmp
mov
stos
push
mov
push
adc
xor
call
lret
xchg
rclb
enter
add
pop
cld
repnz
mov
pop
add
add
add
int
cmp
std
cld
push
arpl
testl
push
sub
pop
imul
add
adc
or
add
sti
hlt
cwtl
push
stc
test
addb
add
je
and
notl
add
dec
enter
mov
and
inc
adc
add
add
xor
inc
add
adc
cmp
stc
popa
add
popf
andl
inc
jno
cs
xor
jo
lcall
add
popf
in
jmp
xchg
addb
test
jl
add
xchg
cmc
in
in
aad
in
aad
in
fst
in
pop
lahf
hlt
add
pop
inc
push
pop
pop
iret
add
add
add
and
stc
mov
add
inc
cmpb
pop
dec
clc
movsb
in
mov
adc
adc
adc
fstp
add
sbb
mov
sbb
mov
adc
push
mov
imul
adc
add
push
lret
mov
mov
pop
adc
mov
xor
add
bound
jge
xor
add
add
lods
inc
bound
pop
pushf
xrelease
push
call
sub
xor
push
cmpsb
rclb
add
and
sbb
insb
ret
mov
in
ret
push
leave
or
lret
xchg
push
pop
mov
jmp
or
loop
add
fwait
int
mov
imul
add
add
add
mov
add
add
clc
divb
fwait
add
aam
nop
imul
leave
push
mov
jmp
or
sarl
xchg
ljmp
xor
sbbl
adc
bound
test
adc
inc
jge
inc
cmc
fsubp
icebp
add
pop
cwtl
xlat
out
pop
push
mov
add
add
add
cmp
les
test
ja
add
sub
sahf
push
std
incl
dec
push
test
adc
add
aaa
lods
add
adc
incl
or
add
add
xor
add
adc
lock
cltd
mov
testl
test
sar
cmp
test
and
add
hlt
gs
enter
mov
add
mov
shll
pusha
pop
jge
je
iret
jmp
decl
pop
add
xor
lret
jmp
inc
cmp
xchg
or
pusha
jle
add
ret
cmp
pop
bound
pop
clc
mov
int3
cmpl
dec
add
add
add
sbb
mov
insl
repnz
xlat
in
jecxz
xchg
je
insb
call
jne
outsl
mov
ja
adc
je
sbb
pop
adc
mov
and
shr
dec
inc
pop
or
repz
push
cmp
inc
mov
frstor
or
xchg
sbb
xchg
add
add
add
scas
xchg
push
inc
mov
ficoml
push
pop
adc
push
rorb
test
pop
test
ficoml
xor
pop
pop
repnz
push
adc
cmp
mov
cld
mov
fs
push
jge
call
lods
shll
pop
fs
jb
cltd
mov
bound
jmp
pop
adc
jo
sub
std
mov
add
add
out
cmp
lods
add
pop
test
jb
sub
inc
gs
leave
add
pop
lcall
pop
pop
fcompp
push
add
pop
xchg
std
add
fisttpll
rcrl
and
jmp
push
pop
jg
loopne
push
fs
sbb
add
adc
and
add
add
out
xchg
and
adc
add
jl
in
pop
cli
dec
jno
pop
and
shlb
push
in
push
in
fistl
add
inc
adc
mov
lock
inc
adc
sub
sub
jl
jbe
jge
cmp
je
je
add
jnp
std
incl
lcall
add
add
add
int
notl
mov
pop
loope
and
cli
add
out
test
sub
pop
jne
xor
inc
jp
jmp
cli
mov
push
cld
cmc
push
mul
je
jnp
add
in
cli
pop
add
sar
mov
push
and
add
aad
loopne
inc
jns
xor
sbb
test
pop
xor
add
add
sub
test
ja
sbb
xchg
loope
fwait
cmp
add
pop
add
and
jmp
cmp
push
pop
sbb
lcall
cs
fst
fbstp
popa
adc
gs
inc
movsl
or
call
or
iret
pusha
jg
xchg
out
pop
push
cmc
sub
add
add
lods
dec
out
add
adc
mov
in
lret
repz
ret
scas
faddl
mov
push
std
sub
insb
sbb
or
jae
mov
andb
xor
fs
add
xchg
int
adc
jmp
pop
adc
ret
push
call
in
add
add
add
add
push
mov
int
jmp
sub
test
and
sub
xor
pop
ds
jmp
std
adc
jmp
ds
add
pop
cmp
in
add
arpl
add
pop
cmp
adc
ret
push
mov
jmp
add
ret
add
add
add
mov
mov
dec
push
sar
sbb
cmp
aaa
cld
ret
mov
sub
leave
xor
in
popf
adc
mov
mov
sub
mov
push
fdiv
pop
adc
xor
mov
fildll
repz
lods
push
pop
leave
inc
mov
sbb
and
add
add
add
out
jecxz
lea
jmp
je
jae
mov
repz
pop
out
inc
push
inc
cmp
sahf
repnz
sub
fucomip
pop
cli
mov
in
mov
imul
aas
pop
jg
mov
mov
mov
jae
lock
pop
jne
je
xor
push
cmp
add
fstl
add
adc
shlb
and
pop
adc
lods
mov
icebp
mov
add
or
push
sub
fildll
push
icebp
lea
add
or
pusha
lea
pop
adc
lock
shlb
cmp
add
jg
jge
orl
add
enter
adc
lods
lods
pop
cmp
jb
hlt
ret
inc
xchg
ja
xor
mov
and
in
pop
std
cld
cmp
sbbl
std
hlt
in
inc
jmp
out
inc
add
xchg
enter
es
ret
add
adc
into
inc
add
add
bound
aam
sbb
add
add
out
dec
and
sbb
je
out
call
imul
pop
test
int
stos
mov
in
push
cmp
jb
push
push
sub
push
add
mov
or
icebp
mov
xor
ja
rorl
aad
mov
cwtl
inc
stos
std
imul
fscale
push
and
add
add
aad
test
sub
add
adc
call
fsubrs
roll
or
mov
mov
scas
in
test
divb
rorl
lock
aaa
mov
adc
lea
add
out
ljmp
xlat
add
add
add
add
sahf
out
ljmp
sahf
ljmp
icebp
les
je
test
adc
in
std
andb
mov
add
mov
pop
cmp
fildl
or
xorb
push
push
data16
and
add
fs
or
sbb
add
pop
adc
add
add
add
push
push
mov
mov
sbb
add
fst
sti
popf
aam
jae
mov
mov
sti
or
cli
ret
stc
xchg
daa
cwtl
sahf
cmp
xchg
jmp
shrl
mov
test
fwait
sar
add
int
ret
test
bound
sbb
adc
sbb
add
add
cwtl
mov
bound
cmpsb
into
add
jb
jns
add
std
bound
add
outsl
test
std
jb
pop
stos
pop
mov
addr16
mov
hlt
bound
mov
test
es
push
pushw
adc
clc
xchg
out
je
and
je
sbb
jb
adc
je
mov
jae,pn
add
add
add
mov
add
push
push
pushf
out
push
lds
xor
ss
xor
stos
xor
cli
popa
and
xchg
xchg
enter
pushl
in
je
xchg
cmp
cmp
pushl
jg
pop
sub
push
test
adc
inc
test
adc
aam
sub
hlt
cmp
inc
add
add
add
jb
test
push
jno
nop
aaa
das
mov
adc
push
or
adc
ss
and
mov
hlt
adc
adc
xor
js
and
pop
mov
pop
ljmp
or
or
into
jns
pop
sar
pop
stos
test
inc
call
dec
addb
push
add
add
add
cmp
push
add
dec
repz
mov
in
stc
mov
pop
cmp
push
outsl
mov
or
cltd
mov
pop
outsl
xor
movsb
sub
fisubrl
xchg
sbb
lods
in
aam
in
mov
xlat
int
sub
out
ljmp
cli
jns
std
outsl
les
xchg
call
add
add
add
add
pop
sti
add
pop
test
imull
push
push
imul
imul
fidivrl
stc
loop
cld
fisubs
out
es
cmp
stc
in
push
addr16
sbbb
add
push
cmpsl
add
rcll
in
aam
jmp
mov
jno
add
add
add
add
or
xchg
lret
xchg
jb
aas
fstps
push
and
aam
gs
pop
xchg
testl
and
jmp
sbb
rcll
nop
adc
jno
aaa
adc
jne
pop
aam
xchg
not
rorl
in
xor
call
scas
add
add
add
frstor
dec
inc
loop
subb
xor
pop
add
cmpsl
pop
ret
push
push
clc
jbe
mov
je
sbb
mov
cli
and
dec
js
mov
mov
sbb
xor
mov
xor
push
jp
call
cmp
or
push
inc
add
add
add
dec
and
push
sub
mov
jl
add
je
in
call
mov
rcll
and
pushl
jp
push
pop
pop
jno
pop
ljmp
push
lcall
in
add
add
add
jmp
ds
addr16
ljmp
cmp
add
add
xor
int
sahf
ljmp
jp
sarb
jbe
jns
inc
xor
mov
add
push
in
cmp
js
aad
or
addb
jae
stos
data16
add
mov
shlb
jge
mov
popa
clc
cwtl
sti
mov
sbb
pop
cmp
add
add
push
cli
ret
jns
fildll
add
aam
insb
push
out
popf
sub
imul
negl
mov
and
xchg
xchg
hlt
aam
insb
nop
cmp
popa
inc
or
jmp
push
jns
sub
mov
adc
lds
fs
cli
js
mov
cmc
push
pop
ret
add
add
shrb
mov
push
bound
push
jb
test
sbb
lahf
fs
push
mov
mov
out
dec
iret
aas
repz
cld
into
lods
push
mov
push
stos
push
mov
push
pop
test
aaa
repnz
dec
add
cmc
std
in
cmc
mov
adc
cli
pop
adc
jmp
notl
add
add
add
xchg
adc
mov
cltd
jge
adc
ds
mov
cld
lcall
enter
add
inc
push
push
xchg
ja
pushl
inc
test
ret
push
mov
mov
mov
cld
xor
mov
ret
dec
or
adc
inc
sar
test
mov
or
add
mov
cltd
imul
je
or
stos
stc
jne
repnz
sbb
adc
jl
bound
loope
ljmp
pop
ljmp
dec
stos
add
sub
fcompl
mov
pushf
mov
xchg
jno
and
mov
push
mov
jns
jp
cmp
sbb
fsubrp
add
add
push
xchg
dec
pop
fnsave
sahf
ljmp
fcmovne
clc
andl
add
xor
add
pop
mov
jl
inc
fadd
fisubrl
mov
fildll
adc
cmp
adc
jbe
sub
adc
fistps
adc
jge
jmp
and
out
add
add
add
hlt
sbb
add
add
cmp
adc
add
in
jg
adc
add
sti
out
jg
adc
add
inc
pusha
les
repnz
cmp
sahf
icebp
leave
pop
daa
add
jmp
cmc
scas
sbb
out
faddl
bound
mov
lods
sbb
push
insb
push
das
and
adc
push
mov
std
popf
mov
add
add
out
inc
mov
out
xor
mov
xor
inc
adc
in
fdivr
add
xchg
je
pop
jle
adc
std
push
jle
call
bound
lret
push
lret
bound
cs
shrl
xor
pop
sbb
pop
das
notl
add
mov
jecxz
sub
push
add
add
add
ficoms
cmp
shlb
in
mov
sbb
loope
jbe
rcrb
xchg
cwtl
ja
mov
fisubs
mov
jnp
loope
fmulp
cmp
mov
ficoms
jnp
push
fs
pop
inc
push
mov
xor
mov
movsl
cmpl
jo
sbb
pop
inc
mov
add
add
push
ret
jl
xchg
xor
pop
hlt
xor
xchg
push
imul
lret
data16
loopne
add
lods
adc
adc
rclb
add
xchg
adc
fwait
adc
shll
test
in
mov
mov
jl
cmpsl
inc
ror
fildll
cwtl
or
mov
mov
rclb
add
add
add
lods
test
test
aaa
iret
sbb
add
xchg
mov
adc
adc
jmp
addr16
jg
fs
addb
pop
jns
pushf
mov
add
inc
iret
ja
push
out
dec
pop
cmc
ret
fsts
add
lock
dec
push
out
add
add
add
stos
fisttps
xlat
call
or
shll
push
sub
pushf
js
xchg
sti
loop
adc
push
or
cmp
dec
pop
out
fmull
push
out
and
add
sti
scas
pop
clc
sub
mov
add
fimuls
jmp
popf
adc
and
je
imul
add
add
add
dec
mov
subl
pop
push
out
pop
fcomps
pop
out
std
cltd
adc
cld
sub
sarl
aaa
es
movsb
mov
or
xchg
add
pushaw
cs
fcomps
push
mov
into
lcall
xlat
out
std
add
rorb
xchg
notl
shlb
loopne
clc
adc
xor
add
add
add
adc
xor
inc
negl
add
jp
decb
lea
leave
test
in
inc
insb
push
mov
mov
inc
push
push
loope,pn
add
and
call
cmp
push
push
adc
test
dec
mov
mov
add
clc
mov
add
add
adc
pop
std
imul
inc
pop
jne
je
jne
cld
dec
lea
and
add
cs
mov
movsb
stc
add
test
add
xchg
inc
add
cmp
jmp
lods
sti
rcll
std
jae
push
inc
pop
jno
cld
push
dec
test
sti
mov
cmp
inc
add
add
add
les
pop
inc
cld
rorl
stc
jns
imul
adc
inc
aad
xchg
arpl
mov
add
push
fdivrp
es
out
mov
enter
adc
and
fs
push
inc
pop
inc
add
inc
adc
add
push
jae
test
add
adc
add
add
push
add
add
add
pop
xchg
inc
add
bound
xchg
and
fcmovu
out
pop
and
mov
adc
add
push
call
add
ss
add
pop
add
subl
adc
fcompp
popf
add
pop
cwtl
inc
fldz
jle
mov
in
call
insl
and
insb
xlat
mov
xchg
sbb
std
sbb
xlat
call
add
xchg
std
insb
and
pop
iret
mov
lea
pop
adc
repnz
inc
xor
rcr
adc
in
inc
inc
xchg
pop
jmp
ficoml
adc
add
xchg
cwtl
pop
ljmp
xchg
test
or
xchg
adcl
add
enter
jmp
clc
add
add
add
or
xchg
aaa
jne
sbb
push
loopne
xor
aaa
adc
add
add
mov
cmpsl
ja
imul
or
pop
adc
or
mov
out
dec
push
pop
nop
push
xchg
clc
nop
xchg
mov
and
lret
or
add
add
gs
cwtl
addr16
daa
rorl
mov
ja
push
xor
inc
push
jne
jmp
mov
rcr
mov
cmp
add
push
push
test
stc
insl
nop
and
cld
add
imulb
jo
mov
xlat
pop
jecxz
jl
sub
and
mov
fimull
sahf
add
add
add
pop
adc
push
cmove
fst
xchg
xor
sub
cmp
outsl
pusha
push
sbb
dec
inc
jno
mov
in
or
pop
adc
jmp
fs
xchg
push
lea
gs
lret
or
out
loop
filds
adc
std
insl
int
inc
pop
xchg
imul
adc
add
rorb
mov
jnp
add
add
xchg
ds
dec
cmp
push
in
add
das
inc
ds
rolb
mov
outsl
aaa
lea
pop
je
data16
dec
shlb
and
pop
and
push
movsl
pop
pushf
mov
jno
add
jne
jno
pop
xchg
shr
roll
mov
adc
jmp
pop
adc
sbb
adc
add
cmp
in
mov
push
adc
bound
xorl
inc
std
hlt
jne
inc
jmp
pop
lcall
cli
fld
adc
pushl
adc
add
and
jbe
add
mov
cltd
test
or
add
add
add
adc
xor
or
cmp
cmp
pop
adc
call
mov
and
push
cwtl
xchg
and
adc
add
adc
call
pop
jne
or
dec
loop
rolb
and
icebp
add
fldt
adc
add
stc
add
fdivrp
sets
add
add
insl
mov
adc
jne
and
testb
push
inc
jge
push
testl
mov
push
hlt
add
push
mov
push
clc
add
push
std
or
and
cli
add
out
add
pop
subb
mov
add
test
or
add
mov
loop
jmp
pop
adc
add
add
add
pop
adc
or
bound
out
mov
js
pop
nop
and
fst
xchg
pop
aad
ret
sbb
out
adcl
or
adc
outsb
pop
inc
out
mov
es
repz
pop
pop
adc
add
or
dec
lods
out
push
out
adc
sbbl
testb
shlb
or
out
lret
cmp
add
add
sbb
cltd
mov
lcall
lods
jbe
mov
push
pop
fsubr
incb
mov
sahf
clc
aaa
cmpsb
in
call
js
add
push
xchg
jae
xchg
push
or
add
mov
hlt
or
bound
push
aas
cltd
cwtl
xlat
push
cmpsb
cwtl
jae
loop
sarb
leave
adc
aad
mov
dec
cwtl
inc
std
pop
shr
xor
add
pop
bound
js
sbb
clc
lea
std
test
xchg
divb
push
mov
pusha
or
paddusb
cmp
or
js
add
mov
add
add
adc
adc
shlb
ret
inc
xchg
add
add
add
clc
or
leave
int3
fcmovnb
pop
hlt
mov
negb
push
test
imul
jne
fidivl
inc
fidivl
mov
call
mov
mov
nop
jl
pop
clc
push
mov
clc
mov
adc
jmp
or
shlb
or
dec
idivl
add
push
outsl
shrl
scas
mov
mov
pop
aad
or
movsb
into
ret
jbe
cmpsl
rcrl
add
mov
mov
mov
push
rolb
aad
and
adc
push
in
add
pop
ljmp
xchg
adc
push
out
xchg
or
xchg
mov
xchg
mov
push
nop
shr
add
roll
dec
add
add
add
dec
jb
jp
jno
xlat
push
jecxz
xor
rolb
xchg
out
xchg
scas
call
push
bound
jmp
jb
fucomp
jae
xlat
dec
lret
prefetch
or
loopne
in
jo
fdivp
xlat
push
jecxz
lcall
push
loopne
or
lds
shrl
jmp
add
add
add
xchg
call
out
or
xor
call
mov
ss
push
sub
fists
adc
xor
inc
stos
fisttpll
ljmp
add
pop
mov
adc
fidivs
mov
push
add
std
imull
mov
fcmovnu
je
mov
leave
roll
add
add
xchg
fdivr
shl
xlat
mov
mov
push
sub
js
test
push
dec
ret
xchg
in
adc
adc
push
xor
das
in
jno
and
notb
add
inc
pop
aad
int3
cmp
insl
jle
je
dec
arpl
jo
add
pop
push
andl
pop
jle
ss
pop
pop
or
jns
adc
add
adc
inc
pop
pop
divl
adc
mov
mov
xchg
pop
insl
shll
rorl
add
out
or
or
adc
or
pop
jno
push
in
flds
out
je
jae
adc
push
outsl
cmp
sbb
inc
pop
jae
xchg
add
add
xor
subl
add
sbb
add
arpl
xlat
mov
mov
inc
sbb
mov
jmp
add
bound
aad
adc
shl
adc
sub
inc
ficompl
bound
add
scas
add
adc
dec
mov
add
mov
jl
adc
es
fcoms
test
out
add
add
add
arpl
lock
fs
outsb
inc
pop
inc
outsb
inc
popw
push
add
add
sbb
or
ds
xlat
fldcw
test
push
out
mov
shll
push
in
xlat
push
in
xor
jmp
add
gs
cwtl
test
adc
lret
lret
call
push
xor
add
add
add
scas
add
and
popa
adc
jmp
cmpsb
inc
mov
cmp
xor
call
ss
xchg
jge
add
or
sub
or
mov
sub
lds
ljmp
pop
adc
sub
cmp
adc
pop
adc
add
dec
push
add
add
add
adc
push
and
xchg
inc
stc
fistl
ja
xchg
lret
add
xor
pop
xor
sbb
or
or
inc
imul
adc
add
mov
je
roll
cmpsl
push
add
insb
fisttpl
jmp
push
enter
add
dec
fwait
call
xor
push
in
adcl
add
add
xchg
push
mov
xchg
cli
loop
test
adc
inc
shlb
sbb
popf
pop
jecxz
mov
mov
gs
out
popf
add
aad
mov
imul
push
call
cld
add
jmp
adc
orb
in
and
pop
insl
out
je
and
fstpt
std
loope
jle
pop
call
add
add
imul
add
cmp
adc
out
std
mov
and
pop
pop
inc
adc
sub
frstor
rcll
adc
repz
enter
movntq
dec
mov
repz
fcom
push
jo
out
sbb
les
fcoms
mov
mov
inc
pop
mov
add
add
add
notl
fcmovb
fst
adc
loope
cmp
mov
testl
cmp
add
or
adc
mov
je
jmp
pop
fdiv
jg
dec
add
addb
sbb
adc
leave
pop
ljmp
popa
nop
xor
or
rcrl
mov
in
cmp
add
add
lods
aas
push
insb
mov
inc
mov
outsb
fmull
inc
jmp
xchg
dec
cld
shll
adcl
testb
mov
jle
aad
fdivrl
inc
jmp
inc
call
sbb
add
test
pop
or
pop
leave
inc
aas
xchg
hlt
mov
push
sarl
add
add
add
in
les
add
sbb
je
mov
int
in
or
mov
xchg
lock
push
mov
ds
pushl
stos
adc
xchg
shlb
sti
adc
jl
pop
pop
sub
mov
in
mov
inc
cld
je
push
push
add
dec
push
push
in
pushl
add
add
pop
call
adc
les
gs
cld
shlb
push
daa
movups
add
sahf
adc
xor
inc
push
out
aad
fwait
loopne
add
ljmp
cmpsl
insl
and
xchg
push
push
and
adc
pop
shll
mov
mov
add
and
std
add
add
add
ljmp
stos
dec
pop
xor
push
push
dec
sub
inc
sar
inc
sbb
stos
sti
notb
push
adc
lea
adc
inc
lcall
aad
and
out
sahf
pop
xchg
ljmp
ljmp
bound
dec
and
cmp
in
or
out
cs
fnsave
xchg
add
add
add
loopnew
fnstenv
add
rcrl
cs
sbb
add
rcll
sbb
adc
push
sub
mov
dec
add
mov
std
aam
add
cmp
je
fcompl
add
bound
jno
ljmp
stc
pop
adc
sub
cmp
jmp
pop
push
add
std
cld
add
rcrl
add
add
add
inc
mov
pop
imul
cld
pop
aas
jmp
mov
std
fdivl
aas
jmp
nop
dec
cld
sbb
shll
sub
stos
loop
cld
jmp
push
int
in
jg
push
mov
repz
sbb
push
sub
mov
repz
sti
pop
inc
and
inc
push
incl
add
add
stos
adc
inc
ja
les
adc
and
sldt
add
adc
repz
or
push
dec
repnz
sti
repnz
push
fisttps
add
dec
inc
push
push
mov
cmp
adc
xchg
shlb
and
popa
push
push
pop
inc
and
ds
je
addr16
adc
pop
rorb
mov
je
mov
add
add
mov
add
jp
je
fsub
in
sbb
rolb
dec
andl
jb
not
lods
in
mov
dec
push
test
cwtl
jmp
ficoml
lods
jns
js
cmpsl
add
mov
mov
sbb
xor
out
push
jo
push
out
out
or
cld
add
add
add
xchg
out
cmp
xor
cmp
mov
pop
mov
and
jbe
insl
rcr
inc
pop
xchg
adcb
out
or
out
ljmp
jl
sub
cmpsl
add
shlb
pop
dec
mov
neg
jnp
add
or
fnsave
add
jae
add
add
add
cmp
push
loope
or
loop
int3
ja
or
and
add
push
and
jo
and
mov
daa
inc
jmp
push
cmc
pop
sbb
and
sub
push
jbe
sub
or
adc
std
jmp
ficoms
add
sub
push
and
mov
add
add
add
add
cmc
push
lods
pop
adc
pusha
cmc
pop
push
popa
cmc
pop
pop
xchg
sarb
je
popa
lcall
sbb
je
push
into
bound
cmp
idivl
push
incl
adc
shlb
adc
sub
sub
les
dec
in
or
std
jae
mov
add
pop
push
add
add
add
mov
push
mov
add
pop
inc
push
mov
jg
fwait
push
mov
ret
push
mov
or
pop
enter
add
adc
inc
inc
mov
das
rcrb
add
add
push
add
nop
addl
loope
mov
loope
ds
add
xor
add
add
cmpsl
xor
inc
jl
inc
pop
inc
xchg
xor
adc
pop
mov
les
xor
loope
bound
push
add
mov
lret
inc
lock
test
add
xchg
scas
push
add
sahf
mov
lcall
adc
add
insb
mov
int3
loop
add
add
scas
pushf
fs
adc
and
stc
inc
adc
int3
scas
loop
addr16
ljmp
in
in
xchg
call
xchg
int
xchg
adc
add
arpl
push
pushf
je
movsl
int
jmp
sub
out
dec
lea
adc
daa
push
imul
andb
pusha
sub
push
out
frstor
add
add
cmc
add
adc
call
fmul
std
sarb
call
repnz
cmp
jae
adc
aam
pop
inc
jmp
pop
adc
js
pop
aaa
rcll
add
std
hlt
sbb
inc
jmp
popf
popa
pushaw
and
push
fsubs
mov
std
dec
in
mov
add
and
call
ss
rcrb
mov
sti
push
aas
mov
xor
ja
ror
inc
adc
leave
or
lods
mov
fimull
stc
push
decl
push
push
inc
notl
cmp
loopne
sldt
xor
add
imul
xlat
dec
loop
roll
add
add
mov
mov
xchg
xlat
jle
pushf
rorl
mov
xchg
or
jno
je
in
ja
add
or
dec
je
push
jno
out
add
ja
add
pop
xor
xchg
pop
pop
mov
push
shl
inc
and
into
ss
jle
and
xorl
sti
int
mov
daa
sbb
add
add
push
and
icebp
insl
dec
and
push
add
or
sub
in
in
and
fisttpll
test
pusha
and
mov
incl
aad
jmp
mov
mov
pop
add
dec
and
into
add
adc
inc
dec
push
out
and
mov
pop
push
jl
inc
into
roll
add
add
add
sub
mov
sbb
in
pop
iret
filds
test
fmuls
adc
aaa
out
repz
imulb
adc
push
imul
mov
aaa
mov
xor
xchg
hlt
or
push
scas
mov
or
popf
ret
push
inc
lock
or
aaa
inc
pop
mov
adc
pop
data16
lcall
into
push
rolb
add
add
xchg
call
std
jmp
out
dec
inc
cltd
mov
mov
fld
je
or
jb
pop
call
bound
cmp
popa
sbb
adc
mov
pop
pop
dec
rcrl
sbb
add
mov
cmp
pop
clc
bound
std
cld
push
lcall
pop
mov
call
add
add
add
jae
mov
or
cmp
add
ja
dec
clc
in
fsubr
iret
cmp
cli
jne
cltd
test
aam
jmp
xor
ret
incl
orl
das
rclb
pushl
pop
or
dec
stc
pop
call
jl
xor
mov
add
add
adc
push
aas
or
dec
push
and
cmp
or
dec
push
or
pop
cmp
sbb
scas
sbb
push
jge
jl
mov
scas
lcall
xchg
add
clc
push
imul
cmp
or
scas
sbb
push
push
aad
jmp
test
pop
dec
std
add
add
add
mov
jmp
test
add
add
je
mov
pushf
leave
pop
mov
in
out
daa
add
loop
push
sbb
outsl
in
dec
test
fldcw
adc
and
lahf
icebp
dec
adc
mov
jnp
add
jb
pop
imulb
adc
int3
jbe
push
add
push
push
add
add
add
cli
add
jmp
pop
arpl
out
aaa
sbb
sub
add
mov
jno
pop
adc
push
mov
and
push
mov
jb
cmp
mov
pusha
bound
jp
sbb
xchg
cmp
std
lods
dec
dec
cmc
pop
add
push
les
add
out
sbb
lcall
add
lds
call
adc
and
xor
sub
in
adc
dec
loope
test
fmulp
je
call
fiaddl
jmp
push
mov
je
or
adc
xchg
in
sbb
dec
and
jo
jae
jne
jae
pop
aaa
add
in
and
lds
jmp
sbb
add
add
adc
adc
add
cmp
je
or
and
lret
je
in
push
call
or
je
lret
dec
pop
icebp
imul
mov
mov
mov
or
pop
pop
roll
ret
decl
add
sub
adc
add
icebp
and
mov
add
add
pop
add
jbe
roll
movntq
dec
getsec
inc
pop
sbb
add
cmp
mov
sbb
push
sub
pop
insb
jp
cmp
add
xlat
add
fdivs
push
mov
add
pop
xchg
xor
xchg
cmp
adc
or
test
mov
add
add
xor
jae
out
aas
pop
ds
and
push
test
pop
mov
cmp
insl
sub
inc
dec
clc
add
incl
sbb
ret
pop
out
pop
fstp
repz
jnp
or
addr16
mov
and
push
add
xchg
xor
pop
adc
add
aad
cmpsl
xor
scas
in
xchg
adc
lea
mov
or
pop
jnp
mov
xchg
scas
inc
popa
out
lock
sbb
add
int3
jmp
push
xchg
sub
cmp
pusha
ds
xchg
xor
out
push
add
adc
roll
add
in
adc
cwtl
mov
adc
ss
xchg
sub
add
push
adc
xor
ret
add
add
add
dec
jmp
mov
adc
pusha
adc
outsb
rcll
test
xlat
iret
pop
nop
lcall
mov
addr16
lahf
or
mov
inc
bound
jno
pop
and
ret
adc
sub
adc
add
rorb
inc
adc
mov
push
add
add
add
mov
adc
pop
ret
hlt
add
lods
sbb
adc
push
dec
mov
in
mov
add
sahf
fists
pushf
add
ret
xchg
adc
add
inc
mov
adc
into
inc
nop
add
adc
or
mov
inc
filds
ret
pop
lret
mov
sub
xchg
add
add
add
cli
rclb
add
xchg
pop
stos
add
in
add
sub
add
out
inc
pop
or
enter
int
popf
dec
add
cmp
je
inc
call
aad
xor
bound
inc
add
dec
and
xor
call
ss
xor
aad
jge
add
add
add
ret
mov
aam
jp
mov
ss
cmp
jae
test
call
pop
mov
add
push
jno
pop
bound
add
shrl
pop
inc
fstpt
push
sbb
sub
push
mov
push
mov
push
mov
movsl
fsubrl
out
xchg
jae
mov
add
adc
add
add
add
add
aam
pop
mov
cs
outsb
mov
out
fildl
out
in
arpl
pop
inc
lock
fnstsw
cli
call
fnsave
ljmp
inc
ret
add
rolb
nop
in
aad
bound
jmp
mov
add
add
add
add
push
cmc
cmp
inc
and
cmp
and
pop
adc
push
adc
inc
bound
cmc
inc
cltd
push
fcoms
sub
std
cs
or
jmp
adc
data16
add
and
adc
lret
hlt
aas
xor
sbb
inc
rolb
add
cli
dec
mov
add
add
mov
fdivs
adc
shlb
mov
ds
and
mov
cmp
add
xchg
dec
jo
push
and
or
inc
shrl
not
mov
pop
and
fldl
and
sti
mov
hlt
and
sbbb
or
xchg
pop
adc
or
stos
test
mov
jl
add
add
add
jle
inc
loop
call
xlat
push
sub
out
pop
cmp
decb
cmpl
push
dec
fsubrp
daa
and
cmp
pop
adc
inc
pop
ret
sub
in
xchg
into
sbb
das
out
adc
faddl
in
sub
push
and
mov
js
das
push
test
jmp
add
add
add
cmp
test
add
adc
test
push
lret
sbb
or
jmp
jae
mov
push
ret
pop
xlat
leave
iret
pop
xchg
adc
cmpl
add
mov
jns
xchg
mov
cmp
scas
pop
adcb
jp
sahf
pop
adcb
jp
ss
nop
xchg
mov
cmp
push
add
add
add
iret
incl
sub
sbb
dec
mov
repz
in
or
and
aad
nop
in
leave
mov
adc
andl
mov
inc
jmp
lds
pop
adc
stos
bound
push
push
adc
push
fcoms
test
inc
pop
mov
sbb
add
add
insl
shr
fwait
dec
adc
xchg
mov
mov
pop
mov
add
pop
push
xchg
inc
int
xchg
popa
push
dec
fs
jb
test
lcall
xchg
mov
cmp
adc
aaa
mov
icebp
cmp
xchg
adc
add
dec
lea
icebp
pop
push
stos
push
and
negl
push
inc
push
and
add
add
add
add
call
pop
push
int
or
adc
push
inc
cmp
std
imul
ljmp
pop
mov
int
inc
out
and
push
inc
cmp
and
cmp
std
and
subb
dec
mov
xchg
adc
sbb
adc
sbb
shrb
dec
out
and
inc
scas
mov
add
add
pop
decl
jns
lret
mov
inc
and
jnp
sbbl
inc
lret
daa
sbb
in
cmp
and
scas
xor
inc
mov
add
xor
and
sbb
push
rdpmc
mov
add
mov
sbb
or
and
push
inc
in
outsl
inc
add
add
add
in
push
inc
inc
pop
inc
cmp
inc
push
orb
stos
mov
daa
scas
pop
lcall
sub
sub
xchg
pop
mov
xchg
cmp
mov
mov
pop
mov
and
test
bound
inc
in
mov
jle
test
sub
das
mov
ret
int3
add
add
add
movsl
imul
sbb
xor
add
sbb
std
fsubrl
jae
sub
mov
mov
out
pop
adc
arpl
imul
mov
test
lods
pop
adc
jmp
pop
adc
aam
and
int
call
or
add
add
add
mov
or
pop
mov
in
mov
pop
sub
add
xchg
std
adc
mov
and
call
add
xchg
aaa
add
cmp
add
outsl
fstps
into
scas
std
mov
call
dec
pop
sti
call
jge
xor
adc
add
sub
jae
in
mov
push
call
insb
popa
and
push
data16
pop
inc
bswap
into
mov
gs
repz
mov
call
lea
push
and
pop
cli
pop
add
out
pop
insb
add
xor
subb
sbbb
add
inc
shlb
std
jmp
enter
ret
jmp
add
stos
std
shrl
in
adc
enter
adc
lea
add
sub
add
lods
xchg
jbe
fisubrs
incb
pop
aas
nop
pop
pop
stos
add
pop
stos
test
pop
mov
sub
das
ficomps
fldl
push
in
inc
and
fcmovb
push
popa
xchg
dec
jp
pop
add
adc
jl
add
add
xchg
cmpsb
fcmovu
adc
add
mov
jl
test
dec
pop
adc
frstor
je
adc
adc
out
ret
and
mov
scas
add
out
cmp
dec
inc
icebp
arpl
adc
add
repz
dec
xchg
add
icebp
lds
daa
add
adc
ret
add
add
mov
arpl
add
popa
call
movups
ljmp
add
test
subl
divps
mov
popa
push
lahf
addb
lcall
sbb
bound
mov
fbstp
out
bound
add
add
pop
mov
not
insb
add
add
add
add
enter
mov
fisubs
call
add
add
xorl
pop
push
mov
xor
and
std
xchg
pusha
add
mov
add
xchg
mov
mov
mov
inc
arpl
xchg
or
aaa
push
out
les
add
add
add
sub
and
sub
and
sub
mov
sub
and
sub
add
lods
mov
movb
lret
cmp
pop
pop
pop
fdivr
sarb
mov
pop
mov
das
push
in
ja
int3
or
and
cmp
mov
cmpb
pop
mov
incl
add
add
add
js
add
jle
and
stc
dec
add
add
xor
pop
add
jbe
sbb
negb
and
mov
dec
or
mov
sub
ds
fs
push
into
cli
adc
add
loopne
adc
nop
pop
pushf
sahf
sarl
add
add
add
inc
xlat
and
jns
inc
push
pop
adc
push
popa
mov
pushl
iret
icebp
sub
jb
push
mov
bound
mov
fs
lret
cmp
ds
xchg
out
xchg
movsb
pop
adc
add
add
sahf
js
scas
aam
insl
push
add
js
jae
jbe
sub
imull
jmp
add
add
add
add
loopne
call
push
cmp
rcll
roll
fdivrs
mov
xchg
push
adc
or
insl
stos
dec
or
sub
mov
ljmp
loope
rorb
jmp
loopne
and
fdivrs
mov
or
je
add
add
add
call
and
inc
xlat
addb
push
push
insb
shr
mov
sti
mov
mov
pop
and
jmp
sub
dec
mov
xor
dec
mov
test
pushf
jb
in
mov
dec
push
add
and
inc
xchg
bswap
cld
pushl
mov
push
add
add
add
inc
dec
mov
dec
sti
jo
mov
mov
inc
and
mov
das
inc
and
jb
iret
xchg
mov
push
xor
xor
add
mov
je
int3
lds
jp
mov
cld
push
jp
adc
add
pop
andb
push
das
int
shrl
test
add
add
add
mov
mov
mov
dec
add
fildl
push
mov
sti
inc
xchg
outsb
adc
fwait
adc
or
outsb
in
lea
fildll
in
adc
cmp
popf
shrb
pop
popa
cwtl
dec
lds
stc
out
mov
out
lods
dec
out
loop
cmp
ret
and
in
add
add
mov
and
in
and
jecxz
and
jecxz
inc
lret
jecxz
xor
loop
xlat
cmp
pop
adc
xchg
aaa
inc
xchg
pop
aaa
aas
call
bound
mov
mov
adc
mov
loop
lcall
cmp
add
dec
cmc
das
push
push
cmc
xor
dec
cmc
xor
add
add
add
cmc
aaa
xchg
mov
std
fsubp
mov
add
dec
pop
and
inc
ret
ds
fnsave
push
aas
aad
adc
in
out
adc
pop
push
adc
jmp
inc
lods
jae
mov
add
std
mov
mov
add
push
add
mov
add
add
ret
adc
inc
push
xlat
push
inc
adc
addl
je
out
sarl
inc
add
cmpl
add
cmpsl
cmpb
je
cmpsb
pop
cmp
sbb
mov
or
sbb
pushl
sti
shl
gs
je
mov
or
add
add
add
add
call
adc
pop
in
dec
mov
in
les
aaa
or
mov
std
sbb
call
aad
pop
pop
movsl
and
push
in
mov
pop
lcall
adc
inc
adc
push
mov
jo
ret
mov
mov
xor
inc
add
add
add
xor
std
adc
mov
cmp
std
rcll
xchg
popa
adc
sbb
mov
fcoml
dec
push
idivl
test
cmp
sub
sbb
jb
sbb
jmp
inc
stos
add
push
repz
push
je
repz
mov
sub
add
add
mov
inc
xor
dec
pop
inc
cli
fadd
int
add
lea
sbb
sbb
xchg
ss
test
dec
jns
out
pop
pushf
cld
pmulhuw
pop
jmp
cwtl
insb
or
pusha
adc
sub
dec
and
shlb
and
roll
inc
or
dec
dec
push
test
loopne
and
add
add
add
push
mov
mov
std
out
xor
mov
sub
mov
push
jae
fstpl
imul
lea
and
mov
sti
ret
and
lods
shll
cwtl
add
inc
cltd
inc
and
inc
sti
jne
add
add
dec
imul
cmp
into
push
cmc
pushl
enter
or
loope
insb
and
push
or
mov
jg
push
loope
cmp
lds
mov
or
into
dec
ds
lahf
in
imul
xchg
xchg
mov
adc
mov
jns
inc
xchg
sti
je
add
push
xlat
jmp
cmp
add
add
or
or
and
in
pop
mov
lods
or
sbb
shll
mov
call
aad
pop
pop
test
mov
std
mov
adc
xchg
adc
mov
adc
jb
adc
and
add
inc
add
jns
dec
andb
push
mov
add
add
out
fbld
comiss
call
in
inc
loopne
cwtl
lahf
jg
sbb
adc
jnp
jmp
dec
cwtl
scas
lods
push
jb
add
dec
ret
fildll
out
hlt
and
bound
adc
add
cmp
jp
ds
aam
out
push
mov
fbld
bound
std
pushf
dec
sbb
xchg
add
add
add
pop
adc
push
push
out
add
jno
data16
and
movsb
jb
into
pusha
add
add
pop
lcall
std
mov
jns
pop
adc
jmp
mov
mov
ret
ret
mov
lods
clc
push
out
mov
in
and
ficoml
pusha
add
add
add
or
or
movsl
dec
push
push
sbb
dec
add
inc
ftst
push
and
loopne
jo
sbb
or
pop
jno
jbe
aad
std
pop
outsb
mov
addl
loop
call
cmp
sbb
xchg
push
call
loop
push
call
push
sti
jne
pop
je
mov
add
add
and
add
mov
add
mov
std
ljmp
or
or
xchg
mov
call
jmp
pop
mov
pop
push
add
fmuls
cmp
and
pop
ret
xchg
push
add
pop
mov
add
es
pop
mov
xchg
push
mov
add
add
mov
mov
cmpl
xchg
push
std
jmp
push
mov
cmp
pop
imul
push
add
loop
das
adc
inc
add
pop
movsl
and
mov
adc
push
xchg
test
pop
je
mov
push
mov
adc
sbb
add
add
cs
add
aad
and
mov
sbb
pop
icebp
xchg
or
or
out
aad
lret
pop
push
inc
cmp
xlat
iret
popa
pop
adc
mov
cmc
rorb
cltd
xchg
dec
add
cmp
sub
inc
xor
test
bound
add
fs
add
add
add
pop
push
nop
dec
mov
out
lret
testl
mov
and
mov
add
test
mov
adc
pop
and
aam
stos
pop
adc
rorl
sbb
sahf
jae
lret
xchg
dec
stc
call
xchg
cmc
cmp
push
and
jbe
icebp
call
data16
std
cmp
add
add
fisubrs
out
imul
std
insl
sbb
cmc
inc
es
inc
push
xor
inc
push
dec
cmc
inc
push
inc
cmc
inc
add
and
out
and
out
and
mov
call
scas
and
add
inc
push
push
push
pop
push
push
mov
shrb
lahf
les
xchg
clc
test
fstps
add
lret
incl
add
add
adc
add
ja
adc
adc
rorb
iret
scas
mov
inc
and
pop
incb
fcoml
push
in
fsubs
fldenv
inc
mov
dec
mov
fwait
xor
mov
push
sbb
add
pop
xor
call
aad
cltd
ljmp
pop
std
sub
std
add
add
add
or
std
sub
std
adc
std
or
std
adc
push
std
or
push
dec
in
cltd
out
mov
cmp
push
mov
add
loope
subb
and
push
or
stos
mov
mov
in
outsb
mov
add
fistl
stos
out
inc
xchg
loopne
and
ret
push
lret
out
add
add
pop
adc
add
inc
xchg
cmc
xchg
adc
and
or
push
mov
xor
pushf
adc
out
sbb
or
add
dec
out
mov
out
sub
jb
cmp
xchg
out
out
out
ret
cmp
push
xlat
test
stos
out
mov
out
mov
add
test
out
movsl
add
xchg
lahf
and
sbb
add
fisttpl
jmp
loop
mov
pop
adc
push
push
inc
push
ds
je
push
dec
mov
xchg
mov
in
nop
cmpsb
jmp
xchg
dec
bound
adc
jns
mov
add
add
cmpsb
je
lret
jb
stc
call
lods
fcom
jae
mov
lgs
aaa
verw
sub
inc
adc
add
fisubl
dec
or
or
xchg
shlb
je
dec
push
pushl
xchg
les
push
push
call
cmp
and
inc
aad
add
movsl
sub
push
test
lahf
repz
add
add
add
cld
je
inc
sti
je
inc
sti
je
inc
sti
je
inc
sti
je
inc
sti
je
inc
push
call
push
push
int3
shr
push
lcall
int
or
jmp
inc
dec
sbb
lock
inc
shrb
inc
adc
int3
or
add
pop
cmp
js
std
shl
adc
leave
and
sldt
add
add
cwtl
push
push
push
ret
xor
pop
sbb
scas
jo
stc
fwait
sub
test
je
cwtl
repnz
push
fcoms
ljmp
add
in
dec
fwait
push
dec
ss
mov
cltd
sub
pop
cwtl
pop
in
scas
stos
in
scas
xchg
in
push
scas
inc
ss
inc
cmc
xchg
add
add
add
mov
scas
sbb
out
xlat
movsl
cwtl
push
xor
lock
xor
adc
mov
inc
add
adc
pushf
mov
out
out
insb
lods
adc
lods
jne
adc
add
enter
adc
xchg
cmp
jb
data16
cmpsb
ljmp
or
and
pop
add
add
add
cld
fcoml
std
mov
mov
insl
daa
sbb
call
xchg
rol
add
ret
and
dec
lret
jmp
xchg
add
je
xchg
jae
cli
and
in
std
out
cmp
cmc
pop
inc
mov
cli
and
mov
cmp
and
dec
add
cmp
xchg
jae
mov
pop
cmp
dec
std
sahf
ret
std
add
add
add
mov
movsb
sbb
sarb
call
sub
std
ljmp
cmovo
sbb
out
sti
rorl
filds
xor
jnp
add
adc
jb
in
pop
dec
jp
add
pop
inc
in
cmpsl
cmp
xor
xchg
fildll
pop
push
in
out
jp
push
adc
jmp
adc
cmp
add
add
cmp
je
sub
inc
call
lea
jns
push
sarb
je
dec
push
sub
fstl
call
aas
in
scas
imull
sbbl
nop
push
and
orb
js
or
std
sub
out
addl
js
add
cltd
gs
fwait
xchg
push
push
add
add
add
cli
jp
es
stos
std
rcll
call
fnsetpm(287
fwait
push
or
xchg
fdivrl
popa
sub
cld
mov
xor
cld
fwait
push
xchg
aam
jno
insb
inc
jbe
ds
popl
idivb
xchg
jle
mov
arpl
cmp
test
lods
mov
sub
pusha
inc
mov
inc
stos
add
add
add
sub
js
mov
call
push
mov
ret
push
lea
test
in
testl
xchg
jg
add
mov
push
xchg
sub
add
push
push
mov
shr
addr16
xchg
mov
xor
push
xchg
out
call
add
push
call
pusha
pushf
sub
nop
pop
notl
in
mov
adc
inc
dec
mov
std
sbb
push
test
out
xchg
xchg
test
mov
mov
inc
rorl
out
sub
xchg
std
pop
pop
test
iret
mov
add
add
add
js
xor
cmp
inc
call
add
inc
call
ret
inc
push
lcall
add
jp
testb
inc
aaa
adc
lods
loop
xor
mov
push
jl
in
ret
push
das
fildl
xor
add
cmp
inc
add
fcoml
testl
mov
add
add
add
out
mov
pop
out
test
cmc
sbbl
add
cwtl
in
pushl
pop
xor
jnp
jno
add
sub
jmp
cltd
jle
test
test
fwait
jge
pop
test
xorl
ficomps
mov
cmpsl
add
pop
test
addl
mov
sub
cmpsl
add
add
fwait
adc
test
xor
repz
test
sub
add
pop
test
add
aad
dec
ja
out
push
jg
add
shl
add
out
fbld
cs
push
out
push
jg
add
shl
sub
out
fistpll
js
aad
test
jbe
out
fstl
sub
add
add
fistpll
js
fsts
fwait
cmp
mov
fistpll
js
fnsave
sub
out
dec
mov
pushf
push
fistpll
js
loope
insb
mov
out
ret
jmp
mov
fists
fwait
inc
aas
jmp
pop
xchg
sarb
in
in
or
push
jae
inc
aas
jmp
pop
xchg
rclb
add
add
in
in
fistps
fadds
jmp
pop
xchg
sar
ret
call
aad
fs
add
inc
in
add
xchg
push
je
fstpl
in
pushf
inc
adc
js
jp
jmp
fwait
pop
push
out
iret
test
rcl
pusha
leave
ja
add
adc
pop
or
jmp
or
cmp
or
mov
add
add
add
cld
vmovsd
pop
pop
inc
int3
mov
mov
mov
aam
sar
mov
cwtl
add
inc
sbb
cld
psubsw
sbbl
jno
cmp
xchg
inc
mov
add
inc
inc
lock
aas
adc
sub
decl
adc
adc
outsb
or
add
add
add
add
movsb
mov
js
add
lds
push
js
call
test
pushl
pop
js
call
push
pop
adc
sub
add
mov
inc
aad
call
mov
mov
jbe
and
mov
add
je
shl
lods
add
add
add
add
aaa
pop
or
repz
push
repz
je
adc
notl
rdtsc
xchg
adc
cmp
and
testb
sub
pushf
adc
cmp
jl
xor
out
sbb
push
or
xchg
xchg
sbb
lea
cs
push
and
mov
sbb
and
pop
add
mov
add
add
add
and
mov
sarl
loope
repnz
xchg
adc
sbb
xchg
push
sbb
shr
mov
adc
sti
sbb
xor
pop
vpandn
imul
je
sar
pop
adc
sbb
call
sar
push
shlb
outsl
dec
jecxz
and
and
stos
push
xchg
add
sub
rcl
and
out
xchg
adc
push
cmp
nop
shl
inc
inc
int
add
xor
adc
jo
or
das
xchg
dec
add
push
adc
hlt
dec
out
lahf
imulb
and
xchg
shlb
and
xchg
xlat
je
cmp
push
call
push
push
add
add
add
dec
push
call
clc
add
orl
add
mov
pop
pop
cmp
sbb
add
je
cld
shll
sbb
xchg
outsl
mov
in
adc
inc
and
or
shlb
sub
leave
push
mov
xchg
in
sbb
in
mov
push
scas
cmp
pop
pop
es
add
mov
in
sahf
js
rolb
add
add
mov
test
std
fldenv
or
sahf
imul
cmp
rclb
les
mov
sbb
daa
popf
aaa
adc
adc
xor
mov
fdivs
bound
fnstcw
inc
scas
pop
aad
or
pop
fiaddl
add
sbb
add
adc
mov
je
lock
ret
xor
add
adc
dec
pop
pushf
sti
mov
out
div
xchg
add
xchg
daa
sbb
pop
lahf
mull
bound
push
xchg
mov
out
ret
adc
mov
sbb
cwtl
mov
sbb
sub
pop
jecxz
xchg
adc
arpl
gs
cmc
mov
sub
push
mov
adc
ds
adc
xor
add
add
add
cwtl
fcmovbe
sbb
jmp
lret
mov
popf
and
jbe
mov
or
into
ljmp
pop
adc
pop
push
add
popa
jns
jl
adc
xchg
pop
sub
int
in
lcall
popa
xchg
mov
test
repnz
pushf
dec
in
add
add
lds
sbb
test
out
pop
test
adc
push
bound
pop
aas
sbb
add
sub
jno
xor
add
arpl
testb
push
ss
rcll
adc
xlat
pop
push
idiv
cld
je
xchg
and
adc
incl
add
add
ret
adc
add
cmp
pop
push
mov
sti
adc
and
mov
pop
inc
ja
divb
ds
cmp
icebp
adc
or
mov
inc
adc
add
andb
ss
add
mov
adc
imul
outsb
cmp
gs
mov
jns
test
add
add
push
pop
aam
pop
mov
add
cmp
jo
mov
shrb
pop
js
lock
sbb
mov
sar
mov
cmp
jmp
pusha
mov
pop
js
mov
fnstsw
aaa
rorl
test
jp
add
pop
sub
std
jae
pop
notb
xor
cmpsl
adc
add
add
arpl
lods
add
shll
mov
pop
mov
data16
mov
push
icebp
movsl
sbb
add
push
idivb
adc
add
add
dec
push
mov
pop
adc
mov
shrb
lret
push
cs
imul
xchg
das
jo
out
lcall
fsubrs
xchg
cld
int3
out
add
add
add
flds
lcall
out
add
loopne
std
sbbb
fs
std
sub
daa
jp
jg
xchg
in
call
sbbl
das
xchg
push
repz
add
call
bound
jp
sbbb
call
lcall
dec
int
inc
jmp
add
add
add
daa
inc
jmp
pop
inc
divb
test
out
or
push
loope
add
add
je
xor
pop
adc
jae
xchg
je
jae
in
mov
sti
je
and
xor
movb
adc
cmpl
mov
or
aaa
int
mov
mov
das
rorb
add
add
add
add
inc
add
cmpsl
mov
xchg
ds
and
add
xor
mov
lsl
add
xchg
test
or
int
mov
push
add
ret
mov
mov
add
or
rolb
out
mov
push
aad
add
add
jno
inc
fnstsw
cltd
iret
testb
loopne
loop
jae
and
insb
sbbb
pop
vmovq
ja
add
jle
fnstenv
insb
fmul
sub
inc
dec
popa
add
out
mov
adc
jle
rol
pop
fucomip
stos
ret
cwtl
jae
call
inc
lahf
xchg
dec
lods
stos
xchg
add
add
add
out
push
adc
clc
shrl
pop
jns
mov
mov
fwait
inc
jb
inc
loope
inc
xor
adc
add
rolb
xchg
sbb
insb
shl
mov
xchg
pushf
scas
fnstsw
and
fildl
mov
adc
mov
call
rcll
add
int3
cmp
aam
fsubrl
cld
sbb
test
cmp
cld
xor
adcl
dec
inc
add
xchg
add
jbe
cmpsb
add
xchg
frndint
cmp
ljmp
adc
dec
jle
xchg
call
adc
push
rolb
push
jge
bound
rol
jb
imul
jmp
push
push
add
add
add
sbb
pop
adc
stc
xor
cld
add
ds
cmp
add
iret
xchg
add
xchg
pusha
repnz
mov
mov
push
mov
inc
xchg
dec
fmul
dec
je
mov
aas
adc
clc
mov
jle
loopne
add
mov
psubsb
add
add
add
dec
dec
or
daa
cmp
in
mov
push
add
repnz
out
pop
jmp
adc
les
cld
mov
mov
sbb
fldl
dec
stos
test
ret
xorb
cmp
or
adc
pop
inc
add
xchg
cltd
mov
add
add
bound
std
test
sbb
push
out
or
std
mov
inc
add
loopne
jae
jp
jmp
pop
push
or
fistps
push
orb
xor
loope
add
dec
push
pop
adc
push
xchg
fsubl
and
mov
xor
push
jle
xchg
add
add
add
fiaddl
xchg
cmpsl
sbb
cmpsl
lahf
outsb
mov
rcrl
nop
loope
ljmp
in
mov
popf
test
add
pop
jle
xchg
insl
adc
daa
sbb
daa
lahf
dec
mov
mov
movsb
in
dec
in
jle
sub
std
xchg
rorl
jmp
int3
add
flds
add
add
int3
sub
inc
jmp
in
ret
loop
int
jmp
arpl
jge
into
inc
or
das
mov
pop
mov
loopne
std
insb
sbb
mov
push
adc
in
sbb
mov
cld
xor
mov
mov
popf
adc
andb
add
adc
add
add
xor
test
cmp
and
inc
sti
adc
cld
cmc
stos
popa
ret
adc
shr
sar
incb
xchg
shlb
mov
adc
cmovo
stos
popa
adcl
shr
addr16
sbb
jo
ss
cltd
fcomps
negl
or
add
add
add
das
call
paddw
pop
lahf
jl
mov
push
idivb
pop
mov
insb
sbb
call
std
je
pop
and
cmp
mov
xlat
dec
lds
arpl
or
mov
push
push
lahf
mov
inc
add
test
aas
inc
pop
dec
mulb
dec
sub
push
inc
cmc
addr16
inc
add
add
add
scas
stos
imulb
insb
sub
push
or
fldt
pushf
lfs
je
fs
dec
add
cmc
es
xor
out
out
push
cmp
mov
insl
and
xor
sbb
dec
cmc
mov
sbb
inc
call
jp
xchg
push
push
push
adc
add
add
add
and
add
or
fisubs
xchg
int
push
jp
andl
push
bound
cmp
scas
mov
scas
jp
add
bound
bound
aad
mov
add
mov
mov
lods
pop
loopne
and
loopne
data16
sub
xlat
jnp
movsl
sbb
cld
mov
loopne
std
fadd
and
push
je
add
add
add
xorb
je
inc
or
rcrb
andl
mov
jb
leave
push
ss
imul
insb
cmp
push
jbe
es
sti
mov
jno
test
and
adc
add
pop
adc
imul
cld
add
xchg
addr16
sti
call
add
add
add
je
adc
call
push
or
sti
call
lds
outsb
push
or
ljmp
in
lahf
xchg
jns
xchg
push
mov
jns
out
sti
pushl
clc
inc
and
inc
dec
mov
xchg
cltd
std
nop
xchg
dec
adc
xor
mov
or
and
lea
or
add
pop
lahf
mov
sbb
jnp
push
or
pop
in
inc
and
sbb
xorl
stc
cld
imul
orb
std
test
or
jb
jae
aad
and
mov
jle
subb
aad
pushf
fwait
push
mov
imul
cld
or
xor
push
push
fadds
xchg
fadds
add
add
add
ja
mov
add
add
adc
add
jbe
arpl
xchg
push
sbb
ss
push
outsb
xchg
and
add
adc
xchg
jmp
add
mov
xchg
dec
inc
mov
inc
adc
sbb
jne
ljmp
scas
lret
add
add
notb
push
nop
testb
mov
adc
cmp
or
repz
loop
xchg
out
loope
add
sbb
loope
adc
jae
std
sub
add
or
cmpsb
outsl
or
das
pop
sar
pop
mov
push
mov
lret
lcall
cmpsl
add
add
add
loop
inc
fldenv
outsl
mov
jns
int
mov
jle
jmp
sbb
pop
push
outsl
add
ljmp
pop
mov
pop
adc
stc
dec
sub
into
imul
jbe
mov
add
andl
lcall
add
mov
mov
cwtl
test
push
adc
das
add
add
add
adc
pop
jl
pop
pop
mov
repz
mov
mov
adc
jl
push
push
dec
and
cmp
adc
stc
dec
and
cwtl
jne
mov
test
repz
jbe
repz
or
adc
xor
adc
je
ljmp
sbbb
add
add
add
arpl
jmp
pop
push
int
pushf
data16
lret
jb
js
jmp
xchg
inc
in
out
mov
add
es
pop
test
pushf
pop
sbb
add
mov
rcr
sub
out
xor
and
mov
push
add
xor
or
out
fwait
call
aad
cmc
push
hlt
jp
movb
add
add
sbbl
xchg
ljmp
xchg
lret
jge
xchg
arpl
ja
adc
add
scas
jl
push
pop
adc
idiv
dec
add
movsl
fwait
mov
sub
cmc
or
bound
call
mov
or
add
add
sub
cltd
cli
outsl
pop
jmp
pop
aas
daa
lds
decb
cmp
mov
sbb
mov
in
je
or
sub
aas
shll
or
add
pop
inc
cmp
lods
lds
adc
jmp
ret
sti
call
pop
adc
loope
lea
call
add
push
mov
sbb
add
bound
add
or
push
push
jae
xlat
jp
std
gs
pop
dec
sub
test
ja
mov
and
xchg
lahf
mov
cli
xorl
and
mov
leave
call
mov
push
push
push
push
and
dec
and
add
add
adc
inc
and
and
xchg
in
aad
add
mov
inc
imul
inc
and
es
repz
sbb
cli
movsl
std
decl
mov
in
push
adc
inc
mov
pop
pop
in
out
add
jne
sbb
jp
mov
pop
aad
jno
cld
cld
push
jbe
aas
pop
and
add
add
add
pop
jp
jne
mov
test
jecxz
cmpl
add
mov
jns
mov
std
lea
add
in
and
or
push
stc
dec
xor
sahf
jp
clc
ds
or
lea
xor
rep
mov
push
shl
ret
aas
cmp
cmp
xchg
popf
repnz
mov
iret
mov
addb
add
add
push
jmp
into
adc
add
popa
cwtl
and
addb
fisubrs
jbe
sbb
mov
lsl
mov
push
pop
pusha
ret
and
lea
cmp
popa
pushf
xor
mov
add
adc
ds
ret
scas
outsb
aam
dec
shl
js
xchg
jne
cmp
mov
out
jmp
push
sar
add
add
add
outsb
fdivrl
shl
sub
outsb
add
sub
inc
jmp
push
jno
mov
add
inc
iret
mov
ss
ret
insb
je
jno
fwait
movd
movsl
fisubrs
adc
pop
xchg
rcl
icebp
insb
std
mov
loope
jg
adcb
mov
xor
mov
call
add
test
call
or
call
lcall
xor
insb
adc
pop
add
jge
mov
imul
and
fsubl
mov
leave
dec
mov
or
call
test
shlb
je
gs
sar
sbb
add
add
mov
mov
jmp
sub
std
mov
inc
cld
adc
test
or
icebp
xchg
jnp
sbb
movmskps
rolb
push
bound
push
shl
push
sti
mov
jns
jmp
mov
xor
pushf
jbe
push
aad
xchg
jbe
insb
or
add
add
jecxz
and
cs
jp
dec
andb
cmpb
push
or
mov
insb
add
dec
xorb
jo
add
mov
or
notb
add
bound
push
jns
mov
mov
jb
fistpll
push
sbb
aam
les
xlat
imul
add
lock
add
add
popa
sbb
mov
adc
mov
adc
imul
ljmp
dec
je
pop
xchg
daa
imull
div
aam
and
push
sub
daa
add
pop
insb
dec
mov
jo
pop
cwtl
adc
and
loop
cli
shl
dec
sbb
jmp
mov
test
sbb
mov
add
add
call
jb
push
push
fdivrs
call
ret
push
ss
bound
jae
pushl
mov
popf
push
lret
or
cmpsl
push
pop
inc
popf
push
out
or
int3
call
les
mov
lea
push
push
mov
rolb
pop
rcrb
leave
stos
push
adc
scas
nop
in
add
add
add
jl
jmp
pop
push
aaa
aad
push
add
inc
sbb
jbe
movsb
jecxz
jo
popa
pop
add
add
pushf
jl
mov
adc
call
mov
xor
add
pushl
xchg
inc
or
dec
and
in
add
xchg
dec
add
inc
and
pop
mov
add
shlb
add
pop
inc
push
lea
pop
and
lods
push
add
mov
or
pop
pop
pushf
pushf
loope
pop
mov
insb
orl
jnp
push
xchg
rep
mov
insb
aam
mov
fldl
dec
movsb
cmpb
mov
xlat
mov
xchg
into
repnz
imul
sahf
test
mov
arpl
add
xchg
adc
sbb
mov
jecxz
pop
push
mov
push
pop
hlt
add
push
lcall
les
in
insb
and
jns
mov
mov
inc
add
add
cld
pop
pop
adc
stos
pushf
rorl
adc
cmpb
or
mov
add
jmp
cmp
out
insl
inc
stc
ret
leave
lcall
add
fsubr
mov
sbb
push
lcall
inc
sbb
xlat
and
adc
gs
or
xor
xchg
mov
pop
xchg
jl
imul
ljmp
adc
mov
inc
adc
add
iret
jmp
fsubrp
pop
jmp
or
popf
jne
add
pop
cwtl
inc
lea
add
add
ss
jno
add
call
das
push
cwtl
into
subl
gs
outsl
sar
cwtl
pop
js
jb
sti
jno
fs
sbb
push
add
dec
push
inc
xchg
in
pop
out
and
mov
push
jb
in
xchg
jnp
pop
rclb
dec
mov
dec
adc
test
jnp
add
add
add
add
push
push
call
or
aas
add
aad
rorb
add
and
iret
jl
add
lea
add
jae
fs
cmp
and
or
lods
pusha
add
pop
cltd
inc
mov
lret
add
xchg
in
cmpl
push
push
add
add
add
jecxz
inc
jae
rorb
xchg
add
dec
or
les
or
pop
fcomip
pop
aad
mov
ja
pop
cmpsl
sbb
imull
daa
jns
rcrb
sar
pop
push
adc
fsubr
sbb
xor
lds
mov
loope
or
movsb
adc
sbb
mov
jp
inc
dec
jns
inc
bound
add
add
lds
xchg
sub
das
cmp
jbe
xor
jns
inc
je
fnstsw
imul
aad
imul
and
jo
pop
jns
in
fs
inc
mov
aaa
jns
stc
fadd
sub
in
sbb
cmpsl
fldcw
adc
jno
mov
rcl
fstp
rolb
add
add
out
push
pop
loopne
xor
pop
adc
xchg
sub
loop
dec
xlat
ret
cltd
mov
lock
stos
pop
rcrl
in
ret
fdivl
xchg
add
and
jmp
aas
nop
push
ja
ret
jmp
rolb
pop
pop
xor
pop
fldl
fiadds
add
add
into
mov
push
pop
aad
subl
imul
pusha
arpl
movsl
jmp
test
cmp
push
je
cs
push
push
sbb
push
mov
pop
nop
cmc
lock
or
jmp
inc
and
xchg
jl
aaa
xchg
inc
and
add
add
dec
and
adc
add
jl
pop
mov
add
mov
cmp
inc
cmp
call
lea
push
mov
out
test
xchg
shlb
mov
inc
mov
or
popf
std
ror
cmpw
add
faddl
je
xchg
std
imul
add
add
popa
std
mov
or
pop
jle
std
dec
neg
pop
pop
mov
inc
xlat
add
pop
jecxz
and
insb
add
out
and
in
sbb
pop
push
adcl
add
jecxz
je
add
push
add
jle
pop
push
dec
mov
mov
repz
call
aad
cmp
add
add
add
pop
add
pop
xorb
fcmovne
add
add
adc
mov
xor
sbb
add
stos
pop
inc
mov
out
mov
out
push
fistps
aam
add
mov
leave
sub
sarb
jl
adc
pop
adc
jle
in
xor
adc
in
lret
add
add
js
fstpt
xchg
es
jb
add
sub
push
insl
mov
mov
sti
mov
fadd
sbb
mov
sub
loop
add
adc
ret
enterw
in
pop
sub
add
in
mov
inc
add
cwtl
jmp
gs
mov
add
jbe
or
add
sbb
mov
or
lods
sub
aas
jmp
mov
and
out
and
out
and
jb
test
pop
adc
cld
lcall
xchg
aaa
xchg
mov
mov
mov
add
imul
jmp
adc
add
adc
ret
push
mov
jmp
add
add
add
dec
xor
adc
xchg
xchg
jns
pushf
test
push
int
mov
inc
cld
adc
mov
or
lret
mov
test
bound
mov
jmp
nop
dec
call
notl
les
adc
mov
mov
out
dec
adc
testl
pop
addr16
add
jmp
insl
call
add
inc
pop
and
subl
test
adcl
xchg
clc
adc
ret
add
jmp
pop
lret
insl
pop
ds
push
out
imul
insl
stos
fildl
mov
idivb
je
jae
incl
out
xor
add
pushw
pop
and
popa
add
add
add
add
jl
leave
push
and
sar
adc
jle
xchg
and
xor
add
xchg
daa
testl
push
push
dec
out
add
shr
xchg
xchg
or
pop
scas
clc
pop
out
rcrb
pushf
fld
push
pushf
add
and
repz
adc
cmc
jle
pushf
inc
sub
cld
adc
sbb
jle
add
add
mov
in
inc
cld
adc
mov
inc
push
pop
push
sbb
push
pop
mov
stos
push
xor
nop
adc
arpl
cli
insb
push
in
out
pop
arpl
pop
cli
sub
mov
jecxz
sub
adc
push
rcpps
aaa
xchg
clc
mov
add
add
inc
add
ret
dec
or
jmp
movsb
decl
dec
jno
and
subb
mov
sahf
movsb
mov
out
mov
or
ficomps
dec
mov
or
mov
cmp
or
test
fidivrl
pop
je
rcrb
outsb
xchg
les
sbb
add
jg
add
add
add
inc
jb
fstl
pop
add
push
push
dec
or
push
fildl
fsts
loop
pop
rorb
mov
jb
lds
pop
leave
sub
mov
jae
lds
mov
test
pop
out
add
mov
adc
iret
jae
out
call
stos
int
insl
incl
jge
xlat
pop
add
add
add
dec
inc
push
aad
xchg
sub
mov
or
fiaddl
aad
lret
inc
clc
add
sub
sbb
addr16
push
les
cmp
xlat
pop
imul
inc
rcrb
add
pop
ja
lods
repnz
enter
imul
sub
jmp
inc
add
add
add
push
push
pop
jmp
lret
ss
adc
mov
mov
add
aam
fcompl
xchg
sbb
aad
adc
adc
imul
cmp
dec
pushf
push
hlt
push
add
popf
or
pop
or
pop
adc
outsb
orb
ret
popa
cs
ljmp
xor
jmp
shr
pop
mov
in
pop
adc
adc
push
out
mov
or
pop
fldl
xchg
test
dec
incb
pop
lret
cmc
test
adc
pushf
aas
incl
adc
xor
push
dec
push
mov
push
push
fidivs
push
es
jmp
sbb
add
add
add
pop
or
lods
push
or
mov
sahf
aas
cmc
pushf
imul
out
outsb
push
jmp
add
sbb
or
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
inc
add
add
add
or
add
inc
ds
inc
add
mov
add
sbb
ja
push
push
test
add
inc
fldlg2
cmp
adc
loopne
push
call
lcall
mov
and
pop
imul
std
lret
decl
push
add
int3
dec
add
and
mov
pop
sbb
and
push
add
add
add
pop
les
push
stc
push
inc
push
push
adcb
out
leave
add
in
sbb
jb
addr16
adc
cs
and
inc
push
cwtl
iret
cld
jae
cmovo
aas
or
push
add
aas
adc
out
sbb
out
int
add
adc
rol
pop
call
add
pop
mov
icebp
inc
push
fucomp
mov
mov
imul
ret
leave
mov
out
push
bound
mov
add
jmp
ja
xor
add
stos
sti
stc
pop
call
add
prefetchwt1
rcrl
mov
popa
push
push
subb
pop
dec
popf
ret
pop
inc
push
add
add
add
add
in
and
pop
mov
imul
jmp
stos
push
fucomi
pop
mov
pop
push
pop
dec
or
fsubl
pop
adc
stc
adc
jmp
jae
jb
xor
outsl
inc
push
add
repnz
adc
fnstcw
std
jne
sub
fs
add
mov
sbb
push
das
adc
adc
pop
call
mov
xchg
ds
jp
pop
dec
repnz
pop
jns
mov
fisttpl
add
and
es
inc
sarb
repz
das
rolb
pushl
shl
lock
ds
push
add
add
add
aad
mov
aad
and
aad
sub
or
dec
push
xor
mov
int
mov
icebp
cli
lcall
mov
aas
mov
push
jmp
daa
in
cmp
jl
jecxz
lock
lret
pop
adc
stos
mov
dec
fs
pop
arpl
or
pushf
fidivrs
cmp
add
add
or
inc
mov
inc
add
and
mull
cmp
jmp
repz
adc
imul
or
rcll
fbstp
std
xor
aas
or
jp
or
cmpb
pop
adc
icebp
imul
sbb
je
insb
jnp
fldl
or
popf
dec
add
xchg
cmpsl
out
add
add
add
aad
gs
lahf
push
cmp
ja
iret
xchg
sub
add
push
inc
lret
test
lret
jnp
jmp
push
or
imul
cmp
jae
insb
fistpl
fldl
or
enter
daa
out
dec
out
xor
xchg
pushf
gs
call
add
lcall
cmp
imul
mov
fisubrs
adc
pop
jno
cmp
push
movsl
call
outsb
in
inc
jmp
jmp
rcrl
bound
add
dec
push
mov
adc
pop
out
rclb
inc
aaa
mov
pop
or
or
fildl
add
scas
add
add
add
cmp
in
mov
add
aam
push
mov
lock
ja
push
mov
adc
inc
mov
xor
ret
adc
add
les
adc
add
and
jle
and
or
inc
arpl
inc
roll
lea
icebp
and
or
and
adc
add
add
add
pop
mov
mov
das
adc
pop
adc
adc
xchg
push
std
test
loop
xor
push
in
sub
in
inc
jmp
add
jle
cmp
add
clc
pushl
scas
js
in
pop
adc
int
mov
xchg
out
outsl
popa
std
fidivl
or
xlat
out
cmp
pop
add
add
add
jp
add
insl
divb
je
inc
mov
flds
push
cmp
inc
xorb
sahf
jns
add
daa
testl
push
mov
shl
mov
cmc
les
adc
push
mov
out
stc
lea
cmpsl
add
push
xchg
or
jae
out
adc
mov
in
sub
add
out
nop
lcall
mov
xlat
insb
into
clc
leave
es
add
push
xor
fistps
outsb
push
and
add
pop
nopl
xlat
jecxz
mov
sub
mov
lret
add
xchg
mov
add
fsubs
sub
mov
and
add
add
add
push
test
out
je
loopne
pushaw
dec
adc
stos
mov
nop
fnstenv
xchg
notb
pop
mov
aaa
xchg
imul
jg
lock
adc
jmp
pop
out
adc
mov
out
notb
push
or
or
add
cmp
push
add
add
xchg
xchg
lahf
and
mov
call
inc
ja
shlb
push
xor
mov
add
xchg
add
in
decl
adc
mov
adc
loopne
mov
pop
ret
mov
pop
add
dec
and
push
dec
orb
mov
push
and
push
sub
add
add
dec
mov
sub
inc
mov
add
mov
and
mov
xor
mov
mov
pop
cmp
add
mov
add
mov
and
shl
lret
dec
js
mov
pop
jmp
lods
sbb
jmp
stos
mov
add
aad
mov
mov
xor
aas
pop
jg
jae
jb
mov
add
add
push
nop
push
mov
popl
mov
and
daa
sub
add
add
sub
sbb
xor
adc
lahf
insl
shl
add
adc
and
sub
pop
adc
add
popa
cwtl
inc
sub
jno
aad
out
mov
fldl
setbe
dec
adc
add
add
mov
xchg
add
add
add
pop
adc
pop
mov
adc
jge
jo
jge
bound
xchg
pop
cmpsl
add
xor
sub
pop
push
push
mov
inc
adc
sbb
adc
je
hlt
daa
cmp
subl
mov
loope
jg
fimuls
mov
popf
dec
pop
mov
add
add
push
jae
test
and
pop
inc
adc
jae
add
inc
pop
loop
or
pop
adc
in
pop
xchg
clc
push
sub
mov
rcrb
cmp
mov
sub
adc
mov
mov
mov
push
pop
mov
jle
test
adc
movl
adc
add
add
add
dec
std
push
sub
jle
sub
push
jge
adc
shl
adc
push
std
pop
inc
adcb
inc
addr16
jmp
pavgb
add
lock
cli
je
sub
push
push
mov
outsl
adcb
int
adc
call
aas
adc
cmp
movb
add
add
clc
ltr
add
js
cld
leave
ret
push
or
aas
or
pop
test
adc
jae
out
aas
pop
mov
dec
sar
mov
jns
pop
xor
pop
stc
adc
cmp
jmp
pop
cmp
inc
pop
pop
notb
dec
js
cmp
add
add
and
call
dec
adc
test
xor
add
xor
add
push
pop
dec
jne
ret
lods
icebp
pop
and
add
adc
dec
out
imul
pop
out
insb
pop
sub
adc
add
loop
jo
popf
out
pop
mov
or
inc
aas
adc
mov
in
inc
push
pop
adc
add
add
add
movntq
pop
cwtl
xor
add
push
pop
sbb
cwtl
mov
loopne
pop
dec
sar
sbb
add
rorb
push
push
xchg
clc
std
push
out
xor
push
cwtl
inc
add
or
in
imul
pop
adc
lods
jnp
std
insb
sbb
push
jae
push
push
data16
in
repz
add
mov
pop
adc
je
in
std
jmp
adc
push
out
and
pop
adc
cltd
add
mov
sbb
cmp
cld
hlt
mov
inc
jmp
cmc
inc
std
add
cwtl
push
and
movsb
aad
pop
adc
push
outsb
adc
mov
cmovo
fwait
enter
push
ljmp
cmp
add
add
add
or
add
inc
jg
add
xchg
and
mov
add
andl
add
cld
xor
adc
cmp
xchg
add
mov
add
rcrb
jle
push
adc
add
add
xchg
inc
pop
xchg
mov
add
and
add
add
mov
sub
or
sbb
jp
loope
cmp
test
lods
inc
jae
addr16
push
popf
addr16
inc
pop
ja
mov
mov
add
xchg
jmp
adc
xchg
mov
and
push
call
jmp
jns
xchg
cmp
add
sub
popa
shlb
fsubp
jge
dec
adc
pop
add
add
add
fistl
add
push
jl
mov
inc
fmul
outsl
shl
xchg
fildll
shl
cmp
insl
dec
into
icebp
andl
xor
das
ficomps
mov
mov
push
lret
inc
aaa
push
dec
dec
sahf
icebp
cmp
push
mov
jecxz
shl
push
lahf
mov
gs
hlt
adc
add
add
add
push
add
mov
mov
push
call
jle
pop
lds
adc
inc
jmp
add
call
data16
call
mov
call
ss
out
add
sub
jl
push
adc
stos
incl
test
std
sbb
adc
stc
add
add
add
push
pop
out
dec
push
jmp
push
sbb
add
enter
aam
in
pop
adc
aad
stos
ljmp
push
sbb
out
cmp
std
test
out
jne
mov
aas
jno
aam
xchg
andl
ret
dec
mov
push
mov
lods
mov
or
xchg
add
add
cmp
and
xor
lods
outsb
mov
push
mov
lods
mov
iret
jo
xchg
shl
aas
or
mov
pushf
loope
push
std
adc
mov
loope
add
add
repz
mov
popa
jl
cld
jae
icebp
aas
pop
mov
cld
push
and
fcom
push
push
roll
add
ds
mov
roll
add
add
stos
mov
lods
aad
pop
mov
push
adc
sar
frstor
add
push
dec
or
dec
loopne
aas
pop
stos
sbb
xor
or
add
adc
inc
jl
add
pop
xor
cmc
arpl
sbb
cld
adc
push
xor
les
sub
aas
xor
adc
add
add
push
sub
add
roll
loop
mov
popa
ds
xchg
aad
jmp
push
lds
jmp
or
add
mov
idivb
adc
fld
fimuls
jecxz
out
pop
sub
sub
fwait
ljmp
or
pop
ret
jg
cltd
cmp
add
add
mov
add
aas
mov
push
cmp
inc
arpl
enter
call
pop
mov
das
bound
inc
mov
inc
lds
std
push
push
adc
jmp
pop
jecxz
fs
cmp
out
movsl
mov
arpl
pop
jne,pt
or
adc
sbb
add
add
cmp
pop
sub
aam
sub
in
enter
and
add
push
rorb
push
stc
cld
pop
add
xchg
out
add
add
cli
mov
add
aaa
jp
mov
call
mov
fbld
or
add
adc
dec
add
add
add
inc
inc
push
inc
adc
sti
je
mov
xor
ret
mov
sub
sub
add
xorl
fistps
shrl
xchg
cmc
xor
push
mov
push
sub
into
incb
sub
dec
or
lret
add
mov
add
add
cmp
aam
mov
adc
sbbl
pop
mov
xor
cmp
int
add
testl
arpl
popa
mov
add
test
imul
hlt
adc
add
out
test
cmp
jg
aam
push
insl
pop
fld
mov
fs
imul
add
pop
adc
fstpl
mov
negb
cmpsl
add
rcll
xchg
lds
mov
mov
push
fstpt
dec
add
jle
dec
cmc
dec
add
lahf
xor
cmc
cmp
cs
daa
inc
xlat
mov
andl
mov
fadd
or
in
or
pop
add
add
add
add
mov
adc
pop
jmp
cld
xor
stc
ljmp
or
call
test
std
aam
and
in
cmp
jmp
push
call
sub
insl
mov
xchg
fdivl
popa
xchg
arpl
and
add
mov
jmp
xchg
adc
jo
add
add
lret
scas
out
inc
add
sbb
int3
cltd
mov
sbb
mov
sbb
push
jbe
cmp
jne
int3
or
sarl
loop
push
test
ret
fistps
add
mov
add
mov
orl
aaa
test
dec
cmp
add
add
add
adc
cmp
dec
adc
clc
adc
es
mov
mov
mov
mov
cmp
aas
add
jecxz
sti
xchg
sahf
movsl
inc
jae
cmp
out
jle
sub
xchg
sub
xor
mov
popa
inc
pop
sub
sahf
push
add
xorl
js
add
add
add
sub
dec
lods
inc
je
stos
pop
or
insb
and
fcompl
add
pop
sub
jbe
cmpsb
inc
pop
aas
testb
add
lcall
mov
xor
and
inc
and
push
jge
out
or
xor
sub
lret
adc
add
add
add
out
sub
cmp
pop
cmpsl
add
dec
jmp
sbb
add
pop
ffreep
add
or
and
lcall
ret
sub
testb
adc
dec
insl
or
fcomps
sbb
mov
sub
or
add
add
add
aam
adc
dec
mov
pop
adc
aaa
sbb
sub
lcall
in
push
int
call
movsl
outsb
xchg
rcr
stos
aas
mov
or
adc
xor
xchg
mov
push
push
cmpsl
int
std
in
xchg
loope
mov
out
mov
add
add
pop
adcl
notl
add
ljmp
inc
cld
jmp
mov
idiv
add
add
cmp
je
lock
adc
add
cli
jne
push
xlat
decl
pop
cmovo
adc
ljmp
aad
pushl
push
add
in
push
push
inc
jecxz
mov
adc
mov
add
add
sahf
mov
call
mov
mov
add
roll
sub
adc
inc
sbb
lods
dec
je
out
stc
jne
mov
pop
test
sahf
hlt
sub
aaa
sbb
out
jb
cmpsl
or
xor
jp
push
cld
jp
xchg
fwait
std
xchg
scas
push
adcl
jmp
inc
pop
xchg
or
add
add
pop
sub
ljmp
and
inc
push
lret
dec
andb
xor
inc
mov
pop
nopl
xor
jge
sub
pop
adc
testl
xchg
lods
jo
roll
repnz
cmp
int3
nop
inc
add
out
imul
push
adc
mov
add
add
outsb
push
aaa
mov
sbb
repnz
adc
out
loopne
ljmp
add
pop
ja
and
and
out
mov
mov
fiadds
arpl
int
pop
out
out
sbb
std
jb
jae
jmp
pslld
outsl
fisttps
pop
cmpsl
pcmpgtb
dec
add
pop
loope
outsl
and
add
add
add
add
add
add
movsl
ud0
pop
loope
outsl
adcb
jmp
pop
xor
jmp
pop
adc
cmp
sbb
pop
adc
mov
add
lea
add
pop
xchg
cmp
imul
popf
imul
or
test
add
add
add
add
int
inc
notb
rorb
nop
add
adc
add
test
add
xchg
add
push
xchg
fcoms
jo
push
std
xor
xchg
sarb
ss
test
jae
mov
pop
addr16
dec
xchg
lods
andl
pop
push
xchg
or
scas
and
jbe
add
lods
incl
pop
in
add
add
push
incl
js
addb
pop
jp
jb
mov
add
pop
insb
js
sti
cmp
add
cmp
call
iret
push
aad
inc
add
jp
add
push
cmp
lea
pop
cmp
mov
push
lock
mov
pop
add
cmpsb
jle
test
add
dec
add
sub
add
add
or
mov
inc
adc
adc
sbb
aad
add
or
out
das
out
push
cmpsb
xlat
andl
mov
jne
mov
add
shl
movsl
push
enter
test
mov
nop
aad
jp
sub
sbb
xor
aad
ret
leave
xchg
mov
icebp
add
add
add
mov
adc
out
pop
iret
and
add
icebp
pop
adc
mov
sub
in
movsb
sbb
into
and
in
mov
sar
pop
push
xor
xor
pop
inc
pop
movsl
pop
xchg
xor
add
js
iret
rolb
std
cs
das
fcompl
inc
jmp
sbb
cmp
std
jmp
add
push
bound
std
jb
cmp
cld
pop
adc
into
stos
ret
cld
fmul
aas
jmp
outsb
sbb
push
jb
loopne
ss
and
fcmovu
and
or
add
adc
mov
jle
mov
adc
inc
aaa
sahf
push
and
add
sbbl
add
add
cmp
mov
lods
in
push
fwait
dec
and
cld
push
fwait
clc
test
incl
mov
std
out
pushl
adc
inc
xbegin
sahf
cld
push
pop
std
call
es
inc
xchg
add
jns
inc
mov
inc
or
add
add
add
sbb
cmp
pop
cmp
mov
pushf
arpl
cmp
pop
cmp
mov
adc
fistpl
add
pop
fsubrl
fistpl
add
pop
cld
out
fstpl
sub
sarl
add
mov
inc
std
mov
cmp
mov
add
add
add
adc
cmp
xchg
push
pop
adc
cmp
adc
sub
or
pop
cmp
add
pop
adc
sub
sub
out
insb
inc
arpl
jne
mov
out
push
xchg
in
push
das
test
add
les
dec
shl
adcl
call
call
add
out
and
sub
icebp
call
push
dec
shl
xorl
xor
jmp
adc
jmp
pop
xor
jmp
adc
jmp
pop
xor
call
cmpsb
add
xchg
pop
adc
jmp
pop
xor
call
pop
add
add
add
add
call
xor
test
pop
adc
jmp
pop
xor
add
adc
stos
mov
nop
xchg
adc
ja
sti
xchg
or
adc
stos
xor
xor
adc
adc
cmpsl
jne
add
add
add
adc
pusha
inc
adc
adc
cmpsl
mov
cmc
adc
push
push
adc
adc
cmpsb
cmc
mov
adc
adc
cmpsb
mov
adc
mov
adc
cmpsb
outsl
mov
add
jle
add
in
adc
push
cmp
xlat
cld
add
outsb
cmp
add
sub
jnp
xlat
cld
add
add
add
add
add
in
leave
adc
cmp
aam
add
dec
cmp
add
in
push
adc
cmp
aam
add
cmp
add
or
adc
cmp
aam
add
cmp
add
sub
adc
jnp
out
cmp
add
dec
sub
es
add
push
cmp
add
adc
jb
out
and
add
add
add
pop
pushf
add
dec
shl
jge
fwait
sub
and
pop
pushf
in
insl
shl
jge
fwait
sub
nop
out
pop
pushf
les
push
shl
jge
fwait
sub
mov
cmpsb
add
loope
ret
int
jne
cli
ret
xor
pushf
adc
in
push
sahf
adc
loop
out
lcall
jge
xchg
test
incl
add
add
in
add
arpl
jmp
popf
es
rol
cmp
leave
lcall
inc
std
aas
jmp
bound
or
jb
sub
outsb
and
jbe
orl
or
es
fs
mov
rsm
sbb
imul
add
add
sbb
pop
inc
aaa
sub
ficomps
adc
sarl
adc
std
add
jns
add
jp
add
jp
add
je
add
je
add
je
add
je
add
je
add
jae
add
je
add
jae
add
jae
add
jae
add
add
add
add
cmp
add
ja
add
ds
jbe
add
jbe
add
ja
add
jbe
add
jae
add
jae
add
jae
add
lods
ds
or
ds
sub
ds
dec
scas
ds
add
ds
out
ds
fldcw
pop
iret
lods
ds
mov
add
add
add
lods
ds
fsubrs
ds
mov
sub
mov
mov
mov
paddq
call
lods
or
jp
xor
insb
inc
mov
test
out
add
xchg
xlat
inc
pop
adc
adc
jmp
adc
ljmp
cmpsb
add
add
add
pop
jge
ficompl
adc
bound
loop
cmp
mov
mov
scas
pop
fbld
loopne
cwtl
mov
stos
cmp
xor
sbb
push
fiaddl
incb
jbe
push
fbld
inc
aaa
cld
bound
add
sahf
xor
dec
sbbb
in
sub
and
cmp
dec
add
les
mov
add
add
das
adc
sar
popa
sub
dec
mov
scas
stc
mov
pop
ret
inc
jmp
mov
adc
cmp
cld
add
adc
ret
inc
jmp
popf
and
arpl
fdivrs
inc
jmp
popf
and
cmp
pushl
cmp
cs
and
test
pop
ret
inc
jmp
add
sbb
frstor
cld
hlt
inc
adc
aaa
mov
out
adc
ljmp
sbb
push
push
cltd
adc
xchg
lock
call
std
mov
or
mov
cld
adc
jns
jl
outsl
adc
add
push
sub
and
add
aaa
or
and
test
add
add
cld
cld
incl
int
or
pop
jmp
mov
mov
mul
adc
pop
sbb
call
rolb
imul
and
popa
pop
sub
imul
fisttpll
aad
iret
push
fnstcw
sbbb
sub
pop
sub
mulb
push
adc
popa
scas
addb
add
add
pop
sub
inc
push
sub
push
jmp
fistpll
cs
call
fisubrl
push
in
mov
mov
movntq
push
lods
inc
jae
test
pop
pop
push
mov
mov
adc
mov
hlt
ret
adc
pop
dec
adc
sbbb
jmp
pop
mov
or
dec
pmulhuw
pop
push
mov
xchg
xor
add
add
add
imul
pusha
les
aad
ret
enter
xchg
filds
sub
cmpsl
stos
pop
into
sbb
jmp
js
and
push
shll
xchg
out
pop
xchg
cmpsl
mov
mov
xchg
cmc
testb
or
pop
insb
sarb
sbb
push
adc
insb
sar
imul
std
inc
push
loopne
push
adc
add
lahf
sar
aam
add
and
in
adc
rcl
mov
sbb
sub
rcll
mov
add
out
and
sub
in
fists
shrb
in
out
and
aam
pushf
add
jmp
pop
nop
jl
imul
add
adc
add
add
int3
pop
adc
in
es
dec
push
inc
je
dec
jb
jle
or
or
lods
fstpt
push
inc
negl
cmp
pop
jecxz
and
inc
or
bound
jmp
inc
cld
je
add
adc
cmp
jo
cmp
or
mov
add
cmp
jo
inc
aad
add
adc
lds
add
add
add
add
push
add
inc
jae
xor
pop
cli
call
add
dec
push
jno
adc
add
push
cmpsl
sbbb
xor
sub
xchg
out
pop
bound
jle
pop
test
aad
test
dec
push
xlat
push
in
popf
nop
scas
xor
dec
jb
inc
pop
lods
inc
je
push
dec
push
sub
add
add
roll
push
sub
mov
inc
shrl
shlb
adc
cmp
jmp
push
cmp
jmp
sub
push
mov
push
sbb
xor
mov
ret
push
xchg
cmpsl
mov
sbb
aaa
inc
cmpsb
outsb
xor
mov
daa
mov
mov
adc
shl
xchg
sbb
cmp
add
add
jb
or
out
loope
ljmp
push
cmpsb
shll
dec
sub
sub
fldcw
mov
mov
loopne
test
aad
jle
daa
add
push
cmp
xchg
add
add
xchg
jb
cli
sti
insb
xor
mov
adcl
sar
jns
imul
dec
sar
imul
add
add
sub
bound
xor
das
mov
and
pop
ret
mov
cmpsl
adc
in
push
jbe
pop
mov
scas
and
push
insb
xchg
push
push
imulb
push
test
outsb
sahf
or
pop
bound
popa
pop
sbb
add
pop
pop
mov
mov
idiv
aas
add
jge
add
add
add
ja
das
scas
popa
adcl
inc
aaa
xchg
les
jl
mov
popl
decl
loope
call
jp
roll
testl
sarb
adc
adc
pushl
xchg
sarb
ss
add
adc
push
iret
data16
add
add
xlat
inc
mov
scas
xlat
dec
add
pop
inc
add
pop
sub
push
scas
sahf
cmp
sbb
std
xchg
push
scas
inc
jae
pop
inc
data16
fisubl
cmp
addb
adc
inc
stos
int3
pop
into
sub
sbb
sub
xchg
sub
cmpl
cmp
negb
mov
add
pop
sub
mov
xchg
hlt
push
add
jnp
adc
adc
and
int
add
mov
xchg
xor
adcl
and
sbb
push
dec
shl
lret
or
pop
mov
out
insl
sbb
mov
mov
add
and
punpcklbw
leave
adc
add
add
add
int
mov
icebp
adc
xor
fidivrs
add
sbb
push
insb
shl
xor
mov
sub
test
inc
movsl
inc
jmp
mov
adc
cltd
dec
sar
or
sub
outsl
repnz
jmp
add
add
add
mov
sub
test
outsb
stos
add
outsl
push
call
sub
nop
shr
stos
adc
mov
std
mov
adc
rcll
imul
adc
mov
add
ljmp
in
rorl
add
aaa
daa
jno
jnp
std
push
pop
cmp
loop
pop
test
in
add
add
add
add
xchg
call
lea
sub
push
mov
outsb
pushl
cli
sbb
shl
jne
divb
xchg
inc
and
cmp
std
addr16
adc
andb
repz
sar
rcrb
mov
in
add
adc
pop
insb
in
in
push
leave
pushf
mov
out
add
add
push
filds
add
and
scas
dec
xor
leave
xchg
add
mov
jecxz
daa
cs
je
and
sbb
jno
add
gs
cld
mov
xchg
daa
jno
sub
xorb
out
pop
sub
mov
inc
mov
ljmp
push
jb
push
pop
in
mov
sub
mov
jmp
popf
add
add
add
daa
adc
adc
test
mov
or
sbb
mov
xchg
in
ret
pop
adc
jl
in
cmp
pop
adc
jle
mov
mov
fbld
loopne
mov
loopne
sub
sub
xor
dec
nop
mov
shll
sbb
and
jns
in
push
add
add
add
add
mov
add
xchg
push
in
add
add
int3
decl
shrl
adc
pusha
pop
adc
imul
les
test
add
ficoms
into
es
cmc
lea
mov
jle
out
xor
add
out
or
sub
push
push
xchg
add
sbbb
popf
bound
out
pop
call
decl
js
add
sahf
lea
pop
adc
inc
adcl
aaa
cmc
iret
jb
ja
adc
imul
pop
fwait
andl
add
out
dec
and
divb
mov
xor
and
add
add
scas
test
je
xchg
cs
sbb
add
cli
xchg
and
push
add
ja
inc
dec
jb
xchg
mov
mov
dec
rclb
dec
xor
aas
mov
dec
in
mov
bound
cmpl
add
sub
sbb
sub
mov
mov
mov
pop
sub
mov
in
rclb
add
add
sub
int
daa
add
mov
adc
negb
clc
into
test
int
jae
js
jbe
hlt
jns
xor
add
pop
sbb
int3
cli
add
push
dec
mov
inc
jns
fbld
lret
xchg
pop
std
sub
push
jns
push
popa
daa
adc
add
add
add
add
adc
push
sahf
imul
adc
lcall
ds
adc
js
push
and
sarl
add
addl
push
push
out
lcall
rorb
push
sbb
or
iret
mov
and
push
adc
push
adc
popa
jnp
int
push
lods
arpl
jp
xor
es
add
add
add
pop
aad
xor
int
ret
jmp
es
imul
cwtl
in
loope
and
add
or
es
mov
push
in
rorb
add
sbb
or
adc
jmp
cmp
out
int3
paddw
add
add
pop
push
stos
mov
gs
inc
jle
push
jb
jnp
ss
inc
lcall
pushf
push
add
stos
bound
test
pushl
mov
sbb
add
mov
adc
test
mov
int3
jo
adc
leave
test
xchg
xor
and
jle
adc
jecxz
inc
add
add
add
sti
adc
xor
or
pop
pop
push
lods
push
add
push
dec
sub
sub
je
lret
jo
fs
mov
push
fidivrl
push
stos
inc
lret
mov
inc
mov
add
or
pop
test
cli
or
rclb
add
ja
push
mov
add
je
and
cmp
adc
std
aad
fcoml
aad
js
in
sbb
mov
mov
clc
icebp
in
mov
mov
mov
mov
xchg
repnz
xchg
add
push
sub
inc
shrb
adc
and
add
sar
roll
add
add
aam
ret
jecxz
shr
add
es
add
mov
add
in
add
es
dec
or
out
cwtl
xchg
out
cwtl
mov
jno
ljmp
pop
ret
jecxz
add
add
stos
out
stc
sbb
cmp
mov
add
adc
mov
bound
add
add
inc
cmc
sbb
pop
mov
hlt
jmp
into
pop
and
fisubrl
jne
imulb
xchg
mov
call
pop
lcall
loopne
and
fcomp
xchg
shll
lods
mov
aas
call
gs
adc
xchg
aad
and
jl
jl
popf
or
add
das
and
stc
ret
adc
je
sahf
imul
xchg
pop
mov
push
and
mov
lds
inc
je
lea
sub
hlt
pop
add
adcl
leave
pop
inc
and
adc
jp
and
xchg
add
pop
sahf
testl
sbb
and
add
add
repz
pop
cmp
mov
cmp
and
pop
aaa
add
xchg
lret
xor
pop
adc
ja
adc
and
call
out
cmc
jnp
cmp
ss
jge
movb
jg
call
jmp
call
fiadds
and
add
outsl
dec
mov
adc
xchg
adc
call
loop
xchg
sub
std
pop
je
int3
mov
or
add
xchg
out
add
adc
call
pop
adc
fldl
cmp
ja
jp
aad
or
inc
dec
jecxz
pop
fwait
test
sbbl
test
add
pop
xchg
jp
mov
mov
mov
jecxz
jne
jmp
gs
add
pop
pop
add
call
nop
mov
or
lret
jae
out
lcall
nop
sub
out
rol
add
mov
and
pop
jbe
pop
imul
lret
pop
adc
bound
add
add
shll
cli
das
lcall
out
call
xlat
flds
mov
clc
jo
iret
jbe
jb
hlt
cmc
jns
jbe
xor
sbb
push
pushw
fs
test
out
jb
in
and
xchg
or
fiadds
and
xchg
adc
loop
or
jmp
push
xorl
add
add
add
add
or
xor
and
mov
dec
and
xor
add
pop
adc
pop
adc
test
inc
adc
inc
sbb
xor
add
xchg
cmp
inc
popf
cmpsb
cmp
mov
shrl
xchg
testl
fistl
inc
pop
xchg
ret
or
loope
pop
or
add
add
lahf
clc
in
sub
jnp
scas
stc
in
jmp
and
jae
and
cli
mov
clc
xchg
jmp
in
in
sub
cli
testl
je
inc
xchg
mov
add
pop
loopne
cmc
popa
movl
mov
popf
sbb
in
mov
les
mov
lea
add
add
sbb
xchg
add
cmp
stc
pop
mov
sub
xchg
jb
xchg
cmpsb
pop
lea
mov
lods
adc
mov
jnp
sbb
sub
xchg
sbb
pop
ffree
xchg
xchg
and
fst
pop
or
je
leave
das
pop
ret
cwtl
clc
fsubl
mov
add
add
test
stos
mov
pop
jb
fstp
adc
fdivr
sbb
cmp
add
jle
and
aad
clc
mov
jl
adc
sub
cld
pop
sbb
aam
cmp
jmp
sub
push
ja
scas
lret
pop
adc
inc
sar
cld
es
cltd
jmp
ljmp
add
pop
stc
es
je
mov
add
add
add
sti
jae
rclb
push
insl
inc
shlb
dec
hlt
cmpb
jg
jo
cli
push
bound
adc
lahf
add
lds
stos
rclb
in
cwtl
icebp
fs
adc
lahf
inc
scas
push
insb
addb
cli
daa
mov
pop
adc
add
xchg
lret
cmp
movntq
add
add
add
comiss
test
add
aaa
xchg
pop
daa
mov
clc
leave
xchg
mov
mov
hlt
lea
mov
xchg
add
out
and
cld
sbb
mulb
or
mov
adc
adc
fistpl
add
push
comiss
js
lds
dec
dec
push
jo
icebp
test
das
test
add
add
xchg
mov
cmp
jmp
jmp
sbb
rol
cld
xor
inc
pop
lcall
pop
std
aad
mov
mov
scas
lcall
xor
jbe
or
pop
adc
pop
popf
cmp
mov
in
test
subl
dec
stos
pop
mov
insl
pcmpeqb
add
add
dec
outsl
mov
roll
std
or
mov
ljmp
xorb
das
sti
mov
and
inc
lea
xchg
lods
cmp
add
and
adc
sbb
movsl
jbe
aam
addr16
adc
fidivs
dec
push
repz
pop
cwtl
in
pop
xchg
mov
inc
ja
add
sti
xor
add
mov
xchg
rolb
stos
push
xor
faddl
sbb
movb
mov
ljmp
fldl
cld
decl
xchg
loopne
imul
aad
push
subl
icebp
jmpw
or
cli
outsb
cld
arpl
pop
mov
rcll
dec
xchg
cmp
lahf
add
add
add
mov
pop
adc
sub
pop
xchg
rclb
inc
sbb
sbb
pop
lcall
xchg
stc
jmp
inc
xor
push
hlt
cmp
adc
fnstsw
pop
test
add
xchg
shlb
faddl
cmp
inc
inc
mov
je
clc
incl
call
add
cmp
test
add
and
fildl
cld
je
xchg
ja
mov
or
xlat
and
adc
pop
aam
pop
les
add
roll
jnp
xchg
jle
jne
mov
into
rorb
jmp
fmuls
test
xchg
adc
pop
lods
adc
pop
cmp
test
es
cmp
mov
add
add
pushf
jmp
inc
rcr
or
in
add
movb
pop
sbb
jmp
xchg
jge
inc
filds
lret
into
out
test
fildl
cltd
pop
addl
lret
in
jg
rolb
je
daa
xlat
repnz
std
call
imul
shl
test
loopne
add
add
add
mov
cmp
xor
out
imul
or
pop
sub
pop
mov
sub
rolb
cs
adc
adc
mov
fisubl
scas
in
xchg
adc
pop
adc
mov
ljmp
dec
jmp
pop
xlat
loop
pop
lods
inc
movlps
dec
rcll
add
and
or
jb
fidivrs
cmpsl
pop
add
jge
iret
push
push
std
mov
ret
out
xor
mov
out
or
cld
bound
mov
and
or
enter
mov
inc
jmp
movsl
adc
call
jne
fs
insb
dec
add
add
add
add
enter
add
out
lods
mov
pop
ret
pusha
mov
rolb
lcall
stc
out
lods
adc
bound
pop
cmp
mov
add
push
call
mov
add
adc
dec
add
push
les
fdivr
xor
aaa
adc
je
pop
add
add
add
mov
adc
mov
iret
cld
mov
sbb
push
in
jno
rcrl
adc
cld
push
dec
stc
fs
cvtdq2ps
push
push
leave
inc
adc
sbbl
cs
das
notb
mov
jmp
call
pop
call
inc
adc
stos
js
jp
cmp
add
add
sub
test
call
fmull
stos
and
add
pop
xor
dec
sub
push
add
xor
add
cmpsl
fildl
pop
shrb
add
add
sahf
insl
sub
cld
test
adc
pop
call
adc
cmp
in
jecxz
incl
pop
cli
push
call
add
push
out
push
and
cmc
mov
jb
in
in
adc
add
fs
fcmovnbe
leave
mov
sar
xchg
jl
bound
add
aad
xchg
adc
add
dec
ret
or
mov
loop
push
negb
cmpsl
add
adc
sbb
cmp
cmpsl
add
aam
xchg
add
add
sahf
cmpl
sbb
in
pop
adc
add
test
aad
and
rorl
and
ret
shll
dec
int
mov
xchg
pop
idiv
xchg
xchg
inc
and
sub
or
dec
push
test
push
xor
jnp
out
enter
add
push
push
and
add
add
add
movsl
shll
mov
mov
adc
mov
push
cmpsl
cmp
test
out
std
add
xchg
push
lcall
mov
psubd
incl
test
and
andb
add
mov
push
lods
fldcw
adc
push
mov
fwait
enter
sti
xor
add
add
loopne
push
mov
call
mov
call
je
xchg
inc
and
ret
push
decl
lock
push
mov
je
jmp
and
add
lcall
or
lock
scas
mov
mov
sbb
mov
push
repnz
pop
aaa
ja
mov
inc
pop
iret
rol
add
add
add
call
in
mov
mov
jl
pop
xchg
mov
nop
xor
and
gs
add
daa
or
pop
gs
or
pop
sti
inc
xchg
or
xchg
add
xchg
or
mov
adc
out
adc
aaa
fst
fldl
xlat
inc
ret
out
add
add
add
enter
adc
add
dec
or
push
cld
add
mov
js
mov
cld
fldl
mov
jge
scas
xchg
jge
cmpsb
xor
and
negb
insb
inc
lea
adc
mov
insb
lods
dec
idivb
or
loope
es
gs
push
and
shl
insl
orl
push
mov
add
add
add
inc
add
push
insb
and
pop
mov
jge
int3
adc
je
fstpl
addl
add
sbb
xor
inc
ds
std
hlt
rcrl
jmp
mov
add
mov
and
jae
fldcw
loope
xchg
jnp
xor
jb
call
xor
xor
add
gs
and
add
push
imul
mov
inc
in
stc
adc
jmp
push
shll
fwait
mov
or
mov
dec
cmp
and
int3
push
sbb
lret
hlt
push
inc
aam
mov
aam
lret
aam
push
or
sti
je
cwtl
sti
repnz
xchg
xchg
mov
dec
incl
cmpsl
pop
pop
les
ret
push
popf
or
add
add
push
call
mov
out
icebp
mov
add
roll
inc
or
pop
add
jb
pop
test
cld
push
pop
mov
add
fadd
pop
aad
inc
call
in
and
adc
sti
sbb
add
jge
cmpsb
shrb
sub
inc
pop
jno
pop
xlat
dec
clc
les
add
add
mov
call
add
cltd
aam
pop
pop
andl
lds
je
aas
pop
insl
sub
mov
add
cld
call
faddl
inc
adc
inc
and
and
adc
sub
inc
sub
out
test
or
test
out
nop
jmp
jno
add
add
add
iret
ljmp
pop
mov
negl
adc
mov
xchg
fisubrs
dec
xchg
dec
fistpll
add
and
push
xlat
dec
jecxz
adc
bnd
dec
push
jle
pop
cld
out
cmp
mov
xchg
fstps
mov
pop
int3
add
cld
outsl
add
add
add
add
out
sti
icebp
cld
scas
stos
jae
mov
out
call
jb
or
cmpsl
xchg
push
mov
pop
adc
pop
mov
and
std
scas
pop
push
div
std
adc
jae
jmp
jns
inc
jmp
fdivl
jmp
pusha
adc
and
jmp
sub
xchg
mov
add
sub
cld
insb
push
push
incl
jg
jo
add
stos
sbb
dec
mov
aad
out
mov
cmp
call
xor
or
lret
frndint
test
js
insl
pop
and
or
and
xchg
cli
or
mov
fwait
or
inc
xchg
pusha
add
adc
add
add
add
cld
xor
imul
dec
mov
data16
rorb
into
into
fsub
and
sbb
pop
stc
add
adcb
xor
pusha
sti
sbbb
add
pop
fldl
add
ja
shll
inc
adc
mov
xor
iret
add
jmp
push
mov
add
add
pop
aad
add
mov
dec
cs
aas
pop
arpl
and
add
shlb
insb
cld
push
push
sti
cld
jo
in
stos
dec
cmp
xor
daa
sahf
push
inc
xchg
out
pop
out
aam
dec
inc
ffree
icebp
xchg
mov
not
pop
jg
ds
cmpb
in
sub
out
inc
add
add
add
add
adc
add
pop
insb
xor
dec
insb
cmpsb
cmp
mov
fmuls
jecxz
adc
jp
loope
inc
in
adc
add
push
jb
fucomp
pop
stc
fnstcw
jle
imul
test
pop
jge
sbb
cmp
xchg
jg
cmp
cwtl
rclb
ljmp
pop
xchg
inc
sub
add
add
popa
shll
mov
adc
jae
inc
pop
and
xor
loope
pop
or
in
push
jmp
in
push
cmc
fsubrp
cld
xchg
mov
dec
lds
in
xor
ret
xchg
sub
or
sbb
pop
adc
add
jp
add
test
sub
or
add
add
cmp
push
setle
and
test
pushf
add
cmp
or
adc
fxch
xchg
mov
mov
xchg
jne
ja
rorb
jnp
mov
sahf
inc
loopne
inc
adcl
fidivrs
sysenter
xchg
dec
or
stos
sbb
dec
xlat
adc
test
push
mov
lock
add
add
and
lcall
mov
in
adc
mov
sub
lea
sub
std
mov
mov
adcb
pop
cli
xchg
sarl
in
pop
dec
in
testb
out
fmuls
test
lods
or
pop
call
inc
add
add
add
mov
out
add
std
sub
pushf
call
xor
clc
ret
adc
xchg
mov
pop
adc
push
nop
inc
into
js
jno
push
xorb
push
jp
mov
xchg
sbb
or
out
xchg
xor
out
fst
cmc
xchg
adc
add
imul
xchg
inc
je
andb
dec
add
add
add
sbb
ljmp
sbb
adc
add
shr
mov
adc
add
sbb
sti
jno
gs
xchg
jo
pop
adc
cwtl
call
out
jmp
ficoms
subl
adc
dec
shll
icebp
ljmp
pusha
pop
add
jmp
add
add
add
mov
int
stc
sub
loopne
jb
loop
and
stc
sub
test
jb
loop
sub
aam
and
push
call
rcr
shlb
ficoml
std
sub
in
cld
arpl
and
ja
dec
and
std
mov
inc
adc
mov
call
test
add
add
pop
sbb
xor
cmp
dec
push
mov
call
pop
xor
ret
sub
rorb
push
inc
dec
push
push
adc
dec
push
pop
adc
push
jl
add
sbb
xchg
sub
sti
adc
cld
fdivrl
inc
imul
les
sti
adc
pop
jae
addb
add
add
or
popa
mov
jmp
sbb
dec
and
lods
inc
or
in
setle
mov
jecxz
je
aad
sub
sub
notb
cld
add
or
add
setle
xchg
push
push
std
jae
adc
insl
repz
jnp
cld
dec
out
push
std
push
rorb
inc
pop
mov
pop
aam
pop
push
add
add
add
hlt
cld
imul
sti
jbe
fcmovb
cmp
and
mov
rclb
add
std
sub
sahf
adc
pop
pop
or
fucomip
call
adc
add
adc
jmp
add
cmpsl
pop
cwtl
shr
add
push
ret
pmullw
mov
or
add
add
daa
or
adc
add
rcr
push
popa
push
repz
out
filds
mov
add
pop
adc
jmp
dec
fisttps
pushf
pop
push
data16
adc
cmpsb
add
dec
inc
mov
dec
sbb
jmp
mov
push
push
add
or
movsl
data16
bound
mov
add
mov
das
inc
adc
call
jnp
push
xchg
dec
lods
adc
bound
dec
lds
xlat
orl
movsl
jae
fsub
xchg
pop
out
push
adc
pop
pushf
inc
add
push
jg
out
pop
or
adc
dec
and
mov
adc
dec
in
paddb
or
xchg
inc
and
inc
call
test
add
add
ja
or
xorl
push
lods
shl
xchg
jb
add
popf
std
pop
lods
repnz
ret
push
mov
inc
xchg
cltd
dec
add
add
call
or
add
scas
mov
mov
push
or
sbb
adc
add
dec
mov
lea
insl
dec
call
test
pop
add
add
add
cmp
add
pop
repz
in
or
daa
mov
imul
inc
mov
add
repz
or
sbb
mov
pop
stc
jae
lret
imul
inc
pop
ja
or
xor
cmpsb
stc
mov
sbb
cli
dec
mov
pop
inc
and
pop
aas
or
pusha
imul
add
add
imul
arpl
push
aad
jmp
inc
out
xchg
stc
ret
fst
mov
mov
sbb
jmp
inc
out
or
jmp
lcall
adc
push
jbe
arpl
shr
jmp
inc
out
sbb
out
xor
cmp
out
push
add
imul
fildll
add
imul
test
add
add
add
adc
loope
out
sbb
sar
orb
cld
outsb
fisubs
cld
jmp
dec
std
imul
sub
sub
std
aam
add
clc
mov
cld
jmp
pop
pop
jl
sub
mov
gs
inc
add
and
jecxz
and
add
add
add
mov
pop
out
mov
sub
xchg
cmp
jo
cmp
fstp
call
test
push
push
pushf
sti
cmp
jo
inc
push
and
sub
test
jg
pop
or
std
push
cli
pop
sti
call
js
xchg
or
sti
call
sub
mov
sti
incl
add
add
pop
movntq
int3
and
in
adc
push
mov
fsincos
test
bound
dec
call
add
dec
pop
pop
cmp
rcrb
xchg
je
sti
je
xchg
cmp
dec
or
push
sbb
sub
test
pop
scas
rcrl
int
cwtl
pop
add
mov
push
or
cmc
xor
int3
cmp
add
add
add
xor
notb
ljmp
fucomp
cmc
andb
cmc
sbbb
cmc
cmp
add
mov
jmp
cmc
lret
divb
rolb
int
jmp
sub
cmc
sbbl
or
cmpsl
call
call
mov
adc
inc
ljmp
adc
loope
dec
add
add
add
mov
test
outsb
cmpb
jge
pop
adc
add
inc
lds
xchg
es
loop
out
pop
mov
jmp
mov
lcall
mov
push
xlat
cld
loop
sahf
adc
lea
adc
imul
pushf
in
cmc
imul
jg
gs
adcb
add
cmp
jmp
stos
fdivl
jmp
std
mov
and
adc
fdivl
push
adcb
shll
jmp
push
xor
mov
xchg
arpl
push
pop
scas
cld
ds
and
fcompl
inc
jmp
mov
add
xlat
rcrl
rcr
nop
jmp
scas
inc
push
jb
inc
mov
add
add
insl
mov
inc
dec
push
fcoms
add
xor
std
add
push
cmovo
pop
mov
and
fbstp
insb
dec
and
add
sbb
jns
mov
mov
add
mov
scas
nop
iret
add
dec
and
das
push
and
adc
std
je
pop
iret
jne
mov
push
inc
push
call
repz
add
add
add
pop
pop
lcall
inc
xchg
stc
test
mov
into
data16
pop
mov
push
mov
xchg
leave
ljmp
add
sbb
pusha
sbbl
js
push
outsl
shl
cmp
cld
loop
ja
aad
adc
push
repnz
pop
pop
ret
add
aad
xchg
xor
xchg
add
add
add
loopne
push
test
ljmp
xchg
cld
mov
cmp
punpckhdq
js
ds
fimull
popa
add
and
fisubrl
js
push
jmp
fsubrl
push
adc
test
inc
pop
adc
gs
bound
stc
sbb
mov
sub
mov
xchg
fcomi
xchg
add
add
lds
out
aad
lret
and
jmp
push
pop
xchg
jo
pop
adc
mov
adc
add
and
xor
imul
push
cmp
cli
loopne
adc
lret
xchg
mov
or
push
ret
and
add
ljmp
mov
subl
xchg
add
add
add
dec
icebp
lcall
jb
xor
sbb
mov
inc
add
test
mov
shll
pop
push
jb
xchg
push
lds
out
cli
gs
sti
leave
sbb
and
mov
cmpsb
push
ret
jecxz
or
fistl
fstpl
out
and
xchg
in
adc
add
add
add
xlat
mov
out
add
dec
push
int3
fiadds
or
in
sti
btc
pushl
and
or
test
loopne
test
push
cld
push
popf
adc
rolb
adc
inc
jg
jecxz
jno
dec
push
sbb
sub
push
sub
std
xor
add
sti
jbe
add
add
mov
dec
clc
and
mov
push
push
hlt
pop
mov
je
inc
mov
ds
pop
insl
inc
hlt
scas
pop
aaa
std
jae
adc
insl
shll
outsb
cld
pop
pop
add
jo
cmp
adc
in
shrb
loopne
mov
mov
sti
sbbb
push
jmp
sub
mov
mov
add
add
pop
cld
out
in
add
adc
mov
repnz
push
cwtl
in
je
aaa
push
add
xor
sbbb
jns
and
pop
pop
jne
jmp
jae
or
adc
jp
or
pop
imul
mov
mov
jp
or
adc
pop
push
adc
push
aad
out
push
in
rcll
adc
push
add
add
add
scas
out
in
movsl
aad
jnp
ss
pop
adc
lds
repnz
xlat
xor
repz
dec
roll
scas
and
subl
lret
adc
pop
scas
sub
and
pop
inc
std
aam
add
loop
xor
adc
jae
add
out
add
add
add
bound
dec
dec
je
sbb
dec
imul
stc
or
dec
jmp
bound
cmc
mov
repz
loopne
int3
inc
int
lods
mov
bound
call
ss
or
sub
xchg
inc
add
es
add
or
or
mov
and
add
add
add
std
jmp
ret
ret
bound
loopne
je
lcall
dec
repnz
data16
mov
add
shl
adc
adc
mov
pop
jnp
push
jno
lcall
in
shlb
add
add
add
in
adc
in
sbb
pop
or
mov
rorb
test
aad
adc
add
add
add
push
add
push
add
inc
pop
jmp
mov
adc
cmpsl
adc
sbb
ja
xlat
mov
push
push
popa
dec
push
out
dec
call
lea
dec
pop
movsl
pop
out
sbb
add
push
and
push
push
call
in
cld
imul
cld
ljmp
inc
out
outsl
mov
add
lods
loop
add
pop
clc
lds
adc
mov
sbb
inc
ljmp
adc
xor
adc
xor
push
adc
pop
adc
cli
fldl
add
std
and
mov
cwtl
dec
lret
push
pop
push
or
pop
adc
xorb
add
dec
lret
push
cmp
or
adc
push
adc
pop
mov
add
add
add
popa
clc
sbb
sbb
test
add
dec
or
loope
add
adc
add
or
pop
adc
add
dec
pop
scas
lret
push
add
bound
adc
push
add
pop
mov
push
mov
inc
mov
data16
outsb
pusha
adc
rcl
cld
jb
sub
and
nop
mov
jne
add
add
pop
adc
push
sub
cmp
jge
add
pop
adc
jmp
pop
adc
add
xchg
push
inc
dec
jb
ljmp
ds
call
ficoml
mov
test
and
dec
add
rolb
mov
and
dec
xlat
roll
mov
add
add
sbb
xchg
and
cmp
test
add
roll
jmp
inc
out
mov
std
add
pop
sbb
test
push
dec
push
xor
aas
add
bound
mov
mov
pop
pop
push
xchg
mov
push
dec
add
xor
ljmp
call
add
add
inc
add
sub
mov
idivl
jp
dec
push
in
sbb
fimull
inc
jb
cmp
out
inc
cmpsb
aas
add
jecxz
outsb
add
sub
bound
das
mov
adc
inc
icebp
subb
inc
mov
mov
inc
and
inc
ds
decl
add
xchg
add
add
js
in
inc
jmp
push
std
mov
xchg
pop
adc
out
and
inc
pop
xchg
cmpsb
jno
pushf
mov
ja
jge
fistpll
adc
out
sahf
mov
mov
add
pushf
push
mov
pop
xchg
sti
imul
lods
adc
movsb
call
cmpsb
add
sbb
sahf
adc
add
add
add
aam
jp
mov
fnstsw
cmp
call
frstpm(287
popa
out
out
and
pop
adc
sub
mov
jmp
xor
hlt
int
inc
jmp
faddp
jae
fmul
cld
std
dec
mov
imul
jmp
daa
adc
dec
pop
adc
add
add
add
adc
dec
push
add
sbb
mov
add
mov
rcr
addr16
jb
cmc
xor
out
mov
push
cmp
insb
adc
add
sti
popf
adc
stos
int3
jae
arpl
mov
dec
lret
mov
cmp
xor
mov
cli
inc
and
arpl
jle
inc
roll
je
add
add
xchg
repnz
fists
in
test
inc
sbb
test
je
add
jmp
inc
inc
add
mov
sub
push
add
push
rclb
notl
pop
mov
out
adc
pop
pop
test
and
aaa
pop
xchg
xchg
or
arpl
push
lea
adc
and
or
inc
add
repz
or
xchg
add
add
jp
xor
shrl
and
sbb
sarl
imul
sbb
cld
push
mov
push
shrb
pop
aam
inc
jmp
pop
cli
clc
sbb
pop
movsl
dec
mov
sbb
push
rcrl
add
gs
mov
insl
dec
insl
and
inc
aaa
mov
adc
pop
movsl
push
incl
add
add
adc
pop
sub
iret
jmp
icebp
xchg
int
inc
arpl
pop
inc
cmc
imul
inc
add
int3
adc
jb
push
fidivrs
rorl
fwait
mov
mov
xor
inc
or
jnp
add
jae
or
imul
add
lds
lcall
add
add
data16
push
add
adc
mov
loop
out
pop
or
xchg
inc
icebp
or
lret
cld
jmp
insl
xchg
fwait
jmp
std
aas
and
xor
mov
out
or
out
cld
jmp
xor
je
push
inc
dec
std
dec
cwtl
jp
inc
outsb
dec
std
dec
or
aaa
pop
mov
add
add
add
and
movsl
cmp
incb
and
test
push
cmp
mov
scas
add
pop
push
add
pop
adc
bound
pop
xor
mov
add
add
xchg
ret
sbb
xchg
xchg
prefetch
or
js
mov
je
push
dec
add
add
add
add
daa
decl
daa
ljmp
imul
pusha
dec
pop
pop
xor
sarl
cmpsb
pushf
insb
mov
ret
xchg
mov
push
or
jmp
add
dec
fimull
inc
pop
mov
add
pop
sahf
add
dec
and
aas
pop
push
nop
popa
lcall
adc
enter
xor
add
add
add
add
add
mov
add
push
dec
add
sub
or
adc
cmpsl
test
sub
ss
push
test
aas
pop
aaa
dec
sbb
or
push
cs
aas
sbb
mov
add
jo
push
sbb
je
adcl
std
imul
aas
pop
adc
bound
push
push
addr16
add
add
aad
adc
push
sub
add
fwait
out
cwtl
enter
push
out
mov
or
jb
inc
and
fstp
cmp
and
fld
and
adc
pop
popa
enter
push
jae
pop
adc
inc
pop
pushf
xor
jge
out
out
mov
pop
adc
lahf
add
add
add
bound
sbb
lds
call
dec
jbe
push
adc
or
mov
call
adc
and
out
xchg
add
mov
mov
cmpsb
popa
xchg
std
jmp
mov
adc
es
in
cld
insl
popf
inc
and
bound
incl
fwait
aas
jmp
add
cs
cld
gs
inc
or
aas
jecxz
pop
loope
jae
int
roll
cld
add
and
ret
repnz
call
mov
sarb
add
cmp
cli
dec
add
mov
out
test
popa
call
xor
notl
popa
cld
pop
cwtl
dec
clc
pop
fldl
testl
add
add
cmp
lea
mov
in
fdivrs
add
aam
in
xor
cld
decl
js
lcall
in
xchg
inc
mov
add
inc
jb
call
dec
clc
ss
add
jecxz
cmp
ss
dec
or
aas
pop
jbe
rcr
cld
push
in
xor
aas
add
add
add
cmp
inc
dec
and
loopne
adc
jae
xchg
adc
dec
sbbb
sub
add
lods
jg
mov
lahf
cmc
mov
js
xor
out
xchg
decl
adc
adc
dec
jae
adc
cmp
xlat
pop
or
inc
mov
call
push
add
add
add
mov
daa
jle
inc
clc
sub
mov
dec
loope
inc
pop
pushw
imul
cli
jg
and
popa
fdivp
xchg
and
add
push
xlat
in
pop
adc
add
bound
mov
push
xor
jns
jb
mov
sub
aaa
adc
mov
xchg
push
jl
sbb
sbb
xchg
in
add
add
arpl
sub
out
bound
add
add
mov
jne
and
push
sub
imul
out
mov
and
pop
aaa
add
outsb
xchg
popa
lods
pop
adc
lahf
cmc
subb
daa
push
add
and
out
xor
mov
dec
fistps
lcall
add
add
add
ret
test
mov
jae
insl
or
push
inc
ja
inc
sub
test
mov
mov
ja
ret
push
outsl
or
push
mov
adc
jno
adc
out
mov
and
aaa
push
add
adc
adcb
xor
out
dec
inc
inc
je
add
add
push
incl
lea
mov
push
ja
xchg
mov
or
pop
adc
mov
adc
add
ja
mov
mov
add
sar
add
jno
pop
inc
xlat
fidivrl
clc
out
push
mov
mov
pop
mov
add
pop
xor
call
nop
mov
mov
add
add
shlb
add
pop
and
inc
inc
lods
mov
out
sbb
pop
mov
add
pop
imul
mov
add
jp
mov
adc
jp
jo
dec
bound
add
fiaddl
xor
jmp
mov
push
out
insb
adc
add
xchg
data16
aas
or
movntq
add
loope
add
cmp
into
test
jae
dec
test
sbb
jp
call
inc
pop
inc
out
sbb
fwait
shr
add
bound
mov
popf
xchg
adc
add
and
add
pop
mov
loop
inc
and
fst
add
nop
inc
repnz
add
add
add
mov
mov
adc
popa
movsb
mov
sub
xor
jne
push
pop
add
xchg
faddp
jae
aam
xor
pop
adc
clc
inc
sti
jae
popf
xchg
mov
sti
insb
rcrl
adc
bound
hlt
xchg
in
aaa
jmp
adc
mov
sub
mov
push
adc
add
add
add
mov
add
scas
dec
or
jle
cmp
popa
bnd
xchg
mov
push
cld
adc
push
addl
push
cld
in
push
dec
cwtl
cmp
mov
decl
mov
jno
mov
stos
and
cwtl
out
dec
inc
addb
mov
dec
inc
add
js
inc
adc
push
and
pop
filds
pop
mov
add
add
add
adc
add
xchg
js
add
jno
je
sti
ret
add
mov
cld
fucom
inc
push
xor
sub
popa
xor
gs
hlt
test
add
pusha
in
and
imul
outsl
shll
adc
pushl
sub
faddl
xor
ret
out
add
aad
sbb
add
add
add
fwait
sbb
inc
loopne
cmpsl
push
test
dec
push
out
sbb
add
out
jmp
inc
test
or
cmp
sti
mov
dec
mov
mov
and
mov
leave
mov
jbe
mov
or
out
sahf
xchg
xchg
loope
ret
arpl
adc
jne
pop
inc
loop
pop
sub
mov
add
add
mov
adc
fidivs
out
dec
pop
daa
call
inc
lret
add
adc
fldl
pop
mov
addb
pusha
aas
inc
sbb
adc
adc
dec
push
daa
add
xchg
mov
add
mov
es
repnz
call
bound
add
fs
bound
cmc
punpckhdq
add
add
mov
ret
add
jb
lock
lods
pop
and
sbb
adc
cmp
mov
cmp
push
and
aam
data16
fsubrl
inc
jmp
or
mov
adc
iret
call
push
adc
pusha
mov
push
fisttpll
push
mov
int3
call
add
add
add
sub
and
lret
inc
mov
mov
je
or
je
flds
stos
push
je
sub
ret
inc
stos
mov
out
test
jg
pcmpeqb
pop
push
push
pop
adc
in
das
adc
test
str
jmp
and
add
adc
dec
add
add
add
add
add
in
and
pop
sti
fmuls
mov
ret
loop
scas
fadds
push
jnp
cmpsb
call
nop
and
mov
jmp
inc
cmovs
ret
xchg
aad
daa
fs
in
daa
xor
mov
or
push
jnp
inc
adc
cmp
cmpl
add
xor
cmpsl
add
add
add
add
test
icebp
cmc
sbb
cltd
pop
mov
pop
adc
add
xchg
daa
mov
jl
test
push
inc
sbb
push
popa
fs
push
inc
sub
out
arpl
out
and
les
inc
add
imul
add
jp
imul
aaa
cmp
leave
jle
add
add
add
cmc
fiaddl
repnz
sbb
in
hlt
cli
pop
ret
add
adc
add
cli
fstps
and
and
sub
pop
adc
jmp
mov
pop
mov
xor
mov
push
nop
in
imul
cmpl
mov
or
nop
test
add
add
cmc
stos
bound
add
or
imul
cmpb
pop
push
mov
inc
and
mov
sbb
or
jmp
push
sbb
pop
ret
dec
sub
push
mov
mov
push
rcll
out
adc
xor
cli
pop
add
mov
add
adc
jne
pop
add
add
add
clc
mov
xchg
lods
inc
imul
dec
push
and
xchg
cmp
and
pop
cmovo
mov
pop
add
cmpsb
ret
pop
enter
and
adc
xchg
push
add
pop
jmp
adc
jl
repz
add
lcall
fs
pop
lahf
test
or
ret
fisttps
rorl
add
add
ficoms
sahf
test
rcrb
and
xchg
enter
test
stos
xor
sbb
mov
out
test
xchg
leave
test
jae
add
call
in
jle
push
xlat
jnp
pop
test
or
pop
sub
add
nop
incl
mov
push
push
add
add
add
jmp
andb
push
mov
mov
push
jge
dec
mov
jb
cmp
xor
sub
and
sbb
adc
cltd
add
xchg
add
div
mov
cmpsl
add
loopne
mov
pop
mov
sub
xor
mov
pop
sub
pop
stos
mov
adc
add
add
mov
addr16
adc
add
mov
fiadds
mov
add
hlt
and
adc
cmc
cmp
or
sbb
adc
mov
popf
adc
mov
fstpl
decb
mov
call
pop
adc
add
mov
jmp
fdivl
or
jmp
add
mov
jmp
sub
push
bound
aam
and
sub
mov
stos
test
movsb
jb
call
xchg
mov
add
push
and
call
push
add
sbb
inc
adc
je
enter
mov
inc
and
xor
mov
dec
stos
subl
mov
adc
mov
cli
incl
add
add
jo
cli
mov
jp
cli
jmp
jl
pop
adc
inc
lock
sti
xor
mov
fdivl
enter
sti
add
mov
mov
pop
xor
and
xor
add
fwait
leave
cld
cmp
test
ljmp
ljmp
outsb
test
fisttpll
add
add
add
stc
sbbb
cld
in
pop
sbbl
jl
sub
leave
gs
leave
cld
adc
dec
out
add
cld
lea
mov
xchg
jge
xor
add
inc
push
push
sbb
dec
push
adc
je
pop
shll
rorl
add
pop
adc
pop
adc
adc
add
add
add
out
xchg
fdivrl
aas
add
adc
add
jecxz
adc
add
adc
push
pop
cmpsl
add
inc
add
loopne
xor
lock
adc
add
adc
add
adc
add
cmp
pop
rcrb
jns
daa
add
or
mov
pop
addl
cmp
mov
pop
adc
pusha
fildll
call
jns
dec
lds
push
int
mov
jo
push
call
pop
adc
bound
dec
pop
les
mov
push
bound
std
inc
sbb
aam
add
mov
lcall
out
mov
call
xchg
and
add
add
add
and
sub
add
or
pop
mov
jmp
push
int3
jb
xor
icebp
daa
sub
adc
dec
and
or
add
invlpg
icebp
adc
xor
pop
add
icebp
sbb
jae
rolb
mov
daa
lds
add
xor
dec
adc
inc
jne
sub
add
add
add
inc
and
lret
dec
mov
cvttps2pi
ret
movaps
sub
dec
je
jmp
or
add
sub
xor
jmp
sub
pop
push
jnp
cmpb
sub
cmc
pop
sbb
leave
jns
inc
scas
jnp
cmp
jnp
cmp
xor
dec
out
in
aas
pop
xor
add
add
adc
push
pop
sbb
sahf
mov
inc
je
insl
ja
andb
sahf
mov
out
inc
jae
add
mov
fwait
add
mov
cmp
and
mov
jae
fadd
jae
fcoms
sub
out
gs
xor
repnz
add
ljmp
xor
jb
pop
and
out
out
sub
pop
adc
inc
sbb
sbb
jbe
push
pushw
aad
out
fistpl
dec
call
add
rclb
js
sbb
push
pushf
stos
lret
cltd
cmp
test
lods
out
mov
mov
pop
pop
adc
push
add
sub
add
add
shrb
mov
adcb
xor
pop
adc
out
jl
call
daa
add
call
sub
imul
adc
mov
scas
cld
jo
cmc
sbb
sbb
inc
add
inc
mov
mov
mov
push
lock
cmc
pop
jb
add
add
cs
inc
lods
popa
or
aaa
push
cmpsl
and
dec
mov
adc
cmp
jno
shrb
repz
and
cmovle
sbb
and
inc
push
decl
xchg
rorb
jo
cld
pop
and
cmp
xlat
add
test
aaa
push
out
dec
rcl
add
cli
pop
testb
rcrb
add
add
add
adc
mov
insb
jae
dec
mov
and
pop
push
jbe
pop
push
cmp
cld
push
jge
pushf
push
add
pop
mov
ret
out
add
pop
cmp
cltd
fcomps
add
mov
jns
push
in
out
pop
add
pop
shrl
mov
add
decb
movsb
inc
push
add
add
add
mov
cmc
mov
sbb
hlt
lds
hlt
out
xlat
jnp
mov
xor
jecxz
or
dec
dec
js
andl
bound
notb
stos
jno
test
stos
or
cmp
cmp
fstp
stos
out
push
mov
clc
ret
stos
fldl
add
add
add
add
add
aad
xchg
sbb
add
or
mov
mov
imul
ret
not
mov
popf
cmc
mov
mov
fcomps
out
or
inc
nop
mov
pop
push
pop
adc
push
adc
dec
int
loopne
mov
push
and
in
and
add
add
add
cltd
mull
add
pop
mov
or
inc
out
dec
and
jnp
std
cmp
jo
push
sub
ret
fucom
imul
daa
push
fld1
pop
adc
jl
call
call
dec
sahf
jno
rcl
sub
test
jmp
leave
incl
add
add
aaa
adc
cmp
pop
jbe
mov
mov
ljmp
dec
xor
sti
mov
xchg
lret
call
dec
pop
and
pop
cmp
mov
addl
mov
push
jno
dec
and
mov
and
decl
adc
xor
out
mov
in
ficompl
test
xor
add
add
xchg
inc
and
cltd
mov
pushl
fwait
stc
push
addr16
pop
sbb
adc
in
jae
fucomip
fdivr
add
faddl
stos
add
adc
fisubs
or
dec
pop
mov
mov
add
pop
mov
mov
aaa
jp
mov
xor
add
add
add
pop
mov
xor
and
cmp
cmp
mov
or
stos
aam
mov
xchg
cmp
inc
adc
adc
out
aad
add
cmp
sub
inc
xchg
sbbb
mov
in
sbb
xchg
pop
scas
adc
ret
push
hlt
xchg
adc
addb
add
add
sbb
xchg
lret
cmp
mov
push
or
xchg
xchg
mov
xchg
sbb
icebp
sarl
push
jae
lret
jmp
xlat
jle
cmpsb
test
bound
aas
jp
jmp
lahf
and
andb
mov
push
push
push
mov
adc
add
mov
mov
add
add
fnstcw
and
mov
add
out
into
notb
subl
push
xlat
bound
movsl
mov
addr16
jae
out
out
test
inc
pop
and
nop
ret
in
lahf
or
add
sub
push
jb
add
lahf
fmuls
lret
out
out
xor
fimull
xchg
jnp
adc
add
add
add
sub
xor
pushf
loopne
decl
adc
jae
call
add
aad
fs
lret
call
jp
jp
ja
and
fistl
mov
adc
dec
xchg
std
pushl
stos
std
decl
jo
nop
loope
adc
mov
idiv
mov
or
std
xorl
dec
add
add
add
mov
pop
jecxz
mov
scas
push
or
inc
add
pop
ljmp
bound
add
lea
xchg
pop
fcoml
push
inc
aam
or
mov
cmp
jl
pop
mov
or
repz
pop
mov
cmpl
jp
jg
imul
cmc
fadds
add
add
aad
mov
sahf
test
pop
in
mov
push
dec
call
fidivrl
xor
adc
hlt
cld
arpl
cmp
push
pop
std
sbb
sahf
adc
push
mov
ret
out
ja
fsubs
fcomps
or
cmp
add
stc
aad
push
add
push
fldenv
sub
out
add
add
add
dec
ret
sub
repnz
into
outsl
aas
addb
add
outsb
mov
inc
add
cwtl
and
dec
dec
jb
clc
lcall
into
xchg
jnp
test
mov
jg
push
int
sub
mov
mov
jb
fisubl
cmp
mov
xchg
dec
out
pop
push
cmp
cmc
pop
cld
dec
add
add
add
stos
test
pop
adc
sbb
in
jmp
scas
call
andl
lea
pop
adc
xor
cmc
bound
or
and
gs
or
xchg
xchg
inc
or
push
pop
pop
in
aaa
add
or
add
out
loope
sub
xchg
inc
cmp
dec
cmp
fmull
add
add
add
enter
data16
inc
and
inc
mov
shlb
xor
inc
aaa
or
les
out
cld
out
out
clc
and
mov
cmpsb
add
jl
and
fstl
or
cwtl
and
shrl
loope
cld
cmp
sub
outsl
and
es
add
add
add
add
movsb
add
push
rcrb
imul
mov
cmp
add
hlt
jb
stos
dec
push
sub
xchg
pop
inc
nop
insl
pop
stos
jl
stos
push
mov
inc
out
add
mov
xor
add
icebp
test
jl
push
sub
mov
mov
jae
clc
sbb
add
add
sbbb
add
adc
cmc
mov
arpl
mov
lahf
imul
pusha
push
inc
icebp
mov
jg
and
sub
sub
mov
aaa
mov
inc
fldl
xchg
mov
or
cmp
sbb
cmc
push
lods
dec
mov
lea
pushf
or
call
add
out
add
in
xchg
add
out
aad
stc
mov
and
mov
fmull
adc
out
jmp
rorb
shrl
and
push
cmc
dec
sbb
pushf
adc
sahf
or
std
sbb
hlt
adc
rorl
pop
cmpsb
cmc
inc
xchg
push
cld
jle
mov
push
bound
add
add
add
add
inc
lret
mov
sbb
pop
push
sbb
call
out
out
repnz
cld
fistpl
push
les
adc
sub
push
add
imul
stos
adc
sti
push
mov
nop
lret
adc
add
leave
in
jnp
sti
mov
push
repz
imul
rolb
add
add
xchg
in
aam
push
aas
xchg
cli
ljmp
xor
out
notb
add
add
mov
jmp
inc
das
shl
add
add
aaa
inc
mov
push
sbb
push
lods
inc
imul
decl
pop
stos
add
add
fs
push
leave
out
mov
xchg
popf
cs
add
add
add
or
das
ret
xor
pop
sub
mov
fsubp
push
push
cli
pop
push
push
fidivl
add
addl
int
mov
lds
cmp
dec
repz
ljmp
add
jecxz
mov
mov
mov
int
adc
lret
add
add
iret
ljmp
inc
jb
mov
jecxz
fadds
cmpsb
testb
cmp
mov
add
xlat
push
jecxz
std
hlt
fiaddl
fbstp
or
nop
or
inc
adc
mov
ljmp
mov
add
icebp
jne
bound
out
mov
add
adcl
add
add
out
inc
aaa
cmp
imul
stc
inc
pop
adc
dec
adc
mov
lcall
jae
test
xchg
xchg
push
test
mov
sbb
test
push
insb
fstpl
jne
iret
popf
pop
push
sub
bts
imul
dec
es
jmp
int3
xchg
imul
bound
fsubrl
add
mov
imul
sub
fwait
es
jmp
divl
or
call
mov
mov
pop
add
xor
pop
add
lret
call
inc
mov
pop
add
add
aaa
push
mov
repnz
mov
ds
inc
xchg
add
add
jnp
sbb
cld
sbb
or
call
mov
jmp
call
lods
push
in
icebp
adc
mov
jl
ss
adc
outsb
pop
pop
dec
push
or
jge
push
and
aas
pop
push
or
bound
add
sub
ljmp
add
add
adc
or
dec
and
add
pop
sub
incb
jnp
push
ds
mov
jns
adc
fucom
sbb
repz
inc
pushf
sub
add
jecxz
aas
sub
and
adc
fisttpll
sbb
or
jb
mov
add
add
adc
cmpsl
add
mov
push
add
adc
jp
in
or
sub
sbb
out
push
dec
fsubl
out
push
fidivrl
popa
adc
aaa
pop
in
inc
dec
shll
push
dec
test
mov
out
rcrl
cmpsb
aaa
push
inc
cmpsb
shll
mov
pop
xchg
fwait
scas
sbb
lods
in
inc
mov
adc
add
add
ss
xchg
push
loopne
test
aam
mov
xchg
cld
insb
sbb
test
jb
nop
test
repnz
cld
push
xchg
jae
inc
std
push
es
mov
pop
xchg
adc
popf
and
jae
or
xchg
lods
dec
add
sub
daa
bound
nop
mov
icebp
pop
adc
flds
add
add
ficomps
rcll
cld
cmp
push
sub
das
adc
test
jne
fnstenv
adc
add
sbb
call
fs
pop
ret
ret
xchg
pushf
pop
das
shr
inc
and
sbb
sbb
sbb
ret
cmp
jl
xchg
push
mov
mov
je
stos
cmp
test
addl
add
add
or
out
fs
mov
push
or
lcall
sbb
test
fmull
adc
stos
add
pop
stos
ja
ss
dec
pop
sbb
add
inc
push
mov
mov
add
push
std
imul
adc
pop
xlat
fldenv
add
add
pop
jnp
push
stos
add
cmp
xor
adc
cwtl
fdivs
mov
and
das
push
push
stos
add
mov
stos
jge
jbe
in
lcall
push
test
out
pop
xor
add
rclb
push
outsl
shll
sbb
out
lea
cli
fbld
sti
iret
outsl
push
out
add
add
add
xchg
fcmovu
mov
stos
insl
in
loop
xchg
cmp
stos
push
lea
adc
jp
out
xor
jecxz
pop
xchg
sahf
pusha
xchg
lcall
jmp
jbe
pop
adc
inc
in
cmc
jb
pop
out
pop
adc
repnz
mov
adc
mov
jmp
add
inc
and
dec
shll
adc
es
faddl
stos
lea
aam
sti
aas
jmp
loope
or
inc
add
mov
fdivl
dec
and
pop
or
es
inc
push
push
jns
daa
add
push
jae
xchg
or
mov
rorb
hlt
incl
sbb
mov
stos
adc
jmp
add
add
mov
test
push
and
imul
aaa
dec
pop
pop
cmc
add
push
mov
orps
aaa
push
add
ljmp
testl
cld
incl
lea
mul
sbb
mov
or
add
push
pop
call
add
in
jge
or
mov
in
or
push
mov
or
fsubr
jmp
js
test
push
or
aam
cmp
pop
and
std
sarl
int
ds
cmp
shlb
and
mov
data16
lcall
out
nop
pcmpgtd
jmp
push
jp
mov
jle
push
add
add
add
add
and
add
xchg
jl
add
pop
add
rclb
push
jp
pop
adc
dec
mov
insb
inc
add
out
or
nop
pop
loopne
jns
stos
jb
jno
faddl
mov
gs
add
sahf
repnz
aaa
dec
mov
jg
xor
lea
xor
out
add
add
add
adc
adc
cmpsl
lea
fcmovu
imul
cmpsb
dec
popa
fadds
lock
shll
jp
out
jp
sbb
lcall
std
cltd
jp
and
hlt
ljmp
and
cld
cld
cltd
and
adc
rolb
bound
mov
repnz
add
add
in
pop
ficompl
or
pop
dec
adc
push
inc
in
js
pop
fisubrl
or
pop
dec
adc
pop
push
inc
in
nop
pop
jmp
or
push
rolb
dec
cs
cld
xchg
mov
adc
sbb
sar
loop
or
sub
adc
lea
add
push
mov
adc
adc
add
inc
add
push
mov
sbb
and
dec
sbb
repz
cmp
push
inc
inc
test
xor
adc
test
inc
xor
arpl
sti
mov
mov
xor
mov
lock
jnp
lahf
or
jnp
pop
mov
nop
xchg
mov
mov
add
add
xorb
pop
call
lods
mov
sbb
lock
js
call
jecxz
pushf
dec
mov
mov
jecxz
mov
add
out
xchg
addb
push
aad
ja
ss
cld
cmp
in
xchg
ss
mov
out
mov
jae
adc
in
dec
in
out
add
add
add
pop
ljmp
add
lds
fdivrl
add
cmp
dec
leave
adc
shrl
out
or
andb
out
loope
cmp
cltd
cli
call
add
pop
into
mov
mov
jmp
movl
adc
inc
push
add
mov
add
add
fiadds
pop
arpl
imul
lods
jg
lods
pop
jne
out
ret
sbb
inc
sbb
out
out
mov
mov
repz
push
cwtl
movsb
pop
out
add
mov
cld
fwait
pop
lcall
call
mov
sub
xorl
and
add
lret
sti
push
mov
fdivs
xor
dec
bound
add
add
jae
imul
jb
xor
and
cli
sti
sub
pop
cwtl
dec
lds
jl
pop
adc
in
out
inc
jmp
and
enter
mov
call
mov
gs
decl
adc
mov
add
pop
adc
mov
mov
cmp
cmp
dec
xchg
add
add
add
cld
jae
fwait
inc
add
and
adc
ss
pop
pop
add
add
push
mov
xchg
lahf
xchg
add
and
les
add
imul
arpl
xor
int3
inc
push
call
mov
fprem1
inc
and
imul
and
mov
and
negl
cmp
lea
add
add
add
add
test
or
lret
in
xor
jbe
pop
js
mov
cltd
mov
add
test
push
sub
sub
mov
add
pop
es
call
popa
push
lahf
mov
xchg
jae
enter
jl
or
imul
xchg
xlat
mov
sub
add
add
jmp
add
test
imul
jp
mov
xor
pop
pop
adc
add
push
dec
mov
out
adc
xchg
lds
xchg
mov
out
adc
fucomip
push
add
fbstp
xchg
out
push
mov
jecxz
sub
in
out
rorl
bound
sbb
and
add
out
inc
or
push
pushf
add
js
bound
xchg
ds
ljmp
notb
push
mov
out
jbe
aam
out
lret
insb
mov
js
sahf
aam
and
lods
dec
dec
mov
push
xchg
jge
inc
add
adc
ds
add
add
subb
lcall
inc
add
mov
dec
add
lahf
call
push
push
je
push
loopne
and
in
mov
cmc
fwait
cld
mov
cltd
testl
aam
out
cmp
xchg
filds
add
pushf
in
test
outsb
or
cmp
je
insl
xchg
inc
inc
sti
call
add
add
add
push
jo
sub
in
mov
mov
sbb
jg
ret
inc
pop
pop
xor
jns
push
sub
mov
call
mov
push
out
push
cwtl
js
pop
cmp
push
pop
imul
outsl
cmp
push
xchg
ss
push
clc
jge
push
fstps
add
add
mov
lods
in
push
iret
mov
inc
add
inc
xor
xor
push
add
das
sbb
add
mov
mov
cltd
push
xchg
fildl
cmpsl
inc
sbb
mov
pop
js
out
jecxz
adc
aad
call
std
lret
mov
out
cmp
ss
cld
cmp
loop
add
add
add
add
cmpsl
test
cwtl
sub
jne
cmpsb
pop
pop
lcall
xchg
ljmp
fidivs
xor
outsb
xchg
stos
pop
fmul
jbe
sbb
in
sbb
fisubs
or
bound
push
lcall
or
outsl
inc
lret
pop
loopne
insb
lret
orl
xor
shl
add
add
add
out
aad
movsb
push
mov
xchg
sub
loope
in
shlb
cmpsl
je
shl
aam
jb
sub
push
aaa
dec
lcall
pop
adc
std
push
xchg
js
pop
std
or
les
jmp
inc
into
ret
call
fdivp
mov
ret
enter
jecxz
and
loopne
or
add
add
add
cltd
add
in
and
push
mov
arpl
fsubrs
stos
minps
inc
add
inc
push
and
dec
adc
mov
dec
jo
cmp
jo
xorb
add
xchg
sub
push
call
arpl
add
call
xlat
adc
and
mov
or
dec
jo
add
add
add
xchg
push
push
mov
and
cmp
in
push
add
dec
addb
mov
push
add
adc
testl
sbb
pop
pop
test
mov
cmp
xor
ret
xor
inc
loopne
xchg
out
pop
and
inc
das
std
mov
clc
mov
nop
mov
sbb
add
add
pop
mov
dec
mov
push
bound
enter
insb
aaa
pop
test
or
sub
fs
or
cmpsl
out
inc
and
out
inc
or
roll
xchg
add
sub
jp
inc
xchg
xor
out
sub
adc
adc
lods
inc
dec
out
aam
or
push
pop
inc
push
mov
add
add
add
outsl
inc
pop
mov
hlt
and
jecxz
pop
adc
mov
push
out
lods
mov
xor
add
mov
fists
mov
add
aam
out
add
out
subl
and
incl
jp
ret
popa
lahf
lret
and
jb
add
add
add
push
in
push
imul
pop
adc
imul
cld
inc
jo
mov
dec
xchg
pop
jmp
cs
bound
jg
icebp
cld
call
adc
ljmp
adc
pop
xchg
stc
fimuls
mov
pop
adc
cmpsb
xchg
mov
pushf
test
jmp
add
shll
fstpl
out
xchg
andl
adc
inc
jle
add
out
stc
pushl
push
add
push
mov
in
dec
mov
jmp
inc
inc
mov
xchg
das
sti
push
cmp
pop
cmc
push
add
inc
push
add
inc
scas
outsl
incb
test
inc
cmp
add
pop
scas
arpl
loopne
push
mov
mov
je
or
inc
adc
push
add
add
add
mov
std
add
aad
mov
lcall
gs
cli
mov
mov
inc
inc
call
cld
cmpsl
sub
mov
pop
sub
sub
out
les
jo
inc
pop
insb
mov
ds
add
mov
xor
add
add
add
xor
dec
push
sahf
xchg
cld
adc
xchg
scas
sbb
mov
xchg
in
add
pop
repnz
mulb
xchg
and
jae
or
jae
adc
jae
jl
jb
repz
or
outsl
xchg
call
pop
mov
add
jle
pop
aad
xor
dec
and
add
mov
add
add
add
jbe
ficoml
adc
push
inc
push
cmpsl
stc
or
add
out
jno
jp
outsl
cmp
fidivrl
and
out
fnsave
jbe
cmp
mov
stos
push
out
ficoml
inc
xor
je
jp
dec
and
jnp
xor
pop
jle
int
adc
jmp
add
shlb
icebp
dec
loope
enter
lods
mov
adc
clc
sub
add
sbb
iret
and
cmp
xor
cmpb
inc
rorb
fcomps
push
mov
add
push
mov
jmp
mov
inc
imul
movsl
shl
add
add
add
cmp
dec
cmp
mov
cmp
pushl
inc
add
ja
bnd
mov
cmp
data16
push
repz
mov
nop
inc
and
inc
push
push
cli
lret
call
mov
or
mov
aaa
verr
shll
fs
push
cli
rcr
sti
incl
add
add
fdivrs
xchg
je
hlt
mov
jge
call
sti
jne
sti
in
mov
ja
leave
pop
loop
cld
loop
sbb
pop
push
add
sbb
aad
clc
cld
adc
xchg
lcall
fisubrl
adc
push
cmp
mov
add
xor
loop
mov
je
std
add
add
add
push
cld
xchg
push
test
xchg
xorb
lcall
pop
neg
mov
stc
mov
add
and
mov
xor
notl
and
out
in
xor
add
fs
andb
int3
xchg
adc
aam
xor
xor
xchg
das
pushf
or
add
add
add
insb
addr16
out
pavgw
nop
pop
push
jmp
aam
mov
sahf
jp
jge
inc
mov
nop
inc
xchg
and
fildll
std
jle
mov
jle
in
out
mov
jne
popa
sub
mov
jbe
jb
jge
popa
cmc
fsubs
pusha
sbb
lods
in
inc
cmp
add
xchg
lret
xor
jne
pop
pusha
jge
repz
jb
jge
sub
mov
jne
lods
leave
mov
add
dec
push
xor
push
dec
fst
lret
repz
jmp
pop
loopne
sbbb
aas
jmp
sbb
sarb
je
sub
cld
push
xchg
ja
add
xchg
inc
in
xchg
inc
lock
add
add
push
call
inc
dec
adc
cmp
call
cmp
in
push
add
xchg
out
mov
adc
ret
int3
dec
jne
sub
cs
data16
dec
pop
inc
ja
add
adc
inc
add
decl
or
cld
inc
lret
dec
pop
inc
adc
add
add
add
push
xchg
mov
or
lcall
loopne
lret
stc
push
mov
repz
add
add
add
cltd
or
inc
shl
cwtl
sbbb
mov
sahf
shrb
mov
cltd
jae
pop
fwait
jae
inc
mov
jae
mov
jae
mov
lea
add
add
pusha
call
loop
adc
cmp
repz
add
xor
cmp
cmp
call
or
add
test
xor
and
add
cmp
mov
jle
out
mov
pop
dec
addb
mov
inc
pop
loop
xor
sbb
add
add
add
jb
fdivrl
mov
lahf
mov
mov
int
xorb
or
out
rolb
addr16
inc
jne
add
sahf
xor
mov
add
cmc
jmp
je
jmp
in
or
ficoml
cmpl
sbb
push
xchg
adc
fst
cmp
fildl
add
add
lds
int
call
popf
imul
bound
or
cmp
outsl
or
mov
mov
loopne
xchg
test
pop
or
fwait
sub
mov
jmp
jae
jmp
pop
and
cmp
mov
aaa
xchg
cmp
jmp
inc
testl
shll
sub
imul
or
mov
or
cmp
push
cmp
inc
inc
and
sbb
mov
push
sub
orb
cmp
mov
xor
orb
incb
adc
ja
das
leave
or
or
ljmp
test
add
add
pop
push
add
dec
fsubp
dec
shll
pop
aam
add
xchg
cmp
inc
or
out
inc
push
push
ja
cmp
sbb
sbb
add
test
addl
add
sbb
andb
push
stc
mov
in
mov
dec
out
or
outsb
out
mov
add
icebp
or
dec
mov
add
add
add
add
adc
inc
add
pop
jl
sub
inc
inc
pop
mov
loopne
xchg
popa
push
mov
aad
push
xchg
and
pusha
out
adc
mov
xchg
out
and
bound
jl
ds
xchg
pushl
fsubr
jbe
mov
add
ret
push
jmp
xchg
jp
or
cmpsl
add
dec
loop
mov
shll
sahf
popf
fisubl
test
mov
in
pop
outsb
cld
dec
aad
sub
inc
in
loop
or
sub
stos
dec
lcall
sub
arpl
std
adc
icebp
jge
or
adc
add
add
aaa
adc
cmp
insl
cld
insl
popf
in
jb
jns
adc
pop
jo
das
test
or
ret
out
imul
mov
mov
push
pop
sub
cmp
push
cmp
and
mov
out
push
push
xor
aas
sti
adc
ja
loopne
jnp
sti
adc
mov
add
add
mov
cmp
inc
imul
xor
xor
decl
imul
xor
inc
sar
mov
test
inc
ljmp
lret
and
and
lahf
adc
add
fs
cld
pop
xor
mov
bound
mov
and
mov
dec
add
mov
xor
add
add
test
cmp
xor
cmc
cmp
bound
jns
dec
push
or
ss
cmpsl
or
setle
pop
pop
add
jg
push
cwtl
ret
test
in
cwtl
imul
mov
std
mov
loope
xlat
sbb
cld
aad
mov
sbb
cld
adc
je
aas
lock
add
add
outsl
adc
mov
cs
or
jae
push
add
out
je
lea
pop
and
cwtl
sub
out
xor
repnz
and
sbb
popa
adc
lcall
andl
jns
test
insl
dec
loopne
out
xor
out
jl
add
add
add
lcall
sbb
negl
sub
subl
imul
add
aad
popa
nop
add
and
pop
jo
push
push
dec
inc
imulb
outsl
jns
xor
adc
fsts
lcall
add
add
add
pop
pop
sub
repnz
cltd
jmp
gs
jmp
lea
in
add
and
pop
adc
call
sbb
sbb
mov
jmp
je
jmp
add
jle
add
imul
adc
add
popl
inc
sub
mov
adc
add
or
addr16
or
add
add
xchg
and
inc
daa
pushl
or
pop
aas
or
testl
inc
and
aas
sti
ja
popf
mov
adc
add
xchg
lcall
pop
lcall
test
dec
sar
insb
pop
pop
sbb
xlat
jecxz
clc
dec
sarl
enter
adc
add
add
add
ljmp
pop
out
enter
les
lea
mov
add
mov
and
daa
and
cmp
dec
fists
add
addb
push
xor
inc
adc
shr
aas
shrb
xor
pop
fistl
notw
aad
mov
sti
adc
adc
add
add
add
pop
dec
fdivrs
out
xchg
xchg
cmp
or
cltd
lret
arpl
aad
loopne
jne
popa
xchg
sub
adc
inc
fidivrs
inc
xchg
mov
xor
sti
sti
dec
shl
cmp
and
mov
add
call
loope
adc
xchg
rolb
insb
sbb
or
add
add
ss
add
pop
mov
or
sbb
int
jmp
pop
cwtl
hlt
jb
jno
cmp
inc
cmp
add
fists
ret
xchg
dec
and
adc
aad
in
fdivrs
mov
pop
adc
pop
data16
aad
aad
inc
adc
pop
lcall
add
add
add
out
pop
adc
jb
jo
mov
ss
subb
jno
push
adc
mov
lea
cs
and
sub
out
cmp
and
add
and
inc
push
mov
icebp
mov
xor
adc
sti
in
fildl
je
std
inc
fwait
add
dec
sub
daa
lret
into
pop
and
add
add
add
sti
mov
sbb
mov
sbb
mov
xor
out
jae
fwait
push
and
lea
nop
pop
imul
and
mov
out
sub
loop
cld
leave
repnz
mov
dec
and
mov
push
and
pushf
js
and
iret
and
jp
or
mov
adc
push
add
add
add
dec
repnz
movsl
loop
and
iret
and
mull
inc
push
dec
xchg
and
mov
sti
inc
pop
test
jge
cmpsb
data16
aam
and
mov
andl
jbe
sbb
test
addb
icebp
mov
mov
ffree
pop
je
ss
js
pop
mov
sub
out
sbb
ljmp
in
adc
and
insb
les
mov
jns
aam
xchg
daa
or
mov
jmp
adc
add
jns
leave
pop
adc
push
xchg
mov
ret
lods
mov
cmc
pop
pop
add
ss
lcall
faddl
sbb
and
fstpl
push
add
outsb
push
mov
gs
add
add
testb
jp
sbb
pop
cwtl
pop
lds
sar
jno
jns
bound
xor
lahf
or
xchg
in
cmpsb
xor
jo
add
pop
pop
mov
inc
xchg
sar
fstps
nop
ret
mov
out
dec
cwtl
xor
pop
int
push
icebp
adc
dec
mov
add
add
add
insb
pop
int
adc
mov
sbb
push
lcall
add
xchg
push
clc
pop
out
into
fucomip
testl
shrb
add
rcrb
test
xchg
in
xchg
cmp
push
mov
dec
adc
xchg
dec
add
int3
or
dec
in
jg
add
add
repnz
push
cld
push
add
dec
lea
adc
push
dec
in
push
add
inc
sar
ljmp
out
adc
add
jae
cli
cli
decb
sbb
mov
dec
xor
jb
mov
fisubl
xor
loopne
decb
sti
jae
cli
jge
xor
iret
xchg
or
pop
mov
or
add
add
add
insl
add
loop
push
in
js
push
cli
cmp
rep
cmpb
add
sub
adc
pop
mov
scas
xlat
rcll
mov
pop
neg
adc
pop
mov
aad
out
fidivrs
xlat
or
add
jle
movsl
mov
call
mov
movl
jge
cli
cmp
fdivrs
es
lock
loope
push
imul
or
mov
sub
out
sub
imul
out
xchg
jns
aam
bound
mov
xlat
fisubrs
xchg
push
mov
out
push
gs
aad
cld
jmp
sub
cltd
int
add
add
add
sar
call
pop
fldl
pop
or
jmp
in
int3
add
enter
inc
xchg
scas
jmp
movsl
cwtl
add
and
mov
cmpsb
cmp
fldl
mov
mov
or
dec
pop
jns
rcrl
imul
cld
fisubs
and
sub
jae
ljmp
add
add
add
add
lret
into
pop
and
add
lret
xchg
sti
pushl
xchg
or
adc
mov
rorb
jl
in
pop
adc
rcrb
pop
ret
jge
pop
pop
add
fs
in
or
xor
or
cld
ljmp
and
mov
pop
push
dec
psubq
add
add
std
push
lea
dec
xchg
pop
adc
inc
cmpb
testl
pop
test
imul
add
loopne,pn
cs
imul
pop
adc
imul
add
pop
push
dec
aad
and
movb
call
mov
sbb
pop
push
inc
orb
add
add
add
push
mov
iret
out
and
and
incb
mov
sbb
out
ficoml
lods
incl
adc
pop
mov
insb
pop
inc
out
icebp
outsl
out
pop
mov
add
cmp
jg
adc
add
add
adc
std
mov
mov
add
add
gs
fs
fstps
jmp
in
add
pop
aam
out
jle
fstps
jg
in
ljmp
sti
lock
xchg
mov
sub
imul
bound
and
gs
loop
out
shlb
icebp
adc
jb
or
cwtl
adc
jae
add
add
add
leave
and
pop
jmp
inc
pop
pop
xor
sar
mov
pop
mov
fs
sub
pop
xchg
xor
mov
mov
sub
dec
in
mov
cld
jmp
mov
popf
jne
xchg
bound
test
mov
mov
or
pop
jmp
and
lsl
sti
ljmp
mov
xchg
sti
incl
add
add
ret
out
or
pop
std
mov
stc
or
fadds
sti
cld
daa
call
lods
push
dec
call
jl
in
movups
lea
and
sti
lret
cld
decl
rcrb
sub
add
xchg
call
push
pop
jo
jmp
jle
pop
mov
adc
pushl
fwait
cld
add
add
add
add
add
out
sbb
in
imul
inc
lret
mov
inc
pop
in
int3
and
lret
adc
fs
push
inc
movsb
ja
mov
adc
gs
push
inc
inc
pop
jno
cmp
jae
outsb
jno
cmp
mov
cli
pop
sti
sbb
sbbl
imul
add
add
add
push
les
imul
std
dec
mov
dec
addb
out
xchg
add
or
sbbl
sbb
jmp
dec
in
fcoms
cmp
out
stos
add
sub
sahf
adc
fcompl
into
out
lahf
sbb
aam
shl
shl
rcll
inc
popa
enter
fldl
add
add
inc
mov
sbb
pop
pushf
ss
mov
ljmp
cs
sti
add
sbb
cli
or
xchg
movsb
inc
jo
add
pop
adc
jmp
or
mov
inc
insl
mov
inc
xchg
add
out
negl
sti
sbb
xchg
ret
popf
mov
insl
imull
repnz
mov
add
add
add
pop
cld
cmp
push
fdivrl
out
mov
cs
lcall
call
push
lods
adc
pop
sar
popa
or
test
mov
call
pop
adc
push
inc
push
and
inc
fadd
call
or
jg
xor
test
xor
add
add
add
pop
std
imul
jne
xchg
jg
inc
mov
add
push
jl
pop
adc
imul
pop
xlat
mov
xlat
mov
ja
jmp
xlat
mov
ja
xchg
mov
shl
cmp
cs
xlat
je
addr16
or
dec
call
out
mov
add
add
add
xchg
inc
adcl
and
sbb
cmp
and
and
subl
dec
pop
jp
jne
shlb
daa
jle
orb
push
imull
xor
ds
pusha
add
jmp
and
inc
push
add
inc
or
xchg
outsl
cld
sbb
mov
test
aas
js
fstpt
testl
divl
aad
andb
add
add
or
adc
sub
add
imul
dec
xchg
sub
rcl
pop
fstpt
popf
add
sarb
push
sbbl
xor
std
out
mulb
mov
arpl
clc
ret
dec
push
jmp
test
inc
mov
daa
iret
xorl
add
mov
pop
pop
xchg
lret
mov
add
push
cmp
xchg
imul
stc
xchg
mov
jb
pop
int
imul
jbe
subb
mov
push
imul
xor
mov
cmp
push
add
loope
pop
insl
sbb
inc
faddp
int
xchg
xor
inc
mov
call
add
add
add
mov
cmpsl
inc
or
and
retw
push
jne
rolb
jnp
call
cmp
mov
and
sub
mov
arpl
jl
add
add
subl
xor
sub
divl
fsubrs
and
mov
add
mov
add
add
in
ret
enter
add
inc
ret
push
mov
nop
loopne
hlt
lock
icebp
xlat
dec
and
ds
fstpt
out
pop
and
out
out
mov
mov
btr
dec
and
aam
and
cmp
ja
push
cli
imul
ffreep
and
dec
xchg
push
and
sbb
sbbl
add
add
add
pop
pushf
jns
orb
pop
in
mov
sbb
dec
and
aad
jns
cmp
cmpb
add
ja
cmp
add
pop
dec
sub
ffreep
and
test
ffree
and
pop
push
add
inc
test
sbb
ss
adc
jg
sub
out
add
add
add
and
mov
dec
inc
popf
sub
sub
xchg
push
shl
outsl
shl
jl
sub
out
shl
int3
ret
std
add
push
adc
and
cmpsb
sarb
dec
xchg
xchg
adc
jg
fcoml
jle
sub
cmpsb
insl
adc
jle
sub
jle
sub
out
sub
add
mov
int3
imul
or
cs
sub
and
cs
test
xchg
mov
pusha
mov
das
sbb
sub
push
cld
imul
mov
bound
dec
inc
add
mov
inc
out
push
sub
ja
inc
add
add
add
push
pop
lahf
nop
mov
xchg
mov
pop
xorb
in
call
jo
push
bound
std
mov
sub
or
pop
jne
xor
xorl
mov
sub
add
mov
xor
mov
sub
ja
into
fiadds
mov
aaa
in
push
mov
sub
ja
into
fiadds
mov
push
add
add
add
mov
cmovs
xlat
pop
stos
or
into
xchg
ret
adc
sbb
push
outsl
test
out
pop
mov
leave
jmp
xchg
mov
imul
sub
sub
and
cmp
int
jmp
jo
push
or
fiadds
push
jo
rcrl
or
add
add
cmp
rcll
lds
push
or
jno
add
push
mov
das
inc
xor
aaa
enter
jnp
lods
add
cmp
push
or
add
sarl
pop
fwait
aas
add
xchg
adc
adc
xlat
into
push
sbb
sbb
dec
cmc
add
add
add
add
pop
add
jl
js
and
loopw
mov
icebp
xlat
mov
je
and
sub
and
jnp
aad
ret
mov
xchg
push
add
das
loope
dec
ficoms
loop
out
pop
mov
sbb
popf
sbb
jg
adc
jmp
add
add
add
sbb
and
xchg
jnp
pop
adc
jmp
outsl
sar
and
jmp
pop
dec
data16
addb
popf
and
push
pushf
ja
pop
adc
cmc
lcall
call
cmpsl
fdivrp
aas
xchg
dec
cld
jmp
popf
dec
mov
dec
cld
jmp
add
mov
lea
cmp
jmp
pushl
add
xor
or
aaa
lret
adcb
add
dec
and
notl
xchg
stc
in
pop
fs
adc
push
lock
fnsave
cld
incl
aad
mov
adc
xor
mov
jae
pop
mov
lahf
dec
fsin
clc
lds
add
add
add
stc
push
inc
mov
adc
add
incl
push
incb
enter
out
mov
dec
hlt
adc
sarl
cmp
sbbl
adc
mov
ds
sar
mov
jge
stos
das
sar
shlb
or
or
out
enter
add
add
cmp
inc
or
jmp
insl
push
adc
cmp
in
inc
pop
sub
aas
mov
jp
jp
lret
mov
jae
mov
repz
xor
ficoms
outsl
imull
popa
mov
enter
data16
and
inc
sub
inc
push
or
sbb
add
xchg
sub
add
add
add
add
outsl
shrl
insl
fildll
add
jae
or
addr16
sbb
jmp
imul
xlat
outsb
jne
push
orl
loopne
out
ficoms
data16
adc
push
inc
sub
js
rolb
imul
mov
imulb
add
jae
loopne
add
sbb
mov
aaa
lcall
fwait
push
add
pusha
loope
test
dec
or
jb
out
add
cwtl
lds
or
and
mov
dec
cld
jmp
shll
adc
in
jb
xchg
inc
test
xchg
je
iret
iret
jmp
ljmp
negl
add
add
lret
sbb
imul
adc
cmp
push
adc
cltd
mov
lea
mov
add
fdivrl
mov
idiv
xchg
adc
pushl
and
incl
cmp
pop
outsl
pop
xchg
add
cwtl
mov
and
pushf
lret
mov
pop
pop
mov
add
fwait
stc
or
add
add
add
stc
or
mov
or
push
call
jle
popl
push
sub
hlt
stos
insb
clc
add
dec
add
push
cmp
notb
mov
and
aaa
add
pop
mov
push
lea
pop
and
xor
mov
and
call
push
adc
popa
add
add
add
insl
sar
jp
or
subb
pop
pop
mov
push
add
add
pop
mov
out
jne
cld
loop
cmpsl
adc
cli
out
pop
dec
sti
pop
dec
shl
xchg
sbb
insb
in
xchg
adc
add
ffree
repz
out
pop
cmp
xchg
loope
in
pop
ljmp
add
add
add
mov
testb
adc
cmpsb
sbb
inc
lea
lret
loope
jmp
sbb
cltd
out
pop
lcall
mov
imul
int
sbb
add
pop
into
repz
jmp
jbe
inc
jmp
jns
cld
insb
sbb
and
fisubl
add
and
and
add
and
sti
popf
inc
mov
and
add
and
jns
std
pop
test
xor
or
push
rcrl
nop
and
push
loop
push
icebp
call
add
cwtl
lret
lret
cltd
shlb
adc
pop
ds
stos
js
add
iret
inc
and
xchg
aam
mov
inc
and
outsb
aam
add
add
add
iret
inc
and
jecxz
inc
mov
inc
and
out
aam
xchg
inc
and
xor
inc
ja
shlb
xchg
vmwrite
decl
fwait
lret
call
mov
xlat
in
pushf
out
mov
dec
or
sbb
ret
loop
call
add
mov
in
push
dec
loop
xchg
cmpb
inc
add
add
add
mov
test
mov
lret
xchg
lea
dec
andb
pop
or
cmp
imul
xor
mov
sahf
cmp
add
loopne
arpl
xchg
dec
stos
lea
jecxz
arpl
xchg
xor
mov
add
add
fistps
shlb
mov
out
xchg
pop
cld
loop
xlat
and
pop
daa
add
push
pop
cli
out
rolb
cmp
inc
sub
push
mov
adc
cmp
xchg
imul
out
pop
xchg
imul
inc
jne
js
daa
lret
jo
or
rorl
out
add
add
add
cwtl
push
xorb
pushf
mov
lods
divps
arpl
lods
or
inc
or
add
jnp
add
aad
or
inc
mov
rorl
dec
pop
gs
xor
adc
mov
inc
cld
sub
pop
xorl
jae
mov
add
add
fldcw
jae
aad
subl
push
push
and
call
pop
ljmp
mov
jmp
arpl
add
popf
loope
mov
mov
cld
push
jmp
pop
pusha
sbb
ds
or
add
pop
xchg
call
jp
je
sbb
jle
push
add
add
add
add
add
adc
sbb
shlb
hlt
adc
icebp
cs
pop
xchg
dec
inc
mov
mov
xchg
fistps
mov
sarb
out
je
xor
sbb
add
ret
std
and
sbb
push
jno
lods
iret
pop
pop
pop
jg
shrb
test
add
add
add
cmp
add
xchg
aad
mov
xor
fcoms
and
inc
cmp
lret
dec
push
sbbl
add
and
mov
scas
or
mov
jae
mov
pop
test
cmp
push
adc
loopne
mov
call
jl
shrb
dec
jp
mov
add
add
sbbb
mov
add
inc
xchg
or
ud0
sbb
cmp
pop
adc
pop
pop
repz
push
mov
sub
adc
enter
or
sbb
push
mov
mov
sub
sub
pop
lcall
xchg
inc
es
in
cmp
add
fists
lea
jmp
jno
fidivs
test
mov
imul
add
dec
incl
add
fisubrl
sbbb
xchg
and
pop
adc
xchg
imul
cld
gs
or
add
and
aam
call
les
push
cmp
sub
adc
call
add
dec
int
aaa
in
arpl
test
pop
adc
call
sahf
repz
push
loope
shll
int
in
in
cld
push
fidivrs
gs
mov
pop
stos
ret
addl
clc
ret
sbb
popa
and
rolb
in
enter
dec
mov
call
cmp
jl
out
test
add
add
jae
add
dec
push
and
lahf
xchg
mov
hlt
test
icebp
xorps
push
leave
stos
push
das
clc
out
iret
or
adc
test
dec
inc
lea
adc
rclb
adc
inc
dec
push
lea
into
scas
and
lcall
jl
rclb
xchg
pop
push
mov
lods
push
jae
out
int3
and
mov
add
add
add
push
push
cld
aad
xchg
idivb
add
cmp
mov
call
aad
imul
sub
xor
mov
pop
sub
xchg
and
mov
stos
pop
neg
push
adc
sub
mov
sub
and
jg
pop
sub
call
aad
imul
inc
arpl
add
add
bound
pop
enter
sarb
dec
nop
mov
out
jmp
cmp
repnz
ret
push
jp
sti
mov
dec
fdivs
cmp
mov
sub
adc
push
xchg
cmc
add
jb
jge
fs
jge
mov
xchg
loope
ljmp
xchg
fstl
jg
adc
jmp
jp
aas
jmp
fwait
xor
pop
mov
subl
xchg
iret
jmp
fmul
and
in
lret
dec
out
inc
ds
gs
or
add
or
jg
cmp
les
out
nop
mov
call
add
add
add
loopne
push
fwait
mov
shr
in
cld
mov
jnp
fdivrs
cld
jmp
test
lret
add
add
cli
sti
aam
imul
and
movsl
ljmp
add
das
push
xlat
xchg
cli
nop
fiadds
mov
pushl
xlat
in
pop
ss
incl
jg
mov
repnz
push
pop
lock
incl
add
add
pusha
mov
add
adcb
mov
cmp
add
and
and
jmp
pop
add
cmp
in
mov
fisttpl
adc
add
pop
sub
rclb
jl
or
decl
scas
pop
orb
dec
push
ja
push
aad
cld
imul
sub
add
mov
xchg
push
test
add
xor
ret
xchg
pop
jnp
push
adc
add
fildl
sub
sub
push
cltd
push
jb
cli
mov
cs
mov
push
pop
ss
mov
icebp
pop
hlt
stos
orb
scas
inc
out
adc
add
cmp
sahf
aad
inc
pop
adc
fidivs
add
add
mov
in
adc
repz
ficomps
movsb
xor
out
add
mov
pushf
cmp
and
xchg
ret
push
sbb
mov
mov
push
test
out
movsb
xor
in
pop
lea
fmuls
jae
out
repnz
dec
and
pop
hlt
mov
mov
jb
adc
jmp
add
push
pop
mov
fisubrl
cmp
fisttpll
xchg
cli
xor
push
xchg
mov
jno
cmp
inc
push
scas
ret
pop
bound
cmc
cli
inc
mov
out
push
adc
mov
mov
ret
add
rorb
add
pop
mov
lcall
cld
jmp
add
mov
insl
pop
cld
hlt
jns
inc
jmp
pop
adc
jl
cmp
inc
push
push
lea
mov
inc
enter
push
cld
test
pop
cmp
call
movl
ljmp
pop
std
inc
int
sbb
jg
push
mov
in
dec
sti
lea
add
add
mov
stc
ljmp
aam
adc
sti
dec
fs
mov
jmp
push
push
lock
cld
jmp
add
push
out
fstl
je
add
add
pop
add
add
stos
dec
das
stc
mov
xor
xchg
nop
mov
imul
add
lock
sbb
mov
jns
lds
add
add
pop
sub
add
jg
xorb
or
cmp
faddl
add
incl
rolb
mov
ds
out
dec
cld
xlat
adc
inc
cmp
ljmp
daa
hlt
inc
push
dec
ljmp
fisubs
mov
sbb
push
nop
stos
sub
inc
adc
cmp
add
fisubs
cmp
mov
push
or
add
mov
fstps
out
adc
adc
jmp
mov
popf
in
ficomps
push
out
xlat
sub
push
mov
pop
adc
jnp
xor
call
adc
pop
inc
dec
call
sbb
add
add
add
add
lock
sbb
xor
ljmp
mov
inc
gs
add
mov
fidivl
xchg
ss
inc
jmp
pop
adc
push
ljmp
jl
nop
mov
iret
movsb
nop
and
loope
outsl
jmp
adc
adc
test
and
add
add
comiss
mov
pop
and
mov
and
les
pop
jge
inc
pop
jns
lea
jg
pop
fisttpll
cmp
jg
shlb
subb
icebp
push
push
repnz
test
add
ja
call
test
aaa
orb
cld
pushl
push
std
push
hlt
push
cld
incl
mov
pop
mov
sti
adc
jl
jg
inc
pusha
sbb
inc
pop
sub
mov
insb
sbb
fwait
adc
js
sub
sbb
jbe
addb
or
dec
adc
sar
push
pop
adc
les
jb
add
jns
in
push
sub
aas
add
add
add
mov
jb
aad
and
and
add
jmp
out
daa
add
aam
sbb
xor
out
in
pop
sub
mov
adc
addl
out
push
shlb
test
nop
sub
pop
adc
inc
pop
adc
movsl
or
add
fdivrl
aam
add
out
or
push
call
push
add
add
add
pop
or
dec
push
imul
lock
lret
loope
cmpb
sbb
xchg
adc
jecxz
or
xchg
dec
lock
sbb
ret
lcall
push
sar
ss
pushf
and
sti
mov
call
mov
loope
xchg
jno
add
add
pop
adc
pop
fdivp
ja
pop
adc
enter
pop
lcall
or
adc
cltd
nop
call
mov
sub
jmp
add
xchg
subb
loop
punpckhdq
das
cld
jmp
in
lcall
mov
and
mov
cld
ljmp
scas
mov
add
addl
mull
add
mov
andb
cld
inc
fcoms
and
lods
testl
inc
imul
and
cs
incl
nop
and
adc
add
test
test
mov
or
xchg
cld
pushl
ljmp
dec
cld
incl
mov
add
add
aaa
arpl
push
pop
popa
inc
cld
loop
hlt
sub
add
jmp
sbb
scas
mov
and
cmpsl
and
addr16
stc
jo
jmp
pop
jns
gs
and
mov
or
cmc
test
cmp
add
cmp
cmp
lcall
mov
movsl
incb
add
add
jecxz
int3
cmp
mov
or
out
adc
sar
pop
inc
call
lcall
inc
cmp
and
mov
hlt
jbe
pop
adc
pop
adc
jp
cmc
sarb
cwtl
idivb
das
dec
sbb
lock
lret
nop
jp
imul
not
pushf
ret
adc
pop
in
fldl
add
add
fsubrl
add
mov
fwait
bound
out
out
les
add
push
in
jle
cs
inc
jbe
bound
jns
out
pop
cmp
popf
cmc
fstpl
pop
push
icebp
pop
push
cli
cld
pop
add
adc
pop
lcall
mov
add
jmp
pushf
cmpsl
cltd
les
add
add
add
push
push
jb
shll
or
jmp
dec
xchg
shl
out
cmp
fisttps
aam
add
es
mull
mov
jmp
popf
sub
test
pop
jbe
mov
cmp
hlt
jge
icebp
mov
es
inc
adc
sbbl
xor
add
add
mov
add
pop
data16
mov
psubq
dec
and
ss
sti
xor
push
cmp
rorb
shl
test
xchg
pop
ret
xor
push
or
jae
add
adc
pushl
mov
dec
push
into
xor
lret
push
inc
pop
cmp
xchg
add
add
add
cmp
loop
enter
and
sahf
cmp
xchg
lahf
cmp
inc
mov
lea
rol
push
cld
adc
xchg
xchg
out
int3
mov
repz
pop
nop
not
push
xchg
scas
cmp
out
adc
in
xchg
push
xor
push
sub
pop
dec
push
clc
add
mov
scas
fsubl
push
add
push
out
jp
cld
loop
cmpsl
mov
xchg
aam
xor
xor
ret
push
mov
dec
ss
inc
lcall
fsts
out
out
lahf
or
xchg
cmc
shl
sub
out
ret
and
add
push
loop
mov
out
mov
add
add
add
sub
pop
xchg
and
mov
sub
pop
out
mov
out
mov
lahf
rcrb
xchg
add
sbb
adc
push
push
mov
dec
adc
test
popa
icebp
push
pop
sub
aaa
xchg
sub
jno
adc
pop
jno
cld
and
movsb
call
outsb
lds
pop
adc
push
pop
movsl
out
pop
jae
les
add
add
sbb
push
cs
inc
adc
jmp
sbb
adcl
pop
mov
push
and
test
push
and
adc
bound
cld
into
loop
jmp
cmp
ljmp
dec
mov
xchg
dec
and
aas
in
adc
mov
mov
mov
cmp
and
call
adc
add
add
xchg
pusha
decb
adc
rcl
test
rclb
shlb
adc
add
cmp
adc
clc
test
sbb
and
jo
push
pushfw
fdivs
cmp
mov
pop
lods
stc
mov
sbb
dec
jbe
testb
add
pushf
lods
call
adc
pop
aas
add
add
add
jmp
scas
jmp
add
sti
sbb
lret
add
or
add
inc
pop
mov
or
adc
enter
aas
cld
adc
jne
bound
add
mov
in
shll
dec
fstps
add
bound
sar
adc
add
add
add
push
loop
or
repz
outsl
shl
push
ror
fisubl
out
into
mov
cmp
push
es
cmp
and
mov
and
or
in
scas
scas
pop
mov
cld
lods
push
jmp
repnz
fdivs
push
adc
ds
rcll
shl
mov
mov
adc
add
add
add
lcall
adc
arpl
ljmp
hlt
adc
ljmp
cld
jmp
insb
sar
cmc
adc
sbb
insl
jmp
inc
je
icebp
daa
inc
mov
cmp
xor
xchg
and
mov
popa
nop
mov
insb
push
icebp
aas
mov
add
add
inc
pop
cltd
jmp
es
adc
pop
xchg
jl
pop
cwtl
jae
dec
push
inc
xchg
std
and
mov
movsl
push
cld
dec
jmp
inc
data16
cltd
and
sldt
push
cmc
xchg
mov
pop
xor
mov
test
std
pushl
in
lret
mov
sti
push
add
add
add
and
pushw
pop
sbb
cltd
dec
and
jb
inc
xchg
jae
call
push
cld
ljmp
add
lret
jnp
or
dec
and
in
push
jmp
cld
test
pop
push
push
cmp
pop
cs
test
fidivrl
add
push
sub
pusha
dec
cmp
test
and
adc
es
jns
sub
add
add
fstl
jae
mov
pop
in
push
je
mov
and
mov
lea
xchg
dec
adc
imul
xor
pop
orb
mov
pop
lea
dec
rcll
sarl
inc
inc
neg
repz
mov
fs
jecxz
lret
or
add
add
cs
cmpsl
add
dec
arpl
scas
xor
dec
mov
add
adc
pop
pushf
loop
mov
loopne
or
ficomps
dec
notl
adc
mov
and
scas
je
test
sub
es
mov
fwait
sub
xchg
sub
and
push
rolb
xlat
push
dec
rolb
and
add
cli
sti
lcall
dec
sar
xchg
and
lahf
clc
sbb
lds
sbb
add
test
xor
int
in
pop
inc
adc
pop
cwtl
out
fs
sahf
adc
push
dec
sti
popf
and
test
pushf
add
xchg
cmp
inc
jmp
test
mov
inc
push
mov
jmp
add
pop
out
call
xchg
cmc
fisubs
mov
push
sbb
mov
nop
mov
jo
call
add
adc
shl
lods
add
aad
mov
dec
push
hlt
mov
dec
push
frstor
dec
push
fidivl
das
adc
add
fsts
pop
xchg
mov
push
push
in
in
push
jnp
dec
push
add
add
subl
cmpsb
push
adc
lea
or
dec
push
push
fidivl
test
clc
call
dec
or
aaa
lahf
mov
or
or
addl
pop
je
pop
fwait
add
imul
adc
sbb
pushl
mov
pop
xchg
jmp
add
movsl
movsb
and
test
iret
pop
sub
mov
shll
add
mov
push
rclb
push
rorl
insl
ljmp
dec
sti
int
push
testb
mov
insl
mov
cmpsl
inc
cwtl
xor
cmp
adc
lods
xor
mov
adc
add
inc
aam
jle
add
xchg
ss
jno
ret
icebp
lea
mov
imul
add
fcmovb
sbb
add
push
xchg
jne
xchg
cmpl
movsb
inc
repz
mov
rcrl
rcrl
daa
add
push
pop
mov
adc
nop
sub
rolb
dec
adc
add
movb
mov
loopne
shll
add
push
sahf
adc
scas
jge
or
inc
inc
add
rdpmc
mov
or
lods
loope
jae
add
add
rorl
or
push
add
test
pop
addb
inc
xor
xchg
stc
loope
ss
dec
movsl
pop
es
push
pop
movsl
mov
mov
pushf
push
cld
je
icebp
pop
xchg
dec
rorl
loope
cld
testb
adc
push
jo
lcall
cmp
jae
add
fimuls
mov
mov
insb
dec
add
add
add
mov
or
add
lods
pop
or
inc
mov
push
decl
adcl
mov
and
mov
push
and
dec
xchg
cmp
movsb
lea
adc
shl
pushl
ret
adc
push
sub
jge
sbb
add
cmp
push
mov
pop
das
lcall
sbb
je
xchg
xchg
pusha
add
add
add
call
mov
dec
test
xchg
out
inc
imul
pushf
mov
jb
mov
xor
stos
cmpsb
jns
pop
sub
push
ss
and
sbb
cmp
or
xor
cltd
je
rcrl
mov
test
pop
sub
call
fstl
out
test
cld
add
add
add
jmp
add
or
sub
mov
sbb
jmp
repnz
sahf
jecxz,pt
sub
jbe
xchg
jmp
mov
xchg
push
sbb
xchg
pop
xchg
xor
movsl
xor
mov
inc
xlat
je
pop
movsl
loopne
or
out
fildll
arpl
inc
and
or
sbb
xchg
push
push
adc
add
add
call
mov
add
sub
adc
rorl
fs
and
popa
fisubrs
sahf
pop
mov
das
andl
inc
adcl
test
pop
xchg
sti
mov
aad
call
xor
lds
jl
cmp
push
sar
jno
cmc
cmc
add
add
add
mov
adc
jbe
adc
add
imul
aas
jmp
pusha
cmpb
mov
pusha
loop
cld
jmp
pop
ret
dec
mov
pop
adc
sub
dec
out
fcompl
cld
insb
sbb
call
pop
scas
rcll
add
add
add
icebp
dec
add
mov
mov
aaa
adc
cld
ljmp
cmp
sub
cld
incl
pushf
add
mov
dec
and
cld
xchg
test
add
sub
arpl
add
add
add
ret
xor
dec
xchg
adc
inc
mov
adc
inc
mov
add
incl
add
add
xchg
inc
arpl
call
cld
in
int
or
add
pop
lods
jge
pop
addr16
out
outsl
das
cld
loop
mov
shrl
adcb
add
sbb
cmc
jp
inc
push
mov
das
jnp
shrl
jg
sub
xchg
hlt
cld
jp,pn
mov
add
push
dec
sub
shrl
adc
xchg
cmp
push
subb
jbe
inc
or
aam
add
jb
cmp
icebp
popa
cld
bts
lcall
out
fstl
mov
adc
add
lret
int
jecxz
mov
fldenv
out
lret
xchg
into
paddusw
cli
mov
insb
mov
add
add
mov
mov
cli
mov
cmp
push
jno
fcoml
mov
lock
push
jno
shll
add
lea
mov
jne
out
int
cmpsb
add
adc
out
int3
andb
mov
jb
repnz
repnz
bound
dec
add
sub
add
add
add
xor
or
pop
jns
adc
ret
dec
mov
dec
mov
push
adc
push
dec
mov
push
inc
or
fisttpll
xchg
add
insb
sbb
or
mov
enter
out
inc
or
jno
cld
pop
and
or
mov
dec
push
add
add
xchg
jae
xor
dec
sbb
int3
jno
mov
ret
add
cmp
shl
loope
sti
mov
adc
call
pop
and
out
inc
jp
jo
sbbb
mov
dec
pushl
dec
jg
add
or
lret
andl
stos
mov
notl
push
push
ds
sbb
add
add
fisubrl
add
fidivrl
sub
sub
pop
rcl
cld
das
test
jecxz
sub
rolb
popa
cli
pop
sbbl
sarl
push
xchg
jge
pop
xorb
sub
fildl
das
dec
shrl
mov
mov
aad
loop
inc
scas
add
pop
jmp
xchg
add
add
add
lret
pop
sub
call
in
sar
cs
js
sbb
sti
out
mov
sbb
bswap
jmp
ret
xchg
mull
xor
or
out
jb
sub
jb
sub
sbb
movntq
scas
mov
add
adc
add
imul
out
pop
rorb
add
add
add
js
out
jbe
insl
fisubrs
leave
popf
ljmp
adc
cmp
fisubrs
sbb
dec
cmp
popa
aam
mov
jle
call
mov
mov
mov
adc
imul
arpl
add
inc
sub
cmpsl
inc
adc
push
je
in
xchg
jmp
add
add
pop
adc
shr
ljmp
subb
xchg
jmp
lahf
adc
or
mov
pusha
adc
mov
mov
verr
mov
or
xchg
dec
and
cwtl
dec
and
cmp
mov
lods
inc
aas
sti
push
cmpsl
xchg
dec
and
sbb
test
inc
lret
add
add
pop
and
inc
and
cmp
xchg
or
arpl
mov
ja
add
inc
movsb
sti
mov
adc
cmp
ret
sarl
les
push
jle
sub
rolb
mov
lss
call
icebp
pop
test
stc
inc
sbb
sub
es
xorb
xchg
add
add
add
dec
sub
cmpsb
pop
cli
test
jp
xor
in
sub
aad
sbb
mov
sub
mov
enter
jg
fdivrp
lcall
add
pop
sub
push
mov
pop
mov
cmp
inc
jns
jmp
mov
jnp
fidivrl
pop
jbe
add
jl
test
hlt
cmc
test
ja
inc
fisubrl
dec
add
add
add
xchg
add
add
pop
add
rcr
pusha
aad
adc
insb
clc
pop
adc
jl
xor
stc
jl
arpl
inc
push
xchg
adc
pop
adc
adc
lds
xlat
sbb
aam
popa
and
push
xor
neg
mov
add
sub
add
adc
add
add
add
movsl
lds
pminsw
roll
lock
popa
adc
xchg
test
xchg
push
add
fwait
xchg
or
in
xlat
call
bound
dec
or
pop
adc
pop
pop
adc
mov
popa
pop
sti
mov
mov
fs
push
mov
add
inc
or
add
add
popa
and
sti
cmpsb
add
pop
stc
xorb
test
inc
orb
lcall
pop
clc
add
xchg
inc
jmp
lds
dec
mov
push
dec
push
jb
pop
push
mov
cld
adc
cmpsl
mov
and
in
pop
out
adc
cmpl
int
inc
jecxz
push
aaa
cld
mov
icebp
add
add
add
mov
xor
add
cld
btc
fwait
sbb
push
imul
mov
addb
rcl
pop
adc
lods
cmc
add
cwtl
adc
adc
popf
pop
or
mov
and
pop
mov
stos
cmp
into
fldt
mov
add
pop
push
cmp
add
js
sub
inc
jp
iret
addr16
cmp
ret
dec
mov
cwtl
out
xor
push
jmp
fildl
jb
cld
mov
and
cld
jae
test
and
mov
ljmp
pop
mov
cli
decl
lcall
sub
xor
xchg
std
fwait
sub
lret
movzbl
out
dec
jns
add
add
add
inc
and
xchg
int3
add
xor
stc
shl
sbb
popa
cwtl
lods
filds
mov
imul
loop
imul
int
out
lds
push
cwtl
stc
and
sbb
xor
sti
xlat
popf
jmp
xor
jp
inc
rcll
movsl
mov
or
mov
add
add
add
pop
arpl
dec
xchg
add
test
cld
insb
pop
iret
push
cmp
je
cmp
repnz
jg
or
add
push
insb
iret
jle
push
cmp
sahf
add
pop
mov
mov
cwtl
dec
loope
pop
or
jge
fstps
push
add
ret
pop
pusha
push
lahf
loopne
and
add
add
add
add
gs
jb
cltd
lret
cs
mov
add
mov
inc
mov
mov
mov
shrb
push
add
mov
push
in
fsubrs
cld
mov
mov
add
or
jecxz
js
cld
mov
xchg
add
or
pop
and
jmp
cld
mov
add
add
outsl
pop
pop
aas
rcrb
adc
or
jmp
cs
test
pop
sbb
inc
outsl
psubd
pop
sbb
pusha
jecxz
xor
cld
mov
stc
adc
pop
fs
push
jp
push
nop
pop
cli
jmp
inc
outsl
add
jmp
call
adc
adc
push
push
xchg
push
pand
call
dec
add
add
add
pop
mov
adc
or
fiaddl
test
cli
fstl
jge
orl
faddp
add
inc
push
xor
sbb
and
jmp
pop
orl
orl
and
out
jecxz
fistl
test
mov
or
int
je
jge
sbb
jge
jmp
add
pop
xchg
sub
and
ret
sbb
outsb
mov
sub
cmp
adc
mov
pop
fsubp
inc
or
xchg
dec
push
jmp
sub
testl
or
lock
mov
jne
jge
pusha
mov
xchg
jmp
jecxz
xor
ret
sbbl
xchg
add
loope
and
pop
lea
in
and
bound
add
push
iret
push
mov
xor
xor
xor
xor
cmp
hlt
mov
inc
jmp
jbe
cld
push
xor
dec
cltd
jl
negb
add
shll
pop
pop
push
shll
xor
cs
push
and
add
add
add
fs
mov
sarb
add
adc
add
mov
mov
mov
jmp
in
lea
mov
pop
testb
mov
stos
add
call
test
push
test
orb
push
data16
imul
sbb
test
lock
add
adc
add
inc
pop
or
mov
add
cmp
test
or
pop
or
mov
dec
push
pop
pop
mov
or
sub
inc
jne
jno
daa
adc
idiv
mov
or
dec
scas
insl
shlb
mov
bound
jp
mov
xor
adc
outsb
jae
sbb
sarb
add
push
jne
add
xchg
out
daa
fsub
cli
decl
mov
lock
mov
push
scas
dec
leave
imul
xor
mov
push
sub
push
adc
sbb
cmp
rcrl
loopne
int
sub
xchg
out
lret
pop
adc
jl
adc
mov
sub
pop
mov
add
add
jge
pop
mov
mov
insb
inc
lods
sbb
jge
xchg
inc
pop
add
sub
test
pop
lock
add
clc
xchg
mov
movsl
sub
mov
xchg
jge
shrb
popf
je
sarl
xchg
add
fdiv
or
push
lret
mov
in
cld
jmp
add
add
add
call
push
and
add
dec
cli
sbb
dec
movaps
shl
flds
insl
mov
adc
je
and
add
jmp
pop
cwtl
insb
int
cwtl
inc
sti
std
adc
in
push
pop
lea
jbe
cld
sbb
adc
rolb
rcl
lea
add
add
shl
sbb
pop
addb
cltd
aas
and
mov
xchg
push
call
add
add
xchg
mov
ja
add
xchg
sti
mov
outsl
and
cltd
inc
and
mov
cld
test
xchg
add
hlt
sbb
and
mov
lea
call
mov
or
add
add
add
cld
lcall
pop
mov
push
std
push
pop
lock
ljmp
sbb
inc
jle
addl
insl
cmp
mov
clc
call
xor
loop
push
xchg
lahf
mov
push
cld
popa
mov
jmp
outsb
fisubrs
daa
add
ljmp
pop
ljmp
add
add
shrl
cli
sbb
xor
pop
ljmp
stc
jg
mov
xchg
push
jae
ljmp
flds
ljmp
adc
add
mov
pusha
mov
add
xchg
popa
popl
sub
or
xchg
sbb
ret
imul
mov
test
mov
inc
add
pop
in
out
and
jno
sub
and
or
push
popf
mov
add
mov
sbb
mov
xchg
mov
loopne
nop
pusha
mov
xchg
inc
cmp
xchg
push
movsb
jno
inc
push
in
fsubrl
std
ss
push
lea
add
add
cwtl
sti
jmp
pop
adc
es
call
int
sti
mov
lock
daa
out
subl
imul
int
adc
jmp
in
arpl
mov
jmp
lea
mov
add
adc
mov
push
lea
push
mov
das
insl
jo
add
add
add
xchg
repz
jle
add
jle
add
adc
pushl
add
or
subb
in
mov
adc
xchg
add
jg
call
mov
cld
adc
mov
adc
xchg
dec
lea
sub
inc
jle
add
add
add
decl
xchg
int3
xlat
mov
mov
sub
and
mov
andb
loopne
adc
mov
mov
mov
imul
adc
mov
cmpb
out
jnp
mov
or
movsb
add
pop
jae
and
jg
push
mov
lcall
add
add
add
adc
or
sub
lcall
shlb
pop
mov
cmpsb
adc
lods
pusha
cmp
push
xchg
ljmp
xor
sub
mov
nop
jge
mov
inc
pop
xchg
out
pop
adc
jge
jo
jge
add
pop
xchg
inc
add
adc
loopne
int
dec
pop
rorb
pop
xchg
aas
add
adc
add
add
add
push
int
out
mov
pop
jmp
pop
mov
pop
inc
push
loop
xchg
cmp
inc
icebp
jno
fs
lods
outsl
add
adc
loopne
and
inc
stos
xchg
jmp
sbb
jne
push
pop
jo
sbb
push
xchg
bound
scas
shr
jl
std
sti
jb
in
imul
or
add
adc
sbb
push
call
lds
imul
jmp
xor
mov
xchg
inc
or
push
inc
or
das
sub
es
sbb
sub
mov
cld
je
sti
mov
push
push
dec
sbb
pop
sub
les
leave
pop
xor
add
add
sbb
or
cmp
pop
sbb
inc
dec
leave
pop
adc
jl
push
sub
adc
sub
cld
push
mov
mov
add
jecxz
xor
jg
aas
and
mov
add
int3
cld
push
dec
dec
jg
pop
call
pop
fiaddl
push
push
sub
jg
add
add
add
pop
test
loop
lcall
xchg
dec
stc
out
inc
dec
sub
nop
and
dec
sub
mov
push
mov
pop
je
inc
out
push
xchg
mov
pop
inc
jecxz
decl
pop
call
call
icebp
orb
orb
sar
or
sti
sbbb
add
add
decl
inc
arpl
adc
mov
add
je
mov
mov
add
mov
adc
outsb
movl
cmc
cmp
clc
sbb
ljmp
dec
insl
jg
add
das
popa
pop
mov
mov
add
aam
add
lods
adc
pop
xor
stos
jb
jmp
add
xchg
and
mov
pop
adc
imul
adc
cltd
jle
and
imulb
data16
lock
test
jg
dec
xchg
rclb
inc
aad
arpl
sbb
jae
push
in
sti
mov
pop
lea
sti
cmpsb
xchg
push
in
add
cmc
popa
push
mov
sub
dec
ja
cmc
push
outsb
enter
add
add
add
rcl
imul
dec
dec
mov
inc
ja
jmp
mov
jae
mov
or
adc
or
jecxz
add
je
and
orb
frstor
cld
dec
enter
cmc
cld
push
aas
jl
lock
add
inc
cmc
mov
mov
or
rolb
mov
add
add
bound
mov
loopne
add
out
dec
test
adc
lock
pop
pop
pushf
xor
and
adc
aaa
add
hlt
xor
pop
jne
incl
inc
incb
call
lcall
sbb
jne
or
jg
or
scas
jmp
or
mov
push
jnp
in
out
add
add
add
imul
call
add
outsb
imul
jmp
aas
xlat
imul
nop
stos
add
fistps
scas
push
xor
xor
xor
call
scas
sub
or
out
mov
call
mov
jecxz
cli
mov
out
jmp
pop
popl
add
add
cmp
push
jmp
add
inc
sti
push
cmc
jmp
jnp
sub
cmc
jp
sub
outsb
pushf
pop
mov
inc
mov
call
cmp
and
add
hlt
testb
dec
lds
rcrl
in
mov
insb
inc
dec
sbb
pop
mov
testl
stc
and
xchg
je
mov
lret
cmc
sti
push
testl
add
sbb
jmp
cs
mov
sub
fsubp
mov
add
push
sub
mov
and
inc
stos
add
pop
addr16
inc
popa
sti
cld
xchg
jb
jmp
sbb
sbb
push
out
or
add
add
add
in
mov
pop
adc
push
fsub
or
repnz
jmp
loope
je
dec
jp
lret
jmp
push
lock
xor
push
outsb
and
ss
data16
pop
sub
jnp
test
fwait
or
neg
hlt
fsubrs
lret
int3
rcrl
sub
inc
add
inc
or
aaa
punpckldq
out
fwait
adc
add
mov
ret
ja
xchg
sqrtps
add
std
mov
iret
jns
add
jae
test
mov
add
std
loop
push
add
pop
call
jmp
cltd
insb
inc
jae
jmp
addl
add
mov
arpl
adc
out
divb
call
divl
xor
mov
xor
loope
loopne
inc
in
pop
cmp
inc
jp
jnp
inc
aam
daa
in
loopne
subb
inc
add
loop
testb
ljmp
fsts
faddl
xchg
bound
loopne
popf
sub
mov
loope
bound
mov
pusha
adc
cli
lret
adc
add
push
dec
mov
imull
popf
push
push
jg
pop
test
test
ljmp
push
lds
leave
jnp
mov
and
pop
xchg
movsl
hlt
inc
repnz
and
mov
push
add
loopne
stc
push
mov
pushf
ljmp
fwait
add
add
add
add
adc
lods
mov
dec
sbb
or
xor
pusha
out
and
xor
imul
sti
push
jmp
adc
push
adc
das
sub
push
and
lret
call
mov
and
pop
adc
outsl
adc
stc
sub
adc
xchg
add
pop
lcall
add
add
sahf
and
pop
adc
addr16
lcall
pop
add
mov
mov
cmp
mov
lea
adc
mov
jmp
test
hlt
cli
incl
adc
cmpl
dec
jne
xchg
clc
add
hlt
imul
data16
and
mov
cmp
les
pop
jmp
push
push
lea
ja
add
add
imul
aaa
adc
inc
mov
add
mov
mov
add
xor
dec
std
dec
push
pop
sub
pop
popa
jp
pop
clc
incl
sahf
push
aas
scas
pop
ds
jle
xor
push
or
shlb
stc
lcall
jnp
pop
clc
incl
frndint
add
add
add
add
shlb
dec
jnp
pop
clc
decl
lds
adc
das
lods
cmp
repnz
clc
call
jle
and
cmp
mov
sbb
jl
incb
clc
jbe
push
adc
push
icebp
in
gs
pop
xchg
and
loope
int
fsts
pop
cmpsl
mov
jp
fisttpll
subl
add
add
jmp
fnsave
rclb
jmp
push
sub
std
jp
xor
movsl
aaa
inc
inc
or
popa
xchg
sub
inc
xchg
popf
fisttps
pop
loopne
clc
dec
add
and
incb
pushf
push
out
test
jmp
push
pop
and
pop
push
test
adc
push
add
add
jne
or
in
sti
jmp
cltd
inc
lret
mulb
push
std
in
hlt
das
push
pop
in
xchg
jp
testl
adc
ss
push
test
outsl
cltd
je
jns
push
int
lcall
push
xor
mov
pop
in
sti
imul
jmp
and
aas
frstor
xor
add
add
adc
sti
ljmp
jl
cli
stos
and
notl
sti
pushl
ss
mov
push
and
imul
and
jmp
sub
movsb
pop
adc
fwait
pop
adc
push
adcl
xchg
rep
pop
add
imul
sub
dec
insl
decl
test
add
add
add
add
jecxz
push
push
add
inc
push
add
pop
orb
iret
call
jecxz
inc
add
dec
sti
imul
pop
xchg
ja
sbb
sub
mov
push
xchg
sbb
jecxz
je
mov
sbb
add
lea
inc
int3
enter
pop
lea
xlat
add
add
add
clc
cmp
pop
ja
add
mov
in
xchg
test
fs
xchg
adc
pop
clc
add
adc
mov
add
push
push
int
pop
fsts
pop
cwtl
sub
pop
js
cmp
dec
inc
sti
inc
pop
mov
adc
pop
lds
fcoms
add
add
add
out
pop
dec
push
mov
xor
add
cmpsb
xchg
adc
mov
xor
jmp
or
jo
add
test
rolb
xchg
add
arpl
adc
jmp
jo
pop
call
sahf
adc
jmp
add
jmp
sub
sub
add
jbe
xchg
inc
and
punpckldq
xchg
add
pop
xchg
inc
jecxz
stc
pushf
pop
adc
ficoml
add
push
stc
fisubrl
adc
lods
stc
mov
pop
adc
and
nop
mov
nop
shl
fmull
jmp
mov
cltd
mov
adc
add
xchg
sub
mov
dec
inc
cmp
add
add
mov
add
aaa
pop
loop
push
es
pop
notb
add
pop
or
cld
rcr
rclb
ret
and
xorl
xchg
stc
xor
adc
mov
jmp
inc
push
add
pushf
xchg
pusha
mov
add
xchg
iret
push
xchg
jg
jbe
add
adc
push
xchg
jg
xchg
add
adc
addl
add
add
xor
mov
sar
pop
add
xchg
jae
call
aad
rorb
sahf
clc
nop
sbbl
ljmp
inc
add
fwait
xchg
stc
jmp
push
pop
add
mov
fldenv
mov
shrl
add
dec
mov
js
add
fwait
test
decl
add
jo
add
fwait
mov
decl
pop
jno
xchg
pop
clc
decl
pop
adc
loope
mov
test
lcall
sub
int
pop
pop
loop
adc
mov
and
shr
add
jnp
pop
cmp
pop
xchg
jae
pop
adc
pop
loope
insb
int3
push
outsb
add
adc
add
push
into
in
push
divl
add
outsb
mov
ja
stc
lea
in
cmp
dec
call
mov
leave
add
sbb
adc
jmp
jmp
add
pop
stc
aaa
sub
jmp
add
out
je
call
add
add
pop
inc
sti
mov
add
add
add
push
sub
add
popa
sti
scas
mov
add
aaa
movsb
push
ds
and
loop
call
notl
add
push
fmuls
add
pop
rcl
imul
or
call
test
sbb
ja
add
mov
inc
mov
je
and
jmp
add
xchg
xchg
cmp
adc
push
sbbl
aam
push
add
mul
testl
leave
divl
test
test
xor
xchg
lahf
adc
add
xchg
cmpsb
push
mov
add
cmp
test
mov
lea
aas
notl
or
pop
add
incl
dec
mov
add
add
add
cli
fadds
adc
mov
adc
mov
cld
adc
aam
and
xchg
sbbl
clc
mov
push
push
mov
das
daa
pop
fstpt
cmpsb
call
mov
imul
inc
pop
idivb
sbb
add
fs
sbb
add
or
add
add
add
and
shll
into
adc
push
repz
iret
mov
push
sub
fmull
push
jmp
repz
pop
mov
adc
add
adc
in
pop
insb
adc
loope
mov
pop
adc
add
popf
xor
jmp
outsl
pop
xchg
stos
jmp
in
cli
fisttpl
sbb
push
rcl
pop
inc
adc
add
add
loopne
push
pop
adc
jle
xor
fincstp
cmp
fsubrp
add
loopne
icebp
sub
add
pop
adc
mov
outsb
adc
mov
add
add
sbb
xchg
add
pop
inc
call
insb
sub
ss
or
xor
je
xchg
loopne
out
add
add
add
xor
mov
pop
mov
xchg
sarb
inc
call
bound
or
mov
xchg
shl
xlat
mov
jae
cmp
lahf
inc
idiv
xor
cmp
movsb
orl
rcl
xor
idiv
std
push
and
sarb
pop
add
and
mov
push
add
add
add
fsts
xchg
pushf
add
adc
jge
mov
lods
push
or
loope
inc
xor
test
sarb
inc
clc
dec
inc
bound
adc
push
adc
sub
inc
push
shll
outsl
or
xor
jne
dec
push
or
shll
push
inc
in
clc
adc
imul
lcall
cli
jle
jbe
or
add
add
dec
and
aaa
lahf
idivb
icebp
sub
call
adc
pop
add
imul
lods
popf
push
xchg
aam
xchg
mov
orb
cmp
mov
sbb
test
adc
testb
insb
les
ret
jmp
shll
sbb
cmpsb
in
pop
imul
jmp
sub
cmp
pusha
xor
adc
pop
add
add
add
rcrl
jb
ja
les
xor
cmc
or
sbb
jb
ja
lds
adc
add
adc
inc
inc
push
call
inc
pop
xchg
sub
jmp
lds
pop
sbb
mov
subl
add
sub
pop
sbb
dec
or
add
mov
ds
inc
outsb
lds
dec
mov
pop
xchg
add
lds
inc
lds
or
pop
inc
push
bound
adc
out
insb
fldcw
xchg
lret
mov
pop
fstpl
pop
xchg
sub
mov
fstpl
pop
gs
hlt
fs
xchg
sbb
dec
add
lds
add
fcoms
fs
xor
add
pop
inc
xchg
pop
xchg
rclb
lock
add
ja
call
dec
mov
testl
mov
je
adcl
push
clc
lret
add
inc
pop
pop
hlt
rolb
adcl
add
add
add
ljmp
call
mov
rolb
rorl
add
jecxz
ret
mov
call
pop
cmpsb
jnp
ret
inc
push
push
mov
dec
lea
ljmp
push
rorl
aam
sub
mov
sti
add
jbe
pop
ljmp
inc
pop
aaa
incl
add
add
jns
cmp
cmc
pop
ljmp
pop
ljmp
push
addr16
sub
adc
ljmp
pusha
insb
mov
pop
call
sbb
cwtl
hlt
adc
fnsave
jmp
lcall
hlt
adc
pop
jmp
push
mov
loop
pop
loop
jg
xchg
call
add
pop
mov
jl
adc
push
inc
adc
add
jmp
xor
xor
xlat
inc
pop
mov
fs
adc
push
loope
push
dec
mov
jmp
insl
data16
or
push
add
ret
outsb
sti
mov
jo
add
imul
push
pop
jno
add
add
adc
xchg
adc
add
pop
xchg
dec
add
xchg
jmp
test
mov
adc
jmp
lcall
insb
cmp
mov
ja
aad
cmc
cmp
inc
jmp
mov
fwait
or
or
sti
js
verw
dec
call
fildl
add
add
popf
adc
inc
pop
shl
inc
sbb
mov
add
sub
hlt
cmp
fisttps
decl
sbb
fs
adc
add
inc
sub
inc
fwait
or
nop
ja
mov
fists
add
push
add
xchg
addl
add
add
sub
lea
sub
orl
add
repnz
inc
adc
push
js
and
ss
dec
cltd
dec
add
pop
sbb
lcall
add
mov
call
dec
sti
xor
and
call
sti
mov
xor
andl
ljmp
lahf
fldcw
sahf
stc
push
scas
pop
pop
cmp
add
add
inc
popa
dec
and
jno
and
xchg
les
test
ljmp
pop
ljmp
shrl
popl
pop
ljmp
fsubrp
jmp
and
imul
adc
jle
sub
int
out
lds
xlat
xor
sti
ljmp
lock
dec
add
add
addb
add
mov
push
xchg
lods
add
inc
add
sub
mov
push
pop
adc
and
jmp
push
jp
imul
dec
test
dec
pop
cld
iret
push
push
jmp
pop
flds
jns
test
jl
or
leave
call
and
add
add
add
call
test
cmpsl
xchg
lea
adc
jmp
bound
add
out
add
xchg
adc
add
push
sti
popf
adc
lock
push
cld
pop
adc
jmp
inc
sbb
jmp
push
mov
sbbl
and
pop
adc
xchg
push
xchg
jmp
fdivl
add
pop
push
jge
adc
out
je
jmp
add
jg
mov
mov
je
mov
jecxz
jmp
and
mov
sub
setno
addl
shlb
or
push
and
xchg
add
and
adc
mov
pop
mov
iret
sldt
inc
fildl
test
mov
adc
push
enter
push
or
adc
add
cld
aas
add
int
test
mov
ja
add
xchg
adc
rolb
pop
ljmp
jecxz
add
pop
dec
and
pop
cmp
loop
jmp
pop
ljmp
fisubrl
jae
scas
pop
jns
pop
ljmp
pop
pop
andl
decl
jmp
call
roll
add
push
lods
cmc
test
lcall
cld
adc
fnsave
lcall
mov
popf
pop
ljmp
pop
ljmp
pop
adc
add
mov
sti
loop
mov
daa
fimull
add
test
out
pop
adc
fcmovnu
call
fs
stos
dec
outsb
inc
outsb
mov
ja
add
add
popa
fldt
xchg
pop
lock
clc
sbb
orb
or
pop
adc
jmp
add
push
mov
or
jno
cmp
fcoms
fsubl
jmp
lds
arpl
test
sub
add
into
roll
inc
sti
mov
std
xchg
add
add
add
xor
cs
out
push
adc
cli
push
xor
movsl
add
pop
jmp
jg
imul
sub
add
subl
je
les
lds
call
jb
mov
inc
int
inc
sti
mov
inc
and
xchg
mov
add
fwait
lea
add
add
add
ja
enter
lea
cmp
and
inc
inc
decb
xor
dec
test
push
add
idivl
xchg
add
adc
add
pop
pop
sahf
inc
pop
in
xor
adc
add
pop
in
popl
adc
mov
nop
xchg
negl
pop
push
mov
add
add
sub
jnp
call
call
mov
push
push
mov
or
jecxz
inc
in
inc
mov
push
mov
std
dec
call
sub
pop
mov
jl
mov
push
adc
xor
iret
mov
incl
xchg
mov
test
push
dec
push
adcb
inc
pop
mov
add
add
pop
inc
add
fisttps
shrb
pop
in
pop
or
idiv
cli
fstl
jmp
adc
clc
fistl
loope
in
pushf
outsb
cmpsl
sti
cltd
outsb
repnz
push
sbb
adc
icebp
and
lock
pop
outsb
mov
gs
and
push
jmp
xlat
adc
add
mov
incb
add
add
sbb
lods
add
shrl
lods
into
aam
pop
push
jmp
aas
pop
adc
sub
out
xchg
test
rorl
jmp
pop
and
add
outsl
lldt
shll
sbb
pop
lea
popa
lea
sti
xchg
cmp
pop
adc
jns
add
out
verw
and
add
add
add
add
push
dec
je
cwtl
cli
ds
aaa
add
popf
adc
ss
mov
out
xchg
inc
punpckhdq
mov
push
stc
pop
or
enter
inc
fcoml
xchg
sti
add
dec
bound
iret
adc
or
dec
mov
add
and
sub
add
jbe
addl
add
add
inc
add
dec
inc
or
int
xchg
test
dec
inc
or
mov
mov
icebp
les
add
adc
stos
add
iret
pop
mov
lret
rol
inc
je
add
jmp
imul
frstor
cmp
dec
inc
or
call
dec
push
aaa
mov
or
push
add
pop
jno
clc
fnstenv
cmp
add
add
popa
insl
les
ja
xchg
aaa
bound
pop
push
clc
xchg
lret
add
xchg
sahf
sub
cltd
vmovsd
mov
les
push
sti
call
lds
add
cli
push
out
cmpxchg
cmc
cli
rol
in
es
aas
add
shl
ljmp
inc
pop
sbb
call
sub
sbb
add
add
or
imul
jo
in
dec
adc
inc
pop
nop
sub
in
push
cld
fnstcw
fsub
dec
sbb
push
cmpsb
and
loope
adc
adc
ret
aaa
or
cwtl
pop
pop
int3
sbb
xchg
and
insb
ret
adc
pop
std
add
pop
ss
outsb
mov
pusha
in
sahf
dec
inc
outsl
stos
lret
imul
jns
call
add
lret
in
xor
pushf
movsb
scas
and
add
and
fildl
add
jle
inc
es
mov
or
lods
mov
adc
xor
jge
pop
inc
mov
aaa
mov
ljmp
adc
pop
mov
jns
addr16
stos
bound
push
jb
nop
in
and
add
push
pop
out
cli
xchg
push
add
add
add
jge
add
sub
inc
gs
adc
jmp
popf
adc
je
sti
xor
add
pop
fdivrs
test
dec
xchg
push
pop
je
jo
mov
add
adc
into
pop
je
test
ret
adc
mov
and
mov
int
push
add
mov
add
sub
jnp
stos
popa
sti
xor
shlb
dec
shlb
aas
rclb
roll
mov
mov
incl
scas
push
push
scas
jne
out
pop
cld
lcall
push
inc
inc
nop
les
pop
cld
push
subb
stc
adc
adc
dec
mov
shl
leave
ret
call
das
push
aad
out
add
loope
test
dec
cld
add
add
add
lds
sahf
mov
inc
cld
xlat
push
or
or
sti
imul
pop
sahf
cli
cmp
cli
sub
add
loopne
pop
xchg
repz
cli
add
cmpsb
mov
inc
pushf
mov
jle
xchg
push
aad
in
andl
test
out
lea
into
call
push
sub
insl
and
popa
aas
out
jle
adc
push
add
add
add
stc
cmp
sbb
ret
js
stos
test
and
inc
sbb
or
test
or
enter
push
jmp
inc
pop
pushf
roll
pop
cmp
cmpsl
fisubs
cld
ret
imul
dec
add
add
mov
pop
mov
hlt
jmp
inc
rorl
add
add
add
or
insl
outsb
mov
fs
mov
add
inc
jl
pop
adc
ds
loop
sub
xchg
inc
bound
lahf
mov
andl
fcompl
sub
mov
push
push
bound
lret
push
push
xchg
push
inc
stc
jmp
or
stc
push
scas
pop
fiaddl
add
add
popf
das
sbb
adc
sbb
push
sbb
adc
fsubl
in
bound
push
mov
cmovle
adc
cltd
shlb
add
movntq
mov
lock
shl
adc
xor
push
ret
push
mov
mov
test
adc
push
sub
cmp
push
add
add
add
add
mov
out
jne
sub
inc
jg
rol
sub
adcb
call
pop
aam
or
in
test
add
test
sti
shll
adc
sub
inc
or
testb
xchg
and
pop
add
mov
add
outsb
sar
incl
adc
xchg
pop
mov
lret
jns
pushw
dec
and
dec
xchg
das
xchg
jnp
shlb
fstl
pop
cli
and
pop
and
pushf
adc
mov
inc
mov
add
outsb
mov
setns
mov
mov
gs
adc
hlt
add
add
add
pop
outsb
lock
pusha
fwait
xor
in
sub
and
sbb
adc
daa
xor
ds
fsubrl
cli
notb
test
fucom
cmp
adc
pop
xor
mov
aas
clc
das
cld
sbb
fmull
xlat
inc
pop
mov
lret
xchg
sahf
fcoml
cmp
imul
jp
add
add
add
rolb
std
popa
mov
xorb
adc
jb
sub
fmuls
lods
psrlq
data16
adc
xchg
add
dec
push
or
adc
inc
pop
leave
sub
jmpw
and
or
and
add
out
adc
jmp
mov
dec
pop
jmp
inc
or
add
add
jmp
dec
bound
push
jb
push
in
sarl
pusha
leave
daa
cltd
jno
je
pop
out
rorb
ljmp
divb
cltd
inc
aam
push
jne
aaa
popa
and
add
cli
jno
je
and
icebp
inc
dec
or
push
je
fadds
ljmp
add
pop
push
leave
xor
add
add
push
jecxz
shlb
mov
or
cmp
mov
jecxz
dec
xchg
in
push
lahf
mov
push
sbb
cmp
mov
cwtl
inc
cld
pop
stos
cmp
or
push
adc
add
out
mov
adc
daa
in
add
les
je
jno
push
lock
dec
push
mov
jb
xor
add
add
in
sbb
inc
push
and
xor
pop
ret
in
mov
and
fwait
xchg
push
add
sub
dec
mov
stos
adc
subl
je
cmp
pop
int
sub
jmp
adc
add
shl
and
repz
mov
add
add
outsb
xchg
push
pop
cli
sub
movsb
pop
scas
test
in
es
xor
fdiv
dec
push
jmp
in
ds
popf
pop
push
sub
fdivs
loopne
push
loopne
outsl
adc
test
fcmovnbe
pcmpeqb
or
out
outsb
sarb
and
cs
bound
jne
mov
sbb
add
add
push
cmp
mov
add
pop
xchg
sar
ret
inc
xchg
arpl
and
lret
sti
fmull
add
or
push
fldcw
adc
and
add
mov
and
imul
decl
in
cwtl
sub
push
xchg
push
inc
or
out
cli
out
sub
mov
ljmp
add
add
lcall
add
push
or
mov
add
inc
fdecstp
sarl
mov
divl
mov
push
add
incl
mov
test
push
or
xor
test
shlb
or
sbb
or
jbe
ljmp
mulb
mov
add
add
add
dec
and
add
notl
inc
clc
enter
xor
divl
out
lock
mov
imul
jecxz
dec
add
xchg
pshufw
pop
in
xor
ljmp
xor
jg
mov
into
or
mov
pop
cs
hlt
mov
inc
dec
sbb
stos
ja
and
add
inc
mov
add
add
pop
stos
mov
jmp
add
fbstp
push
ss
inc
pop
jmp
jecxz
test
rcll
cwtl
imul
fxam
xlat
adc
cmpsb
sbb
ljmp
pusha
sbb
or
jnp
push
imul
inc
pop
ret
in
repnz
jmp
out
mov
add
add
loope
inc
pop
adc
add
mov
jmp
fisubl
and
mov
lods
mov
clc
imul
mov
in
in
add
bound
adc
bound
mov
mov
pop
sub
jl
jle
cmp
jmp
add
add
adc
das
test
pop
movsl
shrb
xor
push
add
xchg
xchg
and
jg
popa
mov
mov
dec
dec
roll
outsb
fs
sahf
xlat
fdivs
lret
mov
pop
sti
aam
or
sbb
add
mov
add
dec
adc
add
add
add
movswl
sbb
cmp
shlb
clc
popa
add
fdivp
push
sarb
cmp
jne
and
jmp
cmp
push
dec
nop
inc
and
push
lea
clc
addr16
aaa
push
dec
push
int3
fmuls
rol
int
jne
ficoms
cmp
add
add
add
pop
orl
leave
jmp
out
pop
jmp
sti
in
mov
jb
cmp
jae
sbb
ret
push
and
mov
call
add
iret
jecxz
push
or
cltd
xlat
cwtl
mov
and
adc
in
cs
sub
les
xor
or
jno
stos
jno
into
jg
shr
call
stos
idiv
push
xor
mov
add
add
mov
clc
sub
dec
push
fcmovnb
xor
jl
fiaddl
inc
inc
das
push
test
and
cmc
and
roll
xchg
incb
sbbb
mov
cmp
pop
leave
mov
push
rorl
hlt
fistps
jmp
das
xor
lds
mov
pusha
add
add
add
adc
cmp
shll
mov
imull
push
cltd
pusha
mov
test
insl
les
and
in
mov
jmp
push
mov
inc
js
cld
mov
pop
aam
add
mov
repnz
mov
sub
rclb
add
add
adc
mov
push
sub
mov
push
dec
lret
or
insb
and
repz
xchg
in
inc
jmp
dec
idiv
jbe
loope
lods
pop
adc
sbb
push
push
mov
aad
aaa
or
add
lret
sbb
pop
xor
push
cmp
push
lea
add
add
ret
push
fstl
or
dec
cld
xor
adc
call
out
notb
inc
int
adc
and
adc
xchg
shl
add
or
pop
mov
subb
dec
push
xor
cmp
sbb
insb
inc
inc
add
adc
rorl
shrb
add
aad
repnz
pop
lret
test
add
add
push
fdiv
jg
sbb
pop
test
inc
add
out
clc
iret
dec
push
cmc
aas
pop
push
dec
and
cwtl
xor
mov
xor
pusha
and
scas
scas
test
add
dec
adc
dec
pop
jge
inc
or
iret
adc
push
add
xorl
out
pop
add
add
add
add
in
es
sbb
das
int3
xchg
cli
out
adc
mov
push
pop
push
shlb
rorb
lods
shll
dec
cmp
imul
pop
nop
and
inc
fwait
cmp
jge
mov
push
adc
and
popa
pop
inc
push
popa
loop
and
sub
int
fcomps
add
push
in
cld
add
add
add
dec
xlat
flds
lahf
mov
gs
leave
or
mulps
adc
nop
jge
adc
xor
pop
add
xchg
mov
add
mov
jo
in
xor
in
das
dec
sub
push
test
and
or
add
hlt
ficompl
adc
lds
inc
icebp
aaa
mov
movsl
add
add
add
xchg
inc
push
and
xor
and
fnop
je
pop
mov
pusha
sbb
xor
in
pop
mov
and
das
sbb
mov
adc
hlt
sub
inc
jmp
pop
or
mov
movb
mov
cmp
mov
jmp
sti
ljmp
cmp
inc
and
xor
and
add
add
ud0
jbe
lds
inc
mov
test
add
inc
stos
push
add
cmp
add
mov
or
push
add
mov
dec
mov
push
add
push
and
cli
int3
js
cld
add
mov
icebp
or
pop
cmpsb
js
cmp
xor
mov
jnp
push
sbb
test
stos
jnp
add
add
add
pushl
lcall
add
inc
and
sub
add
add
xchg
jecxz
and
js
call
loop
testb
mov
call
jmp
inc
and
and
mov
mov
dec
add
popa
sub
roll
pop
je
add
add
ds
daa
cmp
pop
loope
int
sub
adc
ret
adc
mov
push
daa
add
pop
adc
jp
call
pop
dec
adc
cmp
jecxz
add
dec
cmp
sub
lea
test
add
fstpt
cmc
sarb
int3
fcoml
cli
leave
xlat
dec
int
mov
push
add
add
data16
test
sub
sub
int
fmuls
xor
sbb
or
xor
cmpsl
mov
test
inc
and
sub
inc
int
dec
pop
or
xor
mov
stos
mov
in
in
push
inc
xchg
dec
cwtl
inc
aad
lret
pop
adc
jmp
es
sub
add
add
add
xchg
cwtl
jmp
shll
test
mov
xor
add
adc
push
push
inc
jg
mov
sbb
mov
test
push
pop
xor
push
jecxz
adc
ret
dec
mov
rolb
stos
out
and
fsts
add
and
test
xchg
shrb
das
dec
inc
adc
sbb
dec
call
insb
adc
inc
shl
mov
notl
xor
je
cmp
lea
jecxz
outsl
adc
xchg
add
cmp
test
decl
push
ja
in
and
into
call
lods
repnz
add
add
mov
pop
adc
daa
nop
and
mov
pushl
lods
xchg
mov
ja
cmpsb
rolb
lea
adc
push
add
jmp
pop
call
fstpt
sub
cmc
mov
sub
out
call
jnp
psrad
dec
push
test
cmpsb
repz
dec
push
cld
pop
outsl
push
jmp
add
int3
pop
cmc
test
icebp
les
fidivrs
nopl
rorb
int3
loope
jp
jmp
punpckhdq
sbbb
pop
mov
pop
add
popa
adc
xchg
and
pop
adc
adc
add
ret
pop
mov
pop
xchg
sub
cwtl
jecxz
dec
push
std
add
adc
add
add
add
lods
add
test
test
cmc
xchg
jmp
mov
xchg
add
pop
test
sub
and
sti
jmp
jno
push
sub
rclb
add
pop
adc
push
and
push
inc
jmpw
cli
hlt
aad
inc
jmp
sub
hlt
fwait
jmp
add
repz
popf
cmp
push
and
lea
in
lods
mov
dec
jns
add
aam
pop
stos
dec
add
dec
add
mov
maskmovq
notl
testl
les
pmaxsw
add
mov
inc
add
jecxz
add
add
add
testl
xor
cld
dec
mov
in
mov
sub
jne
sub
jmp
xchg
ja
inc
pop
sub
pop
mov
inc
and
mov
fmull
pop
mov
out
ss
stos
xor
mov
mov
or
decl
or
call
jbe
mov
pop
das
int3
call
aad
out
pop
mov
les
mov
mov
call
jae
adc
and
dec
inc
int3
push
xchg
push
and
dec
push
out
pop
mov
xchg
sub
push
adc
pop
stos
add
dec
stos
jp
setbe
sub
add
add
xchg
adc
add
xchg
test
nop
and
fcoml
xchg
jmp
mov
dec
test
call
rolb
sub
xchg
sub
cmp
incb
bound
loop
sub
lahf
cltd
icebp
scas
insb
pushf
repz
sbb
call
jb
add
add
btcl
pushf
lods
xchg
jecxz
pop
scas
ds
subl
loopne
push
bound
or
inc
jmp
loop
call
jb
mov
repnz
push
xor
add
mov
pop
bound
mov
dec
out
mov
test
daa
in
and
add
add
ljmp
add
mov
mov
mov
dec
add
mov
das
rclb
add
pop
and
xor
dec
xor
aam
mov
adc
mov
pop
xchg
add
push
xchg
call
cld
imul
popl
ljmp
rcrb
xor
sub
add
add
ret
dec
mov
jp
push
lret
mov
fisttps
fadds
pop
sti
lcall
xchg
lods
and
insb
jecxz
mov
lods
cwtl
cmp
mov
inc
jp
cmpsl
cmp
sbb
lea
aam
call
insl
add
int3
adc
fsub
cmp
xor
call
add
mov
add
ja
fwait
jp
mov
or
out
sti
pop
and
jbe
adc
mov
push
and
and
dec
and
xor
mov
mov
cmpsl
insl
xchg
adc
dec
fsubs
ds
nop
mov
lock
xlat
dec
or
mov
pop
mov
adc
movsl
add
jmp
pop
add
add
add
inc
int
mov
test
push
adc
add
iret
sbb
jns
aaa
addr16
pop
inc
cmp
xchg
add
out
jg
fcoms
stos
iret
mov
mov
adc
add
ret
adc
sub
push
push
xor
adc
adcb
cmc
dec
cmp
jmp
sar
arpl
popf
adc
movb
add
add
cmpsl
sti
sahf
xchg
inc
push
bound
inc
das
inc
sub
stc
jb
mov
test
mov
push
jb
dec
call
insb
popf
push
out
fs
pop
jb
mov
xchg
loope
jne
fs
inc
sbb
imul
add
pop
cmpsb
pop
and
in
mov
shlb
add
add
cltd
push
call
mov
gs
dec
lcall
jp
je
xlat
and
decl
clc
or
cltd
mov
pop
mov
inc
mov
jne
or
mov
dec
decl
das
add
push
add
push
jnp
mov
inc
add
add
jp
pop
inc
xchg
mov
add
add
add
aaa
push
inc
add
inc
inc
cmp
inc
add
sar
int3
pop
sti
mov
pop
sti
scas
mov
ret
or
mov
push
in
sub
xor
sub
jno
jmp
movsl
jmp
sahf
mov
mov
mov
enter
mov
mov
pop
jle
lea
pushf
pop
call
add
add
add
insl
mov
cltd
inc
call
xor
js
mov
push
jb
stos
mov
mov
push
sti
call
adc
push
fcmovnbe
adc
push
dec
dec
andl
sbb
xlat
dec
mov
push
sbb
mov
cmpsl
mov
pop
inc
repnz
inc
xor
adc
push
mov
add
ljmp
add
lods
stos
mov
jo
push
mov
or
xor
mov
xor
jmp
push
test
std
mov
fcmovnbe
ljmp
sub
pop
scas
mov
add
push
lock
mov
or
pushf
sti
jbe
cmc
mov
cmp
hlt
add
add
add
test
cli
ss
mov
test
leave
sub
push
mov
push
xchg
add
push
push
outsb
or
cltd
sbb
pop
fs
add
arpl
mov
cmp
push
sub
pushf
sti
push
jle
xchg
push
push
inc
ja
fdivr
inc
movsl
pop
mov
xchg
shll
dec
push
add
add
add
fldt
call
pop
add
ds
pushl
loope
add
sbb
pop
ret
adc
lahf
mov
ljmp
pop
mov
pop
mov
in
stos
inc
sbbl
cmp
add
cmp
jmp
add
ss
adc
movsb
push
call
notl
mov
pop
add
and
add
add
pop
push
fisttpl
adc
add
mov
xchg
shr
xchg
pop
test
rcl
test
lods
push
xchg
int3
jecxz
mov
int3
adc
hlt
filds
aaa
sub
idivl
and
mov
pop
xor
cs
inc
sti
pop
test
call
push
adc
dec
dec
movsb
inc
jne
addb
out
adc
add
lds
jmp
add
pop
aaa
sub
sti
test
out
mov
cmc
adc
sbb
pop
inc
inc
push
sub
xchg
lods
sbb
lods
sbb
lret
sti
test
decb
test
insl
les
ds
add
pop
mov
cwtl
insb
mov
jmp
xor
add
add
dec
mov
mov
push
jmp
jg
psubsw
sub
cwtl
sti
inc
adc
mov
mov
mov
popf
push
adc
mov
jne
sbb
or
lods
test
push
test
mov
mov
mov
add
lods
fnstcw
pop
aaa
pop
stos
mov
insb
add
add
add
and
cli
jbe
shll
aas
call
gs
mov
add
pop
aas
ljmpw
adc
es
xchg
or
es
xor
add
mov
dec
jmp
movsb
gs
inc
call
mov
mov
call
pushf
add
jne
das
lock
cmp
add
add
notl
xchg
les
gs
mov
inc
jecxz
shr
pop
xlat
inc
inc
add
jmp
push
mov
or
les
dec
mov
mov
jmp
lret
cmovg
stos
mov
test
insb
push
xchg
jg
idiv
pop
les
fisubl
add
pop
jge
inc
dec
jp
int
add
add
cltd
xor
jb
or
insb
ljmp
push
mov
sub
aad
fisttps
hlt
test
inc
add
cmpsl
cmpsl
xchg
test
test
add
xchg
adcl
add
nop
or
push
imul
and
dec
or
dec
push
adc
push
or
mov
add
mov
add
inc
mov
add
loope
movsb
test
xchg
or
int3
push
sub
aad
push
adc
xor
bound
lret
or
mov
in
lcall
xor
pop
mov
in
mov
xchg
les
gs
filds
adc
add
add
xchg
repz
push
roll
dec
push
lret
mov
pop
in
test
sahf
adc
test
and
mov
shl
mov
jmp
pop
xchg
xor
push
inc
mov
lock
aam
push
bound
ret
out
lea
repnz
sub
arpl
icebp
insb
cmpsl
add
add
stos
sbb
add
add
add
jmp
inc
pushf
sti
gs
adc
push
add
sbb
mov
cmp
jmp
lods
mov
aam
sbb
add
xchg
inc
xor
xlat
sub
jl
cwtl
js
test
loop
jnp
lret
xchg
inc
cmp
jl
cwtl
pop
arpl
in
jnp
inc
cmp
int
inc
ja
lock
add
add
add
mov
in
mov
inc
push
fcoml
xchg
stc
out
cmp
testl
adc
and
pop
jl
cmp
addl
adc
rcrb
leave
sbb
jne
insb
xorb
aam
dec
shll
adc
pop
pop
enter
add
pop
stos
incl
mov
sbb
xor
aad
jecxz
hlt
xchg
inc
aaa
lahf
cmp
das
mov
sbb
mov
push
sub
inc
jo
call
xor
jp
jp
xchg
stos
movsb
pop
mov
push
xor
and
sub
je
inc
stc
lahf
mov
jmp
add
or
dec
mov
test
outsl
inc
jp
imul
adc
cmp
stos
outsb
push
adc
jmp
fwait
sbb
loop
push
adc
add
or
jnp
test
les
mov
pop
jp
pop
mov
inc
mov
pushf
inc
dec
xchg
scas
loope
lds
add
add
add
push
gs
in
mov
mov
inc
or
fstps
jmp
mov
add
test
xchg
sar
stos
xchg
mov
mov
and
sub
adcb
jge
add
push
dec
inc
mov
jp
jl
orb
faddl
add
add
sub
sbb
cmp
inc
push
push
test
push
add
flds
xor
aas
add
fsubrl
lea
test
notb
jp
je
jbe
and
or
divb
nop
stc
addr16
adc
and
dec
push
cmp
xchg
add
cltd
cmp
add
out
adc
or
jae
ja
test
sbb
xor
xor
push
testl
mov
testw
les
pop
push
push
push
mov
cmpsl
lea
jbe
inc
pop
push
enter
cmp
push
test
mov
mov
lcall
add
add
add
jns
xlat
push
out
lretw
popf
add
mov
or
shrl
inc
idivl
or
or
mov
adc
and
cs
jne
ja
pop
xor
out
sti
xchg
cmpsl
inc
and
mov
int
xor
xor
sahf
adc
push
pop
call
adc
xchg
add
cmpsl
iret
in
jns
stc
push
mov
mov
out
fildll
inc
pop
test
pop
sub
mov
xlat
push
fmuls
add
pop
push
inc
in
pop
cmp
outsb
das
inc
jmp
shll
jge
in
add
in
clc
jle
in
les
push
pop
inc
pop
stos
jae
add
popf
adc
add
add
add
rcrb
dec
int
inc
and
mov
adc
icebp
call
sbb
add
add
jmp
loope
add
test
and
jo
or
push
or
pop
pop
mov
adc
add
inc
push
std
mov
movsl
and
add
add
add
sti
iret
sti
sbb
mov
add
test
in
cwtl
in
adc
mov
jecxz
push
mov
testl
decl
cmp
das
add
or
es
add
add
movl
test
add
cmp
add
dec
jne
and
loope
adc
add
inc
add
sbb
ds
and
adc
testl
add
or
test
jp
fadd
test
push
sahf
jp
xlat
mov
push
xchg
mov
jnp
stos
arpl
call
loop
xor
in
push
pop
jmp
loop
roll
add
add
loope
push
mov
fnstsw
stc
inc
repnz
sti
int
sti
test
jp
in
cmp
inc
push
in
inc
mov
xor
adc
jno
loop
test
out
jge
popf
sub
mov
shr
jbe
xor
ja
xor
xchg
push
test
cld
clc
dec
add
add
add
jmp
jbe
sub
ss
sti
loopne
sbb
jmp
push
in
cmp
sub
xchg
add
jmp
jl
out
add
adc
add
aad
fildll
lcall
loop
jne
shl
dec
pop
pushf
dec
lds
mov
loope
jne
aad
add
add
add
stos
xchg
lret
mov
mov
cmp
int3
and
and
pop
pushf
inc
lds
mov
mov
add
add
inc
or
ret
push
add
or
pop
jns
dec
add
lcall
sbb
push
push
pop
iret
or
add
add
add
mov
add
mov
sbb
in
dec
pop
sbb
testl
aaa
scas
fwait
add
adc
push
out
push
or
iret
sub
pop
sub
dec
jno
pop
out
adc
add
or
or
add
jb
and
cmpsl
pop
call
cmp
inc
sar
inc
and
add
add
cmovns
lret
adc
xchg
and
cli
lcall
xor
and
orl
lcall
jae
cmp
push
ljmp
scas
movsb
jp
mov
adc
dec
push
mov
add
int3
lea
xchg
movsl
sti
jecxz
fildll
mov
add
add
sbb
jecxz
loopne
mov
mov
imul
fisttpl
cltd
mov
ucomiss
add
out
shr
cmp
rcrb
jmp
js
mov
pop
pop
shr
js
xor
jns
pusha
inc
cmp
cltd
xchg
jmp
sbb
adc
mov
std
add
add
add
adc
js
adc
sub
movsl
lret
decb
mov
ficoms
jmp
fwait
mov
jmp
lret
or
mov
mov
movsl
lds
add
stos
cwtl
xchg
jmp
subl
sti
ret
sbb
fiaddl
popf
cmpsl
xchg
bound
add
add
mov
sti
pop
inc
xchg
add
hlt
xchg
inc
cmc
xor
and
callw
adc
add
call
xchg
and
jne
push
repz
jns
mov
test
stc
imul
sti
jb
jno
jb
js
push
std
test
adc
cltd
add
push
call
int
unpckhps
add
add
add
dec
push
xor
js
rolb
sbb
testl
pop
add
add
mov
aaa
sbb
add
call
xor
nop
repz
add
pop
pop
rclb
repz
push
inc
push
mov
ss
cmp
call
jl
and
inc
mov
adc
add
rcl
incl
sahf
pop
push
cs
loope
add
push
mov
pop
cmp
aaa
sub
pop
nop
faddl
adc
push
add
test
test
dec
xchg
xor
jns
cmc
cmp
adc
sbb
pop
jmp
or
sub
adc
add
add
and
fnstsw
divl
pop
jle
xchg
adc
add
pop
adc
pop
aad
fsts
lret
es
push
test
test
jecxz
xchg
ficoml
xchg
icebp
in
or
out
sahf
cld
flds
xchg
sub
scas
xchg
aaa
insb
shr
test
add
add
and
fs
lret
test
sbb
loope
pop
pop
shll
fwait
jnp
and
in
cmp
or
add
jne
out
dec
add
gs
inc
jmp
pop
addl
je
ficompl
mov
mov
jb
jmp
in
faddl
push
int
mov
jecxz
push
in
je
add
add
add
cltd
pop
lds
dec
in
int
sub
aad
stc
in
pop
ljmp
push
cmp
xor
add
fcmove
and
push
jne
in
and
sub
mov
testb
add
je
jl
mov
jle
and
pop
dec
mov
bound
and
add
add
add
add
xor
je
push
mov
jno
test
sub
cmp
sbb
dec
je
cld
mov
add
dec
and
sbb
ss
or
sub
mov
flds
cmp
pop
mov
xor
dec
das
adcl
mov
cmp
out
push
idiv
adc
mov
sub
jnp
add
sti
add
add
add
add
pop
xchg
pusha
fndisi(8087
repz
add
pop
fwait
jne
imul
leave
das
sti
xor
inc
jp
das
lea
push
fsub
hlt
fcomps
add
pop
addr16
pop
inc
jle
rolb
mov
mov
int3
mov
sbb
sti
fldt
call
add
sar
add
add
sub
pop
and
out
pop
and
adc
cmp
lret
xchg
popf
add
aas
subb
xchg
and
loope
add
mov
negl
dec
in
inc
inc
pusha
push
jb
insl
adc
xchg
mov
adc
add
test
push
push
test
addl
jnp
je
adc
fiadds
add
add
popa
jmp
pushf
mov
call
pop
pop
adcb
pop
sbb
xor
loopne
pop
pop
nopl
in
sbb
frstor
icebp
dec
fcoml
in
add
sub
lds
js
lret
int
shrb
jl
mov
dec
pop
rclb
inc
loope
push
jne
pop
jmp
ret
pop
xchg
push
add
add
test
sti
sbb
xchg
sbb
gs
fdivr
fsubrl
inc
jmp
sbb
int3
xor
fsubl
lea
add
ret
mov
add
inc
pop
xchg
fadds
add
add
xor
aas
or
sbb
mov
adc
add
add
add
outsb
notb
pop
cmpsl
outsl
and
into
and
sbb
testl
aas
adc
cwtl
push
and
xchg
ret
call
pop
or
inc
xchg
cmp
test
test
fsubs
adc
mov
fadd
call
pop
or
mov
jo
loopne
add
add
or
mov
out
rcll
and
shl
cwtl
out
cmpsb
imul
lock
leave
test
adc
push
inc
outsb
cmc
mov
sti
test
push
cld
mov
xchg
cmp
mov
rcll
push
adc
fldt
mov
pop
jo
mov
inc
cmp
add
add
add
rol
test
adc
or
jmp
fs
adcl
xor
packuswb
or
js
call
push
push
cwtl
push
add
out
rclb
stc
sub
pop
xor
push
sub
nop
aas
ficoms
add
mov
sahf
inc
adc
adc
sub
add
add
add
fidivrl
adc
add
sub
xchg
push
mov
cmp
push
sbb
imul
xchg
cmp
xchg
add
pop
adc
inc
mov
cmp
dec
adc
addb
cmp
fldl
testb
adcb
test
add
jp
imul
xchg
out
push
add
pop
negl
shll
divb
mov
ja
negl
mov
jb
popaw
jbe
xchg
repnz
xchg
add
bound
jg
cmp
push
test
shlb
outsl
mov
mov
js
ret
adc
mov
add
lahf
mov
pop
test
fwait
sbb
sub
pop
je
scas
ret
xlat
outsl
pop
adc
je
daa
and
xchg
repnz
sahf
cmp
and
push
scas
ret
xlat
outsl
pop
test
ljmp
idivb
test
and
add
push
fmul
sub
popa
cmc
push
cli
sub
add
add
add
jnp
sbb
xchg
adcb
test
stos
aas
mov
xor
add
sub
add
and
add
fwait
sub
xchg
sub
mov
fidivrl
mov
push
test
inc
pop
test
pop
push
test
pop
dec
adc
add
cmp
addb
flds
adc
xchg
mov
add
add
dec
in
cmp
aas
cld
outsl
xor
jo
addb
jp
push
std
js
rorb
jl
sbbb
pop
inc
pop
xchg
mov
xor
jae
fwait
pop
add
std
mov
jns
push
jno
daa
cld
ficoml
mov
dec
bound
sar
or
mov
dec
pop
jp
in
or
sar
fldl
add
add
scas
mov
sti
jmp
inc
xor
sub
sub
movsl
subl
or
push
daa
adc
pop
or
xor
mov
xor
sub
jmp
push
xor
test
dec
adc
arpl
decl
xchg
adc
cmp
pop
push
sub
add
add
int3
jp
notb
iret
add
xor
and
xor
push
inc
xchg
add
ja
cmp
adc
add
jg
jnp
imul
loop
add
pop
imull
idiv
push
scas
movl
or
aaa
push
cmp
jne
movb
jmp
add
add
fcoms
add
push
cmp
push
test
hlt
or
pop
add
movl
push
mov
je
cli
push
and
test
jne
jecxz
aad
xor
mov
ret
je
out
inc
adc
incl
test
jg
icebp
out
aas
and
pop
mov
push
repz
inc
jmp
ss
mov
add
add
add
roll
pop
push
or
or
add
dec
add
loop
or
mov
pop
stos
xchg
inc
jb
test
jmp
pop
sbb
fisubrs
add
adc
stc
insb
out
icebp
shrl
mov
sbb
outsb
inc
outsb
mov
pop
insl
mov
xchg
scas
xchg
inc
add
or
add
add
add
pop
xchg
jecxz
loope
neg
flds
jp
loop
or
xchg
aaa
adc
add
sub
fmuls
enter
rol
mov
jge
add
aaa
or
ss
push
outsb
sahf
loope
loop
in
sub
call
jp
add
sub
shll
xchg
add
add
add
sub
add
pop
clc
jnp
xorb
pop
cmp
insl
dec
jnp
push
repz
adc
xor
es
inc
lds
jp
fs
add
xor
mov
daa
lea
fnsave
jno
sub
jl
sbb
add
jnp
and
rorb
jg
add
add
add
push
add
dec
push
and
out
or
call
add
push
mov
push
add
xchg
adc
pop
divl
or
or
push
and
leave
xor
push
test
ss
mov
and
test
sbb
out
or
ret
add
add
add
test
outsb
jp
hlt
stc
cmp
jg
mov
push
pop
adc
xchg
jae
xchg
fs
push
inc
jbe
jne
ja
push
add
je
repnz
adc
incl
out
repnz
sbb
or
cli
incl
add
inc
in
mov
add
inc
sbb
in
xlat
rolb
add
add
sbb
sbb
push
clc
test
push
inc
adc
push
xchg
aaa
fiaddl
xchg
adc
mov
inc
jp
sub
mov
dec
pop
outsl
inc
insl
sub
and
scas
lret
stc
push
mov
inc
jp
stos
sub
cmp
add
add
add
push
mov
mov
add
mov
cmp
push
repnz
xor
dec
stos
add
mov
and
std
repnz
push
hlt
mov
adc
lds
cli
scas
jmp
inc
jmp
push
lahf
das
pop
push
jmp
scas
sbb
nop
xor
jbe
add
add
cwtl
into
add
jecxz
mov
pop
mov
imul
push
mov
pop
adc
out
loope
add
pop
hlt
out
jp
jle
jecxz
data16
sub
out
stc
push
jmp
jae
xchg
push
test
sub
ret
adc
cmp
jbe
imul
ja
add
cli
dec
and
dec
fmuls
jnp
or
add
pop
repz
cmc
inc
or
clc
les
or
dec
divl
out
fdivrs
call
add
and
andb
xor
jne
pop
jp
add
das
test
test
adc
fldt
mov
jbe
dec
and
idiv
icebp
adc
pop
add
add
add
inc
mov
pop
jmp
add
push
jg
pusha
aaa
and
imul
cwtl
out
call
sbb
add
lds
cmp
adc
mov
testb
mov
idiv
cltd
sarl
xchg
push
repnz
into
lret
jbe
pop
xchg
rolb
adc
arpl
subb
enter
and
mov
cmp
xor
fisubrs
adc
and
jp
adc
loope
add
jnp
adc
and
aas
jmp
lcall
adc
jp
jmp
pushf
scas
sbb
add
mov
add
add
sbb
jmp
stc
pop
out
leave
into
hlt
and
ret
push
pushf
mov
add
shl
sbbb
gs
pop
adc
jle
jo
sbbb
add
insl
sti
out
mov
adc
in
sti
loop
or
xlat
nop
div
push
xchg
lret
imul
jmp
pop
in
pop
adc
add
mov
add
cmc
pop
cltd
add
mov
int3
loop
adc
negl
inc
ljmp
xchg
inc
xlat
imul
out
dec
fucom
nop
div
xchg
push
sbb
push
sbb
pushf
fldcw
add
out
add
add
mov
cld
inc
lcall
push
adc
movb
add
add
adc
call
ja
push
jp
push
ds
mov
cld
rcrb
xchg
adc
jns
or
push
xchg
idiv
inc
popf
daa
add
mov
or
rolb
jmp
xor
iret
cmp
imul
sbb
pop
shll
sbb
rolb
or
jmp
adc
xor
pop
jg
add
add
add
cmc
rcrl
cmp
pushf
fistl
pop
in
push
pop
js
notl
jb
gs
popa
aad
hlt
popa
jne
mulb
out
bound
sbb
lcall
mov
jp
cmp
or
xchg
idiv
shl
and
xchg
pop
divl
xor
or
cmp
lcall
push
inc
inc
jo
inc
add
add
add
sbb
xchg
addl
push
mov
mov
iret
daa
orb
ja
pop
jmp
mul
xchg
add
insl
xor
pusha
repz
shl
in
jl
xor
xor
xor
cld
insb
add
mull
xor
fistpl
jno
jp
add
add
add
push
outsb
xchg
popf
in
testl
sbb
out
push
lcall
ja
or
out
xor
dec
lds
jecxz
pop
adc
xchg
add
adc
sti
neg
arpl
jne
in
div
push
sbb
loop
in
scas
push
adc
sarb
or
call
add
js
mov
andb
test
addr16
scas
nop
adc
xchg
arpl
cmc
iret
xchg
inc
ficoms
sub
imul
xchg
lcall
push
test
and
cli
cmpb
testb
gs
ds
cmp
gs
dec
str
jns
mov
inc
add
add
add
jnp
imul
inc
mov
inc
je
xchg
call
je
xchg
call
jb
lods
ds
int
popa
push
mov
mov
jno
std
ljmp
dec
movb
ds
orb
adc
incl
inc
repnz
ljmp
or
add
arpl
addr16
rcrl
cmp
shll
cmp
rcrl
adc
movb
push
mov
add
xlat
imul
lea
dec
mov
subb
clc
adc
imul
cmp
js
or
lods
add
pop
adc
add
add
add
or
call
or
cmp
pop
in
xorl
or
sar
adc
pop
xchg
adc
push
mov
or
adc
mov
fs
pushf
jmp
insb
cmp
jmp
clc
scas
xchg
aam
xchg
sbb
out
dec
pushf
in
insb
and
jmp
clc
ds
sahf
enter
leave
add
add
add
addb
jmp
adc
insb
int3
clc
dec
add
inc
std
call
imul
sbb
jmp
mov
adc
int
add
pushf
jne
std
call
pop
adc
ja
adc
daa
daa
add
add
call
and
fisubs
xchg
xlat
je
add
add
add
lret
jg
adc
add
adc
imulb
dec
mov
pop
adc
daa
je
out
loop
adc
stc
add
pop
add
stc
pop
adc
fsubl
cmp
pop
and
and
sbb
cmp
add
subb
pop
test
sbb
add
in
btsl
push
add
add
add
xchg
lds
pop
nop
testl
mov
sub
push
inc
mov
fwait
inc
and
pop
inc
cmp
punpckhwd
mov
cli
arpl
add
add
pop
cmc
mov
inc
push
push
xchg
or
orl
push
pop
jo
xchg
pop
repz
repz
je
rorl
test
sldt
add
add
rorl
je
clc
jnp
repz
pop
sbb
lea
jmp
or
icebp
enter
ds
loopne
add
sub
and
outsl
jnp
mov
mov
xchg
ja
ret
inc
mov
dec
test
and
xchg
adc
mov
outsb
into
insb
xchg
mov
les
mov
add
pop
adc
jge
gs
mov
imul
jg
nop
dec
int3
mov
pop
adc
pop
sub
sub
data16
int3
out
aaa
call
xlat
mov
andb
add
or
loop
or
jmp
jle
int3
out
pop
mov
mov
add
push
mov
push
popa
push
sub
out
and
aad
sbb
punpcklwd
and
sbb
add
sbbl
pop
or
sub
clc
addr16
sub
fdiv
addr16
fs
push
cmp
push
adc
or
daa
and
daa
loop
or
testb
add
add
pop
or
call
mov
rclb
sub
push
add
ljmp
mov
cld
or
addl
notb
sysret
mov
xchg
mov
dec
dec
sti
sub
test
push
dec
std
inc
add
add
add
icebp
ljmp
out
test
ds
jg
jbe
xchg
aaa
jecxz
and
add
add
inc
clc
in
inc
psadbw
stc
outsb
cmp
jg
sti
call
sub
jg
jne
ja
into
cmc
enter
lds
jmp
sub
add
cltd
jns
jmp
add
adc
or
fidivl
inc
ss
hlt
mov
inc
xorb
jl
sbb
push
add
shl
cld
daa
adc
add
add
popa
cmc
and
mov
xchg
rcrl
bnd
jl
pop
jmp
scas
ja
pop
inc
mov
xchg
loopne
mov
add
andl
fimuls
adc
fisttpl
sti
sbb
lods
jp
push
outsl
rolb
loop
or
bnd
popa
repnz
es
aad
call
jnp
xchg
xor
add
pop
xchg
lahf
or
mov
push
jno
popa
stos
ret
nop
mov
popa
jb
sbb
pop
rclb
inc
ljmp
fwait
daa
ds
jb
imul
xor
dec
add
jge
ljmp
fsub
push
inc
call
mov
jmp
fdivl
mov
add
add
add
enter
or
sti
fcmovne
and
frstor
bound
aam
cmpsb
inc
push
inc
jmp
push
pushf
xor
xchg
jge
test
lahf
pop
sti
addb
data16
aam
push
inc
call
adc
insl
test
ds
pop
insb
mov
xor
jb
cmp
cmp
add
add
ficoms
jecxz
rclb
add
xchg
or
scas
push
push
mov
add
and
jo
sub
cwtl
aas
add
lcall
add
add
sub
and
sahf
int3
repz
xchg
repz
and
add
cmp
dec
and
sarl
psubq
idiv
and
jae
add
add
add
shll
shr
loop
neg
pop
bswap
mov
incl
mov
idiv
pop
repz
or
cmp
inc
pop
cwtl
inc
inc
pop
push
shll
aaa
ljmp
fisubl
jo
jmp
mov
xor
cld
pop
sbb
mov
inc
adcb
sahf
cld
or
add
add
add
xchg
loop
adc
mov
xchg
push
adc
jecxz
jns
and
fisubl
push
push
ja
gs
ljmp
xchg
or
sbb
loopne
mov
in
lea
adc
lret
fs
add
imul
cmc
pop
imul
dec
or
add
stc
sbb
enter
inc
cmp
incl
cmpsl
pop
fstl
add
push
inc
jns
jo
sbb
jo
push
push
imul
adc
insb
je
pop
ja
push
movb
push
dec
dec
inc
push
jno
arpl
outsl
push
pop
add
adc
fs
pop
sti
es
lahf
inc
jmp
iret
add
fsubrl
xchg
inc
leave
jae
adc
add
add
mov
imul
sti
imul
sti
imul
sti
imul
mov
out
add
cmp
adc
xchg
jnp
pop
adc
sbbl
lret
adc
jmp
fs
sti
data16
decl
pop
sti
push
lds
je
sub
add
fs
or
cwtl
jecxz
dec
add
add
add
xchg
or
adc
rclb
pop
cmpl
or
dec
out
lcall
fildl
xchg
or
into
pop
aad
push
nop
shlb
add
jecxz
or
or
out
push
fidivrl
decl
xchg
shr
inc
in
idiv
dec
push
pop
and
push
inc
add
inc
and
push
call
sqrtps
addl
add
out
test
add
pop
jae
rol
mov
ret
sub
in
jne
ficomps
add
sub
out
xor
fdivs
out
adcb
pop
or
aas
lcall
mov
in
jmp
or
dec
add
loop
cltd
lahf
dec
sti
incb
add
add
cltd
push
pop
aaa
sbb
sbb
jno
dec
push
arpl
xchg
jmp
test
mov
push
gs
je
push
hlt
add
ss
pushw
push
pop
fidivrl
bound
je
shl
cmpb
or
or
push
cli
jae
shl
cmp
data16
jae
xchg
cld
add
add
add
push
push
dec
icebp
int
xor
test
push
dec
pop
aaa
or
dec
pop
dec
fldlg2
int3
and
imul
les
in
loopne
xor
cmp
adc
mov
xchg
sub
icebp
dec
in
dec
inc
call
int
xorb
or
pop
les
cs
add
add
lea
lods
pop
xchg
dec
nop
push
int
nop
ret
ret
and
sar
out
je
imul
add
cmpsl
add
ss
lds
ficompl
movsl
sub
xchg
jbe
add
loopne
repz
jecxz
data16
jmp
mov
add
add
pop
pop
or
mov
add
addb
xchg
or
mov
add
adc
inc
cmp
imul
mov
mov
add
adc
inc
cmp
mov
mov
add
adc
or
fdivrl
popl
loop
mov
cli
and
dec
dec
push
and
adc
jmp
xlat
cmp
or
pop
xchg
add
add
add
pop
push
rclb
jns
pop
add
pop
hlt
cmp
or
test
les
and
aas
inc
in
inc
or
jg
sti
push
in
sti
cs
or
mov
cmp
lds
jp
incl
cmpsb
sbb
lret
sti
in
sbb
fs
popa
repnz
cmp
lcall
out
sbb
pop
in
cli
loope
and
push
push
rcll
and
add
subl
daa
add
int3
es
int3
es
int3
es
int3
es
int3
es
int3
es
iret
es
iret
cmpsb
add
into
cmpsb
add
iret
cmpsb
add
into
cmpsb
add
leave
cmpsb
add
cmpsb
add
enter
enter
enter
enter
add
add
das
enter
enter
enter
enter
enter
enter
enter
es
es
ljmp
pop
aaa
dec
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
stos
pop
and
stos
pop
xor
pop
pop
inc
stos
pop
in
stos
pop
sbb
add
add
add
inc
stos
pop
loope
stos
pop
enter
in
stos
pop
outsl
dec
stos
pop
bound
pop
sahf
inc
stos
pop
test
push
stos
pop
call
push
sub
inc
sub
dec
sub
inc
sub
inc
add
or
lods
dec
test
sbb
push
dec
jne
orl
dec
inc
or
mov
add
xor
or
sbbl
mov
scas
dec
push
cmp
pop
nop
jecxz
orl
add
inc
outsb
xor
shrl
jnp
shrl
enter
jmp
fidivrs
ret
negb
mov
push
sbb
nop
stc
call
sub
mov
aas
bound
les
inc
add
add
add
icebp
pop
pop
repz
insl
stos
inc
repnz
jb
testl
sub
sub
and
push
js
or
das
sahf
mov
xor
out
jp
je
js
xlat
movsb
and
jne
cld
jle
push
js
fists
sbb
jae
adc
sub
lahf
outsb
je
out
adc
add
add
push
add
dec
mov
or
insl
ja
push
adc
push
fdivp
jno
test
rclb
jmp
es
pop
inc
fucomp
mov
push
leave
cld
stc
and
mov
push
addl
iret
add
push
movsl
daa
jp
loope
push
int
add
jns
lret
jp
and
push
rorl
add
mov
jno
mov
pop
push
xor
dec
push
popf
daa
outsb
add
imul
sti
out
jae
out
jp
jb
insb
push
add
jbe
mov
jmp
ljmp
pop
fistps
adc
cmpsb
bound
jb
push
and
sub
in
cli
xchg
out
mov
pop
and
push
movsb
mov
adc
or
mov
add
add
add
in
loope
adc
mov
inc
bnd
dec
or
std
or
dec
sti
adc
clc
call
nop
int3
add
push
inc
or
sarb
or
mov
mov
add
decl
jae
jns
outsl
adc
arpl
xor
add
sbb
ja
out
fcomps
loopne
add
add
icebp
xchg
rolb
pop
enter
sub
aaa
lock
mov
dec
divb
addb
inc
pop
or
add
pop
lret
pop
push
inc
iret
rol
adc
mov
inc
add
adc
notl
test
lret
adc
sti
outsb
mov
push
ret
cmp
pop
cmpb
adc
lock
bound
pop
aam
add
jns
push
add
enter
pop
jg
insb
sar
add
aas
jl
xor
pushf
xor
xchg
push
repz
sub
lock
cmc
pop
or
test
incl
jp
push
fiaddl
push
sti
stos
outsb
jl
adc
xchg
and
out
add
call
add
or
jle
iret
loopne
pushaw
notb
cmp
cwtl
and
and
and
and
and
popf
aad
add
sahf
sub
aad
testl
lcall
sahf
lds
jbe
cmc
lock
cmc
hlt
jp
cmc
cld
pop
xchg
sub
adc
flds
add
add
add
cmp
pop
mov
call
sbb
lcall
pop
or
out
adc
xchg
in
mov
loopne
adc
push
jo
pshuflw
call
and
lock
cmp
mov
adc
insb
xor
mov
adc
ds
pop
arpl
xchg
int
sbb
call
add
cmp
ret
ja
dec
pushf
dec
jmp
pop
call
bound
mov
repz
push
push
adc
sub
dec
and
pop
lods
aas
pop
outsl
jno
notl
gs
iret
inc
aas
enter
push
push
add
add
dec
mov
sbb
xor
or
ret
push
add
add
add
add
mov
and
push
adc
pop
or
nop
les
fidivs
mov
pop
dec
shl
sbb
sub
call
pop
daa
inc
mov
xor
out
mov
fmull
movsb
lret
mov
xchg
cli
adc
std
lcall
leave
paddusw
fisubrs
call
add
add
mov
jbe,pt
and
cs
mov
and
xor
and
hlt
out
adc
paddsw
inc
inc
iretw
mov
pop
jmp
outsl
and
lock
and
pop
aam
cmp
mov
adc
fdivrs
pop
mov
into
adc
jge
fcoml
jmp
pop
add
add
add
jmp
mov
outsb
adc
jbe
cmc
movsb
pop
loopne
jmp
sbb
shr
fs
dec
jns
cwtl
dec
and
cwtl
cmp
and
cwtl
dec
and
cmp
pop
adc
sbb
jmp
jmp
add
aad
out
sar
adc
pusha
jns
dec
bound
pop
je
add
add
sbb
pop
insb
and
cmp
aad
popf
xchg
inc
sub
lods
dec
sub
loope
aas
mov
mov
jae
pop
xchg
rclb
sbb
shll
and
cmpsb
in
inc
cmp
outsl
jmp
fldcw
je
mov
cmp
xor
jmp
add
add
add
push
fs
in
aas
cmp
fsubl
add
add
test
imul
pop
fwait
inc
jns
push
mov
and
mov
gs
pop
pop
dec
xlat
mov
test
jmp
xorb
inc
sub
je
xchg
jmp
mov
push
push
fisubl
lods
outsl
notl
shrb
pop
imul
inc
push
pop
push
add
mov
xchg
outsl
adc
shrb
fstpl
cli
imul
pop
xchg
dec
adc
jns
mov
cmp
cli
stos
dec
xchg
pop
cmp
cli
adc
test
pop
cmp
cli
stos
push
sub
or
jmp
stc
sarb
xor
add
add
psrlq
push
ret
lds
jmp
xor
das
sahf
or
push
das
push
cwtl
and
cmp
jmp
cmc
daa
push
mov
lahf
add
inc
jne
adc
or
test
fidivs
jp
push
adc
add
mov
ret
mov
mov
int
sub
mov
add
add
fwait
mov
in
clc
pop
pop
adc
pusha
jae
cld
ret
adc
sarb
add
add
jae
loope
push
add
cmpsl
add
dec
push
fcmovnu
or
daa
cmp
xor
je
jge
sbb
ljmp
jo
repnz
xchg
ljmp
xchg
xchg
mov
sbb
add
push
sbb
int
aad
or
jmp
mov
mov
testb
das
aas
fcomps
add
int3
and
fiaddl
jmp
in
dec
adc
leave
icebp
adc
inc
cwtl
sti
push
out
jnp
mov
mov
shll
sti
fsubrp
int3
and
or
mov
push
stc
sub
add
mov
shlb
je
mov
out
pop
jbe
or
cld
aad
dec
xchg
add
adc
mov
mov
mov
call
mov
in
pop
call
mov
mov
cmp
mov
dec
and
negb
push
push
mov
add
add
push
push
mov
in
xchg
mov
sub
pop
add
pop
push
bound
pop
cmp
add
xchg
rol
aad
pop
push
xlat
hlt
das
mov
push
inc
jbe
mov
sbb
jge
xchg
adc
fildl
or
je
lea
push
ret
pop
xlat
movsb
dec
mov
add
add
stos
add
jge
rol
notb
add
add
add
decl
in
jmp
adc
inc
dec
xor
and
and
jmp
ljmp
cmp
push
jl
add
dec
cmc
xchg
inc
insb
mov
decb
add
add
add
aam
insb
sub
call
pop
out
adc
add
push
in
xchg
fcompl
outsb
stos
inc
fmull
or
test
in
mov
add
pop
fmull
pop
adc
pop
fistl
add
out
pop
cli
cmp
mov
cwtl
push
in
pshufw
add
add
cmp
lahf
xchg
add
ss
cmp
addl
mov
outsb
mov
cmc
push
fstl
push
push
stos
pop
fcoml
dec
push
test
loopne
je
dec
out
int3
mov
inc
cmpsl
dec
cli
outsb
push
pop
mov
pop
faddl
add
push
leave
aaa
add
mov
sti
dec
sarb
adc
add
add
ja
divl
out
inc
mov
sti
xor
pusha
dec
mov
cmp
pop
adc
pop
xor
xchg
sbb
lds
add
mov
push
add
gs
loope
and
add
jmp
inc
cmp
cli
andl
fistl
add
sti
mov
add
add
pop
repnz
movsl
mov
or
ljmp
fistpll
dec
add
sub
shl
mov
inc
push
hlt
mov
push
lock
xchg
add
sub
pop
sub
or
push
add
call
shrl
jmp
loope
fistpl
mov
inc
hlt
incl
add
add
xor
cmp
dec
lods
ret
cltd
scas
push
lods
fwait
push
adc
add
iret
mov
notl
aas
add
loope
int3
lods
sub
aam
sub
jnp
mov
adc
adc
inc
es
adc
cmpsb
test
adc
mov
addb
add
mov
pop
adc
or
add
add
add
pop
mov
ret
push
jle
ljmp
lcall
mov
xor
stos
movsb
mov
dec
aad
ret
sbb
cmc
loopne
and
pop
adc
jo
repz
pusha
push
repz
push
stc
mov
test
pop
sar
popa
jns
adc
daa
fs
pop
loope
pop
mov
adc
jae
add
add
loope
pop
sbb
aad
sbb
or
cmc
or
pop
adc
inc
aad
sti
bound
pop
sub
das
sbb
pop
lcall
data16
sbb
hlt
xor
inc
jmp
push
push
out
testb
ret
sbb
adc
add
mov
sbb
push
jmp
notl
add
shlb
add
dec
jmp
adc
mov
sti
mov
lods
cltd
mov
daa
adc
pop
cmp
lock
ret
outsl
cmp
pop
inc
xchg
adc
gs
sti
mov
out
je
mov
call
fmull
xor
lret
jae
lods
shl
push
pop
add
iret
or
add
xchg
sbb
push
xchg
add
add
ss
call
aad
insb
out
push
pop
in
mov
lea
push
xlat
xor
add
xlat
aam
mov
pop
loope
or
dec
lret
and
in
call
imul
aas
pop
scas
push
test
sub
out
push
mov
push
testl
sbb
add
add
add
adc
push
push
lods
test
mov
mov
imul
ds
sbb
mov
jmp
mov
mov
nop
dec
loope
mov
lock
add
push
jo
jae
into
or
cmp
and
mov
push
add
in
add
mov
mov
cmc
sarb
add
add
test
sub
das
cmp
sti
dec
shr
mov
xchg
shrb
cli
and
roll
pinsrw
inc
xlat
sbb
mov
jb
push
mov
loopne
push
je
adc
add
adc
ficoms
imul
cli
mov
cmpsb
jl
jmp
add
xor
mov
xchg
pop
cmc
add
add
add
cmp
ss
les
mov
add
rolb
push
mov
or
aam
and
ficoms
push
push
add
push
ss
add
divl
mov
push
xor
add
in
or
xchg
sbb
sub
adc
or
sub
mov
add
fisubrl
divb
add
add
testl
sti
push
dec
mov
push
rcrb
notl
cmp
pop
mov
or
add
test
ja
fisubrs
mov
adc
jne
ficoms
cmpsl
dec
sti
addb
jae
ja
ja
xor
lcall
jae
ret
push
data16
dec
adc
xor
ljmp
add
add
sahf
mov
sbb
ds
adc
sub
std
mov
stc
cli
mov
jne
jnp
push
data16
pop
sbb
call
jge
push
inc
pop
add
pop
movsb
notl
aas
sbb
sarl
push
jle
aas
pop
mov
and
dec
test
sub
push
sub
fiaddl
adc
ss
ljmp
add
add
add
pop
cmp
xchg
outsb
shr
mov
or
pop
adc
mov
in
xlat
jge
pop
clc
in
and
xchg
adc
add
shr
push
mov
pop
xor
sbb
rolb
loop
push
inc
das
jl
or
push
push
or
push
xlat
fstpl
icebp
jp
icebp
dec
cld
mov
lods
aas
mov
add
add
add
subb
gs
add
bound
mov
andl
inc
cmc
aam
mov
outsl
xor
cli
std
jns
cli
cmc
xor
push
mov
mov
lods
stc
sbb
cmp
and
fildl
cmp
insb
inc
mov
aam
sbb
fstps
add
add
add
adc
stos
ljmp
arpl
jmp
ss
add
out
add
add
adc
movsl
push
sti
mov
fdivrs
add
loopne
test
pop
or
aaa
adc
mov
mov
adc
mov
lea
and
sbb
add
add
int
inc
cmp
jmp
add
or
aaa
push
mov
jne
lea
add
incl
cmp
mov
cltd
add
add
pop
push
sbb
add
adc
addr16
je
sti
dec
push
idivl
sub
sub
or
jg
pushf
dec
xchg
mov
data16
add
add
pushf
pop
mov
sub
jle
add
outsl
shlb
pop
sub
dec
ljmp
out
jl
add
cmpsb
mov
sub
push
xchg
addr16
and
push
push
or
jle
ss
cli
adc
insl
pop
sub
insl
adc
pop
cmp
data16
jmp
jl
add
add
push
int
pop
nop
jnp
add
cmp
fstpt
mov
sbbl
adc
sbb
notb
push
shll
imul
inc
dec
cmp
fs
push
mov
pop
adc
pop
mov
fldl
shlb
outsl
shr
andb
add
add
add
add
xor
bound
punpckldq
andl
adc
loope
int
pusha
fwait
add
cmc
out
mov
and
mov
inc
mov
cmp
inc
cmp
mov
inc
mov
cmp
inc
xchg
clc
mov
add
add
mov
mov
add
add
jno
leave
xchg
loop
inc
loope
add
and
call
test
imul
sldt
ja
xor
xchg
add
andb
xchg
pop
out
dec
filds
xor
push
push
arpl
mov
add
add
add
add
add
or
ret
mov
jecxz
jg
mov
xchg
dec
cld
inc
fdivl
repz
inc
sbb
jmp
jmp
std
decl
xor
or
adc
push
sub
dec
outsb
mov
out
scas
push
out
aaa
aas
inc
popf
mov
movsl
mov
dec
orl
jnp
jbe
nop
add
add
add
pop
jl
fsubrl
pop
dec
aad
mov
lea
sbb
mov
xor
icebp
cmp
mov
pop
mov
jp,pt
push
lahf
inc
push
cmp
or
jle
and
jo
cmp
add
hlt
pop
arpl
scas
gs
push
sti
add
out
test
loop
icebp
add
add
aad
in
add
add
add
sar
pop
pop
cmpsb
pop
movsb
dec
jg
cmc
fdivrs
pop
mov
add
daa
out
push
sub
mov
jno
idivb
fiaddl
pop
push
mov
add
xchg
jmp
aad
adc
sti
jmp
cmp
dec
out
push
adc
outsl
pop
frstor
stc
push
add
add
add
xchg
add
mov
in
push
add
or
cld
and
mov
push
push
sbb
xchg
fnstsw
jmp
adc
scas
mov
jmp
pop
adc
cmpsl
add
std
sbb
inc
jnp
push
out
out
push
push
mov
aaa
dec
jbe
aas
jmp
dec
mov
lea
sti
add
add
add
cwtl
int
popa
pop
adc
or
ljmp
js
pop
jle
imulb
inc
cmp
dec
enter
adc
push
mov
push
lods
add
gs
adc
lds
xor
idiv
js
fdivs
mov
jg
push
adc
popa
scas
rcrb
outsb
roll
add
add
add
pop
or
aaa
xchg
ret
or
add
and
sbb
pop
sbb
test
push
ret
mov
cmp
cli
push
sub
aas
pop
mov
lcall
mov
cmp
ljmp
movsl
mov
inc
jp
scas
cli
push
test
aas
pop
mov
jl
cmp
jnp
adc
jbe
cmp
push
inc
in
add
add
ret
repz
jo
ds
pop
sub
ja
loopne
mov
and
shl
loop
outsl
add
lcall
lret
sbb
jl
cmc
idivb
cmc
cmc
jg
cmpsl
ret
cmpsl
movb
xchg
adc
add
adc
mov
push
mov
inc
push
xchg
jl
cmc
jg
movsl
and
add
add
add
cmc
fs
adc
mov
sbb
pusha
mov
cmp
sub
enter
jl
cmc
enter
negb
xchg
and
jnp
cmc
pop
int3
mov
inc
dec
add
fstpl
cmc
test
sub
dec
pop
push
dec
adc
adc
and
pop
sub
imul
add
add
sbb
into
inc
adc
popa
xchg
sarb
aam
add
dec
push
pop
test
lods
push
adc
jmp
fildll
sbbb
jb
hlt
scas
jmp
ds
ljmp
out
pop
jmp
aad
and
and
rorl
jnp
inc
sub
aas
inc
add
add
add
push
pop
dec
test
jae
mov
or
or
adc
push
pop
and
and
add
and
inc
xlat
aad
insb
mov
test
jae
mov
mov
inc
pop
cmp
test
sub
add
push
decl
test
sti
mov
add
add
add
cmp
addl
popl
pop
cmp
jp
inc
pop
pop
faddl
sub
jnp
inc
je
or
addr16
aaa
decl
js
dec
roll
push
inc
rorb
inc
sti
push
pop
out
shll
push
cmp
in
sbb
cmp
aaa
cmp
or
test
add
add
add
mov
or
shl
sbb
enter
mov
sbb
or
sbb
sub
movsl
int3
adc
push
popf
xlat
lods
xor
cmc
out
sub
out
mov
test
fdivrs
inc
dec
inc
cmc
mov
xchg
inc
push
lods
fadd
loope
adc
in
add
sahf
shll
inc
add
add
add
stc
ret
mov
adc
inc
adc
mov
icebp
jmp
inc
imul
call
add
dec
adc
sub
cmpsl
dec
sar
call
pop
sbb
aaa
mov
ljmp
adc
fmuls
jne
divb
nop
inc
lds
sub
aas
loop
add
add
add
add
push
in
mov
mov
mov
mov
cli
cld
jns
inc
jmp
repz
mov
jo
sti
jb
in
scas
jmp
mov
adc
pop
adc
jno
adc
pop
nop
dec
add
inc
cwtl
push
and
jecxz,pt
lods
shl
jmp
jmp
or
test
jb
test
arpl
add
push
incl
add
add
adc
cmovo
xchg
insb
and
jne
mov
sub
test
addb
sti
push
xlat
rcll
adc
test
pop
pushl
insb
hlt
decb
sbb
divb
push
pushl
dec
notb
cmp
shl
push
push
dec
cmp
shl
ja
xor
push
cmp
add
mov
add
xchg
in
mov
xchg
in
test
xlat
mov
inc
jae
mov
push
or
add
ss
cmp
call
cmp
dec
push
xor
mov
pushl
mov
mov
fstl
fildll
add
add
pop
mov
mov
test
dec
mov
adc
add
call
lods
mov
out
pop
xchg
in
out
cmpsb
push
ss
test
pop
xchg
icebp
add
psllq
jecxz
popa
sti
or
cmp
sarl
movsl
loopne
fs
shr
fiadds
mov
adc
add
add
mov
jge
mov
inc
push
into
sbb
nop
mov
bnd
ljmp
pop
popf
push
out
pop
xchg
testb
xchg
pop
sbb
sub
mov
push
int
sub
ror
scas
push
mov
pusha
shll
pop
movntq
std
jo
and
aam
push
xchg
jb
cli
jbe
int3
and
add
add
add
call
shll
ljmp
popf
pop
fisubrs
rorl
lock
pop
inc
fcmovnu
pushf
pop
aaa
popf
add
pusha
pop
adc
jmp
pop
sbb
outsl
test
add
or
inc
inc
nop
jl
push
or
dec
lcall
cmp
ljmp
cmovo
xlat
sbb
and
and
add
test
loopne
push
mov
imul
dec
or
into
pop
verr
imul
add
xor
inc
push
ret
addl
inc
and
and
jmp
or
pop
or
dec
jmp
add
pop
loop
add
inc
je
call
aas
mov
dec
xor
ljmp
add
add
inc
and
call
loop
xchg
popl
pop
cmp
jae
mov
and
or
cld
aaa
decl
out
jle
or
dec
jmp
pop
mov
add
mov
cmpl
lret
imul
js
xchg
popf
lret
mov
call
test
sub
cwtl
jmp
add
pop
xchg
stos
in
mov
jl
gs
jne
loop
jge
fmuls
jmp
aad
push
rcl
pop
xchg
rorl
out
mov
add
in
add
cmpsb
int3
cmp
imulb
pop
adc
stc
mov
int
add
scas
aam
repnz
sbbl
and
mov
add
add
xchg
mov
jmp
mov
sti
jae
adc
jmp
hlt
gs
or
cmp
test
aam
call
cmp
sub
pop
jne
sub
add
sub
cmpsl
aaa
pop
add
cs
in
push
sbb
jmp
outsl
cwtl
stc
daa
add
add
add
xchg
mov
pop
adc
pop
loope
sub
adc
movsl
sbb
scas
jns
and
sbb
add
lea
or
adc
mov
inc
addb
rolb
fimull
inc
aam
test
adc
pop
adc
pusha
pop
sbb
insl
sti
push
pop
inc
lcall
mov
mov
mov
add
add
imul
mov
fdiv
mov
sbb
inc
adc
lea
pop
mov
pop
cmp
jne
push
jecxz
das
adc
lea
adc
push
test
xchg
sub
inc
fidivrl
jnp
insb
adc
test
add
pop
pop
addb
mov
add
add
and
xchg
aas
sbb
push
sub
pop
sub
lcall
lcall
jns
dec
dec
in
xchg
sub
inc
jp
mov
fdivrs
je
xor
pop
leave
sahf
aaa
test
sbb
cli
xchg
cmp
gs
pop
scas
cmp
sbb
iret
add
push
fwait
or
add
add
sbb
ds
daa
mov
sub
fwait
sbb
mov
mov
mov
gs
pop
add
ljmp
push
push
or
loopne
add
aaa
fistl
mov
jge
test
jmp
add
adc
aam
dec
jo
jp
jmp
loopne
adc
add
xchg
lds
add
add
add
xchg
lock
dec
movsl
inc
jb
xchg
dec
in
sbb
pop
xchg
dec
fldcw
adc
out
cmp
and
sbb
jb
sub
xor
cmc
cli
cmpsb
mov
cmpsb
sbb
aas
add
xor
jp
insb
and
mov
sti
aam
call
push
adc
jb
hlt
jg
pop
adc
push
add
add
add
pop
aas
in
push
bound
mov
add
cmp
mov
pop
add
dec
roll
call
test
insb
or
aaa
pop
inc
add
iret
out
fdiv
roll
add
dec
add
lret
mov
jecxz
ror
bound
stc
loop
je
dec
sti
mov
inc
push
ret
add
add
add
mov
sbbl
push
push
nop
imul
std
in
or
mov
mov
notb
lods
in
negb
jnp
pop
sub
or
in
lea
fstpt
sar
or
notrack
sub
decl
push
sti
cs
aad
sbb
jg
rep
inc
add
add
add
cmp
test
sti
mov
lcall
iret
mov
xor
js
mov
xor
pop
scas
ret
dec
stos
pop
inc
les
push
mov
xor
sbb
cmp
mov
shlb
pop
scas
jge
jle
loop
std
add
or
or
or
mov
mov
add
add
mov
fnstenv
mov
sbb
jge
xor
ljmp
pop
out
les
addr16
add
das
mov
cmc
aam
or
adc
arpl
mov
sbb
mov
leave
pop
shrl
sar
addr16
ret
cmc
je
push
test
add
add
add
mov
sbb
push
or
push
cmc
mov
stc
add
mov
cmpsb
lods
imul
adc
jmp
gs
pushl
sbb
in
adc
jmp
cltd
lock
sbb
mov
and
les
xchg
int3
and
sbb
popf
dec
inc
add
add
add
inc
add
cmp
or
scas
inc
idivl
cmpb
add
addb
push
adc
int3
cmp
idiv
incl
mov
xchg
cmp
jbe
nop
inc
sbb
nop
inc
add
xchg
ds
loop
dec
mov
sti
xorb
pop
xchg
lret
adc
add
inc
pop
pop
inc
sbb
push
add
add
add
cmp
fcmovnbe
mov
add
xchg
clc
jne
xchg
lret
enter
das
js
in
inc
add
call
add
sahf
sub
int3
jge
pop
das
sbb
je
ljmp
sbb
out
in
out
xchg
xor
fisubrl
sub
lds
dec
jge
test
sti
decl
pop
idivl
add
add
add
sub
pop
dec
fbstp
test
out
sbb
fnsave
pop
je
xchg
xor
hlt
xor
je
cmp
cli
push
jo
inc
pop
adc
pop
mov
cld
ror
out
movsb
or
rclb
or
outsb
mov
popa
stos
lahf
ud1
xchg
in
push
adc
in
mov
in
xchg
sahf
jns
add
add
add
adc
adc
lock
or
push
inc
mov
sbb
fwait
dec
xor
mov
sti
dec
pop
pusha
rcrb
movaps
sbb
or
fsubs
rcrb
mov
add
mov
push
jo
sbb
inc
jmp
lcall
icebp
pop
adc
pop
add
add
add
into
sti
sbb
notl
movsb
cmp
ljmp
je
push
push
add
mov
popf
add
sbb
fcmovnb
xlat
aam
in
iret
pop
movntq
js
cmp
stos
popf
mov
test
cmp
sbb
mov
push
adc
mov
jge
jne
and
add
add
add
loop
adc
or
add
dec
decl
cmovo
mov
jne
pop
mov
in
mov
idiv
sub
push
pop
dec
mov
in
je
or
dec
notl
push
sub
dec
cmpsb
stc
push
pop
xrelease
in
adc
cmp
je
dec
cmp
push
nop
inc
clc
xlat
nop
inc
hlt
add
add
add
nop
dec
cld
dec
add
push
fdiv
sub
and
xor
scas
mov
in
int3
enter
push
or
sub
jp
js
dec
aad
adc
arpl
xor
mov
xor
push
pop
sti
imul
inc
pop
lahf
inc
pop
mov
scas
pop
push
lea
dec
push
add
add
add
push
add
jg
das
mov
lret
nopl
add
push
sub
mov
adc
xchg
pushf
or
jae
fld
sbb
cmpsl
cld
scas
ss
push
int
sub
mov
ret
pop
mov
add
test
xor
dec
xchg
sub
add
mov
fildl
or
sahf
adc
pop
cmp
or
imul
sub
mov
fistpl
mov
ljmp
cs
in
pop
xchg
pop
mov
arpl
popf
adc
jns
xchg
add
pop
inc
jmp
das
fisubrs
adc
add
add
add
ret
outsb
push
and
cmp
in
xchg
cmp
lds
mov
pop
fs
cwtl
clc
and
xchg
sbb
fs
xor
or
cltd
inc
add
pusha
das
and
mov
ror
rolb
adc
push
popf
and
xor
insb
and
mov
mov
add
add
add
gs
push
jmp
addb
shl
cmc
jp
std
ret
push
psllw
ret
mov
icebp
or
dec
cmpb
mov
int
inc
and
push
push
add
sub
int
rcr
cmc
imul
test
lds
pop
cli
jle
pop
push
lret
add
add
cwtl
jecxz
mov
mov
mov
cli
jle
pop
and
xchg
fsubp
gs
les
or
add
mov
sti
out
xchg
add
mov
repnz
stos
pop
sbb
xchg
insl
sar
adc
pop
inc
cld
ret
fwait
jae
sar
ret
cltd
insb
pop
and
mov
jp,pt
sbb
in
add
add
add
inc
add
jnp
dec
rcll
cmc
fildll
fs
fmuls
inc
fidivrs
jmp
imul
lods
fistps
fidivs
xor
mov
push
adc
ficompl
adc
jl
inc
sti
lcallw
xchg
icebp
scas
popa
push
aam
push
push
jmp
push
jbe
sub
adc
add
add
sub
rolb
add
add
pop
adc
sub
xor
ja
xor
xchg
sub
test
popa
lcall
push
stc
inc
test
sti
push
adc
push
je
lahf
pop
adc
pop
or
pop
mov
movsl
or
xchg
sbb
rclb
xor
jmp
add
orb
or
jmp
add
add
add
out
sbb
pop
repnz
int3
push
cmp
xchg
call
jmp
push
mov
sbb
int
ljmp
push
xor
mov
add
adc
test
xor
mov
orl
popf
incl
mov
add
rcrl
shl
jp
add
adc
ret
pop
mov
add
add
hlt
add
mov
and
and
push
pop
mov
and
mov
and
and
push
pop
mov
add
daa
or
add
push
pop
mov
mov
sbb
and
push
loope
pop
out
inc
xlat
or
mov
or
pop
mov
inc
loope
out
inc
bound
add
add
out
push
or
mov
pop
or
inc
loope
incl
out
or
icebp
mov
xchg
push
or
lahf
cmp
or
out
inc
xlat
mov
test
add
mov
xor
ss
sti
xlat
divl
pop
shlb
cli
cmp
jbe
pop
jg
daa
ss
shll
adc
add
add
add
outsb
inc
movsb
insb
cs
ret
sbb
int
add
add
adc
add
and
push
push
adc
pop
xchg
and
or
mov
jmp
fistps
mov
loopne
inc
aaa
or
jns
imul
pop
arpl
or
adc
std
lock
add
push
repnz
lret
add
pop
in
and
into
insl
mov
add
test
divb
cmp
fiadds
jecxz
pop
xchg
cmp
cmp
stos
sub
cld
jmp
sub
add
or
adc
insb
popf
mov
bound
push
test
add
sub
sti
jmp
jp
push
xchg
lcall
cwtl
lods
jae
xchg
xchg
pushf
push
lds
add
add
mov
pushf
and
test
fucom
jne
or
jb
mov
push
or
sti
jmp
sbb
and
adc
xor
pop
adc
cmp
orb
call
adc
adc
mov
notl
add
dec
imul
lahf
pop
idiv
xor
pop
add
add
add
or
clc
mov
add
rclb
test
sub
lahf
cmc
ljmp
lock
fcomi
push
call
in
pop
push
pop
lret
les
push
add
add
cwtl
fcoms
movsb
popf
xor
inc
push
fdivrp
sub
adc
rorl
mov
testb
add
dec
jmp
adc
push
add
decl
mov
imul
pop
add
add
sub
clc
mov
ret
inc
add
add
dec
adc
and
rep
fs
and
ret
lahf
pop
das
sahf
mov
inc
adc
sub
fldt
mov
and
sub
or
lea
ja
add
add
add
gs
push
roll
pop
adc
pop
lcall
gs
pop
dec
xor
and
fisttpll
nop
cmpsl
add
in
adc
pop
adc
and
lea
adc
mov
mov
cmp
dec
mov
popa
or
repnz
mov
nop
daa
add
add
add
push
in
inc
ljmp
cmp
or
jmp
lds
cmp
sbb
aas
jge
aad
into
cli
adc
pop
push
in
loop
adc
pusha
adc
sbb
or
jmp
lds
aad
inc
outsb
or
mov
xor
and
fadd
ljmp
add
sti
mov
inc
cmpl
push
call
arpl
cld
addl
jnp
inc
xchg
inc
add
pop
add
imul
clc
jmp
xchg
jnp
jnp
je
popf
adc
dec
ljmp
inc
decl
fsts
inc
pop
nop
ret
or
fstps
adc
dec
push
insb
call
pop
add
add
add
push
cmpl
or
leave
sub
adc
enter
xor
call
mov
in
psubq
add
int
clc
loopne
or
push
add
pop
ja
sti
pop
outsl
pop
test
out
mov
loope
sti
inc
dec
sbb
fidivrl
push
add
add
imull
incl
add
add
sahf
jge
call
jmp
and
out
lods
sbb
loop
xchg
imul
jp
das
in
or
das
jge
sti
mov
sbb
mov
ja
repz
push
sbb
cmpsl
lods
mov
ds
cli
adc
and
ret
jns
sub
dec
xchg
mov
nop
adc
xacquire
jle
push
roll
add
add
push
aad
mov
negl
shll
jl
rorl
data16
sbb
xchg
add
xchg
mov
bound
mov
sub
ja
sbb
sbb
or
roll
cmp
jmp
pop
movsb
add
popf
or
inc
adc
stc
xlat
push
add
pop
jno
test
add
jmp
bound
jge
adc
stc
negb
mov
cs
push
jge
in
or
xchg
loopne
jae
xor
dec
jns
jmp
or
cs
push
adc
fwait
jmp
iret
out
or
inc
push
add
add
add
push
jne
pop
sti
add
adc
testl
out
int
incl
fildl
adc
ret
adc
or
cmp
cmc
mov
add
pushl
jp
enter
jmp
sbb
ror
add
mov
add
add
adc
mov
dec
push
jo
inc
cld
ja
jne
cmp
notl
sub
test
pop
fsubp
xchg
push
mov
jecxz
nop
sbb
lahf
lods
decl
mov
aas
pop
imul
stc
mov
jbe
stos
cli
popa
mov
dec
mov
xlat
cmp
pop
jecxz
jg
jb
push
mov
mov
scas
mov
add
add
lcall
or
sub
push
jno
and
mov
ja
sub
imul
or
call
andl
mov
mov
add
das
inc
push
adcb
call
add
pop
inc
lahf
call
daa
mov
push
js
jno
jmp
lods
xor
jmp
add
push
insb
inc
shll
pop
mov
mov
push
or
sbb
fadd
sbb
nop
cmp
pop
outsb
jo
mov
xchg
lea
mov
inc
push
and
nop
jge
add
stos
pop
outsb
pop
stos
mov
jg
sarb
pop
jmp
pop
or
add
add
add
out
xchg
out
loope
add
sbb
xlat
lock
push
arpl
jbe
loop
test
fnstenv
push
cmp
loope
lods
test
fcom
inc
xchg
mov
rorl
mov
mov
xor
push
jb
xchg
int3
addl
ret
movl
sarb
add
cmc
mov
add
inc
sbb
ljmp
push
or
pop
mov
fisttpll
mov
popl
mov
pusha
mov
fisttpll
jmp
stos
adc
add
or
sbb
xchg
xor
adc
orb
sub
je
mov
dec
push
adc
adc
inc
adc
rolb
add
add
je
insb
rcrl
add
pop
outsl
inc
call
loop
decb
xchg
pushf
push
call
int
mov
inc
insb
sbb
add
cmp
inc
pop
fwait
adc
flds
inc
pop
bound
mov
sahf
inc
pop
cmp
popf
push
xchg
mov
iret
add
add
add
daa
sub
pop
rorb
adc
jae
inc
nop
push
jmp
rcrl
mov
xchg
int
cmp
loopne
cs
dec
insb
push
jmp
push
mov
sub
sub
hlt
or
ret
mov
std
sub
xor
popa
adc
mov
fwait
sti
imul
sarl
push
jmp
add
dec
xor
sub
sahf
adc
ret
dec
xchg
sub
lcall
sub
js
popf
adc
aas
addl
xchg
imul
push
push
loope
test
incb
xchg
pop
adc
xchg
push
xor
jmp
mov
pop
inc
jmp
add
add
add
and
dec
and
cli
popf
cli
stos
call
test
inc
add
scas
dec
push
mov
popf
cli
subl
fldcw
mov
or
push
lahf
repnz
jnp
xor
ja
lock
test
cmp
push
pop
jp
add
add
testl
cmp
add
add
add
nop
ret
or
and
mov
mov
or
adc
mov
or
add
xchg
and
inc
mov
lea
or
adc
addb
or
mov
call
lcall
je
xchg
adc
ljmp
add
mov
js
enter
mov
inc
inc
sarl
pop
jge
lcall
in
inc
cmp
dec
inc
lret
out
push
fidivs
push
sub
and
lock
push
in
lcall
sbb
sti
sub
inc
ljmp
dec
adc
or
fsubrl
add
add
push
setle
jns
xor
mov
inc
bound
xor
xor
mov
pop
sbb
pop
dec
add
push
mov
cmp
pop
adc
sbb
push
adc
add
adc
mov
sub
shl
xchg
adc
add
pop
stos
adc
lea
adc
sub
add
add
fcoml
pop
adc
mov
dec
int
dec
dec
int
test
popa
fwait
adc
fadd
inc
mov
sub
dec
xchg
idiv
cli
jo
xor
insb
mov
outsl
add
and
orl
aam
and
loopne
jae
pusha
dec
and
or
int3
xchg
shl
jmp
add
xchg
add
cli
insl
jnp
ljmp
cli
gs
mov
add
pop
pop
pushf
mov
in
and
fucomi
imull
jne
call
fmuls
stc
or
mov
pushl
ret
fisttpll
sbb
mov
push
sbb
adc
add
call
adc
test
dec
or
pop
std
cli
je
add
add
add
add
adc
inc
or
add
pushl
xchg
inc
popf
adc
push
cltd
add
popf
test
stc
jns
jne
aaa
xor
lea
dec
decl
jbe
and
xchg
cmp
adc
add
pushl
push
cmp
and
add
add
jge
and
ljmp
stos
cmp
dec
idivb
stc
addr16
and
stos
xchg
add
sbb
pop
ljmp
sar
dec
adc
ljmp
mov
call
or
aam
mov
adc
loop
daa
bound
sub
scas
push
jno
jp
add
add
add
adc
mov
mov
cmp
popa
xchg
and
sbb
pop
cmp
addr16
adc
mov
jmp
insl
testb
scas
aaa
pop
pop
sub
iret
in
add
je
mov
insb
inc
sub
incl
jo
ret
add
add
add
out
push
push
flds
fs
js
cmp
sbb
jmp
es
je
jne
call
scas
pushf
roll
popf
jge
cmp
mov
pop
push
testl
loopne
je
das
mov
jecxz
je
call
ljmp
ljmp
mov
bound
add
stos
pop
adc
jle
in
in
inc
push
push
daa
clc
gs
pop
jmp
subl
cmp
add
or
call
add
adc
mov
call
ret
dec
je
movsb
push
jecxz
add
jns
subl
push
call
subl
or
add
add
jp
adc
hlt
dec
idiv
mov
idiv
dec
mov
in
mov
add
lea
mov
add
lret
dec
add
hlt
dec
cmp
mov
ret
orl
adc
or
into
call
push
inc
bound
add
jmp
jae
idivl
mov
cmp
sbb
xchg
add
adc
ret
decl
sub
add
in
mov
bound
je
inc
pusha
hlt
cli
out
arpl
and
shlb
cmp
jb
lcall
aas
popf
icebp
test
add
movsb
in
cli
andl
call
fildll
jle
test
arpl
add
add
testb
outsb
cmp
loopne
or
lods
fisttps
bnd
adc
add
imul
push
xchg
push
add
adc
sub
sarb
sbb
dec
ljmp
sub
sarl
or
xor
add
int3
shlb
push
int
test
sbb
dec
mov
cmp
je
add
add
add
xchg
lock
pushl
insb
and
pop
add
cli
ret
jmp
test
aam
or
stc
cmpl
cs
in
xor
push
push
add
push
jmp
adc
lods
sbb
push
insb
jmp
xor
lods
push
add
mov
cli
fdivp
out
mov
dec
call
out
roll
add
add
add
ret
mov
stc
stos
pop
push
ljmp
popf
out
jge
lret
faddl
add
stc
mov
add
mov
scas
cli
mov
into
xor
repnz
sub
rcrl
and
bound
cmp
push
sub
inc
and
and
jmp
sub
mov
mov
add
add
notl
cmpb
mov
call
mov
insl
adc
ficompl
adc
cmp
repnz
add
call
negl
mov
inc
push
aad
pushf
ljmp
sti
mov
loopne
pop
mov
fs
arpl
call
aad
test
or
ljmp
add
jg
pop
xchg
xchg
dec
sbbb
sti
pop
insb
testb
fidivrs
jbe
push
pop
adc
mov
or
testb
fidivrs
add
pop
adc
mov
adc
rcl
cwtl
mov
push
ficoms
xchg
insl
cwtl
in
adc
xchg
sub
stos
fdiv
add
add
add
adc
xchg
test
cld
pop
and
pop
adc
popf
push
fldenv
popf
sub
jmp
add
push
cmp
jae
clc
jo
es
cwtl
mov
sbb
loop
fmul
sub
in
leave
jp
std
and
icebp
xchg
scas
push
in
cmp
pop
push
shll
add
add
adc
inc
loope
mov
adc
mov
imul
mov
es
shr
loop
imul
arpl
repz
lret
pop
call
inc
jmp
pusha
gs
add
arpl
gs
pusha
mov
jae
inc
std
loope
pop
xchg
rorl
xchg
jmp
add
add
add
push
bound
mov
stc
roll
jb
testl
dec
bound
scas
push
add
arpl
call
out
call
or
call
adc
push
leave
xor
fldenv
nop
repnz
test
addl
push
js
push
or
push
ret
add
add
push
push
mov
mov
add
mov
sub
or
cmp
xor
or
or
inc
cld
xchg
shrb
iret
cli
push
int3
add
mov
pop
sub
adc
les
sbb
push
xor
imul
outsb
jne
je
pop
mov
inc
mov
mov
add
add
add
das
pop
adc
out
mov
jmp
repnz
shl
add
mov
inc
adc
ja
test
lret
scas
out
daa
add
cli
stos
lret
xchg
mov
push
dec
push
pop
in
add
int3
pop
add
cld
in
push
add
cmp
add
pop
loope
xor
pop
stc
push
mov
add
call
cld
sbb
push
fnstsw
es
icebp
mov
adc
paddb
add
adc
jns
call
fadds
stos
pushf
adc
loope
cmp
adc
jle
out
add
mov
js
pushf
jmp
xchg
adc
sarl
add
or
push
ret
je
add
add
add
mov
aas
inc
mov
xchg
daa
nop
xor
aas
dec
add
pop
pop
sbb
sub
and
and
push
adc
push
cmp
sbb
pop
in
je
pop
pop
or
out
sti
pop
mov
cmp
adc
mov
mov
adc
pusha
imul
add
ja
jnp
lret
imul
das
out
inc
add
testb
sbb
divl
adc
mov
call
push
mov
cli
mov
jne
adc
cmp
outsb
pop
sub
or
aas
sub
add
mov
cltd
dec
ja
jecxz
mov
stc
decb
adc
pop
ret
add
add
add
cli
xchg
out
mov
adc
andb
sti
stos
faddl
dec
dec
roll
xchg
in
pushl
int3
out
and
cmc
cmc
dec
out
mov
adc
jae
call
addb
jmp
jae
clc
sub
call
mov
faddl
dec
dec
roll
adc
pushl
add
add
out
mov
dec
out
aas
jb
jno
or
repz
roll
test
adc
mov
xchg
inc
add
adc
mov
in
ja
adc
fs
lods
pop
fwait
mov
cli
adc
std
add
mov
cmp
pop
stc
lods
mov
in
les
ret
loopne
push
adc
jp
les
add
add
dec
pop
loopne
pop
pop
in
sahf
push
jle
mov
lds
psubb
sub
sub
cmpsl
or
outsb
lock
cmp
inc
dec
inc
lods
add
mov
js
in
jb
add
popf
adc
insb
dec
pusha
sbb
mov
dec
adc
cmpsb
sbb
jl
call
add
adc
out
add
add
xchg
sti
push
dec
inc
out
lock
adc
adc
push
call
mov
hlt
gs
inc
jmp
mov
call
adc
pop
mov
mov
in
sbb
icebp
test
push
inc
pop
call
roll
mov
xchg
xor
call
mov
outsb
and
add
add
pop
push
notl
mov
into
outsb
or
decl
or
push
inc
jecxz
sbb
or
mov
dec
mov
ss
inc
test
or
add
add
xor
cli
pop
adc
adc
dec
scas
pop
add
or
xchg
sub
mov
inc
mov
add
pop
clc
push
xchg
xchg
stos
inc
add
scas
stc
push
sbb
dec
popf
or
lret
loopne
mov
adc
aam
adc
std
and
pop
pop
sbb
push
in
push
xchg
pop
inc
pop
shlb
ret
dec
mov
or
push
and
push
in
out
stos
lcall
and
xor
xor
call
add
std
cli
or
leave
outsl
add
pop
clc
or
pop
adc
loop
push
and
pop
loop
mov
dec
xchg
mov
jmp
insl
repz
xchg
sub
inc
int
jecxz
xchg
pop
mov
adc
add
out
lahf
adc
jmp
ss
push
mov
add
add
add
in
or
pop
adc
jmp
pop
sbb
xchg
or
cltd
xor
adc
jo
cltd
adc
add
dec
add
fcoms
rclb
das
sub
clc
add
dec
out
xor
inc
sub
mov
cld
movsl
cmp
jmp
xor
xchg
mov
and
pop
push
jmp
add
std
std
das
cmp
mov
cmp
jmp
hlt
xchg
mov
in
add
fistpl
pop
or
pop
adc
mov
dec
cmp
xor
jb
not
mov
fisubrl
test
insl
adc
adc
rcrl
lock
mov
push
pop
scas
adc
jb
add
add
add
and
adc
dec
xchg
push
add
jne
lods
mov
test
lret
sti
dec
cmp
adc
pop
xchg
mov
push
les
call
and
rorb
adc
xorl
in
ret
scas
add
cmc
jne
repnz
adc
sub
xchg
add
add
push
imul
jg
call
adc
pop
or
adc
or
push
in
jbe
lcall
cli
inc
movsl
or
xor
not
aad
jp
xchg
jecxz
je
arpl
push
imul
dec
add
mov
cwtl
push
ret
and
sub
cli
test
rcrl
divl
add
add
imul
mov
icebp
clc
movsb
fs
adc
outsb
enter
push
pop
adc
lea
adc
cmp
icebp
test
fldl
jbe
inc
clc
rolb
mov
xor
mov
jle
data16
stos
or
scas
jmp
lcall
adc
add
add
add
mov
xor
xlat
mov
pop
gs
jmp
aaa
mov
push
pushf
adc
cmpsb
and
jmp
pushf
xlat
inc
add
adc
pop
sub
jae
neg
mov
imul
fdivs
or
test
out
adc
sub
push
push
in
adc
inc
out
add
repnz
add
add
add
xchg
inc
mov
movsl
gs
sub
inc
push
out
adc
cli
insb
sbb
repnz
dec
inc
push
jmp
mov
lock
add
imul
and
cmp
push
filds
sbb
cmp
icebp
in
sbb
add
add
mov
pop
xor
add
bound
inc
and
jmp
lcall
dec
push
or
push
push
call
xchg
cli
incl
mov
pop
ret
dec
call
mov
hlt
addr16
out
fldt
push
ret
pop
fcompl
xchg
jg
ss
add
add
in
lcall
mov
push
aad
in
adc
icebp
and
push
add
ljmp
popa
outsl
mov
push
in
mov
xor
xor
cmpsl
out
xor
sbb
lcall
outsl
call
push
in
push
xchg
addr16
pop
pop
dec
jg
mov
je
xchg
shlb
call
add
add
add
punpcklbw
into
test
add
push
mov
adc
ds
flds
push
jmp
adcb
jmp
sbb
dec
adc
jle
adc
jle
arpl
xor
cmp
dec
fxam
fists
outsb
ds
inc
fwait
dec
loope
in
cmp
xchg
add
loop
or
add
add
ljmp
adc
bound
nop
push
jo
sub
leave
shll
into
pop
mov
jp
ret
push
stc
rcrb
jmp
jbe
mov
inc
add
movsl
jmp
sub
std
or
fsubp
mov
call
pop
shr
adc
fwait
add
add
add
ds
adc
mov
adc
stos
add
pusha
cmpsb
sub
cli
add
mov
incl
add
test
add
pop
pop
lea
cmp
lret
add
mov
orl
insl
or
pop
pop
ljmp
call
test
pop
subl
cmp
jecxz
add
add
add
sub
jae
add
mov
inc
divl
mov
jle
or
sbb
jo
dec
and
mov
cmpxchg
idiv
inc
js
pop
jmp
dec
add
push
pop
add
mov
in
mov
ret
sbb
ret
out
cmc
jl
sub
add
add
adc
lret
dec
jecxz
and
pusha
adc
aas
pop
add
cltd
jg
add
ss
decl
push
icebp
icebp
and
std
xchg
mov
inc
bound
adc
xchg
adc
xchg
movsl
divb
ret
lret
loopne
push
mov
xor
fwait
cli
sub
data16
pop
pop
out
mov
sbb
adc
pop
adc
dec
add
add
add
pop
pop
adc
stc
sbb
push
pop
rol
sbb
les
jmp
inc
push
into
ljmp
aas
xchg
lock
js
pop
adc
jle
xor
enter
inc
pop
aaa
es
test
inc
add
or
outsb
aas
cmp
popa
adc
add
add
pop
adc
or
cmp
lret
std
out
test
cli
gs
dec
adc
inc
ds
push
xchg
push
test
sti
bound
sub
and
inc
rolb
repz
ret
jmp
fcom
ljmp
add
xchg
push
ret
jmp
adc
out
pop
sub
aad
pop
sbb
xchg
incl
mov
add
jle
jno
jg
adc
sub
in
add
inc
mov
icebp
lahf
stc
pushl
fidivrs
and
or
loop
shl
cmc
mov
inc
mov
icebp
jl
or
add
testl
or
or
int3
mov
mov
push
push
pop
clc
cmpl
jae
add
add
sbbl
cld
ja
mov
mov
sti
aas
add
out
fdivrp
clc
push
jmp
add
dec
nop
arpl
pop
call
push
sti
scas
in
xchg
ss
outsl
add
mov
push
sbb
sub
inc
push
faddl
out
ljmp
outsl
add
xchg
mov
test
add
add
sahf
xor
mov
lock
xchg
mov
js
movq
or
dec
lock
loopne
push
lcall
dec
mov
inc
in
mov
or
insb
adc
call
test
in
push
xchg
dec
pop
mov
inc
pop
or
adc
shll
adc
pop
mov
add
int3
dec
lds
flds
cltd
push
cmc
aas
roll
sub
loop
mov
pop
pop
cmp
push
push
mov
push
mov
loope
lods
cmp
add
lret
rolb
jmp
push
sub
sarb
fdivs
int
mov
mov
jbe
icebp
aad
lcall
add
add
add
inc
and
xor
add
filds
dec
cmc
punpckldq
sti
cltd
cmc
xchg
jnp
dec
xchg
cli
jge
cwtl
add
xor
cli
cmp
mov
test
cs
daa
sbb
and
xlat
mov
mov
mov
add
add
mov
cmc
je
dec
push
dec
mov
dec
mov
ret
add
and
dec
add
data16
rcrl
pop
push
or
aam
dec
push
jo
and
jl
sub
adc
lea
adc
add
sar
add
adc
add
push
mov
rolb
cmc
test
aas
xor
imul
mov
add
or
push
lea
push
push
jno
jbe
push
mov
ja
pop
hlt
les
out
mov
xor
ja
fsin
faddl
out
mov
push
push
sbb
in
mov
ds
sub
std
incl
add
add
mov
cmpsb
add
shr
jg
push
sbb
jae
enter
call
or
add
sub
push
xlat
in
sti
cmpl
jmp
pop
cs
in
cmpl
xor
fidivrl
sbb
test
ljmp
add
add
adc
pop
push
push
fmul
sub
pop
push
pop
hlt
lods
cmp
dec
fisubrs
ffree
push
add
mov
xchg
enter
xchg
enter
clc
popa
mov
inc
jnp
adc
pop
fwait
xchg
inc
add
adc
xchg
loop
cli
sbb
sti
hlt
jmp
add
pop
divps
fsubl
add
add
loop
or
sbb
jo
sub
sbb
add
mov
je
jb
pop
sub
cli
mov
pusha
sti
cld
loope
inc
jmp
scas
sahf
inc
jmp
fnstenv
mov
dec
idiv
xchg
out
fs
inc
or
and
hlt
test
inc
jmp
clc
push
add
dec
mov
pop
xor
fdivs
xchg
shl
xor
add
add
add
cmc
jne
pop
notl
cld
les
leave
jb
sub
fcompl
shll
mov
pop
dec
push
test
dec
push
pop
adc
sub
pop
leave
push
mov
mov
aad
cmp
mov
sub
sbb
pushl
dec
call
jmp
mov
dec
pop
cs
sbb
add
add
add
mov
add
push
fndisi(8087
sbbl
repz
xor
jecxz
es
ds
jne
scas
pop
popl
cs
cli
inc
pop
adc
sub
aad
dec
sti
jae
adc
aas
out
test
je
pop
mov
push
push
insl
es
or
incb
lcall
ret
or
pop
mov
add
add
mov
xor
imull
or
insl
pop
lcall
cmp
push
inc
andb
mov
jmp
icebp
loop
sbb
lret
sub
loope
pop
pusha
inc
sub
inc
negb
aam
std
incl
loop
sub
psllq
cmp
mov
dec
xchg
adc
ret
ficoml
push
scas
bound
add
add
add
aad
xor
xor
lods
push
dec
mov
xchg
dec
fld
mov
inc
pop
xchg
sbb
dec
xorl
mov
call
incb
xchg
test
or
or
mov
out
pop
push
aaa
scas
cmp
mov
jnp
enter
add
cmp
jae
inc
sbb
add
add
cmp
out
jb
mov
daa
xchg
dec
loop
xchg
jno
enter
xchg
push
push
push
push
dec
cmc
jmp
cmp
lcall
in
shrl
mov
faddp
or
das
jmp
pusha
cmp
mov
add
xchg
pusha
cmp
insl
sbb
add
add
add
mov
shll
add
xchg
pop
scas
incb
mov
lcall
jnp
ljmp
mov
insb
pop
mov
sub
ret
mov
adc
pop
scas
xor
lods
fdivl
sti
aam
cmpb
pusha
add
testb
and
gs
mov
mov
add
add
hlt
nop
ja
adc
dec
shll
mov
adc
dec
jp
out
stos
into
fldl
iret
xor
jae
xor
aad
mov
lahf
sbb
fldcw
inc
leave
pop
add
incb
lds
cli
fldl
fsubp
inc
mov
dec
mov
lock
and
mov
add
add
mov
push
or
jg
adc
add
in
lret
cld
or
xlat
cmp
mov
lcall
pop
adc
mov
pop
xchg
test
imul
or
les
or
pop
xor
or
inc
cld
pop
fsts
cmp
inc
cld
pop
mov
sbb
imul
sahf
add
add
add
jmp
loopne
lea
pop
stos
mov
push
lcall
scas
lds
loope
xor
or
aam
mov
jb
in
sbb
inc
cmp
bound
out
mov
in
sbb
stos
sbb
mov
push
sub
push
xchg
and
out
add
add
add
lret
xchg
lret
sub
inc
int
push
push
aaa
daa
mov
mov
mov
mov
outsb
inc
fldl2t
pop
adc
sti
push
sbb
push
jp
sub
mov
incl
pop
add
jecxz
jecxz
adcl
lea
nop
icebp
daa
arpl
cmp
pop
sbb
mov
and
je
add
add
jge
or
or
rcrb
pushl
ljmp
push
shrb
or
jmp
push
dec
orb
pushl
dec
xor
push
lods
xor
push
or
pushl
adc
ficomps
mov
cli
push
das
jecxz
pop
push
dec
sub
mov
cmc
mov
into
add
add
add
bnd
cmc
sbb
xchg
aas
dec
and
aas
add
push
mov
push
in
lea
jmp
mov
push
hlt
xchg
push
cld
xchg
hlt
fnsave
out
das
les
dec
aaa
pop
pushf
sar
add
push
adc
gs
nop
test
mov
or
adc
xor
push
add
add
add
sub
sbb
sub
sub
add
pusha
aaa
inc
and
loopne
mov
add
adc
xchg
pop
sub
ret
sbbl
inc
ljmp
or
pop
pop
mov
mov
scas
adc
add
jmp
fdivrl
flds
loope
insl
mov
add
add
add
mov
and
and
and
dec
add
fsubs
gs
sarl
lea
jp
repz
data16
add
les
movsl
inc
in
xchg
inc
cmc
ss
ret
pop
mov
rclb
xchg
adc
add
or
out
es
cli
gs
cmp
xor
add
add
add
add
rolb
mov
add
mov
sub
sti
stc
inc
int
aas
ret
dec
and
aas
imul
mov
addl
and
mov
daa
mov
mov
mov
nop
jp
outsb
sbb
sub
cmc
push
push
js
in
push
mov
add
add
jecxz
sub
rcr
jns
mov
cld
mov
cwtl
mov
and
dec
push
jns
mov
roll
and
out
add
out
pop
and
pop
sub
add
pop
and
pop
in
jl
mov
shlb
and
and
xor
notl
in
mov
add
add
add
mov
std
push
inc
add
add
mov
xlat
adc
fstpt
add
and
add
lock
data16
inc
dec
sti
test
xor
jb
mov
pop
add
sti
jb
sub
dec
adc
dec
sub
cmp
mov
push
sbb
xor
jbe
outsb
out
jmp
in
push
add
add
add
fbstp
inc
adc
cmc
cmc
add
aaa
pusha
ljmp
in
push
fldenv
cld
dec
sub
cmp
add
mov
mov
popa
aad
loopne
int
mov
add
out
mov
mov
jg
inc
idivb
inc
loope
cltd
mov
call
add
adc
insb
add
add
add
call
cmp
pop
and
das
xchg
jae
dec
aas
leave
xchg
je
push
je
shll
or
test
imul
aam
imul
insl
call
and
xchg
or
imul
mov
push
and
xchg
jecxz
cli
shlb
jl
sbb
enter
inc
push
add
add
add
push
sbb
xchg
push
lods
or
add
ds
mov
repz
sarl
test
or
shlb
and
add
cmc
or
push
pusha
mov
mov
cmp
je
xchg
ret
dec
sub
pushf
push
test
sarb
cmp
stos
mov
adc
add
add
add
dec
adc
cs
cmc
jo
adc
rclb
jns
mov
jnp
mov
cs
pop
dec
test
shlb
lcall
scas
or
jb
aad
cwtl
push
rcl
push
decb
push
and
aas
push
jp
daa
int3
cli
inc
jmp
and
test
push
mov
sub
push
imul
aas
pop
daa
rorb
add
add
and
lds
leave
addb
add
fdivr
jae
sub
dec
ds
aas
pop
pop
cli
cs
mov
pop
xor
out
push
aad
sbb
jecxz
push
add
sar
mov
adc
xlat
push
fildl
nop
movsb
pop
rcll
sub
jne,pn
insl
repnz
mov
add
and
call
or
pop
push
jmp
adc
or
icebp
outsb
out
mov
xlat
and
inc
outsb
popa
dec
push
push
mov
mov
xor
mov
add
in
loopne
sub
pop
inc
rorb
xor
adc
in
and
adcb
insb
push
cmc
pop
cmp
add
add
mov
and
out
xchg
stos
xchg
xlat
push
mov
into
lock
hlt
call
or
xchg
stos
mov
enter
add
adc
jmp
movsl
mov
push
push
jp
jb
popa
jg
xor
push
inc
cltd
or
jge
adc
js
dec
cld
adc
adc
add
gs
inc
add
decl
mov
or
adc
or
or
rclb
stc
add
cmc
jne
in
notb
in
fldl
add
out
jg
pushl
mov
test
adc
inc
add
sbb
inc
pop
mov
add
xchg
jecxz
add
mov
dec
push
test
negb
adc
pop
data16
cmp
cwtl
cs
imul
and
mov
sti
frstor
xchg
add
rorl
ficompl
mov
out
daa
sub
iret
cli
popa
les
or
sbb
mov
jnp
add
add
add
mov
jmp
in
daa
xor
jl
dec
inc
inc
sbb
test
adc
or
xacquire
rcll
cs
jmp
mov
jge
in
cld
jle
or
repnz
pop
cld
jp
sub
mov
or
mov
aaa
stc
push
mov
mov
add
sbb
jnp
add
add
or
mov
add
in
adc
out
push
repnz
lds
in
push
add
rcrb
rcll
sti
inc
pop
push
fwait
aas
inc
and
shlb
fildl
mov
arpl
jae
pop
push
sbb
pop
lea
lods
mov
pop
imul
arpl
out
add
add
fsub
cli
out
popl
push
inc
cmp
pop
mov
scas
mov
jg
orb
loopne
mov
or
cli
cmpsb
push
sub
out
loop
sti
xchg
das
popl
push
pop
sbb
pop
mov
jg
mov
and
xchg
idivl
lods
movsb
bound
fcomps
sti
dec
das
out
add
cmp
mov
sub
add
add
add
pop
adc
arpl
test
sbb
pop
pop
inc
leave
es
cmp
push
cmp
fnstcw
sbb
push
or
mov
inc
xchg
fidivl
sub
sbb
std
notb
xchg
and
hlt
int
sub
jmp
loope
mov
cmp
and
ss
adc
mov
xchg
call
add
mov
in
das
add
jne
cs
ja
cli
stc
imul
dec
js
call
mov
fstpt
mov
add
cmp
add
xor
inc
add
mov
lahf
xchg
add
test
les
arpl
xchg
cld
in
add
dec
xchg
pop
dec
lods
imul
add
add
jp
aas
pop
xor
pop
xor
clc
out
lret
pop
sti
mov
adc
xor
mov
push
pusha
push
test
mov
jecxz
mov
dec
and
fadds
fcmovnbe
jle
sbbb
add
clc
push
sahf
mov
sub
jmp
add
add
add
and
jnp
cmp
sub
mov
push
jmp
add
adc
fsubr
mov
lcall
jecxz
mov
or
add
repnz
es
jmp
psllq
sbb
sub
pusha
inc
movsl
mov
fcompl
xchg
mov
jmp
aas
dec
add
add
add
add
lret
jle
shlb
fwait
xchg
mov
jmp
scas
sub
je
mov
add
sbb
xor
adc
pop
xor
call
fidivrl
int
in
jmpw
adc
dec
repnz
inc
leave
push
jp
cli
mov
push
add
sbb
mov
in
add
add
add
or
add
aaa
jl
leave
cld
cmp
fisubrs
leave
les
adc
dec
add
cmp
mov
les
aad
mov
sub
dec
mov
add
jmp
mov
loop
js
add
mov
notb
add
idivl
out
inc
pop
xchg
ss
cli
add
add
add
xchg
cs
jecxz
lret
or
adc
stos
ds
cli
push
pop
je
jns
testb
mov
ds
xor
mov
clc
lret
cli
dec
mov
pop
je
incb
mov
add
ss
pop
mov
inc
insb
cli
add
popf
shll
sti
sbb
mov
add
add
add
adc
leave
pushf
mov
jle
lret
mov
cmp
pushf
lahf
xor
lcall
pop
jp
xchg
dec
adcb
jg
and
adc
ds
pop
inc
pushf
mov
pop
pop
pushf
xor
out
scas
cmp
ficompl
fcmovne
inc
rolb
pushf
mov
pushfw
movsb
pop
push
xor
enter
loop
add
add
loopne
add
and
pop
test
jmp
jle
mov
insb
ret
in
add
popa
sub
adc
shl
daa
lods
cli
jae
xchg
leave
adcl
inc
jg
sub
xchg
lock
lahf
sbb
or
pusha
pop
cwtl
inc
in
push
or
dec
mov
cli
add
add
add
cmp
movsb
loop
push
into
ss
test
adc
cs
xchg
stos
mov
lds
jmp
dec
xchg
lock
push
into
mov
or
jle
adc
inc
loopne
fistl
push
jno
addl
ss
inc
fldcw
mov
ja
test
and
add
add
fldcw
mov
mov
addl
push
mov
test
sub
cwtl
mov
xor
adc
mov
mov
lods
xchg
pop
pop
cmp
push
mov
push
pop
je
push
push
cld
rorl
shll
lods
cmp
mov
js
hlt
pop
adc
jmp
decl
add
add
push
mov
movl
stos
ficomps
sti
mov
sbb
stos
ficomps
dec
sbb
mov
sahf
mov
dec
cs
data16
jno
decb
pop
sti
mov
cli
jae
hlt
aas
pop
cmp
ljmp
sbb
cmpsl
dec
jp
push
test
mov
add
fildl
add
add
notb
and
shl
test
dec
outsl
ret
adc
aam
fstps
pop
bound
out
ljmp
pusha
out
adc
jnp
inc
je
pop
inc
jp
or
push
loope
adc
adc
les
enter
and
jp
aaa
inc
xor
push
in
sbb
test
inc
lahf
inc
sbb
add
add
add
rclb
pop
pop
dec
mov
mov
mov
dec
icebp
xor
ljmp
pushf
sti
mov
ficomps
aas
xchg
pop
outsb
push
jmp
mov
addl
fisubs
lea
popa
or
add
add
add
xchg
icebp
rcrl
mov
jmp
xor
cmc
adc
adc
and
out
fstl
out
xchg
shrl
mov
shrl
scas
daa
into
push
or
loop
jne
add
mov
push
push
mov
mov
sbb
into
dec
mov
daa
jmp
js
jg
add
add
mov
aam
or
push
outsb
add
idiv
fstl
jb
and
sub
sbb
idiv
push
sub
test
pop
xor
add
sbb
aas
and
add
pop
shl
sbbl
push
je
out
mov
inc
and
mov
and
pop
lods
dec
in
mov
xchg
add
add
outsb
mov
cli
cs
pop
ja
mov
mov
adc
sub
aaa
int3
int3
mov
jecxz
dec
add
mov
fbld
cli
adc
jp
xchg
jg
inc
mov
aas
add
cmp
stos
int3
test
xor
fsubs
jmp
xor
add
add
rorl
xor
inc
mov
xchg
jl
dec
adc
push
push
add
xchg
imul
sbb
in
push
cmp
or
mov
out
mov
lcall
pushf
sub
mov
scas
pop
mov
add
cld
call
mull
inc
pop
mov
aas
jmp
cmp
push
cmp
add
add
xchg
pushl
popf
stos
cli
scas
xchg
ja
mov
cld
mov
mov
aad
fldl
pop
jne
mov
pop
push
nop
repnz
imul
xchg
out
popf
and
iret
sbb
sti
faddl
rorb
pusha
adcl
imul
aam
out
adc
js
addr16
pusha
add
add
add
int
mov
loopne
fdivp
aam
mov
dec
mov
add
sub
mov
fcomps
jne
decl
jle
sub
xchg
cmc
lcall
xor
movsl
cli
jae
dec
inc
jne
pushf
mov
add
mov
je
mov
mov
stc
andb
pop
add
add
add
mov
test
ljmp
adc
xchg
dec
and
cmp
outsb
xor
dec
mov
js
jne
nop
sti
cmp
pop
les
jg
mov
mov
popf
nop
pop
add
adc
shlb
xor
rorb
ja
out
push
pop
add
cmpl
mov
add
add
js
int
scas
jge
imul
jbe
pop
stos
jle
outsb
mov
std
and
cli
add
pop
js
add
or
sbb
jp
mov
push
pop
stos
jle
outsb
adc
add
and
inc
lcall
xlat
or
outsb
scas
cs
ret
js
pop
inc
ret
aaa
add
add
add
pop
dec
cmp
ds
clc
jbe
pop
adc
ret
or
pop
mov
dec
jp
mov
imul
pop
cwtl
sub
fnstcw
xlat
loope
int
adc
outsb
mov
mov
sub
dec
sbb
push
mov
xchg
inc
std
or
push
pop
bound
pop
movl
loop
jle
pop
dec
inc
mov
xor
int
bound
jmp
imul
sbbb
insb
fwait
pop
pop
stos
dec
mov
or
popa
hlt
mov
in
mov
xchg
and
into
arpl
sub
mov
mov
ds
mov
enter
mov
popf
lea
add
add
cmpsl
xchg
and
add
cltd
mov
sarl
dec
push
push
bound
pop
ja
jne
cltd
int3
jne
hlt
call
xchg
mov
cmp
pop
mov
cs
add
cli
jmp
int3
jne
in
cmp
or
test
adc
pop
push
push
add
push
add
add
add
js
test
call
mov
push
inc
push
pop
add
popa
adcl
call
dec
sti
mov
xchg
pop
std
add
pop
mov
mov
je
imul
inc
dec
cld
leave
ficompl
fucom
andnps
pop
cmpsl
xchg
stos
je
inc
push
add
add
add
popa
cmp
xchg
aam
push
jbe
mov
test
add
xorb
mov
out
out
lods
sub
lcall
incb
xor
sbb
mov
insl
adc
mov
pop
test
pop
pop
inc
add
insl
out
aaa
inc
cmc
pop
aad
and
lcall
cwtl
test
pop
mov
pop
xchg
fwait
push
ficomps
sti
mov
xchg
add
bound
std
or
sbb
add
mov
mov
add
shl
add
lods
in
push
lods
mov
mov
adc
bound
or
cli
jmp
scas
test
add
add
lcall
jne
add
fnsave
inc
or
push
subl
fisubs
cli
cs
sbb
fwait
cli
push
roll
push
adc
fld
fidivs
inc
xchg
pop
int
xchg
mov
or
cmp
and
or
add
pop
cmp
add
add
add
xchg
jae
out
adc
loop
mov
adc
xchg
xchg
cmc
jne
mov
aam
loope
dec
fdivr
push
ja
shr
sahf
cmc
ljmp
pop
test
jnp
sti
aam
add
and
dec
push
and
cmp
and
out
outsb
and
push
js
mov
mov
mov
or
out
and
outsl
std
idiv
mov
push
mov
add
add
jbe
cmp
adc
mov
dec
adc
add
test
adc
out
sti
jae
adc
pop
sub
mov
scas
pop
faddp
add
cli
testl
or
test
or
dec
call
cmp
mov
sub
fisttpll
pop
and
cli
jmp
cltd
lods
mov
and
add
add
test
idivl
je
push
mov
test
mov
jp
mov
mov
test
je
jb
insb
ds
shrb
jp
iret
mov
jb
inc
pop
mov
mov
pop
xchg
test
adcb
ret
sbb
ud1
inc
sbb
popa
nop
xor
add
push
outsb
inc
dec
mov
mov
icebp
mov
add
mov
mov
scas
adc
jmp
push
dec
mov
sbb
call
andl
add
and
je
ficoms
push
fstp
iret
or
mov
mov
add
cli
jmp
add
add
add
cwtl
cli
mov
movb
leave
mov
ss
xchg
dec
cwtl
je
xchg
cwtl
push
std
fmul
or
jb
push
jb
inc
dec
bound
pop
movsl
pop
aas
xchg
inc
call
gs
add
jmp
push
andl
decl
or
add
mov
add
push
mov
jmp
fs
ret
add
bound
push
retw
lock
mov
adc
jl
loope
and
decl
adc
stos
or
ret
inc
push
pop
jle
or
ljmp
hlt
rcr
jmp
inc
and
cmp
outsb
adc
pop
mov
sub
add
add
add
cmpsl
stc
mov
mov
sbbb
or
mov
mov
add
add
into
clc
mov
jp
mov
cmpb
mov
jmp
inc
pop
jae
xor
add
nop
fisttps
adc
psadbw
cli
add
repz
in
add
outsb
pusha
mov
inc
cwtl
mov
cmp
cmpsb
add
dec
mov
add
add
add
fistl
cmp
pop
fimull
mov
fimull
test
test
and
add
cmc
lock
setp
mov
outsl
hlt
push
and
loop
adc
sub
push
cltd
movsl
dec
loope
cmpsl
mov
adc
lcall
and
insl
loope
adc
xchg
cltd
call
mov
add
add
sarb
push
sub
push
or
imul
iret
stos
stos
pop
shlb
add
dec
cmp
ljmp
inc
pop
adc
mov
sub
int3
cli
push
add
out
loopne
call
out
loope
test
daa
mov
xlat
pop
lea
sbb
scas
dec
mov
fwait
mov
add
add
out
inc
sti
fsubrl
push
inc
jmp
dec
push
add
data16
test
adc
adc
push
xchg
stos
test
ja,pn
sbb
out
nop
or
cmc
scas
add
add
pop
inc
pop
jl
js
xor
adc
add
outsb
pop
fldl
add
xchg
adc
adc
add
add
add
pop
xor
adc
cmp
add
mov
push
inc
inc
mov
je
notl
lea
push
call
mov
push
call
or
adc
push
adc
mov
ja
lea
pusha
cmc
xor
dec
pop
and
shlb
inc
test
add
add
dec
jp
insl
push
jl
lcall
call
shll
gs
jno
rorb
insl
push
aad
fwait
ror
decb
or
inc
xor
jp
or
jl
inc
sbb
add
ja
out
mov
and
inc
aam
mov
or
lcall
in
clc
push
and
add
jns
push
stc
push
xchg
nop
adc
add
add
pop
adc
jp
lds
lea
inc
stos
inc
lcall
adc
loop
flds
loope
xor
test
jmp
jge
in
out
sbb
shl
dec
mov
add
pusha
and
sub
push
jo
es
mov
xchg
lds
or
add
add
push
xor
ss
test
add
sar
incl
push
addr16
mov
lods
xlat
adc
inc
xchg
cwtl
xchg
dec
aam
sub
pusha
pusha
mov
jg
pop
adc
bound
or
mov
adc
jmp
pop
mov
jno
getsec
out
add
add
mov
inc
in
mov
inc
icebp
jbe
xchg
pop
faddl
enterw
faddl
dec
rolb
cmc
dec
pop
xchg
dec
add
scas
mov
add
inc
adc
cmpsb
mov
mov
inc
fstps
stos
xor
fsts
inc
dec
fimull
inc
mov
fiaddl
mov
sbbl
add
add
notl
int
push
les
or
sbb
pop
inc
pop
pop
out
push
fmull
and
add
jmp
mov
cld
decl
iret
cmp
pop
das
sub
scas
cli
sub
xchg
or
mov
repnz
dec
sub
cmc
aad
xchg
push
add
add
add
inc
stos
jle
aam
inc
pop
test
addl
fisubs
decb
fisttpl
mov
cmp
dec
call
hlt
lcall
pop
sbb
fwait
dec
jb
incb
test
cs
pop
arpl
pop
clc
jp
add
je
push
mov
lods
pop
dec
xchg
add
xor
add
lcall
mov
jle
lods
in
repz
ljmp
fwait
sub
inc
inc
pushf
xchg
faddl
in
add
cmpsb
add
pop
aas
xchg
adc
xchg
adc
pop
adc
js
popf
cltd
inc
pop
xchg
js
outsl
inc
mov
jns
popa
pop
inc
jp
sub
out
sub
pop
lcall
aad
and
cltd
inc
xor
rorl
xor
in
mov
leave
xchg
daa
lret
fnop
or
nop
cli
jmp
and
jg
rcrl
stos
pop
jns
aam
mov
pop
adc
jmp
inc
inc
mov
sbb
adc
incb
add
add
jecxz
je
out
hlt
mov
popf
dec
and
jns
cmc
add
test
pop
inc
pop
mov
rclb
xchg
out
mov
in
cmp
out
leave
push
call
adc
cmp
incl
aas
jg
test
cmc
test
mov
xchg
out
sub
mov
add
add
add
sahf
push
decl
mov
mov
jecxz
rolb
add
jmp
hlt
out
pop
mov
mov
stos
dec
mov
mov
push
leave
pop
mov
movsl
cs
adc
ljmp
stos
pop
mov
test
sub
test
jo
adc
inc
add
sub
add
add
xchg
jle
insl
rcll
loopne
das
shl
popa
bound
popa
data16
mov
faddp
bnd
mov
jns
bound
repz
jns
jns
xchg
dec
mov
in
fimull
in
fsubr
sbb
rorl
add
lcall
push
inc
mov
pop
dec
or
add
add
add
pop
nop
test
xchg
push
in
inc
arpl
and
and
and
mov
add
xchg
daa
add
push
lret
jp
std
in
out
cmpsl
andb
inc
jnp
test
mov
aas
pop
nop
adc
call
add
repz
fldenv
xor
mov
outsb
rcrb
xchg
mov
add
add
adc
sbb
dec
sahf
adc
mov
adc
jno
or
call
nop
jl
sub
mov
lcall
faddl
jl
faddl
jge
das
sahf
cmp
inc
jmp
mov
cli
cmpsb
xchg
shrb
roll
adc
add
push
add
add
add
or
in
xchg
jl
flds
add
jle
jnp
sbb
mov
mov
fiaddl
lods
sub
lds
pop
jg
clc
lahf
sar
mov
or
inc
testl
inc
add
call
mov
stos
pop
or
jle
mov
xchg
and
add
sarb
cmp
mov
cwtl
xchg
dec
add
inc
sarl
push
out
xchg
pop
inc
ja
adc
pop
mov
add
mov
dec
imul
shrl
adc
data16
rclb
std
bound
mov
pop
lret
psubusb
mov
mov
out
rorl
jne
add
add
sub
jbe
mov
add
mov
cmp
add
xchg
cwtl
leave
repz
subb
inc
pop
jns
add
cmp
stc
add
sub
mov
xchg
pop
ficomps
int
add
cmpsb
je
sbb
and
adc
adc
mov
and
jns
inc
fisubrl
push
fidivrl
stos
adc
add
add
sarl
mov
ja
and
inc
leave
jecxz
dec
flds
imul
in
int3
push
mov
add
popf
pushf
or
adc
mov
mov
lock
xorb
insl
cmp
add
xchg
push
add
mov
xchg
jno
push
ret
xchg
add
pop
adc
jne
push
inc
int
pop
movsb
test
push
push
movsb
sub
xsaveopt
adc
mov
scas
popa
sub
add
xorps
test
xor
xchg
ljmp
mov
jno
jo
sub
jae
in
stc
data16
mov
je
repnz
icebp
cltd
lods
aas
add
add
add
mov
test
adc
adc
inc
ret
push
decl
ret
push
outsl
and
test
push
test
sub
add
mov
and
xchg
clc
lcall
out
add
adc
rorl
mov
cmp
push
and
notl
add
cmpsl
pop
xor
add
sub
mull
cmc
call
add
jecxz
sbb
xor
cmp
cmpsl
loope
stc
xchg
lss
cwtl
mov
jp
push
in
push
pop
hlt
outsl
cmp
dec
mov
stc
xor
inc
add
scas
inc
lea
lods
jb
jo
popa
imul
inc
and
mov
add
pusha
cmc
mov
add
push
shl
pop
js
dec
pop
clc
sbb
test
and
out
xchg
popf
cli
mov
adc
push
cltd
popf
call
push
add
push
jp
adc
and
cwtl
movsb
out
dec
and
sbb
mov
pop
ljmp
in
sbb
push
je
enter
scas
sub
and
js
push
lret
jl
int3
mov
add
add
pop
mov
xchg
inc
pop
xchg
shlb
mov
jmp
mov
out
test
xchg
mov
cmp
jbe
pop
inc
pop
cwtl
xor
jns
jp
push
ficompl
xor
call
fildl
mov
sbb
cmp
jmp
jns
mov
add
cmp
xor
je
sub
and
sbb
test
loopne
rol
add
sub
xlat
rclb
test
pop
adc
sbb
adc
insl
scas
test
jmp
adc
insl
or
rclb
add
jnp
adc
add
add
add
add
insl
mov
dec
push
and
adc
adc
inc
pop
orl
xchg
jbe
imul
imul
and
fstl
ds
cmp
dec
ljmp
mov
inc
pop
xchg
ljmp
movsb
adc
daa
sar
mov
sbb
add
add
add
dec
sahf
cmp
dec
flds
loop
xor
cmp
imul
aas
pop
cmc
ret
jae
pushl
and
cmc
lods
jae
out
dec
and
pop
push
and
pusha
push
pop
mov
xchg
push
aam
and
pop
ret
xor
push
xor
or
stc
fbstp
push
push
std
loop
fldt
cmp
xor
out
xchg
pop
not
add
add
add
add
sbb
setle
sti
jae
out
aas
pop
daa
fwait
adc
adc
inc
pop
xchg
and
cmp
sub
inc
pop
xchg
mov
mov
dec
sub
xchg
test
push
xor
pop
shr
mov
std
loop
or
xorb
shr
mov
and
test
jmp
cmpsl
add
add
add
adc
mov
xchg
inc
lret
mov
call
adc
sti
loopne
and
mov
sub
call
cli
scas
jmp
loope
and
sub
mov
xchg
lret
push
xor
sub
mov
call
mov
mov
dec
xchg
inc
add
add
add
add
sub
inc
pusha
sub
push
sub
call
ret
movsl
inc
sub
outsb
adc
cltd
fmul
and
cmc
stos
push
jmp
jge
push
add
es
int
jnp
add
adc
iret
mov
das
cwtl
mov
push
int3
pop
shlb
jae
inc
scas
outsb
sbb
adc
add
add
dec
int
push
ds
cwtl
mov
ret
pop
shlb
shlb
adc
cmp
sbb
test
xchg
ret
sbb
orl
inc
mov
push
call
mov
cmp
in
or
add
aam
rcll
nop
scas
and
adc
add
mov
out
fbld
out
loopne
xlat
sbb
add
add
and
loopne
out
filds
cmp
loopne
jecxz
rsqrtps
jne
leave
imul
test
imul
push
pop
push
push
fldl
cmp
sub
push
push
scas
cli
jle
imul
fisubl
mov
pop
scas
cltd
mov
mov
push
mov
add
add
lcall
lcall
popa
add
shrl
jl
test
jmp
inc
cmp
xchg
and
and
into
jmp
je
jge
call
fwait
push
aad
inc
pop
mov
fistpll
and
fxch
in
sub
jno
push
pusha
sbb
fsubl
mov
add
leave
push
pop
adc
shl
in
sti
cmp
add
movsb
fists
add
cwtl
push
leave
and
and
divl
inc
push
into
mov
icebp
aad
sub
ret
fucom
add
pop
fmuls
and
jbe
and
aad
and
aam
and
mov
add
add
add
xchg
push
adc
xor
pop
or
xlat
cmp
call
es
xchg
mov
call
dec
jl
add
sbb
int3
cmpsb
sub
dec
subl
mov
mov
and
mov
push
sub
ljmp
sub
mov
or
xchg
ret
adc
movsl
insb
out
add
add
insb
and
cmp
and
mov
xor
sar
lods
add
adc
add
adc
dec
imul
mov
jle
lret
jbe
adc
roll
push
cld
cmp
je
dec
ljmp
or
ret
bound
and
add
and
cmc
invd
mov
inc
and
add
and
bound
add
add
add
jg
popa
icebp
sub
pop
push
leave
divb
ret
or
xor
dec
cmp
or
pop
jg
pop
push
jle
cli
jle
adcb
push
jmp
and
add
cmpsb
mov
xchg
test
pop
add
pop
aas
and
out
inc
add
stc
addl
adc
stos
sub
xchg
mov
add
add
add
mov
lods
fistps
adc
xor
push
mull
jnp
fwait
pop
or
adc
xchg
xchg
xor
mov
ret
fcom
add
push
movsb
cmpsl
mov
adc
jmp
fcmovnu
add
sub
mov
popf
icebp
jno
pop
aas
cmpb
cmp
add
mov
push
f2xm1
push
add
add
add
movsb
fildll
lock
xchg
jnp
jns
test
sbb
xchg
enter
mov
lds
repnz
pop
adc
pop
xor
push
jb
stc
add
pop
imul
gs
callw
dec
or
bound
out
sub
push
insb
es
call
add
add
add
mov
cli
scas
push
xor
jae
lret
mov
push
adc
mov
leave
and
sets
add
xchg
dec
sub
mov
and
int3
sbb
add
inc
and
mov
inc
and
mov
popa
out
sbb
push
mov
add
add
xor
mov
jno
call
insb
cmp
dec
cmp
cmp
and
movsb
dec
xchg
loop
popf
cmc
mov
jno
repz
pop
push
scas
loope
inc
pop
push
cmp
scas
ficoml
mov
ficompl
scas
fidivl
and
dec
pop
push
ret
push
adc
imul
cli
in
fisubrl
add
add
add
out
sub
cmp
add
and
in
ret
or
and
fwait
pop
ss
mov
popa
adc
pop
ss
mov
xor
or
pop
lods
sti
call
add
jmp
sbb
push
or
outsb
lods
xchg
sbb
pusha
dec
inc
sbb
cmp
add
call
out
imul
sbb
loope
adc
sub
xchg
cld
mov
inc
scas
mov
xchg
fstl
out
fcom
in
sbb
das
lock
rcll
stos
clc
dec
and
add
push
adc
mov
mov
push
jbe
out
imul
jl
sub
cmp
add
add
add
imull
cmpsb
fs
or
sbb
test
adc
xor
cli
jmp
in
mov
lds
xchg
mov
and
lds
and
iret
outsb
or
insl
push
push
out
jp
fucomip
imul
insb
aam
push
jb
cs
cmc
xor
jb
add
add
pop
imul
into
pop
mulb
pop
mov
add
jg
add
hlt
add
cmp
loop
imul
add
lret
insl
sbb
out
enter
js
xor
inc
rorl
mov
out
adc
mov
or
adc
out
xchg
clc
pushl
rolb
add
add
mov
in
jle
and
pop
xor
subl
push
mov
cmc
test
incl
in
add
out
call
out
sub
adc
sub
mov
call
out
aaa
sub
push
bnd
cwtl
scas
loop
pop
incl
in
jle
add
add
add
xchg
lods
dec
add
or
xchg
lock
sub
xchg
jmp
decb
fsubp
daa
scas
pop
pop
and
push
sub
pop
push
mov
inc
push
mov
lcall
scas
les
les
pop
dec
adcb
xlat
gs
or
call
clc
orb
add
cmp
pop
mov
out
mov
lds
sub
std
dec
rorl
lods
sub
ljmp
in
sbb
rcrb
iret
lds
fstl
add
fisttpll
pop
loope
inc
mov
add
outsb
ss
push
sbb
rcrl
add
add
sbb
decl
dec
out
jecxz
cli
gs
std
adc
popa
mov
push
inc
loopne
subl
or
inc
jae
and
sbb
adc
dec
xor
pusha
cltd
sub
xor
loopne
xchg
lds
and
in
xchg
add
pop
jb
cmp
sbb
sti
popf
adc
add
add
add
jnp
add
jg
int3
mov
lock
jg
ja
adc
test
notl
inc
dec
add
fcoml
addl
lds
jns
adc
sub
mov
clc
dec
jo
or
mov
test
adc
call
mov
std
sub
adc
pushl
ljmp
add
cmc
mov
adc
dec
push
sub
sbb
push
or
je
scas
adc
mov
out
jp
jmp
mov
cli
pop
idivb
sarl
inc
inc
aas
and
test
adc
icebp
inc
jo
add
lcall
add
repnz
and
aaa
and
cmp
popa
add
add
add
mov
xchg
dec
mov
jae
xchg
ljmp
dec
inc
adc
xchg
repz
xor
in
rclb
roll
push
enter
mov
dec
sahf
and
sub
negl
sub
sti
cmp
xchg
adc
adc
sbb
xor
jl
sti
add
add
add
adc
xchg
in
jle
and
lahf
push
xchg
push
repz
les
outsb
inc
push
pushf
stos
out
sti
adc
adc
mov
mov
ret
insl
mov
pop
add
pop
adc
sub
push
faddl
fistpll
add
adc
lcall
add
mov
and
sbb
std
sub
add
faddl
sub
shrl
add
add
add
outsb
xlat
cmp
and
sti
mov
popa
or
daa
jmp
pop
adc
mov
xor
test
imul
mov
std
pop
adc
mov
pop
adc
cs
int
icebp
xchg
cs
leave
add
and
aaa
inc
mov
inc
pop
xor
add
dec
mov
mov
insl
jo
subl
test
xchg
add
add
add
or
mov
cwtl
or
pop
cmp
jl
mov
ret
mov
jp
add
ja
mov
xchg
add
cmp
add
imulb
fdivrs
pusha
cmp
add
add
popf
push
rcrb
dec
mov
or
push
and
or
or
call
aad
fidivl
pop
jp
test
dec
push
mov
xor
push
lcall
icebp
aas
adc
add
cli
shl
adc
mov
xchg
aad
loopne
fstpt
lea
ss
jae
lock
pop
idivl
add
in
fimull
fstpt
or
hlt
jne
lea
xchg
sti
jae
lock
pop
idivl
fistpll
jmp
xlat
pop
adc
jbe
add
dec
jge
call
jl
cmp
nop
faddl
insb
jmp
add
imul
sahf
jl
adc
add
adc
inc
cmp
add
add
adc
jge
out
pop
jno
cmp
nop
sub
das
insb
repz
sbbb
out
push
cmp
dec
imul
dec
mov
and
pop
adc
jmp
insl
data16
cmpsb
and
lds
ret
push
inc
or
xor
lds
add
add
add
adc
icebp
pop
in
stc
popf
lods
add
jae
lock
sar
lds
jmp
xchg
ljmp
flds
das
sub
stos
xchg
inc
stos
jle
jns
push
mov
inc
add
push
negl
push
push
push
bound
js
rclb
or
pushl
out
pop
cli
ss
add
add
add
push
add
test
and
xor
dec
push
push
clc
jns
adc
adc
dec
push
mov
inc
testl
lea
dec
pushl
ljmp
cmp
push
pushl
cmp
adc
imul
add
pop
cmp
pop
std
ret
jae
test
adc
inc
add
add
add
push
jp
sub
rcrb
jnp
lret
jnp
outsb
jnp
decl
and
lods
sub
aas
pop
add
dec
scas
pop
jmp
out
sub
icebp
mov
mov
inc
and
ss
cmp
cmp
pop
jecxz
or
loopne
pop
push
repnz
sub
dec
seta
dec
cmp
js
das
sti
add
add
add
in
aas
pop
xchg
ljmp
pop
pop
jle
sbb
push
int
and
fldl
add
in
add
or
xchg
lock
adc
in
ret
dec
add
rorb
iret
gs
hlt
lea
jp
pop
fld
pop
cmpsb
or
test
add
add
add
pop
sub
notl
daa
aas
and
test
inc
mov
les
cmp
xor
add
outsb
hlt
call
push
bound
cmp
jo
xor
lcall
call
adcl
push
andb
push
xor
xchg
shlb
test
add
inc
call
sub
pop
ss
mov
call
cli
cmp
shl
cmp
aaa
adc
adc
and
ds
pop
add
cwtl
pop
addl
cmp
mov
aas
cmp
pop
lock
dec
push
sbb
negl
mov
sub
adc
add
add
add
xchg
inc
and
xor
sub
inc
mov
adc
es
jb
notl
mov
hlt
push
mov
pop
xor
add
cmpb
add
cmp
add
or
ret
jnp
pop
ja
test
ja
call
sub
popa
in
cltd
decl
inc
adcl
add
or
or
testb
pop
cs
imul
and
pop
movsl
xor
pop
jns
sub
das
or
filds
lahf
jbe
dec
jp
sub
out
push
mov
cmc
cmp
jnp
out
out
xor
out
pop
test
push
dec
jmp
jp
mulb
xor
sahf
sub
pushf
pop
ret
adc
push
cwtl
lods
imul
add
add
push
adc
loope
int3
daa
fsts
mov
sub
call
daa
dec
lods
daa
inc
sub
mov
sub
cmpsl
lea
cmp
iret
loopne
int3
adc
push
int
pop
cmp
mov
pusha
or
adc
jmp
and
fcompl
add
insl
and
cmp
sbb
cmc
lret
add
sbb
sub
push
sub
int
lcall
in
and
aam
and
xor
add
arpl
add
pop
mov
xchg
sub
sub
mov
cli
imul
and
add
add
add
mov
pop
adc
insb
sbb
out
xlat
adc
icebp
pop
cmp
icebp
push
cmp
jmp
or
jg
add
popa
loopne
mov
add
imul
push
or
xor
inc
sbb
negb
mov
cmp
mov
fldl
test
sbbl
inc
push
xor
jl
add
add
add
cmp
into
push
in
decb
xchg
dec
or
aad
sbb
push
or
dec
add
cltd
mov
jmp
xchg
inc
or
push
mov
stc
or
pop
adc
lea
insb
data16
sahf
sbb
pop
cli
cmp
pavgw
dec
push
incb
pop
push
add
sti
xchg
mov
add
pop
in
xchg
incl
dec
test
pop
xchg
or
call
in
mov
or
into
jecxz
rorl
mov
cld
imul
sti
addr16
dec
out
cli
fisubrl
clc
pop
aad
push
push
aad
and
pop
fildl
daa
sbb
out
pop
shrl
cmp
int
ret
rcrl
sub
add
add
mov
mov
es
sub
in
ret
sub
inc
pop
sbb
xchg
int3
xor
fcmovne
dec
shr
sbbb
loop
pop
adc
push
movsb
mov
faddl
xchg
mov
inc
add
mov
jb
adc
negb
les
pusha
fs
aam
popa
add
add
add
push
inc
icebp
adc
cmp
mov
pop
in
sbb
add
loopne
or
xchg
pop
xchg
push
mov
adc
adc
lret
call
pop
mov
lods
adc
sbb
add
mov
iret
gs
push
xchg
lock
lods
addr16
ficomps
add
add
out
fmul
or
arpl
ljmp
push
add
push
adcb
xlat
daa
rclb
divl
cmp
sahf
push
adc
jnp
jmp
cmpsl
cli
inc
popl
pop
inc
loop
mov
xchg
lock
and
jmp
or
push
or
push
adc
data16
lods
popa
add
add
add
add
ds
inc
sbbl
pop
lock
mov
iret
xlat
jmp
jle
lret
jbe
inc
pop
dec
push
xchg
jecxz
pop
pop
sub
jmp
mov
inc
dec
loope
ret
push
mull
outsb
push
add
bound
and
and
insl
jns
jecxz
add
add
add
or
and
cmp
fs
adc
push
enter
or
cmpsl
arpl
dec
pop
push
fistpl
add
sub
lidtl
addl
adc
mov
pop
pop
or
fiaddl
add
je
dec
nop
jmp
add
dec
add
add
add
loope
sbb
shr
imul
jmp
add
add
xor
mov
xor
add
add
push
fwait
test
jne
jmp
cmp
sbb
inc
mov
loop
add
sbb
pop
call
into
pop
adc
lds
es
push
push
add
add
pop
xchg
mull
inc
jb
xor
cmpsb
lea
inc
dec
ljmp
jns
fildll
lods
lret
xchg
pop
imul
jle
add
pop
int3
mov
mov
jmp
or
pop
ds
add
xchg
leave
addl
lcall
les
jmp
add
aas
push
push
rcrb
rcll
cli
pushl
imul
stc
out
push
add
dec
sub
mov
xor
jecxz
je
xchg
jmp
sbb
pop
and
popa
adc
lcall
push
inc
push
jmp
xchg
mov
push
clc
add
ja
cmp
push
mov
jecxz
pop
add
add
add
xchg
call
out
jmp
dec
push
inc
loop
push
sub
imul
push
aad
jb
push
aaa
mov
jg
sub
outsl
shll
and
incb
adc
dec
in
push
cwtl
insb
jg
jae
mov
cmc
mul
add
add
int
jae
push
inc
pop
loope
test
add
add
sahf
and
jecxz
js
test
stc
or
jae
cmovo
inc
jae
out
ret
and
jne
sbb
out
adc
pop
push
bound
add
je
jmp
sub
xchg
dec
add
pop
jae
pop
jmp
sbbl
mov
adc
add
add
cli
in
add
add
add
fucomi
pop
shr
aad
mov
clc
call
pop
arpl
pop
leave
je
rcrb
scas
adc
add
pop
mov
mov
sub
push
pushf
add
adc
inc
pop
cmp
mov
or
cmp
adc
sar
call
ljmp
mov
rcl
ret
icebp
ficomps
mov
fmuls
add
mov
dec
pop
shlb
es
jo
dec
mov
sub
mull
cmc
xlat
call
pop
out
add
push
pop
out
stc
push
sub
not
movl
call
sbb
adc
sbb
push
stos
call
nop
jmp
pop
adc
add
mov
sti
lock
push
inc
xor
add
add
cmp
clc
fistl
pop
adc
stos
or
sub
dec
loopne
jo
bound
cli
sub
xchg
mov
std
jo
bound
adc
push
pop
je
jmp
mov
je
xchg
cmp
jecxz
push
push
jns
sti
mov
or
nop
mov
push
lock
adcl
or
addl
add
add
outsb
insb
lods
mov
push
pop
pop
mov
scas
pop
xchg
data16
in
jae
fldcw
or
sub
mov
push
test
stc
popa
test
clc
or
imul
sahf
jbe
dec
xchg
jbe
xchg
jg
xlat
sbb
push
sahf
push
std
inc
or
mov
fisttpll
lret
jae
jmp
sub
call
xchg
cli
inc
push
add
add
add
loope
sti
jae
adc
jmp
cli
xor
mov
orb
imul
cld
incl
jle
enter
adc
pop
pusha
loopne
jo
inc
mov
insl
jae
jmp
pop
pop
ljmp
jno
xchg
psubsw
scas
xchg
add
adc
add
jno
fstl
add
aad
loope
adc
or
sahf
rcrl
lds
jb
jo
mov
insb
jns
call
inc
or
test
xchg
push
imul
loope
xchg
and
arpl
add
xchg
shrl
popf
fnsave
clc
add
add
add
adc
lahf
scas
std
neg
sbb
jno
test
pop
jle
mov
sub
jle
cmp
push
xchg
push
or
mov
gs
in
popl
cs
aam
call
str
cmpb
xchg
ljmp
sldt
add
add
add
in
mov
arpl
adc
decb
sbb
int
xor
popa
push
adc
add
cmp
pushl
orl
inc
mov
add
cmovg
jecxz
movsb
adc
mov
sub
sub
push
sbb
mov
ds
xlat
cmp
sahf
incb
push
divl
xchg
ds
adc
pop
icebp
ret
add
add
dec
out
cli
pop
in
imul
pop
push
pop
pushf
jb
add
sbb
and
sbb
push
rcll
test
sub
mov
arpl
ljmp
test
inc
pop
out
stc
popa
in
ljmp
push
xchg
push
push
jne
cmp
push
stc
pop
jbe
sahf
push
add
add
xchg
fldenv
inc
jp
or
sub
xor
ret
mov
mov
add
call
cmp
adc
add
push
adc
dec
push
sti
mov
call
sti
imul
adc
mov
lods
push
sti
subl
orb
mov
icebp
loope
adc
jmp
add
and
int
sahf
adc
sub
fdivrp
cld
int3
pop
outsl
enter
mov
fwait
movsb
daa
inc
sahf
lods
daa
ds
unpcklps
push
ljmp
add
hlt
sub
adc
cli
into
push
sbb
cmp
adc
dec
sar
popa
mov
or
cld
popf
push
inc
jmp
cmpsb
xchg
in
sbb
add
xor
mov
add
add
pop
push
je
fsubrs
pop
cmp
cmp
pop
sbb
sub
and
jmp
cltd
inc
or
orb
movsl
sbb
jmp
cmc
mov
test
push
inc
decb
mov
addl
jl
add
arpl
adc
cmp
add
js
dec
mov
sbb
add
add
add
into
inc
and
dec
lods
add
lea
add
adc
shr
into
stc
gs
adc
or
push
pop
mov
shlb
dec
push
lret
and
sti
and
inc
adc
in
and
push
pop
mov
add
sbb
addr16
xlat
je
adc
clc
lock
add
add
inc
into
out
es
in
pop
adc
hlt
pop
xor
je
stc
mov
mov
xchg
cmp
dec
jns
out
jmp
jae
mov
push
or
cmpsb
scas
push
xor
push
push
push
mov
ds
decl
faddl
add
jnp
cmp
xchg
adc
clc
add
add
add
jmp
negb
pop
aas
adc
add
cmp
add
lock
and
mov
and
insb
mov
loop
and
push
aad
shrl
loop
test
adc
mov
xor
insl
je
inc
sbb
fcomp
les
or
out
pop
outsb
add
loopne
pop
dec
cmp
dec
push
cmp
add
outsb
mov
add
sub
pop
lcall
loope
outsl
sarb
mov
lods
popa
and
lea
fs
inc
xlat
popf
dec
test
lret
ret
fldl
lds
daa
mov
and
insl
xchg
pop
xor
dec
outsl
adc
sub
pop
shll
add
jmp
loop
and
sbbl
add
add
add
pop
out
jmp
mov
lock
jge
inc
icebp
sub
adc
mov
popf
dec
add
out
push
add
cmpsb
and
sldt
adc
orl
pop
int
call
dec
pop
push
adc
add
add
adc
inc
push
inc
inc
or
mov
add
add
popf
sub
fsubs
inc
push
inc
adc
cmp
lea
dec
pushl
adc
mov
jne
insl
aaa
pop
fiadds
push
lret
test
popa
adc
inc
mov
call
out
fdivrl
test
dec
ja
or
popa
adc
inc
mov
add
jnp
mov
jg
sbb
popa
xlat
jb
bound
fiadds
pop
mov
sti
add
je
mov
ss
adc
into
add
outsb
in
mov
daa
mov
push
lock
mov
or
ret
repnz
sbb
pop
adc
add
in
adc
pop
bswap
pop
pushf
mov
js
add
add
stos
fprem1
insl
jg
shl
popf
pop
mov
js
cmc
fcom
mov
in
and
data16
arpl
and
mov
sub
add
fldt
loope
dec
leave
jns
cmc
fcompl
and
sub
addr16
mov
adc
rcr
in
sti
paddd
ret
and
add
fs
sub
shl
flds
jl
inc
aad
flds
sub
out
xor
xchg
das
nop
xchg
adc
inc
aaa
pop
stc
cmpsl
push
sub
inc
cli
push
xchg
dec
add
inc
cli
push
mov
fiadds
call
enter
inc
popl
in
lods
add
pop
xchg
inc
mov
pop
pop
out
add
add
add
sbb
pop
xchg
inc
popf
test
cli
add
pop
adc
xchg
mov
test
add
or
insb
mov
sub
inc
pop
xchg
mov
test
add
jl
cmc
mov
adc
add
and
mov
or
rol
push
add
add
add
and
mov
nop
dec
inc
push
ja
addl
jp
mov
and
jnp
mov
iret
mov
lea
lahf
dec
shl
pop
cli
pop
nop
imul
cld
add
ficompl
add
loopne
pop
aaa
test
pop
cmp
gs
push
decb
loope
xor
inc
negb
add
add
add
jbe
jmp
xchg
add
addr16
sarl
mov
fstl
call
jae
and
and
mov
sub
xchg
cmp
mov
cmpl
repnz
out
pop
cmp
shlb
pop
inc
call
adc
test
pop
fs
add
jmp
bound
mov
add
icebp
mov
pop
adc
loopne
dec
cmp
outsb
sbbb
or
pop
xchg
jmp
fcomi
outsb
pop
dec
mov
or
cwtl
pop
add
adc
insb
dec
rcr
popa
rcl
xchg
leave
popa
sub
mov
cmp
xchg
mov
decb
xchg
or
sahf
add
add
add
test
rclb
ret
and
int3
mov
pop
mov
sbb
and
mov
jo
xor
sti
cltd
ficoms
add
call
sub
aas
jg
pop
and
cmp
xchg
xchg
jmp
bound
add
aas
scas
call
int
mov
je
xchg
dec
or
cmpsb
add
add
add
sbb
add
xchg
dec
add
dec
push
or
into
std
mov
xchg
inc
and
mov
sub
imul
push
mov
orl
test
addl
mov
add
jp
push
push
dec
cmp
adc
jae
pop
incb
add
lea
push
enter
pop
adc
add
and
test
pop
shlb
loopne
sti
dec
scas
fldl
jae
fisttpl
xchg
dec
xacquire
pop
jae
push
add
mov
mov
xchg
in
add
in
jae
ja
addr16
cmp
add
push
inc
cli
sbb
add
add
dec
out
ss
cli
fildl
fadds
in
test
test
pop
jns
xor
xchg
dec
or
cmp
push
xor
xchg
jecxz
xlat
pop
out
sub
aas
movsb
inc
ds
sti
sbb
sub
imul
mov
ficoms
adc
cmp
push
int
adc
add
insl
rolb
addb
mov
push
adc
pop
loope
fmuls
or
orb
mov
loope
fmuls
and
in
cltd
cmc
mov
dec
sbbb
outsb
adc
call
pop
adc
cmp
mov
filds
mov
sarl
into
out
pop
daa
leave
fidivrl
add
add
add
psubsw
xor
xchg
xchg
inc
loope
mov
push
roll
xlat
sbb
adc
testl
gs
cmp
push
cli
stos
jecxz
jnp
cwtl
leave
inc
cmp
push
cli
xchg
cmp
xchg
cmp
add
mov
inc
mov
add
add
cld
xorl
mov
jmp
xchg
shrb
or
xchg
outsb
sub
out
test
sbb
or
mov
aad
add
and
sbb
inc
inc
movsl
mov
xor
jne
mov
rcrb
push
cmpl
mov
mov
add
add
sahf
or
incl
ds
cmp
shlb
out
pop
sub
cs
pop
xor
lret
mov
or
or
add
subl
outsb
mov
je
pop
ds
ret
sar
mov
fwait
pop
sub
dec
mov
iret
incl
mov
inc
pop
sti
xor
add
push
pop
sub
pop
out
fsubr
or
sahf
adc
pop
fwait
out
jae
gs
out
iret
and
adc
stc
ret
test
aam
sub
mov
pop
stos
out
push
add
outsl
mov
fimuls
mov
insl
add
out
fwait
cmc
adc
add
stos
in
and
test
pop
add
add
add
int3
pushf
andb
les
int3
imul
imul
adc
xchg
or
pop
fstl
or
dec
push
mov
cmp
mov
int3
or
cmp
pop
pop
ss
bound
scas
pop
bound
add
or
mov
push
roll
add
add
push
sti
cli
fidivrs
je
jl
jmp
arpl
xor
mov
jle
pop
adc
sete
jb
call
xchg
mov
jbe
push
mov
push
clc
dec
sbb
pop
in
das
add
adcl
pushl
jbe
add
divl
cmp
push
subl
add
pavgw
fstl
call
mov
sbb
push
cmp
cmp
into
sbb
pop
push
sar
call
mov
push
inc
ja
les
arpl
fadds
std
outsb
sbb
loope
sbb
pop
aam
call
lea
add
bound
push
mov
call
push
fcmove
mov
test
nop
pop
in
pop
add
add
add
repz
push
in
mov
in
mov
jns
repz
test
and
pmullw
cli
mov
inc
int3
pop
les
sti
sub
shl
pop
jg
or
push
xchg
pop
push
in
scas
push
aad
pop
sbb
xor
push
cli
lret
cmp
xlat
dec
es
cli
add
add
add
inc
push
je
mov
ss
mov
je
adc
xchg
inc
pop
cmp
in
mov
loopne
lcall
in
mov
loop
mov
leave
adc
or
pop
mov
push
fisubs
mov
ficoml
cmc
fwait
pusha
push
push
les
dec
cmpb
jg
add
add
nop
or
movsl
movsl
add
pop
insl
inc
dec
inc
xchg
cmp
arpl
pop
es
push
fisubl
mov
popa
xchg
cli
and
mov
mov
cmc
push
adc
push
std
std
mov
adc
stos
add
xchg
add
insl
stos
or
jb
add
fs
sbb
mov
add
add
add
push
mov
aam
sub
xor
push
out
sub
cli
insl
and
out
pop
xor
mov
ss
in
scas
xchg
mov
xlat
dec
out
xlat
adc
mull
cmp
inc
add
lds
mull
roll
mov
stos
cld
xor
jg
pop
inc
xchg
out
insb
push
push
inc
add
add
add
add
sub
dec
cld
xchg
xchg
mov
xor
mov
fiadds
adc
push
cmp
and
cmp
or
mov
ds
mov
jne
push
out
xchg
sub
or
ret
adc
xorb
aas
mov
insl
popf
pop
icebp
in
add
sub
add
add
ret
xchg
and
mov
insb
loope
push
test
jne
inc
xor
popf
sbb
aad
sbb
hlt
xchg
daa
pop
cli
leave
mov
and
inc
xchg
test
dec
call
out
mov
xlat
in
movsl
aas
pop
mov
test
ret
inc
test
mov
ss
incl
add
add
adc
fistpl
adc
add
adc
push
inc
xchg
movsb
in
loopne
nop
pop
pop
ss
pop
sub
mov
loope
xor
cmp
enter
mov
and
sub
push
in
xchg
mov
dec
mov
pop
adc
sub
fdivrs
xchg
cmp
fcoms
mov
cld
add
add
add
cli
mov
pop
xchg
dec
add
test
insl
shlb
pop
push
mov
sub
jmp
pop
adc
ficompl
cmp
neg
ucomiss
pop
mov
cli
jmp
dec
cmp
push
adc
mov
or
pop
ss
jmp
or
xor
push
inc
pusha
aad
mov
loop
add
add
test
push
xchg
pusha
out
stos
xor
or
cmpsl
mov
pop
faddl
das
int3
or
lock
add
clc
jp
xor
adc
add
ja
clc
cmp
mov
or
aaa
adc
je
or
fisttps
pop
into
mov
xor
add
add
add
hlt
adc
add
leave
cmp
push
xchg
sbb
addl
adc
jmp
add
cmpb
outsb
add
fiaddl
repnz
xor
sarb
pop
sbb
push
add
inc
push
add
sub
and
daa
add
mulb
xchg
push
cld
test
jnp
pop
sub
call
out
xchg
add
add
bound
jmp
out
mov
jp
decb
scas
and
push
mov
jns
pop
pop
xor
scas
stos
dec
cli
add
push
hlt
aas
pop
aaa
pop
push
fnstcw
sbb
and
push
ds
or
jp
jns
bound
dec
cli
test
adc
xor
inc
stos
lret
or
mov
mov
in
int
pop
add
add
add
mov
dec
jecxz
fs
in
loopne
xor
dec
int
in
jp
test
pop
mov
push
fwait
dec
and
test
push
cmpsl
call
jp
sub
fdivrs
inc
sub
push
jne
xor
jnp
aam
inc
pop
adc
xchg
mov
sbb
mov
or
dec
xchg
dec
add
add
add
and
fcoms
jnp
aaa
shll
mov
pop
fs
pop
cmp
inc
std
pop
mov
stc
jb
fldt
dec
gs
bound
mov
mov
cli
bound
add
sbb
jo
pop
xor
enter
inc
sbb
cli
popa
and
push
gs
pop
test
add
add
add
pusha
cli
ss
dec
test
rorb
xchg
addl
xchg
shr
daa
sbbl
pop
or
xor
or
push
sub
imul
decl
jle
push
xchg
test
outsb
and
arpl
lret
movsb
fcomip
mov
das
test
dec
sub
dec
bound
adc
add
add
add
fisubrs
addr16
scas
mov
add
out
jno
cmc
jmp
test
decb
dec
popa
push
and
addr16
push
pop
imul
inc
dec
push
subb
jp
push
das
in
and
into
daa
sub
fisubs
sub
out
push
imul
shlb
xchg
addr16
add
add
add
cmp
jp
sarb
inc
sbb
stc
xor
push
je
imul
mov
push
scas
insl
dec
jae
push
jns
shlb
ss
and
inc
out
or
fisubs
divps
call
les
mov
or
scas
inc
inc
adc
push
mov
mov
add
add
xchg
loope
insl
fwait
rorb
rcl
xor
fs
insl
push
fisttpll
and
daa
xor
cmp
xchg
dec
inc
xchg
test
push
cltd
shll
mov
cld
ret
adc
pop
lds
or
xchg
les
mov
das
inc
jle
xchg
sbb
add
mov
add
add
repnz
mov
push
xchg
movl
test
repnz
cltd
repnz
and
scas
fbld
out
ret
jnp
inc
xchg
imul
repnz
sbb
sub
sub
sub
js
sub
jle
insl
jae
int3
cli
cmc
imul
and
add
mov
jae
push
add
lret
scas
shll
decb
cmpl
push
repnz
xorl
mov
test
add
outsb
sub
lods
mov
and
lods
data16
pusha
cmc
je
icebp
or
fisubrl
arpl
outsb
and
arpl
xor
add
add
add
into
sbb
dec
icebp
sbb
inc
push
and
fisubrl
and
outsb
and
fcmovbe
mov
adc
fisttpll
push
outsl
lock
cmp
adc
lea
sbbb
mov
push
xor
mov
sub
arpl
lret
xchg
mov
call
ja
add
jns
jl
fstpl
jle
add
add
jp
mov
add
xchg
add
jp
jne
orb
lret
cmp
repnz
pop
jecxz,pn
pop
or
adc
xchg
addb
stos
jns
mov
jl
inc
dec
mov
jl
push
inc
add
in
pop
jle
movsl
jmp
ror
dec
adc
aam
hlt
sub
sub
push
cwtl
xor
sbb
pushf
pop
jbe
mov
add
add
add
sub
fcomps
push
mov
jmp
sarb
adc
stos
loopne
sub
adc
gs
and
outsb
cmp
sarb
gs
lods
cmc
les
or
les
xchg
out
xchg
call
cwtl
add
test
add
add
add
xchg
adcb
pusha
xchg
inc
std
bound
je
fisubs
je
push
test
jp
xchg
lock
push
in
sbb
jo
out
adc
out
pop
into
mov
push
cmp
jle
outsb
mov
jecxz
pop
xchg
pop
adc
sbb
xchg
hlt
add
sbb
jns
add
add
cmp
push
lods
ja
outsb
push
add
push
test
sbb
cmc
push
shll
outsb
and
outsb
sbb
push
sbb
push
adc
sub
xchg
sub
decl
push
decb
pop
sub
jp
or
xchg
std
iret
push
cmpl
push
push
int3
les
add
add
add
stc
or
aaa
add
mov
adc
pop
mov
clc
sbb
call
insb
xor
syscall
lock
xchg
push
ljmp
cmp
icebp
sbb
jg
push
lods
inc
jae
pop
mov
outsl
pop
clc
dec
in
jne
jp
inc
sub
mov
aas
xchg
push
push
adc
jo
or
adc
popa
loopne
or
icebp
data16
add
add
das
ljmp
lods
mov
cli
jae
jmp
or
mov
aas
pop
adc
fistl
inc
pop
adc
jns
rcrb
rorl
add
es
add
test
bound
cmp
pushf
mov
add
or
adc
sarl
add
call
mov
xlat
loopne
aaa
push
in
add
divl
in
loopne
pop
sbb
gs
pop
or
out
sub
push
ldmxcsr
inc
inc
cmp
ljmp
sti
aaa
bound
or
test
cwtl
adc
jb
repz
ljmp
add
mov
jg
push
cmp
pushf
sub
push
pop
adc
jb
scas
mov
push
fsts
test
fcomps
mov
and
mov
xchg
movsb
push
push
bound
lods
cmp
popf
es
push
xchg
dec
in
loop
add
dec
dec
push
cmp
adc
add
add
rorb
aaa
je
pop
mov
jae
decl
adc
push
pop
xor
or
add
cli
incl
ljmp
adc
mov
loop
jns
cmc
cmovo
sub
cmp
aas
shll
adc
cmc
lldt
sub
jl
adc
jbe
add
mov
cmc
lcall
xchg
roll
cli
or
add
add
add
dec
cli
pop
inc
ja
gs
xorb
call
jae
pop
fwait
mov
daa
sbb
decb
fstpt
pop
cmp
push
in
test
inc
jo
add
cmp
rorb
test
imul
jp
fldcw
incb
pop
mov
jnp
dec
mov
push
mov
jg
cmp
dec
add
add
add
cmp
mov
repnz
pop
mov
decl
adc
pop
call
xor
popa
daa
push
and
rcr
mov
and
inc
push
pop
adc
add
mov
or
cmp
pop
shrl
pop
out
pop
xchg
popa
pop
pop
adc
shl
push
push
adc
and
hlt
cmpsb
dec
inc
add
add
add
and
inc
push
pop
cmp
cmpsb
sub
and
adc
push
fisttpll
adc
sbb
jmp
inc
adc
jmp
sbb
add
aaa
rcll
out
adc
push
xchg
iret
rolb
sbb
xlat
dec
xchg
jo
cli
sahf
aad
jnp
aas
fsts
sub
subb
bound
add
push
subl
pop
jmp
lea
lea
and
jmp
pop
adc
cltd
js
jle
push
xchg
mov
adc
insb
roll
pop
cmp
sub
xchg
mov
cmovo
movl
and
mov
xchg
cmp
decl
cltd
mov
data16
add
add
cmp
jnp
cmp
jge
insb
xchg
xchg
subb
repnz
push
ja
lea
incl
mov
cmpsl
loop
dec
jmp
adc
add
repnz
jecxz
test
or
add
cmp
add
pop
push
cmp
fcomi
mov
add
sub
ja
jae
in
pop
add
mov
aas
in
dec
add
test
les
mov
mov
decb
push
adc
movsl
mov
pop
sub
mov
ds
pop
xchg
sarb
pushw
lods
add
decb
mov
decb
ljmp
add
add
add
inc
out
enter
iret
pusha
pop
xchg
or
call
movsl
or
out
pop
mov
adc
faddl
mov
xor
inc
xchg
les
pop
adc
addb
ret
adc
adc
add
and
add
add
cmp
and
jb
orl
add
sub
daa
rcll
jmp
jge
call
push
es
pop
jmp
pop
adc
mov
xor
test
push
mov
xlat
call
mov
sbb
jle
adc
jmp
jne
mov
cmp
add
add
or
jae
xor
dec
mov
adc
pop
xchg
mov
out
xor
pop
push
add
sar
add
sbb
jb
addb
fistl
dec
xchg
push
cli
mov
aas
push
mov
pushl
adc
add
aam
add
inc
dec
mov
inc
and
mov
call
add
add
add
shlb
je
dec
push
popf
add
sbb
and
inc
cmc
adc
ret
xor
inc
add
jae
jnp
adc
mov
punpckldq
fsubrs
sbb
adc
adc
inc
testl
add
sahf
jle
push
pushf
xor
dec
adc
incb
add
add
add
les
and
add
rorb
ficompl
or
sbb
or
shlb
xor
aad
mov
outsb
add
hlt
mov
pop
fmull
test
mov
cmp
ret
std
lcall
aas
add
adc
mov
add
add
add
add
add
mov
and
pop
adc
xor
adc
dec
jns
push
cmp
jmp
mov
add
add
or
mov
sbb
stos
arpl
call
lcall
insl
ret
xor
mov
or
inc
or
pushl
cmp
test
add
add
add
hlt
add
cmp
sub
mov
icebp
pop
movsl
adc
add
adc
test
sbb
push
sar
sub
fstps
icebp
push
dec
es
adc
hlt
jne
inc
jmp
lcall
test
pushf
test
sbb
mov
jp
mov
cmp
es
mov
add
add
add
lea
xor
xor
pop
mov
lret
mov
pop
je
repz
sbb
aaa
adc
push
call
inc
dec
ficoms
repnz
je
push
dec
lea
sti
loop
clc
push
add
mov
mov
pop
cmp
je
add
add
addl
pop
mov
popa
sbb
push
inc
push
ja
bound
mov
ljmp
add
ja
jnp
pop
mov
out
insb
cmp
enter
push
in
test
push
xchg
cli
jmp
ljmp
shl
xchg
mov
cmp
sarl
mov
sbb
xchg
add
add
imul
pop
mov
std
loope
std
stc
pushf
cmpsb
mov
jb
xchg
test
push
adc
add
and
cmp
out
aaa
xor
mov
es
jmp
sbb
addb
sbb
incb
pop
adc
loopne
and
sahf
adc
mov
xchg
jle
lea
pop
adc
add
add
add
adc
sarb
add
adc
push
rol
add
jbe
xchg
xor
xor
sub
xchg
call
fists
pop
sarb
hlt
push
push
adc
and
adc
lret
add
int3
or
xchg
xchg
jge
stos
mov
movsbl
arpl
repz
sbb
add
add
loope
and
sub
add
xor
xchg
jnp
cmc
add
movl
dec
mov
aam
or
shll
test
mov
push
pop
push
mov
repz
ret
pop
sar
roll
inc
jmp
add
ret
jmp
pop
push
inc
lds
ret
lods
addl
out
add
add
add
push
inc
or
pop
popl
pushl
fwait
ds
jne
mov
adc
dec
push
and
ds
or
rcll
mov
dec
cmp
push
sbb
shl
aam
loopne
xor
mov
sar
pop
addl
icebp
out
add
adc
add
add
add
cmp
mov
jecxz
xor
and
push
adc
sub
les
repz
xor
pop
data16
cmp
add
ret
movsb
ds
fiadds
add
mov
mov
inc
mov
add
popa
call
movsb
int3
std
fldenv
std
mov
add
out
pusha
out
add
add
add
add
pop
cmp
test
inc
pop
pop
or
out
jmp
dec
gs
daa
jne
and
jg
cmp
cli
repnz
loop
dec
inc
sbb
pop
inc
or
adc
add
int
or
imul
pop
psubsw
fildl
call
cmc
es
insl
sarb
arpl
add
add
add
jmp
jns
mov
adc
adcl
push
push
mov
add
pop
enter
popf
dec
mov
std
movsl
add
xchg
or
orb
mov
shrl
mov
test
ret
jno
das
jge
cmpsl
fdivrs
in
ljmp
xor
add
add
pop
test
adc
cmp
add
add
mov
and
adc
cli
jmp
dec
nop
mov
jmp
cli
push
xor
mov
mov
jo
out
cmp
test
pop
adc
shrl
dec
insb
jmp
pop
adc
xor
mov
pop
adc
sbb
pop
xchg
outsb
sub
dec
pop
subl
lea
call
add
add
add
adc
jle
scas
rolb
mov
idivl
gs
jle
xor
pop
mov
sub
add
or
add
cmp
lea
push
add
push
push
mov
cmpsb
adc
mov
call
push
aam
shrl
push
dec
add
add
add
aam
adc
mov
mov
je
or
push
test
mov
cmc
pop
xchg
dec
scas
pop
mov
mov
mov
call
rorl
in
or
or
jnp
jp
xchg
xchg
and
add
cmc
push
cs
mov
pop
out
fnstenv
inc
sub
add
sti
out
add
add
add
mov
stc
shrl
adc
mov
mov
cli
mov
lock
mov
and
iret
or
adc
movsl
or
lods
jle
push
test
mov
sbb
sub
lret
xchg
sahf
xor
test
adc
and
mov
adc
cmpsl
int
add
add
mov
push
sbbl
push
add
in
loop
and
out
jl
sub
cltd
ja
fistpl
cmp
jge
pop
std
fnsave
add
ljmp
test
sub
push
mov
sbb
add
pop
lcall
mov
pusha
mov
cmpsb
xor
push
dec
add
shl
imul
add
add
add
inc
or
inc
xchg
std
call
ss
fcoml
iret
or
add
ret
cwtl
inc
int
jno
or
je
and
pop
adc
jo
xor
insb
sbb
sub
clc
xchg
mov
sbb
pop
adc
pushl
pop
inc
xchg
mov
divb
add
add
mov
sbb
pusha
sbb
add
sbb
sbb
push
dec
mov
sbb
cmp
jp
ss
mov
adc
cmpl
pushl
add
lods
pop
sub
outsl
in
test
stc
push
cmp
test
sgdtl
mul
mov
loop
mov
inc
mov
inc
mov
out
xor
add
icebp
or
cli
push
pushf
cmovo
inc
or
mov
call
lods
fsts
rorl
out
lcall
sub
paddd
test
in
fidivl
std
jmp
mov
negl
std
xchg
mov
std
lcall
mov
mov
aaa
std
stc
idivl
add
add
add
ror
mov
mov
std
ljmp
sub
mov
jl
xor
popa
dec
test
call
test
adc
add
cltd
mov
ja
xchg
out
pop
push
xorl
sub
fnsave
scas
mov
mov
ja
lret
mov
add
add
lods
popa
pop
cmpb
add
mov
add
aad
jle
sbb
mov
je
out
loop
in
pop
inc
cmpsl
mov
mov
add
pop
dec
inc
lds
xor
insb
sahf
xor
nop
and
pop
adc
cltd
inc
and
jg
xchg
jne
or
jmp
sbb
or
jmp
add
and
arpl
add
xor
pusha
push
xor
popf
je
jmp
icebp
das
jo
ja
inc
negl
or
or
pop
adc
jmp
pushf
xorb
notl
mov
mov
sbb
add
insl
and
std
dec
and
sbb
and
sbb
add
shl
add
add
add
and
add
add
add
addb
mov
add
mov
add
cmp
jmp
xadd
add
aaa
fmull
imul
adc
mov
add
and
in
push
adcb
mov
test
pop
sbbl
mov
push
cmovo
add
add
pop
jne
or
movl
sub
test
ss
fcmove
in
inc
int3
push
xchg
in
or
dec
and
cwtl
and
add
jbe
dec
enter
int3
and
test
and
test
adc
ljmp
ja
loopne
stos
std
out
mov
pop
clc
std
mov
adc
cli
add
add
add
or
iret
hlt
jle
adc
mul
fsub
add
test
jge
pop
lcall
paddq
push
jecxz
ljmp
mov
popf
sbb
sti
cmp
incl
fbstp
push
add
imul
cmp
jg
popa
or
shr
lret
jnp
or
roll
or
add
sub
add
or
hlt
in
shll
gs
jae
xchg
adc
add
dec
add
inc
or
int
stc
out
jle
call
shrl
in
push
out
sarb
mov
dec
add
sbbb
movsl
mov
inc
jae
inc
test
or
add
add
add
aad
insb
pop
cmp
mov
sbb
sub
movsl
sub
adc
add
clc
jmp
inc
mov
iret
inc
xchg
rolb
mov
dec
push
cmc
mov
dec
lea
gs
add
dec
mov
pushf
push
dec
ret
cld
dec
call
out
jmp
mov
test
add
add
or
sbb
xor
xchg
xchg
sub
mov
adc
outsb
mov
push
ret
push
addl
cli
mov
pop
out
cmp
push
fdivl
rcll
imul
xlat
testl
cmc
stos
std
test
inc
mov
lcall
add
push
cmpsl
add
mov
add
lcall
add
cwtl
and
or
and
dec
xchg
adc
dec
xor
mov
imul
mov
add
mov
sarl
stos
std
pop
jno
and
std
decl
cmp
add
enter
jo
jge
call
add
pop
pusha
xchg
popa
sbb
pop
adc
add
shl
xchg
mov
fwait
and
or
scas
jge
pop
xchg
jge
outsb
iret
jge
popf
and
jae
dec
xchg
outsl
and
sbb
in
or
inc
jecxz
pop
push
jns
push
and
out
leave
cmovo
jno
call
leave
arpl
icebp
add
add
add
sbb
test
xchg
mov
fsubl
and
fcom
or
popa
xor
jo
adc
iret
aas
cltd
inc
or
outsl
lea
xor
lods
mov
mov
subl
jge
pop
jle
sbb
push
and
in
sub
loopne
and
jp
pop
pop
jg
dec
or
add
add
add
jno
inc
jecxz
cli
mov
mov
inc
call
push
and
mov
mov
push
sub
add
hlt
incl
icebp
xorl
jae
mov
cmp
cmc
pusha
das
testb
stc
sbb
pushl
jnp
mov
add
sub
insl
sub
pop
cmp
loope
subl
add
add
mov
dec
pop
test
and
int3
or
out
and
add
insl
and
fidivrs
inc
dec
xor
subl
jae
cld
rcrl
xchg
mov
or
scas
pop
cmpb
push
outsl
adc
pusha
sub
test
ss
sub
sbb
add
icebp
sbb
add
add
cmp
xchg
fcompl
jae
or
sbb
loope
xchg
cltd
xchg
sub
leave
mov
sbb
outsl
adc
jae
cmp
cwtl
lods
sbb
pop
clc
std
jae
gs
sti
das
jge
jecxz
cmpsb
sbb
in
fidivrl
cwtl
adc
adc
pop
js
insb
leave
push
popa
fs
cmp
std
fadd
inc
testl
add
mov
imul
imul
cmpb
pusha
enter
or
adc
or
nop
mov
dec
mov
in
push
and
sub
scas
cli
adc
dec
or
out
mov
call
mov
cwtl
sbb
inc
stc
mov
dec
push
psrad
jbe
test
xor
add
add
call
insl
sbb
aas
in
fnstsw
pop
test
jb
xor
mov
jmp
test
sbb
xchg
les
xlat
dec
and
xchg
data16
xlat
sarl
jmp
lea
add
sbb
adc
sbb
loopne
sbb
or
add
add
add
pop
data16
cmp
or
add
jmp
lret
clc
adc
push
arpl
loope
int3
push
testb
push
mov
call
add
pop
testb
adc
xlat
pop
mov
leave
mov
sbb
lea
inc
push
jle
sbb
adc
xor
sbb
inc
add
add
add
hlt
xor
push
insl
sub
mov
xor
je
int3
clc
addb
mov
repz
push
cmp
inc
push
pop
stos
std
xchg
push
lock
add
repz
pop
insl
adc
jae
and
mov
test
shll
mov
mov
and
inc
or
jno
and
add
add
es
faddp
mov
fs
in
loopne
mov
nop
and
dec
cli
testb
or
stos
mov
roll
pop
mov
mov
aam
inc
jp
pop
xchg
push
or
xor
and
add
xor
out
sbb
fbstp
mov
jecxz
add
add
mov
dec
ret
iret
cmp
stos
fists
out
sub
pop
jmp
fmuls
rcrb
loopne
add
fcom
dec
sti
dec
dec
mov
ljmp
nop
pusha
mov
loopne
mov
sbb
int
jmp
dec
ret
jecxz
js
pop
inc
sti
jge
inc
addb
je
stc
sbb
add
add
dec
jmp
bound
xor
loop
and
fcoms
add
dec
and
ljmp
pop
fs
lock
testl
jecxz
call
stc
xor
xor
shlb
cmp
sti
into
addr16
mov
add
cmpsl
pop
cli
scas
xor
jge
ja
add
jnp
das
mov
add
add
ror
call
incl
add
cmp
idiv
xor
push
test
lcall
cmp
call
mov
push
push
daa
sbb
idivb
adc
jo
mov
adcl
push
push
mov
adc
push
mov
sub
sbb
push
mov
nop
add
add
add
adc
jo
jp
je
or
add
jns
pop
sti
or
mov
ljmp
or
orl
ljmp
push
movsb
int3
std
ljmp
addr16
jmp
sbb
xchg
or
fisttpl
mov
add
add
inc
cld
adc
push
sub
push
out
int3
out
pop
adc
jo
popa
out
lock
ficoms
cli
xlat
sub
test
inc
add
fxch
lcall
cmp
xor
test
dec
std
add
aam
outsl
push
out
popf
or
in
push
test
lods
je
scas
in
xor
inc
add
add
add
add
push
and
in
xchg
adc
push
out
roll
pop
test
or
adc
inc
pop
adc
mov
out
lret
iret
fs
rorb
imul
ret
add
cs
pop
outsl
xchg
mov
xlat
cmp
repnz
xor
cmp
mov
add
add
add
and
cmp
mov
cmp
ret
jns
inc
test
dec
adc
test
push
sub
jle
dec
arpl
push
repnz
shll
shr
adc
ja
clc
stc
jmp
aam
cmp
jo
xor
cmpsb
push
xor
add
clc
int3
add
push
push
js
jne
cmpsl
or
add
add
lahf
pop
add
mov
sbb
jp
int3
ficoml
stos
rolb
je
call
add
ss
or
add
adc
hlt
push
add
push
mov
adc
dec
mov
xor
push
xor
mov
mov
sbb
adc
adc
add
add
inc
sarb
aas
xchg
les
pop
jno
and
mov
push
cmpl
add
test
shrl
jg
outsb
stos
stos
xchg
into
add
leave
mov
sti
jmp
push
mov
out
in
std
fldt
xchg
adc
jae
out
call
mov
sti
cmp
incl
add
add
mov
and
mov
mov
push
adc
outsb
adc
nop
jae
sti
fldl
add
dec
cld
adcl
jae
add
sbb
divb
adc
loop
xor
pusha
das
out
aas
or
cltd
mov
jge
jle
mov
jl
or
addb
mov
sbb
dec
or
iret
dec
std
add
add
add
aas
xor
xlat
mov
mov
mov
jg
out
flds
outsb
xchg
pop
mov
cwtl
jno
adc
fcomp
unpcklps
cli
jle
mov
push
adc
adc
push
jb
mov
call
bound
repz
mov
mov
mov
pop
adc
xchg
sbb
cli
sahf
inc
ficomps
add
add
add
mov
stos
xor
in
lock
push
jb
adc
movsl
mov
outsb
insl
imulb
inc
xor
cmp
jp
clc
or
subl
jb
push
ret
repnz
jge
stos
fcom
cmp
push
mov
mov
outsb
mov
call
xor
jae
mov
stos
cmp
outsl
sbb
dec
sbb
add
testl
dec
push
xchg
mov
leave
jp
mov
jnp
ret
andl
or
je
sbb
jne
call
or
adc
jae
and
jne
call
lret
add
push
loop
and
cmp
dec
std
lcall
enter
mov
add
aad
loope
aad
add
es
das
push
daa
jmp
sbb
call
pshufw
out
in
frstor
call
pop
sub
and
mov
mov
jp
push
mov
jge
ljmp
fstpl
dec
aad
loope
adc
xchg
out
add
fbstp
aaa
add
add
add
and
pop
gs
lcall
outsb
leave
pop
mov
mov
pusha
jge
repnz
enter
sub
out
xor
fs
ja
push
cmp
xchg
sub
cmpsl
cld
inc
sbb
stos
stc
sub
int
mov
jge
jnp
sub
mov
addb
add
add
scas
lahf
cmp
xchg
sbb
repz
paddusw
fsubr
fmuls
jp
data16
pusha
add
lret
cltd
pop
add
inc
dec
adc
mov
and
mov
and
sbb
xor
es
sbb
cs
cmpl
bound
mov
shll
out
cli
mov
add
add
add
int
stos
xchg
aad
jmpw
test
pop
ljmp
rcrl
cmc
jns
test
or
pop
repz
jo
or
dec
pop
testl
icebp
sbb
imul
into
outsl
push
pop
cwtl
mov
add
sub
leave
pop
adc
push
aad
push
jle
std
incb
add
add
xor
mov
pop
vpsubw
inc
cmpsb
arpl
aam
mov
push
push
cmp
notb
sub
sbb
push
ja
bound
xlat
add
fstps
sqrtps
sbb
testb
cld
inc
lahf
jb
and
loopne
imul
ret
dec
enter
add
add
arpl
sbb
cmp
loope
sub
add
imul
ret
shll
sub
sarb
ret
fnsave
call
inc
jp
lods
xchg
mov
pop
sbb
ret
jbe
add
adc
ja
mov
insb
stc
cltd
bound
lret
or
js
pop
or
add
add
je
daa
xchg
dec
pushf
stos
out
jl
lret
pusha
push
int
scas
inc
cmp
cltd
pop
cmpsl
add
aad
push
pop
dec
roll
mov
xchg
jge
jle
imul
pusha
cmp
insl
or
dec
roll
pushf
xor
adcl
call
sub
aad
addb
int
loopne
ret
out
add
add
add
stc
push
inc
push
mov
jg
fs
jmp
mov
jbe
push
outsw
push
adc
adc
or
sbb
je
shr
jae
lcall
sub
aad
inc
data16
cmpsb
jnp
pop
sbb
push
cltd
fs
jle
push
xchg
shlb
test
mov
add
add
fisubrs
sarb
stc
xor
jae
fs
xor
push
add
jle
test
push
xor
xchg
dec
xor
fwait
jmp
decl
shrl
inc
mov
dec
mov
outsl
inc
and
outsb
aas
add
xor
inc
mov
push
add
fsub
sbb
imul
xor
add
add
ja
or
shr
adcb
lret
cmp
jo
sbb
pop
lds
add
sub
and
mov
sub
test
and
mov
iret
sbb
std
adc
pop
jmp
shl
push
in
jns
jne
and
xor
nop
pop
mov
pushf
add
add
add
aaa
mov
and
push
call
mov
jnp
mov
imul
adc
mov
shlb
mov
adc
les
test
jb
xchg
mov
ss
incb
pop
sub
inc
pop
pop
adc
mov
cwtl
nop
aam
sub
add
outsb
sub
add
add
fcoms
inc
popa
ja
add
inc
push
cmp
add
jle
fs
rcr
dec
int3
adc
xor
cmp
xor
fistpll
adc
jmp
out
xchg
push
sbb
inc
test
out
hlt
xchg
int
push
test
add
push
mov
add
add
das
xchg
add
push
das
and
scas
xor
jb
xor
xor
push
aaa
fistpl
pop
jae
pop
push
and
out
and
xchg
fcomps
pop
cmp
out
or
hlt
ret
dec
popf
inc
or
sub
push
ss
adc
clc
inc
pop
ret
sub
pop
adc
jbe
in
add
xchg
cli
testb
add
add
push
add
icebp
stc
out
ret
cmp
sar
add
push
xchg
or
cltd
adc
push
or
lea
ja
stc
mov
stc
adc
push
cmp
stc
ljmp
pop
pop
inc
xchg
je
xchg
repnz
dec
adc
outsl
das
ja
test
and
push
mov
ret
push
je
sbb
add
add
rorl
adc
xor
stc
imul
psadbw
unpcklps
aad
addb
fstpt
in
call
mov
pop
mov
rolb
mov
and
cmpsl
enter
out
cs
sub
stos
mov
or
shrl
repnz
sbbb
jbe
add
jns
inc
jae
add
add
pusha
jnp
jmp
lods
std
fsubrp
adc
push
push
lds
mov
fdivrl
adc
or
mov
call
jle
fimuls
gs
pop
sbb
xchg
lds
add
outsb
or
std
sub
cltd
adc
sbb
es
fiaddl
xchg
push
xchg
sub
fs
test
icebp
or
add
sbb
mov
lahf
pop
inc
adc
fistps
jno
cmp
and
clc
cld
mov
jnp
jbe
sbb
add
jo
mov
sbb
inc
insl
sub
popa
xchg
and
mov
push
rcrl
inc
jnp
jbe
or
xchg
add
jo
mov
sbb
aas
mov
push
jge
dec
jae
mov
add
add
je
dec
or
mov
out
cld
sahf
pop
jmp
and
mov
mov
xor
movsb
jge
popa
inc
push
pusha
cs
je
adc
incl
dec
lea
call
mov
add
inc
std
call
pop
shl
in
adc
jmp
bound
add
mov
add
add
lret
add
sti
adc
cmp
xchg
sub
shlb
add
adc
or
dec
cmp
mov
add
or
pusha
testb
dec
push
xor
je
es
inc
insl
adc
mov
or
aas
add
loope
idivb
add
inc
add
add
add
jge
push
lea
add
adc
add
ja
ljmp
xor
cwtl
inc
add
sahf
cli
mov
jb
orb
lsl
popa
xlat
std
xchg
pop
add
mov
sub
mov
add
inc
ss
add
push
xor
and
outsl
int3
call
add
mov
js
in
jmp
in
and
imul
fnstsw
add
adc
leave
fnsave
cli
cmp
call
aad
xor
sbb
sbb
cwtl
fsts
popa
mov
scas
pop
enter
sbb
test
jecxz
cmp
mov
or
pop
cwtl
lock
ja
add
cmc
inc
pop
clc
icebp
add
add
add
dec
sub
stc
add
outsb
ja
adc
xchg
push
sar
es
or
in
push
cwtl
and
data16
pop
pop
adc
test
cmp
out
mov
xchg
cmp
test
add
xchg
xchg
jp
pop
pop
or
imul
pop
imul
xchg
pop
cli
push
rorb
test
add
add
add
dec
xchg
xchg
xor
inc
adc
rcrb
jae
inc
or
test
mov
cmp
dec
push
add
in
or
adc
shr
adc
jmp
sbb
mov
jge
push
push
jb
mov
aad
fs
push
inc
test
int3
je
out
pop
cmovs
add
add
repz
je
lret
pop
push
add
mov
push
sub
mov
mov
push
xlat
cmc
fnsave
orl
push
dec
pop
clc
push
lahf
scas
sub
je
xchg
cmp
jne
cwtl
out
je
loop
mov
xor
jge
jae
mov
add
negl
iret
or
add
add
add
jmp
divb
sub
lock
mov
xchg
lret
leave
inc
xor
xor
xchg
or
in
cmp
cli
sub
jecxz
jno
sbb
push
add
pop
mov
fwait
ret
push
in
std
jmp
cld
sti
rol
push
stc
push
repnz
pop
ljmp
sub
mov
add
mov
cli
xchg
mov
test
out
rorb
les
adc
std
fnsave
js
dec
adc
orb
push
orb
shll
add
inc
or
daa
add
dec
lret
clts
jno
std
pop
aam
pop
inc
or
cmp
cli
cld
push
xlat
mov
xor
add
add
xor
sar
or
out
fisttpl
or
in
pop
mov
fildll
jmp
adc
add
rcrb
adc
lea
fistpll
sahf
fs
cs
stos
fmulp
stc
xor
pop
in
stc
pop
adc
mov
pop
mov
cmp
xchg
ja
nop
xor
je
out
call
add
add
mov
sub
lds
test
dec
jmp
jo
test
hlt
sbb
mov
inc
call
cmp
push
and
or
adc
sbb
adc
and
outsl
popf
or
add
push
and
pushf
loop
pop
cld
test
and
adc
mov
xor
add
or
add
add
mov
testb
test
inc
dec
push
enter
fimull
test
pop
and
jecxz
testl
jb
mov
add
imul
add
les
rcll
push
jns,pt
xchg
add
les
rolb
sub
imul
add
add
add
call
jmp
xor
adc
hlt
jae
nop
das
cli
pop
je
lock
or
inc
dec
imul
jns
das
sub
add
jecxz
push
jbe
call
fnsave
mul
mov
insl
inc
fmuls
stos
std
sbbb
addb
imul
add
add
dec
sub
push
addr16
cmp
jl
adc
add
xchg
adc
andl
add
mov
mov
adc
dec
xchg
push
or
fsub
push
jecxz
sbb
sahf
adc
imul
xor
adc
stos
or
in
pop
inc
adc
fdiv
xchg
push
add
add
icebp
call
jg
mov
mov
outsb
inc
push
nop
cmpsl
adc
insl
mov
inc
mov
sub
shlb
ret
call
insb
popf
pop
push
push
jns
stc
jmp
jo
stc
sbb
aas
sub
cld
int
inc
jmp
mov
xlat
stc
inc
roll
sub
add
add
mov
sub
movsb
adc
inc
or
or
stc
push
lea
iret
icebp
adc
stc
mulb
or
stc
out
rcrl
and
dec
push
bound
inc
add
inc
jp
add
adc
aas
add
fidivrl
js
mov
xchg
push
push
jecxz
mov
add
add
push
push
add
xor
or
lea
or
aad
outsb
add
add
jnp
add
not
mov
jnp
add
jecxz
mov
push
add
call
gs
inc
lret
loop
call
xchg
pop
and
or
add
pop
or
mov
add
add
adc
aaa
fsubrs
mov
out
scas
pop
mov
stc
xlat
cli
or
sub
subb
jno
ret
pop
movsl
sub
dec
cwtl
xchg
in
sbb
ljmp
mov
adc
outsl
stos
std
sbbb
cli
sub
pop
ljmp
bound
sbb
test
adc
rolb
add
add
enter
mov
mov
and
add
sub
mov
pop
adc
mov
neg
fnstcw
std
mov
outsb
ds
and
mov
adc
sub
bound
pop
mov
pop
adc
mov
out
inc
fsub
add
dec
fisttps
pop
mov
push
pop
adc
mov
add
add
dec
stos
adc
add
push
out
pushf
or
sbbl
inc
sbb
add
pop
adc
cmp
add
clc
sbb
inc
mov
adc
jmp
push
adc
pushw
add
loope
cmp
sub
data16
adc
push
push
add
pop
push
cmp
sub
and
sahf
adc
add
pop
imul
mov
cmc
aam
xchg
je
or
pop
sub
push
in
mov
movsl
pop
std
ljmp
or
data16
pop
ficoms
dec
dec
or
sub
in
or
cmp
mov
mov
adc
cld
in
fistl
push
testl
add
pop
and
icebp
ja
add
clc
xchg
add
inc
push
inc
or
pop
and
mov
push
mov
lahf
jo
jmp
cmp
je
cmc
test
call
mov
sub
pop
sbbl
std
ljmp
jp
cmp
push
push
lea
fcompl
add
out
test
loopne
clc
push
sbb
addr16
or
add
add
in
movl
add
push
add
mov
add
adc
stos
or
call
movsl
inc
pop
sub
les
mov
cli
shl
jp
ss
cli
cmp
call
mov
les
cmc
ljmp
adc
jle
or
movntdq
jae
mov
add
jecxz
xchg
adc
cld
icebp
xlat
jmp
fs
push
hlt
insl
dec
push
xchg
aam
jg
push
aaa
jge
mov
or
jmp
imul
adc
push
cltd
iret
out
add
and
pop
mov
pop
push
xchg
stos
inc
pop
out
fndisi(8087
pusha
dec
cs
xlat
fnstenv
stc
inc
pop
nop
and
aad
pop
jnp
add
add
test
dec
mov
aam
ss
je
lods
inc
mov
flds
popa
mov
xchg
inc
or
push
push
lock
sbb
stc
cld
jmp
push
clc
insb
popf
pop
or
jecxz
inc
adc
sub
or
lret
jmp
aaa
xor
pop
sbb
and
add
add
add
add
fdivs
outsb
lods
add
rcl
movsb
ljmp
popf
adc
adc
testl
mov
fsubr
lds
rolb
rcl
clc
jne
loope
xorb
mov
add
sub
inc
push
insl
sub
or
add
xchg
push
pop
inc
add
add
add
dec
add
xchg
or
jb
or
pop
add
stc
pop
add
divl
test
mov
or
sub
mov
jb
sbbb
std
xchg
or
lcall
subb
call
mov
out
divb
inc
and
jmp
add
add
icebp
fldt
mov
adc
aad
and
mov
mov
cli
mov
add
test
fstpt
and
adc
pop
hlt
repnz
out
ljmp
adc
add
cli
and
pop
ret
add
cmc
mov
inc
jmp
adcb
add
addr16
fimull
repz
out
mov
loop
pop
lcall
xor
fildl
sub
loop
andb
jmp
inc
or
mov
in
cmpsl
pushf
mov
mov
cmc
in
pop
adc
adc
sbb
adc
dec
sahf
and
jbe
enter
outsb
mov
out
add
adc
lret
add
add
add
je
push
mov
test
ret
adc
mov
ds
stc
jmp
jbe
call
fs
inc
and
push
and
inc
sbb
add
xchg
ret
sbb
cmp
insl
and
xor
std
call
fists
add
loopne
jp
add
add
add
xchg
rclb
enter
jb
imul
lea
arpl
add
mov
add
pop
filds
dec
inc
divl
or
xchg
pop
add
divl
jl
call
mov
aad
fwait
dec
jg
mov
add
mov
scas
mov
add
add
cmp
dec
icebp
stc
incl
inc
and
lahf
or
add
add
out
add
inc
and
pop
nop
mov
popa
lahf
inc
push
sbb
std
push
in
dec
repnz
add
pop
mov
imul
lods
out
and
je
stos
stos
add
std
xor
scas
testb
scas
sub
mov
add
pop
mov
add
add
add
jge
add
scas
and
mov
out
jp
aad
pop
mov
aad
dec
mov
sbb
cltd
mov
lret
xchg
add
sbb
jl
clc
sbbl
cmp
ljmp
outsb
movsl
notl
adc
scas
cwtl
js
ficoml
out
jecxz
or
cmpl
add
jo
add
add
add
pop
cwtl
pop
push
lods
data16
std
imul
push
cs
mull
jae
sahf
adc
loope
jmp
adc
or
inc
jmp
sahf
mov
addr16
adc
add
int3
adc
insb
int3
cld
xchg
out
pop
sbb
outsl
js
adc
mov
sbb
inc
and
xchg
flds
and
in
add
and
jb
add
add
adc
add
xor
int3
pop
pop
mov
pop
test
lock
call
pop
inc
or
adc
inc
jmp
loop
add
pop
cltd
adc
daa
mov
int
jp
pop
inc
or
dec
sbb
aam
and
fisubrl
or
pop
mov
push
int3
stc
jmp
dec
xchg
dec
mov
add
add
sub
add
dec
push
add
cli
mov
js
clc
div
sub
inc
mov
cmp
cmp
add
enter
arpl
pushl
adc
loopne
clc
push
ret
push
divl
ja
mov
dec
add
xchg
sub
testl
add
add
push
call
clc
adc
add
add
add
push
or
pop
in
adc
mov
dec
push
mov
push
and
mov
add
loop
cmp
sti
imul
add
xchg
mov
mov
inc
cmp
je
insl
inc
and
mov
andb
rcrl
std
clc
imul
inc
pop
xor
loope
add
add
add
sub
cmp
repnz
lcall
and
adc
jl
js
xchg
fmull
dec
adc
sub
cld
push
out
xchg
and
push
push
adc
inc
sub
sub
cmp
adc
out
test
inc
pop
xchg
sub
outsb
pop
retw
arpl
aas
andb
into
mov
add
add
xor
out
mov
mov
ljmp
scas
cmp
mov
push
loope
jmp
cmp
cmc
push
andb
mov
sbb
into
push
leave
call
pop
push
adc
jmp
sbb
adc
mov
mov
clc
call
cmpsl
adc
scas
jnp
mov
add
and
push
pop
xchg
lods
push
test
cmp
mov
imulb
push
jo
in
or
add
popf
adc
imulb
add
pop
adc
insl
jl
add
imul
clc
add
scas
pop
test
or
and
aaa
or
lods
je
add
add
add
or
cmp
dec
push
inc
pop
sbb
dec
icebp
adc
es
divl
dec
dec
and
scas
or
test
ss
mov
sbb
loop
addl
les
add
jecxz
into
lahf
mov
mov
lods
je
adc
add
pop
dec
push
mov
addl
add
pop
aam
jge
in
inc
bound
jnp
xchg
and
sarb
fdivrl
mov
mov
mov
xor
call
dec
js
pop
and
cmp
bound
ss
pop
mov
push
mov
pop
and
inc
push
and
aas
notl
dec
clc
add
push
sub
add
ss
add
std
ljmp
insb
std
clc
push
sbb
aas
pop
xor
sub
fwait
pop
lea
mov
pop
xor
stc
imul
call
nop
and
divb
fisttpl
add
testl
push
fsubl
sahf
cmp
mov
in
mov
pushf
add
out
xchg
dec
add
add
add
pop
jp
and
add
shl
clc
loop
or
push
add
lea
hlt
lcall
out
add
add
cld
push
push
test
ss
movsl
jns
call
cmpsl
roll
mov
std
jecxz
sbb
dec
aaa
push
mov
bound
adc
stc
insl
add
add
add
mov
jb
loop
add
pop
inc
loop
aas
inc
and
das
lret
aas
inc
in
xchg
lret
repnz
cmc
sub
fdivrl
leave
pop
mov
dec
mov
cli
sti
add
or
in
call
insb
push
lock
cmp
xlat
mov
push
add
mov
cmp
mov
push
loopne
add
out
adc
in
mov
in
xor
add
verw
mov
mov
add
push
orl
aaa
xchg
lock
pop
es
lret
adc
mov
or
add
cwtl
pop
and
mov
test
push
or
and
push
jbe
and
inc
add
add
add
add
outsb
iret
cli
loope
cmp
jae
repz
pop
das
pop
sub
mov
getsec
clc
pop
mov
imul
cmc
fistl
in
fcoms
ret
jae
idivl
pop
xor
idivl
data16
push
xor
rcr
in
and
shlb
add
mov
loop
stc
add
add
add
idivl
pop
adc
sbb
insb
int
and
push
cwtl
call
in
push
aam
fistpll
mov
xor
push
mov
xor
pop
outsb
in
mov
jnp
jno
pop
fsubl
dec
or
sub
fists
sbb
inc
adc
cs
add
enter
add
add
setbe
sub
lahf
push
lahf
shrb
pop
mov
shrl
repz
in
add
jb
push
outsb
es
inc
add
pop
popa
push
shll
add
ss
add
shll
and
out
je
in
and
fcmovb
xchg
mov
test
lds
mov
nop
lahf
or
jb
add
add
push
cmc
add
lcall
sub
ds
loope
jmpw
inc
stos
aad
or
popf
jg
jmp
out
mov
incb
pusha
popf
adc
addl
mov
add
push
or
or
je
or
divl
stos
sti
incl
adc
or
add
mov
jle
mov
add
add
jle
dec
add
pop
sub
dec
repz
ljmp
clc
sbb
xchg
adc
push
add
push
inc
adc
push
add
adc
pop
push
add
adcl
push
cld
loop
jle
adc
push
call
fisubrl
add
push
add
xor
orl
inc
and
xchg
add
and
or
inc
dec
stc
push
or
push
and
pop
stc
out
in
mov
in
in
xchg
faddl
rorb
pop
xor
pop
cmpl
adc
aas
bound
das
test
push
call
sub
idiv
xchg
xchg
mov
fwait
cmp
add
add
add
push
ret
repz
cmc
mov
test
les
and
adc
fsubl
cmc
xor
outsb
lret
notb
xchg
daa
push
mov
or
int
inc
mov
test
push
shr
and
mov
in
mov
and
push
inc
and
lret
add
add
inc
sbb
daa
add
pop
add
or
pop
mov
inc
mov
jns
xor
mov
pop
jl
icebp
pusha
jl
pop
addr16
popa
jle
jb
cmc
pop
jb
adc
stc
bound
push
xor
mov
dec
and
mov
push
jb
test
repnz
popa
or
xchg
pop
xchg
lret
add
add
dec
cli
fcmovne
pop
sub
bound
xchg
adc
push
push
aas
and
jmp
test
inc
or
stc
je
xchg
rolb
xchg
clc
fnstcw
xor
xor
data16
mov
dec
add
mov
mov
decb
add
add
mov
adc
test
pcmpeqb
add
add
out
xor
xabort
xchg
add
divps
dec
sub
rcrl
add
and
inc
jle
or
cmp
je
roll
adc
adc
in
and
movsbl
in
jmp
pop
aaa
adc
stc
dec
in
fcoms
aas
int
dec
pushf
dec
push
aad
pop
adc
mov
dec
inc
mov
imul
add
add
mov
inc
jo
add
test
mov
daa
mov
pop
fstl
jb
fdivp
in
fsubrp
mov
in
adc
test
les
push
and
test
or
aaa
and
inc
addr16
out
test
aaa
pop
cmp
out
jecxz
callw
push
or
pop
xor
fcmovnu
bnd
adc
add
cmp
add
add
add
addr16
dec
add
adc
push
popa
xchg
icebp
popf
and
add
dec
out
andb
lretw
sub
sbb
fcmovbe
pop
xchg
popf
fnstsw
lds
inc
mov
jo
xchg
xor
xchg
loop
outsb
mov
and
mov
pop
mov
xchg
or
jge
add
add
add
adc
shlb
mov
in
je
out
add
push
flds
in
mov
call
aam
call
bound
mov
call
mov
sbb
jmp
add
dec
mov
mov
test
cmpsb
mov
inc
hlt
adc
add
add
pop
push
stc
push
inc
shll
inc
or
es
idiv
sub
hlt
test
or
or
adc
dec
call
std
je
into
mov
adc
incb
push
mov
stc
rol
adc
mov
in
push
aas
push
arpl
jg
enter
shlb
enter
jp
add
add
add
add
or
sub
mov
popa
and
neg
or
cmpl
inc
iret
mov
pop
xor
adc
add
cwtl
mov
aad
sbb
in
add
shlb
cmpb
add
pusha
and
outsb
gs
orb
addr16
pusha
jbe
decb
fcom
dec
push
inc
sub
mov
and
add
sub
xor
sbb
std
test
mov
or
sbb
pop
pusha
int
clc
pop
mov
pop
lea
mov
cld
popa
aas
ljmpw
fildl
out
push
mov
mov
fldenv
dec
jge
inc
mov
in
cmp
aaa
pop
pop
pop
sar
add
add
add
pop
daa
add
int3
repz
ljmp
addr16
lahf
mov
stc
lods
mov
sub
cld
aaa
dec
push
out
and
or
lcall
xor
adc
jle
stos
ss
mov
jb
addb
bound
inc
in
rorb
push
jb
std
cmp
cmp
add
add
jne
movsl
xchg
icebp
in
adc
rorl
adc
pusha
rolb
mov
sub
push
stos
push
mov
bound
inc
dec
pop
leave
movsb
sub
adc
inc
callw
test
adc
jmp
push
test
subl
mov
shll
dec
dec
xchg
add
add
fsubs
adc
jecxz
ret
orb
inc
adc
pop
loope,pt
mov
lret
jnp
das
adc
add
in
pop
xorl
divl
loope
jge
testl
jbe
or
add
add
aaa
adc
iret
iret
divl
dec
push
mov
lods
loopne
mov
add
add
cli
mov
pop
loopne
cld
insb
shl
adc
les
jp
lret
sti
fldenv
cld
cs
mov
fucomi
dec
aad
test
pop
cmpsl
out
add
repnz
loopne
xor
jl
jbe
cld
incl
push
daa
aaa
jmp
add
xor
mov
stc
shll
add
add
add
repnz
jo
add
mov
sub
xor
in
sub
push
in
and
das
dec
and
adc
pop
mov
xchg
in
idivb
mov
sbb
out
sbb
push
aaa
xchg
xor
sub
cmp
and
lock
out
mov
ljmp
pop
outsb
shrb
xchg
add
add
add
out
sahf
cmp
jp
and
add
popf
adc
dec
outsl
inc
jp
data16
dec
cmp
outsb
ret
addr16
and
out
lret
push
mov
pop
adc
add
mov
fisttpl
in
mov
xchg
fnstenv
mov
cmp
pop
dec
and
fdivrl
enter
add
add
mov
xchg
dec
xor
repnz
test
adc
jmp
fdivrl
inc
flds
jbe
jmp
push
and
je
mov
push
sahf
add
pop
adc
jmp
pop
adc
xchg
repnz
adc
add
sbb
jl
xchg
clc
add
lods
addl
rolb
add
add
xor
decl
lods
xchg
int
clc
nop
fistpll
sbb
jge
or
sbbl
push
addl
call
jne
sub
call
insb
pop
or
fiaddl
add
mov
xchg
add
mov
ds
hlt
ss
add
aaa
fs
aaa
push
into
pop
daa
add
inc
sub
add
add
inc
xchg
jl
pop
scas
std
jb
les
cmp
std
xchg
mov
mov
pop
into
hlt
adc
add
pop
into
push
test
dec
add
pop
adc
decb
js
outsb
clc
add
and
pop
and
stc
aad
addb
mov
xor
inc
push
cmp
add
mov
mov
add
add
add
fadds
jbe
lcall
mov
sarb
sti
cmp
insl
aas
jp
arpl
adc
add
es
sub
jle
fistl
pop
jmp
daa
dec
sub
andl
fdiv
out
divl
cs
inc
push
xchg
mov
scas
mov
add
lods
repz
rol
add
add
add
adc
aaa
dec
sahf
js
dec
and
filds
mov
outsb
int
push
aaa
lret
out
xor
xor
lcall
mov
test
dec
scas
add
fmul
inc
and
jmp
mov
icebp
das
push
xchg
push
and
or
bound
jmp
inc
adc
jb
mov
pop
scas
add
add
add
jl
aas
xchg
xchg
sarb
das
add
xor
jge
adc
sbb
movsb
cltd
xchg
cmp
pusha
pop
test
std
pop
lahf
pop
mov
out
rolb
sbb
inc
add
sbb
or
lea
mov
pop
out
lret
lret
add
add
jmp
dec
push
jno
cmp
jg
add
adc
jns
xlat
xor
ret
enter
dec
divl
sbb
jg
mov
add
rep
xchg
sbb
add
sub
jle
adc
test
cmpsl
jge
ja
add
xchg
insl
push
cmp
jae
pop
call
cli
test
inc
and
add
add
jbe
cmp
sub
lds
jp
sub
xchg
cmp
add
jne
sbbb
push
pop
dec
xor
rcl
test
dec
sarl
xor
imul
sbb
adc
addr16
stc
in
faddl
sahf
test
pop
push
shl
or
in
adc
test
add
add
testl
cmc
inc
pop
xchg
cmpsl
dec
sbb
cmp
cmp
cwtl
push
pusha
ss
enter
xor
add
fwait
add
addr16
adc
jbe
or
ja
mov
add
adc
pop
stos
fs
inc
inc
pop
jns
adc
add
inc
push
enter
sbb
out
xchg
adc
add
xchg
fistl
add
add
ret
adc
pop
es
enter
add
mov
leave
xchg
dec
mov
pop
ret
inc
add
into
jne
jmp
sub
xlat
and
cwtl
xor
pusha
rorl
jmp
and
jmp
push
mov
in
insb
shll
push
stos
mov
add
add
jb
add
inc
inc
push
sub
xchg
in
push
inc
push
bound
adc
jmp
nop
pop
cli
cs
or
adc
jmp
imul
pop
adc
adc
outsl
btc
push
cld
insb
call
add
add
ja
pop
test
adc
add
sub
mov
addl
inc
in
xchg
loope
pop
add
add
add
push
shl
push
mov
int3
push
xchg
jmp
idiv
mov
je
pop
stos
arpl
test
outsb
je
cmp
add
xchg
les
aam
pop
lods
adc
repnz
imull
sub
loopne
adc
movsb
xchg
pop
add
or
mov
push
jmp
int
jecxz
fucomp
cmp
add
add
jp
adc
jmp
jno
ds
cmp
shrb
cmp
mov
mov
mov
stc
enter
pop
xor
push
push
jbe
cli
jmp
and
pop
test
dec
adc
test
or
lods
jmp
pop
orb
sahf
add
out
mov
add
add
jmp
mov
pop
push
in
adc
pushf
push
add
mov
flds
js
pop
adc
fcoms
cmpsb
and
mov
aas
outsb
cmp
popa
sbb
cmp
cmpsl
out
mov
cmp
testl
jno
pop
adc
js
add
add
inc
in
ljmp
in
fidivrs
addl
in
inc
movsb
shl
and
cltd
or
and
mov
lcall
jmp
pop
xchg
nop
jmp
jmp
xchg
jmp
loope
xchg
jmp
fmull
cli
cs
xchg
jmp
lahf
mov
xor
lret
stc
stc
add
add
add
sarb
rorl
add
in
inc
or
stc
jb
in
pop
insb
es
sbb
mov
inc
and
xchg
call
cmp
jge
dec
orl
cmp
jg
jge
pop
shl
incl
scas
sbb
clc
push
in
jg
push
icebp
pushl
lcall
arpl
divl
add
add
loope
push
shl
mov
mov
repz
in
mov
sbb
notl
subl
mov
add
clc
jl
pop
pop
xor
xor
mov
std
lcall
add
jne
mov
out
xchg
add
lods
scas
mov
ja
mov
dec
add
add
add
jl
test
inc
push
jo
or
std
inc
adc
add
pusha
and
out
je
sbb
push
loop
test
mov
jmp
inc
cwtl
add
xor
repnz
xor
mov
nop
pop
adc
add
pop
cmp
push
pop
push
sti
cmpsb
add
dec
or
cmp
jmp
add
add
add
push
pop
adc
cld
mov
push
mov
jp
pop
adc
cli
out
out
pop
push
push
cmc
mov
mov
out
pop
clc
test
fistpll
add
jp
inc
mov
or
mov
fisttps
add
sub
out
mov
dec
out
insl
pop
cwtl
bound
add
add
add
shll
xor
add
test
jmp
imul
mov
jmp
mov
xchg
pop
icebp
call
in
add
sahf
inc
add
lea
call
bound
add
and
xchg
adc
jmp
pop
adc
fnstcw
add
add
add
inc
int
inc
dec
xor
xlat
call
lret
add
cli
jl
pop
mov
adc
adc
inc
testl
mov
xchg
xor
add
loope
mov
jno
add
or
sbb
xchg
jne
mulb
or
shll
hlt
and
add
add
add
test
xor
test
adc
mov
sbb
jnp
or
push
shr
and
stc
inc
push
pop
ljmp
pop
and
ds
ret
xchg
ds
lcall
inc
and
stos
stos
xchg
sbb
lcall
rorl
cli
cwtl
ljmp
cwtl
shrb
cld
cwtl
cli
stos
std
incl
add
add
or
mov
and
and
stc
es
or
mov
fcomps
call
jle
add
xchg
in
out
xlat
mov
and
pop
adc
pop
mov
ds
mov
testl
popa
mov
pusha
pop
jl
jbe
call
and
push
iret
fs
adc
add
add
add
add
add
dec
mov
clc
scas
cmp
fidivs
add
adc
icebp
cwtl
mov
mov
mov
pusha
mov
adc
add
cwtl
jae
pop
adc
add
pusha
out
adc
add
pop
add
push
ret
mov
add
imul
add
in
mov
add
add
add
adc
jmp
pop
adc
jmp
jno
add
or
icebp
pop
and
push
sti
cwtl
test
adc
jmp
adc
out
jo
jmp
lret
loope
and
jmp
stos
cwtl
test
sbb
sbb
out
mov
add
add
xchg
pop
push
add
jmp
add
adc
fs
cmpsl
mov
add
adc
jl
je
add
adc
dec
push
cmp
call
mov
outsb
gs
cmp
call
mov
nop
divl
mov
jle
xchg
add
repz
jp
jecxz
outsb
adc
arpl
shl
dec
incl
add
add
xchg
dec
push
inc
ja
les
sbb
je
xchg
jbe
aaa
jecxz
lcall
xor
scas
cmpsl
mov
adc
add
adc
pop
stos
andb
mov
xchg
push
jmp
mov
push
mov
sub
lods
push
and
or
cmp
xchg
data16
mov
add
add
push
jl
or
push
pop
inc
jns
jae
mov
in
mov
xor
mov
aas
or
jne
ds
std
xor
mov
movsl
add
and
pop
adc
pop
jecxz
sub
jo
xor
add
jge
mov
lods
mov
add
testl
adc
and
add
add
call
test
rclb
out
pop
dec
cs
insl
sbb
out
dec
push
add
jae
add
adc
mov
pop
cmc
out
fists
fists
add
adc
jmp
aam
mov
pop
adc
adc
push
dec
push
pop
xchg
jl
sub
add
add
add
push
add
mov
call
xchg
movsl
call
push
xchg
popf
call
gs
and
xchg
ret
lock
cmc
sbb
sbb
aas
jmp
popf
or
stos
xor
sub
pop
pusha
adc
and
ljmp
sbb
gs
push
add
add
add
test
dec
push
xchg
push
cmp
cmp
jge
xor
add
inc
xor
dec
or
xchg
inc
and
sahf
insl
lahf
push
shlb
add
inc
test
loop
je
decb
dec
add
or
das
lea
adc
dec
push
and
push
push
testl
add
add
add
add
stc
push
mov
enter
mov
movsl
movsb
aam
mov
arpl
std
test
jns
pop
lds
pop
stos
xchg
in
add
xlat
out
das
ss
jnp
sbb
movsl
pop
stos
std
test
in
cmpl
test
scas
mov
cmp
pop
lret
xlat
cmpsl
sub
add
add
add
out
mov
sbb
dec
push
mov
add
or
stos
mov
into
outsb
mov
fisttps
shrb
aas
pslld
adc
mov
punpcklbw
and
add
adc
call
jp
arpl
lods
or
fstpl
xor
sbb
add
add
add
cwtl
mov
sbb
jmp
push
in
fisubrl
inc
xchg
rorl
xchg
push
mov
jge
xchg
in
loop
rorl
add
lcall
lret
inc
cltd
stc
push
xchg
std
mov
movsb
push
push
add
in
add
scas
inc
push
jb
in
adc
nop
cltd
jmp
add
arpl
mov
pusha
push
in
adc
rclb
into
adc
pop
lahf
or
nop
add
aad
cmp
fimuls
aaa
popa
fisttpl
aas
lahf
xchg
shrl
add
pop
popl
out
and
scas
adc
popa
push
dec
and
rclb
mov
adc
pushl
mov
jbe
add
cmp
mov
add
add
divl
sbbl
lret
or
xor
mov
mov
jae
ja
pop
jns
or
jbe
dec
push
jl
and
iret
addl
jge
or
test
and
je
cli
xor
dec
and
inc
jge
xchg
xchg
addl
cmp
in
add
add
pop
out
add
bound
in
push
inc
and
mov
push
cmp
jns
lahf
incl
jge
stos
jnp
jle
inc
add
ljmp
add
test
test
xorb
les
pushf
ficomps
add
jnp
decb
jae
fisubrs
jb
stos
ja
fisttpll
inc
add
add
add
add
push
xor
push
adc
add
into
leave
jl
pminub
sub
bound
cld
mov
sahf
push
mov
jnp
adc
jo
mov
mov
insb
inc
push
xchg
cli
jge
in
dec
andl
dec
clc
or
test
ss
in
repnz
adc
add
add
add
lods
in
cli
add
pop
adc
push
dec
cmpsb
aad
mov
arpl
sub
jge
sbb
incb
nop
aam
mov
mov
sub
in
xchg
lret
push
add
cmp
or
nop
test
push
mov
shrb
push
add
add
add
jno
ds
or
je
mov
and
stos
dec
and
mov
mov
test
or
and
test
leave
jnp
rclb
lret
push
or
std
xchg
sub
adcb
jle
adc
or
adc
jl
movsl
in
syscall
shl
call
push
and
inc
and
add
add
add
enter
les
push
cli
mov
movd
jmp
push
test
adc
testl
aaa
cmp
bnd
jl
add
dec
push
mov
inc
push
inc
or
inc
lcall
mov
das
fsts
das
daa
popf
mov
sub
add
adc
dec
add
add
add
push
jbe
jp
out
aam
push
loope
xlat
jae
rdtsc
push
mov
out
add
mov
outsb
add
std
xchg
bound
add
in
loope
popa
dec
mov
je
pop
mov
jp
cli
mov
imul
or
mov
call
or
add
add
fsubrs
aas
inc
and
cmp
xchg
stos
call
push
out
enter
movl
scas
adc
push
push
jecxz
push
adc
add
test
cs
mov
cmp
sbbb
call
adc
xor
pop
inc
jp
pusha
inc
data16
js
xor
add
add
pop
inc
jp
aaa
pushf
inc
nop
ret
sbb
push
jecxz
add
push
call
sbb
xor
test
mov
push
pusha
call
cmpb
add
jno
stc
aam
xchg
iret
inc
into
mov
dec
negl
mov
sub
pusha
call
pop
pop
in
mov
add
add
xchg
jae
pop
cmp
adc
test
dec
pop
and
pop
xlat
jae
gs
test
xchg
dec
add
in
push
leave
mov
loop
popf
adc
or
lods
data16
enter
fdivl
iret
or
dec
inc
add
bound
idiv
or
orl
cmp
out
push
add
add
add
stos
sahf
sti
sbb
push
pop
xor
pop
dec
mov
dec
mov
dec
je
incl
push
or
testb
shll
jge
or
add
mov
es
jno
or
mov
or
xchg
mov
mov
stc
loopne
add
add
add
shlb
js
ret
jp
xchg
jno
mov
les
push
ret
or
int
in
in
sub
int3
in
inc
adc
call
sahf
shr
test
andb
mov
push
cmpsb
outsl
adc
add
mov
jp
inc
xchg
stos
stc
xor
into
adc
shl
jle
sbb
stos
lea
mov
add
pop
ret
rcrb
push
jecxz
adc
sbb
adc
xor
dec
jecxz
mov
push
add
pop
xor
repz
out
jle
sbb
stos
orl
nop
cli
out
sub
jecxz
sub
js
stos
clc
sbb
push
mov
push
inc
cmp
inc
js
jle
add
add
xchg
sbb
mov
loope
shll
stc
fisubs
call
test
lods
loop
rolb
inc
xor
pop
out
les
sbbl
sbb
pop
xchg
jp
stc
jbe
push
je
xor
in
outsl
pop
xchg
ret
xchg
lret
mov
pop
lahf
sbb
or
add
add
add
data16
lret
push
push
pop
add
and
jbe
jmp
jp
add
test
add
dec
gs
inc
sarb
inc
adc
add
loopne
mov
xchg
cmp
adc
adc
dec
push
pop
mov
incl
test
pop
adcl
inc
pop
or
je
add
add
add
sbbb
push
cmp
stc
je
in
mov
fdivrs
decl
ja
mov
call
loop
sub
fstl
mov
jns
sbb
jecxz
add
cmp
mov
mov
push
aad
jne
data16
push
mull
add
add
add
pop
sub
clc
push
mov
jae
push
add
mov
str
add
popf
and
in
or
cmp
es
pop
xchg
stc
mov
ret
jae
xchg
add
pop
jmp
repz
jp
sbb
ret
lahf
xor
jecxz
pop
adc
cli
fcmove
ljmp
adc
in
add
add
add
pop
push
adc
adc
or
push
cmpsl
lea
cli
cmpsb
dec
cmc
inc
pop
fstps
fwait
sbbl
dec
daa
outsb
sub
xor
jae
test
mov
out
jmp
mov
ljmp
ja
daa
out
dec
mov
mov
cwtl
in
pop
mov
add
add
add
std
or
in
test
add
add
ja
pop
std
and
pushf
inc
aad
mov
addr16
cmp
adc
mov
xor
sbb
cld
std
fsts
mov
add
pop
jb
sbb
cwtl
xor
push
mov
push
fbstp
sub
mov
rorl
add
add
cmp
or
mov
loope
cmp
or
add
pop
sub
lcall
shlb
ljmp
call
mov
int3
push
leave
lds
dec
push
jl
and
pusha
or
cmp
aaa
or
and
push
int3
test
es
or
add
add
add
push
pop
mov
js
jne
loop
push
cmp
dec
push
adc
pop
insb
inc
pop
and
jg
inc
inc
jo
mov
mov
pop
call
mov
dec
add
and
jnp
or
xor
test
jnp
or
cmp
adcb
sub
or
sub
and
cmp
sbb
or
add
hlt
add
dec
add
and
outsl
push
shlb
std
jmp
sub
pop
in
clc
cld
shrb
sbbl
in
test
push
fldl
adc
push
dec
loop
test
int3
lret
cmpsl
mov
sub
jno
adc
lea
sub
inc
mov
sub
mov
add
add
mov
cwtl
stos
out
adc
sahf
shlb
add
mov
adc
lea
outsl
add
lret
std
xchg
cmpb
jecxz
pop
add
lret
fstl
fmuls
pop
add
lret
int
xor
dec
andb
inc
jp
add
jp
xchg
mov
pusha
pop
mov
ficoms
mov
add
add
jle
orl
sub
subb
fcmove
and
rcl
and
loop
and
and
add
and
outsl
xchg
repz
not
sub
aad
and
in
and
testb
dec
xchg
mov
pop
adc
in
int3
mov
cmp
mov
jne
add
xor
inc
and
adc
add
imul
xchg
dec
and
xchg
je
jae
add
mov
jle
push
int3
dec
xor
bnd
pop
sbb
sbb
sbb
aas
sbb
jl
lods
shll
and
gs
aas
cwtl
inc
and
xchg
inc
and
xchg
pop
and
mov
lds
pop
pop
insl
jle
xor
xor
add
add
jne
add
and
or
negb
add
test
je
push
mov
mov
in
mov
jb
inc
and
bswap
aas
xor
adc
and
dec
or
je
inc
addb
pop
lcall
push
dec
and
add
dec
icebp
sub
clc
sbb
add
add
mov
mov
xchg
push
add
mov
lods
or
lds
pop
mov
pop
and
adc
mov
rcrl
push
xchg
sub
push
cltd
jecxz
pop
xchg
movsl
les
or
mov
sub
dec
or
or
clc
add
dec
data16
jo
mov
xor
sub
rorl
lcall
add
mov
out
mov
fisttpl
mov
jne
cmp
popf
mov
call
jb
je
shrb
push
cmp
and
in
and
in
and
aam
and
es
jo
xor
mov
bound
and
xor
add
add
xor
and
das
jnp
ds
and
sbb
ljmp
xchg
insb
lds
inc
pop
lds
mov
sarl
jb
xor
cmp
xchg
ret
fcoml
cmp
ret
jmp
inc
mov
dec
subl
mov
mov
inc
cmpl
add
add
add
leave
and
aad
add
popa
out
movb
and
ror
push
xchg
insb
and
pop
bndcl
mov
inc
push
gs
mov
push
pop
lea
add
bound
out
sub
pop
sbb
pop
dec
jp
mov
push
dec
rclb
daa
and
pop
icebp
dec
and
add
add
cmp
dec
and
add
and
add
xor
and
push
jmp
shll
or
sbb
or
and
xor
and
mov
sub
int
cwtl
imul
repnz
sbb
shll
call
pop
pop
addl
push
movsl
incl
and
add
add
mov
adc
xchg
std
jb
adc
lea
cmp
loopne
mov
loopne
jle
loopne
shll
xorb
sbb
push
shll
ret
add
aam
pop
jno
ret
adc
insl
sbb
out
pop
cmp
mov
xor
pop
add
filds
add
add
pop
adc
cmp
scas
bound
mov
and
out
fimuls
filds
loopne
jae
mov
jge
out
leave
and
sbb
and
call
hlt
inc
rclb
adc
in
cli
sbb
mov
int
xchg
dec
je
mov
lds
add
add
test
hlt
jp
js
push
jae
in
and
ror
and
loopne
and
les
add
imul
and
aad
and
add
xchg
inc
add
cmp
je
je
notl
je
or
stos
jno
mov
jno
mov
jno
xorl
push
and
add
add
rcrl
xchg
mov
lcall
arpl
cmp
jl
xchg
jne
ja
mov
add
mov
inc
inc
cmp
fs
test
sbbb
dec
xor
mov
insb
and
push
xchg
xchg
xchg
xchg
inc
add
add
add
mov
mov
push
call
inc
out
loopne
out
loopne
sub
ljmp
pop
sbb
xor
fiaddl
lcall
cmp
fldl
xlat
sub
setns
pop
pop
push
fcompl
rclb
aad
fstps
in
fnstenv
clc
and
push
pop
mov
scas
jnp
dec
jae
push
add
add
test
mov
xor
rorl
or
cld
add
push
loopne
sti
fcmovu
popf
xor
and
imul
add
ss
and
inc
mov
xor
mov
xor
pop
inc
cmp
pop
inc
inc
and
ret
add
add
add
es
jmp
rcrl
cmp
fisubl
xor
add
pop
dec
add
sbb
add
sub
inc
lds
mov
pusha
cmpsb
sub
adc
sub
std
jnp
mov
aam
and
stos
jbe
adc
or
and
push
jmp
outsl
or
in
add
add
ret
nop
fs
pop
test
xlat
mov
mov
sub
mov
xchg
bswap
jb
sub
dec
jmp
roll
test
mov
mov
pop
or
outsl
sbb
repz
adc
jmp
or
jne
inc
and
mov
mov
cmp
push
xor
mov
pop
xorl
incl
add
add
or
push
lea
imul
outsb
popa
cmp
mov
jl
mov
mov
xor
out
cwtl
jl
cmp
and
cmp
and
sub
and
or
and
sbb
xor
inc
idiv
sbb
aas
std
mov
lods
fldcw
out
fldcw
out
fstps
test
stc
cmp
xchg
test
add
add
pop
repz
jge
mov
mov
dec
aad
loopne
lea
xor
xor
xchg
xor
or
std
mov
xchg
xchg
inc
rol
and
out
loopne
mov
add
and
add
and
ret
mov
lcall
outsb
shl
add
fisttpll
call
add
add
add
push
jo
cmpb
mov
faddl
inc
mov
dec
adc
add
jge
nop
jmp
xor
and
sbbl
jge
sub
pop
ss
add
or
mov
call
inc
imul
xorb
bound
sub
pop
xchg
sub
add
add
in
ret
mov
and
jbe
std
pop
sti
int3
and
and
xchg
inc
leave
xchg
inc
sub
push
test
inc
adc
push
pop
mov
or
int
incl
xchg
sub
and
adc
push
mul
call
shrb
add
add
add
and
ja
inc
add
and
insb
xchg
imul
sbb
add
ja
inc
and
inc
cmp
mov
insb
adc
dec
repz
and
repz
and
nop
jl
and
pop
mov
imul
lret
jb
push
sbb
pop
cmp
imul
add
iret
mov
add
add
jmp
and
dec
imul
pop
jne
inc
call
jl
das
or
add
aaa
invd
addb
je
pop
ljmp
in
call
and
jbe
or
cwtl
jne
inc
xor
cmp
add
arpl
dec
sub
sbb
incb
add
add
xor
stc
mov
loope
pop
add
stc
mov
aad
or
jl
cmp
je
dec
nop
je
test
cmc
imul
xchg
pop
adc
out
cmp
dec
adc
decl
and
mov
inc
and
adc
inc
subb
pop
jp
mov
cltd
xchg
jb
inc
inc
shll
addl
cmp
out
push
jb
cmp
test
add
add
int3
or
ret
test
jo
jp
fnsave
or
jg
je
nop
jecxz
lret
in
cmp
and
inc
cmp
jmp
fisttpl
cs
dec
roll
dec
gs
fsubr
and
pop
hlt
arpl
add
add
add
dec
xor
and
ficompl
mov
jo
sub
inc
pusha
push
sub
sub
sub
dec
out
add
insb
or
pop
cltd
dec
or
mov
pop
orl
lret
call
add
test
mov
mov
call
jb
and
add
add
add
and
bound
add
jmp
cmp
inc
jge
in
jae
mov
cmpl
ret
out
pop
cmp
xor
push
test
xor
or
aas
int3
pop
jl
cld
aas
and
scas
pop
les
jmp
and
in
inc
and
out
inc
and
jmp
and
pop
mov
insb
arpl
insb
and
inc
add
add
add
je
push
push
adc
testb
imull
xorl
inc
pop
push
in
pop
push
clc
and
cmp
xorb
jp
fdivrs
jne,pt
subb
sbb
xchg
push
aad
shll
dec
cmp
or
xor
jne
inc
adc
cmp
jl
add
add
andb
std
fisubrl
cmp
and
inc
jp
mov
or
add
dec
and
clc
cmpsb
js
jl
lods
adc
in
loope
out
jmp
jecxz
add
fprem1
adc
out
or
fcom
or
loope
clc
add
jmp
clc
push
movl
fs
and
push
outsl
mov
mov
add
outsb
inc
inc
add
inc
adc
sar
in
ljmp
out
sub
push
stos
lcall
jne
fwait
out
lcall
lcall
js
sub
js
xor
jae
aam
add
pushf
xchg
xor
fisubl
and
aad
xor
cmc
and
inc
add
add
add
xchg
je
mov
xchg
insb
add
insl
xchg
jl
lea
xor
in
test
fwait
jo
sub
std
jo
int3
and
jecxz
and
sub
and
aad
test
sbb
pop
jbe
jl
push
scas
adc
xor
dec
add
add
add
addl
sbbl
inc
imul
pop
cmp
lret
mov
and
adc
mov
cmp
into
xchg
adc
mov
jno
mov
jno
mov
dec
push
cld
add
dec
lods
addl
dec
mov
dec
sub
negl
and
add
add
arpl
std
inc
adc
mov
dec
and
and
mov
in
xor
arpl
shlb
cmp
or
out
loopne
in
loopne
xlat
or
loopne
out
loopne
ljmp
jp
pop
inc
inc
push
test
add
xchg
pop
xor
cld
iret
sub
cmp
add
add
cmpsl
mov
and
in
test
push
lock
jl
mov
rcrl
fnstcw
mov
jp
mov
jmp
filds
sub
push
add
or
pop
pop
in
jl
push
sub
jge
and
dec
add
leave
aaa
orb
ret
pop
mov
loopne
adc
lds
add
add
orb
adc
loopne
jne
jl
xchg
sbb
stc
nop
sti
fildll
sti
add
ffree
jecxz
xor
jmp
loop
sub
dec
xchg
sub
add
xorb
sub
or
mov
insl
ret
movsl
cmp
orb
mov
or
fucomp
and
pop
xchg
add
add
add
adc
imul
outsb
and
nop
xchg
mov
and
fwait
js
jo
xor
mov
test
sbb
imul
sbb
jno
push
or
xchg
push
add
test
clc
je
cmp
loope
jl
testl
add
xchg
shlb
je
and
dec
and
nop
je
sub
jnp
rorl
inc
and
nop
je
daa
in
and
nop
je
arpl
ljmp
dec
fiadds
push
nop
je
pop
ljmp
xchg
aam
add
cld
std
or
and
in
daa
and
cld
pop
and
hlt
movsl
adc
arpl
addb
add
pop
push
inc
xor
rolb
cmp
sub
repz
sti
mov
xchg
outsl
jno
or
sbbb
mov
dec
sbb
std
dec
lea
jl
push
push
andb
xchg
mov
jae
pop
jp
push
in
lock
push
in
mov
xchg
sbbl
jno
inc
repz
add
add
add
mov
aas
in
fisttps
pop
mov
mov
stos
add
xlat
adc
adc
lcall
in
loopne
jae
in
push
mov
adc
pop
pop
loope
test
dec
arpl
add
insl
fsts
test
xor
sti
sbb
loope
sub
mov
mov
jmp
js
add
add
sub
xor
arpl
and
lret
pop
adc
cs
xor
and
mov
add
repz
xchg
das
in
adc
sahf
mov
bound
test
mov
sbb
loope
int
rorl
test
or
add
add
sub
cmp
lods
sub
ds
jp
and
pop
adc
scas
xor
and
pop
and
mov
and
and
mov
fldcw
lods
shl
and
xchg
insb
and
xchg
pop
and
xchg
push
and
xchg
dec
and
xchg
inc
and
and
and
add
lretw
test
add
add
in
or
xor
rorl
arpl
push
mov
xor
and
add
sbb
xor
pusha
pop
add
enter
cmp
cmp
adc
add
lcall
xchg
pop
and
pop
push
mov
jb
dec
cs
mov
and
add
add
adc
or
push
and
mov
and
lds
and
or
push
test
fimuls
add
pop
jge
test
jns
fidivs
add
fldt
add
push
xor
mov
ffreep
and
ja
xchg
sbb
sbb
mov
jp
mov
adc
or
loope
lcall
and
add
add
push
cmp
dec
inc
adc
idivb
xor
jecxz
out
cmp
fisubl
mov
sub
add
sub
mov
sub
lcall
xchg
pop
out
mov
adc
addr16
xchg
sub
fstpt
sub
adc
sahf
push
fwait
daa
cmpsb
xchg
mov
adc
add
add
ss
jl
pop
ljmp
lcall
and
add
arpl
and
outsl
xchg
lods
cmpsl
fisubrs
ret
cmp
pop
adc
and
test
cmp
sub
nop
lock
call
shlb
jb,pn
push
mov
in
in
mov
jmp
adc
mov
sub
add
add
push
call
insl
popf
sbb
or
sti
pop
adc
imul
loop
nop
and
dec
push
or
in
and
dec
push
mov
cmp
pop
sbb
test
addb
mov
pop
cmp
cmp
push
xor
imul
inc
add
roll
add
add
xor
loopne
test
or
test
idiv
lods
enter
cwtl
decb
addb
or
mov
sub
aad
inc
and
addb
mov
and
mov
jl
insl
sbb
pop
sbb
add
daa
pop
sub
push
pop
jecxz
pop
gs
roll
mov
pop
jecxz
and
add
add
push
inc
add
std
jl
and
and
push
std
fsubrl
sub
and
ds
mov
adc
sbb
xchg
lret
test
ja
dec
sbb
jp
stos
dec
and
aad
and
sub
es
and
nop
inc
shlb
inc
test
in
loop
add
aas
push
cmpsl
or
add
add
cmp
and
pop
imull
jge
inc
inc
sahf
or
and
loope
sbb
jae
push
adc
sub
mov
sub
or
pop
jmp
fsubrp
add
cmp
pop
dec
inc
cmpsl
pop
jge
imul
lods
ret
sahf
idivl
scas
mull
lret
daa
dec
push
pop
fdivrs
rcrl
cmp
xor
add
add
push
jnp
pop
add
jle
push
lds
mov
lods
pop
je
xchg
or
outsb
into
test
and
ret
push
int
or
int
pop
je
cmp
int
into
test
ficoml
insb
scas
or
and
and
adc
adc
add
add
popf
or
inc
or
push
dec
and
pop
test
sbb
cli
add
mov
add
push
cmpl
add
inc
sub
lods
adc
jmp
insl
lock
or
js
add
push
push
outsl
add
fisubrl
gs
stc
mov
icebp
decl
add
add
ja
lock
or
subl
inc
aas
or
addb
test
adc
push
adc
clc
adc
pop
cmc
inc
je
jp
daa
pop
push
clc
push
dec
adc
xor
and
mov
stos
mov
in
cmp
fiaddl
add
add
add
add
lock
mov
or
call
out
xor
test
mov
inc
std
int
sbb
out
add
mov
mov
push
add
or
stos
and
sbb
or
outsl
shll
add
jecxz
mov
or
mov
adc
add
add
pop
push
mov
add
adc
jmp
sahf
out
pop
adc
add
adc
pand
ret
in
lret
aam
pmullw
int3
rcl
ret
pop
pop
jb
in
mov
lea
pop
pop
enter
ret
jae
jns
nop
jp
pop
add
flds
add
add
sub
dec
je
sub
push
imul
mov
pop
or
test
pushf
sub
push
mov
inc
push
jae
jb
in
inc
jmp
iret
es
inc
loope
push
je
push
fisttps
mov
pop
adc
iret
inc
subl
mov
leave
xchg
jo
cli
jle
inc
jae
fisttps
outsb
pop
inc
adc
add
lret
test
push
push
test
or
pop
add
mov
call
pop
clc
cmp
fcoms
mov
divl
fmuls
testl
aaa
jge
testb
fdiv
mov
cltd
loope
fucom
testb
jecxz
push
ds
push
inc
xchg
push
push
dec
sbb
adc
adc
js
add
add
add
fldl
ja
or
or
fcoms
cmp
xorb
rorl
push
sbb
cmp
inc
jmp
mov
mull
ds
nop/reserved
std
jl
addr16
shr
or
adc
rclb
inc
insb
shrb
fcoms
cmp
lret
incl
add
add
pop
sbb
decl
clc
enter
in
push
push
lods
inc
pop
stc
mov
jb
fnsave
add
and
mov
dec
jecxz
pop
dec
ss
imul
xor
pop
adc
mov
in
add
stc
xor
push
frstor
mov
dec
xchg
add
mov
mov
or
fs
jge
pop
jge
into
fwait
adc
add
les
xor
lahf
and
dec
out
cmpsl
arpl
in
dec
addr16
test
leave
adc
add
fldl
nop
or
pop
adc
cmp
add
and
jp
add
and
sbb
mov
and
pop
adc
jmp
add
add
add
xor
lods
mov
dec
pop
adc
jmp
push
adc
jmp
dec
or
sub
in
outsl
or
sub
xor
xor
and
xor
jle
jl
adc
mul
pop
rol
pusha
mov
or
pop
xchg
loop
pop
adc
add
add
add
insl
adc
xchg
cmp
testb
add
mov
shl
push
mov
push
mov
mov
adc
push
addb
jle
sbb
test
adc
push
shlb
add
adc
call
adc
add
add
dec
sub
stos
or
test
adc
mov
das
add
out
mov
mov
outsl
out
cmp
out
pavgb
xlat
xchg
and
rcll
test
ljmp
cs
ret
outsb
add
xor
xchg
dec
int
les
filds
add
add
push
in
and
push
push
out
and
xor
inc
pop
int3
inc
test
cld
lcall
add
push
cmp
jb
adc
fimuls
cmpsl
xchg
out
pop
or
fstl
jae
sub
outsl
or
or
insb
jns
sti
insl
xlat
jge
pop
mov
mov
push
ljmp
add
add
fcomi
mov
cmp
push
out
pop
mov
inc
add
xchg
jnp
sub
lods
jb
push
ljmp
xchg
cli
adc
add
push
mov
mov
ss
cmp
das
sbb
cmpsb
das
fs
pop
adc
sbb
test
pop
adc
cmp
jmp
call
jbe
call
push
add
add
lret
insb
stos
adc
jmp
sbb
adc
neg
add
jmp
loop
stc
jmp
outsb
pop
mov
leave
push
stc
jmp
popf
push
xchg
inc
test
fnstcw
fcoml
add
xor
and
mov
sbb
adc
sti
lock
dec
add
push
or
add
add
add
xchg
sbb
call
out
movnti
pushl
mov
btr
cld
incl
clc
add
xor
inc
ss
jl
push
xlat
dec
and
aam
lea
jnp
decl
or
dec
push
dec
sti
inc
push
pop
push
jnp
lret
aam
and
aam
and
sbb
mov
sub
add
add
add
sub
pop
push
out
and
sub
fisttpll
std
call
mov
pushf
pop
push
push
imul
lcall
aad
sahf
cmp
into
aaa
lahf
push
inc
mov
and
les
cmp
fiaddl
or
sbb
or
pop
aas
mov
cmp
repnz
clc
clc
adcl
int3
and
add
add
pop
cmp
inc
popa
mov
mov
fisubl
add
pop
jb
xor
out
pop
fldl2t
mov
fldl
or
sarl
or
dec
add
movsl
or
scas
adc
ljmp
fadd
or
adc
cmpsb
cmp
xor
arpl
xchg
mov
pop
adc
jge
pop
push
add
add
add
push
sub
xchg
inc
add
out
adc
fs
push
out
arpl
pop
push
push
pop
sti
bound
xlat
jge
jae
enter
fnsave
call
jb
xchg
repnz
fld1
add
pop
xchg
dec
add
push
adc
xor
sbb
shl
or
push
int
xchg
dec
jmp
add
dec
push
in
pop
call
xorb
and
or
jno
pop
mov
fs
inc
pop
adc
or
adc
inc
add
add
bound
push
repz
or
sub
dec
adc
jecxz
inc
add
aad
mov
mull
pop
cmp
xor
xor
inc
imul
cmp
stc
xor
add
add
stc
jg
adc
push
pop
std
or
jbe
clc
cmp
inc
adc
push
pop
jge
xor
and
call
jge
xor
and
dec
jmp
andb
je
jnp
je
sbb
jmp
arpl
out
push
divps
add
mov
add
add
pop
push
aaa
je
xchg
mov
movl
outsb
mov
push
mov
std
pop
mov
je
sarb
mov
aam
add
repz
sub
mov
and
insb
mov
and
aas
or
movsb
iret
test
push
movsb
and
int
sarl
das
in
std
dec
or
and
add
add
add
push
gs
in
sbb
jbe
cmpsl
repnz
adc
ja
adc
pop
mov
push
ljmp
ret
jg
adc
add
popf
add
in
push
fidivl
fistl
pop
dec
xchg
lds
pop
dec
out
cltd
cwtl
test
jle
push
add
pop
mov
add
out
sub
add
add
add
mov
mov
inc
mov
mov
mov
pop
xchg
daa
cli
fstpl
bound
test
mov
adc
adc
inc
loope
mov
adc
in
aam
test
scas
and
jge
pop
scas
ss
mov
je
lahf
int3
mov
mov
add
jae,pt
fwait
xchg
int
mov
mov
jle
out
jmp
stc
mov
adc
add
lock
aad
lods
sub
and
notl
sti
ljmp
int3
dec
and
push
lret
inc
adc
add
mov
out
add
push
push
push
push
dec
lea
add
add
arpl
aaa
call
add
push
test
sldt
mov
scas
enter
rcrl
inc
data16
mov
ret
test
sub
outsl
or
mov
in
xchg
mov
lret
pop
cmp
test
xor
aas
jno
std
push
push
mov
stc
jmp
mov
add
add
cmp
inc
push
cmpsl
leave
test
cmp
adcb
cli
test
jl
lahf
pop
adc
pushf
adc
stc
pop
cmp
aad
pop
sub
repz
fs
inc
inc
adc
push
mov
std
add
mov
scas
aad
add
negb
and
lods
jae
mov
dec
popf
adc
mov
in
and
add
add
mov
dec
out
scas
aad
add
adc
jp
push
dec
adc
push
push
ds
pop
outsb
inc
sbb
out
inc
mov
cmp
pop
fsubr
cmp
fcoms
xor
mov
inc
sbb
dec
fcmovu
pop
or
das
aam
jb
sbb
and
add
ror
sbbb
out
fisttps
data16
add
add
xlat
ljmp
arpl
push
cmp
add
pop
rcrl
inc
push
inc
arpl
dec
adcl
jmp
add
scas
xsaves
das
popa
jmp
mov
test
rorl
fnstcw
lods
jg
loop,pt
push
jg
mov
aaa
add
add
add
int
and
fs
mulb
sahf
repz
ffree
and
pop
loope
sub
ror
and
lods
or
or
mov
pop
cmp
mov
inc
scas
in
pushl
adc
add
aaa
ud0
cmpsl
add
adc
adc
insb
inc
sub
outsl
rorb
call
add
add
add
sbb
mov
or
testb
sbb
sbb
dec
push
pop
cmp
les
mov
dec
mov
mov
mov
clc
sbbl
dec
lods
imul
lret
stos
sub
add
in
mov
ja
int
imul
shrl
pop
ret
add
add
add
push
pop
test
add
cmp
in
push
pop
out
or
icebp
sbb
in
ret
sub
xchg
inc
push
mov
inc
push
in
and
mov
sub
adc
idiv
popa
mov
sbb
adc
ja
adc
nop
lcall
enter
out
add
add
add
inc
cld
mull
pop
addr16
pop
adc
leave
gs
and
fwait
daa
inc
mov
fsubs
lahf
in
insb
inc
insl
mov
sarb
push
and
inc
sbb
adc
out
inc
and
cmpsl
add
shlb
cltd
adc
mov
inc
fs
repnz
gs
jno
push
das
pop
std
lcall
add
sar
sahf
data16
push
and
push
adc
jmp
sub
outsb
ss
fdivrl
dec
jae
jl
cmovle
sbb
mov
push
mov
insl
and
cli
es
mov
mov
sbb
jmp
imul
xchg
fdivr
pop
xchg
cltd
inc
push
add
add
add
pushf
pop
cli
out
jl
cmc
bound
add
out
adc
in
adc
test
add
repz
adc
ja
divl
mov
and
push
add
call
pushl
adc
aaa
maskmovq
divl
mov
and
push
add
or
test
adc
add
adc
str
testl
sub
add
add
inc
mov
mov
sldt
popa
cltd
and
les
add
test
icebp
add
mov
add
mov
add
divl
pop
pop
repnz
dec
clc
add
pop
cmp
test
jae
inc
jp
add
lods
inc
add
mov
pop
repnz
pushl
dec
stc
clc
push
xor
aas
pop
scas
mov
jb
pop
cmp
add
scas
pop
std
out
jle
stc
out
and
fcomi
sarb
iret
std
jae
scas
dec
and
pop
mov
pusha
sub
push
cmp
jp
add
pop
cmp
sub
jmp
not
cmp
adc
mov
out
dec
or
rcrl
pop
mov
adc
xlat
pop
jp
sub
out
in
lret
inc
mov
add
add
or
mov
enter
add
inc
jp
test
push
hlt
bnd
addr16
stos
out
mov
push
pop
das
inc
hlt
arpl
out
jb
rcrb
test
aad
or
cli
add
sbb
pop
inc
xor
pop
adc
mov
fnstcw
cmp
in
pop
inc
jecxz
fsubr
pop
adc
add
shr
pop
adc
sbb
aam
push
lret
scas
mov
mov
cmpl
and
loope
or
adc
jmp
mov
pop
out
popl
jmp
dec
aas
stc
jmp
cs
stc
jmp
lods
cmp
ljmp
lcall
add
push
add
add
add
addb
push
sbb
add
adc
push
andb
xor
sub
orb
push
add
mov
push
jle
jo
ret
mov
xchg
mov
and
pushl
fmulp
mov
adc
sub
jge
pop
and
pop
addr16
call
mov
mov
repz
mov
add
add
imul
add
adc
mov
add
inc
test
mov
out
stc
pushl
sbb
arpl
int
mov
movsl
mov
lcall
in
ljmp
ret
push
lcall
xchg
fcmovnb
pop
sti
popa
jg
mov
xchg
push
pop
stc
dec
clc
lods
test
loope
and
pop
stc
fisubl
ljmp
add
add
xchg
sbb
mov
shl
inc
add
jb
iret
ret
movsb
jmp
addr16
fsts
jecxz
adc
xchg
daa
xlat
xchg
mov
cmpsl
mov
fimuls
rcrl
mov
mov
jmp
test
xchg
add
loop
push
add
add
add
lods
in
pop
push
daa
lret
cmc
mov
outsb
push
aad
sahf
mov
xlat
mov
adc
pop
dec
mov
cmpsl
rcrl
mov
das
xchg
cmp
outsl
leave
cmc
push
lods
pop
icebp
mov
pusha
loope
dec
pop
dec
fst
ret
mov
daa
cmp
leave
adc
stc
mov
popf
cmp
insb
jp
stc
decb
add
add
mov
jecxz
lret
xchg
or
xor
cwtl
push
cmp
sbb
jb
mov
push
inc
jnp
out
inc
cld
add
inc
jmp
jo
sub
and
bound
cmp
adc
stc
pop
fxch
out
iret
ror
add
call
cmp
pop
adc
add
out
cmc
lcall
testb
nop
shlb
add
mov
inc
cld
enter
mov
aas
xlat
cmp
pop
mov
or
aaa
sub
testb
fdecstp
test
dec
jnp
mov
cmovo
or
mov
sub
pop
dec
sbb
clc
mov
inc
cld
dec
mov
aas
xlat
mov
adc
repz
xlat
testb
push
add
add
add
add
inc
idiv
adc
adc
sar
cs
stc
popa
push
jb
test
add
jg
push
add
pop
ja
push
or
test
dec
out
mov
and
jae
repz
pop
mov
add
sahf
in
mov
or
dec
in
orb
hlt
lahf
imul
sbb
add
add
mov
clc
adc
or
sahf
sub
insb
call
call
pop
push
mulb
push
int
mov
add
dec
or
pop
aad
add
adc
and
cmp
xchg
cmc
cli
mov
aam
fists
cmpsl
in
or
pop
insl
pop
ret
mov
cmp
push
mov
and
add
add
cmp
arpl
cmp
cmp
sbbb
jmp
xchg
and
push
push
das
xchg
stos
or
int
mov
xchg
loope
sarb
mov
cmp
jbe
inc
movaps
rcr
in
push
cmp
dec
or
push
jle
bound
xchg
push
bound
lahf
mov
cmpsl
mov
pop
mov
bound
add
add
out
hlt
pop
bound
hlt
sub
pop
std
add
mov
pop
adc
fisttps
mov
insb
and
js
pop
cmp
jmp
push
mov
jne
in
add
bound
insl
add
push
test
xorl
xchg
or
mov
push
addb
test
add
add
pop
mov
or
or
xor
jo
push
mov
adc
test
clc
or
dec
sbb
cmovs
cmpl
push
cmovs
lcall
icebp
daa
add
rorb
lea
das
call
ret
sbb
jns
push
mov
stos
dec
inc
rcr
addb
pop
xorb
add
in
mov
sbb
test
add
or
xlat
mov
clc
aaa
jae
std
sbb
out
pop
jge
push
leave
push
sub
push
sub
jbe
mov
out
jae
stc
iret
or
inc
adc
sub
jg
and
pop
sub
aas
pop
into
pushf
jle
jecxz
xlat
out
std
out
cld
push
stc
add
add
add
in
push
arpl
inc
pop
sub
sub
and
add
or
out
adc
into
outsb
sub
xchg
pop
pushw
inc
movsb
and
xchg
hlt
sbb
ss
xor
out
clc
mov
mov
pop
sub
mov
ss
dec
popa
shl
fucom
into
fnsave
mov
pop
add
add
add
pop
adc
cmp
and
add
int3
or
fstl
or
xor
incl
xor
jmp
mov
inc
jmp
mov
fdivr
sbb
aas
je
jno
mov
cltd
add
pop
loope
mov
pop
mov
cmp
mov
and
or
add
in
xchg
jmp
mov
or
pop
mov
lods
push
pop
mov
out
dec
incb
mov
jnp
jmp
ss
push
lock
jmp
sub
movb
sbb
add
inc
sbb
rolb
shl
mov
push
test
add
add
add
pop
adc
cltd
mov
add
mov
inc
aas
pop
pop
mov
in
pop
lea
in
pop
push
jno
sbb
inc
mov
stc
inc
out
pop
and
inc
inc
je
ja
or
pop
sbb
ret
jmp
add
mov
leave
inc
and
or
push
pop
fs
incl
inc
sbbb
push
aaa
sub
push
push
cmpl
arpl
std
call
movsb
daa
pushf
pop
sub
dec
test
ja
ja
jp
inc
lods
clc
dec
cmp
aas
pop
lods
inc
je
pop
inc
out
daa
mov
loop
insb
add
lods
clc
push
mov
aas
pop
cmpsl
out
data16
stc
shrl
xchg
std
stc
xchg
movsl
inc
je
cwtl
jp
cmp
add
pop
cwtl
push
adc
clc
ret
add
add
add
cmpsl
dec
rcl
insb
xchg
lret
add
sti
add
pop
jbe
inc
or
cmp
push
and
mov
mov
clc
in
ret
test
sub
int3
lret
xor
sti
arpl
out
push
mov
sahf
jp
divps
jge
outsl
enter
daa
push
mov
enter
std
add
add
add
pop
adc
fistpll
inc
addr16
adc
cmp
into
xchg
and
mov
cmp
bound
cmc
daa
pop
push
cmc
sub
cmp
sub
adc
xchg
in
push
sub
and
push
aaa
leave
xchg
dec
int
mov
insb
push
cmc
daa
sbbl
push
or
add
add
add
xchg
pop
add
loope
call
pop
cwtl
je
push
cs
call
scas
hlt
sbb
jne
add
pop
sbb
mov
mov
subb
in
jo
sbb
inc
adc
add
adc
mov
xchg
jbe
les
add
cwtl
ljmp
push
pop
test
add
add
fists
add
out
mov
add
inc
cmp
add
add
adc
jg
add
shll
cltd
lods
inc
and
jl
jl
pop
jmp
or
jge
dec
pop
ss
or
fcomps
clc
push
sbb
push
mov
and
inc
ret
mov
mov
mov
add
add
jl
lret
in
frstor
hlt
jb
mov
and
and
jae
mov
pop
test
lods
mov
inc
mov
sahf
cmp
pop
jecxz
rcrb
cmp
popa
in
add
xor
ss
subb
add
jbe
xchg
adc
adc
pop
call
cmpl
add
add
pop
mov
xor
out
call
push
cs
sub
cmp
lret
jge
pop
aad
xchg
mov
fdivrl
dec
daa
lcall
adc
pop
add
add
pop
lcall
sti
out
int
pushf
loope
arpl
pop
add
push
shr
inc
adc
cmp
add
add
add
jmp
icebp
das
inc
xchg
pusha
stc
fcoms
in
aad
lret
cwtl
lods
shl
sti
jnp
push
pop
call
sbbl
and
xchg
lock
movsl
cmp
in
dec
jo
jp
fsubrs
test
ficoms
rorb
sbb
clc
adc
loope,pt
in
sub
insb
lcall
sub
add
add
fsts
mov
lods
into
jb
cmp
push
sub
push
aad
or
fimuls
mov
or
call
cmp
sbb
sub
sbb
add
jnp
js
mov
mov
mov
in
mov
dec
push
popf
and
dec
jmp
insb
cmovo
les
push
mov
add
add
stc
jb
inc
add
adc
adc
adc
and
pop
lods
cmp
jne
xchg
icebp
pushl
into
pop
add
mov
xor
push
push
cmp
addb
shl
pop
stc
xchg
cmp
or
lock
into
shlb
add
push
adc
add
add
add
dec
test
pop
cmp
out
sbb
fcomi
push
mov
cmp
rcll
cmp
dec
xlat
sti
clc
xor
inc
rcl
pusha
fimull
mov
stc
into
inc
stc
pop
cmp
jno
jb
loope
push
ds
sbb
jp
sbb
stos
test
loop
pushaw
mov
inc
adc
sub
mov
inc
mov
add
loopne
ret
pushf
mov
jnp
cmc
mov
sbb
mov
adc
scas
jp
cmc
stos
jp
cmc
es
cmc
and
cmc
push
jnp
cmc
sbb
cmc
push
pop
iret
mov
sbbb
mov
adc
add
aad
scas
pop
fisubl
add
int3
ret
int3
lret
scas
dec
negl
add
pop
iret
jmp
add
add
add
stc
fs
cmc
stos
jmp
icebp
in
push
push
test
cli
ss
stc
gs
cmc
sub
adc
shr
push
add
push
or
sub
jmp
call
int
std
int
adc
int
xor
int
aad
int
rcr
mov
inc
lds
stc
jmp
add
test
xchg
add
lods
push
pushl
in
or
dec
pop
adc
cmp
cmp
jl
mov
adc
test
pushl
xor
cmp
or
jl
jmp
addb
push
stos
cmp
enter
test
sub
mov
movsb
dec
and
add
add
dec
ja
adc
lods
push
sbb
jnp
daa
xchg
dec
lea
sub
adc
push
xchg
lods
pand
push
fstpl
scas
test
push
sbb
in
scas
mov
push
int3
dec
sub
cmp
shlb
fidivrl
aam
adc
jne
cmp
adc
addr16
test
add
add
and
jl
es
xor
add
popa
les
adc
hlt
pop
sub
and
mov
pop
pop
sbb
cmp
sbb
xor
inc
push
add
daa
xchg
jnp
in
push
jns
xchg
mov
in
ret
fldt
inc
out
sbb
jp
push
cmc
es
mov
jge
ret
sahf
push
adc
add
add
add
dec
push
andl
sbbb
lret
in
bnd
ret
mov
adc
arpl
mov
add
shl
int
incb
fcoms
inc
rclb
cmc
pushf
and
add
lret
in
sub
in
incb
lcall
ljmp
push
imul
push
inc
jno
mov
add
add
add
and
popf
and
inc
add
inc
int
mov
jecxz
push
ds
icebp
xor
push
cs
sbb
out
fninit
add
lret
mul
jecxz
cltd
jb
cmp
test
push
out
cmpsb
ret
add
jb
xor
popf
cwtl
dec
add
call
lea
add
add
jnp
inc
call
mov
push
mov
push
pop
jl
push
ret
push
xchg
in
sbb
cmp
adc
push
clc
push
pop
inc
mov
clc
adc
inc
push
sub
int3
adc
adc
xlat
cmp
out
mov
fs
jl
dec
stc
mov
ljmp
sbb
add
add
dec
mov
test
or
pop
and
fsubrl
dec
xor
dec
mov
jle
add
cwtl
cs
add
mov
stc
icebp
sahf
dec
call
cmpsl
adc
add
xor
jb
inc
pop
rcll
shlb
std
pushl
add
popf
es
add
pop
jbe
aas
push
jmp
aas
not
mov
sti
out
mov
bound
or
push
jo
jno
sub
fnop
push
mov
pop
ret
jge
sub
loopne
or
dec
cltd
sub
fnop
cmp
ret
shlb
idiv
loop
sahf
adc
pop
xchg
ja
push
xchg
in
outsb
nop
pop
hlt
add
add
add
mov
sub
push
dec
mov
or
jp
adc
add
fimull
add
sbb
test
mov
in
lods
pusha
mov
iret
inc
xchg
sub
out
push
call
pusha
testb
call
push
adc
pop
adc
stc
mov
push
jmp
add
lret
outsl
sti
mov
cmp
sub
gs
ljmp
inc
push
test
xchg
punpcklwd
inc
in
aam
pop
jo
adc
xorl
add
icebp
xor
rclb
hlt
add
adc
loope
into
pop
sub
inc
lea
mov
sbb
add
ja
incl
dec
push
movnti
das
mov
xchg
icebp
or
addl
sbb
pusha
mov
inc
dec
sbb
hlt
or
hlt
cmp
jl
mov
adc
fildll
xchg
pop
stc
mov
mov
test
or
pop
sub
add
test
in
mov
roll
inc
or
mov
test
mov
je
stos
hlt
ljmp
sub
jae
ljmp
pop
stos
mov
cli
popf
add
es
outsl
and
test
mov
jmp
pusha
loopne
pop
jmp
push
in
roll
sub
mov
sub
xchg
xchg
stc
xchg
mov
call
xchg
pusha
fstpl
or
cmc
add
cmp
aam
ljmp
sub
mov
loope
xchg
cmpsb
call
adc
pop
dec
notb
and
pop
mov
sub
mov
add
add
jp
and
jg
push
pop
push
adc
shrl
popf
pop
cmp
andl
mov
cmpsl
fnop
fidivrl
outsb
int
adc
and
stc
cs
sarl
in
mov
sub
mov
mov
add
pop
adc
jmp
sub
aam
je
out
movsl
xchg
insb
add
aad
and
add
add
add
rorb
jmp
fbld
sub
fisubrl
inc
in
pop
adc
leave
push
leave
call
pop
or
push
mov
pop
call
outsb
or
add
ja
call
mov
pop
inc
dec
fnstsw
add
adc
jne
or
mov
add
inc
adc
mov
xchg
ds
jl
dec
mov
adc
dec
sbb
push
je
or
ss
stc
test
inc
cmp
clc
repz
pop
xor
xor
loope
mov
push
and
sahf
fiadds
mov
call
lea
fsts
pop
cmp
repnz
dec
add
jl
add
add
add
std
out
adc
pop
sub
in
scas
iret
and
mov
mov
add
pop
adc
push
inc
xor
test
mov
mov
xchg
daa
call
sub
add
adc
cmpsl
add
or
mov
enter
dec
call
add
add
add
adc
or
inc
out
pop
mov
sub
out
fistpl
insl
dec
leave
dec
mov
xor
add
and
or
in
and
not
sti
adc
add
adc
jge
das
add
adc
test
sub
jge
mov
adc
adc
mov
sarb
lret
mov
add
add
out
pop
rcll
jp
daa
add
push
jp
jge
add
or
pop
stc
popf
sbb
pop
sahf
das
adc
imul
icebp
pop
int
rorl
xchg
and
bound
add
pop
adc
mov
fstl
adc
sar
popa
fdivp
adc
pop
adc
loope
pop
call
add
ret
hlt
sub
es
insb
or
pushfw
std
mov
sbb
jmp
sbb
adc
in
pop
adc
add
sbb
pushl
push
pop
sub
loope
sbb
or
mov
stc
mov
pop
inc
mov
xor
ljmp
outsl
add
xor
jo
add
inc
add
add
add
je
hlt
std
add
or
inc
cmp
or
popa
call
stc
decl
inc
dec
push
and
lea
call
test
adc
adc
imul
sub
lcall
pcmpeqd
lahf
test
mov
repz
mov
sub
cmp
mov
add
fcomip
dec
lcall
sbb
clc
mov
or
push
pusha
into
dec
imul
fwait
ss
or
cmp
test
mov
rolb
aaa
mov
mov
jp
pop
sub
out
ds
fcomi
fisttps
or
pop
adc
in
ret
inc
pop
adc
jl
adc
add
add
add
scas
fnstenv
xlat
test
or
out
mov
std
jae
jge
mov
cli
add
adc
bound
inc
sbbb
mov
mov
in
testb
pusha
and
in
add
outsl
sbb
push
sub
pop
mov
jge
into
out
and
rolb
mov
mov
add
add
mov
out
pushl
pop
xchg
hlt
stc
scas
sub
sbbb
and
pop
adc
add
test
cmp
add
lea
stc
jmp
push
fcoms
adc
jmp
pop
sbb
sbb
lds
xchg
ret
adc
add
pop
adc
jmp
add
js
mov
call
push
push
stc
stos
push
rclb
mov
add
mov
xor
stc
out
fdiv
ljmp
adc
cmp
mov
enter
cmp
and
push
jl
fwait
arpl
testb
cli
jae
mov
mov
push
stc
out
gs
add
add
add
shll
dec
and
inc
out
stc
add
inc
dec
call
cmovo
incb
inc
push
pop
inc
aaa
xchg
les
sub
add
testl
lret
sbb
dec
push
sahf
sub
xchg
push
add
pop
test
std
dec
xchg
lahf
pop
and
sub
pushl
scas
movb
lahf
sub
pop
sub
jl
add
add
ds
out
sub
call
sub
push
sub
jmp
pop
or
repz
pop
jb
je
jb
test
jb
sbb
jp
popa
jae
out
inc
cs
in
js
ss
or
pop
cmpsb
inc
or
faddl
add
bnd
iret
add
xchg
pop
adc
add
jg
add
xor
add
xchg
pop
adc
addl
add
add
adc
add
mov
repnz
mov
cld
rcll
mov
dec
pand
inc
add
cmp
nop
push
call
or
add
xchg
subb
mov
xor
push
xchg
mov
push
xchg
pop
mov
out
dec
sahf
mov
sbb
sar
popa
pop
repz
add
add
add
sbb
push
inc
mov
mov
mov
inc
fbld
inc
mov
mov
adc
loopne
inc
aad
sub
cmpsl
cmpsl
push
inc
movb
jne
cli
outsb
xor
sbbl
cld
pop
outsl
sbb
test
jle
mov
stc
jmp
xchg
out
add
loope
xchg
xchg
roll
add
add
das
or
and
std
call
adc
aaa
push
subl
xchg
add
addl
out
in
incl
and
clc
push
xchg
push
clc
fs
or
sbb
adc
in
add
or
popa
add
or
dec
push
xchg
push
add
cmp
push
test
push
add
in
or
add
add
xlat
jae
mov
rolb
or
xor
push
jg
add
leave
adc
mov
popf
pop
pop
sub
test
lock
lcall
dec
data16
rclb
sbb
jg
cmp
int3
or
aas
add
cli
cld
aas
mov
and
mov
enter
inc
or
add
add
ficoml
fsubs
bound
and
in
aam
mov
mulb
aam
pop
jnp
add
in
or
xor
stc
mov
xor
inc
add
push
add
pop
lcall
fcomps
jecxz
mov
jge
ret
add
fstps
jge
pop
sarb
inc
lods
pop
or
cmp
jecxz
cmp
add
add
testb
call
push
sahf
sbb
add
sbb
out
xor
jno
sahf
jp
xor
mov
sbb
aad
sbb
pop
jnp
xor
adc
imul
xchg
cmpsw
cmp
je
in
pop
xchg
dec
int
xchg
push
lds
inc
int
xchg
mov
jl
add
add
pop
xchg
je
pushf
dec
int
mull
jnp
in
fcom
jb
cltd
pop
inc
fs
bound
stc
sbb
clc
mov
pop
dec
jge
ljmp
xchg
test
dec
int
div
xchg
jnp
test
mov
dec
bound
add
or
insb
sahf
xor
scas
xor
adc
add
jne
add
add
add
or
loopne
inc
cmp
orb
cli
ljmp
sbb
int3
adc
xlat
or
add
roll
je
xor
sbb
test
fcoml
cmp
ret
xor
adc
dec
push
insb
sbb
mov
dec
mov
mov
xchg
mov
or
push
stc
or
add
push
or
sub
jnp
mov
push
pop
stc
cld
incl
cld
sbbb
jmp
mov
enter
shll
pop
sbb
cli
cld
lock
sti
cld
lcall
in
or
cli
cld
orl
lock
sti
cld
lcall
cli
cld
test
jp
add
jl
fstpt
and
mov
cmpsb
dec
roll
add
add
xchg
inc
repz
test
frstor
sbb
pop
jne
add
arpl
add
sbb
cmc
sbb
cld
fistl
xor
add
out
xor
mov
mov
fneni(8087
pop
aas
orl
fistpl
push
mov
ret
push
sbbb
push
pop
nop
jns
xor
xlat
add
add
add
pop
xchg
xchg
add
add
adc
scas
xor
jmp
cmc
sbb
or
shll
xchg
push
divl
sbb
imulb
mov
cmpsb
stos
pop
add
das
pop
adc
jmp
test
das
and
test
pusha
leave
das
and
dec
sbb
stc
ss
addr16
add
add
add
push
cs
sbb
push
mov
int
jmp
or
test
pop
push
bound
pop
push
jb
mov
out
xchg
adc
call
pop
sbb
cli
mov
sbb
push
daa
add
push
repz
call
pop
adc
add
or
call
cmp
test
add
add
add
add
add
ret
mov
cmp
mov
mov
psubq
ja
inc
adc
push
incb
or
aaa
push
add
cmp
lods
inc
divl
es
xor
adc
inc
call
test
mov
inc
dec
stos
in
bound
push
cmp
decb
push
or
mov
je
add
mov
xchg
add
add
add
mov
xlat
das
clc
in
cmp
sbb
shlb
test
dec
pop
cli
cmp
incl
stc
js
or
in
lock
jg
and
cli
lock
fdivp
cld
jae
mov
fcmovu
loopne
jb
je
adc
cmc
stc
xor
push
and
and
mov
jnp
add
add
add
pop
push
sub
test
pop
mov
iret
test
adc
sbbb
mov
adc
addr16
fiaddl
adc
sbb
enter
pop
repz
fnsave
sbb
dec
daa
fst
icebp
cmpb
add
add
inc
add
adc
outsb
popf
out
testb
xor
pushf
sbb
add
add
dec
popa
testl
cmpsb
add
add
outsb
xlat
pop
fidivrl
xor
add
popa
ret
xchg
sub
mov
jne
or
test
dec
cltd
jne
mov
int
int
mov
andl
mul
imul
push
cld
mov
insl
sar
push
push
pop
lock
mov
add
add
hlt
orl
pop
xchg
int
pop
ss
test
dec
add
testb
shl
imul
or
in
adc
insl
or
pop
or
pop
mov
in
sub
mov
in
test
out
adc
add
sub
ds
jle
jae
orl
hlt
mov
mov
sbbl
jbe
add
add
rorb
add
adc
or
mov
idiv
gs
push
pop
ds
add
push
sub
ja
dec
push
rcl
icebp
push
pop
adcl
divl
outsl
loope
aaa
adc
pop
and
loopne
hlt
sub
mov
in
cmp
adc
or
mov
mov
adc
popf
and
pop
addl
cmpb
add
xchg
and
shll
js
pop
clc
cld
sbbb
xrelease
adc
jmp
sub
andl
scas
stc
xorl
aaa
fldt
test
jae
jp
pop
pop
mov
fmull
test
push
sti
pop
cli
adc
popf
or
test
outsb
and
std
incl
add
add
pop
outsl
inc
aaa
lcall
pop
push
dec
sbb
loopne
jmp
xor
push
js
adc
mov
jecxz
icebp
repnz
mov
mov
sbb
cmp
add
mov
fwait
push
pop
and
or
cmp
and
or
lea
adc
add
add
add
testl
ja
nop
shrb
add
adc
and
jnp
int
mov
sub
out
push
insb
sbb
sub
mov
cmp
divb
sub
insb
sbb
mov
in
push
stc
xchg
or
xor
add
stc
jle
push
push
xor
add
add
mov
sub
mov
insb
xor
inc
sub
mov
jmp
addr16
xor
mov
xchg
inc
and
mov
dec
push
divl
push
mov
sar
loopne
lahf
das
testl
imul
int
push
incb
xchg
add
add
mov
idiv
cmp
sbb
fbld
data16
loopne
dec
and
lock
adc
or
data16
rclb
or
or
incl
mov
insb
cmp
daa
pop
test
test
clc
cld
jmp
lods
enter
and
clc
cld
jl
hlt
cld
or
sbb
pop
jg
dec
dec
mov
add
add
das
jo
and
adc
fisttpll
ret
test
fucomi
dec
push
mov
fidivs
push
cmp
in
cmp
xchg
std
in
fsubr
or
fistpl
pusha
clc
sub
aas
and
xor
push
loopne
dec
adc
mov
push
out
add
add
add
push
fs
lods
push
outsb
iret
jge
outsb
and
lods
adc
and
push
cmp
xchg
fs
pop
pop
cmp
cli
cli
and
push
mov
add
lret
outsl
push
out
lcall
rorl
sub
mov
push
ret
cli
test
stos
cmpsl
add
and
add
cmp
mov
push
ja
pop
mov
add
pop
dec
add
jge
fstpl
push
mov
push
call
pop
mov
pop
xchg
out
jb
cwtl
jae
add
inc
add
xchg
aam
popa
das
rol
clc
jmp
mov
push
and
pop
jmp
test
xchg
or
mov
call
bound
push
int
add
add
movsl
xchg
int
loope
add
pop
roll
nop
jge
pusha
test
popf
mov
jle
call
add
iret
sbb
scas
jo
std
mov
scas
inc
adc
dec
lea
divl
mov
mov
sub
aam
decl
xchg
ret
adc
push
insl
or
mov
and
leave
sbb
pop
sbb
adcl
jne
add
add
xchg
mov
jl
cmc
xor
movsb
mov
mov
mov
and
sbb
rclb
arpl
adc
inc
and
add
push
inc
add
daa
pop
sbb
repnz
mov
mov
addl
jae
and
mov
add
add
add
cld
jl
fmull
je
or
push
xor
aas
pop
imul
xor
sbb
or
call
sbb
inc
jne
or
add
cltd
orb
adc
stc
aam
call
mov
mov
inc
negl
mov
scas
jge
xchg
mov
adc
add
xchg
dec
pusha
mov
xor
jge
out
cmp
add
enter
cmpsl
add
insl
int
jge
rclb
mov
pop
adc
xor
call
xorb
lea
xor
sub
pop
fidivrs
lock
xor
sbb
lods
push
ret
out
mov
adc
mov
mov
cld
test
add
add
push
adc
push
push
dec
inc
cmp
add
fldl
mov
inc
xchg
dec
or
inc
xchg
sub
inc
lds
cld
loopne
movsl
cli
clc
bound
lea
movsl
sub
push
adc
jmp
loope
sbb
sub
mov
shlb
lds
cli
test
add
add
add
stc
or
adc
jmp
jne
test
loop
subl
dec
jnp
adc
loope
arpl
or
dec
lahf
sbb
mov
mov
mov
fistl
mov
pop
test
or
addl
mov
jecxz
mov
sub
adc
dec
add
mov
dec
add
vunpckhps
add
add
inc
cmp
je
or
mov
or
jns
or
cmp
or
push
arpl
add
sti
out
pop
outsl
shlb
jno
test
add
in
mov
stos
subb
pop
shll
adc
clc
cld
sub
sub
push
cmp
in
fstl
test
mov
mov
add
pusha
jno
and
inc
push
add
notl
pop
js
mov
and
push
fildl
and
adc
xchg
xchg
add
cmpsb
lock
mov
mov
add
sbb
cmp
push
repz
lods
call
insl
cmp
push
add
loopne
or
add
add
add
push
jge
fdivs
loopne
dec
or
mov
in
lret
ret
in
ret
mov
daa
lea
pop
mov
push
mov
add
pop
loopne
mov
loopne
xchg
loopne
popa
pop
sarb
scas
jge
shl
inc
xor
clc
scas
in
and
or
idiv
jmp
add
add
add
test
mov
bound
xor
loope
xchg
aad
pop
adc
out
and
stos
lock
cmp
popf
xor
call
bound
shrb
or
adc
call
xor
adc
bound
and
push
or
std
mov
iret
or
add
add
add
aad
jbe
pop
imul
mov
ljmp
mov
pop
test
adc
add
testb
push
je
lahf
ret
not
cld
mov
dec
add
or
push
aaa
sti
jae
aad
push
adc
iret
mov
xlat
inc
mov
xlat
cmp
jg
orl
enter
and
ret
fld
not
mov
add
add
mov
pop
testl
pop
jae
and
jno
add
inc
or
and
mov
jns
xor
xchg
in
add
aad
sub
pop
xchg
test
subl
xchg
nop
dec
jg
addr16
in
fmuls
aam
inc
aad
jg
pop
jmp
test
pusha
mulb
aaa
add
add
add
lret
add
test
inc
push
test
test
sti
jl
aam
rcrb
in
or
out
inc
push
jmp
test
in
scas
sub
push
or
rorb
adc
xchg
shl
sbb
stos
das
adc
jge
pop
sbb
push
lret
out
jo
das
add
pop
inc
mov
mov
dec
out
fcmovnb
jno
add
add
add
repnz
and
jae
push
jg
add
out
mov
data16
jge
out
ret
add
push
testl
jecxz
ret
out
ficoml
sbb
adc
add
push
rorb
inc
adc
jmp
inc
mov
out
loope
call
pop
pop
jmp
push
add
add
pop
nop
mov
pop
adc
cmc
outsb
or
cmpsb
mov
or
and
mov
pop
mov
lcall
fldenv
subps
adc
stc
idiv
clc
push
out
mov
mov
xor
shlb
adc
lods
add
push
pop
xor
out
dec
decl
jb
call
add
add
add
je
cmp
and
jb
and
pop
cwtl
addr16
add
adc
dec
lret
cld
jae
je
cmp
sbb
mov
jb
and
adc
and
test
dec
push
dec
sbb
cld
int
sub
shl
jnp
or
sbb
testl
inc
xchg
ja
sbbb
sub
jnp
add
add
add
adc
pop
sbb
stc
fldl
and
iret
test
jnp
mov
in
add
idivb
lret
outsl
sub
mov
jmp
test
xorl
stc
mov
add
stc
in
call
stc
cmpl
jb
outsl
mov
jbe
push
stc
popa
jg
and
add
add
xchg
and
or
and
data16
sub
and
sub
into
inc
mov
daa
scas
push
fstps
mov
movsb
or
pop
jl
loope
xchg
and
bound
sarl
mov
jl
sub
mov
and
mov
jl
inc
popl
add
add
add
insl
shrl
jg
mov
inc
insb
adc
add
inc
mov
push
popf
sbb
cmpsb
ja
adc
pop
mov
test
out
testl
stc
pop
push
mov
pop
adc
sahf
test
fnsave
clc
out
pop
push
outsb
pop
out
clc
jmp
pop
adc
sbb
add
add
jne
push
or
out
xor
pusha
cmpsb
xor
pusha
xor
jo
xor
xchg
cmp
stc
xchg
filds
out
push
xchg
push
out
stc
jle
xchg
and
adc
sbb
xor
push
jno
stc
push
out
or
out
clc
add
xchg
mov
add
out
jge
xor
xchg
dec
and
movsb
dec
call
test
inc
notl
add
add
pop
test
nop
andl
add
daa
mov
mov
lods
idiv
fcomps
xor
sub
add
cmp
and
mov
add
test
add
xlat
sbb
inc
mov
mov
insb
call
xlat
sbb
add
mov
add
jle
sbb
pop
testl
pop
add
add
add
mov
andb
mov
clc
sbbb
clc
cld
test
incl
gs
dec
mov
adcb
xorb
pop
jp
sbb
pop
fisttps
mov
sbb
add
lods
dec
jecxz
call
and
and
cltd
popl
mov
add
pop
jge
or
mov
add
add
add
jmp
out
dec
sbb
lods
jle
xor
inc
or
add
out
aad
add
aam
lret
ret
add
add
es
faddl
mov
jg
in
out
push
scas
or
xchg
add
rol
jge
call
lods
cmp
into
push
inc
add
loop
add
add
add
adc
add
adc
or
clc
outsl
lahf
cmp
xchg
jmp
pop
adc
bound
xchg
leave
push
pop
out
stc
pop
movsl
and
adc
mov
gs
pop
loopne
sub
test
or
cmc
pop
loop
loope
popa
add
arpl
inc
bound
adc
stos
jmp
add
add
add
cltd
sbb
mov
push
inc
and
sti
xor
stc
aaa
xchg
and
adc
sbb
xchg
inc
add
jle
call
bound
jnp
jno
clc
add
subl
in
jns
pop
and
imul
cmp
and
mov
testl
ret
pusha
push
add
add
pop
rolb
sbb
push
nop
mov
and
adc
and
testl
push
mov
js
mov
sbbl
movsl
test
dec
lea
push
sti
dec
insl
add
outsl
or
push
outsl
andl
add
test
clc
adc
add
add
add
lcall
add
test
lods
fdivrs
and
stos
out
clc
cld
call
adc
lret
mov
call
aad
adc
test
and
insb
pushf
loopne
jl
adc
add
pop
test
mov
add
add
add
add
cltd
cli
mov
jmp
add
adc
cwtl
sbb
stc
push
es
ljmp
xor
add
shr
cmpps
mov
out
es
negb
outsb
mov
xchg
lsl
pop
test
dec
insb
sub
pop
adc
cmp
xchg
sub
and
xchg
scas
add
add
add
pop
adc
test
xor
lcall
fldcw
or
clc
jmp
lret
xchg
call
add
add
dec
push
ljmp
mov
call
and
movsb
adc
xchg
adc
int3
bound
sbb
add
add
add
test
jb
and
imul
fnstenv
pusha
pop
sbb
test
inc
push
and
xor
loopne
jmp
jbe
mov
stc
pushl
idivb
xchg
mov
incl
imul
and
or
scas
gs
test
inc
and
mov
incl
add
add
icebp
jmp
incl
or
dec
insl
add
lahf
dec
add
jnp
fucomip
je
fstp
test
push
call
jl
sbb
fucomp
test
dec
push
test
jnp
pop
out
jg
xor
jge
jp
jecxz
dec
fs
adc
nop
or
dec
cmc
addb
stc
cld
jmp
cmp
add
add
inc
stc
cld
lcall
mov
inc
jp
jnp
push
testl
movsb
adc
outsl
fnsave
add
or
add
in
fdivs
and
xchg
pop
add
mov
and
lds
push
push
clc
inc
fs
add
into
out
out
mov
xlat
mov
jns
ds
add
add
add
mov
inc
in
outsb
lcall
push
and
add
jmp
lcall
fcmovnbe
mov
add
push
cli
fdivrs
sbb
push
lcall
fcmovnbe
push
aas
jle
sbb
roll
xchg
xchg
and
mov
out
mov
xchg
js
sub
add
add
sub
sbb
in
adc
test
pop
pushf
inc
dec
sahf
in
jo
sbb
inc
jmp
bound
xchg
stc
shlb
notl
lds
ja
push
sti
dec
xchg
mov
add
pcmpgtb
or
adc
xlat
xor
clc
ds
jmp
add
add
add
add
push
fwait
enter
fisttpl
push
mov
in
insb
push
divl
or
loopne
pop
or
adc
repnz
sbb
nop
adc
add
hlt
adc
int3
adc
inc
push
push
or
loopne
out
testl
cmp
cld
decl
in
jp
jnp
or
dec
push
add
add
add
jns
mov
xchg
mov
inc
adc
loopne
mov
pop
cmp
cmp
mov
adc
int
adc
sbbb
adcb
out
add
fldt
add
jmp
pop
sub
adc
add
mov
push
push
or
jne
jb
add
add
clc
incl
mov
mov
cmp
clc
minps
push
jne
lock
insl
push
loopne
jns
stc
dec
pusha
cmc
addb
test
in
xor
insl
and
sarl
push
push
es
stc
adc
mov
pushf
aad
nop
movsb
icebp
push
xor
or
xchg
adc
mov
sbb
push
sub
cmp
add
add
add
mov
bound
fsubs
das
xchg
xor
jb
mov
xchg
lea
stc
mov
ja
pop
dec
ss
add
fst
repz
mov
jge
fucom
loopne
fistl
jecxz
ds
gs
mov
mov
js
push
add
push
addr16
mov
mov
jb
dec
std
adc
xlat
clc
pushf
add
add
add
jb
jnp
call
mov
jmp
mov
sbb
call
fucomi
pop
es
pop
add
pop
outsb
mov
loop
pop
xor
aad
test
jmp
adc
pop
mov
xchg
and
cld
call
fsub
clc
jmp
test
out
int
clc
bound
add
add
xchg
inc
xor
cmp
lahf
mov
mov
in
insb
ret
paddsw
shlb
fistl
mov
call
dec
inc
xor
mov
dec
push
in
jno
cwtl
loopne
jle
mov
add
insb
push
cld
dec
in
mov
cmp
mov
addl
add
add
sub
sbb
mov
fcoml
orl
loopne
mov
adc
add
sub
add
js
sub
insb
jae
and
xor
js
jae
cwtl
cmp
insl
jmp
sbb
pop
mov
jb
lea
in
mov
cld
lcall
mov
dec
insl
pushf
xchg
pop
push
dec
addb
add
add
fdivrp
jae
imul
push
aaa
das
push
jb
sub
jae
dec
jecxz
jo
aad
dec
jge
loope
inc
pop
jae
in
jae
jge
adc
jno
sbb
addr16
pop
bound
pop
adc
adcb
mov
push
xchg
sbb
mov
cli
xchg
mov
dec
jmp
push
outsb
inc
vpshufb
add
add
inc
pop
out
dec
in
ret
or
mov
adc
push
ret
mov
pusha
dec
mov
dec
fwait
data16
push
xchg
and
adc
fcoms
lods
add
loop
or
xchg
push
fildl
inc
ret
ret
fimuls
fidivrs
outsb
popf
jb
clc
push
test
dec
adc
dec
or
sbb
ja
add
add
add
add
popf
adc
dec
xchg
inc
loope
push
lcall
or
lahf
adc
xchg
out
test
push
je
add
pop
ss
add
pop
faddl
adc
add
sar
cmp
mov
fldt
test
jp
or
or
inc
xchg
enter
cli
add
cmp
adcl
push
add
add
add
bound
mov
or
pop
xchg
mov
nop
sar
push
aas
dec
push
mov
and
jp
insb
je
or
jle
and
ja
and
push
dec
push
and
pop
adc
inc
sub
into
xor
adc
cmp
adc
pop
mov
lea
dec
mov
mov
call
add
mov
incl
mov
aam
mov
lcall
adc
test
push
test
std
lock
ljmp
and
in
and
ffree
clc
pushl
push
pop
cwtl
aad
push
xchg
daa
push
test
add
in
test
movsl
daa
jae
nop
add
fdivl
and
add
fsubr
or
jne
xor
test
in
ds
xor
add
js
repnz
xchg
ret
cltd
fsub
out
in
popf
loopne
ret
mov
mov
gs
fistps
into
mov
or
cmp
pop
push
inc
sahf
stc
push
pop
or
enter
es
jecxz
gs
nop
or
add
add
add
ss
xchg
mov
fnstcw
cltd
push
fcmovnu
jmp
add
dec
fisttpl
outsl
pop
cmp
inc
jp
push
int
mov
add
push
add
jecxz
std
call
xchg
pop
imul
push
adc
mov
into
adc
out
pushf
dec
dec
divb
xchg
inc
in
add
add
add
je
push
adc
push
jp
push
xchg
mov
jmp
icebp
xchg
rcll
push
xchg
add
pop
gs
imul
jge
jle
arpl
add
jnp
or
jmp
inc
jmp
xchg
push
fsubp
cmc
add
mov
leave
fadds
test
add
cld
int3
loopne
add
add
add
sbbb
push
push
adc
pop
leave
flds
mov
adc
pop
in
mov
adc
jmp
jge
and
jge
adc
adc
orl
cmp
inc
insl
xor
pop
stc
push
inc
and
insl
and
push
popa
or
icebp
jo
pop
mov
push
add
add
add
ret
cmp
out
mov
rcrl
ljmp
js
push
gs
pop
ljmp
pusha
imul
and
push
mov
movsl
inc
push
mov
aaa
jp
fwait
dec
jae
je
add
or
dec
loope
add
in
jb
imul
pushl
mov
inc
loop
add
add
add
add
adc
or
iret
add
pop
jae
jl
adc
cmp
or
bound
inc
xor
out
pop
mov
add
cmp
cmp
sub
xor
and
push
xchg
cmpsb
cmp
out
mov
adc
mov
popf
add
jo
addb
jg
adc
add
lea
add
add
add
es
loop
out
pop
imul
cmpb
pop
in
dec
jmp
addr16
adcb
push
or
dec
jecxz
push
jl
sub
xchg
inc
fiadds
iret
mov
mov
clc
fs
sub
and
xor
xor
bound
add
bound
dec
int
jmp
subl
jb
lret
add
add
dec
mov
push
loopne
pop
xlat
dec
or
adc
add
adc
subb
cmpb
into
xor
jmp
inc
inc
call
andl
push
call
inc
xchg
sbb
adc
push
shlb
xor
add
sub
nop
mov
bound
push
in
push
add
add
add
fdivrl
xchg
mov
call
fmull
mov
adc
les
imul
ds
sar
aam
inc
pop
std
push
pop
sbb
fstpl
or
int3
jae
int3
push
int3
int3
xor
int3
fimull
cmpl
sarl
cmp
je
pop
jae
xor
sub
push
je
jno
adc
addl
add
add
or
lds
call
inc
or
sub
test
bnd
push
sarl
lret
xchg
ret
inc
pop
mov
jl
inc
push
jge
stc
push
xchg
call
pop
add
push
call
xlat
stos
sub
out
adc
test
or
xlat
mov
add
adc
repz
add
add
lds
jle
std
insl
aad
out
jnp
adc
xchg
out
pop
adc
jae
mov
sbb
add
add
lret
les
mov
push
cmc
adc
lea
add
mov
xchg
movd
repnz
dec
xlat
jle
add
sub
adc
jp
add
add
push
adc
pop
repz
add
push
sub
bound
aaa
push
sub
lret
mov
inc
or
jmp
popa
mov
call
push
stc
add
and
and
dec
je
jecxz
push
cmp
out
jl
in
pop
or
call
add
add
xchg
pop
stos
adc
cmc
sub
inc
adc
or
add
push
inc
and
push
aas
sub
loopne
xorl
adcl
cmp
int
or
dec
inc
sub
mov
dec
sbb
dec
cmp
dec
sub
inc
cmc
dec
incl
add
add
mov
inc
cmc
orb
push
inc
mov
jbe
rorb
add
jns
jnp
mov
jge
mov
sbb
int3
dec
nop
int3
pop
xor
mov
in
pop
xchg
add
pop
lret
mov
xchg
mov
repz
cld
call
mov
test
add
add
pop
mov
ret
push
in
sub
jnp
outsb
cmpsl
push
dec
mov
pop
add
sub
adc
rcrl
in
std
repnz
dec
push
jbe
pop
add
inc
xor
add
xor
pop
sbb
xchg
lret
and
inc
sub
das
inc
test
lcall
popf
pop
dec
jnp
pop
outsb
inc
add
add
add
bound
add
xchg
push
pop
adc
adc
decl
popf
out
push
cltd
push
out
mov
jo
in
out
mov
jo
out
xlat
mov
jb
sub
add
aam
xor
adc
rcrb
sub
inc
jo
in
daa
out
add
add
add
pop
add
stos
pop
pusha
pusha
fwait
cmp
iret
pop
adc
mov
test
lahf
jp
cld
push
xchg
clc
bound
hlt
jo
push
push
insb
jb
std
mov
stc
push
mov
out
ret
pop
jb
or
test
nop
imul
xchg
push
sub
sbb
decb
cmc
push
push
nop
out
add
add
mov
cli
push
int3
xor
stos
aaa
int3
sub
call
jo
adc
adc
inc
test
mov
cli
cmp
sub
xor
or
testb
xor
add
jnp
clc
push
dec
pop
je
pop
insb
mov
vmulps
testl
sub
mov
adc
lea
add
add
mov
jnp
test
insl
mov
sbbl
dec
pop
pop
out
mov
and
psubsw
sbb
dec
inc
dec
mov
das
je
aad
dec
test
ljmp
aad
dec
sub
in
xor
pop
jns
out
addb
in
xor
mov
jb
mov
add
add
adc
cld
jmp
xor
dec
dec
mov
cmp
pop
xor
insb
je
mov
jns
fnsave
add
pop
cmp
js
sahf
in
cld
jmp
sti
daa
xor
jmp
adc
rol
int
loop
addr16
inc
adc
add
out
sahf
or
rcll
out
add
add
add
lcall
jecxz
mov
add
adc
lds
std
repz
shl
add
adc
mov
fcmovnb
pop
cmp
das
push
and
data16
les
out
sub
cmp
popa
xor
sbb
bound
ljmp
jbe
clc
jmp
pop
adc
add
add
add
dec
cld
bound
inc
push
jb
mov
jg
lret
scas
mov
call
mov
bound
rolb
pop
adc
jmp
loope
sarb
das
inc
xchg
pop
xchg
push
shll
in
push
mov
ud1
mov
test
ss
cmp
sbb
add
push
mov
test
xchg
xchg
jb
ja
inc
mov
pop
adcl
aas
sub
fbld
cmp
enter
mov
test
cmp
mov
adc
rcrb
push
shl
ljmp
dec
aaa
addl
dec
mov
mov
adc
mov
mov
and
aad
inc
add
add
add
sarb
xchg
or
add
or
pop
test
xor
sub
sahf
into
add
hlt
mov
dec
call
in
push
test
clc
inc
call
in
xor
addr16
adc
gs
test
int
test
and
jns
sub
add
add
aaa
cmp
fdivr
sub
pop
add
and
mov
daa
jge
lret
adc
movsb
cmc
test
inc
or
stc
xchg
adc
inc
adc
add
pop
loope
aam
mov
xchg
aad
mov
inc
adc
sbb
stos
dec
enter
pop
ds
loope
pop
adc
and
add
add
jecxz
mov
enter
cmp
out
pusha
xchg
fcomi
add
imul
out
mov
imul
out
jmp
dec
lahf
jp
imul
xchg
mov
ss
push
cmp
mov
dec
dec
xchg
jp
dec
add
xchg
dec
add
adc
bound
xor
push
sub
add
add
add
add
pop
dec
bound
xor
subl
mov
push
fnstcw
sub
clc
jmp
lods
arpl
loope
adc
push
push
xchg
pop
sbb
pop
adc
iret
fs
insb
movl
jmp
inc
mov
pop
cli
xor
add
adc
add
cwtl
push
add
add
add
lds
add
insl
push
add
scas
rolb
add
mov
lret
xchg
nop
add
adc
add
incl
xor
push
leave
pop
mov
mov
inc
add
mov
loop
adc
insl
dec
add
mov
adc
mov
push
add
add
sub
add
add
xor
xchg
jbe
je,pt
xor
test
pushf
daa
sbb
cld
ljmp
lahf
jg
pop
dec
dec
dec
out
pop
ljmp
pop
ja
repnz
inc
dec
in
dec
test
and
mov
mov
xor
pop
inc
stos
das
inc
xor
hlt
cmp
or
dec
inc
mov
add
insb
aad
cmp
pop
lock
add
add
add
std
lcall
imul
aad
and
mov
ja
repz
mov
pop
add
dec
scas
rcrb
jmp
and
fwait
js
xor
loop
jecxz
xchg
add
out
inc
les
and
sbb
add
xchg
dec
cli
push
les
pop
adc
add
outsl
adc
adc
rorb
add
pop
adc
lds
out
in
push
push
sbb
sub
add
jnp
notb
mov
adc
xchg
mov
lret
rclb
ljmp
push
jge
adc
adc
push
insb
bound
stc
rclb
roll
add
add
dec
leave
clc
loopne
jge
jb
or
clc
mov
nop
mov
xor
std
sbb
std
call
dec
or
add
mov
test
sahf
mov
icebp
push
mov
pop
lret
in
push
lret
sbb
mov
xor
testl
addl
scas
idivl
addl
aad
dec
add
add
add
push
push
testb
xchg
add
dec
pop
bnd
pop
in
pop
cmp
mov
xor
sub
adc
inc
xchg
dec
insb
mov
xchg
dec
pop
iret
aas
out
dec
xchg
incb
mov
idiv
cwtl
push
push
mov
add
jmp
int3
dec
loope
int3
dec
loope
int3
pop
test
add
lea
jb
mov
cld
test
cs
je
add
inc
mov
and
and
pop
mov
filds
mov
cmpl
je
fildl
cld
ljmp
inc
test
add
insb
in
sbb
ds
cmp
dec
subps
mov
dec
mov
add
add
mov
test
sbb
add
mov
jecxz
cmpsl
adc
dec
pop
cmp
aaa
jo
sbb
mov
loope
lahf
mov
xor
es
sbb
jo
cltd
shl
push
mov
sub
xchg
iret
push
jns
out
mov
test
enterw
add
popa
mov
sarl
dec
mov
out
imul
mov
mov
lock
add
aad
js
and
clc
jmp
loopne
call
dec
xor
je
je
test
into
cmp
adc
push
js
enter
ret
jmp
add
xchg
or
pop
adc
jmp
or
mov
lcall
mov
add
mov
mov
cmpsb
add
pop
ds
lcall
xor
enter
mov
fxsave
pushf
and
mov
aad
pop
shlb
data16
add
add
adc
mov
sldt
jmp
xor
jle
test
pop
pop
xchg
inc
mov
sub
dec
je
shl
mov
orl
cld
imul
pop
addl
inc
pop
mov
mov
xor
and
aaa
test
xchg
add
call
add
add
or
cmpsb
inc
xor
or
test
lcall
dec
js
cmp
pop
cmp
pop
or
inc
insb
mov
test
shlb
lcall
or
movsl
cmp
adc
add
daa
mov
mov
add
in
jo
nop
daa
rorl
hlt
aas
call
add
add
add
adc
subb
xchg
fsubl
pop
sub
push
pop
and
xchg
cmp
add
xchg
push
add
pop
inc
mov
out
fsub
mov
pop
std
and
add
bound
jmp
mov
mov
outsb
pop
pusha
adc
dec
adc
or
loope
add
mov
fs
movsl
out
pop
mov
add
add
add
out
stos
cli
push
push
xchg
ds
push
add
pop
jl
jmp
roll
repnz
push
aas
xor
pop
jmp
loope
jl
adc
hlt
outsb
adc
sub
ja
pop
mov
dec
mov
cmpsb
cmp
push
loope,pn
push
mov
add
add
inc
xchg
inc
rcl
dec
decb
pop
adc
jmp
push
push
test
and
jmp
pop
adc
add
sar
cmp
jg
inc
str
aaa
jno
insb
jl
jnp
add
push
add
je
or
jle
lods
push
pop
cmp
add
add
add
push
sti
leave
sub
sub
in
mov
pop
int3
push
add
xor
or
je
testl
and
push
pop
add
cli
pop
les
add
sbb
mov
js
stos
mov
cmpsl
lret
mov
gs
cmpps
jmp
test
mov
add
add
add
jae
xchg
cmp
test
push
adc
js
lock
pop
mov
ret
push
and
lret
stos
sbb
lret
mov
jmp
lret
xchg
pushf
mov
or
cmpsl
cld
mov
cmpsl
cld
lcall
push
je
or
call
mov
xlat
test
inc
jle
pop
adc
add
in
test
or
or
in
add
add
add
pop
mov
or
loop
add
sub
out
mov
in
test
out
pop
mov
push
out
adc
add
pop
mov
dec
testl
sub
cmp
sti
sbb
cmp
xchg
es
cmp
in
pop
adc
xchg
adc
cmpsl
sbb
cmpsb
or
pop
call
sbb
add
sahf
add
cld
jmp
sub
or
xor
inc
sub
shll
sub
jb
pop
adcl
inc
xor
or
mov
push
cmp
adc
add
pop
es
pop
adc
out
adc
call
mov
scas
add
fdivrl
pusha
ljmp
outsb
mov
add
add
xlat
push
pusha
loopne
adc
pop
in
jno
xor
dec
mov
adc
ja
mov
adc
movaps
mov
mov
stc
fwait
leave
cmp
incl
jl
mov
test
pop
pop
dec
add
aas
jg
adc
mov
mov
pusha
sbb
sub
push
lea
inc
add
add
add
add
pop
adc
mov
add
cmp
add
and
ds
dec
mov
jb
add
mov
jmp
lods
push
jmp
jmp
andl
cld
xchg
pop
test
test
cmp
call
mov
lahf
push
push
add
add
addb
lahf
xchg
sar
in
aaa
andl
sti
test
test
push
dec
mov
in
xchg
xchg
fucomp
xrelease
insb
in
iret
not
test
push
adc
jns
test
and
push
add
cmp
or
out
pop
adc
add
cmc
pop
inc
adc
add
pop
mov
sbb
ror
add
pusha
mov
popa
sbb
jecxz
out
jecxz
inc
mov
mov
in
xor
cltd
aam
add
ret
dec
push
divl
sahf
cmpsb
cmp
nop
xor
jb
insl
inc
orb
sbb
sarl
sub
test
test
test
add
mov
push
add
scas
dec
test
test
fidivrs
adc
bound
pop
bound
enter
enter
test
push
cmp
stc
sar
movsl
clc
mov
cmp
lea
daa
jle
dec
rcll
adc
das
jp
add
pop
mov
loope
mov
data16
cmp
add
lahf
lcall
test
and
add
cltd
enter
add
mov
cwtl
push
mov
pop
add
aaa
lea
xchg
stc
dec
or
inc
je
mov
mov
inc
ja
aas
insb
dec
jle
xchg
out
clc
pushl
mov
js
xor
cmp
add
bound
pop
lret
dec
push
popa
aad
push
pop
jae
add
pop
xor
add
addl
filds
add
mov
js
sub
sbb
mov
sbbb
idiv
mov
daa
lds
xor
mov
cmp
fscale
dec
call
add
xchg
pop
das
inc
insb
aad
add
inc
inc
pop
inc
sub
clc
add
add
add
sub
adc
mov
sbb
test
call
and
inc
cmp
sub
jp
orb
and
notb
pop
cmp
outsb
dec
inc
xchg
test
test
insl
add
cmp
add
shlb
adc
xor
pop
pop
push
add
add
add
cltd
fistpl
mov
imul
push
pop
pop
inc
test
insl
enter
pop
adc
mov
and
inc
adc
fldt
out
xchg
and
adc
jl
or
mov
bound
shl
clc
push
sbb
or
pop
cs
sub
jge
add
add
add
or
add
sub
in
xor
jge
pop
sbb
push
add
jl
roll
cmp
out
xchg
test
mov
add
lods
xchg
pop
data16
call
inc
sbb
arpl
jmp
test
add
dec
adc
add
add
andnps
imull
xor
mov
lods
mov
pop
lret
sub
adc
out
lret
mov
addl
inc
or
or
xchg
adc
mov
or
aam
test
adc
add
out
mov
stc
pop
mov
aas
adc
in
pop
cmp
addl
dec
or
pop
adc
inc
std
adc
add
orl
cld
pop
pop
push
push
adc
push
adc
pop
out
sti
rcrl
fwait
int3
jne
fidivrl
idivl
push
add
jnp
in
cmp
std
inc
mov
negl
sub
bound
hlt
xchg
add
and
aad
hlt
rcrl
sbb
roll
std
lcall
sar
add
add
popa
mov
cmp
dec
shl
int
fpatan
lock
mov
dec
in
out
lock
ret
aas
mov
into
in
das
hlt
push
enter
mov
add
xchg
into
add
pop
out
cld
int3
shl
mov
push
fistpll
sbb
sub
ficompl
cld
addps
js
sbb
dec
adc
cld
out
inc
in
js
add
add
add
cli
sti
nop
dec
repz
or
pop
inc
push
lcall
add
pop
ss
push
xor
pop
cwtl
sub
ficompl
jnp
sbb
sub
cmp
lretw
pusha
es
aad
clc
jmp
jecxz
call
fisubs
xchg
pop
imul
pop
loop
add
pop
inc
adc
add
add
add
xchg
inc
in
inc
or
sbb
cmpsb
test
and
jmp
cmp
aas
std
push
inc
or
sbb
mov
xchg
dec
in
notl
jb
add
or
pop
inc
adc
fwait
add
jbe
bound
dec
bound
dec
add
dec
pop
aaa
adc
and
adc
add
dec
add
add
add
add
verw
adcb
or
mov
add
cmp
sub
and
mov
mov
push
lcall
shlb
test
lret
aaa
fadds
jl
jnp
sti
pcmpeqb
add
sbb
pusha
mov
lret
test
aam
enter
add
pop
jns
add
sti
ljmp
mov
cli
push
add
aam
cmc
add
mov
adc
stos
jg
clc
je
pop
add
jne
mov
cmpl
mov
loopne
ss
fwait
cld
lcall
lea
jb
aaa
adc
gs
ss
push
addr16
das
aas
adc
add
add
xor
pop
das
sbb
mov
add
rorb
rol
sbb
push
push
test
xchg
loope
xor
sub
adc
nop
int
es
sub
loop
pop
aaa
data16
clc
std
insl
xor
sbb
loop
jge
add
push
cltd
ljmp
test
sti
add
insl
xor
lcall
add
add
inc
mov
dec
mov
pop
add
into
ret
mov
cmp
inc
mov
add
push
mov
prefetch
bound
or
pop
adc
das
pop
push
add
pop
es
sbb
bound
jge
push
test
clc
jmp
lahf
std
xor
mulb
das
jb
add
add
daa
add
je
push
jno
push
pop
xor
mov
movsl
mov
mov
adc
push
xchg
test
iret
repnz
adc
and
add
mov
jb
xchg
mov
orb
adc
test
jmp
fwait
stc
pushl
adc
inc
xor
sbb
jns
xor
add
add
add
orl
mov
push
daa
fisttpll
aaa
idiv
jle
das
test
mov
inc
xchg
jbe
insb
mov
add
imul
add
adc
mov
inc
add
out
cmp
fistps
cmpl
add
dec
cs
mov
cld
add
add
add
mov
call
xlat
notl
call
in
out
test
add
or
sbb
jle
and
aam
xlat
fisubs
test
jg
adc
arpl
cmc
mov
loope
cld
test
mov
dec
sbb
jbe
xor
mov
adc
test
test
dec
mov
and
xor
add
add
fildl
push
add
adc
add
es
in
inc
pop
cmp
pop
sbb
les
cwtl
test
cmpsb
fnstcw
std
arpl
jmp
clc
scas
fsubrl
lcall
scas
sbb
pop
adc
add
xor
js
std
add
add
add
push
add
cwtl
and
add
add
lahf
dec
jmp
pop
adc
xorb
out
push
mov
gs
dec
adc
fwait
test
cs
dec
sub
mov
sbb
inc
add
pop
sbb
bound
dec
jge
xor
into
sbb
and
mov
adc
fst
ss
and
push
scas
add
add
add
and
popf
adc
es
clc
mov
loop
sbb
add
adc
notl
adc
fdivl
sbb
sbb
clc
cwtl
repz
push
mov
jmp
or
ja
ja
adc
jae
mov
pushl
icebp
lcall
clc
pushl
sub
push
add
add
add
data16
je
js
negl
sarb
xor
sbbl
insl
or
movsb
in
mov
push
orl
or
add
dec
push
mov
ret
add
test
lcall
xchg
mov
mov
imul
mov
mov
or
fnstsw
add
add
je
xor
jbe
dec
add
enter
xor
pop
ds
pop
fisubrl
jl
test
aaa
xor
repnz
test
xor
add
dec
dec
in
inc
mov
nop
mov
pop
mov
aas
je
movsl
push
sub
xlat
adc
sbb
aas
into
add
add
add
add
cmp
lcall
mov
or
sbb
jle
mov
fildl
push
mov
dec
jbe
es
arpl
outsb
cmpsl
xchg
iret
out
add
out
pop
xchg
sbb
loopne
testl
pop
cmp
loop
repz
adc
sbb
add
add
push
pop
sbb
loop
rorl
sbb
push
data16
cmc
loop
or
sbb
scas
dec
sbb
aad
push
or
sbb
mov
mov
mov
loop
or
sbb
scas
dec
sbb
aad
dec
or
or
mov
mov
imul
popa
push
or
cs
mov
testb
add
add
mov
or
loope
lods
cltd
clc
xchg
scas
mov
xchg
ficoml
fs
mov
mov
pop
mov
ja
ret
jnp
cmpsl
adc
test
pop
idiv
mov
shl
call
mov
ret
mov
inc
ja
mov
pop
int3
ja
ret
add
add
int3
int3
ljmp
xor
xlat
cmp
add
test
adc
add
pop
test
adc
and
and
dec
mov
xor
pop
decb
test
rol
jae
rorl
push
mov
stc
shrl
pop
in
pop
mov
pop
inc
aaa
add
stos
cld
dec
in
adc
add
out
mov
test
xadd
push
lcall
jge
outsb
and
in
adc
frstor
add
pop
sub
scas
xchg
test
mov
cmpsl
subl
test
incl
wbinvd
loope
or
dec
adc
out
pop
lcall
jecxz
pop
dec
add
add
add
inc
dec
adc
sub
mov
push
push
loop
out
pop
mov
mov
std
pop
pop
cs
out
pop
adc
mov
mov
mov
jnp
sahf
out
adc
cmpsl
add
fisubrs
lcall
push
push
mov
push
add
pop
adc
add
out
xchg
push
inc
out
sub
icebp
gs
dec
stc
mov
sbb
test
mov
lahf
dec
sbb
lret
xchg
dec
sub
icebp
gs
dec
stc
sbb
dec
sbb
push
jge
pop
pop
call
inc
adc
call
in
fistps
test
xor
mov
add
pop
adc
sub
mov
pop
pop
adc
add
mov
or
xchg
jbe
pop
in
cmpl
add
mov
rcr
mov
dec
adc
add
mov
xchg
pop
inc
addl
xchg
adcl
pop
mov
decl
push
pop
in
jb
ret
add
add
jp
incl
mov
inc
aaa
push
push
pop
outsl
pop
idiv
cmp
and
rcrl
add
jnp
sbb
mov
in
push
mov
add
test
or
lret
sbb
lret
adc
mov
in
or
sbb
leave
push
or
jae
xor
out
or
add
add
add
push
or
das
add
inc
add
dec
lods
cld
jmp
cltd
mov
and
xlat
jns
xchg
rorl
pop
sub
xlat
pusha
and
stos
repz
fwait
out
pop
xchg
stos
push
pop
adc
mov
cmpsl
cmp
incl
arpl
pop
mov
out
adc
into
cmp
add
xchg
or
mov
insl
inc
movsb
das
imul
xchg
pop
lods
pop
lcall
fwait
inc
mov
add
fwait
or
xchg
das
das
repnz
sub
xchg
clc
cmp
mov
cmpsb
jmp
call
fnstsw
pop
std
imul
jl
add
add
add
add
or
cmpsl
inc
mov
push
mov
jmp
sbb
sbb
mov
jae
sub
push
and
pop
lret
test
sbb
loope
push
xor
pop
adc
mov
dec
cmc
out
cwtl
clc
cmpsl
sub
pop
sub
mov
mov
pop
pop
jmp
xchg
ljmp
add
add
add
jl
mov
incl
adc
lea
jg
ja
lods
out
cmp
push
mov
lods
sbbl
fwait
push
and
push
push
mov
pushf
inc
mov
sub
adc
add
enter
mov
or
cmp
pop
loop
or
cld
inc
or
fstps
push
push
cmp
add
add
add
idiv
cld
mov
addl
inc
and
inc
not
pop
sub
add
cld
pop
mov
in
or
mulb
push
mov
sub
dec
inc
movsb
cmp
and
dec
pop
pop
stos
cld
rcrb
mov
lcall
lret
stos
aam
jmp
loopne
insb
push
xor
incl
add
roll
and
test
lcall
mov
jmp
pop
mov
fucom
pop
xchg
sahf
jg
repz
mov
or
outsb
mov
nop
dec
mov
fists
adc
add
add
lahf
loope
orb
mov
jmp
xor
cltd
ljmp
pop
adc
add
add
add
mov
push
pop
push
xlat
add
out
adc
pop
mov
mov
clc
add
adc
mov
aas
adc
sub
mov
cmpsb
inc
mov
iret
inc
out
fildl
popf
add
and
sbb
test
lods
inc
call
bound
mov
nop
mov
sub
pop
bound
add
add
cmp
cs
inc
sbb
shll
xchg
clc
jmp
test
xchg
idivb
sub
cmp
leave
lret
cmp
test
in
mov
cmp
jmp
sub
add
ficomps
cmpsb
cli
pop
adc
pop
or
add
js
xchg
adc
jnp
add
add
add
movb
add
inc
or
std
orb
inc
adc
cmp
out
call
in
mov
pop
adcl
rcl
add
adc
subl
add
mov
push
add
jb
mov
add
sbb
add
xchg
notb
movsb
mov
jge
adc
test
add
add
mov
add
pop
stos
push
mov
test
in
add
or
call
fucom
or
xor
or
jle
fwait
xchg
dec
jge
gs
cmp
pop
add
pop
stos
test
nop
decb
mov
fsts
cmpsl
repz
aad
stos
sub
and
sub
stos
cld
push
fcoms
add
inc
and
add
add
cltd
loop
add
cld
sbbb
lods
clc
mov
mov
push
test
out
pop
add
shlb
aas
cld
adc
aad
repz
pop
pushf
aaa
mov
nop
add
ficoms
stos
sti
loop
bswap
cmp
adc
sahf
in
daa
lahf
pop
xchg
mov
add
add
add
rcll
fadds
outsb
clc
xchg
out
js
xchg
movsl
adcl
add
cmp
fwait
jmp
out
fildl
sub
cmpsl
sahf
pop
lcall
pop
mov
sub
and
sub
nop
mov
add
lret
bound
cltd
out
dec
adc
jb
or
stos
push
in
mov
cli
mov
jmp
nop
repz
add
add
add
xchg
or
add
jmp
imul
xchg
xchg
shrb
add
test
adc
or
fs
add
jmp
pop
adc
dec
or
and
out
insl
adc
add
and
cld
int
or
stc
mov
or
add
into
jecxz
add
add
add
adc
sbb
jne
dec
inc
adc
inc
sbb
sub
js
cli
incl
jecxz
adc
adc
jmp
push
rcll
xlat
jp
out
or
add
jnp
push
inc
mov
jne
sarb
pop
mov
jp
add
fiadds
add
add
add
stos
mov
setg
inc
in
out
cltd
xchg
fdivs
repz
sbb
test
cld
test
inc
jbe
inc
mov
sub
aas
or
push
jp
in
sti
scas
bswap
pop
cmpl
incl
pop
push
add
xchg
jle
leave
sub
cmpb
jnp
jl
mov
ds
push
inc
adc
add
jp
xchg
adc
jp
xor
or
jl
sbb
in
pop
add
cmpsl
fwait
pop
sti
in
sub
outsb
push
test
or
mov
push
inc
push
rep
push
jmp
mov
and
pop
pop
adc
xor
mov
addr16
out
adc
inc
add
add
add
fwait
sbb
cmp
lds
xor
add
dec
sahf
xchg
cmpsb
aaa
jmp
call
inc
addb
clc
jmp
dec
in
addr16
mov
xchg
pop
xchg
xor
pop
sbb
stos
and
lret
add
sbb
aad
push
aas
fstps
add
mov
adc
cmpsb
add
add
add
add
pop
sbb
cwtl
roll
inc
iret
jno
movsb
iret
xchg
cld
call
loope
jae
xchg
punpcklbw
addb
dec
xor
push
jne
dec
add
inc
cmp
pop
mov
outsb
add
add
or
aam
jecxz
inc
lods
inc
dec
xchg
addl
add
add
or
hlt
pop
add
mov
add
xchg
je
in
in
mov
mov
dec
push
lahf
push
dec
add
dec
clc
into
pop
mov
les
inc
imul
sub
roll
inc
aaa
mov
cmp
add
inc
aad
push
adc
lcall
inc
adc
cld
lcall
cmp
jp
jp
jp
orl
add
add
jae
or
jne
stos
incl
xlat
cmp
fldl
std
mov
jno
cmp
mov
insb
imul
mov
inc
push
out
push
clc
fnstsw
inc
push
outsl
inc
cld
int3
jecxz
inc
dec
jp
lcall
adc
fwait
xchg
es
inc
sbb
adc
add
cwtl
xor
fcom
out
jle
test
inc
repnz
mov
out
mov
xchg
cmpsb
xor
or
out
lahf
shll
add
adc
ret
out
pop
test
adc
and
add
outsb
add
adc
jp
fidivrl
sbb
imul
adc
jno
and
inc
jle
stos
lahf
fcoml
in
add
add
loop
ret
imul
inc
add
scas
test
xchg
add
mov
aas
bound
mov
iret
repz
rorb
jmp
insl
xchg
dec
xchg
inc
fcomip
bound
dec
cmp
jns
xor
test
xchg
inc
rcrl
iret
repz
cld
cmp
pop
in
add
mul
fimuls
or
add
add
add
or
xor
test
pop
push
add
pop
adc
push
pushf
and
jmp
adc
xchg
add
add
test
cld
add
or
or
or
inc
cld
jl
lret
loopne
xchg
mov
add
push
pop
mov
sbb
hlt
sti
loopne
sub
xchg
mov
mov
add
mov
adc
mov
and
orl
shrl
add
add
sub
push
movsl
push
dec
ja
orl
dec
clc
mov
test
add
add
pop
jp
stc
jle
loop
stos
push
add
fidivl
outsb
std
adc
pushf
cmp
xchg
bound
fcomp
pop
fsubrl
add
test
add
add
sbb
pop
cld
clc
pop
jp
enter
out
mov
cmpsl
pushl
cmpb
and
ds
lret
lret
sub
aaa
add
pop
jp
jl
insl
cld
or
cwtl
sti
ljmp
cld
gs
fs
out
mov
jmp
pushf
hlt
xchg
inc
outsb
dec
ss
jmp
test
in
add
add
add
pop
xchg
jae
pop
sbb
bound
out
xchg
mov
fwait
inc
subb
shr
add
test
cmp
mov
aam
out
pop
adc
mov
fidivrl
sbb
add
in
and
pop
mov
jo
sbbl
aas
xorl
vcvttps2dq
fwait
loop
movsl
pusha
xchg
inc
add
in
add
add
add
jle
mov
mov
insb
rol
cmp
and
sub
pop
add
ljmp
rolb
cmp
out
rclb
jmp
sbb
imul
xchg
test
test
out
insl
adc
jmp
lods
or
jmp
sbb
adc
out
push
adc
jmp
jmp
out
add
add
add
add
int3
inc
fmull
jnp
sbb
pop
test
cli
ljmp
addl
fadds
lods
lret
add
bound
rcrl
rorl
adc
sbb
jge
test
or
inc
testl
push
add
add
add
int
inc
roll
pushl
push
outsb
add
adc
inc
lock
outsb
add
pop
in
mov
pop
js
dec
push
add
in
xchg
dec
lods
stos
xchg
and
push
std
inc
ss
cmp
ja
lods
lcall
or
cmp
adc
add
add
add
sbb
mull
cld
pop
arpl
push
jp
or
jns
dec
shr
mov
mov
add
pop
push
jg
pusha
sub
test
lahf
stc
jle
jns
lcall
mov
in
adc
cli
jo
adcb
sub
fadds
add
sahf
in
pop
xor
adc
out
test
addb
add
add
and
jl
mov
movsb
push
int3
mov
pop
adc
mov
pop
cwtl
cltd
sbb
inc
pop
test
in
cwtl
adc
ljmp
adc
out
add
jns
aad
xchg
pop
xchg
dec
out
mov
in
sub
sub
mov
add
bound
bound
shrb
and
add
add
xor
jns
add
adc
inc
shrl
out
into
scas
and
pop
adc
bound
or
fisubs
sbb
cmpsb
insl
mov
and
addr16
les
add
xchg
rcl
dec
je
jb
call
xchg
dec
cmpsb
pop
adc
jmp
and
push
add
out
add
add
add
test
jp
jnp
jg
cmp
test
push
add
out
addr16
js
clc
pushl
aas
fs
pop
cmp
ss
andl
mov
je
orl
sbb
mov
dec
loopne
adc
mov
mov
jge
push
pop
test
call
or
lods
orl
add
add
jp
iret
or
mov
in
orl
dec
clc
outsl
insb
mov
test
inc
les
adc
xrelease
inc
es
xchg
push
lahf
rorb
or
cmp
inc
cltd
mov
dec
cmp
imul
ja
mov
push
cld
int3
mov
add
add
cmc
push
lcall
sbb
pop
pop
orb
cld
or
repz
int3
repz
hlt
sbb
movb
mov
mov
jmp
std
and
adc
adc
dec
mov
jp
arpl
xchg
aaa
or
ljmp
xchg
xchg
push
in
jp
jo
orb
stos
cld
adc
add
add
add
jns
fmul
or
lahf
mov
ljmp
fiaddl
addr16
in
xchg
jge
rcll
jno
dec
sbb
gs
pop
adc
xchg
sub
cmp
cmp
adc
xchg
movb
push
jmp
add
js
xchg
sbb
outsl
insb
fdivr
sti
jmp
pop
adc
aas
add
add
add
insl
in
int3
dec
in
fldt
movsl
mov
out
jecxz
add
in
sbb
xchg
mov
sub
inc
sbb
lret
jns
push
xor
shl
cmpsl
jne
call
xor
cmc
cld
sub
loopne
std
call
pop
add
jecxz
mov
inc
add
incl
add
add
pop
cltd
pop
mov
sub
insl
in
cld
arpl
inc
xor
jp
or
pop
test
adc
add
adc
add
xchg
mov
inc
adc
add
lea
dec
stos
pop
jmp
mov
xor
movl
aas
test
inc
bound
pop
pop
inc
add
add
add
pop
xchg
mov
test
or
in
xor
cs
jb
pop
push
cmp
lsl
cltd
add
pop
push
mov
js
pop
nop
ss
pop
push
inc
fsub
daa
or
fisttpll
add
popf
xchg
shlb
lcall
xorb
cld
rcrb
incl
add
add
pop
out
cld
pop
cwtl
sub
sbb
adc
arpl
mov
test
icebp
dec
or
adc
loopne
outsb
dec
decb
lret
loope
xor
fdivr
mov
mov
mov
outsb
xor
cs
fcmovu
into
mov
cmp
mov
data16
pop
nop
mov
loope
jbe
or
outsl
inc
push
outsl
add
add
add
ficoms
pop
jl
pushf
inc
push
push
pop
adc
xchg
mov
mov
and
pop
adc
mov
xchg
and
pop
fimuls
inc
lret
xchg
clc
push
jge
fstl
add
pop
or
bound
cmp
rolb
clc
jmp
add
fbld
int
sbb
rcrl
rorl
jg
stos
mov
jo
test
dec
mov
mov
cmp
mov
pop
adc
pusha
cmpsl
or
xchg
dec
add
cmpsb
jne
movsb
leave
ret
testl
inc
in
jae
rcrl
inc
hlt
mov
or
mov
rorb
add
add
aas
pop
scas
dec
jmp
cmp
dec
sti
shrb
fwait
mov
add
add
cld
add
push
pop
mov
mov
shl
mov
add
sti
inc
je
pop
mov
lea
add
stc
pushl
push
lret
loopne
leave
jecxz
mov
adcl
cmpsb
pop
mov
mov
rcrb
dec
in
addl
mov
imul
lods
cwtl
xor
add
mov
mov
fwait
fs
test
mov
mov
dec
pop
repz
in
cltd
test
dec
mov
push
hlt
ret
jb
stos
push
pop
push
cld
inc
inc
or
mov
push
mov
pushl
or
add
add
add
pop
mov
cmp
sbb
cmpsl
add
or
add
pop
int3
xchg
jb
mov
adc
add
rcrb
fdivr
add
xchg
adc
rclb
fidivrl
or
in
and
pop
leave
mov
or
cmpsb
adc
fmull
leave
adc
fcmove
push
pop
mov
add
add
add
and
add
rcll
cld
popa
js
dec
sahf
mov
push
out
pop
pop
out
pop
mov
jmp
xchg
push
mov
mov
and
ret
jo
jge
das
dec
rorl
cld
call
lock
cwtl
inc
fbld
fnstcw
mov
add
add
add
fbld
loope
cmp
iret
sbb
in
jg
mov
ret
jo
jge
scas
imul
test
fwait
outsb
pop
jo
pop
or
popa
ret
movl
add
add
xchg
mov
out
jae
shrl
inc
hlt
inc
movsb
or
ss
mov
push
scas
dec
push
test
add
movsl
add
rcll
jl
outsb
push
inc
sbb
add
adc
mov
mov
shll
leave
sti
inc
mov
pop
mov
test
add
adc
loopne
enter
or
ret
and
pop
mov
mov
inc
push
aad
addl
addr16
mov
and
add
add
mov
scas
in
sbb
and
out
addr16
pop
out
mov
in
pop
test
lahf
inc
je
repz
mov
daa
add
push
push
jmp
scas
add
fldl
test
cmpsl
cli
adc
cld
test
inc
jns
repnz
xlat
out
in
dec
jg
push
add
add
add
pop
add
add
push
mov
popa
inc
inc
ret
dec
out
mov
sahf
adc
cltd
dec
out
out
pop
pusha
push
jmp
or
mov
rclb
mov
pop
nop
imul
je
mov
std
inc
into
mov
inc
mov
dec
adcl
stos
cmp
call
loope
out
pop
add
push
add
add
add
inc
into
ret
into
ret
mov
daa
sub
pusha
sub
mov
sub
test
enter
push
xor
arpl
test
testb
pushf
cmc
sub
jb
roll
xor
cwtl
xorl
in
repz
dec
stc
fld
fistl
sbb
aas
bound
add
add
pop
pop
and
loop
dec
popf
in
fmulp
jmp
pop
test
pop
mov
sbb
sahf
pop
jge
sub
jmp
insl
sar
pushl
aaa
add
sldt
ficomps
incl
jne
inc
adc
cli
xchg
orb
add
shr
mov
xchg
mov
add
stc
incl
mov
testl
add
add
push
add
subb
add
add
mov
push
pop
mov
lahf
inc
cld
cmp
lret
loopne
mov
add
mov
and
addl
cmp
add
stc
inc
pop
jl
inc
jle
mov
call
xor
push
xchg
popf
nop
push
sbb
pop
push
add
add
aaa
clc
out
in
lahf
js
js
push
dec
loopne
sbb
add
mov
mov
push
jmp
cld
mov
in
mov
xor
adcb
in
cld
rcrb
loopne
push
push
shl
mov
jno
test
or
add
and
pop
mov
hlt
add
add
add
arpl
addr16
in
out
bound
xchg
insl
add
adc
pop
inc
jo
loop
adc
cld
loopne
cs
mov
xor
mov
xchg
sbb
inc
xor
pop
pop
jmp
jl
xchg
out
icebp
push
xchg
mov
jo
xor
rcrb
and
fiadds
jecxz
out
jl
jns
cmp
add
add
pop
pushf
jmp
lret
bound
xchg
mov
cmp
add
outsb
clc
jmp
cmp
sub
adc
pop
adc
movsb
cmc
outsb
clc
jmp
mov
push
dec
inc
movsb
fmuls
bound
xchg
xchg
ret
sti
jo
add
rcrl
shll
sti
xchg
dec
or
add
add
adc
pcmpeqw
or
frstor
push
pop
out
jp
popa
in
add
fisttps
fwait
lahf
testl
ja
push
mov
dec
in
fstpl
insb
clc
mov
addl
ds
and
sub
arpl
inc
dec
push
push
adc
inc
sbb
sub
mov
mov
insb
sub
add
add
add
push
or
pop
dec
lret
push
mov
cmp
adc
das
or
sarb
lret
and
mov
cmpb
addr16
push
inc
or
cld
fstl
jb
mov
cld
jmp
daa
or
cmpsl
adc
aas
fldl
std
dec
push
and
lcall
std
push
add
add
add
loope
sub
jl
aam
jbe
jp
jl
pop
aad
movsb
sbbb
xchg
mov
test
or
sub
pop
repz
fcoms
lea
clc
fnstcw
test
adc
push
jp
pop
push
jb
out
push
xor
bound
mov
pop
adc
pop
add
add
add
fwait
pop
inc
adc
cmp
test
push
sub
loopne
and
push
lcall
push
mov
jb
adcb
dec
jp
dec
dec
jb
mov
dec
bound
popa
dec
pop
adc
dec
push
adc
dec
inc
adc
ret
xor
push
ret
and
add
lahf
sub
add
add
add
sub
add
pop
lret
lods
loope
lret
sbb
js
bound
sbbl
mov
vrcpps
out
xor
popf
loopne
sbb
shlb
sbb
pop
jl
inc
xchg
dec
std
mov
bound
pop
jl
and
adc
jmp
pop
adc
popa
fldt
push
xor
mov
add
pop
pop
lret
sbb
xor
int3
cli
call
sbb
mov
bound
xor
notb
es
inc
push
or
mov
cmp
mov
cmp
inc
outsl
push
dec
pushl
mov
push
ret
jp
in
je
dec
mov
test
or
add
add
call
mov
xchg
jnp
or
inc
cld
movb
les
jg
imul
fbstp
or
pop
xchg
jns
sub
rcrl
pop
pop
jns
or
mov
stos
or
cs
aad
ja
sbb
dec
mov
js
out
add
add
and
mov
jns
orb
test
cmp
aaa
cld
fnsave
stc
test
cmp
mov
adc
and
sbb
push
xor
xchg
insl
xchg
fwait
xlat
push
mov
loop
or
cli
jl
insl
insl
aaa
lretw
dec
push
mov
loope
sbb
add
mov
sbb
sub
adc
jge
lret
movsl
mov
test
sbb
fwait
and
pushf
gs
pop
adc
inc
imul
enter
jecxz
outsl
das
es
das
pcmpgtb
out
aam
clc
push
adc
sti
jo
mov
loope
ret
imull
mov
add
add
pop
dec
jb
dec
ret
sti
fwait
in
stc
out
in
in
push
test
jg
test
cmpsl
lcall
and
fsub
cmp
mov
sar
jo
mov
loope
ret
imull
rorb
mov
out
ret
in
mov
test
fwait
jge
shrb
push
add
add
add
call
xorl
or
daa
cld
cltd
inc
mov
or
fwait
jge
bound
inc
call
addl
sti
cltd
push
lods
or
adcb
dec
fwait
sbb
testl
or
sti
cltd
in
pushf
addl
out
or
dec
ficompl
insb
and
pop
into
cmp
add
add
add
insb
ljmp
clc
sub
add
cld
lcall
inc
add
js
jmp
cmp
lret
sbb
mov
lret
and
fmuls
lock
xor
push
or
jle
push
cltd
xor
cld
xchg
inc
jnp
ret
call
pop
sti
mov
add
add
add
add
and
dec
or
jne
fnsave
fsub
pop
pushf
orb
insl
push
adc
ss
ret
sbb
xor
into
lcall
out
adc
out
insb
dec
mov
pop
xchg
sub
loopne
sbb
and
mov
add
pop
inc
shl
lret
lret
popfw
add
add
add
sbbl
fidivrl
insl
pop
jle
sub
andl
adc
enter
jp
jne
cmovle
jp
jne
pop
xchg
popa
test
in
adc
test
inc
call
shlb
mov
adc
mov
pop
adc
jmp
dec
test
jmp
adc
sub
adc
push
add
xchg
dec
jb
sbb
in
push
push
adc
stos
pusha
rorb
scas
lea
xor
loopne
imul
addb
gs
add
gs
aas
adc
jae
jecxz
jg
mov
cltd
inc
cmpsb
or
add
add
add
out
call
lahf
push
cmp
pushl
lea
insb
sbb
cmp
jnp
xor
idiv
jl
cld
push
in
maskmovq
notl
cmp
in
ljmp
pop
sub
push
ret
push
in
jecxz
dec
mov
dec
push
or
or
leave
jb
push
imul
incl
orb
add
mul
inc
push
clc
inc
adc
mov
xor
insl
flds
rcrb
pop
js
ret
data16
mov
mov
cmc
push
jo
cmpsb
add
cmc
sub
icebp
xchg
mov
push
out
jno
bound
inc
jns
dec
inc
inc
pop
sbb
ret
push
sti
fstpt
mov
xor
add
add
test
test
pop
js
test
movsb
repnz
or
add
hlt
nop
and
pop
loopne
xchg
adc
xchg
mov
movsb
add
out
sub
push
push
ret
adc
pop
jae
fmuls
fxch
cmp
mov
pop
add
xchg
mov
clc
add
popa
mov
inc
dec
add
add
add
add
loop
pop
adc
or
in
xchg
xchg
and
jecxz
fsubrp
mov
jns
lds
mov
test
repnz
mov
mov
dec
jb
or
in
pop
int
cmpsb
adc
sub
xchg
mov
gs
cmp
or
or
mov
gs
add
push
xchg
jnp
pop
adc
mov
xchg
ljmp
add
in
out
jae
inc
add
ss
out
fsubp
or
fs
or
ficomps
bound
xchg
dec
push
xchg
or
mov
orl
enter
add
js
test
call
outsb
clc
push
cmp
add
add
add
push
clc
inc
fmuls
mov
dec
mov
call
je
cld
test
add
dec
xchg
testl
fdivp
incl
test
fcomip
cmp
filds
test
xchg
idiv
sub
aam
sub
or
push
adc
cltd
dec
jl
pop
in
inc
or
or
xor
add
add
repz
test
jle
ret
pop
in
inc
or
jae
clc
push
in
sti
pop
outsl
xchg
inc
call
test
cltd
int
xchg
cmpsb
fs
push
xchg
or
push
add
shl
imul
aaa
jns
and
mov
cmpl
lds
pusha
outsl
xchg
and
pop
add
add
add
adc
inc
xchg
dec
cmp
and
insl
clc
push
insl
inc
ficompl
scas
sahf
add
mov
testb
sub
jecxz
fldcw
push
into
outsl
stc
push
mov
or
mov
test
popf
loope
pop
push
ds
mov
mov
mov
pop
shll
push
ret
inc
add
add
add
or
insl
pop
xchg
push
ds
jo
add
mov
loop
mov
lret
mov
dec
lret
lods
push
dec
lret
cmp
imul
insl
sub
dec
inc
xor
jno
mov
aam
pop
inc
xlat
jb
stos
xlat
iret
push
ljmp
dec
xor
sub
xchg
ds
loopne
jae
add
add
add
push
clc
inc
dec
mov
sub
out
test
push
adc
xor
or
pusha
dec
mov
push
test
add
addl
inc
mov
mov
call
xor
cld
test
fs
cmpb
nop
gs
call
add
cld
test
fs
subb
inc
add
add
add
mov
call
mov
cld
test
arpl
cmp
addl
inc
cwtl
out
call
test
cld
test
sti
orb
pop
mov
aad
call
je
cld
test
fs
sbbb
test
out
rorl
jl
out
pop
je
in
sub
and
int
cwtl
inc
nop
mull
in
inc
jae
add
add
pop
out
clc
aad
xor
sub
clc
divl
add
in
inc
jae
out
clc
in
js
mov
loopne
das
scas
filds
mov
in
je
and
mov
sbb
into
sti
jecxz
test
aad
sub
adc
into
stos
out
lods
out
and
clc
fstl
sub
fstl
push
pop
inc
adc
add
add
add
shrl
push
icebp
jp
mov
add
push
jb
sub
mov
and
mov
sarl
mov
pop
sti
inc
mov
sbb
push
pop
and
jns
xchg
jp
mov
pop
lret
inc
orl
cmp
jno
mov
fcoml
push
fwait
inc
push
mov
mov
add
add
dec
xor
ljmp
mov
es
into
sti
mov
daa
jb
push
inc
pop
jl
rorl
mul
sti
pusha
cmpsb
jno
fs
xchg
dec
vmovq
insb
xor
orl
subl
and
cmp
sbb
aam
sti
xchg
arpl
jae
enter
rol
sti
jb
add
add
and
dec
bound
dec
mov
jb
inc
push
push
push
jge
xchg
jne
xorb
add
xchg
mov
aad
jge
or
hlt
mov
and
dec
push
shr
ds
mov
jnp
xchg
xlat
mov
cld
pushf
or
jne
xchg
addl
add
add
stc
pushl
xchg
in
push
sub
mov
fcmove
xor
sub
sbb
insl
push
hlt
shll
enter
lret
mov
int3
and
pop
imul
push
push
jp
popa
in
jmp
out
fldcw
inc
shl
shl
push
dec
mov
lock
jp
out
add
add
xchg
cmpsl
cld
frstor
jle
or
inc
mov
test
xchg
jl
mov
add
aad
xor
stos
js
test
xchg
add
dec
mov
in
jae
jecxz
test
sti
test
adc
push
push
gs
pop
mov
lock
lock
mov
stc
mov
add
add
aad
push
aam
iret
mov
push
gs
pop
mov
lock
lods
jnp
sub
ds
insl
mov
and
leave
jbe
dec
ljmp
sbb
in
repz
jns
sbb
jecxz
mov
push
outsb
inc
push
gs
pop
mov
xchg
push
mov
push
add
add
add
inc
out
mov
push
adc
fsub
lret
and
callw
dec
fwait
adc
in
adc
popa
xchg
mov
bound
mov
mov
inc
std
shlb
cli
clc
out
xchg
aam
adc
call
pop
jno
test
sbb
cmp
push
or
adc
jmp
add
add
add
inc
popf
sti
jmp
mov
xchg
push
inc
dec
mov
push
push
xor
adc
int
add
test
cmc
pushl
mov
jl
sbb
arpl
mov
push
dec
push
jo
jnp
sbb
lret
mov
add
mov
pop
je
shll
xchg
jne
xchg
add
add
add
add
add
in
xchg
add
mov
add
out
xchg
mov
out
aas
push
aad
sarl
cmpsb
inc
lret
sbb
xchg
aad
and
jb
xchg
cltd
xchg
cwtl
xchg
jp
inc
bound
gs
jp
inc
push
rcrb
cmc
fldcw
add
xchg
ds
pop
xchg
xchg
add
add
add
out
jmp
pop
jecxz
xchg
pop
or
stc
call
stos
hlt
test
out
fcos
pop
push
push
imul
gs
fstl
dec
fninit
cmp
imul
ret
and
dec
push
out
pop
int3
xor
adc
pop
and
jae
dec
mov
mov
add
call
mov
stos
inc
add
add
add
xor
inc
sub
inc
fwait
jle
mov
sbb
pop
test
or
mov
clc
pop
cltd
pop
jae
push
nop
shl
or
cmp
adc
out
or
icebp
insl
leave
and
jmp
fadds
icebp
mov
filds
cli
jne
xchg
int3
mov
test
add
add
in
push
clc
jmp
pop
adc
jmp
fmulp
push
pop
pop
iret
push
ret
pop
jmp
imul
ret
pop
jmp
imul
ret
fstl
jmp
dec
pop
clc
sub
sub
dec
pop
fs
or
orb
sub
push
add
stos
rol
int3
add
add
add
aam
mov
xchg
in
nop
push
testl
inc
int3
xor
iret
adc
inc
adc
int
xor
fs
push
mov
outsb
cmp
adc
mov
call
into
xor
push
loopne
push
ret
sbbl
shlb
jnp
add
add
add
rorb
sbb
fwait
idiv
pop
addr16
jp
jnp
cs
ds
mov
fnstsw
sbbl
add
ja
inc
mov
ds
stos
outsl
clc
fnstsw
sbbl
add
jnp
dec
in
sar
lods
ret
ds
in
outsl
clc
add
and
pop
sbb
aad
js
add
add
add
cmp
sbbb
lock
pop
xlat
test
test
test
ds
adc
outsl
xchg
pop
add
pop
leave
jnp
add
jecxz
jnp
cmp
jb
dec
pop
rorl
stos
or
push
adc
ret
pop
xchg
pop
push
xchg
mov
dec
lcall
pop
adc
stc
rcpps
clc
add
add
add
outsl
push
dec
imul
loop
dec
lcall
push
loop
mov
dec
cmp
adc
xchg
and
dec
fwait
jnp
adc
add
adc
jmp
sbb
jae
mov
xchg
inc
sbb
cmp
push
out
out
dec
clc
push
adc
sahf
shlb
add
push
dec
jl
mov
pop
insb
enter
popf
add
add
and
adc
cmc
pop
inc
mov
xorb
bound
decb
aaa
test
out
jo,pt
pop
xor
push
add
add
dec
in
dec
jb
test
je
mov
mov
sbb
cmp
add
add
mov
add
or
mov
adc
add
and
addl
roll
adc
inc
or
stc
add
pop
mov
int3
mov
sub
mov
mov
test
lret
jne
add
test
add
add
add
pop
cmp
xor
movsl
clc
mov
adc
add
cld
ss
xor
and
cld
dec
in
adc
sub
and
rorl
sti
adc
loop
cld
ljmp
jl
and
repnz
push
in
xor
adc
icebp
push
aad
jl
add
jne
push
mov
add
add
add
inc
test
aaa
mov
xor
xchg
jno
aas
inc
jno
adc
xchg
cltd
adc
add
sbb
sub
xor
and
ljmp
lret
fiadds
push
xchg
jge
pop
adc
cmc
xchg
and
fcoml
cld
fcompl
jg
adc
add
adc
add
xchg
cmpsb
repz
mov
in
jle
leave
imul
pusha
add
add
outsb
and
out
sbb
es
push
out
pop
push
mov
fisubl
mov
js
cltd
out
pop
loope
fistl
dec
adc
add
adc
jb
xchg
xchg
pop
pop
adc
fsubrl
call
adc
call
xor
ret
stc
xor
fs
dec
clc
jmp
aas
jo
add
add
push
xchg
pop
sbb
jae
ja
pop
movb
mov
insl
mov
clc
jmp
pop
adc
hlt
add
mul
adc
fsubrp
pop
adc
stc
sbb
icebp
fildl
add
out
ficompl
nop
mov
sbb
cmp
movb
cmc
decl
sbbl
rorb
add
add
or
adc
xchg
pusha
mov
cmp
ds
in
mov
push
aaa
pop
loopne
pop
adc
clc
incl
dec
lock
xchg
clc
pushl
es
hlt
lods
mov
add
jnp
cmp
idivl
jb
insb
or
mov
leave
xor
cmp
pop
loop
std
aam
xor
fcmovne
out
adc
cmp
add
add
add
int
aam
or
adc
adc
sub
sub
jnp
dec
mov
outsl
or
int3
dec
outsl
mov
cld
pushl
jo
jns
jne
out
inc
xchg
loopne
adc
maxps
add
lret
std
jp
mov
jg
xor
push
add
pop
sbb
cld
pop
mov
cmp
add
add
add
mov
mov
xchg
xchg
cs
stos
adc
aaa
adc
push
sub
movsl
push
fwait
jl
jecxz
jl
sbb
dec
faddl
cli
push
xchg
movsl
lea
out
jmp
adc
add
jnp,pt
aam
dec
leave
es
inc
inc
pop
adc
icebp
adc
add
bound
adc
xchg
cmpsl
scas
add
adc
loop
sub
add
add
xchg
mov
jno
dec
jecxz
add
sbb
inc
popa
xchg
clc
mov
pop
adc
jmp
stc
out
xchg
dec
clc
mov
movsl
inc
clc
jmp
cltd
sar
imul
data16
call
pop
call
mov
xor
push
pop
lret
pushf
add
jle
mov
jmp
add
add
pop
adc
int3
jae
sub
lods
add
mov
dec
fisubl
clc
adcl
addl
mov
enter
scas
notl
sti
call
mov
sti
addl
adc
mov
es
add
add
add
dec
push
in
jge
push
scas
notl
push
aam
xchg
add
inc
add
add
add
sti
subb
incl
jle
push
sarb
jge
scas
testl
ror
jge
pop
fwait
clc
sar
push
dec
jmp
outsl
stc
adc
pop
jmp
sbb
jns
jb
jg
icebp
mov
out
add
add
add
shll
jmp
clc
shl
inc
jmp
sti
jle
pop
lods
inc
jae
mov
clc
in
pop
stc
test
mov
xchg
or
clc
xchg
push
clc
mov
out
cld
fdivrl
test
push
arpl
imul
arpl
pop
push
arpl
fnsave
sbbb
jl
adc
jns
in
xchg
add
add
add
xchg
pop
outsl
pop
inc
sbbl
dec
ljmp
inc
insl
jle
inc
pop
fs
add
inc
mov
in
inc
fs
cmp
aas
pop
mov
out
mov
ret
inc
arpl
test
inc
add
or
xchg
jb
sti
push
loope
sbb
sbb
arpl
sbb
add
add
je
push
inc
mov
xor
mov
jae
rcrb
or
dec
clc
pop
xchg
scas
clc
xchg
mov
clc
jbe
sub
outsb
jge
ret
in
out
jae
loopne
clc
xlat
mov
dec
cmp
dec
clc
ds
xchg
repz
cmp
dec
clc
push
push
subl
inc
jge
cmp
dec
clc
adc
add
add
or
jmp
cld
dec
dec
pop
idivl
out
out
dec
clc
bound
push
or
in
or
or
notl
jge
ret
dec
jge
jge
mov
xor
push
jnp
xor
ret
jl
sbb
js
test
jge
lea
xlat
jecxz
sbb
add
add
insb
add
testl
in
test
dec
scas
imul
mov
lret
aaa
pop
sti
cmpb
inc
jae
addl
xchg
in
pop
pop
pop
out
push
pop
clc
sbbl
add
mov
clc
jecxz
pusha
dec
fldt
imul
das
cmpl
add
mov
sti
jmp
pop
dec
in
daa
stc
jmp
call
das
stc
rcl
test
mov
push
mov
ljmp
sbb
adc
push
mov
stc
xchg
pop
rorl
addl
jb
adc
fistpll
jecxz
enter
loop
add
inc
jae
inc
loop
mov
mov
add
add
add
mov
pop
fstl
add
lods
cmp
insl
xchg
lea
idivb
pop
jbe
inc
popa
pusha
loopne
into
pusha
out
ds
ret
aas
dec
test
adc
dec
mov
popa
mov
jae
insl
inc
sbb
lea
mov
inc
add
mov
roll
push
out
add
add
add
mov
jae
fcoml
xlat
stos
clc
into
mov
mov
jb
scas
clc
mov
xchg
or
clc
loop
lods
or
xor
je
insl
out
insb
push
xor
es
test
clc
outsb
in
pcmpgtd
mov
jl
fcomps
sbb
jge
adc
mov
add
add
cmp
movsl
mov
sbb
add
in
adc
idiv
jo
lea
fcomip
mov
jge
incl
fcomip
mov
orl
dec
clc
mov
xchg
mov
adc
aaa
mov
testl
cmpb
les
in
rol
int3
xor
int3
add
add
add
into
int3
sbb
dec
mov
push
sub
pop
in
sub
adc
mov
flds
inc
data16
decb
and
jns
inc
pop
jl
xor
mov
data16
fwait
push
sub
sub
arpl
hlt
inc
jl
ret
bound
loop
push
dec
lret
adc
lret
add
add
add
incb
pop
jecxz
rolb
shl
jne
fwait
push
arpl
jmp
test
jecxz
test
sbb
adc
cltd
pop
int
push
cld
clc
dec
repnz
dec
push
add
mov
mov
dec
xor
dec
sub
dec
fwait
mov
add
sbb
sbb
in
insb
mov
add
xor
sbb
lods
or
xchg
or
call
lret
cmp
mov
les
out
pop
add
insl
pop
testb
push
xchg
mov
push
cmp
push
xchg
xlat
push
fstpt
mov
pushl
pop
and
mov
pop
mov
mov
add
add
add
dec
or
cmp
cmp
pop
sar
call
outsl
dec
pop
and
loope
mull
lret
test
xchg
dec
adc
sahf
push
xchg
fcmovbe
push
jo
fildl
mov
pushf
mov
adc
sahf
adc
lret
test
test
adc
loopne
or
shlb
add
add
add
add
lea
mov
ds
ret
or
add
mov
loopne
xchg
loopne
repz
test
sbbl
push
mov
stc
incl
jecxz
add
jecxz
lock
add
addl
pop
push
jnp
mov
je
mov
lahf
push
add
add
add
add
mov
mov
inc
pushf
add
pop
sub
in
add
cmp
mov
aaa
push
xchg
repz
lcall
fsts
in
cmp
daa
xor
test
cld
lcall
cld
lcall
test
movsl
mov
repnz
call
sti
xlat
test
mov
add
mov
add
add
pop
sub
test
mov
add
sar
mov
adc
pop
mov
incl
sub
sbb
cld
or
mov
pop
xlat
adc
mov
xor
add
pop
pushf
mov
add
mov
dec
adc
pop
mov
jno
insb
dec
mov
mov
inc
dec
push
int
jmp
xchg
add
loope
mov
push
test
clc
pop
fsubl
scas
dec
inc
cmp
jb
xor
fcmovne
fiadds
leave
fiadds
pop
adc
mov
cmp
dec
cmpsb
int
test
xlat
sbb
stc
aaa
les
and
sbb
fisubrl
test
lods
call
pop
scas
call
add
add
add
fstpt
sub
fisubrl
dec
mov
mov
add
pop
mov
cs
adc
jmp
adc
jmp
movsl
aaa
shr
adc
jmp
pop
adc
jmp
pop
adc
scas
sbb
clc
jmp
pushf
adc
aaa
clc
add
adc
movl
jns
divb
add
add
mov
add
sarb
add
rol
int3
jae
int3
or
int3
movsb
sarb
jmp
jnp
inc
popa
and
sub
xor
push
push
inc
mov
lock
add
imul
adc
jp
mov
jp
int3
repz
int3
add
int3
dec
mov
mov
jnp
pop
fs
lea
add
add
cmp
dec
lea
push
mov
jp
out
mov
clc
aad
pop
jge
sub
push
jne
jae
mov
imull
jp
push
mov
test
sahf
scas
dec
ud0
pop
dec
push
into
clc
xchg
push
mov
aad
mov
lret
stos
sti
inc
lret
mov
xchg
test
setle
xchg
add
add
rcrb
xchg
and
adc
push
dec
aad
repz
mov
push
adc
test
mov
xchg
push
shl
xor
sti
add
outsl
mov
xchg
xor
inc
sub
inc
mov
mov
cmp
mov
pop
rolb
mov
push
sbb
add
add
loope
push
dec
add
es
pop
xor
xchg
push
shl
adcb
add
mov
pop
cmpsl
mov
mov
inc
mov
and
inc
lcall
xlat
daa
jl
filds
fimuls
push
cmp
sub
test
push
dec
jae
divl
mov
les
in
divl
aaa
clc
hlt
aad
inc
jmp
add
add
add
idivb
push
and
xor
scas
xchg
fdivrs
mov
push
lret
mov
lods
push
lea
out
sti
sahf
mov
loop
push
dec
lret
sbb
sahf
inc
lret
lods
sahf
inc
lret
cmp
es
bound
pop
sub
inc
xlat
insb
add
loope
jae
inc
je
jbe
xor
aam
mov
add
sldt
int3
or
leave
jb
insb
es
inc
adc
or
push
jge
adc
inc
test
or
mov
or
dec
jg
ret
mov
push
pop
xor
int3
ret
push
mov
jne
add
testl
jle,pt
adc
xlat
dec
push
sub
es
fsubl
pop
add
add
add
imul
jge
imul
pop
std
inc
lret
sub
lret
sbb
adc
sti
rcrb
cmp
jmp
add
sar
addr16
pop
xchg
data16
rcrb
mov
sbb
or
jecxz
adc
pop
ret
addr16
jle
cld
rcrb
cld
lcall
scas
mov
add
cmp
sub
cmp
and
mov
adc
pop
arpl
jmp
imul
adc
pop
jg
testb
fs
adc
mov
out
inc
daa
or
xchg
cmpsb
or
lods
faddl
pop
push
add
insb
call
aas
lcall
lods
imul
jp
add
add
sbb
es
jge
add
fs
dec
adc
jp
pusha
fadds
pop
lcall
lret
sbb
mov
sbbl
lods
loopne
jmp
or
test
lret
add
pop
pushf
or
test
sti
loop
sbb
or
xchg
mov
std
adc
jmp
fldt
clc
fiadds
add
add
testb
mul
or
lock
pop
xchg
leave
adc
pop
xchg
mov
icebp
adc
jmp
mov
clc
sahf
pop
lock
int3
add
pop
xchg
push
or
or
scas
sbb
cmp
rcl
push
insl
adc
pop
adc
adc
pushf
dec
jnp
add
mov
xorl
adc
mov
add
add
out
rorl
xchg
orl
test
inc
jp
in
rolb
or
sub
in
stos
fstpl
lods
xchg
mov
sub
inc
jnp
in
rol
int3
jae
int3
push
rol
int3
xor
int3
pop
insl
jne
test
cmp
test
mov
test
mov
aad
pop
push
add
add
add
in
test
sub
or
mov
pop
pop
in
add
mov
cmp
cld
xchg
div
stc
mov
inc
gs
xchg
fcomip
jmp
mov
cld
xchg
pop
cmc
dec
mov
cld
xchg
pop
cmc
pushl
cmp
test
lahf
test
pop
cmp
mov
jnp
add
add
add
cmpsl
jl
dec
pop
shlb
jnp
loopne
mov
subb
outsb
mov
adc
jp
and
out
sbb
lods
jnp
cmp
pop
mov
into
fnsave
push
sub
ror
cmp
adc
jns
fwait
sti
dec
jg
sub
out
pop
push
aam
iret
mov
in
in
add
pop
or
add
add
lods
fdivrl
clc
cmp
xor
iret
sbb
jle
sahf
cld
push
mov
call
pop
xchg
dec
xor
push
push
pop
pop
cs
cli
inc
pop
incb
add
cmpsl
sti
jb
and
and
adc
and
lahf
mov
test
jmp
adc
push
sarl
repnz
adc
fs
add
add
jae
pusha
jo
jmp
aaa
cs
pop
fsubrl
mov
gs
jmp
mov
sbb
add
sub
cld
jmp
out
repnz
in
hlt
test
lret
pop
mov
cmpsb
jne
ret
push
mov
cmpsb
push
or
jne
add
jnp
add
add
add
scas
insl
loopne
push
scas
jl
adc
cli
push
cmp
ficompl
cmp
js
mov
orl
fdivr
mov
pop
clc
jmp
push
decl
fildl
loopne
mov
jmp
ret
add
insl
push
jb
andl
xchg
in
lret
stos
cld
aaa
lret
mov
sub
dec
or
add
add
out
hlt
mov
ss
and
clc
inc
xor
mov
mov
add
ja
pop
out
cld
lcall
int3
cld
leave
bound
or
jp
loope
jg
imul
jp
loop
movl
xor
dec
or
adc
lds
push
jb
lret
std
aas
adc
adc
add
add
jnp
imul
out
rorb
popa
pop
adc
loope
xchg
dec
std
popa
sub
lret
icebp
orl
adc
fimuls
add
mov
pushf
sub
lods
sbb
jbe
adc
repnz
push
xor
enter
pop
xchg
pop
inc
cli
sbb
pop
adc
jbe
es
int
ljmp
add
add
test
mov
sub
sub
cmp
xor
mov
pop
test
or
shlb
pop
adc
test
adc
jae
adc
or
cld
call
ss
xor
pop
adc
pop
rolb
shr
es
jmp
and
or
add
add
push
mov
bound
adc
jp
fs
sti
shrb
pop
add
clc
decl
mov
clc
inc
sahf
pushf
and
adc
add
xorb
lods
mov
xchg
mov
ja
add
push
sub
add
adc
mov
sub
mov
push
add
sub
incl
add
add
lods
pop
or
xor
testl
aaa
clc
decl
sbbb
mov
fwait
stc
incl
adc
push
pop
and
js
push
mov
push
dec
popa
out
mov
pop
cmp
mov
movsb
xchg
jnp
cmp
popa
fcmovu
push
into
sub
cltd
cmp
es
jp
lret
call
fdivr
jns
pop
push
add
add
add
cld
xorb
les
cld
xor
cld
lock
lcall
ja
shlb
stc
daa
cld
lcall
dec
xchg
sbb
ret
lahf
push
call
cld
push
popa
or
sbb
std
scas
fbstp
out
jecxz
fidivrl
imul
hlt
fcmove
addb
insl
lret
dec
lcall
add
orb
lcallw
out
add
out
insl
pusha
sbb
rcrl
js
sbb
jl
lock
fwait
inc
mov
adc
pop
pusha
stos
pop
xchg
cmpsb
in
add
mov
loop
xchg
out
and
fadds
pop
adc
loopne
pushl
clc
add
mov
jmp
xchg
and
push
add
add
add
and
jmp
and
clc
mov
stos
pusha
fsubrp
xchg
mov
mov
mov
dec
daa
int3
pop
pusha
fnstenv
popa
lock
mov
pop
movsb
mov
pop
adc
add
xchg
add
inc
inc
and
jno
sbb
jmp
add
dec
popa
mov
add
add
add
cmpsb
mov
fstps
outsl
cwtl
push
add
leave
adc
cwtl
mov
testl
add
mov
lock
mov
add
test
mov
jne
jnp
mov
mov
inc
or
arpl
data16
mov
xchg
adcl
js
jno
add
arpl
pop
adc
add
add
int3
push
or
cmpsl
xchg
push
add
stos
inc
or
xchg
push
add
xchg
jne
pop
cmp
adc
sub
lds
sub
sbb
mov
xorb
out
ss
js
and
test
adc
cmpl
pop
cmp
jl
push
or
call
mov
xchg
mov
add
add
mov
stc
enter
mov
clc
or
pop
mov
and
xchg
or
aad
adc
pop
adc
pop
xchg
and
and
pop
lret
pop
xchg
push
jl
adc
mov
pop
xchg
mov
out
push
adc
push
or
xchg
sbb
mov
cmp
add
add
add
pop
fdivs
cli
out
ret
lock
stos
xor
sbb
rorl
fadds
pop
push
pushf
cmp
cwtl
bound
pop
adc
movsl
cli
out
fistl
xchg
sbb
adc
popa
and
mov
jns
add
jmp
loop
adc
pop
mov
fcomp
shl
call
add
add
add
jo
adc
jb
sbb
push
je
add
sub
psrlq
mov
xchg
pop
in
pusha
lret
jmp
and
add
inc
idiv
call
mov
nop
andl
fcomps
mul
xchg
shl
adc
pop
adc
aaa
adc
iret
shrl
xchg
leave
add
add
add
add
dec
in
cltd
fimull
sub
nop
out
stc
decl
push
add
mov
adc
add
mov
cmp
adc
mov
mov
stc
push
mov
lret
out
sub
lock
fisttpl
push
add
dec
cld
cltd
mov
jmp
imul
add
push
add
fld
fisttps
pop
sub
add
leave
mul
mov
adc
mov
jl
xor
popa
sub
mov
mov
mov
jg
es
jmp
sub
test
xchg
add
mov
jp
pop
sub
or
cwtl
jg
add
add
add
test
sub
adc
sbb
lds
sti
sub
mov
clc
mov
mov
adc
add
adcl
pop
out
lret
push
jmp
add
mov
mov
push
pop
insb
add
stos
enter
add
loopne
lock
out
pop
aam
add
out
push
pop
loope
add
add
add
stos
enter
add
sub
xchg
xchg
cmp
mov
loop
sub
dec
mov
enter
jg
adc
rcrb
xor
push
jb
adc
jmp
xor
frstor
add
push
mov
add
in
pop
arpl
fs
pop
mov
clc
pop
mov
arpl
add
add
call
xchg
jns
lret
and
xchg
bound
add
add
scas
stc
push
popa
mov
aad
mov
jo
fs
pop
ss
popa
lock
pop
sahf
mov
negl
test
mov
orl
xchg
icebp
or
jae
loop
dec
or
add
pop
or
add
add
rcrl
dec
or
adc
adc
xchg
jle
mov
jl
hlt
mov
or
add
push
ds
pop
sub
data16
out
ret
mov
xchg
mov
mov
jecxz
popa
ret
mov
shll
add
fmuls
add
add
cmp
fst
or
dec
xchg
add
push
test
push
test
xchg
add
call
bound
fcom
adc
pop
mov
adc
pop
lahf
mov
in
or
pop
scas
lea
fwait
inc
jae
inc
outsb
popf
int3
mulb
ja
pop
sub
add
adc
mov
add
loopne
or
add
mov
out
xchg
fcomp
adc
jo
pop
adc
lds
out
sti
pop
jmp
decl
jns
sbb
bound
xlat
pop
out
mov
das
pop
lret
out
xchg
icebp
add
add
push
jl
adc
mov
sbb
adc
jo
outsl
adc
mov
mov
adc
add
add
fildl
js
cmp
push
rcll
pop
adc
fldcw
movsb
ss
mov
dec
adc
mov
pop
ficomps
in
push
pop
subb
jge
xlat
pop
adc
sub
lock
popa
adc
pop
pushf
mov
xlat
pop
adc
and
pmaxsw
mov
push
test
xchg
pop
pop
adc
jb
xor
add
add
add
test
verw
loop
out
dec
sbb
and
lret
lods
cmpsb
dec
lret
sbb
sub
mov
push
aaa
scas
filds
fiadds
inc
adc
pop
inc
jno
add
in
mov
mov
add
test
psubsw
sub
dec
in
mov
cwtl
push
add
dec
cld
add
add
add
mov
add
inc
mov
or
aaa
adc
xlat
sbb
jbe
inc
mov
into
inc
out
orl
add
add
add
push
fnstcw
adc
mov
add
iret
mov
pop
mov
mov
push
mov
xchg
pop
push
jmp
add
add
add
mov
cld
in
dec
mov
int
push
fldl
and
cwtl
mov
mov
stos
hlt
sti
xchg
push
cld
lcall
lret
clc
inc
or
mov
sub
pushl
movsb
test
dec
sub
incl
hlt
lds
cmp
or
add
stc
movb
xor
add
repnz
add
add
add
pop
lock
ss
cmc
divl
jns
icebp
insl
leave
pop
rolb
pop
mov
adc
rcr
jne
outsb
xchg
aad
out
xchg
cli
je
jmp
sahf
stos
daa
jae
sub
cltd
mov
push
fadds
pop
scas
pop
je
jmp
add
loope
pop
stc
mov
nop
ljmp
add
mov
mov
add
add
pop
loop
stc
adc
xchg
and
enter
push
nop
jno
adc
testb
negl
test
outsb
mov
clc
jo
adc
inc
jle
xlat
pop
adc
loope
stc
push
jb
pop
adc
pop
mov
dec
adc
or
test
insl
imul
loop
mov
pop
adc
repnz
add
add
lea
jmp
pop
xorl
movsl
pusha
adc
jb
pop
iret
or
adc
pop
add
sub
cmp
mov
adc
sub
sbb
jle
jae
popa
ret
outsl
add
push
add
add
add
testl
jae
scas
cwtl
fiadds
add
in
inc
add
cmp
add
testl
pop
sarl
mov
stos
dec
add
loope
test
add
add
cmp
out
or
add
test
movsb
mov
cld
loope
scas
push
imul
mov
out
and
aas
add
add
add
rorl
mov
outsb
sub
pushl
incb
scas
leave
or
lock
add
xchg
dec
add
lcall
xchg
mov
sub
test
or
or
shlb
sub
adc
jbe
outsl
adc
xor
std
xchg
adc
inc
dec
push
add
add
add
xchg
xor
mov
push
pop
adc
lds
out
ret
clc
pop
shll
insl
adc
stos
xchg
daa
aas
or
outsl
adc
push
cmpsl
mov
outsl
adc
jle
pop
scas
out
adc
pop
mov
loop
cmp
data16
js
in
add
mov
pop
adc
pop
adc
fisubrs
sbb
in
add
es
insl
add
add
add
lret
adc
lcall
or
pop
mov
jne
cs
sbb
pop
adc
pop
mov
push
lret
pop
pop
test
insb
rclb
pop
dec
jmp
movups
jo
pop
adc
pop
xchg
dec
lea
or
out
cs
lock
in
pop
adc
cmp
add
add
and
jmp
lret
negl
pop
bound
fadd
add
lret
int3
jae
lret
int3
dec
ret
mov
adc
mov
push
add
pop
divb
mov
inc
inc
je
add
popf
xchg
out
pop
subl
idiv
mov
jae
imul
popa
andl
incl
add
add
dec
cmc
idiv
ja
mov
adc
nop
test
adc
sbb
add
add
mov
add
push
lret
int3
jae
lret
int3
pop
jmp
push
in
jge
pop
add
mov
mov
das
adc
mov
adc
jnp
dec
cli
add
rclb
jae
jns
push
lock
in
sbb
add
add
scas
ret
adc
mov
push
out
je
push
addb
cltd
cmp
sub
add
andl
frstor
jnp
adc
aad
jbe
pop
jo
push
pop
adc
or
jmp
test
or
add
sub
and
fisubrs
add
adc
fisubs
mov
jmp
cld
addr16
jne
leave
xlat
add
sbb
jecxz
icebp
jnp
and
sbb
popa
loope
out
test
xchg
adc
fsubr
adc
pop
loope
sbb
jmp
xor
jno
dec
adc
jl
int3
add
pop
adc
sahf
fcmovb
xor
add
add
add
cli
push
mov
out
sti
inc
pushf
idiv
dec
lea
pop
test
lret
cmp
xchg
adc
dec
dec
or
or
and
jno
and
sub
js
inc
pop
or
add
jno
and
sub
js
and
or
add
test
push
mov
push
xchg
fcmovnu
jge
fwait
jmp
add
add
add
push
mov
mov
sbb
mov
or
inc
xor
sbb
ss
pop
cli
dec
lret
int3
repnz
mov
or
add
adc
das
or
decl
adc
or
adc
adcb
inc
loopne
add
nop
sub
mov
or
jae
jg
xchg
or
incl
nop
das
or
add
add
mov
sub
adc
adc
xchg
add
push
ljmp
int
jmp
dec
fcoml
int
sub
xchg
add
pop
cli
fcom
fildl
out
ffreep
divl
popa
pop
sub
mov
xchg
jp
fwait
sbb
dec
or
aam
hlt
mov
stos
add
test
mov
popa
add
add
add
cmp
es
rcrl
add
xor
in
inc
lds
dec
jns
fisttpll
rcll
sarl
outsw
rorl
aad
add
adc
inc
loopne
popa
jp
or
jmp
add
xchg
lea
pop
adc
add
pop
push
movl
mov
or
dec
adc
js
popa
aad
add
add
add
pop
xchg
mov
jmp
inc
fldl
adc
jmp
negb
je
rcr
movaps
sbb
ss
lret
sbb
pop
adc
test
mov
jg
imul
imul
or
dec
adc
jle
popa
int
pop
cwtl
add
or
pop
ret
add
pop
adc
dec
nop
mov
jmp
mov
add
add
fsubp
insb
loop
sarl
xor
dec
adc
push
pop
or
pop
or
push
hlt
jb
adc
cltd
pop
adc
push
and
mov
xchg
add
adc
imul
clc
xor
int
imul
add
out
ss
sbb
pop
adc
fistps
jmp
or
cld
incl
add
add
jl
add
popl
xchg
jle
xchg
or
lcall
jg
jmp
adc
notb
lods
mov
inc
adc
cld
pushl
push
xchg
push
cmp
adc
testl
adc
jl
out
data16
mov
adc
mov
add
add
mov
ret
add
arpl
mov
mov
push
test
mov
cli
push
push
add
shrl
popa
out
mov
out
pushf
add
cli
ret
jae
xchg
inc
sub
jl
scas
fiadds
add
cmp
fadd
pop
add
adcb
add
or
pop
xlat
pop
sbbb
add
add
add
jmp
fs
cmp
add
pextrw
sub
sub
jne
and
lods
aaa
movsl
aam
aaa
xchg
aam
jge
fwait
pop
pop
arpl
jmp
add
sbbl
repnz
addr16
adc
sarl
aaa
sub
addr16
adc
roll
sub
inc
xchg
sbb
add
add
add
pop
cli
ljmp
dec
lret
insl
push
out
repz
je
push
mov
jmp
cmpsb
arpl
jmp
insl
loope
or
shrl
xlat
xchg
jecxz
adc
xor
sbb
jmp
clc
or
jmp
jb
addl
inc
adc
rep
push
jmp
add
add
add
pop
inc
clc
pop
fwait
test
pop
adc
fucomp
add
adc
lret
scas
push
jmp
push
add
add
and
jmp
push
fcmovb
sub
test
mov
adc
push
sbb
or
jae
add
mov
jmp
mov
or
mov
inc
adc
add
add
aas
push
pop
rdtsc
lcall
mov
aas
adc
loope
xchg
adc
add
rclb
mov
out
xchg
push
jl
aaa
nop
mov
into
mov
jge
sbb
add
jmp
mov
ljmp
ret
add
dec
popa
mov
adc
rcll
mov
jle
mov
dec
out
decb
add
add
add
or
dec
jl
idivb
lret
mov
mov
lret
xchg
inc
jns
in
hlt
pop
xchg
sub
mov
jns
in
hlt
test
scas
push
add
add
pop
cli
xchg
int3
cmp
lds
rolb
mov
cli
add
in
dec
popa
test
mov
jns
data16
sldt
add
add
pop
or
jno
adc
js
push
outsl
int3
pop
out
std
adc
mov
call
adc
jle
pop
adc
popf
xchg
repz
lret
addr16
adc
popf
loopne
popa
or
pusha
nop
test
fstps
jb
lds
jmp
push
xchg
push
xchg
mov
jmp
movsl
movsb
adc
add
add
add
jecxz
int
cltd
sbb
imul
subl
sbb
in
adc
js
pop
rolb
out
add
and
aad
push
add
jmp
aam
clc
daa
or
cmp
clc
push
adc
loop
push
jmp
popf
sti
notl
cs
les
add
add
add
les
notb
loope
adc
cld
lea
jmp
daa
push
add
pop
adc
rolb
mov
add
loope
mov
aas
int
sbb
pop
adc
xor
mov
add
repnz
incl
mov
or
and
das
clc
mov
adc
xchg
mov
adc
add
add
add
xor
sub
dec
push
fldl
add
add
pushf
dec
jo
or
or
cmp
push
cmpsl
fbstp
mov
dec
inc
adc
idiv
aaa
sbb
test
dec
or
mov
add
bound
or
xchg
filds
add
add
in
out
popa
push
jo
adc
adc
shll
pop
testb
sbb
adc
mov
lret
dec
add
inc
add
add
in
popa
lods
movsb
jge
insl
jno
mov
xlat
adcb
and
sarb
popa
mov
pop
ljmp
push
ljmp
add
add
add
repnz
outsl
add
jmp
lds
add
loope
jmp
js
jmp
nop
lret
test
jmp
add
sub
in
jmp
mov
pop
mov
mov
shrl
loopne
shll
jmp
pop
dec
adc
mov
or
pop
add
add
push
ja
outsl
adc
mov
mov
repnz
add
daa
and
cmp
ret
mov
pop
pusha
xlat
push
jmp
xor
pop
loopne
push
jmp
rorb
push
inc
ret
jmp
dec
stc
imull
push
mov
inc
xchg
notl
add
mov
mov
pop
pop
jb
pop
ret
lods
push
lret
in
mov
dec
mov
insl
popa
mov
jmp
imul
pop
jl
add
cltd
and
add
or
outsb
and
add
mov
clc
add
adc
sbbl
add
pop
mov
rcll
or
adc
add
add
add
and
inc
mov
pop
pop
pop
push
or
inc
sbb
jae
mov
je
mov
add
js
add
mov
cwtl
repnz
lahf
add
ja
data16
out
sub
or
sub
pop
pop
inc
cld
and
or
pop
imul
or
cmp
add
add
add
pop
bound
jo
push
fcompl
and
xchg
in
add
insl
test
pop
repz
adc
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
add
xor
push
adc
or
add
lock
adc
or
xor
and
adc
xor
adc
and
icebp
rdpmc
or
icebp
mov
lods
out
add
btr
leave
cmpsl
repz
xchg
sti
mov
subl
fwait
or
cld
sahf
add
xchg
xchg
and
out
stos
xchg
or
sbb
add
add
jbe
sbbl
add
loopne
imull
fcomi
loope
add
pop
jl
stc
pop
jnp
jmp
pushf
repnz
imul
add
xchg
and
and
dec
call
bound
add
push
mov
add
bound
add
push
mov
add
gs
add
push
mov
add
add
add
add
dec
loope
add
push
mov
add
gs
add
push
mov
out
add
adc
add
adc
add
adc
add
mov
xor
out
add
fcoml
xor
je
pop
or
jp
jae
add
add
iret
hlt
clc
lods
mov
add
add
xor
ljmp
clc
add
lock
sub
imul
adc
mov
mov
loopne
mov
rcrb
or
push
lret
int3
pop
cmp
icebp
repnz
mov
pop
jp
cld
in
loopne
mov
sbb
cmp
add
pop
sub
pop
out
jo
mov
sbb
pop
add
add
add
push
sbb
xchg
pop
or
test
fdivr
test
sub
in
imul
jg
out
add
lock
sbb
mov
cld
test
fisubrs
jnp
cld
and
adc
jle
cmp
add
in
ret
rolb
add
fnstsw
inc
sub
fldt
add
popa
xchg
dec
sbb
jmp
into
adcl
loope
pop
xchg
icebp
out
adc
es
add
je
dec
push
jmp
xor
ljmp
jno
testb
adc
out
jmp
or
xchg
loope
adcl
loope
dec
xchg
icebp
out
adc
or
clc
imul
mov
jge
add
add
add
mov
push
clc
imul
loop
jge
mov
add
mov
loope
aad
jmp
rorb
sub
sub
push
and
ss
adc
cli
sbb
test
mov
sub
push
mov
pushf
in
or
stc
add
pop
mov
push
es
jmp
pop
adc
cmc
add
add
add
sub
test
push
xor
xchg
jns
sub
or
add
mov
cmp
and
rcr
and
xchg
add
aaa
or
incl
inc
jecxz
popf
dec
loope
add
add
mov
clc
add
adc
inc
pop
xchg
mov
and
out
addl
add
add
jl
jl
mov
pop
dec
fmull
jbe
clc
add
adc
xor
aam
mov
add
pop
hlt
js
jae
cld
test
fdivrl
jae
cld
and
hlt
addb
sub
sub
pushf
mov
jno
add
aad
addb
sub
test
sub
filds
decl
rolb
jecxz
sarb
add
add
add
cmp
lret
add
aas
pop
imul
sub
sahf
ljmp
stc
addr16
rcrl
and
test
mov
jl
out
mov
lahf
adc
hlt
dec
in
add
adc
hlt
or
les
or
cmpsb
adc
add
inc
or
push
jmp
cld
xor
jmp
add
jbe
jmp
or
push
jmp
mov
jle
mov
mov
imul
adcl
jmp
or
or
jmp
or
adc
mov
cmp
xchg
inc
push
adc
bound
add
movsb
gs
push
stos
pop
adc
cmp
out
loopne
jge
add
add
add
add
in
lret
mov
in
add
mov
mov
cmp
out
sbb
nop
leave
std
pusha
mov
scas
pop
adc
loope
push
sub
mov
or
push
mov
add
mov
pop
adc
loop
lea
pop
je
pop
mov
jmp
mov
add
or
mov
add
add
add
jl
aaa
push
add
cmp
jae
lahf
mov
pop
and
jae
cmp
cltd
and
xchg
imul
jmp
iret
adc
jg
fwait
cli
jl
mov
push
sbb
in
in
lret
mov
sbb
xlat
je
and
cmpxchg
into
shll
inc
push
pop
cmp
jae
inc
lods
stc
and
add
add
add
xchg
add
mov
iret
sub
lock
add
add
call
jnp
pop
call
int3
clc
xchg
daa
cltd
fcmovbe
and
add
je
call
adc
jg
and
out
test
or
mov
test
lret
pop
pop
call
sti
imul
pushl
add
add
add
cwtl
add
cmp
jb
push
mov
push
clc
sub
add
jnp
std
push
push
repz
sub
int
insl
mov
add
xchg
pushf
xchg
out
pushf
xchg
out
sub
xchg
bound
fimull
jmp
add
adc
dec
add
out
loopne
cmp
shrb
jl
add
add
or
lcall
sub
bound
push
pushf
int
inc
xor
push
pushf
or
out
adc
add
mov
lret
loop
add
int3
xor
jmp
lods
andl
lods
ret
sub
jo
add
push
push
add
pop
push
add
pop
adc
call
add
add
add
add
pop
adc
out
adc
out
pop
adc
push
pop
adc
bound
add
pop
adc
cmpsb
pop
adc
sahf
adc
xchg
pop
adc
mov
testl
outsb
out
imull
out
mull
in
negl
adc
push
dec
sbb
dec
dec
or
add
add
dec
add
add
add
add
add
add
add
add
pop
add
pop
dec
add
addps
clc
pop
pop
add
aas
fcomps
clc
jg
push
clc
push
test
push
fistl
jae
outsl
push
sbb
cmpsl
add
lods
ljmp
arpl
jl
xchg
mov
pop
or
or
jbe
jbe
add
inc
sub
and
jle
and
jle
push
in
inc
or
push
add
add
add
enter
shlb
nop
std
lcall
jp
stos
or
xlat
repz
in
stos
int3
scas
je
inc
hlt
jp
arpl
xchg
fmul
xchg
aam
xchg
sbb
test
jnp
jb
and
mov
dec
adc
jo
jnp
add
mov
or
add
pop
mov
cmpsb
lret
add
add
add
and
jmp
sbb
add
pop
out
sub
adc
pushf
cwtl
xor
stc
inc
sbb
insl
add
mov
adc
fstpl
xchg
mov
inc
mov
test
adc
and
xchg
sbb
xchg
repnz
push
xchg
jno
loopne
sub
xchg
rcrl
add
jbe
xchg
inc
test
fisubs
stc
loope
mov
out
adc
adc
subl
sbb
in
test
adc
jmp
sbb
adc
jmp
inc
xchg
nop
imul
pop
mov
loopne
gs
or
jbe
sbb
mov
in
add
add
add
pop
sbb
jb
stos
mov
das
adc
fisttpl
call
mov
mov
jmp
lea
jl
pop
adc
imul
jae
div
xor
out
sub
rcl
cmpsb
sbb
in
inc
pop
jle
pop
std
ja
add
stos
mov
add
add
dec
mov
jl
and
stos
and
and
add
imul
int3
lods
cmp
in
dec
es
adc
xchg
movsl
add
lcall
sahf
ret
and
add
loopne
push
jge
unpcklps
add
xlat
dec
lea
hlt
iret
pop
cld
xchg
ror
test
mov
cmp
add
fmull
lcall
mov
and
ja
cld
xlat
stc
jnp
aam
cld
test
pusha
ret
loope
std
jl
testl
sub
call
push
push
lds
rolb
data16
add
idivb
pop
pusha
ret
xor
jl
sti
push
movsl
mov
or
cltd
jg
or
stc
lcall
cld
incl
add
add
pop
clc
fbld
adc
inc
jb
jb
cmp
notl
push
jmp
mov
pop
adc
sbb
inc
xor
jb
jge
jmp
jmp
std
iret
push
lret
bound
xchg
aas
add
push
pop
mov
jge
sub
mov
add
cmp
add
scas
cmp
sbb
sbb
adc
mov
xor
sub
add
sub
jle
cmp
jae
mov
xor
mov
in
or
test
mov
pop
adc
jmp
sub
push
sbb
sub
repz
shl
test
sbb
add
add
add
push
push
mul
into
sbb
pop
in
pop
xchg
mov
pop
jle
sbb
mov
sbb
mov
dec
sbb
dec
out
out
cmpsl
or
pusha
adc
mov
je
jae
in
add
pop
bswap
push
or
xlat
call
fisttpl
or
imul
inc
cld
mov
pop
inc
jl,pn
fisttpll
xchg
add
add
sub
and
push
ficoms
add
push
fstl
or
xor
je
jmp
mov
call
mov
testl
inc
movhps
fildll
mov
mov
or
fistps
rcl
loopne
push
adcl
iret
out
js
arpl
jge
cmp
xchg
out
imul
push
cld
lcall
sbb
mov
out
int3
pop
fisttps
and
sbb
sub
mov
pop
xor
inc
adc
shlb
out
jge
testl
lock
jb
xchg
mov
xlat
jge
jge
cli
jnp
pop
jo
std
fcoml
cmpsb
add
xor
add
add
in
js
adc
sbbb
sub
nop
ret
push
jb
jecxz
push
bound
jmp
sahf
adc
pop
loopne
jp
sub
pushw
xchg
ret
push
mov
add
push
data16
inc
data16
loop
mov
lcall
sbb
in
push
loop
push
ret
push
mov
add
push
add
add
add
sbb
sub
push
mov
pop
bound
xor
data16
cld
jo
sti
not
arpl
cmp
scas
loope
jb
xor
repnz
sbb
ljmp
insb
leave
mov
outsb
and
shl
inc
loope
jp
pop
cmp
dec
mov
push
pop
cmc
jmp
xchg
push
sbb
daa
int3
outsb
adc
add
add
pop
pop
sbb
pop
loope
cmp
int3
cmp
loopne
sub
dec
mov
xchg
add
movsl
mov
std
sub
data16
jmp
adc
sub
enter
push
mov
and
push
and
push
and
mov
scas
mov
or
lahf
and
scas
add
add
add
add
add
ljmp
or
fidivrs
leave
scas
mov
mov
add
lods
push
jge
pop
mov
leave
mov
push
sbb
add
push
pop
mov
decb
js
aad
xlat
push
aad
js
pop
cmp
cld
test
inc
ficomps
aam
es
test
outsl
movl
push
out
mov
add
add
push
jno
sbb
imul
mov
hlt
jle
push
stc
push
sbb
jno
mov
sub
cmp
idivb
popa
xchg
outsl
jge
test
outsl
pusha
sbb
jmp
outsb
push
jmp
sbbl
push
sub
sbb
andl
repnz
jb
jp
shl
inc
adc
loop
int
add
adc
dec
neg
add
add
add
psubsb
pop
cwtl
popa
adc
int3
sub
popf
aam
iret
lcall
jp
mov
aad
stc
ss
adc
in
test
outsb
or
pop
xlat
push
inc
mov
mov
out
sub
dec
ljmp
mov
sti
push
or
jl
add
add
mov
aas
movl
pop
push
inc
dec
into
push
inc
inc
sbb
mov
fcoms
mov
adc
inc
pop
outsb
xor
flds
pop
nop
mov
in
push
hlt
jb
pop
shlb
mov
jmp
in
sub
mov
pusha
pop
xchg
add
mov
adc
mov
mov
push
mov
add
add
pop
aam
in
xchg
je
rcll
add
push
cmp
mov
cmp
mov
mov
lahf
add
notl
mov
dec
imul
and
shrb
popa
pop
push
inc
inc
fdivr
jne
mov
inc
outsb
adc
fisubl
faddl
je
cmp
cmpl
ret
xor
imul
or
mov
add
add
add
inc
adc
nop
popa
mov
xor
mov
cmp
gs
rolb
jl
mov
pop
pop
aas
imul
adc
jno
inc
push
aas
pop
aas
inc
ds
fidivl
or
jl
jl
sarl
add
mov
insb
push
xor
add
add
sub
mov
push
call
sub
xor
cmp
add
pop
popa
dec
aam
and
pop
aad
add
mov
lcall
adc
or
jmp
jecxz
inc
cmc
mov
lea
jo
or
sub
add
mov
xchg
fisubs
add
add
add
dec
sub
push
imul
pop
ljmp
push
inc
jmp
pop
push
push
pop
adc
mov
std
outsl
pop
outsb
jmp
bound
aad
cltd
mov
cmc
jae
test
popa
dec
outsl
or
add
leave
ret
pop
lahf
dec
dec
adc
pand
adc
cmpsb
loope
xchg
pop
mov
pop
rorl
add
push
mov
in
aam
in
dec
ficompl
adc
and
das
add
loop
adc
sub
bound
adc
jmp
push
in
sar
xlat
push
call
adc
pop
adc
pop
outsb
lcall
pop
adc
add
outsb
clc
je
in
call
inc
mov
insb
add
add
add
xor
add
in
jne
sub
jne
cmp
add
inc
clc
pushf
push
mov
lahf
adc
xor
push
orps
or
xchg
jne
sbb
rclb
dec
mov
cmpsl
adc
cld
push
push
test
arpl
mov
xchg
add
add
add
add
xchg
shlb
mov
mov
mov
enter
mov
cmpb
vmread
cmp
les
out
rep
ss
in
inc
fnsave
add
push
loopne
in
dec
mov
pop
dec
fsub
mov
mov
call
add
out
iret
mov
xor
add
pop
pop
or
pop
mov
jo
fistpll
outsb
push
jp
insl
dec
pop
add
aam
clc
mov
adc
ss
push
push
jae
dec
into
push
nop
data16
outsb
arpl
pop
les
push
cmp
inc
sti
mov
push
jno
dec
xchg
add
add
add
mov
in
sbbb
add
push
cmc
add
xchg
insl
rcll
pop
or
aas
mov
stos
mov
test
in
fs
add
jno
dec
xchg
sub
mov
inc
push
cmpsb
sub
mov
mov
xchg
mov
mov
push
or
add
add
into
les
and
les
mov
insb
loop
inc
sbb
std
push
bound
add
push
jb
or
andl
add
sbb
insl
in
pusha
inc
or
pop
xchg
enter
mov
inc
mov
inc
mov
inc
mov
inc
and
mov
dec
into
mov
int3
add
add
add
leave
mov
int3
addb
js
adc
dec
cmp
or
push
mov
push
fcmovbe
addl
clc
cwtl
push
lret
int3
xor
ljmp
sbbl
xor
add
lds
sbb
mov
in
ljmp
fsubr
mov
mov
add
add
mov
shl
jno
mov
clc
insl
xchg
pop
test
pop
loop
fcomip
dec
js
test
mov
idivl
js
test
pusha
clc
pop
ljmp
xchg
cmp
testl
insl
jmp
icebp
dec
jle
bound
jbe
jecxz
clc
add
add
leave
arpl
add
add
add
lock
inc
pop
jno
fdivl
fs
hlt
dec
cmc
ljmp
shlb
adc
imull
mov
add
lcall
add
call
imull
pop
cmpb
ficoml
aad
sbb
cwtl
mov
inc
lahf
mov
ret
add
add
lds
enter
enter
imull
mov
dec
aad
loop
xor
dec
bound
negl
ljmp
paddusw
je
jmp
es
dec
xchg
add
popf
pop
add
adc
xchg
in
mov
dec
add
scas
or
scas
add
add
add
cld
jl
mov
int3
nop
arpl
or
in
add
repz
sub
add
fs
lahf
test
dec
ss
sbb
mov
int
bound
in
add
mov
add
cmp
push
cld
pop
cld
test
test
push
push
inc
xchg
push
push
push
add
add
ja
add
ja
add
inc
call
add
cmp
ret
push
mov
testb
fldl
push
push
push
imul
push
pop
adc
call
je
add
sarb
in
rolb
dec
shrb
hlt
pop
ljmp
xlat
mov
test
add
add
add
mov
popf
xchg
shr
nop
sub
mov
loop
inc
dec
sbb
or
xchg
in
neg
movsb
adc
lock
adc
ss
mov
mov
push
notl
insl
ret
jbe
outsl
inc
adc
jb
ret
test
testl
xchg
push
testl
pop
inc
adc
add
add
in
mov
mov
test
cmp
xor
pop
ret
xor
es
jmp
mov
clc
cmc
jmp
ja
xchg
and
cmp
sbb
imul
inc
push
mov
adc
xor
jnp
xchg
test
cmp
mov
mov
andb
add
add
addr16
xchg
stos
std
imul
notl
mov
in
add
popf
inc
mov
mov
pop
mov
pop
aas
pop
push
mov
sbb
out
insl
or
loop
insb
add
neg
clc
fucomp
pop
insl
fincstp
ljmp
ljmp
and
scas
add
add
add
sub
cmp
push
jge
mov
cmp
sub
ljmp
mov
or
inc
add
andl
mov
inc
clc
cmp
mov
pop
nop
sub
mov
cmp
in
inc
xchg
js
pop
ret
mov
push
mov
fnstenv
add
add
ds
insl
clc
in
inc
adc
cltd
ret
mov
leave
mov
dec
test
xchg
or
jae
mov
and
jge
jmp
decb
dec
xor
mov
incl
jmp
push
icebp
mul
xor
icebp
mov
jp
movb
add
add
add
es
adc
loopne
mov
dec
xor
ds
mov
mov
sahf
and
mov
sub
lret
test
divl
add
xor
and
test
pop
mov
ds
and
inc
sbb
and
leave
add
add
add
std
pop
js
pushf
out
pop
adc
add
jmp
mov
rolb
xor
fildl
pop
cwtl
lods
jmp
jmp
rcl
shrb
addr16
faddl
mov
lock
inc
push
test
jbe
or
int3
xlat
jb
dec
or
int3
and
jmp
into
adc
xchg
cwtl
loope
add
add
add
add
add
and
arpl
xchg
push
pop
sbbb
jo
sub
daa
insb
mov
sub
jae
mov
sub
push
lcall
subl
fadd
std
pop
lcall
mov
jmp
push
sbb
insl
icebp
xchg
mov
fiadds
aam
cmp
add
add
or
sbb
xchg
dec
sbb
and
mov
adc
dec
cltd
popa
cmp
pop
add
jle
push
adc
pop
out
inc
cmp
arpl
sbb
and
jmp
and
int3
ret
xor
repz
mov
hlt
incl
add
add
sbb
mov
add
in
push
or
rcrl
add
pushf
test
adc
add
mov
jo
pop
ret
mov
dec
hlt
add
pop
mov
xor
cmpsb
ret
mulb
jns
push
xor
jmp
loope
in
mov
add
add
sbb
hlt
mov
push
or
pop
inc
add
pop
mov
pop
or
shl
jno
sbb
cltd
dec
sbb
imul
neg
std
call
add
or
test
mov
xor
in
das
lock
push
mov
js
aad
js
mov
pop
adc
add
fcmove
insl
fcomp
shrl
xchg
stos
xchg
lea
bound
add
add
add
je
add
insl
push
jmp
add
mov
xchg
into
mov
jp
loopne
das
lret
bound
push
pop
insb
sub
mov
frstor
in
adc
jb
pop
jb
pop
arpl
push
mov
inc
imul
jmp
adc
enter
xchg
daa
add
add
add
add
add
notl
xchg
inc
cmc
mov
or
in
add
xor
add
lahf
and
sub
pop
fs
add
xchg
cmp
mov
jmp
or
pusha
lahf
mov
push
les
push
pop
xchg
fwait
jmp
outsb
mov
iret
and
pusha
pop
leave
jge
push
sbb
idiv
je
cmp
insl
add
add
add
inc
jb
leave
mov
loopne
negb
jne
pop
xor
cmp
cmp
mov
add
xor
das
pushl
mov
dec
inc
or
xor
push
in
imul
inc
jae
add
pop
call
cmpl
mov
cmpl
cmp
push
pop
aaa
add
add
add
add
mov
inc
aam
or
push
pop
out
adc
hlt
xchg
mov
mov
cmp
cmp
mov
hlt
push
mov
int
es
testb
cmp
out
testl
pop
mov
call
add
pop
hlt
add
mov
cmp
sbb
mov
add
add
push
inc
shr
xchg
pusha
jmp
not
adc
pop
cs
test
test
pop
imulb
push
jmp
inc
pop
movhps
add
xchg
cmpsb
push
push
sub
adc
cld
test
pop
add
int
jmp
int3
jp
in
fdivrs
cld
icebp
inc
cmc
inc
aad
mov
add
xor
xchg
int
jmp
fdivrl
in
loopne
sarl
mov
in
hlt
xor
mov
movsl
pop
outsb
mov
test
cmpsb
lcall
push
popf
pop
dec
loopne
rolb
sbb
outsb
mov
test
jb
xor
call
outsb
out
sbb
push
cmp
out
lds
sub
add
outsb
call
or
out
jmp
xchg
fucomp
add
cwtl
pop
ret
lcall
jp
add
mov
cwtl
add
pusha
dec
leave
dec
and
mov
dec
lods
pop
cwtl
xor
iret
push
adc
xchg
adcl
dec
movsl
pop
test
mov
add
add
add
and
add
add
int3
push
lret
adc
ja
xor
inc
inc
dec
xor
inc
aaa
dec
xor
inc
inc
dec
jne
add
inc
aaa
push
add
pop
outsb
or
or
add
cli
adc
sti
inc
xor
stos
add
add
adc
mov
ds
fdivr
add
add
add
stos
mov
mov
in
incl
and
inc
mov
sub
pop
jp
imull
adc
mov
fisttpll
push
mov
mov
popf
jbe
les
add
cmp
mov
jns
jp
js
subb
fcom
cmc
pop
or
test
in
cmp
js
aad
in
add
add
add
ljmp
in
and
aad
pop
add
insl
pop
or
dec
rcr
push
add
leave
push
jns
mov
pop
or
icebp
js
adcb
in
orb
jb
or
jno
or
xor
push
pop
mov
inc
inc
sbb
push
jp
leave
inc
ljmp
sub
add
add
es
cmpsl
inc
sbb
jmp
push
in
cmp
mov
push
scas
xchg
push
dec
adc
bound
sub
out
aad
popa
rorl
ret
ret
popf
aad
mov
aad
mov
aad
mov
aad
bound
dec
or
addr16
cmp
add
sahf
xchg
inc
lds
add
add
add
add
stos
xor
mov
add
pop
arpl
xor
mov
cs
mov
int
lods
push
int
bound
add
jb
std
add
dec
push
pop
push
mov
xor
cmc
inc
out
push
xchg
jne
fcomps
and
aas
or
sbb
xor
jb
and
jb
sbb
pop
leave
add
add
add
add
pop
add
adc
in
add
or
call
pop
add
fs
mov
inc
call
mov
je
mov
mov
call
loopne
int3
xor
dec
hlt
mov
popl
mov
sub
cmp
or
mov
xlat
mov
lret
xor
incl
add
add
inc
aad
jp
adc
ret
pop
xor
sbb
xor
outsb
ret
lret
mov
push
adc
xor
sbb
pop
fadd
dec
stos
cs
jg
mov
out
add
out
add
jecxz
lea
jo
sbb
add
pop
xor
outsb
xor
outsb
inc
jo
dec
and
push
mov
mov
xor
add
add
scas
inc
pop
call
mov
cwtl
loope
stc
inc
aas
clc
jecxz
lret
pop
mov
adc
lea
sarl
pop
pop
cmpsb
inc
sub
adc
lea
inc
int
xor
push
push
rorb
sub
push
je
testb
jo
and
jb
sbb
add
add
je
jmp
add
jb
pop
and
push
and
and
in
lea
jo
push
bound
adc
sbb
or
orl
pop
rorb
in
pop
adc
jmp
xchg
pusha
ret
xor
mov
mov
xchg
mov
mov
add
mov
jb
sbb
roll
sbb
enter
or
xchg
sbb
add
cmp
fstpt
sub
mov
mov
mov
adc
fsubrp
lret
rclb
adc
push
inc
lcall
adc
jmp
mov
add
loope
int3
push
mov
add
add
out
and
mov
mov
out
ljmp
pop
xchg
or
mov
rcrb
test
call
mov
int3
inc
fsubr
incl
add
paddusb
pushl
adc
add
fsubr
fnstsw
cmp
aaa
adc
add
fucomi
ljmp
inc
add
adc
add
add
add
pop
xchg
div
pop
push
inc
pop
pop
push
inc
pop
stos
add
pop
xor
not
bound
inc
pop
stos
add
pop
push
divl
mov
add
pop
repz
xchg
repz
out
bound
stos
add
pop
adc
divl
popa
inc
pop
enter
stos
add
pop
mov
notl
push
inc
pop
test
pop
stos
add
pop
rcl
testl
xor
mov
stos
add
pop
adc
ret
add
adc
add
jle
jmp
adc
add
pop
mov
adc
adc
add
adc
sbb
jmp
fisttpll
adc
sbb
jmp
fsubrl
and
add
add
sbb
or
sbb
jmp
fmull
outsb
popa
pushf
adc
pushf
adc
add
mov
bound
add
pop
adc
cmpsb
xor
mull
jl
add
pop
adc
xchg
ret
idivl
iret
dec
add
pop
adc
jmp
jbe
not
mov
idiv
mov
imul
pop
adc
jmp
add
add
dec
mov
not
cmp
imul
pop
adc
jmp
dec
mov
divl
pop
adc
jmp
insl
mov
imull
mov
add
aaa
push
add
fwait
sbb
jmp
cmc
repz
or
add
xchg
sbb
call
idiv
adc
repz
or
add
add
or
hlt
lcall
ret
jg
repz
or
add
outsl
sbb
cmp
sti
incl
or
hlt
cmp
idiv
ja
repz
add
ja
add
lahf
sbb
push
shl
add
add
pop
stos
add
pop
es
sub
jmp
imul
add
add
add
add
pop
push
sbb
add
lock
stc
and
icebp
stos
add
pop
stos
add
pop
sub
cld
fldenv
call
loop
cld
leave
stos
add
pop
stos
add
pop
in
sbb
mov
out
ljmp
stos
add
pop
stos
add
pop
and
cld
mov
repz
stos
add
pop
stos
add
pop
cmp
cld
popa
jle
lcall
sbb
push
adc
add
add
add
pop
adc
add
popf
sbb
mov
jmp
add
jmp
add
jmp
adc
mov
test
adc
mov
adc
mov
adc
mov
push
shlb
adc
push
mov
mov
rsm
mov
cpuid
mov
setp
or
mov
add
add
mov
adc
ret
adc
adc
add
mov
inc
insb
mov
scas
outsl
mov
shrl
iret
dec
mov
rorl
idivl
dec
mov
pop
dec
mov
push
imul
div
outsb
mov
jmp
dec
mov
aad
mov
xor
testl
jno
imul
push
add
add
push
mov
jmp
dec
mov
imul
lret
jp
testl
bound
test
xchg
adc
hlt
pushl
adc
hlt
incl
sbb
incl
add
push
hlt
pushl
adc
add
in
inc
in
dec
in
jmp
in
decl
in
incl
add
add
out
in
decl
in
lcall
in
jmp
repz
in
incl
repz
jecxz
pushl
repz
repz
in
incl
repz
repz
sub
jno
sub
imul
cld
pop
aaa
sub
push
push
sub
dec
test
cld
inc
popf
sub
cmp
cld
xor
cld
add
add
add
sub
and
sub
sbb
sub
adc
sub
or
sub
stc
sub
icebp
and
cld
jmp
dec
sub
fprem
sub
shrl
cld
leave
clc
sub
rorl
mov
mov
sub
mov
mov
pop
cld
mov
mov
daa
jp
inc
daa
jb
push
daa
push
daa
daa
add
add
add
or
pop
mov
es
mov
es
mov
es
mov
daa
cmp
daa
sub
daa
sbb
daa
or
daa
cli
mov
daa
repnz
daa
ljmp
inc
fidivl
scas
pop
lret
pop
ret
pop
mov
mov
and
mov
and
add
add
lcall
and
mov
inc
ds
or
ds
loope
mov
flds
test
jo
negl
popa
mov
push
pop
mov
pop
push
mov
popa
dec
mov
pop
inc
mov
lea
divl
mov
lahf
push
mov
cltd
pop
mov
xchg
push
mov
test
idivl
mov
fstpt
test
add
idivl
arpl
divl
dec
mov
add
adc
std
adc
fists
decl
adc
decl
hlt
lcall
adc
lcall
hlt
incl
adc
hlt
call
call
adc
mov
out
pushl
out
dec
in
lcall
in
incl
add
add
in
repz
in
call
in
incl
push
hlt
out
adc
hlt
call
adc
hlt
call
adc
adc
test
cmp
cld
cltd
cmp
cld
xchg
xchg
cld
mov
add
fisubs
add
fisubrs
add
pop
pop
add
cld
dec
and
add
add
add
add
pop
call
add
fdivrp
add
and
add
cld
or
add
add
or
icebp
xchg
or
jmp
jle
cld
fldl2e
or
roll
cld
leave
dec
or
rcll
or
mov
or
mov
or
mov
or
mov
sbb
add
add
jp
sub
jb
inc
sbb
sbb
outsl
sbb
cmpsl
or
jmp
or
rorl
cmp
or
mov
add
fsts
sbb
mov
adc
mov
adc
scas
mov
repnz
inc
adc
scas
outsl
adc
scas
addr16
scas
notl
shrb
negl
lods
testl
add
imull
dec
lods
divl
insl
lods
divl
jae
neg
imul
fisttpl
div
push
lods
imul
dec
lods
testl
jo
negl
lods
testl
push
lods
idivl
jae
test
jb
imull
lods
notl
push
lods
testl
add
add
inc
lods
not
dec
lods
testl
mov
push
hlt
decl
hlt
ljmp
add
hlt
call
add
hlt
ljmp
hlt
lcall
hlt
mov
add
ljmp
add
pushl
add
lcall
add
ljmp
add
pushl
add
ljmp
add
mov
add
incl
add
add
add
hlt
incl
or
hlt
jmp
or
hlt
jmp
and
cld
loope
pop
cld
fldcw
pop
cld
leave
or
cld
sar
cld
mov
adc
cld
test
aas
push
cld
cltd
pop
push
cld
xchg
std
adc
cld
sbbl
adc
imul
or
add
add
add
push
cld
push
aas
push
cld
dec
daa
adc
cld
cmp
adc
cld
sub
adc
sbb
add
pop
sub
cld
add
jae
repnz
jmp
push
loop
pop
push
fisubrl
or
ret
adc
lods
xor
stos
lods
xchg
adc
lods
pop
adc
add
add
xchg
lods
jmp
add
sbb
jp
sti
add
xchg
pop
xchg
testl
pop
xchg
flds
pop
xchg
jmp
pop
xchg
in
pop
xchg
push
in
pop
xchg
adc
lods
push
adc
lods
clc
add
pop
adc
lods
and
out
pop
adc
std
pop
adc
out
pop
adc
stos
lods
idiv
add
add
add
sub
adc
hlt
pop
adc
push
push
lods
mul
imul
testl
adc
scas
sbb
lods
imul
push
lods
mul
push
neg
bound
test
push
mull
pop
lods
idivl
push
lods
divl
imul
call
hlt
incl
add
add
testl
hlt
mov
repnz
icebp
repz
push
add
outsl
pop
hlt
pushl
hlt
dec
sbb
incl
pop
hlt
lcall
hlt
cmp
hlt
jmp
sbb
fistps
hlt
pushl
add
ret
push
cmp
mov
pop
popa
jecxz
pop
insb
ja
imul
loop
xor
jmp
pusha
outsb
jecxz
push
add
add
add
inc
push
jb
in
pop
cbtw
inc
pop
popa
pop
dec
push
addr16
dec
addr16
dec
jae
pop
push
pop
jb
sbb
sti
mov
jb
pop
jb
adc
dec
adc
pop
insb
pop
enter
lods
daa
imul
cmp
ds
cmp
rcll
sub
fnsave
clc
rolb
sbbl
add
and
cmp
fwait
dec
pop
mov
add
pop
ja
insb
mov
dec
jae
pop
cmp
pop
adc
popa
mov
push
inc
pusha
mov
pop
push
pop
adc
sub
scas
and
addr16
and
add
adc
popa
jp
push
pop
jnp
lcall
cmp
pusha
and
cmp
cs
inc
dec
and
push
and
std
pusha
pop
adc
add
add
add
int
cmp
fsts
fstpt
pushl
xor
inc
or
mov
pop
adc
sbb
fwait
dec
repz
int3
jl,pn
adc
pusha
into
adc
je
call
pop
pop
xchg
push
xchg
dec
mov
dec
jmp
mov
popa
xor
xchg
xor
std
cmp
add
add
add
xor
inc
or
inc
arpl
sub
add
pop
sub
flds
add
pop
sub
popa
aad
adc
inc
arpl
les
out
int3
pop
xor
add
cli
xor
xor
test
or
push
dec
out
push
insb
ficoml
adc
js
fs
mov
jb
add
add
add
sub
jae
ljmp
movsb
xor
inc
push
add
inc
push
push
jne
arpl
cmp
gs
jb
mov
sub
mov
inc
stos
cmp
gs
push
inc
push
mov
adc
cmp
gs
push
add
out
adc
jb
inc
cmp
aad
popa
jb
adc
pop
add
add
add
sub
lret
jns
mov
pop
popa
ret
bound
add
mov
test
scas
arpl
xor
dec
push
inc
jge
push
outsb
jnp
dec
dec
addps
or
dec
dec
cmp
push
insb
sub
dec
jns
mov
pusha
insb
and
inc
imul
add
add
mov
push
popa
cld
lret
pusha
dec
pop
out
inc
in
adc
shll
push
int
jmp
pusha
mov
insb
push
lods
jg,pn
mov
sub
es
mov
xor
lea
add
sub
cmp
adc
xchg
cmp
popa
aas
sub
adc
adc
add
add
add
subl
cmc
inc
sub
notb
adc
add
xor
pop
and
lret
push
lcall
rolb
repz
pop
mov
popf
or
sar
jo
dec
inc
data16
adc
call
mov
pop
pop
mov
pop
push
mov
popa
dec
mov
pop
sub
sbb
add
add
xchg
sub
je
dec
pop
dec
cwtl
inc
inc
sbb
sub
imul
pop
out
cmc
sbb
inc
sti
adc
imul
ds
add
pop
in
mov
mov
imul
arpl
pop
add
ds
insb
fstpt
dec
gs
ds
inc
add
add
add
add
adc
ds
test
outsl
jle
aas
add
inc
popa
jo
aas
push
popa
inc
inc
add
adc
jae
loop
jb
aas
add
inc
mov
pop
insb
enter
xor
in
bound
inc
popa
xchg
loopne
popa
mov
mov
pop
jb
bound
dec
addr16
je
add
add
add
pop
push
sti
xorl
ret
ds
mov
pop
mov
push
mov
lea
addr16
mov
lods
insl
dec
add
or
cmp
imul
add
imul
cld
inc
pop
jmp
insb
cwtl
add
pop
pop
cld
aaa
jb
push
cmp
pop
add
pop
push
inc
sbb
ds
or
add
cld
inc
add
add
add
les
sub
sub
sub
das
repz
mov
sub
sbb
cmpsb
sub
push
nop
das
mov
cmpb
adc
das
xchg
inc
xorb
adc
add
ss
sub
ss
adc
sub
push
xor
and
pushf
sbb
and
add
add
or
sub
sti
sub
es
jbe
dec
jmp
push
and
cmp
fistpll
and
dec
ds
jb
das
inc
jae
pop
std
xchg
xor
insb
pushf
xorb
mov
inc
pop
jge
sub
jp
push
jnp
cmp
imul
popa
pop
add
add
add
ds
dec
add
dec
dec
cmp
xor
xchg
sub
les
sub
fildll
js
popa
add
cmp
add
push
movsb
out
gs
jno
cmpsb
idiv
push
pop
inc
insb
movsb
dec
push
je
repnz
jne
adc
out
jb
lcall
add
adc
imul
loope
xor
inc
into
out
push
push
inc
adc
jmp
fs
out
pop
jae
adc
pop
fs
divb
cmp
pop
gs
adc
arpl
loope
arpl
jno
negb
pop
test
gs
icebp
xor
daa
addr16
or
push
data16
sub
or
es
add
add
pop
test
lock
imul
add
xor
sub
mov
add
decl
xchg
sbb
int
in
xor
xchg
sub
sub
jae
cli
inc
pop
xchg
inc
dec
add
add
jnp
dec
jb
fisubrs
dec
ja
sub
flds
aas
jnp
dec
addr16
adc
and
sub
add
pop
adc
add
add
add
das
sti
sub
sub
aaa
or
push
and
out
adc
sub
sub
aaa
sub
mov
mull
cs
inc
shrb
cld
sub
and
adc
or
lods
sub
ss
subb
sub
adc
add
jne
mov
jl
subl
inc
xor
sub
add
add
add
orb
jg
add
pop
lahf
add
xchg
pop
add
sub
bound
sbb
sub
adc
push
popa
aas
pop
aad
xor
cs
int3
inc
adc
sub
dec
imul
das
dec
movsb
es
insb
mov
add
sbb
xor
nop
jns
inc
xchg
add
add
add
fcompl
sub
cmp
sub
add
popa
inc
pop
add
cmp
mov
jmp
gs
fcos
pushl
inc
imul
gs
fdivr
jmp
gs
repnz
je
fistps
mov
adc
mov
lock
mov
out
jno
add
add
add
in
push
gs
setle
add
fs
inc
pop
jae
loopne
arpl
out
bound
push
stos
add
mov
pop
inc
fwait
loope
arpl
add
pop
out
pop
jg
push
inc
jae
push
js
test
dec
pop
lock
popa
dec
push
inc
cmp
aas
inc
add
jb
pop
pop
jae
loopne
popa
cs
inc
add
add
add
das
addr16
enter
sub
pop
imul
or
popa
add
fs
sub
pop
adc
aas
ret
fs
addr16
pop
cwtl
mov
pop
cwtl
xchg
xor
sbb
gs
and
addr16
das
dec
pop
sbb
dec
jnp
pop
sub
dec
xor
xor
ss
inc
xor
and
add
add
sub
adc
cmp
pop
push
jns
or
sub
dec
pop
and
pop
cld
and
sub
sub
testl
std
and
inc
pop
adc
sub
sub
das
add
sub
adc
inc
sub
dec
and
bound
add
xor
sub
add
add
add
ss
inc
inc
ss
pop
fcomps
ss
gs
sub
dec
addr16
jg
push
ss
pop
outsl
ss
or
jb
inc
and
inc
xor
stos
xor
data16
and
in
jns
jo
inc
dec
insl
mov
pop
add
les
and
pop
outsl
std
mov
add
add
jb
insb
pushf
subb
add
getsec
gs
dec
push
insl
xchg
inc
popa
je
inc
add
adc
xchg
ljmp
movsb
loope
jb
inc
add
sub
imul
clc
inc
outsl
jnp
jb
push
loope
push
pop
lock
add
frstor
pop
jmp
add
testb
testb
call
add
add
inc
imul
mulb
adc
fimuls
aaa
adc
add
mull
pop
subl
rorb
inc
jg
and
push
add
std
jnp,pt
dec
jb
dec
pop
jae
fsubrl
gs
adc
sub
jo
test
inc
pop
out
addr16
sub
or
add
add
fldt
popa
xor
add
sub
and
les
dec
daa
insb
and
mov
add
outsl
push
insb
mov
pop
push
pop
lods
adc
cmp
sub
push
shll
and
sub
cltd
adc
inc
lods
inc
sbb
sub
and
add
add
adc
ja
push
sub
dec
dec
xor
daa
cs
or
cmovg
cs
or
sub
and
inc
sbb
add
mov
sbb
inc
add
pop
add
jp
cmp
mov
insb
xchg
lea
add
insb
ss
insb
sub
add
add
insl
adc
lahf
pop
dec
jo
cmp
pop
jp
and
add
aam
pop
mov
addr16
aas
and
xor
pop
dec
mov
dec
mov
addr16
bound
add
mov
popa
adc
jle
outsl
cmp
insb
adc
dec
jmp
inc
sub
add
sub
cmp
aad
and
add
pop
add
add
add
and
push
inc
and
push
or
ljmp
sarl
jb
in
jb
lock
fs
out
push
add
xor
ljmp
dec
or
inc
outsl
mov
pop
push
jl
inc
gs
gs
pop
arpl
jno
xor
dec
push
loop
popa
pusha
hlt
dec
outsl
add
add
add
push
push
scas
in
push
outsl
nop
aas
jb
pop
movl
mov
pop
addr16
js
addr16
and
pop
sub
mov
lods
adc
inc
pop
dec
add
test
popa
lea
es
test
xchg
pop
in
push
pop
mov
push
sub
sbb
pop
test
cltd
pop
in
pop
add
add
add
aam
push
dec
sti
and
lret
add
adc
arpl
in
push
jae
xchg
sbb
pop
xor
cmp
add
cmp
out
imul
and
dec
pop
adc
inc
repz
mov
xor
mov
mov
dec
mov
test
inc
fwait
and
push
jmp
push
mov
dec
stos
add
es
push
add
add
add
push
jmp
sub
sub
adc
cs
pop
sbb
aaa
aas
sub
pop
adc
add
sub
inc
cmp
sbb
inc
xor
sub
cmc
and
adc
std
and
cli
cmp
push
xor
add
pop
inc
jb
aas
push
fs
int3
nop
add
movb
pop
mov
repnz
popf
add
add
add
pop
jmp
jbe
cmp
inc
std
dec
jns
repnz
add
inc
lock
inc
adc
dec
pop
fsubrs
jl
cmp
cld
imul
adc
sbbb
pop
and
popa
add
loope
js
std
adc
addr16
pop
arpl
lods
add
add
add
cmp
add
adc
push
inc
hlt
adc
clc
cmp
inc
jae
fdivrs
inc
add
call
push
push
fdivs
add
loopne
aaa
gs
push
jae
xor
gs
adc
push
push
xchg
sub
je
adc
test
jo
test
call
inc
cmp
add
add
add
pop
jb
jp
or
push
sti
sbb
cmp
pop
lods
add
add
imul
push
sub
jb
pop
push
jae
rcrl
pop
xchg
inc
mov
pushf
and
lahf
sbb
stos
add
pop
mov
dec
xchg
add
jp
push
jae
fldcw
pop
mov
push
pop
jns
aaa
dec
add
add
add
cld
push
inc
dec
pop
imul
sub
pop
add
inc
adc
xor
sbb
adc
daa
or
mov
in
aas
add
add
add
hlt
aam
cli
out
fnstenv
mov
add
mov
sub
hlt
xchg
push
mov
adc
cltd
aaa
add
add
add
idivb
pop
adc
add
insb
pop
xchg
inc
pop
and
test
inc
hlt
dec
and
clc
inc
sub
add
pop
add
sbb
insb
cmp
jbe
pop
sbb
pop
add
adc
rcrb
cli
push
in
sbb
add
inc
std
pop
fldt
gs
dec
fdivrp
sbb
data16
cli
add
add
add
jmp
test
js
pop
bnd
mov
pusha
xchg
jbe
add
fisubl
inc
pushl
cmp
push
test
jb
xor
dec
inc
adc
out
dec
imul
adc
add
adc
and
jae
adc
inc
imul
jae
push
xor
push
mov
mov
fs
cmp
add
add
add
push
push
ja
jno
push
aas
imul
sub
jbe
xor
push
and
add
aaa
gs
pop
popa
hlt
ds
lret
add
adc
jb
dec
popa
insb
int3
cmp
testl
fs
fisubrs
or
and
fs
pop
rcll
addr16
fisttpl
fildl
dec
add
add
add
aam
xor
xor
dec
adc
sbb
popa
add
pop
popa
stc
sbb
add
add
sti
lea
out
and
data16
bound
pop
pop
cld
inc
negb
inc
leave
arpl
jb
js
dec
pop
mov
insb
xchg
push
adc
cmpsl
lret
pop
inc
cld
cmp
adc
cmp
xchg
sbb
pop
xor
add
add
adcl
cmp
inc
inc
call
aaa
cmp
and
cmp
sti
add
or
or
adc
sbb
clc
or
sbb
push
aaa
pop
add
push
add
hlt
in
ds
sarl
cli
repz
inc
stc
add
add
sti
stos
push
mov
mov
pop
adc
add
add
add
mov
loope
xor
add
sub
xchg
add
insb
mov
std
pop
jl
in
bound
lock
aas
std
inc
dec
je
ljmp
pop
aam
push
fsubrs
addr16
jb
push
loope
inc
push
std
decl
dec
pop
adc
aas
rep
jmp
aas
std
dec
add
out
data16
in
push
cmc
cmp
pop
jmp
add
add
ja
dec
aad
out
dec
lods
pop
mov
push
mov
cmc
pop
mov
dec
hlt
jb
pop
in
add
dec
cmc
dec
add
inc
gs
sub
pop
adc
xor
push
xor
adc
add
inc
gs
sub
xor
xor
add
aaa
imul
pop
inc
push
add
dec
xor
add
outsl
xchg
inc
push
jb
fildll
imul
jne
pop
addr16
es
push
ja
sbb
mov
fildll
inc
adc
add
inc
push
outsb
out
pop
arpl
aas
jae
lock
outsb
aaa
adc
add
xor
xchg
pop
push
mov
jb
and
pop
addr16
inc
outsb
lea
dec
jbe
push
popa
jp
sbb
add
add
inc
sar
arpl
pop
insb
sub
faddl
xor
sbb
sub
and
add
add
push
addr16
pop
sbb
sbb
imul
cmp
pop
jmp
push
in
push
sbb
int
inc
jae
imul
mov
add
push
lods
push
xor
adc
mov
mov
add
add
add
test
je
jns
xchg
notb
sbb
in
pop
add
adc
sbb
aas
and
cmp
dec
std
inc
pop
sub
divb
add
adc
ss
add
and
loop
and
lock
cs
or
testl
mov
out
xor
xor
stos
xor
add
add
xor
test
add
pop
shlb
insl
cmc
cmp
ficompl
movl
jne
in
jge
out
js
cmp
push
xor
imul
push
dec
popl
imul
outsb
out
jno
pop
jb
cmp
cmc
push
or
hlt
jno
dec
or
add
add
add
jno
xor
data16
xor
std
pop
nop
add
cmc
push
fisttpll
out
add
inc
imul
imul
fists
inc
imul
imul
adc
shlb
push
loop
gs
inc
jns
and
jb
cmp
pusha
arpl
or
add
add
push
and
gs
inc
jns
push
inc
arpl
cmp
pusha
arpl
xor
jne
popa
je
dec
push
jns
xor
push
gs
pop
outsl
pop
and
popa
add
mov
sbb
mov
inc
js
jp
mov
pop
mov
lea
pop
test
pop
add
add
add
push
xor
repnz
add
cld
inc
dec
loope
insb
and
das
dec
aas
inc
adc
aas
dec
and
mov
sub
pop
pop
xor
sub
inc
add
pop
push
push
inc
add
cld
inc
in
adc
or
sbb
xchg
inc
icebp
adc
das
mov
adc
inc
int3
in
das
fld
xor
adc
add
add
add
popf
ljmp
xor
adc
cmp
iret
pop
xor
add
xchg
xor
out
inc
xor
shr
add
cmp
dec
into
xor
fsubs
add
adc
and
sbb
inc
repnz
pusha
clc
or
sub
adc
add
add
cmp
adc
add
lock
cld
inc
inc
imul
add
imul
jo
call
pop
loope
aad
fdivs
int
jmp
jl
addr16
inc
in
data16
js
pusha
mov
arpl
pop
add
addr16
inc
ljmp
inc
decb
pop
add
jbe
inc
inc
jb
dec
jmp
xor
sub
cmc
bound
add
adc
xor
add
pusha
adc
ss
js
aaa
jmp
add
pop
push
xchg
fs
cmp
xor
jae
inc
pop
push
aaa
adc
fs
push
cmp
jecxz
jae
fcoms
add
int3
xor
sub
xor
add
lahf
adc
pop
imul
gs
add
add
add
daa
adc
dec
jae
jb,pn
and
pop
jb
cmp
add
sub
ja
pop
inc
jae
pop
pop
xor
cld
add
jge
push
sti
nopl
sub
push
imul
jno
outsb
rcrb
jo
push
xor
add
sbb
mov
sub
ja
push
mov
add
jbe
cmp
pop
dec
cld
push
jb
cmp
add
cld
push
push
cmp
sbb
sbb
aad
inc
pop
push
sbb
sbb
loop
inc
pop
loop
dec
aas
inc
and
add
lock
add
repnz
sub
notl
stc
add
xor
icebp
or
in
out
add
popf
es
add
add
mov
xchg
push
ret
repz
adc
mov
das
mov
add
leave
popf
es
jge
mov
add
filds
popf
out
jnp
jg
jl
inc
out
inc
cmp
rcrb
cmp
call
sub
in
dec
inc
ss
dec
pop
cmp
lcall
cs
fisttpl
and
sub
add
add
add
pop
or
imul
inc
fdivl
pop
push
add
insl
in
inc
int3
push
popa
movb
lretw
outsl
mov
cmp
pop
jmp
inc
in
dec
lcall
cmp
adc
lcall
test
shlb
ja
dec
pop
jno
js
outsb
lock
add
add
or
add
adc
fs
jb
inc
aas
outsb
dec
pop
outsl
push
xor
add
int3
xor
cs
push
arpl
imul
and
ss
inc
aaa
push
aam
add
adc
hlt
and
jecxz
dec
outsb
aam
popa
outsb
in
add
ljmp
outsb
fisubs
popa
lret
sub
add
add
adc
mov
dec
outsb
fisubs
popa
sub
jp
test
arpl
fsubs
aaa
push
inc
pop
daa
daa
dec
cmp
pop
imul
xor
cld
inc
stc
inc
sbb
and
sub
and
pop
sub
adc
adc
pop
sub
dec
adc
push
and
and
ret
dec
adc
pop
jns
inc
add
add
add
es
sub
mov
fs
cmova
arpl
add
pop
mov
cmp
push
daa
and
push
daa
cmp
adc
daa
push
call
daa
or
cmp
pop
lock
add
add
push
cmp
in
add
adc
aad
add
push
sbb
lock
and
add
add
add
jnp
lods
hlt
aam
stos
out
int3
xor
adc
inc
mov
mov
adc
enter
out
mov
jns
call
daa
xchg
mov
insl
jmp
add
js
outsl
push
insb
in
inc
pop
jnp
js
pop
add
dec
fsubl
cmpl
inc
cmp
add
add
push
enter
arpl
dec
fcompl
fnsave
xor
jmpw
add
jns
pusha
int
ljmp
jnp
lcall
lret
lcall
int
add
inc
fistps
cmc
imul
aam
mov
rclb
dec
mov
mov
push
arpl
pop
add
inc
inc
push
dec
and
add
add
add
inc
pop
inc
sbb
jb
adc
inc
add
aam
fs
jnp
push
je
sub
addr16
inc
inc
push
xor
pop
shlb
push
and
add
shlb
push
or
xor
arpl
sub
clc
aas
inc
inc
icebp
and
sbb
outsl
in
xor
jae
adc
inc
inc
add
add
add
sbb
pop
fwait
push
dec
cmpl
add
test
push
add
cld
dec
sub
cmp
pop
pop
das
xor
jnp
and
pop
or
dec
and
inc
gs
pop
push
insb
sbb
push
sub
push
fcompl
push
jns
jbe
data16
jl
insb
ret
dec
pop
cmp
pop
sbb
add
add
add
cld
inc
mov
pop
and
and
push
and
dec
pop
pop
mov
in
sub
add
lods
adc
std
subl
std
jne
sub
call
pop
sub
sub
cmp
xor
pop
adc
adc
sub
sbb
out
cld
add
add
out
adc
add
inc
adc
pop
int3
std
and
into
in
and
std
ret
inc
mov
call
test
sbb
iret
call
jae
inc
mov
push
xchg
inc
add
push
adc
stos
xor
dec
popf
or
test
enter
add
outsb
shlb
sub
pop
xchg
call
add
add
leave
imul
clc
dec
inc
cmp
inc
jmp
xor
pop
sbb
sub
gs
in
jmp
test
pop
sti
xchg
imul
lock
scas
je
pop
jmp
xchg
pop
imul
push
fs
xlat
add
inc
adc
jecxz
aas
jo
daa
push
gs
push
push
jae
sar
incl
add
add
int
dec
je
and
jecxz
push
jno
pop
jae
xor
and
jae
adc
jg
fs
xor
jne
jno
and
fs
ja
lods
add
fs
das
push
je
sbb
jg
cs
fs
das
push
je
sub
lds
adc
dec
outsb
pop
push
and
dec
pop
push
stos
inc
adc
add
add
test
dec
cmp
pop
fwait
inc
inc
xchg
mov
pop
fs
stos
aas
cmp
sub
pop
fs
push
in
pop
lods
and
pop
jb
lds
dec
dec
int3
push
add
cld
inc
inc
fidivrs
aaa
sub
pop
add
adc
or
and
pop
mov
inc
sti
adc
inc
data16
cld
inc
and
cmp
and
add
add
add
add
ret
jle
pop
mov
flds
fisubl
lods
add
cmpsb
lds
aas
mov
adc
es
adc
incb
std
call
and
lock
pop
adc
cmp
dec
daa
inc
sti
cmp
push
pop
adc
xor
adc
add
out
inc
and
add
add
add
add
lock
psubd
or
add
add
or
pop
sub
adc
dec
std
cli
ud1
incl
loop
pop
jl
pushl
pop
fisubrl
jnp
outsl
pop
dec
add
outsl
call
add
in
pop
xchg
ds
jb
ljmp
inc
in
arpl
pop
or
cmpsb
jo
cmp
test
add
add
outsl
push
inc
jnp
clc
pop
ret
pop
pop
insl
in
cmp
pusha
dec
popa
aam
jmp
popa
in
adc
dec
add
push
pop
cmp
push
add
push
push
jle
cmp
add
push
je
and
push
sub
add
jae
imul
push
jb
or
add
add
add
lret
pop
imul
jae
outsb
fildll
pop
fs
adc
sub
or
outsb
jns
pop
je
sbb
add
push
gs
cmp
push
das
push
insb
sbb
xor
je
cs
inc
pop
adc
insb
sti
adc
sub
adc
sbb
jb
jp
add
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
add
pop
jp
add
jmp
add
add
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
pop
adc
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
xchg
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
add
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jbe
add
adc
add
adc
add
dec
aaa
add
jb
add
add
pop
dec
add
pop
js
add
jecxz
pop
js
add
add
pop
jg
add
add
pop
jns
add
sahf
inc
adc
add
add
mov
pop
or
pop
jp
add
add
pop
jp
lcall
xchg
adc
add
add
pop
mov
add
pop
cli
sti
lcall
xchg
loope
add
pop
jb
add
add
pop
jmp
add
add
pop
jp
add
jmp
add
jmp
mov
pop
adc
add
add
add
pop
adc
mov
call
add
sub
shr
add
jmp
ret
popa
shr
add
jmp
xchg
dec
shr
add
jmp
imul
add
jmp
dec
addr16
add
jmp
jle
shr
add
cld
mov
sbb
enter
jns
stc
mov
add
add
cli
aas
sbb
sbb
add
popl
adc
nop
insb
test
sub
cmp
xchg
test
sahf
scas
rcr
push
adc
inc
sbb
nop
loop
aas
inc
iret
mov
dec
and
out
fscale
in
popf
icebp
xchg
push
mov
iret
mov
inc
mov
sti
loop
in
cmp
insl
fisttpll
cmp
add
add
add
sbb
and
push
repz
divl
add
jecxz
inc
fisubrl
popf
mov
mov
pop
or
mov
cmp
shll
ffreep
fcoml
hlt
aam
adcb
in
sti
xchg
pop
sarb
lock
outsb
mov
lcall
pop
int3
mov
pop
mov
jecxz
repz
add
add
mov
outsb
ret
cmpsb
fwait
xchg
addr16
push
pop
push
adc
add
mov
int3
xor
or
pop
xlat
adc
mov
jbe
dec
inc
sub
aaa
mov
inc
adc
icebp
pop
test
and
xor
ds
cmp
pop
aam
std
mov
sub
add
add
add
mov
fists
sbb
fdivrl
das
pop
aas
push
shlb
in
mov
lds
cmpsw
dec
xor
mov
pop
jmp
fistpll
and
sub
push
sub
sub
lcall
int3
mov
add
popa
add
add
add
dec
pop
inc
sub
insl
jge
or
cwtl
test
daa
dec
pshufw
xchg
sahf
je
es
xchg
or
daa
jae
xlat
ret
add
imul
jmp
jnp
sbb
push
ss
popa
pop
sub
jg
rcr
push
out
cmc
scas
cmp
cli
adc
inc
add
shll
mov
fcompl
orb
add
add
mov
or
adc
cmpb
add
jb
and
xchg
in
sbb
inc
mov
shr
cmpsb
push
addr16
sbb
sbb
xor
pop
sub
popa
movsb
fisttpl
adc
adc
mov
pop
adc
xor
stos
sar
sub
sar
xor
sar
cmp
add
add
mov
jmp
aas
add
in
add
aas
add
in
add
aas
add
jmp
add
jmp
add
jmp
add
aas
add
aas
add
aas
add
call
aas
add
call
aas
add
call
aas
add
jmp
aas
add
jmp
aas
add
add
add
add
aas
add
call
aas
add
jmp
aas
add
js
pop
push
js
pop
xchg
inc
pop
lret
pop
js
add
push
or
jmp
pop
js
add
repz
jae
add
lret
and
lret
ja
lret
pusha
leave
sti
addr16
inc
add
cld
lcall
mov
cmpsl
add
add
add
xchg
mov
mov
hlt
mov
cwtl
mov
sti
nop
jp
add
cld
lcall
int
outsl
push
int
outsl
pop
int3
jnp
int3
mov
jge
cmc
and
aad
and
aad
and
add
and
rcll
std
shll
vpaddw
sbb
enter
movl
mov
and
cmc
enter
enter
leave
dec
es
leave
or
and
pop
enter
enter
enter
enter
enter
enter
enter
jge
pusha
xor
std
and
ss
and
movsl
sbb
xor
lds
lock
add
and
xor
jge
jg
inc
fwait
scas
ss
mov
dec
ss
fwait
outsl
ss
mov
getsec
std
mov
das
aaa
sbb
fwait
iret
ss
fwait
out
ss
fwait
aaa
jge
jg
inc
sbb
aaa
movsl
sbb
add
dec
sarl
fisttpl
stos
dec
repz
add
add
add
das
add
jnp
add
sti
add
or
adc
pop
cmp
xor
mov
ds
xor
aas
arpl
sti
jae,pt
cmp
xchg
xor
cmp
mov
jnp
ret
xor
shll
pop
cmp
repz
add
mov
adc
pop
and
jnp
xor
cmp
inc
xor
push
xor
arpl
add
add
add
jae
mov
in
xchg
int3
shll
outsl
lods
rol
outsl
test
shrl
shl
dec
shl
dec
insb
roll
dec
rcll
dec
or
and
shll
sub
roll
test
push
sub
shll
test
jae
in
rolb
mov
shlb
insb
sub
ret
insb
add
shrl
jecxz
inc
cs
add
add
add
add
fs
or
and
fs
sub
inc
sub
int3
cs
adc
aaa
loop
jne
ljmp
aaa
ljmp
aaa
or
push
aaa
or
cmc
aaa
push
std
aaa
inc
and
popf
aaa
mov
and
xchg
aaa
dec
and
add
add
and
cmp
cmp
es
cmp
fnstsw
xchg
es
pop
daa
in
cmp
cmc
cmp
std
cmp
daa
and
adc
xchg
in
sub
insl
xchg
cs
ja
lods
addr16
cs
addr16
cs
pop
cs
inc
or
add
add
std
xor
das
add
and
cs
and
cs
xchg
insl
test
das
cmp
je
das
sub
fs
das
in
pop
das
in
inc
or
aaa
std
xor
sbb
inc
cmp
push
cmp
sbb
test
lret
sbb
add
add
movsb
cmp
sbb
aam
fwait
sbb
hlt
cmp
sbb
or
cmp
sbb
pop
sbb
mov
sbb
sbb
cmp
sbb
sbb
jnp
movsb
cmp
sbb
dec
sbb
cmp
sbb
cmp
add
pop
fs
sub
add
add
xor
ss
sub
dec
and
ss
xchg
sbb
insb
xchg
xor
jl
in
xor
test
xor
je
xor
mov
test
in
push
hlt
xor
inc
insb
xor
inc
fs
xor
adc
cmp
lods
xor
and
pushf
xor
xchg
mov
jl
in
xor
sbb
lods
jne
xor
gs
int3
gs
fcoml
cmp
push
adc
cmp
sbb
cmc
aas
inc
sbb
and
inc
mov
sbb
gs
rcrb
xor
inc
ljmp
inc
cmp
jne
add
pop
inc
or
in
push
push
in
inc
pop
push
cmc
inc
inc
push
std
inc
sub
movsl
inc
add
add
add
push
mov
inc
push
popf
inc
dec
push
gs
rcrb
insl
inc
ficompl
xor
repz
adc
adc
xor
dec
gs
push
or
add
sub
push
xor
lea
mov
gs
xchg
adc
xor
jb
xor
push
xor
imul
or
add
xor
dec
in
insl
push
xchg
xor
test
lea
mov
xchg
sub
xor
xchg
jne
xor
adc
xor
outsl
xor
xor
sti
and
lret
and
and
and
push
jl
or
mov
jmp
pushf
xor
push
lods
xor
push
int3
xor
and
xor
add
add
or
in
xor
and
xor
or
sub
sbb
or
sub
jnp
cmp
dec
and
and
and
and
and
lret
and
dec
and
xor
and
xor
and
xor
and
pop
dec
das
and
inc
das
xor
lods
das
inc
push
das
push
push
mov
fs
in
je
add
add
push
in
test
cs
xor
mov
lods
das
les
test
aam
dec
das
in
movsb
das
hlt
xchg
insb
cs
fs
dec
cs
inc
cs
sub
inc
imul
push
or
fs
fs
in
sub
xchg
xor
mov
sub
les
add
aam
int3
sub
hlt
xchg
adc
xor
add
in
xor
jp
int
jb
movsl
xor
xor
test
adc
gs
and
shlb
test
mov
and
xor
and
xor
and
xor
in
xor
lds
jp
int
jb
and
xor
and
xor
and
add
add
add
and
xor
and
dec
lea
xor
test
aaa
int
sub
cmp
push
mov
aaa
jne
leave
cmp
cmp
cmp
jmp
xor
jmp
xor
xchg
xor
add
add
add
xor
jno
xor
imul
xor
push
xchg
xor
dec
dec
xor
xor
xor
cmp
xor
and
cmp
and
cmp
sbb
mov
sbb
pop
sbb
aas
sbb
cmp
lahf
sbb
sbb
xor
pop
sub
pusha
add
add
add
sbb
or
jo
xchg
sbb
mov
cmpb
sbb
aas
xlat
sbb
aas
iret
sbb
aas
aaa
addl
imul
das
push
sbb
lods
xor
sbb
mov
int3
and
cs
shrb
mov
sub
mov
sub
mov
cld
outsb
pusha
xor
outsl
in
mov
add
xor
dec
push
add
pop
hlt
cmp
hlt
es
sub
dec
xor
es
sub
es
xchg
hlt
es
mov
es
xchg
les
mov
imul
imul
push
and
inc
dec
clc
xor
xor
leave
xor
push
and
and
cmp
adc
and
add
add
add
push
movsl
xor
push
xchg
xor
push
mov
push
push
mov
ds
test
ss
jne
cs
jne
push
push
jne
ficomps
mov
and
push
cmp
sbb
add
xchg
cmp
pop
push
cmp
and
mov
test
pop
pop
cmp
pop
dec
cmp
pop
mov
cmp
sbb
cmp
add
add
sbb
fldl
mov
cmp
xor
cmp
jg
mov
dec
cmp
xchg
inc
cmp
test
test
xor
jno
xor
imul
xor
imul
xor
push
fidivs
pop
inc
xorl
jne
xchg
sub
xor
sub
xor
xchg
imul
add
add
add
das
xor
jecxz
shlb
addr16
xor
jno
xchg
cmp
test
out
es
ss
loope
xchg
push
add
aas
sbbb
aas
inc
sbb
aas
lea
add
mov
add
mov
pop
xor
sti
pop
arpl
lret
xor
pop
mov
xor
fnsave
add
add
add
jle
fcompl
shlb
pop
ljmp
pop
xor
jle
dec
xor
pop
jne
xchg
pop
mov
xor
xor
insb
jg
or
xor
dec
outsl
xor
dec
lahf
xor
dec
std
xor
jo
jbe
loopne
repnz
or
sub
inc
daa
mov
loope
outsl
adc
add
add
jae
daa
cmp
es
jae
outsb
imul
mov
cli
es
fs
int
lea
sub
mov
dec
and
lea
mov
xchg
iret
cmp
xchg
mov
adc
fwait
cmp
sbb
cmp
mov
cmp
pop
bound
mov
pop
arpl
add
add
add
adc
mov
adc
add
add
adc
mov
in
adc
ficoml
xorb
adc
mov
adc
xor
aad
sub
mov
fidivs
push
adc
notl
pop
xor
adc
xor
jmp
aad
adc
jmp
push
xor
add
add
add
sub
push
jge
jmp
pop
adc
mov
xor
and
cvtps2pi
sahf
cmp
scas
cmp
mov
add
mov
sub
mov
outsb
and
xor
inc
dec
dec
mov
jmp
pop
adc
jae
cmpsb
xor
sub
mov
mov
add
add
sub
int
adc
add
or
cmp
adc
and
sbb
sub
and
and
sub
sbb
xor
add
cmp
sub
inc
xor
dec
xor
pop
push
xor
pop
xor
pusha
xor
push
push
xor
push
js
stos
add
mov
cmp
nop
xor
push
cwtl
xor
push
mov
xor
push
mov
add
mov
add
sub
shlb
push
enter
shlb
arpl
fdivs
imul
xor
push
lock
cs
mov
lea
or
insb
sub
insl
pop
sub
insl
xchg
sub
test
aam
mov
in
mov
dec
je
enter
shrb
aam
loopne
aam
call
in
clc
add
add
add
xor
or
fs
sbb
cmp
jb
das
sub
das
xor
das
cmp
das
inc
push
je
dec
dec
je
push
xor
ss
push
subl
testb
cs
movups
xchg
xor
xorps
sbb
jge
xor
iret
xor
adc
add
add
add
pop
adc
pop
adc
xor
add
xor
add
inc
add
and
xchg
xor
add
aaa
gs
dec
aaa
lods
add
ss
xchg
ss
add
ss
pop
cmp
push
jmp
sbb
add
das
lret
aaa
sub
fidivl
pusha
xor
cmp
cmp
and
cmp
add
add
jae
cmp
test
scas
je
cmp
je
cmp
mov
jecxz
cld
xor
cmp
xor
sysexit
loope
mov
add
dec
adc
xor
add
mov
mov
xor
outsl
push
xor
shlb
insl
bound
push
dec
adc
dec
add
mov
add
xor
add
add
sbb
pushf
xor
or
xor
or
xor
or
xor
push
inc
ss
add
push
mov
in
aad
fldl
mov
jg
mov
aaa
loope
or
or
cmp
imull
cmp
cld
xor
js
dec
cli
mov
cmp
add
add
cmp
fidivrl
pop
cmp
js
in
and
inc
and
or
push
sbb
pop
and
xor
shlb
mov
and
adcl
and
pop
xor
add
xor
dec
lret
push
bound
sub
sub
xchg
aaa
jnp
ja
add
add
and
sub
xchg
bound
lahf
xchg
loop
repz
and
pop
cmp
add
sti
lcall
xor
xchg
decl
xor
addr16
and
mov
sti
addb
sub
jl
repz
add
addr16
xor
add
mov
pop
xor
add
sub
add
add
nop
or
jp
sbb
test
gs
add
dec
sub
push
pop
sub
or
je
repz
das
fwait
or
das
ret
or
jnp,pn
add
jnp
ss
ss
dec
bound
jmp
pop
adc
into
dec
out
insb
sub
pop
xor
sub
aas
xor
add
add
add
sbb
cli
xchg
sub
or
xlat
xor
mov
xor
imul
jae
mov
xor
jo
aas
dec
mov
xlat
xor
xor
movsl
xor
sub
test
mov
add
add
aaa
push
cmc
mov
cmp
mulb
add
xor
mov
cmp
pop
cmp
neg
cmp
lock
adc
loopne
pusha
cli
pop
cmp
jno
mov
inc
add
call
add
arpl
pop
xor
movsb
xor
stos
xor
mov
mov
inc
xor
shll
xchg
add
inc
clc
mov
pop
xor
dec
add
add
add
inc
xor
jno
xor
imul
xor
push
shll
xor
inc
mov
sub
cltd
and
aaa
ret
daa
mov
mov
sub
icebp
and
in
sti
and
test
and
jne
and
jne
and
in
cmp
push
push
pop
cs
scas
daa
mov
daa
cmc
add
add
add
push
sub
and
jl
scas
push
mov
and
pop
sub
pop
mov
adc
dec
sub
push
push
sub
pop
outsb
sub
push
jmp
add
sti
xor
inc
xor
add
xor
add
xor
add
stos
add
xor
xor
add
xor
add
add
add
add
xor
std
out
lret
cld
test
das
std
cmp
push
cld
in
mov
sbb
xchg
adc
insb
cs
das
orb
das
fwait
mov
das
xor
das
pop
outsb
pop
das
dec
outsb
cmp
xor
das
rolb
aaa
mov
xor
outsb
cmp
push
cmp
add
add
add
cmp
xor
cmp
xor
cmp
mov
cmp
orl
cmp
cmp
mov
cmp
fwait
cmp
jae
cmp
inc
pop
cmp
xor
cmp
out
cli
std
cmp
cli
or
cmp
sti
cmp
cmp
cli
insl
cmp
idivl
testl
popf
cmp
imull
cmp
test
cmp
in
cmp
std
cmp
or
cmp
clc
cmp
cmp
cmp
idivl
mov
mov
fcomi
test
mov
movsl
cmp
xor
add
dec
pop
or
xor
adc
pop
pop
sbb
push
pop
and
add
add
and
daa
xor
jp
cmp
jb
inc
orb
push
jb
pop
pop
push
pop
bound
pop
je
mov
push
test
push
mov
mov
xchg
xor
push
pushf
sub
push
movsb
and
pop
lods
lcall
lret
mov
sub
jp
push
push
jae
pop
test
push
popf
arpl
add
add
mov
aaa
add
call
and
mov
or
and
pop
adc
repz
adc
pop
adc
xor
insb
xor
add
xor
add
xor
lea
or
jnp
pushf
add
xor
ljmp
loop
pop
xor
call
lods
ljmp
xor
fnstenv
add
add
add
xor
pop
xor
sbb
mov
bound
adc
std
pushl
outsb
cmp
dec
cwtl
cs
inc
push
fidivrs
mov
aaa
cli
inc
jnp
clc
inc
cmp
aaa
or
cmp
addl
adc
mov
insl
push
xor
insl
pop
xor
xor
aaa
insl
in
xor
dec
xorl
add
add
add
add
adc
xor
das
dec
xor
das
sbb
xor
imul
sub
push
es
xor
jmp
sbb
ss
sbb
pop
sbb
aaa
inc
sbb
cmp
cmpb
pop
mov
cmp
pop
in
pop
and
cmp
add
add
mov
repz
mov
shl
jo
fdivp
incl
adc
or
sub
or
mov
in
andl
xor
sub
xor
daa
pusha
xor
daa
push
xor
pop
imul
jae
sbb
push
xlat
sbb
scas
sbb
dec
lcall
dec
iret
sbb
add
add
add
xchg
sbb
aaa
or
outsl
daa
cmp
adc
xchg
cmpsl
adc
xchg
adc
xchg
adc
ja
adc
inc
fs
adc
clc
push
sub
or
inc
mov
pop
push
cmp
jae
enter
iret
push
shll
and
fwait
outsb
and
adc
and
add
and
jmp
add
pop
adc
adc
add
sti
add
push
lds
mov
in
add
push
aam
mov
jmp
fcomps
push
or
je
push
sbb
sbb
sbb
stc
or
clc
clc
lds
loope
cld
and
sub
pop
adc
xchg
pop
adc
pop
adc
adc
adc
add
adc
add
add
sbb
mov
sbb
add
insb
stos
xor
mov
xor
dec
inc
xor
mov
xchg
push
cmp
jmp
jno
sub
push
subl
push
cwtl
jle,pn
pop
das
fldl
cs
ja
das
stos
jbe
das
pusha
and
or
push
push
cmp
push
xor
dec
inc
sub
cmp
add
cmp
je
cmp
imul
ss
aas
sbb
test
ja
add
adc
add
xorl
pop
jge
pop
xor
pop
xor
and
xor
sbb
jns
scas
xor
sbb
xor
sbb
xor
add
and
cmp
add
add
add
daa
xor
or
pop
mov
and
imul
adc
pop
and
aaa
mulb
jo
add
aaa
pop
mov
gs
xchg
es
shlb
or
xchg
inc
sbb
xchg
dec
adc
xchg
adc
xchg
adc
movsl
sbb
gs
add
jo
add
in
add
add
push
daa
pop
push
dec
dec
adc
inc
cmp
xor
pop
adc
lcall
or
mov
or
mov
jl
mov
or
push
insb
adc
cmp
pop
add
or
push
adc
adc
pop
add
push
pop
add
push
in
pop
push
mov
imul
cli
adc
sub
lcall
cmpsl
clc
imul
clc
cmpsl
sbb
mull
lret
testl
sbb
divb
and
mov
pop
adc
arpl
test
adc
mov
adc
lcall
pop
push
add
xor
push
add
push
enter
jmp
add
adc
add
test
das
outsb
jae
das
sbb
add
cmp
push
icebp
aaa
iret
push
ljmp
inc
mov
es
cmp
je
cmp
gs
inc
push
cmpsl
cmp
stos
cmp
xchg
cmp
je
cmp
je
cmp
pushf
cmp
mov
cmp
dec
xor
inc
xor
jns
xor
jno
xor
and
xor
add
add
add
xor
pop
dec
in
xor
lods
sbb
sub
sbb
aas
ret
aas
xchg
add
scas
or
lods
xor
push
xor
jmp
xor
and
xor
lds
movsl
frstor
shll
and
cmp
push
xor
cmp
sbb
cmp
add
add
in
and
cmp
sbb
lcall
aas
add
add
xchg
adc
add
and
xor
or
outsb
pop
or
outsl
cmc
or
dec
sub
push
mov
mov
adc
sub
adc
es
sbb
xchg
notb
xchg
popa
adc
or
repnz
fwait
jne
push
out
jne
cvttps2pi
add
add
push
pop
stos
bound
sbb
push
sbb
pop
mov
add
adc
cs
cs
adc
adc
pop
mov
push
mov
call
incb
adc
mov
adc
mov
fdivr
push
adc
std
inc
adc
std
sub
jbe
push
adc
fistl
dec
mov
add
cmp
mov
adc
call
adc
outsb
adc
xchg
adc
inc
adc
sbb
cli
mov
ja
add
push
clc
pop
sbb
stc
cmp
xchg
or
sbb
cli
dec
sbb
mov
js
sar
jbe
sbb
xchg
xor
push
sub
dec
shlb
outsl
xor
cwtl
add
add
add
ss
inc
fsubl
ss
data16
in
into
ss
mov
ss
je
xor
aaa
emms
and
repnz
jmp
pop
adc
in
dec
add
xor
dec
shrb
push
jb
xor
insl
adc
icebp
insb
divb
pop
insl
lds
cmovge
jg
sahf
xor
jnp
add
and
xor
add
add
jmp
and
xor
sbb
popw
sub
jle
dec
xor
sbb
lahf
sbb
aam
jp
pop
sbb
xor
sbb
jmp
push
xor
sbb
xor
push
out
mov
add
xor
out
and
ss
add
aaa
arpl
aaa
jb
je
test
pushf
aaa
iret
add
cmp
adc
add
add
push
jae
dec
push
jp
jae
popf
cmp
pop
iret
cmp
sbb
or
sbb
test
sbb
jne
sbb
push
sbb
dec
sbb
lret
push
popa
or
loop
in
push
cmp
push
xor
add
adc
pop
loop
lcall
adc
xchg
adc
add
add
ja
fldcw
adc
outsl
xor
or
dec
loop
test
dec
sahf
adc
dec
xor
push
sub
pushl
adc
std
jno
mov
jl
jnp
dec
adc
cld
pop
push
xchg
clc
adc
sbb
clc
mov
xor
push
sbb
notl
pop
push
notl
cs
test
add
add
add
fistpl
push
idivb
adc
sbb
push
adc
sub
push
adc
cmp
mov
push
sub
into
push
adc
mov
ret
pop
adc
or
dec
sbb
inc
repnz
ja
xor
jbe
xor
jae
ss
pop
adc
xchg
add
add
add
xor
dec
dec
xor
insl
inc
xor
insl
pop
xor
insl
push
xor
insl
das
xor
daa
xor
dec
aas
xor
dec
aaa
xor
dec
rdmsr
out
pop
xor
outsl
pop
xor
outsl
pop
xor
outsl
out
xor
dec
out
pop
dec
pushl
pop
dec
divl
pop
dec
iret
xor
insb
xor
dec
pop
push
xor
pop
xor
bound
mov
pop
jb
add
add
add
jp
dec
pop
xorb
and
xor
and
xor
and
xor
pop
mov
xor
lret
and
xor
mov
add
out
fwait
add
xor
add
add
mov
or
cmp
jns
mov
fidivrl
or
cmp
add
cmp
add
add
add
add
adc
pop
and
imul
test
adc
popf
adc
xor
adc
sub
inc
and
adc
cwtl
pop
adc
or
xchg
mov
adc
addl
cld
lcall
adc
outsb
jnp
push
dec
push
adc
dec
adc
das
pop
or
das
stos
or
das
ret
das
int
leave
add
add
add
cmp
mov
cmp
push
insl
adc
push
in
sbb
in
sbb
push
sbb
out
sbb
aaa
sbb
out
sbb
out
sbb
out
or
imul
pushf
call
or
ljmp
ret
jmp
dec
or
add
add
mov
movsl
or
loopne
jle
xchg
ljmp
xchg
in
icebp
adc
lock
shr
jns
dec
out
call
add
add
dec
hlt
xor
add
test
xor
in
xor
scas
xor
pop
xor
push
pushf
sub
cmp
inc
push
das
shll
aaa
int3
arpl
add
add
cmp
push
fidivrs
adc
mov
repz
xor
pop
leave
xor
push
ja
xchg
outsb
sub
popa
add
mov
int
mov
xor
jg
bound
pop
dec
insb
ss
insb
pop
or
add
sti
cmp
or
sbb
or
lret
aas
mov
xchg
add
out
adc
add
add
mov
add
add
xchg
mov
cld
add
xor
add
xor
add
push
xor
movl
xchg
xor
aas
pop
add
mov
or
imul
pop
ss
ss
ss
aaa
cmp
add
pop
inc
or
or
xchg
outsb
xchg
or
add
add
add
add
cmpsb
or
push
cmp
sub
or
into
or
cmp
jge
sub
lock
adc
fwait
adc
mov
mov
push
mov
adc
jns
cmp
pop
pop
add
pop
pop
adc
jecxz
adc
mov
sub
add
add
sub
adc
imul
aaa
sbb
jecxz
sahf
jecxz
adc
sub
mov
mov
or
lods
out
or
out
ficoml
mov
jmp
or
mov
jmp
mov
pop
adc
adc
loope
adc
ficoml
push
adc
scas
adc
add
add
push
fistpll
adc
ficomps
adc
ficoms
jbe
incl
dec
in
xor
dec
cmp
add
sub
imul
sub
jae
test
out
push
sub
and
sub
ja
jno
lret
cmp
pusha
cmp
inc
cmp
add
add
add
xor
imul
xor
pop
mov
clc
push
mov
xor
sti
pop
xor
add
ss
push
imul
jmp
adc
aaa
xor
add
ret
add
out
jb
add
pop
add
xor
stc
xor
adc
or
add
aas
or
xor
or
dec
or
add
xor
and
jnp
filds
xor
sub
mov
cli
add
xor
xchg
add
ss
mov
jns
mov
cmpsl
or
push
stos
or
dec
xchg
or
loopne
fisttpl
xor
or
sub
or
xchg
xchg
or
add
add
add
and
or
jbe
or
lcall
xchg
into
push
inc
add
sbb
inc
mov
push
mov
cmpsl
add
aad
mov
rcrl
jge
rorb
cmp
pop
scas
sti
lcall
or
loopne
leave
outsb
adc
push
xchg
jecxz
push
push
in
push
add
add
add
in
pop
push
fldl
adc
adc
outsb
fisubs
sub
loopne
adc
mov
adc
fistps
adc
loopne
or
mov
int3
jmp
push
inc
in
or
cmp
mov
out
or
out
or
call
pop
or
add
add
xchg
out
or
jmp
std
pop
adc
rorl
das
ret
insl
mov
aad
outsl
xor
icebp
xor
push
xor
push
xor
dec
cmp
cmp
xor
jae
xor
dec
xor
jae
xor
push
mov
xor
pop
hlt
sub
out
sub
push
push
das
mov
outsl
pushl
das
add
add
add
cmp
arpl
cmp
pop
xlat
cmp
push
push
xor
data16
jmp
pop
adc
add
add
xor
add
xor
dec
xor
pop
dec
ss
add
aaa
rolb
test
jmp
in
nop
sbb
cld
adc
cmp
push
fstpt
push
adc
mov
mov
pop
cmp
xchg
push
lea
add
in
cmp
in
mov
aaa
sbb
mov
sbb
add
ret
or
xorl
add
pop
cld
int
into
cld
mov
pop
rorl
in
or
xchg
jb
pop
imul
mov
push
mov
aad
sub
adcl
push
inc
jp
pop
ss
or
aaa
push
add
add
and
add
and
xor
imul
xchg
or
loop
aam
add
push
pop
out
add
or
dec
adc
xchg
dec
add
outsb
dec
sbb
adc
sub
scas
imul
adc
xchg
adc
push
clc
fistpl
push
mov
rorl
sbb
xor
adc
pop
getsec
fdivr
push
add
add
add
fmull
clc
fdivrl
or
jmp
stos
or
ljmp
shl
pop
sbb
mov
in
or
cli
or
mov
mov
arpl
out
in
or
out
or
add
mov
jecxz
add
or
and
xlat
jecxz
push
shl
lea
ret
push
mov
ljmp
add
add
add
aaa
mov
int
add
adc
xor
pop
xor
dec
mov
mov
push
xor
loopne
lods
outsl
xor
popa
add
les
sub
outsb
das
sub
push
outsb
or
sub
arpl
cs
push
out
subb
imul
add
add
das
stos
pop
daa
das
cmp
aaa
pop
push
cmp
into
adc
out
jnp
xchg
cmp
push
test
cmp
sarl
push
adc
cltd
sbb
pop
xchg
cmp
pop
cmp
pop
lcall
or
cmp
movsb
or
add
jnp
add
gs
inc
xor
std
cmpsl
xor
adc
xchg
mov
mov
add
add
jb
and
sbb
ds
add
aaa
incb
add
or
xchg
hlt
std
xor
adc
sub
add
in
addr16
stc
sub
add
xchg
nop
movl
jno
lcall
ret
add
add
pop
cltd
adc
push
fisttpll
aaa
dec
popa
jg
add
add
inc
cmp
stos
cmp
std
in
xor
std
xor
data16
mov
cwtl
sub
add
adc
outsl
stos
adc
insb
insl
adc
imul
cmpsb
push
jae
insb
dec
adc
cld
fcmovnu
jge
kmovb
and
in
cld
mov
jno
sar
and
sti
std
cmp
cmp
add
add
add
fldt
add
fstl
ficomps
add
popl
int3
fisttps
add
loopne
add
fildll
into
loopne
add
fistpll
adc
sub
sub
aas
add
loopne
add
loopne
mov
pop
adc
repz
test
or
das
xor
lods
xor
dec
xor
add
add
jmp
and
out
sub
or
cmp
add
mov
aaa
or
xchg
pop
movsl
popa
cmp
xchg
dec
cmp
test
cmp
jp
cmp
jae
xor
pop
xchg
xor
dec
pop
ds
xchg
pop
mov
jge
jp
inc
pop
jbe
add
add
add
adcb
aas
sub
in
aas
pop
arpl
add
and
das
add
adc
or
xor
dec
xor
es
jno
or
lods
sbb
aaa
cmc
sbb
cmp
sbb
sbb
dec
pop
mov
adc
cmp
or
mov
enter
add
xchg
add
and
xor
daa
inc
xor
add
add
add
daa
imul
sbb
ss
sbb
sahf
imul
add
pop
sub
add
in
mov
movsl
sub
stc
inc
sub
clc
mov
je
ljmp
arpl
pop
dec
add
pop
and
clc
cmp
jb
add
push
sub
add
add
add
add
pop
mov
icebp
dec
div
js
jmp
inc
ss
cli
insl
xor
add
pop
sub
pop
jl
add
repz
loopne
hlt
mov
aam
imul
movsb
hlt
cltd
loopne
hlt
test
loopne
hlt
test
loopne
repz
push
repz
fs
fs
add
add
jmp
loopne
repz
jecxz
sti
into
fnstcw
push
pop
adc
idiv
loop
cli
add
loopne
daa
add
fisubrl
outsl
fcomi
push
fcompl
out
adc
aaa
jmp
pop
adc
mov
outsl
xor
xor
cvtpi2ps
xor
or
add
add
ss
add
ss
clc
push
aaa
jmp
bound
add
mov
xor
int
cs
cli
sub
les
out
xor
pop
xlat
xor
pop
mov
or
pop
jno
cmp
pop
inc
xor
clc
jae
add
xor
ds
sbb
mov
add
add
add
sbb
ds
and
negb
cmp
cmpsb
sbb
incl
pmuludq
iret
push
add
or
dec
xor
or
movsb
and
mull
into
aaa
sbb
adc
pop
pop
xor
xor
sbb
ds
sbb
aas
js
idiv
mov
repz
add
push
pop
mov
mulb
fbstp
sbb
xor
and
add
shll
pop
push
in
push
xor
pop
sub
in
jno
push
in
jg
stos
in
test
int
movsb
jo
in
shrl
les
in
fildll
in
clc
push
sbb
sti
dec
xor
or
dec
mov
cli
xor
ret
cli
jnp
movsb
stc
xchg
daa
mov
clc
mov
push
stc
roll
stc
repz
add
add
add
clc
adc
clc
and
clc
xor
clc
inc
inc
clc
clc
push
inc
adc
clc
std
aad
clc
in
aad
clc
fst
js
int
mov
std
fdivrl
or
fstpl
clc
inc
sbb
shll
adc
repz
loope
repz
in
lock
in
testl
add
add
imul
insb
imul
in
imul
in
imul
in
idiv
in
testl
in
imul
in
negl
in
imull
cmp
test
and
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
xchg
add
xchg
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
add
add
add
add
inc
adc
add
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
sub
add
add
add
add
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
add
add
add
add
pop
sub
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
sldt
mov
add
mov
add
sldt
sldt
mov
add
mov
add
xchg
add
xchg
add
ja
add
ja
add
xchg
add
add
add
add
sldt
ja
add
inc
sldt
inc
sldt
aaa
sldt
aaa
sldt
inc
sldt
inc
sldt
aaa
sldt
aaa
sldt
pop
sldt
pop
sldt
testl
add
pop
sldt
pop
sldt
testl
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
add
add
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
sub
add
add
pop
adc
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
pop
adc
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
notl
add
notl
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
add
add
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
adc
add
jmp
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
add
add
pop
adc
jmp
pop
adc
jmp
aaa
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
testl
add
pop
adc
add
sldt
testl
add
sldt
mov
add
mov
add
sldt
sldt
mov
add
add
add
add
sldt
xchg
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
sldt
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
add
add
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
add
add
xchg
add
adc
add
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
add
add
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
adc
add
add
add
xchg
add
xchg
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
testl
add
pop
adc
add
sldt
testl
add
add
add
add
sldt
mov
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
add
add
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
add
ja
add
xchg
add
adc
add
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
ljmp
add
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
call
add
pop
call
add
pop
call
add
add
add
add
add
pop
call
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
mov
add
mov
add
adc
add
adc
add
adc
add
adc
add
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
pop
ljmp
pop
ljmp
pop
ljmp
add
add
add
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
call
add
pop
call
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
pop
adc
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
add
inc
adc
add
aaa
adc
add
inc
adc
add
aaa
adc
add
pop
adc
add
notl
add
adc
add
notl
add
add
add
notl
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
ja
add
xchg
add
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
add
add
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
adc
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
add
add
add
add
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
add
add
pop
adc
add
or
add
or
add
mov
add
xchg
add
ja
add
ja
add
xchg
add
ja
add
ja
add
inc
adc
add
aaa
adc
add
inc
adc
add
aaa
adc
add
pop
adc
add
add
adc
add
notl
add
adc
add
notl
add
adc
add
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
add
add
add
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
pop
adc
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
notl
add
pop
adc
add
add
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
add
add
aaa
adc
add
adc
add
adc
add
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
cli
add
pop
xorl
in
mov
mov
inc
sbb
inc
jo
fstl
pop
out
mov
iret
fucomip
repz
adc
iret
jae
pop
adc
add
add
add
lea
xor
sub
jb
push
jns
sub
in
in
inc
jo
sbb
xchg
inc
xchg
nop
xor
mov
pop
fisubrs
aaa
shrl
ds
sbb
xor
push
cmp
or
enter
into
inc
adc
fsubrs
mov
sarb
add
xor
cmc
sub
mov
add
add
add
out
add
les
es
int
orb
cmp
jnp
hlt
pop
sarl
push
or
jecxz
nop
and
int3
movsb
dec
add
call
xchg
sbb
fstl
dec
dec
shlb
jo
xor
add
ja
adc
cmp
jge
stos
in
add
add
add
dec
insl
outsw
push
xchg
nop
dec
cmc
fildll
imul
or
lret
and
test
mov
add
inc
add
sbb
dec
iretw
fcoml
xor
mov
outsb
push
mov
fldl
ret
movsb
push
test
adc
mov
mov
push
sub
add
cmp
mov
lahf
cli
clc
push
sbb
or
push
fwait
jp
pop
lahf
fldcw
sbb
ds
mov
jne
mov
and
jo
popa
fildll
xacquire
test
idivl
jg
push
xchg
test
push
mov
fisttps
imul
xchg
pop
cmp
add
mov
jo
pop
push
sbb
jge
sbb
rorb
sti
out
test
inc
push
mov
sahf
mov
cmpsl
insb
push
push
add
scas
inc
xor
xlat
jle
jnp
mov
cmp
aad
int3
sub
mov
inc
call
out
push
ret
or
leave
cli
fwait
jo
aad
add
or
add
add
cmp
in
and
ljmp
jmp
dec
push
mov
ret
int3
stos
pushf
jecxz
dec
sub
cmp
aad
loopne
mov
add
lcall
xchg
imul
clc
in
clc
mov
cmp
aad
clc
mov
xor
push
lcallw
clc
mov
add
inc
cld
add
add
add
adc
jmp
pushf
dec
hlt
fst
add
xchg
sbb
pushf
dec
lock
add
lcall
pop
push
add
scas
adc
add
int
test
pop
sbb
ss
scas
or
cwtl
inc
in
in
in
fwait
in
add
adc
dec
out
xchg
rolb
lock
add
add
ret
mov
inc
ret
int3
stos
aad
int3
mov
aad
int3
sub
call
mov
stc
mov
inc
call
sbbl
add
adc
in
call
nop
and
mov
push
jnp
push
dec
cld
xchg
inc
into
cmp
pop
adc
add
add
add
and
hlt
adcl
cmp
aad
jge
pop
push
add
cmp
push
jmp
adc
mov
cmpb
mov
mov
and
ret
int3
stos
aam
int3
mov
aam
int3
or
cmp
push
lcall
xlat
pop
or
aam
int3
mov
aam
int3
or
add
add
sbb
jae
popl
ret
int3
sub
ret
int3
and
ret
int3
sbb
ret
int3
mov
push
test
push
ljmp
popl
cmp
xchg
add
cwtl
cmp
mov
mov
les
cmp
aad
adc
ds
in
or
ds
mov
inc
ret
int3
or
hlt
add
add
add
pop
adc
jmp
cwtl
cmp
fst
add
jb
inc
adc
add
cld
imul
scas
adc
adc
add
sti
ljmp
ret
int3
sub
ret
int3
and
ret
int3
sbb
ret
int3
stos
cwtl
jecxz
push
adc
add
or
pop
inc
ret
int3
stos
aam
int3
mov
add
add
lcall
or
mov
nop
ja
pop
adc
mov
add
pop
nop
jmp
push
mov
pop
mov
loope
inc
push
add
pop
clc
or
pop
cwtl
inc
cld
aad
hlt
cmp
dec
hlt
mov
push
sar
mov
add
xchg
inc
lock
lcall
add
out
testb
adc
or
push
add
push
xchg
dec
clc
in
adc
sbb
mov
xchg
dec
or
add
or
mov
cmp
pop
dec
cld
mov
sbb
imul
ret
int3
sub
mov
cwtl
cmp
aad
fmull
lcall
mov
nop
lcall
inc
lock
add
add
arpl
add
cli
add
mov
push
dec
lock
loopne
fwait
icebp
cmpb
pop
test
adc
add
loopne
xchg
sbb
push
push
aas
notl
out
hlt
mov
icebp
cmpb
pop
sbb
pushw
adc
mov
pop
adc
aad
loopne
sbb
add
cwtl
cmp
add
add
add
push
loopne
adc
add
xlat
cmp
mov
adc
adc
pop
mov
gs
mov
adc
add
lea
cmp
gs
mov
mov
inc
loopne
jmp
mov
inc
call
andl
adc
in
or
add
or
push
aad
hlt
push
xchg
mov
mov
in
mov
mov
mov
in
shlb
hlt
aad
in
pop
adc
mov
push
dec
loopne
maskmovq
xor
int3
mov
lock
push
add
jae
popl
cmp
xchg
add
mov
mov
xor
add
loope
add
mov
in
adc
inc
add
aad
or
inc
hlt
mov
int3
ret
int3
or
add
icebp
popl
dec
add
ret
int3
lcall
orl
fsubr
push
add
aad
xor
in
add
or
inc
hlt
aad
in
mov
add
add
cmpsb
or
dec
clc
xlat
inc
hlt
mov
jecxz
imul
add
xor
cmc
sbb
push
sbb
mov
aad
add
es
mov
mov
xlat
push
sbb
test
mov
mov
mov
cld
repz
rolb
mov
add
ret
int3
sub
ret
int3
add
add
add
int
int3
sbb
ret
int3
stos
mov
mov
decl
xor
cmp
int3
and
ret
int3
sbb
ret
int3
stos
mov
orl
mov
add
mov
xlat
push
fmuls
data16
xlat
inc
loopne
sbb
push
mov
add
cmp
inc
mov
ss
add
out
push
add
add
add
jbe
hlt
incl
push
lock
imul
add
fmull
push
fmull
stos
inc
mov
inc
mov
inc
call
sbbl
mov
add
or
pop
mov
in
loopne
test
in
pop
aad
call
je
mov
pop
adc
add
add
add
mov
mov
in
loopne
nopl
dec
jle
shl
nopl
inc
inc
inc
mov
mov
dec
or
aad
call
inc
push
call
andl
mov
nop
shrb
dec
call
in
jmp
add
imul
out
push
add
inc
sti
incl
add
add
stc
mov
subl
popl
insl
or
or
push
pushl
mov
cmp
pop
data16
push
imul
push
mov
xchg
das
fmull
mov
inc
pop
call
add
pop
adc
add
lock
fstpl
nop
mov
addr16
push
add
add
add
push
hlt
push
mov
notl
scas
fwait
nop
mov
mov
inc
fmuls
cmp
loopne
popl
mov
mov
inc
pop
inc
call
sbbl
mov
add
sbb
fcomps
lahf
add
mov
xchg
mov
inc
pop
es
xor
rorl
add
add
into
push
add
add
mov
idiv
fst
add
add
sub
pop
mov
out
push
add
mov
add
or
nop
mov
popf
popl
call
andl
add
adc
pushl
jo
and
add
add
pop
push
add
pop
inc
call
sbbl
or
into
push
add
push
loopne
push
mov
inc
pop
adc
sub
dec
add
in
repz
cmp
popl
push
mov
mov
lea
imul
imul
inc
pop
inc
notl
ljmp
pop
adc
mov
add
add
ret
ss
lcall
mov
or
int3
lcall
push
xor
cmp
aad
mov
sbb
mov
adc
pop
pop
popf
or
aas
pop
mov
nop
mov
pop
mov
inc
push
aad
fistl
add
add
add
aam
int3
stos
mov
orl
mov
add
cmp
adc
add
adc
and
lcall
mov
add
inc
or
add
call
mov
inc
fdiv
add
add
arpl
popl
add
pop
in
or
pop
int
inc
pop
adc
add
xor
add
add
add
dec
add
lret
or
add
add
fstl
nop
lcall
ljmp
popl
mov
lcall
add
inc
call
inc
pop
mov
pop
push
xor
sbb
mov
mov
out
dec
add
or
nop
and
mov
arpl
cld
aas
pop
imul
add
adc
add
cmp
push
mov
nop
mov
cmpl
inc
pop
mov
nop
mov
idiv
sti
mov
inc
call
andl
mov
mov
mov
nop
mov
fdecstp
add
mov
cmp
jae
add
add
adc
cmp
push
mov
jmp
add
mov
nop
sbb
mov
sub
xlat
nop
and
add
inc
mov
pop
inc
hlt
push
inc
jge
call
mov
add
mov
dec
hlt
add
mov
push
les
call
lcall
jmp
add
add
add
ds
sbbl
push
out
cmp
xchg
dec
lock
mov
out
dec
add
adc
mov
pop
ds
mov
pop
dec
clc
mov
inc
clc
call
adc
pop
ds
xor
nop
sbb
add
mov
jmp
mov
out
dec
add
pop
and
mov
and
mov
popl
add
add
add
or
scas
jmp
jl
mov
mov
sti
andb
popl
insb
or
lods
popl
cmp
jmp
mov
or
xor
aad
push
ret
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
jns
mov
ljmp
dec
inc
cltd
rorl
mov
push
fnstcw
repnz
mov
sub
insl
pop
adc
xlat
std
mov
test
iret
xor
lock
cld
dec
popf
jecxz
or
mov
adc
xor
out
out
mov
divb
mov
jg
fcoml
push
push
mov
shl
dec
adc
mov
push
cmp
and
je
ffree
mov
cs
inc
xor
cmp
lret
lock
mov
xchg
rep
lahf
adc
es
jbe
cli
sub
daa
push
mov
pop
test
ss
pushf
adc
jge
jbe
popl
jb
jg
ja
aaa
cmp
pop
dec
inc
lret
mov
data16
adc
in
movsb
cmc
sarb
push
fcompl
scas
xchg
add
out
mov
repnz
add
push
jmp
dec
sbb
and
sub
shll
push
stos
pop
add
xor
push
fs
in
sub
add
pop
mov
out
cld
dec
mov
or
mov
cmp
loopne
dec
outsl
xor
xor
mov
nop
js
repnz
xlat
aaa
mov
and
sbb
pop
out
mov
notb
popf
mov
icebp
stos
push
dec
mov
lds
adc
mov
scas
cmp
mov
repnz
dec
test
xchg
add
xchg
and
xchg
cs
and
jnp
loope
imul
aam
lcall
ljmp
ficoml
jnp
mov
mov
cwtl
gs
outsl
xchg
sbb
mov
lods
jl
imul
test
sbb
mov
add
add
add
inc
push
push
inc
push
inc
pop
inc
insb
popa
jae
gs
dec
outsb
je
jb
popa
arpl
jnp
xor
xor
xor
popa
sub
sub
sub
sub
xor
xor
xor
xor
jge
push
jb
js
push
je
bound
jae
xor
add
jp
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
adc
add
add
add
add
add
or
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
syscall
add
syscall
add
syscall
add
syscall
add
syscall
add
adc
add
adc
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
sbb
add
add
push
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
syscall
add
syscall
add
syscall
add
syscall
add
syscall
add
adc
add
adc
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
sbb
add
add
push
add
add
add
je
jb
arpl
jae
data16
dec
popa
jae
add
xor
dec
jo
outsb
push
jb
arpl
jae
sbb
dec
jne
je
inc
jns
gs
outsl
push
imul
add
je
push
push
imul
add
gs
imul
outsl
arpl
jae
add
push
jb
outsl
jb
je
inc
insb
popa
jae
add
stos
add
jae
jb
insl
jo
add
roll
push
gs
jbe
outsb
je
add
inc
jb
popa
je
inc
jbe
outsb
je
add
js
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
and
insb
gs
dec
add
gs
imul
testl
jb
arpl
jae
data16
dec
popa
jae
add
icebp
add
fs
imul
add
push
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
dec
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
jne
jb
outsb
je
imul
jns
add
adc
push
outsb
push
gs
js
gs
imul
gs
lods
add
jae
jb
insl
jo
push
add
inc
gs
imul
je
add
jo
imul
inc
gs
jb
arpl
fs
jae
add
lar
je
jne
bound
inc
outsl
jb
popa
je
add
movsb
add
popa
jo
gs
insb
insb
outsl
arpl
mov
insb
jae
jb
outsb
push
add
test
inc
jne
jb
outsb
je
jb
arpl
jae
testb
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
jo
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
js
je
jb
arpl
jae
mov
inc
jb
popa
je
dec
jne
gs
add
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
jb
arpl
jae
fs
outsl
push
gs
imul
ja
push
gs
gs
jae
dec
jne
gs
add
add
je
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
fs
popa
imul
insb
gs
bound
arpl
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
je
push
jb
arpl
jae
add
lods
add
je
jne
jb
outsb
je
push
dec
add
dec
add
jb
popa
je
gs
popa
addr16
add
cmpsl
add
jae
jb
popa
je
add
jbe
inc
gs
gs
imul
ljmp
arpl
gs
outsb
outsw
push
add
stc
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
popa
insb
inc
jb
add
jo
jb
add
popf
add
popa
jo
insb
insb
outsl
arpl
and
inc
gs
jb
arpl
jae
gs
jo
add
popa
je
push
push
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
jb
jo
outsb
push
add
jb
jo
push
add
out
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
fs
imul
add
mov
gs
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
jne
inc
gs
gs
imul
lret
add
inc
popa
fs
jb
je
push
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
jne
jb
outsb
je
push
add
ds
outsb
push
gs
js
gs
imul
gs
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
inc
jb
popa
je
inc
imul
jb
je
inc
imul
je
imul
mov
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
dec
jne
jo
je
bound
push
je
imul
add
gs
je
dec
outsl
bound
push
arpl
add
push
popa
imul
insb
gs
bound
arpl
add
add
je
jb
jbe
je
push
jb
imul
push
add
inc
gs
jns
je
insl
inc
imul
jns
add
inc
jae
imul
gs
push
outsl
dec
outsl
bound
push
arpl
lea
push
gs
insl
gs
push
add
cs
gs
imul
jb
popa
add
push
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
test
inc
jb
popa
je
dec
outsl
inc
outsl
insl
jo
gs
outsl
outsb
push
outsl
jb
add
ljmp
outsw
jb
popa
je
outsl
outsb
dec
outsl
bound
push
arpl
add
je
push
dec
outsb
outsw
add
imul
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
sbb
inc
gs
gs
je
jo
imul
pop
add
jae
dec
gs
popa
addr16
add
xlat
add
fs
arpl
push
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
insb
insb
push
imul
push
gs
imul
add
insb
gs
jae
inc
inc
add
add
je
inc
add
inc
insb
imul
je
arpl
push
outsb
fs
gs
popa
addr16
add
roll
inc
outsb
popa
bound
imul
push
add
addr16
popa
imul
je
jo
gs
bound
arpl
sbb
push
gs
jae
addr16
add
aad
push
jb
outsb
jae
popa
je
dec
gs
popa
add
aad
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
jne
jae
jb
test
jo
je
push
popa
addr16
add
roll
dec
outsl
popa
fs
imul
add
je
jns
inc
outsl
insb
outsl
jb
pop
add
je
insb
addr16
je
insl
add
outsl
add
je
jns
je
insl
dec
gs
imul
inc
outsb
fs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
inc
gs
push
imul
cmpsl
add
je
imul
jae
add
add
ja
gs
push
add
inc
gs
popa
jb
outsb
je
in
dec
outsl
popa
fs
je
imul
inc
gs
imul
js
push
add
incl
dec
gs
popa
addr16
outsl
js
add
add
imul
jae
js
testl
popa
addr16
gs
mov
inc
gs
imul
arpl
push
inc
push
xor
cs
insb
add
add
push
gs
inc
js
outsb
je
outsl
imul
push
add
gs
je
push
outsl
insb
imul
add
add
gs
je
inc
outsl
outsb
je
outsb
imul
or
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
outsl
jb
add
add
je
gs
dec
jne
push
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
in
inc
gs
bound
arpl
add
add
je
insb
je
add
add
gs
dec
bound
arpl
pop
add
insb
arpl
push
arpl
inc
inc
dec
xor
cs
insb
add
add
jae
insl
jo
add
popa
insb
insb
outsl
arpl
add
add
ja
jb
outsb
je
add
add
js
push
push
js
gs
imul
ja
jae
push
add
jae
outsb
add
insl
add
jne
arpl
insb
add
pop
arpl
js
je
movsb
add
js
je
sbb
pop
pop
arpl
inc
imul
pop
arpl
imul
imul
arpl
insb
outsb
add
data16
add
sbb
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
pop
add
ja
gs
popa
imul
add
add
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
insl
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
aas
add
jo
pop
insw
outsl
fs
push
add
jae
je
popa
jo
pop
je
jo
add
fwait
add
js
gs
pop
push
gs
add
and
insb
insb
outsl
outsb
gs
je
pusha
add
outsb
gs
je
xchg
pop
arpl
je
outsl
insb
data16
add
add
arpl
arpl
add
rolb
jbe
outsb
ja
jb
outsb
je
add
jbe
jb
cs
insb
add
sub
push
gs
insb
outsl
jae
dec
gs
push
push
jne
jb
push
popa
insb
jne
inc
js
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
gs
gs
popa
insb
jne
inc
js
add
xor
push
gs
jb
popa
je
dec
gs
js
add
popa
insb
imul
add
push
jae
push
outsl
imul
jb
jbe
insb
gs
testb
jo
outsb
push
push
push
outsl
imul
icebp
add
outsb
push
jb
arpl
jae
outsl
imul
add
push
gs
jo
outsb
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
xchg
add
imul
jb
jbe
insb
gs
popa
insb
jne
push
add
inc
outsl
jo
push
imul
dec
outsb
addr16
push
imul
je
arpl
imul
imul
outsb
gs
add
push
arpl
imul
imul
outsl
jne
add
faddl
dec
popa
imul
insb
push
gs
popa
je
jbe
push
inc
add
push
add
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
dec
outsb
imul
push
arpl
imul
imul
pop
add
addr16
jo
outsb
dec
gs
add
add
addr16
gs
gs
dec
gs
add
push
gs
gs
gs
push
popa
insb
jne
push
add
gs
outsb
jne
push
popa
insb
jne
push
add
push
gs
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
pop
add
gs
insb
inc
js
arpl
gs
js
add
inc
dec
dec
xor
cs
insb
add
outsb
imul
add
aas
add
dec
outsb
imul
push
arpl
imul
outsl
push
outsb
imul
imul
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
xor
cs
insb
add
push
popa
je
inc
gs
jb
jae
add
lahf
add
je
push
outsb
jno
outsl
je
push
jo
arpl
push
add
xor
push
popa
je
inc
jo
outsb
fs
add
dec
push
inc
push
dec
cs
insb
add
add
arpl
test
add
add
add
add
add
add
addb
add
arpl
test
add
add
add
add
add
add
addb
add
arpl
test
add
add
add
or
add
add
pop
and
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
addb
add
xor
xor
xor
sahf
xor
xor
pushf
xor
xor
xor
movsb
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
mov
cmp
or
sbb
and
inc
ds
jle,pt
test
xchg
ds
ds
sarb
xlat
ds
repnz
aas
mov
add
add
mov
add
pop
xor
and
sub
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
popa
xor
insl
xor
jns
jg
test
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
arpl
imul
jnp
xorl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
sub
xor
inc
xor
push
xor
push
xor
xchg
cwtl
xor
stos
xor
mov
xor
fidivl
in
xor
xor
adc
add
add
loopne
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
.byte
lods
.byte
