push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
pusha
mov
push
push
call
push
call
mov
push
mov
push
lea
push
call
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
lea
push
push
push
call
test
je
mov
xor
jmp
lea
push
push
push
call
test
jne
mov
xor
jmp
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
jmp
mov
pop
ret
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
add
mov
add
mov
movl
mov
add
mov
movl
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
sub
movl
push
lea
push
call
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
lea
push
call
lea
push
call
push
push
push
push
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
int
xor
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
je
pop
fsubl
xlat
jb
pop
rolb
cmp
fisubl
sub
jns
xor
add
cmp
fisubl
sub
jns
adc
add
inc
je
not
jne
in
popa
outsb
in
fisubs
or
gs
aad
inc
imul
mov
je
or
je
add
add
add
mov
mov
arpl
jns
or
je
outsb
xlat
jne
insb
sti
popa
outsb
fbld
or
inc
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
je
sbb
arpl
xlat
jb
cli
mov
popa
vpunpckldq
sarb
add
add
add
icebp
add
repnz
outsb
in
fidivs
xor
xlat
insb
insb
or
jbe
mov
fiadds
add
add
movsb
mov
cs
add
insb
shrb
jns
add
push
fdivl
pop
aam
inc
insl
xlat
outsl
arpl
mov
add
fdivl
cmp
insb
inc
sub
mov
add
popa
sbb
imul
add
cli
inc
and
add
fdivl
cld
shrl
fnstenv
mov
popa
jo
insb
outsl
ljmp
outsb
in
xor
test
add
into
iret
je
mov
lds
test
add
or
pop
add
pop
add
or
or
or
or
or
add
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
inc
or
cmc
inc
add
add
add
int3
imul
add
mov
add
mov
add
mov
loop
mov
add
ret
jmp
mov
jmp
ljmp
jmp
add
add
or
add
or
add
cli
mov
jmp
or
sub
cli
mov
jmp
add
add
add
sbb
add
or
add
or
add
or
add
and
add
xor
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
add
jo
add
pusha
mov
add
add
dec
gs
mov
add
add
or
or
ss
add
or
or
or
popa
xchg
cmp
add
push
sub
or
or
add
add
add
or
or
or
or
or
gs
jl
add
pop
adc
or
or
or
or
or
or
add
pop
add
or
or
or
jmp
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
jo
add
jo
add
pusha
scas
add
pusha
scas
add
xor
add
and
add
xor
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
or
or
add
int3
add
fdivrl
add
in
add
cli
add
xchg
add
dec
dec
add
dec
dec
add
pushf
dec
add
mov
or
dec
add
into
dec
add
ljmp
or
mov
or
in
dec
or
lds
mov
dec
or
xlat
dec
add
add
add
or
orl
sub
mov
dec
or
in
or
iret
cmp
mov
cmp
mov
add
mov
inc
or
jno
or
cmp
mov
inc
or
jmp
add
mov
cmp
aam
add
inc
mov
xchg
cmp
add
add
add
add
aaa
mov
sti
das
mov
out
mov
mov
push
mov
or
pop
mov
jecxz
mov
xchg
hlt
mov
jmp
cmc
mov
inc
in
mov
out
in
add
fdivl
movsl
sub
add
sbb
add
sub
add
mov
xor
add
out
mov
shl
add
add
add
add
fnsave
add
mov
add
add
into
lea
add
mov
add
lea
add
lea
add
mov
add
add
jo
add
orb
add
popl
add
addl
or
add
pop
popl
add
mov
add
add
add
jl
add
push
addl
add
add
add
dec
addl
add
add
rorb
add
mov
add
or
das
add
mov
add
xchg
das
add
hlt
das
add
xchg
add
mov
add
or
add
sub
add
mov
sub
or
sub
or
add
mov
sub
or
add
add
add
add
inc
sub
or
or
add
in
sub
or
sub
or
sub
or
add
sbb
add
or
add
add
add
mov
sub
or
fldcw
mov
sub
mov
sub
mov
xor
mov
sub
mov
aaa
or
test
aaa
or
addr16
add
add
add
or
getsec
or
adc
aaa
or
cmp
or
sub
or
jnp
or
xchg
cmp
mov
xor
or
add
divl
add
hlt
mov
sti
fdivl
add
add
add
add
shll
add
mov
pop
xor
add
mov
fldt
mov
jmp
or
add
cld
mov
jmp
or
sub
mov
lock
add
inc
mov
pop
cmp
mov
jmp
and
jg
add
add
adc
add
add
add
add
add
cmp
add
add
add
fdivl
add
jle
add
js
add
add
sahf
jle
add
jle
add
jg
add
jle
add
jle
add
ja
add
add
scas
add
or
add
scas
add
add
add
pop
hlt
add
add
add
add
add
add
add
out
hlt
add
push
testb
or
inc
add
mov
or
inc
add
loopne
add
int3
inc
add
loop
add
lock
add
jle
add
mov
or
add
push
inc
add
jb
add
incb
or
inc
add
fiadds
or
inc
add
aam
add
movb
inc
inc
add
sbb
or
add
add
add
or
inc
add
adc
add
cmpsb
inc
add
cmpsb
inc
add
scas
inc
add
pop
inc
add
push
inc
add
mov
inc
or
sbb
mov
inc
or
daa
inc
or
inc
inc
or
jae
or
inc
inc
or
sub
aas
or
idivl
or
add
add
or
cmpsl
inc
or
pop
inc
or
sti
inc
or
movsl
inc
or
fldl
mov
inc
or
add
dec
mov
stc
inc
mov
or
add
xor
add
mov
push
inc
mov
push
dec
mov
sbb
jecxz
add
add
add
add
repz
pop
repz
imul
mov
dec
xor
add
and
add
xor
add
mov
lock
xchg
lock
das
loopne
add
int3
mov
rol
mov
add
add
add
repz
in
in
add
inc
mov
add
add
jb
add
add
add
add
orb
add
add
les
add
mov
jp
add
jns
add
add
pop
addb
jl
add
and
add
lret
add
jl
add
jl
add
jl
add
jge
add
add
jge
add
jns
add
fdivl
add
mov
add
add
add
add
xorb
or
add
fdivs
add
push
add
lock
or
add
dec
add
or
cmp
or
cmp
or
cmp
or
cmp
or
or
add
cmp
add
dec
add
mov
add
mov
add
inc
add
mov
cmp
or
add
add
add
add
pop
add
mov
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
cmp
mov
add
xor
add
mov
cmp
or
xchg
cmp
or
popa
add
mov
repz
popf
mov
add
add
add
lahf
les
call
mov
ret
sbbl
inc
add
call
xchg
cmp
cltd
lret
jge
cmp
sbb
dec
mov
mov
mov
mov
pop
je
xchg
das
aas
inc
mov
add
xor
mov
aas
inc
mov
cltd
mov
pop
and
mov
and
jp
jns
fwait
sub
adcl
push
pusha
inc
out
das
je
add
lods
sub
xchg
push
xchg
cmp
fistps
lods
sub
pop
push
fistps
arpl
mov
sbb
pop
test
add
add
pop
mov
iret
aas
gs
cmp
stos
pop
cmp
sub
addr16
ror
jae
sbb
push
mov
sub
xchg
test
and
sbb
inc
cmpsl
stos
xlat
shll
lcall
subl
stos
imul
sbb
sarl
cmp
add
out
icebp
sub
add
add
add
ljmp
sbb
mov
and
cmp
jne
int
add
or
icebp
or
and
cmp
pop
add
jne
jg
add
fcmovne
ds
push
int
add
pop
lahf
jp
jbe
lods
int3
sbb
popa
or
lds
mov
mov
or
add
add
add
loop
adc
ret
into
jbe
cs
repnz
inc
dec
or
rcr
loop
rclb
xchg
inc
mov
les
push
or
adc
xchg
inc
push
sbb
dec
test
inc
dec
or
into
inc
or
leave
or
adc
xchg
or
into
or
inc
push
jne
inc
lcall
inc
push
xchg
add
add
add
popl
sbbl
jno
xchg
aas
stos
jno
push
add
pop
stc
dec
aaa
orb
inc
push
sub
stc
inc
push
orb
inc
lea
mov
orb
inc
lea
cwtl
test
stc
test
orb
inc
lea
js
faddl
xor
xor
inc
lea
in
jl
fldl
add
add
add
jno
adc
dec
cmp
lods
jl
aas
fwait
inc
mov
inc
mov
js
mov
jnp
mov
incb
mov
mov
roll
mov
inc
sbb
movl
mov
inc
mov
inc
inc
mov
inc
sbb
sbb
mov
add
add
add
inc
fwait
mov
iret
mov
inc
inc
mov
inc
sbb
jae
rcr
fldt
fldt
inc
xlat
filds
ds
mov
arpl
sbb
js
pop
pop
cmc
lea
or
inc
xlat
es
test
pop
sar
adc
dec
add
pushf
test
add
mov
xlat
add
add
add
es
dec
xor
fsub
inc
jg
test
rol
rcrb
xchg
mov
test
pop
cmpsb
xchg
mov
xchg
xchg
mov
lcall
adc
mov
into
xchg
mov
fwait
rcl
lea
mov
adc
mov
xchg
xchg
cmp
add
add
dec
cmp
mov
cmp
cmp
sahf
inc
lret
adc
inc
ljmp
inc
sub
xor
xchg
cli
cmp
xchg
xchg
repz
lea
js
lea
jl
leave
pop
xchg
xchg
cmp
inc
jle,pt
int
stc
xchg
jg
sahf
les
ja
cmp
jl
add
add
add
add
js
mov
cmp
cmp
or
outsl
pop
or
mov
pop
mov
scas
pop
repz
cmp
cmpl
repz
and
lcall
sbb
cmpsb
lcall
or
xchg
pushf
sbb
mov
shll
mov
mov
scas
push
sub
daa
add
add
add
arpl
mov
ljmp
add
adc
fcompl
jne
call
es
sub
or
scas
xchg
repz
dec
outsl
add
xor
sub
arpl
setb
xchg
jae
scas
cld
adc
pop
stos
int
frstor
daa
adc
aaa
mov
ret
mov
add
add
add
mov
lret
mov
xlat
shll
lods
testb
in
jl
jno
or
add
mov
cwtl
push
xchg
inc
imul
mov
rorb
loop
sbb
cmp
dec
outsb
xor
sbb
popa
mov
jo
aad
xchg
addr16
push
push
push
adc
mov
add
add
imul
xor
in
mov
xchg
pop
scas
pop
dec
push
ss
mov
out
jne
lea
shll
lret
sub
aad
and
jge
ret
xchg
sbb
loop
mov
dec
bound
mov
repnz
daa
cmp
fwait
mov
int
gs
add
add
add
repnz
pop
sbb
sub
jae
add
cltd
scas
movsb
mov
dec
gs
mov
enter
or
mov
pop
adc
lret
xor
jle
jmp
sbb
shrl
lods
jecxz
mov
imul
pop
pop
insb
push
jge
mov
pop
jl
jne
imul
lea
mov
xor
lret
add
add
add
and
push
cmp
sub
mov
sbb
popl
pop
push
ret
imul
clc
xchg
xchg
mov
adc
int3
fimull
inc
filds
iret
dec
adc
and
mov
pushf
lret
aaa
int3
push
jno
shlb
and
nop
fs
insb
or
add
add
xchg
movb
cld
into
mov
mov
adc
sbb
mov
pushf
sub
cmp
jle
out
xor
call
push
ror
and
inc
mov
insl
mov
cmp
clc
inc
mov
popa
dec
dec
mov
mov
je
sub
jmp
in
addr16
stos
pop
push
add
add
add
xor
sbb
and
mov
and
sub
dec
pop
enter
dec
mov
orl
jp
mov
into
lds
pop
jp
push
pop
jg
adc
lahf
test
movsl
es
add
jg
jecxz
pop
push
or
popa
iret
cmc
rclb
push
repnz
push
add
add
add
out
push
xor
es
hlt
out
sbb
test
push
or
add
sbb
adc
inc
dec
jne
mov
push
aam
test
xchg
inc
jmp
lods
mov
in
push
adc
inc
and
dec
dec
ljmp
test
ret
ja
or
inc
mov
mov
add
add
push
movsl
mov
or
aam
and
int3
ret
xchg
push
or
pop
jecxz
jno
daa
sub
mov
inc
enter
dec
dec
inc
mov
sub
data16
or
and
repz
ds
jbe
add
xor
mov
mov
xchg
jl
cwtl
test
loope
add
add
add
aas
test
cmp
leave
xchg
push
leave
in
mov
arpl
pop
cli
rorb
sbb
cmp
jge
jb
lods
pop
sbb
pop
add
xchg
data16
xchg
pop
roll
aam
leave
pop
mov
test
sbb
add
mov
lods
or
add
add
add
dec
and
xor
data16
sbb
jae
int3
notb
ret
push
jge
cmpsl
repnz
jle
lcall
lods
sub
pop
out
daa
sbb
push
xorb
mov
test
insb
dec
roll
fdivrl
shlb
data16
sub
lahf
nop
stos
imul
xor
inc
lret
out
sub
inc
mov
add
add
and
cmp
pop
fidivrs
fstpl
or
or
mov
loopne
lods
adc
mov
sbb
std
or
out
cmpsl
dec
dec
loop
std
add
gs
aaa
pop
in
rol
cmpsl
mov
outsl
pop
cmpsl
lods
out
popa
bound
or
gs
pop
jns
fsubp
push
aaa
xor
push
add
add
xchg
in
inc
dec
pop
shrb
insb
popf
xor
shl
push
inc
ljmp
push
xchg
pop
ret
xor
cmpsb
addr16
or
lret
push
lcall
and
in
xchg
or
clc
and
mov
cmpsl
and
mov
test
in
icebp
mov
pop
aas
out
hlt
out
sarl
add
add
add
push
add
mov
cmp
push
sbb
adc
pop
negl
daa
dec
jns
sar
out
or
in
add
call
addb
and
pop
sar
les
xchg
orb
sarl
mov
mov
xchg
inc
sbb
ret
mov
sbb
xor
jae
mov
add
add
sti
outsl
out
mov
mov
jns
cmpsl
adc
ds
aam
and
push
cmp
outsb
int3
lock
push
out
xchg
mov
jne
jp
mov
mov
subl
roll
mov
dec
lcall
insl
iret
je
mov
bnd
ret
stc
cltd
mov
shrl
adc
inc
mov
fcomp
push
cld
add
add
add
or
sbb
arpl
ja
lods
cld
jp
std
add
imul
outsl
outsl
mov
xchg
xor
repz
add
fisubrl
sub
or
xchg
cmp
xlat
push
jb
stos
cmp
jbe
jne
lret
and
andb
leave
daa
icebp
jl
test
pop
pop
or
inc
add
add
add
adc
lock
push
inc
lods
lods
jns
aam
xor
inc
scas
jbe
es
popf
dec
movsb
insl
mov
outsl
rorb
mov
jecxz
adc
adc
das
hlt
pop
ss
dec
push
aas
ss
div
inc
xchg
aad
pop
xor
out
movsl
lods
sbb
int3
icebp
mov
cmp
gs
lock
add
add
add
cld
and
js
into
cs
and
das
jo
dec
mov
adc
mov
out
add
cmp
add
mov
push
in
into
xor
mov
adc
mov
out
xlat
movsb
push
jnp
outsb
ficomps
pop
out
mov
std
sub
into
mov
sbb
mov
inc
cwtl
push
jns
sub
add
add
add
cmp
enter
pop
dec
jp
mov
scas
stos
adc
cmc
mov
cld
test
mov
mov
mov
insl
pop
cld
mov
cmpb
xchg
mov
jmp
mov
mov
dec
mov
outsb
dec
sbbl
add
roll
add
add
add
out
mov
dec
stos
xlat
out
sti
sub
jno
ss
mov
test
pop
js
fnstenv
mov
push
push
push
movsl
inc
fistpll
out
lahf
or
dec
test
mov
iret
mov
inc
ljmp
xchg
xchg
xlat
popf
popf
mov
add
jle
rclb
lahf
cmp
xchg
add
add
add
cmp
adc
sti
insl
dec
or
ds
std
jo
ljmp
cmp
pop
pop
arpl
stos
mov
inc
inc
dec
sub
push
mov
mov
call
sbb
addr16
dec
dec
push
and
arpl
out
add
mov
loopne
ret
lret
out
sahf
sbb
add
add
add
test
sbb
movsl
inc
add
lea
add
daa
leave
push
mov
enter
orb
and
pop
aad
pop
jecxz
xchg
xchg
lcall
cmp
jnp
xor
in
adc
cmp
cmp
sbb
mov
sub
inc
dec
dec
mov
dec
jmp
push
xor
cmpsl
and
xchg
or
add
add
add
or
adc
shr
or
push
push
pop
leave
sbb
add
subb
xor
loopne
sub
cmp
es
mov
insl
fidivs
mov
jno
out
inc
xchg
sbb
pop
repz
stos
xchg
movsb
jl
mov
inc
cli
cli
sahf
inc
mov
aas
in
inc
add
filds
xor
add
add
pop
mov
aas
orl
mov
lods
fcomps
add
test
lcall
ja
push
int3
sub
pop
call
xchg
cmp
mov
fstp
cmp
xchg
cmp
std
pop
adc
data16
push
mov
nop
subb
stos
add
add
add
push
and
dec
or
mov
clc
fnstsw
push
sbb
push
sti
or
repnz
xchg
sub
add
xchg
sub
in
fwait
fwait
stos
imul
add
xchg
xchg
dec
and
out
hlt
ret
les
scas
dec
dec
out
adc
jmp
out
out
cmp
js
jae
mov
inc
inc
pushf
pushf
add
add
add
loopne
add
xchg
pop
int3
int3
push
sbb
ljmp
mov
aad
bound
mov
jb
lcall
fimuls
stc
pushf
scas
mov
mov
adcl
lods
cli
inc
jmp
rclb
in
xor
mov
pop
mull
add
add
add
aam
lcall
bound
adc
ret
cltd
fwait
pop
out
dec
mov
imul
mov
xlat
sub
aam
cwtl
ss
dec
mov
jl
xchg
and
fisttpll
pop
punpcklwd
sub
fdiv
insl
push
sbb
repz
outsl
xor
lea
xchg
xchg
dec
xchg
jmp
pop
mov
add
add
subb
test
mov
mov
adc
cmp
faddl
and
or
mov
add
mov
mov
rolb
scas
sub
mov
fwait
loop
lods
stos
or
int
cmpsb
sbb
jp
in
mov
dec
call
sar
hlt
mov
add
add
sbb
jl
lret
add
icebp
inc
shlb
sbb
dec
sub
ljmp
lret
jmp
jg
push
sub
xchg
idivl
xchg
or
mov
movsl
mov
inc
aas
and
mov
neg
insb
aaa
push
jge
inc
out
fidivrl
xchg
xlat
pop
fcompl
cmp
hlt
flds
add
add
mov
jmp
out
mov
add
fucomip
inc
stos
data16
pop
or
aaa
roll
outsl
mov
cmpsl
xchg
add
and
aas
or
lea
rolb
push
dec
cld
fmuls
sahf
scas
loope
lret
shrl
inc
dec
and
fsubrl
adc
mov
add
add
add
arpl
leave
sbb
jp
cmpsl
or
cmp
leave
flds
cld
dec
xchg
jecxz
std
dec
inc
jne
and
dec
xor
add
pop
mov
add
outsb
mov
inc
inc
xchg
sub
std
add
popf
mov
arpl
stos
mov
jmp
add
add
add
loopne
divl
push
and
and
adc
and
sub
mov
mov
cmp
adc
adc
lahf
mov
adc
lds
nop
mov
in
xor
and
mov
fucompp
sub
pop
dec
scas
pusha
sbb
shll
xchg
pop
push
std
jle
sbb
jge
add
add
add
xchg
push
cmp
dec
testl
loop
pop
dec
mov
cmc
inc
lcall
pop
mov
shl
jp
loope
mov
xchg
mov
enter
dec
jb
inc
or
adc
mov
jns
das
aad
add
mov
roll
std
mov
xchg
imul
hlt
and
xor
add
add
add
int
sbb
repnz
inc
aas
mov
scas
jge
jbe
mov
dec
sbb
pushf
xchg
inc
out
and
mov
out
test
xchg
movsl
adc
inc
sub
push
inc
loopne
imul
mov
inc
mov
mov
sbb
ror
in
adc
adc
std
xlat
decb
xchg
mov
add
add
add
pop
xchg
int3
rclb
in
sbb
movb
push
xchg
or
aaa
fcmovb
in
inc
arpl
sub
aam
bound
aam
jp
in
and
ret
xor
or
xor
push
dec
sti
out
sub
mov
pop
xor
jo
and
xchg
or
xor
add
add
add
into
out
cs
pop
or
call
stos
test
xchg
jbe
jo
sbb
add
xchg
imul
arpl
sub
pop
dec
xchg
jne
dec
rol
sub
sub
cmp
mov
adc
pushf
in
cmpsl
push
in
iret
fnstcw
insb
pop
inc
enter
add
add
rorb
test
daa
les
push
cmp
mov
repnz
mov
jns
dec
cbtw
js
jae
mov
mov
mov
sbb
mov
negl
cld
std
cmp
ljmp
inc
fsubrl
and
pop
sub
movsl
lods
pop
nop
add
add
add
jp
mov
ja
sbb
jmp
push
shr
add
ja
mov
loopne,pt
sbb
jnp
sbb
jns
int3
ja
xor
cmp
and
cmp
addr16
dec
fisubrs
fistl
cmpsl
pop
jge
js
sbb
into
inc
and
mov
add
inc
mov
add
add
add
sbb
gs
xorb
or
fcomps
aad
lret
sub
mov
in
xor
pop
popf
aaa
jp
or
outsb
mull
jne
fistl
out
inc
out
ficoms
js
fstl
add
sahf
popa
sbb
jg
out
out
loopne
mov
add
sti
mov
stos
inc
cli
xchg
xchg
push
add
add
add
add
and
mov
jg
test
lods
jmp
cmp
aas
or
pop
mov
cmpsl
mov
dec
pusha
mov
mov
xor
pop
les
cwtl
xor
jb
cltd
lods
add
cmp
cltd
movsb
stos
mov
adc
pop
daa
cmp
pop
dec
sub
shll
add
add
dec
sub
sahf
mov
mov
div
sahf
out
or
adc
in
adc
xchg
fcmovnb
mov
iret
pop
cmp
xchg
cmp
add
shll
repnz
mov
jmp
sbb
sub
iret
inc
shll
mov
xchg
in
mov
mov
hlt
dec
testb
add
jl
jmp
pop
jnp
add
sub
ret
movsb
testb
stos
aas
xchg
pop
push
outsb
nop
add
inc
fisubl
mov
jl
push
xchg
leave
and
mov
inc
jmp
push
mov
das
dec
lods
hlt
mov
aam
ret
call
adc
add
add
add
dec
cli
int3
out
sbb
hlt
mov
fwait
inc
jp
pop
cs
inc
jmp
divl
arpl
xor
and
loope
and
sbbl
mov
add
inc
fldenv
ja
pop
push
add
aas
add
scas
adc
adc
pop
push
sbbb
jns
add
add
add
mov
daa
jmp
aam
repnz
andl
cmpsl
sar
and
loope
jae
and
bound
cwtl
mov
nop
sbb
stos
inc
and
les
std
int3
adc
mov
xchg
push
pop
or
mov
loopne
rcr
imul
sarl
mov
add
add
add
fwait
andl
mov
mov
mov
mov
repz
jmp
mov
ljmp
mov
sub
fldenv
ss
lds
xor
insl
or
int3
int
sub
loopne
or
jg
dec
mov
daa
imul
add
dec
push
xchg
sti
rcl
push
out
cmpl
adc
inc
cmp
sub
loop
sti
xchg
test
xor
lret
scas
cmpsb
pop
jecxz
rcll
cmp
xchg
rcrl
fisubrs
mov
faddl
pop
inc
ficompl
scas
nop
xchg
mov
les
repz
pusha
imul
push
ret
cs
add
add
add
mov
cltd
jp
cmpsb
xchg
jmp
push
inc
aas
mov
stos
lock
stc
lds
call
lret
in
xor
pop
or
scas
ss
cmp
mov
mov
pop
arpl
jae
sbb
frstor
mov
or
jp
xchg
lock
add
mov
cli
adc
and
fwait
mov
into
dec
out
cmp
mov
hlt
data16
imul
pop
leave
jbe
jecxz
sub
mov
sahf
fstpl
pop
insl
stos
jbe
loop
jno
ret
fnstenv
push
fisttps
cmpsl
adcb
fcmovnbe
aad
pop
hlt
mov
add
add
add
adc
lock
or
xor
stc
xor
lock
sbb
movsl
push
movl
movsb
aas
repnz
cltd
das
sbb
imul
adc
or
scas
push
push
std
cmp
imul
sub
iret
cld
pop
xor
adc
pop
xchg
add
add
add
sti
dec
xchg
mov
negl
xor
clc
sub
testl
mov
sub
add
inc
iret
repz
outsb
popl
jnp
mov
lods
hlt
sti
lret
jns
shr
mov
mov
inc
insb
loop
adc
or
outsb
add
in
fdivs
sub
add
add
add
aad
push
sub
push
sbb
js
out
fbld
ds
dec
lock
movsl
or
gs
sub
arpl
sub
rorl
mov
faddl
sti
sbb
push
cs
push
xchg
mov
arpl
xor
repnz
mov
cli
xchg
mov
and
loopne
add
add
add
lret
pop
in
mov
or
mov
les
dec
cmc
adc
add
dec
xor
ja
popf
mov
dec
aaa
imul
mov
sbb
das
mov
xor
out
test
cwtl
nop
ds
stc
stos
and
gs
sub
or
sbb
add
add
test
ja
jno
jmp
jge
push
push
lds
jecxz
jae
xchg
nop
xor
add
xchg
es
and
les
ret
sbb
xor
fmul
sti
xor
outsb
push
jne
mov
rclb
mov
xor
test
in
xor
xor
movsb
adc
loop
or
xchg
aam
bound
add
add
add
xchg
lahf
ret
dec
call
imul
shlw
nop
cmp
jl
cmp
test
mov
sub
stc
and
outsb
mov
dec
jnp
pop
in
or
addr16
dec
sub
test
xor
pop
dec
out
rorl
out
and
into
mov
or
leave
xchg
xchg
mov
add
add
add
sbb
and
out
xchg
xor
js
aaa
fdivl
cmpsb
inc
daa
shlb
and
lahf
stc
dec
push
ja
imulb
out
lea
lea
add
add
mov
mov
in
int3
mov
or
push
jno
pop
push
cmpsb
xchg
push
ljmp
jl
lcall
sbb
add
add
add
pop
xor
push
cmp
int3
inc
cli
xchg
int3
popa
lea
or
mov
adc
leave
push
scas
sub
leave
cld
push
in
in
mov
xchg
rcr
inc
daa
mov
jecxz
into
adc
lods
int
inc
mov
ror
imulb
and
fisttpl
jb
les
inc
fbstp
sbb
mov
adc
popf
cmpsb
in
scas
add
add
add
add
shrl
pop
or
js
push
inc
pop
enter
test
and
dec
xchg
push
aad
sbb
dec
xchg
stos
push
notb
out
out
pusha
xor
jae
pop
adc
jp
stos
mov
jecxz
cld
ss
pop
mov
mov
outsl
and
leave
and
push
jns
add
add
add
push
mov
cwtl
pop
xchg
nop
pushf
add
or
or
add
jmp
shlb
lea
mov
in
into
pop
xor
icebp
and
ret
jp
mov
inc
cmpl
adc
mov
adc
cmc
mov
xchg
xor
jl
mov
adc
jp
lods
iret
insl
shrb
add
add
add
out
dec
imul
leave
jae
xor
xchg
ja
out
scas
cmc
mov
stos
sub
test
dec
push
fbld
fisubrs
jnp
adc
roll
dec
add
push
pop
stos
das
test
sub
adc
call
daa
xchg
mov
push
push
push
cmpb
add
add
xor
repnz
jno
loop
aad
hlt
std
test
mov
sub
movsl
and
xchg
repz
xchg
mov
loope
xchg
imul
imul
pusha
out
or
push
jno
cmp
stc
mov
and
jbe
ds
ds
pop
xchg
push
test
xor
int3
je
push
cmp
scas
or
add
add
add
and
inc
dec
lds
fstps
test
mov
inc
sub
out
int3
arpl
das
inc
push
stos
test
or
add
mov
jg
inc
cmc
sub
pop
pop
sbb
push
xchg
and
in
lods
pop
mov
sub
mov
std
pop
fadd
sbb
push
cmp
int
incl
xchg
out
xchg
mov
sbb
add
add
add
and
or
and
test
mov
ja
jae
add
cmp
inc
or
cmp
mov
jp
push
and
sub
mov
aam
daa
jns
cmp
imull
xchg
outsb
mov
mov
jl
inc
xchg
aam
loop
sub
notb
lcall
jle
std
add
add
add
push
pop
std
clc
clc
adc
push
xor
mov
pop
sti
ret
addr16
jl
push
jmp
loop
movsl
pop
fisubl
mov
and
lcall
push
dec
cmp
pop
dec
add
mov
push
aad
cmp
adc
push
add
pusha
cmp
add
sahf
jl
and
sti
inc
mov
insb
push
imul
int
or
popl
sub
rcl
repz
mov
mov
arpl
lahf
sbb
sub
gs
sbb
out
ljmp
dec
sub
add
aaa
dec
mov
loop
mov
xlat
lahf
or
push
add
add
add
pop
mov
push
mov
mov
push
mov
lods
xchg
stos
stos
clc
bound
dec
xchg
push
push
push
inc
mov
and
xchg
je
shll
test
xorl
xchg
ror
pop
inc
in
pop
or
pop
cli
sbbb
outsl
push
ja
jge
jnp
jecxz
pop
dec
push
adc
ror
jns
mov
inc
or
add
push
cmp
sub
sbb
outsl
mov
test
in
cmp
or
stos
jb
stc
xor
jmp
sbb
mov
or
pusha
xchg
mov
cmp
test
stos
add
mov
ja
cld
jbe
dec
cmp
inc
xchg
daa
leave
inc
leave
jecxz
jbe
cmpsb
push
add
lods
or
out
mov
add
add
add
out
popa
mov
xchg
mov
lods
vpshufd
icebp
testb
popl
rol
imul
pop
int3
pusha
shll
push
push
mov
fstpt
imul
je
aam
push
cmp
out
adc
sbb
aaa
mov
adc
shll
sub
add
add
add
fcmovnb
int3
nop
jle
addr16
jmp
test
jns
pop
ret
fcomp
addb
mov
or
stos
and
ret
pop
push
jg
sbb
push
std
ret
adc
inc
subl
or
xor
daa
jge
out
inc
insl
lret
pop
lea
shrl
gs
mov
jle
sarl
add
add
add
js
insb
adc
fucomi
ret
movsb
testb
pop
jg
fldt
in
mov
sti
jp
push
lock
and
loopne
dec
fnstsw
lahf
out
dec
mov
fcoms
int3
rol
test
xchg
push
addb
adc
xor
or
cmp
std
testl
add
add
or
cwtl
ret
xor
cld
mov
adc
adc
jge
rcr
or
mov
faddp
jno,pt
fwait
sbbl
adc
test
dec
jne
sbb
adc
mov
sbb
mov
dec
jno
andl
jl
test
mov
add
add
add
jge
popa
lea
jmp
mov
bound
dec
lods
inc
cli
shll
pop
xchg
jbe
push
call
sti
mov
xor
lret
clc
imul
loop
arpl
mov
mov
push
enter
fistpl
shlb
jb
fiadds
pop
sbb
test
mov
add
add
pop
inc
pop
xchg
jne
dec
jno
mov
shlb
sub
scas
loopne
cmp
adc
repnz
pop
gs
ffree
adc
popa
lcall
pop
mov
or
cmpsl
add
fwait
cmc
adc
arpl
test
lds
in
xor
adc
jae
lock
push
add
add
add
lea
mov
je
pop
test
out
xor
cmpsb
inc
xchg
test
inc
adc
adc
and
pop
sbb
adcl
pusha
pusha
mov
jae
mov
mov
outsb
jmp
sub
jbe
and
movsb
clc
rorl
mov
push
or
rcr
xchg
sub
popl
pop
mov
add
add
add
std
repnz
in
insl
push
shlb
mov
out
aam
mov
pop
sbb
and
and
aad
loopne
stos
add
dec
stos
notb
aaa
addl
in
or
dec
insl
add
ljmp
jle
mov
xlat
inc
pop
xchg
ffreep
sbb
add
add
add
push
dec
outsb
or
cmp
sti
or
daa
add
cld
jns
jne
fmuls
inc
idiv
xor
sbb
int
fiadds
in
sbb
call
jbe
xor
aad
inc
lret
mov
movsl
icebp
mov
mov
cld
popf
pop
mov
mov
dec
insb
leave
jg
mov
add
add
mov
andb
mov
lods
mov
adc
stos
imul
int
test
cs
shl
adc
fsubs
sub
cmp
orl
xor
mov
outsb
pop
fadds
leave
test
add
add
add
jno
movsl
jle
push
add
pop
sub
fists
pusha
out
mov
jmp
inc
mov
xchg
pop
ss
sbb
jb
std
mov
sbb
js
pop
jp
stos
out
adc
mov
xor
cltd
andb
aam
pop
fsubl
shlb
push
in
test
and
or
add
add
add
in
movsb
movsl
orl
or
lret
xchg
push
negb
mov
repnz
cli
sbbl
mov
mov
xlat
aaa
je
jnp
push
ljmp
xlat
mov
aas
idivb
xor
add
lret
stos
test
and
insl
cli
imul
das
xchg
xchg
ja
push
mov
adc
add
add
add
mov
and
sti
dec
xor
lcall
cmp
mov
sub
pop
pop
aaa
fldt
fldl
mov
jns
cltd
clc
jecxz
test
popa
int
test
icebp
mov
mov
and
fwait
pop
pop
sbb
lock
jle
mov
pop
xor
add
add
inc
push
pushf
push
pop
loop
loopne
sub
adc
dec
jp
ss
les
mov
lock
dec
adcl
cmp
arpl
fdivr
sar
imul
jg
sbb
xor
rclb
int
icebp
cmc
pop
movsbl
cmpsb
stc
adc
push
xor
push
lret
cmp
add
add
ja
mov
fbld
out
inc
adc
cmpsb
push
shr
repnz
and
out
jge
imul
data16
xor
sbb
cli
mov
dec
dec
push
or
shr
pop
data16
sbb
ljmp
push
popf
adc
adc
cmp
test
mov
push
mov
add
add
add
pop
xchg
cmp
addr16
sbb
pop
add
rolb
mov
js
pusha
mov
lock
nop
out
and
mov
mov
leave
jnp
pop
shl
sbb
mov
repz
lods
out
xchg
jns
ss
xchg
icebp
mov
or
or
gs
fdivrp
arpl
xchg
cmp
mov
hlt
add
add
add
mov
ja
cmp
pop
aas
xor
adc
push
push
inc
push
pop
fldt
pop
icebp
fidivs
int
outsl
ljmp
push
les
leave
cld
add
arpl
pop
adc
mov
cs
sbb
or
inc
inc
jns
aaa
push
test
shlb
fwait
xchg
cld
inc
mov
sub
add
add
add
mov
std
movsb
inc
je
mov
dec
cmpsl
push
faddp
fmuls
mov
cmp
sbb
dec
add
test
cmp
movsb
inc
fbld
dec
and
adc
arpl
fdivrs
rolb
dec
aad
pusha
loope
dec
rol
push
jne
dec
and
scas
stos
add
into
ss
frstor
sarb
and
add
add
add
ja
mov
shll
mov
adc
cmp
out
sub
or
sub
push
rolb
sbb
imul
mov
fdivl
lcall
mov
cmp
rorl
or
loopne
shlb
mov
in
mov
add
add
add
xchg
add
stos
cmp
loop
daa
push
gs
cs
addr16
mov
popa
out
ss
mov
mov
add
mov
addl
xchg
sub
dec
adc
mov
repz
test
ds
lea
cmpsl
clc
addb
pop
inc
flds
add
add
add
push
insb
movl
fnstcw
xchg
inc
mov
test
add
out
pop
and
jmp
negl
das
aam
gs
cmc
dec
add
push
sub
gs
sub
fstl
mov
and
cli
int3
add
and
xchg
jecxz
movsl
test
leave
cltd
add
add
add
jnp
std
nop
push
dec
lea
aas
jmp
xchg
dec
sbb
mov
or
cmp
je
add
aas
repz
inc
repz
repz
inc
repz
repz
repz
rep
inc
repz
repz
ds
repz
repz
repz
movsl
jae
add
add
add
addb
dec
addl
stc
jg
mov
sbb
mov
pushf
mov
sbbb
pop
and
xchg
addb
jg
mov
addb
cmp
push
fwait
jp
push
add
xor
push
pop
pop
in
sbb
push
fdivrl
jnp
jae
sti
push
lea
add
add
add
cmp
lcall
jne
mov
push
idivl
push
add
push
add
push
pop
jbe
lds
push
pop
pop
cmc
push
fistpll
inc
push
xchg
jb
dec
lcall
mov
jecxz
mov
mov
push
cld
and
push
jle
push
push
lret
and
push
enter
add
add
add
xchg
xor
mov
in
push
icebp
and
cmpsb
and
push
in
popa
ret
and
adc
dec
and
frstor
adcl
xchg
and
cmc
and
xchg
and
adc
and
adc
and
loope
or
adc
cwtl
and
adc
add
add
add
std
push
mov
hlt
dec
mov
sbb
divb
add
cli
mov
mov
pop
mov
mov
mov
iret
push
cmp
cld
push
pushf
mov
cmp
lret
mov
cmp
mov
dec
pop
loopne
or
mov
pop
pop
mov
push
jp
mov
and
mov
add
add
add
xor
or
leave
or
add
mov
mov
add
mov
add
mov
add
mov
add
mov
and
add
inc
mov
xor
or
xor
mov
xor
mov
xor
movsl
xor
mov
xor
add
add
add
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
test
or
cmp
ljmp
sbb
mov
popa
pushl
xchg
mov
stc
je
mov
fstps
inc
fsts
inc
fstps
inc
cmp
add
add
cmp
dec
cmp
dec
sbb
dec
sbb
call
stc
xchg
call
stc
mov
fstp
leave
fcompp
lret
fld
jmp
fxch
jmp
cmp
mov
out
mov
mov
lock
mov
add
mov
lds
scas
mov
add
add
mov
mov
push
call
mov
ss
out
mov
sub
sub
sub
ljmp
mov
and
es
xor
lock
and
push
mov
cs
mov
push
sbb
mov
push
mov
add
add
add
out
movsl
push
mov
cmpsb
push
lahf
fbld
push
xchg
iret
test
push
ret
mov
mov
push
mov
je
test
jbe
xchg
js
push
ja
push
inc
outsl
push
inc
imul
push
dec
push
insl
push
inc
dec
outsb
push
aas
inc
outsl
push
push
aas
jo
sbb
jno
sbb
addb
add
add
add
daa
addl
rcr
push
add
fists
ret
fisttps
dec
ficoms
lea
push
add
lods
push
add
lods
pop
add
lods
pop
add
lods
pop
add
lods
pop
add
lods
pop
add
lods
xchg
add
lods
pop
add
lods
pop
add
lods
push
and
lods
add
lods
add
lods
add
lods
add
popf
lods
add
add
lods
pop
add
lods
or
add
add
add
lods
or
lods
or
lods
or
movsl
lods
nop
add
lods
push
add
mov
prefetchw
or
or
lea
inc
or
wbinvd
xor
add
adc
inc
add
and
cmp
or
add
adc
cmp
or
cmp
dec
add
add
add
or
cmp
or
lahf
or
test
ss
mov
or
xchg
or
add
scas
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
rorb
icebp
mov
or
add
add
add
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
xor
mov
add
push
adc
add
sub
dec
add
dec
add
add
add
adc
add
add
add
add
add
add
adc
add
adc
pop
add
add
add
inc
add
add
add
lock
adc
add
adc
add
add
adc
sub
inc
add
and
xchg
add
stos
xchg
add
add
add
add
stos
xchg
add
stos
cwtl
add
stos
cltd
add
stos
lcall
stos
pushf
add
stos
popf
add
stos
sahf
add
stos
lahf
add
mov
add
push
push
cmp
outsl
je
xor
cmp
mov
mov
outsl
hlt
cmp
push
ss
outsb
push
cmp
xchg
cmp
mov
add
add
add
int3
outsb
cmp
outsb
idivb
or
dec
pop
and
dec
push
adc
dec
ja
xchg
dec
dec
mov
jbe
xlat
icebp
mov
dec
xor
jmp
adc
adc
rcrl
jo
test
mov
hlt
dec
shlb
cld
dec
lock
stos
mov
out
pop
insl
fisubrs
fucomi
popf
lods
sti
in
stos
sbb
add
add
add
and
stos
push
in
stos
xchg
in
push
stos
sub
lods
imul
stos
lret
sub
xchg
xor
mov
mov
stos
dec
mov
stos
fnsave
push
stos
mov
stos
mov
stc
stos
xchg
mov
stos
popa
mov
stos
mov
stos
jmp
xlat
push
stos
sbb
aaa
stos
ljmp
stos
add
add
add
xor
pop
lods
or
pop
lods
movsl
scas
jp
int
je
and
in
rcr
lods
mov
adc
lods
jecxz
cmp
dec
add
lods
fs
fildl
jge
inc
mov
xchg
mov
inc
inc
jge
inc
fcoml
cld
arpl
jge
jl
jb
push
add
add
add
ret
test
arpl
xchg
andl
cmpb
jge
fs
jo
xchg
xchg
outsl
fs
cmpb
aad
rcr
mov
fistl
mov
add
pop
mov
fidivl
or
pop
fistpl
cmp
sbb
int3
sbb
int3
fistpl
int3
inc
sti
add
add
add
pop
int3
pusha
sti
dec
int3
cmp
int3
mov
sti
fmulp
loopne
into
int3
add
fmulp
jbe
aas
int3
sbb
pop
int3
loop
int3
sbb
int
and
int
sti
nop
int
sti
push
popa
sti
pusha
movb
rol
cmp
mov
popa
das
fs
mov
jno
fcomp
add
jmp
mov
jmp
add
add
add
mov
in
lcall
in
and
movsl
mov
in
in
jmp
in
pop
in
mov
pop
in
xchg
lods
mov
in
xor
in
je
int
xor
movsl
cmp
in
add
outsb
in
adc
mov
adc
insl
out
pop
test
in
sub
inc
in
imul
add
add
insl
push
in
jmp
rol
jmp
gs
in
pusha
push
pop
in
insl
ja,pn
and
xor
in
mov
mov
in
dec
sti
fucomp
add
jne
jae
adc
negl
notl
dec
scas
cmp
int3
jne
clc
int3
lcall
int3
icebp
mov
imul
int3
loopne
cwtl
int3
add
add
add
jo
pop
int3
pop
scas
cmp
cmp
lret
mov
scas
mov
lret
sbb
sbb
add
sbb
lcall
ja
repz
mov
js
xor
pop
xor
xor
and
js
xor
ja
xor
js
and
js
repz
js
repnz
js
add
add
add
loop
js
loop
js
repnz
push
mov
xlat
jecxz
js
jecxz
js
xor
pop
xor
js
and
js
and
ja
xor
ja
xor
cwtl
cmc
add
cmp
hlt
test
cwtl
cltd
inc
test
fcomps
xchg
test
cltd
lds
pop
cltd
jne
jns
add
add
add
aad
cltd
cltd
test
fstps
push
test
cltd
inc
test
cltd
xchg
test
cltd
jbe
jp
test
cltd
test
cltd
test
cltd
imulb
sbb
xchg
test
jnp
push
test
mov
cltd
or
or
pop
dec
push
iret
jnp
adc
ja
push
iret
orl
das
dec
add
add
add
iret
imul
addr16
cs
jae
sub
jg
ss
fwait
dec
xor
dec
ds
mov
dec
inc
dec
mov
inc
pop
dec
into
dec
adc
inc
pop
dec
dec
cmp
inc
aaa
dec
fimuls
dec
fiaddl
dec
out
sub
inc
daa
dec
out
dec
xor
inc
aas
dec
test
dec
push
dec
dec
add
into
dec
pop
rorb
iret
mov
dec
add
add
add
jbe
testl
in
out
dec
mov
in
pop
dec
push
add
in
decl
in
fisttpl
in
xlat
dec
pop
in
rorl
in
iret
dec
ret
dec
into
in
scas
dec
ret
dec
in
xchg
dec
mov
in
aas
dec
mov
dec
dec
out
inc
dec
stos
in
push
dec
scas
in
dec
dec
mov
call
clc
mov
add
add
add
aaa
call
les
jmp
int3
mov
lods
mov
leave
leave
sbb
ror
adc
mov
lret
inc
lret
ds
sub
mov
push
xor
mov
cs
sbb
mov
and
subl
push
lret
adc
push
add
add
add
push
lret
cli
leave
jmp
ja
lret
jle
push
addr16
js
lretw
jb
jo
outsb
lret
pop
lret
adc
inc
adc
dec
adc
sbb
lret
jg
jns
jnp
insl
ja
lret
bswap
jmp
adc
lret
adc
aad
sub
fsts
sub
add
add
add
adc
dec
add
adc
dec
pop
cmove
cmovo
bswap
dec
cmp
enter
aam
mov
rorb
paddusb
psubusb
pmulhuw
pavgb
paddsb
ret
mov
hlt
push
sti
mov
cld
inc
repz
add
stos
dec
add
dec
lea
dec
mov
dec
xchg
add
add
add
push
fwait
dec
cmp
pop
dec
lret
ret
adc
shll
dec
add
or
ret
cmovp
aaa
dec
mov
inc
aas
dec
xor
xor
roll
jmp
pop
into
aam
jmp
push
xchg
push
xchg
out
sbb
or
rcll
or
out
adc
mov
adc
sar
in
shl
and
lds
and
add
add
add
ror
sbb
shll
sbb
sbb
add
inc
jg
popl
add
inc
xchg
xchg
jg
jnp
xchg
inc
outsl
xchg
popl
add
inc
arpl
xchg
inc
cmp
xchg
xchg
jg
call
mov
inc
decl
xchg
inc
repz
inc
pop
mov
add
add
add
add
popl
or
inc
mov
mov
mov
jl
mov
mov
mov
jnp
mov
or
mov
or
mov
or
mov
or
mov
or
mov
cmp
mov
add
add
add
cmp
mov
jg
mov
fwait
cmp
mov
xorb
mov
mov
and
mov
and
mov
and
mov
and
mov
and
mov
mov
mov
and
mov
add
add
add
mov
mov
mov
mov
and
mov
mov
and
mov
and
mov
mov
mov
nop
mov
rclb
jg
xchg
mov
sbb
mov
nop
mov
rcll
add
add
lds
mov
and
repz
je
repz
repz
repz
jno
jp
xor
pop
mov
repz
arpl
pop
mov
sbbl
inc
cmpl
rorb
sbb
leave
sbbb
int
sbb
leave
addb
add
add
sbb
jae,pt
mov
outsb
jae
mov
sahf
jb
mov
into
jb
mov
mov
cmpb
xchg
lcall
jb
mov
mov
cmpb
jb
mov
sbb
pop
mov
repnz
mov
repnz
add
add
add
mov
repnz
mov
repnz
mov
bnd
repnz
mov
repnz
pop
repnz
fistpl
repnz
repnz
cmp
repnz
repnz
cmp
bnd
cs
repnz
bnd
bnd
pop
repnz
repnz
clc
add
add
add
inc
repnz
dec
repz
inc
repz
rep
inc
repz
rep
inc
repz
pop
popf
sti
repz
xorl
in
push
pop
pop
pop
scas
pop
fwait
cmp
jp
sbb
sub
jno
fcomps
jbe
lret
cwtl
inc
jl
sbb
dec
lret
sub
lcall
add
add
sarl
repz
repz
repz
mov
push
mov
mov
add
faddl
adc
fsubrl
add
faddl
push
or
inc
jg
faddl
add
fcoml
add
fcoml
cs
outsb
add
faddl
add
fdivl
fsubrl
add
fcompl
or
pop
or
fiaddl
add
fiaddl
xor
fidivl
add
add
add
add
fiaddl
add
fisubl
ds
pop
add
fiaddl
add
fidivrl
or
loope
or
add
or
cmp
ficompl
add
fiaddl
add
inc
or
pop
add
mov
add
mov
add
mov
outsl
or
jmp
stos
or
jmp
stos
or
jmp
jg
mov
add
add
add
add
mov
std
shll
add
mov
fisttpl
jmp
add
mov
pop
inc
mov
and
mov
add
mov
add
jmp
add
mov
decl
jmp
add
mov
stc
push
mov
into
or
add
cmp
add
dec
jmp
push
js
jmp
or
add
add
or
add
out
scas
add
or
add
pop
mov
jmp
jp
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
mov
add
mov
mov
mov
add
add
jo
add
pusha
mov
add
add
jo
add
jo
add
pusha
mov
add
add
xor
add
and
add
xor
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
add
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
loopne
add
loopne
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
jo
add
jo
add
pusha
mov
add
add
xor
add
and
add
xor
add
and
add
lock
add
mov
add
mov
add
int3
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
add
jo
add
pusha
mov
add
add
jo
add
jo
add
pusha
mov
add
add
xor
add
and
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
xor
add
and
add
xor
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jo
add
pusha
mov
add
add
jo
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
jmp
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
jo
add
pusha
mov
add
add
jo
add
jo
add
pusha
mov
add
add
xor
add
and
add
xor
add
and
add
lock
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
int3
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
mov
scas
add
mov
add
mov
add
mov
scas
add
jo
add
jo
add
pusha
scas
add
pusha
scas
add
jo
add
jo
add
pusha
scas
add
pusha
scas
add
xor
add
and
add
xor
add
and
add
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
out
or
out
or
out
or
out
or
out
or
out
add
add
add
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
loopne
loopne
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jo
add
pusha
mov
add
add
jo
add
jo
add
pusha
mov
add
add
xor
add
and
xor
add
and
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
add
add
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
add
add
add
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
and
add
xor
add
and
add
add
lock
add
lock
add
loopne
add
loopne
add
lock
add
lock
add
loopne
add
loopne
add
mov
add
mov
add
mov
scas
add
mov
add
mov
add
mov
scas
add
jo
add
jo
add
pusha
scas
add
pusha
scas
add
jo
add
jo
add
pusha
scas
add
pusha
scas
add
xor
add
add
or
add
or
add
or
add
or
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
pushf
add
or
add
add
add
add
pushf
add
or
add
pushf
add
or
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
sbbb
bnd
repnz
jns
repnz
jns
repnz
cltd
jne
dec
cltd
jne
inc
cltd
jne
mov
je
xor
repnz
jns
repnz
je
xchg
add
add
add
sbb
sbb
sbb
cmp
cmp
repnz
repnz
repnz
jns
bnd
movsb
repnz
cmp
jae
mov
repnz
mov
repnz
repz
repz
repz
add
repz
repnz
add
repz
add
add
mov
pushl
repz
repz
lock
shl
add
repz
shl
add
repz
shl
add
push
loopne
repz
add
repz
add
dec
stos
ret
repz
add
repz
xor
repnz
ret
repz
add
repz
push
leave
jp
mov
pop
cli
push
mov
cmp
ret
add
add
pop
jge
mov
xor
xchg
push
mov
cmp
xor
pop
mov
sbb
mov
sbb
push
jno
push
mov
cli
mov
mov
cli
mov
mov
fimull
jbe
push
dec
fisubl
jbe
mov
fnsave
mov
jmp
push
xor
add
repnz
add
add
lcall
push
mov
mov
pushf
js
mov
scas
js
mov
insb
cmp
in
push
sti
mov
add
mov
push
push
push
mov
test
mov
jge
lret
mov
mov
mov
xor
cmp
mov
pop
cmp
add
add
add
mov
xor
lret
push
mov
pop
cmp
mov
cli
aaa
lret
mov
and
sub
aad
icebp
lahf
jg
repnz
aam
icebp
mov
repnz
pop
jo
dec
mov
repnz
jo
adc
icebp
dec
aas
jo
stos
aad
icebp
inc
pop
jo
imul
arpl
cltd
pushl
movb
add
add
push
and
cmp
jno
fstl
repnz
jno
push
xor
jno
cmpsl
xor
jo
push
push
dec
aas
jo
into
push
jecxz
ds
jo
add
pushl
repz
div
pop
sbb
jne
mov
ret
scas
add
add
test
add
add
add
add
add
add
test
add
mov
add
xchg
add
adc
add
mov
add
or
add
scas
adc
xchg
xchg
add
add
add
scas
and
jl
ds
scas
or
cwtl
xchg
add
rolb
cmp
aas
or
add
or
aas
or
fidivrl
or
add
or
add
add
or
add
or
add
or
aas
or
fidivrl
or
add
or
iret
aas
or
add
or
into
aas
or
into
aas
or
add
cld
into
aas
or
add
or
aas
or
pop
or
adc
insb
iret
aas
or
add
inc
iret
aas
or
mov
out
mov
add
add
add
add
mov
add
mov
into
into
mov
add
mov
into
ds
add
mov
int3
cs
add
mov
int3
push
mov
add
mov
into
push
mov
add
mov
into
mov
add
mov
into
out
mov
add
mov
into
fidivs
cmpsl
into
into
mov
add
mov
into
ds
add
mov
add
add
add
add
mov
add
mov
into
push
mov
cmp
loope
cli
or
add
or
loope
mov
mov
scas
add
or
add
dec
loope
or
cmp
add
or
add
or
add
cmp
add
dec
loope
mov
add
add
add
lods
add
loope
cld
or
add
or
add
or
add
jbe
or
add
ds
mov
add
add
add
sbb
add
jno
add
jo
add
mov
add
jns
add
mov
add
add
mov
add
add
add
add
jns
add
mov
add
jp
add
push
add
jns
add
add
call
mov
add
add
mov
add
add
cld
jns
add
mov
xlat
aas
or
fnstcw
or
fnstcw
or
fnstcw
or
add
or
add
or
fdivrs
add
add
add
or
or
loop
aas
or
aas
or
add
or
aas
or
aas
or
add
or
aad
or
sub
stos
fdivrs
or
add
or
fdivrs
or
add
or
fdivrs
or
or
push
aas
or
pop
fsubs
mov
add
mov
xlat
push
mov
add
mov
xlat
push
mov
add
add
add
add
mov
xlat
divb
out
xlat
out
movsb
add
mov
xlat
mov
add
mov
aad
mov
add
mov
ss
add
mov
aad
mov
add
mov
aad
mov
add
mov
aad
mov
add
mov
aad
mov
add
mov
aad
mov
add
mov
aad
mov
add
mov
aad
mov
scas
add
add
add
add
fldl
mov
fldl
mov
mov
mov
rcr
fldl
es
fldl
inc
add
fldl
outsl
add
fldl
orb
add
pop
fldl
fmuls
iret
add
pop
fldl
pop
add
fldl
rorb
stos
add
or
add
fldl
xor
add
add
add
fldl
fisttps
mov
gs
add
push
mov
add
test
add
mov
add
xchg
add
mov
add
xchg
add
mov
add
mov
add
add
mov
add
lldt
xchg
add
scas
or
pushf
xchg
add
scas
or
insb
xchg
add
push
add
add
add
add
add
aaa
fists
int3
ja
sahf
adc
fbstp
adc
filds
push
adc
fisttps
mov
pusha
cs
sub
fisubrs
cs
mov
cs
lret
mov
aam
scas
pop
cs
out
popa
fisubrs
cltd
inc
popa
into
out
sub
movl
add
dec
inc
scas
or
cmp
aas
pop
clc
sub
dec
or
pop
inc
inc
ds
das
mov
cs
jp
dec
inc
pop
call
inc
dec
mov
das
cmpl
inc
jnp
cs
jnp
inc
inc
jnp
and
inc
jp
sarl
inc
jp
cs
jp
add
add
add
sub
jp
cs
jp
bnd
mov
loope
mov
push
jp
mov
sarl
inc
jp
cs
sub
sarb
inc
jp
sub
inc
jp
sub
inc
jp
fs
frstor
jb
jmp
jle
fidivs
in
fnsave
add
outsb
jb
or
jle
ficomps
jl
or
xor
fnsave
and
fnsave
hlt
jnp
mov
jb
loop
fcmovnu
and
jb
imul
in
ficomps
xor
jno
and
jno
push
fidivs
in
and
jno
add
add
add
add
aaa
fucomip
sbb
mov
fists
enter
js
aaa
jns
fisttps
jns
fistps
fstp
lods
je
sti
xchg
pop
mov
ret
sub
xchg
in
inc
and
pop
inc
or
mov
push
int
xchg
bound
dec
pop
setns
add
add
add
mov
mulb
dec
stos
sarb
xor
stc
or
or
hlt
std
hlt
insl
cli
jl
orl
aad
shlb
pop
xchg
jnp
imul
testl
lahf
outsl
test
pop
aas
nop
adc
cmp
push
lcall
cld
mov
into
pop
add
add
mull
sbb
sbb
jns
push
cmp
es
mov
mov
sub
shr
or
sbbl
push
mov
sbb
dec
scas
mov
mov
pushf
dec
inc
addr16
push
dec
insb
idivl
cld
push
xchg
ds
push
xor
xor
adc
sub
loop
daa
fbld
cmpsl
mov
adc
add
add
add
xchg
inc
jp
inc
in
and
sbb
or
cmp
lahf
int3
add
in
in
mov
or
jmp
popa
xchg
xor
push
pop
pop
adc
add
cli
loope
push
pop
jl
add
ret
stc
mov
sbb
int
mov
dec
xor
pushf
dec
xchg
mov
cltd
icebp
js
je
add
add
add
outsb
pop
push
pushf
mov
in
repz
inc
and
and
dec
gs
fcmovu
insl
stc
fistl
cmp
popf
inc
jecxz
inc
lea
inc
xor
push
xchg
jo
push
js
xchg
imul
adc
inc
inc
mov
xchg
add
mov
dec
test
sub
pushf
mov
insb
xor
mov
add
add
in
mov
pushf
xor
xor
int3
xor
in
xor
xor
or
sbb
and
push
movsb
xlat
xor
xor
mov
lret
adc
in
mov
sub
gs
pushf
lret
add
and
mov
in
shrb
and
push
xchg
pop
into
ljmp
sahf
jp
imul
les
add
in
cmp
loope
fs
cli
sbb
cltd
cld
imull
push
sub
mov
or
mov
mov
fnsave
push
lds
in
cmp
mov
lds
and
mov
addr16
mov
xor
or
jbe
js
jbe
add
add
add
add
mov
add
or
icebp
lds
icebp
mov
fsub
movsl
or
loope
or
fimull
or
fidivl
mov
cmp
imul
dec
jecxz
jne
or
mov
sbb
xchg
cmp
jae
xorb
jno
jmp
mov
inc
and
aad
cmpsb
call
pushl
add
add
cwtl
addb
in
icebp
cmc
daa
cli
add
and
jg
cmp
aaa
cltd
cmp
jp
dec
adc
movsl
mov
add
mov
cmpsb
pop
shrl
mov
xor
scas
shrl
outsl
dec
xchg
es
xchg
lahf
xchg
pop
fwait
jno
orb
repnz
mov
push
ljmp
add
shlb
pop
xor
xor
pop
sub
or
sub
sub
loope
cmp
mov
jecxz
cmpb
adc
pop
push
xlat
cmpsb
pop
stos
scas
push
jmp
jns
iret
jg
sti
mov
iret
lcall
mov
es
jne
or
enter
sub
push
sbb
cs
mov
testl
add
pop
cmp
aas
sbb
mov
mov
jo
mov
xor
dec
dec
sub
inc
test
out
in
or
dec
jns
jle
outsb
pop
mov
dec
in
dec
inc
adc
inc
and
pop
or
push
insb
pop
mov
mov
add
push
pop
lea
adc
shrl
sbbl
add
add
cmp
je
daa
cmpsl
mov
std
xchg
pop
mov
adcb
gs
mov
pushf
pop
ja
mov
xchg
fwait
push
pop
daa
popa
cmp
movsb
mov
pop
jle
fnstenv
dec
jb
filds
fistpll
mov
fildll
pop
leave
xor
fiadds
inc
xor
add
add
add
and
mov
mov
das
outsl
pusha
arpl
outsl
xor
outsl
sbb
into
outsl
mov
arpl
outsl
cmp
and
pop
outsl
int
outsb
outsl
sahf
bound
add
outsl
outsl
jle
outsl
xchg
lds
bound
outsl
test
das
outsl
push
arpl
vcomisd
bound
jl
das
outsl
jle
add
add
add
outsl
scas
lds
outsl
mov
movsl
out
outsb
sahf
fisubrs
movsl
out
outsb
fbld
outsb
les
imul
lods
xchg
fidivrs
outsl
xchg
sub
gs
xchg
ficomps
outsb
fisubs
xchg
fidivrs
outsb
ficomps
sub
jle
xchg
ficomps
jmp
fidivs
xchg
fcompp
jmp
fiadds
xchg
fidivrs
add
add
add
int3
xchg
fidivrs
call
xchg
ficomps
insl
fiadds
ficomps
insl
faddp
iret
xchg
fidivrs
insl
fisubs
test
fdivp
dec
xchg
ficomps
dec
xchg
fiadds
rcll
push
cmc
in
mov
xchg
out
xchg
adc
fbstp
adc
fbstp
out
push
adc
xchg
out
adc
fists
add
add
add
adc
fbstp
adc
fbstp
adc
fistps
xchg
adc
adc
fbstp
in
fbstp
adc
fbstp
adc
xchg
adc
push
adc
fists
inc
popa
jp
lods
into
pop
popa
cs
jmp
mov
push
popa
lea
add
add
add
cmp
and
push
popa
jecxz
mov
into
aad
ffreep
mov
es
adc
scas
cmc
pusha
fbld
popa
out
pop
je
and
pusha
jecxz
inc
popa
lods
inc
cld
pusha
fistpll
sbb
ret
popa
fildll
movsb
cs
std
scas
ficomps
scas
stos
and
push
pop
filds
mov
jns
insl
movsl
cmp
fildll
mov
mov
cmp
add
add
insb
pop
mov
imul
sbb
cmpsb
pop
imul
xor
xchg
lock
or
jb
jmp
lods
jge
leave
and
insb
jae
mov
cmp
or
cmp
or
dec
push
and
mov
push
cmp
xor
iret
cmp
pop
cmp
pop
out
enter
cmp
movb
add
add
pop
xlat
pop
lea
adc
adc
loop
aas
xlat
add
cs
and
lret
jns
lret
pop
repz
int
jmp
shl
mov
sub
jl
popl
lcall
test
adc
cmp
mov
push
repz
fisubrs
adc
add
add
mov
cmp
into
dec
insl
inc
into
jl
mov
push
adc
sbb
xchg
jbe
stos
push
add
lods
leave
fldt
jecxz
mov
mov
jg
mov
mov
mov
mov
mov
mov
mov
jg
mov
jg
mov
orb
lahf
jle
mov
add
add
add
jle
mov
jle
mov
mov
jg
mov
ds
jp
fistpl
rorl
push
push
sbb
loope
idivb
not
into
dec
mov
mov
jg
fstpl
fisttpll
dec
sbb
cs
roll
ret
fidivs
loope
inc
sub
lea
add
add
add
add
inc
xchg
sbb
xchg
or
ret
fdivp
inc
sub
adc
mov
out
pop
push
sub
push
mov
test
adc
aaa
sbb
mov
into
pop
dec
inc
inc
nop
sbb
jmp
mov
push
nop
add
mov
push
arpl
lods
mov
add
add
add
repz
andb
adc
lret
and
loop
repz
mov
push
ss
inc
aam
jmp
mov
jnp
sbb
repnz
sbb
cmpsb
pop
mov
lock
std
sti
mov
jbe
pop
mov
out
ret
cli
push
sbb
bnd
sub
dec
xor
push
pop
mov
add
add
mov
mov
dec
lock
add
push
psubd
hlt
shl
movsb
inc
xchg
sub
sbb
mov
pop
ret
neg
and
sbb
xorb
sub
lret
imul
sbb
pop
out
pop
jge
jb
mov
mov
jmp
push
adc
inc
cmpsb
lret
test
inc
aaa
add
add
add
adc
mov
loop
ror
pop
nop
xor
cmpsb
mov
sub
push
pop
fnstsw
pop
xchg
insb
hlt
push
arpl
mov
mov
jecxz
lret
mov
jecxz
cmp
shlb
mov
mov
jmp
mov
jmp
sbb
cmp
or
add
add
add
cmp
fstpt
movsl
rorl
inc
cmp
mov
cmp
or
iret
mov
cmp
or
mov
std
mov
cs
push
mov
mov
push
xor
xor
xor
pop
adc
dec
sub
leave
mov
add
add
add
xchg
jg
xchg
xchg
sub
xacquire
mov
jg
xchg
jo
mov
inc
iret
outsl
push
bound
mov
jge
dec
jg
and
addr16
push
cmp
mov
or
mov
je
jno
sub
rcrl
mov
mov
jns
insl
ficoms
add
add
add
adcl
xchg
xchg
mov
sbb
ret
pushl
xchg
inc
xchg
sbb
mov
jb
sbb
mov
push
jbe
imul
xchg
adc
lahf
enter
invd
add
cmp
mov
cs
js
movsl
add
add
add
sbb
icebp
adc
lods
shll
push
lods
ret
repnz
xchg
mov
test
pop
popa
fcmovu
jg
pop
out
sbb
dec
data16
inc
mov
repnz
add
movsl
jb
cmp
xchg
mov
lds
xlat
movsl
mov
jmp
and
jnp
pop
sub
test
lea
add
add
add
cmp
add
cmp
jp
mov
comiss
aad
dec
leave
cwtl
sub
je
call
dec
aaa
adc
pop
repz
push
fwait
jmp
icebp
rep
lods
int
jmp
mov
pause
xchg
jno
addb
repz
jno
xchg
mov
adc
repz
sub
add
add
lcall
repz
stc
outsl
pop
stc
js
xchg
repz
lahf
loop
lahf
push
aam
fisttpl
mov
jp
fdiv
jp
or
jg
rcl
fs
adc
ficoml
adc
sub
jne
fidivs
and
idiv
adc
test
add
add
ja
addb
xor
clc
jo
lea
leave
das
repz
jmp
jae
sub
mov
mov
data16
cmpsl
mov
out
dec
xchg
in
dec
jp
jmp
xor
push
xor
add
hlt
call
cmp
add
jb
mov
rolb
inc
add
add
add
and
pusha
test
stos
jo
lods
jb
push
pop
sbb
push
lcall
push
cli
subl
imull
leave
sahf
mov
inc
dec
pop
lods
dec
mov
and
sbb
arpl
adc
or
adc
scas
mov
or
or
add
add
orb
jmp
jae
xor
mov
sub
jb
add
ja
cli
xorb
incb
jg
adc
inc
ljmp
and
mov
ljmp
pcmpeqw
jne
push
lock
ss
dec
mov
js
imul
pop
insb
lods
test
add
add
xor
sub
fld1
test
mov
addl
roll
mov
jl
divb
jo
add
repz
rolb
ret
incl
xor
push
enter
mov
ret
addb
xchg
stos
icebp
repz
sti
push
add
cli
stc
or
stc
add
add
add
movsl
cmp
stos
icebp
repz
xor
xchg
jbe
cmp
rep
repz
jo
xlat
xchg
ds
push
jp
push
hlt
cmp
dec
lcall
lret
jnp
mov
std
dec
mov
pop
outsl
jb
loop
scas
aaa
fldt
pop
call
data16
cmpsl
insb
out
cmp
jg
mov
add
add
add
pop
xor
xor
push
shlb
rclb
xor
lret
mov
dec
rcrl
negl
xchg
dec
pop
and
mov
addb
in
and
fwait
icebp
dec
ret
inc
jle
fisttpll
xor
adcb
pop
lret
pop
and
cwtl
xlat
gs
jb
clc
pop
add
add
add
jnp
mov
pop
cmp
bound
pop
and
dec
mov
cmp
push
cmp
test
mov
mov
cwtl
or
insl
or
inc
cmp
addb
jb
ja
xor
sbb
inc
xor
add
repnz
dec
dec
das
xchg
ret
dec
fidivrl
cltd
add
add
add
pushf
add
mov
cmp
icebp
aad
cmpsl
adc
or
mov
inc
fisttpl
mov
pop
filds
shrl
mov
cmp
popa
lret
sbb
push
xor
pop
or
or
outsb
inc
and
and
add
lcall
mov
add
out
rcll
loopne
dec
and
lods
mov
add
shrb
add
push
inc
jb
inc
push
gs
jns
shrl
dec
dec
imul
dec
push
push
cmpsb
push
push
push
lcall
add
test
sbb
xchg
mov
sbb
push
lods
add
push
mov
rorl
aaa
inc
rolb
xor
add
add
add
cmc
jae
out
cld
jno
div
inc
aaa
in
pop
mov
dec
sbb
lret
sub
lds
dec
xor
rorl
aad
push
ret
or
insl
lods
je
je
pop
mov
add
push
outsb
test
mov
add
shll
stc
jg
add
or
and
add
or
cmp
dec
cmpsl
dec
lret
add
or
add
add
jo
add
or
mov
or
mov
dec
call
push
aad
call
fstpt
out
or
or
inc
ljmp
push
in
ret
dec
fdivp
lret
dec
and
scas
js
das
mov
je
cmp
or
out
stc
adc
add
add
pop
test
xchg
adc
movsl
cld
adc
mov
sahf
ljmp
push
and
or
mov
pusha
lret
sub
mov
ret
sarl
inc
je
in
in
mov
aam
mov
repnz
mov
sub
or
xorb
xchg
jmp
in
loope
ljmp
add
add
mov
test
loope
lret
jmp
sbb
scas
xor
mov
imul
xor
jle
es
data16
aam
scas
aaa
test
add
scas
add
sbb
ret
sar
xor
dec
dec
pop
and
adc
mov
add
cmpsl
or
loope
decb
add
add
add
lock
add
push
sub
loopne
add
dec
add
inc
add
sbbb
lcall
mov
push
and
test
and
stos
loop
mov
fsubrs
mov
or
mov
or
outsb
cmpsb
dec
cltd
push
and
add
inc
mov
mov
add
add
add
push
ret
add
or
mov
add
mov
pop
mov
add
mov
add
or
pop
mov
rcrb
hlt
or
lret
or
or
orb
push
cmp
shl
cmp
mov
incl
push
iret
dec
or
or
pusha
std
sbb
fnstenv
mov
faddl
add
add
add
jmp
cmc
lret
or
out
mov
sarl
mov
cmp
add
mov
call
inc
scas
out
or
and
fidivs
idivb
add
mov
push
rcrl
dec
fisubrl
add
mov
mov
add
xchg
loope
lret
add
add
add
add
xchg
hlt
cli
push
add
mov
add
mov
pop
sbb
mov
push
test
pop
test
mov
aas
mov
imull
outsl
pop
jp
pop
fstps
inc
loop
push
popa
lock
and
shl
xor
icebp
push
jmp
mov
xchg
push
push
and
xchg
icebp
jns
popf
add
add
add
repz
jmp
and
mov
jp
jg
xchg
lea
frstor
jp
push
push
js
mov
in
add
popa
push
add
ss
dec
mov
fstp
push
cmp
cs
jge
fstp
jp
mov
cmp
sub
xor
xchg
ret
divb
ljmp
add
add
dec
fbld
test
sub
scas
stc
fstp
movsb
lock
sbb
xchg
mov
xchg
fidivs
rolb
inc
stc
fstp
cmp
dec
dec
or
into
into
cmova
push
or
mov
test
in
sti
test
xchg
cmp
adc
adc
mov
xor
inc
filds
add
add
add
data16
xchg
dec
loop
cltd
rorl
das
movsl
pop
rcr
push
or
inc
inc
cld
fistps
into
and
dec
lcall
stos
pop
or
adc
test
jbe
test
and
inc
ffreep
push
dec
push
js
inc
fbstp
ds
xchg
mov
adc
jle
cmpb
add
and
pusha
dec
push
or
sub
inc
ss
jne
jae
inc
mov
adc
hlt
sub
and
inc
inc
xchg
jns
enter
or
mov
out
dec
or
mov
imul
loopne
into
nop
xchg
dec
adc
sbb
cltd
sbb
xor
cmp
mov
cmpl
add
add
add
adc
pop
test
popf
in
int3
iret
jge
sbb
fidivrs
test
scas
das
pop
test
das
cld
fisubrs
pop
and
outsl
aad
fs
xchg
fisubs
pop
jae
ljmp
loopne
call
adc
mov
mov
dec
nop
ficoms
cs
pop
lds
inc
xchg
add
add
add
repnz
fidivrs
or
movsl
dec
xor
or
jl
out
pop
outsb
dec
nop
fiadds
and
les
repz
out
pop
ss
hlt
fstp
fdivrl
fstp
pusha
jg
ret
xor
sbb
roll
jle
test
adc
repnz
adc
xlat
xor
pop
aam
add
add
add
push
rolb
fstp
mov
scas
ficomps
out
cld
pop
into
adc
xchg
aam
pop
in
xchg
adc
arpl
insb
or
push
das
daa
ja
fs
scas
dec
xor
inc
inc
fbstp
sbb
popa
mov
and
push
shl
loopne
sbb
arpl
xor
addl
add
jnp
inc
mov
ficomps
pop
aaa
pop
and
pop
push
cmp
dec
push
push
js
and
ja
cs
out
dec
jne
loop
dec
div
lea
gs
ja
rolb
pop
nop
outsb
std
mov
movsb
mov
gs
sub
xor
or
setl
shrl
add
add
add
dec
mov
sub
stos
imul
out
xor
mov
sub
add
sarl
stc
mov
stc
subb
mov
adc
adc
aas
xchg
dec
subl
push
and
rorl
out
fs
repz
inc
into
mov
mov
adc
test
inc
mov
add
add
fsubp
push
inc
xchg
ss
add
or
rol
xor
movsl
fisttpll
dec
push
mov
sub
inc
mov
or
mov
or
lret
mov
loop
xlat
pop
cmpsl
data16
test
fimuls
aad
xchg
outsb
sub
aas
in
addr16
sub
mov
add
add
add
push
call
loop
xchg
xor
fstp
mov
xlat
xchg
jmp
jo
ds
inc
loopne
mov
inc
sub
ret
xchg
xor
iret
jae
mov
sahf
push
popf
push
arpl
je
dec
or
pushf
mov
cmp
in
pop
sbb
mov
mov
cmp
add
mov
add
add
add
jl
jb
movsb
pop
orb
push
cld
cmp
loope
shlb
push
cld
fdivs
or
jmp
mov
inc
movsb
dec
sbb
xchg
in
pop
cmp
scas
outsb
push
fs
into
mov
push
lahf
test
push
mov
push
les
stos
jno
fistps
adc
repnz
incl
adc
add
add
add
push
xor
push
pop
loop
sahf
addr16
pop
ficompl
mov
add
fstps
push
xacquire
bound
xor
clc
int
and
dec
mov
ret
cmp
add
and
rorb
shll
fs
lods
add
mov
mov
adc
lret
test
or
add
add
xchg
pop
iret
add
mov
xor
add
aas
sti
jno
in
pop
or
inc
adc
ja
pop
xchg
xchg
cmp
add
xchg
sbb
xchg
call
addr16
movsl
add
sub
jecxz
mov
ljmp
cmp
add
add
add
mov
in
ret
inc
pop
fildl
mov
sub
add
mov
mov
test
ret
xor
addr16
and
mov
and
lahf
cmp
or
adc
stos
repnz
ss
mov
shrl
mov
cmp
add
jo
mov
add
add
add
pop
and
inc
dec
xchg
sbb
bound
inc
cmp
lret
cmp
mov
mov
mov
fisttps
jmp
jae
aas
out
inc
orb
cmp
add
idivb
mov
cmp
mov
lds
icebp
mov
leave
add
pop
jns
add
add
add
xor
or
xchg
xlat
adc
cmp
mov
xlat
hlt
xchg
loop
cwtl
pushf
sahf
xchg
scas
lock
cmpsl
jo
sbb
or
push
test
dec
push
mov
pusha
mov
xchg
pop
cwtl
push
mov
cmp
push
rolb
adc
pusha
addr16
xchg
jmp
add
add
add
daa
lods
in
adc
clc
sbb
mov
je
jge
sub
mov
aaa
mov
adc
cld
orb
push
lea
loopne
lds
std
call
mov
push
aas
push
lcall
sbb
jle
cmp
lret
fnstcw
cmp
mov
add
add
add
test
pop
imul
sub
mov
mov
add
rcrl
jb
or
xchg
aad
bound
jge
push
pop
test
sub
stos
in
xchg
nop
xor
mov
xor
xorl
sbb
xchg
dec
dec
xchg
mov
push
push
push
xchg
dec
cwtl
fnstcw
aad
sub
mov
add
add
cld
mov
into
push
cmp
add
je
mov
jp
mov
ss
mov
push
mov
mov
mov
push
inc
jb
dec
pop
iret
xchg
push
push
cwtl
cmp
and
fadd
push
or
mov
sbb
mov
inc
loope
xor
add
mov
and
pusha
arpl
out
mov
dec
add
add
add
mov
mov
stos
add
mov
data16
mov
popf
rcl
push
mov
aam
loopne
cmp
fs
int3
fstpl
mov
int3
cmpsb
add
mov
mov
fwait
xchg
adc
mov
or
movsl
mov
mov
and
dec
dec
shlb
add
add
add
push
xor
push
mov
dec
jbe
dec
mov
inc
push
in
mov
dec
lock
push
aad
test
xchg
negb
lretw
xchg
add
add
pop
iret
fcoms
repz
adc
pop
mov
imul
xor
pushf
orb
adc
lcall
out
add
add
add
imul
rcll
test
jns
mov
xchg
xlat
arpl
cmpsl
insb
push
cld
sub
popa
cwtl
repnz
pusha
mov
out
inc
jb
mov
mov
cmpsl
loopne
mov
mov
test
adc
data16
adc
adc
xlat
lcall
js
ljmp
icebp
call
add
add
xchg
cmp
jbe
sub
aas
add
outsb
lret
lds
mov
sbb
fcmovne
callw
dec
jae
test
add
mov
faddl
aas
lcall
rorb
adc
cmp
cmp
inc
out
push
or
repnz
xlat
sahf
sbb
sbb
add
add
add
inc
repnz
lret
ja
lods
cs
sbb
pop
mov
arpl
ret
sti
ret
aas
jb
pop
movsl
or
shll
or
xchg
mov
dec
jl
and
lret
jge
xchg
std
jnp
add
mov
cmp
int
repz
xchg
bound
call
loop
cmp
popa
add
add
add
int
movsb
arpl
shl
jp
and
push
xchg
stc
jge
push
pop
in
add
cmp
arpl
cli
scas
icebp
repz
push
pop
pop
repz
xchg
js
jmp
scas
test
shll
subl
ret
pop
outsb
mov
lret
adc
fcoml
add
add
bound
xchg
pop
int3
adc
lcall
adc
pop
cmp
push
fidivrs
ss
add
xor
pop
sbb
pop
repz
cli
push
pop
popf
cli
add
fwait
cli
inc
pop
fdivrp
xor
sbb
jns
add
and
cltd
push
pop
ficoml
pop
repz
dec
pop
popf
mov
add
add
add
bound
push
into
bound
pop
icebp
popa
cmpsb
push
mov
bound
adc
pop
jp
pop
push
pop
out
jl
jo
jb
mov
das
bound
and
push
push
bound
push
xchg
bound
push
sbb
push
sbb
push
je
jo
jb
mov
push
and
adc
adc
adc
add
inc
bound
adc
fisubl
adc
fbld
rcrl
jbe
inc
cld
mov
repnz
jl
jo
mov
bnd
call
adc
std
icebp
cmc
mov
repnz
cmp
loop
cmp
repnz
sbb
repnz
bnd
add
add
add
cmc
jge
jae
std
icebp
out
cmc
mov
repnz
sti
icebp
pop
sbb
repnz
adc
icebp
cmp
icebp
jg
mov
bnd
cld
icebp
add
sbb
repz
xor
mov
pop
repz
pop
repz
sbb
repz
pop
repz
xchg
repz
xchg
repz
icebp
repz
lcall
add
add
add
sbb
pop
icebp
repz
icebp
repz
inc
repz
icebp
repz
xchg
repz
sbb
pop
icebp
repz
icebp
repz
inc
repz
icebp
repz
lcall
mov
icebp
repz
repz
adc
inc
adc
mov
adcb
mov
jae
popf
lcall
pop
add
add
add
lcall
pop
jp
adc
jp
adc
add
ficomps
adc
pop
clc
adc
pop
adc
pop
adc
cmp
adc
cmp
jbe
jae
jb
aas
add
dec
add
or
add
sub
jb
inc
add
sub
or
add
or
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
test
jmp
lret
cmpsl
fmul
ficoml
jmp
in
xchg
shl
add
mov
xchg
lret
in
movsb
lcall
cmpsl
push
pop
cmpsb
xchg
lret
in
movsb
jp
pushf
xchg
add
add
add
gs
xchg
addr16
add
add
fiaddl
scas
enter
in
cmpsl
jmp
jno
or
int
cmp
push
adc
pop
add
jno
sbb
stos
aad
or
mov
cmc
insb
aad
shrb
jbe
add
jnp
insb
mov
push
mov
or
add
add
add
mov
lcall
add
or
add
or
add
xorb
jle
je
lock
add
scas
add
je
loopne
add
mov
add
arpl
mov
bound
cvttps2pi
paddd
lds
add
ss
sbb
sub
sbb
incl
add
add
add
cmp
arpl
das
jo
add
popf
inc
gs
je
xchg
js
push
push
pop
test
mov
outsb
arpl
gs
jno
arpl
sub
add
sub
cmpsl
arpl
or
mov
fsubrp
cwtl
outsb
pop
out
add
or
fadds
add
outsb
pop
dec
add
add
add
add
or
or
mov
jae
dec
add
or
mov
cmpsl
movsl
outsb
in
lcall
and
push
hlt
sbb
insl
stos
data16
or
add
or
das
or
icebp
clc
add
out
or
xchg
stos
movb
or
add
add
pop
negb
push
dec
ficompl
dec
xchg
xor
out
or
push
shrb
push
inc
rcrb
push
adc
mov
aad
push
add
hlt
mov
lahf
jbe
hlt
xchg
outsb
push
add
pop
push
adc
and
rcr
ljmp
xchg
mov
mov
or
sub
add
add
dec
hlt
inc
movsl
dec
lock
mov
shl
cltd
mov
call
xchg
and
mov
stc
pop
aas
mov
shll
push
leave
imul
outsl
jmp
add
iret
add
in
or
mov
sbb
iret
add
or
add
or
add
add
add
add
or
add
or
add
and
insl
add
jo
push
mov
add
dec
add
mov
add
jb
cmpsb
mov
add
outsb
add
insl
add
push
add
pop
add
scas
jno
pop
scas
pop
add
scas
add
outsb
add
scas
push
add
scas
jb
add
add
add
or
inc
add
scas
insb
add
scas
data16
pop
add
scas
js
or
add
or
add
or
push
xchg
outsb
xchg
js
cmp
jae
sub
movsb
fs
add
or
je
add
add
or
add
or
add
or
add
add
or
add
add
outsb
or
add
or
xor
jl
or
add
or
int3
xor
push
xchg
in
pop
xchg
lcall
add
sub
or
mov
add
mov
add
mov
add
mov
aad
movsb
mov
mov
jb
cmpsb
xchg
pop
inc
pop
sbb
add
add
add
and
bound
add
fdivrs
add
pop
insb
jne
roll
call
and
lahf
in
and
mov
pop
mov
mov
or
pop
mov
jb
in
push
ficomps
jb,pn
jbe,pn
int3
mov
pop
lea
stos
incl
add
add
add
movsb
imul
int3
pop
push
out
jno
dec
out
fldl
mov
lea
mov
fmulp
daa
and
mov
xchg
frstor
mov
ss
jle
movsb
das
js,pt
movsl
rcrl
insb
mov
add
in
pop
frstor
dec
loopne
test
stos
inc
push
insb
subb
flds
and
add
add
add
mov
fists
mov
jne
add
cs
cmp
fbstp
dec
insl
xchg
leave
orl
fists
leave
bound
je
out
xchg
leave
dec
and
xchg
fstp
sbb
xchg
fstp
notl
fstp
xchg
fstp
xchg
add
xchg
and
filds
add
add
add
xchg
jg
bound
and
mov
dec
jl
insb
inc
jl
insb
jbe,pt
outsb
ss
in
or
push
pop
mulb
push
mov
inc
jle
fistpll
mov
and
sbb
loopne
cli
and
js
or
sti
and
mov
add
add
add
lcall
fiadds
cmp
fmulp
inc
inc
ffreep
mov
jecxz
mov
out
popf
mov
jo
xor
push
outsl
push
adc
inc
outsl
push
push
mov
jo
outsl
push
jno
jle
out
pop
pop
jo
outsl
push
xor
rolb
add
add
add
add
xor
ds
insl
or
and
jecxz
outsb
cmp
loop
outsb
sub
fildll
jecxz
outsb
cld
loop
outsb
xor
loop
outsb
add
ljmp
insl
fidivs
pop
fisubrs
fcmovu
mov
insl
fidivrs
mov
jne
sbb
jne
cltd
ret
sbb
add
add
add
jne
mov
jne
aas
ret
mov
jne
sbb
jne
xchg
shlb
sbb
repnz
sbb
and
sbb
adc
lods
pop
loopne
lods
pop
iret
cs
ficomps
lret
push
test
fsubrp
movsl
lahf
in
add
test
fldl
pop
push
inc
push
sub
inc
push
push
int3
fcomip
push
filds
add
add
add
add
sub
add
push
int3
fistpll
gs
add
push
mov
int3
push
dec
filds
add
jb
sub
sub
rcr
push
ljmp
push
push
dec
push
push
aas
push
dec
push
sub
sbb
push
test
lods
push
dec
fildll
jno
mov
jecxz
add
add
add
divl
pop
insb
loop
xor
jl
fidivs
lea
pop
inc
scas
or
test
imul
inc
lahf
jecxz
in
loope
cs
loopne
fdivl
fists
inc
fisttps
sub
push
inc
jmp
nop
inc
cmp
or
fisubrs
js
pop
xor
ljmp
ljmp
add
aaa
sub
push
loopne
call
jb
fisubrs
mov
xor
mov
cli
fnstcw
iret
imul
push
or
fidivrl
movsl
ret
lods
ret
es
cs
es
cs
es
xchg
fildll
imul
in
ret
in
mov
pop
dec
imul
add
add
add
les
push
mov
xchg
push
lods
jl
mov
cwtl
dec
mov
outsl
xchg
jl
push
outsl
xlat
fidivl
outsl
mov
add
pop
jns
pop
into
js
mov
push
outsb
addr16
xor
nop
add
mov
outsl
in
and
push
bound
adc
xor
out
cmp
shll
add
add
add
sub
inc
int3
addr16
adc
dec
jns
dec
jns
dec
mov
pop
xchg
cmpsl
aad
and
sbb
xchg
and
xchg
flds
aaa
mov
xchg
cmp
xor
into
outsl
jbe
fisubrs
xlat
fisubrs
xlat
fisubrs
xlat
fisubrs
xlat
fisubrs
add
add
add
fisubrs
cmp
add
jmp
pop
loopne
ret
xchg
stos
inc
pop
mov
push
inc
xor
mov
pop
hlt
rcrl
cmpsb
cmp
sub
andl
cmp
aas
cmp
or
sbb
jno
ds
mov
add
add
add
rorl
or
rorb
in
rorb
mov
pusha
aaa
or
sub
movsb
mov
out
mov
mov
out
out
scas
inc
ljmp
clc
aaa
xchg
cli
sub
fdivl
adc
mov
xchg
lods
push
add
mov
pop
adc
mov
add
add
cltd
sbb
inc
add
cwtl
push
jle
jle
das
pop
cltd
sub
dec
es
stos
jmp
aam
stos
jmp
jg
arpl
push
loop
aaa
xchg
in
cmpb
or
push
leave
push
pop
pop
add
test
insl
fstpt
add
mov
dec
pusha
loope
mov
push
mov
add
add
add
fs
pushf
or
dec
js
mov
pusha
add
inc
add
pop
xchg
push
mov
ret
mov
add
addr16
jo
pop
adc
pop
sbb
mov
mov
cwtl
fisttpll
mov
xor
cmp
pop
or
lcall
pusha
cmc
sub
popf
dec
arpl
add
scas
fiadds
add
add
add
cs
push
mov
cmpsb
xlat
jmp
xchg
cmp
xchg
rorl
ja
add
pop
pop
and
mov
lcall
mov
jl
mov
inc
cmp
xchg
imul
xor
imul
xchg
push
sbb
rorb
cmp
add
add
add
cmp
popf
dec
xchg
repz
jp
adc
pushf
loopnew
add
imul
imul
and
add
mov
adcl
outsl
loop
ficoml
mov
push
mov
sahf
dec
mov
mov
and
cmpsl
sahf
je
repnz
cwtl
cwtl
xchg
xchg
aam
dec
add
add
add
xor
mov
scas
xchg
add
mov
shl
and
cmpsl
mov
insb
sbb
dec
in
mov
sbb
xchg
in
xchg
cmpsl
jge
xchg
or
subb
lea
ret
fwait
inc
rolb
sub
fldcw
dec
jmp
xchg
js
add
add
add
in
push
ja
jbe
xchg
adc
ret
nop
xor
mov
movsb
popf
es
jne
and
jb
xchg
jnp
add
mov
test
call
mov
mov
mov
test
daa
jno
lret
mov
push
and
xchg
popf
mov
es
test
mov
xor
sub
cmc
pop
xchg
add
add
add
stos
cwtl
out
cmp
or
add
xorb
pop
jno
pop
pushl
sub
mov
sti
fucom
inc
push
xor
xor
sti
add
lcall
mov
loope
mov
dec
adc
inc
xchg
sbb
imul
call
inc
rorl
fwait
inc
pop
stos
add
add
add
dec
cli
push
pop
dec
insb
les
jnp
shll
jge
lret
lods
jp
lret
mov
sahf
insb
lds
data16
mov
mov
std
jle
mov
ret
push
ror
add
repz
mov
sub
movl
pop
vpsllq
jmp
mov
popl
add
add
add
es
lret
std
arpl
mov
fmul
jnp
mov
aas
je
std
push
dec
fmul
mov
insb
cs
imul
std
xchg
movsl
adc
mov
inc
add
or
xor
lock
xchg
repz
ret
fxch
stc
jl
add
lret
fsubr
cmp
cmc
lods
inc
leave
aam
ret
add
add
add
xchg
cmc
ffree
xchg
rol
pop
fimull
mov
mov
fimull
xchg
or
mov
push
fimull
pminsw
mov
rol
and
mov
mov
pop
mov
mov
lock
cli
inc
pop
pop
inc
stc
aad
dec
push
scas
pop
les
insl
jbe
aaa
inc
sti
lock
add
add
psubd
mov
push
adc
adc
cmp
mov
cli
inc
out
pop
pop
cmp
jle
dec
aaa
in
daa
mov
stc
sbb
jg
jg
mov
inc
cmc
add
cli
sbbl
rol
pop
fwait
cmp
mov
inc
add
add
add
add
mov
pusha
outsb
xchg
mov
jne
cld
jp
mov
adc
sub
imul
mov
push
mov
mov
dec
cli
inc
mov
fdivrs
inc
cld
stc
aam
mov
fidivrs
icebp
out
movsl
fnsave
lcall
cld
es
pop
xor
mov
adc
jns
add
add
add
jge
cltd
sti
or
rorl
add
std
fimuls
adc
stc
push
dec
jae
and
dec
xchg
mov
xchg
cs
repz
ret
inc
pop
repz
sbb
bt
jno
ret
cmpsb
pushf
mov
out
add
repz
jno
repz
test
pop
repnz
lea
add
add
adc
repz
jb
inc
repz
cmp
repz
xchg
in
pop
hlt
repnz
xchg
sbb
mov
pop
sub
bnd
cmp
mov
repnz
adc
pop
mov
cs
xor
add
mov
repnz
sub
out
mov
aam
cli
jns
inc
sbb
test
shrl
cltd
pause
outsl
in
rcrl
arpl
cmp
xchg
test
hlt
stc
std
jns
mov
clc
test
sti
pop
add
sbb
lret
stos
hlt
inc
inc
fwait
je
and
stos
adc
xchg
xchg
add
add
add
or
xchg
idivb
cli
or
ret
mov
and
test
xchg
sbb
adc
mov
hlt
mov
jle
pop
adc
cli
mov
hlt
in
popa
mov
cmp
dec
push
stc
dec
push
scas
iret
mov
xor
mov
clc
ss
scas
cli
loop
sbb
jns
ja
int3
add
add
add
mov
xor
jp
insl
xchg
ds
mov
xlat
xchg
xlat
mov
cmp
stos
mov
orb
in
xchg
dec
stc
cmp
push
mov
sbb
pop
clc
cltd
out
addb
mov
clc
cltd
lock
mov
add
cmp
addr16
pop
mov
lret
mov
add
add
add
add
inc
push
mov
ljmp
mov
aaa
add
sub
call
inc
pop
jae
add
out
decl
adc
out
adc
js
or
pusha
xor
add
fisubs
and
inc
add
mov
add
mov
setge
push
pop
psadbw
add
add
add
aaa
mov
in
pop
jbe
test
add
js
add
rcr
push
or
push
hlt
mov
sbb
mov
sbb
dec
xchg
jl
nop
pop
in
or
xchg
or
or
mov
add
aad
out
incl
add
xor
or
xor
cmp
add
add
dec
add
jecxz
rorl
dec
jns
adc
in
out
xchg
add
pop
sbb
imul
sbb
decl
add
mov
jle
or
mov
mov
or
push
pop
test
mov
jecxz
add
inc
clc
inc
or
std
aaa
sti
repnz
dec
mov
jmp
add
inc
gs
cli
mov
add
add
rorl
or
adc
mov
xchg
test
or
std
out
xorl
outsb
jbe
sub
fisttpl
jb
add
stos
jo
add
scas
add
pop
fwait
subl
lahf
push
xchg
jmp
mov
loope
dec
imul
mov
sub
xchg
std
mov
les
add
add
add
ret
call
mov
mov
sub
mov
pop
push
mov
add
dec
ret
mov
mov
push
mov
call
stc
idiv
call
or
xor
sbb
add
adc
or
ljmp
ljmp
sub
add
add
mov
leave
ret
push
mov
ljmp
cmp
xchg
pop
das
mov
mov
mov
add
sbb
mov
mov
inc
dec
mov
pmulhuw
pushl
fimull
in
jmp
mov
pushl
cmp
and
mov
aam
shrl
add
jbe
movzwl
add
add
add
mov
sti
in
loope
dec
add
sbb
in
ficoms
addb
mov
push
sti
dec
sti
mov
lods
jle
mov
adc
call
push
or
sbb
outsb
repz
jbe
cmp
addl
icebp
dec
add
sub
cld
out
add
add
add
add
xchg
xchg
mov
xchg
jnp
cmpb
call
test
jno
xorb
jl
mov
add
sub
je
cli
aaa
aas
jmp
or
sub
sub
insb
shll
les
es
nop
out
out
stc
call
jnp
test
add
in
push
add
add
add
mov
aam
ja
sbb
jg
push
jno
jb
or
rol
out
mull
jle
mov
out
jmp
leave
add
call
push
in
push
mov
decb
adc
mov
movsb
in
call
imul
je
loop
mov
fldl
add
add
add
xor
cmc
ror
idiv
scas
dec
add
push
jno
jmp
imul
push
ss
push
hlt
data16
jo
mov
outsl
mov
dec
call
or
mov
test
add
fwait
mov
sbb
cmp
or
add
nopl
lock
dec
or
push
movb
add
add
pushf
rclb
call
aad
test
fstp
inc
rolb
dec
sti
das
notb
cli
sub
or
inc
fistpl
stc
leave
pop
or
xorl
fimull
inc
es
fistps
cwtl
fsubrs
bound
ds
sti
cli
mov
xlat
push
push
sub
cld
sub
jecxz
mov
inc
movl
add
add
add
xlat
dec
sub
mov
stos
cmp
sbb
aad
push
dec
ret
iret
xor
enter
pop
inc
xchg
lds
pop
rol
sub
out
jbe
loopne
inc
inc
push
pop
inc
rdtsc
mov
sub
sub
sbb
hlt
pop
dec
pop
or
sub
pop
push
shlb
sbb
add
add
add
icebp
sub
sub
ds
inc
add
push
ljmp
dec
test
jb
leave
inc
call
daa
inc
rcll
cld
xor
movsl
dec
ja
mov
dec
lds
mov
xchg
xchg
sub
lds
jg
dec
out
scas
aas
arpl
mov
jbe
dec
sub
mov
sbb
pop
add
add
add
sub
out
les
ss
xor
dec
daa
and
fdivrl
add
aam
cmpsb
es
flds
sahf
xchg
js
pop
std
fcom
stc
rorb
arpl
ficompl
push
nop
rol
stos
or
or
fldenv
cmp
or
mov
xlat
add
mov
lds
adc
in
adc
fsts
arpl
dec
fistpl
add
add
add
xchg
fcoms
dec
mov
ds
dec
into
call
pop
mov
fldt
fsubp
mov
xchg
std
dec
ja
mov
dec
push
clc
lea
add
into
cmc
sub
outsb
mov
ja
mov
ficomps
push
call
add
addr16
testb
xchg
pop
ficoms
ffreep
popf
inc
inc
add
add
add
mov
lea
adc
mov
pop
repz
push
out
movsb
jo
xlat
pop
jg
icebp
leave
fisttps
fimull
fs
fisubl
das
fildll
jae
pop
sub
xor
xor
addl
jp
dec
sub
loop
inc
vmovntpd
sub
sbb
and
fldt
insb
jo
add
add
add
lock
add
mov
out
fistpll
push
mov
insb
dec
aas
dec
repnz
sub
aas
enter
inc
out
movsl
lahf
stos
add
dec
fldt
popf
fistpl
pop
inc
pop
mov
fisubrs
shrl
daa
add
scas
mov
mov
or
add
add
add
jbe
and
push
mov
or
jbe
shr
lret
push
ja
test
push
loope
std
es
repz
sub
aaa
fisubl
dec
xor
inc
sbb
adc
add
ret
pop
shrl
sub
shrl
loop
add
in
inc
ja
insb
add
add
add
popf
dec
or
or
shll
addb
xor
mov
roll
movsl
xchg
inc
sahf
sub
rcll
rorl
cmp
imul
dec
fildl
xlat
push
or
or
inc
inc
jb
mov
and
dec
add
add
add
xor
fadd
pop
sub
sub
loop
inc
xchg
xchg
shlb
leave
jae
scas
xchg
cmp
xchg
sub
inc
repz
add
or
fistpll
dec
pop
call
fnstcw
inc
lret
xchg
stos
notl
sub
mov
adc
inc
stos
popf
dec
push
xchg
cmpsb
xchg
fbld
sub
inc
jecxz
pushl
shrb
popf
leave
iret
pop
jnp
incl
add
add
add
or
mov
andb
in
fdivl
jb
mov
daa
dec
dec
inc
stos
push
xchg
push
mov
hlt
mov
out
scas
fstpl
data16
in
xchg
mov
or
decb
test
or
pop
xchg
lahf
mov
add
cltd
mov
mov
jl
or
add
inc
sbb
ret
mov
xchg
pop
lcall
push
sbb
xchg
int3
popa
dec
cld
pop
jno
mov
dec
mov
or
jle
into
cmp
mov
movsl
mov
sbb
nop
mov
mov
addb
mov
jg
or
inc
xor
add
add
add
inc
bound
arpl
lcall
rorb
mov
mov
and
or
outsb
dec
push
sahf
sahf
aaa
stos
jl
cmp
cmc
jecxz
mov
insl
ret
data16
push
sub
cmp
mov
cmc
or
mov
xor
dec
das
mov
add
add
add
arpl
jne
cmp
cli
pop
outsb
xlat
xchg
pusha
xchg
ss
adc
jnp
insl
scas
xor
cmp
ret
cmp
ss
dec
sub
inc
mov
insb
or
movsb
or
inc
mov
negl
arpl
inc
lods
call
xchg
push
sahf
out
jl
sub
dec
dec
or
add
add
xor
rep
xchg
ja
xchg
xor
add
jmp
scas
cmpsl
outsb
inc
ljmp
lods
test
inc
mov
movl
scas
sbb
mov
cmp
mov
popa
in
push
out
cmp
add
sbb
cmpsb
mov
out
rorb
fidivrs
out
add
add
add
sub
fistpll
cmp
ljmp
mov
pusha
int3
jle
lea
out
pop
xchg
insb
cltd
jae
pop
jne
mov
jne
lea
mov
cmp
lods
sbb
aas
popf
mov
bound
add
lea
add
add
add
lea
lods
fsubrp
ja
pop
mov
ficoms
add
mov
ja
popl
pop
cmp
mov
cmp
in
jns
pushf
add
cmp
scas
scas
xor
nop
and
lea
mov
es
pop
push
sub
int
sub
add
xchg
popa
test
fdivs
add
jno
xor
mov
test
add
scas
test
sahf
add
je
mov
mov
inc
daa
jmp
mov
xor
inc
adc
mov
xlat
or
daa
adc
xor
mov
aaa
hlt
ss
push
popf
dec
int3
sbb
call
add
add
add
fmull
mov
mov
mov
inc
arpl
outsl
xchg
andl
cld
cmp
add
cmp
das
daa
pushf
mov
add
push
sbb
ss
stos
ja
xlat
cmp
call
xchg
addr16
jecxz
mov
ss
imul
nop
ss
fadds
add
add
add
push
lcall
shll
push
cmp
mov
in
push
ja
scas
in
andb
mov
scas
mov
fimull
mov
shlb
mov
cmp
mov
pushf
jno
inc
aaa
and
xchg
cmp
cmc
push
mov
test
sbb
aas
add
add
add
fisubrl
mov
or
jb
cmpsl
stos
mov
cmp
les
mov
or
lea
jns
mov
cmp
push
ficompl
iret
mov
xchg
mov
mov
stos
addb
lahf
pop
shl
xchg
fidivrl
jae
cmp
cld
pop
imul
lcall
repnz
add
add
int
mov
mov
loop
jl
mov
push
jecxz
cld
ja
fdivs
fwait
sub
xchg
jb
cmp
lcall
jecxz
rcrb
inc
xor
pop
es
divb
ja
out
adc
stos
shrb
pop
adc
stc
pop
jne
inc
insb
xchg
xor
dec
jne
pop
dec
cmp
aas
aaa
xchg
add
add
add
pushf
lods
nop
rolb
fldenv
jo
or
fwait
pop
jle
out
adc
xchg
inc
push
fsubrs
jns
and
mov
jnp
dec
shrb
fstps
jns
push
and
hlt
xchg
gs
sarl
and
xor
sbb
cld
pop
pop
aaa
xchg
call
push
mov
fsubs
add
add
subb
fsubs
repnz
mov
and
mov
fldenv
add
fsubs
mov
mov
data16
pop
enter
push
pop
cld
add
xor
fdivr
pop
cld
push
inc
mov
cld
jne
and
fcmovbe
bound
adc
cld
das
cmp
mov
mov
cmpsb
or
fnstsw
add
add
add
cmp
call
mov
pop
mov
lret
xor
mov
repz
icebp
jge
add
and
inc
cmp
inc
add
sar
add
repz
icebp
repz
xchg
mov
repz
nop
mov
add
xor
jge
repz
imul
add
inc
or
ss
ret
jae
mov
add
add
clc
into
xor
repz
aad
jnp
sar
inc
cli
sub
dec
mov
fst
sahf
mov
push
cli
cmp
xor
add
mov
int
cmp
std
in
subb
jns
das
jnp
iret
cld
int3
lahf
mov
mov
mov
fcom
repnz
jns
cmp
xlat
dec
dec
add
add
add
pushf
mov
aad
jge
bnd
jnp
mov
repnz
mov
rcrb
fcmovnbe
pop
xlat
test
push
bound
dec
pop
mov
lret
pop
das
inc
xlat
sbb
fdivs
and
jbe
jecxz
xchg
add
xchg
mov
icebp
fidivs
cmp
rolb
sbb
add
add
add
aad
stc
mov
pop
and
dec
les
add
jge
pop
and
mov
pop
cld
pop
hlt
mov
int
or
std
iret
sbb
add
faddl
inc
je
push
out
outsb
pop
in
adc
push
stc
and
add
jp
and
push
xchg
inc
popf
jae
and
ss
aad
icebp
lcall
cmc
or
adc
loopne
cmpb
lock
mov
ret
inc
pop
ficompl
pop
mov
jecxz
jg
jno
aam
test
cmp
jp
mov
outsl
out
popa
adc
sbbl
add
and
lock
xor
outsl
ds
push
lock
sub
xor
xchg
test
add
add
add
lock
mov
outsl
ds
sti
push
jae
push
sub
jae
adc
in
scas
repnz
pause
outsb
sub
repz
mov
loope
adc
push
mov
into
imul
ret
repz
repz
fcmovne
jne
repz
or
pop
repz
add
add
jp
mov
jle
iret
mov
sbb
bnd
scas
mov
xchg
fldl
clc
shrl
xchg
fwait
scas
mov
pop
pop
std
pop
pop
xchg
ret
xchg
pop
sbb
push
fisttpll
add
cmpl
hlt
subl
shll
jnp
scas
repz
scas
jo
outsl
scas
jno
lea
add
add
pop
jne
insl
leave
inc
clc
or
add
xor
add
cmpsl
addl
decb
xor
stos
arpl
or
cmp
inc
jo
wbinvd
mov
into
adc
xor
add
stos
jbe
stc
test
mov
add
push
add
mov
sbb
add
add
add
jne
lret
bound
int
ret
pop
bound
inc
cmpsl
add
repz
sub
mov
stos
add
and
mov
test
insl
sbb
jmp
or
adc
shrl
push
xchg
test
jmp
or
je
outsb
test
cmp
cld
bound
sub
dec
sbb
out
stc
subl
add
or
mov
jmp
or
subb
mov
adc
mov
jmp
dec
dec
push
outsb
ss
mov
mov
sti
pop
mov
lahf
push
mov
mov
mov
add
hlt
inc
test
jb
push
fildll
mov
mov
add
cmp
movsl
cmp
push
out
or
incl
add
add
add
inc
or
sbb
ja
add
mov
add
mov
push
out
inc
cwtl
in
jne
fwait
ret
call
ja
or
sbb
xor
es
fistpll
dec
adc
ds
or
in
or
mov
decl
test
aas
or
pop
ror
lcall
push
je
add
add
add
shll
or
xchg
sub
inc
add
flds
setle
ret
and
ret
cld
adc
or
add
stc
inc
add
repnz
lea
das
xchg
int
add
dec
push
and
or
mov
or
add
daa
inc
add
or
inc
or
add
add
add
icebp
jecxz
cli
repnz
int
shrb
lock
stos
add
sbb
add
rorl
or
movsb
pop
add
mov
jle
into
out
jle
roll
or
add
mov
push
dec
jae
sti
inc
adc
out
or
scas
sbb
mov
sbb
add
ja
repz
add
add
cmp
xor
mov
pop
sub
movsl
add
adc
mov
add
ret
mov
push
mov
mov
sbb
jl
inc
pop
loopne
inc
popa
je
ret
test
lret
in
xchg
add
aas
adc
add
out
jne
push
mov
mov
sub
inc
jmp
add
add
add
or
xor
jne
adc
mov
cmpl
fimull
inc
inc
int3
mov
xchg
out
pusha
adc
or
ljmp
in
sub
inc
loopne
push
je
clc
sar
mov
rcr
std
adc
cmp
in
jb
aaa
andl
add
in
add
mov
add
add
add
test
adc
loopne
xor
sub
in
mov
jmp
pop
and
pop
ret
stos
icebp
pop
ret
out
and
dec
jo
and
add
fsubl
std
je
xchg
repz
add
add
xor
add
jmp
cmp
dec
push
mov
mov
add
add
add
mov
add
push
push
or
lds
icebp
int3
dec
and
mov
and
push
leave
adc
sbb
xor
test
xchg
les
pop
dec
stc
add
jne
or
hlt
push
and
std
push
and
in
and
mov
adc
std
inc
add
inc
incb
cmc
testl
orb
movb
add
add
pop
cmpsl
jle
stc
adc
idivl
aad
cli
jb
jp
push
cmp
jb
sub
cmpsl
out
xchg
pop
xchg
jp
mov
outsb
push
xor
lods
mov
cmp
dec
repnz
push
rcll
mov
mov
fiaddl
adc
and
or
mov
mov
adc
add
add
add
push
in
jo
loop
iret
xor
call
inc
xor
fcmovnbe
xchg
jmp
push
mov
call
shrb
cwtl
push
pop
jmp
jae
loop
jmp
push
inc
add
jmp
ret
outsl
ljmp
lahf
and
ljmp
xorb
cmp
jmp
and
xchg
add
add
add
lret
pusha
mov
ret
push
jne
add
mulb
dec
gs
jns
stos
lock
cmpb
call
or
daa
cmpsl
or
cmp
cmp
scas
xor
push
mov
inc
sub
pop
cmp
cmp
pop
sub
xchg
sub
sub
js
cmc
push
sahf
mov
pop
daa
mov
shl
adc
add
add
add
pusha
sub
pop
lret
aas
push
fbld
loop
mov
fdiv
inc
leave
inc
xlat
call
outsb
cmp
ljmp
cmp
jg
xor
sub
add
fdivp
jns
stos
and
xor
flds
xlat
loope
imul
test
and
loope
movsl
out
fisubl
add
add
add
pop
ret
jle
test
enter
dec
sub
loope
insl
popa
pop
lods
sti
js
movsb
fsubp
mull
push
mov
pop
pusha
test
stc
rcrl
dec
xor
and
sub
dec
pop
mov
es
lods
in
popa
pop
dec
jg
pop
lahf
das
jmp
xor
add
add
fldt
sub
ljmp
out
push
add
dec
das
or
push
enter
fimuls
repz
lret
notl
gs
rcll
ja
xchg
sahf
scas
call
xor
dec
push
andl
jg
sub
adc
enter
scas
outsb
icebp
push
xchg
cmp
add
add
add
mov
mov
scas
xor
jne
jle
dec
mov
cmpsb
jmp
and
jmp
neg
into
or
mov
sbb
mov
repz
lds
mov
push
imul
cld
mov
dec
mov
insl
pusha
nop
push
jo
and
push
imul
shlb
and
add
aam
outsl
mov
insl
roll
cmp
shll
out
lock
pop
pop
pop
push
dec
rcll
out
pop
pop
arpl
int3
leave
sbb
iret
outsl
aaa
repnz
int
fists
ret
xor
push
jp
insl
jmp
js
jns
fsubrp
adc
js
ret
in
dec
cltd
add
insb
fldl
add
add
add
int
adc
pusha
clc
adc
popa
mov
xor
or
or
fistpll
shlb
ljmp
lret
addl
jle
pop
mov
dec
mov
fcoms
jle
push
lea
jns
and
fmulp
movsb
mov
outsb
fmulp
inc
test
lds
fcmovb
add
add
add
push
cmpsl
bound
inc
roll
je
pop
push
aam
cmp
and
aaa
pop
subl
ror
fsubp
stc
fldenv
lock
push
fdivl
movb
dec
xchg
inc
dec
xor
repz
inc
and
rcrb
loopne
dec
push
aam
repz
loop
add
add
add
mov
lahf
and
jp
imul
add
lret
mov
cmpsl
cltd
xor
std
and
mov
pop
fdivr
or
and
jle
or
insl
faddl
into
dec
ror
add
add
jns
cmpsb
sub
adc
lock
call
or
lea
dec
mov
pop
add
add
add
dec
mov
mov
cwtl
cmp
inc
stc
push
mov
adc
add
call
or
in
pop
mov
callw
dec
outsb
jl
lcall
inc
mov
scas
sahf
test
jp
jecxz
jmp
fld1
mov
rol
gs
mov
mov
mov
add
add
add
jno
add
mov
pop
dec
lea
fisttpl
int3
int3
out
xor
mov
aam
decl
fimuls
sub
fists
mov
pop
or
mov
ljmp
cwtl
adc
sub
xlat
aaa
aaa
mov
sbb
sbb
scas
xchg
ds
mov
cmpsl
pop
decb
add
add
add
push
mov
test
mov
orb
xor
dec
xchg
popf
adcl
xchg
lea
jo
adc
xlat
lea
sbb
pop
add
add
inc
push
popl
in
int3
popf
inc
test
mov
adc
aam
push
xchg
popl
add
add
add
xor
cwtl
jmp
orb
scas
pop
mov
lea
faddl
and
cmp
mov
mov
fwait
lods
out
mov
sub
and
jmp
mov
scas
pop
dec
gs
add
call
pop
xor
jbe
mov
adcl
cmc
push
lea
add
add
or
mov
mov
mov
add
mov
pop
push
inc
mov
push
pop
add
jl
push
lcall
xchg
pop
xchg
lea
pop
mov
enter
mov
xlat
mov
cmpsl
lea
push
xchg
push
mov
testl
movsb
outsl
add
add
add
xchg
push
mov
push
callw
push
jbe
sub
fwait
add
ljmp
or
sti
mov
aaa
ficoms
jmp
add
icebp
pop
lea
fidivs
hlt
scas
ret
mov
inc
callw
mov
add
xchg
jne
cwtl
in
xchg
and
iret
call
add
add
scas
testb
mov
cmp
pop
add
lea
push
ret
mov
mov
stos
mov
js
mov
inc
add
add
add
jnp
mov
cmp
out
jle
aaa
es
lcall
lea
add
cmpsb
jle
sbb
add
add
add
mov
outsl
dec
jl
loop
add
ja
add
inc
mov
pop
mov
aam
sahf
jmp
mov
out
sub
cmpsl
mov
or
cmp
add
cmp
lea
push
mov
lahf
mov
add
iret
sbb
add
add
movsb
xchg
add
jns
inc
mov
scas
and
out
add
movsb
xchg
out
push
pop
cmpsb
pop
cmp
xor
adc
mov
xor
adc
cmp
jbe
fistps
jle
call
fwait
add
cmc
popf
mov
pop
pop
mov
cmp
xchg
inc
xchg
test
and
daa
pop
add
add
add
xor
add
es
mov
stos
cwtl
cmpsb
xor
xchg
xlat
mov
jbe
nop
cmp
add
rcrl
in
cmp
mov
add
dec
jecxz
loope
cmp
leave
popf
testb
push
mov
sub
call
xchg
sub
jb
jmp
add
add
add
std
sbb
cs
xor
outsb
fldt
jnp
jle
adc
cmp
enter
dec
lahf
add
dec
jge
push
lcall
adc
add
cld
xchg
cmp
mov
dec
mov
inc
mov
clc
rcrb
loop
sarl
mov
out
pop
mov
add
add
add
inc
std
xchg
hlt
mov
mov
inc
cmp
adc
mov
ret
xor
adcb
in
testb
daa
mov
sbb
repz
mov
repz
lret
repz
inc
fincstp
test
icebp
mov
or
jno
or
jo
cli
inc
xchg
add
add
add
jno
scas
cld
out
jae
pop
fidivl
lret
push
scas
int3
clc
adc
sub
stc
pop
pusha
inc
sbb
loope
sti
jns
popa
mov
cld
cld
outsl
pop
adc
jp
movsb
mov
mov
popf
scas
mov
cld
ja
mov
pop
push
loopne
xchg
add
mov
insb
pop
add
add
add
add
dec
mov
add
js
adc
lcall
mov
std
cmpsb
jp
cmp
fnstenv
mov
jecxz
mov
mov
lcall
and
mov
add
fimuls
jmp
testb
mov
cmp
repnz
inc
repnz
subb
xor
imul
add
add
add
stos
loopne
pop
xor
cmc
mov
dec
cmp
add
out
in
mov
add
xor
push
filds
mov
inc
push
mov
repnz
je
test
mov
mov
mov
xchg
mov
repnz
xchg
dec
fucomi
xlat
inc
mov
bnd
add
aas
xlat
test
jp
push
lahf
sahf
hlt
mov
cmp
add
add
add
in
mov
push
inc
lahf
aam
xor
inc
push
pop
icebp
pop
stos
fidivl
sub
loope
sub
add
imul
repnz
and
shlb
xor
inc
pop
jb
aaa
mov
mov
inc
std
mov
clc
ret
pop
pop
jno
cmp
mov
inc
std
mov
stc
ret
add
add
add
add
icebp
repz
mov
mov
ja
inc
imulb
inc
repz
push
cmp
std
xchg
repz
xor
mov
repz
incl
leave
iret
mov
dec
mov
jnp
cmp
bound
clc
mov
inc
dec
adc
repnz
fs
inc
jnp
leave
add
add
add
std
push
scas
in
sub
xchg
stos
sbb
fildl
cli
sub
mov
sbb
inc
mov
dec
xchg
rol
cld
cmpsl
pop
arpl
jg
lods
jb
sub
mov
xchg
sti
xor
shlb
xor
jnp
mov
mov
cmc
clc
mov
mov
dec
inc
xor
dec
add
add
add
add
pop
ret
dec
jmp
mov
sbb
clc
sub
push
and
or
lret
or
das
cwtl
cmp
call
xchg
mov
jns
test
xor
mov
xchg
fs
lods
adc
cmpl
repz
dec
std
or
mov
sbb
xchg
add
add
add
mov
cmp
mov
fldenv
adcl
xlat
sbb
icebp
adc
cmp
imul
and
sar
sbb
cld
push
in
ss
pop
sahf
sahf
je
movsl
aam
fcmovnb
pop
lret
and
rorb
jno
in
ficompl
lret
mov
push
xor
add
add
add
mov
lods
mov
pop
daa
test
pop
add
sarb
jge
rcrb
repz
rclb
push
nop
ja
enter
inc
fmull
add
and
std
xlat
mov
pop
inc
and
inc
xor
aam
nop
mov
hlt
mov
dec
aam
je
inc
add
add
add
add
inc
call
clc
repnz
inc
loopne
jne
sub
pushl
fcoml
loopne
std
jne
ja
call
mov
add
mov
mov
dec
aam
or
inc
or
hlt
addb
push
jecxz
sbb
or
mov
mov
stos
push
testb
or
push
clc
push
mov
add
or
pop
inc
adc
add
add
or
cmp
add
inc
mov
add
or
pushf
add
or
pop
cltd
flds
cmp
or
push
mov
nop
dec
test
xchg
dec
iret
nop
add
or
mov
jns
insl
mov
dec
popa
clc
mov
repz
mov
arpl
add
bound
add
add
add
imul
pop
lds
rol
pop
das
imul
mov
jmp
add
jae
jp
sti
adc
jp
je
push
clc
mov
push
int
daa
add
repnz
jge
mov
popf
scas
pop
dec
mov
ret
cmp
mov
add
out
data16
add
add
add
or
std
add
ret
jb
std
pushf
xchg
mov
ds
pop
mov
lods
pop
call
pushf
cli
pusha
std
xchg
cmpsb
clc
push
xor
outsb
fcom
dec
test
add
mov
cltd
jne
loopne
mov
xchg
adc
jmp
mov
rorb
xchg
loop
cwtl
jg
ret
repnz
add
add
add
dec
jecxz
ljmp
ja
mov
push
dec
lock
push
lcall
fs
push
out
loopne
mov
jbe
add
aaa
pop
enter
movsl
loop
lea
aam
popf
dec
cmovs
aad
pusha
pop
dec
decl
js
dec
push
daa
ret
loopne
cmp
jnp
clc
rcrb
jne
jbe
clc
add
add
add
xlat
bound
loope
add
add
mov
add
jae
push
cmp
mov
mov
cmpl
mov
push
loope
add
roll
push
nop
adc
or
outsb
xchg
or
mov
sub
and
sbbl
add
push
adc
fmul
cmpb
add
add
add
inc
adc
mov
das
es
je
std
or
test
sti
inc
mov
cmp
call
cmp
fimull
test
cmpsl
lcall
nop
push
imull
xchg
mov
ljmp
out
mov
push
and
ja
repz
jle
mov
add
push
inc
stc
add
add
add
mov
add
sub
pop
hlt
ss
cmpsb
mov
jecxz
push
sbb
out
test
jmp
mov
jl
xchg
test
mov
or
in
or
dec
test
adc
push
ljmp
insl
pop
out
mov
fs
cmpsl
xchg
push
hlt
std
sahf
aaa
das
insl
xchg
popa
hlt
push
pop
das
insb
std
xchg
add
add
add
std
hlt
jle
jae
popa
pop
cwtl
fs
dec
ss
icebp
dec
loope
push
in
jbe
adc
mov
std
fwait
push
hlt
jae
mov
push
xchg
push
push
and
mov
hlt
push
sub
in
test
std
je
hlt
push
popf
andb
xor
add
cmp
std
add
add
add
add
std
jne
sbb
cmp
and
outsl
movsb
hlt
pushl
inc
in
js
leave
jmp
push
sbb
in
add
std
jne
in
jmp
in
jmp
decl
inc
insl
push
push
imul
std
push
and
push
pop
xlat
sahf
sub
push
xlat
pop
cld
pop
call
push
enter
add
add
add
add
push
mov
push
loope
pop
rcrb
insb
mov
loope
fcompl
int
enter
mov
dec
repnz
inc
std
rorl
xor
mov
mov
xlat
inc
or
lret
fimuls
sbb
sbb
mov
mov
adcb
loope
sbb
popa
and
ficompl
mov
cmpsb
lret
push
sbb
add
add
add
add
addr16
cmp
pop
insl
mov
aas
or
repz
into
sbb
mov
mov
iret
adc
gs
xchg
and
insl
out
xchg
lds
adc
loop
pop
cmp
xchg
out
push
xchg
mov
lahf
adc
int3
imul
loope
or
add
add
add
bswap
fcmovu
fistpll
dec
xor
push
add
es
lahf
insl
push
or
in
inc
lret
popf
jge
mulps
adc
and
pop
ds
xchg
clc
or
mov
rcl
das
add
dec
or
or
notl
push
xchg
sar
mov
xchg
repnz
adc
repz
ret
cs
fstl
add
add
add
adc
sarb
test
faddl
lock
xchg
fisubs
push
jge
mov
addr16
xor
fsubl
pop
jnp
cs
sub
push
dec
adc
jmp
test
cltd
daa
mov
pop
inc
cs
pusha
add
imul
ret
jg
push
rorb
push
mov
add
add
dec
shll
data16
fists
xor
test
js
adc
or
and
mov
frstor
jae
pop
insl
out
ret
imul
clc
fldcw
movsb
repnz
dec
sti
mov
mov
xlat
push
fnstcw
adc
or
repnz
div
add
add
add
add
or
sub
jne
mov
dec
jp
jns
and
fidivs
xor
lds
sbb
add
ret
or
faddp
push
mov
inc
mov
ret
mov
lds
shlb
inc
fsubl
mov
xlat
roll
sahf
lret
sarl
icebp
fstl
push
cmp
add
add
mov
sbb
and
les
lret
inc
mov
push
ja
lds
addr16
inc
sbb
cmpsb
add
cmpps
sahf
popa
scas
sub
or
ljmp
call
popa
xchg
mov
ja
push
cmp
in
aam
scas
pop
sbb
add
add
add
ss
dec
sub
xor
push
lods
movsb
es
sub
xor
fisttpll
sub
xor
mov
rorb
sub
jbe
jb
push
pop
adc
cwtl
cs
cmp
xchg
lcall
fmuls
mov
mov
sub
pop
int3
sub
sahf
jb
mov
mov
pop
hlt
add
add
add
repnz
pop
and
jbe
pop
cmp
bound
sub
xchg
jo
lcall
cmpsb
imul
imul
jbe
pop
push
sub
push
aad
jmp
or
sarl
leave
lds
das
cwtl
aad
sbbl
insl
xor
mov
push
nop
push
scas
mov
outsl
add
add
add
mov
imul
out
and
mov
mov
fists
xchg
dec
lahf
mov
and
imul
push
cmp
jle
nop
lcall
fstpl
pop
push
cwtl
sub
and
mov
ror
fadds
ret
mov
cltd
repnz
mov
das
sub
orb
adc
xchg
xor
fisttpl
mov
add
add
dec
xchg
popf
andl
xor
add
out
and
xchg
mov
imul
mov
jge
fiaddl
mov
xchg
mov
push
dec
gs
in
popa
mov
sbbl
out
jb
or
or
push
scas
lea
pop
jp
add
shll
jg
pop
or
jne
add
add
add
into
je
push
mov
add
or
push
jns
cmpb
mov
dec
lahf
cmp
mov
inc
ljmp
jmp
add
jge
lea
dec
push
leave
xchg
mov
mov
cmp
jne
xchg
mov
and
cmp
cmp
loop
lcall
add
push
ficoms
cmp
data16
or
add
mov
outsb
xor
xor
shll
xchg
cmp
xor
cmp
xlat
xor
mov
fsubr
cmp
push
mov
push
sub
push
clc
call
or
push
cltd
add
add
add
addr16
addb
jmp
inc
xchg
sbb
jl
xchg
xchg
cmpsb
scas
push
test
jmp
push
xchg
jge
or
mov
add
cmp
xchg
sbb
nop
and
sub
and
mov
mov
aas
xor
jp
and
cwtl
add
add
add
mov
xchg
jns
xor
mov
mov
data16
scas
mov
mov
cwtl
push
cmp
push
xchg
out
add
push
jp
inc
xor
cmp
jecxz
gs
ljmp
adc
jb
push
jnp
jl
test
rolb
insl
cmpsb
bound
push
je
add
add
add
or
push
in
jno
mov
arpl
sub
pop
push
cmp
mov
inc
outsb
xchg
mov
xchg
dec
add
cltd
push
icebp
xorb
scas
jb
push
lods
xchg
nop
out
push
fisttpl
jns
test
les
dec
pop
mov
mov
or
add
add
mov
pop
popa
xlat
cmp
mov
fimuls
lds
mov
imul
and
add
and
mov
inc
lods
ret
sub
rcll
cmpsb
jl
call
mov
ret
jne
rorb
sahf
sub
or
push
mov
and
add
add
or
ss
lods
call
daa
pop
push
dec
call
in
mov
dec
aam
dec
jbe
aaa
fidivs
scas
cmp
cmp
lock
pop
sub
cmp
pop
xlat
mov
cmp
xor
dec
lea
sub
gs
jl
ja
arpl
push
push
lea
fs
pop
or
je
add
add
add
adc
repnz
mov
shr
xchg
loop
test
xor
test
shll
mov
addr16
cmpl
aas
ljmp
mov
pop
cwtl
sub
ljmp
fiaddl
das
out
cltd
lea
jno
cwtl
lret
pop
lods
fistps
repnz
push
iret
in
and
add
add
add
mov
pop
outsl
xchg
lahf
push
fucomip
jnp
cmpl
lahf
jle
mov
push
mov
addb
lahf
or
inc
mov
roll
ja
bound
xchg
data16
mov
mov
jg
push
incb
jp
lea
pop
xchg
test
add
xchg
push
sbb
add
add
add
jp
mov
push
xlat
jnp
xchg
in
xchg
lea
inc
jns
or
dec
add
push
int3
jns
cmp
inc
stos
jb
inc
ds
sbb
mov
or
mov
cld
rclb
cli
jp
out
sbb
jns
mov
cwtl
je
sub
cwtl
cwtl
adc
mov
incl
mov
add
add
add
fildll
popa
fs
fwait
inc
push
stc
fs
xchg
add
cwtl
jge
jge
jp
je
je
dec
jne
inc
jp
mov
mov
cmp
test
mov
fists
fbld
mov
inc
xchg
sti
cmp
xchg
stc
fs
dec
cmp
mov
clc
les
push
push
in
test
add
pop
shrl
jnp
jns
sbb
nop
adc
ss
mov
sarl
xor
jnp
nop
ret
cmp
lcall
mov
test
daa
pop
xor
mov
pop
arpl
pop
nop
imul
repnz
ret
mov
mov
cmp
cmc
sub
iret
mov
add
add
add
lods
and
sbb
out
pop
pushf
and
out
add
add
and
repz
adc
ret
inc
pop
inc
out
arpl
lahf
sbb
cmc
jae
fnstenv
int3
lret
insl
repnz
sub
cld
mov
lods
shl
push
fwait
lock
gs
xchg
and
cmc
mov
pop
mov
xor
in
pop
add
add
add
jae
inc
xchg
fmull
mov
repz
nop
mov
popf
sti
popa
mov
repz
nop
adc
push
push
inc
out
int3
jnp
rcll
test
das
mov
fildl
bnd
xchg
inc
cltd
jle
cmp
jg
into
aas
mov
add
add
add
jnp
mov
cwtl
pop
dec
divl
jl
shlb
stc
fs
mov
pop
xchg
pop
push
jb
pop
lock
cld
xchg
push
xor
movsl
leave
cld
xchg
add
and
pushf
nop
or
fists
push
and
hlt
mov
addr16
add
xchg
lods
add
fcmovnb
xchg
int
pop
cmc
add
add
add
scas
ret
addr16
sbb
test
adc
xor
pop
movswl
movl
dec
mov
sbb
lods
sbb
ja
loope
gs
filds
pop
and
addb
xchg
xchg
loopne
insl
insb
loope
testl
les
xchg
icebp
sbb
mov
add
add
cli
mov
ja
xorb
mov
xor
xor
mov
outsl
sbb
pusha
and
pop
sar
fisubrl
dec
push
push
xor
mov
pop
xor
inc
sti
mov
or
sbbb
sahf
orb
add
add
add
lea
push
inc
pause
mov
fldcw
pop
dec
test
xor
test
fnstcw
push
repz
push
leave
test
adc
mov
adc
push
in
xor
cld
xchg
jg
roll
xchg
cmp
cmp
sub
sbb
lock
lea
icebp
adc
sti
movl
add
loopne
mov
jecxz
add
lods
mov
add
sbb
mov
cwtl
xchg
repnz
shll
imul
sbb
jecxz
mov
inc
nop
jne
mov
cld
sbb
mov
insl
sub
jg
push
repnz
leave
nop
mov
xchg
repnz
sub
xchg
mov
mov
std
mov
add
or
sbb
dec
mov
iret
fisubrl
mov
dec
aad
push
popl
mov
sahf
cmovl
push
mov
xchg
les
je
sbb
xchg
int3
jnp
jne
sbb
dec
inc
fdivs
mov
cwtl
jl
sarb
cmp
shlb
stc
sub
mov
js
decb
add
add
add
movsl
fwait
aas
cmpsb
out
lret
pop
in
gs
ret
loop
add
sub
test
ja
int3
inc
cmp
xor
sbb
mov
mov
fldt
test
fwait
mov
jnp
bound
rclb
mov
data16
push
cwtl
inc
add
push
in
je
mov
inc
push
cs
push
mov
mov
add
mov
test
jge
ror
add
pusha
push
call
jo
sti
cmp
outsl
mov
arpl
add
sbb
inc
outsl
int3
cmp
adcl
cmpsl
mov
test
sahf
adc
sub
mov
inc
lods
movsl
fsts
mov
xchg
jno
xor
das
lea
push
add
add
add
aad
cmp
call
dec
lahf
mov
xchg
jmp
jge
mov
jmp
cmp
cmp
inc
enter
je
pop
ret
push
pop
mov
dec
push
out
lock
std
jmp
es
add
sub
fdivrs
repnz
sub
jne
cmp
mov
add
add
add
aam
pushl
mov
jmp
cltd
out
sar
call
mov
incl
mov
mov
incl
mov
jns
mov
add
lret
jl
cmp
push
mov
inc
sub
lret
add
int3
add
cmp
pop
add
add
add
add
add
test
stc
sbb
add
add
dec
movsl
mov
add
or
push
test
jb
jge
loopne
fstp
cmp
test
andb
out
mov
sbb
fwait
inc
in
add
add
mov
inc
xor
mov
scas
lock
setno
mov
mov
movsl
imul
add
add
add
mov
sbb
pop
pop
mov
mov
out
inc
xlat
jb
xchg
jg
xor
mov
je
or
jb
mov
mov
pusha
dec
jecxz
ljmp
je
and
lahf
or
or
push
bound
inc
add
or
rcl
sub
dec
pop
jmp
add
add
add
sub
cmp
mov
fs
jge
std
jb
fisttps
push
pop
mov
out
ret
jl
push
lods
or
pop
les
and
mov
dec
add
sub
in
dec
call
repz
adc
cld
or
pusha
sub
add
add
add
js
or
jo
repz
fiaddl
mov
push
pop
je
js
inc
or
cmp
int
mov
inc
enter
and
mov
jo
inc
cld
sbb
lcall
xor
or
mov
lea
push
call
insl
xchg
clc
push
jae
ret
push
cmp
decl
inc
shll
or
mov
je
add
add
add
leave
add
xchg
add
mov
xor
mov
int3
loopne
jl
lret
push
mov
xor
js
or
clc
and
jl
or
in
adc
sbb
cmp
mov
cmp
add
sahf
std
lcall
xchg
xor
pop
xchg
mov
inc
les
sldt
add
add
jl
xor
mov
les
pop
mov
jl
lahf
sub
mov
jecxz
or
and
adc
ja
dec
add
out
in
call
jg
mov
add
cmp
add
lds
mov
scas
fwait
xor
out
mov
jb
aas
shlb
add
add
add
outsl
lds
inc
scas
push
ds
xchg
lcall
icebp
inc
push
pusha
rcrb
mov
add
rcr
hlt
or
lret
in
jbe
data16
jns
jno
movd
mov
test
outsb
xor
xchg
cmp
pop
inc
push
adc
pop
das
rcr
shl
out
es
xchg
jno
movsl
adc
add
add
add
pop
aad
outsb
adc
inc
in
adc
mov
push
daa
movsb
ja
inc
loope
lock
mov
ret
inc
jmp
fnstsw
mov
xchg
xor
lds
add
into
jg
jns
sbb
sbb
fsubrl
sbb
fbstp
sub
fbld
lods
rcll
dec
sbb
out
mov
add
add
add
stc
fbstp
xchg
fsubl
cmp
push
add
jp
ffree
fisttps
mov
filds
aad
popa
ja
imul
pop
mov
fisttps
xchg
shrl
sbb
push
loop
in
or
lods
mov
mov
and
and
sbb
fcomi
fadds
add
add
add
xor
outsb
ja
shll
addr16
sbb
xchg
xor
mov
pop
loop
push
and
sbb
rcrb
sbb
test
sti
mov
jmp
inc
loopne
icebp
lods
mov
mov
sbb
fcmovnu
mov
call
or
add
add
add
iret
out
fiaddl
lcall
mov
and
movsb
scas
fisttpl
sbb
aas
insb
sub
xchg
pusha
scas
out
scas
insb
sub
test
addb
ja
push
arpl
clc
xor
sub
jmp
dec
or
arpl
in
data16
xchg
ret
mov
lea
jl
arpl
loope
ljmp
add
add
dec
pushf
xchg
pusha
pop
jns
arpl
rolb
xor
mov
push
sarl
push
rorb
jmp
dec
mov
inc
sti
fisubl
sub
adc
mov
mov
pop
fstl
nop
xor
pop
jo
inc
mov
shrb
mov
test
add
add
add
fiaddl
out
daa
or
lcall
repnz
fstl
add
daa
add
sub
loope
loopne
or
dec
sub
ja
loope
lahf
pusha
pop
dec
ret
sbb
loope
lahf
pusha
sarl
push
fadd
out
push
aad
pop
push
leave
push
outsl
push
fimuls
int
mov
add
add
pusha
mov
fists
sub
in
dec
ljmp
xlat
pop
pop
mov
lcall
fisubs
call
ret
fidivrl
call
lret
fisttps
repnz
insl
popa
mov
pop
out
dec
repnz
enter
adc
fidivrs
ror
je
call
fistpl
pusha
fiadds
add
add
add
repnz
test
imul
add
pusha
fdivp
mov
and
shlb
pop
cmp
xchg
stos
dec
mov
repz
xor
shl
dec
rcr
data16
popa
pop
xlat
inc
mov
push
or
roll
sub
push
and
add
add
add
out
jbe
data16
jmp
ljmp
mov
pop
jg
xchg
or
std
jo
ljmp
int
ljmp
icebp
push
mov
dec
aad
out
xor
adc
pop
scas
lahf
mov
pushf
pop
gs
or
fsubr
loope
pop
or
ljmp
out
sub
add
add
add
add
ja
add
repz
pop
pop
mov
mov
dec
mov
aad
xor
lds
add
jae
xorb
jne
mov
xchg
scas
cltd
call
dec
push
xor
add
add
cltd
xor
xchg
mov
jg
sub
jns
js
xor
mov
mov
add
add
add
enter
add
pop
mov
cmp
fildl
aaa
repnz
inc
jecxz
add
xor
jae
push
dec
nop
stos
mov
xchg
cmpsb
daa
xlat
cmp
sub
mov
sub
add
aas
add
aad
aam
icebp
orl
mov
cmp
scas
sub
mov
add
add
add
inc
jle
ja
js
jae
cmp
cwtl
xor
cwtl
sbb
cmpsb
fwait
inc
pop
fcmovnu
jno
mov
xchg
jle
test
push
mov
lea
scas
lods
xchg
pop
mov
in
fmul
mov
pop
leave
add
push
ja
push
and
or
mov
xor
mov
ficomps
mov
add
add
add
add
cwtl
jb
in
test
fcoml
jae
add
add
call
scas
xor
out
xor
xchg
pushf
mov
inc
jle
xchg
mov
orb
ja
xchg
dec
cld
xchg
jmp
in
cmc
sbb
mov
mov
push
adc
fildll
mov
add
add
add
imul
sbbb
sub
xchg
fdivs
cmpsb
sub
int3
or
push
mov
lea
jbe
mov
jae
lea
push
cmp
int3
mov
test
test
out
add
mov
and
mov
xchg
iret
cmpsb
daa
add
add
add
mov
pushl
jecxz
sub
add
cmp
jb
xchg
jecxz
cmp
mov
lds
outsl
mov
xchg
jmp
xorb
ficoms
mov
es
repz
xchg
aaa
popl
cmp
arpl
dec
mov
fnstcw
xorb
adc
add
add
add
popl
cwtl
sub
call
aaa
mov
fidivrs
aaa
cmpl
sbb
push
xchg
add
fcoml
mov
push
imul
divl
outsl
sub
mull
insl
sub
push
les
mov
add
stos
outsb
mov
add
das
stos
cs
cs
add
fidivrs
mov
insb
cmp
mov
dec
sbb
into
ficompl
out
fldt
xlat
mov
arpl
add
jg
mov
cmpsb
ficompl
mov
xchg
sbb
or
push
or
dec
push
xchg
cs
data16
add
add
pop
mov
push
dec
or
dec
push
mov
mov
jae
mov
fiaddl
cwtl
mov
nop
ss
inc
es
mov
mov
mov
sbb
add
or
pop
mov
mov
and
shll
in
mov
xchg
jecxz
add
add
add
add
cmp
cmc
mov
jg
push
sub
jbe
call
sbb
lahf
popl
push
es
daa
jb
mov
sub
pop
add
cld
jne
pop
fdivl
outsl
ss
and
pop
pop
add
mov
xor
cli
push
fisttpll
jns
ja
mov
add
add
add
add
sbb
pop
or
mov
pop
mov
jb
jno
xchg
jno
jmp
cmpsb
daa
outsl
orl
sbb
push
sub
cltd
lods
jo
mov
mov
in
cs
and
sub
dec
ds
sbb
xor
lcall
push
lahf
repz
and
and
or
add
add
add
mov
ret
mov
jg
ljmp
clts
daa
nop
shll
cld
pop
sar
add
std
mov
and
pop
shlb
imul
test
movsl
cmp
inc
adc
cmpb
xor
pop
sub
add
add
add
and
xchg
mov
mov
mov
insl
scas
sarl
mov
aas
pop
lcall
mov
cltd
cmp
sub
outsl
test
inc
adc
lcall
xchg
cmp
xchg
adc
adc
xor
outsl
repnz
pop
cmc
repnz
xchg
mov
add
aad
jne
add
sub
rolb
jge
repnz
cmpb
mov
xlat
sbb
xchg
dec
pushl
jp
lret
jbe
stc
arpl
mov
mov
xor
ret
clc
stos
xor
xchg
std
fidivl
idiv
cmpb
mov
insb
xor
mov
add
add
into
std
xlat
daa
push
jle
jbe
add
mov
and
loope
xchg
mov
pop
pusha
mov
xor
sti
ret
pop
or
jo
ret
outsb
incl
jo
mov
mov
sti
jmp
jg
adc
sub
aas
popf
pop
fcomi
cmp
rcll
sbb
cmp
add
add
add
clc
mov
or
lahf
sbbb
sarb
jp
lods
hlt
xor
inc
jl
inc
stos
or
lock
jnp
mov
mov
lret
xchg
bound
sbb
clc
ret
nop
insb
xchg
icebp
add
test
xadd
cmpb
push
xor
std
dec
inc
lea
add
add
add
repz
adc
sub
xorb
mov
fs
and
mov
adc
arpl
data16
std
repz
mov
adc
mov
xchg
into
add
mov
inc
cld
sahf
mov
jbe
test
push
popf
dec
or
pusha
out
mov
inc
shll
mov
cli
js
das
add
add
add
fcmovne
mov
cli
das
jne
fidivrl
add
cmp
xchg
cmp
rcl
pop
jbe
cltd
mov
leave
fcomps
xchg
dec
ljmp
movsl
dec
and
and
leave
pop
cltd
push
scas
les
mov
inc
mov
mov
xchg
popf
push
stos
jbe
sbb
fimull
add
add
dec
inc
ss
cmp
push
mov
sub
sbb
mov
xchg
sbb
outsl
and
mov
out
jne
mov
sbb
je
dec
xchg
xor
mov
and
fcmovnu
cli
je
mov
stos
mov
mov
ja
scas
repz
ret
xchg
stos
fsubl
outsl
mov
push
test
add
add
add
add
dec
dec
sbb
outsb
sub
dec
push
jle
push
lea
pop
sub
lea
add
mov
cli
pushf
lret
sti
jg
sub
adc
add
or
xchg
cmp
movsl
mov
xchg
sbb
icebp
out
sbb
repnz
xor
int
packssdw
add
add
add
mov
data16
jnp
mov
int3
xchg
mov
pop
add
inc
jo
pop
mov
add
or
icebp
addr16
adc
and
icebp
add
xor
aas
shrb
shl
xchg
mov
mov
mov
testl
sub
mov
incl
add
add
add
dec
jmp
pop
mov
fimull
add
jg
add
clc
rclb
jle
mov
insl
in
add
call
mov
in
in
mov
scas
add
add
ret
push
or
pop
sub
jl
add
cmp
out
sbb
add
add
dec
inc
jae
std
addb
inc
dec
out
in
dec
lret
rcrl
addl
mov
outsb
pop
mov
push
cli
or
xor
dec
pop
add
lret
xchg
pop
dec
push
jno
inc
pushl
icebp
mov
pop
and
fistl
scas
mov
add
add
dec
mov
jle
out
pusha
and
gs
mov
jb
inc
outsb
xchg
sub
mov
inc
add
mov
ljmp
pop
sub
xor
notb
jg
mov
insl
iret
fiaddl
arpl
adc
fs
xor
cmp
out
roll
mov
pop
shll
add
add
repz
jnp
mov
insb
outsl
andl
push
bound
inc
sbb
inc
jmp
pop
in
insb
mov
iret
jae
or
jb
mov
cld
jmp
push
data16
pop
push
cmc
cmc
add
rolb
aam
pop
call
lcall
std
cs
mov
std
push
jb
add
add
add
add
mov
test
add
inc
and
and
std
hlt
pop
movsb
inc
jmp
frstor
add
inc
idiv
lahf
and
dec
incb
inc
xor
std
jmp
fdivs
mov
in
push
add
xor
add
in
ret
lds
orl
aam
je
add
add
add
mov
mov
dec
fdivs
mov
loope
jmp
xlat
aam
mov
add
push
mov
pop
fldcw
jne
jmp
in
hlt
scas
add
inc
loope
push
or
mov
js
lretw
js
sub
lret
dec
aam
out
or
add
pop
mov
cld
mov
add
add
add
lret
shl
nop
xor
and
decb
lret
or
mov
cltd
imul
or
add
or
and
and
or
iret
push
push
std
push
loop
cli
test
add
inc
mov
mov
jg
movsb
arpl
adc
inc
add
add
add
add
sub
jnp
mov
jle
movsb
arpl
or
in
or
jnp
mov
jp
mov
jbe
mov
int3
cs
xor
jbe
stos
lret
out
pushf
add
dec
fidivs
bswap
out
lds
pop
dec
out
insb
add
dec
mov
lret
scas
fstl
enter
stos
roll
add
add
add
mov
cltd
sbb
movsb
or
mov
fs
mov
xchg
mov
jmp
xlat
outsl
and
pop
mov
int
mov
fs
push
or
mov
or
inc
int
std
cmc
es
std
cld
loop
inc
jmp
mov
decb
mov
outsb
jne
std
jmp
add
add
add
or
lds
or
mov
mov
and
pop
pop
test
sbb
mov
xchg
lahf
sbb
add
addr16
jb
cmp
sbb
or
roll
cmpsb
setge
out
addr16
movsl
mov
adc
dec
mov
add
xchg
mov
add
add
cmp
add
lock
aam
sub
push
xchg
mov
mov
add
ret
mov
push
sub
inc
outsl
dec
test
jge
or
inc
rorb
fisubs
shrl
mov
push
xorps
dec
mov
inc
inc
sbb
inc
mov
and
loope
loope
fildll
add
add
add
fmull
dec
shll
and
mov
imul
cwtl
fsubrl
pop
inc
mov
inc
or
adc
lret
out
push
loope
push
fcompp
inc
andl
mov
jle
mov
dec
mov
ds
data16
fldt
xor
xorl
mov
add
adc
fcmovne
nop
test
out
orb
lahf
jb
pop
outsl
jle
jmp
inc
js
add
push
jne
sub
mov
dec
add
and
mov
lret
inc
out
jg
pop
flds
movsb
scas
jno
and
jo
lock
fdivl
aam
shrb
add
add
add
mov
or
ret
add
jge
insb
mov
and
out
cltd
fcoml
ja
fisubrl
ss
mov
mov
cmp
lods
out
fdivrs
fdivrl
mov
lock
ficompl
inc
in
xor
repz
dec
push
ficoms
push
jne
insl
lea
mov
add
add
add
sahf
jno
add
add
daa
imul
fisttps
inc
in
fs
and
loope
sarb
sti
leave
not
out
fimuls
test
neg
sti
sub
test
inc
aam
repnz
lods
mov
shlb
mov
fnstenv
fildll
lods
imul
add
add
add
fildll
cmp
jp
loope
es
das
add
fisttps
xlat
test
in
sub
cmp
mov
ret
inc
xor
jmp
hlt
jmp
inc
pop
aaa
into
in
fistpl
pop
lds
shr
inc
int
add
fwait
cltd
inc
mov
dec
add
insl
mov
pop
xor
add
add
imul
xor
enter
enter
inc
fimuls
stos
push
inc
fs
fsubs
xorl
in
dec
fidivrs
aad
and
mov
bound
out
lahf
imul
mov
cmp
mov
inc
rclb
incl
fisubl
in
dec
mull
inc
add
add
add
dec
lcall
in
imul
lret
mov
pop
rcrl
enter
inc
mov
mov
sub
sub
dec
mov
jne
jb
imul
cmpsb
inc
cmpsb
orl
push
mov
cmp
lret
sbb
repz
xor
arpl
es
movb
add
push
fstl
dec
fildl
je
mov
jns
out
mov
cmp
jmp
lret
lcall
push
and
fmul
test
cmp
sub
int3
sbb
dec
mov
mov
xchg
leave
mov
rcrb
mov
inc
mov
insl
dec
add
add
add
ja
and
fadds
fimull
mov
fisttps
xorl
insb
out
mov
fbld
daa
push
dec
inc
dec
ljmp
insb
fldcw
fistpll
repz
filds
mov
inc
sub
sub
mov
loopne
or
fyl2xp1
out
inc
in
addr16
mov
inc
push
add
lahf
dec
inc
xchg
jp
sub
fmul
fsub
arpl
sub
sub
inc
xlat
stos
sbb
sub
bound
je
popa
xor
pop
mov
jmp
mov
enter
adc
cmpsl
xchg
out
xor
cs
in
dec
sti
jns
out
or
jbe
sbb
lea
add
add
add
mov
or
pusha
lcall
push
mov
mov
popl
xchg
fimull
mov
jo
jne
cmp
mov
add
popa
lea
inc
push
cmp
nop
mov
xchg
test
pop
outsl
jbe
jne
cmc
cltd
push
add
xchg
cld
lahf
sarl
add
add
pop
js
outsb
out
and
mov
lea
call
cmp
mov
add
imul
mov
mov
pop
imul
mov
mov
out
cli
ret
shrl
cmp
lret
inc
sub
mov
cltd
push
cmp
incl
add
add
add
mov
outsl
xor
mov
push
shr
bound
cmp
mov
in
out
xchg
movsb
pop
jg
sub
mov
xlat
add
or
sub
ljmp
out
pop
cltd
sub
dec
xor
insl
roll
or
stos
xor
stos
mov
add
add
add
mov
test
cmp
mov
jmp
in
xor
mov
outsb
dec
fcmovu
dec
inc
mov
cmp
mov
hlt
in
add
cmp
mov
cmc
ss
xorl
mov
xor
mov
nop
xor
bound
inc
jge
add
add
add
mov
fwait
add
stos
lcall
xchg
addr16
xchg
push
add
outsl
mov
mov
xor
add
mov
xchg
or
lcall
jne
or
fwait
rclb
fwait
rolb
jle
dec
adc
or
lcall
add
add
add
test
mov
orl
fiadds
sarb
pushf
jae
es
jbe
int3
add
divb
cmp
xor
jle
mov
jne
mov
inc
jb
mov
pop
mov
cmp
pop
or
and
inc
inc
lods
mov
nop
mov
add
add
add
dec
fsubrl
xchg
xchg
or
cmp
ja
inc
stos
jae
ja
or
xchg
mov
xor
add
ss
not
and
mov
or
inc
movsl
jl
call
out
mov
jns
out
mov
test
mov
insl
sub
arpl
hlt
hlt
dec
add
add
add
jg
mov
stos
aaa
mov
inc
dec
addl
nop
mov
aaa
fstpl
dec
sbb
mov
dec
cmpsb
rcrl
rcrb
hlt
aaa
mov
lods
or
sahf
arpl
cld
add
js
mov
sub
add
mov
mov
mov
and
xchg
mov
add
add
add
add
and
fsubrl
jp
sbb
or
data16
push
mov
xor
push
aaa
xchg
and
cmp
sub
push
iret
inc
shrb
enter
insl
add
lods
mov
mov
clc
mov
or
mov
or
push
mov
xchg
add
add
add
mov
fs
xchg
mov
mov
mov
aaa
push
shlb
xchg
or
ds
or
or
xor
jge
or
popf
mov
cwtl
jecxz
lods
mov
mov
insb
in
cs
jb
push
cmp
mov
outsl
std
cltd
lods
testl
add
add
add
dec
mov
sbb
js
or
fcompl
rolb
add
out
lret
and
insl
hlt
sahf
inc
lahf
push
sbb
xor
mov
cmpsb
pushf
fadds
jnp
jne
mov
sbb
jbe
movsl
js
dec
scas
mov
inc
adc
movsb
pop
xorl
movsb
pop
push
add
add
add
jmp
test
mov
push
mov
movsb
cmp
dec
add
hlt
scas
sbb
xor
sbb
pop
test
cli
fsubs
pop
aam
stos
jle
movsb
icebp
mov
mov
movsb
icebp
mov
jb
push
pop
fwait
movsb
sti
lods
mov
packssdw
fidivrs
add
add
add
mov
push
jne
jnp
iret
xchg
insb
cwtl
movsb
icebp
out
mov
pop
mov
pop
pop
pop
mov
pop
push
pop
jne
xchg
orb
pop
mov
div
repnz
xchg
xchg
mov
add
adc
lea
int
cld
std
daa
movsb
jg
leave
sub
mov
and
movsb
inc
dec
cld
xor
and
add
add
sahf
lea
lods
inc
cld
std
ja
jg
ret
adc
mov
add
adc
cmp
loopne
cmpsl
repz
nop
ds
shl
arpl
adc
fisttps
std
or
repnz
jb
outsb
jns
cld
or
mov
dec
lcall
push
add
add
mov
cmp
fwait
notl
andl
xchg
xchg
pop
pop
sbb
inc
jns
pop
cli
loop
add
dec
je
inc
pop
dec
cld
dec
and
in
sbb
adcl
mov
lcall
cli
sti
fistpll
lcall
repnz
mov
pop
js
mov
mov
add
add
add
lahf
imul
push
jne
jbe
pop
sbb
dec
lahf
jne
imul
push
mov
pop
cld
cltd
pop
movsl
sub
push
mov
ljmp
jno
lahf
popf
push
aaa
jno
push
mov
outsl
insl
and
mov
fbstp
ss
pusha
mov
ret
loope
lcall
add
add
add
mov
add
sti
dec
test
add
add
adc
jecxz
or
sub
clc
or
mov
ja
mov
cmp
icebp
sbb
punpcklwd
mov
sbb
mov
out
add
pop
sbb
cli
mov
nop
stos
adc
icebp
mov
push
mov
fidivs
add
add
add
pop
mov
mov
jno
xchg
or
scas
push
lahf
sahf
cwtl
jge
lret
cmp
mov
pop
mov
inc
shrb
sub
mov
push
pause
repnz
repz
fsubrp
hlt
mov
rolb
sar
jecxz
repz
fnstsw
mov
loope
rol
lret
add
add
sbb
ror
cmpsb
mov
mov
push
lods
dec
rolb
mov
shl
lret
mov
jae
xlat
outsl
mov
push
inc
lods
lahf
cmp
fcomip
sub
repnz
push
in
sub
aaa
loopne
mov
pushf
xor
add
add
add
mov
cmp
scas
out
das
fisttpl
xchg
les
int
adc
cmp
dec
out
adc
push
das
cmp
xchg
repnz
sbb
leave
dec
adc
outsb
jg
nop
dec
push
push
dec
cmp
dec
cmp
sbb
popf
cld
das
jnp
dec
mov
inc
iret
ret
test
lahf
cmc
nop
js
shlb
cmc
enter
les
data16
add
add
sti
jbe
push
mov
fistpl
mov
movsl
divl
lods
movsl
cmp
fsub
xchg
out
lret
repz
mov
daa
sbb
sub
daa
xor
enter
dec
cltd
out
dec
mov
dec
aas
cltd
insb
dec
mov
cs
jl
into
or
add
jmp
add
add
add
and
jmp
or
cltd
std
jmp
loopne
mov
or
je
into
aam
imul
scas
test
push
cmp
clc
shrl
xchg
sti
jb
out
pop
add
imul
rolb
aam
xchg
mov
mov
or
pop
icebp
mov
add
add
icebp
std
pop
loope
mov
adc
push
call
mov
push
push
mov
mov
shl
std
inc
in
inc
and
sbb
shrb
cmpsl
pop
out
call
iret
and
popf
js
add
imul
sbb
imul
sbb
mov
std
shlb
pop
pop
add
add
add
shlb
mov
in
icebp
adc
add
push
push
lods
jg
mov
pop
ds
add
mov
mov
pushf
push
push
mov
dec
dec
dec
pop
and
dec
inc
out
decb
add
xor
insb
or
cld
sbb
mov
mov
int3
sbb
add
push
pop
mov
dec
hlt
mov
mov
mov
add
mov
or
or
ret
and
dec
jne
and
mul
rolb
add
in
incl
out
push
jge
dec
and
sub
or
adc
and
mov
mov
mov
adc
cmp
aaa
pop
clc
push
jmp
add
add
mov
xlat
or
cmpsb
sti
mov
xchg
mov
xchg
push
mov
xchg
aas
pop
cmp
add
mov
xchg
jnp
or
out
fldl
out
dec
inc
add
or
jae
xchg
aaa
add
or
mov
in
loope
sbbl
add
add
add
xchg
std
sbb
xchg
adc
cli
aam
insb
dec
movsl
addl
mov
ds
pushf
push
je
in
sti
jle
in
jbe
cwtl
xchg
pop
insl
inc
popa
mov
mov
test
mov
mov
or
std
movsb
fiaddl
mov
xchg
std
push
mov
dec
mov
inc
add
add
add
or
flds
xor
roll
and
dec
lea
pop
mov
xor
and
out
fs
mov
cltd
subl
loopne
add
push
fsts
adc
std
daa
ljmp
push
mov
add
mov
clc
and
je
add
add
add
mov
call
in
out
jnp
or
mov
inc
pop
lods
inc
dec
orb
xor
add
xchg
mov
cld
xorb
dec
ljmp
repz
ficoms
je
and
decl
adc
push
pop
lahf
inc
add
pushf
mov
enter
or
jnp
cmp
repnz
pushf
jbe
iret
fwait
add
add
add
add
mov
int3
add
sbb
orps
mov
mov
fadds
or
inc
jae
sarl
dec
fldcw
jbe
xorl
push
into
jbe
movsb
dec
or
inc
cmc
mov
daa
clc
mov
inc
aaa
fiadds
mov
icebp
adc
mov
add
pinsrw
ds
add
add
add
data16
add
dec
jle
or
mov
xchg
cld
pop
out
enter
repnz
jns
xlat
outsl
test
jmp
out
xchg
imull
out
out
daa
cmp
leave
add
push
es
adc
ljmp
pop
aaa
cli
dec
frstor
rcrl
notb
out
cmp
mov
add
add
add
out
jo
shrl
jp
scas
pop
ret
lahf
push
das
fstpl
aaa
lods
xor
jae
xor
sub
jno
jne
lock
ds
pusha
and
mov
call
lret
out
jo
inc
stos
jge
add
and
fistps
pop
adc
in
push
fisttps
or
pusha
mov
or
add
add
add
das
gs
xchg
rcl
insl
lock
lods
jmp
adc
dec
or
pusha
cmc
loopne
pop
pop
mov
rcrb
aam
call
xchg
aam
imul
push
mov
int3
fildll
loope
pop
scas
aad
call
int
fimuls
cmp
fistpll
pop
pop
test
filds
add
add
add
leave
js
sub
out
fsubs
mov
lret
icebp
in
pop
loopne
fimuls
pop
pop
stc
iret
outsl
xchg
loopne,pt
out
sub
incb
cmp
sbb
loope
push
jle
fiadds
pop
pop
clc
inc
dec
pushf
ss
jne
test
and
jno
stc
and
jge
loope
mov
add
add
add
sub
jne
sub
and
mov
or
aas
aas
jecxz
gs
stos
mov
jae
mov
push
ja
adc
and
fwait
xchg
or
aas
aas
jmp
cmp
xchg
das
outsb
imul
sbb
ja
adc
push
mov
mov
add
add
add
aaa
aas
iret
movsb
xor
outsb
out
arpl
mov
adc
out
cmp
arpl
push
repz
add
insb
fstpl
in
push
aas
sbb
fnstsw
jns
pusha
mov
dec
lods
sub
call
fucomp
insb
mov
outsl
or
sbb
lahf
fnsave
jns
pusha
scas
mov
loopne
add
add
add
ljmp
mov
insl
insb
xor
insl
repnz
sbb
xchg
pop
sahf
imul
dec
popf
pushw
push
mov
fsubrs
gs
pop
mov
sbb
cmpsl
cmp
pusha
jmp
adc
sub
adc
mov
push
fcom
sub
fbstp
pop
sbb
pop
mov
add
add
add
daa
cmp
pusha
lcall
call
daa
adc
mov
push
xlat
scas
enter
xlat
pop
sbb
add
pop
cmp
pusha
fwait
ljmp
shrb
fildll
push
and
popa
imul
fsubl
mov
fisttps
mov
fisttps
push
sub
lret
scas
push
nop
out
push
cmp
add
add
add
xchg
and
mov
push
pop
ficoms
mov
fbstp
lret
lret
lods
nop
out
ficomps
sbb
enter
pusha
fimuls
stc
pop
fisubrs
add
js
pop
movsb
pop
shrl
stc
inc
mov
cli
lret
xchg
pusha
fisubs
stc
add
dec
pop
pusha
fimuls
add
add
add
inc
mov
mov
test
jg
xchg
popa
pop
sbb
mov
int
push
scas
adc
pop
mov
fwait
movl
leave
popa
fildl
fidivs
adc
pusha
xchg
fwait
xchg
das
aaa
bt
xchg
mov
in
add
add
add
imul
push
aam
mov
sbbb
pop
out
iret
movsb
lret
pusha
add
push
or
inc
sub
mov
aas
lahf
mov
or
imul
cmc
jmp
fnsave
jns
pusha
pushf
xor
jp
out
call
dec
xchg
and
cmpsl
add
add
add
sbb
mov
repnz
add
push
cltd
es
mov
std
jno
std
push
mov
jb
xchg
adcl
inc
jne
xchg
add
push
lea
js
add
sub
pop
and
loop
and
mov
mov
repnz
pop
ss
add
add
add
pop
add
lcall
pop
pop
mov
dec
loop
daa
mov
loop
aad
xchg
shr
xor
pop
mov
nop
sbb
mov
cmpsb
pop
in
dec
mov
or
adc
popa
sbb
dec
lret
dec
dec
std
jmp
cmp
ss
addb
cwtl
jbe
rolb
add
add
orl
xchg
sbb
aam
cmp
inc
mov
dec
jns
jl
push
adc
add
decb
mov
mov
movsl
mov
dec
push
sub
lahf
add
pusha
lcall
and
jg
mov
add
pop
out
sbb
adc
scas
pushf
stos
add
mov
cmpb
jae
add
add
add
xchg
ds
loop
iret
loop
insl
lea
cmp
mov
movsb
jae
dec
inc
out
aas
imul
enter
inc
sahf
fwait
jno
mov
fbld
fcomps
xchg
xor
xchg
add
inc
jae
fmuls
dec
nop
xor
jnp
test
rorl
xor
jae
mov
xchg
ljmp
add
jbe
lahf
int3
or
fwait
lea
mov
ret
clc
cmp
jnp
mov
xchg
data16
fsts
movsl
mov
sub
jns
ds
adc
push
arpl
ret
xor
nop
push
sub
sbb
mov
jbe
pop
xor
jp
std
xorb
add
rorb
jns
add
add
add
cmp
arpl
nop
aaa
mov
mov
sub
cmp
add
inc
mov
mov
adc
mov
mov
lret
push
push
push
dec
icebp
js
mov
xchg
lea
lcall
jne
lods
fwait
xchg
mov
mov
add
add
add
bound
xorl
es
fsubp
mov
add
call
and
cwtl
sub
mov
xor
or
push
lods
xchg
fwait
add
xchg
xchg
negb
xchg
scas
push
pop
or
loopne
xchg
clc
add
fmull
pop
add
jbe
dec
add
add
add
mov
cmc
dec
xor
dec
mov
push
add
inc
push
loop
jno
in
outsl
in
xchg
test
fwait
lcall
xlat
mov
sub
xchg
mov
stos
orb
orl
or
mov
je
in
pop
sbb
xor
popf
cmp
clc
dec
je
fucomip
enter
add
add
inc
nop
sub
je
cmp
mov
push
ljmp
xor
int
add
sti
sub
jnp
adc
add
pop
mov
rcrl
xor
push
call
mov
xchg
xor
ret
mov
insl
out
fwait
mov
xor
and
cmp
push
scas
mov
out
add
add
add
sbb
popa
jb
jmp
or
inc
popf
mov
lret
sbb
push
cltd
hlt
jns
mov
pop
mov
in
mov
sarb
out
cs
outsl
or
nop
mov
andb
dec
sub
pop
and
jmp
push
jmp
and
shrb
add
add
add
or
nop
test
mov
push
xor
in
scas
add
mov
and
mov
clc
icebp
mov
pop
mov
mov
add
enter
fldl2t
in
sub
mov
cld
mov
cltd
mov
stc
lods
mov
cld
mov
imul
add
add
insl
cmpsl
jp
xchg
adc
push
xor
jecxz
or
mov
dec
xchg
ret
adc
dec
or
mov
push
imul
jns
adc
ret
push
mov
sarl
lock
push
or
fwait
jge
ret
cmpsl
sbb
fildl
mov
sbb
xor
sbb
jl
arpl
inc
test
jle
add
add
add
sarl
and
cli
cmp
inc
pop
xchg
sbb
repnz
sbb
pop
push
outsb
rcl
dec
das
nop
lret
push
sub
pop
dec
mov
das
adc
sub
lcall
or
mov
sub
jl
push
fimuls
jg
mov
jne
hlt
fwait
stc
cmp
adcl
xchg
sbbl
dec
insb
sbb
add
add
add
dec
insb
adc
xor
test
adc
mov
cli
cmp
je
dec
inc
jge
dec
roll
mov
adc
imul
cs
sbbb
enter
xchg
dec
movl
xor
stc
push
sti
int3
xlat
xchg
pop
lcall
add
add
imul
es
dec
mov
sub
push
and
pop
jne
stc
sub
push
sub
xor
mov
xorb
ljmp
stos
aas
test
sub
inc
shlb
push
shlb
inc
mov
inc
jns
insb
cmc
pop
incb
add
add
aas
das
mov
ret
pop
cmc
xchg
push
arpl
std
xchg
lret
fcom
repnz
push
push
and
xor
iret
mov
sub
hlt
mov
das
ret
push
les
push
loop
sub
jp
aam
push
stc
fcomi
ret
xor
dec
int3
ret
mov
fcomip
repnz
sub
mov
add
add
add
ret
outsb
repnz
fildll
mov
mov
fdivl
or
mov
and
xor
mov
dec
add
mov
inc
repnz
push
push
imul
mov
fidivrl
xor
testb
inc
in
testb
roll
mov
sbb
addl
add
jns
repnz
cmp
xchg
in
cltd
push
mov
add
hlt
push
out
cmp
repnz
pop
xor
sbb
test
mov
fmuls
push
push
lcall
jge
dec
pop
jo
xchg
insb
push
cmp
fwait
jg
imul
xor
movsl
lret
jnp
jg
pop
jg
push
push
jg
xor
add
pop
cmp
dec
jge
and
xor
mov
shlb
dec
push
es
cmp
je
jg
xchg
cmp
xor
xchg
dec
shlb
roll
adc
sbbb
fildl
mov
movsb
loope
stc
test
sbb
in
lcall
xchg
xchg
fisubs
daa
dec
xchg
dec
sub
mov
add
inc
cmp
pop
rorl
cmp
jo
iret
dec
inc
icebp
out
stos
fmull
and
movsl
lahf
and
aam
cmp
push
jae
fsubrs
pop
int3
imul
mov
fdivl
adc
cwtl
lcall
inc
in
std
test
adc
out
xchg
mov
aam
push
repz
add
add
add
lds
cld
cmp
lods
fwait
jne
inc
lea
mov
mov
inc
repz
mov
outsl
adc
pop
lret
inc
and
mov
xchg
hlt
bnd
scas
add
jae
mov
jb
std
adc
das
add
add
or
fstl
mov
call
add
add
add
fs
jno
or
mov
xor
adc
sub
dec
mov
mov
mov
add
lea
lods
cmpsb
int3
add
or
outsb
or
das
rolb
or
mov
add
repnz
mov
or
icebp
mov
dec
incb
or
insl
or
add
or
inc
add
scas
add
mov
dec
add
test
aad
dec
mov
enter
inc
or
sub
js
mov
cli
fidivl
add
push
push
and
push
mov
lock
mov
hlt
sub
iret
out
rorl
fsubr
add
push
stos
and
mov
pop
frstor
add
add
je
add
hlt
out
pop
sar
rorb
fwait
adc
mov
bound
test
mov
das
hlt
out
push
dec
cld
pop
jb
cwtl
repnz
pusha
call
jmp
mov
jno
inc
jmp
popl
cmp
in
add
inc
in
pushaw
push
jmp
loop
add
cmp
sahf
push
sti
lret
cmpsl
add
add
add
aam
rcrl
addl
add
or
mov
cmp
pop
xor
call
push
mov
or
jmp
or
popf
clc
repnz
mov
cmp
pcmpeqb
jmp
xor
jmp
scas
add
mov
out
scas
push
inc
inc
and
add
add
add
sub
push
push
hlt
ret
push
cwtl
imul
hlt
adc
mov
popf
add
push
adc
lds
out
mov
sarb
lock
mov
push
decl
repnz
xor
inc
and
arpl
sub
add
or
imul
xor
fwait
add
add
add
add
add
setb
aam
cli
fwait
add
orb
out
enter
xchg
push
inc
or
cmp
mov
add
test
mov
arpl
adc
leave
jbe
imul
or
push
fiadds
push
adc
add
or
sub
in
adc
cli
dec
add
add
dec
cmp
addb
or
mov
sti
push
lock
bound
mov
movsb
das
sbb
sarl
fisubrl
jl
out
xlat
js
iret
not
out
cmpsb
fsubrl
out
setge
and
aad
add
fisubs
pop
sub
push
frstor
add
jp
cmpsl
push
mov
inc
sbb
and
add
add
or
outsb
stc
mov
out
or
pop
add
test
sub
stos
mov
shrd
fsubs
fs
jmp
cld
test
call
add
pushf
push
xchg
or
enter
pop
call
repnz
mov
std
push
mov
mov
mov
or
add
add
add
jb
push
loope
std
ss
pop
hlt
into
les
movsl
insl
je
mov
mov
hlt
xorb
sbb
add
in
testb
push
in
or
jl
fidivrl
pop
mov
mov
int
add
mov
inc
test
in
cmpsb
mov
mulb
decl
movsl
cmp
int
lock
ret
add
add
add
push
outsb
cmpb
jae
stc
jle
jne
int
fnstsw
mov
rclb
clc
fdivs
out
xchg
std
ljmp
imul
mov
mov
popf
nop
mov
mov
inc
addr16
loopne
mov
sub
ja
mov
or
movsl
fisttps
pop
addr16
sbb
mov
cs
push
ficomps
mov
jp
add
add
add
repz
xlat
lahf
push
jp
mov
push
jp
xchg
in
push
les
jp
ret
inc
jae
das
aas
repz
ja
and
jle
mov
sub
icebp
popa
lock
adc
fsubrp
andb
pusha
xchg
cltd
fidivrs
sbb
lret
ficoms
pushf
insl
rcrl
inc
mov
mov
inc
aas
fdivrs
add
add
add
xchg
ss
cmp
out
in
sbb
insb
jl
push
and
sub
lds
sub
or
pusha
insl
test
shrb
das
push
sub
jo
inc
popa
call
mov
fmull
xor
fwait
mov
outsl
xchg
mov
and
shll
loopne
inc
adc
add
add
add
cltd
push
dec
lds
jle
mov
mov
int3
pop
inc
inc
gs
push
xchg
mov
nop
push
sbb
pop
rcr
adc
repz
int
mov
mov
mov
data16
xor
mov
sahf
or
leave
dec
lea
cmpsb
dec
mov
sbb
add
dec
add
pop
pop
mov
mov
or
sub
and
insl
idivb
mov
imull
cmp
pop
int3
xchg
cmc
std
fisubs
sbb
sbb
mull
sahf
cmova
adc
lret
lret
add
shrb
mov
test
fadds
xlat
neg
out
sub
add
add
out
inc
lock
neg
mov
notl
pusha
lds
fbld
icebp
in
and
or
fbld
cmp
fbld
imul
inc
lods
jmp
xor
andb
mov
sub
vmread
movsb
fisttpll
stc
push
xchg
lods
insl
cmp
lcall
xchg
nopl
add
add
add
movsb
fsubr
arpl
pop
push
lds
dec
hlt
sub
fstp
out
movsl
popa
insl
mov
shll
inc
sarb
movsl
inc
adc
add
sarb
js
adc
lods
dec
ds
mov
xor
rol
mov
mov
xchg
shlb
or
sahf
sub
add
add
add
or
mov
push
mov
ds
ds
data16
cmp
mov
inc
mov
ret
and
test
mov
stos
idivb
jecxz
mov
cmpsl
ret
mov
inc
aaa
fwait
cmpl
or
imul
addr16
inc
mov
stos
cmp
mov
dec
out
fwait
xor
insb
add
add
lds
les
insb
add
mov
xchg
sub
es
call
mov
daa
lods
mov
push
enter
push
xchg
nop
mov
pop
scas
js
push
mov
push
test
or
xor
push
mov
xchg
leave
mov
and
movsl
and
jb
andb
add
add
add
mov
andb
cwtl
insb
and
out
jle
popl
int3
add
fcomp
adc
ja
fidivs
cmpsl
sbb
mov
and
xchg
fadd
repz
xchg
pop
mov
jbe
pop
fdivrl
stc
hlt
and
pop
push
dec
loop
inc
inc
fcoms
hlt
imul
inc
xlat
fadds
hlt
imul
cs
filds
add
add
add
dec
push
sarl
lahf
fistps
dec
mov
cmc
xchg
fbld
xor
fcomi
cs
fistps
test
and
mov
cmp
fsubrp
call
cmp
fisubrs
fmull
scas
les
xlat
jmp
dec
loope
cmp
out
loope
dec
rorl
pop
notl
out
add
add
add
lea
cld
cmp
nop
push
push
ffreep
in
add
inc
les
xchg
and
mov
popf
sub
and
add
or
shr
outsb
push
mov
mov
insb
xchg
mov
inc
push
jbe
and
inc
add
out
je
jnp
jne
xchg
js
jns
enter
add
add
add
and
pop
popf
jne
nop
js
test
lea
imul
add
inc
shlb
stc
gs
jb
jbe
xchg
jno
clc
ja
in
call
bound
dec
dec
dec
orb
sub
jp
cmpb
xor
inc
add
cmp
adc
inc
das
xchg
add
add
add
dec
das
pop
pop
fstps
pop
dec
dec
pop
cmp
dec
jb
bound
out
mov
dec
pop
add
xchg
pop
pop
or
mov
xlat
aad
mov
and
ret
sub
lock
or
jno
mov
mov
mov
shr
test
xchg
test
mov
add
add
add
sbb
sbb
ret
xchg
dec
sub
test
test
in
mov
mov
mov
cmp
mov
pop
or
mov
mov
or
inc
jmp
mov
aaa
mov
mov
lods
sti
mov
cli
frstor
dec
fdivl
mov
cmpsb
mov
ret
jp
fucomi
lods
jnp
add
add
add
xchg
mov
repnz
ja
aad
ret
int3
fcmovne
fsqrt
sub
or
dec
cli
fwait
repz
cltd
mov
mov
testb
sbb
jo
sbb
jno
or
push
cli
inc
loop
fsubl
fwait
push
cli
sbb
pop
sub
xor
xor
jno
inc
ja
pop
int3
mov
xor
cmp
icebp
add
add
add
mov
bnd
mov
loop
imul
inc
inc
xchg
jmp
mov
pop
cmp
inc
mov
or
popf
mov
push
aas
test
push
add
mov
inc
cmp
push
mov
mov
popf
push
cwtl
jnp
test
push
fs
sbb
clc
add
add
add
dec
xchg
imul
mov
mov
js
aas
mov
cmpsb
or
aam
and
cmp
pop
push
inc
mov
mov
xor
mov
adc
data16
arpl
mov
jb
popa
mov
and
sub
sub
add
or
out
xor
add
add
add
xor
push
mov
mov
cwtl
dec
es
outsb
pop
scas
cltd
sub
test
and
outsb
outsl
divl
das
nop
adc
pop
mov
mov
and
pop
push
adc
and
stos
pop
incb
mov
mov
xchg
cltd
add
cmp
xchg
sbb
mov
mov
add
pop
dec
add
add
add
mov
jl
dec
loop
mov
xchg
dec
loopne
xor
fwait
dec
mov
push
sbb
mov
push
into
lcall
mov
lods
jnp
stc
fnstsw
popf
push
sti
scas
add
int3
sub
mov
jp
loopne
mov
sbb
lea
insl
sub
cmpsb
shll
add
fmulp
js
insb
test
in
movsb
mov
outsb
xchg
cmpsl
mov
adc
enter
dec
mul
add
xchg
dec
jl
cmp
jno
adc
cmp
movsb
add
lea
in
cmp
in
mov
fiadds
mov
sbb
insb
lcall
jns
xchg
jns
add
add
add
fwait
xor
out
jns
mov
mov
popa
mov
add
lods
xor
jns
js
inc
pushf
push
jne
gs
fs
sbbb
dec
cmp
aam
test
xor
sti
add
aam
mov
repnz
aam
leave
adcl
cmc
fists
add
add
add
fs
jae
jecxz
jne
pop
push
pop
popf
inc
insl
ds
inc
pop
out
pushf
sbb
and
pushf
icebp
mov
mov
pop
push
ss
add
pop
sahf
cs
lods
or
and
adc
xor
out
sti
inc
xor
ds
enter
les
push
add
add
add
sti
inc
movsl
push
add
cmp
inc
xorb
ret
xorb
inc
mov
sbb
pop
cmp
push
mov
clc
test
pop
or
fs
inc
lds
fidivs
adc
addr16
xchg
xor
mov
fidivs
repz
xor
xchg
out
stc
nop
andb
mov
pop
add
add
add
xchg
shl
mov
andl
rolb
or
cs
repz
nop
test
std
add
mov
jecxz
repnz
mov
testb
cmpsl
loope
mov
xor
pop
faddl
mov
divl
adc
test
outsl
add
neg
or
add
mov
nop
add
add
add
hlt
jb
cmpsl
dec
jne
jge
jb
xchg
jns
mov
movsl
adc
xor
add
adc
popf
shlb
int3
push
inc
or
or
pusha
jnp
mov
mov
or
mov
jnp
add
push
adc
mov
inc
js
pop
das
loopne
jmp
gs
addl
repz
add
add
add
mov
dec
xchg
popf
add
clc
mov
sbb
dec
sbb
xchg
in
es
dec
pop
jnp
test
pop
ret
push
adc
and
andl
push
sbb
mov
push
mov
lods
cwtl
andl
xchg
pusha
push
or
enter
daa
add
aas
push
jne
push
pop
mov
add
add
mov
insl
dec
stc
xor
xlat
addr16
insl
push
test
iret
pop
sbb
mov
hlt
mov
xor
adc
xor
mov
into
out
scas
orb
imul
fstpt
imul
sbb
imul
insb
rclb
fstpt
jle
scas
cmpb
add
add
add
insb
pop
in
stc
pop
packssdw
add
or
testl
imulb
jle
aad
adc
inc
ret
cmp
xor
das
adc
lahf
mov
ret
aam
xor
or
xor
and
pushf
jg
insl
push
sub
repz
cmc
xor
notb
loop
nop
xchg
add
add
add
pop
cmpsb
xor
cmp
xchg
mov
xor
nop
sbbb
cltd
xor
or
jl
nop
addb
movsl
rclb
cmpl
in
std
ds
cld
xor
xor
mov
hlt
cltd
insl
sbb
hlt
cltd
push
sbb
jno
add
add
add
stc
out
jp
outsl
lods
cwtl
enter
out
jecxz
scas
popf
jecxz
pop
popf
jae
mov
hlt
fwait
nop
stc
add
nop
xchg
shr
cmp
incb
mov
or
cli
testl
jmp
xlat
repnz
leave
dec
pop
or
dec
popf
aas
mov
arpl
mov
hlt
mov
andl
mov
add
add
add
mov
xor
mov
xchg
mov
aam
xor
jne
push
mov
arpl
aam
cmpl
dec
inc
mov
fisubs
js
imul
xchg
pop
ss
adc
gs
sbb
out
xchg
fnstenv
lods
push
push
in
movsl
xchg
cmp
add
xor
dec
cwtl
and
jmp
pop
sub
das
mov
or
cmpsb
ljmp
jno
subl
or
add
in
mov
test
mov
fs
ljmp
jae
push
and
fdivrp
lock
insl
add
add
add
push
mov
pop
mov
fcomip
ljmp
add
sbb
inc
add
xor
insb
inc
mov
mov
addb
mov
xor
push
mov
xlat
pop
inc
movsl
pop
pop
sbb
pop
leave
bound
push
jmp
sub
and
push
mov
mov
add
add
fistl
daa
jmp
mov
mov
add
vprotb
adc
push
mov
cmpsl
mov
repnz
jns
aad
in
cmp
fs
cmpl
add
nop
pop
or
dec
add
or
adc
inc
pop
mov
xchg
sub
lret
pushl
add
add
js
rolb
mov
je
test
jl
mov
xchg
add
enter
add
xor
add
jnp
or
add
addr16
shlb
ret
add
mov
adc
sarb
mov
test
cmp
ret
sub
add
and
pop
mov
pusha
xchg
fisubs
gs
xor
jge
dec
ret
imull
mov
mov
mov
xlat
lods
bound
sbb
xor
jp
mov
add
mov
jle
cmpsb
cld
out
xchg
out
jl
sahf
jno
xor
lret
rorb
sub
push
xchg
incb
mov
jge
add
add
add
mov
and
xor
xor
add
sahf
push
or
push
jnp
mov
mov
es
sub
inc
out
clc
pusha
jo
cmp
or
addb
adc
sub
daa
mov
je
idiv
call
xor
mov
pusha
dec
inc
aas
ret
jl
iret
out
jbe
add
add
add
lcall
sbb
out
push
inc
push
cmpsl
out
adc
or
dec
jl
add
scas
dec
loopne
fs
adc
fistpl
ljmp
dec
fcompl
mov
outsl
or
repnz
std
xor
mov
push
cmp
dec
or
sbb
push
xlat
xlat
dec
lock
or
xchg
add
add
add
add
add
inc
scas
scas
movb
xchg
xlat
jl
jmp
pop
mov
popa
scas
add
push
lods
mov
inc
sarb
testl
add
dec
cwtl
sahf
punpcklbw
mov
addb
cmp
das
add
dec
mov
inc
shll
jl
ret
mov
push
jle
sbb
xor
clc
mov
add
add
add
je
lds
sahf
aad
testl
imull
mov
sub
mov
and
mov
adc
and
pop
jp
xchg
ret
mov
vmovntps
mov
add
mov
inc
add
das
jl
mov
out
faddl
jns
hlt
add
add
add
out
cmp
stc
push
movsb
pop
xlat
lcall
test
mov
xchg
mov
cmp
mov
shrl
sub
cmp
mov
cmc
mov
rorb
cmp
outsl
add
ds
jo
pop
mov
mov
xor
pop
xlat
jl
jbe
test
stos
mov
and
movsb
add
add
add
or
subl
or
orl
mov
pop
jno
push
int
inc
jno
mov
pushf
jmp
and
push
bound
inc
push
push
fwait
cmc
imul
push
dec
pop
dec
cld
ret
loop
cltd
icebp
loop
cltd
adc
inc
pop
cld
xor
xlat
pop
stos
adc
mov
call
mov
add
add
adc
int3
adc
movsl
cwtl
imul
mov
fstpt
push
push
mov
outsb
in
imul
sti
sub
fwait
lds
mov
add
cmp
incl
imul
lcall
test
push
leave
insl
pop
xlat
imul
and
add
add
pusha
outsb
insb
shrb
or
lahf
out
mov
adc
xchg
pop
sub
xchg
pop
mov
mov
fisubs
loop
lock
xor
jl
lea
mov
shl
sub
out
cmp
lahf
cmp
imul
or
xor
cmpsl
or
add
add
add
je
sub
mov
cli
stc
shll
out
dec
repz
fcompl
xor
icebp
lea
es
movsl
inc
or
mov
into
cs
xchg
adcl
xchg
stc
mov
mov
stos
out
rclb
inc
xor
sbb
mov
movsb
fiaddl
add
add
add
orb
jmp
cmp
shlb
inc
aaa
iret
and
or
xchg
ds
lds
insl
xor
dec
scas
xor
stc
jmp
arpl
mov
or
in
call
pop
add
xchg
iret
add
bound
stc
movsl
add
in
inc
xor
or
ds
pop
sub
add
add
andl
sub
and
xchg
add
ss
cli
dec
icebp
sub
jg
push
mov
sbb
add
push
adc
daa
mov
xchg
outsb
lods
and
mov
loop
shr
xchg
iret
xor
lahf
ret
pop
pusha
aas
jns
outsb
cmp
icebp
stos
outsb
mov
sbb
pop
fisttps
add
add
add
shlb
mov
push
mov
xchg
fistpll
stc
mov
or
call
into
jp
pusha
jle
pop
fisubrs
nop
call
xchg
sahf
pop
pop
out
pop
fucomi
shlb
pusha
xchg
push
dec
jb
push
fisttpl
cmpl
sub
test
mov
cmp
shr
subl
add
add
and
cmp
mov
fidivl
data16
pusha
push
pop
mov
jg,pt
add
je
int
mov
in
or
xor
adc
mov
icebp
int3
cmp
out
das
jns
and
cmp
std
call
ss
sub
shlb
outsl
mov
adc
insb
inc
mov
add
add
imul
mov
add
xor
std
out
sub
out
mov
fucom
sti
fisubs
sub
mov
sub
add
inc
dec
iret
jno
pushf
dec
fldcw
icebp
dec
sub
icebp
sub
into
adc
or
mov
ds
dec
loopne
push
cltd
imul
loopne
sbb
jl
stos
data16
add
add
add
adc
out
scas
push
dec
dec
jmp
ljmp
repz
outsb
fnstcw
loopne
bound
xlat
imul
cmp
out
sub
data16
mov
mov
sub
mov
std
push
rol
mov
jmp
mov
dec
ljmp
std
push
xchg
inc
sub
dec
add
add
add
dec
pop
mov
adc
outsb
popf
jmp
outsb
push
and
mov
jmp
and
sub
sub
aad
cmp
mov
sarb
in
call
fadds
cltd
mov
add
outsb
inc
jmp
adc
add
gs
xlat
in
lock
addl
push
mov
imul
add
lds
dec
sub
sub
mov
lea
scas
xchg
mov
mov
push
mov
add
mov
add
in
or
test
insl
lcall
and
test
push
xor
loope
scas
daa
imul
sub
or
add
add
sub
cmp
xchg
cmp
divl
popa
xchg
rorl
shlb
add
or
or
cmp
rorb
xchg
das
mov
mov
fwait
inc
sub
mov
or
mov
aas
fwait
and
pop
loopne
scas
pushf
testl
popa
jo
jmp
sub
xor
mov
add
add
add
lret
shrb
mov
into
lods
xchg
int3
mov
scas
lret
push
dec
sahf
stos
sub
in
sbb
lret
daa
jmp
in
adc
xchg
dec
dec
ss
andb
fcoml
lods
rorl
dec
mov
lea
lods
xchg
xchg
xor
dec
movsb
sub
adc
xchg
lods
in
stos
lds
add
add
add
inc
lods
in
rclb
sbb
inc
mov
xchg
cltd
mov
xchg
xchg
and
movsb
mov
mov
mov
add
mov
mov
les
movsl
repz
movhps
and
das
je
pop
pop
outsb
movlps
subb
stos
adc
pop
mov
xchg
xor
mov
or
xor
jb
xor
pop
add
add
add
pusha
mov
adc
mov
pop
mov
xorb
pusha
inc
mov
or
ffreep
add
call
ret
pop
ret
inc
xor
add
add
clc
mov
fwait
std
cltd
cld
add
xchg
or
lahf
sub
mov
push
sbb
mov
out
mov
add
add
fimuls
push
sbb
data16
dec
add
pop
in
cmp
lea
mov
sub
faddl
jnp
std
out
scas
pop
cld
aaa
mov
pop
loope
lds
jae
and
add
hlt
add
in
and
call
inc
lea
add
add
add
xchg
mov
xor
popf
in
mov
sub
lcall
dec
pop
xorb
jg
lds
xchg
lret
add
mov
or
in
or
sub
shrb
xchg
cs
call
and
pushf
mov
cwtl
add
add
add
sub
inc
dec
movsb
mov
mov
fwait
and
xchg
xor
lcall
outsb
stos
jp
pop
pop
cltd
subb
sub
push
fnstsw
mov
jg
and
pop
pop
jne
mov
xor
lret
sti
jno
les
push
lea
fwait
mov
add
add
add
mov
sub
mov
pop
es
jno
xchg
xor
addr16
setns
or
cwtl
lods
das
test
in
mov
mov
or
or
les
push
lahf
xor
or
inc
in
xchg
xor
dec
lds
outsl
pop
js
rcl
xor
mov
add
add
add
push
inc
data16
sbb
cltd
mov
icebp
mov
mov
jmp
add
pushl
movsb
dec
jo
icebp
mov
out
and
add
das
adc
loop
test
xor
cmp
and
daa
sub
jbe
stos
ret
jb
adc
push
xor
add
add
add
out
movsl
fistpll
adc
rclb
out
repz
jp
mov
xor
ret
rolb
les
lcall
nop
xchg
cmp
xor
xchg
popa
xor
jb
inc
stc
sahf
or
xchg
sbbb
mov
jnp
xor
js
repnz
clc
leave
mov
icebp
cmp
push
sldt
add
add
or
push
popa
mov
push
das
push
xchg
xorb
and
sbb
mov
mov
xchg
mov
sub
cmc
fsubrs
and
out
fldt
sub
mov
das
ljmp
add
xchg
xorb
out
pop
ljmp
xor
xor
or
add
add
and
dec
cmp
pop
mov
fs
xor
mov
inc
pop
fstpl
repnz
cmpb
sbbl
fwait
inc
cmp
repnz
sbb
mov
and
loopne
and
in
cld
mov
xchg
test
int3
mov
xchg
dec
jg
testb
mov
add
add
add
aaa
add
jge
add
cmp
push
add
lcall
mov
stc
add
ficoml
xor
inc
icebp
jp
add
mov
adc
fwait
aaa
mov
stc
sub
cmp
sbb
xor
pusha
jne
fldcw
sti
lods
sub
pop
outsb
fwait
sbb
loopne
or
add
add
bound
pop
cmp
fbstp
fcmovu
lock
aam
dec
bswap
pushf
push
std
add
bsr
inc
out
xchg
addl
adc
add
mov
dec
aaa
mov
mov
andb
mov
arpl
pop
mov
dec
mov
mov
jb
lods
or
add
bound
pop
push
scas
orb
sbb
cmp
mov
mov
stc
std
popf
cmpsl
test
int3
jne
xor
daa
push
loopne
or
movsl
xor
pop
repz
pop
cmp
sbbb
lods
icebp
sbb
scas
xor
sbb
mov
cmp
les
pop
push
jbe
sbb
xor
sub
icebp
dec
cli
rclb
add
add
add
mov
dec
repnz
fadds
mov
cmp
or
ficoml
repz
ficoml
xchg
subb
repnz
loope
mov
mov
fucomi
xor
shll
repz
clc
leave
mov
icebp
mov
adc
mov
stc
cs
clc
push
lock
int3
cmc
pop
orl
orw
adc
add
add
scas
pop
cmc
push
push
jns
stc
pusha
dec
xor
imul
pop
mov
jns
push
inc
pop
adc
movsb
pop
or
jb
or
mov
lods
xchg
mov
and
jecxz
lcall
fisttpl
cwtl
fisttpll
mov
add
cmc
sbb
cli
roll
add
add
push
inc
icebp
fdivl
and
arpl
adcb
mov
sub
sub
pop
inc
icebp
cmp
ljmp
pop
out
loopne
dec
gs
popl
test
cmp
adc
mov
jno
pop
test
sbb
adc
mov
repnz
cmp
andb
shll
add
mov
push
fisubs
mov
cmp
iret
test
arpl
lahf
ja
arpl
in
clc
loopne
pop
rorb
jg
arpl
movsl
ja
arpl
repz
filds
lret
popf
fidivrs
mov
mov
xor
xor
mov
xchg
inc
inc
in
repz
push
cmpb
xor
mov
add
add
add
push
ds
repz
xor
stc
pop
push
pop
cmpb
pop
inc
ds
or
or
mov
xchg
sbb
add
fcompl
test
push
mov
dec
mov
inc
jnp
dec
test
push
ja
or
jnp
dec
xchg
dec
pop
mov
fld
dec
xchg
cmp
enter
jg
add
add
add
dec
add
or
mov
in
in
out
add
push
mov
filds
mov
or
jnp
or
stc
adc
lret
std
aas
dec
int3
cmp
xchg
xchg
fprem
cmp
jb
xchg
mov
add
jb
rclb
sub
stos
test
dec
fbld
in
sbb
mov
add
push
cmpsl
xor
mov
lret
aas
add
add
add
pop
shl
lret
les
lock
in
imulb
cmpsl
sti
icebp
aad
jb
jnp
lock
lock
inc
jg
cmp
cmpsb
arpl
out
ss
shrb
dec
addr16
push
loope
add
or
std
mov
bound
or
jmp
add
cmp
inc
add
add
out
xor
test
mov
out
ljmp
dec
xchg
std
jmp
inc
cmc
out
inc
cmc
gs
ljmp
or
mov
and
ss
gs
ret
add
stos
push
dec
adc
roll
lods
jl
add
add
add
loopne
rorb
hlt
std
pushl
add
stos
out
dec
jae
mov
call
add
inc
xchg
xor
adcl
xor
setbe
inc
push
ss
jmp
pop
repz
inc
test
stos
icebp
inc
push
out
or
ret
decl
mov
xchg
shlb
dec
fdivrs
add
add
add
add
add
jnp
pop
icebp
sti
bound
or
mov
std
ret
loop
inc
iret
or
rcll
mov
imul
popf
jmp
add
ret
inc
sbb
mov
adcb
ljmp
push
jb
jno
lcall
bound
arpl
dec
cmc
dec
push
cltd
faddl
add
dec
add
mov
mov
dec
mov
sbb
or
rclb
insl
or
inc
lods
adc
in
xorl
jo
xor
mov
mov
jg
fs
lods
adc
sub
stos
addr16
cld
sbb
arpl
loop
inc
out
sub
mov
mov
jge
fildl
add
add
add
sub
inc
and
jmp
or
setge
inc
add
in
add
sub
jmp
fdivl
add
sahf
jb
and
add
icebp
cmpsb
in
outsb
mov
clc
xor
mov
cmc
mov
bound
mov
cli
lret
sahf
inc
jbe
pusha
imulb
xchg
add
jne
out
popf
add
or
or
inc
bsr
or
add
divb
cmp
mov
or
or
insb
dec
rolb
jne
cmp
jne
cmp
or
icebp
icebp
mov
mov
out
push
mov
jno
add
add
add
inc
add
shl
faddl
loopne
push
push
inc
mov
rorb
imul
int3
cmp
out
test
in
insl
mov
mov
scas
shr
inc
icebp
std
jmp
cltd
add
jmp
out
sub
adc
lods
lock
ret
sti
jne
sbb
std
push
sti
shll
hlt
pushl
jno
xchg
add
add
or
std
pushf
adc
lock
sbb
add
mov
imul
pop
movsl
push
icebp
jb
fdivp
cmp
cmp
adcl
std
pop
cmpb
push
icebp
arpl
scas
fld
fnsave
out
sbb
mov
push
out
pop
jbe
lock
mov
mov
js
jmp
jo
addr16
add
add
add
iret
movsl
mov
imul
mov
imul
mov
or
cmpsb
fldt
lds
push
addr16
cmpsb
outsl
mov
xor
data16
in
pop
mov
cltd
mov
xor
sbb
dec
xor
mov
dec
jo
dec
sahf
idivl
cmpsb
daa
push
dec
xor
add
add
add
cmpsb
cmp
inc
mov
outsl
mov
enter
lds
mov
ror
cmpsb
lds
push
outsl
add
dec
test
mov
pop
push
fldt
insl
mov
push
daa
or
fwait
aad
add
arpl
jns
xor
cmpsb
aas
packuswb
push
push
mov
dec
sbb
add
add
add
std
push
in
lahf
fsub
int
pusha
or
int3
adc
dec
mov
das
fs
sub
fs
shr
push
dec
push
sbb
sbb
jo
mov
fs
into
inc
pusha
add
rorl
or
mov
lahf
xchg
mov
cli
cmp
inc
push
and
fists
add
add
add
pop
outsb
fnstsw
inc
out
jle
js
mov
xchg
mov
inc
out
insl
out
mov
cmpsb
sahf
addl
adc
xchg
and
mulb
addb
fcoms
enter
cmp
and
sbb
dec
ret
sbb
dec
add
mov
pop
in
pusha
fs
shlb
add
add
add
sarl
mov
fcoml
jns
mov
inc
shll
mov
into
jne
mov
in
rcr
sub
dec
mov
popa
fmulp
add
enter
mov
gs
xor
mov
push
fdivrs
sbb
std
adc
mov
jmp
leave
add
popa
add
fcompl
fs
inc
add
add
add
sub
inc
std
inc
mov
sub
punpckhwd
lahf
arpl
dec
sarb
les
and
dec
jnp
push
add
pop
inc
xor
push
mov
push
or
test
inc
inc
loop
imul
les
mov
sub
sub
ss
mov
loope
xchg
and
add
add
add
mov
inc
sub
insl
mov
jg
push
jp
ret
xor
pop
or
iret
or
add
dec
imul
push
lock
or
iret
shl
faddl
lea
mov
dec
enter
sub
pusha
aas
mov
or
mov
sub
sarb
inc
jle
iret
mov
cs
mov
add
add
push
std
ds
jmp
push
mov
xchg
pop
xchg
shll
pop
sub
xchg
mov
fstl
sub
xchg
add
adc
push
and
mov
les
fistl
mov
into
lock
frstor
fs
filds
xor
rclb
std
fdivp
cli
or
add
add
add
push
mov
sub
push
and
mov
lock
call
fidivs
inc
cmp
repz
xchg
sub
pop
div
lret
into
fisubl
out
repnz
pop
cmp
xlat
outsl
shlb
icebp
add
jbe
jl
dec
or
inc
popf
mov
and
add
add
add
sub
xchg
jl
pop
or
push
pushf
and
roll
daa
cli
and
out
or
mov
in
sbb
lock
pop
ret
cld
mov
inc
les
mov
push
xchg
cwtl
lods
jg
std
out
mov
call
jg
xchg
pop
popa
xor
mov
pop
inc
ds
ja
add
add
add
cmpsl
jl
xor
jno
cltd
inc
pop
je
dec
mov
lea
adc
jns
and
jp
arpl
roll
push
mov
inc
mov
ja
test
lea
jno
sub
pop
dec
mov
mov
add
dec
or
cmpl
xchg
pop
pop
cmp
add
add
add
push
add
cmp
fisttpl
insb
inc
push
ja
add
addr16
xchg
sub
adc
mov
test
mov
fiaddl
mov
push
cmp
mov
addr16
cmp
mov
mov
idivb
pushf
pop
aad
lret
test
gs
imul
sub
idivb
cmp
add
inc
outsl
stos
mov
sbb
mov
lea
jnp
arpl
icebp
fwait
add
xor
push
jle
aad
cwtl
ds
jnp
iret
js
push
push
cmp
push
pop
fcoms
fimuls
pushf
loope
jae
int3
and
mov
aaa
dec
sub
pop
lahf
cld
push
das
cmp
mov
add
add
add
inc
push
pop
stos
aaa
mov
inc
aam
mov
int
push
mov
insb
sbb
xchg
xor
arpl
mov
popf
lahf
or
imul
and
mov
in
addr16
jmp
pop
movsl
mov
xchg
jae
push
mov
pop
pusha
sub
add
add
add
push
jle
mov
inc
or
popf
nop
imul
pushf
push
cmpsb
mov
xchg
push
outsl
xor
addr16
gs
fisubrs
mov
imul
mov
xchg
mov
divl
aad
xchg
xor
test
lea
pop
push
lret
inc
mov
add
add
push
inc
push
add
cmp
and
inc
dec
mov
movsl
leave
mov
clc
fimull
fdivp
jp
xchg
xor
and
popa
inc
fstpl
int3
bound
test
and
jg
jno
jbe
xchg
xor
mov
pop
icebp
pop
mov
xor
addr16
add
add
add
inc
mov
xorb
lds
xorb
push
mov
xor
mov
mov
xchg
nop
xor
inc
sahf
inc
pop
pop
xorb
nop
xor
jno
cmp
push
jne
push
test
xor
ja
push
filds
inc
push
sub
xor
add
add
add
out
pop
jae
pop
mov
pop
cs
push
add
mov
mov
test
scas
cmc
dec
out
ss
mov
mov
aas
pop
lahf
xchg
sub
push
cmpsl
test
and
xor
mov
in
jp
imulb
sub
sbb
push
lods
sub
add
add
ljmp
xchg
mov
mov
dec
xor
mov
das
mov
xchg
xchg
mov
mov
popf
not
dec
xor
inc
stos
xchg
addl
mov
cltd
cltd
pop
jbe
xchg
mov
add
add
add
fisttps
jg
add
mov
xchg
push
int3
cltd
xchg
jg
mov
mov
xchg
jp
test
idivb
mov
sub
mov
divb
xchg
xor
push
ja
popa
outsl
mov
cmp
test
jle
xchg
lahf
cwtl
daa
mov
into
mov
add
add
mov
jge
mov
pop
mov
or
sbbb
into
push
inc
sbb
xchg
xchg
pop
les
aas
or
popa
sub
fidivrl
pop
cli
cltd
jb
jg
pop
and
inc
roll
pop
mov
mov
scas
mov
orb
push
js
add
add
add
in
hlt
pop
enter
jge
test
xchg
shll
sti
pop
js
fisubs
outsl
into
icebp
cmp
and
mov
fsubrs
and
dec
mov
sub
lds
cmp
mov
out
icebp
sbb
cmpsl
insl
ficompl
push
pop
jbe
ficompl
xchg
add
add
add
add
test
nop
ds
jno
inc
out
nop
jb
shl
mov
arpl
repz
fs
add
xchg
repnz
push
testl
out
xor
mov
scas
xchg
ret
nop
sahf
add
add
faddp
xor
leave
cmc
aaa
cmpsl
ret
cmpsl
push
icebp
daa
cmp
mov
add
add
add
sbb
out
pop
imul
sbb
imul
fmulp
or
icebp
mov
sbb
ficoms
pop
hlt
cmc
push
insl
ret
mov
jnp
cmc
adcb
cld
fwait
repz
mov
daa
mov
sbb
int
jae
push
lcall
add
and
sbb
adc
xchg
inc
bndstx
repz
push
lock
xor
pop
add
add
add
lahf
dec
lcall
cltd
adc
aaa
push
mov
push
jp
mov
mov
mov
nop
icebp
cmp
iret
sahf
mov
pop
add
cmpsl
dec
and
cmpsb
and
fcomi
popa
mov
mov
test
adc
stos
or
gs
mov
pop
mov
fsubs
out
hlt
mov
out
cmpsb
ret
adc
add
add
add
in
cmp
daa
fs
and
xlat
jle
and
or
test
xchg
cwtl
mov
and
test
sbb
cltd
add
sbb
sahf
out
pop
mov
pop
inc
jmp
mov
stos
je
mov
aas
adc
mov
mov
adc
mov
add
add
add
fildll
les
fisubs
xor
pop
ret
cwtl
fistpll
cltd
xchg
pop
bnd
stos
shlb
daa
fs
js
call
shlb
popa
and
cmp
fs
pop
int3
call
lret
and
js
call
cmc
jo
stc
sbb
sub
add
cli
or
sbb
xchg
mov
sbb
icebp
repz
add
add
arpl
out
nop
jb
shll
add
scas
repz
push
pop
xchg
bound
stc
dec
out
repz
rorb
lock
mov
xor
je
mov
nop
repnz
mov
pop
push
cs
mov
mov
repz
leave
ret
fistps
pavgb
add
add
add
lahf
ror
int
in
mov
aam
push
repnz
loope
mov
repnz
sbb
adc
dec
repnz
fnstsw
mov
sbb
push
sub
enter
aam
cli
cmp
loopne
or
mov
add
sbb
push
mov
pushf
inc
mov
adcb
jp
lret
xchg
sarl
aam
add
add
add
vmovq
xchg
fcoml
rclb
aam
cli
mov
repz
sbb
aam
insb
movl
sbb
jns
xor
dec
mov
cwtl
mov
or
psraw
stc
mov
pop
jns
flds
rcrl
and
mov
xchg
shlb
fwait
push
xlat
mov
and
roll
add
add
add
dec
outsb
cwtl
and
loope
repz
decb
xor
fs
push
pop
roll
push
jns
stc
add
rcrb
and
lods
add
roll
test
adc
fwait
call
mov
call
add
mov
inc
int3
call
fisubrs
out
push
mov
sbb
push
push
test
add
mov
mov
test
and
pushf
pop
std
jmp
lret
sbb
imul
pop
std
xchg
iret
cmp
jecxz
push
orl
mov
out
into
call
add
in
add
pushf
inc
and
cld
or
lret
jg
mov
mov
jno
incl
add
add
add
pushf
pop
or
std
pushl
sbb
call
lret
sbb
std
incl
add
inc
dec
in
push
imulb
inc
add
mov
mov
mov
call
imul
push
popf
mov
mov
in
mov
in
std
mov
fnstsw
add
add
push
or
mov
add
add
add
or
add
dec
jle
ss
mov
add
loope
jae
nop
les
pop
shr
pop
roll
xadd
and
fldl
xchg
add
inc
sbb
xchg
jae
add
xchg
or
pop
dec
loope
sbb
adc
add
jbe
or
dec
std
mov
add
add
pop
or
inc
mov
push
dec
mov
out
and
xor
add
xchg
in
repz
push
or
push
adc
fisubrl
out
lret
ret
mov
sub
and
add
lock
mov
loope
mov
lret
add
add
aaa
sub
add
cs
push
adc
sbb
addl
and
les
js
dec
mov
pop
int
sub
or
inc
push
bnd
sub
xor
fnstsw
jge
adc
jno
xchg
inc
loop
pushf
push
in
inc
pop
or
sbb
shl
inc
add
or
sarb
mov
movsb
add
add
add
inc
mov
fs
mov
movsl
mov
jmp
mov
mov
test
stc
das
adc
add
mov
add
rolb
sbb
pushl
sub
pusha
call
sub
jb
sti
jne
add
sbb
outsl
call
mov
sti
cmp
fs
add
add
add
clc
add
mov
call
mov
add
cmc
add
insl
jmp
push
add
jmp
sti
add
inc
jmp
dec
sub
mov
jne
out
inc
sub
mov
inc
test
test
adc
xlat
loop
lret
in
mov
int3
jg
mov
pusha
and
sbb
jnp
add
add
add
sbb
and
dec
das
push
iret
pop
sbb
adc
sbb
push
xchg
inc
and
sub
imul
std
or
mov
adc
mov
fbld
and
shrb
and
jecxz
xchg
or
add
sbb
jae
test
sbb
and
sub
mov
add
add
add
add
fildl
push
lods
jb
adc
mov
aas
in
stos
pop
sub
add
mov
add
test
fbld
or
xchg
repnz
dec
repz
aad
and
out
nop
ljmp
in
ret
dec
mov
add
xor
movl
add
out
cmp
dec
lods
icebp
jne
jmp
inc
cmp
sbb
test
sub
jmp
inc
ja
aad
sbb
add
subl
rcll
xlat
sbb
cs
call
add
pushf
ss
aad
sbb
frstor
ja
cmp
push
rolb
add
add
add
xchg
adc
adc
aam
hlt
dec
cwtl
pop
xor
xor
ret
inc
pop
mov
push
addr16
pop
xlat
cmp
shl
arpl
pop
fmull
sahf
mov
dec
test
fnstsw
push
push
push
mov
pop
and
jg
add
add
add
pop
lahf
or
lock
stos
pop
pop
push
xor
sahf
stos
sarb
idiv
fimull
cli
mov
jle
mov
fcomps
mov
sub
cltd
stc
das
sub
jp
pop
and
mov
fcmove
gs
pop
pusha
mov
sahf
std
add
add
add
fsubp
mov
pop
dec
mov
fcmovnb
pusha
mov
pop
add
test
movsl
jge
dec
cmp
mov
push
test
scas
dec
sub
fisubrs
cmp
enter
stc
das
add
sti
aam
stc
shlb
stos
repnz
faddl
or
push
dec
test
cmp
cmpsb
movsb
das
ret
cmpsb
or
add
add
fdivrl
popa
outsl
test
mov
test
add
inc
test
pop
lods
aad
movsb
int3
jp
xor
sbb
sahf
ret
sub
lock
or
inc
pop
loope
mov
lods
adc
stos
xlat
lret
inc
dec
lea
fucomip
daa
negb
out
lods
inc
jl
lock
xchg
add
add
add
add
xchg
push
push
test
scas
xchg
sub
pop
sbb
sbb
and
xchg
daa
sbb
push
daa
ds
dec
mov
cs
fdivrl
sbb
lcall
sti
arpl
mov
data16
stos
fwait
aad
lods
fcmovnbe
mov
frstor
push
jp
aaa
neg
hlt
jmp
add
add
add
data16
pushf
add
mov
push
sub
xchg
roll
icebp
es
mov
aaa
adc
sbb
xor
fdivrl
cmc
mov
aas
cmc
mov
push
in
fs
mov
pusha
shll
adc
movsb
xchg
adc
sbb
mov
add
mov
filds
add
add
add
mov
pop
movsl
adc
shl
fndisi(8087
sub
ficompl
dec
pop
pusha
mov
cmp
fcmovnu
gs
lea
lock
pusha
or
frstor
or
pusha
shll
add
sub
rcr
sub
mov
xchg
xchg
pusha
jo
loopne
gs
daa
imul
sub
pop
jg
shll
dec
lods
out
ljmp
add
add
add
jecxz
lock
inc
fbld
scas
pop
jmp
data16
push
and
fdivrl
mov
sub
mov
mov
call
xchg
nop
std
inc
push
fdivs
xor
and
or
lahf
daa
and
sub
in
fwait
mov
insb
dec
or
ja
jmp
fstps
add
add
add
add
cltd
imul
xor
push
cmpb
push
hlt
je
add
fsubrs
popf
orb
xchg
jbe
sahf
stos
sub
sbb
xchg
sbb
imul
pushf
jmp
clc
shrb
ficompl
inc
js
jmp
add
inc
aam
mov
shrl
add
add
dec
fsubr
out
pop
fnsave
dec
out
fnstcw
xor
icebp
cld
sub
dec
mov
call
push
adc
mov
fisttpll
push
and
lds
popa
xor
fsubp
mov
inc
cld
xchg
aad
add
mov
sub
frstor
add
push
inc
dec
add
inc
fcmovnu
pop
insl
ret
stos
mov
shl
cmp
dec
fadds
nop
lea
cmp
mov
cmp
mov
mov
insb
cmp
in
daa
jmp
in
pop
dec
mov
loope
mov
int
sbb
add
add
add
sub
mov
xchg
xchg
jl
push
ds
add
test
cwtl
or
decl
sub
movsb
sbb
rcrl
addr16
fwait
daa
mov
mov
je
xchg
fstp
in
and
frstor
push
fisttpl
nop
repz
andl
je
mov
add
cmp
add
push
sbb
outsb
sub
push
mov
mov
cmpsb
insb
andl
test
mov
insl
xchg
push
popa
popa
rorb
mov
sub
and
mov
les
insl
insb
subb
cltd
ss
pop
adc
xchg
in
push
ficomps
andb
mov
add
add
add
jbe
xchg
movsb
inc
test
lods
movsl
jno
movsl
aaa
mov
call
jno
xlat
aaa
push
pop
pop
pop
popf
dec
push
mov
adc
mov
xchg
xor
jae
daa
push
js
into
dec
mov
push
add
test
test
outsl
cmc
out
mov
sub
outsl
xchg
pop
cltd
adc
add
repnz
jno
dec
popa
jb
jmp
or
xor
mov
lock
dec
test
xor
fs
call
jae
push
cmc
pop
mov
icebp
xchg
add
jge
ds
sub
add
mov
adc
add
add
scas
std
sub
sbb
add
add
or
xlat
sub
sbb
adc
cmp
stos
lea
mov
lods
xlat
insl
loopne
lods
push
xor
or
mov
jmp
sahf
cmpsb
cmp
sub
in
scas
std
add
cli
cmpsl
jnp
mov
xchg
data16
add
add
add
add
xchg
cwtl
jle
scas
std
sub
ret
xchg
mov
xchg
push
add
sbb
mov
popl
push
ficomps
add
xchg
clc
add
scas
sbb
shll
jl
mov
incl
jns
mov
add
test
xchg
xchg
mov
mov
popf
arpl
dec
popa
popa
idiv
or
dec
push
ficomps
add
add
xchg
insl
add
or
pop
or
popa
mov
fistpl
mov
pop
mov
jne
lret
xor
jae
shr
mov
sbbl
xor
xchg
mov
sbb
mov
mov
pushf
dec
mov
add
test
xchg
bound
jg
aas
mov
add
mov
lods
sbb
add
add
xchg
cmc
outsb
sbbb
jne
andl
xchg
cmp
sbb
add
mov
call
push
fidivs
fiaddl
imul
or
cmp
or
movsl
adc
or
out
sbb
push
jge
sub
sbb
add
and
mov
add
add
add
jnp
hlt
fwait
and
xor
xchg
arpl
hlt
ret
stc
mov
mov
in
and
out
enter
and
jb
out
jo
addb
mov
int3
test
xorb
das
fcompl
mov
sbb
mov
cmc
jecxz
sub
ret
cvtpi2ps
mov
add
add
add
cltd
dec
dec
jg
std
mov
inc
sub
inc
sbb
lea
jle
dec
stos
jns
test
imul
aam
repz
xchg
roll
out
dec
inc
mov
or
out
cvtps2pi
push
cmpsl
rclb
femms
ret
in
and
or
div
add
add
add
fidivrl
mov
xchg
inc
repz
leave
sti
les
mov
lds
push
std
and
lods
cs
outsb
lret
jle
sti
js
mov
movsb
mov
mov
add
hlt
outsb
cmp
call
jno
push
xchg
xchg
inc
mov
add
rclb
sti
dec
lods
jg
ss
mov
pusha
daa
mov
add
sbb
add
stos
xor
movsl
mov
mov
and
dec
repnz
xchg
test
mov
mov
and
jnp
push
mov
movsb
jns
ret
pop
xchg
popf
cmp
and
xchg
mov
xor
jae
jp
mov
jbe
ret
cmp
add
test
imul
pop
popa
sahf
mov
add
add
clc
push
mov
subb
repz
add
sbb
push
xchg
push
add
mov
movsb
add
gs
loopne
divl
int3
std
clc
popf
mov
leave
add
insl
arpl
das
fwait
out
icebp
mov
js
cmp
jg
imul
mov
add
outsl
inc
and
mov
stc
cli
scas
add
add
add
add
stc
lock
adc
lds
outsb
lds
sti
xchg
icebp
inc
sarl
adc
pop
push
nop
and
aas
sahf
inc
add
in
lcall
pop
stc
cli
add
xchg
arpl
jnp
add
ss
add
nop
nop
cmpsb
inc
stc
std
mov
les
nop
cmpsl
inc
stc
std
add
add
add
das
daa
add
das
mov
lret
push
inc
push
jae
daa
dec
std
xchg
inc
adcl
loopne
mov
inc
sahf
movsb
loopne
jl
inc
addl
adc
mov
jle
mov
and
bswap
movsl
cmpb
push
xchg
arpl
and
cmp
inc
packsswb
sbb
clc
mov
cli
or
cmpb
add
add
add
push
or
sub
out
jbe
xchg
dec
mov
stos
stc
adc
inc
mov
cmpsl
subb
mov
cmp
outsl
sti
xchg
out
cmpsb
pop
test
push
push
stos
clc
mov
fimull
icebp
jp
xchg
mov
pop
add
ret
pop
xchg
cmp
fldenv
enter
stos
add
add
add
clc
and
sbb
dec
pop
cmp
call
jb
sbb
push
int
mov
push
push
cli
mov
sbb
mov
scas
loop
mov
jns
mov
leave
jle
adc
movsb
test
xor
pop
mov
push
dec
scas
mov
cmp
dec
pop
push
fadds
inc
mov
xchg
mov
jl
add
add
add
mov
adc
adc
push
sbb
test
jo
pusha
xchg
adc
cli
fnstcw
sti
or
movsb
sti
cmp
xor
imul
call
in
jne
ficompl
cmp
sbb
divl
sbb
mov
jbe
out
jo
mov
mov
mov
add
add
add
fidivs
std
cmp
xorb
xor
lds
pop
cwtl
cmp
ret
icebp
mov
roll
stc
rcr
inc
out
xor
push
jns
in
dec
sahf
movsl
or
dec
sahf
icebp
mov
and
xchg
jge
stc
xchg
mov
mov
int
or
jb
outsl
nop
add
add
add
jb
ret
nop
bound
filds
sub
std
push
pop
mov
xchg
and
popf
std
js
stc
mov
cmpl
mov
call
inc
or
pop
cmp
cmp
mov
inc
dec
mov
and
mov
mov
add
add
add
stc
or
sbb
or
push
xchg
es
push
pop
mov
add
shlb
clc
neg
xchg
mov
inc
out
push
push
mov
mov
add
dec
pushf
movsb
or
add
hlt
mov
icebp
mov
push
mov
add
das
daa
cmp
jp
punpckldq
sub
add
add
or
les
mov
addr16
out
outsb
adc
cli
push
icebp
cli
pop
adc
cli
dec
push
dec
adc
mov
incb
ret
xorb
sbb
es
or
les
jno
shrb
not
cmc
lods
lods
repz
inc
xor
lods
or
push
lods
xchg
divb
cltd
arpl
push
add
add
add
xchg
xor
movsl
scas
clc
cld
sbb
jns
pushw
pop
adc
add
inc
push
rorb
jb
add
lock
jmp
lods
mov
jns
adc
lcall
xchg
jno
cltd
jb
sbb
or
jb
lods
mov
cmp
ss
pushf
pop
sub
cmc
or
jmp
dec
jecxz
roll
add
add
mov
pop
rdmsr
jb
out
sbb
in
pushf
xor
add
in
jo
add
je
rcr
lea
jo
lock
mov
push
sahf
call
mov
xor
add
popa
mov
call
mov
es
incl
add
add
add
sti
jne
jne
or
pop
add
loopne
call
mov
sbb
add
xchg
pop
push
repz
sar
xchg
clc
or
stos
jae
and
jae
xor
or
xchg
outsb
std
jl
push
test
add
dec
scas
add
push
mov
mov
outsb
and
add
les
daa
rclb
inc
add
cmp
incb
add
test
out
or
in
jae
push
push
icebp
insb
cmpsl
std
mov
call
mov
xchg
mov
add
inc
mov
dec
mov
movsl
inc
mov
mov
adcl
out
movsl
xor
mov
jle
stos
cli
push
outsb
xor
push
add
add
add
jno
pop
stos
pop
sub
inc
jg
daa
push
xchg
pop
bound
push
fdiv
cmpsb
jle
or
ret
xchg
xchg
addr16
sub
mov
xlat
cli
repnz
popf
add
arpl
adc
fisttpl
aam
pusha
int3
loope
and
lds
add
dec
hlt
push
bound
mov
cmp
add
add
add
pop
mov
push
add
call
packuswb
push
enter
sti
cld
push
cmp
mov
pop
push
xor
test
call
call
lock
es
push
imul
add
mov
test
mov
mov
or
cmp
add
add
add
movb
jo
jne
gs
ljmp
inc
adc
mov
aaa
js
pop
add
jnp
xor
addb
pusha
mov
mov
addb
add
add
iret
sbb
test
mov
popw
stos
repz
call
xchg
jmp
iret
add
add
add
add
loopne
call
test
mov
push
lea
sti
out
xchg
aaa
cmpsl
jb
orb
add
into
out
adc
jg
xor
sbb
scas
js
rclb
insl
lock
jns
mov
inc
sub
adc
fyl2x
mov
add
pop
mov
call
push
push
addb
push
add
add
add
cli
xchg
push
xor
sbb
int
xchg
mov
push
sbb
ss
cmp
fidivl
into
dec
dec
xor
mov
cmpsb
mov
call
adc
xchg
call
dec
lods
test
outsb
cltd
pop
int3
aam
movb
inc
jmp
daa
inc
xchg
icebp
iret
jae
inc
mov
stos
out
lods
cmp
mov
add
enter
sub
pop
inc
lds
sbb
ja
movsb
es
cmp
add
lahf
jb
sub
jno
int3
push
xor
dec
ud2
push
loopne
inc
fdivrl
fidivs
lds
sub
bswap
push
mov
jmp
das
stos
scas
adc
adc
push
adc
les
sub
mov
inc
xchg
sahf
add
add
add
int3
xchg
orb
xor
xlat
push
push
or
dec
jne
mov
dec
lds
inc
decb
xor
push
inc
movsl
xchg
fsubrl
and
jbe
ror
jbe
sub
jae
xchg
inc
adc
inc
mov
cli
fcmovnbe
inc
adc
add
pop
jp
ljmp
add
add
push
fcmovnu
mov
sub
gs
sub
mov
fmull
mov
pop
xor
sahf
mov
and
in
cli
or
mov
dec
pusha
cmpsl
mulb
sub
inc
lea
pop
pop
pusha
mul
inc
pushf
sub
mov
insb
clc
cli
fists
mull
data16
out
add
add
add
insb
lods
call
inc
insb
lods
push
daa
dec
push
lret
push
lret
and
or
sbb
inc
mov
push
lods
lock
jp
dec
jmp
sub
out
dec
pop
daa
xor
aas
inc
and
push
cs
int
lods
inc
lds
paddusw
add
add
add
xchg
roll
pop
ror
je
addb
in
xchg
rcr
mov
es
mov
adc
mov
fsubrl
mov
push
sub
in
rcrl
sub
mov
icebp
popf
push
inc
mov
insb
out
sub
int3
sub
lret
add
lds
add
add
add
sub
out
or
lds
push
mov
and
pop
dec
mov
mov
mov
jmp
testb
imul
pop
sub
add
cmp
pop
divps
add
dec
xchg
pop
inc
sbb
call
pusha
daa
and
mov
fldl
fstl
xor
pusha
repnz
ffree
and
add
add
add
fxch
cmpsl
es
test
mov
pop
pop
mov
add
pop
in
and
mov
push
andl
xchg
movsb
jbe
jnp
pop
test
cmp
and
icebp
jb
fisubrs
out
fstp
push
push
mov
mov
test
mov
add
add
add
movsl
sahf
int
pop
addr16
mov
pop
ja
sub
pop
cmp
push
sub
adcl
adc
and
mov
xchg
iret
and
sbb
add
iret
sbb
fsubr
adc
or
call
push
mov
out
repnz
adc
repnz
sub
push
push
pusha
add
add
add
pop
xor
call
xor
ljmp
cmp
addr16
test
pop
inc
cltd
rcr
lds
xlat
cmp
pop
xor
inc
call
mov
and
cmp
sub
jmp
rolb
and
dec
cli
data16
nop
mov
int
add
dec
popf
fst
sub
icebp
push
dec
js
add
add
add
mov
pop
dec
loope
and
mov
incl
fs
add
push
xor
rorl
ss
dec
xchg
imul
sub
xchg
sbbb
insl
mov
mov
outsb
shrl
or
sahf
jnp
cmp
fwait
repnz
xchg
sbb
shlb
add
popf
xor
adc
add
add
add
add
out
dec
and
mov
adc
leave
or
hlt
aad
mov
cmp
add
mov
dec
xorb
mov
jns
jge
nop
and
cmpsl
lock
jns
or
test
mov
pop
and
call
test
cltd
inc
cmp
and
add
add
add
sbb
cmp
bound
and
sbb
test
lcallw
mov
adc
in
das
sub
mov
add
xor
mov
test
jnp
xchg
sub
lret
push
sub
test
mov
xchg
xlat
scas
adc
add
add
add
aad
pop
lcall
mov
subb
xchg
inc
xor
sbb
inc
push
mov
addr16
fmuls
fiaddl
mov
movsl
daa
call
pushf
mov
cmpb
addr16
sub
or
ret
mov
lods
lds
fldl
add
add
add
lds
mov
jle
dec
pop
dec
jns
xor
inc
out
fbld
fiaddl
pushf
mov
mov
and
push
arpl
sub
xorl
push
pusha
push
lahf
sub
out
mov
icebp
add
int3
xchg
fstl
les
push
push
push
mov
divl
add
add
pop
mov
insb
popf
cmp
pushf
lds
jmp
add
xor
adc
xchg
dec
cli
dec
xor
jns
loop
jg
mov
bnd
movsb
dec
push
mov
adc
adc
dec
call
mov
aad
mov
cmp
xchg
add
cmp
je
rolb
add
add
repnz
add
inc
fs
push
xor
xor
enter
xchg
cmc
xchg
sahf
test
in
or
push
jae
push
cltd
call
stc
test
mov
pop
dec
mov
loopne
movsl
xchg
out
dec
mov
cld
mov
jmp
xor
and
nop
xor
jno
xlat
sub
sahf
cmp
jns
add
add
add
das
mov
or
insb
jb
mov
outsl
cmp
pop
mov
inc
mov
sbb
jle
mov
cmc
push
add
push
nop
or
pop
movsl
xchg
orl
ret
xchg
nop
lea
xchg
jbe
mov
inc
dec
test
mov
stc
mov
sub
daa
add
add
add
lret
ret
xchg
mov
clc
loope
sub
daa
lret
ret
xchg
mov
out
es
adc
mov
adc
insl
ret
mov
jg
ret
xchg
sub
or
jmp
icebp
sub
ret
pushf
xchg
mov
cwtl
mov
and
xor
add
add
add
addr16
xchg
xor
or
je
dec
addl
push
loopne
mov
pop
mov
hlt
push
xchg
decl
mov
outsl
mov
mov
mov
cmp
in
adcb
mov
incb
push
xchg
movsl
mov
xchg
and
sbbb
add
add
add
mov
inc
fsubrl
jl
mov
add
mov
test
inc
test
jns
popa
xchg
imul
mov
sub
js
cmc
dec
adc
xor
andl
fmuls
pop
stos
call
js
jo
jns
cmp
pop
add
add
shll
push
test
cmp
add
add
add
sbb
jecxz
stc
fwait
xor
imul
fildl
inc
inc
jns
sbb
pop
mov
lds
jp
icebp
pop
sbb
cli
lods
mov
jnp
inc
jb
mov
imul
popf
jno,pt
lock
loope
gs
dec
jns
or
pop
stc
mov
fwait
jl
imul
or
cmp
add
add
sbb
xor
icebp
sbb
inc
orb
lea
testl
in
add
add
jecxz
stc
adc
jp
mov
inc
lea
inc
cltd
xchg
mov
popl
xchg
adc
adc
gs
inc
lea
nop
cltd
xchg
mov
into
inc
clc
mov
adc
adc
add
add
add
inc
lea
push
pushf
xchg
mov
lea
and
ret
adc
jns
mov
inc
lea
pop
add
xchg
jle
out
repz
fiadds
mov
mov
mov
jb
insl
pop
popf
xor
xor
mov
cmp
shrb
scas
push
add
add
add
jp
nop
bswap
or
pop
stos
inc
lock
push
cmc
lcall
sbbl
stc
pop
cmp
pop
mov
subb
mov
test
and
cld
outsl
sbb
mov
push
cltd
mov
push
mov
cmc
mov
sbb
repz
fsubrp
xchg
add
add
add
pop
lock
loopne
sub
jns
mov
pop
dec
mov
cwtl
inc
sub
fwait
adc
mov
inc
jge
mov
pop
xchg
pop
ret
popa
push
cmp
add
jp
push
xor
push
lock
jo
dec
xchg
clc
js
xchg
adc
jns
lods
mov
dec
add
add
add
lcall
sbb
sqrtps
and
out
inc
mov
cmp
mov
pop
mov
lock
cmpsb
out
lock
mov
jg
icebp
fidivl
xor
lock
sbb
mov
jo
mov
lcall
sahf
dec
aad
je
ja
mov
jp
stos
and
in
add
jp
mov
icebp
aas
add
add
add
push
repnz
cmp
sbb
inc
stc
push
shlb
or
std
sub
xchg
shlb
je
inc
or
and
scas
scas
repz
out
into
cltd
cwtl
push
jae
in
nop
and
jl
sub
xor
mov
adc
pop
add
push
mov
jno
xchg
popa
push
and
mov
add
add
add
shlb
mov
mov
sar
scas
repz
mov
insl
sub
rorb
out
repz
add
pusha
add
mov
loope
mov
mov
jnp
mov
jb
cmp
ss
fidivrl
mov
in
xchg
fsubp
cli
xchg
dec
mov
pop
test
jnp
addb
add
add
pop
fiaddl
rorl
outsl
cmp
cmpb
cmp
je
cmp
lret
pop
or
cli
ja
bnd
cli
xchg
push
mov
mov
cmp
add
das
nop
xor
imul
ret
push
xor
add
mov
ret
sbb
add
add
in
cmp
ret
adc
in
mov
std
mov
pop
sbb
pop
in
cwtl
jnp
pop
aad
cmp
or
xchg
cmpb
cmc
mov
js
push
inc
cmc
mov
push
xor
inc
mov
xor
imul
mov
cmc
and
mov
add
add
add
iret
adc
add
cmp
cmp
inc
jmp
sbb
lds
lds
inc
lods
add
dec
mov
mov
inc
aaa
cld
or
inc
jmp
xchg
jne
mov
iret
icebp
mov
push
sub
jo
loop
stos
notb
inc
add
inc
lock
add
add
and
sti
jmp
mov
std
jmp
xchg
dec
sub
xor
pop
pop
or
lock
add
jns
std
lcall
cld
in
mov
test
sti
mov
jne
popf
sti
adc
sub
cmp
orb
mov
adc
dec
add
aaa
mov
add
add
add
jno
xchg
pop
inc
call
jo
rorb
dec
sub
push
int3
ja
popa
pop
cmp
repnz
or
dec
add
loopne
cmp
pushf
or
pop
in
xor
adc
mov
jae
dec
pushf
push
jne
into
fdiv
xlat
dec
add
aad
add
loop
dec
add
lds
add
add
add
mov
rorb
std
pop
aam
int
out
std
mov
or
or
dec
rorl
mov
or
cs
or
and
or
adcb
out
in
js
sbb
sub
pop
aad
xchg
aam
mov
aas
xchg
sbb
aam
incl
add
add
add
stos
es
mov
call
sar
jb
add
je
mov
add
bound
aam
mov
lret
out
pushf
aam
daa
mov
add
loopne
push
add
outsb
add
lret
fildl
cld
sahf
fsubrl
fs
add
jg
jle
stos
lds
adc
add
add
add
sbb
or
clc
mov
jl
aad
ds
jns
subb
loope
movsb
andb
push
and
sarl
inc
adc
dec
pushl
lret
or
aad
insb
inc
aad
ficoms
test
cmc
add
push
inc
dec
jnp
jae
adc
jbe
scas
rorl
add
add
add
cli
stos
call
test
inc
std
cmpb
sbb
lea
cltd
add
fwait
test
inc
lods
stos
sbb
or
mov
test
mov
cmp
mov
add
sarb
hlt
lds
in
mov
call
je
inc
cmp
jae
xchg
adc
clc
mov
lea
sti
incl
add
add
add
jmp
add
xchg
lahf
cld
cld
stc
mov
jo
push
ret
xchg
cwtl
push
jno
jmp
adc
jnp
or
pop
int3
mov
cmp
cs
sub
and
add
xchg
pop
stc
cld
cltd
cmpsl
jnp
mov
ficoms
or
add
and
rclb
xchg
call
adc
clc
ljmp
dec
fmull
call
andb
jmp
jmp
je
jl
mov
push
cmc
push
push
pop
add
mov
sub
dec
in
lret
adc
int
push
or
leave
and
ds
jl
cmpb
mov
je
xor
mov
jl
add
add
add
add
insb
cmp
int3
cmc
dec
add
jecxz
fnstenv
cmp
mov
add
test
lret
jge
xchg
mov
add
add
movsb
fildl
imul
inc
sbb
shr
or
xor
push
loope
aam
jge
dec
jmp
repz
xorl
add
ret
jmp
scas
xchg
call
jge
stos
pop
mov
jne
xchg
js
ret
or
pop
cmc
add
xor
jo
sub
push
scas
mov
fstl
inc
adc
xor
into
faddl
cltd
stos
inc
mov
pop
js
pop
or
mov
lds
adc
sub
sbb
filds
add
add
add
gs
pop
mov
inc
inc
sbb
fyl2xp1
test
ret
cmp
mov
xchg
out
bound
adc
sub
inc
or
subb
shlb
call
pop
fisttps
ror
sbb
iret
sub
out
jge
or
jb
xor
xchg
mov
mov
fldl
add
add
add
push
push
jg
es
inc
xchg
sbb
and
scas
mov
loopne
cmp
scas
inc
inc
outsb
cmp
mov
ds
rorl
inc
outsb
pop
jae
aad
and
mov
data16
icebp
or
pop
cmp
mov
out
push
pop
fnsave
std
dec
push
fcmovne
orb
add
adc
insl
inc
mov
pop
aaa
or
adc
and
mov
daa
ljmp
push
out
lret
out
jmp
jmp
imul
mov
addr16
imul
stc
push
sbb
jecxz
in
aaa
in
in
sbb
sub
in
ljmp
in
inc
inc
sub
std
inc
add
add
add
and
enter
mov
sub
loope
adc
mov
or
mov
fcoml
movsl
out
or
pop
pop
nop
hlt
out
mov
neg
jns
frstor
repnz
xchg
ret
pop
fcmovnb
cmc
insb
cs
movsb
push
dec
jle
push
mov
scas
insb
push
enter
cmp
daa
push
outsb
xchg
ret
in
fmuls
add
add
add
pop
outsb
addr16
pop
xchg
shr
fstpt
rolb
dec
icebp
stos
in
fadd
sbb
and
sub
sbb
mov
data16
mov
pop
sbb
fdivrl
sti
fildll
rcr
jle
xor
fdivs
nop
in
in
out
dec
xchg
faddl
inc
push
add
add
shll
mov
fcompl
mov
shlb
repnz
aam
push
ficoms
pop
push
fstp
sub
fistpll
push
call
mov
pusha
dec
xor
or
inc
lcall
jg
mov
push
filds
pop
sub
add
pop
psubusw
mov
imul
push
rcrb
in
ljmp
add
add
arpl
fneni(8087
push
jp
adc
sbb
mov
or
les
xor
fistl
jg
and
out
popl
mov
mov
and
sub
repz
les
xor
inc
cmovae
pusha
xchg
or
cmp
xor
push
add
add
add
icebp
jne
out
jne
pop
loope
mov
sub
stos
push
popa
adc
ret
dec
icebp
pop
mov
fisttpl
push
cmp
addb
mov
insb
dec
outsl
sub
ret
iret
ret
dec
outsl
mov
pop
sub
outsb
mov
xor
in
or
xor
push
inc
jae,pn
ret
out
and
in
sub
lret
add
add
add
pop
or
and
popf
sub
pop
rorb
adc
jne
mov
loop
lcall
push
pop
add
je
inc
lret
je
in
nop
pusha
inc
repz
test
rorb
daa
inc
bnd
movsl
lock
mov
push
mov
or
xchg
dec
fbstp
cmpsb
add
add
add
sbb
inc
and
adc
push
add
pop
pop
in
popl
rcr
aas
sub
dec
je
add
hlt
inc
inc
or
mov
dec
pop
cmp
inc
mov
push
inc
inc
stc
out
inc
pop
pop
call
pop
push
mov
inc
test
test
std
add
jno
in
mov
add
add
add
loope
fisttps
fistpl
push
subb
xchg
xchg
enter
adc
xor
test
iret
mov
cmc
lods
mov
push
xchg
lahf
inc
lds
dec
inc
xchg
dec
adc
mul
int
sub
das
bt
fistpll
add
setle
sub
xchg
add
cltd
add
scas
fwait
lret
pop
add
ds
insb
mov
xchg
pop
add
rolb
out
dec
lcall
add
mov
sub
lahf
sbb
mov
fdivrp
scas
xchg
imul
xchg
js
pop
popf
ja
pop
pop
pop
test
jae
cmp
and
mov
movsl
std
mov
movsl
mov
add
add
add
and
mov
movsl
aad
pop
in
sub
js
popa
mov
lock
mov
notl
js
mov
cwtl
sub
jns
cmc
fst
cmp
xorl
das
test
shll
mov
mov
xchg
pushf
pop
push
test
test
lcallw
add
add
add
sbb
call
xchg
pop
sti
adc
fistpll
pushf
iret
pushf
lock
in
cmp
adc
and
adc
mov
inc
push
decl
lcall
xor
mov
jle
sahf
frstor
outsb
or
dec
aam
sub
movl
add
add
add
arpl
mov
sbb
and
mov
cmp
pop
scas
in
mov
arpl
push
pop
outsb
movsb
sub
cmp
dec
xor
or
cmp
mov
push
sbb
or
insl
loopne
fidivs
ret
push
scas
insl
loopne
mov
cmp
fiadds
add
add
add
cmp
hlt
push
xor
push
lahf
cmp
mov
sub
dec
test
fistpl
or
xor
pushf
xchg
sub
pop
add
sbb
fldenv
mov
xchg
cmp
into
pop
mov
sub
xchg
pop
jbe
dec
arpl
sub
dec
xchg
add
add
add
or
outsb
push
hlt
xchg
xchg
dec
mov
jmp
push
outsl
or
xchg
mov
inc
loopne
xchg
movsl
mov
dec
xchg
inc
add
mov
insw
mov
clc
pusha
mov
insl
jg
decl
insl
mov
sub
cwtl
xchg
cmc
xor
xor
jne
in
add
add
add
jg
mov
xchg
sbb
push
mov
push
cs
and
jo
mov
insl
outsb
mov
outsl
cwtl
out
pop
pop
mov
push
std
xchg
gs
jbe
in
sub
fstl
nop
add
push
jbe
rcl
xor
mov
sub
add
add
fstpl
and
mov
jmp
mov
dec
mov
adc
daa
mov
test
mov
mov
popa
fnstenv
xchg
or
pop
nop
xor
pushl
shl
xchg
iret
pop
sar
xchg
pushf
filds
jb
mov
push
jp
jns
xorb
add
jl
incl
add
add
add
ds
bswap
sub
cs
setp
aaa
sub
add
sub
out
sub
add
sub
sub
add
sub
sub
add
sub
vpmacsdql
sahf
sub
and
sub
icebp
pusha
mov
mov
pusha
dec
sub
icebp
pusha
pop
sub
add
add
add
xor
lods
in
xor
fidivs
cmpsb
sti
sbb
inc
psignw
ja
jg
mov
mov
dec
adc
sar
icebp
jp
mov
sti
pop
fcoml
and
cmp
shrb
cld
jno
decl
or
mov
pop
cld
stos
rcrl
aas
lret
push
xor
add
add
add
xor
push
cmp
mov
sti
iret
xchg
dec
pop
mov
jns
ret
or
sbb
adc
fidivl
sbb
leave
ret
xor
xchg
inc
cwtl
scas
into
push
mov
scas
repnz
sbbl
and
xchg
push
ret
pop
jbe
ja
les
ja
jmp
mov
add
add
popf
scas
dec
ret
xchg
mov
add
lcall
cld
sarb
ret
cltd
fisubs
add
shl
fisubs
lods
adc
cmc
push
inc
ret
ljmp
cmp
aam
lock
sti
or
jmp
lret
aaa
dec
cli
pop
rol
mov
add
add
add
stc
add
inc
fs
mov
or
lock
call
mov
jnp
leave
mov
imul
clc
ja
cmp
xor
frstor
aad
push
test
fnstcw
jns
les
jg
cmp
lds
les
jmp
clc
jo
inc
cpuid
add
lahf
pop
mov
out
repz
add
add
adc
push
std
or
inc
mov
ss
std
out
imul
repz
pop
repz
inc
or
std
scas
jo
fildll
stc
lret
mov
inc
bsr
and
cmc
addr16
ret
push
movl
addb
pusha
lret
clc
inc
and
mov
add
push
inc
out
sahf
or
or
sbb
icebp
jnp
push
jb
inc
jns
jp
outsl
faddp
subb
ds
scas
jne
clc
xchg
hlt
js
jae
xchg
int3
outsl
mov
addl
repz
insb
and
dec
fsubrs
push
sbb
mov
cmp
dec
sbb
leave
subb
push
dec
lret
movsb
sti
cmp
add
add
add
imul
repnz
mov
add
je
aas
or
cwtl
mov
mov
sbb
push
ss
lods
xchg
mov
cmp
js
push
test
leave
push
cmp
les
xor
cmpsb
xchg
out
inc
js
imul
sahf
lret
add
add
add
pop
mov
stos
stc
dec
mov
outsl
cmp
xlat
test
or
movsb
pop
mov
out
lret
mov
xchg
pop
pop
es
and
outsl
xchg
xor
xor
enter
jae
xlat
clc
mov
lahf
dec
ret
leave
push
add
fdivs
sti
pop
jle
fwait
cmp
nop
imul
jg
fnstenv
push
out
sti
or
add
add
add
mov
jo
mov
mov
es
lock
idivb
sub
jecxz
popf
mov
dec
fistpll
mov
stc
ret
lock
dec
dec
push
outsl
add
in
lock
mov
cmc
sub
sub
mov
and
dec
cmp
subl
inc
int3
aas
repz
lahf
mov
mov
add
add
add
loope
vminsd
loope
repnz
mov
inc
rcll
sub
fcos
sarb
movq
setno
lahf
loop
psrad
cmpsb
mov
in
mov
test
imul
xor
and
fcomi
push
psubw
test
sahf
mov
cwtl
packsswb
fwait
pop
cmp
add
add
adc
dec
cltd
cltd
dec
push
lds
jnp
fmulp
enter
test
jns
mov
adc
xor
push
mov
inc
insb
cmp
add
je
jp
pop
mov
dec
aam
dec
repz
test
cmc
adc
or
mov
pusha
pop
int3
loope
inc
jge
mov
cs
sbb
add
add
add
or
add
mov
inc
shr
sti
push
pop
bound
adc
sbb
ds
jmp
dec
xor
sti
or
out
pop
scas
push
fsubl
xlat
aad
out
sarl
divl
pop
dec
jb
mov
jp
jp
testl
mov
inc
sbb
sub
and
mov
add
add
mov
filds
sti
insb
out
or
scas
insl
mov
mov
insb
adc
jb
aas
mov
popa
mov
sub
cmp
mov
test
inc
sub
lcall
mov
mov
mov
mov
or
arpl
sub
mov
call
addr16
ss
dec
add
add
add
add
call
sub
mov
sub
mov
mov
mul
repz
mov
xor
stc
push
jno
push
and
std
add
stos
jg
jg
in
jle
add
divb
enter
cli
add
cmp
cmp
or
cmpl
jg
mov
pop
push
cmpsl
cld
add
add
add
lock
call
lahf
pop
and
adcb
call
mov
lock
inc
je
push
pop
push
fcoms
ja
jo
pop
mov
jmp
or
std
mov
loop
js
dec
sti
ret
mov
js
imul
rorl
clc
scas
or
shlb
aaa
dec
outsb
lcall
add
add
add
mov
push
mov
imul
xchg
cmp
jl
xor
dec
or
push
icebp
mov
fdivrp
jp
loope
push
pop
addr16
mov
adc
cld
xor
clc
test
sahf
inc
cld
mov
movsl
repnz
xchg
mov
adcb
movsl
je
add
not
jnp
popa
mov
xchg
into
mov
add
add
add
out
pop
ja
out
call
xchg
add
cltd
sbb
sub
stos
sbb
xor
jmp
mov
clc
adc
imul
loope
outsl
add
or
loopne
jmp
leave
xor
cmp
mov
and
inc
jle
ss
sbb
add
add
mov
jbe
inc
dec
add
add
rcl
cld
out
lock
cmp
mov
in
lret
loopne
das
test
xlat
hlt
add
jp
mov
sub
add
adc
or
jbe
jnp
jb
out
mov
sahf
push
or
rcl
sbb
push
add
add
add
add
add
push
sbb
jmp
and
xlat
add
pop
idiv
mov
or
je
in
icebp
ja
push
call
aad
icebp
aaa
sbb
arpl
inc
cld
add
push
sar
mov
xor
je
sub
mov
das
ret
out
pop
imul
in
addl
add
add
mov
in
add
add
adc
push
and
sub
and
repnz
and
mov
cli
mov
xchg
mov
add
mov
push
cld
pushl
sub
pop
xor
cmp
out
add
lcall
cmp
fs
popa
mov
insl
cmp
add
jb
add
add
add
out
sbb
out
adc
scas
mov
clc
or
add
jge
sbb
adc
jl
or
hlt
dec
mov
out
mov
testb
mov
inc
inc
and
pop
mov
pop
cmpsb
mov
arpl
add
add
add
add
dec
lcall
sbb
lret
mov
mov
inc
scas
repnz
lret
cmpsl
popf
scas
xchg
mov
cmp
mulb
inc
icebp
and
dec
sub
sub
es
sub
mov
std
mov
inc
xchg
daa
std
lods
mov
rclb
push
add
add
add
outsl
jo
lahf
pop
clc
fdiv
inc
mov
ror
repnz
dec
repnz
adc
es
inc
sub
inc
and
repnz
pushf
inc
jecxz
arpl
repnz
ret
in
in
inc
and
dec
aad
sub
enter
pop
repnz
lea
std
inc
ret
int
inc
rorl
sti
scas
inc
jo
sub
inc
nop
sub
leave
or
mov
add
ret
incl
xchg
pop
inc
ljmp
loop
inc
add
mov
dec
mov
mov
jns
pusha
insl
mov
fbld
sub
das
call
dec
sub
jno
inc
inc
aaa
sub
or
mov
fdivl
mulb
inc
hlt
pop
fidivrs
add
add
add
mov
icebp
push
and
ficomps
cmpsl
imull
fisubrs
pop
into
dec
xor
fisubrs
rcrb
and
inc
inc
pop
neg
fisttps
fildl
loop
inc
push
inc
xor
fstl
pop
mov
daa
or
jg
fstl
and
pop
fmull
inc
fstl
push
xor
stos
mov
add
mov
add
or
adc
push
adc
outsb
stos
push
fists
bound
lods
cmp
xlat
and
and
sarl
scas
in
sub
jle
cmp
sub
fisubrl
xchg
fimull
dec
jmp
and
jno
sub
dec
lods
or
sbb
inc
add
add
add
gs
arpl
addr16
jns
adc
mov
push
dec
cmp
or
je
roll
in
icebp
cmp
mov
jg
push
in
insl
imul
cld
mov
cmp
adc
adc
push
cmp
rcrb
fs
xor
add
ret
mov
imul
add
add
cmpsl
fdivl
xor
out
repz
sbb
loope
xor
shll
enter
fcmovnb
dec
js
and
imul
adc
or
push
fcoms
bound
push
lds
lock
xchg
cld
jno
fldenv
and
enter
mov
add
add
add
pop
add
mov
int3
ja
push
repz
testb
push
in
mov
fyl2xp1
sti
mov
pop
dec
leave
stc
fstp
testl
iret
cmp
xrelease
pusha
adc
daa
sarl
pop
mov
subb
pop
faddl
in
mov
fstp
or
xlat
es
jecxz
add
add
add
mov
mov
sbb
imul
inc
repnz
or
bnd
rorl
icebp
cmp
dec
inc
cmp
fldenv
fldl
fistpl
addr16
in
mov
sahf
shll
test
daa
sub
frstor
inc
orb
fstl
aaa
and
or
add
add
add
inc
bound
dec
out
loopne
dec
jae
pop
mov
add
adc
pop
and
pop
int
mov
or
ss
daa
cmp
sti
or
xchg
int3
aad
and
mov
jne
subl
mov
loop
add
lds
int
dec
lahf
fs
add
orb
jbe
cmp
sub
sub
mov
loopne
iret
mov
xor
mov
dec
add
push
sub
cmp
cmp
jo
sti
int
dec
enter
add
dec
mov
pop
xchg
aam
mov
imul
cmp
fcomps
add
add
add
hlt
add
stc
mov
outsl
mov
push
subl
stc
and
jae
orb
xor
stos
popa
add
or
and
lcall
mov
cwtl
inc
cwtl
add
xor
pop
add
jge
outsl
mov
std
addr16
xorl
push
sub
lods
jmp
nop
add
add
add
pop
push
mov
push
push
lcall
inc
lcall
and
mov
repz
popa
shlb
jns
iret
cmp
sti
dec
push
cli
in
loop
mov
mov
push
pop
sub
xor
loopne
pop
in
das
inc
xchg
jmp
in
sbb
xchg
test
add
add
and
mov
icebp
or
out
outsb
mov
xor
jo
ja
jns
mov
xor
xchg
addr16
fistl
dec
js
mov
fcomps
sahf
sub
decb
mov
jmp
fnstsw
xor
ja
jo
jg
mov
out
add
add
add
mov
lret
sbb
or
cmp
add
mov
inc
mov
mov
test
sub
xchg
rcll
inc
insl
push
mov
dec
sbb
cmpsl
lods
xchg
nop
jne
lahf
loop
mov
xor
cmp
inc
decb
repnz
add
add
add
xchg
pushf
push
cltd
mov
pop
pop
sub
jmp
mov
xor
lret
test
inc
cmp
test
add
xorl
push
movsb
shr
jl
push
outsb
orb
pusha
push
xchg
call
test
or
push
add
lods
test
nop
aas
mov
inc
arpl
dec
add
add
add
outsl
jle
pop
nop
xor
mov
jp
stos
dec
inc
jle
ja
xor
cltd
push
into
hlt
cmp
jle
and
fwait
call
and
adc
xchg
add
inc
cwtl
add
inc
lcall
out
mov
inc
lcall
sbb
pop
add
add
add
or
sbb
lcall
xchg
pop
pop
or
sbb
add
test
lea
das
mov
mov
sub
or
negl
out
sub
ficomps
and
cmpsb
mull
mov
jecxz
out
mov
add
add
int
testl
cld
cltd
push
scas
mov
and
jl
push
jge
movsl
addr16
xchg
dec
sar
and
ret
jg
xchg
add
mov
or
mov
cwtl
ljmp
dec
pusha
jmp
xor
mov
xchg
test
pop
xor
lret
push
in
add
add
add
xchg
sub
sbb
mov
and
test
xchg
xor
jg,pn
jmp
sbb
je
cmpsb
movsb
mov
aaa
les
imulb
adc
xorb
xchg
insb
roll
ror
pushf
rolb
ror
mov
inc
lods
test
mov
rcrb
add
add
add
push
jno
int3
add
xchg
aas
cld
inc
lods
or
xchg
in
xor
popa
pop
fsubl
pop
add
lret
lret
loope
inc
pusha
out
sbb
push
pop
jae
pop
pop
push
adc
scas
push
xor
jp
cli
mov
fidivrs
fdivrp
aam
inc
repnz
jle
lock
mov
add
push
xchg
pop
fwait
movsb
or
div
add
fwait
cmp
out
cli
cmp
cmp
xchg
pop
xchg
pop
negl
mov
test
xchg
pop
add
cmpsl
dec
leave
sbb
icebp
nop
loop
jge
sub
ffreep
repz
add
ret
out
adc
call
jl
pop
add
add
add
pop
push
add
repnz
lcall
pop
hlt
icebp
clc
enter
mov
leave
jb
add
push
cltd
out
repz
mov
pop
cmp
jg
add
mov
outsl
shl
jno
adc
push
je
ret
add
pop
xor
iret
dec
xor
daa
int
push
nop
mov
dec
sarl
out
or
xor
add
add
add
clc
je
pop
aam
jne
fisubrl
mov
mov
das
lds
push
xchg
jmp
in
lock
mov
lret
jnp
loop
jb
mov
or
lds
loopne
fistl
cld
lret
cli
pop
jo
fistl
add
lret
inc
fists
xchg
nop
mov
cmp
roll
cli
adc
add
add
add
xchg
push
pop
std
aas
mov
and
leave
mov
cli
xor
popf
xor
mov
inc
and
push
adc
or
nop
inc
pusha
testl
aaa
out
push
jg
sbb
inc
push
andl
push
das
mov
mov
cs
mov
push
pop
jns
add
add
add
into
popf
mov
push
imul
lods
mov
jge
xchg
sub
in
sub
mov
add
xchg
imul
outsl
jnp
xor
or
push
fwait
sub
xor
shll
insb
push
lahf
xor
aaa
lock
mov
das
xor
inc
push
jmp
scas
test
ficompl
add
add
add
pop
mov
pop
inc
insl
mov
lcall
mov
je
lock
mov
divl
repz
and
cmp
add
mov
leave
std
ror
inc
jno
nop
jb
lds
mov
pop
std
inc
add
xor
xchg
xchg
jb
clc
std
das
es
das
daa
in
stc
add
add
add
repz
das
iret
jmp
cmp
add
flds
cmp
mov
inc
repnz
rdtsc
sarb
mov
iret
out
icebp
xchg
jb
or
or
mov
push
iret
fcoml
or
das
dec
push
frstor
sti
scas
sbb
or
add
add
add
dec
mov
fadds
cwtl
cmp
sti
loope
mov
dec
sahf
pop
nop
dec
mov
cltd
inc
icebp
fmuls
and
mov
js
icebp
iret
lcall
push
adc
inc
stc
jnp
shll
xchg
stos
sub
repnz
movsl
testl
leave
movsb
fld
add
add
add
mov
outsl
jne
push
cmc
jb
push
popa
xor
leave
movsb
stc
aad
push
sub
les
xor
fnstenv
fwait
push
inc
xchg
dec
xchg
int3
dec
cwtl
movsb
pop
dec
lahf
inc
adc
xchg
inc
js
divl
mov
xor
xlat
push
jnp
mov
mov
mov
inc
xchg
add
add
add
cmp
mov
test
lcall
dec
inc
cmp
pop
sbb
rcrb
jns
and
lock
pushf
sub
jg
repz
inc
pop
xor
add
scas
cmp
out
add
mov
or
sbbl
mov
aam
jno
movsl
pop
xchg
add
add
add
push
push
outsl
xchg
aaa
jae
stc
push
jae
push
push
je
andl
jne
cld
mov
in
shr
sbb
xor
pop
lahf
add
mov
or
pop
mov
add
bnd
inc
sar
adc
jnp
test
dec
add
mov
stc
decb
jae
test
add
add
add
sti
aas
hlt
pop
add
leave
add
pop
add
leave
adc
leave
add
pop
or
leave
or
add
adc
in
xor
insl
hlt
scas
sbb
add
divb
adc
add
cmpsl
jnp
and
xadd
push
fcmovnbe
add
hlt
xchg
sbb
add
leave
xchg
mov
dec
add
add
add
sbb
lea
or
je
inc
mov
cmpsb
inc
mov
push
push
leave
and
repz
ljmp
mov
stc
scas
mov
std
inc
pop
inc
je
or
mov
dec
add
xchg
xchg
mov
pop
pop
xchg
fisttpl
int
dec
lcall
xchg
mov
add
xchg
aad
cli
bnd
add
add
pop
and
xchg
cmp
push
pop
pop
les
dec
sbb
xlat
ret
scas
das
stos
xlat
repz
in
dec
push
add
xchg
daa
lods
imul
pop
mov
inc
mov
fld
and
testb
dec
insl
mov
push
xor
fadds
jo
add
cmpsb
daa
or
or
mov
rorb
add
add
int3
mov
or
sbbb
mov
bound
in
adc
mov
or
jo
xchg
mov
sub
mov
in
sub
mov
or
xchg
mov
or
add
ja
test
cwtl
pop
adc
jl
lea
xchg
cld
and
cld
push
jb
sub
ret
bound
add
add
mov
popa
or
pop
push
mov
idivl
xor
std
je
fwait
dec
mov
pop
addr16
pop
mov
cld
cmp
or
mov
std
je
aam
in
mov
std
ret
mov
in
xor
clc
mov
mov
push
xor
testl
mov
mov
addl
add
add
fdivr
or
add
arpl
dec
push
adc
test
lea
orl
sbb
inc
dec
inc
adc
aam
inc
in
mov
or
sbb
push
mov
mov
decl
lods
mov
jl
dec
adc
sar
mov
movsb
and
scas
sub
jmp
incl
add
add
add
fwait
add
push
or
pop
cmpsb
data16
dec
pushf
jge
mov
or
or
push
jle
rclb
leave
fwait
ja
and
push
cld
addr16
bnd
add
jmp
fnsave
repz
clc
mov
add
mov
and
mov
jle
mov
add
testl
add
add
aad
sbb
jmp
clc
mov
add
ds
loop
mov
push
loop
sbb
stos
clc
mov
ljmp
mov
pop
iret
ljmp
mov
cmpsb
push
out
ss
fnstenv
add
or
add
mov
rolb
push
lea
push
nop
or
add
add
add
lret
fmuls
mov
out
dec
mov
inc
jmp
cmp
mull
add
mull
inc
cwtl
adc
fstpl
int
out
lds
fildl
inc
lcall
add
iret
add
scas
in
stos
or
add
scas
push
xor
stos
or
pop
add
add
add
inc
fcmovnu
bound
pop
and
pushf
adc
fstpl
xor
sub
xlat
fisttpll
dec
pusha
or
icebp
lret
adc
outsb
xlat
fnstsw
sub
imul
aam
jl
pop
cmpsl
aad
mov
push
pusha
mov
push
ljmp
sahf
sbb
xlat
add
dec
mov
jg
aad
add
add
add
cmp
fnstsw
or
loope
fcompl
and
mov
and
mov
sub
addr16
pop
shl
aad
dec
push
ret
mov
scas
and
outsb
xor
subl
mov
add
mov
mov
add
add
add
mov
jnp
scas
ret
sub
fnstcw
and
loopne
cmpsb
mov
push
fldl
xor
sub
or
imul
das
lock
int3
xor
ljmp
cld
push
sub
xor
in
adc
cs
mov
fs
sbb
outsb
into
les
add
add
add
sbb
test
push
leave
ret
jmp
fisubrl
mov
or
out
sbb
mov
outsl
out
aam
xor
rorb
jmp
mov
dec
imul
pop
xchg
test
and
mov
mov
imul
add
add
fsubrp
in
jle
pop
gs
add
call
shll
dec
mov
push
lods
dec
imul
xchg
mov
dec
mov
mov
mov
outsb
fwait
arpl
mov
adc
sub
sub
or
add
fstpl
sahf
outsb
lret
fdivl
push
adc
dec
iret
pusha
fisubl
dec
in
ja
add
add
add
aaa
inc
sarl
sub
imul
jne
mov
xchg
in
mov
outsb
dec
xor
xlat
dec
into
pop
out
jb
bound
xchg
sahf
js
adc
fistpll
and
leave
pusha
stc
fdivr
pop
fstp
sub
dec
fimull
pop
fidivrl
adc
shrl
push
imul
fldenv
pop
mov
add
add
add
jbe
pop
mov
sbb
cmpsb
es
mov
lods
pushf
pop
pop
mov
pop
inc
out
fcomps
push
inc
pop
and
aas
jb
mov
mov
mov
gs
mov
cmpsl
inc
jg
push
push
jg
inc
leave
mov
subl
inc
pop
add
ret
andb
inc
iret
clc
add
add
add
int
fadd
ret
pop
dec
ret
mov
popa
outsb
mov
bound
jl
xor
leave
dec
xor
dec
or
mov
fistl
xchg
adcl
xor
enter
rcrb
mov
fmull
lea
mov
imul
jmp
pop
sbb
andl
add
add
add
mov
andb
mov
pop
mov
push
mov
dec
mov
orb
fcmovne
ret
mov
es
fldenv
imul
int3
mov
ret
and
inc
mov
mov
pop
fcompl
cmpsl
rcrl
inc
je
roll
add
add
shrb
xor
sub
outsb
out
fstpt
push
pop
dec
lea
dec
adc
or
push
inc
mov
jae
outsl
jg
imul
loope
fdivrl
lods
popa
ret
xor
ss
jg
icebp
adc
out
sub
xchg
push
les
call
aam
and
out
xlat
out
pop
fs
add
add
add
out
lret
and
scas
pop
imul
loop
pop
rol
adc
pusha
adcl
scas
jle
addr16
imul
test
shlb
xchg
in
fstpl
mov
jmp
daa
mov
cmp
cwtl
nop
or
arpl
or
fnsave
test
add
add
add
xchg
add
dec
hlt
xor
lea
add
dec
clc
adc
mov
push
xlat
scas
int3
jmp
into
insb
xor
xchg
push
sahf
gs
xchg
rclb
jle
jecxz
mov
push
aas
mov
lock
add
add
xor
sub
icebp
iret
add
mov
mov
add
add
add
call
mov
cltd
call
fistpll
xor
lret
jo
int
and
imul
mov
data16
sbb
xlat
and
or
add
jne
movsl
dec
xchg
sub
imul
je
pop
addr16
ss
xchg
clc
xor
add
add
repz
cmp
test
aas
outsb
and
push
cmpsb
or
fsubl
jge
fwait
xchg
popa
mov
mov
pop
adc
and
dec
stos
pop
push
test
mov
mov
sbb
xorb
add
push
iret
inc
pushf
cld
movsb
aam
ret
nop
sbb
add
add
add
loop
out
add
adc
gs
cmp
push
cmc
cmp
orb
push
xchg
cwtl
cltd
fs
xchg
xor
mov
xor
mov
mov
movsl
mov
cltd
insb
inc
inc
cmp
in
jl
mov
push
xor
push
imul
xchg
xor
lcall
add
sbb
push
daa
mov
pop
lahf
mov
fcmove
push
adc
mov
mov
cmp
xchg
and
fwait
add
leave
fiadds
or
cmp
or
test
inc
push
jmp
jmp
jno
ja
sub
out
inc
ljmp
add
add
add
data16
mov
mov
shll
call
std
add
or
ss
mov
jne
inc
inc
push
cmc
mov
mov
mov
cmp
movq
xchg
mov
jo
dec
cld
lcall
dec
in
xchg
cld
inc
scas
jns
mov
dec
or
inc
popa
and
add
add
add
sub
je
pop
inc
lahf
call
mov
int
cmpsb
popa
add
inc
cmp
push
shr
loop
xor
insb
je
mov
inc
cltd
andl
mov
dec
xchg
cld
jg
pop
xorb
jl
jne
mov
outsl
mov
push
mov
pop
mov
xor
out
add
add
add
std
add
sbb
sahf
cmp
push
call
xchg
sub
pop
out
sbb
sub
inc
pop
mov
xor
sub
xor
xor
adc
mov
sbb
lret
mov
jne
sub
int3
dec
jl
add
mov
test
stos
add
add
add
jbe
xchg
addr16
inc
clc
mov
stc
sub
cmpsb
pop
cs
call
out
xchg
lods
cmc
pushf
into
sub
ret
xchg
mov
mov
xor
or
loope
mov
mov
cmp
ret
xchg
pop
nop
xchg
add
add
add
add
mov
cmp
test
ret
xchg
push
lcall
xor
cmp
fisubrl
mov
scas
sbb
push
test
or
push
popf
cltd
add
cwtl
test
cwtl
call
xor
lock
das
icebp
cltd
pcmpgtw
jns
cmp
ljmp
pushf
or
lock
fistpll
add
add
or
jae
pop
jnp
icebp
cli
addl
mov
jbe
sbb
aad
mov
pop
pop
mov
xchg
das
icebp
lods
jns
dec
sbb
sub
js
xor
pop
sti
jl
repnz
xor
js
xchg
jb
andb
push
jb
jbe,pt
scas
xor
add
add
add
movsb
xchg
xor
jns
sbb
mov
fsubrs
loop
dec
orl
hlt
stos
fadd
fsubs
in
int3
cmp
xorl
push
add
xor
jne
pop
jno
aaa
jg
lea
pop
sbbl
xchg
cmp
clc
add
add
add
sub
jecxz
test
push
cli
xor
pop
std
mov
outsl
or
jo
pop
imul
adc
mov
mov
jns
lret
enter
mov
les
push
movsb
mov
fdivrl
xor
pop
mov
jbe
mov
jmp
adcl
add
add
xor
or
ja
add
cmpsb
stos
adc
fmull
iret
shlb
mov
ret
ret
les
mov
xor
cmp
ret
stos
xor
mov
jno
movl
ret
into
mov
in
or
stos
ret
icebp
xchg
add
add
add
xor
jae
add
notl
add
jmp
scas
mov
or
testb
pop
or
xor
test
xchg
pop
jg
cmp
jp
xor
cli
shr
js
xor
dec
push
ds
in
xchg
pop
xor
mov
ror
js
cmp
icebp
add
add
add
adc
inc
lods
rcll
cli
jge
pop
fcmovnbe
int
adc
icebp
ficoml
lret
js
inc
mov
outsl
xor
js
inc
add
adc
icebp
mov
mov
ss
xchg
daa
add
js
xchg
js
dec
push
sbb
ss
testb
pop
dec
jb
insl
int
xor
int
push
pop
mov
ss
inc
mov
add
add
add
jnp
inc
xor
insb
xchg
sbb
mov
lea
xchg
add
pop
arpl
aaa
js
xor
js
xchg
sub
inc
in
fdivrl
cmp
out
sahf
jne
and
adc
ja
jge
xor
mov
movsl
xorl
or
xchg
out
mov
pop
add
add
add
jg
or
fldt
out
add
rcrb
out
in
and
cmc
mov
jo
fistps
inc
test
mov
test
iret
hlt
jge
sub
lock
or
mov
fildll
add
in
shr
cli
subb
das
adc
xor
dec
pop
icebp
add
fimuls
add
add
and
lea
lcall
and
sbb
mov
mov
ss
repz
repz
out
pop
sub
lock
repz
add
testb
repz
pop
cmp
sahf
int3
filds
shlb
add
icebp
ret
jecxz
jb
add
add
add
cmp
xor
flds
rep
and
xor
cmp
mov
pop
xchg
addb
inc
icebp
cltd
or
jno
xor
inc
sbb
mov
into
loop
and
sbb
subb
setp
dec
jne
stc
jle
inc
push
push
rcrl
adc
mov
imul
add
add
add
push
or
lods
add
mul
mov
add
jl
out
xchg
rcrl
jae
cmovs
fldl
fiadds
decb
loop
push
mov
sbb
xchg
add
sub
dec
std
mov
add
lock
sbb
jne
subb
jl
sahf
nop
fnstenv
jae
xor
add
add
add
mov
cmc
pop
jbe
jp
mov
in
push
mov
cs
jbe
adc
out
xor
mov
orb
mov
or
ljmp
mov
bound
leave
xchg
or
icebp
or
cmp
jb
sub
insl
mov
add
add
add
ja
out
lea
lods
or
xlat
push
mov
lcall
mov
xchg
cltd
in
jbe
icebp
cmp
dec
push
or
add
bound
xchg
mov
mov
cmp
je
jnp
adc
jne
add
aas
or
add
add
add
or
dec
scas
addr16
mov
mov
mov
dec
inc
insl
or
mov
xchg
sub
mov
xor
or
mov
in
jg
add
jo
jmp
jmp
pop
pop
repnz
add
xchg
and
pop
mov
push
jle
outsl
or
cld
insb
pusha
mov
movb
add
add
or
js
jno
fwait
aas
or
inc
call
nop
dec
in
jno
cltd
aas
or
aas
call
nop
int
pop
xor
aas
call
fiaddl
in
jmp
push
push
xchg
decl
jle
adcl
fcoml
incb
jmp
push
push
lods
push
mov
movb
add
add
xchg
mov
add
lods
movsl
adc
cltd
in
add
test
xchg
and
mov
sbb
add
push
pop
inc
nop
mov
sbb
ljmp
out
adc
mov
inc
enter
shrl
ss
adc
add
add
add
mov
or
mov
add
ljmp
mov
js
xchg
test
repz
imul
aas
add
addr16
jmp
ss
push
adc
mov
jmp
sbb
stc
or
adc
sub
or
add
or
popf
lea
add
test
popf
sti
cmp
test
mov
cmp
add
mov
imul
bound
or
and
jbe
push
dec
jns
adc
mov
ret
push
lea
mov
clc
adc
je
add
clc
call
arpl
and
add
add
add
and
fbld
inc
lea
add
mov
fdivrp
mov
push
sub
mov
push
cmp
iret
or
call
push
or
jns
add
sbb
int3
fidivl
mov
in
outsl
pop
out
pop
and
in
add
nop
add
pop
pop
dec
out
fistps
pushf
or
xlat
sub
cmp
pop
add
fmull
add
add
add
mov
pop
sub
sbb
jge
or
mov
cmp
xchg
lahf
jl
mov
xorb
or
sarb
pop
in
jge
in
lea
inc
scas
movsl
loopne
xchg
pop
js
pusha
add
push
jecxz
pop
add
cmc
jne
mov
jge
push
xor
add
add
pop
jg
stc
mov
sbb
or
add
cmp
adc
mov
movsb
mov
test
mov
inc
frstor
pop
inc
cld
mov
inc
filds
jmp
faddl
lea
adc
insb
lods
mov
movsb
ficoms
cmp
insl
adc
rclb
inc
add
add
add
mov
inc
addr16
pop
sub
loope
or
std
ds
sbb
lods
les
repz
xchg
cmp
push
dec
movsl
push
and
faddl
mov
fcoml
sbb
jg
adc
fld
inc
repnz
add
inc
fs
cs
fcmovnbe
xchg
inc
xor
rcl
inc
lods
sarb
jl
nop
ret
add
add
add
das
fdivrl
pop
xor
sbb
mov
fcompl
jge
imul
std
inc
inc
mov
pop
pop
mov
dec
mov
sub
cli
test
push
jns
cmp
lods
pop
mull
rorb
loop
dec
mov
in
dec
stos
xchg
fstp
cmp
inc
sbb
fstp
pop
lods
fstp
mov
add
add
inc
xor
js
daa
lock
scas
mov
xlat
dec
inc
jp
xor
divb
imul
dec
push
fbld
dec
inc
imul
mov
inc
fdivrl
dec
sub
mov
mov
cmp
dec
nop
pushf
ds
fmuls
vprotd
in
add
add
add
inc
movsl
inc
mov
and
inc
mov
pop
inc
fnstsw
cld
mov
xor
mov
cs
inc
mov
flds
jno
popf
inc
daa
dec
push
lret
int
cmp
les
inc
dec
inc
fnsave
push
fldcw
sbb
andl
pop
js
inc
inc
addr16
xchg
inc
mov
mov
lret
aas
add
add
add
test
stos
inc
lods
cld
sub
lret
pop
mov
enter
cmp
insb
cmp
imulb
inc
jo
sub
mov
inc
mov
movsb
aaa
pop
sub
mov
inc
dec
out
aas
sub
cmpl
fdivrl
int3
push
addr16
out
repz
mov
inc
fmull
xor
mov
sub
xchg
mov
add
add
add
insb
sub
add
jmp
loop
inc
xchg
loop
inc
shr
rolb
rolb
sub
sub
xchg
push
mull
jns
dec
fst
int3
fcoml
fisubrl
outsb
mov
imul
cmp
or
sahf
lds
nop
sub
and
movsl
sub
add
add
add
mov
and
sar
or
loopne
aad
push
mov
jnp
mov
xchg
dec
shrl
fcoms
adc
push
jg
cmp
cli
sbb
movsb
dec
repz
mov
xchg
inc
inc
aaa
xchg
inc
inc
cmpsb
sbb
mov
and
dec
dec
repz
mov
sbb
sbb
shrl
fiadds
add
add
add
repz
pusha
jno
imul
stos
mov
jg
fstp
sbb
addr16
lcall
fdivrl
mov
push
pop
cli
mov
inc
popa
call
fidivl
enter
inc
push
scas
cmp
js
mov
push
jb
mov
inc
jne
fdivrl
ret
add
add
add
adc
push
test
or
push
mov
sub
out
push
into
fdivl
xchg
int3
fwait
or
out
inc
hlt
out
mov
lock
int3
inc
fnsave
shll
and
aaa
push
jp
and
daa
repz
enter
les
test
fsubrp
sub
repz
add
add
sub
lret
aam
pop
sub
push
nop
jae
mov
daa
xor
inc
xchg
xor
mov
lret
mov
clc
lods
inc
mov
lret
push
xchg
jno
xchg
lret
into
xor
add
addr16
xchg
aad
call
lea
pop
pop
lds
icebp
cli
mov
add
test
xlat
or
pushf
iret
add
add
add
test
pop
dec
addl
orl
les
xchg
inc
or
xor
cltd
jne
or
cmc
add
insb
fadds
mov
cltd
test
xchg
xor
mov
rcl
add
adcl
jns
pop
mov
cmp
pop
pop
iret
pop
nop
cwtl
jns
or
lret
mov
popf
or
add
add
jmp
inc
push
xor
xchg
jo
in
xchg
add
sub
aaa
mov
cmp
dec
add
icebp
loopne
mov
mov
mov
mov
xchg
fs
pushl
daa
sub
stos
pop
push
enter
inc
inc
roll
popa
in
fstpl
inc
or
add
add
mov
ss
cmpsl
fs
cmpsb
xor
add
pop
out
fstpt
pop
mov
xchg
movsb
loopne,pt
sub
sub
xor
mov
mov
lea
fdivl
jecxz
xchg
flds
lods
jmp
xchg
add
fnstcw
adcb
sbb
popf
mov
decb
and
add
add
add
jg
in
inc
push
lods
lea
add
push
popf
pop
mov
std
jnp
int3
lea
dec
rorb
xchg
xchg
push
ja
jge
mov
xor
jb
and
jl
mov
jl
and
lea
and
push
xor
pop
pushf
les
lret
mov
cld
test
add
add
add
les
push
in
or
fwait
inc
fcompl
jns
daa
aad
pop
popf
in
adc
inc
hlt
leave
aaa
jne
mov
pop
mov
les
cmp
xor
lea
aaa
fs
xor
mov
or
mov
xchg
add
nop
test
call
movsl
adc
jns
xlat
jmp
add
shll
sbb
or
add
jbe
sub
call
pop
das
push
jbe
fcmovnu
nop
lea
pop
add
xor
aam
sub
pop
imul
xchg
dec
inc
mov
xlat
pop
jmp
fiadds
cmpb
dec
mov
xor
cwtl
add
add
add
add
shl
push
mov
das
mov
pop
rcll
loop
xchg
fst
xor
fldl
mov
and
mov
insb
add
adc
ficomps
add
dec
mov
int3
mov
pop
out
rorl
fwait
leave
daa
push
and
mov
add
add
mov
fwait
int3
daa
or
sub
mov
daa
or
sbb
enter
scas
dec
sub
jbe
cmp
sub
push
jecxz
and
orb
xchg
inc
xchg
dec
mov
cwtl
jl
push
aam
cli
jne
add
xchg
ja
into
test
faddl
dec
lock
inc
jmp
inc
in
xchg
add
add
add
pop
xlat
subb
mov
push
mov
jecxz
mov
lahf
cmp
test
into
jbe
in
mov
decl
fcomi
jl
mov
add
and
fdivrl
out
subl
push
imul
jb
xor
lock
outsb
lods
jo
lea
xchg
nop
xor
jb
add
add
add
or
xchg
int
xchg
mov
xor
and
cmp
insb
sub
js
cltd
inc
in
adc
mov
mov
and
cmc
pushf
sarl
push
sub
inc
movsl
inc
add
xor
ja
sub
push
pop
cltd
arpl
jbe
and
push
movd
in
mov
add
add
lods
mov
adc
lock
lods
repz
inc
cli
clc
adc
popf
mov
arpl
fwait
dec
inc
ficoml
movsb
mov
nop
mov
out
jl
dec
lods
les
mov
sbb
inc
xchg
add
aas
fwait
aad
icebp
js
dec
xchg
add
mov
pop
hlt
loope
ret
adc
add
add
add
addr16
mov
mov
icebp
std
jle
jne
xor
repz
cmc
mov
add
cmp
ret
xchg
cmpsw
outsb
inc
imul
into
stc
repz
or
mov
stos
cmp
les
mov
mov
ret
lcall
add
les
or
xchg
or
xchg
inc
or
lock
mov
stc
pop
and
push
call
mov
xor
icebp
js
inc
testl
je
ret
mov
adc
dec
push
add
inc
ficompl
jg
fldl
sti
or
or
sti
jg
sarb
adc
add
fsts
add
movsb
mov
pop
cmp
push
xor
jne
dec
jecxz
xor
mov
mov
dec
sbb
xchg
bound
cmp
adc
inc
push
cmp
sbb
ds
cmp
adc
stc
jne
lahf
je
pop
push
movsb
adc
jns
aam
popa
std
adc
add
add
add
rol
mov
jne
dec
push
setge
xlat
pop
mov
xor
add
mov
test
cmp
cltd
xor
mov
and
and
popa
adc
cld
push
cmpl
mov
add
pop
mov
cmpsb
out
jp
xor
je,pn
or
adc
pop
mov
add
add
add
fistl
cmp
je
pop
cmp
dec
cmp
in
repnz
fs
lcall
nop
imul
imul
adc
dec
xchg
xchg
push
inc
mov
jns
js
inc
testl
xchg
popf
add
rcll
jecxz
vpunpcklwd
addl
nop
fdivp
mov
repz
sahf
add
add
add
je
mov
aaa
shl
mov
pop
and
ficoms
icebp
repz
clc
lds
push
insb
xor
idiv
jns
pusha
repz
adcb
lock
sbb
repz
gs
push
pusha
loopne
std
mov
out
mov
incb
nop
or
adc
mov
mov
in
icebp
add
add
add
sbb
outsl
es
int
sti
mov
addr16
les
jmp
mov
xchg
adcl
cli
xchg
fiaddl
in
in
je
arpl
mov
popf
xor
int3
push
icebp
cli
jnp
mov
adc
xchg
in
subb
out
mov
ja
inc
mov
add
popf
adc
add
add
inc
dec
or
cmpsb
mov
jbe
mov
xlat
stos
add
dec
dec
sbb
js
and
cltd
aaa
lea
mov
lret
in
adc
add
stc
xorl
addr16
push
imul
adc
fs
mov
sbb
xor
pop
push
cmp
pop
incl
add
add
add
mov
pop
repnz
jne
mov
pop
xor
fs
adc
enter
fsubr
pop
mov
mov
and
ret
mov
cmc
enter
pop
mov
fs
sarl
popl
push
mov
test
ds
mov
inc
add
add
add
into
dec
into
pop
cli
popa
xchg
iret
mov
push
mov
les
pop
hlt
movsl
and
push
add
xchg
std
mov
or
push
repnz
fwait
inc
add
push
xorb
movsl
outsl
cld
or
pusha
cld
mov
inc
lock
daa
fidivrl
cld
push
or
ret
dec
mov
add
add
jb
add
xor
std
ja
xchg
pop
in
dec
scas
add
inc
add
das
mov
dec
xchg
sub
std
mov
push
call
imul
je
and
and
mov
add
lock
decl
inc
incl
or
cmp
test
aas
fs
add
add
test
pop
jg
lcall
jnp
jno
push
std
fnstenv
xor
dec
push
call
or
mov
inc
sub
dec
add
xlat
mov
test
and
xor
adc
dec
jns
nop
pop
in
jnp
in
mov
pop
jo
push
nop
push
in
adcb
and
jg
adc
jmp
cltd
add
add
add
and
sahf
out
sti
add
pop
cld
insb
enter
dec
pop
xor
cltd
xchg
daa
ss
rorb
aam
push
jne
sub
or
add
das
stos
xchg
lock
xor
cld
incl
mov
je
ljmp
movsb
fnsave
sub
loope
add
add
add
push
sub
decl
dec
add
inc
adcb
lock
mov
mov
push
cld
mov
leave
daa
faddp
clc
hlt
je
xor
mov
xchg
mov
lret
cmp
loopne
mov
jmp
scas
push
cld
push
add
add
add
mov
add
arpl
push
mov
push
iret
je
and
aaa
loopne
mov
push
push
add
dec
adc
dec
in
sbb
je
pop
dec
mov
jb
imul
movsb
mov
cld
push
lahf
inc
push
adc
pop
pop
bound
push
sbb
in
cmp
std
jne
add
add
add
cwtl
push
jbe
mov
inc
cld
decl
leave
add
testb
and
push
mov
leave
add
push
add
stos
pop
push
adc
movsb
jbe
xor
jbe
pop
nop
pop
fcoml
sbbb
push
orb
dec
shl
nop
dec
inc
inc
sub
mov
fmull
nop
pop
fcoml
sbbb
sub
add
add
add
clc
mov
loopne
sahf
test
pop
add
sbb
jmp
or
inc
jae
jns
pop
sbb
add
lcall
sti
pop
add
push
bound
push
pop
mov
rdtsc
idivl
add
fadds
mov
nop
ljmp
nop
sub
popf
cmp
mov
rolb
add
add
sub
aas
outsl
iret
test
fistps
repz
jae
mov
cmp
int
cmpsb
popa
and
xor
std
mov
xchg
idiv
or
pop
lods
cmp
sub
sbb
or
xor
jmp
xchg
or
out
call
sbb
xlat
ret
cs
add
add
inc
dec
cld
outsb
lea
testb
rolb
dec
das
xor
notl
out
mov
add
or
xchg
leave
adc
jg
xchg
shll
or
test
mov
bound
aaa
sub
leave
sbb
jle
push
call
or
sbb
dec
dec
sti
aam
mov
clc
sbb
add
add
add
pop
jmp
add
pop
aas
jmp
xchg
adc
mov
jge
mov
test
add
fwait
jno
mov
scas
scas
notl
cmp
loopne
add
imul
jle
add
bound
outsb
pop
mov
xchg
rcrl
and
mov
xlat
rcrl
shll
out
aad
add
add
add
aam
pop
pop
xchg
dec
fstp
pop
pop
fstp
dec
adc
push
xchg
fcomp
lret
cmpsb
fstp
cmp
arpl
or
jbe
sub
inc
lea
push
mov
xchg
aam
mov
sub
test
mov
dec
xlat
add
mov
inc
outsb
mov
aaa
lock
add
add
out
popa
fcoml
lods
and
loopne
es
les
inc
outsb
mov
mov
imul
cmp
es
dec
mov
inc
dec
lret
pop
xchg
lea
sub
mov
xchg
adc
sub
and
enter
and
nop
push
lahf
imul
add
add
add
push
insb
movsb
leave
das
xchg
scas
lret
push
call
mov
and
cs
adc
jns
mov
aam
sub
ss
inc
push
ljmp
insb
adc
push
mov
shlb
mov
cmpsl
mov
add
sbb
add
sahf
in
faddl
add
pop
in
hlt
add
fcoml
je
add
in
sub
sub
jle
rcr
fsub
in
fdivl
inc
fstp
sarb
lcall
insl
jg
stos
imul
out
or
test
fdivrs
push
clc
push
in
mov
mov
adcl
add
add
push
mov
pop
clc
rorb
insb
aaa
fnstcw
xlat
mov
decl
pop
scas
fstp
outsl
outsl
outsb
fmuls
add
push
int3
decb
in
movsb
xchg
pusha
fxch
jbe
out
jbe,pt
mov
shl
and
and
jmp
push
cld
mov
xchg
fisubrl
add
add
add
les
mov
fsubs
push
in
mov
mov
fdivrl
arpl
sbb
lret
stos
cmp
data16
dec
movsl
or
out
sbb
iret
adc
mov
cld
push
out
cmpxchg
xchg
sub
sahf
dec
cs
mov
gs
sbb
cwtl
xor
add
add
lahf
mov
fiadds
add
inc
loopne
inc
push
mov
fadds
mov
repz
fisubs
jmp
adc
out
icebp
sar
mov
dec
fwait
dec
fldt
hlt
sub
cmpsb
xchg
outsl
add
movsl
imul
lods
shrl
dec
push
or
andb
sub
jae
mov
add
sbb
xor
fcoms
mov
dec
int
shrb
loope
enter
inc
ret
push
adc
hlt
lods
cmp
imul
dec
aaa
das
roll
ja
loope
clc
add
mov
xor
inc
and
lea
and
cld
or
add
add
add
addr16
mov
inc
addr16
sub
hlt
dec
xchg
mov
dec
fdivs
je
add
inc
sub
xchg
ds
jbe
fmul
nop
mov
leave
aad
jle
mov
lret
push
test
dec
fdivrl
in
mov
mov
add
mov
testl
add
add
daa
jecxz
cmp
inc
dec
mov
data16
push
or
cmp
push
xor
pop
and
mov
inc
sub
push
popf
and
mov
fsts
mov
push
mov
fnstsw
dec
pop
fstp
pop
fstl
mov
gs
movsb
or
call
pop
mov
add
add
sbb
sbb
adc
mov
mov
xchg
mov
lods
mov
or
sbb
decb
in
cli
sbb
or
pop
in
fmuls
jge
fcom
out
jge
fmull
sahf
out
mov
pop
insl
mov
add
add
add
mov
mov
mov
pop
pop
mov
mov
xor
fcomps
nop
lods
mov
fidivrl
int3
std
mov
mov
or
repnz
insb
xor
adc
ds
xor
mov
movsb
cmp
sbb
lods
loope
pop
mov
push
xchg
gs
repnz
push
add
adc
arpl
add
add
add
push
xchg
fs
mov
int
fdiv
mov
push
push
push
call
dec
imulb
add
adc
pop
mov
xor
add
push
jns
cltd
arpl
or
test
xchg
out
jmp
int3
and
push
call
testl
call
pushf
inc
pop
mov
add
add
add
xor
fistps
xchg
popf
insb
sub
add
call
xchg
mov
xor
sub
xchg
pop
adc
mov
mov
push
xchg
dec
call
lods
inc
pop
add
stos
dec
mov
mov
dec
sub
pop
dec
mov
dec
sti
add
add
add
add
push
sti
fiaddl
sti
sbb
sbb
mov
loopne
mov
cmp
cli
loopne
dec
mov
cmp
jle
cmp
dec
xor
dec
sbb
pop
jle
lea
mov
and
enter
icebp
popa
scas
sub
jo
sti
fiaddl
ljmp
add
add
add
xchg
jmp
sub
adc
xlat
cmp
mov
cs
leave
push
mov
lret
rorl
outsl
and
pop
xorb
sbb
cltd
lea
adc
ljmp
xchg
pop
addb
pop
dec
pop
pop
ret
fmuls
test
pop
pop
mov
add
outsb
bound
dec
shr
push
dec
dec
fldt
out
mov
call
jge
jnp
jnp
pop
mov
loopne
call
fisubs
lret
insb
xorb
nop
cmp
scas
mov
and
call
xor
mov
int
pop
sti
jp
cmpsl
dec
scas
mov
in
icebp
adc
jae
insb
lods
add
add
add
in
xorl
mov
mov
jl
nop
flds
mov
xor
dec
xor
rorl
in
add
or
decl
pop
stos
call
xchg
sbb
notl
fsubr
xor
fwait
out
out
mov
call
mov
inc
xlat
lahf
bound
sbb
and
jb
inc
xlat
xchg
or
call
add
add
add
pop
push
add
mov
sbb
fimuls
out
nop
xlat
add
pusha
fimull
shll
mov
pop
sbb
add
roll
xor
mov
stc
int
and
lcall
mov
pop
scas
sub
jae
sbb
loop
sub
shlb
add
add
add
scas
out
jbe
jle
mov
frstor
pop
pop
mov
push
mov
mov
jno
nop
in
popa
pop
mov
pop
idivl
jns
cmp
add
cmp
lea
lods
mov
push
dec
movsb
outsb
or
mov
dec
ret
cwtl
mov
sub
in
xlat
dec
add
add
add
or
push
inc
push
pop
inc
ss
pop
add
dec
xchg
adc
icebp
mov
xchg
xchg
out
jns
cmc
push
lcall
cli
mov
cli
cmpsl
cli
jnp
xchg
mov
cmc
jp
adc
mov
cli
sahf
fisttpll
xchg
cli
ljmp
lods
mov
xchg
sti
mov
clc
add
add
add
stc
lcall
flds
cmp
enter
std
add
je
xor
sbb
repnz
sar
and
or
xchg
mov
dec
aaa
cmp
repnz
jg
cltd
mov
clc
xchg
push
sbb
push
hlt
clc
test
cmp
mov
mov
push
jnp
jl
add
add
add
rdtsc
xchg
xchg
test
roll
andb
mov
adcb
pop
mov
sbb
pop
repnz
mull
mov
je
inc
lock
div
adc
clc
mov
fs
add
adc
cmp
xor
cmp
outsb
fwait
jle
pop
out
std
push
mov
add
add
add
fwait
lcall
lock
jl
cmp
js
inc
in
push
push
or
mov
dec
inc
rcr
add
not
xchg
es
std
sahf
push
std
mov
test
and
ret
inc
inc
icebp
xchg
clc
adc
out
inc
mov
negl
cmpb
adc
repz
lahf
add
add
add
repz
icebp
sub
inc
icebp
mull
push
std
pop
add
mov
dec
shl
sbb
in
cmp
inc
cmpsb
cmp
divl
popa
sbb
in
mov
nop
loop
lds
insl
cmpsl
cwtl
mov
divl
pop
cmp
cmpl
xchg
subl
mov
push
or
adc
mov
lret
mov
add
add
add
cmovp
pusha
incb
sti
mov
mov
lret
inc
clc
in
or
rclb
add
dec
in
cltd
loop
stos
out
repz
sbb
repz
adc
nop
mov
cli
mov
test
pop
mov
insl
ljmp
mov
mov
pop
movsb
mov
inc
pop
loope
add
add
add
je
mov
cmp
scas
das
and
mov
test
cld
xchg
das
adc
stc
mov
cmp
enter
mov
je
f2xm1
sub
adc
xchg
lret
aaa
aam
aaa
pop
cmpsb
aam
or
pop
jb
cltd
addr16
xchg
sbb
movsb
testl
add
add
add
jb
add
jo
lock
mov
fistpl
xchg
subb
int
bound
cmp
shrb
cmp
mov
jae
clc
pop
lods
cli
mov
jnp
inc
push
mov
or
cmp
scas
add
shrb
int
xchg
imul
hlt
jecxz
add
add
add
bound
cmp
mov
imul
add
insl
icebp
shll
add
lock
inc
gs
shlb
add
dec
inc
add
scas
movsb
mov
repz
or
lods
or
repz
daa
mov
pop
add
repz
xchg
bound
mov
add
lahf
mov
add
mov
aas
mov
out
dec
sahf
mov
cmc
dec
les
divl
imul
lods
or
jmp
adc
das
push
add
mov
lret
shr
cmp
lock
sub
jae
xchg
sub
cltd
into
and
cld
out
rolb
pop
icebp
enter
cld
out
mov
add
add
add
sti
fdiv
sbb
insl
mov
icebp
cli
pop
adc
icebp
cli
mov
mov
std
sbb
icebp
fcmovu
xchg
adcl
pop
mov
scas
fisttpll
dec
mov
js
ss
sti
xchg
stc
inc
or
ret
outsb
icebp
jmp
push
mov
stc
inc
or
ljmp
add
add
add
lock
or
sbb
lcall
stos
adc
fwait
jp
ds
js
xor
xchg
jl
and
mov
out
in
imul
sub
insl
movsl
out
iret
faddl
xorl
aaa
add
mov
sti
mov
ss
in
clc
repnz
add
add
lret
adc
push
add
sbb
add
divb
cmc
inc
lret
or
inc
fidivrs
mov
mov
repnz
pop
or
lock
cmp
fldl
cwtl
xchg
mov
shrl
jge
cmp
and
cli
rcl
or
dec
mov
in
mov
negb
in
test
add
or
aaa
add
jno
xchg
fisttps
sbb
push
cmp
xchg
mov
inc
dec
inc
data16
orb
loopne
jno
in
emms
lock
xor
jno
mov
inc
or
pop
cld
and
push
mov
xchg
push
xor
and
add
jne
jo
add
add
add
imul
jne
xor
jmp
testb
mov
mov
cld
pop
in
cld
orl
add
inc
inc
jb
cli
mov
rolb
mov
jnp
inc
cmp
cmp
mov
test
add
pop
pop
add
shlb
add
mov
fidivs
mov
add
add
ss
cld
mov
pop
std
adc
pop
add
mov
pop
dec
jb
daa
clc
push
dec
sbb
mov
repz
pushl
leave
dec
push
mov
adc
test
ljmp
lods
lds
mov
push
lods
xchg
outsb
adc
mov
add
outsb
jbe
imul
or
cmp
pop
add
add
add
sub
sub
or
or
fbstp
cmpsl
rcrb
pop
xchg
xor
fnstcw
cmp
and
movb
aaa
stos
outsl
add
mov
pop
out
je
test
loope
jmp
adc
je
jmp
jecxz
ret
fcom
les
call
push
cmpsb
sar
add
add
add
outsl
shr
stos
or
jmp
adc
out
xor
dec
es
jmp
in
and
lds
decb
and
jmp
es
mov
into
cmp
push
or
inc
icebp
or
jne
jae
icebp
sub
mov
add
sti
cld
out
inc
jmp
fsub
shr
cmp
add
add
add
sub
inc
add
mov
jmp
test
std
push
lret
adc
xor
sbb
in
cld
ljmp
js
paddw
pop
leave
xor
jnp
call
icebp
or
addl
jmp
aaa
and
jbe
add
xor
sbb
scas
sbb
xor
add
add
pop
sbb
call
jne
repz
or
dec
cmp
push
out
lock
sbb
hlt
movsl
adc
jb
cmpsl
jp
les
shl
mov
incl
es
dec
sbb
xchg
fsubrp
cld
cmp
or
dec
dec
std
orb
subl
pop
pop
add
add
add
add
add
cmc
inc
or
cmc
inc
or
insb
or
sbb
push
sbb
pop
sbb
dec
mov
add
mov
or
sbb
aaa
jne
or
sub
imul
cs
mov
pop
test
xchg
xchg
fisttps
ret
mov
and
test
or
add
add
leave
outsb
ljmp
push
add
mov
outsb
xchg
mov
xchg
test
jle
int3
insl
mov
out
test
push
and
dec
out
lret
inc
sbb
jmp
pop
cmpsl
xchg
push
lods
sahf
or
cmpsl
outsb
ffree
or
fadd
sbb
dec
mov
add
add
add
dec
or
shrb
jmp
push
addr16
fisttpll
movsb
adc
mov
neg
dec
cwtl
xor
xchg
sbb
push
and
add
dec
fisttpll
and
adc
movsl
jg
ret
scas
fs
and
and
fsubs
jl
fistpll
sbb
ja
sub
push
mov
sbb
add
add
add
pop
fsubrs
cltd
cld
aaa
add
iret
cmp
imul
dec
stos
outsl
fisttpll
cld
mov
fcompl
xchg
xor
incl
daa
or
call
and
jns
fcomip
push
es
loop
mov
lahf
jle
and
popf
xchg
pop
div
mov
fsubrl
dec
mov
pop
xchg
sahf
mov
add
add
add
mov
dec
jne
mov
push
and
imul
push
rol
hlt
pop
sbb
adcl
mov
out
bswap
add
mov
es
fsub
ret
push
and
sub
aam
inc
xchg
fsubr
xchg
push
outsb
mov
mov
imul
jecxz
pop
es
push
cmp
hlt
xor
add
add
add
ljmp
fs
fsubl
pop
cmpsl
inc
jbe
loop
pop
rcrl
jb
rclb
ret
fiaddl
stc
pushf
into
pop
mov
sub
or
ror
push
mov
lds
sub
pop
call
inc
inc
mov
loop
inc
sub
dec
or
dec
lods
cli
sub
lds
cmpsl
inc
add
add
add
inc
jns
ljmp
inc
sub
sub
mov
ljmp
roll
sub
pop
ljmp
stos
pop
fdivrl
insl
loop
and
pop
in
add
jbe
pop
ds
xor
jae
add
dec
sub
cmpsb
xchg
roll
jp
sahf
add
add
add
lret
adc
rcrl
mov
adcl
sbb
jns
lods
pusha
insb
fcompl
lret
or
sub
data16
mov
push
add
and
mov
add
xlat
leave
push
fmul
cmc
mov
xchg
int3
inc
pushf
dec
frstor
repnz
shlb
fnstsw
outsl
repz
add
add
imul
add
push
xchg
int3
lods
xlat
vxorps
das
shll
add
lahf
repnz
ficomps
xlat
add
push
xchg
int3
loope
popf
dec
fnsave
scas
fnstsw
jo
in
inc
push
out
or
incl
ds
int3
mov
out
mov
add
add
addr16
cmp
pop
push
sbb
dec
popa
es
inc
pop
mov
dec
adc
xor
sub
mov
push
rorb
push
sbb
or
lret
mov
mov
mov
or
outsl
ja
ds
cmp
add
shlb
lret
add
fsubl
pop
dec
add
add
add
mov
lods
mov
into
in
dec
imul
sub
or
xchg
xor
mov
icebp
adc
dec
rcrl
rcl
inc
add
cwtl
fisttpll
adc
mov
mov
or
lret
adc
data16
mov
mov
adc
mov
mov
xchg
daa
stc
imul
jge
mov
add
add
data16
xlat
out
xor
mov
sbb
leave
mov
add
pusha
ret
cmc
call
mov
pop
addr16
aaa
mov
sbb
xchg
addr16
cmp
mov
out
aaa
mov
pop
xchg
or
movsb
lahf
aaa
mov
fnstcw
jae
and
stos
mov
add
outsl
js
mov
call
add
sbb
movsb
leave
mov
dec
imul
stc
rcrb
test
add
mov
xchg
pop
mov
fiadds
aaa
cmp
in
cmpsb
loope
pushf
jge
mov
pushf
adc
repz
push
gs
sti
rcr
nop
test
or
xchg
mov
addr16
fisubrs
mov
pop
lods
and
add
add
add
int3
xchg
mov
pop
out
inc
mov
and
mov
pop
push
jp
sub
sbb
movsb
jp
sub
sbb
daa
adc
icebp
push
lea
jno,pn
or
pop
xchg
jg
je
xlat
lret
jg
xchg
sub
add
xchg
xchg
sub
mov
add
sub
decb
and
iret
jbe
je
daa
mov
sahf
outsb
sub
push
jg
sahf
movsb
testl
xchg
cmp
jmp
inc
insb
mov
sbb
sbb
jb
xchg
cmpl
fwait
lea
jno
sbb
dec
sbb
std
jnp
insb
cmc
hlt
cmp
mov
add
add
add
inc
jle
xorb
and
cli
mov
mov
mov
xchg
add
xchg
and
sbb
movsb
xor
xchg
add
out
mov
xor
xor
jp
jbe,pt
xor
mov
push
inc
fsub
pushf
xor
cld
dec
leave
popf
xor
pushf
shrb
mov
lcall
add
add
jl
cmp
cltd
loopne
sub
xlat
das
xchg
cmp
add
and
call
sti
xor
rolb
inc
add
xchg
dec
mov
cmpsl
push
into
aam
adc
mov
aas
cmpl
sbb
pop
xchg
xor
cmpsl
clc
aas
or
ja
xchg
mov
call
lods
xor
stos
add
add
add
cmpb
nop
xchg
mov
call
call
imul
pop
and
in
xchg
mov
icebp
out
mov
loop
and
mov
adc
daa
mov
cmp
fadds
jns
subps
jg
sahf
xchg
mov
repnz
add
add
add
pop
mov
fcomps
jmp
and
adc
jb
not
pop
cmpsb
cmpsl
push
pop
xlat
xlat
sub
out
mov
sub
mov
xchg
lcall
add
xchg
jg
and
andl
lret
outsb
aam
jg
adc
pop
pop
pushl
and
loopne
dec
lea
add
add
add
and
lret
xchg
fldcw
cmp
xor
adcl
fwait
xor
dec
dec
stos
or
test
add
xor
les
lea
test
sahf
fwait
mov
sahf
pop
popf
dec
dec
xchg
call
jne
cmp
add
std
pushf
jo
push
xchg
mov
xor
mov
add
mov
adc
stos
mov
ja
sti
ja
jno
jmp
mov
sbb
jmp
mov
xchg
in
cwtl
adc
mov
cld
cld
arpl
jns
xor
lcall
inc
xchg
xchg
xor
mov
pop
jge
mov
pop
pop
je
mov
add
add
pop
mov
shrl
ss
cwtl
sahf
inc
pop
cwtl
mov
ds
scas
out
mov
jns
and
pop
mov
addr16
xor
sbb
sbb
jnp
xchg
push
out
mov
std
and
outsb
into
cmp
xchg
jnp
or
sub
cld
mov
jae
pop
inc
mov
jnp
faddl
add
add
add
jnp
lock
in
cmp
int
add
repz
popf
insl
jns
repz
mov
mov
add
adc
pop
mov
xor
sarl
and
nop
push
icebp
cmpsb
cli
xor
icebp
mov
mov
adc
mov
mov
mov
add
inc
add
fiadds
pop
negl
xor
negl
mov
jb
jns
mov
lock
hlt
ret
iret
mov
mov
test
lock
adc
sar
movb
mov
mov
fcmovnb
ret
enter
xchg
sub
js
adc
add
add
mov
sti
adc
cltd
js
lods
lock
jp
std
insb
iret
inc
adc
jae
and
cmp
dec
mov
fwait
sbb
mov
lock
movsb
mov
data16
inc
sbb
sbb
jbe
fistl
cmpsl
sbb
loop
roll
stc
inc
pop
scas
loop
movsl
lcall
pop
rcr
or
add
add
xor
jg
mov
mov
pop
sub
mov
xlat
xchg
pop
popa
cwtl
pop
mov
xchg
xor
lcall
aaa
rorb
ja
dec
pusha
pop
sarb
and
jns
negl
pop
lahf
add
pop
and
fidivl
notb
nop
push
dec
lock
add
add
add
out
fldcw
jnp
mov
scas
mov
in
icebp
push
sahf
xchg
out
lcall
sbb
inc
mov
fisubrs
push
js
mov
jnp
fdivrp
push
ret
dec
pop
sbb
mov
pop
rcrl
loop
clc
repz
mov
out
jns
jnp
or
and
add
sahf
inc
std
add
add
add
xor
sahf
jne
xor
movsl
inc
std
xor
jno
pop
daa
enter
pop
adc
mov
xchg
mov
loope
mov
mov
fs
xor
lock
incb
adc
add
ret
and
mov
inc
rcl
repz
push
mov
mov
repz
add
add
add
pop
movsl
xchg
stos
je
test
cmc
push
xor
sbb
fnstsw
lret
cltd
ja
idivl
jnp
cmp
pop
jo
fs
push
sbb
cli
jns
and
mov
sub
test
pop
outsl
out
clc
stos
xchg
jge
shrl
jecxz
adc
lock
jl
popf
clc
cli
jg
add
add
add
push
insl
sub
or
jge
push
rcrl
icebp
jp
je
inc
leave
xchg
lret
cmp
xor
jns
inc
and
pop
scas
ja
test
xor
mov
pop
xor
hlt
jg
mov
repnz
cs
stc
xor
mov
and
stos
lds
aam
dec
xchg
cmpsb
add
add
add
add
xchg
jae
push
fmulp
rcrl
out
and
adc
shll
sub
mov
and
imul
sahf
setb
lea
adcb
inc
pop
push
add
inc
sbb
pop
aam
ds
out
mov
adc
movsl
lahf
in
shr
cli
subl
sti
cmp
fimull
add
repnz
jns
pop
cmp
lret
fisubl
adc
out
adc
pop
mov
scas
stos
add
pop
es
xchg
aaa
pop
in
and
xchg
mov
and
pop
push
fstpt
sahf
push
shlb
lahf
enter
outsl
jl
nop
xchg
inc
and
add
scas
inc
fnstenv
inc
icebp
repz
mov
xchg
cli
mov
add
add
fwait
mov
adc
mov
and
cld
cmp
clc
ljmp
std
jle
cld
add
mov
jne
loopne
and
outsb
add
lcall
jo
add
loope
add
push
push
cwtl
cmp
mov
je
inc
xchg
mov
push
push
stc
arpl
add
add
add
or
call
fiaddl
and
enter
mov
rep
jns
or
call
aas
push
mov
lret
or
loop
dec
add
push
into
lcall
cmp
pop
lret
add
and
lret
ret
sub
jne
jns
loope
lret
mov
lahf
test
jbe
cmc
xchg
rcl
andb
lret
add
add
add
or
cmp
fldl
sbb
pop
inc
push
mov
jmp
mov
int3
sysret
or
mov
pop
ud2
rcl
jne
outsb
std
cs
or
pop
jno
add
pop
dec
in
stos
cltd
fstpt
cli
cli
int3
mov
loop
xor
jmp
test
adc
fndisi(8087
pop
ror
hlt
outsb
add
add
add
sahf
fst
mov
add
or
out
jecxz
adc
and
iret
fildl
cmp
xorl
mov
imul
sbbb
outsb
mov
mov
jmp
pop
or
mov
fldl
aaa
into
into
xor
mov
call
push
into
xor
outsl
and
push
lahf
push
add
sti
push
add
add
add
mov
inc
int
stos
je
cmp
and
lds
add
clc
ret
or
xchg
pop
lds
js
aaa
rcrl
mov
inc
mov
xor
mov
shlb
inc
popf
adc
or
cld
adcl
mov
mov
inc
or
dec
call
add
add
add
loopne
jmp
mov
fcmovnb
call
lods
imulb
mov
cmp
leave
lret
push
add
xchg
xor
popf
and
add
jae
add
mov
add
push
xor
mov
cld
xor
mov
cld
push
imul
in
ss
push
or
das
std
cld
pop
aad
or
xor
sahf
dec
and
add
add
add
xchg
and
xor
invd
sbb
mov
and
and
and
adc
scas
pop
enter
mov
cmp
cld
xchg
imul
mov
jmp
out
or
adc
sbb
add
lahf
mov
push
sbb
jae
mov
ljmp
jl
or
add
xchg
and
imul
add
add
mov
and
arpl
add
add
bndstx
or
xchg
fistpl
mov
sub
cmpsl
loop
jecxz
jmp
movsb
data16
xor
sbb
push
or
test
xchg
test
dec
sbb
mov
add
or
inc
or
jmp
add
add
inc
testl
xlat
or
inc
add
dec
rcr
smsw
cmp
adc
movsl
mov
adc
add
iret
add
lret
movsb
data16
aam
mov
roll
or
xchg
push
cld
aad
cmpsl
ret
cmpsb
add
sbb
call
cmpsb
or
xlat
in
add
or
add
add
aad
mov
js
push
inc
cmp
push
lret
cmpsb
inc
add
or
cmp
mov
jo
hlt
push
repnz
jle
rorl
add
mov
clc
shlb
inc
loopne
mov
add
fsubl
sub
and
pop
jg
xchg
or
jecxz
lods
push
add
std
adc
add
lock
lret
pop
fwait
mov
inc
cmc
sub
xor
scas
mov
jo
ss
xchg
inc
or
imul
mov
mov
roll
sub
insl
add
jae
inc
push
pop
mov
xor
lods
add
xchg
imul
daa
dec
loopne
mov
add
add
add
scas
inc
or
pusha
xor
insl
shl
inc
mov
cmp
xor
enter
sbb
push
mov
dec
scas
mov
mov
leave
pop
xchg
push
add
leave
push
stos
mov
faddl
inc
push
lods
push
adc
mov
cld
out
ret
out
hlt
fst
in
mov
add
add
lcall
mov
sub
repnz
sub
xor
or
movsl
ja
in
int
add
jecxz
es
sarl
lea
xor
cmpsl
fwait
insl
xchg
test
jb
mov
push
out
sbb
xor
mov
push
hlt
or
aam
sub
fcmovnb
jbe
imull
fsts
add
add
add
push
inc
dec
shrl
add
mov
inc
movsl
lret
mov
stc
cmpsb
lods
aam
scas
loopne
fcmovnb
dec
ja
aaa
insl
dec
dec
and
adc
inc
outsb
cmp
jnp
jge
inc
popa
fidivs
int3
popf
cmp
imul
mov
pop
scas
out
fcomi
lret
mov
mov
add
add
call
in
in
mov
or
add
mov
ss
mov
add
test
xlat
ss
stc
dec
adc
repz
mov
mov
fisttps
push
and
fbstp
es
dec
sbb
iret
pop
dec
push
and
out
cmpsb
jnp
mov
cmpsl
sub
add
add
add
and
mov
pop
dec
hlt
lea
push
decb
inc
push
mov
divb
sbb
into
pop
fists
nop
pusha
cmc
cmc
sti
es
adc
div
xor
fmull
in
push
xchg
mov
filds
inc
mov
dec
add
and
mov
scas
and
fldl
dec
repnz
add
add
add
dec
sbb
fstpt
and
cld
sarb
push
imul
mov
push
dec
push
pop
ja
fimull
and
dec
inc
out
mov
push
mov
inc
xor
cmc
pop
testl
call
fldpi
mov
mov
out
scas
dec
cmp
mov
les
in
nop
inc
vmovaps
add
add
add
in
jl
mov
jmp
add
insl
stos
push
jmp
xor
call
sub
loope
fwait
mov
dec
shl
and
loope
dec
xor
add
inc
sbbl
ds
popa
cmp
dec
mov
cmp
out
loopne
jns
ljmp
call
add
add
fildl
inc
ja
pmaxsw
push
fldt
jg
sarb
mov
cmp
jg
inc
ja
xlat
pop
fisttpl
std
jmp
jmp
cmp
mov
adc
ljmp
mov
mov
and
inc
ja
pop
pop
fistl
add
add
add
je
ss
outsl
ss
mov
fucomip
fstpt
fisttps
fdivl
mov
out
out
pop
mov
jnp
fucomip
adc
stc
aaa
adc
jp
out
fdivrl
iret
mov
push
out
sbb
mov
push
das
xchg
fstpl
xlat
inc
jg
add
add
add
jecxz
hlt
sbb
insl
scas
ffree
dec
or
in
inc
xlat
inc
jg
xchg
fucomip
in
jp
inc
hlt
rorb
mov
pop
sub
and
daa
loope
addr16
mov
or
js
aas
mov
shlb
or
fldl
sbb
push
inc
lea
add
add
add
add
repnz
push
push
ljmp
gs
sarl
mov
mov
inc
sub
sub
test
adc
mov
cltd
vcvtsd2si
inc
sub
adc
jmp
pop
add
push
lea
movsl
push
sahf
add
call
add
add
movsb
call
lea
cmp
xor
pop
push
mov
and
cmp
frstor
pop
mov
lds
push
inc
sbb
loopne
sti
int
pop
pop
xchg
cmp
pop
aam
mov
call
xor
cmp
cltd
jle
popf
orl
inc
mov
jmp
js
push
lods
aaa
mov
xchg
jg
mov
idiv
inc
test
popa
mov
adc
pop
movsl
jp
inc
add
leave
aaa
out
sarb
jbe
movsb
dec
jns
movsl
sbb
je
call
mov
dec
popf
push
sbb
jg
lahf
jns
movsl
or
push
jae
ret
xchg
add
add
add
add
push
fnstsw
inc
imul
mov
dec
les
jb
mov
into
mov
loopne
xchg
das
idivl
mov
push
lods
pop
mov
into
adc
outsl
xchg
xor
sahf
lahf
rolb
mov
mov
mov
gs
popf
push
idiv
mov
push
sub
add
add
addr16
or
xor
lea
test
mov
or
mov
lret
cwtl
sub
jmp
push
je
xchg
push
sub
int3
lea
jl
cs
pop
mov
xchg
add
lea
sub
xchg
xchg
aad
cwtl
mov
stos
pop
jp
add
add
add
dec
popa
xchg
xchg
mov
popf
cltd
icebp
pop
sub
pop
mov
jns
hlt
xchg
cltd
xchg
xchg
sub
jnp
lea
mov
pop
jne
push
jbe
scas
vmovhps
pop
jb
pusha
xor
mov
pop
fisubrl
sub
mov
pop
mov
mov
mov
lcall
add
add
sub
jnp
push
call
mov
in
push
push
mov
icebp
inc
xchg
test
pop
fidivl
sti
imul
sbb
ja
pop
mov
xor
mov
in
cmp
idiv
imul
or
fcompl
int
or
mov
popf
inc
add
add
push
daa
mov
rorb
pop
push
sub
push
mov
xchg
scas
mov
lcall
mov
sub
ds
cs
ret
dec
jmp
mov
addb
add
cld
inc
mov
mov
mov
bound
mov
dec
mov
cs
sub
fisubrl
sbb
lods
add
add
add
push
sub
cmp
mov
popf
cmp
sub
lcall
test
add
roll
jno
xchg
xchg
xchg
sub
lcall
lea
and
mov
fwait
lods
fisubrs
add
lea
lods
pusha
lea
loopne,pt
mov
add
add
add
dec
das
or
xchg
jg
sub
inc
mov
or
pop
jns
mov
testb
push
or
add
sub
cs
fstl
xchg
orb
mov
syscall
fldcw
mov
addr16
mov
fwait
popf
push
push
mov
loop
scas
mull
mov
fstpl
add
add
push
inc
xor
or
jg
cltd
pop
cli
cld
mov
mov
clc
xchg
mov
mov
out
adc
and
cwtl
lcall
xchg
sbb
mov
add
mov
js
lods
mov
mov
add
mov
mov
mov
push
mov
aad
mov
fbstp
add
pop
and
dec
cmp
repz
cltd
pusha
pop
push
adc
jle
imul
ljmp
jl
cmp
push
notl
jmp
pop
mov
cmp
pop
imul
fmuls
or
push
lret
lea
pop
mov
cwtl
inc
fdivrs
js
add
cmpsl
sarb
pop
inc
sti
fstpl
adc
mov
add
add
add
test
add
mov
in
sub
ds
cmp
lret
into
and
inc
xor
xor
cmp
add
insb
mov
xor
pop
in
add
sbb
adc
and
shrb
and
flds
add
add
add
mov
xor
orb
cmpl
xchg
and
icebp
adc
and
sahf
out
fsubrs
in
mov
mov
mov
cltd
out
repz
mov
mov
subb
inc
mov
jp
mov
mov
lock
add
add
cli
std
xchg
subl
repz
faddl
popf
leave
sti
xchg
mov
sbb
inc
add
sub
subl
shll
mov
or
lods
adc
mov
dec
jge
fwait
jbe
sti
fs
outsb
lds
mov
jae
andb
lock
mov
sbbb
add
add
add
mov
pop
lock
sbb
inc
cmp
ss
cmp
xchg
mov
jae
fadds
sub
mov
mov
cwtl
mov
mov
mov
mov
mov
aam
mov
xchg
mov
add
push
mov
jle
xor
add
add
add
xchg
and
outsl
arpl
mov
dec
push
and
dec
and
inc
cmp
pop
cmp
add
pop
and
mov
inc
pop
xchg
xchg
add
das
dec
loopne
cli
mov
add
hlt
or
scas
fidivrl
mov
aam
sub
scas
and
cmp
std
std
cmpsb
add
add
add
push
ret
xlat
ret
jp
out
jnp
aad
cmpsb
scas
cmpsb
pop
mov
mov
cmc
test
add
cmp
aad
cmp
out
push
imul
mov
std
xchg
sub
and
jecxz
or
test
icebp
repz
leave
fld
in
leave
xor
mov
js
dec
mov
sub
repz
add
add
mov
ret
and
lret
icebp
repz
out
leave
iret
push
fmulp
mov
pop
and
lret
fmul
ja
jno
insl
lret
sub
mov
in
leave
notl
ror
cmpl
sahf
and
icebp
lock
repz
or
stc
lret
jo
jo
sub
cmp
leave
pop
orb
mov
mov
add
add
mov
test
bound
stc
scas
mov
ret
sarb
cli
bound
inc
fcmovbe
lret
jnp
leave
sarb
leave
mov
pop
ror
rcrb
leave
lret
pop
enter
mov
je
sub
lock
add
inc
push
ficoms
mov
dec
jmp
add
add
imul
and
dec
jmp
das
rclb
sbb
cmp
shrl
dec
stos
xor
bound
adc
cmpsb
jle
lds
fiaddl
jle
in
or
add
pop
shll
fsubs
divb
nop
sahf
cmc
data16
mov
decl
jbe
adc
add
add
add
cmpsb
addr16
cmc
addb
xor
or
add
stos
add
sbbl
push
outsl
testb
cmc
sti
jmp
cli
mov
or
and
stos
test
jmp
es
sub
and
add
arpl
shll
call
insl
lds
add
into
adc
add
add
add
sbb
shl
dec
mov
faddl
mov
jmp
or
iret
adc
xchg
xor
add
addl
clc
fldcw
sarl
fs
jne
cwtl
les
push
jae
and
xchg
in
enter
in
cmp
daa
mov
and
imul
add
add
jne
and
jne
and
imul
dec
lahf
imul
fists
add
and
mov
inc
cli
jmp
sti
je
jns
and
sub
je
jns
and
sub
je
fbstp
sub
ljmp
aad
inc
call
test
xor
mov
jnp
in
pushf
mov
lods
orl
movb
add
add
int
std
pop
xor
mov
push
xor
push
icebp
pop
mov
test
and
les
pushf
or
jg
and
push
inc
and
test
add
sbb
xorb
loopne
mov
mov
xchg
push
inc
and
mov
dec
loopne
test
mov
push
sbb
mov
or
add
add
add
pop
fsts
inc
bnd
in
insb
les
aas
scas
fists
fucomi
sahf
sbb
mov
add
ret
sub
mov
mov
fucomp
add
insb
inc
and
addl
mov
jle
or
push
popf
mov
gs
cmp
stos
popf
add
add
pop
and
pusha
push
sti
sahf
xlat
out
xor
mov
aaa
movaps
mov
sahf
mov
push
fucomip
or
dec
shl
jmp
mov
out
sti
fnstcw
xchg
out
shlb
inc
cmc
or
cmp
in
xchg
cmp
sti
bound
add
add
add
mov
xchg
out
shlb
inc
xchg
xchg
inc
cmc
or
mov
mov
testb
ljmp
mov
or
and
push
mov
jp
mov
jno
je
outsb
push
xchg
aad
add
loopne
ret
outsl
push
adc
js
cmp
mov
xor
loope
hlt
addl
add
add
cmp
rorl
xchg
sar
or
out
cmp
movsl
sbb
loopne
aad
or
xor
or
ss
mov
dec
call
jb
push
notrack
sbb
mov
jno
mov
jbe
mov
xchg
pop
fwait
add
add
stos
inc
or
push
sbb
add
add
add
jmp
push
mov
rorl
ret
aad
pop
add
or
inc
adc
mov
sub
sub
dec
dec
pop
lret
loopne
push
sub
testb
out
sbb
daa
add
out
pop
add
dec
ljmp
mov
stos
cmpsl
cld
ret
mov
add
add
add
lret
xchg
mov
cmpsb
fcompl
jmp
add
jmp
les
call
mov
adc
xor
add
mov
popf
fidivrs
and
outsb
cs
mov
cpuid
cli
aad
nopl
jmp
jae
push
and
xor
jmp
into
push
jmp
mov
add
add
add
sub
fsubl
sub
ja
pop
neg
add
mov
popf
cmp
fdivl
and
cld
and
cld
and
fmull
ja,pn
dec
neg
sbb
mov
loop
dec
push
jmp
push
pop
add
or
lcall
imul
xlat
fcmovnb
add
add
add
jp
faddl
jmp
in
imul
mov
cld
fimuls
out
or
sub
jns
shrb
cld
fnstcw
aaa
pop
testb
mov
mov
sub
cltd
call
sub
sbbb
or
nop
xchg
std
jecxz
cmpsl
inc
lds
push
clc
enter
xor
and
add
add
add
fscale
adc
frstor
je
pop
scas
shll
orb
ljmp
fwait
repz
xchg
cmp
mov
mov
icebp
mov
add
push
pop
jmp
enter
stos
les
inc
sbb
xlat
pop
xlat
popa
fdiv
repnz
dec
inc
dec
sub
clc
mov
jb
sub
add
add
add
dec
lds
inc
mov
xlat
jle
inc
fsubr
mov
fsubl
stc
shlb
inc
cmp
cmpsb
int
mov
out
push
pusha
pop
mov
not
sub
ds
xchg
sbb
adc
xor
xor
ret
aad
dec
shrl
icebp
int
mov
mov
push
cmp
add
add
add
lods
fisttpl
icebp
add
movsl
lret
ret
push
mov
aas
add
stos
sub
adc
or
lea
rcr
mov
es
aaa
sub
sub
ret
xor
mov
sub
cmp
and
dec
pop
add
push
pop
or
in
push
mov
push
rcll
and
sub
add
add
add
push
push
cmc
push
out
lret
dec
sub
fsubrl
xor
push
and
lret
and
mov
push
fmul
sub
pusha
mov
shrb
enter
out
sahf
sbb
inc
cmp
movsb
push
fcoml
add
fmuls
sub
dec
in
ljmp
mov
lret
and
filds
add
add
add
sub
dec
into
mov
rorl
push
fcoml
iret
cs
sub
xlat
jnp
decb
and
xchg
cli
jecxz
jnp
or
aam
shl
mov
stos
and
pop
rcll
adc
mov
filds
insl
pop
pushf
int
fisttps
add
add
add
push
dec
cltd
or
in
fdivl
addb
sarb
sub
push
int
popa
fadd
xor
fisubs
dec
xchg
enter
enter
mov
mov
pop
pop
jecxz
inc
enter
cs
cmp
jno
jg
mov
jge
test
pop
pusha
daa
out
fdivl
add
loope
pusha
mov
ds
fimuls
mov
inc
dec
out
mov
rolb
shll
mov
out
cmp
fs
ret
add
or
stos
mov
nop
lret
inc
repz
hlt
arpl
adc
add
outsl
push
and
ret
enter
xor
int3
adc
es
add
add
add
out
push
mov
mov
push
test
cs
jns
mov
std
adc
inc
cli
fidivrs
xor
fldt
bound
jmp
inc
pop
pop
pop
adc
idivb
mov
repnz
lcall
out
popa
outsl
xor
shlb
mov
add
add
add
add
rcrb
mov
sub
pop
xchg
dec
push
pop
mov
jg
mov
ja
cmp
sub
clc
fldenv
dec
adc
les
sub
mov
sbb
xor
adc
popa
xchg
xchg
arpl
js
test
add
add
add
mov
xchg
jno
gs
mov
aam
sub
sbb
mov
idivb
xor
xchg
fwait
xchg
xor
mov
ss
jmp
mov
xchg
popf
das
adc
lea
jne
fs
push
cwtl
in
mov
pushf
or
xchg
add
add
add
insl
dec
xchg
mov
adc
orl
xchg
sub
sub
mov
jl
dec
dec
icebp
mov
sub
lea
ljmp
xchg
cld
popa
insb
dec
inc
jmp
add
xchg
jl
xchg
push
mov
orl
dec
repz
jecxz
lea
lret
push
icebp
mov
add
add
add
repnz
mov
lods
mov
mov
gs
shll
cmp
lock
xorb
xor
jmp
jnp
inc
lock
inc
inc
pop
lea
xor
cmp
sahf
sbb
stos
inc
adc
shrb
cmp
jbe
je
xchg
inc
and
add
add
add
jbe
cmc
dec
in
mov
jl
inc
jmp
jbe
mov
inc
and
jecxz
push
mov
add
jl
pop
sbbl
xchg
sub
les
negl
insl
xchg
xor
jb
sub
jge
xor
and
scas
jmp
jge
fcoml
add
fstpt
insb
inc
outsb
fst
addr16
int3
jmp
mov
sub
mov
scas
pushf
outsb
xchg
addb
and
mov
and
fmull
cmp
fst
stos
out
xchg
add
pop
xchg
shlb
mov
push
daa
mov
fimull
mov
or
fwait
push
data16
lods
sub
xchg
rorb
addb
add
add
xor
scas
sahf
mov
pop
push
inc
test
scas
jo
pusha
mov
dec
stos
imul
mov
cmpsl
ds
rcll
xchg
repnz
or
push
sub
sub
mov
push
sbb
stos
mov
pop
sbb
mov
ret
pusha
mov
movl
jp
mov
jns
xchg
lea
jb
jno
ret
icebp
xor
mov
mov
push
xchg
xchg
mov
jmp
scas
cwtl
pop
mov
push
cmp
xchg
mov
cmp
fwait
jle
push
mov
jecxz
pop
push
xchg
xchg
fimuls
xorb
add
add
cltd
ret
int
jl
mov
jae
std
imul
popa
mov
inc
jo
jb
fnstsw
mov
outsb
cmp
push
std
push
jl
outsl
mov
imul
jno
call
add
mov
add
insl
xlat
pushf
pushf
or
add
add
add
pop
pop
rorl
cmp
or
sub
inc
test
add
cmpsl
fldl
jnp
and
mov
push
mov
je
cmp
in
fisubrs
jns
jg
mov
cli
adc
out
sbb
movsb
pop
mov
fsubrl
cmpsl
mov
xor
add
add
add
xchg
out
inc
mov
mov
lock
sbb
or
add
hlt
xchg
aas
js
lods
roll
loope
jae
ret
rcrl
or
lock
std
push
jmp
pop
out
lret
mov
repz
and
mov
or
stos
inc
xchg
std
inc
and
mov
inc
or
cmpsl
loopne
repz
add
add
das
pop
or
jp
inc
sahf
jno
pop
or
adc
mov
and
lcall
jmp
icebp
xchg
enter
repz
out
cmp
mov
or
pop
cli
cmpsl
jnp
cli
ja
or
mov
xchg
into
mov
dec
ds
pop
repz
push
enter
xchg
movsl
mov
add
add
add
rorb
jp
lea
mov
mov
adc
or
mov
cli
xchg
or
sarl
loope
sbbb
dec
cmp
push
in
popa
mov
decl
nop
cli
mull
repnz
rclb
cli
jno
add
arpl
je
cwtl
out
sbb
fdivl
cmp
and
push
dec
loopne
bound
push
xor
add
add
add
enter
jmp
adc
push
loop
jne
sbb
xchg
fucomp
xchg
mov
fucom
lret
mov
or
mov
lahf
mov
nop
pop
shll
lret
jmp
sbb
pop
cmp
fwait
test
cmp
jb
sbb
dec
dec
arpl
nop
mov
movl
add
dec
cld
add
dec
lock
jns
push
mov
ret
adc
ficompl
jp
cltd
test
mov
add
cmp
adc
inc
and
push
or
ficompl
hlt
fnstcw
daa
xorb
sub
imul
inc
outsl
xchg
cmpl
mov
add
add
add
mov
inc
jle
lock
fsub
add
hlt
sub
inc
mov
repz
dec
inc
inc
mov
sub
or
and
cmpsl
push
into
popf
icebp
cmpsl
data16
adc
repz
repz
dec
xlat
mov
negl
xorl
xor
add
add
add
lock
xchg
and
mov
data16
mov
decb
ret
mov
add
push
das
mov
pop
xchg
inc
mov
fiadds
adc
dec
push
mov
pusha
stc
sub
push
ljmp
mov
mov
xchg
adc
fildl
mov
popf
in
jnp
jbe
pop
je
lods
cmpsb
adc
add
add
add
add
inc
jl
dec
add
push
push
cli
dec
and
addr16
mov
movsb
std
pop
cli
add
aam
jbe
xchg
lock
lcall
push
sti
pop
or
rcrl
jno
push
mov
xchg
adc
testb
cltd
or
and
enter
pop
adc
aad
loopne
inc
fsubs
and
incl
add
add
add
negl
dec
sbb
cwtl
push
in
dec
lock
or
cltd
daa
or
jecxz
in
sbb
mov
icebp
arpl
pushl
jle
out
stos
mov
jno
aad
xchg
xchg
fisttpll
mov
xchg
adc
cmp
mov
jbe
in
add
mov
lret
cmp
scas
or
add
add
add
jge
and
xlat
out
cmp
jecxz
cmp
jno
xchg
repz
vmovsd
ficompl
nop
outsb
jecxz
cli
inc
jle
and
mov
cli
jp
mov
sarb
fimull
fisttpl
xor
in
fsub
inc
in
jg
jle
int3
mov
mov
out
mov
lcall
lcall
add
shl
mov
jl
mull
push
cmp
cmpsl
mov
arpl
into
mov
sahf
icebp
repz
in
adc
mov
pop
adc
sub
int3
push
dec
sub
xlat
orb
outsl
add
jne
adcb
inc
add
insb
or
mov
sti
mov
push
mov
xlat
mov
sahf
sbbl
add
add
push
push
dec
adc
mov
jge
jmp
sbb
add
sbb
lcall
sarb
push
cmp
les
sahf
lret
add
mov
push
shl
mov
push
mov
push
inc
sbb
add
call
data16
loope
fwait
push
orb
push
aaa
adc
add
push
in
mov
cmp
add
add
add
dec
lret
adc
inc
repnz
fnsave
adcl
leave
sbb
loope
pop
jbe
sbb
xor
add
mov
popa
sbb
add
mov
cwtl
scas
sbb
daa
sub
icebp
out
adc
sbbl
mov
mov
js
mov
lea
xorl
not
call
js
add
add
add
xchg
mov
fstps
xchg
jnp
mov
adc
sbb
xchg
jmp
pop
icebp
fwait
stos
mov
cltd
call
call
cli
mov
fldt
lret
mov
shr
and
add
or
lock
popl
push
mov
lea
movsl
push
sti
xchg
add
add
add
aam
in
lock
push
addb
cmc
mov
jae
test
inc
lea
add
popa
loop
cmp
ss
mov
mov
cmp
pop
xchg
iret
jae
xchg
dec
mov
or
jae
addb
or
je
mov
fcmove
jns
mov
or
loope
jne
add
cmp
add
add
add
sbb
jb
inc
xor
sbbb
imul
mov
push
mov
add
and
add
lock
ja
push
shr
fisttpll
pushl
and
pop
sahf
sbb
xchg
fnsave
fisttpl
cld
je
test
ljmp
pop
add
je
dec
test
inc
sbb
andl
add
add
add
jo
xor
push
and
cmp
and
mov
xchg
data16
loopne
xchg
or
mov
scas
out
xorb
repnz
mov
subb
jl
cmc
or
pop
scas
movsb
jnp
fs
idiv
push
inc
xchg
sub
sub
or
jmp
ret
inc
xor
push
xchg
add
add
add
inc
jnp
sbb
push
scas
xor
dec
fidivrl
mov
nop
cld
xchg
xor
cld
sbb
cmp
add
or
hlt
das
sti
jb
jbe
xchg
aad
push
inc
adc
in
xchg
jb
rclb
test
shl
jg
mov
add
dec
je
or
cld
aaa
add
add
add
sbb
jl
ficompl
in
iret
pop
lods
mov
inc
stc
mov
add
xor
out
inc
or
cmpsl
sbb
or
or
pop
inc
adc
inc
fstps
repnz
push
jg
call
sbb
cmp
outsl
mov
rorl
xchg
push
into
jae
or
mov
inc
add
add
add
add
sbb
cmp
sbb
into
xchg
int
out
test
jmp
add
jb
stc
cmp
inc
add
lret
sub
shrb
push
jb
test
xchg
iret
xchg
rolb
out
mov
jmp
cwtl
inc
aas
and
addb
add
mov
sub
rolb
add
add
addr16
rolb
jo
mov
jmp
outsl
and
dec
inc
and
mov
in
into
psubsb
cmpl
call
dec
cmpsb
add
mov
call
ret
or
lcall
and
loop
jo
lock
cmp
repz
or
notl
inc
fldcw
cwtl
jle
or
add
add
jecxz
inc
rol
lret
inc
add
fmull
mov
xlat
mov
popa
leavew
lahf
rcr
repnz
inc
dec
pop
scas
sub
andb
push
xor
mov
mov
cmpsb
out
adc
dec
int
fstpl
mov
inc
inc
dec
lods
push
daa
sub
aas
dec
adc
sahf
mov
add
add
add
mov
mov
mov
sub
mov
aad
lcall
ret
fwait
js
ret
cmpsb
mov
stc
pushf
outsl
push
jnp
daa
adc
fldt
lcall
jle
adc
push
mov
inc
out
jle
sub
push
or
popf
call
dec
hlt
movsb
cmp
add
add
add
or
ljmp
xchg
nop
inc
sub
push
in
cltd
or
loope
lods
fiaddl
push
jecxz
fimull
stos
out
xchg
lahf
cmpsl
or
xchg
sub
gs
sub
insb
xchg
lock
ljmp
and
repz
and
popf
shrb
lds
mov
jmp
pushf
mov
xchg
shrl
add
add
add
stos
inc
aas
xchg
push
mov
mov
test
in
andl
jle
hlt
jecxz
lods
scas
idivb
mov
call
ret
ss
fistpll
add
bsr
fadd
fildll
shll
jl
rcr
fnstenv
pop
mov
outsb
js
dec
sarl
sbb
add
add
mov
mov
pop
scas
mulb
fisubrs
aam
test
mov
mov
out
mov
fbstp
jle
mov
mov
mov
sub
cmpl
mov
inc
and
arpl
mov
icebp
push
orb
push
xlat
mov
jecxz
dec
fs
jno
inc
int3
aam
add
add
add
cmpsb
mov
adc
cli
add
mov
dec
adc
mov
lds
orl
or
les
out
xlat
ss
adc
pop
cmp
push
mov
aam
xchg
aam
ds
xor
xlat
fsubrl
sub
insl
arpl
mov
faddl
add
add
add
mov
pop
out
movsl
fcompl
adc
sub
pop
mov
ret
push
dec
sbb
int
xor
dec
scas
add
call
lods
mov
shrl
xchg
mov
iret
dec
push
lcall
movsl
pop
scas
shr
pop
pusha
pop
mov
cli
in
ret
push
or
jns
iret
cmpb
add
add
add
cltd
lods
jmp
lods
sub
xor
pop
cmpsl
dec
push
jb
fidivrs
mov
imul
and
push
xchg
shrb
inc
mov
das
adc
push
push
loopne
push
out
repz
jno
sub
mov
es
push
mov
jg
push
into
inc
jmp
add
add
add
orb
inc
pop
stc
xor
pop
adc
xchg
jle
cmp
sahf
inc
imul
imul
fstpt
push
fidivrs
add
insl
fldenv
push
fsubrl
imul
fdivrl
daa
cltd
jns
fidivrl
mov
mov
filds
jmp
mov
outsb
stos
repz
or
add
add
add
xchg
pusha
fdiv
insl
pop
inc
rolb
sbb
daa
enter
mov
xchg
pusha
fptan
push
dec
fiadds
cmc
push
shl
mov
cmp
inc
stos
pusha
lret
mov
or
cmp
in
movb
imul
adc
cmpsb
cmc
pop
es
jmp
add
add
add
xchg
add
mov
addr16
insb
bound
sub
outsl
hlt
fiaddl
mov
pop
adc
jle
mov
fisubl
mov
mov
gs
cld
ret
or
inc
cs
fdivrp
mov
rorb
movsl
add
pop
or
into
push
mov
add
je
fidivl
push
cltd
add
add
add
lods
xor
mov
push
add
push
add
lods
inc
je
mov
pop
sub
mov
inc
jl
test
inc
push
or
mov
mov
sbb
push
jl
inc
add
loop
pusha
sahf
mov
mov
stc
mov
cmp
sahf
cmp
int3
test
test
adc
dec
loope
add
add
add
ja
stc
insb
pusha
add
inc
cltd
cltd
lods
or
data16
and
push
sub
xor
cwtl
mov
mov
mov
icebp
xor
cltd
es
pop
mov
mov
adc
fdivrs
or
mov
jg
jne
ja
addr16
pop
mov
mov
adc
add
add
add
pop
jp
les
call
lcall
call
or
pushf
rdtsc
mov
dec
xor
sahf
pop
lcall
mov
xor
rclb
xor
sub
loopne
push
mov
outsl
xor
popa
adc
iret
push
xchg
out
lods
add
jns
test
add
add
add
xor
cwtl
and
mov
mov
push
rorl
test
lods
sbb
das
mov
fnstsw
lods
cmp
mov
inc
imul
mov
bound
mov
sub
lods
lret
and
lret
fisttpll
push
xchg
add
add
add
in
lea
push
es
cli
cltd
cmp
loop
add
xchg
xchg
adc
xchg
mov
inc
jecxz
bound
jg
sbb
add
fs
push
mov
mov
ds
xchg
mov
fildl
sub
mov
add
dec
pop
jo
pushf
cli
outsl
lea
sbb
add
inc
adc
fucom
pusha
push
aaa
dec
pop
mov
dec
fmuls
mov
int3
inc
or
ret
fwait
xchg
loopne
mov
jno
mov
xor
xchg
xor
add
mov
fs
sub
mov
insb
xor
jmp
jl
pop
enter
mov
push
mov
fisttpll
mov
jns
cltd
int3
add
add
add
rclb
inc
mov
fildll
push
xchg
mov
popa
nop
xorl
jns
imul
test
mov
cmc
pushf
seta
mov
int
stos
cmc
xchg
xadd
fmuls
sub
xor
push
rcrb
mov
sub
subl
dec
xchg
sbb
mov
add
add
add
sbb
fmul
jp
add
hlt
push
add
mov
mov
push
add
jne
dec
push
imul
xchg
out
imul
mov
jb
js
cmpsb
sub
push
jmp
pop
push
in
mov
orb
scas
xchg
aad
in
xor
mov
add
add
add
dec
push
xlat
imul
mov
adc
xchg
inc
sub
ljmp
dec
mov
push
lea
mov
mov
lods
dec
lods
int3
pop
cmp
push
mov
movsl
cmp
mov
fcoms
mov
pop
decl
jge
pop
subb
jbe
ficomps
add
add
xchg
lret
cltd
pop
and
mov
dec
push
lea
mov
cmp
lods
movsb
das
cwtl
xchg
lahf
test
lea
cmp
ljmp
mov
sar
sahf
scas
xchg
pop
mov
push
es
jb
rol
lret
shl
xchg
lds
xchg
lods
rcl
frstor
aas
add
add
add
mov
mov
fwait
iret
mov
cmp
test
or
fcompl
sub
pusha
xchg
jb
scas
xor
orl
push
push
mov
int3
stos
icebp
pop
xchg
and
les
dec
hlt
add
sbb
out
sbb
jno
out
mov
out
clc
test
add
add
add
mov
inc
pushf
arpl
cli
ficomps
in
jne
add
add
or
arpl
adc
mov
das
imul
rolb
lcall
lahf
mov
push
pop
inc
sbb
out
jp
mov
std
cmp
jecxz
pop
loop
add
dec
or
add
add
jecxz
dec
mov
adc
adc
and
mov
add
mov
ret
fs
jmp
dec
lock
dec
inc
jo
or
cmpsl
inc
xchg
daa
jle
or
andb
out
xor
push
pop
mov
push
or
in
or
jno
mov
cwtl
pop
dec
mov
mov
std
addl
add
add
addr16
lock
pusha
ret
adc
xchg
mov
or
pushf
dec
outsl
loope
dec
outsb
xchg
push
lods
or
mov
push
mov
popf
ja
push
insl
popa
xchg
call
shrl
mov
jno
stos
repnz
or
pmuludq
push
test
sub
dec
hlt
cld
and
sbb
pxor
add
add
add
sbb
je
insb
bound
stc
ror
push
jbe
xchg
test
mov
fimull
hlt
fidivl
aaa
mov
lds
in
aaa
mov
lds
add
sti
movsb
jo
mov
test
mov
fs
stos
xorb
jns
push
xchg
addl
adc
mov
hlt
jo
adc
add
add
push
sbb
popa
cmp
ss
dec
mov
sbb
push
push
sbb
js
dec
and
xor
pop
xchg
jbe
mov
call
jbe
mov
xor
popf
inc
mov
xchg
adc
sarl
ficoml
scas
std
ja
mov
add
add
je
fistl
mov
out
clc
cwtl
std
fsqrt
mov
out
fcomps
mov
add
sbb
rcrb
push
mov
gs
nop
pop
mov
fs
xchg
ret
out
cmp
fistpl
xchg
mov
clc
cmpsl
add
adc
or
pop
test
add
add
add
mov
loop
clc
lcall
movsb
mov
adc
jmp
mov
xlat
lock
notl
ds
mov
test
arpl
xchg
daa
mov
ds
test
movsb
mov
std
mov
xor
adc
lock
pop
inc
or
and
dec
mov
in
not
push
adc
add
add
add
or
outsl
push
push
adc
inc
cmc
fcmovnb
leave
clc
xchg
jae
cmpl
jae
je
push
jmp
sub
test
sbb
push
mov
mov
mov
call
push
es
jp
xchg
mov
mov
xchg
mov
clc
dec
cmpsl
push
mov
push
hlt
cli
mov
jne
test
push
xchg
add
add
add
jg
jo
xor
and
out
or
enter
jmp
ret
inc
add
adcl
lock
fsubrs
shll
lods
dec
cld
and
mov
xchg
clc
popa
jg
int
mov
pop
mov
fidivrs
loope
dec
cmpsl
into
push
xchg
fs
adcb
pop
sbb
cmp
add
add
add
aaa
jno
mov
add
repz
inc
or
fstps
push
pop
insb
jne
jae
ljmp
mov
cmp
aad
into
sub
mov
bound
pop
xchg
push
js
xchg
fdiv
imull
sar
sub
bound
sub
push
outsl
mov
or
sti
jmp
add
add
add
shr
mov
cmpsb
test
add
test
sahf
jle
sti
cld
cli
mov
clc
insb
lret
xchg
out
mov
mov
mov
fnop
movsb
mov
and
xor
add
sub
add
mov
jge
xlat
sti
add
mov
lock
cmp
lcall
pushf
sti
jmp
cmp
jae
incl
add
add
add
jecxz
dec
mov
inc
or
fwait
or
and
xor
or
jae
lahf
incb
call
sub
out
mov
cmc
pop
lea
jecxz
or
inc
addb
outsl
cmpb
mov
mov
scas
add
or
mov
dec
aas
jb
loopne
sbbb
add
add
mov
adc
adc
movsb
cld
inc
ret
pop
sub
loop
and
or
jae
cwtl
mov
cmpb
cld
mov
mov
inc
add
jp
adc
lock
mov
xchg
xlat
xchg
repz
mov
testl
push
daa
mov
fsubl
add
add
push
mov
icebp
xchg
jo
cmp
dec
clc
shll
ret
ret
xchg
mov
imul
jno
data16
testb
add
leave
cmovns
jp
pop
scas
addl
mov
imul
pop
pop
mov
cmp
mov
stos
adc
out
add
add
add
or
insl
jbe
mov
fwait
or
jmp
outsl
lcall
ret
cmp
add
jecxz
fadds
pusha
stos
sti
out
test
xlat
out
js
jmp
sahf
jo
jmp
enter
jae
test
or
fwait
jmp
sarl
aas
in
repz
push
mov
dec
pop
add
add
add
scas
cs
cmp
mov
addr16
pop
js
sub
mov
add
decb
repz
jmp
out
jne
pushf
mov
sbb
cmp
mov
iret
cmp
enter
mov
sub
insb
pop
and
and
orb
dec
cli
cmpsl
sbb
add
add
add
add
xor
je
cs
or
je
mov
jo
add
push
pop
add
cwtl
testl
push
sbb
adc
sbb
xor
jns
leave
xor
inc
add
push
mov
or
movsl
hlt
lret
cltd
ljmp
test
mov
sub
fldlg2
into
out
add
add
add
add
shll
and
adc
loopne
or
shlb
xorb
inc
or
into
jecxz
pushf
shl
negb
cmp
add
rcll
mov
lret
cwtl
pushl
leave
test
pop
inc
or
or
mov
psubq
sldt
add
add
or
pushf
jl
xor
aam
add
loop
loop,pt
sub
mov
jmp
testb
cmp
adc
mov
shrb
cmp
xlat
icebp
rcll
cmp
pop
and
pop
jmp
mov
inc
cmp
outsl
enter
inc
sbb
inc
xchg
add
add
add
xchg
lods
inc
jnp
aaa
xor
push
add
adc
xor
mov
imul
mov
test
mov
icebp
ss
jg
jle
out
mov
mov
cmc
rcrl
enter
hlt
xor
stos
jno
xchg
add
cs
dec
mov
mov
xor
test
xchg
add
add
add
stos
test
dec
mov
dec
pop
lods
jb
inc
xchg
and
imul
add
dec
mov
dec
push
lret
xchg
sub
clc
arpl
mov
inc
sbb
mov
iret
push
out
lods
in
cld
fucomip
sarl
push
loope
and
pusha
push
repz
rclb
sar
and
mov
filds
add
add
add
push
ficoml
cli
pushf
out
iret
cmc
mov
mov
scas
xchg
pop
fsubr
int
fmull
push
inc
cmc
cmc
fsubrl
jg
mov
or
mov
xor
cmpsb
cmpsl
jl
mov
push
inc
fcompl
aad
push
hlt
dec
aaa
pop
mov
lret
cmp
inc
fcompl
push
inc
inc
sub
add
add
add
out
stos
ds
jbe
ret
out
outsb
inc
cmp
inc
data16
test
pop
pop
addr16
insl
pop
cmp
jno
aam
pop
and
xor
push
insb
mov
movsl
dec
adc
xor
mov
mov
xlat
mov
stos
rorb
leave
dec
in
fwait
jmp
adc
mov
lret
dec
sub
add
add
add
mov
int3
xchg
inc
inc
mov
xchg
xchg
gs
jecxz
push
data16
ret
inc
inc
test
cmp
ret
out
rolb
lcall
jmp
xchg
xchg
adc
mov
pusha
stc
mov
inc
shlb
ds
lds
sbb
outsl
adc
cld
in
add
add
add
add
sbb
and
stos
xchg
xor
jecxz
dec
xor
stos
add
imul
test
lret
bswap
xor
icebp
shll
xor
ss
xor
push
imul
popa
pop
leave
mov
push
lret
aaa
fwait
mov
call
mov
ficoml
testl
add
mov
add
add
add
cmpsb
fcoml
lret
iret
cmp
or
fsubrl
call
xchg
rcrl
mov
pushf
rcrl
test
pop
fidivs
call
arpl
xchg
addr16
inc
test
fmul
nop
push
bound
call
mov
fcomip
mov
cmp
add
add
repnz
sub
and
inc
repnz
jb
xor
lahf
push
and
jl
repnz
dec
mov
cmc
pop
or
xor
and
nop
cmp
shll
fsub
inc
mov
xlat
ljmp
das
loop
jnp
fadds
sub
sub
xlat
sub
insl
push
mov
outsb
pop
iret
cltd
inc
out
fbld
pusha
add
add
add
cmp
out
xor
lock
cmp
pop
shrb
in
dec
icebp
sarb
es
fdivl
mov
fucom
stos
xchg
inc
cmp
cld
cmp
cmp
mov
into
mov
inc
out
adc
ljmp
jno
in
xor
dec
mov
icebp
fnstcw
pusha
int
dec
jecxz
xor
cmp
add
add
add
test
enter
shr
fiaddl
mov
mov
shl
jae
jecxz
jae
jecxz
je
jecxz
je
jmp
inc
inc
mov
mov
push
imul
and
cmp
mov
out
mov
push
cli
lds
lahf
insb
mov
jbe
pop
push
scas
dec
cmpl
lods
into
pop
out
jge
mov
add
add
add
mov
dec
rorb
mov
mov
lods
xor
push
xchg
enter
ret
or
cmp
cmpsl
mov
add
mov
dec
movsb
add
mov
sbb
call
xchg
cmp
mov
iret
inc
movsb
shll
mov
inc
fadds
add
add
add
or
jne
inc
in
sti
stos
pop
scas
movsl
nop
cmc
and
or
scas
jecxz
push
loope
mov
inc
sbb
lea
dec
ss
or
daa
test
xor
lods
mov
out
and
das
sahf
rorb
fst
xor
mov
add
add
add
scas
call
incb
and
mov
ret
stos
movsl
or
xchg
lret
cmp
xchg
cltd
cwtl
or
xchg
sub
into
orl
fs
mov
imull
or
cmpsl
xchg
inc
dec
sahf
lret
sub
push
outsb
sub
push
cmpsl
fcoms
fdivrp
incb
add
add
add
outsb
ss
jg
cmp
add
test
orb
mov
or
clc
and
pop
cli
fdivrl
jp
or
fsubl
into
pop
jl
sahf
movsb
xor
xor
rclb
push
mov
jge
mov
pop
mov
and
je
lea
fistps
dec
arpl
add
add
add
pusha
mov
mov
sbb
adc
je
sub
push
outsb
and
adc
or
int3
sahf
ds
xchg
jle
xlat
fbstp
mov
jle
test
aam
pop
xchg
mov
cld
outsl
xorl
adcb
jno
out
lcall
into
cltd
iret
add
add
add
lcall
push
push
sarb
hlt
scas
mov
imul
or
sub
divl
lock
xor
iret
dec
das
mov
loopne
scas
daa
mov
sub
add
addb
sub
add
add
add
add
push
insl
dec
sub
jo
sbb
push
je
mov
ss
loope
cwtl
lea
fsubl
loope
inc
mov
sub
pop
inc
sahf
dec
mov
sub
pop
push
bound
es
add
cltd
mov
mov
sub
xchg
sub
jne
ss
fisubrs
lea
add
add
add
cmp
bound
cmovbe
bnd
mov
fists
sahf
xchg
adc
add
cmpsb
xor
scas
test
cmp
mov
xchg
push
decb
sar
pop
mov
mov
scas
mov
fdivl
jl
mov
decb
insb
lea
cmc
xchg
mov
add
add
add
push
decb
inc
mov
and
lea
in
jge
mov
mov
arpl
out
cmpl
in
xor
xorl
int
xor
pop
andb
jge
movsl
lea
sub
push
xchg
xor
push
loope
pop
dec
push
dec
orl
add
add
add
cld
lods
mov
sub
lcall
arpl
jbe
inc
mov
pop
dec
inc
mov
xor
xor
test
mov
popf
fisttpll
fimull
int3
adcl
push
jbe
xor
pop
mov
sub
gs
sub
cltd
jo
add
add
inc
out
ds
ljmp
inc
lea
xor
clc
ja
sub
sub
fdivrs
out
push
popf
adc
add
das
mov
lock
xor
jp
popf
mov
adc
je
fucomi
sub
mov
outsl
sub
rolb
aaa
repz
std
mov
je
and
mulb
add
add
add
or
pop
push
mov
add
loope
inc
repz
push
aas
add
cmpsw
mov
mov
add
jg
add
je
add
mov
and
sahf
hlt
lea
cmc
adc
sahf
popf
mov
sub
ds
out
stc
dec
testl
add
add
add
jnp
mov
xchg
paddusb
sti
cmpsl
mov
popa
cli
xor
sahf
sahf
je
jae
loop
sti
adc
scas
mov
cli
js
inc
pop
push
push
cli
jg
xchg
inc
fisubl
test
xchg
adc
lock
push
fnstsw
push
les
push
mov
add
add
add
pusha
gs
lock
outsb
sub
and
imul
inc
addr16
dec
popf
arpl
cmp
jl
arpl
fwait
adc
push
fs
adc
xor
jg
inc
cmp
ss
xor
fstpl
in
adc
jnp
mov
inc
or
js
sbbb
pop
dec
xor
add
fldenv
pop
inc
push
jbe
decl
les
jle
sub
dec
pop
cltd
cmpsb
add
add
insb
aas
test
fcom
leave
mov
lahf
sbb
xchg
out
cmp
scas
add
inc
lods
jo
mov
std
and
sub
xchg
leave
mov
lcall
cmp
out
cli
orb
add
add
mov
xchg
jne
mov
mov
cmp
mov
clc
jns
and
stc
sub
push
sti
mov
int
mov
add
shl
xchg
repz
mov
and
adc
idiv
negb
xchg
idiv
shlb
mov
inc
inc
inc
add
add
add
and
repz
movsl
and
pop
sub
jno
mov
xchg
mov
adc
notb
jae
jle
movb
add
outsb
add
testl
insb
inc
pop
movsl
and
sahf
add
lock
sbb
rolb
stos
sub
fistps
and
or
add
add
add
lds
adc
cld
pop
xlat
push
pop
pushf
setge
add
sbb
std
pushf
pop
loope
pusha
pop
scas
cs
xor
imul
push
dec
cmp
or
adc
dec
and
or
outsb
and
add
inc
icebp
adc
adc
mov
push
mov
xor
icebp
incb
sub
push
sub
add
add
add
in
movsb
ss
and
in
dec
in
insl
icebp
cmp
pop
adc
dec
in
dec
mov
ret
int3
leave
lret
mov
dec
fucom
or
lret
mov
xchg
or
arpl
in
jo
jbe
je
sub
sbb
jo
push
loopne
or
xchg
push
loopne
mov
jne
insl
adc
add
and
lea
dec
adc
pop
ret
fs
call
pop
adc
inc
or
enter
or
xlat
out
and
insb
aas
mov
push
add
in
cmpsl
out
sti
push
cmp
repnz
je
fistl
in
icebp
call
popa
pop
icebp
call
imul
test
lock
mov
jnp
je
adc
mov
add
iret
dec
sahf
adc
call
fwait
mov
xor
mov
inc
jle
sub
insb
mov
mov
popa
jge
aas
leave
dec
cmp
or
out
adc
mov
call
outsl
ds
xchg
add
ds
int
aas
dec
in
test
pop
test
stc
add
add
add
hlt
test
or
or
out
sbb
movsb
pop
aam
jge
push
stos
cltd
lods
xor
shrl
stos
mov
out
jge
lret
pop
xor
ljmp
andl
into
push
mov
jecxz
jb
pop
out
jge
gs
sub
push
mov
pop
div
push
dec
add
add
add
xor
into
push
call
inc
into
push
pusha
and
iret
push
fdivrl
into
push
mov
inc
jecxz
or
fwait
lret
pop
jb
pop
mov
mov
shll
lods
cltd
xor
and
fwait
dec
mov
ss
dec
push
fs
push
xor
lret
inc
dec
stos
jne
add
add
add
mov
mov
int
sarl
and
imul
inc
dec
jge
sbb
hlt
mov
cwtl
jge
or
lock
xchg
js
xor
loopne
pop
xorl
dec
shlb
mov
sub
je
loopne
shrb
sbb
fadds
sub
imul
and
int3
ror
xchg
arpl
xchg
pop
add
add
add
add
cmpsl
jo
sub
xor
test
dec
test
push
aad
adc
xchg
in
negl
aas
cmpsl
xor
jo
mov
cmpsl
rorb
sub
xchg
in
cmpsl
adc
clc
jne
adc
sar
pop
mov
inc
dec
cld
mov
and
cld
sub
cmc
ljmp
popf
cs
mov
add
add
add
jmp
sub
in
cmpsl
sbb
adc
add
jp
mov
add
mov
mov
add
ljmp
lock
xchg
std
cld
push
enter
ja
or
xchg
aas
sub
loop
call
test
insl
mov
in
jbe
jo
mov
add
add
js
mov
adc
or
insb
je
jo
jnp
popf
loope
enter
push
idiv
cld
call
sub
jle
movsb
adc
pop
decl
aad
mov
push
push
push
cmpb
faddl
dec
cwtl
add
dec
addr16
dec
lcall
mov
adc
add
add
stos
lret
sahf
decl
push
sub
cmp
mov
mov
mov
test
or
in
roll
fldt
pop
jnp
cmpsl
sub
les
pop
xchg
mov
lods
rcrb
xor
inc
xchg
mov
mov
xchg
push
arpl
aam
and
fcompl
add
add
add
int
inc
pop
test
fisubrs
lods
aas
pushf
mov
pop
add
out
xchg
xor
pop
adc
movsb
pop
add
xor
pop
fisttps
add
mov
mov
arpl
out
aam
repz
jmp
scas
sbb
adc
cmpsl
nop
add
add
add
hlt
mov
outsb
jmp
aas
std
mov
cmpsl
sti
cmc
adc
clc
arpl
cmp
fisubs
dec
cwtl
in
neg
shl
xorl
jns
sbb
cmpsl
and
and
invd
or
in
aas
sub
cmpsl
jnp
adc
mov
in
loopne
jmp
cmpsl
rcrb
add
add
add
inc
sub
jns
sub
push
sub
out
arpl
sarl
dec
mov
sarl
fwait
inc
pop
stos
ljmp
stos
jecxz
aam
push
inc
pop
stos
mov
aam
in
pop
stos
stc
ret
popa
sbb
stos
jmp
push
push
stos
stc
mov
xor
add
or
arpl
ss
jns
sub
imul
or
xor
pushf
mov
push
pop
dec
dec
sub
je
mov
lcall
xchg
jae
movsl
mov
jae
movsl
xor
mov
mov
popa
bound
lea
jae
inc
adc
inc
jp
test
lea
add
add
add
jae
aas
push
dec
mov
add
mov
fdivl
cmpsl
ret
push
loop
mov
xchg
cmp
ret
sub
lea
mov
mov
ret
mov
outsl
dec
mov
or
out
mov
or
add
mov
xchg
mov
fwait
xor
add
add
add
add
test
mov
or
xor
dec
inc
cwtl
sbb
xchg
cld
mov
dec
icebp
cmp
add
xchg
pop
movb
rcrl
and
dec
and
mov
or
shlb
push
es
dec
inc
or
ja
repnz
mov
imul
add
add
out
clc
fbstp
imul
push
jp,pt
imul
ret
test
repz
stc
add
fildll
sub
xor
inc
mov
xor
repz
shll
nop
jo
xor
outsl
xor
add
test
add
add
add
call
push
push
inc
fcoms
mull
inc
dec
and
add
ficoml
mov
inc
in
adc
push
mov
aad
movsl
sub
xor
and
push
add
adc
jle
jmp
xor
xor
xor
xchg
adc
aas
orl
add
add
add
xchg
data16
adc
out
push
cld
or
mov
bound
bound
mov
lret
and
cmp
push
jae
jl
out
movsb
jl
jae
out
ja
cmpsb
leave
bound
sbb
or
test
or
repnz
push
lret
add
or
adc
pop
cmp
adc
lods
and
dec
and
lea
icebp
or
add
add
add
sbb
rclb
sub
add
adc
add
mov
add
add
mov
mov
fcmovne
mov
lea
ret
jnp
mov
or
mov
fstps
adc
push
loopne
mov
bound
xor
mov
test
movsb
or
test
push
fwait
mov
jbe
jle
add
add
add
cmp
push
xchg
inc
shrl
push
popl
xchg
test
jle
in
je
addr16
test
sub
data16
addr16
push
adc
dec
adc
test
push
lods
mov
mov
rcll
cmp
sahf
call
data16
outsl
adc
in
add
add
add
iret
rorb
xor
mov
adc
iret
shlb
call
das
adc
hlt
imul
xchg
adc
out
mov
andb
imul
add
outsl
nop
and
fcomps
xor
xor
adc
pop
adc
sbb
or
add
pop
adc
sub
out
int3
lahf
adc
sbb
or
sub
xor
arpl
push
int3
pop
adc
sbb
lcall
xor
mov
mov
iret
adc
cmp
frstor
mov
mov
mov
fstp
jae
and
ret
leave
fs
pop
sbb
xor
insl
cmp
add
add
add
add
out
dec
pusha
jle
push
dec
add
es
repnz
fsubrl
into
pop
fcompl
xor
scas
dec
sbb
mov
fsubl
lods
lret
jp
fsubp
jb
jl
sub
scas
test
or
xchg
stos
adc
dec
ficoms
hlt
xlat
stc
iret
pusha
scas
rorb
add
ret
lock
add
divl
xchg
lcall
call
add
test
fs
sub
outsb
xor
pop
mov
arpl
call
lea
jmp
lea
pop
test
insb
in
sbb
arpl
rcl
pop
cltd
xor
jnp
add
add
add
cmpsb
lcall
cmp
xor
mov
mov
pop
ljmp
xor
divb
mov
ja
dec
sub
int3
repz
stos
and
xchg
mov
push
xchg
xchg
xchg
adc
mov
pop
fisttpll
popa
dec
xor
fnstsw
add
add
add
xor
stc
call
aas
fsubs
push
test
popa
jmp
idivb
call
xchg
lea
cmp
cwtl
in
inc
addl
lds
xchg
lea
and
cmpsb
xchg
xchg
pop
mov
push
pop
stc
loope
dec
push
lds
xchg
push
fs
adc
cli
add
add
add
add
fs
sti
fwait
and
add
stos
fwait
movsl
mov
dec
int
cli
mov
lret
mov
fnsave
push
push
out
movsb
repnz
rcll
out
push
push
cmpsb
sub
lea
and
decb
and
mov
mov
mov
or
cmp
loope
mov
add
add
add
inc
out
movsl
push
pushf
pop
loopne
add
addl
push
in
daa
lea
mov
das
popf
jl
cmp
mov
add
xchg
push
xchg
mov
xchg
mov
pop
cltd
dec
sbb
sbb
out
out
mov
or
lcall
xlat
push
xchg
loope
mov
mov
mov
add
popa
mov
xchg
into
js
pushl
test
cwtl
cmp
and
outsl
mov
lret
jp
mov
jb
xchg
enter
callw
out
js
cmpsb
dec
insl
sbb
push
jae
jecxz
pusha
mov
sbb
xchg
inc
mov
arpl
cld
jnp
test
push
push
add
add
add
dec
mov
xchg
aad
pop
mov
push
pop
pop
add
das
mov
sahf
insb
jg
cs
popa
jbe
faddl
sub
pushf
out
sub
xlat
and
mov
subl
xchg
cmpsb
xor
mov
pushf
pop
and
mov
inc
pushf
testl
add
mov
inc
pushf
out
sub
xlat
ds
pushf
pop
add
pushf
idivl
and
mov
sahf
sahf
sub
fdivrl
push
push
iret
sahf
sub
popf
outsb
sbb
dec
mov
daa
stc
in
or
or
dec
pop
sub
xchg
mov
add
mov
adc
xchg
cli
and
aad
xor
mov
lods
and
lods
ret
push
pop
pop
shll
lock
rcr
stos
out
add
popf
or
xchg
lea
sub
xchg
out
xor
mov
pop
hlt
push
daa
cli
lcall
adc
mov
xchg
xchg
mov
add
lcall
fwait
xchg
movsb
insb
scas
jecxz
gs
xchg
subb
rcrl
jns
adc
aad
xchg
cmp
jge
in
popf
popa
movsb
bound
iret
rep
pop
mov
test
je
lret
mov
test
orl
lcall
add
add
add
xchg
sbb
mov
xor
icebp
sbb
mov
sti
jl
sbb
xor
jl
sbb
xor
fnsave
xor
push
pop
add
pop
addr16
push
testl
outsb
pop
inc
pop
push
testb
insl
jmp
push
add
test
add
add
add
addl
clc
sbb
xchg
sbb
or
out
pop
xchg
inc
dec
pushf
lods
mov
sbb
mov
rclb
std
and
mov
mov
push
jns
cs
xchg
add
mov
add
pop
cmp
clc
and
sub
cmpsb
in
push
jo
add
add
add
adc
mov
xchg
lcall
mov
add
and
cld
in
les
in
or
test
loopne
xor
pop
mov
shll
xchg
les
test
or
mov
rcll
in
sar
repz
aaa
pop
popf
mov
add
and
aad
dec
nop
add
add
add
inc
add
std
cmp
cmp
pop
pop
push
inc
and
repz
xchg
das
mov
cmp
daa
cmp
insb
faddl
les
je
std
push
mov
pop
add
lock
xchg
ret
mov
xor
push
mov
xchg
xlat
popf
mov
cmpl
les
push
je
pushf
xchg
mov
shrl
xor
inc
pop
mov
pop
jg
fstp
and
mov
int
lret
mov
xlat
cmp
xchg
xor
into
fistl
xor
ja
add
insl
int
xchg
aaa
pop
push
mov
xor
jno
xchg
xchg
mov
ja
mov
add
add
add
cmp
test
addr16
inc
or
xor
ret
and
or
scas
enter
imul
test
lret
mov
xchg
mov
fdivs
shll
in
int
pop
insl
cld
xchg
fcoms
cmpsl
test
dec
mov
loopne
daa
mov
cmpl
add
xchg
pop
mov
push
mov
xor
mov
loopne
jns
fs
stc
je
dec
movsl
imul
stc
in
adc
ds
cs
lods
nop
jnp
mov
lcall
mov
gs
push
dec
fmuls
inc
mov
inc
cld
test
jns
cmp
out
add
add
add
cmpl
xchg
in
lea
sahf
repnz
std
repz
lret
in
mov
xlat
in
lock
incb
divl
or
popf
loopne
xchg
sbb
test
shll
jecxz
lods
mov
push
loope
xor
adc
into
insl
lock
imul
flds
shl
stc
mov
and
xchg
mov
add
shl
mov
jecxz
xchg
ds
bound
lods
mov
mov
dec
shl
loop
jo
or
mov
iret
xor
cli
mov
stos
sbb
cmp
cmpsl
or
push
mov
add
mov
enter
xor
mov
fwait
xor
mov
sub
lahf
adc
test
add
add
add
sbb
fs
std
jmp
xor
in
in
jb
lahf
xlat
data16
out
sbb
das
negl
push
xor
sub
push
add
mov
jns
shl
mov
mov
xor
repnz
lods
mov
sbb
arpl
mov
adc
pop
shl
pop
jno
aaa
add
add
add
aaa
pop
pop
inc
pop
mov
or
js
jno
out
int3
mov
push
sbb
shl
and
and
jno
fistl
ret
jge
dec
mov
push
outsb
aaa
pusha
out
jne
arpl
lods
cmpsb
add
pop
add
scas
aas
jmp
loope
in
push
mov
jmpw
lea
add
add
add
add
daa
inc
int
or
sbb
add
jmp
outsl
xor
jmp
mov
sbb
fbld
inc
cmp
jecxz
movsl
je
insb
lret
jb
nop
push
ret
xor
mov
push
lock
jmp
sahf
mov
jmp
rorl
push
add
xor
faddl
insl
lock
inc
mov
add
add
add
add
jecxz
out
xchg
add
pop
imul
xchg
scas
add
cmpsl
sub
scas
cmpl
mov
add
imul
or
push
call
fldcw
test
scas
add
lods
pop
add
and
ds
pusha
sbb
push
jg
xchg
mov
in
sub
add
add
add
xor
loopne
ds
or
mov
sbb
push
les
movl
adcl
pop
incl
adc
decl
add
jl
sub
pusha
or
jbe
cld
sbbb
jmp
xchg
cmp
aas
decl
test
repz
repz
add
add
or
rorb
pop
decl
std
jne
lds
pop
decl
xor
int3
or
xlat
dec
mov
xchg
or
or
pop
int
cli
xchg
jp
ret
cmp
sbb
push
ljmp
mov
jmp
jg
pop
pop
rolb
rcr
xor
insb
inc
sti
mov
and
add
or
adc
data16
shll
cld
jno
and
sbbb
les
jmp
mov
xchg
clc
dec
mov
fcmove
cmp
scas
cmp
aad
mov
aad
cmp
cmp
push
decb
jb
rol
ret
movsb
repnz
mov
cmp
add
add
add
in
shrl
jmp
pop
in
clc
fs
or
push
ja
add
rorb
cmp
rolb
inc
jo
xchg
outsl
sti
insb
lret
bound
test
mov
add
or
jp
sub
fcomps
cmpb
outsb
push
es
add
ret
add
add
add
out
xor
jge
mov
cld
push
jno
add
repz
pop
ljmp
mov
lret
fistpll
aam
mov
out
cld
je
orl
pusha
in
inc
and
sbb
mov
xor
decl
out
inc
aam
sub
mov
data16
xchg
pop
jae
push
or
lods
or
add
add
add
cmp
push
in
orb
xlat
addb
aaa
pop
out
xor
stos
notl
pop
incl
inc
mov
out
inc
call
adc
cld
adcb
cld
nop
xchg
mov
inc
add
and
int
dec
push
loopne
outsw
aas
add
pop
jl
add
add
add
mov
sub
inc
into
cmpsl
inc
in
mov
popa
mov
les
or
aad
test
xor
push
fadd
push
adc
pop
jb
roll
outsb
hlt
xchg
or
pop
movsb
insb
xor
adc
jno
bnd
out
shlb
ljmp
shrl
mov
shlb
xchg
xor
daa
add
add
add
sbb
mov
jge
adc
movb
test
and
sbb
addw
add
inc
xor
fidivs
xor
in
or
test
or
add
xchg
jl
call
in
sahf
outsb
mov
mov
das
sub
and
add
jbe
addl
add
and
push
faddl
mov
mov
sub
sahf
xchg
push
cmpsb
iret
cs
out
pop
imul
push
popa
push
sub
push
push
inc
sub
in
lods
add
fsubl
outsl
cmc
xlat
push
aam
sub
xchg
imul
and
jmp
push
sub
jns
xlat
sbb
add
add
add
add
in
call
repz
ret
inc
xlat
cmp
jb
daa
cmc
and
es
push
js
clc
dec
fsubrl
out
sub
jns
and
mov
mov
cmc
fdivr
adc
mov
inc
sub
loope
mov
or
and
fsubrl
xorl
add
add
add
rcrb
xchg
aas
mov
movsb
addr16
ss
inc
lcall
fdivl
cld
into
icebp
xlat
push
inc
inc
mov
aas
dec
cmpsb
aas
mov
loopne
jle
mov
jno
pop
ret
scas
les
mov
inc
int3
mov
inc
xor
fistl
cmp
dec
add
add
add
lds
xor
xchg
cltd
das
bound
dec
cmpsl
inc
gs
sub
dec
lret
xor
inc
clc
mov
inc
stos
fwait
notb
mov
and
sub
fs
out
jno
int
mov
aas
mov
sub
adc
mov
mov
rcll
imul
push
inc
push
jbe
inc
add
add
add
das
repz
icebp
int
addr16
fiaddl
sub
enter
das
aad
dec
and
iret
xchg
loope
cmc
pop
shrb
sub
dec
add
push
les
inc
mov
cmc
inc
test
xor
aad
xchg
and
sub
lret
push
cli
or
pop
aam
in
xchg
js
mov
add
add
and
and
and
mov
mov
push
dec
dec
inc
sub
mov
mov
scas
popf
leave
push
add
jp
and
push
pop
call
dec
pushf
sbb
pushf
mov
daa
fldcw
daa
pop
lahf
push
sub
imul
mov
jno
sarb
add
add
add
add
sarl
fadd
int
fistpll
bound
add
and
test
mov
in
hlt
mov
lahf
mov
pop
aad
inc
fsubrl
push
push
lds
jg
mov
pop
scas
mov
inc
arpl
and
stos
call
inc
es
lea
cmp
mov
fcoml
add
add
add
mov
pop
pop
pop
subl
popa
lock
out
aas
sarl
sbb
into
lea
jne
faddl
in
insb
shlb
pop
pop
mov
bound
and
aaa
fninit
push
pusha
mov
dec
ret
outsb
inc
mov
fwait
cmpb
add
add
test
lcall
cmp
movsl
aad
xchg
hlt
and
pusha
lea
enter
pusha
lods
das
rol
lret
mov
and
mov
xor
mov
cmp
xchg
mov
adc
das
out
shll
push
lret
nop
lret
das
rep
cmp
add
add
add
es
jne
add
lret
adc
iret
icebp
xlat
mov
stos
es
subl
aas
jp
popf
es
mov
push
sub
inc
icebp
flds
inc
sbb
xor
xchg
addr16
pop
insb
mov
imul
sub
inc
inc
gs
push
scas
testl
daa
push
jle
add
add
add
int
sub
mov
xlat
cltd
aad
add
cltd
xchg
mov
or
cmc
add
lea
pop
gs
sub
and
mov
push
insl
mov
xchg
xchg
out
mov
pop
pop
in
out
sarl
addr16
nop
lea
mov
pop
sub
add
add
add
inc
adc
pop
sub
js
sbb
outsb
jbe
sbb
dec
test
lods
fwait
xchg
mov
gs
test
insw
mov
push
pop
cmp
pop
pop
cmp
or
mov
arpl
lea
adc
fwait
xor
mov
add
cltd
hlt
cli
insl
mov
cli
dec
mov
or
fadds
aas
mov
sbb
insb
add
or
or
sbb
popl
mov
sub
mov
push
jno
push
popa
sbb
inc
jbe
mov
mov
jno
movsl
or
push
add
add
add
add
rcll
add
iret
xchg
inc
je
scas
inc
jmp
mov
cmp
push
jmp
lea
mov
xchg
add
std
dec
jl
add
insl
cmc
out
mov
add
imul
rorl
xchg
push
ja
jae
jbe
sbb
mov
sti
pop
int
call
lods
and
add
mov
arpl
add
add
add
clc
cli
mov
ja
inc
les
mov
subb
outsl
jns
pop
xchg
pop
mov
sbb
push
sbb
jno
dec
call
nop
inc
xchg
das
fstl
stos
jns
call
xchg
add
or
dec
pop
push
adc
mov
add
jno
ja
cmp
push
mov
pop
pop
lock
fucompp
push
pusha
pop
cmpsb
pop
mov
add
add
add
dec
add
mov
sbb
ljmp
add
mov
sbb
call
adc
out
inc
add
dec
pop
xchg
pop
push
mov
pop
test
lret
std
rol
add
js
add
stos
cmp
jmp
xchg
pop
mov
mov
aad
fwait
add
add
add
insl
faddl
in
rolb
xor
mov
nop
mov
loope
dec
or
xchg
js
decb
adc
dec
jle
ja
mov
adc
or
dec
fs
dec
add
ja
xchg
insb
aam
mov
sub
sub
cmp
decb
hlt
test
jle
mov
or
cmp
add
add
mov
cmp
mov
push
data16
mov
xchg
push
cltd
imul
xchg
xlat
xchg
mov
xor
jno
addl
pushf
std
inc
pop
cwtl
push
jns
xchg
xor
jge
and
scas
push
fwait
pop
push
or
pop
jge
popa
dec
cmp
add
add
add
inc
cmpsb
arpl
stos
mov
lea
das
mov
inc
xchg
inc
jae
stos
cmp
sbb
jns
jle
mov
flds
mov
jl
mov
lret
mov
jb
xchg
jae
int
loop
add
cli
mov
inc
xlat
into
dec
aam
out
fs
mov
jo
lea
add
add
add
cmc
adc
mov
sub
cmp
sti
insl
cmpsb
mov
nop
outsl
mov
xor
or
jl
xchg
das
mov
hlt
mov
inc
and
fisttpl
adc
int3
stos
pop
loop
pusha
lock
popl
xchg
scas
adc
xchg
movsb
loope
lcall
xchg
add
ljmp
add
testb
shl
es
mov
aad
xor
mov
fdivrl
mov
test
xor
mov
repnz
jo
cmp
lock
mov
mov
outsl
icebp
lock
hlt
ret
push
mov
mov
lahf
icebp
lock
mov
inc
repz
out
hlt
ret
jae
les
or
lock
push
inc
cmp
sub
bound
lock
inc
mov
clc
sub
mov
push
push
repz
push
inc
fidivl
mov
cwtl
sub
add
lock
push
inc
mov
pop
sub
fwait
lock
add
add
mov
add
mov
js
mov
push
inc
inc
lock
cltd
inc
pop
add
dec
sbb
hlt
rorb
pop
inc
cmp
cltd
leave
pop
data16
xchg
sub
or
inc
sbb
cltd
leave
pop
pusha
push
outsl
push
sub
fisubs
inc
stc
dec
cs
dec
data16
aaa
sbb
fisubs
inc
add
add
add
cltd
dec
data16
fstp
cmpsb
adc
jp
inc
cltd
dec
dec
cltd
dec
data16
fnsave
sub
es
or
inc
jns
xchg
je
mov
lods
fisubs
adc
ja
dec
out
jno
out
adc
sahf
mov
sub
lret
cmpsl
leave
out
inc
repz
adc
sahf
mov
sub
lret
add
add
add
dec
arpl
xor
repnz
ret
mov
stos
stc
lret
dec
arpl
sub
pusha
mov
stos
sbb
mov
dec
arpl
xor
repnz
xchg
inc
lahf
mov
stos
stc
lret
dec
arpl
sarl
fwait
aas
ficompl
dec
rcll
inc
bound
xchg
jge
repz
cmp
cmp
mulb
jo
imul
add
add
test
sarl
inc
xchg
cmp
dec
jo
imul
cmp
cmp
mov
cmpl
inc
and
mov
negl
jo
imul
inc
adc
cmpsl
mul
mov
lock
shl
lock
inc
xchg
cmp
divb
jno
imul
add
add
or
sbb
jp
sub
lret
movsb
push
or
ret
xlat
sarb
xor
lret
stos
decb
cmp
or
hlt
dec
dec
std
dec
mov
jmp
leave
push
jg
xchg
rcr
inc
push
lret
sti
das
ret
dec
push
lret
ljmp
sub
sbb
add
add
mov
scas
jmp
lock
dec
pop
or
leave
arpl
or
dec
leave
arpl
mov
test
xor
push
arpl
nop
repz
sub
dec
inc
repz
je
push
pop
addr16
jbe
call
jl
lret
pop
sub
fmuls
les
cvtps2pi
add
stos
or
add
add
add
sub
sbbl
sub
cmpb
mov
xorb
mov
xchg
push
push
das
cmp
push
lcall
fidivs
fiaddl
mov
xor
daa
push
movsl
jle
fwait
fs
aaa
mov
imul
test
adc
xchg
dec
popf
leave
test
dec
fcoml
lcall
add
xchg
fisubl
data16
sub
andl
mov
jno
cld
loope
insl
sti
call
lahf
xor
xor
sbb
imul
test
outsl
mov
into
incl
adc
notl
fisttpll
jne
fisttpll
in
leave
icebp
mov
xchg
stos
mov
pop
xor
add
add
add
xchg
neg
push
add
outsl
fdivp
dec
outsl
out
std
xchg
ret
shll
xchg
and
xchg
fdivp
dec
js
test
test
mov
out
outsb
add
ja
shl
jo
xchg
popa
shlb
mov
adc
call
or
inc
or
inc
jl
lods
loope
pop
add
add
add
mov
orb
jb
stos
cltd
repz
aaa
or
mov
pop
cmp
pop
xor
inc
sub
enter
adc
mov
mov
or
cld
sbb
cmc
push
into
pop
decb
incl
dec
pushl
inc
cli
xchg
add
out
push
dec
cmp
add
add
add
mov
jl
inc
gs
cmp
pop
mov
sbb
je
loope
jns
push
js
xor
fstps
push
fimull
cmpsb
fdivp
enter
std
leave
insb
ljmp
mov
incl
jb
add
jb
push
das
test
mov
orl
arpl
test
inc
add
add
add
or
push
outsb
repnz
sti
popl
lods
clts
ss
imul
sti
cs
push
out
fcoms
pop
mov
or
xchg
pop
jecxz
jb
cmp
adc
cmp
xchg
es
cld
jmp
or
rclb
clc
ds
cmp
outsb
push
adc
cld
bound
dec
jb
add
add
add
push
jp
lods
jnp
jmp
gs
xchg
jg
sbb
jge
push
or
dec
lock
xor
or
sbb
leave
add
mov
cmp
jne
lret
bound
mov
jb
and
add
roll
inc
cmp
pop
mov
push
xor
add
add
add
push
add
xor
je
cmpb
pop
mov
flds
mov
loop
and
cli
xorb
pushl
add
adc
rcrl
loopne
pop
mov
mov
arpl
add
or
push
ss
xor
pop
dec
push
fistl
cwtl
shlb
pop
ja
in
pop
clc
add
add
add
subl
inc
or
xchg
addr16
fsubp
add
pop
decl
pop
lock
sbb
jnp
or
addr16
pop
mov
test
ljmp
mov
add
decl
jge
decl
aas
or
cmp
or
and
std
xor
lret
xchg
add
add
add
psrlq
mov
add
mov
cmpsl
add
mov
jle
mov
and
push
push
add
xchg
jb
fdivl
out
loope
sub
outsb
inc
xchg
or
sub
nop
cli
cmp
or
jb
decl
lock
ds
cs
xchg
or
add
add
add
ss
cld
jnp
add
jbe
inc
orl
repnz
pushw
je
push
clc
inc
inc
loop
sti
inc
dec
repnz
inc
push
je
dec
repnz
or
int
mov
sti
jmp
mov
push
int
daa
and
ss
lds
rcrb
icebp
xchg
scas
push
enter
add
sub
add
imul
std
scas
add
inc
int
xor
adc
xchg
roll
outsb
xchg
adc
add
mov
pop
int3
inc
outsl
pop
imul
xor
jns
inc
call
sub
mov
ja
mov
out
push
adc
xor
sbb
or
xor
sub
pop
sub
ss
xor
add
add
add
cmp
pop
adc
pusha
mov
add
sti
idiv
aaa
sub
mov
pop
call
fidivl
jecxz
gs
push
into
aas
and
test
add
lds
dec
icebp
stos
push
cld
incb
add
jge
shlb
filds
sarl
pop
jbe
and
inc
mov
add
add
sbb
pop
into
arpl
inc
dec
mov
and
leave
add
jbe
xchg
in
xor
mov
xlat
sub
mov
sub
stc
push
sbb
mov
sub
jmp
cmp
mov
sahf
jge
push
std
cmp
insb
mov
dec
leave
stos
mov
mov
add
add
mov
int
loope
inc
adc
inc
ret
dec
push
cmp
pop
test
cmpsb
jne
fsubrl
cmpsb
repnz
aas
ret
inc
pop
pop
test
mov
mov
imulb
jne
pushf
fwait
lods
cld
mov
xchg
adc
push
pop
xor
icebp
mov
sub
pop
mov
push
xchg
add
add
add
add
and
push
enter
fcmovnb
dec
out
xlat
or
xchg
mov
jle
loop
mov
ret
movsl
add
xor
sub
and
adc
pop
push
std
mov
or
nop
inc
movsl
loopne
enter
fcmovnbe
mov
mov
jbe
lods
mov
mov
push
pop
clc
inc
cmpsl
ret
shll
add
add
out
pop
xchg
int
sbb
dec
not
add
mov
loopne
aas
fsubl
jecxz
in
xlat
cmp
out
mov
imul
in
mov
and
sub
jp
or
rcrl
push
fsubrl
jno
pop
call
ljmp
jns
cld
testl
add
sbb
sbb
leave
je
fistpl
mov
sbbl
out
fsubs
lahf
xchg
inc
inc
or
and
lock
imul
jae
inc
push
mov
push
sbb
and
jae
pop
int3
mov
fildll
repz
mov
leave
and
mov
add
add
add
jae
xlat
ret
popf
mov
ficoms
aas
loop
push
dec
push
and
xchg
lods
pop
sub
mov
f2xm1
jp
repz
sub
dec
mov
pop
imul
jmp
in
dec
imul
popa
xor
xor
and
and
push
shrl
adc
add
add
add
loopne
test
sub
movsb
loopne
enter
adc
ret
pop
jo
out
add
enter
mov
and
cld
ljmp
mov
pop
dec
pop
lret
repnz
jge
push
andb
aas
ss
xor
fldt
push
add
dec
imul
xor
shrl
shlb
add
add
add
pop
push
in
jno
or
cltd
cmp
inc
push
or
rolb
inc
subl
mov
adc
call
imul
jmp
pushf
fiaddl
sar
shrb
sarl
jmp
mov
sub
sub
aas
repnz
inc
fcoml
mov
mov
sub
cmp
int3
das
pushf
popa
add
add
add
add
popa
cmp
cmp
and
xchg
sub
pop
cmp
cmp
xor
xchg
fnstenv
les
jo
cmpsb
clc
and
clc
lock
out
lock
mov
loopne
sub
loopne
leave
clc
lock
clc
lock
add
loopne
mov
clc
mov
hlt
clc
mov
xchg
clc
add
add
add
mov
push
fdivr
adc
push
movaps
js
mov
pop
enter
sub
xor
pop
lock
and
loopne
pop
cmp
imul
sub
sub
gs
aam
sub
popa
fnstenv
sub
ja
call
add
add
add
and
sub
mov
gs
or
sub
in
lret
fldt
xchg
call
pop
les
lds
pop
adc
fcomps
fildll
mov
mov
sub
mov
adc
lods
xchg
mov
lcall
xchg
cmp
or
mov
push
std
pop
lea
add
add
add
std
push
lea
jns
push
std
jno
mov
std
jno
cmp
pop
cld
push
repnz
pop
lea
cld
jns
add
cs
lods
or
insb
pop
xchg
xor
lock
dec
aaa
or
pop
add
ret
sbb
push
jae
out
inc
scas
pusha
and
sbb
inc
cmp
or
inc
sbb
xchg
add
add
add
pop
fmull
cltd
jo
adcl
and
xchg
or
cld
pop
sbb
xchg
sbb
cmp
daa
insb
mov
das
or
call
mov
mov
rcrb
jb
pop
ljmp
mov
scas
std
nop
rolb
pop
jle
add
add
add
push
xchg
cmpsl
and
pop
or
xchg
sti
and
fildl
sub
and
xchg
jae
sub
mov
das
pop
rcrb
mov
mov
jb
push
mov
icebp
pop
mov
bnd
xor
insl
xor
dec
xor
lea
add
add
add
cs
mov
insl
roll
fcmovnb
xchg
test
push
cs
mov
popl
or
mov
jns
mov
xor
fisubrs
xchg
pop
mov
jg
cwtl
lea
mov
cld
sub
mov
xchg
dec
imul
fldt
xchg
sbb
mov
add
add
loopne
mov
dec
ficomps
mov
cmp
mov
jp
xchg
and
stos
xchg
das
dec
sbb
push
mov
jle
xchg
xchg
aam
jmp
pop
fnsave
or
ret
xchg
outsl
mov
mov
ds
imul
inc
fnstsw
movsl
es
mov
mov
add
add
xchg
or
cmp
es
mov
dec
popa
cmp
cmp
add
fadds
mov
add
xchg
jmp
mov
or
pop
nop
sub
in
and
ja
adc
ja
sub
in
push
sub
jns
push
notb
pop
dec
dec
jbe
in
cmpl
add
add
add
ja
sub
insb
jp
icebp
xor
mov
ja
cld
jmp
cmp
cs
jae
sub
mov
mov
pushf
hlt
jl
mov
and
out
sub
ret
orb
sub
add
dec
popl
add
add
add
mov
scas
adc
add
cwtl
dec
pusha
pop
add
sub
mov
pop
in
fsubrs
xor
ljmp
pop
mov
sub
mov
fildll
mov
ljmp
mov
ja
bound
add
test
xchg
mov
pop
ret
add
add
add
jns
lea
xchg
push
sahf
jp
push
xchg
test
add
aad
fwait
out
lds
sub
mov
test
add
jnp
fstpt
inc
xlat
xchg
fcomip
xchg
jo
mov
lds
lcall
mov
xchg
sbb
add
add
mov
mov
dec
fwait
cs
mov
adc
push
pop
inc
mov
in
pop
inc
dec
pop
dec
aam
test
xor
ds
xlat
xchg
sub
jb
mov
xchg
sti
and
xor
or
jge
xor
push
imul
ret
jnp
pop
jno
lock
inc
push
rep
add
push
mov
add
add
add
dec
jo
pop
mov
sbb
mov
inc
aas
scas
xchg
fnstcw
imul
iret
sbb
clc
sub
bound
dec
mov
jnp
push
rcrb
out
jp
and
pop
fisttpl
fistps
stc
cltd
cmp
sbb
cmp
and
cmp
add
add
add
push
cs
xor
push
jmp
sahf
xor
dec
clc
cmp
mov
jns
add
std
cs
lds
push
out
std
adcb
mov
mov
std
outsw
outsl
ret
mov
incb
jge
mov
dec
add
cmpsb
enter
add
add
add
lods
xchg
je
xchg
inc
std
rclb
inc
adc
sbb
jl
sub
or
adc
add
push
leave
sub
pop
movsl
xchg
lock
mov
and
repz
xchg
pushf
push
inc
xchg
icebp
or
jno
leave
pop
mov
movsl
outsb
repnz
repnz
ljmp
add
add
add
xchg
repz
lock
pop
jns
sub
lock
add
jns
dec
or
xlat
jle
lock
lock
lock
lock
pop
jl
aam
jl
sarl
pushf
lock
mov
lock
cmp
lret
jmp
sahf
cmp
fcoml
mov
testl
dec
add
divl
add
testl
mov
enter
mov
add
mull
jbe
out
jbe
mov
add
movl
push
mull
push
imull
imull
negl
notl
add
imull
push
notl
add
add
add
inc
div
mov
div
ja
add
push
div
cli
aas
jmp
repz
adc
fidivl
pop
repz
pop
repz
pop
adc
mov
jmp
mov
negl
repz
repz
repz
push
repz
js
pop
mov
repz
mov
inc
mov
add
add
add
lahf
inc
mov
xchg
dec
mov
lahf
inc
mov
xchg
div
cmp
repnz
repnz
repz
repz
repz
lods
notl
cmpsb
notl
cmpsl
testl
test
notl
enter
leave
mull
ret
cmp
hlt
test
inc
out
notl
inc
lock
add
ljmp
inc
mov
xor
mov
push
inc
mov
push
inc
mov
mov
aas
sahf
xor
aas
sub
sarl
sub
inc
inc
in
and
adc
ja
cltd
cmc
cmpsb
sahf
cltd
cmc
mov
pop
cmp
lahf
sbb
hlt
lods
stc
cmp
lods
stc
pop
hlt
stos
stc
pop
hlt
stos
stc
pop
hlt
stos
fstps
test
clc
repz
add
fprem
repz
fprem
repz
cmp
repz
sbb
aad
sbb
sarb
sbb
rcrl
sbb
rcrb
mov
hlt
into
sbb
hlt
fdivr
fdiv
fdiv
in
fdiv
ss
fdiv
mov
fnstcw
ret
fnstcw
sarb
hlt
sarl
push
hlt
mov
push
hlt
scas
adcb
push
adcb
dec
xor
inc
xor
add
add
add
inc
xor
push
xor
push
adc
leave
std
aad
inc
adc
push
adc
push
xorb
inc
xorb
hlt
adcl
cli
adcl
mov
xorl
xorl
ret
jbe
jl
push
repz
push
rep
cmp
repz
repz
ss
push
ret
add
add
add
add
or
jmp
or
jmp
or
or
or
jmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
or
jmp
or
jmp
add
add
add
or
jmp
or
or
jmp
mov
scas
jle
jo
jp
jo
mov
punpcklbw
dec
push
jo
punpcklbw
inc
push
xor
push
push
and
sbb
xor
adc
and
pop
mov
push
add
add
add
loopne
adc
loopne
adcb
mov
pop
lock
sbb
mov
sbb
mov
sbb
mov
sbb
mov
or
or
jmp
sbb
out
sbb
jecxz
sbb
fisttps
fildl
call
cld
sbb
movhps
or
sbb
roll
inc
cld
sbb
mov
or
pushl
add
add
add
cld
sbb
jns
sbb
stos
or
out
cld
sbb
xor
sbb
lahf
adc
lcall
sbb
push
sbb
adc
decl
add
incl
adc
jnp
sbb
cmpsl
sbb
jmp
add
shr
xor
shr
fnstsw
jmp
add
add
add
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
pop
or
or
or
or
or
or
or
add
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
or
or
jmp
add
add
add
or
adc
push
mov
push
mov
rorb
mov
mov
push
mov
pusha
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
add
add
add
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
sbb
sti
add
testl
sbb
out
adc
jmp
sbb
out
sbb
jecxz
sbb
fists
sbb
fildl
sbb
xlat
add
rcll
sbb
iret
adc
lret
add
movl
sbb
mov
add
mov
sbb
mov
add
add
add
sbb
enter
les
sbb
cmpsl
add
mov
adc
mov
sbb
adc
sbb
fwait
sbb
adc
mov
sbb
xchg
mov
add
jmp
add
jmp
add
mov
jmp
add
mov
jmp
add
jmp
add
add
add
mov
jmp
add
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
pop
jmp
or
pop
jmp
or
push
jmp
or
push
jmp
add
or
push
jmp
or
push
jmp
or
push
jmp
or
push
jmp
dec
sbbb
inc
xor
dec
mov
ds
add
ss
sbbb
inc
add
es
sbbl
push
dec
xchg
push
inc
clc
dec
xchg
mov
dec
je
scas
inc
cmc
sbb
scas
hlt
inc
sbb
hlt
dec
sbb
add
add
add
sbb
hlt
inc
sbb
hlt
dec
sbb
hlt
inc
sbb
hlt
dec
sbb
lret
sbb
dec
sbb
hlt
mov
sbb
hlt
mov
sbb
cmc
rcrb
cmc
inc
sbb
hlt
mov
cltd
pop
cmc
rcrb
cmc
inc
sbb
cmc
mov
sbb
cmc
mov
sbb
hlt
mov
add
add
cmp
sbb
lds
pop
push
lds
dec
vmovupd
pop
adc
icebp
les
imul
pop
rcrl
fcmovb
push
lds
dec
inc
lds
cmp
fsubl
jmp
lds
fld
into
adc
rol
jno
jno
push
add
add
add
popa
jmp
lds
fld
rolb
lds
leave
rol
xor
ret
sub
sub
les
lcall
sub
les
mov
les
stos
shrl
mov
les
xchg
les
mov
aad
inc
les
in
cmp
add
add
add
push
sub
into
sub
sub
les
sub
les
adc
enter
dec
sub
leave
sub
les
xor
lret
les
and
lret
sub
les
mov
push
dec
xor
dec
mov
mov
dec
mov
cmp
lret
xchg
lret
mov
cmp
clc
mov
add
add
add
lret
scas
lret
cmpsb
lret
sahf
lret
xchg
lret
mov
pop
fadds
sub
ds
ss
cs
fsubs
dec
cmpsb
fcomps
dec
daa
fcoms
dec
cmpsl
fmuls
dec
xor
cmp
dec
sbb
ss
cltd
fsubrs
dec
and
add
repz
pop
hlt
xchg
cmp
hlt
adc
pop
hlt
xchg
cmp
adc
push
cmc
in
fcoms
insl
fadds
add
add
add
hlt
je
xchg
hlt
repz
hlt
xchg
sbb
hlt
fcoms
hlt
popa
fdivs
call
fcoms
hlt
fcoms
fadds
data16
hlt
in
xlat
hlt
fdivs
cmc
sbb
cmc
nopl
cmc
mov
pop
cmc
push
sbb
cmc
lea
hlt
or
sbb
loope
adc
add
add
add
and
mov
xchg
sarl
add
rolb
push
rorl
push
rorl
inc
rorl
xor
rorb
rorl
push
rorl
sarl
sar
xor
sar
in
xor
aad
andb
roll
add
add
add
adc
roll
int3
cmp
test
xor
or
sub
test
and
or
int3
adc
dec
or
ja
ret
lret
mov
shlb
stos
shlb
lcall
sub
shl
mov
shlb
rcrb
lcall
add
xchg
rclb
mov
pop
sub
sarb
rcrb
sub
cltd
sub
rcrb
sbb
lcall
push
dec
inc
clc
inc
dec
sar
dec
aas
clc
ss
mov
clc
es
mov
clc
push
dec
lods
clc
push
dec
sub
push
lods
clc
mov
mov
clc
cmpsb
mov
clc
sahf
scas
cmp
xchg
add
add
add
cmpsb
mov
clc
xchg
mov
clc
mov
mov
scas
jle
clc
cmpsb
jbe
clc
sahf
outsb
movsb
clc
xchg
data16
mov
clc
inc
push
and
clc
ss
mov
cs
fs
pcmpgtb
out
xor
stos
mov
xor
stos
fidivs
stos
scas
xor
stos
fidivs
stos
mov
xor
stos
scas
xor
stos
add
add
add
mov
xor
mov
stos
pop
ss
stos
jle
mov
outsb
ss
scas
ds
pop
ss
pop
ss
scas
cs
scas
ds
scas
cs
ds
push
ss
scas
push
lds
scas
orl
lahf
xchg
lea
mov
in
add
add
add
xchg
lea
lea
orl
pop
xchg
lea
orl
pop
xchg
mov
mov
mov
stos
mov
lcall
cmpsl
stos
mov
lahf
xchg
mov
lcall
stos
mov
pop
xchg
mov
outsl
orb
add
add
add
cmp
mov
arpl
stos
push
jae
lcall
mov
pop
mov
jae
cmp
mov
push
arpl
jmp
jae
sbb
mov
push
pop
mov
push
imul
push
pop
lea
push
imul
push
pop
in
push
jae
mov
imul
add
hlt
push
pop
in
push
jae
adc
imul
cmpsl
sahf
pop
test
sahf
outsl
xchg
negl
pop
test
ja
inc
sahf
outsl
xchg
mov
mov
test
sahf
ja
push
sahf
outsl
xchg
rcll
pop
test
xchg
outsl
xchg
xchg
xchg
mov
test
ja
mov
popf
add
add
add
xchg
addr16
pop
adcl
addl
xchg
adc
pop
xor
ja
loope
outsl
xchg
je
addr16
in
pop
adc
add
sub
jg
es
pop
mov
imulb
lcall
mov
imulb
mov
mov
fisubs
mov
mov
add
add
add
sub
mov
mov
jle
cmpsb
sub
mov
xchg
sub
jbe
mov
mov
jbe
mov
data16
cmpsb
ss
cmpsb
push
sub
cmpsb
sub
or
mov
outsl
xchg
mov
jg
cmpsl
mov
xchg
mov
add
add
add
cmpsl
mov
cmpsl
xchg
mov
scas
jg
in
cmpsl
mov
outsl
xchg
mov
jg
and
cmpsl
mov
xchg
mov
mov
xchg
xchg
cmpsl
xchg
xchg
cmpsb
xchg
xchg
xchg
scas
jle
jecxz
mov
mov
push
imul
push
pop
mov
push
jae
add
add
add
cli
push
imul
push
pop
mov
push
jae
ficoml
scas
cmp
pop
mov
jae
or
mov
push
arpl
imul
pop
push
imul
push
pop
mov
push
jae
sti
push
imul
push
pop
mov
push
imul
push
pop
mov
push
imul
add
add
daa
xchg
pop
adcb
ja
pop
xchg
outsl
nop
ja
addr16
pop
adc
ja
xchg
outsl
nop
aaa
xchg
andb
xchg
xchg
ja
xchg
andb
adcb
nop
inc
xchg
outsl
nop
mov
andb
push
xchg
ja
push
xchg
outsl
nop
jbe
addr16
pop
adc
ja
xchg
outsl
nop
ss
add
add
add
andb
ja
xchg
addr16
addr16
pop
xchg
add
xchg
lcall
out
lcall
iret
lcall
das
lcall
setp
xor
outsl
lcall
dec
lcall
scas
lcall
lcall
dec
mov
add
add
add
add
and
inc
mov
add
adc
dec
mov
add
and
inc
mov
add
add
adc
outsb
mov
add
jecxz
jo
or
int
mov
pop
into
outsl
fwait
pop
into
cmp
pop
into
cmp
mov
cmp
cmp
cmp
ss
cwtl
into
aaa
fwait
cwtl
into
and
cwtl
into
and
add
add
add
jnp
into
and
into
and
into
and
into
push
pop
fmul
pop
pop
fmul
sub
fmul
sub
cmp
into
sub
mov
into
sbb
shll
sbb
rcll
rcll
sbb
push
sti
mov
rcrl
rcrl
rcrl
rcll
mov
dec
and
mov
sub
mov
arpl
add
add
bound
xchg
rcll
xchg
sarl
and
jbe
dec
and
jbe
lret
and
ror
and
ror
and
ror
and
shll
and
ss
and
sarl
push
rcl
and
rol
and
rol
and
ror
and
rol
and
rcrb
mov
out
fcmovu
movsl
out
fiaddl
add
add
add
mov
out
fidivrl
mov
mov
mov
fsubrl
lcall
das
lcall
das
jp
loope
jp
into
das
jp
iret
das
jp
aam
pop
pop
aad
pop
pop
xor
pop
cmp
cmp
fs
cmp
movsl
scas
cmp
insb
scas
cmp
scas
sbb
scas
sbb
scas
sbb
add
add
add
out
sbb
xchg
out
add
jmp
ss
ja
add
js
jecxz
jb
roll
jae
roll
fs
add
mov
add
repz
add
addl
repz
add
xchg
add
add
and
repz
repz
push
repz
popa
repz
inc
std
notb
or
add
imul
dec
and
jp
sbb
jmp
ret
xor
add
jmp
test
jb
int
out
sbb
test
fcos
rcll
cli
insb
sar
scas
cld
std
fistpll
jge
and
bts
sbbl
pop
loop
pop
pop
shr
test
stc
pop
ret
sub
out
mov
cmp
and
add
add
add
std
scas
ja
bnd
mov
mov
aam
stc
popa
mov
cmp
scas
pop
adc
jns
mov
pop
cld
mov
adc
mov
idivb
test
adc
outsl
scas
jmp
jle
xor
ficoms
xor
jne
mov
js
jp
jge
lahf
xor
jb
ret
add
add
add
out
outsl
pop
ljmp
ffreep
test
xor
push
out
jp
iret
pushf
les
xor
hlt
or
mul
test
fsubp
push
xor
push
push
ret
jp
xlat
mov
pop
daa
push
data16
jb
add
mov
sbb
and
scas
fisubs
test
sbb
cmpsb
pushf
fiadds
outsb
inc
adc
out
cli
add
add
add
and
jle
in
movsl
pushf
jp
imulb
lret
cmc
xchg
pop
sbb
movsl
pushf
pop
les
scas
fimull
outsl
mov
mov
lods
das
mov
pop
jle
movsb
movsl
pushf
test
inc
mov
std
imul
repnz
icebp
jns
subb
pop
xor
dec
mov
jge
xchg
push
jmp
adc
std
addb
add
add
sub
or
das
add
lret
pushf
imul
jb
imulb
sbbb
es
pusha
decb
add
lcall
sbb
cmp
fmul
pushf
sbb
stos
repz
subb
push
xor
dec
ficoml
sub
ret
fcoml
add
subb
mov
add
mov
xor
jae
pop
xchg
wbinvd
leave
push
mov
push
loope
mov
push
add
leave
ds
decl
cli
push
lods
mov
sti
mov
xlat
test
or
mov
or
inc
sub
mov
jne
mov
adc
inc
ljmp
add
add
out
je
mov
or
jge
ljmp
lret
pop
adc
jge
or
popa
mov
int
adc
fistl
jmp
add
sahf
jmp
mov
cmp
xchg
mov
or
and
outsb
das
pushf
add
popf
jmp
fstl
into
push
or
or
test
add
mov
addl
add
push
or
sub
or
gs
divb
out
cmp
stos
jns
lods
call
and
testb
dec
lods
call
and
loope
hlt
or
push
jmp
adc
faddl
xchg
inc
or
jg
sub
sti
mov
call
sub
add
add
add
add
or
mov
jb
in
mov
in
xchg
jge
sub
add
ljmp
add
arpl
sti
leave
sbb
jmp
int
sti
scas
leave
xchg
jge
dec
mov
xchg
lds
ja
lds
add
repz
je
jecxz
in
testb
xchg
std
incl
add
add
add
repnz
imul
xor
idiv
mov
push
add
addb
inc
and
xor
and
out
idiv
xor
sbb
arpl
pop
inc
test
imul
stos
sti
idiv
arpl
add
jb
and
jb
push
arpl
jge
mov
out
mov
sti
add
add
add
xchg
pop
jnp
repz
mov
and
dec
xor
cld
jbe
fcompl
in
pushl
inc
push
or
jg
mov
icebp
add
mov
int3
cld
addl
mov
ret
sti
push
popf
dec
adc
mov
call
lret
push
or
and
mov
enter
add
add
into
pushf
dec
adc
sar
out
inc
sti
lret
imull
lods
call
daa
xchg
hlt
and
jb
lret
fildl
repz
mov
add
shll
divb
lret
cmp
icebp
ss
xchg
jmp
stc
or
pop
movsl
or
add
add
cmpsl
or
je
or
out
lea
jmp
cli
or
jmp
leave
jle
add
adc
nop
push
ljmp
call
stos
test
jg
jl
je
push
gs
outsb
inc
dec
jg
pop
mov
in
test
call
sub
add
add
iret
mov
cmc
inc
or
sub
jg
sbb
je
xor
cli
push
inc
dec
jg
clc
mov
filds
stos
jg
adc
mov
sti
stos
mov
cli
add
cli
mov
inc
add
inc
and
cli
imul
ret
jmp
jne
add
mov
in
cli
test
int3
adc
add
add
add
and
mov
call
mov
ss
pusha
jl
out
hlt
idiv
repz
and
mov
ss
xor
int3
hlt
idiv
jecxz
jge
hlt
jge
out
cmc
idiv
and
jge
in
out
cli
idiv
mov
jge
or
leave
sti
pop
ja
and
inc
pop
mov
pop
incb
add
add
add
repnz
cmpsb
push
jg
negl
push
add
pop
jg
pop
sbb
jno
leave
sti
jbe
jg
pop
sbb
jno
leave
sti
pop
cltd
dec
push
or
xor
sarb
dec
cltd
dec
adc
inc
std
out
inc
cmpb
and
faddl
in
aaa
mov
jne
xor
cmp
test
outsb
fldl
add
add
mov
push
pushf
loopne
xchg
stos
xchg
xchg
pushf
lock
movsl
or
jp
aad
adc
decb
or
icebp
xchg
lds
fldz
imul
dec
rcll
adc
sbb
xchg
or
imul
xchg
stos
ret
int3
sub
fcmovbe
in
idivb
lcall
imul
add
add
add
imul
fiaddl
cmpsl
scas
or
xor
add
cli
fisubrl
dec
popf
cwtl
mov
cmc
fisubrl
xor
or
jle
sahf
sbb
hlt
imul
in
dec
mov
pop
mov
sub
mov
xchg
and
sbb
xor
dec
sub
jecxz
imul
ret
sub
add
add
add
loopne
push
mov
ret
sub
mov
push
outsb
push
cli
jbe
fldt
adc
gs
fidivrl
cmc
fisubrl
adc
pop
sbb
xchg
fistpl
addr16
adc
cs
sbb
mov
and
cwtl
fcoml
lods
addr16
mov
mov
addr16
sbb
fsubl
pop
sbb
es
jae
cs
dec
pop
xchg
mov
or
stc
adc
mov
or
pop
fcompl
scas
mov
xor
aas
mov
xor
nop
sbb
pusha
dec
lods
pusha
and
in
faddl
mov
addr16
cmpsb
iret
roll
inc
mov
insl
cmp
add
add
add
test
fidivl
in
push
add
cmp
fstpt
ljmp
gs
sub
or
imul
sbb
mov
mov
scas
mov
jg
loope
pushf
pop
mov
loopne
fidivs
mov
sub
add
add
add
cwtl
loopne
pusha
out
sbb
xor
hlt
cs
dec
pushf
jae
lds
lcall
out
add
sub
xor
mov
ret
testb
call
cmp
insb
loope
inc
shll
xchg
out
mov
mov
cltd
dec
fistpll
xchg
cmp
mov
filds
add
add
add
dec
jp
loope
add
and
mov
xor
stc
xor
repnz
sbb
cmp
fdivl
sub
mov
sbb
push
mov
adc
lods
cmp
out
out
mov
movsl
movsl
test
pusha
ror
xchg
and
in
sbb
mov
fnstenv
adc
push
repz
cwtl
popf
add
add
add
in
mov
fcom
mov
cmp
pop
loope
xchg
pop
inc
pusha
icebp
pop
ljmp
add
pusha
add
ret
add
pop
sub
data16
mov
cmp
cwtl
icebp
sbb
pop
cwtl
leave
shll
push
out
pop
jns
sub
addr16
leave
into
cwtl
icebp
mov
popa
cwtl
lock
aas
rolb
mov
pop
pop
das
xor
sub
add
add
add
mov
dec
or
mov
dec
jns
mov
clc
jp
dec
push
adc
sub
sbb
mov
adc
xlat
dec
xor
nop
or
stc
xor
and
sti
add
sahf
pcmpeqd
lahf
clc
stc
pop
xchg
out
sub
dec
dec
mov
dec
push
dec
xor
push
xchg
dec
pop
dec
jae
mov
dec
add
add
add
add
repnz
aad
dec
add
aad
dec
and
jns
xchg
aad
dec
adc
xor
aad
dec
add
jno
jno
jge
icebp
out
nop
jmp
in
jnp
push
mov
in
rol
mov
xchg
mov
out
xchg
in
mov
nop
mov
inc
stc
in
into
into
adcb
and
add
add
xchg
lods
xchg
or
testl
sbb
sbb
add
psllw
xchg
lods
lea
and
jbe
add
mov
mov
lock
adc
jle
dec
push
dec
jnp
out
bound
xor
lea
and
mov
mov
clc
inc
in
add
add
add
cmp
outsb
xchg
cmp
mov
or
scas
mov
call
or
sub
sti
lcall
xchg
test
push
sub
sub
sub
jns
xchg
xchg
sub
add
jnp
lea
sub
mov
insb
dec
mov
add
add
add
inc
nop
pushf
add
lods
jns
sub
push
in
jno
xchg
nop
shl
mov
mov
jle
dec
in
xor
shll
and
popf
sub
mov
jmp
lret
add
dec
adc
in
loope
xchg
sub
and
mov
movsl
nop
fwait
shlb
xchg
mov
add
add
add
xor
cmp
mov
xor
dec
add
and
into
sub
or
lea
fs
mov
mov
rcll
bound
shrl
mov
fcoml
ljmp
dec
mov
lahf
jnp
xchg
ja
lea
add
xchg
push
lret
scas
mov
or
incb
jns
push
lcall
xlat
stos
cltd
in
sahf
or
xchg
lea
lea
mov
xchg
nop
jnp
nop
and
lds
and
lods
loopne
xchg
pusha
sub
add
jg
xchg
xchg
and
bound
add
add
add
sbb
or
or
cmp
call
lahf
jmp
jle
fwait
and
jnp
arpl
scas
push
jb
fbstp
lahf
call
jns
dec
data16
call
mov
sub
cltd
jno
add
inc
nop
mov
call
add
xchg
int
mov
cmp
xchg
fildl
add
add
add
push
push
jne
xchg
incl
daa
push
sub
sub
sub
pop
addr16
xchg
push
mov
test
cmp
fmuls
sub
je
enter
and
sub
mov
aas
xchg
jne
inc
cmpsb
mov
js
or
les
mov
add
cmp
add
add
add
add
and
nop
cmp
outsb
mov
sub
in
sub
add
sub
shll
nop
sti
push
xchg
jmp
sbb
and
lea
mov
mov
test
shll
push
push
shl
icebp
mov
sub
push
and
imul
mov
add
cmp
xchg
ret
cmp
mov
xchg
mov
inc
ljmp
or
mull
sub
push
in
add
pop
mov
sti
mov
xchg
cltd
adc
nop
pop
jne
mov
or
cmc
xchg
and
loopne
incb
cwtl
jnp
ret
xor
in
mov
add
pop
cmc
add
add
add
dec
mov
mov
add
jnp
paddq
scas
cmpb
pop
pushf
push
jg
jb
mov
std
mov
add
mov
add
mov
cmc
lods
cld
rclb
test
pushf
cld
call
add
mov
inc
xchg
adc
or
call
add
mov
dec
pop
cld
call
repnz
cld
call
add
add
mov
add
mov
dec
aaa
cld
in
adc
mov
icebp
and
call
add
mov
dec
paddb
or
call
add
mov
dec
out
mov
or
call
or
cli
icebp
add
add
mov
mov
jmp
inc
std
cli
test
mov
mov
add
add
add
or
add
stc
mov
movsl
addr16
cli
jmp
or
cli
jno
mov
gs
cli
jmp
or
cli
stc
stc
mov
std
sbb
cli
jmp
or
cli
or
mov
cli
add
mov
add
mov
add
outsl
cli
jmp
movsb
add
pop
add
incl
add
add
add
mov
add
jo
call
stos
add
je
std
jmp
mov
add
test
add
jo
add
jo
add
pusha
mov
add
add
push
mov
cli
pushl
mov
cli
fidivrl
cli
ljmp
cli
incl
mov
cli
pushl
add
add
add
ss
ficomps
gs
into
lret
cmp
mov
cmp
mov
cmp
scas
add
cmp
sahf
int
xchg
mov
cmp
jle
cmp
jbe
cmp
outsb
aaa
cmp
sbb
pop
pop
inc
push
xlat
inc
decb
inc
incb
inc
ds
decl
push
inc
jns,pn
incb
add
add
add
jecxz
push
in
inc
push
sbb
push
add
push
loope
mov
inc
idiv
call
dec
out
es
and
clc
add
clc
cli
dec
xbegin
idivb
mov
cli
ds
clc
push
aas
cmpsl
clc
es
lahf
clc
and
xchg
clc
dec
aas
clc
cs
xchg
jo
jg
call
in
insb
clc
nop
in
fs
loop
add
add
add
pop
clc
fsubrp
push
clc
int3
in
dec
clc
sub
inc
clc
push
out
cmp
int3
in
xor
fsubrp
sub
js
and
test
sbb
sub
clc
xor
or
call
div
cli
inc
out
cmc
cli
jmp
cmc
cli
add
cmc
cli
div
cli
int
cmc
cli
mov
cmc
cli
lahf
fcomip
cli
xorl
cli
jg
cmc
cli
cltd
lahf
cmc
cli
xchg
mov
cli
mov
add
add
add
cmpsl
cmc
cli
mov
jbe
cli
jg
cmc
cli
shll
cli
fstpl
cli
and
cli
mov
pop
cmc
cli
cmc
pop
cmc
cli
addr16
cli
dec
cs
cli
fwait
es
cli
lahf
push
cmc
cli
cmp
cmc
cli
dec
cs
cli
add
pop
std
jmp
add
jmp
add
incl
add
call
add
jmp
add
decl
add
incl
add
add
add
add
incl
std
push
add
inc
push
std
call
push
std
jmp
std
jmp
std
cmp
std
push
push
std
jl
std
jle
std
incl
std
pushl
ljmp
std
incl
or
mov
or
jmp
std
incl
std
decl
cmp
std
push
dec
out
push
mov
in
add
add
add
push
std
decb
in
std
out
mov
std
out
in
std
fiadds
std
insl
in
std
into
xchg
stc
std
int
std
mov
sbb
std
scas
jne
std
cmpsb
test
std
sahf
pop
stc
std
xchg
int
std
mov
stc
std
xchg
idiv
jle
stc
std
jbe
clc
std
outsb
sbb
std
sub
std
pop
dec
stc
std
push
jae
std
dec
arpl
std
inc
pop
stc
std
add
add
add
ds
stc
std
ss
imulb
ret
cmc
lods
stc
adc
mov
or
test
add
add
cld
hlt
lret
hlt
idiv
in
hlt
in
in
sbb
fdiv
sub
aam
xor
int3
hlt
cmp
hlt
idivb
outsb
stc
lods
hlt
imul
movsb
hlt
call
ds
hlt
movsb
ds
hlt
scas
ds
call
add
add
add
add
xor
add
xor
add
xor
add
xor
add
mov
cmp
jb
inc
hlt
decl
or
cli
xor
hlt
cli
xchg
fdiv
cli
cltd
aam
cli
addr16
hlt
cli
jno
cmc
cli
mov
xor
cmc
cli
shll
cli
fistpl
cmc
cli
repz
cmc
cli
add
hlt
cli
adc
hlt
cli
test
add
repnz
cli
fwait
loop
cli
jae
hlt
cli
pop
shl
cli
inc
int
cli
dec
inc
cmc
cli
jmp
xor
cli
jmp
shl
cli
and
hlt
cli
mov
push
cli
ljmp
jno
mov
outsb
cli
in
outsb
cli
push
outsb
cli
incl
outsb
cli
jmp
ja
dec
ja
call
ja
incl
add
add
add
jnp
call
ja
pushl
jne
jmp
jbe
push
jne
push
jne
jl
cli
decl
ja
incl
cli
call
call
jbe
lcall
cli
ljmp
ja
ljmp
cli
cmp
decl
ds
push
out
decb
incb
inc
faddl
outsb
dec
orb
scas
dec
incb
add
add
add
mov
dec
decb
inc
dec
incb
mov
push
dec
negb
inc
out
inc
inc
out
inc
ficoms
inc
pop
inc
dec
sti
inc
inc
loope
mov
roll
and
cmpsb
aas
inc
sahf
addr16
xchg
push
inc
decb
roll
jle
inc
jbe
aas
outsb
mov
inc
addr16
enter
xchg
inc
add
add
add
push
icebp
cwtl
inc
dec
icebp
mov
inc
aas
icebp
je
xor
sub
icebp
ds
and
pushf
inc
pop
icebp
addb
push
psllw
add
jle
cld
lock
hlt
lock
in
in
lock
in
push
in
aam
test
int3
lock
in
lock
in
mov
lock
lock
ljmp
xchg
lock
add
add
add
mov
js
out
cli
arpl
lock
and
lock
add
iret
lock
dec
lock
cli
inc
xor
cli
pop
and
cli
imul
cli
fnstenv
out
cli
leave
xor
cli
lods
and
cli
pop
and
cli
or
inc
icebp
cli
jmp
xor
cli
frstor
icebp
cli
in
and
cli
jmp
adc
cli
aad
add
add
add
icebp
cli
test
icebp
lock
inc
lock
and
lock
inc
shl
cli
aaa
shl
cli
add
cli
jmp
cli
pushl
stos
cli
lcall
stos
cli
call
stos
cli
decl
stos
cli
lcall
cli
ljmp
stos
cli
pushl
mov
add
cli
jmp
lods
cli
ljmp
add
add
add
mov
add
mov
xor
add
lods
cli
ljmp
mov
xorb
add
add
add
or
decl
adc
decl
test
add
decl
out
decl
fdivr
incl
add
add
add
in
decl
add
decb
insb
cmp
push
adc
neg
decl
mov
sub
dec
push
imul
sbb
ret
or
xor
push
xor
jmp
pop
adc
push
dec
push
out
pop
dec
ss
xor
add
add
add
mov
xor
fstps
add
mov
pop
aad
add
mov
jmp
pop
mov
or
mov
jmp
push
xchg
jno
xor
push
pop
mov
push
mov
add
push
xchg
push
push
mov
or
jbe
and
xchg
and
mov
add
add
add
pop
addr16
pop
call
sti
add
cmp
add
adc
dec
sbb
sbb
mov
sbb
gs
inc
jmp
lea
das
sti
push
gs
fsubrs
movsb
or
fnstsw
push
fs
or
fs
add
add
add
add
push
jmp
sbb
mov
arpl
lahf
scas
stos
add
ret
gs
je
push
mov
jns
sub
insl
dec
inc
int
add
gs
into
outsb
sub
mov
outsl
add
gs
mov
gs
push
ds
je
adc
gs
cmp
imul
add
add
imull
dec
imul
jns
add
mov
gs
xchg
jle
je
nop
movsb
or
adc
push
push
or
add
insb
and
and
outsb
adc
ja
je
subb
pop
jns
push
or
push
jns
lahf
sbb
jb
or
inc
in
rcrb
in
adc
add
add
fisttpll
xchg
adc
ret
mov
mov
imul
stc
cmp
adc
popa
jg
aas
outsb
jo
push
pop
push
sub
imul
les
mov
pop
bound
pop
xor
test
pop
jmp
adc
pop
pop
jge
inc
push
jge
and
pop
sbb
pop
jmp
pop
add
add
add
std
jne
xor
dec
push
xor
fs
and
gs
mov
sub
pop
cmp
and
mov
add
push
cli
xor
add
je
xor
xlat
push
test
jmp
xor
push
pop
shlb
insb
fs
or
gs
push
push
decb
in
pop
outsb
test
pop
imul
add
add
mov
outsb
nop
fimuls
cmp
add
or
dec
loope
imul
test
inc
and
sbb
gs
sbb
daa
sub
gs
addl
add
gs
les
sti
in
jne
loope
push
jmp
lock
dec
out
pop
insb
rcrb
pop
push
insl
les
outsb
mov
gs
imul
gs
insb
je
jbe
popa
jle
jne
xchg
lcall
test
outsb
and
add
xchg
scas
dec
popa
cmp
outsl
xor
jo
lds
je
pusha
mov
add
lcall
adc
insl
gs
mov
add
shlb
lcall
add
add
add
and
jo
or
imul
xor
or
imul
or
ds
out
and
sub
fs
and
cmp
xor
fdivr
les
cmp
imul
inc
add
mov
gs
add
in
xchg
cli
jg
outsb
sti
jl
add
inc
add
add
add
add
je
leave
and
and
and
jg
lds
stos
scas
adc
push
mov
adc
mov
dec
lahf
dec
les
mov
add
insb
bound
adc
xorl
xlat
push
sub
popf
cmp
mov
add
pusha
mov
xor
push
andl
add
sub
push
dec
adc
pop
dec
sbb
mov
add
push
sbb
pusha
push
and
mov
cmp
in
adc
mov
mov
or
dec
adc
push
mov
mov
or
cmc
int
insl
fincstp
pop
fistpl
insl
int3
inc
mov
icebp
or
gs
ss
dec
enter
les
add
add
add
mov
adc
push
pop
popa
test
test
mov
dec
mov
pop
insb
mov
push
out
inc
jmp
xor
je
and
push
pop
es
gs
adc
gs
int3
pop
je
sbb
jne
lock
inc
adc
mov
adc
js
add
xchg
inc
jbe
xchg
je
xor
jo
add
add
add
cmp
popa
outsb
int3
xchg
add
scas
aas
lods
jo
jb
lcall
int
imul
es
lea
imul
insl
outsl
and
add
cs
gs
push
inc
xlat
xchg
je
fmul
add
icebp
stos
dec
gs
push
inc
xchg
je
sbb
add
jns
dec
imul
add
lret
jne
or
sbb
inc
lods
outsb
scas
mov
sub
or
and
pop
out
and
adc
or
dec
push
repz
pop
sub
and
xor
and
lcall
or
sub
and
sub
sub
sub
inc
popa
sbb
outsl
add
or
add
add
aad
sub
jb
gs
lret
dec
or
inc
fnsave
loopne
lret
dec
add
lret
dec
pop
adc
mov
add
mov
daa
popf
ja
daa
ret
sub
jmp
es
push
movb
mov
sbb
int3
cs
push
stos
sub
pop
jmp
add
add
mov
es
orl
dec
pop
jmp
daa
std
outsb
dec
and
int
inc
push
in
cmp
adc
imul
je
or
mov
push
ljmp
or
dec
outsb
add
mov
and
jbe
cmc
ficoml
lret
outsl
mov
push
jo
or
mov
add
daa
addr16
shlb
push
push
shrb
push
add
push
test
mulb
xchg
sti
gs
and
jmp
loop
gs
cmpsl
repz
outsl
jge
ret
jecxz
sub
outsb
jne
sbb
push
sbb
add
xchg
push
jb
xchg
gs
push
insl
pop
leave
jns
outsb
mov
inc
gs
push
add
add
add
or
popa
jo
enter
xchg
add
mov
lds
push
push
jecxz
dec
gs
scas
add
cmp
imul
outsb
data16
insl
popa
and
outsb
mov
xchg
arpl
gs
adc
ds
mov
jne
jbe
imul
mov
imul
add
jbe
push
add
adc
and
leave
push
or
imul
leave
incb
out
daa
jo
jmp
push
or
and
add
jl
cmp
adc
add
mov
or
dec
das
outsb
cs
add
add
sbb
mov
push
lock
adc
push
dec
inc
in
inc
and
xor
sub
popa
dec
add
mov
pop
mov
sbb
lds
pop
data16
mov
jmp
shld
mov
dec
push
pop
pop
mov
add
lret
pop
inc
pop
rorl
dec
dec
mov
add
mov
pusha
dec
int3
das
add
add
add
pusha
push
les
in
mov
sub
pop
mov
and
xchg
inc
pop
jb
jne
dec
insb
pop
es
dec
dec
cs
inc
inc
pop
subl
xor
xor
stc
addl
adc
loop
gs
addr16
adc
push
dec
por
add
imul
add
add
xor
fs
mov
enter
aad
dec
insb
int3
dec
addr16
and
mov
or
add
push
jb
popf
jecxz
gs
icebp
dec
outsl
add
gs
imul
dec
fs
inc
inc
inc
jne
dec
adc
sub
add
rol
dec
outsl
pop
xchg
push
or
mov
add
add
add
add
mov
inc
insl
adc
jns
int3
mov
gs
imul
shll
cmpsl
push
rcll
add
mov
push
jae
xchg
pop
gs
imul
mov
popa
orb
xchg
jnp
sbb
push
daa
and
sub
gs
or
and
pcmpgtw
add
add
add
push
je
ja
add
and
fidivrl
add
mov
and
mov
xor
scas
and
movsb
add
or
adc
xlat
imul
rorl
and
and
imul
sub
bound
and
jmp
gs
int3
or
lods
and
add
add
add
data16
sub
jmp
and
data16
divl
pop
sub
cli
inc
es
pop
fnsave
adc
dec
aaa
xor
gs
pop
mov
pop
pop
pop
or
std
inc
movsl
push
notb
mov
mov
add
dec
lds
insb
ret
sbb
add
jb
lds
dec
push
mov
and
or
gs
add
push
xchg
dec
push
jo
pop
dec
gs
daa
pop
dec
test
dec
popa
dec
push
xchg
jge
jbe
pop
xor
push
and
dec
dec
sub
and
jbe
cmp
ljmp
and
out
dec
imul
add
add
add
dec
imul
mov
ret
or
push
add
dec
imul
enter
pop
popa
lds
dec
pop
aad
lcall
je
push
sarl
popa
test
test
popa
jae
cwtl
cmp
ret
gs
cmp
mov
add
mov
gs
scas
and
daa
mov
add
add
add
scas
jg
daa
mov
mov
lds
push
add
mov
push
lahf
popa
imul
scas
inc
jb
mov
add
jbe
ds
mov
add
imul
incl
push
sbb
popa
cmp
lret
or
and
sbb
sbb
add
add
add
adc
je
sub
push
push
sub
or
inc
sti
push
dec
ljmp
loope,pt
adc
sub
leave
out
or
and
scas
add
or
sbb
shlb
push
lea
je
mov
or
inc
enter
frstor
mov
adc
add
add
add
sub
inc
and
mov
sub
add
mov
sub
push
jl
sub
ja
cs
jmp
or
pop
xchg
sbb
dec
push
sbb
outsl
popa
add
mov
daa
aad
inc
daa
in
sbb
jecxz
dec
sbb
mov
push
iret
dec
inc
sbb
inc
or
jp
and
and
add
add
add
add
add
inc
insb
mov
add
add
or
push
push
or
insb
xchg
adc
xchg
adc
add
jb
xchg
filds
jnp
jne
test
dec
outsb
jl
pop
imul
gs
add
inc
call
push
jmp
and
xor
add
out
addr16
push
insb
je
push
mov
jno
outsl
gs
outsb
dec
add
mov
insb
or
push
adc
add
gs
mov
push
add
xchg
jne
jl
insl
inc
mov
call
je
mov
je
jo
cltd
add
dec
lods
cltd
cmp
mov
push
repnz
pop
push
add
add
add
pusha
mov
add
pop
push
leave
mov
outsl
mov
insl
add
push
scas
aas
gs
jno
outsb
std
lahf
je
or
add
and
aas
insb
test
cmovp
decb
fsts
gs
daa
je
clc
or
push
or
push
pop
jmp
addr16
in
jne
movaps
sysret
add
pop
add
add
add
add
sub
inc
gs
aaa
cmp
sub
xor
push
decl
sub
pop
adc
or
popa
cli
js
js
leave
incb
test
je
outsb
sbb
loopne
dec
lods
arpl
dec
mov
and
xchg
and
mov
push
popf
mov
add
bound
int
push
sbb
mov
add
or
inc
popa
stc
sbb
int3
adc
lret
add
add
add
mov
add
ret
inc
pop
push
aam
pop
inc
lret
mov
add
ret
inc
sbb
push
mov
pop
mov
sub
pop
xchg
sbb
mov
add
push
jge
in
dec
xchg
call
push
push
daa
or
push
aas
in
cmp
mov
mov
imul
gs
ljmp
push
add
add
add
std
mov
or
andl
sbb
pop
and
sbb
bound
sub
jg
mov
notb
stos
es
outsl
mov
or
push
add
mov
xorl
mov
inc
or
outsb
mov
push
inc
test
pop
je
std
mov
xor
push
inc
inc
add
add
add
clc
pop
je
fbld
aas
gs
xchg
ret
cltd
imul
fs
dec
je
stos
imul
movsl
gs
hlt
cltd
dec
imul
stos
popa
je
scas
push
lock
add
xchg
aam
outsl
push
je
je
iret
scas
add
mov
push
xchg
cltd
imul
data16
cmpsl
dec
je
add
add
add
mov
add
cwtl
inc
gs
scas
je
rolb
inc
loopne
adc
mov
mov
popa
scas
jle
add
loope
inc
lods
lods
cmp
mov
cmp
rorb
je
mov
add
mov
sbb
add
xchg
add
stc
or
imul
insb
add
add
add
or
and
adc
imul
pop
inc
or
add
sub
adc
aaa
inc
imul
in
or
push
popa
in
adc
imul
jmp
or
es
inc
inc
push
mov
push
adc
pusha
dec
sbb
push
sbb
mov
adc
and
mov
and
adc
add
add
add
insl
pop
cli
add
mov
and
rcrb
gs
shlb
bound
xor
mov
add
pop
enter
mov
add
mov
sbb
inc
mov
sbb
inc
or
mov
in
gs
sahf
or
jo
push
mulb
push
repz
add
add
outsl
inc
clc
push
imul
add
add
add
adc
push
gs
pop
add
jmp
pop
push
jmp
push
inc
push
push
adc
pop
jae
or
movsb
sbb
cs
sub
jmp
and
les
dec
rorb
imul
jge
test
mov
mov
add
mov
dec
add
add
add
mov
mov
gs
mov
dec
gs
ja
outsl
add
jge
jmp
xchg
je
jecxz
imul
push
pop
test
push
and
je
fsubl
arpl
mov
shll
push
movl
gs
add
add
add
stos
push
or
mov
or
je
ds
sti
and
jns
xor
imul
incb
insl
das
gs
gs
lea
outsb
fidivrl
insb
or
add
test
gs
mov
and
or
dec
jp
and
adc
mov
jbe
cltd
push
gs
add
add
add
sbb
outsl
pop
jmp
jnp
sbb
sub
and
or
xchg
inc
es
and
fs
adc
inc
jge
in
inc
mov
ficomps
and
push
jl
pop
mov
adc
pop
cmp
loop
dec
adc
pop
jmp
and
inc
inc
inc
xchg
inc
adc
cmpsl
pop
adc
add
add
mov
add
adc
pop
mull
cs
add
insb
dec
cmc
or
les
sub
push
es
roll
push
mov
and
jp
lret
inc
inc
je
lcall
xchg
std
mov
sbb
add
es
test
jl
lcall
mov
pop
imul
cmp
push
aas
pop
add
add
add
es
je
add
sub
data16
std
ds
inc
add
sbb
mov
stc
dec
js
or
push
push
cld
pop
pop
jns
sub
or
dec
push
jmp
cld
pop
je
sub
shll
jp
lret
imul
jae
push
pusha
mov
scas
add
je
test
jns
add
add
add
test
je
repnz
mov
je
shll
jne
lods
je
jmp
scas
popl
fcompl
push
jb
mov
gs
add
stos
add
movsl
jns
hlt
jae
add
push
gs
arpl
jecxz
gs
adc
add
add
add
push
adc
pop
sti
pop
insb
or
sbb
pcmpeqb
adc
push
dec
call
fsin
inc
in
and
outsl
cmc
sbb
das
outsb
lock
push
insb
in
js
outsb
or
dec
lods
js
fs
in
mov
fsin
or
int3
pusha
lcall
add
xchg
cmc
je
shrl
inc
add
add
add
inc
mov
xor
incl
aad
pop
ds
fs
push
dec
mov
scas
movsb
add
aas
mov
sbb
les
push
xchg
jmp
dec
test
clc
dec
mov
repz
xchg
add
mov
imul
arpl
rcrl
jl
cmp
mov
push
cmp
int
cmp
repz
add
add
mov
jmp
in
pop
xor
mov
sub
add
adc
repz
daa
in
pop
add
out
push
outsl
add
pusha
outsb
int
pop
fisubl
cli
mov
lahf
push
outsb
rcrb
add
jg
imul
or
insl
inc
push
add
add
cmpsl
gs
gs
push
gs
inc
push
dec
and
outsl
dec
sub
push
add
jb
adc
ljmp
jp
arpl
in
stc
mov
dec
add
scas
dec
dec
pushf
int3
data16
inc
gs
cli
lcall
scas
push
popa
insb
fnstcw
outsl
aad
outsb
int
cli
incl
add
add
add
fnstcw
fs
jb
ret
imul
scas
push
popa
push
outsb
loope
gs
fisubrs
ret
int
push
xor
outsb
push
fcomp
push
shr
cli
pushl
mov
je
out
imul
aas
add
mov
jbe
lods
cmc
outsl
jnp
out
jae
fwait
add
or
hlt
dec
inc
popf
add
add
add
add
inc
xlat
inc
pop
add
fs
or
inc
and
leave
push
out
loope
cmp
repnz
sbb
cmc
xor
bnd
cld
incb
or
lock
hlt
cmp
arpl
xor
fs
arpl
incl
int3
inc
int
das
cs
lock
incb
jge
outsb
movsb
xchg
pusha
movsb
outsb
leave
ja
mov
add
add
add
add
push
stc
insb
adc
insl
push
std
add
mov
out
daa
inc
add
pop
dec
and
addr16
or
das
dec
jmp
out
push
push
shr
aas
shl
pop
mov
add
jbe
int3
dec
insl
mov
sbb
push
addb
mov
mul
pop
jnp
enter
lret
pop
mov
sub
mov
push
push
mov
in
pop
pop
jmp
add
lds
add
xchg
dec
lock
push
add
dec
add
adc
inc
inc
test
sbb
jb
pop
lock
jmp
sti
push
popa
std
icebp
subl
jmp
gs
or
aad
push
pop
fstp
push
push
or
cltd
mov
gs
pop
ret
mov
aad
lods
jno
gs
jno
pop
addl
add
add
popa
popa
je
or
scas
outsb
dec
inc
lea
push
movsb
popa
dec
gs
jbe,pn
jmp
cs
push
inc
es
jo
mov
xlat
inc
js
mov
add
fldcw
adc
hlt
pop
jo
mov
add
lds
in
cmp
pop
je
aad
gs
outsb
insl
rol
cli
ljmp
loop
outsl
add
add
add
ret
lret
mov
mov
add
outsb
inc
imul
xor
popa
xchg
fdivrs
dec
mov
int3
outsb
jo
aas
inc
test
shll
mov
fstps
or
push
es
jmp
xchg
arpl
addb
adc
imul
clc
incl
add
add
add
leave
push
cmp
loope
pop
cmpsb
in
dec
cmp
or
xor
add
inc
inc
add
jae
lret
or
rolb
out
in
arpl
sub
sub
in
jmp
test
out
jae
daa
out
insl
out
inc
loop
fisttpll
and
mov
loope
inc
and
loope
push
push
lock
push
out
add
add
add
dec
inc
xlat
lcall
add
push
pop
lock
inc
or
aas
cmp
lock
dec
push
lock
add
mov
imul
pop
dec
shl
and
push
jmp
sarl
aam
xor
sub
push
mov
xchg
xchg
out
int
pushf
call
icebp
pop
nop
out
inc
test
add
add
add
rcll
pop
dec
outsb
test
xchg
add
sub
and
es
je
dec
push
outsb
cmp
sub
sub
dec
je
add
arpl
enter
testl
std
repz
gs
mov
push
adc
cmpsb
dec
add
or
test
jge
xchg
push
dec
enter
int3
add
add
add
or
jbe
jo
jns
outsb
mov
inc
mov
push
insb
outsb
into
cmp
int3
arpl
idiv
jmp
mov
outsb
insb
outsb
mov
xlat
popa
push
loop
aas
add
mov
je
movb
leave
dec
gs
arpl
repnz
pushl
mov
je
aas
fs
arpl
fsubrl
sub
pop
add
add
add
or
mov
add
outsb
jo
fsubrl
fsubrl
int
outsb
inc
mov
lret
outsb
gs
je
shll
mov
add
adc
jae
clc
fldcw
sbb
jo
ss
jae
inc
mov
inc
mov
hlt
dec
lods
insl
loopne
movsb
pop
jmp
lcall
xchg
or
out
jge
jmp
add
add
add
jnp
shlb
mov
pusha
imul
dec
addr16
fldcw
scas
lock
sub
loopne
xor
flds
lcall
sub
call
pusha
sub
lret
or
jmp
stc
mov
fsubp
push
mov
stc
inc
mov
fisubl
add
mov
gs
rsqrtps
out
lods
cmp
out
add
add
add
mov
out
push
push
out
inc
push
loope
pop
xor
ret
imul
iret
idivb
sbb
shlb
cld
loopne
inc
xor
imul
add
mov
cmp
repz
inc
repnz
jae
mov
sbb
mov
jns
outsb
mov
add
add
add
addr16
push
jmp
fs
gs
push
je
imul
imul
cli
test
push
push
sub
dec
sbb
inc
sbb
dec
cmp
dec
imul
cli
push
aam
dec
pop
enter
loope
add
shrl
mov
dec
insb
jmp
call
dec
inc
add
imul
mov
fldl
add
add
add
dec
imul
cmp
jecxz
gs
repz
inc
movsb
out
dec
dec
inc
test
fs
cli
lea
aas
gs
mull
test
arpl
int
outsb
stc
shlb
out
push
add
fldcw
fldcw
aad
jne
call
aas
gs
insb
add
into
outsb
add
add
add
sub
pusha
outsl
repz
imull
inc
dec
push
xchg
fs
fdivl
jo
or
ljmp
loopne
insb
and
lods
or
fnsave
sbb
jae
es
fisubs
ljmp
cld
loop
rcrb
je
das
mov
dec
lods
sub
dec
cmpsb
push
loop
lret
push
rclb
call
add
add
int3
decl
int3
decl
lret
or
decl
lret
or
decl
lret
or
decl
lret
or
decl
lret
or
decl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pop
andl
jb
add
add
add
andl
test
lock
mov
sub
test
jbe
jl
xchg
stos
push
sub
push
xchg
test
pop
jae
sbb
fildll
mov
xchg
call
sbbb
call
mov
jle
call
mov
xlat
jae
and
call
mov
mov
add
add
add
and
call
mov
mov
mov
push
call
mov
mov
cmp
inc
outsb
mov
int
or
fisttpl
or
mov
call
out
movsl
call
repz
inc
pop
cmp
push
dec
add
push
outsb
add
add
add
mov
sbb
scas
adc
sub
push
jbe
xlat
push
xchg
icebp
sub
jno
add
xor
fistps
jbe
int
add
fcomi
or
repnz
mov
lea
jb
push
ret
sub
es
mov
bound
mov
add
add
add
push
push
cmpsb
mov
rolb
addr16
or
push
push
neg
jle
pop
scas
mov
cmp
sbb
cli
sub
or
add
int
scas
dec
cmpsb
mov
or
xchg
jnp
imul
fidivl
sahf
mov
jnp
nop
add
cmpsl
xchg
in
or
push
push
push
orb
add
pop
dec
popa
xor
dec
or
cmpsl
mov
sahf
pop
mov
inc
xor
movsl
push
sub
mov
andl
and
pop
mov
movsl
mov
dec
add
jg
movsb
xor
push
sbb
mov
add
orl
push
dec
add
add
add
cli
lods
scas
shrb
jns
or
pop
push
mov
loopne
aam
mov
adc
dec
xor
add
pop
pop
xchg
xchg
addl
rcrb
lock
push
jp
cli
push
stos
ja
add
or
add
call
add
clc
xor
fsubrl
or
add
add
add
mov
call
pop
test
and
and
int
xchg
mov
fsubrl
call
adc
into
je
das
outsl
andb
xlat
push
call
mov
jl
dec
and
sub
scas
cld
dec
add
sub
inc
outsb
inc
negb
mov
inc
mov
pop
scas
scas
dec
lret
lea
add
add
add
pop
xchg
scas
jge,pn
cmp
adc
add
rcrb
scas
push
xor
aaa
cs
scas
rcrb
mov
sbb
data16
cwtl
popa
mov
sti
sub
pop
add
shl
in
mov
fcmovnu
gs
sub
lock
xor
ret
fwait
xchg
scas
scas
jnp
cmp
add
add
add
stos
dec
ss
dec
mov
sub
pushf
mov
insl
lods
fwait
xchg
xor
std
xchg
jnp
subl
jge
and
mov
outsb
push
std
or
std
push
dec
mov
lcall
into
mov
and
mov
mov
cmp
and
add
add
add
clc
or
test
push
fwait
mov
or
outsb
jg
pusha
inc
bound
cmc
inc
pop
jge
inc
int
fs
jge
mov
ja
sub
popf
add
dec
gs
pop
mov
or
arpl
or
push
jle
jbe
xchg
xchg
cbtw
inc
insb
push
cmpb
js
or
lock
add
add
xchg
popa
push
mov
jne
sbb
or
out
imull
pop
lds
jecxz
xor
push
mov
in
out
loopne
or
or
xchg
mov
je
outsb
and
xchg
pusha
mov
cli
cmpsl
jae
es
mov
inc
jl
repnz
mov
fwait
ds
out
mulb
dec
fiaddl
add
add
add
fwait
cmp
jnp
dec
das
pop
push
cmc
nop
das
push
inc
aas
ficompl
std
dec
lock
sahf
daa
xor
sti
pop
aaa
mov
cld
sub
shr
sbb
cmc
setle
jb
sbb
ret
sub
int
arpl
cld
sahf
jb
jp
xor
adc
add
ljmp
cmc
jmp
std
lds
lcall
add
add
add
lock
nop
cmp
mov
inc
gs
jae
push
add
repz
sahf
repnz
stc
jb
and
repz
xor
and
ljmp
test
cmp
out
rcrb
mov
adc
add
ds
cmp
xchg
lahf
push
imul
dec
shrb
add
add
add
pusha
xor
sbb
and
sbb
ds
stc
xchg
shld
jo
lcall
push
movsl
clc
lret
movsl
cvtdq2ps
adc
pop
cmp
xlat
movd
daa
inc
lahf
push
imul
sbb
add
xchg
and
mov
fwait
cmp
push
iret
mov
or
add
add
add
mov
movsl
mov
mov
mov
loop
daa
mov
jns
mov
out
cmp
arpl
stos
jbe
jae
xchg
push
cmp
es
and
dec
scas
and
jae
test
push
pop
mov
sti
lods
scas
jne
mov
mov
add
add
push
xchg
outsb
rcll
fldt
push
movsb
out
es
xor
in
add
loop
in
pop
mov
das
je
pop
cmc
in
scas
ja
sub
ss
jb
pop
sub
inc
cli
out
fistpl
cli
out
outsl
mov
mov
push
add
test
sub
js
pop
fdivrs
out
data16
add
add
mov
cld
fisubs
lea
das
cld
addr16
notl
cmpb
out
mov
int
dec
mov
fiaddl
sahf
repz
je
sbb
sahf
int
inc
mov
fcmovu
fidivs
cmp
outsb
nop
daa
dec
lret
mov
push
push
pop
hlt
nop
daa
mov
stos
roll
repnz
add
add
add
gs
rcll
icebp
xchg
and
ficoml
lods
inc
sub
fisttpl
loope
push
sub
lret
pop
jno
jmp
ljmp
push
adc
mov
daa
fsubs
loope
call
cmp
lods
lods
fucomi
dec
das
cli
inc
sbb
add
add
add
add
adc
inc
imul
jge
cli
out
sbb
pop
insl
loop
cmpsl
dec
inc
push
clc
insb
loop
xchg
fxch
ret
and
sub
mov
lock
pushf
iret
add
add
pop
jnp
cmc
cltd
sbb
iret
in
in
add
fmuls
jl
mov
cmp
loope
loop
jecxz
in
push
xor
add
add
add
jne
arpl
daa
insl
or
lret
icebp
repnz
enter
cwtl
pushf
mov
inc
xchg
xchg
cmp
push
shll
std
jo
and
mov
jb
mov
mul
xchg
daa
xlat
stos
jbe
insb
mov
aaa
xor
mov
shll
mov
adc
out
test
les
add
add
add
stc
xchg
jns
adcb
clc
out
iret
pop
jecxz
or
add
adc
imul
xor
xchg
push
fisubl
pop
sbb
fsts
ss
or
mov
jbe
adc
jecxz
gs
lea
adc
mov
add
push
addl
clc
push
bound
out
and
dec
adc
bound
sub
sub
add
mov
jge
mov
jne
sbb
and
cs
add
xor
sbb
lods
inc
cmp
sub
add
out
subb
or
mov
ret
add
lahf
mov
add
add
icebp
scas
out
lea
inc
mov
out
rolb
inc
jne
mov
xor
mov
in
cmpsl
inc
fwait
stc
add
pop
adc
rcrb
xor
mov
or
mov
outsb
xor
test
add
bound
xor
gs
add
add
add
add
icebp
roll
adc
push
shrb
xchg
jp
add
rcrl
rcr
pop
fwait
insl
cmp
lret
in
mov
jle
jo
dec
xchg
or
adc
das
pushf
mov
mov
fistpll
dec
call
adc
xchg
out
dec
lahf
popl
adc
call
add
add
faddl
mov
inc
out
mov
or
clc
not
add
sahf
outsl
pop
es
gs
retw
je
push
add
or
mov
mov
int3
cmpsb
insl
or
sbbb
insb
inc
jge
fs
jne
rcl
out
mov
pusha
mov
add
pop
shll
add
add
add
pop
adc
xchg
xchg
je
xchg
jmp
popa
cmp
test
or
mov
cli
jb
test
mov
jnp
fisttpll
sub
inc
xchg
test
cli
push
cmpsl
out
xchg
sub
jge
loop
dec
mov
or
adc
std
nop
hlt
mov
mov
or
jge
add
add
add
and
mov
or
daa
mov
inc
cld
fcomi
push
fcomi
add
add
mov
stc
jnp
orl
xchg
sbb
mov
stc
adc
push
jecxz
or
xor
jmp
and
lret
movsl
pusha
cmp
incl
mov
add
add
add
mov
sti
cmp
mov
fdivp
call
divb
cvtdq2ps
mov
mov
sti
pop
push
pop
sti
and
lea
je
xor
notl
mov
jmp
xchg
dec
push
out
and
insb
mov
add
add
add
jg
stc
mov
push
cmp
in
stc
cmp
cs
popa
psubq
ret
sbb
std
addb
mov
inc
add
cli
xchg
mov
mov
cmc
in
fwait
or
adc
addr16
adc
in
aad
cmpsb
add
push
in
jb
popa
cmpsb
mov
mov
jg
or
add
add
dec
mov
out
test
jl
cmpsb
imul
fdivrl
mov
pop
push
or
in
xor
jmp
or
mov
xchg
imul
pop
es
clc
sbbl
lret
push
adc
test
push
idiv
test
and
stos
jle
add
add
add
cmp
cli
jb
cld
pop
adc
or
gs
xchg
push
cmpsl
cli
sahf
sbb
test
jae
mov
mov
inc
imul
pusha
cs
fs
aam
repz
repnz
ret
lahf
xchg
cmp
pop
cmp
bound
ss
ss
push
mov
or
add
inc
filds
add
add
add
ficomps
xlat
push
outsl
and
aaa
mov
or
and
and
outsl
iret
dec
popa
aaa
or
cmp
and
das
into
scas
faddl
cmp
mov
inc
repnz
fldt
rorb
data16
pop
movsl
dec
jnp
enter
jecxz
xor
cmpb
or
add
add
add
insb
mov
adc
dec
sub
out
xor
ss
vorps
lahf
mov
out
test
and
std
popa
inc
call
push
xor
cld
inc
cmp
call
cld
shll
fucomi
fs
jmp
gs
sub
in
out
out
call
mov
add
add
add
imull
mov
sbb
sub
inc
nop
push
fs
xor
sahf
sub
or
loop
mov
test
int3
xor
jmp
in
ljmp
mov
negl
sahf
mov
sbbl
cltd
mov
or
loopne
sti
and
shll
add
add
add
fnstenv
and
cli
mov
leave
adc
cmp
mov
mov
sub
scas
or
mov
and
negb
das
cmpsb
or
lret
push
dec
add
adcl
gs
sbbl
xchg
mov
jp
shrl
xorb
add
add
add
int
pop
insl
and
mov
lock
movsl
rcl
inc
and
bnd
aas
push
das
sub
stc
ret
in
leave
cmp
into
shr
rolb
jg
aas
das
imul
jecxz
test
sti
mov
pop
ljmp
cmp
push
fcoms
add
mov
pop
shrb
add
add
add
xor
out
imul
int
pushf
xchg
loope
int
rcrl
cmp
add
cmp
or
cmp
sarb
es
jl
pushf
stc
push
mov
leave
cmc
sbb
inc
inc
jae
mov
sub
inc
daa
and
sub
fmuls
sbb
mov
pop
call
add
add
add
or
xchg
stos
mov
xor
sbb
jg
incl
mov
jle
dec
mov
inc
xchg
xor
aaa
hlt
loop
loopne
pop
movsl
xchg
xchg
nop
popa
iret
xor
pusha
int3
rcrb
les
inc
les
dec
mov
pop
and
mov
pop
enter
loopne
sub
mov
add
pop
xor
pop
loope
xchg
push
ret
or
push
leave
jnp
sbb
fs
mov
arpl
es
aaa
notb
mov
in
push
out
nop
inc
sub
mov
push
xchg
cmp
inc
jecxz
sub
xchg
shl
jns
xchg
mov
or
mov
int3
or
add
mov
xor
add
add
xchg
xlat
lahf
sub
adc
fimuls
mov
sub
out
jp
xchg
xor
xor
mov
ret
xchg
insl
cmp
rcrb
xchg
mov
leave
xchg
lret
in
sub
mov
adcl
cld
or
jbe
sbb
pop
xor
jl
dec
jl
mov
add
add
jge
ss
fistps
and
rcr
pop
mov
pop
xor
rcl
test
fadd
jge
mov
scas
imul
push
xchg
mov
cmpb
aaa
xlat
xchg
filds
push
and
scas
les
xlat
adc
negb
pop
xchg
ja
xchg
fbstp
pop
xchg
add
add
add
ja
push
filds
and
out
ret
push
xlat
push
mov
imul
mov
fisttpl
mov
inc
pop
sahf
daa
push
xor
and
xchg
sahf
push
loop
nop
jne
push
nop
xlat
test
nop
out
ss
mov
and
and
mov
pandn
lret
nop
in
or
out
sbb
scas
adc
cwtl
xchg
push
fwait
xor
add
add
add
mov
test
stc
ja
cmp
mov
jne
ja
jl
dec
jmp
sub
xchg
cli
xchg
mov
sub
cltd
pop
arpl
scas
pop
add
sahf
cmpb
scas
nop
pop
jns
push
adc
pop
out
mov
stos
or
ret
mov
addb
push
stos
scas
cld
sti
adc
add
add
add
pop
in
xchg
leave
movsb
mov
rcll
mov
mov
sbb
test
call
les
add
sbb
arpl
outsb
fsubl
shll
mov
call
cs
push
ss
jge
fwait
mov
dec
mov
enter
scas
mov
jge
jne
add
aas
stos
add
add
add
push
dec
jg
out
dec
mov
fwait
bound
mov
xchg
mov
mov
add
dec
cmp
out
test
mov
add
xchg
mov
jnp,pn
pop
sub
jnp
movsb
mov
pusha
jnp
xchg
dec
ret
ret
xchg
inc
add
or
pop
mov
popa
add
add
add
xorb
gs
test
rep
std
pushl
enter
mov
push
add
inc
mov
mov
cmp
cltd
pop
data16
jmp
out
jne
sub
cmpsl
sbb
mov
add
mov
mov
add
mov
adc
ljmp
mov
add
add
add
mov
hlt
mov
or
popa
mov
icebp
mov
cwtl
dec
xor
ljmp
mov
scas
out
out
stos
adc
incl
jg
xchg
fstl
xchg
in
outsl
mov
fisttpll
int3
repnz
xor
cwtl
jle
incl
or
in
jecxz
test
cld
sub
mov
nop
or
cwtl
ret
xchg
stc
loope
add
add
add
xchg
je
imul
xchg
es
xchg
jb
add
out
push
xchg
cmpsb
stc
inc
or
gs
jno
fdivl
repz
xchg
lods
sbb
mov
add
in
or
or
test
outsl
lock
xchg
mov
dec
add
mov
add
inc
add
add
call
adc
fimull
fwait
jbe
cld
popf
mov
call
and
aam
cwtl
mov
cmc
fwait
xchg
orb
push
bound
loopne
dec
or
jb
lea
jne
inc
es
push
inc
jb
stos
adc
call
xchg
orl
jp
ss
push
lahf
adc
movsl
inc
xor
add
add
add
inc
cmp
loopne
pop
and
and
pop
sbbl
xchg
sub
outsl
aaa
cmp
ds
daa
cmp
pop
lea
mov
addl
enter
jno
xlat
xchg
pop
sbb
inc
or
mov
fwait
popa
loop
lahf
pop
add
add
add
mov
insl
lahf
pop
scas
mov
iret
jo
push
iret
jo
pop
dec
les
dec
std
add
pop
xchg
push
adc
pop
push
mov
mov
notl
xchg
add
mov
xor
divb
xor
add
xor
rolb
add
add
add
add
mov
add
dec
add
sub
push
js
int3
dec
les
add
inc
cmpsb
sbb
xchg
das
mov
fcmovne
add
lock
mov
hlt
out
push
fisttps
mov
xchg
addr16
lret
mov
cltd
sbb
pop
add
add
add
cmp
mov
lret
mov
insl
out
lcall
mov
mov
mov
pop
push
fcoml
mov
jmp
ljmp
cmp
push
fidivrl
in
pop
ret
out
xor
addr16
pop
push
cmpsl
push
dec
movsb
adc
inc
adc
iret
add
pusha
or
add
add
add
push
pop
sub
mov
mov
into
cltd
inc
mov
mov
iret
mov
clc
sarb
push
dec
into
dec
xchg
nop
icebp
sub
test
and
push
es
inc
movsb
dec
adc
fsub
add
mov
dec
test
outsl
xorb
push
mov
cli
test
notl
mov
or
mov
add
sub
xchg
and
jns
adc
sbb
popf
out
cmpsb
jmp
into
in
cmp
adc
dec
push
inc
shll
jne
sbb
xorl
dec
addb
sub
or
xlat
sbbl
push
push
cwtl
fdivl
adc
mov
or
iret
imul
and
jp
popf
out
clc
add
add
add
sbb
rcr
int3
push
fsubr
jmp
adc
inc
or
push
jbe
shr
subb
sbb
out
mov
ss
shll
mov
stos
cmp
test
dec
in
sub
cmp
dec
rolb
mov
sbb
jecxz
adc
xor
jmp
push
andl
std
roll
add
add
add
mov
pushf
mov
mov
xchg
std
adc
push
divb
dec
hlt
jae
hlt
jb
loop
xor
mov
outsb
sbb
dec
xor
mov
inc
out
sbb
scas
icebp
fwait
lods
dec
lea
xchg
scas
cli
mov
rcr
test
out
cli
sub
fsubrs
sti
pusha
sub
out
mov
shl
mov
add
mov
or
jbe
xchg
mov
lahf
fldenv
movsb
out
lcall
mov
les
test
sub
push
aaa
repnz
sbb
aam
int
sti
repnz
lea
cltd
xor
jmp
mov
sbb
inc
mov
and
jns
push
adc
push
aam
add
add
add
inc
xchg
pop
xorb
add
dec
cmpsl
repnz
mov
mov
dec
cmp
mov
ss
arpl
cmp
ljmp
push
push
aad
mov
outsl
add
xor
pop
cltd
subl
add
out
sbb
inc
mov
enter
in
mov
add
add
add
xchg
cmp
movsb
jle
call
insl
scas
lock
dec
nop
cs
pop
mov
sbb
or
jno
stc
lods
xor
adc
cmp
cmp
cmp
repnz
in
in
jl
lcall
dec
movsb
shlb
mov
mov
out
loop
sub
add
mov
add
add
mov
sbbb
movsl
es
adc
out
xor
sahf
es
aad
xor
adc
xor
movsl
mov
cmc
xchg
out
cmp
inc
jecxz
cmp
and
sahf
mov
shrl
adc
add
jecxz
jmp
jne
jecxz
jnp
jg
xor
jo
mov
shll
pop
jnp
add
add
add
and
push
mov
xchg
push
shll
pop
jnp
jg
wbinvd
mov
int3
dec
sub
dec
punpckhdq
adc
cmc
and
dec
or
or
punpckhdq
lock
inc
push
in
add
cmp
dec
out
imul
cli
dec
inc
lcall
push
cli
out
mov
xor
dec
inc
sti
add
add
add
ficoms
or
add
ds
adcb
dec
add
lcall
adc
lcall
jb
adc
andb
mov
dec
les
data16
fistps
add
push
add
int3
sbb
out
jnp
in
jnp
mov
add
ret
push
repz
add
sarl
add
cmp
out
xor
mov
sbb
xchg
sti
add
mov
jns
sti
int
into
shll
push
xlat
daa
add
jae
add
xchg
std
xor
adc
test
jb
xchg
jo
xchg
ljmp
inc
in
mov
call
movsb
xchg
add
add
mov
pop
mov
lret
mov
sub
push
scas
mov
sub
or
mov
sti
inc
jno
jecxz
mov
adc
pop
xchg
or
mov
aas
ret
pop
adc
mov
testb
jb
je
loope
bound
xchg
insl
scas
mov
xlat
scas
or
popa
int3
or
ja
scas
js
add
add
add
fisttpll
jnp
add
out
mov
add
mov
fisttpl
or
jg
or
or
mov
inc
pop
rol
add
pop
or
das
or
loope
or
fcomi
fisttpll
jae
or
sub
mov
scas
rorl
out
pcmpgtb
stc
jmp
js
pop
xchg
lock
mov
add
add
add
ret
or
inc
shll
push
pop
xchg
adc
mov
cmp
add
push
pop
sub
dec
and
add
aas
jns
das
adc
cltd
sarb
testl
icebp
mov
inc
repnz
or
mov
shl
repz
add
add
add
pop
pop
rorl
push
jbe
incl
fldt
ljmp
cmp
xchg
loopne
mov
or
push
ret
daa
add
pop
int3
out
sub
test
mov
mov
xchg
jecxz
mov
daa
add
in
repz
popl
mov
pop
mov
add
add
add
mov
loope
mov
cmpsl
add
shl
cli
cmp
outsb
mov
sbb
out
cs
pop
ss
inc
out
outsb
xor
xchg
add
jmp
xchg
add
pop
dec
sbb
adc
fwait
xor
mov
xchg
jnp
fwait
xor
add
mov
sbb
add
add
add
cwtl
adc
xchg
push
cltd
andl
test
stos
sbb
mov
ret
sub
adc
push
lret
addl
or
rcll
ror
inc
jmp
daa
stos
sbb
mov
xor
adc
sub
cmp
sub
sub
sub
fildll
cmp
add
add
add
sub
cmp
xor
fwait
xchg
sub
lret
or
xchg
fwait
dec
mov
adcl
sub
add
sahf
sub
sub
mov
es
and
shlb
pop
idiv
movsl
rolb
xchg
clc
decl
test
daa
adc
sarb
add
add
insl
xchg
mov
cmp
pop
shll
cld
aas
or
cli
pushf
inc
mov
call
and
mov
insl
push
shll
notl
lret
or
mov
sbb
popf
cltd
dec
icebp
dec
incb
fstl
sub
mov
add
add
inc
add
repnz
xchg
mov
cmp
pop
sub
aam
ljmp
lret
jae
inc
mov
xchg
mov
or
inc
lret
cmpsl
push
mov
pop
in
fs
daa
jae
inc
mov
inc
fucomi
nop
nop
loopne
xchg
pop
and
jb
inc
push
fsubrs
scas
cmpsb
clc
mov
loopne
xchg
sub
stc
inc
add
add
add
dec
ja
loop
or
rorl
jbe
xchg
mov
add
add
pusha
sub
inc
fidivs
in
lods
pop
add
and
push
ss
sbbb
sbb
xchg
repz
mov
sbb
fxch
and
pop
pop
arpl
cmpsb
push
sbbb
cmp
shl
fsubrl
mov
add
add
lret
pop
sub
mov
rcl
pop
repnz
ret
shrb
iret
xor
pop
repnz
rcrb
adc
and
sub
jno
add
and
in
pop
or
test
dec
pop
mov
aaa
fldenv
xor
lcall
daa
fldln2
sbb
xchg
sbb
xchg
fldln2
sbb
add
enter
lods
sarb
fucomi
pushf
pop
nop
sbb
adc
sarb
fucomi
pushf
cwtl
nop
sbb
popf
fsubl
bound
pop
dec
dec
fdiv
insl
fsubs
leave
and
rorb
neg
fdivl
iret
ret
pushf
fadds
and
loopne
pusha
add
push
repz
shl
int
fsubr
mov
fwait
popf
sbb
add
add
add
daa
mov
jno
mov
pushf
ja
scas
popf
in
data16
fxam
stos
in
ds
mov
repz
fcmove
out
stos
mov
sub
dec
push
inc
stc
fxch
daa
aad
mov
ljmp
call
out
jb
in
out
mov
pop
add
add
add
add
jmp
mov
ljmp
into
inc
int
adc
adc
fmul
pop
rcll
pop
add
fstpt
adc
fdivrl
jae
aas
ror
dec
pop
jmp
pop
inc
inc
je
in
repz
lcall
inc
dec
pop
add
mov
push
sub
sbb
add
add
mov
stos
in
lret
or
mov
fst
fcmovnb
ja
roll
sub
ret
xor
lock
outsl
ficoml
imul
sbb
cmc
sub
jne
ss
pop
and
int3
lret
cs
add
in
loopne
sub
jne
int
aad
ja
repnz
push
aad
pop
inc
outsl
ret
or
or
add
add
add
dec
loop
cmpsb
loop
fildl
sub
jmp
add
test
dec
push
iret
rolb
and
sub
fldt
daa
arpl
pop
arpl
fdivrl
and
push
pop
arpl
pop
mov
in
mov
or
daa
inc
mov
pop
int3
es
dec
mov
arpl
leave
cmp
add
add
add
mov
mov
and
into
cmp
dec
mov
push
out
pop
pop
loope
enter
aaa
loope
cmp
sbb
scas
fucomip
mov
lret
inc
mov
sub
inc
sub
xor
jb
dec
cmp
lock
and
fnstenv
je
fcomi
loopne
and
inc
jne
mov
lahf
pop
push
arpl
add
add
add
stc
in
pop
mov
in
jbe
rol
arpl
repz
loopne
das
push
test
sub
sbb
leavew
into
cmp
loopne
fxch
out
shlb
sub
leave
xchg
scas
pop
call
fbld
fcmovu
and
mov
inc
jo,pt
ljmp
push
inc
add
add
add
inc
jo
ljmp
sub
dec
pop
adc
aam
add
and
and
jae
xor
jg
pop
sub
jae
cmp
shlb
test
pop
scas
cmpl
ret
inc
outsl
ss
xchg
sarb
dec
cli
adcb
pop
sbbb
jge
or
pop
add
add
add
mov
xchg
fsubrs
test
movsb
mov
sub
fwait
es
iret
xor
jmp
in
arpl
cltd
pusha
sub
int3
mov
push
sub
jo
dec
iret
sbb
stos
pusha
cld
dec
bsf
push
mov
dec
iret
cmp
jmp
test
add
sbb
lahf
add
add
add
cmp
jmp
push
push
in
sub
mov
movsb
stos
add
fildl
ret
movsl
jbe
xor
rcr
mov
scas
push
push
mov
mov
adc
ret
cmpsl
jbe
xor
shl
mov
mov
adc
shr
jns
dec
adc
cmp
ret
add
add
adc
cmpsl
jbe
xor
adc
iret
mov
adc
adc
cmp
mov
fbstp
adc
in
or
dec
into
push
fnsave
out
dec
sub
cmpsb
mov
mov
fnsave
iret
jns
mov
jle
jne
ja
push
mov
es
addr16
sbb
xchg
std
jne
add
add
add
outsl
jns
mov
jle
push
loope
cmpsl
pop
into
int3
cwtl
cmp
mov
mov
jo
out
test
lahf
ficoml
xor
pop
mov
jmp
imul
sbb
pusha
mov
js
jl
stc
shll
jnp
nop
ret
repnz
pop
lcall
or
pop
jbe
lret
jb
dec
shlb
jp
in
fcmovbe
sub
pop
bound
rorb
xchg
pop
xchg
inc
push
cmpsb
mov
out
shrb
pop
cmpl
or
push
repnz
inc
call
xor
scas
jmp
rcl
call
xor
jo
add
add
add
push
adc
addr16
dec
dec
in
or
push
cmp
popa
andb
out
repz
add
cmp
daa
popf
sbb
push
push
and
nop
mov
addb
iret
je
sbb
pop
ja
mov
jb
fisubl
cmp
pop
pop
sub
sbb
add
add
add
add
mov
scas
clc
ds
outsl
leave
mov
xchg
and
add
mov
push
mov
xor
mov
repz
aaa
xchg
or
xor
decl
outsl
xor
sub
nop
inc
fisttpl
jle
gs
das
xchg
add
add
add
and
jp
pop
inc
xchg
arpl
mov
cmpsb
mov
in
mov
ffreep
mov
aam
mov
xchg
or
pop
sbb
jp
jb
jbe
mov
dec
push
and
cmp
inc
inc
stos
dec
xor
cmp
jp
xchg
cwtl
mov
in
xchg
add
add
add
or
mov
xchg
or
push
xchg
je
jno
ds
push
adc
sub
test
xchg
js
nop
xchg
xchg
adc
data16
dec
xchg
mov
pop
or
js
xchg
jl
test
insb
jle
faddl
mov
xchg
pushf
cmp
jp
imul
inc
mov
add
ret
lahf
ret
mov
inc
jb
push
jle
add
sahf
add
or
jno
sahf
pop
sub
pop
add
cwtl
mov
or
mov
or
call
rcrb
mov
push
or
sbbl
xor
cli
out
maxps
inc
cmp
add
cmp
cli
out
mov
fnstenv
sub
stos
ss
jg
jecxz
mov
in
out
mov
jge
mov
jns
out
sti
mov
push
pop
popf
sub
loopne
out
cli
fistps
pop
jne
jl
loopne
sbbl
outsl
out
sti
add
pop
xor
xchg
inc
lcall
add
jmp
repz
jb
inc
mov
shl
std
or
movsl
jmp
ret
mov
adc
sub
inc
imul
nop
in
fisubl
fiaddl
movsb
scas
fwait
sti
sub
in
repz
lret
mov
pushf
fwait
sti
mov
in
mov
movsl
mov
les
add
add
out
scas
shlb
jmp
and
dec
sub
ja
std
in
in
mov
test
movsb
adc
push
pop
sub
clc
mov
pop
cld
mov
mov
mov
outsb
adc
mov
int3
int3
pop
inc
jae
imul
push
lret
lea
imul
lret
sbb
adc
ret
add
add
add
cmpb
xor
mov
and
sbb
sbb
mov
punpckhdq
in
mov
push
mov
adc
sbb
arpl
xchg
xor
inc
inc
bound
es
jge
inc
mov
inc
dec
lea
xor
outsb
xor
jecxz
sahf
adc
arpl
dec
into
inc
addr16
add
add
add
mov
dec
fldenv
mov
inc
xchg
and
lods
clc
adc
xor
mov
pusha
stc
in
rol
xor
xor
je
or
insb
cwtl
pop
jb
aad
mov
xchg
push
cmp
dec
test
jg
and
imul
sbb
add
add
add
fstpt
inc
pop
inc
hlt
sbb
sub
rcr
dec
rcrb
xchg
sbb
hlt
out
in
mov
and
outsb
mov
scas
sub
cmpsb
and
mov
dec
loopne
imul
cld
add
movsb
in
ret
mov
and
mov
push
xor
jmp
add
add
mov
xor
in
ret
and
fisubrs
incl
push
xor
xchg
mov
jecxz
mov
popf
sbb
jae
in
sahf
gs
scas
ret
fcomip
jmp
and
jle
mov
std
inc
inc
loopne
divl
test
in
imul
or
lahf
xchg
movsb
daa
mov
add
add
add
aas
out
cli
cmpsb
enter
cmpb
adc
adc
inc
add
fldenv
push
out
lcall
mov
mov
stos
test
and
mov
sahf
enter
movsb
mov
repnz
mov
out
jp
xor
mov
dec
xor
hlt
ja
fiadds
add
add
add
push
addr16
push
and
mov
xor
xor
imul
mov
cmc
sub
sbb
xchg
jbe
xchg
dec
push
gs
mov
mov
jo
cld
push
push
inc
xchg
nop
es
pop
mov
faddp
fs
mov
mov
pop
insb
or
mov
inc
or
push
add
lret
push
jae
in
xchg
adc
mov
mov
cmpsl
xor
push
mov
and
jns
stc
cmp
shlb
arpl
fistps
pop
lea
fcomps
pop
cmp
cmpsb
fsts
test
push
movsb
pop
daa
scas
sti
ja
data16
popf
sub
lods
mov
xor
add
add
push
mov
enter
cld
push
xor
aaa
jae
leave
xchg
repz
mov
jne
pop
idiv
cmp
jb
in
pop
daa
enter
cld
add
xchg
rcrb
in
pop
idivb
xor
xchg
jne
adc
lea
push
loop
push
mov
add
add
add
inc
dec
cld
sub
repz
out
mov
jae
xchg
cli
push
scas
dec
push
jbe
push
pushl
cmp
je
xchg
xchg
bound
jl
push
cmovl
call
or
jne
xor
cli
mov
jae
or
xchg
jg
sbb
enter
push
xorb
push
pop
leave
or
add
add
add
adc
inc
cltd
pop
mov
lods
sub
sub
pop
jg
pop
sub
addr16
xchg
push
cmpsb
pop
sbb
dec
icebp
cmp
sti
neg
inc
adc
mov
xchg
jne
pushf
cwtl
or
pop
pop
sti
mov
jg
mov
sarl
fsubrs
push
sbb
mov
and
add
add
add
mov
pop
test
call
xlat
xchg
daa
add
fisubrl
mov
mov
and
jae
leave
mov
xchg
push
cmp
xor
imul
add
jno
xchg
fs
test
pop
mov
push
push
and
cmp
aam
add
mov
mov
sub
add
add
add
adc
xchg
fisttpl
jle
cs
xchg
aaa
add
aaa
inc
cmpl
and
jmp
or
dec
sbb
push
add
adc
dec
mov
jmp
shll
or
cmp
push
filds
pop
lahf
pop
cli
mov
add
push
push
xchg
fcmovne
arpl
stc
and
jp
loope
incb
insb
iret
mov
pushf
mov
mov
add
add
and
ret
jns
fs
adc
fstpl
jne
pop
pop
xchg
scas
push
call
repz
adc
scas
inc
adc
jne
xchg
ret
cmc
jne
cmp
call
add
add
add
stos
in
push
pop
jb
add
push
outsl
or
lock
je
es
jnp
add
mov
lcall
or
loop
inc
cmc
pop
and
in
gs
or
mov
jne
shll
leave
xchg
pop
xor
fnstsw
decl
imul
xchg
pop
daa
cmp
mov
jne
sub
add
add
add
dec
push
mov
sub
push
inc
cmpsl
or
adc
out
aas
or
mov
das
dec
sbb
mov
or
pop
insb
or
push
cld
sbb
push
xor
fdivrs
add
mov
mov
or
dec
incb
or
ljmp
or
xor
or
es
add
add
repnz
add
xrelease
out
jl
cwtl
and
cmp
push
add
add
aaa
js
inc
popa
cmp
push
lret
scas
xchg
mov
sub
push
sbbl
popa
jecxz
mov
out
dec
add
push
cs
in
pusha
push
mov
daa
adc
pusha
mov
clc
add
add
add
mov
add
xchg
mov
xchg
add
or
fs
pop
cli
push
pop
fdivr
lds
testl
inc
div
and
pop
pop
inc
mov
clc
fimuls
add
cld
cmc
add
test
add
add
mov
push
inc
inc
xor
add
push
xchg
popa
xchg
jle
and
add
add
add
xchg
cmc
in
pop
sbb
or
test
pop
cli
mov
std
pop
push
add
mov
movsl
mov
pushl
mov
xchg
rcrb
mov
icebp
lahf
adc
out
sahf
nop
fs
fists
push
mov
push
mov
lcall
cmc
fistpll
outsl
dec
int3
daa
ret
insb
cli
addl
add
fisttpll
pop
sbb
inc
jl
pushf
mov
add
mov
pusha
inc
mov
sub
push
sbb
aad
cmp
sahf
mov
or
cmp
sahf
or
into
xchg
andl
xchg
dec
jbe
lods
push
out
xlat
into
sub
pop
test
in
imul
loop
and
shll
mov
adc
push
push
pushf
movsb
flds
add
add
add
je
fldt
and
sahf
leave
rorl
sub
fnsave
cli
xchg
sbb
scas
lods
xor
lods
pushf
mov
mov
adc
cmpl
dec
bound
fldt
int3
mov
leave
scas
int
arpl
cmpsb
xor
push
in
sub
inc
loop
into
in
push
std
xor
add
add
add
xchg
movsb
inc
push
andl
rcrl
cmp
or
mov
push
int3
mov
out
xlat
hlt
mov
inc
jmp
nop
adc
les
pushf
pop
jge
cmp
ds
fwait
inc
jge
cmp
popf
sbb
cli
fiadds
int
icebp
sbb
adc
sub
jge
add
add
add
and
ret
leave
push
dec
xor
fdivrs
bnd
add
jge
aad
cwtl
fsts
ss
dec
or
es
imul
fdivrl
mov
enter
js
dec
xchg
jae
dec
int
add
imul
push
adc
ja
mov
jbe
loope
shll
add
add
add
orb
fidivl
add
push
sub
repnz
enter
push
xlat
arpl
adc
lcall
daa
sar
stc
into
fbld
lahf
cmp
inc
push
daa
adc
sbb
xacquire
mov
pop
or
mov
daa
adc
call
fwait
out
aad
inc
mov
popa
pop
xchg
popf
aad
add
add
add
movsb
add
mov
insb
dec
push
shll
mov
jp
xchg
xchg
ret
sub
andl
cmp
lock
push
cmpsb
cmp
shrb
and
sub
cmpsb
rclb
sub
cmp
into
cmp
sbb
push
aad
ja
pop
lock
out
xor
and
add
add
add
insl
inc
lret
mov
and
sti
inc
test
movsb
pop
push
in
push
mov
ss
sub
cmp
fistl
cmp
lock
mov
sub
enter
push
pop
mov
jae
cmp
push
push
ror
movsl
lods
inc
jns
inc
ret
ss
enter
jnp
cltd
add
add
add
push
frstor
xor
or
in
nop
mov
rcrb
cmp
mov
pop
call
lret
mov
jmp
xchg
inc
cmp
sbb
push
jno
je
sbb
xchg
lret
outsb
stos
sbb
fisubl
mov
adc
cmpsb
adc
mov
add
add
dec
adc
push
imul
leave
jge
fnsave
cmc
sbb
adc
mov
call
shrl
pop
aam
nop
insb
scas
mov
stos
push
cmp
popa
pop
xor
mov
cmp
fcmove
mov
daa
mov
sbb
xor
sbb
clc
pop
mov
filds
add
add
add
lahf
aad
mov
jb
or
daa
mov
pusha
adc
ljmp
xchg
sub
mov
outsl
iret
sahf
nop
pusha
jg
xchg
movzwl
mov
and
mov
sbb
push
push
sub
mov
loop
sub
mov
frstor
ds
dec
and
scas
add
add
add
or
lcall
cwtl
or
sub
dec
scas
mov
aad
or
mov
push
cmpsl
sub
adc
cmpsb
in
stc
or
sub
das
add
lea
or
rclb
xchg
or
adc
jge
imul
rolb
decl
add
dec
sub
or
sub
add
hlt
add
add
add
mov
ja
jg
dec
cmp
pop
mov
push
in
jge
pop
fildl
movsl
mov
adcl
mov
and
adcb
push
daa
inc
xchg
outsb
stos
sbb
into
sbb
sbb
addl
mov
add
cmp
decl
adc
inc
nop
add
add
add
fsubl
jg
movsl
insl
and
mov
dec
mov
out
pusha
or
ja
mov
mov
je
or
scas
mov
push
shlb
xorl
cmp
xor
cmp
jmp
mov
sub
cmp
int
addr16
or
hlt
mov
ret
faddl
add
add
add
ja
pop
imul
mov
inc
pop
mov
je
mov
test
lahf
call
sbb
add
cmpsb
xchg
or
outsb
cmpb
and
cmc
mov
sbb
mov
mov
test
pop
add
rcl
ficompl
leave
popa
push
push
in
aas
xchg
mov
jne
lds
add
add
add
mov
mov
sbb
push
outsb
and
mov
stos
xchg
push
inc
and
xchg
mov
push
stos
cli
aaa
push
xchg
icebp
mov
add
adc
popa
pop
aad
loop
sub
shlb
xor
mov
je
lds
inc
xlat
jb
and
add
add
inc
mov
add
stc
sbb
sbb
add
jge
je
jnp
jns
mov
cmpsb
fldenv
sti
rol
jp
jg
dec
xchg
or
daa
stos
or
add
ja
jns
cltd
daa
adc
cmp
add
xor
ficompl
jp
cmp
mov
add
add
add
and
pop
xchg
repnz
xchg
clc
cmp
add
sbb
pop
sub
shll
gs
je
adc
sbbl
outsl
outsl
push
cmp
outsb
add
dec
mov
loope
cmpsl
jbe
sub
js
mov
ja
ret
xor
jnp
add
jne
outsb
pop
cmp
jns
in
cmp
add
add
add
push
dec
jl
sub
je
int
fimull
cmp
jge
add
jae
rolb
ds
nop
dec
cltd
add
mov
adc
call
sbb
mov
cmp
mov
addr16
dec
stos
outsl
sub
xchg
dec
faddl
mov
or
mov
xor
test
push
add
add
add
int
push
mov
sub
shlb
add
sub
pop
push
ret
mov
dec
inc
add
out
cmp
call
cmp
cmp
add
aam
adc
xchg
stos
mov
mov
aad
repnz
in
rolb
pushf
add
add
add
cltd
into
xchg
mov
mov
test
outsl
mov
int
xchg
hlt
pushf
push
sahf
int
repnz
mov
int
mov
mov
scas
sahf
int
cmpsl
jle
popf
scas
pop
int3
xchg
mov
testl
pop
out
lret
insl
push
mov
fdivrs
pop
pop
and
arpl
call
add
add
or
add
rorl
sbb
adc
out
mov
lds
ror
adc
je
push
btc
push
out
or
cmpsb
cs
lahf
push
std
iret
pop
jle
sbb
push
or
lret
sub
inc
hlt
sbb
movl
rol
cmpsl
push
outsl
ds
cmp
add
shlb
cmc
and
sbb
lds
inc
cwtl
icebp
sub
inc
out
xor
std
aaa
andb
cmpsl
dec
xlat
lods
das
js
add
add
dec
or
and
test
mov
mov
or
je
cmpsl
inc
or
and
push
lds
pusha
xchg
or
or
stos
dec
add
add
add
cs
popf
or
push
push
jmp
je
and
mov
lret
inc
out
cmpsl
mov
cmp
cmp
pop
out
cmp
mov
adc
sahf
pushf
cmp
cld
and
inc
int3
daa
orb
mov
or
orl
mov
out
mov
cmpl
je
fstpl
add
add
add
jbe
sub
and
xor
fadds
cmp
xlat
mov
nop
mov
imulb
scas
mov
fildl
jno
adcl
icebp
or
mov
addr16
rcrl
or
inc
mov
xchg
push
mov
ds
adc
mov
xor
xor
add
add
add
pop
mov
in
add
jae
ljmp
lds
cmpsl
pop
mov
push
cmpsl
nop
repnz
mov
xor
cmovno
xchg
sub
lds
xchg
lock
sbb
sbb
hlt
mov
push
lret
clc
push
aas
nop
sub
sbb
sub
mov
outsl
add
add
add
sub
push
or
push
ret
cli
adc
iret
add
lcall
mov
ss
cmpl
ljmp
or
bound
jp
movups
push
outsb
lahf
inc
mov
mov
push
dec
aam
clc
mov
or
cld
pop
jns
mov
cmpsb
add
add
add
xor
cmpsb
out
fsubl
repz
inc
push
and
inc
push
mov
or
adc
movsl
mov
xchg
or
and
adc
xchg
inc
sbb
andl
in
xchg
jmp
stc
std
dec
mov
or
xlat
dec
push
cmc
sub
icebp
loop
add
add
add
aad
add
movsb
add
fbld
mov
in
jnp
xchg
cmp
add
mov
fdivl
pop
clc
jecxz
or
movsb
mov
cmpsl
shll
frstor
ds
das
aas
stc
cli
fwait
xchg
sti
out
mov
dec
cmp
aad
and
pop
add
adc
xor
rep
add
add
add
fcmovnb
in
clc
clc
pop
sbb
data16
pop
cmp
stos
cmc
aaa
shlb
xchg
ret
outsl
sarl
outsl
mov
into
jge
sahf
jecxz
aad
and
jle
pop
or
push
adc
scas
inc
fistpll
shll
xchg
pop
sub
popa
push
mov
sti
stos
movlps
pop
add
add
add
push
inc
inc
ret
sti
stos
rsqrtps
rorb
pop
mov
arpl
mov
mov
orb
mov
jo
dec
shl
insb
scas
scas
cmp
adc
pop
add
dec
dec
adc
xchg
sbb
add
cld
es
xchg
leave
mov
out
cli
or
cli
adc
add
add
add
cwtl
inc
mov
xchg
or
mov
lret
out
pop
mov
out
push
mov
add
cwtl
pop
push
adc
dec
ja
sbb
cmp
push
scas
add
sbb
hlt
xchg
rolb
mov
adc
fcmovu
add
pop
jmp
lret
sahf
daa
out
outsb
inc
std
fwait
es
cmp
sbb
repz
add
add
add
mov
push
xchg
daa
aas
dec
sti
sbb
bnd
jecxz
out
testl
sti
out
or
pop
push
das
sti
aam
cli
jmp
dec
mov
add
inc
xor
aas
lcall
rcrl
mov
in
push
pop
mov
fidivs
aam
rolb
xchg
ljmp
inc
jo
add
add
add
xchg
imul
mov
jb
xchg
jge
ljmp
bound
xchg
xor
cmc
xor
pop
fwait
mov
inc
hlt
xchg
sub
sub
sarl
bound
orl
push
mov
cmp
pop
sbb
inc
rcll
push
jmp
in
xor
inc
cmpl
cmp
fisttpll
add
add
add
xchg
call
xchg
in
xor
dec
stc
cmp
aaa
dec
and
cmp
pushl
mov
pop
lods
sub
bound
or
fsubrp
xor
or
sub
fists
pushl
loopne
inc
int3
mov
cmc
inc
insb
outsl
outsb
or
frstor
not
mov
jmp
fiadds
add
add
add
add
xchg
dec
push
sarb
mov
out
cmp
mov
call
test
push
and
or
pop
sti
pop
lods
cmp
mov
test
or
xor
sti
cs
popa
push
dec
jg
jmp
dec
add
push
std
cmp
sbb
or
sti
dec
and
stc
out
sbb
pop
add
add
add
or
fadd
cli
and
decl
jp
or
rol
shl
sti
mov
rorb
mov
add
mov
rcl
shlb
inc
popa
call
incl
bound
xchg
andb
push
out
fisttps
pop
je
xor
addl
xor
incl
add
add
add
cmp
sbb
sbb
scas
out
dec
les
data16
push
xbegin
out
aam
jmp
add
sub
js
xchg
mov
lock
mov
lds
je
sbb
cmc
in
dec
mov
fnsaves
add
loopne
in
push
dec
orb
cmp
in
push
add
add
add
adcb
shrl
out
jmp
mov
xor
cmc
loop
jge
cmp
add
sub
shrb
inc
add
mov
and
or
fmuls
mov
adc
icebp
testb
out
xchg
out
mov
add
mov
add
add
add
mov
mov
cltd
addb
mov
lock
mov
cli
pushl
ds
and
add
mov
mov
jo
mov
mov
cmp
lcall
stos
call
mov
jmp
sub
ds
jnp
pcmpgtw
cli
jmp
sub
and
add
add
add
jle
and
add
mov
sub
mov
dec
decl
push
call
nop
js
mov
add
and
sbb
decl
pop
mov
call
clts
xchg
insl
ss
jne
mov
lods
and
movsl
lods
adc
adc
inc
and
ret
jmp
sub
add
add
jl
cmp
or
decl
dec
jno
adc
mov
mov
fdivrp
mov
jno
in
xchg
fs
mov
sub
lret
call
sub
fwait
out
loop
sub
popf
and
stos
pop
imul
nop
outsb
mov
push
pop
or
add
add
add
pop
ret
pop
pusha
fstpt
negb
pop
or
std
pop
mov
fninit
pop
inc
inc
dec
clc
ret
or
and
sbb
mov
roll
cmc
add
cli
pop
fimull
jb
push
test
lock
aad
sub
or
xchg
rolb
push
lods
xchg
add
add
add
not
nop
lret
sub
inc
and
xchg
not
inc
aad
ficoml
stc
dec
movsl
xlat
mov
inc
pop
fidivrl
inc
lret
dec
and
push
stc
dec
xchg
xchg
jecxz
sub
dec
out
dec
pop
in
inc
xor
pop
fcmovb
ja
dec
and
cmpsl
pop
cmpsl
gs
idiv
pop
mov
pop
pop
cmp
add
add
bound
pop
daa
jno
imul
repnz
addr16
mov
cmpsl
jge
mov
xbegin
inc
inc
insl
jbe
inc
insb
std
aad
sti
mov
pop
call
inc
inc
insb
pop
xchg
xchg
out
fbld
fidivl
ffreep
pop
stos
aas
inc
cli
inc
xlat
add
add
add
or
pop
scas
adc
inc
inc
lds
push
pop
jbe
and
pusha
shll
inc
dec
push
out
inc
pop
data16
adc
shll
gs
int
xlat
fidivrl
xchg
xchg
in
and
jle
bound
sbb
es
push
test
pop
inc
enter
lods
iret
and
add
add
add
fs
pop
ljmp
mov
das
daa
mov
mov
sub
fucomi
push
sahf
mov
movsl
testl
pop
push
mov
pop
loopne
inc
mov
jmp
add
jge
mov
pop
inc
fsubs
sarb
push
mov
mov
rcrl
lods
dec
sub
negl
add
add
add
gs
loopne
add
lret
rclb
adc
icebp
add
cltd
out
sarl
jo
das
sbb
notl
fldcw
mov
add
sbb
fcmovbe
jg
push
sub
fcmovnbe
repz
xchg
xor
mov
rcll
dec
sub
pop
fimull
rcr
push
and
imul
add
add
add
mov
int3
pop
hlt
jne
pop
rcrb
cmpsl
mov
popa
add
dec
fistpl
mov
icebp
sbb
xchg
adc
adc
inc
pushf
xchg
in
pop
inc
iret
xor
add
push
pusha
pop
inc
xlat
fistpll
mov
dec
adc
fnstsw
and
cmp
mov
add
add
add
movsl
pop
mov
add
addr16
xor
pop
mov
xchg
sub
fwait
sub
inc
cmp
or
push
fstpl
sahf
scas
pop
and
popf
out
fistpll
xlat
daa
xchg
pop
xor
incb
popa
lahf
xchg
dec
cmp
fstps
sbb
outsb
or
pop
in
xor
xor
push
or
add
add
add
movsl
cmpsb
stos
push
mov
loope
push
cld
jecxz
mov
lock
sbb
in
jg
roll
adc
mov
lret
insb
lock
movsb
sub
loope
mov
dec
nop
dec
es
mov
or
jle
jno
aam
pop
aam
and
in
loopne
rcr
mov
mov
add
add
add
loopne
fndisi(8087
mov
aam
sbb
adc
shrl
mov
jnp
push
pop
or
jmp
lret
xor
ret
add
testl
daa
pop
pop
mov
imul
push
aaa
jo
sub
aaa
mov
icebp
bound
gs
mov
shl
outsl
sbb
int3
mov
add
out
inc
sub
mov
sub
mov
clc
addb
or
fmuls
mov
xor
add
mov
aas
mov
sub
arpl
das
pushf
xchg
dec
sbb
daa
cltd
iret
fimull
jg
fs
icebp
fnsave
call
imul
fbld
mov
and
cmpsl
add
add
add
jne
mov
arpl
pop
arpl
xor
add
sbb
call
sti
call
mov
sbb
push
inc
fimull
add
or
orb
sbb
xor
fiadds
pop
lea
nop
scas
mov
cmp
nop
cmc
bound
loopew
jmp
inc
xor
sti
pop
add
add
add
add
push
data16
add
jg
jmp
cmp
sti
fstpl
sub
test
nop
ror
add
test
ret
int3
fiaddl
inc
in
add
sub
add
sbb
fcmovnb
jle
mov
in
xor
lret
movsl
aas
add
and
add
dec
jns
arpl
dec
dec
jmp
add
add
gs
sub
mov
fldcw
rolb
mov
dec
jge
mov
xchg
les
sbb
and
xchg
sub
dec
incl
jns
mov
mov
std
fimull
add
mov
sub
or
scas
dec
dec
int
and
incb
or
in
xor
add
or
xchg
lcall
add
add
or
imul
dec
andb
shrb
popa
jne
jns
jno
mov
adcl
in
gs
or
andb
mov
add
addl
fdivs
xchg
mov
das
pop
xchg
nop
xlat
aaa
cs
jne
addl
and
add
add
add
push
repz
cmp
push
out
sub
mov
int
fmull
daa
mov
push
adc
outsl
sub
call
dec
daa
mov
mov
sub
sub
in
call
or
mov
outsb
je
push
popa
push
int
popa
clc
jl
pop
aas
xchg
pop
cmp
add
add
add
add
mov
ret
or
call
pop
dec
lret
dec
sub
add
std
cmpsl
mov
and
test
loope
das
fiadds
mov
pop
pop
icebp
xor
imul
mov
mov
sbbl
and
lcall
jnp
mov
cmp
fcmovne
mov
iret
add
add
add
jo
repnz
incl
icebp
or
mov
and
cmp
aaa
add
sar
mov
sar
mov
mov
mov
inc
in
mov
fisubs
jg
mov
ret
mov
ja
xchg
lahf
cmp
mov
xchg
call
jl
pop
into
add
add
add
mov
xchg
in
pop
xchg
lcall
xor
xor
pop
incl
push
xor
sub
push
incb
jno
int3
push
jns
jne
xchg
sar
inc
jb
cld
add
decl
fs
or
jb
mov
jle
cmp
lods
sahf
push
in
add
xor
or
add
add
xchg
inc
push
jg
xchg
shrb
inc
mov
cmp
xchg
jo
pop
fisttps
adc
aam
dec
lds
or
call
movsb
xchg
inc
mov
add
dec
ss
add
inc
jmp
xor
movsl
mov
dec
jno
cmp
fiaddl
es
mov
add
add
mov
inc
fists
add
xchg
xchg
aas
add
inc
jns
pop
in
push
sub
cmp
xchg
aad
nop
ret
nop
fdivl
cs
aas
sbbl
cmp
jg
dec
or
cli
cs
cld
dec
sbb
jg
push
and
mov
xchg
sbb
sar
negl
mov
mov
xchg
sbb
add
add
xor
popa
mov
orl
movsb
sti
sahf
and
mov
arpl
mull
adc
jg
xor
nop
loopne
jg
das
sub
repnz
mov
dec
sub
std
daa
std
mov
pusha
mov
mov
and
in
jg,pn
pop
xchg
lock
mov
fs
add
add
pop
or
aad
add
cmpl
xor
mov
ret
push
out
cs
mov
fs
jno
push
jmp
out
sbb
jmp
cmp
fistpll
sub
adc
cli
push
cs
ljmp
scas
jp
test
loop
adc
pushf
mov
mov
push
jae
add
add
add
pop
sub
out
iret
sbbb
ret
mov
into
js
fisubs
fiadds
dec
adc
cmc
sub
jg
data16
ficompl
dec
subb
mov
mov
xor
cmp
scas
sahf
dec
lahf
jmp
mov
shlb
jle
repz
sahf
xchg
pop
and
pusha
test
xor
add
add
add
or
dec
sbb
popf
fs
and
mov
mov
dec
cmp
scas
lods
add
les
push
xlat
sub
push
add
rorl
in
ret
push
and
inc
jne
dec
fsts
mov
cmpsl
hlt
jns
jge
pushf
sub
add
push
push
mov
mov
and
data16
add
add
dec
jno
lcall
loop,pn
outsl
cs
pop
cmpsl
popa
mov
dec
sbb
aad
sbb
ja
ret
mov
inc
jg
push
int
enter
pop
xor
xchg
lock
cmpsl
or
fwait
push
das
adc
outsb
push
int3
daa
cs
push
outsb
cs
sub
popa
lods
lahf
lret
in
test
out
fisubrl
mov
add
add
lret
mov
jle
std
std
ja
cwtl
icebp
xchg
xor
jmp
push
dec
mov
and
sahf
loope
setb
std
std
sbb
ljmp
sbb
pop
xchg
sub
mov
sbb
popf
outsl
or
push
jns
add
out
out
ret
and
fdivrp
sub
mov
dec
or
add
add
add
and
mov
pop
cmc
ljmp
push
mov
nop
or
mov
mov
pusha
mov
icebp
int3
jns
cld
cmpsl
mov
cltd
jle
jmp
out
fwait
jl
scas
movsb
xchg
mov
mov
mov
in
jns
outsl
lock
out
nop
aad
xchg
inc
js
cmpb
sti
filds
add
clc
mov
int
sbb
out
or
mov
mov
or
pop
sub
out
jnp
ret
dec
cltd
mov
cmpsb
lret
inc
data16
inc
movsw
lret
es
jns
test
cwtl
pop
mov
out
xchg
xchg
es
test
mov
dec
mov
and
icebp
xchg
push
bound
fs
push
es
add
add
add
sbb
jbe
scas
enter
bound
mov
stos
adc
mov
andb
xchg
mov
dec
cmp
call
and
push
adc
sti
stc
xor
stos
aas
push
std
out
add
or
in
imul
mov
rorl
lret
add
aad
add
add
add
enter
es
pushf
fs
jno
mov
cmp
jp
sbb
clc
aam
mov
sbb
add
mov
out
sbb
test
dec
sbb
inc
pop
sbb
out
loop
mov
inc
in
repnz
cmp
sbb
pop
xor
cli
cmp
cmp
mov
push
insl
js
inc
int3
rclb
add
add
add
std
testb
cmpsl
fisubs
sbb
xchg
jg
ljmp
rcrb
jns
mov
std
call
sub
adc
scas
cmc
and
out
xor
or
jo
lods
add
jae
scas
adc
xor
rcrb
outsb
and
cwtl
add
mov
add
sub
add
add
add
dec
or
pop
ds
leave
sbb
rorb
dec
pop
xchg
dec
and
and
and
xchg
inc
and
enter
mov
adc
fcoms
lds
pop
lock
xchg
or
mov
mov
push
rcrb
repnz
xchg
inc
and
jge
incb
add
add
add
adc
mov
push
aaa
int
adc
dec
adc
xchg
int
push
dec
mov
add
jbe
repz
pop
dec
in
jl
mov
pop
sbb
es
xor
xchg
outsl
dec
sub
mov
add
adc
mov
icebp
xlat
add
jg
or
ja
jns
xor
add
add
lods
fisubrl
add
cmpsb
adc
push
sbb
cs
mov
mov
loopne
into
jmp
adc
loopne
ljmp
test
mov
popf
out
scas
jmpw
test
iret
mov
hlt
rol
inc
jmp
jl
or
in
and
add
lahf
push
xor
jge
jmp
add
add
add
mov
jmp
push
in
push
sub
in
mov
add
or
mov
jmp
rolb
jmp
jl
add
or
std
call
cmp
loope
dec
scas
pop
jmp
les
add
dec
scas
pushl
jnp
cmp
jl
xor
add
add
add
outsl
dec
push
xchg
addb
mov
push
nop
stc
push
out
jl
push
orb
lock
outsb
adc
popl
testl
mov
or
xor
pop
ret
bound
cwtl
xor
mov
mov
das
js
or
xchg
mov
add
add
dec
or
push
ficoms
mov
or
jae
leave
flds
cli
or
or
cld
gs
sub
loope
xchg
cli
out
xchg
mov
xor
or
xchg
jg
into
add
push
xchg
daa
or
sbb
adc
data16
or
mov
or
add
add
mov
mov
cli
popa
mov
xchg
jae
imul
mov
clc
dec
stos
sub
in
push
orl
mov
sub
loopne
or
sti
fstl
lods
sti
out
ljmp
and
xchg
ss
jecxz
cmp
ss
ffree
hlt
data16
ret
ljmp
add
xchg
pop
inc
add
fnstsw
lret
les
xlat
pop
or
mov
dec
add
add
push
sbb
in
call
sub
mov
lods
adc
push
sbb
in
xchg
xchg
cmpsl
or
sbb
jne
push
jb
icebp
mov
mov
jmp
or
mov
lods
adc
add
add
cli
sbb
cmc
int
add
fisttps
adc
add
cmp
and
in
pop
stos
hlt
aaa
jne
add
enter
stc
pop
adc
sub
cmp
notb
lcall
inc
repnz
mov
or
in
add
and
mov
cli
jae
imul
and
add
add
add
fndisi(8087
pop
inc
repz
sbb
int
dec
jae
fsqrt
mov
mov
fistpl
dec
pop
jo
mov
or
addl
sarb
and
sbb
jp
mov
rcll
roll
imul
xchg
mov
pop
inc
dec
rol
ret
push
sarl
sub
add
add
add
cmpsb
jl
pop
xor
pop
xor
fimull
pushf
xchg
shl
mov
inc
inc
int
ja
xchg
mov
dec
test
adc
mov
ss
imul
mov
inc
in
sahf
jo
mov
sahf
inc
lds
scas
ret
lock
jp
jb
aaa
cld
mov
sub
add
add
add
pop
push
or
out
mov
mov
in
lcall
cmpsb
and
shll
aad
ret
cmp
mov
lods
sub
data16
jns
test
or
lcall
push
sub
lret
mov
pop
cmp
mov
cmp
cld
dec
mov
hlt
inc
add
add
add
mov
inc
fs
sbb
nop
and
mov
cmpsb
pusha
lret
pusha
cmp
xchg
push
rcll
xchg
pusha
jmp
fsts
mov
fnstenv
sbb
into
and
ja
jo
mov
aam
mov
mov
mov
push
jecxz
rcrl
adcb
add
add
add
inc
icebp
flds
push
es
xor
jae
mov
ljmp
leave
clc
mov
inc
js
mov
jg
dec
jg
pop
mov
insb
cmc
rol
cmp
cmp
aad
mov
cmpsb
repnz
mov
iret
stos
push
jo
mov
hlt
jmp
loopne
add
add
add
cmpsb
jp
fildll
loopne
out
aaa
sbb
mov
loopne
gs
stc
fisubrs
pop
mov
popf
fwait
int3
fistps
fists
je
or
xor
cld
stc
faddp
inc
push
mov
or
test
adc
dec
subl
pop
mov
mov
mov
push
inc
repz
mov
out
aaa
sar
add
add
add
pop
fsts
jo
mov
stos
repnz
xchg
mov
pop
loope
fimull
sarl
sub
mov
inc
xchg
inc
inc
rolb
xchg
loopne
shl
mov
inc
jb
xchg
shlb
mov
push
sbb
stc
aas
scas
orl
add
add
stc
xchg
int
pop
imul
sti
mov
xor
imul
enter
loope
ljmp
pop
mov
mov
xorb
xor
jnp
dec
out
dec
or
sbb
mov
bswap
out
inc
pop
mov
sub
clc
xor
daa
mov
push
lods
add
add
add
add
mov
lret
add
cld
int3
dec
repz
push
lea
fldcw
add
or
add
aaa
imul
pop
jl
mov
rcrb
daa
sbb
jbe
shr
push
pop
in
pop
fiaddl
test
ss
adc
and
mov
out
sti
fstps
loop
fcoms
add
add
add
xor
sbb
jb,pt
xchg
push
std
daa
mov
imul
ds
xlat
xchg
int
cwtl
dec
inc
cmp
cld
mov
jmp
pop
mov
ds
xchg
sarb
negb
sahf
out
daa
pusha
lret
pop
fmuls
dec
cmpb
pop
mov
imul
adc
mov
add
add
add
imul
int3
insb
jmp
filds
cmp
fisttps
push
cmpsl
out
scas
inc
sub
fisttps
loope
bound
roll
je
sub
std
add
test
xchg
scas
sahf
sub
ja
jle
addl
mul
pop
and
mov
xchg
and
sahf
scas
add
add
add
outsb
popaw
mov
test
je
add
into
jae
in
jo
add
add
push
cmpsl
cltd
mov
outsb
mov
cmp
nop
cld
sub
sahf
scas
cmp
push
sub
jno
jle
and
cmp
hlt
push
aam
mov
outsl
cmc
and
mov
push
shrl
and
aas
xchg
add
add
add
aas
xorb
lahf
negl
and
cmpsl
pop
cmp
dec
cmp
stos
xor
mov
push
push
add
in
sub
jle
and
push
mov
bound
or
xchg
rorb
arpl
in
sahf
cmpsl
add
enter
mov
outsb
jle
outsb
andb
inc
mov
add
add
add
or
xchg
mov
dec
js
mov
mov
imul
outsl
pop
daa
xchg
or
add
mov
mov
jl
in
or
in
mov
insw
cmp
mov
rorl
xchg
call
cli
daa
add
push
sub
mov
mov
sub
push
jbe
add
push
add
add
add
sub
add
mov
push
jle
aad
mov
push
sahf
xchg
dec
mov
mov
mov
mov
mov
out
scas
push
mov
cmp
mov
push
mov
dec
sub
std
dec
mov
mov
test
sti
in
add
add
add
add
mov
mov
data16
xchg
dec
ret
arpl
inc
mov
sub
jae
mov
push
mov
or
ljmp
popl
jnp
jp
dec
xlat
stos
scas
jp
mov
dec
xchg
stos
mov
mov
dec
pushf
and
sahf
scas
add
add
add
sbb
fists
outsl
push
sbb
out
rorl
sbb
mov
out
sbb
sbb
mov
outsl
cwtl
sbb
pop
mov
add
inc
jns
xchg
and
jns
inc
lahf
xchg
in
jge
jae
punpckldq
lret
ss
push
imul
call
jle
aas
pop
pop
push
pop
mov
add
add
add
mov
add
push
mov
jge
inc
imul
jge
cltd
pop
bound
ret
xor
popf
inc
js
xchg
pop
jge
subb
into
and
rclb
rdpmc
pop
xchg
mov
lea
out
add
icebp
mov
pop
xchg
xchg
int3
push
xchg
mov
mov
lahf
mov
dec
xor
ljmp
add
and
push
mov
cmp
mov
ja
pop
call
je
mov
outsl
xor
mov
orb
sbb
xchg
cmp
jg
mov
sbb
pop
aaa
cmp
xchg
and
add
xchg
jp
addr16
call
inc
inc
cmp
mov
mov
imul
cwtl
cmc
pop
nop
shr
mov
std
add
add
add
popa
fidivl
xchg
arpl
mov
imul
fwait
data16
fidivl
test
idivb
xchg
std
mov
fisubl
mov
mov
lea
xchg
std
rclb
js
in
xor
ret
ss
cmp
mov
insl
jb
xlat
mov
rorl
mov
mov
add
mov
lahf
mov
or
xlat
jno
mov
ss
xchg
je
movsb
dec
sub
or
or
test
jns
aaa
inc
cltd
mov
mov
xor
insl
mov
bound
bound
outsb
iret
repnz
jge
jmp
mov
popf
dec
rcrb
push
leave
cltd
add
add
add
mov
and
adc
out
sahf
pop
rolb
stc
jmp
dec
rolb
mov
ret
dec
mulb
leave
rorb
ret
jbe
shlb
mov
aaa
adc
aam
repnz
xor
das
xor
push
add
ret
or
or
adc
sub
sbb
add
add
in
cmp
out
push
xchg
filds
and
jns
ds
dec
sbb
scas
xor
je
dec
jecxz
cltd
lea
cmc
lret
adc
scas
add
fmuls
jg
jg
mov
cmp
push
pop
out
jp
sbb
jle
popf
loop
jp
sbb
xchg
loop
sub
test
add
aas
daa
mov
fdivs
mov
addr16
rcr
pop
push
dec
pop
mov
jg
mov
mov
je
icebp
jmp
into
mov
out
fcmovb
push
or
xor
pop
mov
mov
aas
rcrl
in
pop
hlt
push
xor
push
xchg
mov
cmp
add
add
hlt
cld
adc
in
mov
mov
jmp
pop
xor
sahf
adc
mov
clc
and
xchg
lock
push
cmp
and
fdivs
sbb
out
xchg
mov
out
repz
repz
add
jl
out
ret
into
push
add
add
add
mov
out
pusha
loop
std
xchg
inc
push
jnp
push
ret
cltd
jbe
loopne
jp
mov
dec
dec
cmc
fwait
pop
mov
cld
ja
ret
inc
cmp
cld
jg
xchg
mov
inc
mov
sub
cmp
popa
ljmp
sbbl
sbb
jg
sarb
add
add
add
jns
xchg
push
and
add
adc
shl
inc
xlat
rol
in
leave
lods
shll
xorb
xchg
add
mov
imul
outsl
dec
aam
je
js
mov
ja
mov
mov
push
sub
jo
insl
push
xchg
push
adcb
cmpsb
jae
pop
jmp
xlat
addr16
in
lcall
add
add
sub
add
sbb
rcr
xor
int3
loop
mov
jno
out
xlat
adc
sti
in
mov
inc
jae
iret
insl
cmpsl
push
mov
push
dec
out
pop
imul
fcomps
popl
push
rorl
insl
xchg
inc
mov
jnp
sti
test
dec
out
pop
add
add
add
fcoms
insb
push
hlt
sti
lahf
jl
mov
sub
push
ret
imul
mov
pop
cwtl
push
jge
shl
sti
push
js
fcmovne
and
mov
insb
in
or
push
fimull
lods
pop
sti
scas
icebp
ds
ljmp
push
stos
clc
adc
in
pop
aad
aad
pusha
lods
sti
std
icebp
xor
add
pop
or
add
add
add
mov
mov
xchg
loop
push
sbb
cld
sahf
loope
jge
loopne
jg
mov
xor
pop
mov
mov
mov
push
push
mov
das
mov
jae
push
jnp
movsl
in
cmp
out
repz
jbe
pop
insl
iret
out
fmull
or
int3
fadds
pop
add
add
add
mov
jg
into
mov
in
faddp
mov
fstps
rcr
add
out
dec
ja
insb
push
dec
shr
jmp
sub
pop
ret
clc
sti
out
loop
iret
pushf
cld
dec
imul
cld
jg
dec
mov
ljmp
icebp
dec
int3
sti
pop
pop
mov
dec
adc
mov
roll
add
add
add
adc
loopne
adc
jg
pop
ficomps
lods
or
push
or
out
xchg
addr16
xor
sbb
pop
cmp
sbb
sub
sbb
add
sbb
cmp
mov
arpl
lcall
push
push
jg
pop
add
sub
movsb
push
mov
iret
xchg
add
add
add
push
call
sbb
mov
les
add
iret
sbb
or
mov
sbb
cmp
shll
mov
add
or
stc
mov
push
iret
and
loope
test
lret
push
push
or
and
into
stc
cmpsb
dec
add
mov
jne
add
add
add
push
or
adcb
repz
or
add
jmp
mov
stos
adc
in
std
shlb
pop
hlt
cmpsb
mov
lock
iret
stos
pop
adc
adc
add
lret
or
add
mov
push
mov
inc
xor
inc
lods
and
sub
dec
xchg
mov
int3
add
add
add
add
sub
addb
out
mov
inc
loop
mov
roll
add
imul
or
push
mov
adc
xor
test
test
xor
nop
lea
dec
call
push
cmp
sbb
push
pushw
mov
incb
sbb
push
xchg
push
rclb
int3
push
out
add
add
add
sbb
adcl
jge
mov
loope
or
xchg
inc
or
adc
inc
sbb
mov
add
cmp
pop
les
popa
sbb
lds
mov
inc
or
add
jg
push
xchg
push
pop
int3
mov
push
xor
leave
lret
stos
xchg
int
add
add
add
adc
fs
jp
pop
dec
adc
xchg
ucomiss
data16
add
sub
out
mov
rorl
movsl
xlat
push
add
daa
add
fmuls
sbb
xchg
js
push
mov
add
sbb
js
pop
fsubrp
movsl
or
push
roll
out
mov
add
add
add
lcall
adc
dec
call
lds
lret
inc
cli
mov
hlt
cli
lret
sub
mov
gs
in
add
fiaddl
outsb
mov
clc
push
sbb
test
push
add
stos
adc
sahf
bound
shll
add
add
add
pop
lods
cmp
sub
mov
cs
cmpsl
mov
push
jnp
pop
fs
push
stos
cmp
in
mov
dec
push
cltd
xchg
in
insl
inc
cli
sbb
sub
jmp
lret
add
mov
push
jp
cmc
jne
inc
adc
mov
cmp
push
add
add
add
or
shlb
pop
cli
fmuls
sub
cli
jmp
mov
jbe
sub
cmp
sti
adcb
clc
sub
inc
xchg
shl
test
mov
ret
addb
aam
or
mov
cmp
mov
or
or
or
or
sbb
add
add
add
dec
mov
pop
cmpsb
xlat
or
das
shl
jne
sbb
je
or
or
or
sti
cmp
popf
mov
mov
xor
icebp
or
jle
add
cld
inc
mov
push
adc
xchg
popl
mov
pop
mov
mov
or
out
fldt
out
add
add
add
jbe
test
xchg
aas
fbld
dec
mov
xor
call
out
ds
xchg
fstpt
push
scas
stos
sbb
mov
cmp
mov
rcll
fs
jnp
mov
or
xor
dec
popa
jbe
dec
loope
add
and
mov
pop
add
add
add
sti
imul
shlb
mov
xlat
ror
mov
shl
mov
loope
dec
rcrl
cmp
scas
inc
fistpll
jb
sub
mov
sbb
cmpsb
push
pop
fxch
test
dec
pop
loop
fnstenv
movsb
ret
cmp
mov
mov
add
add
add
mov
inc
and
mov
scas
mov
sbb
fmuls
andb
or
sub
fstpt
clc
push
stos
sbb
fwait
sub
push
mov
jno
mov
ds
addr16
mov
mov
jns
fcomps
mov
push
sub
mov
adc
xchg
sub
stos
inc
add
add
add
add
sarl
dec
add
leave
adc
gs
push
or
in
fcomi
fcmovu
cmp
mov
sbb
push
ret
jo
scas
mov
cmpsb
les
mov
js
and
cmp
repz
fsts
mov
es
sbb
adc
pop
js
mov
inc
pop
in
jns
aaa
loope
ja
add
add
add
mov
xchg
popa
test
int
jo
cmpsb
loop
sahf
sbb
out
and
push
cld
push
add
push
cmp
movsb
mov
stos
ds
iret
and
mov
enter
lock
and
cld
repz
sub
outsl
add
cmp
inc
fucomi
xor
mov
shlb
add
add
add
dec
fidivrs
fwait
jmp
sbb
sbb
and
jmp
pop
mov
cmp
call
int3
pop
and
mov
jl
pop
js
xor
js
xlat
adc
cmpb
shl
push
add
loopne
shrl
xlat
mov
sahf
push
mov
test
dec
fistpll
fdivrs
add
dec
fiadds
imul
popa
ret
pop
roll
imul
les
rcrl
ljmp
je
cmp
fdivr
popf
or
int3
pop
add
push
imul
inc
sub
pop
fcmovnu
cli
jbe
cmp
daa
add
xchg
rcrl
add
add
test
xor
mov
sahf
rorl
mov
mov
mov
es
and
xor
mov
icebp
cmc
jg
loopne
rol
loope
xor
subb
mov
xorb
ja
fmul
dec
mov
xchg
xor
or
xor
frstor
jns
outsb
add
add
add
aaa
xor
xchg
cmc
addb
inc
or
mov
fisubs
lret
imul
inc
push
dec
movsl
inc
flds
add
xchg
adc
mov
into
and
icebp
icebp
pop
mov
psrlw
pop
sub
mov
fldenv
sbb
xchg
and
pop
inc
stos
xchg
out
inc
lods
pusha
pop
sub
fdivs
jp
dec
and
add
lods
loope
add
add
add
push
jns
lahf
shll
xor
shlb
inc
inc
subl
mov
je
pop
int3
xchg
mov
aam
xlat
shlb
sbb
sub
repz
lods
lret
popa
sub
aam
xlat
stos
mov
arpl
stos
loope
stos
aam
sbb
je
push
jp
mov
add
add
xor
or
arpl
fcompl
jl
and
aaa
sub
push
pop
mov
xlat
xor
xchg
xchg
mov
rcrl
push
shr
push
lds
jae
je
mov
sub
addr16
sub
lock
repnz
shlb
xchg
add
add
mov
addr16
out
pop
ffree
jne
scas
mov
jp
mov
mov
cmpsb
fwait
cld
and
pop
inc
xchg
inc
aas
push
xchg
jl
adc
mov
mov
push
xor
int3
push
mov
inc
xchg
inc
popf
sbb
jae
sbb
add
cmpsl
mov
jle
in
mov
add
push
stos
sti
sbb
cmp
add
add
repnz
add
sub
push
es
dec
sbb
mov
dec
in
mov
jnp
jle
lahf
outsb
subl
ljmp
into
adcl
inc
dec
shl
mov
jae
dec
sub
lcall
clc
testl
jbe
sub
add
add
add
or
xchg
cltd
adcl
xor
pop
jl
fcmovne
cmovp
jno
into
mov
sbbb
mov
pop
lock
pop
lahf
adc
or
test
jle
xchg
sbb
mov
cltd
daa
pop
mov
movsb
xchg
add
xor
mov
pop
mov
and
add
lods
fimuls
inc
or
outsb
insb
cmp
mov
addr16
ds
pop
test
inc
xchg
xchg
xchg
jmp
xchg
add
int3
fisttpll
mov
mov
cmc
pop
mov
cld
and
xorb
mov
fldt
xor
sbb
and
gs
jg
add
add
add
pop
push
nop
popf
sbb
outsl
xchg
dec
inc
in
inc
fbld
mov
xchg
add
fs
out
jle
push
aam
dec
add
aad
dec
pop
push
shl
jp
xchg
ds
inc
hlt
jnp
push
xchg
push
dec
cmp
fdivr
sub
cmpsl
pop
or
subb
jns
jl
xor
and
jae
add
add
add
pop
xor
dec
cld
xor
add
das
mov
or
cmpsb
sbb
mov
pop
scas
mov
iret
mov
jns
add
jns
pop
mov
dec
push
ljmp
add
pop
divl
or
std
mov
leave
push
test
std
dec
shll
sub
push
ds
out
add
add
add
shr
iret
mov
scas
loope
inc
push
aaa
jno
sti
mov
mull
sub
shll
xor
mov
sub
and
mov
and
loope
jns
xchg
inc
imul
loop
cmp
or
fcomip
in
add
jb
pop
xchg
xor
shrb
fldt
add
add
add
push
jae
fcompl
pop
mov
inc
push
xchg
cld
mov
cltd
jbe
mov
pop
mov
scas
gs
fcompl
and
or
test
pop
insl
jbe
int3
xchg
mov
xchg
dec
pop
add
sbb
mov
ljmp
jne
cmp
std
fs
push
xchg
inc
cmpb
add
add
add
mov
leave
sbb
sub
or
addr16
mov
inc
insb
cmpb
add
push
in
push
loop
mov
popa
sub
mov
mov
sub
scas
add
mov
mov
or
jg
in
pop
jne
test
jbe
jl
dec
leave
movsl
sbb
dec
mov
scas
dec
inc
stos
add
add
add
add
mov
xor
inc
sbb
push
ja
sahf
lock
fistpll
or
je
fs
pop
lret
jmp
mov
sub
push
lcall
out
sbb
jbe
push
fistpll
enter
shll
pop
inc
xor
je
mov
inc
fwait
outsl
add
add
add
push
and
mov
add
ja
js
pop
adc
xor
xor
aad
in
dec
pop
movsb
bound
addr16
mov
mov
jl
flds
jecxz
popf
enter
ljmp
xor
std
pop
out
adc
leave
stc
int
popf
or
mov
add
icebp
incl
add
add
add
sbb
push
stos
nop
pushf
fs
mov
fprem
xchg
sbb
ficompl
std
add
mov
and
adcb
xor
and
mov
sub
in
xchg
mov
adc
or
fnstsw
jnp
mov
jns
xor
pop
mov
daa
outsb
sbb
pop
movsl
clc
push
insb
xor
add
add
add
jecxz
stos
sub
adc
popa
lea
daa
insl
sbb
push
sarl
test
insl
loope
cmpsl
test
mov
aas
punpckhbw
insb
fstpl
lds
push
jae
adc
out
add
pop
test
call
xor
loop
or
mov
add
add
add
ja
and
loopnew
lds
mov
lds
ret
cmc
in
mov
jl
cwtl
lret
insb
mov
gs
xchg
jecxz
cmpsl
jo
insb
mov
je
jb
and
mov
rdmsr
xor
cwtl
out
mov
jne
loope
mov
sub
mov
stos
push
fbstp
imul
inc
loopne
mov
add
add
add
mov
adc
sbb
daa
cmp
leave
cmpsl
out
mov
fldcw
fsub
mov
in
pop
test
ret
daa
cld
xchg
sti
push
mov
dec
xor
daa
add
scas
jnp
mov
xor
sub
mov
pop
cli
out
dec
add
add
add
add
gs
or
cmp
int
nop
jecxz
push
into
and
out
cli
das
out
add
jp
das
repz
mov
bound
inc
cmc
cmp
mov
push
xor
subb
xchg
and
rep
jmp
mov
jecxz
daa
add
out
mov
mov
add
add
add
pop
mov
icebp
add
or
cmp
lret
repz
jmp
mov
and
std
pop
adc
ret
jg
ljmp
es
adc
adcl
outsl
shr
out
lcall
repnz
in
adc
js
jecxz
cmp
mov
fsts
dec
out
push
dec
mov
icebp
add
add
add
inc
cmp
mov
dec
nop
sahf
stc
imul
popa
or
out
mov
lea
mov
pop
ret
mov
mov
insb
pop
jmp
mov
fwait
or
and
mov
mov
jle
xor
sbb
scas
inc
inc
lds
xor
mov
enter
add
add
sbb
rcrl
cmpsl
inc
std
fsubs
addr16
mov
jnp
mov
lahf
mov
xchg
jle
sub
sbb
mov
sub
mov
mov
and
js
in
mov
cmp
xchg
jecxz
mov
daa
ret
int
add
push
fadd
pop
fwait
es
add
add
add
outsb
hlt
sti
push
jb
mov
sbb
stc
jp
inc
pusha
lret
sbb
cmp
das
ja
pushf
es
scas
push
test
mov
in
out
test
imul
fisubs
lcall
hlt
xlat
mov
bound
jp
aad
jp
aaa
insl
ss
out
xor
sti
sbb
cli
add
add
add
addr16
loopne
cmp
dec
xor
adc
and
add
int3
mov
leave
and
sahf
adc
jl
push
jle
jne
aas
orl
push
push
repnz
pop
sub
add
inc
mov
divb
pushl
dec
in
std
decl
push
jmp
adc
jp
cmc
and
out
call
add
push
push
idiv
loopne
and
loopne
push
mov
pop
push
jmp
mov
or
sbb
test
cld
into
movsb
xor
cmp
mov
mov
or
or
jae
inc
cli
sbb
sahf
adc
jmp
add
sahf
arpl
insl
sarb
or
std
mov
add
add
add
and
sbb
push
gs
in
int3
jae
pop
pushf
sub
std
je
mov
fistpl
ret
dec
push
jle
push
ficoml
xor
xor
mov
std
dec
mov
dec
arpl
out
loop
or
jecxz
lret
hlt
push
mov
xchg
dec
in
pop
and
mov
out
in
out
jge
clc
cmp
cmpsl
add
add
add
jl
add
into
shlb
mov
xlat
push
add
push
outsl
mov
dec
in
ret
dec
add
mov
leave
add
jbe
or
loop
xchg
or
mov
fdiv
outsb
lock
push
rorl
add
jge
call
jb
add
add
add
mov
shrl
or
sbb
call
stc
push
gs
xchg
push
push
adcl
iret
sti
out
test
fwait
or
mov
and
test
test
cmp
lock
fs
pop
pcmpeqb
jae
cld
mov
jmp
popa
xor
add
add
fwait
mov
mov
xor
push
imul
mov
add
outsb
and
adc
jl
jbe
mov
ss
decl
and
pop
adc
test
fwait
add
inc
bound
pop
ljmp
push
push
xor
jbe
mov
add
add
add
sub
jns
les
insl
add
pushf
pop
xchg
fimull
cmp
fstps
add
add
dec
adc
mov
push
jmp
push
bound
jne
scas
or
cmp
mov
xchg
cmp
or
xor
loop
lea
add
add
add
testl
aas
or
add
int3
cmpl
or
sti
sbb
hlt
aas
or
lcall
mov
add
add
sahf
add
test
xor
fs
sub
xchg
stos
add
mov
push
or
ljmp
mov
pop
push
movsb
out
lret
pusha
sahf
add
add
add
mov
push
or
out
lahf
xchg
loopne
xchg
ret
or
flds
sub
mov
ret
icebp
xor
add
mov
testl
aam
sbb
jmp
mov
pop
jb
jg
xor
int3
jge
jne
in
add
aas
test
xchg
xchg
insb
jmp
mov
xor
add
add
add
imul
call
mov
inc
or
mov
cmp
mov
jae
fisttpll
mov
call
sbbl
sbb
cmp
gs
lahf
add
or
scas
adc
mov
in
cmp
incl
add
add
add
add
stos
ja
sbb
or
mov
cmc
jne
ret
hlt
movb
stos
outsb
cmp
and
aas
push
stos
lea
push
jmp
or
shlb
cmp
fdiv
jne
leave
inc
inc
pop
mov
inc
stos
jg
fnstcw
rcr
mov
stos
sahf
xor
flds
add
add
add
xchg
inc
lcall
inc
fnstenv
inc
mov
mov
mov
dec
mov
es
cs
push
lods
mov
nop
mov
dec
dec
cmpsl
cld
fidivrl
cmc
cmp
aaa
xchg
mov
push
outsb
cmp
xor
pushf
sub
push
xor
mov
add
dec
insb
push
dec
int
push
jne
mov
fisubrl
sub
push
inc
mov
mov
mov
roll
pop
lcall
pop
mov
and
sbb
push
mov
cmp
mov
cli
stos
and
push
mov
popa
xor
pop
xchg
scas
xor
clc
shlb
add
add
in
loopne
sbbb
pop
add
mov
mov
add
mov
sbb
xor
sub
fnsave
sarl
dec
xchg
test
sahf
push
js
mov
stc
flds
and
fsts
cmp
repz
dec
sahf
ret
cmpsl
daa
data16
push
loope
dec
jg
in
push
sbb
jl
xchg
add
add
add
sub
mov
adcb
mov
arpl
pop
mov
jno
inc
push
outsb
fiadds
daa
lret
repz
ss
call
mov
mov
xorb
testl
add
push
sub
sbb
cmpsl
jp
fsubr
mov
jl
dec
ss
mov
ljmp
add
add
mov
mov
xchg
xchg
daa
pop
cmp
pop
dec
pop
mov
jecxz
nop
jmp
jnp
xlat
es
pop
pop
leave
xchg
fmul
inc
sbb
fbstp
push
fcompl
sub
mov
mov
push
xlat
bound
mov
jnp
adc
xor
imul
inc
add
add
add
scas
mov
inc
mov
cmp
in
mov
lea
into
pop
out
push
mov
xchg
popa
and
lock
mov
test
mov
mov
cmpsb
push
mov
or
pop
jle
pop
hlt
xlat
mov
push
jge
sahf
jmp
lock
mov
jge
or
fiaddl
add
add
add
mov
mov
xor
inc
bound
cmpb
jge
mov
mov
xchg
push
mov
into
add
bound
sbb
ret
inc
mov
out
adc
mov
es
lods
arpl
xor
push
mov
jo
xor
faddl
sbb
xchg
addr16
rolb
add
add
add
dec
push
xlat
enter
clc
sbbb
push
push
jae
add
lods
dec
pop
imul
pop
aaa
mov
push
enter
rcrl
and
imul
rcr
pushf
push
shrl
mov
dec
sub
add
arpl
sub
sahf
lret
sbb
dec
xlat
popl
add
add
add
lods
push
scas
cmovg
mov
jmp
lods
cli
daa
cltd
mov
jmp
mov
inc
mov
stos
and
and
mov
sbb
push
push
sub
pop
add
clc
nop
mov
loopne
in
iret
sbb
inc
pop
sahf
mov
fdivl
mov
pop
xchg
dec
adc
loope
loopne
lcall
add
int
mov
into
sbb
mov
scas
insl
ret
sahf
mov
cmc
imul
push
mov
mov
xorb
mov
mov
mov
push
aad
sbb
sub
cmp
dec
pop
mov
outsb
push
inc
inc
inc
pop
inc
inc
inc
test
mov
and
push
add
add
add
gs
add
jl
xchg
or
ja
scas
sahf
lea
push
jg
cltd
mov
add
mov
or
dec
add
loopne
or
add
xchg
cmp
outsb
test
xchg
lahf
add
mov
or
dec
add
mov
xchg
jle
or
jne
pop
jl
add
add
add
nop
jns
rorl
pop
push
test
pop
bound
xchg
sub
or
addb
in
add
and
add
mov
add
push
inc
loop
imul
push
mov
andb
mov
pop
imul
outsb
cmp
mov
test
jno
and
movsb
add
add
add
xorl
cmp
cmp
mov
bound
int3
fisttpll
jnp
sub
arpl
stos
mov
sub
mov
ret
movsb
int3
mov
out
add
sbb
xchg
mov
cmp
aaa
repnz
mov
ja
daa
xor
lds
jg
adc
add
add
add
stos
imul
out
es
outsl
pop
std
mov
pop
jg
test
sahf
cmp
mov
push
mov
mov
xchg
push
xchg
test
xchg
jo
nop
xor
out
add
mov
ja
scas
mov
sti
sub
loopne
cwtl
jno
cwtl
in
fldcw
add
add
mov
adc
jo
mov
cmpsb
hlt
jle
xor
stos
fildl
dec
push
nop
add
icebp
inc
mov
scas
lret
or
ficoml
rcr
add
decb
mov
scas
jne
inc
sub
jns
mov
lcall
cwtl
mov
add
and
add
add
add
in
jb
add
fldt
or
mov
dec
nop
cmp
scas
inc
fcmovnu
dec
int
pop
mov
addr16
mov
xor
jmp
subl
jns
sub
std
dec
push
scas
mov
mov
xchg
or
pop
stc
mov
rorb
jno
nop
add
xchg
fldenv
add
add
add
stos
xor
jge
adc
pushf
and
jle
xor
repnz
stc
or
mov
movsb
sub
imul
stos
les
bnd
insl
cld
loopne
iret
call
and
popa
ja
nop
add
jge
inc
stos
imul
js
jae
add
iret
mov
add
add
add
sub
sti
call
mov
mov
out
ljmp
stos
outsb
xchg
mov
outsl
insl
mov
pop
and
jnp
or
push
test
add
inc
es
mov
ja
adc
pop
dec
movsb
inc
aam
mov
cmp
test
aaa
mov
mov
nop
add
add
add
je
inc
mov
mov
dec
cld
push
or
add
mov
jle
xor
push
std
or
arpl
cwtl
icebp
sbb
inc
mov
mov
cmpsl
out
mov
repz
mov
fwait
sub
mov
add
xor
dec
mov
add
fistpll
out
add
and
add
add
add
clc
mov
pop
push
into
cmpsb
add
movsl
and
add
nop
mov
add
out
or
or
and
sbb
xor
xor
dec
add
or
mov
xor
data16
ljmp
fimull
fldt
add
ja
arpl
sbb
add
imul
mov
scas
dec
movl
inc
in
lods
mov
dec
adc
lds
add
sbb
xchg
xchg
daa
jne
dec
jle
cmpb
sti
add
addr16
xchg
mov
test
pop
enter
dec
add
add
add
or
jne
shll
jbe
in
cmp
push
loopnew
mov
xchg
ret
repz
jge
push
ljmp
adc
inc
fwait
lret
cmpsl
jbe
out
shl
sbb
jbe
push
test
mov
fadds
mov
add
add
or
jns
ret
mov
in
mov
add
add
add
insb
or
fcoms
stc
or
movsb
cwtl
mov
in
js
rorb
fwait
mov
inc
mov
cmp
scas
mov
cmp
or
ja
mov
leave
out
xlat
adc
inc
xchg
pop
or
xchg
add
jno
mov
mov
lahf
lret
test
in
js
pand
add
add
add
and
repz
push
pop
repnz
cmpsb
push
xor
push
jmp
push
xor
pop
xchg
repnz
sahf
inc
xor
fcompl
lds
ret
and
sti
std
icebp
push
add
jno
mov
outsb
jge
jge
sbb
push
es
pusha
xor
mov
xor
xchg
xor
cld
mov
popa
mov
add
add
push
xchg
ja
mov
mov
mov
sti
jns
and
orb
xchg
out
cli
insl
lea
xchg
inc
repz
jnp
movsb
cli
push
inc
adc
push
xor
dec
sbb
push
or
inc
out
lea
cmc
pop
mov
arpl
fsubrl
mov
mov
daa
out
add
add
add
jns
mov
pusha
mov
jle
orb
inc
nop
lea
mov
and
out
jnp
push
cld
jl
inc
das
pop
mov
cld
jl
jmp
imul
push
mov
test
hlt
push
push
add
xchg
mov
sbb
pushl
mov
jae
mov
mov
mov
xchg
mov
push
inc
add
add
add
add
scas
in
and
lds
cmc
je
dec
mov
inc
stos
mov
and
scas
movsl
xlat
mov
xor
dec
decl
pop
call
iret
jbe
scas
lds
mov
lea
in
cmp
sti
js
add
lret
mov
rol
xor
mov
in
cli
sbb
jnp
cmp
add
add
add
sti
mov
fsubr
aam
or
xchg
imul
sbb
je
ljmp
dec
cmc
mov
xor
les
imul
inc
inc
or
out
inc
mov
adc
jg
ja
dec
pop
ss
aaa
mov
sub
mov
cmp
cmp
xchg
add
add
add
ret
or
lea
repnz
sahf
enter
cmp
xor
std
das
mov
xchg
repnz
repnz
jns
dec
jns
stc
std
lods
cmpl
enter
and
hlt
out
cld
dec
dec
adc
std
dec
les
je
jnp
test
add
add
add
stos
outsb
cmpsl
lcall
cmp
xchg
mov
aam
lods
cmp
into
lahf
cltd
int3
add
dec
scas
xor
pop
jl
sbb
inc
or
into
addb
pop
inc
mov
jg
dec
out
xor
fwait
cmp
push
out
jge
dec
mov
add
add
add
or
jecxz
pop
es
jns
inc
ret
inc
add
xchg
xchg
xor
stc
rolb
jb
pop
push
pusha
pusha
rcr
jns
pop
repnz
ret
stc
xor
jp
mov
stos
mull
xchg
fwait
mov
repz
mov
inc
icebp
repz
cmp
xchg
cmpsl
fildl
add
add
add
jge
mov
int
fadd
push
orl
add
scas
ljmp
outsl
xchg
aaa
dec
mov
out
jmp
sbb
inc
popa
add
add
dec
aas
ss
add
fidivl
push
mov
test
orl
mov
loop
inc
sbb
push
rcll
add
add
add
cmp
adc
inc
adc
xchg
outsb
or
adc
int
mov
test
daa
lds
xorl
test
jno
jnp
loope
stc
sbb
sub
add
jo
sbb
jecxz
mov
xor
addl
sti
in
outsb
mov
scas
add
add
add
jae
mov
xchg
in
ret
push
mov
adc
inc
xor
sub
fsub
sbb
shrd
jmp
xor
call
cltd
cli
sbb
push
or
jns
inc
mov
add
enter
mov
ss
in
incl
cmpsb
rorl
xlat
mov
add
add
add
in
cli
idivl
call
leave
in
jle
scas
adc
in
mov
or
inc
xorb
lret
jbe
inc
jae
or
gs
enter
xorl
leave
flds
jnp
in
jne
int3
aaa
sti
cld
inc
push
inc
or
and
fcmovnbe
cli
xchg
mov
sti
jge
and
add
add
add
aaa
hlt
insl
jmp
adc
fdivrs
test
leave
jle
clc
divb
jmp
add
out
mov
mov
cmp
dec
cmp
fsubs
notb
leave
xor
test
mov
push
push
repz
loope
xchg
loope
push
jecxz
or
pop
or
jmp
add
add
add
dec
into
jns
xor
aad
adc
push
adc
inc
or
or
out
add
nop
lea
dec
sarl
cmpsb
mov
mov
xchg
mov
cmp
rolb
pop
scas
mov
cli
pop
loop
add
hlt
cli
repnz
adc
mov
push
pusha
or
inc
jecxz
add
add
add
call
pop
add
fcmove
pop
sub
mov
jb
xor
in
mov
sahf
ja
std
call
loop
jb
fdiv
in
push
push
mov
add
add
movsb
jle
mov
jmp
inc
pushf
jg
mov
int3
icebp
add
mov
mov
inc
push
in
mov
mov
jge
add
add
add
mov
inc
add
mov
add
mov
mov
mov
inc
popa
add
push
clc
or
sub
add
mov
add
aaa
stc
add
add
test
jmp
loope
mov
mov
decl
jmp
test
cmp
pop
or
mov
and
int3
incl
add
add
add
and
pop
test
stc
into
xor
out
dec
jnp
xor
mov
mov
add
sti
dec
or
inc
adc
jl
adc
sti
dec
mov
jae
jnp
les
sbbb
orl
inc
adc
jbe
insl
cld
cmp
mov
and
rolb
xchg
add
add
leave
mov
adc
les
dec
out
aam
out
inc
jp
testb
lock
push
inc
add
std
scas
xlat
pop
adc
cld
add
jmp
cmp
fs
imul
dec
arpl
mov
mov
mov
xor
mov
aad
cmpl
push
insl
jno
mov
xchg
repz
push
add
add
add
xor
inc
mov
add
add
push
lods
lods
lods
mov
xor
popf
add
cmp
sbb
adc
enter
add
in
lret
test
sub
mov
scas
fldcw
jge
fistpl
xor
fld
pop
cli
mov
mov
iret
fldcw
add
add
add
loop
mov
mov
clc
daa
adc
sbb
inc
sub
and
xchg
adc
and
mov
add
pop
sub
ficompl
push
jno
sbb
sbb
adc
mov
shrb
xchg
mov
ja
fwait
imul
xchg
mov
enter
cmp
add
add
out
jno
mov
idiv
aad
push
mov
xchg
iret
pop
pop
loope
pop
mov
inc
xlat
cmpsb
xchg
or
pop
xor
inc
fcmovnbe
cmp
leave
stc
sub
cmp
or
sub
sub
addr16
or
sub
cmp
fcmove
jb
sahf
xor
mov
fdiv
in
and
dec
add
add
add
adc
pop
jge
ljmp
sbb
xchg
pop
xchg
cld
xor
ljmp
ret
rclb
addr16
dec
mov
pop
out
test
scas
mov
inc
loope
mov
add
xchg
mov
inc
mov
cs
and
iret
adc
pop
xchg
repz
jb
pop
add
add
add
call
sbb
pop
mov
pop
cs
mov
inc
jecxz
mov
mov
inc
push
sub
dec
sbb
xchg
xchg
mov
fcmovbe
cmp
pop
dec
xor
mov
icebp
jp
and
rcr
sarb
das
xchg
xor
mov
hlt
mov
xchg
fidivl
and
sub
push
test
adc
add
add
add
cld
push
xchg
pusha
mov
enter
pop
xchg
nop
lahf
or
rcll
daa
xchg
xor
cs
push
pop
pop
jmp
mov
out
jp
add
pop
mov
ja
pusha
sbb
or
neg
mov
jl
paddsb
test
xchg
sub
lret
pop
xchg
stos
mov
add
add
add
in
sbb
mov
out
push
mov
call
mov
and
dec
movsb
fst
dec
mov
pop
rorl
jp
adc
pop
sub
sbb
in
fisttps
push
fcoml
pop
push
ds
sub
push
mov
or
sti
xchg
les
add
add
add
push
mov
clc
addr16
xor
jmp
addr16
add
fldpi
inc
fisttps
mov
lret
add
cmpl
xor
in
lcall
sub
mov
dec
jb
push
popa
dec
push
dec
jo
push
aaa
xlat
mov
jl
push
out
push
out
xchg
or
xor
mov
push
sbb
add
add
test
jno
mov
adc
pop
cmp
adc
dec
out
repnz
aas
mov
mov
das
test
mov
cmp
cmp
mov
shll
fnstenv
leave
flds
dec
gs
testl
loopne
jp
mov
push
mov
aaa
xlat
test
add
add
add
in
or
shl
insb
fdiv
jecxz
ljmp
inc
icebp
sub
ds
repz
xlat
dec
ret
negb
dec
push
cmp
nop
gs
mov
jo
jb
mov
mov
xchg
imulb
dec
inc
cmp
dec
lret
js
sbb
shll
out
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
insb
repz
mov
sub
lock
sub
repz
jg
adc
inc
or
or
out
test
mov
stos
insl
insb
jae
mov
cmc
xchg
or
push
add
add
add
aas
repz
mov
lret
enter
in
push
fimuls
call
mov
add
cmp
test
mov
add
rorb
addr16
cmpb
add
add
scas
add
xchg
sub
clc
xor
add
and
inc
std
jp
add
mov
cmp
add
add
add
and
ss
add
or
mov
add
jmp
test
adc
pop
lea
incl
or
push
xchg
push
cli
mov
push
jnp
jle
push
outsb
dec
aad
inc
add
mov
lret
out
iret
shl
daa
addb
xlat
ret
adc
dec
push
je
clc
cmp
add
add
cli
test
lds
mov
or
adc
inc
jae
outsl
inc
adc
js
xchg
jnp
add
insl
ficompl
cs
or
mov
dec
andb
cmp
xchg
jl
mov
inc
sub
stos
incl
cs
mov
enter
js
cmc
add
add
add
push
mov
sub
pusha
pusha
and
loop
cs
aas
or
or
push
cmc
adc
cmp
scas
pop
pop
pusha
andb
repnz
imul
aad
sbb
xlat
ret
fidivs
add
mov
sub
cmc
jb
push
or
test
cmpsb
cmp
and
and
add
add
add
adc
sub
sbb
in
test
ljmp
xchg
xlat
xchg
or
psubsb
mov
mov
add
lds
add
lds
sbb
fiaddl
cli
aam
roll
test
add
or
inc
add
adc
sub
pop
jnp
xor
sbb
add
add
sbb
and
xchg
mov
mov
in
mov
inc
les
cmp
xor
adc
mov
inc
fdiv
jae
sub
data16
or
in
push
inc
cs
in
mov
cmp
cmpsl
push
jmp
in
mov
add
xor
xchg
ljmp
add
add
add
shlb
push
add
je
or
shlb
sbb
and
adc
add
test
add
fucomi
and
dec
jle
xchg
or
push
in
out
ficoml
pop
xorb
push
jp
and
int
add
or
dec
data16
and
pop
imul
sub
adc
stos
mov
add
add
cli
mov
mov
cli
push
and
std
mov
jne
dec
jae
daa
fimull
or
push
ja
call
jle
xlat
out
shl
es
outsl
mov
insl
mov
or
out
add
adc
es
daa
cld
fbstp
pop
mov
push
cmpsl
sti
aas
mov
insb
add
add
add
std
mov
cmpsl
add
and
xor
jno
cmpsl
add
or
outsl
pusha
mov
scas
js
mov
les
cmc
repnz
jo,pt
jmp
fnstenv
fucomp
and
jne
stc
scas
push
xor
or
stc
jmp
and
jmp
iret
xchg
test
add
add
fdivrs
inc
test
lret
jo
jb
fdivl
mov
enter
hlt
mov
inc
jle
ss
aam
inc
push
push
decl
adc
sub
mov
sub
adc
pop
jno
add
aaa
mov
jmp
addl
add
out
stc
mov
sbb
mov
fucomp
je
add
add
add
ret
sub
mov
ljmp
sub
movsb
mov
ss
decl
mov
xchg
adc
and
les
xor
inc
fdivs
movsb
shll
xor
pop
stos
out
mov
add
adc
stc
cmp
sub
test
into
lock
add
add
add
pop
std
jle
lcall
stc
mov
stc
testb
inc
or
add
hlt
fstl
inc
or
into
xlat
int3
into
push
xor
push
cmp
or
adc
cmpl
dec
xchg
xchg
dec
lcall
cmc
cmpsb
aad
or
adc
or
cmp
notl
add
add
add
push
lcall
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
add
add
or
out
or
out
or
out
or
out
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pusha
mov
add
add
xor
add
and
add
xor
add
and
add
lock
add
add
add
add
dec
inc
add
mov
add
mov
add
mov
add
dec
inc
add
mov
add
mov
add
dec
inc
add
mov
add
dec
inc
add
mov
add
add
aas
dec
inc
add
add
pusha
mov
add
pushf
std
decl
rclb
decl
pushf
std
decl
pushf
std
decl
out
inc
add
add
add
or
decl
pushf
std
decl
push
jbe
or
decl
lcall
or
std
decl
lcall
or
std
decl
lcall
or
std
decl
lcall
or
std
decl
lcall
or
add
add
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
add
add
or
sub
aam
out
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
mov
mov
add
add
and
add
jo
add
jo
add
jmp
inc
add
add
xor
add
adc
add
xor
pop
mov
and
add
lock
add
mov
add
mov
add
mov
add
xchg
inc
add
mov
add
mov
add
mov
add
pushf
std
decl
mov
inc
or
decl
pushf
std
decl
dec
ljmp
pushf
std
decl
pushf
std
decl
add
add
add
pushf
std
decl
pushf
std
decl
pushf
std
decl
pop
stos
aas
or
decl
pushf
std
decl
ljmp
decl
lcall
or
std
decl
lcall
or
mov
or
std
decl
lcall
or
out
or
cltd
scas
into
mov
add
add
add
add
mov
add
mov
add
mov
mov
mov
add
mov
add
mov
add
mov
cmpsb
push
mov
add
mov
add
mov
add
mov
test
mov
add
mov
add
mov
add
mov
cmpsl
into
mov
add
mov
add
mov
add
mov
cmpsl
cs
add
mov
add
mov
add
mov
test
mov
add
mov
add
add
add
add
mov
jmp
data16
jmp
or
add
jecxz
jmp
or
add
mov
mov
jmp
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
mov
add
mov
add
mov
mov
add
mov
add
scas
cmp
jo
add
jo
add
pusha
mov
add
or
jo
add
jo
add
pusha
mov
add
add
xor
push
cld
inc
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
cmp
lock
add
mov
decl
cwtl
xchg
or
std
decl
std
decl
push
xchg
or
decl
cmp
aas
or
decl
dec
xchg
add
add
add
or
std
decl
xchg
std
decl
fadds
aas
or
decl
sub
aas
or
decl
enter
jle
aas
or
std
decl
testb
push
mov
add
mov
add
mov
mov
mov
mov
mov
add
mov
add
mov
mov
mov
mov
add
add
add
mov
add
mov
add
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
add
mov
add
mov
mov
fisttpl
or
add
xchg
filds
jmp
add
or
add
nop
filds
fstl
mov
out
or
add
xchg
filds
jmp
or
add
xchg
filds
jmp
or
add
filds
jmp
or
add
xchg
filds
jmp
or
add
filds
jmp
add
add
add
or
add
mov
mov
add
sub
add
mov
add
mov
add
cli
fidivs
cli
ljmp
or
jmp
loop
add
out
add
out
add
loop
add
cmp
dec
loop
add
xor
cmp
jno
add
popa
mov
add
xor
add
and
cmp
sub
cmp
or
cmp
or
cmp
or
sub
cmp
or
std
decl
pop
call
add
mov
add
or
add
nop
ljmp
mov
aas
or
ljmp
cmp
aas
add
add
add
or
ljmp
inc
ljmp
int3
ljmp
dec
ljmp
inc
ljmp
sub
aas
or
jg
into
mov
in
inc
mov
xlat
dec
mov
in
ss
xlat
dec
mov
in
es
rorb
pop
out
push
mov
popa
or
in
or
addr16
add
add
add
hlt
mov
add
mov
sti
out
mov
sti
mov
add
mov
xchg
push
cmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
and
add
add
xor
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jo
add
pusha
mov
add
add
jo
jo
add
pusha
mov
add
add
or
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
mov
decl
fcompl
xor
sbb
and
sbb
and
sbb
adc
adc
add
add
repnz
adc
fs
sbb
sbb
add
pop
sbb
lock
pusha
sbb
sub
xor
hlt
sbb
mov
sbb
xlat
sti
sbb
xlat
add
cmc
xlat
or
int
mov
aad
fwait
sbb
xlat
stos
sbb
xlat
jnp
lods
inc
sbb
xor
aad
sbb
in
add
aad
jmp
or
add
add
add
fdivr
adc
cmc
fmuls
push
dec
fnstenv
push
push
fstps
push
sub
fldcw
push
fnstenv
jne
jnp
lods
flds
mov
dec
adc
push
fstps
test
sahf
cmp
scas
cmp
idivl
cmp
push
out
cmp
decl
cmp
negl
cmp
idivl
cmp
add
add
add
dec
cmp
pop
cmp
outsl
cmp
decl
cmp
cld
mov
jmp
or
xor
sbb
xor
cli
xor
std
divb
or
sbb
daa
xor
aaa
xor
mov
mov
int3
xor
xor
cld
xor
add
add
add
or
cmp
sbb
cld
ret
sub
sbb
cmp
insb
les
les
les
sarl
mov
jl
pushf
xor
lods
xor
mov
xor
rcr
mov
sar
lods
les
mov
shrb
les
in
rorb
pop
xor
shrb
jl
or
adc
add
and
pushf
cmp
shrd
bsf
dec
bswap
sbb
fcompl
call
paddb
xchg
or
lahf
adc
cmpsl
cvttps2pi
lahf
adc
inc
adc
adc
adc
adc
adc
call
adc
je
xor
int3
or
add
or
add
or
icebp
prefetchw
add
testl
loope
or
int3
shll
orl
jecxz
std
fcmovnu
or
fadd
or
fdivrl
or
in
ret
or
fistpl
psllw
or
leave
fldcw
push
mov
push
jno
mov
jns
fwait
push
jno
mov
or
add
add
out
fwait
add
mov
or
fistpl
or
fstpt
or
fstpt
push
xchg
orb
add
push
loop
idiv
in
jb
pop
cmp
push
jle
ljmp
cmp
sti
mov
cmp
sti
xor
jo
inc
cmp
sbb
stc
cltd
or
add
add
cli
cmpsb
xor
cli
inc
das
movsl
hlt
popa
cs
sbb
cs
adc
jp,pn
cmp
cmpsl
mov
mov
lea
scas
out
cmp
sbb
cmp
sbb
cmp
push
xlat
cmp
or
push
add
jb,pt
jne
mov
mov
add
mov
popf
xor
sbb
add
add
add
cmp
mov
jno
scas
mov
ret
mov
pushl
mov
cmp
xchg
test
mov
xor
and
jne
xorb
lods
in
aad
lahf
cmp
mov
push
lock
add
data16
push
scas
shrb
push
out
add
add
add
insl
or
inc
mov
or
xor
or
and
add
jns
sub
adc
or
add
or
add
or
repnz
in
adc
sub
push
int
or
cmp
lods
or
sub
or
and
or
ud2
jg
std
or
add
add
add
add
into
adc
rcll
cmp
mov
pop
shlb
push
movsb
ror
push
xchg
rcr
push
not
add
aaa
shlb
dec
rcll
outsb
xchg
imul
jmp
and
sbb
ret
mov
ret
add
addr16
aas
ret
xor
sbb
les
adc
lds
add
add
add
lds
adc
lds
adc
les
pop
icebp
shlb
and
xor
push
aam
adc
jno
iret
mull
cmp
adc
add
bound
jnp
mov
into
xor
or
add
stc
jne
cltd
stc
ret
pop
xor
xchg
cmovnp
jmp
add
lret
test
cli
dec
xor
cli
clc
sub
or
pusha
xor
pop
jecxz
adcl
aaa
cmpsl
add
xchg
aaa
jl
outsb
ss
mov
sub
mov
add
mov
mov
add
cmpsl
mov
xor
mov
lock
cmpsl
xlat
xor
add
add
add
sbb
mov
cmp
mov
inc
aas
or
cli
call
mov
add
movsb
cli
xor
mov
aad
daa
movsl
sbb
push
mov
and
aas
or
or
lea
push
pushf
dec
call
nop
std
decl
and
adc
stc
daa
or
sar
or
add
add
add
pop
push
aas
fcmovnb
push
push
fcmovnbe
push
gs
push
jb
loopne
jg
add
lahf
cmp
movsbl
dec
movntq
es
sbb
adc
sbb
cmp
mov
adc
adc
adc
sub
adc
xor
mov
aaa
enter
cmp
add
add
add
scas
sub
mov
clc
adc
add
lahf
adc
push
lds
lds
lds
xchg
push
adc
scas
adc
les
adc
lds
adc
lds
jg
insl
adc
lds
or
inc
or
lret
pop
lret
sub
dec
or
lret
xor
in
or
lret
add
add
add
add
jo
xchg
adc
aaa
inc
or
aaa
and
ficoml
ss
or
aaa
pop
push
push
cmp
adc
push
xor
test
pusha
cmp
adc
add
cli
sub
add
cmp
cwtl
sbb
xor
sti
jbe
hlt
adc
aaa
pop
add
add
add
add
inc
aaa
xchg
adc
test
out
add
ss
xor
cmp
or
add
lock
ljmp
mov
push
xor
cmpsl
push
xor
movsb
inc
xor
mov
sub
andb
cmp
mov
fidivrl
mov
add
add
add
lcall
add
ljmp
add
adc
movsl
dec
xor
cmpsb
mov
mov
mov
ss
mov
adc
or
add
mov
inc
pushf
mov
decl
dec
adc
sbb
adc
sbb
adc
sbb
adc
add
add
add
hlt
loop
fwait
incl
lret
mull
pop
fisubs
adc
inc
adc
sub
aam
pushf
add
dec
xor
add
pushf
and
add
repnz
les
das
pop
cld
pop
popf
or
divb
iret
add
mov
adc
ret
xchg
adc
loop
adc
call
ffree
inc
adc
add
add
add
vunpckhps
mov
jg
and
in
lret
or
rorl
add
test
dec
int3
inc
or
jg
xchg
or
enter
leave
mov
push
es
in
leave
pop
pop
fwait
leave
pusha
pop
gs
popf
pop
or
jg
or
and
ret
adc
das
lods
add
add
add
adc
and
das
sub
sti
repz
sbb
sub
push
sbb
sub
mov
jmp
xor
stc
mov
sbb
xor
sbb
scas
sbb
xor
psubw
xor
in
xor
pushl
xchg
adc
xor
xchg
pop
xor
add
add
add
push
rdmsr
sbb
cmp
inc
pop
dec
xor
xchg
mov
adc
jns
cmp
cmp
mov
push
cmp
sub
outsl
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
adc
lea
cmp
divb
add
add
cmc
lods
xchg
aas
pop
lods
add
mov
scas
add
sbb
movsb
lret
xor
add
cmp
push
movsb
sbb
push
lds
es
in
or
mov
cli
add
or
mov
sub
outsl
or
mov
or
cmp
scas
aaa
cmc
aas
imul
push
jecxz
mov
test
sub
add
adc
push
xchg
adc
add
jno
out
mov
repnz
and
rorb
fnsave
add
int
add
jecxz
cmpb
sahf
xor
add
sub
popf
push
or
cld
add
mov
pop
add
jno
xor
adc
mov
add
lds
xchg
popa
add
insl
add
add
add
add
mov
orl
xchg
or
push
adc
lea
arpl
vmptrst
int
enter
fidivrs
test
inc
mov
add
nop
mov
lods
cld
test
int3
inc
std
ret
lret
add
je
ss
clc
ss
adc
sbb
ss
push
push
ss
dec
outsl
ss
add
add
add
inc
mov
xor
subl
adc
mov
and
orb
cmp
or
jecxz
in
pop
or
jg
outsl
cmp
cltd
cmp
or
cmp
cmp
lcall
loope
sahf
xor
mov
jmp
insl
lcall
mov
movl
je
push
xor
jle
xor
jle
xor
jle
xor
or
out
jl
xor
jge
xor
jge
xor
sysenter
jne
mov
jge
mov
xor
jnp
xor
mov
xor
nop
mov
mov
xchg
xor
and
or
fmuls
dec
ss
mov
add
add
add
mov
jae
xor
into
or
neg
xlat
jb
idivb
lcall
ds
notl
pushf
notl
mov
idiv
push
cmc
sbb
add
cld
push
add
cld
cld
icebp
nop
testb
popa
negb
loopne
cmc
and
rcrb
testb
negb
insb
mulb
jne
insl
add
add
add
xor
and
and
cmc
stos
adc
cmc
mov
add
cmc
loope
xor
daa
jecxz
adc
fidivrl
sub
aas
std
mov
push
std
xchg
mov
sar
mov
cld
lock
xlat
cld
clc
mov
das
std
sarb
cld
add
add
add
inc
mov
adc
aad
mov
decl
sar
add
pop
cmpsl
mov
aaa
call
ror
sbb
shrb
push
add
add
sub
add
popf
ja
mov
jl
cs
jnp
cs
jnp
cs
pop
mov
pushf
add
add
add
pop
mov
repz
mov
sub
add
lahf
xor
xor
mov
divb
out
and
xor
adc
add
ret
cld
loope
aam
pop
xor
xor
fistps
xor
fisubs
xor
mov
in
ret
add
jg
cmp
int3
cmp
jle
cmp
jle
cmp
add
add
add
pop
cmp
xchg
cmp
inc
cmp
xchg
cmp
jns
cmp
jmp
outsb
jge
cmp
xor
idivl
cmp
jl
cmp
dec
cmp
subb
jg
cmp
xorb
out
mov
cmp
test
je
dec
mov
cmp
stc
mov
cmp
add
add
add
or
and
pop
sti
dec
inc
sti
cmpsl
negb
insl
add
fdivrp
decl
ret
hlt
mov
ret
in
dec
fsubs
pop
cmp
out
ja
dec
clc
shll
icebp
nop
adc
icebp
rcrl
rclb
repz
inc
bnd
pop
repz
mov
hlt
sbb
cmp
dec
and
mov
rcr
cld
inc
add
add
add
inc
pop
test
xor
ja
ljmp
sbb
mov
scas
std
stos
mov
cld
idivb
push
std
xchg
xlat
cld
cwtl
mov
jnp
or
inc
hlt
push
les
repz
repnz
les
icebp
or
add
add
add
shll
lret
push
clc
and
in
test
test
jno
push
pop
cmc
lods
push
fcmovnb
sbb
call
int
mul
lock
rcrb
cmpps
ret
pop
cmp
aaa
add
mov
push
ss
xchg
test
pop
cmp
cmp
add
add
add
jo
cmp
jge
jmp
add
jge
call
ss
xor
cmp
xor
xor
cmp
fwait
sbb
xor
adc
add
push
pop
mov
fcos
outsl
xor
cmp
jnp
cmp
dec
jp
cmp
out
push
ds
jp
jl,pt
sub
ja
inc
aas
add
add
add
daa
js
aas
sti
ja
aas
mov
add
xor
add
fadds
loop
xchg
xor
mov
cmpl
mov
cmp
push
cmp
dec
cmp
jle
cmp
jge
cmp
in
cmp
jo
addb
or
clc
test
daa
clc
xor
clc
add
notw
add
daa
scas
mulb
in
mull
push
notl
scas
idiv
mov
sub
add
iret
in
call
fsubr
in
ja
fucomi
adc
cmp
repnz
cmp
repnz
sbb
bnd
pop
repz
cli
repnz
repnz
cli
pop
hlt
in
cli
xor
add
jmp
add
add
dec
lock
mov
out
dec
lds
out
loopne
ds
std
shl
adc
sti
icebp
arpl
mov
xchg
sarl
rcrl
loop
div
mov
mov
push
mov
scas
cli
push
mov
or
mov
mov
lods
std
pop
mov
xchg
cld
inc
mov
cmc
test
add
add
add
mov
mull
lcall
mov
movsl
testb
add
mov
add
and
cmp
adc
cmp
daa
cmp
and
cmp
lock
loopne
cmp
shrb
inc
rclb
or
xchg
cmp
mov
cmp
mov
cmp
mov
lcall
add
add
add
xchg
cmp
jle
cmp
jle
cmp
jbe
cmp
pop
fdivrl
dec
push
or
aas
pop
or
and
cmp
xor
gs
ja
and
add
andl
out
mov
aas
inc
or
xor
loopne
dec
and
xor
idivb
lock
jl
add
faddl
add
add
test
xor
test
xor
test
xor
xor
xor
dec
xor
jle
xor
pop
xor
jle
xor
jle
xor
jle
xor
addl
mov
andl
or
in
mov
stc
ds
aam
sub
in
repnz
out
add
test
adc
mov
pop
add
add
add
cmp
repz
cmp
out
and
lock
ficoml
lock
cltd
lock
hlt
lahf
lock
pushl
jae
das
jmp
jmp
xlat
in
lods
fistpll
jmp
ds
jmp
ss
pop
ds
jmp
push
mov
add
adc
adc
push
mov
add
add
add
mov
dec
mov
fdivrp
in
sbb
sti
dec
mov
sub
int3
mov
sub
int3
mov
xor
cli
mov
mov
and
cli
sarb
cli
std
mov
dec
stc
pop
mov
sti
mull
mov
clc
sub
ds
mov
testl
add
mov
negb
pop
cmp
enter
loop
inc
xor
cmp
pop
js
mov
sbb
xor
sbb
push
xor
cli
cmc
xor
pop
xor
push
das
sub
shrb
nop
fmuls
cs
push
ss
idivb
jmp
or
das
xor
lods
sub
add
add
mov
jg,pn
add
outsb
jle
sub
mov
sub
add
inc
xor
jp
xor
jp
xor
jnp
xor
jp
xor
jp
xor
jp
xor
mov
aaa
jns
aaa
popa
jns
cmp
bound
loop
jl
xchg
cmp
xchg
cmp
add
add
add
xchg
cmp
xchg
cmp
xchg
cmp
pop
cmp
test
cmp
leave
cmp
test
cmp
test
sbb
cmp
repz
mov
and
ljmp
xchg
jmp
ss
lock
cmc
shl
in
fwait
lock
pminsw
add
add
add
aad
jmp
sbb
inc
cmp
lock
xor
lock
sub
lock
and
lock
sbb
lock
adc
lock
stos
out
das
pop
dec
out
inc
cmp
arpl
sbb
sub
out
cwtl
out
out
mov
xlat
test
hlt
iret
xor
inc
mov
lock
sbb
iret
mov
icebp
divb
popa
icebp
xchg
mov
icebp
inc
mov
icebp
add
add
add
pop
mov
icebp
inc
jae
mov
jae
add
mov
repz
ret
ret
lret
hlt
stos
ret
add
sub
fsubs
div
push
movsb
cli
repnz
movsb
pushf
repnz
cmc
cmpsb
jns
outsb
cmpsb
repnz
cmpsl
cmpsb
js
andl
clc
in
add
adc
add
add
jle
xor
ja
xor
jo
xor
jae
xor
lock
dec
xor
push
mov
xor
inc
push
xor
push
xor
xor
cmp
and
aaa
mov
repnz
and
push
aaa
loope
lret
ss
in
sub
and
mov
xor
pop
add
add
add
lods
lret
cmpsb
cmpsl
cmp
sahf
stc
cmp
mov
cmp
and
popa
out
imul
lcall
cmp
mov
or
xor
ds
pusha
jecxz
insl
pusha
and
pop
pusha
mov
pushl
xor
add
loope
xchg
lahf
lcallw
xor
sub
sbb
xor
cmp
add
add
add
xor
aas
loopne
sti
call
fs
xor
xor
call
xor
xor
gs
xor
loopne
lahf
fisttpl
jp
xchg
in
jmp
insb
out
sub
dec
icebp
jg
add
mov
sbb
icebp
jp
inc
clc
mov
sub
adc
lahf
repnz
repz
fpatan
cmpsb
jmp
repz
testl
add
add
add
negb
icebp
jl
div
iret
fidivrs
stc
push
in
inc
cwtl
in
dec
inc
das
in
xor
xor
data16
out
adc
out
adc
out
add
out
add
inc
out
lret
lock
lods
int
and
push
jo
inc
lock
lods
cmp
mov
lods
scas
out
inc
lods
mov
add
add
mov
pop
lods
out
in
mov
in
es
in
cli
mov
in
hlt
mov
out
shlb
out
cs
out
sbb
jp
or
in
push
scas
pop
in
sub
xor
ljmp
arpl
outsb
push
add
mov
mov
js
or
add
nop
fwait
dec
das
and
add
add
add
bound
jmp
lahf
sub
jns
mov
adc
xor
jno
xor
pop
dec
xor
push
mov
pop
jge
leave
push
mov
fistpll
xor
xor
xor
xor
xor
and
cmp
sbb
hlt
aaa
sti
repz
aaa
pop
jecxz
aaa
inc
loopne
ss
daa
xor
add
add
add
add
mov
in
lahf
aas
in
pop
in
aas
clc
pop
stc
jmp
mov
add
popa
js
mov
xor
cs
pop
xor
mov
arpl
and
ss
pusha
nop
ss
pusha
mov
ss
bound
aaa
adc
fs
in
popa
mov
aaa
inc
pop
aas
cmp
pop
jp
test
cmp
add
add
add
pop
xchg
cmp
pop
push
cmp
pop
inc
cmp
dec
ljmp
jmp
mov
ds
xchg
shr
ljmp
push
std
decl
jne
addr16
lock
xchg
inc
aas
dec
out
aaa
sub
xor
in
fwait
and
out
or
jmp
add
add
call
jbe
std
out
out
pushf
in
out
dec
std
push
xchg
add
or
cmc
adc
xchg
repnz
cmp
icebp
pop
cmp
cwtl
test
cmp
lock
dec
idiv
cmpsb
or
out
dec
cmpsl
xchg
out
inc
cmpsl
popa
out
xchg
push
out
data16
and
iret
cmpsb
pop
out
xchg
imul
mov
add
mov
repz
add
add
sub
cmp
ljmp
hlt
stos
mov
fwait
hlt
push
mov
or
repz
rep
mov
jnp
push
push
repz
mov
jae
or
cs
imulb
mov
fdivl
jge,pn
push
cs
fbstp
sbb
mov
xchg
sub
add
add
sub
jge
push
sub
sbb
jge
xor
outsb
ret
xchg
xor
jns
xor
pop
repnz
pop
add
cmp
xor
adc
ss
mov
es
xor
mov
xor
pop
add
int3
pop
and
add
or
xor
pushf
pop
push
xor
mov
xor
pusha
pop
test
xor
in
pop
shll
pop
jmp
xor
insb
arpl
ss
arpl
ss
sub
ss
pop
dec
ss
pop
ss
insl
ss
pop
jns
lods
pop
xorl
add
add
add
pushf
pop
xchg
ss
ljmp
cmpsl
ljmp
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
incl
add
add
add
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
xor
add
and
add
xor
add
and
add
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jo
add
pusha
mov
add
add
jo
add
jo
add
or
or
or
add
add
add
or
or
or
or
or
or
or
or
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
decl
pop
std
incl
add
add
add
pop
std
decl
pop
std
decl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pusha
mov
add
add
jo
add
jo
add
pusha
mov
add
add
xor
add
and
add
xor
add
add
xor
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
incl
add
add
add
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
jmp
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
mov
mov
add
mov
add
mov
add
add
pusha
mov
add
add
jo
add
jo
add
pusha
mov
add
add
xor
and
add
xor
add
and
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
dec
std
decl
out
ljmp
inc
testl
add
add
arpl
mov
pop
gs
div
lds
insl
pop
or
cmpb
sub
add
data16
mov
jns
stos
mov
push
mov
jbe
fcom
jno
mov
cmc
cmp
loop
dec
lcall
fidivrl
test
adcl
xor
fbld
add
xchg
sub
insb
aam
mov
sbb
jbe
fsts
into
loop
pop
inc
xchg
fincstp
inc
les
push
fwait
aaa
adc
data16
lea
cld
fdivl
inc
lcall
shrb
sub
xor
xor
or
xchg
es
int
popf
out
jecxz
sub
adc
js
add
add
add
es
xchg
xchg
mov
mov
sub
rcll
outsl
fadds
inc
push
add
add
int
cmp
insb
xor
out
dec
or
scas
test
jae
or
inc
pop
es
xor
std
stc
aad
and
mov
in
ljmp
or
int
outsb
add
add
add
inc
das
pushf
aad
sub
jae
or
cltd
mov
cmp
xchg
add
ljmp
dec
nop
mov
lods
inc
fbld
push
data16
stos
xchg
push
and
push
pmuludq
daa
add
xor
pop
sbb
lret
or
xchg
setnp
dec
loop
pop
jb
dec
loop
xchg
xchg
lcall
add
add
dec
faddl
scas
mov
inc
dec
mov
fidivrl
pop
mov
push
inc
or
test
pop
in
aad
sahf
mov
inc
sahf
imulb
add
and
dec
sub
cmp
sahf
imul
xorb
xchg
jl
insb
mov
add
adc
add
inc
popf
mov
mov
push
or
xchg
add
stos
movsl
cli
clc
add
out
inc
jecxz
ja
xlat
mov
xchg
test
push
mov
movntq
out
fdivs
popa
jg
popf
push
mov
incl
lods
dec
or
cmp
push
add
pushf
push
cli
dec
add
add
add
sub
dec
faddl
enter
xor
xchg
roll
or
outsl
clc
cmp
repz
dec
xlat
push
rolb
push
sbb
jmp
rol
sbb
push
adc
movsb
lods
mov
push
sub
add
push
xchg
mov
mov
add
add
add
jb
xchg
int3
sbb
jo
push
pop
xchg
mov
pop
sub
push
or
dec
lcall
in
mov
stc
mov
dec
faddl
xchg
fwait
inc
push
xchg
int3
bound
push
cltd
adc
js
xlat
xchg
in
mov
ja
rorl
int
mov
fstp
pop
mov
mov
or
pop
cltd
cld
incl
add
add
add
sbb
add
sbb
ds
lods
sub
pop
test
test
inc
lock
inc
sub
stos
push
sahf
xchg
push
xchg
subb
xchg
sub
add
testb
push
jg
push
mov
inc
inc
shl
jl
aas
enter
popa
mov
je
int
adc
mov
add
add
add
arpl
dec
pop
sbb
push
and
mov
dec
jge
mov
jne
fs
add
cmp
mov
lahf
or
add
mov
dec
xchg
outsl
sbb
ds
test
in
and
add
roll
pop
cmp
xchg
lds
xor
daa
pop
xchg
dec
sub
inc
mov
add
add
add
insl
xchg
test
lahf
cmp
dec
lea
mov
adc
cmp
data16
int3
dec
data16
int3
mov
out
or
xchg
dec
pop
ret
fsubrl
in
push
xlat
std
sub
xor
mov
inc
add
cld
xchg
aad
mov
xor
imul
aas
inc
ljmp
mov
add
add
in
sbb
test
sub
xchg
out
mov
push
in
sub
xchg
out
in
push
dec
add
dec
clc
cmp
mov
mov
inc
adc
inc
call
fcoms
push
lock
out
clc
mov
mov
dec
add
dec
cld
dec
out
hlt
add
mov
jmp
sub
mov
mov
dec
hlt
shr
sbb
add
add
add
daa
push
lock
mov
inc
adc
inc
fsubl
push
mov
call
mov
test
fstl
inc
mov
mov
pop
sub
cmp
mov
add
scas
inc
or
das
mov
jmp
lahf
rorb
data16
int3
push
data16
int3
dec
data16
int3
mov
mov
add
add
inc
push
stc
mov
dec
test
add
sub
push
stc
orl
push
adc
add
mov
add
test
popf
pop
add
add
fldl
push
fisubrs
xchg
jp
cld
or
test
ss
andl
jae
cmp
orl
call
add
add
push
or
mov
dec
insl
cmp
lea
arpl
int3
cmp
jg
int3
dec
jg
int3
fdivrl
cmp
xor
sti
or
jg
int3
aad
int3
int3
int
int3
int3
pop
ds
mov
mov
push
out
inc
or
mov
int3
aad
int3
int3
int
int3
int3
add
add
add
pop
ds
sbbl
push
cld
ljmp
icebp
pop
aas
or
inc
clc
fstps
ljmp
jge
adc
cld
xchg
call
push
and
push
xor
push
inc
out
mov
mov
push
inc
idiv
add
mov
jmp
ds
cld
mov
mov
dec
test
lea
jp
test
mov
cld
add
add
add
decb
decb
ffree
mov
adc
pop
xchg
mov
add
pop
add
flds
int3
mov
jg
int3
int
int3
int3
cmp
in
mov
in
cmp
mov
pop
inc
or
mov
int3
push
jg
int3
dec
jg
int3
mov
mov
js
or
test
mov
add
add
add
pop
xchg
cmp
or
inc
roll
add
or
cmp
jge
or
dec
cld
xchg
in
cmp
insl
inc
xor
mov
mov
repnz
add
dec
lock
or
mov
or
inc
or
cmp
clc
xorb
dec
add
add
add
adc
or
mov
add
xor
test
cmp
or
cmc
add
les
stc
mov
in
sbbl
inc
in
add
mov
push
sub
clc
call
add
cmp
lock
lock
aaa
cmc
add
mov
push
add
loopne
dec
push
jge
stc
mov
test
add
add
add
data16
mov
stc
adc
nop
clc
cld
mov
push
jge
or
pop
mov
jns
sub
dec
or
sti
adc
xchg
call
std
inc
stc
cmp
xchg
jmp
mov
adc
dec
add
or
js
or
or
add
cmp
jge
or
add
inc
dec
decl
mov
push
mov
add
cmp
subl
inc
test
and
stc
push
loop
dec
insl
jecxz
mov
dec
stc
addl
inc
xor
inc
test
xchg
decl
aad
push
xor
push
and
les
nop
neg
mov
pop
test
cmp
mov
add
add
add
rolb
in
or
xchg
pop
xchg
mov
jge
std
cmp
loopne
stc
inc
cmp
pop
lret
int3
pop
cmp
sbbl
add
hlt
rolb
inc
or
inc
clc
and
aas
or
inc
clc
fstps
std
jbe
jge
add
inc
cld
xchg
adc
out
push
xor
push
dec
out
mov
mov
add
add
int3
int3
fdivl
in
mov
dec
mov
mov
push
pop
inc
or
push
add
mov
out
mov
int3
pop
cmp
sbb
lahf
mov
lock
xor
mov
cli
or
fstpt
dec
hlt
xor
mov
xchg
aaa
push
clc
nop
in
mov
test
inc
mov
clc
add
mov
rolb
add
add
bound
dec
sbb
out
jne
cmp
cmp
mov
scas
test
aaa
inc
adc
mov
add
stos
test
aaa
jns
adc
sub
mov
jae
in
jbe
int3
mov
ja
int3
int
int3
int3
cmp
in
sbb
roll
xor
or
add
dec
mov
pushf
add
add
add
add
add
out
lcall
lock
push
ds
clc
fdivrs
add
or
hlt
stos
mov
cmp
add
aam
mov
jmp
cmp
add
adc
inc
add
mov
ret
add
pop
pop
lcall
or
add
add
add
add
sub
or
pop
inc
or
pop
inc
or
adc
mov
test
jecxz
popf
xchg
dec
stc
add
test
or
or
popa
dec
fimuls
dec
jbe
int3
mov
mov
add
and
mov
int3
add
add
add
dec
jbe
int3
mov
xchg
roll
xor
or
or
imul
nop
fsubp
mov
mov
lahf
test
ss
or
cmp
and
or
clc
cmc
call
out
lock
fiaddl
xor
mov
add
mov
push
dec
push
lock
out
in
mov
test
add
add
add
loop
push
sub
dec
stc
orl
inc
xor
pop
pop
mov
jge,pt
or
inc
hlt
xor
movsbl
add
push
aas
insl
pop
sub
xorl
je
cmp
call
pop
xchg
adc
xchg
dec
test
xchg
inc
aad
test
add
add
add
sti
adc
xchg
fucomp
mov
dec
std
inc
std
loop
push
fs
stc
addl
dec
popa
xor
jmp
cmp
fistpl
cld
ss
jge
add
mov
pushf
adc
add
cmp
decl
xor
or
sub
inc
or
nop
or
dec
pushl
jge
jno
cmp
push
add
add
add
add
or
test
cmp
cmp
lock
pop
inc
or
push
fildl
xor
mov
push
jge
data16
lock
mov
add
fadds
or
cld
push
mov
stc
push
cmp
je
lret
dec
sub
loopne
mov
push
inc
int
inc
loopne
mul
mov
add
add
add
dec
mov
mov
mov
call
or
test
xor
add
cmp
or
mov
dec
lods
cmp
push
lcall
or
or
lahf
je
lret
mov
push
push
call
mov
mov
push
test
add
add
add
or
sub
or
cmp
pushf
xchg
lahf
je
repnz
mov
or
dec
mov
pop
inc
or
call
add
lahf
je
lock
in
idiv
xor
add
shrl
or
add
or
call
or
xchg
cmp
je
lock
out
loopne
add
pop
inc
add
add
add
or
adc
popa
cwtl
cld
decl
les
and
inc
or
popf
mov
aam
dec
push
fadds
mov
push
pop
inc
or
stc
push
fstpl
sti
incb
add
mov
mov
in
add
ja
int3
int
int3
int3
cmp
in
mov
inc
int3
int
int3
int3
pop
cmp
push
push
faddl
add
add
movsl
mov
dec
mov
xor
out
push
pop
dec
jbe
int3
fdivl
in
push
loope
std
aas
or
pushf
or
mov
call
mov
mov
inc
test
loop
add
mov
mov
outsl
int3
int3
mov
mov
inc
add
fdivl
add
xabort
add
mov
movl
add
add
mov
inc
in
add
or
dec
or
mov
test
jns
cmp
add
or
add
pop
inc
or
push
or
pop
inc
or
nop
adc
add
fsubrl
add
mov
add
mov
jne
int3
add
cld
rolb
inc
or
nop
or
add
add
add
mov
or
nop
out
call
inc
or
inc
call
dec
dec
test
sub
jl
testb
cmp
pusha
or
popf
pushf
add
add
add
pop
inc
or
std
aas
or
pusha
add
test
fisttpl
idivl
jge
add
test
lret
adc
stos
cli
push
inc
or
or
add
add
add
mov
call
mov
mov
inc
test
jecxz
aad
inc
stc
addl
xchg
add
add
or
xchg
or
push
call
mov
mov
dec
jmp
out
jae
sub
loopne
sub
fcompl
stos
sti
mov
jge
add
or
test
cmp
lods
or
std
inc
add
add
add
insl
jecxz
or
or
cld
push
popa
push
les
out
add
push
in
idiv
add
pop
xchg
sub
loopne
lods
mov
dec
sub
int3
cmp
add
mov
or
mov
push
icebp
sub
xor
lock
sub
xchg
adc
add
inc
cmp
mov
add
add
add
or
clc
mov
sub
clc
mov
add
mov
adc
or
clc
xor
adc
subl
sub
xor
inc
or
inc
or
inc
or
divl
aas
mov
nop
in
clc
mov
mov
add
mov
push
add
pop
inc
add
add
add
or
or
push
call
mov
mov
pop
inc
or
call
test
enter
dec
es
ss
inc
or
les
sbbb
add
or
mov
inc
and
ds
mov
pop
inc
or
mov
pop
dec
outsl
int3
int3
or
add
or
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
xchg
adcl
xor
inc
add
icebp
mov
add
cli
cmpsb
lea
aas
jl
dec
aas
and
mov
add
mov
add
add
and
inc
xor
subl
xor
andb
add
pop
xor
add
add
add
adcb
insb
cmpb
out
xchg
xor
xchg
xor
inc
xchg
imul
xor
lods
test
xor
ret
test
ss
test
ss
aaa
ss
test
inc
test
sbb
mov
dec
test
imul
enter
add
add
add
mov
subl
cmpl
adcl
subl
dec
or
push
adc
cs
out
mov
fisttpl
mov
mov
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
cs
mov
or
add
or
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
out
pop
inc
cld
cmc
aas
das
ret
cmp
sbbb
popl
test
sub
inc
and
dec
sub
xchg
and
pushf
mov
cmp
inc
jmp
cmp
aam
xchg
imul
push
inc
aam
sti
lcall
lret
add
jb
mov
sub
pop
mov
push
les
aaa
adc
rol
push
daa
mov
or
scas
mov
ss
shll
inc
mov
sub
xor
enter
push
repz
mov
pop
and
mov
inc
dec
sti
aas
ja
cmp
adc
loope
inc
in
xlat
lods
lea
and
push
mov
sbb
mov
xchg
cs
jecxz
aas
xchg
sub
imul
xor
lretw
out
pop
mov
cmp
pop
sbb
int
aas
push
leave
arpl
sub
xchg
bound
xchg
pop
and
pop
pop
sbb
dec
push
mov
cmp
xchg
repz
jmp
mov
pop
test
xor
jg
in
rcrb
sbb
lods
mov
ret
mov
and
sbb
xlat
addr16
shl
jns
jle
pop
xor
sbb
jmp
aam
cmpsl
xchg
push
dec
xchg
jle
js
push
mov
out
imul
pop
mov
subb
jns
aad
push
scas
out
jl
nop
mov
dec
push
cli
mov
popa
orb
or
loop
cmp
cmp
aad
jg
mov
dec
and
xchg
xor
stos
jecxz
push
lods
inc
inc
cwtl
xchg
dec
or
mov
push
jns
mov
jg
and
fs
mov
mov
sbb
xor
cltd
xchg
rorl
and
or
test
rcrl
mov
adc
pushf
mov
mov
xchg
pop
and
add
pop
in
jmp
or
xor
cmpb
lcall
mov
icebp
pop
out
popa
scas
cmp
repnz
add
pop
shlb
notl
mov
mov
mov
dec
bound
inc
jl
shll
sbb
fmul
repnz
pop
xor
and
xor
jne
repz
adcb
add
shlb
outsl
inc
or
in
push
iret
ficoml
push
sbb
imul
ja
shll
dec
in
add
xor
push
nop
in
ljmp
es
mov
jmp
xchg
jge
pop
arpl
idivl
push
mov
xor
es
aas
xchg
out
mov
bound
pop
push
movsb
inc
pop
sbb
into
jmp
or
out
imul
insl
scas
imul
ret
push
adc
dec
jbe
imul
xchg
inc
loop
or
mov
jo
ja
lahf
jnp
repz
or
les
bound
std
icebp
int
mov
adc
and
int3
mov
mov
insl
mov
cmp
iret
in
jecxz
dec
les
rcrl
adc
mov
out
inc
addl
xchg
cmp
imul
xor
mov
pop
push
xchg
outsl
pop
repnz
mov
ret
pop
in
sbb
int3
repz
cmp
fstl
fimuls
cltd
ja
xchg
fcoml
out
or
pop
subb
xor
ficompl
cmpsb
lret
fmull
xor
or
clc
add
into
push
dec
inc
loop
sub
xchg
ljmp
mov
movsl
test
in
ds
.byte
cltd
.byte
.byte
.byte
data16
jb
jno
xor
xor
aaa
je
popa
inc
add
add
add
inc
add
popa
outsl
dec
inc
push
dec
outsb
gs
xor
jae
jno
je
add
sbb
inc
add
add
add
inc
push
push
inc
push
inc
pop
inc
insb
popa
jae
gs
cs
outsb
imul
insb
insb
inc
js
jnp
inc
xor
xor
inc
sub
sub
sub
sub
xor
inc
xor
xor
add
add
inc
push
push
inc
push
inc
pop
inc
insb
popa
jae
gs
cs
outsb
imul
insb
inc
xor
add
loopne
add
loope
add
loope
add
loope
add
loope
add
add
sbb
add
cld
loope
add
add
push
loope
add
add
add
xchg
loope
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
add
pop
loope
add
add
xchg
loope
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
add
outsb
arpl
dec
outsl
add
mov
gs
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
addb
gs
imul
imul
jns
add
mov
insb
jae
jb
outsb
inc
add
scas
add
jae
jb
jo
inc
add
js
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
xlat
add
fs
arpl
push
add
inc
push
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
add
nop
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ja
xorl
sahf
xor
xor
xor
xor
mov
icebp
xor
or
adc
sbb
cmp
inc
ss
ss
ss
ss
je
jge
xchg
xchg
ss
lods
ss
adc
std
aaa
add
or
cmp
cmp
cmp
cmp
add
add
adc
xor
