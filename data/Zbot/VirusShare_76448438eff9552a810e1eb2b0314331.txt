lcall
out
inc
movsb
int3
and
rdtsc
les
xchg
fmuls
loop
dec
and
incl
loope
jns
hlt
pop
test
loopne
sub
dec
adc
mov
mov
cmpsb
mov
lret
in
mov
inc
xchg
inc
inc
cmp
dec
inc
xchg
xchg
inc
xlat
mov
ja
lcall
mov
add
push
push
mov
push
push
or
dec
dec
ds
jb
incl
cmp
outsb
adc
dec
mov
aad
stos
ja
mov
push
enter
decl
enter
jbe
xchg
or
ret
ds
mov
lret
xlat
je
test
call
cmpsl
xchg
ret
jbe
out
xor
and
push
cmp
pop
fisubs
mov
fildll
dec
movsb
and
mov
cltd
and
stc
addb
enter
adc
call
dec
mov
outsb
pushf
xor
push
fisubl
rclb
loop
loope
cmp
lods
jge
jmp
pop
xor
inc
inc
scas
enter
xor
mov
je
pop
hlt
in
inc
mov
int
adc
xlat
mov
in
cld
jmp
aam
cld
sub
inc
in
sub
loope
cmp
int3
lea
imul
ss
mov
mov
cmp
incl
push
arpl
sub
lds
xchg
popf
dec
push
dec
push
mov
rclb
shlb
jecxz
jbe
lea
pop
int3
outsl
push
stc
or
aas
sub
test
inc
mov
adc
call
push
stos
xor
fnstenv
and
addl
push
sti
sbb
in
insb
lahf
add
jns
insb
push
test
sub
pop
xor
syscall
icebp
nop
push
pop
push
ficoml
shl
dec
sub
sbb
sbb
xchg
mov
adc
pop
pop
ret
aas
dec
scas
or
dec
sub
call
mov
pop
xchg
xchg
rol
es
outsl
jmp
addr16
pop
cmpsb
and
push
repz
mov
cwtl
lcall
fwait
aad
xchg
pop
imul
sub
jge
test
std
sahf
lahf
outsl
bound
sti
insb
incl
jmp
pop
add
ja
addb
jle
and
add
incl
sarb
xor
cli
push
xor
push
and
repnz
dec
xchg
adc
in
xchg
mov
scas
lds
daa
outsl
inc
jmp
push
imul
sbb
ljmp
decb
lock
les
inc
imul
xor
xor
popf
pushl
scas
and
xor
and
push
mov
push
repnz
push
add
dec
out
sub
lcall
lods
lds
add
sbb
mov
mov
cmp
mov
pushl
jne
fxch
insl
dec
stos
scas
fbstp
in
mov
movsl
jo
fidivl
mov
jl
out
fdivr
inc
ja
adc
and
xor
pop
sub
dec
xor
push
pop
fsincos
pop
dec
ret
xchg
clc
jae
pop
mov
mov
inc
lods
cmp
and
cmp
repnz
xchg
push
call
cmp
mov
fbstp
jmp
and
mov
lret
lret
out
sahf
jg
decl
sbb
cmpsl
xor
int3
cwtl
subb
cmc
pusha
in
cmp
cmpsl
call
sub
aam
out
dec
xchg
pop
jmp
test
outsb
mov
xchg
fdivrs
fsubrl
mov
sbb
mov
jns
xor
fnstcw
dec
xor
push
xor
pushl
scas
outsl
int
mov
insl
add
insl
ja
lret
ucomiss
dec
adc
mov
jne
jg
ljmp
out
and
inc
int
pop
ret
shlb
adc
out
out
sar
inc
out
outsl
test
sub
cmp
dec
xor
lds
repz
shll
jne
mov
cmp
out
fstl
inc
movl
popf
fwait
test
or
and
ljmp
insl
divb
into
mov
mov
rorl
jno
daa
mov
out
ljmp
push
push
xor
jp
fs
mov
cwtl
pop
adc
inc
mov
push
dec
les
stc
popf
push
jecxz
inc
in
enter
and
mov
xchg
les
repnz
aas
lret
jmp
ret
fistpl
or
mov
xor
test
dec
aam
loopne
cs
call
ret
mov
pop
jne
xor
scas
dec
adc
and
sbb
jge
test
out
and
lcall
loop
cld
outsb
es
xlat
mov
push
mov
jae
cwtl
adc
sbb
fs
call
dec
xor
xchg
push
popa
notb
mov
lock
adc
cmpsb
and
push
or
jno
ret
into
insb
sub
call
iret
dec
mulb
fistps
scas
jnp
into
or
mov
insb
xchg
movsl
mov
cmp
aaa
icebp
lcall
xchg
gs
repz
pop
out
loop
pop
fcoms
ss
xchg
mov
or
push
pushl
xchg
jae
not
mov
xchg
nop
shll
push
and
outsl
cmpsl
jle
rorb
jae
fdivr
lcall
aam
mov
jmp
lahf
xchg
cld
sub
ret
loope
clc
xor
ss
arpl
ljmp
xchg
or
roll
pop
add
mov
std
arpl
std
je
frstor
test
push
sub
jnp
jno
in
add
in
das
xchg
push
cmp
push
jp
stos
jb
lcall
bound
sahf
call
decb
or
loopne
ds
incl
jne
and
sub
and
mov
into
faddl
sub
hlt
test
sbb
fcoml
js
shlb
pushf
test
sbb
stc
lcall
popa
add
ds
jbe
cli
incl
cld
jecxz
push
sbb
fistpl
ret
sarb
pushf
xchg
loopne
cmc
js
ja
notl
push
add
or
stos
pop
xor
sub
or
stos
fimuls
cmc
lcall
mov
ljmp
add
rcrb
fiaddl
ss
call
push
outsb
mov
or
and
mov
into
sbb
add
cmp
jmp
fwait
cld
js
cmc
stos
jnp
inc
pushf
out
sti
pop
cmpl
jl
ljmp
jnp
incl
or
or
sar
dec
sub
rcl
test
mov
fstpt
repnz
cmp
push
mov
lods
lret
xchg
pop
int3
lock
ljmp
sahf
xor
test
ret
jb
sbb
das
push
jg
adc
xchg
push
cli
leave
dec
add
mov
scas
imul
jmp
push
push
subl
int
ret
push
or
mov
idiv
inc
push
js
push
cs
mov
jb
stos
and
jge
test
in
call
push
out
mov
repz
pop
and
xchg
jo
mov
stc
xor
adc
mov
mov
shlb
lcall
dec
xchg
jns
dec
fisubrl
mov
adc
inc
lret
ljmp
push
and
mov
test
or
ljmp
addr16
arpl
mov
cmpsb
lahf
repnz
jns
int
into
bound
inc
mov
adc
ret
fisubl
mov
mov
xchg
scas
aad
pop
iret
in
xorb
gs
inc
das
push
incl
jnp
and
in
ja
lds
dec
sahf
bound
and
cmp
subb
jecxz
decl
jbe
aad
in
mov
xchg
cmp
popa
adc
cld
shlb
dec
ljmp
aam
icebp
mov
rcrl
dec
mov
push
js
das
pop
jg
loopne
imulb
fidivrl
test
fwait
xor
xchg
inc
mov
ljmp
cmp
test
je
scas
test
inc
pop
negb
daa
out
fcompl
dec
jmp
mov
les
mov
mov
mov
or
push
push
stos
mov
sbb
sbb
push
sahf
not
popa
add
push
jne
das
fistpl
jg
movsb
lods
iret
jle
aam
clc
lret
push
scas
or
jnp
divb
mov
ljmp
jb
jp
je
loope
mov
xchg
stc
pop
xor
call
xlat
dec
int3
inc
inc
mov
push
dec
bound
dec
cmpsb
jp
aam
sarl
push
mov
pop
shrl
sub
inc
add
fldt
ret
mov
mov
lock
mov
add
loopne
adc
clc
cmpl
mov
stos
jbe
mov
mov
dec
and
mov
pop
mov
dec
mov
mov
push
inc
mov
push
dec
inc
mov
fnstenv
or
int
pop
dec
or
cli
inc
inc
jae
adc
and
out
out
cmp
test
mov
sub
cltd
sti
xchg
sbb
pop
test
je
mov
in
mov
adcb
xor
xor
fiadds
xor
cmp
das
sub
add
es
xchg
jne
jno
mov
mov
xor
push
push
fistpll
mov
add
mov
ret
mov
cmc
jmp
jnp
or
loop
gs
repnz
ret
cmp
fldt
sub
inc
adc
inc
add
in
es
sub
ja
loop
inc
test
cmpsb
cmp
xorb
shrb
loop
in
adc
xchg
arpl
mov
dec
cli
out
shrb
into
testb
sub
jmp
adc
into
mov
orb
adc
and
xor
or
adc
dec
mov
std
mov
sub
aam
sar
incl
fistl
sbbl
jg
mov
or
lret
nop
inc
mov
decl
xchg
xchg
xchg
push
add
sub
mov
inc
mov
push
push
les
fdivr
mov
jnp
clc
sub
pop
xor
mov
imul
push
push
sub
xchg
popf
xchg
dec
loop
ljmp
push
std
aad
movsl
mov
inc
cmovno
pop
cmpsb
xchg
sahf
push
xor
outsb
insl
mov
push
stos
int
jnp
xor
ret
mov
mov
xchg
add
jmp
pop
xor
popf
pop
fsubrs
mov
pop
mov
into
inc
leave
jl
inc
fst
fistps
outsl
xchg
dec
jnp
xchg
out
adc
mov
lcall
push
adc
jl
call
jmp
or
divl
cli
outsb
movsl
bound
mov
in
cwtl
xchg
xchg
jmp
mov
push
pop
add
clc
mov
mov
or
or
jns
inc
daa
inc
pop
imul
pop
cmp
inc
cmp
xor
sub
push
push
insl
imul
sub
xor
lret
sbb
and
mov
fnstenv
adc
ficoml
cmp
add
insl
cmc
or
xor
jle
shll
dec
mov
ret
xor
sub
xchg
and
rorl
cmp
push
ficoms
pop
jbe
rol
jne
and
pop
sub
sub
stos
inc
add
push
ret
xlat
cmp
fdivs
add
xor
lea
and
les
or
add
push
mov
mov
inc
add
fs
add
nop
push
add
andb
adc
or
and
or
add
jns
sbbl
and
add
loop
sub
mov
incl
add
add
inc
adc
sub
subb
adc
and
add
sub
adc
stos
fs
adc
xchg
or
add
xchg
adc
add
nop
adc
push
and
add
subl
add
or
adc
nop
inc
and
lcall
mov
and
xchg
adc
enter
mov
push
or
outsb
cmp
cmp
xor
push
mov
mov
fsts
insb
push
mov
es
repz
lcall
xor
adc
fidivrl
cmpsb
mov
adc
inc
dec
push
lret
incl
fwait
lds
mov
sbb
and
insl
add
push
andb
enter
incl
imul
mov
push
push
cli
xor
call
clc
into
cmp
mov
mov
push
repz
pop
out
dec
mov
frstor
icebp
pop
inc
mov
ljmp
loopne
jno
out
mov
jne
cld
fs
ss
incl
or
sarb
adc
lcall
inc
jnp
mov
outsb
fisubrs
mov
into
inc
and
mov
inc
push
mov
cwtl
fstpt
push
pop
inc
or
sub
jmp
mov
mov
sub
cmp
jae
popa
fiadds
mov
imul
fnstcw
movl
xchg
iret
sti
pop
xor
jmp
je
out
dec
and
int3
fwait
not
or
js
stos
stc
mul
int
jns
orl
call
or
mov
cwtl
rcll
mov
movsb
push
repz
imul
push
loope
bound
ljmp
loopne
inc
jecxz
out
stos
inc
pop
inc
clc
rcrl
insb
sahf
cmp
dec
scas
aas
repnz
in
pop
sbb
cmp
stos
addb
mov
lea
mov
out
out
lret
pop
aaa
ljmp
push
mov
pop
sbb
or
xlat
mov
push
adc
xchg
mov
ja
sbb
mov
fdivl
xlat
add
stos
mov
jno
jb
cmp
rclb
ljmp
test
nop
stc
iret
or
addr16
aas
jb
nop
sti
inc
push
pop
jg
inc
into
incl
xor
shll
xor
pop
and
decb
popa
sbb
mov
xchg
shrl
jo
rcrb
or
decl
and
cmc
jno
add
je
adc
sbb
xor
push
jmp
inc
xchg
xlat
lea
xor
ss
pop
inc
sub
aaa
cmp
and
dec
pushf
aaa
cwtl
cmc
mov
test
add
loope
inc
mov
mov
jmp
add
addb
add
adc
and
addb
add
push
adc
inc
add
fdivs
mov
mov
mov
loop
sbbb
pop
mov
aas
jb
stc
hlt
jns
mov
lock
popa
xor
scas
shlb
loop
ja
in
call
arpl
or
dec
loop
jo
mov
cmp
xchg
pop
imul
ljmp
ret
jae
dec
lds
arpl
push
cltd
cmpsl
in
add
out
push
shl
sahf
jmp
nop
bswap
mov
or
nop
lcall
xor
mov
jmp
xchg
in
lea
sbb
sbb
sahf
push
enter
outsl
iret
call
es
xorl
adc
scas
jge
sub
idiv
in
lcall
and
mov
leave
nop
sbbb
imul
or
aaa
ret
jo
movsb
inc
sub
enter
lds
int3
mov
jg
xor
pop
adc
xor
mov
and
lcall
loopne
hlt
cmp
pushf
dec
lea
sbbl
aam
mov
mov
in
push
repz
pop
ss
jns
add
xchg
sbbl
and
xor
out
scas
lods
daa
sub
sub
fiaddl
lcall
bnd
cmpsb
lret
shrl
cmpsl
and
enter
mov
pop
aad
pushf
insl
mov
xchg
fwait
jbe
mov
jbe
mov
out
mov
and
sbb
lock
das
xor
dec
outsb
into
ss
rorb
jp
mov
jge
mov
aam
xchg
pop
negl
decl
fwait
scas
or
mov
pop
sbb
lret
mov
sbb
das
cmp
aam
sub
mov
xor
mov
fnstenv
jnp
inc
and
lds
ss
into
test
xchg
fwait
xchg
rorl
pushf
lret
mov
mov
jns
jno
pusha
jbe
inc
inc
cltd
lahf
mov
xchg
divl
add
xchg
xchg
sbb
in
insb
imul
inc
out
cmp
hlt
orl
out
cld
repz
mov
loope
hlt
fcomip
testb
fwait
mov
cwtl
xchg
push
test
fisttpll
jno
nop
data16
lahf
testw
cld
pop
sub
pop
sti
dec
shrl
stos
xor
push
xor
out
dec
sti
push
js
xor
xor
mov
mov
mov
div
in
lcall
dec
shl
inc
aas
pusha
out
hlt
mov
lcall
addb
repz
inc
sub
dec
lret
fstpt
mov
mov
out
push
jge
pop
sbb
push
and
clc
sbb
es
scas
adc
hlt
pop
lahf
out
lods
es
sti
sti
jmp
pop
popa
push
scas
sbb
lock
lret
es
xchg
push
adc
and
fcomip
cmpsb
fbstp
outsb
dec
ss
adc
pop
push
mov
fcomip
jmp
andb
mov
data16
movsb
adc
sbb
mov
fbstp
es
push
and
xchg
push
sbb
push
jge
mov
ljmp
adc
dec
fwait
popa
xor
adc
cld
add
xchg
jge
push
call
and
mov
je
mov
xor
pminub
test
mov
outsl
mov
mov
fldcw
hlt
enter
jmp
mov
stos
out
mov
lock
imul
mov
or
mov
or
ret
mov
clc
mov
imull
mov
testl
or
subb
ljmp
gs
push
repz
and
sahf
stc
arpl
xchg
nop
loope
imul
ljmp
cmpsl
ja
pop
arpl
xchg
cld
imul
xchg
bound
loopne
ja
movsl
push
lods
pushf
mov
fldt
out
mov
pop
lret
xlat
lcall
out
xchg
not
xlat
ljmp
pusha
mov
out
jg
xchg
test
lds
orl
ljmp
add
xchg
jns
popa
sahf
sti
call
std
xlat
jg
sbb
push
stos
aam
xchg
fcmovnb
ds
imul
shlb
jg
ret
int
push
cmc
mov
mov
xchg
enter
dec
scas
xor
xchg
addr16
das
sahf
adc
testb
in
dec
ss
cmp
jg
lcall
xor
ss
bound
lret
pusha
popf
pop
aaa
sahf
adc
push
mov
mov
sbb
xor
push
xor
je
add
mov
insl
dec
adc
les
inc
jg
jbe
jmp
sar
and
mov
iret
jae
jbe
outsb
jbe
outsl
rorl
sub
lret
cmpsl
xchg
jno
push
test
dec
loope
and
loop
fwait
cmc
lret
scas
and
mov
mov
imull
imul
adc
xor
je
sahf
movlps
in
sbbb
out
popf
lock
mov
sti
mov
outsb
test
scas
mov
js
sti
insl
sti
add
adc
sub
testl
testb
mov
imul
xchg
decl
mov
xlat
jmp
jne
fldcw
pop
jg
loopne
ret
pop
js
add
rcrl
sti
sahf
and
hlt
pop
mov
cmc
pop
push
hlt
push
xor
push
or
xor
sar
repz
and
das
inc
and
sub
push
pop
loope
stos
mov
push
jle
incl
and
push
jnp
inc
std
das
mov
pop
jnp
repz
rolb
cmpsb
bound
sub
loop
lock
mov
and
xchg
iret
outsl
std
call
pushl
xor
jmp
push
xor
jbe
jne
imul
jb
push
inc
push
ja
dec
popa
dec
outsl
jo
outsl
mov
jp
jno
push
xor
pop
dec
imul
dec
pop
jns
push
dec
jb
and
pushl
bound
inc
inc
pop
inc
jo
ss
xor
imul
jae
inc
inc
insb
xor
cmpsb
ljmp
bound
addr16
arpl
push
jno
jb
inc
dec
arpl
imul
inc
je
push
inc
xor
dec
outsb
fs
pop
xor
push
push
dec
inc
dec
dec
dec
pop
push
jne
push
push
push
imul
inc
mov
push
inc
ja
jo
je
push
dec
inc
xor
out
mov
mov
dec
xor
inc
arpl
xor
jno
jns
dec
dec
jbe
outsl
outsl
mov
jo
outsl
push
outsl
inc
dec
pop
adc
je
dec
jo
je
push
xor
pushl
pop
push
jp
dec
jno
jbe
outsb
jno
jae
jp
push
inc
inc
pop
popa
push
pop
inc
inc
jb
inc
push
inc
dec
lcall
push
push
push
push
aaa
jbe
xor
jo
aaa
jo
ja
push
xor
inc
push
jns
dec
xor
mov
inc
push
inc
jne
adc
aaa
inc
cmp
ja
pop
xor
inc
je
pop
sar
incl
imul
ja
dec
dec
insl
jb
inc
outsl
and
dec
aaa
arpl
insl
sti
ja
push
pop
hlt
push
jb
xor
xor
inc
jo
push
sti
ljmp
cmp
dec
gs
push
arpl
jne
push
push
xor
outsl
aaa
push
popa
xor
xor
push
ret
jg
push
dec
js
jbe
js
xor
push
push
dec
imul
jo
dec
inc
inc
push
rclb
arpl
add
notb
sti
add
xchg
add
cmp
iret
pop
xor
push
aaa
add
dec
ds
mov
add
xchg
pusha
push
sbb
fcom
lret
add
imul
xlat
loopne
inc
sahf
or
mov
add
or
adc
repz
sahf
dec
and
faddl
out
xor
push
push
or
cs
nop
test
mov
es
jns
ss
mov
call
pop
cmc
inc
cmp
and
ja
inc
sub
outsb
sbb
imulb
fiaddl
or
push
mov
adc
pusha
ss
int
pop
aaa
inc
push
adc
adc
idivb
or
sbb
xor
mov
sbb
jbe
dec
lahf
xor
inc
data16
mov
lods
aad
rorb
std
sarl
int
loop
loopne
inc
xor
ret
shll
fcomi
xchg
dec
dec
mov
push
mov
orl
add
addr16
in
jg
lcall
jmp
idivb
daa
out
dec
test
dec
push
popf
neg
fcmovu
inc
test
pop
jnp,pt
js
rolb
pop
sti
jbe
fsubs
shl
cmpsl
cs
xchg
pop
adc
aaa
roll
push
in
sarl
push
inc
fisttpll
repz
push
inc
push
sbb
adc
cmpsl
dec
andl
jo
jmp
ret
cmp
jbe
pop
xchg
loop
shll
xlat
inc
aas
inc
enter
iret
lock
or
pop
jbe
pop
test
popa
outsl
outsb
push
cmp
es
push
insb
outsl
and
inc
adc
es
jb
loopne
or
data16
aas
leave
cmpsl
insl
mov
mov
sub
mov
insl
fildl
out
icebp
sarl
add
ss
int
mov
nop
mov
pop
popa
ds
jmp
pushl
jns
test
psubq
pop
sti
fiaddl
das
jge
push
insb
ss
les
out
jmp
or
ljmp
jl
daa
push
jae
fisttpl
pop
inc
icebp
dec
push
scas
ds
mov
out
inc
mov
lds
in
pop
mov
out
or
or
pop
ljmp
jb
gs
xor
cs
insb
pop
inc
sbb
gs
jb
je
arpl
outsl
sti
popa
insb
push
arpl
outsl
outsb
cs
gs
jbe
add
insl
mov
das
dec
outsb
and
imul
push
imul
gs
outsl
scas
mov
dec
or
pop
xor
into
fimuls
xor
inc
outsl
jne
pop
push
jne
jns
ss
outsl
push
outsw
jb
popa
outsb
arpl
sbb
push
adc
std
mov
jne
mov
popa
fs
addb
add
mov
mov
cs
ds
adc
mov
jmp
loop
popa
jb
outsl
dec
insb
in
insb
shll
inc
jns
sub
sub
fwait
std
ret
insb
jae
movsb
mov
pop
arpl
das
adc
imul
inc
in
inc
addb
addr16
popa
divb
rolb
push
jb
jge
outsb
cmp
fs
jae
imul
hlt
gs
jbe
mov
push
or
inc
imul
or
ss
and
inc
ret
popa
xor
inc
mov
insl
mov
xor
sbb
popf
mov
sbb
fs
jb
scas
cmp
xchg
jae
mov
cld
fisubs
xor
call
push
outsb
push
cmp
jo
xor
shr
out
out
fwait
push
outsl
xchg
and
imul
add
insb
xorb
jo
push
cmp
popa
imul
or
pop
adc
pop
push
cmp
adc
push
jns
inc
shl
in
jbe
add
jb
loop
dec
sub
gs
pop
jb
jae
push
cwtl
lds
mov
jnp
mov
fsubl
gs
outsl
mov
dec
gs
push
pop
movzbl
inc
jbe
jo
jae
jg
pop
popa
mov
or
es
movsb
outsb
loopne
mov
adc
add
push
dec
mov
jg
jns
sbb
int3
dec
xchg
pop
pop
aas
and
mov
push
or
or
inc
or
push
mov
loopne
add
and
or
insb
sub
push
repz
clc
test
push
jo
cmpsb
sub
imul
leave
sbb
scas
mov
jbe
xlat
jbe
lcall
pushf
jge
pop
roll
adc
sub
and
inc
and
sbb
arpl
lds
lahf
test
enter
fnstsw
repz
aaa
and
xchg
scas
popl
insb
push
sbb
pop
push
push
pop
insl
dec
sahf
jae
mov
push
mov
daa
inc
rcrb
testl
sub
push
testl
sbb
ret
fstl
insb
aad
ljmp
in
or
rcll
xor
push
sub
fsubrs
les
inc
jo
loop
cwtl
jo
adc
sbb
dec
add
sub
push
sbbb
sti
push
jecxz
loopne
mov
push
movsb
add
es
add
inc
xor
pop
pusha
add
vhaddps
ret
jnp
push
ds
pushw
sbb
xor
ret
adc
mov
fld
jno
je
rcrb
inc
fdivs
movhps
arpl
cmp
add
insl
xorl
xchg
jno
mov
jo
popa
jo
pushf
push
add
lock
jecxz
pop
pop
sbb
outsl
pop
inc
inc
cmpsl
mov
xchg
adc
imul
mov
sub
je
sbb
imul
jae
ja
ret
repz
push
or
sahf
jmp
in
out
or
pop
sbb
fadds
sbb
inc
add
or
xlat
sbb
fimuls
adc
roll
mov
mov
sub
mov
test
push
add
sub
mov
adc
enter
nop
add
add
subl
push
xchg
mov
andl
and
test
push
add
add
push
and
add
sub
mov
add
adc
shlb
jmp
inc
add
add
sar
addb
adc
mov
orb
inc
add
nop
push
add
add
inc
call
nop
inc
add
add
subl
inc
add
adc
shlb
subb
add
add
subl
inc
add
imul
inc
inc
xorl
pusha
inc
adc
mov
stos
add
add
add
nop
inc
add
inc
push
add
add
add
imul
add
or
adc
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
xchg
sub
cwtl
fs
adc
sub
adc
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
cmp
pop
das
out
inc
movsb
int3
jmp
xchg
sbb
and
xor
xchg
push
rclb
dec
and
xchg
jmp
jno
ret
hlt
pop
test
loopne
sub
dec
adc
mov
mov
cmpsb
mov
dec
in
mov
inc
xchg
inc
inc
cmp
dec
inc
xchg
xchg
inc
xlat
mov
ja
lahf
imul
decl
fistps
mov
push
mov
push
push
or
dec
dec
ds
jb
inc
add
jmp
adc
dec
mov
aad
stos
ja
mov
push
enter
or
enter
pushl
xchg
or
ret
ds
mov
lret
xlat
je
test
shll
decl
xor
and
push
cmp
pop
fisubs
mov
fildll
movsb
and
mov
sub
sbbb
pop
stc
addb
enter
adc
xchg
out
mov
decl
push
outsb
pushf
xor
push
fisubl
rclb
loop
loope
cmp
lods
jge
daa
pop
xor
pushl
inc
scas
enter
xor
mov
je
pop
hlt
in
inc
mov
int
adc
xlat
mov
jmp
fwait
mov
sub
inc
in
sub
loope
cmp
int3
jmp
imul
ss
mov
mov
cmp
push
pushl
sub
lds
xchg
popf
dec
push
dec
push
mov
rclb
jecxz
jbe
push
lea
pop
int3
outsl
push
stc
or
aas
sub
test
inc
mov
adc
pop
push
stos
xor
fnstenv
jge
rolb
cmp
fisubl
push
sti
sbb
in
insb
lahf
add
test
sub
clc
ret
sub
add
push
ficoml
shl
int
loope
mov
lcall
xchg
mov
adc
pop
pop
ret
aas
dec
scas
or
dec
sub
mov
pop
xchg
xchg
rol
jmp
mov
outsl
jmp
addr16
pop
cmpsb
and
push
repz
mov
cwtl
lcall
pop
imul
lcall
sub
jge
test
std
sahf
lahf
outsl
bound
sti
insb
sub
and
rcrb
incl
or
addb
jle
and
add
inc
cmp
xor
incl
push
push
push
and
repnz
dec
xchg
adc
scas
lds
jmp
inc
jmp
push
imul
sbb
dec
dec
mov
push
les
ljmp
inc
imul
xor
xor
popf
xor
and
call
outsl
or
notb
sbb
push
add
dec
out
sub
sahf
and
dec
xchg
decl
add
sbb
mov
mov
cmp
mov
xor
fxch
insl
dec
stos
ljmp
mov
push
movsl
jo
fidivl
mov
jl
out
fadd
ja
adc
and
push
mov
push
inc
pop
sub
dec
xor
push
pop
fsincos
pop
dec
ret
xchg
jae
pop
mov
fldenv
inc
lods
cmp
and
cmp
repnz
xchg
push
adc
cmpsl
cmovb
out
mov
jp
testb
mov
lods
stos
pop
lret
inc
mov
lret
out
sahf
or
mov
cmpsl
jg
pushl
int3
cwtl
subb
cmc
pusha
in
cmp
cmpsl
push
arpl
aam
out
decl
pop
jmp
test
outsb
mov
xchg
fdivrs
fsubrl
lock
inc
xchg
sbb
mov
cs
push
mov
popa
xor
fnstcw
dec
xor
push
xor
pushf
loopne
sbb
ljmp
pop
mov
insl
add
insl
ja
lret
ucomiss
dec
adc
mov
jne
inc
out
and
inc
int
jg
pop
ret
shlb
adc
out
out
rol
out
outsl
test
sub
cmp
dec
xor
lds
repz
shll
jne
mov
cmp
out
fstl
inc
incl
cli
icebp
jno
popf
fwait
test
or
and
sub
insl
divb
dec
mov
mov
rorl
jno
daa
mov
out
ljmp
sub
jp
fs
mov
cwtl
pop
adc
inc
mov
push
dec
les
popf
push
jecxz
inc
in
enter
dec
adc
and
mov
xchg
les
repnz
aas
lret
bound
fistpl
pushl
or
mov
xor
test
dec
aam
loopne
cs
rol
mov
pop
jne
pushl
out
dec
adc
and
sbb
jge
test
out
and
mov
dec
cld
outsb
es
and
jbe
xlat
mov
push
mov
jae
cwtl
adc
sbb
fs
cmp
test
call
push
xlat
pop
xchg
push
popa
notb
mov
lock
push
and
adc
or
jno
ret
into
insb
sub
inc
lahf
iret
dec
idiv
jmp
fistps
scas
jnp
into
or
mov
insb
xchg
movsl
mov
cmp
aaa
icebp
cwtl
les
jmp
dec
repz
pop
out
loop
pop
fcoms
ss
xchg
mov
or
push
mov
mov
call
nop
shll
push
and
outsl
cmpsl
jle
rorb
jae
fcomps
aam
mov
inc
jmp
lahf
xchg
cld
sub
ret
loope
clc
xor
ss
arpl
or
xchg
or
scas
cli
ds
roll
pop
add
mov
std
arpl
std
je
and
jnp
jno
in
add
in
das
xchg
push
cmp
push
jp
stos
jb
lds
nop
bound
inc
sahf
call
decb
or
loopne
ds
xchg
pop
and
call
sub
and
mov
into
faddl
sub
repnz
js
cmp
and
pushf
test
sbb
stc
lcall
popa
add
ds
jbe
outsb
call
xchg
ljmp
jle
fistpl
ret
sarb
pushf
xchg
loopne
cmc
js
ja
notl
push
add
popa
or
mov
into
int3
sub
or
stos
fimuls
test
sbb
ljmp
dec
pop
adc
add
rcrb
fiaddl
ss
outsb
mov
call
pop
and
mov
into
sbb
add
cmp
jmp
fwait
cld
js
cmc
stos
jnp
cmp
out
sti
pop
cmpl
jl
ljmp
jnp
inc
sbb
or
sar
cld
dec
sub
rcl
test
mov
repnz
cmp
push
stos
mov
lods
lret
xchg
pop
int3
lock
xlat
inc
sahf
xor
test
ret
jb
sbb
das
push
adc
jg
jo
jp
push
cli
leave
dec
add
mov
scas
imul
cltd
cmc
jmp
push
cmp
ljmp
sub
aaa
ret
push
or
mov
idiv
inc
lock
push
cs
out
addr16
jb
stos
and
jge
test
in
rclb
mov
repz
lock
lcall
pop
jne
jo
mov
stc
xor
adc
mov
mov
shlb
dec
xchg
jns
lcall
fisubrl
mov
adc
inc
lret
icebp
and
mov
jl
xchg
int
or
or
ljmp
sbb
mov
repnz
jns
int
into
bound
inc
mov
adc
ret
fisubl
mov
mov
xchg
scas
aad
pop
iret
in
xorb
gs
inc
das
push
add
and
in
ja
inc
or
dec
sahf
bound
and
cmp
subb
jecxz
push
rorb
decl
xchg
cmp
popa
adc
cld
shlb
dec
stos
cmp
pop
push
aam
icebp
idiv
mov
rcrl
dec
mov
push
js
das
pop
jg
pop
dec
ja
mov
cmp
pop
inc
jno
inc
mov
insl
sub
lahf
pop
sbb
loop
incl
test
inc
pop
negb
daa
out
fcompl
dec
mov
mov
inc
adc
mov
mov
mov
or
push
push
adcl
fwait
incb
rcl
nop
dec
cmpsl
addb
out
pop
popf
iret
lcall
push
push
sub
sbb
test
push
xor
enter
xlat
lahf
js
or
mov
cli
fistpl
jmp
ret
xlat
fcmovu
pop
mov
mov
ljmp
addb
mov
push
push
jb
daa
fildl
jno
inc
dec
add
stos
lret
lcall
dec
cmp
xor
dec
mov
mov
or
pop
xchg
mov
xchg
pshufw
xor
jl
inc
cmpl
mov
addr16
and
sub
repz
xor
fists
or
xchg
in
jp
pop
icebp
lcall
stos
or
cmpsb
xor
mov
or
fcomp
ss
push
push
fcomip
call
jmp
sbb
fwait
push
in
lock
mov
cmp
jmp
add
cmp
and
and
sbb
mov
push
movsb
sbb
pop
cmp
dec
int
and
dec
lret
cld
sbb
hlt
sbb
pop
jle
out
out
leave
lahf
sbb
sbb
push
aam
fmull
incl
fdivl
test
outsb
pop
mov
jb
xchg
popf
jns
mov
cmp
pop
sbb
out
clc
sti
push
scas
cwtl
idivb
lods
out
jle
push
popf
je
pop
test
ds
iret
mov
repz
fisttps
sahf
sub
pop
f2xm1
cmc
or
push
outsb
fists
js,pn
out
les
sahf
cli
stos
dec
or
pusha
cli
stos
xchg
inc
push
cld
add
jbe
adc
decl
xlat
or
xchg
jle
push
dec
imul
mov
mov
inc
leave
mov
stos
fistps
jg
lds
adc
call
or
add
pushl
xor
push
call
add
xchg
pusha
cmp
or
divb
popa
dec
sbb
cwtl
call
iret
push
cs
cli
mov
cmp
pop
jno
aas
decl
inc
les
or
mov
jecxz
jp
pushf
jp
ret
out
mov
incl
cmpsl
js
and
xor
mov
les
gs
lahf
jbe
push
repnz
jg
aam
call
scas
arpl
fs
or
inc
addr16
mov
in
add
push
ljmp
xchg
test
xchg
mov
xlat
sti
es
aas
add
mov
inc
mov
mov
mov
lcall
sub
bsf
sub
mov
subl
push
pop
pushf
or
pushl
ss
jne
sub
bound
nop
das
pop
int3
in
adc
out
rol
sub
cmp
arpl
mov
js
xchg
sub
and
xor
or
je
shlb
outsl
test
mov
nop
cli
fidivrl
call
hlt
insb
sub
fcmovnbe
ljmp
mov
lock
lret
push
dec
outsl
jle
stos
xchg
popf
aaa
loopne
aad
jge
mov
decl
notb
lret
push
cmp
or
xchg
addr16
aad
pop
pop
lret
out
pushl
xchg
mov
cmp
fwait
int3
popf
imul
jnp
fiaddl
jb
aam
call
scas
bnd
and
sbb
add
repnz
js
pushw
cmp
inc
std
inc
movd
enter
and
clc
and
mull
ss
dec
jbe,pt
adc
cmpsl
pop
aad
sub
add
fildl
push
pop
es
xor
sub
call
aas
push
adc
pop
add
push
aaa
leave
mov
jae
push
push
mov
decl
aam
sbb
lcall
push
repz
jle
jae
cmp
lret
pop
scas
movsl
inc
faddl
jo
mov
xchg
jp
test
xchg
icebp
icebp
lods
mov
pusha
incl
filds
into
das
lahf
mov
jo
mov
adc
mov
cltd
sub
in
test
loopne
ret
pop
cltd
push
mov
fcompl
jge
insb
sbb
cmp
sub
cmc
add
fs
mov
mov
pop
and
jnp
out
std
cltd
push
popa
loopne
sbb
lds
add
fstpt
shr
inc
ja
decl
push
nop
sar
adc
cmp
and
arpl
stos
fsubr
push
and
jecxz
push
jmp
pop
dec
out
rolb
sbb
fildll
sub
mov
call
decl
ds
in
in
mov
test
add
test
sahf
ds
incl
push
sub
mov
stos
push
ja
lcall
cmp
dec
inc
xor
cmp
int3
lret
pop
xor
arpl
dec
lock
rorl
mov
push
jns
ret
add
mov
subl
cmp
jg
fisttps
repnz
iret
or
mov
sarb
mov
sub
jg
pushf
stos
push
adc
or
push
out
fwait
sti
sub
bound
push
xchg
mov
pop
jle
sbb
push
jge
push
out
mov
dec
push
adc
lret
xor
scas
in
push
push
xchg
dec
je
jbe
mov
and
sbb
lock
rolb
lcall
jge
cmp
or
xor
xchg
mov
xor
aad
fsubrs
push
nop
sub
mov
ret
inc
fsubl
outsb
mov
bound
adc
xchg
mov
jg
stc
sahf
and
rcrb
imul
sbb
jmp
jecxz
mov
jg
jo
xorl
mov
push
and
or
mov
jae
xlat
inc
fistpl
xchg
add
push
aad
in
dec
inc
in
dec
and
xchg
mov
xor
mov
fs
hlt
outsl
inc
outsl
fadd
inc
das
inc
call
call
mov
xor
movsl
or
leave
cli
jne
or
adc
jns
pop
pop
fildl
int
out
out
xor
jmp
loope
mov
jle
mov
push
daa
pushl
std
fnstenv
cmpsb
mov
push
js
adc
cmp
sbb
push
pop
mov
fnstsw
push
loopne
or
lret
push
and
iret
out
sub
sbb
or
insl
push
inc
xlat
mov
mov
mov
adc
pop
movsl
sbb
call
scas
dec
movswl
jmp
shlb
mov
enter
fildll
je
inc
inc
movsb
lcall
jecxz
ds
inc
in
outsb
mov
mov
mov
jl
iret
int
xchg
mov
dec
lcall
inc
and
adc
enter
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
adc
dec
mov
mov
orb
adc
iret
aas
les
add
add
xor
push
add
in
xor
inc
mov
int
incl
add
mov
test
pop
add
add
add
sbbb
dec
xorl
push
inc
add
adc
addb
inc
addl
es
fstpt
addl
orb
sbbl
sub
adcl
in
jg
mov
roll
adcl
aas
rorl
cwtl
js
lock
incl
sbb
je
in
mov
push
jge
shrb
xor
sub
lcall
pusha
shll
je
rorb
rclb
cmp
rolb
rorb
lds
mov
rcl
gs
nop
arpl
pop
shrb
or
data16
or
or
mov
rcrb
and
adc
add
or
in
xchg
pop
out
movsl
pusha
cmpsb
imul
inc
sarl
in
pusha
cmp
cmpsb
mov
xor
sbb
xor
stc
pop
jl
leave
scas
dec
fwait
adc
dec
imul
dec
sub
push
and
lods
mov
pmaddwd
push
fisttpll
lds
pusha
or
popa
push
pop
fs
rcrl
dec
addr16
lahf
mov
mov
std
gs
jne
ss
bound
mov
movsb
imul
lods
or
iret
cvtps2pd
lods
fstpt
sbb
push
cmp
jo
gs
jnp
ficoml
pop
push
ja
test
add
add
imul
xlat
outsb
scas
push
int
imul
sbb
inc
xor
add
push
jmp
idivl
js
mov
jns
or
push
push
add
add
push
push
loopne
aad
mov
xchg
rcrl
jnp
pop
add
mov
das
sub
insb
or
push
pop
jl
pop
int
mov
push
dec
roll
pusha
fucomip
push
addr16
mov
seta
push
push
leave
int
inc
ss
add
daa
push
cmp
jae
cltd
mov
adc
sbb
imul
sbb
push
pop
and
loop
jg
scas
mov
sbb
xor
dec
pusha
negb
pop
adc
daa
sbb
dec
arpl
imul
and
ss
repz
rcll
bound
out
pop
pop
mov
adc
and
aas
or
aad
inc
mulb
mov
add
negb
mov
jg
mov
popa
add
inc
pop
popa
add
sahf
inc
mov
add
hlt
jo
test
sub
jo
ficomps
fdivrs
push
pop
sbb
ja
mov
dec
push
lahf
cwtl
or
fs
xchg
loopne
jae
lret
xor
xor
inc
pusha
pop
pop
add
fbstp
push
jne
daa
sbbl
adc
jmp
jecxz
popa
loopne
push
sbb
jbe
divl
jne
out
jo
or
add
push
fcmovbe
mov
push
scas
add
sbb
outsb
pop
sti
addr16
push
jo
jecxz
out
add
or
cmpsb
jns
ficoms
bound
pop
xchg
repnz
jo
outsl
jp
or
mov
dec
inc
add
adc
push
fstps
jl
outsb
add
push
cmp
mov
xchg
stos
mov
sub
sbb
icebp
jl
add
sbb
fisubs
xor
int
in
xor
idivl
ret
jo
mov
mov
adc
imul
stos
rcrl
sbbb
and
lock
sub
sub
jnp
pop
sarl
stos
or
dec
and
nop
dec
sbb
mov
loope
jbe
add
mov
jmp
cmp
dec
mov
sub
or
jo
fstpl
pop
sbb
add
dec
add
add
ds
add
lods
jg
and
add
jl
mov
xorb
lock
xor
sub
in
push
repnz
mov
stos
sbb
sahf
cmpsb
pusha
or
popa
pop
push
ret
vminpd
cmp
sub
sub
jo
or
outsl
jo
jno
or
pop
daa
xchg
pop
pop
inc
add
add
xor
leave
enter
decl
mov
cwtl
ds
push
test
pop
xor
incl
cld
scas
vmovsd
jbe
cld
pop
pop
loop
pop
cmp
inc
inc
ljmp
pushf
dec
pop
ja
das
mov
testl
cmp
xor
in
fiaddl
push
sbb
lcall
repnz
add
aaa
insb
dec
inc
xchg
lahf
add
push
jle
mov
outsb
fadds
cmp
jmp
or
aam
cmp
dec
inc
jno
int3
or
jne
aaa
cld
cmp
daa
fldl
jo
pop
call
add
push
enter
scas
mov
inc
jns
push
add
dec
sub
mov
jbe
xchg
imul
gs
lea
jo
jae
fbstp
and
imul
pop
loopne
aaa
arpl
nop
outsb
or
or
adc
jb
xlat
or
and
popf
add
jmp
add
incb
mov
add
jg
add
clc
test
mov
scas
push
adc
mov
testb
xlat
orb
pusha
push
push
sarb
clc
js
jo
add
shll
lcall
push
jp
push
pop
mov
add
push
notl
fnsave
sub
sbb
or
add
in
add
adc
loopne
mov
inc
adc
mov
ja
lds
sub
filds
std
add
mov
cmp
jp
into
xor
jecxz
push
cld
lret
pop
mov
sub
add
jbe
inc
or
xor
test
decl
shr
or
push
pop
lock
pusha
lock
xchg
push
icebp
add
adc
mov
or
fimull
cmpsb
pop
dec
sbb
nop
add
in
js
insb
js
cmp
pop
adc
push
push
sub
push
dec
lock
imul
jecxz
sub
rcrl
push
and
test
fstpl
roll
xor
add
push
sbbb
rcr
sbbb
dec
cmp
lock
lods
imul
mov
cmpsb
xor
xchg
stos
push
adc
lock
mov
pop
and
jb
les
or
cmpsb
imul
pop
rcrl
pop
sbb
xchg
dec
jo
sbb
lods
imul
cmpsl
dec
shrl
mov
mov
dec
fs
xor
xor
push
add
mov
cmp
int3
sbb
aad
shlw
dec
lods
push
stos
xchg
pop
imul
or
pop
xor
pushf
dec
arpl
jle
sahf
cmpsb
imul
inc
cmpsb
insl
lods
mov
mov
dec
xchg
lahf
push
repnz
push
adc
lock
jno
push
xor
ret
icebp
or
shll
pusha
mov
or
ss
mov
pop
push
sbb
pusha
jns
cmp
fwait
cmpsb
fildl
rclb
imul
int
lcall
sbb
adc
loopne
add
mov
push
lret
gs
pop
shll
sbb
subb
cmp
and
stc
ficoml
cmp
add
pop
add
or
dec
push
cli
lea
add
push
ss
pop
jae
js
outsl
mov
sbb
iret
in
adc
mull
push
loop
xorl
out
pop
mov
jo
fnsave
inc
jnp
fnstenv
or
pop
imul
je
mov
push
negb
push
cs
clc
pop
ja
xchg
hlt
aaa
mov
push
addr16
daa
scas
mov
xchg
push
out
push
adc
sbbb
push
sahf
push
mov
jg
aas
fidivrs
jnp
notl
or
push
das
push
or
cmp
dec
incb
dec
push
popf
out
or
jo
push
shll
ss
or
pusha
and
jns
cmpb
loope
push
pop
sbb
ja
xchg
add
cmp
repz
jae
jle
sub
iret
mov
add
cmp
repz
ja
sub
mov
push
fs
push
pop
test
jmp
repz
jmp
cltd
and
dec
xchg
push
jl
fstps
pop
insb
sub
or
repz
repz
stc
add
iret
repz
mov
or
repz
and
iret
repz
in
pop
sbb
repz
xchg
inc
jp
aad
jns
out
jle
sub
sahf
out
cmc
add
jns
xor
int
jns
out
lods
push
xchg
jns
out
in
or
mov
repz
popf
arpl
jle
fldl
jmp
jns
outsb
cs
dec
sahf
dec
std
push
adc
pushl
ret
popa
sahf
out
sahf
and
out
jns
pop
sbb
sahf
cmp
imul
sahf
or
mov
add
jne
lret
sahf
out
dec
gs
out
jns
jmp
sbb
dec
jge
fldt
sub
mov
dec
sti
out
mov
ret
jae
cmp
cmpsl
or
pop
cmp
out
jns
xchg
out
xchg
jnp
xlat
je
sarl
scas
or
repnz
decb
push
pop
jns
iret
jae
aaa
iret
addr16
daa
in
call
xchg
inc
out
repz
sahf
out
pop
lahf
jg
aas
mov
add
mov
pop
inc
add
add
sub
push
out
add
add
jno
mov
ds
push
add
add
cmp
and
add
jmp
jle
xchg
cmpsb
repnz
sbb
pop
push
dec
movsl
test
add
dec
push
imul
push
out
mov
adc
jo
cltd
push
ljmp
xor
repnz
ljmp
xor
ja
popa
push
out
inc
push
shl
les
jo
push
lret
jmp
pop
xchg
fs
int
fisttpl
pop
mov
aad
ja
rclb
inc
jl
jle
sub
ljmp
mov
sbb
mov
mov
test
in
insl
scas
mov
hlt
cmp
insb
adc
test
fs
std
adc
mov
insb
push
arpl
jg
or
cmp
inc
pusha
aad
jno
mov
mov
decl
test
movsl
add
cwtl
mov
sub
mov
lods
sbb
fdivs
mov
out
cli
incl
or
shrl
lcall
jmp
hlt
pushl
xchg
mov
mov
testl
or
ljmp
out
dec
push
rol
data16
inc
fdivl
jno
add
rcrb
jbe
pop
loopne
pushl
push
pop
in
lahf
int3
aam
call
lret
pushf
test
decl
xchg
out
push
loope
or
insl
or
fs
pop
arpl
or
imul
das
sar
gs
adc
add
ds
cwtl
test
pmaddwd
cmp
mov
scas
jmp
mov
cld
and
ficoml
lcall
jmp
push
mov
jb
mov
mov
xchg
fdivrs
jmp
jmp
outsb
xor
mov
das
mov
add
sbb
or
ljmp
ret
jno
push
push
inc
add
out
adc
mov
fidivl
outsl
and
aam
mov
icebp
stc
ficomps
leave
fldcw
fstpl
xlat
call
or
mov
mov
insb
mov
in
dec
mov
lcall
mov
movb
push
ja
popf
ljmp
add
push
fdivl
or
jnp
fs
shrl
push
pop
push
hlt
iret
push
in
jg
aas
and
scas
add
dec
sahf
pop
jge
xchg
sub
add
add
push
ljmp
push
divl
orb
imul
aam
pop
sub
mov
dec
jmp
fistpll
mov
mov
pop
mov
shll
lods
repnz
decl
addr16
cmpsb
and
mov
mov
mov
and
sbb
scas
or
ss
jp
incl
out
pusha
fildll
mov
xchg
popa
lret
in
mov
outsl
and
or
ja
int3
cld
inc
or
shlb
add
xlat
or
pushl
pop
call
ret
shlb
loop
ficomps
ret
fptan
arpl
arpl
push
cmc
xchg
insl
add
or
addr16
jb
jl
jge
mov
fistps
mov
jnp
sbb
xchg
repnz
fdivrl
fisttpl
sub
sar
incl
pop
mov
push
xor
mov
negb
ja
outsl
mov
sbb
pop
or
pop
cmc
decl
xor
or
sub
clc
sub
imul
call
inc
insb
push
xchg
or
stos
addl
add
sahf
cmpsl
decl
push
pusha
shlb
ja
ds
shrl
cltd
or
inc
fdivs
lods
scas
mov
std
cmp
inc
push
pushl
mov
iret
xchg
mov
pop
mov
jg
sarb
push
ficoms
fldenv
sarl
mov
dec
popa
std
sbb
imul
ljmp
outsl
sub
mov
or
in
add
sub
sbb
pop
xor
cmp
sub
hlt
ja
jns
pop
push
cmp
decl
mov
enter
shll
out
cli
xor
hlt
jecxz
dec
mov
mov
mov
incl
xchg
and
push
sub
js
inc
out
popa
stos
xlat
scas
cs
loopne
jmp
mov
sub
addl
test
ljmp
ss
jecxz
insb
jmp
aas
inc
aam
pop
int
and
xchg
sbb
lcall
cmpsl
sahf
ja
mov
sbb
repz
lcall
pop
adc
jg
incl
xlat
int3
imul
jo
fdivl
cmp
pop
sub
rorl
pop
or
pushl
std
pushl
inc
fisttps
pop
mov
iret
gs
sub
mov
dec
mov
lahf
pop
inc
lea
out
mov
add
jae
dec
call
inc
pushl
inc
sub
pop
cli
dec
jns
mov
sub
mov
fcomip
lea
mov
lds
and
xchg
or
xchg
lea
testb
dec
pop
mov
xlat
inc
je
cli
outsb
xor
pop
mov
mov
push
cwtl
adc
fsubrp
test
loope
insb
lret
cli
cmc
mov
out
imul
sbb
cmp
incl
push
out
adc
and
inc
and
inc
out
std
fimull
lret
push
fwait
cmp
dec
pop
scas
xchg
add
int3
cmpsl
xor
loope
lods
adc
pushl
adc
adcl
xchg
mov
xchg
leave
adc
inc
jle
xchg
ja
loop
jns
ljmp
dec
dec
and
mov
or
or
lea
fisubs
into
out
jle
add
out
jmp
inc
ret
adcl
int3
add
pop
xchg
lcall
cmpsl
test
cwtl
cmp
cmp
test
mov
ja
scas
adc
insb
hlt
inc
xor
fldcw
push
ret
adc
push
std
and
jo,pt
sarl
fdivrs
out
mov
mov
movsl
jnp
sbb
pushl
mov
ja
fldcw
dec
sub
or
sub
add
in
add
mov
outsl
bound
xchg
jmp
hlt
out
les
ret
xchg
fdecstp
push
mov
ljmp
xchg
fidivs
pushf
aad
test
push
lret
jo
nop
sbb
call
sub
push
fisubs
pop
lds
push
call
dec
sbb
mov
pop
ret
cwtl
xchg
test
fldenv
lahf
fdivrp
test
call
addb
mov
rorl
mov
incl
and
sub
adc
sub
mov
pop
dec
loope
dec
or
imul
inc
jp
decl
xlat
cli
lret
lock
shlb
mov
stc
jb
xlat
loopne
adc
mov
jo
popf
pushl
mov
add
insb
cmp
cmp
adc
sub
test
jns
pushl
dec
loopne
cmp
cmpsl
push
mov
xchg
adc
in
xor
data16
lcall
xlat
daa
push
add
dec
loope
test
sub
int3
in
mov
add
outsb
call
push
adc
jle
push
ret
xchg
xchg
dec
insb
shlb
mov
pop
adc
push
pop
or
xchg
rorb
aam
aas
adc
adc
mov
movsb
fsubrs
mov
pop
shr
popf
in
fsubr
out
inc
jmp
mov
or
xorl
lret
imul
ja
pop
dec
sar
ljmp
fmull
pop
jle
enter
mov
dec
testl
adc
sar
outsl
jne
and
dec
push
add
mov
mov
jg
ret
dec
jl
add
push
dec
add
jo
rorl
sub
push
or
stc
sbb
decl
lods
xchg
fmuls
cmc
sub
pop
or
leave
in
adc
cld
jmp
push
or
sbb
sbb
mov
sbb
repnz
pop
jmp
mov
outsb
dec
jae
jmp
cmp
fdivl
adc
mov
pop
pop
inc
dec
cmp
sub
cmp
call
or
ret
out
inc
aas
hlt
test
cmp
push
add
nop
jge
aaa
leave
cli
inc
fidivl
jnp
push
xor
xor
add
xor
imul
ljmp
daa
ss
sub
and
out
ljmp
sub
add
jmp
fidivrs
sub
sbb
cmp
mov
gs
lcall
push
mov
jo
out
jno
pop
push
jae
xor
jb
and
push
pushl
icebp
pop
je
fwait
aad
xchg
mov
mov
jg
or
jl
je
jns
push
inc
cmc
mov
cmp
lret
dec
cs
insl
and
cmp
nop
fbld
xchg
xchg
push
push
xor
cmp
imul
adc
sub
add
inc
jmp
gs
fs
add
data16
loopne
xlat
sbb
ljmp
mov
outsb
xchg
dec
add
dec
xor
sbb
insl
mov
dec
pop
fstpl
lds
xchg
push
call
incl
and
inc
mov
pop
cmovo
out
inc
loop
mov
push
xor
mov
call
mov
jae
clc
push
inc
stos
cmp
adc
push
sub
push
pop
cmp
pop
and
pop
jns
data16
lcall
xchg
cld
sti
sub
outsl
pop
xchg
das
lods
pop
jg
xor
loopne
iret
mov
jmp
movsl
jae
mov
fsin
out
addr16
in
dec
es
lock
decl
movsb
sahf
mov
in
sbb
das
call
jne
stos
jmp
pop
imul
mov
std
cmp
sar
popa
insb
xchg
push
push
push
call
adc
cli
lods
fdivr
mov
scas
lcall
jmp
ret
cmp
inc
icebp
imul
pop
sub
cmc
add
decl
lahf
pop
js
test
mov
fcmovb
jecxz
fildl
jno
je
mov
sub
dec
pushl
fsubl
or
xlat
adc
dec
fsubr
aam
mov
aad
movsb
ror
into
mov
shll
jmp
out
pop
pushf
les
sbb
xor
ret
xchg
ret
pop
adc
ljmp
adc
push
scas
dec
lret
pusha
lds
enter
leave
mov
inc
int3
mov
rol
iret
ljmp
into
mov
insl
nop
roll
xchg
out
jmp
xchg
push
push
fs
incl
ljmp
pop
mov
sahf
imul
cli
popf
fldt
pushl
cltd
aas
mov
xor
iret
xor
dec
mov
mov
call
popf
orb
dec
add
dec
and
mov
lcall
mov
subb
faddl
stos
int3
xchg
test
pop
xchg
jb
xchg
loop
push
add
stos
push
outsb
movsb
stos
stos
pop
lock
adc
scas
in
lods
outsl
lods
cmpsb
lods
lods
out
icebp
cmpsl
fdivrp
pushl
cmpsb
mov
movsb
mov
sub
mov
push
std
jl
bound
les
incl
mov
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
push
stos
mov
jmp
xlat
mov
stc
notb
into
pushf
xchg
mov
jl
push
and
scas
out
cmc
adc
mov
mov
scas
call
test
bound
and
and
adc
mov
jne
or
loopne
ljmp
xchg
xlat
inc
mov
push
int3
ja
loopne
adc
pusha
push
sbb
xor
push
cli
mov
lods
inc
aaa
sarb
cmpsl
mov
outsl
into
int
jg
xchg
ljmp
pushl
sbb
mov
mov
inc
jp
shrl
jmp
cmp
das
add
das
repz
in
xchg
sbb
xchg
in
xchg
decl
cmp
movsl
dec
iret
shrb
ja
adc
ljmp
in
inc
xchg
mov
sub
pop
cmp
cmp
and
push
sahf
loop
outsl
dec
jg
movl
mov
rcrb
lea
sbb
jg
daa
out
std
mov
insl
hlt
adc
call
adc
cmpsl
aas
test
dec
nop
sbb
push
mov
adc
test
lods
push
pop
jg
jnp
ret
push
sub
pop
sbb
cmpsb
mov
fists
rcrl
cmpb
das
lret
jnp
dec
ja
prefetchw
or
jae
outsl
cli
call
movl
or
cld
adcl
push
mov
mov
push
xlat
inc
add
movsb
pop
mov
in
fildl
outsb
js
sub
pop
lcall
cmp
das
xchg
adc
sub
pop
clc
or
cmp
dec
push
inc
iret
icebp
cmpsb
adc
xchg
jbe
cs
cwtl
pop
fwait
push
std
jo
in
inc
dec
lock
jmp
das
dec
leave
iret
cmp
stos
out
arpl
aas
imul
adc
push
mov
aaa
pop
in
call
loope
mov
cwtl
call
scas
jmp
inc
addb
ds
mov
xlat
loopne
xor
mov
in
mov
jle
inc
sub
in
call
push
inc
xchg
sbb
xor
jge
mov
sahf
in
sub
push
nop
mov
xor
jl
cmpsl
lcall
outsb
xor
test
cmp
ds
add
mov
cmc
scas
or
and
ljmp
sahf
mov
fsts
js
scas
dec
sarb
std
rcrb
inc
push
pop
xchg
idiv
pop
scas
clc
xchg
sub
sbb
or
imul
xlat
ljmp
adc
ficomps
mov
ret
mov
es
add
and
jo
mov
sahf
and
sahf
push
inc
cmpsb
mov
mov
mov
gs
jb
add
into
movsl
out
xchg
mov
rdmsr
fsts
xchg
push
mov
sbb
out
pop
cmc
cmp
jbe
sbb
jbe
jp
add
jae
push
movsb
push
mov
cmp
inc
stc
out
dec
jbe
mov
into
jb
inc
fcoml
inc
clc
fs
jns
stc
lret
push
xchg
inc
and
lcall
mov
lock
imul
push
fwait
cmp
ss
test
cltd
xchg
cs
add
call
ret
jno
aam
loope
xor
ss
mov
addl
in
negb
pop
jmp
icebp
fiadds
subb
aam
into
mov
xor
jg
jg
jmp
mov
sub
lret
sbb
sbb
adc
jle
test
decl
imul
stos
mov
jle
jg
test
and
mov
decl
cmp
fisubrs
mov
rcll
out
mov
dec
or
ljmp
rolb
pop
outsb
sti
cmp
fucomi
pop
xchg
addr16
push
or
imul
pop
std
mov
fdivrp
mov
xor
or
clc
insl
les
push
push
arpl
mov
xchg
mov
push
push
mov
sub
jl
sbb
sbb
dec
mov
repnz
jno
jnp
inc
fsubp
fcmovbe
jge
call
aam
push
jl
test
in
insb
cwtl
push
fwait
imul
jne
leave
in
jmp
pop
dec
lcall
cmp
cmc
les
enter
pop
sub
in
addr16
ret
add
sar
pushl
test
pop
or
cli
mov
mov
stc
inc
int
insb
jecxz
mov
or
pop
xor
xlat
push
addb
push
fidivs
ljmp
mov
movsl
add
or
or
mov
or
and
outsl
jl
jmp
popa
sbb
cmp
shlb
mov
mov
stc
mov
pop
pusha
mov
aam
xchg
leave
mov
imul
cwtl
sbb
push
insl
cmp
xchg
sbb
add
popa
bound
xor
or
push
xchg
in
jmp
add
rorl
les
mov
in
mov
push
je
mov
jl
fstpl
ljmp
repz
dec
gs
popa
pop
lds
mov
add
xor
mov
movsl
inc
ret
xlat
pop
rol
insl
sub
hlt
sti
mov
outsb
frndint
push
ljmp
mov
pusha
mov
jae
add
and
jno
fdivr
lcall
add
inc
or
adc
push
test
mov
fildll
mov
data16
xor
lahf
fcomip
jmp
fxch
cwtl
dec
rcrb
mov
mov
pop
rorb
cmp
mov
andl
mov
loop
mov
inc
cmp
ja
sti
call
sbb
or
imul
insl
push
test
test
push
iret
or
popf
cmc
add
daa
addb
mov
setae
mov
movsb
push
ret
bound
jg
jg
addr16
out
ss
xor
add
sbb
shrl
loopne
fidivrl
cwtl
lcall
dec
int3
push
mov
stc
call
mov
aad
mov
pushl
push
fadd
les
mov
push
shlb
mov
dec
daa
or
pop
loopne
or
loopne
dec
idivb
out
ret
cmp
jle
fistpll
out
mov
mov
inc
sbbw
fisubrl
mov
xor
xchg
inc
or
fldl
push
mov
cmp
or
call
mov
xchg
mov
xlat
jmp
rcr
sahf
mov
ret
arpl
es
decl
insl
xchg
or
push
test
lea
addr16
add
push
dec
sbbb
incl
sbb
insl
rorb
or
hlt
fcmovnu
and
rcl
push
aam
inc
call
fiaddl
int
mov
ja
out
inc
ja
or
add
push
lcall
add
pop
jo
sahf
incl
bound
shr
insb
iret
inc
pop
or
js
or
pushl
add
popa
das
pusha
push
divl
outsb
ja
push
shrl
es
pop
fdivr
mov
fdivrs
lock
mov
sahf
lds
mov
jmp
xor
ljmp
mov
add
stos
ficoms
addr16
cmp
mov
mov
outsl
sub
or
mov
rolb
out
jmp
sbb
inc
int
bound
fwait
insb
lds
ja
inc
test
inc
xchg
aaa
ljmp
ret
add
hlt
fxch
push
mov
or
scas
jle
popa
subl
mov
lods
fldenv
adc
out
inc
xchg
shrl
out
jecxz
mov
cli
addl
sbb
sbb
cli
fistl
lret
lcall
insb
sbb
inc
aas
fbstp
pop
push
lcall
jae
adc
and
ja
push
call
shl
cmp
andl
jmp
pop
scas
stos
mov
imul
mov
imul
sub
hlt
pop
or
sub
inc
repz
mov
jo
jno
imul
sub
negl
pushl
ret
sbb
jne
pop
mov
sti
icebp
test
jns
mov
cmp
lock
call
sbb
fisubrs
cmp
jns
add
cmp
sbb
ljmp
mov
jb
mov
addl
ret
lds
cmc
xchg
cmpsl
in
lea
jmp
xlat
xor
cli
bound
inc
mov
insb
adc
outsb
xchg
push
xchg
jmp
xlat
cwtl
push
cmp
test
rorb
cli
lret
xchg
lea
pop
xchg
jns
sbb
cmpsb
dec
test
jmp
adc
jo
ret
fwait
lcall
test
or
jmp
xchg
scas
mov
int3
cmpsl
int3
and
mov
loope
dec
aas
shr
pusha
adc
jmp
mov
dec
and
das
push
adc
sub
aas
jns
leave
and
mov
or
je
adc
xor
lods
dec
lea
lahf
jle
xor
jmp
repz
std
ret
rclb
cmp
gs
pop
mov
push
cmpsl
gs
incl
test
leave
out
scas
lret
mov
hlt
insb
push
xchg
fnstcw
int
ret
or
lcall
inc
adc
insb
jo
daa
ja
subb
inc
jno
out
pop
add
test
inc
mov
xchg
pop
mov
cwtl
movsl
insb
ljmp
pop
fcomps
sub
fldl
icebp
lcall
xor
scas
bound
and
lds
cmp
adc
cmpsl
xchg
mov
fsts
jmp
arpl
fisubrs
sub
subb
sub
dec
sub
ljmp
inc
sub
cltd
fidivs
loope
lds
mov
gs
fisttps
in
test
xchg
addr16
lahf
mov
mov
sub
int3
cmp
call
jg
imul
or
push
test
jg
sbb
mov
pop
adc
xor
xor
cld
pushl
imul
test
ss
pop
mov
xor
xlat
dec
sub
int3
mov
pop
xlat
pushl
push
xchg
adc
lea
or
jo
jnp
inc
mov
and
in
insb
pop
into
adc
inc
xlat
push
push
test
push
test
shlb
lds
addr16
pop
dec
push
cmpsl
lcall
sbb
add
pop
sub
cltd
xor
fdivs
cli
jle
test
sub
xchg
popf
int3
sbb
rorb
mov
xchg
stc
mov
repz
mov
mov
outsb
mov
das
lds
ss
negl
push
aas
sub
jmp
dec
movsl
pop
xchg
sbb
mov
daa
or
rorb
bound
out
and
lcall
xlat
mov
cld
dec
cmpl
xchg
mov
shlb
xchg
lret
adc
clc
mov
std
ja
and
mov
jle
hlt
adc
aaa
or
jbe
or
jg
push
jne
int3
xor
jb
inc
push
cld
test
outsb
std
inc
mov
fdivr
lret
ret
lea
dec
push
test
adc
lock
repnz
test
repz
out
loope
sbb
jmp
xchg
push
cmc
sahf
sub
cmp
loop
leave
inc
loopne
ja
loope
sbb
add
in
popa
fwait
out
ffreep
out
mov
in
xor
cwtl
inc
es
jmp
ljmp
and
mov
in
dec
inc
loopne
sub
leave
xchg
decl
rolb
xchg
ret
gs
pop
pop
pop
enter
lret
std
lcall
sbb
test
xchg
aad
int
imul
adc
fstp
imul
incl
mov
cmpsl
fcom
fldcw
dec
dec
frstor
cltd
and
cld
fisubs
adc
aam
ficomps
cld
pusha
inc
xlat
or
jno
call
mov
ret
shl
enter
mov
rorb
pop
scas
fdivl
cltd
mov
decl
pop
icebp
jb
aad
inc
orl
or
or
and
scas
incl
add
lret
lret
mov
xchg
out
es
jmp
xchg
ja
pop
xchg
xor
xchg
repz
pushf
insl
add
sahf
sub
lcall
jecxz
add
scas
cli
mov
mov
lret
and
pop
dec
mov
jg
mov
arpl
mov
or
mov
mov
mov
frstor
mov
inc
dec
idivb
jmp
mov
addps
dec
out
mov
icebp
push
addr16
mov
call
or
stos
mov
scas
mov
cmp
movsb
and
cmpsb
in
xchg
jb
mov
sub
add
lods
das
insl
push
xor
jno
sbb
mov
out
sbb
movsl
fstps
cmp
pop
sbb
xor
jp
add
call
call
in
movlps
hlt
popa
pop
das
ficoml
in
mov
adc
mov
mov
cmp
rcl
movl
push
push
test
add
jp
push
sahf
call
les
pop
scas
jne
add
test
adc
or
or
dec
sub
or
int
js
pusha
daa
mov
mov
and
jecxz
and
mov
pushl
and
and
dec
in
imul
test
xchg
sub
ljmp
bound
sub
jo
sub
pop
adc
pushf
xchg
daa
cmp
sub
mov
cmp
xchg
cmp
roll
xchg
xor
scas
test
pop
lahf
aaa
leave
jnp
inc
or
icebp
xor
xor
rcrl
xor
mov
inc
outsl
insl
cld
ja
sub
jmp
ljmp
insb
jmp
ds
push
and
repnz
pusha
mov
ljmp
xchg
cli
jns
addr16
and
ja
adc
xor
jge
jb
pushl
pop
add
loope
jo
mov
jne
popf
in
je
neg
add
dec
xorb
pushl
mov
push
mov
out
roll
jnp
int3
push
jp
cmpsb
arpl
js
sbb
aaa
cld
cmp
jb
add
shlb
mov
into
push
movsb
outsb
stc
add
js
jl
sub
dec
add
lods
adc
and
sbb
jmp
add
push
jbe
filds
inc
add
sub
pop
cmp
add
stos
pop
mov
les
dec
push
sbb
incl
dec
inc
cmpsl
mov
add
fisttpl
cmpxchg
add
punpckldq
gs
add
push
inc
adc
push
testb
xchg
pushf
xor
inc
fimuls
addl
pop
pop
fiaddl
xor
incl
mov
enter
scas
out
add
hlt
pushl
xchg
push
enter
add
imul
cmp
incl
nop
mov
xchg
add
push
fldl
pop
fbstp
cmpsl
arpl
push
add
sbb
pop
movsl
xor
add
jno
and
enter
lcall
mov
inc
xor
outsl
add
jg
rclb
sbb
sti
js
rclb
cld
pushl
in
call
inc
add
and
xor
out
enter
cmp
push
cmp
in
pop
fcmovnu
enter
loop
in
es
mov
xor
sub
add
call
pop
ja
add
push
mov
clc
mov
add
pushl
cld
lcall
dec
outsl
idivb
cmc
or
xchg
cld
rcrb
lret
dec
jb
jmp
mov
add
sbb
fsubrs
jg
add
inc
sbb
inc
and
hlt
xchg
push
dec
call
ja
adc
cmp
add
sbb
not
add
jbe
push
lret
add
jg
jg
loope
ret
pusha
test
mov
pop
mov
or
fistpll
cs
inc
out
xchg
jle
loopne
test
das
push
cmp
dec
imul
or
push
sub
mov
mov
cwtl
cmc
add
call
jle
fidivl
sbb
icebp
mov
inc
sub
ljmp
jecxz
mov
sbb
xlat
jg
aam
js
insb
outsb
pop
hlt
add
es
add
nop
data16
aas
mov
xchg
pop
orb
push
repz
sbb
mov
pop
icebp
iret
mov
in
mov
sbb
pop
adc
jo
add
dec
das
fiadds
and
xorb
inc
out
xchg
pushl
aas
mov
cld
ds
jb
sbb
lret
mov
mov
call
std
push
incl
call
mov
aaa
out
push
add
addb
ds
incl
out
ljmp
and
scas
int3
pop
mov
add
jg
call
pop
mov
stos
in
pop
add
sbb
add
xchg
add
pushl
xor
out
mov
sahf
aam
push
stc
mov
jge
push
pop
lds
cmp
outsl
jg
or
add
xchg
or
cmpsb
insl
add
loope
cli
cld
sbb
call
ljmp
push
cmc
dec
dec
add
and
jne
adc
js
xchg
fstps
dec
aas
dec
scas
cs
incl
sub
inc
movsw
add
xchg
pop
sbb
sub
jns
mov
and
repnz
lock
decl
xlat
jle
add
mov
add
mov
add
inc
fldcw
mov
xor
fcoms
add
stc
mov
gs
add
mov
rcr
mov
ss
push
add
jb
lcall
xchg
lock
loope
add
fxch
aad
mov
test
sbb
inc
jg
jbe
add
data16
jp
iret
ljmp
fwait
add
sbb
cmp
add
icebp
mov
lcall
and
fwait
clc
inc
call
push
mov
lods
es
adc
mov
add
jmp
add
lock
bound
imul
mov
ss
xchg
cltd
xor
add
push
mov
cld
add
lcall
jae
jno
lret
loope
ja
ss
out
mov
add
aas
out
inc
addl
push
mov
jbe
pop
notb
add
push
ds
add
ds
inc
add
std
cmp
test
inc
cmp
xorl
pop
mov
add
mov
adc
in
test
orl
incl
pop
jle
cmp
arpl
cltd
in
leave
mov
push
lock
ljmp
jns
push
cmpsl
rcr
ret
outsl
fisubrs
sarl
xor
decl
inc
or
cs
add
pop
sub
ret
scas
addr16
cmpsb
add
pushl
mov
pop
mov
jp
cltd
mov
push
icebp
fndisi(8087
jg
jmp
imul
mov
or
or
pushl
cld
lods
add
popa
or
mull
or
cmc
add
rorb
icebp
add
sbb
outsl
gs
gs
loopne
popa
test
popf
loopne
push
or
mov
or
add
rorl
repz
call
outsl
mov
loope
popa
add
popa
pop
repz
stos
jae
pusha
xor
cmp
dec
repz
xchg
adc
arpl
xor
inc
addl
repz
repz
cmp
xor
popf
sbb
xor
repz
dec
lea
repz
xor
and
adc
lcall
test
jns
mov
jns
cmpsb
cltd
sbb
imul
or
jns
cmpsb
jns
mov
rcll
jns
cmpsb
xchg
adc
popa
mov
and
inc
addl
jns
mov
jns
cmpsb
sahf
push
out
outsb
scas
lcall
mov
idivb
cmpsb
jns
mov
push
cmpsb
jns
cmpsb
xchg
push
out
cmpsb
lcall
xchg
cli
jns
cmpsb
jns
mov
jnp
cmpsb
lcall
mov
add
imul
dec
imul
add
loop
imul
inc
sarl
insb
push
xorb
in
add
in
add
insb
jo
push
lods
add
mov
dec
sbb
mov
mov
je
push
mov
xor
push
aam
out
jnp
add
add
add
sbb
movsb
add
add
ja
push
test
add
ficomps
push
mov
fadds
out
jnp
cwtl
add
add
mov
sub
push
enter
push
fidivrs
mov
push
lock
jnp
mov
push
rolb
add
adc
push
loopne
pusha
sbb
mov
mov
add
add
mov
push
incl
mov
sbb
and
scas
repz
repz
divl
dec
xchg
out
movl
jmp
mov
dec
repz
mov
xor
jl
mov
mov
push
pop
pushf
push
sbb
mov
out
stos
out
stos
jo
sbb
imul
imul
imul
mov
jb
mov
dec
clc
call
sti
add
add
pop
inc
pop
mov
mov
pop
testl
add
xor
or
or
or
aas
add
add
or
fistl
icebp
push
add
aas
add
add
add
ltr
mov
je
adc
adc
jbe
jg
adc
push
mov
or
sbb
scas
out
add
in
or
sbb
jnp
jle
jecxz
add
daa
andl
xor
xor
fwait
mov
sbb
test
adc
adc
test
adc
inc
adc
add
in
clc
notb
or
adc
fwait
mov
jne
jne
std
adc
pop
sti
lcall
mov
xor
mov
mov
mov
lea
cs
xlat
pop
imul
outsb
inc
pop
mov
pop
cwtl
icebp
push
xor
pop
push
mov
jno
xor
out
clc
aas
icebp
add
xor
aam
sbbb
clc
incl
jo
add
push
xor
lcall
add
and
pop
jmp
add
push
daa
dec
push
inc
out
mov
push
xor
pop
data16
imulb
sbb
ljmp
pop
lock
xchg
adc
insb
add
jo
jg
lret
add
xchg
add
pushf
loopne
or
je
std
xor
jo
out
mov
mov
mov
ds
and
or
xorb
adc
inc
adc
push
add
es
into
dec
jo
test
xor
and
mov
out
add
push
fidivs
mov
cwtl
add
sarl
addl
incb
in
das
xor
decb
add
adc
sbb
and
xor
inc
add
pusha
icebp
adc
popa
je
add
aas
lods
jmp
adc
dec
out
ficomps
sbb
sbb
add
pop
faddl
xchg
imul
cmp
out
pop
imul
insb
push
mov
popf
std
add
cld
push
std
lret
cmove
push
or
mov
sarl
les
jae
pushf
and
and
fadd
rolb
insl
stc
filds
sub
aad
dec
daa
fisubl
jbe
push
push
scas
add
nop
cli
add
in
scas
fldz
mov
cmpsl
sub
push
outsl
and
popf
int
mov
mov
gs
divb
aad
imul
xor
xor
dec
push
push
inc
jle
add
or
andb
jle
add
scas
mov
cwtl
push
inc
rcll
xchg
inc
inc
inc
mov
dec
dec
dec
mov
dec
push
scas
push
mov
pop
popa
bound
jmp
push
insl
outsb
mov
mov
mov
jp
xor
push
mov
ss
cmp
das
xchg
jb
je
jbe
js
mov
sti
xchg
and
push
push
ds
mov
mov
addr16
mov
scas
push
stos
push
aas
pop
pop
insb
ss
movsl
pop
pop
pop
mov
arpl
cltd
addr16
imul
cmpsl
es
push
xchg
cld
jo
mov
ss
mov
mov
sahf
imul
dec
into
adc
adc
jg
imull
fcomps
jle
inc
std
jnp
push
mov
or
cmp
push
notb
jge,pt
scas
sbbl
sub
out
inc
aas
push
xchg
or
add
adc
push
mov
rorl
cs
iret
pop
add
pop
add
add
ljmp
std
add
cmp
add
push
add
push
add
add
push
add
cmc
mov
jnp
dec
add
add
add
add
pop
in
sti
lcall
add
add
popa
add
pop
add
add
jp
fldl
lcall
cmpsb
jl
aas
mov
out
add
add
cli
mov
call
add
add
ljmp
std
imul
sub
lret
pop
add
add
and
jo
and
mov
add
adc
pop
sbbb
pop
add
add
fsubrp
or
add
jb
add
mov
or
adc
push
inc
pop
lret
jno
fsubrl
add
add
add
mov
xor
add
add
add
dec
add
pop
mov
lret
xor
add
or
fldt
ljmp
int
fdecstp
add
add
mov
lcall
mov
push
add
add
pop
add
cld
pop
mov
add
push
add
mov
add
insb
ss
ss
add
add
add
add
mov
add
add
pop
shrb
cmp
cs
add
add
add
sub
incb
jb
add
and
or
add
pop
add
or
fmuls
add
adc
sub
add
or
adc
push
add
imul
add
add
and
rcrb
xor
xor
pushl
sti
xor
repnz
mov
xor
movsl
xor
cmpsl
xor
pushl
push
add
xor
in
push
add
xor
ret
xor
cld
xor
mov
xor
pushl
dec
add
xor
stos
xor
stos
xor
lods
xor
scas
xor
mov
inc
add
xor
pushl
inc
add
xor
mov
xor
mov
xor
add
xor
add
pushl
cmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
xor
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
sub
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
incl
add
xor
add
xor
add
xor
add
sahf
add
sbb
inc
add
pop
push
ds
and
cmp
and
cmp
and
push
cmp
ljmp
push
ss
sub
xor
sub
xor
sub
push
xor
pushl
push
cs
xor
sub
xor
sub
xor
push
sub
cmp
es
cmp
pop
add
inc
push
sbb
add
inc
push
sbb
inc
push
sbb
inc
push
pop
add
dec
push
adc
add
dec
push
adc
dec
push
adc
dec
push
syscall
push
push
push
add
push
push
pop
push
sbb
lds
and
inc
pop
push
sub
pop
push
pop
push
bound
jb
push
adcb
lds
mov
push
mov
popa
fwait
ret
add
loop
pop
add
push
and
add
add
hlt
rolb
loop
pusha
sbb
add
add
or
push
sub
and
add
or
or
or
lds
fiaddl
cli
add
aas
push
repnz
popa
inc
ds
add
or
push
lret
inc
and
add
push
lret
or
ficoml
ljmp
or
adc
sub
inc
lret
pop
ljmp
jp
sbb
xchg
test
popa
jo
mov
sbb
fcmove
ljmp
mov
jo
sbb
sub
cmp
dec
stos
and
lret
ret
xchg
repnz
and
outsb
mov
adc
sbb
sbb
rcrb
ret
xchg
fiaddl
mov
fdivs
add
rolb
loop
adc
add
add
adc
jb
cmp
and
push
xchg
push
inc
or
add
loop
push
inc
lds
xchg
add
mov
call
add
xchg
mov
mov
add
aad
decl
add
mov
pop
pop
stos
add
mov
jmp
add
add
test
push
pop
adc
cli
pop
lods
call
pop
push
pop
scas
mov
scas
lcall
add
int3
add
pop
mov
inc
pop
int
pop
lret
xchg
pop
mov
inc
pop
into
add
pop
xchg
add
scas
xchg
add
xchg
cmp
xchg
add
pop
xchg
add
pop
xchg
ljmp
xchg
jp
cwtl
rolb
cltd
add
pop
fwait
add
mov
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
loop
mov
in
pop
cmc
add
movsb
inc
pop
movsl
lcall
rolb
cmpsl
add
pop
test
es
test
add
pop
mov
sbb
mov
incl
sbb
mov
sbb
mov
sbb
mov
pop
mov
adc
pop
mov
add
mov
adc
incl
mov
add
pop
rolb
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
jg
incl
movb
pop
movl
pop
leave
add
mov
pop
or
lcall
and
pop
or
and
add
push
or
and
cmpsb
and
and
call
popf
and
sahf
and
mov
and
lods
and
and
pusha
and
gs
mov
incl
sub
aas
or
or
and
shlb
aaa
or
or
xor
call
and
or
and
or
sub
sbb
and
or
and
or
and
or
and
or
and
mulb
or
xchg
enter
push
mov
add
and
or
pop
or
and
sbb
or
in
decl
sbb
or
and
sbb
push
or
and
or
and
adc
pop
lock
jg
adc
adc
adc
cmp
adc
mov
and
or
or
inc
imul
mov
and
xor
or
std
pop
ficomps
add
pop
or
and
pop
or
imul
pop
push
and
push
or
cmc
jmp
push
or
and
and
or
and
and
or
or
call
dec
or
dec
or
dec
or
dec
or
dec
or
inc
mov
inc
or
and
incl
sub
inc
or
add
sub
cmp
pop
and
or
or
cmp
pop
and
or
mov
xor
shll
or
and
das
or
and
outsl
decl
sbb
sub
or
and
or
and
or
and
push
daa
and
lods
xchg
jmp
and
mov
and
iret
sbb
scas
and
mov
dec
or
or
and
pushl
or
and
adc
adc
arpl
adc
data16
push
cld
adc
gs
push
and
popa
rcll
daa
or
pop
daa
in
outsl
es
inc
data16
push
mov
inc
les
push
es
mov
or
and
or
and
mov
cmp
pop
or
clc
pop
mov
add
jle
or
cmp
or
jg
mov
nop
and
or
xor
or
and
or
push
or
and
or
rolb
push
dec
mov
pop
or
add
call
add
sbb
roll
sbb
add
pop
or
add
flds
adc
fildl
adc
add
loopne
push
or
cs
jmp
add
or
jecxz
or
insb
or
add
ret
cmc
inc
aam
add
js
dec
ljmp
ljmp
or
pop
pop
or
ficompl
je
rorb
pop
jo
push
or
in
aaa
in
push
push
or
push
push
or
jg
push
or
adc
dec
or
adc
dec
or
adc
dec
or
call
push
dec
or
sbb
inc
or
sbb
inc
or
sbb
inc
or
push
hlt
lcall
push
inc
or
and
ds
and
cmp
inc
cmp
push
cld
pop
pushf
push
cmp
es
cmp
push
ss
sub
decl
xor
sub
xor
sub
push
xor
xor
cs
xor
sub
xor
sub
xor
push
sub
cmp
ljmp
jle
cmp
lock
and
push
pop
or
inc
push
lcall
or
inc
push
sbb
inc
push
sbb
dec
push
push
or
call
or
dec
push
adc
push
call
cmp
or
push
or
lods
or
push
push
or
push
push
or
xor
or
sub
xor
pop
push
pop
jp
insl
cmp
xor
xor
xor
xor
cmp
mov
lcall
aas
xor
mov
insb
sub
dec
cmp
fiaddl
ljmp
roll
inc
xor
inc
xor
sub
mov
dec
xor
xor
xor
xor
addb
dec
xor
pop
mov
dec
xor
xor
add
cmp
repnz
xor
fdivs
adc
and
xor
or
pop
xor
xor
xor
or
push
xchg
pop
xor
xchg
mov
xor
bound
shlb
sub
fsub
test
repnz
adc
adc
lods
adc
adc
pop
mov
scas
adc
adc
adc
adc
mov
adc
mov
adc
mov
loop
adc
in
fdivs
xor
mov
and
xor
push
mov
arpl
rclb
rcll
ret
insl
xor
jno
push
js
push
jg
rolb
push
push
test
xchg
add
pop
adc
xor
adc
adc
mov
addb
dec
adc
adc
add
js
pop
and
mov
mov
insb
and
cmpsl
aaa
icebp
mov
and
stos
and
push
mov
idiv
insb
add
push
div
cmp
repz
repz
out
cmp
in
in
add
add
fldt
sahf
out
lods
fsubrs
sahf
out
test
sahf
negl
push
rcrl
out
pushf
rclb
out
in
js
dec
fbstp
cs
jmp
push
mov
lea
push
jns
out
imul
jns
out
data16
arpl
in
sahf
xchg
fisubs
iret
repz
popa
push
shlb
push
xchg
cmp
repz
xchg
push
xchg
push
stc
cmp
repz
push
xchg
push
nop
add
repz
cmpsl
dec
lahf
dec
push
sahf
xlat
mov
repz
stos
dec
add
add
add
fwait
stos
dec
push
lcall
add
stos
dec
push
cwtl
add
sbb
inc
xchg
inc
repnz
adcl
imul
imul
pop
jns
imul
add
sbb
cmpsb
test
cmpsb
jns
xor
jns
cmpsb
jns
jle
jge
cmpsb
jns
cmpsb
jl
jnp
jp
lods
jns
sub
js
push
addb
mov
rcr
stos
sbb
pop
sbbb
pop
mov
push
cs
addb
pop
or
movsb
and
mov
or
mov
push
outsl
xchg
or
fbld
and
and
and
sub
sub
movsl
das
jbe
jns
add
fwait
jg
daa
std
data16
outsl
divb
jae
jne
ja
decl
divps
cwtl
vmread
mov
pop
add
incl
jmp
xchg
inc
sti
add
les
repnz
jge
mov
pop
pushl
shll
add
jecxz
mov
or
push
aad
leave
add
jnp
out
aam
xor
or
or
jmp
push
sar
ljmp
jecxz
push
pop
inc
in
xlat
sub
sub
ljmp
incb
pop
pop
adc
pop
cli
pop
jnp
pop
jg
mov
xchg
out
clc
sub
mov
outsl
sbb
xchg
addr16
fwait
arpl
add
cmpsl
push
test
call
scas
scas
dec
mov
mov
dec
mov
mov
mov
mov
add
ret
cmp
mov
mov
mov
leave
add
lret
xor
into
iret
das
clc
rcl
sub
xlat
daa
mov
pop
cld
jmp
fstp
fistps
loope
loop
sbb
out
pop
into
ljmp
icebp
fdivrp
ljmp
repz
div
pop
stc
sar
add
jmp
pop
lcall
pop
add
jg
pop
push
pop
stos
mov
mov
fnstcw
cmpsl
pop
pop
inc
add
std
pop
ds
xor
incl
daa
popa
mov
jne
std
out
mov
and
jne
sbb
pushf
ja
or
add
call
jmp
jg
or
fwait
repnz
lods
cld
pusha
and
pusha
add
pop
sti
popa
pop
push
add
fsubs
loop
lock
pusha
or
addb
scas
inc
andb
add
xchg
cli
sbb
in
adc
or
dec
pop
sub
add
incl
data16
push
add
inc
jo
div
and
add
add
mov
add
xchg
mov
int
mov
mov
or
add
pop
sub
pop
lock
sti
or
fcompp
testl
push
cli
lock
pushl
xchg
and
pop
sub
inc
repnz
or
pop
jne
mov
inc
push
rolb
cmp
fisttps
add
cld
divb
dec
popa
inc
vpackssdw
ljmp
js
mov
inc
mov
repz
sbb
or
repz
dec
push
dec
in
fcomip
fneni(8087
cwtl
sahf
test
dec
push
daa
push
pop
cs
aas
cmc
pop
cld
push
mov
outsb
push
add
sarb
fistpll
inc
repz
mov
jae
xchg
cmp
movsb
adc
mov
inc
cmp
xor
ret
fidivrl
das
shlb
mov
out
add
fs
mov
mov
std
mov
ret
cmp
mov
push
cmp
cmp
adc
pop
cmc
cmp
cmp
cmpsb
shll
sbb
or
cmc
stc
testb
adc
pop
adcl
hlt
cmp
cmp
sub
cmp
adc
jecxz
and
sarl
ja
xor
lea
pusha
mov
loopne
imull
jmp
adc
add
idiv
fdivrl
inc
push
cmp
les
lock
jg
cmp
in
sbb
fs
loopne
rcr
inc
outsb
sub
hlt
or
push
mov
loopne
decb
mov
je,pt
cmpl
adc
xchg
jmp
cmc
arpl
xchg
sub
test
data16
add
pop
cmpsb
js
loop
aaa
jg
mov
inc
nop
add
aas
jecxz
and
aas
xor
fildll
std
in
ret
aas
inc
adc
cmp
adc
aam
inc
sbb
or
mov
adc
scas
pop
lea
sbb
les
cmp
jg
aas
aam
and
in
adc
hlt
cmp
ljmp
shlb
stos
add
and
adc
sbb
and
or
rorb
pop
mov
jl
add
inc
xchg
mov
imul
call
sub
stos
inc
lret
mov
jp
cmp
or
mov
xor
xor
pushl
lret
xor
mov
xchg
jne
pop
and
and
add
sub
sub
and
inc
dec
xor
xor
sbb
fcomip
das
clc
in
xor
xor
xor
fisttps
pop
push
lods
add
lock
jle
lds
call
fisubrl
xor
cli
mov
push
xor
pop
xor
mov
sarl
add
es
insb
rclb
inc
aad
fs
push
outsl
push
jne
sub
clc
cmp
mov
xor
iret
leave
rcrb
enter
add
fnstsw
inc
add
movsb
lret
pop
xchg
sti
test
xor
inc
sbb
in
xor
xor
adc
xor
xor
cmp
jmp
sbb
cmpsl
fidivrl
add
xchg
sbb
je
fbld
mov
cmp
incl
fstpt
fdivrl
add
cmp
jle
pop
lock
cmp
addr16
xchg
data16
mov
outsl
xchg
cs
into
xchg
xor
notb
pop
testb
mov
push
xor
xor
cltd
or
pushl
loop
fisubl
cmpsb
insl
inc
mov
push
add
sti
ljmp
cmp
int3
cmp
cmp
idivb
adc
sarl
shr
sbb
lock
lcall
sub
sub
inc
ja
fdiv
mov
jecxz
cli
shll
push
clc
cmp
cmpsl
outsb
jno,pt
sbb
adc
fdivrs
and
xchg
fdivs
add
fbld
ret
icebp
mov
and
ret
add
xor
xor
mov
xor
xchg
movsb
jecxz
sbb
fidivrs
mov
or
mov
xor
xor
fdivl
cmp
loopne
jle
nop
cmp
cmp
and
jno
mov
rorb
shll
dec
jae
xlat
add
mov
xor
jmp
pusha
or
xorl
jno
dec
xor
xor
mov
pushf
push
pusha
imul
inc
jno
pop
aaa
ret
pop
cmp
xlat
xchg
xor
enter
mov
enter
lea
pushl
pop
in
xlat
sub
cmp
and
imul
adc
fcomip
inc
cld
pushf
add
ja
hlt
cld
fldcw
jo
add
aad
imul
fstpl
out
push
test
mov
clc
dec
mov
iret
aas
lods
cmp
cmp
xlat
cmp
fcomip
cmp
adc
les
inc
out
out
ret
dec
mov
adc
into
jb
std
push
pusha
add
movsl
in
outsl
cli
mov
add
xor
js
pop
movsb
xor
loopne
int
sub
add
decl
das
in
sub
mul
add
add
ret
add
jle
mov
mov
jns
xchg
aas
mov
jg
push
cld
inc
and
push
inc
pop
movsb
addb
ja
fdivs
cmpsl
sbb
pusha
popf
sub
les
jmp
fwait
add
pushl
cld
jno
dec
fadds
in
stos
lds
xlat
or
andb
push
arpl
xchg
and
inc
scas
cmc
xchg
and
inc
clc
in
pop
lock
lret
pushf
xchg
stc
inc
or
mov
jl
mov
push
inc
jl
inc
xor
dec
fsubrp
cmp
inc
and
mov
incl
pop
mov
hlt
pop
xchg
pop
ljmp
lods
sahf
scas
lcall
pop
cmp
cmpb
pop
mov
and
push
mov
xchg
dec
or
adc
add
add
in
movsl
out
rolb
aad
hlt
ss
sbb
mov
mov
mov
cmpl
sbb
outsl
mov
stos
fdivl
gs
ljmp
scas
add
lea
jae
push
dec
loopne
adc
lock
push
cld
incl
je
mov
add
and
hlt
adc
xchg
sbb
adc
sbb
xor
xchg
mov
jmp
and
fwait
out
add
movsl
sub
es
adc
mov
cld
add
add
mov
add
jo
ljmpw
sti
jo
sub
add
add
add
mov
cmc
xor
cli
add
add
fldt
add
mov
add
test
jg
and
incb
rep
std
jo
cmc
aaa
loope
pusha
xor
jb
or
aaa
xor
lret
push
ret
mov
pop
ss
add
adc
dec
imul
xor
mov
in
sbb
xor
xchg
xor
pop
xchg
shlb
jp
sub
jmp
xchg
add
adc
ret
sub
or
sub
stc
push
lds
push
stos
es
test
mov
mov
jns
push
xchg
add
add
andb
imul
movl
and
jle
add
loopne
inc
sbb
sub
clc
or
push
add
pop
dec
gs
arpl
add
push
and
sub
mov
clc
add
sbb
push
push
push
and
sub
or
les
push
dec
adc
cmpb
int
bound
cmp
test
fistpl
pusha
test
jmp
enter
les
and
addr16
push
add
sahf
jecxz
ret
test
push
sbb
sub
fdivrl
push
dec
push
push
inc
add
imul
push
addb
sbbb
or
imul
or
xchg
and
xchg
adc
punpckhbw
push
ds
sub
xchg
push
mov
pop
sti
xor
push
cmp
fcmovu
jbe
adc
add
scas
test
lahf
push
pop
jg
add
pop
adc
bswap
mov
subb
movsb
aad
push
bound
or
adc
xchg
mov
nop
sahf
sbb
andb
out
jae
test
scas
imul
jg
out
fwait
fistpl
xchg
or
push
rorb
rolb
rolb
add
shlb
or
add
incl
test
or
jl
adc
rorb
out
mov
mov
adc
insl
aaa
ss
out
xlat
fldl
push
push
adcl
fildl
sbb
insb
inc
add
pushf
rclb
jg
imul
pop
shlb
inc
insb
fsubrl
rclb
dec
mov
scas
insl
repz
xor
clc
shlb
nop
adc
shll
rcrb
scas
dec
xor
mov
ljmp
imul
dec
mov
cmpsl
and
cmpl
fwait
mov
iret
fidivrl
or
enter
lock
ss
sti
ja
pop
mov
shrb
stos
jnp
das
cmp
outsl
sbb
sarb
out
jns
xchg
ja,pn
std
std
mov
xchg
shlb
mov
push
aam
dec
or
or
or
sbbb
mov
sahf
and
sarl
mov
or
push
dec
add
mov
sbb
mov
pusha
xor
sbb
std
testb
rolb
add
mov
push
lret
sbb
rorb
loopne
jecxz
mov
push
push
jmp
loopne
aas
loopne
inc
loopne
pop
jg
aad
push
adc
cltd
add
lcall
dec
sub
cmc
loopne
aaa
adc
cmp
push
dec
loopne
sar
jl
pop
push
xor
add
push
shrb
aad
insb
push
fwait
push
test
cmpsl
lahf
mov
rolb
stos
es
sbb
sarl
mov
ret
in
pop
sti
imulb
loopne
mov
jle
movsb
adc
add
test
adc
pop
push
icebp
and
mov
loopne
adc
fcomi
insl
loop
inc
or
loopne
dec
jp
inc
lods
fnstenv
mov
outsl
xor
mov
sbb
add
jg
shlw
fadds
imul
xor
shl
inc
xlat
aad
jecxz
call
sub
adc
xchg
out
in
fs
punpcklbw
loopne
cmp
add
pop
negb
pop
fisubrl
sbb
iret
pop
shrl
jae
mov
into
imul
fimull
xchg
sbb
or
div
mull
dec
call
sbb
loopne
out
jbe
pop
in
aaa
in
fldcw
add
and
add
or
and
mov
and
add
adc
sub
xor
dec
pop
idivl
sub
xor
adc
es
clc
icebp
stos
loope
ss
out
jge
dec
adc
aam
decb
ficomps
fadd
adc
xor
loopne
pop
mov
shl
clc
sbb
sbb
sub
xor
jle
sbb
loopne
cld
mov
enter
orl
stos
movsb
out
movsb
and
cmpsb
jge
add
stos
jle
pop
pop
jnp
sbb
jbe
or
mov
loopne
pop
jp
loopne
das
fidivrl
dec
loope
push
dec
sti
idiv
or
jnp
inc
loopne
push
mov
repz
mov
mov
js
loopne
jmp
mov
insb
pop
xchg
insb
pop
jns
stc
adc
sub
jle,pn
push
add
pop
push
insl
mov
loopne
xchg
es
sbb
js
push
add
add
clc
mov
push
shl
or
pop
mov
loopne
into
push
out
push
ficomps
adc
push
jae
xchg
sbb
or
icebp
cld
loopne
mov
dec
sub
mov
add
sbb
addb
add
das
mov
lock
ja
push
or
inc
cmp
jbe
inc
lock
add
shll
jae
imul
adc
fwait
jno
mov
ret
mov
mov
jo
push
sbb
lock
fldt
repnz
js
add
sub
adc
test
pop
hlt
mov
inc
add
push
outsb
nop
inc
bound
pusha
mov
jmp
mov
add
mov
inc
mov
add
repnz
call
mov
or
dec
shl
jmp
cmc
inc
and
leave
xchg
add
daa
sub
inc
xchg
decl
and
jne
sub
push
test
mov
clc
sbb
pusha
mov
in
pop
scas
push
xorb
sub
inc
mov
leave
adc
bound
dec
mov
lahf
jle
stos
mov
or
rclb
shrb
sub
pop
std
jmp
cmp
addb
outsl
leave
stos
movsb
pop
mov
mov
scas
clc
cld
push
sarb
not
sti
xchg
cmp
sbb
mov
cmc
pop
mov
pop
imul
insb
lret
add
popa
lahf
aam
jg
jle
xchg
mov
jge
xorl
inc
imul
mov
lcall
lods
push
pop
cmp
add
gs
std
sti
push
mov
or
gs
xchg
cmpsl
xchg
inc
ja
add
xchg
jno
adc
adc
mov
lods
add
lods
outsl
mov
mov
xor
add
mov
mov
fldt
add
mov
and
sbb
je
lea
inc
fwait
fs
mov
mov
in
lcall
popa
outsb
mov
bound
jb
add
add
and
xchg
test
gs
push
cmc
hlt
neg
mov
inc
jb
lcall
jne
push
dec
xchg
outsw
call
pop
jle
popa
je
push
ss
arpl
mov
push
lods
push
push
xchg
ss
fwait
push
je
lea
je
pushl
popa
or
mov
inc
lcall
popa
outsb
fwait
insb
test
rcl
jl
ja
push
sahf
push
imul
je
sbb
adc
inc
in
ret
js
in
and
jmp
jo
das
das
ja
mov
bound
pushf
outsl
insl
das
xor
js
mov
mov
arpl
dec
add
sbb
xor
cmp
dec
fsubrl
push
mov
nop
xchg
sahf
push
pop
dec
sub
loope
outsb
push
mov
sbb
jno
mov
pop
mov
xor
push
add
pop
sub
lea
je
add
and
clc
fbstp
xor
sub
insl
and
fldl
mov
gs
mov
movsl
cld
add
cmpl
cmpsb
mov
pop
cmpsl
mov
dec
mov
or
cld
jmp
add
rol
pop
hlt
add
sbb
inc
aaa
out
cli
inc
in
xor
lock
add
ljmp
inc
or
out
pop
or
loopne
mov
test
loop
pop
inc
dec
test
mov
push
push
stos
push
push
dec
add
gs
and
int
dec
jmp
pushl
xor
push
add
ror
cmp
imul
fsubrs
ja
cmpsb
loopne
mov
mov
mov
jg
cmpsb
lods
mov
arpl
add
pushl
in
add
jmp
and
daa
out
add
inc
sub
jmp
cmp
add
cld
clc
add
std
push
enter
repnz
frstor
outsl
or
into
rolb
dec
xor
add
dec
shll
jg
rcr
cmp
fsub
xor
iret
icebp
loopne
daa
and
aas
cmp
sbb
sbb
cmp
dec
inc
push
or
inc
clc
or
ljmp
andb
mov
pop
js
jnp
imul
add
ss
dec
jmp
cmpsl
inc
inc
inc
sub
aaa
aam
ret
into
and
je
ffreep
icebp
les
push
cmp
repnz
pop
xchg
dec
adc
sbb
hlt
incb
stos
repnz
cmp
cmp
push
fnstsw
ror
cltd
and
add
fidivrs
and
and
ljmp
sub
cmp
lds
cmp
and
add
lcall
mov
add
xor
lret
das
sahf
xor
fdivs
adc
sarl
adc
ds
clc
bound
call
and
paddsb
ret
data16
pop
cmc
outsl
dec
das
mov
sub
lret
data16
ds
clc
sub
xor
aas
dec
cmp
sub
inc
cld
inc
pop
dec
mov
fcomip
push
icebp
pop
or
pop
inc
pop
in
push
cmp
test
push
dec
add
lods
jmp
sahf
bound
and
les
insl
sub
cld
push
add
sti
dec
outsl
cmp
push
sbb
and
ljmp
mov
dec
pop
mov
inc
inc
push
adc
icebp
sbb
push
xor
dec
push
inc
mov
push
mov
adc
ret
fbld
lret
cltd
ss
fadd
fcomip
sbb
sbb
int3
push
push
loop
adc
in
adc
inc
or
mov
inc
mov
inc
and
mov
int3
mov
xor
fwait
inc
fidivrs
ret
daa
mov
fcmovbe
pop
xchg
ret
fcmovu
pop
adc
mov
cwtl
and
das
pusha
add
outsl
sub
je
add
push
jns
jo
jg
jbe
add
jp
jo
dec
les
sbb
jecxz
out
add
scas
jle
repz
add
sbb
and
push
negl
incl
lcall
push
jno
add
sti
scas
adc
cmp
in
in
lock
or
rcrb
in
out
hlt
std
icebp
adc
in
and
pop
lock
jecxz
ljmp
hlt
bound
ret
aad
into
ret
clc
test
faddp
xorb
iret
fsts
shll
pop
cltd
std
call
add
pushf
nop
sahf
arpl
mov
data16
xor
fmulp
sbb
fsubr
xlat
and
decl
jecxz
xor
adc
mov
je
jb
inc
test
or
mov
cmp
and
xor
sub
sub
in
ds
ljmp
cmc
fdivrp
push
pop
or
in
repz
testl
pop
lock
sti
adc
test
jo
enter
outsl
pop
hlt
push
iret
mov
ret
dec
int3
add
aaa
loop
mov
fiaddl
sub
ljmp
add
out
clc
sub
scas
loope
jmp
jecxz
repnz
outsl
xchg
cmp
out
cli
inc
incl
fwait
mov
sahf
or
out
and
out
in
aad
mov
movsb
inc
nop
push
push
inc
mov
push
add
sub
inc
imul
call
pusha
dec
pop
test
dec
add
xor
cmc
fdivs
int3
sbb
aaa
inc
aas
jo
add
int3
fisttpl
and
rorb
fld
jmp
clc
push
sub
xlat
fnstenv
out
ss
add
es
pusha
cmp
clc
pop
cld
aas
das
sub
fdivs
sbb
into
sub
cmp
cmp
es
out
and
and
sub
faddp
sub
xchg
push
lods
xchg
lods
add
call
lock
or
ds
or
or
cltd
mov
jne
cmp
sar
addl
mov
mov
push
fsubrs
andb
repnz
hlt
lock
cmc
mov
mov
cmc
cmp
js
jns
ja
fwait
pushf
arpl
or
jg
mov
aas
pop
lret
fmul
cmp
jg
pop
push
mov
dec
dec
cld
xchg
push
imul
mov
push
pop
dec
mov
push
test
pop
and
adcb
mov
jp
mov
incl
mov
out
jnp
mov
subb
jo
fwait
lahf
outsl
subl
jle
imul
jno
jne
insb
es
in
std
push
out
call
pushl
rol
shll
fcmovbe
leave
insl
sbbl
out
add
jmp
ljmp
cli
inc
push
repnz
fnclex
in
ljmp
scas
mov
mov
fnstsw
aam
cmove
mov
stos
xchg
jmp
push
repz
std
and
lock
insb
push
sti
xor
cmp
scas
mov
es
jp
mov
push
out
jg
lcall
pushl
imul
ljmp
dec
std
pop
lcall
push
dec
push
mov
and
gs
insb
xorl
lcall
jmp
mov
hlt
cmc
hlt
or
lock
mov
jl
fists
xor
dec
cli
call
fcmovb
cmp
out
pop
or
int
fmul
xchg
les
das
xor
sub
je
or
add
mov
add
in
in
aas
jns
std
out
incb
cwtl
xchg
pop
sub
shll
int
xor
cs
cmp
lret
stos
dec
inc
push
stos
inc
push
inc
lods
bound
andl
jle
out
das
clc
das
je
xchg
jbe
outsb
xchg
sub
push
scas
dec
dec
dec
mov
fcmovne
mov
or
jecxz
cld
adc
add
sbb
adc
inc
push
inc
mov
scas
inc
mov
mov
ret
xlat
fcom
cmp
subl
test
push
out
jle
dec
mov
push
push
mov
pop
dec
mov
hlt
pop
pop
mov
cmp
aam
sub
shll
adc
xlat
and
std
push
cld
sbb
or
pop
ret
or
stos
lods
movsl
incl
bound
aam
fsubrl
fistl
sub
add
inc
mov
ret
sbb
sub
jmp
pslld
push
cmpsl
dec
pop
repnz
or
out
std
jmp
sbbl
loopne
jg
imul
pop
jge
jae
add
lahf
mov
std
pushl
movsb
dec
test
scas
xchg
or
loop
sti
cmc
add
mov
or
pusha
cltd
xchg
jle
jg
mov
mov
cmpsl
cli
mov
mov
push
out
inc
ljmp
push
stos
mov
icebp
adc
clc
out
inc
ds
pop
inc
pop
mov
add
dec
mov
dec
inc
mov
aam
cmp
cmp
and
in
fildll
sarl
and
ds
pop
pop
inc
mov
inc
mov
stos
dec
inc
push
stos
inc
push
inc
lods
dec
gs
inc
jp
lea
sub
jae
jge
jle
ljmp
dec
out
push
dec
pop
pop
scas
test
pop
stos
movsb
iret
mov
pop
lock
cmpsl
mov
mov
int3
fadd
xor
roll
xorb
push
jl
cmpsb
imul
pop
xlat
lret
mov
or
idiv
std
add
or
sbb
divb
inc
inc
dec
mov
sub
ret
sub
sub
les
nop
out
or
cmp
and
test
and
int3
adc
packsswb
push
imul
stc
aaa
cld
je
sub
cld
testl
leave
sub
out
daa
and
push
fstpl
push
ficompl
imul
xor
sbb
jge
es
rcr
out
push
aaa
jae
mov
adc
outsb
notl
arpl
fs
adc
mov
mov
cs
jbe
adc
push
stos
mov
lret
push
mov
clc
push
loope
sbb
mov
and
jg
lret
sub
xchg
cmc
adc
inc
dec
cmpl
mov
dec
push
jns
jle
jno
gs
pusha
das
lods
add
and
fwait
xor
ja
scas
cld
xor
fnstcw
das
js
or
and
adc
push
pop
icebp
pop
jbe
fildll
jnp
inc
dec
scas
push
push
jns
mov
and
sub
cmp
pushl
jbe
mov
sub
jle
adc
lret
adc
test
dec
fistps
shl
or
loopne
adc
cmpsl
mov
push
jmp
in
sbb
test
xor
sub
loopne
sub
pop
add
sbb
jg
std
repz
in
es
icebp
fimuls
sbb
sub
push
or
icebp
adc
push
jo
jg
push
aas
mov
pop
ja
fwait
inc
cwtl
pop
pop
push
movsb
inc
out
outsb
popa
cld
inc
pop
mov
push
insl
sub
movaps
ljmp
push
push
or
pop
das
adc
push
mov
jns
xchg
jns
jg
std
out
lcall
jne
jg
jge
js
pop
lahf
outsw
lea
dec
data16
pop
adc
xor
fildl
xor
sbb
call
aad
and
add
and
cltd
jnp
xchg
arpl
mov
decl
push
gs
pusha
addr16
pushf
je
add
sub
mov
cmp
arpl
mov
outsb
mov
lcall
decl
xlat
rolb
into
leave
and
and
rolb
mov
cmp
int
cmp
fbstp
and
ljmp
fisubs
arpl
push
stos
ljmp
sub
loopne
or
movsb
or
push
int3
pop
adc
in
add
add
fildll
mov
cmp
std
das
sub
scas
cli
out
add
jmp
and
ret
ss
adc
cld
adc
adc
adc
cmp
inc
loope
sti
xor
cli
pop
sbb
sti
add
faddl
decl
dec
sbb
push
push
inc
lods
inc
inc
adc
push
inc
cmpsl
jg
cld
inc
push
add
mov
fs
jb
popa
mov
and
pop
cmpsb
insl
mov
mov
inc
mov
mov
mov
push
mov
add
test
jmp
add
ja
or
lcall
mov
push
dec
pop
mov
pop
dec
stc
bound
dec
mov
push
jmp
lock
mov
fs
enter
pushf
test
lods
xchg
jl
and
push
xor
andl
push
sysret
in
cs
int3
and
cld
push
jmp
jmp
and
shll
and
and
xor
push
sbb
das
sub
pushl
xor
jmp
xor
sbb
ljmp
push
jmp
fnsave
adc
sbb
je
push
jp
out
jbe
jl
pop
mov
scas
inc
push
inc
mov
dec
mov
inc
insb
js
jmp
pop
dec
sbb
gs
push
jbe
subl
ja
aas
push
jbe
js
jns
dec
hlt
and
stc
sti
or
cs
movsb
jle
test
dec
imul
jne
ljmp
insl
inc
push
lea
insl
xorl
mov
jge
inc
cmpb
dec
dec
mov
cld
add
mov
cmp
jge
outsb
jle
mov
push
inc
push
imul
jns
xorl
lods
outsl
fs
pop
dec
pop
lea
inc
mov
cld
call
xchg
xorl
lcall
xchg
xchg
outsl
xchg
cwtl
call
int3
movsl
movsb
loop
out
loope
call
mov
mov
push
mov
call
mov
shrl
rcl
jp
enter
orl
out
addr16
mov
popa
ja
xor
jo
insb
insb
jne
outsl
sub
outsl
push
and
arpl
mov
mov
push
push
out
add
add
sbb
xor
push
dec
mov
or
dec
pop
loopne
jns
ret
and
xor
shrl
xor
shll
pop
cmp
bound
adc
jp
add
push
and
hlt
sbb
cld
ljmp
or
jmp
sbb
in
xor
add
loopne
test
decl
in
cli
inc
mov
cld
sbb
hlt
jecxz
mov
ljmp
xchg
lcall
inc
sub
mov
enter
leave
aam
ror
ret
sub
int
or
call
xor
test
inc
mov
mov
add
mov
dec
int3
jg
aaa
shlb
stos
push
loopne
mov
mov
jne
std
lea
ja
xchg
mov
popf
mov
lret
mov
mov
sbb
push
call
cld
lcall
js
and
inc
fisubs
push
dec
pop
movsl
dec
dec
and
lcall
push
dec
dec
test
dec
or
inc
fnstenv
jle
mov
outsb
dec
data16
dec
cmp
fucomp
sbb
jmp
or
mov
cld
arpl
insl
sub
shrl
cmp
cmp
es
mov
or
les
or
add
xor
dec
stc
sbb
cs
push
test
inc
cld
in
inc
pop
cmp
arpl
xor
sti
jg
jbe
test
dec
mov
mov
and
loopne
cmp
sti
sbb
add
adc
pop
fnstenv
add
ret
dec
in
jecxz
and
neg
and
repnz
jg
fidivrl
cli
aam
aas
fcmovnb
fldcw
pop
pop
pop
jmp
inc
mov
cpuid
adc
fidivrs
and
xor
sub
inc
cld
sub
sarb
and
mov
dec
nop
out
aas
lds
adc
push
fimull
add
pop
iret
sbb
call
cmp
iret
iret
out
add
add
add
xchg
ljmp
mov
or
mov
pop
mov
jg
mov
sahf
inc
mov
mov
mov
mov
pop
xchg
iret
push
movsl
xchg
call
in
sbb
sbb
adc
sbb
jp
fnstsw
fstl
push
jp
push
and
mov
xchg
pop
repnz
cmp
adc
jecxz
adc
push
jbe
inc
sbb
pop
push
pop
stos
push
pop
add
push
das
clc
decl
scas
and
add
sub
sub
loope
sbb
in
adc
add
dec
mov
push
push
or
xchg
mov
inc
inc
repnz
decl
jmp
in
gs
int
rcr
shll
lds
rol
jne
fcmovne
sub
sahf
cmp
ja
adc
jmp
push
clc
out
push
mov
loop
test
aaa
std
scas
je
adc
add
pop
cld
inc
sbb
sti
pop
pop
pop
cli
sbb
clc
adc
shl
adc
sbb
cmp
mov
dec
dec
sahf
add
inc
dec
inc
mov
inc
sbb
jg
pushl
push
pop
push
mov
add
aam
es
xchg
sbb
ret
xchg
xchg
in
out
jmp
pop
mov
enter
iret
pop
aaa
mov
pop
test
cld
pop
mov
cwtl
scas
aas
xor
aam
push
subb
ljmp
mov
mov
cmp
mov
mov
sbb
mov
and
sbb
fistps
shlb
push
mov
push
push
dec
mov
daa
fdivl
aaa
add
aad
clc
mov
sub
xorl
bound
out
data16
fldt
cmp
sub
lret
into
notb
stos
sub
and
cs
adc
popa
mov
gs
add
add
out
pushl
sahf
xor
xchg
and
inc
in
sbb
push
mov
daa
out
int
into
cmpsl
mov
sbb
out
dec
stos
lods
fcomi
ljmp
inc
sti
notl
cmpsb
dec
push
push
in
xchg
sbb
jmp
stos
pop
push
std
dec
das
sub
shlb
jb
jl
xor
or
aaa
jp
jg
pusha
sub
fidivs
ja
sti
idiv
ja
ss
push
inc
sub
adc
or
aas
pop
push
out
cmp
xor
outsb
idiv
push
hlt
div
or
call
sbb
lock
sbb
mov
lcall
out
or
icebp
ljmp
mov
int
cmp
lret
lret
ss
cltd
and
fildll
icebp
filds
add
mov
cmpsb
mov
orl
out
jnp
add
cmp
push
fisttpll
cli
sti
dec
gs
pushf
add
mov
jns
cmpsl
push
add
cmpsb
frstor
push
lahf
mov
mov
incb
add
xor
or
lret
outsb
mov
pusha
outsb
aad
fldl
je
outsb
cmp
inc
inc
add
xor
push
outsb
sbb
fsubrp
pop
xadd
dec
push
add
outsl
dec
mov
popa
bound
gs
fwait
ret
add
incb
inc
lea
je
push
adc
imul
jne
push
lcall
aaa
mov
add
add
push
pop
xchg
je
arpl
pop
mov
cmp
lock
cltd
jbe
push
outsb
xchg
or
pop
push
mov
jb
outsb
outsb
push
push
push
testl
jg
jnp
mov
xchg
and
test
pushw
xchg
mov
sbb
popa
xchg
push
cmpsl
repnz
lea
or
fidivrl
lds
jg
adc
cmp
arpl
cmp
mov
js
lock
ret
outsl
add
ds
and
pop
add
into
std
outsb
add
add
aad
sub
fistpl
into
arpl
je
dec
data16
addr16
cmp
pop
and
lods
cs
clc
hlt
cmp
push
and
testb
incb
ss
insl
mov
cs
sbb
outsb
push
cmp
sar
jb
xchg
push
mov
outsb
add
pop
pop
or
nop
add
pop
shll
xchg
xor
int
inc
add
addb
pop
nop
sbb
mov
mov
pop
scas
stos
cmp
pop
ficoms
pop
fwait
inc
inc
add
popa
and
jnp
cmp
xchg
inc
fistl
pop
mov
orb
andb
incl
faddl
cmp
add
icebp
addb
dec
sub
daa
add
movl
lods
movsl
and
mov
subl
jg
fldt
push
inc
push
mov
inc
adc
push
mov
andl
lock
push
dec
mov
inc
mov
xorl
inc
orl
add
stos
dec
push
pusha
stos
mov
cmp
adcb
push
movsb
dec
dec
mov
push
decl
push
cld
scas
inc
sbb
dec
addl
inc
sbbl
dec
inc
mov
or
roll
or
roll
push
xchg
add
sbb
push
dec
dec
dec
mov
add
inc
inc
add
adc
dec
cmpsb
pushf
jne
decl
js
sub
gs
arpl
pop
push
adc
pop
je
shlb
pushf
mov
out
mov
outsb
mov
arpl
hlt
lahf
jbe
jo
jb
fs
pushf
push
scas
inc
pushl
or
shlb
cmp
rclb
mov
sub
xchg
adc
aad
cmpsl
mov
jo
scas
add
sub
mov
jb
or
add
or
shrb
shlb
imul
insl
mov
dec
push
or
mov
ja
nop
jae
dec
xchg
popa
mov
adc
inc
shll
insb
fwait
sub
imul
mov
push
lds
popa
jbe
mov
jle
lcall
popa
xchg
shrb
pop
sbb
sub
ljmp
mov
or
popf
les
mov
shlb
xor
mov
add
mov
push
outsl
mov
xor
cld
rclb
xchg
and
ret
ret
rolb
xor
aam
push
sub
inc
jg
ret
cmp
add
insl
shrl
insb
outsl
pushf
imul
ss
push
and
jns
fdivl
cmpsb
fwait
lods
cltd
shlb
adc
arpl
add
push
mov
data16
and
data16
imul
and
cwtl
outsl
je
fists
insl
stos
popf
pusha
pop
mov
mov
and
imulb
test
fs
das
mov
sbb
and
loopne
xorb
loope
fucom
add
ljmp
sbb
loopne
inc
sbbb
rcll
outsl
cli
mov
cld
popa
push
pop
stos
mov
push
lods
mov
jl
hlt
call
inc
cld
add
into
mov
add
decl
je
aam
mov
lock
sbb
mov
movsbl
sti
push
or
ret
push
stc
inc
cmp
jne
xor
jmp
mov
jne
int3
leave
test
jle
insl
cmp
add
jg
cmp
or
push
cmpb
mov
rolb
add
mov
movsb
test
filds
shlb
push
jecxz
adc
sub
cs
or
std
push
fisttpl
movsb
rcrb
ret
xchg
call
inc
jl
cmp
je
cmp
test
fisttpl
fdivr
dec
jo
or
adc
add
jbe
inc
fmuls
or
sbbb
ss
push
push
decl
cli
ljmp
test
jne
xor
jmp
push
test
or
out
call
mov
push
cmp
fidivl
or
icebp
and
jg
das
jne
pushl
or
sbb
mov
sbb
mov
mov
testl
cmp
sti
ljmp
adc
mov
ja
mov
call
add
in
andb
movmskps
add
mov
adc
cmp
jbe
inc
mov
or
lea
or
push
pop
sbb
mov
inc
add
add
mov
in
hlt
mov
jg
cltd
adc
cltd
or
inc
ror
add
je
mov
decl
jmp
cmp
add
movb
mov
mov
pop
pusha
add
sub
push
fdivl
aaa
cld
fucomip
out
loop
test
je
mov
pop
movb
and
jne
mov
test
jne
add
shlb
cmp
mov
or
je
das
js
cwtl
sub
je
cmpb
je
push
aaa
dec
or
jl
xor
lock
push
das
jo
testb
ljmp
adc
nop
adc
pop
mov
push
push
add
mov
mov
sbb
add
add
loopne
ljmp
aam
lock
decb
jl
pop
pop
ss
test
cmp
ds
icebp
mov
ss
test
loop
pop
mov
ds
pop
lock
rorb
adc
xchg
or
and
or
pusha
and
mov
adc
loopne
addl
adc
leave
clc
push
add
dec
mov
and
clc
cmp
leave
inc
pop
jmp
jg
loope
xor
mov
cmp
ds
fists
cld
push
jmp
xor
stc
cmp
mov
lods
ljmp
lcall
decb
sub
jg
sbb
inc
pop
add
sub
add
mov
loopne,pn
xchg
jo
adc
fbld
mov
loopne
cld
or
mov
inc
cmpsb
mov
xor
pop
cmp
mov
nop
mov
es
mov
call
or
incb
add
xchg
pusha
or
mov
sbb
jle
movzbl
divl
xor
push
mov
into
mov
out
call
or
mov
inc
jge
jb
adc
pop
sbb
mov
stos
jl
dec
cmp
jne
addb
mov
cmp
sub
and
lock
push
aam
xorl
push
push
ret
test
push
jbe
mov
mov
call
repnz
add
jl
add
and
push
je
lcall
sbb
inc
pop
mov
lock
fdiv
into
loopne
sub
loopne
pop
pop
add
movl
cmp
sbb
adc
dec
dec
cmp
call
vmwrite
xchg
or
mov
mov
stc
and
dec
iret
sub
addr16
jae
and
sbb
stc
shll
addb
jae
add
neg
orb
add
pop
mov
add
inc
ljmp
add
setle
lret
sbbb
iret
jecxz
push
fiaddl
fidivl
lret
das
js
dec
mov
iret
test
fiaddl
rcrl
add
stos
xor
or
inc
mov
cmp
jb
dec
or
lcall
cmp
mov
imul
mov
jnp
lock
jb
inc
xchg
push
adc
fcmovbe
mov
les
push
je
add
mov
dec
dec
jecxz
lcall
out
std
pop
mov
hlt
in
inc
mov
jmp
jl
gs
mov
lock
push
xchg
jb
dec
add
xchg
push
jbe
out
das
cli
outsl
jbe
cmp
push
jb
clc
or
and
xor
cli
push
les
mov
add
adc
cmpl
sti
lcall
je
xor
jge
add
jo
jo
adc
inc
addb
fmull
les
mov
cmp
sahf
fidivs
push
add
dec
inc
jmp
lcall
xor
mov
adc
mov
jmp
pop
mov
fdivs
jne
mov
push
lock
jo
inc
movzbl
add
je
hlt
inc
add
lock
jl
add
dec
lock
jg
call
adc
je
mov
std
jne
mov
mov
sbb
or
add
inc
or
adc
ret
clc
fwait
in
pop
incl
adc
lea
lea
mov
cmp
jbe
idiv
jl
cmp
jg
add
and
sub
rorb
mov
xor
pop
gs
jne
mov
pop
cmc
adc
pop
clc
incl
fisttps
jae
add
jge
call
jo
mov
out
mov
jbe
push
xor
or
mov
and
cmp
into
clc
mov
cld
sub
scas
in
add
pushf
call
mov
mov
fimuls
push
inc
testl
out
adc
lret
inc
fists
loopne
jmp
mov
push
jo
mov
wrmsr
cs
daa
push
add
pop
add
les
jae
mov
mov
test
lcall
lea
sub
sub
cld
ljmp
jnp
push
xor
xor
insb
add
adc
cltd
clc
in
outsl
xor
xor
lret
inc
sub
je
in
stos
cld
mov
jp
ja
fisubs
xchg
jl
pop
add
dec
shl
fisttpl
rcll
int3
inc
imul
jae
test
scas
call
xchg
imul
push
into
add
jg
sti
pop
fmull
sbb
test
cld
jge
in
icebp
or
cli
fwait
loopne
imull
cli
inc
xrelease
mov
sub
xor
or
or
mov
push
icebp
jno
mov
test
or
cwtl
pop
or
cmp
clc
ljmp
test
jle
lock
add
scas
jecxz
add
je
scas
cwtl
pop
or
insl
or
imul
lcall
and
or
scas
add
ja
mov
cmpsb
xor
pop
jns
pusha
xor
or
sbb
adc
or
ja
mov
inc
call
lcall
dec
fcomip
pop
sti
adc
mov
orl
push
xchg
push
mov
cmpsl
lcall
fcom
mov
xchg
jg
jge
inc
incl
je
call
sbb
cmp
and
add
jmp
jl
je
in
cmp
shll
pop
jle
pushl
lock
add
je
push
mov
fadds
jge
mov
pop
fldl
sahf
je
push
inc
jmp
mov
push
push
pop
mov
add
push
mov
test
and
add
jbe
adc
push
adc
or
pop
mov
movsb
insb
repz
mov
call
inc
fisttpl
aad
pop
mov
testb
rcll
inc
pushf
xchg
jno
cmp
mov
jge
or
or
into
jmp
adc
pop
push
adc
push
push
jl
adc
gs
cmp
subl
rclb
mov
push
or
adc
mov
cmp
sub
add
sbb
insb
and
adc
pop
out
js
in
es
clc
push
push
adc
xor
add
lcall
rcrb
push
push
pop
mov
lock
pop
mov
in
mov
jmp
xor
leave
and
xor
mov
adc
cld
push
xor
dec
mov
cld
stos
testb
xor
cld
leave
cmp
sub
push
sbb
or
into
mov
xor
push
jb
and
inc
das
fsubrs
xor
push
and
fildl
sar
jo
and
push
mov
mov
mov
push
or
push
iret
lock
mov
mov
lock
adc
add
call
push
lock
fwait
jbe
repz
push
jo
push
pop
and
inc
repnz
xchg
std
sub
dec
cld
nop
sbb
rclb
test
out
jp
mov
or
lock
sbb
xor
push
mov
hlt
add
decl
imul
dec
mov
xor
pusha
inc
repz
or
or
in
and
push
pop
push
repnz
faddl
add
sbb
cld
push
lock
sbb
pop
and
ret
mov
pop
loop
testl
loopne
xor
hlt
push
call
or
mov
mov
mov
cli
lock
inc
andl
push
mov
inc
scas
dec
mov
fistps
add
decl
in
add
jb
loopne
push
jo
sti
push
std
dec
push
mov
and
mov
fdivs
add
or
jns
inc
fbstp
jg
or
pushl
xchg
add
je
lods
clc
cmpsb
inc
push
mov
fsubrl
ja
cmc
dec
mov
cmp
cmc
sub
or
cmp
daa
lea
pop
mov
lcall
and
jbe
daa
testb
sbb
dec
push
outsl
fcmovbe
lret
push
orb
je
lods
jmp
sbb
popa
mov
orb
add
dec
mov
mov
jg
xlat
jb
jno
lea
adc
loop
sbb
mov
mov
jbe
xor
andl
scas
xor
adc
test
inc
push
xor
andl
jmp
xor
insb
jnp
je
mov
jl
pushl
fistpl
xchg
ret
sub
push
test
data16
bound
mov
mov
xor
push
push
or
add
std
inc
sub
testb
and
pop
fdivrp
test
mov
inc
or
dec
mov
pushl
fcoms
xorb
lea
sub
pop
adc
inc
xor
push
mov
jg
aad
push
add
jnp
inc
cmp
fadds
test
shrb
xlat
push
push
push
mov
add
test
xor
lea
insb
repz
lds
lahf
ds
inc
xor
and
or
cmp
jl
jmp
or
lods
pop
shl
or
mov
subb
mov
or
mov
pop
sbb
lods
sbb
adc
fwait
push
cmpb
dec
cmpsb
mov
and
imul
jbe
mov
cmp
jmp
mov
add
repz
rolb
ljmp
jnp
add
jmp
dec
mov
je
jnp
shlb
add
les
shrb
add
inc
out
xchg
out
dec
pop
lcall
mov
jmp
fmuls
out
and
or
push
test
cmp
loop
fidivs
cmc
inc
loopne
add
add
xor
pop
lds
or
sbb
rcrb
jmp
sub
and
repnz
or
jle
fcomps
and
sbb
repnz
fistpll
add
rol
fisttpl
stos
pop
sti
fistpll
add
loop
mov
loop
mov
sbbl
cmc
enter
add
les
dec
lret
mov
add
ljmp
mov
outsl
pushf
addl
xchg
enter
xor
lods
lea
shll
notb
mov
inc
shrb
andb
adc
bound
shrb
fs
incl
xor
and
mov
or
rcrl
jmp
fbstp
loope
rorb
bound
addb
cmp
cmc
fwait
push
and
jle
mov
push
shrb
cmp
mov
fs
inc
test
aam
cmpsb
fstpt
pop
sti
lcall
jbe
and
add
push
xchg
jecxz,pn
hlt
cmpsb
testl
rorb
adc
jbe
adcb
sti
je
test
hlt
adcb
les
rclb
adc
ret
jne
ror
mov
or
in
cli
dec
rcll
out
xchg
adc
xor
pop
mov
pop
mov
mov
int
lcall
jne
mov
scas
push
push
loope
lea
scas
clc
rcrb
jle
aas
push
xor
pop
mov
popa
shrl
insb
int3
sar
fldt
lea
stos
mov
outsb
stos
stos
jb
or
scas
ret
push
xchg
add
add
or
shl
and
adc
mov
lahf
inc
rcrb
call
adc
cmpsb
mov
repnz
cmp
jmp
icebp
cmpsb
aaa
and
inc
adc
pop
cmp
scas
xchg
jge
js
add
ljmp
int3
add
lods
pop
adc
popf
ljmp
xor
scas
add
mov
jb
adc
ds
sar
ret
call
rol
sub
inc
mov
je
mov
addl
xchg
or
xor
push
dec
mov
lock
xchg
aaa
insb
add
loopne
jb
jp
jne
add
jne
jge
push
mov
data16
lret
repz
pop
insl
lods
adc
je
and
clc
std
jo
test
repnz
test
test
adc
push
fiaddl
jl
jp
add
cmp
xor
mov
push
mov
push
lret
movzbl
scas
hlt
test
dec
fistpl
outsb
jo
or
fs
add
mov
lods
call
lock
dec
push
sbb
sbb
mov
in
ret
pop
pop
push
daa
mov
adc
inc
incb
in
pop
incb
inc
or
add
or
leave
je
jp
xchg
test
xchg
jmp
inc
pushf
jle
clc
push
dec
fdivp
and
sbb
ret
pop
lea
test
es
outsl
push
out
shlb
mov
pop
dec
xchg
incb
lods
push
pop
pop
lret
xchg
push
arpl
jg
dec
mov
inc
loopne
xchg
dec
xchg
ja
addb
shrl
idiv
outsl
jmp
lea
popa
cmp
and
popa
add
rorl
adc
dec
ljmp
arpl
pusha
mov
push
sub
fistpl
cli
shr
pushf
popa
adc
jb
xchg
shlb
test
insl
add
test
rorb
repnz
notl
pop
or
lea
cmp
xchg
mov
pop
and
dec
stos
or
std
aaa
sub
add
sbb
dec
or
std
loopne
adc
add
cmp
je
push
dec
or
aaa
je
push
push
cld
testl
dec
add
jl
pop
lock
pushl
push
pop
or
rclb
add
pop
das
data16
sti
divb
add
fistpl
das
jmp
lea
add
dec
pop
push
leave
jmp
jb
add
hlt
add
mulb
jg
test
jmp
movsb
pushaw
pop
add
cmp
jecxz
test
push
clc
pop
ret
push
je
sub
decl
js
pusha
push
inc
mov
andb
incb
add
xor
cmp
je
ljmp
cwtl
ljmp
loopne
mov
add
call
adc
jg
mov
loopne
add
test
out
fstpt
mov
cs
cmp
loopne
pop
mov
add
adc
shl
xchg
add
pop
data16
aam
inc
mov
cltd
mov
jle
pushl
inc
in
movsl
movsl
pop
push
adc
or
lcall
push
or
xchg
or
mov
ret
pop
ss
pusha
arpl
add
mov
pusha
insb
je
decl
popa
dec
lea
or
pop
pusha
pop
data16
mov
mov
test
hlt
scas
add
int
push
je
jne
add
xchg
or
in
loopne
loopne
cltd
cmpl
add
pop
js
or
lea
ljmp
enter
and
xchg
mov
divl
fninit
pavgb
popa
sbb
push
test
cli
mov
adc
rolb
hlt
leave
cmp
sbb
scas
push
xchg
push
lret
push
jne
pushl
add
leave
imul
notb
mov
loopne
call
mov
call
inc
enter
ljmp
jb
dec
pushl
pusha
jns
outsb
ret
movb
dec
imul
addb
es
inc
adc
mov
push
add
popa
jne
dec
loopne
push
pop
push
aad
cmpsl
add
pop
rolb
mov
pop
movsl
jle
and
jmp
push
pop
pop
les
cwtl
jo
pop
or
push
aaa
cld
adc
and
mov
jne
fiadds
jmp
andl
lds
data16
cmp
inc
repnz
pop
lods
sarl
jb
mov
or
jg
or
cmp
jl
repz
push
aaa
push
outsl
mov
aad
push
pusha
call
mov
or
push
pop
outsb
add
movsb
lods
loopne
push
push
shlb
sti
jae
mov
xorb
test
jle
ljmp
scas
jbe
mov
dec
cld
decb
jnp
mov
lea
or
outsl
mov
push
and
hlt
jle
mov
mov
add
or
sub
addb
call
mov
mulb
dec
mull
add
or
shl
lock
add
mov
das
rorb
mov
fstps
leave
fmul
shlb
push
adc
orb
arpl
add
add
jb
rcll
and
lss
push
scas
push
pushl
stos
inc
notl
les
or
or
jp
xor
mov
jg
pop
call
jo
adc
inc
and
call
mov
jo
and
push
sti
mov
xchg
add
lret
call
test
lcall
mov
adc
jecxz
js
rcrl
and
lea
sbb
jp
xor
outsb
mov
add
push
lods
push
cmpsl
or
pop
nop
mov
inc
xchg
movb
xor
dec
test
je
outsl
fadds
mov
xor
mov
enter
push
pop
outsb
cli
pop
call
call
and
mov
je
call
and
in
pop
loop
loopne
dec
pop
add
ret
adc
or
in
test
add
leave
lock
fcoms
cld
mov
jno
test
sbb
fstpt
pop
add
test
sbb
add
int3
xchg
call
pushl
mov
mov
daa
add
lock
sahf
repz
call
mov
pop
cmp
outsl
push
flds
xor
lock
into
xor
jb
sbb
add
filds
add
mov
sub
mov
mov
push
sar
mov
test
push
adcb
mov
or
inc
push
or
loope
rol
sti
shl
clc
jmp
sbb
js
lea
stos
cs
mov
ja
lock
call
xor
repnz
push
mov
sbb
out
les
cmpb
mov
mov
lcall
or
insl
cmp
or
adc
push
inc
imul
add
addl
add
call
sbb
push
push
inc
shl
outsb
or
or
or
pop
push
lock
repnz
or
call
mov
mov
xor
or
call
dec
in
dec
add
leave
rclb
jg
or
fcom
out
clc
fbstp
jne
adc
sub
shrb
sbb
call
lret
push
incb
push
add
sete
data16
push
fisttps
mov
jmp
push
and
and
add
inc
add
push
mov
cmp
xor
push
adc
push
scas
insb
shrb
mov
incb
lock
xor
dec
test
add
cmp
sub
jle
and
out
out
clc
pop
cmp
add
mov
cmp
xchg
mov
imul
mov
sub
or
std
scas
adc
cmp
pop
xor
push
sub
push
ja
mov
cli
mov
enter
fstpt
out
mov
mov
mov
call
mov
mov
xchg
add
pop
inc
push
lock
and
push
std
data16
and
adc
data16
shll
mov
mov
cmc
jg
dec
cltd
enter
inc
push
jb
inc
push
push
js
jg
pop
cmpsl
clc
stos
fimuls
stos
jo
lret
dec
lret
je
xchg
adc
push
addl
fistpl
adc
out
jne
outsl
jb
lcall
pop
and
repz
inc
push
push
clc
pop
xor
jl
mov
jne
mov
jbe
ss
pusha
add
and
lods
add
push
insl
adcb
sub
xor
call
inc
cli
inc
and
mov
adcl
mov
sbb
test
mov
je
xchg
sub
xor
divl
or
in
sub
or
jo
stc
push
aam
push
cs
or
pushl
or
push
cmpsb
and
adc
cmp
call
sub
in
pop
jo
adc
or
inc
pushl
call
or
ljmp
mov
adc
add
xor
mov
cld
pop
pop
add
sbb
dec
sbb
lret
xor
add
lods
adc
or
js
pusha
xchg
ss
sbbb
sbb
ret
mov
mov
mov
inc
fbld
inc
jecxz
mov
or
mov
jo
inc
jmp
push
scas
call
inc
jg
fadds
mov
stos
xor
icebp
push
pop
sbb
adc
xor
orb
outsb
adc
sbb
adc
xor
mov
in
xchg
adc
jmp
and
fnsave
push
je
pop
int
push
nop
shll
push
lock
sub
adc
sub
out
aaa
and
push
subb
jl
pop
mov
mov
pop
hlt
xor
test
lcall
jb
hlt
mov
aam
scas
aas
cmp
sbb
dec
and
jnp
pop
loopne
outsb
or
sub
push
data16
filds
in
push
scas
dec
mov
adc
out
jle
cmp
shl
mov
cmp
sbb
movsb
pop
ret
mov
test
adc
sti
jp
testb
daa
inc
push
or
ret
call
mov
cmp
call
jle
and
idiv
push
jg
push
lock
lock
je
test
lock
js
add
or
ret
pop
cmp
xchg
or
mov
or
or
cmc
or
pop
notl
mov
sar
or
or
and
outsb
jg
int3
leave
pushf
or
inc
pop
jae
push
cli
test
outsl
data16
je
fcoms
cld
pusha
push
pusha
or
xlat
jno
ljmp
shlb
call
call
pop
lock
push
repz
add
jb
push
decl
add
or
cmpl
fidivs
or
inc
je
call
sub
xor
in
aaa
mov
lock
scas
add
mov
cmp
roll
pop
test
mov
fistpll
pusha
jmp
xchg
js
dec
cli
adc
in
je
mov
dec
lret
add
xlat
fisttps
les
jb
add
aas
call
adc
or
pushl
ljmp
jbe
js
int3
dec
inc
sarl
and
movb
scas
add
xor
rclb
mov
fisttpl
or
or
ja
cmp
iret
in
repnz
js
clc
cmp
sbb
cmp
sub
add
sar
inc
cmpb
add
jl
or
je
adc
inc
cld
sarb
add
or
pop
ss
sbb
leave
dec
jo
or
or
push
adcb
dec
ljmp
data16
call
add
add
or
stos
or
xor
test
sub
xor
and
mov
adc
mov
add
sbbb
or
call
int
cs
pusha
jl
push
xchg
mov
sbbb
adcl
insb
addl
cld
imul
push
or
je
or
pop
xchg
dec
push
push
and
pop
adcb
xor
mov
pop
test
inc
sub
mov
stos
mov
fmuls
pusha
decl
call
pop
or
mov
adcb
sbbb
dec
addl
rolb
out
sbb
sbb
or
mov
cmpl
sub
sbbb
mov
jbe
mov
add
pop
push
inc
stos
and
xchg
insl
or
cld
scas
add
add
cmpsb
orb
subb
shll
jle
ds
push
sbb
sbb
test
jl
je
negl
fbld
inc
sarb
aam
lea
lea
jp
js
rorb
lret
fistpll
dec
dec
xchg
pop
cmp
add
xadd
or
push
test
shll
test
or
xor
in
fnstsw
lock
cmp
divb
sbb
add
or
data16
clc
add
ret
incl
and
add
dec
mov
add
inc
add
add
push
mov
jl
add
data16
ljmp
sbb
ficoms
xchg
in
repz
fidivrs
addl
stc
test
jl
push
add
cmp
jae
mov
lcall
mov
mov
data16
pop
and
add
pushl
cmp
jae
mov
cmp
mov
push
shll
inc
mov
xor
test
cmp
lods
inc
or
lret
orb
dec
outsb
std
push
shrl
test
test
subb
push
add
pop
jmp
dec
add
mov
loop
push
shl
add
inc
and
dec
xor
pop
mov
mov
add
dec
push
jo
mov
je
sbbb
push
sbb
ret
push
lret
sub
add
mov
jmp
rcrb
les
jl
clc
jl
aam
lea
js
xchg
sub
cmp
or
or
pop
xchg
jmp
dec
jns
adc
incb
insl
or
add
in
call
lock
testl
je
add
sarb
pop
inc
cld
je
jmp
add
jmp
xchg
adcl
aaa
or
or
dec
je
andl
cmp
test
mov
mov
hlt
cmp
cld
mov
popa
adc
cmp
jl
inc
addb
jg
mov
jb
hlt
mov
sbb
lea
xorb
in
shr
sti
fnsave
sub
cld
jmp
jne
lods
fbstp
fcomip
xlat
rorb
or
jle
inc
cmp
ljmp
fsubr
add
pop
jne
int3
leave
fiadds
add
add
pop
mov
sar
cli
sub
push
jne
add
loopne
and
pop
inc
jmp
mov
sub
scas
add
ja
jl
cmp
push
inc
pop
and
jmp
cs
ret
push
lods
pop
push
jl
push
icebp
inc
sub
jbe
pusha
jo
adc
push
add
mov
inc
test
pop
mov
enter
call
test
and
js
call
push
popa
and
faddl
cld
inc
clc
add
or
mov
cld
mov
lock
mov
rclb
testl
cmp
cmp
pop
filds
ja
jl
add
test
ret
in
add
mov
add
lods
loope
incb
jl
daa
repnz
dec
and
lock
jbe
add
xchg
cvttps2pi
outsl
cmp
add
addb
out
or
inc
jo
cltd
cmp
jne
mov
in
fists
jmp
mov
and
loope
in
fiadds
dec
or
xchg
xor
add
pop
in
dec
rcll
sti
call
cmp
fistpl
shrb
lcall
add
push
or
lock
loopne
push
fcoms
shlb
add
or
ret
mov
je
and
clc
lret
and
xor
mov
ret
mov
in
adc
push
and
pusha
and
pop
or
xchg
push
dec
pop
and
or
jb
sahf
out
or
nop
xor
je
jmp
cltd
and
call
fs
pop
or
push
pusha
add
add
dec
push
loop
cltd
repnz
cmpsb
call
add
mov
inc
adc
pusha
pushf
jmp
hlt
mov
call
pop
pop
jl
clc
xlat
pop
cmc
in
and
and
push
pop
cltd
push
add
mov
and
pop
mov
mov
jnp
sbb
pushl
je
outsb
lret
cltd
je
lock
repnz
lods
add
push
cli
insb
push
xchg
and
fs
inc
or
add
inc
aaa
cld
mov
inc
les
push
fldenv
or
roll
loopne
in
pusha
mov
pop
stos
dec
cld
sarb
shlb
lods
enter
je
cmp
test
pusha
inc
add
pushf
xchg
pop
fldenv
adc
xor
aas
inc
jmp
pop
push
jge
and
bound
jge
pushl
mov
mov
aam
jne
aam
pusha
mov
push
cld
div
addb
and
bound
xchg
out
adc
push
ljmp
dec
or
test
lock
or
fst
jbe
sahf
push
or
bound
jp
dec
sbb
rcrb
jle
test
adcl
fnstsw
inc
inc
call
mov
xor
add
pusha
roll
movsb
xor
push
clc
pusha
sub
and
mov
mov
add
movsb
jne
dec
xor
dec
jmp
push
add
xchg
outsb
inc
lock
push
xchg
mov
add
jae
je
in
mov
loop
in
or
and
add
adc
jne
mov
jo
push
push
lock
add
lock
adc
inc
push
xor
adc
mov
push
jne
push
mov
enter
pop
lock
jne
xor
fs
loopne
pop
xchg
push
loopne
jle
shlb
xchg
xor
loop
pop
aaa
jne
rorl
add
jl
add
lcall
lock
shl
mov
sbb
pop
lea
incl
xchg
inc
add
mov
rcrl
cmp
jmp
cltd
cmp
xchg
fnstenv
pop
in
xchg
shl
or
subb
std
mov
ret
jo
push
sbb
and
test
addb
sbb
jb
sbb
call
mov
push
lock
pusha
cmp
pop
sbb
test
push
orl
add
fisttps
stos
or
adc
pop
and
jp
and
add
xor
dec
clc
outsl
adc
xor
and
scas
push
add
pop
adcb
mov
inc
orb
or
jno
ja
div
add
dec
add
pop
inc
fdivrl
dec
push
mov
or
xor
pop
jns
adc
mov
push
jb,pt
cmp
add
mov
into
call
mov
sub
jo
or
mov
fidivs
add
std
call
dec
add
clc
adc
cmp
in
or
scas
mov
push
jbe
out
jo
repz
pop
jno
popf
sar
outsb
mov
or
call
jmp
pop
inc
cld
divl
and
cmp
add
push
decl
jo
lea
mov
outsl
jo
jg
cmc
mov
pop
rcl
mov
loope
adc
leave
ret
sar
pop
ss
mov
adcb
dec
ds
mov
jo
pop
mov
jae
je
clc
jbe
daa
icebp
ljmp
jmp
and
add
jmp
push
xchg
adc
loope
add
imul
xchg
jmp
fimuls
stos
jg
fnsave
and
je
mov
mov
decl
jle
xchg
pop
into
cmp
add
mov
inc
cltd
mov
lods
push
cmp
xor
mov
cmp
hlt
mov
cmp
dec
cmp
je
inc
loope
icebp
out
inc
into
jb
je
sub
into
mov
mov
repz
jl
cmp
jne
mov
incl
lock
lret
add
jle
testb
or
xchg
and
rclb
call
adc
cmpsb
gs
int3
fldt
add
lock
cld
mov
cld
mov
and
adc
lea
je
repnz
mov
inc
cmp
jb
pop
add
mov
cwtl
inc
shr
jbe
adc
sbb
jl
sbb
inc
jmp
outsl
mov
or
jnp
icebp
xor
dec
jbe
hlt
mov
xchg
dec
sti
mov
lds
jne
les
int
out
pop
hlt
sub
or
mov
jo
lcall
mov
and
pop
mov
jne
jnp
push
jle
rorl
cli
or
lea
stc
out
add
dec
inc
push
sbb
jp
ret
and
sbb
aaa
sub
adc
mov
cwtl
mov
lock
push
jo
adc
mov
inc
fidivl
roll
cmp
and
lock
jb
mov
and
mov
outsl
idivb
inc
mov
pop
sbb
jo
inc
add
push
jmp
inc
or
add
xor
sti
or
mov
orb
jl
inc
dec
add
bound
pop
sbb
mov
add
pusha
jno
or
cmp
dec
lods
js
adc
orb
jbe
jp
je
adcb
xchg
or
or
mov
push
sti
je
data16
std
pop
lods
outsl
mov
mov
or
push
xor
push
call
push
fdivr
ret
sub
cmp
adc
xor
ljmp
adc
sub
sub
loope
loop
lock
dec
pop
add
mov
js
mov
cmp
mov
lahf
lock
loop
scas
pop
push
clc
lea
scas
push
pushf
push
lock
ss
fcom
rolb
fcoml
or
mov
scas
lcall
shrb
jo
fdivrs
add
and
pushl
or
dec
cwtl
faddl
decb
orb
jne
movsb
xchg
jne
mov
pop
sbb
cs
inc
jl
cmp
loopne
jmp
inc
mov
aaa
adc
adc
icebp
inc
or
mov
ja
inc
pop
lock
and
adc
cld
xor
lock
adc
inc
movsb
add
les
les
add
test
cld
je
xor
sub
ret
pop
scas
outsb
rorw
pop
jo
adc
xchg
add
fsubl
clc
jo
push
or
inc
mov
jne
xchg
xchg
add
add
inc
inc
divl
inc
jl
out
adc
and
add
add
add
add
filds
jo
xchg
lcall
sub
xor
adc
mov
pop
xorl
adc
push
jno
scas
mov
pusha
add
adc
adcb
mov
mov
and
pop
pop
cmp
or
push
adc
mov
add
push
push
lods
lock
jmp
sbb
and
add
xchg
mov
shl
mov
bound
push
mov
filds
dec
xor
cmp
xorl
lret
or
or
lock
scas
fs
mov
mov
aaa
add
xor
adc
pop
clc
adc
add
add
je
call
mov
rcrb
mov
mov
sar
fsubrs
shll
mov
lods
adc
mov
mov
xor
or
pop
pusha
and
ljmp
jbe
inc
mov
repz
inc
xor
push
add
xor
jno
call
neg
adc
and
ret
mov
pop
add
push
mov
push
mov
adc
add
outsl
push
cld
jle
mov
jo
rolb
lret
inc
call
adc
js
or
repnz
cltd
mov
clc
inc
rolb
inc
mov
push
cmpsb
lock
push
data16
add
rclb
and
movzwl
adc
mov
and
dec
mov
mov
inc
add
fcoms
lds
mov
and
repz
nop
push
push
pop
data16
adc
sti
ret
ja
add
push
pop
and
mov
or
jg
lea
call
and
inc
sbb
pushl
icebp
add
mov
loopne
sbb
mov
mov
push
mov
pop
icebp
subb
lock
rorb
cmpsl
pushl
aas
pop
clc
lods
test
outsl
enter
or
mov
mov
call
lock
jne
pop
inc
jle
pop
sub
push
inc
push
jb
test
add
lret
daa
icebp
inc
cmp
test
sub
add
cmp
clc
sar
push
xchg
add
shlb
clc
bound
clc
mov
sarb
call
cli
or
push
mov
add
cmp
add
arpl
sahf
test
inc
into
add
mov
sub
add
loope
sub
divl
or
or
inc
push
scas
mov
insl
rol
mov
divl
and
push
mov
les
ret
bound
cs
stos
ljmp
jmp
cmp
cmpl
je
stos
js
popf
les
push
push
mov
frstor
aam
mov
push
jb
and
out
cli
mov
icebp
or
testl
jle
testb
jg
rorb
out
push
fisttpl
push
adc
jb
inc
push
icebp
or
add
mov
xchg
std
or
outsb
cmp
push
mov
mov
jne
push
test
dec
js
pop
mov
pop
push
inc
stos
mov
idiv
insl
hlt
test
jl
add
decb
jne
push
xchg
jg
inc
xchg
fwait
mov
dec
mov
sub
je
adcl
jne
push
jmp
lods
andb
adc
or
xor
je
je
mov
mov
push
lea
pop
movsb
push
call
adc
mov
push
or
loopne
pop
cwtl
data16
aas
push
ds
je
idivb
sub
lea
sub
push
test
fadds
adc
dec
clc
dec
dec
mov
push
inc
cmp
mov
clc
sbb
pop
add
mov
mov
push
sbbl
cmp
and
fmul
adc
sub
notb
dec
add
loopne
out
adc
pop
mov
dec
inc
mov
call
jmp
ljmp
shlb
dec
loop
cmpsb
out
pop
or
arpl
sahf
cwtl
jp
jne
mov
mov
jle
jle
hlt
jg
add
ljmp
pcmpeqw
in
inc
shlb
cltd
cmp
je
neg
sbb
and
jb
dec
clc
cmp
call
xor
push
mov
sbb
je
pop
ret
push
push
pop
cwtl
add
addr16
ret
add
xor
or
lods
push
mov
or
pop
mov
call
sbb
fwait
in
call
mov
push
negb
cmpsb
pop
jecxz
inc
and
pop
sub
jmp
clc
jl
sub
jge
movb
test
jle
mov
push
or
cli
add
mov
test
dec
pop
mov
sahf
adc
rcl
notb
inc
or
ret
out
jp
cmovns
mov
cmp
inc
push
ret
imul
lock
call
decl
xchg
cmp
jbe
dec
jmp
xor
pusha
cmp
popf
lock
push
jle
icebp
and
push
adc
insb
aaa
adc
xchg
adc
inc
cmp
clc
mov
dec
push
add
sbb
sub
out
xor
cmp
sub
add
repz
push
mov
adc
pop
adc
push
push
fidivrs
jbe
call
push
sar
push
sub
adc
mov
sbb
out
pop
xchg
addb
inc
jmp
pop
dec
jb
sub
add
push
push
inc
inc
outsl
fldt
jbe
add
test
cmpl
push
dec
or
jbe
cltd
push
fisubs
pop
cmp
xor
push
test
out
inc
mov
push
cmp
ret
rolb
and
dec
loopne
dec
sbb
fisttps
call
jb
fsubl
push
push
and
and
xchg
fidivrl
ror
cmp
test
lcall
and
push
jbe
inc
cmc
and
xor
mov
sahf
or
mov
je
jbe
add
ret
mov
cmpsl
pushl
hlt
addl
cwtl
clc
repz
loope
dec
mov
mov
inc
push
das
mov
mov
test
js
cmpsl
cmp
cli
jge
or
fucomip
fcomip
rcll
test
loop
xorb
push
dec
lock
dec
je
add
push
xor
mov
mov
pop
or
jne
mov
faddp
inc
or
test
xor
or
dec
adc
fbstp
fbld
and
dec
sub
push
cs
fimuls
js
pop
in
or
adc
or
inc
rcrl
sbb
inc
lods
mov
add
jl
or
fiaddl
ret
push
adc
xor
scas
push
push
cs
loopne
pop
lods
pushf
aas
movsb
into
andb
or
cmp
jg
sub
cld
lock
addl
push
mov
push
xchg
push
sbb
mulb
sub
sbbl
clc
frstor
int
jmp
xchg
je
pop
mov
mov
lea
call
xor
and
lds
add
inc
stc
pop
mov
mov
push
es
dec
pop
sbb
addb
sub
xchg
and
lock
loopne
xor
jle
call
lcall
in
mov
xchg
add
pop
sub
test
test
pop
and
testb
outsb
adc
pop
inc
fwait
sbb
fimuls
inc
callw
xor
adc
mov
sti
mov
mov
jl
cld
push
add
stos
inc
jecxz
cs
stos
imul
dec
add
and
fidivrs
in
clc
insl
inc
jns
cs
push
adc
jb
out
or
imull
jne
cld
jp
lea
stc
pop
push
fbld
in
js,pt
jp
jge
sub
lock
outsb
loope
dec
push
jb
jl
pop
call
loopne
notl
and
jbe
testl
movsb
push
call
loopne
push
movl
in
pop
aam
cmp
push
mov
push
jb
add
insb
xor
add
pop
cmp
lea
adc
push
lea
subb
add
movsb
fs
mov
rorb
das
push
lea
iret
or
mov
ds
xor
and
mov
adc
mov
fmull
movsb
test
pop
out
fidivrs
cld
push
aaa
or
dec
sarb
aaa
sahf
jmp
xchg
mov
jbe
fwait
mov
add
jbe
subl
dec
movzwl
add
push
inc
pushl
lea
ss
mov
dec
pop
add
mov
adc
incl
push
jb
cmp
ja
testb
jne
sub
push
jae
adc
lea
stc
inc
jb
pushf
mov
xor
dec
sti
punpckhdq
mov
lret
pop
mov
mov
call
sbb
sub
scas
cmpsb
and
scas
shlb
sbb
mov
jne
es
pushl
jb
mov
loopne
out
adc
or
mov
sbb
ja
call
gs
mov
imul
dec
lcallw
add
mov
ss
mov
sarb
rolb
inc
fidivrl
pop
add
jl
mov
push
std
loop
add
mov
fdivrp
xchg
lret
mov
mov
pop
sub
decl
pop
shr
cmp
fmull
pop
sbb
mov
push
decl
cmpsb
or
imul
out
int3
call
or
shl
xlat
add
mov
fbstp
testb
inc
jg
subb
fidivrs
push
stos
cmp
xchg
jb
call
jecxz
add
fmul
cmp
cmp
call
mov
call
add
data16
lds
je
mov
add
mov
cld
push
add
icebp
and
xorl
inc
std
test
sub
xor
test
jle,pn
test
lods
add
mov
fbstp
nop
je
call
ja
fnsave
pop
div
add
jne
jmp
xchg
pop
push
mov
fcomi
sub
scas
out
popa
jp
loopne
mov
sub
push
push
cmp
daa
or
insl
jno
call
out
add
xor
cmp
inc
ret
ret
mov
daa
cmp
ss
mov
sub
cmp
inc
add
mov
xchg
sbbl
push
or
cmp
add
sub
pop
add
push
ss
mov
jbe
dec
push
je
inc
or
addb
mov
mov
in
push
xchg
daa
lea
sbb
add
mov
aaa
xor
dec
cwtl
jecxz
push
es
insl
ss
inc
lods
xor
push
lock
mov
mov
cmpb
int
stos
cmpb
cmp
data16
jb
inc
jle
cmp
es
loopne
mov
cmp
lock
mov
jle
push
call
popf
sub
mov
ret
cmpsl
inc
mov
cmp
xlat
rol
testl
jmp
cmpsb
hlt
push
sbb
scas
push
pop
push
cmp
and
hlt
mov
lock
push
insb
in
fists
fimull
test
mov
dec
data16
sahf
data16
and
push
add
call
or
in
push
in
aas
inc
inc
add
fisubrs
jnp
add
sbb
outsb
fwait
lock
mov
cmp
cli
sbb
stc
or
lea
dec
emms
xor
mov
adc
mov
jae
sbb
and
or
jae
xor
cmc
test
jns
mov
sub
jbe
or
sub
cmp
mov
scas
and
fbld
scas
lea
pop
pop
inc
fucomi
adc
jle
in
cmpsb
sub
mov
mov
ss
hlt
push
or
or
pop
loopne,pt
push
dec
or
subb
mov
lods
jbe
xchg
cmovne
cs
lock
or
fdivrs
outsl
inc
inc
lea
into
testb
lahf
gs
rclb
mov
call
lock
push
jb
push
or
mov
xor
or
js
push
call
sub
clc
cmp
aaa
add
outsl
push
cmp
je
cmp
je
cmp
je
outsb
lock
mov
clc
jmp
mov
jmp
mov
jmp
mov
inc
out
jl
hlt
or
inc
cld
aaa
mov
in
clc
mov
movsbl
in
xor
nop
mov
dec
cmp
mov
jg
mov
test
add
mov
cmpsb
push
into
pop
repz
cld
sub
das
jns
cmpsb
ljmp
ficomps
or
inc
ds
je
or
jae
xchg
les
ss
xorl
ljmp
lock
jb
push
lea
shlb
sbb
fimuls
ret
inc
cmp
es
jle
mov
clc
out
mov
int3
leave
mov
cmp
cs
movsb
pop
imul
mov
xor
push
jb
in
mov
sbb
xor
xor
inc
call
scas
call
nop
dec
cmp
xchg
jno
mov
sub
sbb
mov
into
fisubs
push
sahf
jbe
xchg
push
int3
jg
and
adc
test
fldl
test
in
push
xchg
push
iret
pop
outsl
push
dec
and
test
fdiv
dec
adc
es
das
inc
mov
or
xor
cs
into
pop
aad
push
insl
sbb
xchg
cmp
xor
rorb
lret
jecxz
es
xchg
scas
add
cli
or
call
pop
rcrl
lods
adc
jl
cmpsl
fs
addb
jnp,pn
lret
mov
sbbb
orb
and
inc
rcll
sub
hlt
lret
ja
jge
adc
rcl
pop
pop
cltd
mov
jmp
cmp
dec
adc
loop
or
fdivrs
dec
xchg
dec
cmp
inc
cmc
mov
orb
cli
movb
sub
pop
lcall
std
and
jb,pt
adc
add
mov
pop
xor
push
cwtl
loopne
cmp
cmp
adc
cmpsl
adcl
sub
sub
pop
cld
pop
mov
inc
mov
adc
aaa
push
ret
jo
pop
push
in
loop
movzwl
add
fcoml
mov
cmpw
jae
xchg
and
adc
dec
adc
inc
cmp
loop
sbb
add
and
pop
sub
mov
clc
pop
test
adc
push
push
adc
es
jp
sbb
mov
pop
xchg
mov
jp
push
lea
fisttpll
sub
push
lea
mov
call
push
enter
idivb
test
test
mov
add
mov
pop
dec
push
mov
leave
mov
or
mov
cli
addl
lcall
inc
or
sub
or
jno
push
jecxz
xor
or
out
lock
fidivs
pop
sbb
or
mul
call
pop
cwtl
lret
loop
into
push
call
push
cld
outsb
lret
add
adc
into
jne
aad
or
cmp
call
clc
in
ljmp
repz
imul
cmp
sub
push
jp
loop
jb
sbb
lea
mov
add
outsb
mov
cmpsl
aas
rorb
addb
cmp
mov
add
sbb
jmp
jg
and
aaa
jbe
notb
sbb
cli
xor
fiaddl
or
cld
mov
fcmovbe
cmp
push
jae
loopne
adc
subl
xor
dec
xchg
shll
sub
inc
orl
add
rorb
xchg
xor
or
test
test
jl
add
jb
inc
mov
push
fcmove
sub
lea
arpl
xchg
cmp
hlt
mov
mov
xorb
subl
fiaddl
shl
add
jae
xor
outsb
add
rcrl
sbb
ds
jbe
sahf
daa
jmp
icebp
in
loope
call
clc
push
pop
lcall
pop
mov
jbe
or
in
mov
decl
les
xor
pushf
sub
push
or
jmp
sbb
mov
out
push
push
je
pop
mov
bnd
je
cmp
lea
cmp
ja
data16
jmp
data16
add
out
sub
inc
cmp
jae
adc
xchg
sub
incb
sub
adc
hlt
ljmp
mov
ds
popa
xchg
jge
sbb
rcr
scas
and
jae
rorb
call
clc
outsl
inc
adc
dec
or
adc
push
popa
test
dec
les
imul
jne
outsb
add
sbb
xor
orb
add
push
jg
call
stos
test
mov
aaa
add
cmpsb
bound
outsl
sti
push
icebp
mov
enter
mov
je
subb
jg
push
mov
add
mov
cs
hlt
push
ss
mov
pop
repnz
inc
adc
add
add
jmp
scas
mov
mov
add
in
std
mov
cmp
das
cmpsb
cmp
push
pop
roll
mov
in
jmp
cmp
call
mov
fistpl
jbe
add
jg
gs
xor
add
or
fdivrl
call
mov
add
jmp
xor
outsl
mov
mov
sub
inc
sbb
xchg
jecxz
mov
cmpsl
stos
cld
jge
xor
ja
je
or
notl
xor
iret
out
mov
push
shl
xchg
adc
mov
out
fists
and
pop
dec
sbbb
addl
data16
das
add
adc
cld
cmpsb
dec
or
add
add
rcll
out
clc
incl
mov
mull
sbb
sbbl
push
fisttps
mov
sarb
jbe
fdivrs
jbe
outsb
cli
cmp
push
xchg
lds
push
jmp
mov
jb
push
push
aas
adc
or
xor
push
mov
fwait
ljmp
cld
incl
inc
je
push
xchg
insb
inc
lds
add
outsb
ljmp
call
add
add
adc
mov
scas
call
scas
dec
cli
push
jge
lods
push
inc
enter
sub
add
cs
push
xchg
cmp
insb
subb
punpckhbw
add
xchg
push
inc
sub
daa
hlt
pop
out
int3
les
jle
xchg
arpl
and
inc
sbb
xlat
adc
add
inc
cmp
test
out
adc
adc
jmp
mov
xchg
cmp
adc
pop
cmp
mov
sti
repnz
sub
and
mov
sub
mov
adc
mov
das
bound
fiadds
xor
ja
push
scas
call
sbb
pusha
mov
add
add
mov
fwait
cmp
mov
call
out
out
orb
adc
je
in
mov
mull
pop
push
mov
jg
scas
cmp
nopl
cld
cld
test
xor
push
mov
inc
test
inc
mov
in
cs
mov
es
ret
test
add
jae
in
push
push
or
clc
rcll
call
ljmp
push
je
imul
add
sub
pop
into
scas
cmp
dec
jne
mov
jae
pop
insl
or
add
mov
add
pushl
push
dec
add
data16
jnp
ss
fneni(8087
jecxz
mov
push
adc
add
push
lods
push
push
data16
call
xor
mov
inc
pop
and
adcb
add
cmp
push
push
dec
xor
test
jle
push
inc
aas
aas
cld
add
push
jb
sbb
mov
mov
shlb
and
add
dec
sbbl
pop
incl
test
inc
or
cltd
ss
push
xchg
add
xchg
mov
sbb
dec
pop
xlat
mov
add
fimuls
add
mov
push
jb
dec
cmpsl
call
mov
cmpsl
and
shrb
or
or
mov
or
rcrb
sarb
jl
notb
out
and
mov
loopne
test
or
inc
iret
inc
pop
enter
push
call
fiadds
xchg
mov
je
and
and
fs
les
jo
mov
mov
jns
jp
sub
cmp
or
sbb
mov
ja
xchg
push
mov
push
lds
push
push
sub
shl
orb
orl
pop
cmpsl
loope
mov
sbb
push
ljmp
jg
push
std
outsb
scas
addb
adc
addb
or
mov
xchg
xor
xorps
es
sahf
es
pop
add
call
sbb
into
sub
add
jecxz
xchg
mov
add
jmp
stos
loopne
testb
and
mov
test
adcl
negb
call
jb
sarb
cmp
sub
cmp
mov
loope
cmp
jbe
lret
mov
inc
push
push
jb
je
push
ljmp
cmpsb
fildll
push
xor
call
sbb
clc
cld
xchg
push
cmpsb
and
rcl
push
sarb
jno
aaa
dec
cmp
cmp
and
push
cmp
cltd
mov
sub
in
les
mov
mov
cld
mov
lds
xchg
push
pop
aaa
push
lds
or
jbe
push
mov
and
sbb
repnz
into
pop
jae
mov
inc
lock
pushl
test
jne
pop
inc
ret
push
xchg
jo
clc
or
pop
jb
movsb
rol
lret
mov
or
xorl
ljmp
mov
and
jmp
jne
push
or
mov
add
and
outsl
pop
lock
xorw
jmp
adc
xor
call
push
daa
lea
sbb
movsl
pusha
mov
pusha
mov
xor
sbb
cs
aam
loop
mov
pop
call
arpl
inc
push
cmp
adc
jb
loopne
cld
sbb
outsb
adc
inc
shlb
call
sbb
loopne
call
aad
mov
or
mov
hlt
lods
fs
push
xchg
sbb
pop
icebp
adc
lea
xor
push
mov
pushf
mov
stc
divb
jb
loopne
fisubs
adc
push
jecxz
dec
mov
xchg
test
lock
inc
idivb
subl
push
sbb
adc
orl
jmp
sub
lods
push
sbb
cmpsb
xchg
jnp
mov
add
jge
je
mov
and
push
js
xchg
cmp
pop
nop
sarb
mov
add
fidivrs
jmp
inc
jg
sub
lea
xor
lock
add
lret
mov
ficomps
call
mov
fdivs
add
cmpsb
push
pop
aam
mov
aam
adc
mul
push
cmp
cmpsl
stos
hlt
or
jle
bound
je
add
mov
enter
stc
inc
aam
mov
jns
xor
int3
sti
xlat
test
jmp
in
jg
mov
inc
mov
outsb
xchg
fsts
movb
cmpsb
pop
xor
hlt
add
addb
lock
cld
push
pop
pop
mov
pop
clc
out
outsl
xchg
add
push
fmull
outsl
popa
cld
mov
or
sbb
inc
add
inc
fisubs
clc
ljmp
fucomip
push
mov
jno
cs
lock
std
fbld
jne
jne
cmp
mov
testb
mov
lahf
mov
xor
or
xor
ss
into
or
call
jge
jne
adc
je
dec
dec
insl
jno
popf
insb
xor
push
outsb
in
lea
out
xor
scas
out
pop
pop
cmpsl
ss
xchg
hlt
jmp
test
xlat
bound
aam
adc
cld
ffree
iret
mov
int3
rclb
adc
std
xor
inc
push
cmp
lock
inc
xchg
push
dec
add
clc
icebp
in
xchg
add
xor
cmpsb
adc
cmp
stos
subb
je
jbe
call
pop
popf
fsubrl
pcmpgtd
mov
jle
dec
clc
fadd
push
test
js
ds
inc
mov
addb
jp
xchg
addb
fsubs
movb
cmpsb
sub
jo
adcb
fimuls
inc
loope
notl
jmp
or
xor
dec
mov
push
xchg
scas
cmpsb
ret
fiadds
repnz
loop
pop
pop
push
sub
pop
lock
ret
adc
test
xchg
push
out
push
loopne
and
decb
and
outsb
lock
rorb
hlt
adc
lock
clc
inc
mov
in
mov
into
pop
pop
cmp
rclb
cltd
rcll
fcmovnb
or
push
push
jmp
out
add
push
cwtl
push
adc
xchg
outsl
inc
mov
jmp
je
sbb
je
outsb
add
push
push
add
sbb
push
add
mov
into
out
clc
int3
mov
cmp
fimull
or
icebp
pop
add
movl
aas
fsubrs
or
mov
pop
std
and
es
sub
adc
arpl
lcall
mov
pop
and
adc
int
mov
mov
std
movzwl
lea
adc
ljmp
out
nop
sub
adc
mov
mov
jb
and
jle
adc
cmp
mov
cmp
mov
ss
pop
jo
test
push
or
xchg
jmp
ljmp
mov
bound
push
xor
mov
das
mov
negl
jne
call
adc
jp
testb
test
lea
outsl
imul
sub
lar
mov
lock
push
mov
lds
add
add
inc
dec
je,pt
or
cmp
lods
psubb
mov
sbb
rolb
repz
sub
pop
adc
mov
xor
jbe
hlt
mov
fisttpl
inc
sahf
adc
lret
pusha
ss
xor
jmp
add
ret
shlb
scas
shl
cmpsb
inc
inc
push
dec
xchg
add
imul
dec
daa
sbb
sub
pop
loop
test
lret
mov
call
cmp
jmp
inc
outsb
jb
jmp
mov
adc
inc
test
repnz
out
shlb
dec
jbe
dec
rep
cmpsb
fcomi
push
es
movl
sub
out
push
outsl
jp
into
jae
in
ret
xor
push
xchg
adc
add
cmp
rclb
fcoml
add
mov
adc
clc
add
repz
cs
push
data16
mov
lea
hlt
call
or
add
in
jmp
xchg
call
add
jae
push
jl
sbb
popa
cmp
je
push
call
ret
cli
push
dec
dec
lods
call
push
btc
push
adc
iret
mov
xchg
and
mov
pop
lret
sub
or
aam
vroundss
xor
jmp
push
test
ljmp
pop
ficoms
inc
lahf
loop
and
add
mov
adc
cld
lret
push
adc
push
repnz
mov
mov
les
adc
jl
lock
call
call
mov
pop
mov
das
hlt
inc
out
mov
push
xchg
ret
pusha
mov
lret
lea
xor
fmull
inc
outsl
push
stos
lret
adc
push
fmuls
jg
dec
popa
xor
sub
sub
mov
enter
out
add
fcmovu
je
adc
jne
je
cmp
je
push
xor
cmp
out
push
xchg
movb
call
inc
shll
test
dec
mov
pop
jbe
dec
hlt
lret
or
jne
mov
cmp
or
jl
push
push
pop
cmpsb
ljmp
repz
shll
sbb
pop
pop
add
jecxz
shlb
mov
icebp
es
cmpl
test
or
mov
sti
lret
repnz
mov
lcall
shrl
pop
popf
xor
jg
ja
aas
push
and
mov
lcall
movsb
in
ds
and
pop
xchg
cwtl
in
test
and
fbstp
mov
leave
pusha
les
jg
lods
dec
cs
and
xchg
ja
lret
xor
cmp
scas
lea
fnstenv
mov
incl
adc
loop
dec
into
lcall
cwtl
xchg
mov
mov
fisttpll
loopne
inc
loope
cwtl
xchg
mov
aad
repz
push
inc
and
or
mov
loop
jbe
push
and
xchg
icebp
and
outsl
repz
push
pop
sub
jle
mov
loope
and
fwait
insl
scas
movsl
and
dec
dec
shl
fldcw
clc
inc
mov
adc
push
jo
int3
sub
std
and
aas
mov
mov
lods
test
cltd
jo
testb
lret
push
shrb
fisttps
mov
cmp
cmp
movsl
add
push
xchg
enter
and
lcall
andl
test
lock
mov
cld
xchg
add
dec
sub
inc
push
and
loop
add
mov
dec
jmp
pop
out
aas
cmp
push
pop
and
mov
roll
and
ss
cmpsl
call
xor
nop
jmp
xor
outsl
pop
jmp
icebp
pop
adc
ss
jmp
mov
jmp
outsl
scas
sub
sbb
sub
adc
loopne
jg
jl
adc
fstps
mov
loopne
and
mov
into
inc
push
cmp
sub
cmpb
std
sub
iret
idiv
or
xchg
adcl
dec
xor
fcmovne
icebp
movsl
mov
in
ljmp
incb
cmp
subb
negl
enter
and
jle
push
pop
dec
and
cmc
jg
idiv
xorb
xchg
shrl
lods
dec
cmp
cmc
out
loopne
sti
mov
call
js
add
movsl
shlb
adc
push
add
or
push
data16
cli
push
fmull
dec
sub
sub
das
clc
xor
sbb
in
sbb
dec
int
lds
push
push
es
or
stc
adc
and
push
mov
sub
jo
fistpll
fildll
add
jb
int3
mov
pop
push
pop
jo
pop
hlt
idivb
fidivrl
dec
inc
pop
insl
inc
dec
js
push
div
inc
movd
cmp
mov
push
push
cmp
jo
test
mov
sub
xchg
inc
and
push
jbe
adc
arpl
inc
cs
std
jmp
push
int3
sub
pushf
push
adc
jo
cmpsb
jp
in
mov
sbb
aaa
cmp
mov
mov
call
or
add
dec
add
mov
push
jbe
call
inc
call
loopne
call
push
xchg
xchg
lods
push
mov
mov
data16
js
or
and
jp
mov
jno
out
jg
xor
pop
lock
jle
into
xchg
pop
pushl
push
push
jp
mov
insb
xor
cmp
aaa
loopne
arpl
pushl
call
add
or
lea
popa
std
out
aas
call
mov
or
std
inc
push
test
xchg
push
loop
inc
and
push
mov
fs
fsubrl
out
lret
in
push
imul
hlt
add
call
mov
int3
fldt
call
outsb
jge
dec
clc
fimuls
dec
and
cld
cmpl
sub
ja
sbb
lret
pop
mov
dec
test
xor
out
dec
mov
push
pop
cmp
out
push
call
sbb
outsl
jae
pushf
sub
push
mov
mov
pop
inc
das
cld
jns,pt
outsb
rolb
mov
scas
mov
call
into
push
xor
in
and
es
test
mov
bound
xchg
xor
or
lahf
mov
ss
stos
mov
imulb
adc
lcall
int
adc
lea
and
mov
cs
inc
mov
lock
xchg
call
ret
test
in
adc
sahf
sub
test
lock
xchg
add
jmp
cs
imul
mov
or
sahf
mov
iret
add
sbb
mov
repnz
les
or
xchg
lret
push
cmpsb
fisubrl
push
aas
pop
test
cmp
push
mov
pop
dec
dec
mov
jg
pop
mov
or
sub
push
sub
iret
push
pop
lret
incb
add
call
cmovns
mov
add
add
mov
push
push
rolb
xor
lods
jle
cld
dec
or
xor
ja
inc
pushl
inc
sti
mov
mov
mov
xchg
rcr
mov
cwtl
add
dec
and
push
repnz
jne
mov
sbb
out
cmp
jne
add
add
sbb
pop
es
insb
lods
push
lret
and
cmc
push
mov
push
sub
cmc
xchg
add
inc
sbb
pop
add
jbe
push
out
adc
loopne
dec
jne
inc
push
je
shr
pop
mov
cmp
xchg
sbbl
mov
loope,pt
rorl
pop
adc
icebp
jne
cmp
add
cmpb
dec
cmc
ja
jg
mov
loopne
cli
and
shl
ds
xchg
outsl
jmp
mov
jne
std
cmp
jbe
mov
mov
jmp
insb
sub
dec
jge
fisubl
into
repz
cmp
fs
mov
push
sub
push
push
cli
idiv
fwait
add
push
jl
or
out
mov
mov
push
add
add
or
xchg
mov
mov
or
pop
or
cmp
movsb
fnstcw
std
dec
xchg
iret
scas
add
int3
sarb
fisttps
cli
leave
jnp
jne
loop
push
sar
pop
push
ret
add
incb
inc
sub
ja
out
rcll
das
int
test
mov
lcall
ss
cmp
jb
push
pop
inc
add
mov
inc
leave
mov
clc
addl
jne
mov
sbb
push
shl
aas
call
cli
ja
cld
mov
aam
ljmp
push
cmc
dec
sti
rcrb
ret
lea
sti
subb
mov
mov
adc
push
test
mov
jl
roll
mov
mov
sbb
mov
add
add
jb
add
pop
jne
xor
mov
mov
ret
cmp
je
push
add
push
call
dec
psrld
mov
neg
pushl
inc
pop
jl
inc
sahf
lea
push
jg
xchg
xchg
mov
ja
lods
adc
mov
xchg
ja
push
jmp
fidivrl
in
push
call
mov
push
and
hlt
pop
adc
jne
add
decl
loopne
out
cmp
add
cmp
jne
mov
movsl
or
idivl
aaa
push
adc
add
rol
into
cmc
add
push
decl
pop
int3
add
push
mov
call
cmpl
in
pusha
mov
int3
fs
cmp
flds
mov
adc
ljmp
fisttpl
mov
loop
push
push
mov
call
add
cmp
out
jns
and
cld
scas
or
cmpsb
push
insl
mov
movsb
dec
fstpt
test
or
push
sbb
cld
xor
mov
push
outsl
imul
pop
push
sbb
std
icebp
loopne,pt
add
add
rcll
and
push
nop
repnz
negb
mov
push
call
cmp
lock
adc
outsb
mov
cmp
ret
dec
mov
stos
add
in
jo
lret
jecxz
fmull
mov
or
rcrb
faddl
into
call
inc
sub
outsb
mov
mov
xor
fiaddl
cmp
es
movsb
push
lock
ljmp
jmp
xchg
mov
add
call
les
cmp
mov
push
mov
mov
inc
dec
scas
or
fcomi
lea
mov
add
outsb
into
mov
jmp
mov
gs
push
mov
jl
push
dec
pop
inc
xchg
add
scas
xor
adc
cmp
js
ljmp
mov
mov
das
xchg
nop
or
push
xor
jbe
insb
add
mov
lcall
ret
inc
inc
jl
mov
jo
mov
add
mov
add
leave
push
testb
add
or
dec
mov
pushf
add
and
addr16
cmp
or
and
mov
jl
inc
fmul
add
test
int3
andl
mov
or
cmp
xchg
subl
lea
sbbb
popa
adc
add
int3
add
int
cmpb
mov
call
add
cmp
add
sub
and
cmp
roll
rorl
addb
jae
mov
aad
fstpt
push
pop
pop
andl
cmp
jle
mov
shr
xor
mov
and
lcall
filds
fldt
lock
xchg
or
pop
sbb
nop
rcrb
sub
lea
add
pop
fcompl
jg
pop
aam
test
cmp
pop
test
lods
inc
nop
cmp
cmp
or
rorb
ljmp
rol
jne
inc
mov
ljmp
les
mov
fdecstp
pop
clc
sbb
xchg
rclb
or
cli
push
adc
das
push
ds
add
cmpsl
rcrb
call
out
jp
sar
ljmp
push
jmp
xlat
sub
add
pop
jbe
pop
xchg
xor
sub
pop
dec
adc
pop
lock
out
testb
ret
add
or
push
int3
pop
cmp
jbe
test
inc
cmp
fistl
mov
shrb
dec
xrelease
mov
adc
push
stos
movsb
cmpsb
adc
adc
ret
mov
loopne
push
clc
sub
rorb
add
inc
in
aam
cmp
je
shr
cs
cltd
mov
push
adc
add
or
call
jbe
adc
mov
xchg
popa
mov
or
stos
adc
cwtl
add
xchg
xor
xchg
fwait
sbb
pop
cli
mov
inc
psubsb
dec
add
or
imul
xchg
andl
hlt
dec
test
push
cs
jbe
mov
clc
fucomi
mov
inc
orb
enter
mov
mov
cmpsb
rcrb
pushf
out
inc
or
pop
outsb
push
idivb
outsl
rorb
push
ljmp
push
aam
std
addr16
mov
repz
mov
shlb
sbbb
out
mov
mov
or
cmp
addb
test
movsb
adc
mov
adc
push
add
or
mov
pushf
and
pop
testl
lods
add
je
mov
lret
push
rclb
es
cwtl
out
add
notl
mov
or
mov
mov
pop
sbb
cmp
sub
jge
pusha
inc
pop
pusha
pop
adc
scas
and
mov
push
in
add
cmp
mov
loop
std
dec
jne
adc
and
xrelease
push
data16
jo
sbb
mov
mov
hlt
cmp
add
dec
xor
or
pop
mov
pusha
push
add
loop
pop
hlt
lea
movsb
mov
outsb
adc
pop
mov
pusha
jle
rorb
je
fistl
mov
fistps
add
jb,pn
or
dec
outsb
decl
popf
mov
jne
lds
cltd
sub
cmp
inc
adc
pop
add
add
pusha
add
lret
adc
xchg
pop
cmpsb
pop
add
jle
lea
out
adc
cmp
xchg
stc
pop
pusha
push
outsb
mov
jmp
or
push
dec
xchg
loopne
adc
shr
cmpsb
xlat
stos
loopne
cmp
pop
test
mov
cwtl
push
cmp
add
push
pop
mov
mov
add
dec
aam
or
sub
or
ljmp
cli
lret
inc
push
inc
adc
cmp
lea
pushl
push
test
in
sub
cli
cmp
cmp
mov
movb
cld
aaa
jmp
ja
and
inc
push
mov
decb
fstpt
cmc
pop
add
add
add
and
and
testl
or
mov
mov
in
mov
xor
into
jb
adc
decb
adc
orps
ret
cmc
test
jecxz
mov
sar
jg
push
jb
add
cmp
add
inc
call
movsl
push
or
or
and
jb
loopne
push
cmp
call
jmp
je
repz
test
xor
or
xor
out
adc
push
loop
sbb
jb
lea
pusha
popa
push
clc
cmpsb
or
data16
nop
mov
scas
lods
add
add
outsl
outsb
stos
in
push
pushf
add
pop
lea
call
xor
popa
pcmpeqw
pusha
sub
xchg
push
jb
popf
in
pusha
adc
and
fwait
mov
popa
or
add
adc
cmpsl
sub
and
stos
jp
pusha
cmpsb
push
and
loopne
mov
decb
mov
push
adc
sub
call
push
or
call
sar
add
push
loopne
loopne
dec
ljmp
decb
add
and
or
jmp
or
lea
bound
adc
incb
adc
mov
xchg
xor
sub
test
fbstp
adc
mov
adc
dec
pushw
in
adc
shrl
enter
lret
call
add
aad
cmp
adc
mov
xlat
cmp
or
ljmp
add
xchg
or
les
cmpl
ret
jmp
jle
lds
imul
call
out
test
pop
jne
add
xor
cld
mov
sbb
fcompl
add
pop
in
and
xor
and
fistl
into
dec
push
or
push
pushf
loop
sub
and
inc
loope
inc
out
scas
in
movsb
pusha
push
push
sarb
dec
mov
adc
xor
dec
sub
loop
fsubrs
dec
add
adc
testb
je
pusha
jg
loop
jp
add
std
jmp
dec
mov
jmp
and
sub
push
sbbl
add
or
and
call
cmc
scas
loop
out
pusha
outsb
xor
jmp
adc
or
fcos
jne
jb
fnsave
movsl
add
or
dec
fistpl
cmp
push
lock
adcb
mov
adc
inc
xor
push
std
push
std
add
xor
addb
in
mov
add
mov
mov
ja
jl
pusha
push
and
es
mov
testl
jo
lcall
or
adc
mov
aam
sbb
ret
jb
xor
test
lret
stos
xchg
ficompl
aas
xchg
lret
movsl
and
test
adc
or
sub
add
add
inc
pusha
js
jo
icebp
jo
cmpsl
hlt
inc
mov
test
pop
call
cmp
and
adc
sbb
test
xor
call
call
jbe
pop
add
jno
gs
loopne
add
jno
adcl
ljmp
icebp
inc
add
cs
mov
or
jb
clc
mov
shlb
sub
mov
or
xor
mov
inc
push
jo
call
lret
ud0
jp
mov
xor
int
push
lea
push
fimull
stos
scas
and
in
push
xlat
and
lock
jp
add
xchg
pop
push
push
and
pop
xor
or
mov
pusha
jb
test
xor
sub
cld
sbb
inc
mov
hlt
ja
xchg
call
aaa
add
lods
call
xchg
cs
adc
inc
inc
sbb
mov
or
mov
cld
aaa
push
pop
pusha
xor
inc
call
ss
icebp
fildll
inc
cmp
mov
cmp
jmp
xchg
sub
cld
mov
call
mov
je
testl
ss
inc
inc
mov
adc
or
mov
xor
xor
mov
and
cmpsl
mov
push
adc
adc
data16
mov
pop
popa
cmp
add
mov
pop
add
bound
adc
jmp
pop
js
add
sub
add
sbb
dec
or
add
xor
xchg
or
or
sub
dec
inc
lock
lock
mov
out
sarl
push
push
lock
insb
jecxz
or
lods
xor
sbb
test
fcmovne
xchg
cmp
sbb
or
or
jae
outsl
adc
push
add
push
and
push
pop
lods
popa
adc
ljmp
std
sub
lea
xor
and
gs
mov
inc
mov
idivb
mov
cwtl
and
xor
mov
and
clc
sub
xor
and
scas
or
add
cmp
adc
scas
addb
push
stos
push
and
sub
leave
mov
xor
mov
call
lods
lea
push
paddb
xor
mov
sbbl
and
mov
push
mov
insb
add
mov
push
jb
adc
pushl
mov
or
jp
xor
cwtl
sbb
in
lock
push
test
dec
hlt
or
notb
jb
inc
jl
sbb
push
xor
jecxz
sbb
add
jo
add
mov
adc
push
test
cmp
add
test
and
cwtl
and
jp
cmp
lret
mov
cmp
dec
ljmp
inc
mov
stos
sbb
add
fs
pop
hlt
mov
inc
rolb
rcrb
clc
clc
das
fcomps
inc
test
and
push
cld
add
push
sahf
test
incl
test
or
pop
add
sbb
cld
call
clc
mulb
mov
add
lods
push
pop
ljmp
aaa
ss
sbb
push
fiaddl
add
dec
inc
ljmp
mov
mov
add
mov
les
shrb
add
mov
jecxz
and
test
decb
jne
xor
push
jg
pop
into
jmp
stos
cld
jno
hlt
add
mov
jp
sbb
pop
hlt
jl
or
xchg
sub
push
loopne
lsl
pop
mov
mov
addb
push
shll
scas
stos
scas
mov
jg
inc
inc
lods
and
int
push
lods
pop
data16
sub
push
push
cld
add
js
push
jo
inc
outsb
into
data16
sub
rcl
cld
add
adc
cmc
dec
out
mov
cmp
push
inc
enter
mov
and
pop
inc
pusha
mov
push
push
pusha
mov
outsl
adc
adc
or
mov
les
mov
pusha
psubsb
call
sbb
jne
lock
xor
add
jecxz
sahf
xchg
aam
cmpsl
call
ljmp
lcall
jb
in
push
jmp
pop
cld
cwtl
sbb
add
inc
lock
testb
adc
xchg
insl
dec
mov
add
outsl
xor
or
adc
xchg
stos
cmc
add
xor
adc
les
fcmove
cmc
out
cmp
mov
divb
imulb
clc
push
int3
push
inc
fdivl
fwait
call
imulb
sub
or
adc
cld
subb
push
add
fsubs
int
mov
call
xchg
and
ss
data16
sbb
adc
push
shlb
xorb
je
icebp
or
je
or
dec
ss
pop
outsb
lock
push
mov
call
xor
jae
cmp
call
rolb
mov
lods
scas
push
pop
pop
mov
add
movsb
jle
mov
or
fnsave
lret
mov
lock
or
out
push
cmpsl
mov
add
sbb
or
add
in
or
addr16
adc
incl
out
stos
addb
imul
jo
add
push
pop
pop
data16
dec
push
xchg
and
push
pop
xor
nop
in
dec
stos
xchg
mov
dec
or
test
xor
mov
pop
xchg
sub
call
adcb
in
in
sub
or
in
clc
out
xor
push
pop
repnz
out
popl
push
cmp
loopne
aaa
add
or
lea
pop
scas
dec
mov
in
inc
push
pop
pop
loopne
or
and
mov
les
mov
sarb
mov
inc
ljmp
rolb
jle
je
and
clc
aaa
inc
scas
jne
cltd
sub
add
clc
ss
jne
inc
clc
pop
and
aas
jmp
call
aam
cmp
inc
ret
stos
lock
into
pop
sbb
push
cs
lea
clc
add
lea
mov
testl
call
shlb
das
cmp
adc
sub
and
gs
cld
mov
loope
sti
cmc
mov
dec
add
push
scas
and
fdivl
lock
sarl
add
add
fidivl
jbe
add
adc
inc
jp
add
mov
adc
cld
fs
xor
cwtl
sub
cmp
mov
movsb
jecxz
and
pop
ret
incl
inc
jle
ljmp
inc
pop
outsb
addb
mov
les
or
add
inc
mov
jb
stos
cmpsb
add
inc
cs
xor
stos
inc
sub
and
pop
stos
push
dec
add
je
call
popa
and
loopne
xchg
ss
fldenv
mov
add
push
ficoml
cmp
mov
and
add
add
or
jmp
xor
sbb
mov
popf
and
inc
repnz
push
bound
ljmp
push
adc
adc
push
movsl
fadds
mull
fucomi
cmp
bound
fdivrp
jne
subb
mov
clc
call
scas
xor
mov
mov
add
mov
shr
xchg
pusha
lods
or
push
fsubr
add
dec
js
add
jge
push
jne
mov
fcoml
xor
nop
inc
xchg
fsub
sub
and
xchg
ret
repnz
pop
add
jmp
adc
movsl
jle
addr16
call
add
fs
and
lds
or
mov
ss
idivl
cmp
add
mov
add
outsb
inc
cs
hlt
pop
out
nop
aam
les
xchg
pushf
test
or
mov
call
sub
xor
clc
movsb
sbb
rorb
add
jg
sbb
mov
lock
es
inc
js
pop
and
sahf
pop
mov
push
stos
mov
call
bound
mov
inc
cli
and
pushl
push
sub
call
outsl
add
cmp
leave
loopne
pop
or
inc
mov
xor
je
cld
gs
or
loopne
jle
xchg
mov
repnz
xchg
lods
add
pusha
add
mov
lods
pop
rorb
add
or
jbe
mov
add
addb
add
sti
and
inc
notl
aas
shlb
jge
jg
add
pop
cmpsl
mov
cmpsl
lock
sbb
nop
shlb
adc
std
js
pusha
pop
cld
aas
push
mov
movsb
test
lods
pop
addb
clc
add
pop
shll
mov
dec
push
or
jbe
push
lods
mov
mov
adc
inc
orl
jne
cld
push
lods
out
pop
jne
clc
mov
rcll
cld
jl
add
lock
sub
rclb
xchg
fisubs
push
push
pusha
push
add
rorb
rorb
add
adcb
add
mov
fdivr
push
addb
out
add
fs
mov
icebp
add
scas
je
adc
add
int3
loopne
add
lahf
call
push
or
or
adcb
add
mov
mov
loopne
pushl
dec
cmc
inc
js
or
int3
sub
inc
stos
pusha
aas
popa
sbb
pusha
or
loopne
clc
bound
adc
adc
shlb
or
pop
push
mov
cmp
test
mov
pop
das
call
xchg
daa
lods
incb
in
cli
push
jbe
call
into
mov
pusha
add
loopne
orb
clc
pusha
and
push
fs
add
add
mov
push
or
adc
ljmp
loopne
loopne
popa
jno
loopne
cmpl
sti
jbe
bound
adc
xchg
ljmp
call
loope
aaa
push
pusha
cltd
or
and
or
ds
sub
dec
fcoml
enter
scas
orl
mov
sub
adc
lock
loopne
xor
and
pop
sbbl
mov
dec
sbb
pop
and
mov
into
testl
add
je
dec
jne
je
or
pop
mov
pop
icebp
pusha
test
aam
add
dec
mov
fistl
inc
dec
or
add
push
in
imul
loope
xchg
test
push
pop
aaa
lock
or
decl
stos
sub
adc
lds
cwtl
pusha
pop
adc
enter
inc
or
add
or
jl
rolb
and
outsb
inc
sbb
mov
push
dec
lods
dec
jl
call
inc
and
dec
in
xchg
lret
or
fistpl
js
push
adcb
sbb
pop
loop
fmuls
xchg
nop
std
dec
es
or
and
orb
mov
push
inc
pusha
popf
loopne
in
pop
push
sub
lock
lcall
xchg
clc
push
les
push
adc
rclb
pop
or
lock
pusha
dec
in
loopne
popa
jnp
das
out
add
inc
push
mov
cmp
data16
lods
jne
mov
mov
cwtl
pop
ja
subb
sahf
mov
mov
inc
xor
popa
cmp
cmpsb
add
add
loopne
push
test
dec
popa
cltd
stc
clc
pushl
or
test
cld
pusha
lahf
lea
lods
loopne
mov
popa
add
test
loope
rsqrtps
mov
popa
rolb
pusha
sbb
pushl
push
push
movsb
call
or
stos
mov
cmpsb
pop
or
add
xchg
push
js
sbb
pop
in
add
cli
cmp
push
mov
aad
mov
loopne
pusha
and
addl
dec
dec
mov
loopne
cmpsb
movzwl
add
stc
mov
lods
sub
add
mov
popf
cwtl
mov
and
inc
in
inc
jo
hlt
jmp
push
xor
scas
shll
dec
hlt
call
add
add
mov
pusha
or
shl
pop
xor
or
xchg
stc
sub
pop
lock
cmp
mov
jg
hlt
xor
insb
push
jne
clc
je
xor
sbb
mov
sar
inc
out
lock
and
ljmp
lds
lock
xor
push
pop
xchg
xchg
pop
rclb
int3
push
add
and
push
add
xchg
jb
inc
js
inc
out
add
lret
add
test
call
ret
push
pop
insl
repnz
call
adc
sbb
dec
and
int3
jo
add
je
call
ret
mov
inc
mov
xlat
jo
hlt
jmp
jb
mov
push
mov
push
add
adc
inc
jns
add
and
cmp
es
orl
mov
mov
xchg
cmpl
cld
test
dec
mov
or
cmp
mov
add
adc
test
imul
cmp
mov
dec
aad
outsb
aas
data16
cmp
xchg
std
xor
xor
pop
or
clc
cmpsb
mov
in
mov
add
xor
movl
inc
and
xchg
jbe
push
mov
adc
jle
loopne
push
pop
add
add
add
adc
xor
cli
mov
sub
stos
outsl
jle
mov
icebp
push
jl
clc
lcall
pusha
aaa
stos
lock
rorb
fildl
mov
adc
clc
inc
sub
mov
xchg
jle
jo
pop
adc
inc
je
adc
cld
pop
dec
fcoml
adc
and
lret
xor
xor
jo
push
add
pop
push
dec
les
pop
xchg
incl
fisubrl
and
dec
jo
push
push
bound
pop
and
add
mov
mov
mov
iret
sbb
pop
and
rcrl
push
xor
scas
mov
sub
cmp
fdivrl
lock
out
testb
fistpl
adc
aaa
sbb
ja
add
lea
mov
imulb
lock
adc
mov
jns
adc
outsl
insl
imul
pop
adc
push
inc
xchg
sbb
ljmp
cld
dec
std
rcrl
mov
addb
sbb
mov
push
test
push
mov
mov
push
mov
fildl
mov
outsb
cmp
or
pop
dec
cmp
lock
std
incl
add
jo
push
js
je
xor
mov
sbb
push
cs
xor
pop
mov
in
adc
stos
imul
inc
and
push
roll
mov
ljmp
or
in
inc
adc
adc
pop
adcl
or
mov
cld
call
add
adc
shlb
roll
lock
mov
jo
xor
call
jmp
or
sti
popa
jne
pop
mov
test
lds
lcall
xchg
push
cmp
sub
mov
orl
add
jo
pop
mov
mov
pop
inc
call
xchg
lea
sub
mov
outsl
cmpsb
mov
adc
jg
int
mov
jb
and
and
incl
mov
mov
mov
cli
jg
xchg
xor
add
xor
pop
cld
jne
push
jge
mov
xor
pop
and
or
inc
in
sbb
in
cmp
mov
or
orb
or
test
adc
jnp
and
lods
push
mov
inc
test
hlt
dec
test
lret
adc
cmpsb
fcomip
jg
addl
jb
jo
jbe
in
ss
xchg
lret
mov
push
hlt
pop
or
orb
enter
ljmp
add
daa
push
insb
mov
inc
lock
rcl
jle
pop
jge
xchg
call
pop
pushl
sbb
sub
fimuls
lcall
pusha
test
jle
and
scas
add
xor
xchg
mov
inc
or
add
std
adc
dec
mov
aam
inc
inc
les
sub
inc
sti
mov
out
mov
aas
fisttps
push
jb
iret
andl
add
lahf
out
push
in
mov
xor
cmp
adc
or
lods
sti
in
notl
mov
cmp
adc
cmp
add
inc
xor
and
pushf
xchg
mov
xor
add
add
je
adc
push
xchg
sub
nop
mov
xchg
in
fwait
or
loope
push
push
cmp
jo
push
je
fcoml
clc
pushl
sbb
inc
push
mov
repnz
scas
mov
xchg
or
jo
add
ds
mov
add
cmpsb
aaa
bound
cmp
push
fisubrl
je
clc
add
lock
sbb
shlb
call
mov
and
jge
sbb
mov
mov
mov
cmpsl
adc
mov
jg
jmp
inc
xor
pop
push
test
xchg
dec
pop
xor
enter
mov
les
test
popa
add
xor
aam
aaa
add
mov
pop
or
and
push
push
test
xor
test
nop
je
sbb
push
arpl
decl
mov
gs
cmp
cli
lock
push
jb
xor
mov
clc
les
lock
mov
and
imul
repz
mov
call
clc
rcrb
dec
adc
hlt
dec
and
or
sbb
add
xor
mov
aaa
cmpl
xor
mov
push
sub
fucomip
xchg
mov
filds
je
pop
idiv
adc
outsb
mov
cmc
call
int3
xor
jmp
divb
call
mov
mov
lock
fiadds
movsb
rorb
lea
lods
push
cmpl
ss
in
cwtl
inc
xchg
pop
jg
mov
add
jp
xorb
xchg
add
cwtl
stc
lods
lock
lock
ljmp
cli
rorb
sbb
orb
lea
fcmovnb
push
and
into
out
cmp
aaa
mov
jae
shr
ret
inc
andb
add
add
inc
loopne
fisubs
cwtl
xor
dec
ret
cmp
lods
mov
imul
add
in
flds
outsb
pop
jo
daa
dec
and
xchg
mov
inc
fmull
lcall
xor
push
cmpsb
sub
adc
sub
and
sbb
sbb
jo
lret
jg
xor
nop
xor
data16
int3
mov
mov
mov
adc
add
push
stos
mov
mov
aad
jne
fdivs
adc
jae
shll
add
push
test
jne
push
leave
mov
cwtl
insl
and
loop
stos
mov
clc
dec
fcoml
or
loop
adcb
movsb
clts
adc
sahf
cli
push
push
jge
ljmp
icebp
jl
mov
or
xor
sbb
cmc
es
pop
adc
xor
pop
jo
mov
popf
xorb
push
jbe
add
mov
testl
xor
adc
jmp
mov
lcall
mov
fadds
mov
xchg
and
fadd
add
loope
push
add
addb
push
push
pop
jmp
adc
jo
adc
xchg
mov
mov
int
dec
mov
mov
adc
xor
mov
push
inc
and
mov
enter
mov
add
xchg
add
repz
ret
out
sub
test
test
ret
and
add
xchg
imul
jb
adc
jbe
into
pop
inc
lea
shrb
mov
je
push
cmp
push
enter
roll
ret
push
cmp
mov
in
xor
xchg
push
adc
push
jmp
xchg
pop
sar
mov
jecxz
inc
shrb
add
hlt
or
sbbb
cmc
add
xor
cs
cmp
out
cmpb
adc
and
adc
das
js
cmc
daa
and
xchg
rclb
push
pop
hlt
inc
adc
rcll
rclb
enter
lds
pushf
sbb
lcall
mov
fwait
and
fsubrs
dec
push
dec
loopne
jo
sarb
add
push
fbld
push
sbb
add
mov
pop
or
adc
rorb
test
aad
popf
sbbl
jb
and
add
loope
loop
psubd
and
and
call
pop
adc
cmp
pop
or
adc
testb
mov
lods
add
and
push
lods
sub
mov
add
xchg
jne
mov
test
rolb
fdivrs
pop
and
add
cmp
mov
add
push
adc
jg
jo
loopne
xchg
xor
clc
ret
les
add
pusha
int3
adc
pop
pop
loopne
jecxz
bound
push
fimull
mov
add
xchg
loope
sahf
jp
or
loopne
pusha
dec
add
jmp
pusha
add
hlt
int3
div
loope
add
or
mov
orl
mov
add
jg
or
fimull
popa
jg
add
fwait
or
lods
aam
shlb
orb
jmp
mov
add
es
pop
inc
mov
cmp
mov
inc
xchg
loopne
lock
pop
loopne
cmpsl
test
and
loope
dec
push
add
and
test
aas
dec
outsl
std
notb
jecxz
lcall
cmp
fldenv
loop
push
loopne
adc
loope
fisttps
and
add
and
add
mov
mov
mov
adc
pop
test
test
push
mov
outsb
adcb
lods
loopne
test
insb
adc
outsl
mov
dec
xchg
mov
xchg
cmp
dec
and
dec
ljmp
adc
nop
outsl
pusha
loopne
test
or
pushf
shlb
add
add
push
sub
and
pop
popa
jbe
pop
add
add
hlt
addr16
or
inc
repz
mov
loopne
loopne
xchg
xchg
loopne
pusha
xadd
sub
outsl
or
call
jmp
andl
fisttps
es
mov
sub
pop
loop
xor
add
lock
outsb
popa
xor
mov
sub
call
mov
mov
popa
cmp
lcall
insb
jge
inc
sub
xor
mov
lods
adc
les
push
jne
je
push
jmp
ja
mov
xorb
idiv
push
sub
popa
adc
sub
je
adc
mov
and
ficomps
das
adc
xor
pusha
sbb
xor
cmp
mov
xor
hlt
pop
rclb
je
fisubrs
push
xor
sbbl
cmp
inc
in
mov
sbb
arpl
scas
sub
jmp
add
cmpsb
andl
loopne
xor
pop
xchg
jo
shlb
add
or
dec
mov
and
loopne
out
jp
xor
call
xor
out
or
imul
add
movl
inc
mov
call
cmp
add
inc
mov
adc
inc
nop
loopne
call
pop
or
aaa
fdivrl
arpl
pusha
ss
loopne
loop
loopne
scas
and
popa
nop
xor
lock
and
fisttpl
mov
add
and
pop
dec
add
jo
mov
popa
mov
dec
push
xchg
jb
sarb
dec
fbstp
push
inc
inc
pop
mov
jp
adc
jecxz
adc
add
fcoml
push
xor
push
loopne
mov
call
bound
loopne
and
out
pusha
into
std
rorb
loopne
sub
and
iret
inc
incl
cwtl
dec
mov
mov
enter
shll
push
xor
add
call
xchg
nop
fcomps
inc
mov
pop
mov
sbb
mov
aam
jnp
dec
mov
fwait
or
mov
xor
fildll
rol
pop
jo
cmp
ss
mov
mov
cmp
mov
dec
add
call
mov
push
mov
test
cli
mov
and
pop
xor
inc
add
jmp
shrl
adc
or
data16
call
adc
jge
sti
sti
mov
jo
jb
mov
ret
and
jne
aaa
lods
xor
mov
roll
xor
int
scas
cmp
shlb
fdivrl
push
dec
addr16
push
lods
sar
jecxz
mov
jno
sarb
jo
jne
and
incl
jno
fidivl
cmp
cmp
call
hlt
and
add
push
int3
or
jg
push
jecxz
in
or
jae
push
lock
or
fdivr
jo
mov
push
mov
jmp
cld
adc
or
cwtl
mov
xchg
loop
and
addr16
inc
mov
sahf
xchg
jo
jge
adc
sub
adc
fisubs
outsb
push
insb
cld
pop
mulb
leave
clc
mov
sti
cmp
add
stc
add
testb
or
mov
jns
insb
push
and
jmp
fcoms
add
jb
pop
push
push
mov
sub
call
push
pop
lock
mov
push
scas
lea
bound
aaa
xor
cli
cld
jg
dec
mov
or
ljmp
inc
mov
orb
xorb
push
jne
dec
jge
adc
aam
dec
push
inc
popa
mov
call
mov
rcrb
fsubr
jmp
xor
mov
adcb
push
jae
notb
gs
jne
or
mov
push
adc
xor
popa
roll
push
sbb
add
mov
sub
hlt
enter
addb
jo
jl
mov
jo
jmp
pushl
dec
push
xchg
lret
lock
adc
push
das
js
jbe
jmp
fcomp
pop
into
jmp
stos
pop
mov
ljmp
sbb
insb
add
ret
sar
addl
mov
lock
ljmp
xchg
add
inc
les
mov
mov
clc
ucomiss
mov
bound
add
mov
mov
xor
sub
add
nop
add
or
lea
dec
or
push
ret
jb
adc
loopne
xchg
push
mov
xor
mov
mov
push
cld
js
mov
add
mov
or
mov
or
push
jecxz
mov
cld
and
repz
lcall
shlb
mov
mov
pop
js
cmp
dec
adc
mov
mov
cli
jo
loopne
inc
fadds
fsubrl
lock
movsl
adc
aaa
inc
ljmp
jg
jb
das
lock
jno
aad
lea
xor
pop
cmpsl
mov
sbb
mov
inc
jb
mov
or
and
mov
or
or
test
xchg
jo
icebp
xor
push
sti
pushl
ja
push
inc
icebp
pop
jbe
call
xor
xor
xor
jno
roll
iret
jo
std
lods
cmp
adc
out
add
pop
jne
fsubp
inc
fildll
sbb
cmp
push
pop
in
and
pushf
cmp
jge
lock
fsubrs
add
test
and
out
orl
jbe
xor
cmc
push
mov
adc
inc
sbb
push
mov
add
mov
add
jb
xorl
push
inc
pop
xchg
jo
mov
or
dec
lock
scas
pop
cmp
nop
rclb
pusha
je
mov
stos
outsl
or
mov
call
les
push
adc
add
jb
xchg
repnz
or
lock
roll
test
lcallw
add
mov
ficoms
out
xor
fsubl
pop
stc
divl
hlt
jge
pop
dec
xor
out
clc
call
sbb
mov
or
or
lret
call
push
jle
push
jmp
leave
sbbb
rorl
sti
es
mov
inc
adc
cmp
enter
or
jg
mov
dec
mov
call
mov
lock
fimuls
cli
pop
insb
xor
sbb
add
mov
pop
jp
pop
xor
mov
mov
xor
call
and
jo
ljmp
adc
and
jo
dec
mov
push
pop
push
pop
loopne
mov
mov
es
leave
xor
inc
and
lea
cmpsl
mov
and
or
jnp
andl
push
mov
fldcw
xchg
int
mov
add
clc
fstpt
mov
cmp
fsubl
mov
aam
cmp
adc
jns
xor
add
xlat
jo
jecxz
xor
lock
jg
mov
xor
dec
and
scas
pushl
mov
adc
push
pop
icebp
jo
cmp
andb
call
mov
push
sub
add
xor
sbb
push
shll
movb
into
lods
pop
sbb
xor
jl
cmp
fistpll
mov
stos
jl
notl
jmp
or
mov
adc
push
sbbl
cmc
call
ljmp
lods
and
xor
mov
cmp
mov
addl
scas
loopne
push
clc
dec
shlb
cmp
add
das
pop
sbb
js
sti
cmp
xor
mov
ret
push
stos
xchg
fsqrt
dec
jo
adc
mov
push
fdivr
addb
andl
xor
add
and
ljmp
es
push
mov
incl
mov
add
add
xor
out
jg
incl
rcrb
movl
add
sbb
push
xor
cmpb
cmc
ljmp
call
xchg
pop
clc
or
in
enter
cmp
add
inc
aad
and
bound
arpl
add
mov
and
adc
ret
outsl
filds
incw
sub
loopne
adc
adcb
push
or
mul
jp
jbe
sbb
jecxz
add
sub
clc
inc
call
scas
pop
je
pop
ret
repz
adc
scas
imul
clc
enter
test
add
or
sub
mov
xchg
mov
subb
sahf
in
sbb
add
and
daa
daa
je
mov
ss
test
mov
call
push
test
push
xchg
jbe
xchg
add
add
int3
nop
pop
jl
test
add
ficomps
jbe
inc
or
jg
and
lret
subb
mov
das
call
or
and
popa
pop
pop
sbb
pop
inc
idivl
les
ret
lcall
dec
mov
aaa
push
call
or
push
lret
aaa
pop
mov
add
push
pop
jl
xchg
pop
mov
test
mov
mov
inc
call
xchg
jne
mov
jg
ljmp
add
insb
rclb
mov
fldt
adc
or
dec
cmp
add
add
call
rcrb
lret
and
movsb
outsb
loop
lods
jmp
mov
inc
lock
nop
inc
dec
lds
inc
jp
notl
clc
rcl
shlb
xor
mov
cmp
push
in
mov
add
xchg
jge
lcall
shlb
test
hlt
outsl
pop
je
fcoml
inc
adc
adc
jbe
push
rcll
call
pop
aam
clc
pusha
jb
push
jbe
test
cli
adc
sub
pop
cmpsb
lcall
mov
pop
jb
push
jle
mov
je
outsl
clc
adc
and
cmpsl
call
hlt
call
add
mov
or
mov
xchg
add
cwtl
adc
mov
aam
mov
ror
xor
mulb
inc
xor
fiaddl
enter
addr16
out
fisubl
verw
xchg
sbb
push
push
popa
xchg
rcrb
in
pusha
jg
roll
fwait
add
notb
sub
pushl
add
push
lea
adc
rclb
dec
dec
or
aam
mov
shl
adc
mov
jg
shll
push
mov
mov
jl
mov
xchg
push
and
inc
loopne
xchg
mov
outsl
outsl
or
mov
adc
mov
mov
mov
or
sahf
inc
xlat
push
ds
mov
mov
lcall
and
or
je
mov
sti
jnp
test
lods
test
adc
scas
inc
roll
dec
mov
sti
jl
mov
lcall
in
mov
jno
jbe
mov
or
mov
push
cmp
or
mov
mov
mov
or
push
push
fidivs
int
adc
aad
or
inc
rcrl
mov
xor
or
mov
mov
push
int
jge
mov
scas
push
int
mov
pop
mov
mov
lods
test
dec
push
mov
lcall
jecxz
out
inc
aas
bound
mov
inc
xchg
or
push
fistpll
jg
negb
daa
xor
mov
sar
jmp
cld
mov
pusha
sub
inc
dec
fldt
ret
jge
push
mov
add
hlt
or
mov
xchg
lods
loop
idivl
loopne
or
fmuls
outsl
push
inc
mov
out
mov
mov
mov
popa
mov
loopne
loopne
out
cmp
bound
jp
sbb
adc
inc
mov
push
inc
vpavgb
and
call
popa
add
dec
and
cmp
dec
fildl
shll
xor
es
push
in
loopne
decb
mov
push
sub
idivl
pop
mov
aaa
cld
outsl
dec
mov
mov
loopne
xor
fisubl
adc
pop
fwait
out
add
mov
lock
ds
daa
cmp
loop
inc
inc
xor
and
jb
lcall
add
js
add
fbld
pop
mov
add
loop
dec
mov
sub
fidivrs
in
dec
inc
bound
add
mov
popf
mov
cltd
inc
and
add
mov
push
inc
and
mov
outsl
clc
cmpsl
mov
pop
mov
pop
outsb
dec
sbbb
lock
lahf
mov
fistpll
data16
fs
inc
jle
or
mov
cmp
insb
mov
inc
cltd
arpl
mov
ss
je
ss
mov
pop
and
cmp
mov
das
xchg
negb
jecxz
cltd
sbbl
push
std
sar
jl
jnp
mov
lea
jo
sbb
xor
mov
jb
inc
lea
data16
mov
mov
shrw
or
xor
test
cmp
mov
jl
mov
decb
jecxz
xchg
sbb
repnz
jl
in
mov
clc
lock
lock
add
jo
mov
cld
add
add
push
push
scas
daa
xorb
gs
jae
add
and
sub
cmpb
xor
push
mov
xor
push
inc
pop
add
enter
jo
lea
test
lcall
stos
loope
xchg
add
mov
mov
push
xor
and
or
jmp
fwait
or
jno
pop
lds
jle
ret
cmpsl
sub
out
test
add
lock
push
dec
outsl
mov
sub
incl
incb
into
jo
mov
mov
insl
mov
insb
and
mov
mov
lcall
enter
and
mov
pushl
add
lock
scas
push
push
test
mov
ss
dec
je
mov
cmpsl
mov
mov
add
mov
incl
jmp
push
mov
mov
aaa
add
add
call
aaa
pop
xchg
mov
push
in
sarb
or
cmp
aaa
add
mov
insb
sbb
add
jb
ljmp
lock
and
xor
inc
cld
icebp
or
aam
fisttps
mov
fstpt
jb
jmp
std
inc
inc
lock
test
das
aam
push
sub
jle
add
je
cld
cmp
sarb
data16
pop
call
mov
mov
lea
inc
hlt
pop
js
add
data16
pusha
xor
pop
jl
xor
or
jl
aam
fs
lock
and
ss
mov
scas
call
xor
jmp
cmp
adc
sub
incl
roll
fsubl
mov
add
pop
dec
ljmp
andl
jno
add
mov
push
adc
push
hlt
jnp
dec
pop
push
testl
add
or
and
push
notl
stos
fdiv
mov
xchg
pushf
lock
dec
dec
xor
or
pop
xchg
shl
inc
aad
lods
mov
adc
arpl
inc
dec
std
call
mov
test
lock
pop
push
jmp
push
jl
rolb
lods
or
ss
xor
xor
xor
data16
push
push
xor
rolb
mov
icebp
pop
loopne
in
dec
xchg
pop
xor
and
push
inc
xor
enter
and
dec
inc
xor
inc
sbb
lods
add
add
outsb
fnstenv
jne
dec
cmpl
push
xor
lret
xor
mov
and
pop
imul
lock
movaps
xchg
or
push
lds
pop
cmpsl
push
fbstp
cmp
rcrl
mov
jo
in
xor
sahf
inc
cmpsl
outsl
mov
sub
rorl
adc
mov
jmp
out
rclb
clc
inc
ret
mov
and
mov
lcall
jne
mov
add
dec
repz
jl
or
lret
cmpsb
add
sbb
pop
les
lret
cltd
mov
stos
adc
ds
adc
out
jne
clc
lcall
rep
ret
push
xchg
or
pusha
icebp
or
lock
add
cmp
mov
push
add
jle
cwtl
add
sub
or
fchs
cmp
jne
data16
inc
add
add
xor
int3
inc
cltd
xor
aas
call
dec
sub
adc
movsb
cmp
cmp
jp
data16
aam
dec
and
xor
movzwl
or
clc
js
add
js
std
incl
call
cmp
add
mov
pop
push
fcmovu
not
pop
add
je
jbe
data16
je
int3
fdivr
fildl
or
add
stc
sub
fistpll
jmp
data16
ja
imul
enter
push
rolb
push
sub
mov
data16
lods
dec
add
aaa
inc
rolb
fidivs
mov
js
xchg
imul
test
ds
sti
ljmp
mov
mov
add
adc
push
push
add
mov
pop
mov
addb
ja
lock
xor
cli
sub
inc
leave
add
divb
jo
mov
xor
mov
mov
jg
js
test
in
or
xor
adc
ret
xor
inc
lret
aas
push
jg
pop
sub
dec
add
pop
add
enter
xchg
mov
shlb
leave
jb
sarb
sbb
jge
jnp
mov
mov
je
testl
adc
test
pop
or
pop
push
mov
mov
add
add
mov
cli
jle
sar
xchg
jmp
sub
mov
push
je
loopne
movsb
mov
inc
xor
push
inc
sbb
mov
push
and
adc
dec
mov
push
test
sub
mov
xor
mov
inc
cmp
ret
jmp
jmp
xor
ret
adc
push
ja
popa
lcall
add
rcrl
lock
inc
and
mov
mov
mov
add
and
adc
fcoms
enter
int3
jbe
mov
rol
stos
xor
sbb
incl
roll
rolb
adc
xchg
dec
outsl
add
stos
or
pop
sbb
mov
mov
hlt
mov
shl
or
addb
jne
cmp
stos
cli
xchg
mov
inc
clc
inc
sti
mov
or
pop
rcrb
test
add
aam
mov
dec
add
inc
pop
adc
jb
sub
mov
add
dec
je
mov
add
and
outsb
push
dec
inc
pop
rcrl
or
jo
outsl
or
jl
fidivl
stos
test
jns
xor
orb
dec
mov
dec
stos
mov
subl
and
jg
mov
add
and
stc
lea
nop
std
push
mov
ret
cltd
lods
jmp
addr16
pop
xor
je
add
mov
jg
sbb
add
adc
repnz
add
jb
cld
clc
lock
aaa
shr
shl
and
inc
add
or
and
xor
out
add
out
clc
in
jg
call
cmp
jnp
sbb
mov
push
cld
inc
inc
xchg
pop
or
or
jge
jmp
addb
and
fdivs
add
into
jge
pusha
cmp
jle
or
ret
addb
lahf
add
push
or
lock
cld
jp
andl
imul
and
int3
lock
jbe
repz
add
testl
adc
std
lods
sbb
dec
and
mov
in
les
jl
and
jbe
fwait
sbb
jb
and
pop
push
lock
cld
sbb
jbe
je
sub
lcall
jl
cmp
inc
pop
pop
cmp
sub
roll
add
pop
nop
aas
das
adc
xor
cmpl
add
add
add
mov
ja
lret
sbb
dec
add
test
jmp
sub
add
es
in
lods
or
push
clc
stos
out
mov
cmpsb
pop
xchg
mov
in
ud0
fidivrs
test
dec
cmpb
xorb
jmp
lcall
outsb
es
xchg
adcb
adcl
xorb
testb
es
mov
jge
pushf
push
add
enter
pop
sub
push
jecxz
xlat
movsb
xchg
lods
sbb
lret
add
gs
call
fidivl
xchg
pushf
shlb
sbb
test
add
leave
cli
add
test
insb
rclb
pop
addb
add
adc
fdivr
push
add
push
add
addr16
test
sub
lds
xor
pop
in
add
or
push
xchg
lret
add
test
out
je
push
cld
pop
loope
mov
ret
dec
and
push
adc
enter
xor
add
sub
sub
inc
orl
js
or
sub
adc
fs
out
adc
push
fidivrl
inc
sbb
sub
lds
scas
inc
inc
clc
or
shll
int3
popa
mov
jl
push
arpl
jbe
bound
sarb
sbb
aad
arpl
or
loope
adc
mov
in
sub
loopne
dec
and
xor
mov
filds
jl
jmp
and
pop
hlt
sahf
push
pop
inc
outsb
mov
pop
mov
push
pop
popf
in
jb
mov
lcall
push
adc
pause
movl
rclb
pop
sbb
loop,pt
ds
out
sub
aaa
jne
add
adc
mov
scas
adc
mov
adc
cmpsl
cmp
or
ror
insl
xchg
lock
adc
rorb
inc
xchg
shlb
xchg
cmp
call
and
lcall
rclb
inc
or
cli
rcrb
test
cwtl
mov
and
test
loope
inc
sbb
out
adc
sti
ret
xchg
inc
dec
add
xchg
push
and
rorl
push
inc
lmsw
sub
out
or
test
xchg
fisttps
movsl
lock
scas
test
pop
ret
cli
add
dec
mov
mov
je
into
dec
cld
out
adc
ja
dec
and
icebp
leave
movsl
andb
mov
push
mov
mov
jnp
sbb
adc
sbb
shrb
mov
adc
out
jns
add
sbb
add
add
cli
pusha
dec
inc
push
inc
imulb
cli
push
sbb
out
push
xor
sub
jmp
xorb
loopne
inc
jl
loopne
cmp
test
lods
mov
mov
sbb
lods
jg
lock
adc
jae
cwtl
xchg
adc
pusha
pop
loopne
cmp
mov
bound
add
pusha
push
in
add
adc
xor
in
push
lcall
sub
inc
cmp
push
pop
js
incl
clc
cmpsb
lcall
test
test
lcall
xchg
mov
xchg
bound
jp
jmp
sub
inc
cld
inc
fstp
cmc
lea
sub
ss
and
cs
jb
popa
add
sub
aaa
push
std
in
nop
stos
push
or
andb
or
push
cli
cmp
pusha
add
jle
xchg
xchg
cltd
and
sbb
mov
mov
test
sub
pusha
jns
lea
stos
inc
cld
push
push
pop
jae
fsubrl
add
ljmp
xor
jns
jmp
loopne
add
push
push
jle,pn
sar
ds
jge
jbe
lock
push
dec
sbb
push
aas
test
jne
fs
sub
inc
and
mov
jne,pt
mov
pop
mov
cmp
xchg
add
add
rcrb
stos
mov
mov
cltd
pop
or
xchg
outsl
loopne
jb
add
addl
xor
mov
sbb
pop
add
loope
or
add
scas
insl
fildl
test
inc
push
pop
sbb
jecxz
pop
cmc
sub
sbb
push
add
push
call
loopne
jp
and
mov
push
add
clc
sbb
lds
mov
enter
sbb
xlat
ss
daa
xor
call
ss
xchg
lret
repz
loope
orl
and
mov
add
divl
ds
cmpsb
fildl
push
loop
jb
add
mov
push
mov
xchg
shll
xor
mov
mov
mov
aas
hlt
roll
cmp
loopne
pop
orb
or
cmp
rcr
loopne
mov
mov
and
sti
mov
loope
dec
jecxz
inc
adc
pop
fsubrs
cs
lock
cmpsb
ss
and
sbb
pop
or
test
aaa
in
adc
dec
pop
movsb
add
mov
cld
ljmp
xchg
dec
add
or
aaa
lea
and
jno
dec
cmp
adc
or
pusha
arpl
cs
mov
icebp
mov
adc
adc
or
cmp
dec
rorb
test
add
das
add
testb
pusha
fimuls
pusha
cmp
sbb
mov
push
pop
xorb
pcmpeqd
or
or
mov
mov
mov
cld
jg
insb
shll
in
adc
mov
add
add
pop
mov
outsb
lock
test
loope
jmp
cmp
jl
incb
mov
jo
sbb
sub
inc
sbb
inc
push
mov
and
testl
xchg
lock
fwait
out
cmp
and
cmpl
or
pop
mov
decl
lcall
std
je
mov
cmp
mov
pop
xchg
invd
test
mov
mov
mov
lock
movsl
xchg
pop
mov
jle
js
mov
call
daa
test
mov
adc
dec
inc
jecxz
enter
subb
icebp
mov
sub
mov
call
mov
mov
ror
and
jle
js
add
sahf
jo
into
push
sbb
ja
sbb
cmpb
daa
jmp
mov
fcmovnu
mov
sbb
push
mov
xchg
bnd
mov
ljmp
add
push
rolb
into
mov
sbb
jnp
outsl
into
adc
xchg
jne
mov
add
jg
add
inc
add
pusha
xchg
jno
and
enter
sbb
gs
xor
jle
popa
lock
testb
xor
loopne
bound
fwait
xor
fcoms
fidivrl
clc
call
shlb
or
sub
and
xor
js
dec
jecxz
outsl
push
mov
sarb
sub
in
xor
fcmovne
mov
lds
js
or
jmp
ret
mov
test
jo
sbb
xchg
pusha
clc
xor
xor
cmp
and
orb
mov
jne
loope
mov
add
cmp
push
dec
push
mov
or
sbb
out
inc
ss
inc
divb
xorl
cmp
pop
rclb
jne
push
mov
xor
ret
pop
adc
leave
adc
mov
xchg
lea
adc
xor
outsl
mov
ds
mov
jb
cltd
push
mov
adc
xor
mov
cmp
pshufw
pop
rcll
push
dec
add
sub
push
add
mov
inc
lock
fucomi
mov
ret
adc
cld
add
cmp
sub
or
xchg
mov
sbb
mov
sbb
cmp
scas
cmp
ljmp
push
ret
sbb
fwait
pusha
repnz
mov
or
repz
hlt
or
lock
inc
pop
lock
or
ret
cmpb
lock
mov
mov
in
icebp
or
cmp
and
mov
hlt
lcall
mov
shll
xchg
hlt
pop
jmp
incl
or
inc
or
or
mov
cld
mov
mov
mov
or
push
jmp
das
xchg
push
ficompl
cmp
mov
add
jbe
add
orl
cli
filds
idiv
or
mov
add
jl
sbb
add
mov
adc
mov
sbb
add
pusha
or
sbb
xor
cmpsb
jbe
andb
add
mov
into
jmp
xchg
xchg
or
call
and
cli
jo
dec
cld
mov
fdiv
cltd
mov
mov
adc
aas
and
aad
cwtl
and
mov
ret
mov
cmpl
push
lock
lods
shrb
mov
clc
notb
fwait
add
and
in
pop
mov
mov
adc
adc
jg
mov
ja
xor
inc
icebp
pop
orb
inc
cld
mov
add
and
test
outsl
jo
cmp
jnp
xor
dec
xor
imul
add
lock
jl
adc
aam
and
lcall
rolb
fdivrs
stos
aam
push
mov
cmp
push
sub
testb
add
or
or
xor
or
jg
shl
ret
xor
call
xor
ret
pop
add
cmp
xor
pop
jg
loop
addb
jne
add
mov
enter
mov
mov
jp
xor
adc
add
dec
adc
sub
add
mov
jg
lds
inc
inc
fs
jb
test
nop
jo
mov
int3
test
or
push
xchg
add
add
xor
fbld
dec
xor
mov
icebp
fwait
lock
adc
pop
jne
js
orl
xchg
cmp
add
mov
dec
roll
pop
mov
or
fidivl
xor
mov
mov
into
into
pop
mov
sti
push
jg
jno
stos
shll
jo
adc
nop
add
nop
cmp
inc
mov
mov
mov
push
hlt
jl
movl
or
add
loope
mov
filds
mov
push
inc
mov
xor
jo
xor
lock
mov
add
sub
pop
sarb
add
cmp
jl
adcl
movsb
and
mov
inc
test
popa
add
je
mov
je
or
sbb
sbb
ret
in
mov
test
pop
push
xor
dec
ja
clc
mov
leave
and
xchg
out
lea
test
lret
je
mov
outsl
xchg
adc
pop
pop
cwtl
addr16
adc
push
stos
in
jl
test
inc
lea
jl
and
inc
jb
ret
das
fdiv
pop
lock
jo
int3
or
dec
xor
add
pushl
mov
flds
icebp
test
jo
mov
sub
xor
or
rolb
ret
enter
add
cld
jmp
push
sbbl
test
mov
add
mov
lret
jno
cmp
mov
xor
enter
adc
inc
shl
jo
rcll
mov
testl
xor
and
dec
adc
xor
shr
fadds
les
test
mov
jge
std
cmp
add
pop
inc
and
out
adc
fwait
and
xor
cmp
lea
mov
cmp
add
ss
sahf
add
lcall
mov
xor
or
dec
dec
pop
stos
jbe
jb
add
bound
data16
je,pt
mov
mov
movsb
pop
test
jb
mov
pushf
add
test
mov
jmp
pusha
outsl
add
into
mov
leave
cmp
lods
or
jo
push
sub
pop
dec
lock
add
sbb
dec
add
add
ljmp
mov
call
incl
les
pop
add
add
cs
inc
xor
xchg
mov
sbb
dec
xor
adc
dec
or
roll
sub
pop
bound
push
mov
pop
mov
aaa
mov
sub
int
ret
xchg
adcb
add
jbe
xchg
mov
xorl
fnsave
add
cld
sub
cmpb
mov
mov
in
pop
pop
hlt
jne
add
sbb
cmp
and
sbb
xchg
sar
mov
xor
fmuls
mov
xorb
rcrl
cld
add
cld
nop
mov
add
jg
enter
std
les
in
sbb
adc
adc
xor
js
jmp
pushl
push
push
cmp
andl
and
popa
stc
movsl
add
andl
mov
andl
in
push
pop
adc
xlat
adc
jg
popa
fsubr
or
jge
shll
addl
rolb
inc
into
add
adc
js
ljmp
fildl
bound
icebp
push
jbe
pop
dec
orl
push
and
fidivs
sbb
shr
cmp
lock
pop
inc
fildl
xchg
subb
push
push
rcr
xor
sbb
jo
insl
or
dec
mov
sbb
sbb
or
sarb
sub
lahf
test
push
aas
in
and
inc
sbb
lods
xor
test
shrb
outsl
outsl
mov
cmp
or
push
rorb
pop
inc
lea
jae
fisubl
add
mov
hlt
or
pop
add
push
mov
ret
add
or
je
push
ret
cmp
int3
add
xor
and
arpl
cwtl
mov
mov
shrb
xor
mov
adc
shrl
lds
lock
jmp
out
pop
mov
cld
ja
mov
or
add
dec
add
mov
mov
rolb
adc
movsb
xchg
jecxz
sub
hlt
in
rcrb
incb
dec
fiadds
add
stos
call
inc
add
add
std
and
inc
add
outsl
adc
or
or
inc
cmp
test
cli
adc
test
icebp
or
mov
cld
aad
shr
scas
les
pop
cli
pushf
mov
outsw
lretw
lret
jge
rclb
xor
sti
add
in
orps
je
add
inc
add
jno
mov
sub
inc
fimuls
push
fsubrs
sub
adc
pusha
pop
lock
adc
mov
notb
je
add
test
loopne
and
and
call
in
add
lcall
aad
pop
inc
cmp
add
loopne
mov
scas
add
jmp
push
test
inc
xchg
andb
stc
jl
pop
jno
adc
test
jmp
shl
or
repz
and
xor
mov
movsb
cs
ljmp
imul
in
outsl
mov
or
jmp
loopne
dec
loopne
loopne
or
inc
int
mov
subl
aaa
cmc
hlt
enter
popa
insl
push
jecxz
push
add
mov
lahf
test
add
mov
cmpb
jns
cld
adc
test
in
ljmp
arpl
and
pusha
pop
inc
jmp
jecxz
jmp
popa
loopne
dec
popa
xchg
jecxz
cmp
loop
dec
add
push
fdivl
mov
lea
loopne
ret
mov
loopne
loopne
and
faddl
sbb
fsts
mov
or
jno
adc
dec
pusha
add
mov
cmp
add
test
mov
pop
cs
sub
add
jmp
dec
ret
mov
rcl
rorl
mov
insb
jl
inc
inc
cmc
fisubrl
dec
lock
stos
xlat
fcomp
mov
pusha
nop
mov
call
loope
push
repz
push
fimull
cmp
add
sbbb
push
out
mov
repz
dec
stos
and
pop
dec
inc
jbe
mov
fimuls
add
outsl
je
test
fimull
xchg
cmp
pusha
add
pusha
sub
mov
lock
pop
add
add
inc
jl
or
mov
rolb
adc
or
cli
test
jp
repz
sbb
pusha
loopne
bound
ljmp
rorb
mov
pusha
mov
or
jmp
cs
jl
and
sbb
or
pusha
pushf
pop
inc
sti
and
jle
in
inc
dec
into
and
or
or
lock
xchg
loopne
jle
mov
mov
scas
clc
mov
inc
jle
lods
push
and
or
loopne
add
mov
mov
orb
test
cmp
add
fcom
push
loopne
pusha
jmp
adc
mov
adc
push
mov
call
mov
push
pushf
insb
or
rclb
mov
dec
in
decl
or
xchg
pusha
aas
loope
cmp
or
push
or
adc
push
add
mov
test
mov
fsts
sbb
push
mov
testb
insb
push
fnsave
push
sti
inc
jge
ja
shl
sbb
fiaddl
jnp
cmp
add
jg
xchg
dec
sahf
stos
mov
jb
jg
jl
rorb
jg
or
cmp
cs
sbb
scas
mov
fdivrl
icebp
mov
lock
jle
add
xor
fistpll
sarb
shr
add
xor
mov
or
mov
mov
xchg
and
lock
jmp
jle
fldenv
ja,pn
std
pushl
push
jnp
in
sub
xchg
xor
mov
test
vmread
adc
and
xchg
push
inc
ljmp
add
or
jge
mov
cmp
add
movsl
lcall
push
jbe
mov
lea
aad
decb
dec
jne
add
sbb
ja
mov
cmp
rolb
push
je
add
bound
add
es
mov
sub
add
je
insb
mov
sub
idiv
sbb
fs
jnp
jnp
imul
in
ret
xor
or
sub
jnp
sbb
es
push
xor
pop
fisubl
jb
sarl
inc
decl
push
fmuls
mov
jo
or
cmp
cmp
xchg
clc
add
add
sub
pushl
pop
push
or
je
jne
outsb
jo
xorl
test
mov
or
popf
mov
mov
pop
ljmp
cmp
inc
int
pop
add
xor
mov
xor
jl
xor
jo
dec
add
push
scas
and
fistpl
or
pop
lock
lock
jg
inc
les
jo
mov
andl
pushf
adc
push
mov
or
jns
jmp
or
add
mov
std
dec
lock
or
mov
aam
inc
xor
mov
lods
loope
lret
xchg
xor
or
xor
insl
lds
xor
je
push
mov
into
jmp
jo
mov
jne
pop
inc
mov
push
xor
fisubs
scas
push
and
sbb
aaa
fstl
dec
dec
adc
push
rorl
mov
add
fimuls
idiv
adc
sub
xor
lock
push
adc
xor
jo
adc
int3
test
xor
push
ljmp
mov
std
xor
movsb
mov
bnd
mov
mov
lods
std
inc
push
mov
mov
popa
jbe
out
ljmp
xchg
or
sahf
pop
sub
push
adc
cld
jg
pusha
bound
inc
or
popf
add
or
adc
mov
vshufps
je
jmp
mov
push
inc
jae
lret
lcall
cmp
lock
cmp
jl
movl
or
pop
rorb
and
add
xor
es
incl
jne
mov
nop
call
sbb
xlat
and
mov
hlt
lea
icebp
lea
adc
mov
stos
or
cmpsl
pop
mov
mov
fs
jg
cmp
idivb
jge
add
jne
pop
outsl
jp
pop
mov
call
inc
push
mov
stc
or
lock
add
mov
pop
loopne
icebp
jne
icebp
call
and
and
aam
dec
and
push
push
adc
scas
push
hlt
xchg
call
loopne
mov
or
add
ret
xchg
adc
es
push
jo
xchg
jmp
test
xor
mov
subb
inc
push
dec
lea
jne
mov
xchg
sahf
xor
push
mov
cmpb
pop
push
dec
aam
cltd
add
cmp
shr
xchg
mov
clc
sar
loop
jmp
push
adc
or
pop
add
or
inc
jo
mov
mov
dec
mov
addl
mov
test
inc
mov
jns
push
ljmp
add
mov
mov
mov
push
mov
call
cld
xlat
jno
jno
jb
add
decl
sub
call
mov
push
lcall
mov
les
mov
ss
mov
lock
incl
mov
xor
cmp
xor
add
or
jecxz
jecxz
push
imul
add
jmp
pop
push
incb
jns
cmp
mov
sbb
xor
xor
lock
les
inc
jmp
add
scas
ljmp
and
fcomip
sbb
inc
sbb
or
ljmp
pop
ss
repz
cmc
and
add
push
inc
cld
mov
in
mov
insl
adc
sbb
and
ljmp
sbb
icebp
add
loope
fdivp
stos
mov
dec
push
sbb
in
mov
cltd
mov
stc
sbb
sbb
icebp
push
ror
mov
fwait
xor
add
outsl
ficomps
cwtl
inc
push
outsl
lcall
jmp
or
loope
mov
dec
jl
add
mov
sub
sbb
mov
sub
sti
mov
push
mov
pop
or
dec
add
dec
ja
push
test
jb
mov
add
shr
xor
pop
add
je
jno
and
arpl
sub
mov
in
add
call
fadds
xchg
inc
filds
jno
imul
push
ret
lcall
loopne
push
mov
stos
mov
inc
jbe
adc
mov
adc
or
jbe
adc
dec
adc
sub
hlt
add
clc
jbe
mov
cmp
sbb
dec
sub
mov
loopne
clc
das
and
xchg
push
addb
addb
xor
xor
rcrb
mov
orl
fldl
icebp
call
cmp
std
scas
dec
pop
je
lock
mov
divl
fdivrl
jge
std
or
dec
mov
mov
jle
shlb
dec
or
ret
movsb
mov
or
pop
shl
mov
add
mov
cld
sarl
fsubrp
xlat
pop
inc
mov
jmp
dec
add
cmp
jbe
inc
add
or
loop
outsl
idivb
cmpl
xor
mov
inc
adc
test
lods
pop
cmp
orb
pxor
add
jmp
mov
jo
adc
dec
cwtl
or
jbe
lock
jbe
push
cmpl
test
jbe
fsubr
add
dec
add
in
adc
add
popa
in
xor
sbb
mov
ret
sarb
ljmp
push
and
adcb
pop
test
mov
sbb
imul
ret
test
sbb
cld
subb
rorb
ret
pop
cli
mov
xchg
rolb
and
and
and
sbb
shrb
shlb
adc
enter
dec
push
or
mov
inc
mov
mov
fcoml
incb
shlb
cs
push
out
mov
and
out
aaa
and
fadd
push
mov
ret
add
jae
ret
clc
rorl
lds
or
fs
out
sbb
stos
adc
mov
jl
adc
jmp
repnz
movsb
add
je
cmp
stos
mov
adc
addb
stos
inc
clc
pop
repnz
add
pop
shlb
adc
add
push
dec
inc
push
jo
jp
movb
shll
push
cwtl
sbb
xlat
call
and
xor
dec
adc
or
jmp
add
rcrl
rcr
aaa
jge
add
mov
or
outsl
mov
arpl
shll
jb
clc
push
into
adc
inc
pop
jl
xchg
add
jl
add
or
andb
in
sub
std
add
pop
push
pop
xor
inc
leave
imul
addl
mov
jno
sub
and
adc
adc
outsl
data16
outsl
lock
jg
inc
sub
js
cld
mov
jmp
mov
jl
leave
push
out
in
ja
andb
and
add
mov
ss
and
pusha
subb
das
pop
cmp
push
std
bound
clc
ret
in
mov
int3
add
and
scas
add
dec
enter
and
and
pop
call
add
mov
loopne
ljmp
inc
sub
dec
push
xorb
flds
bound
adcb
add
aam
dec
test
mov
call
out
mov
add
mov
test
out
aas
call
inc
sub
mov
xchg
push
jbe
mov
mov
sbb
lock
sbb
push
subb
andb
dec
es
aas
and
adc
sub
shrb
loopne
inc
adcl
cmpsb
jnp
pusha
sbb
inc
fs
cli
jmp
fisubl
lock
mov
mov
mov
clc
or
fchs
sbb
jbe
inc
push
icebp
jmp
adc
in
xchg
popa
add
fwait
loopne
popa
sbb
test
cmp
mov
js
and
inc
push
fsubs
loopne
or
cmp
pop
fs
loop
scas
jmp
mov
lea
subl
mov
or
dec
jp
loopne
jp
push
fsubs
mov
lock
add
pushl
arpl
loopne
fs
pusha
pop
popa
cmp
xor
loopne
lock
cmp
and
jecxz
popa
cmpsb
loopne
xchg
add
insl
popa
pop
lret
push
popa
sub
jmp
out
popa
jb
loop
sub
and
mov
and
test
ss
shlb
and
xor
sbbb
pop
test
mul
mov
lods
fs
jmp
xchg
add
push
lcall
loope
jecxz
and
mov
mov
xor
call
cmp
and
or
adc
pop
mov
pop
orb
scas
imul
lret
xchg
and
ja
sbb
or
jne
or
sub
mov
mov
pusha
lock
mov
push
lcall
ja
fisttpl
mov
inc
adc
test
and
and
mov
adc
push
add
sbb
mov
ljmp
movb
and
or
lods
add
adc
add
mov
insb
gs
jmp
push
mov
pop
test
lods
pop
and
and
pusha
ret
jmp
add
jo
stos
jbe
and
mov
lcall
mov
pop
or
test
adc
ljmp
mov
xchg
into
and
sti
subb
orb
adc
adc
adc
mulb
or
jmp
inc
sub
mov
inc
testb
sbb
inc
call
pop
or
aas
pop
lock
xor
sub
test
jge
lret
nop
jmp
push
pop
mov
push
mov
rolb
test
push
fstp
movsl
push
or
add
mov
push
aaa
aaa
lods
insl
lods
or
push
push
dec
add
pop
mov
insl
pop
andl
cmp
xor
gs
cmp
adc
or
fcmovne
add
sub
jl
cmp
jbe
shlb
in
add
push
popa
push
push
push
aaa
jns
push
outsb
add
test
dec
sub
add
cmp
cld
aam
cmpsb
mov
pop
inc
pop
loop
cltd
fstpt
sahf
mov
add
ja
mov
mov
push
cwtl
xor
int
push
data16
xlat
js
jae
fdivs
add
and
dec
push
cmp
sbb
int
add
adc
dec
jb
xor
cltd
aam
test
xor
fiaddl
mov
cs
jp
dec
lcall
sahf
and
add
or
add
push
xchg
mov
dec
mov
or
lea
adc
push
call
sub
sbb
push
pop
and
sbb
fisubs
std
mov
in
and
and
xlat
add
sub
sub
sub
and
dec
pusha
pop
aad
jl
xor
jl
xor
int3
xor
dec
cld
negb
ss
cmp
les
cmp
cs
testb
inc
inc
clc
inc
dec
nop
adc
mov
push
rorb
lcall
inc
sbb
js
ja
seto
push
xor
addb
fidivl
add
fisubrl
scas
pop
cs
adc
or
fmull
add
inc
test
inc
pop
cmp
inc
rclb
rcl
pcmpeqd
roll
push
mov
push
mov
cmp
inc
push
mov
cmp
testb
cmp
mov
pushl
dec
and
decl
lock
pop
js
adc
jl
jo
ljmp
dec
mov
add
in
int3
mov
or
outsl
pop
sbb
cli
or
jmp
push
sahf
and
loop,pn
divb
lret
xor
sbb
dec
sbb
push
mov
cmp
push
add
adc
push
cmpsl
mov
mov
inc
out
mov
outsl
fwait
dec
mov
and
mov
add
sbb
add
dec
dec
cwtl
sub
xor
orb
jb
aad
cli
mov
xor
inc
addl
push
mov
popf
les
popf
clc
cmp
lock
lods
pop
loop
sbb
inc
sub
add
xor
outsb
adc
sbb
mov
dec
inc
and
pushf
sarb
sbb
xor
mov
jmp
repnz
sbb
or
push
enter
add
cld
jg
push
lods
shll
push
stos
mov
fcoms
les
add
pop
lods
decl
fmull
popl
or
mov
or
adc
mov
test
call
adcl
into
push
out
adc
jp
mov
ret
push
adc
mov
test
ret
dec
or
jno
pusha
clc
int
add
inc
or
call
js
fstl
push
test
test
imul
pop
mov
sete
pushf
push
add
xchg
loop
sub
add
adc
xor
pushl
push
xor
fbstp
mov
stos
cmpb
jge
adc
mov
ret
call
push
ret
push
je
push
jmp
mov
jmp
lock
aaa
pop
divb
mov
fsubr
lock
mov
mov
inc
push
fnstenv
xor
adc
mov
and
je
xchg
push
inc
mov
inc
add
lods
iret
or
inc
pushl
fcoms
insl
inc
movsb
pop
fs
xor
adc
mov
shl
data16
insl
jp
je,pn
stc
imull
inc
cmp
mov
scas
add
mov
dec
push
loop
push
lods
add
add
adc
stc
mov
and
adc
inc
mov
ja
dec
xor
je
idivb
jmp
clc
push
jmp
mov
test
sbb
add
and
decl
cmpsb
add
stc
jo
adc
add
pop
std
cmp
je
sbb
pop
idiv
enter
jns
imulb
test
iret
ds
ljmp
adc
jo
mov
sbb
movl
fs
inc
or
xchg
and
fistpll
cmp
ljmp
pusha
les
lods
es
mov
mov
outsb
add
std
addb
xor
add
mov
xor
push
xor
roll
inc
shrl
jmp
loopne
add
repnz
into
inc
cld
decl
cmp
jae
testb
mulb
inc
decl
lock
or
and
orl
decb
pop
sti
inc
fdivs
pushf
push
and
das
push
add
or
push
inc
push
xor
call
pushf
imul
jo
jo
and
inc
mov
test
pop
adc
andl
push
je
add
scas
cmp
adc
push
jo
mov
popf
and
xchg
stc
mov
iret
mov
jmp
lods
mov
shll
lods
das
inc
add
subb
or
sbb
cli
jg
add
loopne
jae
mov
adc
lea
and
cli
pop
mov
cmpsb
and
mov
jo
xor
adc
ljmp
xor
cmpb
mov
mov
lds
jl
xor
inc
imul
push
add
into
mov
push
mov
cld
xlat
jbe
or
incb
inc
test
xor
jo
jl
add
push
or
xor
ds
jno
sub
sbb
push
jo
cmp
les
fwait
add
mov
mov
xor
jmp
mov
jo
mov
mov
bound
xchg
jmp
ret
enter
jmp
add
subb
daa
out
sub
stos
sbb
lock
lea
sbb
add
or
mov
push
adc
lret
mov
cwtl
and
inc
or
push
sub
pop
cld
sub
shrl
cmp
loopne
or
adc
xchg
add
fadd
push
mov
inc
add
dec
or
lcall
adc
mov
jo
add
xchg
push
ljmp
stos
dec
jg
mov
jge
push
in
jne
or
mov
mov
je
push
cvtps2pd
cmp
dec
add
loopne
inc
bound
les
int3
jbe
push
or
sbb
lock
push
leave
mov
inc
mov
mov
incl
sbb
adc
add
dec
or
push
sbb
adc
jg
jb
jmp
dec
add
add
insb
add
push
out
ret
mov
mov
cld
push
add
add
cmpsl
orb
push
cli
fcomip
xchg
fiadds
mov
mov
call
cli
or
adc
xchg
movsb
je
xor
xchg
js
in
cmpsb
cwtl
rorb
dec
sahf
in
sbb
sub
test
shrb
xchg
xor
je
jle
ss
pop
dec
add
sub
cmpsl
addb
mov
push
xor
subl
pop
movb
loope
jge
cmp
jae
mov
es
mov
scas
adc
adc
mov
ficoms
mov
bound
and
jne
sbbb
insb
clc
cmp
adc
mov
or
cmp
inc
rorl
lcall
sbb
cmp
push
jg
or
clc
sbb
sub
add
adc
pop
je
inc
xorb
stc
add
je
jo
add
inc
sti
inc
pop
gs
fwait
ds
xor
adc
fcoml
es
je
lahf
cmp
sbb
cmp
jge
push
es
sub
add
ljmp
hlt
cmpsl
bound
and
jmp
push
in
add
call
mov
dec
cmp
cwtl
cmc
mov
push
mov
mov
jmp
data16
push
add
mov
lock
lods
mov
incb
andl
dec
clc
push
adc
cmc
shlb
and
sbb
push
cltd
mov
mov
inc
sbb
in
mov
jne
jle
movl
sub
mov
xor
push
popa
or
into
add
or
add
pushf
add
sbb
lock
sub
adc
jl
push
add
adcb
cmpsl
daa
ret
push
jbe
stos
add
push
push
outsw
add
or
les
lea
imul
or
pop
mov
shrl
cld
jmp
sti
adc
inc
scas
aaa
and
pop
pop
jg
test
cmpb
adc
mov
mov
or
sbb
pop
inc
inc
xchg
pusha
inc
fsubrs
fidivs
push
roll
stc
and
or
sbb
pop
mov
roll
orl
sbb
lock
push
add
push
adc
subb
mov
dec
inc
sbb
xor
add
jmp
push
dec
sbb
mov
fcmovb
push
dec
and
repz
add
add
rcrb
adc
pop
add
sti
push
inc
sbb
ret
push
std
sub
cmp
ret
nop
cmpsl
push
shlb
rolb
add
inc
dec
dec
lea
outsb
insl
rcrl
lods
push
dec
add
add
cmp
clc
nop
shrb
xor
add
stos
clc
mov
fdivrl
xchg
divl
and
pop
mov
jp
or
jp
pusha
add
push
fcoms
and
add
iret
mov
call
call
add
xchg
push
pop
mov
dec
fimull
sbb
sti
pop
std
incl
jl
add
cld
movl
cli
mov
dec
std
lret
or
test
and
int3
or
inc
out
jg
push
cli
push
lcall
sub
pop
or
xchg
add
and
xor
add
add
adc
insl
subb
add
xchg
outsl
jl
inc
aam
mov
xor
bound
mov
mov
fs
xor
cmp
je
adc
das
adc
sub
add
lods
ret
out
add
and
iret
repnz
loop
xor
pop
sbb
mov
mov
mov
fstps
pushl
mov
call
nop
loopne
xor
mov
mov
and
insb
and
pusha
and
sub
ret
bound
or
mov
xor
das
test
push
call
or
mov
loope
push
push
push
and
ljmp
push
add
push
cld
ljmp
push
jb
in
mov
arpl
mov
push
xchg
xor
pop
xchg
pusha
push
cmp
xor
pusha
or
out
inc
push
icebp
lods
jle
cmp
mov
sub
jbe
decl
add
imul
push
pusha
add
addr16
xor
arpl
or
xchg
or
mov
cmp
or
arpl
lods
stc
mov
mov
or
pop
loope
adc
andb
and
push
lock
repnz
and
jecxz
adc
daa
dec
and
fldl
pop
or
addb
mov
pop
dec
mov
cmpb
push
mov
sbb
mov
ret
adc
sbb
ficompl
xchg
sti
adc
stos
dec
sbb
js
movsl
lock
or
aam
adc
pusha
mov
sbbb
adc
jae
enter
add
or
cmp
lea
mov
andb
incb
mov
xor
ret
fistps
jecxz
sub
and
adc
add
test
xchg
cmpsl
call
jmp
loope
add
or
pusha
xorl
jne
in
add
push
add
adc
adc
mov
dec
sbbb
pop
mov
xor
mov
cmp
aaa
pop
sub
cs
xchg
in
movsb
sbb
push
shlb
cmp
xlat
aas
cmpb
mov
rcr
shrb
popa
add
ljmp
fsubp
fs
push
push
je
adc
cmpb
xchg
xchg
loopne
ret
push
stos
jbe
es
mov
or
popf
test
mov
xchg
push
pop
inc
daa
sbb
lock
or
jo
lcall
nop
ljmp
add
popf
loope
pop
add
adc
cwtl
int3
aam
mov
hlt
loopne
mov
or
sub
pusha
loopne
add
or
ljmp
mov
fmuls
jg
push
jmp
or
jmp
divb
cld
mov
or
sbb
pop
lock
leave
mov
mov
cmp
cmpb
xor
pop
enter
mov
pop
sub
add
addl
sbb
outsb
jg
jg
mov
or
jbe
clc
and
mov
rcrb
add
pop
into
lea
adc
je
xchg
cmc
call
inc
andl
call
insl
and
shl
std
adc
mov
lock
call
or
sarb
push
je
lock
push
testb
loope
test
push
stos
pop
inc
and
inc
add
add
adc
pop
addl
push
lea
sahf
adc
test
mov
sub
adc
stos
mov
sbb
aam
mov
pop
ror
pusha
pushf
ljmp
mov
movlps
and
jecxz
addb
mov
call
add
xchg
lock
jecxz
mov
jb
sbbb
es
pop
pop
add
xor
fdivl
adc
ret
je
or
std
inc
pusha
pop
add
pusha
gs
outsb
xor
out
add
nop
icebp
inc
lods
es
fs
jle
add
lock
and
mov
pop
jne
jne
adc
icebp
sbb
dec
call
fwait
cld
test
icebp
push
cmpl
mov
xchg
cld
ret
xchg
loopne
fwait
gs
add
lods
mov
mov
lds
sub
sti
test
cli
jno
test
or
inc
push
pop
mov
add
scas
cmpb
xor
xchg
cmpb
push
loop
or
lea
push
mov
lcall
arpl
call
lcall
jne
lods
push
push
add
add
adc
inc
repnz
jmp
push
cmp
call
xor
mov
push
testb
aam
icebp
js
inc
call
push
mov
icebp
jg
in
pusha
call
js
lock
add
incl
add
lea
out
mov
inc
xchg
cmp
and
jl
in
jo
mov
test
mov
lock
call
push
xor
sbb
adc
pop
pop
xor
cltd
mov
inc
adcb
pushl
mov
cmp
punpckhdq
mov
add
out
add
cmp
or
sub
jp
pop
cwtl
sar
clc
and
jo
call
or
jo
sti
ljmp
mov
push
xchg
jo
lea
repnz
call
mov
xchg
sub
push
push
push
nop
jnp
imul
clc
insl
push
dec
sbb
mov
and
add
adc
mov
dec
push
icebp
mov
adc
push
mov
pop
dec
jecxz
iret
adc
or
add
clc
inc
mov
xor
bound
jae
push
out
sahf
adc
insb
ret
decl
mov
push
icebp
push
dec
aam
xchg
inc
mov
push
inc
xchg
test
sbb
mov
and
mov
adc
push
mov
sarb
jmp
adc
pop
dec
fisttpl
lods
or
mov
clc
xor
pop
int3
dec
jmp
std
push
push
and
insl
cmp
stos
push
addb
xor
jg
cwtl
xchg
add
adc
inc
repz
fs
mov
cmpb
lods
mov
push
add
jg
loopne
xor
adc
cld
incb
dec
cli
fistpl
ss
jb
add
repnz
add
cmpsb
xchg
and
outsl
xor
mov
pop
scas
idiv
adc
push
pop
dec
hlt
mov
xor
aad
mov
add
imul
mov
adc
or
fisubs
aas
fcmovnu
mov
push
aaa
jo
xor
movsb
icebp
push
lock
hlt
add
jmp
push
xor
daa
add
scas
mov
mov
xor
int3
inc
inc
fwait
test
iret
push
sub
or
in
adc
or
mov
insl
or
stc
mov
call
incl
jmp
and
inc
sbb
dec
push
and
test
pop
hlt
das
rcr
andl
lcall
pop
lods
popf
sub
repnz
jne
lods
jae
push
jmp
push
xchg
mov
cmp
call
hlt
mov
ret
mov
push
mov
or
push
xor
jo
jg
in
mov
inc
dec
jb
push
jbe
pop
mov
icebp
add
add
orb
jo
mov
jle
scas
push
mov
dec
jo
jne
jle
push
mov
add
adc
insl
jne
cs
mov
xchg
test
call
add
ret
add
aam
mov
mov
jbe
lcall
shrl
and
mov
jo
mov
mov
sub
inc
testl
dec
push
fldt
push
xor
ret
icebp
mov
or
pop
sbb
mov
dec
pusha
aam
mov
add
call
mov
xchg
jne
sub
cmpsb
cmpb
call
decl
push
into
adc
fs
pop
jo
jge
mov
dec
aas
and
adc
inc
clc
pushl
inc
int3
lock
sbb
lcall
add
ret
lock
cld
mov
jo
sub
push
std
pop
and
inc
dec
adc
add
add
sbb
lcall
mov
mov
lds
jo
mov
or
cmp
int3
inc
pop
hlt
lcall
jl
cmp
mov
call
mov
out
mov
pop
leave
add
icebp
cmp
inc
adc
cmp
jle
cwtl
mov
add
hlt
je
add
adc
mov
cmp
je
data16
cmp
loopne
mov
imul
sub
mov
xor
call
fisttpll
add
imul
add
xchg
or
or
sub
lock
incl
dec
add
lock
cmp
dec
cld
call
je
lock
cld
movb
cmp
push
mov
cs
imulb
lea
movsb
sub
push
jae
dec
add
sub
add
sub
sarl
call
add
inc
lea
jg
add
xchg
inc
xor
pop
push
xlat
shlb
lods
imul
or
mov
enter
add
inc
shrb
adc
orb
mov
and
dec
adc
push
add
push
test
xor
mov
or
push
sub
mov
subb
ret
movsl
adc
or
push
push
and
ret
sub
add
fidivs
incl
es
jno
and
ret
adc
adc
cmp
mov
mov
push
subb
dec
movl
xchg
test
call
or
pop
dec
inc
dec
cli
lcall
or
fdivr
in
inc
push
lock
xor
xchg
call
add
cld
movb
hlt
mov
mov
jno
lds
lods
add
or
add
push
add
pop
sub
xor
add
jl
call
lret
or
dec
sbbb
push
loope
sar
xchg
cmpsb
insb
push
lea
stos
sbbb
mov
pop
stos
pop
jbe
push
add
inc
jmp
mov
sar
andb
or
xor
shlb
rolb
out
clc
fistpll
in
int3
add
imul
sub
std
decl
je
jbe
mov
sti
jmp
push
mov
xor
shrl
dec
popa
mov
subps
mov
pop
push
in
out
inc
lods
sub
sub
cmp
mov
or
push
sbb
pop
pop
outsb
pop
lea
add
sbbb
pop
iret
jg
int
mov
add
je
lea
cs
mov
inc
imull
orb
lock
and
adcl
jbe
adc
add
inc
je
call
push
fld
sbb
or
mov
je
decl
call
fldl
and
adc
aas
xor
je
incb
or
push
outsb
lea
sub
test
and
movsb
cli
cld
xor
loope
aam
dec
cld
pop
adc
rclb
xor
ds
push
xor
fistps
mov
mov
pushl
adc
cmp
outsb
insb
pop
add
inc
ss
xchg
ds
in
clc
xchg
add
xor
test
sub
shlb
jnp
cmp
lahf
jl
mov
loope
hlt
xor
loop
pop
fidivrs
aam
sbb
adc
mov
or
dec
cmp
ret
add
scas
adc
xor
add
push
enter
and
sarb
push
fstps
and
fisttpl
dec
repz
pushf
push
jb
mov
nop
mov
loopne
sbb
call
mov
add
shrb
push
subl
sbbb
rorl
push
push
or
fisubs
mov
int
jo
lea
add
cmc
ret
test
rolb
or
push
out
mov
or
rorb
movsb
daa
mov
adcl
loope
mov
dec
add
lahf
cmp
jne
xchg
lret
insb
sbb
sbb
pop
lahf
andl
lock
sarb
mov
cmp
jnp
fucomi
push
or
xchg
add
or
xor
nop
cmp
inc
pop
mov
and
sbb
inc
loope
mov
pop
pop
pop
inc
outsl
fistl
cmp
jl
xchg
inc
pop
pushf
add
jge
cmp
inc
mov
or
loopne
mov
filds
xorb
ret
add
sbb
or
jbe
inc
mov
add
jmp
fildll
ret
push
mulb
cli
bound
sub
mov
nop
adc
lods
adc
sub
js
cmpsb
jo
sub
push
push
sub
sub
pusha
insl
subb
scas
and
push
pop
repnz
test
popf
stos
push
arpl
push
add
mov
cmp
add
pop
cmc
jmp
subb
mov
or
test
xchg
or
cmc
pop
mov
adc
mov
outsl
mov
add
or
popa
or
fwait
adc
and
lahf
sub
das
les
push
dec
call
push
pushl
inc
or
sbb
mov
xchg
jge
mov
pop
jnp
adc
out
loope
mov
push
sub
push
call
or
xlat
mov
addb
push
hlt
inc
push
adc
fadds
fisubrl
dec
jge
stos
ss
mov
sbb
popf
cmp
sub
push
sbb
mov
add
fdivs
outsb
pop
cmc
adc
lcall
in
sub
pop
add
scas
loopne
jecxz
xchg
add
push
aaa
cld
pop
gs
int3
push
dec
js
cld
pop
dec
pop
test
inc
sub
js
cmpl
or
popa
or
jecxz
pusha
or
je
push
lea
pusha
jle
mov
xor
call
jg
or
int3
xchg
pusha
pop
call
jmp
pop
in
pusha
and
push
call
mov
jne
clc
pop
pop
data16
pop
jae
mov
xchg
imul
clc
lea
or
and
mov
pop
icebp
add
jne
inc
cwtl
dec
push
aaa
cld
dec
outsl
pop
pusha
mov
mov
xchg
push
decl
and
mov
arpl
push
push
test
xor
pusha
inc
inc
mov
pop
lods
or
test
mov
push
imul
call
jl
dec
add
loopne
je
popa
push
cmp
and
fs
mov
pusha
and
sub
je
pusha
and
xor
cmc
pop
call
jl
clc
add
mov
pop
ds
roll
push
loopne
mov
jo
mov
xor
pop
std
sub
jbe
adc
call
in
adc
fwait
popa
mov
pop
rcrb
add
sbb
adc
pop
or
les
bound
mov
add
icebp
aaa
inc
call
sub
mov
jecxz
and
jmp
push
or
testl
adc
add
filds
add
xorl
add
pop
mov
add
testl
mov
jl
push
jb
shlb
pop
idivb
outsl
decl
repz
sti
mov
je
pop
rcrb
cli
mov
cmp
call
orl
fildl
xorb
scas
shr
orl
je
jecxz
add
pop
hlt
pushf
and
ret
xchg
jnp
mov
push
sub
jge
adc
jge
add
pusha
jnp
mov
in
scas
clc
cmp
sbb
shlb
xor
push
cli
add
cli
sbb
add
jo
jbe
fs
decb
movb
push
mov
inc
mov
hlt
cs
push
inc
xor
xor
xor
xor
ss
mov
ljmp
xor
inc
mov
jb
nop
xchg
js
or
and
push
ret
mov
in
adc
or
mov
adc
mov
hlt
mov
dec
pushf
mov
pop
mov
call
mov
xor
mov
jns
fbstp
je
push
or
xchg
ret
lock
xor
inc
xchg
or
add
pop
and
je
add
xchg
cmc
jg
add
mov
test
xor
or
add
xor
xor
cmp
pop
leave
jae
or
adc
jg
dec
or
add
push
add
lock
or
xchg
dec
ret
je,pn
jp
ljmp
push
sub
sub
push
loope
xor
hlt
adc
jl
sti
out
sbb
push
out
add
dec
sub
je
hlt
add
shrl
clc
add
pop
mov
mov
add
push
adc
adc
fwait
mov
xor
lock
je
jbe
test
call
and
and
ds
stc
add
mov
cmp
out
ljmp
mov
push
int3
push
or
and
or
or
mov
shl
pop
hlt
mov
add
mov
inc
jl
adc
jb
add
jecxz
cmp
and
shlb
icebp
mov
sahf
inc
sti
je
lock
mov
pop
add
mov
adc
or
clc
incl
push
ljmp
test
repz
loopne
and
mov
jge
shr
or
call
inc
mov
pop
pushf
add
movsb
js
fldt
fimull
pop
inc
call
lock
and
jae
test
mov
pop
clc
adc
jae
mov
mov
inc
sub
dec
je
mov
sbbl
add
fs
repz
sbb
cmpsb
jns
idivl
mov
jg
inc
lcall
dec
enter
cmpsb
jns
lock
push
insb
decl
pusha
xor
push
push
push
sbb
movsb
mov
mov
pop
xchg
aad
xor
das
adc
or
mov
mov
fisttps
js
stos
pop
mov
mov
fcomp
jecxz
fsubrs
idivl
out
mov
fsts
mov
xorb
mov
sbb
jbe
fs
pop
cs
lret
shll
mov
mov
jp
add
pop
std
jge
jge
sub
mov
xlat
sbb
or
dec
add
aam
xor
mov
sbb
in
movsl
rol
stos
aaa
sub
subb
mov
movsb
lock
jno
mov
pop
mov
ret
push
xor
das
fs
lock
mov
nop
xchg
add
jo
mov
cltd
out
test
adc
aam
ja
in
add
inc
daa
push
pop
cwtl
clc
out
mov
add
fbld
add
sbb
mov
incb
xor
inc
and
and
ja
lods
adcb
xor
nop
mov
lock
lock
stos
xorl
mov
and
mov
js
mov
mov
add
repnz
adc
mov
clc
jmp
ret
inc
push
data16
xchg
add
les
je
scas
fisubl
add
pop
or
aaa
xor
add
mov
je
add
test
sbb
adc
movsb
ds
add
mov
add
lods
mov
xor
stos
lods
je
add
push
in
mov
outsb
adc
cmpl
mov
jo
mov
mov
xor
sbb
and
fildl
cld
fldenv
testl
sbb
fdivrl
sub
aam
mov
jge
adc
scas
cwtl
cmp
adc
call
lea
roll
out
mov
clc
aad
push
sbb
xlat
jae
mov
fsubrs
and
push
jmp
jge
add
cmp
push
add
mov
or
sub
decl
cmc
mov
add
lcall
inc
cmp
pop
add
sub
mov
je
adc
xor
incb
jg
ret
pushf
mov
shr
add
ja
push
adc
nop
lcall
push
add
mov
mov
lcall
xchg
adc
pop
lock
or
iret
mov
lods
pop
mov
dec
loop
add
movsb
push
loopne
mov
int3
add
cmp
je
into
push
mov
std
decl
pushl
je
lods
jo
and
inc
jne
pusha
ret
or
xor
or
and
out
mov
pushl
icebp
rcrl
xorb
inc
mov
add
lock
mov
jl
insb
inc
popa
shlb
or
lret
cmp
int3
sbb
call
or
push
xchg
adc
xor
es
xor
stc
jl
push
movsl
fidivl
mov
cmp
cmp
cld
or
sti
adc
pop
cld
mull
into
daa
xor
hlt
nop
sbb
add
dec
dec
mov
mov
add
mov
push
mov
xchg
out
sub
dec
pop
and
cmp
daa
jns
clc
and
or
aad
ret
pop
call
and
or
push
add
mov
mov
rolb
loopne
jmp
icebp
and
or
loope
pop
pop
bound
add
pop
shrb
inc
mov
add
and
lret
sbb
pop
sbb
push
inc
lcall
mov
das
adc
jb
or
lock
mov
jb
or
adc
fmull
mov
inc
leave
ficomps
pop
cmp
jne
push
out
loope
xchg
rclb
adc
push
push
rcrb
fisubs
es
or
pop
adcb
adc
sbbl
lcall
add
lock
lea
push
push
int3
sub
es
sub
subb
jle
hlt
pop
inc
xchg
push
mov
mov
bound
sub
into
lock
sub
aam
out
inc
fbld
loop
sub
xor
cmpsl
test
add
int3
test
or
insb
jecxz
lock
ret
fdivrl
xchg
push
push
push
test
inc
popf
inc
imul
fdivrl
aam
nop
imul
add
shrb
roll
call
cmpb
cmpb
jmp
and
aam
mov
or
aaa
add
jl
push
vmread
jmp
add
loop
data16
mov
aam
inc
cmp
int3
dec
fimull
out
lea
push
call
or
dec
dec
sub
mov
lea
push
and
push
mov
or
add
sub
mov
cmp
mov
push
arpl
cmp
add
adc
repnz
xchg
shlb
push
dec
sbb
pop
sub
inc
push
cs
inc
xorl
or
fisubs
les
add
stos
add
adc
add
adc
lea
sbb
mov
dec
shll
stos
cmc
adc
cmp
push
fmull
add
push
in
cltd
cmpl
add
mov
adc
insl
inc
add
loopne
adc
add
insb
rolb
movsb
test
jo
or
jmp
push
lods
pop
mov
movsb
inc
test
or
call
or
adc
push
call
stc
jnp
shrb
je
xchg
sti
add
and
or
lock
add
rcrl
std
fistpl
jle
inc
or
rcrb
xor
cli
and
call
pop
adc
sahf
ret
jge
sub
leave
add
push
or
roll
push
xor
lcall
push
sbb
pusha
xor
cmp
packssdw
inc
xchg
sub
lods
lods
push
ds
add
pop
loopne
add
adc
inc
dec
cmp
xor
les
xchg
mov
pop
xchg
cld
shrb
xchg
push
xchg
lahf
pop
pop
loopne
add
outsl
dec
push
ss
dec
cmp
roll
je
mov
int3
shlb
add
into
movzwl
icebp
lcall
inc
sbb
adc
and
mov
mov
mov
push
add
in
add
sbbl
lea
xchg
faddp
cmp
scas
mov
decb
scas
not
rcrb
sub
incl
adc
or
inc
lock
je
mov
test
ret
mov
shr
or
add
es
test
out
mov
pusha
dec
mov
inc
add
inc
xor
outsl
inc
and
pusha
pcmpeqb
adc
adc
lret
lock
push
and
es
data16
decl
add
loopne
push
pop
cltd
mov
and
lea
xchg
add
dec
or
rcrl
or
cld
adc
inc
or
add
or
cmovns
dec
loop
inc
push
pop
adc
lcall
jecxz
loop
adc
mov
scas
add
enter
fsubs
lcall
loopne
loopne
mov
or
cltd
loopne
xor
adc
lret
mov
lea
inc
mov
sbb
hlt
ljmp
jbe
fbld
cli
aaa
inc
mov
cwtl
pushl
jo
mov
adc
ljmp
push
inc
negl
jp
inc
and
cmp
mov
mov
loop
inc
loopne
mov
xchg
jg
lock
stos
dec
push
in
pop
jne
push
idiv
jmp
push
pop
and
inc
add
and
mov
push
sti
sbb
bound
sub
inc
aas
lret
loope
push
fsts
aam
call
aas
cmc
push
xor
dec
add
jp
jb
notl
add
push
cmp
mov
fdivl
inc
add
lds
lcall
ljmp
dec
inc
je
pusha
or
add
mov
mov
mov
sub
cs
test
add
sbb
lcall
pusha
pop
sub
lods
pusha
jnp
inc
sub
cs
adcb
mov
or
pusha
cmp
mov
or
popf
mov
push
jbe
xor
jae
mov
and
or
sahf
call
push
push
mov
xchg
les
mov
clc
push
sub
xchg
loope
push
pop
add
mov
xchg
and
lea
addl
mov
cmp
shlb
je
in
incl
clc
and
loopne
insb
das
add
rol
jp
loopne
imulb
popa
ret
loope
push
jp
sbb
jg
shr
mov
inc
pusha
add
sbb
push
sbb
push
xchg
cmpsb
sub
dec
test
bound
cld
out
test
xorl
popa
xchg
pop
mov
jecxz
mov
or
or
gs
pop
call
je
mov
sub
cmp
ret
outsl
push
hlt
cli
incb
lock
mov
jp
sub
mov
loopne
lock
pop
popa
add
push
mov
pusha
jl
test
js
sbb
pop
jne
cli
jg
lock
popa
fs
sub
add
push
sbb
daa
std
outsb
push
jl
inc
subb
test
inc
lock
or
jne
dec
jg
and
loope
loopne
xchg
add
pop
pop
jg
xor
imul
xchg
test
bound
cwtl
add
sub
inc
or
pop
aad
inc
pusha
mov
rcrb
mov
add
or
mov
dec
mov
lds
pusha
js
push
lock
loope
pop
cmpsl
pop
loope
pusha
adc
push
sti
ljmp
adc
pusha
mov
es
ljmp
adc
jmp
add
inc
jae
inc
in
fisttpl
lods
jno
mov
pop
dec
cli
jle
jle
or
jno
scas
call
test
xchg
popa
cmp
mov
enter
dec
mov
push
and
out
mov
or
add
shlb
or
and
fidivrs
adc
jmp
out
sahf
mov
adc
pop
out
test
call
add
sub
dec
mov
data16
sub
pop
mov
outsl
js
lock
xorb
cmc
push
mov
cmpsb
xor
cwtl
out
xor
mov
mov
dec
fldt
orb
je
jo
add
add
cs
and
add
pop
mov
xchg
jle
call
stos
and
push
jmp
xor
jg
pop
mov
xchg
adcl
dec
rolb
mov
jl
xor
in
orl
nop
test
push
lock
aas
inc
push
and
push
call
sub
out
rolb
xor
in
sub
jb
subb
cmp
jne
negl
add
ret
into
popa
arpl
scas
in
add
dec
cmpl
inc
adc
add
sub
hlt
push
cld
mov
out
test
sbb
int3
or
push
mov
push
aam
push
orb
inc
mov
add
jg
lock
icebp
adc
fdivl
call
pusha
sbb
aam
or
jle
lock
pusha
and
mov
pop
aam
mov
pop
cs
jne
mov
xor
jmp
push
xor
lea
push
push
xorb
push
pop
lret
and
pop
push
rclb
adc
dec
inc
enter
dec
jl
and
or
fbld
lock
add
adc
xor
icebp
sbb
xor
jmp
xor
jb
mov
mov
jno
inc
jbe
lea
lock
and
mov
shrb
das
and
mov
push
push
dec
mov
pop
jecxz
pusha
loop
mov
jmp
mov
add
pop
shlb
adc
mov
pop
add
call
mov
cwtl
call
dec
jmp
mov
pop
jl
mov
inc
imull
add
push
sub
pop
add
cmpsl
stos
stos
pop
clc
xlat
adc
sarb
xor
adc
pop
jne
or
testb
adc
add
add
xchg
mov
adcb
lods
jo
jbe
jp
rcrl
adc
xor
add
add
xchg
or
add
add
das
push
test
test
and
or
jne
sbb
outsl
sub
jno
nop
mov
call
lock
movsb
xor
jg
js
mov
sti
cmp
dec
mov
call
pusha
cli
ljmp
or
cli
jmp
push
sbb
pop
and
dec
push
xor
push
and
xchg
rcrl
mov
mov
push
jo
mov
jae
mov
pop
loope
push
popa
push
fcoms
repnz
insb
mov
ret
jg,pt
lock
jg
idiv
scas
mov
mov
add
mov
adc
jmp
lahf
adcl
push
sahf
cmp
inc
adc
add
cli
pop
rorb
jo
or
mov
xchg
sub
jb
mov
ja
and
aas
xorb
sub
jo
or
or
dec
loop
mov
data16
mov
xchg
cmc
push
adc
out
lock
mov
and
clc
mov
cmp
push
je
or
test
call
mov
add
add
pop
inc
mov
call
pop
ljmp
push
rcll
jo
mov
sti
test
inc
push
xor
adc
ljmp
and
scas
sub
jbe
addl
adc
push
es
ds
out
sub
loope
jg
jo
movsl
cmp
xchg
mov
sbb
je
jne
mov
call
js
xchg
mov
or
into
data16
push
andl
adc
jmp
lock
xor
xor
push
xchg
imul
mov
icebp
jbe
inc
pop
fmul
xchg
lock
loop
sti
add
or
repz
sbb
sbb
mov
mov
repz
adc
jo
mov
sbb
sti
add
pop
adc
inc
shrb
hlt
pop
mov
jb
mov
in
lock
and
lock
pop
push
icebp
xchg
sub
ja
rclb
fnstenv
adc
mov
and
or
push
pop
test
call
in
add
mov
paddq
mov
inc
clc
jbe
loopne
push
adc
das
mov
lods
adc
pushf
lods
sbb
inc
or
clc
call
sub
pop
testl
std
mov
clc
jo
and
mov
loope
xor
push
in
pop
imul
andb
pusha
pop
xor
pop
pusha
xor
fmul
mov
popa
or
xor
cwtl
out
and
inc
roll
xor
inc
xor
cmp
mov
ds
je
push
push
pop
lock
fidivrs
cs
xor
push
lock
inc
mov
add
adc
stc
jo
cmpb
decl
pushf
addb
mov
ss
hlt
in
push
push
test
xor
jne
adc
jo
or
call
insb
inc
pop
test
in
push
inc
cltd
cmp
mov
sahf
mov
jg
add
int
xor
mov
dec
mov
cwtl
mov
movb
inc
test
cwtl
rol
ljmp
lds
inc
insb
mov
cmp
mov
jae
lods
push
mov
sti
movzbl
cmp
decl
cmp
cltd
xor
data16
cli
rclb
xchg
fsub
inc
data16
dec
les
adc
mov
jno
cmp
or
ret
mov
dec
sbb
pusha
mov
test
rorb
les
gs
je
mov
jne
jp
inc
sub
in
inc
adcl
lock
imul
aas
nop
add
jmp
push
sbb
pop
rorb
dec
inc
add
mov
pusha
loopne
notrack
ss
jno
cmp
or
cmp
jmp
xor
ret
das
inc
xchg
leave
push
cld
negb
add
mov
xchg
jnp
mov
jl
imul
incl
inc
add
lahf
mov
push
mov
mov
push
mov
add
dec
pop
movsb
imul
xchg
mov
fs
push
ss
mov
adc
pop
testl
lds
test
mov
cmp
mov
iret
add
add
les
pop
pop
push
inc
sbbb
cmp
push
jle
rclb
mov
add
mov
les
sub
push
fisttpll
and
es
mov
push
jbe
incb
mov
adc
push
add
add
xor
sbb
add
test
cli
je
jb
push
inc
lea
fs
bnd
push
and
or
scas
push
jno
mov
push
jae
mov
out
add
and
int3
mov
scas
clc
aaa
xor
aaa
bound
add
push
testb
add
mov
hlt
push
fdivr
jo
or
or
outsl
push
sbb
jg
push
jmp
or
add
jne
adc
inc
push
in
mov
les
loope
mov
jne
mov
icebp
fwait
cmpb
mov
mov
les
mov
cmp
sub
pop
mov
jl
rolb
pop
and
orb
call
mov
aad
push
mov
rolb
inc
out
mov
pop
sub
jne
adc
movsb
dec
cld
addl
in
testl
fcmovnb
loopne
inc
test
push
adc
xor
sti
sbbb
call
xchg
jno
out
call
inc
or
xchg
cmp
orb
push
sub
or
les
mov
ficompl
orb
call
les
fwait
lock
adc
call
or
push
push
push
jmp
xor
cmp
push
xchg
sbb
push
enter
xchg
adc
push
rorb
enter
xor
cmp
notl
in
setbe
mov
sub
mov
dec
xchg
sbb
sbb
sub
pop
imul
sti
fists
jb
mov
inc
nop
push
imul
lods
std
push
sub
lcall
lods
popa
jne
je
loop
ret
shrb
fadd
sub
push
imul
sbb
mov
shlb
sbbb
pushf
push
ret
xor
adc
cs
adc
loop
jmp
add
sbb
xchg
xchg
or
shlb
push
adc
ret
jle
inc
idivb
call
push
adc
fstpt
dec
les
adc
mov
inc
sub
cmp
mov
cwtl
and
in
ret
repz
inc
aam
jne
jo
fisttpl
jo
push
cmp
cmp
out
mov
stos
push
or
sub
shll
add
jle
je
rorb
je
inc
in
das
movsb
push
add
xor
sub
popa
ret
test
xchg
xorb
shrb
xor
pusha
jmp
out
int3
lds
jbe
jl
push
jae
push
cld
or
xlat
ja
mov
or
sub
repnz
sub
rcll
les
incl
and
push
incl
inc
testl
call
add
mov
jmp
push
dec
push
jbe
or
and
jbe
mov
push
add
mov
pop
mov
lods
outsl
and
or
popa
pop
push
aam
andl
or
or
enter
addb
mov
push
mov
loop
inc
es
jbe
ret
add
clc
ja
lods
inc
je
push
call
loopne
mov
bound
xchg
add
pop
pusha
hlt
mov
adc
imul
xlat
and
lahf
leave
adc
xor
push
sub
dec
insb
jg
out
out
clc
je
jp
push
lods
call
add
or
add
iret
xchg
leave
inc
lods
cmp
pop
ljmpw
and
xchg
adc
push
push
push
push
add
es
rclb
es
call
push
sahf
and
out
xchg
mov
clc
xor
xor
jle
lea
clc
outsb
jne
mov
addb
loope
inc
adc
cld
push
popa
pop
pop
lret
lods
add
cwtl
ret
fs
pushl
std
in
mov
loop
adc
adc
jns
lret
pusha
fs
addl
xor
mov
das
pop
lock
pop
or
push
or
mul
dec
pop
loopne
add
test
mov
sbb
imul
dec
sbb
xchg
lcall
stos
mov
xor
sbb
jne
repz
clc
mov
andb
xchg
mov
sub
sbb
push
push
add
mov
mov
sub
lds
lcall
jp
decl
pusha
add
sbb
or
xor
dec
ret
scas
inc
repz
pop
add
aam
jo
inc
inc
push
cwtl
add
cs
or
pop
jp
add
adc
fisubl
jbe
sub
sti
outsl
xchg
addr16
dec
loopne
std
je
xchg
or
and
jge
jl
cwtl
popa
adc
mov
cmc
mov
clc
loopne
jg
sbb
pop
cmp
stc
mov
inc
add
sar
inc
add
and
or
popa
cmp
test
cli
in
imul
or
jmp
or
in
aad
lcall
aad
incl
sub
or
sbbb
mov
adc
cmp
add
sub
add
test
fs
cmp
insb
fs
or
inc
or
push
mov
push
dec
pop
sar
cmpsb
adc
test
incl
call
pop
pop
and
clc
push
xchg
adc
mov
or
das
clc
jmp
xor
sbb
mov
adc
and
adcl
ficoms
lods
lret
cmpsl
mov
jmp
mov
popa
cmp
bound
push
jg
outsl
ljmp
loopne
les
dec
std
ret
mov
jp
jbe
ja
sahf
je
data16
jg
lock
sahf
pop
call
xchg
cmp
mov
cs
loopne
test
add
fwait
add
xchg
jb
lea
push
pop
sub
pop
push
add
xchg
aas
cmpsb
in
aam
sbb
pop
pop
inc
imull
cmp
pop
addb
adc
pusha
pop
add
jne
xchg
and
pusha
push
insb
mov
enter
popa
sbbl
les
mov
mov
add
loop
push
sbbl
cmp
jo
push
push
orb
pop
out
imul
or
pusha
cmp
xor
inc
mov
xchg
inc
or
fcom
sbb
scas
xor
ss
pushf
add
lock
mov
lcall
sbb
or
pop
jge
icebp
addr16
mov
pop
js
and
push
dec
inc
aam
idiv
and
adc
mov
je
sub
dec
lock
insl
mov
outsl
mov
jo
nop
in
xchg
inc
jle
or
cli
mov
mov
inc
ljmp
push
add
pusha
addb
inc
inc
push
sbbb
enter
or
cwtl
sub
mov
jb
inc
mov
nop
mov
inc
andb
jle
push
addb
and
xor
aam
mov
sbb
loope
out
loopne
mov
cmp
scas
mov
add
push
call
pop
add
mov
mov
decl
mov
add
inc
js
pop
mov
enter
jo
push
test
push
in
call
movsb
inc
jo
js
lcall
cli
in
sbb
mov
cmp
and
mov
clc
pop
rorw
mov
or
xor
mov
data16
lar
mov
jge
pop
cmp
sub
mov
jge
divb
cmc
add
pusha
insl
push
into
or
fsubr
mov
scas
xor
or
jne
xor
sbb
xchg
push
icebp
sbb
pushf
add
jno
addb
or
mov
add
je
add
mov
push
mov
add
xor
push
push
and
icebp
lds
sbb
in
pop
mov
mov
pushf
mov
rcrb
push
mov
mov
sub
cld
call
movsl
push
jo
xchg
dec
push
loopne
mov
push
inc
and
cmp
movsb
jg
mov
adc
xchg
or
outsb
je
je
js
jecxz
cmp
call
cmpsl
sbb
loop
mov
insb
rol
sar
add
or
xor
decb
mov
lcall
and
xor
dec
jl
dec
in
inc
insb
scas
pop
and
pop
aad
or
lea
lea
cltd
js
push
mov
add
pop
fs
add
test
jae
mov
pop
mov
inc
ss
scas
ljmp
outsb
mov
jb
add
adc
mov
imul
inc
or
push
jmp
pop
pop
sbb
add
adc
testb
xor
xlat
add
xchg
roll
add
xor
xchg
addl
insl
mov
repz
or
or
mov
push
pop
pop
adc
inc
dec
mov
pop
stos
xor
mov
xchg
mov
lcall
cs
outsl
repz
popa
mov
inc
cld
cmpsb
mov
xchg
and
push
or
cmp
loope
fisttps
push
call
add
push
mov
and
cs
test
mov
ds
roll
cld
scas
notb
sbb
fldl
mov
lods
add
je
pop
mov
adc
add
addb
mov
mov
dec
das
mov
push
icebp
or
fidivrl
push
imul
push
std
call
aam
mov
cmovne
or
or
div
add
dec
jb
hlt
push
adc
mov
mov
push
and
sar
clc
pop
and
hlt
decl
or
adc
insb
add
test
cltd
clc
lock
sub
js
xchg
add
mov
gs
dec
cmp
andl
xor
xor
inc
push
or
or
xchg
test
add
lret
inc
add
push
adc
pushf
push
pop
cld
int3
pushf
gs
cmp
test
sbb
leave
mov
and
xchg
scas
mov
add
lea
mov
jo
mov
mov
mov
adc
fs
inc
int3
fcoms
fs
fcmovnb
xor
cs
jo
lock
ficompl
in
pop
jne
push
jecxz
mov
mov
mov
mov
dec
aam
jb
mov
push
jnp
mov
jb
mov
pop
decl
pusha
cmpsl
or
or
xor
icebp
test
sub
cmp
mov
or
dec
adc
fsubrp
adc
sbb
or
mov
fildll
rorl
test
clc
pusha
aaa
jo
add
jg
xor
push
pushl
inc
sub
adc
xchg
jo
cmpl
dec
stos
mov
adc
mov
je
and
clc
sub
jo
xchg
std
adcl
sbbl
loopne
push
je
incl
add
icebp
gs
lock
lock
sbb
or
and
nop
inc
decl
call
mov
pop
mov
aaa
dec
call
mov
pop
andl
xlat
xchg
jo
ss
or
and
lock
and
mov
sub
jbe
mov
cmc
addr16
mov
push
jge
add
pop
sahf
inc
out
cmp
repnz
lcall
dec
xchg
cmp
pop
fildl
repz
shrl
mov
inc
and
scas
add
lods
pushl
dec
push
je
cmp
pop
mov
xor
xor
xchg
sbb
xchg
mov
sarl
andb
data16
push
call
incb
inc
mov
mov
jecxz
into
addr16
hlt
in
daa
clc
les
cmp
push
sbb
lock
mov
fcmovne
mov
mov
pop
in
mov
sbb
movsb
test
je
outsl
dec
xor
sbb
loopne
mov
xchg
clc
mov
and
pop
into
xor
ror
mov
jo
xor
inc
push
fadd
sbb
xor
add
push
sbb
ljmp
adc
cmp
clc
sub
lods
push
or
add
inc
push
sbb
push
cmpb
nop
add
push
jno
mov
sub
add
std
mov
nop
mov
mov
push
mov
adc
fs
hlt
popf
pusha
jo
adc
or
jle
pop
inc
jl
mov
addl
pop
mov
aam
cmp
inc
ret
push
nop
fs
mov
cli
mov
jecxz
call
ss
push
push
test
xchg
loopne
jb
stc
lret
cmp
adc
xor
clc
cmp
sbb
filds
mov
roll
jmp
lea
ljmp
repz
sbb
pop
push
clc
adcb
call
lea
aaa
insb
sbb
movsb
jo
inc
xor
jno
pop
jmp
lea
push
test
test
andb
xor
in
pop
faddp
xor
adc
es
push
rcll
out
pop
sub
subl
pop
test
dec
adc
add
addb
jne
test
sti
jne
mov
jnp
fists
add
icebp
ds
call
lea
jle
jle
ja
xor
push
mov
dec
mov
outsl
push
add
pop
fisubrl
fcompl
shr
loop
outsl
pop
push
mov
inc
ret
insb
lcall
iret
jmp
or
das
leave
inc
add
movb
mov
dec
pop
enter
sub
stos
lret
es
popa
add
adc
jno
inc
adcl
push
lcall
and
mov
jg
sbbl
clc
andl
xchg
or
lods
jo
mov
aam
iret
or
cmp
rorl
cmp
cld
ja
inc
mov
pop
add
call
push
fdivp
push
add
mov
sbbl
lock
pop
add
push
add
orl
popa
cli
and
jmp
je
add
and
and
add
movb
add
jl
jl
dec
mov
insb
xor
inc
and
sbb
cmp
leave
lea
mov
sbbb
mov
clc
gs
mov
js
sub
adc
and
mov
andb
ss
test
clc
das
push
add
subl
shlb
dec
in
insb
xor
pop
xchg
xchg
inc
add
pop
push
subb
ljmp
push
orb
rolb
push
xchg
inc
push
or
ret
push
movsb
rolb
cwtl
sbb
fsubl
sbb
sub
inc
movsb
mov
inc
push
ljmp
push
sbb
sbb
sub
push
fs
fwait
push
stos
mov
imulb
in
sub
outsl
lock
mov
push
pop
inc
push
xchg
dec
inc
add
sub
leave
xchg
xchg
and
stos
xor
les
ret
cld
sbbb
mov
dec
and
jbe
push
fldt
mov
mov
pop
fisubrs
rorb
sbb
ret
inc
js
add
pushl
add
call
push
cmpsb
ljmp
adc
ljmp
mov
mov
add
test
mov
mov
data16
jmp
test
push
jo
dec
xchg
xchg
rclb
je
incl
dec
or
je
ret
or
inc
aad
sarb
shrb
sarb
sub
push
cmp
shlb
add
rcrb
push
jmp
bound
loope
out
outsb
push
ja
mov
nop
mov
xor
cmp
pop
cmp
nop
bound
pushl
je
push
mov
test
ljmp
int3
sbb
push
rolb
call
pop
pop
pop
xchg
xor
fimull
filds
pop
gs
add
leave
ret
sarb
faddp
xchg
je
jg
mov
mov
mov
mov
mov
test
mov
add
fs
add
add
jl
jne
and
jle
cld
fwait
mov
call
jne
add
push
pop
cwtl
push
or
dec
jne
test
in
add
fld1
fcmovnb
adc
sub
jmp
mov
popf
bound
inc
ret
adc
je
je
pusha
cmp
push
jecxz
and
inc
and
lods
xor
jbe
ret
pusha
or
dec
pusha
mov
adc
and
filds
push
sbb
pop
imul
sub
pop
and
sbb
cmp
push
shrl
cmc
lcall
movsb
jmp
loop
adc
pop
mov
fs
jl
mov
js
adc
scas
enter
fwait
or
int3
testb
or
cld
jne
ljmp
loopne
xorb
jmp
loopne
add
xor
and
mov
jo
jl
push
arpl
or
jle
sbb
pop
ljmp
loop
loopne
and
clc
sub
ss
clc
orb
lods
cld
sbb
or
cs
push
pusha
sbb
push
out
push
bound
fs
cmp
ds
rolb
xchg
aam
add
daa
call
cli
inc
bound
mov
arpl
call
add
pusha
hlt
fs
call
into
mov
arpl
jnp
mov
cmp
movl
mov
add
or
mov
xor
loop
nop
mov
in
jmp
adc
mov
loopne
pop
dec
mul
daa
popa
inc
mov
inc
adc
pop
test
or
sbb
mov
add
mov
adc
adc
push
add
mov
add
xor
mov
add
push
shrb
inc
and
loope,pn
jb
mov
pop
cmp
loopne
data16
inc
sbb
test
add
mov
jmp
adcb
sbb
add
push
and
outsl
loopne
popa
loopne
hlt
test
jmp
test
imul
add
or
dec
adc
lods
adc
xor
cwtl
mov
loopne
loope
pop
mov
loopne
pop
pusha
loop
idivb
orl
push
jmp
push
sbb
mov
push
xorb
imul
jp
andb
scas
mov
repnz
mov
and
inc
decl
int3
inc
jb
mov
push
mov
icebp
xchg
add
pop
adc
add
ret
clc
pop
movsb
jge
cmpb
mov
mov
dec
movl
in
add
dec
pusha
pop
xorl
repnz
cmp
add
add
push
je
cmp
push
int3
xorb
jbe
mov
sbb
in
push
call
sub
xor
in
loopne
push
cli
daa
jl
mov
push
mov
push
pop
mov
push
jl
pop
inc
pop
and
in
out
mov
fucomp
adc
inc
push
loopne
clc
loopne
call
lea
jmp
pop
fcoml
leave
ret
mov
mull
jg
dec
les
xchg
adcb
incl
adc
addb
lahf
or
scas
add
add
dec
or
pop
add
outsb
inc
mov
pushf
mov
push
xor
adc
cmc
cmp
inc
and
pop
cs
mov
add
inc
xlat
or
push
int3
scas
xor
and
add
icebp
fdivrs
add
add
xchg
and
es
ret
add
mov
daa
and
push
mov
pop
xchg
cmpb
dec
or
cmpsb
lock
cs
inc
xor
mov
jbe
push
int
clc
daa
jl
add
mov
sbb
add
jle
lock
jbe
hlt
insb
add
dec
xor
call
xchg
mov
mov
mov
lea
andb
pop
ficomps
cld
pop
or
inc
sbb
jo
std
aas
mov
adc
jo
fistl
repnz
jns
xlat
inc
sub
lock
adc
xchg
mov
add
or
jmp
iret
je
lea
hlt
mov
icebp
adc
jbe
cmp
xor
add
addb
inc
jecxz
xor
insb
jne
xor
inc
jb
xchg
pusha
xchg
repz
inc
icebp
out
dec
push
or
or
orb
jmp
sbb
pop
ss
adc
sub
push
add
pop
push
icebp
sbb
pop
ds
jae
pusha
mov
sbbb
mov
cld
adc
push
mov
add
adc
add
pop
in
shr
shlb
mov
add
pop
push
add
push
or
scas
loopne,pn
cmpsb
add
dec
or
incl
inc
sbb
mov
xlat
call
bound
and
roll
cmc
and
mov
push
pop
jb
add
jmp
leave
jae
repnz
and
push
and
ret
jg
inc
fwait
pop
mov
jl
push
sbb
in
pop
mov
mov
js
cmpl
pop
adc
and
cmp
adc
popa
and
dec
mov
adc
loopne
jle
shlb
fadds
inc
inc
mov
incl
mov
es
push
lds
sahf
add
outsb
js
add
ja
jb
je
outsb
frstor
decl
xor
dec
sbb
test
xor
sub
shl
mov
add
jecxz
test
fs
stos
inc
stos
lock
ss
mov
cmpsb
fisubl
jno
and
mov
xor
jne
and
fs
loopne
push
mov
pop
mulb
ljmp
mov
decl
js
call
inc
and
adc
dec
lock
outsl
and
aam
push
test
sbb
fists
shll
pop
pushl
adc
mov
aam
cmp
inc
call
rorl
xor
sahf
and
and
push
cli
cmp
lcall
mov
xor
xor
xor
test
lods
pop
test
add
and
sub
int
or
inc
test
inc
filds
inc
mov
mov
add
xor
sti
mov
arpl
mov
test
add
add
mov
fnsave
adc
sbb
vpsubd
nop
adc
fcom
lock
inc
sub
sub
push
test
repnz
lods
push
adc
lock
ljmp
sub
jae
lock
mov
push
jo
jp
mov
jns
ss
stos
adc
addr16
ds
inc
xorl
call
lock
fdiv
cltd
pop
and
push
adc
jne
push
cmp
rcrb
or
inc
shlb
pushl
add
or
pushl
xor
adc
mov
ret
and
cmp
cs
xor
loop
cmp
ret
mov
xchg
lret
negb
test
orb
and
inc
push
pop
or
dec
cmpsb
push
aad
add
lods
jno
or
inc
or
or
sub
mov
lea
ljmp
mov
shll
push
or
es
dec
dec
call
ss
jb
push
mov
cmp
out
int
or
sbb
push
or
fsubrs
fistpl
adc
sbb
mov
insl
adc
add
shll
sbb
aas
test
push
pop
je
rep
lock
mov
stos
and
je
add
sub
or
mov
mov
mov
pop
pop
add
repz
sub
push
ja
out
inc
loopne
push
jo
xor
push
push
push
add
call
xchg
mov
call
imul
call
mov
das
xor
dec
add
add
dec
add
cmp
or
les
test
test
test
add
test
fwait
divb
add
adc
push
pop
pop
jns
push
sti
jmp
or
cmp
lahf
dec
push
sub
mov
push
jnp
clc
mov
rorb
in
sub
push
cmpsb
out
push
dec
pop
cmp
and
adc
sbb
xchg
and
lods
mov
or
mov
shlb
add
out
cmc
push
inc
js
or
inc
adcb
pop
sub
jno
rcrb
or
loopne
inc
and
movb
jno
adc
lea
enter
inc
sbb
inc
testl
add
pop
adc
les
adc
scas
sbb
or
jb
lock
testb
mov
dec
fbstp
mov
mov
mov
push
rorl
add
jmp
loop
and
call
mov
sbb
lahf
mov
mov
mov
add
pop
xor
push
adc
mov
xor
clc
subb
aad
and
sbb
xor
sbb
add
mov
lea
inc
xchg
xchg
rorb
push
jl
xchg
sbb
out
sahf
std
aad
ret
jo
sbb
jne
lea
sub
sub
aaa
push
push
mulb
pop
xor
adc
cmp
and
inc
add
push
mov
sbb
inc
or
sub
fildll
insl
inc
add
scas
nop
inc
jmp
push
hlt
mov
dec
xlat
add
pop
add
enter
mov
lea
pop
xor
je
lea
jmp
jb
hlt
fwait
add
add
pop
popa
lea
dec
adc
roll
or
loopne
loope
lea
dec
adc
je
pop
movsb
add
fwait
adc
adc
xor
inc
and
aas
pop
or
sbb
rorb
sub
dec
decl
fs
xor
shr
inc
pop
shlb
inc
jmp
shll
push
mov
add
and
mov
outsl
mov
sbbl
call
sub
xchg
add
sub
sbb
mov
insl
loop
add
outsb
lret
push
add
fcoms
inc
jbe
outsb
int3
adcb
test
add
adc
xchg
scas
or
and
clc
dec
jne
sub
loopne
adc
pop
xchg
data16
jne
mov
adc
sub
push
mov
out
inc
mov
ficomps
cmp
je
andl
punpcklbw
sti
aaa
pusha
dec
mov
adc
mov
lods
inc
xor
mov
mov
fadds
rcl
aam
sbb
ret
lods
jg
adc
inc
pmaxub
into
pop
stos
adc
add
sbb
push
test
mov
add
push
nop
mov
stos
fwait
mov
dec
jle
add
ljmp
cltd
bound
jne
lea
sub
dec
inc
aaa
loop
xor
aam
mov
mov
xor
mov
je
rclb
or
sub
cli
rorb
push
or
sbb
push
ret
shrb
pop
mov
das
mov
jg
popa
mov
enter
cmp
sbb
jo
imul
pushf
sbb
push
rclb
dec
out
mov
dec
jg
cltd
hlt
out
add
jb
pusha
push
movsb
mov
push
cmc
cltd
fiadds
inc
sbbb
push
cmp
jl
mov
icebp
jp
inc
rcll
mov
add
orb
cmp
mov
dec
data16
test
or
add
dec
fmuls
adc
pop
pusha
inc
pop
dec
push
test
inc
ja
adc
ss
dec
sub
fdivs
call
js
sub
mov
ret
cmp
jmp
leave
cmp
add
inc
pusha
mov
inc
aam
and
lret
push
mov
mov
lea
nop
adc
rclb
push
dec
cmp
arpl
test
pop
xor
clc
mov
jmp
filds
inc
roll
jmp
jmp
adc
jmp
bound
ret
insl
call
es
add
sti
add
xchg
add
add
ret
ljmp
add
add
jnp
or
fldt
or
mov
loope
mov
nop
push
mov
xorb
call
and
imul
sti
pusha
push
xor
add
add
jp
xor
or
or
ljmp
pusha
pop
pushf
push
pop
jle
fs
mov
and
sbb
mov
ss
pop
push
and
sahf
and
popa
pop
mov
test
add
adcb
stos
push
enter
ret
add
incl
loopne
dec
dec
jmp
mov
pop
loopne
pop
dec
pop
push
xchg
sbb
arpl
add
out
rorb
and
lea
xchg
loopne
push
rolb
lret
cli
push
andb
loopne
push
push
adc
dec
pusha
jl
mov
and
out
and
cmp
inc
clc
jp
outsl
cmc
loopne
andl
jg
jmp
pusha
inc
pop
call
sbb
dec
adc
sbb
or
mov
sbb
or
out
pusha
aaa
and
sub
test
lcall
in
push
cld
pop
pushf
add
or
pop
gs
add
cmpb
call
scas
pop
push
ss
fsub
bound
mov
adcb
xor
nop
inc
mov
out
mov
cmp
gs
add
inc
pop
push
adcb
mov
imul
loop
or
mov
call
loopne
cmp
lcall
push
call
pusha
pop
adc
aam
fsubrl
leave
pop
rolb
mov
pop
rep
cli
ja
testb
sbb
sarl
bound
inc
mov
pop
popa
insl
into
clc
pusha
insl
bound
loop
push
or
testb
fndisi(8087
cmp
ret
inc
jmp
and
loopne
push
inc
pusha
push
xor
cmp
jmp
pushf
andb
add
sbb
sbb
pop
adc
xor
in
add
push
push
adc
mov
push
lock
imul
jl
loope
jl
pusha
jno
scas
dec
roll
push
mov
mov
add
int3
xor
lods
cmp
xor
jne
add
pushf
and
mov
inc
pop
sbbb
and
sub
lcall
cmp
cltd
std
lcall
sbb
dec
loop
loopne
call
push
in
and
in
scas
idivl
mov
lret
leave
sbb
popa
and
bound
loope
mov
aaa
lcall
and
loopne
cli
and
pusha
pop
notb
and
dec
cmc
adc
test
adc
inc
add
aam
bound
je
orl
lock
shrb
rorb
jno
push
xorb
jb
leave
inc
xchg
and
mov
lret
call
pop
jo
push
jo
lock
xchg
clc
decb
cmp
dec
mov
xorb
or
ret
pop
and
push
or
adc
mov
mov
in
cmp
mov
xor
push
xor
cmpsl
mov
cmp
inc
fs
pop
and
loopne
subb
xchg
xor
push
test
sub
call
lock
push
scas
sbb
iret
call
pop
rolb
adc
lock
dec
in
and
jne
test
daa
call
loopne
loopne,pn
adc
add
add
sbb
pop
mov
movsb
adc
jg
outsb
mov
inc
jmp
pop
gs
mov
lea
mov
jno
mov
or
fnsave
dec
mov
jp
nop
pshufw
or
cld
pop
or
out
ret
and
pushl
cmpb
adc
push
adc
mov
jmp
shll
pop
in
pop
movsb
cmp
lock
xor
cld
cmp
pop
lock
popa
in
sbb
dec
mov
jo
pop
mov
scas
inc
xor
lock
xor
out
cmpsb
lock
je
rcl
cmp
add
xor
jg
push
xchg
mov
and
dec
add
adc
rcrl
and
dec
add
jno
push
adc
clc
js
mov
loop
lock
nop
add
jb
xorl
aaa
and
addl
fists
sub
xor
inc
bnd
xor
dec
mov
ljmp
adc
icebp
jb
lock
jbe
or
xor
sub
xor
or
adc
push
mov
test
pop
dec
push
int3
or
lcall
xor
call
pushl
and
dec
call
cmp
popf
push
test
pop
mov
xor
mov
mov
cmp
mov
jbe
ja
jmp
mov
push
call
inc
sub
icebp
push
mov
fs
popa
push
and
jae
jl
decl
frstor
mov
jo
xlat
push
cs
jo
sub
or
xor
dec
and
repnz
jmp
lock
call
je
sbb
jg
scas
mov
mov
lock
pop
and
jge
repnz
inc
dec
add
mov
movsb
mov
test
xor
pop
cmp
add
xor
mov
sub
push
das
mov
add
lret
mov
xor
sub
icebp
and
orb
mov
std
or
call
push
dec
scas
jg
push
bound
inc
xor
outsl
hlt
add
push
call
les
jb
test
push
icebp
test
cltd
fstpt
pop
cmp
add
mov
adc
sub
cmp
mov
std
mov
push
lock
pop
lds
cmp
mov
lds
mov
jo
aam
fwait
jecxz
enter
movsb
inc
pop
loope
mov
jmp
in
fldt
and
or
and
dec
or
push
jmp
pop
fs
adc
xor
mov
cmpb
jo
data16
push
jmp
dec
mov
sbb
dec
sub
in
add
add
push
pop
test
sbb
push
or
ss
jle
bound
add
dec
and
mov
add
jo
mov
add
jb
add
mov
or
sbb
jmp
push
test
aam
mov
das
lock
add
jno
mov
and
add
add
xchg
sbb
into
dec
pop
push
push
or
xor
aad
sub
stos
push
in
add
mov
pop
js
dec
pusha
add
test
scas
push
push
clc
push
xchg
inc
dec
mov
xchg
jo
incb
cwtl
jecxz
cmp
dec
clc
push
xor
nop
mov
mov
imull
clc
inc
sbb
xor
repz
fsubrl
scas
clc
outsl
ss
lea
xor
dec
or
sti
jecxz
push
pop
dec
sub
add
inc
clc
ljmp
cmc
mov
push
pop
add
icebp
mov
enter
adc
adc
int3
rcrb
andl
cld
lea
dec
adc
pop
div
mov
orb
push
lock
test
fdiv
cmpsb
inc
nop
sub
fcmovnu
xchg
je
or
cmp
cli
lahf
or
push
add
je
ret
jmp
jmp
mov
aas
push
mov
aas
pop
call
jmp
push
lock
mov
and
xorb
push
sub
call
lea
and
inc
inc
mov
test
push
fldl
dec
push
and
push
fs
push
ljmp
push
lea
call
mov
les
add
adc
stos
test
pop
cli
inc
outsb
jo
add
addb
mov
ret
pop
pop
repz
addb
xchg
popa
push
push
and
jo
push
jno
mov
or
and
push
xor
sbb
in
lock
and
xchg
hlt
dec
jg
mull
push
push
scas
cmp
or
add
add
pop
jl
lds
add
pushl
sub
mov
and
jg
pop
pop
inc
mov
mov
fmul
mov
or
arpl
icebp
fdivrs
inc
or
add
sbb
push
mov
adc
cmpb
test
and
jmp
xchg
adc
sub
enter
sbb
xchg
gs
out
aas
lods
jbe
xchg
xor
loop
mov
ds
push
cs
fwait
rcl
mov
dec
push
sub
or
dec
or
add
lcall
or
movsb
xchg
jb
ljmp
inc
mov
cmp
jge
pop
inc
pop
and
pop
addps
enter
jge
jbe
call
andb
repz
hlt
ss
rclb
adcb
std
rolb
mov
adc
lock
test
inc
jg
ja
clc
scas
and
jns
cmp
cmp
jnp
inc
adc
xchg
push
sbb
shlb
aaa
mov
add
or
add
jbe
pushf
mov
and
xchg
adc
adc
xor
mov
cld
add
push
sbbb
daa
test
xchg
and
test
addb
incl
lds
xorb
push
dec
add
and
call
mov
loope
mov
adc
fistl
or
jle
push
insb
jp
dec
push
sarb
in
movsb
test
subb
scas
push
lret
sub
or
mull
rorb
addl
pop
adc
adc
cmpsb
pop
push
ret
xor
ret
jl
push
add
les
and
out
rorl
lahf
pop
sub
pop
cmp
and
adc
ss
rclb
xor
add
xor
push
cmp
xor
sbb
sbb
adc
fcmovnb
pushf
cmpsb
and
daa
or
cmp
dec
cmp
jno
clc
data16
jle
lods
incb
inc
sbb
mov
sahf
push
mov
and
adc
dec
insb
jg
stc
push
mov
rorb
add
or
jg
add
inc
shrb
insl
leave
incb
push
pop
jl
cmpl
in
jo
fiadds
xchg
ret
fiaddl
mov
add
inc
sar
scas
jp
xor
inc
and
aaa
enter
test
or
add
sar
pusha
es
or
daa
mov
incl
hlt
sarl
ret
and
add
mov
add
ret
mov
adc
jmp
or
ficompl
sbb
inc
cmp
xchg
addb
add
pop
add
mov
adc
inc
ret
call
ljmp
jbe
mov
mov
call
dec
xlat
inc
repz
aas
popa
bound
add
push
loope
add
in
out
enter
sbb
stos
push
in
push
ror
adc
in
add
jo
dec
stos
inc
adc
pushf
ret
push
enter
call
push
inc
iret
fmul
cmpsl
sub
jl
fdiv
xchg
and
into
mov
or
push
adc
add
pop
sar
dec
lea
mov
inc
jmp
es
je
push
pop
xchg
and
pop
mov
push
jl
call
and
mov
in
jbe
pop
subb
dec
imul
ss
xor
pop
loopne
test
add
bound
popa
popa
cmpb
or
addb
dec
call
cmp
test
incb
push
ja
dec
test
loopne
xor
jge
jg
js
roll
cld
loopne
cmp
decl
push
test
mov
push
push
orl
inc
inc
dec
bound
mov
in
into
arpl
push
je
pusha
mov
out
or
mov
jbe
push
push
push
clc
push
xchg
or
push
inc
loopne
leave
push
clc
and
jmp
mov
test
add
loop
cld
ret
clc
inc
jl
mov
into
adcl
aam
push
pusha
sub
fadds
push
test
scas
scas
pop
jecxz
add
popa
add
sbb
xchg
mov
fcomip
into
cmp
mov
mov
ja
or
mov
inc
mov
dec
mov
rcll
xchg
push
pusha
test
lock
push
fwait
js
in
jb
pop
call
lea
pop
pop
add
adc
dec
jg
xor
inc
test
jne
add
pop
pusha
dec
enter
test
loopne
mov
test
mov
into
ja
icebp
mov
loop
xor
sbb
cmc
loopne
pop
lds
repnz
xchg
inc
ds
jb
hlt
aas
or
cmp
adc
or
dec
inc
push
pop
inc
push
adc
cmp
adc
mov
xchg
clc
or
mov
add
std
movb
pop
adc
or
incb
fimuls
mov
cmpsl
test
push
mov
jp
lock
sbb
aad
cmc
test
loopne
mov
fs
mov
loop
stos
push
mov
inc
test
daa
in
test
imul
mov
loopne
cmp
outsl
push
xlat
loop
loopne
cmp
ret
and
mov
push
sub
ljmp
mov
cltd
fucompp
leave
pusha
insl
loopne
and
pusha
les
call
clc
loopne
clc
stos
mov
pop
out
pusha
add
add
bound
stc
cli
push
fistl
ret
test
and
add
dec
scas
fbld
imul
push
mov
adcb
add
add
and
mov
dec
js
out
mov
incl
add
cmp
lock
cmpb
jnp
mov
add
ja
cmp
push
sub
push
aad
ret
cmp
cltd
nop
and
mov
adc
xor
mov
shlb
or
xchg
jo
jno
pop
pusha
jle
or
adc
nop
clc
sub
cmp
cmpsb
push
inc
test
dec
pop
mov
push
sub
out
sub
pushl
xchg
or
push
mov
lock
sub
add
shlb
outsl
add
jl
repnz
stos
das
mov
mov
in
addl
fneni(8087
pop
sbb
adc
mov
shr
arpl
orb
movsl
lock
push
add
shll
pusha
inc
ds
push
movsb
xchg
xor
pop
or
jne
andl
shlb
jmp
pop
add
push
mov
std
mov
lods
add
cmp
add
pop
in
cmp
cwtl
mov
mov
orb
push
icebp
xor
in
xlat
fisubrs
cwtl
jg
fsubrs
jo
aaa
add
jge
inc
add
sbb
push
jnp
push
jo
and
es
lock
ja
pop
add
push
jne
push
mov
icebp
jo
pop
add
xor
or
lods
pop
inc
pop
and
call
xchg
sbb
fs
or
je
mov
fmull
push
jne
add
adc
or
adc
mov
ss
jle
sbb
xchg
cmp
orb
push
or
jne
in
into
mov
sti
jg
add
call
test
outsb
loopne
or
and
bound
xchg
mov
insb
mov
dec
mov
sub
cltd
hlt
decb
cltd
insb
xchg
inc
or
push
jl
scas
fwait
cmp
push
jl
loop
in
xor
daa
adcb
mov
jl
jno
inc
cmp
push
mov
xor
clc
setg
mov
ret
adcb
add
and
xor
or
icebp
mov
fistpl
add
pop
movsb
adcb
pop
adc
sbb
cs
add
inc
push
mov
shl
jbe
jmp
and
mov
nop
inc
jo
xor
mov
pop
test
mov
dec
sub
xchg
sub
jp
shlb
pop
jo
mov
jbe
mov
push
push
mov
pusha
xor
adc
or
mov
or
popa
loop
mov
xor
mov
inc
mov
ret
mov
jo
lea
fadds
push
cld
mov
call
adc
outsb
inc
xchg
hlt
mov
inc
jp
jae
xor
test
jo
jl
and
jbe
pop
decb
xor
pop
add
insb
movb
incb
inc
push
or
cmp
test
call
dec
or
test
xchg
inc
inc
outsl
imul
mov
add
mov
jo
call
sbb
push
rcl
cmp
add
je
ret
ja
aam
inc
and
repz
push
or
popf
xchg
or
adc
and
cmpsl
mov
fisubs
popa
and
cld
push
fimull
sub
or
pop
mov
push
cmp
or
stos
clc
adc
call
call
xor
test
je
mov
outsb
jl
ret
test
mov
lcall
pushw
xor
sub
mov
ja
mov
push
and
sub
loopne
push
add
pop
push
push
sbbb
add
cs
imul
push
mov
lcall
cmp
mov
in
aad
mov
and
decb
and
xor
or
lock
imul
dec
int
dec
xchg
or
mov
dec
jne
inc
add
mov
je
add
scas
mov
mov
inc
ret
es
mov
lock
mov
inc
jae
ljmp
xor
inc
cmpsb
mov
adc
mov
pop
ljmp
sub
inc
add
pop
addl
mov
add
push
ss
adc
lock
mov
jo
push
and
jo
or
neg
dec
mov
push
xchg
test
sub
inc
mov
xor
add
push
hlt
jg
add
fwait
inc
inc
les
fsubs
sub
mov
movsb
push
jae
dec
dec
scas
call
xor
add
push
aam
cmp
add
repnz
mov
and
nop
loope
loope
incb
sbb
jne
lock
call
loop
adc
mov
add
add
cli
lock
mov
adc
ljmp
sbbb
mov
fwait
mov
lock
jg
or
inc
mov
sbb
shlb
jno
pop
sub
add
and
pop
mov
shlb
inc
scas
fcomps
push
lock
or
add
xor
mov
push
sbb
or
mov
imul
sbb
push
je
push
xor
push
pop
or
add
es
mov
cmp
decl
add
mov
sbb
jg
adcb
jmp
push
and
jecxz
daa
mov
mov
scas
aad
cld
stos
mov
inc
pop
ret
sub
lcall
mov
sub
enter
or
mov
cmp
fistpl
sbb
xor
xchg
shlb
xor
and
add
mov
mov
sbb
clc
sub
pop
jecxz
push
jecxz
xchg
outsb
outsl
adcb
jl
and
das
mov
jle
mov
sub
imul
mov
scas
adc
fbstp
cld
jmp
pop
bound
outsl
clc
cmpsb
int
dec
pop
scas
pop
jecxz
or
pusha
fs
aad
loope
mov
sbb
neg
add
sub
xor
std
outsl
push
call
addr16
mov
cmp
fs
loopne
sub
fs
out
clc
out
out
stos
jg
je
jmp
lret
lock
push
lock
add
arpl
push
loopne
lock
in
adc
enter
repnz
lock
jmp
sbb
rolb
pop
pop
decl
inc
sub
cmp
xchg
bound
roll
or
inc
cwtl
test
lock
xchg
sbb
test
out
insb
lock
push
and
add
pop
sub
stos
and
adc
nop
mov
push
lock
outsb
mov
and
push
push
jo
lahf
jae
pop
jl
movsl
mov
mov
push
cmp
adc
bound
xchg
and
aaa
xor
mov
pushf
jne,pn
xor
fsubrs
std
sub
fdivl
add
fs
xor
or
ljmp
sub
dec
pop
call
jl
fidivrs
xor
jbe
jge
xchg
xorl
or
or
sub
cmc
je
addl
cmp
and
in
inc
adc
es
loopne
cs
lea
cmp
jae
and
bnd
fildl
jne
mov
cmc
add
inc
rolb
or
sbbb
mov
pop
pop
call
dec
andl
and
pop
mov
mov
sti
xchg
push
xor
pusha
mov
jle
push
dec
dec
cwtl
out
mov
es
inc
aam
push
mov
insl
orb
and
loope
sub
out
out
pusha
ret
cmp
push
push
add
mov
stos
roll
js
js
xor
adc
mov
jns
sbb
dec
adc
sub
fadds
ficoml
cmp
dec
cmpsl
testb
cmp
push
jecxz
sub
fwait
add
dec
test
xor
enter
or
movsb
lock
sub
inc
fadds
add
jg
pop
data16
std
addb
stos
dec
pop
std
or
ljmp
push
add
mov
mov
or
icebp
sbb
jmp
je
inc
jo
std
test
pop
inc
cmpsb
mov
add
xchg
or
sbbb
inc
add
add
or
xchg
xor
or
out
sub
in
xchg
sti
inc
xchg
xchg
test
pop
add
pop
lock
loopne
andl
fs
mov
mov
xchg
psadbw
repz
stos
test
add
call
pop
cmc
adc
ret
decl
push
sbbl
aas
add
inc
ds
pop
xchg
xor
imulb
jmp
lds
mov
and
pop
push
clc
sub
cmp
sbbb
mov
dec
xchg
add
cmp
dec
aaa
or
ss
call
out
push
adcl
out
push
out
imul
add
dec
and
ljmp
ret
icebp
pop
mov
sub
fcoms
pop
xor
ret
ds
lock
push
pushf
sbb
add
in
cld
call
push
xor
rorb
rorb
or
mov
and
cmpsb
rolb
rorb
outsb
xor
sbb
jl
mov
cmp
mov
cmp
sub
aaa
add
cmp
test
lahf
js
jo
xor
das
pop
mull
movsb
xchg
in
mov
inc
xor
rcll
or
inc
fucomi
imul
or
xor
lret
call
rclb
add
clc
rcrb
dec
js
enter
or
mov
pop
dec
push
mov
sbb
js
or
fwait
or
ljmp
hlt
outsl
decl
movsl
negb
rorb
test
add
xchg
dec
dec
ret
fmuls
push
or
mov
addl
push
add
mov
push
push
sbb
or
or
dec
adc
ljmp
shrb
adc
dec
ljmp
jg
pushf
jne
pop
push
sarb
inc
add
or
popa
inc
jl
or
lock
lock
jne
mov
mov
sti
and
adc
push
and
lds
pusha
clc
adc
adcb
mov
and
mov
push
and
ja
add
test
ja
ja
or
jo
adc
cld
adc
adc
nop
and
add
mov
mov
xchg
sub
orb
pusha
dec
test
popl
push
mov
leave
call
adc
and
push
adc
dec
adc
push
inc
loopne
leave
push
add
and
out
mov
dec
add
pusha
cli
dec
hlt
scas
test
jmp
inc
stc
imul
pusha
je
inc
loopne
inc
les
clc
clc
aam
mov
sub
sub
add
fwait
sti
cmpsb
pusha
jb
test
xchg
dec
ljmp
and
test
or
in
mov
sub
loopne
sub
dec
lods
loopne
pop
lahf
jecxz
adc
outsb
push
add
and
add
pop
loope
add
pop
dec
push
add
lods
insb
xor
fsubrs
xor
insb
cmp
pop
bound
or
int3
popa
jl
and
or
pusha
adc
fsubs
mov
and
adc
shrl
add
pusha
sbb
nop
push
dec
add
inc
push
push
and
adc
cmp
pusha
adc
pusha
push
in
loope
inc
adc
adc
pusha
in
jg
inc
dec
insb
add
inc
dec
adc
or
pop
xchg
es
push
push
jp
adc
testb
ret
and
fisttpl
cmp
repz
andl
les
xor
xchg
adc
sbb
cmp
dec
jmp
push
idiv
ljmp
inc
sahf
xchg
loopne
call
mov
cmp
lods
sahf
pusha
jecxz
out
negb
dec
sbb
adc
push
in
ss
or
and
es
sbb
jmp
fisttpl
lea
mov
mov
arpl
add
aaa
sti
sub
loope
aad
push
repz
push
jne
lods
cmp
xchg
ss
ret
inc
xchg
add
cmp
sbb
repz
mov
xor
bound
add
imul
cmpl
sub
bound
mov
jle
mov
push
and
adc
out
loopne
stos
loopne
addr16
pushl
push
sub
popf
fcomps
jmp
sbb
push
in
inc
je
bound
inc
sub
add
xor
and
ds
rclb
xchg
call
test
pusha
cmp
loopne
add
dec
loope
cmp
and
xor
pop
dec
jbe
jo
fdivl
or
add
loop
das
rolb
jo
je
dec
dec
fdivl
sub
pusha
inc
std
xchg
and
jae
ljmp
ret
push
icebp
inc
lret
sub
sub
pushf
insb
xchg
sbb
push
push
jg
mov
popa
test
push
call
mov
lds
add
mov
addl
or
push
and
sub
lcall
loope
mov
jmp
enter
rcrb
ret
push
call
shrb
call
inc
mov
add
ss
jnp
sbb
and
inc
stos
loopne
adc
or
inc
add
loopne
inc
ret
out
xchg
jb
insb
sub
push
inc
mov
jne
inc
out
inc
sub
pop
out
xor
dec
popa
mov
faddl
sub
mov
cmpsb
push
xchg
lock
jo
outsb
clc
xchg
jg
xor
enter
add
push
xor
xor
push
mov
xor
jg
and
xchg
mov
call
test
jo
xor
outsb
enter
lods
xchg
xor
clc
sti
fildl
dec
add
xor
adc
cmp
loop
inc
pop
dec
jmp
xor
or
lock
or
add
shr
push
inc
mov
or
je
hlt
push
xchg
push
lock
cmp
add
mov
mov
xor
test
int3
cli
inc
dec
ja
lea
fs
cmp
xor
andl
dec
insb
mov
dec
jmp
pusha
mov
dec
sub
pushl
add
sub
mov
xor
lock
cmpsl
in
clc
add
inc
rorb
fstps
insb
cmp
rorb
orl
add
clc
mov
push
in
or
sub
fimull
loope
mov
add
sub
add
das
xor
sub
adc
sub
inc
loopne
cmp
inc
in
sbb
xor
call
out
jnp
cmc
xor
cld
call
add
xor
xchg
rorb
fs
js
sub
hlt
xchg
adc
add
mov
out
mov
xor
xor
aad
fadds
push
ror
and
xor
movsb
xor
mov
push
mov
push
adc
mov
push
test
fdivs
mov
sbb
or
mov
adc
sahf
push
inc
das
pop
mov
enter
sbb
pop
xor
push
mov
ret
mov
mov
rorb
add
inc
cld
movb
lea
dec
adc
inc
scas
mov
call
mov
xchg
adc
js
rolb
xor
sbb
add
jle
push
test
mov
stos
mov
test
push
add
jle
mov
xor
test
and
fwait
sub
out
xor
lcall
clc
add
push
push
push
inc
push
add
incl
xchg
sahf
call
add
sub
inc
int3
xorb
ret
add
jb
adc
testb
inc
lea
in
adc
movsl
or
add
push
adc
jbe
call
ljmp
js
lea
mov
mov
inc
or
add
push
xchg
or
inc
subb
dec
cmp
add
aad
call
dec
xor
les
movsb
push
test
push
and
mov
daa
push
jb
lret
sbb
add
mov
fwait
stos
mov
jbe
jo
add
mov
loopne
out
call
mov
add
dec
xor
adc
cltd
je
adcb
int3
and
sbbl
jg
or
xor
mov
jb
inc
fcoml
push
stos
call
jo
sbb
mov
pop
dec
jge
mov
jo
xor
cmp
sar
add
lock
mov
and
mov
cmp
jb
mov
daa
ja
aam
mov
ds
lea
push
jns
adc
pop
mov
js
add
xchg
call
sbb
icebp
and
jb
inc
or
ss
lock
sarb
aam
adc
aas
jne
hlt
push
insl
ljmp
jmp
jle
sbb
in
mov
pop
lock
lods
push
or
mov
pop
pop
pop
mov
sahf
xor
add
mov
or
mov
push
push
push
sub
adc
jge
cmpsb
gs
or
add
jo
dec
cmp
xchg
sub
sbb
out
fs
push
incb
sub
lock
push
adc
push
or
dec
ss
pop
jb
test
call
add
dec
bound
ret
cmp
call
mov
fcoms
and
inc
or
hlt
testb
fs
out
adc
cmp
jge
sub
dec
aas
xchg
cli
je
push
xor
in
jecxz
inc
adc
or
notl
call
fwait
dec
clc
sti
jb
aam
pop
add
rcl
hlt
repnz
jle
push
bound
jl
jecxz
mov
scas
mov
inc
push
lret
je
pop
mov
adc
push
add
je
outsl
das
fcmovu
push
mov
inc
sti
mov
jl
add
ja
outsl
or
add
inc
mov
fcomip
dec
loop
mov
int3
pop
push
mov
add
adc
pushf
dec
jo
sub
add
ss
mov
cmp
push
jle
mov
jle
dec
push
xlat
ss
sub
rcl
add
jmp
mov
xor
and
in
fdivl
inc
ja
out
mov
push
vmwrite
sub
aam
lret
mov
mov
dec
js
add
xchg
inc
fildll
out
es
incb
popf
sbb
popl
cmpsb
cmp
xchg
fsubrs
jl
pop
jp
inc
jo
add
adc
mov
js
incl
adcl
add
push
out
cld
int
add
lea
dec
inc
jl
jp
pop
insl
fildll
mov
jb
mov
inc
iret
pop
out
jb
cmp
push
add
hlt
sub
jge
jmp
adc
daa
add
roll
pusha
ljmp
sub
mov
mov
push
adcl
je
add
dec
inc
add
call
mov
jae
pop
and
fisubrs
jp
mov
xchg
sbb
inc
fcomps
icebp
cmp
push
dec
rol
push
daa
lds
dec
icebp
push
xor
or
cmpsl
sub
jle
rorb
incb
incl
lock
and
scas
clc
add
aam
mov
or
jg
jnp
jge
inc
sub
pop
imul
repnz
orb
hlt
jmp
and
lcall
hlt
mov
loope
mov
mov
out
je
sbb
cli
add
sbb
sbb
inc
cmp
mov
inc
fistl
mov
pop
stos
and
xor
divb
push
sub
ljmp
jbe
jb
cmp
jb
out
pop
lock
sub
sbb
icebp
xor
sbb
mov
iret
dec
mov
sbb
sbb
mov
adc
ss
jmp
inc
fcomip
aas
and
notb
push
and
xchg
adc
inc
ret
inc
rcrb
sbb
inc
sbb
adc
es
cmp
dec
xchg
push
adc
mov
jb
jmp
mov
inc
negl
mov
cmp
sbbl
cs
mov
pop
push
lret
push
jle
sbb
jg
mov
inc
stos
je
call
add
popa
adc
cli
add
call
sub
push
adc
mov
push
jbe
test
mov
add
lcall
jbe
mov
cmp
jmp
cmp
out
mov
test
mov
insl
and
sub
xchg
pushf
data16
inc
push
clc
inc
add
stc
loopne
push
lret
mov
call
push
mov
xlat
xchg
xor
jecxz
ljmp
pop
enter
aaa
fcmovnu
mov
pop
lret
xor
mov
stos
pop
add
loope
cmp
xchg
xchg
pusha
out
inc
dec
ss
or
cmpsb
in
call
xor
dec
pop
shr
and
or
and
clc
or
adc
mov
in
call
jb
in
push
pushf
sti
dec
jne
pusha
daa
mov
sub
add
in
mov
cmp
sbb
jbe
cmp
jb
mov
mov
decl
add
pop
add
aam
push
lock
aaa
lea
add
ds
ja
call
mov
mov
dec
clc
push
push
lea
pusha
shlb
lock
push
insb
pop
mov
mov
popf
lret
push
mov
shl
and
push
cs
daa
and
add
mov
jecxz
dec
loope
cmp
iret
fimuls
cmpsb
cmp
push
ret
cmpsb
les
dec
cwtl
add
aas
push
popl
in
and
mov
jl
and
xchg
addb
int3
idiv
lods
adc
mov
sub
mov
push
or
mov
adc
stos
mov
mov
pop
or
push
push
push
mov
adc
push
subl
repnz
jl
jl
cld
adc
xor
aam
sbb
mov
loope
cmp
add
hlt
add
adc
sub
mov
fmuls
js
cs
dec
or
call
push
fs
fwait
rolb
push
inc
call
dec
xor
sub
fs
or
cmp
std
add
mov
push
jge
mov
scas
daa
ljmp
rol
inc
mov
push
int
push
fadd
push
outsb
sbb
es
adc
mov
jle
incb
clc
jmp
pop
add
jne
or
cmp
loopne
fcomps
data16
cs
and
jb
pushfw
ljmp
jb
ja
add
stc
add
sub
jne
clc
or
punpckhdq
aad
sbb
sbb
xchg
mov
lea
hlt
push
mov
js
mov
insl
xor
imul
cld
push
cmpb
push
pop
push
push
or
sbb
daa
dec
test
mov
push
mov
ss
mov
aad
pop
out
add
adc
divl
sbb
push
out
outsl
xorb
jle
xor
mov
sti
adc
ss
call
ret
adc
lahf
xchg
pop
bound
fstpl
call
scas
mov
test
lods
dec
jp,pt
sbb
jecxz
shlb
enter
cmc
jg
mov
fsts
idivb
add
mov
jb
shr
push
ret
pop
inc
std
nop
pop
inc
add
or
pop
inc
call
adc
add
or
rorb
inc
movsl
and
hlt
cmc
mov
scas
nop
push
add
dec
push
lea
je
push
shrb
addr16
cmp
jle
xchg
hlt
jnp
add
sub
or
add
or
adc
jl
dec
lock
testb
je
xchg
cmp
lret
addb
cmc
testb
mov
and
shrl
flds
shlb
xor
jle
xorl
jbe
xchg
das
adc
call
jmp
orl
adc
sub
xlat
mov
xchg
lsl
int
imul
scas
call
js
rorl
pop
mov
push
lock
xchg
test
lock
add
pop
mov
cmp
lock
sub
orl
das
pop
arpl
mov
add
negl
or
sbb
mov
add
mov
jg
hlt
loope
pop
lret
mov
xor
jle
jbe
xchg
jle
cli
cmp
sub
sub
out
push
sbb
push
push
enter
push
xlat
fsubr
push
movsb
push
push
mov
mov
and
mov
cmpsb
xchg
push
rolb
out
out
jns
pop
cmp
dec
jbe
ret
mov
adc
or
push
push
test
rorl
repz
std
ss
cmp
push
sti
test
out
mov
mov
call
sub
jb
fildl
mov
sbb
and
sub
scas
outsb
xor
pusha
inc
push
sahf
into
pop
scas
sub
ljmp
xor
xor
shll
repz
test
fimuls
cmp
push
mov
std
inc
pop
enter
into
adc
pop
mov
and
add
add
xchg
adc
clc
dec
adc
sti
jb
jmp
or
dec
mov
cwtl
repz
sahf
inc
mov
cmp
stos
jbe
sarb
pop
pop
jp
testb
rolb
sub
cld
xor
and
test
es
aad
jmp
ret
iret
inc
stos
mov
ja
cs
jmp
xor
jae
scas
stos
cmpsb
mov
add
push
dec
inc
xlat
mov
add
mov
into
addr16
cwtl
adc
adc
cmp
cmc
pop
cmpsl
roll
and
out
sti
or
call
in
fcmovnb
xchg
mov
push
push
add
cmpsl
mov
insb
addr16
jne
pop
add
pop
dec
lods
or
add
dec
imul
shrl
cli
adc
out
and
add
das
les
sub
and
repz
test
pop
xchg
ficompl
inc
aad
push
scas
jp
arpl
sub
in
decl
sahf
push
nop
cmp
and
nopl
popa
pushf
cmpl
pop
and
xor
or
sub
call
xor
mov
and
out
push
jo
push
nop
push
pop
jb
mov
lods
inc
hlt
cmp
pop
sub
jg
inc
outsl
pop
cmp
push
mov
in
cmp
mov
jle
push
ds
fs
sbb
xor
jne
pop
cwtl
sbb
inc
lock
sub
or
mov
mov
lds
loope
mov
fs
movsl
sbb
pop
movsb
ret
or
sub
pop
int3
sbb
sbb
arpl
jne
jge
ficoml
pop
push
push
inc
unpckhps
rclb
xchg
shlb
incl
and
push
call
push
repz
adc
out
out
sub
cmp
cld
inc
lea
push
cmpsl
inc
xchg
js
or
call
push
xchg
in
push
movb
xchg
cmc
push
dec
push
ret
jbe
jne
inc
std
or
das
into
je
jg
add
xchg
or
or
jg
adcl
add
xor
mov
mov
test
or
and
mov
popf
sar
push
mov
or
mov
jne
leave
dec
jbe
test
aaa
add
inc
mov
movmskpd
in
push
mov
dec
fildl
repnz
lret
scas
lret
or
push
sarb
lock
addb
movsb
and
lock
or
es
fiaddl
and
lods
inc
jl
pop
xchg
inc
inc
add
jp
xor
sbb
push
cmc
mov
sbb
add
adc
ret
jmp
adc
daa
jb
jmp
cmp
in
fwait
int
mov
adc
push
jne
mov
ss
int
add
sub
cmp
in
inc
mov
int3
or
cld
dec
or
pop
xor
adcl
inc
das
xor
xor
add
in
cmc
cmp
push
adc
jno
daa
dec
or
jbe
dec
out
xor
into
mov
pop
and
mov
sbb
ds
ja
and
adc
pop
push
adc
add
mov
pop
mov
lock
and
pop
adc
cli
or
mov
adcb
repnz
lock
dec
xchg
jge
push
lock
push
test
mov
addl
fsubs
adc
xchg
inc
xchg
push
in
call
mov
insb
sbb
push
dec
in
ss
flds
jne
cs
inc
sti
repnz
orl
push
push
incb
loopne
jge
jb
outsb
cld
lea
je
adc
shlb
inc
jg
mov
add
mov
decl
dec
pop
repnz
enter
pop
adcl
push
push
lret
ja
aaa
mov
add
pop
rol
ret
jge
push
xorb
rcll
test
outsb
or
jmp
push
push
jl
or
add
add
sbb
jne
sbb
mov
mov
out
jo
or
decb
hlt
and
jl
popa
mov
cmp
mov
in
sbb
faddl
out
outsb
add
mov
and
outsb
cmp
fs
pop
dec
test
inc
pop
pushf
dec
jecxz
lock
cmp
cli
mov
push
add
cld
cli
jo
and
jecxz
inc
std
pushfw
cs
dec
pop
or
mov
es
adc
aaa
xor
scas
xor
lea
movsb
xor
or
mov
hlt
dec
and
cld
inc
int3
cmp
add
fcoms
mov
pop
push
push
adc
es
loopne
test
add
test
sbb
test
lock
pop
push
subb
cmp
inc
movb
jne
jbe
fdivs
dec
dec
sbb
stos
push
call
mov
fildl
add
int3
push
dec
add
scas
push
xchg
inc
popa
xchg
ljmp
fdivr
sub
cmp
in
aaa
cwtl
gs
pop
inc
aaa
decl
mov
mov
jmp
rcr
fcomps
jbe
mov
ret
pop
addb
cmpsb
call
hlt
ffreep
je
jg
add
mov
inc
ss
fcmovne
jbe
or
je
jg
mov
jle
lds
or
mov
mov
ret
mov
pop
into
ja
inc
adc
or
xchg
add
add
mov
out
push
jb
jo
lock
push
push
call
add
insb
push
ss
dec
in
ds
inc
inc
jp
sbb
pop
add
push
adc
pop
les
aam
cmc
aaa
dec
fstpl
out
cld
repz
mov
insl
shr
jbe
push
jnp
jns
cmpsl
es
pop
int3
mov
rcrb
fchs
push
aaa
fwait
push
jl
rcll
mov
mov
push
pop
jle
cmp
push
dec
pop
or
loopne
call
push
cld
fimuls
sahf
outsb
mov
lsl
mov
adc
stos
pop
leave
stos
bound
mov
pusha
mov
popa
js
test
push
mov
decl
jne
je
xorb
xchg
mov
int
fildl
and
xchg
les
dec
mov
out
push
hlt
xchg
push
shrl
aas
or
add
pushf
mov
adc
xor
cli
push
notb
jl
lcall
sub
mov
push
hlt
sub
rcrb
dec
mov
lcall
adc
mov
dec
dec
xor
push
fcomps
push
pop
mov
or
loop
ljmp
inc
aas
add
aas
mov
aaa
dec
lret
mov
aaa
mov
lods
push
std
mov
aas
or
aaa
jne
xor
add
or
xor
xchg
or
or
inc
scas
in
mov
fldt
mov
adc
push
jmp
push
fldt
xchg
je
and
cltd
xor
push
and
and
mov
inc
xchg
adc
jl
mov
xchg
add
xor
lods
inc
xchg
cmp
nop
test
inc
mov
loopne
cld
stos
mov
mov
dec
inc
mov
mov
cmc
inc
push
or
sbb
push
xor
cli
call
jbe
add
xor
sbbb
popw
sbb
xor
push
fcoms
enter
mov
push
ret
stos
scas
add
cs
push
mov
lods
add
data16
dec
enter
stos
int3
cmpb
push
push
mov
bnd
or
push
push
pop
dec
adc
mov
sub
dec
loopne
enter
mov
lret
mov
in
mov
pop
jle
inc
cmp
shlb
adc
push
cltd
in
mov
ds
sbb
add
data16
push
scas
xorb
push
mov
aam
inc
or
adc
shlb
test
inc
fcom
aaa
mov
sbb
js
jbe
xchg
test
push
data16
testl
push
xchg
pop
stos
fisttps
sbb
xor
ljmp
push
add
add
nop
cmpsl
ljmp
testw
inc
je
mov
or
mov
sbb
aaa
cld
fmull
mov
jmp
repz
into
cmp
fimuls
add
lods
call
xor
sub
dec
sbb
xchg
ss
mov
decb
or
bound
int3
call
mov
out
add
adc
cmp
movsl
imul
pminsw
mov
jmp
cmp
adc
es
push
dec
and
in
sbbb
loope
jbe
adc
mov
clc
cs
xchg
test
and
jb
inc
mov
fnstcw
push
inc
jge
cmp
mov
add
pop
cmc
sarl
cmp
mov
repnz
cs
cmp
xchg
repnz
aad
push
sahf
push
jle
sub
stos
clc
mov
lock
adc
out
inc
add
lcall
adc
nop
test
mov
in
popa
push
nop
stos
fsubrs
js
lcall
call
cmp
lock
int
inc
es
or
sbb
cli
mov
push
stos
xchg
mov
mov
nop
cs
sti
call
adc
sbb
pop
jp
push
adc
pop
adc
adcb
cli
or
inc
les
or
push
into
outsb
pop
ljmp
es
in
andb
shll
in
push
mov
scas
adc
aam
adcb
fdivl
dec
mov
mov
scas
fwait
lret
adc
je
test
mov
insb
out
cld
nop
cli
int3
idivb
inc
inc
xor
xor
shl
mov
jbe
aaa
and
adc
ficomps
push
in
cmp
mov
cmp
push
pop
push
jge
add
or
or
daa
ljmp
mov
push
pop
call
xor
adc
repnz
xchg
ljmp
loopne
ds
loope
mov
push
call
in
pop
call
push
sub
je
lret
adc
loopne
jmp
mov
and
pop
jo
ret
enter
push
ret
push
clc
mov
push
mov
out
push
enter
and
rolb
sub
stos
push
call
out
push
push
add
jmp
push
xor
les
call
push
mov
pop
or
in
pop
icebp
sub
pop
aaa
cli
inc
mov
ja
mov
mov
sbb
fidivl
ds
push
std
je
cld
mov
and
daa
mov
clc
and
gs
pop
pop
daa
cmp
and
sbb
pop
mov
and
loopne
xchg
mov
lock
dec
dec
out
and
inc
outsl
je
mov
vmread
stos
mov
fstpt
mov
fadds
dec
dec
in
repnz
imulb
inc
add
or
iret
fidivrs
jb,pt
push
shll
pop
mov
add
jg
add
add
outsl
bnd
mov
mov
inc
xor
jmp
sbb
mov
sti
adcb
mov
ja
lret
pusha
mov
adc
jne
jae
ds
push
in
mov
mov
mov
or
dec
outsl
sub
je
cmp
mov
or
gs
push
add
jl
inc
lea
cmp
sar
or
es
mov
data16
repz
xor
inc
dec
cld
shrb
add
sti
aaa
fmulp
cltd
mov
cltd
add
rcrb
cmp
test
mov
loopne
aam
enter
xchg
pusha
pop
popl
add
jbe
insl
and
mov
stos
enter
add
lock
je
aam
xchg
std
push
lock
cltd
sub
cld
movsb
aam
divl
push
lret
mov
movsl
xchg
fcmove
lcall
push
ss
jne
stos
fstpt
mov
pop
jnp
loop
cmpsb
hlt
pop
push
xor
in
lea
scas
fdivs
mov
mov
fidivrl
pop
clc
push
movb
xor
out
jg
add
icebp
outsl
inc
aad
mov
jne
fcmovb
pop
test
sub
adc
ret
add
rorb
inc
mov
xor
clc
jmp
ficomps
out
add
cmp
jbe
jmp
xchg
pop
xchg
out
jbe
ds
cmp
lock
xchg
cld
icebp
mov
jne
mov
cltd
cmp
jne
sbb
sbb
in
cmp
xor
into
jmp
ja
inc
ss
js
xchg
testb
pop
add
add
cmp
jae
fistpl
fs
adc
or
mov
outsl
xor
mov
add
shr
or
insl
loop
and
inc
xchg
shrb
dec
loop
jg
ljmp
inc
add
clc
and
add
mov
in
mov
inc
sbb
lea
adc
mov
mov
insb
fcompl
ret
mov
out
mov
ds
jbe
add
lock
sbb
xchg
hlt
push
mov
push
neg
dec
pop
push
cli
dec
cli
lea
xchg
inc
vandps
xchg
out
xchg
lods
into
mov
dec
je
mov
and
push
out
es
movsl
cmp
mov
add
cld
push
mov
pop
xchg
cli
push
sub
pop
mov
mov
test
data16
negb
sub
fildl
aam
aam
sub
ret
add
cld
dec
mov
pusha
or
movsb
push
pop
xchg
imul
xor
pop
int3
jmp
stos
xchg
jno
loopne
jmp
fiadds
cmp
add
or
add
push
jle
pop
push
rolb
insb
sbb
pop
imul
cmp
dec
lea
xchg
fdivrs
loopne
clc
bound
jle
or
negb
adc
add
call
xchg
lods
es
mov
inc
xchg
cmp
mov
ss
pop
and
dec
imul
inc
out
jo
or
pop
push
insb
inc
mov
inc
dec
shll
xchg
lods
jp
xchg
add
scas
push
push
loop
loopne
push
aas
test
sub
cmp
mov
add
push
push
call
xchg
inc
push
sbb
lcall
popa
xchg
xor
lcall
xor
or
loopne
das
mov
xor
push
sub
outsb
call
fisttps
xorb
cli
jg
or
sbb
movsb
push
inc
push
jl
int3
inc
cld
clc
adc
movl
xchg
dec
loopne
pop
in
dec
mov
and
sbb
xor
mov
divl
sbb
aad
fldt
cld
push
ljmp
iret
in
flds
call
call
aas
push
lods
sbb
scas
call
add
adc
inc
testb
dec
cmp
fcomps
xor
ficoms
scas
or
jmp
or
add
mov
xchg
out
mov
in
dec
fwait
cmp
or
movsl
adc
ds
push
pop
stos
pop
sub
outsb
mov
mov
dec
pushf
inc
xchg
sbb
es
jl
push
sbb
test
xchg
into
call
mov
sub
loopne
push
or
into
shr
push
lcall
cld
or
mov
and
loop
hlt
lret
div
xor
rcl
add
add
push
cmc
sbb
out
adc
fildl
aaa
and
push
cmp
pop
or
lret
jo
test
in
imul
sub
push
pop
lods
loope
lret
dec
call
or
ja
cltd
jge
inc
mov
das
out
or
scas
lea
scas
mov
inc
mov
dec
test
mov
sub
xor
mov
push
add
xchg
sub
sbb
mov
loop
push
dec
int
leave
pop
repnz
jb
rolb
push
into
imul
scas
xchg
je
cmp
jle
mov
push
in
push
lods
add
scas
lock
fmulp
out
adc
push
shll
lret
mov
iret
adc
xor
loopne
push
or
imull
push
ss
jmp
call
add
lds
and
shrb
push
push
dec
lock
data16
add
mov
fsubrs
das
inc
testl
scas
push
add
daa
or
das
pop
mov
fucomi
inc
ja
pop
cs
dec
shlb
out
sub
xchg
mov
mov
fs
cmp
outsl
loopne
or
inc
jge
mov
les
or
dec
ds
push
or
cld
arpl
fwait
lods
fstpl
cmc
wrmsr
hlt
and
test
adc
lds
aam
aam
std
lea
mov
mov
and
or
int3
int3
outsb
inc
mov
dec
mov
push
pop
scas
mov
int
xchg
roll
or
push
xor
call
out
dec
imul
sub
out
lahf
cmp
ret
xchg
sahf
push
inc
xchg
add
or
push
or
test
pop
subb
push
dec
flds
xlat
push
lea
add
subb
add
addl
das
mov
cmp
add
xchg
fldl
add
add
push
mov
test
aam
test
loop
cmp
imul
and
add
out
arpl
pop
adc
cmp
out
inc
sbb
inc
jno
imul
pop
lea
lret
insl
push
es
mov
push
jle
leave
sbb
jbe
push
pop
add
inc
lahf
add
add
mov
aam
subl
or
pop
adc
pop
push
jno
out
push
iret
rclb
call
lcall
push
call
adc
pop
or
jb
or
adc
sub
mov
xor
fmull
mov
cmpsl
addb
icebp
or
clc
fldl
scas
shll
cmp
inc
inc
insb
fadds
jle
add
inc
mov
add
addb
sub
js
jo
or
mov
test
cwtl
xchg
add
mov
cmc
cmpsb
mov
lea
incb
js
or
cs
add
and
jne
pusha
addl
fiaddl
rol
adc
lret
xor
out
sub
mov
adc
les
and
adc
mov
dec
sbbb
adc
bound
adc
into
add
les
or
dec
adc
xor
xchg
push
xchg
fisttps
and
jae
test
sarl
mov
push
and
push
pop
ds
add
jae
or
js
adc
push
jne
dec
push
mov
andl
and
imul
rolb
mov
loop
push
leave
sub
leave
cmp
cld
shll
jmp
xor
mov
les
and
mov
push
lods
mov
jbe
add
loop
cmp
flds
add
inc
mov
dec
adc
cmc
mov
jbe
push
hlt
and
or
mov
aam
and
cmp
aaa
je
outsl
out
cmp
imul
sbbl
cmpl
filds
rorb
idivb
js
xor
xorl
mov
push
je
add
or
add
stos
lea
mov
inc
lock
addl
into
repz
fs
add
movsl
je
cld
xchg
rcrb
out
add
int3
jge
push
pop
dec
fs
imul
mov
push
sub
xchg
es
add
push
mov
sub
add
and
sti
xchg
add
xchg
push
enter
in
mov
ljmp
repnz
adc
mov
loop
fwait
or
int3
jb
sub
xchg
rcrb
pop
jle
lret
out
roll
sub
cmpb
xor
xchg
add
adc
mov
push
lock
pop
cmp
ror
aam
inc
lock
pop
or
jne
sub
mov
inc
cmpl
dec
inc
inc
or
push
in
sbb
ret
mov
sbb
or
aaa
mov
shlb
in
push
sbb
push
xchg
add
loop
fcoml
sbb
incl
jae
ret
test
mov
cmp
and
sub
push
sub
arpl
jbe
jg
sahf
add
out
mov
test
mov
std
outsl
fs
add
shl
jb
pusha
inc
mov
push
jns
pusha
pop
loop
pop
jbe
dec
fbstp
jbe
or
orl
jo
push
loop
or
sub
out
and
mov
int
aaa
mov
and
shl
clc
and
or
xchg
sbb
bound
and
hlt
push
xor
mov
add
cmpsb
cmp
mov
and
jmp
insb
dec
or
dec
dec
lea
int3
loop
mov
in
add
and
or
or
bnd
cli
insb
bound
jo
orl
jnp
adcb
adc
sti
js
lahf
add
add
loopne
mov
or
cmpb
jmp
ljmp
movsl
loope
arpl
add
jmp
jecxz
sub
in
and
jb
inc
mov
jnp
loope
cmp
mov
je
mov
stc
pusha
add
jne
pop
addb
adc
or
inc
mov
loope
mov
mov
loopne
pusha
add
loope
inc
xor
push
test
dec
or
cmp
stos
and
mov
fwait
je
out
jmp
das
fcoms
inc
jle
add
pop
xchg
cmpb
xor
adc
adc
repz
dec
pusha
stos
jmp
push
push
ds
sub
push
fiadds
loope
loop
mov
mov
push
push
dec
int3
sarb
icebp
push
movsl
jmp
cmp
add
push
negb
add
xor
inc
jl
push
cmp
jg
cld
outsl
add
jmp
ds
test
and
jge
pop
loopne
add
jl
and
stos
dec
loopne
idiv
push
rcr
cld
je
imul
cmp
pop
add
ss
cs
adc
sub
insl
loopne
andl
jmp
mov
subl
rcll
loopne
jbe
add
and
jo
push
sbbb
inc
loopne
sbb
mov
mov
sbb
cli
dec
xor
add
imul
mov
insl
adcb
add
mov
gs
pop
test
add
mov
insb
add
push
add
push
cmc
jmp
mov
adc
mov
shlb
push
add
add
pop
mov
or
and
add
and
ret
push
mov
cli
dec
add
push
mov
sbb
sub
mov
mov
fadds
ss
mov
jbe
add
test
rorb
mov
loopne
pusha
xor
mov
add
loope
mov
push
jecxz
or
and
outsl
xchg
jle
sub
mov
mov
add
push
popa
pop
push
push
test
add
pop
xor
mov
jbe
jl
add
adc
mov
push
lret
stc
in
xor
jg
arpl
jb
adc
loopne
sti
loopne
sub
bound
icebp
mov
push
add
clc
sub
xchg
inc
mov
decl
enter
adc
sbb
scas
push
jecxz
in
lcall
adc
pop
add
sub
aaa
out
arpl
xor
mov
xor
add
sbb
jb
push
pop
or
dec
addb
mov
and
addb
push
outsb
mov
jg
mov
outsl
fwait
lock
sarl
and
mov
sub
add
jo
je
ret
fwait
aaa
sub
push
jmp
mov
sbb
adc
sbb
adc
cmp
lret
dec
cmp
mov
add
mov
jo
push
lock
xor
push
sub
adc
test
dec
dec
sub
and
cmpsb
fwait
or
sub
mov
dec
mov
data16
insb
sbb
movsl
cs
clc
and
sbb
and
jne
sbb
jmp
xchg
mov
clc
xchg
add
aaa
mov
call
mov
dec
in
lock
push
inc
fcoms
ret
add
adc
test
ss
outsl
push
cmc
mov
call
xor
lcall
xor
repz
pop
sti
rol
dec
cmpsb
xor
add
mov
mov
aaa
adc
call
cmp
mov
lahf
mov
call
cmp
rolb
mov
mov
mov
leave
jo
inc
jno
dec
cmp
add
or
clc
mov
jo
sbb
mov
lcall
orb
js
leave
cmp
data16
ss
inc
adc
jo
xor
push
mov
data16
add
add
jb
jg
adc
or
add
or
and
push
mov
add
inc
negl
add
pop
add
push
dec
push
sub
adc
inc
jecxz
xlat
xor
rolb
dec
xor
adc
push
pop
mov
inc
pop
mov
pusha
sbb
pop
outsl
addb
ljmp
imul
js
inc
jo
xorb
mov
ret
mov
enter
mov
testl
clc
aaa
adc
pop
int3
inc
mov
scas
mov
cltd
push
push
call
aaa
push
nop
mov
or
add
icebp
stos
inc
jo
mov
idivl
fwait
xor
jp
fwait
movsb
js
out
call
adc
sbb
addr16
jbe
xchg
xor
sbb
or
div
pop
mulb
or
push
lcall
mov
xchg
push
inc
lock
xor
inc
mov
mov
aam
sub
or
push
hlt
add
add
push
jl
and
and
push
sti
cmp
add
pop
inc
sub
add
bound
xor
inc
inc
or
clc
lcall
sbb
fnstenv
adc
and
jnp
pop
cmp
xor
inc
push
mov
inc
lock
ljmp
adc
xor
adc
inc
lock
das
xchg
push
adcb
add
cmpb
lock
pushf
ss
sub
mov
jg
mov
push
jo
xor
jnp
lea
and
fistpl
lock
sbb
lock
fdivl
pop
sub
test
lret
sbb
and
jo
push
mov
xor
jp
jo
or
shl
pop
push
pop
xor
mov
sub
mov
incb
mov
or
jg
in
and
je
or
lret
je
push
loopne
cs
mov
stos
cld
shll
enter
jo
lret
stos
adc
push
and
loopne
pushl
cmp
or
ljmp
daa
xor
inc
sahf
cmp
lock
push
xorb
sbb
icebp
mov
jno
push
push
psubb
ret
inc
test
jo,pt
or
xchg
call
sahf
xchg
cmpsb
scas
hlt
xchg
and
addl
jnp
cwtl
xchg
dec
add
lock
jl
or
xor
mov
mov
or
jge
sub
jbe
cs
fcmovne
inc
or
inc
push
pop
jp
add
push
test
mov
push
lcall
and
or
adc
idiv
add
add
push
push
lret
push
xor
push
aaa
lods
mov
cmp
jmp
fadds
mov
in
clc
dec
ljmp
xchg
dec
push
add
jo
xor
and
xor
lock
inc
inc
push
out
cs
mov
add
lahf
mov
mov
push
sub
cmp
lock
mov
dec
call
dec
jne
or
adc
jge
jg
or
add
add
dec
mov
adc
test
inc
jge
ficoms
mov
outsl
fbstp
lea
andb
lock
xchg
rclb
mov
mov
pop
cmp
jl
lock
xchg
push
or
stos
lcall
jo
dec
or
mov
push
lods
into
std
call
xor
lods
lea
or
clc
lock
push
sub
add
imul
and
lods
outsb
add
lea
push
cli
push
dec
bnd
cmc
lock
add
inc
rorl
push
mov
jg
adcb
icebp
adc
leave
inc
xchg
nop
notb
je
push
jbe
mov
stos
icebp
adc
jbe
cltd
cmpl
pop
je
mov
cli
outsl
jmp
push
or
aam
imul
push
push
sbb
inc
inc
shll
xor
movsb
adc
mov
lcall
mov
iret
xchg
or
fdivs
rclb
pop
cmp
pop
add
adc
mov
sbb
jo
mov
xchg
mov
lcall
or
inc
jo
sbb
inc
test
jb
dec
mov
mov
xor
loope
pop
sub
sbb
add
inc
and
aam
and
dec
adc
and
clc
push
aas
xlat
mov
gs
adc
add
call
dec
push
cmpsb
aas
cmpb
dec
mov
and
mov
adc
inc
or
scas
adc
xchg
dec
xor
xor
popa
sub
pop
add
cmp
xchg
rolb
jle
cmp
or
adc
push
dec
testl
movl
mov
jp
adc
xlat
xor
sbb
xor
add
mov
xor
call
xchg
sbb
insb
sub
push
sbb
test
mov
orb
push
mov
add
daa
jl
xor
lcall
lret
fdivrs
enter
push
xor
sar
and
ja
push
test
cmp
jl
push
jle
push
inc
dec
add
mov
les
mov
mov
sbb
cmp
mov
repnz
sti
call
xlat
or
adcl
scas
cwtl
test
sub
outsl
mov
add
or
dec
sbb
or
imull
sbb
loopne
inc
push
ljmp
lock
dec
sbb
testl
and
add
inc
dec
jle
loop
call
xchg
push
jb
mov
push
lret
sub
loop
and
idivb
mov
pop
and
mov
pop
adc
andl
lcall
dec
push
mov
push
dec
adc
push
push
sbbb
inc
int3
and
sub
add
adcb
jp
pop
out
aam
fdivrs
dec
add
sbb
enter
push
in
add
addb
adc
or
mov
or
sbb
mov
push
fstpl
xchg
mov
mov
inc
out
sbb
andl
xchg
pop
ficompl
or
add
and
adc
cmp
xor
mov
dec
or
notl
scas
xor
push
and
bound
iret
call
push
mov
and
add
or
andb
add
cmp
fisubs
daa
test
inc
add
xchg
gs
pop
rorb
add
mov
test
xor
jo
sbb
xchg
leave
nop
call
pushl
push
iret
shr
dec
out
inc
jnp
inc
sbb
add
or
and
sbb
sub
test
cmp
imul
rorb
push
dec
add
sub
lcall
lret
add
in
stos
add
jo
cmpb
je
lcall
je
or
cmp
push
jb
adc
leave
rcl
xor
rorb
cwtl
push
mov
mull
lock
std
rclb
mov
imul
and
push
jb
jmp
push
jnp
mov
test
push
adc
sbbb
mov
xchg
push
inc
ret
movsb
and
outsl
divb
pop
dec
mov
das
inc
sub
repz
rorb
out
roll
call
xor
rclb
inc
movsl
inc
hlt
mov
lcall
in
or
xchg
adc
push
lret
repnz
js
pushf
lcall
jmp
outsb
and
sub
andb
cmp
sub
ja
xor
inc
stc
rorb
push
scas
call
mov
mov
je
dec
add
test
fstps
aas
lds
imul
flds
adc
ret
dec
push
jmp
popa
or
sub
jne
lods
call
fildl
lea
call
xor
iret
mov
xchg
pop
sub
fldenv
jnp
sti
push
adc
pop
xor
in
or
mov
and
mov
sub
mov
movsb
inc
dec
xor
lea
inc
sbb
rorb
inc
adc
cmp
in
mov
mov
dec
sbb
jp
fdivrp
mov
sbb
pusha
and
xchg
mov
jbe
adc
xchg
jle
cmpsb
testb
stc
push
loop
test
adc
adc
fs
jmp
sbb
dec
xor
or
and
xchg
or
pusha
orl
push
dec
adc
call
cli
gs
pusha
jp
daa
lea
xor
pop
loope
add
mov
push
hlt
jbe
inc
sbb
test
adc
jmp
subb
popa
add
push
test
sub
cmp
out
and
xor
sbb
push
xchg
xor
add
adc
lahf
mov
ss
and
testb
xor
add
adc
inc
xor
jg
sub
jp
out
sbb
push
call
jne
in
call
sbb
and
loope
je
fidivs
push
add
loope
bound
mov
mov
stos
inc
ljmp
sub
adc
add
pusha
jg
outsl
bound
or
ret
mov
pop
sbb
push
pusha
mov
push
push
ss
pusha
sub
cwtl
pop
arpl
jo
dec
insb
push
or
dec
mov
stos
nop
or
xor
insb
ljmp
stos
push
mov
std
cmp
inc
xchg
cmc
xor
push
outsb
test
mov
lods
jne
sti
mov
aad
mov
adc
cld
dec
mov
lock
and
ds
jnp
or
or
jnp
call
loope
push
and
pusha
mov
imul
mov
dec
and
mov
sub
mov
insb
sub
push
test
add
stc
push
mov
into
sbb
pop
fsubs
mov
addl
add
cvtps2pi
and
xor
push
call
jmp
jmp
xchg
inc
adc
cmp
incl
push
inc
adc
jg
push
jbe
add
inc
stc
pop
xchg
mov
pusha
lret
cltd
movsb
sbb
loopne
and
jle
sti
or
add
push
neg
add
shlb
ret
lea
pop
push
notb
adc
call
mov
jl
mov
sahf
in
js
and
jl
pop
les
inc
xchg
sbb
mov
or
leave
ret
bound
pop
nop
lcall
add
jmp
inc
faddl
inc
add
ffree
or
add
add
aam
jae
pop
into
sar
add
ds
jb
call
mov
xor
mov
mov
push
add
fcompl
neg
lods
sbb
add
fmul
push
add
orb
pop
xchg
cli
mov
loopne
mov
mov
je
std
inc
inc
add
ss
mov
xchg
adc
jo
sub
stos
clc
mov
bound
dec
arpl
sub
push
push
add
andb
dec
rcll
scas
es
into
or
inc
test
sub
jp
or
pop
lret
test
add
inc
mov
adc
pop
cwtl
cmpsl
loope
jne
cmpl
push
xor
mov
psubsb
mov
adcb
call
lcall
and
stos
icebp
inc
mov
mov
into
movsb
hlt
mov
sti
addb
js
jbe
mov
jl
jb
orb
ss
inc
mov
es
jle
dec
es
xor
cs
jp
push
sbb
mov
roll
add
jle
adc
aas
mov
les
push
push
pop
mov
mov
add
sub
adc
shlb
data16
xor
add
jl
cld
cmp
sub
push
cld
xor
mov
xor
adc
fdivrl
ret
rol
dec
call
imul
shlb
out
add
sbb
mov
lods
enter
inc
dec
jmp
jo
adc
sbb
cmc
es
pushf
in
in
add
or
mov
and
xorl
adc
dec
push
add
add
fidivrl
cmpsb
mov
push
loopne
fdiv
mov
mov
adcb
fildll
pop
pushl
xchg
jbe
mov
pushf
adc
insl
xchg
pop
push
add
or
sbb
scas
mov
cmp
push
cmp
push
call
sub
xchg
mov
add
or
add
popa
xchg
aad
mov
sahf
sbb
addb
dec
push
aas
sub
addb
adc
sti
out
jp
push
jb
inc
jmp
jo
inc
or
xor
sub
and
lcall
push
add
pop
jo
pushl
xor
call
std
jo
je
xor
add
and
push
jle
xor
pushl
xchg
push
lods
inc
aaa
mov
lock
push
outsb
push
dec
sbb
call
jl
test
cmp
cwtl
clc
sub
sub
pop
push
loopne
mov
jmp
sub
lcall
or
or
mov
fs
call
add
sahf
add
movl
adc
call
mov
push
cld
mov
imul
es
xor
out
xor
add
pop
cmp
xor
jne
mov
dec
inc
adc
inc
addl
testb
jo
jne
adc
jmp
inc
mov
and
test
add
jne
jo
lock
jl
pusha
mov
push
jne
cmp
jne
push
add
and
cmp
and
add
mov
jge
jl
xor
cmp
add
loopne
arpl
in
jbe
lods
push
mov
je
test
push
adc
jne
push
mov
sub
jp
cmpsl
add
addb
pushf
pushf
add
adc
push
xor
and
mov
sbb
cmp
rorb
outsl
dec
lea
rorl
or
mov
add
sub
jl
and
pop
loopne
mov
mov
mov
test
jo
orb
faddl
xchg
lock
xor
add
data16
mov
and
or
lock
adc
add
adc
addb
and
xchg
pop
and
xchg
nop
jbe
mov
inc
stos
sbbl
rcr
pop
cmpsb
das
mov
fadds
pop
mov
je
lock
mov
mov
lock
jmp
push
icebp
les
add
sbb
add
addr16
mov
lock
sub
pop
pop
jne
orl
lcall
test
cmp
mov
ret
push
lret
and
clc
push
lods
shl
dec
and
xchg
or
jno
loop
clc
jg
shlb
inc
call
push
mov
adc
add
push
xor
lock
scas
inc
cmp
mov
push
test
ljmp
mov
mov
repnz
xor
add
sub
push
dec
mov
mov
clc
push
push
test
adc
hlt
cld
mov
mov
jg
mov
lock
sbb
lea
or
add
adc
push
sub
andb
jo
push
inc
shl
xor
xchg
outsl
adc
cmp
xor
add
pop
xchg
pop
jl,pn
adc
lock
scas
testb
orb
clc
jb
scas
call
andb
mov
cltd
pushl
add
clc
dec
stos
test
mov
mov
notl
xor
out
bound
cltd
mov
movsl
jne
cli
inc
mov
adc
dec
jo
mov
out
and
and
push
mov
mov
lds
jmp
pushf
dec
aaa
daa
icebp
push
sbb
xor
inc
mov
pushl
fildl
inc
in
push
jno
add
and
sbb
or
rorb
dec
call
mov
adc
xor
cmpsb
cmp
mov
jb
xchg
pusha
add
rsqrtps
mov
lock
adc
in
pushl
lock
or
push
add
fwait
inc
add
add
incl
jle
jne
addl
sbb
stc
or
insb
std
outsb
fimull
xor
push
inc
jbe
jmp
cmp
fwait
push
xor
mov
jl
add
jle
subl
fbld
iret
cmp
push
fdivs
pusha
aaa
dec
xchg
sbbl
out
add
adc
or
or
dec
imul
adc
push
enter
adc
add
outsl
xchg
sti
add
aas
push
in
adc
jle
bnd
aam
clc
jmp
std
lock
jmp
xor
aas
addl
imul
adc
push
daa
mov
and
adc
mov
fs
jle
sbb
std
add
cs
mov
setne
nop
add
or
hlt
add
mov
sbb
jbe
cmc
pop
push
adc
bnd
push
add
pop
aam
std
mov
cmp
mov
clc
or
or
mov
and
mov
jne
jbe
lea
adc
inc
adc
mov
jb
shll
lret
mov
push
pop
stos
push
add
clc
pop
add
cmp
adc
inc
mov
cmp
mov
in
and
add
pushl
push
mov
jle
cmpb
mov
outsl
add
mov
jl
lea
test
and
out
jp
jo
test
andl
sbb
add
lahf
nop
push
dec
pop
push
cmp
mov
fcoml
pop
sahf
loopne
loopne
test
ss
je
aam
add
ljmp
andl
jl
mov
je
call
inc
add
jle
jb
add
sar
sbbb
add
add
ret
je
mov
adc
add
adc
mov
dec
ljmp
test
jp
mov
call
ss
add
sbb
mov
pop
jmp
add
repz
ljmp
add
mov
subb
outsb
je,pn
call
leave
adc
jbe
mov
pop
adc
xchg
pop
sbb
mov
xchg
pop
jp
cmp
loope
push
dec
pop
dec
xor
push
add
test
add
testb
mov
inc
adc
sbb
lret
add
add
loope
add
inc
in
push
push
xchg
add
or
outsb
test
dec
rolb
push
add
jmp
xor
pop
rorb
testl
or
icebp
add
jo
movb
sahf
loop
pushf
loope
in
or
and
mov
push
sbb
cltd
adcb
push
es
and
sbb
std
mov
jle
in
ret
push
and
or
sub
daa
ficoml
adc
xchg
sub
add
mov
aam
stos
int3
subb
push
cmp
inc
idivb
lods
call
inc
cwtl
into
xor
aaa
aam
insb
cmp
inc
repz
idiv
adc
mov
xlat
sbb
insb
in
lods
mov
mov
adc
cli
fcmovb
inc
scas
test
fimuls
sub
cmpsb
inc
ljmp
or
push
inc
or
mov
outsb
xchg
push
jne
lea
nop
add
sub
dec
lods
push
push
cmpsb
xor
test
in
decl
roll
adc
sub
aad
cmpb
or
filds
cld
xlat
clc
hlt
jmp
je
imul
jg
cld
cmc
mov
mov
imul
pop
sahf
mov
sbb
ret
fldt
and
push
mov
mov
js
lock
add
cld
add
es
jle
shlb
adc
push
inc
push
or
inc
mov
fdivrl
pop
stos
out
push
inc
cmp
sbb
sub
mov
pop
rorb
arpl
inc
sub
add
adc
movb
xor
movsb
ret
adc
jmp
imul
clc
mov
clc
jne
mov
or
fsub
and
sbb
out
add
imul
cld
lea
add
mov
jecxz
cmp
add
add
pop
fwait
or
cmp
jecxz
push
sbb
out
sarl
test
push
or
add
mov
adc
mov
jle
fmull
jne
aad
cli
dec
test
sarb
or
aaa
imulb
stos
mov
mov
pop
aaa
mov
mov
jecxz
mov
add
pop
push
add
pop
mov
xor
repz
movb
pusha
and
imul
xor
pop
jbe
and
dec
inc
sbb
mov
imul
addb
call
call
outsl
adc
mov
adc
outsb
shlb
mov
adc
add
mov
bound
ret
inc
mov
jg
mov
enter
push
pop
call
jl
aam
pop
loope
or
adc
push
sub
push
push
call
cmp
adc
leave
loope
add
pop
adc
pop
pop
sub
mov
mov
add
insl
and
push
lret
je
pop
pop
jae
arpl
mov
xchg
push
std
daa
add
sub
rorl
in
push
les
fwait
adc
inc
dec
test
lea
adc
cmp
inc
addr16
add
xor
jb
jne
mov
bound
pop
push
add
mov
inc
stos
add
shlb
sahf
add
add
jle
adc
jge
cmp
loopne
push
jo
adc
sti
ss
mov
xchg
int3
push
push
xorb
inc
call
inc
cld
mov
ja
fiaddl
xchg
or
call
aad
insb
pop
pop
cmpsb
pusha
jle
test
jecxz
xchg
stc
loopne
inc
and
mov
ret
sbb
lea
xchg
pusha
push
punpckhbw
adc
loopne
jbe
xor
test
incl
adc
scas
shrb
cmp
push
stos
pop
hlt
adc
push
or
xor
sbb
adc
xor
or
mov
in
in
lea
push
test
fidivs
cmp
call
sbb
sbb
or
pusha
sbb
lods
inc
std
add
sbb
mov
cli
lock
rol
pop
adc
jl
adc
sbb
dec
movsb
sbb
add
push
test
push
ret
out
nop
cld
pusha
xchg
call
push
adc
push
push
test
sbb
sbb
clc
cmpb
jle
bound
adc
push
push
jb
pushf
insl
lods
mov
sahf
pop
js
push
aam
test
mov
push
push
adc
scas
mov
sub
loopne
in
sbb
loopne
xor
mov
and
and
mov
sub
movsb
andl
add
jb
jge
incl
mov
pop
sti
mov
adc
popa
add
xchg
mov
aam
pop
test
push
shrb
and
cld
pusha
xor
push
pusha
add
or
movsb
movsb
lahf
push
sub
add
inc
out
hlt
daa
test
jbe
sbb
cmp
xor
lock
inc
je
pusha
jns
or
sbb
leave
clc
aaa
mov
pusha
or
test
insb
pop
adc
sub
xor
sub
lock
and
push
add
pop
add
inc
adcb
loopne
and
scas
adcb
mov
pop
lcall
mov
pusha
cmp
xchg
add
or
inc
ljmp
inc
and
je
pusha
sub
jp
dec
and
push
in
es
clc
push
es
jle
incb
add
jl
sbb
or
xchg
add
or
dec
add
mov
or
xchg
or
jle
mov
jecxz
pushf
add
inc
xor
pop
hlt
fsubl
push
lcall
add
stos
push
mov
inc
cmpb
outsb
add
add
data16
gs
decl
stos
loope
push
pop
call
and
das
mov
pushl
mov
mov
jge
sbb
mov
add
adc
jmp
mov
in
je
add
fs
repnz
pop
movb
sbb
outsb
add
or
push
inc
sub
sbb
insl
xchg
or
mov
adc
adc
clc
outsl
push
mov
sbb
inc
push
call
sub
dec
push
lcall
and
in
cmp
call
jno
lcall
pop
popa
jo
mov
and
xor
daa
icebp
ja
push
cmp
mov
mov
and
push
rcl
mov
rorb
nop
mov
inc
xor
aam
test
push
adc
sub
insb
and
mov
mov
cs
icebp
add
add
mov
xorl
jecxz
mov
lock
xor
daa
add
xor
lock
or
pop
sti
jg
push
push
jo
push
xor
push
enter
add
or
pusha
xchg
adcb
fistps
or
and
jp
mov
and
mov
pop
xchg
out
cmpsb
cmc
or
xchg
xor
dec
in
scas
int3
pop
xchg
sub
rcrl
cmp
inc
adc
call
es
insl
jl
cmp
add
hlt
jb
xchg
add
in
movsl
out
push
add
jo
pop
or
add
inc
jmp
adc
push
movl
push
inc
xchg
pop
dec
jle
lock
sahf
cmpsb
jecxz
out
push
mov
mov
and
movsb
mov
mov
in
and
sbb
mov
jo
call
add
push
mov
add
testb
jne
insb
add
pop
dec
sbb
add
mov
mov
ret
hlt
jmp
pop
or
jbe
cli
call
es
add
std
adc
fdivr
into
push
dec
mov
mov
loop
scas
add
das
add
cmc
mov
cmp
mov
mov
or
mov
push
call
sbb
lods
add
clc
push
push
ljmp
sti
orb
sub
xor
scas
jb
dec
sub
addb
popa
mov
pop
xor
inc
jge
push
xchg
pop
adc
adc
int3
pusha
es
xchg
push
jne
loope
incl
rolb
movb
jmp
ret
inc
test
jo
popa
mov
xor
hlt
popa
push
jo
push
andb
sbb
sbb
adc
or
orb
push
mov
add
test
inc
jecxz
jae
cmp
inc
js
mov
andl
inc
mov
adc
jbe
rcl
dec
or
lcall
mov
xchg
loopne
ljmp
jno
jbe
jb
aad
pop
add
mov
xor
enter
aaa
jmp
call
mov
call
es
mov
and
push
xchg
sub
and
movsl
and
xchg
fimuls
add
test
aaa
lock
inc
addb
es
clc
add
in
jno
cld
xchg
fdivrp
aaa
test
or
xor
inc
fcompl
xchg
add
out
add
rorb
loop
repz
lock
mov
stos
or
push
jo
adc
mov
adc
in
xor
push
mov
scas
jp
les
push
fwait
loop
fisubrl
mov
xlat
and
add
inc
add
std
cld
sti
push
adc
int
xor
jne
push
loopne
and
mov
or
dec
icebp
test
xchg
and
adc
enter
add
adc
mov
adcl
icebp
pop
add
andl
xor
cld
mov
es
mov
xor
inc
test
inc
dec
push
jo
out
mov
rolb
es
hlt
ffree
pop
inc
pusha
add
mov
pop
addb
mov
push
pop
sub
enter
movsb
pop
or
push
call
lret
pop
jo
ret
lock
inc
mov
pop
cmpxchg
fcomps
idivb
and
xor
dec
je
call
test
mov
xchg
or
or
xchg
data16
loope
mov
lret
xor
les
cmp
sub
fcmovu
clc
js
sub
cmp
out
dec
jo
sub
cmovge
inc
xchg
mov
pusha
and
out
fnstenv
loopne
mov
cmp
push
and
xchg
repnz
aaa
or
mov
cmp
data16
in
jbe
hlt
add
je
out
inc
or
jb
jo
adc
call
or
mov
push
movsl
incl
xor
xor
je
and
inc
sub
out
push
sarb
or
mov
or
out
mov
sbb
or
xchg
add
add
inc
push
push
jle
mov
call
or
and
add
push
mov
and
jb
inc
and
dec
mov
push
inc
add
and
lea
cmpl
or
push
add
jge
or
out
pop
jmp
add
sub
inc
and
inc
test
xor
xor
push
les
sbb
mov
xchg
ss
pop
mov
mov
aas
subb
ret
addl
outsl
and
lahf
xor
xchg
xor
outsb
sbb
inc
xchg
xchg
jmp
decl
cld
call
or
add
es
push
or
ss
cmp
insl
inc
lds
hlt
lock
enter
mov
add
pop
mov
mov
mov
mov
test
stos
je
inc
or
mov
lds
fsubr
mov
xor
int3
add
test
sbb
mov
lahf
imul
icebp
add
and
mov
xor
cmp
lcall
or
xor
mov
and
xchg
test
cs
add
pop
je
out
mov
dec
mov
add
hlt
mov
nop
jl
jo
push
addl
add
or
sub
shlb
addb
push
incl
cmp
push
shlb
mov
call
jo
xlat
mov
inc
mov
or
inc
xor
or
insb
mov
loope
xor
pop
stos
dec
stos
mov
pop
jg
or
mov
repz
pop
mov
or
cmp
pop
jbe
sub
add
test
mov
pop
or
dec
add
and
push
int3
fs
jo
into
jbe
test
or
xor
push
add
dec
pop
out
and
and
mov
xchg
aam
or
cmpsb
sbb
hlt
iret
push
scas
push
sbbb
pop
xchg
jo
xchg
xor
add
inc
or
stos
sbbb
mov
inc
push
orb
or
jb
xchg
and
lea
jle
aam
test
xchg
ds
mov
lock
pop
xchg
or
iret
or
cmp
das
adc
dec
push
pop
add
enter
and
xor
rcl
in
dec
jo
xor
cld
out
ja
mov
mov
inc
or
jmp
push
cli
push
sbb
or
int3
xor
dec
rorb
ret
adc
push
rolb
sbb
sbb
scas
adc
or
rcrl
dec
mov
push
je
or
xor
mov
lock
adc
push
mov
adc
mov
add
mov
dec
push
push
cli
test
data16
inc
cld
add
add
or
testb
ss
push
jb
sbb
dec
sbb
ret
lcall
sti
dec
incl
cmc
incl
out
int3
mov
andl
pop
into
je
jp
cli
cltd
movl
mov
add
das
or
sbb
mov
dec
adc
push
loopne
adc
jl
xor
icebp
es
inc
sbb
push
out
sub
and
outsb
add
enter
push
into
in
outsb
jecxz
adc
scas
invd
sub
sub
loope
loopne
sbb
call
pop
es
mov
lea
push
push
sbb
call
mov
enter
pop
and
cld
mov
shlb
mov
adc
subb
cltd
hlt
inc
adc
fcomi
mov
pop
in
mov
test
ljmp
and
sub
out
push
decl
sbb
ljmp
pop
std
pop
jne
test
js
add
push
ret
xchg
or
pop
rclb
aam
add
test
jp
cmpsl
pusha
or
mov
pop
test
subl
incb
mov
and
fwait
cli
add
sbb
fildl
push
push
or
push
jb
lods
pop
xor
push
dec
and
mov
add
aam
repnz
sub
ljmp
cmp
mov
ljmp
mov
cli
fwait
jae
xchg
inc
add
xchg
fcoms
adc
mov
inc
ret
ret
sub
jp
sbb
rolb
movsl
clc
or
mov
rclb
sub
sub
push
xor
push
ret
popa
push
shrb
clc
test
arpl
dec
mov
add
es
mov
sub
call
add
cld
adc
clc
ret
test
shlb
js
add
xchg
pop
or
ja
jo
or
xchg
call
roll
loopne
daa
add
call
dec
scas
aam
mov
in
mov
xchg
push
mov
push
shl
dec
shrb
add
ret
sub
stos
mov
mov
push
jbe
add
fstpt
pop
adc
inc
inc
or
sub
jbe
or
push
or
cwtl
mov
ljmp
testb
ret
inc
jne
ret
or
push
shlb
inc
adc
mov
andb
add
loopne
sahf
repz
jle
mov
insl
lods
or
mov
rcrb
or
sbb
push
mov
mov
loope
add
mov
into
xor
shr
or
inc
pop
xor
mov
loope
or
and
add
jg
imul
add
call
pusha
sbb
mov
cmpsb
push
frstor
jl
fs
mov
push
loopne
jo
add
and
call
pop
mov
jge
jbe
clc
in
xchg
add
mov
lret
xor
push
dec
lcall
or
incl
loop
call
addl
and
pop
cmp
sbb
clc
out
addb
and
or
sar
idiv
or
cld
cld
dec
push
and
loopne
add
bound
mov
testb
xchg
push
cmp
jle
loope
aas
imul
or
and
jnp
aaa
add
int3
js
hlt
cmove
ja
sub
fldt
inc
inc
enter
dec
or
sbb
loopne
clc
fiaddl
sub
push
jo
add
add
js
xchg
mov
dec
xchg
add
and
push
push
outsl
ljmp
pop
mov
inc
push
divb
xchg
jo
call
pusha
clc
mov
out
bound
xchg
adc
clc
mov
loop
add
std
pusha
cmp
addb
cld
mov
mov
in
adc
mov
popa
adc
insl
call
sbb
or
mov
or
es
and
sbb
xlat
xor
adc
mov
sub
adc
and
pop
and
out
pusha
add
mov
jg
sub
inc
jge
add
nop
psubsb
in
pusha
pop
insb
add
das
xor
clc
call
or
lods
ljmp
testb
inc
mov
adc
add
inc
out
shlb
insl
clc
push
push
out
bound
inc
pusha
arpl
jo
push
sub
sbb
insl
adc
mov
test
push
xlat
push
mov
inc
sbb
add
icebp
aam
arpl
test
cld
and
mov
rolb
bound
and
pop
push
inc
in
pop
xor
shlb
ss
or
xchg
int3
nop
test
sbb
daa
into
orb
pop
js
cmpsb
jmp
jmp
in
cmpsw
lea
inc
fs
loopne
in
mov
cmp
rclb
das
mov
pop
lahf
decl
int3
or
and
loope
adc
adc
pop
loopne
push
subl
je
sbb
fmuls
ljmp
stc
sub
orl
push
push
mov
sub
push
arpl
fimuls
inc
pop
sub
pop
sbb
pop
mov
adc
in
jbe
notb
pop
sub
push
ret
pop
jle
sbb
dec
push
xor
test
mov
int3
xor
adc
lret
es
adcb
and
xlat
sbbb
cwtl
mov
dec
pushf
hlt
or
sti
mov
xchg
jno
es
call
mov
adc
aas
mov
mov
push
add
jmp
add
cmp
lock
stos
in
jg
inc
jo
aad
mov
and
jbe
movb
loopne
into
sarb
push
add
jae
jle
int3
ds
lods
pop
lods
mov
incl
add
clc
call
sub
aam
mov
adc
pop
push
jae
mov
push
mov
lret
adc
std
pop
roll
or
mov
jnp
movsb
les
fdivrl
adc
jg
ret
loopne
mov
daa
jmp
inc
and
idivb
adc
add
mov
or
out
mov
testb
int
mov
jmp
add
scas
js
cmp
jo
jns
rclb
mov
lea
sub
push
mov
push
lcall
push
add
push
sub
adcb
push
or
and
sbb
fildll
in
mov
xor
call
je
and
incl
cli
imul
pop
xor
loope
push
xor
lret
mov
sub
andb
rolb
loopne
dec
or
mov
adc
mov
repnz
jmp
sub
sahf
rolb
adc
adc
and
outsl
popf
xchg
mov
mov
mov
stos
push
mov
or
mov
jo
mov
add
adc
lea
aam
dec
into
push
insl
sbb
inc
sub
lods
adc
outsl
shlb
mov
xor
adc
pusha
jne
cmp
or
daa
test
or
cmp
stos
and
cmp
mov
adc
xor
mov
pop
adc
mov
push
jo
adc
or
pop
pop
add
add
jmp
mov
mov
sub
and
bound
jl
sub
add
push
mov
jmp
es
aaa
sti
pop
mov
adc
pop
lock
test
sbb
pop
mov
adc
call
or
add
je
and
int3
inc
aaa
add
outsb
hlt
and
popa
test
sub
mov
jg
imulb
inc
mov
pop
jne
jbe
pandn
sub
adc
cmp
jbe
mov
pop
pop
mov
jmp
cmpsl
cmc
lds
pop
js
add
adc
xor
push
inc
std
cmp
or
adc
add
xchg
push
je
in
mov
dec
dec
ret
pusha
neg
fisubrs
mov
addb
xor
lea
mov
dec
jge
add
scas
clc
sti
sti
add
xor
call
xor
je
imul
push
add
add
cmpl
cmp
xchg
mov
mov
inc
jae
inc
mov
sub
add
flds
clc
adc
mov
sub
aas
dec
dec
hlt
mov
lock
push
add
add
push
mov
es
adc
push
adc
inc
jo
cmp
call
call
push
mov
sub
push
push
mov
pop
jmp
bound
add
inc
add
xor
jb
xor
and
repz
js
ds
rcrb
sub
call
xlat
lea
xchg
out
mov
jo
push
andb
mov
notb
xchg
xor
push
or
sbb
jg
jmp
xor
out
adc
add
xor
pop
enter
shll
mov
jecxz
pop
mov
loope
sub
mov
fldcw
mov
fdivrs
ds
mov
or
sub
mov
das
clc
mov
jl
push
push
in
sarb
push
inc
repnz
pop
lock
or
cmp
mov
inc
rorb
push
sbb
lahf
and
fildl
adc
sub
lock
cmpl
inc
push
testb
cmp
cmpb
stos
shll
push
lea
inc
lcall
push
subl
adc
xchg
mov
push
sbbb
shl
aam
jle
push
push
push
jb
cltd
popa
test
push
xor
push
add
cmp
scas
xor
push
sbb
cld
mov
pop
and
mov
push
pop
mov
push
mov
rol
cld
xor
lcall
adc
pop
or
into
xchg
addl
test
xor
into
push
rorb
ss
clc
out
xchg
not
xor
mov
mov
and
lock
test
jmp
add
push
cmp
in
add
icebp
movsl
in
adc
pop
add
addl
push
sbbl
test
adc
adc
add
cmc
add
and
jmp
loopne
jle
push
adc
aam
or
jbe
fbld
mov
sbb
fsubrp
loope
cmp
sbb
outsl
sub
jo
cs
ficoms
adc
mov
aas
gs
and
aam
jle
pop
inc
imulb
ret
leave
cmp
or
into
push
add
jno
clc
mov
insl
scas
in
clc
xor
ret
or
aam
mov
cli
loopne
jne
pop
add
lock
mov
jo
mov
adc
faddl
pop
dec
inc
pop
and
add
or
pop
push
push
cmp
inc
icebp
and
test
dec
push
adc
xchg
cmpsl
lea
inc
addl
or
es
or
add
lock
and
mov
adc
adc
mov
mov
push
adc
mov
mov
mov
adc
mov
mov
mov
js
and
push
adc
and
ss
dec
push
mov
cli
hlt
fnsave
repz
xchg
fld
add
and
mov
lcall
das
fdivr
add
cmpsb
ret
addl
jno
aad
xchg
cwtl
lods
int3
lods
fucomi
xor
sbb
mov
add
inc
add
cltd
push
sub
sbb
push
xor
fsubrs
bound
outsb
je
add
jbe
xchg
std
sub
aam
test
mov
pop
xchg
lock
cmc
pusha
mov
add
ficoml
sarb
push
pop
lcall
flds
lock
xchg
mov
push
call
call
ljmp
and
adc
jle
fmull
scas
outsb
ret
sbb
call
mov
cmp
push
mov
add
scas
icebp
popf
js
add
add
imul
inc
movsl
out
add
add
scas
lds
add
fildll
rorl
and
mov
inc
add
sbb
scas
test
or
push
add
les
hlt
cmp
add
sub
jmp
inc
andb
add
or
pop
loop
sbb
sub
andl
mov
or
cli
add
push
pop
pop
cwtl
into
adc
daa
push
outsl
out
ret
and
popf
xor
data16
or
sbb
daa
pop
push
and
mov
sbb
ret
push
jne
and
or
sbb
xchg
test
sub
mov
rolb
inc
mov
movb
push
dec
jbe
add
dec
mov
xchg
lods
xor
pop
addb
cmp
xor
add
call
jg
clc
out
lret
rcll
ret
in
call
dec
aas
add
adc
add
mov
push
pop
push
aaa
lret
dec
mov
test
inc
mov
std
je
decb
sbb
sbbb
cmp
loopne
add
call
in
inc
push
cmpb
push
mov
in
or
ret
and
lea
pop
add
test
add
mov
mov
je
or
add
fcoms
sub
or
jb
mov
push
xchg
or
mov
cmp
sbb
and
orb
lcall
ret
sarb
pop
cld
data16
ret
rol
ljmp
xchg
sbb
addb
mov
and
push
enter
and
call
arpl
xchg
ds
shrl
ret
or
shrl
cmp
clc
sti
shlb
mov
mov
cld
mov
sahf
push
mov
hlt
es
mov
dec
cli
int3
rorl
je
adc
cwtl
and
fs
clc
adc
ret
or
or
or
outsl
push
test
into
adc
mov
and
add
add
popa
push
jle
push
fsubrl
adc
shll
test
push
push
int
sbb
pop
add
push
subb
je
roll
add
cwtl
rcl
clc
outsl
sub
rcll
pop
ret
adc
ss
clc
shlb
mov
hlt
jne
cs
push
enter
sub
scas
adc
mov
and
aaa
jle
aam
inc
pop
ss
inc
call
lret
popa
and
lcall
aad
adc
stos
test
jnp
add
xor
dec
repnz
push
pop
mov
sahf
hlt
jp
mov
dec
call
xchg
cs
out
xor
or
sbb
adc
cmp
dec
push
loop
jmp
xor
pusha
add
and
jp
jne
or
ja
push
jne
out
pusha
push
inc
lahf
or
or
orl
xorb
cmp
xor
in
ja
out
in
push
shrb
push
call
stos
mov
add
jno
inc
pop
or
test
lea
fs
call
sti
mov
call
add
add
test
sub
dec
inc
into
sarb
jle
xchg
fsubrs
add
pusha
jle
add
into
andb
insl
addl
lock
mov
lock
iret
loopne
add
aaa
or
call
pop
mov
loope
add
jle
push
lcall
mov
sub
inc
pusha
cmp
add
loopne
loope
lret
hlt
add
push
ljmp
adc
int
nop
popa
pusha
pop
fiadds
mov
cmp
xor
push
bound
mov
jmp
jbe
nop
xchg
push
mov
inc
or
cmp
dec
or
lds
or
ss
nop
cs
and
cli
call
sbb
das
fs
movsb
add
pusha
cmp
push
cmp
sbb
pusha
into
cmp
push
add
int
cmpsb
std
pop
push
add
js
rorb
lods
es
jle
xor
mov
test
push
inc
into
and
and
inc
mov
aam
xor
adc
dec
pusha
mov
gs
add
and
jg
add
aas
inc
loope
rcrl
inc
add
and
inc
xor
xor
sub
push
add
loopne
call
push
mov
add
mov
inc
add
push
pusha
cmp
or
jne
jg
fimuls
pusha
jno
adc
out
pusha
or
add
jmp
loop
add
mov
rorb
prefetcht1
sub
mov
and
ljmp
inc
add
stos
sbb
pusha
adc
or
cmp
mov
or
inc
pop
inc
js
loope
mov
mov
and
dec
or
pop
gs
mov
das
mov
mov
xchg
jp
push
loopne
ret
pop
jo
leave
cwtl
lea
loopne
mov
or
cmpsb
inc
pushf
mov
inc
jp
xlat
leave
fidivl
andl
fsubl
jl
xor
mov
mov
xchg
add
fsubl
cld
pop
xchg
inc
pusha
cmpl
lock
hlt
das
pusha
sub
pusha
adcb
mov
test
add
cli
sub
and
mov
cmp
icebp
adc
and
xchg
jg
cmc
adc
add
subl
adc
pop
inc
adc
nop
ret
inc
cmp
lock
insb
adc
lock
sub
pusha
and
inc
adc
fidivs
es
pop
or
adc
cmpsl
popa
pop
xchg
sbb
push
mov
jl
add
fs
cmp
adc
cmp
sub
outsl
stc
addb
scas
dec
jmp
or
inc
pusha
sub
dec
mov
or
filds
mov
or
popa
pop
dec
dec
rcl
cmp
ret
mov
mov
inc
ficoms
fiadds
jne
mov
into
inc
push
ds
call
or
ret
mov
xchg
test
mov
xchg
mov
adc
mov
lock
xor
mov
inc
and
mov
sbb
jmp
scas
or
insl
mov
aam
adc
or
mov
movsb
decb
mov
test
je
push
fidivs
lock
cmp
scas
add
jbe
adc
add
pop
inc
add
pop
test
adc
stc
mov
inc
sbb
cmp
push
push
jo
int
add
jo
adc
cli
pop
xorb
je
std
xorb
sahf
pop
add
sbb
hlt
sbb
scas
cmp
inc
hlt
std
jo
test
test
aam
jb
push
out
jb
xor
xor
fistps
sarb
sbb
movl
mov
add
cmp
lock
insl
enter
clc
mov
lock
hlt
lock
pop
fwait
xor
test
add
xchg
icebp
call
cli
or
and
subb
inc
mov
bound
jo
int3
jbe
jb
inc
in
push
pop
lods
test
imul
pop
loope
lock
mov
lret
jo
add
sbb
adcl
pop
es
mov
test
and
cwtl
adc
test
inc
push
int3
in
xorb
add
clc
mov
mov
and
mov
and
inc
or
clc
call
push
adc
jnp
push
shlb
je
add
lods
fst
pop
hlt
pop
andb
push
add
test
xchg
insb
jbe
cmp
clc
int3
lock
adc
in
sub
icebp
dec
repnz
xor
jmp
and
outsb
mov
or
call
adc
add
jae
daa
into
sbb
div
call
pop
arpl
adc
cmp
or
dec
leave
mov
fimuls
add
and
jno
and
cld
add
jo
add
cwtl
sbb
mov
adc
insb
mov
jo
rorb
test
and
cwtl
out
push
or
rcll
push
adc
xlat
push
fdivrs
add
adc
mov
xorl
hlt
call
loop
aaa
cmp
mov
jp
fsubrs
xchg
jbe
cld
push
push
sbb
xchg
roll
repz
or
pop
insl
cwtl
jge
xor
fcoms
scas
inc
xor
sbb
clc
andb
xchg
mov
or
lods
adc
cwtl
pop
adc
sbb
gs
xor
lock
imul
mov
int
push
adc
xchg
mov
ds
and
sbb
xchg
mov
jb
add
enter
gs
and
jo
ja
push
call
ljmp
scas
or
xor
addl
or
insb
cmpsl
inc
lock
cmp
or
cld
xor
loope
test
call
cli
rol
test
in
les
inc
xchg
hlt
decl
xchg
and
or
subb
movsl
adc
xor
cld
idivb
ret
icebp
inc
sub
sbb
pop
test
lock
mov
call
pop
xor
sahf
andb
adcl
jle
ds
inc
cld
les
bound
lret
push
popa
jl
pop
xor
adc
inc
add
lock
mov
or
dec
add
ljmp
aaa
adc
les
stos
xor
sub
incl
push
mov
lods
jo
jecxz
and
mov
test
push
outsl
mov
icebp
mov
stos
inc
add
ja
adc
and
xchg
pop
jne
or
lret
gs
pop
iret
xor
dec
imulb
inc
decl
mov
test
orb
add
roll
push
jl
push
enter
add
test
lods
push
dec
ss
iret
push
push
xorb
mov
ret
add
stos
inc
pop
mov
push
pop
and
push
xor
ja
or
scas
mov
nop
push
add
push
xor
mov
cmp
adc
add
pop
mov
call
daa
out
mov
or
and
adc
add
aaa
adc
jg
lea
sbb
outsl
xchg
mov
mov
pop
or
call
inc
dec
dec
or
xor
cmp
push
jnp
std
adc
inc
sbb
aam
mov
inc
xchg
fidivs
pop
push
rol
push
xor
mov
add
add
clc
pop
loopne
or
dec
mov
out
sbb
dec
xor
bound
xorl
add
lret
add
jmp
inc
addb
inc
jmp
adc
xchg
nop
lea
jp
mov
xorl
movb
pushf
dec
mov
add
sub
mov
arpl
daa
pop
cs
bound
add
sub
sub
push
std
mov
loop
sarb
pop
fwait
cmp
outsl
lret
mov
jo
add
sbb
pushf
push
jp
leave
sbb
in
cli
inc
jmp
and
add
jo
mov
xchg
shrl
sar
idivb
mov
mov
in
push
mov
bound
jg
loopne
mov
push
call
xor
decl
out
mov
or
sbb
clc
push
xchg
xor
cmp
or
xor
int
mov
cmp
mov
inc
jmp
xchg
ljmp
adc
lock
push
push
call
xchg
sbb
mov
pop
push
fistpll
call
jb
xor
clc
leave
pop
call
xabort
jmp
add
movsl
mov
xor
test
push
pusha
xchg
loop
inc
jl
lock
lock
fistpl
aas
xor
add
xor
sbbb
jne,pt
or
and
jno
cwtl
icebp
dec
test
inc
icebp
sbb
mov
add
push
inc
xor
add
pop
xor
call
dec
sbb
insl
xor
pop
pop
lods
lock
or
adc
addb
sbbl
adc
inc
pop
test
mov
mov
inc
ss
jno
mov
and
in
loop
mov
clc
stos
shlb
or
and
add
fadds
addr16
adc
hlt
mov
ds
mov
out
xor
push
sar
movsl
push
loopne
inc
add
hlt
add
add
jbe
push
call
push
push
jbe
test
add
and
jns
out
jle
inc
xchg
cli
and
sbbb
add
rclb
mov
mov
jb
je
js
roll
dec
testl
ja
loopne
scas
jl
div
pusha
mov
xchg
add
and
rol
dec
daa
pop
cmp
pop
mov
or
mov
inc
nop
xor
inc
movsb
xchg
sub
push
loop
and
adc
add
sub
add
ret
adc
sbb
pop
fmull
roll
fwait
mov
scas
out
cltd
sub
push
int3
jmp
add
mov
mov
pop
ficoms
mov
push
mov
add
add
adc
add
push
cmp
pop
xor
mov
push
inc
adc
mov
stos
into
mov
mov
pop
sbbb
fcoml
mov
clc
decl
xchg
cmp
hlt
jmp
sub
inc
ljmp
and
cmp
shlb
add
sub
sub
push
bound
icebp
mov
add
and
lock
xchg
inc
sub
inc
jae
and
xor
push
and
outsb
dec
push
push
sub
ljmp
cs
dec
adcb
lea
std
lea
sbb
shll
outsl
pop
fidivl
xchg
jg
and
mov
adcl
xlat
xchg
mov
cld
rolb
add
pusha
xor
jecxz
sub
inc
push
rorl
addb
cmpsb
push
loopne
or
mov
mov
test
mov
push
fdivp
xor
int3
and
inc
out
shll
sub
lock
call
adc
inc
xor
shr
add
lock
mov
push
push
or
nop
add
dec
cs
popa
in
cli
or
ljmp
movsb
insl
int
pusha
inc
movsl
rcrl
add
dec
xchg
push
pushf
loop
jmp
call
push
dec
testb
inc
sbb
mov
jmp
mov
push
pop
icebp
fwait
test
call
jecxz
jnp
inc
ljmp
sarb
and
call
mov
cmp
adc
shrl
scas
clc
mov
mov
adc
fisubrs
add
imulb
cmp
jl
shlb
and
add
xchg
lcall
or
fcomps
pop
das
add
push
shr
cmp
gs
fs
push
call
inc
or
popf
add
sarl
ret
inc
icebp
xor
mov
add
inc
inc
and
mov
xor
mov
pop
rorl
add
add
add
push
dec
mov
mov
shll
pop
fbld
inc
sub
push
pushf
shlb
insl
jge
and
xchg
add
or
pop
mov
ss
xchg
or
addb
push
adc
mov
mov
adc
rcrl
and
enter
xchg
xchg
dec
outsl
ja
rorb
push
ljmp
mov
mov
mov
rolb
call
incl
dec
xor
inc
inc
mov
scas
loope
add
sub
add
pusha
popa
lea
mov
call
jo
fiaddl
cld
xchg
loop
mov
in
lods
add
cltd
daa
sbb
filds
fsub
add
inc
mov
int3
loopne
pop
cmp
lcall
add
bound
add
or
dec
fwait
lret
adc
add
int3
jg
outsl
sbb
loope
ja
jb
lcall
and
in
xor
or
cmpsb
push
dec
test
rclb
popa
xor
xchg
inc
sti
push
ljmp
mov
jl
mov
push
adcb
mov
shll
sub
popa
add
add
or
test
or
add
add
mov
jb
and
or
sub
push
testb
mov
push
rcr
sbbb
and
or
lcall
push
dec
cmp
or
loope
mov
shll
adc
loop
add
push
vcvtusi2ss
or
push
add
lds
shll
add
jle
jne
mov
jp
shll
push
ja
fisubrl
dec
loopne
movsb
mov
mov
adc
fists
dec
test
pusha
or
sbb
notl
dec
scas
inc
daa
lods
mov
pop
popa
push
adc
ret
inc
cmp
sbb
sub
mov
sbb
xor
test
pusha
cmpsb
loope
sbb
push
scas
sbb
pusha
xor
mov
addl
pusha
mov
cwtl
mov
add
lock
ss
je
pusha
pop
push
sub
lods
ds
pusha
push
icebp
pop
dec
inc
mov
stc
popa
inc
adc
mov
inc
jne
stos
stc
popa
mov
adc
loopne
jmp
or
mov
xchg
test
call
clc
or
inc
push
cs
sbb
std
loopne
test
inc
inc
movl
jge
imul
push
adc
stos
mov
pusha
push
dec
xor
cld
popa
cld
sub
in
or
fs
out
push
mov
stos
mov
add
setl
inc
adc
cli
or
add
arpl
adc
push
bound
popa
cltd
pop
pop
clc
dec
push
push
loope
cli
and
dec
xor
filds
or
idiv
or
pushf
mov
hlt
add
and
out
jnp
into
add
inc
arpl
xchg
int3
bound
jmp
ja
ret
xorb
frstor
adc
pop
inc
cld
jo
mov
cld
sbb
dec
loopne
dec
add
inc
cmp
xor
lret
mov
out
mov
or
mov
sti
add
call
and
add
push
lods
loopne
popa
sub
sahf
add
jle
and
pop
xor
push
cld
bound
sub
dec
and
sbb
or
pop
in
insb
push
jmp
loopne
push
dec
inc
jb
hlt
add
je
xchg
push
or
jo
inc
mov
jl
pop
jmp
outsb
test
loopne
cmp
movsb
mov
stos
inc
xor
adc
das
cmp
cmp
in
cmp
ss
push
popa
fnstcw
inc
hlt
aaa
or
xchg
cmp
push
jo
sub
cmpl
lret
sub
sub
xor
lock
xor
unpckhps
call
je
jmp
xor
xchg
adc
test
pop
jo
aam
sbb
pop
lock
mov
dec
push
decb
pop
outsl
sbb
adcb
sbb
pop
add
mov
xor
psubsb
xchg
lcall
add
inc
add
add
and
loopne
sbb
or
test
dec
push
cltd
fdivs
sti
incl
inc
and
je
sbb
push
xor
and
sbb
or
sub
orb
or
incl
jb
jmp
add
lods
pusha
sub
sub
and
pop
xor
push
bound
incl
hlt
inc
leave
ret
push
test
mov
xor
add
or
jle
adc
mov
xchg
clc
aaa
adc
addb
lock
clc
and
add
cli
sub
and
adc
xor
jl
or
lock
push
mov
in
inc
xchg
icebp
sbb
cmp
adc
push
inc
call
out
push
mov
fs
mov
mov
ret
mov
push
bound
sub
sub
jno
push
or
shlb
jge
or
fidivrs
fidivrs
lods
xchg
add
sbb
out
addl
je
mov
aas
add
add
sbb
push
pop
mov
xor
jno
push
xchg
scas
lock
ljmp
xor
add
xor
or
sbb
mov
in
sub
xor
add
and
ja
pusha
je
call
sbb
mov
xor
repnz
cs
insb
out
nop
adc
xor
add
push
fmul
popf
push
cmc
hlt
and
cmp
adc
pop
je
xchg
jb
push
pop
xlat
decl
push
mov
sub
xor
pop
jo
xor
adc
push
mov
call
clc
lcall
cli
pop
lock
xorb
mov
adc
add
movups
pop
ret
jmp
xor
cmp
in
clc
sbb
mov
pop
inc
outsl
add
add
sbb
ljmp
cld
add
lock
push
rclb
push
cli
dec
and
mov
test
mov
push
scas
adc
dec
mov
add
adc
mov
lahf
clc
add
std
pop
loop
jno
mov
push
scas
testl
mov
gs
sahf
je
adc
cmpsl
lock
adc
jnp
into
xor
inc
aaa
add
mov
mov
add
stos
hlt
daa
sarb
add
mov
push
fs
je
notb
lock
je
adc
pop
clc
mov
call
jne
xor
cmp
push
inc
cld
mov
in
inc
xor
lcall
ss
dec
cmp
fdivl
icebp
js
sarb
clc
adc
mov
adc
xor
and
inc
lds
add
subb
push
test
mov
xlat
sbb
fidivrl
mov
push
loop
lock
inc
icebp
or
sub
repnz
mov
sbb
or
xchg
mov
dec
ret
mov
adc
jbe
in
das
inc
or
add
lock
cs
xor
cmpsb
cmp
mov
mov
adc
outsl
adc
xorb
add
pushf
adc
lds
mov
jbe
push
cmp
je
inc
call
xchg
stc
and
add
or
mov
or
pushf
repnz
clc
jmp
ss
mov
push
adc
cmp
inc
mov
call
xor
mov
adc
mov
xorb
adc
jb
xor
sub
mov
into
jo
sar
push
pop
push
cli
sbb
sub
push
pop
clc
insl
or
es
xor
or
or
out
sar
stos
pop
pop
or
adc
adc
mov
je
mov
sbb
iret
jmp
mov
jle
incl
push
inc
mov
or
sbb
mov
jge
adc
add
push
cmp
xchg
jecxz
add
pop
push
adc
add
mov
mov
mov
scas
or
loopne
mov
inc
add
jo
xchg
mov
sbb
cmp
or
adc
repz
adc
inc
pushf
aam
jo
xchg
es
sbb
inc
subb
std
add
xlat
lock
push
ss
ret
dec
cs
dec
xor
sub
mov
ds
aam
adc
adc
pop
or
rorl
push
xor
add
jo
push
sub
push
mov
repz
add
adc
adc
cld
outsl
cmpsb
cmp
xchg
mov
jo
add
mov
mov
call
clc
xor
jns
aam
xor
jno
mov
mov
mov
push
pushl
xor
jl
sub
andl
sbb
test
divl
popa
xchg
add
xchg
sbb
adc
xor
sbb
mov
mov
loope
adc
xchg
cmp
xchg
inc
jge
mov
ljmp
je
push
pop
jno
or
call
sbb
nop
jne
push
icebp
aaa
adc
sub
pop
enter
and
mov
adc
push
es
and
je
leave
hlt
and
push
js
faddl
jb
je
addl
xchg
xor
rorb
and
rdtsc
or
mov
mov
pop
jo
or
je
cmpb
sub
xor
or
lock
or
xchg
or
sbb
pop
sub
call
jne
jp
jb
sbb
sub
loopne
pusha
mov
xor
mov
or
lret
pop
lock
mov
pop
pusha
jo
push
xchg
stos
pop
mov
push
cmp
and
cltd
lret
jl
rolb
rolb
dec
mov
or
je
lea
sub
cmp
cmp
mov
jno
je
ret
lods
pushl
cmp
fs
or
add
loopne
add
sbb
pop
cld
rolb
mulb
pusha
cmp
shr
mov
cmp
push
outsl
orb
or
and
and
jmp
add
xchg
cli
sbb
dec
outsw
enter
push
xchg
adc
add
or
sbb
cmp
pop
test
add
sti
cmpl
inc
sarl
cmp
xchg
pop
sub
pop
ficoms
xchg
dec
lcall
push
jmp
lods
push
rolb
je
sub
cmp
mov
or
sahf
inc
and
ja
xchg
mov
ja
rcl
out
jle
and
push
dec
dec
inc
mov
jp
sbb
cmp
inc
andb
daa
add
jnp
out
mov
jmp
cmp
pop
add
inc
popa
xor
inc
inc
jmp
test
aaa
add
add
dec
mov
rcr
adcb
pop
jmp
clc
sub
aaa
cwtl
adc
mov
cltd
ficompl
xchg
ret
or
es
decb
inc
stos
in
test
and
add
mov
out
lret
adc
inc
adc
xchg
inc
mov
dec
sub
or
dec
sub
inc
sti
andb
pop
xchg
mov
mov
js
dec
push
push
call
mov
jo
jle
sub
mov
push
jmp
push
int
mov
inc
mov
add
mov
add
inc
xchg
enter
mov
dec
pusha
add
push
add
mov
mov
jle
pop
outsl
mov
je
in
jmp
push
testb
add
mov
mov
roll
push
nop
fbld
push
inc
adc
add
push
pop
and
not
and
add
mov
and
mov
shlb
sbb
dec
add
sub
push
jp
fs
dec
push
mov
pop
mov
pop
mov
shl
pop
add
jo
pop
ja
xchg
lock
dec
rorb
cmp
test
lock
cmp
cs
je
add
add
outsl
nop
inc
out
clc
sahf
add
mov
mov
push
cmp
jge
je
popa
in
test
adc
sar
fisubrs
inc
stc
ljmp
cmp
mov
clc
pop
fimull
cmp
adc
add
sub
add
inc
pop
je
mov
xchg
add
push
addl
or
pop
push
clc
jg
lcall
lea
scas
and
jecxz
add
sub
and
ret
xor
xor
adc
xor
mov
cmp
outsb
mov
jne
aaa
add
mov
jmp
sbb
mov
loop
sub
mov
pop
push
aam
mov
rorb
dec
insb
inc
test
push
and
xchg
rcll
mulb
outsl
sub
or
mov
sbb
xchg
cmp
pop
andb
sub
ret
std
pop
lods
mov
push
pop
out
pop
ret
inc
inc
push
xchg
loop
push
add
add
push
or
lock
test
rclb
mov
adc
push
roll
xchg
sbb
push
sbb
hlt
pop
xor
add
pop
mov
jo
into
inc
mov
add
or
enter
pushf
adc
in
data16
ret
dec
inc
inc
enter
jbe
add
pusha
addl
xor
push
xchg
repnz
adcl
ss
push
push
jp
sbb
aam
xlat
loopne
inc
or
pop
mov
mov
mov
pop
add
mov
add
push
andl
cli
jbe
das
ljmp
fiaddl
mov
add
xor
idivl
das
sbb
mov
inc
es
pusha
xchg
fs
fists
and
push
mov
jecxz
mov
add
pop
sub
inc
dec
mov
dec
enter
adc
fisubl
mov
inc
cmp
shr
cmpsb
or
outsb
pushl
push
mov
mov
mov
adc
fs
fiaddl
popaw
or
and
jg
cmp
loopne
fs
mov
clc
fildl
loop
cmp
mov
xchg
outsb
adc
and
dec
xchg
add
push
jle
cwtl
mov
pop
cli
ret
adc
lods
jp
lcall
jne
dec
push
adc
xlat
pusha
adc
pusha
movsb
jmp
in
inc
scas
pop
test
and
sbb
orl
mov
pushf
and
mov
ds
xor
ret
ret
push
or
mov
mov
ljmp
mov
xor
adc
loopne
adc
inc
mov
mov
inc
pusha
dec
cs
clc
je
mov
ss
bound
mov
outsl
scas
in
inc
inc
lcall
ret
mov
or
and
or
pop
pop
cld
mov
xor
jo
xor
lahf
xchg
adc
or
andb
push
lock
mov
or
loopne
add
push
mov
gs
leave
and
mov
fcoms
pushf
pusha
cmpsl
ljmp
out
add
add
in
rclb
out
lods
push
inc
xchg
pop
ret
xorl
and
adc
mov
xchg
shlb
add
mov
scas
test
pop
sarl
lock
adc
xor
cmpsb
movsb
loop
popa
int3
pop
call
int3
adc
fbstp
loopne
sbb
loopne
lea
test
cmp
inc
xchg
push
pop
movsb
dec
ljmp
or
loop
pushf
dec
mov
mov
popf
and
in
mov
mov
push
in
add
mov
fsin
mov
pop
and
or
mov
pusha
push
jp
clc
mov
sub
dec
adc
mov
inc
mulb
mov
inc
mov
add
xchg
xor
add
adc
lea
dec
fst
adc
fcmove
insl
test
lods
mov
add
ss
jo
inc
push
shrl
repnz
inc
aas
es
xor
push
and
lcall
loope,pn
sti
cmp
mov
lods
sub
add
out
xchg
rcrb
dec
add
stos
test
mov
add
pushf
sbb
fistl
fistps
pop
jae
mov
sub
nop
cmc
dec
cli
sti
push
lock
adc
inc
cmp
jbe
inc
daa
add
lock
xor
lret
add
xor
loopne
inc
sbb
mov
mov
or
arpl
incl
jmp
mov
xorb
ljmp
push
xor
cmp
xlat
mov
dec
xchg
mov
inc
dec
lock
das
nop
enter
add
clc
call
or
call
sbb
add
std
and
test
jnp
lock
dec
rcrb
push
cltd
rorl
lcall
lret
test
lods
ja
mov
mov
push
sub
xor
push
popf
sarb
push
imul
dec
lea
aad
inc
inc
pop
pop
mov
mov
inc
cmp
pop
mov
mov
jg
mov
lock
addb
xor
mov
loope
and
add
xchg
in
mov
mov
inc
push
push
fildll
xlat
out
mov
call
sbb
fwait
clc
push
xor
mov
ja
jnp
cmp
jbe
pusha
jo
call
popa
std
mov
xor
adc
fs
add
js
mov
xor
mov
stos
lock
dec
inc
test
xor
add
mov
jl
jo
xor
sbb
clc
mov
clc
popa
jnp
jle
mov
push
mov
xor
jne
dec
pop
or
leave
add
adc
mov
lods
sbb
add
push
adc
rcll
sbb
repz
and
ja
mov
testb
and
inc
adc
add
mov
sbb
or
adc
outsl
out
push
hlt
add
xchg
lods
add
mov
mov
push
sub
add
add
sub
push
xor
pop
adc
in
insl
sti
push
or
lahf
xor
cmc
add
xor
ss
orb
add
cmp
mov
inc
cmpsl
adc
inc
dec
mov
nop
in
subb
lock
addl
xchg
mov
sbb
adc
add
jg
fbstp
mov
xchg
cmp
dec
lock
and
mov
cmp
lea
cmp
mov
cmp
mov
cmpb
mov
or
lds
ret
insb
ret
lcall
add
jno
fimuls
mov
push
add
sub
cmp
jnp
and
jno
or
mov
add
ja
cs
adc
scas
add
test
fcmovbe
fimull
lods
std
or
add
out
or
mov
aad
adc
mov
mov
inc
fadd
jno
mov
mov
mov
xchg
ljmp
cli
push
mov
xchg
add
sbb
fdivs
xchg
xor
mov
outsl
test
mov
push
cmp
xor
add
sub
flds
cli
mov
nop
jb
rorb
pop
add
mov
add
pushl
push
inc
push
jo
call
jo
or
mov
add
mov
inc
push
or
cmpsl
icebp
ret
mov
cli
jmp
movl
add
mov
adc
sub
xorl
addl
test
jmp
push
xchg
push
xchg
mov
lea
push
mov
adc
call
push
scas
sbb
add
cmp
push
ret
add
repz
cmc
test
xchg
jo
in
adc
adc
outsb
xchg
push
adc
fisubrl
push
mov
mov
add
call
xor
jbe
repz
ret
inc
add
or
or
mov
jo
sbb
or
lods
call
pop
sbbb
sbb
movsl
repz
cs
xor
push
cld
pop
dec
fmuls
mov
jo
xchg
decl
adc
js
mov
add
outsb
loope
mov
lock
cld
push
push
and
push
jbe
es
jle
push
push
jo
add
xchg
adc
sti
push
bound
xor
or
test
roll
repnz
pop
mov
push
jbe
sub
ljmp
xor
add
rclb
rolb
and
jo
adc
int3
sub
push
je
sbb
pop
push
xor
pop
jl
inc
test
shl
leave
mov
dec
movb
jp
mov
out
shrb
mov
xor
fiaddl
mov
or
lods
dec
mov
jo
push
xor
stos
cwtl
pop
push
cli
pop
mov
and
jmp
loopne
testb
mov
loopne
xor
xchg
jo
xchg
movsb
add
jo
pusha
cwtl
movsb
push
cld
add
pop
popa
jmp
in
push
xchg
sbb
popf
or
mov
add
adc
xor
aas
push
or
mov
nop
fists
lea
outsl
push
sub
jmp
cmp
push
mov
test
or
xor
sbb
cmp
push
daa
mov
mov
lahf
rclb
mov
xor
jmp
notl
xchg
pop
sbb
inc
dec
aaa
call
jne
out
scas
ljmp
and
jmp
jae
and
inc
pop
add
negb
sub
mov
aaa
cmp
or
lock
mov
jmp
mov
xor
lods
fistpll
je
and
sub
jno
out
and
pop
mov
jne
jo
je
shl
jg
call
loope
pop
jmp
jno
xchg
push
xor
cmpsb
pop
pop
lock
lock
pushl
or
and
out
add
mov
sbb
lret
push
dec
jno
lock
jmp
adc
fisttps
jmp
xchg
mov
std
or
shlb
or
mov
mov
dec
adc
pop
or
ret
pop
popa
lcall
jo
mov
sbb
and
adc
aaa
ficoms
and
pop
orl
sub
mov
adc
in
sub
fwait
popa
mov
push
or
xchg
lret
les
insb
aam
push
inc
lods
lret
mov
or
lret
cld
dec
bound
dec
loope
adc
repnz
add
stos
mov
fimuls
rclb
dec
fmull
or
and
mov
push
inc
andl
push
add
inc
popa
or
enter
je
xchg
or
jp
add
push
lock
pop
add
mov
out
pop
idiv
neg
mov
and
cld
or
add
add
dec
xlat
add
sahf
push
push
addb
addb
jbe
mov
ffreep
repnz
sti
push
adc
push
sbb
fcoml
repz
test
loopne
inc
xorb
out
ret
sbb
call
sbb
lcall
subb
ss
and
cmpb
or
subb
push
adc
les
jmp
sub
fsubrs
inc
cmp
mov
mov
add
mov
xor
add
insb
or
add
incl
aaa
shlb
jo
loopne
xchg
divl
fiaddl
ss
adc
arpl
pop
push
lcall
push
call
xor
inc
fmull
push
scas
jmp
mov
and
adc
sarl
aam
std
in
add
pop
or
ret
test
mov
xor
pop
dec
fs
and
push
dec
mov
push
mov
add
les
jle
adc
push
scas
sub
pop
mov
rcl
cmp
or
inc
test
or
cli
ret
mov
or
iret
jne
je
std
rorl
add
push
and
push
shlb
push
and
int3
test
adc
addb
add
addl
cmp
call
sub
cmp
jl
xor
sub
int
stos
inc
sub
adc
adc
ljmp
notb
or
rol
sub
add
add
add
ret
push
or
pop
push
leave
imul
or
push
sub
push
xorb
rolb
popa
add
adc
ds
sub
lahf
imul
roll
push
pop
gs
scas
fildl
mov
push
dec
wbinvd
mov
push
cmp
jl
push
mov
push
subb
cld
ret
jl
adc
or
mov
push
xchg
sbb
clc
scas
push
cmp
es
mov
jne
or
clc
fbstp
js
sbb
push
adc
mov
loop
push
je
ss
inc
test
or
push
add
and
icebp
test
mov
divb
je
lock
add
pusha
bound
aam
or
add
sub
add
movb
add
add
inc
js
fists
pop
xor
push
pusha
xor
push
push
decb
inc
pop
dec
inc
push
loopne
pusha
pop
mov
add
outsb
xchg
cs
add
popa
add
inc
or
sub
adc
dec
inc
add
add
adc
bound
lea
lods
inc
xor
push
int3
rolb
or
jbe
imul
hlt
mov
jg
jle
jbe
push
cmp
add
loop
pushf
and
mov
or
mov
jbe
cli
add
push
xor
xchg
mov
shrb
sbb
mov
add
or
push
lods
out
loop
test
add
lea
rorb
mov
mul
sub
xchg
dec
ret
inc
ret
loop
add
add
or
ds
loopne
inc
ljmp
push
movsb
notl
jns
mov
andb
movsl
mov
lea
fcmovb
mov
data16
or
add
cli
and
add
pusha
or
std
xchg
clc
jmp
jne
mov
cmp
pop
loope
ret
stos
cli
dec
mov
adc
jg
push
negb
aas
jp
dec
dec
sub
es
mov
test
mov
fdiv
or
pusha
sbb
mov
loopne
sbb
shlb
mov
or
loop
jne
outsb
fs
fmuls
or
and
pushf
xchg
ficompl
cs
out
mov
std
mov
cmp
xor
aam
loopne
push
sbb
ret
lods
loopne
test
out
mov
nop
ficoml
and
mov
gs
enter
cs
or
jmp
addr16
xor
pusha
lea
bound
pop
lds
push
test
lock
enter
cmp
out
ficompl
mov
je
test
bound
repnz
xchg
or
fildll
jb
cmp
lock
lea
sub
pop
mov
adc
es
push
push
add
ljmp
cli
add
and
pop
add
and
xor
xor
or
mov
loopne
data16
call
mov
ljmp
add
mov
loop
cltd
clc
sbb
inc
call
jne
pop
and
nop
mov
fs
clc
aam
pusha
in
and
lock
data16
out
and
popa
xchg
ljmp
jle
mov
daa
ret
sub
pop
popa
push
dec
adc
push
or
push
push
ss
mov
ljmp
push
push
ffree
inc
pop
insb
fisttpl
stos
nop
ret
xor
insb
inc
adc
pusha
cwtl
div
push
repnz
das
insb
mov
das
mov
cmc
mov
push
cltd
xor
outsb
adc
pop
inc
jecxz
xchg
inc
inc
stos
inc
bound
add
pop
test
and
int
out
pcmpgtd
jae
rcrb
add
inc
push
xchg
mov
les
or
push
mov
inc
jo
and
out
add
xor
lock
mov
add
hlt
incl
push
mov
inc
and
adc
call
mov
xor
or
mov
pop
mov
arpl
mov
and
negb
out
int3
cli
orb
inc
dec
and
mov
or
mov
aad
add
add
jo
insb
mov
lock
adc
lock
jo
repnz
inc
movsb
lock
mov
jb
pop
xlat
ret
cmpsb
adc
inc
mov
or
add
fs
lock
adcb
fs
fcmovnu
in
and
push
push
fisttpl
sbb
jo,pn
push
and
cli
sbbb
clc
mov
and
mov
and
mov
adc
lret
or
mov
mov
je
xor
adc
cmp
pop
roll
cmp
cld
shll
je
aad
test
orl
or
cmc
mov
cmpsb
outsl
jne
inc
or
je
cmp
pop
cwtl
pop
push
push
jb
jo
or
dec
jo
cmp
or
inc
xor
adc
xor
or
mov
ljmp
xor
adc
and
or
push
push
aam
mov
sbb
add
mov
dec
add
push
cli
jo
jo
xor
mov
cli
inc
xlat
rcr
hlt
mov
mov
mov
xor
repz
call
dec
aad
mov
je
adc
sbb
mov
incl
hlt
popl
xor
mov
xchg
sbb
pop
add
cli
shr
pop
jl
or
lcall
test
je
sub
adc
sbb
clc
mov
push
lds
ljmp
dec
divb
jo
mov
filds
subb
andb
lret
lods
cmp
push
pop
mov
call
pushl
add
jmp
addw
enter
and
sahf
sbb
fbld
add
iret
jge
ficoml
or
and
inc
lea
gs
cmp
and
push
pop
mov
movb
jg
cmc
lock
jmp
fdivr
adc
xor
leave
cmc
test
xor
movsb
push
pusha
mov
sbb
scas
adc
mov
or
repnz
jo
sub
aaa
mov
scas
ja
lock
add
sbb
mov
pop
ret
inc
fistps
sbb
mov
pop
or
mov
add
mov
les
scas
xor
and
jae
mov
lock
movsb
jo
cmp
out
pop
mov
inc
mov
in
or
add
cld
inc
cld
cmp
pushf
jmp
ret
xchg
xlat
fiaddl
xor
add
retw
xor
mov
push
inc
jb
add
cmp
jne
add
add
ds
mov
adc
cmp
xchg
add
loop,pn
bound
inc
add
ds
mov
mov
dec
mov
xchg
pop
imul
call
push
pop
add
hlt
push
add
dec
add
and
inc
pop
pushf
inc
mov
movsb
xor
movl
xor
test
je
cld
jg
hlt
and
enter
jb
push
pusha
lock
lock
or
pop
adc
mov
loopne
inc
jmp
push
ljmp
and
adc
xor
rcr
xchg
push
push
loopne
cpuid
dec
push
push
mov
xchg
add
je
cmp
test
or
and
pop
xor
xchg
or
xor
sbbl
push
mov
pop
inc
inc
je
idivl
shrl
jmp
adc
mov
push
jecxz
je
inc
scas
mov
sub
inc
pushf
pop
cmp
and
insb
ljmp
in
add
add
or
mov
clc
add
adc
jne
cmp
adc
lods
mov
adc
sub
lock
push
inc
les
push
jne
int3
xchg
cmpsb
and
imul
sbb
pop
adc
xchg
shlb
lock
and
pop
sarb
inc
fsubs
mov
mov
mov
fwait
inc
mov
ficomps
sti
aam
jne
add
mov
sbb
fdivrs
inc
sbb
mov
mov
cmpsb
loope
sbb
mov
xchg
test
movsb
mov
orb
add
insl
jg
cli
xor
pop
pop
jne
in
daa
mov
xor
inc
adc
add
adc
int3
push
xor
in
add
push
decl
push
lock
jno
jo
sub
jg
sub
in
loopne
jno
jp
sbb
mov
sub
pushf
repnz
push
push
xchg
pop
add
pusha
adc
push
adc
dec
mov
inc
call
ret
pop
inc
pop
xor
rolb
push
or
dec
or
xchg
inc
xor
imul
or
mov
jno
lods
adc
cmp
je
orb
lahf
mov
mov
sbb
push
add
test
pop
mov
shl
sbb
or
orb
xor
mov
mov
pop
rolb
inc
adc
int3
dec
call
inc
mov
adc
clc
sbb
enter
push
push
enter
in
repnz
and
push
jo
push
cmpl
mov
mov
xor
add
xor
sub
or
mov
call
das
and
push
test
sbb
aam
movsl
es
add
mov
shrb
jo
adc
sub
sti
repnz
adc
movsb
xchg
mov
or
fistpll
mov
pop
xchg
xor
mov
or
dec
xor
mov
test
rcrl
punpckhbw
dec
push
dec
ret
hlt
call
or
push
and
push
xacquire
jp
dec
xor
lock
das
pushf
sti
jne
xchg
hlt
sbb
and
into
mov
sbb
les
inc
xor
test
add
dec
xchg
ret
push
cmc
das
addb
and
cmpsb
jbe
or
mov
or
dec
in
mov
cmpsb
add
mov
pop
or
add
lret
mov
mov
decb
or
pop
add
adc
xchg
push
pop
jo,pn
xor
cli
mov
push
mov
jecxz
mov
mov
in
leave
rol
push
lods
mov
adc
mov
frstor
inc
jg
or
rorb
mov
add
or
push
jmp
cmp
or
in
push
fwait
pop
push
dec
je
rorb
std
outsl
ret
mov
in
add
repnz
popa
push
fidivs
jbe
and
push
insb
adc
add
push
inc
outsb
mov
int
imul
mov
in
popa
sbb
adc
or
add
jne
pop
mov
clc
sbb
sub
insb
aam
rcr
pushf
loop
mov
loop
and
call
dec
xor
or
mov
fmull
cmp
aad
fdivp
addb
xor
pop
cmp
add
jmp
test
jmp
cmp
mov
xchg
xor
push
les
jne
fst
and
xchg
insl
pop
mov
cltd
mov
cmp
xor
or
movb
pop
push
mov
inc
inc
push
mov
push
ljmp
ss
repnz
ja
enter
pop
mov
lods
addl
ljmp
movsl
push
shlb
jmp
test
cmp
sub
outsb
sbb
dec
andb
sbbb
enter
mov
mov
add
inc
push
int3
xor
fwait
or
adc
sbb
ret
fidivrl
pop
jbe
fistpll
sub
pop
sarb
xchg
add
pop
enter
mov
or
shrb
and
cmpl
sub
push
dec
add
sbb
imul
sbb
inc
test
rclb
bound
dec
call
pop
and
push
loop
mov
add
xchg
xchg
add
sub
and
dec
enter
add
pusha
push
xorb
add
push
push
rorb
icebp
xchg
aas
pushl
test
dec
sub
cmc
inc
das
jne
mov
lcall
out
dec
inc
push
sbbl
xor
movb
arpl
xchg
adc
ret
subl
dec
adc
cld
mov
mov
jle
adc
xchg
adc
mov
add
enter
adc
into
in
mov
addr16
adc
and
fstp
push
nop
push
dec
popf
push
push
hlt
xchg
shlb
js
lock
inc
rorb
xor
inc
imulb
sbb
and
adc
add
inc
fmuls
jne
mov
lods
adc
subb
adc
pop
dec
mov
pop
or
aas
pop
les
repnz
shlb
and
pop
shrl
mov
xor
inc
lods
xor
clc
xlat
adc
jle
mov
add
add
ss
cmp
pop
fcoms
test
or
jbe
rclb
xchg
xchg
lcall
rolb
clc
test
idiv
lea
fidivrs
pop
pop
and
xor
js
mov
mov
push
adc
addb
add
add
fidivs
loopne
jne
jae
sub
mov
mov
or
push
add
adc
push
push
mov
fdivrs
ja
rolb
adc
jg
xchg
fs
inc
in
popa
outsb
jp
sbb
jmp
adc
jmp
jns
cwtl
inc
fidivrl
adc
push
repnz
and
mov
aam
bound
jle
mov
loopne
xor
sbb
cmp
andb
roll
in
sbb
xchg
pusha
sub
adc
mov
pop
and
ret
push
fs
push
inc
push
inc
out
add
xor
cmp
in
push
xor
cld
incl
pop
and
push
bound
dec
push
popa
push
adc
loopne
push
push
imul
xlat
add
push
jo
sbb
cmpb
je
adc
adc
add
push
jbe
xchg
js
andb
or
push
inc
push
loopne
shll
push
and
cmp
inc
add
add
or
shll
adc
add
loop
push
in
test
call
mov
inc
mov
inc
das
add
incl
or
pop
or
xor
push
mov
mov
movsl
lds
stos
sub
sub
popa
cltd
aad
loopne
add
pusha
adc
pushl
or
pop
sub
aad
add
cmpsb
mov
rolb
inc
das
nop
push
jo
cmp
or
hlt
loopne
or
incl
lea
das
call
insl
fistl
push
xor
cli
mov
push
push
pop
mov
sub
fsubrp
js
mulb
mov
add
in
add
fwait
mov
incb
enter
adc
jbe
rcrl
pusha
stos
sbb
pusha
or
add
dec
xchg
mov
insb
xchg
scas
and
push
pop
xchg
popa
enter
stos
call
mov
inc
sbb
dec
bound
jb
call
ja
cli
loopne
loope
cltd
sub
in
je
pusha
pop
lock
data16
inc
jmp
add
movsb
bound
lock
add
mov
add
cwtl
rcrb
add
cmpsb
xrelease
mov
sbb
mov
mulb
xor
pusha
and
sub
fimull
cmpsb
dec
add
jle
lock
push
jl
adc
aad
stos
fisubs
mov
cmp
sbb
dec
xor
rcrb
outsb
insw
dec
test
adc
mov
pusha
mov
push
pop
add
pusha
and
rcl
xor
push
sub
xorb
pop
pop
and
sbb
cmp
out
leave
mov
mov
add
jle
adc
mov
add
stc
xor
sub
mov
xor
sub
xchg
mov
icebp
addb
inc
add
jl
stc
xor
cmc
js
popa
push
xor
xchg
inc
add
ss
faddl
jnp
adc
sti
stos
dec
push
shl
test
push
and
or
push
or
xchg
inc
pushl
addb
or
add
xor
add
cld
mov
jmp
stos
add
stc
push
loope
std
or
mov
jmp
andb
inc
jl
pop
test
add
fildl
mov
neg
add
adc
inc
jmp
or
push
inc
mov
out
addb
ds
idiv
push
inc
repz
pop
and
scas
add
or
mov
jo
jbe
cs
pusha
jbe
push
addb
mov
cmp
push
and
dec
lea
fildl
nop
sbb
or
xorl
add
or
add
in
push
add
lea
cmp
ja
data16
push
mov
pop
inc
out
icebp
push
lock
xor
push
dec
xor
mov
push
adc
mov
push
xor
sti
cmp
jbe
imul
inc
lret
or
ds
sbb
ret
pushf
pushl
add
pop
and
inc
imul
cltd
lock
ja
mov
fdivrp
fistl
push
loopne
mov
fbstp
xor
xor
movsb
inc
adc
mov
push
adc
inc
mov
xor
ret
mov
jle
add
and
mov
push
xchg
pop
mov
add
test
pavgb
rol
mov
into
sti
scas
clc
cs
imul
cltd
dec
mov
data16
subb
lds
sub
mov
je
outsb
or
jbe
fistpll
inc
lock
icebp
incb
or
or
pop
mov
jb
cmc
cmp
push
testb
or
loopne
and
cld
in
push
sbb
icebp
or
or
cmc
mov
mov
dec
mov
pushl
inc
jae
lret
lock
incb
add
dec
nopl
mov
xor
xor
xchg
or
mov
pop
je
test
mov
adc
aas
dec
je
adc
mov
push
test
pop
jl
mov
lea
add
xchg
cmc
jmp
inc
push
mov
clc
mov
push
add
jns
dec
cmp
cmpsb
jge
xchg
lods
loopne
inc
add
jmp
mov
adc
and
out
push
dec
je
mov
xor
mov
inc
fwait
ret
mov
push
xor
mov
push
dec
in
int
sti
xor
clc
jmp
jmp
jmp
and
mov
jl
add
mov
add
adc
mov
push
add
mov
sahf
lcall
hlt
sbb
add
icebp
cmp
cmp
fbld
rcrl
add
add
jne
cmpl
sar
jne
jg
sti
mov
adc
or
jo
cmp
add
xor
ret
inc
xorb
mov
es
scas
es
mov
adc
push
or
sbb
insb
clc
fwait
sub
add
jae
mov
adc
add
jmp
fs
ja
inc
add
mov
sub
mov
add
jmp
push
ret
or
push
xchg
xor
mov
adc
xorb
outsl
push
add
add
push
sti
in
fcompl
add
jmp
cmp
and
lock
pusha
stos
push
adc
repnz
adc
mov
mov
push
jb
mov
cmp
xor
cmp
in
jo
add
lock
mov
mov
clc
cld
adc
cmp
or
rolb
pusha
mov
dec
and
dec
inc
or
popf
orb
xchg
xchg
mov
add
cmp
adc
sub
scas
mov
stos
and
lret
and
popa
insb
out
mov
dec
jo
mov
adc
or
aaa
jne
ret
or
ret
popa
jl
std
lcall
std
adc
mov
xor
adc
add
inc
pop
xor
add
fisttps
push
xor
xor
or
mov
mov
test
outsb
shrl
pop
push
xor
jb
das
and
sti
xor
les
ss
cmp
cmp
test
hlt
jno
sahf
add
sahf
cmp
jno
or
mov
xor
xor
push
jl
pusha
adc
and
repnz
je
fsubrs
je
cmp
xchg
or
and
jo
jmp
or
jno
pop
or
loopne
incl
divb
lock
loopne
aam
adc
push
pop
out
and
mov
sbbb
jl
mov
insl
decl
add
jb
or
repnz
imulb
mov
ret
jmp
pop
sbb
pop
aas
adc
fwait
sbb
xor
adc
pop
lcall
add
sbb
add
fisttpl
sbb
jno
pop
jb
add
inc
nop
inc
mov
ret
push
imul
mov
stos
mov
xchg
jne
jno
or
dec
adc
mov
mov
les
fnstenv
lods
or
jo
jno
dec
call
sbb
add
add
aam
and
push
dec
popf
adc
out
cs
stc
push
bound
push
sub
mov
mov
or
inc
push
adc
and
out
mov
fnstsw
cmc
icebp
sbb
icebp
push
adc
add
add
clc
aas
mov
add
mov
mov
fidivs
jp
sub
call
sub
jo
sub
add
inc
iret
scas
aas
outsb
xchg
or
inc
mov
ret
cltd
or
mov
mov
fcmovnu
test
sub
cs
hlt
fistpll
icebp
adc
xchg
adc
aad
fisttpl
es
ja
pop
or
mov
gs
or
mov
jg
cmp
add
icebp
sub
hlt
add
loopne
inc
js
mov
jge
sbb
pusha
or
inc
gs
pop
mov
fwait
mov
arpl
push
mov
sub
xchg
test
je
push
test
mov
add
test
insb
jmp
add
pushf
or
add
jmp
sar
cmp
push
shll
cmpsb
mov
add
les
xor
mov
add
mov
pop
dec
pop
or
jmp
fs
fdivrl
lret
sub
lock
fcmovnbe
jg
add
sahf
aam
out
mov
jg
imul
addl
and
aad
dec
ljmp
shr
push
in
neg
pop
pop
sbbb
push
or
lcall
add
add
mov
add
cmpsl
adc
adc
ja
jb
outsl
subb
add
or
mov
lds
inc
pushf
jne
test
mov
add
orb
pop
xorl
and
in
pop
ja
mov
pop
adc
dec
push
shl
and
xchg
daa
dec
andb
inc
mov
scas
int
pop
jb
and
notb
xchg
push
push
cmc
add
add
or
cmpsb
jns
cmp
inc
cmc
addl
test
mov
sub
subb
pop
push
test
and
les
shll
rclb
adc
test
popf
or
ret
add
push
ljmp
inc
ret
sub
sub
ret
dec
repz
mov
call
mov
mov
andl
sub
mov
rolb
xchg
into
xchg
push
imul
inc
in
shr
sub
push
jg
imul
adc
mov
sarb
mov
and
inc
xchg
imull
rcll
rclb
std
shlb
pop
aaa
jno
mov
adc
xor
push
inc
rclb
testb
and
or
sbb
push
and
ljmp
lock
sbb
lds
add
jmp
add
les
pop
imul
out
shll
shlb
fiadds
mov
mov
and
push
enter
fildl
enter
inc
sbb
enter
roll
addb
or
pop
add
das
push
retw
sub
sub
push
dec
je
incl
rcrb
rep
imul
xor
test
arpl
add
jne
rolb
inc
cli
or
or
inc
rcrb
mov
and
nop
aaa
or
inc
adc
ret
lcall
cwtl
mov
rcrb
shrb
push
rcll
rcrb
arpl
push
push
icebp
push
dec
pusha
orb
andb
or
mov
dec
cs
gs
sub
sbb
jle
test
lock
loop
sbb
ljmp
push
cmpsb
jne
add
cmp
lods
addr16
inc
jb
into
jbe
scas
ljmp
sub
cmp
jmp
add
movsl
scas
adc
push
xor
sarl
cwtl
pushf
xchg
adcl
pusha
xchg
ds
rolb
adc
add
lcall
adc
add
in
add
pop
xchg
rorb
sub
mov
inc
mov
push
mov
mov
xor
lcall
mov
pop
out
outsb
pusha
xchg
sbbb
mov
dec
or
and
std
pop
sbb
sbb
or
mov
xchg
inc
or
andl
lcall
pusha
add
sub
idiv
jecxz
adc
psubsw
push
je
ret
mov
insb
or
jl
adc
fisttpl
inc
movsb
and
popa
inc
jmp
mov
outsb
pop
mov
fdivr
pop
adc
and
fadd
aad
data16
jp
xor
sti
bound
adc
pushf
jno
adc
loopne
add
mov
fcom
andl
loope
je
add
outsb
or
cli
or
insb
leave
sub
nop
bound
mov
pop
push
and
or
lock
test
ds
or
pusha
and
xor
pop
cltd
mov
sub
and
pusha
mov
pusha
cmp
push
out
jmp
mov
or
jmp
pop
lret
or
pop
jmp
pop
add
and
mov
aad
pop
mov
or
in
push
xchg
or
insb
dec
jl
loopne
in
lcall
mov
loopne
popa
jns
sub
loopne
adc
sub
roll
test
call
or
add
sbb
xor
pushf
and
jnp
add
push
push
and
push
add
jno
pop
adc
ss
out
mov
in
outsl
fistl
test
push
jp
adc
loope
or
mov
idivb
add
call
cmp
add
cli
ss
popa
cltd
inc
cli
clc
sbb
adcb
jnp
cmp
jg
jl
cmp
jae
loop
in
add
shr
add
jae
aaa
sbb
popa
xor
inc
pop
and
dec
imul
adc
outsb
xor
adc
out
call
pop
jbe
es
or
pusha
xlat
decl
sbb
pusha
js
call
jg
mov
push
stos
mov
pop
sbb
jmp
sbb
mov
and
mov
jg
fbld
and
movsl
arpl
push
pop
test
push
loopne
shl
addr16
mov
mov
adc
mov
out
das
push
jg
pop
cld
cmp
or
icebp
mov
or
mov
insb
pop
or
and
push
roll
divl
add
pop
adc
and
dec
cmp
mov
cmp
push
sub
mov
das
adc
sub
in
insb
fistl
lods
dec
ljmp
and
add
mov
in
aas
xor
add
out
xor
xor
das
les
add
sahf
test
adc
and
in
into
jmp
sub
fmull
andb
fucomip
jge
inc
push
fisttpl
lcall
lock
sub
fsubrl
testl
add
mov
xor
and
jp
mov
mov
fisttpl
adc
dec
cmp
cmp
arpl
call
push
clc
push
xor
inc
mov
stc
lret
and
sub
in
lock
or
das
push
sub
push
orb
jno
xor
pop
lock
clc
pop
jmp
mov
sahf
clc
out
xor
sub
andl
sub
push
push
jo
sbb
out
test
xchg
and
or
out
or
push
vpshuflw
pusha
decl
jbe
insb
pop
add
xor
call
insl
popa
icebp
shl
incl
push
and
jp
shlb
jae
mov
dec
sub
add
jo
and
scas
orb
aas
mov
cld
xor
mov
xchg
mov
js
lock
cmp
or
push
xor
data16
imul
mov
mov
jo
inc
sub
int
push
mov
sbb
js
fistl
or
add
xor
add
xor
pop
mov
je
xor
dec
jno
xchg
jbe
stos
or
cmp
add
sbb
outsl
insl
or
insb
push
dec
push
imul
inc
ds
imul
or
in
int
mov
xchg
jo
adc
push
add
add
add
fidivs
inc
adc
cmp
nop
outsb
imul
divb
xchg
add
xor
shll
repz
mov
ds
cmc
test
add
sub
xor
sti
xor
push
aad
iret
mov
and
inc
out
pop
jmp
int3
rclb
packssdw
lea
mov
push
incb
dec
stos
inc
push
adcb
mov
push
test
rolb
push
xlat
xor
push
pusha
xchg
pushf
mov
lods
xchg
subb
pop
dec
and
lret
leave
or
dec
push
mov
mov
xor
pop
stos
test
fimull
in
and
adc
stos
cs
xchg
dec
add
je
add
inc
or
lcall
pop
lods
xchg
xchg
addb
dec
and
jne
test
das
sub
push
test
mov
adc
push
and
das
and
cmc
call
jne
and
mov
push
loopne
jbe
cmpb
pop
dec
filds
mov
and
lock
dec
pop
dec
enter
gs
outsl
or
cmp
lock
sub
loope
dec
or
test
inc
adc
int3
repnz
call
ret
mov
or
or
dec
cmp
adc
dec
or
xor
push
mov
int3
insb
push
push
int3
imul
movsw
add
aad
popl
aaa
jge
icebp
sub
adc
ja
xorb
xor
push
lock
dec
mov
xchg
lods
jnp
push
out
adc
mov
addb
adc
push
add
sti
mov
mov
xor
xor
or
imul
inc
ret
test
jp
and
sbb
jg
stos
lock
cmp
lea
pusha
mov
pop
add
nop
xchg
cmp
inc
add
mov
jmp
xchg
testb
lods
push
repz
pop
add
imul
pop
sub
inc
out
adc
mov
rclb
fisubs
add
imul
addb
cmp
jno
inc
adc
mov
pushl
movsl
cmp
lock
call
cli
dec
jmp
rcrb
add
mov
ja
movsb
scas
adc
int3
mov
or
mov
in
mov
mov
daa
scas
pop
xor
call
cmp
sbbb
xor
ret
push
mov
adc
add
add
pusha
cmp
pop
addb
out
pop
fs
inc
jmp
adcb
jmp
or
push
mov
idivb
ret
add
sbb
pop
xor
jb
test
xor
sete
lea
sub
or
cmpsl
call
pop
je
test
mov
fiaddl
sar
mov
sub
dec
pop
scas
pop
shrl
or
scas
push
inc
jo
nop
push
and
mov
jne
call
mov
inc
inc
test
das
orb
loop
sbb
push
push
je
jl
xor
je
int
dec
shl
std
rcrb
pop
pushl
and
mov
and
sbb
mov
add
xor
call
mov
in
jno
orb
jo
arpl
nop
push
cmc
mov
mov
bound
cld
sbb
mov
mov
shrl
xor
sar
cld
adcl
loop
out
jge
mov
adc
jbe
movsb
ljmp
sbb
or
dec
cmc
and
jo
inc
adc
mov
push
mov
stos
jle
mov
pop
jo
out
jb
sbb
dec
mov
ficoml
mov
in
or
aam
mov
jl
clc
fs
fisubs
xchg
or
and
in
or
or
and
inc
pop
jb
inc
cmpsb
sbb
pop
pop
jle
lock
ret
mov
xor
push
int3
add
lea
adc
scas
cli
lods
cmp
add
call
das
add
push
mov
mov
add
push
inc
pushl
push
jb
lods
cmp
or
pop
jecxz
jb
shr
push
test
cmp
movb
sub
pop
inc
cmp
jne
stos
outsb
adc
xchg
mov
data16
pop
dec
ret
add
call
in
mov
jae
cmpl
dec
jne
jno
adc
jg
ret
call
cltd
adc
xchg
add
adc
add
or
and
adc
mov
and
jo
inc
icebp
cmp
and
add
sub
add
adc
xor
in
add
sbb
inc
push
jnp
mov
inc
loopne
divb
push
add
mov
les
addr16
and
inc
inc
dec
sbb
je
sbbb
std
add
mov
orb
mov
test
pop
lods
pop
inc
jmp
lea
stc
xlat
adc
scas
call
mov
lods
and
call
shll
pop
pop
pusha
xor
xchg
mov
dec
loop
int3
dec
shlb
enter
dec
call
mov
mov
cli
movsb
mov
loope
imul
pop
add
push
inc
mov
inc
mov
jne
test
add
jo
rclb
aam
cmp
xorl
push
adc
fcoms
ret
in
rolb
add
dec
jmp
js
clc
xchg
and
inc
pop
cmp
sbb
pusha
pop
adc
fwait
pop
test
jl
inc
cs
mov
and
inc
and
or
sti
call
dec
aam
sub
shlb
scas
addb
loop
adc
or
add
adc
daa
cmc
add
fmull
inc
add
jl
adc
push
in
fwait
in
jb
int3
mulb
sub
mov
add
subl
inc
adc
dec
add
or
push
test
inc
mov
jbe
lea
jae
add
loop
add
adc
or
inc
and
mov
mov
add
adc
subb
popf
sbb
jmp
adc
mov
ss
sbb
push
sub
addl
or
rolb
sbbl
xor
adc
jb
push
or
pop
rcrb
js
bound
xor
push
imul
lods
push
jle
cmpsb
inc
mov
or
mov
push
lods
pop
call
pop
push
push
fwait
mulb
pop
daa
pusha
in
cltd
inc
xlat
rorb
rorb
inc
mov
sbbl
add
mov
inc
sti
lea
jmp
mov
adc
xchg
sbb
lods
dec
sub
sbb
aam
add
hlt
push
cmp
jnp
push
sbb
into
mov
dec
insb
lret
sub
pop
hlt
clc
call
and
sbb
and
mov
xchg
pop
nop
insb
out
mov
pop
jne
mov
mov
sbb
inc
add
jl
mov
jp
ljmp
pop
sbb
mov
and
and
les
jmp
inc
jmp
inc
lea
cwtl
sbb
adc
sub
adc
andb
rolb
cmpl
push
loopne,pt
call
adc
adc
fidivl
sub
adc
mov
inc
rol
cmp
mov
std
ret
sahf
fildl
xchg
popa
js
fsub
je
cli
aaa
mov
mov
push
dec
push
push
xor
push
rol
es
test
cwtl
mov
mov
es
xor
les
push
or
aad
fs
cmp
insb
movsl
lret
lock
pop
or
ret
inc
adc
fsubs
sbb
add
add
ljmp
outsb
jmp
add
outsb
jecxz
mov
inc
cwtl
rclb
pop
push
lods
ljmp
sbb
stos
pop
sub
sti
popa
dec
jne
test
push
mov
ret
mov
xor
and
daa
pop
pusha
pop
sub
andl
call
arpl
mov
or
leave
ss
nop
pop
nop
lock
inc
adc
inc
jle
mov
push
or
push
and
pusha
adc
jmp
mov
add
add
add
and
mov
sub
popa
shrb
fcomps
jg
adc
sti
ss
test
mov
xchg
mov
hlt
pusha
dec
sbb
aas
ss
xor
jl
pusha
mov
ret
call
rclb
loope
pop
dec
ret
dec
pop
cli
jb
jmp
movsb
cmp
dec
add
adc
add
add
inc
inc
add
adc
js
adc
adc
loop
incl
pop
xorl
cmp
dec
sarb
out
mov
push
hlt
shlb
jo
rolb
loope
lock
xor
nop
adc
lods
loopne
es
cmp
and
jg
clc
xor
jge
jecxz
sub
into
or
inc
adc
test
cmpsl
call
add
xor
or
or
push
stos
lcall
jne
pusha
cmp
mov
mov
jo
add
add
xchg
add
loopne
stos
lret
and
add
or
adc
mov
pusha
ss
cs
add
or
sub
fsubrs
pop
xchg
pop
fs
inc
ret
cltd
jnp
jne
add
pop
mov
mov
and
fistps
mov
push
xlat
sbbb
sub
mov
sbb
add
xor
sub
jp
test
xchg
lods
popf
andb
push
pop
and
repnz
adc
mov
or
shl
dec
jbe
dec
ret
lcall
jmp
adc
fimuls
mov
xor
and
inc
adc
mov
mov
scas
inc
add
or
clc
add
clc
add
xchg
mov
push
clc
pusha
or
mov
and
sti
add
sub
incl
push
mov
adc
mov
mov
mov
xor
jg
push
test
pop
mov
sub
and
cmpsb
dec
hlt
add
enter
or
mov
lea
pop
lea
sti
in
outsl
sbb
and
sbb
pop
or
lcall
xor
and
push
sbb
test
mov
into
sub
es
inc
pop
dec
sbb
jge
xchg
pop
cmp
sub
pusha
xorb
push
push
ret
fildll
xchg
test
shlb
or
push
cld
int
out
outsl
adc
mov
cmp
dec
inc
ret
pop
jb
out
movsl
decl
pop
pop
add
ret
xchg
xchg
lock
add
cmp
sahf
dec
repnz
shlb
inc
xor
loop
or
in
pop
cmpb
adc
mov
add
add
inc
adc
inc
clc
cs
add
and
aaa
inc
xlat
repz
aam
sti
lds
push
xchg
push
into
pop
insb
ljmp
xor
movsl
cmp
push
pusha
mov
test
jb
lea
repz
push
lea
add
rclb
dec
outsb
pop
jp
or
adc
adc
or
and
and
into
and
aas
stos
data16
sbb
mov
xorl
add
icebp
add
mov
xor
jnp
adc
popa
pop
call
pop
push
jle
add
sbbb
cmp
xor
xor
xor
jmp
test
sbb
ficoml
dec
jo
cmpb
das
or
jo
jo
adc
cli
pop
jo
andl
cmp
add
das
icebp
push
fsubl
aam
add
mov
or
mov
push
jo
into
push
mov
add
decl
xor
fcoms
leave
aas
rorb
adc
mov
jle
add
ret
inc
insb
jo
fildll
dec
jbe
jge
xor
xor
in
nop
push
ja
xchg
lock
shl
mov
pop
mov
or
out
and
add
enter
inc
or
jnp
push
sti
or
mov
bound
push
hlt
pop
adc
addr16
dec
add
add
data16
mov
jbe
mov
enter
push
jl
cld
je
xchg
ret
lock
jp
cmp
mov
clc
mov
xchg
adc
jle
inc
push
mov
dec
movsl
call
out
jo
push
lock
sub
pop
add
adc
cmpl
lcall
or
adc
push
or
les
bound
adc
push
and
and
add
jle
repz
test
xor
jae
sbb
pcmpeqd
xchg
jmp
push
std
jo
jae
dec
xor
jo
shll
or
and
xor
cmc
add
jae
mov
mov
push
and
and
mov
sahf
xor
rclb
addb
je
jo
dec
dec
add
inc
ljmp
sbb
mov
fstpt
or
lock
xor
push
pop
pop
xchg
or
imul
sbb
pop
fwait
inc
add
cmpsl
push
inc
xchg
jne
int3
or
incl
cwtl
cwtl
add
dec
icebp
fwait
mov
lock
inc
mov
sub
movsl
push
test
or
xor
adc
push
lods
fwait
pop
pushf
cld
leave
mov
hlt
rolb
rolb
cs
jbe
js
and
adc
xchg
jmp
push
pop
int3
pop
dec
adc
jne
jo
mov
jbe
inc
nop
mov
bound
ret
push
sub
push
cld
and
jbe
sub
inc
jmp
xor
dec
adc
mov
loopne
push
push
pop
or
mov
mov
nop
inc
jo
adc
inc
test
mov
call
xchg
gs
ljmp
mov
jg
enter
adc
add
pusha
insb
ljmp
shr
dec
cmp
mov
lock
xchg
or
push
adc
add
cmc
hlt
rsm
inc
fsubl
orl
adc
and
jg
mov
dec
mov
mov
call
inc
mov
fdivl
add
rol
mov
icebp
push
push
icebp
or
xor
inc
sbb
pushf
xor
or
aam
cmp
stos
jmpw
xor
jo
mov
push
jb
jbe
insl
sbb
pop
icebp
in
call
nop
testl
sbb
mov
je
push
push
cmp
inc
in
sbb
jl
decl
negl
xor
or
ret
or
push
std
add
xor
ret
into
and
scas
mov
pop
xor
pop
adc
add
inc
add
or
and
lock
sbb
fistps
mov
inc
shlb
testl
mov
adc
inc
cld
xchg
cmp
xor
jbe
pusha
clc
jo
fcomip
popa
jl
adc
lods
push
xor
lock
jo
pop
lods
shrd
out
inc
clc
popf
sti
and
mov
stc
test
xor
filds
jmp
add
add
sbb
mov
sbb
add
inc
ja
mov
add
addr16
dec
adc
cld
jno
sub
or
sub
shlb
int
cmpxchg
mov
fsubrl
insb
popa
add
adc
add
pusha
loopne
cmp
nop
cs
jg
addb
sbb
clc
jmp
clc
add
inc
xor
sysexit
lcall
popa
push
sub
mov
fdivl
dec
mov
mov
fs
jg
jle
mov
push
push
and
icebp
adc
mov
inc
fdivr
outsl
sbb
test
lock
cmp
lock
xor
sub
pop
add
xor
out
pop
std
dec
and
lock
xor
sbb
pop
inc
in
push
repz
popa
cld
aas
mov
fsubr
repz
add
cmp
sub
push
dec
dec
mov
jo
inc
ja
jle
inc
decl
dec
adc
je
fimuls
xor
lock
hlt
mov
inc
sub
push
and
jo
sub
inc
or
add
mov
jno
jmp
loop
jne
rolb
pop
enter
decl
dec
ret
add
gs
lcall
adc
mov
adcl
jle,pt
jo
jecxz
dec
mov
mov
mov
test
adc
jmp
pop
add
or
push
leave
mov
je
xor
inc
out
adc
fcoms
incb
cld
mov
test
cmp
xor
add
add
and
inc
mov
add
push
repnz
fisttps
sub
andb
xor
add
sub
or
cli
fmuls
pop
adc
icebp
jo
push
xchg
xchg
int
jo
fcmovb
push
mov
lcall
ds
xor
mov
xor
and
inc
jbe
adc
mov
je
call
data16
mov
adc
adc
lock
rolb
xor
call
insb
rorb
xchg
push
inc
lret
sub
adc
inc
xorl
push
cli
push
push
cmp
sahf
out
je
shr
rolb
push
inc
dec
or
fsubrs
inc
in
adc
mov
fwait
add
jle
xor
push
cmp
mov
and
pop
mov
scas
aad
cmp
mov
adc
movb
pop
aam
jle
or
dec
cs
push
and
add
add
adc
jle
iret
push
mov
orb
dec
push
mov
dec
pop
mov
inc
sub
sub
scas
add
inc
jecxz
add
fidivl
inc
call
sub
test
push
adc
and
test
push
and
clc
mov
push
push
or
ror
adc
imull
adc
pop
subl
push
sbbb
adc
add
fists
out
insl
and
mov
fsubs
push
push
push
repz
shll
loopne
mov
shrb
incl
sbbb
orb
add
loopne
test
and
push
inc
add
jle
fdivrl
lock
lea
mov
xchg
jl
xor
jne
adc
fbld
and
and
adc
inc
mov
push
repnz
lret
sbb
adc
inc
sbb
scas
jo
repnz
and
inc
pusha
xorl
adc
mov
mov
mov
or
mov
sbb
call
jg
or
pusha
add
xchg
mov
test
lcall
push
push
dec
add
aam
xchg
ret
movsb
les
adc
pop
les
mov
fld
insb
out
cli
xchg
decl
int3
cmp
scas
fs
and
jo
and
loop
adc
xor
jp
addr16
ret
adc
je
pop
mov
or
sbb
and
popa
inc
testb
add
data16
inc
test
cmp
shrb
orl
ret
mov
lods
dec
and
mov
inc
nop
jo
sbb
xchg
in
pop
mov
jg
jo
dec
into
cmp
mov
fildl
mov
mov
sub
imul
popl
and
incl
je
push
push
fcmovbe
data16
test
add
shll
stos
or
ret
cmpsb
jb
adc
or
js
xor
and
aas
aam
out
jne
push
loope
and
lcall
and
add
inc
or
cmp
outsb
aam
or
sub
shlb
test
cli
enter
or
rcrb
ja
aad
adc
adc
ret
push
pop
sub
sub
inc
rcll
cmc
or
inc
mov
xchg
repz
xchg
mov
dec
ret
push
test
push
xor
repz
adc
push
enter
hlt
cs
inc
push
adc
stos
push
jle
sbb
mov
aaa
xchg
fsubrp
neg
cld
push
and
xor
add
xchg
inc
sub
call
xchg
or
dec
jecxz
jo
add
mov
lea
push
dec
aas
sbb
clc
lds
mov
add
and
aaa
bound
or
push
sbb
bnd
outsb
add
xchg
loopne
add
sbb
popa
push
and
adc
and
shl
sub
cwtl
bound
mov
cld
fs
sub
loopne
or
and
mov
fidivrl
pusha
pop
fcomps
cmpsl
or
adc
shlb
xor
push
push
sbb
aas
ss
clc
or
or
and
andl
pusha
add
adc
shlb
mov
fcomp
or
push
fs
aam
cmp
dec
ficoms
dec
aad
xchg
ja
stos
pop
mov
jb
pop
shlb
pusha
push
loope
or
add
addr16
xlat
add
test
add
inc
test
adc
out
add
jecxz
loopne
jo
orb
cli
push
or
in
jl
sbb
jmp
mov
mov
adc
inc
push
bound
adc
es
cmpsb
jbe
shrb
nop
inc
add
dec
dec
aam
popa
xor
inc
loope
and
jmp
and
pop
scas
push
pusha
inc
test
clc
dec
xor
jns
fldl
in
xchg
add
mov
dec
std
or
sbb
divb
pusha
outsl
out
loopne
fidivl
in
adc
loopne
addl
nop
mov
clc
sarb
testb
aad
mov
pop
mov
adc
call
push
add
pop
or
fistps
cli
mov
lea
loopne
mov
inc
cmpl
hlt
add
andb
xchg
add
ret
cmp
add
loopne
hlt
loopne
dec
add
pusha
inc
mov
call
xor
mov
xchg
xchg
or
add
cmp
hlt
cmp
pop
and
xchg
loope
loop
int
jmp
loope
movl
xchg
call
addb
sbb
add
mov
jno
or
lods
or
adc
nop
cld
ror
je
ljmp
rorb
push
inc
push
push
pushw
add
push
mov
lods
and
aam
lea
or
sub
sahf
loopne
add
aas
call
mov
out
lea
das
push
xor
xchg
sub
clc
xor
lock
clc
sbb
outsl
push
mov
sti
jno
loope
add
or
jg
popa
mov
adc
xor
push
mov
dec
rcrl
jb
sbb
add
ja
xor
mov
cwtl
icebp
orb
or
add
push
dec
mov
adc
adc
add
pop
mov
mov
lret
cld
into
pop
add
movl
add
lods
loope
add
lcall
fistl
or
test
stos
inc
adc
mov
outsw
dec
add
aad
shlb
hlt
xor
cmp
jp
dec
js
mov
mov
pusha
xchg
adc
adc
mov
ret
mov
cmp
clc
iret
ljmp
inc
loope
das
bound
lock
mov
icebp
lahf
movsb
inc
mov
mov
jno
rorb
sbb
aas
add
lods
cmp
xchg
push
push
repnz
jbe
mov
xchg
xor
mov
nop
subb
dec
cmp
adc
mov
mov
div
scas
adc
mov
xor
adc
popf
add
mov
inc
add
ja
fmuls
mov
adc
xor
sarb
mov
bnd
adc
xor
mov
jle
adc
outsb
fisubl
ss
adc
xchg
lods
push
cmp
add
popf
test
push
cli
or
and
add
xor
sbb
out
orb
divb
pop
in
inc
loopne
loope
mov
aas
mov
les
test
mov
adc
lea
pop
div
pop
jecxz
pop
xor
pop
add
mov
jg
cmp
add
adc
sti
xchg
cs
lock
popa
xchg
imul
std
addb
mov
jmp
add
lea
scas
adc
int3
add
test
sub
jo
incb
inc
push
mov
push
mov
pop
repnz
adc
imul
mov
xor
cmp
add
call
xor
cmpsb
mov
mov
mov
sub
mov
jb
fsubr
or
ljmp
mov
add
add
add
jl
std
inc
call
and
je
mov
mov
pop
outsb
dec
adc
mov
jbe
add
add
pop
dec
jle
orb
add
add
jmp
test
cmpb
insb
mov
lods
pusha
mov
push
dec
clc
fistpll
fisttpl
sti
jle
mov
add
popf
nop
add
mov
mov
icebp
jp
mov
data16
test
inc
jl
cmp
shr
lods
loope
mov
pop
jbe
jl
movsb
xor
add
pop
and
aaa
jl
push
add
mov
and
je
mov
bound
mov
jl
jge
sbb
add
jge
or
jmp
jo
mov
inc
notl
add
adc
dec
add
mov
dec
mov
push
ret
int
mov
in
cmp
clc
mov
mov
add
jp
jno
push
push
xchg
adc
xlat
xor
mov
fdivs
pop
or
mov
repnz
add
js
loopne
testb
mov
or
pop
hlt
movq
pop
test
es
fdivs
add
clc
push
jbe
add
inc
or
dec
add
ss
cmp
mov
xchg
lock
xchg
mov
inc
push
out
sbb
mov
clc
mov
mov
rcrb
lock
or
cmpb
inc
cld
lock
scas
jno
or
xor
cmp
or
pop
repz
jl
inc
inc
jl
test
jl
lock
and
test
mov
rorl
lods
movl
push
push
jbe
lock
add
clc
ljmp
cmp
orl
cmc
leave
cmp
push
push
push
or
jo
sub
add
sub
push
or
pop
or
xchg
and
loopne
jmp
mov
inc
sti
push
fsubl
add
xor
mov
sub
rcll
cmp
adcb
cmc
inc
outsb
repz
sub
inc
push
jb
jne
call
add
shrb
sbb
xchg
inc
mov
mov
sbb
mov
xor
mov
testb
xor
cmc
sbb
je
dec
add
sub
xor
cwtl
fcomip
or
push
je
fs
stos
loopne
ja
lea
add
cltd
ss
sub
loopne
cli
and
orb
or
push
lret
adc
push
jo
scas
add
inc
xorl
or
sub
mov
idivb
mov
lock
fisubs
sarb
mov
sub
push
aaa
and
stos
das
test
dec
sbb
lock
add
popf
shl
jg
sbb
dec
inc
fistl
push
scas
inc
divl
lock
inc
sbb
dec
inc
xor
movb
xor
cmpb
mov
pop
mov
inc
shll
xor
add
sbb
ljmp
sbb
and
push
sarl
add
lea
add
cmp
jmp
jbe
lock
adc
add
call
pop
daa
push
lock
mov
fidivs
jno
cs
xor
pop
cmpsb
shll
jmp
pop
cwtl
push
ljmp
mov
xor
les
xor
stos
fisubrl
and
divb
push
push
cmp
add
push
sub
push
xchg
dec
adcb
inc
push
jne
fnsave
xor
adcb
mov
incl
arpl
jne
push
push
lret
lods
xor
push
cmp
jae
push
or
rol
push
shl
mov
aad
clc
pop
mov
or
xor
or
pop
jne
mov
es
push
mov
or
jb
sbb
lock
jecxz
dec
pop
jmp
hlt
mov
inc
and
pop
in
and
xor
inc
or
or
push
add
sub
inc
jo
je
push
fsubp
addb
sub
sbb
rorb
and
add
pop
add
inc
xchg
shll
mov
pop
test
xor
lret
pusha
adc
repz
arpl
or
aad
push
add
pop
add
fwait
lahf
inc
sar
pop
add
lahf
call
push
dec
push
leave
inc
jo
dec
cli
mov
push
mov
jo
cmc
push
adc
sub
xor
arpl
shll
sahf
cmc
add
mov
jmp
addb
call
scas
neg
add
js
call
andl
ds
push
or
and
or
jp
outsb
fbstp
xor
insb
test
sbb
ds
mov
cld
les
scas
fwait
data16
sbbb
sub
les
mov
and
pop
add
in
lods
add
add
lock
add
inc
clc
pushl
add
dec
sub
adcb
inc
fistl
xor
inc
xchg
pop
loopne
pushf
call
xor
dec
push
outsl
sbbb
leave
pop
ret
add
sub
mov
hlt
aam
roll
jbe
aad
sbb
insl
mov
add
aas
cmp
adc
lock
add
fdivrp
cmpsb
and
cltd
mov
add
add
dec
mov
je
sub
sbb
sbb
orb
adcb
in
adc
jle
sbbb
ret
fidivrl
mov
ret
xor
pushf
orl
je
or
std
iret
and
jmp
and
pop
test
orl
lea
scas
inc
cwtl
jle
or
sbb
fsubl
dec
sub
mov
push
xor
cmp
xorb
mov
add
add
xor
ljmp
adcb
andl
jg
push
test
xorb
or
aam
inc
sbb
xor
movsb
mov
sub
and
ss
cmpsb
add
pop
in
inc
cwtl
push
dec
mov
nop
fldl
dec
movsl
sub
leave
xor
push
and
adc
andl
and
fsubl
cmp
in
jbe
mov
xor
aaa
popa
sarb
je
shrb
mov
loopne
hlt
divb
inc
ss
jle
push
or
lock
sub
jne
add
js
inc
jecxz
inc
jg
pop
lods
adc
call
push
push
or
inc
lret
or
outsl
je
add
adc
or
addb
jne
jg
rclb
mov
hlt
in
call
aaa
lock
cmp
xchg
jnp
xor
jg
lods
add
dec
push
orl
mov
je
jbe
add
adc
dec
std
mov
dec
cmp
bound
and
roll
xor
dec
sub
and
adc
jl
cwtl
mov
mov
push
jg
sub
add
call
lcall
add
mov
pop
enter
in
push
pop
push
sbb
mov
mov
mov
sub
push
adc
cmp
in
mov
sub
add
enter
pop
mov
adc
mov
mov
pop
adc
xchg
addl
inc
sub
or
mov
inc
in
push
or
jl
sbb
mov
push
jle
pop
pusha
lods
xor
push
sahf
sub
js
sbb
addb
xchg
mov
insb
add
add
and
cli
xor
push
xchg
dec
and
and
popl
ret
stos
js
rcl
adc
jge
mov
hlt
add
sub
sub
mov
mov
outsl
add
cmp
adc
in
mov
push
ret
pushf
dec
cld
andb
sub
rclb
jbe
mov
ljmp
pop
ret
add
mov
mov
fwait
inc
xlat
mov
lds
and
or
or
pop
enter
add
popa
push
mov
lock
or
and
out
pop
sbb
dec
inc
mov
or
pop
push
int3
pop
inc
clc
shlb
dec
loopne
cld
pusha
imul
dec
in
add
push
xchg
pushf
cwtl
inc
mov
or
sub
pop
call
or
das
test
mov
jecxz
pop
shl
dec
data16
dec
push
pusha
pop
loope
ljmp
into
adc
add
jge
adc
in
popa
es
mov
jmp
pusha
cmp
inc
test
decl
cld
pusha
sbb
adc
loope
sbb
inc
and
mov
inc
add
out
cwtl
loop
add
add
jecxz
lods
sbb
or
push
push
loope
mov
sbb
cld
loopne
call
sub
testl
lret
adc
pop
dec
jg
or
ret
pop
cld
aaa
inc
clc
sti
loopne
popa
pop
fs
push
pusha
and
add
ja
rcl
aas
pushf
push
cltd
cmp
mov
inc
insb
mov
loopne
inc
add
adc
outsl
xchg
int
lds
fildl
push
jb
and
in
inc
adc
popa
add
mov
or
push
dec
pusha
push
add
mov
sarb
lock
push
cmpb
inc
ret
cmp
bound
xorl
inc
nop
decb
or
je
pavgb
mov
cld
or
and
adc
xor
popf
js
test
loope
add
call
mov
pusha
push
mov
inc
aas
test
cli
shlb
push
adc
ss
pusha
lods
hlt
nop
test
mov
adc
ret
pop
adc
sarb
je
push
xchg
xor
inc
or
pop
mov
sbb
adc
aas
adc
push
nop
ljmp
jne
imul
push
push
push
pop
cmc
dec
repnz
call
ret
lret
or
js,pt
loopne
movsb
add
mov
push
jne
add
pusha
and
jmp
mov
mov
sti
jne
out
add
mov
mov
ds
les
or
sub
and
and
jo
pop
mov
jg
popa
add
add
in
and
loope
lods
inc
jne
js
add
call
adc
xor
or
arpl
push
idiv
neg
adc
xchg
loopne
inc
cmp
pop
add
subb
out
lock
add
push
dec
out
pusha
stos
test
xchg
pop
add
adc
je
and
pop
push
push
pop
pop
xchg
ret
shlb
nop
xchg
or
add
xorl
sti
in
outsb
imul
xor
mov
js
jp
sub
cmpb
cmpsb
add
xchg
mov
subb
loop
int3
sbb
cltd
fdivl
imulb
and
fcomi
sub
adc
add
clc
pop
adc
inc
pusha
rorb
jp
stos
jb
inc
pusha
sbbl
xchg
jp
jl
pop
pusha
xchg
or
repnz
add
add
add
in
icebp
outsl
fcomi
push
jge
or
pop
mov
mov
mov
hlt
or
push
push
nop
mov
pop
add
test
jo
sub
inc
cmp
and
add
xchg
dec
cli
out
push
mov
out
dec
inc
jae
mov
pop
shl
lock
cmpsb
insb
ss
incb
loope
jbe
sub
ljmp
mov
cmp
call
mov
sbb
insl
push
mov
pushl
outsl
mov
push
mov
testl
xor
mov
daa
xor
mov
inc
stos
mov
pop
inc
jl
std
mov
or
movsb
lock
inc
or
inc
sub
pop
js
sahf
inc
and
inc
int3
jno
mov
andb
mov
aaa
jae
fbstp
push
or
repnz
xor
mov
stc
adc
jg
or
adc
jmp
ret
sbb
add
cmc
lea
lahf
mov
mov
test
or
inc
pop
adc
pop
hlt
or
lods
incb
inc
jmp
popa
aaa
hlt
fwait
ljmp
mov
rcrb
mov
lcall
sbbb
adc
ss
nop
rolb
shl
pushl
cmp
lds
in
jno
scas
xor
test
mov
jo
fsubs
inc
pop
fists
or
cmp
psrld
jno
push
daa
pop
pushl
push
lock
mov
add
mov
and
mov
adc
leave
lods
and
xor
inc
sbb
lcall
jmp
test
or
lock
pusha
xor
xor
xor
out
and
in
pop
inc
xor
lock
adc
adc
and
inc
out
adc
add
add
fmuls
mov
scas
rclb
ja
add
lea
fmull
inc
ljmp
or
aaa
mov
loope
mov
pop
popf
cli
xor
mov
xor
xchg
icebp
std
icebp
lea
mov
pusha
jecxz
push
bnd
jo
add
clc
and
mov
repz
icebp
mov
mov
cs
hlt
add
push
xor
fdivp
add
outsb
mov
pop
insb
cmp
es
loopne
incl
div
icebp
nop
pop
idiv
mov
ljmp
and
xor
or
inc
xor
lret
cli
add
xor
xor
cwtl
outsb
sbb
leave
dec
les
test
pusha
adc
xchg
loop
addb
or
push
dec
lock
lock
out
add
aaa
in
mov
jmp
xor
add
mov
aaa
sub
and
jno
cli
add
push
add
leave
out
pop
mov
or
jmp
xor
pop
inc
pop
cmp
and
sub
push
mov
add
mov
sar
mov
add
or
out
pushf
cmp
mov
inc
push
int3
add
jmp
mov
adc
out
cld
sub
ja
inc
out
xor
dec
xor
je
adc
jle
add
add
inc
into
call
lods
sbb
adc
lock
inc
push
pop
pop
ret
in
lea
mov
stc
stc
rorb
or
lea
shrb
add
sub
scas
js
lock
je
jmp
sarb
sbb
cltd
push
inc
lods
and
test
adc
jp
cmp
push
in
int
sub
mov
icebp
arpl
outsl
add
lods
pop
inc
mov
adc
sarl
adc
jae
inc
ret
push
jb
pop
or
ja
clc
or
je
sub
cmp
add
jno
mov
inc
xchg
lods
lock
ja
add
xchg
movsb
mov
jb
cmp
xor
icebp
ja
inc
cmp
icebp
and
outsb
mov
jne
push
sub
inc
scas
aam
cmp
mov
scas
es
mov
and
cmpb
ss
mov
sub
xor
enter
and
imulb
iret
jb
cmp
dec
repz
pop
jne
mov
sub
fiaddl
stc
adc
xchg
pop
in
mov
pop
xor
mov
push
cltd
insb
jmp
mov
mov
dec
sbb
jne
mov
add
ja
test
xor
mov
mov
cld
mov
cmp
sub
call
gs
jb
or
mov
adc
addl
and
sbb
sub
lea
cld
cmp
pop
clc
cmpb
mov
xor
or
lock
pop
mov
xor
lock
roll
jecxz
push
mov
lea
pop
call
ljmp
xor
jb
push
ss
push
push
or
add
pop
lods
push
push
push
xor
inc
mov
cmp
sub
pop
dec
mov
push
sub
add
pop
mov
sub
mov
jp
mov
pop
add
pop
xor
dec
jp
push
push
push
push
js
push
mov
pop
pop
lds
mov
add
aaa
xor
or
inc
adc
jg
inc
std
xor
add
ss
call
lds
xchg
sbb
lahf
inc
mov
loopne
and
fs
aam
adc
jb
sbb
mov
ja
insb
mov
fs
scas
sub
pop
cmpsb
icebp
or
lock
lods
call
test
and
cmp
and
push
out
test
cli
ja
sbb
adc
jo
ljmp
cmp
jmp
inc
xchg
fdivr
pop
mov
rclb
sub
inc
mov
aam
lods
cmp
mov
mov
push
mov
add
dec
adc
sahf
inc
cwtl
and
pop
pop
and
insb
pop
inc
or
pop
in
sbb
push
aaa
add
mov
adc
clc
adc
pop
push
pusha
sbb
pusha
pop
mov
adc
adc
divb
int3
push
sub
sbb
mov
add
pop
movsl
aaa
rolb
scas
mov
push
es
fcoms
in
xor
or
cwtl
call
mov
pop
adc
jae
sub
inc
dec
jecxz
lcall
sbbb
dec
sbb
push
js
sub
xlat
sbb
cmp
icebp
adc
call
pusha
insl
je
movsb
and
mov
subl
cmp
cmp
in
jl
das
je
stc
pop
callw
push
cmpsb
lock
rolb
shrl
ss
sbb
or
xor
mov
jno
fisubrl
adcb
push
cmp
mov
jbe
loop
adc
out
addr16
mov
inc
xchg
and
out
push
fs
sub
out
and
mov
in
ss
or
sti
jne
add
push
nop
adc
les
adc
mov
pop
add
push
add
inc
xor
mov
xchg
mov
mov
jle
or
and
add
jo
test
dec
inc
aad
addb
adc
out
stos
incb
sub
or
xchg
fs
sub
rorb
pop
xor
mov
int
and
adc
rol
and
mov
clc
jge
adc
and
lcall
je
dec
sahf
sub
jnp
cli
push
add
shlb
subb
add
ja
lock
mov
andb
and
inc
or
adc
ss
mov
cmpl
in
js
insb
loopne
pop
call
cmp
pop
adc
addb
pop
pop
inc
andb
mov
cmpb
push
pop
rcrb
push
hlt
inc
xor
lods
mov
mov
js
jmp
mov
movsb
xorb
cmpb
inc
ret
mov
pushf
or
and
cmp
out
es
sbb
xchg
orb
adc
mov
insl
pop
fs
mov
cmp
dec
xchg
outsl
pop
cmp
lea
call
mov
sbb
sbb
or
add
stos
sbb
into
in
clc
fnop
inc
imul
lahf
gs
adc
inc
mov
add
push
pop
add
inc
inc
out
ja
push
and
outsb
inc
cmp
sbb
push
sbb
sar
fmull
shll
stos
push
rorb
mov
cmpb
fbld
pushf
data16
je
cli
decl
out
rol
inc
test
rolb
insb
shrb
movsb
mov
mov
lods
incl
negl
shrb
out
and
xchg
rorl
pop
push
push
mov
sub
push
mov
adc
pop
add
mov
ds
dec
das
pop
xor
cwtl
lds
jg
sbb
add
pop
shrb
fcompl
jp
mov
jle
daa
roll
aam
and
das
or
insb
add
push
push
lea
sti
decl
enter
dec
jae
rolb
inc
inc
rolb
lock
test
or
rolb
movsb
outsl
add
add
jp
rclb
int
loopne
add
cld
shlb
xchg
jo
push
jp
adc
fucomi
adc
shlb
xor
aaa
dec
pop
sbb
stos
leave
ret
cs
mov
out
js
fmulp
int3
xor
push
les
or
mov
nop
lret
push
xor
add
push
shlb
shr
push
inc
sbbb
ja
dec
jmp
rorb
mov
adcb
rclb
movsb
cld
les
ret
jbe
xorb
or
mov
dec
fcoml
push
ja
lea
and
jl
mov
push
jo
lods
cwtl
ret
jp
add
push
inc
adc
inc
movsl
push
hlt
scas
mov
cmpb
pop
mov
cmp
iret
nop
jne
test
decb
cmp
mov
lock
xchg
sub
xchg
outsl
ljmp
loope
ljmp
xchg
push
rorb
stos
shrl
jne
test
cld
shlb
add
push
add
and
fisttps
call
pusha
and
loope
rol
test
bound
pop
fcomps
and
enter
lock
lods
jmp
push
xor
lods
lods
ljmp
dec
adc
loopne
in
mov
push
mov
incb
repnz
mov
stos
inc
les
jbe
add
xchg
or
insl
aam
idivb
popa
mov
jle
push
sub
inc
push
push
lock
adcl
adc
sahf
pusha
adc
je
shr
mov
add
push
adc
pop
lods
push
sbb
jecxz
sub
or
xor
andl
push
push
lods
push
imul
xor
mov
add
loope
inc
jmp
lods
or
shll
cmpsb
jbe
pop
sti
in
sbb
pop
pushf
and
adc
or
lods
adcb
out
ret
loopne
jmp
mov
sti
outsl
fwait
adc
mov
add
loop
aam
sub
mov
es
scas
add
jg
dec
xor
rcrb
roll
cmp
lret
add
iret
dec
adcb
add
adcb
outsl
add
or
test
push
test
ja
repz
dec
add
mov
jae
call
add
pcmpeqb
jb
add
add
cld
cmp
mov
dec
dec
out
push
loop
popa
jo
mov
outsb
outsl
cli
pushf
clc
je
adc
aam
sub
icebp
jbe
ja
sub
jae
cmp
hlt
mov
js
pop
mov
or
lock
lea
lock
fidivl
mov
mov
jmp
imul
add
js
or
cli
or
adc
mov
or
stos
dec
sub
mov
out
mov
ds
push
mov
add
push
or
mov
popa
sub
jl
adc
push
inc
push
shlb
push
in
clc
push
scas
jo
aaa
sub
imul
loopne
sbb
push
push
call
xchg
push
xchg
inc
shll
inc
jmp
in
les
out
cmpsb
fs
pusha
push
or
pop
testl
mov
cmp
xor
add
bnd
scas
lock
add
dec
dec
or
mov
mov
push
popa
pop
xor
sahf
js
repnz
sbb
cmp
xchg
filds
stos
add
mov
or
hlt
add
add
loopne
mov
loopne
dec
xchg
adc
cmp
enter
push
subl
repnz
sub
call
or
bound
fisttpl
add
add
ret
push
pusha
sbb
hlt
ja
dec
jno
add
decl
bound
adcb
es
ljmp
pop
test
movsb
push
rcrb
sbb
ljmp
mov
hlt
fistps
loopne
out
xchg
cmpb
mov
jmp
and
push
call
lods
daa
test
jbe
inc
add
push
sub
mull
sub
clc
aas
repnz
or
cmp
es
jae
xor
rolb
dec
in
cli
sahf
cmp
add
inc
xor
pusha
add
add
add
push
or
mov
ss
or
iret
xor
push
ja
xor
sbb
and
jp
jo
jno
addb
or
xor
shrb
push
addb
dec
sub
xchg
adc
and
sub
sbb
and
cld
pusha
dec
ror
adc
test
inc
je
daa
cli
decb
push
mov
call
lock
and
stos
inc
or
pop
cmpl
push
dec
mov
iret
xchg
inc
and
sub
mov
fildl
add
dec
add
ret
xor
mov
cs
mov
pop
repz
orb
push
push
cmp
rorl
add
sub
ss
test
imul
or
sbb
adc
inc
push
dec
and
sub
icebp
adc
add
mov
or
and
add
mov
mov
pop
mov
mov
addb
jo
scas
push
adc
add
es
and
pop
add
mov
xor
xchg
test
lods
sub
sti
sub
or
adc
les
cmp
mov
call
add
and
add
negb
data16
mov
add
adc
in
mov
arpl
xchg
pushf
aam
js
mov
fdivs
or
mov
cs
cld
test
and
mov
mov
fdivl
rorb
jecxz
sti
pusha
ret
bnd
cmp
jmp
mov
add
jp
faddl
and
add
lock
push
mov
lods
ret
mov
into
lcall
jl
shlb
cmp
test
loopne
in
mov
xor
imull
push
mov
or
ds
push
mov
fs
enter
xor
shr
pop
inc
xor
ljmp
shrl
cmc
incl
fcmovnbe
adc
jne
hlt
negl
fwait
jg
or
sub
out
jb,pn
mov
decl
cmp
ja
jb
cmp
mov
jbe
dec
sub
rcl
mov
aam
or
push
mov
fisubl
gs
push
les
es
pop
ret
push
sbb
mov
hlt
push
adc
jo
push
stos
inc
loop
aas
dec
pushl
orl
push
push
push
cmpsl
and
pop
movsb
ret
mov
ret
test
xor
inc
dec
xchg
stos
imul
and
roll
lret
jp
add
jo
cmp
push
rclb
js
fs
inc
dec
cmp
aaa
xor
lea
jmp
push
mov
push
push
lea
test
mov
adc
inc
int3
stc
jb
je
and
loope
xchg
icebp
es
jb
add
cmp
jb
push
sbb
mov
or
shlb
sub
add
mov
popa
adc
das
cmp
dec
push
outsl
inc
pop
cmpsb
pop
mov
mov
cld
fcmovnb
call
loopne
test
inc
aam
andb
fimull
cmp
xor
scas
shrl
aad
mov
call
mov
dec
mov
fadd
mov
mov
or
inc
dec
fisttpl
push
fs
cwtl
mul
je
xorl
xchg
mov
sub
sarl
push
shrb
sbb
pop
jbe
add
xorb
push
mov
aam
into
add
add
clc
out
adc
lds
jbe
mov
jo
xor
inc
mov
aaa
sub
mov
sbb
fwait
mov
lahf
mov
xchg
pop
mov
push
cmp
movsb
ss
js
cld
scas
xchg
loop
jmp
push
sbb
pop
fwait
sbb
rolb
xor
xor
imul
push
jmp
stc
jbe
divb
scas
into
mov
push
inc
dec
fisubs
sbb
mov
xchg
add
adc
adc
sbb
dec
fbld
jl
adc
pop
xor
sub
mov
fcos
pop
or
jno
ret
mov
jno
mov
push
jno
xchg
mov
call
repnz
sub
and
pushl
je
sub
jno
adc
lcall
or
xorb
loopne
lock
or
inc
scas
inc
xlat
clc
rorl
inc
and
mov
fistpl
add
test
ja
add
jecxz
inc
negb
or
inc
jae
dec
add
mov
les
orl
add
out
aam
xor
push
adc
add
sbb
mov
rclb
icebp
adc
pop
cmp
mov
loope,pn
or
lock
adc
mov
push
scas
adc
mov
pop
inc
lock
fs
je
andb
push
es
iret
push
add
pop
and
adc
je
dec
dec
iret
xor
and
add
sub
dec
dec
fdivrs
out
out
adc
pop
mov
mov
sub
das
cli
push
mov
mov
lea
add
jbe
inc
ret
inc
and
mov
mov
jbe
gs
xor
dec
addb
add
mov
jg
jo
and
mov
inc
xchg
jmp
add
ret
mov
data16
mov
mov
jmp
add
push
je
sar
or
cmpsb
push
add
mov
inc
inc
insb
ljmp
push
mov
mov
mov
mov
push
push
xor
push
inc
cmp
call
inc
push
lock
mov
test
jl
enter
sbb
ss
dec
push
mov
adc
loopne
dec
add
and
jbe
inc
dec
or
pop
das
mov
repnz
jo,pn
mov
push
xor
dec
testb
out
addr16
insb
orb
into
jnp
pop
add
sti
add
or
outsl
ret
mov
push
add
stc
xor
pop
mov
inc
data16
ret
lea
aaa
sbb
aam
add
hlt
lcall
mov
cld
enter
stc
fistps
fiaddl
mov
shlb
push
inc
jo
int3
fimuls
pop
push
sbb
inc
xchg
xchg
mov
ds
push
xchg
adc
cli
lea
cmp
add
ja
pop
xorl
pop
mov
je
sbb
fdivrs
hlt
pusha
push
xor
mov
cmp
mov
sub
dec
mov
repnz
mov
sub
mov
leave
js
push
cmp
shl
add
incb
rclb
push
push
sbb
sti
add
xchg
ds
shrb
and
and
cld
addb
sub
jl
pop
cmp
mov
sub
sub
fdivp
movsb
lea
es
hlt
pop
add
lcall
pop
fildl
xor
add
mov
or
dec
push
add
test
adc
pop
scas
fcoms
adc
inc
jo
xchg
jbe
mov
xchg
cld
sub
lock
shlb
fsubl
xchg
sub
lods
xorb
mov
add
mov
sarb
lret
insl
inc
push
mov
inc
shl
sbbb
mov
and
lods
les
xchg
scas
int3
adc
cmp
jnp
ret
push
xor
dec
idivl
lahf
mov
adcb
and
push
sbb
dec
push
rolb
cmp
movsb
mov
adc
jp
fdivs
add
and
in
addb
pop
pop
je
or
cmp
mov
adc
f2xm1
testb
cmp
dec
mov
inc
sahf
add
jb
insb
and
fldenv
mov
pushf
pushf
add
inc
lods
nop
icebp
aaa
int3
add
insb
in
dec
mov
xor
scas
push
sub
subb
ljmp
enter
and
fcoml
dec
inc
lahf
cmpl
in
jg
cwtl
sbb
stos
pushf
or
dec
jo
push
and
inc
pusha
je
movsb
add
mov
cmp
or
xchg
cwtl
rolb
incl
roll
add
into
push
sub
nop
adc
jge
lret
or
arpl
test
xchg
or
addl
jae
nop
fbstp
sbb
mov
sarl
sub
decl
decb
adcb
ret
xchg
rclb
inc
leave
sub
arpl
shl
xchg
rcl
mov
ret
dec
je
xchg
ljmp
stc
pop
lods
add
sub
fs
dec
cmp
stos
addr16
testb
shl
and
insb
xor
and
push
pop
popa
aam
mov
mov
sti
pop
sbb
add
xor
or
and
pusha
mov
movsl
clc
pop
lds
push
push
mov
int
or
pop
mov
add
and
jg
int
mov
rclb
dec
jmp
rcrl
mov
std
mov
ret
push
jg
pushl
ret
dec
mov
pop
dec
inc
adc
inc
data16
sbb
push
jge
or
sub
enter
inc
cmp
adc
mov
stos
je
scas
push
aam
mov
cmp
std
addb
add
add
scas
push
mov
ds
rsqrtps
push
lahf
stc
rorl
sub
push
ret
hlt
jg
test
mov
pop
lret
sub
ljmp
je
int3
cmpsl
cmp
int3
inc
pop
adcb
pop
out
adcb
xor
popa
test
icebp
adc
pushf
jl
sub
pop
sbb
jl
les
pop
pusha
push
lea
rcrl
roll
ret
out
pop
and
addl
jo
add
popl
cli
loopne
out
or
sub
loopne
inc
add
rolb
adcl
add
test
mov
pop
insb
dec
out
add
sub
pusha
cmp
repnz
push
fiaddl
push
sub
pusha
pop
adc
xor
add
dec
data16
inc
pop
insb
mov
adc
mov
ficoml
mov
sub
js
test
mov
incb
mov
pusha
jae,pn
add
xchg
cld
scas
mov
loopne,pn
cmp
ja
inc
push
sbb
mov
xchg
pusha
cmp
cmp
mov
mov
fs
mov
adc
mov
gs
adc
add
add
js
jg
xor
add
outsl
loopne
cmp
cltd
popa
pop
loopne
cltd
dec
fs
jg
mov
je
sub
lahf
movsb
rolb
or
mov
lds
ljmp
xor
data16
sub
cwtl
mov
pusha
bound
lahf
loop
push
mov
mov
lock
adc
nop
add
ficoms
sub
dec
inc
adc
leave
and
inc
and
addb
mov
ljmp
js
arpl
pushf
mov
inc
rolb
loop
inc
js
jo
leave
addl
push
mov
jbe
call
loop
mov
mov
inc
fcomp
mov
mov
push
rol
test
inc
jnp
adc
xor
mov
mov
push
in
fisubl
add
out
inc
or
push
popa
leave
cmp
inc
outsb
dec
loop
bound
outsl
xor
jne
loopne
incb
movsl
int3
push
inc
lahf
loopne
ficoml
popa
popf
test
pop
test
loopne
xchg
add
add
or
add
scas
lcall
test
sub
loopne
loop
inc
mov
loopne
inc
fadds
jp
movsb
lods
in
loopne
loopne
sbb
sarb
insl
pusha
cmp
andb
inc
inc
idiv
orb
inc
mov
push
je
loope
loope
ja
add
add
jle
jg
push
cltd
mov
pushf
xchg
popa
insl
jb
loop
xchg
js
outsl
mov
das
pusha
aad
push
pusha
and
rcll
inc
mov
addr16
cli
pop
cmp
loopne
mov
cmp
jmp
adc
loopne
in
dec
insb
mov
mov
add
add
xchg
ret
cli
inc
loope
test
xor
pop
icebp
jg
bound
pop
popa
lcall
popa
adc
lahf
stos
fisubl
cmpsb
cmp
xchg
or
icebp
or
xchg
loopne
fisubrs
cld
test
cli
jl
add
mov
nop
inc
or
push
pop
clc
ja
xor
adc
cmc
call
popf
aam
push
push
shll
sbb
dec
ja
lcall
clc
fisttpl
add
jbe
and
mov
push
sub
mov
push
dec
mov
sbb
xor
or
mov
add
adc
cltd
sbb
and
lcall
push
dec
movl
add
add
and
inc
and
lahf
loop
jno
push
std
leave
push
ficoms
mov
push
xor
or
xor
cli
sub
push
faddp
add
inc
sub
xor
xor
add
jl
push
sbb
jl
mov
movd
into
add
add
dec
mov
sbbb
mov
or
rorb
mov
mov
push
cmp
scas
mov
lods
ds
loop
add
add
or
rcrb
loop
push
subl
push
xchg
xor
sub
add
movlps
pop
ret
or
cmc
ja
or
pop
or
mov
pop
pop
jmp
movl
pop
sub
push
or
inc
pop
cmp
push
and
push
dec
fists
lods
sub
int3
in
mov
scas
add
inc
push
repz
mov
add
jmp
jle
test
mov
mov
fs
lcall
stos
lcall
movsl
mov
pop
jle
push
push
ret
std
pop
fdivl
inc
dec
and
pusha
inc
into
push
jo
test
and
mov
mov
pop
cli
xor
or
jae
jl
xor
aaa
jecxz
mov
add
enter
mov
std
inc
add
sub
shrb
xchg
ret
lret
fdiv
pop
and
adc
mov
xor
or
pop
popa
fildl
rcrl
imulb
xchg
and
sub
lcall
dec
add
adc
aaa
push
nop
push
call
jg
xchg
mov
and
pop
xor
xor
xor
pop
mov
aam
mov
popa
jb
pusha
add
mov
test
add
scas
sub
push
lods
or
je
test
sub
pop
push
sar
inc
inc
insb
xor
sub
js
ja
ret
adc
ret
add
push
shl
adc
ret
mov
cmp
fidivl
xor
pop
cs
add
pop
xor
mov
in
iret
push
and
hlt
adc
mov
lcall
jo
adc
mov
fucomip
lock
rcl
or
decl
push
movl
adc
pop
adc
or
add
pop
cmp
jb
clc
sbb
mov
push
je
cmp
inc
test
adc
inc
loopne
hlt
jg
test
dec
pop
push
invd
xchg
adc
ret
cmp
or
pop
std
aas
sub
movl
cld
adc
and
test
mov
dec
mov
fs
pop
mov
push
mov
sub
inc
inc
clc
outsb
add
mov
add
dec
aaa
pop
and
or
push
aaa
inc
xor
addl
ss
pop
pop
pop
sbb
add
mov
or
push
mov
call
out
pusha
aaa
cmpsl
hlt
push
stos
add
adc
xor
test
cmp
pop
sbb
outsb
adc
jo
xor
mov
popf
push
sti
add
daa
add
mov
inc
xchg
adc
lock
or
add
or
and
or
popa
les
fcompl
clc
int
decl
inc
jo
movb
mov
rcll
sbb
push
add
lock
and
jmp
pop
cmc
sub
out
inc
cmpl
or
mov
in
decl
inc
sub
mov
mov
jmp
xorb
jmp
or
sub
jecxz
add
mov
mov
loopne
mov
add
mov
vandnps
jmp
scas
daa
addb
ss
cmp
xor
in
cmpsb
or
jae
enter
pop
or
daa
sub
bound
xor
shll
or
fsubs
xor
orb
pop
or
sub
mov
scas
aaa
test
ret
add
ss
test
sbbl
add
xor
je
sbb
add
mov
div
or
and
stos
lcall
shrl
adc
jno
filds
push
scas
call
and
push
int3
fistl
out
pop
lods
jmp
dec
test
and
adc
fisttpll
and
in
mov
xor
mov
pop
idivl
push
xor
cld
mov
inc
fbstp
and
push
add
xchg
loope
insl
clc
xor
shl
and
mov
ljmp
push
cld
in
mov
clc
out
rorb
scas
mov
decl
imul
xor
adc
xor
out
inc
adc
les
loope
push
scas
mov
or
mov
mov
or
push
xor
mov
ret
pop
mov
or
pop
vmovdqu
mov
xor
xbegin
jno
aam
inc
add
call
ss
add
fdiv
mov
mov
imul
inc
lock
adc
inc
pushf
lock
mov
mov
mov
mov
popf
add
dec
cli
push
add
out
loopne
xor
add
int3
mov
add
mov
fsubs
gs
mov
pop
out
sub
mov
mov
xor
mov
scas
ss
cli
mov
cmp
mov
add
fistps
mov
dec
adc
stos
jno
xchg
lock
and
xchg
mov
cmpsb
ficoms
dec
in
mov
add
xor
xor
jg
pop
aam
inc
xchg
in
sbb
xchg
movsb
and
js
push
ficompl
sbb
adc
fs
out
push
pop
testl
add
adc
mov
mov
jg
shll
xchg
test
int3
mov
push
stc
jo
icebp
adc
xchg
xchg
push
jecxz
jo
and
xchg
call
scas
test
clc
sbb
and
or
and
stos
lret
mov
cmpsb
aam
mov
cmp
mov
sysenter
xor
outsb
clc
aam
mov
incl
xor
lods
testb
idivl
pop
outsl
js
jb
inc
xor
or
aam
push
ljmp
cmp
in
dec
loopne
je
orl
sahf
fisubs
or
lock
xor
sbb
aas
xor
and
aaa
push
nop
jp
pop
xor
add
xorb
mov
cmp
ss
or
loope
add
rol
cmp
add
and
sub
pop
pop
xor
dec
dec
lret
loopne
dec
pop
dec
dec
xor
push
jl
lock
xor
sbb
addb
sub
imul
sbbl
leave
ret
outsl
jb
rcr
loopne
adc
data16
js
mov
test
ret
pusha
mov
shr
lea
shlb
add
test
sub
mov
or
add
daa
ficoms
xorl
push
subl
inc
loopne
ljmp
or
sbb
out
sub
mov
add
and
inc
inc
xchg
dec
and
loopne
rolb
adc
rorb
fs
lret
mov
pop
xorb
pop
hlt
xorb
and
inc
pop
mov
pop
and
push
mov
or
or
dec
xchg
and
je
mov
sub
std
loopne
sbbl
mov
das
and
lret
or
sub
fs
sbb
ret
cmpb
out
in
add
ja
or
adcb
subb
or
or
jg
addb
dec
icebp
and
mov
mov
subb
or
clc
add
sbb
cs
sbb
adc
pop
adc
jmp
sub
das
push
dec
fistps
lcall
push
mov
cli
push
and
xchg
add
jo
lret
cs
ret
xchg
pop
and
pop
mov
pop
dec
loopne
push
jp
inc
call
add
test
or
jmp
jle
mov
adc
xchg
push
stc
push
loopne
push
test
pop
rol
or
jl
add
shrb
jmp
add
shrb
add
adc
cmp
clc
je
incl
or
adc
or
sbb
add
into
ss
xor
dec
fbld
cmpsb
adc
stos
aam
push
or
popf
sub
enter
cmp
inc
loop
ret
ja
repz
rorb
nop
mov
rclb
addb
lds
es
push
shlb
dec
and
or
mov
movsl
sub
les
ret
pop
ret
mov
hlt
mov
or
js
add
or
inc
fstpl
lock
add
rolb
insb
jmp
popa
add
jae
ror
sub
idiv
inc
iret
orl
push
jl
add
rcll
cmp
inc
inc
lahf
adc
pop
and
sub
inc
and
and
icebp
and
and
push
push
cmpl
jp
fs
pop
invd
js
stc
rcrb
lock
fsubs
add
stc
pop
inc
xchg
shlb
adc
xor
mov
addb
jb
push
push
jo
cmpb
inc
stos
test
mov
add
adc
and
inc
mov
adc
xor
push
dec
inc
imulb
mov
mov
push
hlt
adc
mov
loop
mov
pop
shr
or
or
push
jbe
fisubl
xchg
sub
mov
mov
incl
std
dec
cmpsb
out
xchg
add
mov
jle
or
mov
push
negb
or
push
les
call
adc
dec
loopne
aam
xchg
cmpsb
test
push
sub
imul
pop
jl
adc
mov
cld
inc
pusha
adc
loopne
sbb
xchg
push
cli
cmpsb
inc
cli
add
pusha
sbb
and
je
subl
rcl
mov
std
mov
mov
arpl
or
loope
push
fcomps
int3
int
pusha
pop
mov
mov
or
sbb
pusha
scas
clc
fildl
push
ja
mov
loopne
adcl
out
jae
in
cmp
xor
sbb
jecxz
mov
repnz
add
sub
inc
int3
add
shr
sub
push
aaa
or
push
or
and
push
pusha
mov
testb
push
adc
mov
shrb
mov
mov
shl
sub
or
or
pop
inc
shlb
add
cwtl
cmp
pushf
dec
sub
or
aam
xchg
sbb
mov
inc
outsb
push
mov
sub
or
pusha
mov
xor
das
in
add
push
and
cltd
cmp
rorb
xor
dec
jb
add
out
sbb
popa
or
movsl
call
shrl
pusha
mov
add
xor
test
or
mov
mov
adc
pusha
pop
adc
jecxz
pushf
clc
jmp
scas
and
adc
sub
xchg
add
sub
mov
fidivrl
or
mov
test
stc
mov
add
sub
ficoml
enter
xchg
cmpb
pusha
inc
lret
dec
add
movsl
add
add
loop
add
hlt
adc
scas
fdivs
mov
sbb
jne
jecxz
cmp
sub
inc
sbb
adc
sbb
or
je
mov
xlat
adc
add
push
mov
sub
jmp
test
adc
lret
push
and
inc
outsb
loopne
nop
das
loopne
les
lret
mov
or
int
push
decb
push
push
out
pop
pusha
loopne
pusha
push
ljmp
dec
push
push
pop
fildl
imul
and
popa
mov
and
int
xchg
adc
fldl
push
imul
lea
jge
ljmp
inc
imul
inc
pop
cli
notb
scas
adc
ljmp
push
mov
mov
pop
dec
daa
inc
adc
dec
mov
pop
mov
and
out
mov
inc
mov
dec
inc
dec
xor
lods
add
in
loopne
xor
jmp
out
movl
loope
aaa
insb
dec
cmp
mov
inc
mov
jecxz
xchg
clc
call
add
add
sub
add
insb
subb
adcb
je
addb
inc
xor
push
leave
inc
loope
or
xor
push
rol
inc
test
js
ss
sub
add
dec
sbb
enter
dec
mov
aad
jbe
mov
mov
roll
xor
inc
add
ja
dec
scas
mov
lret
lock
jbe
pop
sbb
mov
repz
jo
lods
cld
inc
push
outsl
ja
faddl
mov
jo
aaa
jne
xchg
xor
das
pop
fs
sub
insb
ficomps
or
inc
add
clc
icebp
sub
xor
jb
pop
or
mov
dec
cli
mov
push
icebp
adc
add
pushl
jbe
push
aas
dec
pop
sub
add
cmp
sbb
mov
sub
cmp
adc
inc
pop
xor
mov
fimuls
push
push
bswap
or
jbe
mov
add
enter
ljmp
insl
dec
mov
lock
xor
add
fcomip
stos
call
testb
sahf
mov
hlt
or
inc
inc
ljmp
ljmp
jmp
mov
lock
mov
xchg
lock
push
mov
mov
je
add
decl
scas
add
xchg
cli
sbb
repz
roll
sti
push
mov
pop
cld
push
push
lcall
sbb
mov
push
pop
add
sbb
jo
push
in
fcmovnu
div
or
push
lcall
sbb
add
cmc
fimull
std
sbb
inc
mov
outsb
mov
incb
in
push
mov
jbe
mov
fmull
jbe
jo
jbe
xor
pop
jbe
push
sar
dec
je
sub
dec
sbb
xor
push
add
mov
jb
jecxz
mov
dec
add
jg
scas
add
mov
dec
sub
xor
cmp
or
cwtl
add
adc
pop
dec
xor
rorb
jp
lret
add
xor
and
mov
mov
bound
sbb
testb
cmp
fdivrl
jbe,pt
push
push
mov
mov
sub
push
inc
dec
aam
push
jo
jle
or
mov
enter
xchg
xchg
jge
ljmp
mov
mov
xor
cmpsb
shr
fdivs
and
mov
dec
and
jne
jg
lock
push
lock
xor
dec
push
xor
clc
ljmp
xor
lea
xchg
mov
repnz
add
xor
jg
push
sar
das
cmp
and
mov
xchg
push
mov
lock
xor
clc
shlb
pop
popf
add
sub
loopne
sub
call
push
sbb
push
and
add
adcb
pop
sub
jbe
add
pop
mov
call
iret
icebp
add
cmp
and
push
movsb
and
mov
lret
xor
mov
test
jle
nop
push
xchg
and
cld
sarl
out
or
pop
movl
or
clc
xchg
mov
xor
mov
sbb
fildll
jbe
lock
clc
stos
je
pop
ljmp
js
push
add
inc
clc
fcmovnb
inc
ljmp
add
fcoms
xchg
and
cmp
xor
jb
adc
push
mov
cld
mov
pusha
mov
jle
movsb
add
orb
int
insb
mov
sbb
or
mov
sub
das
sbb
std
push
or
gs
push
mov
adcb
add
mov
xlat
add
mov
sarb
in
cmp
ret
push
add
and
pop
xchg
frstor
fsubrl
jo
jmp
cmc
sub
test
xchg
push
push
mov
inc
sub
sub
popa
imul
mov
adc
xor
sub
push
out
push
out
incl
dec
incb
push
sub
push
call
adc
dec
aaa
dec
test
mov
aam
mov
subb
sbb
cs
clc
and
clc
adc
xor
jmp
clc
push
adc
add
or
and
inc
mov
ret
or
sbb
stos
loopne
add
test
jne
test
and
push
sub
sub
inc
xor
sbb
push
push
adc
pushl
mov
add
push
call
inc
and
pop
inc
enter
xor
call
sbb
push
arpl
imul
add
imul
and
adc
enter
in
cmpsb
sub
xor
adc
nop
xor
mov
ss
mov
clc
mov
int
lcall
cli
loop
shll
leave
mov
repnz
push
and
and
subb
xor
test
mov
nop
inc
pop
cld
xor
ljmp
push
inc
adc
jecxz
daa
inc
and
push
push
mov
out
je
pop
adc
mov
orl
push
shr
cmpsb
aam
cli
inc
imul
test
jbe
mov
mov
lret
icebp
dec
jb
adcl
jl
adc
add
adc
cmp
adc
ds
adc
or
lea
pop
pop
pop
jo
test
or
sti
adc
push
and
testb
adc
inc
mov
mov
test
ds
cmp
inc
add
in
mov
or
add
sti
decl
mov
inc
inc
scas
test
jecxz
adc
cmp
push
repz
movsb
les
mov
push
add
mov
pop
std
add
pop
imul
cld
add
push
push
cli
add
sbb
not
in
testb
push
repnz
mov
addl
dec
std
mov
or
andb
mov
mov
pop
orb
or
loope
shr
imul
cs
sub
test
or
test
ljmp
add
shr
jle
add
addr16
cld
cmpsb
inc
out
pop
cld
aaa
cld
pushf
add
pop
add
enter
loope
xor
addw
mov
pop
lret
shll
mov
mull
das
push
fcmovb
orl
adc
das
fdiv
je
pushf
adc
rolb
loop
jbe
adc
rclb
mov
loop
push
jl
and
mov
daa
xor
mov
lret
mov
js
jle
adcb
xorb
je
enter
leave
xchg
jecxz
popf
enter
jmp
sbb
rclb
jp
add
push
pop
cwtl
inc
xor
ret
mov
test
sti
and
add
cmp
pop
sub
popf
aaa
sub
or
lods
out
and
mov
nop
dec
aad
push
sub
cmp
in
sub
rcrl
inc
sub
pop
mov
ljmp
ret
cvtpi2ps
rcr
add
ret
test
pusha
add
push
or
add
adc
and
sbb
push
adc
and
int3
add
cmp
fcom
shlb
mov
and
frstor
stc
push
and
mov
int3
inc
cld
out
adc
das
jg
inc
popa
loopne
or
imull
dec
cmp
mov
jb
ds
mov
add
adc
call
and
cmp
loope
call
enter
sbb
nop
call
and
popa
cmp
adc
fcoms
mov
push
xor
add
rorl
outsb
adcl
pop
mov
rcrb
loopne
xor
ret
sbb
fwait
pop
push
or
sbbb
cs
cmp
int3
stos
push
push
push
jl
and
pop
roll
cmp
push
inc
sarl
mov
js
lcall
pop
mov
mov
loop
dec
shl
add
ficomps
or
mov
push
addb
mov
je
push
jl
cmp
dec
mov
jbe
fwait
rcrb
sbb
testb
ret
cmp
fdivs
add
rep
sti
xchg
shll
bound
mov
call
inc
js
shld
aam
xor
popa
or
mov
mov
add
or
mov
push
pop
hlt
adc
jmp
lret
mov
dec
cmp
pusha
loopne
mov
rcl
cwtl
lock
pusha
add
mov
mov
fisttpll
jg
mov
jne
mov
je
adc
inc
loopne
add
icebp
mov
clc
dec
jmp
dec
ret
cmp
or
lea
and
pop
test
jne
mov
sti
xor
decb
jo
pop
cmpl
and
ret
pop
push
jg
xchg
push
jl
add
sub
rolb
lea
fld
sti
cmp
and
es
jge
add
lcall
jg
add
aas
add
add
js
fucomi
dec
or
mov
cld
loopne
sbb
dec
popl
or
stos
jbe
sti
or
mov
pop
imul
xchg
test
sbb
popa
or
bound
inc
add
dec
or
jo
mov
cld
idivb
loopne
sbb
inc
mov
fdivrs
ret
dec
dec
add
pop
out
pop
cmc
ljmp
leave
xorb
mov
push
xchg
sub
outsl
je
xlat
xor
popa
add
lcall
mov
and
add
mov
int3
divb
xchg
je
jb
adc
adc
inc
call
cmp
inc
xor
xchg
loopne
call
push
inc
add
mov
mulb
iret
fwait
or
js
jne
lea
and
loopne
xor
ja
adc
xchg
les
jl
movsb
push
mov
jnp
in
loopne
in
add
add
aas
mov
subb
sbb
push
jle
add
int3
loope
adc
nop
cs
or
lds
mov
scas
inc
leave
hlt
pop
das
ror
pop
loopne
xorb
ja
ss
mov
cmp
mov
sbb
js
jno
jb
push
pop
imul
mov
add
add
xchg
push
cmpsl
xchg
lea
adc
dec
mov
push
mov
sbb
adc
push
pushaw
movsb
adc
rolb
jmp
add
add
pushf
add
pop
adc
cs
outsl
xchg
add
cmp
loopne
leave
mov
cmp
addl
pop
loop
adcb
lock
or
loopne
mov
jp
cmp
pushf
lods
int3
std
aaa
lcall
inc
push
mov
xchg
fs
inc
dec
lcall
jbe
push
scas
add
sbb
or
xor
rcrb
jp
leave
sbb
sbb
lret
adc
pushl
mov
adc
jbe
mov
ss
add
scas
adc
pop
xor
mov
mov
sete
or
mov
xchg
add
add
mov
dec
add
stc
clc
decl
dec
push
adc
mov
mov
inc
cmp
dec
sbb
add
inc
lods
xor
nop
push
mov
mov
fldcw
addb
iret
jle
mov
dec
mov
jle
es
or
jg
je
in
lcall
hlt
mov
xlat
andl
repnz
pop
lds
jo
mov
jo
add
imul
decb
lock
and
insl
mov
lock
xlat
add
xor
sub
mov
add
lret
adc
test
icebp
and
js
xor
cmp
jl
xchg
repnz
adc
dec
jl
add
xorl
fdivr
adc
dec
ds
add
xchg
dec
add
mov
lret
int
rolb
loopne
mov
xor
inc
scas
test
orb
or
dec
pop
and
mov
push
decb
in
push
sti
mov
enter
shl
jl
add
mov
fcmovbe
fistpll
je
loop
pop
inc
scas
loop
stc
add
rolb
cs
in
aaa
fmull
jo
jne
sbbb
adcl
xchg
push
xchg
xchg
in
add
cs
addl
mov
and
shlb
jno
add
pop
call
dec
pop
jb
scas
dec
loopne
add
cli
mov
insb
and
add
mov
push
fisttpl
ja
outsl
inc
dec
push
mov
lock
mov
bound
mov
movsl
aad
adc
xchg
in
cmp
insb
add
movsb
pop
mov
dec
adc
call
rcrl
shlb
xlat
and
jo
lretw
loope
pop
aaa
adc
adc
jg
adc
push
jno
and
cltd
les
rolb
mov
add
jne
inc
bound
ljmp
call
adc
cmp
xor
mov
mov
and
jmp
inc
subl
testb
xor
mov
test
adc
mov
mov
inc
adc
aam
jo
mov
pop
or
or
push
or
push
lock
xchg
icebp
ljmp
sbb
add
pop
mov
or
test
rolb
and
shll
in
adc
dec
stos
push
push
stos
shl
les
test
mov
clc
movsl
xor
hlt
mov
add
add
jmp
test
jo
sub
jle
mov
es
adc
cmpsb
mov
adc
lock
mov
inc
xor
jbe
jecxz
incl
cmpsb
cli
das
push
adc
scas
orb
sbb
mov
dec
add
out
repnz
pop
jmp
lret
out
lea
data16
dec
mov
jne
adc
adc
icebp
push
rolw
movsb
nop
icebp
add
iret
sub
int3
mov
out
outsb
add
adc
pop
loopne
jo
lret
es
mov
and
or
jo
mov
stc
aad
imul
mov
mov
xchg
add
movsl
or
ljmp
mov
data16
mov
jo
fs
jg
mov
adc
je
adc
or
mov
outsb
outsl
mov
adc
clc
scas
push
mov
xor
cld
inc
pop
lea
mov
or
push
push
pop
and
ss
ljmp
mov
dec
push
mov
mov
mov
cltd
or
lock
mov
aam
xor
mov
adc
fsubl
sub
sub
push
lock
into
sbb
sub
mov
or
or
inc
add
insl
shll
jmp
xchg
mov
out
sbb
xor
in
push
xor
ja
push
xor
cmpl
jle
jg
add
loopne
mov
xchg
call
and
push
out
add
mov
hlt
push
rclb
push
pop
jmp
and
loop
and
push
cmp
mov
mov
adc
cmp
and
outsb
adc
xchg
or
pop
orb
sbbb
add
push
mov
xchg
out
imull
in
adcb
scas
adc
add
xchg
mov
or
movsb
and
mov
bound
xchg
sub
add
cli
dec
adc
sub
mov
add
lock
jb
insb
hlt
or
and
sbb
cmc
jo
jg
pop
xor
sub
pop
mov
push
adc
adc
loop
es
or
lods
push
fmul
push
inc
out
mov
mov
mov
adc
and
loope
mov
testb
pop
ret
hlt
adc
aad
pop
adc
lret
into
repz
hlt
and
sub
loopne
lret
jl
roll
out
mov
ss
and
lods
cld
sub
roll
andl
dec
mov
xor
sahf
test
xor
cmp
jg
sub
and
xor
xor
mov
jne
and
jae
pop
in
std
xchg
xor
stos
or
inc
mov
aaa
and
adc
lock
ror
fisttpll
movsl
push
or
bound
inc
fmuls
xchg
xor
dec
cwtl
mov
pop
and
into
cmp
leave
enter
jl
add
jae
fs
add
mov
xchg
add
loope
cmp
aam
scas
cli
in
add
mov
mov
mov
add
jo
jmp
adc
add
mov
dec
add
and
xchg
in
add
in
mov
push
mov
loopne
std
addl
icebp
jne
mov
mov
add
rcll
fmull
clc
xor
mov
cmpl
or
mov
and
imul
das
pop
cmpsb
in
add
and
jo
sbb
push
pop
lods
xchg
push
push
sub
mov
mov
adc
add
add
add
imul
jne
orl
mov
pop
inc
adc
dec
sarb
adcb
loopne
or
sbb
dec
sub
insl
insb
jmp
orb
nop
lock
jmp
mov
push
cmp
and
jle
cltd
mov
sahf
jl
sub
xchg
xor
dec
push
jg
aad
out
push
xchg
inc
shlb
jle
fidivs
push
add
in
xchg
mov
mov
mov
cmc
jmp
hlt
mov
push
pusha
push
adc
stos
mov
outsb
push
jl
roll
scas
imul
push
loopne
rorl
bnd
cmovns
shlb
adcl
pop
xchg
adc
pop
push
ret
mov
pusha
ja
adc
mov
add
ss
and
int3
ret
pop
adc
aad
push
adcb
mov
shlb
fidivrs
or
popa
jmp
insb
xchg
inc
lret
mov
or
hlt
cld
ret
arpl
pop
push
stos
xor
lock
adc
ret
add
adc
aaa
ss
imul
call
ficoms
cs
clc
rclb
push
lds
out
outsl
loopne
pop
test
pop
rorb
cmp
shrb
mov
ja
rclb
mov
ror
stos
scas
add
cld
push
add
aad
divb
sbb
push
mov
cmpsb
mov
cli
jle
add
jle
add
jg
mov
fistpl
enter
fistps
rcr
inc
ret
mov
add
pop
mov
cmc
adc
inc
out
repz
inc
rcrl
mov
push
jmp
orb
xchg
pop
add
ficomps
imul
inc
out
xchg
mov
pop
ret
add
arpl
fiaddl
jo
or
xchg
cld
add
mov
andl
cmpsl
outsl
loope
mov
aad
pusha
sub
adc
add
lcall
loop
or
pusha
add
jmp
mov
jbe
loop
pushw
pop
inc
sbb
mov
das
clc
aaa
mov
xchg
sbb
aaa
outsb
inc
loopne
cld
mov
dec
cld
push
ljmp
dec
pop
arpl
add
jp
mov
sti
adcl
data16
push
add
shl
clc
addr16
adc
mov
rcrb
mov
xchg
pusha
xchg
and
jo
test
cmp
js
in
or
lea
hlt
mov
outsl
cmp
into
sbb
adc
lret
mov
adc
loopne
mov
lock
adc
jno
repz
in
ljmp
fnstsw
adc
mov
mov
arpl
mov
sbb
sub
lahf
ss
lods
rcrb
in
js
cmp
loopne
and
pop
or
bound
adcb
mov
push
cwtl
jge
daa
xchg
out
outsb
hlt
and
xchg
std
jmp
mov
pop
or
and
inc
notb
push
lock
iret
jbe
pop
push
dec
lock
inc
pusha
adc
dec
test
and
mov
cli
das
add
bound
add
into
mov
push
imul
mov
xlat
popa
adc
push
adc
inc
nop
push
cld
and
push
add
les
adc
aam
or
clc
adc
cmp
push
decl
dec
adc
push
adc
cmp
popa
fs
icebp
in
mov
add
or
sub
bound
or
into
xorl
or
dec
call
decl
pusha
dec
mov
cmp
pusha
cmp
mov
sbb
scas
loopne
mov
sbb
aad
sbb
rcll
into
jb
or
loop
loop
loop
mov
aam
mov
loopne
xchg
jnp
add
cs
cmp
cmpsb
jl
pushl
jmp
fs
cltd
xor
loop
add
inc
or
mov
pop
adc
inc
jg
stos
xchg
jno
pusha
data16
ret
int
shlb
or
inc
inc
pusha
mov
sub
pop
sub
fildll
les
cltd
addl
aad
mov
test
adc
and
popa
orl
pop
pop
mov
cs
inc
jp
mov
dec
jl
adc
in
xlat
dec
mov
cwtl
push
dec
out
hlt
mov
sub
dec
rcll
add
pop
arpl
ja
jmp
fnsave
ds
addl
jle
in
or
and
push
add
jmp
je
adc
mov
dec
xor
xor
int3
xor
mov
icebp
adc
cmp
jo
mov
xor
les
call
imull
add
cmpb
clc
mov
divl
fmuls
mov
mov
test
add
sub
or
mov
js
inc
mov
add
sar
loopne
rol
and
idivl
ljmp
pop
lock
sbb
je
xor
lock
dec
cmp
or
incl
test
mov
pop
pop
jne
clc
or
pusha
xor
ss
sub
xor
add
sub
lret
inc
les
out
clc
loopne
cld
icebp
mov
cmp
dec
inc
cmp
stos
data16
xor
fucomi
xorb
add
push
push
dec
inc
mov
rorb
fimull
call
mov
add
mov
pop
adc
pop
lock
clc
or
notl
test
or
outsb
arpl
out
leave
outsb
lahf
pop
push
cmpl
icebp
sbb
mov
xchg
sarb
dec
sbb
inc
pusha
cmp
dec
jns
adc
xor
not
fs
dec
pusha
jnp
bound
add
test
cmpsl
scas
test
push
enter
jbe
addr16
or
xchg
faddl
add
scas
jo
std
jge
loopne
jge
mov
popw
mov
mov
pop
add
call
jnp
pop
adc
pop
pushl
xor
or
hlt
mov
mov
sub
jl
mov
add
nop
andb
sbb
inc
inc
mov
add
mov
jp
adc
call
inc
shlb
jl
add
repnz
sub
mov
and
or
mov
mov
jo
sahf
pusha
addb
xor
outsl
pop
sbb
call
push
pop
push
in
add
and
xor
jno
je
mov
mov
lock
push
and
test
test
shlb
adc
lock
pushf
adc
mov
jno
mov
scas
scas
xor
fs
jg
test
clc
and
ret
push
icebp
jg
fcmovnbe
inc
push
js
or
lahf
add
lods
loop
or
or
push
cmpsl
sarl
lcall
and
add
adc
decl
xchg
outsb
and
xchg
mov
cwtl
imul
mov
inc
xchg
sarb
or
jb
cmp
pop
xor
mov
sbb
add
mov
add
pushl
dec
xchg
lock
pop
dec
out
mov
sub
lea
jno
adcb
outsb
sub
lea
test
addb
adc
aam
cs
inc
int3
mov
mov
cmpb
mov
xor
mov
imul
stos
pop
push
nop
mov
jg
cmp
cmp
add
or
mov
jl
addl
jge
jb
dec
inc
adc
mov
mov
sbb
add
mov
pop
pop
add
adc
add
jb
clc
inc
sbb
and
testb
push
js
xchg
push
lcall
or
lock
sub
mov
repnz
mov
push
fldl
adc
push
sbb
jle
xchg
add
cmp
xor
mov
lods
clc
fstl
pop
sbbb
in
cmp
mov
mov
andl
je
pop
inc
ljmp
out
mov
push
or
insb
mov
mov
aad
push
adcb
adc
sbb
mov
js
lock
push
clc
and
jno
jle
ds
subb
mov
jbe
inc
sbb
lea
add
mov
and
mov
je
mov
pop
cmp
mov
movsb
xor
xor
mov
js
mov
jl
cmc
shr
jl
pusha
incl
lret
jmp
jb
dec
add
push
mov
ja
inc
and
aad
or
mov
ja
jmp
shl
orl
dec
jo
addl
push
xchg
and
dec
scas
mov
je
push
add
scas
mov
pop
add
jmp
push
mov
cltd
shll
push
or
rolb
sahf
mov
je
xor
incl
adc
scas
mov
pop
sbb
out
inc
add
scas
inc
enter
shl
out
clc
jbe
leave
xor
mov
jmp
mov
je
daa
jno
jb
xor
data16
sub
jno
inc
push
inc
scas
inc
push
call
mov
or
pop
mov
push
lock
cmc
push
mov
adc
mov
sbb
in
filds
add
inc
mov
ja
or
shlb
je
sub
addr16
cmp
sbb
mov
sub
fcmove
insl
enter
sbb
push
mov
cmp
clc
rorb
and
sub
push
mov
adc
mov
mov
cld
push
jnp
mov
xchg
movsb
outsl
out
jo
into
sbb
cld
sbb
stos
lock
xor
int
mov
orb
insl
call
out
push
pcmpeqw
push
adc
pop
add
inc
xchg
add
add
iret
gs
fiaddl
xchg
inc
pop
shlb
push
pop
sbb
dec
jge
popa
addr16
and
push
push
push
arpl
mov
add
cmpsl
mov
rclb
xor
push
push
push
push
inc
or
fildl
jmp
andl
test
jmp
jmp
test
cmp
cmp
add
or
mov
dec
out
nop
rolb
std
or
xor
sbb
outsl
sbb
sub
dec
and
push
sub
pop
fwait
inc
xchg
mov
push
push
sub
aaa
or
xor
and
sbb
jmp
outsl
mov
adc
scas
mov
or
adc
ja
jl
mov
dec
cld
or
add
mov
sub
and
sbb
movsb
cld
les
dec
les
inc
adc
mov
sbb
jo
adc
les
mov
clc
or
adc
mov
push
lea
cmp
out
mov
loopne
outsl
adcb
add
xorl
outsl
bound
mov
mov
outsb
add
sub
stos
mov
addl
xchg
addl
pop
adc
pop
lock
mov
jne
ret
cmp
data16
std
jmp
cli
insb
into
xor
pop
xchg
sub
add
inc
pop
lret
cli
lcall
pop
cmpsl
add
xchg
repnz
push
mov
rolb
mov
xchg
or
fs
and
mov
movsl
xchg
push
xchg
mov
aad
shr
movsb
jne
stos
sub
mov
stos
mov
adc
shlb
ja
push
data16
pop
or
mov
rcll
or
mov
inc
ret
cmp
outsb
pop
mov
out
out
mov
test
and
addl
int
in
jbe
pop
dec
add
shll
fadd
mov
lods
outsl
xchg
lock
sbb
cmp
ja
or
subb
pusha
fdivr
add
subl
test
test
add
es
test
push
pop
mov
inc
shrb
cwtl
aad
and
sub
in
jne
sarb
adc
es
aam
icebp
jg
inc
les
ret
imul
je
fidivl
bnd
mov
inc
mov
inc
add
mov
movb
orb
pop
cld
repz
jmp
mov
add
add
cmp
aaa
push
pop
xor
xchg
dec
sbbl
lret
mov
sub
sub
push
mov
inc
jne
lds
xchg
add
ljmp
add
jmp
sub
pop
int3
pop
or
pop
out
sbb
xchg
rclb
rorb
mov
jne
andb
sbb
in
call
lahf
xchg
repz
mov
or
jbe
sub
lock
jo
mov
out
cmp
cmc
sbb
add
enter
push
out
sbb
mov
test
cli
incl
push
rolb
or
dec
rorl
adc
outsb
and
sbb
and
decb
add
jbe
movd
mov
setno
fimull
lret
and
xchg
adc
pxor
insl
jg
test
nop
inc
rol
addl
ja
adc
clc
fldl
cli
repz
jl
and
orb
fistpl
movd
xor
fsubrl
addl
test
out
mov
in
out
stos
pop
fistl
das
sub
incl
rol
or
cld
or
test
add
push
sub
dec
pop
jo
cli
shl
enter
sub
mov
xchg
add
rolb
lcall
cmp
sbb
sbb
cmp
in
lock
mov
outsb
xchg
aad
hlt
dec
int3
addb
push
loop
sub
rcrb
call
add
rclb
sub
cmp
test
mov
je
repnz
addb
mov
jle
push
loopne
or
jg
je
or
call
push
jne
andl
mov
loopne
push
dec
outsl
xchg
std
add
movl
lock
es
inc
and
adc
ret
mov
and
jno
xchg
sahf
push
je
int3
bound
loope
add
out
cld
lret
testb
sbb
popa
xor
inc
ret
and
pusha
push
es
push
cld
jmp
fbld
cmp
adc
sub
loop
pop
dec
inc
cmp
jbe
sub
push
in
jg
mov
mov
inc
loopne
sub
add
gs
cs
add
mov
pushl
lret
bound
and
push
and
lock
mov
sub
filds
les
je
and
loope
outsl
adc
sbb
in
pushw
sub
jb
hlt
out
add
pop
pop
or
xchg
dec
sub
mov
add
adc
les
push
mov
jecxz
add
xor
ds
les
loope
mov
loop
jle
js
mov
push
lret
lea
and
adc
repz
lock
das
popa
scas
adc
adc
adc
std
call
add
sbb
in
jne
loop
add
pop
dec
add
and
js
pusha
add
ficoms
sub
cmc
jbe
aam
int3
hlt
xchg
or
das
push
pusha
ds
fbstp
and
filds
pusha
mov
jmp
sub
mull
mov
adc
xchg
lods
mov
mov
les
movsb
push
xor
sbb
dec
loopne
sub
add
fildll
es
inc
movsb
jbe
test
lods
adc
inc
sbb
push
mov
mov
sbb
pop
or
jg
aaa
ds
lea
inc
cltd
incl
test
or
out
push
or
cs
sub
fcompl
outsb
pop
xchg
mov
and
loop
jge
inc
cld
je
jbe
test
sub
jmp
jo
cmc
dec
fcoml
add
sbb
mov
or
movl
lods
pop
inc
push
pusha
mov
push
jbe
data16
andb
fiaddl
mov
cmpl
ret
into
adc
add
sub
push
js
inc
or
or
pusha
insb
fsub
jle
adc
add
mov
mov
fdivrs
mov
movsb
je
ljmp
add
mov
fadds
pusha
add
or
test
push
jbe
jb
stos
or
sub
inc
mov
stos
bound
ljmpw
shlb
lods
jmp
or
add
adc
fsub
rolb
out
jb
push
pusha
sub
jne
inc
sbb
inc
add
sbb
call
or
mov
ljmp
test
mov
dec
loope
ljmp
dec
in
xor
sub
and
ljmp
rolb
pushf
mov
loop
xchg
cmp
in
pusha
xor
xorb
jle
adc
adc
sub
add
and
fwait
mov
ljmp
xor
push
lods
sub
lea
jge
cmp
cwtl
dec
nop
xorl
push
loopne
sbb
fucomi
cmc
push
add
xchg
push
icebp
add
sbb
repz
mov
sbb
orl
stos
adc
xor
clc
mov
enter
push
dec
out
and
and
push
mov
push
fdivl
adc
push
adc
inc
mov
lahf
jo
fcomip
dec
mov
pop
adc
lret
je
int3
jge
mov
insb
add
pop
cmc
stos
test
xchg
lea
xor
add
jmp
sub
push
cmp
inc
pop
lods
mov
pushl
adc
int
divb
mov
xchg
or
loop
xchg
js
and
add
xor
mov
data16
inc
aaa
jo
push
movsb
aam
jo
and
jnp
xor
cmp
lods
adc
pop
xor
mov
stos
cld
or
mov
insb
jge
test
sarb
adc
pop
aam
lret
and
add
xchg
fnstsw
mov
adc
shl
xor
jae
shr
fsubs
lock
pop
push
inc
inc
xchg
add
adc
or
pushf
cmp
ret
sub
outsl
mov
mov
mov
jo
movsl
sub
inc
add
and
inc
push
push
and
test
add
jae
sub
pop
adc
push
mov
data16
mov
popa
adc
xor
insl
clc
mov
stc
jbe
lods
dec
xchg
xchg
ret
push
inc
lock
lock
test
pop
xchg
push
orb
jecxz
xchg
aad
int3
cmp
into
adc
push
add
arpl
jo
inc
clc
ja
sbb
jg
test
mov
mov
shr
xorl
les
add
jmp
nop
lock
hlt
adc
dec
repnz
fdivs
or
mov
movsb
les
movsb
pop
sbb
xor
mov
pop
mov
int3
ret
call
ret
sbb
dec
ret
icebp
add
lds
or
les
sub
or
mov
mov
jmp
out
add
mov
mov
add
add
jmp
ljmp
fimull
sub
aas
cmp
cld
shll
push
je
adc
mov
pop
sbb
mov
dec
iret
xchg
adc
ret
rolb
mov
int3
xchg
enter
jb
lock
xchg
cmp
xchg
sub
fistpl
test
add
icebp
xor
mov
fwait
mov
pop
lock
xor
pop
push
dec
loop
push
xor
rorl
clc
add
jno
push
daa
mov
sti
mov
inc
add
or
add
push
in
imul
test
adc
sarl
shr
fisubrl
sbb
push
xor
adc
xor
xchg
xlat
sbb
fwait
mov
mov
lock
fistps
shrb
push
call
hlt
add
or
sub
in
mov
pusha
xchg
pop
dec
imul
pop
push
push
push
add
pushf
sbb
xor
cmp
outsl
pop
dec
test
inc
lahf
push
lock
jo
sbb
add
int3
xor
dec
and
nop
mov
clc
and
insl
cs
sub
in
lods
flds
in
pop
mov
add
rolb
sbb
lcall
mov
sub
mov
sub
xor
jl
js
in
insb
add
pop
mov
cli
or
or
push
std
or
add
or
fiaddl
sbb
add
dec
stos
sub
in
push
sbb
and
insl
imul
imul
add
add
inc
and
push
lock
aam
scas
ret
mov
subb
add
push
movsb
mov
add
add
das
sarb
sub
fldenv
jmp
out
ret
push
xchg
cwtl
sbb
dec
mov
sub
inc
out
add
enter
js
into
dec
inc
push
icebp
out
xor
in
adc
orl
stc
orb
lea
cwtl
shrb
or
cld
push
ljmp
xchg
inc
mov
fildll
inc
push
dec
cmp
loopne
pop
pop
and
insb
inc
xor
add
out
cmp
add
andl
jbe
test
push
loopne
push
fs
xchg
push
repz
inc
push
pop
adc
adc
rorl
push
aad
testl
daa
adc
mov
sbb
push
sbb
scas
sbb
subb
hlt
or
popa
call
pop
insb
out
rcl
or
or
lock
stos
in
inc
lds
jle
lods
div
adc
ja
sub
mov
pop
shlb
ret
mov
rep
pusha
hlt
sub
cmc
mov
lds
jl
rcll
push
pop
jo
push
or
and
push
or
push
mov
inc
mov
stos
cmp
pop
and
sbb
lcall
add
or
or
add
test
in
dec
xchg
hlt
add
lock
add
in
sub
cs
lods
insl
cmpsl
and
mov
sbb
xor
fidivl
loop
mov
mov
lods
pop
push
popf
push
test
movsb
push
push
add
pushf
push
testb
mov
jne
dec
loop
fisubs
fimull
pusha
mov
shr
sub
dec
jnp
pop
add
push
dec
sbb
inc
shll
xor
cmp
addb
xor
jns
rcrl
sbb
add
and
sbb
adc
add
lcall
cmpb
in
int
xor
call
fcom
xor
shll
int3
enter
xor
sarl
test
movsb
mov
mov
sub
xchg
sbb
add
sbb
add
jo
add
push
add
sbb
push
test
xor
aaa
lods
or
add
cwtl
orb
pop
lods
mov
inc
adc
xchg
add
adc
lcall
push
sbb
sbb
adc
aaa
pop
roll
add
mov
cld
or
aas
hlt
fdivs
call
mov
sbb
push
imul
ss
sub
and
cwtl
shll
lcall
rolb
adc
cmp
sahf
push
pushf
sbbb
data16
add
cmpsb
fnstenv
imul
je
jbe
push
insb
add
add
pusha
dec
jnp
cmpsb
pop
pop
push
push
out
dec
dec
push
test
or
or
xor
rcrl
cmp
sub
jnp
es
mov
stos
jge
stos
jge
dec
repz
sbb
fcom
ror
int
sar
imul
push
mov
shll
lods
test
xchg
movsl
pusha
pusha
adc
pushf
rcrl
jl
js
dec
sub
sub
sbb
outsb
add
sbb
push
adc
cwtl
js
push
lcall
imul
imul
sub
add
sbb
sbb
insb
insl
add
add
or
cmpsb
push
stc
xor
sbb
add
jmp
in
ss
add
fnstenv
shll
int
sbb
push
adc
mov
xchg
test
dec
mul
cs
xchg
cltd
sbb
rcrl
mov
test
jge
jne
loopne
ret
rcr
sarl
scas
stos
cmpsb
pop
dec
shll
sahf
lcall
mov
mov
jbe
dec
shll
outsb
push
mov
pop
sbb
add
dec
dec
push
lcall
cmp
sbb
dec
xor
sub
fwait
movsb
add
add
sahf
push
add
xchg
aaa
pusha
cs
add
out
ljmp
loop
fcmovbe
cmpl
lahf
inc
and
cmp
scas
adc
xor
sub
inc
push
sbb
sbb
ljmp
sbb
lret
mov
ret
mulb
imul
sbb
xor
hlt
mov
xchg
xchg
rcrl
outsb
push
dec
shll
bound
push
push
or
insl
inc
imul
int
xor
sbb
and
sbb
rcl
push
adc
xor
add
add
cs
adc
ljmp
mov
mov
outsb
cmp
mov
negb
mov
mov
sbb
shll
lcall
dec
mov
pushf
or
jbe
mov
orb
push
movsl
mov
cmp
cmp
call
jp,pt
or
push
cmpsl
movsb
push
cmpsl
movsb
and
sbb
push
cmpsl
movsb
push
cmpsl
roll
movsb
push
jo
mov
cwtl
and
iret
test
sbb
mov
outsl
add
add
sbb
add
add
sbb
add
add
sbb
push
dec
inc
sbb
inc
inc
xor
xor
add
and
sbb
push
adc
addb
pop
out
js
cs
int
add
sbb
mul
imul
xor
sahf
leave
lds
mov
int
mov
test
lcall
movb
or
roll
loope
movsb
xor
xor
inc
push
mov
insl
pushf
sub
mov
lods
add
jl
inc
or
sarb
in
adc
mov
xor
pop
movsl
pop
add
mov
sub
pop
sbb
mov
ds
push
inc
dec
pushl
shl
push
pushf
ret
push
or
sti
adcl
adc
rorb
or
test
adc
aam
xchg
rolb
or
push
xchg
sarb
cmp
call
in
push
ret
ret
jl
push
sub
andl
add
add
and
jbe
adc
xorb
in
mov
pusha
stos
mov
mov
ret
adc
push
add
hlt
adc
push
std
or
ss
aam
and
incl
adc
adc
mov
pop
cmp
clc
adc
call
sbb
mov
add
jne
call
or
pop
add
add
sbb
pop
and
mov
cmpb
add
xor
std
icebp
xchg
or
add
stos
divb
test
lock
cmp
xorb
add
add
lods
data16
incl
lods
xor
xor
rolb
fisttpl
mov
or
mov
mov
push
and
push
inc
clc
incl
cmp
and
pop
sub
and
jg
cmp
add
and
add
push
and
call
xchg
jo
mov
lods
add
or
xor
add
mov
adc
add
or
mov
adc
aad
sub
adc
pushf
pop
incb
das
clc
mov
or
test
mov
and
je
movsb
das
adc
xor
stc
adc
cs
adc
adc
push
cmp
loopne
or
fdivrp
xor
cltd
xor
xchg
xor
mov
sti
popl
add
add
xchg
repnz
call
or
mov
jae
cwtl
fdiv
add
jno
adc
je
stos
mov
mov
jb
push
or
js
fs
add
and
dec
sbb
and
mov
pop
subps
test
xorl
cmpb
loop
icebp
or
and
or
push
cli
mov
jno
cmp
pop
push
loopne
push
cwtl
cmp
sbb
mov
or
and
and
jo
push
cld
cmp
jnp
jo
mov
orl
imul
pop
xchg
push
fisubl
jno
call
jo
ljmp
popf
jbe
mul
add
ret
push
mov
mov
popa
outsb
out
mov
xor
add
mov
add
scas
add
xor
xchg
cmp
and
jle
pop
jne
dec
out
push
sbb
xchg
or
pop
push
and
fs
and
sbb
and
int
call
fwait
imul
mov
push
sti
cltd
add
cmp
aaa
out
adc
jge
mov
add
cli
sbb
add
pop
lock
mov
or
add
mov
movsl
or
push
add
rcll
sub
sub
in
in
push
mov
add
filds
lods
jo
incb
test
mov
mov
and
inc
orl
pop
insb
xor
xor
andb
or
jne
sub
test
add
ja
cwtl
cmpsb
adc
push
pushf
test
cli
xorb
add
call
jnp
lcall
sbb
jmp
lret
adcl
or
sti
or
add
ret
out
call
out
pop
mov
pop
js
dec
orb
fs
std
push
addb
cmpsb
cld
or
add
sub
fs
sub
clc
jle
outsb
ja
add
pop
mov
xchg
fs
adc
nop
lahf
xor
adc
mov
movsl
add
cmpsb
outsb
sbb
test
rorb
pop
cmp
shlb
in
sbb
rorl
sub
cs
jne
out
call
in
push
add
pop
add
shlb
sbb
xchg
cmp
ret
cmpsb
jp
stos
pop
adc
add
pop
add
cmp
jbe
lods
push
mov
add
mov
or
ljmp
pop
fwait
shrb
or
mov
and
pushf
sarl
shlb
loop
shlb
fs
push
call
sti
out
pop
rclb
push
les
sarl
call
push
adc
les
mov
rcr
sub
lds
mov
mov
nop
rcrl
pop
shll
addr16
or
jle
loopne
ljmp
roll
adc
cld
fldt
sub
sub
rol
cmc
in
fistps
and
pop
loope
loopne
ljmp
pop
shl
scas
and
loopne
inc
popa
and
adc
adc
xor
test
pop
mov
paddw
test
sahf
push
lock
ljmp
adc
loopne
inc
bound
loopne
lods
lods
call
imul
ss
ljmp
incl
push
jne
pop
pop
or
or
jne
call
clc
jg
call
or
adc
cmc
pusha
inc
push
loope
cmc
test
inc
bound
rorb
jecxz
jne
sbb
xlat
sbb
clc
mov
jne
pop
mov
incl
imul
loope
adc
stos
movsb
test
pusha
dec
popa
sub
movsb
cld
pusha
sub
or
push
nop
jp
popa
or
lods
popa
shrb
lods
imul
add
adc
ret
mov
aaa
jg
dec
nop
add
imul
ret
mov
push
or
loopne
xor
shll
sbb
or
je
add
adc
pop
je
rcrl
adc
inc
cmp
or
mov
add
or
push
mov
movsb
add
imulb
inc
cmp
je
cmp
adc
cmp
je
cmp
push
mov
enter
xchg
notl
sti
lods
mov
ret
repnz
addr16
loopne
pusha
mov
je
int3
ds
test
adc
je
xchg
cs
stos
je
mov
out
adc
je
lods
je
ret
mov
fwait
mov
je
adc
push
ret
outsb
je
outsl
je
ret
fiadds
adc
cmp
adcb
sbb
and
inc
adc
outsl
adc
lock
mov
es
loop
push
adc
jnp
stos
sbb
jg
das
imul
pusha
pop
add
bound
test
sbb
mov
in
jmp
cli
jbe
loopne
jb
aad
push
call
fs
jne
out
mov
bound
mov
xor
push
imul
sub
ds
jbe
js
push
mov
out
rorb
pusha
pop
jp
ret
loop
xor
xor
scas
lret
bound
addl
popa
pop
cmp
xchg
repnz
adc
push
jl
addl
pusha
sub
mov
sbb
mov
frstor
xchg
add
sub
or
inc
inc
insb
mov
rol
mov
adc
pusha
inc
mov
inc
popa
cmp
popa
add
push
call
hlt
sar
pusha
adc
fucom
sub
dec
sbb
fdivrs
push
xor
pop
inc
mov
call
out
xor
adc
jbe
shr
roll
lock
jne
push
or
push
pusha
pop
ret
and
push
loop
popa
xor
movsb
call
fs
add
adc
jg
psubd
add
daa
test
addb
sbbb
fisttpl
bnd
or
stc
je
pop
addb
mov
clc
pop
in
call
xor
push
adc
test
scas
stc
test
push
sub
push
push
sub
cli
scas
fisubl
hlt
and
cmp
inc
icebp
mov
test
cmpsl
lock
lcall
cmpsb
pop
xor
xor
and
sub
mov
xor
ljmp
icebp
pusha
out
mov
aaa
std
push
mov
and
mov
add
add
decb
sahf
mov
or
ret
adc
sub
add
sahf
loope
jle
mov
lret
std
pop
shl
jl
imul
mov
lcall
cmpsb
mov
es
pop
push
icebp
or
and
inc
lds
out
stc
call
xchg
in
or
sbb
xor
sbb
pop
icebp
call
add
and
inc
cmp
repz
mov
clc
insl
cli
or
test
pop
sub
sbb
or
repz
xor
push
inc
call
jg
nop
repnz
int3
pusha
int3
int3
lret
dec
jp
mov
ret
addr16
loopne
ret
dec
aaa
add
pop
sbb
adc
mov
pusha
xor
jg
je
xchg
sub
adc
imulb
xchg
cmp
jecxz
cmp
xor
daa
adc
or
inc
push
fcmovnu
push
jg
inc
or
rcr
leave
add
cmp
push
arpl
dec
ja
mov
sub
fs
adc
push
gs
cmpsb
jmp
adc
pop
or
mov
mov
mov
insl
and
mov
mov
cmp
adc
addl
int
inc
setno
or
fildll
shrl
mov
xor
xor
mov
push
jl
leave
rcrl
imul
sbb
mov
aaa
and
in
pop
fisttpll
mov
insb
mov
pop
lock
xor
push
xor
outsb
addr16
lahf
leave
push
std
jo
xor
jne
adc
mov
inc
push
outsb
xchg
adc
hlt
add
sbb
fucomi
add
cmp
fdivp
add
icebp
mov
in
or
call
insl
stos
scas
xchg
push
mov
cli
aas
stos
insl
xchg
xor
lea
pop
cmp
add
flds
mov
ds
cmp
outsl
jl
std
jo
mov
mov
std
push
lock
cmpsb
cmp
xchg
sbb
cmp
sbb
dec
sbbl
lock
lods
jge
popa
ja
push
fucomip
mov
pop
mov
pop
xchg
sbb
sbb
lret
xor
js
stos
xor
jae
xchg
mov
test
dec
pop
iret
lods
stc
repnz
or
cmp
push
jl
les
xchg
scas
push
fmull
mov
or
lcall
ret
xor
dec
sti
push
sbb
arpl
dec
xchg
push
jno
mov
frstor
repz
sarl
fbld
push
rcll
sbb
dec
lods
sbb
mov
fidivs
loopne
and
imul
icebp
and
sbb
mov
data16
testl
fisubl
pop
lock
sbb
leave
pop
fimull
add
popf
stc
lds
jl
into
roll
pop
cs
push
sub
imul
inc
sti
icebp
add
xchg
pop
add
pop
adc
sub
sbb
ds
hlt
jbe
arpl
loopne
jns
jecxz
clc
popa
jo
push
shll
filds
jl
pop
fstpl
mov
ja
inc
or
jo
sub
sbb
or
jecxz
jecxz
jecxz
and
jecxz
test
or
out
pop
in
xor
fs
mov
push
dec
or
aad
xor
shr
mov
push
add
push
rorl
pop
xor
int
or
add
xor
pop
push
sub
sub
outsl
mov
dec
mov
mov
scas
imul
xor
add
hlt
lea
add
sub
subb
xor
jnp
pop
add
add
iret
xorb
out
fisubrl
outsb
add
inc
imul
push
rolb
add
sahf
fisttpll
adc
into
push
push
sti
adc
push
or
inc
or
fcoms
jb
mov
orb
addb
push
push
cli
andb
add
out
sub
test
jnp
adc
jg
add
add
lods
push
stc
dec
cmp
subl
add
push
add
xor
and
jge
addb
push
sbbl
fwait
cmpsb
add
mov
mov
insb
jae
add
xchg
dec
loop
fldl
inc
mov
insl
xchg
popa
add
mov
push
sub
mov
push
xchg
gs
push
mov
cltd
inc
imul
insl
popa
push
ds
inc
jae
mov
inc
xchg
insb
inc
dec
add
adc
jg
pop
lock
or
cld
push
pop
add
and
mov
outsb
jnp
dec
bound
outsl
add
cmpsb
add
int3
push
jbe
push
push
les
mov
scas
jo
or
push
adc
mov
in
jo
xchg
arpl
dec
je
ljmp
rclb
mov
mov
sub
push
dec
add
inc
jb
mov
pop
sbb
add
gs
xchg
add
add
sub
mov
insb
imul
arpl
outsl
xchg
dec
mov
cltd
mov
lcall
pusha
rorb
inc
lock
lea
add
clc
pop
push
push
and
mov
adc
rcrb
or
in
or
xchg
arpl
adc
cmp
inc
dec
leave
add
add
incb
in
ja
mov
outsl
sub
je
inc
xchg
dec
ret
push
nop
push
imul
mov
add
ret
jp
inc
sbb
popa
xchg
les
inc
mov
mov
push
push
cmp
dec
sbb
adc
loop
bound
pop
lock
dec
notb
xchg
xor
push
cmp
inc
insb
mov
insb
ret
pop
popa
sub
mov
mov
pop
stos
push
add
or
fs
lea
je
je
and
adc
les
roll
movsb
out
sbb
sbb
mov
inc
insb
mov
rorl
mov
gs
jl
mov
shll
jae
jb
nop
push
incl
or
cmp
add
xchg
pop
out
mov
inc
js
push
add
ljmp
or
adc
add
adc
add
loopne
inc
pusha
sbb
ret
mov
inc
std
mov
popf
jb
loop
adc
je
adc
mov
pop
jne
add
dec
inc
gs
mov
or
push
lods
inc
add
mov
adc
out
mov
loopne
mov
pop
mov
and
je
push
dec
jbe
movsb
sbbb
outsl
lea
or
add
test
push
or
outsl
js
adc
sbb
jecxz
cld
cvtps2pi
data16
inc
add
cwtl
pusha
adc
sub
repnz
xchg
pusha
es
int
adc
loopne
add
dec
adcb
movsb
mulb
add
adc
jb
mov
mov
fs
sub
and
pop
inc
nop
insl
jo
sbb
sub
popa
pop
xchg
loop
clc
dec
nop
mov
jne
arpl
add
in
adc
sbb
add
add
adc
jne
arpl
or
push
ds
pop
add
in
jg
gs
sbb
mov
lods
mov
jecxz
in
jmp
ss
test
cmp
sub
js
mov
hlt
pop
sbbl
xor
popf
xchg
push
lcallw
scas
sub
popa
mov
sbb
das
inc
xchg
add
enter
or
loop
mov
jb
jg
cmp
sbb
push
loopne
sahf
xor
xor
gs
outsb
jns
xchg
pusha
out
jns
mov
xchg
inc
popa
fwait
push
gs
inc
push
mov
push
inc
or
in
inc
adcb
decl
jmp
xor
dec
test
inc
inc
insb
xchg
incl
in
push
xorb
mov
mov
in
decl
clc
dec
lcall
fs
add
add
bound
xchg
int
arpl
in
out
adc
mov
push
or
aaa
inc
data16
mov
cmpb
mov
orb
loope
stos
imul
push
add
sbb
xchg
mov
and
aaa
leave
sbb
or
insl
stos
pop
inc
add
jns
add
test
fs
pusha
dec
xchg
push
dec
mov
jbe
fs
test
push
jae
push
push
xor
pusha
and
outsb
inc
mov
clc
mov
popa
xor
pop
jne
lea
jecxz
dec
loopne
jg
xchg
inc
xchg
xor
jb
loopne
pusha
scas
clc
jmp
mov
xchg
push
add
enter
out
lcall
lcall
jb
sbb
rcrl
dec
popa
sbb
sub
inc
mov
pop
lock
xchg
and
in
or
inc
outsl
mov
stos
insl
mov
addl
clc
daa
mov
push
add
dec
adc
dec
cwtl
adc
dec
inc
outsb
data16
cwtl
pop
mov
push
jns
xor
lock
pusha
push
out
mov
xor
loopne
testb
outsl
mov
addb
jo
pushl
out
imul
inc
xchg
jb
jae
cmp
or
mov
xor
dec
adc
xor
mov
mov
jo
xor
mov
sub
add
and
test
test
sahf
jno
outsl
cli
outsl
clc
pop
inc
or
dec
mov
mov
xor
les
mov
cmp
pop
xor
mov
nop
jo
xchg
aaa
mov
nop
insb
jne
cmpsb
dec
popa
insl
lcall
dec
test
xor
adc
imul
lcall
inc
or
inc
js
adc
repnz
add
or
lcall
push
and
sbb
aad
jae
jno
mov
repnz
inc
xor
push
repnz
push
cmc
push
lcall
imul
xor
add
cld
jo
sbb
mov
add
dec
sub
lcall
xor
jae
sahf
xor
jle
add
mov
jae
out
js
mov
add
icebp
or
push
or
pop
sub
xchg
in
cmp
xchg
outsb
ljmp
xor
adcb
sahf
fdivl
mov
jbe
imul
loope
jb
xor
imul
mov
fs
mov
cmp
mov
inc
push
dec
mov
dec
xor
xor
fs
and
add
addl
add
outsb
imul
fs
push
bound
lock
popa
lea
dec
adc
or
popf
and
rcrb
fs
outsb
adc
and
xor
nop
imulb
int
pop
push
inc
push
mov
mov
hlt
mov
ss
cmpsb
ja
jp
dec
add
aam
imul
stos
and
sbb
jb
mov
in
adc
sbb
and
outsl
jae
arpl
add
fwait
and
mov
outsl
push
ja
xor
fists
push
insb
xor
inc
and
push
xor
call
sub
es
jnp
xor
add
push
jo
pop
add
mov
loopne
mov
dec
push
xchg
insb
mov
test
es
pop
add
push
adc
mov
outsl
in
data16
fcomip
decl
dec
mov
fwait
jno
jo
fcomip
or
inc
mov
push
nop
lock
jmp
or
or
gs
insb
inc
jae
inc
mov
test
scas
mov
mov
dec
sahf
add
and
cmpb
gs
mov
pop
sub
push
mov
or
dec
shlb
jl
adc
divl
outsl
and
sub
fs
and
loopne
push
lcall
xor
stos
call
dec
outsb
jne
inc
lcall
xchg
sbb
adc
push
addr16
fbstp
addb
jp
add
pop
lock
sbb
or
ret
das
cli
dec
jnp
inc
sbb
icebp
pop
hlt
and
push
jo
mov
mov
es
inc
cmpsb
jbe
sbb
pop
inc
push
sub
sbb
sub
xchg
xor
je
repnz
mov
fs
mov
adc
xor
lock
push
xchg
and
outsl
cmp
add
jae
adc
or
rcl
inc
insb
mov
jb
xor
jge
or
pop
push
icebp
or
add
fimuls
les
repz
dec
ret
imul
addb
push
push
xor
jne
add
mov
push
xchg
pusha
outsl
mov
das
cli
xchg
imul
lock
sub
sti
mov
push
outsl
cmp
add
inc
ret
mov
loopne
lock
inc
jae
add
xor
mov
cmp
aam
and
dec
xchg
sbb
in
popa
je
push
add
cwtl
push
cli
imul
mov
mov
inc
jo
mov
push
mov
xchg
sub
adc
insl
movsb
add
mov
xchg
or
xor
lock
jo
mov
cld
stos
mov
sub
jae
testb
sbb
jbe
or
fists
lcall
jae
xor
sti
mov
cmovno
xlat
inc
rorb
outsb
cli
mov
shrb
push
xchg
icebp
or
add
fs
lcall
add
in
jb
lds
fiaddl
xor
hlt
aaa
mov
pushf
mov
mov
dec
loope
xor
jns
push
jo
hlt
into
and
inc
sbb
dec
outsb
mov
in
and
icebp
outsl
or
sbb
jne
jo
jo
pusha
outsl
mov
adc
test
adc
ret
xchg
mov
inc
nop
mov
xchg
cmp
add
add
shlb
dec
add
xchg
add
sbb
sbb
mov
add
sub
mov
push
loope
jae
xor
adc
stos
push
arpl
mov
jo
inc
xor
push
add
lcall
mov
js
xor
fs
mov
insl
mov
adc
pop
push
jmp
jp
das
push
mov
mov
dec
jbe
pop
data16
mov
add
inc
lods
add
dec
push
pushf
add
push
gs
imul
pushf
mov
add
je
lock
add
xor
push
cld
aaa
inc
xorb
insb
add
mov
add
stos
rolb
cwtl
cmp
out
les
or
xchg
inc
insb
push
add
push
xlat
push
imul
push
inc
or
movsl
mov
sbb
nop
stos
push
inc
push
int3
jo
dec
mov
insb
mov
push
adc
lcall
cld
dec
push
mov
jbe
loopne
sbb
sub
or
out
adc
inc
addl
movsb
int3
gs
sahf
addl
bound
lock
loopne
imul
insl
add
mov
xor
add
lds
xchg
adc
mov
dec
nop
sub
movsl
xchg
push
les
and
subb
add
lds
push
inc
les
stos
rorb
jns
arpl
pop
xlat
xchg
push
adc
mov
dec
push
lcall
add
dec
arpl
jo
lods
loop
addb
mov
push
dec
sahf
insl
dec
fs
jnp
fcmovnu
inc
lea
ret
jle
mov
jb
shr
rorb
pop
cwtl
mov
xchg
push
or
adc
mov
iret
xor
rolb
jnp
into
sbb
sbb
add
mov
data16
outsb
popa
sub
mov
ret
add
fildl
lret
frstor
nop
jb
dec
push
push
xchg
mov
fisubs
shll
ret
or
sub
push
fbstp
les
ret
mov
je
outsb
shll
cmp
pop
ret
xchg
fs
push
cmpsb
fwait
sarb
ss
popa
mov
insl
xchg
popa
movsb
add
inc
pushf
loopne
int3
mov
jle
and
test
insb
enter
mov
add
ret
xchg
rorb
add
ret
bound
mov
int3
ljmp
push
xchg
les
ret
pop
and
test
jp
lods
jne
inc
mov
xchg
fdivrp
push
cld
add
sbb
push
xchg
push
pop
cmpsl
rorb
outsl
clc
ljmp
jne
outsl
jl
loopne
gs
insb
in
inc
jae
mov
pusha
xor
add
lcallw
cmpsb
xchg
jbe
fbstp
push
sahf
push
add
or
mov
xchg
loopne
push
add
add
cmp
inc
jecxz
mov
inc
and
push
dec
in
nop
push
jb
push
outsb
cwtl
push
leave
icebp
loopne
popa
jo
inc
loope
push
es
inc
xorb
jl
gs
ja
add
jae
mov
mov
xchg
pushl
jae
or
ja
inc
loopne
push
dec
mov
adc
or
popa
jnp
nop
dec
cwtl
xchg
or
cmp
pusha
les
inc
push
cld
les
fwait
sbb
add
fisubs
or
mov
pop
fbld
adc
and
push
imul
bound
jp
push
pop
sti
call
arpl
insb
pusha
xchg
pusha
add
dec
jae
push
dec
pusha
push
push
mov
push
mov
arpl
xchg
popa
scas
jne
mov
in
or
xor
push
fs
sahf
or
loopne
push
jl
add
pop
outsb
mov
jmp
inc
adc
pop
inc
inc
inc
inc
pusha
inc
mov
data16
xchg
add
lods
imul
and
test
adc
lahf
call
outsb
jno
jne
pusha
push
ss
loopne
adc
pop
lock
adc
inc
arpl
in
push
push
test
push
cwtl
mov
fcoms
test
insl
xchg
sbb
xchg
adc
mov
push
push
add
fisubs
call
insb
add
lret
loopne
push
push
mov
jnp
push
test
jp
jle
dec
mov
and
dec
lods
jp
loopne
push
mov
cltd
bound
jg
mov
or
loopne
mov
clc
je
outsb
arpl
popa
loope
sub
sbb
mov
loope
mov
cli
adcb
inc
mov
xchg
push
add
inc
add
mov
add
int
xchg
push
loopne
gs
outsb
adc
inc
mov
add
shlb
shl
adc
or
loop
sbb
mov
inc
in
xor
pop
cwtl
jbe
pop
inc
movsb
and
int3
add
inc
loopne
popa
adc
push
cmp
mov
ret
xchg
repz
fs
jbe
mov
xchg
bound
mov
add
adc
or
data16
inc
insb
adc
call
mov
pusha
test
inc
in
push
or
loop
mov
push
inc
push
test
shl
mov
xchg
ret
cmpsb
pop
cld
inc
sub
lea
popa
mov
mov
loop
jl
push
in
inc
dec
mov
inc
xor
dec
inc
sub
sbb
xchg
ds
loopne
inc
mov
pop
push
fs
jl
adc
push
test
inc
adc
xor
push
inc
inc
inc
loop
mov
push
stos
inc
add
adc
mov
fistl
popa
add
jo
arpl
or
add
test
dec
in
std
stos
inc
shrb
jae
ss
dec
fucomi
es
jbe
insb
ficomps
mov
repnz
jo
xor
sub
jl
xor
insb
mov
fildl
pop
xor
jo
outsl
je
sbb
jo
pop
or
and
and
mov
and
adc
addb
je
xchg
arpl
ljmp
jecxz
js
jle
dec
push
jns
mov
subb
jb
loopne
aam
sarb
pop
lock
sbb
mov
mov
add
push
js
mov
jg
or
add
insb
push
xor
lods
lret
cltd
xor
je
sbb
icebp
sub
scas
inc
pop
lret
fists
jae
push
push
out
andb
push
cmpsb
push
push
mov
mov
mov
lea
push
sbb
scas
pop
mov
sbb
pop
outsb
jo
lcall
xchg
pop
jo
mov
lock
mov
outsb
jo
cmpl
push
subb
fisttpll
add
jno
mov
mov
sbb
jb
jae
pushl
inc
dec
lods
mov
insl
pop
push
lods
xor
xor
mov
lret
sbb
mov
sub
and
add
je
inc
pop
lock
pop
xor
clc
add
insb
xor
jbe
ljmp
jp
lock
out
xchg
xorb
insb
insb
lock
or
add
xchg
jbe
xchg
sub
pop
test
mov
push
sub
clc
mov
cmc
adc
cwtl
dec
lods
jbe
fwait
out
dec
mov
in
mov
mov
decl
cmc
or
jp
push
dec
push
lea
pushf
push
mov
push
push
mov
push
push
lcall
push
add
sbb
xchg
testb
popa
imul
pop
jbe
lock
outsl
xchg
imul
mov
fdivrs
dec
inc
stos
repnz
dec
dec
cwtl
inc
push
push
xor
add
push
jo
icebp
popl
mov
gs
ret
imul
xor
ljmp
std
xor
push
xor
and
inc
scas
dec
mov
push
add
mov
and
mov
mov
ja
mov
insl
push
mov
cltd
and
dec
mov
jbe
nop
hlt
or
ja
outsl
imul
add
mov
sahf
add
or
loopne
add
adc
jle
mov
adc
push
push
cmp
xchg
cmp
jbe
dec
lea
stos
pop
add
mov
push
xchg
xchg
sub
add
jne
push
je
popf
jne
inc
mov
xor
out
push
je
push
jmp
or
push
inc
mov
sbb
adc
xchg
test
xchg
lret
fs
sbb
icebp
dec
xor
test
pop
or
add
cmp
enterw
sub
pushf
gs
in
inc
adc
test
dec
pop
jo
js
repz
mov
add
fcmovnbe
push
mov
call
lar
out
mov
and
sbb
push
lret
dec
mov
jo
hlt
add
dec
xchg
jg
jle
or
out
divl
inc
jb
mov
dec
sbb
xor
mov
push
mov
inc
insb
or
hlt
adc
ljmp
mov
adc
in
xor
aaa
cld
mov
add
sbb
lock
popf
add
das
imulb
and
dec
out
addl
xlat
xchg
mov
scas
inc
sbb
incl
mov
add
jle
mov
aad
xor
dec
pop
xchg
filds
inc
nop
loopne
add
and
inc
inc
xchg
test
inc
test
sarb
loopne
jl
inc
fisttpll
jmp
stos
push
inc
pop
out
std
fldt
cmpsb
jecxz
repnz
jnp
es
xlat
adc
stos
pop
scas
mov
cmp
mov
inc
adc
add
repz
loope
test
int3
xchg
icebp
scas
mov
std
push
incl
mov
push
cmpsl
inc
in
insb
cmp
inc
mov
shlb
lcall
add
lock
test
pop
mov
popa
cs
jg
call
pop
jbe
add
addr16
xchg
clc
repz
fldl
mov
mov
push
lahf
les
int3
int
xor
loop
loopne
mov
or
pop
jo
sub
mov
fbstp
xor
cmp
sub
out
cld
push
jg
pop
pop
dec
shl
xor
mov
mov
cmpsl
out
aas
mov
std
inc
xor
jmp
int3
cmp
aad
xchg
jb
sbb
out
cmp
test
ja
stos
in
shlb
decl
mov
mov
leave
aas
insl
les
adc
cmpsb
jg
int
inc
lcall
movb
lock
xchg
aas
mov
cmp
sahf
mov
sahf
push
pop
roll
mov
in
mov
das
jp
mov
cwtl
pop
add
dec
jmp
sub
subb
push
jl
das
fstl
add
ja
clc
sbb
cmp
arpl
mov
fimuls
sub
std
xlat
cmp
mov
pop
sbbb
mov
jecxz
cmpsb
add
cmp
jg
xorb
cmp
jno
rolb
xor
mov
pop
mov
pop
xchg
adcb
aam
push
outsl
adc
mov
adc
dec
in
leave
test
adc
into
imul
shrl
ret
call
mov
xchg
cmp
scas
xchg
outsb
xchg
bound
mov
push
scas
stc
xchg
jge
sbb
enter
fsubs
iret
dec
in
out
mov
mov
shlb
inc
inc
cwtl
loop
add
mov
scas
inc
push
pop
orl
addl
shlb
add
push
mov
mov
dec
rcrl
into
mov
lret
push
ljmp
add
push
sbb
or
lret
mov
testl
cs
add
ss
cmp
outsb
or
lods
sub
push
add
repz
fstpt
stos
sbb
das
aaa
add
add
dec
xchg
arpl
dec
mov
orl
sbb
std
pushl
std
xor
ret
push
cltd
lahf
lret
add
int3
add
mov
outsl
dec
mov
push
pop
push
add
mov
push
dec
jae
insl
roll
sbb
inc
pop
lret
adc
int3
mov
pop
adc
pushf
adc
jle
fidivl
sub
insb
xchg
lret
insb
fisubl
xor
icebp
insl
dec
test
and
outsb
fnstenv
in
add
add
jnp
add
adc
jl
lcall
jge
mov
jmp
mov
fiaddl
push
push
mov
popa
dec
js
sub
ss
xchg
cmp
sarb
addr16
jmp
xchg
int
or
sub
adc
aaa
jb
xchg
cs
es
mov
inc
gs
adc
fbld
lret
cmp
push
aaa
mov
aas
adc
aaa
daa
aaa
in
xchg
aaa
idivl
adc
hlt
sub
cmp
cmp
mov
or
out
cmp
out
sbb
cmp
ja
sarb
cmp
imul
in
sbb
xor
xor
or
pop
xor
xor
adc
xor
xor
fld
xor
jae
and
les
mulb
cmp
adc
cmp
ret
add
cmp
cmp
and
xor
and
flds
out
xchg
add
cmp
cmp
cmp
cmp
mov
inc
cmp
cmp
lea
adc
cmp
loopne
adc
add
repz
or
filds
and
adc
cmp
int
push
mov
cmp
cmp
mov
movsb
cmp
ret
and
jg
enter
cmp
add
repz
aaa
jecxz,pt
and
sarl
ds
ds
ds
es
and
mov
and
outsl
mov
jp
mov
inc
ds
out
out
xor
and
in
adc
add
add
repz
test
adc
sarl
mov
outsl
sbb
and
aas
fs
xchg
aas
out
aas
cmpl
aas
jae
aas
arpl
movsb
aas
push
aas
aas
inc
insb
ret
and
aas
mov
fwait
mov
and
aas
mov
mov
push
fs
push
dec
mov
sbb
sub
lret
adc
mov
xchg
push
adc
mov
int
adc
adc
aaa
jg
xor
lods
xor
xor
xor
xor
fdivl
sbb
insb
bound
in
adc
xor
adc
fisttps
mov
xor
aaa
jg
fwait
xor
jl
jnp
mov
xor
and
insb
inc
pop
adc
xor
and
fwait
adc
xor
xor
mov
js
mov
into
sub
mov
cmp
mov
pop
xor
push
adc
adc
xor
insl
push
mov
mov
xor
fdivl
sbb
in
xor
les
cmp
or
mov
sbb
or
mov
jle
mov
adc
xor
xor
xor
cld
int
xor
pushf
xor
lods
xor
mov
dec
mov
and
xchg
pop
adc
xor
mov
xor
xor
xor
xor
xor
xor
fisttps
xor
ss
or
jo
xorb
sbb
mov
insb
aas
inc
jno
pop
jnp
sub
orb
les
nop
pop
outsl
and
ljmp
outsl
xor
int
call
cmp
cmp
cmp
sti
cmp
cmp
int3
add
insb
mov
mov
sbb
mov
xor
outsb
decb
test
cmp
cmp
cmp
cmp
in
adcb
and
push
sub
test
inc
sbb
sub
outsl
cmpsb
pop
xor
nop
xor
fadd
into
xor
or
outsl
repnz
xor
xor
inc
xor
xor
xor
fwait
clc
lcall
ss
ss
aaa
add
mov
in
clc
add
movsl
add
cmp
xchg
std
mov
cmp
cmp
cmp
cmp
stc
cmp
cmp
popa
adc
xorl
lock
stc
or
idiv
popf
cmp
xor
repnz
leave
outsl
incb
aaa
lret
loopne
cmp
cmp
cmp
sub
cmp
lock
inc
inc
cmp
cmp
cmp
mov
push
out
loope
jo
sarl
xor
rclb
jo
push
cmp
cmp
dec
call
cmp
cmp
cmp
sti
cmp
outsl
clc
stos
loope
adc
cs
cmp
or
das
cmp
cld
stos
xchg
cmp
cwtl
cmp
sbb
dec
ljmp
pop
mov
or
inc
aas
repnz
lock
rorl
in
push
xor
adc
lods
mov
xor
sub
xor
data16
sub
or
fdivrl
sarb
cmp
cmp
data16
outsb
jg
cmp
cmp
cmp
push
nop
inc
mov
clc
mov
or
inc
nop
push
test
repz
xor
xor
pop
xor
xor
xor
and
insl
lds
xor
adc
xor
xor
push
fcomip
jg
add
into
xor
xor
xor
adc
rolb
or
aaa
popa
in
cmp
cmp
cmp
pop
cli
cmp
dec
push
aaa
shll
cld
cmp
add
xchg
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
clc
mov
ds
jo
push
ds
sarl
aas
jp
fwait
aas
sub
aas
in
call
mov
inc
xchg
xor
mov
aaa
jle
cmp
cmp
xor
imul
call
ret
or
xor
xor
push
lahf
xor
xor
xor
adc
xor
scas
call
and
jne
scas
in
mov
ss
hlt
push
aaa
adc
jge
lea
fs
dec
ljmp
outsl
cli
ljmp
push
cs
cmp
cmp
adc
cmp
cmp
test
jo
mov
cmp
push
mov
xor
jmp
dec
add
add
in
je
insl
sub
ds
pop
ds
and
jg
aas
lds
inc
aas
mov
aas
push
aas
sub
and
lods
mov
pop
je
xor
fdivl
sar
jg
xor
xchg
ret
xor
xor
and
ss
and
or
fcomip
aaa
jg
cmp
cmp
out
repz
outsb
jge
mov
ret
add
dec
mov
inc
inc
inc
cld
fwait
pop
mov
mov
xor
daa
jle
test
inc
xor
jbe
addr16
xor
pop
in
decl
into
arpl
mov
add
cmp
adc
cmp
mov
cmp
fsubrs
nop
adc
mov
dec
jno
out
pop
cmp
sub
cmp
inc
mov
jmp
push
cld
sbb
jo
lret
xor
xor
shll
jg
push
add
xor
xor
xor
in
ss
ss
xchg
aaa
cwtl
mov
pop
cmp
lds
lret
cmp
cmpsb
jg
cmp
cmp
xor
and
dec
mov
cmpsb
and
cmpsb
xlat
xor
clc
test
xor
ss
aaa
and
out
sub
fidivrs
cmpl
cmp
adc
ds
jae
xor
out
insb
cmp
aam
cmp
test
mov
mov
movl
jge
pop
es
xor
cmp
nop
inc
sahf
cmp
add
daa
jle
lcall
jns
lock
outsb
and
fisttps
jo
xor
xor
jne
xor
std
mov
mov
mov
jbe
mov
notb
adc
int3
cmp
xor
xor
xor
adc
xor
in
pop
mov
xor
jbe
jo
pop
xor
xor
fiaddl
js
xor
mov
fbstp
sub
iret
xor
xor
pushl
add
push
xor
lahf
xor
insb
xor
je
xchg
xor
mov
push
add
pop
movsb
xor
mov
xor
xor
ss
add
ss
ss
dec
adc
ss
lahf
ss
ss
adc
ss
test
ja
mov
jmp
mov
ss
pop
movsb
ss
lods
orb
ss
ss
mov
ss
ss
add
pop
fdivl
pop
fdivrp
ja
add
sbb
ds
ds
aas
mov
pop
fsubrs
aas
cld
ljmp
inc
pop
adc
addb
out
xor
sub
jb
or
xor
sbb
ss
add
mov
shlb
cwtl
push
xor
bound
jo
mov
mov
ret
xor
jmp
outsb
sbb
xor
inc
xor
add
stc
nop
imul
divb
fbstp
sub
iret
adc
popf
xor
lea
test
outsl
mov
divb
shll
pop
xor
adc
repnz
xor
scas
mov
mov
inc
adc
xor
hlt
add
out
push
pop
loopne
sub
mov
push
or
adc
pop
mov
insl
xor
push
push
and
orl
movsl
xor
xor
test
lock
sbb
push
xor
mov
ss
shll
xor
ss
push
cmpsb
push
dec
loopne
mov
adc
jo
dec
shlb
sub
pushl
pushl
push
aaa
movsl
add
jb
xchg
test
insl
adc
aaa
xor
divl
add
loope
xor
outsl
cmp
std
lcall
push
cmp
cmp
fidivrs
sbb
or
loop
cmp
cmp
sti
fwait
add
inc
cmp
cmp
cmp
adc
cmp
lcall
cmp
insl
dec
cmp
xchg
push
mov
repnz
sbb
jge
and
push
dec
lods
aas
outsl
dec
add
cwtl
fadds
mov
and
scas
push
mov
push
sbbb
xor
xor
xor
or
xor
xlat
xor
xor
push
add
ret
xor
shlb
xor
into
mov
inc
xor
xor
int
jne
test
xchg
xor
mov
out
xor
xor
xor
xor
cld
subb
fidivl
shll
mov
hlt
or
push
xor
xor
movsb
xor
xor
xor
jge
filds
fdivs
xor
xor
ret
out
movswl
outsl
ret
lcall
cmp
sahf
sub
inc
fldt
or
stc
into
ss
pop
test
push
aaa
in
aaa
pop
aaa
jecxz
fnstenv
sub
iret
aaa
xor
ljmp
insb
dec
aaa
mov
push
aaa
cmpsl
aaa
pop
aaa
popf
aaa
addr16
xchg
aaa
jno
mov
jnp
jg
scas
out
cli
test
jne
push
aaa
cltd
aaa
popa
aaa
mov
aaa
sti
pushl
aaa
cmp
lret
aaa
das
aaa
aad
and
aaa
jmp
aaa
pop
aaa
std
add
loope
jg
pop
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
shr
pop
cmp
mov
dec
cmp
cmp
jne
ljmp
jg
jnp
mov
jno
xchg
cmp
cmp
cmpsl
cmp
mov
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
xchg
cmp
xchg
ljmp
outsl
cmp
cmp
push
cmp
ljmp
cmp
sbb
cmp
leave
cs
jnp
push
push
inc
adc
mov
or
ds
scas
xchg
mov
into
stos
xor
ljmp
shr
loopne
ss
cmp
cmp
xchg
cmp
cmp
lock
filds
into
cmp
cmp
cmp
cmp
cmp
call
clc
sbb
fstpt
je
sahf
cmp
adc
cmp
dec
ds
mov
aas
ret
inc
call
movsb
mov
ljmp
scas
aas
fwait
icebp
ror
sub
in
inc
xor
fisttps
xor
xor
add
xor
idiv
aad
xchg
and
xor
xchg
xor
adc
pop
xor
jbe
inc
jp
sub
shrb
jmp
mov
push
cmp
cmp
leave
cmp
jl
mov
pop
scas
pop
cmp
inc
outsb
aaa
pushl
cs
cmp
sub
mov
jg
jbe
sbb
test
push
fs
xchg
aas
dec
aas
out
jmp
pop
repz
xor
push
pop
ret
xor
xor
rcl
ljmp
xor
xchg
xor
je
cmpsl
xor
enter
mov
push
xor
cmp
shll
loope
and
rorb
xor
xchg
cli
xor
xor
cld
xor
xchg
inc
mov
xor
sbb
mov
mov
dec
ss
mov
stos
push
sbb
pop
in
sub
cli
push
cmp
cmp
dec
cmp
add
cmp
jg
xchg
jb
lahf
cmp
scas
sarb
mov
cmp
cmp
pop
mov
pop
cmp
cmp
cmp
cmp
sub
cmp
xlat
cmp
sub
or
ds
ds
lods
aas
cwtl
xor
iret
into
aaa
fstpt
mov
xlat
xor
mov
imul
les
inc
out
ljmp
mov
stos
cmc
xor
xor
daa
xor
add
notl
pop
sarl
cmp
sahf
icebp
cmp
mov
dec
cmp
mov
push
adc
and
xor
dec
mov
cli
ds
ds
loop
sub
cmpsl
loope
pop
adc
decb
or
mov
pop
xor
xor
cld
jg
lret
loop
fidivrl
xor
xorb
inc
mov
mov
adc
fbstp
sub
dec
lea
stos
rolb
aas
cld
aaa
scas
aaa
cmp
cmp
cmp
pushf
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmpsl
ds
shlb
out
add
imul
mov
or
mov
adc
incl
cld
xor
xor
xor
xor
xor
xor
xor
xor
add
add
repnz
pop
add
mov
inc
xor
aaa
cld
push
scas
ss
push
inc
aaa
test
cmp
cmp
cmp
fiaddl
cmp
mov
jmp
inc
cmp
es
dec
adc
push
daa
loopne
movd
push
loop
int
push
sbb
xor
decl
xor
jg
lods
xor
xor
xor
xor
xor
cmpsl
jge
xor
ss
shlw
or
jbe
ss
cmp
mov
cmp
cmp
cmp
idivb
jmp
mov
adc
jmp
push
inc
adc
push
adc
repnz
pop
xor
pop
mov
xor
cmpsb
sub
test
rclb
push
lcall
jl
xor
xor
ss
xor
xor
sbb
inc
std
shll
aaa
lods
fwait
aaa
push
aaa
mov
mov
cmp
sbb
cmp
push
mov
sbbb
pop
push
fs
jo
xor
pop
insb
out
pop
sarb
sub
mov
cmp
cmp
cmp
sahf
sbb
xchg
ljmp
fwait
pop
test
push
cmp
cmp
push
jg
cmp
lea
or
push
cmp
aad
jne
xor
rclb
mov
xor
xchg
xor
xor
xor
scas
push
xor
xor
outsb
aaa
stos
aaa
inc
aaa
sbb
sarb
inc
pop
jo
jns
mov
imul
ljmp
jl
pop
mov
cmp
cmp
cmp
add
xchg
jecxz
test
cmp
cmp
jo
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cwtl
cmp
mov
and
data16
pop
cli
call
bound
aas
rclb
xor
xor
lcall
rorb
icebp
pop
xor
xor
pop
xor
outsb
ret
mov
xor
cs
xor
mov
mov
mov
hlt
es
movsl
and
in
xor
add
mov
rol
sbb
repnz
in
and
enter
scas
incl
cmp
cmp
dec
cmp
cld
cmp
cmp
inc
sbb
scas
inc
aas
pushf
aaa
xor
xor
push
loope
xor
mov
xor
mov
xor
rcrb
ja
xchg
xor
ss
cmp
push
or
and
xor
mov
mov
xor
jbe
xor
xor
dec
xor
xor
xor
dec
or
or
imul
push
test
aaa
dec
ret
aaa
fdivl
sbb
and
hlt
xlat
incl
lcall
sarb
inc
cli
clc
cmp
imul
cmp
cmp
cmp
cmp
ds
ds
aaa
inc
call
lcall
xor
xor
push
int
adc
fistpll
loope
shll
xor
xor
xor
mov
adc
mov
scas
cmp
cmp
cmp
jbe
xchg
cmp
lock
pop
clc
sarb
sub
cs
push
cltd
cmp
leave
ljmp
std
or
cmp
cmp
cmp
cmp
push
loope
xchg
cmp
incl
int3
cmp
push
ds
add
aas
cmp
mov
popf
ljmp
mov
mov
push
cmp
sub
sub
xor
outsl
add
xchg
push
ficomps
xor
xor
adc
addr16
jge
xchg
xor
pop
inc
cmc
xor
xor
mov
xor
dec
lock
xor
push
lds
or
adc
clc
scas
lea
xor
scas
or
fdivs
aam
jle
repnz
push
ss
ss
push
pushl
imul
pop
aaa
xchg
aaa
mov
cmc
aaa
jmp
cmp
stos
or
lcall
lea
cmpsb
cmp
cmp
cmp
mov
sar
add
cmp
cmp
push
sbb
outsl
lret
cmp
ds
push
fistpll
shlb
sbb
add
xor
xor
lods
in
xor
aad
aaa
int3
xor
xor
bound
insl
cs
jg
push
mov
xor
pop
fnstenv
adc
hlt
xor
xor
xor
mov
push
scas
mov
or
xor
cli
loopne
sbb
cmpsb
pop
xor
push
cmp
mov
test
sub
test
adc
sbb
cmpsb
push
shlb
mov
xor
ret
mov
add
xorb
aaa
in
cld
push
subl
push
ret
mov
mov
cmp
nop
idivl
out
cmp
cmp
ljmp
cmp
cmp
mov
cmp
adc
add
call
cmp
mov
outsb
sar
cmp
cmp
cmp
cmp
mov
cmp
lret
lds
add
cli
ret
dec
mov
jb
push
cmp
orb
xor
xchg
loop
fcomip
jle,pt
inc
push
ds
aas
ss
cmpsb
aas
data16
push
aas
sarb
aas
dec
mov
divb
repz
enter
inc
test
sbb
xor
xor
xor
maxps
mov
xor
jae
cwtl
xor
pushl
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
hlt
xor
out
jb
aaa
cld
aad
mov
cmp
cmp
mov
mov
out
dec
lcall
call
jbe
add
stos
cmc
cmp
inc
add
and
dec
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loop
dec
cmp
cmp
cmp
cmp
cmp
int
bound
test
lods
les
lds
inc
rorb
dec
dec
push
push
ret
xchg
outsb
add
sbb
xor
aas
ds
mov
aas
test
and
push
xorb
jp
sahf
xor
aad
pop
xor
sarl
push
dec
push
xor
xor
jbe
inc
xor
aaa
push
push
pop
sub
cmp
push
jmp
cmp
loopne
cmpb
imul
test
nop
jg
imul
xor
sbb
mov
xor
xor
bound
jge
cmp
xor
sub
jo
mov
out
les
or
add
xor
inc
dec
push
mov
test
dec
out
aam
int3
les
jp
decb
movsb
and
xor
push
xchg
mov
push
ja
jg
test
xchg
and
lret
xchg
mov
inc
ss
aaa
cmpsb
aam
les
push
loop
adc
cmp
repnz
or
cmp
cmp
xchg
push
shl
je,pt
icebp
mov
mov
adc
xor
aaa
mov
xor
mov
or
push
into
jg
sub
fidivs
in
je
push
jne
xchg
mov
mov
dec
adc
loopne
mov
in
scas
std
xor
sbb
push
xchg
push
pop
ds
xor
aam
adc
cmp
push
jp
aaa
aaa
or
mov
mov
mov
ljmp
lea
jp
jno
ja
dec
sarb
push
cmp
mov
lcall
cmp
and
adc
cmp
cmp
add
in
cli
jmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
outsl
cmp
sbb
cmp
movsl
cmp
lahf
mov
cmp
out
rclb
sbb
js,pt
push
loopne,pt
clc
cmp
lret
dec
aas
ja
mov
fidivl
adc
das
fdivs
sbb
test
pusha
push
js
jg
ret
xor
push
jg
xor
xorw
mov
add
pop
scas
push
or
dec
xor
add
and
or
mov
aaa
out
cmp
mov
and
xor
js
ja
stos
int3
mov
cmp
cmp
push
loop
pop
enter
cs
jle
fwait
out
sbb
je
cmp
add
mov
lahf
icebp
mov
xor
adc
or
dec
enter
xor
xor
adc
push
lods
sub
pop
mov
sbb
ficoms
stos
pop
push
xor
cmpsb
stos
ret
pop
add
cmp
cmp
cmp
jle
or
cmp
or
cmp
test
aaa
insb
inc
mov
cmpsb
lods
ds
aaa
aas
popf
std
cmovg
call
mov
ss
xor
xor
decl
xor
mov
dec
xor
enter
sbb
aad
and
adc
inc
inc
mov
and
shll
xor
inc
ss
xchg
xchg
ss
sub
hlt
and
out
or
es
mov
imulb
ret
cmp
cmp
jp
jmp
fidivs
cld
sti
lahf
fstpt
stos
xor
inc
ret
cs
cmp
popa
pop
xchg
sbb
push
pushf
inc
cwtl
and
fsubs
ljmp
jo
or
cmp
pop
xor
cmp
adc
adc
test
lcall
cmp
mov
dec
cmp
ljmp
fcomps
insb
cmp
or
xchg
ds
add
pop
mov
ficoms
movlhps
aas
sub
iret
push
jge
or
aas
jp
js
cli
inc
sbb
add
mov
ss
aas
and
testb
xlat
cmp
and
gs
ds
push
adc
jno
std
jbe
mov
cmp
and
and
adc
fisubs
cmpsb
add
mov
adc
test
arpl
add
mov
add
cmp
cmp
mov
lret
mov
stos
scas
push
cmp
cld
stos
push
in
aaa
jp
xor
les
fcoml
jle
jp
arpl
xor
std
sub
divb
jmp
sbb
sub
mov
mov
pop
pusha
dec
jl
pop
into
push
mov
adc
mov
aaa
adc
outsl
aaa
stos
test
dec
adc
aaa
or
subb
sbb
jle
pushf
add
sub
ret
xor
xchg
lahf
mov
or
je
xchg
push
nop
xor
pop
cmp
xor
cwtl
xorb
lcall
mov
xor
sbb
rolb
or
rorb
imul
adc
xor
xor
ljmp
mov
add
cltd
jae
jbe
push
adc
xor
inc
push
mov
aad
mov
xchg
fdivl
add
cmpsb
ret
xor
inc
pop
es
push
xor
mov
pop
stos
xchg
sbb
mov
push
xchg
inc
ss
ss
push
mov
aaa
mov
pop
adc
dec
dec
rcr
push
aaa
mov
xchg
xchg
and
cmpsb
add
jg
jg
jg
add
adc
sub
aas
add
leave
sub
and
add
sbb
dec
ss
ljmp
push
js
rorb
push
dec
mov
imul
ss
cwtl
popf
sarb
dec
outsb
sub
inc
stos
scas
incl
jge
mov
mov
icebp
stos
mov
adc
fisubrl
jbe
adc
mov
mov
push
cmpsl
adc
add
cmp
jno
push
add
fwait
and
std
dec
jg
adc
xchg
loope
mov
push
das
push
out
stos
adc
xchg
pop
hlt
pop
push
inc
mov
mov
or
in
ljmp
cmp
add
mov
not
dec
rcrl
fdivr
sub
js
fldl
jnp
aam
lock
hlt
inc
xlat
mov
mov
iret
addb
cld
decl
lods
dec
popa
insb
outsl
ret
call
test
adc
adc
mov
mov
push
pop
cmpsb
repnz
fwait
int
xor
in
incl
add
dec
or
and
mov
xor
add
sahf
imul
fwait
insb
clc
mov
inc
loop
ret
sbb
mov
loopne
out
jmp
sub
paddb
inc
push
aaa
mov
cmp
sbb
jmp
add
outsb
movsl
and
stos
pop
aas
data16
cs
insb
sub
int3
add
decl
jbe
rclb
add
lahf
sbb
or
lds
lock
icebp
pop
cld
insl
jno
and
inc
in
sub
adc
movb
aad
out
lods
xor
jg
out
mov
clc
test
icebp
push
aad
aam
adc
mov
mov
pop
jnp
out
adc
lcall
xchg
mov
shl
lods
outsb
insb
adc
mov
lock
call
faddl
lods
cli
push
dec
test
push
xchg
add
arpl
adc
adc
leave
rolb
in
adc
decb
sarl
jmp
addb
out
cli
xchg
js
ja
jb
mov
push
add
int
adc
push
add
cmc
pushl
hlt
dec
int
test
cmp
push
cmc
pop
sti
enter
pop
call
xor
add
inc
inc
test
repz
or
and
lods
lret
cmp
and
cltd
hlt
inc
mov
sbb
dec
inc
dec
mov
cmp
cmpb
jg
sub
mov
adc
xor
pusha
stc
fs
ds
mov
xor
add
inc
inc
and
clc
adc
jbe
rcrb
add
inc
jns
mov
xchg
mov
gs
sub
and
gs
insl
gs
jae
adc
outsl
mov
sbb
outsl
popa
fs
out
nop
fisubl
sbb
outsb
popa
sub
push
mov
or
sbb
imul
int3
inc
gs
push
je
pop
mov
outsl
dec
mov
mov
add
popa
jo
insb
data16
lock
inc
ds
outsl
outsb
imul
mov
ja
mov
les
insl
testl
inc
lock
addl
dec
ret
pusha
mov
les
pop
jb
push
inc
mov
arpl
pop
inc
xor
popa
mov
sti
fisubl
push
push
popa
ja
jle
push
mov
imul
bound
push
fisubrs
or
or
cmpsl
dec
inc
inc
and
push
or
dec
mov
andl
lea
or
pop
sub
nop
in
add
cltd
sub
daa
adc
or
stos
or
push
fwait
sub
mov
movsl
and
sub
and
inc
adc
add
aad
lcall
aaa
mov
subb
inc
push
lea
add
mov
push
jne
cmpb
ja
orb
gs
sbb
adc
pop
sbb
sub
inc
mov
adc
in
mov
adc
inc
and
roll
adc
nop
xchg
addr16
lds
inc
cmpsl
in
or
pop
les
mov
iret
adc
pop
shrb
and
or
xchg
movsb
sbb
mov
add
pop
inc
push
pop
roll
or
test
mov
pusha
and
xor
push
and
daa
rorl
xchg
push
jecxz
mov
icebp
icebp
or
mov
push
add
sbb
or
inc
sbbl
push
and
mov
mov
adc
mov
push
push
lods
sbb
add
add
and
mov
xor
and
repz
add
int
inc
push
pusha
adc
loopne
sub
dec
sub
mov
cmpsb
mov
and
add
scas
mov
jae
outsb
cs
insb
xor
stos
push
and
lods
sbbb
cmc
dec
inc
imul
stc
adc
inc
aaa
popa
sbb
sub
add
xchg
ret
and
or
movsl
lds
or
push
xor
inc
popf
sub
inc
adc
adcl
adc
arpl
fdivl
mov
push
test
lret
sub
add
pusha
add
and
xor
dec
push
mov
movsl
mov
sbb
adc
and
test
push
sbb
adc
mov
or
jnp
nop
sub
leave
test
mov
push
or
inc
add
and
inc
and
inc
adc
xor
aam
pop
stc
or
mov
cmpsl
inc
mov
add
lods
inc
movsl
inc
adc
test
push
popa
adcl
pop
or
dec
or
jne
addb
inc
or
cmpb
add
sub
cltd
data16
aad
pop
outsl
and
xor
mov
lods
orb
add
jae
adc
inc
sub
nop
adc
test
mov
jne
and
sbb
test
sbb
add
or
insl
dec
add
mov
mov
sbb
popa
std
and
adc
pop
imul
sbb
or
push
xor
sub
inc
mov
and
mov
push
ja
add
add
jne
loop
out
mov
test
adc
mov
push
or
dec
xor
adc
add
push
pop
and
sbb
lret
push
adc
inc
push
and
push
inc
and
xor
fbstp
orl
or
xchg
and
and
and
rorl
pusha
int
and
dec
inc
xor
or
adc
mov
movsb
push
lds
push
rcl
sub
add
mov
dec
inc
and
stos
push
test
jge
sbb
dec
and
mov
xchg
fisttpll
or
lahf
add
mov
aas
and
adc
sub
inc
xor
add
add
jmp
mov
sub
jne
inc
inc
dec
mov
xor
or
xor
sub
roll
adc
bound
mov
and
ret
and
inc
sub
sbbb
xor
inc
or
inc
aam
mov
adc
or
adc
shr
mov
inc
aaa
sub
sbb
rorb
add
sub
and
sti
out
stos
push
and
mov
shll
sbb
sbb
xchg
pop
add
test
xor
mov
add
sbb
pusha
adc
rcll
fwait
or
mov
sbb
add
loopne
mov
fwait
add
push
adcl
or
jg
xor
push
adc
push
xor
and
lea
adc
or
mov
addl
loope
or
push
push
sbb
lds
cmp
adc
lea
or
call
inc
shlb
push
imul
adc
adc
mov
adc
adc
dec
dec
adc
push
subb
sbb
push
mov
leave
sbb
imul
testl
mov
adc
inc
inc
mov
mov
inc
adc
test
mov
push
pop
mov
or
mov
rorl
mov
lds
outsl
test
pop
sub
sub
lods
and
dec
or
inc
push
test
nop
add
jge
push
movsl
xor
add
add
inc
add
dec
test
mov
pusha
add
adc
arpl
test
mov
popa
shlb
sub
push
inc
push
ret
cmp
rcrl
sbb
popl
dec
sub
or
pop
ss
xchg
pop
adc
pop
and
mov
sbb
inc
cmp
int
add
lea
nop
mov
insb
fistpll
xchg
push
jo
fcoml
sub
dec
imul
push
add
add
mov
add
and
cmp
inc
rolb
mov
pop
push
pop
or
mov
dec
xchg
jle
inc
outsb
dec
in
mov
push
xor
cld
dec
rorb
orb
mov
pushf
pushf
dec
dec
xor
int
and
jae
arpl
bound
pop
es
xor
mov
sub
outsl
outsb
sub
dec
xchg
and
add
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
push
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
add
add
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
imul
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
jb
add
sbb
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
or
pop
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
or
pop
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
or
pop
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
or
pop
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
or
pop
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
or
pop
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
or
pop
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
or
pop
mov
jo
js
shlb
jecxz
push
dec
mov
ds
addr16
sarb
outsb
sub
inc
stos
inc
add
cmp
push
in
and
pop
dec
dec
ficoms
push
pop
jbe
adc
xlat
push
cmpsl
jmp
add
xor
stos
add
fs
adc
xchg
loope
scas
sbb
push
fsts
push
push
fldt
loopne
lds
fnstsw
mov
or
or
test
cmp
adc
rcl
xchg
fdivr
sub
push
fldl
lds
xchg
sbb
push
mov
outsl
imul
cmp
das
adc
mov
stos
pop
cmpsb
repnz
ja
int
xor
mov
and
test
xor
ss
imul
mov
inc
loop
or
sbb
mov
jmp
sbb
aaa
mov
into
in
jmp
loop
sub
and
cbtw
arpl
xor
stos
jbe
rclb
and
dec
inc
mov
jb
pop
lds
insl
jno
fidivs
inc
loopne
sub
adc
adc
xor
pop
dec
add
aad
aam
xlat
in
inc
repz
mov
pop
jnp
ret
pop
out
js
scas
mov
out
lods
xchg
insb
adc
les
rcr
push
cli
push
dec
jp
push
xchg
mov
arpl
adc
lret
leave
ret
aas
inc
sarb
adc
fsubp
adc
addb
xchg
js
ja
shll
add
jno
sbb
push
pushf
xlat
hlt
dec
xor
test
cmp
push
or
enter
call
cli
ljmp
xor
xor
or
mov
adc
popl
rcr
mov
sbb
push
test
nop
ljmp
dec
or
dec
fidivrl
daa
xchg
push
in
ja
ficoms
mov
sub
cmp
lret
sti
lock
dec
push
and
inc
ficoml
clc
jo
popa
sbb
lds
add
rcll
addps
sub
and
in
call
push
cmp
cs
cmc
xor
ja
arpl
mov
sub
jae
fnstenv
add
inc
and
rorl
orb
add
sbb
sub
popa
daa
dec
mov
mov
adc
push
push
push
andl
push
sbb
pop
xor
mov
daa
mov
pop
inc
leave
push
sub
test
pusha
insb
inc
add
insb
inc
add
insb
inc
add
inc
add
insb
inc
add
insb
inc
add
add
add
insb
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
jae
popa
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
addr16
jb
push
inc
popa
jb
push
xor
imul
