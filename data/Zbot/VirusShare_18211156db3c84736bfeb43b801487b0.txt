stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
pop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
jmp
ret
cld
xor
lea
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
clc
popf
push
pushl
decl
ret
pop
pop
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
push
pop
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
andb
add
add
inc
and
add
and
add
and
add
and
add
and
add
add
fisubl
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
add
dec
and
add
and
add
add
movsb
and
add
and
add
and
add
add
add
and
add
and
add
add
data16
add
add
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
cwtl
and
add
add
andb
add
add
inc
and
add
and
add
and
add
and
add
and
add
add
fisubl
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
add
dec
and
add
and
add
add
movsb
and
add
and
add
and
add
add
add
and
add
and
add
add
data16
add
add
add
add
add
add
je
jne
jb
outsb
je
jb
arpl
jae
addl
jb
popa
je
inc
imul
jns
add
add
gs
outsl
jbe
inc
imul
jns
add
repnz
imul
jb
je
arpl
add
roll
dec
gs
jo
jb
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
inc
jne
jb
outsb
je
push
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
dec
outsl
arpl
inc
insb
popa
addr16
add
push
gs
imul
call
inc
imul
bound
gs
add
push
push
je
imul
inc
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
imul
bound
gs
add
aad
inc
imul
gs
add
outsl
bound
dec
outsl
arpl
add
gs
popa
jae
inc
jb
outsl
jb
add
je
inc
jbe
outsb
je
add
data16
je
je
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
inc
gs
imul
js
push
add
rolb
jae
imul
stos
pop
dec
jae
push
ja
jb
add
jnp
push
gs
outsl
arpl
add
mov
dec
jae
imul
jae
popa
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
inc
gs
imul
outsb
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
ja
jo
imul
push
push
gs
jae
addr16
add
movl
outsl
insl
gs
mov
inc
imul
dec
gs
popa
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
gs
js
insb
imul
jb
gs
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
mov
xor
icebp
pop
mov
aam
mov
pop
roll
mov
fcomp
outsb
movsl
jno
int
enter
das
xor
or
ds
lds
mov
shll
cmp
test
stc
rcrb
insl
sbb
movsb
jb
dec
xor
sti
inc
daa
js
or
inc
push
add
gs
repnz
repnz
stos
jmp
pop
inc
sti
pop
mov
stos
in
mov
mov
cwtl
aad
xchg
jl
hlt
outsb
fs
gs
pop
in
xchg
sbb
in
jne
lret
pop
sub
cwtl
and
scas
int3
inc
mov
in
movlps
fmulp
movsl
add
cli
movsl
ljmp
pop
out
mov
or
lcall
sti
not
clc
ficompl
lods
push
adc
pop
lret
hlt
add
jmp
inc
or
jae
mov
mov
addr16
or
mov
or
and
lret
call
sbb
dec
daa
loope
sbb
sbb
jbe
add
rsqrtps
jb
out
fcompl
mov
imul
in
sub
sbb
cltd
inc
xor
mov
sub
rcrw
lods
inc
adc
and
mov
div
adc
sti
mov
jp
pop
popa
sbb
movl
out
in
aad
jns
push
nop
std
jmp
push
test
rcll
mov
pusha
in
outsl
cmp
js
jp
fistps
out
adc
dec
test
or
cs
popf
cwtl
scas
dec
movsl
iret
aam
mov
push
in
jle
cmp
out
push
outsl
mov
xor
push
pop
loop
pusha
or
in
pop
or
pop
fwait
inc
jno
sub
test
lods
jecxz
jle
push
xor
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jnp
jp
stos
lods
lods
add
test
mov
mov
mov
ret
leave
lret
lret
lret
int
rcl
shr
rcl
shl
iret
rcl
hlt
into
into
int3
hlt
leave
leave
enter
enter
in
mov
mov
stos
lods
stos
lea
fwait
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
rcl
sar
fcom
std
fcom
xlat
aam
aam
rcl
iret
dec
into
int
aam
rcl
sar
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
sbb
mov
jnp
mov
sar
mov
lret
leave
leave
dec
rcl
aam
xlat
xlat
fcom
call
aam
dec
int3
int3
dec
int
call
aam
dec
int
inc
rol
mov
mov
lods
std
test
test
xchg
xchg
xchg
mov
pop
push
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
push
or
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
into
int3
call
rcl
fcomp
fdivr
fcomp
call
aam
dec
int
dec
leave
lret
dec
int
inc
mov
mov
mov
mov
test
test
mov
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
push
bound
pop
fs
aas
ds
sbb
sbb
sub
push
xor
aaa
aaa
aaa
cmp
adc
pop
pop
pop
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
mov
ret
leave
call
ror
call
aad
aam
call
rcl
dec
leave
leave
inc
ret
ret
ret
mov
mov
ljmp
movsl
movsb
pushf
popf
pushf
xchg
cwtl
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jge
jge
jno
jb
bound
mov
cmp
cmp
inc
inc
inc
mov
outsb
outsl
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
enter
mov
mov
ljmp
movsl
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fwait
fwait
fwait
in
test
push
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
outsb
jo
add
pop
or
jp
nop
fcoms
addl
jmp
outsb
jo
addr16
data16
jne
jg
jg
jns
jns
arpl
fs
inc
inc
cmp
pop
sbb
movups
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
incl
test
xchg
xchg
xchg
mov
mov
xchg
mov
jns
jp
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
mov
addb
decb
xchg
jle
jg
jno
jo
jae
jae
jg
jge
addl
xchg
push
cmp
ss
and
cmp
movsb
movsl
mov
icebp
stos
stos
stos
sti
lods
lods
lods
lods
lods
stos
test
test
movsb
mov
fwait
xchg
xchg
xchg
incl
jg
js
jns
jnp
jp
xchg
xchg
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
lea
mov
push
or
xor
inc
dec
imul
xchg
leave
lcall
out
fwait
lcall
mov
decl
mov
lcall
cmpsl
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
movsb
movsb
addr16
jp
lods
cmpsb
stos
add
adc
scas
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
pushf
sahf
popf
std
mov
mov
xchg
in
nop
xchg
xchg
in
test
push
jne
push
or
inc
or
or
es
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
std
nop
nop
decb
xchg
xchg
lcall
movsl
test
lods
test
scas
pushl
lahf
scas
mov
mov
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
ret
lcall
mov
decl
nop
xchg
decl
xchg
xchg
pushf
pushf
pushf
movsl
movsb
movsb
test
test
negl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
bound
je
mov
jle
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
ja
mov
movsl
mov
mov
lods
lods
mov
movsb
add
mov
add
pop
adc
mov
ljmp
popf
decl
xchg
xchg
call
xchg
xchg
call
xchg
cltd
cltd
lcall
mov
mov
stc
cwtl
lcall
xchg
xchg
les
xchg
fwait
in
xchg
xchg
out
xchg
cmc
xchg
xchg
std
xchg
jae
cltd
addr16
sahf
pop
cmp
dec
jg
lods
inc
jl
mov
jp
mov
jae
mov
outsb
ljmp
adc
stos
or
lods
or
mov
jge
mov
mov
stos
pushf
movsb
mov
movsb
add
pop
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
pushf
lcall
pushf
pushf
lcall
xchg
xchg
call
xchg
nop
call
cltd
cld
cltd
cwtl
popf
stc
sahf
fwait
sahf
stc
lahf
xchg
popf
cld
popf
mov
xchg
insb
mov
xchg
push
jg
xchg
dec
js
fwait
cmp
imul
pop
push
jmp
adc
ljmp
pcmpgtw
lods
adc
scas
adc
mov
push
mov
imul
mov
fwait
scas
mov
lods
lods
scas
movsl
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
lahf
jmp
movsb
jmp
xchg
xchg
decl
mov
decl
jbe
cltd
jo
cltd
bound
call
cs
decl
adc
or
add
pop
lcall
push
pop
jmp
sbb
mov
insl
pushl
sbb
je
mov
and
shlb
mov
xchg
lods
mov
lods
lods
mov
lahf
mov
movsl
add
pop
pop
adc
scas
mov
shll
lcall
mov
jmp
stos
stos
jmp
pushf
pushf
call
pop
jbe
mov
decl
sub
mov
pusha
decl
or
incl
push
incl
add
xchg
add
xchg
add
lcall
jmp
and
mov
jne
mov
sub
sub
sub
jle
leave
xor
dec
inc
mov
mov
cld
scas
mov
lret
movsl
dec
mov
movsl
mov
add
add
add
push
push
adc
cmpsl
lods
ljmp
lahf
jmp
test
ljmp
lods
pushl
lods
lods
jmp
jo
decl
push
push
incl
pop
push
incl
push
incl
add
mov
push
decl
add
xchg
add
cltd
add
lahf
add
movsl
add
scas
adc
mov
aaa
cmp
leave
cmp
int
xchg
sarb
xchg
sarb
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsl
ljmp
lahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
decl
add
pushf
add
mov
add
lods
add
jb
ret
dec
inc
mov
int3
inc
call
inc
call
dec
nop
call
dec
xchg
call
dec
xchg
fmull
fistl
call
xchg
std
mov
mov
movsb
movsb
mov
or
add
add
add
add
dec
inc
adc
jnp
movsb
sahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsl
decl
sbb
nop
sbb
mov
pop
decl
push
decl
push
call
add
mov
add
stos
add
mov
fs
mov
dec
mov
push
xchg
fcoms
ficoml
fcoml
fistps
jmp
push
popf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
mov
add
inc
inc
adc
ja
sahf
fwait
sahf
jmp
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
and
xchg
and
call
call
or
nop
add
add
cltd
add
mov
add
stos
add
mov
data16
mov
xor
fcomps
ficompl
fbld
loopne
mov
jmp
cmpsb
jmp
addr16
jmp
push
stos
faddl
mov
cmpsb
test
lahf
mov
sahf
add
inc
inc
adc
je
fwait
xchg
cwtl
call
sahf
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
outsb
lcall
daa
push
xchg
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
movq
roll
frstor
jmp
jo
jmp
jno
jmp
jno
jmp
jae
in
jne
in
jne
out
je
in
je
jmp
mov
mov
test
lcall
sahf
add
jge
cmp
imul
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsl
lods
lcall
outsb
lcall
cmp
xor
lcall
call
add
mov
add
mov
pushl
add
enter
fistl
jmp
js
ljmp
jmp
mov
push
cmpb
xrelease
push
cmpb
aad
inc
mov
test
daa
sahf
sahf
lahf
add
add
add
pop
add
aaa
cmp
pop
pusha
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
inc
mov
lcall
cmp
inc
jge
movsl
inc
jle
movsb
cmp
lcall
lcall
pop
ljmp
add
mov
gs
mov
add
iret
daa
cmp
movsl
ljmp
out
sar
pop
push
pop
push
nop
ret
xchg
push
xchg
stc
xchg
mov
out
mov
inc
clc
stos
lods
stos
mov
popf
pushf
xor
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
ret
ret
inc
mov
mov
jle
lcall
dec
jg
lods
dec
test
movsb
xor
adc
lcall
jmp
add
mov
arpl
mov
add
leave
add
mov
call
xchg
push
lcall
hlt
lcall
cmc
lcall
cld
sahf
int
cld
lahf
int
cli
cwtl
lret
push
xchg
sar
mov
dec
mov
mov
sahf
lahf
sahf
aas
xchg
popl
lcall
add
cmp
add
sub
outsb
push
dec
dec
jecxz
pusha
decl
mov
mov
mov
mov
inc
enter
mov
lahf
lcall
dec
xchg
lods
dec
xchg
movsb
sub
fwait
push
pop
lcall
add
lods
add
mov
arpl
mov
add
leave
add
rorl
je
loopne
xchg
out
mov
push
movsl
int3
push
movsl
into
stc
test
cli
test
iret
cli
cmpsl
into
stos
sar
stos
sar
std
test
push
sahf
jmp
mov
int
mov
mov
lahf
mov
xchg
add
cltd
fwait
add
add
add
xor
sub
sub
inc
inc
inc
bound
pop
xlat
jae
jo
mov
rol
rol
mov
ret
ret
inc
ret
vpaddd
leave
inc
rol
mov
cmpsl
jmp
push
mov
lods
dec
test
sahf
sbb
lcall
add
stos
add
mov
arpl
mov
add
int3
add
xlat
add
adc
pop
test
cmc
sahf
leave
cld
lods
sar
cld
mov
sti
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
pushl
sar
mull
vaddsubps
int
mov
mov
mov
xchg
xchg
or
add
add
xor
add
push
add
dec
dec
outsl
outsb
outsl
mov
xlat
jmp
fdiv
rcl
sar
lret
int3
into
dec
lret
leave
dec
lret
lret
dec
lret
leave
inc
mov
jmp
push
mov
lods
cmp
jmp
add
mov
fs
mov
add
iret
add
xlat
add
loopne
je
ljmp
cld
lods
aad
cld
mov
mov
fcos
std
mov
cld
mov
xlat
std
rcr
std
mov
lret
jmp
mov
call
lret
mov
mov
xchg
or
add
add
xor
add
pop
pop
pop
or
leave
movl
call
out
loope
loop
fsub
fsubp
fcmovu
xlat
cli
aam
fdivr
int
sar
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
aam
jb
fldl
jbe
in
js
out
xor
cld
mov
loope
std
ret
loope
std
inc
fdivrp
std
loopne
std
enter
fdivrp
std
leave
loopne
std
enter
lret
sti
mov
enter
into
mov
mov
xchg
adc
add
add
std
add
std
incl
incl
hlt
div
or
out
in
pop
jmp
in
sub
in
in
dec
ljmp
xchg
out
jmp
aad
fstp
jmp
mov
xchg
test
ja
movsb
push
jmp
ljmp
add
mov
add
into
add
fadds
je
fiadds
ja
ljmp
cld
mov
in
std
int3
jecxz
dec
in
dec
in
dec
loop
dec
loop
std
int3
loopne
dec
in
std
shl
shl
shl
sti
ret
fdivr
out
mov
inc
ret
cmpsl
test
mov
xchg
cwtl
add
add
add
std
std
add
std
incl
cmc
stc
testl
repnz
icebp
push
out
repnz
pop
out
lock
cmp
out
out
pop
fsubp
loop
les
xchg
sti
mov
add
pop
ljmp
fs
mov
add
roll
jo
flds
jne
in
jnp
jmp
jl
negl
cli
mov
std
shl
dec
in
shl
shr
std
shl
aad
std
fsubr
std
fsubr
std
fucomi
fucomi
std
iret
loopne
repz
in
lret
lret
lret
stos
test
xchg
xchg
xchg
and
cwtl
xchg
add
sti
add
testl
repnz
hlt
or
aam
xor
mov
xchg
negb
add
cmpsl
add
lods
add
mov
add
lret
call
add
faddl
jne
out
jns
out
sbb
clc
je
cld
cld
fldl2e
std
fldl2t
fucomi
fucomi
std
fsubr
std
fucomp
fucomip
fsubrp
jmp
in
std
aam
push
ret
out
fdivr
iret
iret
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
mov
loope
add
mov
xchg
lods
jnp
repnz
and
sahf
add
cmpsl
add
mov
arpl
mov
add
int
outsb
call
add
loopne
je
ljmp
cld
mov
aam
std
fdivp
fsubr
fldpi
std
call
aam
sti
iret
loop
cli
iret
loopne
clc
int
push
lret
fdivrp
cmc
rcl
out
mov
fcos
xlat
sti
mov
mov
lcall
add
add
add
add
enter
rol
scas
mov
jmp
add
mov
mov
add
rolb
jo
add
loopne
jns
ljmp
sti
cwtl
cld
leave
loopne
cli
lret
loop
sti
idivl
aam
repnz
sar
lock
into
call
mov
sar
ljmp
imul
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
int3
int
mov
rol
mov
movsl
loopne
ss
mov
add
mov
gs
mov
add
dec
pop
jno
rorl
je
fistl
js
loope
cmp
dec
xchg
call
scas
lret
mov
out
enter
scas
cli
lock
int
into
iret
shl
xlat
fadd
call
out
test
out
out
popf
jmp
lret
leave
push
lods
lods
stos
adc
test
cmpsb
add
ret
mov
ret
rcrl
lods
aam
dec
cmp
cmpsl
sbb
jno
mov
js
mov
dec
xchg
ret
push
mov
lret
gs
mov
out
mov
mov
enter
lret
rcl
int3
mov
iret
shlb
fcom
jg
jb
loopne
gs
in
out
call
xor
cmc
div
and
lock
fstp
or
mov
into
add
add
add
rolb
mov
les
push
lock
sbbb
xchg
cmpsb
sarb
test
mov
mov
cmpsl
enter
lret
ret
into
lret
iret
into
iret
addr16
rcll
rcl
dec
aad
aad
rcl
aad
aam
fsubs
fcomp
fistpl
fneni(8087
fstl
fsub
jecxz
loope
in
out
jmp
add
cld
cmc
add
std
sti
add
std
add
std
std
add
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
push
ret
inc
ror
xor
int
daa
lret
ror
and
aam
sbb
aam
adc
aam
or
xlat
push
aam
xlat
add
add
add
jecxz
add
in
ljmp
std
incl
mov
mov
add
ret
mov
rol
sub
mov
mov
push
rol
or
leave
movl
int3
lret
aad
add
add
aad
aam
add
fadds
loop
flds
loopne
loop
fiadds
in
out
icebp
lock
incl
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
les
mov
mov
ja
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
enter
iret
jmp
aad
cmc
rcl
aam
ror
iret
cli
int3
lret
int
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
into
into
into
aad
call
xlat
aad
rcl
iret
dec
into
into
dec
int3
lret
mov
mov
cld
stos
stos
stos
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jne
jne
gs
dec
inc
inc
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
aam
aam
lret
lret
int3
inc
rol
pushl
test
lahf
lahf
lahf
cwtl
xchg
xchg
jmp
jo
xchg
pop
pop
pop
dec
add
add
add
add
add
add
jg
addb
jnp
test
jp
imul
movsb
push
push
push
stos
push
push
insl
insb
outsb
push
pop
pop
cmp
cmp
pop
outsl
outsl
jno
mov
mov
mov
mov
mov
mov
mov
ret
mov
mov
mov
cmpsl
cmpsl
test
fwait
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
cltd
cltd
add
pushf
xchg
lcall
addb
jnp
jge
js
jp
jns
jnp
jns
jp
jae
jb
push
push
push
cmp
jne
popf
popf
pushf
mov
lods
scas
repz
scas
scas
sti
scas
lods
lods
std
test
cmpsl
std
sahf
pushf
popf
call
test
call
mov
lods
jmp
lods
lods
leave
movsl
movsl
movsb
cltd
jae
jb
adc
adc
add
add
add
add
insl
outsl
outsb
pop
mov
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
outsb
orl
cwtl
cwtl
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsb
cmpsl
mov
mov
mov
scas
mov
mov
mov
cmpsb
mov
jg
pusha
popa
pop
or
lods
mov
cmpsb
mov
mov
mov
lcall
popf
mov
negl
jg
stos
push
push
push
jo
push
push
outsl
insb
insl
insl
xchg
subb
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
out
scas
stos
insl
stos
stos
test
add
add
add
pusha
or
mov
in
mov
xchg
call
cwtl
xchg
lcall
lcall
fwait
sahf
sahf
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
jg
popf
dec
jp
movsl
inc
jns
scas
xor
jae
scas
push
outsl
ljmp
sbb
mov
lods
mov
mov
scas
jle
movsl
movsb
push
pusha
pusha
popa
or
mov
in
movsl
test
cwtl
xchg
cltd
lcall
mov
mov
decl
orb
xchg
jno
cld
xchg
popa
cmp
dec
jns
nop
cmp
nop
sub
xchg
sbb
maxps
mov
adc
imul
sbb
pushl
sbb
jbe
rcrb
mov
scas
scas
xchg
sahf
lahf
sahf
adc
add
add
pusha
popa
pop
or
mov
stos
mov
mov
ljmp
test
cltd
decl
cmp
mov
decl
adc
or
mov
decl
add
fwait
add
or
and
mov
jge,pn
les
jg
leave
xor
dec
pop
xchg
inc
stos
mov
scas
mov
movsb
cmpsl
test
sbb
add
add
pusha
pusha
pusha
or
movsb
stos
in
mov
cmpsl
ljmp
mov
pushl
xchg
mov
decl
orps
xchg
push
incl
add
add
xchg
add
sahf
add
cmpsb
add
mov
outsb
inc
aaa
cmp
inc
mov
into
inc
mov
roll
call
inc
nop
call
arpl
stc
mov
mov
movsl
movsl
movsl
daa
incl
add
add
pop
pusha
pusha
or
mov
ljmp
mov
mov
mov
ljmp
push
jnp
mov
decl
or
push
call
add
add
lods
add
jne
iret
dec
nop
fstps
fcompl
ficomps
jmp
pop
mov
fildll
lret
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jle
jl
pushf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
subps
xchg
add
lahf
add
test
pusha
ljmp
pop
imul
jmp
outsb
test
call
jo
in
jno
jmp
js
call
cmpsl
mov
shrl
jg
add
add
add
dec
pop
outsb
insl
push
mov
cwtl
ljmp
mov
mov
mov
jbe
lcall
jbe
popf
sub
call
add
movsb
add
stos
add
mov
inc
or
call
inc
xchg
jmp
jp
jmp
test
push
mov
out
mov
mov
cmpsb
cmpsl
push
fwait
lcall
sub
sub
push
push
dec
pop
pushw
mov
mov
mov
mov
mov
xchg
ljmp
sub
cltd
push
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
push
cwtl
push
cwtl
clc
lcall
notb
inc
mov
lods
popa
mov
add
add
xor
add
pop
pop
push
fisttpl
mov
mov
ret
ret
ret
xchg
test
movsl
push
xchg
stos
dec
cmp
and
mov
add
mov
mov
add
and
push
mov
sar
stc
test
cld
test
sar
lods
sar
sti
cmpsl
int
out
dec
rol
test
sahf
pushf
or
add
add
push
dec
dec
aaa
jb
je
test
int3
int
int3
into
int3
cmc
lret
sti
enter
enter
mov
mov
stos
popa
mov
stos
inc
cmp
adc
test
add
ret
dec
add
fiaddl
ljmp
cld
mov
mov
xlat
cld
mov
fdivr
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
or
aad
dec
loop
fsubp
fistps
fcom
out
shll
test
or
scas
add
mov
add
aad
jb
jecxz
jl
repnz
mov
cld
inc
loope
std
loope
std
loopne
std
enter
lret
cld
out
mov
lret
divb
sahf
popf
sbb
add
add
std
add
std
std
add
ljmp
in
in
in
xor
loope
loop
les
mov
mov
add
mov
inc
add
int
outsb
fildl
je
ljmp
cld
ret
sti
iret
out
std
shl
shl
shl
call
call
std
shl
push
fdivr
fcmovne
sar
mov
mov
add
std
std
add
std
add
std
incb
aad
aad
mov
pop
mov
popf
or
ljmp
add
add
rolb
outsl
filds
jbe
out
pop
mov
cli
mov
std
shl
fldpi
fsubr
std
fld1
std
xlat
call
std
fsub
std
aam
push
fdivr
loope
aad
mov
popf
lahf
das
add
add
int3
into
int3
or
fs
lahf
adc
add
mov
add
roll
jno
loope
js
out
das
nop
clc
lcall
stc
leave
loopne
test
aad
icebp
ret
out
ret
aam
out
aad
out
jmp
shl
in
fucomp
mov
test
std
std
add
add
add
aad
push
mov
jae
or
mov
insl
inc
pop
jae
int3
and
aad
xchg
ficoms
clc
jecxz
mov
out
in
lret
mov
leave
fidivrs
iret
mov
jecxz
fcompl
in
jmp
rorb
mov
add
lods
stos
stos
add
xchg
movsl
les
pop
mov
mov
fidivrl
andb
into
mov
les
aam
lret
insl
ror
int
rcl
rorb
cmp
loopne
das
in
fisubs
loop
lock
in
in
or
std
std
add
add
add
std
std
add
mov
scas
mov
lods
data16
mov
mov
mov
shrb
enter
rcl
pop
rol
adc
rcl
or
loopne
or
int3
into
add
std
incl
incl
lcall
shufps
or
int3
int3
int3
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
xchg
enter
mov
ret
sarl
scas
scas
insb
stos
stos
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aam
aam
rcl
sar
into
iret
iret
std
mov
stc
mov
mov
sarl
gs
sbb
add
add
add
add
add
add
add
add
jae
jb
addr16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
aad
dec
iret
iret
inc
enter
mov
lods
jmp
mov
push
add
add
add
add
jne
jae
xchg
aad
outsb
jo
arpl
mov
push
outsl
jb
pusha
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jno
and
add
pop
add
add
jb
jae
popf
xchg
pushf
mov
xchg
clc
xchg
test
addb
push
push
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
adcl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
pushf
cmc
lcall
mov
push
push
imul
jle
mov
xchg
notl
mov
mov
fwait
mov
jno
mov
mov
stos
scas
lods
push
lods
lods
stos
add
add
add
test
test
xchg
xchg
xchg
call
cltd
fwait
call
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
fs
pushf
inc
jne
cmpsl
cmp
sub
mov
jno
mov
insl
pushl
popf
lods
lock
mov
imul
into
add
test
pop
scas
movsl
stos
test
sahf
popf
lahf
jmp
movsb
call
jl
mov
popl
decb
push
call
or
mov
sbb
mov
and
inc
daa
jp
lds
inc
lcall
test
add
add
jne
mov
movsb
test
test
test
mov
scas
ljmp
xchg
decl
or
xchg
push
decl
pop
jmp
adc
ret
dec
ds
rolb
call
inc
call
dec
xchg
dec
cltd
mov
mov
mov
movsl
mov
add
push
xchg
xchg
test
mov
scas
pushl
mov
mov
call
sbb
mov
push
call
add
stos
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsl
call
pushf
mov
mov
mov
cmpsl
cmpsb
cmpsl
pop
add
add
bound
adc
popf
lcall
mov
mov
mov
popf
dec
jle
popf
xor
cwtl
and
call
add
add
mov
xor
jmp
outsb
stos
jmp
ja
in
jnp
out
jge
out
jg
fistpl
mov
and
add
add
adc
addr16
mov
mov
mov
mov
rol
mov
fs
movsl
inc
jle
mov
add
ljmp
add
ret
pop
insl
fisttpl
in
mov
push
xchg
clc
xchg
clc
xchg
enter
mov
cmpsb
sub
aas
inc
aas
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
arpl
ret
add
adc
in
outsb
scas
clc
cmpsl
into
stc
stos
iret
cli
lods
sar
sti
scas
sar
cld
lods
sar
ljmp
fldenv
incb
xor
outsl
outsl
inc
scas
mov
mov
mov
aad
rcl
shr
lret
enter
xchg
jmp
fs
add
aad
jno
out
test
clc
pop
cld
mov
std
rcr
std
ret
inc
lock
ret
cmpsl
test
jg
addl
stos
stos
stos
add
in
jmp
jmp
jmp
in
fcmovu
movsl
and
popa
mov
add
fiadds
jbe
out
aaa
xchg
sti
scas
std
into
out
call
in
std
shl
aam
std
shl
push
leave
fdivr
aam
into
in
lods
scas
scas
popa
jg
jg
std
incb
std
incb
int
shrl
sahf
sbb
lods
add
mov
add
loop
jp
cmc
push
cmpsl
std
loope
cld
aad
cld
in
std
aam
cld
aad
stc
shl
push
fsin
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
push
jae
fstpl
cmp
out
mov
shl
ljmp
jmp
out
aad
call
fcmovu
scas
push
lcall
add
rol
mov
lods
xchg
and
shlb
jbe
mov
fdivrs
lret
adc
int
xlat
int3
rcrb
rcl
dec
in
loopne
call
out
in
sbb
sarb
cmp
movsb
scas
arpl
stos
mov
ret
cs
mov
int
fisttps
into
int3
int3
or
aad
push
std
incb
cmpb
incl
stos
incl
rol
add
incb
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
adc
xchg
adc
fisubl
adc
ror
push
or
lret
test
in
dec
mov
xchg
xchg
int3
cmc
in
adc
ficoms
movsl
mov
xor
fnstsw
sbb
xchg
ret
dec
mov
les
xchg
mov
in
jp
add
call
lea
cmp
or
dec
xor
out
pop
mov
pushf
repnz
testl
jae
jne
jecxz
xchg
std
sub
loope
jmp
adc
frstor
sub
mov
sbb
push
sbb
sub
das
sub
or
shrl
stos
in
sub
sub
leave
mov
add
shr
fbstp
cld
push
bound
inc
adc
adc
mov
test
push
into
mov
std
pop
mov
mov
enter
inc
mov
dec
and
add
clc
or
jns
jmp
pop
xchg
xchg
outsb
aam
xor
mov
das
mov
mov
dec
shll
in
cmp
dec
ljmp
add
or
aam
push
jg
mov
xchg
movsb
int
xor
jmp
pop
mov
jo
xchg
sub
mov
aam
movsl
pop
mov
pop
pop
stos
add
adc
jmp
mov
cmc
jmp
mov
les
xchg
cmp
xchg
lds
fcmovnbe
ljmp
cld
mov
xor
je
sbb
cmp
cltd
fs
pop
xor
out
push
jge
cli
les
xorl
scas
sbb
dec
nop
and
and
dec
or
lahf
es
fcmovnbe
aas
sub
popf
lds
shl
xchg
jnp
lahf
daa
sar
lock
xor
mov
xor
and
mov
jae
cwtl
stos
out
loope
movsl
xor
cli
add
or
jne
cmp
xchg
lods
outsb
xchg
mov
mov
outsb
dec
jge
shl
adc
cmpsl
out
data16
mov
pop
cmp
push
pop
fwait
outsl
dec
mov
sub
bound
and
scas
scas
jg
mov
push
jnp
enter
in
insb
or
cmp
adc
sub
xchg
mov
stc
sub
mov
dec
sbb
repnz
rclb
dec
insb
scas
sub
xchg
stc
pop
ret
sti
ss
jge
outsb
cs
insb
fdivs
xlat
inc
fistpl
scas
mov
xchg
adc
int
adc
cmp
dec
int3
sbb
test
mov
dec
cltd
shl
outsl
imul
enter
dec
pop
loop
inc
mov
jo
pop
sbbb
cld
pop
cli
rolb
mov
rcrb
idivb
mov
cmpsl
jl
ret
jmp
loop
cmp
cltd
imul
cmp
outsb
ljmp
dec
pop
dec
lahf
insl
lret
dec
xchg
rolb
xchg
mov
xor
pop
mov
test
mov
and
cmp
jp
sbb
sbb
test
jle
imulb
cmp
jmp
imul
cmp
lret
ds
adc
sbb
pushf
dec
movsb
xchg
aaa
jbe
repz
int
fbld
sub
jg
in
xor
repnz
mov
inc
sub
adc
nop
mov
xor
adc
jle
mov
add
jle
push
adc
lock
xchg
sub
mov
jae
insl
rcrl
test
jns
pushf
test
das
dec
jo
sbb
mov
imul
add
push
sbb
je
jb
or
and
mov
adc
loop
pop
adc
pusha
sub
adc
fs
mov
jl
add
add
inc
jp
outsb
inc
add
pop
outsb
and
add
mov
hlt
ja
xor
setl
hlt
mov
adc
aam
scas
adc
addl
ljmp
jle
aad
or
scas
push
sarl
push
mov
test
dec
and
mov
scas
lds
xchg
push
pop
mov
jae
sbb
lds
mov
lods
pop
add
dec
mov
test
inc
pop
rorb
dec
push
stc
inc
jecxz
and
xchg
and
and
fldl
loopne
lahf
inc
loopne
sbb
jg
js
jo
mov
mov
sbb
dec
mov
loopne
pop
mov
inc
data16
dec
dec
or
pop
int
dec
push
mov
cli
cmp
jle
loop
push
shll
fdivrl
sbb
mov
pop
push
aad
fsts
xchg
movsb
mov
push
adc
gs
pushf
inc
int
js
negb
mov
sub
sub
xchg
rcll
mov
and
xor
leave
imul
and
cmpsb
or
fsubrl
loop
rcrb
sub
mov
sbb
out
and
das
pop
ja
inc
mov
or
dec
fs
sahf
push
mov
and
lcall
insl
sub
mov
jno
mov
and
fnstcw
sub
shr
cmpsl
mov
imul
cmpsb
fisubrl
push
and
hlt
stos
pop
add
lret
mov
push
mov
shrl
or
int3
int3
dec
pop
sahf
push
out
push
mov
nop
mov
lahf
bound
rcrl
ret
and
cmp
sbb
aaa
mov
mov
lret
mov
adc
cmp
sub
dec
shll
jp
call
adc
fisttps
lea
mov
mov
add
sub
xchg
xchg
test
out
test
call
or
popa
cmp
insl
subb
mov
xchg
cs
push
out
add
daa
jne
pop
inc
loopne
ja
xchg
sub
mov
jmp
mov
and
addr16
cmp
out
pusha
out
sbb
ja
call
adc
mov
js
outsl
cmpsl
mov
ret
lds
cmp
loopne
out
jbe
cs
mov
in
pop
xchg
shlb
inc
fcomps
dec
inc
out
and
dec
add
inc
push
sbb
outsl
sub
or
mov
xchg
and
mov
pop
in
push
lods
loope
loope
cmp
xor
xchg
mov
test
or
cmp
das
cli
es
pop
lock
jg
ja
aad
lret
sub
jmp
dec
jl
pop
sahf
js
shrl
cltd
and
xchg
in
inc
ficompl
ds
clc
outsl
xchg
sub
nop
jg
ret
loopne
in
xor
cmp
insb
aaa
mov
sbb
mov
jo
loopne
repz
fs
or
xchg
add
push
nop
fidivrs
mulb
xorl
mov
popf
arpl
xchg
and
rorb
push
inc
movsb
adc
iret
push
jge
xlat
mov
push
call
pop
lahf
addr16
xchg
lds
mov
pop
ds
cmp
clc
add
xor
aaa
pop
or
cmp
sbb
outsb
sbb
sub
cmp
mov
mov
sub
movsb
clc
sahf
mov
jge
xchg
call
mov
in
push
sub
aas
cmpsl
inc
fstp
pusha
jb
xchg
stc
fs
sub
sbb
scas
inc
cmp
int
mov
mov
and
fdivl
add
mov
leave
push
sub
sbb
ss
clc
fs
sub
sbbb
loope
or
sahf
mov
daa
data16
mov
inc
mov
fcmovne
arpl
cs
sar
jo
mov
loop
adc
movsb
xor
xor
cli
push
sub
sbb
mov
pop
or
inc
mov
mov
push
push
in
inc
mov
mov
test
push
pop
repz
lahf
ss
push
call
nop
setbe
and
je
pop
inc
aaa
into
movsb
dec
in
push
adc
stos
imul
je
data16
insb
adc
push
call
iret
data16
push
out
xchg
mov
nop
shll
cmp
mov
insl
cmp
or
and
push
imul
clc
test
jl
mov
lret
bound
adc
shlb
xchg
data16
ss
mov
in
sub
cmp
add
sbb
xchg
sub
out
jo
mov
mov
push
adc
hlt
pusha
xor
xchg
adc
xchg
insl
test
lahf
sbb
push
in
cmp
fdivrl
mov
lahf
xor
fbld
shlb
fwait
icebp
xor
loop
loop
gs
xchg
jmp
jnp
in
adc
pop
icebp
fwait
mov
movsb
ljmp
or
pop
in
mov
nop
push
sub
inc
data16
adc
mov
es
sbb
cltd
mov
sub
push
pop
xlat
outsb
mov
cwtl
das
mov
jge
push
shr
test
idivb
rclb
testb
stc
aad
jmp
fbstp
or
xchg
sub
je
dec
lahf
ss
pop
mov
adc
dec
fdivl
in
mov
push
lret
pop
icebp
jmp
js
xchg
int3
arpl
cltd
xor
imul
adc
movsb
push
jmp
je
adc
cld
push
enter
clc
out
xchg
ret
lods
inc
add
stos
inc
loopne
outsl
push
call
nop
dec
in
xchg
js
push
pop
mov
jl
dec
jecxz
sbb
lds
mov
rclb
sbbl
xchg
into
gs
push
enter
call
inc
adcl
push
call
xchg
hlt
test
push
sbb
xchg
lods
push
xchg
mov
adc
mov
loopne
rcrb
and
in
add
js
add
or
lea
movsb
cmp
mov
sbb
inc
int3
jne
mull
stc
push
lahf
out
xchg
ja
pop
imul
test
daa
out
xchg
and
sub
jae
repnz
pop
xor
dec
loopne
push
outsb
add
mov
and
mov
imul
popaw
mov
std
or
mov
nop
fiadds
mov
and
or
xchg
push
lods
inc
inc
ds
insb
push
leave
pusha
xor
loopne
inc
pop
lea
mov
jg
xchg
test
mov
mov
push
and
inc
sbb
fs
xlat
outsb
dec
punpckhdq
aas
imul
add
jle
stos
mov
jecxz
pushf
cmp
ret
and
insl
xchg
push
xchg
test
xchg
sub
inc
test
jne
pop
idivb
and
pop
pop
dec
loope
negl
sti
outsb
aaa
into
pop
xchg
mov
sub
arpl
xor
inc
cmpsb
cmp
popf
cmp
stos
into
jl
repnz
and
mov
fisubrs
shrb
pop
fwait
icebp
and
mov
add
inc
ds
loope
or
pop
div
sub
mov
mov
inc
fidivrs
mov
nop
fidivl
cmp
xlat
outsb
addr16
lea
shlb
pop
sbb
test
and
lcall
lods
inc
xor
push
in
and
cli
inc
into
in
sbbl
jo
pop
mov
xor
jnp
add
loope
push
jmp
mov
pop
add
xorb
mov
ss
lret
sbb
decl
adc
pop
rolb
cwtl
outsl
lods
push
lods
fsts
xchg
sub
inc
or
and
inc
cmp
aaa
aad
cmpsb
add
in
lods
leave
pusha
fsubrl
outsb
pop
jb
stos
mov
push
in
jns
arpl
add
or
dec
and
rcll
mov
xor
sarl
dec
testl
dec
mov
popa
outsl
lret
xorb
cwtl
adc
loop
data16
push
sbb
test
cmp
mov
iret
imul
fucom
jo
aam
jg
lods
cmc
adcb
inc
sbbl
jp
imul
fwait
and
xor
sahf
cmc
mov
xor
mov
mov
lret
aam
mov
es
lods
clc
pop
sahf
jmp
or
ret
sub
push
pushf
inc
xlat
or
das
push
jmp
int3
pop
cmc
cmpps
icebp
aad
jle
lahf
ds
call
lods
inc
stos
sti
or
mov
cmp
addr16
adc
sbb
mov
les
ja
fcoms
test
mov
fnsave
repnz
xchg
sbbb
adc
xorl
stos
movsb
inc
fcoml
ss
add
cmp
icebp
mov
fmull
int
jmp
mul
sarl
test
mov
mov
add
xlat
outsb
lea
icebp
mov
mov
sub
daa
mov
cmp
jne
pop
repnz
out
push
jo
push
call
fs
hlt
mov
rclb
jne
xchg
test
dec
sbb
lahf
arpl
or
cmp
xchg
sub
lret
add
shlb
cmc
mov
insb
sbb
jge
ret
adc
pop
test
pop
jno
mov
or
bound
xchg
sub
inc
lock
sub
push
push
xchg
or
xchg
imul
or
jp
dec
mov
push
pop
icebp
mov
cmp
fdivl
push
jne
inc
sbb
dec
push
test
loope
test
pop
lock
fs
lcall
mov
inc
and
inc
push
call
pop
pop
jl
dec
lods
pop
lock
ret
pop
pop
test
sarb
adc
add
inc
fisubs
xor
rorl
fisubrl
sti
aam
and
stos
inc
cmp
jp
or
mov
je
arpl
mov
divb
push
lea
or
dec
test
enter
stos
inc
outsl
push
out
inc
lock
ja
insl
add
cwtl
into
gs
jae
shrl
test
mov
mov
and
pop
movsl
lret
xlat
inc
jecxz
push
clc
shrl
ja
cmp
lret
shl
push
in
shl
data16
in
inc
fsubr
push
sub
xchg
or
rorb
mov
cmp
mov
ror
arpl
out
repnz
in
adc
jge
es
sbb
ds
fistpl
mov
dec
loop
and
inc
fstl
mov
add
mov
mov
jbe
loope
xor
jl
aad
shr
pushf
xor
or
ret
sahf
push
in
mov
js
cmp
pop
aaa
aaa
pop
fnstenv
fs
out
push
shl
cmpsl
pushf
mov
pop
icebp
and
adc
add
aas
push
cwtl
pushf
xor
jbe
fisubs
leave
popa
clc
cli
ds
gs
xchg
jp
mov
lret
cmp
dec
or
repnz
pop
mov
inc
insb
test
arpl
mov
dec
mov
cmp
sbb
mov
sbb
loop
cmp
cmp
or
movaps
mov
shll
in
and
pushf
push
mov
rclb
jo
fbld
ret
shlb
out
inc
xor
pusha
out
pop
scas
mov
fstl
push
aaa
dec
loopne
das
push
out
movsb
pop
mov
pushf
outsb
add
daa
lock
sub
aas
ja
and
push
dec
sti
add
stos
xchg
aas
add
or
cmp
fwait
and
dec
es
sbb
push
jl
lock
push
popa
or
jl
mov
mov
jno
fsubs
insl
outsb
mov
mov
mov
mov
ja
inc
cli
je
sbb
call
jb
pusha
aaa
jmp
imul
xchg
inc
in
je
fnstenv
test
fidivrl
sub
sub
mov
cmc
popa
jl
xchg
push
mov
sbb
aaa
inc
jb
rep
jmp
out
roll
mov
dec
mov
nop
cmp
cmpsb
xor
fstpl
or
test
jl
pushf
push
mov
dec
ret
subl
xlat
pushf
jnp
leave
dec
sbb
cltd
dec
lds
push
jmp
or
das
mov
sbb
push
mov
adc
lcall
push
mov
sti
hlt
xor
pop
lret
in
cwtl
mov
xor
in
out
push
add
sti
imul
icebp
mov
mov
add
lcall
xor
dec
pop
push
xor
jo
stos
inc
mov
push
cwtl
push
stc
mov
add
jp
jge
sti
xchg
xchg
adc
stos
cmpl
out
mov
xchg
test
lods
imul
mov
inc
iret
push
cwtl
sbbb
aaa
push
in
cmpsl
or
jbe
cmpsl
push
mov
jle
push
jno
sbbl
xchg
lea
jle
xchg
dec
dec
aam
imul
insl
mov
jp
jle
jns
push
jg
les
addr16
arpl
repz
data16
in
je
dec
push
test
imul
outsl
pop
pop
pop
nop
mov
ss
dec
mov
popf
xor
dec
push
push
dec
fbld
ret
pop
cmp
mov
flds
test
imull
mov
fisttpll
mov
ljmp
and
lahf
ds
aad
sti
pop
ja
mov
ret
and
aam
repnz
repz
mov
pop
adc
cltd
cwtl
xor
sar
scas
xchg
loope,pn
pop
icebp
cmpsl
add
jns
enter
push
push
mov
inc
scas
jae
and
sbb
jle
shrl
scas
inc
leave
aaa
jl
test
insb
add
aam
ficompl
clc
mov
loope
xor
aad
sbb
repz
inc
mov
out
jle
fadds
xchg
sub
pop
repnz
cmp
rcl
bnd
hlt
clc
fidivs
adc
loop
add
daa
jecxz
dec
dec
push
popf
arpl
pusha
pushf
test
cmc
and
inc
fstpl
scas
inc
ss
ss
testl
outsl
and
jnp
call
stos
out
push
xchg
sub
or
stos
inc
mov
shrb
push
pop
repz
ljmp
inc
sti
shrb
stos
hlt
mov
jle
cmp
xchg
cs
adc
xor
dec
arpl
fsubrs
leave
jae
mov
test
or
subl
repz
adc
mov
mov
or
jmp
push
in
ss
jbe
pop
decb
push
data16
sbbl
adc
mov
ss
sbb
scas
mov
pop
cmc
in
adc
cmpsb
out
sub
jb
movsl
fs
loop
xor
push
mov
mov
sbb
xor
outsb
cltd
xor
mov
jle
insl
adc
lock
imul
adc
jbe
fistpl
or
xchg
cli
and
mov
int3
arpl
enter
pop
ljmp
das
inc
fcomps
mov
jle
pop
dec
loop
loopne
xor
sub
mov
mov
clc
push
lea
stos
add
and
push
imul
sbb
sbbl
jp
sub
push
jmp
inc
pop
xor
dec
and
adc
je
push
movsl
mov
adc
sub
ljmp
rol
outsb
cwtl
fcmovne
sbb
sarb
pop
xchg
shlb
test
mov
outsl
pop
ret
test
loope
mov
cmp
loop
mov
rcll
adc
ss
xchg
leave
xchg
sub
mov
in
mov
enter
xchg
jmp
in
test
sarl
test
lds
inc
cmpsl
mov
add
cmp
sub
cmp
push
xchg
mov
sub
xor
loop
mov
aas
add
shll
inc
inc
push
sub
push
arpl
fldcw
lret
rclb
and
iret
nop
pop
sbb
add
and
jg
pop
mov
in
orl
push
dec
insl
xchg
sub
xor
in
xor
jge
xchg
xor
call
and
jge
lods
inc
lcall
test
ja
ljmp
int3
cmp
ja
in
call
or
outsb
add
js
mov
shrb
dec
pop
lock
cmp
xchg
imul
loop
mov
mov
mov
mov
push
data16
addr16
std
orb
icebp
repnz
gs
jo
jns
lods
xchg
push
lods
sbb
add
mov
jle
popf
stos
adc
fstpt
stc
mov
fcoml
test
jno
pop
mov
les
repnz
repz
hlt
js
in
adc
insb
add
imul
mov
xchg
sub
jo
dec
jl
and
push
popf
mov
roll
inc
or
push
xchg
cmp
mov
mov
mov
jl
pop
xor
arpl
mov
leave
sub
les
mov
xchg
dec
das
js
jge
add
sbb
or
pop
in
test
mov
or
mov
scas
inc
mov
pop
fdivrs
inc
dec
stc
mov
push
xchg
sub
ds
mov
cwtl
jecxz
lds
jnp
sbb
xchg
out
xchg
into
gs
pop
js
fs
sub
cmc
mov
in
test
or
jb
jno
shlb
push
jl
xchg
sub
or
jl
sub
rcrl
inc
fcompl
mov
data16
xchg
or
ss
cli
in
inc
fistl
add
dec
loop
xorl
test
mov
inc
fimuls
or
cmp
lea
and
popa
add
dec
out
std
aaa
fidivrs
loopne
jecxz
movsb
xor
fbstp
jo
push
popa
cli
and
dec
sbbb
fnstenv
shlb
add
cmp
pop
sbb
aad
mov
shlb
sahf
or
adc
aaa
into
rcr
xchg
int3
xchg
sub
cmp
aas
xchg
and
mov
repz
mov
jg
data16
mov
sub
fwait
xor
mov
sbbb
mov
mov
test
fs
xchg
cli
xchg
cli
xor
dec
loop
int
stos
daa
test
fadd
dec
pop
scas
push
in
mov
jb
movsl
popa
leave
lea
and
out
xchg
push
xchg
cs
dec
ljmp
pop
pop
lock
mov
pop
mov
jmp
cmp
jl
inc
fnstcw
and
cs
arpl
jne
xor
adcb
loope
jmp
je
es
xchg
sub
jne
xchg
addr16
and
adc
push
jns
les
lcall
sub
jb
shll
adc
stos
cmpb
outsl
call
add
movsl
or
scas
push
fwait
xor
xchg
push
in
add
popa
das
xchg
movsl
lret
es
stc
adc
inc
sahf
mov
mov
add
mov
cli
lret
cwtl
add
pop
jmp
mov
jb
sub
jnp
testb
jge
insl
js
push
jg
xchg
adcb
test
cmc
cld
pusha
into
and
fisubrs
js
pop
scas
pushf
aam
in
repz
movsb
cs
and
xchg
xor
add
insl
in
lahf
adc
sbb
dec
fistps
add
in
jg
mov
movsl
sub
mov
int3
arpl
dec
ljmp
xor
lahf
je
sbb
ret
dec
ds
out
in
dec
in
sti
ss
mov
int3
and
movsb
out
pop
cld
lahf
dec
mov
repz
pop
mov
icebp
and
jne
js
loopne
cmp
outsb
add
mov
out
inc
mov
xor
push
ror
unpcklps
into
sub
shll
inc
dec
adc
pop
outsl
test
cld
sbbb
cmp
jns
lret
inc
ja
mov
pop
in
loopne
jle
push
mov
pop
cmp
fs
pop
shrl
sbb
cmpb
cmp
outsb
sub
cmp
fidivs
outsb
and
dec
push
cmp
gs
adc
and
stos
inc
in
xor
out
or
sbb
pop
jnp
nop
ja
inc
lahf
xchg
mov
jo
nop
push
outsb
add
or
lret
lea
sbb
sub
xchg
and
adc
popf
inc
fcmovne
or
cmp
lret
and
icebp
adc
std
movsl
mov
xor
fidivs
icebp
push
leave
icebp
mov
movsl
fprem1
shrl
scas
inc
mov
adc
pop
fdivl
push
stos
insb
lods
sbb
in
gs
fwait
xor
push
test
dec
and
mov
ret
dec
in
sbbl
into
push
inc
mov
repz
adc
mov
lcall
mov
cmp
or
sbb
jns
dec
stc
sub
adc
xor
das
xlat
or
popf
jl
movb
out
xor
out
imul
in
jg
in
and
xor
cld
mov
jecxz
mov
pop
cmpsb
cmp
pop
mov
outsl
xlat
inc
inc
ficomps
xchg
sub
jg
lret
lcall
xor
xor
adc
cmpsl
std
xor
sub
inc
fsubp
cmp
inc
scas
jecxz
je
fisttpl
mov
arpl
dec
addb
push
fimuls
addr16
sbbl
xor
leave
cwtl
lahf
ss
aas
fwait
xor
mov
mov
ja
mov
cmpsb
imul
mov
out
fisttps
lret
jl
xchg
scas
in
push
lods
leave
in
dec
sahf
mov
std
ja
mov
cmc
popa
pushf
int3
iret
and
mov
pop
mov
inc
pop
push
aam
inc
or
loop
jle
aas
out
jg
icebp
imul
or
inc
pop
shrb
cmc
dec
push
or
mov
fs
push
lods
shrl
je
lods
dec
xor
loope
scas
xchg
sub
popa
adc
xchg
push
mov
xchg
adc
sbb
mov
fwait
and
mov
lret
into
push
out
mov
ret
dec
loop
mov
cltd
add
es
daa
fstps
mov
jbe
and
push
movsl
cmp
pop
ss
into
mov
mov
sub
add
cli
xor
loope
lods
in
out
pop
out
dec
pop
int3
lods
mov
adc
das
mov
and
mov
pop
test
jnp
inc
jecxz
sbbb
push
or
xchg
shll
sub
dec
out
cmp
sbb
jle
lret
sbb
out
xorb
out
movsb
cmp
ds
push
sub
imul
in
mov
push
popl
mull
cmpsl
and
mov
inc
xchg
cmp
dec
aad
xor
andb
imulb
dec
std
mov
lds
jne
xchg
push
sbb
xor
lods
jb
pop
cmc
and
scas
add
jg
push
inc
std
adc
mov
fwait
orb
lret
bound
cmc
lahf
fistpl
adc
jecxz
mov
xlat
add
ds
xor
cmp
sbb
out
mov
or
mov
icebp
push
sbbb
adc
aad
push
js
inc
ds
rcrl
sub
dec
mov
push
inc
fldt
sub
xchg
adc
sahf
addl
pushf
xor
call
cmp
fcmovb
test
push
lea
sbb
aas
xchg
loopne
dec
or
jp
xor
mov
gs
and
int3
outsb
daa
mov
lods
lds
sub
scas
or
flds
out
push
jnp
imul
mov
push
mov
add
shl
test
test
inc
inc
sbb
dec
int
cmp
das
dec
inc
fidivrl
jo
sbb
into
out
les
lods
add
out
les
fidivs
repz
push
std
mov
shrb
pop
and
sub
jmp
inc
fstpl
or
add
cmp
adc
cwtl
stc
mov
shl
sbb
shlb
mov
das
or
hlt
add
push
xor
xor
jns
mov
add
lret
stc
nop
int
fdiv
sbb
xchg
cs
leave
enter
mov
jno
jle
mov
out
jae
test
loope
adc
pop
mov
fisttps
xor
inc
xchg
rol
lret
xchg
loopne
xchg
int
subb
movsb
mov
dec
pushf
mov
data16
jp
xor
imul
lcall
or
adc
pop
mov
in
lods
pusha
stos
cmc
mov
xorl
or
es
push
ja
adc
js
lahf
cmp
pop
mov
sarb
lods
loope
enter
pusha
mov
xor
mov
jle
jno
jno
ficoms
pushf
pop
subb
cmpsb
int
mov
fdivp
pop
movsb
jnp
imul
roll
fnstcw
mov
pop
or
cmpsl
cmp
arpl
mov
inc
rol
aam
enter
push
mov
imul
js
gs
sub
test
int
mov
outsb
xchg
adc
jbe
jnp
xchg
cmp
insl
jo
jb
mov
in
scas
sub
or
aas
call
cmp
add
popw
pop
mov
xchg
test
xchg
stc
nop
xchg
cld
mov
test
das
sarl
jo
dec
pop
pop
icebp
xchg
push
adc
adc
mov
cmp
negl
rorb
inc
data16
adc
jge
scas
cmp
inc
outsb
shl
stos
push
mov
jecxz
addr16
push
movsb
lock
mov
out
cmp
add
iret
bound
mov
pop
imul
ja
sti
bound
int3
in
sti
and
out
fmull
adc
shrb
outsl
divb
repz
or
xchg
gs
mov
add
stos
das
jmp
lahf
icebp
stc
dec
mov
rcrl
lret
cmpsl
in
lods
and
xchg
loop
in
sub
dec
pusha
cmp
jbe
js
mov
xor
sti
push
cmp
jns
out
insb
ss
adc
cmp
mov
jmp
push
pop
ficoms
inc
pop
fwait
arpl
arpl
jb
cmp
jecxz
cmp
inc
inc
or
pushf
cwtl
daa
mov
mov
push
repnz
ja
fldt
shrb
adc
cmp
cld
adcl
mov
mov
lods
filds
popa
inc
ficoms
pushf
push
mov
ljmp
mov
or
adc
mov
call
jb
ljmp
int
test
out
xchg
jne
inc
into
mov
mov
cmp
jmp
mov
xchg
jns
add
pop
adc
jns
mov
in
xchg
ss
jecxz
sar
lahf
ss
jmp
sbb
lds
mov
pop
test
nop
idiv
inc
sbb
hlt
xlat
int3
pop
mov
jns
sbb
into
cltd
push
dec
xchg
out
dec
cmpsl
jg,pt
sbb
inc
cmpl
imul
jbe
sbb
push
lods
fwait
lock
sub
stos
mov
in
or
movsl
mov
dec
fists
shrl
leave
cmp
xor
or
mov
das
fstpl
push
push
inc
repnz
popf
pop
jns
mov
ret
adc
orb
mov
insl
and
push
dec
pop
sarl
iret
movsl
pop
adc
sbb
fbld
inc
addb
mov
dec
loope
out
cltd
sbb
push
add
jmp
fwait
mov
mov
mov
testb
movsl
sti
mov
sub
in
test
mov
mov
fwait
test
out
cmp
ds
pushw
out
mov
mov
es
outsl
push
out
sub
cmp
std
mov
rorl
popf
xor
pop
adc
popa
xchg
push
and
mov
dec
mov
mov
scas
xchg
callw
sti
loope
in
lea
adc
or
cmpsl
mov
mov
lret
mov
jg
rcrb
adc
sub
pop
fcompl
cmc
push
int3
ds
notb
cltd
popa
out
subb
sti
xchg
nop
mov
push
push
outsl
mov
xchg
cltd
mov
fidivs
cli
mov
stc
in
fisubrs
dec
mov
lcall
dec
popf
push
pop
sbb
mov
jns
sbb
jmp
jo
sar
dec
out
hlt
sbb
fs
cmc
push
xchg
jo
cmc
arpl
dec
mov
push
xor
js
jo
repnz
inc
movsb
inc
cld
gs
enter
push
out
lret
push
ds
out
pushf
sub
dec
les
and
push
std
sub
mov
xor
and
lret
xchg
dec
loop
in
inc
mov
das
mov
dec
mov
add
mov
jo
add
mov
mov
insl
add
fcom
scas
dec
popf
pop
out
into
jo
lahf
mov
pop
int3
sub
ja
cld
dec
push
add
ret
fimull
js
insb
cmp
ret
fldcw
fcompl
cmpsl
push
add
loopne
inc
adc
jp
outsl
mov
jle
dec
cmpsb
jle
pop
scas
push
subl
sahf
lock
psubd
push
and
cmp
xor
xchg
mov
xor
mov
dec
out
scas
xor
or
sub
jmp
leave
cmp
fdivs
out
iret
inc
into
loopne
adc
jmp
scas
fistpll
mov
fidivs
aam
cwtl
xchg
imul
pushf
inc
sahf
mov
push
rorl
dec
inc
and
add
jecxz
cmp
data16
jmp
jp
insb
dec
push
jno
add
cwtl
mov
inc
cltd
sbb
mov
sub
lea
sbb
mov
outsb
rcrl
and
xchg
leave
mov
rorb
fcoms
in
pop
in
int
dec
mov
popf
xlat
inc
xor
ret
into
stos
call
cwtl
or
push
int
pop
inc
adc
iret
les
insl
pop
pop
jg
int
mov
orb
and
fisttpll
pushf
stos
sbb
rcrl
or
xchg
xor
cmp
pop
in
add
sahf
jns
shlb
xchg
insb
mov
xor
dec
ljmp
pushl
movsb
sbb
fcompl
pop
jle
movsb
xchg
sbb
push
fimull
jecxz
out
and
fwait
and
pop
mov
out
int3
xchg
aad
mov
call
gs
rorl
fidivs
xchg
dec
xlat
shl
imul
inc
cli
jge
ds
sub
mov
xchg
fisubl
out
mov
sbb
bound
push
push
jnp
andb
adc
mov
daa
adc
xchg
mov
aas
pop
dec
push
lock
inc
xor
andb
orb
adc
les
int
cmp
scas
inc
push
shrl
push
mov
sub
mov
xor
xchg
movsb
stos
cmpsl
or
add
sub
fcoml
mov
mov
loop
mov
imul
test
stc
jle
jbe
lds
loop
incl
rcrl
adc
pushf
sub
cmc
das
loopne
shll
pop
fdivl
out
enter
sub
dec
rcr
or
adc
cmpb
jo
in
mov
mov
test
les
icebp
mov
test
and
adc
xchg
dec
popa
outsl
xchg
sub
cmp
sub
roll
xchg
enter
cmp
cmp
jnp
xchg
mov
dec
pushf
pushf
jnp
dec
aas
jmp
inc
dec
cmp
push
js
cmp
push
nop
or
jb
adc
cwtl
das
cmp
push
xor
fidivl
dec
das
and
inc
test
fstpl
jmp
mov
mov
mov
push
push
in
sahf
insl
int
push
jge
dec
push
adc
inc
js
sub
movsb
ret
mov
sar
mov
lods
xor
add
lds
fs
jmp
mov
dec
jecxz
xchg
nop
and
sbb
inc
out
lds
xor
cld
outsb
push
jp
or
mov
dec
push
adc
mov
call
and
mov
push
test
andl
idivb
jns
mov
jo
mov
sbb
sar
xlat
cs
nop
and
push
imul
push
xchg
arpl
xchg
adc
sub
cmp
adc
add
add
lods
mov
jle
cmpsb
mov
lock
nop
lods
mov
mov
ljmp
mov
ficoms
mov
ret
and
xchg
ja
scas
dec
popa
jle
push
nop
aad
mov
pop
in
pop
test
fsub
ja
loop
sti
sub
clc
gs
addb
add
sbb
dec
jg
gs
inc
mov
lahf
xchg
imul
insl
fiaddl
aam
repnz
lods
inc
aaa
into
je
sub
mov
inc
lock
add
and
repz
pop
pop
mov
cwtl
pusha
pusha
andl
xor
ret
xor
inc
aaa
sti
push
mov
or
pop
repz
sbb
in
call
xchg
dec
cld
jg
inc
sbb
pop
fnsave
pop
inc
fs
pop
pop
je
or
sti
addb
loop
sti
jns
fdivrs
pop
lahf
fs
jecxz
out
outsb
insb
dec
jecxz
sub
adc
jp
dec
test
cmp
xlat
and
cmp
lods
jmp
shrl
je
or
sbb
xor
jo
das
inc
jb
pusha
sbb
mov
pop
jae
push
into
or
test
push
leave
inc
ds
ljmp
xor
mov
sahf
mov
xchg
out
dec
mov
adc
cmc
lcall
add
push
bound
or
pusha
and
out
xchg
arpl
dec
mov
lcall
dec
lea
ja
lret
shrl
sub
cmp
pop
xchg
ret
dec
jns
rcr
add
push
dec
aas
push
or
mov
lods
es
loope
sbb
negl
fwait
xor
jle,pt
mov
sbb
xor
scas
pop
sub
push
jae
jmp
mov
fwait
xor
jle
int3
icebp
insb
mov
xchg
leave
mov
lahf
leave
sarl
in
dec
scas
repnz
scas
repz
stos
and
cmc
dec
insb
loop
fidivrs
mov
mov
or
notl
inc
test
cmp
cmc
cmpsl
mov
popf
mov
xchg
adc
cmp
and
jmp
sub
mov
mov
mov
popf
mov
xchg
cmp
mov
stos
inc
mov
cmp
mov
test
test
sub
sub
stos
fmuls
add
sbb
ds
add
lcall
insl
add
xor
sbb
sarb
add
iret
xor
jmp
dec
sbb
xchg
dec
push
divl
push
sahf
cltd
inc
jg
jnp
inc
jmp
cmp
sbbb
pop
arpl
leave
outsl
push
jno
or
pop
aaa
cltd
sbb
ss
jno
loop
imul
popa
xor
add
sub
sbb
inc
jo
ret
movsl
xlat
mov
jb
pop
lret
add
mov
jo
inc
xchg
cmp
sbb
sbb
add
pop
pmaxsw
out
mov
mov
cmp
lods
daa
loopne
scas
fsubrl
scas
shrl
lahf
add
mov
popf
adc
bound
sub
mov
mov
cmp
fistps
in
fcmovnbe
sub
sbb
ja
lcall
pushf
xchg
negl
lods
stos
icebp
mov
xchg
push
xchg
movsl
mov
cli
pop
cmp
sub
mov
test
and
daa
mov
paddusb
jmp
add
mov
xchg
cltd
lret
sub
fidivrs
sahf
in
mov
and
imul
js
mov
mov
fs
mov
ret
pop
or
xchg
push
sub
ficompl
sbb
xor
jge
mov
out
add
and
and
jp
dec
rclb
scas
mov
outsb
pop
mov
icebp
ret
notl
push
daa
stos
cli
push
rcrl
inc
imulb
cmpsl
mov
into
pop
lea
jb
fsubrl
xchg
ret
loop
inc
lock
imul
or
test
add
pop
sbb
mul
mov
arpl
fidivl
jnp
roll
push
call
and
add
mov
sub
stos
jb
cs
dec
out
pop
xor
push
sbb
mov
and
std
jb
dec
jecxz
xchg
pop
cmc
or
fdivl
nop
sbb
outsb
mov
jmp
xchg
xorl
xchg
test
cmp
add
push
ss
jne
sti
add
adc
call
in
cmp
push
popf
and
ret
and
jae
dec
loopne
xchg
inc
fld
add
xor
pusha
notl
push
xchg
push
movsb
cmp
mov
sub
dec
loopne
xorl
xchg
sbb
sbb
push
shrb
or
cli
xor
cs
int
mov
fisubrs
add
xlat
sbb
loope
in
adc
mov
fldenv
inc
adc
js
es
push
cmpsl
jle
jnp
daa
les
and
adc
lock
out
mov
inc
mov
push
lods
aam
lcall
outsl
push
push
outsb
fwait
pop
push
and
mov
daa
add
jae
and
mov
leave
aaa
mov
popa
cmp
sbb
add
pop
and
fstp
leave
addr16
movsl
mov
or
arpl
aas
cmpsb
dec
mov
adc
je
leave
mov
rcll
jns
mov
into
out
mov
jo
fcomps
jmp
xor
adc
rclb
mov
sbbl
cmp
xor
stos
aaa
adc
push
sti
pop
incl
xor
and
adc
inc
out
mov
push
lcall
mov
add
divl
imul
pop
adc
outsl
cmpl
mov
and
pop
rcll
divb
fwait
cmp
in
ja
out
rclb
sbbl
mulps
ljmp
aam
fwait
push
jno
bswap
loopne
and
and
push
xor
lahf
leave
pusha
shr
pop
xor
mov
add
pop
mov
les
inc
inc
fdivrl
add
pop
push
daa
push
jno
pop
sub
cmp
in
and
scas
mov
mov
fs
lods
inc
pop
ficomps
mov
xor
out
cmp
pop
dec
into
mull
jbe
popf
and
sbbb
outsl
xlat
dec
mov
fdivrl
stos
outsb
push
mov
jp
insl
adc
sahf
mov
nop
fimull
xor
cmp
outsl
fucompp
std
or
es
clc
xchg
pop
into
xlat
jp
outsl
lahf
sub
dec
cmp
lock
mov
adc
stos
cmp
dec
cmpsb
sbb
xor
int
sbb
sahf
lods
fldt
clc
jo
jmp
lods
push
scas
mov
jl
jge
pop
pop
insl
filds
fdivr
stos
shrb
sub
fimuls
push
aaa
lds
popa
cld
popf
outsl
out
pop
mov
xchg
jo
int3
push
and
cwtl
pusha
adc
in
test
mov
adc
aas
or
lcall
cmc
cmp
ja
inc
es
das
push
cmpsl
push
out
pop
add
push
repz
dec
lret
mov
and
push
cmpsl
sbb
mov
fst
pop
push
fildl
xchg
adc
inc
mov
js
movsb
push
jmp
sahf
xorl
mov
ds
aad
push
mov
pop
push
hlt
pop
lea
lcall
xchg
sbb
insl
mov
cmp
sti
hlt
sbbb
jo
lea
loopne
fiadds
cltd
iret
js
push
mov
jg
daa
inc
push
mov
mov
jg
mov
xchg
sub
jno
lock
dec
xchg
cld
outsl
out
sti
jbe
mov
gs
aaa
cld
xchg
imul
repz
lret
adc
mov
and
fildll
xchg
inc
and
clc
pop
jb
adc
cs
inc
cmp
in
iret
add
push
mov
mov
bound
not
movsl
mov
jl
push
loopne
cli
add
sub
cwtl
and
pop
lcall
or
adc
cmp
sar
sahf
dec
jecxz
into
enter
clc
pop
jl
in
xchg
jecxz
inc
ret
jle
mov
mov
jbe
insb
xchg
clc
and
push
xor
outsb
cmpsl
add
cli
mov
pop
jecxz
js
xchg
mov
mov
mov
sub
popf
xor
mov
fs
dec
out
stc
mov
cmp
cmp
lea
lret
mov
loop
mov
pop
jae
cmpsl
adc
fdivrs
stos
xor
pop
push
jo
filds
and
ret
mov
cltd
xchg
xchg
cmc
inc
pop
addr16
xchg
mov
xor
loope
fidivs
sbb
movsl
repnz
daa
push
or
aas
mov
aaa
push
cmpsl
push
pop
fnstenv
cmp
ret
pop
jns
and
mov
sub
clc
fs
sub
test
and
xchg
xor
jle
mov
fidivrs
int3
test
neg
out
cmp
icebp
mov
imul
lods
sub
int3
xchg
dec
mov
push
or
inc
xor
cmp
jecxz
pop
and
lret
jbe
mov
mov
jmp
xchg
cmc
in
inc
mov
lods
js
mov
jecxz
sbb
mov
push
mov
sahf
mov
scas
loopne
cmpsl
shl
mov
and
adc
call
dec
fstl
xchg
dec
adc
aaa
sahf
mov
mov
dec
cmc
outsl
loop
loop
cld
test
andb
cmp
test
in
in
int
mov
out
push
out
dec
mov
lcall
ds
movsb
add
das
inc
mov
aam
push
or
xor
repnz
cmpsb
fxch
das
xchg
inc
fadd
fcomps
sub
jnp
in
and
or
test
sahf
sub
xor
pushf
imul
push
mov
rcrl
add
lods
in
jbe
jp
nop
lcall
into
add
lods
sub
jo
lods
test
imul
push
dec
lahf
xor
xchg
mov
lock
fnstenv
rclb
dec
stos
mov
loope
repnz
test
inc
test
cmp
bound
stos
xchg
cmp
jno,pn
xor
mov
jne
push
sub
inc
aad
xchg
mov
jle
addr16
sbb
or
push
andl
outsb
push
stc
and
xchg
cmp
das
mov
push
xlat
push
out
or
lds
ljmp
fwait
push
mov
mov
mov
jne
add
popf
xchg
enter
lcall
mov
jmp
fmuls
jle
jge
xchg
push
mov
ja
movsb
cli
lret
fldcw
inc
fs
mov
mov
push
jle
push
testb
cltd
xor
movsl
inc
add
mov
clc
cmp
test
inc
adc
pop
pop
add
lea
xor
ja
inc
test
adcl
add
fdivl
aam
xlat
mov
rorb
pop
ds
dec
je
shr
pusha
loopne
mov
rorl
pusha
push
aad
test
jo
xchg
loope
das
in
cs
leave
sub
jae
sub
ret
fstl
mov
jnp
or
andb
js
jo
mov
stos
push
pusha
jbe
mov
dec
xchg
out
leave
std
pop
jbe
arpl
inc
push
fwait
and
int
int
scas
cld
gs
sub
out
mov
fwait
jns
lret
out
add
push
sub
test
or
and
repz
jl
pop
cmp
sahf
into
and
jle
lods
pop
push
push
ret
jle
cli
xchg
dec
lock
cmc
adc
xor
jbe
push
xlat
test
jle
adc
shrb
or
out
xor
stc
mov
cmp
leave
push
xchg
pop
stos
pop
stc
bound
cmp
inc
cltd
mov
inc
stc
sub
dec
subb
testl
cwtl
shlb
dec
int3
push
out
sti
jb
xchg
mov
ja
push
xchg
mov
sbb
fildl
insl
jge
pop
push
dec
jle
cmp
jmp
ret
xchg
pop
inc
js
and
enter
pop
ja
lods
push
cltd
in
cwtl
mov
mov
xchg
push
insl
push
dec
cmp
xorb
xchg
mov
out
fnsave
daa
jmp
xor
movsb
aaa
sbb
aad
jno
and
cmpsb
sub
adc
mov
cli
jp
dec
xchg
fimuls
mov
ret
nop
inc
sbb
lods
loopne
sti
xchg
aad
xor
dec
xchg
sahf
push
jmp
adc
jmp
xchg
or
cmpsl
pop
neg
cwtl
add
sbb
jns
sti
lcall
push
data16
mov
test
cmp
insb
rcrl
stos
xchg
fwait
cmp
xchg
hlt
pop
jns
shr
stc
push
or
testl
aad
pop
fstl
xchg
scas
dec
rep
insl
jb
out
pop
push
popf
aaa
imul
adcb
sbb
bound
imul
add
dec
imul
and
sub
sbb
movsl
lods
stc
pop
and
push
ss
and
daa
cmp
cwtl
or
sbb
and
xchg
mov
dec
mov
mov
mov
fidivl
leave
or
es
in
cld
push
in
fistl
mov
movsl
mov
adc
inc
dec
xchg
int
movsb
cmp
mov
pop
mov
ret
pusha
nop
pop
xchg
addr16
push
ret
pop
mov
mov
inc
pop
jo
xchg
sub
mov
shl
mov
pop
fnsave
push
cli
cmp
loopne
mov
in
mov
mov
pop
sub
mov
rcrl
enter
adc
inc
sub
movsb
cmp
dec
lods
cmp
dec
loope
repnz
pop
and
sbbb
adc
pop
mov
inc
cmpsl
test
push
mov
mov
xchg
lret
xchg
dec
insl
mov
mov
fistl
insb
shrl
pop
loope
add
aam
mov
adc
shl
jp
into
pop
repz
xchg
movsb
jp
scas
mov
fdivs
push
into
pop
js
nop
sbb
cmp
andb
mov
dec
dec
decl
and
cli
incl
adc
test
cld
les
decb
and
popf
mov
jae
andb
dec
loopne
shlb
add
jns
leave
shr
cmp
ds
dec
scas
add
ss
aad
push
jne
idivb
movsl
add
ret
hlt
and
loopne
into
shrl
repnz
mov
mov
mov
ss
rorb
aam
add
out
sub
rolb
pop
mov
or
jl
inc
pop
ja
cld
add
mov
lds
inc
cmpsb
pop
int
xchg
pop
sub
and
sarl
xchg
les
xchg
mov
mov
loope
shlb
jp
inc
in
xor
cld
arpl
mov
es
fs
adcl
jo
ljmp
and
ficoms
psadbw
out
adc
enter
xor
std
test
lock
jo
add
pop
clc
mov
addr16
cmp
adc
insb
pop
pop
mov
mov
mov
add
insb
mov
mov
out
xor
out
inc
fcmove
lea
aaa
sbb
jb
mov
popf
push
pop
cld
push
jle
adc
test
fisubl
mov
data16
les
jg
shll
loopne
and
lds
xchg
cwtl
mov
dec
adc
test
pushf
cld
mull
popf
sbb
sub
arpl
xchg
lahf
adcb
xchg
mov
repnz
jbe
icebp
sbbb
pop
mov
movsb
mov
push
cmp
sarl
in
arpl
xor
cld
mov
dec
bound
xor
dec
mov
push
jbe
fiaddl
xor
xlat
mov
sbb
cmp
out
mov
push
mov
and
out
ret
iret
mov
adcb
std
cmp
xor
add
dec
clc
inc
push
outsw
iret
sar
sbb
into
int
js
js
sbb
jmp
xlat
jbe
pop
lock
cmc
gs
push
andb
inc
jae
hlt
sarb
pop
stos
jge
scas
sbb
nop
cmp
push
stos
mov
mov
in
aad
in
xor
xor
xor
in
xor
popf
xor
xor
cltd
cmpsb
test
gs
pop
or
inc
pusha
cmpsb
adc
mov
mov
in
jns
in
sub
jmp
repnz
jmp
movsl
pop
neg
sub
outsl
divb
add
imul
mov
cmp
lock
fcomp
sbb
test
jae
imul
mov
les
dec
rorl
into
inc
mov
lret
add
mov
adc
or
hlt
fwait
mov
leave
pop
loope
call
jae
xchg
sbb
xchg
lret
jecxz
or
inc
hlt
sub
xor
or
sbb
sbb
xchg
mov
pop
sbb
push
push
cltd
xor
es
sbbl
mov
pop
adcl
addr16
lahf
pop
pop
lea
sbb
fwait
inc
loop
pop
cmc
stos
sub
ljmp
push
in
xchg
ja
add
adc
scas
scas
push
ds
jge
imul
loop
xchg
jp
inc
xchg
jle
mov
push
ret
xor
sbb
loop
cmpb
mov
dec
jecxz
mov
faddl
mov
jge
xchg
pop
push
cmp
mov
jecxz
push
inc
cli
cmpsb
aam
mov
dec
xor
jg
loopne
ret
pop
neg
je
les
movsb
mov
adc
dec
jnp
enter
movlps
mov
add
xchg
xchg
sub
mov
sub
ss
cld
mov
xor
mov
jno
inc
lret
jg
fildll
push
fnstcw
push
ja
cmp
add
ljmp
inc
movsb
push
sbbb
scas
inc
add
data16
ja
cmp
cmp
fisubrl
movsl
lret
dec
xchg
aad
mov
cmp
and
fisubs
rcrb
push
nop
repz
pop
cld
cltd
adc
movsb
dec
and
push
jecxz
ret
clc
inc
and
pop
lahf
aad
add
mov
stos
fwait
scas
and
je
dec
xor
mov
mov
mov
pop
mov
cmpsb
mov
pop
lds
dec
popf
nop
and
inc
sbb
sbb
scas
addb
out
sti
adc
sub
xor
lret
add
or
mov
and
inc
fsubl
inc
arpl
ja
mov
movsl
push
mov
push
push
pop
cmc
xchg
testl
and
jo
adc
add
test
das
rorb
mov
fisubrl
mov
lret
jnp
cmpb
mov
dec
add
movsb
cltd
lahf
je
sarb
xchg
stc
scas
mov
stc
push
sti
lcall
dec
out
sbb
fs
push
mov
sbb
out
xor
add
cmp
in
add
mov
neg
jno
or
loope
dec
adc
push
ljmp
mov
jmp
fsubl
mov
cltd
cmp
ds
sbb
lret
inc
xor
mov
dec
lods
fwait
sbb
sbb
cmp
cmpsl
inc
negl
das
adc
sahf
sahf
dec
xlat
fldl
or
adc
movsl
xor
add
repz
adc
jnp
in
rorb
or
arpl
pop
xor
xchg
adc
inc
icebp
dec
loopne
fs
cmpsb
adc
inc
inc
xchg
dec
sbbb
orb
mov
add
xor
xchg
rcrb
cmp
aas
sahf
mov
insl
in
shrb
insl
add
lcall
bound
jnp
je
mov
adcb
sub
leave
call
clc
add
xor
or
cli
lock
dec
push
movsl
jg
dec
popa
popa
mov
int3
out
lcall
or
mov
cmp
mov
inc
roll
mov
std
scas
adc
insl
ja
xor
les
adc
push
jne
jae
js
adc
out
dec
mov
mov
sub
or
mov
sub
aam
jge
popa
and
jp
into
test
lret
sub
js
xor
outsl
adc
stos
push
sub
aad
push
lods
cmc
push
adc
in
cmpsl
cmp
pop
rol
jp
pusha
test
mov
mov
or
lds
add
aad
jl
clc
shr
int3
push
mov
hlt
cmp
cmp
push
cmp
hlt
pop
repnz
cld
dec
add
sbb
push
ja
stos
inc
xchg
adc
inc
adc
into
hlt
add
mov
sbb
or
dec
inc
loope
jg
xchg
cmp
mov
xchg
push
cli
sbbl
jne
mov
add
add
sub
out
xor
into
gs
lcall
sub
xor
out
rcl
push
mov
sahf
and
les
jns
ljmp
popf
repz
jne
mov
xadd
cmp
mov
or
mov
sbbl
mov
dec
xor
ucomiss
mov
xor
pop
arpl
mov
jbe
mov
sub
inc
pop
xchg
jge
stos
sbb
cmpl
mov
push
outsb
add
jecxz
pop
or
mov
cmp
icebp
enter
pop
xor
out
decl
inc
pop
inc
and
mov
push
xlat
outsb
or
dec
xor
push
movsb
cmp
jl
xor
popf
ret
pop
iret
xchg
xchg
pop
pop
jmp
fs
std
pop
pop
outsl
adc
ss
bound
inc
dec
cmp
sahf
lock
fs
adc
cld
mov
filds
test
popa
fwait
lods
mov
inc
mov
jns
andb
cmp
mov
or
push
out
aas
sub
fsubrl
xchg
idivl
sub
ficompl
cmp
cmc
jne
rclb
in
mul
xlat
popa
or
jp
pop
movsl
rcll
xlat
jg
pop
mov
and
sub
in
popf
das
leave
stos
inc
cli
push
gs
in
js
and
jb
lods
mov
stos
mov
popf
pop
test
scas
push
or
lret
in
adc
and
js
jp
out
mov
hlt
mov
leave
fisubrs
es
aam
test
lret
sub
aad
jle
mov
pop
outsb
mov
iret
repz
bound
pop
shll
in
hlt
in
mov
inc
cmp
jmp
push
dec
dec
and
iret
cmp
inc
dec
test
sbb
iret
dec
push
jmp
dec
ret
push
shll
into
mov
popa
adcb
dec
dec
pop
fsubp
pop
aam
and
add
enter
dec
cmp
fld
in
jae
out
xchg
pop
popa
faddl
jae
add
cmp
mov
cli
jne
and
out
push
jmp
lea
xor
xchg
mov
sahf
sbbl
jmp
mov
lcall
in
orl
or
leave
xor
lret
stos
fs
mov
sub
test
mov
loopne
mov
ret
jge
ja
mov
mov
xor
xchg
int
stos
xchg
inc
rcrb
cmp
push
out
and
iret
jne
pushf
aaa
push
inc
out
mov
dec
fildll
add
js
pop
xor
xchg
mov
cld
xchg
roll
sbb
inc
or
sbb
fs
lds
cmpsb
inc
mov
sub
inc
mov
cwtl
jp
add
ret
mov
xchg
ds
aam
sarl
das
add
es
xor
mov
das
xor
movsl
xchg
pop
cwtl
in
add
pop
das
sbb
stos
push
push
jae
mov
inc
xorl
lds
mov
pop
adc
movsl
jae
cmp
insb
xchg
imul
push
scas
add
lds
in
out
cmp
das
jo
dec
mov
movsb
loope
or
sbb
mov
cmc
mov
lods
jns
add
cld
mov
pop
dec
mov
movsb
cs
xor
push
and
push
jmp
sti
add
xchg
testl
xchg
push
mov
adc
bound
or
mov
mov
dec
es
push
adc
enter
jnp
test
inc
sbbb
shlb
xlat
jbe
jae
outsb
xchg
sub
mov
or
pop
jmp
out
mov
mov
idiv
cmp
mov
add
xchg
bound
stos
das
cmpsb
cmp
ret
mov
lods
out
dec
xchg
mov
insb
outsb
jle
jle
lods
pop
sarl
sub
fstpl
cmp
std
and
cmp
les
les
adc
sti
pop
mov
inc
push
stc
or
sbb
stos
bound
jge
leave
xor
clc
pop
push
int
jle
int
in
out
in
adc
fwait
add
loop
mov
sbb
push
push
jae
push
mov
xchg
loopne
mov
xchg
xor
std
mov
popa
cmp
add
testl
jo
in
cltd
mov
xlat
jle
enter
mov
pop
out
or
push
mov
imul
icebp
xchg
xor
aad
sbb
sahf
push
mov
mov
or
jmp
mov
push
xchg
ds
ret
cmp
das
icebp
negb
dec
cwtl
outsb
or
loopne
ficompl
push
mov
sbb
popf
sub
loopne
cld
pop
push
int
sbb
mov
in
fistl
jb
inc
das
push
scas
mov
iret
sahf
imul
aam
adc
adc
add
fdivl
mulps
add
cmp
inc
pop
lcall
pop
or
add
jmp
inc
xor
cmp
xchg
sub
push
mov
push
fisubs
mov
cmp
shrb
dec
ja
insl
xchg
je
out
and
and
sti
fisubrs
jmp
fstl
and
inc
pusha
xor
testb
mov
ljmp
jb
outsb
sbb
mov
popf
sbb
mov
nop
out
xchg
cs
out
dec
fdivs
or
cwtl
loop
aaa
stos
sub
rcll
icebp
mov
sbbl
mov
mov
loopne
adc
ret
insl
push
ljmp
popf
add
mov
or
xchg
bound
lcall
loope
jb
lret
jnp
push
das
sti
es
sbb
loop
mov
and
pop
in
cwtl
add
or
mov
mov
movsl
xchg
mov
rcll
psllq
rcrl
dec
add
push
stos
mov
outsl
je
ret
fsubr
hlt
in
adc
dec
xchg
movsl
cmp
push
mov
hlt
cld
xchg
ret
push
ret
in
cmc
lahf
cmp
enter
repnz
jns
aas
xchg
jb
js
rol
fucomp
loop,pn
xchg
sub
mov
xorl
popa
popa
and
dec
shrb
aad
stos
popf
out
sti
stc
mov
or
fwait
sahf
pop
mov
mov
fwait
jae
sub
pushf
pop
hlt
into
or
testl
add
inc
jb
outsl
hlt
cmp
inc
shlb
arpl
mov
fs
xchg
mov
and
and
out
mov
inc
icebp
inc
pop
dec
lock
insl
and
addr16
pop
mov
or
mov
or
jle
mov
and
cmp
lea
cltd
pop
insl
add
cld
xor
scas
mov
stc
cmp
imul
xor
repz
movsl
sbb
bound
outsb
aad
dec
and
mov
pop
jl
sub
push
frstor
push
pop
and
ds
jb
lret
and
sahf
lock
cmpsl
mov
sub
es
fidivrs
sbb
mov
add
cmp
loopne
push
stos
test
sbb
out
adc
and
xchg
mov
mov
or
adc
dec
lret
mov
jno
bound
pop
jle
add
mov
imul
lahf
mov
xor
mov
mov
arpl
mov
aaa
jl
lods
fistpl
inc
fiaddl
jmp
nop
pop
divb
data16
jns
aas
ret
xchg
je
ret
loop
sub
in
xchg
cltd
sbb
ja
xchg
mov
mov
pushf
loop
mov
call
cmp
or
cs
xchg
sbbl
jb
xchg
xchg
mov
mov
adcb
xorl
lock
mov
or
add
dec
cmc
bound
ja
xchg
mov
xor
movsl
popa
rorl
lods
fnstcw
fisubrl
push
enter
test
mov
dec
add
mov
sbb
push
dec
mov
leave
std
in
ret
pop
paddsb
scas
mov
test
mov
std
leave
push
pop
ss
mov
jle
dec
mov
fwait
ret
adc
mov
xor
aad
fcoms
cwtl
cltd
or
or
pop
xor
push
frstor
cmp
ret
insl
jecxz
fs
scas
add
add
enter
mov
cld
push
cmp
daa
push
lret
pop
inc
lret
push
push
sbb
jle
lret
push
jnp
push
daa
out
pushf
and
mov
mov
pop
dec
inc
xlat
jge
jle
pop
push
hlt
jp
or
adc
fbstp
sbb
les
jg
push
cmp
pop
mov
popa
jecxz,pt
pushl
gs
sub
pop
push
rorb
jg
push
stos
shrl
ficompl
push
push
in
pop
call
and
adc
mov
cwtl
pop
jnp
mov
mov
fistps
inc
faddp
sbb
push
add
pop
das
stos
mov
xchg
adc
dec
cmp
jmp
dec
mov
outsb
call
or
lahf
sub
std
xchg
lahf
cltd
out
mov
push
inc
xchg
mov
pop
int3
push
and
pop
jg
lret
nop
ljmp
test
push
popa
xor
es
mov
cmp
adc
or
push
fs
push
jne
pushf
call
xchg
mov
jo
adc
lds
cmpsl
push
pop
fisttpl
inc
shlb
inc
call
push
js
jmp
push
cmc
mov
xchg
add
xlat
sub
pop
mov
push
fsubs
cltd
cmp
xchg
add
ficoms
sahf
lock
sbb
mov
jnp
bound
pushf
ret
lods
xorb
or
sub
pushf
cmpsl
inc
enter
mov
movsb
insb
add
mov
movsb
bound
jnp
or
cmp
popf
sbb
popf
inc
mov
dec
and
dec
xchg
jnp
popf
pop
call
invd
lods
iret
std
cmp
in
mov
cmovno
into
xchg
mov
pop
movsb
lret
xor
out
divps
sub
mov
mov
xchg
ret
cmp
shl
push
mov
movsl
in
std
push
daa
dec
mov
cmp
fnsave
xorl
cltd
pop
aam
aad
lods
xchg
cli
loopne
imul
repnz
push
cmpsl
jns
sub
jns
push
or
test
add
movsl
mov
push
sbb
push
jg
lods
add
inc
jae
sub
lret
jo
gs
mov
cwtl
mov
push
lds
scas
decb
pushf
pop
ja
pop
ja
stos
pop
lods
ljmp
mov
sbb
lahf
nop
fldenv
popf
mov
inc
push
in
ja
out
dec
inc
jae
popa
mov
pusha
pop
mov
jecxz
aas
or
in
leave
jno
mov
push
cwtl
aaa
pushf
push
setl
cmpsl
sbb
rcrb
stos
lods
or
stos
fmul
jb
add
insl
jle
or
insb
shrb
add
mov
add
fisubrs
sub
scas
testb
xor
arpl
inc
rorb
lret
test
insl
dec
push
xchg
push
cmpsb
sub
pop
out
aad
inc
jp
sbb
mov
imul
xchg
mov
lock
and
push
gs
mov
aad
adc
insb
and
xor
inc
scas
inc
xchg
ret
pop
into
in
cmp
scas
add
cld
xchg
sahf
adc
je
popf
pop
mov
xchg
add
jbe
pop
test
jbe
add
clc
xchg
mov
jbe
sbb
sbb
cmpsl
push
or
cli
mov
or
es
pop
mov
popf
sbb
sub
rcl
sbb
cmp
mov
mov
cwtl
stos
lods
out
mov
xor
aad
out
sub
push
daa
popa
push
mov
sti
dec
es
hlt
ljmp
jo
leave
xchg
std
xchg
arpl
daa
push
cmp
jecxz
clc
outsl
dec
xor
xor
pop
sbb
add
loopne
stos
imul
mov
or
fstpl
xchg
test
or
inc
dec
cli
xchg
into
lret
lret
out
sbb
gs
imul
incl
add
inc
adc
icebp
xchg
xor
shlb
addr16
mov
addl
sbb
insb
mov
sahf
fsubl
xor
fmull
mov
cwtl
in
push
mov
rcrl
fmuls
mov
cmpsb
and
xchg
or
pop
push
mov
xchg
movsl
pop
aam
addl
inc
xchg
pop
cmp
adc
push
idivl
xchg
ret
cmp
pop
lock
ret
subb
test
not
add
enter
and
push
in
data16
and
mov
jae
loopne
subl
mov
je
leave
es
scas
in
test
xor
test
inc
rolb
iret
xchg
inc
jo
test
dec
and
mov
imul
movsb
adc
dec
hlt
popf
jmp
js
mov
jnp
mov
pop
xor
fmul
fildl
push
add
cwtl
fs
test
pop
cmp
insl
repnz
pop
out
sbb
dec
repz
mov
xchg
sub
jle
adcl
inc
mov
fistps
inc
dec
shrl
xlat
aaa
int3
or
push
jne
xchg
adcb
dec
adc
hlt
out
into
leave
inc
lcall
or
pop
xor
lahf
xchg
push
inc
xchg
stos
ficompl
in
xchg
or
push
das
js
push
lds
pushf
pushf
stos
xchg
xchg
test
or
sbb
dec
fadd
pop
lret
sahf
xchg
push
xor
jmp
xchg
xchg
movsb
push
movsl
cmpb
or
sub
lods
enter
inc
mov
fsubl
xor
lret
xlat
mov
test
fwait
ljmp
test
pusha
pop
pop
xor
push
jnp
sbb
sbb
adc
cmp
xchg
pop
jge
add
mov
jno
stos
push
sbb
pushf
inc
sbb
mov
loope
jecxz
cmp
mov
xchg
adc
stos
cli
int3
jg
inc
lcall
rolb
adc
lods
and
jl
xchg
mov
scas
and
sbb
fnstsw
into
andb
flds
jnp
push
imul
rorb
dec
cli
sar
mov
adc
sub
xchg
pop
dec
ror
aaa
aas
mov
popa
popa
mov
mov
adc
push
mov
mov
dec
fcmovnu
mov
xor
ret
xchg
dec
sbb
stos
je
xor
addb
movsb
push
ret
jns
push
movsb
shll
sub
xor
ds
pop
fbstp
aam
fs
pop
xchg
adc
repz
jp
mov
sahf
jno
mov
clc
adc
stos
push
in
fcomi
xchg
cs
lret
or
gs
xchg
and
shrb
dec
pop
pusha
lods
nop
andb
dec
icebp
mov
fisttps
test
xlat
mov
mov
fnstcw
int
and
jnp
das
addr16
pop
mov
adcb
xchg
mov
insb
lds
push
dec
pop
shll
imul
movsl
push
cld
cmp
and
cmpsb
je
fisubs
and
push
mov
jb
add
xchg
cli
jno
jbe
sub
int
push
mov
ljmp
and
or
mov
shl
mov
push
jmp
jmp
jae
mov
add
inc
imul
aas
mov
mov
mov
sbb
sbb
ja
rcrb
or
sub
lds
in
dec
subb
das
aam
xchg
into
xor
mov
jns
push
inc
fdivrs
pop
lock
fsubr
sti
movsl
repz
sub
cmp
or
daa
mov
ret
pusha
mov
insb
sbb
jmp
mov
aam
mov
sub
add
aaa
sub
sub
inc
shlb
call
movsb
sbb
mov
or
aaa
gs
rcl
shll
inc
scas
pop
dec
mov
jae
ljmp
sbb
cmpsb
sbb
leave
push
idiv
fisttps
and
add
mov
jge
fmul
lret
dec
stos
add
xchg
mov
cwtl
sbb
lock
out
test
inc
ja
mov
into
enter
cmc
jnp
mov
mov
sar
inc
fldcw
inc
adc
mov
stc
out
fldt
lea
jle
leave
mov
ret
adc
jbe
jns
xor
jb
lret
add
lahf
inc
mov
and
arpl
sbb
inc
stc
jb
pushf
lret
adcb
clc
out
call
xchg
lret
dec
ss
jg
icebp
push
mov
shl
repnz
fstl
lock
push
mov
jmp
and
stos
sbbl
test
fsubp
ja
rclb
dec
mov
fstpl
lcall
inc
adc
and
bnd
testb
cmp
stc
sbb
lahf
pop
fistl
or
mov
je
dec
dec
dec
in
and
cltd
pusha
adc
sarl
pop
into
das
vshufps
test
or
mov
xor
js
test
dec
cmp
xor
addr16
ret
xor
hlt
mov
jnp
cmpsb
mov
mov
lret
mov
or
pusha
subl
sbb
iret
jle
xor
icebp
fdiv
das
repz
and
pop
lods
and
fwait
lahf
inc
jae
jb
and
jo
sbb
fidivrs
add
loop
and
loopne
sbb
test
int
daa
mov
pop
repnz
cmp
testl
pop
or
scas
mov
ret
ret
mov
test
call
sbb
jecxz
xor
movb
mov
lods
int3
fcomp
test
or
les
stc
in
adc
stc
into
pusha
aaa
das
pop
lods
pop
sbbl
out
sub
cmpl
sti
adc
inc
frstor
cltd
and
add
cmp
arpl
cmp
dec
mulb
das
push
push
jns
cmp
pop
fdivl
sbb
out
imul
inc
out
jg
and
enter
mov
inc
cwtl
mov
cld
cmpb
and
xlat
faddp
jecxz
dec
mov
jmp
mov
xor
mov
ds
std
push
ret
inc
inc
sbb
cwtl
jg
inc
cltd
scas
cmp
adc
rclb
icebp
out
cmp
push
popa
les
push
stos
mov
cwtl
mov
mov
rcrl
es
jae
cmp
pop
inc
adc
add
mov
xchg
js
jne
jle
xor
jmp
adc
test
push
sub
enter
hlt
jmp
and
push
cmp
bound
cli
hlt
dec
stos
pop
pop
jb
jnp
lds
adc
bound
xchg
sub
mov
mov
stc
mov
push
ljmp
adc
test
decb
ds
add
lds
aaa
mov
push
mov
xchg
mov
sbb
push
lds
xchg
dec
in
push
cwtl
lret
sbb
rclb
test
testb
dec
adc
stos
mov
ret
rorl
xchg
les
mov
push
mov
out
inc
lea
dec
lods
push
out
nop
adc
jno
xor
ret
idivl
leave
lcall
mov
outsl
call
cmp
cmpsb
pop
in
jns
lcall
pop
and
sub
pop
aam
inc
scas
or
dec
fnstenv
fchs
arpl
aaa
sti
fstl
push
push
incl
jecxz
stos
scas
mov
inc
sbb
loop
and
outsl
inc
loope
sbb
inc
mov
dec
stos
and
mov
jl
lods
call
repnz
movsb
add
out
sbb
fs
in
out
aaa
lds
popa
jl
fadds
lcall
in
outsb
sbb
ljmp
daa
stc
iret
xchg
add
jge
shrb
xchg
leave
les
cmp
repnz
push
testb
push
mov
mov
ja
adc
jnp
sub
fdivrp
push
lods
sbb
cmpsb
adc
cmp
mov
or
fdivl
pop
call
cmp
pop
repnz
cmc
ja
push
jns
dec
fs
push
jp
aaa
fldenv
hlt
fcom
add
dec
fcomip
addr16
jmp
adc
call
subb
inc
or
imul
fwait
dec
in
mov
cltd
add
mov
mov
xor
lock
adc
ret
adc
repnz
adc
and
pop
mov
push
mov
idivl
pop
mov
cmp
loopne
daa
inc
lods
sub
push
adc
dec
in
mov
sub
sbb
imul
ffreep
jecxz
dec
notb
xchg
pop
fbstp
sahf
mov
dec
cmp
in
mov
jo
jo
inc
sbb
xor
cs
lock
or
lods
jl
fisttps
adc
and
mov
mov
cmp
bound
shll
dec
data16
push
lcall
inc
fmuls
rclb
pop
add
das
cmpsl
xchg
sub
mov
daa
mov
stos
sti
inc
mov
fsubrs
dec
rorb
or
xchg
push
sub
mov
pushw
shr
xor
cmc
dec
and
pop
push
xchg
insb
jle
sahf
sbb
out
ficomps
pusha
push
mov
icebp
cli
rol
fwait
ja
mov
dec
jmp
in
pusha
sbbb
hlt
xchg
ja,pt
mov
cmp
jp,pt
mov
pusha
mov
sbb
fimuls
lods
fidivrs
jae
int3
mov
jle
js
imul
dec
cmpsl
cmp
in
fnstenv
push
cmpxchg
push
xchg
mov
add
add
dec
sbb
daa
scas
mov
and
adc
add
push
xchg
push
mov
es
icebp
nop
or
xor
jbe
pop
outsl
aam
popf
ss
push
jge
test
push
fdivrl
mov
in
sub
cmpsl
pop
mov
lret
pop
jle
or
jnp
pop
pop
cwtl
pusha
jecxz
jns
inc
lcall
xor
enter
and
aam
dec
mov
scas
mov
mov
mov
pop
mov
jmp
lcall
clc
ljmp
iret
jbe
mov
push
xchg
sub
push
icebp
nop
mov
fmul
lcall
ret
dec
and
dec
jmp
or
mov
aas
jb
jno
jae
loop
aad
pop
out
mov
mov
out
or
inc
add
jo
fisttpll
ja
jae
les
mov
sub
cmpsl
out
mov
outsb
xchg
out
stos
ret
hlt
lret
hlt
stc
jne
fcoms
mov
cmp
push
cmpsl
in
dec
hlt
das
repz
lret
sub
mov
mov
mov
sub
aad
push
sub
out
jae
and
in
xchg
sbb
mov
mov
test
outsb
fildl
or
dec
mov
call
popa
addl
je
jo
fistpll
xchg
nop
out
add
xor
adc
outsl
out
roll
call
dec
push
fs
mov
adc
mov
xor
xchg
pusha
adc
aas
xchg
push
mov
dec
in
mov
test
lock
dec
fcoms
rclb
aaa
lahf
and
cmp
pop
or
mov
push
push
shll
adc
push
pop
test
jo
fwait
cs
mov
or
jnp
adc
or
stos
mov
sub
jb
ds
sub
pop
cli
mov
popa
fcompl
mov
cmp
ljmp
testb
mov
popf
jecxz
mov
xchg
jo
les
add
cwtl
leave
mov
ljmp
lret
add
cmp
mov
popf
cmp
test
push
mov
das
aas
imul
popf
add
dec
jg
and
jl
rcrb
js
pop
ret
je
ret
test
fstpt
mov
js
push
dec
fnsave
jl
mov
push
adc
fmuls
push
push
xor
add
inc
mov
cltd
push
adc
push
xlat
xor
xor
or
mov
adc
cmp
xchg
imul
out
test
inc
scas
xchg
inc
sub
xorl
or
inc
aam
loope
ficompl
xor
and
out
dec
or
push
cs
sbb
jmp
inc
imul
pop
rorb
addr16
mov
lret
in
notl
push
lcall
ja
lcall
pushf
scas
aas
cld
repnz
mov
jae
xchg
push
fstp
xor
je
arpl
leave
push
jle
adc
lods
hlt
sub
xor
cmc
clc
pop
bound
dec
arpl
pushf
js
cmp
ljmp
inc
rcr
and
roll
mov
bswap
decb
outsl
outsb
ja
push
jb
inc
add
subl
jnp
cwtl
add
lahf
dec
xor
mov
outsl
es
fiaddl
add
cld
jge
add
out
xor
stc
cmp
aad
adc
push
sbb
das
xlat
and
aam
sbb
popa
add
xlat
pop
mov
jmp
mov
pop
jns
jo
ficoml
pop
fdiv
dec
fnsave
repz
inc
rcl
je
addr16
push
aaa
ficoml
mov
aas
int
cltd
sbb
jle
movsb
cmp
dec
sub
mov
fldcw
cmp
popf
or
fistps
loopne
icebp
xchg
stos
jbe
roll
jno
xor
call
jmp
lahf
add
and
sub
add
xor
or
sub
jecxz
notb
jl
int
inc
dec
push
sarb
and
out
inc
push
test
mov
hlt
dec
int
dec
lcall
jge
xor
xchg
cmp
mov
out
sbb
push
lcall
xchg
fucomp
push
ficoml
and
testl
jle
cmp
mov
add
xchg
das
inc
out
or
hlt
cmpsl
out
mov
mov
loopne
movsb
movb
mov
fdivl
xchg
push
fucomp
or
inc
fsubrl
jmp
sbb
movsb
pop
loope
pop
xchg
dec
push
test
stc
or
pop
lods
sbb
rorb
loope
sub
ss
and
repnz
das
rolb
loopne
push
dec
popf
push
repnz
cmc
mov
jl
ss
inc
and
dec
mov
lods
dec
mov
xchg
outsl
daa
cwtl
xor
mov
adc
dec
push
movsl
inc
inc
or
out
jb
rcrb
pop
in
lock
je
pop
daa
dec
fs
fidivl
test
mov
adc
xlat
xor
pop
pop
leave
mov
dec
mov
mov
icebp
dec
push
mov
loop
pop
fwait
cmpsb
push
in
sbb
mov
mov
sub
mov
fwait
sahf
fidivs
xchg
push
pop
imul
jge
push
push
inc
dec
fldlg2
clc
mov
push
popf
cli
pop
cli
jecxz
xchg
scas
loope
mov
mov
add
std
cmp
divl
bound
xchg
adc
dec
adc
inc
lret
push
addr16
pop
dec
stc
pop
jns
mov
sbb
inc
push
xor
les
jmp
in
fbstp
mov
sbb
pop
ret
cmp
jg
and
addr16
push
clc
iret
es
jne
jp
lret
fs
jbe
pop
jb
push
jae
out
jns
sbb
dec
sub
pop
pop
clc
sar
sub
pushf
xorb
test
mov
fadds
stos
xor
cmp
cli
inc
in
test
inc
fisttps
les
repz
dec
ficompl
pop
ljmp
aam
fildl
dec
mov
mov
cmpsl
leave
jb
out
jle
push
popa
adc
sbb
icebp
div
mov
adc
xor
in
in
inc
fimuls
or
fadd
xchg
imul
pop
loop
sub
loop
inc
mov
add
xchg
lods
add
or
xchg
sbb
cmp
mov
loop
push
mov
in
xlat
pop
sarl
inc
or
imul
out
push
popa
inc
stos
ror
mov
imul
jp
sarl
mov
pop
mov
pop
jno
pushf
jb
xor
mov
push
aad
jns
incl
lods
das
mov
sbb
fildl
and
push
popf
clc
add
bound
cmc
pushf
arpl
aaa
add
inc
adc
shrl
fdivs
dec
fwait
repz
testl
and
sub
testb
pop
mov
enter
jbe
mov
push
xchg
adc
sti
cmp
ss
imul
lea
ss
jb
clc
addr16
push
sbb
jl
inc
cmp
cmp
int
sub
clc
shl
loope
cmp
std
lods
mov
sbb
mov
fs
push
fildll
xor
jb
adc
cmp
fcomps
out
sub
mov
ficoml
or
sbbl
ja
mov
sub
xchg
add
pop
inc
sbbl
outsl
push
fimull
mov
hlt
and
shll
inc
loop
mov
mov
cltd
mov
addl
ljmp
or
daa
xchg
inc
sbb
add
adc
cltd
in
vunpcklps
scas
inc
fwait
out
or
jl
push
call
in
pop
and
rcl
xor
shlb
push
notb
js
mov
loope
out
call
push
dec
sbb
in
cmp
or
in
addl
jecxz
out
aaa
push
fsubr
dec
scas
adc
xchg
sub
les
push
xor
cltd
add
fwait
sub
cli
jo
sub
into
enter
push
enter
hlt
sub
cmpsb
or
daa
sub
inc
pop
int
add
ljmp
cmp
pop
inc
cli
xchg
xor
push
shrl
insb
fistpll
jno
lds
pop
test
jecxz
push
push
mov
int3
push
aad
mov
lret
test
cmpsb
lock
arpl
in
mov
aad
in
add
push
push
adc
and
xchg
cmpsl
testl
test
test
testb
mov
iret
and
test
sub
mov
mov
jns
call
out
cs
lds
mov
ljmp
mov
insb
mov
ficoms
mov
or
leave
cmp
or
inc
loopne
inc
icebp
mov
out
mov
test
popa
pop
scas
sbb
mov
gs
iret
jo
jmp
or
xchg
ficoml
or
xchg
xor
cmp
in
push
sti
sbb
int
rcrl
pusha
lods
aaa
inc
push
in
imul
mov
inc
jae
jns
std
cltd
push
mov
flds
pop
and
jae
fcomps
ljmp
adc
push
lcall
popa
clc
mov
fisubrs
push
jg
ret
xchg
hlt
add
lret
xor
nop
inc
mov
adc
fistl
dec
sbb
stc
cltd
test
xor
mov
mov
adc
adc
fs
mov
mov
pop
out
sbb
adc
aam
jg
sbb
testl
bound
subl
insl
jmp
jns
add
popa
out
std
sub
mov
or
icebp
jecxz
movsb
dec
jp
cmp
or
cmc
push
dec
ds
mov
fcomi
cmp
xchg
mov
dec
jge
movsl
mov
rcrl
aad
negl
scas
hlt
or
out
repz
ss
mov
out
aam
mov
inc
mov
or
frstpm(287
xor
and
gs
das
dec
mov
clc
je
xchg
insb
lcall
mov
or
cs
ja
dec
xchg
adc
repz
xchg
pop
int3
or
mov
bound
lods
xor
mov
test
mov
out
cmp
loop
out
pop
sbb
mov
sarl
mov
aad
adc
out
ja
repz
in
xor
mov
cmp
inc
sub
insl
cmp
mov
xlat
xor
clc
xlat
in
and
adc
mov
ja
pop
adcb
lods
notl
icebp
cmpsb
dec
mov
and
test
push
pusha
xor
cmp
or
repnz
dec
jecxz
push
stc
cmc
out
mov
push
call
test
xor
xor
dec
jecxz
and
sahf
lds
xchg
add
jnp
addb
jb
lcall
call
mov
adc
and
or
sbb
pop
sub
sub
sahf
inc
sti
sti
repnz
xorb
loop
out
inc
pop
pop
pop
push
jne
mov
mov
fnstcw
aam
scas
or
lahf
lahf
addr16
mov
hlt
jp
aas
les
ds
in
dec
xor
aam
dec
mov
mov
cmp
test
pushf
clc
xchg
frstor
and
inc
stc
nop
jns
xchg
push
mov
mov
repz
movsl
push
testb
adc
cmp
mov
fmull
adc
jl
push
nop
inc
stos
sub
popf
mov
mov
sub
cld
inc
or
jle
aad
xchg
sub
shll
daa
shlb
jo
shld
cmpsl
dec
loop
aad
push
out
imul
xor
xchg
adcb
xor
mov
lret
xlat
lock
jmp
mov
cmpsb
mov
testl
push
sbb
daa
ret
aaa
int
cwtl
add
pop
mov
add
pop
ss
jns
rorl
flds
mov
cmpsb
out
xchg
hlt
or
mov
inc
cmc
mov
xchg
push
stos
xorb
inc
mov
xchg
insb
sti
jmp
sub
mov
enter
negl
sarb
or
scas
pop
imul
xor
ja
adc
add
es
insb
test
pop
repnz
or
lcall
ss
gs
adc
mov
add
pop
scas
xchg
inc
outsb
or
std
pop
pop
add
daa
loopne
loop
in
cltd
ffree
dec
sarl
das
or
fidivs
mov
rorl
mov
push
mov
push
adc
adc
nop
pop
xchg
jae
test
addr16
mov
imul
rclb
xchg
adc
lds
xor
mov
cmp
outsb
scas
loopne
movsb
pushf
jno
outsb
sub
pop
sahf
push
dec
or
aam
xchg
mov
sub
add
cltd
pinsrw
in
sahf
ds
jp
dec
pusha
xchg
outsb
cld
ror
jle
hlt
sbb
cmpsb
dec
xlat
and
subl
popf
cltd
mov
or
pop
dec
mov
jge
lea
lods
insb
jl
and
rcrl
int
cmpsb
insb
sahf
jg
int
lret
lahf
mov
sti
hlt
sub
sbb
sbb
xchg
inc
sbb
dec
leave
addr16
imul
fnsave
cli
jl
fidivs
orl
fiadds
pop
push
mov
or
fistl
or
push
mov
dec
bound
jne
or
pop
inc
push
mov
mov
popa
xlat
out
jle
dec
call
jge
adc
push
and
mov
mov
daa
inc
push
in
or
push
pop
lods
imul
paddb
ret
adc
js
negl
jg
shlb
ljmp
pop
ror
sub
stc
mov
add
or
sub
sbb
push
addb
jb
int
xchg
mov
fcmovnu
lods
fnstenv
outsb
in
arpl
leave
movsb
in
pop
xchg
scas
cmp
xor
push
inc
inc
aaa
loopne
adcl
push
into
push
xor
js
stc
rorl
sti
dec
stc
cmpsl
cmp
inc
dec
icebp
aad
cmp
shr
add
das
push
or
nop
mov
push
mov
fmul
bound
rcrb
lds
dec
pop
push
fs
add
sbb
call
jge
pop
and
dec
push
sbb
pop
into
iret
outsl
ficomps
and
ds
outsb
inc
inc
pop
jp
fadds
lahf
sub
sbb
cltd
xor
aad
fidivrl
dec
push
filds
shl
and
mov
mov
lods
push
imul
sti
xchg
xor
dec
mov
bound
call
sub
jb
jmp
shlb
or
negb
shld
inc
and
shll
push
inc
pop
jo
dec
rol
inc
adc
mov
sub
or
test
test
add
pop
dec
or
outsl
push
js
xor
mov
cmc
orb
pop
daa
in
out
add
cmpsb
les
sarb
sub
hlt
addr16
sbb
rcrl
cmc
mov
push
lahf
ss
cmp
imul
mov
cwtl
test
mov
sbb
sub
jno
cmc
or
jno
lds
add
pop
jg
and
sarl
movsl
xor
pop
mov
aas
aad
js
cld
jmp
aad
les
adc
and
dec
mov
xchg
inc
repz
lds
cmp
je
sub
cltd
inc
and
pushf
aaa
cmp
sti
jbe
pop
mov
rolb
iret
outsb
push
lock
bound
jge
or
cwtl
jecxz
mov
and
adc
and
inc
jne
mov
gs
hlt
dec
sbb
dec
jge
rolb
mov
jne
dec
pop
call
cmp
cmc
jbe
mov
or
xchg
or
idivb
inc
dec
jg
adc
movsb
adc
sbb
adc
push
lds
sahf
call
dec
out
shrb
out
repz
popf
lods
sbb
sub
mov
xchg
out
push
rcll
or
cmpsl
call
aad
dec
pushf
and
mov
iret
xchg
mov
adc
push
sbb
outsl
sbb
lcall
outsb
ds
cmpl
insl
in
mov
pop
in
and
sahf
cmp
pop
imul
xor
out
mov
sub
movsb
xchg
nop
lea
xchg
sub
fsubrs
jbe
in
les
lods
pop
jbe
sbb
xchg
dec
notb
jl
jl
and
lcall
movsb
cmp
into
test
sub
mov
loopne
aad
push
in
aaa
lahf
fsub
rorl
dec
aas
dec
jp
in
jg
push
cltd
cld
inc
adc
jmp
push
inc
jb
jbe
sub
hlt
js
fs
sub
jle
xlat
jl
int3
lods
clc
mov
add
xchg
scas
sub
xorb
loopne
enter
xor
sub
les
adc
call
int
lods
sub
sbb
ja
jge
jbe
mov
fidivrs
pop
arpl
cmc
frstor
scas
iret
aaa
adc
mov
lds
test
mov
xor
repnz
stos
and
jo
mov
dec
sbb
aam
enter
mov
sub
mov
pop
repz
loope
or
movsb
test
js
shll
mov
rcr
int
mov
cmp
lret
into
adc
adc
js
insb
mov
leave
adc
cmp
insl
cmpb
xchg
inc
rclb
mov
lds
imul
push
dec
mov
mov
pop
popf
lods
aaa
mov
pop
mov
pop
jp
rorb
xor
xlat
lcall
data16
ret
js
jae
addps
jno
movsl
cmc
ss
jecxz
push
lods
mov
movsb
xlat
cmp
jnp
loop
fwait
stos
push
stc
ss
fnstcw
scas
out
adc
mov
mov
push
or
ds
pop
sub
mov
rolb
sbb
add
jge
mov
jnp
inc
scas
loop
cltd
push
mov
pusha
dec
jne
mov
pop
es
sbb
mov
cmp
imul
or
sbb
dec
adc
fs
pusha
jb
mov
push
jne
test
mov
dec
arpl
cli
es
pop
or
mov
repnz
and
push
mov
nop
fidivs
test
orl
int
test
imul
push
loope
mov
pop
inc
lds
dec
add
mov
xchg
outsb
mov
mov
scas
inc
jecxz
aas
aam
lods
xchg
xchg
xor
push
fbstp
push
cmp
xchg
and
sahf
add
ret
subl
inc
push
js
int3
repz
jl
pusha
ss
sub
sbb
repnz
hlt
int3
xor
in
cs
cmp
insb
inc
fbstp
lahf
das
lds
mov
negl
out
cli
jl
call
outsl
inc
mov
dec
push
inc
repz
inc
mov
sbb
and
aas
pop
inc
ret
jno
ret
loope
rorl
add
mov
pushf
xchg
inc
aam
aaa
push
clc
sbb
popf
xor
jae
lock
addr16
ret
xor
inc
push
movsl
jns
icebp
dec
negb
loop
mov
outsb
inc
adc
insb
mov
mov
xchg
xchg
mov
xchg
inc
sahf
loopne
inc
ja
insl
push
ss
cwtl
jg
jno
in
push
inc
movq
xlat
mov
fnstsw
mov
dec
cmc
pop
jge
lcall
xchg
mov
ret
std
out
out
pop
jnp
mov
sbb
sbb
sub
push
pop
fstpt
cmp
test
and
fisubrs
scas
cmp
cld
xchg
sarl
lods
dec
sbb
inc
adc
pop
and
mov
icebp
cmpsb
xor
sub
cmp
adc
aad
or
jp
fstpt
arpl
shrl
mov
or
cmp
dec
and
xchg
push
mov
out
into
and
cld
gs
cs
push
pusha
mov
scas
inc
mov
gs
and
inc
stos
cmp
cltd
cmp
mov
xor
stc
inc
std
ja
scas
push
push
outsl
rcr
and
mov
push
rcr
movsl
fdivp
mov
loop
sbb
ja
push
add
cbtw
sti
dec
ficomps
or
xlat
push
aad
mov
int
call
add
cmp
mov
fbld
imull
jge
cmp
mov
shrl
mov
nop
repz
jp
cmc
movsl
mov
mov
push
mov
cmc
inc
stos
xor
lods
lahf
lea
or
scas
pusha
shll
mov
fsub
mov
dec
jmp
shl
jbe
lock
in
push
and
and
jp
sub
add
mov
push
push
push
in
cs
push
jmp
lods
imul
jb
shll
adc
sbb
jmp
dec
test
sbb
and
ret
cmpsb
loop
mov
lahf
arpl
stc
repnz
fdivl
fisubl
jl
mov
fisubs
cmp
jl
popa
sbb
pop
std
testb
cld
or
push
cmp
and
fsubrs
push
xor
and
adc
mov
aam
xchg
insb
pop
fnstsw
dec
hlt
repz
xor
gs
push
jmp
leave
mov
mov
mov
test
sbb
jb
push
push
xchg
repz
pusha
aad
arpl
sub
popf
fidivl
mov
or
push
shrl
std
sbbl
mov
add
adc
and
inc
movsb
jnp
adc
xor
add
lds
aad
mov
jge
pop
cmp
mov
mov
sub
rorl
iret
ds
aas
in
jmp
pop
hlt
inc
jo
shl
and
shrb
das
lods
in
repz
sub
push
decl
inc
mov
inc
or
cmp
and
xor
jbe
mov
inc
popa
int
push
decl
movsl
in
mov
clc
mov
das
cmp
add
xlat
rorb
mov
push
dec
repnz
mov
stos
xchg
mov
jecxz
stc
push
jmp
aas
xchg
aas
mov
xchg
mov
int3
hlt
pop
mov
dec
insb
jp
sbb
int3
mov
outsl
push
fldt
add
leave
cmp
stc
aam
out
subb
mov
les
imul
pop
jp
cmpsb
xor
ss
sahf
dec
incl
scas
pop
mov
test
xchg
lock
dec
push
push
mov
aam
sub
outsb
add
into
shrb
add
scas
cltd
or
sbb
add
xor
clc
arpl
pop
mov
push
shlb
xor
cmp
sub
and
dec
stos
cli
test
cmp
cmp
jmp
pop
mov
shlb
lahf
cmpsb
push
sub
lods
mov
jp
inc
xlat
mov
in
push
push
aad
in
fnstcw
in
test
inc
xor
cmp
cmp
xchg
adc
xlat
push
aas
or
int3
scas
and
rcrb
pop
fdivs
jmp
cmp
btr
push
shlb
or
mov
mov
adc
popa
aaa
jbe
subb
or
ljmp
scas
in
add
push
jle
pop
or
pusha
push
mov
aad
xor
pushf
or
into
shrl
in
mov
loop,pn
push
cmp
mov
xchg
adc
add
mov
fbstp
xchg
shlb
std
stc
adc
push
inc
sbb
pop
sbb
ljmp
cmc
jg
stc
lea
aas
ret
stos
lret
xchg
dec
add
lret
jecxz
cmpsl
mov
adc
push
rclb
sub
outsl
lock
clc
rolb
jg
mov
in
cld
jmp
mov
mov
leave
mov
stos
add
in
test
mov
add
adc
sub
sti
jbe
shll
sub
mov
sub
mov
or
pop
pop
scas
pop
mov
jno
push
adc
jno
stos
sarb
push
gs
aas
mov
adc
inc
sti
std
jo
xchg
xchg
shrb
lods
add
aad
jle
push
jl
pop
fcomps
or
dec
inc
mov
sahf
movsb
aaa
mov
jne
je
mov
dec
lock
daa
jbe
lret
and
and
movsb
rol
jle
cmc
xor
cmp
mov
hlt
mov
ja
sbbl
sti
sub
and
xor
test
test
pop
in
adc
inc
cmp
mov
mov
dec
xchg
inc
xchg
mov
cmp
popa
orl
aad
out
mulb
or
push
data16
cmp
sub
xchg
daa
inc
jns
fwait
pop
scas
fwait
outsl
aad
mov
neg
inc
test
in
dec
aas
mov
jp
loope
inc
out
add
push
mov
jns
int3
pusha
out
cld
aas
mov
pop
xchg
sub
ja
cwtl
jmp
xchg
push
pop
inc
add
and
lods
xchg
ret
xchg
dec
icebp
xchg
icebp
enter
cwtl
pushl
notb
push
xor
adc
push
fistpll
cmp
xchg
xor
push
sbb
push
into
pop
pushf
sub
out
js
into
and
lret
je
sub
mov
insb
frstor
rcrl
vmovaps
adcb
inc
sub
pop
fbld
sbb
pop
loope
xor
in
sub
xor
pop
push
mov
lcall
bound
inc
jnp
cltd
xor
frstor
inc
sbbb
xlat
mov
arpl
and
cmp
out
pop
mov
add
out
fisubs
push
sbb
rcl
mov
dec
scas
jno,pt
ja
mov
sub
aad
and
out
sti
mov
or
int3
add
leave
mov
pop
xor
and
lahf
pop
test
outsb
sbbb
std
inc
or
insl
push
lods
mov
fstpl
adc
cmc
dec
data16
test
sbb
and
adc
mov
shrl
rcll
out
adcb
int
xlat
outsb
pop
out
mov
jmp
stc
rolb
fs
lods
bound
pop
scas
fistl
aaa
lods
fiaddl
shll
or
int3
pop
ljmp
loopne
ret
scas
shl
ja
test
shrb
inc
outsb
xor
stos
fcmove
push
dec
loop
ret
stos
movb
call
xchg
or
mov
push
mov
xchg
xchg
sub
call
nop
cltd
cld
push
push
bound
in
mov
stos
push
iret
jecxz
les
add
sarb
test
into
xchg
jbe
cmpl
mov
cmc
xor
jge
mov
sbb
iret
mov
and
sub
andl
push
add
test
inc
adc
dec
or
rclb
inc
sbb
loop
cmp
mov
inc
rorb
popa
xchg
mov
movsl
mov
xlat
mov
dec
jecxz
sbb
fisttpl
cli
es
mov
orb
fcoms
sub
lret
or
mov
fisubrl
je
cli
mov
mov
mov
popa
or
js
std
sub
sub
push
jne
push
push
and
adc
psadbw
sarb
add
push
out
mov
ljmp
push
aam
sahf
mov
adc
or
fwait
jle
add
pop
ret
xchg
mov
dec
lock
fiadds
imull
mov
fnstcw
scas
lret
push
inc
data16
dec
xchg
out
mov
xchg
lock
push
je
add
aaa
ja
dec
xchg
jmp
in
fisubrs
or
sub
sub
jmp
cmp
fidivs
jno
and
sbb
mov
add
xlat
fldcw
les
xor
rclb
lds
outsb
xchg
jl
xlat
out
xchg
int3
fsts
outsl
mov
movl
cld
xchg
add
test
or
inc
sub
add
mov
fs
iret
sub
or
stos
or
out
add
cli
dec
inc
je
iret
pop
xchg
mov
dec
inc
jns
cs
das
inc
jmp
pop
scas
cmp
shlb
int
and
xchg
adc
shlb
out
arpl
or
cli
insl
std
je
and
popa
xor
push
mov
out
in
jg
std
scas
mov
imul
test
xor
lods
sub
call
lds
movsb
cmp
das
arpl
pop
mov
fisubrs
jecxz
xchg
mov
dec
fs
int3
insb
icebp
mov
gs
mov
subb
push
sbb
mov
jmp
imul
mov
add
mov
sbb
repz
sbb
mov
ret
or
mov
sub
rcrl
push
jmp
das
sbb
xchg
mov
jmp
testb
insb
shlb
fldcw
dec
mov
imul
xchg
pusha
push
lods
jge
rcrl
cs
inc
push
loopne
mov
pop
shll
mov
sbb
dec
cmpsb
imul
push
mov
and
push
xchg
imul
dec
xchg
shlb
popa
inc
stc
lock
imul
mov
xor
push
mov
cmp
pushf
arpl
ret
and
cmp
mov
mov
and
stos
ret
das
es
std
or
sbb
push
or
jns
mov
jmp
sub
or
fdivrs
push
and
mov
call
out
stc
push
fsubs
sub
mov
xor
xor
subl
push
jmp
and
xchg
sahf
mov
ljmp
pop
cmp
scas
mov
inc
iretw
adc
jne
mov
into
pop
in
pop
aaa
out
mov
data16
pop
push
cmc
shl
and
jne
xchg
push
lods
push
in
out
push
add
in
xor
xor
in
gs
xchg
mov
lret
xor
movsb
push
daa
pop
push
cmpsb
push
les
gs
cmp
pop
push
push
stos
pop
mov
jb
cmpsl
jb
je
jp
jne
int
push
xchg
loope
dec
jbe
mov
jecxz
rol
sub
leave
xor
iret
pushw
jg
mov
ret
jns
sub
xchg
lahf
ss
inc
or
sbb
sub
out
kmovw
sbbl
loop
adc
adc
nop
imul
pxor
jle
or
add
cmp
push
pop
arpl
test
sbb
and
add
cld
push
insl
mov
jg
dec
adc
notb
xchg
gs
subb
inc
cmp
and
pop
push
cmc
inc
jb
stc
lcall
mov
inc
pop
fcomps
stos
out
push
das
push
ja
in
mov
imul
jle
dec
aaa
outsl
push
xor
push
sbb
ret
insl
nop
adc
adc
inc
ljmp
push
stos
fsubr
mov
jle
sub
push
pop
or
push
fsubs
testl
cmpsb
add
sub
push
icebp
arpl
gs
mov
imul
or
test
stc
push
gs
push
aas
sub
sahf
mov
call
pop
lahf
repnz
mov
sbb
xor
daa
jmp
lds
es
or
lea
adc
mov
bound
and
aad
pop
inc
push
add
gs
xchg
ss
and
xchg
sar
dec
nop
jecxz
add
adc
push
fnsave
add
mov
add
pop
sti
out
xchg
xchg
cmp
mov
and
jns
outsb
xor
call
popf
cmpsl
adc
fs
iret
or
dec
stos
jmp
adc
rorl
and
mov
and
mov
dec
cld
xchg
sub
inc
mov
std
push
rclb
xor
aas
sbb
and
add
loop
inc
nop
adc
std
cltd
xchg
aas
les
andl
cmpsl
mov
aad
pop
ret
das
pop
cmp
pop
rclb
stos
in
outsl
pop
ret
loopne
popf
xchg
jnp
push
aas
add
mov
push
or
fidivs
pushf
or
push
fistps
mov
shrl
push
ficompl
loope
jnp
xchg
mov
add
cmpsb
xor
inc
loopne
fidivs
add
cld
dec
movd
xsha1
cmpsb
dec
fsts
adc
movsl
mov
jb
mov
aad
mov
fcomip
pop
cmp
jo
dec
andps
mov
in
dec
movsb
mov
mov
sbb
fsubrs
cmp
ljmp
out
sahf
dec
pop
xchg
lahf
mov
shll
in
add
xlat
clc
daa
into
or
cs
in
mov
adc
aaa
aas
jae
add
mov
test
mov
bound
fsubr
test
jnp
lock
and
fdiv
lods
inc
and
mov
lret
dec
and
add
and
sbb
cli
mov
test
enter
dec
dec
sub
sub
sub
jne
shlb
add
or
or
jle
ljmp
int3
adc
fcmovnu
aad
cld
mov
fadds
stos
xor
push
leave
hlt
pushf
test
inc
jo
fdivr
mov
push
test
xor
pop
fidivl
cwtl
xchg
outsb
mov
clc
cmp
sbb
call
stos
hlt
ljmp
int
and
lcall
mov
push
cwtl
das
add
push
push
push
dec
rol
mov
popa
clc
stc
sarb
xchg
jg
dec
mov
cmp
and
adc
xor
dec
xor
jge
push
std
xor
lods
add
in
das
xchg
add
and
cmp
push
cmp
push
lcall
in
add
push
pop
test
xchg
aas
adc
mov
repnz
dec
jg
popf
jne
sbb
push
leave
mov
jbe
mov
jg
loope
stos
dec
aam
mov
outsb
test
xchg
andb
gs
cwtl
inc
sub
inc
lahf
and
scas
out
jae
shrb
cmc
out
mov
xchg
jle
mov
outsb
test
sbb
rorb
mov
fists
mov
or
mov
jns
lods
xlat
pop
or
addr16
and
lret
xor
stos
sub
fwait
into
sarl
sub
push
loope
inc
push
cmc
rol
cmp
lahf
icebp
ret
cmp
fbld
ffree
add
stos
cmp
sti
enter
dec
lea
jns
push
sahf
and
push
push
dec
sub
sub
cli
iret
movsl
cmp
or
push
sub
mov
pop
xchg
jecxz
lock
std
nop
sbb
jl
pop
pop
xlat
mov
imul
inc
imul
mov
pop
inc
inc
pop
imul
jp
lods
lea
lock
out
add
xchg
jb
popf
adc
stos
aaa
std
lds
or
loope
xor
jbe
icebp
inc
movsb
xlat
pop
movsl
hlt
add
sub
sbb
cmp
stos
je
inc
xchg
aaa
mov
les
xor
push
push
repz
jb
notl
cmpsb
shrl
or
test
mov
sbbl
iret
enterw
mov
push
push
in
in
push
jns
div
mov
lds
jae
shl
cwtl
jp
add
cmp
xchg
lret
and
xchg
mov
and
jmp
int
aam
jle
imul
xor
dec
test
pop
mov
std
push
movsl
outsb
push
inc
jecxz
push
out
jns
packssdw
arpl
mov
fsubl
out
sub
push
mov
sub
inc
sbb
aaa
into
adc
loope
sub
mov
fwait
testl
inc
xor
xor
add
cmp
mov
or
push
sbb
lahf
subl
add
lret
sub
out
push
mov
dec
test
jmp
orb
loope
inc
pop
push
inc
pop
lea
int
sub
dec
out
jl
das
mov
sbb
rorl
fs
stos
int3
arpl
xorb
stos
mov
fdivrl
xchg
cs
mov
lret
pop
pop
out
push
imul
clc
xchg
shl
mov
cmp
inc
xchg
jg
lock
or
in
mov
aaa
jae
cmpsl
nop
sub
mov
xor
bound
sub
mov
lods
faddl
push
addr16
sub
imul
sub
xchg
call
inc
movsb
jl
and
mov
iret
jl
add
in
movsl
push
sub
and
push
adc
mov
jge
mov
or
mov
or
dec
loop
fadds
inc
lds
cmp
cmpsl
pop
xchg
mov
add
add
divl
andb
sbb
out
cltd
xor
stos
test
mov
sbb
lcall
das
mov
test
stc
inc
shrb
adc
push
out
mov
rep
loop
lds
jge
mov
xchg
xchg
or
xor
lea
pop
pusha
testl
sbb
fwait
jg
mov
inc
out
aad
arpl
lret
inc
mov
jbe
add
shlb
or
punpcklbw
or
inc
daa
fxch
movsb
push
and
test
mov
sahf
jp
loopne
fcmovnbe
test
or
xor
sbb
mov
xor
ss
xchg
arpl
dec
test
push
inc
pop
cwtl
in
jge
rorl
mov
out
mov
xchg
scas
loope
je
lret
ds
inc
dec
pop
inc
lea
in
cmp
lea
xchg
out
jae,pn
test
dec
pop
loope
cmp
mov
hlt
mov
push
ja
adc
adc
ret
mov
mov
dec
dec
cmp
mov
xor
mov
inc
and
cmpb
mov
dec
movsl
inc
pop
push
addr16
add
fmulp
dec
xor
in
push
mov
cmp
dec
out
bound
push
inc
cmp
jne
into
mov
dec
std
push
in
std
mov
test
addr16
cltd
xor
cmpb
aad
or
cmc
jnp
daa
test
ljmp
push
add
outsb
scas
je
pop
jno
sub
adc
enter
lods
mov
popa
mov
or
in
push
push
scas
xchg
mov
xchg
push
sub
mov
add
stos
add
fistpl
nop
jnp
addr16
sbb
add
into
pop
fisubl
mov
or
repnz
pop
gs
in
scas
mov
or
mov
sbb
and
ljmp
sub
rolb
jl
pop
call
inc
stos
dec
lds
fadds
lret
inc
xlat
and
iret
pop
rorb
cwtl
cmp
adc
cmpb
jg
lds
mov
dec
hlt
push
pop
jnp
imul
cwtl
gs
es
cmpsl
pop
and
jge
mov
subb
cld
push
xor
outsb
sub
enter
je
cli
mov
clc
xor
push
cld
cs
mov
cmpsb
std
sahf
jne
bound
fsubrs
movsl
mov
out
push
xchg
js
xchg
pop
pusha
dec
pop
imul
xchg
xchg
cli
stc
inc
jbe
or
fstl
ljmp
inc
loopne
sbbl
shll
dec
dec
cmp
pop
fsubrs
leave
les
mov
lret
or
sbb
test
fsubrl
push
pop
cmp
xlat
sub
inc
jnp
inc
fs
shl
jne
mov
cmp
nop
les
cmpl
lret
lret
mov
les
psadbw
dec
nop
pop
jp
dec
arpl
sbb
adc
jecxz
xchg
adc
cmp
hlt
inc
push
mov
test
lds
inc
and
icebp
insb
and
dec
popl
ljmp
notb
mov
or
push
push
movsb
cmp
std
ficoms
or
mov
cmpl
sbb
divb
mov
sahf
jp
dec
jp
xor
es
dec
jo
sbb
xchg
je
pop
mov
fwait
push
fdivs
jl
jb
jmp
cmp
adc
test
imul
sbb
cmp
popa
insl
and
lret
jecxz
jmp
ljmp
arpl
cmpsb
pop
lea
push
loop
mov
xor
xlat
mov
push
inc
lods
xchg
or
jecxz
fidivl
or
jle
pop
and
addb
leave
rclb
xlat
add
or
repz
push
pop
test
gs
outsl
pop
outsb
mov
imul
sub
xchg
fcompl
outsb
nop
add
lret
lret
mov
shr
jmp
jae
or
push
jge
xchg
dec
lret
es
fbstp
ret
jmp
xchg
cli
or
stc
mov
pop
cmpsl
loopne
inc
xlat
test
test
cmpsb
pop
pop
jle
inc
je
sub
ja
fs
lods
jg
lret
jmp
js
loop
cmp
pop
in
jl
mov
xorl
fucomp
xchg
icebp
daa
outsl
shl
insb
inc
xchg
or
pop
out
xor
inc
cmp
inc
jmp
lea
enter
es
fdiv
jae
std
into
jae
test
fldenv
stos
inc
test
js
add
fdivl
mov
cli
xchg
dec
loop
mov
in
or
inc
test
jae
mov
mov
or
incb
push
xor
mov
mov
ss
in
push
pop
adc
and
mov
scas
fiadds
decb
push
mov
xchg
jnp
mov
sarb
sbb
dec
push
pop
sti
cmp
fisubrs
fcmove
xchg
paddusw
hlt
dec
add
xchg
cld
lcall
push
jmp
lds
ljmp
jge
push
mov
in
mov
fwait
pop
imul
xor
rorb
fbld
adcb
adc
push
popa
fstps
cmp
mov
cltd
push
adc
je
xor
mov
pop
jbe
hlt
push
mov
mov
or
push
xchg
iret
dec
sub
or
add
dec
mov
pop
dec
jecxz
push
lods
xor
mov
cmpsl
or
das
fdivs
push
cs
jo
mov
mov
adc
repnz
mov
lcall
shrb
mov
xchg
adc
inc
mov
push
aam
mov
dec
inc
pop
jno
loope
loopne
push
push
test
xor
ss
lea
pop
adc
into
push
and
push
and
cld
push
cmp
mov
call
mov
jmp
add
dec
mov
and
leave
scas
sbbl
add
sub
sti
adc
or
xchg
push
add
fbstp
jnp
outsl
add
loopne
cwtl
push
mov
aas
fstps
mov
daa
add
or
lret
mov
inc
out
ret
fpatan
jg
xchg
call
push
jge
fwait
sbb
int3
xchg
mov
sarl
fwait
sub
rcrb
nop
jne
ljmp
inc
pop
xchg
push
jb
mov
and
ds
aas
negl
pop
jp
cwtl
sub
dec
add
add
mov
push
mov
cmp
mov
xor
stc
popf
call
cmp
subb
stos
add
ret
mov
jmp
ljmp
jb
stos
xlat
cmc
xchg
add
test
pop
aam
in
lods
pop
outsb
fisttps
dec
cmp
mov
mov
mov
push
inc
push
xchg
loop
mov
lea
cmp
popa
sarl
and
hlt
testb
xor
push
push
sahf
adc
lcall
sbb
aaa
xor
data16
xor
repnz
pop
mov
or
mov
leave
pusha
lods
sti
jp
adc
jne
pusha
test
divl
mov
cmpsb
dec
js
movsl
and
dec
inc
mov
mov
rcrl
add
out
popf
bound
iret
ljmp
sbb
or
es
rclb
outsl
mov
sbb
or
dec
ljmp
push
es
adc
mov
fsubrl
aam
inc
inc
movsl
sbb
in
out
in
addl
mov
filds
mov
and
test
xor
stc
icebp
insb
out
mov
xorb
cmpsb
in
mov
loopne
inc
into
out
cmp
push
lock
loopne
popa
mov
sbb
sbb
mov
pop
xor
push
mov
les
mov
movsb
bnd
hlt
cmp
aaa
arpl
js
cli
in
scas
enter
dec
pop
lds
out
lods
pop
int
push
inc
cmc
push
in
mov
inc
ljmp
xor
push
dec
xchg
dec
shlb
pop
bound
test
cmpsb
push
shrb
xchg
mov
sbb
or
dec
dec
test
xor
imul
pop
cmp
cmp
orl
js
fistl
pop
push
out
sub
adc
pushf
ret
jecxz
es
dec
loop
jmp
cs
sbb
xchg
mov
out
out
sbb
inc
lea
sub
sbb
sub
and
mov
ljmp
add
repnz
fcoms
ljmp
mov
cmp
andb
mov
les
pop
xor
mov
das
aad
push
cmp
divb
adc
and
insb
adc
lcall
push
xor
hlt
cmp
cli
jne
sub
movsb
inc
int3
pop
inc
dec
or
ret
filds
jecxz
andl
add
fldcw
xchg
mov
fldenv
adcl
mov
add
aas
jo
pop
push
sub
xor
mov
xchg
sbb
lds
adc
repz
mov
aam
inc
idivl
jno
test
sub
add
push
jb
jmp
and
stos
cmpsl
addr16
push
xor
mov
jp
hlt
sar
xchg
les
pop
xchg
shll
repnz
jno
in
leave
fucomi
lahf
inc
fmull
out
out
imul
ljmp
cmpsl
cmp
mul
cltd
xor
add
in
jbe
and
add
pop
mov
ret
loopne
jg
cltd
pop
imul
pop
inc
mov
pop
inc
pop
xor
cld
jnp
jmp
dec
adc
jp
dec
mov
lods
cmp
xor
inc
xchg
xchg
sub
or
pop
push
inc
mov
add
mov
xor
push
pop
cwtl
dec
mov
cltd
lahf
notl
cmp
lahf
or
push
jmp
sub
inc
sub
fadds
lcall
pusha
orb
cli
nop
packssdw
sbb
add
lock
inc
inc
imul
xchg
sub
scas
xor
and
mov
sub
mov
js
pop
xrelease
sub
mov
inc
andl
cltd
lret
mov
popa
je
inc
lret
test
jmp
cltd
or
movsb
imul
sbb
cmpsb
fidivrl
lret
scas
nop
sub
mov
push
sbb
inc
mov
jne
sub
dec
pusha
stc
andb
mov
sbbl
mov
xchg
sub
mov
enter
inc
leave
mov
aas
mov
sub
mov
inc
loop
xchg
mov
pop
lock
mov
ja
pop
jle
loope
shrb
ss
popf
and
sub
xorl
jecxz
lock
incl
call
add
imul
lods
les
sahf
cmc
int
subl
std
add
ret
or
insl
sahf
adc
dec
cmpsb
loop
push
out
int
lret
arpl
sub
int
jns
outsb
jp
cmpsl
mov
push
outsl
mov
fdivl
dec
dec
out
fidivrl
push
insl
sub
add
mov
dec
loopne
pop
adc
cmpsl
add
sbb
dec
mov
cmp
cmp
movsl
hlt
mov
roll
ret
iret
sahf
xor
int
or
and
mov
mov
call
xlat
movsb
cltd
or
rorl
sub
inc
pop
push
add
xor
mov
scas
ficompl
jo
imul
lds
testl
xor
mov
aad
rorl
insb
sbb
pop
push
pop
xor
out
and
arpl
jae
add
push
andb
fucomip
jp
enter
sub
sub
push
out
mov
fbstp
xorl
sub
shrl
ret
or
push
or
lret
call
lahf
pop
push
pop
ljmp
push
or
cmp
sub
jp
negb
aam
int3
mov
lcall
cmpsb
sbb
shr
decl
sub
ja
dec
pop
inc
punpckldq
je
lret
lods
data16
je
sub
add
clc
push
js
lret
pop
jp
jne
lds
ds
mov
test
mov
cmp
jle
outsb
mov
mov
ret
pop
xchg
xor
xchg
sbb
dec
mov
jne
ror
sub
jg
cmc
mov
ret
jge
aaa
bnd
movsb
jecxz
xchg
dec
mul
adc
jne
ret
add
icebp
repnz
pusha
hlt
inc
push
out
idivb
adc
mov
arpl
pushf
inc
sarb
int
jecxz
loop
dec
add
jae
xor
push
and
jb
cmpsb
push
std
lods
inc
and
mov
stos
fimuls
jg
adc
xor
mov
in
ljmp
out
pusha
sbb
shl
sub
loope
or
sub
stos
xchg
xor
loope
adc
pop
add
sub
mov
xor
adc
addr16
mov
dec
push
jle
mov
jl
jle
loope
push
mov
mov
clc
pop
loop
jae
inc
clc
adc
mov
aam
jl
cmp
push
test
mov
sbb
mov
shll
pushf
inc
push
mov
jg
pop
imul
sbb
mov
ljmp
mov
pop
mov
dec
stos
scas
inc
push
mov
mov
int3
and
test
or
lods
loop
inc
pop
outsb
jbe
or
xor
or
rcr
push
jns
mov
xor
cmp
fcoms
and
mov
out
cmp
cwtl
pop
mov
mov
jecxz
hlt
adc
sub
mov
xchg
pop
sbb
sbbl
pop
aam
pop
xchg
jle
arpl
mov
mov
mov
inc
add
div
and
push
adc
inc
mov
and
or
mov
jecxz
popa
sbb
js
push
cmp
cmpsb
inc
push
jp
xor
test
fwait
clc
push
and
adc
gs
push
mov
sub
sti
shll
je
hlt
loope
sub
dec
bound
mov
xchg
test
cmp
icebp
ret
pop
ret
hlt
jl
jge
push
inc
fwait
mov
push
notb
bound
pusha
fisttpl
sbb
es
jg
xchg
insb
popa
push
lods
xchg
lea
mov
ret
inc
mov
xchg
shlb
lock
popl
and
mov
repz
xchg
jmp
push
dec
and
outsb
add
sbb
mov
test
mov
push
sbb
lcall
or
jo
cmp
dec
push
xchg
fdivs
pop
add
mov
sub
cmp
movsb
push
fcoml
sbbl
push
push
mov
add
sub
jbe
sub
cmp
pop
mov
mov
mov
into
xor
fwait
cmp
dec
out
out
ret
push
mov
xchg
insl
cmp
pop
dec
dec
xlat
jnp
cmp
cmp
mov
mov
cmp
mov
mov
mov
dec
mov
mov
sub
push
xchg
ljmp
sbb
sahf
sub
mov
ficoms
daa
adc
mov
sahf
xchg
inc
fwait
xchg
ja
inc
pop
mov
xchg
jnp
dec
andb
pop
mov
lea
sbb
xorb
movsb
or
dec
nop
mov
movsl
add
cltd
clc
or
mov
mov
fldpi
popf
fisttps
lret
xor
jge
xchg
jmp
lcall
bnd
test
cmpsb
jae
push
ret
shrl
std
push
pop
in
jno
ret
movl
out
push
fsubrl
mov
mov
mov
addb
int3
subl
ljmp
call
popf
add
jle
or
test
mov
shll
dec
stos
inc
dec
inc
xchg
test
inc
and
push
fiaddl
or
jb
leave
sub
jbe
sub
enter
and
mov
test
sub
xchg
jo
shlb
dec
pop
imul
das
mov
add
cmp
test
xchg
loope
rcll
lods
mov
lea
and
mov
fdiv
cmp
jp
sub
mov
mov
call
pop
pop
xchg
ss
aad
jle
inc
nop
mov
repnz
xlat
sbb
lods
pop
mov
cmc
jno
in
and
sbb
jns
idivb
adc
gs
aam
fs
je
lods
xor
in
repnz
pushf
insl
shrb
add
and
imul
cmp
xchg
dec
into
insb
push
cmp
or
movsl
push
mov
dec
repnz
out
test
mov
lods
inc
mov
adc
inc
mov
popa
int3
mov
fldt
or
add
test
jmp
lahf
dec
fwait
enter
in
pop
test
fiadds
mov
adc
mov
out
clc
scas
jbe
mov
iret
cmc
mov
stos
sar
mov
add
inc
push
sti
and
fcmovu
mov
lods
mov
les
loope
mov
pop
popa
fcomps
push
scas
push
pop
xorb
aad
jb
int3
movsl
icebp
sahf
scas
inc
or
aam
or
shll
and
test
mov
loopne
lods
pop
push
js
leave
ret
sarl
arpl
shl
push
cmp
push
xchg
bound
inc
fidivl
loopne
and
rcll
dec
push
fisttps
shrb
jge
push
or
sbb
xchg
into
push
aad
rcrl
push
and
shl
lahf
stos
and
movsl
xchg
hlt
inc
pop
clc
mov
push
notl
int
mov
das
daa
dec
push
imul
sbb
loope
lds
sti
imul
xchg
push
jmp
fistps
pop
mov
dec
mov
xchg
iret
lds
push
inc
mov
fstpt
and
mov
cwtl
cmp
push
notl
add
ret
dec
cmpsb
fildl
test
xchg
mov
and
mov
out
push
push
add
lea
cmp
daa
mov
test
cmp
loop
xchg
sub
pop
add
adc
popf
cmpsl
xor
jmp
sbb
test
pop
insb
xlat
cmc
pop
push
clc
out
sub
lret
iret
out
push
and
xchg
scas
addl
sbb
loopne
not
inc
popf
inc
js
xchg
and
xchg
sub
ret
daa
aas
shlb
fisttpll
mov
sub
fbstp
out
enter
xor
int3
in
sbb
cmpsl
xlat
pop
into
fisttpll
data16
dec
pusha
push
notl
aad
movsb
or
cltd
xor
lods
lock
stc
icebp
pminub
fiaddl
and
fiadds
xchg
and
pop
cmp
mov
lea
movsl
sbb
xchg
pusha
aad
cmp
das
xor
mov
jle
lods
test
leave
repz
imul
dec
scas
cmp
push
pop
movsb
ret
jmp
aaa
repz
mov
inc
mov
pop
push
pop
mov
mov
sbb
pushf
icebp
fisubrs
ss
mov
adc
out
pop
sbb
jecxz
dec
pop
and
mov
sbb
xor
mov
sbb
fcomip
dec
xchg
ret
lcall
xchg
jge
es
lods
rcl
sbb
daa
outsl
vunpcklpd
xchg
cmc
or
jnp
push
ficoml
int3
clc
fbld
cmp
add
ret
and
dec
aad
leave
in
xchg
out
dec
push
clc
jge
popa
xor
gs
stos
nopl
sbb
adc
or
sbb
lcall
stos
sub
dec
ret
lods
lods
cmp
pop
jmp
or
popf
arpl
sbb
mov
js
jns
movsb
mov
cmc
push
push
cmc
push
sub
inc
subl
mov
sbbl
sahf
popf
bound
add
adc
pop
pushf
xor
pop
movsl
xor
xor
in
sbb
lea
jbe
js
pop
and
sarl
inc
or
movb
push
jno
stc
add
inc
jge
negb
jns
dec
nop
push
xchg
movsb
cmp
cmp
sti
pop
adc
dec
adc
stc
inc
inc
jecxz
addr16
mov
mov
dec
out
movsl
mov
das
pop
mov
add
dec
push
mov
or
lea
mov
aam
mov
or
int3
int
std
into
data16
mov
loopne
jmp
and
lcall
je
cltd
lock
xor
lahf
inc
mov
push
outsl
sub
pop
mov
xor
pop
sub
xorb
and
fsubrs
mov
testl
mov
add
inc
pop
xchg
push
stc
jnp
dec
fistps
jno
inc
jb
lret
into
enter
or
dec
pop
sarb
fsubp
mov
fsubr
mov
sub
in
in
arpl
mov
jp
cmp
xor
lret
inc
enter
xchg
mov
pop
add
or
lock
addl
cli
cli
daa
lret
xlat
push
xchg
jg
jbe
xchg
sub
jg
and
setl
push
sti
test
cmp
fs
shrl
pop
mov
mov
fs
daa
or
fwait
xchg
cmp
cmp
fwait
loop
cmpl
pop
cmp
es
xor
fcoml
daa
pushf
popa
loopne
adc
into
mov
or
ffree
insb
sub
pop
xor
mov
mov
fisttpl
lods
cmp
pop
test
sbb
jae
sbb
pop
pop
fstps
dec
push
fdivrl
scas
push
jne
xor
sar
cmp
outsl
jbe
xchg
rorb
clc
jp
add
lds
jno
dec
lock
add
mov
orl
in
arpl
aas
in
cmp
cmc
or
jge
mov
push
pop
jne
mov
loopne,pn
test
addr16
or
es
cmpsb
sbbl
shlb
test
ljmp
mov
xchg
adc
sbb
iret
fldenv
movsl
pop
cmp
nop
jle
mov
pop
jns
lcall
fadds
cs
cmc
add
xor
push
fcoms
repnz
mov
outsb
pop
js
sbb
ret
outsl
xchg
dec
jbe
out
cmpsl
pop
lods
lret
adc
inc
in
xor
jo
jp
lds
cwtl
xor
cmp
in
sub
inc
bound
or
outsl
cmpsl
insl
dec
rcrb
testl
andl
aam
jg
cli
loope
cwtl
je
mov
cmpsl
cmp
jo
jmp
inc
mov
inc
cwtl
xchg
xchg
inc
dec
scas
movsl
inc
pop
xlat
iret
rcr
jge
lods
imul
sarl
mov
mov
push
inc
ret
test
fldcw
hlt
rcl
push
outsb
std
outsb
aaa
fldt
sub
or
adc
dec
mov
mov
push
or
xchg
and
pop
push
leave
cld
cmpsb
push
cli
in
es
jl
pop
and
mov
or
cmp
xchg
pusha
je
aam
xor
xor
cmp
xor
enter
cmpsb
mul
push
xor
mov
cmpsb
push
pop
jge
cmpl
int3
xor
add
cvtdq2ps
ret
mov
rorl
lret
mov
shrl
mov
je
push
pop
xor
pop
and
cmp
dec
fnstsw
pop
in
add
lock
push
jge
test
jnp
adc
negb
in
in
mov
gs
push
ja
or
test
mov
or
dec
in
xchg
out
mov
inc
sbb
inc
test
in
sub
fwait
rcrl
mov
cmp
mov
xchg
sbb
xchg
push
sarb
jo
add
ja
push
mov
lods
mov
add
arpl
cmp
inc
fdivp
lret
popa
in
mov
jnp
sub
lahf
fidivrl
add
int
xor
sbb
mov
gs
xchg
loop
loopne
inc
ret
dec
inc
jb
mov
push
xchg
shl
jmp
sub
mov
mov
cmp
jae
daa
jmp
int3
jle
or
sbb
fsubl
shrb
cltd
daa
jns
sbb
mov
push
sub
imul
cmpsl
xor
sub
xor
xchg
adc
cmp
scas
scas
mov
lea
pop
inc
aaa
lret
sti
pop
into
fmull
mov
loopne
and
inc
pop
inc
test
cmp
fcompl
lock
fwait
or
cs
mov
aam
jge
mov
mov
imul
cmpsl
in
fldcw
outsl
into
jl
jecxz
sub
shll
pop
pop
testb
add
xor
aas
jns
cltd
sub
adc
lcall
ljmp
lret
inc
fwait
jae
lahf
es
fisubrl
arpl
xchg
adcl
shr
xchg
push
sti
fsubl
lahf
cwtl
jne
lret
mull
push
daa
jae
jl
fs
mov
push
lock
mov
adc
mov
add
inc
out
xlat
fildll
jno
cld
sub
and
cmp
and
dec
or
jg
test
adc
adc
fs
test
jno
shlb
fsubrl
ret
jmp
pop
popa
idivb
out
xchg
decb
test
inc
push
sbb
adc
aaa
push
testl
jge
ret
xor
mov
leave
or
dec
stos
jnp
lods
mov
cltd
cli
add
lcall
fdivrl
xor
jbe
cmpsl
mov
xlat
and
subb
cld
add
sbb
in
scas
nop
pop
test
sbb
femms
fdivs
lahf
outsl
add
cmc
inc
pusha
adc
aaa
hlt
jno
adc
adc
jno
mov
aad
add
aas
adc
mov
inc
xchg
repz
int3
cld
xchg
xor
sbb
clc
jecxz
rol
inc
jo
jbe
mov
popa
xchg
and
cltd
jl
xor
dec
in
xchg
cli
repnz
sub
test
notl
lret
mov
iret
popa
xor
cli
sbb
cld
sbbl
hlt
lret
sbb
imul
or
jnp
imul
adcl
xchg
das
stos
sbb
xlat
pop
icebp
xchg
jle
andl
pusha
add
jl
inc
insb
push
call
mov
cmp
hlt
movsb
shrb
test
pop
mov
pop
je
adc
bound
add
rcr
andb
cmp
jo
stos
inc
orps
push
dec
cmp
adc
inc
into
and
ret
hlt
cmc
push
sub
xchg
pop
enter
jge
and
sti
sub
imul
xor
sbb
out
sbb
iret
neg
jne
xchg
mov
dec
push
jle
pop
popf
into
ljmp
mov
inc
int
dec
es
mov
push
or
rcll
adc
push
add
gs
mov
lahf
or
insl
mov
xchg
and
push
jge
add
testb
movsl
push
lods
mov
or
push
push
jge
sub
loopne
add
or
loopne
js
adc
stos
xchg
lock
lret
inc
fisubs
jmp
mov
leave
sti
jecxz
cmpb
lret
dec
test
aas
insb
icebp
add
cmp
hlt
pop
in
mov
lods
mov
lds
js
lret
paddsw
icebp
orl
dec
loop
loopne
inc
fcmovne
loope
pop
leave
push
pop
dec
lahf
sbb
jnp
mov
ret
mov
pop
sti
into
loopne
ss
loop
mov
cwtl
sbb
rcll
test
mov
sub
and
adcl
cmp
das
pop
sub
repnz
fcomps
test
mov
sbb
mov
or
mov
and
or
jae
cld
leave
ret
cmp
frstor
xor
ds
mov
mov
inc
cwtl
rclb
shrl
insb
testl
cmp
push
fisubrs
pop
mov
and
outsb
push
jno
jnp
cmp
and
jg
xor
nop
cmp
leave
xchg
idivb
xchg
cmp
cmp
cmp
out
and
adc
ret
and
sub
addl
add
adc
das
ds
sub
mov
sub
outsb
jo
pusha
sbb
loopne
xchg
imull
daa
or
sub
and
and
cmp
mov
std
xchg
push
test
xchg
sarl
leave
push
stos
inc
popf
pop
and
sub
cld
pop
and
hlt
pop
inc
xorl
dec
fmull
loope
sti
fs
inc
and
cs
or
and
fistpl
lret
in
pusha
nop
cmpsl
push
in
add
out
popa
jmp
std
sbb
jmp
lds
adc
cmp
into
xor
aam
stos
jnp
xchg
push
fs
call
imul
rcll
cmp
push
xchg
sbb
cwtl
mov
cmp
test
xchg
fs
dec
cmp
icebp
sbb
dec
ds
push
jl
jp
and
sbb
insb
pop
mov
outsl
or
jge
lods
pop
dec
daa
inc
scas
inc
ja
iret
fistl
inc
mov
push
mov
lcall
lods
xor
push
mov
push
jo
mov
addb
mov
shrb
dec
data16
fsubrp
stos
mov
xor
adc
and
stos
add
jg
lahf
sub
push
cmp
popf
stc
push
out
andl
and
push
dec
clc
aas
in
cmp
mov
inc
cmpsb
cs
loop
das
adc
cwtl
mov
or
or
clc
or
sub
stos
not
sahf
cmp
mov
aad
add
pop
arpl
dec
scas
dec
lret
fnstsw
mov
dec
push
sbb
adc
xor
sbb
fwait
aaa
ja
in
decl
jno
and
xor
jecxz
ss
mov
sub
push
idivb
sub
dec
dec
xlat
insl
test
or
mov
add
aas
loop
add
add
xor
jg
or
test
fsubrl
adc
jl
xlat
jmp
or
sahf
sbb
push
addr16
and
bound
hlt
inc
inc
enter
adc
jg
inc
hlt
mov
and
iret
or
fwait
pushf
push
mov
loop
jbe
mov
jne
lds
dec
sub
outsl
or
arpl
ret
jle
out
js
aam
add
fistl
cs
adc
add
add
js
adc
xchg
mov
push
add
repnz
mov
out
mov
xchg
jno
ds
jbe
mov
sub
cwtl
push
imul
sub
mov
or
xor
mov
dec
jecxz
jne
jge
inc
and
int3
in
xor
shll
cmp
add
loop
add
fbstp
arpl
ds
loopne
repnz
aam
fcoml
scas
lahf
test
pop
jge
pop
mov
incb
ljmp
clc
push
mov
das
push
or
orb
stos
mov
pop
insb
lods
push
lock
inc
and
xor
stos
add
or
hlt
cmp
adc
and
call
lret
jnp
gs
xor
pop
bound
data16
testb
ret
mov
push
stos
adc
xor
daa
mov
cmpsl
mov
ret
push
stos
repz
call
mov
xor
cmp
icebp
cmp
pop
xor
shl
ret
pop
and
mov
cmp
cmp
adc
push
cwtl
cmp
gs
jae
outsb
mov
pop
cmp
pushf
pop
sbb
jo
pushf
lret
into
mov
mov
adc
push
cmc
into
aaa
push
icebp
pop
xor
jmp
js
fsubs
ja
pushf
je
imul
sub
pop
into
jmp
push
jp
lods
js
mov
testl
inc
pop
bound
jge
pushf
xchg
shr
add
out
test
idivl
push
push
jbe
mov
enter
and
xchg
add
cmp
mov
push
pop
mov
or
xchg
jmp
sub
xchg
lahf
ljmp
testb
jg
add
mov
inc
cmpb
out
mov
shl
divl
fistpll
cs
add
dec
jecxz
dec
imul
pop
fs
rol
aam
xchg
popf
stc
rolb
outsl
jl
adc
hlt
mov
cmp
add
xchg
cltd
jecxz
cmp
xchg
out
push
repz
loope
jl
ret
imul
push
xor
xchg
dec
filds
dec
stos
cmp
fisubrl
loopne
mov
push
lods
das
push
cld
test
push
ljmp
jb
ds
ret
mul
jp
mov
push
es
popa
jnp
xchg
sub
dec
out
adc
and
lock
jg
mov
inc
loopne
fimuls
out
lods
xlat
mov
and
repnz
stos
push
mov
mov
das
bound
lret
xor
sub
iret
data16
dec
dec
jecxz
notl
pop
xor
pushf
pop
cmc
push
add
movsb
push
and
clc
orl
xchg
and
or
push
stos
cmpsl
xor
lods
inc
movsb
inc
lret
bound
iret
xor
inc
fsubr
mov
jg
daa
mov
add
add
test
mov
lret
idivb
scas
cs
repnz
cmp
push
mov
mov
fstl
fidivrs
adc
mov
adc
inc
aad
lods
inc
out
sbb
pop
mov
dec
mov
push
adc
mov
cltd
lods
inc
xchg
mov
pusha
test
int
imul
jge
and
dec
inc
dec
mov
mov
sub
loope
adc
iret
mov
cltd
xor
fidivrs
push
cmp
fnstenv
adcl
xor
fmul
in
xchg
sub
or
dec
mov
jge
fsubrl
ja
les
add
fimull
lea
movl
jno
jp
jo
pusha
mov
js
int3
add
adc
and
ljmp
in
add
xor
xchg
jp
lret
fwait
mov
mov
arpl
or
push
mov
gs
xchg
add
rcll
int3
xor
pop
cmc
movsb
and
cmp
adc
fwait
int3
jo
addl
jno
jle
xor
ja
cmpb
leave
cmp
jle
push
jmp
fildll
mov
dec
fs
in
push
push
cmc
sub
mov
xchg
gs
int3
mov
inc
not
pop
and
or
sbbb
jb
inc
cmp
push
push
pop
out
fistl
fnstsw
sbbl
push
mov
xchg
add
push
jecxz
xchg
jmp
cmp
push
es
lahf
inc
push
mov
push
push
orl
dec
stc
inc
fsubrs
jae
and
pop
mov
leave
fisttpl
movsl
or
mov
jo
dec
xchg
lds
add
adc
push
cmp
idivl
lods
sub
pop
shrb
mov
repz
pop
cmc
add
adc
and
push
dec
mov
push
arpl
sbb
fmuls
mov
fdivrs
mov
mull
cwtl
sbb
mov
dec
push
inc
faddl
ror
inc
fs
xchg
inc
xchg
test
jb
and
adc
xchg
aaa
adc
lret
sti
pushl
sub
out
and
mov
mov
mov
push
aam
sahf
shlb
in
add
outsl
ss
jo
pop
fiadds
mov
mov
sbb
mov
pop
adc
add
lcall
pop
leave
jo
pop
adc
inc
mov
addb
lcall
jb
lock
cmc
xchg
or
les
std
jg
adc
or
push
cli
das
bound
mov
adc
and
inc
mov
and
push
cld
adc
inc
pop
enter
popf
sbb
cld
sbb
or
or
mov
lock
push
test
js
jecxz
outsb
into
movsl
sbb
dec
loope
inc
pop
mov
mov
ss
push
in
push
stc
lock
cmp
push
xorl
dec
jmp
dec
cmc
shrl
add
hlt
out
popa
ljmp
jb
mov
outsl
sub
pop
pop
addr16
inc
mov
jnp
adc
fdiv
hlt
int
cmpsb
xor
pop
les
jae
add
insl
inc
ja
fmuls
insl
test
mov
xor
add
cwtl
and
and
ja
inc
ja
jno
pusha
or
mov
dec
sub
aam
insl
xor
pop
inc
mov
and
cmp
pop
adc
pusha
pop
cmpsl
push
mov
pop
aaa
loop
dec
inc
loope
and
push
push
jmp
xlat
ss
push
dec
sbb
cmpsl
addb
cltd
pop
xor
push
mov
in
aas
mov
adc
int
mov
in
add
loop
ficomps
shlb
cs
inc
imul
jmp
test
dec
mov
jge
add
lock
popa
fwait
push
addr16
in
mov
cmp
dec
int3
data16
in
aam
push
sub
andb
mov
rcrl
mov
mov
aad
ljmp
mov
scas
push
inc
sti
inc
inc
rcrb
outsb
mov
dec
mov
xor
xorb
or
filds
fldl
mov
mov
sub
dec
dec
inc
ficoml
insl
cmp
sti
int
xor
loope
cmpsb
fwait
fwait
inc
jp
inc
test
scas
jno
cmpsb
mov
dec
mov
cmpsl
dec
popa
call
xchg
sub
popf
mov
mov
fiaddl
filds
cld
lcall
adc
xor
bound
ret
scas
adc
andl
das
sahf
sbb
nop
loopne
popf
push
mov
adc
orb
sbb
mov
and
push
out
adc
jmp
inc
ja
fistl
stc
ja
mov
adc
or
loop
push
mov
lahf
xor
stos
aad
test
and
repz
sbb
fsubs
push
ja
cmc
fs
push
dec
std
movb
dec
push
dec
fsubl
lcall
in
cld
dec
inc
insl
and
rorl
or
mov
adc
jbe
mov
mov
jb
jno
add
dec
jo
inc
lock
dec
mov
mov
xchg
sbb
mov
mov
and
sbb
scas
inc
leave
pop
adc
nop
in
into
divl
test
sbb
ja
adc
inc
xor
jns
pop
and
in
cmp
outsl
jno
in
and
popf
cmp
fbld
and
arpl
inc
bound
sub
pop
xor
nop
divb
or
push
fisubl
cld
inc
mov
mov
int3
movsl
fucom
lods
enter
sub
je
bound
aaa
or
cmp
jge
dec
push
mov
fcmovbe
adc
dec
xor
mov
mov
int3
xor
aam
into
shr
scas
push
lds
test
aam
mov
xchg
add
mov
or
repnz
add
clc
jle
push
bound
int3
dec
jns
inc
les
xor
jnp
jbe
or
xor
or
imul
pop
mov
jge
jg
popl
xchg
mov
aas
mov
ja
push
xor
jle
or
fisubrl
lret
pop
xchg
lock
dec
das
jmp
gs
mov
pop
out
and
sbb
xor
mov
jmp
push
shlb
pop
adc
cli
xor
pop
dec
filds
jge
mov
out
daa
add
jge
ss
fs
pop
inc
mov
test
es
mov
push
rcrb
lods
lock
mov
int3
sub
stos
xlat
pop
imul
jge
inc
sahf
std
jbe
mov
fstl
cmovb
dec
lock
sbb
push
jl
insl
xchg
mov
xor
inc
data16
and
jns
xchg
or
stos
daa
pop
pop
cmc
inc
mov
jl
dec
sub
repz
dec
loop
rcrl
jl
pop
fsubs
and
cmpsb
scas
mov
push
out
imul
or
pop
jnp
cmp
lock
jg
push
stos
xor
insl
mov
in
outsb
rcrl
or
sti
pop
mov
outsb
andl
inc
add
jg
push
and
or
fistpl
cmc
sub
mov
jp
push
mov
cmp
xchg
hlt
mov
hlt
adc
div
daa
bnd
sub
adc
jecxz
cli
jne
mov
outsl
in
push
xchg
dec
pop
or
lret
dec
movsl
fildl
arpl
in
int
lods
lea
xor
sbb
inc
mov
push
jmp
mov
adc
test
mov
int
nop
das
inc
ret
movsb
les
out
out
scas
in
lea
stc
or
in
xchg
nop
int
cmp
fstps
loope
push
fdivrl
repz
inc
fdivs
dec
rcrb
dec
repnz
pop
fiaddl
orl
xor
add
inc
cmp
adc
ljmp
or
mov
pop
xchg
movsb
jb
and
jb
outsl
mov
shlb
xchg
cmc
xor
cwtl
cltd
mov
mov
jbe
push
push
ljmp
jno
test
xor
mov
sub
inc
mov
mov
loope
cmc
fdivrs
sub
jns
movsb
jmp
push
or
stc
into
fsubl
scas
sub
cwtl
cmp
mov
daa
test
mov
call
push
or
or
lods
jge
and
pop
insb
mov
pop
and
jle
jge
sub
icebp
xchg
inc
jb
inc
jecxz
stos
dec
xchg
mov
adc
data16
cmp
add
sub
gs
mov
aaa
outsb
add
add
lods
aaa
lea
mov
sbb
adc
and
lods
cmc
push
ljmp
xchg
cmp
cmc
push
mov
lret
insl
jle
jmp
ret
jge
push
fcoms
mov
sbb
in
in
sbbl
arpl
int3
sbb
mov
inc
cld
jno
or
fsubs
popf
sbb
hlt
test
inc
or
icebp
mov
mov
mov
sbb
into
push
xchg
ret
insb
mov
adc
xchg
int
ret
xor
fisubl
mov
push
scas
loope
xchg
jb
imul
mov
outsl
inc
mov
pop
scas
push
mov
movsb
in
and
mov
arpl
inc
fsts
mov
push
inc
pop
sbb
sub
mov
cmp
daa
rorb
xchg
icebp
mov
mulb
movsb
addb
xor
jmp
int3
sbb
jno
rorb
sarl
fimuls
push
ret
push
ja
dec
pop
mov
movsb
repnz
test
and
iret
outsb
jnp
shrl
imul
loop
in
cld
adc
add
push
fimuls
test
inc
sbb
outsl
mov
iret
fcmovnu
into
cmpb
lods
xor
pop
arpl
icebp
mov
es
xor
pop
aam
cmp
out
add
ljmp
aad
push
or
push
sbb
daa
cltd
xor
sarb
in
roll
lcall
pop
fimull
rolb
sbb
inc
cs
fs
pop
jnp
sub
mov
push
clc
test
inc
dec
dec
out
test
ja
inc
push
lea
pop
rep
movsb
or
push
jmp
lcall
sub
ja
cwtl
adc
nop
sahf
das
mov
inc
xor
sbb
lret
bound
imul
aad
mov
int
jnp
push
fistpl
push
lods
push
mov
add
int3
xchg
out
fwait
aam
jp
pop
out
xchg
mov
bound
mov
or
int
test
sub
mov
inc
out
jnp
ds
pushf
cmpsb
sti
xchg
add
out
inc
sbb
push
adc
add
add
push
add
mov
sbb
pop
sbb
sti
stos
jb
stos
inc
fcomps
and
and
repz
loopne
and
sbb
testl
cmp
mov
push
inc
jle
loope
insl
mov
insl
sbbb
mov
mov
pushf
popa
pop
insb
fwait
ljmp
adc
es
sub
dec
mov
jb
pop
jg
roll
xor
addr16
or
mov
add
fnsave
push
cltd
mov
inc
jp
cs
mov
test
dec
pop
adc
sahf
jb
loopne
lods
push
push
jge
mov
inc
out
push
test
ljmp
int3
cltd
adc
mov
imul
cmp
push
push
rclb
dec
cmp
int
ja
stos
test
mov
cmp
mov
repz
stos
mov
repz
sub
icebp
sbb
stos
mov
lock
lahf
imul
lret
and
sti
mov
jp
xor
mov
fs
test
decb
inc
inc
test
loop
or
rcrb
mov
inc
adc
dec
dec
imul
popw
cmp
or
orl
and
sahf
xor
adc
or
negb
push
xchg
aad
or
inc
out
test
sahf
fnstsw
pusha
add
or
pusha
dec
cmp
addr16
fs
cmpb
adc
mov
and
nop
fdivr
rcrl
push
in
bound
movsl
add
dec
std
xchg
jl
insb
aas
sbb
mov
fdivr
or
xor
or
mov
and
sbb
xor
push
jle
ljmp
arpl
sbb
push
ret
gs
lea
mov
rol
movsl
dec
outsb
mov
push
adc
arpl
pop
jno
xchg
imull
or
lock
jl
mul
inc
lods
lcall
and
ljmp
cmc
test
mov
mov
out
mov
loopne
add
out
pop
mov
cltd
mov
dec
lods
jge
int
jae
jo
dec
mov
jmp
mov
push
stos
mov
cmc
xor
mov
repnz
lock
fstpl
loope
mov
call
or
xchg
fcomps
nop
pop
inc
mov
pop
lds
push
jae
xor
dec
pop
mov
popa
and
sti
jb
dec
jae
adc
cmpsl
jb
inc
in
jg
popf
and
xchg
push
outsl
lcall
cmp
xchg
lea
sti
and
and
out
fidivrl
jg
push
mov
into
pop
stos
subb
sub
mov
push
fcmovne
iret
lea
add
cmp
fcoml
cmc
stos
xchg
cmp
inc
sti
add
xor
pop
mov
jl
or
pop
fdivs
insl
mov
jg
icebp
pop
in
cmp
fucomip
mull
mov
jle
inc
push
scas
mov
cli
dec
loope
std
sbb
lock
ret
inc
lret
loopne
push
xlat
xor
mov
jno
popf
sub
scas
rcrb
mov
repz
leave
jae
aad
sbb
pop
decb
sbb
sub
mov
xor
pop
add
lods
jg
jo
jle
shl
cmp
pop
repnz
xor
rcrb
jmp
mov
jp
ljmp
lea
add
cli
daa
andl
mov
jmp
mov
jnp
fiadds
test
iret
sbb
pop
inc
xchg
mov
fnstcw
inc
call
xor
push
inc
add
sbb
pushf
cmp
fldenv
cmc
mov
test
xor
lea
in
pop
add
divb
mov
int3
iret
stos
rolb
imul
lcall
push
cmp
pop
inc
pusha
mov
sbb
inc
add
hlt
mov
mov
or
js
push
stos
ret
das
cmpsb
sbb
dec
mov
push
arpl
sbb
cmpl
shll
and
add
ja
les
mov
int3
mov
out
and
fcomps
mov
xor
push
jg
jnp
rclb
push
and
scas
add
fadds
hlt
pop
mulb
pop
jge
cmpb
and
shrl
push
sub
fbld
adc
cmp
jns
and
stos
inc
xor
jno
jno
ds
xchg
xchg
inc
cltd
adc
push
in
push
jmp
lods
xchg
daa
imulb
and
sbb
fs
or
push
jb
popf
or
jp
inc
stos
pushf
les
rsqrtps
aaa
dec
int3
inc
fcoms
push
loope
jnp
out
inc
pop
sub
mov
shrb
aaa
ds
in
adc
push
repnz
dec
in
push
cmc
mov
dec
sub
mov
outsl
daa
cmpsl
sub
mov
imul
add
loop
or
add
test
cmpsb
jns
fcomps
pusha
mov
mov
or
cmpsl
adc
xor
cmp
mov
jb
popa
sub
addr16
pushf
arpl
sti
jne
icebp
sbb
mov
mov
sbb
mov
mov
inc
inc
sbb
gs
mov
ret
fisubs
dec
andl
loope
hlt
mov
clc
cmp
cmp
dec
mov
or
inc
jge
loopne
mov
pop
mov
aam
hlt
mov
fidivs
pop
loop
jbe
xchg
bound
movsl
rcrb
jle
in
lods
cmp
out
je
out
cmp
nop
in
daa
rcll
jg
loopne
das
push
fistl
inc
shlb
iret
lcall
inc
aad
aam
arpl
int3
xchg
and
cmc
jne
out
jp
imul
test
sbb
les
daa
pop
hlt
pop
scas
in
push
fmuls
add
out
xor
lar
cwtl
ljmp
fcomps
movb
jp
lock
xor
insb
imull
pop
mov
pushf
nop
push
cld
rcll
mov
sti
ret
mov
mov
in
adc
mov
call
xor
rorl
cmp
jae
loop
lret
rcrl
mov
inc
push
mov
popa
pop
fld
mov
xlat
das
xchg
rcrl
enter
scas
scas
leave
pop
add
arpl
push
loop
ljmp
scas
insl
scas
rcrb
jge
hlt
adc
xchg
cmp
in
test
stos
inc
pop
push
cld
lcall
mov
imul
inc
insl
mov
fstpl
add
pop
sti
cmpsl
dec
hlt
adc
and
xor
cmpsl
mov
outsb
sub
sti
faddl
sub
cltd
int
pushf
testb
cltd
push
loop
popf
cmp
or
jmp
arpl
push
mov
ja
xor
leave
cmp
stos
int
push
sub
in
enter
push
daa
in
je
jbe
jnp
lea
lahf
aaa
push
mov
lods
sbb
psraw
test
cmc
int
popa
scas
mov
mov
jg
cli
stc
ljmp
mov
fistl
je
mov
inc
adc
cmp
enter
jae
jno
pop
mov
push
and
jnp
jmp
das
add
lcall
jmp
cmp
aam
sbb
mov
jo
call
shl
cmp
nop
lods
flds
dec
xchg
into
fimull
push
scas
lods
outsl
mov
add
daa
cli
in
call
and
jnp
dec
stos
orl
push
imull
aam
dec
cmpsl
aam
inc
imul
test
xor
out
xchg
pop
fld
mov
movsl
xor
mov
in
daa
mov
imul
and
shll
mov
or
or
loopne
aas
jecxz
in
push
sub
or
fisubrs
adc
js
cmp
into
jmp
clc
adc
push
fisubrl
and
mov
cli
int
fxch
push
mov
adc
aam
mov
stc
inc
test
jnp
sbbl
bound
cmpsb
les
lahf
xor
mov
insl
outsb
pop
mov
ljmp
insb
cmpsl
pop
push
push
push
mov
mov
push
push
dec
adc
js
stos
in
sub
xor
fdivs
movsl
fs
xor
mov
in
pop
mov
pop
lret
lods
jge
and
je
cmp
jg
rorl
test
dec
in
ss
dec
es
lods
xchg
aaa
mov
inc
ja
and
xor
movsb
jl
jbe
and
sub
lret
aaa
daa
jb
pop
push
jno
pop
mov
sub
out
add
mov
shrb
popf
and
das
mov
jle
stc
scas
repnz
dec
mov
dec
aad
xchg
push
aad
in
push
mov
leave
pushf
mov
mov
arpl
fstl
test
push
mov
movsl
cmp
mov
shlb
sbb
xchg
mov
pushf
scas
aad
jecxz
movsb
pop
out
mov
nop
mov
fsubs
fsubs
sti
mov
loopne
sbb
sbb
addr16
cmp
mov
in
mov
xor
fs
aaa
pusha
fisttps
cmpsl
fadds
divb
mov
inc
sbb
lcall
mov
mov
popf
incb
or
fwait
mov
jmp
push
mov
gs
ds
push
test
outsb
in
jbe
into
loop
test
xor
push
push
out
mov
xor
nop
loopne
aas
mov
dec
xchg
cli
lcall
cwtl
test
and
loopne
mov
mov
sbb
mov
mov
dec
es
jno
cmp
int3
cs
mov
cmp
stos
addl
das
add
es
test
jbe
push
call
cmc
cmp
stc
xorb
jae
inc
aas
popa
outsb
ret
pop
push
lods
and
mov
scas
mov
lods
jge
repnz
hlt
xor
sahf
xor
lcall
std
mov
pop
xor
xchg
add
fistpll
push
adc
aaa
and
cld
sbb
shll
mov
add
push
clc
mov
ficomps
add
or
sti
or
cmp
stos
pop
rorb
dec
push
int3
lahf
push
mov
leave
xchg
or
pop
test
pop
adcl
jp
shr
mov
jge
mov
mov
in
out
stc
sub
sbb
jle
cmp
jl
out
push
dec
cltd
jmp
mov
xor
inc
divl
lock
dec
and
xlat
push
incb
pop
push
stos
lea
fnstenv
sbb
mov
mov
fwait
outsb
add
shrl
ds
cmpps
mov
into
jb
adc
push
xchg
or
int
cmp
leave
xor
decb
pop
std
call
mov
ficoml
ss
sarl
repz
sti
mov
mov
arpl
pop
aaa
daa
or
scas
or
stos
adc
gs
mov
xchg
jmp
rcr
das
mov
es
and
jp
rcrb
mov
dec
or
mov
sub
xor
ljmp
cmp
cmp
in
addr16
nop
lock
xor
icebp
or
mov
mov
fwait
pusha
test
leave
cwtl
div
mov
fisubrs
pop
add
mov
lea
lea
in
mov
mov
mov
out
leave
jbe
push
add
pop
cmp
xor
into
gs
mov
add
sbb
sbb
dec
cli
pop
test
sti
aad
add
adc
xor
negl
xor
mov
mov
push
and
jl
imul
lea
jg
xchg
sti
popa
sbb
test
mov
dec
mov
cmp
fidivl
test
pop
js
mov
push
dec
fists
cmp
or
stos
xchg
cmp
lods
cmp
in
adc
xchg
xchg
cwtl
mov
add
cmp
inc
jecxz
mov
mov
jp
add
test
or
cmp
int3
lret
xor
insb
xchg
mov
ret
in
adcb
ds
jb
and
cli
mov
xor
dec
fdivrl
enter
fisttpll
sbb
jnp
addl
or
shrl
int
adc
pushf
sbb
out
xor
loopne
jne
pop
inc
jecxz
mov
lret
in
inc
daa
lods
mov
pop
gs
shlb
xchg
into
adc
mov
pushf
jno
jl
xchg
test
int3
inc
int
cmc
lods
dec
test
into
add
insl
lcall
jg
adc
shrb
lret
repnz
dec
aaa
iret
les
scas
push
inc
out
or
in
fcmovbe
roll
arpl
mov
subl
in
push
mov
mov
and
mov
mov
push
das
fwait
jb
and
std
rcll
stos
mov
inc
pop
neg
inc
cmpsb
into
pop
jecxz
gs
pop
mov
xchg
test
fistps
std
pusha
pop
out
push
xchg
cmp
shlb
lcall
inc
jne
std
out
lea
dec
pop
cli
icebp
aaa
mov
out
fisubl
loop
fstpl
or
mov
nop
sbb
push
adc
jnp
mov
jmp
cmp
cmc
ret
lock
push
pop
mov
xlat
and
pushf
push
jle
imul
imul
mov
jnp
push
loop
jbe
jne
push
push
pop
pop
add
shr
insl
aaa
mov
jbe,pt
lret
loopne
outsb
inc
mov
jae
xchg
cli
push
xor
and
test
jo
or
dec
and
popa
ss
pop
xchg
push
mov
sub
mov
xchg
divl
xchg
gs
ds
enter
xchg
popf
cmp
fcompl
mov
bnd
cld
jns
xor
fcomps
nop
mov
mov
lret
fcmovne
sti
pop
jo
aas
ja
insb
test
jne
cmc
decl
push
shr
push
xchg
aam
call
cmp
push
mov
aas
xchg
ss
mov
pop
sub
mov
fisubl
fwait
imul
mov
iret
xchg
enter
mov
in
push
fcmovnbe
iret
or
xchg
mov
daa
jnp
or
ss
push
outsl
xorb
ja
lds
or
sbb
cltd
ret
lret
movsl
mov
test
jp
mov
adc
pop
sbb
add
lret
xor
gs
xchg
mov
adc
cmpxchg
jne
dec
je
repz
lret
bound
inc
repnz
xor
dec
es
clc
or
aaa
mov
jo
pop
push
push
ficompl
popa
clc
rorl
dec
inc
mov
jge
jmp
jns
addl
push
or
in
inc
imul
shlb
mov
jne
mov
int
push
outsl
pusha
ja
dec
pop
mov
ljmp
fisttpl
or
xlat
shll
pop
fildll
adc
sbb
dec
cmp
jmp
mov
dec
aam
sub
xchg
push
sahf
repz
aam
and
xor
lods
aas
rcll
cmp
and
and
push
dec
inc
push
dec
out
mov
pop
ljmp
mov
add
pop
sbb
push
cmpl
or
lret
jmp
inc
sub
inc
fwait
xchg
inc
push
pop
outsb
jl
cwtl
fistpl
sub
mov
push
mov
sub
mov
insb
xor
fbld
repnz
pop
add
add
bound
adc
mov
inc
mov
mov
pop
push
mov
jle
les
pop
lahf
mov
hlt
add
push
hlt
iret
push
jmp
int
jmp
pop
ficomps
bound
sub
adc
ljmp
and
fisubrl
ljmp
out
mov
dec
cmpsb
clc
dec
and
inc
popa
mov
mov
aad
xor
icebp
cwtl
xchg
mov
imul
inc
rolb
je
lahf
in
shlb
push
aam
js
push
mov
mov
fstpl
lods
test
mov
inc
pushf
orl
ja
push
or
inc
and
mov
sti
insb
inc
fdivs
sbb
bndstx
pushf
nop
push
xchg
mov
stc
jl
xor
std
push
mov
jns
out
dec
loope
or
mov
inc
jmp
xchg
subl
aad
and
push
cmp
aam
repz
rcrl
push
test
js
fs
xchg
inc
inc
pop
outsl
add
out
mov
idivb
int3
mov
call
jns
xor
inc
bound
aas
test
enter
dec
cmp
mov
adcl
cmpsb
jle
addr16
mov
jecxz
xchg
std
sbb
push
popf
lods
mov
ljmp
pushf
ficompl
xchg
or
lahf
add
movsb
jecxz
mov
jnp
push
xor
sti
xchg
mov
dec
sbb
mov
stos
pushl
add
xor
or
dec
ret
push
out
xchg
ja
cmp
jmp
mov
fsubrl
mov
and
inc
push
mov
outsl
pusha
arpl
dec
sti
arpl
shrl
sbb
add
cmpsl
dec
jo
sbb
fldcw
mov
or
sbb
cmp
xor
mov
hlt
add
push
jecxz
bound
and
test
adc
adc
xorb
push
stos
in
jne
hlt
pop
mov
add
inc
arpl
xor
scas
rcrl
cmp
aas
mov
sbb
sbb
sahf
inc
nop
sbb
fists
rolb
and
in
insb
inc
in
cld
sub
cmp
fsubl
sbbb
jmp
inc
add
sub
mov
add
mov
sbb
daa
push
jmp
nop
add
mov
pop
lret
sub
push
sti
sbbl
inc
xchg
dec
jecxz
mov
push
lahf
mov
mov
test
xchg
push
inc
mov
int
or
mov
pusha
clc
jo
test
xor
xchg
or
xchg
sub
or
dec
lcall
out
sbbb
out
cmpsb
dec
push
add
sbb
repnz
shll
adc
push
cmp
push
mov
inc
out
loopne
nop
dec
fwait
push
mov
jnp
push
movsl
dec
push
mov
mov
and
pop
xor
gs
ss
mov
mov
clc
cs
lods
js
pop
adc
mov
ret
test
cmc
push
outsl
inc
test
out
sti
jno
xlat
mov
stos
mov
clc
inc
cmpsl
rcrl
roll
mov
or
lock
push
add
push
cmc
dec
or
jl
int
fmuls
push
sbb
push
ret
dec
dec
and
pop
bound
daa
loop
loopne
sub
mov
enter
shll
dec
stos
stos
ss
cmpsl
cwtl
sbb
imul
pop
loope
mov
push
inc
in
outsb
add
lds
popa
scas
jmp
add
mov
sub
mov
enter
into
repnz
inc
jp
jmp
imul
lds
lret
dec
jecxz
out
jae
cs
adc
in
int
or
sbb
adc
push
or
in
fstp
cld
mov
les
mov
in
push
lock
pop
cmpsl
aaa
add
cmc
rcrl
mov
push
push
mov
aaa
add
adc
insb
jge
addl
rcll
rcrl
push
ficoms
pop
and
std
popa
and
pop
loop
push
iret
in
push
jne
and
lret
push
cmp
dec
add
or
testl
enter
test
clc
cwtl
mov
or
pop
or
subb
addr16
aas
into
jo
xlat
sbb
push
fcoml
imul
fs
mov
cmp
pusha
jno
in
icebp
sbb
mov
push
sub
popa
jmp
std
les
cmovp
and
sahf
jg
cmpb
mov
scas
jb
pop
dec
movsl
mov
clc
or
and
inc
push
aaa
std
into
test
lret
xchg
ja
cld
stos
negl
cmp
push
outsb
inc
inc
ret
mov
repnz
push
push
and
js
pop
lock
jl
xchg
sbb
cmp
in
ja
mov
add
gs
and
pop
xchg
cs
dec
into
or
jbe
psrlq
jne
push
xor
jg
dec
mov
ds
or
sarb
roll
addr16
cmc
cs
pop
fs
inc
inc
inc
mov
mov
lcall
and
jp
lea
xchg
cmp
aad
pop
push
cmp
popa
aam
jle
call
cli
mov
mov
cmpsb
cmc
out
mov
ficompl
and
pop
cld
shl
sub
dec
incl
out
movsl
ja
pop
mov
pusha
inc
xlat
xchg
xchg
jp
repz
insl
sub
cmpsl
aas
inc
test
call
mov
inc
pop
aaa
mov
cwtl
imul
inc
jge
adc
adc
mov
iret
cmpsl
rorl
aad
inc
xchg
jb
and
shlb
fsts
xchg
lret
iret
fcomp
xor
pop
repz
into
lahf
mov
sti
mov
int3
xlat
pushl
pop
sbb
or
lock
pusha
loope
pop
add
nop
push
das
sbb
loop
ret
mov
jg
imul
mov
add
imul
mov
push
xchg
imul
fisubs
mov
outsl
or
dec
repz
in
idivl
mov
mov
ret
out
cmp
mov
dec
pushf
popa
fldcw
into
or
data16
xchg
iret
mov
xchg
icebp
je
mov
popa
fldl
and
xor
icebp
mov
add
sbb
popf
aaa
fwait
mov
mov
mov
out
mov
sub
lods
inc
sbb
loope
inc
mov
lods
mov
mov
roll
push
or
dec
pop
int
dec
sub
lcall
in
mov
xchg
aaa
stc
ret
jae
push
stc
nop
adcb
xor
scas
push
inc
cmp
xor
xlat
icebp
sub
or
sti
negb
xchg
ret
sahf
sbbb
push
push
loope
xor
add
and
pop
jae
adc
mov
adc
out
rcrl
int3
pushf
in
xor
adc
lcall
cmp
test
jg
pop
fs
adc
test
inc
jge
dec
lods
ljmp
push
mov
pop
jl
inc
mov
push
push
jle
lds
rol
xlat
or
cmp
dec
mov
and
push
stc
or
mov
pop
cmp
mov
imul
adc
pop
repnz
xchg
push
into
push
pop
hlt
xchg
dec
test
cmc
aaa
ljmp
jmp
loope
or
out
dec
mov
mov
mov
aad
jb
sbb
jl
and
test
mov
jo
jnp
mov
cmc
pop
mov
ds
fldenv
jecxz
scas
shll
sub
sbbb
pushf
inc
retw
mov
in
scas
mov
xchg
andb
icebp
and
faddl
xchg
fisubrl
js
mov
out
or
ret
js
push
fwait
jns
mov
push
mov
inc
mov
subb
sub
jge
fdivrl
sub
arpl
cmpsl
jle
ficoml
add
cld
or
xchg
add
fiadds
mov
inc
loopne
es
add
or
les
pop
jnp
mov
sub
lahf
idivl
cmp
mov
pop
jecxz
out
jnp
jnp
xor
sbb
lcall
and
push
mov
sahf
imul
dec
iret
inc
lods
xchg
dec
or
pop
movsb
inc
mov
js
jg
out
mov
dec
lds
shrl
mov
mov
dec
sub
repz
imul
xchg
inc
into
dec
jnp
rol
inc
sub
jns
push
push
jo
adcb
lds
movsl
lret
and
cli
aam
lock
stos
xchg
jg
sbb
std
ss
out
ss
inc
in
insl
mov
dec
inc
and
jb
jl
les
dec
add
ss
or
fsubrs
mov
push
dec
orb
outsl
and
std
and
mov
xchg
adc
add
adc
pop
xchg
std
adc
cmp
mov
xlat
mov
mov
inc
jp
sbb
lcall
mov
dec
or
pushf
xor
pop
decl
or
cmc
mov
fildl
sbb
ret
adcb
test
xchg
push
ljmp
ljmp
xchg
das
fdivp
lods
lods
inc
loopne
data16
scas
mov
fisttps
push
mov
mov
shld
inc
mov
sub
pop
and
jle
movsl
test
push
cmp
insl
je
mov
daa
dec
loopne
aas
push
jo
addr16
sbb
ret
mov
fs
in
aas
movsl
push
xchg
xchg
mov
mov
imul
or
test
dec
push
daa
pop
jg
inc
iret
cwtl
stc
sahf
xchg
nop
les
pop
cmpb
jbe
jmp
or
jmp
fsubs
outsl
outsb
mov
cmp
cli
jle
repnz
sti
cmpsl
cmp
popf
ljmp
lret
mov
sbb
or
dec
adc
mov
push
fs
into
or
lods
push
xchg
bound
out
stc
xor
lds
cmp
std
add
call
add
mov
psrld
jmp
push
es
or
jae
nop
mov
in
out
fmuls
xorl
bound
notl
clc
mov
jb
mov
xchg
enter
and
leave
loopne
ja
ljmp
pop
push
bound
mov
sahf
lret
cmc
mov
pop
js
mov
mov
jo
jle
ss
jp
sbb
xchg
jge
push
lds
scas
fwait
je
orl
mov
outsb
cmp
fstl
jb
scas
jne
aas
mov
or
xor
pop
jns
inc
mov
sbb
fcoms
mov
cmp
xor
sbb
fdivp
rolb
mov
xchg
jno
test
lret
stos
or
daa
inc
pop
pop
repnz
push
sub
dec
dec
je
xchg
sbb
dec
out
lcall
fisubrs
adc
cltd
push
in
aaa
push
mov
push
jmp
inc
das
hlt
push
or
and
pop
mov
cmc
sub
jno
add
and
test
subl
add
mov
xor
xor
pop
jnp
les
sbb
jecxz
in
imulb
mov
mov
jnp
push
cli
pop
int3
xor
push
push
dec
jl
rol
inc
data16
push
cmpsb
mov
mov
or
adc
movsb
xor
mov
pusha
imul
xlat
mov
adc
out
mov
or
outsb
jge
sub
es
cmp
jnp
and
push
jp
pop
jb,pn
xor
loope
dec
ror
xchg
add
inc
sbb
inc
inc
addl
sub
rorl
mov
mov
icebp
adc
ret
shlb
dec
sub
hlt
dec
mov
mov
je
lret
xor
fcom
pop
sub
in
cmp
flds
xor
test
mov
scas
jno
dec
jno
mov
sbb
aaa
xor
xor
hlt
aaa
cli
shr
xor
testl
dec
pop
lret
arpl
pop
xchg
add
aad
add
in
jne
dec
mov
jns
dec
out
int3
push
jmp
jmp
test
sbbb
aam
divb
mov
xor
and
into
sbb
or
ss
fnstcw
fsubs
dec
test
xchg
inc
cmp
lret
sub
fdivp
insb
dec
popa
sahf
pop
fs
inc
mov
orb
cmp
mov
push
stc
pop
fisttpll
gs
out
into
or
daa
shr
mov
int3
mov
sahf
ss
mov
push
cmp
outsl
mov
into
popf
in
stos
or
es
orb
rcll
xchg
mov
or
xor
shrb
pusha
ja
jb
out
in
push
or
adc
mov
subl
adc
insb
call
je
or
daa
add
addr16
stc
xchg
repz
pop
push
mov
ds
jb
adc
js
push
subb
xchg
and
out
mov
cmovnp
hlt
pushf
xor
and
out
or
lea
push
mov
lock
pop
fdivs
pop
test
scas
mov
pop
out
lret
cmp
push
arpl
leave
pop
jne
arpl
fwait
sti
pop
pop
mov
or
xor
mov
andps
mov
cmp
test
lahf
adc
mov
fs
fldpi
add
push
fcmove
dec
outsb
add
jno
mov
pop
loopne
repz
call
xor
pop
xor
mov
fstps
insl
inc
add
pop
xchg
hlt
cmp
sub
dec
push
int
loopne
inc
pop
pop
out
lea
cmp
inc
rcrb
adc
push
xlat
push
jns
cmc
stos
das
popa
or
push
inc
pop
jp
push
fcomps
or
push
push
sub
mov
jle
mov
jl
pop
mov
mov
xchg
cmp
adc
jbe
pop
icebp
repnz
xchg
ret
nop
or
gs
dec
test
cmpsb
js
add
psadbw
test
push
sub
lds
jle
pusha
sub
ds
test
mov
push
outsl
repz
xor
insb
jne
into
mov
add
mov
cmpsb
rolb
and
inc
xlat
fwait
dec
sbb
data16
loopne
stc
inc
popf
xor
stos
insl
arpl
testl
mov
mov
sub
push
xchg
hlt
pop
lds
es
fnstenv
loopne
dec
pop
cwtl
daa
sbb
xor
dec
idiv
test
testb
inc
xor
sbb
xor
loope
dec
insb
into
je
repnz
lret
inc
pop
hlt
gs
fcompl
aam
repnz
aad
stc
cmp
cmp
mov
push
loope
dec
push
icebp
enter
ds
ja
sti
jbe
dec
inc
stc
xchg
xchg
mov
xchg
pop
aas
pop
adc
imul
mov
imul
ds
xchg
popf
push
jo
mov
jmp
mov
mov
dec
sub
cltd
andb
add
inc
or
add
out
hlt
js
popa
push
adc
adcl
dec
or
mov
push
pop
or
mov
push
lahf
subb
dec
mov
lods
and
fstl
and
mov
jne
jmp
xlat
outsb
inc
mov
outsl
cld
jnp
add
xchg
int
fidivs
lods
ja
fnstcw
dec
fidivl
mov
stc
cmpsl
das
ret
adc
test
je
in
lods
loop
lock
rol
cmp
sbb
inc
in
mov
andb
or
add
jae
cmpsl
mov
insl
aaa
aas
push
daa
mov
sahf
das
inc
stos
scas
xchg
bound
mov
stos
mov
popf
sub
mov
xchg
mov
cmc
xchg
inc
jmp
mov
out
jnp
cltd
idivl
jle
jl
enter
testb
cmp
jo
sbb
lahf
push
fildll
outsl
xchg
mov
sahf
ds
mov
adc
push
mov
sahf
mov
mov
cmc
ds
movsb
xor
into
fcmovnbe
mov
int3
jno
dec
push
ficompl
testl
enter
int
lds
xchg
add
dec
pop
cmpsl
in
test
fdivrl
xchg
mov
cmp
sbb
cmpsb
jnp
rcr
dec
add
pop
in
or
or
pop
out
das
stc
dec
daa
repz
insw
loopne
jbe
jle
xorl
mov
xchg
inc
jp
mulb
sub
jbe
mov
mov
out
sub
ret
sub
mov
cmpsb
cmpsl
imul
xor
pop
push
rorl
adc
fstps
out
add
sbb
sbb
fbld
xor
push
push
xlat
and
xchg
xor
nop
sub
repz
sbb
cwtl
pop
cmp
loope
pop
and
mov
inc
int
dec
iret
and
arpl
dec
lods
and
fcmovb
sub
inc
jb
jp
fcoml
aam
sbb
mov
clc
ja
mov
clc
loop
sub
idivl
sbb
outsb
push
mov
push
or
mov
push
jae
xchg
xorl
sti
mov
mov
cmpsb
push
and
and
imul
jbe
mov
push
adc
int
into
arpl
push
fwait
cmpsl
test
icebp
fadds
hlt
xchg
mov
int
data16
int3
pop
ret
fistl
das
and
loopne
xor
mov
and
sub
mov
popa
addl
scas
arpl
pushf
arpl
and
sarb
adc
fldl
add
mov
and
insb
or
rcll
mov
loope
sub
fwait
pop
leave
nop
lds
pusha
mov
adc
mov
test
loope
das
adc
lods
testl
clc
pop
out
dec
mov
xlat
mov
xchg
ficoms
push
lods
add
out
xchg
shl
mov
scas
into
test
iret
cmp
cli
add
pushf
cmpsb
pop
push
or
cmpl
ror
mov
xor
lret
ljmp
pop
and
in
fldenv
fidivs
push
push
cli
cmpsl
ret
pop
cltd
mov
mov
push
movsb
add
pop
stos
jge
xor
outsb
mov
mov
xchg
and
sbb
leave
repnz
out
dec
cmp
mov
inc
jp
arpl
mov
iret
jecxz
notl
subw
adcb
xchg
imull
sub
imul
es
les
inc
in
movsl
sbb
ljmp
xor
lret
jbe
lahf
sub
mov
sarb
add
adc
jmp
aaa
push
mov
aas
or
mov
or
cmp
dec
ret
jno
pop
cs
imul
lret
fsubrp
jmp
xchg
xchg
stos
xor
decb
je
push
jmp
lcall
sti
sbbl
dec
jae
jle
out
cmp
sbb
in
adc
mov
in
pop
das
adc
rorl
add
push
push
mov
mov
insl
jo
push
pop
push
push
loope
pop
push
call
mov
jo
jp
sbbl
mov
jge
nop
enter
pop
pushf
push
push
int3
jo
sub
cltd
enter
jl
or
push
hlt
or
xchg
mov
int
nop
xchg
xchg
pop
sahf
es
jg
mov
xor
xchg
mov
push
jg
les
jmp
jmp
repz
int
sbb
rcr
jo
cmc
mov
stos
sub
inc
test
mov
fstps
iret
push
inc
scas
aaa
sarb
sbb
das
cli
adc
mov
inc
std
xchg
inc
aam
fcompl
dec
pop
mov
loope
fwait
sbb
and
jb
lods
aas
xchg
aad
popf
fildl
aas
lret
xlat
lcall
insb
mov
mov
sub
adc
mov
jns
and
sub
push
and
cmpsl
arpl
add
arpl
sbb
lret
dec
lret
xchg
repnz
push
movsb
and
sbb
push
gs
lahf
xor
xchg
mov
push
xchg
pop
jle
or
ret
jmp
addr16
adcl
or
test
in
outsl
jnp
lea
jbe
inc
data16
out
xchg
cltd
sbb
push
cmpsl
mov
jl
or
pop
pop
dec
mov
outsl
sbb
mov
or
mov
and
out
sub
xor
scas
inc
mov
fmul
movsl
imul
mov
pop
adcl
dec
push
cltd
push
or
pop
paddw
das
xor
scas
inc
in
and
call
mov
and
cmc
std
int3
adc
push
pop
mov
fdivl
jbe
mov
adcl
jge
sahf
adcl
pop
into
je
inc
jno
std
loop
pop
int3
and
or
xchg
ret
movsl
scas
bound
dec
jno
lods
lret
stos
aam
out
fiaddl
std
aaa
pop
ficomps
jno
es
stos
add
loope
pop
mov
arpl
sarl
cmp
pop
js
movsl
aaa
neg
xlat
push
mov
jmp
jp
or
xor
xchg
push
or
dec
mov
xor
and
or
jne
inc
push
mov
xor
pop
cmc
das
dec
hlt
outsl
ror
jl
int
ret
sbb
mov
xchg
inc
sbb
dec
xchg
add
pop
das
loop
hlt
ds
add
sbb
mov
pop
lret
addb
leave
test
cmp
jae
cmp
out
pusha
adc
popf
gs
sahf
fmull
jo
jno
movsl
stos
mov
inc
movsb
outsb
push
xlat
adc
pop
inc
testl
hlt
aad
jns
sbbl
enter
pushf
adc
push
sahf
aaa
mov
cltd
leave
push
add
mov
aam
dec
pop
fiaddl
push
xlat
bound
std
xlat
lock
adc
in
and
das
jb
add
aad
xchg
into
mov
xchg
mov
dec
dec
sub
push
loop
sbb
call
iret
adcl
jne
es
divb
sbb
xchg
rol
sub
mov
push
push
pushf
jle
jle
lods
xlat
mov
mov
mov
push
push
push
push
inc
jecxz
cmc
add
add
jp
inc
mov
out
push
stc
popf
sub
popf
sub
cli
pushf
push
xor
dec
ljmp
cmc
lea
inc
sbb
cld
hlt
cmpsb
mov
jbe
and
adc
in
pop
fsub
or
inc
rcr
loope
and
mov
lds
cs
jno
jl
inc
lcall
or
sbb
dec
daa
inc
call
mov
das
addb
push
adc
in
xor
imulb
lcall
cmp
lds
lahf
dec
jecxz
test
cld
sbb
mov
mov
popa
ss
out
in
sub
xchg
add
test
cmp
shlb
xchg
sbb
rorb
xchg
cld
xor
ficoms
icebp
pop
call
mov
out
mov
add
cmp
rcll
insb
movsb
mov
adc
ret
pop
inc
and
rcrb
mov
mov
mov
sub
jns
jmp
outsb
adc
lret
or
push
add
insl
inc
pop
les
decl
movsb
roll
popl
cmp
gs
or
push
dec
cmp
jecxz
xchg
pop
test
aas
push
xchg
xchg
scas
sub
xchg
dec
sbb
pop
out
push
je
pop
pop
pop
push
bound
add
test
insl
mov
mov
sub
ret
rcll
scas
imul
pop
mov
and
or
iret
push
js
or
and
lock
ror
out
cld
mov
fsubr
and
mov
push
xor
or
pusha
andb
ja
leave
sub
xchg
jg
test
pop
ret
pop
repnz
lods
dec
pop
mov
jp
add
jbe
mov
orl
cmpsb
es
shlb
inc
loope
dec
movsb
bnd
or
mov
cmpsl
aas
mov
bnd
cmp
pop
imul
rorl
sbb
mov
jnp
dec
in
rcl
push
dec
push
cmpsb
imul
fbstp
cmp
sbb
xlat
addb
xor
dec
sub
mov
push
sbb
lcall
mov
js
dec
das
ret
mov
or
pop
mov
and
or
cmp
sbb
inc
imull
sbb
lahf
mov
push
push
stos
cmp
dec
data16
xor
imul
addr16
or
mov
mov
js
mov
adc
sub
mov
scas
out
mov
rorl
inc
and
ficoml
inc
into
enter
push
dec
dec
in
add
mov
das
xchg
outsb
inc
and
and
sti
jno
and
dec
leave
es
mov
jle
dec
cmp
pop
cmpsl
cmp
or
repz
inc
push
push
gs
xchg
movsl
push
out
mov
ja
sbb
imul
rcrb
push
cmp
cltd
fwait
adc
inc
pop
jp
mov
aad
sub
cld
mov
push
das
sub
fisubrs
add
pop
sbb
mov
inc
xchg
push
in
xchg
push
sub
mov
jl
push
fldenv
scas
ss
fnstenv
xlat
mov
ret
pop
push
cmp
nop
outsb
enter
mov
pop
in
mov
xchg
lea
pop
test
jl
add
out
outsl
pop
mov
mov
aam
adc
cmpsl
into
sub
jo
fs
jp
subb
sbb
sbb
incl
lahf
xchg
scas
rclb
sbbl
incl
mov
or
jge
xchg
les
xor
je
cmp
mov
orb
push
daa
mov
insl
clc
call
jno
nop
push
add
sbb
insb
mov
pop
in
cmpsl
dec
xchg
scas
dec
loope
stos
sub
adc
jmp
push
jle
mov
adc
mov
or
test
jns
and
test
or
pop
imul
je
rcrl
shlb
xchg
test
icebp
dec
enter
push
add
insb
outsl
jmp
fidivrs
div
mov
loop
ds
push
cwtl
imul
imul
push
daa
out
inc
mov
rcll
dec
mov
mov
mov
scas
out
aad
cmpsl
icebp
pop
mov
xchg
subl
pop
sub
xlat
pusha
inc
lret
les
sti
arpl
mov
pop
push
inc
adc
sbb
outsb
or
jb
jl
dec
mov
and
pop
pop
cmp
popf
mov
mov
mov
cmp
xchg
pushf
subb
stos
xor
iret
jecxz
in
test
mov
gs
shrl
adc
enter
mov
push
xchg
gs
test
push
mov
jg
in
push
fbstp
or
hlt
shlb
jp
xchg
rclb
icebp
jle
outsl
push
mov
push
mov
xor
les
sbb
sub
fldt
jecxz
je
pop
js
adc
add
arpl
jl
dec
xor
leave
push
rorl
mov
push
roll
dec
push
cmp
cmpl
nop
or
ret
lock
mov
orb
pop
mov
sub
jo
inc
pop
add
or
mov
push
das
cmp
outsl
jo
cmpsl
leave
shrl
repz
dec
push
mov
sbb
rclb
sahf
pop
inc
dec
rol
cli
fiaddl
cmp
push
jecxz
sub
sbbl
aam
je
add
sarb
add
adc
aam
and
lds
imull
aaa
scas
adc
aam
mov
push
fsubrs
je
into
push
pop
jae
out
pop
mov
mov
cmp
push
and
adc
divb
aas
popf
ja
enter
jp
mov
outsb
aad
sbb
imul
fnsave
aaa
sub
xchg
insl
repz
pop
imul
cmp
add
sub
mov
decl
test
fnstcw
inc
mov
pushf
xor
jp
adc
or
cmp
fincstp
mov
push
cmpsl
mov
jb
inc
scas
call
pop
out
sub
add
jg
imul
movsl
cmp
push
mov
fcmovb
pop
int3
clc
std
and
sub
ss
pop
xor
call
popl
out
pusha
xlat
enter
and
mov
lods
aas
es
insl
pop
repnz
cmp
in
mov
xchg
mov
in
xchg
sbb
jns
sub
mov
popa
add
mov
adc
je
leave
and
test
pop
mov
fbstp
mov
sbb
cmp
sbb
mov
push
pop
popf
iret
dec
andb
out
inc
jmp
jno
je
mov
jmp
sbb
or
pop
pop
mov
xchg
xor
in
jl
or
stos
sub
adc
es
add
dec
fsubrl
stos
lcall
rol
arpl
dec
xor
outsl
push
icebp
sbb
mov
fwait
xchg
xchg
testb
aam
aaa
pop
xchg
mov
loope
orl
aas
sti
inc
imul
faddl
mov
and
inc
cmc
stos
pop
cmp
xchg
lds
test
loope
enter
push
dec
loop
mov
mov
lcall
jle
adc
jb
xor
repnz
dec
sbb
jbe
loop
xchg
sub
ret
repz
mov
sub
insb
mov
imul
push
add
stos
fs
ficoms
cs
cmpsb
scas
jno
loop
aaa
push
in
push
scas
inc
dec
inc
xor
arpl
xchg
clc
mov
test
lds
pop
mov
movl
hlt
sub
ret
mov
sti
jmp
xor
hlt
mov
and
pop
stos
xchg
pusha
mov
mov
enter
add
mov
push
fwait
cmp
sub
mov
enter
test
push
and
dec
es
js
xor
repnz
loope
iret
into
mov
je
dec
push
cmc
or
lret
cmp
shrb
enter
fsubs
push
mov
pop
adc
and
iret
sbb
inc
add
mov
lock
out
out
pop
into
push
pushf
test
sar
arpl
mov
rol
dec
xchg
push
pop
and
mov
insb
lds
xchg
push
and
inc
pushf
mov
aam
pop
mov
clc
or
loopne
data16
sub
jge
xchg
sub
sub
in
pop
cmp
lret
rclb
insl
test
and
sub
pusha
mov
push
mov
cld
fsubrp
xor
and
push
mov
loopne
lret
add
or
mov
fsubrs
cmp
pop
mov
and
jle
push
mov
fbld
loopne,pt
pop
xor
pop
incb
inc
and
push
fwait
pop
push
std
call
push
insb
std
adc
imul
xchg
sbb
pop
lahf
ss
xchg
cmp
fisttpl
or
sub
sbb
adc
sub
sbb
cmp
mov
add
push
mov
int3
jle
pop
daa
out
push
loope
sub
rcr
dec
cmpsb
and
cld
aam
xor
test
jge
test
dec
loop
mov
xchg
jb
repz
push
mov
movsl
pop
cmpsl
loop
movl
adc
cmp
pop
jecxz
inc
mov
int
pop
add
stos
add
pop
adc
or
cltd
dec
in
out
mov
mov
dec
cld
xchg
orb
jmp
or
inc
lcall
pop
jecxz
pop
hlt
sti
add
loopne
lods
add
adc
jb
jne
testl
push
mov
mov
mov
sbb
mov
sbb
test
sub
mov
stos
popa
mov
int3
jne
mov
shr
cmp
ljmp
repz
mov
imul
jecxz
sbb
and
insb
and
cwtl
fcoms
xor
in
and
or
xor
push
iret
arpl
dec
or
jnp
jecxz
lods
mov
xor
mov
dec
mov
out
popa
shr
mov
dec
in
mov
push
push
cmpsl
mov
mov
mov
stos
sub
bound
sub
jge
cmc
ss
shrb
andb
ja
push
rcll
leave
push
and
adc
fnsave
sub
aaa
and
xor
int3
and
mov
imul
mov
out
jle
scas
les
inc
and
sub
int3
shll
push
fstpl
and
xchg
pop
mov
mov
cmpsl
jb
sahf
ss
mov
push
test
cld
dec
dec
in
pushf
lahf
mov
mov
push
adc
inc
add
js
pop
outsb
in
dec
push
inc
sahf
jmp
fidivl
pop
lock
jge,pn
xlat
mov
enter
dec
adc
adc
dec
cwtl
push
aad
aaa
dec
scas
shll
lods
mov
aaa
lret
out
bound
loop
and
pop
adc
push
dec
mov
negl
lods
xchg
jno
cmpb
pop
mov
notl
push
inc
xlat
sub
movsl
adc
aad
and
push
xor
mov
or
push
in
adcl
imul
sbb
sub
gs
lret
addr16
mov
mov
out
pop
loope
cmp
mov
cmp
mov
iret
dec
pop
std
fwait
xor
lret
cmp
jno
and
mov
popa
dec
fstl
xchg
mov
push
movsb
fldt
push
and
decl
mov
in
stos
and
sub
add
in
test
push
fcoml
iret
inc
xlat
pop
inc
mov
dec
jp
cmpsl
mov
pop
roll
push
stos
sub
cwtl
das
pop
cltd
pop
ds
fadds
xorl
push
mov
add
pushf
fisttpll
out
xchg
or
sub
xlat
mov
sub
mov
ja
mov
cmp
sub
iret
fcmovne
std
cmp
lods
insl
movsb
imul
addr16
fldenv
jecxz
jb
push
xor
dec
mov
fstl
mov
dec
and
and
rcrl
inc
lods
mov
and
jno
scas
xor
sbb
mov
cmpsl
mov
push
or
aaa
or
sub
push
adc
arpl
mov
ljmp
jno
or
out
sub
push
jl
out
cmp
inc
push
add
xor
inc
sbb
cld
xorb
fs
cmc
mov
testb
dec
pusha
or
or
or
js
xchg
inc
hlt
mov
scas
ret
out
adc
inc
ret
add
push
sahf
lods
pop
pushf
xchg
outsb
add
dec
sbb
cmc
dec
sub
push
addb
insl
outsl
adc
push
shll
inc
enter
sub
cli
lea
lds
stos
pop
jmp
lcall
frstor
pop
je
jo
mov
lahf
dec
xchg
pop
sbb
jb
ds
push
add
loop
xor
test
cltd
mov
cmp
das
lds
sahf
jp
xchg
dec
int
dec
loop
in
cmc
mov
sbb
add
imul
stc
xor
adc
stc
je
sub
fwait
dec
pusha
adc
iret
inc
fwait
in
dec
add
mov
lcall
jne
sbb
xor
cmpsl
sub
cmp
push
jb
mov
cmp
int3
cltd
sbb
cli
dec
mov
montmul
cmpsb
inc
xchg
std
or
ljmp
pusha
cmp
fistl
fldl
lods
push
ficoml
and
mov
ds
mov
andb
clc
inc
ret
mov
or
jb
and
cli
xchg
sub
mov
mov
cmpl
mov
jecxz
mov
mov
add
cmp
addl
adc
outsl
cld
pop
pop
loopne
insb
notb
in
mov
mov
push
das
add
ret
std
cmpsb
jl
pusha
sbb
fcomp
call
or
mov
adc
bnd
jl
enter
sub
orl
cwtl
push
out
and
jl
or
aas
jb
jl
or
jmp
out
sti
es
shl
les
sahf
pop
insl
shrb
push
fxam
stos
repnz
ds
pop
push
adc
adc
xor
in
mov
mov
imul
js
js
ret
aas
call
fistl
movsb
cmp
test
insl
push
fsubrs
data16
aam
xor
in
cmp
mov
or
mov
add
insl
cltd
xor
and
jae
xor
cli
xchg
sahf
and
sbb
push
fcmove
adc
adc
mov
xchg
lret
lds
inc
mov
dec
pop
movsb
ja
cmp
cmp
mov
jp
pop
repnz
inc
jmp
js
and
addr16
push
xor
pop
pop
gs
shr
sub
test
insb
faddl
popf
add
arpl
rorl
mov
add
cmp
stos
inc
dec
mov
push
sub
mov
mov
adc
sbb
xchg
jg
aas
pop
repz
jbe
adc
mov
adc
mov
arpl
fmul
jo
pop
outsb
es
pop
mov
gs
mov
imul
jg
pop
ret
mov
dec
adc
jg
dec
dec
pop
sub
xchg
loope
sub
les
jno
pop
dec
pop
mov
push
mov
popa
pop
jg
mov
push
mov
and
test
shrb
mov
mov
sbb
adc
repz
sub
ret
pusha
xor
adc
mov
adc
shll
fmul
decb
in
sub
addr16
pop
sete
mov
and
add
sbb
mov
cmc
repz
jmp
fldcw
loope
in
add
mov
mov
mov
aaa
jmp
pop
mov
mov
jns
lds
stos
fildll
and
push
xor
std
mov
and
dec
sti
jno
ds
lea
inc
enter
cmp
fwait
sahf
pusha
push
rorl
push
repz
dec
in
inc
lret
fidivl
sub
jbe
lods
mov
insb
hlt
in
clc
sub
sub
mov
das
adc
inc
data16
scas
mov
inc
inc
push
enter
inc
je
aam
mov
stc
inc
pop
pop
sbb
fnstsw
rorb
shll
dec
cmpsb
push
movsl
fsubrs
in
fdivl
mov
out
sbb
mov
negl
lods
xchg
mov
xchg
jecxz
fdivr
sub
push
fdivp
mov
inc
dec
push
mov
mov
pop
ljmp
mov
dec
sub
dec
cmc
testl
out
pop
xchg
push
mov
and
fildl
sbb
rcll
loop
sbb
mov
adc
fidivrs
or
lahf
hlt
lods
in
pop
adc
push
jmp
or
xlat
stc
out
adc
adc
xor
mov
xor
hlt
sbb
mov
inc
mov
dec
loope
dec
fwait
cs
repz
int
cld
dec
adc
fsubrl
mov
into
cmp
rorl
mov
inc
pop
ficoml
fsubrs
sti
in
les
mov
idivb
ja
mov
ljmp
sarb
dec
loop
faddp
mov
mov
adc
popa
aam
push
xor
jnp
mov
loop
jmp
movsl
icebp
xor
dec
loope
scas
fiadds
aam
es
mov
dec
cs
wbinvd
in
daa
xchg
js
out
jge
jecxz
push
cmp
pop
andl
adc
cwtl
int
pop
jmp
out
dec
lods
aaa
jo
push
shr
das
loope
xchg
pop
or
test
mov
loop
push
jno
add
loopne
mov
int3
inc
add
lock
inc
add
cmpsb
ss
stc
test
fiadds
insb
sti
and
xlat
xchg
repz
cltd
dec
and
cmp
clc
sahf
dec
jb
xlat
mov
mov
bound
aas
push
dec
mov
pop
dec
cmp
mov
sub
inc
lahf
in
pop
adc
or
mov
mov
loope
xchg
adc
into
enter
dec
ret
decl
call
mov
mov
scas
or
cmpb
jg
in
sub
fiadds
popf
or
sub
mov
sub
aam
mov
dec
shl
gs
int3
dec
imul
mov
sub
jecxz
push
pop
pop
xor
inc
push
mov
stos
lds
popf
insb
aam
fisubrs
jl
jae
outsl
sahf
outsl
xchg
jno
or
addr16
add
sub
mov
xor
ja
jle
aas
fcomps
decl
sub
adc
xor
outsl
test
iret
and
and
xchg
ss
gs
add
gs
pop
push
nop
jmp
or
pop
sub
dec
jns
xchg
fistpll
jns
shrb
inc
mov
sahf
js
shlb
adc
cmp
mov
pop
xchg
in
mov
sub
in
mov
and
fwait
jne
jo
in
loope
sub
add
je
xchg
sahf
xor
sub
mov
jae
je
call
imul
lea
xor
jne
rol
loopne
mov
jmp
mull
jo
pop
movsb
jge
popa
movsb
dec
in
push
sub
jae
sub
rcrl
mov
jge
push
lret
or
das
insb
jbe
dec
xor
xor
cmp
mov
xor
cmp
mov
xchg
jl
enter
sub
lea
cmp
es
stos
mov
xor
jb
pop
insb
cmpb
cmp
sub
mov
repnz
jg
sub
cltd
mov
mov
adc
inc
mov
inc
flds
inc
push
inc
subb
pop
push
stos
xor
ja
les
jns
mov
add
cld
lret
sub
testb
sub
sub
adc
fs
add
push
xchg
mov
jl
iret
lret
aaa
sub
cmp
cltd
and
push
inc
or
jmp
lods
arpl
sbb
fstps
cmp
push
leave
sub
add
mov
into
xlat
mov
pop
mov
jnp
and
pop
insb
hlt
mov
stc
call
add
pop
jg
mov
push
mov
xchg
enter
pop
jns
test
xchg
push
pop
sbbl
xchg
sbb
lds
cmp
imul
add
leave
jecxz
mov
sbb
push
fwait
cld
and
sub
push
sarb
shlb
bnd
jmp
adc
mov
leave
push
or
imulb
jno
icebp
enter
xor
pop
orl
or
cli
and
repz
mov
popf
adc
pusha
test
scas
dec
inc
xor
fldt
loopne
mov
xor
out
and
inc
jno
mov
imul
cmp
pop
sbb
pop
xchg
loope
add
cmp
add
nopl
out
push
push
fdivrs
push
add
sbb
mov
fstpl
mov
filds
jnp
mov
daa
add
sar
and
fprem
add
push
add
std
jo
scas
rol
sarl
jmp
out
dec
dec
loop
ds
hlt
mov
pop
mov
rorb
pop
movb
in
dec
add
push
inc
iret
pop
aaa
dec
fstp
mov
push
jmp
mov
push
sbb
mov
and
dec
cmp
fidivs
int
pop
hlt
jecxz
push
adc
jbe
mov
xor
ret
xor
ljmp
lea
add
in
mov
jae
pop
icebp
pop
mov
outsl
imul
mov
cmp
or
shll
jmp
lock
adc
test
repnz
loop
cwtl
mov
call
inc
xchg
loopne
and
mov
int3
loope
mov
adc
sub
gs
pop
push
push
inc
pushf
fwait
add
repnz
lret
iret
pop
cs
fisubl
icebp
movsl
cld
rcr
js
stc
inc
jecxz
sub
xchg
or
add
outsl
dec
adc
negl
outsb
stc
or
xor
call
flds
lret
lea
sbb
es
jge
dec
outsl
xor
std
cmpsl
dec
dec
cmp
cmp
je
push
fisttpll
sub
push
daa
into
imul
popa
inc
or
call
into
leave
in
and
das
aam
popa
ljmp
lods
cmp
imul
add
incb
fwait
pop
aam
andl
inc
pop
xchg
les
jg
jmp
out
popl
bound
test
push
inc
xchg
adc
rol
dec
icebp
or
fldpi
sub
sbbl
xor
or
sbb
mov
js
sub
adc
enter
mov
in
sbb
add
jp
xchg
in
sbb
push
stos
jae
adc
imul
popf
xchg
inc
or
jg
jecxz
negl
jge
aam
jle
dec
jno
out
mov
inc
jmp
insb
lods
out
xchg
sbb
rcpps
mov
pop
push
cmp
insb
xor
popf
call
or
mov
push
mov
mov
inc
mov
cli
lret
cmp
jl
aaa
lods
inc
or
lret
jb
outsl
mov
dec
sarb
pop
stos
stos
inc
fnstsw
jle
dec
or
nop
insb
jno
pop
fmull
fdiv
fdivrl
mov
in
xorl
sarl
outsl
push
sarl
dec
fs
jle
xor
fnsave
pop
cwtl
inc
sbb
je
mov
and
repz
xchg
jno
jp
ret
mov
mov
mov
add
xchg
jnp
rcrl
andl
sbb
test
scas
les
push
pushf
call
shrl
xchg
push
push
icebp
pop
and
pushf
xor
push
jae
jns
mov
fisubrl
and
jp
test
or
sbb
sub
sbb
or
cmp
in
test
int3
cmc
femms
mov
iret
adcb
and
outsb
mov
das
inc
out
add
xor
jl
mov
stc
inc
je
mov
inc
lods
xor
xchg
mov
adc
pop
xchg
adc
ret
cmc
or
cmp
aaa
and
dec
int3
lds
addr16
pop
cltd
lock
dec
jo
or
shl
pop
in
ret
pop
scas
pushf
jmp
mov
stos
loopne
dec
testb
js
aad
dec
ds
sbb
mov
push
cmp
orb
cmp
or
out
lea
in
inc
xchg
stos
mov
in
mov
outsl
push
mov
test
lret
leave
out
popa
cmp
cmpsl
cmpsl
xor
pop
ret
pop
icebp
sub
cmc
or
sub
mov
aam
push
lret
addr16
cltd
pushf
fistpll
sub
out
xchg
mov
fs
add
push
ror
aaa
and
lods
cmp
push
movsb
mov
imul
movsl
dec
sbb
sbbl
dec
cli
jle
aam
mov
pop
mov
pop
add
mov
mov
fisttpll
mov
les
lds
repz
cli
xchg
scas
leave
dec
xchg
out
push
lahf
ss
ljmp
sub
pop
leave
inc
std
jle
jg
mov
es
xchg
fcomps
push
lahf
ret
mov
fwait
jo
sbb
dec
cmp
subb
dec
pop
andb
mov
repnz
pop
dec
mov
cmp
sbbl
sbb
hlt
mov
jge
jge
daa
rorb
cmp
jns
fwait
cmp
stc
or
adc
inc
or
sti
sti
mov
or
cmp
jae
xlat
mov
sub
mov
xor
mov
mov
bswap
imul
ret
sub
xor
mov
sub
jmp
fnsave
dec
scas
lret
jnp
ret
mov
jecxz
jge
int
xchg
out
push
sub
into
mov
pop
xchg
das
addr16
xchg
imul
xchg
mov
sub
dec
jmp
sbb
jp
jmp
add
pop
pop
pop
sarl
inc
inc
negl
dec
cmp
cmp
and
fidivs
lcall
dec
insb
cli
mov
cmp
dec
jmp
push
mov
loopne
insl
adc
pop
inc
push
jmp
nop
xor
inc
scas
sub
clc
outsl
repnz
xchg
aam
mov
sahf
xchg
incl
outsl
add
lret
lret
in
mov
out
mov
push
mul
int
outsb
sub
cmp
insb
rorl
shrb
mov
or
xchg
mov
push
sub
mov
insb
push
sub
lcall
lods
cmp
daa
jne
pop
pop
imul
jnp
outsb
mov
pop
sbbb
xor
mov
push
fiaddl
cld
dec
xor
sbb
push
mov
adc
stc
sbb
enter
mov
xchg
icebp
sbb
popa
or
iret
pop
mov
jp
cmp
adc
jecxz
sahf
or
mov
sbb
jbe
cmp
stos
fsubl
cli
out
cld
fstl
cmp
push
outsb
movsl
cmc
xchg
mov
cmc
test
mov
jg
inc
push
sub
out
int
push
pop
or
test
push
pop
out
cmp
addl
mov
sti
aas
pushf
cmpsl
ds
cmp
scas
imul
enter
cmp
test
cltd
pop
ljmp
jno
adc
and
inc
fmuls
sarb
lcall
or
sbb
pop
jle
cmc
les
fbld
cmpsb
pop
xchg
adc
jo
jp
dec
lds
test
inc
cmpsl
jnp
out
sbb
xchg
sub
sub
cmp
add
dec
lahf
sbb
adc
jmp
and
je,pn
pop
cmpsb
iret
cwtl
pop
mov
push
mov
jge
imul
int
xchg
sub
cli
xchg
dec
lock
mov
xchg
dec
movsl
cmp
push
rclb
insb
lods
mov
mov
stos
je
aad
shrl
mov
inc
dec
and
ret
fsts
into
fcompl
dec
mov
insb
mov
cmc
mov
sbb
dec
push
test
xlat
js
std
out
cs
nop
pop
dec
shrl
inc
imul
mov
int3
mov
aam
inc
inc
test
jle
fnsave
stos
lods
outsl
popf
push
mov
fldenv
das
aam
fstl
ret
xchg
jbe
mulb
loope
adc
in
xor
loop
jecxz
data16
adc
or
aaa
mov
cltd
repz
popf
adc
cmpsb
push
mov
in
xchg
dec
pop
pop
icebp
add
dec
lods
mov
mov
shlb
cmp
push
icebp
adc
adc
sub
in
and
jb
fisubrl
mov
scas
push
adc
xlat
lret
into
cmpsl
adc
mov
add
inc
test
sarb
ficoml
ficomps
sub
push
fisubl
popa
je
adc
lods
in
mov
xchg
out
testb
dec
roll
xchg
dec
jmp
cmpsl
ds
mov
imul
les
add
sub
mov
inc
adc
sahf
fidivrl
mov
out
daa
jecxz
imul
mov
pop
xor
pextrw
pop
sbb
loope
pop
sub
pop
cmpb
add
xor
lret
mov
inc
les
cmc
mov
rcrl
adc
jno
lret
hlt
pop
jb
testl
shrb
sarb
inc
cmp
mov
mov
adc
xchg
jmp
icebp
hlt
mov
outsb
and
cli
leave
mov
andl
pop
les
inc
mov
pop
ficoms
xor
and
rcrb
lods
cltd
inc
add
pushf
outsl
loop
stos
mov
cld
mov
leave
fstpt
loopne
jns
stc
xchg
out
loope
xchg
cmp
scas
inc
inc
push
xchg
ret
mov
inc
mov
jl
push
mov
fdivrl
mov
jae
jnp
lds
addr16
push
pop
cld
repz
pusha
loope
movsb
pop
add
mov
xor
cmp
dec
fcmovne
shlb
int
dec
pushf
sti
dec
nop
rolb
mov
arpl
adc
xor
lods
push
test
bound
adc
add
xor
adc
xchg
sbb
jmp
ret
jg
pop
and
ret
pop
push
aad
sbbl
std
push
mov
fisttpl
push
xchg
je
cmp
out
test
das
test
adc
dec
dec
add
sbb
mov
fldt
mov
arpl
xchg
xchg
test
mov
xchg
out
push
mov
cmp
xor
enter
push
popf
jnp
push
xchg
cli
bound
xchg
jle
test
xlat
fisubl
jecxz
push
add
outsl
lret
fsub
ja
lahf
lret
lds
jmp
mov
sub
adc
or
sahf
push
int3
aad
xor
pop
jmp
adc
inc
frstor
jge
and
shlb
jae
xchg
xchg
pop
icebp
int
xor
cmp
xchg
inc
mov
push
xchg
or
out
stos
xchg
sub
imul
pop
pop
add
in
ljmp
ret
pop
add
scas
mov
repnz
dec
mov
les
sarl
int3
mov
mov
outsl
loopne
lea
dec
add
and
lcall
add
jmp
inc
rcll
adc
mov
sub
mov
cmp
lret
inc
jmp
out
pop
movsl
lds
jle
insl
mov
inc
test
xchg
rol
jne
outsb
sbb
ret
add
fisubl
fstl
fadd
push
inc
std
ret
jo
mulb
scas
movsl
inc
mov
out
dec
lcall
mov
or
ljmp
mov
sub
add
add
pop
gs
mov
and
xor
jo
dec
push
sbb
mov
clc
aam
adc
cs
jmp
sub
stc
pusha
push
jb
mov
sbbl
xor
enter
loopew
cltd
fldl
out
push
push
sbb
jo
bound
dec
dec
pop
mov
jecxz
pop
push
test
rcr
mov
pop
call
out
xor
adc
add
xchg
cli
and
call
push
imull
sub
cmp
or
pop
test
xchg
push
leave
jecxz
inc
ret
mov
adc
jbe
lods
into
test
or
leave
cmpsl
ficomps
hlt
fldl
sbbb
mov
sub
les
dec
pop
adc
lret
sub
sub
fistps
repnz
add
mov
test
cmp
and
jmp
sub
mov
mov
test
out
pop
mov
inc
fldenv
outsb
rcl
inc
pusha
or
mov
cwtl
fs
out
mov
pop
xor
jnp
out
sub
das
insl
loopne
pop
jl
push
mov
insl
add
pop
popf
pop
sbb
pop
sub
int3
sarl
call
add
outsl
push
je
jg
xchg
mov
mov
mov
or
shrl
pop
and
inc
xchg
cmp
incl
clc
push
dec
scas
icebp
xchg
dec
push
push
enter
data16
mov
sub
inc
int
scas
mov
popa
jmp
mov
lea
cmpsl
push
in
aam
mov
mov
test
mov
iret
adc
in
mov
adc
mov
addb
add
sbb
in
jnp
lea
fwait
or
int3
in
mov
popf
outsl
mov
sbb
ret
lcall
mov
imul
xchg
test
push
rcrl
push
xor
pusha
ss
pop
repnz
cmp
icebp
pop
add
cmp
mov
xchg
fistl
or
add
testl
mov
mov
insl
in
or
adc
pop
mov
ret
push
test
jg
stos
mov
mov
in
cmpsl
cmp
push
mov
insl
int3
mov
or
mov
mov
lods
nop
negl
mov
sarl
sbb
mov
push
lret
ds
fcoms
les
jbe
xchg
insb
sbb
je
movsl
adc
pusha
cmp
sub
pop
fadds
movsl
popf
jo
pop
xor
iret
ret
jle
jmp
lock
cltd
or
jne
sub
daa
cmpsb
sbb
das
mov
stos
sbb
int
push
pop
repz
xchg
bound
test
in
jmp
xchg
dec
js
mov
ss
fs
add
insb
add
and
adc
xchg
mov
sti
pop
adc
cli
aam
cmp
push
fistl
add
inc
outsl
jnp
lcall
and
imul
insl
or
shlb
cmp
das
data16
inc
cwtl
jbe
sub
inc
cs
adc
and
out
jo
sbb
xor
test
orb
mov
les
sub
add
xor
js
or
sub
fucomp
push
rclb
xchg
cmp
cmp
jo
lods
inc
popf
int3
sahf
sub
shll
enter
popa
mov
mov
and
dec
jmp
ds
push
dec
add
xor
popa
inc
nop
data16
pushf
test
int
jecxz
aas
add
aad
les
inc
sbb
aaa
or
sbb
sub
je
insb
jge
mov
imul
pop
push
movsb
or
rorl
cmp
push
es
xchg
movsl
mov
xor
lea
in
xchg
xor
push
cli
add
inc
std
sub
ftst
sti
dec
loopne
xor
insl
dec
push
dec
scas
cld
fldcw
movsl
in
add
dec
adc
xchg
jno
scas
cmp
jbe
out
hlt
movsb
sbb
inc
mov
cld
sti
adc
lods
sbb
sbb
scas
jbe
mov
mov
mov
shr
or
mov
cmpsl
insl
fimull
pop
inc
or
push
or
iret
movsl
mov
xchg
sbbb
adc
ret
out
in
je
inc
pop
mov
int3
aaa
int
repnz
jecxz
adc
ret
mov
dec
enter
rorb
pop
cmp
jns
sub
inc
sahf
sbb
pusha
push
lahf
xor
shll
aas
data16
lods
xor
in
call
insb
pop
push
mov
inc
cmp
ret
imul
lret
xchg
mov
xchg
or
popf
mov
xlat
outsb
xchg
xchg
mov
aaa
lock
lods
sbb
shll
mov
and
mov
lret
sub
mov
pop
pop
aam
inc
fwait
xor
jno
divb
lahf
push
push
dec
add
es
push
xchg
jp
mov
sbb
sbb
mov
mov
aam
les
insl
and
mov
jae
push
fwait
or
mov
sub
and
dec
dec
xlat
out
cmp
mov
imul
movsb
mov
push
xor
cmp
sbb
enter
dec
in
loope
dec
adc
int
gs
jg
pop
cs
mov
or
outsl
inc
js
fwait
cmpsl
loop
adc
mov
outsl
call
xor
or
push
push
mov
mov
adc
sbb
mov
push
xchg
mov
jno
out
jecxz
pop
or
jge
popf
dec
scas
sar
and
add
fs
push
out
lret
cmc
es
push
mov
inc
scas
inc
and
push
gs
lret
xchg
add
xchg
outsl
aad
and
mov
fidivrs
jecxz
aas
aad
cmp
mov
push
es
push
fistl
add
push
inc
push
pushf
scas
xor
insb
fcmovne
xor
dec
push
fldl
imul
push
cmp
inc
lods
std
add
fisubl
ficoms
and
xor
or
xor
push
adcb
js
sbb
loopne
cmpsl
cmp
addl
mov
or
loopne
and
mov
push
mov
test
ja
pusha
mov
out
inc
sbb
fisttpll
insl
or
lahf
or
jl
fmul
leave
sbb
stos
pusha
inc
testl
pop
mov
mov
out
jnp
aam
pop
sbb
or
int3
jg
outsl
push
xchg
dec
cwtl
repnz
imul
jge
inc
lret
lret
jb
out
xchg
ljmp
and
adc
push
sub
xor
pop
ja
dec
mov
sahf
mov
dec
mov
out
lea
nop
bound
dec
push
shrl
fdivl
lret
or
pop
rorl
cmpsb
sbb
jnp
dec
lock
push
pop
xchg
xor
push
mov
lret
adc
aas
jmp
arpl
clc
aam
iret
jb
imul
or
jnp
mov
pop
pop
lahf
lods
bnd
stos
sbb
adc
inc
ret
mov
inc
pop
or
fbstp
dec
lods
divb
mov
or
lret
pop
xchg
push
into
xchg
dec
jmp
js
repz
and
insb
imull
inc
pusha
jnp
mov
int
mov
adc
data16
jmp
jg
push
cmpsl
push
pushf
int3
lret
or
cli
inc
push
aaa
jns
lods
and
icebp
cld
loopne
inc
dec
arpl
push
out
cmp
notb
and
pop
xchg
ds
jge
lret
adc
out
int
fbstp
aas
jge
fbstp
pop
das
mov
fs
insb
jl
popa
cmp
hlt
mov
scas
imul
push
popf
adc
inc
and
add
mov
and
sbb
sub
pusha
test
push
repnz
push
test
shr
sub
outsb
shrb
lret
flds
mov
jge
mov
shlb
and
adc
shrb
mov
mov
bound
cmp
in
ljmp
xor
in
test
int
push
sub
push
jle
je
add
cmc
jl
dec
cmp
lcall
movsl
adc
cmc
in
or
repz
sub
pop
iret
adc
arpl
ss
ret
inc
aaa
jbe
jns
ret
jl
mov
in
leave
add
jg
dec
aam
jge
xchg
mov
sbb
jae
int3
fdivs
pop
pop
inc
sahf
cmp
mov
fdivs
fmulp
mov
fbstp
mov
shrl
jp
mov
add
push
xor
cld
xchg
sub
mov
mov
test
lahf
shrl
cs
and
pushl
rorb
fimuls
imulb
jbe
or
ret
inc
jns
test
push
pop
sub
mov
dec
add
std
pop
stos
and
addr16
adc
lret
ljmp
and
adc
fmull
dec
jns
popa
stos
fisubl
sub
jle
dec
jmp
jg
sbbb
out
mov
mov
cmpsl
or
xchg
dec
jo
mov
fucomp
inc
ficompl
unpckhps
pop
push
push
or
stos
cmp
mov
in
loop
aas
add
jae,pt
pop
fiadds
fstps
lock
or
jg
push
fwait
jb
cmpsb
icebp
fs
stc
and
mov
mov
and
in
loope
mov
aam
mov
push
mov
push
mov
nop
pop
push
jmp
lods
aam
das
mov
jle
push
sub
inc
fs
or
jmp
or
inc
and
push
out
cld
mov
movsl
jl
xchg
inc
daa
add
lock
je
xchg
data16
addr16
popf
lods
mov
cmp
jns
pop
std
out
dec
loope
addr16
adc
jl
dec
mov
sti
incl
xor
push
fdiv
pop
and
inc
jbe
jns
xchg
xor
push
xchg
sub
pop
aaa
push
lret
pop
int3
aaa
xchg
stos
imul
lea
lret
call
jbe
sbb
and
jb
jg
mov
cld
mov
lods
pop
jmp
add
sub
sbb
fisubs
push
pop
scas
cmp
jge
out
movsb
cld
popa
push
adc
imul
je
lods
xor
mov
cld
mov
mov
jmp
xchg
out
or
jns
lods
jo
sbb
cld
lret
mov
adc
iret
std
stos
scas
mov
sbb
clc
adcl
fdiv
add
repz
mov
mov
add
ljmp
jmp
and
test
push
ja
aaa
pop
cmp
arpl
jp
mov
xchg
push
imul
stos
lock
das
mov
jle
les
mov
sub
fwait
add
arpl
rcrb
xchg
enter
loopne
popa
lret
mov
jnp
clc
and
pop
jne
enter
jno
push
aad
inc
pop
clc
push
add
adc
push
dec
decb
jno
push
addr16
pop
fdivrs
jg
dec
sbb
pop
jg
cmp
push
in
mov
sti
loop
fists
insl
aas
xchg
and
mov
xchg
addr16
or
pop
xchg
rolb
sbb
jle
js
inc
xor
aam
rclb
imul
fldcw
cmp
out
pop
les
outsb
sub
jle
test
movsb
xchg
test
sub
cmpsl
leave
cltd
pop
pushl
aam
sbb
and
dec
stos
movsl
dec
push
call
rclb
mov
lahf
and
add
std
jge
mov
stc
pop
push
mov
das
hlt
sub
jle
frstor
clc
push
or
xchg
add
add
fnstenv
jo
inc
mov
out
sbb
xchg
mov
cmpsl
call
aad
lret
cld
push
add
mov
sub
fwait
xor
adc
inc
dec
dec
ds
outsb
dec
gs
loop
pusha
adc
in
aas
imul
sub
push
and
pop
xchg
jns
push
movsl
arpl
sahf
add
mov
enter
fsubrl
push
cmpl
mov
sub
lods
imul
movsl
xchg
cmpb
addr16
xor
bound
inc
mov
mov
sbb
jle
bound
dec
jecxz
ror
les
jl
xchg
iret
cmp
stc
int3
int
lret
fldcw
sbb
movsl
mov
lahf
inc
xchg
push
sahf
cmc
push
push
lcall
je
sahf
mov
mov
or
out
lcall
js
lock
xor
push
jno
cmp
sbbl
or
fwait
mov
mov
loopne
mov
mov
leave
addr16
mov
jb
adc
rorl
nop
cmc
call
xor
pop
xchg
dec
jecxz
cmp
arpl
mov
jb
dec
mov
repz
popa
sbb
xor
ljmp
imul
mov
call
mov
stc
out
into
hlt
fsubrp
pusha
int3
sahf
adc
fcmovu
lcall
sbb
xor
out
mov
lcall
push
or
ret
lcall
addr16
out
inc
jns,pn
sub
cli
int3
cmpsb
push
inc
jno
jp
das
jmp
cwtl
stos
sti
in
sbb
xlat
pop
mov
shlb
loop
cmc
cwtl
pop
and
jns
jmp
mov
inc
sbb
in
mov
and
and
sbb
clc
sbb
jnp
sahf
add
dec
inc
xchg
add
in
test
mov
or
fidivs
dec
pop
js
dec
pop
sbb
pusha
or
loop
sub
push
mov
dec
ljmp
sar
push
push
adcb
and
das
adc
sub
mov
roll
cli
adc
adc
pop
jae
or
sub
movsb
fistpll
sub
inc
inc
mov
xchg
fldl
or
aam
loope
and
lods
popf
pop
xor
nop
mov
cmp
pop
mov
adc
inc
test
dec
push
push
imul
mov
loope
push
loop
or
and
mov
and
and
shll
aam
fimuls
sub
xchg
fmull
xor
fwait
call
in
mov
mov
mov
add
scas
stos
and
in
mov
push
ror
into
pop
sbb
int3
jae
xchg
call
cli
loopne
xchg
and
mov
loopne
fisubrl
ds
lock
cli
mov
pop
outsl
lea
popf
xchg
scas
xor
sbb
mov
test
jae
dec
test
fisttpl
ffreep
fistl
pop
inc
dec
pop
jbe
xchg
push
das
mov
nop
push
jae
push
insl
leave
pop
stos
or
mov
or
add
push
and
xor
adc
or
aam
sbb
or
repnz
mov
xor
jbe
ja
rep
mov
or
adc
xchg
mov
insb
shl
mov
lods
jnp
repz
mov
leave
or
adc
scas
daa
jne
pop
rcrl
popa
push
ja
mov
fadd
test
repz
sbb
rcrl
stos
out
sbb
pop
sub
ja
mov
aam
xor
cli
push
icebp
pop
and
mov
ret
fnstenv
in
mov
mov
aaa
and
jns
pop
movsb
mov
pop
inc
sbbb
fs
add
rcrb
sbb
out
rcl
or
push
adc
sub
mov
adc
adcl
or
rclb
cs
popf
roll
dec
iret
sub
mov
ljmp
xchg
into
out
aas
cmc
aam
test
in
cld
js
call
int
outsl
mov
and
fbstp
fwait
gs
adc
out
imul
mov
repnz
pop
push
subl
mov
cwtl
cld
xor
adc
push
call
lods
movsb
enter
rcl
push
or
sti
ret
fstpl
add
fimull
mov
mov
mov
mov
insb
adc
xchg
int
pcmpgtb
jbe
fucomi
es
in
dec
es
add
xchg
mov
mov
cmp
cmp
nop
dec
lret
cmp
flds
dec
mov
test
repnz
mov
push
icebp
xchg
das
xchg
rcrl
mov
bound
or
rclb
push
popf
nop
popa
insl
pushf
addr16
in
sbb
data16
rorb
daa
dec
xor
lock
out
jnp
test
in
lahf
fsubrl
imul
shr
pop
sbb
adc
lahf
fdivr
dec
sbb
inc
and
fwait
adc
mov
pop
jg
jge
mov
and
push
push
pop
sahf
lahf
pop
dec
fstpl
bound
inc
mov
sbb
ljmp
out
clc
mov
fsin
sub
mov
mov
insl
ljmp
cs
sbb
addb
cmp
mov
pop
jo
mov
ret
sub
js
and
stc
pusha
dec
adc
addr16
shlb
into
jge
fbld
xor
cmpsb
dec
lcall
push
xchg
imul
sbb
shl
mov
xchg
out
stos
loopne
mov
fcmovb
pop
rclb
xchg
popa
adcb
xchg
push
nop
inc
pop
sbb
in
das
dec
repnz
xor
fwait
xor
xchg
inc
push
dec
fisttpl
popa
ret
jnp
clc
movsl
jp
xchg
insb
cmp
pop
lahf
call
adc
sbb
inc
inc
fisttpl
ljmp
daa
sbb
insb
sbb
mov
lret
mov
add
ret
and
pop
xchg
sbb
jno
andb
xchg
sub
dec
xorl
addr16
xor
and
je
dec
movsb
in
es
not
xlat
xor
xchg
xchg
xchg
pop
call
addl
stos
mov
mov
push
out
sub
mov
pandn
inc
adc
jp
stc
pop
adc
in
aam
mov
cwtl
test
mov
jp
xorl
movsl
push
aas
mov
dec
mov
pop
lods
data16
mov
cli
and
xchg
jmp
jno
pop
or
into
addl
dec
das
add
sub
sahf
into
testb
in
add
sub
xchg
add
pushf
dec
xor
pusha
test
mov
add
jl
mov
push
mov
addr16
loop
pop
ret
xchg
mov
repnz
ljmp
loopne
jnp
lret
in
xchg
add
fadds
cmpsb
scas
dec
xor
push
fdivr
push
stos
sbb
xorb
mov
les
fmul
push
mov
rcrb
cmp
daa
cmp
cli
mov
adc
pop
fisttpll
xchg
lods
xor
ficoms
rcll
push
jbe
iret
cmp
aas
sub
push
out
sub
es
inc
outsb
jl
sub
cs
mov
sarl
pop
mov
xchg
sub
scas
lahf
sbb
xchg
jno
ret
outsl
inc
fildl
xor
lret
daa
dec
imul
push
fsubp
jl
xchg
jb
dec
or
jg
pop
adc
and
lret
addr16
pop
in
test
aam
mov
lds
inc
inc
mov
je
gs
sti
xchg
sti
cwtl
sbb
lock
xlat
ja
test
and
cmpsb
in
jmp
mov
jmp
inc
test
out
stc
xchg
xchg
fcom
cmp
es
lcall
or
xchg
mov
cltd
addb
push
sub
and
data16
leave
popl
hlt
movsl
scas
pop
bsr
jo
cs
inc
fisttpll
outsl
fs
mov
roll
dec
xchg
mov
inc
ficoms
pop
out
scas
test
addr16
pop
out
enter
sub
or
mov
and
stos
dec
cmp
js
add
jno
xlat
sub
data16
lret
insb
ret
loope
loopne
jle
xchg
pop
out
lods
into
or
jne
jbe
add
mov
iret
pop
in
dec
cmp
push
loop
aam
or
leave
test
xor
in
jno
lahf
mull
inc
pop
outsb
sbb
mov
imul
dec
jle
fdivrs
cmp
jo
notl
nop
add
stos
iret
pop
push
mov
and
pop
or
mov
xchg
mov
xchg
pop
xchg
jp
fstl
mov
out
subb
std
js
mov
adc
clc
cmp
cs
jnp
call
or
dec
sbb
loop
imul
rorb
add
test
or
cli
inc
mov
faddl
mov
in
sub
data16
push
inc
std
ja
mov
cmp
pop
mov
stc
dec
push
stc
andl
pushf
out
dec
dec
dec
add
mov
pushf
cli
jmp
orl
or
jge,pt
bound
dec
cmc
dec
mov
cmp
sub
imul
adc
jle
mov
aad
aas
rcrl
stc
sbb
add
inc
cmp
je
dec
dec
push
rcr
xchg
cmp
mov
mov
sti
fwait
and
add
cli
aas
pop
push
or
adc
clc
pop
lahf
insb
adc
fwait
sub
fdivrp
fdivrl
pop
fwait
sti
sarl
mov
pop
fcmovne
mov
xchg
movsb
jp
sbb
test
jl
push
and
inc
jns
dec
mov
inc
cmpsb
mov
addr16
loope
pop
sbbl
push
pop
add
cmp
in
arpl
incl
sbb
mov
aas
cmp
shrl
dec
dec
mov
push
cmp
push
out
in
xchg
ret
cmp
insl
into
ret
cltd
gs
and
shrb
pop
add
insl
mov
cmp
cmp
shrb
daa
xor
adc
stos
in
fbstp
iret
sti
xor
mov
into
adc
into
mov
outsb
push
sub
ss
in
lods
mov
js
sarb
or
adc
mov
sub
in
es
rol
fsubs
mov
adc
fsubs
gs
pop
fidivrs
mov
or
and
push
into
add
out
in
jo
or
rolb
sbb
loop
xor
leave
sahf
mov
dec
adc
jo
jle
imulb
sbb
and
sti
std
sbb
sub
mov
out
dec
dec
icebp
lcall
or
or
imul
jne
testl
cmp
fcoms
xlat
xor
sbbl
or
dec
cmpsb
cmp
cli
sub
aaa
push
xchg
adc
xor
fwait
cld
es
cwtl
repz
add
fimuls
xor
dec
fwait
or
cmpb
aam
mov
cmp
das
popf
mov
inc
push
xchg
imul
ror
or
and
dec
xchg
jmp
inc
fwait
insl
rolb
xor
sbb
sbb
push
imul
cmc
adc
into
fidivrs
mov
add
das
push
stos
inc
test
popf
cmp
jecxz
pop
adc
push
loop
test
movsl
movsb
dec
jl
imul
outsl
xor
add
add
sub
out
xchg
xchg
popf
dec
pop
std
mov
cwtl
das
sub
cmp
loopne
xor
xor
mov
xchg
cmp
adc
or
jmp
sbb
xor
stos
push
xchg
pop
imul
gs
jmp
iret
scas
or
stos
in
adc
add
lcall
pop
lea
imulb
or
jbe
cmp
lea
fadd
push
inc
mov
add
jg
outsb
add
int3
jnp
mov
ficompl
mov
dec
clc
or
jno
icebp
mov
subl
iret
sub
rorb
cmpb
xchg
lret
cmp
mov
cmp
lret
mov
inc
jbe
dec
cltd
push
cmpsb
in
fimuls
loopne
add
int3
sbb
push
leave
add
dec
push
scas
sbb
and
lahf
push
sbb
sbb
in
scas
mov
movsl
cmp
les
stc
add
mov
ret
outsb
cmp
lods
mov
cmpsb
cmp
mov
inc
cmp
mov
out
jl
lods
pop
das
adc
outsl
mov
mov
xlat
not
jo
int3
fidivs
mov
pop
pop
sub
inc
cs
jge
adc
in
jle
or
pusha
jg
pop
hlt
sbbl
mov
insl
jo
mov
add
call
gs
in
mov
sbb
test
dec
cmp
sub
pop
mov
inc
fcoms
jo
inc
std
sbb
mov
xchg
jne
ret
or
xchg
dec
dec
in
clc
sbb
jmp
mov
fstpl
repnz
test
pop
xor
sbb
lret
data16
mov
ljmp
orb
or
cmpsb
xor
out
xchg
aad
or
out
lods
mov
xchg
jl
inc
ficoml
jbe
and
lock
add
mov
pop
sub
jo
cld
push
pop
jl
jmp
fcomps
test
adc
pop
dec
push
adc
dec
daa
stos
inc
loop
test
add
fsubrs
adc
xor
std
sti
jle
inc
push
push
pop
sbb
dec
aam
push
mulb
adc
in
lock
mov
mov
daa
inc
pop
insb
ds
jmp
mov
mov
sub
fisttpll
pusha
xchg
xchg
lcall
add
fwait
jb
popf
sub
xchg
int
cmpsb
push
adc
leave
mov
lcall
and
test
adc
mov
daa
and
xchg
add
or
jne
jg
jl
xorl
shlb
jno
int3
sub
aaa
int
and
xlat
sbb
pusha
idivl
mov
sti
pop
jle
shll
insl
shrl
pop
jge
pushf
or
xchg
mov
pop
cmp
insl
jg
push
dec
pop
cmp
adc
loop
xor
sub
pop
imul
adc
lret
leave
add
mov
movsb
ret
push
mov
cltd
call
or
xlat
push
test
int
dec
insl
fdivrs
dec
ds
jo
test
dec
inc
mov
ret
inc
int3
push
push
aam
mov
scas
or
dec
inc
inc
aas
jne
scas
out
movsb
mov
into
dec
movq
adc
and
arpl
jle
sahf
inc
xlat
iret
adc
pop
dec
pop
inc
cmc
aaa
inc
or
ret
aad
dec
aam
sub
repnz
push
test
fldl
sub
add
add
jl
aad
sub
adc
scas
jno
mov
xchg
jbe
in
test
bound
sbb
sbbl
xorb
cmpsl
rcl
nop
and
xchg
sub
adc
jbe
push
popf
cmc
or
and
out
call
outsl
roll
push
test
loopne
mov
fcoml
sti
adc
jle
dec
packuswb
fs
inc
jmp
xor
lcallw
push
out
inc
sbb
add
xlat
fs
dec
dec
scas
sar
repnz
rcl
pop
lahf
push
inc
xchg
lret
addl
loop
mov
or
lods
movntps
inc
out
mov
in
xchg
adc
stos
push
aad
fldt
test
mov
lret
jo
ret
fcmovnbe
xchg
loope
mov
mov
shrb
cmc
mov
jg
dec
pop
sub
mov
and
cld
fmul
push
mov
xchg
add
mov
mov
in
mov
in
sbb
pushf
adcb
adc
push
loopne
int
xchg
sub
outsl
cwtl
out
aam
out
jmp
sub
mov
shr
cmc
or
sub
fidivl
or
jae
fmul
in
push
std
inc
push
sbb
test
lret
incl
adc
insb
fstpt
inc
subb
data16
cwtl
jg
aad
mov
leave
jecxz
and
les
hlt
jae
mov
mov
jg
int
loop
inc
inc
push
ss
xchg
push
xchg
and
shl
mov
jnp
dec
movsl
mov
and
mov
movsl
addr16
push
mov
mov
add
aaa
mov
mov
rol
sub
fs
lods
xchg
sub
cmpb
pop
mov
mov
mov
lcall
add
mov
outsb
xchg
sub
dec
mov
mov
idivl
or
fs
rorl
rcr
shlw
cmpsl
pushf
or
mov
test
jge
jecxz
xlat
dec
adc
jp
cmp
stos
xchg
add
out
bound
sbb
sub
mov
cmp
or
mov
jl
rorb
sub
dec
push
pop
sub
scas
jbe
adc
or
lcall
imul
pop
enter
test
xorl
js
mov
push
mov
or
aaa
testb
mov
mov
shll
insb
sub
cmp
mov
sub
scas
or
add
sub
push
mov
out
adc
mov
popa
add
xor
jle
jo
cmp
and
jg
nop
call
push
movsb
cmp
addl
adc
mov
jnp
pushl
adc
jae
xor
insl
or
add
inc
xchg
stc
adc
cs
sbb
pop
push
popf
es
test
rcll
leave
arpl
jl
jg
mov
mov
adc
sub
jno
icebp
pop
mov
loop
xchg
mov
inc
lea
mov
mov
mov
jl
pop
hlt
pusha
popf
mov
xchg
repnz
in
movsl
test
jae
lcall
jp
scas
outsl
jne
cmpsb
lret
push
orl
scas
int3
outsb
orb
in
sbb
pop
adc
jns
aas
in
pusha
lods
repz
jl
in
pop
cmp
cmp
ret
pushf
sub
mov
or
push
and
pop
mov
rolb
sbb
ljmp
movsb
add
repnz
sub
push
scas
xchg
imul
mov
and
jbe
addl
fidivrl
in
sub
movl
adc
lcall
dec
xor
lcall
jmp
aam
xor
repz
mov
dec
dec
or
jle
outsb
xchg
fadds
es
push
and
loop
inc
rol
pop
mov
repz
mov
jno
cld
call
xchg
popl
pop
fisttps
mov
lcall
sub
pop
repz
add
push
in
call
iret
leave
scas
mov
mov
sub
sarb
loop
push
add
jecxz
imul
pusha
scas
dec
lock
shll
fmuls
subb
adc
addr16
and
jb
sub
ret
fidivs
adc
fiaddl
out
lods
push
in
xor
loop
bound
sbb
push
inc
movsl
fwait
push
cwtl
mov
adcb
daa
hlt
mov
inc
sbb
fnsave
gs
lret
psllw
sub
sbb
cs
xchg
mov
or
jno
ja
and
sbbb
xor
or
cmp
out
rcl
xchg
mov
pop
sub
sub
dec
add
and
dec
adc
jg
push
jae
orb
icebp
shrb
out
or
imul
adc
push
out
int3
push
mov
mov
lea
pop
shrl
shlb
xchg
loope
xor
add
out
gs
aad
sub
add
es
stos
scas
and
pop
fs
clc
adc
adc
insl
or
add
ljmp
sub
mov
xchg
adc
aas
dec
add
pop
push
js
jg
movsl
push
subb
fxch
inc
push
out
or
mov
in
or
ljmp
jno
mov
iret
ds
add
inc
inc
mov
and
enter
jg
cmp
jnp
fsts
jns
push
dec
mov
bound
mov
les
aaa
add
arpl
enter
jecxz
dec
ljmp
adc
add
daa
inc
or
xchg
cmp
fdivl
mov
or
adc
xchg
lods
cltd
cmpsl
and
cli
hlt
stos
inc
inc
xor
testb
je
cmpsl
dec
sti
push
add
and
or
ret
pop
adc
bound
sbbl
js
mov
hlt
aas
mov
fsubrp
sub
rorb
in
out
ss
jno
loopne
push
or
push
sahf
and
int3
or
fnsave
sub
movsb
in
fistpl
ret
rorl
push
add
push
push
add
mov
lcall
ja
scas
mov
stos
adc
dec
ror
inc
mov
cmc
pop
call
or
cmp
insl
std
outsb
fs
out
jmp
imul
jp
inc
loop
xchg
idivb
inc
dec
and
ljmp
sbb
mov
call
adc
sbb
fsubl
mov
data16
xchg
xor
enter
mov
fdivp
pop
sub
add
in
cli
and
daa
loope
int3
adc
xchg
daa
leave
arpl
mov
fimuls
adc
std
mov
mov
sarl
es
and
xor
loopne
dec
mov
popw
nop
jnp
add
lock
xor
mov
cmp
push
in
mov
dec
aaa
xor
aaa
into
inc
push
lret
je
out
mov
pop
push
mov
data16
adc
fdivp
fcoms
sbb
xchg
push
cmpl
cmp
dec
popf
cmp
mov
jecxz
xchg
in
jp
inc
inc
xchg
cmp
pop
mov
fstl
inc
leave
jp
mov
sbb
cmp
test
mov
inc
or
dec
mov
mov
mov
fidivrs
sar
fildl
dec
pop
cmc
mov
jecxz
xchg
ret
pop
add
test
xchg
add
and
out
xchg
ja
xchg
test
jns
push
shll
bound
mov
stc
data16
fiaddl
fwait
push
fildl
test
ds
loope
pushw
rcrb
mov
jb
in
out
xor
cmc
dec
or
sub
pushf
and
test
and
inc
push
sub
imul
pushf
and
jmp
pop
push
dec
cld
xchg
lcall
jo
jmp
loope
adc
jno
aas
dec
sub
lcall
or
jo
cltd
sub
lods
loop
xlat
jno
push
lods
push
js
leave
fnstcw
ds
out
cld
xor
mov
xor
ja
mov
sub
scas
or
ss
jb
and
mov
mov
je
fnop
stos
es
xor
or
jle
xchg
adc
xchg
push
scas
jnp
mov
pushf
xor
add
push
cmpsl
mov
fdivs
mov
sub
dec
adc
or
sbb
jnp
movsb
loop
aas
mov
clc
andb
or
jl
adc
sbbb
roll
js
imul
push
xchg
adc
inc
in
into
lret
sub
out
pop
push
jns
into
xchg
int
sahf
inc
int3
lock
cmp
add
inc
rcll
fdivl
sbb
sub
stc
add
mov
hlt
mov
inc
sar
popa
pop
fimull
fwait
dec
sti
push
mov
repnz
inc
ror
dec
stc
pop
dec
fists
leave
cmp
sbb
pop
fabs
jge
mov
test
pop
icebp
enter
cs
mov
enter
stc
pop
out
out
push
add
add
jmp
jns
out
xchg
lahf
adc
jecxz
movsl
ja
sbb
outsl
xchg
dec
pop
push
imulb
ret
aam
mov
sub
int3
adc
fcompl
adc
mov
adc
insl
cmp
or
shrb
add
and
jmp
mov
movsb
mov
iret
cli
shrl
loope
push
das
sti
aam
les
jne
mov
fcoml
daa
lods
push
cli
dec
loop
es
xchg
pop
lods
imul
push
fisubs
or
cmp
ljmp
sbb
xor
dec
loope
sub
outsl
int
inc
inc
mov
sub
pop
fcmovnbe
shr
cmc
dec
pop
fistps
cmpsb
and
aam
mov
mov
add
out
cmp
icebp
in
pop
out
enter
data16
adc
aam
jl
mov
pop
dec
aaa
fiaddl
lcall
loopne
xor
repz
shrl
jo
push
scas
bound
cld
imulb
pop
outsl
sbb
outsb
add
pop
repz
xor
or
setle
ret
hlt
sub
movsb
ljmp
push
xchg
and
addr16
push
aas
cmp
xor
mov
lods
out
mov
sarl
mov
jl
dec
add
pop
cmp
fwait
inc
cmp
lods
xor
xchg
jnp
daa
adc
pop
outsl
inc
out
notl
bound
arpl
mov
sub
bnd
fldt
mov
movsl
push
adc
out
mov
mov
lret
cld
in
adc
stc
shll
mov
jmp
test
push
scas
xor
inc
mov
xor
insb
call
mov
mov
cmc
inc
fpatan
pushf
mov
cmpsb
les
sub
outsl
adc
and
inc
sbb
lods
mov
iret
xchg
jns
enter
mov
fsubrs
cmp
cmpsl
les
fbstp
shrl
dec
dec
sbb
jle
cmp
pop
xchg
and
inc
mov
lcall
fdivrl
cli
sbb
mov
gs
pop
push
pop
fcomps
or
cmp
inc
xor
inc
movsl
nop
cli
inc
pushf
push
cli
fistpll
incb
fsubl
add
mov
xchg
dec
div
mov
int3
adc
xchg
lret
xor
rclb
pop
js
icebp
insb
cmp
mov
cltd
add
pop
outsb
cld
inc
fs
stc
mov
daa
jge
mov
xor
inc
stos
mov
stos
pop
adc
push
or
push
enter
xor
add
inc
aas
xor
push
inc
or
xchg
cli
cmp
mov
push
int
mov
dec
sbb
xchg
add
popf
test
sub
mov
sti
sbb
mov
stos
or
int
inc
pop
ljmp
push
inc
xor
test
outsl
nop
cmp
aad
mov
rcll
into
dec
mov
push
push
mov
mov
mov
daa
nop
inc
mov
outsb
das
ljmp
mov
fwait
mov
dec
cli
cmc
mov
jb
cmp
push
adc
leave
testb
arpl
mov
add
cmpsb
inc
xor
lcall
adc
pop
insb
pop
sbb
and
push
mov
xchg
int3
push
dec
loopne
push
pop
mov
or
hlt
add
push
jno
sub
push
stc
testl
add
or
add
mov
arpl
into
pop
decb
add
ja
cld
xchg
loope,pt
or
xchg
mov
push
add
jns
data16
arpl
xchg
ss
dec
jmp
push
or
adc
arpl
xchg
inc
fcoms
mov
imul
repnz
cld
jbe
jmp
mov
pushf
mov
mov
mov
and
xor
lock
movsb
xchg
adc
movsb
stos
iret
fst
test
mov
lcall
mov
add
mov
xchg
mov
xchg
mov
pop
ds
in
adc
cli
dec
inc
push
mov
lods
xchg
adc
ret
xchg
add
stos
scas
mov
pop
lds
idivl
lret
mov
push
ja
stos
adc
fisttpl
outsl
push
cmp
js
pushf
aas
lods
inc
jno
pusha
into
adc
in
std
int3
out
inc
loopne
jge
movsl
cmp
sahf
pop
push
in
ljmp
mov
dec
iret
movsl
or
dec
pop
sti
imul
stc
rcll
or
dec
jecxz
push
sub
dec
cwtl
ja
rorl
inc
ljmp
jb
hlt
and
dec
into
mov
jmp
fsubp
cmp
or
je
test
fidivl
imull
push
dec
repz
rcl
shll
cmp
and
inc
ficomps
ret
dec
mov
cltd
std
xchg
and
leave
dec
push
int3
pop
hlt
out
das
cmp
shlb
sbb
cld
lcall
movsl
mov
lcall
pop
and
and
shll
insl
sbb
dec
sbb
xchg
fcoml
xchg
lcall
jbe
and
xor
lods
and
out
out
jecxz
adc
xchg
sbb
jecxz
repz
inc
clc
or
int3
mov
add
or
add
lea
push
xchg
test
roll
js
push
lret
xchg
ret
jle
sub
and
mov
adc
sub
jne
jecxz
sub
jnp
xor
sub
int
mov
addr16
cmc
xchg
adc
mov
sbbl
in
js
lret
cmp
add
ja
dec
es
jb
mov
inc
cli
cmp
dec
cmc
imulb
out
jmp
loopne
jo
scas
and
imul
mov
adc
inc
mov
ret
in
cli
or
rcrl
push
repz
mov
mov
jmp
dec
ljmp
stos
jbe
das
lea
xchg
pop
jns
rorl
clc
sub
inc
mov
in
into
inc
in
dec
jmp
das
clc
daa
inc
dec
push
mov
aaa
lret
dec
fstl
mov
popf
aam
shrl
sbb
pop
loope
cmp
mov
mov
xchg
loop
fwait
imul
adc
adc
add
daa
fucom
cmp
jg
pop
push
dec
mov
sub
sub
inc
add
lods
jecxz
cli
lret
jae
stc
jo
sub
dec
pop
sub
imul
and
add
sbb
adc
stc
mov
sub
imul
xchg
out
pop
inc
or
into
lahf
out
movsl
pop
xor
int3
pusha
sbb
xchg
hlt
rolb
adc
loope
imul
std
fcomp
sub
inc
push
push
jmp
ret
mov
in
mov
sub
sti
lret
cltd
fscale
cltd
pusha
push
sub
mov
enter
adc
faddl
incl
rcrl
movsl
push
inc
sub
imul
inc
fld
cmpl
rcr
mov
es
mov
ljmp
pushf
repz
aam
cltd
sub
sbb
mov
pop
push
mov
mov
jbe
adcb
jp
fisubl
jo
push
testb
cmp
cmp
leave
int
movsb
jecxz
sub
pop
jmp
pop
loopne
lods
pop
mov
pop
movsl
cmp
shr
jnp
pushf
scas
or
mov
pop
dec
jno
hlt
mov
out
mov
or
popl
push
pop
imul
inc
movsb
arpl
mulb
jno
mov
sub
sbb
js
or
mov
pop
pushf
mov
mov
inc
test
inc
and
adc
lods
and
enter
outsb
mov
push
jl
loop
sub
fdivrl
std
mov
push
cmp
add
iret
inc
fldenv
cld
lods
jg
cs
sub
dec
sub
sbb
xor
imul
push
pop
jge
xchg
js
inc
stos
or
pop
adc
sbb
add
xor
xor
movsb
shl
jle
add
aad
xchg
push
outsb
aad
movl
and
sub
in
adc
out
out
sbbl
out
lea
add
mov
fcomi
pop
mov
out
sbb
imul
lds
push
or
and
push
push
jne
mov
push
adc
fwait
hlt
ret
iret
sbb
test
test
mov
mov
test
mov
fisubrs
push
add
add
outsl
mov
and
pop
mov
rcrl
xchg
pop
xor
pop
unpcklps
inc
bound
repz
adc
jno
js
inc
test
ficoml
lahf
pushf
pop
repnz
cmp
mov
daa
cmp
fistps
mov
fcoml
or
scas
outsl
xchg
in
es
notb
push
lea
aaa
push
and
mov
sbb
insl
hlt
lock
cmp
fndisi(8087
dec
fiadds
test
in
push
cmp
test
xor
subb
pop
push
jns
loopne
fiadds
lahf
mov
out
test
les
loope
xchg
int
pushf
jmp
or
loop
rcrl
sbb
and
nop
mov
sbb
pop
dec
sbb
popa
into
mov
push
cmp
cmp
mov
xchg
add
shl
std
mov
cwtl
sbb
mov
sbb
mov
dec
sbb
cmp
jmp
lahf
out
outsb
sub
inc
pop
ljmp
push
adc
rolb
sub
cs
xchg
sub
jl
ja
jbe
enter
sub
jge,pn
test
xchg
je
mov
out
and
xlat
test
push
lods
dec
inc
push
jmp
bound
jecxz
xor
addr16
push
push
xor
cmpsb
in
fdivl
cs
popf
xchg
aam
subl
or
dec
in
movsb
cmp
push
pop
sbb
xor
repz
mov
popa
push
test
lock
mov
push
cmp
imul
test
pop
cli
pop
dec
or
jns
pop
cmp
or
cmp
cmpsl
icebp
lret
mov
out
push
xchg
pop
mov
outsb
sub
pop
rcl
int3
lret
fs
mov
jge
mov
aas
fisubrs
dec
pushf
sub
inc
inc
jmp
stos
test
dec
hlt
enter
mov
cld
pop
dec
mov
xor
mov
mov
stos
lds
mov
test
add
mov
push
pop
std
pop
mov
sbb
lea
or
add
lods
mov
add
shr
repz
scas
fst
cltd
test
inc
mov
hlt
js
ja
add
clc
xchg
int3
jo
mov
mov
aad
xchg
add
and
gs
fistl
psubusw
test
cli
xor
sub
in
and
cmp
imul
mov
xor
jecxz
jo
and
inc
push
jbe
push
cwtl
xor
jns
lcallw
push
pop
xchg
cmpsl
push
and
fstpt
dec
daa
js
fldcw
movsl
mov
push
cmpb
mov
inc
repnz
inc
sbb
cmp
inc
popa
sbbl
shrb
movsb
movsb
cmp
pop
push
ror
ret
pop
lret
in
mov
aaa
sbb
ss
rcll
cwtl
popf
xor
inc
push
into
test
push
mov
pushw
in
mov
lods
leave
sbbl
arpl
addr16
pop
lret
or
iret
push
iret
aad
rcll
mov
xchg
and
mov
cmp
mov
std
into
ljmp
push
xchg
add
jbe
lcall
lods
test
int3
mov
lea
je
and
xor
pop
and
rol
mov
sbb
adc
mov
add
push
lock
push
movsl
jns
cmp
addr16
jg
loopne
pop
fsts
sti
xor
sub
mov
pop
xlat
jbe
and
lds
cmp
test
xchg
mov
dec
rsm
xchg
pop
in
xchg
lret
jno
aam
pop
mov
add
mov
loope
push
sub
repnz
sub
into
insb
outsb
pop
lahf
adcb
xchg
dec
mov
add
pushf
in
lods
ljmp
cmc
inc
sbb
xchg
jmp
aam
cmp
inc
stc
push
inc
sbb
mov
inc
outsl
add
mov
mov
mov
test
ja
pop
and
add
sahf
sub
or
ss
push
movsb
imul
lcall
add
rcrb
push
adc
idivl
jge
pop
incl
pop
add
nop
cmp
je
out
mov
sub
mov
dec
mov
into
xlat
jmp
addr16
xchg
jne
fiadds
xchg
sbb
push
imul
jg
ja
add
sub
xchg
xorl
pop
push
sarl
jmp
ret
das
call
rclb
bound
in
push
adc
xchg
popa
jg
inc
mov
jnp
fcmovnu
pop
test
cmp
lods
scas
jno
lods
or
sub
lret
jbe
sub
or
mov
cltd
xor
enter
sub
sub
cmp
jge
leave
std
xchg
jno
scas
aam
sbb
pop
je
mov
mov
pushf
bound
jmp
fs
inc
stos
inc
pop
xchg
in
jae
iret
fwait
push
mov
dec
xlat
popa
int
push
stc
aam
xor
repz
xadd
idivl
jle
adc
scas
ret
orl
or
mov
mov
pop
pop
xlat
pop
lods
pop
dec
add
loope
and
popf
push
cltd
test
pop
mov
pop
ds
xchg
rorb
mov
shrb
ret
shll
or
xor
sbb
or
xor
xor
xchg
decb
das
sti
mov
xchg
sub
mov
pop
sbb
ffree
push
fwait
push
bound
mov
sahf
sub
inc
or
mov
mov
or
nop
lret
lea
adc
jl
mov
jge
pop
fists
sbb
adc
aaa
mov
jns
pop
pop
inc
jbe
pushf
cli
dec
test
add
int
fstpl
jne
mov
scas
in
call
cmp
ret
movb
cmp
lods
pop
in
and
test
mov
test
mov
mov
jecxz
in
mov
daa
add
and
pusha
jle
jle
mov
push
pop
cs
pop
cmp
fsubrs
aas
pusha
xorl
push
dec
and
movsb
icebp
or
mov
mov
fimuls
ds
jb
xchg
add
dec
rcrl
cmc
sar
int
les
call
les
sub
and
pushf
and
out
adc
fisttpl
jge
fsubl
mov
scas
and
shrb
or
lods
mov
add
push
imul
scas
fcmovb
mov
fcmovne
shll
jno,pt
sbb
jae
inc
cmpsl
sbb
jnp
int
out
pop
scas
add
lret
cmp
imul
hlt
push
imul
out
xor
cmp
aaa
incl
xchg
adc
mov
dec
repz
sbb
repz
rolb
lds
shl
sub
mov
rcrl
xchg
mov
shll
jp
inc
bound
xchg
mov
decl
cmp
repz
push
cmc
mov
sub
inc
loopne
cmp
mov
aam
xlat
sahf
xor
fisubs
add
mov
movsl
and
pop
fnstenv
xor
fmull
sahf
sti
and
dec
mov
fdivl
mov
test
dec
pushf
pop
lods
testb
pop
out
jecxz
add
lea
in
xor
movsl
dec
xchg
ret
jne
shl
popa
dec
call
jmp
fsubs
sub
mov
mov
repz
call
shll
lahf
mov
imul
push
rolb
lods
shlb
iret
data16
cmp
jbe
insb
adc
test
inc
add
imul
ja
dec
pop
outsl
push
mov
lea
inc
scas
push
and
out
push
fadd
inc
mov
ljmp
daa
mov
andb
pushf
xor
and
xorb
lcall
push
sub
lret
push
cmc
sar
and
std
and
sub
pushf
sbb
pop
lods
cmp
enter
int
mov
cld
dec
ds
xchg
out
xchg
push
fxch
loope
xchg
sub
mov
mov
mov
mov
test
jecxz
ljmp
mov
out
mov
testb
adc
mov
mov
jo
mov
add
testl
pop
std
addr16
adcl
ficompl
adcl
cmp
into
jno
loope
pop
imul
push
daa
mov
ja
in
push
sub
push
dec
mov
lods
arpl
adc
pop
jmp
xchg
fisubl
xchg
insl
lds
rcrb
mov
xor
test
mov
shl
sub
sub
scas
cli
imul
xchg
mov
pop
xchg
jmp
and
stos
jbe
in
call
sbb
pusha
imul
mov
pop
sub
inc
pop
test
and
sub
jmp
loopne
xor
out
or
jl
ret
pusha
mov
push
jmp
xor
cld
movsl
fisttpl
xchg
nop
jbe
inc
push
out
addr16
xchg
mov
das
push
addb
or
outsl
inc
cmp
inc
nop
cmp
stos
fsubs
fs
fbld
push
clc
popl
mov
dec
fimuls
jmp
das
loope
stc
out
in
inc
je
jae
pop
call
shlb
cmp
sahf
in
sub
xor
mov
mov
stc
enter
enter
fisubs
arpl
pop
jecxz
test
add
pop
sbb
sbb
rcrl
insb
fists
sbb
pusha
andb
xchg
js
or
mov
mov
sbb
cli
push
nop
jge
out
pop
gs
setle
sbb
into
xchg
cmp
mov
int3
fbld
test
sub
inc
pop
fnstenv
cltd
mov
xchg
and
ret
dec
cmp
add
xchg
cli
in
mov
pop
cmpsb
ja
push
outsl
fnsave
sbb
mov
cs
xor
mov
dec
mov
dec
popf
jne
outsb
xchg
adc
mov
push
mov
test
scas
ficoms
outsb
push
inc
imul
subb
pop
pop
jae
inc
repnz
xor
fwait
dec
iret
int3
xchg
lods
jmp
jbe
addl
pushf
andb
jo
inc
ret
push
mov
ficomps
mov
sbb
shll
push
or
xchg
test
pop
in
ja
sbbb
jg
inc
pop
into
loopne
psadbw
push
test
cmp
sbb
pop
jmp
jb
inc
mov
mov
push
ss
outsb
in
subl
call
or
sub
shlb
aaa
add
sti
inc
shll
jle
cmc
and
cmp
jmp
mov
mov
xchg
pop
mov
out
cmp
lock
sbb
sbb
pop
push
xchg
adc
lret
movsl
flds
or
xchg
adc
cmp
jbe
ret
fstl
dec
jb
or
jo
repnz
mov
jmp
pop
xor
add
ret
pop
push
outsl
cmp
test
add
pop
iret
pop
lea
loop
cmp
daa
pop
add
cmp
inc
xchg
lock
fisubs
mov
mov
ficoms
subb
push
arpl
lahf
mov
aas
mov
pop
sahf
sub
enter
shlb
mov
add
sbb
es
cmc
enter
add
jno
adcb
dec
lods
xlat
outsb
dec
fwait
push
stc
xor
inc
push
inc
pop
test
jge
test
add
push
sub
inc
jge
test
out
xchg
repz
shrb
or
xor
sub
adc
es
pop
mov
sbb
leave
mov
out
mov
pop
outsb
sub
and
int
cltd
or
cltd
insb
ss
lock
pop
les
mov
jo
outsl
mov
fcomip
mov
fs
inc
and
push
push
insb
popa
xor
popf
ret
mov
dec
add
into
cmpsl
lods
andl
icebp
add
xchg
mov
jg
cld
jnp
cmp
push
inc
fmuls
and
adc
mov
aas
push
imul
popa
inc
ss
call
je
daa
mov
xor
sub
rclb
into
push
xor
mov
cwtl
mov
push
push
sub
jg
sub
adc
inc
push
mov
mov
in
xchg
pop
xor
add
dec
pusha
inc
and
ret
cmp
insl
add
add
lods
xchg
imul
push
cltd
xor
jns
and
sti
lcall
ret
pop
outsl
jne
test
push
loop
insb
int3
out
incl
jle
enter
or
ret
jnp
stc
inc
or
sub
xchg
arpl
xchg
movsb
outsl
adc
jne
addr16
movsb
sbb
jge
sbb
loope
mov
lcall
call
clc
fwait
push
fsubs
and
fcoms
and
mov
mov
xchg
add
iret
pop
arpl
mov
subl
push
xor
lret
fwait
dec
hlt
lock
sti
cmp
nop
fsub
jge
sbb
mov
sub
cmpsb
icebp
out
loope
rcrb
push
sbb
xchg
hlt
add
arpl
in
les
xor
int
inc
mov
pop
mov
pusha
cld
jg
push
bound
jnp
add
out
xchg
inc
out
adc
sub
inc
xlat
xchg
shrb
stc
add
push
or
xor
jp
out
dec
test
pop
fnsave
adc
andl
lods
adc
jne
and
popf
mov
xchg
or
or
and
jo
lcall
mov
xchg
jge
cmpsb
movb
loopne
ljmp
popf
lret
xchg
xorl
cwtl
fistpl
aad
xor
pop
std
pop
push
movsl
xchg
cwtl
add
sti
cli
push
or
mov
mov
ret
sbb
cmpsl
xchg
lret
cmp
or
jmp
mov
adc
mov
mov
ljmp
jle
in
pusha
xchg
sbb
sub
cli
call
add
xor
scas
nop
popa
inc
mov
in
inc
or
sbb
insl
filds
repnz
xchg
rcrl
mov
sub
in
imul
subb
mov
sub
cmp
xchg
inc
mov
inc
mov
dec
ffreep
mov
jge
xchg
stos
andb
pop
inc
lock
rcr
sarl
std
jle
or
cmp
cld
mov
mov
sub
and
into
nop
test
dec
push
cmp
repnz
insb
out
dec
push
in
lea
or
cmp
das
cli
and
ss
pop
ja
fldl
sbb
int3
or
fs
xchg
and
mov
stos
out
add
repz
inc
movsl
xor
aas
dec
shrb
loope
add
mov
pop
sarl
adc
inc
xchg
addr16
in
pop
js
push
xlat
pop
ret
fcoms
movsl
mov
ret
imul
lock
sbb
dec
xor
jbe
orb
xchg
ss
in
je
push
dec
mov
xchg
add
dec
push
or
cmp
xor
add
ret
xchg
ja
dec
lods
adc
arpl
cwtl
sbb
jae
loop
push
arpl
push
mov
push
lds
sbb
stos
pusha
xchg
pop
jp
fwait
dec
mov
jbe
adc
in
dec
je
lds
xor
dec
loopne
adc
push
ja
cmp
jae
pushf
lods
movsl
xchg
call
jbe
mov
sbb
mov
pop
imul
sub
dec
dec
pop
dec
dec
mov
mov
outsb
jmp
jl
sub
jp
je
jbe
pop
cli
mov
in
iret
gs
jmp
dec
sub
xchg
scas
les
fadd
dec
pop
pusha
mov
sbb
out
data16
mov
stc
pop
pop
lahf
cmp
cmpsb
sbbb
stc
xor
jnp
cmp
mov
shll
in
loope
pop
adc
pop
jbe
mov
sbb
ficompl
cld
add
xor
dec
mov
cmc
pmaxub
lret
lcall
stc
and
dec
clc
sahf
push
mov
test
mov
xchg
loop
pop
shrb
incb
cld
lret
jb
cmc
mov
or
leave
fnstenv
adc
adc
aaa
iret
jnp
add
inc
push
cmp
aam
sbb
jle
or
stos
rolb
sbb
push
mov
push
test
mov
xchg
xchg
push
lcall
dec
and
test
divl
cmp
ret
ret
fdivl
hlt
mov
pop
ret
xchg
xchg
pushf
dec
outsl
jge
mov
test
data16
leave
sub
push
je
pop
cmpsb
jae
rep
mov
push
cmpsb
int3
sahf
jae
mov
adc
mov
mov
jne
fdiv
xchg
negw
movsb
daa
xor
aaa
das
into
sub
pop
sbb
ret
pop
cwtl
repz
bound
out
jecxz
mov
rorl
sarl
pop
push
lods
stos
mov
mov
push
mov
mov
mov
pop
dec
lds
mov
xchg
andb
in
mov
dec
loop
insl
cli
cld
lods
cmpsb
aam
pop
pop
xor
push
leave
lds
idivl
sub
ret
clc
and
lods
jp
lahf
mov
mov
adc
fsubs
gs
ds
in
iret
orb
scas
js
sbb
dec
insb
add
mov
les
cmp
outsl
xchg
mov
cmp
lcall
test
xor
and
lcall
out
mov
push
cmp
test
loopne
stc
adc
sub
aad
cmp
repz
fwait
lods
mov
or
repz
pop
sti
xor
mov
mov
fisttpl
or
cmp
jecxz
push
inc
fmuls
push
mov
mov
loopne
sahf
or
mov
faddl
xor
jo
adc
push
xor
jnp
insl
lea
jnp
or
pushf
lods
and
xor
mov
cmp
loopne
in
add
stos
shlb
lods
mov
dec
imul
mov
xchg
or
dec
test
pop
mov
push
mov
adc
lahf
xor
cmpsl
mov
sub
add
dec
dec
bound
and
push
cmp
xchg
lea
stos
push
mov
sbbb
sub
pop
mov
mov
out
dec
xchg
push
outsb
jp
leave
popf
stc
or
fidivrl
sub
pop
rcl
xor
aas
mov
loopne
outsl
fimuls
enter
push
push
and
lret
push
push
idivb
out
nop
fisttps
rcl
movl
mov
cld
inc
mov
xchg
push
lcall
mov
outsb
push
cltd
fcomi
cmp
sbb
fsubrp
in
pop
sub
loope
std
call
kmovd
or
sbb
cs
loope
mov
imul
sub
stos
insb
mov
gs
push
in
insb
lcall
test
mov
mov
add
rol
dec
out
loopne
popl
cli
cmp
nop
dec
xchg
adc
mov
fbld
add
das
sub
xor
pop
test
jmp
out
hlt
lret
xor
cmpsb
scas
push
in
jecxz
daa
xchg
or
mov
scas
xchg
sbb
or
jo
inc
push
xchg
leave
adcb
repnz
mul
test
push
nop
test
xchg
insb
lcall
push
iret
or
mov
test
xchg
movsl
jne
adc
hlt
mov
rcll
ss
adc
inc
fdivp
mov
shll
adc
push
jp
xchg
subl
sbb
jnp
dec
in
mov
pop
jno
insb
cs
xchg
xchg
scas
mov
mov
mov
addr16
pop
cld
sti
call
inc
out
daa
in
xor
xchg
mov
movsb
jbe
push
aas
jns
or
xchg
pop
mov
or
lret
outsb
sub
mov
iret
push
data16
sub
push
cmp
jbe
ja
push
movsl
call
arpl
js
je
cmp
jno
dec
testl
ljmp
sub
sahf
jl
cmp
orb
call
and
fsubrl
sbb
mov
jne
ret
xorb
rorl
mov
mov
out
clc
jb
sbb
xor
sbb
mov
repnz
outsb
mov
stos
xchg
adc
add
mov
js
or
dec
sub
jae
lods
dec
movsl
outsb
or
jl
in
sahf
pop
shlb
jno
pop
imulb
leave
mov
pop
adc
xchg
or
mov
cmp
shrb
cmp
mov
pop
or
cmp
inc
lods
sub
out
push
dec
xor
add
xchg
sub
jl
lcall
movsb
iret
adc
inc
pop
hlt
xchg
mov
xor
cmpsl
sub
lds
mov
cmp
movsl
test
inc
or
push
xchg
push
adc
cwtl
das
dec
insl
push
fidivrs
sub
aam
fdivl
mov
ret
outsl
cmc
rcrl
sbb
push
sub
push
xchg
adcb
jb
add
jb
adc
xor
pop
push
cmp
in
add
and
ret
cmp
mov
int
outsl
sbb
cld
push
es
xor
xchg
jbe
xor
xchg
push
test
scas
cld
outsl
add
outsb
in
call
add
dec
cmp
xchg
mov
inc
mov
mov
lods
jnp
enter
mov
stos
or
mov
jecxz
repz
cmc
jle
stos
icebp
repz
dec
out
test
cmp
bound
adc
fildll
cwtl
scas
mov
dec
leave
flds
jo
pop
loop
iret
addb
sbb
mov
pop
inc
stc
xchg
sub
pusha
lock
mov
cli
sbbl
loop
or
iret
xchg
iret
cltd
push
mov
ret
or
addr16
push
out
shll
daa
jp
es
sar
sbb
or
lods
ja
hlt
rcl
dec
mov
push
cli
push
add
rcrl
dec
cmpsl
rorl
das
test
scas
xor
mov
mov
fildl
or
dec
cmpsb
rep
push
js
dec
mov
mov
jl
in
dec
mov
adc
or
and
or
pop
or
in
scas
notb
js
roll
imul
jns
pusha
jge
add
inc
outsl
add
add
push
mov
hlt
inc
dec
cld
sar
popa
jnp
iret
subb
cmp
or
inc
push
mov
adc
sbb
sub
pop
mov
aaa
lret
icebp
in
jns
lock
and
inc
pop
cltd
jb
inc
sbb
push
dec
cmp
push
lahf
mov
or
test
scas
xlat
pop
mov
stos
cmp
mov
lret
ret
ja
sbb
pop
cltd
push
push
add
or
add
dec
xchg
testl
sbb
xchg
insb
cmp
push
test
popa
xchg
jo
or
mov
pop
shll
std
sub
repz
pop
popa
fcoml
outsb
sub
sub
fisubrs
les
push
data16
int
or
repz
adc
and
xchg
sar
data16
sub
decb
push
cmp
aad
adc
and
lret
dec
sub
pop
fs
push
hlt
pop
outsl
clc
and
mov
outsl
sarl
movsl
push
divl
pop
xor
lds
stos
push
aaa
mov
inc
out
repnz
mov
push
fiadds
arpl
push
add
and
into
in
pxor
dec
and
jae
sub
and
dec
mov
std
addr16
testb
test
rcr
sbb
sbb
lods
dec
bound
aam
lea
sbb
inc
mov
in
rcrb
jae
xor
xchg
sub
sahf
cmp
sbb
addr16
ds
jno
add
sbb
push
out
imul
sub
or
jecxz
dec
xchg
out
inc
push
cmp
insl
fdiv
push
inc
push
ds
aaa
push
nop
sub
mov
mov
inc
push
clc
mov
mov
or
add
nop
jne
or
dec
ljmp
shl
gs
adc
dec
pop
dec
add
fdivs
or
pop
push
push
test
cli
fldcw
fidivs
add
lret
stos
lods
add
push
jge
dec
xchg
jl
loope
jno
sbb
in
mov
or
fdivl
mov
pop
shll
adc
loop
cmp
or
mov
fcompl
psadbw
adc
pop
xor
leave
pusha
push
std
les
aaa
out
out
shl
test
in
xchg
adc
popl
mov
mov
arpl
clc
lds
sbbb
cmpsb
adc
loopne
into
sbb
cmp
add
xlat
dec
lock
divb
fs
inc
addr16
cmp
les
add
sbb
mov
out
ret
es
xchg
pusha
pop
mov
mov
sbb
cmp
xchg
jmp
nop
daa
es
pop
sbb
xor
adc
sti
ljmp
jnp
fcompl
dec
or
hlt
xor
test
cwtl
mov
adcb
jb
movsl
mov
and
xchg
incl
imul
mov
nop
sub
pop
inc
pop
or
jnp
daa
xchg
test
in
jae
and
mov
inc
fdivr
negb
jns
push
lea
jl
dec
adc
and
mov
sbb
mov
je
mov
fsubs
adc
push
jb
mov
sahf
jae
xchg
mov
jmp
push
mov
jns
loope
push
mov
stos
xor
xor
xor
fcompl
xchg
sub
ljmp
iret
dec
movsl
js
add
sub
lcall
imul
xchg
add
inc
scas
sbbl
jecxz
ret
mov
dec
add
idivl
push
mov
sbb
out
xchg
mov
inc
dec
jmp
mov
pop
mov
xor
push
pop
mov
into
pop
aaa
add
stos
push
leave
xor
mov
jae
imul
cmp
mov
adc
pop
hlt
push
mov
pop
test
pop
xor
sbb
pop
or
xor
or
pop
jmp
or
subb
fldt
adc
cltd
out
lods
push
adc
sub
ds
cmp
out
pop
mov
repz
fsubs
xor
adc
dec
add
inc
jp
pusha
jle
dec
lods
das
pop
xchg
shrl
fpatan
xchg
fistpll
add
out
notb
in
jecxz
mov
jle
negb
dec
mov
aas
adc
bound
mov
inc
imul
lret
or
and
and
adc
push
mov
call
ret
xchg
in
jo
push
push
dec
sbb
imul
jp
ljmp
rclb
adc
add
xchg
scas
adc
mov
dec
test
sbb
iret
ret
pop
add
xor
sub
sub
sub
jecxz
jge
enter
faddl
shlb
mov
or
sarb
fidivs
push
lea
and
xor
adc
sarb
in
int3
call
outsl
or
clc
cmpsl
mov
mov
mov
and
in
test
lret
mov
fdivrs
pop
leavew
and
sbb
pop
scas
jnp
mov
cltd
ret
lds
js
in
push
push
lods
leave
pop
sahf
stc
loopne
lahf
pop
mov
mov
mov
or
jbe
scas
ljmp
or
rolb
testb
sahf
adc
mov
xchg
or
adc
mov
push
mov
xchg
ljmp
imul
fisttps
pushf
scas
xchg
cmp
mov
mov
aam
dec
xchg
lds
cmpsl
adc
adc
sbb
xor
sti
inc
leave
sub
not
sub
in
push
fdivrs
in
jb
cltd
sub
push
aam
fwait
in
jns
cmc
movsb
jl
insl
jae
pop
mov
lds
or
cmp
dec
adc
mov
jp
cmpsl
bound
cwtl
mov
or
lods
pop
pushf
mov
sbb
stos
add
call
fcmove
ja
xor
insb
nop
xor
pop
cmp
xor
addr16
sbb
int3
mov
and
mov
aas
hlt
pop
add
xchg
test
cmpl
add
rcr
pop
pop
push
int
bound
into
pop
test
movzbl
cmp
loop
mov
test
pop
mov
sub
outsb
push
mov
movsl
push
jl
jb
je
add
push
xchg
jmp
pop
add
in
icebp
add
clc
leave
mov
push
sub
je
mov
push
fnstcw
lods
das
into
cltd
data16
ret
fs
or
out
in
jp
dec
mov
sub
std
frstor
std
push
xor
rcrl
inc
gs
xor
mov
push
xchg
push
jmp
loope
mov
dec
fbstp
dec
in
pop
mov
jge
in
cmp
cwtl
das
ret
dec
sbbb
in
mov
xor
add
cltd
mov
stos
jbe
adc
inc
orb
mov
mov
push
inc
mov
mov
hlt
and
xchg
test
mov
out
sbb
lret
cld
rol
pop
inc
pusha
sub
mov
int3
cld
mov
dec
mov
imull
in
setb
and
add
push
test
or
and
mov
push
aas
lods
mov
imul
sbb
adc
movsl
leave
das
imul
fiadds
enter
push
out
push
sub
pop
repz
subb
mov
dec
dec
push
popf
sahf
adc
imul
sub
mov
imul
test
ja
or
cmpsb
mov
mov
insb
out
lahf
mov
pop
mov
or
clc
out
adc
jl
sub
xchg
cmp
xchg
fwait
cld
xchg
dec
adc
lea
dec
mov
lahf
aad
sar
cs
mov
cs
stos
bnd
sbb
mov
nop
jo
jmp
mov
test
insl
or
cmp
mov
repz
inc
clc
lea
das
stos
push
add
aaa
jo
cmp
addr16
ffree
pop
jb
pop
adc
push
inc
pop
sub
dec
inc
mov
sarl
and
add
adc
outsb
dec
cmp
or
mov
int
aam
pop
inc
cmp
mov
test
sub
adc
rolb
mov
inc
mov
jb
mov
cmp
adc
push
shl
test
push
lcall
in
mov
mov
ficomps
ljmp
mov
mov
xor
adc
mov
add
mov
aam
adc
lret
xor
mov
push
testl
incb
cld
xchg
mov
mov
into
cmp
inc
mov
push
lahf
neg
add
dec
push
and
fwait
pop
dec
pushf
sbb
add
inc
mov
in
mul
inc
stos
fiaddl
js
mov
icebp
jno
popa
add
cltd
push
mov
test
push
sub
push
rcll
cmp
mov
mov
push
mov
shlb
add
loopne
push
mov
xchg
lcall
inc
mov
xchg
in
int
out
cmp
imul
pop
pop
mov
sbb
std
sahf
inc
cmp
or
xor
test
out
test
jbe
push
add
mov
mov
ficoms
jo
movsb
daa
mov
push
roll
xlat
push
inc
push
lock
ljmp
adc
je
sub
sti
leave
pop
or
xor
ja
js
enter
arpl
fidivs
mov
mov
fcmovnu
inc
out
mov
ljmp
or
out
xor
or
xorb
imull
lds
adc
pop
or
adc
ljmp
lret
pop
inc
enter
mov
cmp
push
mov
mov
sbb
mov
scas
jae
bswap
in
xchg
xor
call
in
jno
sbb
adcl
xchg
dec
jge
cli
mov
mov
outsb
fadds
icebp
jbe
pop
test
jg
out
xchg
adc
lods
jns
fistpll
mov
jne
fsubl
mov
jecxz
pushf
outsl
mov
mov
push
xor
sub
filds
xchg
inc
popa
ficompl
jge
sub
imul
lds
pushl
sti
mov
int
fstp
and
pop
ss
mov
sbb
hlt
loope
xchg
mov
loopne
adc
nop
mov
inc
push
leave
inc
out
sub
or
pop
sub
sahf
cltd
sbb
roll
loope
jno
inc
aaa
sbb
add
jbe
data16
sbb
mov
lret
sub
jp
sub
push
lret
bound
cwtl
jo
dec
loopne
aad
insb
out
insl
cmp
lds
pop
jle
stos
cmp
jecxz
mov
popf
imul
cld
pop
fisttpll
mov
aad
bound
das
cltd
test
nop
and
data16
cmc
enter
sub
add
dec
xor
repnz
fbstp
adc
ret
repnz
test
scas
push
push
push
leave
loopne
push
addr16
into
cmp
fisubs
push
jl
mov
mov
outsb
push
jmp
jb
mov
push
xor
jo
sub
insb
push
sub
ljmp
cmpb
mov
push
lods
aaa
adc
inc
fcomps
fildll
push
pop
jae
xor
xchg
jge
xchg
xlat
stc
push
cmc
daa
jb
sbb
sbb
cli
gs
or
int3
ds
shlb
mov
int3
xchg
xchg
adc
mov
pop
aaa
psubsb
add
aad
jp
jnp
pusha
test
adcb
or
daa
lahf
outsl
out
in
test
lods
xor
sti
fwait
mov
adc
stos
and
push
aas
dec
stos
fwait
std
stos
mov
fidivs
add
mov
adc
cwtl
clc
inc
loopne
adc
mov
pop
repz
adc
mov
sti
int
xchg
sub
pop
fidivl
movl
sarl
jns
fcomps
in
adc
aaa
add
inc
outsb
inc
add
bound
push
adc
add
cmp
pop
jle
push
nop
mov
xlat
pop
or
arpl
andb
or
test
dec
out
push
in
bsr
insl
add
addr16
fldt
ror
push
insl
push
push
insb
jg
mov
pop
out
dec
add
les
int3
mov
fnstenv
das
sbb
jle
cmc
js
lea
push
clc
xchg
das
ret
mov
rorl
imul
xchg
fisttps
icebp
lods
and
into
daa
mov
out
or
mov
outsl
mov
jle
in
lods
mulb
mov
xchg
mov
mov
xchg
insl
js
lahf
mov
fcmovnbe
and
sub
fistpll
imul
lock
mov
pop
repz
enter
push
xlat
je
inc
pop
sahf
inc
inc
fnstcw
incl
cmp
cld
xchg
insl
subb
mov
sub
lds
dec
jle
dec
in
fwait
icebp
insb
adc
imul
mov
dec
in
int3
inc
clc
mov
or
cmpsl
jnp
addr16
insl
out
das
adc
call
add
sbb
mov
or
cmp
fnstenv
popa
call
pop
sbb
pop
push
gs
popaw
mov
dec
arpl
cltd
js
inc
fisubl
or
or
cli
push
push
mov
lret
sbbb
sbb
mov
push
cmp
sar
mov
sub
orb
nop
insb
stc
adc
mov
test
mov
loope
fcmovu
dec
jecxz
js
icebp
out
mov
in
mov
mov
loop
jbe
pop
ret
fsubrp
sbb
rorl
fnsave
mov
cli
mov
xor
mov
sbb
mov
push
and
in
popa
das
in
iret
jecxz
sub
mov
pop
ja
dec
test
cmp
cmpsl
dec
sbb
add
iret
and
call
test
push
stc
adc
xchg
or
push
pop
daa
cmp
mov
rol
mov
inc
push
or
push
jl
pop
aad
and
sub
mov
and
loop
pop
add
cmpsl
pop
shlb
pop
clc
rcl
adc
push
sbb
cmp
xchg
sub
shll
rorl
xchg
pop
fisttpll
xchg
leave
cmc
jl
mov
std
push
mov
push
and
cmp
in
call
ja
aaa
addb
dec
cs
repnz
insb
add
xchg
in
pop
or
dec
pop
mov
and
xchg
addl
arpl
into
stos
mov
leave
pop
xlat
adc
clc
push
in
ret
mov
adc
outsb
xchg
or
cmc
mov
aas
xor
jecxz
sbb
ds
movsb
addr16
dec
pop
popf
psubusw
xchg
fisubl
ret
fildl
mov
adc
mov
jb
icebp
mov
xchg
in
mov
pop
rcrb
sbb
cmp
jle
pop
sub
loop
cmp
jb
lods
std
or
cmp
loop,pn
pop
iret
test
mov
out
push
cmp
int3
inc
mov
and
je
mov
lods
add
sbbl
scas
cmp
sbb
lods
aam
out
cmc
sbb
or
sbb
outsl
adcl
test
imul
push
dec
mov
and
add
pop
ja
pop
xchg
xchg
fisttpll
notb
nop
jl
rcrl
repz
mov
xor
pop
push
mov
jecxz
and
insb
cltd
and
push
inc
cmp
sbb
and
mul
lods
inc
repnz
out
test
adc
xor
xchg
dec
mov
sub
xchg
or
mov
xchg
call
and
jge
xor
lret
lods
loopne
and
into
push
jmp
adc
dec
lods
xor
inc
or
pop
in
in
adc
mov
dec
in
mov
mov
pop
or
dec
and
mov
stc
cmp
jne
out
add
cmp
fmul
dec
call
cli
mov
hlt
jg
stc
shl
pushf
cmpsb
add
loope
dec
das
outsl
loop
jecxz
xchg
repz
popa
negl
push
mov
stos
movsl
pop
pushf
xchg
cmp
sti
pop
jecxz
or
adc
xor
arpl
imul
push
add
mov
enter
daa
mov
gs
lds
stos
add
jno
stos
ret
out
pusha
xlat
adc
dec
jl
imulb
imul
fsts
mov
bound
sub
push
adc
dec
shll
jnp
sub
jl
lret
aaa
pop
pushf
out
mov
dec
sbb
addr16
mov
jge
js
mov
push
lea
cmp
pop
aaa
push
les
scas
dec
fisttpl
adc
mov
cmpsb
les
xlat
ja
inc
mov
imul
push
insb
jmp
pusha
inc
push
fsubrp
adc
fwait
xor
les
pop
lods
adc
outsb
xchg
mov
pop
enter
mov
mov
xor
or
adc
test
int
or
or
jo
sbb
inc
inc
jecxz
dec
jecxz
add
inc
xor
xor
fisubrs
push
jbe
mov
xor
add
push
push
pop
aaa
loopne
or
dec
mov
int
push
subb
lret
lcall
lods
fcom
cs
xor
ss
sti
mov
nop
fld
sbb
inc
aas
mov
fimull
jns
loopne
fsubp
push
sbb
inc
sbb
sub
sub
jb
imul
lock
mov
mov
and
push
lcall
jmp
dec
test
aas
mov
sbb
adc
jecxz
idivb
sbb
ss
notl
stos
cld
inc
test
sar
sbb
push
icebp
adc
int
cltd
in
xchg
out
test
int
mov
jge,pn
jb
stos
sahf
shlb
jmp
loopne
ret
outsl
inc
mov
data16
rol
cmp
sbb
or
repz
inc
fnsave
push
ret
outsl
je
sti
xor
stc
nop
push
push
gs
mov
mov
test
cli
scas
les
sbb
fwait
sub
lahf
push
lahf
mov
hlt
adc
jae
shl
movsb
sub
push
jno
cmp
adc
jno
mov
lods
test
ja
xor
xor
sub
arpl
sub
adc
add
pop
into
add
fsubs
xor
mov
add
cmp
loopne
out
cmp
test
xor
pop
add
adc
mov
jbe
and
push
leave
and
sub
xchg
jmp
push
dec
mov
mov
mov
iret
in
xlat
sbb
mov
jnp
jno
out
pusha
imul
enter
call
out
xchg
mov
lcall
das
in
xor
cli
jl
movsb
mov
int
fildll
cmp
inc
rcl
mov
xchg
hlt
imul
mov
inc
not
pop
adc
dec
jle
cmp
jmp
rcl
in
cltd
insb
filds
mov
xor
out
push
rcll
insl
test
dec
lock
shrl
adc
or
dec
mov
imul
inc
fmull
pminub
lds
xorb
adc
lea
jge
lods
sbb
out
xor
inc
cmpsb
cmpsb
fisubrl
pop
call
das
inc
loop
fcomi
or
add
inc
sub
sbb
lock
loopne
inc
mov
repnz
xchg
in
or
jg
test
pop
add
mov
push
sbb
cmpsl
mov
fdivrs
shlb
mov
or
inc
sbb
jg
jle
mov
pop
pop
add
inc
inc
loop
pop
aaa
dec
fstp
insb
push
fnstcw
pop
pop
add
mov
cs
daa
or
sbb
sbb
ret
addb
and
xor
push
push
filds
movsb
fs
into
xchg
imul
stos
xchg
push
push
mov
sub
xor
or
and
out
cltd
xor
test
pop
cmp
pop
ret
and
sti
xchg
add
push
mov
adc
cmp
pop
cmp
int3
outsl
jl
imul
xor
mov
sub
into
das
sub
bswap
mov
and
xchg
loopne
jg
xchg
insb
cmp
xor
scas
outsl
fistpll
adc
jbe
pcmpgtb
mov
popa
mov
push
push
cmp
or
test
out
xor
pop
push
jne
arpl
jo
cmp
notl
std
inc
add
inc
mov
mov
imul
jg
fdiv
mov
push
cmpsl
int
xchg
repz
mov
fidivrs
lahf
inc
outsb
int3
jl
cld
cmpsb
or
pop
or
cmp
mov
adc
xor
pop
or
test
dec
or
jp
jo
cmp
cs
pop
xchg
es
lds
iret
adc
aaa
push
pop
fistpll
adc
adc
dec
dec
xchg
scas
arpl
fsub
aas
jb
jb
mov
jmp
inc
mov
xor
fnsave
fistpll
in
adc
mov
cmp
les
push
cmp
pop
and
pop
xor
dec
pop
dec
dec
je
rorl
adc
adc
pop
xor
cmp
push
or
xor
scas
sub
pop
cmp
popl
mov
gs
lea
in
push
jmp
sti
push
bound
repnz
mov
jle
mov
xchg
rolb
dec
scas
out
xor
or
filds
jns
cmp
repnz
inc
inc
xchg
and
or
shlb
mov
push
or
ss
lret
xlat
cwtl
pushf
xor
ja
cs
lods
xlat
lds
adc
nop
lea
pop
mov
daa
fwait
push
push
into
je
xcrypt-ctr
cmpsl
sbb
jb
mov
jmp
sbb
fstps
jp
movsb
stos
pop
aam
addl
inc
mov
adc
aad
mov
mov
pushf
jb
or
sub
das
lds
ret
nop
dec
jecxz
xor
in
mov
push
add
sub
mov
xor
cld
sbb
aas
popa
sbb
inc
fldcw
lea
out
xchg
lcall
mov
mov
adc
cmpl
or
push
std
xchg
pop
das
or
xor
sbb
add
fld
cli
xchg
xchg
xor
or
cmp
jo
daa
or
mov
shll
sbb
cmp
or
sbb
not
iret
sub
rorl
std
stos
add
dec
sbb
jnp
inc
inc
fdivrs
fldenv
or
int3
xchg
daa
cli
mov
in
cmp
lahf
insb
jo
movsb
push
add
mov
sbb
inc
mov
cmc
out
sub
jmp
jmp
mov
jnp
stc
or
inc
dec
xlat
dec
fidivs
sub
adc
dec
std
xchg
cmp
pusha
push
loopne
mov
ret
stos
shrb
mov
sti
test
lret
mov
push
cmc
aaa
adc
dec
and
aad
scas
lock
xorb
jle
in
or
insl
xor
jns
or
repnz
testl
jbe
pushf
sub
jge
add
jp
mov
add
jbe
cmpsl
ds
andl
ja
in
in
stos
pop
cltd
es
push
xor
adc
push
mov
pop
incl
mov
xchg
loop
mov
dec
rclb
mov
movsb
das
mov
mov
iret
rcrl
pop
dec
jnp
fstps
sbb
mov
lods
nop
mov
data16
dec
sbb
lock
stc
inc
stos
dec
push
or
incb
rcrb
test
iret
xchg
in
cs
hlt
push
inc
xchg
cmp
test
jp
jecxz
pop
jbe
xor
testl
sbb
push
scas
push
push
dec
andl
push
sub
mov
or
pop
sbb
pop
out
lret
xchg
mov
bound
fwait
ljmp
inc
add
mov
into
ret
js
shl
adc
xor
clc
fwait
pop
and
cmp
push
inc
push
inc
cmpsb
adc
add
aam
xor
bound
pop
ljmp
cmc
inc
sub
rcrb
xor
xchg
fucomip
mov
xor
movl
clc
push
pop
add
loopne
sub
pop
les
shlb
ret
xor
ljmp
fnstenv
push
sahf
stos
cmp
xchg
aad
aas
out
push
leave
pusha
test
pop
jae
jecxz
popf
adc
xor
mov
inc
push
decb
movsb
sub
loope
sub
pop
cmp
pop
mov
push
lret
jecxz
lods
das
cmpsl
cmp
enter
clc
fnstenv
vmptrld
stc
sub
aad
scas
lret
pop
jmp
push
or
fndisi(8087
sub
iret
and
imul
pushf
mov
loopne
xor
add
daa
cmp
lcall
cmpsb
push
sbb
pop
imul
jle
inc
mov
ret
clc
fbstp
fadd
in
sar
call
and
int
fwait
sub
outsl
repz
ljmp
xor
scas
add
cmp
sub
repnz
cmp
scas
add
jl
push
out
push
cld
in
inc
sbb
mov
pop
pop
jbe
ja
stos
pop
push
pop
popf
lret
stc
xor
xlat
sub
jmp
rorl
mov
lcall
aam
mov
push
ds
roll
or
clc
sahf
pop
cli
fwait
xchg
test
cwtl
cmp
repnz
lea
dec
or
pop
xchg
jmp
fistl
pop
mov
jg
push
stc
mov
push
push
pushf
dec
jnp
or
xchg
aam
std
xchg
sbb
or
xchg
pop
jo
mov
imul
addr16
fwait
push
add
fisubrs
call
stos
fstl
xchg
das
or
push
fwait
sti
mov
test
inc
stos
lods
fdivrl
and
dec
xchg
not
mov
sahf
xor
ljmp
test
fdivl
fwait
sub
cmp
mov
repnz
sahf
imul
roll
xchg
inc
mov
xchg
mov
and
fdivrl
push
sahf
ss
xchg
icebp
inc
mov
mov
cld
loop
adc
push
jle,pt
arpl
addr16
xchg
xchg
insl
jge
jmp
lock
inc
jmp
mov
fistpl
aaa
mov
movsl
iret
int3
jle
add
data16
inc
push
aas
push
imul
packsswb
mov
mov
repz
mov
out
repnz
stos
loope
call
ret
cli
xchg
imul
rorb
or
or
dec
jb
mov
ja
jnp
add
insb
divb
mov
and
lcall
push
lcall
sahf
push
insb
test
imul
ds
addr16
pop
xchg
and
cmpsl
inc
arpl
push
mov
btl
inc
ret
mov
sbb
mov
hlt
push
sub
or
xor
push
inc
and
ljmp
ret
lcall
dec
sti
fldcw
adc
pop
jge
push
mov
adc
and
pop
mov
xor
nop
aad
cmc
int
xor
mov
adc
in
lahf
and
or
pop
adc
enter
jae
add
dec
sub
inc
add
aam
leave
cmp
fldcw
jne
xor
gs
fbstp
mov
les
cld
ret
mov
add
psubsb
mov
pop
stos
inc
mov
mov
stos
xor
xchg
jge
fdivr
jne
out
sbb
mov
lock
in
inc
dec
outsb
lahf
and
push
vpsubd
lock
push
cmpsl
inc
rorb
test
and
lods
add
pop
insl
pop
aad
pop
testl
int
cmpsb
pop
out
mov
lock
rcl
mov
mov
cmovnp
and
pop
add
add
cwtl
mov
jo
cmp
lcall
test
jbe
lcall
adc
sub
mov
pop
xor
xchg
inc
fadd
hlt
insb
push
sarb
repz
adc
outsl
mulb
enter
mov
jo
inc
lods
xchg
mov
imul
lret
sahf
ficoml
xor
dec
adc
out
jnp
xor
cmpsb
xchg
cmp
adc
mov
push
loop
dec
mov
popa
imull
and
or
addb
add
nop
fbld
and
imul
outsb
adc
xchg
or
sbb
push
pop
cli
fwait
and
xchg
push
insb
pusha
test
sub
cwtl
leave
rolb
and
pop
or
xchg
add
pop
mov
hlt
inc
scas
inc
jno
sbb
gs
sub
in
outsl
sti
leave
es
movsl
push
ljmp
cmp
aam
rcrl
out
enter
out
int
mov
or
inc
fiadds
cmpsl
arpl
add
hlt
pop
pop
cmpsb
sub
subl
pop
pop
cmp
movsb
inc
loopne
movb
push
outsb
popf
jl
idivl
pushf
fdivs
in
push
and
dec
cmp
jmp
fs
outsb
ss
jns
subb
cmp
int3
xor
test
add
and
mov
pop
lods
loop
pop
pop
inc
in
cld
ret
loope
jl
push
mov
push
stos
jmp
into
cmp
push
cld
test
loop
cwtl
mov
pop
mov
stos
push
adc
nop
jbe
iret
xchg
leave
push
aad
aas
push
je
mov
add
movsl
in
mov
cmp
pop
shrl
cmp
ret
icebp
mov
loope
jne
push
mov
push
addr16
mov
aaa
out
push
out
mov
sti
mov
jae
imul
jb
sub
adc
js
pop
int3
arpl
add
out
mov
lcall
loope
pop
lcall
jmp
inc
push
je
divl
mov
push
xchg
push
mov
negl
sahf
or
cli
dec
or
out
fdivrs
enter
or
movl
adc
mov
push
mov
aas
dec
icebp
sbb
lds
and
fst
mov
inc
shl
xchg
jne
inc
loop
outsl
jge,pn
je
mov
push
inc
xlat
ret
rcrl
add
out
dec
into
sbb
fwait
sbb
repnz
aam
scas
gs
push
xchg
inc
lods
idivl
int3
test
outsb
repz
push
enter
shlb
pop
out
lea
cwtl
cmp
lods
push
out
xchg
mov
js
dec
push
stc
lahf
sub
das
pop
test
dec
add
out
test
int
adc
jl
cwtl
fistps
repnz
inc
push
fdiv
mov
loopne
aaa
xor
xchg
lods
and
dec
lods
adc
jne
int3
push
cmp
mov
inc
mov
cmpsb
jp
sahf
popl
xchg
mov
push
push
inc
pop
aaa
popa
mov
lahf
repnz
mov
xor
sub
sbb
arpl
icebp
push
add
fildl
rol
xchg
add
movsb
push
repnz
pop
popf
jae
push
mov
ret
aam
nop
mov
adc
sub
into
call
dec
rolb
or
imul
les
cmp
xchg
aad
dec
mov
jbe
enter
inc
lods
pop
lcall
lret
fwait
jno
dec
or
ja
mov
xchg
push
shll
sti
jnp
ret
loope
popa
add
aaa
xor
movsb
daa
cld
or
int
xor
sysenter
mov
or
fldcw
fiadds
cmc
adc
jle
fsts
pop
xlat
xchg
lods
xchg
or
inc
jnp
fisttps
lret
stc
mov
adc
dec
add
push
popa
pop
iret
add
test
hlt
addr16
mov
shlb
aad
nop
push
sub
dec
and
sbb
scas
jmp
and
cmovb
std
data16
pop
inc
and
lret
icebp
inc
jge
push
mov
fiaddl
dec
jg
add
test
shl
into
pop
cmpsb
sub
jns
outsl
movsl
fwait
cmp
or
pop
inc
dec
dec
dec
popf
jmp
cmp
or
lcall
test
rol
cmp
cmp
jbe
lcall
fnstcw
pop
xor
push
or
daa
fwait
pop
cs
pop
jl
lss
xchg
dec
sub
inc
push
mov
cwtl
xchg
xor
mov
inc
loop
push
lcall
and
jge
dec
test
pop
xlat
repz
call
cmp
scas
xchg
adcb
cmc
cmp
add
mov
adc
cli
fistpll
jg
rcll
out
jg
jns
dec
js
in
frstor
andb
pop
es
lds
and
enter
and
outsl
inc
lcall
repnz
mov
mov
push
mov
out
std
dec
pop
xchg
xchg
cmp
addr16
je
loope
add
xchg
ret
arpl
xor
add
divb
and
es
xor
test
xchg
inc
clc
push
daa
enter
dec
add
out
mov
lods
aad
push
inc
insb
mov
or
and
inc
jnp
popf
jo
cmp
and
sub
jnp
ds
jmp
insb
adc
pushl
icebp
or
leave
lods
fcmovb
es
or
in
ficoml
sbb
fisubrs
cmp
pop
addl
adc
or
test
xor
xchg
bound
daa
cmp
push
sbbl
mov
dec
ficompl
pop
out
sti
shrb
jno
stos
dec
in
gs
insl
inc
dec
outsl
enter
icebp
loope
arpl
aad
xchg
jg
test
sub
jge
adc
xorl
sub
nop
dec
add
mov
cld
mov
outsb
int3
jg
jae
in
adcl
or
push
xor
int3
dec
cli
lods
pop
pop
pushf
xchg
lret
rorl
sarb
and
cmp
sbbb
into
xor
stos
dec
aas
dec
jnp
dec
mov
adcb
outsl
jecxz
push
lds
jge
mov
fiadds
out
out
sbb
pop
xor
lret
add
je
cmpsl
sbb
outsl
jns
fwait
lahf
lea
cmp
pop
jb
out
inc
push
lods
int3
jb
dec
push
testb
sti
jbe
addr16
adc
dec
inc
cmp
shll
sbb
adc
sti
cli
stos
pusha
lret
decl
cmpsl
cmpsb
enter
sub
xor
push
pop
xor
or
loop
xor
ljmp
outsl
jge
fiadds
daa
xlat
nop
sub
jnp
mov
or
jne
mov
mov
insl
mov
mov
adc
pop
push
inc
rcr
aas
lea
test
imul
jae
andl
push
pushl
inc
dec
mov
test
shlb
sbbb
lods
js
mov
popa
xchg
imul
push
js
sbb
jge
mov
cmp
jecxz
bound
inc
jmp
popa
sbb
pop
movsb
jno
pop
xchg
mov
adc
in
xchg
aas
cmp
inc
int3
adc
mov
push
mov
push
and
push
rcl
std
xchg
mov
sbb
mov
sub
push
lahf
xor
pushf
sbb
mov
data16
repz
pop
and
cmp
arpl
hlt
add
insl
sub
pushf
cld
xor
cmp
or
xchg
imul
fiaddl
popf
bound
sahf
mov
xchg
dec
jne
push
mov
iret
pop
adc
push
mov
adc
gs
sbb
stc
pusha
js
outsb
cmc
cmp
or
xchg
movsb
test
xchg
inc
xchg
call
test
es
lcall
sub
push
pop
mov
mov
insl
in
pop
scas
movsb
sub
popa
popf
daa
jmp
mov
dec
mov
pop
push
inc
sti
fwait
xchg
dec
mov
jbe
pop
and
inc
mov
aaa
push
and
loopne
push
sti
cmp
outsb
sub
sbbl
lods
jo
ficoms
repnz
fs
adc
mov
fmul
jo
cmc
push
loope
jnp
push
xchg
hlt
xrelease
pop
jge
into
mov
lret
and
sub
ficomps
xchg
leave
jbe
cltd
test
jne
mov
jp
ret
fcmovb
scas
aam
mov
in
mov
addr16
mov
cmp
das
sub
xchg
ljmp
push
enter
xor
dec
add
popf
sub
pop
inc
pusha
xchg
stos
add
repnz
test
hlt
into
enter
in
shlb
fisubrl
jmp
gs
repnz
push
push
scas
adc
adc
andl
ja
loop
or
mov
adc
loope
push
clc
bound
sub
addr16
into
leave
mov
push
out
jg
adc
icebp
mov
int3
out
int
pslld
out
cli
rorl
test
mov
lock
in
negl
pop
cmp
mov
fsubr
test
mov
cmpsl
sbb
out
repz
xlat
mov
movsb
rol
jecxz
mov
ret
clc
lds
lea
xchg
xor
jno
ds
push
cmp
adc
inc
fwait
ret
pop
stos
jg
inc
push
lods
push
out
sub
pop
cltd
jno
sub
pop
cmp
xchg
and
or
xor
call
cmp
pop
mov
xchg
sarl
loop
or
jmp
fnstcw
ret
jecxz
sbb
jns
push
data16
sub
aas
inc
dec
push
mov
cmp
ret
fidivl
jg
mov
outsb
mov
ja
lds
jle
inc
clc
mov
outsb
loope
pop
sub
gs
ss
ljmp
in
jnp
enter
mov
test
cmp
das
inc
xlat
pusha
cmc
push
cmp
fucomi
or
arpl
dec
lock
inc
ljmp
popa
outsl
andb
inc
mov
lods
je
orb
sub
cmp
xchg
rol
jle
clc
clc
jnp
test
shrb
rolb
iret
addb
xor
inc
sub
dec
lret
bound
mov
xor
pop
sub
stos
cmp
lret
cmp
stc
cwtl
xchg
pop
bnd
mov
sub
cmp
inc
into
and
iret
je
int3
jnp
in
movsb
push
inc
stos
inc
cli
sbb
out
sbbb
xchg
mov
iret
sbb
or
test
pop
jb
jl
mov
call
in
adc
mov
xor
mov
bnd
xlat
sub
popf
test
pand
jp
jno
subb
mov
fldt
mov
popf
pop
lret
mov
imul
sub
arpl
aaa
stos
jo
mov
bound
clc
test
cmp
lds
cmp
pop
mov
ror
fdivs
outsl
push
aas
push
mov
sub
adc
rcll
adc
mov
inc
adc
sub
frstor
sub
ja
lcall
xchg
rclb
push
call
mov
nop
adc
adc
jb
jno
sbb
pop
andb
jecxz
jmp
popa
and
mov
and
jae
mov
push
jge
sub
mov
xor
inc
dec
sub
push
test
jmp
sbb
pop
movsb
jno
add
xchg
mov
loop
adc
inc
cmp
fld
cltd
imul
mov
adc
xor
ss
push
and
mov
dec
data16
pop
fimuls
or
out
mov
sub
out
pop
push
iret
orb
je
popa
xchg
add
sahf
lsl
std
mov
adc
stc
pop
popa
adcl
push
dec
es
jl
jno
je
arpl
and
sub
call
das
les
sahf
rorl
dec
loopne
inc
push
orb
mov
test
ss
mov
mov
pop
adc
mov
aad
int
aad
int3
addb
lcall
jl
add
and
scas
jmp
repnz
lock
pusha
ljmp
push
or
pusha
data16
and
lea
cmp
or
jg
lahf
ret
addr16
mov
push
stc
xor
dec
pushf
sbb
in
jo
mov
adc
std
dec
push
sub
sub
hlt
mov
int
aam
jmp
clc
sub
dec
inc
mov
loop
cld
add
lods
jne
dec
pop
mov
sbbb
inc
xchg
sub
dec
arpl
pop
in
ds
add
sbb
jge
bnd
nop
jae
cmc
xor
inc
add
dec
and
push
xchg
jb
notb
test
adcb
pop
pop
cmp
mov
lods
jmp
scas
push
push
lock
into
jbe
add
cmp
imul
pop
icebp
inc
loopne
sbb
cmpsl
mov
jle
mov
jbe
mov
jne
inc
aas
mov
mov
jp
aam
stos
inc
push
in
add
not
mov
jae
mov
mov
adc
xchg
iret
or
call
and
mov
push
inc
xchg
test
pop
mov
mov
cmp
lods
xchg
insl
and
iret
hlt
loope
dec
lds
sbb
push
dec
xchg
mov
fsub
push
mov
push
aas
sub
inc
aad
int
sub
into
dec
roll
aas
adc
sub
gs
hlt
imul
jbe
fwait
test
push
jmp
and
hlt
sbb
mov
dec
lock
adc
sbb
ss
divb
jge
sbb
push
cmp
xchg
mov
dec
mov
cmp
inc
fptan
push
in
loope
sub
mov
push
aaa
mov
cmpsb
insl
inc
xlat
pop
roll
xchg
loopne
dec
xchg
push
movsl
or
mov
mov
loope
push
shrl
xor
pop
add
and
stos
lcall
and
xlat
pop
push
fidivs
adc
pop
mov
movsl
add
imul
fbld
mov
inc
jbe
nop
stos
cli
push
sbb
push
fildl
lret
or
pop
mov
mov
rep
fidivs
adc
rcll
dec
pop
add
pop
out
addl
xlat
xchg
and
or
test
shrl
addr16
xor
fstl
loope
cmp
pop
test
push
cli
and
pop
cmpsb
jp
sar
jle
inc
cmc
sbbl
mov
mov
xlat
fcmovnb
ret
hlt
adc
lods
sbb
nop
adc
divb
stos
es
gs
iret
dec
not
in
jg
xchg
lds
sub
inc
push
or
insb
int3
popf
push
sbb
push
std
xabort
xor
gs
xchg
xlat
roll
ja
stos
lock
mov
jmp
pushf
repz
les
mov
stc
lcall
imul
nop
and
roll
js
mov
rcrl
cmpsb
mov
fnstcw
pop
sbb
int3
jg
add
pop
mov
popa
cmp
stos
shrl
ljmp
xchg
out
shlb
movsl
call
icebp
cmc
mov
dec
fnstsw
icebp
xor
sbbl
dec
popa
jne
loope
mov
subb
decb
push
or
rcr
sbb
mov
movsl
insb
inc
leave
sbb
jge
daa
stos
lcall
out
sub
xchg
add
jg
rcl
mov
mov
out
in
ljmp
sti
stos
jmp
mov
das
notb
negl
lea
call
fbld
cmovbe
and
mov
out
and
loopne
jb
and
sbb
loopne
les
adc
xchg
shlb
pop
mov
shlb
sub
push
popf
pop
dec
repnz
mov
out
lods
cmp
and
or
mov
sub
insb
outsb
cs
dec
mov
inc
imul
xchg
in
xchg
mov
xchg
movsb
inc
adc
inc
or
mov
dec
add
mov
ds
fildll
fsubl
orl
out
es
outsl
cld
test
xor
dec
inc
mov
pop
jp
push
out
daa
insl
xchg
daa
call
aam
xchg
mov
or
dec
and
loop
repnz
in
insl
push
xorl
rclb
jae
fidivs
add
pop
sbb
mov
cmp
les
notb
dec
sbb
mov
mov
ds
jg
int3
jo
clc
mov
addl
xor
mov
push
rclb
add
out
or
and
push
push
adc
jl
dec
sub
push
les
mov
in
imul
in
jle
icebp
sub
imul
fdivrl
xchg
or
adc
pop
jns
call
into
notl
inc
add
out
stc
into
in
push
out
inc
gs
or
lcall
push
xor
xor
cmpsl
lret
fistpl
push
test
sub
or
loope
pop
repz
jb
xor
into
push
dec
ja
mov
xchg
repnz
sub
add
in
aas
push
sbb
pop
pop
mov
lea
cli
dec
in
push
fs
dec
mov
push
jmp
xchg
lret
mov
pushl
nop
test
cld
movsb
pushf
pop
fstpt
arpl
int3
bound
xorl
mov
fadd
mov
add
das
je
xor
je
sub
ljmp
add
aam
lret
push
pusha
sub
mov
clc
lock
mov
sahf
sub
lret
aam
sahf
stos
pop
cmc
clc
into
fwait
insl
mov
cmp
pop
and
out
adc
inc
lret
push
icebp
pop
popa
les
pop
loope
adc
ficoml
cmp
pop
shrl
dec
lahf
fs
pop
jmp
xor
sbb
int3
xor
adc
push
setno
stc
push
dec
leave
pusha
lcall
pop
add
call
inc
sub
push
pop
mov
jecxz
mov
dec
cmc
add
jg
repnz
mov
xchg
dec
adc
adc
fwait
sub
mull
mov
cld
lds
jl
lcall
popf
pusha
xor
ret
es
push
mov
scas
mov
mov
loope
aaa
iret
mov
pop
add
cmp
push
mov
orb
mov
xchg
lcall
insl
popf
jo
mov
sbbl
scas
pop
xchg
sub
test
add
pop
sahf
fmulp
jns
test
cmpsl
jmp
dec
and
add
add
out
mov
out
jo
in
test
jne
push
xor
ja
adc
inc
mov
rcll
and
adc
and
sub
fwait
sub
jne
mov
and
xor
cmc
dec
pop
xchg
fwait
test
fmuls
adc
ss
adc
arpl
xor
jl
xchg
fisttps
add
jge,pt
pop
add
xchg
mov
add
mov
xlat
and
adc
push
sbb
cmp
loopne
inc
repz
cmp
cmp
add
inc
outsl
adc
cwtl
push
int3
movsb
add
inc
add
flds
stos
sbb
jae
int
or
inc
mulb
ret
jns
pop
mov
jg
aam
inc
adc
int3
adc
int3
fucomi
addl
inc
lcall
inc
inc
idiv
cltd
xor
adc
pop
jae
imul
xchg
cmp
cmpsb
lock
pop
jmp
in
icebp
movsl
push
jge
add
jae
loopne
fidivl
rorb
fimull
adc
add
sbb
arpl
xchg
jae
push
cmpsl
push
xorb
fidivrl
push
inc
adc
fidivrl
movsl
push
inc
sub
mov
add
sbb
mov
rclb
repnz
cmp
mov
mov
sbb
dec
xchg
xchg
div
enter
hlt
jle
pusha
push
cmp
push
lds
in
mov
lods
repz
and
movsl
jg
xlat
je
push
jl
movsl
inc
adc
test
add
lcall
inc
popf
in
sahf
int
ror
ret
test
ljmp
pop
jmp
test
sbb
mov
hlt
roll
pusha
mov
inc
pusha
or
sbb
dec
mov
mov
cltd
lret
xor
stc
sub
jp
dec
ds
jae
aas
cmpsb
inc
xchg
dec
mov
pop
mov
cwtl
mov
mov
push
js
cmpsb
xor
ficomps
ficoms
repnz
jp
add
mov
or
jno
ljmp
xor
lcall
sub
and
loop
insl
sub
pushw
or
imul
in
pop
icebp
adc
test
push
cmp
sbb
cmp
das
mov
inc
adc
data16
sbb
ljmp
jle
out
xor
test
mov
imul
mov
outsb
out
cmp
pop
jmp
jae
push
xchg
push
mov
lock
inc
and
sub
ds
lock
sahf
pop
scas
sti
lea
and
jp
jns
fwait
sti
insl
fidivs
in
out
mov
popa
mov
imul
into
fs
xchg
xchg
out
push
pop
cmp
xor
lret
test
lcall
and
ds
sub
mov
int
adc
fimull
mov
out
push
not
push
adc
sahf
cmc
aad
cwtl
or
into
mov
out
push
pushf
sub
fstpt
adc
pop
mov
movsb
loop
stc
addl
push
sbb
and
cs
fcompl
push
mov
loopne
stc
loop
repnz
dec
adc
lahf
dec
fcoms
int
imul
add
adcb
imul
nop
mov
jp
and
pop
lret
ficoms
mov
sbb
cmpsl
ret
jl
pop
add
dec
sub
daa
jle
jge
inc
sub
xchg
scas
sbb
sbb
dec
or
ret
aam
mov
mov
mov
jns
and
fisubrs
ds
cmp
cmp
shrb
dec
and
shrl
cmp
cmp
xlat
sbb
adc
cwtl
cld
in
jo
inc
cmpsl
adc
adc
adc
xchg
jecxz
lret
push
push
in
mov
adc
in
test
mov
cmp
mov
push
ret
dec
in
cmp
imul
cltd
add
das
stos
test
mov
jmp
or
and
dec
pop
sti
adcb
js
push
lahf
pop
enter
xchg
in
mov
mov
sbbb
add
ja
inc
xor
call
movsb
mov
xchg
out
sbb
fdivrl
in
mov
inc
jg
rorb
xor
mov
cli
addl
mov
cwtl
addl
add
es
cmpsl
cmpsl
lock
push
or
dec
stc
mov
xchg
mov
cmpsl
push
sbb
nop
jno
mov
mov
xor
pop
jo
iret
sub
xchg
jae
les
jno
in
out
cmp
xchg
cltd
dec
mov
xor
ja
push
imul
test
insl
adc
dec
lock
sbb
loopne
cmp
xacquire
js
addr16
fwait
push
ret
pop
inc
fdivl
fcmovu
data16
cmp
filds
xlat
in
lret
jmp
mov
dec
cmp
adc
mov
loope
pop
repz
aas
push
call
mov
div
movsl
adc
pop
test
mov
pop
cmp
jl
movsl
sub
nop
push
cmpsb
push
pop
push
mov
das
pop
xor
fsubl
mov
cmpsl
xor
popa
negl
xor
cltd
or
ljmp
call
push
movsb
sub
test
pop
or
inc
adc
or
mov
sbbb
mov
xchg
sub
jmp
pop
hlt
ret
popf
and
pop
dec
and
insb
movl
frstor
inc
fistl
call
div
xchg
adc
mov
mov
and
insl
jo
jmp
insb
arpl
xor
mov
or
or
dec
loope
xorl
mov
sbb
fsubrs
inc
lret
cmp
in
push
ret
sub
mov
fsts
cmp
std
sbb
push
jnp
mov
hlt
pop
jbe
leave
xor
or
jge
aas
loope
xchg
jecxz
les
daa
pop
push
lcall
in
push
test
dec
push
out
movsl
movsb
jp
stos
mov
adc
subl
lods
or
iret
pop
xor
leave
and
pop
les
mov
movb
or
xor
mov
dec
test
pushf
ret
inc
stc
call
mov
in
cwtl
ljmp
mov
orl
mov
inc
jnp
jb
sub
jge
out
push
and
lock
ret
fmull
sahf
pop
sbb
inc
lods
mov
lods
sub
mov
paddd
mulb
mov
mov
je
pop
cmpsb
jge
repnz
mov
xor
and
push
xlat
mov
ficomps
mov
or
xor
arpl
in
popa
out
push
dec
out
xorb
lret
mov
fs
jno
jbe
nop
insb
cmp
push
in
fidivrl
adc
jmp
pop
xorb
pop
les
movsl
dec
loope
ja
jne
neg
add
fwait
dec
es
xchg
test
movsl
fdiv
fwait
inc
int3
aam
mov
xchg
cmp
insb
cs
test
scas
jns
or
aas
data16
sahf
int3
xchg
push
jmp
out
shll
in
add
sbb
int3
loope
and
repnz
push
scas
popf
mov
adc
pop
ja
push
cmpsb
outsl
push
mov
mov
in
sbb
adc
aaa
out
popa
lods
mov
cmp
push
int
cmp
sahf
hlt
mov
imul
lods
xor
pop
mov
pop
in
pop
mov
repz
pop
addl
jmp
adc
into
in
jb
cld
xchg
xor
add
mov
scas
ret
pop
jecxz
andl
mov
sbb
push
cmp
xlat
mov
in
int3
fiadds
adc
jae
movsl
jle
ret
insl
test
sarl
mov
insl
negb
gs
add
jns
shrd
fidivrs
daa
outsb
push
jmp
push
rcrl
jae
inc
mov
inc
jnp
fnsave
stos
jne
or
add
push
sub
dec
sahf
fdivr
lahf
and
shlb
icebp
sbb
pushf
adc
add
jmp
add
xchg
lret
mov
lcall
es
xchg
std
into
test
dec
enter
cmp
push
icebp
mov
sbb
push
jb
or
fildl
movsb
iret
fninit
xchg
mov
jmp
push
push
mov
xor
sub
test
popa
jmp
rep
dec
pushf
cli
mov
cmp
out
and
repnz
xchg
jg
xchg
nop
rcll
clc
aad
adc
scas
call
insb
xor
push
stc
mov
jno
out
lea
pop
inc
pusha
nop
and
pop
fs
adc
mov
pop
repz
jo
pop
cmc
lcall
jne
xchg
inc
lcall
and
mov
test
sbb
xlat
movsl
mov
cmpsb
loop
scas
out
jbe
loopne
jl
jbe
push
aad
mov
lret
mov
push
or
and
dec
ljmp
popa
cmp
dec
mov
jge
cmp
callw
adc
addr16
cwtl
pop
cmp
adc
sti
movsl
jl
idivl
pop
mov
or
lock
cmp
fwait
jg
ret
rcll
sub
stos
test
dec
add
xor
or
sub
mov
and
lds
sbb
mov
ds
cmpb
dec
dec
insb
xor
and
sahf
xchg
orl
inc
cmp
pop
jp
inc
push
jo
mov
fstl
dec
bound
push
movsl
cmpsl
dec
mov
sbb
ret
add
pop
outsl
xchg
mov
js
jns
cmp
imul
rcl
mov
push
jo
into
xchg
and
cld
inc
loopne
insb
aam
lcall
int3
push
dec
jb
dec
movsl
movb
push
xor
test
sti
xchg
dec
arpl
mov
pop
lea
outsb
sbb
cmp
sub
dec
mov
icebp
jmp
repnz
arpl
and
aaa
xorl
xor
xor
cmp
inc
fstpt
fdivs
adc
push
scas
push
rcrl
cmc
jle
fwait
sub
push
add
fdivr
xchg
subps
xchg
dec
mov
push
or
ficoml
lret
jae
jno
scas
es
mov
fldl
loope
lods
mov
or
movsb
sarl
pusha
push
adc
fcoms
std
push
out
loope
das
cmp
je
cmp
arpl
inc
repz
jp
fnsave
sbb
orb
xor
lret
mov
stos
push
cmc
adc
in
push
pop
xacquire
xchg
dec
jmp
faddl
push
adc
and
lret
add
jno
insb
push
stos
push
xchg
loope
dec
xchg
insl
and
mov
jp
movsb
inc
push
cwtl
test
dec
jnp
bound
inc
and
das
mov
icebp
mov
xor
xchg
dec
jo
test
sbb
das
outsb
test
scas
push
push
outsl
push
mov
fisttpll
dec
mov
aam
jp
mov
or
add
mov
call
pop
pop
aam
add
cld
loopne
sub
dec
sub
gs
push
stos
push
aad
push
xchg
pop
mov
inc
pusha
xor
js
sub
jp
movb
mov
insl
pop
mov
sti
aaa
dec
out
cmp
movsl
fs
xlat
push
or
add
sbb
add
mov
cmp
pop
cwtl
int
fidivl
jecxz
aas
test
mov
fstpt
les
adc
insb
sub
mov
mov
xlat
pop
out
inc
es
jae
fs
mov
inc
xchg
fxch
adc
mov
adc
sub
fbstp
cmp
push
sub
mov
movsl
mov
jo
push
or
xchg
into
into
inc
sub
mov
test
mov
mov
mov
outsl
mov
xchg
pop
aaa
imulb
das
popa
mov
arpl
aas
mov
dec
pop
adc
ds
repz
dec
mov
push
out
xlat
loopne
mov
sbb
pop
dec
inc
add
jmp
shrb
stos
in
xor
xchg
sub
test
cwtl
sbb
xchg
fs
mov
push
jns
xchg
sub
repz
nop
jns,pn
pop
jns
decl
mov
and
iret
mov
aaa
jno
push
or
jg
movsb
jg
lcall
pop
adc
gs
pop
jae
mov
aaa
pop
popa
rol
rorl
data16
cmpsb
jae
adc
push
lods
pop
repz
aam
sbb
mov
and
and
into
loope
fwait
aaa
testb
es
inc
in
sahf
lods
sub
sbb
adc
cmpsb
cmp
jg
cmp
rolb
jnp
out
jmp
repz
setns
pop
pop
arpl
pop
xor
push
movb
inc
faddl
jnp
lahf
lahf
lret
flds
lds
imul
add
aas
push
dec
pop
icebp
dec
nop
pop
repz
or
mov
aam
sbb
movsl
inc
jmp
sbb
sbb
xor
jmp
test
dec
jle
pushl
fldenv
inc
iret
test
add
jo
and
jns
inc
adc
insb
and
jb
mov
idivb
jmp
fbld
cld
stos
jae
pop
xchg
mov
or
insl
insl
andb
push
mov
adc
xor
sbb
cwtl
daa
int3
jge
cmpsl
cmp
mov
pusha
call
xlat
push
rorl
mov
pop
mov
ret
or
sub
fchs
aaa
and
add
iret
fstps
and
cmc
cmp
addl
fcomps
and
and
leave
mov
dec
push
adc
sbb
stos
mov
sub
mov
pop
iret
mov
mov
cmpsl
rcr
ja
movsb
test
int3
push
xor
push
xor
inc
fdivrs
pop
sti
jbe
fstpt
test
clc
mov
sub
mov
cmc
dec
cmpsl
aas
jg
imul
adc
push
sub
lret
ss
in
in
dec
add
xchg
repnz
mov
into
aas
test
cmp
push
adc
cmc
test
jbe
lahf
sub
inc
sti
xchg
mov
xorps
mov
sbb
rcll
cmpsl
add
ja
mov
fidivs
ds
into
addr16
mov
out
mov
out
add
nop
xor
dec
cmp
imul
dec
jbe
push
int
lods
arpl
ja
mov
jmp
inc
lret
xor
out
pop
sbb
jae
bound
jnp
adcl
xor
or
mov
and
out
inc
arpl
xchg
and
dec
push
mov
loope
xor
xchg
mov
subb
jp
std
testb
repnz
and
mov
xor
adcl
sub
test
fs
lds
iret
outsl
mull
mov
in
xchg
dec
arpl
sub
shll
inc
mov
jbe
add
test
cli
or
add
mov
xor
fldenv
add
dec
cmp
es
mov
push
mov
stc
and
mov
mov
sbbb
pop
dec
imul
dec
les
sbbb
dec
cmp
in
xchg
mov
fadd
xor
inc
jecxz
inc
iret
fidivs
xchg
loopne
mov
mov
popa
push
lods
xchg
aad
mov
not
jl
movb
hlt
ljmp
sbb
mov
mov
les
into
cmpsl
jno
xorl
mov
push
mov
test
sbb
push
js
pop
mov
fbstp
jge
or
insb
inc
out
push
movsl
ret
loop
push
repnz
js
leave
negl
hlt
lods
ljmp
enter
adc
mov
fimull
in
orb
mov
inc
sub
mov
dec
test
push
scas
push
xchg
fsubrl
dec
aas
es
pop
xchg
push
leave
xor
mov
adc
int3
and
inc
push
jno
add
sbb
ss
cld
mov
inc
jae
jns
lcall
mov
fcoms
mov
jb
and
push
fcmovu
push
push
mov
ljmp
cmc
pusha
scas
push
jge
mov
xor
dec
mov
xor
inc
mov
mov
loope
cltd
ja
pusha
or
sbb
push
jle
bnd
lods
sbb
pop
dec
xor
xorb
adc
inc
push
dec
adc
fcomi
or
scas
nop
daa
push
adc
cmpsb
shlb
inc
movsb
icebp
lds
pop
dec
push
jne
sub
fwait
and
dec
ds
stc
adc
aam
push
mov
pop
ret
add
out
mov
inc
call
sub
out
add
shrl
mov
fcmovne
and
mov
push
adc
sub
daa
sbb
lods
inc
pusha
sbb
lret
outsb
dec
xchg
ret
jmp
lea
vpcomuw
negl
push
decl
fldcw
inc
sbb
dec
xlat
sub
outsl
test
sarb
test
cmpl
push
cltd
dec
pop
lret
das
rcl
xor
movsl
insb
jns
aad
testb
sbb
mov
mov
push
jge
pushf
cmpsb
popf
mov
xlat
sti
imul
fwait
xlat
call
in
cmp
test
loope
jne
mov
repz
pushf
mov
stc
insb
mov
adc
mov
aam
or
outsl
push
mov
fidivs
repnz
call
mov
jecxz
into
xor
lcall
int
mov
lahf
add
es
cs
mov
inc
xchg
inc
mov
sbb
xchg
sub
or
shlb
mov
stc
insl
jg
sbb
or
mov
mov
stos
cli
mov
xor
insl
jg
xor
sar
cmp
add
mov
inc
jo
ja
sbb
adc
fwait
data16
je
push
cltd
adcl
cmc
mov
stos
adc
push
xchg
jmp
pop
or
jp
imul
sbb
std
sarb
xchg
into
sub
es
and
add
rorl
lods
sbb
pop
pop
sub
ja
ror
decl
or
and
imul
movsl
cld
xchg
xlat
xchg
inc
push
leave
ss
sub
mov
mov
cmp
mov
push
cli
pushf
adc
scas
clc
pop
loopne
mov
rcll
xchg
test
fwait
push
fidivs
xor
je
repnz
call
lea
mov
xchg
je
or
jge
inc
dec
sbb
and
sbb
mov
call
fnstsw
ss
dec
inc
stos
and
jmp
xchg
inc
mov
rcrl
jo
sub
jnp
cmpsb
xchg
pop
pushf
push
loope
add
adc
imul
imul
push
fs
dec
aam
mov
dec
sti
mov
jo
int3
adc
xchg
xchg
loop
mov
cld
jl
dec
ficomps
decb
pusha
or
sbb
mov
lahf
es
fadds
ss
xor
xchg
add
mov
mov
imul
xchg
fisttpl
dec
jnp
sbb
sbb
jecxz
nop
lahf
ss
outsb
into
insb
mov
pushf
outsb
cmpxchg
dec
jo
or
dec
mov
add
aaa
ror
and
fwait
pop
fdivl
cmp
outsl
jnp
in
fcomps
testl
inc
cmp
push
mov
jmp
lahf
aas
mov
mov
movsb
or
rorb
aam
fs
idivl
push
imul
pop
cmp
aas
je
lods
inc
push
xchg
mov
aam
mov
cmp
bound
push
mov
mov
sub
or
inc
mov
js
cmpsb
xchg
cmp
pop
pop
cli
sarl
fdivs
cmp
push
or
test
pushf
cli
xor
jbe
enter
pminsw
mov
push
cld
fwait
out
lret
out
loopne
aam
adc
in
xor
movsl
lock
or
xor
xchg
xor
xor
iret
mov
sub
jo
mov
mov
in
shlb
jb
pop
inc
cs
push
jno
dec
loop
sti
ljmp
adc
inc
stos
xchg
pop
popa
in
call
aaa
loope
in
mov
adc
pop
fadds
cmpsl
fdivl
and
push
in
xor
jle
inc
pop
cmp
fidivs
sub
cmp
push
mov
inc
mov
mov
inc
push
iret
inc
pop
xor
dec
dec
xor
mov
shlb
ret
mov
push
push
dec
decl
sub
or
add
inc
psubd
xor
adc
or
jp
xlat
pop
lea
bound
popf
mov
addr16
leave
adc
mov
push
call
fsubr
mov
mov
jne
imul
xchg
addr16
in
xor
in
lret
or
and
add
cmpsl
arpl
in
movsb
xchg
and
adc
mov
inc
test
mov
out
enter
adc
lds
cmc
test
push
ret
gs
imul
and
js
jns,pt
int3
cmpsl
xor
inc
int3
lds
xor
fxch
and
cmp
adc
and
cli
dec
mov
out
push
pop
stos
add
fsubl
sub
add
sub
mov
jg
cmp
pop
stc
pop
stos
push
jbe
mov
filds
hlt
fcos
scas
inc
mov
cmp
sbb
rorl
jo
insl
adc
xchg
loop
cmc
xor
in
push
loop
insb
int3
ds
dec
mov
dec
pop
out
fucomp
outsb
push
dec
hlt
or
mov
jbe
roll
xchg
pop
sahf
out
std
lcall
in
jbe
push
add
mov
cmp
in
mov
out
daa
sub
test
push
pop
mov
cs
aam
mov
jecxz
out
or
dec
lret
shrb
push
ljmp
jno
mov
ret
jecxz
jmp
mov
clc
incb
sub
sub
gs
xchg
scas
jl
repnz
pop
xor
mov
mov
xchg
cmp
jg
leave
out
sbb
inc
jecxz
or
das
loope
add
outsb
push
mov
or
inc
mov
movsb
ja
inc
mov
rclb
adc
cmp
xor
jb
add
rclb
cltd
fdivrl
cmpsl
jb
sub
ss
stc
pop
lret
mov
dec
bound
push
stos
fwait
xor
sub
and
mov
cld
pop
hlt
sub
mov
jne
cmp
mov
inc
or
xor
cmp
stos
dec
cmpsb
jo
mov
jne
pusha
xorb
and
sti
push
mov
imul
cmp
jge
mov
mov
test
pop
jne
fsubl
xchg
or
lret
outsl
lahf
xor
sub
test
dec
jge
pop
add
pop
or
inc
and
or
insb
daa
gs
stc
sahf
clc
aaa
test
pop
sbb
xor
cmp
push
cmp
fdivrl
or
nop
sbb
leave
mov
adc
dec
cmp
pop
stos
lahf
mov
ror
mov
pop
inc
out
pop
push
adc
in
jle
sti
push
faddl
scas
jl
loope
mov
push
lahf
outsl
rorb
jo
mov
mov
rcl
cmp
in
mov
test
out
cmp
test
mov
flds
dec
sahf
cmp
int3
movsb
push
push
jo
in
jle
fldcw
lahf
push
jmp
xchg
jno
adc
cs
nop
adc
shrb
inc
dec
test
jns
push
nop
pop
cmp
add
fs
clc
ret
fnstsw
stc
loope
sbb
sub
inc
xor
lret
mov
cmc
popf
mov
iret
or
inc
pop
pop
push
jmp
dec
imul
push
add
lds
push
or
sti
and
jo
and
out
cmc
push
mov
sub
jo
cld
lds
call
sarb
xchg
dec
daa
inc
pop
pop
pop
shrl
gs
testb
jge
mov
test
subl
decl
roll
mov
pop
je
lahf
xor
mov
pop
mov
shrb
add
or
inc
sbb
aas
loope
pop
xor
popf
xor
out
cs
cmp
sarl
mov
xchg
mov
mov
in
push
jecxz
mov
sti
out
stos
ficoml
lea
xchg
fwait
push
push
in
loope
out
jl
xorl
nop
lcall
push
mov
sbb
mov
stc
lea
iret
push
insl
xchg
dec
jbe
mov
mov
shlb
int
add
mov
imull
movsl
stos
push
sub
fdivl
xor
out
scas
ret
and
dec
ret
in
loop
test
xor
imul
push
mov
insb
sbb
xchg
add
aaa
dec
and
fadd
call
cmp
pop
pop
enter
xor
cltd
test
icebp
test
in
pop
data16
shll
adc
cmp
fistl
adc
add
dec
jbe
fsubrp
repz
dec
or
clc
xor
mov
test
int
fs
aad
push
pop
fwait
lahf
inc
int3
imul
insl
or
stc
jbe
incl
push
ja
mov
movsb
pop
and
ljmp
ror
mov
fdivs
sbb
add
pop
fidivs
sbb
lods
je
ret
cmpsb
insl
inc
in
mov
loop
jge
fnstenv
stos
cmp
mov
push
mov
cmpsl
dec
neg
add
mov
mov
mov
pop
ret
xor
mov
jmp
inc
ja
aad
mov
xor
sahf
xor
and
adc
ret
cs
and
jae
push
jae
js
adc
shl
mov
mov
jmp
mov
leave
inc
xor
loope
mov
test
pop
fidivs
loop
outsb
pop
rsqrtps
nop
push
movsl
ret
or
pop
xor
cmp
ret
das
rorl
mov
hlt
mov
ret
lcall
idivl
fisubrs
popf
mov
cmpsl
subl
jge
cmp
cmp
inc
pop
mov
sub
xor
into
cmp
lcall
aaa
cli
out
and
test
cmc
mov
add
mov
add
sarb
jg
je
shlb
xchg
add
loope
mov
dec
xchg
xor
cmp
inc
push
and
and
cld
xchg
add
xchg
iret
std
or
mov
aad
sub
mov
adc
shrl
lods
jnp
jnp
mov
xor
sahf
sub
mov
pop
cltd
dec
adc
adc
fldt
imull
push
sub
popf
mov
inc
sub
push
stos
loop
cltd
push
push
xor
out
cmp
push
jmp
aaa
iret
arpl
testl
icebp
ret
pop
loope
cmp
jecxz
push
cmp
mov
cmpsl
dec
int
addr16
pusha
out
pop
mov
gs
push
mov
arpl
movsb
insb
add
adc
mov
pushl
xor
ljmp
ja
call
adc
and
jp
mov
add
xchg
inc
xlat
xchg
push
jle
mov
arpl
push
push
test
pop
fsubrs
sbb
es
mov
scas
cmova
mov
and
pop
cmp
xchg
orl
sbb
sub
pop
das
insb
fstpt
mov
test
push
adc
lods
xchg
lahf
mov
loopne
xor
mov
mov
aaa
stos
pop
sbb
fisubrl
or
fwait
sti
dec
decl
mov
mov
jae
sbb
cs
push
aad
mov
arpl
add
lcall
add
int
ret
and
into
xchg
sbb
add
inc
ljmp
lock
shl
mov
cmp
clc
xor
sub
mov
sub
pop
loop
xchg
push
loope
ret
mov
sbb
xor
jmp
pushf
sbb
loopne
ds
pop
and
dec
sbb
jecxz
xor
fs
adc
repz
mov
mov
cmp
adc
mov
or
icebp
cld
xchg
and
sbb
call
or
lods
mov
ficoml
das
jmp
sub
cmpsb
jg
fwait
mov
xchg
inc
push
inc
dec
or
dec
adcb
ret
pop
mov
ja
sbb
cwtl
ja
mov
ja
xor
stos
xchg
sub
pop
sbb
xchg
push
jb
sub
mov
push
adc
imul
xchg
mov
xchg
jno
ds
mov
ffree
loope
mov
pop
das
addr16
loopne
mov
cmp
aad
cmp
test
stos
xchg
cld
stos
xor
xchg
xor
arpl
insb
jle
mov
add
fdivp
pop
ljmp
gs
fidivrl
adc
sub
mov
sub
jne
xchg
pop
jg
cld
outsl
mov
add
dec
loope
inc
pop
xchg
es
dec
divl
sub
pop
jnp
rcll
fcomip
sbb
hlt
push
call
enter
and
mov
popa
cmp
jno
les
xlat
imulb
mov
stc
sbb
jle
cmp
pop
mov
and
jg
loopne
pop
push
cltd
cmpl
addr16
je
test
sbb
adc
fcomip
clc
notb
test
cmpb
dec
cmpb
popa
decl
push
mov
mov
push
mov
push
out
and
jg
xor
xlat
xchg
daa
xchg
cs
scas
popf
bound
xchg
adc
sub
aas
xor
ret
jno
lret
outsb
test
adc
cwtl
cmpsl
xor
shlb
fs
jae
cmp
sti
dec
loope
sub
imul
ret
imul
movsb
test
lahf
and
inc
mov
inc
push
aaa
jge
addr16
aam
push
cmpsl
xor
pusha
es
shlb
aam
inc
pop
mov
xchg
xchg
add
leave
ret
sbb
push
sub
aaa
jae
push
repnz
clc
and
xchg
mov
lds
es
shll
push
push
and
pop
jmp
inc
cwtl
cld
out
adc
int3
push
jb
fdivs
sub
repz
mov
mov
js
sarl
or
or
lds
push
mov
shll
fcmovnu
imul
data16
pop
incl
jecxz
movsl
or
pop
out
dec
pop
pusha
insb
or
pushf
cltd
sub
sub
mov
xchg
mov
push
push
dec
inc
bound
mov
fs
test
jmp
lret
scas
dec
ficoml
inc
in
push
jno
cmc
mov
lcall
cwtl
jmp
jl
insl
leave
mov
sub
xlat
jno
xor
xchg
mov
add
outsw
and
dec
inc
mov
jnp
push
pusha
xchg
sub
xor
iret
ds
sub
scas
add
pusha
or
sub
mov
sbb
xor
sub
clc
and
shl
pop
mov
dec
loopne
pop
push
inc
stos
inc
jae
add
fucomip
push
add
or
xor
mov
xchg
push
inc
mov
daa
lock
aaa
dec
mov
test
sub
mov
int3
fs
ja
dec
lds
ret
in
inc
stos
fldz
xor
sar
cmp
fisttps
ret
push
xor
pop
sub
dec
sub
pop
fidivl
or
outsb
xlat
mov
or
sub
push
mov
xchg
in
jg
test
mov
shl
sti
pusha
imul
lods
adc
cmpsb
sbb
and
and
fsubrl
popf
pop
sahf
into
dec
jo
sub
and
xchg
add
lock
push
and
aaa
push
daa
lea
in
insl
pusha
sbb
in
imul
or
jnp
fwait
mov
push
aas
push
and
jle
mov
pop
adc
imul
es
push
es
andl
mov
and
cli
jmp
jp
ljmp
cmp
aam
mov
xchg
cld
xchg
or
sbb
testl
aad
es
add
sub
int
test
sbb
jno
testl
push
push
xchg
xor
out
jne
orb
lock
repnz
cmc
es
dec
imul
lahf
stc
test
mov
add
fisttpl
mov
sbb
dec
push
mov
sub
packsswb
cli
jo
out
sub
data16
cmp
and
mov
mov
jp
and
and
in
jbe
lret
jl
jae
ds
dec
jl
sub
outsb
loope
pop
xchg
mov
or
js
and
ror
jp
leave
jl
aam
out
out
fadd
add
xchg
mov
cltd
ret
loope
lret
dec
fistpl
sub
jnp
xor
jl
cmc
jns
add
mov
add
xchg
add
icebp
push
int3
inc
push
notl
mov
vpshab
and
pop
out
jmp
inc
fs
adc
lret
ret
xor
loope
nop
jmp
push
pop
mov
jae
lcall
loope
add
inc
fcoml
inc
shlb
dec
fs
int
in
inc
cmp
push
in
test
ja
int
push
cltd
ds
lret
je
insl
xchg
adc
fs
fidivs
loop
pop
fwait
jne
pop
jmp
pop
or
test
lret
jle
shrb
add
lahf
lods
push
repnz
add
imul
mov
bound
lods
lret
outsl
rol
sbb
mov
sub
imul
mov
sbb
and
mov
cli
xchg
push
sub
and
shrb
cmpsl
fstl
stos
add
rorl
pop
xchg
and
cmp
inc
dec
mov
dec
xchg
and
pop
sbb
mulb
mov
sub
ror
repnz
cwtl
mov
pop
out
push
xor
add
into
jno
xor
jb
inc
shrl
outsb
and
fbld
xchg
jae
notl
in
xor
cmc
or
adc
push
in
mov
xor
push
in
dec
hlt
stos
xor
mov
mov
xor
inc
mov
adcl
or
insl
test
jae
jns
in
icebp
pop
sub
sbb
cli
mov
repz
sbb
dec
lahf
daa
sbb
inc
add
leave
and
insl
cmp
mov
fisttps
xchg
mov
movsb
pop
lcall
decb
add
push
ss
nop
or
mul
in
mov
incb
shl
push
mov
mov
dec
add
shrb
cmp
inc
add
pop
mov
and
icebp
mov
dec
push
xchg
fdiv
push
fxch
pusha
or
pushf
jb
jb
gs
mov
addb
gs
lahf
push
out
or
int
sub
roll
jp
xor
add
pop
add
cmp
mov
and
pusha
fcmovnu
sbb
sub
push
jnp
addr16
jne
lods
setp
mov
daa
std
push
stc
mov
dec
or
dec
dec
inc
dec
ja
jb
sbb
or
cmp
and
mov
sbb
mov
arpl
mov
int
jecxz
notl
lds
adc
push
cli
cmp
arpl
xchg
sbb
fsubs
sub
andb
sbb
cwtl
push
mov
lahf
inc
mov
repz
push
mov
fdivs
addl
sbb
sbb
mov
leave
outsl
sbb
push
pushf
je
test
in
and
xchg
aas
aam
aad
jne
ljmp
insb
jge
mov
fcmovnb
add
cmp
dec
test
and
xor
adc
and
call
out
sub
inc
add
shll
loope
rcl
push
mov
jge
xor
dec
fwait
imul
push
test
ljmp
lret
mov
out
jo
xchg
sbb
sub
cmpb
sti
out
or
andb
test
adc
cmpsl
xor
popl
in
mulps
hlt
xchg
das
int
push
add
xchg
out
popa
fcmovnu
push
outsl
cmpsl
enter
movsb
push
pop
jg
xchg
adc
scas
rolb
je
mov
repz
les
fucomp
jmp
out
ss
clc
stos
jl
xchg
into
cmp
dec
ss
push
in
sub
or
lea
mov
mov
xchg
inc
mov
fs
in
movsl
cmp
mov
rcll
cmp
fwait
in
dec
sbb
cli
pop
scas
mov
ljmp
pusha
mov
sub
dec
aaa
jno
cmp
scas
int3
cmpl
nop
inc
adc
adc
daa
jbe
outsb
cmc
adc
xor
loope
mov
pop
xchg
fisubrs
cmc
or
out
cmpsb
mov
test
pop
stc
loopne,pt
popf
hlt
mulb
mov
in
jns
in
pop
pop
lock
in
movsb
imul
xchg
icebp
addr16
and
sarl
jno
mov
dec
popa
icebp
xchg
adc
ss
adc
push
imul
and
jle
es
cmp
test
sbb
mov
inc
jne
jnp
aaa
pop
cmp
mov
jno
jl
add
cmpsl
out
and
mov
cmpsb
cld
xchg
xor
testl
outsl
lahf
mov
xor
imul
mov
pop
jb
cmp
mov
or
in
or
stos
or
insb
cmp
mov
pusha
icebp
cmpsb
ss
jl
pop
jmp
push
mov
xorb
sub
pop
stos
push
dec
mov
cmp
and
dec
add
adc
test
das
or
in
add
fnsave
test
out
or
jns
and
xchg
and
out
enter
test
dec
mov
mov
inc
mov
sub
xchg
rorb
repnz
mov
cwtl
xor
or
jp
cmc
les
mov
dec
fwait
outsl
jnp
sbb
movsb
sbb
xlat
dec
inc
sub
icebp
mov
push
gs
xchg
or
and
stos
inc
mov
mov
or
and
or
mov
or
ret
xlat
dec
or
fsubrs
pop
jbe
sbbl
xchg
push
cmp
in
pop
int
inc
outsl
sub
orl
inc
insb
and
sahf
bound
insl
cmp
mov
enter
push
cmp
mov
add
xchg
jmp
pop
je
add
mov
add
ss
jns
and
xor
andb
pop
mov
popa
orb
fstpt
je
pop
fwait
bound
ret
idiv
cmp
aam
jno,pt
sbb
fbld
cs
or
outsl
jg
out
mov
adc
aad
jns
imulb
jle
add
ds
push
nop
jecxz
ret
pop
add
stos
notl
dec
outsl
jp
fstps
out
pop
jg
shlb
cmpsb
loope
ret
stos
jmp
cld
jbe
and
inc
cmp
xor
paddw
mov
cmp
bound
loop
adc
add
dec
and
andl
push
orl
xor
not
adc
cmp
cmp
daa
and
cli
jg
repnz
dec
xchg
test
dec
fcomip
xchg
outsb
popf
xor
fisubrs
mov
mov
outsl
xor
lahf
jnp
push
xchg
in
and
xchg
arpl
ret
enter
mov
aam
xchg
aam
jns
inc
mov
xorb
sti
das
pop
popf
ret
sbbb
fsts
mov
inc
adc
xchg
outsb
push
jp
push
nop
sbb
in
ds
or
dec
jae
shrl
jecxz
sbb
dec
xchg
xchg
add
inc
mov
push
jmp
sub
repnz
xchg
icebp
out
aas
aad
and
xchg
push
test
inc
cmp
int
outsb
mov
mov
inc
call
into
jge
daa
adc
inc
dec
jbe
sahf
push
arpl
imul
sbb
add
pop
pop
je
fwait
out
loop
sub
dec
mov
pop
adc
xchg
pop
popf
outsl
daa
jp
push
mov
jg
jl
cmp
sbb
pop
popf
add
sub
and
popf
roll
pusha
orl
jl
mov
dec
fidivl
xlat
adc
jae
lods
adcl
jle
shlb
nop
fs
sub
ds
jbe
daa
pusha
push
out
enter
cmp
insl
mov
adc
xchg
mov
out
stos
mov
aaa
jno
inc
inc
incl
cmpsb
fstpt
push
push
push
xchg
int3
das
das
out
in
stos
out
mov
movsl
mov
cmpsb
xor
add
push
mov
jne
sub
dec
outsb
dec
nop
addr16
inc
fs
sbb
push
xor
ja
addr16
lcall
push
call
and
aaa
add
inc
je
jge
mov
cs
pop
cltd
test
lret
sub
adc
mov
lahf
lds
lcall
aad
lar
xchg
mov
xor
lock
mov
mov
fsqrt
cwtl
sub
or
add
sub
sub
inc
xor
out
push
xchg
or
icebp
or
gs
dec
fidivrl
orl
mov
fistpl
adc
cwtl
enter
sub
ret
out
mov
cmp
pop
lods
jne
mov
inc
pop
jae
mov
lret
test
adc
mov
and
mov
inc
hlt
shll
imul
xor
and
inc
mov
lea
sub
mov
fcoms
scas
mov
inc
xchg
xor
mov
jle
cltd
lods
push
stos
mov
mov
add
aas
jmp
jge
cmpsl
ds
xchg
xchg
andb
lds
push
pop
roll
push
adc
aas
fsts
xchg
notl
cmpsb
loopne
jmp
cmp
pop
xchg
adc
orl
sub
sub
icebp
mov
ror
movb
dec
out
mov
lods
cmp
dec
fisttps
inc
imull
into
xor
push
insb
sbbb
xchg
inc
sub
sbbl
push
cli
loop
ss
xor
push
mov
jno
push
call
out
sahf
or
sub
sti
fwait
sub
sbb
jmp
cmp
xchg
push
sub
loope
lahf
sbbl
xor
out
add
inc
sub
test
push
lods
out
enter
je
add
lcall
and
ds
push
push
push
cmc
stos
stos
xchg
popf
cmp
xchg
loopne
jg
shlb
mov
popf
jecxz
cmp
xor
or
hlt
jp
or
mov
mov
push
inc
pop
shlb
or
loopne
stos
push
push
fdivl
js
pop
loopne
fs
sarl
pushf
dec
lock
adc
sub
es
pop
aas
aas
iret
enter
imul
push
mov
stos
fcmovne
adcb
test
rcrb
push
scas
inc
mov
int
mov
cltd
adc
push
out
sub
insl
mov
out
sub
cmp
sti
dec
mov
adc
xchg
outsl
xchg
in
cmp
sub
mov
sub
mov
mov
ret
pop
rcrl
in
jl,pt
cmp
insb
mov
xor
fidivl
xchg
jbe
mov
ret
popa
les
pop
das
cmp
mov
dec
push
testb
push
in
mov
mov
push
xor
ja
ja
fdivl
push
iret
jle
push
cwtl
or
lods
and
mov
and
stos
inc
mov
leave
test
mov
lcall
and
mov
pop
and
jb
jno
lock
pop
sbbl
xlat
cmp
xor
test
pop
pop
adc
or
and
inc
mov
dec
ljmp
popa
out
js
mov
add
movsb
mov
lods
and
mov
xchg
loop
icebp
cmp
fildll
dec
pop
add
lea
jge
loope
jbe
adc
repnz
or
sub
stos
mov
sbb
fistl
sti
test
icebp
or
and
fnstenv
pop
imul
push
movsb
mov
cld
inc
ret
mov
jns
je
xchg
cltd
rorb
push
mov
pusha
xor
mov
push
xor
ret
push
or
jb
push
ja
lods
and
mov
push
or
pop
mov
nop
cmp
hlt
push
pop
sbb
lods
jp
or
push
mov
cmpsl
test
mov
lock
mov
rolb
dec
pop
je
jae
and
mov
lock
lods
jl
jl
jge
xorb
ja
inc
xor
pop
sbb
cli
jl
cli
push
fistpl
and
test
daa
sub
es
addr16
leave
ficomps
xchg
pop
out
pushf
xchg
xchg
pop
cwtl
scas
fdivrs
outsl
jb
int
nop
pushf
xor
xlat
shlb
gs
mov
mov
loop
push
fdivrl
cmp
dec
imul
cmpsl
bound
hlt
data16
popa
cmpb
ss
fsubs
cs
push
loope
pop
xchg
daa
sbb
mov
pop
mulb
jo
xchg
push
add
cltd
fildl
test
and
sbb
cmp
call
mov
sub
mov
divb
sar
and
cli
hlt
or
push
push
inc
mov
leave
in
mov
arpl
mov
icebp
int
lods
fsub
jl
jl
cli
dec
add
fld
xlat
mov
shrd
imul
pop
enter
fdivs
add
nop
xor
push
pop
xchg
lock
je
adc
push
mov
sbb
sbb
adc
stos
in
pop
imulb
push
leave
lahf
mov
adc
mov
jb
mov
cwtl
addr16
movsl
inc
push
mov
fcmovbe
jl
in
jnp
pop
xchg
dec
notb
mov
xchg
icebp
repz
or
decl
imul
addr16
adc
xchg
mov
mov
and
mov
xchg
loope
hlt
pop
ljmp
sub
xor
xor
mov
or
les
std
out
mov
scas
dec
or
cwtl
cmp
adc
aaa
push
mov
imull
sarb
popa
add
jp
fbstp
fs
lcall
inc
cwtl
jmp
dec
pop
popf
push
stos
or
pop
ss
or
push
sbb
xor
fistps
stc
std
dec
lcall
lock
call
cmp
lret
je
cmp
mov
movsl
pop
cmpsl
pop
addr16
push
cmc
loope,pt
shlb
jp
dec
jmp
adc
mov
xchg
sub
icebp
fmull
lahf
push
out
inc
mov
imul
out
inc
jo
push
jl
inc
enter
mov
jmp
or
adc
xchg
scas
outsb
daa
or
inc
sbb
xchg
test
mov
xor
fcomip
mov
outsb
clc
and
pop
ret
and
xor
add
loope
fistpl
mov
fisubs
enter
adc
movsl
dec
cmpsb
icebp
outsb
sbb
or
sub
fstpl
shlb
mov
les
or
loope
pop
jl
mov
mov
sbb
test
inc
xchg
xchg
and
jle
sbb
inc
dec
jle
ja
jge
adc
pop
dec
or
mov
and
sarb
xchg
lahf
dec
mov
es
dec
lcall
sub
daa
or
sbb
sub
cld
aad
ja
pop
fnstcw
inc
push
pusha
mov
arpl
sub
cmpsb
mov
out
inc
mov
les
add
lcall
je
xchg
aam
push
adc
inc
int
inc
push
fcmovne
fmuls
leave
pop
push
dec
jecxz
cmp
push
test
xlat
mov
lret
mov
mov
popa
jle
xchg
jae
popf
push
addr16
xor
mov
sahf
mov
and
mov
mov
cmp
enter
std
cwtl
in
insb
mov
cld
fadds
lcall
and
enter
adc
ss
push
outsb
xor
xchg
cmp
mov
test
leave
dec
dec
shlb
pop
icebp
mov
test
inc
sarl
es
inc
cmp
lods
jbe
test
jb
in
lods
ror
fisttpll
scas
mov
rorl
cmpsb
sub
and
test
lret
orl
inc
or
pop
aas
inc
aas
pop
out
stos
xchg
inc
dec
int3
xlat
insl
ret
lahf
and
mov
cmp
adc
inc
mov
push
mov
inc
dec
dec
jge
frstor
pushf
fimull
adc
sti
and
in
cwtl
enter
jl
lods
in
or
test
clc
mov
movsb
pushl
and
push
fs
fs
cli
sbb
fsubl
dec
inc
jecxz
jns
cld
popa
mov
dec
arpl
aaa
or
mov
fldl
xchg
repnz
inc
push
fldt
icebp
adc
inc
sbbb
dec
sbb
cmp
xchg
jnp
mov
jp
jl
int3
or
ss
fwait
jb
das
outsb
loope
data16
nop
cwtl
out
inc
push
jmp
sbb
inc
test
shlb
or
or
into
mov
dec
jbe
jl
xchg
cmp
lcall
cmpsl
lea
cmp
jnp
sbb
pusha
int3
lds
push
in
sub
sar
or
jae
in
aas
pop
flds
sbb
in
xchg
repz
xchg
sub
adc
je
leave
popa
jmp
sub
out
ret
mov
stos
xor
adc
test
je
jbe
sub
mov
mov
ret
pop
xchg
sub
test
adc
mov
cmpsb
inc
mov
dec
jae
sbb
and
cmp
test
adc
ret
arpl
and
mov
xor
aaa
les
push
inc
mov
or
iret
and
dec
sub
mov
pop
addr16
lret
mov
stos
test
sub
sub
mov
mov
push
mov
movsb
sub
mov
cmp
push
daa
cltd
test
xchg
aam
mov
xlat
push
fwait
popa
mov
or
sub
pop
dec
mov
push
out
repnz
icebp
test
fnstsw
mov
mov
ds
rorb
lahf
pop
popa
gs
je
and
fdiv
test
add
cld
xchg
movsb
add
mov
int3
sbb
sbb
jb
cmp
xor
dec
inc
push
fs
cmp
xorl
pushf
scas
push
sar
jno
int3
in
cmp
mov
test
mov
dec
shlb
stos
inc
arpl
dec
dec
aas
fwait
push
xor
push
cmp
jb
sbb
sbb
and
enter
lds
adc
jno
mov
mov
int3
and
mov
divl
push
stos
xchg
pop
jge
icebp
repz
pop
mov
mov
in
int
or
adc
xchg
iret
xchg
jmp
sub
mov
cmp
add
push
add
ret
jno
and
mov
sbb
jge
je
call
loope
and
pop
pop
push
test
add
js
sbb
cmc
lahf
add
cmc
dec
jb
call
or
cmpsb
cmp
cmp
mov
mov
repnz
and
push
sbb
aam
or
icebp
xor
jo
push
dec
pop
bound
push
cmpsl
or
repz
add
lret
or
pop
xchg
out
bound
ret
mov
adc
ljmp
add
or
mov
xchg
push
bnd
icebp
xchg
pop
fisubrl
jl
js
sbb
mov
fcompl
ds
pop
fnstcw
adc
pusha
outsb
ret
lods
xchg
cwtl
jno
jg
lahf
xchg
xor
push
pop
xor
sti
pop
stos
fdivs
in
adcb
mov
xor
xchg
mov
shl
aam
jmp
or
inc
cld
jb
adc
dec
mov
pop
pushf
sub
in
imul
jge
xchg
jb
xor
mov
xchg
inc
inc
sbb
jg
sbb
xchg
jp
sbb
inc
repz
stos
sub
pop
mov
xchg
xor
lret
xor
adc
mov
sub
ljmp
movsl
sbb
push
xlat
sub
andb
das
aam
push
sbb
fisubrl
cmp
nop
mov
xchg
inc
pushf
iret
out
adc
adc
and
sub
outsb
add
dec
jg
jl
xchg
ret
push
mov
int
push
xor
push
mov
push
into
imul
sti
jo
mov
mov
or
push
jl
call
out
mov
out
and
aad
jg
mov
and
lds
and
push
es
popf
cmp
sub
jmp
xor
or
enter
aad
cmp
hlt
mov
or
imul
xchg
pushf
push
jne
test
and
cltd
xlat
push
scas
daa
test
xor
mov
and
outsb
aaa
pop
aaa
or
div
dec
pop
mov
push
fstl
mov
cmp
lret
and
adc
jl
inc
jne
xchg
rolb
fsubs
push
scas
adc
mov
movsl
xor
adc
adc
imul
insb
sbb
repnz
cs
dec
push
cwtl
into
and
cmpsb
iret
and
sub
orb
pop
sbb
pop
jmp
mov
mov
fwait
jo
sti
fwait
jo
mov
dec
int
testl
shrl
je
scas
sub
push
mov
inc
or
loopne
pushf
shlb
sub
out
cmp
mov
repnz
cmpsl
je
and
test
arpl
fists
adc
dec
adc
adcb
dec
scas
mov
clc
sbb
adc
dec
arpl
ljmp
mov
adc
insb
iret
mov
aam
mov
jg
pop
repnz
sti
jbe
pusha
jns
xchg
ficomps
pop
bound
scas
mov
fdivl
pop
test
ret
fdivr
stos
pop
lret
cld
jae
fldenv
or
jle
mov
jle
pop
repnz
andl
pop
pop
fwait
lds
or
cs
adc
leave
aam
push
and
jno
icebp
mov
daa
lcall
adc
mov
das
mov
nop
icebp
in
dec
sbbb
mov
mov
pop
inc
leave
loop
in
push
test
xor
nop
outsl
out
cld
mov
leave
cmp
lret
pop
jno
inc
jmp
ss
sbb
test
test
das
data16
add
inc
fucom
dec
push
pop
pop
dec
fistl
sti
repz
pop
and
jne
mov
xchg
ljmp
lods
mov
mov
push
jbe
les
nop
incl
lcall
fsubrs
mov
pop
enter
dec
mov
dec
out
popa
andl
dec
dec
pop
rcrb
cmp
cmc
fs
data16
aaa
dec
cmp
fnsave
cmc
xchg
mov
jae
mov
cmpsb
in
cwtl
aam
nop
shrb
aad
int3
xchg
xchg
rorl
sbbl
pop
push
push
rorb
out
mov
faddl
mov
mov
lcall
pop
icebp
mov
mov
jbe
cmp
push
outsb
push
mov
test
xor
jecxz
ret
fwait
call
outsb
loope
mov
sbb
outsl
les
loopne
mov
loopne
adc
sub
pushf
mov
cmp
mov
mov
pop
xor
adc
mov
pusha
ss
mov
sbb
cld
mov
roll
push
xchg
das
lock
mov
push
mov
in
fucomp
sbb
xchg
sub
xor
test
sub
ret
outsl
in
test
push
add
loopne
pop
pmulhuw
mov
cmpl
movsl
clc
pop
js
push
stos
cmpb
jge
pop
movsb
xchg
sub
fidivs
es
xchg
mov
test
or
cmp
sbb
dec
loopne
arpl
add
ror
mov
fldl
sub
out
sbb
adc
or
sarb
fisubrl
outsl
adcb
aas
movsb
mov
push
aam
pop
lock
nop
and
xchg
inc
pusha
stc
dec
int
mov
inc
les
pop
sbb
mov
xorb
imul
inc
sahf
repz
or
cmp
xchg
dec
aas
lods
inc
dec
lea
mov
push
enter
outsb
shrl
pop
pop
gs
stos
push
mov
jo
jg
mov
jge
mov
inc
clc
jae
aam
mov
out
sbbl
and
dec
pop
adc
adc
push
push
add
fnstsw
out
and
xor
jno
cmp
jbe
aaa
les
fwait
ss
loop
imul
xchg
mov
shll
xchg
enter
cmp
xor
pop
cmpsl
jge
pop
pusha
inc
and
lock
lock
mov
cmp
outsl
scas
jmp
in
xchg
test
push
mov
mov
adc
mov
popf
mov
xor
adc
dec
cmp
hlt
mov
lcall
and
and
sub
mov
pop
je
fisubl
dec
popa
fsubl
adc
add
jns
inc
stos
fnstenv
mov
dec
jecxz
scas
xchg
jle
jecxz
xchg
pusha
je
ds
fldcw
bswap
fsubrp
fmull
dec
sbb
lahf
fimuls
es
lods
dec
repnz
jns
int3
loopne
sub
out
xchg
inc
and
sub
pop
int
stos
add
jle
ret
sbb
mov
les
sbbl
ljmp
mov
leave
fidivl
add
push
sub
jle
sub
lret
test
dec
rcl
lods
push
or
pop
leave
fs
addb
ret
sub
ja
repnz
insl
out
ljmp
mov
dec
pop
lret
add
or
hlt
dec
adc
popf
fistpl
scas
or
repz
jo
int3
mov
pop
in
in
mov
pop
mul
jl
or
bound
lahf
mov
int3
int3
arpl
xchg
xor
je
andl
jnp
insb
xchg
sbb
mov
mov
adc
arpl
lea
or
rclb
cmc
mov
cmp
mov
into
fildl
lret
dec
jo
jp
les
jne
rorb
adc
sbbl
fwait
outsb
jg
in
cs
pop
insl
push
jns
lret
je
outsb
testl
std
push
add
imul
pop
das
std
or
inc
push
and
mov
or
rep
cmp
scas
outsb
jb
mov
rolb
xchg
or
push
shll
jl
call
add
xchg
testb
add
xor
test
inc
jnp
out
flds
jecxz
int3
shlb
xchg
and
jo
aaa
mov
incl
das
xor
js
sub
stos
loopne
inc
les
xor
mov
fsts
adc
sahf
in
mov
jo
shr
mov
test
sub
aaa
into
xchg
or
xchg
mov
in
jnp
mov
rcrl
jns
pop
jp
and
cmc
lods
inc
daa
inc
or
pop
iret
lret
xlat
xor
psraw
pop
inc
filds
jge
fisubrs
fsubrs
adc
iret
out
fs
in
test
or
cwtl
mov
test
push
add
dec
add
push
loop
popf
xchg
aas
dec
dec
repnz
mov
or
cwtl
addr16
sti
xor
lcall
mov
cmp
inc
fisubrl
mov
mov
xor
mov
dec
jle
cmp
and
sub
popa
dec
call
in
and
mov
or
jae
xchg
sub
mov
sub
mov
imul
xor
sbb
ds
adc
out
cld
cmc
mov
nop
jmp
inc
push
jo
mov
mov
cmpsb
and
and
jg
bound
dec
out
das
sub
sbb
repnz
inc
xchg
loop
mov
int
lods
sti
pop
mov
xchg
add
mov
rorb
pop
repnz
jae
pop
inc
in
loop
into
nop
rcl
test
sub
out
or
mov
sub
pop
mov
push
test
mov
pushf
jle
lahf
pop
cmp
test
movsb
outsb
and
push
sub
adc
sub
inc
mov
xchg
mov
push
out
jmp
fstl
out
cmp
mov
call
dec
inc
xor
jno
andl
outsb
jb
into
push
imul
je
cmp
mulb
cmpsb
inc
pop
and
sbb
test
mov
adc
loopne
repnz
imul
nop
mov
iret
sbb
loopne
jb
loop
pop
xchg
call
inc
or
cli
cmp
push
ret
xlat
inc
sbb
sbb
cmpsb
add
hlt
push
mov
mov
xchg
jg
push
jnp
sub
fnsave
mov
or
add
sub
jp
pop
mov
fwait
jns
icebp
adc
addl
jnp
mov
jmp
cli
aaa
xlat
mov
icebp
mov
je
lret
shrl
xchg
push
push
mov
jae
mov
push
imul
push
ja
pop
jmp
test
mov
sahf
sbb
imul
and
xchg
mov
shll
leave
pop
pusha
jl
push
cmp
enter
test
test
cmp
sub
pop
fdivs
or
rorl
add
cmp
pop
in
ss
cltd
int3
cmpb
xchg
fdivrl
aad
push
sbb
dec
mov
pop
shrl
aad
xor
xchg
jno
jge
cmp
pop
jle
pop
test
lret
nop
pop
inc
ret
jnp
mov
in
ja
insb
jmp
push
test
lcall
or
cs
jno
sarl
shl
push
aaa
lret
mov
or
fidivrl
jnp
shlb
mov
nop
imul
cmp
std
push
movsb
cmpsl
stos
nop
sbb
loop
nop
pop
loope
or
shl
sub
cmp
cmpsb
mov
mov
jb
movsl
pop
cmp
lods
mov
outsl
int
hlt
pop
cld
push
in
ja
push
jns,pt
das
mov
daa
test
fisttpll
jae
ret
enter
push
sbb
push
roll
jb
ljmp
sbb
add
inc
mov
testl
imul
orb
push
push
sbb
push
lea
ds
icebp
sbb
fistps
push
mov
out
daa
daa
and
loop
pop
lret
jae
sbb
jecxz
scas
scas
add
inc
sub
sub
repz
mov
xchg
adc
add
fnstsw
loopne
and
test
shlb
inc
fisttps
outsl
xlat
cmp
scas
inc
push
pop
mov
jno
jl
push
push
and
ja
popf
scas
leave
cwtl
ds
fsubp
pop
les
mov
dec
lret
pop
sti
mov
lods
nop
xchg
les
mov
dec
jecxz
inc
icebp
movsl
clc
mov
pop
cmp
mov
fwait
inc
cwtl
inc
imul
mov
sbb
pushf
mov
mov
ficomps
sti
cld
adc
ja
xor
jl
pop
mulb
out
pop
cmp
scas
divl
inc
add
xor
rorl
lret
int3
insl
xor
test
or
xchg
stos
movsb
mov
testb
adc
gs
jne
pop
rorb
stos
push
in
outsl
push
mov
xchg
pop
aaa
aad
fisubl
lea
xchg
lret
into
cmpsl
scas
inc
fldenv
pushf
gs
data16
cmp
and
shrb
jmp
test
lcall
add
mov
fcoml
pop
in
jb
test
cli
sbb
arpl
push
scas
xor
xlat
xor
pusha
js
adc
setle
mov
fnsave
adc
sub
mov
mov
bnd
dec
fsubl
sbb
imul
mov
jb
or
mov
sub
mov
aam
stos
pushf
repz
xchg
insl
or
cmp
add
call
frstor
xchg
fdivr
and
mov
and
subl
test
push
dec
add
sub
sub
jg
xchg
icebp
push
out
pushf
arpl
sub
iret
je
jbe
hlt
mov
pop
mov
adc
iret
push
pop
mov
jl
mov
ja
cmp
stos
movsl
cmp
leave
adc
inc
sbb
rcrl
push
mov
push
pushf
decl
insb
or
es
subl
xchg
sahf
jbe
sarb
testl
into
es
scas
inc
push
mov
je
jl
adc
ds
sub
cmovne
cld
inc
iret
mov
push
sbb
repnz
iret
lock
out
xchg
mov
fimuls
repz
cmp
xchg
inc
cli
push
stc
push
mov
sub
cmc
test
andl
cld
push
sbbb
push
fst
addr16
inc
xor
pop
lods
fdivrl
or
cmpsb
scas
xchg
inc
push
adc
jo
mov
out
jnp
int
dec
in
daa
sbb
fs
pop
daa
mov
int3
arpl
jle
cmp
gs
mov
pop
mov
cs
inc
mov
cmp
in
test
pop
sub
mov
loopne
xchg
inc
dec
and
icebp
push
leave
in
jge
add
sub
shll
cs
outsl
in
inc
inc
lret
xchg
jmp
testb
xchg
in
mov
cmpsb
out
sub
repnz
mov
leave
and
cmp
stos
inc
bswap
pop
mov
lret
addr16
push
xor
daa
cmp
jge
mov
mov
fidivrl
call
sbbl
scas
fsubs
sbb
push
jl
mov
dec
mov
lea
mov
fisubrs
sub
add
pusha
nop
mov
out
out
cmp
push
xchg
sbb
jne
jbe
ss
in
xor
cltd
sub
cld
or
aad
jmp
sub
xor
daa
mov
xchg
pop
cmp
or
or
and
in
dec
push
lds
push
mov
decb
das
adc
jg
ds
jecxz
popa
sbb
adc
ja
xor
ret
hlt
cmc
xchg
adc
scas
inc
ror
in
xor
inc
lods
out
fadd
jp
mov
sbb
adc
roll
out
pop
xchg
cmp
mov
popf
jo
adc
stc
in
out
or
sub
adc
sub
cltd
dec
ret
jb
shl
adc
sarb
mov
add
dec
xchg
xchg
es
mov
testb
and
xchg
inc
leave
dec
jle
dec
insl
inc
stos
adc
cs
add
dec
cmp
mov
in
shrb
in
cmpsl
enter
rolb
fists
loopne
xchg
jno
cs
xchg
dec
mov
je
xor
lea
xchg
cmp
fwait
cmpsl
adc
fidivrs
or
cmp
or
stos
adc
mov
jae
inc
fisubs
adc
jo
cmp
imull
ljmp
in
and
pop
lock
movsb
lods
imul
loope
maskmovq
mull
push
rorl
femms
shll
scas
mov
je
mov
in
out
cld
leave
insb
sbb
ds
cmp
add
push
pop
cmp
int3
add
inc
push
cmp
ja
inc
in
mov
in
mov
mov
shlb
fbstp
cli
xchg
inc
lods
dec
and
addr16
cmp
or
pop
inc
aas
add
mov
pop
lods
scas
stc
ds
mov
dec
mov
jp
popf
incl
movb
out
jg
scas
inc
frstor
int3
lret
adc
jmp
jae
push
test
jb
icebp
mov
shl
xchg
or
pop
rolb
push
ret
hlt
addr16
sahf
sbb
mov
fldl2e
jmp
lods
and
sbb
int3
andl
psubq
mov
xor
rcr
pop
jmp
js
loopne
inc
fldz
jnp
out
stos
es
stos
pop
push
mov
push
or
xor
gs
ficomps
mov
jp
mov
adc
outsb
ja
fdivrl
andb
fistpll
push
push
mov
add
sbb
test
outsb
and
ljmp
fwait
das
and
xchg
pop
jmp
mov
pop
cmpsl
stos
icebp
sub
xchg
add
sub
enter
and
test
add
mov
push
aad
in
inc
in
out
xor
aam
cmp
xor
dec
mov
insl
inc
and
sbb
inc
dec
aam
pushw
jno
mov
mov
sub
dec
and
loope
cmp
in
xchg
dec
xchg
ret
pop
or
mov
arpl
shl
add
stos
push
inc
js
xor
loope
in
outsl
sub
dec
in
pop
lret
or
arpl
pop
and
and
fistl
mov
or
sub
hlt
sub
out
aad
pop
lret
pushf
into
mov
mov
data16
xchg
push
mov
mov
pop
or
push
xor
xchg
lcall
les
mov
shrl
test
push
loopne
adc
cld
jmp
mov
pushf
popl
and
sub
arpl
fdivl
aam
faddl
movsb
popa
mov
push
adc
inc
sbb
leave
adc
daa
cmp
sub
sbb
rorl
lret
loope
fbstp
jno
lods
push
data16
xchg
and
xchg
scas
ds
lods
inc
faddp
lock
and
data16
adc
bound
add
jbe
call
repz
cmp
scas
sub
mov
sub
std
or
lahf
mov
movb
push
and
mov
sbbl
mov
mov
mov
shrb
lds
inc
adc
jb
sbb
ficoml
frstor
sti
into
inc
and
stc
adc
sbb
mov
insb
adc
les
fimuls
mov
adc
adc
prefetch
dec
xchg
mov
mov
jns
dec
fs
inc
inc
fdivl
mov
mov
jbe
cmp
out
sub
jne
rclb
adc
repnz
and
xor
cmpsl
mov
and
sarb
data16
pusha
and
xchg
push
ret
add
sub
call
clc
lret
fisttpl
push
inc
xor
xchg
in
adc
std
adc
mov
rorl
shrb
ret
xor
push
dec
loope
xchg
dec
or
push
sub
inc
lret
ja
lahf
iret
data16
in
testl
inc
push
inc
add
mov
and
es
mov
into
jmp
pop
xor
xchg
add
lock
pop
lret
add
inc
mulb
mov
arpl
cltd
js
rclb
sub
mov
xchg
test
push
adc
and
jb
xchg
imul
sbb
inc
mov
mov
push
xchg
mov
sti
or
inc
inc
ret
outsl
mov
mov
aaa
out
addr16
mov
scas
mov
xor
jns
pop
ja
into
and
pop
mov
aam
bound
popa
adc
aas
pop
xor
cmp
lret
fcmovu
jle
adc
fisttps
loope
mov
out
sti
roll
test
cmpsb
ja
sbb
push
jne
dec
test
aaa
mov
mov
int3
dec
sub
adc
or
xor
mov
rorl
push
xchg
push
jl
and
fistl
add
xor
mov
sub
jns
cmp
les
cmp
pusha
push
cmp
push
testl
cmp
mov
je
and
shr
fs
call
lds
ds
sarl
shll
add
scas
popa
daa
inc
int
adcb
cld
and
inc
xor
inc
popa
sbb
xchg
jno,pn
lods
cmp
adc
lods
sahf
pushl
and
data16
ljmp
cltd
sti
dec
inc
push
lock
cmp
adc
mov
push
jge
fists
mov
xchg
pop
mov
pop
mov
xchg
iret
mov
jbe
int
outsl
pop
jecxz
or
fwait
inc
popa
xor
je
xor
mov
out
test
xchg
sub
cmp
mov
pop
shlb
cmp
ficompl
jle
repnz
testl
and
sub
pop
daa
xchg
dec
xchg
repz
jmp
xchg
call
inc
xchg
out
inc
dec
mov
aad
in
jbe
mov
and
fmull
push
push
mov
add
push
and
inc
aam
cmpl
mov
addb
sbb
dec
jle
mov
add
mov
lea
cmp
pusha
mov
mov
popf
sub
xor
xchg
cmp
pop
mov
out
and
icebp
jmp
cmp
push
aad
dec
cwtl
xor
pop
cltd
scas
xchg
pop
mov
loopne
sahf
cld
mov
shr
jg
repz
lds
out
cld
sahf
scas
shll
es
push
test
push
cmc
nop
popf
jb
xchg
sub
out
loope
negl
and
fs
adc
stos
inc
jbe
mov
ret
pop
movsb
jae
dec
in
xchg
push
and
adc
hlt
inc
in
pushf
adc
arpl
jae
mov
xchg
mov
xchg
adc
int3
mov
outsb
sbbb
jae
subl
icebp
fstpl
test
mov
add
dec
mov
jns
out
and
test
push
sahf
push
fwait
loope
push
shrl
push
inc
jno
dec
dec
xchg
jbe
js
rol
push
orb
mov
mov
iret
adc
push
inc
sub
dec
jno
mov
lahf
in
test
testl
xchg
in
and
arpl
insb
dec
jb
sub
sbb
mov
fistl
jmp
dec
sbb
dec
imul
out
push
fwait
push
push
fsubl
rclb
jmp
jae
mov
popf
stc
jno
xchg
insl
dec
rolb
pop
inc
insl
ret
dec
test
mov
jbe
lds
aad
xlat
icebp
add
notl
arpl
loop
dec
enter
js
movsl
cmp
ret
pop
stos
mov
ret
sbb
xlat
test
or
lahf
ss
lret
fbstp
into
ljmp
inc
cmp
mov
mov
in
mov
mov
cmp
jns
cmp
inc
adc
clc
push
fcomps
jp
and
push
pusha
stos
adc
sarl
mov
mov
mov
mov
xchg
dec
setl
and
jp
cmpb
or
fsubp
adc
adc
scas
push
rcrl
pop
xor
mov
std
jo
pusha
xor
aas
gs
and
lcall
fs
shrl
test
shl
lods
sbb
pop
cltd
jg
inc
lock
test
icebp
movsl
jns
jl
arpl
rcl
add
push
rcr
jmp
mov
xor
ds
mov
ffreep
fstpt
xor
cmpsl
out
mov
and
xor
andl
sub
xchg
loopne
test
or
in
xchg
or
insl
cmpsl
mov
pop
test
fisubl
or
stos
and
sub
test
lds
push
nop
push
add
and
not
stos
dec
out
or
jo
movb
sti
sub
sub
adc
test
push
adc
divps
mov
dec
or
movsb
js
mov
clc
popf
mov
jg
cmpsb
pop
mov
mov
cmp
imul
out
jge
pushf
imul
jns
mov
mov
outsl
adc
jmp
mov
ljmp
xchg
mov
repnz
imul
xchg
jns
fstps
mov
mov
xchg
sub
inc
ret
mov
mov
mov
push
xchg
sarb
cmp
jecxz
scas
inc
fld1
push
sahf
mov
int
mov
sar
test
pop
xchg
xor
and
lods
xor
mov
lds
outsl
push
mov
aad
std
pop
xor
or
daa
push
loop
xchg
pop
pop
not
add
mov
pop
shl
dec
cmp
sbb
arpl
sub
ss
inc
sub
mov
bound
xchg
mov
dec
add
xchg
xor
jbe
cmp
jg
rcll
lea
in
pop
and
mov
addb
xchg
and
out
push
mov
out
mov
jecxz
lods
fistl
not
pop
add
or
cmp
cld
mov
xor
popa
pop
nop
mov
or
scas
cltd
or
pop
mov
push
fdivrs
lcall
in
jb
pop
movsb
fs
pushf
test
mov
mov
lret
add
aas
sbb
add
cltd
dec
dec
movsl
das
rol
jg,pn
push
xor
ja
rclb
cmp
add
xor
mov
jnp
pop
pop
mov
mov
xor
push
add
je
adc
adc
pop
decb
out
pop
movsb
mov
cmp
enter
push
cwtl
test
dec
das
cmp
cmp
jo
xchg
sbb
out
push
jp
repz
dec
mov
push
xor
aas
jbe
icebp
mov
xchg
inc
arpl
jg
add
dec
jl
stos
mov
pushf
xor
xchg
sbb
out
cmp
mov
push
cmp
sub
jae
xor
rcrb
lea
sbb
cmpsl
pop
int
dec
adc
imul
jns
xchg
lcall
sbb
imul
out
or
ss
fsubs
popa
push
int
addb
dec
insl
scas
fwait
popa
loopne
adc
or
adc
call
dec
cmp
out
insl
jo
es
or
cmp
lret
sbb
bound
subb
aaa
roll
out
push
xor
mov
shl
xchg
jl
ret
shrl
and
xor
push
inc
ds
mov
lcall
inc
inc
js
pop
hlt
lret
testl
xor
inc
movl
cli
push
or
jp
mov
add
or
dec
and
mov
test
xchg
les
add
frstor
xchg
cmc
popa
and
repnz
adc
dec
bound
mov
aad
jge
mov
xor
adc
test
sti
lea
mov
pop
push
or
add
push
fsubp
das
fcompl
inc
pop
movsl
mov
push
loope
outsb
jle
mov
int
xor
scas
and
pushf
mov
pushf
sahf
cmp
fs
cs
mov
into
data16
sbb
test
mov
in
jnp
xchg
aas
rorl
shl
add
jmp
out
rclb
xor
and
push
adc
pop
nop
pop
frstpm(287
inc
mov
xchg
adc
insb
out
scas
sahf
push
inc
jmp
jnp,pt
outsl
lock
movsb
movsb
aad
jp
lcall
cmp
add
jecxz
ret
or
cli
mov
arpl
jmp
movsb
enter
fbld
aad
arpl
test
mov
in
and
sub
inc
mov
jne
pop
push
insl
cmp
test
insl
fs
in
fcmovbe
clc
mov
lret
sub
cmp
mov
jne
mov
pop
and
insb
pop
push
icebp
mov
inc
aad
js
fidivrs
in
fs
lock
pusha
xor
shrl
test
adc
adc
pop
jb
dec
dec
cwtl
daa
and
push
jmp
or
aad
push
add
mov
xchg
lods
jmp
jp
lods
ret
and
movsl
push
in
clc
dec
lret
js
mov
into
sub
jle
lcall
push
nop
add
push
hlt
movsl
sbb
ja
gs
sbb
cmpsl
jle
mov
add
sbbb
inc
pop
xchg
push
rol
jge
push
in
rorb
int3
movsl
push
in
push
mov
out
add
mov
sti
mov
icebp
neg
test
push
lds
stos
imul
xchg
xlat
test
jnp
stc
push
loopne
mov
daa
popa
repnz
mov
out
push
adc
xor
dec
sti
xchg
mov
cmp
push
std
xor
mov
mov
imul
jp
clc
xor
clc
xchg
das
js
leave
jecxz
gs
sbb
scas
shl
int3
jb
adc
aaa
cmpsl
and
inc
cmp
dec
cmp
call
xchg
push
lock
rorb
ret
ja
pop
jne
pop
in
jge
test
lret
pusha
xor
in
jge
fiadds
xchg
sub
pusha
jmp
mov
movups
or
fisubs
add
inc
test
imull
sahf
in
call
cmp
push
push
sahf
insb
dec
mov
or
dec
jecxz
jge
sti
cmp
push
fidivrs
test
pop
addr16
out
push
mov
fidivrs
sub
jbe
jmp
sarb
aad
imulb
subl
cld
xlat
shrb
dec
lds
mov
jp
shrl
ret
cmp
call
pop
js
loop
stc
add
and
sbbl
lods
pop
sahf
fucompp
add
sub
pop
dec
rclb
leave
sbb
jmp
insb
cwtl
popa
jne
arpl
iret
data16
ja
test
divl
mov
inc
adc
shrl
inc
mov
ret
cwtl
out
sahf
in
or
mov
sub
mov
or
lea
xchg
sub
cli
cs
pop
mov
sbb
ret
mov
clc
daa
fsubrp
or
xchg
adc
iret
push
jmp
dec
and
xor
inc
xchg
pop
push
push
push
jb
das
fidivs
hlt
fstl
call
jns
dec
imul
xor
loop
rclb
pandn
hlt
lret
and
mov
lods
scas
roll
mov
sub
fst
in
push
lock
dec
adc
mov
enter
pusha
or
fidivrl
mov
cs
xchg
das
test
jle
mov
mov
jne
sub
cmc
jb
sub
cmp
add
pop
cmpsl
cwtl
iret
fnstenv
jbe
sbb
cld
outsb
mov
imul
addr16
mov
addl
rorl
mov
add
jmp
or
jecxz
bound
jg
cmp
movsl
or
daa
daa
jl
inc
notl
pushf
or
int
sbb
es
mov
fdivl
in
orl
xchg
scas
push
rclb
add
xchg
inc
rcll
add
rcrb
lods
in
sbb
push
sti
imulb
ret
xor
mov
rcrl
xchg
jmp
push
push
jae
xor
sub
out
mov
add
clc
cwtl
sbb
push
fucomi
aaa
adcb
mov
shrl
movsl
sub
inc
push
outsl
loope
push
xchg
mov
push
push
cmpsb
push
jb
mov
xchg
out
rclb
fnstcw
test
jnp
stc
xchg
jns
cld
xchg
fidivrl
push
ljmp
into
jmp
shll
cmp
aaa
test
push
and
lret
jg
test
aam
xchg
notb
rorb
stc
sub
mov
ret
push
push
repz
cmp
scas
lock
adc
add
dec
aas
shrb
outsl
jnp
ds
mov
dec
ss
iret
adc
jb
sahf
jne
nop
xchg
xchg
cmp
fsubl
jp
sbb
ds
mov
in
pop
dec
push
push
cwtl
das
dec
add
mov
rcrb
xchg
or
xor
pop
mov
xchg
push
decl
sub
or
adc
add
xor
jmp
push
sbb
fistl
shrb
popa
xor
cli
or
cwtl
pmulhuw
mov
sti
inc
push
ds
xchg
in
lret
nop
push
jne
popw
mov
fnstcw
mov
dec
pop
in
sbb
lea
adcl
sbb
mov
enter
cld
adc
ds
xlat
pop
push
push
inc
popa
mov
inc
sbb
movsb
repnz
idiv
dec
mov
push
xlat
mov
mov
rclb
mov
push
jno
xor
cld
xchg
fwait
pop
and
sbb
mov
sbb
mov
shll
lods
ljmp
pushf
scas
out
mov
push
and
inc
fs
cld
sub
mov
add
ss
imul
decl
pop
out
xlat
lret
fsts
mov
aas
xor
mov
dec
mov
fldl
push
shrl
push
sub
add
jne
imul
test
bound
jb
jp
push
mov
adcb
add
repz
pushf
stc
insl
stc
xor
mov
cld
js
add
pusha
rorb
pinsrw
cmp
les
pop
ja
popa
cli
into
jnp
ret
and
push
jmp
and
mov
movsl
xor
push
cmc
ja
add
sbb
adc
pushf
inc
insb
xchg
insb
jbe
or
mov
filds
imul
mov
or
cli
jbe
lods
cs
inc
fiadds
das
add
gs
pop
js
fsub
neg
mov
in
or
adc
push
aam
mov
or
jp
adc
push
pop
fstl
xchg
popa
fsubl
push
call
jmp
cmc
mov
scas
fdiv
test
adc
mov
sub
pop
and
and
jb
sbb
mov
addr16
sbb
sbb
hlt
lcall
cld
adc
mov
subb
adc
lods
sub
test
mov
bound
arpl
pusha
dec
sbb
mov
es
outsl
cld
rolb
mov
jb
cmp
jl
mov
add
pop
pushf
xor
test
mov
out
sub
pusha
ss
divb
sub
inc
popfw
push
aad
enter
jecxz
mov
sub
or
push
mov
adc
mov
dec
test
mov
addl
jnp
fabs
sti
pop
ret
or
add
test
inc
lret
add
mov
stos
insb
adc
data16
xor
jbe
jl
xchg
pusha
into
les
int3
mov
sub
cmp
sub
jo
inc
add
fs
ss
test
loope
lret
inc
cltd
jno
sbb
ss
jp
cmp
ret
das
fsubp
xchg
mov
int
adc
xchg
pop
ja
mov
jnp
sbb
out
test
cs
ss
outsb
sub
xor
push
out
dec
pop
insl
jp
loope
int3
loopne
mov
jmp
imul
cmova
andb
mov
adc
rolb
iret
notb
int
xor
xchg
test
std
or
ja
shl
mov
cmp
mov
fistl
or
mov
xchg
fstpl
mov
push
adc
fidivrs
pushf
jb
lcall
scas
cmp
xor
and
xchg
call
mov
xor
mov
dec
sub
loop
loope
dec
jle
out
mov
mov
std
std
adc
jmp
pop
push
call
pop
jmp
and
adc
jl
lods
inc
lods
sahf
mov
rorb
jg
mov
sub
add
push
je
pop
repnz
sti
adc
jl
fdivrs
sbb
add
les
insl
ja
pushf
push
push
out
fs
outsb
clc
imul
lcall
cmp
aas
test
mov
push
mov
nop
mov
test
and
andl
enter
loop
or
popf
add
dec
in
cld
push
add
ret
or
push
jbe
jne
loope
aaa
xchg
lahf
adc
aad
add
sub
xchg
mov
jnp
enter
add
fwait
pop
data16
aas
popa
clc
jo
or
push
xorb
ds
push
sbb
mov
inc
push
xor
nop
cwtl
inc
push
test
jecxz
fnstsw
rcrl
push
aas
and
test
sub
inc
popa
ret
lahf
add
lcall
lea
and
xchg
jbe
xor
mov
nopl
inc
arpl
out
sbb
in
test
push
test
bsf
iret
inc
xchg
sub
js
dec
mov
pop
add
xchg
loope
pop
loop
adc
sub
cmp
js
push
or
push
mov
pop
fdivl
fstpt
inc
ret
or
xchg
xchg
scas
pop
xchg
scas
jmp
pop
inc
sbb
mov
mov
popf
rorl
out
or
add
ds
cmp
dec
call
stos
mov
popa
dec
mov
adcl
addr16
sbb
inc
add
loope,pt
xchg
push
push
mov
arpl
ljmp
add
sti
pop
mov
inc
and
subb
xchg
shrl
dec
test
cmp
in
inc
inc
mov
pop
xchg
in
cli
dec
out
leave
xlat
jle
enter
std
popa
clc
enter
jl
pop
push
movsl
popa
jnp
les
push
ret
push
jmp
jbe
test
mov
sbb
cli
es
jb
mov
cmp
enter
sbb
pop
cwtl
mov
sbb
mov
pop
roll
test
jecxz
sarb
or
mov
andb
fs
ficoms
xor
xor
mov
ret
clc
jae
int3
push
xlat
insl
xor
add
mov
mov
sub
push
cmp
es
cmp
leave
popa
clc
push
add
mov
mov
mov
mov
xchg
das
inc
int
and
gs
lods
lret
inc
mov
jae
ja
xor
ficompl
dec
out
mov
push
sahf
and
ss
or
fdiv
nop
pop
dec
lods
or
mov
repz
movsl
dec
add
mov
test
lds
lahf
idivb
mov
iret
out
inc
push
and
or
pop
lea
mov
xor
dec
out
out
mov
and
in
cmp
std
insl
push
add
orb
mov
fistl
pop
repnz
out
repnz
fdivs
pop
rol
lea
xchg
cs
xchg
pop
test
frstor
aad
jecxz
test
inc
popa
and
jp
lods
cmp
xor
fpatan
insb
ret
js
mov
les
in
lock
pusha
ret
loopne
xor
fsubrs
stos
mov
aaa
in
cld
mov
dec
xchg
subb
dec
loopne
inc
mov
stc
mov
xchg
je
ret
cs
xor
mov
sbb
out
mov
or
xor
and
and
mov
push
cwtl
fs
int
fwait
xor
cld
add
js
mov
lea
scas
pop
jbe
fsub
es
ds
jb
std
inc
gs
lret
fs
in
inc
sub
flds
lahf
pusha
rcll
addr16
or
or
or
mov
adc
mov
and
js
sarb
fadds
sar
loopne
lds
ret
xchg
push
cmc
pop
xchg
shll
in
arpl
stos
add
cmp
int3
xchg
repnz
stos
mov
daa
mov
test
movsl
xchg
fwait
jno
fiaddl
sub
xchg
jle
mov
in
cmpsb
shll
xor
jne
and
sub
xchg
inc
jo
in
bound
rcl
inc
repnz
jp
into
stos
jae
dec
dec
push
and
add
in
add
cwtl
test
test
pop
out
insb
dec
jl
inc
pop
cmp
xor
mov
test
arpl
sbb
xchg
dec
jecxz
lock
and
adc
lcall
int
arpl
shll
test
addr16
testl
xchg
rcrb
fwait
xor
push
aas
clc
sbbb
adc
cmp
pushf
xor
pop
push
ljmp
adcb
cmp
dec
fsubl
xor
aaa
add
loope
repnz
mov
clc
cmpsb
cmp
mov
push
push
sbb
cli
pop
push
inc
dec
pop
xorl
jecxz
pop
ja
xlat
cmc
mov
hlt
mov
arpl
fsubr
lods
cmc
pusha
sbb
jg
inc
cmc
mov
or
rcll
lea
insb
fisubl
lcall
or
xlat
pop
or
in
push
pop
jle
xchg
aas
xchg
ret
xchg
ret
inc
stos
insb
call
or
push
pop
inc
xor
xor
cmpsb
push
sub
mov
pop
les
outsl
inc
gs
sahf
outsb
ja
sbb
roll
cld
arpl
in
push
push
popf
cmpsb
inc
mulb
jl
pop
mov
inc
ja
jmp
inc
ss
leave
push
inc
and
repz
mov
rcrb
out
sub
icebp
hlt
mov
lret
sbb
pop
testl
mov
add
insl
mov
sti
sbb
repnz
add
inc
mov
or
fs
insb
mov
and
adc
in
nop
mov
dec
subl
cli
mov
movsl
push
movsl
aad
and
sub
cmpsb
mov
inc
inc
mov
fnsave
add
mov
push
pop
js
gs
xchg
imul
loopne
jge
adc
pop
bound
push
adc
xchg
cmpsl
jns
pop
lret
out
popa
lods
mov
lcall
loopne
push
out
cmp
in
cltd
bound
xchg
ficompl
lods
sti
roll
in
loopne
xor
dec
in
fs
in
sbb
arpl
and
fnstenv
add
fistpl
inc
notl
in
add
out
lds
iret
aaa
int
popa
pop
dec
arpl
xor
dec
push
ds
mov
daa
push
not
adc
fimuls
sbb
pushl
into
lock
movsl
jne
mov
clc
adc
enter
or
insb
jg
mov
xor
xor
stc
mov
pop
sahf
outsl
test
scas
mov
pop
inc
into
aam
repz
dec
dec
pop
jle
sub
mov
roll
pop
leave
enter
mov
cmp
int
outsl
clc
bound
jmp
adc
mov
je
adc
mov
sub
adc
inc
loop
in
jmp
jno
mov
ds
xor
xor
mov
push
insb
inc
mov
xor
add
out
fildll
mov
push
mov
pop
popa
cmp
jns
sub
cmc
mov
pop
add
std
lods
lods
in
mov
lret
dec
movsb
lea
inc
fsubr
hlt
mov
addr16
test
xchg
roll
ja
repnz
xchg
add
shll
js
adc
jns
jb
mov
aam
out
pop
push
jno
inc
jo
pusha
xchg
push
or
jmp
std
adc
out
inc
xor
mov
fidivl
arpl
push
mov
jae
je
aam
and
je
push
jmp
pop
inc
mov
sub
decb
and
pop
sbb
push
sub
in
and
nop
jne
es
push
mov
jmp
adc
shlb
jne
push
cmc
jb
sub
mov
mov
push
jle
daa
ret
cmp
sahf
mov
lcall
dec
and
cmp
mov
lods
mov
pushf
jns
sbb
push
mov
je
sbb
inc
stc
dec
xchg
sbb
mov
mov
mov
test
call
or
cmp
movsl
imul
daa
mov
and
push
imul
inc
inc
sti
pop
sahf
lock
xor
js
or
leave
or
mov
pminsw
sub
inc
popf
mov
inc
aam
and
ljmp
jle
pop
jecxz
and
inc
fisttpl
ret
stc
sbb
rorb
bnd
scas
push
fstl
aas
in
pop
loop
pusha
or
jmp
lret
pop
adc
fsubrs
dec
inc
aam
sub
outsl
mov
inc
mov
mov
adc
jae
cltd
sbb
dec
and
insl
std
movsb
add
loopne
lods
fisttpl
pop
cmpl
daa
out
adc
jmp
add
in
rcll
add
mov
pop
addr16
dec
fcoml
stos
lcall
add
in
rcr
mov
fs
fwait
push
stc
int3
xor
inc
je
ja
dec
addb
push
in
push
bound
xchg
inc
sub
jne
test
inc
dec
push
movsb
dec
push
ret
movsb
addr16
insb
cmp
jle
add
cmp
push
rcrl
mov
add
pop
cmp
mov
orb
cltd
dec
lea
xchg
in
inc
jp
ds
cmp
or
cmc
sbb
dec
xchg
rol
cltd
shll
xor
aaa
arpl
fldl
pop
jecxz
push
cmpsb
std
add
sub
hlt
aam
test
mov
xor
jns
lcall
pop
cld
push
andl
jg
xlat
push
int
or
mov
xlat
mov
jecxz
sbb
fsubs
mov
jmp
lea
sbb
cwtl
or
shrl
push
test
in
dec
out
rcrb
rorb
sub
movsb
and
mov
sahf
add
ljmp
outsl
hlt
jo
mov
daa
push
mov
in
mov
mov
imul
jl
adc
mov
xchg
jge
and
sti
sub
rcrl
mov
ds
jo
fucomip
out
pop
outsb
mov
arpl
jne
lds
add
repz
fdivrs
outsw
mov
xchg
and
je
or
xchg
lea
dec
mov
les
pushl
xchg
add
int3
mov
rcrb
sahf
inc
fcoml
lcall
dec
es
fldenv
out
xchg
mov
filds
fs
nop
fsub
test
ja
ja
mov
and
push
in
sbb
xor
out
outsl
and
mov
loopne
faddl
mov
cmpsb
cld
adc
xchg
pop
and
cmpsb
mov
lods
sub
push
sti
inc
push
insb
nop
add
jbe
fnstenv
stos
into
mov
xor
jle
adc
lcall
in
ret
jl
jb
mov
mov
or
jb
movsl
push
popf
push
leave
cmp
call
jg
loope
out
inc
or
mov
rorl
sbb
je
pushf
test
repz
rclb
fstps
or
fsubr
sub
out
in
ret
mov
or
xor
add
ret
fdivs
sbb
dec
sub
rcrl
jge
sub
add
ret
sbb
shlb
out
popa
cmp
pop
aam
sub
push
loopne
cmp
inc
xchg
pop
inc
lea
test
stc
enter
xchg
daa
bound
dec
adc
cmp
jmp
mov
cltd
jecxz
push
dec
test
dec
cwtl
sub
out
pusha
push
push
lods
mov
pop
adcl
arpl
dec
mov
sbb
and
push
fwait
pushf
lock
jp
sub
mov
rorb
faddl
scas
lods
jg
pop
int
push
ljmp
add
inc
pop
imul
int
dec
inc
rol
lock
mov
push
mov
push
aam
scas
jle
ljmp
in
es
scas
lds
xor
fimuls
out
in
jnp
adc
mov
jg
popf
pusha
aad
popf
stc
and
lahf
out
fidivs
lock
aam
adc
inc
test
test
mov
imul
stos
mov
fisubrl
add
notl
add
inc
dec
pop
jb
xchg
cwtl
lahf
stos
iret
ret
fcoml
call
fbld
sahf
in
add
push
std
xor
xor
push
push
sbb
faddl
addr16
mov
jle
or
ss
loop
xor
popa
js
stc
mov
jno
xchg
xchg
sbb
pop
lods
cmp
sbb
inc
movl
xchg
xor
fnstsw
jmp
push
or
mov
arpl
cli
xchg
inc
cmp
loopne
insb
cvtpi2ps
movsb
add
dec
outsb
jle
orl
cmc
mov
cmp
inc
idivl
insl
mov
jle
jae
and
insb
int3
leave
fcmovne
cltd
dec
dec
sti
sbb
mov
scas
lock
push
sbb
dec
dec
xor
jne
cmp
mov
xor
mov
dec
push
push
loopne
test
enter
popa
inc
leave
pop
loopne
and
out
xchg
mov
fnstsw
and
sbb
insl
mov
mov
mov
sbb
and
mov
sub
jbe
push
cltd
les
clc
incl
xor
dec
add
fmuls
add
lds
divb
xor
jmp
jae
pop
xchg
sub
imul
ret
inc
xchg
sub
or
int3
pusha
mov
cmp
lret
pop
in
cmp
enter
ss
cmpsl
sahf
scas
cltd
xchg
mov
divb
inc
arpl
call
push
mov
xchg
in
scas
mov
test
sbb
mov
or
stos
fcomi
fdivrs
scas
icebp
adc
lods
cmpsb
rol
or
icebp
ret
insb
mov
push
inc
and
pop
cli
test
call
fimull
ss
popa
cld
adc
lret
out
mov
sub
sub
jnp
and
fisttpl
icebp
sbb
inc
fisubs
pop
cmp
add
adc
mov
out
lcall
sbb
or
jb
cmp
out
dec
fnstsw
testl
sub
andb
test
dec
addr16
leave
adc
sbb
hlt
mov
call
mov
arpl
mov
mov
jp
xchg
mov
jg
and
xor
das
addr16
xor
int
add
xorl
popf
scas
inc
iret
ja
test
aas
or
jl
icebp
jo
pop
lods
and
cmpsl
ret
cli
inc
mov
pop
ljmp
enter
ret
pop
je
dec
xor
lea
imul
faddl
cmpsl
arpl
sbb
push
stos
jne
nop
adc
inc
shlb
cmp
mov
dec
stos
pop
aad
mov
or
and
inc
lcall
adc
arpl
cwtl
pop
lcall
xor
pushf
ds
into
jae
inc
xchg
or
ficoml
ja
and
lods
inc
inc
ja
ds
lock
xchg
gs
inc
xchg
sub
mov
pop
lcall
dec
mov
lret
or
adc
cs
lret
je
xlat
and
dec
ficoms
inc
push
xchg
mov
jmp
push
xor
push
push
mov
sahf
jnp
pop
ja,pt
insb
ljmp
adc
cmp
dec
push
jmp
push
dec
mov
enter
push
int3
mov
lret
fisubrl
aad
pushl
push
loopne
nop
jp
or
adc
scas
inc
es
adc
push
mov
jne
add
push
xchg
dec
ret
jl
call
or
std
insl
inc
pushf
push
stos
inc
loopne
iret
and
add
jp
add
fdivs
xor
shll
stos
mov
push
inc
and
xchg
jns
lods
cmp
in
mov
inc
movsl
les
xor
cmp
leave
pusha
mov
jmp
mov
xchg
adc
andb
push
pop
dec
sbb
rclb
xor
add
jb
sub
sti
lods
stc
or
stos
push
adc
and
jmp
inc
pop
arpl
dec
jae
into
dec
push
adcl
and
inc
inc
mov
jmp
sbb
pop
add
ja
add
bound
sbb
addr16
adc
cmp
mov
enter
jmp
push
cmp
or
mov
lcall
sahf
and
stos
xor
ljmp
dec
enter
push
imul
add
mov
push
or
inc
sahf
push
in
lahf
xchg
out
mov
and
addr16
pushf
dec
es
xchg
loop
pop
movsb
xchg
cmpl
lods
lret
mov
repz
push
add
rcrl
sub
add
add
cmp
dec
test
pop
adc
ja
mull
mov
test
in
cmpl
and
push
sahf
and
stos
fdivp
mov
outsb
loope
add
jb
xchg
push
mov
mov
jl
and
fsubrp
hlt
repz
ds
addr16
adc
out
ja
mov
cld
push
inc
xchg
lock
xchg
out
dec
fbld
push
cmc
jg
pop
faddl
add
pop
adc
push
push
rcrl
test
sub
mov
adc
adc
aas
lret
loopne
hlt
mov
inc
insb
ret
int
and
sti
test
inc
push
dec
lds
imulb
out
lret
dec
loop
sbb
mov
mov
ja
imul
in
or
hlt
shr
adc
cmp
push
mov
add
mov
xor
cmp
adc
cli
sub
es
in
cmpsb
lock
or
sti
pop
out
mov
shl
jge
rolb
mov
hlt
int3
loope
jns
jbe
and
out
and
pop
cmp
aad
loopne
ret
xor
jbe
jnp
cmp
adc
inc
or
out
xchg
shl
mov
xchg
jno
sbb
and
scas
jno
movsl
lea
and
and
cmp
jne
in
xchg
sti
add
fidivrs
mov
push
loopne
outsl
decb
xchg
cmpsl
add
xchg
xchg
push
push
xlat
mov
and
mov
daa
inc
ret
push
repz
mov
loop
ljmp
push
or
sbb
xor
inc
fs
jns
xchg
jl
dec
pop
fimuls
push
pop
cli
inc
scas
imul
mov
sbb
lahf
test
pop
xchg
and
es
scas
dec
hlt
jbe
orl
xchg
ss
jno
loop
fnsave
or
cltd
ret
jge
xor
das
xchg
sbb
je
mov
mov
pushf
xchg
mov
and
jp
pop
and
mov
push
lds
sub
mov
addr16
and
dec
cmpsl
in
shrb
mov
push
dec
sbb
out
fnstenv
adc
jnp
xor
inc
dec
jb
outsb
mov
loope
push
mov
dec
paddusb
cltd
ror
into
fdiv
mov
ret
mov
std
xor
outsl
daa
bnd
ja
fdiv
and
mov
lret
std
xchg
fcompp
jo
inc
mov
fdivrp
adc
add
jne
adc
adc
or
repz
cmp
subl
ds
into
insb
mov
pop
xor
std
mov
add
scas
mov
divl
inc
data16
loop
nop
sahf
scas
push
adc
mov
push
jno
mov
push
int3
pop
rcll
aas
int3
and
pusha
cld
arpl
sahf
out
jno
jmp
shr
sbb
jno
rcrl
jmp
sbb
add
lret
dec
pop
jns
addb
gs
ja
pop
orb
jns
mov
sbb
mov
jge
sub
inc
bnd
aad
es
fsubl
in
push
xor
push
popa
jmp
mov
inc
iret
int3
cmp
int3
fisubs
mov
repz
popf
mov
mov
jge
lret
dec
fnstenv
mov
in
in
mov
jmp
addl
insb
sbb
mov
pop
loope
in
sub
mov
push
mov
or
cmpsl
inc
xor
sub
lahf
push
push
mov
out
cld
xor
addr16
cmc
fs
xchg
out
cltd
leave
push
cmpsb
jmp
mov
sub
test
xor
mov
es
mov
int
add
jo
sbbl
push
bound
xor
pop
xor
jb
movsl
inc
pop
rcr
inc
add
addr16
fs
pop
dec
arpl
iret
stos
inc
add
pop
jecxz
lcall
mov
js
into
xchg
cmp
xchg
jecxz
mov
dec
std
add
sub
xchg
xor
inc
insb
test
popa
mov
dec
in
cltd
ficomps
adc
adc
les
sub
or
repz
pusha
inc
jl
cld
rorb
mov
sub
pop
loop
push
adc
ss
and
pusha
aad
dec
xchg
call
test
jae
icebp
adc
test
mov
test
or
in
mov
xor
pop
sub
dec
mov
fcom
mov
sub
pop
aas
lret
stos
sub
adc
ljmp
call
iret
ror
inc
and
xchg
pop
dec
ja
popa
imul
jno
xchg
dec
movsb
jnp
xchg
sub
or
add
incl
imul
sub
jp
mov
pop
add
lea
and
ja
inc
xlat
adcb
dec
sbb
jmp
sub
inc
shlb
jno
or
pop
inc
mov
repz
into
mov
mov
in
add
je
mov
push
inc
jl
jp
out
popa
inc
fstpt
sub
push
or
sub
outsb
xor
sbb
xlat
and
and
xchg
jecxz
xchg
push
add
dec
jae
sbb
mov
sbb
sub
xchg
jmp
sbb
jge
pushf
adc
inc
lret
mov
ljmp
loope
add
jnp
mov
pop
stc
nop
dec
jmp
push
pop
cmp
push
and
in
add
cmpsl
idivl
mov
push
cmp
pop
cli
xchg
lea
jecxz
push
fwait
test
andnps
add
push
movsl
add
sub
push
cli
imul
repnz
cmc
and
push
test
inc
shll
ret
hlt
sub
xchg
insb
rol
imul
jg
in
leave
and
xchg
cmp
add
bndstx
cld
or
je
or
movsl
decl
cmpsl
adc
js
in
fwait
mov
adc
lds
rorl
lea
push
sub
mov
mov
push
and
xchg
iret
enterw
sahf
mov
std
jle
sbb
mov
add
jnp
mov
or
cs
das
or
cs
mov
decl
push
shrb
push
lods
xchg
xrelease
into
xor
pop
jno
push
insb
std
dec
flds
xor
shl
mov
jecxz
lret
cmp
call
dec
dec
or
dec
cmp
adc
lods
call
out
jecxz
push
cltd
repz
cmp
jecxz
unpckhps
inc
push
add
les
dec
push
pop
sub
icebp
or
cmc
mov
inc
dec
push
imul
xchg
sub
movsl
add
popf
jp
das
mov
sti
and
loope
mov
add
and
test
loopne
xor
dec
aas
andl
loope
sarb
lret
lock
sti
in
or
cmp
es
repz
outsb
xchg
cmp
iret
xchg
sbb
xor
inc
push
aam
popf
add
push
out
out
in
aam
lds
add
call
cmp
mov
xchg
sarb
insb
dec
fwait
push
arpl
pop
adc
mov
push
add
mov
cmp
add
inc
test
ror
jmp
pop
icebp
jae
int3
jg
and
push
and
fidivl
pop
sub
adc
rclb
cwtl
jb
inc
in
xor
iret
cmc
ljmp
popa
xor
push
push
data16
stos
adc
ljmp
cmc
test
dec
dec
cmp
dec
cmp
pop
dec
mov
test
fwait
into
in
sub
push
sti
or
pop
cmpsb
shrb
mov
add
pop
cli
icebp
paddusw
push
adc
mov
sbb
clc
lcall
outsl
subb
lahf
or
inc
push
sub
fsubrs
mov
cmp
dec
negb
icebp
mov
jns
bound
pop
xor
pop
shlb
add
xor
sub
mov
je
cmp
inc
mov
cmp
mov
shrl
daa
repz
movsb
fiaddl
pusha
cwtl
loop
leave
inc
rcl
push
cmc
jl
mov
xorb
add
test
in
or
sahf
loopne
cld
mov
call
test
in
jbe
incl
leave
js
sti
gs
xchg
nop
mov
iret
or
out
jae
jbe
xorb
push
notl
adc
pushf
mov
fsubl
imul
push
jne
aam
cmpsb
push
stc
push
jae
pop
cwtl
dec
pop
fsubrs
xchg
xchg
jnp
in
cltd
in
push
cld
or
lret
mov
or
lahf
mov
pop
pop
push
or
pop
inc
cmp
mov
scas
andl
push
sbb
imul
jge
lcall
scas
xchg
jge
inc
bound
sub
das
repz
pop
dec
adc
and
add
add
shll
xor
movsl
push
push
aad
dec
jae
sti
pmaxub
xor
mov
push
cmp
dec
out
neg
and
inc
mov
inc
aad
sbb
insb
and
sahf
nop
ljmp
push
jle
mov
xchg
mov
mov
and
stos
mov
pop
inc
fisubl
jb
jmp
arpl
clc
cmpsb
pop
lods
test
adc
inc
jge
adc
push
fnstcw
cld
xchg
push
lea
fildll
ss
insl
scas
pop
addr16
add
dec
fdivs
or
mov
push
adc
sbb
and
jnp
inc
adc
push
insb
scas
ds
stc
pop
cmp
pop
pop
outsl
fbstp
and
inc
mov
iret
data16
and
sub
mov
cwtl
loop
pop
inc
jbe
push
loope
push
daa
mov
cmp
test
mov
push
aaa
mov
and
and
adc
pushw
jge
add
ja
mov
outsl
xlat
mov
sub
push
pop
jmp
fimuls
add
shrb
push
call
inc
push
jne
push
arpl
push
push
out
cs
mov
leave
out
sub
xor
int3
push
mov
inc
in
dec
cmpsb
std
sti
or
jns
inc
jnp
loope
jne
push
insb
repnz
and
test
cmpsb
insb
test
pop
fstps
fsubs
enter
pop
cmpsb
aam
sub
mov
test
mov
or
pushf
stos
jno
shr
gs
push
sbb
in
in
orl
jp
mov
stc
and
pop
dec
mov
jp
pushf
cmp
xchg
pop
mov
dec
xchg
mov
das
mov
lret
and
mov
clc
cmp
scas
std
dec
pop
arpl
stos
sub
insb
aas
pop
and
xor
pop
cmpsb
mov
xchg
cmp
gs
mov
or
mov
inc
fidivrs
shrl
ret
imul
add
pop
adc
sub
enter
push
ljmp
lret
mov
iret
ret
insb
pminub
dec
xor
fistps
push
addr16
movsb
jg
lea
mov
jnp
cmp
andb
jbe
test
sbb
adcl
rclb
out
test
adc
jae
lret
xchg
inc
jl
jae
fcomi
mov
pop
in
loop
fwait
outsl
or
dec
lahf
dec
jge
fmull
neg
jae
cmp
js
cli
xchg
push
lcall
hlt
adcl
lcall
in
inc
xor
push
inc
xlat
sub
mov
cld
cwtl
lods
es
mov
or
out
mov
gs
jle
subb
pop
lods
xchg
xchg
xchg
clc
inc
repz
out
test
jne
inc
pop
push
cmp
adc
cmp
mov
push
pop
hlt
and
sub
dec
mov
ret
adcb
dec
jecxz
outsb
inc
bound
lds
push
sub
leave
loopne
outsl
stc
and
xchg
aas
je
std
movb
cmp
fdivl
cmpsb
push
and
fsubrs
out
test
in
mov
jns
in
jbe
mov
mov
subb
and
cmp
js
inc
fcomi
notl
or
cmpsl
bound
out
icebp
insb
in
jb
std
cmp
push
data16
cmp
dec
cmp
dec
subb
push
leave
movsb
adc
incl
sbb
ss
fildl
push
aam
xlat
aam
or
add
ret
loopne
mov
push
cmpsl
inc
mov
add
aaa
popa
mov
popa
adcl
push
shufps
pushf
enter
insl
lret
mov
orl
xchg
mov
pop
fwait
pop
mov
in
pusha
or
sbb
dec
rorb
popa
out
xchg
add
pop
lds
rorb
mov
push
mov
rolb
addl
mov
jns
cld
int
jmp
lret
aam
jg
call
hlt
sbb
sbb
mov
js
orps
aad
xor
xchg
pop
sbb
jne
cld
and
scas
dec
cld
addl
or
fwait
ret
push
lods
mov
pop
imul
cltd
ds
lret
pop
scas
enter
bound
es
pop
mov
iret
adc
mov
mov
cmc
sub
sbb
push
push
xchg
fwait
add
lds
dec
lret
mov
jmp
pop
sbb
dec
in
xchg
sub
lock
subl
fisttpll
sub
jl
fnstsw
fwait
add
sysenter
nop
jl
lods
lods
jb
ds
mov
test
mov
andl
cmp
into
or
sti
cmp
insl
sub
leave
add
pusha
push
sub
cwtl
xor
stos
push
cmp
adc
jnp
mov
mov
inc
test
sbb
add
xchg
jecxz
out
sub
scas
cmp
rolb
jo
inc
mov
pushw
leave
push
xchg
add
mull
testb
push
inc
aas
int
push
ds
pop
add
fildl
fsubl
orb
xor
xor
outsl
ret
add
pop
fiadds
test
or
je
mov
hlt
jne
outsl
mov
push
aaa
stos
jae
push
cmp
cmp
pop
in
push
stos
pop
nop
outsb
push
stc
dec
adc
repnz
dec
scas
out
popa
or
and
and
jae
rol
cmpl
sub
push
push
inc
loopne
lret
int
inc
pop
shlb
mov
movsb
loope
adc
fiaddl
push
add
outsb
cmpsb
and
sti
push
sti
adc
fcoms
push
xchg
pushf
imul
cmp
movsb
cli
add
pop
movb
or
into
cmp
cwtl
adc
movb
out
mov
mov
sbb
cli
fstpt
add
in
cwtl
hlt
dec
adc
cwtl
stos
mov
or
pop
push
js
mov
xchg
and
sub
inc
dec
cmp
lock
sti
and
pop
out
mov
or
or
sub
push
jo
mov
sbb
dec
pushf
pop
hlt
jg
jb
cmp
push
ret
out
hlt
addr16
test
lods
or
adc
stc
insb
pop
push
push
pop
inc
mov
hlt
lcall
scas
arpl
pop
jecxz
cmp
test
adc
dec
andb
xchg
pop
sbbb
ljmp
sub
subb
dec
mov
std
cli
jecxz
add
add
jae
dec
adc
das
popa
add
je
cmp
outsl
sti
xor
out
test
nop
and
loop,pt
cld
lcall
test
mov
jb
aas
dec
push
cmp
inc
pop
movsb
cmp
stc
cld
or
jge
rolb
pop
lcall
stc
or
call
into
int3
mov
mov
iret
add
add
and
out
je
rolb
mov
pop
adc
mov
xor
iret
mov
mov
sbb
leave
int
cmp
cmp
push
mov
jb
leave
jb
adc
iret
ret
shrb
mov
jl
cs
int
push
lahf
add
mov
adc
xor
call
mov
mov
lcall
push
imul
inc
sbb
xor
idivb
xor
cltd
nop
in
out
ret
jns
sub
and
push
lds
or
daa
jne
pop
pop
xchg
pop
aas
add
sub
inc
outsl
insl
scas
sbb
sbb
inc
jno
xchg
out
jmp
and
sub
ret
ret
add
mov
je
in
pushf
mov
into
mov
xor
mov
hlt
fs
imul
push
pushf
aad
fdivp
xor
sahf
pushl
mov
inc
mov
testl
xor
sahf
arpl
scas
dec
add
xchg
fs
jae
out
stc
pop
inc
test
inc
xor
stc
scas
sub
out
pop
dec
and
popf
aas
out
mov
jle
inc
xchg
mov
push
adc
inc
dec
lret
pop
aas
and
inc
push
loope
aam
xchg
add
inc
test
mov
jns
sbbb
adc
les
xor
jb
std
test
sti
lods
push
inc
jmp
scas
data16
pop
popa
jle
lahf
cld
add
call
dec
pushf
popf
lods
mov
cmpsb
outsl
lods
push
lods
pop
out
xchg
fldl2t
mov
mov
cmp
int
mov
lahf
outsb
jl
mov
mov
cmpxchg
int
cmp
fwait
cmpsl
add
repz
jno
ret
lcall
loope
cmc
rcll
scas
imul
pushf
daa
pop
ficomps
fs
imul
xchg
pushf
add
lahf
bound
inc
xor
xchg
int
pop
repz
lods
cmpsl
and
dec
mov
inc
gs
repnz
jge
cmp
hlt
addr16
jo
les
pop
sahf
mov
adc
jl
add
mov
lods
insl
jns
push
mov
stos
sub
and
push
cmpsl
ret
xor
push
cwtl
not
add
out
mov
gs
xchg
popa
popf
push
push
aas
shrb
out
negl
or
xchg
sbb
xchg
or
jb
mov
sbbb
jb
add
mov
lahf
inc
inc
pop
sahf
sub
dec
in
ret
xor
imul
mov
shrl
das
sbb
aad
lock
into
push
in
mov
adc
fcmove
lret
xor
mov
sub
dec
fs
dec
jns
jbe
add
imul
fldcw
pop
xor
add
fld
pop
or
jp
divl
or
pop
jmp
lods
fmull
and
std
fdivrs
pop
xor
cmp
lcall
stc
je
ja
mov
sbb
xchg
insb
sbb
xchg
xchg
sub
sbb
outsl
movsb
sub
daa
mov
vmovlps
adc
ss
icebp
inc
mov
cmp
rcr
jno
push
mov
xchg
mov
jns
mov
fisubs
dec
mov
movsb
fstpt
std
pop
pop
lds
lock
cmc
xor
jp
jbe
rolb
insb
mov
rol
loope
aam
insb
add
stos
mov
jns
adc
mov
xchg
mov
dec
rclb
jmp
adc
hlt
mov
xchg
js
cmp
jge
repz
jp
cwtl
test
stos
sar
add
xor
pop
ljmp
push
xor
sub
lods
stos
jl
test
sub
out
jp
lcall
inc
cld
lret
xchg
mov
push
xlat
repz
aas
imul
mov
gs
adc
es
xchg
cmpsl
sub
mov
scas
inc
mov
cltd
dec
lcall
aas
je
pop
add
xor
popf
xor
inc
cltd
add
sub
xchg
or
sti
adc
ret
lcall
push
add
fcoml
cltd
cmp
xchg
inc
out
js
sbb
add
mov
cmp
fmul
cmp
mov
and
jb
jbe
clc
cmp
xor
pop
push
mov
or
clc
orl
aas
dec
fwait
testb
scas
mov
mov
add
fcoml
sbb
es
jg
cmp
inc
xchg
pop
test
movsl
and
imul
inc
test
mov
mov
dec
sub
mov
sub
enter
call
adc
pop
in
js
aad
mov
mov
pop
or
mov
xor
adc
xchg
push
scas
jl
pop
scas
rcrb
inc
xchg
mov
jmp
filds
and
cmp
addl
or
in
sub
loop
clc
adc
sub
cld
sbb
push
ljmp
movl
mov
sbb
loop
fsubs
and
int
sarb
bound
test
jmp
sbb
int3
ret
mov
mov
and
jecxz
loop
mov
pushf
or
int3
arpl
outsb
cmc
jp
test
lcall
jecxz
out
lcall
jne
loopne
xchg
pop
push
add
cmp
push
sahf
and
push
call
jge
push
push
aas
jp
lock
pushf
xorl
fcmovbe
data16
cld
push
mov
dec
inc
lcall
inc
fstp
lods
scas
jg
jb
mov
jno
pop
pusha
scas
add
pop
xchg
jle
sarb
imul
push
cwtl
cmp
into
in
es
fnsave
mov
pop
push
mov
xchg
mov
shlb
orb
add
inc
push
testb
push
jmp
fsubrs
inc
mov
jl
movsl
pop
inc
jne
mov
lods
xchg
sub
out
test
mov
and
rcr
out
mov
xchg
and
aaa
hlt
push
jmp
out
jmp
fisttpl
dec
lahf
shlb
in
push
lods
jb
mov
out
lret
loope
mov
outsl
push
orb
mov
mov
pop
pop
adc
adc
nop
imul
sub
cmp
cmp
push
ljmp
movsb
dec
pop
psubusb
adcb
xor
loopne
mov
das
mov
mov
daa
add
in
notb
leave
jmp
and
push
push
cmp
sub
mulb
in
mov
mov
add
xor
leave
gs
lea
ja
push
inc
hlt
jge
fsubrs
leave
xlat
push
mov
add
cmp
in
test
data16
inc
lds
add
add
pop
ret
pop
mov
fsubp
nop
adc
jbe
repz
and
out
sub
imul
out
inc
negl
in
pusha
cld
icebp
inc
loope
mov
icebp
push
es
xor
test
jno
sub
add
sub
call
push
sbb
mulb
call
jae
fdivp
sbb
iret
cmc
pop
fildl
arpl
ljmp
dec
sbb
and
ja
mov
push
bndstx
sub
fcomip
mov
inc
sub
mov
inc
out
loope
out
or
jecxz
mov
sub
sub
pop
mov
add
shrl
jmp
inc
sbb
push
call
ret
add
data16
sahf
das
inc
sub
dec
imul
scas
sarl
out
movsb
xchg
fbld
sbb
js
fsubp
jns
test
mov
push
fldl
cmpsl
sbb
je
sbb
xlat
and
cld
lods
insl
stos
add
push
popf
shl
into
xchg
pop
dec
lods
sub
aad
imul
add
add
jp
aad
or
and
cmpsb
jecxz
push
mov
clc
ljmp
inc
cmp
ret
fstps
mov
ret
xor
jnp
ret
mov
and
lret
insl
not
sub
push
jb
arpl
jno
clc
test
xchg
and
jb,pn
xor
in
inc
fdivs
ret
or
fidivrs
sti
push
add
pusha
aad
or
test
int
add
adc
dec
int3
int
into
cmp
dec
cltd
lock
add
js
or
aas
jge
cli
xchg
cmp
jo
xor
dec
mov
adc
cs
sub
aam
inc
xchg
movsl
dec
loopne
dec
js
lcall
add
fimull
movsb
adc
fcoms
pop
mov
mov
lods
xlat
je
pop
je
ret
nop
ss
jbe
into
mov
push
mov
std
mov
xchg
xor
and
paddw
mov
xlat
dec
fdivs
cmp
outsl
sub
fsubrs
jo
inc
jmp
fincstp
mov
xchg
test
inc
mov
jne
into
imul
sbb
cmpsl
adc
pop
ljmp
mov
and
out
int3
cmp
std
push
and
dec
out
iret
fucomip
xchg
pusha
xchg
inc
mov
movsb
cmpsl
lret
sub
rcr
into
ja
adc
mov
lds
pop
lds
mov
ja
xchg
cs
pop
jo
out
ficompl
xchg
andl
enter
fnstenv
mov
shr
popf
mov
es
mov
push
cwtl
push
and
push
adc
cmp
ret
mov
rcrb
inc
lret
pusha
pop
test
cmovns
sti
dec
pop
sub
mov
mov
push
ret
pop
xchg
movsl
in
pusha
imul
pop
testb
jge
sub
jae
or
xor
add
insb
xor
xor
es
push
in
dec
lret
and
cmc
shlb
movsb
pop
adc
pop
cwtl
ss
scas
inc
ss
int3
arpl
xchg
jne
sub
pop
mov
or
mov
lods
lret
xor
shlb
rclb
mov
jns
insl
push
outsb
lahf
clc
repz
xor
pop
dec
dec
pop
dec
jg
call
push
dec
outsl
loop
movsb
sub
mov
sbb
das
dec
mov
cmpsl
mov
pop
cmp
sub
mov
add
ficoml
lcall
add
outsb
add
mov
int3
arpl
outsb
loope
cmc
mov
mov
stc
pop
je
sbb
call
mov
ret
sbb
mov
cmp
adc
mov
out
cmp
jp
add
cmp
inc
pop
hlt
ja
inc
pop
es
in
xor
xchg
sub
mov
add
inc
leave
cmpsb
lods
jmp
ljmp
lods
mov
add
ret
lret
mov
bswap
lret
and
insl
xor
andl
outsb
xchg
sub
ds
jno
jae
fsubrl
fistps
cmc
pop
jno
inc
xor
dec
lds
in
cld
mov
das
sbb
ja
or
jb
bnd
and
cmc
mov
andl
repz
jmp
cmp
in
cmp
and
bound
enter
in
push
fisubrs
inc
sub
jle
fimuls
cmc
jae
loopne
test
cs
push
mov
andl
cmc
cli
jae
mov
inc
leave
ss
jae
out
jae
sub
mov
scas
mov
mov
jne
push
sahf
adc
shlb
fisubs
push
aas
push
jns
les
sbb
jbe
dec
and
dec
ljmp
sbb
inc
std
imul
leave
daa
std
test
or
pop
sbb
out
insl
xchg
scas
outsb
popf
dec
cmp
insb
push
rcll
sub
xchg
xor
or
dec
fsubs
mov
inc
lods
inc
mull
ret
test
adc
mov
cwtl
pop
or
mov
adc
add
jmp
mov
fwait
divl
fisubl
outsb
jo
cmp
adc
sbb
lea
shlb
push
sti
adc
mov
rcrb
jg
adc
jl
dec
sub
cwtl
add
push
dec
lods
divl
pop
or
ficoms
aaa
sub
icebp
pop
divl
rclb
ja
inc
sbb
clc
inc
or
movsl
cltd
push
sbb
pop
std
out
aas
and
xchg
sbb
push
call
add
stos
sub
mov
sbb
dec
cmc
mov
ds
mov
mov
add
dec
add
dec
push
sbb
out
add
pop
pop
mov
cmp
in
mov
pop
lcall
clc
mov
mov
dec
adc
and
cmpsl
xchg
mov
or
loopne
daa
data16
xchg
add
jbe
nop
and
ret
jp
nop
sub
frstor
or
or
cmpsl
push
inc
mov
lret
es
push
ret
mov
push
hlt
ljmp
dec
pop
leave
push
mov
ja
xchg
cs
sbb
ja,pn
and
ds
jnp
icebp
movsl
cmp
daa
sti
fwait
shll
ret
cld
insb
add
test
sub
inc
in
cmp
mov
test
mov
inc
push
push
fs
jbe
dec
xor
loope
pop
and
loopne
addr16
stos
incb
hlt
ljmp
mov
xor
adc
gs
xlat
in
clc
daa
dec
lahf
xchg
and
push
sub
sbb
idivb
add
mov
cwtl
and
jns
mov
push
and
xchg
shl
repnz
xor
daa
dec
out
cltd
push
fstp
scas
addl
out
int
cmp
adc
ret
jns
or
ss
inc
imul
scas
xor
jns
icebp
loope
test
sub
jmp
or
cmp
std
mov
cmc
andb
pop
repz
adc
in
mov
sbb
dec
cmp
jne
push
test
je
and
stos
call
imul
cmp
push
addr16
mov
push
pop
xchg
cmpsb
dec
insb
push
je
xor
lahf
add
sbb
sub
xchg
inc
sbb
pop
mov
adc
pop
shll
lods
repz
out
mov
popa
cmpsb
mov
add
mov
push
pop
rcrl
fwait
cmp
daa
lret
xchg
outsb
dec
stos
aaa
mov
xor
xchg
adc
fidivrl
xor
dec
jl
inc
insb
cmp
loope
stos
daa
jmp
leave
jg
adc
imul
gs
or
xchg
inc
push
testb
adc
xor
adc
xchg
js
mov
push
orb
or
fdivrl
clc
or
lcall
loop
push
in
xorb
add
add
xchg
fstpl
nop
ja
mov
in
into
mov
or
mov
pop
mov
push
enter
scas
popa
repz
adc
pop
ja
mov
jae
sbb
inc
jg,pn
pop
leave
out
mov
push
sub
setp
xlat
outsl
push
mov
nop
jmp
mov
adc
sub
mov
fidivrs
scas
xchg
add
shll
lods
and
add
jmp
mov
mov
dec
cmpsb
in
cmp
or
push
popf
mov
or
bound
fisttpl
loope
pushf
cmp
and
xchg
sub
inc
lds
std
sbb
jne
lret
or
in
les
enter
fbstp
dec
push
sti
data16
lret
addr16
inc
jb
and
leave
test
or
aas
out
fsubrs
arpl
push
scas
mov
lds
andl
add
sahf
add
nop
xchg
rcr
aad
mov
iret
divb
out
testb
psrld
mov
and
adc
push
add
dec
rol
xor
in
sub
iret
repnz
mov
mov
xchg
jmp
inc
cmpsl
std
cmpsb
lea
mov
iret
inc
adc
test
stc
popl
cli
push
cltd
sub
push
push
aam
cltd
pop
xchg
test
icebp
xor
sarb
xchg
add
sbb
pop
sahf
adc
mov
stos
inc
cmp
push
xchg
cmpb
push
out
mov
movb
add
adc
sub
xchg
cli
lock
lods
sbb
repz
pop
mov
jae
jp
scas
pop
and
in
rol
adc
call
xor
and
ljmp
ljmp
repz
repz
dec
repz
cmp
push
cltd
cmpsl
sbbl
xor
xor
arpl
inc
leave
repnz
push
or
imul
xor
push
jle
jnp
in
dec
mov
push
push
movsb
cmp
adc
jae
ret
sbb
jg
sub
fs
in
xchg
test
lea
pop
xlat
lcall
repnz
insb
gs
push
mulb
mov
pop
pop
test
clc
stos
cmp
xchg
mov
inc
in
shrb
pop
icebp
jp
out
mov
adcb
cmp
jo
xchg
movsb
adc
jb
sbb
test
and
call
test
sbb
jp
xchg
jmp
sub
scas
sbb
mov
scas
ja
xor
cmp
push
and
push
jne
xchg
in
mov
mov
movsb
mov
je
je
push
scas
ja
xchg
sub
ror
mov
aas
jmp
inc
hlt
cmc
ds
repnz
mov
movsl
dec
push
add
pushf
and
jne
xor
push
mov
or
sub
daa
or
scas
cmp
push
in
cmp
rclb
adc
push
xor
insl
mov
clc
xor
mov
inc
test
xor
cmc
xchg
inc
es
popa
jo
xchg
sbb
push
sbb
ds
adc
pop
pop
test
cmp
enter
sub
push
insl
loopne
xor
jmp
jnp
jmp
xchg
cmp
loopne
ds
dec
hlt
arpl
lods
mov
mov
aam
divl
fsts
pop
scas
xor
xlat
ss
adc
pop
sti
xor
and
roll
outsl
dec
sub
cli
pushf
movsl
inc
dec
scas
addl
mov
idiv
push
mov
sbbb
and
icebp
and
jnp
or
inc
xchg
or
mov
js
inc
add
and
lahf
bound
into
jno
daa
fs
shl
sqrtps
jo
mov
mov
pusha
ret
dec
mov
inc
aam
push
and
inc
xchg
add
outsb
fwait
and
xchg
js
cmc
inc
arpl
sbb
lahf
pop
mov
pop
xchg
mov
out
stc
mov
mov
lods
pop
or
and
and
test
sbb
lods
repz
push
imul
xchg
cmp
data16
cld
sbb
cmp
lahf
outsb
clc
into
ja
lds
shll
rcrb
and
lret
pop
push
fldt
adc
outsl
jle
xchg
add
out
and
ret
pop
pushf
pop
mov
and
jecxz
or
sub
inc
add
mov
mov
std
sub
ficomps
add
jg
icebp
fistps
sbbb
mov
mov
outsl
sub
int3
fidivrs
jae
mov
stos
mov
xchg
xor
lea
aad
loopne
mov
sub
pushf
pop
push
pop
inc
imul
shld
inc
ud0
mov
sub
mov
test
lahf
sub
and
test
scas
nop
jns
movzbl
dec
mov
mov
inc
shr
test
jne
lods
stos
sti
adc
scas
jno
fwait
mov
mov
les
sub
xchg
sub
js
mov
sbbb
xchg
push
jne
notb
sbb
adc
test
shlb
call
cmpl
inc
xlat
out
les
jb
loope
int
enter
mov
mov
icebp
xchg
xor
in
sub
sbb
push
dec
cmp
and
xchg
cmp
rcll
les
xor
rorb
or
or
nop
out
mov
pushf
xchg
out
js
mov
addr16
jle
sub
je
hlt
cmpsl
xor
maskmovq
testl
jl
push
aam
filds
sbb
cmc
jl
ja
lahf
mov
push
cld
adc
inc
cmp
fldpi
and
mov
cmp
jmp
xor
fmulp
test
sbb
pop
adc
sti
mov
pop
pop
daa
adc
clc
sub
pop
sbb
mov
push
push
icebp
add
jecxz
adc
pop
mov
cmpsb
fiadds
xor
fdivr
nop
or
mov
iret
mov
in
into
ja
add
sbb
adcb
lock
lret
jle
popf
jge
int
rcl
mov
xchg
push
sbb
adc
jae
mov
jecxz
jl
outsb
popf
inc
jmp
lret
into
push
fbstp
stc
inc
push
cmpsl
or
inc
call
sbb
fstpt
and
sbb
or
fstp
jne
scas
mov
fisttps
call
clc
jnp
push
iret
xorl
xor
popa
sbb
das
sti
insl
mov
dec
xchg
data16
cmp
xchg
sub
or
mov
fdivrs
fdivrl
mov
dec
imul
xor
pop
mov
std
mov
add
adc
repz
cmp
mov
dec
cmp
cltd
std
loopne
dec
mov
cmc
nop
or
inc
sub
ds
nop
dec
push
cmpb
aam
inc
arpl
cmc
xor
push
test
mov
xor
mov
adc
movb
dec
in
mov
cmpsl
xor
notb
out
and
xchg
pusha
push
repz
aas
inc
scas
hlt
sub
xchg
xchg
stos
pop
hlt
dec
hlt
mov
jnp
movsb
push
add
mov
or
cmp
pushf
jg
lahf
scas
notb
push
aam
sub
pop
push
outsl
pop
repnz
xor
sbb
clc
sahf
insb
scas
cs
mov
lods
cltd
rcr
push
stos
push
test
lret
add
mov
add
mov
push
xor
fisubrl
fsts
push
xlat
mov
mov
or
push
xchg
or
out
jp
pop
test
mov
mov
dec
das
test
scas
pop
cmpsb
add
xchg
je
sub
pop
mov
jns
int3
repnz
adc
add
lret
xchg
mov
aas
adc
shlb
scas
mov
or
imul
inc
clc
test
out
pop
fldenv
mov
aad
mov
lahf
js
cmp
add
lcall
jns
cmpsl
dec
sahf
clc
adc
xchg
sub
vmovupd
cmpsl
push
outsb
fldenv
insb
xchg
repnz
cli
stos
loope
neg
add
add
scas
sbb
adc
pusha
pushf
lea
ss
sub
shrb
imul
es
mov
pushf
pop
ret
vaddps
dec
outsl
ret
jbe
inc
mov
jae
mov
sbb
add
mov
fcmovbe
loopne
pop
cli
sti
mov
hlt
cmpl
shrb
repnz
push
cs
stos
imul
iret
or
inc
xchg
adcl
sub
cmp
adc
add
cmp
and
mov
imul
shll
jne
fs
add
rcrl
aas
xchg
adc
sub
jne
fsubrl
xchg
mov
scas
add
jg
push
push
xor
cmp
lcall
sbb
sub
adc
imul
cmpsb
mov
cmpsl
push
mov
sbb
cmp
mov
pop
adc
andb
pop
mov
fldcw
pop
iret
xor
push
cmc
jmp
pop
jl
xchg
sub
ficoml
mov
sub
rol
cmp
mov
popf
add
mov
add
fbstp
rcl
leave
aas
pop
mov
push
rcrb
inc
mov
cli
and
movsl
mov
lock
ret
xor
ret
jle
loopne
inc
jae
data16
dec
pop
pop
push
and
mov
dec
pop
ds
cs
dec
inc
inc
adc
cmpsb
cmp
rcl
push
xchg
xlat
push
xchg
xor
cli
iret
lahf
out
and
daa
adc
cmovae
push
lcall
in
push
mov
jb
or
add
sti
push
repz
movsbl
test
mov
popa
or
push
mov
int3
fisubs
jns
adc
in
xchg
sbb
jo
negb
add
cmpsl
push
or
mov
sbbl
decl
fnsave
cmpsb
mov
mov
dec
cmp
sbb
in
jo
xchg
adc
inc
push
adc
notb
add
test
aad
jmp
mov
mov
jno
daa
mov
xor
jl
shrb
stc
xchg
jns
in
pushf
dec
lret
imul
xorb
add
je
push
call
mov
mov
gs
xchg
nop
sbb
mov
jae
es
adc
and
jmp
outsb
sbb
cwtl
mov
cmpsb
repnz
negl
outsl
xor
fdivr
addr16
or
sbb
push
mov
scas
jecxz
fwait
test
mov
jae
dec
add
inc
sub
xchg
inc
inc
inc
mov
dec
mov
flds
sbb
arpl
jns
push
and
loop
xor
add
and
sbbl
adc
ss
repnz
inc
sbb
inc
mov
inc
mov
dec
cmp
mov
cltd
jmp
pop
cmp
xchg
stos
push
ret
pop
mov
jge
stc
jmp
fwait
and
mov
pop
push
lret
pop
or
jnp
xor
cli
and
sbb
popa
pusha
notl
jno
into
cmp
sbb
js
push
sahf
out
lret
rol
mov
sbb
sarb
mov
jg
sub
push
pop
inc
cltd
sahf
ret
sar
lock
jae
insb
dec
stos
test
mov
sbb
in
mov
out
push
sub
push
clc
inc
arpl
mov
addr16
inc
jge
and
movsb
je
sar
arpl
repnz
mov
xchg
mov
xor
leave
je
add
xchg
sbbb
mov
test
popa
sub
movsl
mov
ret
std
sub
and
daa
outsl
data16
cmp
ds
pusha
jo
xchg
jge
into
cmp
les
mov
xor
loop
add
sbb
cmp
daa
ja
test
jecxz
push
test
push
jbe
movl
adc
mov
sahf
cmpsb
mov
pop
leave
or
shrl
dec
pop
adc
inc
aaa
shlb
xor
fists
int
or
lea
mov
repz
jle
outsl
mov
mov
fwait
push
lret
lods
and
push
mov
fnstcw
mov
or
js
loop
jmp
dec
das
rolb
aam
pop
cmc
jp
loop
xchg
das
jge
pop
jg
loopne
movsb
jecxz
xchg
jnp
adc
hlt
xchg
sar
andl
jb
int
cmpsl
inc
ret
fidivl
adc
inc
fwait
icebp
or
or
sbb
sbb
jns
or
sub
popa
dec
jle
cmc
jbe
jno
fwait
push
adcl
xor
mov
cmovg
outsb
push
jl
mov
subl
adc
aad
jne
pop
mov
pop
leave
test
pop
mov
je
lcall
jbe
xor
xchg
pusha
xchg
mov
mov
je
mov
stc
sub
aaa
lds
scas
mov
stos
xchg
and
sahf
btl
adc
lret
dec
enter
fistpl
negb
ja
test
jmp
mov
roll
adc
mov
jg
dec
adc
inc
mov
fisttpll
and
test
pop
es
or
jp
daa
cmpb
mov
into
insb
xor
outsl
daa
dec
dec
aas
loope
fldenv
aas
jo
jge
addr16
popf
pop
cmp
cmp
dec
leave
mov
popf
jp
mov
sbb
int3
out
push
mov
dec
cmp
sub
pop
sub
lret
cld
es
loope
push
fiaddl
mov
cs
jle
xchg
sbb
mov
sbb
inc
enter
mov
or
cmp
ror
negl
add
jns
faddp
jmp
in
add
sub
es
adc
jecxz
adc
movsb
icebp
mov
loop
gs
jp
pusha
inc
std
and
adc
mov
mov
std
aam
aad
mov
jo
inc
pop
sbb
scas
jb
or
dec
js
push
fwait
idivl
repz
push
rcrl
add
inc
imul
pushf
popa
push
fcmovbe
out
lds
mov
out
or
jnp
ljmp
shlb
aas
mov
jne
fwait
in
loop
push
jmp
flds
test
cmc
pop
imul
fdivrs
lret
xor
movl
repnz
and
js
test
dec
and
enter
insb
addr16
cmp
or
push
or
imul
inc
out
lcall
outsl
jecxz
out
cmp
xor
and
xor
rcrl
decb
xor
and
pop
les
mov
pop
insl
cwtl
andb
mov
lret
pop
mov
sub
clc
outsl
xor
sbb
xor
loopne
sahf
repnz
mov
addr16
and
xchg
xchg
pop
cmp
cmp
daa
lcall
or
mov
decb
jecxz
mov
aas
outsb
sbb
or
hlt
in
mov
and
sbb
lret
ret
insb
into
ss
jne
rcl
out
popf
dec
add
xor
inc
out
and
mov
fs
push
inc
lahf
adc
ja
xor
inc
pusha
push
push
loope
je
mov
sub
or
sbb
add
add
cmc
pop
xor
enter
xchg
ud1
les
fsubs
insl
lahf
mov
iret
push
dec
xor
xor
shll
in
xchg
scas
push
xchg
ret
imul
int
inc
sti
mov
mov
popa
cmpsl
les
rorb
adc
mov
sub
mov
subl
inc
mov
shr
mov
jge
sub
sbb
cmpsb
push
mov
enter
xor
sub
mov
es
lret
jge
inc
dec
pusha
aaa
add
inc
push
pop
lret
bound
fiadds
out
lret
aaa
mov
or
pushf
cli
sbb
dec
jb
adc
cwtl
cld
jecxz
add
and
mov
push
mov
lods
aam
movsb
aas
mov
xor
test
cli
je
in
cwtl
sbbb
lods
mov
push
xchg
mov
lcall
fsubrp
jno
inc
push
dec
push
int
adc
push
aaa
loope
inc
sbb
push
cs
shrb
repz
dec
loopne
mov
jl
mov
jle
call
mov
shl
push
sbb
xlat
push
xchg
xorl
mov
push
lods
dec
das
add
into
test
popa
jl
daa
inc
cmpsb
aaa
lock
xor
jmp
jge
xor
loope
add
sbb
cmp
pop
and
push
mov
loopne
and
cmp
mov
xchg
aam
mov
mov
and
xor
testl
dec
dec
adc
inc
sti
inc
xor
pop
jne
jl
sahf
scas
jnp
dec
pop
xchg
xorb
out
clc
adc
xor
insl
pop
and
sti
xor
inc
sub
pop
testb
pusha
or
rcrb
adcb
mov
dec
inc
lock
and
mov
adc
popf
xlat
lcall
pop
add
jle
mov
imul
sbb
jecxz
add
inc
mov
mov
cmpsb
add
inc
mov
mov
sahf
inc
out
xchg
sub
fldt
lods
call
mov
fnstcw
add
rcll
adc
shl
das
add
loopne
add
xchg
mov
cmpsl
mull
insl
dec
mov
decb
cmc
int3
mov
incl
mov
push
in
push
jbe
and
mov
inc
mov
ljmp
das
push
std
dec
or
les
dec
xchg
xchg
idivb
pop
add
xchg
sbb
and
push
divl
jle
mov
ja
or
std
push
xor
cmp
and
mov
sub
xor
rclb
mov
jne
cmpsl
pop
repz
ja
adc
xchg
popa
xchg
mov
add
lds
js
and
push
out
cs
dec
push
mov
mov
sbb
ret
push
cmp
cmp
mov
mov
jbe
std
int
add
cmpsb
cmp
pushf
mov
popf
cmp
mov
mov
pop
mov
add
sbb
repnz
add
int
or
lods
loop
jbe
lods
mov
xchg
int
stc
nop
movsb
cmp
daa
pop
frstor
jb
addr16
mov
int3
mov
test
mov
mov
mov
pop
lret
xchg
clc
and
lods
push
jbe
xchg
ja
xchg
pushf
ret
inc
or
pop
cmp
scas
or
mov
mov
leave
pop
push
mov
mov
xor
and
fwait
add
sahf
mov
sbb
or
and
inc
std
scas
cld
movsb
add
adc
ficompl
leave
and
test
adc
sahf
xor
inc
inc
inc
out
pop
inc
dec
dec
mov
call
mov
sbb
popf
movsb
cmp
rolb
fdivs
mov
push
sbb
shlb
sub
int
out
test
mov
shlb
mov
scas
addr16
test
and
lret
jae
jnp
cmp
std
mov
rcll
lods
jo
lret
xchg
xor
movsl
mov
sub
jmp
xor
clc
in
inc
push
cs
or
test
repz
jp
mov
fwait
pop
sahf
int3
enter
inc
std
jo
stos
pop
in
faddl
loope
mov
cmpsb
subl
test
or
jno
outsl
mov
cmc
dec
dec
test
pop
push
out
xchg
dec
outsl
adc
fidivl
loopne
pop
push
xor
repnz
scas
inc
push
xchg
lret
push
and
fildl
adc
cwtl
jmp
mov
jb
pop
lock
fs
popf
jmp
iret
das
and
push
or
dec
in
sbb
xor
pop
movb
mov
sub
cmp
mov
cmc
cmp
lds
cmp
repnz
pop
pushf
out
sahf
dec
and
ss
movsl
in
arpl
into
call
in
shlb
mov
mov
add
dec
pop
mov
dec
or
mov
mov
shrb
cmp
mov
xor
mov
je
mov
mov
push
or
dec
mov
cmp
mov
test
adc
xchg
xor
sbb
xor
jecxz
fsts
fimuls
or
inc
sub
or
fwait
sub
or
or
shlb
dec
cltd
xor
jp
or
mov
fcmovnb
jecxz
ss
inc
in
pop
and
dec
imulb
loopne
push
fisubrs
std
stos
nop
xchg
mov
imul
test
sbb
leave
pop
clc
les
inc
jecxz
test
or
je
in
orl
mov
xchg
test
adc
ret
pop
pop
repnz
stos
stos
sub
push
loopne
xchg
divl
ret
push
jl
arpl
mov
dec
mov
add
and
adc
mov
ret
and
bound
inc
or
hlt
or
cmp
mov
xchg
cmc
pop
xor
maskmovq
testl
or
sbb
inc
jl
add
or
pop
imul
cmp
lcall
lea
mov
sub
dec
add
mov
sahf
jne
push
inc
xor
xchg
inc
dec
push
mov
inc
pushf
adc
scas
or
or
shl
out
and
jle
pop
push
push
xlat
cmp
outsb
jl
mov
enter
and
sbb
int3
dec
mov
pop
roll
outsb
cmpb
inc
arpl
mov
or
and
adc
inc
in
jbe
inc
jnp
xchg
xchg
push
enterw
cmp
test
les
addb
cltd
test
xor
dec
setp
inc
push
or
jnp
jp
add
push
sar
stc
imul
test
imul
movsl
stc
mov
pop
mov
inc
das
in
test
adc
iret
mov
and
rcl
pop
adc
mov
mov
xor
jb
ret
push
ljmp
cmp
insl
pop
cmp
insl
addps
std
fwait
and
pop
adc
cmp
push
popf
cmp
pop
and
nop
pop
or
lds
insl
loop
leave
int3
cld
push
int3
ljmp
dec
xlat
dec
adcl
imul
inc
data16
xlat
ds
pop
out
pop
cmpsb
les
lcall
sbb
sub
lods
mov
flds
add
loop
data16
sub
inc
sub
leave
fs
inc
or
sub
xor
pop
inc
mov
rcrl
push
xchg
popf
or
add
in
or
mov
outsb
movl
mov
mov
out
mov
inc
jge
out
xor
fs
push
enter
ja
hlt
and
add
test
jg
jae
xchg
pop
xchg
jbe
mov
fdivrs
pop
xchg
aaa
mov
mov
adc
shll
jge
stos
mov
and
jg
push
cwtl
mov
shll
repz
pop
jae
dec
jp
js
das
dec
test
mov
add
js
mov
inc
pusha
pop
xchg
scas
sahf
clc
addl
sbb
xor
inc
inc
outsb
out
push
pop
shr
mov
mov
movsb
sbb
lahf
out
pop
or
lea
dec
sub
jecxz
sub
test
mov
add
pop
insb
clc
negb
jae
lea
ja
adc
addps
sbb
pop
ds
aaa
stos
imul
cs
outsl
enter
xor
or
mov
xchg
ret
data16
out
jmp
test
orl
test
push
push
xchg
rcrl
sub
sbb
cmpl
mov
bound
sub
nop
add
in
lahf
inc
sub
mov
popf
xor
adc
rclb
in
aad
add
int3
mov
in
popf
xor
inc
mov
out
pop
in
cmp
xchg
mov
xchg
mov
add
leave
mov
clc
jae
dec
push
out
insl
push
add
idivb
mov
sub
pushf
shrl
push
out
push
mov
shl
subl
push
or
fstpt
sbb
jle
outsb
pop
divl
lods
cmpsl
insb
sbb
fistpll
pop
les
inc
sbb
push
dec
in
jne
push
je
and
fdivrs
cmp
push
xchg
addr16
scas
push
push
xor
xchg
daa
cltd
std
mov
test
test
inc
ret
jbe
rclb
inc
jle
in
ret
add
sbb
in
mov
lahf
add
fs
push
outsb
lods
lods
pop
ljmp
fistps
imul
orb
sbb
fnstcw
aas
mov
push
dec
jo
stc
jb
and
cli
xor
inc
int
stc
jmp
xor
jbe
fs
adc
test
push
or
js
xor
add
mov
imul
in
cmpsl
fs
loop
fdivs
jmp
mov
popl
clc
bound
cmc
movsb
leave
cltd
sub
je
xor
sahf
repz
scas
sahf
inc
pop
mov
jo
push
int
mov
push
xor
jmp
dec
dec
loopne
int3
pop
in
pop
xor
jecxz
add
movsl
call
in
minps
movsl
aad
call
push
enter
xchg
fs
jp
lret
ja
cli
mov
clc
inc
cmp
pop
call
xchg
es
repz
int3
test
mov
inc
cltd
std
in
loop
in
cmp
out
push
add
inc
lock
jnp
jmp
inc
dec
lahf
or
add
insl
packssdw
adc
xor
out
rcrb
std
lods
cmp
xchg
data16
hlt
xchg
jbe
cltd
sub
xlat
pop
in
sub
js
subb
add
mov
sub
adc
je
aaa
pop
push
addr16
xchg
jle
cmp
xor
add
jmp
sub
mov
adc
or
add
aam
inc
push
int
fldcw
adcl
dec
mov
enter
mov
push
sbb
mov
adc
jle
or
mov
insl
clc
push
adc
adc
inc
fisubrl
and
inc
or
adc
clc
xchg
fsubrl
push
push
push
lret
orb
sbb
mov
adc
sbb
insb
inc
mov
push
mov
loopne
faddp
dec
nop
jl
fldcw
and
mov
add
ljmp
xchg
sub
cwtl
add
jne
sbb
mov
cmc
lret
fisttpl
int3
sti
mov
cmp
lcall
jmp
xchg
mov
addl
cmp
mov
jmp
or
pop
xor
lds
xchg
push
in
pushf
rcrl
sub
out
fs
std
add
push
outsl
test
mov
and
cwtl
dec
jmp
lcall
loope
inc
das
loope
repnz
mov
sub
inc
jle
xlat
aaa
and
call
xorl
incb
movsl
pop
leave
pop
dec
dec
mov
jbe
pop
cltd
stc
xchg
jo
push
fsubrs
sbb
mov
adc
push
outsb
out
jmp
pop
jbe
sahf
call
or
and
adc
enter
cwtl
xchg
jge
adc
sbb
jge
xchg
push
push
push
scas
and
popf
xchg
lcall
pop
jle
rorl
in
out
push
test
jnp
jge
sub
cmp
xchg
or
jns
mov
dec
adc
push
add
js
jae
xchg
sub
adc
dec
insl
cmp
js
pop
lcall
dec
pop
xlat
mov
testb
cmp
pop
dec
xor
cmc
popa
xlat
cmpsl
sbb
inc
dec
scas
stc
or
test
cmpsb
sbb
or
fdivrl
xor
push
mov
insl
and
jno
icebp
movsl
sbb
mov
and
push
movsl
add
mov
xchg
pop
fisubl
sub
xorb
lock
stos
and
sub
mov
pop
gs
pop
sti
push
or
push
scas
cmp
jl
inc
cwtl
pop
cmp
and
mov
mov
jno
jae
mov
mov
mulb
mov
loop
dec
jecxz,pn
movsl
call
test
mov
or
mov
push
cmp
or
sbb
cmp
or
and
mov
fstl
jno,pt
cli
loope
pusha
ds
lcall
mov
dec
dec
pusha
ja
repz
dec
test
or
adc
mov
clc
mov
in
adc
out
and
mov
out
jne
int3
xlat
jbe
dec
push
inc
dec
in
dec
pop
out
lret
and
test
movsl
aam
and
cld
mov
xor
pop
xor
lea
sub
push
stos
add
insl
pushl
loope
push
and
push
ss
adc
lds
lret
sub
es
cwtl
mov
jge
mov
xor
in
fldcw
inc
pushf
mov
sub
add
idivl
adc
out
sbb
es
jne
scas
lods
loope
pusha
cld
addb
or
mov
sbb
push
aam
sbb
mov
in
into
dec
lcall
jl
adc
loopne
arpl
ljmp
enter
sub
shlb
dec
out
cwtl
push
lods
mov
ret
sahf
xchg
push
or
mov
xchg
pop
push
jbe
pop
daa
rcll
push
jne
dec
push
push
shlb
in
sub
lret
mov
mov
inc
lcall
loop
popa
jle
and
pop
and
push
push
fbld
out
loop
xor
sub
std
xchg
jmp
pop
lds
mov
outsl
adc
dec
movsl
xor
adc
lea
andl
inc
xchg
cmpsl
push
sahf
inc
inc
nop
pop
mulb
call
and
dec
out
int3
jg
fstpl
call
movsb
cmp
push
cmpsb
aam
or
lds
push
rol
ljmp
jb
ficoml
sbb
test
mov
push
popa
mov
xchg
sub
test
leave
xchg
leave
loope
mov
idivl
or
sti
mov
jno
loope
lea
sbb
daa
mov
jns
mov
jmp
pop
dec
mov
not
sub
mov
stc
cmp
std
gs
inc
adc
mov
jae
gs
mov
jle
ja
pop
sbb
push
ret
lahf
add
mov
mov
jg
and
mov
arpl
inc
ret
lret
fdivrl
shll
adc
rcr
sub
push
stos
rcrb
nop
insb
add
jmp
cwtl
outsb
faddl
idivb
push
mov
cli
call
sti
ss
xchg
mov
push
jle
in
xlat
out
mov
frstor
psubd
leave
nop
dec
sahf
jnp
jno
pop
push
iret
mov
add
xchg
mov
bound
lahf
loopne
and
xor
cltd
push
dec
cmpsl
mov
aas
adc
clc
or
mov
test
sti
push
xlat
dec
and
dec
dec
inc
inc
enter
lret
divl
cs
sub
cmp
bound
pop
in
mov
addr16
push
rclb
lcall
mov
jae
out
inc
and
lods
and
addr16
push
dec
push
mov
cmc
cmp
ss
aaa
addb
fimuls
adc
xchg
std
jle
sbb
ja
imul
push
nop
mov
jle
adc
lds
and
inc
push
adc
divb
cltd
daa
add
fwait
mov
fbstp
shrb
gs
sbb
inc
and
mov
mov
lahf
aad
cmp
fists
xchg
xchg
pop
sub
fdivs
subl
pop
ret
arpl
iret
movsl
es
sub
jle
mov
dec
ds
mov
cmpsb
out
imul
cwtl
sub
jns
and
frstor
inc
sub
iret
xchg
scas
mov
in
fisubrl
mov
jl,pt
jmp
sbb
inc
add
adcb
insb
ret
pop
sahf
arpl
xchg
cmp
pop
sbb
mov
subl
pop
or
cmp
jge
test
or
sbb
pop
add
mov
push
or
daa
stos
or
or
cmpsb
jp
jge
xlat
pop
into
jns
add
jg
mov
xchg
sbb
pop
das
ds
dec
mov
xchg
mov
pop
push
ja
sub
mov
lret
fcomps
loop
aaa
and
jae
and
call
mov
jo
lret
adc
loop
addb
lcall
inc
jmp
adc
cmpsb
xchg
es
add
subb
mov
test
lahf
sbb
mov
jecxz
add
mov
push
cld
imul
and
pusha
subb
in
shll
or
fisubl
int3
pop
inc
pop
scas
pop
push
es
xorl
fadds
xchg
dec
filds
outsl
or
jae
sub
pop
push
ds
popf
outsl
js
xchg
jmp
cwtl
es
cmc
dec
pop
mov
mov
orb
aaa
and
lods
bnd
mov
notl
mov
mov
sub
add
ret
scas
call
test
mov
inc
xchg
xchg
dec
add
shl
cld
or
push
push
stc
aaa
stos
out
mov
pop
das
adc
jnp
and
sahf
fs
fucomp
adc
add
je
mov
cmpsl
adc
stos
push
jb
fldt
or
xor
lods
mov
hlt
sar
jnp
push
imul
ljmp
out
into
push
bound
test
push
fdivrs
mov
pop
test
stc
leave
inc
popa
call
imul
ret
mov
in
mov
fs
push
int
lret
or
mov
dec
xchg
sbb
jecxz
out
scas
hlt
aas
pop
sbb
movsb
adc
and
into
aaa
cmp
pop
xor
scas
popf
jno
sub
daa
sbb
or
and
cmp
call
push
sbb
sub
fstpl
xchg
dec
dec
rcrb
mov
clc
mov
mov
adc
shlb
cmp
addb
sbb
insl
arpl
outsl
xchg
mov
or
add
xchg
fistpll
dec
popf
mov
lret
xchg
pop
out
cmpsl
push
push
adc
cmp
scas
shll
nop
push
mov
lret
imul
xor
jmp
packsswb
inc
push
cwtl
and
clc
jge
inc
jae
add
sbb
xor
test
dec
aad
rcrl
or
jmp
jecxz
jle
arpl
xor
sbb
sahf
roll
fdivrl
dec
mov
daa
scas
or
mov
xchg
pushf
rep
cld
xchg
mov
loopne
rcl
push
movsl
ret
mov
and
lret
cmp
shll
dec
loop
divl
movsl
cltd
movsb
addl
adc
or
pop
ds
fwait
push
fisubs
jp
leave
push
mov
fnstenv
xchg
cmp
imul
cmc
test
sub
stos
jl
fmul
mov
mov
sbb
sub
xchg
fidivrs
lds
enter
dec
add
push
aam
outsb
cmp
addr16
ret
pop
or
icebp
insb
xchg
clc
data16
push
shl
test
push
aas
cltd
dec
adc
jp
fsubrs
dec
adc
jns
jge
pop
arpl
lahf
sbb
out
mov
cmpsb
inc
xchg
subb
shrb
cmc
scas
inc
addr16
insb
testl
pop
push
idivl
outsb
xor
pop
shrw
xchg
or
mov
sbb
out
add
testl
inc
pop
scas
mov
divb
ljmp
out
push
cmc
addl
or
scas
add
lahf
xor
stos
mov
fisubs
inc
and
mov
lcall
in
iret
scas
xchg
jo
test
fldt
out
cmpsl
mov
imul
fnstcw
xchg
jge
cmc
mov
sub
inc
aad
fsubl
ret
enter
sbb
test
stos
fdivrs
or
and
sbb
roll
add
ret
cvtps2pi
aam
nop
dec
mov
pop
fistl
jg
mov
dec
mov
push
mov
addl
lea
leave
jns
icebp
stos
stos
adc
xlat
lret
repnz
or
aad
push
or
cmp
sahf
inc
fcmovne
xor
popf
push
add
mov
inc
sbb
xchg
outsb
add
stos
push
fwait
cmpsl
xor
xchg
repz
jmp
cli
pop
mov
pop
insl
pushl
push
and
int
std
mul
out
dec
out
andl
mov
out
sbb
lcall
clc
clc
popa
cs
sub
ljmp
loop
pop
mov
cmpsl
mov
and
movsl
sub
daa
pop
or
jns
in
mov
add
inc
push
jmp
mov
jb
sub
ds
dec
popa
hlt
hlt
mov
inc
dec
jmp
cmp
shrl
subl
test
testb
pop
cmp
xchg
repnz
shrb
xchg
mov
mov
xchg
es
scas
inc
mov
dec
subl
js
test
arpl
mov
fisubl
mov
jne
andb
ja
jmp
scas
mov
mov
dec
shl
dec
xor
cltd
xchg
adc
dec
mov
mov
das
add
mov
fcompl
sbb
aad
jns
and
les
xchg
test
push
aas
movsb
mov
test
mov
xchg
imul
clc
or
cmp
into
test
lock
xchg
push
stc
out
ds
bound
dec
fldt
cmpsb
jns
dec
and
imul
in
ficompl
popa
xorl
lcall
mov
ret
clc
mov
inc
in
cld
nop
add
push
pop
negl
sti
inc
cltd
out
insl
fcoml
jecxz
test
inc
call
ss
or
or
fsubr
push
call
mov
xor
xchg
jno
jmp
mov
xchg
xchg
dec
stos
loop
shrl
jbe
adc
dec
push
inc
scas
cmc
jp
out
add
in
cmp
sbb
test
je
cmp
cmp
pop
cli
imul
les
mov
fcmovnu
mov
in
int3
lret
lcall
arpl
aam
push
out
out
push
shlb
xacquire
add
rclb
bound
add
aaa
int
mov
push
jbe
pop
mov
rorl
or
xor
sub
dec
pop
push
fnstenv
lea
xchg
inc
xchg
movsb
mov
ret
fs
mov
pop
xchg
push
test
stos
stc
dec
loop
mov
test
ret
rorb
ds
pop
cmpsb
rclb
je
frstor
shll
testb
jge
ljmp
xchg
ret
insb
cmpl
stc
push
out
pop
jmp
aas
cmp
add
imul
ljmp
mov
rcrb
hlt
rorl
in
cld
pop
imulb
in
ficomps
test
sub
jmp
xchg
jl
call
or
dec
fidivrs
mov
sub
jne
adc
mov
sub
fs
mov
dec
fisubrs
cmp
and
das
test
jmp
pop
clc
or
and
mov
lea
cmp
aam
int
test
mov
faddp
sbb
rol
xor
int
lret
inc
adc
pop
ret
pusha
xor
aas
lahf
pusha
mov
stc
fildll
mov
xor
sub
sub
xor
dec
lret
mov
fs
leave
pop
test
scas
inc
cli
daa
fsubrl
sbb
gs
in
xor
mov
popa
jno
push
popf
jne
cmp
adc
xlat
data16
imul
ret
je
sbb
ljmp
mov
mov
insb
call
xlat
sti
out
pushf
adc
nop
sbbl
jmp
inc
push
cld
loop
ror
cwtl
mov
test
insl
cmp
aas
loop
xchg
stc
push
push
cmp
add
add
mov
in
imul
mov
mov
lock
stos
inc
mov
les
dec
scas
inc
inc
insb
in
je
scas
and
mov
mov
bound
sbb
jns
sub
adc
shll
es
aad
dec
pop
push
repnz
aad
mov
or
stos
adc
cmp
mov
mov
rclb
push
loop
aas
iret
ss
sbb
fistl
test
add
xor
data16
leave
mov
xorl
and
aam
insb
mov
sbb
in
test
ljmp
inc
xlat
fiadds
xor
mov
mov
xchg
cli
sub
gs
int
push
negb
sbb
xchg
mov
call
jp
sbb
push
push
ret
notl
imul
sub
stos
and
into
mov
in
mov
sbb
fstps
jb
addl
call
orl
adc
std
xchg
sbb
mov
xor
mov
dec
scas
repnz
jmp
andl
mov
ficoms
in
test
in
das
rcr
imul
fs
jb
adc
mov
ror
xor
sahf
xchg
jno
cli
adc
jecxz
mov
int3
cmp
push
test
xor
push
incl
xchg
aam
cmp
sub
ret
mov
and
int
repz
outsl
push
sahf
adc
stos
frstor
add
aad
rorb
lret
sub
jno
mov
mov
jge
or
addr16
jg
out
xor
add
repnz
scas
shll
inc
inc
xchg
out
adc
xchg
sub
xor
sub
sbb
mov
shlb
xchg
mov
and
movsb
xor
aaa
test
fldt
arpl
in
push
mov
int3
pop
dec
dec
daa
sbb
fnstsw
mov
sbb
push
filds
xlat
sti
jmp
jp
sarb
daa
lcall
popa
and
push
xchg
dec
pop
pop
cltd
dec
int
std
xchg
cmpsb
sbb
push
cmp
jecxz
fstl
in
adc
push
out
jnp
xchg
nop
xchg
repz
mov
insb
mov
adc
popf
repz
loopne
cmp
xlat
cwtl
pop
inc
repz
sub
jbe
aas
push
das
movb
jmp
mov
push
adc
outsl
push
into
push
scas
ja
aaa
es
loop
mov
mov
xchg
imul
adc
mov
xchg
fldt
mov
sbb
into
push
push
xchg
xchg
inc
clc
test
aas
mov
inc
fdiv
icebp
adc
adc
aas
dec
js
cmp
jno
arpl
cmpsl
mov
xchg
cmpsl
add
jns
shlb
lret
push
mov
fucom
xor
scas
sahf
xor
imul
push
mov
or
push
lock
adc
repz
les
movsl
push
xor
push
xchg
mov
mov
push
iret
lcall
out
pop
and
std
push
test
mull
and
es
les
adc
xor
in
mov
push
incl
rcrb
mov
xor
pushf
mov
icebp
mov
sub
pop
sbb
sbb
sti
push
lea
sub
in
xchg
mov
mov
sarl
aam
xchg
jmp
inc
inc
and
jb
fisubrl
mov
ficoms
outsb
loopne
call
inc
andl
push
pop
xchg
pop
inc
loopne
repnz
stos
push
cmpps
mov
cmc
lock
and
jns
inc
lret
dec
loopne
sbbl
push
shl
ja
jb
aas
jb
mov
int3
xchg
pop
jmp
mov
mov
aaa
xor
ss
dec
ret
inc
pop
aaa
in
pop
mov
sbbl
cmp
popa
ja
cmpsb
mov
inc
jle
sub
bound
cmc
jo
mov
shl
nop
lret
fs
dec
lcall
sbb
rorb
sbbb
in
lock
mov
add
cmp
xchg
daa
pop
call
jbe
in
stc
aam
sub
jg,pt
sbb
push
mov
ds
xor
pop
mov
inc
in
push
icebp
adc
mov
adc
iret
jne
sub
mov
in
pop
call
lcall
fstps
mov
cli
sahf
das
mov
scas
ds
inc
xor
cwtl
adc
mov
push
cmp
mov
mov
and
into
outsl
ljmp
mov
mov
xor
mov
ficomps
clc
ret
mov
mov
mov
lea
dec
push
xchg
pop
cld
or
into
fmull
lret
sbb
sbb
pop
jb
loope
fs
lods
push
xchg
push
pop
fs
lds
lds
sbb
jo
adc
xor
xchg
and
push
fdivrs
hlt
inc
enter
sbb
push
dec
push
xor
lds
mov
push
sub
and
jecxz
call
addr16
jge
push
out
pusha
jg
pop
mov
aas
jb
popa
fcoml
mov
push
mov
add
sub
in
or
sbb
xchg
push
gs
lea
mov
xor
test
out
es
xor
xchg
insb
sub
pop
cmc
pop
xchg
adc
cmpsl
imul
push
lods
xchg
mov
shll
cmp
fstpt
pop
adc
fcompl
mov
ja
adc
or
pop
add
xchg
pop
xor
xor
inc
stos
test
adc
inc
ljmp
jno
imul
outsl
lock
lret
into
and
cmp
fisttps
sub
xlat
sbb
inc
popa
shrl
scas
aad
sbb
pop
jp
imul
pop
dec
pop
mov
mov
adc
mov
mov
lods
inc
adc
add
adc
mov
dec
das
lock
inc
and
roll
dec
xchg
push
pushf
cwtl
pop
jb
or
movsl
sbb
ds
mov
fs
xchg
pusha
cmp
gs
sub
xchg
mov
adc
dec
aaa
mov
jecxz
adc
loopne
mov
sub
outsb
push
push
in
adcl
xchg
xor
xor
pop
arpl
dec
adc
mov
push
pop
rcl
popa
jns
jl
ds
and
std
or
ss
pop
insb
cmp
out
rolb
scas
inc
inc
sbb
or
mov
pop
mov
ljmp
pop
sub
dec
jecxz
aam
xor
push
pop
mov
ds
decl
shrl
and
push
rolb
inc
outsl
and
and
or
int
mov
out
fildll
adc
cmp
out
jp
pop
dec
fwait
lahf
and
test
sub
jecxz
or
cmp
daa
aam
dec
shr
and
add
repz
imul
push
cmp
daa
lds
or
scas
jns
sti
fwait
cmpsl
adc
inc
push
adc
insl
scas
std
repnz
sbb
mov
inc
mov
lret
div
cmpsl
xor
xchg
and
jge
int
movsl
mov
cmp
and
cmp
cmp
mov
popa
fsubr
xchg
mov
je
lods
into
xchg
add
mov
sub
or
push
je
xchg
sbb
push
sub
iret
arpl
or
stos
sub
rcll
shrb
imul
adc
or
jecxz
and
push
jne
push
mov
in
popf
shrb
pushl
jo
mov
mov
mov
jg
data16
push
popf
in
mov
push
cmpsl
dec
ljmp
das
aam
jne
fstpl
das
mov
movsl
mov
or
scas
mov
nop
adc
xor
popf
and
enter
xchg
stc
popf
mov
jo
shll
cmp
lds
mov
sub
addr16
outsb
loope
or
jle
inc
pop
test
add
cmpsl
adc
xchg
mov
lock
sub
shlb
ss
pop
pop
push
pop
jno
insb
pusha
pop
or
inc
ljmp
daa
lea
xor
bound
add
xor
xor
in
lcall
and
lds
adc
and
mov
lahf
pop
cld
dec
pop
jge,pn
cmp
xchg
and
jge
aas
aad
in
out
test
cmpsb
orb
xchg
shrb
sti
fdivrl
xlat
mov
push
jp
lret
adc
sub
test
lret
jns
inc
fildl
jnp
jb
lods
lcall
filds
cmpsl
out
bound
nop
daa
fnstsw
xchg
jle
push
pop
cmpsb
adc
cmp
in
adc
test
mov
subb
and
call
or
in
in
dec
ss
adc
adc
fidivl
ljmp
fucomp
and
xchg
dec
sarl
dec
xor
cmp
imul
outsb
jle
addr16
aad
fnstenv
cmp
jecxz
mov
dec
mov
xchg
mov
mov
out
mov
xor
rorl
popa
aas
xor
out
or
push
out
mov
in
jnp
push
jge
lahf
and
xor
jle
jle
call
jp
cmp
xchg
fldenv
sub
ret
repz
jne
incl
xchg
movsb
cmp
ja
jo
popf
ret
pop
sub
dec
fbstp
jns
movsb
stos
sub
ret
test
sub
dec
loopne
rcrb
leave
lcall
push
imul
cmpsb
orb
dec
xor
int3
cld
pop
mov
movsl
es
je
and
sub
jo
inc
push
jne
inc
faddp
sahf
ror
dec
insb
or
popf
outsl
push
data16
dec
pop
xchg
jecxz
dec
movl
decl
mov
push
into
fcompl
push
mov
or
cmp
aas
cld
push
fsubrs
pushf
cmp
and
lea
push
pop
fisubl
adc
pop
stc
push
sub
daa
shll
ret
popa
int3
iret
and
sbb
jbe
out
into
xor
leave
dec
data16
jnp
cs
mov
insb
cwtl
sbb
cld
lea
push
fwait
idivb
std
jno
xchg
and
pop
imul
sbb
jbe
loope
cs
sbb
ret
or
and
mov
rcll
jns
imul
lcall
xor
cmc
dec
testb
rclb
cmc
adc
xchg
jno
and
xchg
lods
nop
push
xor
jmp
cmp
mov
cld
loopne
js
lock
sahf
in
enter
jb
inc
pop
jmp
jle
stos
out
and
popf
push
hlt
call
mov
mov
inc
fsts
xlat
mov
sub
aad
xlat
mov
xchg
or
ret
pop
sbb
or
mov
mov
cmp
das
dec
fs
xchg
cmp
sub
jnp
jns
data16
inc
fcmovnu
cmpl
mov
test
or
sub
mov
cmpsl
cld
inc
stos
push
jno
arpl
rcl
ds
xchg
add
and
ret
jo
sbb
fwait
push
aam
loopne
sub
out
shlb
bnd
ds
sbb
inc
mov
jbe
repz
sarl
inc
test
xchg
pop
push
cmpsb
lret
ret
push
out
rep
cmp
cmp
test
aam
popf
add
inc
mov
jb
mov
xchg
push
loope
aad
jl
or
fadds
mov
int
and
and
inc
dec
dec
add
or
xchg
ret
pusha
jp
jne
pop
fisttps
ljmp
iret
fidivrs
nop
and
iret
jl
lret
sub
sub
aam
sub
mov
je
jecxz
xchg
cmp
push
sti
mov
add
aad
movl
push
loope
into
add
mov
loopne
xchg
adc
cs
arpl
icebp
int
push
hlt
sub
pop
jecxz
pop
xchg
jmp
fs
push
lods
push
mov
dec
fbstp
fdivrs
movb
movaps
icebp
pop
jo
testl
insl
pop
out
mov
test
sti
lds
pop
test
mov
in
fisubrs
lret
lcall
sub
sub
repz
dec
rcr
pop
testb
jecxz
andb
lds
xor
or
or
jne
xchg
ljmp
jne
xor
bound
and
test
outsb
shrl
dec
arpl
mov
jmp
or
mov
jmp
iret
in
in
insl
push
popf
pop
dec
in
jg
push
mov
xchg
ret
out
add
int
sahf
adc
iret
xchg
sbb
mov
cmpsl
sbb
jg
aaa
pop
xorb
repnz
sbb
cwtl
and
xchg
pop
mov
in
push
outsl
daa
outsb
test
aam
or
dec
and
imul
jne
mov
sti
sbb
dec
xor
ret
and
mov
push
cltd
mov
ja
aam
arpl
jns,pt
push
insl
adc
fdivp
imul
lods
inc
loopne
jmp
sbb
dec
gs
lcall
in
mov
cwtl
test
push
mov
shr
or
push
xor
cmc
cld
pop
repz
push
mov
lahf
adc
pop
mov
sub
push
test
insl
pusha
adcb
jp
mov
push
lods
xchg
mov
aam
pop
xchg
xor
es
add
pop
dec
ds
rol
test
out
add
sbb
add
notl
mov
jbe
test
dec
xchg
pop
dec
pushf
add
dec
cwtl
lret
rolb
cmpsb
adc
push
jg,pn
pop
adc
xlat
jmp
scas
iret
dec
jae
dec
push
jg
mov
jo
aad
aam
adc
dec
out
dec
sbbb
aam
test
leave
cmp
jb
jne
punpcklwd
fmull
movsl
inc
cmpsb
mov
test
mov
pop
dec
add
rcl
pop
testl
dec
iret
addb
call
sbb
jg
inc
add
loop
leave
imul
cmp
dec
dec
xchg
xor
iret
push
xlat
mov
xchg
inc
push
lahf
sub
fstpl
add
mov
gs
inc
mov
mov
cmp
shlb
sub
dec
mov
std
push
das
neg
push
imull
inc
inc
push
cmp
xor
pop
lahf
add
lahf
stos
dec
push
pushf
mov
fcomp
pop
mov
repnz
scas
out
inc
int3
cs
push
out
sbb
in
mov
frstor
add
scas
inc
out
mov
adc
movb
adc
sub
rolb
or
cmpsl
and
sub
repnz
or
push
dec
xchg
mov
je
mov
pop
mov
adc
orl
push
mov
stc
sarb
pop
loopne
fcoms
addb
mov
pop
les
es
mov
hlt
adc
push
add
jb
testl
sbb
out
imul
fwait
pop
dec
xchg
push
loopne
popf
mov
fs
inc
adc
out
sbb
std
mov
push
repz
pop
mov
xlat
xor
jmp
sbb
dec
mov
lea
adc
int3
add
push
sbb
rcll
mov
ss
sbb
push
out
add
test
mov
adc
mov
mov
mov
movsl
cmp
cli
std
or
pop
mov
cltd
push
pop
push
pop
out
ss
mov
addr16
testl
ss
adc
cmp
int3
sub
mov
add
sbbb
aad
fimull
movsl
test
adc
sub
lods
cmp
ja
rcr
pop
loope
aas
mov
sub
xor
stos
xchg
pminub
mov
insl
sub
iret
hlt
mov
cmp
je
shlb
cmp
and
pop
xor
out
fs
add
popf
xchg
sbb
shll
mov
mov
pop
xchg
xor
mov
or
pop
pop
sub
mov
pop
lcall
lahf
push
push
inc
cmpsl
daa
inc
mov
xchg
push
lahf
shrb
lcall
ret
test
jle
fs
int3
adc
mov
and
or
test
sbb
in
cmp
outsl
jbe
add
xor
fs
pop
les
xchg
out
add
inc
call
xchg
ss
in
aas
orl
idivl
inc
inc
lret
pop
or
lock
pop
inc
into
stos
lds
inc
fwait
adc
roll
orl
data16
mov
xor
inc
cld
lock
pop
and
addr16
and
mov
mov
jp
rcrb
test
gs
dec
nop
lret
pop
rcrb
cmp
cmpsb
mov
pop
repnz
ret
add
ret
push
pop
pop
xchg
loopne
jne
sarl
jnp
lock
ds
mov
or
adc
fwait
xor
aam
xor
arpl
cmp
mov
hlt
arpl
mov
in
cmpsl
scas
into
mov
in
repnz
pop
inc
je
js
push
mov
sbb
push
fs
popa
mov
popa
jp
cs
mov
sub
inc
cmp
inc
in
fcom
les
fidivs
test
xchg
clc
daa
lea
xor
out
or
mov
negb
mov
sub
testl
cld
sbb
cwtl
mov
lcall
inc
pop
imul
cmp
in
mov
nop
lea
sbb
scas
push
jecxz
inc
inc
jle
mov
push
jo
push
aad
scas
scas
nop
addr16
rcrl
dec
je
test
jne
shrb
int3
jmp
jp
dec
cmp
inc
mov
add
sbb
lds
dec
cmpsb
mov
mov
inc
pop
aad
push
xchg
sarl
xchg
xor
xchg
dec
push
xchg
push
iret
mov
inc
sub
out
aad
xchg
xchg
add
lcall
lds
lea
cmpsl
imul
sbb
jecxz
xchg
jge
or
mov
push
inc
fwait
shlb
jns
add
rcll
inc
add
push
inc
lret
xor
cmpsb
in
add
cs
pop
loopne
packuswb
dec
stc
xchg
imul
xor
add
push
ret
and
out
fsubrp
lods
cli
or
mov
enter
adc
jo
jae
rcrl
mov
icebp
daa
loop
add
jle
ret
add
test
negl
sahf
mov
fnstsw
sbb
and
call
jno
out
fdivrl
ret
fildl
data16
cmp
loope
lds
subb
rclb
add
pushf
pop
inc
fwait
mov
mov
mov
pop
mov
fnstenv
bound
cs
cwtl
imul
pop
sbb
and
dec
iret
mov
push
int
and
dec
mov
adc
inc
pop
loope
call
decb
mov
and
repnz
jp
les
xor
pop
xchg
fwait
mov
cmp
cmpb
xor
xchg
insb
lret
ficoml
icebp
cmp
repz
xlat
add
jnp
push
jbe
add
ss
ret
out
push
sub
cmc
mov
dec
inc
sbb
jecxz
addr16
dec
mov
das
mov
dec
lret
jle
xchg
sub
fbld
mov
or
movsb
mov
js
subb
shrb
xor
imul
pop
push
in
mov
mov
xor
xchg
test
test
mov
add
les
adc
inc
int
cwtl
sbb
ljmp
stc
cmpsl
mov
adc
xchg
cli
mulb
pop
mov
lahf
pop
add
jae
ljmp
lods
sbbl
lcall
je
out
les
adc
sbb
inc
fistps
push
mov
lret
daa
cmp
lock
nop
and
out
pop
sbb
adc
lcall
push
icebp
sbb
mov
xor
jns
fstpt
fcomi
iret
mov
in
mov
je
rol
or
push
mov
or
loope
shll
xor
bound
and
push
mov
fsubl
lea
bound
xor
xchg
scas
jmp
out
pop
mov
xor
pop
inc
aad
sti
mov
mov
or
cmpsl
pop
dec
movsb
adc
pushf
pop
call
sbb
add
sahf
das
dec
stos
mov
enter
cmpsb
add
int3
arpl
daa
mov
pop
cld
ljmp
hlt
push
mov
repz
in
push
or
pop
inc
std
je
or
mov
inc
cmpsl
into
push
pop
bound
jge
mov
xchg
mov
arpl
stc
fcomps
pop
lock
loop
cmpb
pop
es
popf
dec
js
add
mov
inc
fistps
mov
out
out
scas
pop
popw
push
push
out
sbb
cmp
push
mov
loopne
push
jmp
mov
jmp
xchg
mov
add
push
in
popa
jg
subl
sub
push
mulps
push
adc
insl
sub
out
das
pop
mov
insl
addr16
cmpsl
inc
xor
and
pushf
insl
ja
out
xchg
jecxz
mov
loop
add
mov
mov
loopne
and
dec
pop
and
and
or
jl
jb
jmp
adc
sbb
sti
xchg
cmp
xchg
add
test
push
insb
incl
nop
xchg
mov
dec
loope
sti
or
outsl
jmp
es
pop
adc
mov
cmpsb
xor
cli
cmp
cli
dec
aas
out
jb
aam
enter
inc
fidivs
into
in
lret
cld
ja
or
sbb
mov
testb
add
push
sub
lea
fs
lds
jbe
sub
and
jg
shrb
js
jnp
sti
sarb
mov
adc
inc
mov
or
jne
cmp
in
rcll
loope
cmp
push
lea
mov
adc
jbe
loopne
jle
push
push
es
lret
lret
jecxz
ret
pop
ja
fldcw
ss
out
adc
mov
pop
push
enter
sbb
inc
dec
mov
movsb
sar
or
hlt
xor
dec
loop
fmull
pop
cmpsl
in
jg
repz
sub
or
mov
dec
shl
jl
lods
fistpll
push
mov
lcall
xchg
xor
cmpsl
cmp
jmp
repz
popa
ds
divl
xlat
jle
and
std
adc
daa
dec
inc
or
cmp
xlat
xchg
aas
xabort
es
jmp
ret
lods
inc
sbb
inc
cmp
mov
stos
or
je
pop
movsl
xor
adc
iret
xlat
xor
push
repz
je
test
mov
mov
cmp
test
stos
or
push
cltd
stc
out
jae
sti
fwait
cld
sahf
mov
mov
mov
jmp
gs
inc
daa
stos
nop
sbb
push
pushf
jmp
loop
in
cwtl
sub
ss
xor
push
and
in
daa
imul
pop
into
mov
mov
aam
iret
jno
jg
movsb
pop
cmp
push
test
in
dec
dec
inc
pop
mov
iret
cmp
fimull
out
mov
data16
mov
iret
jecxz
lret
cmp
lods
or
xor
in
cmc
jns
sub
add
push
dec
inc
inc
hlt
into
or
mov
push
popf
data16
push
fadds
mov
xchg
ror
out
out
movsl
sarb
xchg
adc
ds
add
jns
cli
xor
rcrl
sub
pop
pop
xor
xor
fistl
imul
andb
mov
popa
jnp
into
mov
sti
rorl
mov
prefetchwt1
xor
insl
rolb
push
mov
sahf
fcmovnbe
and
arpl
outsb
test
xor
sbb
std
lds
push
lods
test
inc
and
dec
adc
xchg
mov
pop
addr16
test
push
xchg
fadds
mov
mov
lret
pop
iret
int3
mov
ror
pop
and
inc
std
ret
loope
cmp
sub
inc
aaa
or
or
mov
add
sbb
sbbb
lock
mov
xchg
jnp
fsubrl
clc
out
push
jb
or
inc
mov
addr16
punpckhwd
repz
xor
fmuls
add
xchg
and
je
fcoms
jb
or
and
scas
nop
setbe
loop,pt
subb
mov
lcall
imul
dec
hlt
cli
fsub
xchg
loopne
xchg
push
in
call
push
push
dec
lds
in
clc
adc
in
push
pop
movsb
jb
cmp
add
sbb
ds
or
xchg
cmp
iret
test
adcl
sub
adc
mov
pop
lock
lcall
inc
push
test
mov
pop
adc
jmp
daa
sub
in
enter
sahf
hlt
mov
push
gs
push
push
das
scas
mov
imul
out
xchg
popf
mov
fbstp
and
stos
loope
jle
jne
ret
jl
test
xchg
idivb
adcb
js
je
repz
call
push
push
mov
or
dec
mov
mov
pusha
jnp
mov
mov
inc
or
daa
jo
movsb
inc
mov
inc
rol
testl
addr16
sbb
push
or
jg
jb
out
push
sti
fwait
test
sbb
and
sarl
cld
xchg
enter
fmull
sarb
in
lahf
lcall
mov
hlt
mov
clc
out
faddl
mov
sbb
ss
into
lcall
sbb
sub
dec
push
pmulhw
lods
pop
addl
stos
test
divl
leave
xor
shrb
into
and
cli
ds
fdivrs
popa
out
xchg
add
cld
in
xchg
xchg
inc
jmp
mov
fidivl
push
rclb
jge
out
cmp
sbb
mov
mov
mov
sbb
sbb
mov
lcall
sub
xchg
test
xlat
enter
or
cwtl
push
decl
lock
adc
es
pusha
lret
push
jbe
faddl
enter
adc
push
mov
imul
fidivrl
lock
pop
jmp
in
popf
mov
dec
addl
into
popf
mov
sbb
jns
pop
mov
xchg
bound
and
xlat
inc
jbe
leave
xor
lret
dec
mov
iret
cmp
push
mov
test
sbb
or
push
sub
and
lods
adc
sbb
mov
fld1
add
insl
push
mov
push
icebp
sbb
sar
pop
pop
cmp
pop
or
fidivs
push
cmpsb
adc
mov
rcrb
sbb
push
imul
xchg
xor
dec
mov
mov
scas
sbb
push
loope
cltd
aam
xchg
sub
push
sti
xchg
inc
inc
pop
hlt
cmp
or
je
cs
sub
daa
mov
cmp
outsl
mov
mov
or
inc
popf
and
rclb
fmull
mov
sbbl
ror
nop
and
cmp
mov
pop
xchg
sub
adc
mov
push
in
in
adc
push
mov
xor
adc
pop
push
mov
popa
fmull
cs
mov
push
popa
jmp
adcl
andl
ret
push
or
arpl
aad
scas
ret
mov
mov
aad
mov
fmull
xorb
add
loope
mov
xchg
test
loopne
loope
mov
in
repnz
add
les
mov
push
sbbb
rcll
add
ss
mov
faddp
pop
push
cwtl
repnz
and
adc
leave
cli
mov
lods
lock
mov
int
test
inc
or
enter
fs
sbb
inc
dec
clc
xlat
outsl
and
dec
loope
shll
loope
jg
jae
lods
fimuls
mov
repnz
fcoms
pop
mov
daa
repz
stos
lds
scas
mov
xor
add
push
fmull
cwtl
mov
in
xchg
int
xor
movsl
mov
dec
mov
fdivp
jl
in
mov
push
mov
shl
lods
movsl
and
cmp
test
jae
sub
sbb
push
inc
pop
repz
fldl
rdtsc
xor
or
subb
and
xchg
push
push
add
stos
ss
mov
test
xchg
xchg
bound
ds
xchg
or
lods
cmp
and
gs
pop
cs
lea
push
fwait
pop
je
cmp
movsb
in
sbb
pop
sbb
mov
add
inc
sub
jge
out
xchg
jmp
jle
fmull
and
mov
xchg
inc
adc
mov
xchg
push
fisttpll
cltd
push
ja
mov
cmp
xlat
call
in
lret
popf
bound
pop
cmp
lahf
idivl
lods
jle
outsl
mov
lds
mov
movsl
sub
inc
push
jl
jle
inc
scas
xchg
std
aas
xchg
in
in
ds
mov
mov
sub
pushf
jmp
dec
cmp
imul
mov
cmp
pop
ret
scas
sbb
aam
loope
sub
xchg
insb
fbld
dec
push
testb
fsub
inc
sbb
js
loop
loop
dec
dec
add
and
pop
sbb
xchg
inc
mov
movsb
out
mov
add
std
scas
mov
mov
outsl
fiadds
fnsave
sahf
inc
iret
popf
neg
push
jecxz
jo
push
and
pop
aas
push
pusha
mov
adc
in
aad
in
and
or
sub
xchg
mov
repz
dec
divb
fwait
cli
push
mov
jmp
jbe
and
fisubrl
addr16
cmpsb
push
aaa
mov
dec
xchg
orl
and
cmp
cmp
push
adc
idivl
lahf
sub
faddl
cmp
cmp
loopne
and
into
fst
dec
pop
mov
in
ds
xor
mov
in
test
mov
ja
mov
cld
mov
adc
inc
pop
jecxz
mov
inc
adc
mov
mov
fdivrs
mov
add
cmpsb
mov
jae
pop
xchg
or
fs
fs
subb
aam
or
in
and
dec
insl
add
cmp
xchg
adc
and
aam
mov
fcmovne
cs
sub
aaa
icebp
mov
lahf
or
jp
je
mov
shlb
dec
es
sub
ds
out
mov
ss
test
xor
sub
nop
xchg
enter
dec
loopne
lock
mov
sub
lods
add
xchg
arpl
mov
cmc
mov
iret
shrb
fsubrs
pop
xor
pop
sahf
fwait
cmp
jbe
push
in
stos
cmp
add
add
fsubrl
pop
and
jmp
sub
jae
imul
xchg
insb
popf
xchg
push
call
xor
or
jmp
scas
bnd
stc
cmpsb
pop
dec
loopne
int3
push
movsb
sub
lret
sub
dec
jnp
dec
sarb
test
and
xchg
mov
lret
sub
mov
leave
pop
cmp
add
push
lea
movsl
mov
je
arpl
xor
sub
inc
inc
ret
insb
in
pop
repnz
out
test
nop
pop
cmp
lret
iret
pop
jge
xchg
add
lock
add
lret
mov
add
push
in
xchg
sub
cltd
mull
jns
add
pop
pop
mov
jmp
subb
out
iret
sbbb
scas
push
lcall
test
stos
jmp
shlb
rclb
movsb
xchg
push
test
aaa
sbb
nop
mov
add
fptan
mov
pop
testl
cmpsl
sbb
cmpsb
push
inc
notb
iret
loop
frstor
cmp
decb
mov
sub
daa
mov
out
andb
sub
shll
push
ljmp
jno
rcll
cmpsb
aaa
dec
mov
jns
or
pop
out
stc
pushf
arpl
movsl
cmc
lods
mov
xchg
ret
pushf
insb
jg
jmp
cli
xchg
jo
mov
test
lea
dec
dec
mov
dec
data16
lret
jne
sbb
push
mov
das
sbb
aas
nop
jne
bound
jo
xor
repz
cmp
sub
mov
and
aas
scas
daa
mov
mov
push
xchg
inc
jns
ljmp
xchg
cmp
imul
andl
das
jb
push
mov
nop
add
repz
leave
pop
repz
gs
ljmp
inc
out
jg
mov
popf
pop
gs
andb
mov
shll
jle
test
js
clc
push
inc
imul
or
cmp
xchg
dec
pop
int
in
fwait
sbb
loopne
inc
add
popa
mov
inc
push
jno
movsl
scas
adc
inc
lds
mov
clc
dec
es
cmp
out
movl
mov
fucomip
jge
jp
call
jmp
xor
das
xchg
cmp
aas
insl
mov
pop
cmpsl
hlt
mov
les
ja
mov
fistpll
xor
jle
mov
cltd
mov
pop
les
into
mov
push
mov
enter
adc
into
ds
mov
mov
roll
out
shlb
fisubs
test
pushf
stos
mov
jge
pop
sbb
mov
inc
loop
mov
dec
pop
dec
or
and
mov
or
mov
mov
cltd
out
and
ss
sub
pop
sarb
xor
fildll
int3
pop
jno
cli
cwtl
enter
mov
mov
push
mov
adc
movaps
repz
fsubr
lock
pushf
cli
adc
jne
rol
jae
pop
popa
mov
mov
loopne
xor
cmp
hlt
push
mov
xchg
jle
cmp
jl
dec
loop
pop
dec
dec
pop
setae
test
shll
lock
jbe
mov
aas
data16
pop
fdivrs
fldenv
pop
add
cltd
add
jge
aas
mov
stos
js
cld
xchg
rcr
push
pop
fs
repz
xor
sbb
add
jle
sti
es
adc
aad
sbb
inc
mov
mov
inc
int
xor
jne
lahf
mov
or
repnz
lods
gs
jne
xchg
shl
adc
mov
jl
mov
repz
fdivl
pop
inc
in
pop
das
dec
fwait
out
bts
jmp
and
xchg
cwtl
adc
lret
push
jl
inc
adc
es
repnz
jecxz
mov
mov
sarl
jns
lahf
fldlg2
aas
cld
and
rorb
aas
inc
cmp
mov
mov
mov
popa
movsl
lock
cmpb
sbb
sub
or
and
jmp
stos
jo
test
push
fsubrs
ret
rcl
xor
out
pop
je
or
stos
push
sbb
mov
mov
adc
lods
or
lcall
in
cmp
add
mov
add
xchg
sbb
enter
or
push
gs
daa
xchg
lods
pop
cmpsl
or
gs
cmpsb
cmp
adc
les
xchg
stos
jb
inc
xchg
je
xor
aaa
in
fstpl
rclb
decl
xor
mov
push
stos
xchg
pop
jge
mov
add
gs
xor
scas
jecxz
adc
add
outsb
mov
movl
out
inc
adc
jnp
and
dec
in
ret
je
pop
push
insl
fnsave
fidivrl
jmp
xchg
cs
lret
rclb
dec
mov
lahf
bound
mov
sbb
sarl
sub
push
call
jb
and
mov
cmp
sbb
inc
popa
fcomi
push
add
lods
add
or
les
pop
mov
jl
and
jbe
repnz
push
add
std
ds
inc
push
in
outsb
loope
lds
cld
push
cmc
mov
lcall
cltd
lcall
es
pushf
add
xor
cwtl
sbb
idivl
fnstcw
xchg
sbb
mov
sub
int
fucomi
pop
ljmp
mov
lods
jmp
hlt
in
dec
ret
mulb
addl
data16
and
sbb
jne
jae
dec
mov
fsubr
imul
inc
lret
mov
adc
cmp
xor
dec
pop
data16
cmp
jecxz
adc
sbb
jmp
mov
fwait
mov
sarb
insl
hlt
out
cmp
lea
call
and
aas
pop
jnp
xchg
into
fadds
mov
push
and
aad
mov
enterw
test
outsb
jne
test
test
fistpl
fimuls
jnp
test
leave
cltd
std
addr16
jae
addb
hlt
scas
jne
fists
sub
push
jne
xor
xchg
in
push
or
mov
in
sub
out
es
lea
frstor
int3
dec
sub
imul
pop
add
lret
jo
fiadds
xchg
std
fnstcw
xchg
ret
pop
pushf
or
leave
mov
push
addb
xchg
cwtl
iret
push
inc
outsl
xchg
ja
inc
mov
inc
insb
mov
les
push
fisttpll
jmp
subl
enter
cmc
mov
dec
or
ds
push
shll
adc
jbe
shlb
jge
mov
out
test
clc
pop
cmp
fldt
sahf
cmp
int
or
ret
imul
outsl
clc
or
inc
decb
adc
adc
mov
jp
out
stos
lret
mov
xchg
sti
jl
stos
inc
pop
insb
sub
mov
test
pop
lahf
icebp
stc
cmpsb
and
xor
aaa
xor
jo
stos
adc
out
mov
addb
inc
dec
mov
pop
jecxz
out
pop
sbb
jmp
push
pop
xchg
add
in
sbbl
repnz
cs
rcll
in
jl
leave
push
and
pusha
jbe
xchg
sbb
jle
imul
xor
mov
in
inc
xlat
jmp
jecxz
dec
sbb
into
bound
mov
lcall
mov
jecxz
int3
int
adc
pop
js
fs
pop
cwtl
aam
cwtl
mov
and
jae
pop
push
gs
mov
in
call
and
andb
aam
mov
ss
cmp
ljmp
cmp
push
fcomps
cmp
jmp
or
push
icebp
mov
mov
cmpsb
outsl
and
jbe
shrl
je
leave
jle
in
dec
data16
leave
test
sub
jl
or
cmpsl
mov
fcomps
lea
jl
xchg
es
arpl
adc
mov
lret
pop
mov
cmpsl
inc
dec
insl
mov
cmp
mov
lret
orb
dec
ds
or
push
out
or
repz
xchg
addr16
xor
imul
or
jmp
cmp
inc
int
mov
addb
pop
inc
cli
shr
sbb
add
fstpt
mov
pop
mov
cmpsl
js
ds
sbb
clc
add
dec
add
mov
sbb
dec
into
jne
cmc
pop
mov
ret
xchg
pop
es
fbld
push
out
test
jl
pop
sub
mov
push
aad
out
push
pop
in
ja
xor
out
bound
and
sub
hlt
fnstenv
cs
or
dec
jmp
cmp
jl
inc
lahf
inc
xchg
outsl
mov
adc
push
stos
adc
sahf
xor
data16
jns
xchg
test
cmp
div
cmp
test
mov
mov
aam
push
std
xchg
xor
sbb
cmpsb
sti
fidivs
jmp
push
int
fstpt
fidivrl
std
ret
pop
in
mov
shrl
lds
sti
jmp
mov
es
ds
movsb
inc
sahf
inc
mov
pop
and
std
and
adc
fistps
lahf
or
std
lret
ror
hlt
adc
ficomps
ja
pop
xor
mov
int
sbb
push
mov
mov
not
pop
loop
cmp
push
pusha
addl
es
je
fildll
mov
pop
adcb
aam
clc
addb
call
popa
outsb
push
pop
xchg
adc
shll
sahf
jle
and
mov
xor
sarb
cli
xchg
mov
aam
lds
mov
jns
shl
pushf
sahf
mov
ljmp
push
or
mov
jo
in
test
bound
mov
out
fadds
xor
jl
mov
fwait
loopne
adc
nop
stos
dec
dec
inc
fdivrl
pop
xor
pushf
movntq
in
fcmovbe
push
lret
lret
aam
mov
xchg
in
ret
clc
sbb
cmp
gs
subl
fsts
ret
testl
jge
sahf
in
inc
mov
rcl
cmpsl
lahf
imul
popf
xchg
les
in
stos
push
sbb
inc
xorb
mov
aad
jl
jbe
neg
je
mov
or
ret
call
out
push
test
mov
xchg
mov
cmp
out
mov
es
mov
cwtl
pop
fisttps
push
int
sar
xor
mov
pop
out
dec
or
push
sbb
jge
jno
int3
popf
xor
stos
shll
cmpsb
pop
mov
subb
lret
cli
mov
test
or
push
mov
fsubr
xor
xchg
aas
fdivp
popa
cmpsb
pop
aaa
mov
js
push
mov
dec
jge
push
dec
int3
test
xlat
fyl2x
hlt
xchg
clc
stc
sbb
iret
popf
sbb
rorb
rcl
cmp
loop
shrl
mov
repnz
add
mov
sahf
and
jnp
mov
out
jl
daa
movsl
sbb
out
xchg
mov
sub
daa
mov
ja
bound
push
into
add
das
mov
push
dec
fsubl
cld
xchg
sbb
int
ljmp
jmp
in
adc
jo
sub
ja
jo
ja
sub
jno
inc
and
xchg
sub
lea
lock
fwait
cs
loopne
and
xchg
mov
sbb
cmp
push
mov
push
and
popf
adcb
popa
jecxz
shrl
pushf
inc
cmpsl
fs
mov
cld
pop
and
jae
cmp
add
push
fistps
mov
xor
push
xlat
sub
pop
daa
fnstcw
add
sub
cmc
ficoms
das
push
sub
inc
gs
jp
push
lahf
cmpsl
mov
outsl
sbb
call
setp
jae
mov
add
jb
lods
inc
fnstcw
cmpsb
dec
loop
xor
les
sahf
mov
xchg
sub
pop
repnz
ret
mov
or
outsl
sbb
arpl
sahf
cmpsl
ds
enterw
or
mov
ss
imul
scas
je
movsl
cmp
test
dec
sbb
aas
dec
adc
loopne
popa
aam
add
adc
out
push
movsl
fisubs
mov
aas
or
jnp
in
test
mov
in
and
dec
out
clc
cmp
jmp
sbb
popa
xor
xchg
cs
vpsllq
loop
std
xchg
dec
aaa
movsb
cmp
outsl
ja
pop
inc
adcb
enter
in
fwait
xor
callw
cmp
test
adc
dec
shr
add
je
pop
test
dec
dec
sub
adc
mov
insb
jne
pusha
loopne
test
mov
mov
inc
cmpsb
cmp
call
aas
stos
inc
scas
inc
test
xor
in
fdivrs
mov
imul
sahf
pusha
arpl
jb
bound
es
push
sbb
out
bound
push
push
gs
ffree
dec
rcrb
xor
pop
push
stc
xchg
mov
sub
xchg
daa
adc
imul
pop
lcall
xor
loope,pt
push
sub
in
ljmp
add
das
cltd
push
aaa
xchg
pop
loop
lock
ja,pt
icebp
dec
popf
je
xchg
push
out
sub
imulb
jbe
outsb
lea
mov
cs
jae
fs
std
dec
test
sti
add
pop
jp
arpl
or
sub
cmpsb
gs
out
pushf
dec
stos
outsl
sub
xchg
outsl
xchg
dec
xchg
cmp
add
fs
sti
jge
mov
mov
push
sub
leave
rcrb
and
pusha
xor
dec
bound
aas
mov
inc
ffree
jp
mov
dec
shrb
xchg
jg
mov
cli
pop
xor
inc
call
bound
subl
cmpsb
out
xor
mov
fmuls
or
adc
ret
pop
add
xor
add
cs
inc
jecxz
fnstcw
mov
or
push
cmc
call
cmpsl
jge
jns
rcrl
jg
clc
xor
cmc
pop
sti
xor
adc
outsl
les
fsubl
mov
stc
sbb
nop
cmpsl
hlt
adc
pushf
xchg
push
in
ja
jge
xor
adc
jbe
push
sub
cmp
loop
shl
xor
aad
sub
cmp
into
in
and
mov
outsl
lcall
mov
or
orb
add
enter
test
adc
repnz
dec
icebp
xchg
sub
call
scas
sti
jae
dec
inc
and
aas
push
xchg
inc
shlb
mov
stc
pop
xchg
xchg
push
add
sbb
sbb
mov
repnz
out
xor
loop
sub
das
push
lahf
movsl
xor
shll
fwait
xor
movsb
pop
imul
jmp
call
shlb
or
lahf
andb
rep
into
lret
je
xor
cmp
jnp
push
cmc
sub
jns
push
pop
pop
xchg
test
push
orb
inc
mov
movsl
dec
pop
sti
movsl
push
jo
out
lds
pushf
or
mov
inc
daa
adc
cmpsl
xor
push
ljmp
xor
jae,pt
jmp
adc
and
jae
movsb
xchg
mov
call
and
jle
into
inc
fadds
cmpsl
pop
dec
lcall
pop
push
cmp
dec
inc
push
into
and
lahf
mov
cmpb
popa
aam
push
test
inc
into
iret
sub
popa
outsb
rcrl
sbb
mov
sub
lahf
dec
in
call
sarl
shl
or
xlat
jno
lods
xor
xlat
out
sbb
fistps
xor
jno
cwtl
xorb
fadds
push
daa
aam
sub
mov
cld
out
jmp
addl
cli
mov
jo
jmp
inc
in
icebp
adc
pusha
push
in
add
adc
sub
dec
dec
int3
pop
notl
lahf
xchg
cwtl
mov
jae
sub
xchg
sub
mov
sbb
gs
pop
xchg
test
ss
stos
fs
and
cmp
int3
into
stos
js
out
push
mov
sarb
scas
cmp
loop
mov
xlat
inc
pop
inc
enter
dec
popa
popa
dec
dec
shl
xchg
call
test
cmp
sub
mov
jecxz
cmp
int
scas
arpl
outsl
add
mov
push
xchg
adc
test
cwtl
mov
ficomps
out
xchg
hlt
xchg
inc
and
or
popf
sub
nop
lock
pop
mov
repz
in
cltd
or
lret
jae
cmpl
adcb
xor
fs
adc
cli
outsl
data16
mov
cli
repnz
popa
and
sbbl
jle
lods
daa
scas
sub
fidivrs
lea
lret
cli
pop
mov
test
adc
cwtl
imul
xor
gs
xor
fcoml
fucomip
inc
stc
jno
jge
lods
add
jmp
and
push
mov
inc
inc
push
and
shlb
push
ljmp
jb
sbb
dec
in
std
dec
push
mov
movsb
leave
and
cmc
and
cwtl
xor
push
iret
sbb
mov
lods
push
jb
fcmovne
xor
mov
fwait
xchg
icebp
mov
int
das
dec
pop
popa
mov
int3
lret
mov
fidivrl
fisubrs
pop
fdivp
outsl
xchg
data16
cmp
cmp
call
aas
pop
in
enter
mov
sbb
in
lods
or
xchg
cld
mov
stos
adc
iret
sti
cld
fcompl
lock
sbb
movsl
sbb
mov
sbb
aam
mov
aam
dec
test
repnz
scas
repz
push
inc
jp
dec
lahf
test
inc
iret
pusha
mov
jb
xchg
xlat
pushf
shlb
mov
push
sbb
jg
add
or
lret
add
imul
divb
mov
push
jp
sbb
cmc
fistpl
mov
insl
inc
enter
xor
leave
mov
adc
test
test
mov
cmp
xorb
mov
insl
mov
mov
mov
aaa
fwait
stos
pop
test
loop
jmp
xchg
pop
lods
push
mov
pusha
das
inc
inc
fstpt
ljmp
jmp
les
pop
inc
jg
montmul
cmpsb
xchg
test
cmp
imul
lea
inc
lods
lret
sbb
iret
mov
addr16
out
cmp
mov
mov
sbb
lods
lcall
push
mov
mov
outsl
out
std
sbb
add
or
xchg
pop
sub
jecxz
aaa
hlt
pop
imul
xor
sahf
inc
ljmp
movsb
xor
outsb
dec
loope
mov
icebp
sub
mov
or
mov
pop
mov
sarl
push
stc
cmp
pop
aas
icebp
dec
lea
sbb
pop
aam
push
jb
or
cmp
out
test
mov
test
les
shrl
pop
mov
repz
loopne
rcrb
aas
in
dec
xchg
xlat
push
mov
imul
nopl
ja
movsl
cmp
roll
daa
pop
push
iret
mov
mov
mov
lds
xchg
mov
enter
popf
lret
cmp
es
in
fs
shrb
add
dec
call
sub
repnz
pop
lds
gs
inc
sbb
jne
sbb
xor
pop
inc
flds
les
push
jecxz
dec
cwtl
jb
adc
aas
lahf
pushf
sbb
pushf
mov
ljmp
mov
imul
cmp
test
aas
cli
cmpsb
popa
adc
xlat
in
or
or
mov
mov
fmull
dec
das
mov
test
aaa
into
sti
enter
int
mov
mov
mov
jp
sbb
lods
outsl
inc
lret
jp
xor
and
push
jmp
mov
bound
jns
cmp
sub
aam
xlat
add
push
cmp
mov
int
popa
sub
jo
sbb
jae
mov
fisttps
and
dec
sub
push
add
dec
adc
pop
jne
inc
pop
xchg
shll
in
sbb
mov
mov
ljmp
mov
fimuls
push
xor
lea
arpl
iret
jnp
mov
lock
mov
or
fadds
data16
insb
mov
xchg
xchg
inc
loope
inc
aas
cmpps
cmp
jl
and
mov
xchg
adc
dec
mov
scas
sub
lock
cmp
xchg
in
add
xchg
sub
pop
ret
into
fstpt
mov
xchg
inc
mov
testb
ret
pop
das
sbb
js
xchg
xor
and
enter
xchg
adc
out
pop
sbb
jo
mov
clc
adc
stc
or
adc
dec
stos
fldcw
push
adc
push
je
and
xchg
repz
popa
push
fwait
mov
mov
mov
lods
xchg
mov
add
mov
mov
scas
sbb
mov
adc
inc
mov
gs
dec
fsubl
fwait
sti
lock
jmp
sbb
movsl
add
stos
insl
les
sub
sbb
mov
movsb
xchg
cmp
jl
nop
mov
push
pop
jns
adc
ss
xor
movsb
inc
inc
fidivrs
inc
add
pop
xor
aaa
push
lock
pop
inc
push
pop
add
test
xchg
xor
inc
stc
xorb
add
sub
scas
repz
jb
ss
iret
cmp
subb
cwtl
xchg
daa
xchg
cmp
fsubl
sub
jge
cmp
lea
and
ffree
add
and
sbb
rolb
dec
outsb
push
call
mov
jo
mov
shr
mull
fimuls
push
add
jo
cmc
and
paddsw
cmp
adcb
mov
dec
je
icebp
or
pop
out
push
mov
mov
dec
loop
hlt
stos
add
xchg
imul
mov
xlat
outsb
clc
add
sub
jnp
jae
adc
xchg
movsb
push
loope
jmp
sbb
pushf
ja
int3
cmpsl
divb
fsubrl
cld
roll
cmp
in
call
test
or
xor
into
and
das
push
push
adc
or
scas
rcrl
out
jp
hlt
cmpsl
xor
subl
or
xlat
mov
repnz
int3
ss
sbb
aad
dec
add
aas
movsb
push
xchg
movsl
mov
sub
in
lea
push
jge
mov
mov
popa
clc
jmp
jg
cmp
dec
push
push
f2xm1
xchg
push
xor
pushf
ss
in
test
dec
or
repz
cmc
loopne
pop
jae
aas
outsl
inc
fcompl
out
incb
xchg
fwait
xchg
xchg
dec
add
icebp
dec
out
xlat
push
push
fsubr
bound
movsb
sub
sarl
ret
cltd
int3
dec
pop
inc
nop
push
push
insb
xchg
adc
lret
test
int
sub
push
js
fsts
imul
push
imul
fisubrl
loop
inc
jg
inc
jge
jecxz
adcl
jae
mov
jb
mov
pop
lret
addr16
mov
pop
mov
arpl
iret
mov
cmpsl
call
push
out
mov
inc
lods
cltd
xchg
lret
mov
adc
mov
xor
dec
cmp
mov
mov
dec
out
aaa
imul
sub
xchg
pop
dec
pop
lock
pushf
aad
stos
mov
mov
push
scas
ds
jae
fcmove
hlt
fcmovnb
sub
xor
sbb
int
push
ficoms
sub
adc
shl
fsubr
outsb
add
jge
pop
pop
lret
aas
lea
sub
push
or
mov
pop
or
add
stc
je
stos
or
xchg
mov
mov
mov
xchg
out
add
inc
cltd
std
xor
arpl
push
inc
adc
ljmp
push
rorb
push
mov
add
xor
lret
ss
push
xchg
aas
out
mov
fdivl
popw
cmp
sbb
push
addr16
imulb
stos
test
dec
movsb
jg
adc
ljmp
movsl
xor
cmp
icebp
movsl
or
push
test
lcall
xor
xchg
inc
inc
pop
pop
and
cmp
stc
pusha
dec
cmc
addl
mov
lahf
lret
ljmp
xor
xor
xlat
repnz
dec
mov
cli
shll
lock
adc
pmaddwd
jno
cld
xchg
call
inc
lcall
mov
pop
jns
dec
sub
sbb
mov
movsb
icebp
mov
add
not
js
ds
or
orb
jle
inc
fisttpll
jnp
sti
insb
movsb
mov
mov
stc
jno
xchg
aas
lcall
push
jmp
pushf
sub
jbe
stc
add
loopne
mov
mov
push
and
mov
inc
aad
cwtl
bound
int
fwait
movsl
and
add
push
in
test
mov
out
mov
clc
sahf
int
outsb
pshufw
cmc
sbb
adc
out
xor
mov
test
jne
jp
mov
repnz
out
mov
leave
stos
faddl
out
test
dec
sbb
sbb
xorb
cmc
sub
dec
es
sahf
pmulhuw
scas
mov
mov
call
mov
or
mov
jle
test
cs
push
push
fiadds
mov
rep
ret
adc
dec
rol
lahf
or
inc
dec
or
add
int
std
inc
mov
cwtl
stos
cmpsb
cmp
pusha
add
pop
ss
add
jge
push
out
dec
pop
pop
leave
jae
enter
fisubrs
sahf
sti
ret
xchg
adc
dec
lods
add
in
popf
jp
mov
sbb
push
xor
popa
adc
pop
adc
pop
cli
sub
insb
sar
outsb
adc
ret
or
pop
mov
rcrl
adc
xchg
cli
stos
hlt
or
sti
and
cmp
push
xor
gs
adcl
dec
andb
jmp
fidivl
xchg
mov
fdivrp
pop
lock
ss
test
xchg
arpl
fldt
xchg
loope
outsl
shll
mov
in
push
fwait
cmp
pop
bound
test
or
flds
rclb
sbb
xchg
pop
hlt
fwait
xchg
sbb
add
cmpb
jl
jmp
dec
hlt
cmp
jae
jo
mov
sub
mov
int
jecxz
jbe
dec
rol
jmp
loope
sub
adc
mov
enter
jbe
clc
lret
test
xor
jmp
subb
shrl
mov
in
lret
je
jge
mov
js
mov
scas
xchg
sub
lods
xor
dec
sar
and
lds
lret
mov
xor
push
sub
aaa
sub
or
int3
jbe
in
dec
push
arpl
push
pop
mov
imul
movsl
push
lahf
cld
xchg
mov
sarl
leave
int
mov
arpl
ja
lock
inc
jne
and
aas
pushf
aaa
enter
and
adcl
cmc
fiaddl
jmp
ljmp
mov
add
dec
xchg
and
sbb
pop
aaa
cmp
lods
adc
das
pop
adc
xor
xor
xchg
and
add
fimuls
arpl
das
push
rolb
inc
fcmovnbe
jecxz
inc
sub
orl
xor
test
js
in
adc
pusha
cmp
imul
mov
data16
into
lret
inc
adc
ret
ljmp
push
dec
dec
mov
xchg
lahf
push
mov
sbb
pand
rclb
pslld
aam
jp
jp
outsb
jno
in
pusha
scas
lds
cmpxchg
imul
enter
mov
dec
jmp
hlt
push
jg
xchg
mov
cmp
popa
enter
mov
cmp
shr
pop
mov
and
addr16
push
pop
test
pop
mov
fnstsw
and
negb
mov
js
inc
test
inc
ss
movsb
jmp
mov
dec
enter
imul
mov
cmp
test
bound
xchg
adc
repnz
or
pop
mov
insl
mov
jg
mov
repnz
mov
cmp
pop
out
test
leave
scas
rcr
mov
mov
sub
mov
mov
stos
pop
loope
pop
adc
in
mov
inc
int3
fmul
lods
xchg
nop
jmp
and
lea
mov
adc
roll
insl
test
pop
mov
mov
cmp
aad
push
ds
dec
dec
sbb
mov
lret
cld
ret
loope
or
jne
adc
das
int3
mov
loop
lods
rcrl
scas
mov
jns
test
test
jecxz
cmc
out
test
cmp
or
or
fmull
and
cmp
xor
in
out
sbb
mov
sub
jns
insl
add
dec
bound
xchg
lds
scas
mov
les
cwtl
mov
out
xchg
sbb
pop
xor
arpl
sbb
jp
xchg
pop
adc
sti
or
ja
xchg
sbbl
scas
sbb
cli
mov
loopne
aas
adc
jne
inc
rolb
dec
jbe
nop
dec
lret
push
mov
push
loop
orb
ret
jns
pop
ss
test
xor
mov
loope
push
pushf
pop
aas
jg
jno
ljmp
or
inc
and
adc
jae
adcl
jne
mov
xor
jmp
stc
and
mov
sbb
movsb
call
imul
sbb
in
adc
and
xor
test
pop
push
stos
xlat
fiaddl
pop
cmp
xor
dec
dec
cmpsl
cmp
pop
jns
test
cmc
daa
mov
mov
jg
fidivs
xchg
xchg
dec
in
in
mov
sub
icebp
dec
dec
cwtl
jge
mov
xor
jp
fcmovnb
fisttpl
add
stos
xchg
and
push
sbb
xor
adc
jae
scas
aaa
arpl
mov
xchg
nop
mov
in
xchg
scas
xchg
out
jmp
lea
out
out
adc
pop
push
das
loopne
loope
pop
scas
cmp
mull
lds
pop
add
ja
xchg
dec
movsl
lock
dec
loope
shll
lahf
xchg
add
js
adc
cmp
xor
test
mov
or
mov
pop
test
jp
xor
aam
fsubrs
leave
fistpll
dec
pop
or
jno
out
or
cs
jns
inc
scas
fdivl
adcl
aaa
or
pop
xor
jb
test
stc
nop
pop
lods
outsb
add
stos
add
sbb
or
push
cmp
pop
fisubl
ret
push
mov
jecxz
je
sahf
or
xor
imul
out
inc
nop
loope
scas
call
and
cmpsb
idivb
stos
shll
icebp
jo
insb
in
inc
lret
imul
sub
sub
mov
cwtl
sbb
repz
sbb
push
and
mov
mov
out
cmpxchg
lods
push
inc
test
inc
std
pop
call
inc
xlat
outsl
jp
xchg
pop
lahf
ret
rcl
push
sub
cmpsl
sub
outsb
jns
cmpsb
stos
dec
mov
jbe
mov
cmp
nop
es
pop
ljmp
mov
pop
orb
rorl
es
inc
mov
pop
mov
xor
rcr
mov
lret
rol
hlt
decb
jecxz
dec
jge
lea
imul
pop
int3
xchg
ret
adc
cmpl
ret
fs
mov
lea
xor
xchg
xor
push
xor
mov
call
xchg
aas
sbb
insb
mov
adc
sbb
push
jbe
add
mov
cmc
adc
push
cltd
fcoml
push
fnstsw
in
mov
imul
jno
cmp
loope
and
clc
gs
mov
sub
call
fmuls
or
xor
jp
lock
lods
pushf
and
mov
cmpsb
out
mov
lds
outsl
sub
and
roll
jns
js
push
inc
or
fidivrl
scas
dec
icebp
in
push
popa
push
cmp
notb
cmc
gs
jne
arpl
inc
pusha
dec
test
sub
xor
ss
xchg
add
xchg
icebp
dec
mov
popf
dec
pushf
aaa
iret
sarl
xchg
fnsave
jg
jg
dec
mov
out
push
rol
pop
fwait
int
or
push
dec
out
fisubl
leave
pusha
cltd
ljmp
cmpsl
shld
imul
popf
jl
dec
pushf
mov
pop
subb
dec
ret
movsl
xchg
mov
push
je
cmp
shrl
imul
cmp
sahf
es
scas
shl
inc
xlat
mov
in
adc
int
test
adc
cld
popl
stos
or
mov
xor
add
pop
mov
xchg
aaa
mov
add
les
push
montmul
cmpsb
inc
dec
mov
insb
mov
decl
negl
testl
push
cmp
dec
in
xlat
jmp
jecxz
in
pop
mov
push
cltd
xor
rclb
cmp
sub
outsb
jl
and
enter
in
cmp
mov
jno
out
es
flds
xchg
cmp
scas
out
mov
dec
sub
stos
push
and
movsb
push
or
loopew
mov
orl
lahf
sbb
loope
jecxz
out
bound
fbstp
sti
stos
popa
sbb
test
rol
adc
stos
jne
mov
jno
push
in
loopne
mov
je
add
mov
mov
enter
stos
or
push
cmp
xor
xor
sbb
insl
mov
push
sbb
sbb
arpl
cmc
jmp
adc
cmp
adc
test
mov
jne
adc
xor
or
dec
jg
cmp
mov
stos
add
movsl
or
rcll
mov
cmpsb
shl
sahf
dec
pop
push
mov
add
call
cmc
add
test
sbb
enter
push
xchg
iret
inc
jecxz
pop
bound
xchg
mov
mov
add
xchg
jns
aad
inc
cmpsl
dec
and
adc
sub
mov
es
push
dec
loopne
subl
pushf
sbb
or
pop
dec
add
and
pop
dec
sub
jbe
mov
in
stos
jle
std
inc
sbbl
mov
inc
pop
sbb
jg
out
xchg
sti
movsb
cwtl
test
mov
fs
int3
fsubrl
into
cli
pop
subb
or
mov
subb
or
dec
dec
adc
jbe
mov
mov
sub
jecxz
in
fmull
jg
shll
push
pop
ljmp
mov
pop
out
sub
ret
xchg
xlat
cmp
mov
pop
test
inc
fdivrs
xor
lret
addr16
popf
push
imul
js
pop
dec
lock
add
call
loope
insb
jmp
xor
clc
ja
inc
movsl
in
scas
cltd
adc
adc
push
xchg
jecxz
sbb
cld
jbe
adc
pop
push
shll
outsl
pusha
pop
jge
cli
adc
mov
pop
jmp
jae
pop
mov
push
fisubl
fnstcw
cmpsl
push
ljmp
loopne
push
nop
cmpsl
loope
inc
push
inc
int
in
xorb
scas
mov
sbb
loop
xchg
into
popa
stos
xlat
lock
jne
int
sub
std
gs
dec
sbb
popa
push
ds
ror
fiaddl
sub
push
or
sbb
insb
jae
mov
mov
or
pop
jne
adc
movsl
mov
push
and
adc
pop
dec
push
jmp
andb
repnz
ret
rcrl
jnp
mov
lods
ja
push
rol
cmc
fstl
imul
push
dec
fcoml
aaa
into
lret
inc
out
jmp
sbb
lcall
push
mov
inc
dec
loop
adc
loopne
loope
sub
push
adc
adc
sub
add
bound
jp
push
and
inc
or
subb
xor
je
xchg
mov
test
push
and
sti
ss
and
dec
adc
stos
push
cmp
subb
dec
stc
in
js
lcall
and
dec
lahf
cmp
adc
jns
xchg
push
fnstcw
mov
jp
inc
lret
cs
dec
fdivrl
pop
test
scas
and
stos
adc
dec
push
xor
insl
fisttpll
push
shrl
inc
jmp
fwait
rorl
push
cmp
jo
sub
in
shll
ficompl
push
das
sbbl
insb
xor
test
pop
push
mov
inc
es
test
hlt
js
daa
xor
cwtl
pop
test
jns
nop
lahf
mov
pop
mov
mov
cmp
xchg
mov
cmp
xchg
pop
rcrl
mov
fcoml
mov
je
out
es
push
fbstp
fldcw
xor
subl
jge
add
movsb
dec
xor
xchg
or
fwait
sbb
jo
or
loope
inc
daa
in
cltd
ja
sub
push
das
cmpsb
inc
pop
xor
fisubrs
scas
pop
sub
sub
out
xchg
jg
dec
or
int
xchg
pushf
lock
inc
cmp
in
test
xor
sub
xchg
loopne
or
mov
sbb
xchg
scas
outsb
mov
push
xor
jo
mov
mov
outsb
in
jl
dec
nop
stos
jno
adcb
xchg
xchg
push
sbb
mov
cwtl
xorb
ja
mov
jne
or
fsubs
les
js
mov
push
jp
mov
xchg
sub
xchg
fdivl
pushl
fs
cwtl
and
dec
lahf
pop
inc
imulb
adcb
jno
icebp
xlat
mov
sub
repz
mov
mov
mov
popa
jbe
das
fsub
and
clc
jbe
pop
pushf
dec
push
xchg
lea
pop
popf
scas
mov
fidivs
sub
int3
sbb
in
sbb
lcall
dec
cmp
fcoms
inc
push
in
addl
out
push
in
ficompl
xchg
mov
dec
jl
ss
cmp
xchg
movsl
add
imul
lock
imul
cltd
mov
aad
mov
clc
scas
inc
xor
stos
mov
cli
inc
cmc
roll
mov
xchg
mov
gs
into
mov
or
stos
in
dec
in
scas
xor
mov
int3
and
jp
popf
inc
sub
pushf
inc
push
and
push
push
repnz
icebp
cmp
movsl
nop
xchg
mov
push
int
and
xchg
inc
pusha
add
push
mov
sbb
out
pop
nop
stos
cmp
jae
mov
das
rcrb
inc
fsubp
sub
outsl
cmp
imul
cmpsl
aas
ds
dec
enter
sub
jbe
arpl
aaa
ljmp
and
hlt
into
js
cli
test
les
sub
jb
insb
push
mov
movsb
inc
jl
jno
and
bndstx
mov
fstl
push
test
cmp
xchg
mov
dec
in
jno
xchg
push
leave
out
mov
and
inc
lret
lea
xchg
outsb
sbb
mov
iret
mov
sbb
xor
or
ljmp
fcmovnb
sbb
es
mov
outsl
adc
xchg
xchg
stos
mov
adcb
ror
testl
outsb
add
repnz
lret
push
enter
cmpsb
push
call
mov
cmp
cmp
cld
pop
mov
imul
push
call
das
adc
fsubr
call
test
and
pop
xchg
mov
decl
ja
data16
lods
fisubrl
imul
lret
repnz
int3
arpl
xchg
ljmp
test
sub
adc
pop
push
mov
add
pop
adc
sbb
jnp
cld
mov
bound
rclb
xchg
xor
outsb
gs
ja
cmp
adc
loop
xchg
sub
xor
jns
shrb
pop
jbe
shrb
inc
and
gs
shl
xor
sti
push
fdivl
push
aad
jle
mov
xchg
mov
xchg
push
hlt
adc
aaa
jnp
mov
or
lods
imul
pop
mov
popa
enter
lods
cltd
sub
fcomps
cs
std
scas
cmp
pop
mov
test
mov
enter
test
loope
inc
pop
cmp
call
inc
fldcw
imul
pop
sub
cmc
cmp
popf
jb
add
idivb
mov
jg
add
or
push
sub
je
cmp
cld
gs
jnp
mov
decb
or
js
sub
fwait
mov
xchg
imul
mov
cli
outsl
adcl
mov
adc
pop
mov
pop
adc
movsb
ds
out
rclb
rol
mov
pop
out
imul
push
push
ds
inc
mov
pop
in
mov
repnz
sbb
add
mov
jno
ljmp
inc
xor
push
repz
dec
fidivrl
ret
mov
ret
jl
outsb
jl
popf
fwait
movsl
ret
rol
fimull
insl
jmp
lahf
test
fs
rorb
cli
pop
adc
loop
xor
xchg
add
sarl
roll
test
shr
jno
sbb
cmp
sbb
push
adc
xchg
add
cld
flds
cmpb
jl
aam
xchg
orl
outsb
push
mov
insb
lock
clc
inc
loop
cmpsb
cmp
bound
fidivrs
push
scas
pushl
xor
popa
lret
mov
insb
xchg
push
push
scas
js
imul
adc
push
inc
loope
mov
and
cmpsb
cmp
sub
xor
andl
daa
mov
hlt
jne
xlat
ljmp
jno
jmpw
sbb
mov
das
outsl
lea
xchg
nop
mov
shll
mov
loopne
mov
ljmp
call
mov
mov
data16
adc
out
test
lock
mov
or
sbb
dec
xchg
xor
xlat
outsb
pusha
fiaddl
fmulp
imul
insl
enter
insb
xor
test
cmp
enter
dec
pop
jp
loop
call
cwtl
in
pop
xor
jecxz
push
fisubrl
or
add
scas
lea
aad
xchg
mov
lods
push
pusha
xchg
test
push
testb
push
inc
pop
adc
aas
popa
jmp
pushl
movsl
cld
scas
dec
dec
pop
sub
ret
xor
inc
push
sti
sub
cmp
je
pushf
add
lods
xor
sbb
xorb
lea
sbb
ljmp
push
scas
cmp
xor
fs
inc
pop
aam
adc
lock
cmp
aas
out
mov
mov
mov
out
loopne
xor
add
outsl
shr
or
inc
cvtpi2ps
sbb
enter
adc
lds
push
aas
fistpl
sbb
and
cmp
movsl
mov
adc
movsl
outsl
enter
sub
testb
stos
xor
fcmovnb
sub
mov
pop
hlt
xor
jnp
xor
negb
sti
cld
shlb
sti
dec
das
daa
lcall
mov
pop
std
addl
adc
jg
or
jns
pop
dec
or
add
pop
adc
xor
jecxz
cld
fdivs
and
cmp
lret
cmc
mov
mov
adc
les
mov
pop
sub
repz
ja
sub
es
popa
cmp
loop
jno
jp
or
cmp
movsl
scas
jo
adc
inc
je
neg
push
rcll
ffreep
xchg
inc
fistl
mov
cli
daa
mov
dec
lods
fdivrl
mov
xor
fwait
cmp
movsb
pop
inc
mov
insb
cmp
fistpl
sbb
out
lahf
aam
inc
xor
xchg
xchg
jns
push
in
push
js
mov
sub
mov
dec
push
or
pop
insb
inc
vpclmulqdq
or
in
lds
push
sbb
or
adc
testb
loopne
dec
jg
jo
pop
adc
rorb
cs
test
es
ja
cs
or
orb
movsl
mov
mov
shrl
push
jmp
sti
lahf
fstps
pusha
decb
call
std
flds
xor
sbbl
mov
inc
fldt
inc
adc
mov
push
adc
jecxz
lea
mov
pop
mov
ss
test
aaa
push
push
out
inc
mov
dec
ss
gs
dec
inc
imul
gs
aam
add
pusha
pop
dec
sarb
test
sub
rolb
jmp
ljmp
inc
outsl
mov
jle
xlat
cmpsb
repz
fdivl
mov
stos
lret
js
jge
aam
fidivl
dec
pushf
jo
jb
jno
les
xor
call
push
inc
repz
cld
push
fisubl
adc
in
lods
mov
and
shll
add
mov
xor
mov
lock
cltd
pusha
lods
loope
mov
adc
inc
cld
cmp
sbb
pushf
fdivp
jns
jnp
jmp
test
in
insb
hlt
leave
pop
mov
cmp
cmp
mov
into
loope
pop
push
xor
jno
data16
dec
xchg
shrl
jmp
movsb
sbb
xchg
push
cld
es
mov
xor
scas
mov
fwait
and
cld
inc
mov
stc
lret
fldenv
mov
and
jnp
inc
fisttpll
mov
push
jno
and
int
xor
pop
xchg
sub
pop
stos
pop
add
cmp
fsub
mov
pop
outsl
sbb
movsb
jmp
repz
sub
xor
mul
mov
cwtl
push
in
cmp
pop
je
nop
xor
bound
mov
std
mov
adc
mov
dec
dec
pop
jle
scas
ret
andl
lahf
sbb
loopne
jg
sbb
or
sub
dec
imul
in
pop
fnstenv
push
xchg
aaa
stos
adc
adc
pop
int
and
leave
sub
loop
addr16
push
jg
bound
out
sbb
daa
cmp
push
sbb
mov
mov
aad
jns
imul
clc
xchg
add
mov
adc
movsb
filds
sub
cmpsb
cmp
fucomp
les
hlt
cltd
lock
outsl
mov
fs
enter
aaa
pop
imul
out
shl
dec
sub
out
test
leave
or
push
je
cmp
mov
or
xchg
jl
insl
sbb
cmpsb
cmp
push
push
pop
pop
lock
addr16
stc
insb
cmp
lcall
inc
push
cmp
mov
jae,pn
or
push
popa
mov
xchg
je
lods
adc
push
cmc
xor
dec
jmp
mov
add
clc
ljmp
lret
lock
mov
popa
sbb
clc
pop
or
and
pop
sbb
loop
and
loope
cmp
stc
xor
sbbb
push
loop
xchg
add
mov
fwait
or
notb
stos
daa
in
in
xchg
add
mov
data16
std
xor
std
inc
cli
cmp
bound
mov
xchg
sub
movsb
jecxz
push
pop
iret
add
mov
insb
push
stos
and
gs
fcmovnu
mov
mov
test
pop
mov
xchg
insb
mov
insl
adc
xor
push
or
lcall
inc
popf
hlt
iret
xchg
iret
push
movsl
add
sub
repz
push
cmp
xchg
sub
push
lea
push
sub
imul
jno
jns
cmp
loop
push
test
or
adc
shl
sbb
cmp
pop
lock
pop
iret
data16
adc
test
fmull
or
lcall
jne
xchg
mov
stos
lret
incb
sub
mov
test
and
outsb
inc
ret
call
jb
pop
and
jp
inc
ss
xchg
cli
cmp
xchg
shll
xchg
mov
mov
mov
stos
leave
pusha
fnsave
inc
stc
mov
rcll
jl
aam
xchg
outsb
mov
cli
in
sub
mov
xchg
sbb
out
push
mov
cli
mov
add
cmpl
mov
push
fisubl
cmc
or
pop
in
jno
cmp
cmpsl
sbb
push
into
gs
pop
hlt
jl
jae
or
push
inc
mov
rorl
das
mov
ja
stc
inc
stc
sub
inc
scas
inc
cmp
movl
jg
mov
gs
mov
scas
mov
push
das
sbb
jecxz
cld
repz
lods
cs
xor
inc
sbbl
loope
cmp
cmc
insl
pop
notb
cmp
pushf
xor
pop
cmc
push
jp
shll
dec
fbstp
mov
in
mov
mov
inc
xlat
sti
scas
inc
fsubrl
in
push
mov
mov
popf
clc
or
jg
lods
pushf
sbbb
xor
in
sbb
addb
pusha
ss
nop
inc
data16
cmpsb
mov
xor
adc
xor
repz
inc
mov
add
mov
je
inc
mov
sbb
call
fwait
mov
ret
mov
fdivl
orb
jle
fildl
pop
in
push
ds
jno
rcrb
and
shlb
ds
pop
mov
lods
ljmp
call
push
cli
fcmovnu
jb
sbb
jne
lcall
inc
push
mov
xorl
pop
dec
xchg
dec
pop
pop
jmp
jno
and
xor
push
push
push
mov
sarl
push
ficoms
jl
cwtl
je
inc
push
out
lret
fists
or
scas
test
ds
rolb
xchg
lea
dec
rolb
or
enter
add
daa
xor
and
hlt
mov
push
add
inc
mov
and
leave
mov
testl
jnp
aaa
cmc
cmc
lods
sub
xchg
sbb
xor
jb
pop
xor
push
push
lods
mov
repz
and
sti
cmp
les
sti
fwait
adc
cwtl
push
and
fmull
sbb
and
sar
lahf
divl
mov
or
mov
jle
icebp
sbb
mov
mov
in
fldl
mov
dec
popa
push
daa
shrb
addr16
icebp
or
repz
das
mov
mov
add
mov
mov
inc
mov
imul
jge
pop
pop
pop
and
cltd
test
out
mov
mov
add
push
sbb
push
add
xchg
mov
mov
dec
push
mov
push
fsubl
cmp
arpl
jmp
push
repz
fwait
mov
sub
and
xchg
scas
fs
push
cmp
push
xchg
xchg
lods
test
adc
fcoml
mov
push
sbb
pop
pop
inc
pop
xchg
aas
fmull
addb
and
stc
xchg
cmp
les
cltd
jnp
jne
xlat
andb
mov
xchg
dec
jge
push
mov
testl
or
and
mov
out
outsb
add
and
mov
xchg
add
mov
mov
sbb
add
popf
mov
sti
popa
sbbl
jl
mov
jmp
loop
pop
jg
ror
add
and
xor
jne
xor
pop
arpl
es
cs
jne
sbb
das
or
mov
inc
pop
lcall
sbb
inc
fcoms
js
das
pop
inc
cmpsl
dec
dec
jecxz
enter
xlat
push
and
sub
les
lods
pop
daa
pop
dec
fwait
lds
add
pop
test
or
int
movsl
addr16
pop
aad
hlt
or
movsb
lods
test
sub
subb
into
cmp
mov
int3
add
and
les
outsl
pushf
lcall
or
out
push
repz
xor
or
hlt
mov
dec
ss
cli
psllq
icebp
pop
in
stc
daa
ss
scas
lds
dec
or
inc
jg,pn
je
fisubl
push
aad
sbb
xchg
pushf
jae
xchg
jo
push
inc
cli
pop
jle
bound
iret
ljmp
scas
inc
adc
pop
or
movsl
pop
or
mov
inc
insb
leave
push
sbb
mov
and
cmp
mov
sbb
jge
xchg
jnp
stos
pop
es
inc
icebp
inc
mov
inc
jmp
cmp
das
ja
or
jns
pop
push
xor
and
stc
pop
add
into
cmp
xor
ljmp
dec
rcrb
dec
dec
mov
pop
and
pop
push
mov
inc
lea
inc
push
push
scas
out
sahf
sbb
xchg
inc
pop
das
jb
adc
lock
cmp
mov
inc
ss
inc
inc
popf
mov
sbb
add
sub
xchg
jb
cmc
out
imul
pop
inc
or
test
cs
xlat
push
and
pop
sbb
sbb
popa
add
mov
test
mov
fildll
addb
mov
add
cwtl
pop
dec
adc
jge
mov
lret
lfs
dec
cmp
mov
push
stos
and
pop
cmpsb
push
xchg
in
ret
scas
fsubrp
xchg
pop
fidivrl
frstor
lahf
push
or
jecxz
push
fldenv
xchg
or
or
out
cmpsl
std
pop
push
aas
xchg
mov
push
and
lahf
icebp
in
popa
jg
pop
out
arpl
mov
xor
push
stos
in
test
call
inc
push
rcrb
xchg
in
outsb
mov
mov
lcall
ljmp
mov
lock
imul
mov
out
js
fnstsw
mov
fldcw
xchg
push
es
or
push
sahf
mov
int
push
shrl
imul
xchg
push
sbbb
movsl
dec
data16
inc
fsts
or
shll
jae
or
jne
sbb
inc
sbb
cld
push
arpl
ss
mov
cmp
rolb
push
in
or
push
push
test
rcr
xchg
cmp
add
negb
decb
in
jl
sub
ljmp
mov
xchg
mov
push
andb
mov
sub
dec
inc
push
call
jb
sti
lret
in
cmp
daa
orb
dec
push
aam
out
icebp
mov
loop
or
movsb
push
cmp
ljmp
flds
push
scas
mov
aaa
test
imul
mov
fimull
mov
loop
jns
jno
xchg
sahf
fmull
clc
hlt
sbb
dec
fwait
sti
cmpsb
jae
adc
dec
mov
pop
fsubr
addl
icebp
adc
scas
pop
pusha
js
out
fsubrl
mov
in
sahf
dec
lea
loope
sbb
mov
pop
leave
ret
clc
mov
into
jb
push
mov
pop
call
in
pop
inc
and
mov
fdivrp
or
pop
push
gs
int
and
scas
gs
or
dec
shrl
in
movsl
repnz
mov
jmp
adcl
pop
jecxz
jns
push
bound
jne
pop
sbb
out
sub
test
or
dec
adc
adc
outsb
call
mov
sbb
fidivl
cld
xchg
adc
xor
ss
cld
add
pop
sbb
cmp
push
outsb
stc
xor
mov
les
das
ret
loope
pop
adc
lock
xchg
sbb
dec
mov
cli
lret
adc
cmp
popl
neg
pop
dec
das
subl
jb
dec
mov
push
sarl
data16
inc
cmovle
and
dec
adc
out
push
lods
cwtl
andb
adc
into
pop
int
xor
sbb
pushf
xor
movsb
mov
mov
cltd
aad
mov
out
xchg
and
jle
testl
cmc
cld
in
dec
and
dec
mov
xchg
cmpsl
mov
xchg
add
or
jecxz
push
and
dec
rcl
jnp
xor
inc
lret
jl
sub
fs
jl
xlat
das
or
rcrl
mov
sti
add
mov
xchg
into
enter
pop
fidivs
add
dec
jae
jae
dec
hlt
mov
int3
xchg
repnz
mov
sbb
push
insb
lcall
xorb
pop
cmp
fdivrl
repz
in
cmovl
or
jg
jns
testl
stos
ljmp
mov
pop
push
daa
ret
mov
fstpl
cmc
xor
xor
mov
nop
mov
sbb
lret
xor
adc
outsl
lcall
sbb
fs
xchg
push
add
movsl
mov
insb
pop
outsb
scas
and
mov
dec
xchg
add
cmp
dec
lock
idivb
xchg
jno
sahf
cmp
out
xor
mov
xchg
cs
jne
lock
mov
xor
shrl
imul
cmp
add
repz
sub
out
int3
in
and
loopne
xor
jmp
push
in
insb
in
lea
mov
lret
jg
inc
pop
enter
pop
xor
div
mov
dec
add
inc
stos
je
push
xchg
adc
push
cwtl
stos
mov
fdivl
or
dec
xchg
cs
cli
mov
pushf
xor
xchg
pop
xchg
sbb
add
add
xchg
idivl
dec
pushf
xor
xchg
cli
or
xor
cmp
sub
or
mov
cmpsb
mov
fwait
dec
xchg
int
popf
jmp
sbbl
int
add
xchg
insb
and
fisubrs
pushf
push
stos
inc
xor
inc
xchg
xor
dec
mov
mov
or
inc
mov
aaa
iret
cmpsl
dec
aad
jns
add
xchg
rcll
ret
ja
inc
mov
pop
mov
cmp
dec
lret
fdivs
jp
insb
pop
push
mov
inc
cmp
adc
jae
push
scas
ja
outsb
in
pop
cli
aaa
pop
in
pop
mov
addr16
mov
je
int
nop
adc
sub
ret
mov
add
test
adc
add
fisttpll
adc
and
xor
ret
or
ss
stos
nop
out
fists
pop
push
xchg
sub
js
lret
stos
push
mov
push
call
lret
push
mov
jle
jle
outsb
enter
push
outsb
in
mov
or
sbb
aad
mov
ret
jle
jl
push
scas
push
jb
mov
and
add
test
mov
cmp
or
push
pop
sub
and
push
mov
or
mov
repnz
bnd
dec
push
sahf
lods
fst
outsb
mov
jns
imull
jb
out
div
or
mov
xor
push
scas
xchg
or
mov
stos
dec
in
out
je
leave
dec
pop
cmp
test
lahf
cli
fisubrl
mov
xchg
stos
enter
jbe
stos
mov
popf
mov
insl
pop
popf
ficoms
out
mov
in
jl
fisubs
dec
pop
mov
test
ret
call
das
pusha
icebp
pop
jle
inc
outsl
push
xor
popf
cli
inc
pushl
inc
out
mov
push
clc
mov
sti
lcall
cmpsb
xchg
hlt
repz
and
mov
pop
push
fdiv
addr16
mov
faddl
aam
repnz
es
cmpsb
arpl
outsb
iret
xor
add
push
xorl
cwtl
ficoms
mov
sub
ret
add
pop
pop
push
lret
movb
mov
sahf
mov
pop
lahf
imul
jno
fistl
and
idiv
add
or
leave
push
or
or
push
addr16
imul
ret
jge
jns
aam
iret
ss
dec
shl
dec
adc
jae
mov
inc
cmp
or
fildl
nop
push
adc
mov
repz
add
mov
adc
shlb
and
addr16
push
jg
nop
stos
mov
movb
add
dec
mov
fidivs
inc
out
rcl
sub
lcall
and
pop
out
lahf
andl
les
sahf
mov
ret
mull
notl
stc
cmpsl
ds
dec
mov
dec
arpl
mov
stos
push
adc
jle
sbb
dec
inc
jp
xchg
pop
cmc
enter
in
imul
sbb
clc
mov
ss
mov
dec
dec
aad
jle
jo
fiaddl
xchg
decb
mov
dec
add
mov
jb
cmp
mov
inc
dec
cld
or
and
das
cmp
inc
and
in
aas
or
push
pop
xchg
sbb
mov
hlt
push
mov
sbb
add
in
outsl
cli
sub
clc
mov
stos
mov
lret
ror
push
cmp
fxch
sbb
out
mov
cmpsl
repz
adc
sahf
das
lret
or
leave
and
jne
ds
xchg
mov
pop
shll
fbld
roll
idivl
ljmp
or
jg
cmpsb
ret
mov
and
sbb
fstpt
test
fs
jo
lock
lcall
in
sbbl
mov
out
loop
outsb
and
mov
cmp
inc
mov
aas
stc
rolb
in
push
push
in
xor
add
push
xor
dec
daa
loopne
add
pushf
repz
cltd
or
cmp
push
fwait
or
mov
cmp
cli
call
lock
sbb
in
inc
stc
rorl
dec
jecxz
sti
xor
divl
cmp
shld
fwait
cmp
outsb
clc
fldpi
orb
add
mov
js
and
xchg
mov
or
aad
lret
call
ss
scas
xchg
jb
adc
ss
dec
or
test
jns
outsb
mov
out
mov
fimull
inc
outsl
mov
dec
out
lret
inc
push
mov
xchg
mov
cmp
sub
popa
dec
jle
in
loop
pop
clc
adc
jno
fwait
push
mov
or
mov
sbb
pop
mov
dec
popa
xchg
jp
aas
scas
mov
jae
imul
dec
mov
adc
or
lret
inc
test
jno
xor
rcll
fwait
add
or
jns
jp
mov
sbb
push
lods
insb
or
jecxz
dec
aas
dec
xchg
ds
int3
loop
call
jne
xchg
and
adc
push
pop
jge
cmp
dec
stos
test
aaa
mov
xchg
pop
in
dec
dec
mov
rol
jge
mov
push
sarb
popa
mov
inc
cmp
int3
mov
dec
pusha
mov
push
mov
data16
sbb
and
pop
inc
jp
xchg
dec
mov
rcr
xchg
push
lahf
mov
arpl
mov
and
rol
sub
mov
push
and
es
push
push
dec
inc
lock
jne
lock
int
mov
loopne
loop
mov
les
jmp
lcall
ret
dec
insb
xchg
divb
inc
leave
mov
sti
push
imul
jp
addr16
xlat
repz
and
lds
fidivs
mov
pop
popf
mov
pop
mov
ljmp
or
push
cs
mov
icebp
fwait
loope
aam
or
fiaddl
pop
loopne
fsubr
cmp
cmp
mov
push
popf
popa
mov
insl
fcoml
mov
jp
xor
pop
jb
or
add
test
sbb
mov
jbe
into
mov
jno
imul
pushf
dec
push
cli
jne
or
imul
out
xchg
push
pop
popf
push
push
sbb
jb
stc
xchg
mov
call
jns
cli
or
jecxz
test
js
or
loope
jnp
mov
fs
data16
dec
pop
test
je
xlat
sbb
in
cmp
cmpb
sub
adc
aam
cmp
dec
mov
fsubp
add
fsubrp
ret
cmp
pop
and
leave
xor
push
sub
push
arpl
js
jge
sahf
or
adc
mov
pop
mov
cmc
mov
rclb
rcrb
popa
jb
and
int3
dec
add
sarb
push
outsl
push
lret
loope
daa
push
xor
mov
scas
inc
and
xor
adc
movsb
adc
pop
js
jnp
jl
sub
shlb
push
jbe
jb
int3
mov
or
jmp
gs
sbb
test
mov
clc
jle
inc
test
jae
sbb
test
outsb
sub
out
inc
cmp
mov
push
stos
imul
push
je
inc
cmc
pop
ljmp
hlt
lret
xchg
add
mov
cwtl
pop
push
ds
lret
test
xor
ljmp
in
mov
push
push
xchg
ja
pop
lahf
in
shlb
xor
scas
sbb
mov
push
inc
dec
xor
inc
shlb
xor
pop
cmpsb
mov
pop
sub
jbe
out
into
jbe
mov
mov
mov
and
faddp
lea
aam
sbb
cmp
push
fwait
out
stos
dec
dec
les
pop
repnz
dec
sub
pop
test
lods
inc
xorb
test
out
rorl
je
insl
fs
outsl
iret
in
xor
insl
cmp
js
pop
movaps
cmpsb
cmp
xlat
aaa
les
cli
dec
pop
insb
clc
cwtl
add
lret
mov
pop
shll
iret
cltd
test
fildll
cltd
pop
mov
imul
mov
subl
sub
movsb
sub
mov
adc
sbb
xchg
xor
in
mov
cmp
scas
out
aaa
jnp
in
repz
ret
xor
cmp
mov
jae
repnz
mov
jbe
and
adc
lods
and
out
xchg
movsb
xor
and
push
outsl
loop
imul
jb
or
mov
pop
push
sar
ss
xchg
pop
sub
xor
loope
cmp
subl
adc
cwtl
or
dec
arpl
adc
sub
and
inc
arpl
push
cwtl
test
pop
sar
sbb
fsubrl
pop
pop
aas
jp
mov
mov
dec
push
lret
jle
xchg
sub
mov
mov
inc
xchg
hlt
test
lret
jne
mov
fisubl
cs
xor
inc
xchg
add
mov
cmpsb
xchg
xchg
roll
iret
mov
gs
in
sub
aaa
ss
inc
test
aad
and
frndint
in
or
jbe
push
mov
mov
adc
mov
xchg
or
pop
je
adc
add
call
jne,pt
cwtl
movsl
pop
ds
dec
sbb
repz
scas
rcl
fsubs
sbb
mov
xor
fcmovne
js
pusha
push
lret
insl
inc
popf
and
gs
mov
cmp
out
ret
pop
ja
jecxz
cmpsb
lds
aas
mov
ja
push
pushf
cli
loopne
dec
mov
shlb
inc
insb
mov
mov
lret
outsb
popf
inc
mov
lods
adcl
cli
adc
inc
dec
test
cmc
fimull
popa
jmp
mov
mov
fdivl
shrl
aam
gs
fcomps
rorb
adc
movsl
pavgw
test
lret
sub
scas
xchg
sub
sub
mov
lret
stos
xchg
xchg
out
call
jo
or
mov
hlt
addr16
cmp
xor
data16
or
mov
dec
pop
fiaddl
scas
mov
jge
divb
and
jnp
loop,pt
pop
sti
jbe
dec
sbb
clc
cmp
pop
lahf
lret
cmpb
loop
inc
bndldx
ficoml
push
flds
fidivrs
inc
std
imul
dec
pop
dec
pushl
inc
js
das
mov
jmp
out
fidivs
aaa
lret
sahf
cld
push
push
or
and
out
sub
rclb
inc
ds
in
push
push
add
lds
mov
rorl
stc
mov
out
addr16
xchg
jmp
mov
jne
scas
push
jo
xor
pop
push
test
shlb
add
iret
repnz
push
sbbl
add
jmp
lock
out
xor
mov
hlt
into
iret
fwait
adc
ds
xchg
push
pushw
push
shll
xor
das
jb
cs
stos
adc
addr16
inc
lret
dec
jae
dec
repz
ds
loope
push
pushf
and
adcb
xchg
pop
jae
mov
dec
jmp
jne
sbb
js
mov
ljmp
mov
cmc
pop
push
add
xlat
repz
mov
push
out
jbe
out
orl
inc
or
xor
fs
cs
call
add
subl
and
inc
sub
xchg
add
pop
movsb
out
cmp
fiaddl
push
sahf
addl
xor
add
dec
in
icebp
xchg
or
cli
int
add
pop
cmp
lods
fmulp
pop
xor
cltd
sub
ret
imul
aaa
push
jae
leave
stos
inc
mov
xchg
jge
jecxz
subl
dec
iret
jne
nop
das
pop
stos
dec
loope
out
fsubr
js
ret
es
bound
cmpsl
sahf
clc
sub
add
inc
mov
xchg
mov
or
xchg
in
hlt
xor
push
xchg
ljmp
mov
add
les
aaa
dec
in
in
mov
lret
mov
nop
xor
out
shlb
cmp
add
cs
fcoms
es
ljmp
stos
jae
sbb
sbb
and
cmc
imul
rcrl
cmp
mov
outsb
adc
inc
rcll
idivb
cmpsb
lock
sub
xor
fs
int
arpl
out
out
mov
cmp
in
mov
cli
es
push
inc
icebp
aad
mov
fidivrl
scas
push
inc
sbb
push
sub
or
out
les
xchg
adc
loop
pop
in
jne,pt
pusha
mov
jle
push
out
test
lods
sbb
leave
pop
pop
sub
inc
mov
dec
leave
xchg
xor
fwait
cli
lds
pop
dec
not
and
push
out
outsl
mov
inc
inc
mov
or
push
pop
inc
addr16
movsl
sub
mov
add
insb
xor
popa
sbb
rorb
sbb
xchg
sub
sub
je
bound
fwait
ja
andl
lcall
mov
aam
xor
mov
sub
clc
lock
inc
leave
pop
mov
jne
dec
stos
lahf
mov
ds
cmpsl
xchg
dec
adc
add
ret
aaa
push
outsb
pusha
inc
sti
cmp
fdivrs
inc
daa
and
dec
add
ss
clc
cwtl
push
out
jnp
shrb
shlb
cmp
push
imul
mov
fistps
out
movsb
or
dec
pop
sub
and
mov
out
test
lret
cmp
pop
jo
nopl
mov
movsl
push
dec
pop
push
mov
mov
pop
sub
jb
repnz
or
fldenv
inc
jge
and
stc
cmp
test
push
jb
lahf
mov
scas
mov
popl
xor
xchg
sub
dec
repz
mov
xor
jbe
addl
gs
xchg
xor
mov
fisubs
rcrb
mov
xor
sarb
out
and
mov
notb
dec
divb
nop
pop
cltd
and
pop
xor
jo
mov
int
imul
insb
pop
sti
xchg
arpl
iret
or
inc
or
adc
popa
fsubl
mov
andb
jae
jae
sub
les
dec
arpl
lock
mov
sub
sub
sarb
pop
mov
lods
push
lock
push
je
lods
and
adc
add
sbb
jl
aaa
push
out
jge
lods
mov
and
cmc
push
jecxz
inc
cltd
sub
xchg
jno
aas
push
mov
pop
mov
mov
pop
xchg
push
add
movsb
ds
ss
pop
je
iret
in
jmp
push
and
or
out
adc
xchg
out
mov
outsb
mov
aam
pop
aaa
xchg
cmp
pop
and
or
adc
pop
sub
arpl
aam
pop
sub
adc
dec
xor
cmp
lcall
dec
cwtl
nop
std
adc
pop
jne
or
add
cmp
fisubrl
scas
dec
sub
into
push
jno
jmp
test
xchg
adc
or
pusha
dec
mov
xchg
xor
ljmp
xchg
stc
jecxz
pop
add
sar
nop
add
outsl
loop
stos
pop
cli
mov
push
aad
mov
js
fdivrp
movsl
cmp
xchg
hlt
movsl
or
std
shlb
fildll
lret
jbe
add
xor
push
mov
scas
push
cmp
sbb
sub
mov
loop
mov
ss
push
cs
dec
inc
jmp
outsl
es
dec
inc
pop
adc
pop
or
scas
mov
push
or
outsb
xor
lods
xchg
lahf
insb
sub
cmp
jl
jns
add
adc
mov
dec
in
in
sahf
jne
shl
push
inc
and
mov
inc
xchg
sub
lods
and
rclb
mov
cmpsb
out
fsubs
into
imul
rorb
add
lods
push
mov
sbb
jo
pop
adc
inc
mov
mov
scas
dec
cmp
xchg
lret
xchg
lsl
dec
xchg
scas
jle
jmp
mov
xchg
mov
cmp
jne
ljmp
loope
fsubs
das
inc
mov
push
lahf
dec
out
push
dec
jmp
xor
inc
push
xor
mov
jns
je
sub
mov
inc
sub
pop
sbb
xchg
push
push
imul
cltd
je
xor
mov
add
dec
enter
test
in
into
xchg
pop
shl
xor
in
loop
repz
test
and
fisubl
and
mov
fwait
jo
sbb
xchg
stos
sub
sbb
outsl
les
test
adc
stos
ljmp
lock
addl
faddl
push
cltd
mov
push
pusha
cmp
rorb
inc
and
xchg
xchg
js
xchg
dec
mov
cmp
mov
ret
roll
jae
rorl
imul
fwait
subb
scas
test
or
and
mov
dec
pusha
pop
sarb
mov
mov
add
pop
sarb
es
and
push
inc
push
sbb
ss
pop
stos
fmulp
leave
push
popf
mov
adcb
pop
ljmp
pushf
pop
fwait
int
or
adc
adc
jp
or
inc
mov
je
jnp
sbb
mov
xor
inc
testl
les
jl
add
or
leave
jns
cli
outsb
fmull
stos
lahf
leave
sbb
push
or
xchg
lods
jl
mov
cmp
add
jae
scas
xchg
jp
mov
sbbl
xchg
cmp
cmpsl
inc
psubusw
ret
mov
pushf
jecxz
test
xchg
sub
dec
inc
mov
icebp
pusha
pop
xlat
ss
push
add
push
dec
inc
std
inc
stc
out
out
ljmp
repz
stc
fs
daa
lcall
cmp
in
fnstenv
inc
out
pushf
add
je
mov
sti
dec
orb
mov
jo
ficoms
aaa
aam
and
cmpsl
sahf
and
rol
jecxz
popa
cmp
loope
add
sub
es
xor
inc
stos
xor
jns
lret
lret
xor
pop
lock
mov
ficoml
fsubr
fnstsw
xor
lds
stc
stos
nop
mov
out
mov
mov
add
push
mov
fisttpl
xor
bnd
adc
hlt
leave
testb
xor
hlt
or
out
inc
dec
aas
gs
push
push
in
pop
in
sub
xchg
cmp
pop
add
int3
fimuls
jle
orb
inc
sub
xchg
and
mov
popf
push
mov
rep
inc
rorb
in
sarl
aam
inc
scas
and
pop
or
out
fildll
incb
cmpsl
mulb
cmp
sarb
push
popa
ja
fs
ret
sbb
rcrl
mov
scas
inc
mov
shrl
mov
imul
pop
mov
ficomps
push
call
fimull
popl
loop
push
push
idivl
xchg
xlat
pop
repz
ja
mov
inc
test
repz
dec
mov
ret
cmc
mov
aas
lret
push
insl
pusha
dec
pop
test
push
nop
sbb
fidivs
imul
js
daa
pop
inc
test
in
adc
xor
mov
mov
jge
loopne
out
mov
xor
xor
xor
push
xchg
jl
dec
sub
cs
mov
out
sbb
fadd
push
cld
arpl
xor
shrb
adc
push
jb
insb
jle
daa
sbb
fs
add
jnp
ret
aas
aaa
test
pop
imul
data16
lret
mov
sti
jb
loopne
xchg
daa
cmpsl
out
or
repnz
aaa
ret
xor
in
jg
mov
stos
and
and
faddl
push
rcrl
imul
shll
js
adc
popa
mov
stos
inc
cmp
cmp
mov
ret
add
movsl
pop
fsubs
xor
ret
sarl
xchg
dec
repnz
jns
adc
cld
inc
fistpl
popf
xor
push
lgs
outsl
and
xchg
xchg
sahf
in
push
test
mov
loop
mov
gs
xor
mov
bound
mov
pusha
fidivl
sub
dec
stos
and
add
mov
adc
xchg
adc
mov
insb
mov
mov
adc
mov
inc
mov
sub
and
push
fsub
add
push
scas
jno
pop
jo
dec
lret
dec
insl
inc
ljmp
inc
in
test
jb
cs
xchg
fs
lcall
out
addr16
pop
popa
lret
jg
es
mov
sub
out
or
jo
in
mov
imulb
inc
sub
xchg
add
cmc
add
test
adc
out
push
sbb
shr
das
pusha
outsl
daa
int3
bound
push
pop
pop
dec
rcr
mov
push
rcrb
call
cmp
lods
in
push
sub
adc
test
pop
add
sub
or
shrb
lret
data16
pop
inc
xor
cmpsb
jp
sub
movsl
mov
adc
lea
adc
lcall
xorb
mov
and
sbbb
jns
add
ret
lret
mov
mov
call
sub
dec
repz
stos
mov
fnstenv
jg
inc
int3
ja
push
xor
iret
add
out
xor
inc
pop
pop
call
and
incl
das
data16
add
shrb
jbe
mov
jb
dec
sub
js
jg
daa
test
cmp
lea
add
mov
mov
add
jo
test
fildll
mov
je
shl
sub
fdivl
mov
xor
rcr
cmp
mov
cmpsb
pop
inc
fcmovnu
sbb
pop
mov
cwtl
stc
mov
enter
outsb
imul
fs
mov
or
jno
sbb
xor
cmp
rclb
pop
hlt
mov
ja
sub
mov
add
stc
test
stos
ret
rol
fbstp
jnp
out
xor
addr16
jo
or
clc
scas
xchg
imul
in
and
sar
pop
jnp
and
fisubl
or
xchg
jb
and
cmc
pop
adc
sub
mov
lods
adc
lret
jns
inc
sahf
cmp
iret
es
fs
loope
lahf
xchg
cli
aas
push
sub
ljmp
inc
popf
inc
repnz
stc
dec
popa
gs
jns
test
aas
push
xor
inc
popf
pop
or
mov
cwtl
stos
mov
adc
push
fidivrs
adc
push
jle
mov
scas
dec
inc
js
shr
shlb
mov
ja
lea
out
fs
cmp
test
loop
mov
push
xchg
push
pop
xor
push
insb
xor
pop
out
imulb
inc
mov
sbb
fstp
inc
pusha
mov
mov
jg
pushf
mov
inc
outsl
mov
nop
stos
mulb
data16
and
xor
dec
sub
stos
test
pop
or
loopne
fdivl
icebp
jb
in
adc
es
ljmp
out
inc
cltd
cmp
lcall
inc
push
dec
int
out
js
inc
enter
sbbl
adc
mov
jne
sbb
add
mov
fs
bound
push
jmp
add
inc
jo
jb
imul
dec
adc
jns
mov
popa
lcall
mov
pop
dec
jmp
push
sub
pop
ja
mov
int3
out
jl
cmp
popf
jne
dec
lahf
sbb
shrl
lds
pushw
xor
bound
pushf
push
aad
push
xchg
sub
out
xor
jp
cs
addr16
or
and
insl
add
mov
andb
or
and
xchg
shlb
xor
dec
pop
dec
jnp
jg
mov
daa
sbb
test
fwait
cmpsl
addr16
je
or
fwait
xor
and
xlat
jmp
cmp
movsl
in
cmp
ret
pop
lods
pop
lahf
add
sar
mov
push
sbb
sbb
or
mov
roll
pop
out
sahf
movsl
push
jae
mov
std
or
outsb
inc
pop
inc
mov
aaa
imulb
orl
out
daa
ret
insl
sbb
out
andb
cmpsb
imul
or
jg
add
sbb
push
dec
aad
xchg
dec
xor
and
dec
and
loop
sahf
dec
cli
push
aas
push
dec
outsb
dec
pop
popf
pop
adc
mov
cwtl
mov
and
push
mov
orl
nop
mov
lds
push
jbe
fsubrs
lds
or
mov
dec
mov
pop
inc
sub
inc
repnz
xor
aaa
or
jae
aas
mov
fcomps
jmp
enter
aam
in
arpl
mov
out
adc
movsb
xchg
aaa
xor
xlat
jmp
pop
mov
lahf
mov
movsl
xchg
push
daa
mov
mov
lock
pop
inc
cmpsl
dec
arpl
or
push
dec
dec
lds
xchg
jle
sbb
scas
lahf
psrad
mov
and
add
ja
daa
into
jp
mov
mov
shrl
inc
insb
or
mov
pushf
mov
xchg
ljmp
bound
je
adc
jb
fsubrl
add
jbe
sub
js
test
lods
sbbb
fstpt
dec
loopne
xchg
sbb
and
scas
xchg
fsubs
jae
cmp
push
cmpsl
jg
xchg
sub
in
call
daa
aaa
xchg
inc
cli
or
testl
jns
inc
out
nop
pop
sub
mov
pop
inc
icebp
jecxz
jg
int
cltd
push
push
pop
test
dec
cmpsb
cmp
loop
les
pop
enter
out
cmp
mov
push
addr16
pop
data16
pop
add
out
cmp
cmpsl
ds
stc
pop
into
out
pop
sbb
loop
add
out
test
sub
popa
ljmp
mov
pop
lahf
sbb
and
dec
cmp
push
xchg
loopne
pushf
into
dec
popa
std
or
pop
adc
lock
div
mov
cmp
jo
mov
test
cmpsl
inc
push
in
pop
jbe
sub
jmp
call
jmp
repz
add
mov
clc
stos
mov
rcrb
dec
pop
mov
xor
pop
loope
xorb
popa
mov
xor
pusha
pop
and
mov
add
ja
mov
push
in
mov
ss
mov
and
incl
fiadds
inc
xor
imul
lods
sarb
add
cmp
lret
cmc
push
cs
out
rorb
pop
jb
icebp
into
pop
gs
inc
mov
sbb
cwtl
push
and
sub
out
aas
test
stc
inc
fbld
ret
pop
jge
test
or
push
add
test
push
enter
mov
or
pop
in
pusha
push
lods
cltd
sub
add
jne
sbb
adc
mov
int3
dec
xchg
push
fldenv
mov
jle
inc
test
enter
pushf
add
arpl
and
or
fldcw
mov
lret
cld
sahf
clc
pop
out
mov
adc
shll
lods
inc
inc
les
push
dec
pop
sti
popf
cmp
inc
lret
es
xlat
mov
lea
push
or
insl
cmpb
jge
dec
lock
outsb
jge
stos
and
subps
cmpl
es
fildll
mov
stos
add
dec
pop
fldcw
pop
aam
xor
push
add
pop
xor
mul
ret
push
inc
mov
mov
sbb
fistps
shll
out
adc
int3
stos
cmc
mov
daa
int
push
js
into
out
push
fs
test
xchg
add
lahf
test
leave
sahf
sbb
cmp
xor
pop
jecxz
or
inc
imul
push
aad
in
std
ret
repz
inc
push
xor
pop
daa
or
mov
lea
mov
cmpsl
mov
loopne
jecxz
notl
cs
addl
or
aaa
aam
push
outsl
push
xchg
fnsave
in
stos
inc
sbb
and
ds
cmp
sbb
or
sti
lcall
out
popf
jno
cmc
mov
xchg
xchg
sbb
pusha
sbb
test
nop
fistpl
xlat
jmp
cmp
aas
ljmp
jl
cmp
sub
pop
sahf
andl
sbb
push
jno
enter
adc
adc
ja
and
inc
lret
mov
pop
clc
popa
enter
cmp
out
outsb
jp
cmp
and
lds
hlt
xor
cltd
fbstp
mov
popa
mov
pop
test
scas
inc
lcall
cmp
lahf
jle
inc
insl
je
hlt
mov
imul
sbb
mov
sahf
lcall
cs
sub
mov
jae
or
outsb
or
jge
stos
call
stos
pop
cmc
shrl
cmp
xchg
call
sbb
xor
dec
jle
mov
data16
adc
test
push
scas
xchg
leave
mov
inc
mov
fcomp
lret
add
scas
call
iret
jecxz
inc
dec
push
imul
push
sbb
fists
std
mov
movsb
pop
outsb
das
mov
cli
or
ja
insl
dec
mov
fnstsw
push
inc
cmpb
and
fnsave
mov
add
mov
jb
outsb
jp
sub
or
push
jns
loope
bound
test
out
out
test
add
or
test
xchg
sub
movsl
movsb
aad
rcrl
imull
pop
in
jmp
sbb
or
push
sub
jg
les
loopne
sub
jnp
dec
les
fdivp
mov
out
scas
dec
jg
or
or
cmpsb
cmp
fwait
enter
cld
cmp
repnz
fldcw
cmovge
mov
and
jg
iret
fildl
xchg
aad
pushf
repz
repnz
dec
adc
jg
adc
je
add
imulb
shrb
cmovns
push
std
xchg
pop
xor
ljmp
nop
mov
or
ret
and
cmp
inc
ret
add
dec
lahf
sti
and
add
es
aad
dec
adc
dec
pop
popf
inc
iret
pop
lock
movsl
fstpt
sbb
jle
jbe
inc
push
sahf
inc
fmull
mov
ja
or
jnp
mov
sbbb
fsubl
inc
pop
add
clc
wbinvd
loopne
leave
je
xor
push
dec
fdivrl
jp
cmc
mov
mov
das
fs
int3
lret
hlt
rcrl
arpl
inc
bound
stos
jl
pop
xor
mov
mov
insl
out
cmp
sbb
sub
aas
mov
insb
lret
cmp
mov
aad
lods
fnstsw
aas
dec
adc
mov
jb
mov
pop
lds
push
inc
xchg
xor
fbstp
push
sbb
jb
test
push
push
jl
test
and
lea
xchg
call
mov
push
mov
into
pop
jb
sbb
lods
xchg
inc
or
push
jmp
mov
xchg
test
filds
into
ficomps
ret
mov
jl
adc
into
cmp
sub
sub
scas
scas
andb
and
mov
fsubrs
andl
insb
push
fidivl
adc
ret
imul
adc
sub
into
cli
dec
mov
in
adc
jbe
xchg
push
xchg
lods
rcll
cmp
pop
mov
mov
outsl
lds
mov
xor
dec
hlt
xor
in
test
shrb
dec
and
scas
xchg
pusha
mov
idivl
adc
mov
adc
push
push
jle
shrb
mov
loop
rolb
jge
push
xchg
mov
dec
mov
ss
mov
and
mov
jmp
aam
ret
sar
mov
adc
pop
cmp
jg
inc
in
mov
xor
xor
push
sahf
push
push
mov
bound
or
jns
rdpmc
adc
pop
push
dec
fldl
and
and
inc
sbb
std
hlt
adc
sbb
lods
xor
in
jns
jae
mov
jle
test
addr16
loop
cmp
gs
dec
xchg
mov
bound
push
sbb
test
dec
arpl
pop
out
insl
push
adc
fsubrl
jle
stos
mov
pop
repnz
add
aas
cmc
loope
or
sub
jp
sub
dec
iret
scas
ljmp
sarb
test
test
pushf
sub
mov
cmp
test
into
push
and
popa
cmp
mov
mov
push
xor
inc
xchg
xchg
adc
xor
call
lds
cwtl
decb
scas
or
sbb
out
sbb
push
js
test
fnstcw
mov
lret
cwtl
leave
xchg
neg
icebp
cmp
roll
cmp
mov
mov
sbb
mov
or
je
pop
jbe
mov
push
rcrl
sub
hlt
jmp
scas
add
cmpsl
jmp
sub
push
fistps
cltd
lea
cmc
sbb
xchg
cli
xor
dec
mov
adc
in
leave
mov
add
hlt
adc
dec
lahf
loop
cmp
and
fs
imul
pop
mov
test
lcall
gs
xor
shlb
dec
inc
test
xchg
jno
mov
pushf
push
inc
shr
loop
fstpt
int3
arpl
or
sub
inc
movsl
aaa
lea
fdivp
push
pop
pop
dec
sahf
pop
cmp
xchg
lods
sti
dec
dec
and
jne
ss
push
insb
add
mov
imul
jg
add
push
enter
leave
data16
xor
cmp
sub
out
push
gs
or
adcb
push
rcrl
js
mov
loopne
xchg
pop
cmp
hlt
push
dec
mov
mov
mov
bound
cs
insb
mov
flds
inc
mull
sbb
sub
hlt
pop
ljmp
xor
or
les
xor
jg
push
or
mov
rolb
jp
inc
imul
stos
sbb
sub
mov
dec
shl
mov
fildl
inc
addb
jge
and
push
mov
fldt
pop
in
mov
add
fstpl
sub
fdivrl
call
aam
jle
gs
fisubrl
xchg
out
sub
sbb
xchg
pop
mov
out
jb
aaa
dec
jecxz
decb
inc
sub
xor
out
les
pusha
or
pop
insl
inc
pop
or
push
cmp
loopne
xor
rclb
xchg
out
pop
scas
sbb
loope
push
aas
leave
push
xor
mov
sub
or
xchg
cmp
cltd
lahf
repnz
push
out
xor
out
jge
aam
popf
stc
sub
shrb
lods
ss
sub
and
cmp
pop
fbld
dec
or
imul
mov
in
lcall
adc
pop
jbe
out
int3
fiadds
shll
lods
lods
add
pop
sbb
dec
lods
cmp
shlb
sbbl
leave
push
and
or
mov
ficoms
scas
pop
xor
xchg
adc
fnstcw
enter
or
jle
or
cli
dec
imul
icebp
mov
jns
popf
clc
dec
adc
dec
es
nop
jo
hlt
jl
dec
lret
adc
jae,pt
je
icebp
dec
call
pop
sub
and
sbb
xor
std
mov
pop
push
mov
cwtl
into
nop
daa
add
push
je
push
pop
jb
sarl
dec
pop
std
add
jl
cli
fnstcw
std
adc
roll
test
lcall
pop
ja
cmp
div
lret
ljmp
dec
inc
in
jmp
rcrl
cmp
dec
pop
mov
and
lods
outsb
mov
int3
mov
dec
mov
and
jg
test
pop
rorl
pop
cmp
push
into
sbb
arpl
mov
out
pop
pop
lods
sti
adc
xor
jl
adc
movsb
loopne
in
les
jbe
in
push
xor
mov
enter
or
mov
cmpsb
sub
movsl
imul
adc
shrl
or
pop
out
dec
jl
mov
xchg
adc
pushf
cwtl
daa
stc
inc
insl
sbb
stos
fistpl
or
test
int
mov
daa
hlt
add
xor
test
mov
inc
cmp
push
mov
in
cmp
into
and
add
lret
and
in
mov
and
pop
das
insl
fstps
pop
mov
ret
mov
pop
push
push
pushf
jp
addr16
cltd
mov
mov
inc
insb
pop
in
push
aas
shlb
pop
icebp
jnp
mov
sbb
inc
stc
popf
rcl
cmp
popa
jp
sub
mov
hlt
adc
jg
js
iret
lock
inc
xchg
xchg
je
push
or
fidivrs
popf
fs
js
dec
stos
sbb
jge
test
xchg
mov
adc
ret
adc
add
inc
push
rorl
in
xlat
je
int3
mov
insb
test
repz
aam
mov
mov
sbb
sbb
mov
mov
popa
jmp
jo
setbe
inc
jmp
sub
mov
jbe
push
push
inc
xchg
mov
aaa
xchg
fs
lods
and
mov
loop
pop
xchg
outsb
mov
add
lock
fsubl
push
cmp
mov
lock
test
cmp
pusha
jle
jmp
jle
add
mov
dec
or
mov
js
and
stc
das
pop
fdivrp
popa
mov
rol
lret
jne
call
and
fstpt
in
ss
sti
push
sub
fimuls
test
into
jae
andb
or
or
imul
mov
dec
mov
mov
and
cld
jnp
mov
out
inc
frstor
lret
popf
scas
adc
out
aas
test
pop
ja
xchg
pop
fmuls
fisttpll
loope
mov
inc
cmp
inc
inc
ds
xchg
insb
adc
push
mov
jge
decb
jle
xchg
sub
pushf
cli
out
xchg
insb
test
jbe
ss
repz
push
mov
jmp
or
repz
adc
test
xor
stos
sbb
sbb
sub
data16
mov
cmp
lods
test
in
add
scas
inc
cmp
dec
fbstp
int
fldcw
adc
mov
popf
cmp
jmp
out
mov
inc
bound
pushf
scas
mov
pop
shl
mov
nop
clc
push
fdivrl
and
ror
divl
fistpll
or
mov
sti
lea
clc
cmp
sbb
pop
pushf
jle
jmp
adc
add
sbb
adc
mov
out
cmpsl
cmpsl
or
and
mov
mov
mov
inc
call
test
out
push
sub
mov
adc
data16
jno
push
movsb
jb
cmp
push
iret
test
pop
sub
imul
sar
lahf
lds
pop
mov
push
mov
fdivrs
rcr
push
lock
fstpt
mov
cmp
push
mov
sub
loope
shr
jno
xchg
fnsave
push
pop
ret
push
fldenv
push
add
clc
scas
push
cwtl
scas
mov
or
outsl
in
mov
mov
jb
shlb
lret
lret
push
xor
pop
push
cmpsl
mov
pusha
cmpsl
jle
int3
stos
test
xor
xchg
inc
insb
out
ret
mov
or
insl
add
stc
out
mov
add
aad
out
aam
adc
mov
and
cltd
std
sub
rorb
mov
xor
and
nop
add
jp
xor
jne
sub
or
jle,pn
and
inc
push
sub
adc
out
lds
push
xor
mov
in
and
cmp
inc
cs
add
scas
jle
mov
push
or
or
xchg
mov
je
icebp
xor
xor
sub
mov
mov
fisttps
inc
xchg
mov
in
aas
push
inc
out
int
jle
leave
shlb
popf
scas
push
shl
ja
fwait
into
sub
nop
ret
mov
jnp
sub
dec
enter
bound
shrl
loop
dec
loope
adc
stos
cmp
imul
mov
shrb
cwtl
sahf
scas
int
int3
cmpsb
cmc
mov
jle
pop
icebp
aam
cmpb
subb
icebp
sub
int
cmpsb
out
mov
mov
out
int
loop
lock
mov
push
sbb
fnstcw
and
inc
lods
stc
xlat
pop
stos
xor
ffree
test
andb
lret
jae
int3
mov
pop
push
sbbb
adc
jg
inc
daa
cmp
pop
repz
loope
jecxz
cwtl
lea
jne
fidivrs
fcompl
fmuls
xchg
lcall
pushf
jp
xchg
sbb
xchg
es
pop
into
and
jle
es
insb
ljmp
test
sbb
std
ds
and
and
pop
ja
addr16
cld
mov
adc
pop
xor
mov
mov
xchg
adc
repz
sti
fwait
xchg
es
pusha
push
je
mov
inc
daa
stc
sti
js
or
in
adc
mov
jns
jno
jne
inc
and
out
mov
ljmp
add
cmpsl
push
or
imul
and
cmovnp
lea
out
xchg
push
or
mov
inc
jle
xchg
add
adc
sbb
push
outsb
dec
adc
inc
inc
pop
repnz
pop
daa
sahf
adc
jb
ss
movsl
mov
xchg
mov
sahf
jmp
pop
mov
cli
popa
mov
xchg
pop
icebp
add
popa
pop
jbe
add
bound
rcrl
xor
push
mov
push
mov
cmp
rcrb
addb
cmp
sbb
roll
mov
jge
xchg
shl
addr16
cmp
jno
mov
adc
daa
cltd
aaa
mov
je
stc
outsb
adcl
jmp
mov
fists
enter
jp
mov
jp
cmp
aad
lret
or
std
movd
push
inc
cmp
imul
mov
push
push
jge
dec
mov
xor
imul
mov
xchg
mov
mov
sbb
xchg
pop
mov
psrlq
cmp
in
out
mov
ljmp
push
jl
pop
repnz
mov
push
pop
loop
xor
xor
push
in
cmp
aaa
mov
push
rorl
and
mov
jp
xor
mov
mov
lcall
cwtl
popa
pop
fstps
loop
imul
adc
mov
aad
fwait
mov
mov
jl
ret
adc
fadd
mov
clc
xchg
sub
jno
aaa
fdivrl
sbb
daa
or
sarb
and
ret
xchg
cmp
std
jmp
fists
in
ret
and
fucomip
mov
add
lods
hlt
ret
mov
jge
mov
cmp
je
lret
push
es
mov
mov
xchg
fimull
nop
inc
stos
mov
mov
sbbl
xlat
or
xor
lret
fisttps
es
lcall
orb
push
adc
sahf
and
xchg
mov
sarb
lret
ret
lock
or
out
test
prefetchw
sbb
xchg
cwtl
popa
lods
mov
mov
cmp
cli
out
inc
sbb
sbb
je
add
mov
out
stc
xlat
mov
jo
out
and
rcrb
lods
addl
cli
addl
loope
fwait
mov
fnstcw
add
mov
fdivp
scas
shl
enter
decl
out
sti
push
xchg
xchg
cltd
jae
mov
hlt
sub
xor
pop
xchg
hlt
sbb
add
movups
into
xchg
pop
ja
xchg
sbb
rolb
mov
imul
xor
pushl
repnz
cmp
jp
out
enter
mov
push
insb
out
dec
mov
xchg
mov
jns
pop
aas
adc
stc
xchg
pop
frstor
sub
cs
sbb
lahf
add
push
push
jl
push
lret
mov
outsb
lahf
outsl
sbb
popa
pop
das
rclb
mov
mov
push
int3
loopne
fmuls
jl
add
bound
fsubrl
ret
fbld
test
adc
mov
repnz
inc
lock
divl
daa
lret
cs
mov
jnp
or
ja
sbb
sbb
imul
fisubrs
repnz
xor
push
inc
movsb
xor
popa
pop
pop
int
sub
xor
push
jae
push
mov
push
jp
gs
fidivl
sub
clc
adc
pop
call
inc
cmc
inc
push
pop
leave
sbb
mov
fldt
adc
dec
mov
add
and
push
ret
pcmpeqw
cmp
mov
ror
fstl
lds
popf
loop
mov
pop
fs
nop
pop
cmp
sbb
nop
inc
lret
pop
rcrb
push
dec
in
cmp
jg
call
mov
sarb
inc
stos
cmp
adc
jns
iret
rcl
and
fldt
or
xor
xchg
mov
mov
mov
inc
es
mov
inc
js
push
pop
and
jl
lds
call
imul
popf
pop
adc
and
into
std
mov
lret
roll
aad
roll
stc
inc
aad
pop
add
sbb
cmp
push
shll
call
mov
ja
jns
cwtl
and
test
sti
nop
jp
ret
cmpsb
andl
aas
add
jbe
fidivl
mov
sub
sub
mov
xchg
mov
mov
adc
cli
int3
jne
in
add
xchg
add
test
mov
add
add
leave
loope
xchg
or
inc
data16
cli
push
addr16
inc
push
mov
dec
pop
or
xchg
jge
cmpsl
das
jmp
fbld
aad
aam
ss
imul
push
inc
testl
add
inc
dec
daa
repz
repnz
dec
rcl
leave
or
std
or
xor
mov
int3
and
push
cld
mov
xchg
adc
int
sbb
outsb
lcall
sub
popa
and
enter
push
jecxz
fsts
je
mov
cltd
bound
mov
jp
sti
stos
push
or
inc
stc
enter
daa
pusha
or
mov
mov
sarl
sub
into
push
xor
xlat
fldt
hlt
cs
ds
out
shrb
lcall
test
cmpsb
inc
out
movsl
push
adc
dec
cmp
or
sub
movsl
dec
sub
or
sub
fdiv
sbb
or
sub
mov
push
mov
xor
xchg
call
xchg
lock
sub
out
adc
jge
movsb
repnz
add
pop
pop
int
outsb
sbb
mov
dec
test
mov
push
test
pop
ret
mov
testl
and
in
fadds
xor
jp
cmpsb
pop
xor
enter
cmp
lcall
in
xchg
dec
fwait
cmpsl
in
lea
or
repnz
push
popf
xlat
dec
and
ds
sbb
pusha
int3
sub
pop
mov
divb
and
add
inc
sbb
add
addl
pop
outsl
jmp
pop
scas
pop
and
sbb
shrl
cmpsb
add
sbb
push
xorl
sbb
push
xor
push
aam
and
dec
call
cs
pop
scas
mov
in
loopne
push
in
xlat
pop
mov
outsb
pop
imul
test
addb
mov
and
mov
scas
mov
dec
mov
inc
xor
dec
fmul
fistpl
cld
xor
cmp
cltd
or
pop
lods
popa
insl
add
pop
out
jge
cld
mov
mov
jge
inc
pusha
dec
out
pop
or
testl
int3
dec
mov
into
movsl
in
lods
cld
dec
push
pop
out
mov
fnstenv
or
sarl
test
int3
dec
shll
aam
pop
push
in
nop
xchg
fnstenv
aaa
out
aas
movsw
test
aas
jge
pop
sub
jno
dec
lock
in
mov
mov
pusha
mov
mov
ret
jnp
cld
xchg
lahf
pushf
sbb
imul
cmp
aaa
xor
xchg
pop
pop
xor
push
stos
inc
mov
popa
jmp
mov
rolb
xor
dec
pop
push
push
repz
inc
mov
int
adc
pop
inc
jne
inc
sub
in
or
hlt
jp
jae
roll
dec
pop
rcr
addb
pop
jmp
sbb
push
iret
clc
lret
xchg
add
adc
jecxz
mov
orl
mov
or
dec
mov
xlat
push
dec
xchg
cmc
cmp
or
outsl
cmp
mov
aas
shl
push
lds
dec
push
jno
pop
hlt
dec
push
pop
ds
xor
mov
rcll
mov
mov
aad
sub
sbb
and
sub
xor
pop
dec
and
aam
iret
shl
cld
pop
out
or
outsb
std
dec
mov
inc
jmp
cmp
andb
cwtl
jl
cmp
xor
xchg
xchg
imul
sub
xor
pop
clc
inc
aam
jge
sahf
xor
mov
icebp
push
das
insb
rcl
xchg
stos
ret
cwtl
daa
inc
jo
dec
dec
sbb
dec
lods
js
mov
and
shll
mov
ficompl
dec
std
add
movsl
push
dec
cmpsb
adc
pop
repz
jne
mov
dec
mov
sub
pop
mov
icebp
shll
fisubrl
mov
mov
imul
pcmpeqw
lods
mov
ss
push
stc
mov
ficoml
stos
push
aas
mov
mov
mov
cmp
movsl
hlt
mov
adc
adc
push
add
in
mov
cmpsb
sbb
ret
mov
loopne
imul
dec
sbb
mov
pop
sub
add
lock
sar
fucomi
push
sbb
xlat
repz
pop
cmp
sahf
mov
dec
push
xor
repz
lret
jne
inc
dec
jmp
mov
inc
jle
adc
sahf
push
mov
stos
scas
mov
pop
inc
or
jmp
repz
stos
xor
fwait
sub
shr
inc
lea
aad
movsb
sub
sub
or
sti
jae
dec
push
aaa
pop
xor
adc
das
lds
mov
mov
mov
out
into
int3
adc
fisubs
fnstcw
cli
scas
enter
fdivl
push
clc
dec
add
jno
lahf
push
call
xor
cltd
or
inc
sbb
push
mov
adc
stos
add
sub
pusha
cmc
mov
dec
xor
imul
push
out
mov
jbe
sub
cwtl
call
aas
xor
mov
aas
cmp
push
mov
xor
lcall
jmp
push
popl
je
lods
fdivp
or
push
xor
dec
sarb
jns
je
pop
cmpsl
jns
mov
movsb
fistps
imul
iret
inc
fdiv
cmpsb
sub
lret
fstpl
xchg
cmp
jecxz
xor
aam
pop
lods
cmp
xchg
scas
rcll
jbe
shrb
enter
cmc
filds
jg
out
movb
cmp
std
out
test
mov
xchg
clc
push
fistpll
xlat
movsb
repnz
inc
jge
orb
push
sub
rorb
nop
testl
pop
jg
or
mull
sbb
dec
and
and
imul
stos
jno
sahf
clc
pop
ja
fldcw
mov
std
jl
scas
call
out
repz
push
mov
shrl
inc
data16
adc
push
xor
mov
push
jbe
aaa
dec
enter
pop
sub
xchg
hlt
or
push
sbb
loop
popa
xor
gs
cmp
mov
mov
jb
jmp
push
xchg
xor
cmp
adc
or
loop
jbe
mov
or
inc
aas
stc
xchg
jge
sbb
std
pop
leave
das
jbe
cmc
mov
fs
fcmove
jbe
and
jle
sub
xlat
dec
adc
in
mov
mov
or
out
add
push
insl
xlat
cmp
test
mov
jle
jge
je
gs
jne
jl
xor
and
call
andw
inc
ror
sbb
fisttpll
pop
lds
or
mov
cmp
in
inc
cwtl
in
pop
pop
int3
inc
push
gs
data16
mov
xor
test
and
jecxz
or
and
sti
fwait
push
cld
fisubs
xor
popf
cli
jmp
xor
and
xchg
sub
mov
push
int
mov
inc
inc
cld
xchg
call
jns
sub
or
dec
shll
sbb
cmp
cmp
test
push
aas
add
mov
dec
push
dec
dec
mov
scas
icebp
insb
pusha
cmpsb
shlb
jg
mov
fldenv
pop
or
gs
pop
xchg
add
xor
jle
iret
dec
and
xorb
fisubrl
out
jbe
out
call
cld
outsl
jnp
mov
fidivrs
test
adc
pop
jmp
sub
inc
sub
dec
jle
adc
xor
sbb
push
mov
adc
cmp
add
dec
loope
and
adc
jg
and
comiss
jmp
leave
xlat
sub
mov
icebp
cmp
jecxz
pusha
cltd
pop
jmp
add
push
mov
mov
adc
jmp
push
lea
pop
cmp
in
mulb
dec
inc
fcmovne
les
es
scas
push
or
les
mov
mov
sahf
aas
pop
or
les
in
xor
mov
xor
into
pop
popa
loopne
popa
adc
xchg
pop
test
call
outsb
adc
fsubr
sub
nop
loope
xchg
xor
mov
scas
mov
loopne
popa
dec
xchg
stos
inc
mov
and
ljmp
lods
clc
cmpsb
sub
cmc
dec
xor
js
fucomip
fisubrl
inc
scas
mov
hlt
mov
xchg
jns
adc
adc
ret
mov
push
arpl
jno
inc
sarb
bound
mov
add
shlb
sbb
add
loop
insb
push
das
inc
jmp
sbb
nop
or
cmpsb
lret
jns
cmp
inc
pop
sahf
test
mov
loopne
dec
fidivs
notb
cvtps2pd
or
int3
test
cmc
int3
cli
mov
jne
jge
inc
xchg
outsb
or
jo
xchg
push
or
es
dec
cmp
xchg
ljmp
jl
jg
or
es
dec
inc
or
cmpsb
cmp
aam
les
dec
andb
pop
add
pushf
popa
cmp
add
push
sbb
leavew
je
mov
cmp
std
pop
addr16
pushf
pop
inc
pop
jmp
outsb
pop
pop
popa
add
mov
xchg
sbb
scas
inc
mov
cmp
adc
push
or
pusha
add
movsb
fdivrl
rcll
xor
mov
mov
push
pop
sub
mov
jp
ja
insb
xor
repz
shlb
sahf
dec
pop
jne
xchg
push
xchg
popf
mov
popa
mov
sub
sarl
lcall
mov
int3
inc
adc
sub
dec
loope,pt
gs
pop
sbb
icebp
adc
xor
dec
jle
jnp
pop
outsb
mov
popf
xor
and
mov
mov
jb
pop
movsb
pop
mov
push
loopne
or
out
xchg
xchg
xchg
sub
es
mov
mov
loopne,pt
pop
scas
xor
jle
xor
int
fsubl
pusha
shrl
push
fwait
inc
xchg
jbe
sub
lret
mov
mov
adc
mov
or
imul
sub
out
push
or
mov
cmc
cmp
movsl
xor
repnz
push
out
push
sti
add
je
daa
xor
add
dec
sub
das
xchg
sbb
mov
out
sbb
sbb
jl
stos
test
and
push
xchg
mov
fnsave
or
std
mov
adc
incb
das
jmp
cmp
fwait
mov
int
popl
xchg
jg
or
sahf
fwait
sbb
sbb
mov
cwtl
lret
sahf
test
mov
dec
mov
fsubr
js
aad
and
repz
mov
pusha
pusha
lret
imul
mov
mov
test
sti
scas
addr16
pusha
std
insl
pop
xor
mov
shrl
loope
or
bnd
or
or
rcll
push
sub
shlb
test
jns
stc
mov
sub
sub
push
cmp
and
lods
pop
add
cmpl
fadds
sub
xor
orb
jbe
loope
shlb
inc
sarl
in
call
or
dec
test
xchg
lock
cwtl
jmp
call
scas
mov
scas
and
test
jb
scas
xor
push
or
sbb
insl
push
sub
cmpsb
jge
jbe
dec
fisubrs
js
hlt
dec
push
shll
mov
cltd
mov
jle
stos
dec
in
std
inc
adc
lahf
ljmp
lods
clc
mov
xor
xorl
orl
outsb
inc
fs
jo
ljmp
lahf
fwait
ss
fstl
addr16
push
inc
push
jecxz
add
adc
mov
and
andl
cmpsl
jno
dec
out
mov
jb
or
fstps
mov
pushf
sub
out
repnz
xchg
mov
cmpsl
mov
sub
sbb
aad
mov
push
jge
shlb
and
adc
das
sti
pop
pop
xor
lahf
ret
xor
jmp
pusha
pop
fsubrs
push
mov
movsl
pop
jle
dec
pop
cmp
aas
es
cmp
jp
hlt
pop
fisubs
stc
xchg
aad
mov
inc
push
es
gs
jl
mov
jecxz
inc
int3
out
lock
mov
rclb
mov
pushf
adc
xor
sub
add
lods
shlb
cltd
insb
sbb
push
xor
adc
bound
jge
mov
xor
cmpsl
push
jmp
xor
test
jbe
movsl
jo
arpl
jg
ss
sahf
fdivr
enter
mov
and
rolb
xchg
jmp
int
inc
fs
test
cwtl
out
cltd
dec
mov
mov
pop
sub
mov
pop
fwait
in
xchg
jno
nop
inc
fbld
fistpll
sbb
adc
je
pop
xchg
mov
sahf
sub
movsl
sub
inc
daa
mov
mov
bound
pop
rcl
or
and
dec
cltd
arpl
lods
in
fsubl
mov
repnz
test
cld
jae
jle
xchg
mov
lea
dec
pop
push
cmpsl
pop
mov
jmp
mov
bound
mov
les
xor
push
cmpsb
cmp
mov
shlb
cmc
not
push
and
or
stos
xchg
loopne
pop
fwait
ds
xchg
inc
clc
imul
std
movsb
les
xor
movsl
movsl
dec
in
test
call
incl
jno
inc
popf
cmp
hlt
cmpl
popl
bound
inc
movsb
lock
cs
add
daa
data16
xchg
testb
in
in
sti
push
pop
xor
dec
inc
mov
gs
outsl
enter
dec
or
xorb
addl
mov
loopne
add
push
add
nop
sbb
pop
rol
mov
imul
lahf
out
jp
in
mov
mov
scas
cmp
shlb
rorb
imul
cmp
xor
jae
in
pop
xchg
inc
or
std
fsubr
jge
xchg
ja
clc
mov
dec
call
ror
repz
sti
loop
sub
cwtl
test
lcall
cmpsb
pop
cmp
cltd
arpl
popf
or
push
sbb
mov
sbb
jns
das
inc
gs
add
xchg
mov
movsb
mov
enter
insl
pop
add
fmuls
stc
popf
mov
jmp
sub
bound
sub
mov
out
insb
enter
insb
cmpsb
xchg
call
aas
jp
cld
and
pop
addr16
pusha
mov
fildl
mov
add
cwtl
lods
xchg
inc
pop
dec
lahf
jbe
adc
int3
xlat
mov
sub
nop
pop
fdiv
aam
mov
xlat
or
imul
sarl
dec
incl
shlb
fimull
cltd
sub
jp
cmp
pop
mov
pop
xor
push
out
push
out
mov
mov
inc
mov
insl
xlat
mov
cmpsl
stc
int3
pushf
jae
jmp
icebp
jno
cmpsl
sub
test
shrb
mov
nop
jb
leave
sub
pop
cld
test
dec
std
js
pop
stos
aam
loope
mov
insl
and
outsb
mov
stc
push
div
fiadds
rol
mov
pop
aam
dec
fdivrl
mov
and
daa
cmc
mov
cld
nop
rcrb
mov
xchg
mov
push
ja
push
aaa
hlt
adc
int
xor
xor
mov
pop
cmpb
add
jecxz
lea
push
ds
sbb
inc
hlt
in
subl
or
add
scas
push
arpl
stos
and
or
shrl
lock
fwait
cmp
lods
xor
xor
dec
cld
mov
lds
ljmp
adc
sbb
add
aad
mov
pop
cmp
mov
push
sub
out
mov
fsin
fistpl
sub
rcr
mov
lcall
inc
jae
cs
or
dec
mov
push
into
xor
push
add
push
inc
rcrb
push
and
dec
js
and
imul
lea
push
sbb
decb
fldl2t
sbb
pop
mov
out
shll
mov
aam
mov
cmp
inc
inc
into
push
mov
push
add
jae
movsl
mov
ljmp
jnp
jmp
std
sbb
xor
in
xor
adc
mov
mov
xchg
dec
loope
lcall
push
test
add
sbb
out
das
std
and
jl
pop
cltd
sti
lahf
jae
stos
dec
pusha
cmp
jbe
cmpsb
js
arpl
xor
popf
pop
pop
push
in
orl
xor
dec
fs
leave
pusha
jnp
dec
shr
adc
add
cmpsl
or
int
xchg
jmp
iret
push
iret
or
das
dec
gs
xchg
push
mov
sub
fisubs
mov
scas
pop
lret
outsb
sub
jmp
arpl
dec
int
push
ljmp
and
out
mov
mov
sbb
in
sahf
movsl
cmp
dec
mov
add
jmp
mov
jb
ret
lods
sbb
cmp
dec
push
pop
pop
mov
xchg
jns
and
loope
movsb
adc
stos
inc
jno
scas
inc
adc
jge
mov
or
cmp
ja
fdivs
mov
fidivl
das
js
inc
adc
push
inc
gs
lock
xor
xor
sub
sub
inc
lods
xorb
mov
push
jbe
adc
pop
bound
ljmp
fidivrs
daa
faddp
loope
xchg
push
xor
fsubrs
jne
cmpsl
mov
fwait
insl
lods
repnz
pop
push
jb
xchg
adcb
in
stos
push
jne
cmp
push
clc
stos
adc
faddl
cwtl
and
out
out
hlt
fldt
or
add
and
fisttpll
ja
mov
pop
xor
out
mov
aaa
loopne
xor
in
call
xor
hlt
stos
sti
aad
mov
stc
pusha
ss
xor
dec
loope
rcrb
inc
arpl
adc
xchg
inc
sbb
sbb
sbb
inc
jo
sbbl
and
shll
in
cwtl
rcll
push
aas
fsubrs
clc
mov
cmc
mov
clc
cmp
and
addr16
scas
leave
and
add
sbb
mov
stos
aad
loope
leave
test
je
inc
mov
and
iret
adc
call
test
divl
imul
cmc
mov
inc
or
inc
jl
outsb
xor
add
imul
lcall
sub
imul
push
jae
addr16
inc
loopne
inc
pop
scas
adc
pause
aas
lods
cmp
ret
outsb
call
dec
push
sub
dec
mov
stos
or
sub
xor
lret
jne
addr16
dec
out
test
and
loope
test
sti
mov
push
adc
mov
push
mov
add
outsb
enter
push
push
fistpll
pop
decb
es
sarl
jle
jo,pt
mov
push
xchg
xchg
test
cmp
xchg
stos
mov
inc
sarb
lea
push
leave
cmpsb
mov
and
mov
mov
sub
cli
clc
sbb
sub
push
lods
dec
dec
pushf
xchg
call
push
xchg
sbb
pushf
iret
mov
pusha
cmp
inc
push
leave
adc
aam
test
jnp
mov
add
inc
sbb
xor
outsl
and
sub
nop
and
in
test
mov
cwtl
mov
sti
pop
aas
es
fmull
mov
sbb
idiv
test
jle
mov
push
xor
testb
out
sbb
mov
sahf
in
lcall
sahf
adc
sarb
out
and
pushf
repnz
and
fisttpl
std
or
es
and
lret
mov
xor
cmpsl
pop
mov
dec
insl
scas
scas
xchg
sub
cmp
mov
mov
lahf
bound
shlb
andb
mov
mov
in
push
out
bsf
lahf
mov
dec
jp
pop
jl
xchg
lods
jge
jne
shrl
lea
pslld
pushf
add
lret
xor
mov
cmpsb
inc
scas
dec
dec
iret
fs
cmp
inc
cld
or
sbb
pop
dec
or
scas
dec
imul
jmp
jbe
scas
or
xchg
cmp
aam
mov
fdivrs
lds
mov
aad
jns
popf
push
fsubrl
icebp
movsl
icebp
movsl
push
loope
int3
inc
test
push
roll
lahf
lds
jmp
fists
sbb
add
mov
jae
cmpsb
mov
pop
bound
aam
es
dec
mov
shlb
sbb
out
insl
popa
mov
test
ficoms
xchg
ss
jne
jg
jecxz
jb
xchg
fcomp
dec
xor
gs
mov
adc
push
pop
hlt
fnsave
adc
lea
xor
movsl
mov
dec
pushf
add
repz
inc
dec
je
cli
push
roll
cmp
push
xchg
addb
iret
jp
and
pop
push
lret
add
into
das
xchg
bound
mov
mov
push
mov
das
mov
cmp
repnz
data16
movsb
inc
cmpsb
sub
pushf
scas
out
mov
out
cmp
sahf
test
xchg
and
lcall
mov
jecxz
dec
mov
sahf
sub
mov
dec
jnp
icebp
mov
stos
and
ja
fcmovb
sub
daa
lcall
jp
push
lods
mov
adc
nop
imul
fmull
xor
outsl
xchg
loopne
mov
xor
inc
roll
loope
xchg
lret
mov
mov
inc
xchg
xchg
popa
jae
pop
cmp
fisttps
scas
cwtd
sub
test
jno
fidivs
adc
xorb
rcll
in
subl
or
push
jge
jnp
mov
out
add
jge
das
scas
les
or
mov
mov
or
xor
pop
iret
in
js
inc
aad
adc
insb
dec
mov
je
inc
jne
xor
sti
xchg
aam
cmp
call
cmc
dec
push
cld
and
jecxz
scas
mov
sub
shrl
xorl
add
dec
pop
mov
enter
ss
cmp
lds
xlat
loopne
xor
jp
pop
mov
and
fidivl
inc
cmp
lret
mov
imul
cmpsb
lock
in
jmp
call
pop
data16
push
decl
scas
cli
dec
mov
fmul
arpl
inc
pop
add
scas
push
jb
sarb
adc
dec
pop
mov
push
mov
cs
out
pop
inc
pusha
out
push
push
sub
xchg
fsts
lea
popa
dec
jns
lea
xor
sbb
cmp
subb
pop
sub
sub
or
in
fistl
add
lods
cli
dec
adc
lock
pop
scas
sub
fistpll
ss
aas
push
pop
sub
addb
sbb
xchg
loopne
pop
test
sbb
ret
call
xor
xchg
xor
lock
imul
ds
popa
push
out
cmp
adc
fldt
andl
mov
mov
popa
mov
dec
jb
in
shlb
clc
lahf
pop
push
lock
imul
aam
and
mov
mov
addr16
cmp
push
xchg
inc
jmp
mov
jo
out
pop
out
xchg
mov
add
cmpsb
fs
mov
int
cmp
movsl
cmp
mov
jecxz
rclb
fnstenv
or
jbe
push
js
stos
pop
std
lret
or
dec
mov
and
and
xor
mov
jnp
push
idivb
fwait
pop
inc
jg
std
outsl
out
adc
sarb
adcb
lea
and
push
fstpt
sbb
add
dec
mov
mov
cwtl
lret
cld
mov
sbb
mov
movsl
and
pop
xchg
aas
dec
ret
cmp
push
nop
mov
adc
loop
test
sub
dec
leave
enter
iret
jmp
or
aaa
enter
insb
loope
add
jl
fists
push
dec
mov
leave
and
pop
sub
sahf
mov
inc
in
cld
pop
movsl
daa
and
mov
pop
sti
xchg
cmpsl
out
sub
push
inc
or
mov
in
mov
add
dec
int3
int
fidivrl
addr16
out
mov
cwtl
or
pop
mov
pop
inc
jle
cld
sbbb
inc
and
movsl
jae
out
jns
loope
out
and
aaa
add
call
fdivr
mov
fwait
out
leave
xchg
jecxz
arpl
xchg
inc
cmp
mov
mul
pop
mov
lcall
and
inc
mov
cli
sbb
rcll
pop
jae
movsl
sub
bound
enter
and
scas
push
mov
sub
mov
mov
idivl
dec
mov
insb
xchg
insb
shl
les
bound
xor
movsb
mov
jp
je
and
inc
cmp
mov
insb
jmp
movsb
mov
lea
mov
mov
loopne
sub
push
cld
adc
dec
mov
scas
sbb
dec
out
sbbl
scas
pop
jno
jg
inc
ss
orl
adc
fldenv
pop
test
negl
fdivl
adc
aam
stos
psubusw
repnz
jo
les
cmc
inc
in
and
mov
ss
and
mov
into
xlat
mov
fdivr
jg
xor
jns
xchg
push
cmp
aas
pusha
mov
mov
imul
icebp
xlat
rol
pop
add
lock
and
fstl
subl
mov
xchg
adcb
gs
jecxz
pop
jne
jecxz
push
sahf
xor
push
call
sbb
ret
cltd
outsb
jp
or
lret
adc
pusha
sbb
sahf
and
add
lea
imull
mov
jne
movsl
pop
cs
movsl
shl
push
add
mov
es
or
in
xor
lods
shlb
cwtl
mov
movsl
jo
push
pop
add
ror
mov
inc
push
fwait
cli
test
jbe
or
fnstenv
enter
dec
sub
in
es
jns
inc
jae
stos
xor
iret
es
fists
dec
jae
pop
ds
int3
xchg
jp
dec
and
add
in
aas
dec
push
pop
clc
movsb
insl
pop
outsl
arpl
sti
pop
ds
xorl
lahf
inc
xchg
out
push
sub
add
jg
mov
jne
loope
rcrb
xchg
adc
lods
push
xor
insl
je
and
shlb
es
test
out
add
jecxz
sub
dec
cltd
lock
xor
mov
add
sti
movb
into
aas
dec
add
xchg
mov
and
hlt
stc
mov
mov
mov
nop
push
ud0
sarb
inc
sarl
push
lods
cmp
cmp
jle
clc
popf
nop
or
es
hlt
out
dec
cmpsb
les
jl
mov
or
pop
js
xchg
add
jne
adc
out
or
mov
adc
test
mov
sub
xor
pop
ret
pop
mov
out
es
jb
outsb
add
xor
jmp
cmp
cltd
rol
pop
clc
es
xchg
xchg
xchg
loop
fbld
xchg
ljmp
sbb
lods
test
imul
xorl
imul
pop
mov
or
pop
mov
xchg
into
mov
and
sahf
jp
js
cmp
enter
sbb
ds
jne
enter
cmp
addr16
jb
into
insl
push
fdivl
das
aas
orb
xor
in
adc
push
and
push
es
das
mov
pop
cwtl
pop
xor
mov
imul
popa
xlat
jmp
into
sahf
hlt
icebp
mov
sbbl
xor
inc
divb
lret
jmp
xchg
xchg
xchg
hlt
in
aam
mov
add
bound
inc
push
divb
sbb
cmp
push
dec
into
add
pop
jae
and
psrad
push
insb
mov
mov
sub
addl
add
pop
inc
lret
cwtl
pop
or
jnp
sbb
cld
jbe
ja
insb
aad
jnp
rorl
test
mov
aas
arpl
xchg
addl
push
bound
mov
jecxz
cld
cmp
mov
fwait
je
inc
loope
adc
ret
mov
sub
inc
in
or
sbb
and
jp
fisubs
in
pushf
rcr
jge
cmp
repnz
packuswb
sbb
inc
sahf
cld
sub
hlt
mov
fimull
cmpsl
mov
add
cmp
sbb
sahf
aam
std
adc
sub
je
les
mov
out
mov
fidivrl
rcll
aas
adc
out
dec
xor
fiaddl
mov
in
popa
subl
inc
dec
cmpsl
jae
jns
jbe
cmp
je
call
xchg
faddl
pop
aad
stos
jnp
jmp
inc
fmul
testb
cmp
push
or
dec
pop
cmc
inc
mov
fnsave
or
adc
inc
loop
rorb
mov
int
jns
lock
es
xor
mov
cmpsb
push
cmpsb
fsubs
adc
dec
cmpsl
xor
cmp
aam
lcall
pusha
neg
pop
dec
lret
jle
cmp
dec
and
testb
cmp
stos
loope
scas
push
les
inc
pusha
inc
mov
mov
mov
xchg
test
push
negb
or
jp
popf
shlb
add
xlat
and
pop
or
mov
lahf
loop
xlat
fs
es
inc
aam
data16
data16
pop
pop
in
std
xor
daa
in
dec
inc
in
test
mov
jb
sub
lds
imul
ljmp
xor
aad
add
adc
pop
dec
inc
movsb
movb
pop
lcall
cwtl
stos
outsl
inc
mov
adc
lcall
xor
jmp
xchg
dec
invd
lahf
mov
fldenv
mov
add
and
int3
jnp
adc
pushf
scas
and
and
jecxz
outsl
aas
mov
push
adc
incl
das
inc
or
push
stos
xchg
ja
mov
popa
mov
fisubl
daa
popa
andl
pop
loope
call
icebp
and
jl
pop
inc
xchg
pop
jg
push
frstor
imul
adc
xchg
dec
xchg
cmc
stc
es
sub
add
dec
ss
cmc
adc
inc
cmp
cs
push
orl
fsubrs
add
xchg
testb
mov
dec
fcoml
jae
jp
push
shrl
inc
cmp
out
subl
xchg
neg
pushf
in
sub
pop
repz
ret
pop
cmp
sbb
and
gs
movsl
stc
and
xor
rolb
loopne
push
push
jno
popf
imul
jecxz
dec
rclb
push
sub
xchg
mov
out
pusha
repz
ljmp
imul
repz
repnz
cmp
mov
mov
or
icebp
in
test
in
aas
das
push
mov
dec
push
clc
out
fs
adc
repz
lock
pop
clc
daa
in
mov
sub
test
push
jbe
sbb
mov
or
xchg
outsl
mov
jne
jl
sarl
repnz
and
scas
insl
out
cmpsb
and
jge
pop
xor
mov
cld
push
cli
lods
dec
push
sbb
insb
adc
test
stos
or
jmp
out
sarb
cmp
sbb
rclb
fsubr
pop
xchg
stc
pop
fneni(8087
inc
mulb
xlat
jo
cmpsl
lods
inc
mov
fcmove
lds
pop
mov
out
add
lods
cmp
fidivrs
inc
push
mov
test
outsl
mov
xor
dec
fnstsw
outsb
aas
movsl
dec
cmpsl
ret
and
cmc
push
add
adcb
test
push
jne
xchg
pop
pop
mov
mov
test
mov
repz
add
fcomip
cmp
dec
pushf
shrl
xor
lahf
out
or
inc
cmc
dec
cmp
in
mov
fnsave
jle
inc
scas
out
jbe
mov
inc
xor
inc
lahf
inc
fcmovbe
mov
ljmp
cmp
adc
mov
xchg
fs
cmp
test
divl
sbb
sbb
pop
icebp
mov
lea
inc
adc
aas
pop
scas
or
in
cmp
jmpw
pop
jle
dec
arpl
mov
repnz
adc
dec
les
mov
out
cmovp
sbb
jle
bound
sarb
dec
test
insl
hlt
xchg
xor
pop
stos
movb
push
push
movsb
cmp
ret
es
imul
pop
in
lcall
int3
jmp
jmp
loopne
push
inc
std
shll
scas
inc
push
xchg
push
testl
jp
jle
cs
jae
adc
aas
fwait
popf
iret
sbb
lcall
pop
jg
push
cmp
jmp
mov
cmp
lea
and
mov
xchg
jge
or
mov
shrl
xchg
rorb
push
jg
cmp
jo
xor
inc
mov
cmc
add
std
push
mov
push
inc
cs
add
sti
xchg
inc
ds
nop
daa
add
sub
cmpsl
popl
xchg
add
or
push
movsl
cwtl
loopne
jl
mov
cwtl
pop
xor
pusha
cmp
outsl
sbb
xchg
arpl
mov
or
je
shll
fs
jmp
int
movsl
jge
es
push
dec
dec
jmp
jbe
pop
arpl
aaa
into
mov
and
sub
adc
ljmp
jb
cmp
cmp
fists
test
in
shl
inc
mov
mov
addr16
cwtl
sub
leave
shll
mov
insl
lock
test
outsl
sbb
dec
xchg
pop
xchg
hlt
adc
sbb
cs
imul
in
mov
pop
pop
mov
out
das
loope
sbb
shll
aaa
into
cwtl
pop
imul
adc
sub
mov
mov
jbe
stos
mov
aad
test
inc
fsubrs
xchg
lods
ret
or
arpl
cmp
repnz
cmc
sbb
push
in
popf
push
int3
nop
or
hlt
mov
or
outsl
mov
push
xor
je
mov
std
cmc
cmp
add
leave
movsb
pop
lock
les
jle
mov
cmc
loope
daa
pusha
mov
mov
mull
movsl
loop
insl
sub
loope
xchg
mov
inc
cmpsl
lock
ds
push
out
inc
mov
and
push
imul
shl
mov
add
add
decl
stos
jle
pusha
out
sbb
notl
repz
stos
out
or
mov
test
pusha
or
in
scas
sbbl
jno
std
iret
gs
sbb
sbb
xchg
and
out
mov
push
lret
fdivp
enter
fdivrp
cmp
push
das
mov
cmp
mov
test
or
or
std
scas
jg
adc
jle
sbb
notb
xchg
icebp
push
adc
mov
or
xlat
mulb
or
out
cmpsl
jmp
adc
jo
cmpsb
or
xchg
jg
pop
push
xchg
jmp
imulb
ja
fndisi(8087
mov
xchg
jp
xor
pop
divb
das
cs
outsl
and
pop
insb
rcrb
push
push
sub
xor
sbb
add
mov
pop
loop
push
outsb
popa
or
cmpb
mov
les
push
in
out
jg
xchg
and
cltd
sahf
shrb
ret
sub
aad
adcb
xchg
or
das
cmp
dec
insl
jnp
ret
xchg
mov
rorb
sbb
cmp
mov
mov
pop
cmpsb
adc
dec
inc
lds
out
and
cmp
sub
popa
dec
loopne
movsl
push
repz
jmp
mov
rorl
insb
fldenv
mov
out
inc
adc
or
cmp
jbe
mov
test
mov
ret
leave
movsl
ret
std
xlat
outsl
dec
mov
push
xlat
push
loop
in
mov
imul
pop
fdiv
mov
cmp
fchs
cmp
lret
shlb
mov
jne
push
pop
scas
or
mov
inc
adc
and
jl
adc
sbb
mov
leave
mov
movsl
les
and
data16
stos
aas
insb
lods
sub
mov
or
push
mov
push
xor
xchg
push
scas
es
data16
sub
pop
push
insl
jg
push
es
lret
lock
xor
adc
iret
fnstcw
sub
xor
push
das
data16
adc
xor
xor
lret
data16
pop
aam
stc
cmpb
xchg
repnz
pop
icebp
adc
add
scas
test
sbb
shlb
xor
push
movsl
adc
pushf
inc
mov
pushf
jae
mov
inc
std
push
sti
es
fcmovb
dec
dec
out
out
jo
sti
inc
cs
les
dec
push
icebp
aaa
and
mov
orb
jg
dec
in
adc
int
insb
add
adc
dec
adc
cmp
cmp
xchg
sbb
pop
mov
xor
cmp
imul
mov
je
imul
in
fsubr
jecxz
pop
adc
xchg
add
cltd
adc
xchg
mov
mov
pop
xchg
push
push
int3
mov
shll
lea
divb
mov
and
xchg
lods
jmp
stos
loope
xor
js
mov
adc
push
scas
dec
rcll
xchg
add
inc
je
sub
pmaxub
in
jmp
mov
movsl
test
adcb
leave
sub
inc
leave
sahf
xor
mov
push
mov
enter
addr16
testb
and
jae
daa
and
push
mov
xchg
mov
shl
notl
xlat
imul
add
out
sbb
mov
xor
mov
jge
addl
arpl
xchg
adc
inc
cmp
mov
lea
sbb
cmp
xchg
push
sub
popa
pop
stos
dec
pop
pop
jae
int3
scas
ret
or
les
test
mov
adc
jae
js
xlat
jo
cli
jge
rcr
inc
sub
ficoml
popa
push
dec
and
mov
inc
pop
and
jo
repz
or
dec
pop
fstl
jp
iret
push
gs
pop
cmp
in
mov
mov
and
in
jp
pop
hlt
xchg
push
test
fistps
subl
or
in
dec
pop
xor
fsts
and
cs
jno
imul
xor
cmp
pop
subl
sub
popa
out
cwtl
test
push
rol
xor
adc
out
push
cli
gs
lods
stos
movsl
fs
push
lods
ljmp
call
mov
in
jno
push
inc
pop
je
xchg
arpl
push
add
outsl
outsb
sti
xor
jge
sbb
in
sub
test
mov
ret
pop
mov
adc
in
fs
insl
int3
ffreep
je
testb
xor
pop
dec
mov
xchg
call
add
mov
nop
stc
push
inc
nop
mov
ret
sbb
jns
jno
jo
dec
popa
sbb
sub
es
adcl
int3
or
shlb
jg
jp
mov
aad
pushf
inc
movd
shll
int
sbb
lcall
mov
iret
mov
imul
jle
aam
sbbl
enter
imul
imul
mov
idivl
into
jmp
sub
dec
or
xchg
aad
or
je
dec
popf
push
xchg
pop
call
add
dec
pop
ret
sahf
or
jae
call
fldl
popf
dec
mov
xorb
and
addr16
fstpt
adc
mov
pop
xchg
mov
fiaddl
into
adc
mov
push
push
add
shl
push
outsl
cmp
xchg
adc
push
mov
add
mov
jo
lcall
scas
sbb
mov
xchg
lods
mov
push
ja
in
push
mov
je
imul
ss
mov
outsl
repnz
mov
adc
idivb
pop
pop
sub
testb
push
aam
into
sahf
inc
mov
push
adc
fcomi
insl
repnz
bound
lcall
das
jle
fdivrl
in
clc
cmpsl
sub
mov
push
mov
in
hlt
rolb
sbb
sti
fcmovnb
aam
outsl
pusha
inc
push
sbb
cmp
xchg
fucomip
orb
xor
jge
mov
mov
popf
fucomp
jg
mov
push
popf
add
sub
push
in
ja
jmp
pop
cmp
mov
sub
xchg
mov
addl
and
and
stc
aad
xor
jo
xchg
es
mov
and
cmc
jl
mov
les
xorb
imul
adc
push
movl
dec
shlb
iret
sub
cmpl
adc
lcall
jle
mov
loopne
gs
xchg
add
mov
aad
pushl
lcall
inc
lahf
pop
out
cmpsl
aaa
shlb
out
imull
insl
aam
pusha
xor
mov
mov
sub
jg
shl
mov
push
xor
stc
shll
hlt
mov
pop
fbstp
daa
lods
add
test
push
pop
jecxz
lret
pop
cmp
sub
repnz
adc
pop
testb
icebp
sub
mov
pop
jno
mov
dec
icebp
sti
nop
out
ja
and
arpl
push
stc
out
ja
and
jge
enter
mov
xor
fcmove
adc
mov
pop
call
jp
bnd
scas
cmp
loopne
add
ficompl
inc
loop
cmp
vmwrite
adc
les
jns
dec
dec
adc
imull
sub
lahf
cmpsl
call
fsincos
mov
inc
cli
les
ficoms
aad
repz
lret
mov
cmp
inc
test
mov
das
sbb
mov
jo
cmpsb
std
adc
out
sub
adc
cs
push
fidivrl
pop
sbb
mov
sub
ljmp
call
es
or
add
mov
push
add
adc
mov
mov
ficoms
data16
hlt
idivb
pop
sbb
aam
gs
push
outsl
jmp
jb
mov
xlat
sbb
pop
addr16
or
add
adc
or
xchg
cmp
push
push
xor
in
sti
cmp
sbb
scas
pop
in
mov
cwtl
sahf
rcrl
mov
ja
mov
ljmp
sbb
pop
scas
movsb
ficoml
or
xor
aaa
stc
lea
shrl
cs
sub
xchg
out
sti
pushf
test
mov
jo
int3
test
jae
jmp
jge
mov
jecxz
cwtd
jne
xchg
mov
in
sti
sub
pusha
and
aaa
sbb
mov
sbb
add
mov
xorl
or
mov
add
mov
mov
lods
inc
xchg
int3
xor
aam
sbb
sbb
mov
push
adc
sarb
out
sbb
mov
xor
jp
lcall
andl
pop
mov
sti
pop
clc
jecxz
jmp
call
fldt
or
jo
jle
jecxz
dec
scas
in
dec
fisubrs
lods
aaa
test
test
push
aad
push
sub
fnsave
mov
std
or
jb
iret
xor
xchg
xor
or
push
mov
xchg
jb
push
sub
iret
xor
jnp
push
jo
popf
jp
iret
push
push
fcomip
cwtl
das
and
fidivs
xchg
mov
add
xchg
push
ljmp
jae
sahf
movsb
add
in
js
push
cmp
adc
mov
rcrb
insb
sub
mov
lock
sbb
mov
sub
jmp
add
movsb
stos
add
pushf
push
ja
mov
imul
jle
lods
jmp
pop
in
inc
mov
or
mov
jge
mov
in
test
fcmovbe
push
rcr
mov
ds
cmp
jmp
outsl
xorl
or
cmp
jge
and
mov
jns
into
stos
adc
push
lret
push
in
cld
jb
mov
pop
js
mov
out
lock
dec
inc
mov
push
lds
and
inc
lahf
outsb
sti
adc
lahf
xchg
rcrl
push
pop
jmp
jns
jmp
inc
sub
adc
mov
sarl
movsl
or
lcall
add
mov
mov
mov
sti
jo
mov
adc
sbb
pop
push
sbb
mov
and
sbb
push
movsl
and
pop
fadds
ret
jb
fdivl
push
mov
jg
sub
adc
std
xchg
sub
cli
xchg
cmp
rcl
cmp
add
int3
mov
mov
je
das
push
inc
push
adc
out
pusha
imul
addr16
sbbb
or
mov
mov
push
mov
push
add
dec
ret
fucomip
leave
rcrb
and
loopne
call
shrb
dec
add
push
add
out
sub
inc
push
push
adc
inc
xchg
mov
in
pop
sbb
dec
dec
mov
xchg
out
sbb
jae
out
repnz
xchg
into
xchg
nop
daa
fwait
out
sti
pop
pop
mov
dec
add
mov
mov
xchg
mov
daa
cmc
xchg
sarl
sahf
mov
std
shlb
sti
xchg
ja
or
sub
push
cmc
daa
dec
ds
jl
gs
or
xor
scas
mov
push
and
pop
es
sbb
enter
push
in
lock
out
andl
aaa
cmp
pusha
not
pop
ja
out
jle
sub
push
adc
dec
icebp
add
int3
xchg
sbb
mov
loope
dec
inc
dec
aas
sbb
push
movsl
push
repnz
mov
add
shlb
bound
lods
or
and
push
mov
rcll
mov
out
adc
lahf
outsb
sub
cmp
insl
pop
sbb
cmp
mov
dec
lcall
xchg
inc
out
jae
mov
jp
push
popf
dec
lret
daa
mov
and
lods
mov
imul
ret
lahf
jne
dec
inc
pushf
fcompl
test
mov
xchg
shrb
mov
sbb
add
jb
lret
fwait
shl
je
push
and
mov
les
xchg
jmp
in
js
bound
mov
daa
bound
call
jne
das
mov
xchg
xor
into
mov
push
jno
push
aam
mov
pop
arpl
mov
aas
inc
and
pop
pusha
addr16
jle
or
lret
stos
mov
pop
jge
pop
repz
arpl
lahf
aam
mov
sub
in
xlat
push
push
push
and
popf
cld
bound
pop
or
dec
pop
mov
loope
mov
push
inc
ret
int3
fdivl
scas
les
dec
add
mov
pop
fadd
adc
mov
sub
adc
out
mov
outsb
and
xor
sub
jne
int3
popf
in
js
mov
pop
mov
xchg
sub
mov
mov
lret
jle
dec
shrl
insl
fidivl
scas
test
xor
add
pop
sti
cmp
add
add
adc
sub
lea
fnop
add
adc
or
mov
sbb
xor
jle
add
xchg
sbb
and
mov
cwtl
js
arpl
jecxz
sbb
xchg
add
call
mov
subb
mov
movsb
fwait
pop
add
mov
daa
andl
xchg
aas
dec
clc
stos
mov
pop
xor
aaa
test
icebp
dec
mov
jmp
mov
aas
mov
inc
or
outsb
jle
sbb
xchg
loopne
adc
cltd
cmpsl
pop
out
test
ret
xor
xchg
pop
add
pop
push
into
clc
inc
shlb
dec
xchg
icebp
push
mov
mov
sbb
lods
rclb
sbb
pop
dec
xchg
stos
add
shl
mov
push
pop
movsb
cli
bound
cmp
fs
test
adc
mov
jmp
fstpl
jae
mov
fldl2e
cmp
test
notl
sahf
fwait
xchg
xor
jb
rcrl
mov
es
cmp
cmp
sahf
daa
in
aad
cs
sub
xchg
and
mov
test
hlt
inc
pop
mov
seta
jnp
cmpsl
and
test
pop
cmp
mov
idivl
adc
clc
dec
and
daa
sub
cmp
push
mov
ss
aas
sahf
aad
and
mov
mov
jmp
pushf
and
dec
rol
popa
mov
cmp
sbb
call
loop
cmpsl
jl
arpl
mov
mov
out
loopnew
lea
cmp
cld
push
add
popf
push
nop
mov
push
jg
shr
insb
inc
push
push
inc
push
mov
dec
cmp
fwait
daa
mov
rclb
sub
jmp
test
enter
jmp
mov
add
stos
xchg
sbb
stc
push
sahf
testb
xchg
xchg
fstpt
push
and
pop
mov
push
dec
jo
ret
push
js
jl
push
and
out
cmp
leave
cmp
push
scas
aam
inc
sub
ficompl
or
jp
shr
inc
xor
inc
test
subb
out
test
push
mov
jp
or
fimull
sbb
mov
add
mov
inc
push
ret
sub
add
push
pop
mov
popa
clc
arpl
mov
mov
cli
or
int
inc
xor
aas
loop
adc
out
dec
mov
int3
int3
leave
fwait
scas
addr16
mov
scas
int3
stos
in
xor
dec
out
addr16
mov
inc
fdivl
sbb
test
test
inc
out
and
je
add
dec
es
shrb
repz
js
add
mov
stos
mov
iret
icebp
adc
adc
cmp
int
stos
shll
mov
jae,pt
stos
push
xchg
aas
outsl
inc
mov
adc
div
repnz
xchg
adc
adcl
addl
test
fwait
leave
jl
sti
mov
mov
dec
dec
mov
push
mov
imul
jecxz,pn
cmp
mov
mov
bound
push
and
insb
sarl
xor
stc
push
rclb
cwtl
daa
push
xchg
fsubrp
lret
xor
sub
into
or
mov
int3
cmp
sub
xchg
pop
mov
icebp
out
popf
lock
js
je
jb
xchg
lods
push
and
out
stos
ret
das
sub
pop
pop
push
mov
ljmp
outsl
cmp
dec
fisubrl
das
cmp
insb
push
add
in
pushf
xor
loope
insl
mov
push
popa
push
in
lock
int3
xor
cmc
and
push
outsb
cwtl
pxor
jge
rorl
mov
push
add
mov
adc
push
sbb
fisttpll
dec
xchg
ljmp
jb
int3
jns
call
mov
pop
inc
adc
push
shrb
add
scas
adc
and
jl
adc
dec
push
enter
faddl
daa
mov
adc
cmp
dec
sub
idivl
lcall
add
dec
in
and
pop
or
out
orb
add
aam
mov
push
inc
popf
ret
jns
add
aad
pop
push
fdivs
cmp
xchg
sub
dec
sbb
jb
pop
test
lods
fsubl
scas
subb
aam
sar
xchg
inc
adc
pop
push
js
sbb
sub
aad
pusha
cmp
jge
test
nop
shrl
ret
mov
cli
fst
call
inc
loop
inc
jnp
cli
aas
mov
les
cmp
sbb
imul
sbb
lods
imul
pushl
nop
out
sbb
dec
lret
and
cwtl
sbb
divb
jge
or
add
aaa
pop
add
loopne
jp
mov
cwtl
push
fiadds
shl
push
aas
sub
gs
cmc
les
xlat
cmc
sbbb
mov
dec
popf
fdivrp
shrl
mov
dec
icebp
imul
or
sub
push
das
sarb
xchg
aam
les
in
adc
inc
sub
xor
push
lods
andl
add
inc
push
xor
cmc
lea
jmp
or
xchg
add
iret
push
dec
dec
xchg
push
jmp
and
pop
pop
out
xchg
lods
or
ja
not
jmp
cli
cmp
or
call
cmpsl
cmp
sub
lods
push
fsubrp
test
mov
cmp
cmp
pushf
out
adc
das
or
and
test
lea
in
aad
adc
hlt
in
push
pop
clc
push
cmp
hlt
jne
push
xor
sub
push
mov
mov
mov
clc
call
shrb
push
popf
cmpsb
into
jb
fs
movsl
cmp
aas
adc
lods
push
pop
int
aam
mov
mov
bound
outsb
add
outsl
inc
mov
sti
std
out
pmullw
enter
mov
xchg
lret
jp
mov
mov
icebp
mov
cmp
xchg
lock
dec
addr16
mov
or
adc
push
in
outsb
aaa
daa
mov
push
scas
inc
cmp
pop
scas
and
push
xchg
fsubrs
cmpsl
call
or
or
xor
pop
data16
push
icebp
fidivs
ja
jno
cmp
pop
sub
rorb
out
jbe
lock
fstpt
ljmp
scas
cmp
imul
stos
inc
jb
gs
notb
xor
xor
pop
les
insl
dec
and
scas
hlt
push
loopne
bound
xor
xchg
gs
sbb
xor
mov
xchg
cmc
lret
out
sti
dec
or
int3
leave
pop
in
mov
pusha
xorb
mov
jmp
mov
ds
xchg
out
jmp
pop
adc
dec
sub
lods
or
dec
mov
stc
push
push
inc
pusha
addb
lret
push
out
mov
cltd
jae
jge
mov
and
int
ja
mov
push
xchg
jo
int3
es
mov
pop
fstps
popf
inc
cwtl
add
lcall
adc
in
xor
dec
bound
sbb
dec
in
mov
call
or
cmp
mov
sbb
mov
rol
push
mov
dec
or
jne
jp
pop
pop
mov
in
add
mov
and
aam
je
mov
cmp
push
iret
push
popf
cmp
add
aaa
bound
outsb
mov
push
mov
cmpsl
xchg
mov
insb
push
add
lcall
out
stos
icebp
fistl
add
out
mov
clc
sub
notl
cmp
add
lret
jb
test
ljmp
je
inc
mov
mov
jnp
push
push
pop
adc
or
xchg
sbb
lods
arpl
sbb
sub
ds
sub
stos
or
call
push
cmpsb
cmp
push
das
xchg
and
mov
gs
pushl
addr16
xchg
subl
sahf
pop
cmc
mov
das
adc
mov
inc
pushf
aad
or
cmc
mov
xor
jnp
adc
lret
out
mov
lcall
ljmp
jmp
push
fadds
dec
mov
mov
roll
fdiv
idivb
mov
pop
ds
imul
dec
and
test
mov
roll
cmp
mov
xchg
scas
inc
push
cmpsb
lea
jbe
jmp
sub
ds
mov
ja
xor
push
jb
inc
mov
and
fldcw
dec
std
out
cwtl
insb
xchg
push
xchg
ss
aas
or
add
inc
dec
fsubrl
dec
leave
or
mov
push
movl
pop
scas
inc
add
aas
fnstenv
dec
call
xor
iret
jno
sbb
ss
lret
pop
out
pop
cli
push
shlb
cmp
clc
push
aaa
arpl
jnp
push
push
cmpsb
mov
int3
fidivs
mov
xor
dec
xchg
sbb
mov
rcll
lcall
and
lock
cmp
std
inc
pusha
push
sahf
jo
xor
orl
nop
ljmp
loopne
nop
adc
ljmp
pop
je
xchg
mov
stos
cwtl
ja
pop
test
enter
fsts
in
adc
test
xor
jle
lock
clc
sub
rcr
and
cli
push
cli
pop
cli
fidivs
dec
fld
add
mov
lret
sbb
cmp
push
mov
mov
cmp
jecxz
testb
or
nop
daa
insl
cmpsb
ficoms
mov
xor
adc
imul
aad
push
nop
cmpsl
cmpsl
loope,pt
xchg
sub
dec
fisttps
lahf
ss
mov
xor
sub
xchg
fwait
rorb
mov
xchg
jns
fs
sub
je
adc
ja
sub
pushf
cmp
xchg
push
gs
inc
sub
adc
xchg
testl
insl
pop
xchg
sub
clc
in
insb
add
dec
or
cmp
mov
adc
xor
aaa
into
das
fucomp
test
cmpsl
cmp
adc
test
inc
fcom
mov
fwait
out
and
inc
pop
cmc
pop
mov
xchg
push
out
inc
nop
jns
mov
push
std
shll
adc
movsb
sub
lds
sub
mov
lds
adc
mov
stc
inc
jmp
stos
or
sahf
xchg
ljmp
or
insl
cmp
sub
inc
std
cmc
xchg
repnz
adc
lock
mov
lahf
xchg
ret
jmp
mov
lret
lret
inc
mov
js
xor
dec
popf
cli
or
jno
add
sub
jns
xor
or
jp
inc
enter
outsl
loope
jns
or
mov
stc
jmp
sub
fs
leave
movsl
pushf
sub
ret
loopne
pop
lret
pop
lods
ss
xchg
mov
test
loop
xchg
push
ljmp
aaa
xor
cltd
pop
cmp
jns
lcall
mov
push
lods
dec
mov
adcb
sbb
fsub
aas
mov
mov
inc
mov
push
repnz
jns
mov
mov
leave
setnp
out
sbbl
fistpll
and
adc
mov
adc
mov
out
xor
mov
out
pop
and
push
test
mov
dec
into
pop
aas
lret
jle
leave
jmp
popa
lea
fdivp
daa
call
add
std
and
pop
inc
dec
xlat
fdivrp
and
adc
fiaddl
fadds
inc
lahf
sbb
in
into
and
lahf
pop
ja
stos
shlb
lret
cmpsb
and
mov
dec
dec
mov
fsubrp
shrd
ds
outsl
dec
push
pop
push
imul
pop
xor
dec
or
ja
mov
jmp
jmp
shrb
pop
xchg
cs
push
inc
jns
inc
loope
imul
fstpt
xor
mov
dec
in
push
mov
daa
push
fstp
push
cmp
jmp
add
je
mov
call
push
clc
push
push
sti
push
dec
pop
mov
stos
push
push
insb
and
add
ds
inc
cmp
mov
in
test
in
jne
leave
cmp
in
outsl
repz
pushl
push
xor
aas
push
mov
xor
imul
xchg
push
mov
nop
daa
lcall
test
in
cmpsl
cmp
mov
pusha
dec
sub
pop
jno
call
or
mov
outsl
popf
inc
add
cs
add
mov
adc
xchg
mov
out
dec
jns
cmp
lcall
xchg
pop
int
mov
pop
hlt
mov
into
mov
shlb
ret
sbb
dec
cmp
xchg
xchg
ja
xchg
xchg
lods
icebp
out
dec
sahf
repnz
mov
mov
sub
cmp
mov
sub
push
inc
dec
sub
lods
cmp
fdivrl
and
inc
add
mov
adc
adc
shl
or
test
or
adc
sbbl
cmovns
inc
mov
push
or
cmp
test
and
scas
imul
rolb
cs
sbb
scas
test
jl
jbe
es
testb
dec
pushf
hlt
call
sbb
cmpsb
aam
cmp
mov
cltd
sub
mov
mov
push
jo,pt
xchg
xchg
inc
pop
in
dec
neg
fs
pop
repz
xchg
sbb
es
adc
jmp
test
inc
int
sar
sbb
cmc
push
jmp
dec
mov
pop
push
shlb
mov
mov
test
and
mov
mov
loop
add
imul
or
repz
les
xchg
mov
cwtl
jge
cmp
xor
outsl
popa
inc
ret
int3
movsb
xor
in
xor
cmp
push
mov
pop
cmp
pop
sub
into
ds
add
test
pop
mov
in
jl
pop
and
mov
cwtl
and
outsl
jge
inc
adc
int
xor
scas
stc
jmp
fadds
cmp
mov
xchg
xor
jbe
and
sbb
negl
test
and
xor
lret
testl
jbe
push
test
mov
iret
out
jb
cmp
cmp
sbb
lods
dec
shll
aaa
xor
insl
sub
hlt
mov
push
xor
addl
inc
xor
pop
adc
gs
adc
jecxz
insb
push
flds
xor
outsb
mov
push
sbbb
mov
push
dec
pushf
shrl
cmp
inc
and
adc
loop
mov
cmp
pop
rolb
mov
xlat
imul
int3
xchg
sub
add
push
adc
dec
jecxz
pop
or
inc
out
inc
pop
lods
pop
sub
mov
push
xchg
or
testb
and
and
xor
cld
inc
mov
or
mov
out
sub
mov
jmp
testb
add
lcall
jmp
push
adc
cmp
push
das
mov
out
push
inc
flds
das
ftst
aad
cmp
fldcw
pop
lock
cli
sub
fbld
mov
sub
or
gs
adc
jne
ljmp
ss
shl
loopne
mov
out
andl
insb
ds
fsubrs
xchg
insb
jle
mov
sub
jecxz
inc
fwait
mov
mov
sub
inc
pop
lds
aad
mov
lods
dec
int
inc
pop
push
scas
sub
inc
or
jo
insb
fldcw
cmpl
je
movsb
cmp
mov
out
fwait
out
add
mov
push
inc
mov
push
add
inc
mov
aaa
aad
push
fimuls
pop
xor
or
into
cmp
gs
loopne
mov
andl
adc
jecxz
dec
xor
jle
xor
pop
push
lcall
imul
fidivl
xchg
xchg
scas
and
mov
mov
in
sub
loope
pop
inc
push
sahf
push
mov
jnp
sahf
adc
xchg
mov
je
add
cld
mov
jns
fnsave
and
mov
je
pop
pop
and
inc
sti
xchg
jae
stos
in
or
in
sbb
pusha
mov
push
jecxz
jmp
or
push
or
arpl
xor
xchg
aaa
jmp
cmpsb
pop
cmp
imul
cli
mov
push
xchg
rcrb
in
inc
inc
shl
cmp
repnz
xor
cmp
sub
and
leave
xchg
push
cwtl
cmc
cli
out
sti
xor
push
test
pop
stos
add
mov
cmpsb
pop
enter
and
out
mov
push
cmp
in
mov
mov
loopew
push
andb
and
mov
dec
std
scas
xlat
and
cltd
test
and
jl
andb
add
ljmp
jmp
cmpsb
iret
jo
in
xchg
pusha
addr16
fidivl
cmp
clc
xchg
pop
aad
mov
add
cld
data16
adc
test
test
add
lds
lods
inc
test
out
stc
loopne
push
lock
ds
outsl
or
ret
test
push
enter
lds
sti
aaa
inc
and
add
outsb
out
push
outsl
pop
jmp
inc
mov
push
xchg
fildl
xchg
inc
rcl
push
and
icebp
fbld
ret
fdivl
push
sahf
mov
mov
pop
cmp
loope
dec
stc
scas
imul
xor
mov
rorb
lahf
jmp
dec
mov
inc
adc
pusha
dec
in
sbb
cmp
hlt
jmp
xor
cwtl
or
jle
adc
pop
inc
enter
stc
jecxz
inc
xchg
xchg
cmp
pop
mov
and
dec
int
add
call
mov
xchg
outsl
jno
push
or
out
mov
push
repz
rcrl
cs
out
test
icebp
or
and
xchg
popa
dec
addr16
fisubrs
call
dec
out
ret
push
mov
mov
or
jnp
push
lahf
int3
aas
jb
xor
and
lea
insl
gs
dec
jo
and
lods
push
lock
test
data16
fsubrl
xchg
or
popa
lods
repnz
mov
mov
jmp
or
and
jg
push
adc
adcb
clc
sbb
mov
dec
popf
cmp
mov
jns
les
push
js
sbb
sbb
pusha
push
pushl
inc
jge
incb
push
jbe
pop
rcrl
clc
stc
test
and
xchg
popf
jb
jae
mov
lret
or
cmpsl
daa
sub
lock
lods
stos
mov
xor
jp
fisubrl
or
repz
mov
cmp
xor
sti
repz
dec
jne
in
and
sahf
js
sarb
lock
lock
outsb
jge
cmc
dec
in
sti
dec
mov
push
push
jne
int
data16
cli
push
jmp
sbb
jo
fildl
mov
je
sbb
in
xchg
add
enter
in
inc
decb
xchg
fwait
mov
jbe
lcall
adc
hlt
fsts
cltd
mov
xchg
mov
jmp
mov
mov
es
es
mov
loopne
add
adc
test
sarl
pusha
add
mov
jo
rol
bound
ret
cld
xor
sub
and
mov
lea
shl
pop
subl
lods
mov
cmp
xlat
jge
fs
or
stos
iret
jb
sbb
inc
fs
inc
xchg
add
and
or
imul
popf
ljmp
xor
neg
into
mov
add
cmp
mov
ljmp
loop
clc
cmp
dec
shr
sbbl
pop
notb
stos
push
jb
pusha
xchg
mov
ret
fs
xchg
insb
mov
mov
push
enter
das
cmp
pop
cmp
enter
dec
call
push
lret
fisubrl
sbb
test
push
lcall
xor
mov
mov
nop
push
fistpl
adc
pop
dec
jb
outsb
xchg
sbb
cmp
into
lcall
ja
add
shlb
add
call
leave
xor
stos
cmpsl
xchg
inc
xchg
mov
push
outsl
mov
leave
out
jbe
push
adc
lret
inc
jne
or
fisttpl
rcll
mov
push
cmp
repnz
jge
lods
iret
sub
in
adc
adc
into
xor
fists
cwtl
sbb
xor
lret
dec
bound
xchg
jns
or
int
cmp
fucomip
xchg
cmp
es
sbb
fwait
sub
stos
sub
mov
int3
pop
hlt
or
xchg
sub
add
pop
mov
inc
adc
inc
jb
mull
les
jle
fmuls
add
adcl
push
insb
shrl
leave
dec
ds
xchg
mov
jmp
mov
repz
outsl
jl
sar
xchg
notb
sub
lahf
sbb
in
aam
jb
ret
addb
sub
dec
pop
stc
outsl
adc
lahf
ss
sbb
push
push
into
pop
pop
imul
data16
pop
popf
clc
cmp
in
test
lret
insb
imul
arpl
orl
add
outsl
int3
jo
pusha
cwtl
xchg
outsb
imul
push
xchg
and
mov
adc
sub
cmp
xlat
pop
mov
mov
iret
cmpsb
dec
leave
dec
in
rorb
cmc
push
sti
mov
addr16
mov
mov
dec
cmpsl
lods
nop
insl
xchg
mov
fildl
push
out
clc
and
scas
push
sbb
rorl
scas
push
pop
cmc
xchg
mov
mov
pusha
stos
mov
or
out
cld
je
movsb
or
jg
or
sub
mov
or
add
sub
or
jg
shrl
add
push
popf
add
iret
pushf
or
loop
mov
imul
jge
adc
and
popa
inc
push
lcall
subl
pushf
and
loop
xchg
and
lahf
out
cmp
shlb
push
shl
pop
xor
mov
adc
movsl
pop
adc
jg
out
jle
adc
jnp
out
inc
out
rolb
xor
gs
and
mov
into
popa
in
push
pop
cltd
popa
clc
shlb
jge
sbb
xor
jmp
cmp
xchg
rcl
leave
inc
data16
lret
add
lods
mov
xchg
xchg
pop
das
cmp
mov
jb
mov
push
imulb
jbe
cmpsl
inc
icebp
stos
xchg
sub
push
jmp
outsl
or
xchg
fstps
lahf
xchg
mov
mov
sub
mov
fidivl
dec
fbstp
inc
in
repz
mov
je
adc
push
lret
dec
xor
call
fisubrs
outsl
push
lahf
and
or
xchg
push
or
test
inc
popa
lods
mov
jp
dec
subb
push
call
add
out
push
out
rep
pop
and
leave
cld
xchg
sti
out
pop
sub
mov
and
adc
or
andb
adc
pop
pushf
push
mov
popa
push
jle
fld
test
add
lahf
mov
andl
pop
pop
jbe
pop
lcall
outsl
cmp
stos
cli
test
push
jo
dec
mov
jp
jbe
in
push
inc
enter
xchg
xlat
shrb
cmc
cmp
pop
push
icebp
xchg
lcall
xchg
lcall
dec
subb
imul
xor
or
repnz
xor
add
imul
mov
lret
sbb
dec
outsb
mov
jp
jmp
pop
repz
in
mov
enter
repnz
jp
lret
sbb
ds
push
sbb
mov
add
cmpsb
or
leave
jo
pop
xor
je
push
mov
pop
rclb
and
cmpsl
subl
add
or
sbb
jge
jl
sbbl
add
pop
mov
xchg
test
xor
sbb
mov
adcl
inc
arpl
into
fisubrs
jmp
into
imul
divl
movsb
pop
repz
out
xchg
inc
or
bound
dec
cmp
inc
dec
jecxz
insl
dec
dec
push
push
push
fsts
or
push
cmp
push
add
mov
xchg
es
inc
add
ret
xor
inc
mov
jl
mov
lret
inc
dec
loopne
andl
sub
cmpsb
mov
shl
repnz
daa
push
cltd
pop
loopne
dec
xor
popa
xor
mov
int
and
in
sbb
jbe
nop
lret
push
mov
xlat
stc
jl
dec
and
aas
xchg
icebp
mov
outsl
test
and
adc
mov
int
fmull
sbb
cmpsl
ss
and
aas
and
das
addl
dec
pop
iret
lret
pusha
inc
movsb
sbb
mov
lret
stc
fmuls
dec
pop
int
push
loopne
sti
xchg
sbb
idivl
mov
ret
jnp
imul
adc
and
mov
clc
cmpsl
sti
test
sbb
popf
pop
inc
fnstenv
xchg
sub
movsl
pop
movsb
dec
or
es
cwtl
cltd
inc
cmp
push
sbb
pop
mov
loope
jp
dec
push
cwtl
imul
fsubs
sahf
out
adc
stc
cltd
xor
push
jl
pop
iret
inc
lahf
jne
ljmp
xorb
dec
hlt
inc
popa
es
nop
and
push
mov
lcall
adc
mov
dec
pop
out
cs
xlat
inc
insl
adc
dec
sub
dec
sub
shll
mov
or
lret
fmuls
or
or
dec
mov
roll
mov
rcrl
push
nop
xchg
into
pop
insb
push
sahf
aas
push
loop
xorl
ret
mov
fisubl
pop
inc
out
adc
ljmp
pusha
sub
outsl
jns
mov
rorl
mulb
and
sbb
dec
repz
push
cld
push
faddl
adc
cmc
into
gs
popa
xor
nop
jne
dec
mov
stos
pop
loop
add
inc
ljmp
inc
dec
dec
adc
aam
and
imul
in
jmp
xchg
mov
iret
imul
popf
mull
cmp
pop
or
xchg
push
mov
out
mov
mov
and
inc
fnstsw
sbb
jae
in
cmp
lods
ret
and
sbb
test
mov
push
add
and
insb
jmp
push
sbb
cmpsb
aaa
pop
mov
xchg
adc
and
addb
adc
xor
mov
cltd
subps
push
sbbl
aas
pop
pusha
call
pop
fs
adc
push
fidivl
popa
sahf
or
xor
sub
inc
rclb
cmp
mov
dec
xchg
dec
cmp
cmc
sub
push
leave
lahf
scas
jle
sub
hlt
and
fistl
push
lods
pop
jns
sbb
or
adc
outsb
fmuls
lds
repz
pop
and
fildll
out
test
push
pop
andb
xchg
sbb
shll
scas
mov
inc
mov
sub
fbld
ret
cs
insl
loop
sbb
popf
mov
jecxz
xor
iret
fucom
mov
call
lret
lret
ds
jmp
test
sub
jo
fistps
inc
mov
jns
push
and
cli
pushf
pop
hlt
int
sbb
mull
cmpsb
xchg
push
int3
mov
sbb
call
jb
mov
imul
aas
jb
jmp
test
fmuls
lds
lods
scas
inc
into
in
push
ficoml
xor
inc
xor
mov
push
xchg
sbb
ss
xchg
push
or
nop
jle
leave
pusha
and
ret
pop
repz
add
jp
xchg
mov
add
pop
mov
pop
sub
mov
fstl
xlat
mov
dec
add
xor
xsaveopt
lods
sbb
mov
in
rcrl
in
mov
insb
cli
addr16
loopnew
aam
fldl
out
jle
ja
call
and
int
aam
cmpb
shll
mov
int3
mov
sbb
mov
mov
in
sub
mov
push
outsb
int3
test
mov
imul
xlat
enter
cmp
lahf
and
mov
fxch
fwait
scas
lret
js
jecxz
cld
lods
and
or
int
shlb
jecxz
cmpsb
and
popw
incb
xchg
push
pusha
push
rcl
imul
inc
sbb
pop
out
sub
push
outsl
push
imul
adc
cmp
in
mov
out
repnz
jl
int3
pop
test
fdivr
jo
push
fistl
daa
icebp
or
add
mov
arpl
int
out
push
xor
roll
xacquire
pop
ja
cs
shll
mov
imul
xor
imul
pop
pop
popf
sti
mov
and
loopne
mov
mov
adc
adc
mov
push
lods
fcomip
xor
adc
imull
mov
cltd
dec
mov
divb
cmpsl
out
pop
fnstenv
push
inc
jecxz
in
loopne
jne
idivl
stos
hlt
or
lea
pushf
cs
lcall
gs
push
mov
and
psraw
pop
and
es
adc
xor
stos
add
cli
stc
jns
dec
jl
push
lods
insl
sahf
ja
jp
xor
xor
loope
daa
test
ds
push
fistpll
mov
cmp
jae
sahf
popa
and
pop
cmpl
dec
pop
popa
scas
mov
neg
mov
sbb
mov
xlat
leave
mov
pushf
sbb
mov
lret
dec
pop
into
mov
mov
adc
jge
inc
mov
rcl
std
xor
mov
add
lods
inc
clc
aaa
clc
xchg
fcoml
outsb
inc
xchg
ret
cmp
fildll
jb
add
lea
jge
fsubrs
mov
movsl
rcrb
fsts
add
mov
scas
xchg
pop
shlb
imul
insb
ds
xorb
sbbb
dec
adc
ret
pop
repz
and
inc
adc
dec
jle
lcall
and
stos
add
sbb
lret
test
and
lods
push
push
mov
mov
pop
leave
mov
lret
lret
stc
in
rcl
xchg
cli
or
test
lock
lock
pop
and
inc
shrb
dec
add
es
and
jbe
sbb
les
adc
rorb
out
loop
jl
lret
popf
in
lcall
jb
les
pop
mov
sub
int3
pop
sar
xchg
in
jge
je
dec
cmpsb
cmp
shr
pop
rcrl
mov
fdivl
push
mov
jp
cmpsb
pop
fistpll
sbb
in
xor
adc
xor
pusha
testb
into
out
pop
or
cmc
sub
adc
pop
xchg
aad
and
pop
repz
movsb
mov
arpl
gs
ja
jns
or
imul
sti
jnp
aad
dec
xchg
sub
lea
outsb
int3
fdivrl
sarl
add
hlt
test
testl
mov
je
adc
mov
jo
pop
or
pop
popa
insl
and
cli
push
xchg
mov
mov
mov
lock
or
arpl
push
into
jg
add
data16
pop
cmp
aad
cmc
pop
insb
aaa
into
or
hlt
pushf
sub
sub
hlt
adc
push
iret
data16
xchg
and
divl
je
add
das
and
push
xlat
sbb
jle
xor
mov
ret
push
pop
sub
ret
in
movsb
push
ds
lea
xor
dec
or
inc
lea
mov
pop
add
dec
cmp
push
incb
pop
into
add
pmullw
mov
adc
xchg
dec
mov
inc
or
in
jmp
jnp
lret
mov
push
scas
pop
lock
scas
mov
ss
stos
ss
fistl
jns,pn
movsl
cmp
repnz
andb
cmpsb
mov
icebp
adc
mov
dec
aad
js
mov
aad
sti
aaa
mov
add
mov
xchg
mov
scas
sub
test
lahf
cmpsb
jge
shlb
cltd
lock
or
mov
lcall
xchg
jle
mov
divb
or
jge
and
cwtl
loope
lret
mov
mov
jmp
sbb
push
lcall
add
in
out
lahf
sbb
cmp
jne
orl
jb
clc
lret
sbb
pop
jb
testb
xchg
add
mov
inc
and
and
or
mov
cmp
sbb
sub
fwait
push
out
push
test
cli
add
xchg
cld
and
lret
dec
sub
loope
insl
push
icebp
push
cmpb
add
clc
jmp
and
fisttps
or
idivb
fnclex
loope
mov
cmp
out
imul
adcl
rclb
les
push
fidivs
popf
xor
xor
cmpsl
pop
push
hlt
jns
shlb
inc
sbb
shl
jnp
cmpsl
repnz
fdiv
cli
xchg
sbb
cmp
xchg
lahf
psraw
xor
push
jae
xor
loopne
adc
pop
pop
mov
aad
add
ja
pop
xchg
add
aas
sbb
call
and
jge
ja
pop
mov
pushf
or
outsl
leave
inc
jae
push
mov
xchg
and
or
clc
fs
ficoml
insb
jmp
lret
jb
add
inc
mov
fcmovne
popa
pop
rcrb
add
mov
fidivrl
sbb
syscall
hlt
xorl
ja
mov
loope
movsb
dec
das
xor
sbb
loop
xor
fucomip
xor
mov
dec
data16
and
mov
add
data16
fs
clc
xchg
inc
add
aam
test
inc
push
out
dec
ret
or
lds
dec
ret
mov
inc
jge
cmp
rolb
sub
imul
inc
nop
mov
add
lods
or
out
xchg
cmp
cwtl
sbb
cltd
fwait
inc
shll
push
mov
and
imul
pop
adc
pop
mov
pop
and
sub
int3
jo
ds
xchg
xchg
ret
repz
fidivs
daa
mov
inc
call
push
decl
mov
mov
sbb
mov
cmp
popf
mov
test
shlb
lea
push
push
scas
das
imul
mov
cmp
push
jns
loope
lock
rorl
scas
adc
inc
pop
jge
xor
sub
and
movsb
dec
lea
pop
outsl
jge
cld
and
test
addr16
xor
dec
aad
and
mov
js
lds
call
add
dec
hlt
ret
pop
jbe
xorb
cmpsl
in
and
rol
push
inc
or
xchg
mov
push
jmp
xorl
mov
out
dec
pop
loopne
mov
jb
shll
add
in
orl
xor
lahf
mov
sbb
inc
mov
inc
test
ja
std
ja
rcrl
adc
cmpsb
les
scas
adc
sub
outsl
push
and
push
jl
inc
lret
or
cmp
pop
loope
ljmp
imul
sub
mov
je
cmc
cmp
cmp
and
rcrl
mov
add
std
mov
push
pop
pop
pushf
cmp
sarl
es
scas
lock
rcrl
or
scas
lret
mov
into
jl
fimuls
mov
jae
pop
mov
jno
addr16
xor
rcrb
inc
je
sub
jb
dec
scas
arpl
shlb
jecxz
pop
xor
sub
call
sub
cmp
nop
imul
mov
es
jp
add
pop
cmpsb
in
xchg
jle
cmp
mov
ret
sub
cltd
mov
xchg
scas
nop
jp
jae
jns
sbb
pop
xchg
push
out
lahf
jg
iret
cli
mov
aas
jp
push
popf
fstl
sbb
jp
arpl
addr16
mov
into
sbb
fisttpll
inc
stos
jp
shll
lcall
movsb
jle
jne
int3
mov
sbb
sbb
es
stos
testb
scas
xchg
rcr
adc
xor
sbb
or
mov
call
mov
lds
mov
inc
push
add
incb
lea
mov
shlb
pop
sarl
ror
cmc
scas
lock
repnz
jle
test
lret
inc
lods
scas
mov
daa
iret
das
adc
leave
pushf
popa
mov
loop
sub
out
dec
xchg
inc
cmp
out
mov
mov
addb
adc
ret
testb
pop
lahf
xchg
ret
push
adc
and
mull
rolb
sub
cmp
ja
in
dec
scas
mov
into
mov
push
push
loop
mov
mov
fdivrs
imul
fstpl
dec
fabs
pop
pop
icebp
fdivrs
pusha
ja
add
xor
mov
hlt
stos
ss
sbb
mov
jp
enter
insb
shrl
addr16
add
sbb
scas
jbe
lock
cmpsb
jg
in
addr16
das
int3
fsubl
mov
jns
fdivp
dec
xchg
leave
and
push
fcmovu
dec
lock
lahf
cmpsb
mov
pushf
fucomp
jmp
out
inc
bound
jg
out
popf
cmpsl
ds
vmread
mov
mov
ror
cmp
mov
outsl
test
fs
add
fwait
aaa
mov
adc
inc
push
add
jp
fs
sbb
loopne
icebp
data16
fsubr
daa
rcrb
or
pop
inc
mov
out
data16
xchg
pop
sub
sub
aas
mov
int
xchg
sbb
xchg
jns
and
ret
dec
popf
push
pusha
subb
dec
push
decl
idivb
int
adc
jmp
bound
daa
in
adc
sub
add
es
divl
aad
dec
notl
or
stos
icebp
mov
lea
pop
int
xor
sub
mov
outsl
jb
lods
inc
xchg
leave
xchg
lds
cmpsl
jle
sub
addl
fs
pop
push
jae
pop
pop
jg
loopne
push
pop
jnp
xchg
sub
xchg
xor
push
movsl
lret
xchg
inc
faddp
fisubs
inc
frstor
pop
add
cmpb
movsb
mov
mov
xchg
dec
and
pushf
mov
dec
jmp
sub
sub
push
ret
popf
cmp
int3
jge
jne
stc
lahf
dec
xlat
enter
clc
mov
add
fisubl
pop
lcall
mov
adc
orb
jnp
dec
pop
mov
in
lcall
cmpsb
add
mov
insb
xchg
leave
mov
jp
cmc
mov
aaa
adc
stos
inc
xor
je
mov
out
pop
ret
pop
push
out
sbb
jae
cmp
push
shrl
mov
sahf
mov
fsubrp
jg
imul
popf
cmp
sahf
imul
shrb
fadds
sahf
or
sbb
orb
imul
sbb
sbbl
pushf
insb
je
mov
mov
cmpb
insb
int
push
mov
fstl
ljmp
xor
cwtl
sbb
daa
cmp
shll
scas
mov
ss
pushf
and
push
or
aas
ljmp
push
lock
aad
lock
mov
ret
stos
lea
test
sbb
cs
mov
push
icebp
mov
fsubrs
jo
sub
mov
xchg
jmp
shlb
xchg
sub
nop
imul
dec
add
mov
pop
out
push
and
ja
insl
push
cmp
scas
sbb
testl
and
jp
pop
and
fildl
aas
push
shlb
and
pop
xchg
cs
adc
jo
mov
andl
loop
jp
inc
push
fiaddl
inc
fdivs
fucomp
mov
shll
mov
jno
in
dec
jecxz
push
je
out
add
scas
jmp
iret
fdiv
sub
imul
leave
push
int3
fadds
fdivrp
pop
into
or
jl
add
jle
ror
lea
outsb
int3
imul
popf
insl
cmc
leave
xchg
xchg
mov
ljmp
jno
adc
jl
xor
pushf
call
dec
ror
jnp
out
in
sbb
jl
mov
rorl
or
mov
stc
mov
movsb
and
stos
and
mov
inc
jmp
adc
push
sarb
aad
subl
fwait
out
lds
mov
mov
xchg
sub
aam
inc
or
pop
jmp
outsl
add
sub
xchg
xrelease
push
sbb
pusha
fisttpll
push
sarb
lret
and
dec
lds
scas
mov
jle
sahf
mov
pop
movsl
call
add
and
test
insb
mov
arpl
add
sahf
push
jbe
mov
and
adc
ljmp
xlat
ret
fwait
push
ss
and
adc
outsb
inc
int3
xor
jbe
or
pop
jl
jmp
movsb
insb
pop
lock
lds
adc
add
xor
fisubrs
test
clc
shll
jae
cmpsl
test
adc
dec
cmp
push
dec
dec
fisttpl
mov
cmp
and
test
xor
push
in
inc
or
jmp
xlat
arpl
sar
dec
dec
in
and
addr16
jns
loopne
and
sbb
lret
pop
lds
outsb
je
jbe
stos
pop
jne
inc
js
push
mov
fwait
movsl
test
mov
mov
out
mov
push
in
ficomps
or
jmp
and
sub
mov
mov
mov
popf
jbe
cli
pop
mov
out
and
push
cmp
scas
outsb
lods
jno
jbe
cltd
xor
push
xor
lret
push
pop
mov
jo
add
sub
fdivrl
or
les
inc
fs
mov
push
cmp
enter
in
push
je
pop
out
int3
jle
lea
ja
adc
lods
sbb
jb
pop
loopne
mov
xchg
int3
out
js
fld
inc
or
pop
push
dec
mov
jae
out
bound
jp
or
mov
jnp
dec
mov
mull
in
test
fistpll
add
int
jp
daa
mov
pop
loope
arpl
ja
mov
dec
iret
mov
cwtl
aaa
xor
add
mov
pusha
mov
lods
mov
into
jne
xchg
add
lret
sti
test
sarb
ret
and
popa
and
inc
mov
je
cmp
in
sub
push
outsl
cmp
into
jp
mov
out
clc
dec
into
sub
mov
xchg
cmp
movsb
add
push
push
aam
stos
aaa
xchg
negl
lds
add
popa
xor
test
or
dec
fistps
xor
jbe
sub
cmp
in
add
jp
mov
lahf
xchg
lds
scas
jle
pushf
lods
ljmp
sbb
mov
cld
ljmp
ja
cmp
pop
dec
iret
mov
decb
xchg
rorb
dec
pop
test
leave
movsl
cmp
inc
sub
movsl
jmp
rcrl
pop
pop
add
ds
pop
mov
test
cmp
aad
sbb
js
jecxz
and
negb
out
out
cmpsl
xchg
pop
xchg
stos
cmp
xchg
sub
xchg
xor
insb
xchg
push
stos
inc
dec
jl
testb
jl
lods
pop
jmp
add
out
cmpsl
adc
dec
pop
and
test
mov
xor
imul
mov
shl
pop
or
jns
popf
push
aas
shr
int3
cmp
xchg
cld
or
ret
andl
lock
xor
rorb
js
add
push
xchg
aas
adc
clc
fwait
xchg
push
mov
pop
or
mov
fisubrl
jae
addl
xlat
pop
inc
dec
dec
jge
imul
add
and
pop
iret
leave
push
xchg
lods
sbb
in
loope
fmull
ja
cmp
call
sbb
push
xchg
scas
test
cmp
aas
cmp
cld
jge
cs
or
loope
xchg
lcall
test
cs
mov
lea
std
ret
daa
loopne
mov
inc
hlt
mov
adc
insb
push
push
insl
add
push
lret
cs
test
and
repz
ljmp
sbb
subb
dec
sub
sub
repz
pop
sub
or
push
push
add
stc
or
icebp
push
insb
movsb
es
out
mov
xchg
mov
imul
jmp
cmp
orb
cld
subb
aas
or
and
test
lds
testl
test
mov
xchg
inc
push
push
xchg
inc
or
jp
mov
mov
or
push
jnp
or
aad
arpl
repz
nop
mov
xlat
add
cmpsb
jl
or
add
sub
loopne
jg
sbb
mov
andb
jb
ret
cmp
xchg
mov
xlat
ficoms
lock
aas
sarb
pop
pop
icebp
pop
sti
mov
dec
or
jmp
pop
mov
sti
aad
fdivs
out
lahf
sahf
add
adc
push
popf
in
cltd
xor
adc
fwait
sub
push
icebp
sbb
sahf
add
sbb
mov
sbb
xlat
pop
mov
sub
scas
stc
mov
mov
jmp
jbe
dec
in
adc
jbe
imul
jle
and
lret
sbbb
lahf
cmp
mull
fisubrl
in
lahf
mov
dec
hlt
lods
inc
sub
xchg
xor
mov
shr
mov
cli
xchg
stos
inc
push
fsqrt
in
arpl
mov
repz
repnz
call
sti
outsl
imul
movsb
popa
jl
ret
cmp
nop
jle
adc
cmp
mov
push
xchg
mov
clc
pop
mov
xchg
sub
inc
cmc
out
test
push
sbb
fwait
in
mov
adc
icebp
jp
jge
or
cmp
add
xchg
in
cmp
xor
je
jmp
aad
ret
push
sub
inc
aas
jp
aaa
inc
out
add
inc
fs
and
test
mov
imul
addr16
push
call
out
inc
outsl
jnp
fstpt
sbb
out
mov
fistl
in
les
and
and
adc
in
mov
pop
jbe
jne
lds
fiaddl
sub
pop
stos
xchg
or
int3
outsl
cld
loop
ljmp
lea
and
adcl
rorl
movsb
fs
sbb
mov
mov
ljmp
daa
iret
sub
in
adc
fldl
in
shrb
adc
addr16
xchg
or
mul
mov
adc
shrl
fwait
and
mov
xchg
inc
and
add
cmpb
push
les
sbb
mov
pushf
add
into
mov
mov
mov
inc
jecxz
pop
xchg
or
mov
movsl
insb
pop
int3
mov
lahf
imul
and
popa
add
clc
adc
xchg
pop
mov
add
sbb
cmpsl
gs
add
mov
pop
xor
inc
fs
sub
xor
idivl
mov
test
mov
fcmovbe
inc
cmpsl
push
pop
outsb
jp
mov
fstps
xchg
push
stos
or
sbb
inc
fldl
adc
mov
push
iret
fstpt
and
push
push
fnsave
daa
xor
cli
cltd
add
ds
add
and
push
xlat
inc
jmp
sti
and
movsb
mul
add
push
fidivl
movsl
sub
xchg
hlt
or
and
pop
mov
push
es
jge
shrl
cmpsb
test
adc
jae
in
xchg
sbb
cmp
in
pop
mov
jns
fiaddl
pop
jmp
adc
ds
mov
enter
mov
pop
cltd
inc
outsl
xchg
shlb
js
orb
sbb
mov
sbb
cmp
jmp
inc
and
mov
xor
mov
xor
jmp
sbb
jne
jg
sbb
addr16
nop
jnp
jge
dec
sub
cld
ret
xor
cmpl
cmpl
xor
ja
pop
les
call
inc
push
add
push
jne
filds
fisttps
jmp
mov
xor
aam
fdivr
or
xchg
lret
sti
clc
rol
ss
clc
jnp
ljmp
or
sbb
daa
adc
pushf
cli
or
adc
add
outsl
cmp
mov
xor
rcll
cmc
pop
jb
cmp
mov
jns
or
arpl
or
mov
mov
or
lahf
cld
movsb
xchg
xchg
mov
add
cmp
es
push
jbe
cli
sbb
mov
push
jbe
xchg
in
negb
stos
mov
cltd
inc
sbbl
xor
sbb
iret
loop
dec
js
cmpsl
ds
cltd
aam
mov
jae
fcoml
lahf
mov
cs
or
cmpsl
fwait
loopne
lods
sub
mov
rorl
dec
pop
leave
je
js
pop
xchg
scas
cld
push
icebp
aas
loopne
jnp
pop
insl
push
push
mov
lods
jg
mov
js
sbbl
jmp
sbb
and
mov
fistl
mov
mov
jmp
aad
stos
or
pop
jno
mov
adc
pmaddwd
jae
cli
rclb
loop
jo
pop
sub
sub
sbb
je
ret
sub
dec
in
add
jle
dec
mov
push
sti
add
nop
cmpb
lea
jmp
push
test
mov
orb
out
mov
fwait
dec
fwait
mov
xor
xchg
enter
mov
in
outsl
mov
jae
in
push
xchg
not
pusha
sti
mov
jae
adc
cmc
test
ljmp
and
bsf
dec
jb
push
dec
test
mov
sub
push
subl
add
clc
push
cmpsl
ret
jno
scas
fidivrs
sbb
lods
sub
fstpt
pop
push
icebp
pop
imul
add
jmp
lds
imul
fidivl
or
adc
add
adc
xchg
add
push
inc
push
sbb
sahf
pop
in
xchg
and
dec
lock
sub
pop
sti
push
sub
cmpsb
addl
jl
push
loop
psubsw
push
xor
adc
dec
jbe
mov
ja
leave
xor
negb
mov
pop
adc
xchg
lock
repnz
bound
leave
into
xor
push
lods
cmp
lods
mov
sbb
xor
std
mov
ret
rorl
stos
adc
mov
test
inc
cmpsl
xor
adc
jne
enter
push
insb
shl
ja
dec
xor
pop
fwait
xor
pminsw
out
xchg
aaa
shll
out
mov
mov
call
xchg
push
lret
jnp
andl
repz
sub
lret
adcl
mov
dec
cmp
notl
xlat
mov
roll
lock
and
pop
add
add
loope
ja
xchg
jne
pop
dec
pop
test
xor
notl
dec
stos
mov
lret
adc
fbld
outsb
jecxz
xchg
mov
aam
mov
and
sti
fwait
adc
or
stos
jg
xchg
add
imul
cwtl
bound
mov
sbb
ficoml
adc
mov
sahf
outsb
daa
pop
jecxz
js
pop
test
or
cmp
int
out
testb
cmp
popa
jge
adc
add
bound
cs
loopne
ljmp
push
fists
xor
scas
mov
adc
pop
out
add
pop
fimuls
add
insl
mov
xchg
xor
add
aas
adc
cmp
push
movsb
out
test
lods
and
les
lea
jne
out
push
xchg
dec
stos
out
insb
ret
ljmp
fsubr
dec
cld
and
mov
adc
sub
push
mov
js
repnz
cmp
mov
and
xor
cwtl
std
int3
aad
js
dec
in
sbb
js
adc
mov
pop
loope
aam
sahf
orl
aam
test
rcr
push
jecxz
mov
divl
add
es
pop
xchg
jne
fbld
xor
and
inc
add
xorb
add
popa
std
and
leave
push
in
data16
push
xchg
ljmp
and
dec
jecxz
dec
out
or
enter
call
mov
ds
xor
imul
jp
xor
jmp
sbb
xor
adc
inc
in
cmp
xor
mov
add
aam
negl
ja
out
xor
jbe
xchg
das
and
cld
adc
ret
loopne
and
and
push
mov
mov
enter
sub
je
mov
fdivl
rol
mov
jge
fwait
cmpsl
js
jle,pn
inc
call
inc
jne
mov
gs
cltd
adcl
loopne
and
and
jb
scas
lret
pop
lea
push
fsubrs
xchg
mov
sbb
repnz
cltd
xor
xchg
mov
rorb
adc
xchg
pushf
in
sti
mov
jne
dec
inc
sti
test
mov
mov
mov
xchg
and
sbb
into
push
sbb
mov
cli
clc
rep
fidivl
mov
xchg
inc
mov
mov
xchg
notl
ret
xchg
mov
ret
add
hlt
aas
mov
push
mov
fstps
fmull
cmp
push
sbb
jb
jmp
lds
inc
test
iret
and
ljmp
push
ret
outsl
iret
xchg
flds
pusha
cmpsl
dec
je
cmpsl
scas
cmp
and
sbb
inc
push
lahf
stos
je
aad
fidivl
or
inc
arpl
nop
fs
mov
arpl
xchg
pop
nop
pop
dec
dec
sub
dec
scas
push
xchg
mov
cmp
inc
dec
xlat
repz
lds
jg
and
fmul
movsl
sbb
stos
stc
xor
sbb
jo
or
lock
and
mov
adc
pop
inc
cmp
add
imulb
inc
push
testl
pop
or
aaa
push
xor
repz
lock
ss
mov
ss
push
push
lds
cld
sti
inc
xchg
mov
xor
arpl
xchg
dec
mov
test
mov
lds
mov
sub
fisubrs
adc
imul
popf
lods
imul
cld
sti
std
adc
fcmovu
jne
xchg
pop
imulb
test
add
jp
hlt
or
sub
pop
nop
mov
pushf
adc
gs
add
xchg
sub
mov
nop
sahf
negl
js
sarb
shl
xchg
inc
push
into
out
pop
sahf
jecxz
sbb
fsubrs
dec
mov
push
dec
sub
inc
fnstenv
mov
xchg
mov
lret
pop
push
fmuls
fdivrp
adc
cld
sbb
sub
pop
adc
lods
pop
mov
scas
pop
sub
fstpl
pushf
in
or
jg
cmp
fsubr
outsb
out
movups
je
adc
push
imul
imul
mov
or
cmp
adc
ja
or
mov
aam
pop
test
sbb
sbb
dec
sub
cli
pushf
xchg
add
ljmp
movsl
xlat
mov
or
pop
pop
ds
and
fwait
sub
imul
daa
jbe
sbb
stc
sahf
mov
dec
pop
js
xchg
push
rol
jbe
sub
pop
mov
hlt
mov
and
mov
sbb
outsl
pop
cs
test
sti
gs
push
xchg
popf
add
jg
mov
js
inc
leave
push
push
dec
jmp
insb
gs
cmpsl
ret
test
and
cmpsb
xlat
xchg
das
inc
cwtl
and
push
jnp
xlat
and
adc
addb
and
jl
insl
in
cmp
mov
pusha
sbb
popa
sbb
cmc
mov
and
stc
loop
xchg
fwait
sbb
sub
dec
loop
and
mov
loop
sti
pushf
jae
punpckhwd
or
xchg
adc
gs
mov
aas
les
addr16
dec
imul
ss
mov
sub
je
push
xchg
or
push
mov
fdivl
cmp
xchg
arpl
mov
outsl
movsb
ret
push
test
inc
out
xor
sub
int
push
enter
jle
fldcw
inc
call
test
mov
negl
outsb
adc
dec
fsubp
jb
mov
rcll
lds
shl
xor
into
push
cltd
das
mov
push
jne
mov
pop
xchg
lcall
adc
outsl
mov
fcom
pushf
outsl
mov
push
loop
pop
aam
js
xchg
incb
cltd
sbb
push
popf
sarb
mov
ret
jp
inc
fstl
pop
loope
xchg
fcomip
int
in
or
fincstp
adc
popa
jae
mov
data16
dec
int3
jg
pusha
pop
push
les
jne
call
mov
and
add
jmp
jle
icebp
lods
repnz
ds
out
fimuls
inc
loope
fnstenv
aaa
fnstsw
cld
daa
out
jno
and
mov
inc
rolb
or
jmp
add
push
jne
jae
jle
iret
scas
out
push
mov
push
xchg
sbb
push
pop
mov
xor
cli
jae
lock
out
jbe
or
pop
pop
xchg
nop
or
and
push
and
mov
cmpsl
push
xor
jb
fucomip
rorl
push
pop
clc
cmp
repnz
adcb
in
or
int
push
data16
inc
or
sbb
xchg
ret
mov
into
out
out
fstl
pop
xchg
cs
fadd
movsb
inc
xchg
add
mov
lret
mov
mov
movsb
gs
mov
ss
outsl
call
aad
or
aaa
push
divb
push
out
xchg
adc
mov
xchg
popa
les
rorl
test
repnz
scas
inc
add
dec
loope
orb
pop
out
in
sub
sub
in
jns
adc
xor
xchg
jmp
adc
add
fisubl
shlb
stos
loop
aam
jmp
in
pop
sahf
jb
out
dec
pop
and
jecxz
gs
cmp
addb
mov
add
add
cli
jecxz
cwtl
adc
popf
sub
jno
and
jo
dec
aaa
adc
addr16
dec
xacquire
jns
scas
jnp
mov
lret
and
push
push
or
jge
and
flds
int
inc
lods
inc
ja
push
fisttpl
add
popa
pop
out
xlat
sbb
pop
iret
outsl
sub
les
pop
and
mov
and
insl
mov
mov
push
adc
jp
lock
mov
jl
in
push
cmp
pop
xor
push
xlat
pusha
pop
aam
int
pop
ret
fstpt
ret
add
mov
sti
jp
icebp
std
outsl
inc
push
scas
inc
inc
jbe
pop
test
xchg
push
mov
cmp
mov
jno
aaa
in
imul
jge
xor
jmp
jl
mov
call
scas
repz
test
adc
pop
fs
cmpsb
cmp
pop
inc
in
int
arpl
jbe
lds
ljmp
sub
notb
mov
mov
inc
sbb
inc
insb
inc
and
mov
jle
xchg
cmp
pop
adc
out
lret
lcall
cwtl
pop
jle
mov
call
and
imul
in
out
sti
hlt
int
mov
lea
aad
mov
and
scas
inc
rcrl
stos
mov
mov
cmp
and
pop
in
dec
pop
hlt
test
ljmp
ja
cmpsl
sbb
xchg
adc
and
cld
incl
movsb
sti
xchg
mov
fmull
pop
addr16
imul
mov
test
pop
jecxz
je
int
out
sub
pop
icebp
test
pop
in
xchg
sub
fwait
or
cmp
sub
inc
ja
cmp
xchg
add
inc
insl
add
aad
or
scas
out
add
jb
gs
mov
push
push
fnstsw
mov
pop
popf
xor
orb
scas
xchg
push
jmp
inc
mov
movsl
icebp
int
in
test
imul
dec
loop
jge
and
adc
loop
inc
and
push
add
sarl
push
and
movsl
jns
arpl
cmp
cltd
inc
insb
pop
cmp
fldln2
test
jl
or
fsubrs
nop
popl
mov
pusha
pop
mov
sbb
pop
mov
inc
es
test
inc
push
fidivrl
les
pop
hlt
pop
sbb
imul
sbb
dec
insl
aas
jbe
or
js
adc
pusha
pop
lds
sub
xlat
sub
dec
or
scas
pop
sub
jb
shlb
add
sti
rcrb
ja
and
clc
into
data16
pop
cwtl
out
push
addb
sar
mov
mov
clc
imul
stos
mov
lods
mov
je
jmp
aas
insl
and
sahf
pusha
cmp
xchg
mov
aaa
into
mov
js
shrb
inc
fdivrp
jl
cld
lods
or
pop
cmp
mov
mov
es
push
push
loopne
xorb
mov
jge
jno
loop
jmp
data16
xchg
xor
gs
nop
daa
in
and
enter
popf
push
jne
out
je
mov
stos
fdivr
xchg
adc
push
lcall
jb
test
mov
lcall
pop
mov
cld
lods
je
fimuls
xchg
sub
xchg
cmpsl
mov
aad
xchg
sub
loop
push
adc
sub
fsubrs
jg
dec
lods
test
mov
push
out
push
jl
push
scas
das
jne
popa
iret
fsubrs
xorl
mov
mov
cmp
aad
mov
lods
inc
or
testl
mov
loopne
jbe
loopne
lret
mov
call
cmpsb
cmpl
xlat
ds
jnp
lret
pop
repz
int
call
movsl
punpcklbw
cmp
pop
jle
nop
mov
je
out
call
cmp
mov
pop
mov
lds
shl
scas
iret
data16
movsl
cmp
inc
pop
lock
daa
mov
fsubrs
push
in
pop
inc
push
call
cmc
lods
dec
loopne
sub
pop
cmp
xor
in
rep
xor
and
ret
call
fldenv
sub
fdivs
inc
fdivrp
lods
scas
inc
loope
xchg
pop
cmp
test
enter
stos
fisubl
xlat
outsb
push
inc
sub
jae
mov
fstps
hlt
mov
or
xlat
add
cld
dec
inc
cmpsl
jae,pt
test
push
loope
test
inc
add
ret
cwtl
pop
fdivl
mov
aam
loop
imul
aaa
imul
mov
fwait
xor
stos
jge
loopne
inc
fldl
xchg
gs
xchg
pop
outsb
add
call
or
mov
sub
daa
mov
addb
shrl
push
rclb
xchg
mov
jb
and
pop
loopne
mov
xchg
mov
lods
pusha
xor
xchg
jg
movsb
lods
mov
mov
jo
popa
movsl
jle
subb
or
mov
ja
or
jae
outsl
mov
ja
xor
jae
scas
mov
jbe
lea
je
test
jge
test
lret
mov
xchg
jge
add
data16
xchg
xchg
bound
mov
mov
mov
mov
push
mov
bound
imul
aam
lahf
bound
xchg
mov
jbe
outsb
fidivs
bound
adc
outsb
sub
sahf
popa
jmp
xchg
mov
xchg
mov
shrb
cmp
xchg
ja
jnp
sbbb
mov
mov
mov
jne
dec
test
stc
nop
mov
push
jmp
lea
fs
and
mov
imul
lcall
pop
mov
and
aaa
lcall
sarl
push
mov
mov
mov
outsb
jne
lahf
imul
mov
insl
shrl
push
mov
xorl
mov
jae
mov
je
cld
test
push
popf
lret
jle
bound
jg
xchg
scas
cltd
pop
cmc
lret
jg
test
jg
insb
scas
addb
lods
fs
movsl
cwtl
jle
subb
imul
insb
inc
xlat
mov
jno
add
mov
jae
mov
push
xchg
mov
rol
inc
push
push
mov
xchg
cs
test
push
sub
nop
popa
imul
leave
pusha
cmp
push
popa
div
mov
mov
and
jmp
jnp
pusha
adc
inc
scas
cmp
mov
and
rcll
adc
xlat
mov
jl
clc
dec
popa
clc
jl
dec
loopne
mov
cmpsl
ds
test
lock
pop
jbe
adc
inc
pushf
push
popf
int
add
cwtl
push
into
mov
sbb
leave
xlat
add
xchg
jmp
dec
lcall
lahf
push
xchg
sub
mov
jge
mov
jg
mov
aad
movsl
cmp
dec
fs
jnp
xchg
sub
jno
push
movsb
dec
jp
cmpl
mov
lods
push
cmp
xorl
int
jp
sub
ja
and
mov
rcrl
mov
daa
jae
mov
jg
sahf
lods
hlt
lcall
add
xor
dec
loop
out
inc
ficompl
rolb
add
outsb
add
dec
out
mov
fdivrs
iret
or
push
out
inc
adc
outsl
push
pavgb
adc
jl
dec
or
adc
sbb
mov
mov
lcall
fmull
stos
jnp
loopne
insl
mov
ret
sbbb
push
aam
sbbl
xchg
push
mov
push
out
test
xchg
and
jge
sti
inc
sbb
push
xchg
clc
pop
jae
jmp
sbb
cli
xchg
cmp
sti
push
or
push
mov
jb
cmp
loop
mov
divl
pop
data16
dec
xchg
sti
mov
testl
sub
jg
sbb
xor
movsb
fsubs
ljmp
dec
jecxz
jge
insl
stos
outsl
jb
popf
int3
sbb
in
sbb
mov
pop
jo
jno
pop
mov
les
and
push
repnz
cmp
test
pop
imul
loope
mov
aas
add
mov
push
jmp
mov
xor
fiaddl
push
xor
in
sub
dec
pop
icebp
jg
fnstenv
pushf
insl
lret
out
ds
pop
pop
mov
ret
scas
in
fisubs
lret
pop
test
nop
mov
pushf
xor
hlt
or
test
lock
xrelease
test
dec
in
popf
inc
xlat
lret
add
out
test
lods
push
adc
mov
sbb
cmp
push
sub
sub
shll
push
stos
cmp
int3
mov
ret
sub
xlat
dec
cmp
push
fdivl
cmc
jmp
or
add
test
sub
insb
arpl
orl
pop
add
push
mov
out
mov
sub
lret
stos
lahf
xor
mov
mov
stos
inc
xchg
test
stc
mov
pop
or
mov
and
lahf
ss
mov
add
mov
sti
sub
scas
xchg
or
dec
arpl
cmpsl
pop
pushf
fistpl
pusha
movsl
mov
leave
push
call
and
sarb
mov
xchg
jp
cmpsl
pop
loope
lahf
mov
fstpt
jecxz
cmp
dec
lods
insb
xchg
sti
dec
out
sbb
aad
adc
pusha
add
fs
jae
mov
in
dec
mov
sbb
fs
andb
xor
gs
dec
xchg
call
pop
xchg
or
adc
iret
cmp
push
adc
push
out
push
outsb
std
xchg
adc
push
dec
lahf
pop
das
and
push
jae
sub
cmp
or
inc
sub
in
xchg
mov
scas
cmp
fistpll
into
cmpl
mov
dec
xchg
jg
sub
mov
push
pop
rcrl
mov
mov
out
mov
in
mov
xor
clc
mov
mov
inc
add
sarb
and
and
mov
add
call
lock
ret
pop
sbb
dec
pop
mov
dec
mov
jb
sbb
xchg
lcall
or
and
xchg
cld
and
repnz
int
xlat
ss
pushf
fidivs
adc
clc
xchg
mov
jne
add
mov
mov
loopne
fidivs
mov
or
data16
cltd
inc
mov
mov
mov
cmp
repz
mov
jge
adc
push
push
test
dec
mov
dec
call
add
inc
mov
jo
pop
int3
stos
xchg
mov
cmpsl
gs
loope
enter
mov
and
pop
sbb
add
out
ss
dec
add
ret
cmpsl
and
lods
xchg
push
addr16
sarb
mov
and
mov
popa
sub
jg
adc
arpl
inc
ficoml
test
pop
push
mov
inc
jp
mov
dec
aaa
lock
jne
stos
xor
or
cmpb
mulb
and
clc
shlb
or
clc
xor
in
pop
mov
or
jmp
rorb
adc
icebp
inc
cwtl
adcl
jo
push
dec
mov
lock
pop
shlb
popa
cmp
pop
fisubrl
aam
mov
xor
mov
xor
jl
and
mov
pop
out
lcall
mov
test
mov
sbb
cmp
movb
or
and
call
mov
add
sbb
adc
bound
xor
pop
ds
or
scas
outsb
xchg
int
sub
test
lods
jl
fisubrl
jecxz
inc
xor
or
inc
or
jg
cmp
jo
xor
inc
pop
icebp
pusha
mov
xor
mov
out
mov
je
jbe
push
xchg
adc
adc
ds
imull
sbb
mov
and
test
rorl
int3
imul
fiaddl
outsb
ljmp
xor
pop
adc
pop
sar
repnz
shll
sub
outsb
sahf
xchg
fwait
test
and
mov
loop
pop
outsb
mov
adc
pop
enter
cmc
mov
call
aaa
lret
fucomi
add
rcr
or
add
mov
out
and
js
fnsave
mov
in
loop
loopne
aam
sub
xchg
sub
and
and
insb
movsb
movsb
push
pop
repnz
inc
push
inc
into
inc
pop
xchg
mov
xor
popf
lcall
jo
mov
add
xor
mov
push
add
pop
adc
cltd
outsl
add
stos
cmp
add
jmp
ficoms
jmp
fbld
lock
repz
int3
cmpsb
fbstp
hlt
into
in
mov
add
and
push
mov
stc
xor
insl
enter
jo
pop
inc
mov
pusha
pop
jb
bound
xchg
sub
push
shrl
sub
mov
adc
add
add
aas
cwtl
jno
cmp
add
stos
pop
push
jb
add
pop
mov
insb
dec
into
bound
mov
xchg
pushl
mov
mov
sbb
jno
fidivl
aad
inc
jbe
ljmp
adc
mov
jmp
pop
test
add
push
std
xor
jmp
insl
dec
out
iret
call
lods
daa
mov
je
xor
cmp
mov
in
jno
pop
mov
lahf
mov
subb
sub
cmp
test
jecxz
jl
pushl
mov
aam
insl
out
cmp
mov
mov
das
ret
jge
lods
pop
mov
push
sti
cmp
jb
adc
mov
aam
inc
rcrb
test
mov
sub
es
mov
arpl
sti
pop
sub
lods
inc
inc
mov
shlb
repz
jmp
xchg
adc
cmpsl
adc
test
sbb
dec
in
mov
cmp
jb
and
add
add
loopne
xchg
das
repnz
sbb
dec
xchg
push
out
das
inc
repnz
xor
inc
push
addl
inc
je
xor
arpl
popa
dec
mov
mov
push
jle
test
popa
fwait
jmp
cmpsl
jge
push
cmpsl
cmp
stc
xchg
push
ljmp
jo
mov
pop
pop
ret
in
es
cmp
inc
push
pop
push
adc
mov
cli
outsb
push
test
jmp
sub
ret
lret
xlat
daa
xchg
ds
repnz
fsubp
xchg
sub
lret
jmp
int
mov
das
lret
push
ja
adc
movsl
idivl
jecxz
fimull
std
mov
clc
adc
hlt
jo
jp
mov
fidivl
or
mov
add
fsubrs
sarl
mov
shrl
lahf
std
das
or
loop
dec
mov
das
and
sub
dec
ja
and
dec
mov
jle
sub
cmpl
scas
es
mov
push
push
add
mov
sbb
in
leave
cmp
test
mov
dec
mov
ds
jle
imul
fs
rorb
aam
xchg
mov
sbb
cmpsl
subl
call
cmp
lcall
push
cs
cmp
adc
pop
cmp
jno
insl
push
fisubrl
jno
sbb
push
scas
sbbl
push
dec
pop
jae
imul
int3
and
lahf
cmpl
jno
jg
cmp
mov
inc
inc
mov
scas
jb
fistpll
iret
adc
sahf
mov
in
popf
mov
in
sbb
fucomp
or
inc
mov
or
test
mov
lcall
shlb
ss
jo
int3
es
jne
aaa
ljmp
push
stos
mov
mov
or
stos
pusha
add
xor
es
jbe
adc
inc
and
jl
call
xor
sahf
cmpsl
enter
ret
mov
xor
test
fwait
xchg
and
adc
xor
and
test
out
pop
xlat
cltd
call
aam
addr16
mov
cmp
mov
fistl
jo
adc
fs
sub
and
cmp
test
inc
mov
add
movhps
nop
sub
pop
leave
sahf
std
jne
loop
xor
pop
int3
cmp
test
mov
stos
test
adc
cmc
fdivl
cmp
sbb
iret
fiaddl
sub
mov
mov
lcall
mov
out
std
ret
subb
leave
sbb
xlat
mov
mov
popf
jb
repnz
enter
iret
ret
mov
fidivrl
filds
inc
xlat
loope
mov
add
or
popf
arpl
mov
arpl
addl
je
ljmp
pushf
aam
out
or
jp
fadds
jo
fistpll
xor
movsl
mov
addr16
mov
add
imul
mov
icebp
jnp
movb
popa
cmp
fldenv
insb
mov
cwtl
iret
jnp
mov
sbb
mov
ret
out
xchg
icebp
xchg
dec
les
mov
pop
punpckhwd
repz
ret
mov
jecxz
das
shll
pop
mov
notb
cmpsb
imul
push
lret
movsl
pop
xlat
mov
cli
sub
jle
out
mov
insl
mov
repz
inc
sbbl
xchg
xchg
cmp
push
in
and
icebp
into
and
and
dec
push
dec
faddl
rolb
mov
pop
mov
mov
arpl
pop
ds
int
xchg
mov
cmp
daa
popf
adc
adc
arpl
xor
es
xor
jp
popa
inc
xchg
mov
arpl
xor
dec
push
mov
mov
xchg
jbe
and
pop
mov
ret
add
mov
out
adc
push
addb
clc
jge
lds
xor
jbe
push
int3
in
xor
ss
xchg
ja
xor
dec
lds
and
push
dec
cmp
pop
pop
pop
or
popa
pop
add
dec
sbbl
testb
and
mov
ss
push
pxor
aaa
lock
ja
lret
icebp
mov
mov
jo
mov
or
push
push
push
cmp
dec
inc
pop
rclb
inc
movsb
push
sub
xchg
ja
mov
cltd
cwtl
sbb
sbb
xchg
adc
das
sbb
js
push
xchg
jnp
sbb
movsl
popa
test
mov
push
ss
mov
mov
xor
pop
mov
and
jg
cmp
ret
cld
mov
jo
mov
mov
mov
push
add
pusha
jbe
mov
nop
sub
bound
fwait
mov
push
out
shrl
pushf
inc
mov
stos
shll
add
xchg
and
stc
jns
mov
mov
xchg
fadds
pop
shld
xor
jno
inc
pop
push
jg
lods
dec
mov
jg
xor
mov
sub
ds
iret
push
push
pop
scas
pop
inc
mov
pop
push
jno
push
xchg
jns
sub
loope
setae
int
xchg
jmp
mov
out
sbb
loope
rcl
cmp
jg
xor
fdivl
jl
xchg
and
pmulhuw
cld
mov
and
cmpsb
leave
jb
in
ljmp
js
out
mov
div
sbb
xor
mov
jo
sub
xchg
mov
repnz
popf
mov
jbe
int3
push
pop
shll
inc
cmpsl
stc
popa
aas
cmc
xor
jb
or
jae
icebp
loope
jmp
inc
mov
repz
fldcw
je
sbb
popf
push
lock
pushf
push
enter
mov
mov
ret
test
outsb
xor
ret
inc
aad
ja
ret
subl
nop
scas
jne
sbbl
scas
iret
dec
addr16
cmp
bound
inc
ret
pop
repnz
push
sub
push
dec
repz
imul
je
dec
hlt
cs
out
and
jl
push
inc
pop
out
push
xchg
push
mov
arpl
push
sahf
test
adc
xchg
or
popf
loope
mov
push
inc
int
cmc
sub
mov
ficompl
in
cmpsb
movsb
mov
hlt
or
leave
popf
mov
add
jmp
xchg
rorb
stos
movb
mov
xor
fsubrs
sbb
scas
mov
outsb
dec
std
and
xchg
push
sarb
push
pop
mov
jle
in
sub
jbe
shll
sarl
enter
add
and
mov
xchg
cmc
mov
notl
mov
clc
je
or
mov
jmp
pop
or
or
xor
pushf
data16
cmp
xchg
jns
add
cmp
std
shrl
insl
addb
and
jle
jnp
lock
lds
cli
ds
xchg
lods
push
psadbw
aam
xchg
mov
mov
in
hlt
daa
std
push
fiaddl
test
cwtl
mov
lds
sbb
fistpll
insl
xor
popa
sub
insl
mov
shlb
lahf
orl
adc
inc
jno
cmp
xchg
fists
push
dec
les
fwait
xchg
push
sub
test
jne
mov
andb
xchg
imulb
sbb
xchg
mov
cwtl
ds
jbe
rorb
sbb
test
sbb
ja
inc
les
cmp
jge
adc
xchg
imulb
cmc
mov
loope
add
loop
inc
popf
in
es
testl
adc
jns
aad
sbb
push
push
sub
jnp
jp
adc
jmp
xlat
cmp
repnz
data16
inc
in
xor
push
daa
jecxz
xchg
js
dec
dec
or
pop
dec
push
orl
push
sbbl
adc
add
iret
data16
jge
pop
pusha
lret
push
fldl
jbe
mov
sub
mov
fisubs
hlt
dec
sub
cmp
push
dec
shll
imul
aaa
cmp
cmp
stc
shrb
inc
das
in
or
mov
push
push
sbb
jle
call
add
inc
fildl
stos
stc
das
or
stos
xchg
pop
mov
push
jp
or
sarl
push
lret
mov
sbb
inc
mov
popa
dec
and
gs
mov
jle
imul
jp
stos
inc
sub
pop
dec
iret
aas
jecxz
mov
inc
negl
sub
xor
fwait
dec
inc
lret
outsl
jmp
or
inc
cmp
mov
xchg
push
call
ljmp
xor
inc
ds
sahf
int
and
repz
mov
rcll
mov
call
adc
xchg
movsb
mov
add
mov
dec
adc
push
ja
mov
pop
stc
inc
insl
dec
fs
jae
ds
add
and
pop
ret
sub
or
das
lret
bound
sub
aad
push
cli
push
mov
pxor
shl
mov
push
jbe
jo
dec
rcll
sub
repz
xchg
push
mov
adc
sti
test
repnz
xchg
mov
cmp
int3
mov
loopne
out
jge
int
or
sbb
sbb
fwait
xchg
cmp
push
pushl
fdivrs
cmp
rcll
insb
fstps
or
aas
dec
mov
stc
enter
mov
imul
jmp
sarb
fbstp
ljmp
sbb
sub
in
dec
fcos
and
fmuls
inc
lret
movsb
mov
loopne
inc
adc
xchg
jns
lea
adc
cwtl
ja
cwtl
insb
add
test
aas
adc
into
inc
sbb
mov
ds
cmpsb
jl
jae
jmp
cmpsb
cmp
mov
clc
mov
mov
fstl
inc
outsb
mov
mov
fs
jg
pop
xor
movsb
pop
pop
jo
dec
loopne
xchg
dec
ret
sub
loope,pt
test
hlt
sbb
cmpsb
mov
aaa
jmp
loop
or
cmp
fnsave
ljmp
pop
rorl
cld
add
lods
dec
xor
imul
das
jmp
ss
and
xlat
sahf
jnp
fnsave
pop
shl
ss
addr16
sbb
mov
arpl
xorl
sbb
dec
adc
cmp
push
icebp
loopne
and
mov
push
jp
int3
inc
pop
pop
out
data16
inc
or
adc
out
add
ss
jge
mov
add
gs
xchg
push
jmp
or
fsubl
push
jmp
test
add
push
inc
ficoml
call
shlb
fisttpl
cmp
jns
mov
icebp
cmpl
sahf
cmp
ljmp
rcrl
push
push
shll
bound
sahf
push
mov
inc
mov
dec
bound
cmp
pop
xor
mov
add
push
add
push
dec
inc
loop,pt
sub
push
adc
ss
test
fsubrs
pop
scas
xchg
jb
add
dec
push
pop
pop
dec
adc
push
pop
sbb
xchg
mov
pop
cli
jecxz
jg
mov
push
movsl
dec
les
aad
lock
or
testb
aad
lret
xlat
daa
sbbb
clc
dec
shlb
or
lods
mov
or
fs
pop
stc
cmp
fistl
sbbb
xor
xchg
sbb
sbb
mov
out
cmp
in
orb
push
dec
push
mov
inc
adc
mov
xor
xchg
jge
lret
jge
fadds
mov
push
adc
movsb
pop
incb
mov
sub
stos
inc
lea
mov
jg
mov
sub
cmpb
jnp
mov
repz
mov
fsts
std
push
ret
popf
gs
test
das
fidivl
xor
cld
xchg
jge
ds
jl
cltd
popa
fsubrs
test
gs
ljmp
pop
leave
pusha
pop
das
mov
lea
mov
mov
xchg
sub
dec
jae
cmp
jo
ret
leave
pusha
xlat
push
scas
fbstp
xor
mov
data16
std
jmp
out
push
invlpg
sbb
leave
cmp
sbb
fucomp
inc
xlat
out
out
xchg
clc
int
mov
in
mov
hlt
push
jbe
nop
adc
arpl
popf
or
cmp
lds
pop
add
pop
movsb
mov
dec
insb
fwait
mov
popf
sub
mov
mov
insb
xor
lods
lea
imul
data16
mov
or
fimull
neg
sti
lcallw
loop
outsl
mov
mov
loopne
mov
cmc
repnz
nop
cmpsl
inc
shl
in
mov
repnz
iret
adc
stos
mov
das
cvtdq2ps
js
jmp
fistpll
dec
jae
xor
mov
mov
sbb
test
xchg
out
adc
pushf
out
sbb
mov
loopne
xor
cmp
cmp
add
cmp
xchg
push
sbb
mull
xchg
vphadddq
or
in
scas
adc
pop
mov
and
mov
cmp
shrl
dec
push
loop
mov
adc
inc
bound
ret
jb
xchg
sub
mov
test
add
aam
adc
mov
dec
out
popf
stc
and
pop
aam
ja
test
icebp
cmp
xchg
and
push
jne
jno
outsb
xor
es
xor
popa
stc
lret
andb
fdivrs
mov
cmpsl
cwtl
mov
jl
ja
mov
cmpsl
jg
outsb
jno
cmp
les
xchg
sub
mov
dec
into
fimull
push
mov
ret
ljmp
mov
xchg
sbb
fidivl
pop
lods
outsb
mov
xchg
mov
movhps
popf
mov
mov
test
push
cltd
aad
clc
ss
mov
cmc
cmp
aad
aad
lods
shll
repnz
ficoms
pop
lods
jno
iret
pop
push
int3
fwait
xchg
xorl
add
mov
mov
mov
xchg
loope
pushf
xchg
push
cltd
into
xchg
cs
fldl
fwait
call
adc
xchg
cmp
jae
test
ret
fmull
pop
rcr
jo
push
ror
jg
xlat
sarb
call
lods
out
sbb
scas
pop
ret
in
out
cmpsl
loop,pn
or
jae
xchg
sbb
jns
fs
pop
inc
cpuid
jnp
dec
add
xor
icebp
hlt
inc
mov
ljmp
xchg
shlb
frstor
test
xor
mov
mov
sub
mov
fisttps
adc
sbb
bound
int
addl
xlat
mov
or
push
pop
jne
daa
cmpsl
jge
jne
enter
sar
xchg
add
mov
outsl
jmp
mov
ret
repz
push
in
mov
sbb
insb
dec
out
lea
outsl
stc
nop
mov
pop
push
cmpsl
cmp
inc
xlat
mov
cltd
xor
scas
pop
cmc
pop
jle
scas
scas
inc
jl
jb
inc
fildl
xchg
fwait
xor
and
push
out
cwtl
fcom
adc
mov
out
test
ss
or
mov
mov
insb
pop
sbb
je
jle
ja
outsb
push
popf
lahf
sarl
xor
pop
cmp
cs
xor
mov
shrl
aad
pushf
push
sub
inc
pop
and
scas
sbb
dec
xchg
cmpb
or
add
addr16
push
fstps
jmp
fcompl
cmp
pop
cmp
or
mov
daa
push
bound
pushf
mov
pop
xchg
sub
scas
scas
xchg
mov
call
call
xchg
add
mov
jbe
jo
or
mov
mov
outsl
pop
in
outsb
and
pop
mov
cli
push
xor
scas
mov
repz
cmc
mov
popa
test
push
mov
mov
push
out
outsl
xchg
imul
dec
lea
shrb
add
pop
dec
inc
dec
stc
test
sub
lds
adc
shrb
fistps
fstpt
adc
inc
dec
and
popf
loope
or
scas
pop
push
icebp
cmpsl
jns
mov
jnp
dec
and
adcb
subb
loopne
cmovbe
lea
aaa
out
push
mov
sbb
int
into
repz
rcrb
sbb
incl
iret
cmp
inc
xor
push
cmp
sub
loope
fbld
sbb
xchg
pop
push
xlat
sub
cmp
leave
aad
pushf
cli
jmp
jle
xchg
and
xchg
leave
pusha
cmp
adc
mov
mov
xor
jl
insl
xchg
aas
movl
sbb
sub
mul
cmc
push
mov
mov
fldt
stos
or
pushw
bound
xor
cmpsl
cld
jmp
xchg
mov
idivl
dec
push
movd
push
fs
or
into
mov
in
adcb
mov
iret
rcll
xchg
mov
lock
sbb
xchg
test
adcb
jecxz
push
xor
jle
and
fidivs
jne
sti
xorl
xchg
sbbl
popf
rcll
mov
data16
mov
cmpb
adcl
cld
fucomi
pop
pop
std
stc
xor
fwait
xchg
test
stos
dec
mov
inc
popf
pop
jg
mov
into
mov
inc
inc
cmp
mov
xor
or
xchg
jns
iret
jno
adcl
enter
mov
icebp
test
int3
iret
lahf
sar
mov
fldenv
outsb
test
dec
subb
pop
jae
in
into
adc
popf
jnp
mov
sarl
pop
xor
adc
andl
fwait
push
sub
inc
inc
mov
rorl
push
leave
pusha
mov
inc
pop
adc
pop
xchg
mov
xchg
cltd
mov
add
pushf
xor
dec
lds
leave
pusha
es
jg
push
ljmp
mov
dec
pop
mov
jns
pop
mov
sbb
mov
jl
sub
gs
adc
lahf
addb
xor
lods
xchg
aam
mov
xor
or
push
stc
out
test
dec
repnz
mov
sub
ja
ja
shrl
ss
aaa
xchg
sub
clc
push
in
jmp
mov
mov
cmp
out
mov
pop
rclb
pop
into
sbb
out
pop
dec
pop
leave
mov
push
push
sbb
out
xchg
jge
and
loop
sti
and
ret
fdivrl
out
int
mov
jnp
lea
jo
rcrb
jno
cmp
mov
out
pushf
mov
pop
push
das
sbb
iret
sbb
aad
adc
push
xor
arpl
dec
adc
mov
push
into
xchg
sub
test
jge
test
stos
xor
aad
into
int
mov
mov
dec
dec
sbb
xlat
fwait
orl
stos
push
jns
imul
push
into
int3
xchg
pop
push
loope
orb
leave
movsl
sub
fldenv
in
pop
mov
inc
dec
mov
fs
jp
xorl
mov
hlt
and
add
mov
inc
rorl
jmp
daa
lods
fildll
sbb
push
push
stc
mov
mov
int
punpckhbw
aam
lock
fs
int
std
ja
lods
fdiv
leave
xchg
dec
psrlw
sahf
in
jne
aaa
add
jno
nop
jo
fnsave
xchg
insb
lods
test
dec
adc
dec
in
jbe
add
imul
fsubs
xchg
fisttpll
mov
cs
into
xchg
fidivrl
jmp
fs
ret
inc
jno
je
xchg
outsb
icebp
mov
or
jmp
sarl
sbb
lds
and
loope
sbb
mov
mov
inc
mov
cmp
or
push
std
pop
pop
cmp
mov
mov
mov
cmp
mov
push
jle
aad
loope
pop
jg
clc
fs
cmp
test
sbb
aam
jmp
dec
adc
add
adc
push
mov
lock
push
adc
les
insb
test
dec
push
jnp
mov
pop
dec
lahf
inc
and
xor
aam
jno
or
push
mov
ficomps
test
or
mov
test
jl
push
dec
data16
cmpsl
ss
test
subb
mov
dec
or
or
loope
lahf
jb,pt
mov
xor
stos
sub
xor
lods
xchg
inc
sub
aas
popa
xor
jp
jge
int
push
mov
lcall
mov
jnp
pop
sbb
push
ljmp
int3
cmp
pop
push
pop
out
imul
pop
cli
nop
fidivrs
loope
cmp
scas
fstpt
adc
jl
xchg
push
mov
sti
pop
jge
iret
mov
sbb
ret
ja
sbb
sarb
push
add
push
es
add
mov
sub
jl
push
add
add
sub
cmp
test
cmpsb
rclb
rcl
cmp
jge
rcrl
push
add
cmp
mov
mov
cli
pop
insb
out
lret
movsb
jno
sti
push
mov
fidivrs
popf
dec
pop
jnp
cmp
cmc
into
dec
sti
pop
jle
xchg
inc
cmp
jb
out
inc
jo
andl
push
add
stos
cs
cwtl
repz
sbb
jle
xchg
jo
popa
sbb
iret
mov
or
jle
clc
int3
mov
sub
ret
js
sbb
jmp
aam
enter
fdivrs
jnp
or
nop
call
jle
cltd
push
jmp
jno
out
fistpll
sti
enter
sub
repz
jg
sbb
insb
jno
ljmp
mov
dec
or
inc
stos
sub
dec
out
cld
jp
jg
in
in
jb
push
and
cmp
jg
add
mov
inc
sub
sti
xlat
outsb
sub
dec
jge
jae
daa
scas
imul
out
jno
out
pushf
ds
std
mov
cltd
push
add
xor
test
cwtl
cmp
daa
mov
jg
inc
gs
jge
loop
pushf
aaa
dec
incl
mov
lret
stos
sbb
jl
cmp
movsl
dec
or
cli
adcl
push
add
inc
in
dec
loop
and
mov
mov
add
nop
ja
cmp
rolb
inc
jmp
lret
jo
mov
cmp
stos
dec
loop
mov
adc
sub
cwtl
aas
sbb
mov
dec
dec
mov
sbb
mov
pop
sbb
jp
dec
lea
xchg
cmp
jnp
aaa
sbb
das
mov
dec
sbb
daa
pop
mov
cmp
in
movsl
in
scas
ss
sub
inc
dec
sbb
test
mov
aam
pop
add
popf
addr16
push
sub
sub
cmp
adc
or
add
sbb
loope
scas
xor
das
std
mov
push
inc
inc
mov
cwtl
out
push
movsb
cwtl
inc
sub
and
cmp
and
cmp
aas
mov
adc
sbb
cmpsb
pop
int3
xchg
call
sti
call
and
mov
enter
cwtl
inc
xor
bound
lods
xor
xor
cmp
mov
stos
enter
sbb
dec
lret
int
pop
pushf
lods
xor
mov
scas
out
jno
pop
mov
mov
pushf
aas
les
jecxz
lahf
fbld
stos
test
jno
adc
jmp
mov
sub
test
or
negl
movq
fs
pop
xor
mov
es
cmp
cmp
sarb
or
call
push
pop
jne
int3
nop
mov
test
sarl
call
pop
push
lret
sbb
lret
dec
flds
jno
inc
push
sub
jns
imul
push
mov
xchg
call
stos
pop
ja
dec
mov
fists
xor
fs
pop
std
idivl
xchg
cld
pop
push
inc
mov
fwait
shlb
mov
lods
sub
adc
push
cmp
sbb
mov
ret
in
sub
dec
add
jmp
mov
add
fistpll
cmc
data16
or
push
pmaxsw
push
add
das
add
xchg
or
xchg
lret
gs
loopne
pop
idiv
cld
and
mov
push
int3
lea
mull
pusha
repnz
mov
movsb
test
pop
cmp
ds
or
jge
push
push
out
mov
divb
sar
imul
leave
addr16
or
clc
pop
lret
pop
dec
adc
push
add
test
and
cmpsb
lahf
aaa
int3
sbb
nop
mov
push
mov
pop
idivl
movsl
xor
loop
pop
int3
cmpsb
fidivrs
adc
ror
mov
addr16
pop
sub
mov
adc
lock
mov
loope
dec
pop
jb
aam
pop
stc
pusha
dec
jo
ret
scas
ss
jle
rclb
pop
in
pop
ret
aad
pop
adc
filds
jne
cmp
ret
cwtl
inc
rcrl
add
push
ljmp
add
lds
xor
rorl
js
js
fs
adc
aas
lds
ja
dec
sbb
xlat
leave
cwtl
xsha1
cmpsb
leave
mov
mov
lods
insl
repz
mov
mov
adc
dec
inc
or
bound
jno
fistpll
das
mov
outsl
inc
or
jne
sub
xor
les
aad
dec
inc
inc
popf
cmp
lcall
mov
mov
scas
movsl
xor
mov
pop
icebp
jp
or
fists
jg
adc
pop
popf
dec
popf
inc
add
pop
outsb
repz
xor
push
rorb
lods
xchg
push
stc
sbb
rolb
push
mov
insb
negl
jns
mov
repz
addr16
push
ret
mov
cmp
jmp
xchg
into
xchg
stos
adc
cmp
in
jno
xchg
scas
xor
or
pop
jge
xchg
cmp
insb
xchg
cmp
or
or
test
mov
cli
fistpl
les
mov
pushf
xor
mov
lods
xor
dec
or
mov
iret
lea
inc
jae
sub
xchg
xor
rorb
jne
mov
mov
fnstsw
sub
pop
cmp
sub
movb
xor
pushf
jnp
xchg
aas
pop
cld
lret
das
andl
mov
cmpsl
fnsave
mov
enter
fs
into
push
mov
daa
adc
sbb
and
jl
fldenv
mov
es
ficoml
cmp
sub
clc
popa
call
lret
fwait
out
sbb
dec
mov
scas
mov
popl
mov
sahf
mov
mov
jno
mov
das
mov
movsb
xor
xchg
add
arpl
leave
jl
sub
mov
inc
push
sahf
adc
mov
pop
add
pop
rolb
repnz
mov
call
in
mov
out
pop
or
dec
dec
or
scas
popa
hlt
jne
pop
std
mov
mov
fnstcw
pop
outsb
ljmp
inc
adc
mov
movsl
stc
nop
xchg
sub
out
inc
sbb
dec
data16
xchg
ja
fdivp
lds
sub
sub
push
push
ss
push
or
sarb
mov
or
and
pusha
inc
bts
fcmovnbe
mov
ret
xor
fdivrs
sub
sbb
and
pusha
inc
and
jb
rcl
test
mov
int
push
push
sti
push
mov
add
dec
lods
rclb
adc
test
sahf
aaa
inc
fstpt
nop
add
lret
adc
jl
mov
cli
popa
fwait
movsl
push
test
sbbb
push
int
negl
cmp
xchg
or
fiaddl
inc
xor
lcall
cmp
sub
int3
sahf
and
leave
iret
nop
dec
faddl
jno
mov
movsb
cmpsl
xchg
stos
sub
rorb
hlt
js
mov
sub
pop
out
push
lods
cmpl
in
jb
idiv
jle
lahf
in
ljmp
push
and
test
jb
leave
lods
pop
add
sbb
in
mov
sub
loopne
out
lea
stc
jp
or
in
pusha
cltd
cmp
aaa
aam
pop
clc
lock
inc
je
push
out
cmpsb
push
nop
jecxz
inc
mov
xlat
lcall
cmp
pop
mov
push
inc
xchg
xchg
mov
testl
push
test
cmp
sbb
fsubrl
rcll
rcl
add
sbb
sbb
scas
sub
loopne
sbb
sti
push
fistpll
out
dec
iret
adcb
fistl
push
ljmp
insb
mov
inc
pop
ret
vpmacsswd
cld
aaa
cli
pop
fwait
jecxz
inc
mov
mov
lcall
fistpl
mov
dec
cltd
ljmp
jecxz
call
clc
ret
xchg
inc
fildl
or
pop
cmp
stc
gs
cmp
jnp
cmc
inc
or
loopne
mov
iret
mov
jmp
js
xor
xchg
cmp
lds
or
je
insl
lock
loopne
or
cs
outsb
add
xor
test
push
lds
mov
push
sbb
testl
pop
add
test
mov
mov
ret
push
test
push
repnz
mov
movsl
dec
push
cmpsl
mov
xchg
cld
pop
repnz
jae
movsb
ljmp
jmp
lock
mov
call
jmp
inc
in
jb
cltd
cmp
jno
lret
ljmp
xchg
dec
xchg
scas
xchg
out
push
int
insb
ljmp
fnstcw
call
add
xchg
cmp
rolb
adc
lods
push
or
scas
rorb
cmp
in
outsl
lret
std
js
loopne
std
insl
mov
pminsw
mov
test
cmp
inc
or
sub
xchg
inc
movsl
add
xchg
fdivrl
fidivrs
addr16
test
int
push
roll
sub
or
push
dec
mov
mov
and
xchg
and
jb
sbb
bound
hlt
inc
or
cmp
pop
xchg
inc
jecxz
pop
jb
mov
push
fcomps
es
cmp
out
jb
cs
mov
lds
adc
inc
lods
xor
int
out
dec
in
adc
or
addr16
pop
out
outsl
fucomi
dec
testb
mov
add
jmp
jl
jne
out
sub
test
mov
xchg
push
xor
mov
dec
and
jno
sahf
push
std
jl
pop
add
daa
dec
loope
mov
in
insb
movsl
and
mov
mov
xchg
pop
and
jg
call
xor
or
inc
push
ja
and
lret
std
test
or
arpl
pop
pop
rorl
inc
inc
or
sbb
adcb
cmp
negb
fs
add
jg
aaa
push
sbb
cmpsl
and
es
ss
xchg
inc
push
cmp
iret
jl
in
popa
in
and
xor
enter
mov
cmpsb
jo
ss
fs
lcall
push
xchg
lds
out
push
and
mov
test
mov
mov
test
add
hlt
test
xchg
push
jb
repz
mov
mov
mov
fnstcw
xchg
ret
xchg
mov
push
jmp
repnz
xorl
add
pop
add
enter
xchg
sbb
sbb
ret
xchg
cmp
test
sub
push
arpl
cmc
test
inc
adc
jb
dec
jae
mov
push
pop
fdivl
xor
rorl
and
and
mov
test
and
aaa
xchg
pusha
cltd
fdiv
pop
scas
lds
dec
mov
cmp
nop
inc
xchg
test
movsb
xor
dec
or
shll
sub
sbb
jns
sbb
icebp
or
dec
aas
pmullw
lods
ss
test
jl
inc
push
stc
or
imul
lcall
mov
outsl
out
loop
cmp
xchg
jecxz
jmp
fstpl
pop
incb
mov
mov
stos
dec
lgs
imul
adc
subl
xchg
cmp
mov
scas
cmp
ljmp
or
pop
test
std
outsb
or
fwait
in
ja
mov
scas
inc
or
mov
dec
loop
lods
sub
mull
sub
mov
popa
scas
add
push
push
pop
and
dec
movsl
xor
pusha
mov
loope
hlt
pop
aaa
sub
sub
push
mov
mov
push
lods
mov
push
mov
fs
mov
dec
rorb
pop
add
fisubrs
mov
ret
push
and
jl
dec
mov
insb
movsl
inc
outsb
mov
inc
sub
pop
clc
jp
adc
push
notl
push
pushf
rolb
in
mov
cld
adc
dec
push
js
dec
or
cmp
adc
cmpsb
dec
jmp
pushl
sub
jl
daa
mov
jg
jge
fs
and
or
movsl
notb
push
pop
out
adcl
lret
add
jg
push
pop
sbb
push
pop
and
mov
mov
push
mov
imul
shll
movsb
call
notb
ror
in
push
adc
test
mov
call
dec
adc
mov
fwait
push
add
mov
add
addl
dec
or
adc
repz
xchg
or
mov
fsubrs
jmp
std
jmp
es
push
push
repnz
xlat
jge
sbb
add
test
insb
jmp
aam
xchg
pop
std
xchg
jne
adc
mov
mov
or
add
stos
xor
push
xchg
cmp
mov
scas
xchg
aaa
mov
aam
les
movsb
sub
mov
mov
mov
mov
cmpsb
aad
pusha
pop
xchg
cmp
js
fsubp
in
push
mov
mov
pop
cs
stc
push
inc
aaa
xchg
inc
insb
mov
fnstcw
jmp
roll
aad
ret
pop
or
inc
sbb
das
pushf
add
and
roll
adc
mov
lret
ss
lea
mov
into
xchg
enter
in
inc
or
clc
mov
sub
daa
mov
xor
addl
xor
loop
xlat
test
mov
movsl
mov
xor
and
cli
das
xchg
cs
cmp
insb
sbb
cmpsb
add
mov
sahf
fiadds
sbb
fdiv
negl
bswap
xchg
std
mov
sbb
jns
negb
jo
pop
dec
aaa
mov
xchg
cmpsl
ss
popa
lock
sbb
lea
add
andl
lret
xchg
xor
orb
push
loopne
lock
cli
pop
in
add
sti
mov
sarl
popf
mov
mov
outsl
push
push
jns
inc
mov
test
cmc
pop
or
inc
or
pop
push
in
push
lods
mov
popl
jno
or
add
shrl
add
addr16
mov
mov
aaa
out
pop
add
divb
sbb
fcompp
xor
in
dec
mov
jo
cmp
psrlq
xchg
cmp
add
push
sti
adc
sub
jbe
xchg
addr16
cmp
mov
lods
xor
xchg
cmp
mov
mov
dec
fsubs
sbb
sbb
push
loopne
mov
ljmp
repz
mov
pop
data16
rorb
and
call
hlt
cmp
inc
pop
je
mov
lret
mov
push
push
cld
gs
mov
inc
mov
in
jb
jns
jno
and
push
or
sahf
mov
cmp
adc
mov
and
mov
adc
push
push
dec
push
push
jle
mov
stos
cs
xchg
int3
mov
loope
clc
push
sbb
scas
sub
lret
pop
cld
or
fs
jb
push
jl
loope
pop
fnstsw
cld
push
jno
dec
pop
fisubrl
daa
iret
push
pop
std
sub
data16
inc
dec
test
jl
cmp
or
dec
adc
cmp
fs
outsl
jl
mov
or
mov
mov
out
ljmp
lret
jne
arpl
out
hlt
mov
mov
test
div
push
push
loop
sbb
dec
popf
xor
sbb
ret
hlt
imul
aad
jno
outsb
push
adc
cpuid
xor
lret
scas
ss
mov
insb
pop
add
fadd
call
cld
lret
xchg
cmc
mov
push
loope
subl
mov
mov
arpl
data16
lock
lahf
sbb
sti
xor
into
shlb
adc
cmp
xchg
fcoms
mov
mov
daa
cmpsl
add
inc
or
pop
adc
inc
movl
stc
hlt
test
xor
mov
adc
pop
add
xchg
cmp
stos
and
je
es
lds
adc
ret
mov
mov
nop
aad
jae
and
mov
std
pop
mov
mov
inc
bswap
pop
adcl
dec
pop
sti
or
pop
sti
mov
cmc
fs
in
insb
cmp
dec
pop
shlb
pop
lret
cltd
or
adc
push
jecxz
mov
arpl
mov
lods
jge
mov
je
iret
mov
insl
dec
push
adc
roll
flds
pop
stc
rcrb
in
scas
imul
loop
adcb
mov
cmc
xor
int
repz
pop
mov
cmpb
sbb
outsl
adc
in
adc
imul
or
pop
ret
add
js
inc
or
jno
or
dec
pop
mov
in
call
adc
mov
jae
cmp
aas
popf
pop
and
jno
mov
out
cmpsb
stos
imul
mov
mov
xor
mov
mov
ds
jge
mov
push
pop
adcl
mov
je
insb
xchg
xchg
and
mov
lods
iret
xchg
inc
inc
int3
nop
jle
repnz
icebp
insb
psrlw
mov
gs
jg
xor
push
jnp
jge
xorl
mov
cmp
sub
mov
sub
movsl
hlt
mov
loope
dec
push
ret
mov
loopne
in
cmpsb
mov
aad
fildll
adc
sahf
inc
add
add
imul
mov
mov
cmpsb
sub
movsl
les
loopne
add
scas
cmc
jae
or
fisubs
xor
and
xor
test
push
mov
js
dec
push
not
adc
mov
dec
xor
cmp
inc
or
xor
packssdw
add
iret
xlat
ja
cld
sbb
xlat
push
aam
in
mull
inc
xchg
js
adcl
cmpsb
mov
fnstcw
mov
xor
inc
cmp
pop
std
js
sbb
xorb
pop
fldl
rcrl
lds
pop
insb
int3
pushf
cmp
inc
fisubs
gs
es
xchg
cmc
aaa
jns
shl
idivl
adc
aad
mov
mov
sbb
in
jbe
dec
les
icebp
pop
mov
shlb
scas
push
notl
xor
or
inc
lock
lcall
cmc
clc
dec
pop
jmp
mov
or
por
in
mov
arpl
or
push
aad
pop
ret
cmp
bound
lea
jg
sub
shrl
pop
jg
xor
sub
hlt
pushf
mov
sub
fildl
sbb
sub
cmp
or
xchg
adc
jmp
inc
mov
pop
in
nop
in
fcomi
inc
adc
add
lods
mov
pop
rcll
ds
fisttps
pop
mov
loop
sbbb
or
rcrl
mov
insl
push
lods
xor
jl
cmpsl
mov
xchg
aaa
mov
scas
jl
push
xchg
mov
mov
jge
mov
out
sub
xor
ljmp
orb
mov
mov
stc
xchg
lahf
inc
shr
icebp
pop
xchg
add
in
add
mov
mov
pop
ja
ljmp
lret
or
and
add
test
or
mov
lock
mov
scas
mov
sbb
inc
or
or
in
jne
add
mov
xor
js
ret
mov
push
int
push
jbe
inc
mov
fldcw
xor
cmp
cs
into
mov
mov
and
leave
mov
aad
push
popa
pop
cmpsl
stos
sub
cmpsb
mulb
das
sbb
fdivrs
ds
dec
loopne
scas
cwtl
das
loope
pop
mov
mov
push
leave
test
and
in
sahf
js
adc
cltd
add
subb
rorb
or
push
repnz
in
insl
pop
sbb
icebp
mov
adcb
aaa
mov
outsb
leave
out
imul
insl
inc
jg
clc
inc
lahf
rolb
icebp
imul
test
mov
cmp
sub
scas
xor
std
inc
push
xchg
mov
jb
ret
mov
fwait
cmp
xchg
cli
adc
jnp
mov
test
cwtl
inc
xchg
adc
dec
ret
jnp
cwtd
gs
jg
pop
inc
and
dec
inc
gs
inc
sbb
pop
popf
dec
in
scas
fwait
xor
icebp
lret
xchg
aam
call
and
loopne
mov
pop
push
arpl
cmc
pop
movsb
test
es
popa
pop
xor
adc
lods
or
fstps
jbe
adc
cwtl
dec
fadd
xchg
cwtl
xchg
mov
xchg
jge
and
test
jae
mov
xchg
and
xor
sub
push
ret
add
mov
adc
out
inc
adc
lret
je
ret
rclb
out
push
jno
or
test
cld
xchg
xchg
adc
cmpsl
push
stc
cmp
push
out
into
xchg
psubb
mov
xchg
inc
adc
test
mov
shl
insl
addr16
push
clc
jb
jp
xchg
pushfw
cmp
and
mov
push
add
mov
pop
flds
add
addr16
xchg
mov
pop
bnd
stc
cmpsb
sub
lods
or
sub
xchg
xor
cmp
jle
es
data16
adc
mov
xchg
nopl
les
lods
jmp
xor
jne
mov
cmpsb
in
xchg
sbb
inc
adc
mov
push
push
sti
lods
hlt
data16
jne
inc
imul
adc
scas
sub
xchg
xchg
sub
sbb
mov
mov
lretw
sub
sbb
jb
fildl
sarl
cmpsb
cmp
jns
je
lds
push
mov
pop
imull
aad
mov
test
mov
fwait
loop
rclb
faddl
xor
or
jle
in
jbe
jno
or
add
fcoml
sub
mov
stos
insb
icebp
cmp
jns
xor
rcrl
mov
loop
popf
cmp
nop
inc
jmp
adc
lods
mov
nop
test
mov
aad
testl
mov
adc
xor
psadbw
adc
std
push
cltd
jns
pushf
adc
mov
sbb
mov
mov
sub
xchg
pop
sub
jns
xchg
gs
repnz
ss
mov
dec
adc
add
lea
dec
in
je
or
cmp
lods
cltd
aas
ss
and
insl
sub
ret
out
jne
dec
pushf
inc
out
add
sarl
das
and
lods
jecxz
and
xchg
mov
adc
jle
push
orb
jb
xchg
jbe
test
repz
dec
xlat
lahf
inc
xor
daa
xor
jge
out
sub
out
movsb
cmp
push
negl
and
jo
dec
adc
insb
sahf
faddl
aas
ljmp
xchg
push
sub
ficompl
lahf
ds
fwait
roll
fnstenv
sbb
adc
dec
or
dec
xchg
cmpsl
sub
push
sbb
jge
xchg
inc
loope
jge
add
enter
dec
adc
movsb
mov
sbb
mov
cmp
hlt
jmp
cli
pop
cs
xor
mov
sbb
inc
mov
xor
jae
cltd
jmp
push
xor
mov
sub
repnz
jb
in
addr16
inc
imul
cltd
xchg
jbe
ret
mov
add
inc
inc
fstps
shrl
aam
dec
adc
or
sub
cld
dec
adc
shr
jae
jmp
orl
movsl
sub
insl
lock
push
ret
lahf
inc
lods
sbb
mov
mov
add
cmpsl
fistpl
cmp
ss
das
add
sarb
sbb
xchg
mov
cwtl
lds
mov
int3
jle
and
aad
dec
rorl
scas
xchg
inc
adc
mov
movsb
ss
test
scas
mov
popf
cmp
fnstenv
mov
nop
adc
mov
int3
xchg
int
aas
cltd
leave
adc
call
inc
nop
outsl
push
ret
insb
add
or
andb
in
push
sub
or
ret
movsb
jb
ret
push
mov
jp
dec
std
pop
cmp
sub
adc
shrl
mov
or
mov
mov
sarb
or
jae
cmc
pop
adc
insl
loop
shl
cmp
cmc
push
xor
mov
test
fldenv
lea
mov
dec
out
fdivl
or
mov
notl
cmpsl
sub
inc
adc
mov
jnp
xchg
sti
pop
inc
out
imul
ret
andl
js
jmp
std
nop
cmp
mov
push
std
push
push
adcb
mov
int3
cmp
pop
pop
call
leave
xchg
xchg
dec
pop
leave
enter
adc
sub
jb
fdivrl
int3
scas
insl
nop
daa
lahf
iret
jae
mov
mov
mov
lret
mov
adc
mov
sub
mov
mov
aad
shl
jne
mov
mov
arpl
push
jmp
sti
pop
dec
lret
adcl
movsb
jae
test
mov
mov
sbb
jnp
fiadds
xor
add
jbe
mov
stos
or
push
mov
hlt
jmp
test
clc
mov
gs
lock
imul
mov
fidivrs
mov
push
iret
xor
xor
ja
adcl
mov
add
lea
and
ror
add
dec
pop
popf
pop
xor
and
push
push
pop
out
test
test
jp
push
scas
xor
subl
lahf
cmp
xchg
cltd
out
int3
fwait
insl
int
int
rcrb
negl
daa
stos
mov
mov
loop
mov
les
daa
jp
xchg
dec
or
loopne
int
mulb
daa
fwait
push
ljmp
loope
std
dec
mov
out
xlat
jge
and
rcrl
mov
add
jmp
fdivrp
loopne
insb
adc
idivb
mov
call
into
xchg
dec
adcl
loope
pop
add
addb
int
push
test
movsl
repnz
cmpsl
in
orb
cli
sarb
mov
cmp
pop
dec
add
gs
cli
arpl
jne
sbb
mov
imul
lret
xor
mov
mov
xor
mov
inc
xchg
xor
push
pop
mov
push
xchg
cs
ds
cmpsb
sarl
pop
pop
add
pop
gs
aaa
fisttpll
arpl
aad
inc
xchg
inc
or
hlt
pop
push
gs
testb
mov
outsb
hlt
dec
jl
mov
xor
push
cld
fs
ror
js
inc
mov
stos
ds
jae
jp
cld
pop
repz
dec
jp
sbbb
mov
mov
ds
hlt
mov
es
aam
jns
jnp
inc
lcall
xchg
in
adc
jmp
or
insl
cmp
dec
jecxz
pop
hlt
mov
mov
test
push
mov
out
fadd
pop
push
test
add
das
loop
popa
sti
mov
sub
dec
test
mov
mov
cmp
pop
cmc
in
daa
jp
icebp
stos
dec
add
lcall
push
in
aas
sbb
ds
hlt
outsl
shrl
nop
jnp
ret
mov
cltd
xor
ss
push
mov
insb
mov
fdiv
mov
imul
das
adc
jmp
or
in
pop
pop
nop
and
in
jecxz
mov
stos
add
lcall
and
push
test
fnstenv
jnp
cli
pop
hlt
sub
add
jle
and
shrl
lcall
hlt
in
inc
aad
ja
jl
inc
cwtl
repz
popa
lcall
mov
dec
out
das
outsb
or
outsb
cmp
cmc
mov
scas
adc
add
leave
xor
push
out
fcmovb
pop
or
outsb
add
pop
stc
mov
sub
stos
inc
jle
pop
mov
mov
cmp
jge
js
repnz
lret
cld
cwtl
and
dec
ljmp
mov
aam
testb
mov
lcall
xor
dec
mov
out
xchg
insl
mov
mov
insb
add
mov
out
xor
mov
test
in
pop
pop
mov
insb
add
in
loope
mov
test
add
xor
test
sti
push
and
dec
cmpsb
inc
xlat
xlat
outsl
in
mov
ret
add
jl
and
iret
addr16
xlat
cwtl
lock
cmc
jmp
insl
jne
jge
ds
hlt
mov
pop
fwait
xor
mov
push
in
xor
insb
push
fsubrs
lea
mov
fildll
lods
adc
fidivs
mov
pushl
leave
xor
push
out
fld
pop
or
jnp
testl
jl
and
shlb
aad
icebp
out
and
repz
add
jne
jp
sti
xchg
and
dec
call
mov
mov
ret
aad
cmc
mov
push
hlt
mov
lcall
xor
in
test
insl
mov
dec
out
fdiv
mov
popa
insl
add
sub
test
out
xor
scas
pop
stos
inc
cmp
dec
in
pop
enter
insb
add
out
loopne
mov
cmpsb
add
aas
stc
push
and
dec
movsl
inc
fcom
insl
in
lahf
negl
sub
add
jnp
and
into
gs
xlat
xchg
out
mov
cmc
jmp
or
cmp
cmc
mov
pop
fwait
xor
mov
push
jecxz
xor
imul
mov
mov
fisubrs
adc
mov
arpl
xor
test
out
fadd
pop
or
in
pop
cmc
mov
daa
jg
lcall
and
into
and
push
out
out
and
hlt
cmpsl
inc
add
jae
jnp
cli
xchg
and
dec
out
xlat
pop
outsl
mov
cmc
imul
jl
mov
fstpl
stos
lcall
enter
insl
mov
push
out
hlt
mov
pusha
outsb
add
pop
mov
and
jnp
lods
push
stos
inc
cmp
dec
in
pop
leave
pusha
mov
insl
add
lods
out
fidivs
and
test
mov
dec
mov
out
sahf
cmc
pop
mulb
rolb
inc
jge
jns
and
int3
fs
fcoms
mov
imul
inc
xlat
outsb
jb
jle
cmp
pushf
xor
mov
push
loop
xor
imul
dec
out
push
testl
fldt
mov
popa
cld
xor
sub
dec
push
call
or
in
pop
hlt
lea
jge
lcall
and
int
aas
push
out
out
and
movsl
inc
add
adc
xchg
and
dec
in
fcoms
insl
mov
imulb
insl
repnz
mov
fcompl
stos
cwtl
das
mov
enter
outsb
mov
push
out
aad
mov
pop
outsb
add
pop
mov
and
jp
enter
inc
ss
dec
out
push
leave
pusha
mov
outsb
add
fdivl
and
lds
mov
dec
mov
out
popf
repz
mulb
add
adc
adc
inc
cwtl
fwait
xor
arpl
xchg
jmp
push
sbb
xlat
outsb
jo
jg
cmp
popf
xor
in
stos
adc
ss
addr16
jno
mov
mov
fisubrl
or
push
lods
fisubrl
xor
sub
test
jmp
push
mov
in
pop
repz
lods
inc
lods
inc
js
and
lret
pop
inc
xlat
push
in
call
cmc
mov
les
xchg
and
ret
xor
inc
fsts
mov
mull
xlat
outsb
lock
mov
ficompl
xchg
sub
xor
call
or
cmp
testb
es
push
scas
lea
js
leave
test
lret
sti
push
lret
sbb
push
dec
test
jg
outsl
lea
sti
push
popf
sub
stos
inc
cmc
dec
and
jle
lret
lahf
inc
fnop
imul
mull
mov
jle
jne
and
xor
popa
inc
ficoml
mov
clc
in
fsubrs
push
adcb
testb
loop
stos
adc
xor
gs
jb
xchg
mov
stc
nop
test
outsb
add
fsubrs
mov
pop
stc
xor
inc
mov
push
ljmp
jno
shlb
and
fwait
stos
inc
lods
inc
jbe
and
leave
sbb
jmp
mulb
ret
hlt
and
xor
inc
ficoml
imul
outsl
out
test
mov
testl
xchg
sub
lret
fnstenv
pop
push
jmp
add
pop
mov
and
cmpsl
add
call
test
jo
dec
cmpsb
jmp
and
sub
lods
inc
repz
and
bound
inc
fcmove
addr16
clc
and
jg
jae
es
pop
inc
fistl
mov
stc
jecxz
fnstenv
add
sbb
testl
adc
xor
arpl
test
mov
stc
nop
adc
push
or
lea
divl
inc
mov
push
ljmp
jno
into
and
jle
out
and
pushf
test
lret
sti
xchg
lret
sbb
jmp
mull
sarl
lea
xor
filds
adc
push
lcall
jo
cmpl
push
clc
popl
popf
xor
bound
lods
xchg
sub
lret
in
fnstenv
push
push
ljmp
jno
mov
adc
fidivs
movsl
ljmp
call
test
jo
dec
movsl
jmp
and
sub
lods
inc
repnz
and
bound
inc
fcmove
jmpw
out
popa
clc
pop
mov
jg
jb
es
lds
fisttpl
mov
stc
loop
fnstenv
add
mov
fists
push
fdivl
xor
std
test
mov
stc
nop
adc
push
or
and
divb
inc
scas
dec
push
ljmp
jno
int
out
push
out
and
pushf
test
lods
inc
jae
and
sbb
dec
out
sbbb
pusha
negl
sarb
mov
xor
fiadds
packuswb
clc
popa
mov
jg
mov
clc
aas
aad
xor
popa
push
lods
xchg
sub
lret
in
fnstenv
add
testl
push
stos
fnsave
lret
lods
inc
xor
push
call
sbbl
pop
dec
movsb
jmp
and
sub
and
bound
fcmove
gs
clc
push
mov
jg
jno
es
les
fisttpl
mov
stc
loope
fnstenv
add
mov
ficoms
push
xor
popa
cld
adcl
dec
stc
nop
adc
pop
scas
aam
lea
cmc
xor
inc
scas
inc
push
ljmp
jno
int3
and
jle
in
es
jbe
pushf
cmpsl
inc
lods
inc
jb
and
lds
inc
jmp
negl
mov
and
xor
fldl
push
mov
das
popa
clc
pusha
mov
jg
mov
clc
ds
xor
pusha
push
lods
xchg
daa
mov
lret
jecxz
fnstenv
add
ljmp
jno
mov
push
lods
push
test
xor
mov
lds
testb
adcl
jmp
es
cmc
pop
sahf
es
and
arpl
inc
fcmove
fs
mov
jg
outsl
or
mov
ret
fmull
scas
arpl
loopne
fnstenv
add
mov
fcoml
push
fisubrl
xor
pop
sti
fdivl
adcl
adc
push
add
lea
hlt
ss
jp
inc
lods
inc
push
jmp
int
pusha
lcall
call
daa
sbb
ds
inc
jo
and
notl
inc
fimull
ljmp
aaa
or
out
mov
mov
inc
fildl
fs
stc
pop
mov
jno
jg
pop
mov
stc
nop
cmp
sahf
xor
and
xor
jno
add
lret
clc
std
push
jb
xchg
pop
scas
dec
cmpsl
nop
daa
fnstenv
int3
mov
ret
push
ljmp
jb
inc
mov
nop
daa
lcall
inc
out
inc
es
inc
xchg
inc
fcmovne
jmp
xchg
jmp
or
insl
or
mov
rcrb
mov
mov
sti
fidivs
jno
incl
mov
fistl
lods
or
mov
lret
pop
stc
fdivl
adcb
dec
cli
xchg
jle
jo
add
sbb
push
repnz
jns
inc
stos
inc
push
jmp
int3
lret
xchg
jb
enter
push
jmp
pop
sahf
movsb
cmp
inc
outsb
lds
arpl
pop
inc
fisttpl
ljmp
xor
adcb
xchg
mov
inc
flds
arpl
stc
pop
mov
jb
jge
pop
scas
or
xchg
cmp
sahf
xor
mov
mov
int
jbe
jno
add
xor
clc
sti
push
jae
test
scas
dec
cmpsb
xchg
sub
outsb
xor
inc
sub
push
ljmp
jb
inc
lahf
jmp
shll
daa
cwtl
repnz
in
inc
daa
mov
aas
xchg
inc
fadd
pusha
jmp
xchg
call
or
insb
push
sub
mov
loopne
push
adc
std
sbbb
xchg
nop
mov
ficoml
scas
or
int3
pop
neg
jae
jg
ljmp
jno
add
es
lock
js
inc
stos
inc
push
jmp
lret
lret
std
xchg
jb
push
ljmp
jb
lahf
mov
les
mov
mov
loopne
adcl
xor
lahf
fs
es
inc
xlat
inc
fisttpl
bound
stc
pop
mov
jae
jnp
pop
lods
or
xchg
cmp
sahf
xor
lea
mov
into
fbstp
cmpsb
add
xor
clc
stc
push
je
test
pop
scas
dec
movsl
xchg
sub
insb
xor
inc
sub
into
gs
jb
inc
sahf
in
adc
nop
daa
xchg
icebp
or
ljmp
fs
pop
jmp
nop
out
sti
sbb
sbbb
add
mov
mov
fistpll
sti
fidivl
fdivl
sti
sbbb
xchg
xchg
mov
fstps
scas
or
ss
cmc
fdivl
jle
jmp
dec
cli
xchg
jp
jb
add
daa
push
out
ss
ja
inc
test
lret
cld
xchg
jb
les
nop
daa
pop
jno
mov
push
daa
mov
mov
fsubrp
adcl
xor
lahf
bound
es
aas
aad
fildl
popa
mov
stc
pop
mov
je
jns
pop
stos
pop
cld
xchg
cmp
sahf
xor
mov
mov
iret
fnsave
jb
push
in
das
stc
nop
clc
push
je
sbbb
scas
dec
mov
ss
divb
jmp
dec
into
gs
jae
inc
pushf
in
or
xchg
sub
mov
inc
jmp
or
gs
inc
ffree
pop
in
orl
or
imul
mov
fiadds
test
cld
fnstenv
fdivl
cli
sbbl
test
xchg
mov
mov
scas
or
ss
hlt
fnsave
push
jmp
inc
sti
xchg
jns
jb
add
nop
daa
push
in
aaa
into
push
jne
inc
cmpsl
aas
push
in
jo
int3
arpl
xchg
jae
ret
sbb
orb
sub
outsl
or
imul
int
mov
fucomp
orb
fs
xchg
xor
mov
ljmp
cmp
pop
mov
cli
push
mov
je
js
sbb
lret
lahf
ss
pop
sbb
push
stos
cmp
jae
cld
push
in
sub
dec
je
sbbb
mov
mov
aaa
into
fwait
hlt
mov
es
into
gs
je
inc
lcall
xchg
in
or
call
or
cmp
in
test
mov
mov
add
shll
mov
filds
cmpsl
data16
fsubrs
fdivl
stc
test
sub
mov
scas
push
mov
ss
repz
jp
jmp
inc
cld
xchg
js
jb
cltd
sbb
push
jmp
iret
sbb
scas
inc
movsl
cmp
int
clc
je
rcrl
orl
sub
mov
addr16
into
gs
fucomi
orl
or
call
or
fldl
pop
rclb
fs
push
mov
jne
jbe
sbb
leave
mov
mov
sbb
push
dec
test
rcr
outsl
fnsave
push
out
sub
sti
xchg
cmc
dec
jne
jle
sbb
shrl
iret
cltd
repnz
and
push
in
in
inc
iret
data16
jne
aas
cwtl
in
test
pusha
xchg
sub
mov
dec
out
sub
outsb
pop
shlb
popl
rcrb
mov
gs
adc
sbbl
add
ret
mov
loopne
fnstcw
sub
je
testl
cmp
mov
sahf
rcrl
aaa
into
push
icebp
fbstp
js
in
test
lret
cld
xchg
sbb
dec
jmp
mov
mov
into
testb
test
xchg
sub
imul
pushf
xor
shr
iret
mov
filds
in
test
bound
xchg
sub
mov
out
sub
scas
pop
mov
fiadds
pop
rcrl
gs
push
scas
fbstp
je
sbb
mov
mov
sbb
push
dec
cmpsb
cmp
xlat
insl
fidivs
clc
pop
out
sub
cld
xchg
repz
jbe
jl
sbb
iret
cmp
xchg
lock
and
shlb
or
cmp
pop
xchg
sub
mov
dec
in
sub
insb
add
dec
fistpll
fbld
adc
sbb
sub
das
test
loopne
fadd
push
or
fidivs
cmc
test
jg
xchg
mov
mov
mov
pushf
rcrl
cmp
push
out
fbstp
ja
in
test
std
xchg
je
je
sti
xchg
sbb
dec
out
rcrb
jo
dec
mov
ret
iret
data16
mov
mov
ficoms
mov
arpl
data16
dec
loopne
xlat
in
test
popa
addr16
xchg
sub
mov
in
sub
lods
push
movsb
cmp
into
inc
fdivrp
pop
ret
and
push
lods
loopne
fidivs
sbb
mov
mov
sbb
pop
dec
movsb
cmp
aad
fbstp
negb
cld
xor
es
stc
pushf
mov
inc
cmpsb
ret
or
out
add
sub
fsubrs
xchg
pop
adc
jg
jp
mov
mov
xlat
lods
lods
xchg
daa
cs
inc
loopne
jo
and
push
xorb
xor
push
adc
mov
out
mov
and
imul
inc
hlt
dec
orb
xchg
ret
xchg
fstps
jne
std
pop
repz
inc
adc
inc
es
pop
dec
loop
pop
aam
mov
fsubp
hlt
rcll
add
xchg
and
fwait
ja
dec
bnd
inc
pop
daa
test
sti
pop
test
hlt
push
lahf
inc
push
sbb
mov
xchg
pop
dec
cld
mov
scas
fs
jle
jnp
adc
cmp
sbb
lret
xchg
mov
bound
int
repz
lds
shrb
loopne
dec
jl
push
push
mov
xchg
aad
movsl
fdivs
or
in
xor
stc
out
scas
or
or
jp
fsubrl
out
dec
in
dec
and
mov
lret
jg,pn
lds
ss
jecxz
dec
xchg
dec
sti
adc
clc
and
sub
bound
xchg
mov
jge
lock
or
fsts
push
loopne
cmp
rolb
data16
lcall
aas
cwtl
call
cld
mov
sub
mov
xchg
pop
aam
lahf
cmp
push
icebp
pop
mov
cmp
jne
test
inc
fiaddl
xchg
popa
aas
pop
inc
sbbb
mov
inc
push
pusha
cmp
mov
jmp
add
jno
aad
inc
stc
les
lcall
sbb
xlat
js
sahf
jae
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jle
xor
cmp
dec
cmp
push
xchg
pop
pushf
stos
out
enter
lret
mov
pop
cmp
sbb
call
mov
ljmp
fnstenv
iret
outsb
mov
mov
fimull
js
bound
js
in
int
ret
xor
ja
inc
rcll
mov
rcrb
mov
popa
and
mov
xchg
ret
ja
cwtl
insb
inc
adc
movw
jne
inc
mov
jecxz
inc
lods
mov
iret
and
fistpll
inc
mov
xor
inc
js
rcrb
mov
pop
cmpsl
ja
jmp
icebp
es
push
rep
xchg
xor
rcll
sbb
negl
sub
sub
mov
mov
cmpsl
arpl
xchg
cli
and
add
jae
repz
cwtl
fs
testb
fwait
xchg
push
add
lock
fwait
jmp
out
cs
and
rol
fildl
test
mov
loope
or
test
rolb
xchg
mov
mov
sbb
pop
push
imul
sbb
cmp
into
lods
cwtl
insl
push
xor
pop
cmc
mov
mov
mov
and
push
fiaddl
sbb
dec
cs
add
ss
sub
js
call
outsb
out
lcall
add
cli
leave
nop
insl
out
pusha
sbb
fwait
icebp
jge
mov
fildl
scas
push
stos
movsb
cld
inc
addr16
and
shlb
js
mov
out
popf
inc
mov
mov
inc
adc
das
repnz
cli
push
test
mov
lods
ficoms
or
jne
outsb
and
mov
add
push
push
add
inc
push
sub
mov
mov
call
inc
mov
fimull
ret
mov
aas
lods
mov
outsl
gs
loop
xor
fidivl
or
lock
lods
movsb
rcrl
mov
fisubl
mov
insb
cwtl
mov
pop
addr16
icebp
mov
subb
cmp
dec
push
cmp
inc
lds
mov
push
xor
adc
push
in
scas
lods
mov
negb
emms
rclb
adc
and
scas
cli
mov
loope
movsb
xchg
mov
imul
push
cmp
mov
xchg
jae
fstp
les
lcall
insb
adc
jmp
xchg
mov
test
push
cmp
dec
bound
out
lods
xchg
icebp
aam
sbb
and
ficoms
aas
lods
ljmp
lds
cmpsl
inc
jae
movsb
popa
jg
int
jae
pop
out
mov
es
outsl
sahf
dec
loop
jbe
pusha
lea
adc
adc
lods
pop
mov
or
movsl
adcb
aad
mov
idivb
mov
cmp
or
jl
or
adc
push
jmp
pop
movsl
out
stos
scas
insb
push
jle
icebp
xchg
push
scas
ret
fcomi
xchg
test
mov
mov
and
jecxz
in
subb
adc
mov
push
cmp
lret
in
xchg
insb
xor
xor
add
dec
mov
fisubl
inc
mov
sub
rolb
inc
scas
pop
xchg
push
mov
aam
and
xchg
movsb
sub
jg
cld
jg
xchg
jbe
ret
addr16
movsb
lods
or
mov
repnz
rcrb
shl
lea
jnp
das
rcr
or
imul
mov
out
sub
imul
outsl
xchg
mov
in
mov
jo
mov
rcll
jp
xor
xor
das
int3
daa
xor
loope
adc
adc
push
outsl
loop
rorb
mov
sub
cmp
cmp
add
repz
inc
lea
sarl
daa
dec
push
mov
sbb
add
pusha
mov
cli
add
leave
adc
out
push
xor
pop
sbb
aaa
dec
inc
cmp
sub
imul
and
out
imul
fbstp
cltd
xchg
orl
pusha
and
cmp
mov
dec
sbb
rolb
dec
sti
mov
xchg
hlt
sbb
cmp
repz
icebp
push
mov
ret
jmp
jb
pop
cmp
pop
stc
dec
jno
or
push
idivb
lea
jle
jmp
xlat
jnp
mov
push
popf
lods
sub
dec
popf
das
sti
xor
je
movsl
out
sub
add
enter
mov
pop
stos
push
jne
arpl
mov
popa
mov
inc
or
jmp
inc
push
push
in
push
jge
sbb
cmp
jae
mov
cli
repz
mov
je
add
in
arpl
gs
jmp
mov
inc
mov
or
push
mov
cs
jo
push
mov
fs
inc
dec
sub
arpl
or
push
mov
mov
lods
mov
fs
lret
add
xor
jg
push
jns
adcb
jg
xchg
outsl
mov
daa
lret
lcall
xor
xchg
mov
daa
pop
push
dec
stos
cmp
adc
fwait
repz
popf
jmp
fidivl
xor
push
repnz
testl
sub
mov
push
dec
mov
push
sbb
jo
add
outsl
xchg
cld
jnp
cmp
and
sub
ds
and
ret
cmpsb
out
and
scas
jbe
xchg
lock
dec
adc
out
jmp
fs
cmp
cwtl
push
cmp
loopne
and
and
cmp
push
ja
xchg
lods
sub
inc
add
add
lods
pop
mov
push
arpl
data16
popf
mov
daa
xchg
sub
add
jnp
adc
out
adc
in
adc
pop
imul
xchg
loopne
add
imul
add
mov
aad
jmp
imul
nop
lods
mov
stc
gs
aas
cmp
loop
insl
mov
and
in
push
push
add
