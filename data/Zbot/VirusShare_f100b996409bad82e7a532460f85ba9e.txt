pushl
pop
sub
jbe
fisubl
jo
cmp
push
pop
std
pop
or
pop
dec
sub
mov
push
mov
decl
dec
inc
xchg
sub
jecxz
scas
add
ss
push
or
mov
incl
dec
clc
mov
xchg
jnp
xorb
cltd
sbb
sub
enter
test
call
dec
pop
sbb
stos
pusha
mov
push
push
dec
cs
mov
std
or
je
jnp
in
int3
ljmp
mov
data16
imul
inc
jns
inc
add
jbe
insl
into
js
enter
lcall
fimull
sti
or
inc
mov
and
add
xorb
dec
decl
pop
cmc
fmuls
pushf
cs
mov
push
fs
and
in
std
jmp
mov
pusha
mov
push
jnp
out
adc
or
jmp
mov
ret
movb
sbb
das
movsl
dec
lds
cmp
mov
pop
clc
dec
xchg
decl
jo
mov
int3
icebp
pop
adc
testb
inc
cs
push
sbbb
jmp
cmp
jns
xchg
rclb
shlb
dec
xlat
adcb
decl
mov
mov
mov
sbb
lcall
repz
mov
pop
into
dec
push
adc
iret
push
push
inc
mov
xchg
cmpsb
repz
jecxz
scas
push
movsl
lcall
call
scas
pop
add
fwait
sbb
iret
std
and
cmp
sub
xchg
pop
pop
cltd
xchg
dec
dec
mov
cmp
sbb
jnp
iret
fwait
cmp
lahf
pop
cmp
inc
ret
in
aaa
dec
into
adc
call
mov
sub
jge
sahf
hlt
xchg
test
out
stos
add
pushl
mov
cmp
test
pop
sbb
test
lea
mov
imul
dec
push
adc
mov
pop
loope
pop
push
pushf
cmp
lock
jle
jmp
dec
movsb
jmp
pop
aad
cmp
xchg
int3
dec
call
popa
mov
mov
mull
sub
decl
jns
xchg
cmc
pop
cmp
dec
repz
jns
pop
mov
movb
cmpsb
add
cmp
cld
lods
xlat
aaa
push
push
mov
int3
mov
mov
ljmp
arpl
dec
push
popf
fwait
pop
lcall
add
or
std
filds
push
scas
jo
jmp
xor
xor
aam
cmp
pop
daa
outsb
mov
pop
mov
fmuls
and
push
push
movb
mov
cmp
push
shll
sub
aad
int3
cmpsb
mov
lcall
xor
hlt
push
sbb
xor
movsb
jg
pop
jge
lret
fs
mov
icebp
ljmp
int3
ds
xor
fsts
ss
cmpsl
jae
fildll
lcall
sub
sbb
punpcklwd
mov
mov
adc
iret
lods
fisttpll
sbb
fcompl
cmpsl
jge
dec
lahf
xchg
push
jle
cmp
add
mov
xor
xor
or
mov
dec
mov
cmp
popa
or
dec
int3
test
mov
mov
mov
push
jmp
sbb
fldl
mov
iret
xchg
lods
in
push
and
outsl
pushl
mov
sbb
mov
icebp
hlt
rcrl
ret
xchg
jb
call
sub
andl
sub
setne
xorb
or
or
rcrl
lcall
or
sub
ds
push
les
add
inc
dec
push
into
mov
push
mov
call
imul
push
pushf
xor
lcall
ds
sub
mov
insb
sbb
inc
inc
inc
pop
mov
jmp
setp
cwtl
inc
mov
and
pop
xor
shrb
xor
pop
into
mov
and
test
loopne,pn
push
dec
mov
and
add
fdivr
pushl
jmp
inc
jmp
adc
pop
adc
fisubrs
mov
loop
ljmp
test
shlb
notb
out
jo
cmp
lds
add
lds
cli
mov
les
stos
xchg
int3
pop
fsubl
adc
int3
pop
cmp
sbb
ljmp
inc
or
inc
stos
inc
mov
insb
or
rcll
or
les
incl
mov
mov
mov
pop
sbb
loop
dec
arpl
add
aad
cli
pop
decl
in
push
fisttps
das
jp
mov
jae
mov
insb
inc
xchg
imul
decl
sbb
jp
xor
mov
es
insl
cmpb
pop
adc
pushl
je
lods
mov
adc
sub
aaa
fadds
lret
roll
sub
add
or
andb
or
add
sub
incl
push
xor
out
outsb
pop
xchg
and
lcall
les
mov
mov
insl
mov
incl
pusha
and
xor
jge
inc
sti
push
sub
aas
mov
into
push
lds
call
lcall
pop
movsl
test
adc
dec
cmp
sbb
nopl
mov
xor
sbb
shl
cmp
lcall
mov
mov
pushl
mov
jge
inc
push
clc
xchg
sbb
dec
loopne
jp
in
mov
call
decl
lock
mov
sbb
lahf
mov
jno,pn
inc
out
negb
loope
cmp
pushl
xchg
adc
movsl
fbld
lock
add
iret
dec
sub
or
out
or
pop
inc
out
mov
mov
imulb
and
add
imul
mov
call
cld
or
adc
sub
in
jb
int3
inc
mull
lods
imul
jae
add
xchg
push
inc
scas
dec
fwait
aam
mov
mov
idivl
or
shll
xchg
out
in
xchg
call
les
jb
outsb
inc
pop
cmp
inc
jp
jmp
or
xchg
call
std
mov
pop
sub
ret
sub
imul
mov
inc
xor
add
fadds
mov
xor
dec
adc
shl
jl
bound
adc
pushl
je
cmc
sbb
xorb
jle
mov
sub
ljmp
test
loop
loope
jl
jne
mov
mov
dec
sbb
and
mov
cmc
dec
fiaddl
lahf
adc
xchg
pop
and
mov
xchg
jp
cmpsb
cmp
jge
and
loop
mov
pop
dec
stc
adc
repnz
mov
jnp
push
test
stos
rorl
xor
decl
insl
cld
add
ss
jle
mov
mov
inc
add
xchg
cmp
mov
mov
ficompl
jl
mov
enter
mov
push
dec
ret
pop
js
int
out
jl
pop
sbb
aam
in
pop
movsl
push
mov
aam
iret
dec
test
mov
jmp
mov
pop
jle
int
rdtsc
dec
mov
sub
int3
dec
aad
hlt
cld
rorl
and
xlat
cld
sbb
mov
imul
into
repnz
nop
sub
dec
call
jg
test
jns
loope
push
addb
push
add
test
or
decl
lods
xchg
test
sahf
sub
and
and
jbe
inc
dec
push
mov
lcall
push
add
push
fisttpl
int
cli
fsubrl
fcomps
incl
cmpsb
loop
sbb
adc
clc
repnz
call
push
sub
dec
into
jmp
push
push
sub
push
cmc
mov
inc
pop
fidivs
adc
and
mov
insl
cmp
shr
cli
mov
inc
lahf
sbb
lret
inc
mov
jne
mov
arpl
repnz
rorb
inc
lcall
paddsw
adc
out
jnp
mov
cmpsb
in
fdivrs
movsl
mov
sbb
cmpsl
jmp
inc
enter
and
adc
in
lcall
or
xor
and
andl
adc
ds
jns
enter
lcall
inc
call
out
jb
pop
and
sub
jl
lahf
ret
std
mov
decl
mov
lret
clc
xchg
leave
jle
mov
movsl
ss
pop
lret
popa
test
idiv
mov
mov
fstps
inc
cwtl
pop
xchg
addb
push
fadd
inc
pushl
inc
push
fidivrl
ja
cwtl
adc
jl
fucomip
mov
fildl
sbb
decl
cmp
cmp
xchg
xorb
ror
aaa
repnz
mov
incl
cld
mov
iret
pop
xchg
pop
in
cmp
mov
mov
add
pop
dec
mov
jmp
or
pop
jne
cs
repnz
fwait
xchg
cmpsl
js
pop
daa
adc
jg
mov
cltd
fs
mov
enter
xchg
pop
insl
adc
decl
mov
popf
jnp
and
pop
push
call
pop
rcr
xchg
mov
cli
testl
std
add
xor
jbe
in
decl
adc
dec
aam
ja
cld
shrl
cltd
jno
int
jmp
pop
dec
cli
dec
inc
mov
in
and
jg
flds
push
cmp
sbb
fs
xchg
sbb
inc
pop
ret
inc
xchg
jmp
int3
movsb
push
cli
out
jecxz
fwait
cmp
pop
cwtl
sub
int3
xlat
int3
lahf
mov
adcb
test
lcall
jo
cmpsb
lcall
add
mov
ss
loop
jmp
mov
pop
sbb
sbb
add
ljmp
stos
into
mov
pcmpeqd
loop
jge
fcompl
xchg
insb
xchg
inc
jl
and
jb
inc
les
ret
or
or
inc
dec
notb
and
scas
call
cld
jge
aas
xchg
bound
and
xor
dec
dec
push
push
sbb
fisubl
ret
in
mov
ss
decl
xchg
push
mov
std
push
add
xchg
hlt
mov
ret
loop
fdivs
cmp
out
stos
add
incl
mov
aam
pop
cmp
push
and
lock
adc
aas
inc
xor
jnp
cmc
mov
push
das
inc
das
push
hlt
push
push
arpl
hlt
fnsave
cwtl
cmp
mov
inc
sub
sub
stos
dec
xchg
sahf
xlat
xor
leave
add
nop
test
pop
pop
sub
pushl
jmp
jnp
out
xorl
fucomp
lods
in
jne
xchg
lcall
incl
jo
sbb
mov
adc
push
roll
outsl
lcall
xchg
jp
fstpt
xchg
clc
cli
lods
cmp
and
lods
loope
and
call
std
decl
sbb
pop
pop
push
xor
sub
in
and
int3
decl
in
dec
xor
stc
mov
aam
cld
or
stos
lcall
test
push
jbe
push
stc
and
int3
das
daa
mov
int3
push
push
cmp
mov
loope
mov
or
int
lret
jl
mov
ja
cmp
push
jl
xor
mov
xchg
fcoms
lods
les
mov
mov
out
xor
call
aam
ja
daa
lcall
std
adc
push
out
test
sti
lcall
push
and
pop
test
lret
rcrl
ja
jo
xchg
add
std
pushl
and
nop
cmp
mov
ret
roll
or
mov
imul
test
test
mov
out
mov
ljmp
mov
iret
lcall
mov
mov
adc
or
pop
mov
decl
pop
mov
push
shr
sub
mov
andb
fdivs
lcall
loope
mov
call
movsl
scas
addl
out
mov
std
insb
es
movsb
scas
sar
pop
loopne
xchg
mov
or
test
nop
ret
xchg
sarl
jno
push
pop
mov
jmp
mov
add
mov
int
jmp
test
lcall
adc
cs
push
push
lock
test
pop
sti
lds
test
mov
ds
mov
mov
cli
cmc
push
jb
fimull
das
mov
lcall
xchg
outsl
add
nop
mov
xor
mov
push
mov
adc
pslld
xchg
lret
cmp
int3
icebp
pop
cld
jmp
ret
in
jecxz
xchg
cltd
imul
addl
inc
adc
sbb
jno
andps
add
insb
xorl
jle
popf
fcoms
cmp
lcall
dec
ljmp
mov
sahf
gs
inc
pop
insb
push
mov
stc
push
cmp
lcall
jg
push
sbb
push
cwtl
sbb
jg
sub
mov
mov
ret
punpckhbw
cli
outsl
xor
sbb
ss
loopne
dec
aam
std
call
popa
sbb
bound
test
mov
push
rcrb
mov
call
movsb
push
mov
pop
cli
ja
movsb
cld
movsb
dec
sbb
iret
lahf
popa
mov
cmp
sub
jmp
mov
jg
jmp
popa
jbe
push
scas
or
dec
enter
cmpl
js
mov
mov
mov
cmpsb
push
nop
cltd
or
sbb
mov
pop
inc
scas
cli
jmp
push
and
cwtl
cmp
stos
imul
xchg
lahf
cmpsb
or
rclb
incl
sbb
mov
ret
cwtl
lahf
mul
outsl
movsb
aaa
fldt
sub
xchg
mov
or
lcall
ret
int
daa
jle
call
lret
decb
pop
scas
imul
ljmp
int
stc
mov
xor
inc
pop
sub
gs
cli
ds
sub
popa
push
sbb
pushl
push
sub
test
js
xlat
pop
shl
push
add
cli
inc
mov
call
xchg
add
lea
mov
daa
pusha
negb
jge
in
adc
icebp
jno
inc
dec
mov
ret
fsubrs
jo
lea
push
into
cmp
mov
std
ljmp
mov
aaa
fmuls
pop
dec
test
jae
xor
scas
rorb
and
pushl
cs
lea
add
ficoml
cmpsb
call
stos
fcmove
mov
cmpsb
ljmp
pusha
fwait
pop
outsb
cmpsl
mov
cmp
push
jbe
iret
add
or
jg
js
call
movsl
std
add
imul
cld
cmp
push
sub
inc
jg
insl
add
jp
pop
jnp
and
call
pop
add
decl
or
xchg
push
in
cli
xor
in
mov
jmp
jmp
push
in
inc
ljmp
fstpt
iret
stos
push
and
mov
inc
les
out
negb
popa
dec
mov
xchg
ja
dec
jl
fwait
inc
aad
xorl
inc
push
call
push
add
aad
cmp
xchg
add
filds
mov
mov
jge
push
sar
decl
in
cmpsb
and
sbb
fnstsw
ficoms
push
lcall
popf
ljmp
dec
movsb
push
out
dec
cmp
sbbb
mov
jne
sub
dec
cld
movsl
mov
call
xor
lods
fistps
in
lret
xor
insl
cmpsb
imul
std
push
xor
mov
loopne
aaa
mov
addr16
rcll
mov
xchg
ljmp
in
ljmp
scas
push
adc
xchg
jns
stos
jb
sbb
lret
shll
lcall
fcomi
in
out
movb
imulb
inc
lds
jbe
adc
outsl
lcall
incl
jns
pop
push
fs
outsl
mov
and
push
xchg
aad
in
add
ljmp
cmp
xchg
cli
pop
sbb
sub
xor
pop
push
sbb
jne
mov
cmp
jmp
push
mov
jle
imul
outsb
cmp
inc
lods
inc
mov
push
adcb
ror
test
cltd
ret
sub
addb
jmp
fs
les
mov
mov
inc
leave
mov
and
ret
cmpsb
daa
xchg
popf
cltd
pop
mov
jp
fstl
sbb
ljmp
xor
aad
hlt
rol
rcrb
mov
jg
repz
iret
or
inc
pushl
notb
mov
loopne
lock
aas
ds
inc
icebp
shll
sbb
in
jcxz
add
lds
mov
leave
movsl
pop
pop
popa
test
inc
mov
jns
mov
enter
lret
adc
call
ss
xlat
aas
mov
cld
pushf
cmp
add
mov
loop
and
inc
inc
lcall
aam
rorb
das
cmpsb
aaa
mov
lcall
outsl
dec
or
movsb
daa
les
popf
arpl
psubb
jge
in
sub
cld
popa
adc
sbb
add
sarl
enter
lahf
nop
in
mov
dec
fmul
cmpl
jle
nop
aam
xchg
push
adc
push
xchg
bound
mov
pushl
dec
inc
mov
outsb
cmc
fnstsw
xchg
mov
cmp
loope
lcall
imul
flds
mov
xchg
xchg
sbb
rcrb
mov
xor
mov
repnz
rorb
stos
push
push
jns
ret
mov
aaa
sbb
std
outsl
hlt
btr
mov
mov
add
adc
fstl
fld1
dec
aaa
xchg
xor
cmp
in
fimuls
dec
lods
adcl
dec
cmp
mov
pushl
ja
iret
inc
mov
inc
mov
adcb
mov
mov
dec
ret
cmpsl
jp
push
lea
out
mov
adc
mov
lret
ret
xchg
xor
inc
or
sti
pop
test
sbb
call
mul
aam
cld
movsb
loopne
data16
out
and
and
fwait
jnp
inc
cmp
push
call
int3
test
jae
inc
inc
push
jmp
pusha
enter
mov
add
dec
add
cmp
rcll
repz
ret
arpl
test
or
insl
fistpl
ja
in
shll
lds
repnz
lcall
daa
cmp
cmp
call
and
mov
lods
rcrl
mov
and
ret
mov
push
push
out
cltd
ds
push
push
mov
std
mov
insl
sub
lods
sub
jmp
lcall
adc
pop
jae
enter
fucomp
mulb
jmp
fsubrs
xchg
cs
dec
mov
clc
fldl
cmp
xchg
pop
faddp
fcoml
jl
imul
sub
or
jmp
inc
xchg
iret
push
subl
or
mov
mov
sbb
mov
movsl
in
and
pop
mov
xchg
sub
mov
and
cmc
mov
in
std
in
dec
cwtl
fs
lea
xchg
xchg
movsl
jecxz
mov
ljmp
add
mov
ret
inc
hlt
shl
sahf
inc
repnz
mov
test
sbb
and
int3
ja
mov
std
ja
jno
xor
scas
xor
in
and
sbb
decl
cmc
pop
mov
lret
inc
test
xchg
popa
pop
int
or
inc
pop
jmp
lret
mov
decl
adc
leave
cli
fnsave
mov
jp
sub
test
and
jae
dec
es
mov
femms
movsb
xchg
sbb
fcoms
cli
adc
mov
xor
sub
mov
mov
aas
adc
and
dec
dec
dec
mov
sub
sbb
fisttpll
mov
adc
push
mov
fnsave
xor
pop
mov
dec
sub
jg
fdivrp
mov
mov
cmp
ret
test
nop
cs
jbe
fldcw
xor
inc
or
mov
addr16
testb
cmp
cmp
xchg
xchg
jge
dec
dec
pop
xchg
mov
sub
push
test
je
aas
lds
jbe
int
out
xor
pop
mov
insl
fistpl
das
ds
insb
testb
xor
ret
add
arpl
pushf
mov
test
imul
clc
mov
mov
xor
push
push
mov
jo
inc
dec
push
jno
mov
adc
sub
push
loopne
std
jmp
popa
mov
adc
xor
pop
sub
lods
mov
add
pop
out
fists
ffreep
inc
add
addr16
sbb
fnstenv
shlb
add
add
arpl
insb
shrl
sub
addl
cmp
sub
jne
ja
add
fsubrs
add
ret
fadd
inc
fmuls
pushl
std
mov
ss
scas
data16
daa
out
push
adc
pushf
lcall
out
cli
call
sub
sbb
or
mov
adcl
jmp
lahf
and
add
jp
push
xchg
popf
adc
push
add
pop
cmp
hlt
aad
jg
aaa
and
loope
mov
int
leave
cmp
xchg
sti
arpl
nop
scas
push
lods
jmp
ljmp
push
dec
mov
std
mov
adc
xor
mov
incl
inc
and
repnz
test
leave
ss
add
pop
and
or
jmp
mov
loope
add
mov
sub
mov
mov
in
stos
lcall
pop
adc
out
sbb
aas
repnz
xor
xchg
jge
add
popf
outsb
xlat
mov
incl
movl
pop
xor
push
pop
inc
shr
popl
out
faddl
ljmp
lods
adc
jmp
pop
push
ret
cmp
int
out
cltd
push
es
jb
cmp
jl
jge
incl
hlt
lret
jl
movsb
aam
pop
out
clts
nop
test
or
incl
cmp
or
mov
enter
pop
dec
cwtl
or
jl
sti
aaa
sub
cwtl
movsb
jmp
decl
push
dec
inc
jnp
cmp
jne
mov
push
icebp
into
negl
pop
push
dec
shl
mov
pop
push
pop
daa
scas
out
adc
js
cli
jns
jns
out
pushf
iret
imul
sub
xchg
loop
add
lcall
pop
es
orl
in
pop
cwtl
int
inc
aaa
movsb
add
jo
movsb
test
sti
ljmp
cli
push
clc
stc
into
and
add
popa
mov
ss
dec
arpl
daa
hlt
ret
mov
js
cmp
icebp
cmp
jns
lcall
jmp
mov
mov
test
lock
mov
adc
ret
incl
ss
inc
push
pop
negl
rcrl
sbb
popf
pop
mov
xor
mov
ljmp
jae
das
loope
imul
pop
pusha
and
xchg
mov
sbb
iret
mov
call
insl
push
dec
int
inc
fwait
inc
shlb
sbb
ljmp
ljmp
dec
dec
movb
clc
xlat
lds
setp
mov
outsl
outsl
push
sub
adc
mov
and
mov
decl
outsb
pop
pop
mov
adc
int
sub
and
lods
cltd
bound
leave
lcall
lock
add
cmp
rcrb
fstps
adc
shll
jp
jno
enter
ljmp
out
addr16
jo
jg
or
cmp
pop
push
inc
sbb
mov
cmp
mov
dec
or
cmp
mov
pop
xor
xor
negb
xor
ljmp
sahf
or
add
test
aad
loope
mov
xlat
add
push
or
fdivrs
dec
repz
push
jns
or
lods
cmpsb
add
xor
jmp
sbb
popf
pop
in
imul
in
mov
or
and
push
cmp
or
mov
jmp
cmp
sbbb
cmc
cmp
sub
mov
scas
adc
cmp
incl
repnz
aad
dec
outsb
cmp
or
int
fstp
cmp
mov
mov
mov
pop
fcoms
das
or
xor
xor
pop
mov
dec
popa
out
cmp
shrl
sbb
aam
aad
or
sbb
add
jmp
xor
out
or
mov
fcomi
adc
test
mov
cld
cmp
sti
rcll
pop
push
jle
pop
mov
jg
repz
cmp
ljmp
mov
pop
sub
aad
mov
xchg
or
cmp
jge
xchg
fidivrs
mov
push
mov
cmp
into
ljmp
std
aas
jp
std
adcb
ljmp
xchg
jmp
arpl
mov
push
inc
push
jno
and
mov
push
inc
push
adc
jecxz
dec
fdivr
lcall
sub
mov
add
xor
sbb
mov
inc
sti
call
cmpb
orl
xor
nop
push
and
mov
je
std
ficoml
movsb
incl
jo,pn
adc
push
loopne
jne
pop
xor
mov
or
imul
incl
push
mov
sub
push
jae
pushf
mov
pop
adc
or
decl
pop
daa
xor
or
mov
jge
xor
and
je
test
sti
incl
test
pop
adc
push
shrl
add
xchg
mov
jmp
mov
xchg
sub
mov
dec
sbb
arpl
or
aas
pop
stos
sar
fwait
sub
and
sbb
or
mov
xor
xchg
addb
subl
ljmp
xor
xchg
jmp
mov
outsl
xor
push
dec
js
cltd
fsubr
decl
lret
mov
mov
stos
loopne
push
xor
cmp
adc
sbbb
rorb
lahf
adc
mov
ja
in
sub
lock
add
fadds
lds
sar
incl
xor
and
inc
or
sub
push
loope
sub
ret
xchg
xchg
jg
ljmp
rolb
aaa
xor
ret
cmp
loope
fdivr
shlb
lcall
mov
mov
dec
fildl
push
add
cmpsl
sub
cmp
jmp
push
das
xchg
inc
int3
add
cmpsb
mov
mov
enter
loop
jns
ds
sub
jo
hlt
and
mov
pop
pop
ret
pop
fldl
pushf
cmpsb
lock
jmp
leave
int3
cli
pop
push
pop
mov
xchg
call
in
adc
jecxz
adc
sti
testb
call
xor
das
sbb
or
push
dec
mov
and
jo
or
sub
push
pop
js
and
adc
ficoml
or
lret
sub
das
pop
ja
inc
rorl
mov
pop
inc
and
mov
adcl
imul
mov
outsl
insl
mov
imul
jge
sub
pop
inc
or
pusha
imul
movsl
cmp
fsts
andl
pop
or
mov
pusha
mov
lret
xor
pop
jg
call
imul
das
cmp
nop
jbe
ja
pop
inc
ret
rcll
aaa
sub
mov
pop
movsb
mov
sbb
dec
repnz
inc
adc
sub
xor
or
mov
mov
xchg
and
cltd
inc
sub
jne
and
nop
arpl
jg
xor
jl
ret
in
mov
nop
pop
lock
cmpsl
add
sbb
and
lret
mov
mov
sti
rclb
sub
mov
sbb
outsl
dec
or
xchg
daa
or
insl
adc
cmpsb
and
pop
sub
push
adc
push
xlat
mov
cmp
push
mov
fisttpll
fidivrs
mov
xor
or
pusha
sarl
test
xchg
das
push
push
jne
mov
sub
imul
ficoms
push
test
jnp
jmp
insb
pop
inc
fimull
push
mov
rcrl
notl
pcmpgtw
mov
pop
pop
shl
movsl
lods
sub
in
jae
mov
pop
pop
ret
std
pop
icebp
jecxz
or
rolb
xchg
add
ljmp
sub
push
pop
ret
push
mov
repz
incl
push
push
push
ds
pushf
push
fcoml
sbb
test
pop
pop
pop
call
pop
idivb
push
inc
add
or
or
fcoms
jmp
lcall
outsl
stc
ss
aas
push
mov
xor
xchg
dec
jb
je
mov
lods
inc
mov
jle
xor
pop
bound
sub
scas
andb
add
dec
test
sub
ljmp
cwtl
cwtl
dec
enter
pop
push
mov
jl
mov
repz
push
mov
pop
pop
xchg
adc
mov
mov
push
add
push
sbb
decl
jnp
aad
out
push
adc
sti
xor
push
stc
ficoml
ds
ljmp
outsl
jbe
movsl
jp
sub
stc
add
aas
cmc
addr16
les
test
call
mov
cmp
dec
xchg
scas
aas
xor
sbb
movsb
pusha
sub
sub
xor
insl
xchg
jmp
int3
repz
jg
outsb
add
and
sub
mov
mov
or
inc
inc
sub
mov
out
mov
call
je
mov
push
out
push
sahf
imul
adc
rcll
xorb
pushl
pop
sti
and
inc
and
sub
cmp
imull
lret
or
mov
lcall
add
push
push
pop
out
jmp
dec
or
decl
in
cmp
mov
ds
or
xor
jb
mov
jp
sti
jae
pop
dec
xchg
inc
xor
jmp
mov
jg
dec
xchg
mov
mov
jg
push
stc
out
adc
mov
rcl
mov
xchg
add
push
sub
mov
jmp
inc
test
mov
insl
ja
mov
jl
mov
xchg
dec
mov
lcall
pusha
in
sub
push
mov
cmp
scas
fdiv
or
cmp
xchg
xchg
sti
test
push
je
pop
js
push
push
cwtl
in
mov
cmpsl
in
xchg
mov
xchg
inc
cmp
mov
mov
pusha
ljmp
xchg
loope
addr16
dec
adc
mov
mov
and
xchg
repz
ja
call
minps
adc
jmp
jbe
lcall
stos
outsl
and
push
aas
sub
pop
stos
das
push
pushl
push
inc
negb
push
dec
popf
lods
js
mov
imul
test
ret
lahf
push
and
xlat
sbb
pop
jecxz
pop
stos
call
das
xchg
sbb
mov
xor
sub
jp
inc
jns
pop
push
out
clc
ss
cmp
lcall
pushf
sub
mov
xchg
xchg
pushl
leave
push
cmp
scas
out
lods
aas
ja
mov
rcll
mov
mov
or
sub
repz
push
mov
fidivs
inc
clc
or
loope
xor
jp
fbld
pop
mov
in
pop
push
jb
mov
iret
add
out
push
int
lcall
inc
mov
cmp
push
movsl
mov
nop
imul
test
mov
daa
fisttpll
hlt
cmp
stc
cmp
aas
shll
mov
cltd
xlat
loopne
mov
mov
scas
call
std
lcall
bound
jp
scas
and
loope
repnz
dec
orb
data16
clc
pushl
mov
sub
mov
cmpsl
orl
ljmp
push
call
inc
imul
and
mov
repnz
insl
into
push
outsb
or
out
lcall
stos
push
stos
and
hlt
sbb
dec
dec
cmp
rorl
and
iret
subl
jmp
into
fistpll
out
push
push
testl
loopne
fiaddl
aas
mov
pushf
sub
loopne
jmp
push
sub
jbe
test
into
jp
or
loopne
add
jg
mov
decl
out
das
daa
in
mov
repz
div
and
ret
adc
and
subl
jnp
lcall
jnp
dec
icebp
fmuls
shl
mov
outsb
jg
or
sub
loope
stos
lcall
jecxz
inc
inc
shll
dec
mov
jo
popf
dec
push
mov
out
push
inc
mov
xchg
mov
dec
xor
pop
or
mov
shll
lods
mov
je
jle
fistpl
or
jl
call
cmp
icebp
add
jle
push
pop
sbb
or
mov
push
push
icebp
lahf
adc
and
loope
jmp
inc
cwtl
and
sbb
rolb
out
sbbb
dec
or
inc
inc
test
add
fadds
add
add
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adc
sub
jbe
jmp
jo
cmp
push
pop
std
pop
or
pop
dec
sub
mov
push
mov
dec
inc
xchg
ljmp
and
scas
add
ss
push
or
mov
cmp
ljmp
adc
lret
jnp
xorb
cltd
sbb
sub
enter
test
pop
sbb
stos
pusha
mov
jmp
push
push
dec
cs
mov
std
or
je
jnp
in
int3
insb
push
sahf
mov
jmp
push
imul
inc
jns
inc
add
jbe
insl
into
js
enter
movsl
adc
fimull
jnp
sti
or
inc
mov
and
add
xorb
dec
or
fmuls
pushf
cs
inc
mov
pop
push
fs
and
in
std
movsb
push
faddp
pop
or
dec
jp
mov
push
jnp
out
adc
or
jmp
mov
ret
cld
incl
iret
sbb
das
movsl
dec
lds
cmp
mov
pop
clc
dec
xchg
jo
mov
fcomip
pop
adc
testb
inc
cs
push
sbbb
fbld
cmp
pop
lock
jns
xchg
rclb
shlb
dec
xlat
adcb
mov
mov
incl
stos
pushf
adc
imul
aaa
pushf
movsb
in
or
repz
mov
adc
iret
push
push
inc
pushl
icebp
sbb
repz
jecxz
scas
push
movsl
lcall
push
push
pop
scas
pop
add
fwait
sbb
sbb
sarb
out
push
pop
xchg
pop
pop
cltd
xchg
enter
decb
adc
movsl
bound
xor
iret
fwait
cmp
lahf
pop
cmp
inc
ret
in
aaa
dec
into
adc
mov
xchg
mov
sub
jmp
xchg
test
out
stos
add
xor
cmp
test
incl
sbb
test
lea
mov
imul
into
push
adc
jmp
jg
pop
loope
pop
push
pushf
cmp
lock
jle
jmp
dec
movsb
out
aad
cmp
xchg
int3
dec
call
incl
pop
xchg
popa
mov
mov
mull
sub
inc
jns
xchg
cmc
pop
cmp
pushl
dec
repz
jns
pop
mov
movb
cmpsb
sarb
mov
les
cld
lods
xlat
aaa
ljmp
clc
incl
push
mov
int3
mov
mov
sub
out
jno
mov
lcall
sbb
or
std
filds
push
scas
jo
xor
xor
aam
cmp
incl
pop
daa
outsb
mov
pop
mov
fmuls
and
cmc
push
movb
mov
cmp
push
shll
sub
aad
int3
cmpsb
mov
das
es
xor
hlt
push
sbb
jg
pushl
mov
movsb
jg
pop
jge
lret
fs
mov
ds
cmp
mov
cmc
rcr
adc
gs
cmpsl
jae
fildll
sub
sbb
punpcklwd
mov
mov
adc
iret
lods
fisttpll
sbb
fcompl
lahf
xchg
push
jle
cmp
pop
icebp
lock
push
mov
xor
xor
or
dec
mov
cmp
decl
popa
or
dec
int3
test
mov
mov
push
jmp
lcall
addr16
xchg
test
xchg
push
and
xchg
xor
aas
mov
sbb
jg
pop
mov
push
icebp
hlt
rcrl
ret
xchg
jb
sub
andl
sub
decl
xchg
loope
xorb
or
or
rcrl
cmc
add
push
sub
decl
or
push
les
add
push
into
mov
push
mov
orl
sub
xor
mov
xchg
push
pushf
xor
cltd
loop
xor
ds
ljmp
pushf
mov
mov
insb
sbb
inc
inc
inc
pop
mov
mov
cmp
lcall
decl
out
xchg
pop
xor
shrb
xor
and
test
call
mov
loopne,pn
push
dec
mov
and
add
fdivl
jmp
inc
jmp
lcall
sub
fisubrs
mov
loop
push
test
shlb
notb
call
pop
cmp
lds
add
lds
fsts
les
jg
stos
xchg
int3
pop
fsubl
adc
int3
pop
cmp
sbb
les
inc
or
inc
stos
inc
mov
lcall
insb
or
rcll
or
les
test
pushf
mov
decl
mov
pop
sbb
loop
dec
arpl
add
aad
cli
pop
mov
jmp
and
aad
lcall
mov
jae
mov
insb
inc
xchg
imul
xchg
push
shll
pushl
push
out
movsl
es
insl
cmpb
pop
adc
daa
cld
gs
je
lods
mov
decl
aaa
fadds
lret
roll
sub
out
scas
scas
push
dec
mov
clc
mov
cwtl
or
add
sub
push
xor
out
outsb
pop
xchg
and
jmp
lcall
les
mov
mov
insl
mov
in
or
ss
and
xor
decl
cmp
jge
inc
sti
push
sub
aas
mov
into
push
lds
push
cs
pop
movsl
ljmp
adc
dec
cmp
sbb
nopl
mov
push
sbb
shl
cmp
lcall
xor
xchg
push
fdivrl
mov
mov
jge
inc
push
clc
xchg
sbb
ljmp
dec
loopne
jp
in
mov
call
je
add
mov
pop
orb
out
negb
loope
xorl
adc
movsl
fbld
lock
add
iret
dec
sub
or
out
or
cmpsb
pop
xchg
or
lock
pushl
imul
sbb
pop
jl
or
lock
test
xorb
sub
in
jb
int3
inc
mull
lods
imul
es
std
incl
inc
scas
dec
fwait
aam
mov
pushf
idivl
mov
pop
or
shll
xchg
out
in
xchg
call
jb
outsb
inc
pop
cmp
cmp
jp
jmp
or
xchg
call
adc
aas
mov
sub
ret
decl
sub
imul
mov
inc
xor
add
mov
xor
decl
cmp
mov
hlt
jl
bound
adc
cmp
je
cmc
sbb
cli
mov
xor
jp
imul
outsl
push
test
loop
loope
jl
jne
mov
mov
dec
sbb
and
dec
fiaddl
lahf
adc
aas
mov
xchg
pop
and
mov
xchg
jp
mov
and
loop
mov
lcall
stc
adc
repnz
jmp
add
cli
lcall
shlb
test
stos
rorl
xor
cli
insl
cld
add
decl
sub
out
mov
mov
inc
add
xchg
cmp
mov
mov
ficompl
inc
lret
jl
mov
enter
mov
push
dec
ret
pop
js
int
out
jl
pop
sbb
aam
in
pop
movsl
push
mov
aam
iret
dec
test
mov
jmp
mov
pop
jle
int
rdtsc
decl
mov
aad
hlt
cld
rorl
and
xlat
sbb
mov
imul
data16
into
repnz
nop
sub
dec
call
test
jns
jmp
or
add
xor
mov
ret
test
or
push
lods
xchg
test
sahf
sub
push
lcall
and
and
jbe
inc
dec
push
mov
pop
jmp
mov
sar
bnd
push
ja
sub
fsubrl
fcomps
cmpsb
loop
sbb
ljmp
adc
clc
repnz
call
push
sub
dec
into
icebp
push
sub
push
cmc
mov
jmp
jmp
pop
fidivs
adc
and
mov
insl
cmp
shlb
pop
push
inc
lahf
sbb
lret
jg
ljmp
lret
arpl
repnz
rorb
mov
in
scas
jmp
nop
mov
out
jnp
mov
cmpsb
in
fdivrs
movsl
mov
mov
imul
test
cli
insl
sbb
adc
in
and
lret
xchg
or
cli
pushl
sub
andl
adc
ds
jns
enter
call
out
jb
out
sub
and
sub
jl
lahf
ret
std
mov
mov
lret
clc
xchg
leave
pop
jle
mov
movsl
ss
pop
lret
popa
test
add
mov
mov
lcall
sub
pop
xchg
addb
push
fadd
inc
xor
inc
push
fidivrl
ja
cwtl
adc
mov
fucomip
mov
fildl
sbb
cmp
cmp
mov
xorb
ror
aaa
repnz
mov
lret
iret
pop
xchg
pop
call
in
cmp
mov
mov
add
pop
dec
mov
xor
pop
pop
jne
or
decl
push
js
pop
daa
adc
loop
lcall
cltd
fs
mov
enter
xchg
pop
insl
adc
insb
lds
pushl
and
pop
push
call
pop
rcr
xchg
mov
bound
sbb
jmp
ljmp
test
mov
jnp
jbe
in
or
rorb
ja
cld
shrl
dec
cltd
jno
int
jmp
pop
dec
cli
dec
inc
mov
in
and
flds
push
cmp
sbb
fs
push
hlt
cmp
sbb
inc
pop
ret
inc
xchg
out
movsb
push
cli
out
jecxz
fwait
cmp
incl
cwtl
sub
int3
xlat
int3
lahf
mov
adcb
test
jb
mov
inc
lret
out
cli
pushl
or
add
mov
ss
loop
jmp
or
mov
repnz
das
sarb
mov
outsb
push
mov
sarl
lock
fcompl
xchg
insb
xchg
inc
jl
and
jb
inc
les
dec
xor
notb
ja
pop
ss
scas
jge
aas
xchg
bound
mov
xor
dec
dec
push
push
sbb
fisubl
ret
in
mov
or
std
push
add
decl
sbb
lds
loop
fdivs
cmp
out
stos
add
cmp
aam
call
loopne
cmp
push
and
lock
adc
aas
inc
xor
cmc
mov
push
das
inc
ljmp
push
hlt
push
push
arpl
hlt
fnsave
cwtl
cmp
mov
mov
stos
dec
call
leave
add
nop
test
pop
pop
sub
mov
push
fs
jnp
out
incl
adc
fucomp
lods
in
jne
xchg
lcall
adcl
mov
mov
call
cld
adc
push
roll
sbb
mov
jg
incl
lods
cmp
and
lods
loope
and
repnz
cs
sbb
pop
pop
push
call
push
and
int3
testl
mov
call
cld
or
stos
lcall
test
push
jbe
stc
and
int3
das
daa
mov
pushl
xorl
aam
std
sbb
cmp
sbb
mov
xchg
cmp
lret
jl
mov
ja
cmp
jl
xor
mov
xchg
fdivr
call
lods
les
mov
mov
out
xor
adc
aam
ja
daa
lcall
mov
dec
xor
mov
jle
test
pop
push
push
and
pop
test
jns
add
sbb
ja
jo
xchg
add
pextrw
jg
and
jmp
cmp
mov
ret
roll
or
mov
iret
adc
incl
mov
out
mov
outsl
outsl
mov
iret
lcall
jno
sub
push
mov
adc
or
pop
mov
pop
xor
push
shr
ljmp
cs
andb
fdivs
lcall
loope
mov
scas
addl
ljmp
add
std
insb
es
movsb
scas
rcll
or
mov
jecxz
cmpsb
mov
nop
ret
xchg
sarl
mov
dec
aad
sbb
shll
mov
int
jmp
test
pop
dec
pop
adc
cs
call
lock
test
pop
sti
lds
test
mov
ds
or
mov
push
jb
cmp
jb
fimull
das
mov
mov
add
fbld
and
mov
fidivl
mov
push
mov
popf
pslld
xchg
ljmp
ret
int3
icebp
loope
in
jecxz
xchg
cltd
imul
mov
add
inc
imul
inc
adc
lods
jno
andps
add
out
clc
pushl
jle
popf
fcoms
cmp
in
dec
ljmp
mov
mov
jns
sahf
gs
inc
pop
insb
push
mov
inc
lcall
lcall
stos
jg
push
sbb
push
cwtl
sbb
hlt
sub
mov
mov
inc
fwait
and
push
add
sbb
ss
loopne
dec
aam
popa
sbb
bound
test
mov
add
in
push
outsb
jns
push
rcrb
mov
movsb
push
mov
pop
cli
ja
movsb
cld
jmp
popa
mov
cmp
sub
mov
mov
jg
jmp
lcall
es
scas
or
dec
enter
cmpl
adc
inc
pop
sbb
mov
cmpsb
push
nop
cltd
or
sbb
mov
pop
inc
loop
and
cwtl
cmp
jg
ljmp
sarb
pop
rclb
es
mov
ret
cwtl
sub
lcall
aaa
fldt
sub
xchg
mov
or
lcall
rclb
dec
shlb
jle
call
lret
decb
pop
scas
imul
int
stc
mov
xor
incl
sub
gs
cli
ds
sub
popa
push
sbb
xor
push
sub
incl
pop
shl
push
add
cli
inc
mov
add
lea
decl
lcall
in
adc
icebp
jno
mov
ret
fsubrs
jo
lea
jg
das
cli
push
into
cmp
mov
mov
aaa
fmuls
pop
dec
mov
xchg
xchg
sbb
cmc
lock
mov
scas
rorb
and
dec
lea
mov
cmpsb
call
stos
fcmove
mov
cmpsb
ljmp
cmpsl
mov
cmp
ds
in
insb
jbe
iret
add
or
jg
js
stos
clc
push
push
movsl
loope
std
add
imul
cld
cmp
push
dec
insl
mov
pop
jnp
and
call
pop
add
sahf
arpl
or
xchg
call
idiv
xor
in
mov
jmp
jmp
push
in
inc
ljmp
jo
iret
stos
ljmp
push
and
mov
inc
les
out
negb
popa
dec
mov
ljmp
xchg
ja
dec
jl
fwait
inc
aad
xorl
inc
push
adc
add
aad
call
cmp
xchg
add
filds
mov
mov
jge
push
rorb
in
cmpsb
and
sbb
pop
shrl
fnstsw
ficoms
push
lcall
popf
ljmp
mov
push
rolb
decl
mov
jne
sub
dec
cld
movsl
mov
xor
lods
fistps
in
lret
xor
insl
cmpsb
imul
std
push
xor
add
dec
aaa
mov
addr16
incl
sub
mov
das
in
ljmp
inc
scas
push
adc
xchg
jns
stos
jb
sbb
lret
shll
repz
out
incl
pushf
imulb
inc
lds
jbe
adc
outsl
lcall
cmpl
and
pushl
mov
and
push
xchg
aad
in
add
imul
pop
sbb
in
sub
xor
pop
push
sbb
jne
mov
cmp
jno
fstpl
inc
scas
lret
inc
xchg
out
outsb
cmp
inc
lods
inc
mov
push
ror
test
cltd
ret
sub
cli
or
jmp
inc
fs
les
mov
jmp
popf
ret
leave
mov
and
ret
cmpsb
daa
xchg
popf
cltd
pop
mov
jp
fstl
jmp
ljmp
add
aad
hlt
rol
rcrb
mov
jg
repz
lcall
iret
or
inc
mov
mov
ret
pop
mov
loopne
lock
aas
ds
inc
icebp
inc
jae
mov
xor
jcxz
add
lds
mov
leave
movsl
pop
pop
popa
test
pushl
jns
mov
enter
lret
adc
call
ss
xlat
aas
mov
cld
pushf
cmp
add
jmp
loop
loop
and
inc
inc
lcall
aam
rorb
das
cmpsb
pushl
mov
sbb
or
movsb
daa
les
popf
arpl
psubb
jge
in
sub
cld
popa
adc
sbb
add
sarl
enter
lahf
call
dec
fmul
cmpl
jle
nop
aam
xchg
push
adc
push
xchg
outsb
bound
mov
fnstenv
ja
push
outsb
cmc
fnstsw
xchg
mov
mov
loope
lcall
imul
flds
mov
xchg
xchg
sbb
out
rcrb
popf
lds
xor
mov
repnz
rorb
mov
push
repz
ret
mov
aaa
sbb
std
outsl
hlt
btr
mov
mov
call
les
xor
dec
aaa
xchg
xor
cmp
in
fimuls
dec
lods
adcl
dec
cmp
mov
inc
ja
iret
inc
mov
inc
mov
adcb
mov
mov
dec
ret
cmpsl
jp
call
pop
adc
mov
lret
ret
xchg
xor
inc
or
sti
pop
test
sbb
ret
aam
cld
movsb
loopne
data16
out
and
and
fwait
jnp
push
inc
cmp
push
ror
test
jae
inc
inc
push
jmp
pusha
enter
mov
push
repz
pop
cmp
rcll
repz
ret
arpl
test
decl
insl
fistpl
ja
in
shll
lds
repnz
lcall
daa
mov
cmp
cmp
call
xchg
outsb
mov
lods
rcrl
mov
and
cmp
jge
cld
mov
inc
push
push
out
cltd
ds
push
push
mov
std
mov
insl
sub
ljmp
pop
cmc
adc
pop
jae
enter
fucomp
mulb
jmp
fsubrs
call
clc
fldl
cmp
xchg
pop
faddp
fcoml
jl
imul
inc
sub
or
and
iret
push
subl
or
mov
push
mov
sbb
dec
and
pop
mov
xchg
sub
mov
lcall
sub
mov
in
std
in
dec
cwtl
fs
lea
xchg
xchg
movsl
jmp
ret
mov
add
mov
ret
inc
hlt
shl
sahf
inc
repnz
mov
test
sbb
sbb
movsb
movsl
and
nop
fstl
std
ja
jno
xor
scas
xor
in
and
aas
sbb
xor
jae
xchg
inc
inc
test
xchg
popa
pop
int
or
inc
pop
jmp
pop
cld
jmp
daa
iret
mov
sub
cli
fnsave
mov
jp
sub
test
and
jmp
or
es
femms
movsb
xchg
sbb
fcoms
cli
adc
mov
xor
std
fldt
ret
mov
mov
cmp
mov
mov
jbe
fstp
sub
sbb
pusha
bound
mov
fstpl
push
mov
xor
pop
mov
dec
push
fdivrp
imul
mwaitx
mov
gs
jg
ret
cs
mov
add
push
cmovb
testb
jns
cmp
cmp
xchg
jge
mov
mov
xchg
mov
cmp
mov
sub
test
jbe
fcmovnu
lds
out
xor
jge
fisttpl
pop
pop
xor
ds
mov
pop
cmp
ret
add
arpl
push
or
imul
popa
pusha
mov
push
xor
push
push
ja
fcompl
mov
dec
push
jno
mov
adc
js
push
loopne
std
jmp
popa
gs
imul
adc
xor
pop
sub
inc
imul
ret
std
fildl
mov
ffreep
pusha
add
cmpsb
sub
sbb
cmp
shlb
add
add
arpl
insb
cmp
addl
cmp
sub
jne
ja
add
fsubrs
add
ret
fadd
inc
fmuls
pushl
std
mov
ss
scas
data16
daa
out
push
adc
pushf
lcall
out
cli
call
sub
sbb
or
mov
adcl
jmp
lahf
and
add
jp
push
xchg
popf
adc
push
add
pop
cmp
hlt
aad
jg
aaa
and
loope
mov
int
leave
cmp
xchg
sti
arpl
nop
scas
push
lods
jmp
ljmp
push
dec
mov
std
mov
adc
xor
mov
incl
inc
and
repnz
test
leave
ss
add
pop
and
or
jmp
mov
loope
add
mov
sub
mov
mov
in
stos
lcall
pop
adc
out
sbb
aas
repnz
xor
xchg
jge
add
popf
outsb
xlat
mov
incl
movl
pop
xor
push
pop
inc
shr
popl
out
faddl
ljmp
lods
adc
jmp
pop
push
ret
cmp
int
out
cltd
push
es
jb
cmp
jl
jge
incl
hlt
lret
jl
movsb
aam
pop
out
clts
nop
test
or
incl
cmp
or
mov
enter
pop
dec
cwtl
or
jl
sti
aaa
sub
cwtl
movsb
jmp
decl
push
dec
inc
jnp
cmp
jne
mov
push
icebp
into
negl
pop
push
dec
shl
mov
pop
push
pop
daa
scas
out
adc
js
cli
jns
jns
out
pushf
iret
imul
sub
xchg
loop
add
lcall
pop
es
orl
in
pop
cwtl
int
inc
aaa
movsb
add
jo
movsb
test
sti
ljmp
cli
push
clc
stc
into
and
add
popa
mov
ss
dec
arpl
daa
hlt
ret
mov
js
cmp
icebp
cmp
jns
lcall
jmp
mov
mov
test
lock
mov
adc
ret
incl
ss
inc
push
pop
negl
rcrl
sbb
popf
pop
mov
xor
mov
ljmp
jae
das
loope
imul
pop
pusha
and
xchg
mov
sbb
iret
mov
call
insl
push
dec
int
inc
fwait
inc
shlb
sbb
ljmp
ljmp
dec
dec
movb
clc
xlat
lds
setp
mov
outsl
outsl
push
sub
adc
mov
and
mov
decl
outsb
pop
pop
mov
adc
int
sub
and
lods
cltd
bound
leave
lcall
lock
add
cmp
rcrb
fstps
adc
shll
jp
jno
enter
ljmp
out
addr16
jo
jg
or
cmp
pop
push
inc
sbb
mov
cmp
mov
dec
or
cmp
mov
pop
xor
xor
negb
xor
ljmp
sahf
or
add
test
aad
loope
mov
xlat
add
push
or
fdivrs
dec
repz
push
jns
or
lods
cmpsb
add
xor
jmp
sbb
popf
pop
in
imul
in
mov
or
and
push
cmp
or
mov
jmp
cmp
sbbb
cmc
cmp
sub
mov
scas
adc
cmp
incl
repnz
aad
dec
outsb
cmp
or
int
fstp
cmp
mov
mov
mov
pop
fcoms
das
or
xor
xor
pop
mov
dec
popa
out
cmp
shrl
sbb
aam
aad
or
sbb
add
jmp
xor
out
or
mov
fcomi
adc
test
mov
cld
cmp
sti
rcll
pop
push
jle
pop
mov
jg
repz
cmp
ljmp
mov
pop
sub
aad
mov
xchg
or
cmp
jge
xchg
fidivrs
mov
push
mov
cmp
into
ljmp
std
aas
jp
std
adcb
ljmp
xchg
jmp
arpl
mov
push
inc
push
jno
and
mov
push
inc
push
adc
jecxz
dec
fdivr
lcall
sub
mov
add
xor
sbb
mov
inc
sti
call
cmpb
orl
xor
nop
push
and
mov
je
std
ficoml
movsb
incl
jo,pn
adc
push
loopne
jne
pop
xor
mov
or
imul
incl
push
mov
sub
push
jae
pushf
mov
pop
adc
or
decl
pop
daa
xor
or
mov
jge
xor
and
je
test
sti
incl
test
pop
adc
push
shrl
add
xchg
mov
jmp
mov
xchg
sub
mov
dec
sbb
arpl
or
aas
pop
mov
sub
and
sbb
or
mov
xor
mov
push
push
subl
ljmp
xor
xchg
jmp
mov
outsl
xor
push
dec
js
cltd
fsubr
decl
lret
mov
mov
stos
loopne
push
xor
cmp
adc
sbbb
rorb
lahf
adc
mov
ja
in
sub
lock
add
fadds
lds
sar
incl
xor
and
inc
or
sub
push
loope
sub
ret
xchg
xchg
jg
ljmp
rolb
aaa
xor
ret
cmp
loope
fdivr
shlb
lcall
mov
mov
dec
fildl
push
add
cmpsl
sub
cmp
jmp
push
das
xchg
inc
int3
add
cmpsb
mov
mov
enter
loop
jns
ds
sub
jo
hlt
and
mov
pop
pop
ret
pop
fldl
pushf
cmpsb
lock
jmp
leave
int3
cli
pop
push
pop
mov
xchg
call
in
adc
jecxz
adc
sti
testb
call
xor
das
sbb
or
push
dec
mov
and
jo
or
sub
push
pop
js
and
adc
ficoml
or
lret
sub
das
pop
ja
inc
rorl
mov
pop
inc
and
mov
adcl
imul
mov
outsl
insl
mov
imul
jge
sub
pop
inc
or
pusha
imul
movsl
cmp
fsts
andl
pop
or
mov
pusha
mov
lret
xor
pop
jg
call
imul
das
cmp
nop
jbe
ja
pop
inc
ret
rcll
aaa
sub
mov
pop
movsb
mov
sbb
dec
repnz
inc
adc
sub
xor
or
mov
mov
xchg
and
cltd
inc
sub
jne
and
nop
arpl
jg
xor
jl
ret
in
mov
nop
pop
lock
cmpsl
add
sbb
and
lret
mov
mov
sti
rclb
sub
mov
sbb
outsl
dec
or
xchg
daa
or
insl
adc
cmpsb
and
pop
sub
push
adc
push
xlat
mov
cmp
push
mov
fisttpll
fidivrs
mov
xor
or
pusha
sarl
test
xchg
das
push
push
jne
mov
sub
imul
ficoms
push
test
jnp
jmp
insb
pop
inc
fimull
push
mov
rcrl
notl
pcmpgtw
mov
pop
pop
shl
movsl
lods
sub
in
jae
mov
pop
pop
ret
std
pop
icebp
jecxz
or
rolb
xchg
add
ljmp
sub
push
pop
ret
push
mov
repz
incl
push
push
push
ds
pushf
push
fcoml
sbb
test
pop
pop
pop
call
pop
idivb
push
inc
add
or
or
fcoms
jmp
lcall
outsl
stc
ss
aas
push
mov
xor
xchg
dec
jb
je
mov
lods
inc
mov
jle
xor
pop
bound
sub
scas
andb
add
dec
test
sub
ljmp
cwtl
cwtl
dec
enter
pop
push
mov
jl
mov
repz
push
mov
pop
pop
xchg
adc
mov
mov
push
add
push
sbb
decl
jnp
aad
out
push
adc
sti
xor
push
stc
ficoml
ds
ljmp
outsl
jbe
movsl
jp
sub
stc
add
aas
cmc
addr16
les
test
call
mov
cmp
dec
xchg
scas
aas
xor
sbb
movsb
pusha
sub
sub
xor
insl
xchg
jmp
int3
repz
jg
outsb
add
and
sub
mov
mov
or
inc
inc
sub
mov
out
mov
call
je
mov
push
out
push
sahf
imul
adc
rcll
xorb
pushl
pop
sti
and
inc
and
sub
cmp
imull
lret
or
mov
lcall
add
push
push
pop
out
jmp
dec
or
decl
in
cmp
mov
ds
or
xor
jb
mov
jp
sti
jae
pop
dec
xchg
inc
xor
jmp
mov
jg
dec
xchg
mov
mov
jg
push
stc
out
adc
mov
rcl
mov
xchg
add
push
sub
mov
jmp
inc
test
mov
insl
ja
mov
jl
mov
xchg
dec
mov
lcall
pusha
in
sub
push
mov
cmp
scas
fdiv
or
cmp
xchg
xchg
sti
test
push
je
pop
js
push
push
cwtl
in
mov
cmpsl
in
xchg
mov
xchg
inc
cmp
mov
mov
pusha
ljmp
xchg
loope
addr16
dec
adc
mov
mov
and
xchg
repz
ja
call
minps
adc
jmp
jbe
lcall
stos
outsl
and
push
aas
sub
pop
stos
das
push
pushl
push
inc
negb
push
dec
popf
lods
js
mov
imul
test
ret
lahf
push
and
xlat
sbb
pop
jecxz
pop
stos
call
das
xchg
sbb
mov
xor
sub
jp
inc
jns
pop
push
out
clc
ss
cmp
lcall
pushf
sub
mov
xchg
xchg
pushl
leave
push
cmp
scas
out
lods
aas
ja
mov
rcll
mov
mov
or
sub
repz
push
mov
fidivs
inc
clc
or
loope
xor
jp
fbld
pop
mov
in
pop
push
jb
mov
iret
add
out
push
int
lcall
inc
mov
cmp
push
movsl
mov
nop
imul
test
mov
daa
fisttpll
hlt
cmp
stc
cmp
aas
shll
mov
cltd
xlat
loopne
mov
mov
scas
call
std
lcall
bound
jp
scas
and
loope
repnz
dec
orb
data16
clc
pushl
mov
sub
mov
cmpsl
orl
ljmp
push
call
inc
imul
and
mov
repnz
insl
into
push
outsb
or
out
lcall
stos
push
stos
and
hlt
sbb
dec
dec
cmp
rorl
and
iret
subl
jmp
into
fistpll
out
push
push
testl
loopne
fiaddl
aas
mov
pushf
sub
loopne
jmp
push
sub
jbe
test
into
jp
or
loopne
add
jg
mov
decl
out
das
daa
in
mov
repz
div
and
ret
adc
and
subl
jnp
lcall
jnp
dec
icebp
fmuls
shl
mov
outsb
jg
or
sub
loope
stos
lcall
jecxz
inc
inc
shll
dec
mov
jo
popf
dec
push
mov
out
push
inc
mov
xchg
mov
dec
xor
pop
or
mov
shll
lods
mov
je
jle
fistpl
or
jl
call
cmp
icebp
add
jle
push
pop
sbb
or
mov
push
push
icebp
lahf
adc
and
loope
jmp
inc
cwtl
and
sbb
rolb
out
sbbb
dec
or
inc
inc
test
or
mov
push
and
push
adcl
adc
add
cmp
push
subl
mov
test
enter
mov
test
push
fsubs
add
fbstp
mov
sbb
test
lcall
xchg
push
ficomps
mov
mov
xor
or
sbb
jmp
push
xor
jmp
push
and
xchg
push
in
movsl
cmp
mov
or
dec
jp
sbb
popf
iret
mov
cmp
in
jl
call
jb
jae
orb
pop
sub
shl
or
repz
inc
cmp
xchg
xchg
loopne
incl
in
pop
call
push
cmp
int3
cmc
jnp
push
out
es
xchg
cwtl
imul
es
lds
sbb
adc
lods
sbb
inc
and
xchg
jne
aaa
cli
arpl
push
in
incl
and
ljmp
dec
int3
mov
push
data16
mov
lcall
xchg
flds
mov
popf
in
inc
js
and
divb
fcmovnb
pop
jl
ret
fimull
testb
repz
inc
pop
out
jb
nop
pop
pop
test
pop
mov
call
push
push
push
jns
aas
cs
mov
in
lock
pusha
inc
lret
dec
stc
mov
jmp
sbb
mov
push
nop
test
loop
lods
lods
stos
lret
pop
mov
inc
pop
outsl
mov
call
mov
push
pop
push
out
in
add
js
cmp
cmp
jnp
xchg
xchg
xchg
dec
inc
ljmp
leave
jmp
fiaddl
hlt
push
dec
adc
dec
stos
push
and
notb
cmp
push
pop
fs
fadd
pop
icebp
in
add
lahf
icebp
cltd
js
loopne
xlat
movsl
or
lret
mov
mov
fstpl
sub
lret
lods
cmp
call
xlat
sbbb
sti
push
sub
xor
inc
into
lret
pushl
sub
das
push
mov
inc
inc
sbb
cmpsl
mov
dec
aaa
pusha
dec
pop
mov
cld
dec
mov
das
mov
imul
cmp
popa
enter
popf
mov
ljmp
sbb
scas
and
popa
lods
bound
pop
jmp
xor
call
xchg
mov
jecxz
popf
addr16
mov
mov
push
xchg
sub
addr16
pop
xor
or
jmp
ret
jmp
test
into
aad
dec
jnp
xchg
xchg
xor
aad
inc
add
les
and
pop
rolb
xchg
push
adc
test
push
push
jmp
or
sub
adc
and
jmp
or
jmp
mov
sti
cld
addl
pushl
mov
jo
insb
test
cmpsb
jnp
subb
incl
lock
pop
inc
mov
stc
test
push
fs
inc
jg
or
andb
xlat
cmc
jbe
pop
insb
or
add
lock
pop
push
cmp
outsl
jmp
push
rcll
mov
cs
stos
in
in
in
mov
mov
rcrb
orl
jecxz
cli
out
out
idiv
mov
aam
enter
add
sti
div
mov
in
loope
call
outsl
iret
inc
out
aam
hlt
rorl
rorb
ljmp
in
idiv
in
cmc
loope
xchg
cli
div
sub
pextrw
jno
push
add
mov
xchg
lahf
outsl
decl
inc
adc
lock
out
add
dec
pop
call
call
jg
xor
mov
std
push
inc
hlt
iret
addb
into
call
out
in
cmp
out
xlat
loope
jg
jg
fistps
push
nop
push
or
cmpsl
pushf
add
sti
loopne
adc
out
incl
call
xor
fdivs
fcmovu
sbbl
scas
ds
pop
out
sub
xchg
or
adcb
loop
or
in
mov
adc
loop
and
out
and
hlt
and
rcl
mov
mov
adc
inc
inc
pop
inc
orl
andb
in
loopne
incl
jecxz
out
out
sub
jmp
sub
in
hlt
or
jbe
out
sarl
in
les
dec
mov
or
push
add
ret
cmpb
pop
in
aas
stc
cmpsb
jg
out
jnp
stc
push
call
stc
insb
clc
lcall
call
in
std
sarb
inc
inc
mov
nop
cs
cmc
pop
lock
imul
inc
push
dec
js
negb
into
jg
lahf
or
lods
inc
adc
das
push
rorl
jecxz
dec
in
cld
in
dec
std
loopne
jne
rorl
lock
jg
insb
pop
adc
xchg
sbbl
xorb
pop
vpunpckhbw
jne
push
inc
xchg
push
lock
rcr
sahf
jg
sbb
ja
adc
sti
addr16
movsbl
mov
ja
out
inc
cli
in
mov
sbb
lock
pusha
ror
int3
dec
or
pop
sbb
pop
or
je
pop
xchg
mov
in
testl
mov
int
inc
add
xchg
or
std
xchg
cmp
add
xchg
pop
outsb
lcall
lcall
popf
dec
xorl
dec
out
stc
in
mov
ja
mov
pop
pop
stos
shll
push
sub
push
mov
pushl
in
mov
ja
xchg
push
ds
push
dec
data16
jae
sub
mov
pushl
adc
mov
add
gs
inc
das
sahf
mov
jnp
dec
cmp
out
pushl
imul
sti
sub
sbbb
xor
pop
add
add
int
nop
mov
add
xlat
imul
or
add
insl
jbe
cmp
mov
push
xlat
pop
daa
clc
jg
insl
xchg
repnz
incl
ds
fisttpl
mov
rolb
jl
leave
xchg
les
sti
mov
cmp
into
sbb
lds
dec
xlat
jo
add
flds
dec
pushf
or
jg
add
fiadds
pop
pop
cmc
push
sbb
mov
cmp
mov
sbb
xor
fdiv
incl
aam
fiaddl
xchg
mov
xlat
mov
hlt
scas
mov
repz
jp
out
mov
popa
and
cmp
in
out
sti
nop
and
out
nop
daa
lds
push
pop
outsb
enter
aad
mov
sarl
into
push
sbb
scas
bndstx
es
lock
jmp
pop
int3
js
jnp
sti
xchg
popf
xor
je
pmaddwd
add
mov
lcall
xchg
or
imul
inc
out
xchg
outsl
test
out
addl
filds
shll
pop
xor
push
xchg
mov
mov
icebp
addl
in
incl
xchg
rolb
ss
or
mov
xor
cmp
fwait
or
mov
xchg
or
mov
js
ficompl
jg
sbb
mov
setbe
adcb
std
aaa
in
sub
test
push
mov
push
lock
fsts
dec
leave
inc
stc
cltd
add
xchg
bswap
pusha
xchg
jne
and
jo
jle
xchg
inc
jg
addb
push
imul
js
push
xorb
inc
andb
hlt
outsb
adc
lcall
and
ljmp
pop
push
daa
sahf
jnp
ljmp
inc
pop
push
inc
pop
jns
add
sbb
mov
inc
or
jbe
push
sbb
adc
rcrl
push
clc
in
stos
movl
outsl
ljmp
inc
xchg
insb
sbb
add
add
lcall
mov
shl
cmpl
jbe
inc
test
pop
inc
push
jns
cli
cmp
pop
ljmp
rclb
mov
lods
std
clc
jg
xor
shrl
or
into
mov
mov
lods
insl
sbb
mov
xorl
imul
cld
lret
sar
pop
sarb
inc
push
inc
loopne
into
push
aad
int
movsb
mov
fnstsw
or
shll
fidivs
dec
decl
pop
cld
inc
and
inc
lds
jb
and
xor
mov
test
ds
xchg
inc
pop
loopne
inc
inc
xchg
out
xchg
push
jg
popf
jo
inc
loopne
rcrb
mov
dec
jecxz
xchg
cltd
ja
pop
out
jp
outsb
decl
push
adc
xor
dec
sbb
rorb
xchg
int
xchg
jne
fdivl
cltd
mov
jmp
pusha
call
xchg
xor
adc
mov
inc
dec
popa
aaa
jae
cmp
lcall
ja
jne
dec
outsb
insb
dec
xor
insb
push
push
xor
ss
aaa
dec
insl
mov
and
jo
dec
inc
gs
pop
jno
push
fs
inc
push
push
jg
jns
push
dec
jno
pop
push
xor
fs
jns
sahf
dec
xor
jns
je
cmpsb
jmp
mov
cmp
pop
dec
xor
inc
inc
xor
push
arpl
inc
js
insl
insb
dec
arpl
push
dec
jns
push
push
arpl
add
jp
bound
push
je
push
jbe
inc
inc
dec
dec
cld
mov
lcall
xor
jo
cmp
jb
imul
push
outsb
jo
pusha
xchg
inc
clc
inc
aaa
pop
fs
inc
imul
incl
dec
insb
pop
dec
bound
fs
dec
dec
jb
outsb
mov
jl
je
inc
dec
jp
dec
xor
fs
je
push
push
inc
insb
xor
mov
jns
pop
popa
inc
je
fs
ficompl
push
push
dec
aaa
je
push
imul
mov
inc
dec
ja
inc
dec
xor
es
dec
ss
pop
push
push
push
ja
outsb
push
inc
push
lock
pushl
push
push
push
ja
push
xor
inc
jns
dec
js
pop
imul
rorl
imul
dec
push
bound
jb
lock
outsl
jae
insb
dec
arpl
movb
xor
popa
jp
jne
insl
xor
outsb
inc
push
jno
insl
xor
inc
arpl
push
icebp
imul
das
loop
popa
jo
add
inc
push
push
je
je
or
outsb
addr16
dec
add
inc
add
sub
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
push
add
inc
daa
sahf
xchg
inc
repnz
adc
cmp
jae
xchg
negl
mov
push
sub
jns
out
dec
pop
push
mov
xchg
mov
sahf
cmpsl
push
sahf
loop
rolb
adc
jns
out
xor
pop
out
sahf
out
xchg
jns
mov
rcr
out
out
out
cld
sahf
or
push
and
sahf
out
sahf
ss
dec
bound
jns
out
mov
jl
out
ljmp
cmp
and
inc
push
pusha
je
iret
repz
xchg
sahf
mov
stc
cmp
repz
out
push
ret
out
sahf
cmpsl
sbb
cmp
sahf
out
sahf
pop
data16
xchg
lcall
sahf
out
out
cli
push
les
iret
repz
sbb
cmp
pop
fs
repz
js
nop
movsb
repz
repz
out
sahf
out
lds
and
sahf
out
sahf
inc
dec
pusha
push
mov
out
sahf
test
mov
out
ljmp
cmp
cmp
fs
iret
repz
xchg
mov
iret
repz
lock
cmpsb
out
sahf
ja
sub
ds
sahf
out
sahf
pop
push
xchg
cmpsb
mov
sahf
out
mov
repz
out
or
and
iret
repz
dec
pusha
push
adcb
lods
mov
int3
stc
cmp
repz
loop
cli
push
leave
out
sahf
cmpsl
adc
xor
sahf
out
sahf
dec
pop
jb
nop
lcall
into
fmul
rorl
in
pusha
push
adc
xor
iret
repz
pop
data16
repz
pause
movsb
scas
mov
iret
rcr
out
cld
sahf
out
lods
push
sbb
push
xor
jns
out
outsb
adcb
out
lret
or
iret
repz
and
pop
push
cmp
repz
test
fsubr
jns
cmpsl
stc
or
sbb
cmp
jns
out
pop
jbe
lcall
rcr
hlt
dec
cmp
cmp
mov
push
cmp
pusha
repz
repz
sahf
test
cmpsl
stc
cmp
aam
lock
adc
out
sahf
cmp
data16
sahf
out
mov
sahf
out
out
or
and
repz
ds
push
sahf
test
out
repz
aam
rcrb
ror
repz
push
cs
dec
push
outsb
cmp
repz
xchg
pushf
cmpsb
mov
cmp
repz
clc
push
adc
cmp
repz
inc
dec
pop
iret
repz
outsb
mov
iret
repz
hlt
sbb
and
out
cmp
pusha
jp
out
sahf
out
cwtl
mov
jl
call
cmp
iret
repz
pop
push
iret
repz
mov
imul
aad
sub
dec
pop
js
movsb
jns
out
scas
rcr
repz
repz
and
push
jb
mov
repz
clc
adc
sbb
jns
out
push
pop
fs
out
sahf
out
mov
repz
hlt
push
fcomps
and
cmp
repz
push
mov
stos
mov
fdivrs
fdivrs
cmp
fcomp
push
sub
repz
repz
bound
out
cmp
mov
ficompl
cmp
jbe
sahf
out
nop
mov
or
dec
add
adc
and
call
or
pop
ja
repnz
lcall
mov
mov
insl
mov
ja
and
jmp
lods
add
or
push
bsf
lods
sahf
ror
pop
daa
rcrb
add
mov
pop
mov
imul
adc
fistps
out
jmp
ret
js
nop
int
div
imul
push
sti
lock
jle
loop
and
out
inc
movsb
cli
adc
or
mov
mov
lcall
mov
aas
adc
test
leave
dec
inc
fstpl
mov
cmp
inc
lods
add
push
cltd
mov
dec
shl
movsl
iret
jmp
pop
sbbb
icebp
push
xor
lcall
cmp
push
not
or
mov
add
and
mov
notb
push
pushl
ret
mov
adc
mov
pop
ja
in
setp
hlt
mov
cs
incl
xchg
xor
cltd
push
test
fs
fcomps
add
into
fadd
addr16
out
rol
push
pop
incl
out
repz
add
cli
clc
std
xor
or
jp
pop
sbb
xchg
xchg
incl
xchg
mov
arpl
sbb
cltd
test
cmc
aam
xor
hlt
add
lcall
cmc
push
xor
dec
aam
scas
mov
leave
std
or
out
dec
pushf
test
decl
jmp
dec
fimull
adc
loop
fiadds
mov
sar
mov
incl
jns
jp
or
mov
jp
or
imul
jne
push
xchg
call
pop
jne
sub
jns
adc
xchg
push
aad
mov
pop
sbb
sbb
mov
mov
out
xchg
loope
popf
adc
mov
subl
xchg
pushl
repz
fidivl
fwait
mov
test
mov
pop
pop
pop
imul
add
outsl
or
mov
and
sub
repz
jb
jg
xchg
sahf
ljmp
push
jmp
jge
je
xor
jne
inc
outsb
mov
fucomip
add
adc
add
mov
decl
or
enter
cmpsl
addr16
cmp
pop
enter
ljmp
ljmp
and
sub
std
mov
lret
push
loope
mov
leave
cwtl
mov
call
push
popa
mov
lods
mov
insl
pusha
pushl
es
pop
jg
sbb
es
decl
sub
mov
daa
jnp
repz
int
lahf
mov
jecxz
cmpl
sti
adc
fnop
sbb
xchg
jo
xor
scas
arpl
mov
out
pushl
call
adc
xchg
mov
sbb
push
xchg
sti
add
sbb
ret
and
stos
lret
std
pop
cld
pushl
inc
sbbb
jge
mov
jbe
cld
push
lret
lahf
push
outsl
ret
filds
mov
xchg
cld
cmpsb
fistpll
dec
stos
or
call
mov
jnp
fistpl
and
sub
mov
inc
pushf
xchg
cld
mov
sti
frstor
leave
popa
lret
in
rclb
shll
loope
cmpsb
shll
repnz
and
sub
std
and
pop
xor
cli
shll
mov
loope
repz
sbb
test
jp
add
in
adc
cmc
add
inc
ds
scas
call
loopne
dec
das
mov
cmp
in
fisttps
icebp
shl
jo
jno
jb
mov
mul
pushl
das
sub
push
andl
xchg
push
mov
fdivrl
aam
scas
cld
ja
imul
mov
lcall
icebp
dec
iret
stc
lret
mov
pop
pushl
pop
inc
insl
pop
inc
add
bound
push
inc
test
push
mov
sbb
push
fcoms
aad
jl
adc
insb
mov
pop
repz
mov
fsubrl
subw
stc
loope
inc
mov
notb
sar
in
add
insb
mov
and
dec
pop
mov
incb
mov
cmp
mov
int3
xchg
or
mov
lcall
gs
mov
xchg
lret
hlt
pop
and
jp
adc
jb
push
decl
pop
dec
stc
and
jnp
xchg
cmp
cmpsl
jmp
or
jb
enter
jb
mov
test
ret
fldt
pop
je
les
dec
inc
mov
stos
ficoml
scas
ds
mov
jge
in
fldenv
adc
mov
xchg
add
sbb
jns
out
mov
imul
sarb
adc
cwtl
out
jmp
dec
mov
enter
test
nop
rcll
xchg
mov
loopne
and
fcmovb
push
lcall
pop
cmpsb
xchg
inc
ja
movsb
pop
repnz
lods
sub
xchg
sahf
out
jbe
mov
inc
clc
decl
jne
sub
test
push
jnp
mov
test
inc
cmp
xor
incl
mov
fldl
inc
lahf
cmp
leave
sbb
icebp
fistps
xbegin
out
sub
dec
mov
inc
dec
rclb
cwtl
xor
cli
jmp
xchg
jge
pop
pop
or
sbb
push
dec
shll
sbb
jmp
and
sbb
icebp
dec
push
mov
call
loope
outsl
cmp
fiaddl
int3
inc
incl
bound
in
sbbl
shrl
std
and
clc
call
cmpsb
sbb
clc
xor
repz
filds
pusha
jne
adc
ret
xchg
jmp
call
jmp
adc
add
lret
fcoms
insb
rcl
lods
icebp
in
jmp
mov
pop
in
jmp
xchg
popa
xchg
cltd
pop
mov
cmp
jmp
push
push
xor
sbb
and
and
scas
aam
mov
hlt
imul
fidivs
push
push
pop
ret
jp
adc
frstor
arpl
mov
push
jmp
inc
pop
stos
or
pop
lret
push
stos
pop
xchg
negb
fs
or
adc
scas
out
or
outsl
cltd
pop
std
pushl
out
rclb
leave
xchg
int
rcll
fstl
or
fdivr
jmp
mov
jo
adc
aaa
cmpsb
subl
decl
push
lret
ret
test
in
cmp
mov
cwtl
xchg
mov
ljmp
inc
and
pop
or
in
mov
je
int
das
mov
add
cli
xor
mov
lcall
imulb
mov
mov
mov
iret
cmp
lret
stc
add
add
scas
je
lret
into
ljmp
or
stc
ds
jmp
sahf
lods
cwtl
lods
insb
xor
dec
jnp
ficoms
or
xchg
and
fs
sub
or
mov
add
incl
or
hlt
adc
insb
nop
in
fcmovbe
cmp
lret
ss
out
mov
pop
aaa
pusha
adc
cmp
add
loope
popa
dec
inc
sub
stos
push
pop
adc
stos
decl
inc
cmp
fldcw
and
rorl
push
push
pop
sub
es
fsubrp
jnp
scas
decl
mov
sub
cmpsb
test
inc
mov
mov
pop
loopne
fyl2x
mov
add
out
in
jbe
aad
out
mov
mov
pushl
cmp
rclb
daa
push
or
loopne
sub
push
add
aam
adc
pop
fstpl
lcall
jg
pop
or
data16
xor
inc
dec
pop
xchg
test
repz
adc
imul
test
and
cld
adc
test
addr16
push
xchg
mov
rcrl
cmp
call
or
fcompl
inc
adc
loopne
jle
and
insb
sub
dec
add
cmpsb
incl
inc
mov
gs
pop
and
mov
push
xchg
xchg
lret
cmp
lcall
test
fcmove
fistpll
insb
in
popf
and
data16
cmp
sub
xchg
clc
jae
out
mov
pop
adc
sub
jno
dec
dec
jno
sub
decl
push
mov
jmp
jle
mov
inc
jno
sub
cli
mov
dec
call
test
cli
or
call
popf
add
ljmp
test
mov
sbb
pop
ljmp
jle
mov
adc
xchg
xchg
mov
inc
and
adc
test
or
movsb
fs
sbb
lods
fsubrp
mov
cmp
cli
mov
lock
bound
dec
leave
jns
mov
popa
shll
cmpsb
ds
add
test
incl
stos
inc
fstpl
aad
int
or
lcall
push
mov
sub
lcall
xor
loop
movaps
sbb
inc
imull
cmp
add
neg
fbld
sub
ljmp
jno
rcl
pop
mov
jp
mov
addr16
push
sbbl
je
out
out
pushf
fsubrs
jp
cmpsb
decl
shrb
in
enter
das
fimull
xchg
into
cli
mov
push
sub
das
mov
push
dec
mov
pop
movsl
rorb
sub
fbld
mov
xor
nop
mov
sarl
mov
call
js
call
mov
xchg
pop
testl
xchg
pop
loope
stos
xchg
insl
data16
pop
pop
incl
sub
cltd
loop
and
fbstp
ss
mov
add
mov
dec
incl
cltd
xchg
subb
int
mov
mov
xchg
adc
push
dec
in
mov
out
xchg
insb
decl
mov
scas
and
lahf
jmp
add
rolb
xchg
jecxz
imul
ja
sbb
xlat
or
lret
inc
js
push
sahf
push
adc
in
dec
incl
call
and
mov
cmp
das
inc
inc
pop
mov
mov
xor
decl
inc
cld
nopl
adc
xchg
mov
push
incb
cld
lcall
inc
pop
insb
mov
out
xlat
das
pop
or
xchg
or
mov
lret
cmp
adc
cmpsb
pop
incl
or
pusha
fidivrl
sbb
jnp
and
dec
movsb
adc
je
daa
and
cmp
ss
and
xchg
inc
lcall
cmpsb
sbb
jmp
repnz
lods
pop
cmp
push
daa
sub
sub
sbb
xchg
push
push
push
dec
xor
test
inc
mov
xor
mov
inc
sbb
jns
jae
pushf
enter
cld
test
pop
jno
aaa
jbe
sbb
cmp
das
sbb
ja
ljmp
push
or
popa
and
lock
xorb
cld
roll
sbb
sub
incl
adc
and
push
mov
lds
fimull
and
mov
repnz
ja
sub
incl
mov
sbb
rorl
sbb
sub
jmp
pushl
xchg
mov
cs
jl
das
push
mov
sbbb
jecxz
not
leave
and
incl
outsl
pop
stos
push
daa
xchg
pop
cmp
lret
in
ret
mov
cmp
seta
dec
iret
scas
mov
lcall
jbe
and
push
sarb
push
add
lea
loopne
push
pusha
and
jb
xchg
cmc
adc
push
mov
aas
jmp
aad
jg
inc
ret
movsl
sbb
xor
mov
push
sbb
popa
fcomip
dec
mov
push
cmp
stos
loope
repz
mov
fcompl
xor
test
js
lea
mov
push
sbb
insl
dec
mov
arpl
fiadds
mov
decl
push
cmp
fs
xchg
mov
daa
nop
loope
add
lret
push
aas
out
cmp
push
cmp
adc
outsl
movsb
int
inc
jae
inc
es
call
fmull
or
mov
xor
jmp
and
arpl
and
in
dec
pushw
std
pop
cmp
call
adc
ficomps
mov
push
push
pusha
dec
dec
neg
sub
pop
rclb
lods
cld
mov
push
ss
shl
test
data16
push
mov
pop
lahf
icebp
mov
push
test
ss
nop
xor
mov
mov
lcall
nop
push
mov
xchg
mov
jg
lock
add
icebp
test
adc
fbld
dec
and
adc
in
and
jno
lret
mov
mov
scas
in
das
ret
mov
jmp
mov
stc
sahf
xchg
push
rclb
mov
jmp
mov
and
popl
loop
pushl
daa
mov
pushf
and
iret
jo
xchg
adc
inc
fisubl
dec
lcall
arpl
fdivs
pusha
lahf
jecxz
call
cmp
push
sti
arpl
cwtl
shrl
sbb
pop
cli
mov
cwtl
adc
add
icebp
dec
fidivl
dec
ret
xchg
ljmp
aas
dec
push
std
mov
test
mov
lahf
push
pop
sbb
ss
in
sar
lcall
pop
push
mov
mov
jno
adc
movsl
dec
sbbb
sub
sub
adc
push
pushf
pop
mov
cmp
cmp
into
fwait
movsl
inc
add
pop
data16
jg
sbb
jp
xchg
addr16
xor
les
jne
push
adc
xor
push
jmp
cmpsb
insl
test
je
arpl
in
fiadds
ljmp
pop
ljmp
call
ds
leave
std
jo
sti
pushf
movsb
sbb
push
test
sub
fimull
das
cli
mov
clc
test
inc
outsb
fsubr
call
mov
std
std
aas
in
adc
out
shlb
sub
mov
arpl
cmp
nop
mov
or
lcall
sub
sbb
adc
int3
pop
andl
inc
jo
jp
lods
inc
dec
and
mov
push
jmp
pop
push
jae
pop
std
ret
adc
xor
ljmp
jns
test
push
jae
pop
scas
jge
into
sbb
insb
sub
sbb
jmp
xor
addr16
mov
xor
mov
sbb
ret
das
clc
sub
std
push
adc
and
pop
rorl
lcall
repnz
cld
and
daa
or
sti
push
mov
stos
iret
mov
dec
sbb
pushl
or
mov
add
clc
push
pop
cmpl
pushl
std
push
scas
inc
shlb
std
xchg
dec
rcl
or
jmp
mov
decl
arpl
dec
cmpsb
leave
pop
dec
mov
mov
repnz
frstor
imul
jns
dec
jmp
fistpll
in
fisubs
inc
mov
ja
lds
popf
push
mov
data16
fcomip
incl
sub
or
mov
push
ret
and
dec
jp
xchg
jno
inc
inc
push
mov
add
sub
mov
repnz
xchg
mov
or
xchg
rcrb
shl
stc
jl
pusha
fs
jno
hlt
ljmp
repz
pop
jl
or
add
xchg
ja
jge
leave
fstpt
pop
mov
dec
sub
push
adc
inc
sahf
lds
cmpsl
xlat
outsb
add
push
mov
ret
jae
push
adc
ret
outsb
push
xchg
sahf
push
lcall
popa
add
sbb
add
dec
adc
stos
xchg
aad
cwtl
cmpsb
icebp
pushl
xor
cwtl
shl
ljmp
xor
in
sbb
fildl
pushl
stos
cmp
adc
out
shrl
or
lahf
mov
and
incl
movsb
pop
dec
nop
fdiv
xchg
out
arpl
pop
shlb
loope
and
dec
cltd
dec
cmpsl
gs
sub
dec
add
imul
shr
mov
decl
jae
ficoms
lods
xchg
lret
shrl
push
fldcw
hlt
jb
in
dec
push
mov
decl
mov
clc
inc
lods
and
aad
jl
or
pop
loopne
decl
fwait
add
cmp
jg
sub
jns
jge
call
mov
sub
pop
adc
jb
sub
outsl
subl
add
push
xchg
clc
dec
ret
call
mov
mov
xchg
test
loop
pop
mov
inc
stos
dec
lcall
jp
mov
decl
into
sti
clc
inc
cmp
push
in
mov
sbb
mov
call
aas
inc
cmpsl
adc
cmp
push
aaa
inc
pop
mulb
loope
lock
adc
enter
adc
lcall
push
gs
test
mov
jmp
cli
pop
incb
adc
out
push
push
sbb
push
sbb
add
push
adc
sbb
testb
lea
insl
mov
fcomps
enter
stc
jne
and
call
sti
inc
cs
inc
pop
jo
in
mov
std
mov
xlat
sub
fnstsw
jg
jnp
inc
icebp
mov
movsb
mov
adc
jnp
add
loop
and
mov
push
inc
mov
mov
mov
mov
jmp
ss
push
pop
das
add
ljmp
sub
inc
data16
push
mov
imul
in
addr16
adc
incl
std
les
cmp
mov
ds
and
xchg
jg
imul
mov
inc
mov
xor
je
or
pop
rorl
lcall
jge
incb
jnp
jmp
inc
std
rcr
in
lock
jae
cld
inc
add
call
es
pusha
fstpt
add
xor
icebp
aaa
add
inc
push
je
sbb
incl
fs
testb
or
xor
lcall
push
cmp
jp
jl
add
cwtl
sub
pop
movsl
push
xor
lret
das
fsts
mov
stos
lcall
jg
pop
mov
sub
das
call
xlat
push
fisubl
add
clc
mov
cmc
push
and
mov
popa
inc
call
enter
cmp
sahf
jle
adc
rcrb
adc
andl
xchg
mov
leave
add
add
jp
popa
sar
daa
add
mov
nop
lcall
mov
pop
jmp
inc
sbb
jecxz
mov
lea
mov
xchg
sti
pop
dec
adc
mov
jmp
mov
cmc
sbb
rolb
inc
fwait
mov
shrl
xchg
dec
stos
jae
mov
incl
push
arpl
pop
in
xor
jecxz
ds
out
sahf
loopne
call
stos
or
jg
xchg
push
sub
push
sbb
movsb
adc
jg
stos
sti
je
or
test
incl
push
add
fdivl
mov
adc
int
or
pushl
out
lock
push
icebp
push
lods
out
out
in
push
or
inc
cmp
inc
stc
pop
xchg
jg
adc
call
mov
insl
mov
data16
ljmp
insl
sub
sub
pop
lret
or
cmp
or
xor
jg
jne
add
mov
imul
rcrl
and
push
imul
pop
pusha
clc
out
mov
pop
sub
mov
pop
pop
pop
ss
pusha
ljmp
xchg
call
in
push
dec
stos
and
ljmp
sub
pushl
dec
mov
adc
mov
push
repnz
cmpb
add
cmp
or
clc
inc
mov
loop
sbb
adc
jno
sub
dec
mov
or
shlb
or
imul
and
dec
jo
call
jnp
nop
cs
pop
push
cmp
fnstcw
jns
push
movsb
insb
repnz
cli
sub
fdivp
cli
inc
jge
and
stc
adc
outsl
add
mov
std
xchg
lods
pusha
inc
adc
arpl
ret
pop
xchg
out
pop
lds
jnp
popa
sbb
cli
jae
leave
sahf
ret
jnp
jae
jge
adc
sti
cmpsb
daa
test
call
scas
and
ljmp
push
pushf
jmp
fcomip
call
mov
popa
mov
sbb
xchg
jp
lret
test
aas
loopne
jge
lahf
xchg
test
mov
inc
mov
stos
gs
js
insb
ss
dec
add
mov
call
cmc
jecxz
cmpsl
xchg
or
sbb
lret
mov
lea
or
pop
insl
xchg
sub
decb
and
popf
pop
in
pop
imul
out
xchg
inc
pop
cwtl
dec
cmp
sbb
inc
add
sbb
pop
or
xchg
std
inc
sub
cmpsl
jp
and
sbb
jg
loope
popa
cmp
adc
adc
jl
sahf
or
daa
cmpsl
out
and
add
jmp
sbb
adc
lret
mov
mov
pop
xor
dec
shr
push
mov
dec
stc
repz
into
stc
or
shrb
sarl
jg
add
mov
cmp
or
clc
ret
inc
pop
sbb
jo
mov
xor
cwtl
rol
sub
lcall
mov
icebp
sti
sub
mov
push
cs
repz
fs
jg
fisttps
xor
int3
imul
int
pop
cmp
sub
pushl
cmc
inc
out
jns
dec
fildll
pop
lock
enter
xchg
addr16
cltd
into
cmp
decl
lock
out
xor
sub
loope
scas
pop
jnp
in
movsb
jmp
pushf
add
dec
mov
movsl
iret
movsb
cmp
iret
inc
jecxz
rorl
cmpsb
pop
bound
xor
incl
jge
in
clc
push
mov
ja
sub
daa
pop
dec
push
and
loopne
push
cmp
incl
outsb
mov
jg
repz
push
dec
mov
popf
add
fwait
outsl
mov
jmp
xor
xor
add
or
mov
pop
jg
fistpl
fidivrs
jp
imul
subl
fdivrp
aam
mov
gs
xor
jo
int3
clc
fbstp
push
frstor
mov
jmp
js
and
xchg
ja
jl
imul
lahf
pushf
jmp
and
dec
call
andb
fmul
jg
cmpsb
or
jmp
out
cld
ljmp
rclb
pop
in
lret
xor
mov
dec
cmp
push
clc
mov
loope
js
aaa
mov
loope
xchg
mov
pusha
cmp
dec
ljmp
dec
pushf
loopne
pop
fnstcw
xchg
pop
push
push
fmuls
mov
jae
cmp
sbb
dec
adc
testl
jns
mov
jmp
bound
and
pop
sahf
add
decl
sbb
mov
sub
mov
xor
dec
mov
in
nop
add
sahf
sbb
inc
mov
jns
es
call
test
add
xchg
pop
decl
jns
push
rol
std
and
and
xor
outsb
js
jp
test
mov
cmp
adc
or
mov
repz
cmp
push
rclb
mov
cmp
je
ljmp
hlt
stos
add
xchg
xchg
fisubs
ret
adc
pop
lea
xchg
add
xorl
xchg
jmp
movsb
xor
enter
mov
and
sbb
fstl
stos
pushf
out
mov
imul
ds
nop
push
pcmpgtd
xchg
cmc
mov
cmp
jl
push
in
pop
pop
scas
scas
test
or
xlat
cmovae
mov
divb
jmp
jl
xor
ljmp
jmp
pushl
inc
call
outsl
mov
imul
sub
mov
jle
inc
and
sbb
inc
mov
jb
pop
loopne
lcall
add
out
stc
sbb
mov
lret
mov
mov
ficoms
sbb
frstor
lcall
inc
and
sbb
lret
fldenv
xchg
cs
loope
push
jae
incl
into
dec
lahf
xor
sub
imul
xchg
and
inc
jge
mov
pop
popf
push
xor
or
pop
pop
cmp
push
push
push
sub
sub
cmp
sub
mov
sbb
sbb
xchg
cmp
dec
jg
inc
loop
pop
loope
insl
push
xor
mov
dec
repz
xchg
test
jmp
es
call
call
mov
mov
xchg
repz
jns
fwait
inc
aad
inc
sti
mov
or
ret
mov
and
enter
jg
add
xor
mov
jge
inc
jnp
jmp
insl
pop
mov
cmpl
cltd
int
leave
fnstenv
mov
or
jns
and
mov
mov
jmp
sbb
jecxz
sbb
mov
mov
fucomp
push
test
fs
sbb
imul
mov
out
clc
repnz
in
xor
incl
mov
dec
mov
clc
or
lds
cmp
push
mov
xchg
cmp
rolb
pop
jbe
ret
mov
dec
pushf
das
and
mov
lahf
sbb
jg
ljmp
adc
mov
ss
jo
dec
mov
sarl
decl
imul
sar
lock
pop
sbb
and
icebp
mov
cld
mov
pushf
mov
inc
mov
dec
in
push
push
fdivrs
sti
cmp
push
test
cmp
xor
ja
daa
stos
cvttps2pi
push
rcrl
std
call
enter
pop
sbb
sti
jmp
shlb
mov
mov
or
sbb
cmc
incl
fs
lcall
xor
fsts
aaa
xchg
int3
pop
not
in
lcall
add
pop
in
or
enter
mov
call
loopne
fidivs
xchg
mov
cmp
push
cmp
outsl
rcl
out
fnstenv
int
fwait
xor
sub
stos
or
xor
imul
ficompl
adc
mov
loope
lret
mov
hlt
xor
mov
pop
dec
inc
imul
call
add
call
cltd
add
out
out
adc
fcomps
cmp
lcall
mov
ret
popf
loop
clc
dec
push
pop
push
jp
bound
jl
jmp
arpl
ror
das
enter
call
mov
loope
adc
in
xchg
dec
dec
out
and
rorb
sbb
push
decl
pop
pop
fcom
ret
mov
and
cs
lahf
mov
movsb
enter
out
insl
fwait
mov
or
cmpsb
imul
mov
cltd
mov
pop
xlat
aas
sbb
push
push
dec
loop
andl
cltd
subl
bound
and
outsl
loope
mov
cmp
lods
lcall
or
arpl
jbe
fsubrl
in
shll
cmp
mov
mov
cmpsb
jmp
xchg
adc
adc
pop
xor
rorb
bound
push
cmp
cli
decl
jae
or
fistpll
cs
push
xor
mov
scas
ljmp
icebp
dec
int
orb
mov
jg
lret
insl
outsl
pushl
xor
and
je
dec
or
ret
mov
mov
leave
push
jmp
in
sub
and
adc
repnz
inc
ficoms
add
mov
mov
fs
jo
decl
mov
add
inc
and
mov
nop
push
jp
rcrl
ret
mov
push
mov
sub
stc
iret
mov
stos
aam
mov
mov
sbb
cld
imul
push
xor
pop
and
outsb
mov
imul
rcll
mov
jmp
push
std
and
dec
push
or
xorb
cli
or
call
hlt
outsl
jge
mov
int3
into
stc
fcoms
xchg
insl
push
ret
into
xchg
sbb
jmp
bound
sub
or
mov
push
aas
stos
leave
cwtl
or
cmp
incl
loope
jecxz
lret
and
sbb
push
in
inc
in
addr16
mov
xchg
sub
jg
adc
push
jl
loope
insb
and
repnz
loope
nop
psraw
jmp
ljmp
lret
ret
jle
lock
jmp
pop
lds
ja
jge
mov
jp
dec
inc
xorb
orb
addr16
jno
sub
call
scas
js
std
dec
pop
dec
roll
leave
xchg
sbb
dec
lds
call
cli
cli
pop
loope
mov
aam
scas
and
cmp
pusha
loopne
cmp
jecxz
pop
lock
lcall
mov
push
adc
cmp
clc
push
pop
and
loopne
pop
and
clc
and
add
call
mov
movsb
int
sbb
addw
fisubrs
shll
pop
cld
jmp
mov
adc
add
jecxz
mov
xchg
dec
xorb
fistl
cmp
call
mov
inc
sub
and
sarb
sub
fbstp
test
add
push
cmp
jmp
inc
xchg
jle
mov
cmp
incl
pop
xchg
int
gs
loopne
pop
out
nop
fdivl
ret
lret
or
pushl
push
dec
inc
lahf
jnp
and
xor
pop
jae
cmp
cmp
leave
lds
dec
xor
ds
rol
lods
jecxz
mov
pop
js
jno
fmuls
mov
add
xchg
inc
cmp
hlt
stos
aas
push
test
std
add
ljmp
lahf
jmp
jge
stc
test
pop
lret
insb
pop
sbb
cmp
dec
pushf
js
popf
js
xchg
push
out
clc
incl
and
cli
loop
out
sub
pusha
call
ret
dec
adc
ljmp
js
or
lret
mov
jmp
add
lods
mov
cli
mov
mov
ja
add
xor
xor
mov
shll
fildl
leave
fbld
jp
jmp
stos
popa
adc
test
adc
gs
popa
outsl
cli
decl
loop
es
out
cmp
mov
and
mov
xor
push
ljmp
mov
stc
jle
mov
and
cld
imul
lcall
jb
xchg
cmp
imull
jnp
aad
test
or
call
insl
pop
movsb
mov
cmpsl
inc
push
xor
mov
lock
pop
mov
xchg
mov
xor
in
pop
mov
adc
add
pop
or
pop
add
mov
cmp
xchg
cmp
cmp
cs
cmp
femms
cmpsb
push
ss
push
lret
shlb
push
hlt
das
lock
int3
out
shrb
lea
mov
mov
and
ljmp
in
je
jae
or
sar
fcoml
jb
aas
dec
pop
je
jno
pop
mov
dec
jbe
dec
add
fidivrs
cmpsl
pop
or
add
mov
jg
add
int3
cmpsl
dec
rcrb
and
mov
in
cmp
add
mov
jbe
mov
pop
cltd
lcall
leave
jp
cmp
dec
jmp
mov
ret
adc
subl
out
pop
shr
dec
lock
adc
test
dec
decl
daa
mov
outsl
sub
dec
cmp
shr
mov
mov
xchg
lahf
and
pop
sbb
cld
incl
pusha
xor
in
sub
xchg
int3
xor
ret
mov
mov
cltd
push
lcall
nop
mov
pop
out
mov
incl
stc
jo
aaa
mov
in
cmp
cli
rorb
cmp
out
jecxz
adc
mov
dec
sub
ljmp
mov
stc
dec
and
inc
and
mov
js
xor
adc
sar
pushl
lcall
sbb
dec
pop
rcrb
aaa
sub
mov
push
pusha
testl
fisubl
pop
das
in
pop
inc
pop
dec
lods
lds
dec
cwtl
xlat
push
subl
add
xchg
inc
sub
out
movsb
fcomip
mov
loop
sbb
ja
jmp
shlb
mov
out
xchg
pushl
mov
or
lret
rcrl
push
mov
adc
jecxz
out
mov
xchg
loop
or
ds
lods
mov
in
mov
adc
aaa
mov
ss
out
mov
outsl
fs
in
xchg
pushl
lgs
fldenv
ficoms
sub
adc
cmp
add
sti
movsb
push
or
mov
xor
imul
adc
add
pop
sub
in
jge
lahf
stc
cmc
mov
xor
push
xchg
pop
fbstp
mov
test
sarb
test
data16
pop
cmp
fnsave
mov
pop
pop
and
mov
adc
inc
mov
inc
jbe
jno
pop
cmc
pop
xor
cmp
out
test
xor
xlat
cltd
pop
mov
in
inc
mov
inc
push
fisttps
je
push
incb
push
data16
es
lcall
pop
xlat
frndint
arpl
cltd
pop
cwtl
adc
pop
mov
push
dec
cmp
mov
ljmp
mov
dec
test
in
dec
fisubrs
pop
jnp
ds
es
mov
sub
lcall
decb
fnstenv
cli
fidivrs
je
push
mov
and
fidivl
bound
xchg
enter
popa
mov
mov
repz
test
jae
jo
or
pusha
je
fadds
insb
pushf
mov
sub
jl
lea
movsb
inc
jne
ljmp
ds
addl
sbb
jns
xchg
dec
frstor
cmovb
sbb
es
fbld
call
dec
sub
hlt
fwait
lret
sbb
xorl
call
jbe
arpl
mov
inc
push
bnd
cmp
cmc
pushl
hlt
stc
lcall
ss
pop
mov
loopne
mov
jmp
inc
and
movsb
lret
sti
and
xor
dec
aad
add
daa
loope
mov
lcall
shrb
fdivrs
fs
xchg
lock
call
push
addr16
call
cmp
sahf
popa
loop
push
mov
mov
push
jnp,pt
sbbl
mov
pushl
xor
pop
in
mov
ret
pop
pop
ljmp
in
rcll
jg
sahf
jle
mov
std
xor
and
xor
xchg
xchg
int
decl
cmp
and
sub
popl
pop
and
ret
mov
jne,pt
lcall
negl
stos
jmp
sar
stos
add
icebp
out
out
movd
jmp
xor
lds
sbb
push
popf
filds
and
push
add
mov
pop
fisubl
loope
ljmp
mov
mov
add
rep
out
in
sbb
inc
clc
mov
dec
popa
sub
cmp
ds
es
hlt
push
lret
inc
pop
xor
outsl
inc
adc
aas
cmp
es
inc
andb
sahf
xchg
and
inc
arpl
push
clc
in
sbb
xor
cmp
inc
cmp
idivb
aam
adc
daa
jp
or
sub
lea
add
test
outsl
add
insb
pop
jp
incl
cmp
pop
shl
into
mov
out
cltd
mov
mov
lock
ljmp
jne
int
into
mov
inc
ljmp
or
cltd
leave
add
cmp
lock
cli
push
arpl
loopne
je
xor
decl
pop
xlat
and
mov
mov
ds
je
xchg
xor
sarb
rorl
jmp
dec
sbb
adc
mov
mov
pop
loope
pop
or
inc
xchg
jp
pushl
push
lahf
pushf
sub
or
nop
cmp
loope
sub
sub
xchg
mov
incl
cmp
and
fwait
mov
cmp
stc
daa
push
rorl
jle
jnp
pop
mov
scas
mov
mov
ljmp
jge
in
cmp
pop
aas
inc
mov
jmp
adc
add
and
pop
sbb
sahf
xchg
mov
das
stos
add
pop
incl
xor
sub
or
dec
pop
mov
jecxz
xor
hlt
pop
popw
ror
test
shrb
scas
mov
jbe
cmpl
ss
pushl
gs
das
lcall
mov
les
cli
push
enter
in
lret
scas
bound
jecxz
ljmp
pop
repnz
rcr
arpl
lds
sbb
ret
mov
push
je
test
xchg
xor
pop
mov
mov
or
jmp
pop
mov
jmp
lcall
xchg
mov
mov
inc
lods
mov
cli
call
jge
sub
cmp
fxtract
in
fisubs
ljmp
jne
scas
jg
mov
imul
fbstp
je
push
adc
out
js
addr16
decl
cwtl
push
xchg
mov
inc
test
fcmovu
xor
out
test
inc
mov
push
inc
stos
rorl
cwtl
jecxz
inc
xchg
jno
ljmp
lahf
movsl
divb
imul
inc
mov
mov
inc
roll
lahf
xchg
jmp
dec
push
cmp
push
cmc
data16
and
and
arpl
jne
mov
fisubrs
cmp
push
xchg
mov
test
scas
sbb
cli
pushl
cld
decl
xor
push
push
mov
aas
jbe
adc
or
lcall
fdivrs
add
pop
call
pop
popa
sbb
mov
lcall
xchg
js
loope
movsb
cmp
outsb
push
in
jmp
data16
and
call
iret
insb
sbb
jno
scas
in
in
cmp
xor
fwait
in
cli
push
dec
cmp
enter
lcall
inc
mov
pop
fdivrp
pop
xchg
mov
jnp
push
push
lcall
mov
out
pushl
xchg
cmp
sbb
inc
mov
sub
mov
jl
fbld
inc
dec
fcomp
movsb
add
and
icebp
pop
fs
aam
inc
aad
xor
jb
andnps
pushl
mov
xorb
dec
test
ret
js
popf
xorl
mov
sbb
inc
fcomip
and
hlt
push
arpl
push
add
lcall
insb
test
cmp
and
inc
ret
mov
loope
mov
decl
add
fmul
xchg
push
andl
movl
inc
push
mov
enter
lret
mov
push
cmp
inc
add
ljmp
xchg
or
cld
and
aas
jmp
sbb
adc
cli
mov
mov
push
xchg
nop
cmp
lcall
jmp
sub
sti
and
push
pusha
add
test
mov
ljmp
popf
mov
sbb
ret
insb
rcrl
or
shrl
sbb
nop
jb
sub
jmp
jl
test
pop
pushl
call
rcrb
push
ffreep
mov
dec
xchg
sub
xlat
lcall
dec
ljmp
mov
dec
push
ja
cmpsb
mov
sbb
fcomip
jg
hlt
fadds
sti
push
push
adc
pushf
orl
pushl
std
decl
dec
add
ss
repz
jle
mov
ja
out
xor
out
clc
lcall
lcall
pop
and
and
and
sarb
mov
adc
ret
pushl
enter
insb
mov
addr16
sbb
cmpsl
xchg
lods
movsl
mov
pop
ficoml
fwait
das
clc
call
mov
mov
out
dec
sbb
in
ss
push
add
addr16
xchg
repnz
push
pop
xchg
dec
stos
dec
xor
je
mov
incl
adc
into
fldcw
mov
pop
lret
loopne
xor
sub
jns
fcompl
mov
icebp
inc
nop
or
pop
add
sarl
lods
es
xchg
fdivrp
fcomip
fldt
inc
mov
imul
fs
pop
and
lret
mov
mov
clc
int
xchg
sahf
mov
and
pop
inc
into
sub
leave
lcall
cli
decl
and
idivl
mov
cmpsb
xor
mov
xor
ljmp
idiv
out
aad
out
pop
xorl
aam
repz
jo
cmp
pop
ja
std
pop
add
loopne
and
out
sarl
lods
mov
loope
incl
call
inc
into
xchg
dec
push
sbb
mov
pop
inc
fidivrl
mov
cltd
cltd
xchg
jbe
adc
cmpsl
fisttpl
xor
repnz
inc
loop
or
ljmp
es
mov
fs
lret
cltd
in
mov
pop
or
jb
ret
and
push
or
cld
ljmp
or
shlb
divb
push
push
push
cltd
out
repnz
pushl
xor
cmp
out
ds
jge
pop
adc
cmp
add
jbe
cld
jmp
mov
push
and
cmp
test
jecxz
and
outsb
pop
and
pushl
inc
pop
push
aam
jle
add
bound
xchg
pop
pop
fnsave
incl
dec
int
add
pop
push
cmp
adc
push
nop
dec
jl
hlt
cmc
jmp
xchg
fcoml
shl
add
add
or
jge
adc
iret
lcall
pop
mov
loopne
inc
insl
dec
and
leave
lock
push
cmp
mov
or
call
mov
out
gs
jmp
cmpsb
pop
hlt
repz
push
jp
dec
xor
into
inc
xchg
cmpsb
test
mov
popa
or
xorl
test
call
mov
push
jnp
scas
and
or
addr16
sahf
out
outsb
sahf
jle
cmpsl
xor
add
push
sbb
mov
inc
add
movsb
mov
push
leave
mov
ljmp
and
mov
mov
repz
outsb
dec
notb
daa
dec
ud0
ffreep
mov
call
stos
lcall
aas
and
imul
idiv
or
loop
adc
les
dec
and
jg
ja
mov
enter
call
jns
push
mov
imul
cmp
jno
insb
cmp
dec
jns
in
lahf
inc
mov
cmp
int
jae
jmp
pop
test
inc
ds
push
inc
cmpsb
incl
aas
je
pusha
mov
cs
sbb
mov
call
jmp
jle
pop
pop
inc
mov
or
mov
js
scas
dec
mov
push
lds
test
aam
mov
arpl
cmp
sbb
xlat
push
lret
dec
movsb
xor
pushl
nop
sahf
std
ss
or
cmp
dec
lock
lock
xor
ljmp
pop
add
pop
notb
rcll
mov
repnz
jmp
cmc
imul
push
mov
ljmp
in
test
out
rorb
lcall
decl
int3
mov
jae
lcall
lcall
imul
sar
and
mov
test
das
adc
stc
in
jmp
cltd
push
adc
lods
xor
stos
js
lret
lret
loopne
adc
or
jmp
cli
decl
add
xor
pop
add
popf
sbb
lret
sahf
mov
fs
ljmp
imulb
add
bound
pop
inc
popf
fs
mov
cmp
pop
jp
dec
idivb
xor
xchg
lea
mov
in
icebp
imul
or
ljmp
dec
movsl
or
idivl
sbb
fbstp
push
inc
push
mov
push
mov
negl
inc
push
es
mov
adc
cmp
ds
mov
pop
inc
imul
ljmp
jle
arpl
jae
sti
dec
mov
push
inc
inc
jnp
into
xor
jle
ljmp
mov
popf
cmpsl
adc
push
push
ljmp
mov
add
jg
div
xchg
std
or
rcrl
push
adc
mov
arpl
das
mov
dec
inc
pop
cmp
popa
inc
xor
xor
aaa
divb
push
xor
push
lods
hlt
sbb
shl
fbstp
or
push
pop
or
rclb
cwtl
inc
cltd
cmpsl
push
mov
je
into
incl
fiaddl
cmpsl
lcall
jle
xchg
pop
mov
mov
leave
shll
call
test
sbb
inc
xor
add
fwait
das
or
push
inc
test
in
sub
dec
sub
ljmp
sbb
cs
mov
insb
push
adc
popa
push
jbe
pop
xchg
dec
ds
sub
fwait
cli
mov
and
adc
lcall
dec
mov
sub
xor
out
je
and
jmp
incl
int3
add
lock
dec
and
imul
jnp
mov
push
cmp
dec
ja
inc
push
cmc
pop
pop
loopne
leave
mov
ret
popw
loop
call
je
out
data16
cld
decb
scas
insb
cltd
loopne
notl
jge
shr
jo
push
pushf
jmp
mov
xchg
lock
push
stos
out
xor
idivl
decl
cld
ljmp
mov
push
sbb
push
push
aad
aaa
insb
mov
inc
ss
sub
aad
out
jmp
out
xor
loope
xchg
fldt
cmp
mov
mov
fs
in
push
test
mov
lock
mov
adc
xchg
outsb
mov
movsb
stos
inc
inc
inc
cmp
pop
clc
stos
dec
adc
mov
fimull
pop
and
ljmp
dec
ljmp
and
and
mov
or
mov
or
incl
aas
fcmovnu
cmp
push
jle
in
movsb
scas
lret
loopne
push
jne,pt
xor
rorl
shrl
in
inc
add
xchg
jae
adc
incl
leave
add
aad
loopne
loop
and
lea
and
std
stc
xchg
icebp
incl
sbb
and
imull
adc
adc
jg
sbb
out
mov
jmp
aam
inc
mov
jmp
stos
xor
dec
add
cmp
jecxz
cld
push
jge
in
lods
stos
das
stc
pop
push
push
fnstenv
test
fwait
lcall
mov
test
inc
pop
push
popf
mov
or
xor
jl
fidivrl
aas
dec
ret
push
sahf
sbb
and
inc
push
cmpsl
and
arpl
out
adc
mov
rorb
adc
lds
sbb
shll
mov
jmp
call
decl
push
mov
insb
cmp
inc
mov
and
mov
mov
decl
inc
aas
adc
inc
std
mov
sahf
arpl
xor
int
xor
call
jl
lahf
call
sbb
push
jg,pn
rcrl
scas
lods
adc
pusha
ret
bound
call
pushf
sti
jo
add
ljmp
pop
jl
dec
fiaddl
mov
dec
inc
fmuls
enter
add
xor
data16
lret
in
int3
repz
mov
adc
cltd
out
lcall
stc
rcl
push
shr
popa
das
pop
fsubrs
shll
pushf
xchg
mov
sar
push
fs
xchg
jns
jl
mov
leave
ret
lock
lahf
mov
mov
adc
jg
jmp
add
movsb
repnz
jmp
stc
out
test
xor
jnp
hlt
pop
mov
fcomip
xor
push
arpl
sub
pop
add
or
xchg
adc
push
inc
stos
jle
adc
ss
push
mov
adc
adc
pop
add
ljmp
cwtl
lret
data16
and
mov
inc
sub
pop
testl
incl
xchg
mov
fstpl
mov
out
cmp
push
int3
jmp
xchg
cwtl
insl
mov
adc
jmp
fistpl
fdivrp
js
push
xchg
cltd
mov
decl
cmp
push
cmp
mov
test
lahf
mov
or
lods
ss
ljmp
mov
and
dec
lea
mov
loop
out
outsl
adc
jmp
mov
push
adcb
mov
adc
rcr
pusha
pmullw
nop
dec
call
sti
fildl
push
loop
jg
cmp
nop
push
and
scas
je
sahf
adc
decl
sub
repz
xor
fists
jecxz
adc
inc
cmc
test
xor
push
daa
sub
sbb
enter
into
mov
mov
mov
decl
pop
repz
outsl
enter
pushf
sbb
inc
push
xchg
int
ja
push
insb
call
mov
std
push
mov
jb
jo
or
hlt
xor
je
out
leave
xchg
std
adc
mov
pop
inc
pop
adc
pop
xor
popa
in
mov
mov
mov
or
or
call
dec
xchg
mov
lcall
jno
add
bound
and
sub
fcomip
xchg
and
push
lock
test
inc
adc
push
cmp
outsl
aaa
mov
or
jae
ja
and
aaa
mov
xlat
or
stc
fwait
xchg
popf
push
pop
into
xchg
je
decl
dec
sbb
dec
or
inc
xor
xchg
dec
mov
lahf
adc
cltd
jb
jae
lret
mov
lock
decl
fnstenv
movsb
filds
idiv
mov
aas
sbb
pcmpeqw
sub
mov
out
clc
fistps
pop
outsb
pushf
jl
das
scas
cmpsb
pop
xlat
mov
and
in
xor
xorl
das
add
or
iret
movsl
cmp
cmc
addr16
sub
movsb
js
dec
jo
pushl
loopne
adc
sbb
sahf
xchg
into
out
js
pop
xchg
bound
int
jns
cmp
xchg
xor
inc
test
mov
aas
xor
pop
outsl
clc
call
sbb
or
int
ljmp
out
iret
out
xor
cmp
xchg
push
add
mov
cltd
xor
add
call
or
or
std
adc
mov
shll
ds
jmp
ret
test
in
sub
sub
xchg
in
test
das
jle
jno
arpl
incl
loop
xlat
js
scas
js
dec
add
mov
xor
in
jbe
fildll
cld
cld
iret
push
cmp
adc
dec
loop
xor
and
std
pop
decl
dec
aas
inc
xchg
das
sti
test
out
mov
lret
fisttpl
nop
das
daa
lahf
inc
pop
inc
xlat
movsl
ss
std
cmpsb
xor
sbb
and
cmp
aaa
addl
dec
incl
jo
and
mov
enter
and
adc
fwait
inc
mov
test
in
outsl
mov
sub
jp
mov
scas
ljmp
out
sub
outsl
clc
mov
test
mov
mov
inc
dec
mov
push
daa
shl
incl
lcall
adc
cld
test
sub
mov
push
mov
icebp
jb
and
call
mov
sub
into
sub
fidivrs
leave
sti
stos
mov
ja
add
cmp
neg
js
mov
test
loope
cmp
mov
pcmpgtb
push
and
popf
clc
call
cmp
add
insb
mov
lret
adc
outsl
jns
sub
mov
sub
or
mov
mov
int3
dec
ret
cs
out
mov
lcall
inc
clc
cmpsb
pop
loop
xlat
into
jl
imul
add
sti
nop
in
out
mov
mov
xorl
rorb
andb
sbb
and
incl
xchg
popf
push
sbb
mov
adc
adcb
adc
sar
pop
sub
scas
or
decl
nop
pop
inc
xchg
xchg
addl
ffree
mov
mov
pushf
loop
das
aad
add
push
icebp
stc
lods
xchg
fsubrp
jbe
lret
cmp
imul
add
inc
pop
shlb
dec
sub
data16
stos
xor
sub
pop
sub
int3
pop
inc
dec
scas
clc
js
xor
jmp
or
sub
rep
xchg
outsl
sbb
outsl
sub
les
movsb
add
mov
and
in
jae
mov
xor
cmp
jle
es
jmp
pop
pop
and
or
ljmp
adc
sbb
add
scas
jecxz
jo
cmp
lret
cmp
repz
mov
data16
fdivrs
add
and
ljmp
test
mov
mov
mov
dec
add
test
stc
sub
lcall
addr16
dec
push
xchg
push
and
enter
sti
mov
jmp
pop
jns
inc
xchg
int3
mov
aad
fildl
cmp
jo
sbb
movsl
aam
sti
mov
aaa
adc
ljmp
add
add
scas
inc
mov
pop
and
enter
add
dec
loope
push
push
inc
sarl
es
and
mov
incl
lods
sbb
jno
mov
stos
cmc
es
pop
inc
cmp
lea
das
clc
in
xor
push
out
mov
xor
sub
cmp
ljmp
mov
popf
scas
test
xchg
jp
xchg
arpl
jno
push
jg
les
loopne
lea
lahf
jmp
push
and
xchg
in
add
jp
cmpsl
das
iret
insl
sbb
fnstcw
aad
sbb
xchg
movsl
or
xchg
fstps
inc
inc
insl
orl
or
in
push
cli
incl
mov
mov
cs
sbb
hlt
mov
and
or
xor
in
sbb
fcomip
arpl
mov
pop
mov
mov
pop
push
cwtl
add
mov
jmp
adc
outsl
push
arpl
dec
enter
fs
lods
lock
sub
dec
repnz
xchg
out
cmp
das
sar
test
out
mov
add
pop
pop
mov
aas
fcmovne
xor
out
push
push
sti
jle
adc
in
in
jle
out
xchg
xor
xchg
lahf
arpl
pushl
sbb
dec
daa
xchg
aas
cmp
sbb
push
fistpll
insb
mov
ljmp
test
aaa
nop
and
sahf
into
dec
lcall
xchg
inc
xchg
xor
lcall
xlat
push
rcr
std
sahf
fistpll
sbb
filds
stos
jecxz
outsl
mov
jmp
dec
pop
cmp
inc
push
repz
sbb
jnp
jnp
mov
cmp
repnz
incl
sbb
push
ret
xchg
adc
jns
jmp
int
call
sbb
add
pushl
dec
jecxz
dec
pop
enter
xorl
out
xchg
lret
pop
mov
sbb
jo
ds
stc
jg
je
sub
lea
or
dec
popf
adc
or
dec
movsl
sub
xchg
lds
add
loope
iret
mov
push
jnp
pop
xchg
cmpsl
mov
lcall
pushf
and
sbb
ljmp
inc
pop
adc
clc
movb
pop
mov
dec
icebp
popa
xor
or
shrb
or
lea
popf
shrl
popf
xchg
dec
push
cmp
rorb
pop
insl
incl
in
dec
pop
xlat
add
dec
push
xlat
aam
add
ljmp
loopne
sbb
xchg
stos
add
sti
xor
xor
jno
popf
fdivp
fwait
mov
mov
cmc
fnsave
lret
cmp
mov
cwtl
idiv
lcall
imul
xor
push
mov
mov
or
in
sbb
sar
aas
call
cmp
add
mov
ficoms
pop
scas
andb
ret
lcall
das
iret
mov
pop
inc
jb
or
adcl
push
in
jl
test
jmp
xchg
xor
add
jmp
jno
les
dec
mov
insl
dec
not
popa
cmpsl
or
sub
xor
lret
aaa
xor
push
ds
mov
push
test
push
pop
ljmp
jmp
orb
jge
gs
incl
cmc
inc
loop
xchg
pop
adc
pushl
ds
xor
push
test
hlt
push
adcl
and
cld
jmp
cwtl
decl
fisttps
pop
xchg
sbb
fisttpll
mov
push
jo
cmpsl
or
decl
push
fdivrp
inc
sub
add
test
dec
into
adc
xor
jp
sub
jl
and
test
inc
or
xor
shl
faddl
fistpl
and
fxch
or
jg
and
call
repnz
dec
aad
and
icebp
cmp
ret
loop
sbb
std
dec
dec
f2xm1
shl
sbb
rclb
clc
cmp
mov
sub
xchg
test
dec
stc
insl
insb
adc
inc
add
jmp
sbb
lds
add
sub
decl
adc
pop
leave
flds
push
addr16
xor
out
sarb
ss
xor
jmp
std
pop
cld
pop
inc
push
push
test
out
sbb
xchg
adc
pushl
or
sub
je
stc
push
add
cmp
cwtl
jno
lcall
jg
add
test
push
cmpsb
push
cmp
cltd
stos
call
loop
or
push
pop
movsl
enter
popf
adc
or
repnz
ljmp
gs
xlat
mov
mov
mov
incl
push
and
das
hlt
das
sub
add
inc
rorb
roll
fistpll
fdivp
fimull
outsl
je
insb
out
ret
push
popa
lds
lcall
or
jb
in
pop
fisttpl
fmull
push
inc
jne
ljmp
orl
jp
adc
cmp
jecxz
subb
into
mov
scas
mov
lock
lcall
dec
outsl
jb
adc
pop
rep
shll
xchg
adc
add
inc
inc
pushf
fcomps
incl
cmp
and
mov
and
arpl
adc
ljmp
cli
nop
lret
cmp
clc
mov
movsl
cmp
mov
lock
orb
das
push
pop
pop
push
jmp
adc
xchg
insl
lcall
jne
mov
jno
and
int3
jg
push
mov
mov
xor
mov
ret
addr16
add
and
and
cmp
sub
sti
js
ljmp
add
mov
ss
or
adc
mov
cmp
cs
js,pt
cmpsl
testb
pop
out
sbb
and
adc
repz
adc
flds
pop
mov
dec
xchg
divb
jle
mov
mov
out
cli
call
inc
inc
mov
inc
fisubs
ljmp
or
sbb
mov
mov
rolb
mov
push
or
shrb
into
inc
xor
rcll
jns
cmpl
lret
mov
sub
leave
mov
les
lcall
jmp
mull
fidivl
outsb
jmp
dec
xor
rclb
aas
inc
dec
sbb
xor
mov
out
adc
iret
sub
cli
test
jae
mov
mov
jmp
adc
mov
add
mov
lcall
mov
ds
cmp
stos
sarb
inc
xchg
lret
fdivs
aas
dec
stos
xor
out
clc
call
mov
inc
mov
pop
shr
and
dec
pusha
dec
pusha
nop
arpl
sbb
mov
pop
mov
jae
xchg
repnz
sbb
in
xchg
cltd
jle
scas
lret
mov
push
cld
ljmp
push
xchg
dec
lea
loopne
inc
mov
cmp
lahf
inc
idiv
ljmp
mov
hlt
sbb
cmpsb
jmp
in
int3
lea
or
std
and
push
ss
out
jmp
ljmp
sub
cmpsl
das
mov
add
push
xchg
fs
loop
and
sysret
adc
add
call
loopne
cwtl
insl
lock
push
lcall
roll
inc
aas
cwtl
shll
cmp
lcall
jp
and
push
scas
cmp
roll
movsl
dec
mov
inc
decl
jge
psubsw
xor
jg
call
or
cltd
loop
sbb
adc
repnz
loope
sub
bound
or
mov
call
les
ret
das
mov
outsl
lods
outsl
cmp
cmpsl
lock
int3
add
popf
push
call
cld
ja
movsl
xchg
cltd
out
iret
jo
jecxz
add
cmp
roll
ljmp
mov
pop
adc
sahf
pop
int
xchg
aam
or
icebp
ljmp
add
jg
stc
ss
decl
xor
sub
inc
test
push
fldcw
out
mov
adc
popf
push
jnp
out
sbbb
test
ficoml
sub
jae
dec
sub
out
push
xor
mov
adc
inc
enter
jg
sub
insl
pop
hlt
xchg
cmp
out
mov
movsb
out
lahf
sti
aam
xchg
ffreep
and
addb
mov
leave
out
mov
lret
or
incl
adc
xchg
dec
ret
sub
es
rcrb
xchg
sub
mov
lds
pop
ficoml
subb
inc
xchg
xchg
xchg
push
cmp
xchg
add
inc
sbb
cmp
incl
and
cwtl
inc
lcall
and
mov
lds
inc
lahf
mov
push
ljmp
rclb
pop
mov
jg
mov
cs
xor
das
decl
pop
mov
jb
dec
in
lret
mov
mov
cmp
bnd
push
mov
incl
outsb
pop
aas
popa
inc
mov
je
xchg
dec
dec
pushf
mov
push
lods
into
adc
ja
jmp
xchg
cmp
jp
dec
dec
std
or
aam
mov
lds
stos
nop
jmp
pushl
xor
mov
cmpsl
mov
hlt
ret
movsl
cmp
sbb
sbb
loope
enter
test
movsb
cmp
push
sti
unpcklps
call
inc
jae
pop
orl
or
pop
aam
ret
xor
call
mov
and
inc
push
cld
call
dec
rorb
ret
cmpsl
mov
sbb
pushf
xor
fwait
or
xchg
dec
push
incl
adc
outsl
dec
jbe
pop
cmp
push
xchg
js
or
add
mov
push
test
lret
test
incb
mov
shll
repz
hlt
popf
or
outsl
xor
repnz
cwtl
dec
sub
dec
popf
scas
aaa
adc
xor
incl
ss
gs
lods
aaa
inc
icebp
sti
repnz
mov
xor
jno
imul
shrb
aad
jl
jle
fistpll
fmull
enter
repz
xlat
pop
scas
cmc
fs
filds
mov
jo
in
push
in
inc
and
push
mov
hlt
loop
movsl
cmc
jecxz
xchg
and
sbb
xchg
ret
fwait
loopne
pop
or
out
test
xchg
dec
xchg
leave
ljmp
and
fwait
shll
xchg
push
jbe
inc
pop
cmpb
decl
jnp
jp
inc
fisttpl
sahf
sahf
cmp
dec
out
mov
orb
jg
pop
mov
sbb
stos
cld
mov
pushl
dec
add
jp
sbb
out
jle
stos
and
and
mov
in
sbb
iret
dec
in
fcomip
push
inc
lcall
sbb
push
push
cmp
inc
adc
adc
fcomip
jns
push
pusha
aad
xor
push
xor
dec
rorl
testl
pop
push
lcall
gs
mov
iret
psubb
push
or
outsl
inc
lcall
xor
shl
jmp
jl
dec
lods
subb
fidivl
or
pop
fdiv
add
xor
bound
ficomps
ret
fnstcw
cmp
sbb
incl
enter
mov
sbbl
pop
data16
fisttps
test
cmp
call
rcll
add
or
pop
push
lret
jge
jmp
lret
rcll
fsts
sbb
sub
fs
enter
sbb
incl
sub
cmp
push
out
jmp
mov
out
or
or
adc
mov
ljmp
sub
sti
and
stos
sti
rolb
adc
lahf
add
out
movb
push
add
mov
jg
xchg
jmp
iret
dec
inc
add
in
xchg
aam
loopne
mov
addr16
adcl
es
lcall
cmp
cmp
dec
pop
cs
in
aas
pop
out
test
mov
icebp
ljmp
push
das
scas
dec
int3
xchg
xchg
into
lods
test
cmpl
lds
and
jmp
mov
sarb
cmp
lcall
inc
inc
enter
pop
mov
inc
jmp
cli
add
call
lods
bnd
mov
movsb
call
push
push
push
xchg
ror
ret
jg
xor
adc
popf
push
adc
out
jg
in
pop
iret
push
xchg
push
mov
or
jg
loopne
xor
fnsave
mov
xchg
add
jecxz
clc
popa
or
pop
pop
or
pop
adc
in
int3
mov
push
in
mov
aam
movsl
jb
enter
rclb
in
repnz
loope
fistps
xchg
out
int3
or
pop
pop
cmc
inc
inc
repz
jmp
jmp
fidivl
mov
sub
ds
or
mov
popa
jns
pop
mov
mov
jb
push
and
scas
in
je
mov
mov
push
mov
sbb
test
xchg
dec
aam
aas
enter
add
pop
mov
imul
outsl
shl
call
mov
aad
or
cmpsb
fsubl
pop
rep
or
lret
jmp
movsl
cmpl
cmpsb
mov
or
mov
sbb
jmp
cmp
inc
cwtl
adc
in
xor
movhps
inc
jmp
cmc
sbb
adc
inc
jp
iret
xor
mov
xor
lret
pop
sub
stos
or
aam
int3
mov
jp
pusha
pop
fldl
lcall
cmc
push
and
xchg
iret
imul
insl
sbb
cwtl
and
ja
cs
push
inc
xchg
in
jbe
jg
jg
jmp
lahf
clc
dec
xlat
mov
pop
mov
push
rorb
lahf
scas
inc
sub
jno
sbb
rclb
mov
or
xlat
xchg
push
mov
call
pop
unpcklps
or
ret
test
add
mov
mov
mov
push
gs
shll
adc
jne
xor
pusha
fnstenv
mov
insl
pop
push
enter
fcomps
mov
cli
xor
jne
movsl
xchg
idivl
ljmp
lods
mov
mov
shl
sbb
iret
rcll
xor
mov
push
ljmp
xchg
mov
cmpsl
and
xchg
or
and
testb
sti
scas
mov
out
xchg
in
mov
jo
pop
adc
dec
push
adc
fisubl
push
aam
jno
add
aam
scas
ljmp
xor
dec
add
lret
js
fwait
and
gs
pusha
adc
insl
call
mov
sub
fildl
xor
adc
cmp
xchg
xor
loope
daa
inc
adc
lds
push
or
hlt
cmpsb
jp
shlb
fcoms
pop
and
lcall
adc
jmp
or
push
push
or
pop
orl
jle
lcall
xchg
mov
inc
scas
dec
xor
lock
clc
test
sbb
out
mov
outsb
xor
jp
addl
inc
cmp
sub
push
xor
push
hlt
hlt
mov
js
pop
loope
lods
pop
or
mov
fisttps
add
ret
xchg
in
cmp
inc
std
shl
mov
out
out
call
jmp
fisttpl
jbe
sub
inc
xchg
cmc
inc
and
jae
clc
test
decl
cmpsb
ss
imul
sbb
test
std
cltd
pushf
mov
and
mov
into
hlt
lahf
push
push
cmp
jnp
movsb
addl
adc
stos
mov
pusha
ret
out
daa
mov
cli
out
cli
ficomps
and
popf
pushf
inc
mov
dec
sahf
test
jg
adc
fstpt
xchg
into
xchg
push
xchg
mov
out
adc
lcall
decl
sub
test
rol
cmp
mov
dec
movsl
mov
cld
cld
jo
call
lock
btc
scas
jno
jecxz
jle
fcos
jmp
int
cld
cmp
adc
orl
jmp
mov
lahf
pushf
sub
push
cmpsl
pop
xchg
pop
mov
int3
add
fidivl
test
inc
mov
cmpsl
xorl
lock
arpl
mov
xor
push
mov
lcall
mov
mov
popf
and
push
xchg
sahf
aas
inc
or
inc
jne
bound
pop
stos
sti
jg
aaa
dec
ja
das
jne
and
negb
cmc
std
pop
out
clc
leave
test
add
movsb
outsl
mov
mov
dec
or
and
lock
sub
sar
call
cwtl
ret
test
mov
and
test
call
cmc
sbb
xchg
lds
in
cli
push
ljmp
sub
push
incl
inc
in
or
lds
push
lods
cmpsb
jle
leave
sbb
std
mov
sub
pop
ljmp
mov
pop
cmp
jg
outsl
inc
stos
dec
sub
xor
in
fcomps
jle
es
mov
shrl
lcall
jmp
fistpl
pop
in
inc
out
loopne
in
jmp
in
loopne
dec
jmp
fidivl
into
xlat
fcomip
inc
push
push
addr16
fsubl
pop
lods
sbb
inc
push
bound
jnp
mov
popf
movsb
lods
jo
jmp
mov
fstpt
lret
dec
pop
mov
call
or
shrl
test
mov
gs
stos
lods
push
jmp
adc
jns
cmp
mov
sahf
arpl
mov
stc
stc
add
jmp
jp
pop
jbe
add
enter
push
roll
ja
xor
mov
mov
ljmp
adc
add
movsl
sbb
dec
in
sub
adc
cmp
jge
pop
decl
push
sbb
fsubrl
std
adc
mov
xor
pop
add
jle
xchg
fs
lods
popf
adc
test
inc
je
in
ja
movsl
sahf
sbb
xchg
xor
pop
cmp
and
cltd
pop
jl
sbb
pop
xchg
hlt
iret
xchg
push
into
mov
dec
in
push
xor
jns
mov
add
inc
jns
cmp
fisttpl
pop
fnsave
in
call
dec
int
gs
aam
push
jg
jge
mov
sub
stc
xor
cmp
and
jg
ljmp
int3
adc
pop
out
or
es
ja
cld
rcr
fbstp
or
movb
ljmp
or
push
xchg
mov
arpl
adc
pop
lods
mov
jecxz
add
mov
clc
push
sbb
xchg
jecxz
pushl
movsl
sub
lret
fcompl
outsb
dec
xchg
dec
fisttpl
mov
mov
mov
sub
call
les
movb
jne
in
adc
pop
and
push
push
xchg
decl
mov
add
adcb
add
loope
sub
mov
pop
mov
adc
rclb
xor
push
frstor
push
pop
outsl
add
mov
jo
and
ret
loopne
aam
jecxz
ljmp
pop
cmp
std
scas
hlt
testb
inc
xor
add
xlat
jno
shll
dec
clc
cmp
jmp
insl
daa
imul
addr16
sbb
out
mov
ds
lods
push
push
ffree
lcall
aad
jo
cltd
mov
lretw
push
xchg
mov
dec
push
outsb
push
fcompl
or
sti
mov
mov
mov
dec
ss
jo
push
xor
add
pop
push
gs
pop
outsb
adc
mov
cmc
pushl
stc
andb
adc
xor
jo
gs
pop
push
jge
cs
lcall
scas
lods
or
mov
rcll
inc
clc
shr
xchg
loopne
call
loope
jecxz
es
ljmp
popf
pop
sub
sbb
fwait
jbe
divl
sar
or
mov
inc
push
cmpsb
mov
addr16
push
test
stos
sar
jmp
adc
jno
icebp
push
addb
int
mov
scas
fs
fildll
mov
ljmp
pushf
cmp
dec
fstpt
gs
push
pushf
sbb
xchg
push
jge
ja
fidivrs
hlt
outsl
ljmp
clc
add
pushf
cmc
push
mov
ljmp
jne
enter
push
decl
mov
movsb
push
mov
aaa
mov
mov
ja
pop
adc
add
ds
ljmp
in
or
jns
aam
je
jb
fcoml
or
lret
dec
jmp
push
outsb
pop
fimull
mov
sub
dec
jne
inc
and
adc
pop
orl
iret
inc
mov
sub
das
or
dec
sti
js
mov
cld
shrb
sub
cmc
imul
into
push
loope
xor
decl
fcompl
inc
repz
xor
xchg
dec
mov
andb
lahf
jg
sar
mov
in
inc
inc
adc
dec
xchg
lods
mov
into
out
repnz
pushl
sub
shll
fimull
test
out
xchg
push
jns
xchg
lods
mov
pop
add
scas
rcrb
cmp
int3
or
cwtl
jl
out
cmpsl
mov
mov
cmp
add
dec
pop
imul
test
jle
mov
sar
pushl
out
insb
cs
sub
sbbl
mov
jmp
fs
icebp
pop
lcall
cs
adc
xor
rcrl
scas
aaa
sbb
jg
shlb
insb
outsb
fiaddl
repz
cmp
push
sub
jmp
jmp
subl
pop
fs
outsl
pusha
dec
xor
mov
addr16
mov
call
push
or
aad
xchg
add
mov
std
jmp
std
shlb
adc
sub
add
xorl
add
push
sbb
cmc
dec
sarl
not
test
insl
insl
cmp
xor
inc
push
jo
out
fidivs
cmp
fbstp
out
test
repnz
xor
test
or
aas
fidivs
cmpsb
jg
sub
lret
adc
flds
mov
xorb
lahf
nop
bound
cmpsl
out
cld
out
clc
call
push
adc
jp
out
je
clc
mov
pop
loopne
xor
fisttpl
call
scas
cmp
mull
fpatan
int3
pop
dec
cmovns
movsl
cs
xchg
call
ficoms
cmp
sti
push
or
cmp
scas
and
pop
jo
sbb
icebp
jae
aad
call
adc
xor
enter
clc
xchg
aas
mov
ljmp
jl
into
mov
add
mov
hlt
mov
in
mov
inc
jnp
cld
sub
cmc
jmp
outsl
cmpsb
addl
cmp
xchg
xchg
mov
mov
das
cmp
call
dec
ret
pop
lods
out
insl
push
dec
notl
shlb
jp
cmpsb
pop
les
or
or
sub
push
test
lcall
ja
ljmp
pop
stc
push
adc
inc
stc
mov
decl
sti
clc
dec
dec
mov
js
stos
fbld
cld
notb
mov
sbb
es
ljmp
dec
ds
addl
adc
fyl2x
xchg
test
pushl
mov
adc
in
push
lock
lret
data16
das
fstpt
jns
sbb
adc
rol
dec
lock
cmp
lret
je
push
xchg
fcmovbe
cld
push
das
js
xor
out
daa
xor
add
jg
incl
xor
mov
insl
in
mov
insb
notl
mov
cmpsb
int3
stos
jmp
inc
inc
mov
ljmp
or
or
and
pop
sub
pop
mov
les
lea
hlt
stos
jg
ds
cmpsb
fisttpll
xchg
sbb
mov
mov
decl
fs
mov
movsl
inc
stos
jns
inc
test
stos
ret
movsb
les
shrl
daa
inc
mov
lcall
xchg
leave
es
dec
aas
jg
mov
cmpb
inc
repnz
mov
lret
and
dec
pushl
out
and
fadd
jae
loope
dec
sbbb
xor
xor
scas
inc
xchg
jmp
mov
inc
mov
imul
jle
lcall
inc
or
in
mov
jg
xchg
in
and
sahf
cmp
cmp
popa
dec
insl
pop
push
pushf
lods
jns
mov
xlat
shll
sbb
mov
add
dec
and
les
or
sbb
pop
or
mov
mov
fistpl
ljmp
fwait
in
push
jecxz
push
popf
jge
or
dec
addr16
es
scas
std
cmc
add
sub
sbb
inc
push
cs
jmp
out
xor
add
rol
in
and
rcrb
jnp
fidivs
cmpsl
mov
ja
jmp
aam
daa
mov
out
pop
xor
or
and
jmp
jl
sbb
mov
testb
out
mov
jg
popf
mov
call
ss
push
movsb
sahf
aad
dec
dec
inc
mov
inc
in
adc
cmp
out
push
sbb
pop
jne
testl
or
scas
xor
popa
loop
mov
lcall
popa
cmp
push
push
sub
outsl
sahf
imul
jns
test
push
jae
cmpsb
push
fildll
clc
call
cltd
jne
fildll
pop
dec
and
je
shlb
jl
lods
mov
mov
in
or
in
xlat
sub
xchg
lock
push
push
ret
aam
lcall
sub
sub
xchg
enter
adc
sub
jge
sub
xor
cmp
pop
xchg
incl
test
or
je
rclb
pop
mov
stos
addb
aas
cmp
fistpl
mov
jbe
xchg
jle
adc
fsts
mov
inc
mov
decl
hlt
mov
aam
jnp
adc
movsb
testb
rorl
ror
sarl
test
mov
ljmp
sbb
jecxz,pt
insl
in
or
dec
fdivrl
pop
clc
lock
pop
fldl
lods
xchg
arpl
add
add
lcall
in
testb
test
mov
ss
push
std
mov
outsb
adc
pop
jge
cmp
dec
loopne
jb
fcompl
adc
lcall
dec
clc
pop
pop
mov
add
test
adc
mov
inc
jg
js
out
mov
out
scas
cmp
addr16
inc
imul
pop
in
aad
jns
mov
inc
xchg
mov
aam
ljmp
xorb
loopne
ljmp
gs
and
mov
cmp
inc
aas
dec
inc
aam
sbb
call
fwait
pop
out
pop
and
cmpsb
jmp
add
lret
mov
lret
lret
pop
mov
fs
jl
add
decl
push
insl
xor
imul
dec
dec
push
stc
pushl
sub
adc
es
and
jae
shl
arpl
negb
mov
mov
jecxz
or
shll
xchg
fdivs
incl
pop
adc
test
es
sub
sbbb
insb
push
adc
pop
addr16
int3
inc
andl
mov
imul
or
movsb
mov
ja
cmp
cmp
clc
lcall
xchg
pop
fildll
aam
pop
sbb
sarl
mov
dec
ljmp
sub
push
out
cwtl
dec
pushf
cmp
int
mov
xor
sar
decl
in
inc
lock
insb
cli
popa
mov
and
push
push
xchg
add
ss
sahf
pop
into
loopne
decl
dec
rcrl
sub
lods
imul
and
adc
std
sar
call
rcrb
jnp
jo
pop
mov
dec
cmp
ret
jmp
cmpsl
iret
pop
cmp
pop
jl
dec
repz
cld
cmp
test
pop
mov
dec
outsb
xchg
cltd
js
out
jnp
mov
pushl
or
cmp
jmp
pop
mov
xchg
ret
dec
dec
jne
mov
inc
loopne
ljmp
and
cmp
fcmovnbe
scas
push
loop
inc
jno
push
or
mov
and
daa
incl
dec
sti
es
cmc
jge
adc
lock
mov
jmp
mov
mov
push
mov
cmp
in
cmp
out
adc
add
insb
push
sbb
adc
decl
xchg
and
test
or
sbbb
addr16
jmp
repz
add
xchg
dec
sub
sbb
pop
iret
mov
dec
sub
push
xlat
push
sub
aad
popa
mov
push
mov
mov
gs
outsb
shl
pop
hlt
mov
push
std
ljmp
js
idivl
push
add
pop
icebp
cmp
mov
push
and
decl
aaa
mov
lods
fists
mov
sti
inc
jne
sub
jmp
mov
leave
fdivl
lret
and
sub
sub
jae
out
pushl
push
ret
movsb
loop
ja
bound
adc
mov
in
sbb
fchs
out
clc
setbe
add
inc
mov
mov
jae
mov
std
push
out
xor
mov
mov
jmp
dec
sahf
mov
pop
pushl
es
das
jnp
popf
jle
mov
xor
mov
rorb
xor
fldcw
lcall
shlb
adc
add
stos
sub
sahf
cmpsl
jmp
pop
inc
rcrb
inc
mov
mov
cld
in
mov
shll
sbb
pop
cmc
ljmp
xchg
je
add
cmp
imul
mov
jg
les
and
jbe
loopne
push
jl
sub
inc
or
lret
cmp
mov
mov
vmwrite
mov
out
sub
imul
stc
push
sar
jmp
in
subl
cmp
mov
aam
sbb
scas
repz
ret
out
mov
push
sub
xor
scas
cli
pushl
jo
out
mov
out
fisubl
cmp
dec
fwait
push
cwtl
stc
adc
add
imul
mov
ljmp
gs
pop
adc
push
or
sub
repnz
lcall
jecxz
xchg
lods
cmc
push
xchg
lcall
ja
jg
ret
dec
sbb
cmp
hlt
movsl
movsl
mov
je
sbb
sub
add
mov
pop
test
push
js
or
pushl
test
arpl
mov
loop
sbb
and
ljmp
pushl
std
movsl
leave
mov
dec
sbb
in
mov
add
and
scas
push
jmp
mov
cmpsl
inc
outsb
dec
adc
daa
dec
into
lods
fisttps
mov
mov
adc
ljmp
in
pop
ret
push
loop
int
rcll
xor
popa
aaa
sbbb
movsb
jg
in
les
and
jecxz
in
lds
mov
push
insb
subb
fsubl
ret
push
cmp
or
lcall
mov
cli
aad
lret
xor
jp
adc
mov
jp
andl
lcall
mov
push
loopne
mov
sub
test
pushf
sarl
incl
in
clc
or
outsl
push
sub
int
popa
xor
fsts
dec
mov
push
dec
mov
ss
adc
mov
adc
dec
xchg
clc
clc
popf
add
jns
rcrl
fmull
add
divl
test
sbb
fdivrs
incl
cmp
popf
push
dec
jle
fsubrs
mov
iret
push
test
inc
mov
jle
dec
outsl
cli
lcall
xor
aaa
inc
add
lret
cmp
incl
sbbb
mov
push
cmpsb
push
hlt
inc
xlat
and
xchg
mov
test
out
dec
test
sub
insb
lcall
or
dec
and
sti
dec
and
pop
mov
std
call
lds
icebp
sarl
gs
xchg
lahf
mov
out
aad
adc
pushl
andb
lods
movsb
insb
xchg
push
or
imul
jb
lret
decl
mov
sbbb
add
scas
and
sub
ljmp
add
mov
pop
sbb
inc
orb
gs
sbb
push
pop
pop
decl
xor
cltd
cmp
and
inc
clc
xchg
gs
cli
pop
fcomip
push
add
shlb
std
cmp
push
and
and
je
aam
cmp
dec
mov
lcall
push
repnz
jl
mov
or
jmp
push
inc
mov
lock
cmpsb
or
mov
int3
popf
icebp
shrb
out
pushl
jle
push
or
add
mov
inc
push
inc
les
mov
mov
jmp
dec
ficoml
or
mov
pop
mov
inc
les
jb
movsb
and
jmp
sub
data16
xchg
sub
dec
and
xchg
pop
mov
add
inc
call
es
cs
movsl
mov
loop
and
push
lcall
fbld
aad
repz
or
cmp
cmp
or
jmp
leave
sbb
sbb
jmp
scas
clc
xor
in
push
push
stc
push
movsb
mov
jge
jp
mov
dec
mov
inc
add
push
fldcw
pop
out
adc
lret
int3
mov
push
enter
call
shl
mov
sub
sbb
mov
mov
out
cs
mov
ds
pushl
pop
sarb
jbe
cmp
aaa
pushf
add
inc
fucomi
ljmp
fs
aas
or
pop
cmc
popa
stc
sbb
xor
cmp
call
jmp
add
cmp
in
hlt
or
fnstsw
push
out
dec
gs
or
dec
stos
add
jnp
movsl
test
lcall
int
add
fidivl
adc
xor
inc
dec
inc
arpl
cs
insb
sub
cmc
sbb
jmp
popa
mov
cmp
daa
push
cmp
or
xchg
movsb
dec
aam
dec
adc
jns
dec
push
mov
mov
addb
xor
push
sub
dec
fbstp
cwtl
xor
rcrl
icebp
cltd
mov
push
mov
cwtl
cmp
test
fldenv
sub
js
call
sub
sbbl
daa
mov
sbb
push
mov
sub
out
sub
dec
jnp
mov
sbb
fidivrs
jo
adc
sub
int
incl
inc
mov
pop
pop
xor
push
into
sub
xor
test
sbb
bound
inc
and
lret
jmp
or
pop
cwtl
pop
pop
cmc
cmp
and
addb
je
mov
sbb
aas
xor
into
loop
add
incl
pop
lret
pusha
ljmp
pusha
lds
fxch
fcomip
inc
in
mov
les
jecxz
insb
dec
mov
sub
mov
inc
jne
rcrl
das
mov
and
popf
sub
xchg
jae,pt
ljmp
push
jle
mulb
jle
popf
jp
push
icebp
and
dec
mov
cmpsb
add
pushl
arpl
call
jle
sahf
stos
jge
cmp
mov
xorl
fsubrl
movsl
out
cmpl
ja
push
cmp
and
mov
insb
in
xlat
pop
cmc
or
cmp
push
inc
mov
xor
out
inc
pusha
add
test
lods
imul
pop
xchg
cwtl
mov
rcl
push
inc
jg
inc
or
cltd
push
lods
or
push
or
and
jo
jns
pop
inc
imul
mov
fwait
out
add
popl
xchg
hlt
out
shrb
mov
and
sub
ret
sbb
mov
repz
jne
mov
clc
jno
std
fiadds
push
imul
inc
add
int3
mov
cmp
sub
cwtl
or
fmuls
mov
ljmp
call
insl
pop
pop
cmp
lds
add
pop
mov
pop
mov
imul
bound
push
fmuls
movsb
repnz
or
adc
mov
and
gs
out
ljmp
jecxz
add
fnstsw
ret
scas
arpl
js
loopne
pop
in
mov
out
std
fstpt
inc
faddl
ljmp
call
sub
adc
xor
repz
xchg
lahf
mov
dec
decl
add
mov
cmp
lahf
jl
call
lcall
mov
push
dec
fstpt
xorl
mov
in
dec
insb
mov
xchg
and
popf
fwait
mov
jnp
xchg
mov
sbb
mov
jp
enter
add
add
dec
lds
ljmp
xor
inc
iret
adc
fwait
jl,pn
xor
sbb
call
sbb
arpl
pop
fmull
mov
mov
aam
loop
repnz
jno
mov
ljmp
or
flds
nop
je
popa
int3
jg
xchg
fdivrp
fdivr
incl
pop
in
inc
or
mov
loop
or
sahf
mov
bound
incl
leave
xor
sbb
iret
and
pop
xor
in
cmp
fimull
insb
in
pop
mov
pushl
mov
inc
ja
ret
pusha
xchg
dec
aas
jle
cmp
ret
mov
gs
enter
lcall
out
lods
jg
mov
lret
dec
mov
int
pop
es
adc
pushl
std
inc
stos
orb
das
sbb
mov
add
jnp
sahf
inc
pop
clc
fbld
cld
std
or
orb
mov
jge
pushl
mov
dec
xor
xchg
out
jbe
test
mov
rorl
jl
aaa
push
aas
cli
adc
adc
enter
icebp
stc
shl
stos
mov
pop
mov
leave
pop
ret
mov
dec
incl
cli
fisubs
out
fxch
jne
cmp
pop
aad
adc
lods
jle
enter
out
add
adcb
jmp
stc
or
sbb
or
mov
or
sub
mov
cmp
push
jmp
icebp
fbld
loop
push
sahf
cli
mov
mov
pop
xchg
test
lods
mov
push
adc
fbstp
cld
sub
mov
ret
cld
or
incl
and
fistl
loop
cmpsl
sbb
mov
jecxz
push
add
fmuls
lock
call
jbe
jl
push
lahf
sbb
or
imul
fnstsw
add
mov
loopne
pop
mov
adc
xor
mov
lcall
jbe
int
sub
cmpsl
popf
xchg
ret
or
imul
push
sti
ficoms
popf
test
out
rorl
and
aam
rcr
inc
jl
cmp
call
mov
mov
lods
out
push
in
cmp
clc
dec
mov
xchg
call
pushl
test
in
lcall
sbb
daa
cmp
lock
xchg
out
decl
rcr
je
sti
push
lcall
jmp
mov
jmp
pushl
rorb
outsb
lcall
test
test
mov
inc
hlt
stc
push
push
decl
mov
out
adc
pop
negb
sti
fcomps
clc
aaa
jne
sub
sub
in
arpl
mov
fdivr
pushf
adc
imul
add
xchg
rorb
inc
pop
mov
inc
and
in
xor
dec
jecxz
pusha
mov
lds
sub
daa
xlat
sub
arpl
negl
sar
decl
ss
fimuls
pop
pop
scas
push
jae
insl
loop
icebp
sbb
pop
jb
test
call
xor
call
push
push
xor
std
idiv
decl
mov
sar
push
test
add
std
push
mov
or
jle
popf
lds
decb
adc
sbb
dec
out
es
or
or
std
pop
jno
jmp
xchg
cmpsb
xchg
xchg
push
mov
add
mov
repnz
dec
adc
int
jg
pop
scas
mov
xorb
push
hlt
and
mov
dec
jmp
imul
mov
ret
aam
stos
pop
adc
push
scas
mov
repnz
mov
test
dec
mov
adc
cli
call
fwait
dec
mov
aad
pop
add
inc
dec
inc
jecxz
sbb
andb
call
ljmp
call
mov
mov
jno
inc
loopne
and
push
mov
lds
fidivrl
cmp
sbb
sbb
add
data16
xchg
mov
pushf
stos
and
push
lret
fiadds
fdivs
add
inc
add
cmp
sub
cmpsb
inc
xor
xchg
imul
aam
adc
pop
pop
add
sbb
mov
cli
ljmp
jmp
in
popf
lods
es
ret
mov
ror
nop
je
pop
js
sub
pop
sub
call
push
adc
aad
out
mov
add
sub
and
ret
mov
fwait
xchg
jmp
flds
cli
inc
loop
and
pop
adc
xchg
test
mov
mov
and
sub
call
hlt
and
xchg
mov
adc
call
add
sub
ret
lcall
loope
lods
xlat
inc
push
jmp
out
cmp
call
int3
and
imul
inc
and
fldt
dec
stos
repnz
mov
push
out
jp
pop
int3
in
scas
scas
cli
loope
addr16
decl
xor
int3
ficomps
shll
shlb
adc
insl
out
mov
fnsave
jmp
jb
pop
rclb
fmuls
xchg
mov
mov
cmpsl
mov
jmp
out
js
push
mov
ss
mov
daa
shrb
loop
out
jae
mov
cmp
and
int
xor
stos
inc
popf
jne
add
call
lods
arpl
push
jnp
jnp
push
add
mov
in
lret
stos
mov
xor
cli
call
in
stos
fsubrs
incb
or
xchg
lcall
je
or
push
out
test
mov
mov
lds
cmc
out
inc
loope
xor
xor
mov
loop
sbbl
cmpsb
incl
sbb
into
movzbw
rclb
ja
lahf
or
clc
adc
lret
rcl
xor
push
xchg
call
mov
lahf
mov
push
rorl
mov
lock
inc
test
in
adc
push
dec
push
add
aaa
flds
mov
ss
and
pushl
xlat
out
insb
sti
loop
or
fs
mov
fwait
mov
imul
call
jae
mov
or
cmpb
jl
mov
hlt
sahf
or
cmpb
div
sbb
scas
lret
xlat
stos
mov
pop
cmc
jmp
mov
mov
jge
xchg
filds
into
leave
sub
push
or
ljmp
push
rclb
or
outsb
dec
fs
cmp
mov
lahf
sub
cld
push
xchg
loop
in
nop
jae
data16
imul
cmpsl
push
stc
mov
hlt
add
mov
mov
add
cmpl
mov
rcrl
inc
dec
adc
dec
stos
jnp
and
cltd
ja
jp
cmp
int
scas
jmp
sbb
sbb
cmpsb
sbb
popf
mov
loope
pop
push
xchg
pop
mov
and
dec
nop
das
push
call
fimuls
outsb
push
or
incl
pop
add
movb
push
gs
mov
jmp
push
ret
add
fadds
mov
cmp
lods
in
int
imull
xchg
mov
dec
cs
pop
cmc
or
mov
shlb
dec
jae
jns
jbe,pt
push
lock
mov
arpl
add
lods
jl
or
sbb
pop
enter
rcll
cmp
sub
ret
push
xor
std
mov
mov
adc
into
mov
mov
and
std
ljmp
ror
faddl
fisttpl
xchg
mov
cmpsl
mov
and
cs
test
incl
sbb
adc
xor
outsb
jmp
dec
cmp
fisubrl
shll
mov
cmpsl
cmc
sub
imul
fidivrs
xchg
mov
mov
mov
test
jl
rcll
arpl
push
xor
push
push
leave
fwait
add
mov
add
ljmp
incl
stos
inc
jl
pinsrw
icebp
push
sub
bound
orb
jmp
mov
decl
call
xor
test
xor
lods
outsb
addr16
ror
lcall
jmp
jmp
out
jl
fs
lock
mov
lcall
ret
mov
test
sbb
popf
mov
in
mov
and
clc
or
rorb
xchg
mov
adc
insl
mov
add
loope
cwtl
sbb
imul
sbb
sar
icebp
scas
pop
pop
xor
jmp
push
movsl
jmp
testb
add
ljmp
aaa
movsl
xor
add
aam
je
sub
sub
jo
xchg
in
jmp
sahf
int
cmc
imul
test
jge
xor
testb
xchg
adc
and
scas
cli
jmp
ret
scas
ret
std
inc
and
hlt
fnstenv
mov
fmul
arpl
mov
inc
push
mov
add
out
popa
mov
call
mov
sbb
call
std
incl
mov
lret
ss
cmp
push
and
cmp
push
xor
leave
xchg
mov
jno
in
push
in
ljmp
cwtl
adc
jp
sub
mov
xchg
js
adc
je
out
inc
xor
jp
outsl
jp
out
inc
mov
fisubrl
mov
roll
pop
faddl
xlat
xor
jg
pushf
xchg
sahf
stos
jecxz
xor
insb
add
mov
fstpl
arpl
dec
sbb
div
in
jns
dec
mov
lods
imul
mov
stos
add
insl
insl
cmp
call
jae
pushf
push
push
mov
mov
dec
je
inc
mov
fdiv
call
int3
xchg
ljmp
call
pop
outsb
and
sti
mov
xchg
or
ror
dec
pop
or
aaa
push
cli
in
mov
inc
ror
xor
jle
cmpsb
add
pop
mov
in
push
fistpll
xchg
pop
jo
fwait
and
mov
fimuls
push
test
push
and
insl
in
or
fld
mov
mov
xor
cmp
sbb
jle
outsb
fs
sti
ss
lahf
lcall
mov
jg
loopne
stc
rcll
push
aad
xchg
jns
mov
lock
mov
sub
inc
xchg
ds
inc
adc
scas
es
sub
clc
jb
and
cmpsl
cmp
pushl
sbb
pop
decl
jns
pop
push
xor
inc
push
out
test
push
xchg
int3
jbe
mov
jmp
jecxz
xchg
mov
mov
pop
insl
mov
repz
int
stos
movsb
sub
xchg
xchg
xchg
cli
fdivrs
xchg
aam
xor
or
or
pushf
mov
movsb
jge
ss
push
xlat
xchg
insl
mov
cmc
fistps
inc
bound
xor
test
push
mov
lahf
idiv
jmp
and
dec
and
mov
jmp
test
sub
repz
pop
jge
arpl
lcall
sbb
add
or
popa
jae
fdiv
xchg
sub
hlt
rol
daa
jecxz
and
call
shll
adc
mov
sub
jecxz
bound
das
cmpsb
aaa
cmp
call
sbb
fbld
inc
aaa
int3
add
jp
push
adc
aad
adc
dec
jg
jg
xchg
test
jnp
jmp
mov
shr
mov
daa
les
or
incl
stc
lds
dec
push
dec
xlat
and
dec
mov
pushf
sbb
es
jae
dec
sti
mov
xchg
and
jg
cmpsb
jmp
das
pushf
fdivl
jbe
enter
pop
xchg
mov
adc
out
cld
rcr
out
ja
dec
mov
inc
pop
test
jmp
int
sti
mulb
js
sbb
sbb
imul
xor
and
jge
and
add
xchg
cmpsb
and
fisttpll
jmp
dec
jl
push
arpl
out
sahf
stos
pushl
xchg
jb
jnp
testb
out
jmp
mov
and
insb
icebp
cmc
cmp
mov
test
aas
out
stos
gs
mov
cwtl
pushf
fisttps
imul
repnz
cmp
xor
mov
idiv
jle
jae
pop
int3
push
mov
rolb
adc
pop
int3
loopne
ljmp
jmp
std
cmp
cmc
sbb
inc
std
mov
fidivs
sub
xchg
out
in
jle
cmpsl
pop
cwtl
lods
jns
adc
sub
sbb
adc
push
cmp
fnstsw
lcall
fcoml
add
jae
push
and
in
sarl
loopne
pop
mov
inc
dec
mov
call
add
shll
push
cmp
xchg
scas
gs
popa
mov
jg
push
cmp
stc
movsb
cmc
and
out
ljmp
rclb
loopne
jg
sbb
testb
add
aaa
in
cmpsl
std
jmp
mov
xor
cmp
fisubrl
dec
nop
adc
xchg
inc
xchg
test
xor
mov
sub
jg
cmc
ljmp
pop
cmp
pop
stc
insb
inc
cmc
adc
jnp
push
gs
push
imul
cwtl
int3
cmc
add
xor
std
jbe
or
mov
in
call
das
daa
jbe
add
aaa
xchg
sbb
cmp
ljmp
test
sar
xchg
or
sbb
mov
testb
cmpsl
ljmp
call
xchg
sub
fisttpll
mov
or
sbb
inc
ja
clc
mov
ljmp
mov
xchg
dec
pop
inc
adc
and
scas
jnp
aaa
popa
xor
cmp
jmp
aaa
mov
dec
adc
lcall
test
sar
xor
repz
lcall
push
cmp
cmpsb
ja
cwtl
into
pop
cmpsb
mov
mov
clc
jl
sbb
mov
cld
mov
mov
mov
dec
push
incl
cmp
pushf
lcall
and
dec
cltd
pop
aaa
imul
lcall
mov
std
lcall
data16
sbb
emms
mov
int3
test
in
jmp
sbb
inc
decl
add
cmpl
sbb
sbb
stc
mov
je
mov
bnd
dec
push
mov
jo
fs
mov
sarl
pop
push
push
call
mov
jne
es
adc
loope
sbb
int
and
inc
mov
ljmp
dec
push
cmp
or
bound
in
imul
int
push
mov
insl
push
aam
and
call
loope
fisubrs
ficomps
add
outsl
cmpsl
adc
cmp
stos
repz
pop
into
ds
lcall
hlt
sbb
mov
lret
cmp
sub
test
mov
mov
fcomi
call
lock
push
inc
lahf
or
outsb
filds
in
inc
loop
fistps
adc
int3
jo
popa
ret
addl
divb
outsl
scas
dec
enter
decl
or
push
out
pop
mov
out
xor
sbbl
hlt
ljmp
mov
lret
mov
mov
xlat
lock
lds
pop
sub
push
cmc
test
cwtl
cmc
xchg
lock
ret
push
fdivl
mov
pushf
jge
inc
shlb
ja
movsb
js
popf
push
ds
insb
adc
inc
xor
jg
js
std
add
cmc
add
mov
mov
pop
imul
jne
ljmp
push
clc
jne
fdivr
ljmp
in
mov
sbb
movsl
shll
cmp
fisttpll
lds
dec
mov
push
ljmp
mov
loope
aas
inc
cmpsl
in
jecxz
or
push
push
xor
jg
jmp
aas
sbb
pop
cmp
stos
jne
add
jae
cltd
dec
test
jecxz
pushl
mov
fidivrs
inc
cmp
mov
sahf
lret
mov
ret
mov
adc
cmp
push
setb
sbb
outsl
and
mov
xchg
cmpsl
lcall
out
sbb
fsubrs
fs
jnp
out
mov
fsubl
sub
and
in
xlat
fdivrl
ljmp
and
test
pop
mov
ljmp
push
adc
cld
decl
mov
jmp
sub
push
iret
xlat
data16
int3
ljmp
pop
sbb
xchg
mov
outsb
push
push
gs
inc
sub
add
jo
fdivl
sbb
subb
lea
jp
je
stc
stc
inc
push
jl
incl
push
lret
inc
sbb
into
xchg
fnstsw
mov
pop
cwtl
in
scas
sub
push
and
dec
js
iret
pusha
xchg
mov
jl
or
cmp
mov
stos
and
sar
pushl
scas
mov
imul
mov
mov
adc
push
stos
mov
pop
int3
pop
xchg
push
sbb
xchg
cmc
lea
dec
xchg
fdivl
jbe
xor
enter
pop
clc
in
or
sub
stc
mov
and
add
xchg
out
test
dec
sub
cmp
cmp
adc
pop
and
out
mov
mov
dec
in
sti
mov
call
icebp
fcmovnb
lods
and
fcoml
dec
sub
jle
mov
sbb
ret
inc
insb
push
inc
mov
in
push
testb
cmp
mov
mov
les
iret
scas
mov
mov
mov
add
mov
mov
jl
xor
add
push
outsl
cwtl
pop
decl
mov
mov
loopne
popf
cmp
sub
sub
orb
data16
pop
lock
stc
ljmp
je
shll
mov
push
scas
xchg
adc
aaa
std
ljmp
adc
outsl
pop
mov
jnp
aad
movsb
cmp
cltd
mov
stos
push
jmp
xchg
mov
lods
xchg
dec
repnz
repz
decl
dec
leave
dec
jno
arpl
mov
xchg
incb
arpl
pop
out
ljmp
jns
cli
btc
sub
cmp
rorl
ffreep
pop
pop
popa
push
incl
div
div
jbe
stos
mov
jl
xor
negl
call
bound
std
ljmp
bound
pop
lcall
stc
inc
add
and
int3
mov
ja
xchg
adc
cs
mov
jnp
cmp
cmp
mov
pushl
add
jl
mov
xchg
xchg
rorl
mov
lock
and
ljmp
mov
pushl
enter
sbb
jno
pop
pop
jae
lahf
mov
mov
pushl
mov
sub
test
xchg
jle
and
xchg
dec
mov
out
je
aaa
out
out
incl
inc
xchg
xlat
dec
stos
jge
sbb
arpl
mov
cwtl
pop
inc
xor
pop
mov
sar
pushl
or
pop
repnz
inc
leave
insb
ror
pop
mov
out
ljmp
ret
outsb
popf
or
mov
adc
sti
icebp
mov
mov
mov
pusha
fisttpll
dec
movsb
sub
xchg
enter
es
and
stos
nop
in
out
aaa
mov
ljmp
je
pop
fisttpl
push
inc
cmp
inc
jns
mov
and
bound
cmp
outsl
clc
incl
pop
push
cwtl
stc
loopne
pop
lods
lahf
test
xor
cmp
stos
ja
leave
xor
sub
rorb
xchg
pushf
ret
popa
rcrb
cltd
out
jp
adc
call
ss
imul
cmp
mov
stc
pop
lea
popf
popa
sbb
ffree
dec
inc
jge
arpl
mov
fsubr
cmpsb
xor
pop
mov
sbb
js
inc
js
add
ljmp
adc
les
cmp
xchg
xor
in
xor
and
cmp
add
ljmp
sub
lcall
pop
push
jg
cmp
and
sub
add
jg
es
ja
mov
test
lcall
mov
xchg
and
cmp
sub
clc
std
xchg
jnp
lret
xor
je
mov
mov
pushl
push
daa
add
fsubrl
xlat
daa
push
call
mov
jbe
subl
call
pop
in
lods
and
test
fsubrs
push
popa
movsb
mov
ljmp
rcll
pop
ret
stos
lret
setae
jg
cli
sbb
sub
cmp
pushl
cmpsl
loop
jg
cli
cmpsb
inc
sub
mov
jb
xor
or
and
clc
sub
test
add
lods
fildl
fidivrl
ljmp
or
mov
jle
fimuls
lret
pop
and
mov
loopne
or
rcrl
mov
dec
inc
stc
jne
cmp
scas
lcall
pushf
cmpsb
mov
sub
mov
push
and
ja
incl
adc
xor
mov
add
xchg
mov
fldcw
pop
incl
decl
jg
aaa
mov
sub
ljmp
popf
and
data16
lcall
popa
mov
add
icebp
nop
xchg
pop
ret
push
push
mov
xchg
and
mov
add
stos
add
dec
mov
int
out
incl
dec
and
sbb
mov
mov
imul
push
inc
in
cld
lds
lock
fs
std
incl
popa
mov
nop
jg
clc
ret
fistpll
ret
imull
in
push
jp
lock
mov
adc
lret
xlat
mov
jmp
push
ljmp
cmpsb
pop
popa
int3
jo
int3
cmpb
adc
ljmp
in
mov
insb
addr16
fisubrs
xchg
push
inc
loope
mov
dec
andl
sub
mov
lea
push
lret
mov
inc
push
loop
out
jno
and
in
add
scas
sbb
fsub
cmp
fbstp
mov
loopne
dec
adc
je
fisttpll
dec
mov
dec
jmp
jp
outsl
cli
out
clc
sbb
mov
ja
push
in
arpl
push
int3
and
ljmp
push
jmp
in
inc
call
mov
imul
loopne
ljmp
out
ja
dec
dec
mov
jg
inc
adc
jmp
mov
in
incl
add
or
or
mov
out
mov
cmp
in
push
adc
adcl
rorl
mov
push
jno
not
xchg
push
popa
std
aaa
cld
and
rclb
pop
nop
inc
icebp
dec
fsubs
fstpl
xchg
incl
hlt
mov
sbb
pop
mov
xchg
fidivrl
cli
in
test
outsl
cld
jo
pop
inc
jp
jg
fisubl
test
fstpt
mov
les
dec
jae
inc
jg,pt
lcall
xor
mov
jae
insb
sti
outsb
adc
push
or
ud2
mov
in
lcall
push
xchg
dec
js
and
xchg
xchg
ror
daa
sub
ret
cmp
jmp
sub
inc
stc
push
rorb
jg
sbb
aad
and
incl
ds
cmp
cmp
adcl
mov
ret
jl
aad
jg
mov
ljmp
cmp
mov
fcmovb
cmpsb
ss
out
data16
loop
xchg
xor
or
xorb
das
or
add
test
xorl
xlat
psrld
lret
cmc
outsl
cli
scas
sbb
mov
or
sbb
jp
nop
stos
fistpll
adc
sarb
lret
xchg
jnp
jecxz
imulb
sub
xlat
xor
lcall
mov
cli
xor
repnz
jle
add
adc
mov
add
incl
cs
cmpsb
aad
mov
cwtl
mov
loope
ss
test
repz
clc
add
popa
pushl
cmpsl
and
pop
jno
test
lock
sub
bound
sbb
call
xchg
cmp
scas
loop
icebp
gs
les
dec
ret
repnz
add
xor
incl
xchg
jge
loopne
mov
test
jno
jecxz
push
imul
xchg
dec
xchg
out
aaa
std
incl
add
sbb
scas
dec
pop
mov
ja
leave
lds
xchg
out
dec
decl
pushf
dec
mov
les
mov
popa
movsl
sti
rcr
xor
push
std
mov
data16
mov
lret
mov
jmp
fnstcw
ljmp
jge
fdivr
ret
aas
call
xor
test
or
mov
das
mov
mov
icebp
xor
mov
loope
inc
and
mov
andl
lahf
sbb
and
pop
mov
pusha
cld
jbe
test
movsl
pop
dec
es
imulb
ret
rcr
insb
xlat
pop
mov
push
decl
adc
xchg
iret
or
mov
mov
xor
fidivrl
scas
cmp
inc
fidivl
pushf
inc
pop
xlat
mov
mov
outsl
pop
or
cmp
jns
clc
fs
test
iret
jno
iret
aas
loopne
fdivl
lahf
mov
call
decb
fistps
movsb
fcoms
ljmp
jno
or
enter
call
sbb
cld
cmpsb
outsb
pusha
ficoml
inc
sub
cmc
fwait
sub
mov
sbb
mov
in
cmp
adc
out
dec
pushw
mov
sbb
mov
mov
lret
lods
xchg
stos
lock
testl
fwait
rol
stos
mov
fistl
mov
dec
inc
mov
call
push
cmpl
mov
push
clc
hlt
decl
lcall
sar
inc
pextrw
lea
jg
jmp
pop
movsb
sbb
cs
ljmp
xchg
pop
or
hlt
in
nop
push
or
cmp
clc
pop
inc
sbb
push
fwait
sti
icebp
cmp
loope
out
lret
in
mov
cmp
rol
mov
jmp
ds
xor
out
stos
out
out
cmpps
stos
and
test
jecxz
repnz
mov
lds
add
data16
mov
sahf
repz
jg
inc
add
inc
push
ljmp
pop
or
push
out
and
mov
out
mov
loop
fwait
in
dec
jns
inc
sbb
movsl
shrl
ljmp
adc
mov
inc
out
rolb
sbb
outsb
cmc
cmpsb
sbb
popf
sbb
push
sbb
call
loope
out
jg
xor
adc
jecxz
scas
or
add
and
lret
adc
xchg
jl
xor
in
or
insl
jle
or
or
fcoms
decl
inc
mov
stc
out
lds
dec
push
pop
scas
push
sbb
out
in
insb
pop
or
push
lcall
pop
es
push
aaa
dec
scas
stos
repnz
cltd
incl
cld
aaa
jae
and
cmp
shlb
sub
loop
pop
jp
jnp
jge
jns
add
popa
loopne
jb
popf
push
push
test
pop
xchg
mov
jge
decl
adc
loope
shrl
xchg
jns
add
imul
sub
cmp
pushl
dec
xor
vmwrite
xor
fsts
movsb
mov
movsl
fstl
scas
ret
lock
call
adc
dec
mov
inc
push
call
adc
les
rorl
or
gs
or
loopew
call
stc
xor
xchg
cmp
sbbl
out
push
xchg
xchg
bound
repnz
out
jmp
ljmp
inc
xor
pop
popa
sbb
or
cmp
int3
shlb
out
test
icebp
dec
shll
stc
xor
lock
je
sbb
pop
daa
adcl
gs
and
add
push
and
call
sbb
cmp
mov
nop
popa
inc
jle
xchg
jg
repz
xchg
mov
adc
mov
pushl
lahf
stc
sti
or
lea
add
pop
sarw
and
data16
jp
sarb
fmull
lcall
xor
adc
sub
pushl
push
or
push
pop
pop
bound
xchg
add
cmp
xor
dec
cmp
sub
mov
fwait
jmp
sbb
sub
dec
add
divb
adc
lret
sbb
xchg
iret
lcall
xor
setae
aaa
xchg
sarb
repz
pop
bound
mov
sbb
inc
cmpb
je
orl
cmpsl
enter
negl
call
call
adc
cmpl
xchg
aaa
mov
xor
ret
out
cmp
lcall
hlt
fdivrl
imul
add
icebp
adc
push
and
fcomip
jg
in
test
enter
xchg
test
in
jg
call
testb
pop
sub
pop
fmulp
fimuls
inc
add
sbbb
lods
ljmp
sbb
or
mov
lds
inc
mov
in
push
call
cmp
roll
cld
rcl
mov
testb
das
loop
jnp
rcll
dec
icebp
push
test
or
pop
mov
sbb
xor
nop
addr16
jecxz
and
xchg
int
inc
gs
mov
sub
inc
movl
add
mov
loop
or
cli
ljmp
push
aam
mov
jmp
mov
in
dec
and
mov
je
pop
sti
pop
cmp
orl
or
ljmp
xor
inc
jb
cmc
mov
push
push
mov
xor
push
pop
test
rcrb
outsb
clc
call
and
sbb
les
pop
imul
cmp
jle
lcall
ljmp
xchg
dec
mov
jg
cmpsl
or
push
das
jnp
xorb
jno
test
adc
gs
notb
sub
jl
test
test
loop
and
decl
dec
and
fnsave
adc
xor
adc
dec
mov
jns
fsubrs
jo
dec
mov
pop
xor
aaa
mov
fs
imul
jg
jmp
sub
je
xchg
and
ffreep
roll
and
xchg
fsubr
and
sti
mov
daa
mov
pop
je
loopne
pop
stos
mov
jle
push
int
test
fsubl
cmc
lds
push
inc
cmp
mull
in
decl
cmpsl
bswap
sub
or
push
adc
out
xchg
hlt
dec
pop
jl
jg
fcmovb
or
jns
inc
mov
sub
paddsb
hlt
repnz
inc
ret
nop
movsl
pop
add
shl
int3
cmpsb
add
ss
jmp
mov
add
sti
les
push
outsl
xchg
pop
mov
loopne
into
lcall
lcall
and
xchg
jmp
ss
sbb
into
addr16
movsl
hlt
xor
ljmp
pop
push
decl
js
sbb
add
pop
add
mov
lret
mov
and
imul
aaa
ret
inc
sbb
mov
mov
ljmp
mov
mov
xchg
ja
cmpsl
push
iret
inc
sti
out
icebp
sbb
lret
jnp
mov
pushl
and
or
clc
xor
aas
dec
jecxz
pop
mov
xchg
test
jle
ljmp
enter
dec
xchg
sbb
sbb
int3
gs
bound
and
inc
sar
decl
inc
faddl
lret
iret
int
loop
push
cltd
adc
call
jl
cmpsb
mov
jne
mov
add
and
das
cmc
mov
push
fistps
sub
mov
inc
sub
add
jb
repnz
testl
push
test
mov
xchg
mov
addr16
enter
nop
out
sbb
cli
push
fimull
lret
test
fstpl
subl
adc
and
pushl
add
push
dec
sbb
and
or
pop
adc
add
inc
mov
in
xor
lahf
mov
mov
xchg
pop
mov
fwait
and
jbe
mov
jmp
jb
lret
hlt
xchg
aaa
dec
test
mov
sbb
or
imul
and
cmpsb
xchg
insl
mov
cmp
lock
and
dec
in
fnstsw
test
aaa
ds
xor
add
ljmp
xor
xor
mov
mov
scas
mov
ljmp
adc
mov
cmp
shrb
mov
jb
dec
mov
pop
popf
scas
ds
add
mov
cmp
mov
xchg
sarl
in
jge
movsb
scas
jmp
add
in
mov
les
push
movsl
dec
sbb
decb
std
xor
inc
aas
loope
orb
enter
iret
dec
popa
xchg
mov
add
dec
lcall
cwtl
dec
insl
rclb
xlat
and
sbb
clc
test
lods
aaa
lods
cmpsb
shlb
jmp
lods
lret
or
xchg
dec
ret
or
outsb
sub
jb
pop
je
clc
xchg
popf
in
fcomip
dec
insl
shll
lock
ds
out
jge
sarb
sarl
lcall
rorb
and
jmp
sbb
mov
call
cli
push
push
mov
popf
call
xchg
pusha
insb
mov
out
xchg
into
sbb
lcall
es
xlat
fdivp
mov
and
popa
mov
mov
mov
call
out
fwait
lret
push
popf
add
add
rcrb
cli
and
adc
xor
ljmp
inc
mov
int
mov
cmpsl
jno
inc
inc
push
cmpsl
iret
clc
js
fs
jmp
lods
out
es
sub
out
sbb
push
jo
dec
ret
lods
push
neg
or
add
ljmp
mov
cwtl
fldcw
in
popf
push
mov
cmp
cld
xchg
jnp
call
rclb
daa
leave
pop
pusha
sub
popf
ror
fists
sub
sbb
ljmp
inc
jae
lds
sbb
jecxz
fdivrl
jb
add
sbb
sbb
iret
fmull
adc
stc
adcl
sbb
cmp
movsb
xor
xchg
mov
aaa
jmp
lods
gs
jp
sbb
faddl
das
hlt
xor
pushf
fs
cld
ret
xchg
fbld
shr
dec
out
lcall
out
mov
mov
mov
dec
out
add
decl
data16
mov
jl
xorl
and
jne
fcoms
cmp
fsubrs
stc
dec
pop
or
mov
faddl
outsb
repnz
les
cwtl
popf
movsl
mov
push
mov
and
decl
test
lahf
gs
and
mov
fwait
sub
int3
inc
cmpsb
or
xor
std
pushl
mov
jge
lods
clc
daa
mov
jbe
arpl
rorb
ss
pushl
push
ljmp
outsb
adc
cmpsl
int
lock
aaa
rcll
jg
aas
fwait
cmp
mov
jbe
test
xchg
lods
cmp
adc
adc
mov
fwait
sbb
cwtl
pop
jg
jl
xor
push
jmp
mov
and
and
ljmp
sti
or
daa
inc
cmpsl
dec
adc
mov
in
andb
rcl
pop
incl
or
shlb
push
rcrl
jne
imul
mov
sbb
push
hlt
call
addr16
mov
sbb
div
movsb
jg
stos
cmpsl
dec
push
test
je
cld
incl
mov
pop
push
or
pushl
dec
cli
mov
fwait
cmp
xchg
cmp
shll
insl
cmp
inc
push
divl
es
call
inc
cmp
and
imul
xchg
mov
ficomps
add
fdivl
cmp
leave
jg
dec
enter
in
flds
xlat
push
std
sub
scas
out
or
jo
pushl
sbb
cmpsl
leave
sub
pop
push
addl
push
inc
lds
clc
sbb
ljmp
mov
adc
fnstsw
pop
movsb
sahf
les
or
and
pop
jge
sbb
sbb
test
dec
pop
fcomip
adc
push
sbb
mov
push
jl
mov
or
ljmp
in
pop
popa
mov
hlt
insb
or
or
testl
xor
jg
incl
pop
call
cmp
in
enter
es
inc
in
or
enter
jp
pop
cmpsl
mov
or
addl
xlat
dec
push
sti
test
jecxz
fdivrp
adc
add
jne
in
pushf
mov
cmp
pop
fcoms
fadds
loope
addb
pusha
and
decl
xor
mov
xchg
xchg
pop
roll
int3
mov
mov
sub
insb
call
push
ds
push
mov
pop
outsb
mov
jl
push
jbe
inc
sti
test
or
cld
out
idiv
mov
mov
mov
push
pop
sub
je
pusha
jbe
sbb
pushl
sbb
in
icebp
arpl
fs
sub
shl
loopne
push
movsb
mov
out
rolb
std
call
jle
lret
dec
or
cmp
dec
pop
mov
inc
shll
push
push
out
aaa
call
push
xor
and
push
sub
mov
jge
mov
les
call
sar
ljmp
cmpsl
rorl
sub
lea
push
push
popf
lret
sub
lcall
jl
lods
adc
andb
mov
fildll
add
push
ljmp
or
int3
mov
ljmp
push
jmp
jge
fs
movsb
lcall
sub
pop
xchg
test
xchg
mov
xor
add
jle
dec
pop
pop
push
mov
jle
pop
dec
and
push
mov
lcall
sbb
inc
mov
pushl
adc
jb
mov
dec
mov
popa
shll
int3
mov
pushl
mov
cmc
ss
adc
sub
pusha
fstps
lea
mov
cmp
negb
bound
fdivs
insb
shll
add
xchg
test
pop
xchg
sar
clc
jmp
push
mov
test
in
mov
mov
sub
insl
sbb
or
adc
mov
faddl
das
idivl
and
loope
pop
and
or
mov
rcr
jo
fldl
fldenv
in
jl
fwait
rcll
push
sub
sar
lcall
inc
cld
or
mov
das
fsub
cmp
cmp
mov
stos
jg
pushl
sbb
jp
jmp
out
adc
nop
inc
cmp
xchg
or
jmp
pop
sub
mov
adc
sbb
jne
add
pop
xor
mov
scas
cli
incl
test
mov
inc
adc
inc
jno
adcb
std
scas
push
push
test
addr16
arpl
insl
sub
mov
pop
test
insl
clc
push
repnz
addb
sar
pushl
add
pop
idivl
mov
push
inc
movsb
xor
mov
std
ljmp
outsl
pop
leave
xchg
scas
push
sti
call
lock
jl
clc
mov
jb
stc
push
lock
imul
cmp
jo
dec
stc
fdivl
hlt
inc
pop
or
ljmp
out
push
pop
jg
mov
or
mov
adc
sbb
sub
mov
insb
fadd
push
xchg
mov
in
aad
mov
or
jb
or
jmp
ljmp
add
out
addr16
jbe
sub
pop
or
xchg
push
add
inc
repz
or
in
mov
jmp
shlb
es
add
call
or
push
mov
and
sbb
inc
dec
in
icebp
mov
mov
aas
imul
call
mov
xor
cltd
mov
sbb
dec
jbe
inc
adc
jp
test
mov
out
shl
jb
das
dec
testb
outsb
adc
pushl
stos
dec
push
dec
icebp
leave
xchg
adc
aam
mov
mov
cmp
xor
imul
push
mov
adc
add
jb
fildll
std
movsb
inc
das
adc
sbb
lods
mov
pop
sarb
pop
sub
ret
mov
into
and
insl
icebp
cmp
stos
andb
pushl
xchg
push
add
ds
in
aad
pop
xor
imul
aad
call
ret
push
out
sub
outsb
fcomip
mov
out
outsl
out
loopne,pn
xchg
daa
cmp
mov
or
rclb
push
mov
push
sub
divl
fcmovu
or
push
out
ret
decl
int
mov
inc
xchg
rorl
cmp
xchg
es
and
xchg
ss
push
call
cltd
xchg
incl
jmp
sub
jno
mov
ljmp
adc
decl
daa
mov
sub
fisubrs
repnz
cmc
jl
call
std
jnp
shrl
push
mov
xor
xchg
rcrb
mov
lds
ljmp
cmp
lods
shlb
cmpsb
mov
idivb
adc
pop
xchg
lods
jp
cmp
sbb
loop
ljmp
mov
scas
xor
cmp
cmp
aad
push
adc
mov
fadds
mov
add
xor
imul
mov
cmp
sbb
jne
test
mov
push
mov
xchg
jnp
ljmp
ss
clc
decl
incb
lcall
test
xor
mov
inc
cmp
decl
or
ret
pop
push
scas
sarl
cmp
sbb
mov
in
and
sbb
adc
xchg
add
ja
push
loopne
rolb
cltd
push
push
jbe
mov
call
jns
xchg
adc
xor
pusha
dec
jbe
adc
xor
and
iret
fiaddl
popa
mov
js
dec
lcall
lods
out
in
dec
mov
or
ds
mov
pusha
mov
sarb
out
test
mov
imulb
sbb
cmp
ficoms
mov
mov
scas
test
cmpsb
cmp
idivl
sti
cmp
push
xor
movb
out
jg
mov
test
jmp
fwait
jl
call
pushl
cmp
repz
mov
xor
dec
cmp
sbb
ljmp
xor
cmpsb
inc
int3
rcll
in
sub
push
jbe
call
or
call
cli
cmp
cmpsb
test
cli
int3
aas
rorb
jae
sub
add
pop
loop
dec
push
jp
mov
xor
and
push
lret
leave
inc
adc
scas
xor
cltd
adc
and
outsl
test
or
js
sub
ljmp
dec
aam
mov
xor
es
lahf
shrb
mov
movsb
push
xchg
cmc
pushl
daa
mov
int
jmp
repnz
jo
cmpsb
ds
sbb
push
xor
dec
adc
pop
dec
outsb
int
or
pop
xor
jb
add
jmp
sbb
push
fisttps
jo
testb
orb
mov
hlt
ljmp
faddl
aaa
and
aam
push
movsb
add
and
xor
pop
into
adc
pop
inc
movsl
rorl
cwtl
aam
xchg
add
nop
aad
repz
orl
fdivrp
ljmp
dec
and
fidivrs
xorb
in
pop
sub
cltd
andl
gs
inc
pushl
xor
addr16
jo
push
outsl
xor
sbb
gs
jne
lcall
popf
or
xor
jg
pop
pop
xor
inc
aad
lds
incl
cli
mov
or
and
test
lods
aam
add
testl
cld
pop
std
fwait
push
push
jecxz
lahf
gs
mov
cld
push
dec
sahf
mov
ljmp
aas
xor
pushf
in
imul
lahf
sbb
inc
out
or
fistpl
push
jnp
pop
pop
cmp
mov
icebp
sbb
stos
mov
call
fbld
incb
lock
out
ljmp
pop
sbb
xchg
insl
stc
jno
inc
sti
hlt
bound
mov
adcl
leave
stc
repnz
xor
jecxz
pop
cmp
shrl
pop
adc
call
mov
call
adc
inc
imul
mov
push
push
clc
inc
pop
xchg
scas
sbb
lahf
stc
xchg
pop
jo
and
jg
dec
sar
jmp
std
mov
adc
mov
and
bsf
cmp
stos
addb
xchg
cmp
loop
dec
lcall
cmpsb
hlt
testb
ss
sub
jmp
mov
sub
adc
adc
mov
lcall
call
fldt
rcl
and
pusha
aaa
cli
insl
dec
hlt
sub
jle
mov
cltd
xor
idivl
dec
or
fcoms
leave
int
mov
jno
adc
aas
fbld
decl
ss
mov
lcall
out
xor
dec
xchg
fistl
rcrb
lcall
mov
or
mov
cmpsl
or
push
inc
sbb
decl
mov
and
or
std
dec
out
sahf
push
pushf
popf
jge
arpl
adc
mov
fcomip
jge
gs
ljmp
pop
sti
out
das
mov
mov
push
sbb
int
xorb
movsl
lods
add
rolb
addr16
call
jecxz
pop
xor
out
cmp
pushf
fisttpl
mov
hlt
aas
loop
ljmp
rcr
cmpsb
inc
pop
mov
test
lcall
sbb
lcall
or
inc
push
das
inc
test
add
bound
mov
loop
xor
jmp
mov
mov
pusha
lcall
mov
jbe
sub
push
inc
xlat
mov
pop
into
mov
inc
sub
push
xlat
pop
dec
mov
push
cmpsb
ret
clc
in
sub
cmp
subl
repz
cmpsb
sub
jmp
outsb
cmp
sbb
adc
hlt
lahf
push
dec
int3
sbb
fnstcw
xchg
jle
push
jg
movsb
pop
xor
sub
adc
dec
lret
shl
andb
mov
dec
sub
negb
xor
mov
fldcw
mov
aas
push
cwtl
in
fsubl
cs
xor
shrb
out
jmp
push
jl
mov
pop
loope
pop
add
fistps
in
push
push
add
sub
pop
pop
or
std
push
popf
jmp
fs
inc
or
popl
popf
shl
sub
sbb
lcall
xchg
jns
mov
in
mov
push
inc
imul
xchg
dec
jae
in
rcr
jne
adc
loopne
scas
std
repz
jbe
pop
popf
adc
ljmp
mov
fisttps
jge
push
adc
out
addr16
cmp
popl
push
sub
xchg
dec
das
push
jmp
push
or
in
mov
sahf
or
nop
bound
mov
pop
ljmp
pop
xlat
add
movsl
mov
or
jmp
popa
sarb
lahf
lea
lods
mov
jmp
lds
scas
popa
pop
out
cmp
in
das
sti
pusha
xchg
and
fxch
push
pushl
call
or
ret
repnz
fidivrl
insb
scas
mov
insb
adc
push
dec
decl
jo
mov
rcll
mov
cmp
leave
ret
add
mov
call
div
inc
fdiv
sbb
push
fisubl
mov
push
and
jmp
test
mov
and
xor
push
ljmp
popa
cld
insb
lcall
cmp
insl
fs
lods
sbb
pop
push
push
pop
jl
mov
push
add
mull
push
jecxz
jo
dec
mov
call
js
rcll
pop
stos
xchg
mov
shll
pushl
int
jg
sti
mov
cmp
mov
cmp
mov
sahf
inc
lret
sub
aaa
cmpsl
addl
fbld
test
pop
dec
xchg
sub
cmp
stos
pop
fwait
xor
clc
decl
sub
push
stc
jbe
je
out
pop
sbb
and
cli
sub
clc
and
incl
cmp
ss
jge
jge
pop
dec
xchg
das
push
jle
inc
inc
xchg
addr16
mov
test
mov
xchg
adc
jae
push
aad
repz
je
xor
fisttps
inc
push
test
jns
add
mov
fdivr
pop
testb
xor
call
push
adc
inc
pushf
push
xchg
sahf
sbb
mov
dec
cld
mov
cmp
pop
inc
push
cmc
add
call
negb
aam
ds
lods
in
imul
stc
adc
nop
sti
clc
cltd
loop
testl
incl
mov
ret
mov
cwtl
dec
aam
popf
sub
add
add
stos
mov
out
jb
cli
mov
push
mov
iret
jecxz
daa
sti
jp
cmp
out
iret
cmpsl
imulb
lret
cmc
icebp
ljmp
inc
psubsw
mov
pop
cmp
xchg
sub
push
inc
add
and
and
aaa
fcoml
add
jmp
push
sbb
jl
or
adc
and
insb
outsb
jnp
lcall
inc
scas
dec
popf
jno
addr16
mov
push
cltd
jno
lahf
mov
pusha
dec
cmp
decl
and
mov
or
jl
mov
jb
lods
out
dec
add
adc
pop
push
ret
js
mov
xorl
ljmp
outsb
sub
scas
and
decl
lods
inc
or
nop
adc
push
je
jo
pop
xor
outsl
lock
repz
lret
ljmp
pusha
repz
cmp
cltd
inc
pop
arpl
test
lret
insl
mov
fistl
dec
sub
ret
adc
incl
pop
ficoml
cwtl
or
xchg
addr16
aas
pushf
repnz
mov
xor
incl
icebp
mov
pop
cmp
jp
or
xor
mov
decl
imul
xor
jl
jne
xabort
xchg
scas
sar
jg
popf
pop
sub
mov
jmp
pop
adcl
or
mov
call
das
dec
fidivrl
adc
mov
outsl
shl
xchg
in
pop
dec
out
mov
incl
pop
in
mov
mov
push
sub
xor
lahf
lahf
dec
repnz
pop
jbe
fcoms
call
gs
cmpsb
dec
repnz
gs
inc
gs
sub
fildl
decl
push
cltd
jns
incb
xchg
inc
out
jbe
jl
loop
push
in
incl
cld
into
shlb
jmp
mov
fcomip
jecxz
mov
rorb
pop
mov
fiadds
inc
xchg
lods
pop
sarl
or
mov
jg
fimuls
data16
test
addb
mov
mov
jmp
dec
xchg
test
call
sbb
decb
xlat
enter
lcall
insb
inc
ficoms
imul
cmp
add
inc
sbb
int
fidivl
jmp
jecxz
xor
mov
add
stos
mov
mov
sub
incl
faddl
push
sbb
andl
sub
push
ficoml
test
jno
mov
xor
fcmovb
xchg
rorb
pop
mull
addr16
push
test
sar
pop
push
les
or
add
inc
enter
or
pop
and
es
mov
pushl
mov
fbld
sarl
xor
les
or
ja
or
push
xchg
inc
gs
leave
pop
fdivr
call
call
adc
lods
xchg
mov
or
dec
jge
rol
dec
rcr
dec
scas
dec
dec
out
push
jmp
mov
cmc
mov
mov
jl
add
loop
lcall
push
incb
fcompl
mov
mov
rol
or
int3
scas
push
adc
jne
jmp
xchg
into
aad
movsl
int3
stos
and
jns
sbb
lock
adc
xor
popw
cld
pushl
ds
and
adc
xorl
decl
imulb
inc
aad
mov
aam
scas
adc
in
out
pop
loopne
xchg
lcall
sbb
popa
add
mov
shlb
xor
pushl
andl
xlat
gs
call
pop
add
mov
jp
aaa
push
je
xchg
cmp
jb
xlat
orl
ja
decl
imul
std
clc
cwtl
mov
rorl
lahf
add
xor
insl
loope
mov
call
dec
enter
xchg
mov
mov
shrl
cld
sbb
jmp
pop
cld
incl
lea
pop
push
data16
lods
dec
push
ficomps
orl
adc
mov
fsubs
shrl
lret
inc
xor
icebp
cltd
dec
in
pop
test
cs
inc
fadds
lcall
jae
stc
adc
repz
mov
mov
cwtl
in
add
lahf
mov
mov
jbe
xor
ja
sar
dec
jmp
inc
out
mov
out
mov
fcomps
sarb
inc
clc
ljmp
and
in
popf
push
sub
nop
ss
push
push
jb
jno
push
xchg
mov
ljmp
out
mov
push
das
mov
cmp
fs
shll
cmp
cmp
and
incl
inc
loopne,pt
stos
mov
inc
lds
into
loopne
mov
scas
rclb
scas
add
mov
mov
and
sar
movsl
loopne
mov
add
pop
mov
cli
repz
xor
fwait
push
je
and
mov
xor
dec
lret
inc
cmpsb
iret
jecxz
mov
push
out
or
decl
call
adc
dec
push
inc
lods
ja
in
xchg
fiadds
sbb
pusha
sbb
mov
add
adc
jae
pop
or
pop
inc
test
ljmp
lcall
into
mov
pushf
jb
fs
mov
cmp
mov
out
popaw
jmp
ja
push
xchg
addr16
xchg
int
ljmp
adc
pop
pop
aas
push
xor
outsb
fwait
sbb
and
inc
je
addr16
in
jo
decl
sti
popf
dec
inc
rcrl
adc
and
shlb
call
call
and
xor
sbb
popa
iret
and
ljmp
xchg
pop
mov
jle
ss
ljmp
jmp
aad
aas
or
push
pop
or
subb
adc
xor
cmp
cmp
jno
jo
das
mov
push
out
loopne
jg
mov
and
int
imul
xchg
jge
push
push
dec
orl
lret
pushl
pushf
mov
test
gs
mov
mov
xor
or
push
cwtl
adc
js
shr
fs
hlt
out
stos
addr16
in
fcomps
pop
nop
fidivl
jle,pt
dec
pushf
jmp
and
repz
inc
mov
xor
scas
ret
test
mov
cmpb
ror
incl
inc
pushf
mov
aas
jnp
stc
shl
cmpsl
stos
xorl
ret
jne
fists
push
xchg
cwtl
pop
fwait
insb
push
cmpsl
incb
xchg
fsubrs
out
add
mov
decl
lock
sbb
cltd
mov
test
sbb
roll
scas
loop
decl
xlat
es
cmp
inc
mov
lods
jmp
mov
and
xor
push
and
icebp
sbb
adcl
nop
xchg
ja
sahf
stos
cmpsb
dec
push
loopne
inc
aam
cmpsl
fisttpl
xchg
pop
sub
push
xchg
xor
mov
mov
xchg
adcb
and
push
jo
push
aaa
std
push
or
lcall
adc
push
mov
add
cmpsb
lret
rclb
lcall
push
adc
dec
cs
inc
pop
std
insl
inc
jnp
scas
or
pop
loopne
decl
cltd
inc
rclb
cmp
and
pop
les
dec
ja
scas
and
sti
jge
sti
negl
inc
in
push
inc
std
ret
mov
or
or
cmp
in
ret
aas
call
xchg
dec
jle
sub
popa
pop
outsb
loope
jl
std
outsb
mov
push
push
jmp
and
add
cs
jmp
xchg
fcmovbe
sbb
outsb
xor
add
mov
loope
xchg
cld
sub
cmpsb
andb
lcall
sbb
scas
iret
xchg
jno
mov
lret
fistl
jns
sahf
lds
adc
xchg
jg
jmp
or
inc
ret
sarl
jmp
mov
fs
mov
decl
push
inc
movsl
test
jb
sbb
mov
lahf
out
arpl
adcb
popa
scas
fisubs
decl
loop
je
mov
repnz
fucomp
insl
mov
sti
sbb
or
push
shlb
test
incl
lcall
mov
pusha
rolb
jne
cmp
xor
add
jmp
mov
popa
and
dec
pop
int
mov
pop
sub
addl
jbe
or
jecxz
rcrl
jg
stos
inc
mov
leave
jbe
pop
notb
pop
imul
pushl
pop
popf
lods
adc
mov
arpl
popf
push
pop
jnp
xchg
cmp
test
xorl
decl
loop
dec
xor
fwait
lock
sub
mov
adc
mov
jmp
adc
mov
jo
dec
clc
incl
lahf
es
sub
in
cmc
push
pop
push
cld
cmpsb
leave
aaa
loopne
aaa
ds
movsb
or
lcall
das
jae
sub
push
sub
enter
pop
shl
ficoms
lock
cmpsl
add
add
cs
push
cs
pop
mov
sbb
lea
lods
cs
cmp
xchg
mov
fcompl
jge
mov
hlt
dec
std
test
pop
mov
push
push
fwait
scas
xchg
test
mov
jmp
jmp
mov
mov
fistpll
dec
iret
add
rcr
cmp
call
xor
dec
sbb
inc
xor
nop
fidivs
xchg
adc
call
lods
sbb
in
add
outsl
ds
jbe
daa
and
mov
mov
hlt
sbb
addl
test
decl
pushf
sbb
dec
xchg
and
loope
add
mov
and
outsl
ja
xchg
fistl
xor
jmp
pop
das
lret
mov
stc
adc
cltd
mov
jg
call
jle
cs
out
ss
aas
inc
call
int
add
xchg
inc
jno
cmp
scas
aas
jle
cmc
jo
lcall
sub
and
out
jo
sbb
mov
fadd
pop
loop
dec
xchg
nop
movsl
jl
mov
mov
pop
inc
mov
mov
ja
pop
jp
mov
aam
aam
or
mov
xor
add
mov
incl
mov
xor
in
mov
test
xor
or
pop
or
jnp
dec
lret
sahf
add
incl
cs
inc
xor
sar
xchg
scas
mov
and
inc
mov
fwait
pop
mov
dec
rorl
pushl
jge
jge
fnstcw
leave
jns
and
in
sahf
out
dec
adc
out
pop
mov
cmp
dec
sub
jbe
clc
rcpps
popa
imul
mov
xchg
scas
fcoms
or
lods
pushf
icebp
into
sbb
jg
ljmp
pop
dec
cmp
add
push
mov
imul
jns
fimull
push
in
mov
cmp
cmp
jmp
pop
daa
lea
loope
mov
jp
cltd
push
jle
aas
dec
in
or
icebp
pop
in
outsl
sti
pop
and
call
pop
pop
int
dec
mov
faddl
lods
cmpsl
mov
sub
lret
pop
aas
xchg
sbb
jg
out
add
bndstx
scas
or
push
jne
pop
or
xor
cld
dec
mov
fwait
xchg
push
pop
pop
mov
aam
and
iret
je
and
lcall
xor
imul
icebp
int
std
pop
xchg
sti
xor
aas
mov
jbe
aaa
outsb
pushl
or
ljmp
push
es
xor
pop
dec
loopne
out
cs
and
jg
xchg
aam
out
fcomip
outsl
fmulp
in
mov
sub
cwtl
jns
daa
add
cmc
jg
pushl
mov
jecxz
in
cli
inc
and
sahf
mov
and
jno
rcll
lret
or
fdivl
cld
add
decl
in
ffree
hlt
ljmp
decl
cs
mov
jle
jbe
dec
pop
mov
lods
testl
lock
or
loop
pop
popf
cmp
lds
xor
xor
stc
test
add
incl
adc
ljmp
lock
or
leave
sarl
or
sbb
in
cmp
incl
ret
cs
inc
adc
js
jno
decb
push
mov
aaa
aam
add
xor
adc
sbb
repnz
or
scas
add
mov
aas
shrb
mov
das
jb
and
scas
mov
hlt
cmp
push
addr16
ljmp
push
sbb
movsl
enter
es
std
sub
loope
cmp
lcall
lret
inc
ss
pop
lahf
adcl
mov
cmp
push
fildll
lock
incl
cld
mov
in
dec
insl
in
pusha
bound
push
jle
daa
lods
sbb
lret
mov
lret
mov
or
ret
cld
rclb
xchg
int3
lds
dec
jge
sbb
inc
mov
aad
sub
mov
daa
adc
push
cwtl
pop
cmp
movsb
jg
jg
in
add
pop
fwait
push
cmp
push
dec
mov
sub
shlb
mov
mov
cmp
sbbb
frstor
movsb
xor
call
sub
int
fimull
add
fisttpl
xor
push
dec
stc
mov
jmp
mov
inc
dec
jp
pop
fsub
loop
stc
dec
adc
out
cmpsl
jecxz
daa
jecxz
add
decl
outsl
pop
mov
enter
sbb
push
push
xorl
incl
and
lods
mov
sbb
xor
cld
push
cmpb
mov
jg
decl
loopne
add
in
data16
add
or
test
push
pop
test
sub
sub
and
mov
pop
xor
cmp
push
int3
test
decl
fucomp
adc
out
shlb
xchg
cwtl
rorl
and
pop
mov
jmp
bound
cltd
es
and
pop
imull
jnp
dec
mov
pop
sar
fldl
lret
mov
cmpsb
decl
incb
mov
mov
jns
test
xchg
jecxz
jae
push
mov
jmp
and
xor
fwait
stos
jg
cmp
mov
fnsave
push
dec
pusha
fsubs
cli
incl
push
test
dec
outsb
push
clc
push
xchg
or
int3
inc
add
ljmp
mov
adc
and
icebp
push
les
sbb
sbb
xchg
mov
cli
stos
pushl
xchg
popf
insb
sub
out
insl
adc
mov
je
in
xor
adc
lods
int3
icebp
mov
addr16
mov
push
xchg
sub
int
inc
add
or
jmp
sahf
sahf
cld
sub
mov
dec
dec
icebp
rorb
fnstsw
push
mov
push
inc
leave
and
xor
jb
fisttpll
sbb
lahf
sbb
push
pop
and
scas
gs
add
inc
lds
mov
fs
sbb
pop
cmpsl
inc
rclb
push
call
sbb
or
iret
clc
in
lcall
mov
lahf
fbld
sahf
fsubrs
jge
mov
push
pushf
lcall
pushl
in
mov
imul
ficompl
dec
rcll
cli
push
push
pusha
ret
mov
or
cmp
loope
mov
and
cwtl
cmp
and
ljmp
shl
lcall
in
stos
mov
sbb
cwtl
mov
stos
mov
dec
lcall
fdivrl
in
sbb
lcall
pop
aam
scas
push
jmp
dec
xor
cmpsl
call
dec
xchg
push
xchg
incl
pop
sti
sub
lock
push
sub
repz
dec
sahf
dec
mov
lcall
imul
xor
lock
jmp
cmp
movsl
sbb
inc
inc
or
xor
sub
sbb
sub
inc
sahf
loope
lret
incl
cmovbe
sbb
out
inc
fadds
lret
mov
test
fs
ljmp
fildl
xchg
int3
clc
adc
daa
push
lods
sub
inc
aas
or
incl
fcoml
mov
mov
inc
fiaddl
cmp
adc
jl
xchg
jb
pop
daa
test
pushl
cmp
std
cld
pop
push
lock
inc
cmc
lods
jo
add
and
ds
jb
inc
jle
out
sub
and
or
shlb
and
decl
and
xchg
aad
inc
mov
arpl
or
fcoms
test
popf
incl
es
test
pop
xchg
jb
cmc
rol
outsb
jnp
cmp
xchg
adc
sub
hlt
pushf
mov
stc
or
aad
dec
or
shl
nop
cmp
loop
incl
es
jecxz
aaa
mov
sub
xchg
jnp,pn
int3
cmp
adc
mov
call
loope
and
fstps
sbb
outsl
in
mov
inc
es
jle
jne
cmpsl
hlt
add
decl
xchg
pop
adc
into
mov
add
cmpsb
inc
and
insb
pop
or
cwtl
decl
outsb
icebp
or
ljmp
ficoms
jbe
xchg
das
sbb
sbb
imul
pop
xchg
jecxz
jns
adc
js
loope
icebp
xchg
out
inc
pop
insb
pcmpeqd
lea
jmp
dec
subb
pop
mov
jmp
or
test
aas
push
lods
int
pushl
and
xchg
sbb
rolb
jae
mov
aas
not
and
push
lods
sti
jno
lret
enter
in
xorl
scas
fildll
movsb
push
adc
xor
into
out
xchg
cmp
decl
in
jp
lcall
push
jmp
dec
xchg
cmc
je
xlat
ja
mov
decl
hlt
xchg
stc
jae
mov
pop
xor
and
cwtl
sti
movsb
jmp
push
mov
push
dec
ret
and
mov
jl
fstpl
inc
sti
dec
push
mov
mov
jne
xor
xlat
xchg
insb
sar
cmp
stos
inc
cmp
int
mov
mov
jo
repz
dec
mov
pop
push
jmp
cs
and
ret
les
dec
xchg
push
xor
ljmp
outsb
icebp
dec
mov
cmp
pop
push
fsubrs
rcl
sbbb
xlat
adc
call
pop
scas
and
push
mulb
mov
andb
movsb
jbe
cs
jmp
in
pushf
xchg
sub
mov
movsb
jmp
mov
pop
xor
jns
or
xlat
push
outsl
rorl
sbb
call
gs
pop
push
mov
and
fists
out
xchg
pop
xor
inc
jbe
jmp
mov
call
pop
xor
fiadds
dec
es
ss
jmp
scas
sub
push
aam
fs
lahf
xchg
or
lret
dec
js
jbe
mov
das
nop
shll
push
popl
mov
std
idivl
pusha
ljmp
fmuls
mov
jb
lods
ljmp
fcoms
dec
push
ss
adcl
iret
mov
test
cs
jbe
push
ds
mov
test
data16
fisubrs
add
imul
sub
incl
pop
xchg
mov
push
and
shll
ret
je
aaa
jmp
clc
jmp
adc
mov
cmpsl
add
aaa
hlt
stc
insb
movsb
xchg
pop
mov
test
add
stos
cmp
in
mov
xchg
sbb
repnz
call
arpl
lcall
or
scas
aad
outsb
cmpsl
mov
subl
mov
push
xchg
in
cmpsl
nop
enter
lcall
fsubrs
jae
push
pop
or
cld
repnz
int
mov
cmpsb
nop
aaa
lcall
pop
dec
or
out
mov
inc
mov
inc
xchg
cld
je
lods
or
mov
or
testb
hlt
jns
xor
inc
aas
js
push
pop
dec
xchg
je
fnsave
cmp
sahf
jmp
lcall
xor
lret
push
adc
out
jl
dec
leave
shlb
lret
or
ret
mov
outsl
jae
or
pop
cmp
fwait
pop
or
xchg
decl
xor
ss
jl
cltd
sti
ljmp
xor
push
and
call
mov
cmp
fwait
aaa
arpl
std
or
fs
mov
ljmp
ds
in
push
repnz
hlt
adc
mov
and
pop
ljmp
lcall
inc
sub
rclb
scas
push
mov
incl
mov
not
dec
lahf
xchg
add
sbb
xor
or
lret
lock
sbb
jnp
sbb
jb
repz
fcmovnu
pushl
or
or
sub
scas
ljmp
lods
inc
je
nop
test
and
pushl
mov
lods
sbb
mov
insb
rolb
xor
fcomip
xor
dec
ss
push
ljmp
jmp
or
ret
fisubl
into
test
test
dec
xor
sub
jg
lcall
mov
outsb
lds
outsb
xchg
cmp
cltd
jp
scas
sahf
jmp
cmp
xchg
ss
andb
pop
loop
sub
aas
xchg
dec
or
js
mov
jmp
loopne
insb
cmp
xor
sbb
pop
cwtl
mov
dec
or
jg
add
sbb
and
xchg
lods
jle
mov
aam
insb
inc
out
es
jnp
xchg
clc
es
xor
pop
loopne
in
sbb
adc
push
pop
add
add
scas
cmp
popf
add
inc
pop
ja
push
loop
mov
outsw
jns
mov
je
lcall
dec
test
mov
mov
sbbb
inc
mov
dec
jmp
cld
push
out
andb
jmp
movsl
cs
and
mov
test
hlt
pop
and
cmp
mov
fcomip
cmp
int3
addr16
inc
cmc
ljmp
cmpsl
dec
xchg
in
inc
adc
call
imul
test
ret
pushf
stos
cltd
jle
pop
mov
lcall
sbb
dec
dec
andps
rol
jmp
or
push
mov
sub
incl
divb
or
imul
dec
test
test
xchg
movsl
mov
dec
jmp
pop
call
movsl
stos
pop
mov
imul
jmp
pop
or
add
and
mov
push
std
decl
push
adc
sti
sub
pop
xor
mov
adc
push
mov
test
cmp
push
lret
cmp
sub
adc
sti
je
jg
inc
fldcw
in
adc
jle
repz
data16
pop
rcr
jno
mov
jmp
lods
lcall
adc
push
jne
stc
push
pop
ret
ret
adc
mov
ljmp
adc
popa
in
mov
les
push
lahf
pop
in
or
lcall
jnp
popf
cmp
mov
scas
mov
lock
xchg
call
ret
incl
xchg
adc
test
pop
xchg
shrb
xor
xchg
xchg
lahf
or
pushl
pop
test
mov
icebp
push
xor
rcrl
outsl
pop
jns
cmp
jbe
jmp
decl
lock
out
daa
pop
jae
add
jg
loope
push
xchg
jmp
es
out
imul
add
xor
jbe
ss
out
mov
imul
pop
inc
in
mov
and
subb
inc
inc
decb
bound
push
call
mov
fs
dec
mov
pop
stc
xchg
or
mov
push
push
cmpsl
push
add
je
inc
pusha
inc
mov
inc
popa
ficoml
sbb
test
pop
mov
cld
mov
or
pop
sti
mov
jmp
jo
xor
int
pushl
out
fildll
repz
ss
in
icebp
fs
jle
cwtl
push
or
cmp
pushl
mov
popa
pop
test
add
pop
fldlg2
ds
fwait
shll
jmp
aas
mov
or
fs
ficompl
adc
aad
mov
pop
jb
xor
nop
lcall
add
ljmp
lea
inc
cmpl
test
sub
pushl
fst
mov
jge
ret
mov
clc
movsb
cld
stos
add
pop
ljmp
lret
inc
sub
push
cmp
cltd
enter
pop
xchg
xchg
push
or
ljmp
xchg
jge
jbe
add
outsb
imul
out
sbb
or
call
dec
loope
repnz
loop
roll
add
leave
xlat
xchg
aas
lock
mov
and
jmp
sti
out
push
or
mov
xchg
ja
sbb
fs
sub
add
dec
stos
cmp
dec
mov
cmc
xchg
jecxz
inc
xchg
mov
popf
js
scas
cltd
popf
mov
movsl
xor
cwtl
jecxz
inc
adc
mov
in
add
jb
sti
mov
jns
xor
sbb
lcall
push
loopne
outsb
and
popa
fs
out
lock
and
add
mov
gs
mov
lods
inc
int
add
jg,pn
in
push
push
sub
in
pop
xchg
in
movsl
lock
mov
lods
jg
addr16
pop
sub
mov
sbb
outsb
add
jl
mov
mov
adc
mov
adc
inc
stos
sbb
adc
sahf
sbb
decl
and
adc
pushf
pusha
lret
mov
out
cmc
adc
inc
cmc
sub
es
add
aam
imul
sbb
or
aaa
pushl
xor
imul
jae
cmp
xor
sbb
push
sub
in
out
jb
lcall
ljmp
xor
mov
adc
test
out
int3
push
ljmp
shlb
mov
or
int
fdivrs
sahf
xchg
rcrw
xor
insl
rcrl
jne
pushf
rclb
cltd
jmp
pusha
and
mov
stos
jmp
imul
and
mov
mov
ljmp
push
lcall
xlat
inc
pop
stc
xchg
cwtl
test
arpl
std
movsl
je
sub
lods
jo
adc
sbb
pop
and
ljmp
mov
mov
mov
cmp
hlt
mov
hlt
adc
gs
jmp
ljmp
xor
ja
xchg
hlt
and
dec
test
mov
add
sub
fidivs
dec
cld
clc
testl
mov
jns
aad
xor
scas
ja
mov
dec
or
out
mov
mov
rol
ds
jb
call
mov
and
add
loopne
xchg
mov
mov
pop
cmp
jl
sbb
mov
jns
push
cmp
rcrb
incl
popa
stc
adc
sbb
stc
lret
cmc
mov
sbb
out
mov
adc
pop
cli
sub
cmp
divl
xor
insl
mov
popf
sbb
sbb
pop
jno
je
and
sbb
fsubrl
inc
sar
cltd
cwtl
push
dec
rorl
dec
movsl
fidivl
lcall
sbb
xchg
stos
jne
lar
movsl
enter
mov
cmp
fcos
call
bound
cmp
pop
mov
imull
dec
outsb
nop
mov
addr16
sub
movsl
or
decl
pop
in
mov
or
xchg
es
dec
pop
adc
adc
icebp
mov
mov
jno
daa
ret
dec
rcrb
xlat
pop
xchg
inc
dec
das
cmpsb
jge
outsb
inc
push
add
incl
js
lods
jns
xlat
je
loop
insb
lcall
pushf
fstps
in
jns
dec
adc
ret
fcomip
cmp
mov
and
les
mov
inc
lods
push
mov
jmp
pop
cltd
jo
dec
mov
dec
xchg
cs
lcall
lret
and
call
sub
and
mov
push
jae
cmp
jg
fdivp
mov
cli
sub
out
mov
mov
cmp
loopne
adc
call
mov
pop
subb
push
push
jecxz
jbe
and
push
dec
ss
ljmp
mov
mov
inc
mul
lahf
sarb
fsubr
or
add
xorb
sub
fdiv
add
incl
push
sub
shlb
push
inc
xor
sub
xchg
xchg
iret
xor
xchg
adc
outsl
clc
jmp
pop
addr16
jp
or
fs
add
repnz
inc
xchg
jmp
out
cmc
mov
outsb
mov
decl
movsb
ss
xor
sti
cmp
and
mov
js
sub
push
pop
movsl
rclb
or
imul
test
inc
sti
popa
int3
loope
stc
cmpsl
cmp
jecxz
loopne
adc
ljmp
cmp
dec
ret
mov
mov
sbb
push
add
mov
test
push
push
scas
push
insl
push
out
sub
xchg
push
mov
xchg
lds
mov
outsl
fimuls
aas
sbb
jle
xchg
int3
inc
lock
pushl
mov
pusha
xor
inc
fidivs
sub
movsb
ficoms
add
xchg
inc
mov
imul
decl
outsb
xchg
imul
add
dec
cli
mov
icebp
lcall
cmp
aas
xchg
filds
leave
gs
jmp
scas
mov
jl
es
fisttpl
aam
neg
test
push
cmp
repz
pop
hlt
push
dec
mov
lds
test
repnz
cmpsl
or
orb
jmp
and
sbb
enter
mov
push
je
cmp
pop
sar
lcall
bound
int
arpl
mov
fcmovbe
inc
push
testb
scas
in
pop
mov
fcmovnb
pushf
xor
xor
mov
negl
enter
pop
mov
dec
rclb
inc
imul
pop
xchg
sub
call
pop
and
pushl
and
into
mov
cmp
add
and
test
lahf
in
in
roll
mov
dec
xchg
mov
mov
lock
and
stc
test
add
push
aaa
cld
cmp
xchg
daa
jns
pop
sbb
lock
idiv
call
loopne
ljmp
inc
rcl
mov
jo
fstl
fcoml
mov
xor
mov
int
in
das
jae
loope
mov
mov
mov
cmpsb
add
push
inc
inc
pop
sub
test
add
dec
nop
push
dec
inc
out
cmp
sbb
ljmp
fldpi
imul
test
outsb
cwtl
loopne
test
pop
arpl
incl
dec
dec
and
mov
xor
jnp
mov
inc
xor
shl
xor
pop
icebp
sbb
push
mov
negb
adc
cmp
mov
or
push
xor
fmul
cmpsl
js
and
popa
mov
cmp
outsl
push
adc
ljmp
xchg
mov
jbe
shl
adc
dec
int
jmp
outsb
push
ljmp
in
pop
or
aaa
mov
pop
pop
push
rclb
call
call
add
jne
xchg
out
and
cld
jle
mov
jmp
in
test
loop
test
in
clc
jne
in
mov
dec
xor
into
push
dec
fnsave
jl
in
adc
call
aam
xchg
fists
pop
sbbb
xor
imul
push
sub
xor
inc
push
leave
pop
add
xorb
outsl
add
mov
mov
push
push
push
mov
in
push
rolb
lcall
and
hlt
and
add
or
int3
mov
sbb
or
imul
mov
cld
or
sub
mov
cmpsl
iret
jb
jno
imul
push
jae
lds
dec
jmp
int
andl
or
pop
outsl
lods
dec
fdivrl
dec
dec
jmp
jle
ljmp
add
shll
push
ret
sub
add
test
rep
mov
sub
cmp
or
out
xchg
lock
nop
popa
mov
jne
xor
xor
push
in
call
iret
daa
push
mov
cld
or
sub
and
mov
sbb
mov
call
jb
add
pop
inc
sbb
into
and
dec
in
mov
mov
adc
les
lds
cmc
lcall
lds
pop
nop
in
push
sub
or
hlt
mov
idivl
mov
loope
fmul
push
jnp
or
dec
aas
sbb
popf
movsl
xlat
sub
xchg
aad
push
mov
inc
mov
inc
cld
and
in
inc
cwtl
xlat
mov
push
jge
jg
enter
fs
mov
ds
jo
jns
lock
jle
mov
mov
dec
mov
movsb
loope
lods
les
decb
xor
cli
sarl
mov
je
mov
jno
loope
ret
mov
or
jno
mov
decl
push
ret
pop
enter
pushf
add
push
cmpsb
cmp
test
xchg
roll
shll
divl
and
pop
cld
call
mov
jl
mov
xor
test
jp
ds
mov
sub
sti
stos
cmp
dec
push
imul
clc
enter
inc
call
dec
adc
adc
xchg
push
inc
incl
push
pop
mov
iret
push
adc
mov
movsl
dec
mov
push
repnz
mov
lods
sahf
cwtl
mov
sbb
mov
ss
xor
cmp
popl
inc
and
or
scas
lcall
adc
es
mov
sarb
scas
fistpl
ljmp
cmpsb
cmp
and
and
fbld
xor
cmp
mov
push
push
jae
movsb
push
repnz
pop
es
outsb
out
sbb
out
cli
cld
movaps
cmp
rcrl
scas
ss
js
inc
in
jl
ljmp
adc
pushf
jae
sar
decl
mov
shll
lds
dec
sub
jl
xchg
mov
lods
dec
roll
icebp
and
xchg
pop
fldcw
sub
jge
sub
call
add
fistl
fsubl
insl
xor
pushl
sahf
xlat
out
movsl
das
push
push
xor
out
dec
add
adc
jp
loop
into
scas
pop
pushf
incl
in
dec
mov
push
or
data16
xor
ss
push
sbb
icebp
ret
call
push
aad
fidivl
sub
mov
pop
int3
int3
daa
cltd
xchg
cmpsl
movsb
ja
mov
out
add
xor
loopne
pusha
orb
push
in
xchg
or
cmp
testl
xchg
mov
jne
adc
push
icebp
and
cli
cs
int3
dec
pushf
popf
outsb
or
lock
xchg
jg
jmp
add
das
inc
frstor
loop
out
push
cld
loopne
aaa
mov
mov
push
ficoms
inc
pop
scas
cmpsb
xchg
inc
xor
add
in
jge
jecxz
cmpl
dec
push
xor
sub
call
bound
dec
imul
aaa
fidivs
dec
int
jbe
sub
test
jb
fstcw
popa
pop
sbb
inc
les
xor
outsl
pop
pop
sub
neg
ror
fbstp
lcall
push
mov
ret
jl
and
aas
mov
stc
dec
fcomip
cld
pop
inc
sbb
sbb
loopne
and
repz
lock
or
pop
mov
lods
out
sub
pop
pop
stos
push
jecxz
jg
and
or
xchg
mov
int
lods
push
test
ljmp
sbb
add
sbb
mov
cmpsl
repz
incb
xor
test
xchg
sub
dec
lcall
xchg
pop
test
sub
and
imul
push
mov
neg
leave
clc
incl
adc
fcoms
jno
mov
pop
and
inc
ljmp
popf
iret
pop
stc
mov
xor
cmp
cmpsb
pop
push
imulb
xor
pop
adc
lcall
push
pop
icebp
aaa
add
ds
mov
xchg
cs
shlb
and
cs
dec
xor
imul
jle
mov
or
aaa
leave
je
or
cmpsl
outsb
mov
sar
incl
clc
xlat
movsb
push
or
pop
shrb
push
sbbb
lods
ud1
in
aaa
out
or
sub
cmc
xchg
andb
jl
int
cmp
xor
shrl
ljmp
jmp
add
xchg
arpl
and
in
movsb
cmp
idivl
cmp
popf
ljmp
ret
xchg
mov
lds
pushfw
push
xor
test
mov
int
lds
sbb
adc
fs
cmpsl
or
adc
outsb
shrl
call
mov
jmp
jge
in
pop
lods
cmp
call
fcmove
mov
stos
lcall
xor
cmp
jmp
cmpsl
in
jb
aam
scas
bnd
push
or
inc
inc
jg
push
mov
shl
fdivr
call
lcall
je
dec
roll
or
push
jmp
dec
incl
lahf
js
xchg
inc
sub
fdivrl
loop
jne
pushf
push
add
or
cmpsb
decl
test
mov
sahf
mov
push
jle
stos
addb
jecxz
push
stc
out
pop
fidivs
inc
incl
push
fwait
mov
adc
sbb
mov
stos
and
fistps
sarb
aam
xorl
jb
lcall
pop
loopne
mov
mov
popf
inc
pop
jae
shlb
mov
and
sbb
dec
push
mov
mov
imul
dec
jbe
mov
push
jle
addl
shlb
mov
jbe
or
and
loopne
or
ljmp
lea
insb
jbe
inc
scas
push
and
jle
jb
daa
mov
dec
xchg
mov
rcrb
cmp
stos
push
jbe
addr16
pop
cltd
filds
out
push
or
outsl
call
jne
dec
andb
mov
cmp
jmp
inc
outsb
inc
mov
sub
adc
adc
ljmp
test
mov
or
adc
push
push
out
fsubl
das
call
inc
push
or
lcall
aas
in
mov
lahf
xchg
call
xchg
lret
call
adc
sub
fs
inc
jo
lret
inc
call
movsb
pushl
insb
mov
push
mov
inc
mov
sbb
cwtl
mov
mov
mov
push
lcall
pop
sbb
fcomi
push
repnz
xchg
cmc
inc
fdivl
inc
cmc
mov
in
xlat
pushf
inc
ja
lcall
mov
and
loope
or
push
cmp
sbb
push
out
cli
jmp
inc
aas
jno
sub
add
adc
negl
lods
stos
push
inc
negb
sti
jo
fs
add
enter
jns
mov
or
shlb
and
adc
incl
adc
adc
dec
inc
inc
shrl
mov
in
gs
lcall
cld
dec
dec
push
subl
add
je
sub
pushf
aas
mov
or
mov
mov
mov
mov
push
mov
jg
push
fmul
adc
jge
jmp
or
xchg
pextrw
jbe
lods
xchg
cmp
add
ljmp
push
movsb
fs
scas
cwtl
sub
stos
adc
ret
inc
and
mov
cmpsl
or
mov
jg
ljmp
adc
rorl
mov
sarl
mov
aaa
mov
dec
dec
arpl
cmp
or
push
jle
les
or
test
aas
cmpsl
pop
mov
cmpsb
stos
rorl
push
dec
test
pop
ror
imul
pop
jg
loope
loopne
call
clc
sub
jb
push
adc
and
mov
pop
push
push
pushl
pop
daa
cmpb
pop
sbb
call
sbb
stc
dec
push
jo
sub
ds
subl
pop
xor
rcrl
loopne
add
mov
mov
push
or
mov
mov
cmp
mov
mov
jl
stos
push
test
lcall
cmp
scas
inc
push
pop
sbb
ja
push
pop
or
mov
or
outsl
clc
push
push
push
subb
cmpsl
pop
and
xor
scas
imul
test
inc
inc
int3
or
fwait
out
cwtl
sbb
push
adc
pushf
and
add
inc
es
fcomip
sbb
jnp
stos
in
mov
pop
cmp
sub
cli
and
ret
lcall
js
xor
xchg
call
jae
pushf
jmp
es
mov
test
add
cli
push
aam
xchg
adc
pop
pop
cmp
jge
mov
out
pop
adc
std
cmp
inc
jo
test
stc
jns
es
pop
xchg
test
pop
cmp
sub
xlat
insl
mov
or
inc
addb
mov
pop
test
inc
pop
mov
clc
sub
xchg
jb
push
mov
xor
or
loopne
push
sub
sub
rclb
dec
les
outsb
sbb
sahf
sub
data16
mov
jne
and
pop
add
inc
adc
adc
xchg
notb
icebp
sbb
pop
andb
lock
pop
call
sub
pop
iret
addl
aaa
ret
push
jge
pop
imul
jmp
push
sbb
es
jo
ljmp
out
push
pusha
push
or
xor
pop
stc
pop
dec
push
bound
loop
add
pop
inc
sub
inc
pop
jl
mov
dec
jns
sbb
mov
mov
or
es
test
imul
movsl
mov
sub
adc
clc
inc
sbb
sbb
mov
and
add
mov
xor
fsts
out
cs
adc
outsl
dec
call
cmpsb
cmp
addl
xchg
pop
xchg
outsb
or
arpl
adc
imul
addr16
sahf
lcall
lds
sub
jmp
cmp
jecxz
scas
add
xchg
and
clc
fnsave
add
mov
cli
bound
lret
sub
scas
rolb
loope
sub
movsb
push
lcall
mov
int3
sbb
jge
orb
mov
fsubs
jge
xchg
shll
ljmp
movsb
insl
mov
xchg
inc
outsb
xor
mov
stos
daa
mov
mov
scas
mov
pusha
mov
sti
jmp
xchg
pop
cmp
out
fsubrs
fists
jge
mov
mov
fiaddl
call
cmp
pop
jo
in
dec
dec
xchg
or
jg
xchg
stos
pop
lods
sahf
inc
add
xor
sbb
cmp
push
or
jg
mov
stos
decb
outsb
pop
cld
stos
sub
lods
ss
adc
cmp
jmp
jns
add
inc
in
sti
mov
xor
int
dec
mov
faddl
sub
and
insl
stos
cwtl
mov
inc
loop
and
cmc
mov
jmp
aam
pop
xlat
cmp
mov
or
jb
sub
add
cltd
mov
cmpsb
lock
jmp
adc
push
jb
xchg
push
dec
sbb
lock
lahf
mov
adc
cld
jg
mov
jne
das
dec
fnstsw
push
mov
cld
insl
sub
andb
pop
jg,pt
jecxz
andb
lcall
sub
mov
leave
sub
sbb
pop
push
push
insl
lods
imul
mov
int
gs
and
fs
mov
and
pop
mov
pop
decl
pushf
lret
jmp
int3
xlat
xchg
xor
jae
jns
pop
popa
sub
in
or
adc
xor
mov
icebp
loopne
sti
in
fisubrs
add
decl
xorl
jle
movsb
aas
sbb
mov
xor
fcompl
gs
and
and
call
sahf
pop
jb
xchg
jmp
pop
push
xchg
sbb
int
aad
ss
mov
mov
fcomip
cmp
shll
ret
mov
test
inc
sub
pop
fdivr
ljmp
mov
xor
add
cltd
idiv
je
jmp
inc
pusha
lea
or
mov
clc
jmp
mov
loope
xchg
mov
retw
lcall
jl
ret
das
outsl
sbb
push
shll
cmova
adc
out
mov
cld
imul
stc
sbb
mov
xor
arpl
sub
pushl
mov
cmp
js
push
into
movsb
rep
orb
jae
in
aaa
mov
jmp
pop
sub
test
insb
test
dec
xor
sub
and
stos
dec
pop
fdivrs
cs
jg
decl
inc
dec
loop
sbb
mov
sti
bound
pop
aaa
pop
xor
push
ljmp
les
outsb
sub
cld
and
add
mov
in
divl
jo
imul
jle
inc
or
test
pushf
jge
push
mov
mov
push
test
cmp
jo
test
jnp
je
push
add
lds
les
movsl
mov
push
fs
xor
decl
popf
and
arpl
jge
out
or
adc
add
sahf
jno
in
ljmp
mov
pop
sbb
out
fsubrs
aam
sti
cmp
xchg
jl
dec
jle
leave
pop
mov
scas
cmpsb
inc
fisttps
xlat
add
roll
pop
pop
mov
inc
fstpt
inc
add
divl
into
sub
inc
arpl
imul
test
scas
cli
decl
jne
mov
pop
mov
pop
std
lock
sub
and
scas
adc
sbb
inc
test
addr16
movsb
loop
push
clc
test
mov
pushl
mov
jnp
negb
sbb
xchg
adc
testb
fsubl
call
mov
xchg
int3
xchg
loop
mov
jmp
repnz
fcmovbe
jns
xchg
adcb
sbb
mov
dec
out
icebp
loop
cli
dec
sub
cmpsb
sub
sbb
hlt
sub
push
gs
mov
jnp
cmpb
incl
inc
xorl
mov
mov
fldenv
aas
adc
jle
addb
cwtl
movl
sar
push
hlt
mov
jecxz
push
out
cmp
je
iret
in
es
push
negl
fwait
pushl
push
pop
sarl
imul
or
rorb
mov
sub
sbb
dec
sarl
jp
insb
leave
je
ds
push
rcr
mov
mov
sub
adc
sub
data16
lcall
shll
jl
mov
adc
xchg
cmp
aaa
aam
in
add
test
fucomip
imul
daa
bound
sbb
adc
addr16
lea
lock
mov
add
in
push
sti
mov
sbb
test
cltd
ret
test
mov
adc
pop
xchg
push
jb
call
add
movsl
mov
ja
ret
loope
xchg
push
mov
jno
sti
js
pop
sti
push
inc
shll
adc
lds
push
lods
mov
mov
mov
pop
out
lock
jg
and
jmp
mov
out
lret
stos
ret
loop
mov
or
inc
outsl
in
shlb
decl
cmpsl
xor
aam
add
xchg
push
sub
and
lds
ds
push
enter
pushf
inc
imul
ljmp
fisttps
ja
divl
test
loopne
and
push
scas
or
pop
sub
scas
cmc
sbb
xchg
xchg
int
lret
fldt
adc
jmp
jno
jmp
ja
stc
add
mov
xchg
testb
push
mov
sub
cwtl
fs
pushl
dec
add
jne
bound
inc
jb
jae
insl
cmp
stos
lss
loopne
pushl
xor
inc
inc
jnp
mov
daa
dec
and
popf
or
imul
inc
jp
loopne
loope
aad
push
and
lock
add
mull
call
mov
mov
dec
mov
pop
mov
mulb
hlt
lcall
scas
test
insl
mov
add
call
push
inc
mov
subl
dec
sub
dec
sub
inc
lea
lods
filds
pop
mov
pop
std
call
push
leave
mov
sub
outsb
jecxz
ljmp
jmp
add
scas
dec
movsb
cmp
sub
sbb
aam
jbe
or
push
cmp
push
cmp
scas
xchg
mov
divb
icebp
mov
lret
dec
pop
pop
xchg
cmpsl
call
xor
xchg
je
aaa
shrb
push
sahf
cmp
jae
xchg
or
push
iret
je
cmp
repz
icebp
ljmp
lcall
stos
cld
orb
or
mov
xchg
cli
jge
lods
mov
inc
jne
and
jge
mov
repz
push
push
jmp
pop
push
dec
push
push
mov
lcall
icebp
jmp
pop
sbb
in
jmp
inc
or
movntq
icebp
out
decl
add
pop
test
ret
or
cmp
push
stos
dec
mov
lods
mov
mov
sub
daa
add
sbb
movsl
jmp
loope
inc
bound
pop
add
call
cli
test
xchg
cltd
mov
jg
fnsave
jg
mov
lods
mul
dec
mov
xor
mov
test
int
sar
ljmp
ret
sbbl
inc
fmull
dec
jb
adc
fcomip
js
std
dec
pop
out
fs
ficoml
andl
in
sub
fidivl
jmp
sti
inc
lret
dec
in
test
or
jnp
mov
or
push
mov
push
inc
jne
push
and
dec
xor
mov
popa
imul
test
fsubrp
into
decl
xorl
and
lods
push
daa
mov
xor
push
push
rcrl
dec
fistpl
aad
loope
stc
leave
pushf
adc
or
sub
loop
mov
es
xlat
jp
dec
push
pushl
mov
sub
inc
cmpsl
mov
clc
adc
xor
mov
mov
jmp
cmp
xor
enter
popa
xor
pop
ss
addb
cmp
pop
gs
or
sbb
sbb
leave
xor
or
and
sub
fistpl
mov
cmp
into
daa
cmp
lods
in
fwait
scas
xor
jge
inc
ljmp
adc
jmp
and
xchg
lret
test
add
iret
loopne
jg
mov
insb
arpl
add
call
inc
pop
sub
xchg
repnz
incl
mov
arpl
push
sahf
sub
imul
mov
outsl
in
fcos
call
push
jo
mov
sub
mov
jmp
sub
add
mov
cmp
mov
xlat
jb
out
lods
xchg
aaa
xchg
daa
mov
rclb
lea
roll
xchg
ds
decl
scas
sub
insb
ret
mov
mov
jne
in
mov
xor
mov
mov
jmp
cli
sbb
cmpsb
or
mov
xor
hlt
cmp
mov
decl
mov
js
inc
fbstp
repz
into
dec
dec
jo
jnp
pushf
aad
icebp
dec
stos
xor
shrb
enter
int3
push
fnstsw
out
into
adc
lcall
aad
popa
mov
mov
sbb
in
test
or
ss
mov
dec
jno
ljmp
cli
push
xchg
xchg
sub
cmp
leave
in
mov
xor
cmp
call
insb
es
fdivr
mov
icebp
xor
jne
ret
jmp
fimuls
fdivr
mov
push
xorl
mov
std
pop
fcomip
in
nop
call
pop
cli
sbb
push
in
jnp
fcmove
nop
mov
jp
subl
clc
fstl
repz
scas
aam
mov
aas
push
call
mov
sub
nop
cmp
cmp
xlat
pop
jo
ljmp
push
inc
imul
test
and
mov
mov
sbb
fadds
ss
lods
leave
adcl
cmp
mov
lahf
fsubr
cmp
loop
loop
push
sub
adc
xor
enter
mov
pusha
cmc
lcall
push
sbb
lcall
andl
xor
pop
pop
cmp
bnd
in
ljmp
sbb
add
xchg
stc
cmp
sar
dec
in
cwtl
mov
jecxz
xchg
imul
cmp
mov
and
imul
decl
push
std
push
lock
sub
stos
ljmp
xchg
jle
and
mov
call
fnstcw
pop
push
mov
pop
leave
adc
jmp
mov
aad
or
popa
ljmp
and
adc
or
or
cli
ljmp
jge
or
incl
repnz
push
and
hlt
neg
mov
cwtl
ds
mov
jmp
jecxz
jae
clc
in
mov
and
xchg
incb
jge
cmp
xchg
cmpsb
or
ficoms
pop
fstl
mov
sub
jl
inc
std
inc
cmpsb
jmp
lods
les
mov
cmp
aas
nop
push
jg
scas
test
push
jnp
aaa
ljmp
push
into
push
or
in
inc
cltd
lods
or
call
jo
push
and
lahf
daa
pop
push
leave
stos
pop
out
jb
or
js
call
test
sbb
xor
imul
lock
add
sub
decb
bound
movsb
imul
lods
call
cmp
and
leave
lock
das
jae
cmp
ret
dec
cmpsl
int
in
adc
into
incl
push
pusha
or
or
sarb
outsb
stc
scas
repz
rorl
test
cmp
dec
adc
cmp
push
repnz
aaa
push
mov
popa
adc
scas
or
lcall
mov
sahf
fs
notl
sub
sbb
xor
out
call
mov
adc
imul
stc
fisubrl
cmpsb
mov
stc
sub
ljmp
jmp
fisubrl
sub
test
adc
or
nop
inc
push
test
incl
inc
sub
sahf
iret
cmp
xchg
testl
jmp
jns
jae
jo
push
mov
lea
push
out
xchg
jne
push
mov
pushl
aas
sub
mov
dec
movsl
jns
pop
jns
ja,pn
int3
and
inc
test
xchg
mov
mov
push
cld
fcomi
jecxz
adc
nop
mov
push
sbb
daa
out
jnp
enter
mov
fmuls
jl
fbstp
arpl
js
lret
fwait
dec
mov
iret
and
in
and
fstl
loope
push
sbb
push
dec
xchg
popa
scas
jae
mov
loop
out
mov
and
stos
xchg
mov
or
incl
inc
adc
pop
and
mov
in
pop
ljmp
scas
push
and
ljmp
cmp
xlat
sarb
sbb
pop
ret
test
mov
mov
idivb
push
xor
jg
ljmp
mov
push
loopne
jno
jno
dec
xchg
rcll
insb
adc
les
mov
cli
mov
jp
adc
xor
sbbb
or
cmp
pop
sti
xor
or
cmp
test
or
ret
sbb
out
ret
pop
jns
push
ljmp
mov
xchg
adc
pop
xchg
mov
inc
dec
pushl
xorl
xor
pop
push
jmp
inc
out
push
mov
sub
ljmp
neg
jae
out
shlb
adc
inc
aad
lock
imul
incl
mov
jbe
inc
out
or
push
testb
lret
pop
sub
stc
xor
xor
addr16
aaa
gs
add
push
mov
push
push
lahf
inc
jp
repz
inc
lret
aad
xor
fists
add
aas
sbb
dec
sar
jmp
in
or
sbbb
nop
xor
mov
call
pop
dec
mov
fbstp
shll
lea
sbb
add
or
fnsave
cmp
aas
lock
xor
fisttps
out
ja
ret
call
xchg
push
jns
fsubrp
jp
pop
loop
push
out
pop
jo
fcmovnb
stc
pop
push
fs
movsb
lcall
mov
push
lea
test
aad
xchg
inc
mov
adc
rcr
push
sbb
incl
pushf
orl
push
xor
mov
ss
movsl
pop
adc
jg
lahf
ss
rep
std
pop
push
insb
mov
stc
pop
sub
dec
imul
mov
mov
call
xor
xlat
outsb
sarb
sbb
mov
xor
int
nop
sbb
jg
lock
in
icebp
cmpsb
xchg
test
inc
adc
fistpll
sub
and
call
fistps
sbb
mov
lcall
int
decb
lods
adc
mov
cmp
xchg
jg
mov
stos
insl
inc
inc
jo
cli
rclb
mov
fisubl
mov
icebp
clc
test
scas
cmp
cmpsb
enter
jo
add
repnz
push
sbb
pop
inc
hlt
shll
sbb
js
std
das
int
mov
mov
jg
pushl
cmp
or
fisttps
test
das
or
movsl
scas
mov
jg
imull
imul
cmp
dec
inc
pop
add
push
je
sub
pop
cmc
fstpl
dec
cs
stc
push
adc
and
jg
xor
das
dec
push
dec
iret
add
out
je
add
les
mov
loope
pop
ljmp
add
push
ret
cmp
inc
out
sbb
jnp
imul
dec
add
lret
inc
mov
stc
fcoml
push
ret
ds
loope
sbb
pushl
xchg
mov
sub
sub
int3
bound
sub
addb
ja
cmpb
push
int
lods
call
cld
sbb
inc
enter
sub
leave
mov
loope
push
test
dec
or
ljmp
mov
out
and
mov
push
or
jecxz
call
jg
push
push
mov
aaa
or
ss
arpl
repz
mov
decl
add
pop
subl
stos
push
mov
add
rcll
pop
mov
and
sub
ljmp
lods
mov
jmp
les
dec
xor
call
jo
sbb
mov
cmp
lock
ljmp
xor
std
data16
jno
std
sub
adc
imul
and
aad
popa
insl
jbe
xor
fists
out
pop
mov
or
push
repnz
das
jle
xor
jg
dec
ds
cmc
fistpl
subl
pop
pop
andl
xchg
ret
add
and
xchg
sbb
xchg
neg
int
pushf
orl
adc
mov
popf
xlat
jno
and
mov
mov
sbb
in
into
sbb
and
test
rcl
jmp
clc
and
daa
sub
adc
adc
jp
jge
push
adc
dec
xor
call
sbb
aad
sub
fwait
xchg
cmp
shll
aas
fsubrl
add
out
sbb
mov
ret
mul
dec
loop
mov
sar
fldcw
loopne
aad
pop
cld
mov
gs
ds
bound
aaa
cmp
mov
test
ret
sub
mov
mov
push
movsb
cwtl
mov
jmp
xchg
xor
sub
mov
cmp
pop
out
repnz
iret
shlb
mov
adc
sbb
adc
adc
or
ljmp
movsb
mov
shlb
or
leave
ss
sbb
popf
std
jle
adc
inc
inc
lcall
sub
fldcw
sub
dec
jle
std
test
cltd
xor
adc
fcomip
mov
inc
push
in
sbb
shll
test
mov
xor
and
orl
clc
incl
mov
ljmp
sbb
adc
dec
jp
sub
idivl
cmc
in
xchg
ja
js
push
arpl
scas
sbb
cmp
out
jae
nop
pusha
or
imul
dec
sbb
aaa
mov
jg
pop
sbb
ljmp
inc
push
in
mov
pop
incl
jbe
inc
addr16
adc
jl
les
jle
xor
ljmp
repz
imul
aad
inc
jnp
jnp
popa
or
clc
leave
xchg
mov
push
call
or
movsb
and
test
adc
push
clc
add
cltd
sbb
or
ljmp
repnz
rorb
or
outsl
inc
cmc
dec
cmp
lcall
add
adc
cmp
dec
xchg
adc
jge
fidivrl
insb
pop
leave
jmp
inc
cmp
outsl
push
mov
stos
cli
cmp
dec
inc
rcll
sub
xlat
mov
movsb
add
push
int
stos
jns
call
cmpsb
jge
lods
sbb
jbe
ss
dec
xchg
lcall
add
pushf
xchg
jbe
push
out
shll
xlat
push
and
xor
fnstsw
int
inc
fdivr
jmp
inc
shll
in
int3
push
jmp
inc
insl
enter
push
sub
lea
jnp
inc
add
sub
push
fsubrl
mov
js
icebp
mov
xchg
xchg
insb
std
mov
jg
enter
mov
dec
repnz
bound
std
js
push
decl
jo
je
bswap
push
inc
and
cs
pop
ret
aam
sbb
xor
stos
clc
mov
adc
jae
in
dec
outsb
notl
test
lahf
jecxz
jecxz
xchg
cld
push
test
push
mov
or
into
popa
xor
push
out
xor
mov
test
call
js
jp
mov
bound
and
movsl
insb
dec
jmp
mov
add
cmp
movsl
enter
jle
pusha
loope
adc
pop
xor
cmp
mov
cli
jae
mov
inc
cmp
xchg
jg
pop
pusha
cmp
inc
xchg
jo
or
js
jecxz
mov
push
stc
mov
int
ja
stc
inc
or
rcr
xchg
ds
sub
jne
ljmp
dec
sbb
shll
pushl
mov
inc
pushf
mov
aas
imul
scas
sbb
decl
pop
jle
or
inc
sub
es
mov
mov
decb
fimull
pop
sti
mov
popf
into
xchg
dec
add
or
loopne
dec
lahf
and
lods
add
pusha
add
call
adc
sub
aad
and
mov
inc
into
imul
sbb
movsb
clc
jp
add
sbb
int
dec
or
popa
inc
jo
adc
cmp
jnp
por
in
std
ljmp
cmp
leave
mov
dec
mov
and
inc
repnz
push
cld
pushl
adc
jg
hlt
sarb
mov
ja
sbb
pushl
push
mov
mov
adc
test
nop
out
rdmsr
adc
dec
stc
aam
sub
cmp
and
fnstcw
jns
inc
sti
push
and
and
xor
nop
add
inc
cld
jle,pt
out
sub
js
cs
dec
pop
dec
incl
xchg
mov
int
xor
cmp
arpl
loop
mov
inc
pop
inc
int3
fwait
adcl
xchg
and
movsb
xor
dec
and
mov
jg
sub
sbb
push
dec
jne
sbb
mov
push
das
pop
mov
xchg
mov
out
dec
shll
pop
xchg
idiv
call
pop
jmp
stos
ret
cmpsl
leave
sarl
aaa
in
repz
cs
mov
test
jp
test
js
test
loopne
or
pop
mov
cmpsb
mov
ret
cmpsl
fwait
cs
incl
xchg
in
pushf
and
or
mov
and
cwtl
shrl
fcoml
jnp
scas
fmull
xor
adc
xor
and
xor
decl
inc
mov
pop
mov
leave
es
ja
cmp
jnp
in
sub
stc
inc
ljmp
mov
in
add
pop
in
cld
add
or
test
out
std
call
cmp
scas
fxch
mov
push
jg
inc
das
fxch
aam
pop
das
push
xor
mov
mov
aas
and
cwtl
pushf
pop
add
scas
lahf
sub
mov
lods
jp
mov
daa
loope
in
mov
enter
mov
shrb
das
or
insb
mov
and
pop
mov
in
sub
jecxz
cld
add
inc
loop
mov
dec
mov
ja
stc
movsl
cmc
cmp
clc
inc
or
xchg
cwtl
iret
test
imul
fimull
push
repnz
stos
and
cwtl
addr16
fwait
rcrl
cmp
insb
push
daa
lcall
sbb
sbb
inc
pop
cmp
pop
xchg
push
mov
add
jl
mov
aam
sbb
stos
popa
or
clc
lea
aam
sub
sub
mov
clc
lock
dec
stos
dec
std
fiaddl
ds
decl
lock
lods
imul
repnz
adc
faddp
and
ljmp
add
pop
mov
roll
pop
sub
add
cmp
lcall
jnp
add
jbe
jne
pop
add
loop
cld
and
jmp
inc
xor
aaa
nop
add
movsl
mov
addl
repz
add
ljmp
fmull
push
fbstp
mov
mov
rorb
jp
pop
lcall
pop
inc
loop
push
stos
or
or
mov
cmp
test
rcl
mov
mov
decl
adc
les
cwtl
mov
scas
inc
adc
jne
je
pop
push
xchg
repnz
incl
dec
jne
or
push
lods
sbb
into
lret
lret
mov
xchg
adc
out
enter
sub
push
lcall
push
cmp
mov
insb
xor
add
inc
cmp
shl
push
imul
inc
jmp
incl
xchg
xchg
xchg
fs
mov
cld
repz
clc
sub
mov
decl
clc
test
push
mov
mov
lcall
add
dec
data16
push
movsl
rcrb
out
mov
dec
add
call
or
std
or
and
aam
outsb
ljmp
cli
decl
fbld
adc
xor
inc
push
mov
dec
mov
lcall
scas
mov
fsubl
xchg
and
fldt
sub
xor
jnp
subl
vmovaps
push
ja
cmp
pushl
iret
movsl
xchg
mov
mov
xchg
inc
pop
enter
xor
mov
mov
ss
mov
mov
inc
ret
pop
add
xor
pop
rcrb
cld
rcrb
jmp
mov
or
outsb
xor
test
addb
testb
ret
cli
jle
sbb
xorb
cmp
popf
loopne
xchg
dec
movsl
cmp
cld
jmp
pusha
xor
gs
mov
ret
std
stos
ja
aas
std
cwtl
sub
ss
jns
fmuls
xchg
or
adc
int
sub
aaa
std
dec
out
and
test
mov
call
add
call
mull
pop
mov
add
divb
adc
cmp
aad
leave
loopne
push
xchg
inc
lods
fsub
incl
pop
xlat
insl
jmp
sub
lcall
aam
mov
jp
div
jle
insb
icebp
and
mov
sbb
push
mov
push
lcall
xchg
sub
dec
sbb
jo
lock
fdivrl
lret
xchg
pushl
or
hlt
cltd
mov
mov
dec
mov
push
loope
inc
aam
ja
jmp
push
outsl
mov
inc
stc
or
mov
dec
ljmp
mov
pop
cmc
outsl
xor
dec
xchg
rcll
sbb
aas
mov
ds
jl
lcall
insl
mov
outsl
sub
arpl
je
cmp
adc
pop
fimull
lcall
fists
dec
lret
scas
jne
fimuls
shrl
sub
ljmp
sub
mov
insl
loope
xchg
in
insl
pop
test
push
adc
ljmp
fnstcw
pop
jg
sbb
sub
mov
int
std
movsb
jecxz
mov
add
jmp
fwait
mov
mov
pop
aaa
adc
mov
pop
mov
jo
mov
test
lcall
xor
mov
cmc
xchg
aam
ret
dec
adc
int3
mov
in
repz
js
stc
jbe
bound
mov
mov
call
rcrl
pop
mov
test
inc
cmpb
xor
mov
or
lahf
mov
adc
inc
into
pop
addr16
pop
ret
clc
ja
dec
adc
jmp
cmp
out
or
decl
cmp
adc
scas
negb
iret
ficoml
cmp
js
pop
arpl
cmp
sbb
call
test
pop
in
out
xchg
xchg
push
stos
pop
sub
stc
out
std
out
ja
xor
add
ja
ljmp
sahf
pop
or
jg
fs
sbb
adc
popf
mov
ljmp
aad
lods
inc
and
mov
lcall
data16
mov
rorl
sar
lcall
insl
repz
mov
cmpsb
fucomi
dec
je
adc
xor
sub
lock
divb
cmp
cmp
mov
xchg
cmp
pop
pop
aam
pushl
dec
pusha
imul
jg
mov
jne
xchg
into
movsl
punpckhwd
iret
jno
loop
jge
dec
repz
lcall
mov
insb
push
xchg
xor
mov
mov
jmp
dec
das
add
push
add
push
mov
fbld
add
in
push
cmc
nop
dec
dec
cmp
je
mov
shlb
in
cmp
add
sbb
cs
dec
hlt
pop
popa
in
cmp
repz
aam
xchg
int3
jnp
cmp
pop
jle
push
std
incl
mov
push
dec
out
es
shll
test
call
and
dec
into
lods
and
inc
aam
inc
push
and
mov
imul
incl
cmpsl
jno
add
mov
push
ja
ss
mov
cmp
push
loope
sub
jns
dec
hlt
mov
decl
inc
fistpl
mov
test
xchg
cwtl
and
std
pop
xchg
pop
shl
adc
inc
jmp
ss
in
das
mov
in
xor
imul
xor
sub
out
jp
mov
call
inc
adc
sbb
fdivs
mov
adc
push
cld
incl
lahf
fbstp
loop
mov
out
sahf
cli
outsl
movsl
arpl
incl
push
push
inc
loop
sub
and
inc
mov
mov
bound
xchg
xor
loop
or
xor
mov
std
mov
mov
das
in
jl
and
mov
decl
xor
mov
xchg
jbe
xchg
add
or
mov
mov
in
pop
xor
cmp
cmp
mov
data16
popf
test
es
and
data16
lock
cmp
jmp
sbb
and
push
cmc
mov
enter
cld
mov
push
roll
sbb
cmpl
popf
adc
scas
sti
jmp
push
sbb
cs
adc
test
aas
sub
subb
shl
jmp
sbb
std
pushl
xor
jmp
cmp
mov
pop
sub
xchg
cmpsb
es
sti
adc
fsubr
repnz
pushl
std
inc
xchg
mov
and
cli
adc
mull
inc
outsw
cmp
bsr
and
fnsave
sub
cmp
dec
cmp
and
push
repz
call
decl
imul
sbb
ret
ret
repnz
fistps
push
xchg
pop
push
jle
stos
jle
pushl
xchg
pop
mov
pusha
aaa
jnp
fwait
jne
pop
push
pop
mov
in
ja
inc
adc
out
lock
fiadds
in
or
mov
out
in
and
push
mov
orb
dec
jns
jl
mov
test
dec
or
std
stos
lret
sub
pop
call
push
pop
push
cmpl
insl
ret
mov
dec
jb
addr16
aam
or
lods
dec
roll
test
pop
shlb
bnd
cs
test
scas
jnp
sbb
cmp
pushl
cld
rclb
lcall
negl
mov
or
mov
mov
mov
cmpb
iret
mov
or
sbb
push
cmp
jg
push
jbe
aad
pop
ljmp
and
or
dec
adc
ljmp
push
stos
stc
jg
push
gs
pushf
mov
rcrb
call
mov
xor
cmc
cli
lret
leave
int
pop
xor
or
std
dec
lret
mov
push
inc
sub
mov
mov
pop
inc
sti
loop
call
stos
loopne
or
push
add
xchg
cltd
adc
cmp
sub
adc
mov
jmp
push
out
mov
dec
lock
iret
pop
in
ds
iret
xchg
xchg
and
stc
ljmp
lods
or
int3
lock
mov
ret
xchg
xor
push
aad
mov
lock
iret
or
sub
pop
test
push
call
ror
pop
push
adc
pop
xchg
movsb
aas
in
mov
mov
sub
push
jae
inc
stc
repnz
push
outsl
jmp
sbb
cwtl
mov
push
push
xchg
xor
adc
incl
test
testl
pop
dec
movsb
ret
pushf
xchg
add
rcll
jge
mov
pushl
push
push
aas
sarb
lret
mulb
out
mov
sbb
add
movb
fldenv
sbbl
dec
add
push
ret
pop
jmp
pop
xlat
cmc
xchg
movsb
xchg
jo
je
cmpsl
xchg
addb
sbb
ljmp
jmp
jb
adc
pop
nop
jnp
out
dec
loope
decb
je
fisubrs
jb
test
lcall
call
push
jle
xorb
mov
rcrb
mov
push
std
decl
add
pop
mov
es
jno
hlt
repnz
jbe
mov
inc
push
and
call
aaa
cmp
push
and
add
mov
clc
decl
jb
sub
repz
sarl
add
add
lcall
out
inc
cmpsb
xchg
jle
int
xchg
xchg
lret
cwtl
or
das
mov
adc
gs
xchg
push
ljmp
and
sub
lock
mov
and
push
or
mov
repz
int3
push
loopne
fs
xchg
cmpsl
fdivr
in
or
jl
ficomps
jmp
mov
cmpsl
inc
int
adc
inc
or
mov
inc
mov
test
fsubp
gs
mov
jnp
or
clc
jnp
and
sbb
xchg
add
lea
jl
or
pushl
pop
ljmp
mov
add
inc
js
aaa
lret
in
jno
cli
punpcklbw
jmp
mov
mov
sub
push
test
lock
jmp
repz
jno
orl
mov
rolb
fistps
pop
decl
pop
and
shl
or
std
fwait
aad
jb
inc
in
add
add
ljmp
dec
lret
pusha
ljmp
push
fsubr
xchg
roll
and
call
ret
inc
shl
pushf
xchg
cmpsl
adc
mov
cmpsb
call
outsb
insl
xchg
mov
push
add
add
lds
out
clc
ret
clc
icebp
sti
sahf
lods
xor
leave
out
push
in
add
sar
pop
cld
fldcw
inc
stos
loope
mov
push
es
mov
aas
dec
mov
into
cmp
and
sub
mov
pop
and
pop
orb
fsubs
and
cmp
iret
movsb
pop
ljmp
mov
xchg
inc
adc
icebp
pop
and
sbb
jg
scas
push
sbb
adc
hsubps
push
inc
leave
ljmp
mov
bound
cli
add
xchg
jnp
jp
push
mov
mov
add
call
in
jno
pop
and
dec
adc
les
jl
outsl
cli
mov
mov
test
jmp
sub
and
push
in
and
std
mov
nop
lds
fmuls
xchg
pushf
mov
insb
add
inc
mov
ja
orl
mov
test
dec
call
jmp
sub
pushf
cmp
push
imul
mov
jg
mov
inc
decl
add
pop
push
xorl
lock
int
ljmp
cli
cwtl
cld
cmpl
cmc
mov
sub
nop
jns
mov
imul
mov
xchg
pop
loope
dec
dec
in
inc
aam
mov
out
sarb
mov
mov
mov
dec
mov
in
cli
shlb
jo
stos
xchg
movsb
adc
dec
popa
pusha
pop
in
stc
call
lods
ds
cmp
pop
mov
loope
push
mov
andb
push
and
mov
fisttps
dec
cmp
xchg
enter
xor
xchg
mov
jl
call
mov
push
imul
hlt
lods
ja
fisubl
in
dec
addr16
sbb
and
ja
call
xor
cmpsb
mov
addps
out
add
pop
add
dec
ss
ljmp
cli
mov
repnz
mov
fwait
mov
inc
xchg
sbb
jmp
repnz
xor
aaa
adc
mov
addr16
mov
rol
test
mov
incl
lea
jmp
data16
loop
xchg
mov
scas
call
lcall
dec
adc
jne
mov
inc
sarb
cmp
xchg
pusha
jo
imul
inc
repz
ljmp
int3
inc
push
pop
mov
adc
out
cmp
cmpb
cmp
xchg
decl
xlat
cli
xchg
out
xor
xlat
scas
fs
push
repz
andl
pop
inc
out
inc
call
ljmp
push
adc
repnz
push
mov
inc
jne
test
shlb
imul
adc
xchg
mov
loopne
jmp
out
pop
lea
std
jae
cmp
mov
sub
inc
xchg
ljmp
pushl
int
es
sbb
xlat
rorb
ret
int3
xchg
adc
dec
pop
daa
test
pop
sbb
fimuls
cmp
push
mov
fs
addr16
mov
adc
sbb
cmpsl
cltd
mov
mov
jbe
cmpsb
sbb
push
and
leave
outsl
ficoms
dec
xor
incl
aad
dec
push
xchg
fisubs
js
lret
fisttps
pop
jnp
std
pop
sbb
xor
dec
movsb
jo
lahf
incl
mov
repnz
push
out
jl
sbb
xlat
and
mov
call
neg
lcall
pop
nop
sub
fisubs
pop
ret
mov
mov
lcall
bound
test
je
mov
cltd
jmp
ja
push
cmc
int
adc
push
fwait
mov
sub
subl
call
mov
cli
push
mov
jb
sbb
cli
mov
faddl
addb
inc
and
and
enter
clc
inc
jmp
jp
sub
das
clc
cmp
icebp
popl
mov
xchg
jne
inc
cmpsb
push
inc
sub
dec
loop
push
jnp
mov
adc
lds
ror
incl
add
push
mov
adc
xor
lahf
stos
dec
jecxz
lret
sti
dec
and
in
inc
loop
lcall
fptan
nop
adc
xor
in
push
shll
add
lcall
rorb
push
rorb
lea
or
xchg
jmp
iret
lret
pushl
stos
jge
cmp
pushf
or
cmp
iret
mov
sbb
popa
sbb
cmp
ljmp
pushf
rcr
add
xchg
jo
shl
or
sbb
push
pop
lret
lea
and
mov
xor
ret
xor
out
aaa
ficomps
pop
cmc
xchg
cmp
fistpll
dec
sbb
imul
fdivl
outsl
and
xchg
pop
jne
ret
adc
lcall
inc
fs
mov
out
jg
or
jge
mov
pop
pusha
pushl
jbe
jae
mov
imul
add
adc
pop
mov
mov
jns
adc
jge
fldl
ror
sti
pop
jb
inc
rorb
lahf
push
je
ret
fcmovne
cs
add
push
testl
xlat
pop
pop
xlat
mov
jecxz
lcall
fs
es
into
push
mov
dec
and
aad
mov
out
jnp
loopne
dec
insl
xor
jle
sbb
dec
adc
and
or
in
or
pushl
lds
inc
push
and
fs
push
and
push
mov
ljmp
xchg
icebp
dec
aas
pop
fs
dec
inc
cmc
movsb
movsl
popa
jmp
add
jle
adc
push
call
test
stos
popa
jmp
xor
stc
addl
outsb
xchg
lods
push
dec
push
xor
call
stc
aaa
lock
pop
dec
lret
sub
jle
or
mov
mov
jo
mov
jmp
and
lcall
sbb
xlat
dec
jle
cmp
push
mov
mov
or
lods
adc
sbb
or
or
lods
inc
hlt
loopne
inc
out
ja
adc
sbb
call
and
xchg
adc
sub
mov
xchg
aaa
mov
pop
mov
addr16
aaa
cld
decl
mov
test
nop
add
fsubrl
call
xchg
pop
and
mov
sub
cwtl
pop
inc
icebp
pusha
lcall
mov
call
out
dec
adc
pop
mov
mov
push
jb
pushl
mov
cmpl
rcrb
or
mov
jg,pt
arpl
lcall
ljmp
fiadds
jno
or
movsb
jg
lret
pop
xchg
inc
mov
ljmp
lea
je
jbe
nop
mov
add
loope
fxch
movsb
inc
stc
jbe
dec
in
incl
cmp
mov
cld
flds
and
mov
std
and
fmull
test
adc
mov
cmp
les
and
f2xm1
lret
mov
push
lea
icebp
out
jle
movsb
aas
adc
pop
mov
or
sahf
andl
xor
xchg
pushl
sbb
push
stos
cld
sbbb
orl
test
cli
lods
pop
test
push
mov
sub
lds
jns
xchg
outsb
out
int3
outsb
arpl
in
dec
es
jmp
xchg
adc
cli
mov
cmp
cmp
pop
mov
in
aaa
outsl
loopne
ljmp
jns
in
xor
lods
bound
mov
jp
jbe
sahf
call
nop
add
mov
lds
xor
xorb
and
push
pushl
popa
mov
out
gs
mov
xchg
dec
insl
orl
mov
add
mov
lods
or
call
sub
dec
mov
lods
jno
push
call
cld
popf
ja
push
divb
inc
push
adc
and
lcall
mov
inc
jo
sub
mov
sahf
shl
dec
lcall
mul
lods
sub
add
xor
movsl
jnp
sar
xor
sub
inc
dec
mov
fisttpll
pop
xor
stc
xor
iret
sbb
dec
out
cld
sub
pop
mov
daa
aam
jle
loope
dec
imul
adc
fsubs
or
fcomip
mulb
sub
fdivrs
mov
sbb
lods
pushl
add
adc
fldl
cmpsb
into
jecxz
xchg
add
or
hlt
fiaddl
jmp
push
mov
ds
dec
out
into
add
push
xchg
out
xchg
out
repnz
incl
lock
or
xchg
into
vpaddb
decb
mov
mov
inc
sbbl
push
xor
std
mov
jle
insb
loopne
push
xchg
cmp
inc
into
insl
shlb
cmp
pop
xor
inc
test
mov
sbb
jne
adc
jae
cmp
cmp
ja
lcall
rorl
in
sbb
notl
mov
loop
in
sti
fstps
in
pushl
jne
ss
mov
icebp
dec
popf
cmpsb
add
jecxz
jge
push
out
ljmp
out
roll
fistl
pop
repz
lret
jle
add
and
mov
out
mov
incl
idivl
bound
fadds
dec
or
into
ljmp
xchg
hlt
adc
mov
ljmp
scas
inc
dec
incl
cld
movl
or
lds
xor
cmp
decl
xchg
fld
icebp
mov
xor
add
sub
repz
inc
jae
in
mov
call
repz
pop
adc
mov
into
mov
notl
aad
xor
or
incl
fldl
arpl
fdiv
jns
adcb
xlat
dec
mov
jb
sub
inc
inc
pushl
ds
xchg
push
xor
jns
or
jns
popa
xchg
mov
stos
or
sbb
ljmp
int
ret
mov
cmp
xchg
sub
inc
addb
pop
or
popf
push
push
cmp
insb
out
mov
mov
call
cmp
iret
xor
push
jg
inc
rorb
inc
pushf
cmp
loopne
test
xchg
inc
das
add
add
push
lds
or
push
and
push
push
sub
fldcw
pop
lock
push
fimull
jge
stos
loop
clc
test
lods
nop
stc
cmp
repz
aad
pop
lcall
cmp
scas
imul
aas
stc
loope
imul
and
lock
sti
mov
jmp
push
ja
inc
ljmp
jmp
push
leave
pop
mov
aad
xchg
lea
mov
ljmp
jae
sub
mov
flds
pop
xchg
adc
xor
aaa
xchg
inc
inc
sub
mov
push
shrl
push
pushf
cld
ds
jecxz
mov
push
xlat
arpl
call
cmp
mov
mov
add
filds
mov
test
mov
and
ljmp
mov
inc
leave
and
popa
cmp
jg
push
xor
out
addr16
lcall
int3
push
das
lret
sub
iret
inc
cmp
call
mov
adc
roll
pushl
in
cli
loope
clc
adc
ja
icebp
inc
mov
xchg
cmp
pop
std
mov
add
in
ljmp
mov
xor
daa
inc
ja
mov
add
sbb
jle
fildll
pop
xchg
push
cmpsb
and
popf
cmpsl
mov
mov
jo
sub
arpl
cmp
loopne
cli
ljmp
mov
and
enter
mov
enter
push
push
mov
daa
push
pop
xor
outsl
cli
call
jmp
push
fwait
not
fmul
imulb
mov
cli
cmp
sbb
lcall
addr16
scas
push
sbb
inc
xlat
mov
pop
out
xor
outsl
or
movsl
ljmp
pop
pop
icebp
hlt
je
xchg
cld
push
roll
inc
and
fdivrs
push
decl
cli
pop
fwait
insl
ret
jbe
jne
cmp
push
decl
incb
arpl
sti
ret
rcrb
outsb
stc
cmpsb
mov
cmp
jae
or
add
fcomip
pop
lods
xchg
and
xchg
repz
mov
xchg
daa
lret
mov
lret
mov
mov
or
inc
and
sub
pusha
sub
dec
out
jae,pt
mov
adc
dec
and
mov
cmp
adc
aaa
jns
fistpl
pop
cmp
dec
push
jecxz
adc
sub
mov
jmp
xchg
lahf
mov
sub
add
jae
pop
sbb
inc
addr16
inc
mov
pop
cmp
dec
gs
loope
jo
adc
test
mov
pop
ss
sub
cmp
pop
mov
clc
dec
xor
push
cmpsl
sub
ljmp
js
or
xor
inc
sbb
imul
push
ds
sbb
call
loope
mov
mov
push
repz
ret
sub
decl
ds
shlb
call
xor
pop
mov
popf
pushf
pop
mov
aas
dec
scas
ljmp
aas
push
pushl
daa
jnp
bound
dec
addl
cmc
mov
dec
xchg
mov
and
leave
lea
scas
pushl
xchg
in
out
pop
mov
inc
les
ficompl
dec
mov
call
sti
mov
dec
hlt
xlat
es
xchg
push
fbld
enter
adc
mov
pushl
sarb
loop
lahf
call
cwtl
and
fcmovnb
jmp
mov
inc
mov
mov
ja
cmp
ffreep
sti
pop
pop
nop
in
or
imul
cmp
decl
xchg
pop
sti
mov
mov
push
fldl
and
mov
lcall
sbb
out
pop
imul
pop
push
xchg
push
pop
sub
ja
stos
inc
out
call
clc
cmc
push
mov
add
addr16
jg
xchg
jmp
mov
push
nop
hlt
dec
adc
inc
xor
push
loopne
sub
pushf
push
cli
in
pushl
subb
sub
lahf
inc
cmp
push
in
sbb
repz
jecxz
out
test
jmp
testb
lods
mov
pop
aam
pushf
push
inc
cmpsb
cmpsb
popa
xor
jge
mov
lcall
aas
sub
mov
xor
dec
aaa
rolb
or
pop
pop
sbb
dec
mov
je
incl
sar
pop
mov
jl
out
cmp
sub
jecxz
xor
jg
mov
mov
mov
icebp
fcomip
jne
add
int3
icebp
xchg
jl
fucomp
shrb
mov
pushl
and
rcr
fs
xor
push
push
xor
inc
std
xlat
cmpsb
jg
stos
mov
loop
call
gs
dec
pop
sar
xchg
push
xlat
iret
adc
push
pop
cmp
stos
jae
pushf
hlt
cwtl
xor
ljmp
sbb
xchg
jecxz
xor
dec
movsb
cmpsb
push
or
movsl
push
lahf
scas
enter
popf
mov
insl
rcrb
jbe
insl
lea
and
ljmp
incl
nop
icebp
out
xor
cltd
loop
jmp
or
jg
pop
and
fs
sahf
pop
in
pop
jnp
shr
lds
push
jg
sub
push
mov
into
sub
mov
jnp
test
movsb
mov
xor
jmp
rcrb
pop
mov
xchg
pop
jle
insl
gs
mov
ljmp
xor
jge
xchg
shlb
sbb
mov
or
in
clc
pop
js
call
fs
sub
sti
fistps
cltd
stos
xchg
cld
inc
bound
hlt
mov
jg
dec
mov
enter
mov
insl
mov
scas
xor
dec
mov
cli
mov
pinsrw
decl
adc
lcall
loope
jg
in
decl
mov
inc
adc
das
cmpsb
and
repz
fiadds
xchg
push
cmc
lds
and
aad
fmuls
jns
pop
xor
dec
push
cmp
jg
push
cltd
aad
std
frstor
mov
or
cmp
rorl
shl
or
xor
incl
fadd
and
test
jp
std
jle
pop
jae
dec
dec
and
stos
jbe
lahf
push
lret
call
insb
je
mov
or
jg
sub
pop
pusha
icebp
jae
js
mov
mov
push
cmpsl
ss
push
in
test
push
and
xchg
addr16
lret
sbb
shll
xchg
mov
call
cmp
push
sub
loop
xchg
jle
and
adc
mov
jecxz
mov
mov
lret
pop
scas
inc
pushf
sub
les
cmp
add
xchg
dec
lock
push
mov
lret
and
loopne
mov
pop
clc
pop
ds
cld
sbb
in
shlb
push
pop
inc
lds
and
mov
ljmp
push
sub
mov
xor
jmp
push
jg
inc
mov
jmp
scas
mov
jne
pop
cmp
add
or
push
mov
in
ffreep
ljmp
das
jmp
dec
mov
pop
sbb
mov
aam
mov
inc
hlt
jbe
lret
lahf
call
ljmp
pushl
or
test
js
and
scas
imul
in
pop
mov
pop
pop
xchg
ret
cmp
sbb
loop
je
mov
aaa
adc
xor
out
add
adcb
cli
jmp
sbb
cmp
lahf
cmp
jnp
jno
dec
out
sbb
incl
xor
pop
or
lea
lcall
and
js
sub
ljmp
jno
push
call
dec
insb
and
outsb
push
adc
pop
loopne
xor
loope
push
out
scas
cli
lcall
push
lods
pop
fisttpl
mov
jnp
out
mov
dec
hlt
or
incl
or
lds
jp
mov
push
xor
clc
or
test
sbb
call
push
jae
push
arpl
jl
scas
out
sub
sarl
int
add
or
stos
add
lcall
jnp
jmp
mov
sub
cmpps
adc
jmp
std
mov
fwait
ljmp
cld
cmpsl
jns
lods
lcall
in
inc
or
fcomps
jno
mov
mov
pop
push
adc
lock
add
xor
das
call
pushl
xchg
mov
nop
rolb
inc
inc
mov
je
xor
out
mov
fwait
aaa
or
aam
inc
mov
into
pop
xchg
mov
mov
push
movsl
cmp
ljmp
out
shl
sub
fs
or
mov
stos
mov
mov
incl
mov
mov
adc
or
outsl
mov
xchg
or
icebp
rol
aaa
pushl
call
xor
repz
or
add
adc
push
icebp
lods
or
xor
data16
loop
xchg
call
rcrb
sub
jle
clc
mov
out
testl
push
xchg
jmp
add
dec
mov
lret
cmpsb
sbb
enter
dec
leave
mov
lcall
stos
into
xor
mov
mov
je
icebp
jl
movsb
cs
xchg
add
add
jecxz
aas
add
xchg
xlat
xor
jge
std
js
leave
cli
ds
sbb
inc
and
daa
lock
in
out
dec
mov
es
hlt
fdiv
jmp
cmpsb
sarb
cli
fisubs
sbb
pop
sub
lods
mov
bound
xor
lcall
cmp
leave
int
imul
aaa
pop
adc
sub
xor
lcall
mov
dec
orb
fadd
dec
bound
lods
adc
jmp
repz
mov
pop
insb
jge
adc
in
ds
cmpsl
stos
add
fnsave
nop
push
dec
jb
sbbl
out
inc
dec
mov
fidivs
sarl
mov
push
sub
jp
dec
xchg
in
dec
mov
std
adc
stc
mov
ljmp
out
xorb
mov
in
pop
xor
mov
mov
aad
inc
and
shrb
or
fwait
dec
push
xor
outsb
xorb
andl
jg
pop
pop
or
fbld
mov
inc
sub
pop
push
in
repnz
call
and
fisttps
cmp
cmpsb
lret
xor
push
popf
nop
lds
out
movsl
cmp
sbb
pop
jg
bndstx
fcoml
dec
scas
js
xchg
cmpsb
in
clc
push
jp
jl
sbb
cmpsb
push
call
ret
xchg
test
or
sub
notl
in
xor
push
andl
and
jmp
mov
mov
int3
loopne
enter
xor
int
and
enter
das
clc
mov
and
and
mov
cmp
aam
out
dec
loope
shll
jge
jbe
adc
je
int3
pop
repnz
mov
adc
lcall
mov
lcall
and
test
stos
and
lock
mov
or
ss
decl
xchg
cmc
push
sti
pop
push
mov
sub
gs
and
push
push
and
mov
incl
fs
xor
call
mov
sbb
test
add
add
aas
enter
sub
repz
xor
mov
xor
or
inc
mov
push
sti
mov
test
subb
lock
sti
mov
loopne
mov
fcompl
call
xlat
add
xchg
or
orb
jne
pop
pop
ja
hlt
mov
dec
sbb
jbe
incl
add
cld
fisubs
cli
pop
mov
incl
sahf
fmuls
movsb
mov
inc
pushf
in
add
or
jmp
inc
add
popf
cltd
es
fsubl
xchg
int3
pop
inc
jl
cmpsl
or
inc
and
or
movsb
inc
xchg
mov
cmc
bound
mov
cmp
fisubl
or
cmp
xor
or
push
push
inc
rolb
arpl
cmp
lcall
jmp
clc
mov
cwtl
loope
je
out
mov
ljmp
test
je
data16
fwait
cmc
jge
inc
cmp
sub
adc
mov
xor
call
cmp
cmp
sub
jnp
push
fcomps
cmp
dec
push
call
std
mov
mov
mov
inc
cmpsl
pop
adcl
push
cld
mov
xor
aas
inc
push
sbb
inc
xor
or
add
mov
adc
mov
fldl
out
js
fcom
inc
bound
cld
adc
cs
out
aam
test
inc
dec
je
fistpll
sub
imul
movsl
push
flds
adc
fcmovnu
mov
lret
fdivl
ja
inc
cmp
dec
jo
or
inc
outsl
cli
aaa
std
ss
sbb
jecxz
xchg
test
mov
push
mov
sti
mov
adc
decl
push
les
test
jmp
gs
dec
mov
pop
pop
xor
sahf
and
bnd
call
lcall
push
test
jns
sbb
movb
loopne
push
pop
mov
jno
test
cmpsb
es
mov
add
cli
mov
shlb
cli
push
dec
insl
adc
lcall
dec
mov
mov
jl
adc
jl
push
cli
cmp
sub
aaa
mov
incl
das
cmp
jp
xor
popf
and
test
inc
cld
scas
rcr
cmpsb
sar
ljmp
pusha
out
pop
mov
fldt
cs
aam
aas
inc
pushl
add
inc
out
in
das
sar
sbbb
mov
rcll
mov
jb
ret
repz
or
dec
xchg
test
fs
adc
call
mov
movsb
cmp
sub
xor
cmc
add
addl
clc
lcall
mov
xchg
jno
out
lcallw
pop
or
jle
xchg
pop
jge
decl
cwtl
pop
frstor
fwait
lea
sub
movsb
loop
jnp
in
stos
ret
cmc
pushl
jp
aad
test
ds
out
mov
call
loopne
inc
pusha
insb
xlat
and
lock
adc
std
push
cmp
pushl
loop
push
outsb
scas
scas
push
aaa
push
addl
subb
leave
dec
into
mov
mul
inc
cli
lret
clc
idiv
jmp
out
xchg
jmp
push
jmp
mov
ljmp
mov
adc
movsl
aad
es
sti
pop
lret
mov
ljmp
jmp
js
orl
add
or
sub
sbb
sar
sbbb
arpl
xor
loope
or
pop
lcall
cmc
decb
dec
pop
call
jns
insb
fs
or
xor
decl
pop
push
mov
add
int
dec
or
sub
scas
pushl
cmc
rorb
mov
xchg
jmp
fldenv
sbb
pop
xchg
jne
pushl
inc
jne
push
ss
insb
mov
std
icebp
loopne
rclb
imul
xor
imul
daa
cmp
in
int
pop
addr16
cmp
mov
int
fstl
cmp
mul
jo
loope
add
mov
pop
ror
jnp
stc
arpl
sahf
push
insl
popf
mov
or
outsl
xchg
mov
jmp
push
xchg
push
mov
pop
jmp
out
xchg
mov
inc
fs
ror
imul
mov
sti
jns
mov
pop
pusha
or
xor
xchg
and
das
imul
rclb
incl
push
pop
shl
addr16
sbbb
cmpsl
dec
sbb
int3
or
cmpb
add
outsl
xor
incl
dec
adc
mov
enter
dec
pushl
cs
mov
arpl
pushf
push
adc
push
push
sahf
lcall
pushl
pop
pop
cltd
or
xchg
cmpsb
call
iret
cmp
dec
mov
loope
cmp
fdiv
xchg
dec
rclb
push
fsubs
add
ja
jp
insb
mov
mov
inc
mov
or
sbb
cmpsb
add
in
adcl
mov
iret
add
in
push
outsb
pop
jb
sub
outsl
pop
sbb
jmp
in
nop
xor
pop
subl
imul
add
mov
scas
sub
jl
les
in
outsb
add
sub
mov
xchg
daa
outsl
call
stos
aam
in
stos
js
ss
and
jp
ss
rol
sbb
cmc
pushl
sbb
jmp
loope
mov
mov
mov
xchg
ljmp
stos
mov
rcrb
adc
addr16
loop
lret
in
add
xor
push
daa
test
ror
or
mov
xor
clc
add
jmp
mov
mov
add
jno
pop
nop
ret
sbb
mov
mov
mov
and
mov
sbb
or
mov
ds
inc
fstl
cli
addr16
stos
sarb
ja
inc
cmc
cld
inc
sub
ds
pop
jnp
mov
and
jg
mov
test
int
pop
loop
pop
imul
lcall
xchg
mov
inc
push
rol
out
das
push
sub
xchg
cmpsb
adc
daa
scas
cmpsb
repz
inc
dec
pop
add
fisttpll
aad
add
int3
mov
arpl
mov
ljmp
push
jg
xlat
cmp
xor
mov
jge
orl
sbb
call
gs
add
xor
mov
or
jb
int3
mov
jl
xchg
push
repz
incl
dec
popw
cmpsb
pop
rolb
jmp
ss
sbb
sbb
fdivrp
xchg
in
inc
arpl
cld
cltd
lcall
ljmp
popf
mov
xchg
xor
fdivl
je
pop
test
shrb
dec
loope
lods
fwait
scas
inc
mov
adc
cmp
sub
int3
sbb
aad
pop
mov
jmp
pop
and
or
adc
into
call
push
jb
pop
rcrb
push
scas
rcr
pxor
fimull
xor
mov
mov
and
push
cmpsl
or
pop
add
ljmp
xchg
pushf
call
mov
mov
push
inc
xlat
xchg
je
ffreep
out
jne
inc
cmpsb
ljmp
inc
icebp
lods
icebp
pop
mov
push
xor
in
push
inc
out
out
orb
fisttpll
sbb
sar
ret
push
roll
push
nop
adc
sub
sub
ljmp
inc
mov
fiaddl
ret
icebp
sub
ljmp
fcomps
leave
into
pop
sub
push
cmpsb
inc
les
orl
dec
decl
adc
add
aad
int
cmp
pusha
dec
push
xor
sbb
lcall
push
mov
push
mov
dec
mov
nop
mov
inc
and
push
adc
loop
div
push
fwait
or
jp
sub
jl
adc
decl
pusha
bnd
adc
xchg
inc
push
cltd
in
xchg
incl
shlb
and
mov
cmpsb
popf
jl
cs
sbbb
xchg
rolb
clc
pushl
aad
out
push
sub
push
or
scas
xchg
and
xchg
ret
es
mov
mov
xor
sub
and
pop
jno
int3
jbe
arpl
std
movsb
mov
leave
ja
cli
pushl
scas
add
je
outsb
xor
push
cmc
pop
loopne
lcall
xlat
mov
or
jno
icebp
dec
out
fldcw
les
lcall
dec
add
mov
xchg
call
pop
pushf
pop
mov
push
incl
cld
sbb
jmp
fs
test
lods
outsb
ljmp
push
out
xchg
nop
clc
and
rol
aaa
mov
mov
mov
out
cltd
jg
xchg
add
mov
pushf
fidivrl
add
pop
jl
push
mov
xor
test
addb
pop
dec
cld
dec
movl
fistl
jle
out
pop
jb
decl
adc
jns
dec
lahf
dec
inc
xchg
shll
aas
mov
dec
push
push
jmp
test
scas
cmp
test
cwtl
cmpsl
outsb
loop
xor
cmc
pop
scas
sbb
stos
in
lret
push
pop
jge
pop
mov
insl
or
icebp
adc
dec
movsl
xorl
bound
xchg
movsb
sbb
sti
mov
imul
aad
sub
fwait
cwtl
push
inc
shll
mov
lret
fwait
dec
incl
add
cmp
out
or
xchg
in
jb
repz
push
dec
pop
fwait
mov
jecxz
lcall
fs
iret
movsb
mov
and
mov
imul
fmul
sti
sub
push
jge
lds
ret
pop
js
into
call
test
hlt
test
sub
inc
xor
shll
mov
pop
ja
addl
ljmp
loop
jbe
pop
popa
push
xor
sbb
fildl
movsb
jg
mov
mov
aad
xlat
xchg
outsl
rolb
dec
lea
data16
jmp
fst
fdivr
dec
dec
adc
xchg
pop
push
pop
xchg
lods
pop
adc
fadd
adc
mov
jo
in
sub
repz
cld
std
lcall
lahf
mov
fsubr
or
push
mov
bound
and
inc
jle
ljmp
inc
mov
or
lods
pop
sysexit
mov
push
cmpl
pop
or
movsb
ljmp
imul
shll
inc
cltd
aad
leave
clc
fwait
cltd
vpmacswd
mov
rolb
call
ret
movsb
in
mov
test
dec
scas
cmp
in
mul
pop
inc
lock
cld
call
fldenv
inc
or
adc
xchg
jne
loopne
dec
aam
dec
xor
call
sahf
jecxz
adc
fs
and
pop
das
xor
ss
jl
das
dec
sbb
pop
leave
push
push
aas
call
adc
cmp
xchg
dec
lret
inc
in
popf
insb
xchg
push
xchg
xchg
inc
cwtl
daa
scas
iret
aas
ficompl
ja
rorb
add
out
or
lods
sahf
pop
dec
leave
fs
mov
xchg
repz
dec
cli
cmp
call
or
jbe
in
xchg
mov
inc
popa
push
cmpsl
mov
lock
ljmp
dec
test
into
cmpsl
dec
arpl
js
mov
packsswb
jg
decl
int
mov
loopne
sbb
jl
push
pop
inc
push
enter
lcall
ds
push
xor
aam
stc
push
inc
sub
mov
mov
addb
call
lods
fildll
pushf
dec
dec
push
pop
dec
inc
outsb
icebp
rcll
out
mov
xlat
std
aaa
pusha
push
mov
adc
or
add
mov
jb
enter
mov
and
aad
push
sub
push
cmp
test
inc
mov
popf
in
loopne
outsb
mov
rsqrtps
dec
sub
jmp
inc
fs
mov
mov
out
hlt
call
arpl
lods
icebp
push
insb
ljmp
imul
test
test
js
mov
mov
incl
mov
jle
pusha
icebp
lcall
in
add
push
mov
push
ljmp
push
int
or
jbe
sbb
cmp
add
cmp
out
mov
je
in
push
mov
push
dec
aam
add
cmp
xchg
loopne
aam
rorl
jecxz
add
inc
adc
sub
mov
in
leave
comiss
aad
imul
insl
ja
mov
mov
jb
mov
in
test
and
sub
mov
xor
sar
call
ret
pop
sbb
xchg
repnz
inc
imul
sub
inc
fidivrs
fbld
ljmp
div
movsb
and
movsl
or
les
pop
scas
xor
popf
pop
fwait
inc
leave
lcall
incl
ja
pop
push
xchg
lret
xor
inc
int3
icebp
lret
or
aas
xchg
xchg
lcall
lcall
cmp
es
fdivrl
rcll
adcb
jo
je
cmp
add
call
stc
pop
outsb
or
jl
js
lret
shrb
shrl
fldt
call
jmp
sub
push
das
lahf
lret
jle
and
xor
imul
ja
sbb
adc
xchg
lret
mov
enter
xchg
cmp
mov
mov
jae
enter
daa
sbb
pop
stos
fwait
sub
jl
push
jb
xor
ret
pushl
sub
inc
xlat
dec
mov
mov
xor
hlt
pop
call
jge
decl
pusha
jae
add
stc
ficomps
pop
loopne
clc
rorb
mov
sub
xchg
lcall
gs
xchg
shrl
lcall
ret
xor
clc
fsub
ja
call
clc
mov
enter
jo
lcall
push
ja
and
push
jmp
and
push
pop
fwait
jo
mov
sub
jae
out
movsb
sti
rcrb
add
call
mov
iret
call
or
add
insl
enter
pop
ret
add
ljmp
push
xchg
clc
sbb
decl
cli
pop
sub
sub
push
mov
fcompl
mov
sbb
fsts
insl
and
sub
inc
popf
push
add
lcall
lds
mov
sbbb
pop
pop
cld
addr16
movsb
push
and
daa
clc
add
call
jl
iret
or
jecxz
pop
mov
lahf
mov
lcall
or
shr
int3
aas
pop
inc
mov
pusha
pop
adc
rolb
cltd
out
jnp
sbb
inc
loope
call
xchg
cmp
inc
mov
fidivs
aad
sbb
mov
pop
and
pop
gs
das
sub
mov
out
inc
addr16
or
or
decl
pusha
xchg
fmull
pop
into
outsl
cmp
xor
cmpsl
sub
cmc
ljmp
sub
or
sbb
or
aas
insl
push
inc
cltd
iret
cmp
cs
ffreep
pop
xlat
int
es
sub
popf
jmp
imul
or
or
iret
mov
cltd
stos
sbb
and
jmp
and
mov
mov
jecxz
stc
mov
stos
movsl
xor
out
xor
push
jno
mov
sti
fcmovne
test
in
aad
aaa
decl
out
pushf
addr16
test
sbb
jne
inc
scas
sbb
cwtl
sbb
clc
inc
or
pop
add
jp
fists
sbb
out
mov
pusha
in
push
adc
dec
outsl
adc
fdivrs
ds
jg
lret
or
lods
data16
sub
jbe
icebp
repz
jg
push
push
sahf
ds
imul
sbb
test
mov
push
out
sbb
adc
pushf
fucomi
enter
call
add
and
dec
sbb
int3
mov
pusha
xchg
inc
adc
push
ljmp
mov
mov
test
js
ljmp
repz
jmp
clc
jb
loop
pop
pop
cmp
cli
mov
imul
cmp
pop
jne
xor
xchg
loope
xchg
xor
incl
inc
ds
loop
in
or
popa
std
pusha
pop
fwait
dec
popf
loopne
mov
push
cmp
movsl
mov
test
insb
sub
addr16
in
mov
cmpb
push
loopne
mov
cmp
jecxz
xchg
mov
stos
jo
xorl
jg
jle
inc
sub
lahf
nop
push
pusha
sbb
fadd
mov
pop
in
jg
push
xchg
ss
fsubrl
jb
inc
enter
aad
ret
jp
adc
lcall
lcall
mov
ljmp
add
jg
jg
and
mov
fs
mov
sub
jbe
outsb
scas
movsb
mov
call
popf
dec
orl
leave
cmpb
fisttpl
in
mov
mov
dec
ds
jg
call
test
rcrb
pop
or
mov
lock
call
sub
adc
jns
mov
loop
lods
aad
out
outsb
add
sub
sbb
adc
mov
jecxz
loop
and
mov
jae
jmp
and
inc
js
dec
pop
std
loopne
shrb
add
movl
xor
fcmovnu
fisubl
int3
cltd
mov
sub
ficoml
jle
mov
xchg
mov
pop
icebp
jmp
iret
rorb
pushf
xor
cs
push
test
push
jle
jno
lcall
into
mov
loopne
test
in
mov
mov
mov
push
jle
incl
inc
xchg
nop
ret
fsub
push
mov
pop
inc
shlb
mov
xor
sub
movb
cmp
mov
clc
xor
pop
mov
cmp
mov
pop
es
or
fmull
imul
pop
repz
adc
sarl
loopne
outsl
test
xchg
xchg
add
call
pushl
mov
jmp
cmpsb
xor
sub
mov
cmp
fwait
pushf
push
push
lea
xchg
mov
adc
test
pop
int
jge
sarl
sbb
jecxz
jmp
mov
cld
xorl
out
repnz
add
jmp
cmp
mov
cs
and
cli
test
cs
movsl
jnp
cmp
mov
fistpl
out
outsl
lds
mov
or
cmp
lcall
adc
scas
clc
dec
das
rorb
test
das
dec
cmpl
hlt
fsub
stc
mov
test
psllq
decl
mov
adc
mov
je
inc
mov
sub
sbb
neg
sbb
or
out
icebp
insb
inc
push
test
jns
ds
mov
xlat
and
movsl
jns
out
mov
push
in
pushl
push
jns
xchg
hlt
jle
out
cmc
addb
dec
jbe
push
clc
ljmp
shrb
or
push
mov
sub
xlat
jb
mov
and
out
sub
fwait
pop
push
dec
push
clc
jnp
dec
pop
shlb
mov
sbb
das
xchg
ss
idiv
jmp
loope
pushf
and
dec
movsb
xchg
lcall
clc
mov
je
push
xchg
sbbb
incl
pop
in
inc
out
in
dec
mov
jmp
je
movsl
fsubl
sbb
decl
push
addr16
stos
xchg
test
movsl
aaa
cltd
das
fs
mov
xor
push
bound
aad
es
xchg
mov
sub
and
push
fldcw
pushf
mov
std
add
repz
les
lods
sbb
fsubl
rcrb
mov
sti
or
aam
mov
jae
jmp
test
fwait
arpl
push
add
sbb
daa
popa
pushf
imul
inc
sub
mov
mov
fucomi
pop
test
dec
push
jle
movsb
push
outsl
loope
ds
mov
out
cli
incl
icebp
pop
pop
daa
je
std
dec
push
inc
repz
cs
jno
jnp
mov
cld
mov
jp
orl
fcom
sub
push
fbstp
loope
add
dec
ret
cli
loopne
loop
icebp
je
mov
mov
pop
inc
iret
mov
movsb
xchg
fdivrs
mov
out
push
fucomi
outsl
push
cmp
push
bound
call
sbb
ss
fcmove
xchg
jne
or
cmc
orl
repnz
cmp
xchg
loop
popf
jb
aaa
rclb
std
mov
inc
sarb
aad
and
sahf
pop
nop
or
inc
decl
adc
outsb
mov
inc
jne
call
addl
insl
jmp
in
gs
ja
jnp
mov
or
inc
in
iret
sar
decl
mov
inc
dec
out
cmp
scas
pop
and
call
ljmp
pop
call
mov
sub
pop
loopne
gs
mov
mov
int3
mov
call
and
outsl
movsl
cmc
sbb
jle
jmp
rcll
adcl
imul
sbb
jns
incl
and
pop
inc
add
divb
mov
sahf
mov
add
inc
call
mov
mov
sbb
push
stos
adc
jl
push
or
push
out
ret
mov
je
lods
addr16
cs
es
pop
in
pop
aam
ja
push
insl
ds
incl
sbb
ss
adc
push
inc
pop
ja
jno
sbb
or
jbe
pusha
ds
push
mov
decl
jmp
and
jecxz
cmpsl
jmp
es
add
mov
and
add
or
insb
dec
inc
movsl
repnz
mov
shlb
or
pushf
lds
clc
mov
mov
cmp
xchg
int
sahf
movsb
gs
popa
cli
mov
cltd
lahf
nop
cmp
sahf
test
ret
repnz
dec
dec
or
mov
fsubrl
fdivr
in
mov
and
data16
xchg
fcoms
sub
xchg
mov
mov
xor
and
add
hlt
mov
in
ljmp
rcrl
hlt
push
lcall
pop
mov
add
sub
int3
or
mov
push
xor
add
imul
jmp
lds
or
inc
push
popl
push
hlt
loopne
fisubl
dec
push
repz
outsb
out
aaa
push
cltd
outsb
jne
add
sbb
push
leave
cltd
sub
inc
add
outsb
aad
stos
movsl
nop
xor
dec
push
pop
sub
hlt
add
sbb
lcall
cmp
mov
test
jbe
adc
xor
inc
fidivl
mov
repz
lret
jns
push
ret
hlt
bound
inc
xchg
cld
out
cli
jmp
pop
inc
enter
lds
shl
dec
jnp
lcall
sub
ljmp
sub
les
add
in
test
or
iret
push
decl
sbb
mov
shrl
and
jl
push
sbb
or
push
pushl
shll
sbb
outsb
mov
cltd
decl
add
pusha
pop
inc
inc
lcall
decl
mov
bound
stos
repnz
icebp
daa
and
push
shlb
lcall
iret
mov
xchg
lret
scas
xchg
fisubrl
das
iret
loopne
or
push
hlt
decl
fs
adc
into
sarb
ljmp
lahf
mov
push
xchg
push
push
fstpt
insl
std
jnp
jne
imul
sbb
stos
sub
sbb
rcrb
pusha
into
sbb
dec
sub
cmp
insl
ljmp
clc
xor
cmp
sub
mov
xchg
repnz
ficoml
das
mov
push
cmp
lock
dec
into
mov
push
pop
xor
dec
lds
push
enter
jo
jmp
cmp
fisttpl
push
pop
in
add
cmp
sub
aam
mov
lcall
push
outsb
mov
in
pop
hlt
fwait
and
test
dec
incl
cmpsb
xchg
smsw
in
cwtl
mov
push
lock
pop
fdivr
cmc
pushl
cmp
cmp
pop
xor
mov
or
loop
mov
inc
sahf
jge
and
cltd
ret
in
repz
roll
mov
mov
pop
in
xchg
inc
pop
mov
pop
repz
lds
cli
call
xchg
or
sbb
stos
cmp
rcr
dec
lret
imul
mov
add
ljmp
push
and
mov
insb
lahf
shrl
mov
call
js
push
dec
add
sbb
and
jg
movsb
loope
sbb
sub
lea
pop
clc
pop
mov
aad
sbb
gs
incl
enter
sbb
xchg
insb
mov
xor
cmpsb
jo
cmp
push
cmp
add
and
rolb
xchg
or
inc
hlt
js
xchg
jnp
decl
xor
lcall
out
das
test
dec
sahf
psllq
mov
mov
fld
inc
jns
jmp
daa
push
jne
dec
xor
xor
lahf
cli
mov
sub
jae
push
bsf
mov
jp
and
jmp
xor
sbbb
jae
incb
sbb
jl
addr16
sub
jmp
call
pushf
pushf
lret
xchg
dec
mov
aaa
push
mov
add
dec
xchg
repz
call
sti
sub
test
insb
cmpsb
lds
in
cld
lea
xor
xor
cmp
and
xlat
pop
xor
push
bound
mov
stos
add
daa
cmpb
cmpsl
in
jmp
xor
roll
xor
jmp
mov
add
push
xchg
cs
mov
decl
or
mov
das
imul
les
mov
inc
insl
adc
cld
setle
and
jae
add
in
sub
push
mov
shr
sti
xchg
mov
lock
cmpsb
leave
mov
mov
pushl
add
push
incl
xchg
xchg
in
fwait
xor
inc
cmp
popa
sbb
xor
out
scas
jle
add
adc
aaa
cmp
sti
jmp
imul
and
test
lahf
subb
incl
xorb
sbb
sub
push
sub
lcall
mov
sub
out
in
sub
mov
rcll
dec
mov
sbb
mov
incl
andl
inc
pop
push
adc
mov
dec
mov
std
test
and
push
jmp
ljmp
fbstp
subb
fcmovb
and
adc
sub
movsb
mov
test
mov
sahf
xor
flds
ljmp
repnz
cli
push
jge
mov
aam
add
jae
test
enter
sbb
dec
push
push
xchg
push
and
mov
je
adc
pop
dec
mov
shrl
cmp
xchg
inc
lcall
int
cld
jl
mov
scas
ds
fs
cmc
lods
loopne
push
mov
or
call
xorl
dec
adc
jg
push
cmp
dec
xor
jmp
adc
daa
dec
int3
lahf
push
das
sub
dec
data16
push
sub
insb
xchg
cmpl
fpatan
sbb
aam
jmp
idiv
sbb
cld
faddl
push
jnp
icebp
ja
enter
push
mov
and
loopne
shl
in
andps
mov
pushf
into
gs
mov
jp
pushl
or
sbb
mov
xchg
mov
pop
and
xchg
punpcklwd
inc
ss
cli
push
jmp
jns
xor
insb
pop
or
arpl
hlt
dec
inc
and
pop
nop
jp
inc
jo
movsl
mov
ljmp
push
push
xlat
inc
movsb
loopne
mov
in
lahf
ret
icebp
jg
jne
and
mov
or
decl
dec
lcall
out
push
dec
scas
sbb
fs
pop
ljmp
icebp
subl
loop
and
shrb
sub
or
jae
incl
aam
out
jns
push
jp
mov
push
push
fimull
xor
push
mov
ljmp
dec
subb
mov
adc
inc
cmp
in
xchg
add
decl
cmpsb
sub
fisttpll
pop
int3
push
dec
pop
ffreep
js
hlt
inc
in
js
and
sti
and
mov
pop
bound
movsb
ret
sub
mov
mov
mov
std
sbb
dec
and
cmp
call
push
push
sahf
or
push
inc
int3
cmp
aam
add
cmpsl
fwait
mov
jmp
movb
mov
jns
fdivrs
adc
enter
push
arpl
pop
mov
lret
jge
mov
das
aaa
pop
xor
movsl
int3
ffree
test
and
sbb
xor
sahf
mov
lcall
arpl
add
jp
imul
mov
and
shr
cwtl
jmp
mov
imul
outsb
push
ds
pop
pop
leave
cltd
pop
popa
fsubrl
arpl
dec
xor
push
mov
add
cmc
pop
imul
outsb
push
out
roll
mov
outsb
mov
jmp
popf
ret
lods
jnp
data16
pop
inc
mov
dec
push
xor
in
and
mov
lcall
popa
adc
nop
sbbb
cmpsl
out
int3
ljmp
rcrl
sub
outsb
in
test
jmp
repnz
sub
movlps
sub
fdiv
mov
lcall
pop
sub
mov
push
imul
mov
addb
loop
lcall
rorb
mov
loope
fbstp
add
cmc
stos
les
test
inc
aam
or
loopne
mov
call
and
sbbb
aaa
mov
and
dec
inc
cltd
xor
test
or
int
out
push
dec
jno
or
jnp
mov
fistpl
stc
addr16
fldenv
jl
dec
jo
xchg
fs
dec
xchg
mov
pushf
cmpsb
mov
adc
xchg
lahf
and
cld
sarl
clc
cli
pop
pop
popf
mov
ficoms
or
sub
jns
scas
xlat
inc
mov
loopne
xchg
popa
mov
mov
mov
cmc
ret
push
jno
and
das
cmp
cwtl
mov
jmp
stos
clc
push
loopne
test
mov
test
and
pop
scas
scas
dec
jo
sbb
fdivrl
incl
pop
cmp
out
add
dec
shl
mov
pop
test
sub
pushl
test
scas
mov
mov
jns
arpl
jb
and
imul
mov
decl
inc
dec
xchg
pop
dec
scas
jp
outsb
xor
mov
iret
cltd
xlat
decl
sub
pop
test
and
lods
jp
xchg
sahf
mov
adc
pop
loopne
jg
imul
popf
push
cmp
cld
pushf
mov
add
mov
fildl
or
xor
xchg
push
shrl
and
ljmp
shll
push
out
cli
sbb
mov
insb
mov
lcall
test
push
addr16
add
mov
std
inc
inc
push
mov
xchg
xchg
adc
pushl
out
fnsave
out
addr16
cs
sahf
jnp
and
mov
loopne
aad
hlt
cmp
mov
jle
dec
sbb
ljmp
lcall
lahf
lods
push
mov
xchg
dec
loope
fmull
jp
outsb
pop
out
lcall
pop
lock
mov
aad
sbb
jns
jbe
cltd
lcall
jecxz
lret
pushf
or
push
xchg
cli
sub
pop
out
pop
fstl
jbe
andl
clc
jmp
jmp
jne
popf
outsb
orl
mov
je
mov
decl
lock
stos
dec
mov
jle
mov
xor
pop
cltd
lods
push
push
call
fsubr
insb
add
sbb
add
push
lods
xor
fcmove
js
pushl
cvtdq2ps
or
jmp
addr16
pop
mov
nopl
hlt
shlb
add
jmp
clc
cmc
out
out
mov
cmp
ljmp
xchg
ret
cmpsl
in
push
shrb
inc
fists
xchg
outsl
nop
sub
hlt
pop
into
mov
insl
ljmp
clc
push
sbb
add
sahf
jecxz
mov
cmp
nop
nop
cmp
jmp
cmp
out
es
pop
scas
mov
mov
jecxz
pop
call
inc
decl
loop
push
inc
fwait
scas
iret
cli
add
dec
fs
pop
jle
push
test
cwtl
sbb
incl
dec
xlat
pop
cmp
test
leave
in
lods
lret
fidivrs
mov
xchg
in
loope
jmp
loop
hlt
out
in
inc
bound
cmc
hlt
lock
sti
cld
jg
call
sbb
xchg
mov
mov
std
cmpsb
js
jae
stc
leave
xor
incl
lcall
inc
push
jns
pusha
adc
push
sbb
cld
or
fcomip
decl
in
inc
rolb
daa
cld
inc
inc
stc
cmpsl
movsl
sbb
mov
sbb
test
inc
js
mov
enter
pushl
in
add
jecxz
mov
int3
iret
rcrb
scas
add
cmp
cmc
call
jg
xor
mov
sub
pushf
sub
sub
test
lcall
dec
aaa
fcomip
bound
hlt
iret
aas
nop
pop
fists
cmp
add
inc
sahf
sbb
xchg
lcall
pop
insl
sub
divl
subl
in
mov
add
jbe
fdivr
incl
pop
sub
cmp
sbb
inc
mov
sub
jg
xchg
rcl
mov
sbb
cmpsb
mov
incl
movsl
nop
and
or
leave
push
sub
movsl
mov
jg
es
daa
fsub
pop
lret
rolb
pop
adc
sbbl
cwtl
movsb
sub
adc
out
mov
sub
test
sub
cmp
jge
xlat
push
adc
and
mov
pushf
inc
test
adc
das
mov
ficomps
push
out
push
cwtl
loope
decl
test
mov
leave
xor
mov
outsb
inc
cltd
mov
cld
ljmp
aam
jnp
ss
mov
fsts
stos
rorb
incl
jo
decl
loop
fsts
or
in
dec
pop
mov
or
roll
call
lods
out
or
jae
mov
mov
repnz
push
imul
jl
cmp
ljmp
jmp
mov
fisttpl
pop
imul
cli
lock
scas
out
call
sti
je
cmp
pushl
add
mov
ss
outsb
insb
call
cld
lea
mov
rorl
push
or
ja
push
push
or
or
ljmp
pandn
pop
adc
fmuls
imul
jb
insl
adc
js
fcomip
jg
sti
call
jnp
fcmovnbe
push
cld
xchg
cli
push
ljmp
jmp
mov
push
sbb
push
sbb
xchg
dec
icebp
lods
push
jo
xchg
pop
lcall
pop
xor
decl
jo
leave
xchg
scas
daa
inc
cmp
mov
out
fisttps
in
sbb
mov
gs
push
lahf
xor
inc
addl
testb
loopne
xchg
lock
pushl
or
jmp
loope
jg
pop
scas
std
ret
jns
sbb
xchg
loope
int
fwait
aam
xchg
mov
pushl
scas
test
pop
jno
and
adc
lret
pop
loope
jg
sbb
cli
push
pushf
or
mov
adc
fnstenv
or
xchg
iret
adc
jmp
fs
jle
push
adc
gs
pop
ja
cld
pop
jl
mov
pusha
fmuls
arpl
ljmp
fildl
pop
int3
xlat
or
mov
jecxz
stc
lds
sbb
mov
jbe
ss
jmp
dec
gs
and
lds
xor
add
in
add
ds
sbbb
pushl
fildll
pop
push
mov
fidivrs
xchg
inc
inc
jg
push
arpl
adc
incl
shr
repnz
xor
adc
lret
fdivrl
rcrb
adc
jg
jmp
xor
shlb
mov
call
jmp
jbe
loopne
sahf
jns
pop
jnp
ficoml
jo
xchg
cs
xlat
decl
add
jnp
push
xor
mov
pop
out
ret
dec
and
pop
add
sar
xchg
ffreep
clc
mov
pop
imul
pop
mov
inc
ja
or
fsubp
push
inc
mov
cmp
sbb
pop
push
push
push
adc
lahf
pop
in
rcr
or
adc
fidivl
ret
dec
out
jo
adc
pushl
jbe
std
mull
adc
aas
sti
imul
jle
scas
int
mov
mov
xchg
int3
test
je
or
pop
gs
jl
xlat
fwait
mov
dec
jecxz
aas
adc
push
inc
adc
push
out
imul
mov
stos
pop
jb
fs
orl
ret
out
clc
or
adc
pusha
lods
popa
adc
inc
and
jecxz
notl
add
lods
cmpsb
dec
dec
sub
adc
inc
or
mov
xchg
mov
or
dec
mov
push
cli
rorl
inc
mov
dec
rcl
or
sub
lea
lods
dec
fidivrl
cs
jb
ljmp
aaa
or
es
sbb
or
inc
loopne
testb
ss
call
inc
mov
bound
inc
pusha
insl
mov
ljmp
and
jno
cli
push
in
pop
shll
push
lahf
or
scas
imull
out
incl
aas
cwtl
cmp
lods
lds
xchg
mov
imul
mov
insl
mov
mov
scas
aad
jne
shll
not
cmp
mov
adc
sub
jns
xchg
inc
stos
clc
ficoml
mov
fists
and
call
fsubrl
incl
aas
xchg
bswap
scas
push
lcall
mov
daa
dec
stos
cmp
ficoms
jg
add
add
sub
mov
aad
popa
lea
dec
ja
call
jge
int
sub
xor
xchg
mov
shll
cmpsb
xchg
inc
call
jecxz
enter
xchg
mov
aad
shll
sbb
jbe
mov
shlb
fidivl
lock
std
inc
sbb
xchg
add
add
icebp
ret
push
lock
out
jl
xchg
call
loop
add
sub
push
inc
sub
mov
sbb
popf
les
or
scas
mov
jmp
dec
icebp
adc
ss
out
sub
dec
or
js
mov
mov
jbe
mov
adc
dec
pop
call
and
ss
cmp
dec
pop
fimull
adc
add
pop
call
nop
jb
cltd
movsb
stos
icebp
aad
out
ljmp
push
xor
test
mov
outsl
call
xor
jbe
sub
insl
inc
mov
jecxz
push
int
js
add
sahf
dec
iret
fld
incl
and
and
sti
pop
bound
mov
bound
imul
mov
sbb
sti
mov
sbb
jmp
jle
adc
cmpsb
add
ljmp
in
pop
aas
imul
lret
pop
dec
lcall
push
sub
jge
stos
test
gs
dec
mov
std
jns
xchg
cli
mov
dec
lcall
fdivr
stos
or
les
pop
cmpb
fistps
push
mov
test
sub
push
cmp
dec
cs
dec
arpl
call
jb
pop
stos
or
out
and
call
push
lret
pop
shll
add
mov
rolb
xchg
ret
mov
arpl
iret
ret
rcl
ret
es
std
dec
popf
mov
lock
lahf
inc
outsb
xorl
inc
xor
lcall
sub
mov
pop
xor
jge
dec
mov
pushl
or
sahf
jae
cli
inc
fstpl
mov
cmp
aam
xchg
and
cli
sbb
incl
or
fsts
es
mov
add
aaa
jg
std
jl
sbb
shl
add
adc
loope
mov
clc
pop
icebp
imul
clc
jno
int3
sarb
inc
mov
popf
ljmp
or
enter
cld
adc
xchg
push
inc
mov
adc
push
aaa
call
lods
movsb
and
pop
or
inc
pop
cmp
pop
or
lret
insl
mov
pop
sbb
and
bound
jmp
int3
push
cli
daa
dec
imul
sub
in
or
mov
adc
mov
gs
lcall
hlt
pop
call
mov
ljmp
cmc
loopne
stos
or
shlb
pop
xor
movsb
push
sub
dec
mov
pop
jne
jns
iret
repnz
inc
lock
ljmp
mov
leave
ret
adcl
shll
pop
jae
pop
cli
or
add
add
aas
inc
sub
dec
push
shr
push
std
jmp
sub
inc
jns
loop
jae
push
and
call
pop
jg
stos
pusha
mov
fldcw
std
jp
out
cli
sbb
mov
popa
inc
inc
sbb
incl
pushf
stc
rclb
pop
jle
inc
stc
jne
xchg
cmp
pop
shll
pusha
pop
insl
pushl
gs
inc
pop
andl
mov
dec
mov
lret
jl
out
dec
lretw
jmp
out
adc
pop
imul
mov
and
daa
xchg
imul
jecxz
leave
faddl
pop
push
mov
mov
xor
mov
ja
push
sbb
inc
push
fsubr
mov
dec
jge
nop
inc
inc
or
add
mov
fidivl
or
das
loope
mov
or
mov
ljmp
adc
dec
xor
lea
mov
jg
pop
jae
dec
and
pushl
jno
out
imul
int3
pusha
sahf
ljmp
xor
ja
fs
fistl
xlat
decl
ss
pop
mov
outsl
mov
dec
in
in
push
aas
mov
or
decl
mov
dec
mov
in
mov
fwait
aaa
xchg
jl
mov
inc
test
xchg
pushw
mov
adc
mov
fs
jae
jg
in
sub
std
sbb
hlt
repz
loop
int
aam
jb
or
mov
pop
fmuls
and
mov
lret
jmp
mov
test
jne
push
add
sub
dec
cli
je
mov
fs
inc
movsl
dec
pop
lcall
sbb
xlat
mov
test
mov
mov
pushl
pop
cmp
xchg
js
jb
push
data16
xchg
scas
and
iret
in
lea
mov
jbe
dec
add
jns
add
mov
inc
jns
call
ret
lcall
mov
hlt
aad
ss
frstor
adcl
mov
decl
decl
pop
faddp
movsl
shl
iret
xor
or
data16
fsubrp
cmpsb
jae
lret
scas
jno
xor
push
in
push
add
xchg
mov
pop
dec
xor
daa
cmc
pushl
push
push
mov
inc
sub
push
pop
xor
fimull
andl
loop
cmp
sub
in
cmpsb
popf
sarb
fcoml
sub
cli
out
fs
or
rorb
test
xchg
dec
xchg
rcrb
xchg
mov
adc
shrb
jg
mov
or
test
ljmp
cmp
cltd
pop
xchg
mov
push
mov
pop
push
fidivs
mov
mov
lahf
shrl
test
pop
test
lahf
xchg
cmp
pop
sub
ljmp
or
mov
int3
mov
fiaddl
out
inc
and
movsb
lods
pop
gs
fistps
arpl
ret
in
xor
jo
mov
adc
cmp
xchg
aaa
in
dec
in
cmp
dec
cwtl
xor
jg
or
jne
pop
notb
cmp
cmp
push
ljmp
sarb
lcall
nop
pushf
add
or
stos
pop
mov
cmp
pop
jl
fcom
lahf
xchg
xchg
into
shrb
mov
call
ljmp
arpl
adcl
popl
jae
xchg
call
cmp
int3
and
aam
rclb
push
xorl
xchg
or
inc
adc
cmp
xchg
cmove
mov
ljmp
or
dec
addl
xor
jmp
fwait
out
std
mov
ss
cmc
jmp
mov
mov
aad
adc
push
clc
jmp
int3
jle
fists
lcall
xor
xchg
stc
or
dec
sbb
sub
or
pop
mov
mov
call
shll
and
pusha
jge
add
xor
pop
daa
jnp
mov
mov
jns
stos
nop
jno
bound
call
mov
pop
cmp
xchg
xchg
adc
cwtl
ficompl
push
fcmovnbe
push
mov
rolb
idiv
sbb
lods
push
mov
loop
mov
ja
daa
aaa
cmpsl
cmp
sbb
mov
repz
and
loopne
pusha
scas
pop
xchg
jns
mov
mov
sub
out
repz
ljmp
lcall
mov
aam
mov
inc
mov
pushf
ss
es
lods
jmp
mul
sbb
incl
andb
aad
xchg
sbb
cmp
dec
scas
cli
pop
xchg
incb
ljmp
aas
inc
add
dec
scas
push
push
inc
fildll
outsl
push
jg
cmp
adc
and
push
arpl
mov
shlb
jle
imul
pop
fdivr
sbb
insl
loopne
push
xor
fidivs
jmp
icebp
push
pop
clc
incl
adc
mov
xor
loope
into
mov
std
imul
and
stos
incl
and
xor
aam
add
and
scas
jns
les
inc
add
call
insl
jmp
data16
imul
cmpsb
mov
inc
xchg
or
and
mov
incl
outsl
inc
loopne
pop
loop
cmp
sbb
cld
ljmp
fsts
movsl
rcr
and
xchg
fnstsw
nop
sub
faddl
push
push
and
add
lret
mov
out
test
pop
fsubrs
mov
cld
jmp
mov
add
add
sahf
or
and
out
pop
adc
dec
daa
push
xchg
cwtl
ds
shll
out
mov
shlb
pop
decl
inc
jnp
push
sbb
fdivs
mov
cmpsl
mov
stos
pop
and
call
cmp
loop
mov
mov
mov
pushl
sbb
cmpsb
inc
push
cmp
and
inc
pop
add
mov
mov
incl
mov
es
sbb
das
or
mov
inc
inc
loopne
fsubrl
xchg
call
ljmp
pop
adc
xor
jb
clc
cwtl
push
inc
mov
mov
pop
mov
mov
in
push
dec
pop
shl
xchg
lods
adc
xchg
push
sub
sbb
out
lock
decl
adc
bound
sub
leave
shlb
iret
cmpsl
pop
fs
test
les
ret
fdivl
ss
call
fsubrl
les
lahf
das
rclb
testb
mov
test
lcall
jbe
add
je
leave
int3
mov
scas
cmp
inc
bound
test
jnp
xchg
push
test
dec
into
repnz
fcomi
lock
xor
inc
outsb
rorl
push
xchg
mov
cmpsl
jecxz
repnz
dec
insl
jg
mov
mov
or
push
int
push
push
adc
mov
jmp
jmp
jb
fs
rolb
insb
sub
js
push
mov
in
pop
xor
sbb
test
out
inc
fimuls
jge
pushl
js
jmp
popa
pop
jmp
mov
in
push
dec
push
inc
jle
fdivr
mov
sub
std
mov
lret
insl
pop
pop
add
out
sbb
loope
add
lcall
dec
arpl
xlat
ficompl
mov
les
sbb
cmp
movsb
cli
icebp
leave
call
insl
cmc
push
xor
push
dec
test
sub
clc
mov
icebp
decl
sub
cmova
xchg
andb
xchg
jg
insb
pop
cmp
jg
in
ret
ficoms
test
push
cmp
inc
push
sarl
je,pn
in
add
or
pop
mov
arpl
mov
ret
into
jb
decl
push
mov
js
mov
decl
lock
sbb
jg
pop
jae
hlt
adc
jne
ret
xchg
add
inc
stc
pop
xchg
push
in
repz
push
dec
mov
in
lahf
push
idivb
add
mov
push
inc
ret
popa
int3
daa
xor
add
out
mov
mov
sub
cmp
ds
and
in
mov
fdivrp
fisttps
inc
xchg
sbb
lahf
cmp
scas
jbe
loope
rolb
fildll
push
mov
pop
pop
pop
cmpsl
mov
pop
cwtl
ds
lcall
enter
push
testb
mov
adc
sti
and
pop
or
call
dec
imul
dec
rcll
fimuls
out
mov
out
xchg
sbb
inc
jecxz
jne
mov
fnsetpm(287
fistpll
sub
mov
orb
cmp
ljmp
pop
push
out
jmp
aaa
pop
jne
mov
push
push
inc
push
adc
std
call
push
and
aam
pusha
call
sub
out
or
mov
fimull
and
out
rorb
xor
ficoml
dec
mov
cmovnp
les
fisttpl
mull
sbb
insl
jge
xchg
xor
loopne
shrb
xchg
ja
ds
shrb
insl
ljmp
rolb
dec
fs
mov
call
mov
mov
jle
rcrl
imul
jge
lods
cmp
jge
repz
mov
and
cmp
mov
dec
xor
mov
stc
fisubl
mov
ljmp
aam
mov
ret
fcoml
clc
adc
ss
popa
sar
pushl
dec
lret
mov
mov
ljmp
add
das
cld
push
js
fs
dec
jl
idiv
pushl
push
aam
sarl
gs
fs
daa
pusha
jbe
nop
fwait
mov
mov
jmp
xchg
arpl
outsb
jb
in
inc
adc
or
push
pop
cmp
repz
incl
dec
push
adc
inc
lods
inc
test
sub
sbb
jp
fldt
out
jmp
ljmp
xor
inc
enter
push
fndisi(8087
stos
fildl
or
sub
lcall
dec
mov
mov
popa
inc
ljmp
add
ljmp
lahf
shl
mov
dec
and
push
stc
popf
call
jmp
and
cld
jne
inc
and
fcos
outsl
clc
stc
call
push
jne
mov
int
pop
pinsrw
mov
sub
push
aam
out
xchg
es
push
jmp
push
popf
fbld
cltd
aaa
stos
inc
clc
jge
sub
pop
push
iret
mov
imul
add
sub
loop
mov
stc
rcrb
leave
popa
sti
hlt
mov
stos
loope
aaa
stos
gs
dec
outsb
int3
adc
and
orl
cmp
leave
imul
pop
xor
xor
lcall
outsb
loope
dec
out
jle
bound
out
jbe
dec
lods
dec
push
lret
xor
mov
pop
and
out
mov
dec
add
fxch
pop
in
sbbl
or
arpl
dec
pushf
sub
std
mov
dec
and
mov
in
punpckhbw
cmp
jnp
pop
leave
mov
cmc
lcall
and
popf
mov
pop
and
jb
insl
inc
add
push
jg
call
add
add
sbb
lods
jmp
inc
leave
nop
or
mov
lcall
aaa
pusha
pusha
push
xor
jg
rolb
arpl
jo
inc
imul
or
pushl
mov
add
movsl
loopne
js
mov
mov
inc
jp
mov
sbb
decl
pop
outsb
or
push
jbe
pop
inc
jl
xchg
pop
pop
dec
stos
in
cmp
stos
jmp
ja
ret
testb
mov
jmp
sar
pushf
jbe,pt
loope
or
jg
cmp
out
xchg
leave
and
inc
dec
inc
mov
pop
sub
jecxz
cmp
ljmp
ja
sbb
ljmp
mov
into
xchg
hlt
test
cmp
call
pop
ljmp
int
pop
lret
mov
arpl
aam
in
mov
adc
lcall
xchg
push
mov
cmpsl
add
dec
push
imul
mov
xor
flds
mov
xchg
ret
jns
or
data16
cmp
adc
adc
imul
dec
sbb
mov
rorb
push
jo
xchg
test
fcmovnu
sti
out
sub
mov
inc
inc
dec
flds
imul
or
push
lcall
negl
jle
insl
aam
aaa
loope
icebp
xorb
jmp
ds
and
call
push
mov
add
repnz
mull
imul
test
pop
mov
mov
ljmp
push
iret
aad
lea
es
lret
hlt
push
adc
es
pop
test
mov
loope
icebp
scas
push
mov
aam
xchg
shrl
xchg
std
mov
bound
cli
dec
or
sub
movsb
xchg
xchg
mov
bound
rol
or
dec
push
xchg
dec
test
mov
cwtl
scas
sub
xor
das
pop
shrb
fcomip
call
mov
jns
adc
sbbl
push
dec
inc
lock
decl
adc
sti
test
add
arpl
dec
pop
and
cmp
xchg
push
incl
inc
cmp
fmuls
pusha
arpl
lds
sti
lea
fcmovne
xchg
jmp
bound
es
adc
aad
jmp
or
pusha
mov
inc
mov
cmp
ss
jbe
pusha
jp
lret
jg
ss
test
sbb
mov
addr16
popf
cmpsl
jb
fistpll
rcrl
xor
fcomip
dec
pop
decb
stos
adc
cmpb
enter
add
dec
out
lea
and
hlt
sub
in
and
lret
fcomp
pop
mov
dec
sahf
xorb
jp
lds
insb
js
add
mov
outsb
pop
push
pop
fldt
xor
lcall
daa
sbb
ret
fsubrs
into
cmpsl
or
outsl
pop
mov
adc
aaa
rorl
mov
nop
xor
jle
int
int3
scas
mov
sbb
cmc
inc
mov
mov
cmpsb
dec
and
mov
insl
pop
aad
pushl
int3
out
in
pop
jo
es
rorb
cmp
ja
cmp
jb
das
pop
pop
push
insl
inc
xor
ljmp
and
aaa
test
xor
clc
cld
xchg
xchg
add
stos
lcall
push
scas
cmc
add
xchg
dec
xor
cmp
insl
xchg
mov
jo
gs
sbb
xor
mov
dec
ljmp
add
xchg
xchg
test
cltd
inc
fldt
xor
push
jg
fwait
dec
cld
test
and
pop
dec
inc
pop
lahf
sub
dec
sub
cld
inc
arpl
fwait
cli
stc
test
decl
lahf
add
inc
mov
addr16
push
push
movsl
pop
in
or
test
shll
push
call
sbb
add
mov
add
mov
fsub
mov
pop
sub
lcall
push
xor
mov
mov
mov
je
lock
into
mov
sub
lcall
es
out
inc
ds
mov
xchg
inc
push
sahf
and
fwait
add
in
sub
pop
push
stc
push
idiv
lcall
cli
mov
sub
add
sbb
in
incl
insl
ds
xor
ss
jg
stos
mov
ja
arpl
sub
sar
repz
push
daa
add
loope
cwtl
sub
xor
mov
jmp
jo
dec
jge
mov
loop
inc
ret
stos
jo
dec
push
int3
sbb
decl
ljmp
jg
repnz
andl
ficoms
call
repnz
sbb
or
pop
aaa
adc
adc
loope
dec
aas
call
lret
mov
aas
test
jo
jmp
int
or
cs
outsl
int
jo
in
and
repz
jnp
aaa
das
popf
cltd
fadd
fdivrs
jmp
ljmp
out
cwtl
cld
mov
dec
or
add
push
ljmp
lcall
dec
sub
daa
cmp
nop
pop
cmp
in
pusha
cmp
cmpsb
fcomp
jg
loope
ljmp
adc
fsts
test
sahf
mov
ss
out
dec
idiv
scas
adc
roll
lahf
mov
mov
sbb
ljmp
and
aas
lret
lret
inc
jp
test
rcrb
dec
shrl
push
fnstenv
push
jmp
add
lcall
mov
xchg
mov
aad
std
aaa
xchg
dec
mov
fwait
mov
cltd
aas
xchg
fisttpll
in
adcl
adc
and
insl
adc
or
lods
inc
mov
and
mov
inc
push
decl
lret
jne
cmp
popa
in
fdivr
loop
pushf
mov
cwtl
xchg
ljmp
pop
jg
lret
fidivrs
ds
xor
cmp
sub
inc
clc
xor
out
cli
sub
and
xor
out
jne
aad
mov
scas
out
mov
cmp
cmpsl
mov
jmp
inc
lds
aam
cmp
mov
ljmp
or
and
test
mov
scas
mov
mov
pop
mov
adc
in
std
fisttps
inc
jle
iret
rcrl
sub
adc
imul
std
notl
in
mov
inc
cmpsb
push
xor
data16
xchg
stc
xchg
push
sbb
xor
call
std
jo
arpl
sub
cmc
bound
cmpsl
and
adc
mov
pop
jg
decl
aam
arpl
enter
cltd
iret
fwait
decl
jle
jle
mov
sar
call
sub
jne
inc
and
sub
test
stc
repz
jg
inc
std
loopne
sarb
pop
sbb
fdivr
fiaddl
xor
sbbb
push
ret
mov
jmp
popa
arpl
cli
sarb
jne
jecxz
jecxz
adc
pop
sbb
mov
or
in
lcall
dec
jp
popa
mov
adc
jnp
cmpsl
sub
or
pop
mov
in
mov
fwait
mov
xchg
mov
mov
outsb
insb
jno
mov
shl
stc
cmp
jl
xchg
mov
adc
add
sbb
jecxz
bound
pop
pop
cmp
cmpsb
xor
into
incl
outsb
das
or
dec
push
jge
loop
cmp
dec
or
lea
sahf
in
or
pushl
sarb
and
jmp
icebp
sahf
dec
imul
xor
mov
or
pushl
in
lahf
lret
xchg
or
adc
cmpl
out
test
dec
jp
pop
lock
ljmp
xor
sbb
inc
push
add
xor
cltd
mov
inc
data16
decl
incl
cmpsl
repz
mov
jns
lea
jne
push
aam
call
jbe
jne
add
dec
mov
xchg
adc
and
jne
or
addr16
daa
mov
and
call
in
das
xchg
jle
jmp
pop
add
push
mov
jae
sbb
dec
lret
mov
pushf
lods
outsb
movsb
inc
out
mov
out
dec
test
mov
adc
xchg
int3
mov
leave
inc
data16
fdivrs
adc
ljmp
pop
mov
dec
mov
loope
jmp
lock
sbb
adc
mov
and
and
mov
push
push
and
mov
mov
ljmp
jp
adc
adc
xor
add
insb
daa
icebp
mov
jle
ret
fdiv
sbb
mov
or
cmc
pop
mov
jg
push
outsl
pop
push
adcl
mov
into
and
ljmp
mov
in
sbbb
das
addr16
xor
icebp
pop
nop
out
or
incl
lods
pop
jl
jnp
or
fimull
pushf
dec
ja
mov
out
adc
add
ljmp
out
sbb
sbb
fwait
movsb
int3
cmp
jl
scas
out
sub
repnz
clc
stos
movsb
lods
add
inc
aas
jp
push
pop
inc
jecxz
ret
and
imul
cli
pushl
and
pop
popf
faddl
push
outsb
inc
test
mov
cmp
xchg
insl
pop
lock
mov
mov
ljmpw
push
ret
inc
ss
sub
leave
sbb
mov
cmc
push
push
mov
jns
adc
push
pop
mov
pop
sbb
pushl
push
lret
jno
adc
in
adc
cmp
ret
cmpsl
aad
lret
ljmp
sbb
aam
call
fidivs
imul
ficomps
jmp
subb
mov
ret
out
es
lahf
rcrl
incl
adc
xor
lcall
leave
jg
pop
mul
outsb
mov
pop
shrl
sbb
decl
test
fcoml
inc
cmp
pop
lret
cmp
mov
divb
cs
fldl
push
fimuls
adc
cld
cmpsl
push
mov
sbb
and
adc
cmc
subl
testb
into
mov
cld
ss
pop
or
and
decl
add
subl
mov
aaa
mov
cmp
inc
push
sbb
pop
into
call
decl
push
mov
cs
int3
add
jl
arpl
popf
gs
lcall
xchg
dec
xor
jo
pusha
and
fcoms
sbb
outsb
jno
xchg
frstor
push
pop
cmp
jmp
lcall
pusha
aas
mov
sub
lcall
mov
clc
push
ljmp
inc
mov
les
dec
adc
lret
enter
pushl
push
adcl
es
lock
mov
mov
mov
jg
lcall
mov
jno
dec
adc
dec
cmp
shl
cmc
xchg
jge
imul
adc
je
loope
aas
call
fldcw
je
incl
xor
mov
pop
xchg
cmpsl
aas
loope
scas
pushf
xchg
data16
mov
cli
sbb
sbb
jnp
xchg
mov
sub
in
loope
sub
mov
adc
iret
or
addb
xchg
outsb
xor
repnz
test
daa
or
mov
aam
or
loope
pop
stos
push
pusha
pusha
ljmp
call
jbe
cwtl
pusha
fnsave
push
pushf
std
in
xchg
and
pop
or
jmp
clc
xchg
cmp
loopne
in
mov
push
xchg
scas
clc
call
outsl
mov
dec
repnz
sar
cmpsl
hlt
bound
pop
xor
pop
cmc
out
mov
hlt
or
mov
push
mov
dec
or
lcall
sti
sbb
insb
xor
iret
push
adc
js
addl
push
jg
mov
cmp
in
jmp
pop
ss
test
xchg
inc
lods
or
cld
ljmp
sbb
cmp
push
arpl
js
leave
mov
mov
pushl
cmp
inc
mov
inc
mov
test
sub
inc
test
mov
jg
je
xchg
inc
cmc
loopne
test
icebp
xchg
mov
mov
mov
test
mov
jmp
xor
movl
xor
mov
mov
cli
out
mov
orl
je
xchg
pop
data16
in
lahf
adc
call
pop
xchg
dec
int
inc
jno
lock
aam
push
lods
cmp
cmc
stos
inc
cs
scas
stos
cmp
or
pushl
test
stos
cwtl
pop
int3
std
iret
mov
enter
mov
inc
inc
sarb
ljmp
cmp
add
mov
mov
jnp
push
movswl
or
adc
das
clc
popa
adcb
pop
js
arpl
call
lcall
outsb
outsl
jnp
mov
cmc
icebp
clc
xchg
or
push
dec
push
add
lcall
fidivrs
aad
mov
imul
jecxz
insl
inc
cli
sysret
dec
lahf
call
pop
sahf
mov
jmp
dec
xor
ss
aaa
dec
clc
xlat
dec
or
negb
xchg
popf
and
fwait
push
lcall
inc
sub
sbb
push
cmp
jae
jnp
sbb
or
or
ljmp
out
mov
dec
fwait
inc
push
ljmp
cwtl
loopne
loopne
push
push
test
test
xchg
or
pop
and
fs
xchg
jg
call
int3
jne
xchg
ret
lahf
or
lods
lea
lock
vpsubsw
fdivl
dec
jae
jb
fimuls
adc
mov
xor
cld
icebp
mov
repnz
dec
mov
addr16
pushl
xchg
xor
sti
pushf
inc
shr
shrl
out
arpl
call
cmp
imul
cmp
les
sub
cmpsb
cmp
mov
fs
repnz
pop
jmp
mov
pop
cld
call
xlat
andl
xchg
std
imul
shll
scas
and
test
roll
xor
out
add
pop
add
into
jg
mov
xor
jns
sub
cltd
outsl
mov
adc
ljmp
dec
xchg
shrl
cmp
nop
lock
add
pop
lea
nop
mov
out
sbb
pop
mov
jmp
jmp
aaa
stc
movsb
mov
mov
jnp
xchg
push
mov
push
leave
into
sub
leave
mov
jg
call
jl
lods
mov
mov
rcrl
imul
jae
jnp
aaa
xchg
sbb
pop
cmp
add
inc
loop
jg
dec
in
mov
test
and
push
into
jp
jmp
outsb
shll
jl
inc
ret
lods
xchg
add
aam
hlt
mov
std
sbb
test
mov
insl
sbb
or
inc
adc
sbb
lahf
std
ss
mov
and
mov
sub
push
cmp
pop
or
jle
push
ss
cmp
cs
sti
add
out
loope
pop
add
rcrl
popf
push
xor
out
movsl
movsl
sti
lcall
inc
movsl
cmp
lods
dec
xchg
jecxz
lea
mov
cmp
in
fadds
xor
mov
call
into
fmull
enter
sub
repnz
push
in
or
int
cltd
ds
mov
sahf
sub
in
or
or
mov
inc
mov
out
jne
mov
lcall
pushf
adcb
outsl
mov
push
push
iret
push
js
lcall
sbb
cmp
and
insb
popa
jns
in
popf
and
or
pop
pop
fs
loope
fimull
rcrl
std
ljmp
push
imul
xchg
incl
mov
ret
sub
pushl
sbb
into
int3
add
f2xm1
add
dec
mov
in
nop
cmpsb
sbb
sub
xchg
imul
jle
dec
jle
sar
cltd
mov
mov
mov
incl
dec
in
repz
dec
pop
bound
jg
adc
push
cs
fstps
sub
aam
rol
sub
push
mov
adc
scas
push
push
jp
mov
and
call
and
insb
pop
mov
pushl
mov
lods
loope
dec
bound
push
mov
inc
shlb
lcall
mov
arpl
pop
mov
or
aad
jae
jecxz
insb
sbb
sarb
je
decl
mov
cmp
movsl
imul
hlt
movsl
gs
sbb
sub
jno
std
decl
push
loope
int
inc
mov
jne
and
mov
lret
loopne
enter
adc
outsl
nop
aad
lock
mov
xchg
cs
jmp
fwait
push
rcrl
cs
push
push
push
incl
popa
inc
xchg
jmp
mov
incl
in
mov
push
mov
adc
or
dec
cmp
add
sub
mov
incl
repnz
jl
fisttpl
lock
mov
test
mov
dec
call
lcall
jp
imul
dec
cmp
bound
cltd
push
xchg
xchg
incl
cmp
testl
jmp
push
push
adc
call
pop
fmull
mov
push
sub
push
loope
dec
push
or
adc
scas
dec
mov
lods
dec
jle
xor
cmp
push
jmp
adc
scas
push
dec
push
pop
xchg
pop
jg
incl
ja
and
mov
sub
idivl
call
inc
aam
stc
sbb
in
js
jg
or
adc
push
call
push
out
loope
fidivl
pop
imul
shl
mov
in
daa
lret
icebp
decl
lock
jg
roll
mov
mov
xor
je
or
js
sub
daa
hlt
enter
push
sahf
lahf
inc
or
pop
cld
loopne
jne
shrb
and
aaa
jmp
mov
incl
test
mov
pop
sub
mov
pop
icebp
cmp
or
filds
or
cmc
cmp
outsb
roll
cli
adc
loopne
jmp
add
in
les
pop
jle
js
sbb
xchg
or
call
jo
inc
push
and
sbb
jl
dec
pop
das
push
in
sub
and
mov
jg
mov
pop
push
cmp
pop
lds
mov
lcall
fs
and
inc
pop
mov
loope
or
mov
jb
in
decl
lock
inc
loope
nop
or
pop
int
in
popa
fisubl
je
fbld
popa
es
fwait
cli
xor
sub
mov
inc
jmp
add
pop
pop
scas
mov
sarb
lock
or
movsb
mov
cmpsb
lods
ja
ds
dec
sar
cmc
and
aaa
add
dec
leave
imul
and
pop
push
test
xchg
aaa
pop
cld
mov
sbb
add
mov
clc
or
jmp
add
add
in
mov
sub
pushl
sbb
push
ja
inc
sbb
ret
aam
pop
sub
js
push
adc
aaa
fidivs
xchg
dec
int3
bound
movsl
test
jecxz
mov
jmp
dec
je
stc
dec
push
scas
test
mov
jl
test
jne
jge
mov
mov
push
or
mov
mov
jg,pt
in
lock
ficoms
out
and
jp
or
mov
repz
dec
push
negl
adc
cmpsb
inc
sbb
pop
sahf
rcl
xchg
inc
pop
xor
in
in
adcb
lcall
mov
xor
push
fisttpl
aaa
aam
pop
jmp
aad
mov
add
push
inc
cmp
adc
xor
add
pushl
add
shl
and
imul
das
lcall
loopne
pop
adc
imull
xchg
push
stos
scas
dec
repnz
lcall
or
scas
add
push
lret
push
sahf
adc
cmp
sub
or
lcall
mov
adc
daa
push
int3
sbb
mov
xchg
add
ljmp
xor
out
push
ror
mov
cld
mov
sub
sub
push
cld
sub
fidivrl
push
loopne
addr16
sarl
mov
cld
in
mov
sbb
call
fildll
aaa
mov
push
mov
sub
lret
mov
ljmp
inc
in
aas
mov
or
fcompl
jle
repnz
mov
push
test
lcall
push
popa
rorb
cmp
xchg
push
ret
pusha
inc
pop
jmp
sahf
mov
push
add
adc
mov
push
dec
call
xchg
pop
into
mov
and
pushl
mov
inc
arpl
out
sbb
mov
test
pop
movsb
lds
xchg
sub
decl
sbbb
adc
fistl
cli
ljmp
dec
xor
pushl
sub
das
sub
lods
sub
je
inc
pop
cwtl
mov
ds
push
xchg
ss
ljmp
mov
repnz
sub
jle
les
sub
imul
ljmp
lods
dec
and
popf
xchg
push
xlat
jno
inc
ss
test
roll
mov
pushf
and
ljmp
cmp
mov
sbb
sub
fadd
xchg
adc
jo
mov
dec
jg
cltd
arpl
add
jns
jns
jbe
test
fildl
popf
add
jmp
adc
dec
adc
fcmovbe
hlt
shrb
mov
mov
insb
xchg
inc
movsl
daa
ljmp
push
pop
dec
inc
adc
lea
push
mov
rorl
push
stos
jle
std
push
icebp
decl
ss
add
dec
aam
stos
cs
adcb
sub
test
fildll
cmpsb
cmp
cli
in
push
xorl
and
mov
mov
mov
mov
ljmp
inc
test
jno
aam
movsl
sub
cmpsl
and
jg
pop
mov
call
std
xchg
cmp
cmp
aam
pop
cmp
pop
ljmp
pop
decl
arpl
inc
fistps
pop
mov
fists
jnp
pop
imul
pushl
or
dec
pushf
pop
sbb
sbb
push
in
jge
adc
dec
out
imul
pop
xchg
js
rcrl
push
push
pop
std
or
inc
and
lcall
xor
fstl
shl
xlat
das
mov
pop
push
add
repz
ljmp
idivb
ret
rorl
push
cmp
divb
push
cmp
jge
jnp
cltd
mov
std
incl
int
leave
rcrl
mov
mov
mov
push
cwtl
jg
add
push
sbb
xchg
mov
push
call
test
aaa
pushl
cld
or
out
push
hlt
bndldx
xor
lcall
out
pushl
or
push
aaa
int
lcall
and
or
cmp
cmpsl
lcall
iret
dec
xchg
mov
lock
xorl
adc
fdivl
shlb
fcomip
lret
inc
sub
adc
hlt
adc
or
sar
jg
sbb
pop
nop
rcr
cmp
popf
inc
adc
push
fisttpll
das
pop
fdivl
pushl
xchg
in
inc
cmp
pop
mov
xor
imulb
lods
cmp
decl
cmpxchg
xchg
jne
xchg
loopne
mov
jb
xlat
pop
pusha
pop
in
lcall
dec
push
lods
sti
add
jb
shll
scas
clc
pop
or
fmulp
xor
inc
addr16
incl
xor
add
testb
dec
jp
jbe
fldcw
cmpsb
push
int
loope
ljmp
lea
lods
xlat
push
dec
mov
mov
add
int
test
sub
pop
jae
xlat
push
inc
xor
call
out
lahf
xor
dec
daa
xchg
adc
dec
int3
cmp
mov
pop
or
cli
decl
xchg
sub
push
jle
jge
sub
jnp
mov
test
fadds
ljmp
arpl
mov
xchg
adc
fstpt
mov
out
rcrb
loopne
ljmp
dec
rcl
xor
test
inc
out
xchg
push
fdivrs
add
xchg
xchg
call
in
jge
push
fdivp
enter
das
lock
mov
lret
lret
pushl
jecxz
je
popa
cld
je
jmp
inc
popa
iret
ds
mov
bound
push
and
jle
lcall
and
xchg
testb
xchg
mov
and
lret
and
fnstsw
call
pop
aas
std
mov
or
incb
imul
dec
and
loopne
push
subb
mov
insb
inc
cmp
pop
icebp
cld
add
mov
hlt
mov
adc
inc
jmp
dec
out
mov
mov
adc
jle
scas
add
aam
sub
dec
data16
shlb
push
add
xchg
outsb
jle
mov
pop
hlt
inc
stos
sub
sub
fidivrs
cld
xor
cmpsb
loopne
xchg
cmp
aad
lcall
nop
adc
nop
jmp
or
js
xor
jecxz
or
xchg
dec
xchg
sub
mov
ljmp
lret
je
subl
mov
add
ljmp
pop
outsb
adc
mov
and
sub
push
dec
push
shlb
iret
jle
addr16
pushl
and
mov
sub
incb
cltd
add
je
movsl
arpl
insb
lcall
jg
cmpsl
jae
push
cwtl
mov
sub
push
mov
mov
lret
jmp
dec
fdivrl
push
xor
insb
insb
push
pop
inc
mov
or
out
inc
loop
jmp
fdiv
test
imul
clc
out
sbb
pop
in
pop
and
xchg
sub
stos
into
add
out
cli
incl
data16
or
lret
les
xchg
psubusb
clc
insl
clc
or
pushl
push
mov
pop
jae
push
cmc
mov
fisubrl
mov
les
std
sub
inc
or
inc
pop
jo
popf
lea
cltd
clc
imul
xchg
lea
mov
push
ficoml
out
shl
test
shl
push
lcall
cmc
mov
inc
mov
call
dec
adc
jno,pt
js
pop
in
sbb
movsb
xor
add
andb
adc
loope
mov
aad
js
mov
divb
cltd
lret
sub
decl
add
mov
dec
sbb
lods
push
mov
xlat
pushf
outsb
cltd
xor
lcall
adc
movsb
sbb
popa
sbb
fildl
adc
sahf
icebp
or
sahf
scas
cli
dec
lcall
fdivr
jns
cmpb
jecxz
lret
xchg
cli
sbb
mov
addl
call
cmp
mov
dec
add
lods
enter
cmpsb
mov
bound
push
std
rolb
and
out
insb
lock
jne
aaa
cmpsl
mov
dec
ficoml
cmp
cmp
fiaddl
jl
or
adc
adc
jmp
sti
outsl
cli
pop
sbb
rcll
int3
mov
xchg
lds
enter
pop
sti
push
jecxz
xorb
incl
inc
push
xchg
popf
jne
xchg
mov
lds
dec
ljmp
pop
sbb
aaa
mov
lds
repnz
in
pop
into
sbb
or
inc
scas
clc
incl
add
cmpsb
daa
mov
push
bound
pop
adc
or
push
jmp
arpl
sbb
dec
and
outsb
sbb
popa
lret
pop
dec
movsl
mov
js
xchg
lret
incl
iret
pushf
lcall
pop
daa
add
ret
mov
call
in
push
insl
bound
loop
cltd
cmpsl
xchg
scas
out
or
jge
es
dec
in
subl
pop
sub
mov
test
shrl
popf
pop
int
ret
std
call
xchg
adc
rcl
mov
in
push
cmp
je
cli
les
or
mov
pop
je
shlb
dec
jb
test
ljmp
mov
xor
push
data16
outsl
and
testb
inc
test
jp
push
xchg
ja
or
js
andb
insb
mov
push
push
add
push
cwtl
movsb
mov
test
mov
loop
popa
mov
lock
adc
dec
bound
call
fstps
xchg
lret
jne
push
ss
push
cmp
xor
mov
ret
icebp
jg
mov
jns
loope
adc
push
arpl
shl
out
mov
cmp
xchg
cs
loope
pop
push
or
xor
ljmp
cmp
pop
adc
push
pusha
jnp
push
jge
push
in
sbb
mov
sub
dec
nop
dec
sbb
push
faddl
add
push
jno
data16
inc
xchg
lods
out
lods
ljmp
mov
inc
call
ds
sub
mov
cmpsl
rolb
es
jae
lods
jmp
sahf
lcall
lcall
xchg
cs
lcall
fiaddl
lds
lcall
aam
jns
jo
push
and
sbb
mov
sbb
push
clc
push
jns
cwtl
jnp
mov
inc
clc
or
mov
test
cmp
jns
int
jg
test
ljmp
pop
je
daa
ljmp
lcall
fildll
fwait
jmp
inc
inc
cmpsl
sbb
ret
push
in
mov
repnz
pop
pop
jmp
popf
add
loop
daa
pop
aas
aas
lret
push
cltd
adcb
ds
movsl
cwtl
icebp
jp
adc
out
cli
pushl
sbb
test
cmp
sbb
cld
or
jmp
outsl
ja
mov
push
test
sarl
je
leave
and
mov
ss
mov
mov
xorb
or
jns
add
push
xor
jmp
insl
scas
or
pushl
xor
mov
je
mulb
popa
jno
clc
and
and
call
xor
push
jno
and
and
test
fnsave
cmp
mov
ljmp
shll
dec
add
scas
push
sub
cmp
mov
call
adc
mov
movsb
imul
out
shll
cli
xchg
xchg
xchg
call
sub
std
stos
jb
fsubl
pop
jmp
xchg
mov
mov
cmpsb
adc
sahf
xlat
dec
push
popa
cmp
nop
xchg
mov
lcall
ds
mov
cs
repz
hlt
fstpl
bound
into
cmp
jbe
jmp
lret
ljmp
mov
pop
into
loop
aad
push
push
inc
arpl
fsubs
xchg
push
lock
decl
or
jp
outsl
das
dec
mov
xor
mov
arpl
push
sub
nop
xor
incl
xchg
push
sbb
nop
outsl
insb
inc
cmpl
jae
cmc
cs
addr16
jmp
inc
adc
dec
mov
fldenv
jno
cwtl
fdivr
jmp
sbb
mov
fcmovb
jo
incl
daa
mov
push
js
iret
and
jl
aad
mov
pop
test
inc
addr16
ss
lret
jns
das
cmp
mov
leave
test
mov
jnp
leave
pushf
cmp
clc
jmp
iret
cmp
lods
xchg
insl
add
mov
mov
decl
fcoml
push
hlt
xchg
mov
hlt
into
stos
add
lods
mov
mov
push
rcl
inc
mov
fdivs
call
mov
pop
mov
mov
lret
out
icebp
pop
shrl
leave
jae
mov
xor
test
push
jmp
sbb
movsl
sbb
and
sbb
or
mov
incl
sarl
sub
sti
jb
push
or
lret
mov
jge
sbb
lods
cmp
incl
xchg
jp
ss
jmp
mov
lds
xchg
dec
push
sub
out
add
lcall
lods
jae
inc
aaa
lock
mov
or
add
inc
test
sub
call
push
orb
inc
lahf
imul
and
ljmp
lar
pop
pushfw
add
cmp
lcall
ss
and
fsubr
mov
inc
addr16
pop
je
mov
sbb
sub
jl
sti
out
mov
adc
les
sbb
test
pop
incl
mov
mov
insl
std
gs
test
pop
adc
fistps
enter
call
shll
inc
ficomps
jle
xor
lods
js
sbb
mov
fdivrs
in
cmp
mov
push
mov
daa
dec
inc
jb
mov
push
push
insl
daa
pusha
xlat
in
jo
icebp
outsl
xchg
or
cmp
push
xor
sub
call
sub
adc
ljmp
ret
out
shrl
jmp
sar
lret
loope
je
pop
arpl
pop
xchg
push
cwtl
outsl
cli
mov
cmpsl
mov
cltd
mov
pop
lret
or
push
decl
incl
pop
lods
mov
orl
cwtl
pushl
lret
sahf
fiaddl
sub
xchg
lret
js
movsl
int3
fimuls
rorl
scas
push
cs
pushl
or
fstp
adc
sbb
xchg
adc
lds
xor
sahf
jne
scas
push
cmp
stos
add
out
ljmp
inc
lods
stc
aad
je
aaa
jp
andb
inc
sub
lods
sbb
fdiv
repnz
sbb
call
lock
repz
push
ret
jo
ljmp
repnz
cmp
in
leave
mov
xchg
mov
push
pop
push
out
lcall
shrb
je
xor
ret
shll
stos
ffreep
inc
pop
jno
jo
adc
gs
jle
movsb
or
mov
cli
movsl
push
or
fldl
inc
incl
dec
sub
pop
cmp
fisubs
push
adc
jae
mov
xor
jg
fildl
inc
push
push
dec
or
data16
mov
xchg
xchg
jmp
fstpl
dec
and
popf
insb
add
test
jne
cmp
cmp
xor
push
hlt
stos
and
mov
test
jne
jg
test
test
jg
add
jg
filds
push
jecxz
jb
inc
cmpsl
imul
jg
sahf
xchg
pop
sti
inc
pop
cmpsl
xchg
cmpsb
dec
mov
sbb
insl
in
mov
lea
jo
test
or
mov
js
pushf
movsb
loop
sar
pushl
mov
sub
lcall
cmpsb
in
shl
pop
ja
clc
jns
fistpl
pop
das
jg
push
pop
stc
mov
or
ljmp
fdivl
rol
xchg
mov
push
xlat
aam
data16
dec
pusha
out
cmpsl
jno
pop
call
xchg
sbb
jp
pusha
je
adc
enter
push
mov
mov
fwait
inc
ljmp
inc
in
adc
movsb
pop
shlb
lret
mov
jne
gs
cmp
mov
in
stos
fdivrs
fildll
enter
or
or
xchg
cmp
dec
pushl
mov
shlb
xchg
xor
push
cld
xchg
jns
fs
cltd
pop
ja
jbe
dec
push
ja
jno
rcl
js
push
movsl
fsubrl
pop
dec
rcll
push
or
and
sub
dec
es
dec
nop
das
popa
pop
jl
mov
fs
mov
ja
cltd
fcoml
push
loop
cmp
push
xchg
loope
sbb
gs
repz
xchg
cmpb
jg
xor
add
cli
jbe
cmp
adc
and
lds
ljmp
mov
daa
loope
movsb
fisubl
ss
or
cli
bound
sti
lret
cwtl
andb
in
call
rcr
pop
cli
adc
fcoms
rcll
imull
cmp
cmpsl
std
popa
fsubrs
data16
incl
fsubs
xchg
cmp
test
mov
daa
loopne
in
sub
adc
sub
jb
pop
mov
inc
arpl
leave
mov
movsb
mov
mov
addb
mov
xchg
xchg
outsb
push
dec
ljmp
mov
in
mov
xor
and
insl
loope
movsb
dec
xchg
dec
int
pusha
scas
test
or
fucom
jl
add
outsb
inc
push
bound
daa
subb
cmp
mov
dec
mov
ja
cmp
adc
inc
mov
push
mov
or
dec
pop
xchg
cmp
cld
mov
incl
loop
nop
or
inc
fabs
dec
adc
cli
sub
sbb
dec
pcmpgtw
clc
push
andb
scas
leave
cltd
xor
push
sub
xchg
sub
add
hlt
cmp
inc
xlat
add
mov
fimull
dec
mov
movsb
and
push
inc
cld
das
clc
jge
or
lods
and
imul
push
movsl
and
dec
adc
add
jmp
scas
inc
cmp
enter
add
sub
inc
test
dec
push
movsb
jg
aaa
es
subl
mov
xor
orb
jg
pop
or
les
or
mov
xor
jmp
clc
shl
repnz
in
popf
sub
or
sbb
outsl
and
or
inc
outsb
ret
jb
xchg
cmc
or
mov
xchg
dec
mov
ljmp
push
lods
push
jp
adc
adc
adc
fdivr
fdivrs
daa
stos
fwait
jmp
jne
pop
imul
dec
xchg
dec
vpmaxsw
lock
lret
adc
jb
in
xchg
push
loope
mov
addr16
dec
repnz
out
jp
or
out
jae
mov
xchg
mov
repnz
out
inc
mov
mov
insb
pusha
xlat
mov
xor
dec
push
sti
mov
incl
xor
or
mov
lret
clc
mov
out
lcall
sarl
xor
pop
fimuls
dec
pop
pop
mov
xchg
movsl
pop
mov
xlat
fdivrs
dec
sub
mov
pop
push
xor
jg
xchg
mov
xor
add
das
ret
pop
cmp
es
decl
cmp
sahf
imul
mov
mov
jno
fidivrs
mov
mov
jae
std
dec
jp
flds
aas
test
mov
mov
cmpsl
push
mov
lret
jmp
sbb
arpl
decl
pop
jmp
jo
sbb
or
test
jbe
ret
imul
iret
iret
in
ud0
mov
sbb
mov
push
push
inc
jmp
ret
inc
pop
fsubr
out
xchg
outsl
add
jmp
aas
stc
mov
pop
dec
imul
repnz
jns
decl
lock
cs
aam
popf
push
std
mov
lods
or
dec
cld
sti
imul
scas
mov
aas
lods
sahf
or
add
and
cmc
jle
sbb
jae
jmp
jmp
icebp
sub
stos
jl
mov
decl
fcomp
std
fildl
in
pop
sbb
or
shl
inc
test
fwait
outsl
mov
lret
add
add
push
xor
notb
mov
popa
and
add
mov
adc
mov
call
pusha
decl
mov
mov
cmp
cs
fdivrl
aas
ss
and
mov
lret
lahf
mov
or
sub
sti
cwtl
add
jmp
inc
jle
pop
sbb
dec
js
mov
xchg
popa
push
xchg
xchg
mov
dec
cmp
ret
flds
pop
fcomip
ljmp
jl
popa
and
imul
adc
icebp
jmp
push
ljmp
in
mov
jl
popf
outsl
popa
fbld
fildl
repz
xlat
cld
dec
mov
ljmp
add
frstor
mov
iret
cwtl
mov
jl
in
sbb
ror
mov
nop
and
in
sub
jl
jge
lds
jmp
xchg
idivl
push
lds
xchg
fcmovb
aad
pop
push
jno
call
add
dec
movsb
icebp
in
test
lcall
in
xor
add
mov
frstor
or
cmp
decl
fildl
movsl
mov
cwtl
pop
push
or
mov
pop
ds
imul
insb
scas
mov
loopne
jmp
dec
inc
pop
stos
dec
sub
idiv
ljmp
fs
aam
outsl
mov
shl
mov
lods
inc
cmp
ja
call
cld
fstp
lret
xlat
add
nop
psrlw
cmpsb
xchg
fwait
mov
inc
ficoms
cld
or
xchg
enter
push
test
xchg
jbe
sub
sub
inc
mov
out
push
add
sahf
ret
out
cli
lock
decl
add
jge
insb
imul
loopne
ficoms
sbb
lret
stc
push
adc
loope
aad
aas
and
test
shll
es
lcall
nop
add
inc
lods
ret
insl
in
andb
inc
pop
fdivs
aas
fadds
sahf
cmpsb
cmc
cmp
incl
fs
cld
roll
jae
gs
ss
subb
lcall
sub
data16
mov
ret
push
or
cmp
pop
popf
lret
inc
mov
jae
jns
fisubs
push
pushl
adc
pop
in
pop
push
pop
sub
decl
out
stos
cmpsl
sub
es
jae
sti
cli
mov
sti
mov
mov
arpl
mov
push
cmpsb
lock
inc
in
mov
ljmp
clc
sarb
cmp
bound
insb
jb
ret
loope
fdivr
lcall
mov
inc
cmpsb
es
out
ljmp
adc
mov
repz
ljmp
jmp
aad
jl
fsubrl
adc
adc
clc
arpl
hlt
sbb
push
mov
ss
lcall
pop
lret
outsl
iret
xchg
xchg
shll
jecxz
shll
mov
pop
pop
int3
dec
sbb
ljmp
mov
into
cmp
aad
xchg
pop
sub
stos
bound
and
incl
mulb
aad
rcr
into
jp
jle
addr16
jo
dec
out
aam
jp
jg
add
jnp
ljmp
js
ret
xor
jge
jae
xchg
sahf
xchg
popf
mov
pop
js
jge
xchg
decl
mov
out
sbb
sbb
add
imul
xchg
cmp
div
rcrl
jmp
xchg
test
es
cmc
dec
fisttps
jae
xor
and
decl
and
fucom
leave
out
adc
jge
aam
dec
jae
in
inc
iret
cmpsb
mov
jae
cli
push
stos
js
js
aas
out
in
insl
mov
cmp
jmp
movl
lcall
clc
or
xor
lock
mov
dec
add
mov
movsl
sbb
jnp
int
sbb
or
inc
lahf
and
sbb
mov
call
push
test
sahf
xor
test
sbb
negb
xor
cmp
ja
cmp
mov
pop
push
xchg
mov
lods
enter
mov
xchg
fdivl
es
incl
lds
cmp
inc
adc
pop
addr16
ss
mov
mov
cmc
hlt
out
dec
call
mov
movsl
jmp
jb
popa
or
movsb
aad
sahf
movsb
dec
add
mov
dec
ds
dec
xchg
mov
add
in
push
out
jno
dec
test
fxtract
jns
add
dec
incl
fsubp
jmp
add
jb
or
lcall
loop
sub
jmp
scas
and
mov
pop
mov
fldenv
fcomps
aam
and
call
sbb
xchg
xor
cvttps2pi
pop
negl
lds
dec
lcall
sbb
out
xor
and
in
movsl
xchg
ret
and
out
in
xor
mov
pushl
jno
insl
cmp
sub
cmp
cmp
stos
mov
jmp
incl
xchg
popa
pop
mov
inc
cld
push
push
cmp
jmp
insl
sub
xchg
mov
pop
mov
mov
stos
inc
test
xor
adcl
sub
ret
inc
push
and
push
push
dec
cmp
es
fmull
cmpl
push
pop
inc
pop
or
and
push
pop
push
aad
mulb
rolb
lcall
jecxz
adc
int
inc
fnstcw
bound
aam
fs
push
lods
cld
int
jne
dec
dec
out
movsl
lcall
sub
ss
flds
in
stos
dec
or
fdivrl
sar
call
dec
icebp
xor
stos
add
iret
pop
loopne
sub
xor
mov
ljmp
cli
pop
iret
arpl
dec
sub
push
stc
fdivl
sbb
into
sbb
add
enter
mov
bound
stc
pop
pop
inc
mov
lcall
inc
pop
mov
mov
mov
outsl
pop
pop
lock
call
out
aad
fstpt
dec
enter
push
jae
and
add
out
mov
decl
push
add
inc
enter
mov
les
das
jecxz
jg
fs
fmull
mov
shlb
aad
pop
cmp
mov
call
push
icebp
inc
cld
outsl
inc
mov
mov
xor
outsb
loopne
repz
call
das
mov
xchg
repnz
out
sub
and
dec
and
neg
xchg
jae
mov
mov
mov
fadds
sbbb
es
out
jmp
sbb
xchg
push
fwait
aad
cmp
cs
adc
daa
test
fistps
xor
and
call
clc
call
scas
jmp
sahf
aam
int3
lods
in
cmp
dec
test
mov
mov
lea
jns
mov
inc
pop
jecxz
inc
mov
mov
ret
mov
adc
xchg
mov
cli
fidivrs
jnp
loope
mov
pop
jns
xchg
sbb
ss
loop
mov
iret
mov
sbb
mov
add
xchg
shrl
cmc
ljmp
scas
mov
icebp
push
test
jmp
inc
sbb
inc
pop
inc
inc
incl
cmp
ds
dec
or
adc
lcall
mov
lcall
cltd
out
cmp
jb
xlat
or
dec
mov
and
and
in
lcall
in
pop
mov
mov
ret
and
mov
ljmp
ds
sub
fwait
inc
lods
jecxz
sub
xchg
movsb
pop
jno
push
inc
or
inc
sarb
xor
jle
movsb
cs
dec
xchg
sbb
out
jmp
lods
jmp
jmp
addl
int3
hlt
push
lcall
orb
stos
pop
mov
aad
pop
lods
in
or
and
lods
mov
incl
lret
mov
lock
sbb
mov
push
jge
lret
ja
pop
adc
decl
pop
dec
lock
cmp
insb
mov
dec
mov
fistpl
xlat
pushf
xchg
loopne
call
lcall
cmc
add
pusha
cmp
pushl
mov
push
mov
scas
int
fdivrp
pushf
lcall
ud2
sahf
aas
lods
push
push
aas
out
inc
or
loop
jno
cmp
xchg
or
iret
sub
sahf
sub
or
push
ljmp
mov
push
xchg
or
in
jl
jecxz
xchg
inc
add
ljmp
or
je
popa
sti
aam
cli
lret
cmp
mov
aam
fs
rcl
and
ljmp
loope
xchg
pop
xchg
mov
mov
lock
dec
jge
lcall
mov
sbb
mov
pop
xlat
mov
mov
jmp
out
pop
xor
cmp
xor
das
cli
lcall
mov
les
xor
mov
cmp
or
dec
pop
jg
std
push
inc
cmp
lods
mov
jl
jno
in
jns
aad
sbb
lods
mov
aam
ljmp
call
das
mov
mov
adc
xor
inc
xchg
xor
test
adc
dec
mov
jg
test
sub
loop
stc
adc
pop
scas
cli
call
inc
imul
popa
inc
xlat
mov
cwtl
cmc
bound
int
add
mov
xor
pusha
xchg
dec
loopne
pop
out
mul
adc
fisubl
lahf
mov
loop
ljmp
mov
adc
xchg
cmpsb
mov
xchg
mov
sahf
andb
xchg
fnstsw
xor
nop
fiadds
insb
arpl
loope
rolb
inc
divb
xchg
repz
pushl
incl
mov
incb
mov
int3
fsqrt
jl
cld
inc
popf
jbe
jp
cmp
jmp
add
je
jecxz
ret
xchg
add
xchg
xor
mov
sbbl
bound
andb
js
xchg
sarl
pop
inc
das
adc
xchg
cld
js
shll
cmpsl
daa
push
sub
and
inc
mov
incl
sahf
pop
out
pusha
idivl
imul
push
cld
lahf
cwtl
adc
mov
stos
push
dec
stos
sub
mov
out
pop
jmp
stc
inc
fldenv
dec
sub
fisubrl
in
js
push
push
xchg
cwtl
cli
mov
fwait
ljmp
add
loopew
mov
notb
xor
jne
push
or
clc
xchg
in
push
adc
addb
adc
pop
lock
push
xor
sahf
outsl
adc
xchg
fistpl
push
push
dec
bound
std
pushl
sub
fsubrl
xchg
into
or
fbstp
divl
mull
dec
test
xchg
xor
xor
in
loope
or
call
pop
cmc
or
and
inc
adc
ljmp
pop
pop
sub
fidivl
sub
pop
ret
mov
dec
mov
adc
push
andb
popf
loope
fdivrl
daa
lods
pop
fs
decl
pop
ret
cmp
scas
jnp
mov
adc
mov
int3
sbb
lcall
jmp
fsts
jmp
pop
xchg
fstpt
insl
mov
incl
dec
and
push
mov
pop
gs
xchg
out
cmpl
popf
ja
call
adc
sbb
fsts
pop
xchg
push
data16
pushl
jmp
cmpsb
add
jns
adc
xor
mov
jnp
ljmp
jmp
mov
rorb
repz
dec
inc
sub
lret
push
jb
cli
cld
jnp
loopne
jo
cwtl
adc
iret
sub
mov
jp
pop
xchg
iret
pop
sub
sub
das
sbb
push
nop
push
adc
in
push
jnp
imul
insb
sub
adc
popa
fisttpll
inc
jmp
popf
push
or
inc
in
and
push
shll
cmpl
lret
push
jl
xchg
pop
xchg
xor
cmp
push
in
add
dec
dec
pop
lcall
jns
jbe
push
sub
lods
int
adc
add
mov
ljmp
stos
clc
int
mov
ljmp
leave
xor
aaa
movsb
xchg
inc
jnp
data16
fnstcw
jp
popf
jo
das
sub
decl
jmp
imul
xchg
or
icebp
arpl
stc
add
nop
dec
xchg
lret
pop
out
xchg
cs
aas
push
aaa
ret
ljmp
cmp
push
sahf
xchg
stos
mov
ja
adc
xchg
mov
std
xor
jg
cmpl
outsl
pop
lret
outsb
add
ss
ljmp
inc
clc
push
int3
dec
lods
lods
movsb
shlb
daa
jge
xor
lret
push
and
lds
pop
addr16
mov
fcmovb
aad
mov
jnp
mov
outsl
mov
inc
cmp
mov
stc
mov
or
mov
loope
inc
in
sbb
mov
dec
mov
jmp
out
enter
lds
sbb
pop
mov
cmpsb
adc
lods
fwait
inc
clc
dec
loop
out
push
in
insl
cmpsl
sub
sbb
out
clc
loope
pop
pop
scas
insb
mov
xchg
sahf
and
pop
xchg
mov
ds
ljmp
xchg
sub
mov
dec
bound
sub
jnp
mov
mov
dec
cmc
aas
div
jg
mov
or
push
addr16
push
sahf
ret
jmp
sbb
dec
xor
pushl
sahf
flds
add
push
jmp
test
mov
bound
mov
dec
jnp
sbb
aas
xchg
push
std
arpl
sbb
add
movsb
lds
addb
sbb
jmp
add
mov
in
dec
out
negl
xor
jl
dec
add
loop
inc
jb
push
inc
iret
xchg
mov
incl
fldcw
add
mov
push
mov
push
sar
push
xor
cs
mov
sbbb
aaa
cld
inc
add
dec
jmp
jnp
test
es
out
sbb
sbb
decl
pop
mov
dec
xchg
out
jb
xor
icebp
adc
rcrl
dec
jo
add
mov
jmp
das
jle
adc
pop
ret
lcall
push
mov
ljmp
call
out
call
pop
cwtl
das
mov
into
daa
mov
mov
popa
pop
incl
daa
jae
inc
mov
lret
adc
push
or
pop
inc
xor
pop
lahf
shll
test
incl
ljmp
shll
js
in
iret
jle
push
jl
dec
test
lahf
arpl
outsl
push
pop
mov
jne
sbb
negb
xchg
addr16
outsl
aaa
cmp
cltd
lock
call
pop
arpl
call
fnstenv
jg
call
adcl
lds
jmp
out
xchg
fidivrs
orb
idiv
or
push
pop
or
dec
adc
incl
jae
push
jp
xor
mov
sbb
outsb
push
xchg
sar
ljmp
outsl
adc
mov
leave
shrb
out
iret
pop
xchg
gs
push
mov
mov
jae
jno
stc
sbb
jp
and
data16
jl
in
lock
cmp
pop
mov
dec
aam
sti
dec
hlt
int3
mov
and
popf
scas
cltd
mov
out
xor
adc
test
lret
sub
incl
mov
adc
jge
daa
mov
pop
arpl
mov
mov
cmp
jmp
fs
addl
xchg
addr16
inc
hlt
enter
push
mov
call
dec
xchg
imul
es
or
nop
add
adc
xor
mov
mov
jno
cli
cli
bound
mov
mov
pop
jne
fists
xchg
push
icebp
inc
sub
rcrb
in
pmulhw
adc
stos
out
cmp
or
call
jle
push
dec
pop
inc
adc
es
xor
jg
ds
mov
test
pop
lahf
pop
fistpll
test
add
or
out
clc
adc
mov
les
inc
sub
push
call
jle
sar
mov
xchg
inc
shl
xor
dec
inc
nop
loope
dec
das
ja
pop
jmp
pavgb
jns
xchg
and
imul
xor
xchg
sbb
push
pushl
punpcklwd
int3
xchg
sbbb
push
into
sbb
inc
clc
das
jp
lahf
xchg
add
pop
mov
sar
pushl
enter
mov
pop
jb
addl
cmp
mov
jne
push
adc
ljmp
pop
inc
xlat
jnp
cwtl
xor
mov
call
popa
sub
incl
or
ja
mov
xchg
mov
xorb
jae
outsb
enter
jae
fisttps
jbe
sub
cmp
mov
cli
sub
incl
les
aam
mov
test
repz
leave
push
push
or
rclb
lcall
dec
xor
xchg
mov
aad
insl
shl
fdivrp
mov
jnp
add
jmp
stc
in
stos
push
lods
cmpsb
cmpl
add
test
dec
daa
out
pop
mov
jmp
inc
xchg
int3
or
scas
lea
xor
jg
ret
pop
loope
loope
jp
mov
dec
insl
les
int
or
rorl
cmc
icebp
stos
cmpsl
shll
test
push
push
xor
out
xchg
add
cmp
ficomps
mov
lret
sbb
mov
jmp
sbb
or
inc
dec
mov
push
incl
fsubs
xchg
sub
push
pop
dec
fsubrs
lret
or
add
pop
popa
mov
mov
mov
push
inc
out
fisubrl
xchg
iret
leave
movsl
outsl
jp
sbb
push
push
lods
jp
in
mov
fiaddl
pushl
dec
scas
pop
popf
mov
fwait
mov
inc
dec
and
jae
sbb
bound
lea
es
mov
fiaddl
dec
or
mov
adc
dec
enter
in
inc
inc
or
pop
repz
cld
imul
and
stc
fisubs
and
adc
iret
mov
pushf
pop
xor
pushf
mov
jne
cs
jmp
pop
pop
out
jecxz
xor
ret
out
and
testl
mov
andb
dec
loopne
sub
jnp
notb
sahf
mov
cmp
jno
scas
out
insl
pop
daa
xor
jno
sub
lds
mov
dec
into
cmp
cmp
cmc
mov
mov
ljmp
mov
adc
in
cmpsl
test
mov
addr16
addr16
sbb
lret
decl
fcomp
bnd
jbe
add
ffree
and
pusha
mov
pushl
dec
and
scas
loopne
inc
xor
pop
adc
inc
sarb
or
imul
pop
hlt
adc
mov
dec
sub
pusha
adc
mov
decl
xor
or
fcoml
sti
mov
lods
mov
sub
incl
push
bound
pop
xchg
sarb
push
lock
fistpl
in
inc
xor
es
negb
fs
inc
or
popf
mov
hlt
dec
je
cmp
sar
ljmp
add
pop
out
add
shr
pop
xchg
and
mov
icebp
out
or
fdivrp
mov
and
cmp
popa
jp
sub
jmp
lahf
cmpsb
fcomip
decl
cli
add
jp
push
lods
fs
push
outsl
subl
lcall
or
shlb
repnz
xor
in
imul
loopne
lret
xchg
lcall
inc
aad
mov
push
pop
mov
fs
jge
mov
and
add
pop
out
jp
pop
jge
mov
dec
cli
adc
xorl
sub
pop
test
fisttpl
jl
in
ficoms
jno
and
orl
jge
aam
decl
stos
faddl
and
loope
sbb
mov
mov
inc
jne
decl
mov
stc
andl
and
cmpsl
std
test
pop
adc
push
jae
dec
add
incl
out
and
xchg
loop
sub
popf
jo
aad
outsl
ds
xlat
cmpsb
subb
fildll
jg
pushf
push
cmp
scas
sbb
nop
loopne
scas
outsl
push
sahf
jne
mov
aas
xor
xchg
push
test
movsl
lret
cmpsb
scas
jns
stos
push
stc
fdivrs
cmp
mov
jmp
jnp
leave
add
xchg
add
cmpsb
xor
out
call
inc
arpl
add
movsl
fwait
daa
addr16
sti
mov
jg
int3
movsb
mov
jg
ljmp
mov
xchg
stos
push
mov
adc
pop
ret
aaa
rcr
mov
jecxz
mov
call
dec
test
adc
insl
js
sub
sbb
outsl
incl
in
add
pop
addr16
cmpsl
lods
fisttpl
mov
cmpsl
leave
mov
push
lock
aas
scas
inc
and
or
aam
lcall
iret
in
and
sbb
pop
lock
mov
dec
mov
pop
pushf
insl
lcall
out
push
cmp
shlb
cli
xor
bound
mov
enter
inc
lods
cmp
orb
clc
push
adc
mov
decl
sarl
lock
jge
shlb
inc
in
and
out
lret
call
fbld
ljmp
insl
std
xchg
out
mov
xchg
or
jge
pusha
ljmp
ljmp
inc
add
sub
sbbb
or
icebp
lds
scas
lret
pop
mov
add
sarl
pop
out
lock
inc
push
outsb
das
cmp
and
jg
inc
add
xlat
push
imul
add
and
push
ljmp
in
xchg
add
pushl
stos
dec
pop
jbe
repz
fidivs
fcompp
ja
ljmp
imul
jl
test
jg
xchg
lods
adc
mov
adc
push
dec
andb
mul
hlt
cmp
jle
int3
pop
imul
pop
mov
push
mov
int3
mov
xchg
call
fcompl
mov
shlb
push
ja
lcall
inc
mov
call
orps
insl
sub
mov
lahf
push
dec
fs
add
dec
lods
dec
out
imul
sub
pop
dec
clc
pop
fnstenv
xchg
add
in
mov
sar
push
fnstsw
jne
inc
nop
data16
xchg
out
mov
pop
xlat
repz
jmp
sbb
jne
sub
call
int
daa
pop
or
jno
cld
push
call
adc
xor
jne
pop
push
sbb
sar
cmp
aas
mov
dec
shll
xor
mov
clc
je
imul
mov
add
jp
lea
sbb
out
call
sbb
call
in
mov
jmp
lods
data16
mov
xor
push
mov
loope
add
loopne
push
and
adc
fdivp
mov
jbe
test
jmp
mov
fistps
and
mov
xlat
outsl
es
pop
je
rol
or
cmc
mov
mov
inc
je
adc
xchg
clc
sbb
sub
dec
repz
pop
js
pushl
inc
dec
jp,pn
mov
cmpsb
mov
addr16
andl
sub
lcall
scas
out
push
stos
or
push
pushf
or
jecxz
sub
lock
mov
sub
fidivl
dec
cld
ljmp
sub
ja
ljmp
jno
aam
xchg
les
js
rolb
push
jb
into
arpl
call
clc
add
pushf
add
inc
lret
lds
pop
cmp
mov
mov
and
fdivs
rol
adc
loopne
cmp
call
jg
sbb
sub
push
mov
cmp
jns
dec
jbe
jnp
leave
mov
push
cld
inc
cmp
rclb
dec
mov
mov
gs
push
jbe
xor
sbb
pop
cmp
xor
jne
dec
fsubs
xchg
mov
pop
sahf
pop
inc
push
cmc
pop
std
outsl
cli
fisubrs
clc
inc
fdivrs
ret
xchg
pop
stos
cmp
sub
mov
mov
pop
mov
jae
in
adc
ds
add
repz
mov
pushl
ret
mov
push
mov
adc
repz
outsl
out
adc
sub
scas
and
jg
lret
ljmp
popf
sub
mov
push
leave
inc
push
pop
call
loopne
stc
fs
hlt
stos
addr16
orb
decl
rclb
push
gs
lods
mov
add
sahf
jbe
mov
aad
mov
cld
lods
inc
cltd
add
xlat
add
adc
xor
jle
sub
pushl
cli
bound
notl
mov
fistpl
jle
aaa
cld
std
loope
and
jno
and
lcall
xchg
push
mov
pushl
fcompl
mov
sti
pusha
aam
gs
bswap
or
xor
ljmp
and
int3
int3
mov
push
pusha
add
jb
push
cld
rolb
mov
or
test
mov
dec
jecxz
loopne
dec
inc
aam
inc
push
icebp
js
das
lret
mov
scas
pop
xlat
outsl
push
out
cmc
int3
xchg
cwtl
pushf
orl
pushf
lcall
and
jl
outsl
outsb
adc
inc
sbb
inc
push
cmpsl
xchg
lcall
jle
mov
cltd
in
adc
outsb
pop
or
fnstcw
outsb
sbb
cli
and
or
mov
sbb
cltd
sbb
pop
mov
shll
add
cld
pushl
rclb
negl
sub
pop
mov
cmp
push
es
fadds
xor
jmp
sub
pop
outsb
or
jne
rclb
add
jle
push
mov
push
jo
sar
dec
ret
mov
sub
sub
pushl
inc
add
jnp
push
test
ja
mov
or
into
incl
xor
pusha
dec
lods
sub
rcl
emms
repnz
testb
xor
mov
jmp
xchg
sarb
hlt
push
arpl
rcrb
sub
pushl
call
cmpsl
mov
outsb
fwait
push
xchg
jecxz
jmp
xchg
cmp
cmpl
mov
ja
arpl
gs
dec
mov
cltd
or
dec
jae
repnz
xor
xchg
out
cmc
mov
pop
mov
mov
lods
jbe
ja
int
incl
lock
or
ds
mov
loopne
fnstenv
pop
add
leave
int3
jle
jg
jmp
imul
cmp
in
and
xor
mov
pop
jmp
ljmp
adc
lds
mov
fistl
pop
in
and
mov
inc
sti
faddl
je
movb
movsw
pop
mov
add
xlat
insl
dec
gs
pushf
mov
loop
fcmovne
in
mov
fildl
lcall
pop
ret
mov
push
in
test
ret
out
xor
adc
movsl
jmp
push
sbb
out
adc
in
enter
nop
je
rcrb
pop
in
pop
aad
fs
mov
cmp
sub
sarb
movsb
fistps
ss
cld
and
mov
or
scas
add
mov
pop
and
in
lds
andl
lcall
into
scas
lcall
in
or
mov
mov
int3
add
and
jmp
ljmp
arpl
xor
inc
and
push
xchg
sar
jmp
dec
sbb
xchg
scas
mov
jge
shlb
and
mov
ss
mov
das
shlb
stos
xlat
hlt
ss
inc
ret
ss
adc
incl
sahf
pop
dec
test
sbb
mov
adcb
in
js
xchg
mov
or
mov
das
ds
mov
jp
movsl
fwait
test
push
fisubrl
into
push
jo
mov
mov
xor
mov
pop
xchg
mov
push
dec
inc
jg
xchg
shrb
and
cmp
dec
push
loopne
adc
and
imul
sti
jne
scas
int
mov
lods
push
sub
mov
aad
jo
call
adc
clc
add
cmp
lcall
sub
pusha
jmp
xor
and
adc
cmp
movb
repnz
lds
xor
lcall
jg
pop
jge
xchg
add
xlat
not
loopne
mov
pop
ds
fadds
pushl
and
pushf
mov
xlat
pop
cwtl
xchg
repnz
aas
or
dec
inc
pop
mov
mov
outsl
test
add
mov
and
lahf
push
or
or
aad
mov
fadd
lea
iret
into
pop
leave
mov
addl
lret
loope
jno
mov
cmp
mov
adc
xor
push
push
push
sub
dec
pop
sahf
inc
xchg
ret
sarl
clc
call
inc
push
cltd
push
imul
xchg
rcll
or
pop
fsubrl
push
leave
jecxz
inc
and
incl
movsl
pop
pop
repnz
push
push
mov
add
jp
sbb
adc
cmp
ljmp
lcall
cmpsl
dec
dec
mov
cmp
cs
in
andl
pushl
adc
add
jb
pop
sbb
pop
scas
movsl
clc
lcall
in
out
mov
xlat
pop
sbb
add
clc
mov
mov
test
cli
cmp
adc
lcall
adc
cmp
cmp
mov
mov
mov
pop
push
jle
stc
je
jg
fcomps
mov
push
clc
pusha
xchg
lret
les
push
adc
mov
fcomip
call
push
fnstcw
gs
xor
sbb
push
je
push
scas
mov
lods
jmp
pushl
jg
ds
cmpb
mov
sub
popa
mov
clc
add
leave
ljmp
inc
add
pop
icebp
jne
xchg
sahf
jg
and
faddl
insl
mov
xchg
adc
push
pop
mov
sbb
lret
das
out
sbb
ljmp
rclb
js
mov
shr
in
mov
push
out
push
test
and
icebp
dec
sahf
dec
pop
push
and
addr16
mov
lea
cmp
ficomps
decl
push
js
rcll
xor
iret
lcall
icebp
dec
push
ljmp
ljmp
cmp
cmp
bound
inc
in
mov
add
xchg
loopne
push
sbb
loope
cmp
mull
mov
push
xchg
imul
mov
or
lods
jnp
fldlg2
mov
mov
incl
xor
ss
dec
jbe
mov
cmpsl
out
adc
pop
rcrb
pop
movsl
repz
mov
ljmp
iret
jg
movsb
mov
not
mov
inc
cmp
jb
cmpsb
ds
cld
cld
incl
sbb
mov
fs
stos
mov
inc
push
imul
cltd
jo
lcall
in
repnz
std
stos
notl
jns,pt
pop
in
outsl
insl
xor
mov
xlat
adc
std
sti
push
test
sbb
jo
jns
cmpsl
adc
aad
mov
ljmp
mov
jns
mov
jg
add
iret
pop
sub
inc
adc
ljmp
or
cmpsb
lret
sbbl
jne
pop
insb
dec
dec
jge
pop
lds
and
push
sar
or
out
cwtl
cmp
stos
jae
sub
mov
jg
ss
pop
clc
push
fistl
movsl
jmp
ds
data16
jmp
cli
movsl
xchg
inc
in
xor
sbb
outsb
dec
icebp
rcr
xlat
std
ds
sbb
inc
fucomi
f2xm1
adc
lcall
daa
lods
leave
leave
sbb
pop
aam
fwait
sub
and
popf
inc
jg
scas
jae
mov
incl
daa
push
test
ss
xor
xor
out
fdivrl
mov
add
mov
ljmp
cmpsb
cmp
lret
sub
pop
rclb
dec
clc
jp
in
aaa
test
cmc
dec
push
sbb
xchg
xor
clc
cmp
sbb
loope
inc
ja
je
pop
lods
or
adc
cld
xor
xor
jp
imul
push
pop
xor
sub
mov
push
icebp
dec
jp
and
lods
dec
push
pop
outsb
dec
push
and
loopne
jg
test
adc
scas
ds
mov
cmpsb
pop
test
out
sahf
sub
stos
incl
in
iret
push
out
fcomps
mov
or
push
and
pushl
push
push
aam
movw
fists
mov
lods
cwtl
cmp
lea
mov
ljmp
fwait
roll
and
sti
adc
fmull
loop
mov
and
call
pop
mov
push
or
inc
or
popf
push
js
pop
mov
ret
pushl
inc
pop
push
popf
jl
lock
and
insl
hlt
push
cmp
test
add
popf
push
xchg
incl
cld
imul
fstpt
decl
and
adc
inc
jmp
sub
outsb
out
inc
rclb
rcr
mov
stos
pop
add
jp
addb
jae
cmc
decl
aad
jmp
cwtl
scas
xor
lods
fstp
gs
mov
fimuls
add
enter
test
ljmp
aam
int
dec
lea
ss
cwtl
aam
sbb
outsb
cmp
inc
cmp
lcall
rcr
outsb
repnz
je
pusha
pop
gs
ss
cld
mov
pop
dec
cld
cmc
or
dec
xchg
decl
in
neg
and
clc
pop
dec
adc
jecxz
je
int
clts
cmp
dec
in
sub
iret
push
or
mov
push
cld
outsl
pop
addr16
push
add
mov
incl
add
es
adc
aas
into
enter
cld
mov
mov
push
xor
dec
mov
hlt
xor
loope
jbe
iret
adc
dec
popa
mov
pop
mov
mov
add
jmp
pop
int3
jb
int3
inc
mov
mov
bound
addb
and
cmc
jmp
sbb
mov
adc
into
test
and
lcall
cwtl
std
cs
cwtl
int3
clc
aas
cs
pop
add
add
repnz
movsl
push
pushf
or
jno
incl
mov
pushf
std
loop
pop
mov
adc
rol
add
pop
dec
rcl
outsl
jge
pop
imul
call
pop
cmp
mov
mov
adc
cmc
pop
and
dec
mov
jbe,pn
push
jno
lcall
insb
xor
cmp
inc
jne
divb
out
test
mov
cmc
mov
xor
xchg
push
mov
pop
add
lcall
lret
or
stc
cmpsb
popf
daa
mov
push
call
cmp
call
inc
pop
adc
js
imul
ret
adc
adc
lea
bound
inc
loopne,pt
jg
shl
mov
adc
push
xchg
call
cmp
mulb
jns
stos
mov
mov
imul
jbe
fnsave
ljmp
xchg
rep
fs
mov
mov
add
or
and
inc
jmp
das
mov
xchg
int3
mov
enter
sub
mov
ljmp
decl
dec
dec
pop
lret
movlps
cmc
movsb
dec
adc
insl
daa
iret
xor
jns
cmpsb
add
ljmp
or
or
jge
cltd
and
add
icebp
pop
fsubr
mov
out
shrb
pop
outsl
lahf
cmp
sahf
pop
inc
jns
dec
push
pop
pop
and
cmp
lcall
test
arpl
stos
int3
cmp
push
jnp
sub
fcomip
jmp
lcall
push
in
jae
mov
sahf
std
out
aam
sub
adc
adc
lret
pop
loop
inc
ljmp
cmp
cli
push
inc
sbbl
ja
stc
in
mov
jns
mov
mul
in
jnp
dec
rclb
mov
pop
frstpm(287
pusha
and
je
mov
aas
ret
xchg
in
add
decl
daa
sub
nop
hlt
add
addl
adc
stc
outsb
mov
addr16
out
jmp
mov
jo
dec
sahf
mov
adc
add
jmp
cli
fwait
incb
or
mov
mov
cli
lea
sbb
call
fs
cmp
test
sbb
cmp
out
addr16
dec
lock
ljmp
in
inc
leave
lds
xor
cmp
sub
dec
adc
sub
add
or
fwait
jp
sahf
and
pushl
jmp
fcmovne
push
mov
pop
fs
xor
out
stos
ljmp
sbb
pop
outsl
pop
cmp
mov
cwtl
insb
das
ljmp
push
gs
xchg
xor
fisttps
push
xor
mov
jae
xchg
mov
cmp
in
sub
ljmp
lds
out
cmp
and
incl
and
push
nop
outsl
leave
pop
add
call
sbb
loopne
sbb
test
sbb
push
jmp
dec
jnp
lret
mov
fsubr
add
loope
xor
cmp
mov
ds
push
cs
mov
add
dec
lock
test
mov
js
popf
cmpsb
xor
outsb
push
jno
sub
sbb
fisttpl
sbb
pop
and
fidivrl
push
test
ficompl
or
or
dec
jns
push
sahf
aaa
adc
adc
js
scas
cmp
sub
sub
push
fs
jge
dec
mov
test
loopne
mov
add
out
pop
es
fnstenv
das
mov
int3
pop
ljmp
jno
in
imul
pop
stc
test
pop
add
cmp
sub
cmp
jmp
push
and
sub
pop
notb
scas
xchg
mov
xor
add
lock
mov
fs
jecxz
dec
aaa
stc
cmp
add
pop
pop
cmp
jbe
ljmp
xor
js
inc
out
imul
pop
xchg
add
push
mov
cmp
ret
les
jl
stc
pop
cmp
std
cmpsl
push
mov
jne
test
fadd
and
xchg
out
jecxz
xchg
ds
dec
sub
in
xchg
push
out
call
cmp
sub
mov
mov
or
xchg
or
or
mov
fbld
jne
inc
nop
inc
gs
imul
sbb
mov
jmp
mov
lret
or
cld
pop
cmp
or
rcrb
repz
inc
hlt
lcall
mov
adc
sub
jge
shrb
sub
es
jg
fisubs
sub
cs
and
mov
push
add
inc
jno
mov
notl
arpl
and
das
xchg
jg
out
jo
ss
ror
cmp
jecxz
inc
mov
cltd
add
push
jmp
xchg
xchg
std
scas
mov
xor
push
jae
jmp
out
xchg
cmc
ret
cli
or
inc
mov
cmp
push
aas
mov
call
xchg
ljmp
mov
popf
ljmp
jp
xchg
jge
jmp
std
subl
pop
pop
mov
in
mov
xor
push
push
arpl
movsb
xchg
int3
sub
ja
pop
add
in
push
gs
not
dec
push
mov
jmp
inc
and
jns
xor
push
loopne
loop
lret
leave
aad
push
aam
test
fildl
sbb
lahf
lret
js
pop
fisubl
push
xor
and
ds
mov
out
cli
rolb
dec
sbb
arpl
frstor
cmpsb
xchg
int3
lods
xchg
decl
add
lcall
pushf
rolb
push
fsubl
stc
jns
fcoms
out
sbb
xchg
push
and
movl
cli
sti
fucomi
cmc
mov
lea
fisttpll
jnp
xorl
scas
cli
ja
bound
pop
adc
lahf
pushl
push
incl
xor
aam
xchg
adc
sbb
lret
fidivrl
sbb
and
cmp
cmp
lret
repnz
push
push
arpl
dec
int
addl
push
lcall
pop
pop
stos
loope
jo
mov
idivl
nop
fwait
dec
fcoms
sbb
sub
jle
mov
cwtl
add
or
test
call
jae
adc
pop
mov
in
pop
adc
add
jge
stos
lcall
incl
cmc
lret
test
add
stos
xor
push
pop
dec
mov
xor
ljmp
mov
jle
adc
pop
jae
push
sbb
sub
lods
jns
outsl
push
aas
dec
in
sbb
add
push
sarb
or
mov
jp
jecxz
incl
xchg
fiaddl
cmp
hlt
ljmp
mov
push
xchg
mov
mov
incl
lret
mov
dec
int3
test
jge
mov
incl
jae
cmp
insb
insb
pop
pop
mov
fiadds
sbb
mov
insb
gs
or
lret
rcll
mov
fsubp
bnd
mov
cltd
movsb
jecxz
lcall
sub
cmpsl
out
jge
iret
jle
cmovnp
xchg
xor
and
mov
ljmp
imul
fwait
adc
enter
scas
pop
stc
adc
jno
inc
loope
aaa
mov
xchg
pop
mov
mov
mov
lret
lret
dec
fidivrs
mov
and
lcall
add
mov
call
loopne
xor
cwtl
lods
cmp
mov
adc
outsl
call
pop
cmp
enter
push
into
dec
insb
out
push
fdivrl
shlb
push
int3
sbb
pushl
addr16
leave
out
test
movsb
outsl
push
pop
iret
das
dec
leave
sub
and
mov
pop
cld
jmp
or
mov
inc
loope
sbbl
fdivrp
enter
lcall
adc
mov
into
and
cmpsb
mov
cmpl
pop
fistpll
jo
or
in
int
pop
jnp
pop
xchg
jbe
pop
push
xchg
add
lock
jmp
inc
clc
int3
out
push
stos
add
cmp
xchg
icebp
mov
notb
mov
adc
mov
fcos
ljmp
out
into
mov
jle
sbb
dec
adc
add
fisubs
test
adc
xchg
pop
enter
lcall
pop
test
or
sub
aas
sub
loope
fimull
movsl
lret
int3
sbbl
mov
cld
sahf
dec
inc
jg
or
xor
dec
lcall
cmpsl
sbb
decl
lock
dec
stc
inc
xchg
or
test
jns
cmc
imul
sbb
inc
std
in
out
stc
push
nop
ret
lahf
cld
mov
loope
fidivrl
jmp
adc
mov
or
hlt
div
mov
testb
jl
lds
ljmp
mov
add
or
mov
rolb
negb
in
jmp
and
mov
push
jo
xchg
hlt
jo
cmp
mov
adcl
jg
sub
push
andnps
insb
cmp
ljmp
or
adcl
rep
fldcw
mov
inc
add
fcomip
jmp
and
das
loop
xchg
pop
jge
cmp
decl
jp
lea
icebp
aam
cmpsb
rcrb
pop
mov
sub
call
std
call
mov
and
xchg
mov
popf
xor
sub
adc
push
pop
decl
mov
cmp
or
cmc
stos
lock
jne
jmp
lcall
jnp
jo
insl
ja
mov
pop
shll
mov
mov
fnsave
mov
dec
mov
cli
dec
mov
xchg
cli
jae
adc
ljmp
out
mov
incl
mov
mov
je
dec
jp
xor
lret
cli
mov
add
push
jne
ljmp
jle
es
or
icebp
add
adc
rcrb
jmp
incl
pushl
adc
mov
cmp
mov
rcrl
cmpsl
or
incl
push
mov
cmp
cmp
outsl
das
das
xor
xor
sub
sarb
pop
mov
jg
outsb
pushl
pop
cwtl
je
adc
push
iret
mov
pop
inc
je
call
or
xchg
dec
mov
sub
ret
stos
sti
int
rcrl
cli
and
cmp
enter
aas
loope
jg
cld
push
js
mov
jmp
icebp
sbb
inc
ljmp
hlt
cs
inc
xchg
pop
fbld
pop
popf
cmpsl
shll
bnd
lea
or
xchg
in
adc
lods
cmpsl
jl
and
push
add
jg
jmp
fildll
das
push
and
lcall
xchg
sub
add
ffree
addl
xor
outsl
pop
addr16
lahf
adc
adc
add
add
jnp
leave
xor
mov
xor
icebp
jbe
lcall
into
mov
test
xchg
mov
leave
sahf
xor
xor
and
aam
cmpl
incl
idiv
imul
cmovne
pop
sub
ja
ljmp
add
pop
push
sub
test
xchg
movsb
xorb
es
ds
dec
movsl
or
sub
push
sbb
cmc
xor
push
cmc
les
decl
clc
add
ss
xchg
push
xchg
cwtl
js
mov
lcall
repnz
enter
jb
cmp
adc
addb
xchg
mov
in
repz
xor
jp
adc
in
incl
aaa
mov
push
mov
inc
sti
mov
adc
decl
pushl
lea
incb
aam
pop
ds
fdivs
cld
lock
test
int
clc
ljmp
push
sub
lret
mov
or
and
add
call
dec
add
int3
call
js
push
int
or
or
add
mov
add
add
pop
call
call
lret
dec
sbbl
mov
xchg
sbb
and
dec
ljmp
cmp
test
outsl
paddsb
pop
and
cmp
jbe
clc
push
enter
jbe
rolb
loop
lret
fldcw
jg
repnz
in
dec
pop
add
lods
cmc
mov
bound
mov
add
sub
and
testb
mov
ss
mov
sub
fstpl
jl
js
int3
sbb
inc
clc
push
pushl
iret
add
ja
and
test
rolb
js
jmp
fsub
jbe
insl
jb
out
xor
inc
aad
push
xor
in
pop
aas
adcb
cli
adc
shrb
mov
popf
mov
mov
into
scas
lock
enter
and
xor
clc
nop
leave
ds
fstl
loopne
ja
pop
jecxz
jmp
insb
lods
fsubs
mov
les
pop
rolb
cmpsb
cmp
call
mov
ljmp
adc
stos
jecxz
cmpsl
or
lahf
rolb
ret
jl
or
mov
dec
movsb
mov
stos
jne
mull
dec
mov
popa
and
or
loopne
incl
fnstenv
cmc
mov
arpl
lcall
shrl
cmp
fs
pushf
adc
fadds
push
cld
subl
push
mov
out
scas
xchg
mov
rcll
or
and
xor
jmp
fwait
cmpb
xor
adc
cld
mov
arpl
jnp
dec
pop
dec
sbb
lods
pushl
fdiv
test
xchg
push
in
sub
stos
inc
xchg
adc
and
es
iret
decl
inc
je
jecxz
sub
mov
xor
sbbb
movsl
xor
rcrb
call
bnd
fdiv
repz
fsubrl
sti
mov
xchg
mov
bound
pushf
sub
xor
or
fcmovu
arpl
cmp
or
xchg
dec
lret
mov
pop
data16
jmp
jp
push
adc
lods
out
mov
je
jmp
lret
test
mov
or
nop
addr16
or
jmp
shr
mov
cmc
push
pop
jbe
roll
dec
hlt
add
shrl
imull
loope
jge
ljmp
iret
stc
mov
aad
adc
pop
and
cmc
mov
call
in
dec
ja
data16
sbb
gs
outsl
jnp
hlt
mov
push
repnz
pushl
add
mov
push
fildll
sbb
out
mov
cmp
inc
adc
inc
sbb
adc
in
mov
push
unpcklps
insl
or
mov
imul
fdivrs
cs
sub
xchg
xor
loopne
incl
adc
inc
xor
fisubs
dec
mov
filds
fdivp
dec
fldt
repnz
call
inc
xor
scas
pop
cmp
loope
jns
dec
mov
xchg
pop
pop
or
incl
and
cmc
jg
mov
movsl
lret
lods
sahf
imul
fidivs
into
jecxz
lcall
add
or
icebp
je
jno
mov
ror
push
xchg
test
or
jbe
es
ret
decl
sbb
pop
dec
mov
push
adc
fcom
mov
jb
and
jp
ja
cmp
jbe
sub
jl
int
jnp
hlt
lods
sahf
inc
push
lahf
xor
leave
xchg
shl
cmp
popf
xchg
daa
mov
add
mov
mov
lahf
mov
bound
cwtl
mov
call
cli
popf
jmp
mov
adc
icebp
push
and
sahf
insb
mov
jg
fdivrs
xchg
clc
fs
and
out
pop
lods
repnz
pop
cs
cmp
in
mov
push
adc
call
add
outsl
pusha
xchg
pushf
nop
xchg
call
cmp
ljmp
dec
mov
sub
leave
lret
pop
js
and
mov
cwtl
inc
and
mov
lahf
js
rolb
out
bound
hlt
push
loope
cmpsb
mov
notl
mov
icebp
and
mov
ja
int3
shll
cmp
add
ljmp
and
ficoms
gs
mov
and
mov
dec
out
push
movsb
lock
mov
mov
mov
sbb
lret
add
jg
in
push
sahf
mov
test
pop
mov
dec
imul
inc
test
push
fdivrs
lcall
pop
scas
sub
mov
nop
fucomi
mov
popf
mov
mov
call
and
into
adc
xchg
inc
mov
add
lods
popl
pop
or
xlat
ljmp
or
inc
mov
sbb
xor
into
jmp
or
mull
clc
jg
mov
int
mov
jmp
pop
call
cmp
sbb
clc
bound
pop
add
mov
mov
jb
dec
inc
lcall
or
lahf
inc
cmpsb
sub
fistl
pop
aad
push
cmp
das
sar
lret
mov
mov
cmp
xchg
sbb
movsb
jge
ljmp
pop
in
inc
testb
push
sub
js
stc
sbb
pushf
mov
adc
jge
les
jns
idiv
jmp
dec
out
shl
dec
leave
fwait
pop
cld
rclb
cmpl
incl
imull
cmpsb
pop
hlt
stos
adc
cmp
or
stc
push
push
push
stos
sub
fs
mov
lds
insb
clc
push
xchg
ss
pop
in
push
scas
cmp
jbe
sbb
inc
dec
sbb
in
adc
sub
dec
xlat
aad
add
mov
loop
and
jg
ljmp
notb
xrelease
dec
cltd
lahf
adc
call
nop
vpmaxub
insb
push
dec
lret
rclb
popf
bound
sub
cli
sbb
push
movsl
test
mov
jl
call
sbb
out
addb
das
add
out
dec
cld
pop
add
adc
push
inc
call
jnp
mov
leave
mov
fldcw
jg
test
cmp
lret
adc
dec
push
rcrl
mov
xor
mov
lcall
pop
xor
cmp
outsb
in
inc
ss
loope
pop
enter
lcall
decl
dec
inc
leave
and
loop
mov
push
add
jle
add
sahf
cmp
call
mov
stc
jne
outsl
dec
xchg
mov
pop
das
xchg
jg
stc
inc
mov
mov
cwtl
scas
jno
jbe
add
aas
std
jmp
xor
enter
jbe
mov
sub
ror
inc
repnz
push
js
cmp
call
pop
out
cli
leave
mov
mov
push
popa
and
xorb
xchg
pop
cmpl
dec
cs
loope
jno
daa
subl
inc
movsb
decb
inc
int
roll
adc
insl
ret
in
das
es
cmpsb
pop
stos
scas
cmpsl
insb
or
dec
push
cmpsl
fwait
jae
rcrl
add
mov
scas
js
jg
lods
ds
jge
std
fisttps
mov
dec
pop
mov
mov
mov
hlt
lock
jbe
pop
mov
dec
cmpsl
mov
cmp
repz
ljmp
fdiv
adc
jmp
subl
out
ds
repz
icebp
inc
ret
and
pop
add
pushw
sbb
jmp
pop
xor
mov
mov
jb
pusha
fsubr
cmp
add
pushf
pop
xchg
call
lcall
pop
push
push
adc
das
pop
movsl
pop
in
subb
and
das
jb
mov
jne
mov
ds
fsubrs
sub
call
fs
pop
cmpb
jp
mov
inc
fists
sbb
in
ja
add
dec
fwait
mov
repnz
mov
stos
repnz
incl
bound
push
push
mov
bnd
pushf
nop
cmp
xorl
imul
adc
movsl
pushl
and
aaa
jne
xchg
jle
xchg
mov
fildl
push
cmpsb
push
and
pop
icebp
sbb
cmp
aam
lret
inc
jb
lret
dec
dec
xchg
pop
push
call
ja
decl
sub
out
lahf
mull
inc
jno
imul
mov
std
sub
jne
push
dec
das
xchg
rcl
adc
add
mov
hlt
ljmp
mov
dec
mulb
stos
lds
lods
aam
popf
in
cltd
jo
int
cmc
xchg
incl
adc
nop
pop
cmp
testl
leave
je
call
lock
mov
notl
push
enter
pop
sub
add
lret
daa
fisttpl
jo
add
push
cmpsb
dec
ljmp
clc
mov
push
sbb
decl
nop
xchg
cmpsb
mov
fadds
adc
mov
ds
mov
popa
lcall
cmp
jns
inc
stos
hlt
mov
mov
addr16
sarl
push
incl
mov
sub
mov
inc
sbb
pop
xor
mov
sub
fistpll
lret
roll
pop
or
xchg
jmp
or
decl
jp
sub
sub
into
aad
addr16
dec
xchg
mov
inc
xor
lcall
mov
lea
inc
sub
mov
ljmp
pop
fnstcw
mov
iret
dec
xchg
cs
xchg
imul
lret
aam
repz
push
outsl
and
xor
jp
xchg
rorb
call
xor
aam
mov
adcb
adc
mov
int3
scas
push
call
call
or
jecxz
push
cmp
jb
lret
push
outsb
sub
stos
insl
jmp
pop
icebp
push
mov
jl
aam
scas
ss
adc
arpl
scas
xorps
pop
enter
dec
ss
lret
loope
push
ljmp
pop
fildl
mov
aad
sbb
nop
scas
cmpsb
sbb
sbbl
mov
iret
mov
and
mov
out
clc
or
adc
pop
enter
fistpl
fwait
aam
incl
adc
mov
adc
mov
and
inc
popa
addr16
mov
fldpi
pop
pop
push
pop
scas
test
cmpsb
pop
mov
pop
call
xchg
lcall
outsb
and
ret
lods
iret
scas
sbb
or
xlat
push
fs
fsubr
jno
mov
xor
sarl
mov
call
ljmp
push
cmp
and
xorl
lahf
xor
cmp
push
rcrl
stos
mov
adc
lret
data16
repnz
call
sub
jp
xor
push
mov
clc
lods
clc
sbb
addb
mov
test
clc
fmull
filds
loope
mov
inc
stos
sbb
add
ficoml
lock
mov
xchg
xchg
xchg
addr16
xchg
adc
xchg
jge
popf
pop
stos
xchg
jae
ljmp
enter
mov
mov
xchg
fcoml
and
or
call
call
out
inc
xor
jmp
mov
push
iret
pop
pop
stc
in
cmp
sub
mulb
mov
and
or
jge
das
clc
lcall
dec
xchg
roll
and
xor
add
pop
cmp
movsl
adc
test
xchg
scas
ljmp
cld
fcoml
jns
hlt
es
lret
sbb
push
mov
imul
incl
test
adc
cmpsl
push
pusha
pop
cltd
xchg
dec
dec
xor
mov
aaa
sub
aad
cli
jmp
das
cmp
loope
popl
xchg
mov
mov
jg
mov
cmp
lock
ss
push
out
dec
jbe
xchg
je,pt
adc
decl
mov
inc
inc
loop
cs
adc
stos
popf
cld
jno
int3
cltd
add
or
std
push
call
xor
or
fwait
test
popa
xor
pop
cmpsb
jae
lahf
pop
dec
std
insl
dec
jmp
fisttps
ljmp
lret
sub
xchg
out
xchg
mov
jle
ud0
jmp
ret
cmpl
mov
mov
jns
mov
push
and
call
pop
or
jmp
pop
cmp
cmp
popa
add
push
daa
inc
out
shll
decl
dec
jb
fnstsw
mov
and
mov
js
je
adc
cmp
int3
decl
adc
adc
push
xor
fcomps
aaa
cli
push
test
insb
jnp
in
jp
xlat
ret
mov
call
and
aam
lcall
lcall
xor
pop
sbb
fdivs
lcall
push
fsubs
inc
jno
pushf
and
add
mov
call
lods
mov
rorb
cmp
sub
jb
inc
pop
mov
aad
std
xchg
xor
sub
loop
pop
jg
sub
and
sbb
repz
arpl
sbbl
incl
sub
ja
mov
add
adc
mov
xchg
jl
and
mov
inc
idivb
aad
inc
fiaddl
mov
into
adc
loopne
stc
pop
dec
sarl
sbb
movsb
adc
add
fs
push
cmpsb
stos
fcmovbe
incl
push
addr16
imul
loopne
sub
mov
clc
xchg
pop
int
push
mov
mov
push
mov
cmp
mov
push
fdivr
pushl
or
add
push
xor
push
mov
in
mov
movsb
ljmp
and
jmp
inc
mov
bound
xchg
movsl
imul
inc
dec
push
mov
loopne
cli
mov
andl
mov
or
xor
call
cld
shlb
rclb
mov
jle
je
int3
mov
scas
inc
mov
ret
jae
popf
or
clc
pop
arpl
decl
dec
cmpsl
inc
dec
ret
cs
mov
lds
push
rolb
call
das
xchg
sub
rorb
dec
push
cwtl
gs
in
lea
in
pop
sub
decl
std
and
dec
stos
inc
or
fisubs
pop
aas
cmc
mov
xor
ljmp
leave
add
cmpsl
shrl
push
cli
shrb
pop
jbe
decl
sub
push
jnp
out
jge
sub
or
outsl
or
xchg
leave
cmp
cmp
jmp
or
dec
sbb
aas
outsb
fs
scas
pop
addr16
pushf
loop
adc
mov
decl
outsl
rolb
xor
or
shrb
aam
adc
mov
lcall
out
sbb
enter
hlt
out
in
xchg
inc
ds
mov
mov
cs
lcall
lea
xlat
mov
imul
add
adc
incl
outsb
dec
fabs
inc
daa
mov
fcom
test
sbb
mov
ss
xor
mov
iret
stos
push
sub
out
jg
sar
call
jnp
aam
xor
adc
lods
xchg
xchg
lds
push
mov
sbbl
jnp
cld
cmc
cmc
scas
ret
sub
mov
mov
jno
add
mov
pop
out
fdivrl
jl
or
decl
xor
push
push
adc
in
in
ret
add
ljmp
cwtl
mov
fwait
sbb
mov
incl
pop
mov
sbb
dec
ret
mov
cld
mov
mov
pusha
js
pop
ss
call
mov
add
xor
sbb
stos
jecxz
das
mov
xchg
add
xchg
xchg
jl
and
and
sbb
mov
adcl
adc
roll
fidivrl
fldenv
lahf
pushl
adc
inc
dec
cmp
inc
mov
je
adc
test
mov
dec
sar
or
jmp
xor
push
pop
mov
scas
push
je
in
sahf
les
push
fdivrp
cmp
jmp
adc
mov
inc
lret
push
pop
push
adc
and
cmp
push
std
jmp
hlt
jno
mov
shll
clc
fstpt
xchg
daa
sbbl
push
mov
jae
mov
mov
xor
aaa
insb
adc
jg
inc
pop
je
mov
jp
adc
lcall
sub
popa
pop
outsb
sti
popa
cmp
xor
pushl
cld
cmp
mov
xchg
dec
aam
or
out
mov
stc
in
lods
hlt
jg
mov
inc
push
pop
mov
inc
pop
leave
les
lcall
out
leave
mov
clc
ljmp
mov
sub
inc
fwait
mov
incl
sub
movsb
loop
or
sti
or
ja
outsb
cmpsb
push
mov
add
inc
mov
sub
and
or
aam
xlat
xchg
cmp
cwtl
push
repz
decl
sarl
sub
enter
or
pop
and
mov
mov
xor
sbb
ljmp
jo
lahf
iret
movl
or
lret
fistps
mov
mov
jg
lods
jp
dec
stos
xchg
pop
sbb
lcall
sub
pop
xchg
dec
pop
adc
aaa
lock
inc
sbb
pop
cmp
inc
jge
imul
jg
dec
sbb
mov
aaa
nop
xchg
lret
mov
pop
cmpsl
mov
xor
outsb
imul
fnstcw
sbbl
pop
push
xchg
push
push
ljmp
les
push
fwait
imul
pop
jnp
dec
fisubs
push
pushl
jp
in
dec
dec
shrb
mov
aam
sbb
jo
addr16
scas
ljmp
ljmp
scas
mov
xor
test
mov
add
adc
decl
xor
mov
call
push
cmc
ss
xor
mov
add
lcall
out
stos
cli
jne
test
cmp
add
jnp
addb
loopne
incl
outsl
test
cmpl
mov
or
addl
ljmp
inc
in
push
mov
sbb
jmp
std
les
stos
push
shlb
xorl
fmul
inc
pop
cmp
in
rclb
mov
scas
jns
addr16
call
sbb
ror
cmp
add
jns
rep
inc
sbb
mov
mov
std
jg
jne
push
das
loop
push
mov
xchg
movsl
je
pop
mov
inc
mov
mov
decl
cmp
push
fidivrl
lods
jno
and
mov
jbe
pop
jp
in
insl
jp
xor
pop
lcall
dec
mov
in
lcall
fsubs
push
mov
and
divl
lcall
lds
outsb
inc
adc
cmp
mov
call
mov
js
pop
out
popf
iret
dec
cmp
insl
pop
sub
sbb
loope
mov
push
hlt
mov
lea
sahf
add
jne
xlat
test
jg
sahf
cmp
or
or
jmp
push
dec
jns
les
test
jmp
std
jle
jnp
push
lock
bound
mov
fs
adc
adc
adc
ljmp
test
movsl
pop
sbb
lahf
xchg
inc
sbb
jae
daa
sbb
mov
sbb
xlat
pop
fisttps
clc
incl
mov
xchg
pop
push
sbb
fs
fisubl
ja
mov
mov
push
aad
inc
stos
out
test
or
jecxz
cwtl
pusha
cmp
jo
ret
incl
cmp
adc
or
cmp
cmc
pop
cmpb
mov
cmp
sbb
enter
dec
cmp
out
je
xchg
or
fwait
pop
xchg
cmp
add
jl
pop
dec
pop
loopne
icebp
ljmp
push
lret
popa
xchg
push
fwait
xlat
push
dec
mov
xor
mov
aad
mov
add
jo
push
or
adc
dec
getsec
mov
decl
xor
xchg
mov
xorb
xchg
ljmp
mov
dec
mov
lcall
ja
inc
popf
rorl
nop
add
jmp
es
add
lcall
sbb
das
xor
adc
adc
gs
xchg
stos
xchg
nop
and
fadds
ss
xchg
add
out
mov
pusha
cld
test
jb
cmp
subl
andl
and
jno
mov
adc
scas
sbb
incl
test
mov
adc
xchg
pop
loopne
lahf
mov
mov
movsb
jp
pushl
ljmp
aad
into
bound
mov
cmc
inc
mov
dec
or
or
mov
dec
sar
inc
jno
xor
push
clc
push
sbb
call
les
ds
aad
std
inc
les
div
add
jnp
aas
jge
adc
lods
out
inc
bound
cmp
loopne
mov
jecxz
sahf
ljmp
push
push
push
push
int
pop
push
movsl
testb
dec
shrb
mov
incl
loope
popf
xlat
pop
lea
repz
jmp
xchg
scas
jmp
nop
jmp
xchg
out
or
cmp
ficoms
ja
fnstsw
or
fildl
sub
xlat
lcall
inc
push
jb
inc
mov
rorb
xlat
add
bound
shl
or
inc
cmp
lcall
fldenv
mov
cltd
mov
pusha
js
cmp
dec
inc
aaa
pop
mov
xchg
aad
js
dec
mov
nop
xor
fld
sbb
jae
shlb
jecxz
sub
mov
or
add
xchg
jge
mov
cmp
fstpt
fadd
fsubrl
jecxz
dec
pop
movsl
sti
jmp
and
pushf
mov
hlt
fwait
decl
lock
mov
js
sbb
or
packsswb
cmc
fiaddl
repz
xchg
sbb
test
sarb
and
pop
mov
mov
lea
cltd
clc
fcomip
sbb
shl
pop
jae
inc
pop
xor
push
mov
pushl
pop
sub
mov
and
push
push
inc
in
dec
bound
daa
lock
decl
fidivs
dec
out
add
mov
cmp
push
jle
int3
in
and
mov
sbb
sub
movsb
cs
mov
mov
jmp
repz
notb
ret
sbb
lock
mov
decl
pushf
and
jnp
sub
and
push
push
or
adc
push
lcall
std
jmp
daa
pop
incb
and
shrb
push
jno
mov
add
jp
push
call
jns
mov
cmp
pusha
imul
or
iret
shlb
test
call
gs
daa
cmp
push
pop
xchg
and
aas
push
inc
test
push
sub
fcmovb
pushl
jg
cmp
fs
sub
mov
mov
shlb
add
int3
lds
cmp
add
imul
add
das
and
leave
je
or
fsubrs
cli
call
dec
mov
mov
cmp
pop
lcall
outsb
imul
and
push
test
stc
hlt
mov
sti
xchg
cmp
fwait
orb
or
mov
ljmp
xor
lcall
popf
mov
xchg
pushf
inc
push
mov
pop
insb
add
loop
cmp
popf
out
test
ficoms
pop
fdivrs
inc
pop
jle
pop
dec
mov
cmp
popf
jno
jecxz
add
xor
lcall
out
cmpsl
lcall
and
xlat
inc
mov
pop
fcomp
mov
mov
arpl
call
scas
mov
cmp
call
dec
dec
push
addr16
sbb
insl
cwtl
jmp
mov
insb
pop
mov
fdivr
push
test
js
fdivs
mov
pop
scas
and
sbb
inc
inc
jmp
lcall
push
mov
pusha
push
jne
sbb
test
mov
and
lcall
push
arpl
dec
test
mov
fistpll
xchg
add
xlat
add
int3
adc
mov
jl
mov
out
cmp
sub
mov
rorb
inc
mov
mov
fstl
aad
pusha
jmp
and
dec
cmp
lock
sub
in
mov
mov
or
call
push
dec
or
cs
shlb
insl
mov
fdivr
call
movsl
mov
push
test
adc
add
pop
fs
fs
out
daa
pop
gs
jmp
mov
lret
jmp
jne
sbb
xchg
xchg
loopne
jmp
stc
and
ret
sbb
pop
lcall
outsl
repnz
in
hlt
and
mov
sub
push
xor
rorl
pushl
incl
mov
pushf
push
lcall
nop
loope
jg
jecxz
xchg
fnsave
ljmp
push
xchg
pop
adc
cmpsb
pusha
out
and
stos
xlat
adc
int3
ficoms
mov
adc
es
loop
xchg
leave
jecxz
incl
xchg
negb
movsl
sub
inc
push
add
jo
popf
jmp
add
cltd
ljmp
mov
popf
lock
test
insb
and
push
fwait
stos
adc
stos
lcall
test
loope
mov
push
xlat
mov
stos
jp
sub
hlt
inc
enter
jmp
cld
cmp
pop
cmc
lcall
cli
jbe
xchg
sahf
loopne
lret
mov
loopne
pushl
push
push
daa
mov
xor
insb
xor
cmp
mov
stos
cmp
mov
jo
cmp
aaa
call
push
daa
lcall
dec
mov
and
scas
stc
aam
pop
outsl
or
enter
movsb
xchg
cmp
stos
mov
jg
mov
jo
pop
sub
jae
xor
insb
xchg
lret
sbb
pushl
xor
lods
loopne
popa
mov
pop
lock
pop
and
sti
mov
xlat
xlat
addr16
jmp
negl
jl
ror
lret
stos
and
scas
test
int3
sti
in
cwtl
cmpb
sub
shll
jmp
sub
pop
add
sub
push
adc
lret
pop
stos
mov
cmpsb
cld
in
sub
push
clc
mov
xchg
push
mov
mov
xchg
cli
fisubrs
xchg
cmp
decl
fcmovnbe
orl
loope
or
push
push
lods
sbb
aas
push
out
or
shr
filds
push
dec
int
andb
mov
xchg
adc
mov
mov
lock
jb
add
das
sarb
les
and
cmpsb
and
jmp
xor
inc
mov
mov
test
test
insb
mov
adc
mov
and
adc
fiaddl
test
pushl
jge
lret
daa
xchg
leave
fcoml
mov
cmc
imul
outsb
aad
mov
mov
fs
pushl
out
inc
mov
int
test
xor
ret
add
rcrb
mov
cld
xor
and
ja
outsl
pop
mov
xlat
lret
jmp
xlat
push
dec
mov
test
cmp
fs
nop
or
add
clc
incl
mov
pusha
cmp
ret
mov
sub
ljmp
xchg
shll
daa
insb
repz
jl,pn
ds
sbb
jne
pop
jg
incl
jns
in
mov
inc
inc
mov
jo
test
incl
add
out
mov
rcrb
adc
mov
push
sub
xchg
mov
icebp
add
out
xchg
test
adc
insl
sbb
inc
mov
fldenv
mov
in
adc
orl
inc
mov
popa
cmp
test
aaa
repnz
cmp
mov
inc
notl
ret
and
cld
lcall
add
mov
xor
mov
icebp
call
iret
push
cmpsb
and
pop
rcrb
data16
and
pop
mov
cmp
decl
aad
sub
jmp
push
dec
incb
push
mov
pusha
hlt
jmp
mov
decb
jo
jne
mov
outsl
pop
fcmovbe
fcoml
pop
clc
xchg
adc
mov
bound
dec
add
testl
js
dec
outsb
insb
inc
xor
jbe
jge
fucom
mov
xchg
or
out
lcall
das
iret
lods
jno
ffreep
psubd
lcall
into
bound
sbb
fstpl
mov
add
inc
fwait
fwait
sbb
out
aam
jno
fcomp
cmp
or
int
mov
ljmp
cmp
push
aaa
add
aas
dec
pop
xchg
xchg
ret
aad
ljmp
aam
and
ja
cmpsb
and
and
sahf
dec
adc
inc
fildl
repz
call
jg
or
imull
in
xor
mov
std
les
decb
call
xor
sbb
push
adc
enter
mov
adc
push
icebp
push
scas
push
xor
pushf
push
add
pop
cmp
push
fcoml
pop
and
hlt
sub
and
xchg
jmp
jae
jg
jmp
outsb
repnz
or
cmp
mov
clc
outsb
sub
dec
xor
in
lcall
dec
rcll
mov
sub
and
enter
pushf
lahf
addr16
xchg
aaa
std
xchg
fmuls
dec
cwtl
lods
sti
inc
subb
call
repz
orl
push
mov
lret
clc
test
inc
out
add
data16
push
pop
sub
cli
rorl
mov
call
dec
dec
daa
pushf
adc
push
mov
push
cmp
mov
xchg
inc
out
mov
loopne
nop
mov
cmp
and
fdivr
fcomip
lcall
rorb
xchg
xchg
or
cwtl
out
jb
mov
mov
adcl
lods
pop
mov
insb
xor
adcl
inc
xchg
push
push
mov
aas
pop
pop
sbb
aam
push
mov
dec
lret
outsl
cmp
pushl
std
mov
inc
sahf
or
cmp
jmp
cltd
lds
push
pushl
cltd
enter
xchg
lret
inc
mov
ja
mov
push
add
loope
jb
daa
ret
ljmp
out
mov
cmp
aas
jle
negb
push
sub
push
cwtl
int3
mov
rorb
scas
fiadds
lret
dec
insl
mov
add
iret
into
inc
out
mov
ljmp
in
ljmp
mov
mov
or
cs
add
lcall
cmpsb
jo
mov
adc
jecxz
mov
fmull
inc
je
and
ljmp
test
sbb
pop
mov
inc
and
mov
call
incl
xor
xchg
pop
in
ret
push
jb
pop
mov
xor
test
mov
inc
cmp
inc
std
ljmp
mov
dec
inc
out
ret
push
cmp
pusha
ficoms
je
xlat
mov
push
push
lahf
inc
jge
push
jmp
cwtl
or
mov
mov
jg
xlat
idivl
popf
das
popa
push
cmp
xor
push
pop
in
xchg
jno
adc
mov
jle
push
and
mov
outsl
iret
or
mov
mov
inc
insb
aam
push
fcoms
adc
and
cmp
mov
mulb
clc
sahf
dec
mull
and
call
sbb
rorl
hlt
pinsrw
test
or
mov
push
lock
fcomip
call
mov
daa
incl
inc
cmp
ficompl
mov
jl
repnz
fld
or
out
mov
into
imull
data16
out
iret
cmc
or
cmp
ficoml
lret
fsts
lahf
xchg
add
push
test
adc
hlt
push
xor
xchg
or
cwtl
adc
test
fisttpl
xlat
fxch
and
jge
out
lcall
shlb
lahf
bound
aam
std
fdivp
and
shll
decl
loop
ror
xchg
sti
xorb
rorl
in
dec
movsb
inc
mov
push
sub
incl
sub
adc
xor
jmp
imul
dec
add
xor
pushf
popa
mov
movsl
ja
add
dec
and
ljmp
clc
mov
imul
cwtl
in
adc
loop
ja
xor
mov
and
fsubp
pop
bound
pop
cmp
cmp
outsb
jne
push
pushl
out
mov
loopne
daa
call
sbb
bound
ljmp
rolb
imull
cmp
icebp
in
in
fimuls
pop
jmp
incl
sub
in
adc
scas
shll
aam
ss
cmp
or
sbb
pushl
test
push
xchg
and
xchg
jecxz
rcr
nop
pusha
inc
jl
inc
icebp
sbb
mov
rcrb
cmc
sbb
dec
mov
shrd
xor
popf
test
cld
dec
aas
ficomps
and
scas
iret
test
adc
mov
ss
jecxz
decl
repz
mov
jecxz
jle
add
sub
dec
cmp
dec
xchg
dec
incl
lds
dec
xor
and
and
mov
inc
mov
inc
mov
ljmp
sub
pop
gs
or
fwait
sub
mov
add
cs
inc
and
sar
cli
in
pusha
add
sahf
dec
pop
fcomp
and
mull
adc
push
je
cli
or
out
scas
subl
dec
push
ret
roll
xor
lahf
icebp
lcall
in
out
pop
jmp
fnsave
scas
mov
cmp
out
jnp
scas
dec
pop
cs
lcall
loopne
pushf
inc
xchg
dec
mov
lods
into
add
je
fsts
fimuls
or
mov
adc
cmp
incl
jl
mov
inc
jmp
scas
rol
xor
xor
icebp
jmp
xor
shll
mov
mov
jb
nop
movsb
add
mov
mov
sub
sub
jb
fs
filds
cwtl
loopne
lods
aas
bound
pop
push
cmp
lgs
adc
lcall
aam
mov
ljmp
call
rcl
stos
inc
fsub
cmpsl
loope
gs
std
loop
sti
loop
scas
test
int3
pop
push
push
filds
push
push
dec
xorl
mov
mov
xchg
popa
push
mov
shll
adc
add
jmp
les
mov
sub
xchg
sub
push
test
mov
sub
push
cli
pushl
or
fwait
push
xor
cmpb
in
fincstp
popa
xor
push
sbb
or
sub
insb
xor
adc
push
ljmp
es
cmc
call
les
nop
in
mov
sub
adc
daa
sbb
sub
jg
dec
and
add
inc
and
aas
fwait
aas
arpl
pop
ljmp
imul
sbb
adc
out
mov
loopne
add
push
mov
adc
mov
push
mov
cmc
call
fcmovnb
jb
lea
push
sub
int
push
sub
sbb
scas
cli
scas
cli
cwtl
push
sahf
jmp
inc
imul
push
sbb
test
sbb
test
xchg
add
mov
clc
inc
fistps
xlat
xor
pushl
faddl
add
das
jno
jg
inc
mov
add
pop
push
xlat
push
lahf
lret
fs
outsl
pop
mov
lods
mov
xlat
loopne
pop
pop
adc
inc
mov
push
push
mov
jge
data16
push
out
fcmovnu
pushf
inc
pop
sti
sub
and
adc
xchg
mov
call
imul
mov
repz
std
sarl
sub
in
fs
jnp
fbld
and
shll
mov
jb
push
stos
pushl
out
out
jnp
test
adc
jecxz
fnstsw
cs
mov
shlb
push
decl
nop
mov
jp
call
mov
push
mov
inc
stc
loopne
jo
mov
insb
cld
test
jle
lret
into
pop
and
or
or
pop
pop
sbb
lcall
lds
int
push
xor
js
in
pop
les
sub
ss
jle
mov
jmp
lods
mov
testb
insb
fnstsw
scas
xchg
orl
mov
fsubs
fstl
adc
mov
and
and
xchg
mov
lock
dec
cmp
xor
clc
mov
inc
push
or
aad
cmp
jbe
scas
aas
scas
sub
sbb
xor
andb
jns
xchg
enter
sar
lcall
and
je
sbb
mov
xchg
cmp
fdivl
shl
or
xor
mov
data16
dec
inc
jge
imul
out
decb
sbb
pop
or
sub
sub
cmp
jae
out
mov
lcall
shl
pop
stos
sbb
outsb
sub
inc
cmp
out
jecxz
xchg
pop
ret
loop
push
sbb
loop
bnd
mov
jnp
push
xchg
repnz
push
pushf
xorl
fcomip
icebp
addr16
and
mov
add
subb
sahf
sbb
icebp
outsl
pusha
push
les
mov
mov
test
adc
mov
outsb
aaa
ja
push
ljmp
xor
xor
rorb
call
push
sbb
pop
stos
js
xchg
inc
sub
xchg
jmp
js
pushf
xor
loop
mov
lcall
sub
test
and
test
js
bnd
rolb
clc
decl
xor
fs
mov
mov
xchg
imul
filds
rcll
incl
dec
xchg
fcomps
fwait
cmp
dec
rcll
jns
sbb
fsubr
mov
mov
mov
rcll
jb
fisttps
inc
scas
nop
fwait
rcrb
pushf
xor
cmp
cmp
out
iret
adc
and
fdivs
or
mov
jbe
xchg
add
lea
add
jmp
fcoms
adc
mov
jle
decl
dec
xchg
mov
pusha
mov
mov
ljmp
adc
out
adc
std
call
pop
enter
int3
xlat
mov
mov
jno
outsl
mov
subb
inc
loopne
mov
mov
test
push
ljmp
in
pop
mov
mov
push
pop
ret
mov
sti
fwait
movsl
orl
bound
cli
popf
inc
mov
stos
icebp
outsb
jge
lret
jo
shr
sti
sbb
add
jmp
mov
mov
fucomp
ljmp
pop
test
nop
pushf
add
test
xchg
cs
stc
dec
jg
or
ficompl
push
add
fdivr
int
cmp
hlt
repnz
cwtl
lret
or
sbbb
pop
repnz
enter
imul
inc
fnstsw
cmp
jmp
sbb
mov
mov
mov
fsubl
mov
add
inc
faddl
cli
sbb
push
ja
loopne
aad
gs
mov
outsl
mov
push
mov
sbbb
jmp
dec
mov
cmp
cmp
lock
cwtl
xchg
cmc
dec
clc
data16
mov
out
push
aaa
adc
add
and
ljmp
jg
out
mov
add
cld
sbb
inc
pushf
cmp
data16
das
push
xor
outsl
jmp
dec
out
xchg
cltd
loope
and
out
or
sti
fndisi(8087
mov
call
ljmp
mov
sahf
dec
jp
sti
adc
cmc
sbb
addl
push
mov
push
mov
adc
or
ljmp
jmp
mov
push
out
or
rol
pop
mov
sub
dec
push
imul
cld
stos
jns
mov
hlt
xchg
push
push
inc
loop
xchg
inc
std
xchg
push
loope
pushl
or
insb
push
repz
les
and
cmpsl
lods
hlt
mov
xchg
sahf
mov
jno
lcall
mov
inc
sbb
cmp
shrl
bound
fs
dec
pop
xor
jne
ljmp
inc
sarl
push
jmp
cmp
dec
jmp
out
sub
fwait
aaa
rcl
movsl
pop
icebp
push
fs
jle
jnp
mov
fsubl
sub
out
lcall
push
pop
mov
adc
nop
aaa
shlb
nop
jecxz
in
movl
pop
fists
lcall
jmp
not
pop
popf
outsl
sub
cmp
jmp
fdivp
xchg
orl
jmp
jns
pusha
sub
lret
test
scas
into
jmp
adc
jo
mov
dec
add
inc
iret
xor
sub
decl
fs
mov
pop
sub
xchg
inc
push
cld
repz
adc
fildll
dec
jnp
mov
mov
adc
clc
dec
outsl
cmp
filds
lock
mov
mov
pop
not
pushf
in
xor
shrl
lods
in
inc
int3
mov
rolb
out
fdivr
dec
and
stc
out
pop
aad
daa
or
pusha
xchg
jae
nop
sub
sub
je
pushl
js
lcall
frstor
stos
bound
jbe
mov
fcoms
mov
jmp
jno
shr
inc
shrb
sub
cld
cmpsb
push
sub
out
mov
sbbl
outsl
data16
call
cld
lcall
lods
rdmsr
loopne
rorl
push
pop
mov
xchg
xchg
decl
test
fucomi
fmuls
and
into
mov
pop
sub
int3
mov
and
call
es
or
mov
mov
sbb
out
outsb
push
insl
shll
loop
mov
ds
ljmp
lods
sub
xor
insl
pushf
insb
loopne
push
xchg
mov
lcall
xor
je
mov
push
sbb
in
loope
rcrl
cmp
addl
lahf
sbb
jae
das
cld
and
ret
ret
jg
bound
lcall
adc
mov
pop
roll
lcall
mov
lret
outsl
sbb
js
mov
imul
mov
jg
push
cmpsl
out
sbb
or
cwtl
push
add
leave
mov
hlt
jmp
adc
ficomps
pop
sub
mov
inc
nop
insl
sarb
jle
lods
sbb
test
add
incl
andb
lea
sub
imul
ret
xchg
decl
pusha
adc
xor
xlat
jne
sub
rcrb
lcall
call
aaa
aam
adc
jae
inc
push
sbb
cwtl
bound
xchg
pushf
mov
cmp
fstpt
cmp
xor
jge
aad
jmp
decl
mov
insb
cmpl
or
mov
int
in
fcoms
mov
cmp
fists
mov
insb
cwtl
cmp
pusha
mov
gs
inc
push
aaa
push
sub
lock
pop
je
cmp
xchg
sahf
jmp
mov
mov
shl
mov
dec
arpl
cld
cmp
jecxz
add
daa
inc
cmp
scas
mov
jge
cld
fdivs
shlb
cmp
mov
in
in
mov
iret
jg
xchg
mov
call
out
insb
and
mov
push
mov
lcall
mov
mov
push
outsb
aad
out
inc
ret
sbb
notl
clc
and
jle
or
jg
cmp
call
loope
mov
xchg
test
addr16
and
or
mov
sub
ljmp
push
cmp
aaa
sub
movsl
mov
jbe
mov
movsb
scas
lret
dec
mov
mov
cli
jno
pop
dec
jp
push
popl
xor
pop
mov
imul
xchg
inc
ret
jg
dec
stc
adc
push
mov
fisubs
adc
pop
jg
jmp
test
lock
popf
and
shlb
dec
inc
lret
xor
push
cmc
mov
in
inc
xchg
cmpsl
test
fcmovnu
xchg
mov
das
movsl
repnz
popa
loope
sbb
movsb
jbe
xchg
inc
out
in
lcall
jg
lret
scas
adc
lret
lds
ja
ljmp
testw
dec
pop
jmp
jg
cld
mov
sbb
xor
rorl
int3
sbb
loop
xchg
or
decl
call
lcall
in
ljmp
pop
mov
shlb
fcomi
imul
lret
imul
ljmp
movsl
sti
and
leave
sub
stos
xchg
cmp
pop
mov
sub
jnp
shr
cmp
and
loope
pop
push
xor
adc
andl
push
inc
xor
jne
mov
ss
cltd
jne
loop
mov
jb
orb
and
out
mov
mov
out
mov
push
lods
sbb
arpl
pusha
outsb
or
bound
call
cmp
dec
subb
pop
pop
add
fldcw
inc
ds
js
xor
decl
test
lret
or
pop
mov
orl
push
mov
push
or
push
mov
pop
mov
stos
jmp
inc
dec
inc
dec
mov
push
in
push
out
add
jecxz
add
ljmp
fsubrl
outsb
pop
stos
or
push
jmp
movsl
and
adc
jg
daa
dec
xchg
mov
adc
pop
cmp
ror
xchg
push
xchg
addr16
or
push
std
pop
icebp
aas
cmp
xchg
dec
int3
sarb
adc
mov
mov
aaa
popf
xor
pop
into
xchg
cltd
xchg
inc
mov
call
cmp
inc
call
icebp
ret
push
std
jmp
jo
aaa
add
std
enter
out
aas
call
mov
call
arpl
addr16
fsubrl
add
imul
push
pushf
ret
pop
push
cmp
sbb
mov
adc
pop
mov
test
jge
or
stos
lcall
insl
fisubl
or
or
rcll
mov
call
sar
mov
cmp
pop
loope
mov
lods
jne
mov
inc
cs
incl
cld
bound
mov
xchg
repz
shrb
imul
call
out
fcomps
rolb
dec
push
add
into
mov
mov
imul
xchg
bound
inc
pop
pushf
and
mov
leave
idivl
mov
adc
xchg
add
decl
mov
cmp
adc
mov
mov
sbb
lcall
add
mov
in
pop
nop
push
inc
jmp
adc
mov
pushl
xor
push
push
in
push
sub
add
pop
mov
push
xchg
mov
test
shrl
clc
jmp
xchg
packuswb
mov
out
cs
rcll
adc
arpl
cltd
pusha
cmp
outsl
or
pop
lea
jne
lcall
xor
cmp
inc
ss
js
xchg
xor
mov
cs
cli
mov
cmp
sarl
fwait
icebp
adc
cmp
pop
cltd
cmp
enter
cli
lcall
rcrl
subl
fwait
xchg
sbb
ljmp
xlat
dec
lret
push
xchg
pushf
jbe
sub
mov
or
in
pop
pop
dec
incl
dec
xchg
test
xchg
pop
mov
out
loope
aam
lea
bnd
repnz
and
sar
cmpsl
adc
fcmovb
cmp
add
cwtl
outsl
jae
popa
and
mov
inc
xor
pusha
inc
jo
out
jge
mov
add
mov
aas
mov
mov
sti
pop
hlt
push
mov
pop
mov
cmp
lcall
scas
icebp
and
repnz
insb
xchg
out
test
test
ja
aad
movsl
ds
clc
dec
call
stc
cmp
add
call
adc
inc
loopne
sub
mov
xchg
mov
inc
jl
cs
stos
clc
or
rclb
imul
cli
sbb
mov
lahf
sub
gs
and
push
leave
pushl
cmpsb
ja
ljmp
mov
popf
cli
aas
dec
or
nop
enter
imul
xorl
incl
mov
jb
mov
aaa
jp
jp
cs
scas
and
sahf
fwait
insb
dec
daa
in
jo
js
pop
sbb
cli
sbb
cmp
ljmp
pop
xchg
and
jnp
ret
mov
dec
fsubr
jmp
incl
and
das
mov
shlb
pop
and
xor
imul
push
mov
sub
call
xchg
jmp
idivl
adcb
inc
push
scas
addb
fwait
jle
pop
xchg
sahf
mov
mov
lret
rcl
xchg
jne
mov
into
fstpl
dec
imul
jg
outsl
push
inc
pop
int
imul
add
cmp
lcall
push
pop
jmp
inc
pop
inc
lret
test
xor
dec
loope
stos
jmp
jmp
loope
jno
outsb
dec
mov
ret
pop
xchg
cmp
and
inc
scas
pop
bound
inc
xlat
push
mov
out
inc
sti
mov
or
and
xchg
pop
fcompl
lret
lock
sbb
dec
mov
xchg
lds
push
lret
decl
push
sub
nop
push
jecxz
in
sub
je
stc
popf
mov
scas
fwait
cmpsl
jno
loope
jg
push
andb
ljmp
cmp
jle
lret
xacquire
test
nop
and
dec
sub
xchg
or
clc
lcall
cmp
xor
pop
mov
jne
add
out
out
inc
and
ret
lret
lods
mov
lahf
or
es
mov
cmpsb
dec
std
js
addl
aas
imul
aas
and
insb
into
iret
lahf
aad
idivl
aam
popl
lret
pushl
push
sbb
pop
sub
repnz
ficomps
inc
cli
xor
sbb
xchg
pop
jmp
mov
and
and
test
pop
xor
cmp
cmp
mov
mov
pop
cltd
outsb
int3
mov
sbb
jmp
dec
cld
cmp
jmp
or
add
pushf
lea
div
lea
cld
jno
stos
cld
call
pusha
icebp
dec
add
call
mull
sub
sbb
ljmp
mov
test
pop
bnd
push
inc
fdivrl
mov
mov
mov
push
js
scas
dec
and
jmp
xchg
sbb
outsl
sbb
lret
int
stc
or
lods
push
scas
cld
shrl
jmp
sub
aam
iret
add
out
pop
mov
lcall
fsubl
orb
pop
addb
and
jae
loop
lcall
pushl
mulb
add
push
lcall
in
and
dec
ja
xor
clc
fstpt
roll
mov
ljmp
pushf
dec
cmp
pop
dec
popa
repz
pusha
nopl
cmp
loopne
fdivrs
repnz
ljmp
dec
xchg
addb
push
out
notl
mov
fnstsw
lea
lcall
int3
mov
stos
repz
inc
cmc
arpl
mov
push
mov
cltd
add
fistl
push
lcall
inc
fisttpl
arpl
lcall
pop
add
dec
pushf
ret
jnp
popf
xor
jg
fdivr
jmp
ret
in
add
mov
sahf
cwtl
sbb
pop
xchg
aam
nop
push
sbb
cld
es
hlt
repnz
sbb
cmp
incl
je
inc
enter
mov
sar
sub
insb
and
call
add
cmp
sahf
xor
pop
incl
lods
ss
mov
mov
lret
push
mov
jp
ljmp
data16
sub
inc
jp
and
pop
push
adc
jne
or
fdivrl
jge
dec
inc
or
outsl
or
mov
and
jns
xchg
lock
je
aas
dec
inc
and
sbb
pushl
dec
sbb
scas
ret
loope
jg
cld
xlat
jecxz
dec
loopne
push
xchg
mov
ljmp
inc
jg
cld
popf
jmp
sbbl
fildl
dec
leave
fisubrl
jo
lcall
pop
lds
imul
add
arpl
cmp
repnz
les
bound
incl
add
fdivr
inc
pop
popa
fcmovu
inc
mov
aas
jb
sahf
pop
inc
jno
jb
add
xor
or
rclb
mov
loop
pop
cmp
mov
mov
scas
and
mov
cmp
fdivrp
call
repnz
jae
lock
jno
int3
mov
ret
addb
jmp
mov
add
pop
mov
cmp
jle
ss
xchg
aad
xorb
xchg
dec
xor
inc
pop
hlt
jmp
pop
cmp
lret
or
lcall
je
outsb
ljmp
dec
or
hlt
lahf
rorl
dec
cmpsb
lock
sbb
in
loopne
aad
dec
xchg
aad
sub
sub
push
lcall
mov
dec
jle,pn
ljmp
sub
into
pop
xor
and
or
cld
or
pushl
jno
xchg
repnz
rorb
add
daa
sub
mov
jg
decl
idivb
jae
cwtl
jle
adc
ja
push
ds
cmp
dec
mov
mov
iret
neg
sbb
push
bound
in
decl
fdivl
bound
cli
jns
inc
lcall
scas
pop
dec
repz
test
call
xchg
cmp
filds
subb
mov
push
int3
imul
mov
inc
fs
fwait
jl
fcmove
mov
rolb
arpl
lahf
lret
push
xorl
inc
call
adc
cli
pop
pop
adc
insb
or
call
push
sub
pop
or
cli
adc
repnz
repnz
loop
lcall
cmp
jg
rclb
jmp
stos
rclb
xchg
out
mov
inc
jns
cmpsl
repnz
dec
sbb
hlt
mov
inc
jl
ds
cmp
xchg
and
fcomip
or
decl
loop
push
xchg
sbb
ror
cmc
or
es
xchg
jns
loopne
in
lcall
cmpsb
iret
adc
ds
mov
inc
enter
es
popa
pushl
mov
out
xor
xchg
dec
xchg
mov
cmp
push
mov
lret
shlb
sbb
mov
or
ljmp
add
xchg
je
hlt
shrl
test
into
imul
push
dec
loope
or
push
jmp
lcall
shll
out
mov
into
mov
cli
sbbl
sub
incl
push
in
imul
stos
and
inc
lcall
iret
dec
inc
push
fistps
pop
mov
mov
es
les
popf
sbb
pop
ljmp
pop
jo
sar
dec
add
push
lret
xrelease
mov
xor
inc
inc
in
sbb
adc
mov
jne
test
inc
aas
or
or
dec
sub
aad
cmp
jge
lds
rorb
gs
cli
and
decl
stos
ds
lahf
bound
imul
lcall
pushf
sbb
push
mov
jne
mov
or
fsubrs
jl
rcl
dec
ss
in
cmp
int
leave
cmc
cld
lcall
xorb
adc
mov
aaa
mov
dec
mov
scas
sbb
push
ja
test
in
lea
inc
outsb
inc
pop
jo
aas
jns
jne
inc
mov
cld
decl
inc
sbb
loope
stos
mov
enter
movsb
dec
and
loope
mov
cmpsl
or
hlt
xchg
and
xchg
in
mov
into
fcomip
lcall
push
pop
and
dec
loope
sbb
mov
idivb
clc
ljmp
lods
lret
imul
push
icebp
test
cmp
push
fistpl
inc
mov
sbb
icebp
pop
fbld
call
shll
fnsave
incl
mov
sahf
shll
cs
mov
cmp
es
jb
push
lcall
mov
sbb
add
loopne
pop
jecxz
adc
int
rol
push
stos
sbb
pushl
stos
in
sbb
mov
adcb
or
pop
inc
sbb
movsb
testb
sar
cmc
ret
gs
out
jge
push
adc
ljmp
stc
mov
dec
addr16
dec
scas
cmp
in
push
lods
out
mov
jbe
push
xor
clc
subl
movsb
sbb
xor
cmp
add
xchg
and
sbb
push
dec
jl
loope
pop
jb
pop
aaa
data16
mov
pop
push
add
xchg
outsl
sub
sub
out
into
jb
psubw
sar
cld
jle
adc
ljmp
xor
sbb
fwait
lcall
outsl
shlb
and
mov
mov
adc
ja
lcall
cli
mov
inc
mov
hlt
inc
add
out
pop
out
mov
mov
mov
ljmp
fimull
xchg
shlb
mov
arpl
inc
or
jmp
je
lret
cmpsl
adc
sub
pop
std
mov
fcmove
and
mov
mov
and
hlt
mov
daa
int3
xchg
sub
xorb
cmpsb
int
dec
and
test
fs
roll
sahf
cmpb
cld
mov
clc
mov
xor
lock
dec
sar
pop
adc
jno
ds
mov
sbb
es
cli
ljmp
ljmp
dec
dec
push
cmpl
jmp
loope
test
fistpll
and
je
mov
xchg
inc
jo
decl
gs
leave
inc
push
jb
sub
cmpsl
cli
mov
xchg
mov
sti
mov
jmp
mov
jg
lret
mov
lods
int
js
sbb
int
mov
call
scas
test
sbb
dec
mov
int3
rol
fnstcw
mov
or
decl
rorb
xor
mov
mov
movsl
sbb
xor
cmp
ljmp
mov
adc
mov
inc
xchg
aas
jb
or
cs
xlat
push
mov
rcr
xchg
add
adc
inc
das
sub
mov
icebp
les
fcomip
incl
std
ret
ja
pop
xchg
sbb
lds
dec
fwait
adc
xor
pushl
pushf
test
pop
pop
ja
leave
lods
pop
in
fdivrs
or
cmp
ss
pop
out
imul
decl
sub
pop
sbb
inc
call
jecxz
mov
fcomps
push
inc
mov
add
push
sahf
add
inc
and
sub
icebp
dec
lods
push
rolb
cld
xchg
out
jl
adc
push
cld
jns
aas
or
pop
mov
mov
int3
push
sbb
ljmp
call
push
pop
xor
adc
cwtl
sub
ss
das
movl
pop
ret
insl
mov
out
pop
mov
insl
js
ljmp
mov
cmpsb
mov
incl
adc
call
ss
add
jbe
jg
add
xchg
daa
or
push
mov
and
or
sar
dec
in
lea
movsb
dec
ds
cmp
lock
orl
mov
ss
incl
jne
cmp
bnd
sub
push
fbld
sbb
movsb
mov
xchg
push
addr16
gs
pop
or
jmp
push
hlt
test
jge
bnd
vcvtss2si
mov
bound
mov
or
add
fldenv
out
cmpsl
cmp
pop
adc
push
sbb
fnstsw
das
sti
in
adc
inc
xchg
mov
pop
adc
nop
mov
sahf
loopne
cs
lods
sbb
aas
or
popf
push
fisubs
add
cld
inc
les
sahf
test
incl
dec
xchg
inc
push
mov
pop
loope
inc
inc
fimuls
adc
and
jmp
sbb
xor
mov
aad
inc
inc
lret
fisubrl
cwtl
cmc
je
in
jp
fwait
call
mov
clc
repz
rolb
loopne
negl
mov
in
cld
xlat
fcomps
lret
clc
enter
loope
pop
and
mov
mov
cmp
sbb
pop
ja
jnp
jno
adc
lcall
mov
or
or
inc
lods
jae
add
pop
shlb
xor
mov
inc
cmp
or
int
sahf
xor
push
cmp
add
pusha
add
movsb
scas
mov
inc
xchg
fstl
clc
ljmp
fcoml
xlat
mov
or
aas
inc
and
pop
test
loopne
ljmp
pop
enter
xchg
inc
dec
ja
mov
es
imulb
incl
mov
or
in
sbb
idivl
mov
ds
jg
cmp
sbb
inc
or
xchg
push
mov
ds
call
xor
mov
and
ss
es
sarw
call
cli
add
mov
sbb
push
jo
jg
jmp
sbb
ja
adc
dec
pop
imul
stos
and
notb
repz
mov
push
and
sar
mov
push
lods
aas
leave
fimull
mov
int
add
das
pop
jns
pop
push
jg
adc
xlat
mov
pop
push
rorb
mov
or
fildl
rolb
dec
ljmp
ljmp
je
mov
pop
lods
mov
add
and
loope
xchg
call
call
test
iret
pop
push
xor
ret
mov
test
icebp
call
cmp
push
ljmp
push
lret
cwtl
jmp
xchg
sub
cltd
lds
in
or
pop
mov
pop
mov
imul
jg
sarl
sub
pop
mov
lods
daa
jmp
stos
sbb
stc
jmp
gs
cmp
ljmp
clc
xchg
pop
cmpsl
cmp
mov
gs
xor
insb
pop
jo
xor
test
pcmpgtd
ljmp
jecxz
adc
test
add
leave
in
mov
mov
inc
sub
add
xchg
call
cmpsb
sub
cmp
in
test
js
jl,pn
cmp
loop
icebp
pop
mov
or
pushl
add
push
fsubrs
mov
pop
enter
push
jmp
pushl
js
aaa
sbb
push
lret
dec
jmp
xchg
jp
std
jl
xor
addr16
cmp
xchg
and
loop
cmp
pop
xor
adc
sahf
aad
je
mov
push
out
out
or
pushl
or
inc
divl
aas
dec
aad
enter
jl
shlb
shrb
repz
xor
insb
cltd
movsb
inc
leave
cltd
call
pop
xchg
repnz
ljmp
and
enter
je
fcomps
cltd
jecxz
loopne
orl
add
adc
rcl
scas
mov
ss
orb
imul
ljmp
in
sub
cmp
dec
mov
inc
inc
or
or
loopne
leave
pop
test
stos
cmp
mov
xor
pop
xor
mov
dec
and
add
jae
lret
insl
arpl
jg
test
int3
and
imul
cmpsb
xor
js
neg
xchg
loop
cwtl
xchg
decl
ret
sbb
jne
mov
sbb
bound
ror
adc
ljmp
cmpsb
rcll
jo
xor
push
test
das
mov
bound
xor
or
ret
jg
lret
mov
adc
pop
lock
sub
mov
fildll
arpl
jg
hlt
dec
jns
or
or
add
rolb
ret
sarl
incl
mov
mov
outsl
xor
je
stos
jmp
jo
pop
add
mov
mov
push
push
notl
out
dec
imul
xlat
dec
inc
loopne
decl
inc
and
jbe
aaa
adc
adc
pushl
sbb
repz
lods
fs
jmp
adc
cmp
lcall
jp
cmpl
add
mov
ds
and
mov
out
cmpsl
or
pop
in
in
call
loopne
repz
adc
xchg
or
add
fstpl
mov
jb
lcall
call
jb
jnp
mov
fsubrl
mov
adc
lcall
sti
imul
cs
or
in
fiaddl
incl
mov
jmp
pop
jb
and
lret
movsb
mov
cmp
jmp
mov
mov
sub
rcr
xchg
xor
sub
test
decl
mov
jo
repnz
imul
jae
fwait
cmc
incl
mov
ss
lahf
adc
arpl
shlb
cld
pop
out
ret
jo
pop
xorl
mov
inc
cmp
cltd
outsl
in
imul
imulb
sub
fdivl
pop
andb
jmp
sbb
cs
mov
sbb
xor
push
or
pusha
mull
cmp
mov
pop
decl
fidivl
cmp
out
mov
adc
xchg
test
jb
cmp
cmpsb
xlat
scas
shlb
in
rorb
adc
push
inc
test
in
add
dec
inc
pushl
push
pop
int3
or
clc
rcr
lret
sub
je
movsb
push
dec
jle
push
pusha
push
lea
pop
dec
mov
xchg
movsl
outsb
sbb
sbb
mov
call
inc
jp
dec
jnp
mov
lahf
mov
ret
fistpll
incl
xchg
jne
ljmp
xchg
push
mov
cmp
dec
jbe
push
sub
inc
push
lock
jmp
ds
sbb
xchg
add
hlt
loop
aas
fs
inc
xor
inc
add
mov
push
or
jo
inc
fninit
out
jne
push
aam
cmpsl
dec
in
pop
cmc
lcall
inc
jle
iret
repnz
cmc
addr16
js
mov
push
test
call
insl
aaa
xor
cli
jae
xor
gs
lcall
cld
sar
xlat
xor
sub
insl
cmp
fs
push
sub
test
daa
pusha
pop
inc
scas
jae
cmpb
lock
adc
incl
ror
mov
stos
lahf
sbb
inc
jecxz
pusha
test
in
mov
push
dec
cmp
int3
jg
nop
dec
scas
repz
add
xchg
xchg
int3
mov
cmpb
or
fisttpll
mov
jne
push
push
inc
mov
cmp
push
rcl
cmp
arpl
mov
cli
rcrl
lods
incl
out
call
adc
mov
jecxz
mov
mov
mov
out
iret
add
inc
mov
inc
xor
hlt
call
lcall
out
mov
cmp
fildl
insl
or
test
imul
ljmp
mov
out
bound
aas
mov
lods
inc
loop
sahf
pushl
sub
scas
adc
fisttpl
push
mov
jbe
imul
xchg
into
iret
cmp
mov
outsl
lcall
pop
addr16
movsb
adc
and
dec
ljmp
push
adc
cmp
jae
aaa
lahf
adc
lcall
pushl
loopne
call
std
sub
out
push
mov
push
xor
mov
decl
xchg
or
cmpsb
mov
popf
lea
fcoml
jb
cltd
mov
call
sbb
stos
mov
and
mov
push
lods
sub
xor
cmp
cwtl
xchg
jmp
adc
add
test
insb
pop
loope
pop
xchg
sbb
cld
mov
adc
cld
xchg
imul
xchg
sar
rclb
sbb
ljmp
inc
movsl
in
int
dec
inc
xor
ljmp
inc
dec
pop
in
push
fadds
mov
and
inc
push
insl
lret
or
loope
fucom
mov
cmp
push
sbb
fwait
or
mov
and
ljmp
call
add
aaa
pop
fsubs
call
mov
xchg
mov
incl
cmp
lods
and
push
mov
loop
fistpl
outsl
out
mov
pop
mov
incl
cltd
mov
mov
sub
adc
inc
arpl
push
and
std
push
or
scas
cli
decl
call
les
jbe
int3
sbb
xchg
ljmp
insb
loop
sub
call
mov
fmulp
rol
rcrl
sbb
pop
out
ljmp
add
sbb
lock
and
pushf
inc
ljmp
les
cmp
pop
xchg
je
add
fucomip
mov
scas
adc
sub
xor
outsb
or
push
cmp
add
xor
sbb
cmp
dec
sbb
jg
or
pop
pop
mov
out
adc
xchg
jne
pop
incl
cltd
lcall
sub
push
call
sub
stos
sub
inc
jno
jmp
mov
xchg
es
dec
xchg
rolb
pop
sti
cmp
jge
jae
pop
xlat
cmp
mov
jp
and
xor
test
scas
scas
cmp
jmp
fs
ret
sarl
call
dec
xchg
xor
xchg
xchg
mov
adc
std
mov
test
outsb
jbe
push
test
xchg
stos
jno
sub
cmp
mov
je
int
pop
mov
jg
or
xor
fxch
mov
jg
daa
cmpsl
pushf
test
aaa
ret
pushl
aaa
lea
jbe
shrb
fcompl
js
lock
daa
pop
push
testb
lcall
mov
jp
dec
sub
mov
sbb
lcall
cmc
dec
pusha
sbb
jg
pushl
insl
xor
sub
and
push
fists
push
xchg
dec
xor
fimuls
cmp
dec
adc
pop
mov
stos
push
stos
bound
pop
mov
fstpl
jns
cli
jmp
clc
test
mov
imul
ret
jmp
decl
pop
subb
mov
pop
xchg
mov
jns
pop
test
clc
cld
sbb
arpl
call
movsb
mov
mov
and
pop
pop
das
pop
sbb
xchg
cld
mov
jg
decl
mov
jbe
pusha
mov
inc
in
or
sub
cs
fildl
push
repz
sti
fidivl
dec
jge
mov
jg
insl
dec
inc
lcall
aam
mov
lock
call
cmpsl
lods
adc
adc
decl
out
movsb
fsubl
dec
lds
movsb
movsb
lock
ret
js
repnz
push
jg
dec
cmpsb
push
pushl
out
test
mov
fcomps
out
push
xor
push
jle
call
inc
js
mov
pusha
lods
lea
push
push
pop
ret
fidivrs
test
jmp
cmpsb
cmp
adc
cmp
lds
testb
pop
pop
and
jl
mov
and
sbb
decl
in
in
js
pminub
dec
outsb
lods
add
inc
mov
or
cwtl
enter
or
sub
jle
icebp
mov
xor
pushl
mov
shr
or
sub
pop
loop
ja
gs
mov
mov
fstl
or
ljmp
inc
in
sbb
pop
dec
call
aam
sahf
mov
sti
rcrb
pop
jg
decl
mov
out
repnz
jb
insb
std
and
jbe
out
sub
out
mov
mov
sbb
call
jmp
pop
les
scas
push
dec
lcall
jle
mov
call
mov
popa
ret
inc
fiadds
xor
incl
in
dec
cmpsb
mov
in
repz
mov
mov
mov
sbb
jg
and
call
decl
hlt
imul
pop
fwait
inc
scas
mov
aaa
and
aaa
push
xor
push
mov
arpl
inc
out
outsl
push
in
ljmp
xchg
pop
push
je
xchg
cmp
sub
ljmp
mov
and
sbb
iret
mov
mov
clc
int
mov
clc
xor
test
dec
out
test
sbb
rclb
iret
popl
ficoms
pusha
fnstenv
nop
jmp
jnp
nop
pop
scas
outsl
xor
fdivr
stos
call
shlb
imul
push
int3
mov
inc
jo
call
lret
pushf
movsl
fidivrl
xor
cmp
jg
movsl
mov
cmp
or
jecxz
es
out
xor
sub
out
orl
pushf
test
jge
gs
cmp
paddd
push
jns
and
jecxz
std
decl
jno
mov
arpl
jmp
js
sub
pop
xchg
pushl
inc
sahf
jnp
out
fcmovnu
test
std
inc
je
sar
lock
sbb
ret
stos
mov
xchg
int
mov
in
fnstenv
mov
inc
mov
sbb
xor
es
push
xchg
clc
dec
jo
push
jbe
cmp
fs
push
adc
jno
xchg
pushl
mov
js
call
out
arpl
sahf
cs
xchg
mov
pop
and
pop
repnz
mov
js
or
inc
adc
xchg
mov
aaa
cld
pushl
pushf
int3
ds
cmc
sti
mov
add
fnstsw
fmul
push
mov
jmp
stc
xchg
xchg
push
or
dec
adc
xchg
test
in
insb
scas
lods
repnz
fcos
dec
dec
xchg
fs
int
and
inc
or
ss
fldenv
and
std
decl
push
add
aas
bound
ret
xchg
std
js
pusha
inc
ret
cli
push
ja
xchg
inc
test
ljmp
cli
std
in
movsb
in
test
imul
movsl
or
mov
fistpl
aas
fs
jnp
fnstenv
inc
out
lds
pop
push
jecxz
mov
test
stc
dec
add
inc
pop
adc
lcall
hlt
cltd
pusha
push
sbb
aaa
lods
xchg
cld
fsubp
xor
cmp
mov
pop
dec
jmp
repnz
test
test
rclb
mov
je
lea
cmp
fnstcw
fidivl
aad
rorb
insl
call
dec
out
dec
out
sub
mov
cmovae
mov
jle
bound
mov
xor
inc
pushl
mov
or
sub
sub
and
mov
xchg
call
movsl
mov
or
inc
arpl
mov
sub
incl
push
adc
sbbb
scas
add
or
popa
push
dec
lret
and
mov
pushl
push
movsl
mov
jge
subl
xor
xchg
leave
loope
mov
mov
aas
arpl
jmp
inc
sub
repnz
lret
add
xchg
or
mov
test
pop
adc
cld
jmp
mov
pop
add
dec
imul
scas
xchg
jmp
nop
push
outsb
je
add
inc
cld
pop
mov
xchg
fcoms
mov
sahf
xor
inc
sub
inc
mov
jae
push
out
pop
idiv
decl
lcall
ljmp
movsb
gs
lret
lret
jnp
movsb
and
inc
ja
or
lcall
mov
popa
mov
jge
ljmp
test
aam
das
push
lahf
xchg
cmpsl
xchg
incb
popa
push
in
pop
jl
push
cmpsl
and
mov
imul
add
aam
ds
jnp
sub
std
scas
mov
test
mov
jg
pop
pop
xor
jp
mov
push
adcb
mov
les
fs
lods
js
in
cmp
jo
call
lods
scas
shr
lea
addl
xchg
movsl
add
xchg
push
out
ljmp
mov
ss
dec
test
push
cmc
loope
jecxz
xchg
jb
aad
xchg
ret
cltd
call
dec
sub
sbb
nop
js
imul
adc
or
fcos
lcall
pop
adc
vmovq
ret
mov
and
cli
dec
dec
ljmp
xor
xchg
fisttps
pusha
inc
lods
push
in
out
out
and
mov
jle
mov
mov
lods
hlt
decl
lcall
and
jno
shlb
gs
ljmp
mov
hlt
or
cmp
fldenv
je
cmpsl
cmp
add
jg
jnp
cmpsb
pop
sub
lret
mov
push
imul
sbb
mov
push
ljmp
lds
pushf
xchg
inc
pop
clc
ja,pt
mov
lret
cs
out
fbld
dec
mov
dec
cmp
inc
xchg
ficompl
xchg
push
mov
jmp
adc
xchg
xlat
or
mul
scas
adc
scas
lcall
sub
sbb
lods
fisttps
xchg
jb
clc
cmc
les
fsubp
or
fcomip
decl
es
and
and
sbbb
xchg
out
popa
in
cwtl
fwait
test
hlt
imul
out
cwtl
out
inc
lret
push
and
loopne
xchg
inc
xor
pop
or
and
gs
jo
inc
aam
lcall
xlat
fcompl
sarb
mov
lret
stc
mov
dec
imulb
sbb
sub
out
cli
test
lcall
outsb
xlat
iret
push
stc
mov
call
lcall
inc
mov
mov
mov
lret
push
sub
sub
and
push
or
loop
mov
cmp
sbb
sarl
cmp
mov
cltd
mov
fbld
adc
mov
xchg
inc
hlt
lods
add
xchg
pop
sbb
sbb
jns
add
and
mov
mov
or
pop
push
rolb
notb
ljmp
mov
mov
incl
pop
test
mov
dec
lea
jl
pop
push
je
sbb
sbb
call
and
dec
mov
xchg
sub
fildl
cmp
mov
popa
outsb
pop
jo
ljmp
lcall
orb
xchg
push
lds
mov
pusha
add
xchg
xor
mov
dec
xchg
sub
popa
mov
pop
out
adcb
inc
inc
push
mov
bswap
and
lcall
ljmp
push
inc
in
movsb
xor
insb
adc
pop
add
dec
xchg
clc
mov
jge
xor
xchg
test
sub
orl
xchg
lcall
mov
aaa
mov
lret
push
dec
out
or
xchg
sti
inc
mov
pop
bound
jg
add
ljmp
pop
inc
sub
insl
iret
lea
decl
lock
insl
inc
sbb
ljmp
pushf
add
adc
in
ljmp
cld
sub
std
or
mov
add
outsl
testb
push
insb
out
clc
incl
sbb
xor
sbb
in
dec
mov
xchg
sub
push
inc
scas
dec
push
mov
mov
add
call
lcall
mov
arpl
xor
cmpsb
pop
pop
outsb
sbb
pushl
mov
adc
mov
das
mov
jno
push
divl
push
mov
pop
cwtl
pop
fs
decl
xchg
cmp
stc
sub
int
mov
fisttps
int3
fimull
loop
filds
fnstcw
sahf
das
mov
mov
clc
jmp
sbb
add
jp
push
das
test
incl
insb
test
rorl
xchg
pusha
bound
push
loopne
adc
repz
pushl
cli
sub
or
jmp
pop
aad
xchg
adc
ja
aaa
std
ja
pusha
fists
addr16
xor
mov
push
scas
adc
lea
mov
int
dec
leave
and
adc
cs
xor
cltd
or
rcrl
outsb
jne
sbbl
cld
jno
or
icebp
mov
pop
aam
into
and
fcmovbe
and
ja
movsb
mov
pop
imul
mov
mov
je
mov
add
inc
rcll
test
jmp
enter
xor
sti
mov
rclb
into
imull
dec
dec
loope
mov
dec
call
dec
xor
je
adc
adc
jp
lods
add
incl
sbb
or
mov
sbb
add
or
mov
pop
outsl
int
dec
sbb
lcall
sub
sahf
lea
mov
push
xor
mov
daa
push
cmpsl
rcrl
test
mov
ljmp
xchg
stc
addr16
popa
sub
pop
mov
loope
cmpsb
shll
or
or
pop
pop
xchg
out
jmp
add
enter
rorb
pushl
sbb
dec
outsl
adc
pop
cmp
mov
sbb
arpl
rcll
pop
sbb
jae
push
mov
mov
loopne
jnp
inc
cmp
icebp
push
loop
jecxz
xchg
lret
pop
dec
mov
shll
adcl
cmp
call
das
les
lea
pop
mov
insb
mov
mov
insb
loope
not
dec
push
pushf
clc
push
pop
mov
incl
lock
mov
imul
cwtl
sub
push
xchg
enter
es
mov
rcrl
shll
mov
gs
push
dec
push
xchg
jae
insb
sar
std
adc
mov
mov
sbb
xor
xor
mov
jno
out
nop
cmc
mov
repnz
call
pop
and
pusha
fwait
mov
data16
sbb
testl
fsubrs
mov
fcomps
andb
dec
lret
pop
idiv
fcomip
js
mov
imul
lock
inc
add
and
fcom
out
decl
pop
js
idivb
cltd
and
faddl
rol
push
push
sub
aad
adc
incl
addr16
mov
cmpsb
scas
popa
xchg
push
lods
je
adc
adc
jmp
mov
out
mov
or
dec
pop
rorl
aam
push
jle
lret
mov
cmp
movsb
pop
add
jno
popa
pop
int
push
sbb
or
stc
cmpsb
stos
scas
cmc
push
ja
push
pop
lods
xor
inc
lret
pop
sbb
ud0
incl
push
rorl
mov
lock
inc
int
pop
es
js
bound
sub
incl
or
out
test
enter
sahf
pop
inc
hlt
scas
pop
fs
cmpsb
pop
and
call
fstpt
pop
jl
cwtl
lds
inc
push
pop
int3
fldl
out
cmp
decl
mov
test
clc
or
jne
mov
xchg
or
cmp
xchg
inc
mov
or
int
jbe
pushl
adc
std
and
fnstsw
leave
mov
sti
insl
incl
movsl
sbb
mov
and
test
bound
xor
subl
cmp
xchg
inc
add
jl
mov
or
aaa
xorb
stos
sub
cmpsb
mov
inc
mov
call
nop
mov
or
cmp
fistpl
scas
fcmovb
jo
incl
rorb
imull
cwtl
inc
push
and
jg
dec
add
xor
add
and
icebp
fcomip
jmp
xchg
cmp
jl
xor
shrb
ficompl
ljmp
push
push
or
dec
and
inc
lcall
call
popf
push
pop
lret
fld
insb
xor
or
jne
pop
hlt
lcall
adc
ljmp
inc
ds
pop
inc
icebp
rorl
nop
jge
dec
scas
xor
push
or
sub
dec
popa
xchg
shlb
iret
ljmp
and
leave
jp
xchg
inc
sub
loopne
add
xchg
push
sbbl
pushl
or
sti
fdivs
lcall
pushl
jb
xlat
dec
mov
pushf
rolb
cmp
fsubs
lahf
enter
test
movsl
and
add
js
clc
ljmp
inc
mov
shrb
das
add
fcomip
dec
mov
sub
in
xorl
jge
inc
adc
ljmp
lret
jbe
add
rcrl
cli
sub
scas
mov
insl
cmc
js
pop
cmpsb
fcomip
mov
mov
jecxz
and
push
outsl
gs
and
inc
popa
sbb
add
scas
icebp
lods
sbb
jle
jg
lods
dec
adc
hlt
lods
fcmovnu
fcompl
inc
mov
decl
pop
clc
ja
cwtl
xor
or
mov
rorb
imul
jmp
or
pop
mov
stc
adc
lods
mov
sub
pushl
popa
pop
mov
enter
jnp
dec
cwtl
das
xchg
fdiv
or
adc
xchg
testb
call
imul
inc
add
lea
push
out
sub
imul
dec
xor
cmpsl
jno
cld
stos
cwtl
xlat
daa
mov
movsl
test
xchg
popf
sub
mov
repz
push
fwait
sbb
sti
cmp
mov
decl
sbb
adc
sub
lret
adc
add
clc
and
jmp
fists
ficoms
dec
push
arpl
xor
mov
movsl
insl
scas
test
or
add
mov
add
ja
loopne
mov
sbb
jae
pop
or
loopne
mov
xchg
cmp
push
push
lret
mov
jl
das
rorb
scas
inc
xlat
mov
pop
mov
ljmp
cmp
mov
mov
rcrl
dec
shlb
ljmp
lahf
and
pop
andl
fs
dec
and
mov
loope
inc
cmpsb
fcos
decl
ficoml
imul
add
mov
lret
out
arpl
add
mov
sahf
mov
push
lods
fwait
cwtl
std
pushl
out
mov
lahf
sub
mov
pusha
sub
sub
push
cmp
inc
jg
aaa
pop
cli
out
mov
outsb
aaa
movsb
cmpb
adc
incl
hlt
pop
xchg
sahf
cmp
lods
pop
mov
cmc
pop
iret
call
outsl
xchg
push
push
test
fisttpl
ret
ret
jp
pop
loopne
mov
dec
mov
mov
pop
lock
imul
out
iret
add
aam
decl
imul
fstpl
pop
test
mov
or
and
inc
subb
mov
mov
mov
mov
out
pop
data16
cmp
scas
lret
cli
decl
jmp
add
int3
es
lcall
xor
mov
push
mov
pop
mov
popf
and
cmp
imul
mov
loop
push
mov
sar
push
int
fldcw
xchg
and
push
inc
sub
pusha
clc
adc
les
aam
pushl
mov
mov
adc
dec
mov
into
sbb
mov
add
mov
lcall
xchg
mov
pusha
inc
fs
loope
jg
cli
mov
bndstx
inc
scas
decl
mov
xchg
mov
or
or
js
dec
test
ljmp
sbb
aaa
fwait
mov
inc
imul
cmp
jl
in
sar
decl
addb
fwait
rclb
mov
or
mov
leave
mov
sar
cmp
stos
scas
lock
sbb
gs
jns
mov
pop
mov
inc
clc
ljmp
mov
mov
mov
and
mov
jle
imul
and
call
mov
and
test
inc
fnstsw
sar
into
inc
xlat
pop
leave
andb
push
pop
ja
xchg
push
aam
subb
pushf
movsb
mov
int
mov
xchg
decl
push
inc
mov
inc
popf
mov
cmp
sub
pusha
push
out
cmp
adc
push
std
incl
xor
jo
and
addb
mov
adc
pop
inc
rol
fsubs
xchg
mov
ja
iret
pop
jp
loopne
call
xchg
push
adc
pop
inc
sub
je
or
xor
int3
jnp
mov
dec
mov
jl
inc
dec
nop
jmp
and
xchg
push
mov
inc
mov
sbb
lahf
jne
sbb
add
incl
ret
aad
out
popf
lods
cmpsl
mov
and
mov
mov
cltd
mov
ljmp
cli
xor
add
xchg
mov
jmp
je
out
cwtl
movsb
stc
ljmp
lods
cmpsb
pop
ret
stos
xor
xchg
mov
les
ja
aaa
push
popl
xchg
fcomip
push
scas
popa
cli
dec
mov
cmp
sub
mov
inc
ror
int
sahf
dec
pushl
rol
cmp
xchg
js
scas
adc
addr16
inc
sarb
xorb
lock
mov
inc
pop
sub
insb
adc
in
add
mov
outsl
and
mov
call
push
mov
lcall
loopne
fnstcw
sar
push
sbb
push
or
dec
dec
jg
mov
imul
cmp
mov
jnp
movnti
clc
jae
mov
decl
out
lcall
aas
movsl
adc
dec
mov
sub
xchg
faddp
cld
incl
cld
jb
loopne
sar
test
jl
lods
sbb
ret
test
imul
push
std
add
sahf
leave
ficoml
sub
xchg
and
mov
ljmp
icebp
xchg
fldt
adc
dec
scas
cld
jg
loop
ljmp
pop
dec
insb
sub
ds
pusha
xor
or
sar
call
push
xor
jo
and
pop
and
ljmp
into
sahf
enter
cmpb
in
mov
xor
mov
jns
mov
sub
xchg
cli
xchg
in
xchg
cmp
xor
cmpsl
mov
divb
adcl
leave
pop
pop
push
dec
pop
popa
ja
and
daa
sbb
adc
inc
cs
call
jne
mov
or
cmp
push
pop
aas
jnp
cmp
ja
daa
lods
mov
decl
je
or
sbb
popa
dec
xchg
out
xchg
repz
decl
push
xchg
lods
pop
lea
push
dec
cmp
lds
stos
pop
push
pushf
inc
xor
xchg
dec
or
cmpsb
hlt
pop
fbld
add
sub
jecxz
sub
movsb
cs
cmp
mov
mov
add
arpl
mov
jecxz
cmp
add
cmp
enter
cli
push
sbb
orps
sub
sub
mov
in
dec
sbb
xor
or
nopl
dec
or
test
cmc
ret
call
scas
xor
push
jb
iret
rclb
sbb
cmp
pop
xchg
mov
decl
cmc
pop
jmp
je
push
push
test
dec
lcall
pop
mov
jg
jmp
shr
pop
or
je
mov
mov
mov
inc
sub
je
xor
push
mov
ljmp
push
fadds
neg
mov
loope
mov
push
mov
pop
sub
incl
cli
jne
adc
rep
inc
jno
fdivrs
fisttpl
push
push
fadds
loopne
icebp
ljmp
pop
xchg
pop
dec
ret
cs
scas
jg
push
jge
and
pop
out
mov
incl
mov
sahf
xchg
jecxz
mov
cmp
jle
roll
mov
or
xchg
lret
mov
aam
les
jne
mov
xchg
jmp
arpl
cmp
lcall
sub
push
add
dec
mov
call
mov
sahf
or
mov
jne
adc
cwtl
andb
dec
mov
mov
cli
nop
rcrb
mov
adc
fidivrs
pop
aaa
pop
add
lcall
lods
push
jne
neg
cli
aad
add
dec
inc
imul
negl
adc
inc
and
stos
xor
loop
sarl
mov
mov
inc
ja
leave
sbb
sub
mov
ljmp
push
push
out
int
dec
loope
adc
pushf
sub
sahf
push
cmp
or
mov
inc
xor
out
stos
mov
pushl
std
inc
lods
push
cmp
sbb
aaa
jl
std
scas
lods
or
rcl
out
call
adc
xor
je
mov
loop
and
sbb
xchg
xchg
aam
cmp
cli
mov
cmpsb
loopne
inc
mov
in
test
dec
test
call
dec
ret
adc
loopne
mov
insl
cld
out
xchg
fwait
and
add
xchg
cmp
jmp
cmp
pusha
shll
scas
adc
inc
sub
cmp
sahf
call
inc
xchg
stos
inc
mov
les
ficomps
imul
mov
mov
daa
or
and
cmpb
pop
lds
subl
mov
mov
mov
mov
loope
mov
xchg
lcall
aad
pop
sub
rorl
mov
adc
hlt
dec
and
loop
mov
add
loope
sub
call
push
inc
inc
bound
jne
add
jl
mov
aas
lds
cmp
sub
aam
stc
mov
mov
ja
outsl
clc
push
xchg
mov
mov
push
pusha
add
mov
pushl
push
cmp
push
add
pop
inc
stc
stos
loope,pt
sahf
jb
lret
xor
xchg
and
pushl
mov
push
xor
dec
fisubrl
or
ljmp
mov
jo
jnp
popf
popa
out
mov
fsts
xlat
and
adcl
or
icebp
sbb
jle
jg
adc
jno
mov
jge
jns
add
adc
pop
adc
jle
ret
sbb
lcall
aas
insl
add
or
stos
sbb
leave
inc
pop
sub
jl
into
call
push
mov
dec
es
scas
dec
loopne
arpl
sarl
sub
pusha
xchg
mov
pushl
push
jnp
lret
das
dec
loope
or
rol
and
or
jbe
movsl
incl
shlb
call
ljmp
aad
sbb
inc
fbld
nop
pusha
in
sub
test
adc
jne
cmp
movb
inc
and
pushl
aam
add
adc
push
ficoml
mov
jmp
mov
jg
jmp
mov
mov
les
push
pop
call
mov
or
outsb
adc
call
std
lcall
in
jg
mov
and
out
loopne
hlt
stos
inc
pop
mov
sbb
ret
rcll
add
sub
lret
bnd
mov
pop
mov
add
leave
sti
dec
cmp
adc
outsb
mov
mov
leave
gs
push
out
inc
xchg
or
push
inc
dec
xchg
push
sub
add
lock
ljmp
push
bound
or
outsb
in
mov
shlb
and
adc
pop
push
dec
loopne
push
leave
xor
inc
lcall
pushl
adc
push
inc
cwtl
insl
in
cld
cmpsl
mov
pop
dec
incl
shl
adc
ja
lods
rorl
in
movsb
or
jbe
jbe
lret
mov
incl
loope
xor
inc
inc
inc
cltd
outsl
jb
setp
jl
ror
cmpsb
push
inc
fcmovne
push
adc
mov
inc
jbe
mov
das
in
mov
scas
addl
daa
lret
std
mov
jmp
hlt
sarb
jg
aam
repz
fists
or
mov
inc
mov
xor
into
in
sbb
idivb
cli
jecxz
and
pop
popf
pop
enter
ljmp
repz
mov
cmp
mov
cwtl
push
inc
dec
mov
dec
mov
ret
call
idivl
sbb
in
arpl
cld
mov
bound
cmpsl
sti
fcompl
lock
cmp
cmpsb
push
pop
idivb
inc
mov
mov
decb
pop
mov
inc
mov
cmp
mov
or
loope
push
roll
rcrb
pop
mov
mov
movsl
mov
xor
push
ljmp
mov
jmp
push
or
dec
xchg
decl
addr16
shr
inc
ss
fsubrl
jmp
sti
jbe
jo
add
pushf
add
jb
jecxz
decl
and
bound
sbb
sub
imulb
leave
adc
inc
cmp
decl
sub
sub
xor
out
fcoms
mov
jle
call
movsl
push
lcall
scas
inc
loop
and
dec
rolb
aas
aam
push
incl
sub
mov
add
lahf
es
bnd
call
jns
push
sub
cli
pop
and
decl
fsubr
inc
inc
outsl
mov
das
lret
pop
out
push
pop
loope
clc
sub
negl
push
mov
xor
and
scas
inc
and
xor
mov
fwait
inc
bound
inc
jecxz
sahf
mov
lock
xor
mov
ljmp
add
call
xchg
movsb
into
mov
or
mov
mov
cmp
mov
call
or
fstl
outsb
mov
enter
add
mov
aas
adcl
cli
dec
cli
cli
decl
mov
xor
xor
icebp
sbb
subl
dec
rcrl
das
adc
add
fisttpll
xchg
mov
add
sub
add
mov
incl
jns
add
sub
adc
mov
dec
push
mov
ljmp
and
push
fnstenv
clc
leavew
outsl
jnp
sbb
out
inc
pop
mov
and
adcb
les
adc
inc
inc
data16
mov
jmp
dec
adc
mov
sub
cmp
push
mov
pop
xchg
push
cmpsl
std
lods
or
rcrb
insb
arpl
sub
mulb
pop
sbb
xor
cmp
loope
cmpsl
push
sub
sub
je
mov
decl
jg
dec
lods
or
jbe
adc
jnp
add
inc
sahf
in
push
pop
sub
add
clc
ljmp
rolb
sbb
mov
jns
jmp
imul
cld
mov
decl
pop
jne
mov
test
sbb
in
mov
xchg
adc
idivb
inc
add
in
cmp
pushl
cmpsl
cmpsl
fwait
das
and
fcoms
pop
mov
mov
lret
jnp
call
js
test
out
cmp
cli
js
mov
or
push
out
out
lds
je
push
cmp
mov
pushl
mov
cld
loop
pushf
jle
ja
mov
fcmovnu
in
or
fcomip
jg
dec
jae
jnp
mov
push
and
pop
mov
ljmp
fistpl
out
push
push
mov
loopne
xor
fidivrl
movsl
and
pop
aad
mov
cltd
push
loopne
stos
cwtl
jp
dec
xchg
sbb
jnp
loop
xor
jg
mov
cs
in
scas
ret
pop
fldt
aas
xchg
mov
jecxz
cmp
mov
inc
aam
or
sbb
jmp
mov
mov
frstor
sbb
inc
xchg
test
decl
mov
sbb
push
mov
stos
out
rcrl
mov
mov
pusha
mov
adc
jne
ficoms
popf
in
dec
aam
mov
and
sub
cmpsl
insb
and
xlat
sub
int3
std
mov
out
fldl
jl
mov
call
xorb
push
insb
adc
stos
test
push
sarb
test
sarl
fcmovnbe
popa
les
divl
daa
sub
aad
cld
jg
xor
dec
add
xchg
push
add
fisttpl
inc
pop
pushl
int3
and
cmp
repz
in
jno
or
add
add
shrl
cmpsb
jae
int
cmpl
mov
ds
add
add
loop,pt
je
decl
les
xchg
inc
cltd
les
fiaddl
fs
test
jecxz
enter
mov
xchg
pop
scas
insl
dec
adc
data16
sar
enter
inc
add
or
fnstcw
jmp
in
fs
push
jge
adc
fldpi
pushf
ret
jmp
mov
cwtl
loop
inc
pop
sub
xchg
pop
daa
sbb
jns
scas
cmpsb
jne
scas
dec
mov
jle
and
dec
mov
mov
not
xor
imul
clc
out
loopne
xor
xor
das
scas
xor
icebp
ja
incl
pop
fwait
pushf
pop
or
dec
aaa
adc
sbb
lods
and
jge
dec
cmc
shr
xchg
lcall
xchg
ret
xlat
sti
push
cmpsb
sub
stos
sahf
push
mov
xor
mov
rcrl
and
mov
enter
stc
faddl
xchg
inc
cmp
push
xchg
neg
pop
adc
add
pushl
testl
cmpsb
cli
mov
stos
lea
jg
pushf
inc
lods
or
sub
roll
xchg
xchg
int3
mov
cmp
adc
fwait
xchg
cmp
pushl
bnd
pusha
dec
mov
dec
lcall
ljmp
inc
loopne
jg
test
push
js
cwtl
inc
mov
xchg
scas
clc
decl
std
or
pop
jo
aad
or
fs
push
or
lcall
xchg
push
nop
inc
xor
shl
sub
push
ret
mov
sarb
inc
out
fisubs
inc
cmpsb
hlt
fiaddl
repnz
fidivs
pop
mov
cmp
cmp
mov
xor
je
jecxz
test
sub
dec
xor
sbb
push
addr16
and
incl
and
sti
add
mov
lret
sub
lret
int
ds
decl
mov
fwait
addr16
in
inc
dec
sbb
shll
mov
sub
mov
in
mov
add
fst
into
inc
test
fisttps
push
mov
jg
int3
gs
mov
ss
fwait
xorb
sarb
add
fisttps
xor
fmuls
or
notb
push
pop
ljmp
jmp
jnp
add
imul
pop
inc
cmpsb
incl
xchg
adc
lods
fstpl
jno
mov
adc
imul
rorl
xor
decl
pop
insb
addr16
fmull
sbb
push
xchg
mov
push
or
out
xor
rorb
jb
cmpsb
cld
push
adc
jmp
sub
cmp
sub
movsb
ret
and
sbb
push
not
mov
pop
dec
lods
fnclex
cmpsl
outsl
push
addr16
cmp
ret
test
xor
imulb
mov
lahf
mov
pop
arpl
inc
pop
movsb
call
mov
lret
fldenv
ljmp
cmp
dec
lock
iret
lahf
sti
pushf
dec
pushf
nop
icebp
sar
filds
sub
pusha
mov
mov
scas
sbb
mov
sti
or
repz
push
loop
stos
xchg
jmp
ja
call
mov
add
jne
and
pushf
mov
out
mov
int3
cmpsb
and
call
incl
repz
cmp
xchg
sbb
xor
cltd
shlb
cmp
pop
add
sbb
outsb
adc
in
scas
cmpsb
adc
call
push
push
xchg
into
dec
test
out
xchg
rol
jmp
jle
mov
xor
mov
mov
cli
adc
popa
ja
das
cli
lcall
ret
out
adc
inc
mov
cmp
push
ret
adc
xorb
int
lcall
xlat
cmpsb
mov
push
pop
sub
ficomps
jbe
jp
jg
sbb
or
aam
add
pop
les
aam
dec
pop
stos
call
sbb
mov
movsl
into
inc
xchg
xchg
add
pop
and
push
pop
xchg
jge
mov
lcall
push
xchg
sub
repz
jnp
xor
int3
xchg
mov
insb
ret
ret
loop
insb
push
mov
jbe
mov
jb
push
out
sti
mov
pushl
dec
mov
stos
fisttps
mov
mov
push
sarl
pop
xchg
add
jg
jle
inc
xor
imul
xor
mov
fcompl
pop
sbbb
leave
inc
ret
ljmp
das
out
or
push
sub
aam
gs
sti
and
cmp
mov
add
cmp
dec
xchg
fsubs
lcall
cmp
jge
jbe
cmpsl
rcrb
call
les
andl
push
mov
fisttps
lcall
int
cltd
loope
cmp
or
sbb
pop
cmp
jb
pop
pop
pop
stc
fidivrs
pop
inc
push
adc
lods
sbb
pushl
jl
nop
lret
mov
push
mov
pop
pop
sub
cmc
ret
or
call
pop
stc
mov
sub
push
jns
fstl
jecxz
test
pop
xchg
rcrl
incl
adc
pop
mov
inc
add
xchg
in
addl
pop
push
push
ret
xchg
lock
ficoml
aas
mov
mov
pop
xchg
and
xor
fucomp
xor
iret
pop
data16
sbb
lcall
scas
mov
arpl
sub
mov
jg
movups
xchg
aam
push
cmpsb
icebp
in
movsl
mov
cmp
rcl
vcvttpd2dqy
jg
jecxz
test
xor
xchg
adc
cmp
popf
push
sbb
fmull
dec
cli
cmp
sbb
lock
lret
pop
dec
sahf
imul
pop
jmp
out
mov
jmp
push
imul
sub
decl
pushf
or
rcr
mov
fs
imul
jmp
xchg
call
sub
mov
mov
mov
xlat
aad
ret
sbb
scas
cli
pushl
dec
sub
mov
sub
loope
mov
mov
idiv
cmp
mov
mov
mov
push
push
and
dec
lcall
popa
pop
cs
das
lcall
inc
je
aas
dec
sbb
lods
pop
cmp
decl
ljmp
mov
out
cmc
mov
jl
push
es
cmp
xchg
pop
pushl
je
mov
jnp
out
adc
inc
cltd
mov
ret
addr16
subb
ljmp
les
enter
lea
push
ja
lahf
sub
push
sbb
mov
cltd
cmpsl
dec
int
ja
js
mov
sbb
cld
add
jo
mov
add
decl
mov
arpl
cmpsb
or
mov
mov
xchg
inc
cwtl
cs
cli
jmp
mov
jb
pop
push
movsl
adc
stos
inc
sub
out
and
stos
mov
clc
outsl
lret
inc
push
lret
scas
or
xchg
cli
mov
pushl
jmp
push
sbb
push
pusha
jmp
xor
test
mov
push
repnz
lcall
mov
leave
cmp
push
imul
jo
dec
inc
insb
addb
dec
ljmp
repnz
std
xor
dec
sub
and
xchg
and
stos
cmp
fnstsw
mov
scas
mov
aad
cld
xchg
dec
shl
add
cmp
nop
push
out
decl
pop
push
test
cmp
pcmpeqb
adc
sti
stos
fsubrl
iret
testl
decl
and
and
dec
mov
xchg
cli
push
push
jns
dec
push
ljmp
in
jo
in
adc
sbb
jecxz
adc
aam
int3
mov
mov
push
dec
test
fdivl
push
daa
enter
cmpsb
movl
sub
scas
aaa
mov
sahf
dec
hlt
in
lock
mov
repnz
and
pop
imul
cmp
mov
mov
clc
daa
outsb
push
push
inc
mov
dec
aad
jns
xor
mov
call
ret
mov
jne
add
mov
ljmp
loop
xorl
mov
xor
mov
movsl
xor
adc
inc
xor
test
testb
adc
ret
or
pushl
ljmp
stos
sub
inc
adc
shll
pop
pusha
fldcw
adc
lcall
push
add
sbb
stos
repz
pop
hlt
cs
dec
mov
cmpsl
out
pushl
push
inc
xchg
adc
or
xchg
mov
ds
push
aaa
ror
data16
and
mov
enter
in
call
mov
push
and
pop
mov
cmpsl
xor
decl
ds
test
inc
pop
push
mov
arpl
ljmp
out
xlat
mov
or
roll
outsl
xchg
clc
hlt
dec
add
add
jle
mov
pop
mov
xchg
or
add
enter
and
rol
pushl
lahf
or
add
mov
xor
mov
out
pop
or
mov
fsubl
loope
jg
push
insl
dec
mov
push
cmp
jns
lcall
fbld
mov
or
inc
or
adc
stc
repz
pop
in
push
addr16
inc
mov
punpcklwd
mov
xchg
nop
push
jg
cmp
push
aad
aad
pushl
push
push
mov
dec
mov
push
fstpl
push
popa
insb
xor
aaa
imul
fcoms
incl
xchg
das
mov
pop
popa
xchg
mov
jle
jb
mov
mov
movl
ljmp
js
into
mov
gs
outsb
xchg
dec
sub
cli
hlt
mov
mov
clc
aad
and
jmp
ljmp
pop
or
mov
or
mov
test
rolb
dec
ficompl
rorb
cmp
dec
call
inc
inc
push
cmp
xor
adc
decb
sbb
add
call
loopne
leave
inc
ds
cli
xor
jmp
sahf
incl
xor
addl
adc
daa
mov
pop
sti
call
dec
outsb
mov
add
lea
sub
loopne
sub
test
cwtl
into
mov
mov
jg
leave
or
scas
fwait
xchg
ret
inc
fbld
xor
mov
lods
mov
jnp
adc
fstps
loope
repz
lock
ja
clc
xchg
addr16
scas
ficompl
jmp
jg
jno
aad
sub
pop
iret
add
std
inc
or
mov
stc
test
call
mov
in
std
sbb
mov
or
inc
rcrl
outsb
sub
jg
cmp
rolb
push
adc
cmc
mov
mov
jl
push
jmp
sti
xor
cwtl
adc
push
add
push
pop
popa
dec
pop
sub
popa
jecxz
mul
test
dec
aad
xchg
push
push
xor
inc
jae
leave
cli
aad
and
inc
adc
cltd
ljmp
movsb
mov
mov
mov
test
mov
pmulhuw
loope
xchg
aam
sbb
das
js
pop
or
fmuls
leave
out
sub
movsb
pop
add
decl
pop
push
lds
aaa
sbb
mov
icebp
inc
incl
addl
xchg
enter
loope
insb
add
push
mov
sbbb
stos
jmp
jmp
sub
add
subb
sub
sbb
in
testl
jb
data16
mov
mov
dec
popa
inc
jmp
inc
test
lds
dec
das
cwtd
incl
dec
popf
icebp
call
fisttpll
insb
xor
pop
clc
mov
jae
hlt
out
pop
sub
inc
insb
ljmp
xor
pop
repz
inc
add
shl
popf
fistpll
cli
cltd
decl
jb
inc
test
jne
ss
cs
cli
mov
aas
and
jno
mov
mov
mov
lock
push
add
cltd
jno
jl
in
xor
into
es
cmp
add
ret
mov
cmpsb
ds
pushl
pop
add
int
mov
into
adc
cmp
scas
cmp
dec
mov
pushl
enter
mov
or
xchg
js
popa
push
cmp
incl
jl
sub
cmp
xor
dec
pushf
call
pushf
ffree
in
sbb
pop
addr16
xchg
mov
pop
adc
xor
dec
inc
jecxz
jmp
into
out
mov
aaa
mov
jb
adc
xchg
push
pop
push
call
pushl
cvttps2pi
fcmovnb
dec
lea
fs
call
sbb
je
pop
mov
fimuls
and
sub
or
xchg
cli
xor
sti
sbb
push
inc
jg
mov
and
push
mov
inc
ficomps
xorb
int3
jg
mov
iret
sbb
mov
icebp
addl
lcall
es
out
notb
and
fwait
ja,pt
dec
xchg
sub
hlt
aad
movsl
mov
setbe
pop
xchg
xchg
mov
adc
decl
sub
cmp
leave
xor
dec
mov
adc
lock
fcomip
out
xchg
mov
and
out
ja,pt
mov
or
adcl
pop
adc
xchg
out
fidivrl
dec
bound
decl
push
pushf
scas
decl
sub
mov
xor
mov
add
pushl
sahf
out
mov
mov
fs
xor
cmc
inc
in
mov
ret
add
pop
cli
call
xchg
enter
jge
jl
movsl
cs
mov
xchg
jne
inc
mov
aaa
shrl
sbb
add
daa
rol
sub
dec
jmp
sbb
incl
inc
outsl
mov
jbe
xchg
cmp
xchg
inc
push
mov
das
and
push
xchg
xchg
and
cmp
jmp
lods
xorl
call
cmpsl
mov
cmpsb
les
mov
sub
jg
fimuls
int
mov
pop
into
fcoms
mov
xor
dec
push
jno
sub
lcall
xchg
sbb
lods
movsb
mov
popf
arpl
mov
mov
sbbb
mov
mov
cmp
stc
xor
stos
and
xor
bound
cmp
mov
ficompl
ds
ret
lea
cld
aad
cmp
in
mov
pop
lock
lods
dec
and
fstpl
cmc
scas
cmpsb
sarb
and
sbb
fcoms
xlat
sub
fisubs
pop
push
add
push
mov
sbb
lcall
xor
inc
cld
arpl
sbb
sar
stos
jno
pop
popf
std
loopne
sub
jb
scas
or
mov
pop
and
scas
and
insl
lahf
scas
mov
or
inc
hlt
out
pop
int
movsl
jo
cmpsb
sub
lods
fsubs
popf
mov
js
enter
repnz
fcmovne
movups
dec
inc
scas
mov
and
inc
sbb
mov
cwtl
in
xlat
push
pop
out
inc
and
decl
jb
scas
sbbl
pop
mov
push
push
mov
les
cmp
int3
mov
dec
xor
jnp
rcrb
push
js
call
stos
mov
cmp
fsubrl
incl
repnz
hlt
mov
test
push
fldcw
ret
jg
stc
xchg
aas
rolb
lock
pushl
pushf
mov
dec
xor
mov
test
sbb
test
incl
popa
int
das
xor
push
push
insl
pushf
popf
lods
adc
add
int3
mov
pushl
dec
fsubl
or
add
push
cmp
jb
call
mov
stos
xchg
lea
xchg
mov
pop
orb
dec
out
je
out
in
jg
stc
decl
and
loopne
adc
jg
inc
adc
dec
fwait
xchg
insb
jp
jns,pt
decl
mov
pop
dec
dec
rcll
fimuls
fdivp
lods
aaa
sarb
ror
cmp
xchg
jbe
adc
sub
movsl
outsl
decl
xor
inc
adc
clc
mov
arpl
bound
sub
mov
jnp
add
jmp
aam
mov
loop
int3
out
xchg
mov
aaa
adc
in
cmc
inc
jbe
sarl
xchg
xor
cld
shl
cli
mov
dec
mov
jns
addr16
out
aaa
mov
adc
es
fdivrs
jns
mov
int3
inc
jnp
into
fdivr
jmp
outsl
push
bound
out
fs
push
inc
fs
mov
ss
push
cli
lahf
lods
data16
xor
xor
mov
inc
pushf
cs
push
mov
push
idivb
pop
sahf
das
sbb
sbb
sbb
inc
dec
mov
shl
fstl
push
jbe
xor
push
ror
xor
sti
icebp
loope
ljmp
clc
jne
cmc
jge
cli
jae
mov
jno
mov
dec
cmpsb
sub
cli
lcall
mov
or
push
sarb
lahf
xor
insb
push
dec
fidivl
fdivl
jns
or
pop
in
fsubr
xchg
cmp
stos
push
xor
rol
jmp
insl
mov
mov
or
push
call
jns
lea
inc
repz
fwait
int
stc
ja
test
inc
dec
mov
decl
aad
add
cwtl
movsb
into
xchg
mov
adc
push
jge
daa
mov
jmp
jbe
lock
and
push
fnop
frstor
pop
xor
fidivs
jp
sub
pop
fidivs
mov
sbb
fmulp
fsubs
mov
rcll
or
decl
out
out
adcl
add
test
xchg
in
push
dec
imul
popa
hlt
dec
cmp
push
or
hlt
sbb
mov
pop
shll
mov
dec
fcomip
mov
decl
lock
sub
mov
push
pop
outsl
inc
inc
cli
xor
jg
stc
sbb
fisubl
aad
fistpll
xchg
leave
imul
fucom
sub
or
cmp
mov
shrb
mov
call
ret
popf
in
pop
and
mov
xchg
or
pop
cltd
gs
shlb
lret
movl
and
xchg
xchg
cmp
cli
jne
sbb
neg
lds
push
cld
aas
jns
jmp
shll
mov
icebp
pushf
dec
adc
lds
sub
sub
mov
rcll
out
fwait
in
pushl
jmp
cmp
rcrl
jo
jo
test
out
mov
push
adc
xor
push
jp
xchg
test
or
fwait
je
pusha
cmp
mov
xchg
fcomip
jno
in
lcall
mov
or
jno
cwtl
je
jbe
aaa
popa
dec
addl
jmp
fisubs
xchg
dec
fists
pop
xchg
jle
dec
or
inc
imul
mov
inc
jecxz
in
mov
enter
test
push
pushl
push
stos
xchg
daa
ss
xchg
xchg
imul
push
stos
lds
mov
ljmp
cs
nop
jg
xchg
pop
and
cmpsb
mov
dec
push
mov
jmp
ss
cltd
and
out
dec
call
clc
mov
mov
leave
out
cmp
sbb
jg
pop
xchg
mov
xchg
scas
lcall
or
out
les
ja
inc
mov
pop
icebp
inc
ret
jne
mul
test
mov
fs
or
cmp
xor
fistl
lret
sub
cltd
out
xchg
stos
push
outsb
xor
ljmp
sar
lahf
inc
in
inc
mov
inc
mov
jbe
xor
hlt
pushl
dec
mov
test
mov
aam
and
cld
shll
jmp
jl
sub
inc
jo
lahf
inc
test
adc
outsl
ljmp
xor
js
push
xchg
daa
add
xchg
jns
or
mov
sar
mov
xchg
jmp
pop
mov
mov
aam
aad
aad
mov
aas
sbb
out
sbb
and
push
std
lcall
sarb
lret
cmp
pop
jne,pt
faddl
xor
cli
decl
cmpsl
ret
cmpsb
outsl
lock
stc
dec
push
int
pushf
xchg
jmp
or
mov
inc
out
sbb
out
or
out
xchg
push
dec
iret
inc
pushf
out
faddl
xor
call
mov
lcall
sarb
jbe
mov
shll
mov
repnz
incl
sbb
jecxz
xchg
in
mov
sub
lock
clc
mov
add
pushl
push
fs
or
lret
sarl
fwait
mov
mov
inc
fldcw
lahf
push
hlt
dec
fcomi
cmp
pop
sti
xchg
sbb
jnp
call
xchg
and
je
clc
stos
fwait
add
push
fistpll
sub
lahf
stc
sahf
leave
les
adc
jle
ljmp
dec
push
in
aad
cmp
mov
ss
and
es
ret
push
adc
ljmp
incl
jl
xor
addr16
scas
cmp
jb
mov
dec
dec
push
add
cli
ljmp
mov
or
inc
adc
stos
mov
push
pop
into
dec
ljmp
mov
dec
mov
sbb
cwtl
sti
pop
ret
dec
imul
jge
leave
sar
decl
cmp
adc
add
decl
cmpsb
mov
subl
pop
xor
pushl
daa
push
int
das
les
cmp
cmp
js
mov
imul
cli
call
cmc
cld
loope
push
lods
popa
out
ljmp
and
or
push
jg
cmp
fisubrs
add
call
inc
mov
decl
inc
add
aas
rorb
dec
movsb
test
into
xchg
add
ja
aad
mov
cmc
jg
fildl
adc
cmpsl
mov
and
dec
mov
jmp
mov
inc
daa
ljmp
jne
jo
mov
cmpsl
aas
xor
and
lcall
idiv
popf
adc
inc
xchg
imul
push
ss
sbbl
ja
jne
pop
jno
outsl
jg
lahf
fiaddl
xor
pusha
lods
imull
cmc
imul
xor
not
push
shl
aas
enter
and
lcall
in
adc
inc
sbb
mov
out
es
jmp
jg
jp,pt
pop
sub
testl
push
dec
sub
in
mov
pushl
adc
inc
mov
push
mov
das
mov
jp
call
inc
and
pop
sbb
mov
adc
xchg
in
mov
jne
icebp
ficomps
xchg
iret
clc
xor
xor
sub
incl
xlat
rorb
hlt
push
popa
das
xor
icebp
jg
outsl
arpl
add
add
cs
rep
shll
fbstp
data16
xchg
in
out
mov
scas
lret
cs
cltd
xlat
dec
inc
decl
pop
mov
jge
push
mov
pop
fisttpl
or
jg
fs
das
xchg
test
pushl
xor
ljmp
push
out
ficoms
push
sbb
pushl
std
mov
add
sub
sub
jmp
push
jae
fdivrs
or
fs
cs
imul
call
lret
sub
sahf
call
sub
and
inc
sub
push
adc
cld
mov
jnp
xchg
pop
xor
pop
out
hlt
jmp
icebp
popa
xchg
mov
insl
lock
call
add
push
fldl
sbb
mov
int
pop
mov
pop
popa
test
or
les
jb
fidivrs
jmp
imul
cmp
popf
outsl
repz
push
jge
decl
out
jecxz
adc
je
jne
push
sbb
jnp
mov
mov
jmp
ss
mov
loope
ss
mov
scas
fstpt
pop
pop
call
xor
cmp
xchg
jae
icebp
mov
pushf
inc
out
fstpl
sbb
mov
int3
jae
leave
push
cmp
call
std
call
push
imul
imul
mov
ds
mov
mov
dec
fmulp
dec
jmp
xchg
xor
loop
jns
push
push
cli
orb
cmp
jae
pop
mov
cmp
test
in
push
mov
mov
jmp
mov
xor
es
add
stos
push
sarb
clc
push
pop
int
mov
pop
cmpsl
mov
and
push
adc
or
pop
hlt
fisubrs
cmpsl
ror
loopne
xchg
insb
leave
sbb
decl
cwtl
bound
mov
cmpsl
adc
xlat
cmc
sub
rcrl
xlat
sub
call
adc
sahf
cmp
leave
adc
mov
gs
mov
jle
mov
jmp
ja
jg
fstpt
and
add
mov
pop
stos
testl
pushl
pop
jbe
jne
push
fcomps
daa
rorb
rolb
push
hlt
shrl
cmp
data16
imul
dec
cmp
lcall
int3
lods
and
cmp
sub
mov
movsl
mov
movsl
cwtl
ret
das
cmp
decl
push
jnp
mov
push
xor
fldenv
bound
mov
adc
ljmp
mov
int
clc
dec
cltd
mov
bound
ss
loop
enter
mov
inc
xchg
call
inc
incl
popf
test
lret
mov
jae
pop
loope
lds
dec
ljmp
sar
adc
pusha
je
popa
xchg
xor
loopne,pn
loope
push
scas
gs
decl
je
xchg
jno
out
pop
mov
add
inc
and
cmp
xor
adc
mov
cltd
test
or
push
mov
bound
int
nop
notb
or
or
mov
or
ret
decl
mov
cmpsb
lds
xlat
jl
sarb
push
or
jmp
insl
cs
and
call
xchg
jne
aaa
out
mov
dec
arpl
fwait
sbb
call
int
lret
cmc
mov
lret
mov
mov
add
imul
push
mov
mov
lock
mov
imul
mov
fdiv
sbb
adc
leave
loopne
test
negl
mov
push
add
pop
dec
adc
mov
or
adc
in
push
testb
xchg
mov
add
pop
imul
push
mov
and
lea
push
ljmp
clc
mov
aas
rorl
clc
addr16
cmp
je
je
push
cs
xor
in
iret
repnz
push
ljmp
pop
fisttpll
lods
adc
push
mov
jmp
and
sbb
popf
inc
or
das
sub
or
cmpsb
lds
out
cmp
pop
loopne
cmpb
stos
xor
sti
lcall
shl
into
push
pushf
sub
aas
nop
test
dec
sbb
sub
js
ljmp
mov
jo
dec
mov
cwtl
jl
jge
inc
add
shr
or
call
pop
popa
lret
rcll
inc
jmp
jmp
out
movsb
movsw
cmp
loope
pop
scas
push
aam
sbb
in
jmp
cmp
sub
lods
push
clc
dec
jg
sub
aaa
popa
xchg
jge
fcoml
inc
cmp
loopne
into
stos
jne
loope
std
dec
dec
and
call
sbb
lret
popa
pop
mov
or
inc
test
mov
call
mov
shrb
enter
mov
test
jl
push
fistpl
mov
inc
outsl
clc
inc
lahf
lods
orb
adc
out
or
jle
shlb
dec
clc
outsb
push
xchg
sbb
stc
pop
aas
jnp
addr16
into
imul
gs
or
incl
push
add
or
popf
add
xchg
push
mov
jae
or
jb
bound
outsl
cli
dec
imull
pop
xlat
cmpsl
movsl
jle
cs
sub
xor
jmp
push
mov
das
test
cmc
pushf
mov
mov
stos
sub
lcall
adc
nop
fwait
out
rcrb
flds
ficompl
pop
inc
daa
mov
pushl
push
mov
movsb
xchg
sti
mov
ror
cmp
fsub
mov
push
fisttps
cmp
shll
out
cli
in
mov
cmp
jge
push
popf
mov
loope
test
rcll
dec
or
in
out
inc
inc
xchg
dec
inc
loop
pushl
cld
mov
cli
test
and
mov
ljmp
notl
dec
call
loopne
or
into
adc
aas
hlt
and
and
pusha
lahf
daa
jl
in
inc
add
decl
sub
in
push
sub
mov
inc
mov
ret
sbb
jl
test
call
ja
and
pushf
cmp
mov
cwtl
push
xor
adc
out
mov
pop
mov
aaa
jb
call
sub
inc
ret
or
dec
out
call
cltd
faddl
push
jg
xor
jmp
xchg
loopne
push
lret
subb
loope
inc
and
shlb
push
movsl
jecxz
mov
pop
leave
ds
mov
dec
decl
scas
xchg
or
lcall
mov
cmpsl
nop
push
test
in
and
out
decl
iret
and
xchg
lods
lahf
push
pushf
mov
cmpsl
pop
sahf
test
lds
das
pop
add
mov
cmpsb
div
mov
jmp
aad
sbb
jb
xor
adc
jle
int
stos
cltd
mov
and
sti
add
cmp
lret
lods
divb
push
fdivrl
xchg
push
dec
jo
sub
pushl
icebp
cmpsb
sub
cmc
inc
hlt
cs
pop
cmp
mov
xchg
sti
dec
ljmp
add
shll
mov
mov
shl
mov
rcl
stos
pop
push
or
aas
cmp
mov
jmp
jno
sbb
mov
cli
popf
into
div
paddsw
lcall
nop
sahf
mov
les
call
inc
pop
dec
add
push
outsb
push
push
push
mov
mov
cmp
scas
push
imul
das
js
xlat
adc
mov
int3
dec
mov
ljmp
dec
mov
fmuls
xchg
pop
push
push
cmpsl
fwait
enter
ljmp
imul
movsb
push
pop
jne
popf
sub
sub
ja
pop
popa
xlat
inc
sbb
sub
call
incl
mov
dec
insl
or
xor
push
push
sbb
pop
xor
cmc
mov
enter
in
aad
insl
outsb
movsl
data16
sub
mov
mov
in
pusha
sub
jp
mov
adcb
pop
outsb
add
out
cmp
nop
lock
ljmp
jle
out
rcll
mov
out
xchg
inc
cwtl
mov
nop
jns
xchg
fdivs
cltd
das
sub
lahf
push
pop
dec
cmp
pop
adc
jg
rcll
test
push
jge
aaa
dec
xchg
in
test
xlat
cmp
test
stos
add
lcall
dec
int
push
sub
aaa
shlb
loopne
out
dec
jg
loope
hlt
fstpl
stos
lds
sahf
sub
pop
adc
lea
sub
pushf
mov
jno
imul
daa
jbe
pop
popa
jmp
loopne
ficomps
mov
inc
jge
and
andb
clc
pushl
xorb
out
in
cli
iret
andl
add
add
xchg
lods
incl
ja
cmpsb
jge
xchg
and
xlat
insb
fsubrl
stc
ss
mov
sub
fnsave
fdivs
jle
xor
das
sar
cmp
add
sbb
ror
adc
mov
and
mov
test
mov
add
je
sbb
ret
movsb
aaa
or
incl
dec
and
pop
inc
lret
jmp
mov
push
call
test
in
std
mov
cmp
fildll
inc
decl
pop
mov
mov
cmpsb
shlb
lods
cli
mov
push
js
lcall
add
in
mov
fsubrl
pop
xor
fsub
sbb
mov
call
xchg
mov
pop
adc
sahf
pop
shlb
pop
sub
mov
xlat
push
popf
incb
rcll
lcall
pop
dec
inc
rorl
movsb
push
ret
out
adc
adc
in
aas
ljmp
or
fyl2x
test
arpl
jnp
and
sbb
enter
push
adc
and
decl
into
lods
aas
or
mov
test
in
adc
pop
jnp
scas
mov
fs
shll
pushl
std
jno
jo
push
lea
xor
shrl
dec
daa
sub
dec
or
xor
nop
pop
or
push
xchg
xchg
cmp
cwtl
orl
mov
lods
mov
inc
js
dec
aas
inc
scas
shll
mov
mov
mov
cwtl
xor
call
addr16
mull
imul
cwtl
cmp
mov
xor
mov
sar
mov
xor
lret
push
adc
pop
fmul
add
scas
push
push
inc
decl
loopne
lahf
std
jg
add
jge
ret
jne
loop
jnp
mov
mov
jecxz
pop
sub
cltd
xor
fisttps
repnz
inc
pop
add
ja
ret
in
pop
sbb
loope
mov
lcall
jb
adc
xchg
out
es
std
dec
mov
push
in
in
aas
xchg
cmpsb
mov
call
in
pop
adc
dec
cmp
je
mov
jl
movsl
xchg
sbb
decl
pop
insl
rcl
push
incl
push
lds
decl
fwait
pop
je
cmp
icebp
popf
xchg
nop
inc
pushf
imul
inc
ljmp
sub
xor
shlb
mov
mov
xchg
push
jg
mov
shl
shll
xchg
call
adc
clc
sbb
push
lock
mov
aas
js
je
shl
or
in
fldcw
jmp
mov
inc
ss
push
jmp
mov
mov
ficoml
xor
fwait
lret
pop
lcall
sbb
dec
mov
adc
sub
adc
outsb
data16
lcall
std
je
add
sbb
mov
mov
dec
jmp
leave
jns
inc
xor
or
add
sar
jmp
pop
shll
lret
ret
mov
loope
es
cmpsb
push
pop
pop
std
shrl
sbb
incl
cmp
and
in
jmp
test
icebp
push
lcall
mov
or
in
ljmp
dec
inc
into
sub
cwtl
dec
pop
inc
sub
push
das
jle
xchg
push
decl
lock
or
jnp
scas
fbstp
push
imul
pushl
fcmovbe
outsl
or
add
cmpb
rol
imulb
out
aaa
lock
mov
rcrl
adc
xchg
sub
add
fst
fdivs
fimuls
pushl
testb
mov
dec
push
add
jge
lcall
sub
call
jb
mov
pop
sbb
in
xor
daa
lods
xor
lcall
fidivl
and
ds
jg
push
pop
lds
fcmovb
in
jno
loope
cwtl
data16
jmp
scas
insb
push
into
in
dec
or
loop
xor
lods
pop
dec
mov
inc
and
jle
into
push
add
pop
sti
daa
mov
jmp
fsts
imul
pusha
push
sub
out
or
push
add
in
lret
jmp
shll
out
in
push
mov
dec
mov
sahf
xchg
rorb
push
gs
pop
aaa
sbbb
sbb
arpl
jb
pop
xchg
push
jnp
pushf
sbb
sbb
xchg
decl
lock
xchg
imul
xchg
mov
repnz
mov
faddl
lret
cmp
leave
stos
dec
icebp
and
mov
xchg
ficoms
inc
adcb
add
out
mov
pop
stos
xchg
lds
mov
sub
mov
inc
outsb
sub
outsb
sub
xor
in
xor
ljmp
dec
xor
sahf
jmp
aam
iret
adc
fdivl
adc
cmp
fs
pushf
cmp
mov
fldt
lahf
mov
jnp
pushf
mov
cmp
sub
mov
xor
jbe
ljmp
cmp
sbb
lds
jge
fnstcw
inc
lods
push
and
insb
rcrb
mov
fisubrl
fnstsw
pushf
bound
ja
mov
and
push
mov
mov
into
das
push
cmp
lahf
mov
cmp
pop
dec
jo
test
push
jmp
or
pusha
mov
jecxz
fdivl
pushf
mov
cmp
loope
or
loope
pushl
loope
stos
add
scas
sti
movsb
aaa
pop
cmp
add
lods
adc
sub
push
adc
popa
shlb
and
mov
fwait
ljmp
dec
mov
ror
dec
inc
xor
mov
inc
sbb
das
xchg
call
pop
mov
dec
push
loope
test
adc
or
lods
dec
inc
call
cli
fs
pop
leave
mov
es
push
pop
push
jbe
ljmp
mov
js
ret
popf
sbb
xchg
out
cmc
cmp
jle
cli
push
fnstcw
jge
xlat
add
xor
add
imul
call
dec
inc
idivb
mov
in
in
out
mov
test
decl
mov
mov
cmpsl
jnp
nop
jle
mov
mov
xor
add
aaa
std
ljmp
xor
popf
addl
shlb
jmp
call
pop
inc
mov
push
jg
jo
push
dec
dec
es
int
jg
pop
jno
ljmp
ss
fcomps
and
dec
out
icebp
repz
out
pushf
cmp
mov
jg
sti
call
int
neg
ret
or
and
xchg
dec
test
mov
std
inc
cmp
movups
decb
outsb
cld
mov
clc
in
mov
js
int3
add
mov
dec
je
mov
add
mov
fs
mov
test
pop
jae
xchg
shll
ficoml
in
sub
fcos
decl
and
cmp
mov
rclb
adc
jo
add
xchg
fnsave
cwtl
push
xchg
and
lea
cli
dec
adc
lret
insl
push
mov
or
inc
mov
xor
les
xchg
mov
in
cmp
xchg
stc
sbb
xchg
lcall
cmp
int
out
sbb
or
push
pushf
ret
lods
scas
mov
in
dec
dec
scas
fidivl
xor
cmp
adcb
cmp
pop
addr16
jmp
mov
cmc
cmp
sub
push
rolb
mov
mov
into
and
lcall
imul
jmp
push
mov
fimull
mov
jns
into
inc
jmp
mov
pushl
sub
jg
cs
mov
pop
lods
orb
sbb
sti
jnp
jmp
push
imul
jmp
xor
push
stos
sbb
cmpsb
fwait
pop
push
es
pop
out
out
cmpsb
cmc
in
out
sub
fsubrs
lcall
inc
dec
ret
dec
sarb
stc
jecxz
sar
lcall
mov
mov
scas
pushf
mov
popa
aaa
push
add
push
sub
lahf
rcll
fdivr
jg
jno
sub
lock
mov
decl
inc
xor
call
pop
sbb
mov
mov
popf
loopne
xor
outsl
out
mov
incl
das
lds
and
jns,pt
out
popa
xor
push
xchg
xchg
mov
mov
out
xor
and
sti
jmp
push
fcoml
sbb
pop
ret
add
dec
and
iret
push
push
cli
scas
push
xchg
lock
xchg
jne
sub
sbb
enter
xchg
decl
fsubs
jne
pop
jl
xor
ljmp
subb
lret
dec
daa
mov
cmp
dec
ljmp
insl
std
inc
addr16
jecxz
aas
stos
lods
xor
cmp
jnp
inc
add
mov
out
cli
sbb
mov
imul
in
cs
call
xchg
inc
sub
test
dec
xchg
adc
sub
xor
jg
mov
cmp
pop
pop
popf
sbb
stc
ret
sbb
cmp
dec
xor
sarl
in
sti
ljmp
or
imull
xor
push
dec
cld
cli
in
loopne
and
inc
loope
maxps
jns
mov
mov
inc
add
stos
out
add
fisubs
dec
mov
scas
cmp
neg
xchg
push
jbe
mov
sub
pop
cld
dec
insb
sbb
jo
cmp
adc
pop
mov
push
push
pop
cmpsl
push
push
push
fisubs
mov
int
push
test
repnz
mov
mov
inc
std
incl
xor
xchg
je
std
mov
and
into
jo
mov
cwtl
cmp
inc
lret
mov
cmp
icebp
pushf
lock
sbb
jmp
mov
decl
ds
scas
push
mov
mov
pop
sbb
and
mov
and
xor
ljmp
clc
push
sbb
and
gs
xor
mov
jp
xor
mov
jmp
xchg
ficoms
sbb
or
jg
lcall
jb
por
xchg
stos
gs
mov
xchg
mov
test
mov
fldt
dec
stos
mov
or
dec
sti
js
mov
cs
or
incb
dec
out
mov
cmpsb
mov
dec
dec
ljmp
arpl
jns
inc
mov
mov
inc
add
fwait
lock
lcall
xor
jno
inc
loope
je
and
cmpsl
pushl
pushf
dec
repnz
lds
mov
call
int
push
push
js
cmpsb
mov
incl
lcall
push
sbb
sbb
sub
push
subb
enter
insb
ja
decl
hlt
adc
in
mov
and
push
out
jns
ss
push
sub
push
mov
cmp
roll
outsl
stos
push
aam
push
and
fildll
mov
mov
stos
es
ljmp
add
xor
sub
xchg
hlt
stos
ja
fidivl
repz
cltd
mov
cmp
incl
or
sub
loop
dec
aad
scas
inc
pop
aaa
in
fstl
push
lock
into
jns
cmovs
jmp
push
in
adc
xlat
pop
scas
cmp
mov
shll
push
mov
lcall
adc
inc
insl
lret
add
cmp
or
notl
mov
out
or
sti
xchg
adc
jne
mov
adc
je
loope
jp
pop
dec
or
fcmovnb
call
cli
fsubs
mov
mulb
or
dec
aad
shl
mov
call
mov
inc
mov
jb
movsb
int
in
push
ljmp
sbb
mov
push
idiv
push
pop
cvttps2pi
dec
test
mov
ss
cmp
int3
in
mov
jnp
or
call
push
push
pusha
test
das
or
lods
pop
push
dec
xor
and
enter
pop
mov
and
clc
ljmp
xor
sub
popf
outsb
xchg
or
mov
jnp
mov
loopne
and
icebp
inc
xchg
aad
push
cmp
das
cmp
rcl
incl
xchg
pop
sbb
push
arpl
mov
decl
rcrl
push
jae
pop
out
pusha
movsb
adc
sti
leave
push
mov
jle
les
call
dec
mov
fsubrs
jl
pop
pop
cli
cmp
ret
rcrl
or
incl
ret
pop
sbb
mov
mov
clc
popf
lcall
cmp
mov
pop
movsb
shll
xchg
xchg
or
ljmp
icebp
and
jns
insl
jmp
fildll
inc
xor
xchg
sub
lret
cmp
mov
push
loop
nop
jns
pop
jmp
xor
sbbl
ljmp
pop
xchg
xchg
mov
cmp
and
lgs
jmp
movsl
lods
bound
mov
daa
inc
pop
rorb
and
popa
push
mov
mov
inc
push
arpl
in
sub
movsb
jle
dec
out
andl
outsb
cmp
jg
push
test
jae
rcl
sub
out
out
sbb
js
pusha
stc
or
sub
pusha
dec
in
incl
mov
jmp
push
push
push
sti
cs
js
push
in
cli
xor
clc
movsb
jno
push
and
incl
sub
add
loop
adc
mov
hlt
push
dec
inc
adc
or
mov
mov
jmp
idivb
fistps
lret
jae
jg
jbe
mov
add
fidivs
cmp
scas
into
sub
push
bound
xchg
test
dec
inc
cwtl
sbb
clc
fucomip
int
mov
mov
mov
mov
inc
mov
call
fs
incb
shrb
jmp
fmulp
jno
inc
lea
pop
sub
mov
pushl
xchg
fistpl
pop
adc
sbb
push
and
adcl
std
push
jns
push
leave
pusha
fdivrs
cmpsl
int
pop
imul
into
inc
xlat
shrl
mov
push
popa
mov
xor
push
pop
push
adc
testl
jne
fs
sbb
adc
mov
xchg
pop
iret
lret
sbb
lcall
xchg
inc
jp
xchg
dec
shl
imul
inc
pop
fisttpll
mov
sbb
sbb
gs
pushf
dec
fdivs
sarb
xor
icebp
insb
inc
shrl
inc
faddl
rol
test
dec
fs
adc
pusha
fiadds
clc
push
shr
mov
push
in
adc
jmp
jmp
cmc
lods
lcall
jg
or
lahf
add
mov
adc
push
insl
sub
or
sahf
add
lahf
adc
dec
jnp
inc
subb
out
daa
imul
shll
push
aas
outsb
hlt
xchg
ljmp
call
addl
xor
out
xor
iret
jnp
cli
pop
dec
mov
aas
or
sub
cld
les
int3
xchg
push
mov
cld
dec
xchg
aaa
mov
shll
mov
xor
cmp
sub
out
xor
xor
sub
js
in
and
xchg
sbb
decl
in
adc
aad
mov
aad
shl
mov
xchg
mov
pop
or
pushl
in
sti
jnp
push
adc
iret
sub
adc
and
mov
incl
mov
dec
or
sbb
pop
dec
insl
repnz
and
les
fwait
loopne
xchg
jecxz
je
icebp
cmp
jno
rcl
pop
xchg
xchg
stc
leave
popa
push
xchg
leave
pushf
dec
inc
aaa
mov
cmp
fbld
aad
jmp
movsl
xchg
ret
sti
imul
iret
jl
aas
xor
popf
jp
aam
ljmp
aam
xchg
cmc
mov
push
push
cmp
pop
sar
iret
out
sub
in
cld
mov
or
es
jb
mov
or
add
cli
rolb
jl
push
mov
dec
dec
sub
xchg
push
adc
ljmp
aad
imul
or
daa
pop
out
fnstenv
ljmp
mov
std
call
mov
cmp
es
push
movsb
mov
in
test
sub
scas
lcall
sub
xsha1
cmpsb
dec
sbb
mov
sti
adc
andl
pop
cmc
lcall
neg
movsl
lea
in
jnp
and
loopne
jmp
mov
and
outsb
pop
popa
adcb
int
decl
cmpl
sub
mov
mov
and
nop
lds
lcall
cmp
clc
cmpb
mov
inc
test
add
mov
mov
adc
fwait
add
jmp
and
dec
mov
cmp
xchg
mov
fs
xchg
add
adc
cs
fbld
shlb
roll
nop
fsts
jg
fucomi
insb
imul
cmp
or
outsl
test
js
xchg
pop
test
call
mov
push
push
leave
cs
mov
cmpsb
icebp
inc
nop
ss
pop
pop
sar
ljmp
clc
jecxz
and
fdecstp
addr16
pop
fwait
or
sbb
dec
icebp
xchg
mov
test
mov
sbb
mov
test
ljmp
daa
xlat
in
gs
movsb
xchg
in
mov
rcrl
clc
clc
cmovnp
lahf
or
jmp
ja
outsb
cmovb
int
sub
cmp
inc
jo
roll
loope
lea
or
cmp
pop
mov
mov
and
dec
mov
pop
cld
icebp
popa
and
jnp
imul
inc
pop
mov
fnstcw
mov
jl
sub
arpl
inc
pushl
sub
shrb
mov
decb
mov
in
dec
sahf
mov
mov
pop
jnp
cmp
outsb
aas
jo
mov
fcompl
decl
jns
stos
cmp
xchg
outsl
xor
es
inc
inc
std
mov
mull
aad
stos
fsubl
dec
sbb
ds
cmp
jne
jmp
mov
rol
jg
in
cld
hlt
psubw
and
test
scas
fisubrs
jg
fcoml
xchg
mov
mov
and
push
popf
aas
mov
bound
and
pushl
cmpsl
inc
clc
fisttpl
mov
shll
andb
jns
xor
ljmp
lock
mov
insb
inc
fiadds
sub
add
rcll
pop
roll
jmp
and
push
mov
sbb
out
test
mov
pop
stos
mov
inc
xor
repnz
rcrb
popf
neg
inc
jle
and
in
mov
pop
das
xchg
fcomip
lcall
pop
xchg
insl
es
outsb
bound
adc
cmp
dec
imul
incl
call
jnp
popa
repz
pop
jecxz
jo
jge
mov
dec
cmc
xchg
lcall
jle
push
stos
pop
lcall
sbb
inc
lret
das
adc
mov
cmpsb
mov
out
ss
int
orb
les
jl
inc
pushf
decl
ja
lahf
das
jge
in
movsb
cmp
jne
mov
fwait
add
mov
and
dec
xchg
sbbl
pop
hlt
call
aam
test
lods
test
jl
sbb
jl
and
int3
lds
jmp
icebp
push
inc
push
sbb
data16
push
add
inc
enter
addb
mov
call
adcb
dec
sub
push
stos
or
sub
push
out
pop
push
mov
add
inc
dec
pop
aaa
out
imul
jmp
sti
xchg
subl
int
in
adc
icebp
loopne
bound
fdivl
outsl
call
cld
aam
lds
aam
in
push
jae
dec
mov
fnstcw
ds
int
data16
out
pusha
mov
push
xor
scas
mov
enter
mov
cmp
pop
sahf
enter
mov
stos
incl
add
cmpsb
fistpll
cltd
cmpsb
ret
push
ret
add
push
xchg
lret
push
aam
mov
lds
jle
jmp
add
dec
adc
roll
jg
jle
fisubs
and
cmpsl
and
mov
shlb
in
cld
add
sar
inc
lods
pop
stos
mov
add
lcall
pop
jae
or
jmp
notl
out
movsb
adc
sub
rorb
pop
ds
jg
inc
cs
adc
addr16
mov
aam
enter
mov
sbb
cmp
out
clc
fisubrs
inc
je
mov
les
in
bnd
rolb
mov
jmp
test
sarb
in
test
xchg
mov
adc
xchg
add
dec
sub
incl
lcall
lods
and
test
cmp
insb
push
dec
mov
cltd
mov
test
mov
xor
in
xchg
lock
call
movsb
test
mov
adc
or
inc
and
pop
jg
jp
add
subb
inc
test
ret
ljmp
rorb
inc
xchg
adc
push
sbb
shl
sbb
add
pop
dec
sti
insl
xor
sbb
mov
loopne
jae
daa
pop
gs
sarl
popa
push
repnz
adc
incl
mov
mov
adcb
ret
xor
shrl
incl
aas
sbb
and
mov
adc
jl
fwait
test
sahf
xor
decl
cltd
enter
and
or
addb
aaa
cli
xchg
imul
cmc
stos
call
cli
outsb
andb
cmp
jo
mov
out
sub
fcompl
outsb
dec
xchg
adc
cmpsl
cmp
popa
ds
lcall
jge
int3
movsb
stos
fdivrl
xor
push
repnz
popf
mov
xor
cmp
mov
mov
cmpb
jbe
stos
cmp
cltd
jns
shll
pop
dec
mov
fdivr
decl
dec
xor
popf
sbb
pop
pop
push
sub
fs
andl
dec
gs
outsl
lea
fisubrs
rclb
shlb
decl
add
jns
popa
and
push
mov
loope
fisttpll
ljmp
mov
jg
repnz
sub
mov
pop
fbstp
rclb
add
dec
decl
mov
mov
fcomip
lcall
xchg
mov
insb
sbb
pop
in
jo
outsb
shrb
lock
rcl
mov
xor
ljmp
bound
push
lcall
sbb
ljmp
xchg
xchg
push
push
je
inc
add
mov
inc
iret
adc
cltd
clc
inc
sbb
std
cld
popf
pushl
jle
lods
jl
or
into
out
sbb
cmp
scas
pop
imul
sarb
xor
mov
out
cmp
mov
cmp
cmc
sbb
lock
leave
incl
ffree
sbb
xor
call
aad
out
mov
xor
incl
outsl
mov
pop
mov
loopne
sub
mov
ficomps
idivl
into
decl
push
andl
addr16
cmp
cltd
mov
iret
daa
fs
cld
call
out
jmp
out
xchg
imul
call
pop
adc
out
dec
aam
mov
jg
and
clc
xor
icebp
int3
dec
movsb
mov
push
push
jmp
int3
mov
xor
ret
add
sbb
lahf
xchg
ljmp
aad
int
idivl
jp
xlat
pop
pop
stos
and
cmp
push
je
or
hlt
ljmp
jne
and
adc
adc
sbb
sbb
and
xor
lcall
jo
xor
pushf
sub
and
sbb
pop
popa
arpl
fadd
int3
stos
js
hlt
mov
lods
or
xchg
addr16
mov
cmp
jg
xor
dec
call
call
sbb
ljmp
sub
test
xchg
push
mov
push
inc
pop
mov
ljmp
mov
mov
pop
and
popf
pop
pushl
dec
xor
xchg
out
mov
mov
push
inc
sbb
frstor
pop
dec
aas
push
test
mov
decl
loopne
sti
dec
lret
mov
lcall
stos
mov
pop
adcl
and
repnz
aas
cmc
stos
fmuls
jo,pn
mov
push
jp
icebp
sbb
call
sti
pushl
sub
sbbl
sub
decl
mov
dec
mov
jg
or
icebp
sbb
sbb
add
decl
dec
dec
pop
push
outsl
testl
es
push
inc
ljmp
ljmp
pop
cmc
lret
adc
inc
mov
sbb
dec
stc
add
jg
cmp
dec
xchg
mov
mov
xchg
dec
test
testb
mov
add
lea
fnstsw
jecxz
icebp
lea
jae
xchg
jno
clc
pop
test
jg
rorb
outsl
cli
call
mov
cwtl
outsb
fimull
dec
push
aaa
out
sbb
stos
xchg
incl
es
adc
jmp
ds
add
xor
sub
fistpll
mov
ja
lcall
and
pop
push
insl
fucomip
lods
cmp
scas
jb
lods
xor
lcall
and
jbe
xchg
icebp
push
jb
push
inc
jo
add
in
jo
cmp
call
mov
xchg
pop
xchg
es
sbb
repz
sti
pop
sub
jmp
add
or
cmpsb
xlat
stc
cli
adc
in
ljmp
dec
fcoml
or
jl
mov
add
mov
push
xor
or
xchg
sbb
adc
mov
add
or
or
push
negb
fisubl
outsb
jo
std
mov
jmp
or
add
adc
jbe
lcall
push
clc
popa
cli
ret
pop
std
mov
adc
push
int
adc
push
mov
pop
mov
add
adcb
jno
mov
mov
incl
lock
xchg
std
and
mov
pop
scas
mov
popa
inc
inc
push
xchg
pop
and
sub
mov
in
dec
addl
pop
jg
icebp
ret
jg
mov
mov
loopne
popf
int
or
std
cmpsl
dec
int3
ret
jl
and
incl
clc
in
mov
mov
stos
jae
vpunpckhdq
fs
push
inc
sbb
cli
shlb
jmp
jp
jns
push
xchg
or
outsl
mov
call
jo
add
xchg
sti
dec
mov
insb
jge
incl
xchg
sbb
inc
rcll
cmpsb
loop
inc
leave
mov
push
lods
or
popa
xlat
sub
or
loopne
out
aam
add
cmp
sbb
or
jg
stos
push
lcall
clc
or
ret
call
dec
cwtl
out
lods
dec
xchg
sti
ljmp
sub
jb
cmp
cli
dec
sub
in
add
push
jl
les
xchg
stos
decl
arpl
and
insb
aaa
push
fmulp
push
lods
cmp
arpl
sbb
icebp
xchg
pop
xchg
add
outsl
fsubrs
sbb
in
gs
movsb
fisttps
xchg
cmp
lods
cmc
jo
jg
push
pop
clc
jge
mov
insl
and
cld
pop
insb
incl
push
lcall
rol
sbb
push
pop
mov
pop
setp
sbb
xchg
jno
sbb
je
int3
adc
or
push
lcall
pop
or
and
outsb
push
loope
std
loop
mov
into
cmpsb
jns
nop
inc
loop
std
sub
incl
mov
cmc
aaa
scas
addr16
fadds
ljmp
pop
incl
clc
jge
adc
ja
jbe
sub
mov
sahf
push
mov
mov
fisttps
push
jne
test
xlat
ss
sbb
mov
or
mov
arpl
jmp
addr16
rcrb
and
pop
add
lcall
decl
mov
es
stc
or
mulb
adc
ficoms
ja
mov
jp
das
sub
sbb
pop
test
add
incl
loop
sub
cmp
push
mov
dec
cmpsl
mov
mov
addl
decl
cmpb
rcrb
jmp
mov
pop
inc
rorl
cli
lcall
fstps
xlat
scas
push
and
push
movsl
fistps
cmc
mov
ljmp
nop
xchg
sbb
roll
mov
mov
fwait
cmpsb
inc
outsb
sub
ljmp
call
push
outsl
mov
idivb
mov
xor
gs
sbb
shl
test
incl
push
out
into
sbb
das
dec
imul
fdivr
jg
jmp
leave
ds
pop
fsubl
cld
mov
lret
leave
jnp
inc
xchg
xchg
imul
clc
rcrl
mov
stos
lret
or
scas
clc
push
aam
std
shlb
pop
aas
sub
rol
daa
lcall
aaa
call
pop
jns
movsl
add
push
insb
fwait
mov
pop
lret
das
add
sub
dec
or
push
out
lahf
jp
xchg
std
xchg
mov
hlt
divb
pop
inc
dec
daa
adc
mov
sub
xchg
cmc
and
es
jmp
test
mov
jne
sahf
push
sbb
push
sbb
lods
xor
push
in
ss
dec
push
add
jmp
icebp
outsl
outsb
outsb
cmp
shrd
cmpsb
cmpsb
jmp
jne
pop
pop
add
or
lcall
jbe
pop
std
call
gs
lds
repnz
or
fildll
fists
jmp
aam
xchg
outsb
adcl
inc
xlat
repz
sub
pushl
push
xor
mov
mov
jno
in
jge
vmovaps
bound
into
scas
xchg
call
lcall
jp
jl
mov
out
jg
test
pop
arpl
jbe
stc
adcb
fxch
pop
mov
jmp
mov
push
cmp
mov
push
push
aas
imul
mov
push
dec
out
pushl
or
push
pushf
mov
mov
test
dec
aam
lock
jp
imul
xchg
mov
fcompl
or
das
js
xchg
add
or
jnp
repnz
imulb
call
xchg
push
cli
pop
jnp
pop
rorb
xor
pushf
xchg
pop
mov
jg
je
push
stos
inc
push
xchg
ror
xchg
mov
inc
stos
jl
test
in
xor
cld
shl
mov
ret
test
loopne
cs
xor
or
adc
incl
dec
idivl
test
dec
cmpsl
outsb
out
pop
adc
ficoms
push
xchg
cli
jo
lock
push
jg
test
js
loopne
add
stc
jo
and
pushl
call
aaa
mov
sti
mov
add
decl
pushf
push
sub
add
mov
jbe
sub
jns
popa
out
insl
inc
fistpll
mov
mov
bound
inc
and
xor
cmp
lcall
in
pushf
or
jge
xchg
jg
test
insb
jecxz
out
imul
ja
inc
mov
push
sub
repnz
xchg
loop
lea
mov
loope
lcall
cmp
inc
pop
sbbb
xor
inc
in
dec
notb
pushl
gs
push
pop
jbe
loope
repz
jo
aad
jp
outsb
mov
cmc
jg
inc
mov
nop
cmp
pop
dec
dec
push
pop
sub
je
in
or
pushl
mov
ss
inc
mov
cltd
ret
mov
repnz
pop
xor
inc
inc
out
mov
cmp
sbb
lods
push
jl
notl
or
call
das
popf
xchg
or
insl
push
jecxz
movsb
pop
adcb
pushf
xor
inc
in
call
xlat
mov
push
loope
mov
sahf
enter
sub
jbe
push
cltd
test
iret
mov
cmp
lcall
xchg
push
cld
cmp
pop
mov
and
mov
fsubs
or
jge
call
mov
pop
mov
pop
hlt
add
pushf
ret
cs
adc
jbe
incl
mov
inc
pusha
cmc
arpl
lcall
jo
pop
cmp
adc
cmpsl
mov
push
inc
clc
jmp
es
mov
sub
pop
mov
pushl
ret
mov
push
loop
inc
lea
testb
sub
dec
ret
daa
inc
push
sarl
pop
sar
in
sbbl
hlt
jnp
das
iret
pop
pop
fs
out
test
mov
or
pop
icebp
incl
add
inc
mov
inc
pushf
in
mov
repz
mov
clc
sti
fisttpl
xor
filds
sbb
mov
fistl
pop
jne,pt
mov
push
xchg
scas
add
jmp
nop
dec
add
lcall
and
jl
sbb
xchg
mov
dec
daa
and
repz
sbbb
loopne
gs
out
jne
mov
ljmp
clc
mov
cmc
ss
sub
movl
scas
sub
pop
push
pop
dec
mov
fmull
call
jb
sti
add
or
lods
test
jg
mov
xor
lret
mov
mov
mov
stos
mov
or
push
mov
push
push
or
mov
cmpsl
jmp
dec
aas
fadds
mov
out
xlat
rclb
inc
fisttps
fstl
push
and
jmp
or
adc
lret
sbb
out
cmp
cwtl
or
add
xor
cmp
jle
sbb
int
jl
add
daa
and
lcall
in
pop
scas
shrl
out
and
cmp
aaa
adc
test
mov
insl
xchg
fbld
subb
jmp
jno
pop
or
shlb
push
cmp
jmp
mul
dec
mov
sbb
cmp
pop
mov
add
das
cs
push
test
out
leave
jnp
sahf
shll
push
and
cmpb
xchg
mov
call
pop
adcb
imul
add
aam
cltd
xchg
xchg
adc
jns
adc
cmp
ss
inc
je
xor
ss
jbe
ljmp
insb
mov
or
test
aaa
cltd
jns
pop
or
test
fcmovu
int3
fwait
mov
ljmp
call
shl
lds
addr16
rcll
mov
mov
fcompl
icebp
mov
fucomi
add
and
stc
cwtl
cmpsl
fstl
das
mov
outsb
lds
cmc
cltd
adc
sub
jmp
mov
stos
call
dec
ljmp
sub
push
mov
jg
cltd
out
popa
and
cs
mov
mov
test
mov
int3
gs
imul
pushl
lret
sub
cs
into
add
cmpl
call
ljmp
mov
mov
pop
inc
testb
into
lods
das
xchg
or
out
loopne
scas
jmp
dec
mov
mov
dec
mov
movsb
mov
pop
ds
lods
loope
in
nop
and
int3
in
call
mov
jl
mov
clc
cltd
lods
test
add
xor
sub
jbe
js
out
decl
out
out
jae
subl
and
jg
jg
xchg
mov
sbb
shll
pop
xchg
mov
inc
mov
mov
jecxz
lock
add
lret
xor
std
call
std
repnz
aas
pshufw
fldl
sub
xchg
and
test
dec
insl
dec
or
jmp
xchg
jae
mov
xchg
xchg
aad
test
js
ror
pop
les
scas
clc
fistpll
out
mov
aaa
stos
aas
aaa
xor
push
iret
sbb
or
loopne
jne
loope
inc
xchg
ds
cwtl
scas
movsb
insb
movsb
pop
xor
in
mov
push
adc
outsl
clc
shl
std
pop
pop
mov
sbb
movsl
test
fiaddl
loopne
and
inc
call
inc
and
fdivp
cmpl
jae
lea
mov
cli
loope
mov
pop
or
xchg
and
dec
cmp
adc
adc
lcall
sbbb
sti
stc
shl
mov
jecxz
adc
add
mov
test
stos
daa
pop
sub
cld
rcll
mov
dec
cmpsl
xor
stc
addr16
pop
idivb
mov
xchg
jmp
psrlq
xchg
push
out
mov
inc
sbb
imul
jp
sub
mov
movsl
dec
lret
push
pop
mov
push
mov
outsl
jmp
mov
testl
gs
jno
adc
dec
outsl
lods
add
jmp
sahf
jno
xchg
das
or
pop
imul
pushf
out
cltd
aam
jns
leave
fs
cmp
mov
cli
push
mov
or
shrw
and
jmp
outsb
jns
xchg
jbe
data16
mov
aam
jmp
scas
int
call
mov
ss
push
cwtl
mov
inc
std
aam
sbb
lock
mov
pop
mov
push
or
adc
or
data16
lret
mov
ljmp
in
jge
and
in
repz
daa
rcrb
push
addps
mov
call
inc
inc
daa
outsl
mov
fisttpll
repz
lock
push
mov
xchg
ljmp
incb
jbe
mov
add
pop
pmaxsw
repnz
dec
push
pop
dec
jmp
push
mov
cmp
cmp
inc
test
mov
cli
decl
pop
or
jmp
mov
inc
cmp
ljmp
arpl
lock
sbb
jmp
fsubs
and
out
cmp
mov
fmuls
in
push
sbb
cld
mov
cwtl
push
incl
imul
mov
jnp
shr
inc
js
and
sbb
pop
inc
clc
incl
push
jg
inc
shl
and
insb
inc
mov
mov
push
rolb
decl
mov
jne
filds
push
fidivl
pop
sbb
fbstp
push
push
pop
jle
mov
or
es
cmp
test
in
and
dec
fmuls
ljmp
dec
pop
icebp
mov
or
xor
adc
lds
or
in
aad
stos
subb
imul
jge
dec
sub
mov
cmpsl
xchg
repnz
stos
xor
adc
mov
cmp
leave
iret
out
ja
clc
pushl
or
jne
fbld
jle
loop
repz
mov
call
shlb
cld
fcmovb
push
std
stos
jae
inc
or
or
shl
push
insb
out
adc
mov
mov
push
push
mov
dec
arpl
test
pop
push
fs
repz
hlt
cmpl
cmp
ljmp
jge
jg
mov
xorb
mov
scas
push
jmp
push
mov
mov
jmp
gs
lret
out
pop
pop
sti
dec
xor
xchg
pushl
inc
addb
mov
add
dec
bound
rcl
cld
jno
out
cmp
dec
push
into
cmp
in
cmpsl
jnp
jle
jg
mov
sub
adc
addl
cmp
iret
mov
jp
subb
cmc
lret
dec
mov
hlt
pushl
xor
mov
sbb
adc
mov
fimull
sub
inc
push
push
mov
call
mov
or
rcll
add
loop
loopne
mov
ficompl
add
and
in
mov
iret
lods
sbb
mov
dec
call
xchg
in
cmc
dec
test
mov
loopne
ljmp
adc
dec
pop
stc
inc
out
push
stos
nop
xchg
cs
adc
pop
mov
xor
push
add
jb
sti
or
into
rcr
pusha
bound
sarl
sub
jns
in
ss
jmp
inc
addr16
add
in
lds
jle
lahf
jae
les
cmp
arpl
aad
adc
add
mov
push
dec
je
stos
out
and
ljmp
rolb
int
push
sub
mov
out
push
in
xchg
loop
js
or
mov
jg
out
rclb
int3
gs
pusha
cld
mov
pop
dec
dec
push
shlb
incl
decl
dec
mov
stos
es
push
sbb
mov
lods
push
cmp
loop
pop
pop
ret
mov
inc
enter
aad
lds
sub
insb
clc
decl
jecxz
pop
pcmpgtd
adc
add
sti
test
cmp
lcall
ljmp
jo
fs
int
out
cld
and
test
cmp
and
ljmp
jns
push
cltd
iret
bound
fstps
mov
shl
push
sti
pop
and
ljmp
pop
or
sarl
out
mov
and
scas
add
or
xchg
sub
or
ja
sarb
jb
repnz
pushf
in
cmp
aad
mov
jo
dec
faddl
outsb
cmp
call
dec
lcall
mov
lahf
and
cli
adc
ljmp
sar
pop
stos
dec
mov
aaa
sub
push
lds
sub
js
pop
loopne
xchg
aad
jg
leave
xor
push
cmp
sub
inc
mov
call
push
leave
cmc
dec
or
clc
decl
lods
or
mov
push
cld
or
loope
cmpsl
out
pop
xor
dec
les
add
add
push
push
insl
fdivs
mov
or
das
jne
popa
fildll
xor
jo
fisubrl
scas
loope
pushl
test
sti
shr
int
mul
xor
pop
jle
les
stc
mov
out
aam
std
lcall
repnz
dec
js
rcl
ja
fisubrl
jecxz
xchg
pop
sarl
jmp
pop
leave
mov
jmp
dec
xor
cld
xchg
fists
jmp
lea
lcall
fisttps
jge
das
arpl
inc
push
repnz
inc
icebp
sub
push
sub
adc
pushf
cltd
fstpt
popa
mov
cld
insb
fcomps
mov
inc
sti
jnp
jecxz
outsb
int
jp
jmp
imul
jg
stos
mov
scas
aaa
jle
adc
mulb
sub
jg
jmp
fs
fs
cmp
inc
mov
icebp
inc
outsl
std
mov
cmp
and
pushf
xchg
add
cmp
add
mov
cmp
cmp
cmp
sbb
lcall
jmp
dec
shlb
jmp
mov
add
xorl
pushl
ret
in
mov
push
jae
sarl
sub
cmp
xchg
stc
mov
pop
cmp
gs
push
mov
adc
sarl
mov
mov
lcall
xor
cmp
pop
inc
jl
adc
rolb
enter
cmp
lcall
inc
mov
aaa
and
fstpt
daa
sbb
fsubr
and
movsl
aam
jl
aaa
jg
call
in
ja
push
leave
cs
test
sub
notl
xor
cmp
inc
dec
roll
ret
les
jne
sbb
jno
push
int
mov
add
pop
fildll
mov
sti
push
push
lods
jns
dec
xchg
sar
arpl
add
into
ljmp
jae
cmp
mov
dec
lret
xchg
loope
in
bound
xchg
sub
xchg
adc
ljmp
movsb
nop
jg
xlat
int3
aaa
in
repz
xchg
jle
popa
loope
je
jo
test
mov
fcomip
inc
rcl
and
xor
adc
shll
cld
xchg
mov
mov
lcall
movsl
xchg
dec
pop
add
cmp
jecxz
jbe
std
out
push
jmp
inc
xor
decl
jno
js
pop
mov
jle
push
cld
mov
xchg
inc
cmc
scas
movsb
sbb
divb
sbb
outsb
jae
lcall
cmp
gs
mov
js
fwait
push
adc
stos
pop
and
mov
push
pop
divl
sti
fildll
js
pop
and
jbe
xor
cmp
stos
movsl
adc
incl
jp
mov
sti
push
add
dec
xor
aad
or
jg
dec
ret
in
jns
add
mov
leave
test
decl
jo
sbb
lods
inc
fcoms
test
fldl
and
lock
incl
or
inc
cmp
or
mov
mov
pop
xchg
call
jg
sahf
cli
ljmp
repnz
jmp
inc
lret
mul
scas
dec
pop
out
outsl
xchg
popf
cmc
jp
imull
mov
daa
leave
pop
jno
and
inc
loop
push
inc
or
std
jg
pop
outsl
push
call
je
int3
lods
dec
lret
les
push
ljmp
pusha
push
sbb
in
out
jnp
in
pop
add
imulb
call
js
mov
push
mov
cld
sbb
sbb
xor
xlat
adc
incl
cmp
or
xchg
xor
frstor
nop
movsb
insb
mov
mov
dec
inc
jb
lods
jb
mov
sub
into
imul
popa
and
dec
mov
bnd
ja
jbe
pusha
xchg
std
push
fildll
push
test
and
lcall
cmpl
push
dec
dec
hlt
out
and
int3
test
fcompl
xor
decl
xchg
ret
or
dec
cli
push
gs
jne
xchg
adc
ret
sbb
lret
pop
xlat
repnz
ljmp
inc
cltd
test
xor
std
cmp
jno
lahf
add
add
mov
ljmp
lcall
push
out
inc
les
sbb
es
js
push
and
and
pop
add
fcomip
ljmp
inc
cld
jg
and
push
cmp
adc
popf
jne
inc
mov
xchg
jmp
xor
and
jmp
lock
je
js
mov
loope
cli
ljmp
loop
jp
push
ja
std
jg
push
xchg
popf
aad
aad
fisttps
pop
das
sbb
decl
dec
into
les
pusha
movsb
sub
mov
sub
test
cmpsl
or
cli
call
jge
adcl
lock
cmpsb
arpl
pop
aas
setg
aaa
dec
out
jo
ret
je
jmp
xor
xchg
or
jmp
sbb
mov
outsl
jmp
outsl
aam
mov
adc
or
push
inc
decl
xchg
andb
aas
xchg
out
ss
std
sti
dec
sub
adc
in
arpl
out
push
insl
imul
sub
mov
pop
mov
mov
jno
pushf
sub
out
clc
sub
lret
jns
mov
fdivr
outsl
push
popf
ret
inc
bound
pop
jmp
movsl
bnd
xchg
adc
jg
mov
inc
arpl
arpl
pop
jge
pusha
push
mov
sub
imul
xor
and
mov
cmp
jle
or
jl
scas
fiadds
es
xchg
mov
aas
test
pop
xor
out
dec
sbb
cmc
dec
cmc
or
lods
sbb
cwtl
cmp
ljmp
or
into
mov
lahf
pop
data16
adc
aam
rorl
out
sub
lods
dec
cld
test
call
mov
subb
sbb
test
icebp
jne
mov
jg
mov
push
icebp
mov
rcl
dec
cmc
pop
push
xor
pop
xchg
adc
cmpsb
mov
add
adc
adc
jnp
cwtl
jp
out
sub
dec
bound
add
scas
cli
ljmp
or
shlb
xor
inc
clc
jg
mov
dec
fdivr
adc
lea
jmp
sbb
ds
add
sub
cwtl
or
incl
imul
mov
jge
lret
data16
call
bound
push
jecxz
pop
push
pop
jns
ret
inc
mov
add
inc
add
call
lock
cmp
pop
lods
push
fs
in
ret
inc
push
push
adc
pushl
nop
pop
push
mov
xor
xor
cli
out
jae
mov
jb
call
jmp
fadds
cmc
mov
dec
lret
jle
or
jg
ljmp
subb
popf
cmp
ret
in
sbb
mov
mov
mov
ret
fiaddl
mov
pop
mov
pushl
and
in
imul
and
push
das
std
incl
mov
xchg
or
sub
push
adc
inc
mov
lcall
scas
lods
fimuls
and
sbb
lret
leave
or
cmp
ja
iret
mov
push
pusha
xchg
clc
incl
gs
pop
cwtl
xchg
inc
mov
inc
jb
cmp
in
loop
lods
jmp
add
sbb
lret
push
loop
jg
add
jo
or
dec
dec
nop
inc
xchg
jle
mov
int3
or
mov
leave
sub
in
fldenv
nop
push
mov
mov
or
xorl
sbbb
ss
inc
add
dec
push
cs
cli
lods
pop
jno
ljmp
xor
in
fmull
call
mov
inc
jmp
inc
adc
jo
cmp
leave
mulb
loope
iret
inc
inc
mov
xor
decl
mov
and
mov
lods
or
dec
jno
push
cld
call
jbe,pn
hlt
sub
add
sub
les
std
pushl
push
ljmp
in
lock
cmp
cmp
ss
mov
inc
mov
and
adc
fstpl
decl
push
adc
daa
lcall
cld
xor
jbe
loope
sahf
xchg
stc
jmp
call
xor
pushf
jp
decl
pop
mov
test
insl
dec
outsl
jecxz
xchg
icebp
repnz
filds
xchg
repz
pushl
mov
arpl
mov
scas
dec
popl
mov
mov
mov
inc
out
daa
aaa
dec
lcall
or
and
push
mov
scas
incl
stos
stos
fldcw
fadds
cmp
jns
xchg
cmp
dec
inc
xor
push
scas
imul
cli
fsubrs
adc
push
mov
or
in
stos
sub
or
mov
cmp
dec
iret
xchg
mov
mov
mov
mov
mov
lret
fdivrl
mov
adc
xchg
jbe
andl
filds
pushf
push
pop
dec
cmp
xor
xchg
aad
cld
stos
jmp
dec
test
jne
push
stos
movsl
pushf
repz
xor
inc
push
cmpsl
xchg
fwait
and
lock
or
jg
cmp
xorl
stos
mov
jl
xchg
xor
mov
out
clc
ljmp
inc
dec
popa
inc
jbe
cmpb
sbb
clc
push
inc
push
xor
pushl
jmp
mov
subb
es
dec
mov
cmp
test
arpl
mov
shrl
xchg
xchg
jl
call
test
add
es
filds
inc
sbb
adc
jl
movsl
jmp
xchg
dec
test
iret
xchg
andl
or
addr16
bound
call
fisttpll
pop
sub
sti
push
mov
or
inc
or
inc
dec
push
stos
rclb
jg
call
and
lods
sub
aam
sub
fisubl
aaa
rol
decl
adc
and
push
mov
call
fadds
xlat
sbb
in
and
sub
shl
aad
adc
pop
sub
pop
scas
push
out
test
push
fists
sbb
push
movsb
stc
inc
jno
lret
inc
mov
ljmp
sbb
incl
mov
xchg
call
mov
jo
xchg
mov
and
mov
insb
mov
inc
mov
or
jle
dec
xchg
andb
das
dec
inc
cmp
faddp
add
incl
rep
iret
inc
mov
lahf
inc
jno
mov
and
or
xor
lret
or
jg
pop
and
fcomps
adc
mov
imul
insl
pushl
std
cmpsl
dec
push
movsb
xor
repz
jmp
sub
dec
scas
add
dec
dec
ja
mov
notb
sbb
ret
push
aaa
addb
mov
ds
cld
or
add
outsb
test
ret
incl
push
jns
mov
mov
imul
mov
dec
test
movb
cvtpi2ps
mov
out
icebp
inc
ret
cli
adc
clc
mov
dec
cwtl
sub
or
adc
dec
stc
cmp
je
nop
mov
incl
or
pusha
adc
and
rorb
fcomip
dec
sbb
mov
sti
adc
scas
lods
call
inc
sar
jg
lea
dec
test
adc
scas
mov
inc
inc
inc
push
out
push
mov
mov
mov
and
inc
push
movsl
mov
jne
xlat
push
mov
lock
cld
stc
cmpsb
adc
cwtl
icebp
test
in
cmp
push
cld
dec
ds
add
shrl
ljmp
push
in
test
xchg
xor
adc
loope
out
inc
and
pop
sub
scas
clc
std
and
popf
das
mov
out
clc
call
call
add
sbb
xchg
mov
jge
push
subb
rcl
comiss
xchg
test
pushl
add
adc
lahf
pop
aam
cmpsl
cmp
ret
push
xor
imul
ljmp
add
pushl
push
fcoml
sub
gs
mov
in
movsb
movb
mov
xchg
incb
mov
inc
jg
mov
pop
fcmovu
std
xchg
fstpl
sub
incl
mov
cmc
inc
decl
ret
lds
pop
ret
inc
mov
sbb
lds
or
xchg
ret
dec
push
out
ret
pushl
sub
pop
data16
pop
and
negl
xor
addl
in
popa
sbb
enter
js
xchg
mov
mov
lds
xacquire
add
or
pop
and
sar
rcll
decl
data16
lods
ss
add
testb
mov
mov
jne
fisubl
bound
cli
popf
stos
icebp
add
jg
dec
lods
push
imul
enter
shlb
or
call
loop
cmp
gs
outsl
cld
sub
xchg
out
jl
sub
pushf
out
and
xlat
loopne
decl
xchg
and
repnz
inc
lahf
xor
xor
sbb
or
xlat
fildll
jae
adc
pop
in
inc
insl
bound
outsb
imulb
push
fs
decl
jno
insb
and
movsl
cli
adc
pusha
test
sub
xor
mov
jne
ljmp
push
add
mov
cmp
arpl
cld
mov
cmp
imul
call
lea
push
outsl
sbb
insb
daa
jns
cmpsb
scas
mov
xchg
xor
mov
icebp
call
js
and
pop
cld
push
pushf
xor
js
lock
jg
insb
mov
cmp
in
lea
mov
adc
movsb
adc
ljmp
push
cwtl
xchg
das
inc
enter
jecxz
mov
xlat
stos
lea
fld
jge
pop
mov
xlat
dec
je
fnstsw
adc
pop
add
mov
mov
leave
int3
movsl
fs
xor
rclb
incl
inc
rcrl
push
sub
sbb
inc
setae
mov
dec
and
call
gs
js
mov
jns
xchg
jge
gs
cmpsl
addb
cli
jecxz
sbb
ljmp
cli
jb
cmp
test
cmp
add
jne
add
decl
xor
ss
aaa
and
sub
das
cmp
mov
mov
dec
cmp
dec
push
insb
ss
das
push
pop
movsb
repnz
shll
pusha
mov
call
dec
jae
pop
xor
lock
inc
xchg
mov
sbb
mov
repz
cltd
cwtl
stos
mov
repz
push
fldenv
add
pop
enter
repnz
les
xchg
jl
xchg
xchg
adc
add
pusha
enter
cmpsl
ja
daa
mov
pop
lcall
iret
pop
mov
mov
icebp
adcb
and
pop
xchg
inc
pop
pushf
cmp
outsl
call
xor
outsl
decb
rorb
in
fildll
rcr
cli
lods
gs
xor
inc
pushl
mov
insb
call
or
adc
xchg
or
mov
jg
ja
and
in
lret
push
xor
xor
adc
movsb
lcall
mov
push
outsb
sbb
dec
insl
enter
mull
mov
int
ljmp
mov
in
les
push
xor
lret
sbb
cmp
decl
inc
fs
sbb
cmpsb
jo
daa
adc
jge
pop
mov
pusha
dec
fisttps
push
popf
and
ficoml
incl
and
fsqrt
fmull
mov
dec
insb
repz
jmp
pop
imul
mov
lods
jo
sub
and
insb
adc
push
das
jb
shl
fiaddl
cwtl
ret
xchg
out
ljmp
add
pop
push
jae
and
add
mov
incl
in
mov
les
push
jge
pop
jmp
xor
call
shl
icebp
mov
inc
xchg
or
xchg
cmp
pop
jbe
push
cmpb
sub
sbb
cmp
imul
lret
ljmp
jne
and
or
and
insl
xor
in
cld
or
fcoms
xchg
rcll
mov
gs
mov
jecxz
decl
stos
inc
xor
inc
cmpsb
xorl
add
jge
jg
fcompl
faddl
pop
jnp
xor
push
mov
jg
or
pop
mov
lahf
xor
inc
dec
cs
mov
mov
fwait
add
pop
scas
call
std
sbb
rorb
int
cmp
mov
mov
decl
fisubs
lds
mov
pushf
in
xchg
xor
stos
inc
push
lcall
ljmp
orl
enter
stos
sar
call
add
aaa
aas
fwait
das
ja
sub
sbb
or
loopne
das
shrl
push
popf
pop
xchg
or
mov
xor
mov
pushl
cli
cs
push
pop
or
mov
int
pushf
sbb
adc
das
dec
iret
mov
fildl
imul
mov
pop
xchg
jp
lcall
aad
jae
mov
rcrl
sub
pop
pop
pop
outsl
push
xor
mov
aam
jle
mov
cmp
cmp
lods
inc
push
clc
adc
in
jae
jg
lahf
jae
mov
mov
jle
rcr
cmp
dec
mov
jne
adc
pop
icebp
stc
div
xlat
dec
lock
dec
push
call
xor
fcomip
incl
lret
push
fbld
out
cld
jae
mov
push
hlt
jmp
cmc
pop
mov
aad
dec
stos
or
loop
std
add
test
push
mov
add
sbb
mov
sub
jmp
bound
out
push
or
imul
pushf
lret
ror
xchg
xor
sub
xor
incl
repnz
outsl
int3
sbb
lods
js
ds
jno
in
mov
mov
test
pop
aam
push
cmp
or
incl
mov
inc
mov
cmp
sti
mov
adc
xchg
sub
mov
jb
push
fadd
out
mov
push
or
insl
xchg
cmp
arpl
mov
mov
ss
call
int3
mov
gs
xor
mov
jmp
mov
dec
idivb
or
aad
aas
mov
bound
lods
xor
push
push
or
arpl
es
dec
decl
xchg
xor
jns
inc
pop
adc
mov
adc
push
jmp
push
jae
jmp
mov
in
mov
pxor
je
xor
orl
xlat
call
mov
test
loope
addr16
and
imul
scas
jp
add
push
into
add
jno
pop
push
push
jg
ljmp
cmp
std
stos
jle
fisubl
and
jge
call
lret
pop
sbb
mov
jp
hlt
and
mov
mov
sub
gs
pusha
sar
roll
les
inc
dec
push
dec
test
incl
dec
sbb
sbb
adc
dec
call
aas
jno
xchg
inc
xor
cmp
sar
call
cmc
jecxz
inc
xor
xor
sarl
push
mov
pushl
bound
call
imul
js
xor
outsl
mov
fcomip
mov
xchg
mov
sub
icebp
push
loop
mov
insb
pushl
sub
rolb
mov
dec
adc
stc
fs
cld
lea
sbb
mov
mov
add
or
pop
adc
dec
cmp
iret
adc
incl
lea
fstpl
jbe
mov
push
scas
push
insl
add
clc
lret
jo
add
fstps
ffreep
mov
mov
mov
frstor
ljmp
add
das
or
add
sbb
fucomip
mov
cld
sbb
mov
push
jno
in
daa
mov
and
adc
inc
je
dec
mov
xchg
and
sub
sbb
inc
movsl
in
mov
dec
mov
and
jae
fisttpl
lret
sub
pop
out
sti
or
mov
mov
decl
sub
push
mov
insb
shl
mov
cwtl
cmp
lcall
divl
incl
aaa
pop
pop
pop
xor
pop
and
xchg
xlat
adc
mul
mov
incl
mov
movsb
inc
incb
mov
mov
or
xchg
and
out
idivb
leave
mov
mov
mov
in
shrl
pop
jb
xchg
adc
pop
sahf
lods
outsl
pop
js
jns
les
imul
ja
mov
repz
movsl
stos
fcmovnbe
push
mov
clc
cmp
pop
fsubrp
mov
fmull
push
xor
jmp
lea
incl
pop
je
or
stos
in
inc
aas
or
mov
cltd
cmp
in
inc
push
cmp
movsl
adc
lea
scas
test
mov
decb
jno
sbb
xchg
mov
mov
nop
test
mov
xor
mov
pop
sub
mov
das
je
sub
and
call
cmpl
sarl
aad
pop
pushf
pop
icebp
ljmp
xchg
aaa
sbb
or
fwait
cmp
shrl
jg
inc
jl
push
adc
mov
js
jecxz
mov
incl
dec
xor
or
jbe
inc
cld
xchg
jnp
pusha
inc
mov
insl
inc
out
sbbb
lcall
jl
inc
mov
push
fdivl
loopne
loopne
or
pop
jb
mov
cmpsb
adc
dec
aam
adc
call
lahf
dec
rcll
lods
push
xchg
sbb
mov
mov
mov
fldenv
mov
push
clc
mov
dec
scas
jl
cmp
jg
call
xchg
nop
xchg
mov
mov
fiadds
repnz
dec
dec
loopne
dec
xchg
jns
mov
stc
pop
pop
push
aaa
lock
sub
fnstenv
arpl
dec
xchg
sbb
cli
xor
adc
scas
in
ss
mov
pop
gs
push
jg
pushl
jg
inc
sub
popa
push
xchg
push
and
imul
arpl
mov
lods
mov
sarl
mov
rcrl
lcall
or
sub
flds
outsb
out
flds
lock
sub
mov
aad
cmp
jb
bound
imull
lcall
in
xchg
repz
mov
sbb
mov
jg
repz
jp
aas
push
xor
lea
pop
pop
push
fidivs
loopne
jg
dec
xchg
adc
sub
call
pushf
cmp
push
jns
lcall
mov
dec
sbb
enter
clc
sbb
pushl
cld
sahf
jne
das
stos
addr16
andl
cmpsl
loopne
xchg
fcomi
and
dec
adc
ljmp
decl
loopne
jge
xor
pop
mov
insl
insb
jo
iret
lock
add
jmp
mov
push
pushf
cli
subb
mov
cli
decl
jb
lds
dec
test
sub
push
add
insb
es
inc
mov
in
mov
scas
outsb
push
xor
insl
lcall
dec
xlat
push
mov
mov
dec
pop
loope
outsb
loop
jnp
imul
adc
cmp
or
adc
in
pop
cmp
pop
fdiv
mull
popa
insb
mov
cmp
pushf
movsl
test
jmp
adc
mov
aam
pop
xor
bound
mov
push
leave
sbb
sahf
ficoms
jno
fisubrl
pusha
adc
or
add
lods
das
jne
push
lret
call
stos
mov
mov
pop
fldt
pop
inc
sub
or
call
shl
in
dec
call
jbe
sbbb
sbb
lock
jmp
lea
call
cmpsb
xor
into
xchg
mov
jno
sbb
mov
fisttps
mov
out
repz
and
lcall
add
stc
test
iret
add
cwtl
sub
dec
inc
pop
mov
pop
cmp
pop
xchg
inc
dec
sbb
and
and
jbe
stos
aad
decl
lock
out
pop
ret
adc
dec
push
ss
cmc
arpl
mov
pusha
cmpsl
inc
sub
into
ss
mov
lods
addr16
push
sbb
push
mov
aaa
repz
lret
adc
scas
sub
js
inc
jb
mov
lcall
dec
loope
int3
fisttps
sbb
icebp
pop
loope
push
xchg
dec
incl
push
fadd
or
adc
xchg
push
jg
adc
test
fldcw
push
xchg
sub
ficomps
incl
and
inc
popa
ja
divb
mov
jge
imul
enter
scas
decl
add
adc
mov
daa
scas
ja
ret
cmp
pop
sub
decl
xor
mov
inc
ret
jmp
scas
ljmp
dec
sub
mov
fsubs
es
push
pushf
cld
rorl
rorl
imul
sbb
sbb
ljmp
fadd
inc
rcll
or
cwtl
ror
decl
cs
mov
mov
out
sahf
data16
inc
cmp
ljmp
mov
add
fcoms
mov
fidivl
cmp
mov
sbb
pop
hlt
call
icebp
int3
or
or
mov
shrb
out
mov
push
inc
pop
add
call
rol
ret
adc
mov
aaa
jns
mov
push
xchg
jae
rcrb
push
dec
mov
jg
cmc
movsb
push
loopne
in
mov
xor
lods
cltd
push
push
xchg
add
add
out
xor
push
mov
jg
and
mov
pop
jmp
call
imul
mov
add
cmpsl
dec
push
xor
cmpsb
test
divl
les
push
ret
nop
sbb
cmp
in
xchg
ss
pop
push
mov
xchg
cmc
jmp
mov
cli
lcall
or
dec
sbb
dec
mov
mov
flds
andl
std
or
je
in
cmp
insb
sti
fcoms
loopne
dec
fs
lods
jecxz
and
incl
pop
roll
lea
adc
mov
or
outsl
mov
push
lods
popa
cltd
jbe
push
bound
dec
jb
and
dec
push
enter
aaa
cmp
and
aam
in
gs
bound
and
shlb
mov
mov
out
xchg
stos
cmc
mov
ljmp
adc
fadd
cmp
xchg
enter
pop
movsb
inc
mov
movsl
fdivrs
add
adc
ud0
push
or
dec
mov
je
mov
jmp
decl
mov
int
clc
pop
je
sub
push
cmp
loopne
icebp
out
loope
popf
stos
js
out
outsb
iret
loopne
dec
cmc
in
mov
xor
daa
push
rcrl
mull
xchg
incl
adc
push
jns
testl
dec
ljmp
push
inc
xor
movsl
mov
xchg
and
mov
inc
icebp
in
mov
cmpsb
cwtl
test
decl
lock
in
mov
jne
cmp
push
insb
mov
lock
or
mov
or
pop
mov
xor
stos
jnp
mov
xor
jg
add
or
lret
add
mov
cmc
xlat
pushl
fsubl
push
pop
pushf
addr16
xlat
sbb
dec
dec
mov
jg
dec
sub
fidivrl
test
mov
mov
cmp
xchg
sub
mov
jecxz
fs
rclb
int
and
shlb
in
dec
lods
popa
les
lcall
outsl
popf
inc
test
into
bound
lahf
ja
fistps
mov
fs
rorb
loop
decl
push
int3
or
scas
inc
and
test
pop
mov
xor
shl
ljmp
push
fisubs
es
xchg
dec
in
lock
ret
cwtl
lock
mov
lods
rcr
data16
ljmp
lock
call
lds
xchg
mov
pop
andl
stc
incl
xchg
sti
arpl
cmp
leave
shll
inc
std
mov
out
dec
adc
pop
iret
addb
jns
and
sub
lods
pop
lahf
aas
leave
imul
sbb
push
aaa
int
ja
jl
lock
inc
pop
jle
mov
inc
xchg
mov
mov
push
test
sahf
cmp
lcall
pop
rol
loope
mov
dec
jbe
add
cs
popa
aas
pusha
or
pop
rcrb
jp
arpl
out
cmp
adc
mov
add
ljmp
fstl
or
fmuls
cmp
cld
outsl
jb
xor
inc
out
call
in
inc
cmp
sahf
dec
aas
out
in
xchg
cmp
andb
mov
outsl
mov
in
cmovge
scas
ljmp
push
dec
add
dec
fiadds
mov
enter
decl
mov
call
lret
jo
test
lahf
test
and
jno
cmc
pushl
sub
pusha
pushl
inc
jnp
test
int
leave
nop
hlt
add
lcall
xor
rcrb
mov
sbbb
add
push
leave
stos
roll
xchg
xor
jo
pushl
fsts
adc
mov
mov
popa
mov
hlt
lods
pop
ret
pop
sub
xor
push
popf
ds
mov
mov
loope
cmp
xchg
out
lahf
sbb
cwtl
mov
add
adc
aaa
jmp
pop
push
and
cli
sub
std
xchg
enter
adc
adc
ljmp
out
and
mov
mov
mov
pop
dec
xchg
jb
iret
add
sub
jmp
push
push
mov
ror
arpl
pop
ja
mov
push
cmp
mov
push
pop
or
sub
push
push
inc
jae
jmp
mov
movsb
in
add
pushf
lret
lods
push
and
fmuls
imul
lcall
xchg
nop
sar
inc
sbb
loopne
cltd
pusha
shr
sbb
mov
mov
je
loope
adc
cmp
out
shrl
sbb
sti
je
push
leave
cmpsb
xor
decl
xchg
add
jle
cli
mov
aam
call
aaa
std
mov
add
or
xchg
pop
jne
test
pushl
loope
dec
mov
fnstcw
pop
ljmp
js
mov
out
les
ret
daa
mov
mov
movsb
cmc
sbb
push
jmp
xchg
cltd
jnp
out
fildll
push
mov
add
jmp
test
cmp
mov
cmp
push
pop
mov
pop
outsl
rcll
fisubl
gs
aam
sub
inc
jp
cwtl
lds
movsl
loopne
and
test
add
and
cmp
or
cmpl
test
push
push
cmp
ljmp
cmp
xchg
iret
movsl
or
push
das
fs
shrb
pop
jbe
sbb
out
or
cmp
sub
outsb
push
cli
or
and
sahf
xor
mov
mov
icebp
adc
arpl
lcall
das
out
jl
repnz
mov
adc
ljmp
outsl
push
pop
pop
cmc
stc
jmp
mov
mov
scas
clc
jmp
cli
adc
mov
push
aam
and
das
push
shlb
loope
aaa
push
ljmp
pop
xchg
rcrb
call
xor
cmp
pop
fucom
lret
lahf
mov
sar
adc
loop
int3
lods
pop
arpl
xchg
rolb
movsb
dec
loope
jg
lea
leave
lret
sub
adc
mov
pushl
mov
pop
xor
xor
adc
inc
mov
es
cmp
adc
dec
sbb
decb
and
mov
add
fcmove
push
and
rclb
add
ljmp
in
pop
xor
push
add
flds
sbb
push
ja
adc
mov
dec
addl
outsb
mov
push
mov
sbb
nop
and
test
in
and
daa
sbb
fadd
push
lea
sbb
movsl
jnp
rcrb
sub
inc
scas
xchg
lods
je
sub
clc
in
fidivrs
rorb
xlat
testl
mov
daa
sub
mov
outsl
push
outsl
xchg
cltd
add
jbe
jnp
lret
cwtl
jle
xor
push
push
xchg
lea
adcb
jl
aaa
mov
add
fists
insl
pushl
sbb
repnz
pop
rorb
adc
and
mov
jg
lret
inc
fcos
cmp
sub
lcall
divb
sub
icebp
fistpll
or
xchg
popf
daa
mov
jmp
add
nop
roll
push
cmpsl
cmp
jecxz
mov
cmpsl
outsl
adc
jno
stos
inc
aad
lock
decl
mov
fisubs
ljmp
popl
popa
sti
sahf
jmp
jns
sub
int3
call
ljmp
push
mov
mov
addr16
sub
lea
mov
or
jnp
out
add
jmp
imul
mov
aas
jmp
test
mov
lock
pop
test
cmp
dec
lock
test
mov
add
aam
sub
xchg
inc
js
add
pushl
adc
cmpsb
not
or
jbe
ds
mov
ss
addr16
jae
fcmove
inc
or
test
xchg
xor
pop
add
add
sti
cwtl
cli
icebp
nop
out
jge
clc
out
incl
jl
pop
xchg
and
in
shll
dec
repnz
sub
mov
in
repz
sub
dec
imul
js
inc
sarb
hlt
dec
jmp
mov
jbe
inc
stos
and
pop
imul
outsb
cld
jge
mov
mov
aam
mov
pop
lds
ljmp
or
loope
shrb
pushf
mov
dec
lret
aam
incl
mov
or
jmp
ljmp
lret
jecxz
inc
outsb
pushf
mov
sbb
fisubl
mov
jnp
cmova
call
mov
andps
fwait
or
mov
jne
mov
jl
scas
rorb
loope
sbb
sbb
push
mov
inc
sub
jl
pop
jns
jle
negb
mov
jmp
mov
push
adc
aad
inc
pop
jl
dec
daa
pop
fisubl
xor
push
and
stos
jg
sbb
or
popf
pop
pop
stc
daa
sub
arpl
cli
leave
out
cli
sub
and
decl
jae
ja
push
sti
cli
sub
fwait
xchg
mov
pop
push
cmp
ret
les
mov
xor
cmp
inc
lods
mov
sub
cmp
xor
pop
decl
jae
inc
out
push
xchg
inc
enter
inc
mov
sahf
int
out
pushl
mov
jmp
add
push
sbb
stos
and
jl
test
jno
xor
add
dec
fcoml
into
add
insb
outsl
lods
fwait
test
lret
loopne
jbe
movsb
xor
cmp
xchg
in
push
clc
pushl
push
and
dec
data16
pop
ds
jbe
test
jmp
push
in
push
adc
xor
cld
xchg
negl
pop
xor
mov
movsb
std
fs
call
push
sub
jmp
lahf
push
dec
das
cmp
pushl
pop
dec
outsb
sarb
cmc
mov
rclb
iret
lret
or
mov
lcall
jle
bound
int
bsr
sbb
inc
jbe
jecxz
imul
xor
lcall
push
lods
jecxz
js
ficoms
cli
xor
dec
sbb
xchg
shlb
add
lcall
adc
add
cld
sbb
out
sub
mov
inc
xor
dec
xchg
and
pop
mov
movsl
popf
lahf
jmp
std
ret
lods
and
int3
push
rol
pushl
in
data16
mov
pop
aam
loopne
pop
in
xchg
subl
loopne
push
sbb
repnz
or
jle
jecxz
repnz
push
adc
rcrl
lret
fmuls
pop
jg
movsl
lods
data16
xchg
pop
and
das
jo
int
insl
rclb
or
jbe
dec
cli
clc
xor
in
pop
xchg
fisubrs
mov
push
movsb
arpl
jo
ds
inc
ljmp
cwtl
pop
cwtl
shrb
cmp
or
inc
les
das
adcl
fdivrs
push
pop
arpl
popf
xchg
jg
daa
test
iret
adc
out
clc
inc
dec
lods
lods
jmp
xor
ds
ja
dec
push
mov
jae
mov
enter
ljmp
mov
pop
arpl
pop
arpl
or
sub
ja
idivl
decl
sbb
lret
pop
push
repz
or
push
mov
jno
jp
mov
ds
insb
jmp
dec
jp
scas
mov
ret
add
stc
push
loop
fistpl
loop
aam
mov
hlt
sbb
cmp
push
in
xor
jmp
push
leave
fidivs
gs
insb
jno
inc
sub
stos
pop
repnz
push
sub
leave
or
ljmp
push
xor
add
movl
inc
and
ljmp
mov
das
rcrl
ja
addr16
lret
cmp
mov
or
decl
cmp
add
movsb
imul
pop
pushf
inc
mov
sub
outsb
inc
mov
jae
adc
sbb
ss
jmp
imul
popf
in
stos
rolb
mov
jmp
lcall
mov
movsl
mov
and
sti
lret
jle
insb
aam
ljmp
cmpsb
cld
pop
cltd
fidivl
test
movsb
adc
push
dec
pop
cmp
jg
sub
cld
mov
mov
outsl
jmp
repz
push
jl
add
inc
or
jg
sahf
outsl
imulb
adc
dec
into
gs
ljmp
fcmovnb
mov
ds
and
imull
push
cmpsl
mov
jns
js
jg
lcall
cmp
cmp
cld
pop
push
xor
inc
fadds
das
mov
call
xchg
mov
adc
xor
xchg
push
fisttpll
scas
out
add
into
sbb
mov
ljmp
xor
arpl
data16
loop
or
add
push
subl
repz
dec
and
sbb
sbb
sub
loopne
loope
mov
popa
cmp
add
out
fldt
outsl
mov
out
aas
insl
mov
sbb
aam
shlb
rclb
sar
mov
fld
jp
enter
adcl
lds
out
or
mov
dec
pop
decl
fadds
inc
lcall
pusha
gs
shll
adcb
fwait
decb
leave
gs
pand
scas
andl
aam
jno
and
decl
aas
mov
mov
xor
push
lods
pop
and
fs
cmp
pusha
cltd
or
lock
and
cmp
inc
andb
movsl
or
mov
pop
mov
pop
adc
ljmp
dec
in
xchg
test
sbb
clc
mov
push
sub
jae
in
dec
xor
jo
dec
std
test
pop
cld
pushl
sub
add
out
mov
leave
data16
pop
jno
lret
mov
pop
movsl
sarb
jg
loop
insl
jge
test
incl
loop
jno
jp
jp
and
push
int3
in
cld
aas
dec
in
xor
cmp
mov
clc
push
cmp
mov
lock
cs
add
jg
and
popa
dec
leave
fisubrl
adc
movsb
add
mov
stos
mov
lods
dec
cmp
incl
mov
xorl
popa
jge
pushf
repnz
lock
cwtl
call
fwait
mov
call
push
sarl
jg
mov
repz
ud0
jns
and
fwait
xbegin
aas
sbb
cmp
add
xor
stos
jno
hlt
cmp
lods
popa
sar
sub
sub
lock
or
aam
jmp
dec
sbbl
out
nop
orps
std
inc
mov
xchg
or
call
mov
cmp
les
out
push
mov
sti
inc
iret
jns
bswap
mov
lds
lea
std
pop
sbb
in
and
adc
incl
adc
sahf
mov
sub
sbb
lret
push
aam
mov
or
xchg
repnz
fwait
das
jge
pop
les
outsb
test
call
dec
push
pop
ja
insl
add
daa
adc
or
pop
pushf
mov
fmull
jg
ficoms
aam
insl
and
ds
pushl
fsubl
cmp
mov
lea
sbb
push
or
sub
dec
add
popa
jmp
repz
pop
adc
fidivrl
jp
scas
push
xor
aam
dec
cld
decl
in
lods
cmpsl
or
pushf
sbb
cmc
and
pop
adc
jno
and
pop
mov
out
loope
adc
and
scas
js
jae
mov
pushf
dec
fsubl
xor
fimuls
lcall
or
xor
out
xor
dec
mov
incl
or
mov
popf
adc
cmc
nop
incl
sti
rcl
mov
je
adc
push
sbb
lcall
xchg
out
cld
dec
sti
or
fldcw
sarl
mull
jns
add
inc
pop
nop
add
cmpsb
rcll
sar
fadds
fcomp
shrl
inc
mov
mov
mov
cs
das
or
into
stos
xchg
mov
inc
jg
stc
sar
decl
mov
add
fbstp
dec
sbb
xchg
sti
pusha
and
ljmp
sub
shll
fstps
ja
negl
jle
int3
cmc
jg
inc
pop
out
addb
clc
adc
mov
scas
ss
stos
je
xor
and
cmp
jno
add
scas
sahf
mov
loop
jge
jae
ret
hlt
lods
inc
cmp
lret
pop
lds
mov
inc
cld
mov
push
mov
mov
xor
inc
or
sub
jg
adc
push
inc
mov
push
mov
idivl
sti
arpl
decl
clc
mov
jmp
fdivs
mov
jle
js
shrb
push
push
jb
popa
and
cld
call
out
int3
xchg
mov
cmp
aaa
pop
repnz
cli
imul
ficoml
dec
mov
decl
and
in
xchg
xchg
dec
bound
aas
push
pop
inc
inc
lds
sub
jmp
pop
stos
sbb
inc
mov
fs
jg
jmp
shrl
lahf
pop
xor
or
int3
stos
into
loope
add
in
int
bound
les
imul
fildl
jle
push
xor
sahf
cmp
pop
jg
outsb
cmpb
test
mov
mov
ss
mov
ljmp
lret
imul
dec
ficomps
in
xchg
es
lcall
and
dec
mov
loopne,pt
loope
adc
mov
mov
mov
pop
cmp
push
popf
jmp
je
incl
jae
dec
mov
enter
shrl
fldenv
shl
and
xor
sbb
fcomip
xchg
addb
cmpsb
or
outsl
pop
outsb
js
adc
pusha
jg
fisttps
popa
cld
pop
jle
shl
cmpsl
lock
sub
clc
fdivr
pushl
ja
cmp
mov
adc
sbb
outsl
adc
cmp
leave
test
add
jnp
push
jge
cmp
scas
dec
dec
pop
decl
hlt
mov
cmp
jbe
lods
nop
push
jl
std
hlt
fst
or
mov
les
pop
add
xchg
or
push
cld
xchg
clc
sub
movsb
enter
sbb
dec
call
stc
pusha
xor
dec
mov
sbbl
jae
fwait
jo
stos
ljmp
out
cmp
mov
fdivrl
add
push
mov
outsl
mov
jo
pop
sub
fisttpll
pop
test
dec
push
jg
and
idivl
push
in
sbb
data16
jp
test
dec
jmp
push
mov
stos
pop
mov
fidivrs
test
pop
rcl
ja
or
push
leave
adc
out
xchg
jo
in
push
lcall
lods
jo
arpl
push
inc
gs
inc
fcomps
rcrl
add
out
mov
pop
pop
call
cmpsl
syscall
mov
jbe
call
rclb
in
push
push
imul
mov
mov
jg
add
stos
lds
xchg
shll
jl
mov
inc
outsl
adc
jnp
lret
jecxz
xchg
mov
pushl
pop
movb
jmp
outsb
mov
push
cld
fst
aas
jb
leave
xchg
jnp
cltd
xchg
mov
ljmp
call
into
stos
jge
jae
outsl
xor
rorb
rcr
adc
sbbl
xchg
pushl
ja
iret
push
scas
mov
mov
cmp
jle
mov
jno
sub
lods
sub
push
mov
sar
inc
inc
mov
sub
arpl
mov
mov
sbb
jle
mov
fiadds
data16
xor
arpl
cwtl
xchg
dec
mov
mov
push
jl
ljmp
jg
sub
je
or
les
int3
imul
pop
xchg
arpl
mov
incl
push
cs
popf
xor
arpl
aaa
xchg
inc
sti
and
adc
dec
lds
out
cli
add
inc
ds
into
popf
in
jg
pop
xor
je
lret
daa
loope
imul
rcrl
cmp
mov
and
jnp
adc
decl
push
call
sti
sbb
loopne
sbb
mov
data16
outsl
popf
mov
fcmovu
add
mov
push
xchg
pushf
sub
jg
sbb
lret
pushf
insl
fwait
sbb
sbb
jno
cltd
inc
xchg
fsave
fdivrp
jg
loope
je
mov
inc
int
pusha
clc
and
enter
jg
jbe
call
jno
or
cs
and
and
stos
mov
repnz
push
xor
mov
call
std
add
adc
push
mov
dec
xchg
ljmp
decl
xor
inc
mov
inc
mov
in
fs
or
outsl
mov
ja
pushf
or
pop
cmpsb
roll
mov
jo
sahf
movsb
push
lds
jnp
addr16
sbb
jg
cmp
mov
jo
mov
xchg
call
xor
scas
clc
mov
pop
inc
mov
xchg
jb
ficomps
xor
in
call
and
mov
sub
cmpsl
aad
adc
pop
mov
dec
add
lcall
ljmp
jbe
add
mov
imul
int3
xlat
pusha
xor
nop
dec
mov
pop
cmc
pushl
and
mov
popf
push
fnstsw
ss
push
adc
cmp
jmp
pop
shl
ret
xchg
xlat
mov
pop
inc
out
xchg
push
xchg
rclb
sub
nop
pop
insb
in
add
inc
jle
out
push
clc
incb
xor
lods
mov
pop
mov
lcall
loopne
push
jge
sub
test
mov
loop
cld
ja
into
rorb
in
out
iret
frndint
mov
add
sub
sbb
icebp
adc
pop
xchg
lcall
mov
jg
inc
mov
mov
inc
pop
and
sub
jge
repnz
sar
incl
pop
adcb
jae
sbb
je
lret
cmp
outsb
dec
shlb
lcall
rcrb
inc
adc
xor
lcall
out
xchg
in
mov
jno
decl
cmp
jmp
and
xor
sbb
or
push
gs
cmpsb
inc
js
mov
mov
int
mov
dec
xchg
jb
xor
mov
out
ss
mov
push
jo
ret
xlat
push
push
push
das
arpl
outsl
clc
jno
iret
rcrl
sub
cmp
js
movsb
fcom
mov
cmp
inc
pop
cmp
das
lret
push
jne
push
xchg
ljmp
push
movsl
cmpsl
push
or
cmp
pop
dec
nop
notb
addr16
enter
adc
das
es
and
or
pop
xor
loope
xchg
mov
ljmp
mov
fstps
out
fdivr
xor
stc
fwait
testl
lods
sahf
outsb
and
imul
out
lret
dec
outsb
mov
insl
sub
outsl
clc
js
lock
and
test
ss
mov
decl
addl
jmp
jmp
out
stos
cwtl
dec
mov
andl
dec
xchg
adc
mov
mov
nop
ljmp
push
divl
data16
mov
dec
pop
jle
outsl
dec
xor
xor
call
pop
mov
add
cmp
mov
dec
cld
sbb
mov
loope
add
jg
fists
inc
loope
fidivrl
push
or
in
rol
inc
mov
call
xor
pushf
lods
xor
ljmp
lcall
mov
fs
imul
push
xchg
dec
lcall
push
mov
fimull
mov
out
push
xchg
int3
aam
jbe
pop
std
mov
and
cmp
inc
fbstp
daa
xor
call
mov
xor
call
add
fmul
mov
out
cli
incl
jle
mov
jmp
mov
mov
pop
daa
pop
out
rcll
xchg
push
mov
mov
scas
leave
shr
lock
nop
lods
add
ljmp
std
mov
lahf
scas
dec
hlt
pop
fisubrs
repnz
ror
lock
xchg
push
inc
fisttpl
lret
jne
out
mov
add
mov
push
add
jmp
shlb
jl
lahf
fdivrp
incl
xchg
inc
lret
aas
sub
fwait
aam
adc
push
mov
add
pusha
or
test
xchg
xor
fbld
pop
inc
or
or
decb
or
je
popf
rep
fisubrl
sub
dec
push
cmpsb
popa
int
mov
or
mov
incl
add
or
adc
inc
jmp
les
mov
sahf
dec
jnp
les
decl
mov
je
cwtl
and
xor
xchg
adc
push
mov
bound
call
mov
pop
mov
dec
stos
inc
and
inc
mov
jecxz
dec
out
cmpsb
jnp
ljmp
mov
push
add
push
inc
sub
push
jecxz
inc
clc
call
jae
js
push
cli
or
das
gs
jmp
mov
popa
popf
mov
mov
stos
xor
jle
movsl
sbb
jg
daa
add
stos
sbb
xchg
call
iret
aam
jne
sub
shlb
mov
xor
mov
nop
sar
decl
mov
cmpl
mov
xor
movaps
pop
out
test
xchg
iret
push
ud0
ljmp
pop
adc
jno
mov
mov
sub
pop
xor
jmp
fsts
cmp
addr16
or
daa
lock
xlat
shl
imul
int
jle
mov
call
adc
inc
loopne
cmp
sti
pop
jbe
cld
jmp
xor
cmovbe
cwtl
arpl
fisubrl
push
mov
jb
cltd
push
decl
sbb
les
stc
sbb
jge
es
adc
iret
jnp
xchg
mov
push
sbb
mov
mov
inc
out
mov
xor
xchg
jg
mov
decl
test
ss
decb
pop
pop
mov
int
jb
xchg
in
pop
cmp
fcmove
xor
mov
stos
xorb
decl
pusha
and
out
mov
out
jg
je
mov
lock
aas
mov
add
incl
inc
dec
movsb
arpl
sbb
imul
mov
lods
add
in
inc
or
fwait
decb
xchg
mov
lcall
fildll
sbb
pop
fldcw
dec
mov
pop
mov
jl
incl
push
mov
dec
lock
aaa
inc
push
jno
jnp
and
and
test
dec
mov
or
mov
aaa
aad
sbb
js
push
dec
xchg
inc
or
incb
jg
ffree
mov
dec
incl
rclb
mov
xchg
xchg
ss
popf
push
call
sub
mov
xchg
mov
inc
rclb
adc
and
leave
cwtl
in
sbb
lcall
push
ss
lcall
lock
inc
lahf
push
mov
shrb
dec
ljmp
mov
add
push
rcr
fstps
dec
xchg
xchg
in
test
cs
jne
push
xchg
mov
inc
sub
cmp
gs
xchg
sub
outsb
push
out
xor
movsl
cmc
xor
ret
mov
addr16
cmp
inc
xor
jne
sahf
leave
or
jg
fsubrs
shr
mov
filds
out
lahf
add
xlat
sub
cmpsl
xchg
sti
jb
pushw
xchg
inc
jb
lcall
and
cmp
or
mov
insb
call
pop
adc
leave
sbb
cmp
fwait
jno
fldt
xchg
inc
push
sbb
inc
fwait
xchg
aas
lcall
bswap
ret
cwtl
pop
dec
dec
shl
mov
pop
in
ljmp
jecxz
or
into
or
add
ror
mov
nop
out
jo
int
mov
unpckhps
imul
or
in
int3
mov
repz
sub
in
lcall
xchg
fistl
std
jl
clc
sbb
adc
xchg
mov
test
or
lcall
and
inc
in
fisubrl
pop
hlt
loopne
mov
inc
or
jle
or
popf
add
outsb
cmpsb
repz
mov
imulb
mov
jmp
pop
xor
aaa
movsl
jne
fs
adc
push
or
mov
jg
test
xchg
sar
jne
adc
xlat
mov
es
inc
jle
stos
mov
jg
jae
lcall
cmp
sub
push
inc
xor
push
pop
or
sbb
hlt
orl
stc
outsb
lret
lock
test
push
addr16
inc
popf
sbb
cmc
flds
in
andl
jge
push
inc
mov
hlt
mov
dec
lahf
mov
jecxz
jbe
jnp
mov
ljmp
fistpll
mov
imul
mov
add
jle
lock
cmc
pop
enter
movsb
mov
fcomip
sub
out
xchg
aad
hlt
mov
mov
pusha
in
adc
jg
dec
add
call
or
daa
push
enter
jmp
lea
decl
cmp
je
adc
mov
pushf
xor
cmp
movsb
fsubrl
pop
in
sarb
mov
in
push
sbb
push
cs
dec
test
je
scas
sbb
incl
add
cmp
xor
mov
fnsave
sbb
incl
das
out
movsl
lahf
das
aad
mov
mov
xchg
dec
shrb
mov
scas
test
fildll
cli
jecxz
sbb
loopne,pt
cmpsb
in
pop
mov
pop
pusha
mov
repnz
inc
pop
xlat
and
xor
dec
ds
pop
pop
mov
add
adcl
pop
cmp
dec
sbb
insb
shl
sbb
loop
out
aas
lcall
aad
add
insl
jne
pop
bound
xor
rorl
sbb
lds
push
adc
daa
jge
into
xchg
jno
scas
cmpsb
rcrl
or
mov
pushl
test
rolb
adc
mov
loop
push
pop
icebp
dec
jle
sub
ljmp
cmpsb
sbb
mov
cmp
inc
pusha
lods
in
jmp
out
scas
inc
pop
and
test
scas
pop
pop
jne
aaa
mov
nop
std
iret
ss
cmp
call
pop
xchg
daa
or
inc
aas
xor
jmp
shrl
jns
gs
cmpl
mov
pop
add
testl
add
inc
in
lret
int
popf
push
pop
cwtl
repz
xor
pop
push
fldl
mov
fildll
and
xchg
into
inc
aaa
mov
push
std
incl
lds
das
loope
cmp
jne
push
add
popf
mov
mov
cld
sti
mov
iret
cmpsb
lahf
out
jo
movsl
clc
sub
pop
or
cmp
pushl
repnz
ret
cli
and
inc
or
dec
cltd
aad
pop
jne
ljmp
adc
aam
lahf
mov
cmc
mov
push
inc
dec
jp
fcomip
lahf
add
jge
ja
mov
fwait
mov
mov
pop
push
or
mov
inc
mov
dec
test
pop
sbb
movsb
sub
testb
lahf
iret
mov
mov
sub
je
sahf
jnp
outsl
clc
cmp
dec
ja
cmpl
mov
cmp
je
fimull
out
imul
sbb
jp
mov
imul
in
xchg
into
ret
loope
pushl
xor
mov
stos
pop
sbb
popf
adc
cmp
fcomip
outsl
xchg
mov
pop
cmp
sbb
push
jmp
add
insb
dec
repz
mov
loopne
rcrb
push
decl
xchg
fcomip
add
mov
fisttpl
dec
das
loopne
pop
lock
popa
pop
test
subb
lcall
push
push
xchg
scas
xlat
dec
insl
jge
repnz
imul
popa
fcompl
fildl
inc
arpl
lret
cmpl
enter
xchg
loop
dec
mov
clc
ljmp
xor
mov
add
mov
inc
mov
xor
mov
xchg
in
ret
xchg
sub
jl
adc
lcall
push
mov
test
pop
test
jae
push
adc
divl
cmpsb
mov
jbe
inc
pop
add
aas
stc
xor
fwait
leave
mov
loope
ds
cmpsb
int3
aas
imul
mov
test
inc
test
shr
add
fidivrl
negb
sbb
mov
fnstsw
pop
xor
fcomip
jmp
in
ds
sahf
mov
cld
repz
test
rcll
push
cs
mov
mov
shll
lret
xor
inc
jg
decl
or
subb
test
dec
sbb
adc
fs
cmc
incl
pop
push
mov
cmpsl
and
cmc
xor
jnp
xchg
mulb
dec
fs
jno
push
or
push
repz
mov
or
je
cli
int
cmp
sub
addl
cmp
pushl
add
js
imul
sub
push
xchg
ja
cli
das
aas
shrb
mov
loop
decl
adc
mov
mov
fadds
ljmp
xlat
xor
addr16
decl
cmp
adc
add
mov
jmp
mov
add
or
sub
dec
jnp
inc
std
fcomp
jp
mov
push
cmp
cs
hlt
ljmp
jp
subl
xchg
sbb
sbb
lret
xor
add
je
jmp
mov
add
sub
cmp
imul
std
decl
or
fiadds
enter
xchg
xor
mov
pushl
cs
mov
mov
dec
cltd
jno
cld
push
rclb
inc
jecxz
mov
jmp
jo
hlt
jo
ret
xlat
xchg
outsl
xchg
iret
sub
cmc
inc
xchg
mov
lcall
dec
dec
fisubs
ja
inc
push
inc
loop
fimull
and
jno
jnp
sbb
lods
scas
ficomps
sub
push
rcll
into
cmp
push
mov
sub
push
add
call
xchg
test
jne
jp
ret
jecxz
std
out
and
lock
sbb
inc
lret
mov
mov
xchg
lahf
cmp
fiaddl
jb
mov
test
in
xchg
mov
add
add
das
sar
xor
std
adc
pop
jp
push
popa
push
sbb
pop
outsb
and
fstpl
and
sbb
stc
adc
cbtw
shlb
pop
mov
repnz
call
xchg
jb
push
shll
cltd
loope
rolb
ljmp
or
adc
jmp
stc
mov
push
bound
mov
or
lods
imul
sub
sub
nop
repz
cli
scas
adc
mov
into
cmp
jne
jecxz
rcl
fistps
push
ljmp
cmp
push
mov
add
push
mov
shll
pop
inc
jg
fcomip
jmp
pop
outsl
push
es
cmp
dec
hlt
dec
adcb
ljmp
leave
addr16
pop
pop
scas
add
fwait
addl
daa
mov
mov
mov
xor
adc
xchg
xchg
add
pop
imul
decl
loopne
sbb
fcompl
cmpsl
hlt
xor
jle
das
adc
sarl
inc
cld
pushl
in
mov
xchg
sbb
ljmp
imulb
testl
mov
lods
cmpsb
push
or
jle
pop
cmc
adcl
mov
int
out
or
popa
sub
cmp
cmp
xchg
es
sbb
test
lret
inc
add
lcall
adc
pop
add
xor
sbb
mov
and
cmp
bound
cmp
fs
cli
mov
aam
lock
mov
cwtl
xchg
call
incl
cld
ljmp
sbb
inc
and
sbb
cmpsb
pop
or
mov
sbb
mov
push
fwait
fs
mov
pop
stc
sub
cmp
jmp
push
stos
insb
jecxz
imul
jno
adc
ret
ret
outsb
adc
and
ljmp
inc
xchg
push
lret
dec
int3
pop
div
mov
cld
add
aaa
in
decl
mov
mulw
loope
push
mov
mov
insl
jnp
mov
jbe
clc
jecxz
ljmp
mov
addl
adc
popf
cmc
or
mov
jg
mov
nop
fisttpl
or
jle
movsb
ds
mov
sti
popa
jb
fdivs
inc
ljmp
pop
mov
push
xchg
jbe
pop
test
lods
cmp
test
or
enter
jmp
roll
std
imul
into
pop
add
pop
lret
jle
sbb
sub
stc
sahf
imulb
xchg
ljmp
fucom
dec
add
sbb
repz
mov
jo
jnp
dec
inc
jno
inc
and
nop
cmp
incl
add
jl
mov
xchg
mov
mov
in
xchg
sahf
out
mov
add
inc
pushf
fnstsw
shrb
pop
xor
cld
xchg
adc
int3
stc
mov
adc
decl
decb
fldcw
pause
daa
sub
or
xor
fmuls
dec
add
out
rcl
jmp
lods
jnp
adc
adc
inc
adc
cmp
pushf
or
stos
jo
lock
sub
push
scas
mov
fisttpl
lret
out
add
scas
cwtl
lcall
cmp
jge
fwait
outsl
mov
adc
cli
in
mov
or
xor
xchg
ljmp
call
leave
jno
add
or
ficoml
mov
xor
repz
cmpsb
loopne
sbb
cmpsb
jmp
jecxz
mov
adc
jmp
in
popa
jbe
fbstp
fldcw
pop
cmp
inc
adc
fcmove
mov
mov
movsb
subl
xchg
xchg
and
in
lods
cmp
mov
mov
jge
dec
add
mov
decl
xor
inc
movsb
in
test
adc
inc
inc
repz
lock
ljmp
sbb
lret
push
sar
push
mov
js
dec
mov
xor
incl
int3
jae
in
push
sub
cmp
inc
jg
fwait
shll
aaa
aad
xchg
pop
iret
cld
sub
call
push
and
test
jmp
aas
sbb
in
or
data16
lea
pop
dec
adc
ja
lcall
inc
cld
sbb
adc
mov
pop
xor
xor
ret
mov
sarb
enter
sar
inc
lahf
mov
jae
cmp
jecxz
loop
pop
not
fdivrs
std
fsubrl
iret
pusha
repnz
lcall
ffreep
xlat
ja
push
adc
push
and
mov
xor
arpl
fildl
pushl
in
jo
rorb
dec
pop
gs
aam
lea
sbb
jp
repz
decl
ret
dec
push
cltd
data16
jbe
pop
cltd
xchg
ss
mov
xchg
cld
aaa
jl
data16
ds
dec
and
jbe
cwtl
pop
nop
or
jg
call
or
xor
sbb
cld
push
loopne
pop
and
loop
mov
ja
and
sahf
pop
xor
jmp
push
dec
mov
mov
bound
jg
lret
lret
adc
mov
or
pop
dec
jbe
mov
or
jge
inc
clc
idiv
sub
std
mov
push
fidivl
mov
jb
daa
jl
jg
push
test
or
idivl
or
lcall
pop
cmc
jge
je
out
or
sbb
fdivrl
cmp
jl
lcall
fnstcw
xchg
fstps
jmp
jo
and
je
ljmp
call
adc
loopne
mov
sub
and
jle
mov
int
lea
fnstenv
test
inc
sbb
scas
jmp
dec
push
cmp
dec
jmp
mov
aaa
mov
inc
cwtl
push
sar
sahf
out
inc
je
imul
daa
mov
or
mov
mov
arpl
fildll
lcall
es
jecxz
ds
scas
clc
mov
cmpl
dec
ds
push
push
imul
or
stos
add
lcall
and
xor
das
add
lret
push
mov
jmp
push
dec
and
sub
mov
dec
jae
cwtl
stos
mov
test
inc
lock
push
jg
add
xchg
ss
and
push
mov
decl
mov
push
sbb
sbb
mov
jl
jae
lods
nop
rcrb
cld
decl
or
scas
jno
int3
pop
push
push
and
incl
lock
fwait
mov
xor
out
push
cmc
pop
push
lret
js
stos
repz
ljmp
cli
xor
daa
mov
push
sbb
add
push
fisubl
fldl
addl
movsb
stos
adc
pop
out
pop
sbb
push
pop
mov
sbb
inc
mov
fdivp
loopne
lret
xor
mov
mov
xor
pushl
jg
inc
add
ds
inc
fsts
mov
xor
push
mov
call
add
lock
nop
aam
push
jp
clc
cs
xor
push
cld
pusha
jne
cmc
scas
mov
pushf
rcrb
aas
xor
into
pushl
out
push
stos
ficomps
enter
addb
ret
in
dec
or
cmp
cmp
push
fiadds
in
ljmp
mov
lea
ja
xchg
push
cmpsb
sbb
rolb
push
cmp
cmp
or
call
aas
repnz
in
sbb
cli
cld
dec
cld
es
lret
xor
adc
pop
enter
ljmp
clc
int3
sub
stc
pop
lods
mov
mov
daa
mov
ljmp
inc
stos
sti
cld
incl
xchg
cwtl
adc
or
mov
jnp
push
int3
cltd
pop
sbb
dec
mov
mov
enter
enter
call
push
adc
stos
sbb
mov
dec
push
test
popf
mov
sub
in
or
mov
popf
adc
adc
push
mov
mov
and
mov
adc
insb
ficompl
xchg
cmpsb
std
daa
in
push
cltd
sub
es
lcall
out
lods
outsl
outsl
inc
insb
xchg
cs
mov
notl
es
push
incl
loop
popf
mov
and
out
push
and
lcall
xor
xor
mov
mov
test
pop
or
call
call
mov
stos
daa
stc
and
movsl
nop
jb
sbb
dec
in
pushl
insb
dec
ljmpw
jl
call
data16
pop
or
fnsave
jmp
fbstp
jno
fldenv
inc
pop
cltd
adc
jo
dec
adc
jnp
adc
jno
ljmp
jae
jnp
stos
add
dec
icebp
mov
out
out
mov
jmp
cmpsl
out
pop
ljmp
mov
aad
xor
mov
mov
ljmp
into
pop
pop
pop
dec
movsl
inc
test
cwtl
icebp
fmull
mov
adc
rol
fdivr
fsubl
xchg
cltd
push
pushf
and
mov
enter
sub
jo
or
fldcw
fdivr
sub
mov
cwtl
lock
call
mov
mov
iret
mov
sbb
stos
out
movsl
or
ja
ja
mov
dec
sti
mov
jno
push
sahf
ss
push
mov
in
fisttpll
out
xchg
push
sbb
adc
cmp
decl
sahf
xor
and
jge
fyl2xp1
outsl
rcll
cmc
push
outsl
fsubrs
in
daa
fdivr
ljmp
sub
sub
jnp
push
subl
inc
push
lds
scas
sti
daa
cld
mov
add
test
cmp
and
roll
cmp
flds
push
dec
es
mov
sahf
test
call
fwait
std
divl
sbb
push
inc
and
mov
adc
std
into
adc
lcall
insb
cmp
es
sbb
imul
mov
or
push
adc
xor
mov
aas
subl
das
sub
fsts
lret
mov
jp
lods
divl
add
rcrl
decl
mov
ljmp
in
fwait
arpl
xchg
pop
jl
mov
fcmovu
mov
mov
and
aaa
cmp
in
add
xor
xor
cld
decl
fsts
pop
mov
stc
mov
cltd
sbb
mov
pop
pop
mov
jg
sub
fwait
mov
das
aas
ds
mov
or
cs
jb
mov
shlb
pop
mov
xchg
mov
push
out
lahf
add
inc
outsb
inc
iret
mov
push
lcall
test
sahf
stos
clc
xchg
jb
add
add
jl
in
pop
lods
mov
jmp
lea
sahf
jmp
incl
fstl
aaa
pop
insl
push
loop
out
stos
rcll
sarl
out
push
cmpsb
xor
call
mul
rorl
mov
xor
je
jae
cmpsl
dec
outsb
in
ljmp
xchg
test
or
adc
fmul
daa
push
or
icebp
in
cs
pushl
mov
xchg
and
push
sbb
push
icebp
push
sub
enter
mov
sti
js
ficoml
dec
xor
add
insl
inc
fwait
mov
lret
adc
orl
push
inc
repz
iret
out
fxch
sub
push
jge
or
repnz
ds
aad
repz
dec
scas
sbb
lock
sub
dec
iret
mov
cmp
mov
add
and
xor
inc
orb
pop
shrb
pop
pop
pop
rclb
test
dec
stos
add
ds
decl
push
add
fcmovbe
nop
xorps
dec
push
pop
out
jmp
xor
xchg
dec
mov
cld
pop
add
inc
int
lret
mov
sbb
incl
jo
mov
xor
mov
xchg
xorb
inc
pop
mov
insl
sub
xchg
in
mov
cmpb
cmp
mov
std
mov
test
repz
adc
xchg
adc
jmp
pop
outsb
jecxz
jae
pop
loopne
xchg
shll
cld
push
add
jg
movsl
and
mov
pop
dec
insb
pop
call
loop
aaa
pusha
xchg
dec
inc
cmc
and
daa
fiadds
or
jo
add
jnp
out
loopne
incl
movsb
dec
pop
dec
rcrl
ja
aam
sahf
cmp
lods
and
fidivs
push
xchg
jbe
mov
push
xor
popa
sbb
lret
decb
lcall
popf
push
inc
mov
nop
lahf
mov
aam
testl
pop
xor
cld
decl
cmpsl
xor
pop
and
ror
insb
je
cmp
jmp
pusha
jg
call
xor
add
add
das
jbe
insb
nop
test
loopne
adc
nop
pop
imul
cs
dec
scas
push
push
sub
repnz
rclb
incl
imul
cmp
fdivl
test
lods
stos
push
xor
xchg
jg
jmp
lock
ja
mov
push
insl
inc
xor
aas
push
pop
dec
scas
aas
arpl
or
decl
lods
lahf
psubd
test
mov
pop
lcall
mov
pop
test
lea
lcall
adc
iret
incl
movsl
ds
cli
jecxz
clc
testl
loop
pop
add
lret
cmp
sub
jmp
sub
insl
into
mov
orl
inc
adc
or
cmp
mov
xchg
repnz
fdivs
inc
sub
lea
jne
mov
pop
loop
ja
les
es
popf
dec
mov
clc
lcall
xchg
sahf
das
fnsave
aaa
mov
cld
into
xchg
ljmp
es
jp
xlat
adc
jmp
or
or
mov
mov
jb
mov
jmp
mov
mov
bound
test
imul
mov
nop
xchg
negb
cld
call
inc
xchg
adc
cmp
enter
rcrl
mov
fsubs
jno
call
mov
jg
mov
in
or
xchg
push
sub
or
int
clc
push
sbb
or
lcall
gs
mov
or
test
ret
dec
ljmp
movsl
fistps
mov
add
ret
pusha
lock
ds
pop
jle
imul
xchg
decl
mov
mov
rolb
ljmp
enter
mov
adc
xchg
dec
movsb
gs
lea
clc
aas
cmp
decl
loop
sti
jno
enter
aad
mov
ss
jg
or
sahf
lcall
inc
pop
fdivr
push
add
fadds
out
adc
call
data16
shl
fistl
adc
mov
cld
call
cmp
shrl
xchg
aam
and
testl
xlat
aaa
lcall
shll
js
int
adc
xchg
dec
test
dec
jecxz
dec
outsb
mov
ss
dec
adc
cmp
sub
pop
call
mov
jg
ret
add
dec
into
cmp
shrl
pushf
call
aaa
rolb
cmpb
push
push
xor
out
int3
movb
cmc
push
jmp
inc
lret
fiadds
mov
cmpsb
mov
inc
in
xchg
call
outsb
fldl
mov
in
mov
inc
sub
sbbl
inc
imul
jle
aad
fwait
les
xchg
mov
xorb
mov
adc
insl
in
push
test
push
mov
nop
inc
jmp
dec
out
mov
js
in
fstps
neg
insb
lock
mov
aad
mov
push
xorl
in
dec
adc
nop
jb
icebp
sub
call
call
xchg
jb
decl
pop
mov
lea
xchg
aad
insb
ja
pop
dec
push
jb
das
bound
test
push
decl
cld
sbb
push
ret
pop
cs
pushf
push
ja
cltd
out
jbe
aam
fwait
jnp
push
sub
decl
fldt
add
ficomps
or
dec
or
scas
fdivr
ljmp
js
pop
xor
sbb
movsl
cs
sbb
call
adc
sbb
ret
mov
adc
mov
scas
icebp
stos
mov
outsb
dec
mov
out
cli
ljmp
push
push
adc
rclb
adc
mov
or
push
je
inc
mov
lcall
lock
dec
cld
sub
dec
test
in
adc
and
sbb
cmp
push
lock
ret
mov
loopne
stos
sete
mov
or
mov
pop
inc
or
dec
pop
cmc
push
or
xor
cltd
fsubs
repnz
cmpsb
push
mov
push
lock
jmp
mov
adc
mov
outsb
sub
xchg
or
mov
movsb
in
or
in
pop
int
addr16
decl
cmpsl
movsl
int3
lahf
xchg
clc
jnp
lret
fwait
xchg
pop
lret
out
in
dec
ret
ss
mov
lcall
rol
mov
leave
add
or
leave
incl
xchg
lcall
jne
xchg
xor
cmpsl
or
imul
leave
stos
jb
xor
sbb
call
std
jns
dec
jae
mov
xchg
lea
xor
scas
es
das
sarb
mov
lock
insl
adc
imul
fists
iret
daa
fwait
iret
jl
mov
pop
pop
insl
mov
mov
inc
dec
sbbb
mov
jne
sub
jecxz
call
hlt
jecxz
sbb
cmp
lea
cltd
jno
mov
outsb
xlat
mov
insb
mov
out
and
out
js
cmp
xchg
push
sar
mov
cld
mov
push
out
push
xor
mov
imul
add
jmp
out
shlb
and
leave
pop
popf
in
insb
icebp
cmpsb
rorb
cwtl
sbb
icebp
stc
mov
std
adc
push
or
ret
add
mov
mov
lods
mov
mov
and
pop
lcall
dec
inc
test
xlat
repz
fcmovnu
dec
push
lea
mov
jl
sbb
in
pushl
ds
insl
or
bound
enter
pop
push
pusha
add
cmp
mov
or
mov
nop
xchg
or
hlt
sub
lods
add
inc
mov
lcall
push
shl
scas
cmpl
repnz
orb
mov
dec
lret
call
decl
sbb
jl
or
jae
pop
mov
fimuls
repnz
xchg
out
pop
cmc
jmp
jo
movsb
push
xor
adc
add
push
push
movsl
loop
cwtl
pop
jo
je
lcall
add
sbb
sbb
lock
cld
sbb
push
and
cmp
jmp
or
rclb
sub
pop
dec
adc
jbe
int3
fcompl
push
mov
xor
pushl
xlat
in
mov
lahf
repnz
pop
aad
mov
cli
ljmp
pushl
repz
push
push
sarl
popa
and
mov
ja
jg
sti
test
mov
dec
outsb
pop
xor
mov
and
inc
pusha
dec
jmp
test
test
mov
and
mov
xor
xor
ljmp
fisubl
xchg
cmp
stos
adc
adc
jae
adc
adc
mov
cwtl
lret
ljmp
xchg
jecxz
or
fistpl
sub
lea
sbb
mov
and
adc
decl
add
cmp
ficoml
lods
inc
mov
jle
into
sahf
insb
bound
push
cmp
ljmp
jp
sbb
roll
cmc
push
mov
mov
aam
inc
or
jb
inc
mov
inc
popa
out
sbbl
popa
mov
mov
mov
push
arpl
dec
stc
mov
test
pop
pop
scas
sub
gs
mov
mov
divb
sub
cmp
pusha
and
add
fcomip
jne
shlb
orl
orb
xor
jmp
mov
out
mov
ret
in
shrb
addr16
cmpsb
mov
into
xchg
scas
pop
into
sbb
fsubp
je
call
in
clc
lahf
add
and
clc
xchg
imul
aas
popf
cmc
cmp
jecxz,pn
daa
mov
jge
lret
dec
fildl
mov
scas
cwtl
addl
sub
mov
aaa
jl
cmp
ljmp
inc
out
fisubs
xchg
and
lods
fbstp
sahf
cmpsl
sbb
jge
jae
lcall
mov
into
jnp
pushf
pop
add
mov
jno
mov
lcall
push
sarb
xor
das
xchg
push
add
dec
pop
pop
sub
popa
jg
xor
dec
push
pop
dec
loop
cwtl
xor
fdivl
inc
push
out
mov
in
repz
or
mov
xchg
xor
int
push
cmp
cmp
int
cmpsb
or
lock
incl
cltd
cli
out
dec
and
push
jns
dec
in
enter
bound
les
movsl
lods
hlt
call
xor
xor
std
subl
mov
cmp
call
adc
ret
int
stc
test
jne
iret
pop
push
mov
movl
test
roll
mov
daa
xor
pop
pop
pop
mov
mul
push
ret
sbb
mov
out
push
push
cmc
fs
out
pop
data16
pop
xor
push
dec
clc
fwait
push
int3
mov
dec
push
int3
lock
mov
jl
stc
xchg
test
xchg
xchg
movsb
sbb
movsb
movsb
cmp
pop
push
pmulhw
call
orb
xchg
or
test
mov
jne
cltd
pop
push
xchg
adc
fmuls
jbe
adc
lcall
adc
outsb
push
lea
testb
test
pop
jne
stos
ja
mov
call
aam
leave
test
xchg
fstl
shll
push
jge
inc
push
or
cmc
pop
mov
ds
rorl
adc
out
bound
inc
inc
loop
mov
jmp
lcall
in
xchg
loop
jo
cld
dec
in
or
divl
mov
decl
pop
sub
cmp
adc
or
adcl
cmpsb
push
pop
pop
icebp
inc
lods
push
dec
xchg
inc
or
gs
in
cwtl
int
sub
add
lods
fdiv
stos
divb
jmp
ret
xor
jb
imul
cli
xchg
cmpsb
mov
mov
xor
ljmp
out
add
dec
or
js
nop
gs
lds
fcmovnu
pop
mov
push
decb
mov
mov
pop
in
xchg
aaa
lret
jecxz
fcomip
sub
sub
pusha
inc
xor
cmpsb
aam
mov
jns
fisttps
decl
dec
ret
ljmp
or
scas
mov
mov
aas
mov
push
xchg
decl
pop
les
les
and
push
xchg
cld
les
ror
je
loop
ljmp
outsb
adcl
mov
dec
xchg
sub
lods
jp
call
out
xchg
cmp
insl
adc
xchg
jb
out
mov
add
data16
fcmove
into
adc
mov
fadd
sahf
ret
xor
adc
mov
aaa
adc
enter
xchg
enter
loop
lcall
mov
xchg
cmpsb
adc
fsubr
push
pop
push
add
lret
xchg
mov
push
cmp
mov
push
push
js
gs
pop
cwtl
insb
xchg
aad
add
loop
adc
ljmp
dec
adc
xor
xchg
out
repz
cmpsb
sbb
jg
ja
cmpl
test
xor
push
cwtl
repz
incl
mov
adc
push
out
lods
mov
push
shlb
jmp
mov
imul
sub
xchg
jb
jge
ljmp
cmp
das
mov
outsl
fst
popf
push
leave
rcrl
sbb
xor
scas
pushf
cmp
ljmp
xchg
inc
or
test
dec
push
xchg
dec
mov
xchg
testl
pop
outsl
dec
inc
ljmp
lcall
std
lea
popf
mov
dec
jge
aam
mov
outsl
sbb
ljmp
clc
arpl
pop
imul
pop
and
mov
fnstenv
mov
daa
mov
jg
popa
mov
adc
adc
sbb
into
jne
aam
cmp
movsl
call
jg
mov
ret
pusha
fisttpll
fwait
outsl
push
xchg
repnz
inc
sar
fcomip
xchg
fists
jmp
test
aaa
in
mov
sar
jge
mov
add
cmp
in
into
xor
xlat
push
ljmp
xchg
ljmp
out
xchg
pop
inc
push
pop
enter
sub
out
cmp
ljmp
xor
pop
lods
adc
movsb
scas
cmp
push
jae
ljmp
cmp
mov
shrl
sti
mov
sbb
xchg
sarl
fadds
mov
mov
decl
stos
nop
fsubp
inc
or
cwtl
stos
fildll
fdivr
not
jb
dec
call
pusha
sub
inc
push
xor
pop
push
lods
or
cld
addr16
mov
call
out
xor
cmp
adc
cld
add
enter
js
cmp
filds
fcom
call
cmpsl
mov
and
test
stos
xchg
pop
adc
cli
ljmp
push
rorb
xor
movups
xchg
mov
or
stc
hlt
imul
cld
decl
popa
jbe
sbb
sub
bnd
or
lock
and
aad
bound
decl
std
stos
xlat
xor
or
jne
jo
xor
mov
push
mov
mov
push
add
and
add
sub
cmp
sbb
xchg
mov
mov
out
sbb
scas
cld
mov
lock
out
pop
test
jbe
cwtl
mov
mov
jl
in
mov
mov
jge
dec
mov
or
stc
mov
fnstenv
cmp
std
mov
push
xchg
sahf
xchg
les
imul
ljmp
clc
pop
sub
adc
jmp
je
and
xor
repnz
int
mov
dec
sub
int3
lea
fistps
sub
mov
push
mov
mov
sbb
ror
cmp
and
and
push
shll
paddq
incb
xchg
mov
push
adc
ljmp
cli
jl
push
add
push
push
inc
je
jae
hlt
mov
pushf
js
and
adc
lahf
out
call
cld
bound
push
pop
scas
lods
sub
punpckldq
roll
dec
test
loope
mov
ljmp
jno
sbb
pop
sub
cld
or
jae
decl
hlt
mov
sarb
xchg
pop
inc
hlt
mov
ffreep
pop
stc
xor
dec
rcll
dec
out
lods
in
arpl
and
mov
dec
lcall
cmp
jbe
es
test
mov
cltd
dec
imul
jge
and
mov
lcall
mov
cltd
aam
xor
mov
inc
ss
jmp
fnstenv
lock
jb
mov
loop
add
jne
sbbb
pusha
jbe
adc
pushl
dec
add
mov
cmp
and
xor
dec
cwtl
insl
and
call
int3
sub
xor
sar
popa
mov
mov
mov
call
fistl
and
fmuls
add
xchg
sarb
sub
mov
into
and
pop
into
xor
adc
incl
sahf
cltd
xchg
adc
adc
hlt
cltd
push
sbb
test
adc
push
shlb
mov
cltd
mov
sbb
jg
push
movsb
pop
push
xchg
sub
cltd
data16
jo
mov
or
fcomip
xchg
ret
insl
sub
lret
mov
mov
inc
pusha
cmp
xchg
and
sbb
je
and
pushf
aas
mov
mov
test
cmp
fimull
pop
inc
out
jmp
pushl
out
push
out
inc
addr16
icebp
lock
adc
and
ljmp
and
jl
dec
dec
js
loope
and
jb
or
into
incl
in
sbb
dec
out
adc
xorl
test
insl
jbe
sbb
insb
xor
push
dec
fsts
ss
outsl
fstpt
out
and
test
inc
add
filds
ljmp
pop
pop
xor
rclb
inc
jg
dec
mov
xor
fmul
push
rcrl
lcall
fmul
nop
push
dec
jmp
or
sub
call
sar
rorl
cli
rcrl
adc
fsubrl
dec
fmulp
pop
xlat
cmp
pop
jne
mov
outsb
mov
repnz
call
lcall
xchg
add
cmp
dec
pushf
iret
and
xchg
decl
ss
jo
pop
pop
push
sbb
dec
pop
addl
aaa
dec
ret
sub
mov
mov
mov
cmp
clc
cmpsl
addl
pop
cs
add
mov
xor
mov
test
or
orb
xor
inc
push
or
ss
fimuls
push
mov
xor
incl
scas
repz
dec
das
mov
push
out
inc
pop
or
xchg
frstor
insb
or
insl
test
bswap
es
push
or
mov
sbb
jp
inc
sahf
repz
sahf
jg
xor
outsl
popf
pushf
mov
int
dec
xchg
pop
xchg
popa
jb
sbb
aam
stos
fsts
sub
loop
pop
mov
lcall
push
mov
fs
shlb
cmc
insb
push
jae
inc
cmp
daa
pop
add
ret
sub
or
sti
pop
mov
call
inc
jge
lahf
cmpl
pop
ret
sahf
hlt
cmpsl
dec
ss
adc
mov
fdivp
subl
adc
xor
xor
lcall
dec
adc
jl
push
iret
fidivs
int3
mov
jnp
jns
xor
push
push
rcrl
pop
push
jle
imul
cmpl
cmp
dec
je
shl
testl
incl
inc
dec
es
test
mov
fdivrs
inc
int3
insb
xor
xor
clc
call
in
pusha
or
in
xchg
mov
decl
lock
in
jno
adc
cmp
mov
int
mov
xchg
xchg
insl
xorps
call
lahf
pop
sbb
jbe
int3
or
aaa
push
rcll
das
movsl
add
mov
lcall
pop
xchg
lds
mov
xlat
inc
mov
xor
add
bound
fs
dec
push
jmp
push
ds
sub
jg
push
loope
ljmp
insl
mov
jg
and
pop
pop
add
and
pushf
inc
cs
pop
lods
and
movsb
dec
roll
jle
dec
dec
nop
aad
icebp
lods
xchg
sar
mov
inc
leave
pushf
xchg
pushf
adc
stos
int
push
lds
adc
lods
pusha
js
mov
lcall
outsl
push
xor
xchg
fisttpl
xlat
loopne
push
test
add
call
cmpsb
mov
les
adc
adc
mov
xchg
mov
sbb
mov
insb
xor
test
add
push
push
lret
mov
js
adc
lock
mov
xchg
mov
sbb
incl
jp
add
mov
cld
std
shrb
inc
jle
test
push
mov
jnp
mov
lcall
jmp
pop
stc
push
sub
imul
iret
mov
jae
sar
adc
mov
mov
call
push
xchg
ljmp
and
lea
mov
adc
jno
jns
sbb
jmp
adc
popa
stos
shlb
fs
ret
push
or
mov
add
and
mov
scas
or
lcall
jns
xor
iret
clc
and
cld
inc
test
inc
fnsave
pop
mov
xchg
clc
add
or
out
xchg
mov
fcomps
nop
add
sbb
rcl
push
jne
add
xor
add
sbb
add
push
das
push
call
inc
std
setp
sub
inc
arpl
xchg
jg
push
lock
xor
out
rcrl
push
cmp
mov
inc
mov
jmp
decl
pop
sbb
inc
inc
mov
leave
adc
push
and
mov
idivb
std
mov
js
adc
pop
inc
movsl
insb
mov
fcomip
mov
std
aad
sahf
dec
jle
sbb
fwait
outsl
cs
leave
inc
fldl
call
adc
cs
add
cmpb
xchg
shlb
out
clc
pop
mov
pushl
mov
ljmp
push
insl
inc
cltd
leave
jne
jae
rol
or
pusha
sbb
in
ljmp
mov
cmp
lahf
xchg
scas
mov
cld
cmp
push
or
lcall
leave
int
pushf
xor
cmp
ja
lcall
mov
jl
xchg
mov
mov
test
sar
mov
jecxz
pop
adc
sub
sub
jbe
lods
mov
shrl
clc
mov
std
push
and
jmp
fsubrs
icebp
repnz
or
push
xchg
xchg
rcl
jo
daa
lret
insb
cmpsl
jns
or
or
or
pop
ljmp
or
inc
inc
inc
fcomip
sub
faddl
je
test
repz
aam
xor
cmp
jmp
mov
xor
ss
push
adc
sbb
push
fdivs
in
xor
mov
mov
sbb
and
sub
mov
incl
dec
push
push
fcompl
mov
and
cmp
ret
test
xor
cs
ljmp
push
pop
lahf
dec
movsl
cld
xchg
jecxz
sub
lret
sbb
adc
in
jne
call
sbbb
and
xchg
in
mov
jnp
icebp
arpl
pop
and
inc
in
lcall
addr16
cld
call
and
jbe
gs
push
mov
mov
lock
out
xlat
rcll
into
sti
mov
mov
mov
outsl
fwait
lds
lret
sbb
fsubp
pop
cmp
mov
xchg
lret
sub
les
and
arpl
hlt
push
mov
pop
push
pop
into
call
std
inc
pop
fdivrs
inc
fldenv
out
jnp
cmp
outsl
cmpb
ljmp
mov
insl
push
inc
jl
cmp
adc
addb
iret
pop
jmp
scas
cli
call
cltd
jle
cmp
outsl
pop
dec
out
xchg
inc
pop
imul
fcos
das
clc
aad
sub
push
in
clc
insl
out
cmc
xchg
bswap
addb
jmp
mov
iret
sbb
sub
incl
push
xlat
adc
xchg
cmp
addr16
adc
pushf
out
mov
push
sbb
or
or
xor
sbb
push
fwait
and
stos
inc
dec
pop
mull
mov
xlat
ffreep
add
mov
mov
cmpsb
mov
incl
sub
lea
leave
dec
and
push
pop
inc
sbbb
ljmp
mov
jg
pop
icebp
es
aam
inc
stc
xchg
jecxz
push
push
lcall
mov
lahf
mov
fiaddl
jne
and
cmp
hlt
decl
outsl
rcll
fisttps
loope
jle
mov
pop
inc
loope
out
incl
push
cmp
jmp
dec
fbstp
pushf
scas
mov
mov
sub
loop
pop
sbb
test
invd
xchg
adc
call
je
into
xchg
mov
cmpsb
adc
sbb
stos
jecxz
cwtl
clc
ds
adc
decl
inc
hlt
cmc
in
xor
add
jne
sub
pushl
or
jg
mov
lcall
mov
fcmovu
pop
movb
call
mov
icebp
rorb
shlb
ret
pop
sbb
jmp
sub
xchg
nop
cltd
hlt
pop
jne
std
fcomi
pushf
cmp
mov
mov
adc
lea
mov
out
dec
jb
scas
call
sub
pop
xchg
mov
jbe,pn
xor
je
add
push
orb
fdivrp
call
add
cld
popa
fstl
xchg
add
push
pusha
or
mov
adc
pop
mov
xor
lcall
sbb
int3
mov
jmp
pop
repz
clc
decl
mov
lcall
mov
fcmovne
mov
jle
mov
test
mov
jmp
ret
push
ja
mov
mov
cmp
add
je
mov
iret
popl
and
adc
loop
idiv
jg
lcall
in
add
loop
ja
in
xlat
jg
mov
ja
or
jg
inc
push
push
cltd
bound
andl
ljmp
xlat
xchg
mov
mov
cmp
orl
and
fisttpl
mov
dec
adc
inc
insl
xchg
insb
push
std
lahf
sti
call
dec
sub
imul
or
jmp
in
js
add
and
and
cmp
xchg
call
jl
sbbb
fs
cli
cmp
popf
cmpsl
aam
mov
pop
push
inc
test
mov
incl
call
push
add
and
scas
and
sarw
or
mov
ljmp
subb
int
jbe
push
sti
sub
dec
ret
sub
lods
cli
clc
inc
movsl
pop
cwtl
push
loop
cltd
mov
add
lds
pushf
sub
ret
imul
mov
push
nop
gs
sub
sbb
rol
popa
addl
int3
imul
xchg
aad
push
sub
mov
push
fisubl
fsubs
lahf
loop
pop
pop
dec
clc
incl
xorb
lock
movsl
shlb
hlt
jmp
clc
jl
jmp
sbb
cmp
adc
sub
jge
ljmp
ds
loope
addr16
into
fistl
xor
fnstenv
sub
ss
stos
pop
jmp
dec
mov
and
fisttpl
push
decl
or
and
movsl
out
rcrb
inc
and
pop
ret
pop
aam
and
or
mov
stc
fstps
xchg
enter
ffreep
hlt
cmpsl
sbb
ljmp
xorb
mov
test
sub
inc
pop
adc
rcll
scas
clc
adc
push
sti
mov
or
ret
and
cmp
ljmp
jp
fistl
xchg
push
lock
ss
nop
ljmp
and
int3
pop
xchg
pusha
call
pop
ds
pushl
jp
pop
adc
cwtl
cmp
jg
cwtl
cmpsl
rcrb
cld
lock
push
mov
mov
mov
ret
inc
xor
pop
cmpb
out
movsl
and
inc
daa
bound
and
jg
mov
xchg
and
jmp
lret
inc
mov
cli
cltd
push
adc
das
stos
cmp
xor
enter
sbb
std
lcall
mov
repz
push
scas
ss
loopne
pop
inc
add
cld
clc
mov
gs
cmp
sar
mov
push
shrb
dec
pop
cmp
scas
xor
or
cmpsl
xor
stos
cwtl
xchg
mov
jg
cld
xor
or
in
imul
das
xchg
subb
xchg
jbe
adc
popa
mov
mov
or
cmp
cmpl
push
adc
imul
inc
or
call
and
and
pop
test
dec
dec
push
stos
push
jae
pop
lds
in
push
lcall
insb
mov
cmpsb
sub
fildl
out
push
divb
mov
loope
jmp
mov
out
push
and
cwtl
push
xor
das
sub
cwtl
adc
and
popf
addr16
std
jle
dec
enter
mov
push
leave
js
fnsave
mov
pop
adc
call
gs
sub
mov
sti
or
and
xchg
pushf
movsb
lcall
dec
subl
outsl
les
fs
jmp
js
mov
xlat
shrl
pop
test
lcall
xor
pop
inc
dec
data16
out
push
pop
movsb
das
movsb
xlat
clc
sub
push
add
and
jne
out
ss
jno
xchg
stc
aam
roll
call
mov
decl
jmp
add
mov
int
sbb
std
or
xchg
leave
dec
jae
jnp
sti
push
pusha
mov
test
pop
mov
mov
mov
xchg
adc
jmp
jmp
lods
sarl
xchg
or
repz
xchg
push
or
lods
dec
dec
push
scas
inc
sbb
decl
lcall
add
xchg
mov
andb
shl
stos
into
adc
pop
stos
fxsave
bound
pushf
ffreep
inc
loop
bound
lcall
subb
bound
cmp
jmp
xchg
fldpi
inc
insb
filds
sbb
xchg
jecxz
inc
xor
mov
repnz
pop
test
daa
cmpsl
xor
mov
cmpsb
into
jo
sarl
pop
add
aas
jl
fstl
pusha
jno
ljmp
add
clc
sub
jne
xlat
or
popa
sbb
fs
mov
iret
inc
insb
xor
and
cmp
mov
stos
mov
xchg
les
loop
sbb
pop
cltd
call
and
out
aas
sbb
cli
jmp
shrl
pop
loope
pop
lea
pop
push
jnp
les
clc
sub
inc
push
mov
fsubrl
xor
push
int3
or
shll
xchg
adc
dec
test
call
add
or
cli
cmpsb
ror
cld
xor
pop
lret
movsb
pop
scas
pop
jle
lahf
and
jg
dec
testb
fmull
dec
fstpl
shlb
dec
decl
lock
cmp
lock
jbe
add
adcb
pusha
pop
mov
jl
xchg
ljmp
loope
lock
mov
push
fwait
sbb
fldt
lods
ror
ljmp
les
jbe
push
mov
subl
stos
pushl
adc
ja
mov
mov
dec
hlt
aaa
jp
inc
mov
out
mov
incl
sub
pop
cmpsl
fstpt
out
mov
stos
call
push
ljmp
mov
push
shll
xor
test
ljmp
sbb
outsl
pushf
sub
stc
subb
imul
adc
cli
out
jo
inc
xlat
pop
repnz
ljmp
xchg
popf
jb,pt
add
add
test
jae
int
ljmp
inc
imul
pushf
mov
xchg
sbb
dec
push
xchg
adc
xor
mov
or
rcl
cld
pushl
or
clc
ss
aas
dec
xor
test
scas
popf
ljmp
fcos
decl
xor
xor
out
add
or
test
push
add
subb
mov
sbb
push
loope
test
cmp
lcall
xchg
pop
mov
mov
rcl
add
out
mov
pop
and
lcall
mov
pop
jmp
adc
out
les
aas
xor
lcall
xor
aaa
dec
mov
scas
addr16
test
lahf
and
cmp
cmp
dec
add
pusha
pop
push
cmpsl
andb
call
jmp
push
xchg
mov
aas
cmpsb
jae
daa
push
pop
bound
dec
aad
mov
ljmp
inc
sub
sub
xchg
es
mov
in
mov
dec
jg
inc
cld
push
or
jg
push
and
int
cltd
mov
cld
lcall
call
aad
xchg
in
adc
and
or
test
cmp
push
push
push
fwait
scas
or
mov
ljmp
lcall
xor
jbe
jbe
loop
rorb
pop
out
dec
dec
arpl
movsb
xchg
lods
pop
push
mov
sarb
and
or
jns
xor
in
mov
call
shr
je
add
iret
cmc
add
stc
jp
dec
sar
pushl
aas
push
jne
and
ret
arpl
jae
dec
iret
out
data16
add
ds
les
mov
mov
mov
push
dec
jl
or
out
incl
cld
jg
jbe
ficompl
pushf
xchg
pop
pusha
adc
fwait
lock
inc
ljmp
iret
out
push
sub
xor
cwtl
jge
test
jo
inc
ret
mov
pop
and
pop
jl
pop
std
mov
das
or
fcomp
gs
call
mov
daa
sbb
scas
imul
or
roll
push
scas
shl
das
notb
jg
sti
icebp
dec
adc
dec
int3
out
into
loope
mov
fmuls
lret
roll
and
call
int
test
sub
arpl
jo
dec
pushf
sub
dec
jecxz
call
jle
jb
flds
push
ret
into
repnz
enter
mov
inc
das
clc
pushl
mov
xchg
dec
fcom
cmp
je
insb
sub
dec
add
adc
sub
fwait
adc
or
push
adc
ss
adc
ljmp
leave
jecxz
stos
dec
jns
add
fildll
outsl
loopne
ret
std
xor
cmpsl
into
xor
movsl
sar
add
rorl
push
dec
sbb
cmp
push
pushl
jp
dec
push
lods
mov
xchg
lods
inc
and
or
call
mov
cmp
sub
inc
xchg
jno
adc
jmp
jle
cmp
gs
popf
jp
jmp
cmc
out
int
clc
push
lods
cltd
xlat
cmp
sahf
test
sbb
sub
fbstp
lea
adc
xchg
cmp
mov
lds
rcrb
sti
scas
mov
inc
fdivl
inc
cmp
ja
jne
orb
dec
cvtpi2ps
or
push
inc
mov
in
cmp
imulb
jae
sbbb
lahf
fldenv
ljmp
sub
roll
push
testl
lds
xchg
mov
mov
lcall
xlat
mov
scas
pushf
int3
dec
arpl
mov
lcall
ret
out
xor
xor
cmp
cs
mov
lcall
nop
inc
sti
and
out
jnp
pop
in
jb
cs
out
xchg
inc
rorb
lock
decl
sub
movsl
fs
dec
push
xchg
and
sbb
lcall
jae
iret
jnp
mov
push
movl
or
in
cmpsb
mov
call
test
loop
pop
imul
xor
int
fimuls
jns
add
test
push
dec
clc
das
enter
scas
mov
ljmp
insb
xchg
and
push
lods
int
movsb
jle
push
cmp
mov
je
mov
dec
testl
or
ds
fstpl
ror
xor
int
subl
jb
scas
out
mov
add
mov
cmpsl
cmp
aaa
jmp
out
dec
jb
or
out
arpl
mov
xor
jp
cmp
push
loope
call
pop
and
adc
mov
call
xchg
sub
daa
mov
adc
movl
fcomip
call
cmp
addr16
add
jmp
pop
cld
fistpll
decl
es
sahf
fcoms
jg
mov
and
mov
push
mov
xor
sahf
incl
imul
dec
cmp
mov
mov
out
and
jns
icebp
aad
ss
lcall
cmp
sub
ret
loope
movsl
adc
les
mull
mov
decl
mulb
sahf
ss
dec
std
jo
ret
xor
dec
jge
inc
and
punpcklbw
call
add
jge
ljmp
in
push
mov
adc
inc
push
cmc
push
and
xor
xchg
jno
and
cli
mov
ret
sub
lock
sahf
pusha
pop
and
mov
ret
jp
mov
iret
notl
lret
ljmp
dec
add
cmp
push
xor
lcall
inc
xchg
adc
pop
js
mov
cli
popa
ss
and
adc
push
pop
insb
xor
lcall
ss
mov
adc
lret
xchg
fsubr
lahf
stc
lahf
insb
into
adc
ss
sbb
mov
insl
out
stc
adc
pushf
or
push
aaa
pushf
popf
lea
mov
inc
sbb
push
jp
and
int3
lock
jle
mov
sbb
pop
pop
mov
xor
pushl
sar
es
out
stos
loopne
cld
fmuls
add
or
fwait
pop
or
movsb
mulb
fwait
pop
sub
lret
mov
mov
decl
mov
sti
cld
ja
jp
cwtl
jl
iret
je
loope
sbb
movsl
shll
xchg
out
test
ljmp
mov
lgs
adc
or
test
pop
and
inc
sub
daa
push
popf
jg
or
in
xchg
div
lcall
dec
cmpsb
jmp
arpl
mov
adc
pushl
dec
leave
sbb
test
inc
xor
into
orl
and
decl
test
fmull
out
jge
mov
shll
test
outsl
es
or
jbe
movb
movsb
mov
adc
pushl
push
jb
add
fstps
mov
adc
jp
bnd
dec
mov
lcall
xor
addl
pop
dec
inc
int3
outsl
push
sbbl
bound
test
or
push
dec
jle
pop
dec
ljmp
lcall
ds
xchg
push
cmp
sbb
sub
sbb
jle
or
xchg
div
scas
leave
call
mov
or
out
push
cmovg
out
loop
dec
mov
test
mov
mov
adc
aaa
xor
push
jae
jp
or
addl
mov
or
cmpsb
insb
mov
rclb
fisubrs
repnz
jmp
mov
push
sbb
sbb
push
inc
add
mov
xchg
in
mov
xchg
mov
add
ja
jp
pop
xor
outsb
out
movsl
push
pop
aas
fdivr
push
add
and
push
jg
out
sar
daa
into
push
mov
decl
cmp
jne
andb
sbb
jnp
inc
test
pop
push
in
sub
call
in
push
je
pop
mov
and
mov
movsl
shl
mov
mov
jecxz
fdivr
ljmp
je
nop
gs
fbld
adc
inc
adc
sbb
out
stos
dec
pop
in
clc
and
ljmp
inc
push
fiaddl
jae
adc
push
or
jmp
cmp
cli
pushl
xchg
jo
in
inc
inc
loopne
stc
dec
push
insl
push
push
data16
fistpll
lret
incl
push
jge
inc
fildll
jle
jae
orl
jp
adc
pop
aaa
ljmp
xchg
arpl
and
test
xlat
addr16
test
push
jns
lahf
leave
push
push
pushf
sub
pop
push
sub
rclb
mov
shrb
ljmp
inc
mov
test
add
jmp
les
inc
bound
cmp
testl
jmp
mov
leave
sbbl
fdivr
dec
xor
jmp
call
jle
cmpsl
mov
arpl
and
pop
into
mov
sbb
xchg
adc
iret
jns
scas
das
mov
clts
dec
adc
dec
fmull
mov
sub
cmc
fwait
or
loopne
aad
lock
adc
cltd
jmp
bswap
mov
cld
scas
mov
popaw
das
pop
and
mov
dec
out
sbb
or
jnp
jp
mov
call
test
add
jp
add
and
mov
cmp
or
cli
jae
arpl
movsb
andb
dec
arpl
inc
mov
xchg
lcall
bound
mov
clc
clc
push
adc
xor
in
mov
adc
call
es
sub
push
or
mov
jo
push
push
jmp
icebp
decl
mov
lret
cltd
orl
cmpb
ficomps
sub
ljmp
jae
or
dec
mov
fistpl
push
fcmovu
sbb
push
popf
in
cmp
jmp
das
xor
cmp
push
xor
scas
insb
cmpsl
jg
in
clc
adc
les
sub
cwtl
es
jmp
sbb
jge
pushl
cmpsl
out
adc
cmpsb
in
lods
jb
dec
outsl
pop
add
push
mov
mov
adc
jmp
add
dec
fwait
pop
xchg
adc
loop
mov
cld
jo
add
inc
jnp
out
mov
pushl
fldlg2
dec
ficompl
js
jl
cmpsb
jle
add
or
int
call
fiadds
dec
arpl
call
pushf
jns
pop
dec
mov
in
jno
add
jmp
add
mov
inc
mov
push
xor
data16
jb
xchg
outsl
jmp
ds
and
and
xchg
pop
fsts
rorb
repnz
stos
decl
dec
push
daa
mov
cld
daa
es
add
push
and
scas
clc
mov
cld
es
jne
pop
jo,pn
sti
sub
incl
movsl
fs
jecxz
push
fiaddl
or
mov
xchg
and
pop
cmpsl
pusha
data16
outsl
or
mov
dec
jmp
shll
push
fwait
sub
or
pop
int
push
mov
jnp
mov
stos
rol
ljmp
dec
sbbl
xchg
in
mov
cmp
mov
sbb
sub
xor
sub
pop
lcall
mov
sub
into
dec
and
aam
xorl
and
inc
sub
imul
dec
test
pushl
inc
jo
jae
scas
ds
and
pop
push
rorl
repz
test
loopne
cmp
jg
lcall
pushf
lret
addr16
pop
sub
ljmp
xor
xchg
addl
dec
or
bound
cmc
test
and
dec
dec
cmp
test
mov
add
jge
mov
jmp
dec
add
push
jle
and
add
je
xor
pusha
lods
mov
pop
cmp
sti
ffree
add
sub
and
mov
sbb
aaa
aaa
pop
loop
dec
hlt
aaa
ljmp
mov
add
into
cld
adc
ss
movsl
in
ljmp
mov
xor
aas
in
xchg
xor
scas
xorb
imul
hlt
add
ljmp
push
fildll
jg
inc
stc
lods
pop
cmpsl
dec
test
cld
shlb
cmp
out
mov
out
and
xor
lds
jo
cmpsb
lds
pushl
sbb
sbb
cmpsl
cmpsl
cmp
jo
incl
lret
or
cmp
dec
mov
mov
stos
jge
ds
out
sbb
mov
js
add
in
fisubrs
inc
js
lods
xchg
pop
add
pop
push
cmp
mov
adc
jmp
nop
clc
nop
cmp
scas
inc
xchg
test
ljmp
jmp
and
test
lahf
outsb
aam
enter
pop
movsb
sub
ja
pop
inc
push
cmp
icebp
ret
cmp
adc
fcomps
mov
pop
mov
nop
and
sti
xor
inc
jg
pushl
ljmp
or
inc
adc
cmc
jg
dec
flds
mov
mov
arpl
push
ljmp
imul
mov
ss
in
inc
adc
mov
push
outsb
repnz
push
insl
and
call
sub
mov
outsl
int3
sbb
jp
xchg
cmpb
insb
mov
inc
cmp
testb
pop
lock
jle
mov
mov
push
adc
sub
pop
jne
fdivl
mov
and
push
fisubrl
push
shlb
jnp
mov
add
fdivr
outsb
ret
xchg
mov
push
cmc
mov
or
mov
push
fsubr
lcall
icebp
adc
push
add
out
dec
lds
sti
jne
inc
xchg
mov
aam
jl
push
mov
popf
push
lock
xor
inc
xlat
fisttpll
jmp
incl
lahf
mov
test
hlt
movb
popa
mov
outsl
ljmp
sarl
inc
dec
sub
jb
xor
push
cltd
mov
lods
scas
dec
in
loope
pop
and
test
push
jmp
jge
inc
jmp
push
outsl
cmpsb
test
and
out
rolb
sar
call
adc
stc
stos
mov
mov
adc
push
mov
aas
subl
fldt
lret
xlat
out
cmp
inc
outsb
arpl
mov
jno
aad
sub
jno
pop
pop
mov
push
sbb
cmc
iret
mov
mov
pop
push
fbstp
loopne
mov
adc
sti
lahf
insl
push
cltd
xchg
rcl
lods
popl
ljmp
xchg
dec
and
adc
jo
mov
mov
and
call
cmp
cmp
jmp
jb
inc
sub
pushl
fst
lcall
jnp
into
pushf
repz
out
icebp
pop
mov
mov
cmp
or
xchg
sarl
mov
adc
clc
sbb
test
pop
inc
lea
ds
jecxz
out
fsin
and
sub
pop
ljmp
pop
int3
pop
push
jg
and
icebp
inc
cs
push
push
cmp
insb
cld
rorl
out
xchg
mov
incl
insb
mov
adc
xchg
es
xchg
cltd
mov
jmp
mov
scas
outsl
ljmp
sub
dec
icebp
jnp
lock
or
pop
inc
lret
adc
loopne
call
bound
jae
cmp
sub
stc
push
roll
iret
xchg
jmp
incl
inc
leave
getsec
xlat
mov
lock
add
mov
or
ret
pushl
jmp
test
insb
add
fwait
ja
out
push
add
dec
sub
inc
mov
dec
outsb
ljmp
lea
popl
mov
pop
mov
inc
sub
ljmp
lods
imul
dec
loop
int3
adc
pop
mov
pop
push
jg
mov
push
imul
outsb
adc
call
push
xor
mov
lods
and
int3
dec
push
xor
nop
into
test
cmp
test
lcall
xorb
cltd
movsl
lret
mov
scas
shlb
dec
inc
adc
add
jg
repnz
ljmp
pop
push
imul
xchg
sub
jl
cmp
push
and
and
scas
test
jb
mov
cld
daa
ljmp
pushf
pop
dec
sbb
divb
xchg
insl
movsb
stos
iret
mov
lock
mov
data16
jecxz
inc
scas
xchg
cmp
push
out
and
add
jecxz
push
sub
incl
lods
jnp
sbb
pop
sti
push
movsb
cmp
push
jno
jmp
decl
and
add
imul
mov
imul
js
mov
imul
movsl
mov
inc
imul
xchg
mov
pushl
and
mov
iret
movsl
test
mov
jo
cwtl
add
loopne
xor
hlt
movsb
jle
clc
aam
lcall
add
push
cmp
add
inc
push
and
movsl
rep
mov
decl
lods
sub
jl
dec
jo
xor
mov
test
or
jl
mov
dec
stos
call
sbb
xchg
movsl
cwtl
es
cli
sbb
fldcw
lcall
lods
cmc
adc
lds
out
stc
lds
sahf
push
scas
sub
push
adc
ljmp
cs
mov
dec
imul
pop
je
inc
mov
mov
xor
jbe
js
call
jecxz
scas
cmp
cmpsl
jno
mulb
aas
lds
or
arpl
stos
xor
call
ss
mov
adc
add
loopne
mov
ja
add
rcrl
test
pushl
push
bnd
cmpsb
mov
adc
or
incl
cmp
ljmp
adc
dec
icebp
and
sahf
rcr
xchg
into
ljmp
pushl
loop
stos
push
jge
nop
xor
cmpb
xor
in
mov
jbe
xor
imull
adc
daa
popa
cmp
cmp
or
in
inc
das
popf
shl
add
pop
adc
cs
add
mov
aaa
dec
bound
and
push
jne
jge
pop
jp
shlb
shlb
jmp
pop
inc
loopne
mov
movsl
data16
push
and
jo
add
add
dec
call
incl
jmp
dec
fdivrs
stos
adc
mov
mov
sahf
rolb
or
decl
push
mov
scas
out
out
sbb
fisubs
aaa
cld
ljmp
push
xchg
ljmp
push
jmp
loope
cmpsl
adcl
xlat
dec
and
incl
or
bound
dec
int
push
ret
mov
cld
clc
mov
jg
push
jb
jmp
mov
popa
js
imul
jae
pushl
mov
leave
jne
movsb
dec
adc
mov
stos
pop
cltd
fidivrs
and
xor
jg
sbb
bound
mov
xor
sbb
popa
adc
ud0
mov
ss
pusha
push
cmpsb
js
call
and
xor
jg
mov
je
adc
mov
pop
out
js
and
mov
lcallw
lcall
dec
dec
cmpsb
cmp
jnp
xor
shufps
mov
cmp
sbb
mov
ret
ret
mov
hlt
pop
das
js
arpl
mov
sbb
lods
loop
cmpsb
out
test
cld
fs
push
mov
popa
or
fdivr
push
orb
clc
cmc
jg
shlb
mov
jns
adc
in
cltd
adc
adc
push
ljmp
out
cmc
mov
aam
testb
push
and
imul
pop
dec
mov
pop
mov
aad
jmp
inc
pop
repnz
lcall
push
jne
and
jl
push
sbb
aad
je
dec
cmp
gs
jmp
jge
enter
jmp
scas
jo
push
mov
push
in
adc
fs
mov
movsb
mov
ljmp
aam
xor
mov
aaa
mov
inc
pushf
mov
ljmp
xchg
inc
jg
dec
inc
jl
ret
mov
sub
addr16
or
add
popa
cmc
xchg
mov
inc
adc
fcomip
ljmp
sub
lds
jno
adc
fiaddl
adc
mov
add
mov
or
mov
cs
clc
mov
ja
loope
and
push
int
push
fimull
ljmp
mov
invd
stos
roll
lods
outsb
dec
in
push
pop
clc
pushl
push
cmpsl
cli
push
test
push
cmp
aas
imul
jmp
scas
stos
fmul
and
sub
rorb
mov
scas
sti
add
or
ljmp
or
xchg
lods
leave
sub
cmp
repnz
loope
xchg
cmp
push
dec
jp
pushf
call
push
test
cmovno
shll
std
lahf
cwtl
push
inc
data16
or
clc
mov
sub
call
mov
mov
dec
ljmp
adc
inc
mov
call
cld
leave
clc
mov
clc
sbb
movsl
lea
cmc
icebp
push
bound
mov
scas
call
icebp
cwtl
mov
out
daa
pop
inc
mov
sub
fcoms
xchg
ljmp
mov
and
jg
lahf
inc
inc
sbb
dec
mov
mov
call
mov
enter
imulb
pop
and
orl
imulb
xor
or
call
and
adcb
lcall
mov
shrl
ja
lcall
shr
mov
lret
pop
adc
inc
push
cwtl
sbb
xchg
xor
call
test
dec
gs
xlat
jge
mov
out
jmp
mov
fldl
rcl
ljmp
push
fwait
subb
mov
shll
mov
call
pop
push
push
sbb
stc
add
ret
inc
dec
dec
out
xor
sahf
je
lcall
test
call
sahf
std
mov
cli
ljmp
xchg
iret
jmp
lds
or
or
adc
mov
je
pop
add
ljmp
lcall
fsubrs
loopne
fsub
cmpsl
shrl
push
cltd
xchg
aaa
test
fdivs
jo
hlt
xlat
subb
shrb
pop
dec
add
dec
sbbl
lods
dec
cli
decb
adc
inc
xor
add
cmpsb
outsl
ficomps
mov
sti
mov
int
push
into
sub
push
xchg
mov
call
mov
fcomi
sbb
jo
das
jge
push
xchg
aad
fst
and
out
sub
pushl
xchg
jae
nop
adc
cld
cmp
test
jp
mov
dec
pop
stos
out
push
rorl
pop
test
mov
test
dec
into
sahf
or
sahf
aas
cmc
mov
pop
push
rol
inc
xchg
push
nop
mov
cld
pop
and
push
fldl
aam
lock
push
shll
push
mov
push
add
or
mov
xchg
add
in
clc
mov
repz
sub
sub
jmp
jo
and
fstl
cs
jns
jbe
rorb
jge
scas
cmp
xor
xchg
jg
xchg
dec
mov
mov
mov
jge
stos
rcll
mov
arpl
pop
fsubrl
add
mov
out
cmp
sar
shll
xor
jg
sub
mov
in
push
icebp
lea
or
mov
int3
xchg
repnz
and
xor
or
ljmp
jno
mov
out
mov
mov
or
and
mov
dec
push
mov
xor
add
aas
lcall
call
mov
xchg
es
imulb
fwait
bound
aaa
sub
lret
daa
incl
and
lcall
xchg
stc
mov
clc
xor
adc
fldcw
sarl
pop
in
jle
arpl
test
mov
int
jb
sbb
cwtl
sti
push
rcr
sahf
mov
shll
push
ds
andl
and
scas
leavew
and
incl
jae
cmp
cmp
stos
mov
pusha
and
loop
pushl
sbb
xlat
test
data16
int3
mov
and
jmp
pop
mov
jmp
hlt
mov
and
jle
xor
lahf
add
repz
mov
pop
bswap
mov
jmp
push
pop
into
mov
or
mov
enter
dec
pop
lods
push
dec
sub
outsb
jnp
cmp
mov
cs
ljmp
orl
xor
into
gs
sbb
adc
push
test
cmc
repz
cmp
mov
dec
sub
mov
pushl
inc
sub
add
call
fsts
cli
orl
dec
in
fstpt
push
jnp
in
inc
dec
popf
mov
ja
nop
mulb
or
jbe
jbe
jnp
hlt
mov
push
icebp
inc
iret
push
sub
push
mov
lcall
inc
xor
push
mov
xchg
push
shrb
xchg
pusha
xorb
inc
jbe
add
ss
pop
jl
sub
lcall
test
ret
cwtl
pushw
jns
mov
into
inc
ss
test
fisttpl
push
ljmp
dec
inc
push
test
add
cwtl
xchg
cli
divl
scas
push
jg
pushl
out
dec
rolb
adc
stos
inc
lcall
loopne
push
call
pushl
push
push
mov
dec
hlt
jae
data16
sahf
jp
dec
jg
daa
cmp
jo
inc
and
cmp
test
xchg
mov
insl
jl
and
daa
or
int
pop
aad
test
inc
pushf
fadd
push
xchg
ds
test
sar
pushl
or
subl
dec
pop
inc
cmovg
ret
xor
enter
out
push
add
outsl
sbb
xchg
pushaw
add
sub
call
jne
outsl
lods
xchg
push
rcrb
inc
aam
mov
jecxz
mull
mulb
popf
ret
call
jg
mov
mov
pop
mov
and
bound
ja
out
mov
lods
inc
ja
jnp
push
jg
movsb
jo
xlat
loopne
leave
mov
ljmp
pop
push
jecxz
pop
adc
pusha
jo
iret
xchg
lret
scas
inc
cmp
int3
mov
sar
jnp
sbb
cmp
pushf
flds
cmc
repnz
sbb
stc
fstpt
mov
cwtl
lret
ret
bound
inc
out
in
mov
push
dec
add
outsb
or
jmp
push
test
pop
cwtl
inc
ljmp
repz
dec
mov
adc
pop
inc
icebp
mov
xchg
dec
rcrb
repnz
adc
mov
out
das
stos
arpl
lock
es
cld
sbb
mov
mov
xor
and
sarb
movsl
mov
cmpsl
xor
rorl
pusha
mov
mov
fs
xchg
call
cmpxchg
add
mov
xchg
add
decl
xor
lods
or
jmp
test
fadds
daa
stos
mov
decl
adc
mov
mov
es
das
mov
ret
sbb
icebp
cmc
mov
call
arpl
pop
cmp
lret
xlat
mov
lret
pop
pop
pop
push
mov
pop
and
jge
push
icebp
jmp
rorb
sub
out
fabs
pop
add
adc
pushl
mov
mov
mov
mov
add
ljmp
stos
fdivrl
lcall
cmp
pop
ljmp
dec
pop
int3
pop
imull
inc
xchg
mov
clc
inc
jecxz
xor
out
std
test
mov
inc
add
cmp
xor
imul
cmp
scas
movsl
or
mov
mov
decl
lods
pop
mov
sbb
mov
ds
bswap
sub
inc
sub
xor
fs
outsb
and
in
sub
loop
fbld
rolb
mov
test
enter
xchg
outsl
pop
adc
cli
gs
clc
jmp
out
rorl
jg
jns
aam
push
gs
jle
lret
lock
jmp
and
cmpsb
mov
in
mov
sub
cmp
decl
mov
cwtl
lock
add
notb
ljmp
mov
mov
mov
fmull
loopne
jp
push
movsb
ja
rcrl
outsb
dec
mov
lcall
jnp
ja
pop
cmc
push
pop
pop
mov
push
daa
mov
pop
cld
mov
inc
mov
incl
xchg
lret
shrb
not
or
andl
lods
test
mov
out
nop
sub
insl
pop
add
adc
add
lock
inc
movsb
into
sti
shrb
decl
ret
lea
pop
out
adc
pushl
nop
aam
jb
mov
jmp
int
add
dec
lahf
mov
ret
xor
fisttps
jno
sbb
inc
adc
dec
jecxz
fstpt
dec
outsl
and
push
pop
mov
cmc
push
and
xor
push
dec
jne
je
mov
cmp
out
xchg
pop
add
lcall
adc
cmpsl
stc
inc
mov
rclb
mov
ja
clc
sarb
sub
ret
dec
pop
stc
sbb
xchg
pop
flds
dec
add
cmp
sub
mov
les
mov
jl
mov
pop
adc
sbb
pop
jno
add
sbb
adc
xor
bound
inc
xchg
loop
jmp
jg
lds
pop
addb
daa
mov
mov
lcall
xchg
pop
lock
pushl
std
pop
lahf
ss
adc
and
sarb
mov
orb
xlat
fsts
push
sti
outsb
gs
imul
popa
jmp
movsl
fmulp
add
incl
mov
mulb
scas
cmp
mov
stc
adc
sub
mov
jp
fcomip
inc
mov
adc
mov
test
lcall
ds
ljmp
push
cs
imul
xchg
js
shlb
loope
jge
ret
cmp
jmp
add
shlb
xchg
dec
call
xchg
incl
jl
dec
add
push
jbe
rolb
je
bound
jne
incl
pop
int3
dec
jp
hlt
stos
repnz
loopne
andb
sbb
xor
lods
lds
loope
jmp
xchg
dec
pop
push
and
aaa
add
sub
xor
or
ljmp
mov
test
rcr
cmp
decl
mov
hlt
xorl
loop
or
and
jg
incl
cmpl
jb
fs
cmpsb
xchg
out
jle
test
add
sbb
mov
mov
pushl
dec
loop
fdivrs
lea
mov
loop
mov
mov
test
pop
xor
mov
test
mov
push
lods
jle
mov
incl
ficompl
adc
sahf
adc
add
cli
add
int3
jnp
fiaddl
loope
fwait
cmp
arpl
pushf
popf
decb
test
push
jnp
popf
xchg
daa
cwtl
xor
fwait
push
leave
xor
jle
je
sar
xlat
gs
ret
in
enter
adc
call
icebp
push
dec
cmp
or
ja
pop
test
arpl
push
orl
or
cmp
into
and
filds
cltd
inc
ret
fsubs
cld
imulb
sub
xchg
push
push
fwait
lcall
cli
lea
hlt
jmp
add
incl
mov
pop
or
mov
sub
rcll
stc
push
jecxz
add
sbb
xorl
ljmp
rolb
mov
push
lds
test
bound
and
jg
insl
jae
shlb
stc
call
ljmp
mov
outsb
inc
ficompl
add
sar
dec
arpl
xor
cmpl
dec
xchg
inc
nop
arpl
setno
imul
sub
dec
mov
xor
mov
adc
or
cmp
std
pop
in
stos
cltd
inc
mov
call
daa
not
enter
icebp
or
lret
xor
inc
inc
imul
outsb
add
enter
das
cli
js
xor
pop
push
and
xchg
mov
adc
or
mov
aaa
sar
cmp
jp
cltd
pop
out
std
outsl
orb
or
jmp
sbb
fs
mov
pushf
jns
mov
das
outsl
add
push
sbb
loop
lods
push
push
pop
ret
add
rcl
sub
xchg
repz
incl
cltd
into
divb
movsb
mov
dec
pop
outsl
enter
sub
call
xchg
push
popa
sub
xor
es
cmp
imul
clc
lcall
pop
jne
data16
sub
shlb
xchg
mov
ss
mov
jg
loop
lock
out
dec
dec
sti
dec
out
ja
sti
and
jns
mov
clts
ret
jecxz
mov
jmp
pop
bound
in
push
xchg
inc
mov
sub
push
sub
xchg
enter
outsl
imul
scas
inc
cmp
pushl
sahf
pop
movsb
addb
jae
xor
dec
sarl
cli
aas
enter
fwait
mov
fwait
push
fdivp
pusha
dec
repz
lsl
push
int3
dec
xchg
mov
aaa
loopne
imul
shrl
repnz
mov
xor
inc
inc
ucomiss
mov
lcall
in
out
sahf
pushf
leave
ja
mov
ret
pop
mov
addb
fs
clc
xor
mov
icebp
aad
push
cmp
ljmp
push
jge
test
jb
out
mov
cmp
cltd
dec
cmp
es
jns
sub
or
sub
mov
inc
in
dec
dec
adc
sub
add
incl
push
jg
or
dec
sbb
aad
das
mov
jmp
add
ss
fwait
js
cmp
push
js
adc
xchg
dec
inc
and
jmp
push
inc
jns
pushl
std
dec
mov
cmc
jge
or
lret
sub
pop
dec
lock
sar
leave
add
popf
sarl
pop
lcall
adc
pusha
pop
or
incl
test
mov
test
jle
aad
outsb
gs
add
lcall
push
xchg
xorb
xor
push
movsl
add
mov
jg
fcompl
outsl
mulps
dec
xchg
out
cmp
aaa
popa
dec
pushf
and
ja
xchg
add
mov
je
xchg
jns
mov
movsl
inc
cwtl
fldcw
imul
adc
pushl
outsb
arpl
push
pop
daa
sahf
loope
adc
xchg
sub
repnz
pushl
mov
call
xor
pop
push
inc
cs
bound
mov
enter
call
adc
inc
push
scas
rol
mov
lock
inc
jmp
jnp
push
loopne
adc
jmp
or
xchg
push
jae
aad
dec
cmpsl
cmp
test
arpl
fildll
jg
popf
sbb
xchg
int3
push
lret
lret
dec
sub
fisttpll
imul
aam
dec
lds
imul
testl
lcall
mov
cld
jmp
inc
mov
jbe
jae
pusha
in
add
sbb
decl
imul
jmp
push
dec
das
jge
repnz
xor
cmp
in
push
cmc
adc
mov
decl
test
mov
sbb
cmpsb
push
push
loope
cmp
fs
cli
xor
and
cld
or
test
mov
mov
pop
mov
mov
xor
lret
or
jmp
in
imul
sahf
clc
pop
mov
fistpll
imul
mov
xchg
add
out
xchg
ds
mov
mov
push
pushl
lret
mov
adc
cli
data16
mov
xor
shrl
jmp
mov
into
lret
fwait
mov
xchg
fists
in
jns
scas
ss
call
mov
sti
stc
xor
add
mov
jne
or
mov
ror
stos
shll
ljmp
jno
icebp
xchg
mov
push
or
inc
dec
push
dec
or
int
inc
mov
lea
xchg
sar
lods
aam
mov
mov
repnz
nop
mov
les
jne
lcall
popa
daa
insl
call
std
stos
push
cmp
ljmp
pop
ret
jnp
dec
pop
cmp
push
ljmp
mov
pop
flds
bnd
mov
add
lcall
adc
mov
cmp
push
movsl
sti
xlat
dec
mov
mov
xchg
or
lcall
popa
or
pop
sub
std
je
xchg
xchg
mov
cs
jno
sbb
mov
mov
pop
sub
mov
shll
std
pop
movsl
sub
fisubl
ja
lahf
mov
pushl
movsl
insl
cltd
inc
push
pusha
push
or
js
inc
sub
xor
inc
dec
pop
xchg
ljmp
int3
gs
adc
hlt
sub
and
ds
jne
adc
fnstsw
in
dec
gs
and
out
incl
fneni(8087
cmpl
jp
pop
movhps
outsl
sbb
dec
lods
lds
mov
cmp
out
fildll
popf
nop
mov
mov
lods
imul
cwtl
cltd
jmp
insl
mov
jecxz
add
jg
mov
outsl
cmp
mov
das
ss
jne
call
ja
push
adc
insb
xor
ret
mov
mov
cmc
jns
sbb
xchg
inc
inc
and
repz
or
cld
arpl
subl
fmuls
call
and
sti
enter
sub
xor
mov
dec
aad
push
mov
jmp
mov
xlat
or
xchg
lahf
mov
arpl
or
mov
ss
add
adc
add
ss
rol
sahf
lods
push
push
ljmp
sub
push
pop
in
mov
cmp
pop
insl
pop
mov
out
stos
add
sbbb
js
cmp
push
loope
outsb
pop
clc
fbstp
testb
xor
or
dec
sahf
mov
sub
mov
clc
adc
ficompl
imul
mov
cmp
jp
sti
or
dec
popf
lret
and
xchg
jbe
mov
mov
decl
mov
xor
rcrl
dec
mov
cld
dec
mov
stc
mov
lcall
dec
xchg
loop
test
mov
imull
xchg
sbb
sbb
decl
sub
outsl
repz
jne
adc
mov
jp
inc
je
inc
add
movsl
int
lds
jne
mov
xor
fsubs
jmp
push
loope
push
mov
addb
jb
data16
jmp
cld
ljmp
jne
ficoml
rolb
outsb
mov
icebp
inc
jecxz
jnp
push
aam
incl
test
sti
mov
inc
jo
add
addr16
ljmp
xor
mov
jnp
ss
mov
clc
push
adc
popf
lds
icebp
mov
out
mov
idiv
call
or
add
lods
mov
out
sahf
out
jns
xchg
mov
test
jmp
popa
xchg
xor
test
xchg
pop
inc
fs
inc
lods
add
push
dec
into
jbe
xchg
sub
call
cld
jne
sbb
lret
lret
cld
sbb
stc
adc
fsubp
jle
mov
jnp
loopne
mov
lods
pushl
jo
loop
xchg
jle
clc
pop
lock
and
sbb
mov
mov
ljmp
dec
rcrb
popf
jo
arpl
jl
xor
fwait
lea
mov
lds
xor
movsb
xchg
mov
cld
jns
shlb
pop
and
or
test
dec
repz
mov
je
mov
xchg
adc
decl
test
mov
mov
xchg
mov
jmp
and
incl
loopne
or
jnp
cmp
jmp
ror
dec
add
dec
aas
sar
das
sar
mov
or
inc
in
daa
push
aas
lret
test
dec
push
ret
divl
or
or
fcomps
pop
sub
and
outsb
push
or
incl
fcoms
add
cmp
lods
xor
cmc
sbb
inc
sub
xchg
cmp
out
xchg
addr16
jmp
or
inc
cld
and
imul
mov
lea
dec
fisubrl
mov
call
push
and
jae
mov
std
iret
scas
xchg
jo,pn
mov
mov
sbbl
je
outsb
add
insl
sbb
fucom
cmp
xchg
push
adc
mov
pop
jns
mov
or
mov
cld
scas
dec
scas
call
jae
les
clc
in
mov
sbb
inc
or
cmp
adc
add
xchg
xor
scas
mov
pop
std
call
testb
xorb
pushf
or
fisubl
inc
aad
or
incl
dec
xchg
pop
cmp
xchg
repz
cmp
decl
std
jmp
and
sub
add
inc
loopne
incl
jns
cmp
jno
dec
outsl
pusha
mov
das
xor
popf
into
add
pop
call
clc
imul
jmp
ds
xchg
leave
int
in
mov
enter
pushl
js
fimull
popf
out
jne
ret
std
movsb
cmpsb
ljmp
and
test
lret
fcos
decl
jno
les
cld
test
pop
sbb
jmp
fbstp
fwait
add
fcomip
call
ror
push
cmp
repnz
cmp
fcmove
incl
pop
mov
mov
movsl
std
add
je
xor
ljmp
rolb
pop
cli
aad
insl
shl
mov
js
sub
mov
adc
push
jae
mov
loop
xchg
inc
mov
and
dec
and
std
pushl
addr16
call
shrd
cmp
adc
xchg
aaa
enter
cmp
scas
push
mov
or
lcall
popa
ss
pushl
fistl
fcomip
xchg
mov
inc
fs
jge
xchg
push
or
pop
and
dec
adc
pusha
pop
dec
mov
sti
cmp
mov
and
sbb
jg
fnsave
lret
lret
mov
dec
cmpsl
test
orl
or
mov
dec
pushf
ror
jecxz
out
mov
push
les
ja
rcr
fcmovbe
push
mov
cwtl
push
or
sti
cmp
jae
cs
popf
dec
xchg
roll
fwait
psrlq
rcr
cmp
lret
push
jge
jmp
ljmp
je
add
cmpb
push
out
add
lcall
jbe
ret
dec
loopne
jbe
or
ljmp
decl
xor
push
mov
push
test
fwait
mull
cmpsb
and
mov
pop
cmc
ljmp
sti
out
push
aas
sbb
inc
xor
loope
jbe
mov
dec
ret
rorl
add
xor
or
adc
mov
bswap
mov
push
stos
or
sti
mov
in
lret
sti
fsubrp
adc
lcall
out
mov
mov
aad
xchg
lahf
jp
cmp
pop
fldenv
negl
cld
iret
shlb
incl
dec
cmpsb
hlt
sub
or
pusha
outsb
xor
and
jge
int3
sarl
hlt
xor
decl
sbb
imul
jecxz
test
divl
stos
pop
pop
out
mov
pop
push
jmp
inc
cmp
ljmp
mov
dec
cli
test
adc
sbb
mov
pop
mov
inc
and
leave
jg
jns
flds
jmp
ret
push
pop
cmpsl
pop
dec
aaa
outsb
xchg
lods
in
int
lcall
sbb
cmc
loop
and
test
loopne
jg
mov
rcrb
lods
ret
mov
xchg
addr16
xor
add
fstpl
mov
adc
add
adc
data16
out
xor
movsb
sub
or
decl
aad
xor
cs
sub
add
icebp
roll
cmp
shlb
mov
sti
mov
call
insb
dec
adc
mov
mov
pop
movsb
sbb
test
cmp
sub
inc
out
cltd
push
decl
pop
inc
push
lods
cmp
push
cwtl
pop
push
subb
lcall
pop
xor
pushl
stc
pushf
shl
xchg
xor
lods
push
lret
js
jns
add
push
xor
call
push
xor
rcrl
cmp
jl
gs
scas
jne
sub
repnz
dec
shrl
loop
shr
popa
xchg
jmp
dec
or
out
addr16
mov
jae
lock
xor
ret
sub
outsl
and
pop
add
sbbl
or
movsb
or
lret
and
int
inc
jmp
jp
push
ja
ret
push
xor
ret
pop
cmp
repnz
cmpsb
add
pop
mov
fcos
call
dec
stos
xchg
insb
fdiv
dec
jnp
aam
pushf
mov
mov
gs
sbb
outsb
insb
loopne
lcall
insb
push
into
or
mov
sbb
ljmp
adc
adc
cli
push
xchg
out
sbbl
mov
test
cmp
xchg
bound
ficomps
incl
aam
sub
xchg
pop
adc
nop
stc
push
test
push
adc
and
subb
jge
call
dec
mov
adc
jge
fdiv
int3
inc
add
push
jae
inc
push
sub
add
out
cli
stos
mov
or
mov
jmp
and
jg
xor
dec
stos
and
sub
pop
out
jmp
sub
sbb
xchg
popa
push
outsl
add
loopne
icebp
ljmp
xchg
fs
pusha
jae
sub
call
xchg
xchg
ret
xor
imul
dec
dec
dec
shl
mov
adc
cmc
mov
outsb
inc
add
jl
fcomps
repnz
enter
pop
into
mov
cmpsl
jp
mov
shll
sbb
xor
je
cld
enter
xlat
pop
aaa
jg
mov
mov
filds
mov
pop
out
mov
cld
jmp
je
jp
xor
xchg
ljmp
push
subl
push
push
sahf
sahf
fsubs
in
daa
jnp
dec
aam
mov
jecxz
fcoms
adc
xor
pop
lahf
push
jecxz
ljmp
push
mov
ss
out
xchg
js
dec
fst
shlb
xor
sub
into
lret
push
filds
add
cmp
jbe
mov
sbb
insb
add
ljmp
adc
test
aaa
pop
leave
pop
push
mov
adc
sbb
push
inc
and
lcall
xor
or
cmpsb
or
test
imul
insb
lods
xchg
test
xchg
pusha
adc
lahf
push
pop
test
push
xchg
fwait
mov
test
jmp
sub
inc
out
dec
xchg
movsl
mov
xor
fsubr
or
in
cli
xor
call
test
sbb
int3
or
outsb
cmp
and
pop
jo
mov
dec
xor
pop
push
call
sub
dec
imul
jg
test
pop
aam
mov
fcomps
or
jno
inc
or
call
std
cmpsb
xlat
pushl
mov
push
pop
notl
addr16
mov
or
mov
ret
add
jns
mov
push
lret
imul
push
mov
lret
dec
push
adc
pop
sub
pop
test
jne
incb
cld
dec
add
add
cmp
sub
hlt
inc
pop
or
jae
push
adc
call
pop
test
add
jmp
push
jg
xchg
dec
enter
mov
and
aam
cmpsl
lods
andb
incl
add
shlb
inc
lods
jb
and
out
jg
inc
stos
fwait
or
jp
cmp
push
dec
pop
ficomps
cmp
adc
ja
sbb
xor
shlb
mov
test
inc
pushf
test
sub
mov
cmpsl
lock
cmpb
rcrl
mov
pusha
pushf
inc
push
adc
std
ret
aam
mov
pop
mov
jg
into
push
call
xor
push
adc
push
mov
ljmp
xchg
xor
lods
adc
ja
dec
jb
test
mov
int
movl
in
arpl
cli
fnstenv
add
fstl
or
inc
dec
jp
xchg
inc
cld
popl
enter
clc
ljmp
add
fsubr
jnp
pop
out
mov
dec
or
scas
cli
bound
push
dec
add
ljmp
mov
jl
xchg
mov
mov
push
hlt
mov
jg
fiadds
inc
mov
movsl
ret
add
rcrl
mov
mov
fisttps
inc
icebp
stos
sbb
dec
mov
gs
mov
jp
cld
xchg
cmp
in
mov
adc
into
jmp
insl
stos
dec
es
daa
mov
lcall
jmp
xor
mov
mov
std
es
jl
inc
inc
or
jmp
sub
rorl
and
test
cld
xchg
jg
pop
xor
movsl
push
fiaddl
les
gs
sahf
lods
mov
sub
sbb
xchg
jns
insl
add
lcall
ret
pop
clc
sarb
add
jno
sbb
leave
dec
popf
cmp
aaa
cld
pushl
mov
pushl
pop
test
lods
std
xor
ret
ss
ds
cs
dec
adc
mov
adc
push
movb
loop
dec
movsl
pop
pop
inc
call
subl
call
jmp
mov
push
inc
int
adc
cs
es
aaa
push
mov
arpl
and
mov
mov
shrb
ds
cli
jl
nop
mov
scas
cli
cli
adc
inc
jmp
scas
in
gs
sti
stc
into
inc
fistl
pop
mov
mov
fidivrs
dec
inc
clc
out
xor
sub
lcall
mov
stc
pop
fildll
nop
mov
sbb
decl
in
test
notb
pushf
loop
add
mov
add
jg
and
adc
adc
xlat
clc
dec
insl
inc
sub
mov
popa
enter
mov
cltd
mov
decl
notl
inc
sub
xchg
int
iret
cmpsb
mov
mov
mov
sbbb
repz
mov
subl
ret
xchg
jo
test
mov
aaa
mov
mov
mov
xor
scas
and
outsb
xor
fidivs
sbb
mov
cmp
fidivs
int
ficompl
xor
incl
pusha
int
lcall
push
push
sub
xchg
sahf
popf
aaa
popa
loopne
aam
sub
lret
icebp
insb
xchg
mov
jg
addr16
in
stc
mov
lds
ret
mov
out
pop
push
lock
je
mov
pop
cld
movsl
jb
mov
movsb
push
pop
mov
push
into
dec
and
sar
pop
iret
imul
add
stos
add
lea
add
pop
mov
fnstcw
fcomps
je
xor
mov
imul
push
rorb
push
adc
call
inc
push
lcall
mov
xchg
fdiv
sti
xor
cmpsb
test
cmp
dec
mov
pop
inc
decl
in
std
stc
cmp
pop
pop
popf
iret
nop
add
jl
cltd
fadds
stc
stc
or
jmp
lahf
jmp
arpl
push
jo
sub
out
inc
cmp
push
call
cmpsl
cmp
add
dec
cs
fsubs
ret
movsl
xor
ljmp
mov
call
aaa
add
fsubs
aad
lret
cmc
mov
push
jae
movsl
mov
xchg
mov
ljmp
pop
aad
int
in
push
nop
inc
mov
lods
call
mov
xchg
adc
in
xchg
mov
push
push
sahf
pop
ljmp
or
into
pop
jns
jno
dec
xchg
outsl
aaa
std
decl
hlt
cbtw
loopne
xchg
enter
nop
pop
popa
pusha
pop
notl
movsl
dec
lods
ficompl
jecxz
pop
ss
nop
and
sub
cmp
es
rolb
repnz
push
hlt
inc
dec
int
and
pop
push
sahf
cmp
movlps
jnp
xchg
adc
bound
dec
in
lcall
fisubs
addr16
adc
daa
ret
addl
lock
cli
xlat
fisttpll
std
mov
std
inc
imul
rol
aam
arpl
cmp
mov
into
push
xor
ficoml
lcall
adc
rcll
in
int3
bound
fdivrl
loope
xchg
sub
or
inc
push
xchg
push
inc
mov
sbbb
or
jae
inc
inc
xor
mov
dec
dec
in
pop
and
andl
cmc
test
loope
pop
xor
in
or
insb
sbb
cltd
mov
outsl
gs
jg
movsl
mov
int3
incl
divb
xchg
iret
pushf
lahf
sub
cmpl
sti
divl
ljmp
add
cwtl
iret
xchg
cmpsb
jg
ljmp
and
xlat
sbb
push
sub
jo
mov
pop
pop
gs
inc
mov
addl
or
mov
or
test
adc
js
pop
stos
add
or
push
mov
cmp
adc
lods
dec
mov
and
test
jmp
movsl
mov
wbinvd
push
add
jmp
out
test
imul
jg
loopne
outsl
fiadds
mov
pop
mov
inc
pop
add
mov
xrelease
hlt
mov
fnstcw
mov
test
xchg
mov
es
arpl
fdivr
outsl
mov
jbe
mov
mov
jb
pop
cmc
outsb
mov
jmp
xorb
scas
sbb
fisttps
or
cmpsl
in
mov
ret
pop
cltd
adc
jo
mov
pop
arpl
pusha
lret
jmp
out
push
decl
emms
cmpsb
dec
pop
cmp
xlat
int3
dec
push
jmp
dec
or
lcall
mov
mov
sahf
insl
fs
dec
dec
lret
loop
lcall
mov
aam
mov
mov
push
es
je
dec
add
mov
mov
cmp
insb
mov
lods
jae
mov
push
xor
rol
shrl
les
fistpll
cmp
ret
mov
jnp
cmp
inc
sti
cvtps2pd
push
leave
or
xchg
fistpl
sub
cld
lcall
ret
inc
pop
outsb
xchg
jb
scas
add
xor
fisubrs
subl
in
hlt
lea
pop
lea
push
imul
out
clc
fcompl
lahf
in
faddl
cwtl
and
pushw
cmp
push
mov
add
mov
pushf
filds
lods
mov
sahf
sbb
mov
cmpsb
aas
bswap
mov
add
jne
push
push
push
pushl
lcall
jg
mov
rolb
mov
test
stc
mov
aad
lcall
mov
sub
push
or
pusha
lahf
xlat
mov
push
sbb
mov
out
rorb
clc
out
gs
arpl
jg
pop
push
adc
mov
ss
lret
test
lret
cs
cmp
test
lock
ljmp
inc
movsb
push
popf
mov
jnp
ds
inc
push
call
or
sarb
jo
mov
xor
jnp
cmp
jecxz
ljmp
mov
push
xor
out
mov
jbe
fwait
data16
lret
sub
mov
decl
inc
push
lcall
scas
lds
dec
test
dec
push
mov
daa
in
sti
lcall
cmp
loop
popf
mov
xor
and
xor
jge
add
cs
and
add
xchg
jbe
jg
es
scas
xchg
cli
xchg
insb
or
mov
clc
mov
xlat
and
cmp
dec
je
xchg
loope
mov
inc
lcall
scas
lcall
inc
mov
mov
mov
je
scas
sub
push
pop
mov
stos
fdivp
incl
aas
jle
adc
insl
jo
lahf
jle
jl
je
dec
fsubr
jmp
mov
jno
scas
mov
sub
xor
mov
popf
and
sti
mov
stos
mov
xor
cmp
sbb
sbb
jae
push
cs
pop
jge
rclb
xchg
loope
repz
jle
scas
push
in
mov
cmpsb
jl
sbb
cmp
call
call
shll
and
ret
dec
inc
inc
cmpsl
cmpsl
mov
inc
mov
dec
fwait
js
icebp
push
lods
push
dec
loopne
and
inc
fimuls
repz
std
lds
rclb
sbbl
add
out
pop
pop
pusha
pop
in
clc
sub
cmp
lds
dec
faddl
pop
dec
imul
fbld
sbb
jmp
mov
shlb
fwait
incl
mov
icebp
mov
test
out
sub
aam
fisttpl
pop
into
xchg
or
pop
cmp
inc
lret
dec
mov
xchg
enter
pop
xacquire
jmp
or
jl
jp
jne
lcall
lds
lds
mov
lcall
add
adc
dec
iret
mov
add
stos
lock
mov
and
sahf
in
add
ljmp
sub
mov
cmp
jmp
mov
inc
out
jge
hlt
mov
mov
stos
xchg
pusha
shl
imul
shlb
shlb
mov
nop
sar
xchg
xorb
xchg
test
adc
cmp
fisubs
fisubs
jg
inc
xor
xchg
sub
decl
popa
sub
mov
imul
test
out
xchg
or
call
push
out
dec
loope
dec
test
pop
scas
bound
int3
cmc
add
scas
xor
pop
clc
xor
clc
dec
stos
decl
clc
mov
xchg
movsb
fnstcw
lcall
dec
decb
ljmp
insl
shl
mov
in
cli
insb
fwait
mov
jne
jg
dec
js
and
pop
inc
repz
mov
mov
fcomps
call
lods
sub
push
repz
lret
inc
pop
movsb
les
add
cmp
and
xchg
mov
mov
lahf
lahf
fists
jnp
pop
pop
lds
jmp
fsub
dec
outsb
out
and
inc
outsl
xchg
sbb
xorl
xchg
jae
mov
xlat
or
xchg
cmpsb
mov
dec
fucom
sub
das
jg
jns
jg
sub
inc
mov
adc
inc
dec
inc
jnp
lds
jmp
mov
iret
lods
jb
or
xchg
stos
sbb
arpl
or
add
lret
push
mov
incl
push
mov
add
push
lcall
fs
push
pushl
cmp
test
aaa
mov
popa
dec
pop
inc
pop
sbb
mov
mov
rcrl
cmp
cmp
lahf
mov
jae
jbe
jno
cmp
sbbb
into
shrl
movsl
push
in
xchg
sub
incl
sub
out
negb
lods
in
mov
jg
push
clc
dec
or
mov
fwait
out
inc
lea
add
or
cmp
jne
idiv
adc
push
fdivl
push
push
aaa
xor
ljmp
push
ss
dec
pop
sarb
shrb
sbb
aas
flds
adc
pushl
mov
in
in
mov
xor
jb
in
inc
nop
dec
cld
dec
movsl
sub
lcall
add
sbb
lret
pusha
push
repnz
sahf
repnz
jnp
insb
mov
andl
jmp
gs
xchg
inc
and
add
ret
arpl
sub
inc
rcll
inc
mov
pushf
push
xor
cmpps
out
fstps
outsb
cmp
mov
mov
pop
loopne
lcall
mov
repnz
inc
pop
es
subl
call
gs
cmp
cmp
and
aaa
push
sarb
xor
sbb
push
mov
dec
stos
pop
out
xchg
aad
rorl
jmp
std
cltd
lahf
mov
scas
les
pop
and
imul
sti
repnz
andb
inc
add
decl
stc
enter
pusha
dec
sub
mov
sub
mov
mov
or
ds
and
cld
subb
add
mov
stc
sub
jmp
cmpsb
dec
shrl
loopne
lret
out
pop
fildll
insb
aam
cmp
mov
sahf
jno
dec
lds
cmpsb
mov
shlb
adc
inc
out
dec
jnp
je
pop
fs
xlat
add
add
loopne
je
fisubrl
adc
mov
inc
pop
decl
push
mov
mov
movsb
mov
std
movsb
cmp
daa
addl
mov
push
je
inc
out
lahf
jne
sbb
cmp
lcall
movsb
scas
es
mov
daa
and
fxtract
pop
sbb
decb
ja
int
in
jg
pusha
stc
into
adc
rclb
js
xchg
sub
test
ljmp
sar
add
and
mov
and
cmp
add
js
sbbl
scas
clc
jg
hlt
adc
dec
or
lock
mov
loopne
rorl
mov
fwait
arpl
and
mov
mov
mov
fidivl
call
loop
rorl
xchg
mov
jno
and
lods
rcr
inc
clc
je
ljmp
out
out
mov
mov
incl
ret
adc
cmc
sub
loop
mov
sbb
popa
orl
jmp
jo
cmp
and
arpl
add
stos
dec
or
mov
sbb
ljmp
jmp
jo
xchg
out
dec
repz
addb
inc
outsl
stc
pop
mov
clc
cli
mov
test
imulb
lcall
hlt
mov
xor
stos
add
push
fisttps
fcoms
xchg
mov
ljmp
jge
sub
jl
mov
sub
sbb
xor
decl
sub
cs
mov
and
jp
jne
jae
push
dec
jnp
lcall
or
lret
test
shlb
adcb
pop
mov
cmpl
push
jg
popf
and
fsts
inc
sbb
jae
lods
xor
add
hlt
jp
imul
pop
into
jne
inc
cs
shr
leave
xor
dec
pop
fstpt
movsl
aaa
cmp
mov
xchg
sub
push
lock
es
pop
fbstp
sub
sar
sub
insb
clc
sub
jl
outsb
fistl
sar
insl
inc
dec
cmp
adc
notl
lcall
push
sbb
or
jbe
pop
ss
jne
nop
and
cmpb
push
std
pop
add
cs
xor
cmc
test
outsl
aad
pushl
lea
and
stos
cmp
aad
lock
out
jg
dec
scas
mov
mov
and
or
in
mov
ljmp
cmp
leave
xchg
xlat
sbb
sub
fstpl
test
fdivrl
movsb
mov
call
add
mov
mov
in
imul
inc
pop
jmp
clc
push
mov
and
mov
or
or
mov
cmp
mov
jno
pusha
add
mov
push
test
cwtl
sbb
vmovaps
idivb
fdivrp
pushl
cld
jg
inc
rorb
mov
push
inc
cmp
mov
mov
sub
clc
and
gs
mov
dec
int3
std
adc
xchg
jp,pt
mov
xchg
sbb
sarl
mov
mov
div
das
add
scas
cli
dec
xchg
cmp
fistpll
iret
stos
mov
xchg
lock
adc
push
mov
ja
or
ret
addr16
jp
mov
adc
and
shll
or
imul
pushf
fcoml
cli
lods
fcomp
xchg
jecxz
jl
adc
or
popf
add
in
lret
inc
ret
movsb
inc
adc
add
std
dec
mov
jb
outsb
repz
pusha
push
xchg
movsb
inc
xchg
arpl
mov
jge
sbb
jmp
inc
jne
or
cmp
popa
nop
enter
neg
pusha
fdivs
ja
pushl
in
pop
mov
movsb
xlat
nop
xor
enter
in
and
add
push
call
arpl
in
sub
popa
out
inc
lret
loope
nop
sbb
cmp
cmp
mov
xor
cmp
outsb
inc
inc
js
mov
int
fldt
sar
ljmp
jp
push
mov
ret
jae
jl,pt
pop
push
insb
lea
add
push
push
and
cmp
pop
adc
cld
pop
in
pop
lock
push
ss
push
outsl
xchg
pop
hlt
jmp
or
mov
xor
lea
jecxz
mov
xor
fldl
push
sub
pushl
pop
and
fsubr
cmp
xchg
mov
lds
inc
loopne
nop
std
inc
int3
push
xchg
incl
pop
sub
ss
mov
shlb
mov
les
dec
pop
mov
sub
test
fcomip
ljmp
outsl
pop
inc
in
and
inc
mov
ret
push
out
inc
fcomip
call
sub
loop
sti
aam
iret
aad
cmp
arpl
inc
xor
out
adc
in
mov
xchg
and
shlb
jp
ds
mov
inc
jb
subb
jae
xor
push
xchg
pop
loop
cmpsb
pop
ljmp
ret
pushf
xchg
adc
and
lcall
loope
into
cmpsl
movsb
lcall
push
lock
fwait
lods
mov
inc
sets
fsubr
loopne
or
add
mov
jnp
push
in
lock
sbb
mov
or
lcall
imul
incb
jle
jl
in
push
aas
fwait
mov
and
std
test
pusha
data16
out
movsb
jecxz
mov
jg
jnp
adc
insb
movsl
fsqrt
cmpsl
arpl
and
ss
in
xor
sub
and
in
inc
push
mov
pop
sbb
pop
pushf
mov
ret
mov
sbb
push
ljmp
fs
ljmp
cmp
cmp
mov
test
and
je
adc
add
ljmp
jecxz
cmp
jns
push
adc
lahf
sub
jle
int3
and
movsb
jge
dec
cmp
outsl
add
addr16
sub
push
ljmp
je
sarl
fsubrs
dec
pushf
lock
out
movb
rcr
push
mov
or
incl
sbb
xchg
inc
jb
int
inc
ficoms
dec
pop
das
sub
loope
sbb
sub
adc
mov
mov
call
sub
mov
pop
dec
push
mov
pop
addl
xor
inc
mov
or
pop
sub
addl
adc
xlat
mov
or
ljmp
jg
in
inc
les
cmp
push
in
lods
mov
mov
add
xchg
push
add
cwtl
insb
dec
lahf
push
inc
add
pop
mov
imul
in
inc
aaa
stos
adc
pushl
std
mov
mov
je
idiv
jnp
into
inc
out
scas
dec
clc
cmp
ret
mov
scas
cmp
jl
adc
outsl
add
xchg
test
pop
pop
sub
in
sbb
jg
jg
test
xor
jmp
dec
stos
sub
nop
push
inc
jns
nop
ljmp
outsb
test
rolb
fucomip
jo
mov
popf
imul
ret
pushl
xchg
out
sub
out
mov
leave
loop
lahf
push
sub
jg
jmp
fldcw
icebp
push
ret
enter
pop
or
inc
cli
cmp
jg
test
les
in
fidivrs
fwait
or
ljmp
lea
sbb
push
xlat
dec
shl
mov
mov
std
sub
push
sbbl
cmc
xchg
sbb
jg
pushl
cmpsb
insl
add
sahf
cs
into
and
test
inc
cltd
sub
and
call
stos
cli
inc
icebp
js
aad
sti
shl
lcall
leave
ret
jl
pop
jle
mulb
push
inc
jle
mov
sbb
movsl
inc
movsl
fs
loop
test
mov
sbb
adc
and
pop
sbb
decl
xor
xchg
or
inc
push
jl
mov
repnz
xorl
mov
js
cmp
mov
adc
fstl
fadds
jmp
cmp
or
fwait
cmp
rcrb
out
inc
roll
xchg
mov
test
dec
add
fwait
xchg
inc
jge
incl
push
je
lea
ret
lock
dec
mov
fcomi
adc
lcall
cs
xchg
pushl
stc
imul
pop
test
js
lcall
in
lret
cmp
jl
int3
movsb
call
add
sbb
js
sar
das
aam
shl
mov
jmp
push
cwtl
sub
std
insl
mov
call
out
jg
inc
aad
jns
jno
addr16
shll
inc
push
subb
mov
and
inc
mov
and
xlat
add
add
xchg
loopne
cmp
xchg
xor
adc
or
mov
ja
and
jl
aad
push
fimull
xor
fidivrl
lret
sub
js
mov
sti
pushl
andb
in
push
cmp
dec
jmp
in
popl
lahf
movsb
push
dec
lahf
xor
les
dec
insl
jmp
das
xchg
test
and
inc
lods
xchg
incl
pop
cmp
jns
sub
lea
lret
sub
xchg
out
out
dec
mov
out
and
mov
push
jb
dec
adc
sti
jg
clc
jne
xchg
inc
push
pop
xchg
lret
fs
jecxz
mov
jmp
sbb
sub
dec
add
adc
push
push
or
pushl
insl
sbb
cmp
adc
aad
scas
clc
decl
call
addb
movsb
popa
ds
hlt
inc
test
in
stos
dec
pop
xor
jge
ss
daa
mov
out
add
addr16
fistpll
iret
sti
int
mov
mov
dec
or
or
repz
jbe
push
xchg
sub
jne
jmp
push
jo
fwait
bound
xchg
lret
stc
iret
sub
lock
lahf
adc
xlat
jnp
jb
fldenv
sub
mov
mov
dec
or
jno
lret
incl
popa
mov
popl
add
xchg
jbe
adc
xchg
inc
jbe
bound
sarl
cmp
sbb
stos
leave
push
lea
jmp
testb
jns
outsl
mov
lods
jne
notl
mov
xchg
scas
mov
jl
inc
and
incl
mov
aam
push
imul
out
out
mov
and
jne
lds
cmp
je
jmp
rorl
xor
jl
cwtl
das
push
paddb
mov
in
inc
mov
jg
add
out
filds
insb
loop
dec
fwait
sahf
out
and
stos
push
mov
push
dec
or
adc
push
inc
mov
mov
sub
pop
fmuls
das
pop
punpcklwd
rorb
icebp
rcrb
ljmp
cmp
daa
jmp
mov
ljmp
loopne
mov
or
jmp
into
das
pop
iret
cmp
or
dec
lret
movsb
sbb
inc
or
ds
cs
or
jns
lret
push
sbb
mov
add
mov
lds
ljmp
test
lret
mov
xor
lahf
subb
pop
xchg
mov
push
push
aam
test
mov
call
fsubrl
xor
out
jmp
stc
insl
cwtl
dec
xor
daa
test
dec
add
stos
inc
push
pushf
pop
and
incl
inc
in
pop
xchg
adc
ss
pusha
push
outsb
out
decl
inc
scas
sub
xchg
mov
mov
stc
cmp
cld
test
push
mov
cmp
imulb
mov
mov
mov
cwtd
sarb
xor
jmp
mov
inc
shll
lea
incl
rclb
and
sub
or
add
jo
arpl
cmp
jmp
xorb
push
adc
scas
sub
mov
pop
icebp
lahf
sub
scas
cmp
sti
out
and
cmp
pop
cmp
xchg
cmp
out
test
out
arpl
mov
sbb
push
sbb
xchg
cmp
jmp
clc
pop
insl
and
scas
fdivrs
sub
xchg
scas
test
in
or
jp
dec
add
call
lea
mov
arpl
sti
push
test
popf
stos
fidivs
adc
cltd
cmc
jmp
in
in
add
sub
cli
pushf
scas
and
stos
or
mov
lcall
filds
inc
jne
adc
sahf
cmc
incl
xor
mov
cmp
dec
std
mov
push
popa
in
xor
stos
sub
push
xchg
add
jg
mov
push
jnp
imul
roll
dec
or
pop
or
inc
rep
mov
ret
or
nop
adc
jno
pushf
adc
ret
in
test
lret
xor
or
test
add
jmp
lock
add
outsb
outsl
inc
xor
dec
inc
cmpsb
mov
inc
lret
fs
subl
sub
pop
fstpt
insb
push
cltd
je
pop
stos
outsb
jge
incl
movsl
inc
pop
cmp
repz
and
xchg
in
lock
lahf
call
mov
test
das
mov
inc
hlt
dec
lahf
lcall
lock
push
inc
inc
add
cmc
test
ds
push
enter
ljmp
sub
mov
mov
bound
loop
xchg
dec
fnstcw
loope
add
ficoml
jo
aas
xor
lods
push
dec
adc
mov
add
sbb
gs
movsb
or
stos
out
cmpsl
ja
decl
add
mov
and
loope
sub
fbstp
jmp
jno
pop
in
repz
sub
inc
dec
jl
mov
loope
mov
adc
ljmp
fstp
adc
and
sub
mov
dec
ss
hlt
cmp
mov
fpatan
cmpb
push
pusha
jl
dec
xlat
jg
fistpl
dec
push
in
pop
aad
jg
popa
pop
sbb
adc
xor
lds
jg
call
jns
cwtl
hlt
mov
nop
iret
sbb
jae
aas
scas
daa
mov
pop
pushl
andb
out
roll
popf
sub
jg
incl
rol
push
cli
jae
pop
shl
cld
stos
sub
fcoml
ljmp
adc
mov
mov
sub
lods
outsl
aas
push
lea
ds
incl
cltd
clc
cmp
enter
jp
mov
sar
push
jae
sarl
stos
push
js
data16
mov
int
stos
popa
inc
mov
fsubrs
mov
adc
sarl
inc
or
sub
pop
enter
cld
fbstp
dec
mov
in
sbb
call
mov
pop
into
call
addr16
push
push
mov
lcall
pop
and
xlat
into
xchg
inc
push
mov
xchg
cld
mov
lea
pop
push
orb
rcrb
ret
pop
fnstcw
out
or
arpl
cmp
cli
jg
sub
sub
lods
xor
jg
sbb
push
push
adc
mov
aaa
lret
mov
jb
lcall
push
decl
lret
insb
in
pop
aas
add
rcl
daa
cltd
sbb
sub
xchg
imul
out
xchg
mov
push
mov
cmp
cli
pop
sbb
push
scas
pushf
xor
addr16
iret
rorb
mov
je
add
hlt
out
add
dec
mov
call
dec
repz
mov
roll
sub
xor
adc
cmp
sbb
cmp
pop
mov
pop
mov
aaa
shlb
mov
jg
into
lret
jp
mov
inc
or
mov
pop
outsb
lods
xchg
imul
mov
imulb
pop
movsb
jo
sub
mov
ds
dec
leave
mov
sbb
clc
add
ffreep
enter
push
out
fdivrp
jmp
add
cmpsb
mov
sbb
pushf
fisubl
fwait
imul
adc
cmp
xchg
sub
mov
add
cmp
xchg
test
xor
lds
je
pop
push
adcb
scas
clc
jnp
dec
loope
add
add
fsubr
push
iret
add
and
and
cld
incl
int
lds
hlt
sub
cli
add
add
pushf
pop
aad
lcall
sub
lea
push
adc
fidivrl
add
ljmp
mov
clc
xor
xlat
mov
jbe
cmpsb
fiaddl
stos
pop
repz
call
xor
cmp
xchg
pop
repz
mov
cmp
mov
inc
add
loop
inc
push
and
push
std
ljmp
cltd
incl
jmp
ficoms
bound
push
adc
and
sub
xchg
decl
push
or
inc
roll
lcall
cmp
jns
adc
inc
jge
cli
add
das
mov
cli
decl
mov
adc
pop
and
mov
inc
inc
je
addr16
hlt
sub
stos
ljmp
or
insb
cmp
aad
movb
xor
mov
cmp
pop
jge
ffreep
or
sub
lret
pop
stos
jno
aaa
jecxz
jp
divl
ret
aad
pushl
inc
mov
cs
mov
imul
pop
pop
dec
std
iret
iret
call
lret
cmp
stos
dec
dec
jp
jle
mov
or
add
jecxz
add
lcall
fsts
in
push
sub
add
add
fisubrs
cmp
leave
fiadds
add
popf
mov
clc
xor
mov
push
dec
xchg
cmp
fdivrs
ljmp
fnstsw
mov
mov
inc
leave
dec
add
sbb
call
mov
ret
sbbl
pop
les
sbb
push
sti
jmp
mov
shl
xor
inc
xor
push
stos
mov
add
dec
mov
and
mov
ds
pop
mov
data16
pop
push
rol
cld
ja
add
dec
out
push
mov
push
loope
scas
jge
cmp
rcl
mov
cmp
sub
fimuls
rcr
lock
cmp
sbb
mov
int
pop
sbb
add
incl
fldt
adc
add
lahf
subl
inc
push
xchg
and
aam
repnz
xor
or
call
mov
mov
repnz
or
pop
cmp
dec
jmp
clc
sahf
sbb
roll
rcrb
loop
jnp
pop
call
inc
rcr
push
insb
lret
xchg
xchg
pop
jl
std
sbb
push
test
inc
fisttpl
inc
xchg
lahf
fcompl
dec
push
sub
bnd
mov
adc
jmp
lds
bound
lcall
dec
cmpsb
xchg
mov
int
mov
rcll
repz
jae
and
mov
lcall
mov
mov
popa
lret
xchg
mov
orl
and
lcall
push
ds
in
movsb
inc
and
add
mov
mov
test
stos
and
and
hlt
xor
lahf
xchg
jp
mov
sbb
xlat
add
pop
jmp
lcall
jns
adc
pusha
in
enter
dec
daa
inc
mov
enter
sarl
addb
pop
fs
add
mov
jg
jle
cmp
clc
dec
pop
movsl
lods
push
icebp
xor
push
arpl
jge
loope
xchg
xor
push
cli
lret
inc
js
mov
lret
outsl
daa
jl
int
mov
ds
push
aas
mov
fucomp
cmp
dec
jg
incl
je
and
or
out
sahf
pop
sbb
sahf
dec
mov
pushl
pop
add
add
pop
mov
mov
inc
xor
dec
mov
add
xchg
and
dec
test
inc
iret
mov
add
aad
mov
pushl
dec
push
insb
and
js
jge
jg
cmp
aad
pop
fmull
push
pop
ret
ret
mul
fistps
sar
mov
jg
adc
push
ficoml
pop
mov
jnp
aaa
in
ljmp
ljmp
mov
mov
movsb
xor
cmp
lret
inc
in
outsl
fs
ret
xor
fwait
jnp
hlt
xor
jmp
fmuls
ja
inc
divl
rclb
pop
jg
inc
in
decl
jne
rolb
cmpsb
xchg
cmp
lcall
decl
movsl
sahf
pop
jg
sbb
mov
sbb
and
sbb
daa
decl
or
push
dec
outsb
mov
inc
inc
and
incl
bnd
xchg
sub
lret
imul
and
std
out
sub
dec
push
incl
lods
cmp
sub
cmp
xchg
xor
std
ret
imul
decl
xchg
dec
jae
push
in
addl
mov
sub
cwtl
sbb
dec
ret
pusha
repnz
mov
cwtl
lods
sub
mov
mov
mov
jg
or
test
and
push
out
cmp
cld
call
stos
dec
movsl
popa
cmp
rorb
and
dec
mov
call
xor
pop
lds
xchg
pop
cmpsb
lods
ja
repnz
xlat
ja
popf
push
ljmp
nop
test
scas
or
push
sbb
jmp
mov
repnz
sub
xor
mov
add
insb
cs
lds
dec
icebp
push
mov
cmp
call
lahf
pusha
movl
es
add
sub
sbb
cld
pop
mov
cltd
sbb
xor
test
fwait
cmp
call
cmc
js
sbb
and
mov
in
outsl
les
jns
call
inc
inc
xchg
pushl
idivl
fwait
push
add
pop
addr16
int
into
std
jbe
pop
mov
jg
mov
jbe
ror
mov
push
mov
add
mov
jmp
dec
movsl
out
xchg
sti
es
pop
stos
ret
adc
push
ds
or
test
rorb
sti
xchg
pop
cmpsl
outsl
and
fcmovnb
cltd
xchg
jle
jne
fistpl
and
fwait
call
mov
orb
jg
das
clc
dec
pop
andb
insb
clc
jbe
icebp
sub
aad
mov
decl
pushf
mov
imul
test
pop
cwtl
cmp
jb
push
test
test
test
inc
clc
and
push
rclb
clc
das
push
inc
mov
pop
lods
mov
pusha
daa
xchg
lods
cmp
mov
mulb
scas
cli
call
sbb
mov
loopne
mov
fbstp
pop
lods
mov
incl
aas
or
pop
inc
inc
sub
lock
pop
and
push
enter
and
out
clc
cmp
ret
xor
fadd
mov
jg
jno
int
dec
and
jno
shll
bound
int3
jmp
stc
repnz
test
pop
and
xchg
rcrl
mov
sbbb
cwtl
mov
cs
call
mov
fisttpll
push
jle
cs
imul
inc
sub
dec
call
sub
and
mov
rcrb
push
int3
mov
and
pop
pusha
fisubs
mov
imul
cwtl
mov
call
daa
jbe
outsl
fdivrl
mov
or
loopne
mov
cld
mov
mov
adc
xor
push
push
loopne
daa
sub
cmpsb
mov
push
sub
sbb
decl
fnstsw
cli
ss
jo
js
call
incl
dec
fcompl
outsl
in
lret
lds
fwait
cltd
pushf
jle
aam
sub
test
outsl
mov
jmp
mov
inc
pop
or
mov
fdivl
sbb
nop
js
pop
cmp
sbb
shrb
inc
cmp
and
cmc
pop
insb
ds
into
dec
loopne
jle
add
fistps
cmp
and
fldt
ljmp
cmp
enter
out
jo
xlat
pushl
sti
pusha
jmp
jl
mov
mov
or
imul
lcall
jae
push
int
jg
call
cld
dec
mov
mov
rcrl
jb
sbb
js
cli
pushl
insb
sar
pop
inc
out
mov
dec
push
mov
push
mov
rcl
call
std
xchg
push
sti
fisttps
sub
pop
mov
mov
addr16
mov
stc
xchg
fmuls
xchg
cli
sbb
popa
test
ljmp
or
mov
cmp
mov
dec
dec
stos
or
xchg
stc
jg
or
push
movsl
sub
lcall
cmp
insl
inc
jg
lahf
mov
insb
lcall
add
sub
push
out
xchg
add
dec
inc
jmp
push
outsb
xchg
push
pop
push
movsb
jne
orl
std
lcall
imul
test
sub
inc
dec
ficoms
sbb
or
mov
jmp
les
jnp
xchg
cld
jbe
std
ja
call
mov
addr16
test
sahf
fmuls
jge
pop
jno
xlat
jb
xchg
add
push
enter
cmpb
adc
notl
imul
jg
jo
or
insl
rolb
dec
push
mov
test
enter
add
dec
ljmp
test
ss
sarb
push
sahf
ljmp
pushl
sub
nop
push
adc
xchg
dec
jae
inc
inc
fcoml
mov
lds
dec
test
lcall
xor
xchg
repnz
sub
cld
adc
inc
push
dec
mov
imulb
push
sbb
jmp
xchg
xor
pushf
jo
inc
mov
mov
leave
aam
in
gs
lret
xchg
xchg
enter
leave
sub
jmp
add
jns
xor
sub
cmp
pop
cltd
jns
xor
or
adc
and
adc
adc
lods
scas
cmp
cltd
negb
dec
pop
and
decl
mov
jp
add
sbb
mov
pop
loope
pop
jl
mov
jne
clc
jmp
xor
iret
pusha
cmc
std
orl
scas
aaa
shrl
call
jp
inc
jae
sub
fstpt
int3
ret
sub
sbb
mov
dec
incl
pop
mov
dec
lahf
pop
insb
push
fbstp
inc
jbe
inc
jle
ljmp
fmull
decl
adc
movl
xchg
ds
pushf
leave
lahf
sahf
in
outsl
popf
pop
daa
push
mov
cmp
sti
fs
mov
or
daa
xchg
les
mov
decl
packuswb
pop
repnz
inc
in
mov
fdivrs
loop
loopne
inc
or
pop
and
push
xor
pushl
cbtw
dec
and
mov
fidivl
shlb
sub
mov
push
lret
outsl
jle
dec
sbb
or
jo
dec
jp
mov
dec
out
pop
lret
sub
movsb
ret
fs
dec
adc
incl
popf
xlat
cmc
jecxz
cmp
cmp
pop
mov
push
xchg
and
sbb
stos
out
ljmp
or
add
inc
sysret
inc
inc
imul
test
mov
stos
roll
scas
out
stc
in
jp
in
adc
push
fimull
pop
push
cmp
fmuls
pop
pop
cltd
mov
push
les
inc
in
sbb
xchg
test
xor
pop
je
loop
mov
call
out
cltd
mov
aad
sti
shrl
movb
filds
sub
repz
dec
mov
dec
xchg
sub
movsb
cmp
aas
push
jg
jae
mov
inc
sbb
sub
in
cmpsl
jl
mov
cwtl
jge
out
mov
inc
cmc
cmp
mov
arpl
mov
push
cmp
jmp
pop
xchg
loopne
cwtl
je
cmp
out
dec
or
xor
cmpsl
add
add
lds
inc
or
ljmp
cwtl
sbb
shrl
xor
pusha
imul
push
out
sahf
and
call
dec
notb
xor
sarl
adc
mov
jmp
mov
ss
mov
adc
pop
into
xchg
sahf
jmp
adc
pushl
mov
test
aaa
dec
cmp
mov
fdivr
ret
aas
cmp
das
enter
jmp
call
aam
mov
shll
sbb
es
fbstp
mov
lret
dec
xor
sar
mov
push
call
xor
subl
pop
es
lret
xchg
sub
inc
std
insl
mov
inc
push
cmp
aaa
movsb
dec
ret
pop
push
cmp
fidivs
jmp
stos
insl
pop
jb
ss
or
add
lcall
fsubs
push
shrb
fldcw
xor
push
cld
enter
popa
testb
loope
xchg
js
out
das
je
cmp
je
fcompl
pop
sbb
decl
insb
sbb
and
cld
sar
jmp
pop
pusha
out
aaa
popf
loop
stc
inc
or
cmpsl
sub
xor
pop
std
inc
xchg
arpl
mov
test
adc
pushl
jg,pt
add
lds
nop
pop
mov
xchg
fbstp
jg
or
xor
cmp
sbb
fwait
in
and
incl
cld
sub
ds
mov
pop
cwtl
aas
xor
in
mov
dec
pop
jp
or
test
sub
xor
jge
add
sbb
dec
cmp
jmp
mov
push
pop
das
sub
xchg
ljmp
sub
insl
mov
hlt
cmp
test
and
jge
aaa
inc
jnp
mov
aad
sub
aad
out
push
fstpl
pop
idivl
and
fiaddl
add
or
push
cmp
jmp
pop
mov
jne
jmp
and
sahf
dec
mov
pop
stc
lea
pop
decl
test
sub
dec
adc
add
pop
xchg
fstpl
call
adc
lret
insb
jecxz
push
mov
cmpsb
adc
xchg
lahf
test
rcll
sar
decl
cmp
dec
jae
mov
cmp
divb
sahf
popf
incl
xchg
outsb
lcall
in
xor
out
fcompl
cmp
dec
lods
mov
pusha
jb
xor
push
mul
call
imul
in
xor
pushl
push
and
in
xchg
cmp
xchg
mov
decl
and
mov
lods
cmp
and
jmp
mov
mov
xchg
loope
mov
adc
incl
lock
mov
sti
or
adc
scas
dec
sub
stos
scas
add
fcomip
and
sub
mov
hlt
ljmp
inc
push
cmp
scas
imul
movsl
test
mov
in
ja
stos
cli
push
mov
mov
jecxz
incl
testb
sub
add
iret
clc
push
xchg
jge
xlat
inc
mov
mov
push
xchg
sbb
sub
jno
dec
fstl
jbe
lock
insl
xchg
dec
adc
adc
mov
push
push
dec
fidivrl
adc
sbbb
pop
incl
jge
loope
rcr
out
jns
push
test
dec
decl
fnsave
mov
ljmp
dec
mov
pop
add
popf
mov
jmp
sub
stc
inc
fistpl
rclb
inc
cmp
icebp
xchg
inc
xchg
sbb
mov
lea
stos
mov
pop
pop
mov
push
out
in
dec
add
int3
bound
stos
lcall
jnp
fcomip
jmp
movsl
std
mov
pop
xor
jle
xchg
push
std
add
outsl
jmp
in
jg
add
add
cmc
pop
popf
jo
jmp
hlt
dec
nop
adc
imul
jge
in
jmp
into
loopne
xor
lcall
mov
test
jg
imul
jnp
and
ljmp
xchg
cmp
dec
mov
mov
arpl
dec
sub
dec
sbb
sbb
push
push
stos
jmp
in
imul
fimull
sti
push
dec
cmp
lar
push
push
push
sahf
stos
ret
aad
int3
sbb
sbbb
pop
cmpl
out
ljmp
add
sbb
jecxz
test
fsubp
push
inc
rorb
cmp
push
xchg
mov
sub
push
xor
sbb
shrb
dec
mov
lock
inc
test
popa
mov
cld
xchg
push
push
fsubrl
dec
or
mov
xor
aam
lret
push
orb
movsl
mov
test
push
ss
decl
leave
mov
js
jns
iret
lods
mov
scas
push
mov
out
jbe
in
or
call
dec
mov
xor
std
iret
enter
push
fwait
jp
or
xor
sub
decl
mov
mov
or
ret
mov
lcall
inc
lods
sbb
pop
sbb
jbe
in
inc
and
mov
cmp
subb
xlat
scas
jno
out
decl
pop
dec
add
pop
sub
scas
push
stos
out
jns
mov
test
jl
popa
jmp
lahf
adc
jg
and
jb
out
inc
lods
or
inc
inc
mov
cmp
out
jmp
out
inc
push
in
data16
mov
addb
sbb
in
movl
mov
lret
add
dec
add
scas
mov
jg
mov
push
sub
sbb
sbb
call
mov
pushl
adc
aas
xchg
cltd
mov
jmp
or
insl
not
dec
jmp
pushl
popa
cs
sbb
mov
or
cmp
inc
push
lret
adcl
iret
dec
sarb
pop
jb
lock
outsl
fwait
add
jg
lcall
xchg
daa
notb
push
sti
mov
cli
repnz
decl
insb
cld
inc
adc
pop
iret
add
sub
les
lcall
fcmove
mov
cmp
cs
and
sbb
cmp
stos
mov
repz
or
loope
mov
jecxz
cld
call
gs
jmp
inc
aad
mov
xchg
jb
test
je
jg
sub
pop
and
incl
sbb
mov
rcrl
inc
cmp
xor
add
test
lods
xchg
bound
mov
ljmp
call
in
fs
or
aad
das
and
sbb
push
loopne
or
push
insb
xchg
fdivrl
rcr
sub
mov
fisubrl
repnz
lcall
xor
decl
pop
push
lds
sub
shlb
cmp
stos
lods
or
adc
in
cld
daa
push
aam
std
in
stos
mov
jmp
scas
jg
inc
cld
fistpl
inc
mov
xchg
bound
and
jmp
mov
xchg
inc
lods
xlat
pop
xchg
inc
mov
ret
cmc
mov
xchg
in
loopne
lds
call
sub
in
jle
and
or
adc
loop
in
jne
inc
shll
imul
fildll
cmpsb
pop
cmp
inc
jl
insl
lcall
add
cli
lea
xor
cmp
mov
cmp
mov
ljmp
imul
dec
int
push
push
inc
aaa
fldcw
add
jbe
cmp
cs
xchg
repz
xchg
int3
pop
iret
sub
push
xor
loope
incl
int3
jp
in
fldcw
rcpps
sbbb
leave
push
in
sbb
mov
jmp
shll
jmp
test
mov
push
jmp
mov
mov
lods
add
in
sbb
movsl
mov
and
push
enter
lcall
in
insb
mov
jl
adc
ja
je
popf
in
sub
scas
clc
xchg
mov
mov
out
jp
xor
and
sahf
in
outsl
js
lcall
into
adc
xchg
push
jmp
cmpsl
leave
pushf
mov
call
fcomi
lret
cmp
cmp
mov
popf
dec
notb
rcrb
shl
outsb
std
hlt
imul
lcall
lcall
stos
cltd
add
daa
mov
fcoms
add
movsl
jns
or
scas
in
dec
fisubrs
push
add
rol
pushl
or
rclb
push
inc
push
out
inc
fildl
rol
std
out
xchg
movsb
daa
fs
push
or
call
push
jg
push
ljmp
jbe
scas
dec
fsubs
sub
ljmp
clc
inc
cmp
jge
or
xor
cld
cmp
call
aad
mov
inc
in
fsubr
jnp
fmull
std
sbb
ljmp
push
jmp
and
add
or
shlb
inc
les
out
fnstsw
jae
ds
movsb
loopne
adc
xchg
fdiv
cmp
insb
or
add
jmp
and
xor
stc
inc
loop
fildll
mov
rorb
insl
cwtl
jle
inc
inc
sbb
insb
and
ja
call
xor
sub
sub
add
jmp
mov
adc
xor
movsb
mov
mov
jmp
add
cmp
push
cs
mov
ljmp
ljmp
mov
xchg
call
out
xor
jo
dec
repz
fbstp
sub
mov
lahf
push
bound
scas
jp
pushl
inc
outsl
mov
jg
inc
negb
outsb
mov
sub
add
mov
ljmp
lcall
inc
push
pop
repnz
les
mov
push
jnp
es
pop
test
push
leave
cmp
nop
add
inc
jmp
or
push
pop
jp
nop
mov
mov
push
add
aad
inc
mov
xchg
insl
jecxz
mov
pop
sbb
mov
sub
push
dec
js
cmpsb
stos
mov
ds
fucomip
dec
mov
jge
fnstcw
jl
test
jno
int3
dec
rorl
cmp
lcall
lods
add
ds
inc
inc
jae
ret
ret
arpl
pop
push
sub
push
inc
dec
cwtl
test
cmp
das
icebp
insl
clc
xor
xor
lods
adc
out
cli
jl
lods
push
and
xor
stos
cmp
das
push
test
and
sub
jp
sub
daa
imul
cmp
inc
lods
fmulp
pop
mov
sbb
jns
jmp
out
loop
mov
in
scas
mov
repz
adc
push
out
or
decl
mov
inc
xor
stos
pushf
and
cmpsb
rol
rcrl
sahf
out
clc
call
push
xchg
pop
pop
pop
cmpsb
ljmp
outsl
pop
mov
cmp
sbb
or
sbb
jg
mov
xchg
into
jl
cltd
mov
push
mov
cmp
sub
inc
cmp
sub
mov
js
mov
sbb
xor
xchg
mov
pop
das
adc
mov
enter
scas
inc
aam
call
adc
out
mov
jo
imul
adc
pushl
mov
repz
xor
out
or
pop
leave
insl
repz
and
loop
jg
subb
leave
add
jae
and
repz
fisttpll
sbb
pushl
mov
daa
xchg
push
mov
inc
mov
jo
ja
in
fidivl
test
jg
lcall
inc
inc
lret
sbb
popa
xor
xchg
aam
push
movlps
aas
and
jge
ljmp
shrl
xor
popa
push
inc
mov
lods
cmp
incl
iret
push
dec
lods
sbb
xchg
ret
mov
xlat
xlat
cmpsb
fcmovnb
cmp
and
test
lock
icebp
mov
scas
repnz
notb
lods
mov
add
mov
test
add
in
pushl
notl
dec
mov
xchg
pop
mov
loop
aad
test
arpl
int
mov
mov
enter
outsl
adc
aaa
imul
dec
sub
shr
xchg
and
pop
dec
cmpsb
daa
push
xor
mov
pushl
stc
dec
push
divb
cli
loopne
add
fiaddl
push
mov
arpl
or
imul
add
dec
xor
aam
mov
icebp
loopne
int3
fcoml
jl
inc
cld
xlat
mov
dec
mov
adc
sub
mov
scas
push
mov
loop
mov
sub
cmp
inc
loop
mov
leave
dec
mov
cld
call
icebp
and
repnz
fcmovnu
das
pop
leave
ret
add
lahf
addl
xor
adc
pushl
mov
jno
ficompl
in
stos
mov
or
and
sbb
lcall
push
imul
adc
in
popa
andb
push
xchg
or
ljmp
mov
arpl
jp
sarb
jle
dec
push
jge
call
pop
sub
or
stc
leave
fidivl
mov
lods
hlt
mov
pop
es
incl
mov
fwait
int3
lcall
adc
xchg
push
jge
add
jg
aam
lods
pop
inc
jmp
add
mov
out
mov
rol
push
inc
jnp
xchg
loop
into
jg
pop
mov
or
incl
stc
popf
push
jne
inc
jb
int
mov
daa
out
xor
lret
cmp
jecxz
sbb
incl
xor
mov
into
sub
aad
in
outsb
pusha
movsb
cmp
mov
xor
sti
sbb
dec
mov
stos
test
out
xchg
adc
js
js
xor
jg
push
xor
test
movsl
mov
xor
mov
sub
jecxz
dec
cmp
in
jmp
lcall
hlt
fs
jnp
int3
add
mov
lret
and
jmp
pusha
sbb
icebp
fnstcw
push
fwait
pop
aam
xchg
mov
fcoms
call
incl
idivb
sub
xchg
jnp
push
lahf
lds
decl
dec
mov
pusha
add
adc
jecxz
lahf
pop
cmpsl
dec
scas
repz
mov
fwait
cmp
ficoml
and
push
es
adc
out
aad
pushl
cmp
call
mov
bnd
mov
jnp
mov
sub
aad
jmp
mov
stc
xor
clc
iret
pop
outsl
dec
mov
push
rcrb
loopne
ja
add
pop
fcoml
aaa
std
sarb
mov
lea
inc
ljmp
outsb
xor
sbb
les
jmp
mov
adc
dec
rcl
adc
jns
adc
inc
add
enter
lahf
ret
hlt
sahf
lods
pop
je,pt
std
pushl
xor
push
xor
xor
stc
fcomps
dec
jl
test
push
and
call
pushl
out
out
push
aam
movb
int3
fdivs
sub
jg
ret
fucomp
movsb
fistl
push
out
rorb
popa
je
xchg
sub
mov
xchg
inc
xor
jb
lcall
fwait
xor
mov
loop
add
push
sbb
adc
mov
pop
std
and
jl
adcl
loop
mov
cltd
jo
loopne
shlb
call
int
mov
popa
pop
or
in
test
jmp
mov
imul
addr16
sub
clc
pop
mov
mov
movsb
or
ljmp
mov
inc
xchg
pop
movsb
xor
add
int3
popf
sti
hlt
sbb
sub
pop
test
mov
in
in
fcomip
fwait
mov
sub
dec
cli
roll
cmp
aaa
sbb
incl
test
js
pop
mov
sar
sar
push
push
gs
pop
jmp
hlt
mov
jp
push
push
arpl
into
jmp
fcoms
sub
dec
sub
sub
pop
cmp
mov
icebp
lcall
lcall
cmp
repz
push
mov
dec
ret
aas
ss
pushl
cmp
mov
mov
mov
sarl
lea
and
addr16
mov
sub
fs
sbb
sahf
scas
inc
ret
cmpsb
das
scas
clc
jmp
inc
xor
outsl
mov
out
int3
add
pop
ror
lcall
jo
fldl2e
dec
rorb
jb
les
cmp
xchg
push
pop
rolb
sbb
test
dec
push
adc
data16
ret
xor
lods
fwait
inc
push
sub
pusha
out
cmp
xor
decl
imul
mov
enter
and
in
cli
test
int
imul
xchg
mov
pop
add
inc
add
pop
or
lods
jl
pop
push
jg
movl
das
xchg
popa
imul
idivb
enter
mov
mov
das
lahf
lcall
loopne
mov
jo
fwait
inc
mov
or
decb
sbb
fisttps
jg
sti
inc
in
loopne
cmp
pop
adc
ds
add
xlat
mov
arpl
ljmp
cmp
or
jnp
insb
dec
xchg
icebp
add
pop
push
int3
rcrb
ficoms
decl
mov
lds
cmpb
pusha
fucomip
sub
mov
test
popf
repnz
or
loope
xchg
loop
call
ret
adc
inc
pop
push
mov
mov
shll
mov
mov
mov
das
sub
push
pop
mov
in
xor
lret
dec
dec
xor
mov
clc
cli
xchg
shr
sbb
push
add
popf
filds
or
loopew
adc
ljmp
cmp
fnstsw
cmpsb
daa
cmp
cmp
xchg
js
pop
jb
cmp
fbld
xchg
fdivl
cmpsl
out
arpl
mov
adc
pop
and
mov
mov
jo
stc
cmovne
cmp
les
sub
mov
inc
jmp
and
icebp
push
or
xchg
or
loopne
into
pushl
cld
incl
mov
sbb
add
xlat
mov
call
and
xor
movsb
xchg
ficomps
push
dec
cmpsl
adc
sbb
or
jae
decl
ljmp
inc
push
and
pop
pop
or
cmp
sbb
or
ljmp
mov
data16
or
pop
xchg
pop
and
clc
mov
sbb
leave
aas
pop
xchg
call
sub
lcall
divl
push
cmp
outsl
jae
pop
xor
xor
outsb
fdivrs
fisubl
nop
clc
mov
pop
movsl
test
pop
hlt
jmp
loope
out
movups
insb
cmp
out
xlat
cmc
pop
sar
lds
loop
and
js
cmp
mov
std
push
push
dec
dec
mov
or
les
adc
lods
test
dec
cwtl
aaa
fnstcw
call
js
pusha
sub
cmp
cmp
pop
sbb
mov
or
jge
out
cmp
inc
in
dec
push
data16
jg
dec
sbb
es
test
xchg
nop
lcall
dec
jbe
or
push
mov
fisttpll
cld
adc
dec
dec
decl
xlat
push
lret
or
jno
lea
stos
test
and
sub
add
jg
incl
pop
repz
xchg
mov
pop
sahf
dec
push
mov
mov
outsl
shlb
addb
in
ss
loop
jg
rcrb
test
cmp
lcall
or
pop
sub
inc
or
test
rcrb
cmpsl
push
adc
ljmp
ds
lea
loop
adc
aam
cmp
lds
cmpsb
sbb
mov
leave
inc
cs
ljmp
or
adc
xchg
mov
mov
outsb
filds
inc
dec
cmpb
pop
or
fbld
pushf
mov
rcrl
sbb
dec
addr16
or
test
inc
incl
repz
cmp
loopne
in
jge
popf
xor
pop
jns
mov
cmp
inc
ljmp
push
add
test
es
movsb
mov
test
rorb
nop
stc
mov
insb
and
cmpsb
xchg
and
je
iret
adc
jb
and
decb
out
jmp
into
xor
mov
xchg
lret
dec
adc
mov
or
or
incl
lods
ds
arpl
test
sbbl
out
andb
mov
mov
xor
jle
lods
xchg
xchg
decb
insb
or
lcall
test
add
cmp
mov
sbb
mov
sbb
ljmp
dec
push
adc
in
fstps
xor
xchg
das
inc
dec
loope
test
lcall
mov
jl
dec
in
push
xor
sarl
add
add
xchg
out
sbb
sub
retw
push
lcall
jg
jae
and
mov
mov
test
daa
jbe
jno
scas
insb
xor
rclb
xchg
ret
cmp
test
push
adc
sbb
call
push
mov
mov
stc
pop
and
les
adc
fidivrl
cmpsb
jp
ja
lcall
cmp
xor
aam
mov
inc
adc
mov
andl
jo
add
adc
int3
das
mov
sti
add
sbb
out
fcmovnb
das
jnp
flds
test
xchg
cmp
jmp
ljmp
pop
ret
xorb
loopne
data16
sbb
hlt
sub
pop
mov
aas
adc
loopne
mov
inc
cmp
adc
lea
jmp
outsl
pop
incl
fldcw
gs
outsl
cmp
into
out
xchg
sub
mov
decl
sub
int
insb
popa
inc
add
mov
mov
test
push
stos
xorl
insb
rcl
mov
gs
insl
push
outsb
imulb
cmpsb
adc
jb
jle
pop
dec
xchg
bound
rolb
xor
xor
lcall
add
push
pop
mov
sbb
out
mov
ljmp
das
mov
jbe
call
dec
lock
mov
xor
mov
push
lods
lds
lods
addl
loop
mov
pop
mov
add
insb
inc
stc
lods
loop
pop
dec
loop
pop
rorl
dec
cmp
xchg
mov
push
and
dec
cld
ljmp
add
incl
add
add
das
ja
addr16
decb
push
mov
lods
notl
mov
cmp
inc
sub
je
pop
subl
outsl
clc
inc
daa
push
out
shlb
jnp
adc
je
int3
pushl
fsubs
mov
sahf
mov
pop
lret
pop
imul
push
push
aaa
pop
jne
scas
mov
xor
mov
adc
jae
out
sub
cs
movsl
and
adc
cmp
pop
push
std
pop
xor
fwait
shl
push
ret
test
cmp
xchg
lods
or
aas
dec
test
ret
inc
fisubrs
adc
adc
mov
fs
data16
aaa
std
ljmp
mov
lret
fsubrl
mov
incl
push
fcoml
mov
incl
xchg
dec
inc
test
mov
inc
pop
jl
mov
xchg
xchg
push
and
imul
pop
push
adc
and
lods
out
sbb
loopne,pt
std
out
jp
xlat
add
pop
sbb
scas
outsl
and
js
mov
push
sti
mov
push
mov
mov
inc
cld
sahf
enter
mov
pushl
fsubl
cs
test
sahf
push
outsl
aas
roll
aad
and
xchg
pop
push
or
jmp
cmp
inc
sub
outsl
push
inc
or
and
pop
stos
insl
fcmovbe
sub
data16
mov
incl
orb
sub
aad
push
mov
nop
and
adc
mov
dec
push
repz
call
sbb
test
sbb
sbb
add
jecxz
insl
xor
mov
ret
decl
fidivs
xor
mov
adc
in
scas
adc
insl
xor
mov
fadds
out
aas
mov
dec
das
pop
js
mov
mov
mov
mov
dec
sbb
call
xor
mov
lcall
cwtl
and
out
adc
cmpl
pop
jbe
imul
push
data16
dec
sar
lcall
inc
inc
xchg
int
dec
and
mov
cmpsl
and
repnz
cli
scas
mov
push
cli
mov
enter
test
jae
leave
mov
pop
xlat
jg
jmp
daa
lret
jne
cld
mov
cmpl
ret
mov
push
cmp
repnz
jl
test
incl
inc
out
test
jg
cltd
jo
push
out
dec
aas
cmp
ljmp
add
in
js
mov
jmp
jge
test
add
sub
pushf
mov
cli
jbe
clc
testb
ja
mov
xlat
and
in
inc
and
xchg
hlt
xchg
fscale
imul
mov
jbe
es
fnstsw
pop
mov
sti
call
stos
cmp
xchg
in
in
arpl
sbb
shlb
aaa
lret
idivl
lods
ret
mov
addl
mov
lret
faddl
xorb
push
ljmp
and
jo
sub
cmp
outsl
jne
mov
ss
jbe
fcomip
jg
jl
scas
ror
xchg
jae
mov
outsb
sub
push
ret
xor
xchg
fists
and
inc
lods
cmc
divl
jecxz
mov
xchg
sub
fldl
stc
loope
pop
mov
xchg
les
sub
or
lock
sub
pushl
jmp
popa
cmpsb
aam
pusha
icebp
xlat
int
jb
xlat
adc
fs
decl
mov
jbe
test
push
mov
shrb
ljmp
sahf
jno
mov
addr16
cs
lea
push
jg
hlt
cmpsb
jne
xchg
inc
fidivs
lret
cmc
clc
push
cmp
jge
or
mov
push
or
or
xor
fucomi
sbb
inc
inc
inc
das
sbb
and
pop
movsl
pusha
stc
push
and
inc
jge,pt
xchg
dec
cld
jmp
orb
test
scas
mov
dec
stos
out
js
dec
fwait
out
dec
xorl
mov
dec
pop
mov
inc
pop
clc
inc
out
add
cmp
cltd
out
push
add
mov
loopne
es
mov
lret
icebp
ljmp
xchg
xchg
dec
sub
mov
pop
fldl
sbb
je
jg
int
mov
hlt
das
cmp
cltd
push
out
cli
add
sub
sub
mov
jo
idiv
sbb
imul
inc
jmp
xchg
flds
lret
sbb
incl
movsl
ljmp
jl
jnp
sar
inc
mov
jl
cmp
jg
dec
mov
jo
mov
cmp
dec
in
jae
imul
loope
cmpsb
add
push
popa
jecxz
mov
pop
stos
gs
fcomi
mov
mov
push
je
cmp
adcb
popf
and
adc
add
or
fprem
call
test
stos
or
roll
lret
pop
popf
push
mov
aad
adc
movsb
ljmp
sbb
lret
xchg
jnp
lret
sbb
jns
pop
hlt
jmp
mov
xchg
push
pop
push
shlb
test
mov
mov
add
fmuls
xor
jmp
push
ja
std
sub
mull
bound
lcall
jns
out
sti
ja
inc
cmp
xor
out
adc
lock
cltd
lret
cmp
and
cmpsb
sbbb
leave
das
inc
jnp
mov
stc
leave
jae
mov
mov
aam
mov
adc
ret
repnz
jb
repz
lds
icebp
mov
or
mov
mov
outsl
mul
imul
mov
mov
cmpl
pop
sbb
es
cmp
add
call
out
inc
lret
adc
inc
in
cltd
and
jp
inc
dec
testb
cmp
push
push
push
incl
xlat
in
dec
push
call
cmpsl
add
into
push
sbb
lahf
xchg
gs
decl
xchg
adc
pop
pop
pop
adc
mov
mov
push
pop
aaa
push
lods
sbb
xor
addps
decl
xor
stos
jae
cmp
xor
int
mov
mov
into
xor
pop
sbb
jmp
jbe
pop
rolb
mov
je
mov
popf
push
jge
iret
ret
fidivrl
lcall
mov
dec
sti
pushf
inc
add
mov
xlat
stos
fs
mov
inc
cmp
jmp
inc
es
cld
xchg
dec
inc
mov
cmp
sub
cwtl
mov
outsl
ljmp
adc
stos
hlt
mov
fisubrl
xchg
xchg
sbb
sub
ss
rcll
jg
mov
or
sbb
push
push
rcrb
cmp
mov
dec
dec
push
in
rcrb
jnp
cmp
into
dec
outsl
jns
adc
das
add
std
xchg
push
mov
mov
mov
cmp
ja
mov
loop
mov
push
pushf
loope
xorl
repz
in
push
adc
arpl
and
and
push
nop
jle
cmp
sub
pop
aas
repz
fistl
imul
adc
test
orl
mov
jmp
sbb
inc
mov
jge
or
cld
sub
sar
mov
jo
adc
mov
out
shll
lock
lea
inc
lds
pop
and
adc
fists
jl
in
inc
mov
inc
inc
call
nop
or
fsubr
jo
test
pop
and
xchg
add
int3
les
pop
fisttpl
loopne
or
scas
lahf
mov
xchg
add
inc
pop
sbb
int
or
cmp
fwait
and
xchg
push
leave
add
pop
das
sahf
and
dec
sbb
xor
sub
in
jp
sar
pop
or
inc
lret
addr16
dec
fwait
outsl
arpl
xchg
inc
jp
push
xchg
fildll
and
fnstenv
insl
fcmovu
dec
and
xchg
stos
or
adc
cld
ljmp
sub
mov
push
pop
mov
test
jmp
mov
stos
int3
leave
cld
jg
sub
pop
push
xchg
out
aam
es
lds
push
and
sub
mov
icebp
je
cmc
and
mov
or
call
jmp
inc
out
int
clc
cmp
ret
cmp
andb
lcall
pop
and
rclb
sub
repz
cwtl
test
call
sub
sub
incl
call
addr16
mov
sar
cmp
cld
add
pop
xchg
or
enter
jg
push
rcll
push
insl
in
xchg
mov
xchg
cli
mov
mov
fs
out
push
mov
das
inc
mov
nop
ds
arpl
lcall
sub
dec
push
mov
cld
mov
enter
mov
jns
hlt
inc
xchg
call
lcall
sbb
sub
xchg
aaa
dec
ds
cmp
cmp
lock
adc
cld
cmc
sarl
popa
ret
out
dec
decl
mov
int3
lods
data16
stos
movl
jmp
pop
jns
fstpl
inc
jns
jnp
fs
adc
enter
mov
push
pushl
pop
pop
pop
pop
imul
inc
mov
hlt
out
fld
push
test
lea
lcall
pop
inc
lret
inc
cmpsb
mov
jl
enter
add
das
push
fadds
loop
jg
lods
pop
das
std
in
andl
std
mov
rorb
pop
repz
mov
aas
adc
jmp
popl
mov
inc
lock
and
push
repz
mov
mov
cwtl
cmpl
cwtl
add
xchg
or
aas
out
xchg
mov
cmc
outsb
xchg
clc
mov
mov
int3
or
cli
jae
iret
lods
sub
aad
adc
mov
or
out
out
lea
decl
cmp
push
arpl
fnstsw
and
jne
cmc
out
mov
mov
call
xorb
mov
mov
jge
dec
pop
and
lock
mov
loopne
sbb
dec
mov
and
lcall
push
int
lock
sarb
sbb
adc
mov
sub
mov
int
ljmp
shll
jae
and
ror
push
fistpl
je
jns
xor
loop
cmp
cmp
or
das
bound
test
push
icebp
daa
pop
adc
mov
js
xchg
dec
cmp
sbb
call
adc
cmpb
lods
movsb
shlb
stos
inc
enter
pop
loop
mov
std
decl
enter
in
insl
and
xchg
cmp
cmpsl
out
cmp
into
in
arpl
mov
add
aaa
jbe
jns
call
inc
add
ljmp
incl
adc
andb
mov
jl
das
test
inc
insl
out
or
mov
sub
xor
jbe
jg
movsl
mov
les
stos
dec
daa
push
mov
fistl
jo
gs
jbe
pop
loope
leave
lods
pop
mov
inc
ja
addl
pushl
push
jl
in
aaa
xorl
loope
data16
pushw
mov
fisttps
pop
mov
mov
push
mov
mov
test
sub
cmp
aaa
cld
ljmp
mov
gs
or
aam
mov
mov
pusha
or
mov
cli
test
mov
mov
mov
add
xor
cmp
pop
sbb
jnp
pop
mov
mov
mov
in
je
pop
pop
mov
mov
mov
outsl
int
cli
and
inc
xchg
jbe
scas
xchg
adc
and
ficompl
and
shlb
xchg
stc
popf
sahf
and
jg
stc
xor
jle
fwait
cmp
out
data16
fadd
push
xchg
mov
call
out
fdivr
cmp
mov
lods
mov
jns
in
inc
inc
insl
sbb
push
cld
inc
xor
fnsave
imul
nop
out
sub
imul
mov
mov
call
and
inc
sar
sbb
mov
incl
sbb
fdivs
xchg
test
lcall
mov
push
mov
mov
dec
ret
cld
xchg
into
jne
out
pop
xor
arpl
fcos
pushl
adc
js
mov
mov
fs
jle
bnd
shll
fs
xor
ds
jb
ljmp
into
fisubl
dec
push
xorb
dec
sub
lcall
notl
inc
out
lcall
pop
push
imul
mov
inc
sti
es
sbb
ficompl
lods
cmp
mov
int3
lret
pop
push
mov
js
push
sahf
push
sub
lods
and
ljmp
sti
in
sbb
orl
aad
pop
dec
jmp
push
xchg
stos
push
push
mov
jmp
sti
in
xchg
push
xchg
cli
aas
movsb
scas
lods
mov
sbbb
das
pop
daa
push
ret
ljmp
push
pop
adc
loopne
mov
xchg
lods
out
in
sub
xchg
cmc
jmp
pusha
sub
shll
xchg
movsb
push
movsb
cli
xchg
jne
and
jg
xor
push
lret
fsubrl
jnp
imul
xchg
mov
add
and
pop
inc
inc
out
inc
ss
emms
push
iret
in
push
callw
push
jns
sti
incl
rclb
mov
ret
mov
jno
lods
pop
in
nop
pop
int3
jl
bound
xor
ljmp
test
dec
jnp
sbb
imul
xchg
push
in
cmc
add
cld
mov
lods
fadd
push
scas
leave
sub
fs
sbb
jo
adc
add
shlb
loopne
into
pop
fildll
and
shll
cmp
clc
xchg
push
jle
jg
test
push
sub
flds
icebp
call
mov
xor
aas
xor
xorb
sub
ja
in
pushl
and
ljmp
dec
lods
rol
xchg
adc
cmpsl
nop
addr16
shrb
pusha
pop
sbb
lcall
lock
or
inc
icebp
inc
data16
mov
sbb
ret
sub
jno
add
pushl
xlat
aas
lahf
test
or
lock
ficoms
jae
dec
sbb
push
in
ds
decl
scas
jp
inc
in
jnp
xor
nop
addb
aaa
cld
push
shlb
repnz
je
rcrb
mov
cmc
loop
shr
xchg
jnp
push
popf
mov
stos
xor
shl
test
negb
jo
and
mov
enter
incl
cmp
or
xchg
addr16
mull
sbb
push
push
fcomi
stos
jp
xchg
rol
int
sub
dec
cmpsb
pop
or
test
daa
adc
add
mov
pop
loop
ss
or
sub
scas
into
cmp
call
push
mov
in
shl
jecxz
and
xchg
pop
arpl
ljmp
std
shrb
js
loope
mov
jle
mov
decl
mov
stos
xchg
loope
jne
pop
outsb
les
jns
pop
mov
sti
sti
pop
mov
mov
gs
xor
shll
push
pop
push
test
cld
fists
xor
jns
lock
movsl
pushl
enter
cmp
test
adc
ficomps
cmp
incl
imul
push
adcl
cltd
mov
inc
into
pop
push
daa
faddl
push
pop
decl
sbb
cmp
mov
cmc
or
cli
int3
inc
stos
add
jl
addb
in
shll
fsubrp
cmp
mov
push
add
lcall
addb
notb
pop
lods
sar
pushl
dec
cmp
cmp
flds
push
pop
int3
ret
aaa
fidivs
mov
sbb
or
mov
ficomps
push
push
popl
dec
push
test
push
jae
push
dec
bound
push
shrb
mov
lret
or
sub
sbbb
cmc
or
pushl
inc
jle
jo
cmp
push
jg
fsubl
gs
cld
pop
push
jg
decl
push
mov
ss
mov
pop
std
repnz
sub
sbb
xchg
mov
pop
notl
stc
sub
jp
and
inc
inc
je
sti
sahf
adc
push
sub
cs
jns
cmpsb
cld
inc
stos
bound
std
jnp
icebp
and
add
cmp
cmpsb
push
or
ljmp
mov
cmp
movsb
sbb
push
xor
cli
xchg
sar
incl
or
in
mov
jbe
pop
mov
xchg
sub
decl
pop
gs
shlb
lahf
and
fwait
mov
icebp
negb
les
and
inc
fldcw
adc
das
iret
mov
push
dec
sbb
dec
push
sbb
jnp
sysexit
ds
aaa
movsb
sahf
dec
ror
cmpsb
cmp
dec
std
inc
cmc
inc
jb
das
in
mov
sti
xor
fimuls
mov
jae
lods
out
clc
add
lahf
or
mov
sbb
dec
pop
in
and
pop
dec
pop
xor
inc
js
mov
mov
fldt
loope
inc
xlat
adc
cmp
test
out
xchg
mov
or
outsl
push
inc
lret
pop
hlt
push
jl
jg
lret
std
test
mov
jae
pusha
bound
sub
ret
pop
or
jmp
les
ds
xchg
mov
pusha
or
andl
test
add
dec
les
int3
add
lcall
and
fistl
lahf
jle
dec
pushf
pop
mov
and
sarl
pop
add
scas
cld
incl
pop
sbb
cmp
addr16
aam
ret
sbb
insb
lds
lret
lods
jo
pop
or
cli
lcall
outsb
xlat
pop
repnz
push
xchg
hlt
pop
movd
ljmp
mov
test
adc
mov
les
pop
jg
or
fnsave
mov
outsb
cli
sbbb
stos
lods
mov
aad
mov
in
sub
sub
jle
fisttps
xchg
aaa
mov
or
int3
xlat
iret
sbb
fldl
iret
roll
pop
and
mov
dec
insb
and
pop
rclb
pushf
xchg
out
ja
jns
xor
mov
imul
shr
lock
clc
push
test
mov
sub
iret
xor
or
lret
add
cmc
xchg
pop
add
jno
in
mov
clc
mov
xchg
in
pop
push
adc
push
leave
insb
jp
jbe
orb
fs
jmp
mov
pop
jmp
mov
pop
mov
pop
adcb
xchg
add
incl
negb
xorl
in
icebp
daa
rclb
sub
cmp
xchg
popf
popl
ret
jmp
xlat
popf
xchg
dec
dec
mov
cmp
jg
inc
jno
adc
mov
xchg
stos
mov
push
lret
loopne
xlat
mov
push
es
or
sub
jmp
adc
jl
rorb
mov
or
cmp
cmp
pop
arpl
sub
add
clc
test
fcomip
lcall
repnz
rcrb
inc
dec
pop
sub
in
jo
out
push
jmp
fstpt
push
cmp
cmpsb
fimull
mov
cmp
dec
mov
mov
sub
jmp
inc
and
cmpsl
clc
int3
push
or
mov
push
call
rorb
imul
jne
push
outsb
dec
fstl
aaa
inc
js
cmp
out
hlt
loope
pop
std
mov
push
push
add
fsubr
out
loop
pop
and
mov
sub
dec
mov
mov
fprem1
xlat
out
cmc
mov
cmc
adc
lods
and
sbb
mov
xchg
pusha
push
xor
pushl
ds
xor
lods
pop
into
sti
mov
inc
lret
cmp
sub
fucom
jge
insb
in
arpl
mov
and
xor
xchg
rcrl
adc
pushl
mov
cmp
mov
and
lret
mov
xor
hlt
ljmp
mov
daa
mov
hlt
lahf
int
stc
xor
inc
flds
data16
outsl
clc
mov
hlt
pop
mov
shlb
xchg
mov
jmp
aad
or
icebp
sbb
leave
inc
call
ljmp
xor
or
pop
fadds
loopne
decl
push
out
mov
fst
dec
jle
test
xchg
stos
imul
push
mov
les
fwait
dec
cmp
jg
xchg
and
lea
adcb
xlat
aam
xchg
insb
pop
sub
cs
nop
push
cld
incl
sub
addl
xor
sahf
daa
mov
push
xchg
fucomip
mov
sbb
mov
push
stos
insl
enter
in
jg
add
push
in
add
xor
outsl
loop
cmpsl
orb
ljmp
xor
mov
inc
jle
mov
sub
cmp
incl
jmp
mov
loope
jno
jl
mov
or
inc
out
clc
fwait
insl
nop
sub
fimuls
and
cmp
push
bound
pushl
lds
out
insb
in
or
xlat
jl
xor
jbe
mov
loop
fisubl
jg
pop
test
or
aaa
lods
jbe
pop
lcall
pop
inc
jae
test
dec
adc
jle
rcrl
cmpsl
mov
dec
ljmp
insb
jl
aam
add
pop
cmp
shl
das
push
int
mov
cmp
mov
or
cmpsb
ds
fists
outsb
push
jle
pusha
cld
mov
cmp
sbb
jg
mov
sbb
mov
scas
lock
sahf
and
push
mov
push
mov
lods
pushl
xlat
or
fistpll
imul
scas
cltd
xchg
lock
fcomip
push
fnstenv
pop
xchg
pop
adc
adc
jnp
and
push
cmp
push
jecxz
add
stos
add
mov
sub
aas
shlb
mov
cli
jmp
sub
cmp
or
dec
dec
inc
mov
aad
jb
inc
inc
dec
stos
clc
es
xchg
testb
mov
mov
push
sbb
lcall
lcall
mov
inc
lret
mov
and
sbb
hlt
mov
fildll
inc
loope
mov
jae
in
je
jne
in
fstp
and
lods
in
incl
dec
dec
icebp
xor
addr16
sub
xchg
cmp
iret
imul
lcall
les
sub
pushf
push
fcomps
mov
pop
xchg
stos
and
pop
push
loopne
dec
mov
xchg
lcall
outsb
fisubrs
not
fdivrl
cmc
out
fidivrs
pop
mov
cmc
icebp
ds
mov
imul
adc
loop
fdivrs
lret
je
adc
xchg
adc
sti
or
insb
push
jne
push
js
and
xor
inc
sti
ja
movsb
out
negb
clc
jg
lahf
scas
push
test
loope
sahf
nop
mov
jns
dec
cltd
sbb
mov
jmp
or
imul
cmpsb
cmpsb
or
push
icebp
mov
out
adc
and
sbb
dec
hlt
pop
mov
fwait
repz
mov
orl
mov
mov
mov
dec
lahf
out
add
fdivrs
fdivr
jg
lcall
jo
jp
test
sub
adc
xchg
adcb
sub
test
ljmp
jl
dec
pusha
andl
pushf
xchg
int3
incb
decl
out
xorl
es
add
ret
and
pop
icebp
rcrl
add
stos
jb
cmpsb
out
out
bound
mov
aaa
add
inc
out
adc
vorpd
dec
bound
push
movb
and
xlat
in
call
jle
pop
fsubrl
lea
ljmp
mov
add
fldl
mov
push
and
mov
mov
ror
jb
ror
in
jge
cmp
and
jmp
cli
in
dec
bound
es
xor
cld
sbb
test
in
fistpll
fsubrp
js
out
addl
outsb
inc
std
and
mov
scas
sbb
cmp
push
cmp
fwait
adc
sbb
mov
cmpsl
mov
mov
mov
aaa
pusha
pop
scas
cli
pushl
icebp
push
mov
notl
jo
daa
lods
push
cld
pushf
mov
mov
jnp,pt
push
lret
cmpb
pop
in
or
push
lea
xchg
jge
aaa
imul
cwtl
movsb
jl
test
xchg
adc
xor
arpl
xchg
add
cmp
cmpsl
lcall
or
jg
inc
data16
into
dec
outsl
add
lock
push
in
lcall
test
mov
sahf
lahf
into
sbbb
pop
sub
inc
push
bound
test
mov
decl
jl
mov
lea
je
dec
cmp
mov
or
adc
sub
or
arpl
xchg
data16
sahf
loopne
lret
call
mov
movsl
sbb
pop
mov
sub
jmp
cmp
jg
fimuls
inc
add
xor
xor
out
test
jg
or
call
push
aad
sti
add
roll
lods
jns
in
test
jmp
jbe
outsb
inc
popa
inc
lahf
mov
jno
in
into
mov
popa
mov
pusha
call
je
lea
movsbl
inc
inc
sbb
jge
ficoms
icebp
mov
sub
adc
mov
lahf
mov
mov
jle
cmpsb
push
sbb
fbld
ja
jo
mov
fwait
shlb
mov
adc
sub
mov
fidivs
in
mov
cmp
sahf
jnp
push
sbb
xchg
ds
ret
sbb
adcb
fistl
icebp
jmp
sbbb
lods
test
in
je
sbb
sbb
cmpsb
adc
fildll
aas
xor
decl
and
shl
les
dec
mov
dec
add
pusha
stos
add
les
ljmp
icebp
xor
sarb
cwtl
addr16
and
add
das
rorb
xor
and
call
ljmp
arpl
adc
adc
jno
lds
test
pushl
mov
out
xchg
pop
or
xor
jmp
pop
hlt
ljmp
test
dec
jno
rcll
xor
aas
sarb
imul
add
dec
inc
lods
xchg
idiv
fdivr
xor
in
sbb
inc
repz
rorl
xchg
mov
push
fwait
dec
repz
mov
jmp
aaa
inc
push
push
dec
int3
add
pop
xor
push
das
rcrl
imul
xchg
pop
out
cli
pushl
addr16
sub
xchg
pop
imul
sub
dec
sub
dec
dec
lock
in
jne
cmp
xor
aad
rolb
gs
data16
and
jle
lcall
mov
xor
dec
mov
sbb
test
inc
jge
notb
incl
xor
push
or
push
inc
add
add
bound
cvtps2pd
xor
sar
sub
insb
sti
fwait
sub
jg
ljmp
ficomps
lcall
es
lcall
xor
lcall
jbe
and
adc
mov
testl
ljmp
mov
jl
fs
call
std
xchg
pop
sub
xlat
mov
sti
mov
add
cmp
ror
lcall
shrl
pop
call
mov
arpl
push
mov
xorb
add
adc
jo
sub
std
rcll
pop
stos
in
std
fdivl
loopne
dec
data16
and
mov
add
and
mov
mov
test
add
mov
incl
mov
adc
mov
test
ljmp
cmp
xchg
pop
decl
lock
xor
lcall
mov
lcall
ljmp
cli
mov
test
xorl
jl
push
adc
or
incl
aaa
fldl
test
inc
adc
ret
jle
in
int
and
cmc
decl
dec
cmp
lret
outsb
jg
outsb
and
jg
enter
shr
aaa
in
jl
int
and
mov
cmp
fbld
dec
icebp
pop
push
ja
inc
jne
mov
je
pushl
test
stc
push
es
aas
fistpl
jnp
loope
addr16
push
fldl
ljmp
adc
mov
mov
fsubr
inc
inc
mov
scas
hlt
inc
ja
ljmp
clc
jg
xchg
sbb
adc
std
cmp
add
rcrl
adc
xor
dec
mov
loopne
shl
sarb
int3
mov
pop
cs
adc
ljmp
xchg
data16
into
and
rolb
inc
loopne
jb
xchg
push
scas
pop
mov
nop
jecxz
cld
pushl
inc
cwtl
ret
dec
fs
test
sbb
cld
xor
ljmp
ljmp
imul
pop
cmp
push
mov
test
pop
std
in
mov
mov
shll
sbb
mov
fldcw
das
adc
outsl
dec
outsl
js
shrl
js
rcll
test
in
inc
push
inc
cli
imul
xor
push
arpl
movsb
cltd
adc
inc
imul
loop
clc
mov
and
repnz
std
out
notl
xchg
pop
xlat
and
mov
inc
imulb
pushl
pushf
mov
jnp
or
ja
fdivrl
cmp
xchg
cmp
or
pushl
ds
popf
arpl
addr16
movsl
out
fldt
addr16
lods
lods
cmc
mov
xor
dec
fsin
ficomps
xor
inc
mov
mov
dec
stos
fwait
sbb
aas
pushf
scas
jg
movsl
jge
xor
adc
xchg
scas
loope
mov
jmp
ds
sarb
sub
dec
lea
pop
out
xor
inc
test
jecxz
jg
out
frstor
lods
das
inc
pop
loop
cltd
clc
lods
arpl
fs
js
xchg
loopne
lds
jnp
push
pushl
hlt
clc
cld
loop
and
mov
addr16
or
mov
ret
cmp
mov
sahf
inc
in
js
cmpsb
icebp
xlat
inc
call
fcoms
dec
adc
pushl
push
xor
stc
or
cs
mov
push
cmp
push
in
jmp
aad
int3
mov
cli
mov
jg
xchg
push
jns
addb
lcall
icebp
xchg
and
inc
pop
sahf
push
pop
dec
imul
xor
adc
outsb
adc
inc
cmpsb
mov
in
mov
stos
adc
xchg
mov
pop
out
decl
add
cmpl
push
mov
pop
out
movsl
xchg
fcoms
aaa
jb
pop
ljmp
scas
inc
xor
cmc
or
mov
repnz
xor
cwtl
shrl
das
inc
bound
jmp
aam
icebp
mov
cmpsl
cld
xchg
cmpsb
mov
cwtl
fstpl
xlat
in
pusha
inc
xor
fists
sub
adc
imul
ret
jmp
int
adc
test
cmpsb
icebp
cli
mov
aam
lock
dec
shll
mov
jbe
or
push
in
pop
or
sub
out
mov
or
aaa
pop
sbb
xor
or
test
aas
dec
ljmp
js
ds
sub
aam
jp
and
xchg
jmp
ja
idiv
decl
ret
xchg
mov
out
in
sub
cmc
fbstp
mulb
neg
xor
incl
fld
negb
hlt
in
test
outsb
sub
fmull
push
call
jp
repz
cmp
js
pushf
dec
js
lock
mov
mov
fdivrl
mov
incl
pushf
cmpsl
xchg
int
fdivrs
sub
lcall
lods
jae
test
int3
xchg
movsb
movsb
cmpsl
pushf
lods
repz
mov
lods
xor
jmp
and
cmp
jb
call
lock
aam
mov
pushaw
pop
push
mov
jmp
push
fldenv
adc
push
push
popf
cmpsb
mov
ficoms
mov
jae
cmp
mov
decl
sub
adc
push
mov
clc
ja
dec
int3
sub
jno
sub
call
std
pushl
ret
push
js
ss
dec
mull
stc
negb
mov
addr16
xor
incl
push
into
sub
cmp
jg
xor
mov
inc
jnp
xor
cmp
ror
stos
sahf
pop
xchg
ret
jecxz
dec
mov
or
jbe
dec
pop
xor
stos
loope
inc
dec
clc
jge
push
mov
dec
cmp
outsl
incl
adc
mov
and
or
es
adc
or
ljmp
cli
jge
mov
xchg
adc
lret
pop
imul
cmpsl
cs
dec
incl
out
in
dec
sub
lcall
dec
cmc
push
fdivs
ljmp
mov
call
mov
and
push
xor
sbb
or
lcall
testl
mov
mov
cmpsb
repnz
jo
dec
lds
lock
jg
mov
pop
fwait
jae
or
repnz
ficomps
call
incl
ds
cmp
pusha
data16
mov
lret
add
lods
mov
aad
je
pop
mov
jmp
mov
jmp
sbb
push
add
ficoml
xchg
mov
mov
es
dec
movsb
xchg
scas
test
out
dec
jae
mov
shll
xor
popf
adc
clc
cli
mov
outsl
incb
or
insl
js
scas
cli
cmp
sahf
or
daa
push
repz
call
mov
xchg
xchg
cli
add
pop
enter
cmc
and
mov
pop
xchg
inc
dec
jae
mov
ljmp
or
jnp
xor
test
sub
mov
hlt
mov
cld
in
adc
out
shr
mov
loopne
idiv
jg
jg
sbb
inc
add
inc
adc
in
sahf
or
mov
idiv
call
inc
sahf
repnz
xchg
rcll
adc
or
imul
mov
cld
lock
and
lcall
cmp
and
loop
cmpsb
push
mov
xchg
aad
mov
jno
jns
test
stos
mov
xor
fdivrs
pop
xchg
lahf
repz
jb
das
and
lcall
std
add
mov
ljmp
call
lods
jbe
mov
xchg
mov
sub
inc
repz
push
push
push
lahf
pop
jne
insl
repz
ljmp
out
movsb
sarb
dec
lea
lods
scas
ficoms
dec
ret
mov
sbb
outsb
push
sub
sbb
das
scas
mov
adc
into
jg
scas
ret
inc
pop
mov
pop
cld
push
and
cli
cmp
leave
lds
dec
fisubs
clc
loope
popa
jecxz
jg
xlat
xchg
xor
ja
cmpsb
add
aaa
rclb
xchg
jl
dec
lcall
lods
push
xchg
sarl
lods
sbb
jle
mov
call
hlt
mov
aam
movd
xchg
mov
push
loopne
pop
stos
shld
mov
incl
insl
and
xor
nop
dec
or
inc
adc
pop
out
out
add
lcall
andl
xlat
out
add
outsl
and
rorl
sub
lcall
add
inc
movsb
sbb
insl
dec
fsubrs
push
xchg
ljmp
jb
ds
jmp
cmp
mov
jle
mov
out
insl
xchg
inc
lret
test
mov
call
cld
or
iret
xchg
mov
lret
sbb
ret
sbb
call
loop
ret
fistpl
inc
sahf
jecxz
push
sbb
setle
xor
dec
test
in
out
cli
dec
and
ljmp
push
arpl
cmp
jb
push
cmc
lret
insl
insb
imul
or
mov
pop
jl
xor
daa
or
mov
sete
mov
jbe
xchg
movb
mov
add
push
aas
mov
rcr
jp
sub
mov
inc
sbb
shlb
jae
adc
cli
mov
test
pushl
sbbl
negl
test
push
or
dec
lcall
pop
xor
jno
mov
or
test
sbb
mov
mov
or
mov
inc
fdivrl
pusha
test
push
lock
shrl
adc
cmpsl
xor
cmp
js
gs
inc
xor
sbb
add
outsb
push
dec
adc
mov
fists
in
pop
or
pop
cmp
adc
pop
out
dec
sub
call
cmp
mov
imull
push
mov
xlat
repnz
inc
inc
loope
jl
stc
adc
sti
cmp
lea
jle
mov
rcll
cli
in
jno
frstor
cmp
std
fnstcw
dec
pop
inc
aaa
addr16
adcl
lcall
sub
inc
lret
movsl
fwait
ljmp
call
cmp
cmp
repz
fiadds
adc
shlb
sub
stos
jg
fcomip
mov
jbe
adc
adcb
pop
sarl
sbb
lods
or
scas
cli
ljmp
notb
fldt
xlat
or
ja
std
xchg
adc
jae
stc
jge
dec
out
dec
sub
lahf
loopne
lea
xor
in
fimuls
mov
mov
add
sub
scas
jge
sbb
decl
cmp
orb
fildl
jl
adc
mov
ljmp
lahf
push
out
mov
cli
and
or
mov
jnp
push
or
inc
clc
scas
rolb
xor
cmp
cld
mov
ja
std
xchg
shrl
outsl
pop
enter
std
jp
dec
xlat
lret
aad
cmp
fsubrs
dec
lcall
mov
bound
out
sub
daa
pop
cmp
push
imul
adc
sti
xchg
xchg
std
insb
xchg
lods
pusha
into
xchg
pop
mov
mov
mov
test
add
popa
sub
cmp
jno
push
push
insl
outsl
xor
cmp
dec
jno,pn
inc
test
push
jg
and
mov
mov
mov
fwait
out
adc
cmp
pop
shl
ljmp
lds
imul
adc
sub
jns
arpl
cwtl
call
hlt
inc
fs
and
out
aas
dec
push
jg
neg
pop
les
adc
cwtl
push
cmp
decl
iret
xchg
cmp
lods
push
xchg
push
aaa
sbb
push
xchg
dec
repz
repz
lcall
or
pop
cmpsl
add
loop
mov
or
adc
mov
fnstenv
call
mov
repz
inc
into
aaa
push
cs
mov
mov
fsubrp
out
xchg
scas
push
ret
dec
movsb
cs
hlt
clc
sub
pop
adc
sub
aam
test
push
pop
mov
insb
and
inc
jo
ret
int3
add
ret
lods
loopne
daa
and
std
jo
sub
mov
out
mov
arpl
sub
sub
inc
aaa
mov
pop
mov
add
data16
cmp
out
lret
mov
pushl
or
in
add
ret
xchg
aas
sti
shlb
popf
cltd
push
cli
incl
mov
int
mov
push
lahf
push
cmp
lcall
div
int3
jg
js
vpmacssww
cmp
mov
repz
rorb
test
cmp
push
jle
fwait
xor
cmp
loope
fisubl
lcall
xchg
mov
jb
pusha
push
add
mov
loopne
mov
movsb
rcrl
sub
sub
mov
xchg
xchg
aad
fs
inc
fcos
sub
pop
ljmp
cli
decl
dec
in
mov
popa
mov
push
mov
int3
jmp
sbb
mov
aad
inc
adc
sti
xor
dec
xchg
jg
lods
xchg
stos
mov
mov
in
pop
cmp
add
jg
and
daa
sbb
cltd
mov
das
xlat
in
out
loopne
mov
cmpsb
push
pop
orl
fdivl
pop
outsb
call
incl
iret
lock
xor
std
out
sbb
xor
adc
lcall
sti
sti
bound
std
adcl
or
hlt
aam
sub
packuswb
stos
loopne
call
gs
pop
mov
push
js
filds
mov
fisttps
sub
sahf
in
in
imul
xchg
jmp
adcb
cmp
mov
fstpt
adc
sub
imul
pop
js
insb
push
jo
testl
jg
cld
lds
xlat
std
popa
inc
fcmovne
xor
xor
sbb
call
ja
sub
pop
call
cli
xchg
cmp
imul
lahf
aas
add
mov
jmp
dec
dec
clc
loop
pusha
jns
push
fwait
idiv
jg
xor
into
mov
or
inc
fdivrs
xchg
insl
fildl
cmp
mov
dec
scas
subb
xor
out
mov
test
sub
mov
jg
cmp
jne
or
jecxz
push
ds
or
pop
push
inc
lahf
xchg
jl
out
mov
test
pop
push
ljmp
and
repnz
mov
shll
cld
and
and
and
sub
retw
jae
iret
ret
jg
ljmp
push
int3
mov
lcall
incl
push
mov
es
dec
sbb
push
sub
xor
mov
clc
repz
test
push
pop
sahf
fwait
fs
cli
aaa
out
pusha
sbb
sti
iret
test
int
incl
sub
std
int3
shlb
push
loop
lcall
xchg
inc
cmc
decl
push
mov
repnz
loop
and
aas
sbb
out
adc
test
in
aam
sbb
ljmp
xchg
aam
mov
mov
jne
jno
sti
aaa
std
incl
in
xchg
mov
repnz
sub
addr16
inc
in
cmp
fcos
push
sbb
pop
jnp
lock
mov
push
mov
mov
bound
xor
test
jns
fcomip
inc
jecxz
mov
fidivl
ljmp
popa
pop
sbb
into
neg
and
cmp
test
out
push
sbb
lcall
pop
test
fidivrs
mov
xchg
mov
in
mov
test
pop
ljmp
xor
decb
xor
adc
mov
sub
push
es
and
adc
loopne
cmp
bound
push
int3
loop
decl
add
sbb
inc
jne
push
jle
sub
lea
or
mov
aas
cmc
adc
fld
cmp
and
pop
add
mov
push
jg
pushl
das
dec
dec
mov
enter
cltd
mov
pop
aam
mov
stos
jae
lcall
sub
loopne
and
and
aaa
push
jns
mov
cmpsl
xlat
ljmp
push
xchg
insl
lock
pushl
scas
fldcw
xor
stos
mov
in
pop
popf
mov
and
sub
fdivrl
sbb
daa
pushf
or
aam
lcall
ret
push
imul
fldcw
lea
xchg
mov
shl
sub
mov
mov
mov
ret
aaa
shlb
cmpsl
mov
jg
bound
and
inc
mov
mov
or
inc
popf
ret
lret
dec
loope
jg
pop
push
pop
xchg
out
in
inc
jae
ljmp
inc
stos
shl
fwait
or
cmc
stos
push
lcall
hlt
mov
sub
out
popf
jg
mov
sbb
or
andb
mov
fists
leave
cld
sub
loopne
pop
mov
std
subb
jl
repz
jle
ss
jmp
popa
imul
insl
xor
jno
loope
ss
rcpps
dec
dec
dec
test
bound
xchg
mov
out
iret
jp
adc
loopne
jo
mov
aas
mov
rorl
xor
xchg
fwait
jmp
rclb
mov
xchg
pop
bound
lcall
lods
in
jp
mov
shlb
add
aaa
leave
addl
sub
fcmovnb
stos
lea
mov
insl
cld
jp
xor
test
pop
repz
ljmp
mov
cmp
adc
jbe
sub
pop
inc
sbb
push
int
aam
idiv
ja
cli
cmpsl
push
or
pop
jbe,pt
sbb
stos
adc
call
fdivl
pop
lock
in
jg
inc
inc
outsl
xor
jg
incl
bound
pop
mov
or
mov
and
push
jns
shlb
stos
ds
incl
and
or
int
xchg
popf
out
lcall
push
icebp
pop
sub
imul
push
lods
cld
cltd
stc
sbb
mov
std
xor
xchg
fisttps
call
jns
inc
pushw
in
nop
and
std
ja
mov
sbb
outsb
mov
ljmp
push
int
cli
movl
xchg
pop
pop
pop
jbe
dec
jmp
fisubrs
sub
xchg
mov
pop
dec
fnsave
sbb
movb
add
lcall
in
imul
jle
leave
cwtl
adc
call
stos
roll
das
sar
mov
or
xchg
adc
mov
loopne
xchg
fcomp
int3
push
mov
mov
addb
ja
jmp
jb
out
fidivrs
movsl
ficompl
sub
mov
aam
cld
aad
add
dec
sub
decl
das
add
aam
sub
fs
pop
jno
inc
pop
fadds
lcall
sbb
mov
cmpb
je
mov
subb
push
cmp
jbe
mov
inc
mov
popa
insb
aaa
in
jb
mov
mov
sbb
stos
out
add
adc
add
inc
out
cmp
inc
stos
pop
sub
cmpsl
mov
lock
je
outsl
imul
cmp
xchg
jecxz
xchg
inc
push
push
cli
push
es
fidivl
popl
jp
lea
out
loop
xchg
jge
jmp
jo
lcall
das
add
sbb
jge
shlb
jb
push
mov
sub
lret
outsl
and
add
insb
inc
daa
lahf
push
dec
in
cmp
mov
push
and
adc
movb
sub
mov
fdivl
sub
mov
clc
mov
repnz
pop
clc
lret
dec
rolb
pop
cmp
decl
add
leave
xor
jb
rcr
or
adcb
mov
xor
cwtl
dec
int
and
pushl
or
jmp
mov
inc
icebp
outsb
ljmp
lcall
sub
jg
mov
std
add
lods
in
cs
adcl
leave
inc
pop
inc
sar
push
pop
sbb
and
cmp
mov
sar
mov
jecxz
add
cmp
push
in
ja
dec
aas
repnz
and
jb
test
cli
adc
outsb
loope
ja
dec
test
pop
je
xchg
lea
pop
dec
or
pop
icebp
scas
cmpsl
sub
adc
pop
adc
or
cli
cmp
jnp
adc
dec
pop
xchg
fwait
jo
call
stos
cltd
stos
sbb
ret
mov
mov
clc
xchg
mov
xor
push
add
je
push
and
mov
ljmp
sbb
xchg
ss
mov
jle
sub
push
lds
add
incl
cld
aad
sub
outsb
pop
pop
fdivs
xchg
lcall
out
mov
sahf
int
mov
cmc
sbb
iret
dec
jnp
cmpsb
scas
adc
call
cs
or
icebp
sbb
xchg
cmp
arpl
stos
jl
mov
cmp
fwait
xor
test
jmp
sbbl
pop
jp
sbb
xchg
adc
pop
xchg
or
bound
arpl
xchg
cld
ljmp
cmp
test
fldt
push
jge
mov
loop
jmp
clc
pushl
sbb
cld
sbb
clc
cmp
xor
ljmp
sahf
shll
fildl
lock
lret
cltd
jge
lods
fidivl
lret
adc
adc
pop
cmc
jmp
jg
mov
mov
cmp
pop
push
push
sub
cmp
jle
mov
inc
cld
ret
push
pop
ficoml
in
data16
jp
enter
decl
dec
jg
insl
fwait
ret
int
pop
inc
fstpl
xor
jmp
push
pushf
mov
add
test
pushl
movsb
jg
daa
mov
enter
js
test
add
outsl
ja
ljmp
push
and
sbb
arpl
push
dec
lds
adc
push
aas
clc
add
call
xchg
sbb
test
sbb
jge
shlb
jmp
jb
lcall
adc
arpl
pop
js
sub
cmp
pop
pushl
mov
xor
cmc
sub
mov
popf
cmpsl
adc
cld
or
rolb
jp
ret
icebp
cld
int
cld
mov
cmpps
and
add
dec
sti
call
stos
mov
lret
loopne
js
in
loopne
dec
fwait
pop
xor
jecxz
out
enter
add
sub
idiv
movsl
push
gs
iret
lods
daa
push
inc
orl
jnp
jmp
mov
inc
pop
cmp
pop
jo
icebp
inc
popf
or
ss
imul
loop
in
dec
movsl
cs
mov
dec
popa
mov
mov
in
pop
mov
adc
data16
scas
sbb
shl
pop
mov
pushl
in
push
decb
or
aas
mov
mov
pop
inc
notb
lods
jp
pushl
out
idivl
fisubl
dec
mov
pushw
aad
lds
adc
dec
lcall
hlt
mov
sub
ret
lea
cmp
dec
mov
test
jecxz
data16
add
sbb
xchg
push
inc
mov
out
adc
push
ficoml
mov
lds
xchg
fisubl
call
mov
stos
test
call
aas
jo
ja
ss
sub
and
jne
mov
pop
in
fisttpl
jp
out
add
call
push
test
add
hlt
jbe
and
insb
insb
jne
push
sub
loop
pop
test
pop
nop
adc
or
mov
pushl
mov
lcall
fnstsw
inc
mov
xchg
mov
jecxz
jns
xchg
cmc
packssdw
mov
jmp
hlt
mov
out
pop
and
dec
jmp
loopne
pop
stos
lods
inc
add
mov
ljmp
mov
pop
add
orl
mov
out
hlt
call
ret
push
pop
cli
mov
fcoml
mov
mov
xor
jecxz
pop
mov
cs
lcall
pop
les
test
cwtl
sar
scas
les
cwtl
adc
jmp
mov
popa
iret
xchg
dec
push
outsl
mov
dec
mov
in
imul
pop
movsl
push
mov
dec
in
push
push
mov
sbb
rorl
out
decl
mov
mov
addr16
shr
cmpl
sub
ljmp
mov
sbb
sbb
bound
fdivs
pushl
in
and
jb
enter
in
scas
lds
push
and
lods
out
out
test
fadd
sub
adc
xchg
ret
xchg
data16
push
sahf
fstps
or
repnz
mov
dec
pushf
mov
xor
cltd
mov
iret
popa
push
call
cmp
sbb
jmp
mov
ror
and
cmp
xchg
xchg
ss
or
mov
dec
clc
fcomps
push
pushl
cld
or
mov
xchg
jns,pt
es
xor
inc
ss
into
loop
add
rcr
fs
pop
inc
fsts
popf
addl
xlat
dec
test
mov
xchg
lcall
sbb
mov
jge
dec
fidivs
in
mov
xor
adc
ljmp
xor
cmp
arpl
cmp
pop
cwtl
xchg
mov
and
shrl
daa
xlat
cltd
pop
jns
sti
or
cmp
pop
mov
shrl
fwait
ret
ljmp
jl
mov
add
cltd
outsl
inc
shll
sbb
movsl
pushf
mov
lock
cmpsb
dec
sar
adc
push
mov
mov
pushl
ss
jle
cmpsb
jge
xchg
mov
push
les
scas
dec
jle
cmc
sub
mov
pop
cmp
sar
fs
shl
shrl
mov
pop
dec
jnp
cwtl
push
mov
leave
test
dec
xorl
and
pushl
sbb
sbb
add
pop
lret
sub
pushl
add
inc
jmp
shrb
jmp
rcl
dec
sbb
outsl
xor
and
and
push
pop
mov
popf
std
cmpsb
scas
mov
decl
in
jmp
and
lret
clc
pop
sub
cmp
ret
arpl
lret
and
out
push
mov
add
push
sbb
and
int
cmp
jg
les
popf
or
dec
jge
xor
lods
pop
lods
lock
decl
into
cmp
dec
xor
mov
fmulp
pop
jg
loop
pop
push
test
call
mov
std
dec
fildl
or
jbe
ss
test
test
jmp
pushl
das
sub
lods
sbb
sub
stc
inc
mov
xchg
jg
mov
push
jl
jmp
add
lds
and
jb
icebp
ret
cmp
lcall
pop
dec
mov
das
xor
jno
call
loope
mov
mov
out
pushw
cmc
int3
nop
das
inc
loope
pop
subl
fcomip
cli
pop
xor
xchg
cltd
adc
jl
imul
stc
push
mov
enter
call
mov
shlb
mov
test
ss
jmp
incl
jge
sub
push
mov
mov
xchg
mov
mov
mov
shl
roll
lock
call
xchg
sbb
mov
jmp
data16
xchg
xor
ret
inc
xchg
mov
iret
cmp
scas
adc
call
addr16
mov
hlt
xchg
jle
incl
mov
xchg
lods
jno
pop
push
sbb
aad
shl
popf
add
adc
add
pop
cmpsl
pop
pop
pop
cmp
cmp
mov
sub
fsubp
push
stos
or
xor
inc
push
pushl
outsb
mov
aam
jecxz
leave
ret
cltd
ss
sahf
xchg
dec
aas
xor
cwtl
nop
pop
sub
hlt
bnd
cmp
push
jg
xor
cmovbe
sbb
cmpsl
ret
pop
pop
mov
pop
jp
ljmp
stos
cwtl
add
in
push
xor
ljmp
mov
pop
into
jg
push
es
push
addb
andb
or
stos
mov
mov
cmp
push
icebp
dec
adc
xor
push
mov
push
xchg
lock
and
test
mov
sub
cmp
scas
cmpsb
push
cld
mov
mov
stos
out
das
adc
mov
in
pushl
scas
push
test
insl
xchg
das
xchg
fisubs
arpl
push
inc
movsl
push
jo
stos
js
or
sbb
jmp
mov
into
sub
push
stos
mov
jno
sbb
iret
adc
dec
push
mov
push
mov
arpl
xchg
aaa
push
xchg
andl
incl
mov
fs
out
mov
rcrl
sub
loopne
cmpsl
decl
lret
mov
pop
test
imul
pop
mov
cltd
push
dec
dec
push
jns
cmp
jmp
sahf
repnz
pop
je
cld
xchg
xor
sti
or
jbe
and
inc
push
xor
jle
or
fiadds
sti
mov
nop
push
ret
mov
xlat
iret
lods
pop
js
mov
ret
pushf
inc
and
push
xchg
inc
push
clc
mov
jp
out
sbb
rolb
data16
sbb
fsubrp
rclb
and
decl
ds
xor
js
lds
in
sbb
adc
jno
add
push
adc
push
dec
loopne
dec
pop
clc
outsl
ja
mov
mov
imul
dec
xor
push
enter
push
scas
insl
sbb
jno
fidivs
mov
push
ret
ljmp
sub
ljmp
into
add
xor
lods
arpl
cmp
call
adc
stos
jp
adc
outsb
addr16
fwait
enter
icebp
je
push
push
inc
mov
imul
lcall
loop
int3
test
xchg
inc
fwait
push
call
xchg
sbb
push
sub
outsb
outsb
bound
pop
xor
inc
flds
mov
ljmp
mov
shrb
cmpsb
test
jg
scas
mov
test
xchg
jae
aas
sub
stos
fdivs
insb
lahf
dec
into
add
jmp
mov
repz
pop
pop
mov
jmp
cli
mov
bound
and
cli
push
mov
aam
jnp
xchg
pop
mov
jb
int3
pushl
push
imul
xchg
jbe
xorl
cld
pop
inc
ja
call
mov
cmp
gs
fmul
inc
negl
pop
js
outsl
clc
jg
cli
cmp
jo
or
cmp
pop
addr16
or
lcall
push
pop
fcomip
call
mov
adcb
mov
jns
fsts
ljmp
insb
mulb
cmp
adc
mov
pop
movsl
sbb
stos
push
clc
lcall
xor
pop
sbb
loop
ljmp
stos
ljmp
sbb
int3
icebp
push
cmp
adcb
loop
test
mov
mov
push
pop
push
xlat
pushl
pop
les
cvtpi2ps
cmpsb
call
loopne
lea
mov
push
sub
pusha
xchg
dec
jbe
int3
cwtl
jae
jg
incl
sar
pop
idivl
cmp
repz
loope
rorl
inc
sub
fucomip
and
enter
mov
cltd
sahf
jg
ss
lcall
mov
pop
xlat
pop
jp
outsb
pop
ret
jg
add
aaa
mov
cmp
ret
clc
pop
loop
sahf
cli
dec
sub
in
call
arpl
mov
mov
loop
mull
lods
rolb
mov
cld
outsl
cli
call
and
mov
icebp
shlb
mov
mov
jg
pusha
xchg
mov
adc
enter
out
mov
call
ja
jge
xor
hlt
imul
shrl
ljmp
sahf
mov
das
test
adc
cmc
loopne
fmuls
ljmp
push
mov
rol
add
mov
imul
scas
dec
pop
enter
sar
call
mov
cmp
repz
add
insb
daa
out
fdivr
jg
mov
mov
rcll
lods
mov
fidivrs
pop
push
in
ja
jp
adc
push
std
mov
or
xlat
shrb
pop
inc
shlb
mov
cmc
cld
xlat
mov
jo
mov
aaa
out
rcrl
mov
and
cmp
add
mov
pop
lahf
jecxz
cwtl
imul
pop
adc
gs
arpl
adc
push
movsb
push
cld
test
mov
in
sbb
push
mov
mov
add
frstor
adc
test
cmc
outsl
xchg
lods
dec
xor
ljmp
push
lock
sbbl
imul
into
and
xor
mov
xlat
loope
ret
decl
push
jb
clc
out
sbb
cld
aad
xor
out
lods
mov
mov
mov
dec
enter
ret
and
pop
loopne
call
xchg
fiadds
push
lock
mov
jmp
jecxz
sub
xchg
leave
loop
mov
push
xchg
xchg
xor
bound
loopne
popa
mov
pushl
mov
pop
movb
dec
stc
fcmovbe
stos
mov
lea
in
sub
or
inc
ds
cld
cmp
sbb
dec
rclb
jmp
jge
cmp
jmp
clc
jg
je
mov
xor
xor
and
jo
sti
call
inc
mov
or
push
xor
sahf
rcrl
jge
icebp
or
mov
cmp
cmp
imul
pop
lcall
pushl
dec
add
mov
push
lea
pop
dec
in
xor
add
dec
idiv
pop
mov
jo
mov
incb
into
mov
mov
cmp
outsb
mov
leave
adc
sti
push
test
rol
jnp
jmp
sbb
rcll
popf
mov
cmp
jl
loope
lods
out
xor
or
add
aaa
stos
fs
inc
pop
sub
pop
or
lcall
pop
mov
les
cmpsl
adc
jge
sarl
push
xor
test
fdivr
mov
pop
outsb
jge
sub
mov
mov
lcall
jmp
or
fidivrs
cmp
mov
decl
shlb
add
fsub
mov
lock
mov
and
test
add
sub
jmp
add
adc
sbb
sub
pop
sub
push
idiv
incl
jb
inc
sub
mov
hlt
in
mov
adc
sahf
ret
incl
insl
sbb
ljmp
mov
jl
mov
out
mov
in
jecxz
push
stc
xor
or
fisubrs
jno
sahf
imul
fmull
sahf
cmp
incl
icebp
jno
out
cs
sub
xchg
mov
ja
or
orl
push
cmpsl
mov
rcll
icebp
daa
mov
and
fcos
lcall
sub
inc
jmp
push
stc
mov
inc
addr16
decl
iret
cld
outsb
lea
test
add
sbb
arpl
sub
push
jecxz
out
jno
mov
aas
jnp
jecxz
mov
movsl
mov
mov
jb
movsl
xor
pop
mov
loop
mov
ds
out
xor
ret
cli
jg
lcall
push
shrb
jmp
adc
xor
push
repz
xor
aad
xchg
mov
push
cmpsl
lcall
andb
mov
mov
cmp
jmp
ds
sbb
cltd
shrb
sti
jae
mov
mov
lods
int
mov
data16
cmp
xchg
scas
and
fimull
mov
mov
lods
insl
cmp
ret
cwtl
js
sbb
sub
gs
push
jns
sbb
xchg
movsl
and
xchg
mov
ljmp
jle
mov
sbb
mov
push
cmp
push
and
jecxz
decl
stos
cmpsl
pushf
outsb
or
in
adc
adc
mov
pop
xor
mov
or
mov
lcall
cmpb
jge
jns
jb
pop
or
in
cltd
ja
loopne
dec
sub
inc
and
jg
cmp
imull
mov
ficompl
mov
jno
mov
mov
lcall
mov
dec
test
jb
out
lcall
xchg
insb
mov
sahf
decl
inc
popa
fidivrl
mov
xchg
mov
outsb
ljmp
test
clc
xchg
push
sub
call
pusha
cmpsb
fmuls
pop
adc
popa
push
sbb
add
loopne
imul
cli
out
mov
and
adc
or
sar
jmp
push
xchg
pop
add
cmpsl
fstpl
insl
jmp
cmc
incl
push
cld
pop
int3
fistl
cmc
addr16
pusha
je
pop
sbbl
nop
add
cs
sub
in
aad
in
call
mov
fdivrl
mov
mov
decb
push
mov
adc
pop
rclb
dec
in
fwait
inc
ljmp
fbstp
and
sahf
pop
scas
xchg
xor
andl
cwtl
test
push
mov
mull
pop
ljmp
pop
jge
xor
jbe
mov
in
incl
and
mov
push
imul
lcall
mov
jg
adc
jle
xchg
jnp
fidivrs
dec
add
dec
sahf
push
insb
sbb
incl
insb
pop
or
inc
ror
fs
stos
pop
or
mov
enter
test
add
push
repnz
pop
mov
stc
scas
adc
int
sbb
shrb
pop
jb
cwtl
add
call
les
dec
pushf
pusha
fs
inc
xchg
dec
jns
call
scas
or
lea
sub
and
lods
int3
imul
inc
sbb
cmp
jle
iret
push
les
jle
lret
add
into
pop
inc
and
mov
dec
cld
inc
lds
outsl
call
dec
dec
xchg
push
mov
lret
or
daa
fstl
jo
mov
sar
pop
sbb
xor
insb
sub
incl
dec
push
push
nop
in
arpl
mov
fisttps
cltd
jmp
in
pop
adc
cld
in
aas
inc
mov
aas
lock
push
add
pushl
dec
inc
jne
ss
imul
mov
inc
loope
clc
mov
lcall
push
cmp
in
pop
xchg
rcl
fnstcw
rcrl
pop
xchg
pusha
test
int3
xor
fnsave
pushf
push
pop
cli
pop
aaa
js
or
push
inc
into
mov
mov
or
pop
daa
dec
jae
fs
arpl
bound
push
adc
push
cmp
lcall
jmp
jle
jno
sub
sbb
test
dec
popa
mov
gs
adc
or
xchg
rorl
movq
faddl
fbstp
out
sti
decl
mov
imul
iret
imul
mov
paddusw
adc
and
clc
ljmp
mov
sub
pushf
mov
mov
lods
aam
stos
lcall
cmp
push
mov
push
repnz
rol
rcll
imul
das
push
xor
add
adc
lcall
jecxz
jns
push
incl
jns
pop
mov
nop
add
mov
sub
push
lods
jmp
cmpsb
cmc
xor
or
ret
xchg
and
dec
lods
xor
mov
push
addr16
out
inc
push
in
cmc
das
lcall
dec
cmp
jmp
xchg
lcall
add
fstl
std
pushl
xchg
jg
mov
push
add
sbb
call
rolb
mov
push
adc
push
cwtl
xchg
pop
lods
xor
int3
cmp
add
jmp
jns
outsb
sub
add
lods
fmull
sub
dec
std
jmp
xor
cmpsb
sbb
outsb
xchg
outsb
sbb
inc
sbb
fsubl
arpl
sbb
jle
xchg
fidivrl
lods
cli
push
xchg
or
nop
sub
outsl
cli
and
sub
ljmp
je
cmp
inc
movsl
fbld
data16
push
adc
xor
cmp
jmp
pushl
xor
adcl
daa
inc
sbb
mov
int
les
dec
adc
ljmp
stos
leave
add
into
bsr
cmpsb
mov
testb
notb
pop
inc
push
pop
lods
cwtl
test
cld
and
lds
icebp
fbstp
mov
les
faddl
icebp
ja
outsb
push
mov
cld
pop
add
jmp
lcall
push
push
repz
lret
in
add
push
and
repnz
mov
mov
push
mov
mov
pushl
lock
jp
or
jno
mov
jge
dec
sbb
sub
arpl
add
decl
or
movsl
lods
adc
xor
sub
lret
cmp
decl
pop
jle
frstor
repz
lahf
xchg
sbb
sbb
add
jg
lcall
js
xadd
inc
lea
fisttpl
lcall
das
test
rclb
test
adc
mov
es
fdivs
roll
mov
sub
push
out
idiv
decl
pop
sub
cmpsb
push
pop
pop
outsl
or
test
mov
push
arpl
sbb
ljmp
loop
mov
pop
out
xchg
clc
pop
in
je
pushl
xor
leave
cmpsl
std
xor
aam
pop
dec
sbb
add
sbb
mov
shrl
cli
out
insl
pop
ror
ljmp
clc
jo
ljmp
repnz
in
push
push
inc
mov
mov
ss
push
mov
addr16
mov
es
inc
orb
jg
test
xchg
lahf
fwait
jg
push
pusha
pop
xor
aas
dec
jne
cld
fsubrs
clc
pop
xchg
pop
ret
out
lret
or
add
push
shl
jp
or
decl
mov
xchg
pop
add
out
adc
call
cmpsb
dec
mov
xchg
fsubrl
aas
movsl
fisubrl
mov
insl
pop
enter
cmp
mov
int3
and
in
push
testb
jo
pushl
dec
mov
lahf
mov
popf
jno
std
mov
and
cmp
cltd
or
out
cmp
pushl
or
mov
inc
xchg
movsl
sbb
mov
xchg
and
testl
ja
fcmovne
cmpsl
es
jb
xchg
mov
es
stc
pop
mov
imul
pop
lret
cld
and
jl
jecxz
jnp
jbe
lods
insb
and
jne
jns
daa
mov
movsb
dec
dec
dec
test
push
iret
das
lcall
fidivl
scas
in
add
mov
mov
mov
xlat
int
or
sub
inc
jae
int
mov
push
dec
in
das
jge
xor
add
fisubs
adc
cmp
movsl
push
jo
dec
cmc
arpl
bound
jle
xor
and
jmp
cmp
inc
push
or
pop
aas
and
jl
fadds
mov
mov
cmp
popf
jns
and
lods
xchg
pop
pop
xor
std
icebp
mov
out
gs
lret
outsl
xor
inc
pop
push
test
xchg
call
lret
mov
push
cld
negb
mov
addb
aaa
pop
or
xorl
dec
push
push
sbb
fidivrl
sub
mov
int3
lods
aad
pop
outsb
push
mov
mov
or
cld
pop
hlt
add
pusha
and
mov
lahf
loopne
out
clc
sbb
xor
test
popf
clc
push
cmp
jg
into
mov
pushl
cmc
lods
int
push
mov
es
popf
or
pusha
cltd
push
daa
fwait
popa
nop
mov
mov
pusha
fnstenv
xchg
cli
lcall
jl
pusha
loope
xor
cmp
pop
xchg
pushl
ljmp
jecxz
sub
xchg
push
rcr
pop
popf
fiaddl
add
inc
psrld
mov
push
cmp
das
in
pop
push
jne
fdiv
sbb
jmp
cwtl
hlt
fildll
adc
xchg
fldl
bound
lret
mov
inc
pushl
sbb
aaa
out
cmp
dec
ss
jne
adc
add
sub
dec
adc
pushl
sbb
imul
mov
mov
or
dec
dec
cmp
jbe
ret
add
ret
sbb
stos
ret
cmp
mov
mov
repnz
sub
movsl
sub
pop
pop
dec
xlat
out
dec
in
sub
dec
or
pushl
aaa
and
add
cmc
xor
mov
addr16
mov
dec
hlt
enter
jo
mov
pop
mov
ss
sub
mov
or
scas
pop
pop
ljmp
incl
decb
rolb
out
ret
dec
aas
pop
pop
scas
aas
int
int
lcall
push
push
mov
cmp
fcomps
sahf
lret
add
outsl
test
push
inc
xchg
incl
ds
and
iret
addr16
inc
mov
std
stos
orb
std
loopne
jl
movsl
fisttpll
imul
sub
jb
in
jbe
lods
jne
jno
mov
fistpll
outsb
in
push
rcll
push
pusha
rorb
mull
sbb
pop
sub
cs
mov
mov
call
or
mov
dec
add
ljmp
pop
or
cmpsl
push
mov
jb
ret
mov
stos
mov
adc
fldl
out
clc
mov
jae
das
inc
xor
addb
lock
inc
cmc
sub
data16
mov
ret
pop
dec
jg
cmpl
pop
sub
loop
incl
or
pop
mov
sahf
push
repnz
xor
lret
aas
sub
lds
cmp
and
pushl
mov
out
dec
fs
ffreep
lret
scas
cld
xor
xchg
outsb
dec
and
mov
cmc
xchg
outsb
dec
repnz
and
int3
icebp
repnz
xchg
dec
jmp
or
pop
inc
jge
mov
mov
decl
sub
mov
and
pop
jne
push
adc
mov
hlt
lock
stc
into
dec
inc
adcb
xor
pushl
insb
adc
cmp
jnp
inc
or
mov
push
ds
jg
out
sahf
jl
push
sub
or
scas
mov
jmp
imul
mov
lock
mov
adc
mov
xor
xchg
popa
mov
inc
inc
fcmovb
mov
inc
dec
or
mov
pop
inc
inc
mov
lock
cli
js
cmp
lea
test
jp
addr16
addb
pop
lods
lock
das
sub
jae
nop
add
rsm
scas
cli
inc
add
outsl
adc
in
shlb
xor
cmp
sub
mov
out
decl
xchg
push
movsb
sub
inc
icebp
mov
clc
int
aad
rcl
fidivl
addr16
sahf
add
cli
ljmp
into
jb
je
xchg
add
adc
jge
inc
test
jae
movsl
ljmp
mov
pop
rorb
xchg
jno
es
iret
and
clc
jns
jns
clc
pushl
int
test
ljmp
jp
and
push
jecxz
xor
xor
xchg
rorb
xchg
std
rolb
iret
mov
test
xchg
xor
push
lret
sub
pushl
cwtl
rolb
fcoml
icebp
movsb
and
outsb
rcll
loopne
call
dec
sti
mov
ret
sbb
dec
mov
dec
xchg
int
or
mov
rcr
jne
mov
and
mov
dec
imul
push
pop
push
scas
add
cmp
int
aas
scas
dec
stos
inc
ss
add
scas
clc
or
sub
mov
and
lcall
aas
push
mov
in
or
or
in
inc
rorb
dec
ret
das
and
and
cmp
movsl
hlt
lds
pop
xchg
pop
daa
inc
pushf
cli
popf
add
pop
lcall
jne
rcrl
mov
mov
shr
jecxz
int3
push
imul
int
ja
jb
dec
add
push
dec
adc
inc
rclb
jmp
daa
stc
pop
insb
repnz
adc
insl
imul
jg
dec
mov
ljmp
out
pop
je
stos
or
xor
scas
cmp
mov
mov
pop
shr
and
jle
es
hlt
xor
push
lods
add
pop
mov
inc
incl
pop
jno
jge
jmp
pop
clc
call
cmpsl
dec
push
cmp
subl
jb
aas
xchg
adc
test
ret
mov
push
clc
ljmp
outsb
ja
sahf
add
pop
adc
sub
fmull
pushl
jle
xchg
and
test
mov
je
out
scas
pop
mov
imul
inc
shrb
movsl
cmp
dec
outsl
imul
jmp
sub
add
mov
ljmp
jmp
jb
xchg
xchg
adc
pop
ljmp
mov
lods
fs
cs
inc
jg
mov
jmp
cmpsl
outsb
pop
das
mov
xchg
faddl
push
or
jno
fcomps
sahf
cmpsb
outsb
mov
bound
dec
mov
sbb
mov
lock
sub
mov
xor
push
rcrl
jl
xor
xchg
sub
sahf
sbb
pop
dec
decl
mov
shrl
mov
scas
cmp
aad
inc
xchg
inc
testl
addb
xor
push
mov
sub
out
ljmp
xchg
and
jbe
pop
dec
pusha
push
pop
popa
push
jmp
stos
xor
jno
mov
jl
cmp
mov
mov
ret
push
dec
cmc
xor
in
jno
jle
dec
jae
cmp
mov
cmpsl
xor
sub
bound
int
js
inc
xchg
push
xchg
jo
das
cmp
push
jp
inc
push
loop
sbb
xor
jo
xchg
cmp
dec
jmp
add
lods
inc
popa
in
iret
sbb
popa
push
jg
lcall
pop
push
pop
imul
das
sub
pop
inc
fdivr
stos
fists
jg
mov
clc
push
sbb
leave
mov
cld
jmp
fwait
push
inc
mov
sbb
out
das
jbe
adc
cld
mov
cltd
mov
adc
mov
fsubrs
mov
cmp
in
jge
out
dec
xor
add
sub
xchg
pop
sbb
mov
xchg
push
xchg
test
imul
and
icebp
jg
rorb
pop
and
mov
lahf
pop
imul
cmpsb
mov
mov
xchg
movmskps
data16
imul
add
test
jno
cmp
push
push
call
aaa
xchg
int3
lods
sbb
sub
iret
inc
push
stos
cmp
insb
fisttps
mov
ja
pushl
lock
add
add
xchg
cmpb
sbb
int3
in
fcomip
pushl
loopne
pop
aaa
inc
sahf
mov
and
rorl
adc
decl
xchg
xchg
inc
adc
push
add
xor
push
lea
sti
shll
addl
push
call
sbb
jns
xchg
es
loop
cmp
out
jle
fistpl
dec
xchg
push
ljmp
pop
iret
subl
sarb
push
jne
xchg
aad
stos
xlat
push
pushf
daa
mov
loop
nop
ljmp
jp
lahf
loopne
std
stos
pop
enter
es
mov
pop
daa
add
das
clc
add
dec
jecxz
lcall
xorb
cmp
fisttps
pop
in
stc
adc
xor
ljmp
mov
imul
xor
mov
cwtl
adc
dec
dec
stos
mov
mov
sbb
clc
fistl
inc
mov
sar
jmp
pop
mov
aaa
out
neg
fldcw
add
stc
into
out
push
addr16
push
in
insb
inc
and
mov
mov
ja
push
push
les
out
pop
fisttpl
mov
dec
out
iret
inc
enter
cltd
push
imul
lcall
repnz
sbb
aam
cs
arpl
imul
je
xchg
push
dec
push
cmp
repz
fwait
push
push
imul
or
jl
cmp
pop
cltd
adc
lock
inc
mov
mov
hlt
cmp
jbe
cmpl
lods
gs
cli
fimuls
cld
incl
into
in
pop
add
push
dec
popf
aas
daa
mov
xchg
jmp
hlt
pop
cmc
jbe
insb
jns
ljmp
pop
gs
addl
loope
push
inc
or
ret
xor
stos
cmp
sar
sarl
out
filds
dec
mov
cmc
mov
sbb
sub
pop
fistpll
fists
dec
add
or
pop
cmpsb
mov
cmp
push
dec
inc
sub
mull
dec
cld
jmp
lods
push
in
add
shlb
push
mov
jg
inc
and
fstpt
inc
fstps
enter
scas
jbe
movsb
mov
cmp
jmp
adcl
fdivr
lcall
mov
popa
push
data16
aaa
or
fcomip
out
sahf
push
jns
lds
cmp
or
cmp
dec
xchg
icebp
incl
jle
jg
enter
aam
jmp
cwtl
nop
fsubl
jge
mov
adc
jmp
dec
loop
pushl
je
and
mov
pop
xor
xlat
dec
pop
lcall
fwait
inc
mov
movsb
mov
and
inc
dec
pusha
sub
xchg
jp
fnstsw
pop
pop
xor
sub
fistpll
sub
cmp
pop
and
dec
int
iret
flds
lods
mov
aam
and
and
pop
sub
icebp
push
sahf
enter
ljmp
jmp
fdivrs
dec
stos
outsb
into
mov
outsb
pop
fcmovne
insb
shrl
or
push
ljmp
cltd
push
or
ja
sub
push
jns
adc
stos
jne
in
in
in
fidivl
cmp
sar
jmp
int3
movsl
pop
in
test
adc
pop
cld
mov
dec
scas
repz
push
inc
adc
mov
lcall
sub
dec
loope
mov
cli
sub
sub
dec
jnp
test
movaps
gs
clc
mov
pop
lods
movsl
lock
jo
jl
inc
mov
rorl
push
sub
rcrl
fcomip
pop
out
sub
js
fcmovb
cld
cmpb
or
xchg
cmp
add
pop
xor
jmp
or
and
push
mov
xor
enter
jne
mov
fdivs
lcall
ljmp
mov
pop
mov
fs
insl
nop
jecxz
xchg
arpl
ljmp
imul
stc
imul
mov
add
scas
fmuls
push
lods
in
inc
xor
es
sbb
outsl
pop
inc
mov
mov
push
push
jns
imul
clc
call
enter
inc
and
pop
inc
int
popa
mov
dec
mov
incl
cld
fistps
dec
adc
ljmp
mov
shl
jmp
test
rolb
dec
push
icebp
out
aad
js
cmpsl
mov
stos
push
inc
mov
xchg
out
pop
mov
ret
fisubs
ficoml
push
dec
test
xor
leave
scas
xor
ljmp
negb
sub
les
popf
mov
ret
call
push
faddl
cmc
dec
ret
pop
jle
xchg
xor
fcmovnu
and
test
fldl
push
and
repnz
pop
xorb
subb
push
adc
sahf
xchg
add
filds
or
mov
into
sbb
push
inc
hlt
popa
in
lock
fisubs
adc
jns
and
repnz
jns
leave
push
fld
int
js
call
movsb
mov
outsb
jbe
xor
lcall
jmp
pop
mov
or
cli
lcall
push
mov
in
lret
xchg
lret
setno
popf
clc
inc
scas
enter
je
dec
jle
and
cli
es
push
jg
jno
jo
or
sub
jnp
fwait
mov
stc
popa
mov
or
dec
xchg
cmp
sbb
mov
xlat
fs
mov
xchg
das
cli
or
loop
inc
mov
jge
adc
cmpsl
fidivl
mov
or
sahf
xchg
stos
cmp
pop
insl
or
jb
mov
fs
lcall
sbbl
data16
mov
mov
dec
adc
lahf
mov
cmp
in
iret
mov
mov
mov
sti
adc
add
cld
mov
mov
cmpsb
lds
incl
or
test
rcrl
cmp
lea
lcall
mov
inc
fdivr
xor
dec
adc
cmpsb
sahf
mov
mov
aad
inc
call
mov
sbb
push
xor
out
dec
mov
shll
xchg
sbb
ret
or
lods
jmp
fiaddl
inc
mov
fnsave
ja
int3
call
push
dec
int3
jnp
push
jno
mov
mov
pop
or
decl
sub
jecxz
add
push
ja
call
push
lods
jle
sub
inc
ret
repz
inc
fildl
incl
dec
pop
mov
lcall
fisttps
jae
rclb
pop
jae
adc
gs
xchg
jnp
aas
fs
nop
popa
pop
mov
xchg
dec
lret
sbb
daa
pop
lahf
in
call
cld
imul
sbb
push
addr16
xlat
dec
shll
sub
out
or
push
dec
and
shr
in
inc
in
fs
fidivl
pop
loopne
mov
push
add
push
cmpsl
imul
xor
ljmp
outsb
rcr
and
outsb
movsl
call
lea
pop
and
aam
push
add
icebp
xchg
lods
imul
xor
mov
mov
fwait
in
mov
outsb
nop
rclb
insb
in
cwtl
ljmp
add
xor
ret
push
fmul
jmp
lcall
jns
or
in
mov
jecxz
sbbb
sub
xchg
repnz
outsl
pusha
jno
or
jmp
decl
int
rcll
dec
mov
aad
sub
fistpll
mov
mov
push
xchg
jae
pop
stos
movzbl
pop
jmp
jmp
aam
push
xor
sub
jp
out
movsl
ljmp
jmp
rorb
or
outsl
jp
lods
fistps
sti
jmp
loop
mov
push
rol
xchg
mov
and
adc
incl
enter
push
and
pop
sub
fsubrl
xchg
or
add
jle
nop
dec
xchg
push
aam
sub
call
imul
xchg
mov
jmp
loopne
cmp
sub
mov
inc
enter
mov
cmp
xchg
sub
incl
pop
jmp
inc
cmpl
comiss
push
aaa
fwait
cld
repnz
adc
mull
sbb
daa
mov
pusha
bound
loop
push
adc
shr
pop
push
fdivl
pop
addl
mov
or
sub
xor
ja
adc
fildl
clc
ret
push
xchg
add
icebp
lea
pop
push
daa
xor
jmp
dec
push
repnz
cmp
out
rcl
and
jl
lcall
ss
inc
imul
cld
sub
push
xchg
adc
mov
fdivl
mov
ljmp
sub
cmpsl
dec
pop
test
ret
pop
mov
fbstp
jne
mov
pop
hlt
fsub
sahf
mov
fnstcw
xchg
arpl
gs
orl
sbb
adc
adc
aad
lcall
or
push
mov
aad
shll
adc
sub
test
sbb
test
xchg
push
pop
clc
icebp
daa
ss
and
jmp
sub
push
adc
fwait
push
xor
mov
jmp
int3
adc
ret
das
add
adcl
cmpsb
mov
shr
cli
mov
es
in
xlat
mov
shl
jns
stos
xchg
add
jns
xor
mov
cmp
sbb
mov
dec
lods
xchg
sub
pop
mov
stos
inc
pushf
fs
xor
xchg
sub
sub
pop
inc
push
adc
jmp
incl
ret
loopne
in
test
lds
and
or
incl
mov
push
xor
bnd
hlt
loope
adc
in
xchg
decl
cmpsl
xor
mov
dec
dec
mov
test
daa
call
lock
shlb
in
cwtl
adc
xchg
adc
xchg
mov
inc
fnstenv
and
lret
cmp
addr16
sbb
decl
xchg
in
aad
cli
xlat
out
clc
int3
xchg
adc
gs
sahf
xchg
decl
inc
pop
test
sbb
mov
xchg
fisubrs
mov
rcl
ret
mov
cmpsb
loopne
inc
add
jne
inc
repz
scas
sbb
xchg
or
mov
dec
xor
addl
stc
lret
rep
sbb
cmp
int3
call
stos
sbb
mov
mov
shl
jb
pop
insb
ljmp
add
pop
andl
jno,pt
loop
mov
aam
inc
add
jge
inc
clc
decl
lock
stos
mov
mov
jnp
lahf
das
pushf
adc
int3
test
cld
incl
jmp
or
mov
mov
loop
ficompl
xchg
xchg
jmp
lcall
scas
js
adc
call
ljmp
sbb
aas
sahf
std
jmp
sahf
jmp
aam
jae
movsb
inc
into
or
pop
xor
dec
xor
in
decl
hlt
push
hlt
inc
push
jl
aas
mov
stc
hlt
in
jo
data16
cmp
push
and
hlt
adc
lret
mov
je
cmp
pop
fildl
lea
mov
decl
pop
push
movsb
jb
cmpl
fldcw
js
inc
outsb
test
fcom
aaa
jge
push
sub
adc
mov
cld
scas
adc
fdivs
icebp
pop
mov
mov
sar
push
xchg
gs
sbb
pop
jp
push
call
xor
bnd
mov
jno
loopne
adc
popa
push
adc
fimuls
mov
repnz
ljmp
sub
int
mov
aad
mov
enter
push
call
lods
or
and
fisubs
outsl
mov
jo
adc
test
call
daa
aam
pop
lcall
mov
sbb
pushl
jo
cmp
scas
inc
into
shrb
sub
jnp
sbb
les
incl
rolb
jp
cmp
in
cmc
lods
jge
bound
ljmp
out
shr
and
lahf
fs
test
xlat
mov
int3
inc
jmp
addr16
addr16
sbb
add
cmp
adc
push
sub
mov
or
lahf
icebp
or
clc
jmp
pop
popa
sub
js
scas
cmp
aad
icebp
dec
leave
pop
stc
sub
leave
fldcw
add
jbe
enter
aad
mov
jmp
std
mov
in
xor
add
dec
mov
jle
into
into
adc
push
pop
cmp
dec
out
fcmovu
jmp
scas
je
into
mov
xor
sub
inc
fsubl
mov
mov
loopne
sub
sub
mov
sar
dec
aaa
mov
adc
in
orb
incl
cmp
enter
cli
popa
data16
decl
sar
pop
inc
repz
mov
in
mov
cmp
shlb
mov
xchg
jns
lods
int
fldcw
xchg
push
adc
xchg
enter
pop
push
push
and
jae
incb
cs
pushl
xor
clc
inc
jb
jnp
fldenv
ret
js
sbb
decl
test
xchg
jl
adc
xor
jno
testb
out
mov
and
lcall
lock
rorl
mov
jo
iret
call
vunpckhpd
dec
push
pop
js
lcall
push
cmp
push
mov
xor
aas
dec
shl
out
add
mov
test
xor
outsb
mov
sub
jmp
dec
mov
add
dec
cmpsl
sbb
in
or
out
pop
cmp
dec
int3
mov
inc
jmp
out
js
subb
push
clc
shrb
mov
cvttps2pi
mov
sbb
cld
decl
jg
push
bound
test
mov
push
mov
and
mov
mov
cmp
mov
mov
push
push
add
pushl
call
cmpsb
iret
mov
mov
fsubl
sub
loopne
push
ror
in
decl
outsb
push
and
and
push
mov
jb
cmp
inc
pushl
push
inc
cwtl
cmpsl
arpl
inc
mov
mov
push
xchg
mov
test
out
jg
ja
jle
inc
loopne
jne
shlb
cs
fcomps
fmuls
jle
mov
movsl
jle
fsubs
shlb
lret
xchg
inc
cmp
push
clc
xchg
sti
mov
sub
fadd
or
out
sub
inc
dec
pop
inc
xchg
push
ljmp
test
scas
loope
scas
add
mov
mov
dec
xor
dec
pop
call
sub
pusha
jle
lods
aam
and
and
pop
stos
jecxz
addr16
imul
outsb
adc
lods
paddb
sti
loopne
cmp
jbe
sahf
cld
pop
jae
popa
dec
ret
jecxz
lea
jo
mov
fdivrp
jg
sub
es
lds
and
cmpsb
lods
xchg
cli
call
cmp
sub
ljmp
mov
sbb
mov
call
mov
outsl
adc
shrl
dec
cli
sbb
stc
pop
mov
aam
and
mov
dec
dec
push
test
scas
flds
push
push
mov
mov
xor
pop
cltd
mov
roll
imul
outsl
test
test
out
jl
sub
dec
test
lret
and
and
das
clc
jg
jns
in
testb
les
inc
das
int
push
incl
push
mov
add
dec
or
sbb
cmp
or
in
inc
repnz
dec
jns
mov
repz
in
bound
addr16
add
stos
je
cmp
fbld
pop
sbb
push
xchg
sti
stos
xchg
lock
data16
or
jg
dec
out
fsts
cmp
mov
icebp
cmp
jno
mov
stos
sub
lahf
sbb
push
add
jae
arpl
aad
push
xor
subb
push
in
adc
or
mov
mov
js
outsb
sbb
call
ret
and
dec
std
inc
pop
ror
jbe
and
mov
test
pop
sub
xor
roll
loopne
popa
mov
popa
shr
jbe
gs
loope
pop
shlb
dec
addr16
pop
cmp
fwait
mov
in
sbb
or
xchg
ss
sbb
jecxz
jmp
loop
jp
adc
xor
jae
or
mov
add
or
lcall
dec
idivl
pushf
pop
and
cmp
and
jno
outsl
mov
out
std
sbb
mov
testb
add
mov
je
int3
test
jmp
jno
cmp
mov
lea
or
or
sbb
or
bound
aas
adc
mov
push
mov
xchg
call
fdivrl
sbb
sar
adc
push
mov
mov
and
mov
cmp
add
and
outsb
out
xor
clc
call
xchg
xchg
or
mov
mov
xor
pop
mov
punpcklwd
fwait
ljmp
or
data16
pop
mov
jo
popa
push
add
and
shl
cli
inc
inc
add
fcmovbe
sub
cmp
cmp
fistpll
shl
fldz
sbb
xor
arpl
push
push
mov
push
leave
aam
push
lahf
mov
jmp
out
xchg
aaa
jl
jmp
ret
jne
iret
stc
pop
add
ret
ret
in
mov
add
mov
jb
insl
push
scas
out
cmp
push
cmpsb
out
or
jmp
mov
jno
repnz
hlt
enter
std
incl
lods
lret
fisttpll
adc
push
jno
insb
add
bound
mov
push
pushf
push
insl
dec
sub
test
pop
jge
inc
call
jg
ficoms
cmp
mov
cmp
icebp
pop
xchg
jg
or
mov
loope
mov
int3
xchg
imul
outsl
mov
mov
scas
or
ljmp
mov
repnz
insb
lcall
add
sbbb
sub
and
loop
nop
test
push
add
jmp
setnp
xchg
andb
repnz
adc
push
lcall
insb
sub
or
mov
xchg
insl
sarl
test
xlat
adc
fiaddl
adc
notb
imul
jnp
cmpsb
fcmovnu
jbe
push
xchg
cmp
fwait
stc
sbb
fldt
movsb
sbb
insb
pop
inc
push
sub
jne
dec
adc
pushl
int
lret
inc
dec
dec
dec
adc
cmp
xchg
xchg
clc
frstor
jnp
sub
mov
jg
adc
mov
in
push
jle
and
mov
shlb
dec
ret
call
insb
add
mov
cltd
mov
pop
xor
ja
imul
fbstp
ljmp
jle
pop
xlat
in
outsb
add
out
das
stos
test
jae
push
push
ja
clc
leave
and
sar
push
pop
dec
sahf
push
and
push
sbb
or
pop
pop
cmp
shrl
icebp
stc
ds
dec
jnp
and
lcall
or
mov
sarl
mov
and
jb
mov
cmp
push
es
decl
sbb
cmp
outsl
shl
add
add
popa
jle
xchg
stos
adc
or
scas
clc
mov
xor
popf
xchg
mov
sbb
ficomps
decl
add
push
rcll
push
cmp
cmp
incl
lods
mov
fcmovb
popa
pop
in
lcall
hlt
xchg
inc
pop
arpl
icebp
xchg
ljmp
inc
dec
push
cli
sub
jg
inc
mov
int
movsl
in
leave
shl
or
repz
ds
enter
out
out
test
jmp
adc
in
mov
push
xchg
ror
push
lea
inc
lcall
xchg
daa
lcall
or
shll
jne
mov
dec
pushl
push
int3
dec
inc
or
arpl
imul
adc
rolb
jae
imul
xlat
inc
mov
dec
pop
pushl
xchg
dec
ret
adc
xchg
and
insl
stc
icebp
lods
clc
stc
loope
pop
mov
mov
push
jmp
pop
xor
lcall
int3
pop
test
fists
mov
movsb
xchg
decl
pop
je
add
xchg
lret
stos
adc
leave
pop
add
rcr
lcall
mov
sbbb
and
lods
imul
cwtl
jg
pushl
inc
mov
lock
iret
fistl
loopne
cmc
mov
gs
pushl
pop
mov
add
xchg
loopne
mov
lret
in
jmp
jnp
cmp
call
addr16
dec
or
fidivl
mov
lcall
fnsave
sbb
mov
enter
aas
cld
xchg
test
loop
adcb
aad
gs
dec
sbb
and
xchg
mov
cmpsb
mov
insl
mov
lds
or
jns
lcall
cmp
push
xor
mov
xchg
int
lea
inc
iret
insl
inc
arpl
out
add
leave
test
aaa
jne
cli
xchg
hlt
xchg
pushf
sub
sti
pop
or
insl
and
les
repz
incl
adc
sti
faddl
dec
pushf
xchg
sub
ljmp
ljmp
mov
sbb
xor
js
es
adc
jg
mov
adc
shlb
mov
incb
call
loop
xor
rolb
jg
push
push
aaa
xchg
sub
iret
test
inc
shl
dec
add
sbb
incl
mov
push
push
sti
mov
and
sbb
pop
inc
cld
xor
jg
ljmp
lock
or
outsb
pushf
lods
movsb
xor
incl
call
out
dec
fs
dec
dec
mov
jne
xor
pusha
pop
ljmp
sub
or
sbb
sub
xchg
nop
mov
lock
xor
pop
clc
call
scas
repz
mov
sbb
inc
ja
mov
test
stos
dec
add
jg
inc
lret
jb
and
scas
mov
inc
dec
call
int3
adc
jp
mov
loope
mov
sarb
inc
inc
out
test
sub
inc
mov
jns
sub
cmpsb
jnp
mov
bound
ds
out
rorl
mov
lret
mov
pushf
sahf
fldl
push
and
fists
sbb
and
and
mov
out
push
movsb
jmp
xor
lds
mov
pop
cld
push
fmuls
adc
add
outsl
sub
pop
lret
mov
jmp
dec
loopne
inc
sbb
jp
xor
loop
mov
mov
loop
aam
and
fdivs
cld
decl
les
mov
and
push
jecxz
sub
push
xchg
fiaddl
cltd
cli
mov
mov
or
cmc
in
adc
fnstenv
inc
outsl
push
mov
sti
jg
out
inc
pmovmskb
fwait
push
lock
jns
adc
ja
fs
daa
cmp
cmp
mov
sti
ljmp
dec
push
sbb
dec
sub
in
fs
es
jbe
in
xchg
push
mov
lcall
jb
add
aad
pusha
int
cmp
dec
les
test
pop
or
aad
pop
sti
ljmp
cmp
loopne
push
mov
pop
push
xchg
push
jl
ss
add
movsl
int3
inc
and
cli
mov
lret
ss
int3
stc
xchg
sahf
inc
push
and
add
jnp
sub
jb
dec
pop
dec
or
in
push
xor
in
lds
scas
out
sbb
sbb
loop
std
call
std
cltd
mov
cmc
lcall
or
lods
xor
adc
mov
mov
and
push
add
out
repz
les
fcomip
jmp
xchg
and
out
pushf
push
bsf
insb
pop
jg
pushl
ljmp
cmp
mov
popl
push
mov
in
push
add
incl
scas
test
adc
mov
sub
jae
adc
adc
sbb
loopne
lock
fidivrl
rclb
and
or
pop
repz
sbb
or
ret
fbstp
jo
enter
cltd
lea
cmp
dec
test
push
cmp
pusha
cmp
ss
xor
adc
mov
xchg
and
lods
inc
push
fsubp
and
mov
call
into
adc
adc
jge
inc
int3
imul
jmp
iret
insb
cmp
out
pop
push
or
push
cmpsb
add
push
cli
push
es
sub
xorb
mov
xor
outsl
push
pop
std
hlt
pop
cli
js
ljmp
and
cmp
dec
sti
and
loopne
mov
add
fidivs
js
jle
pushf
lock
ljmp
outsl
mov
dec
in
cmpsb
sahf
xchg
aad
mov
jb
test
mov
xor
xchg
or
jns
aam
cmp
push
les
mov
mov
decl
or
sbb
in
and
cmp
cmpsl
adc
adc
lret
adc
imul
pushf
ljmp
mov
add
call
pop
test
lods
pusha
test
scas
sub
xchg
loop
shrb
pop
in
mov
inc
je
insl
xchg
lds
dec
mov
outsl
enter
ja
mov
pop
pop
nop
push
aaa
cmp
xor
dec
movsb
movb
sbb
into
xor
fimuls
push
cli
lods
push
xchg
inc
mov
add
push
std
adc
clc
jbe
inc
jne
mov
in
push
push
inc
cmp
adc
dec
xchg
aam
cli
mov
jmp
in
mov
sub
jmp
jmp
dec
inc
inc
enter
out
inc
pop
fsubs
movhps
mov
das
add
sti
je
adc
pop
jbe
jae
call
pop
dec
sub
int3
lods
jl
repnz
fistl
pop
lods
mov
jp
push
in
mov
jnp
mov
out
stos
mov
incl
cmp
test
mov
out
outsl
mov
out
xor
adc
bound
jmp
cmp
outsb
and
sbb
sbb
std
decl
add
shrl
mov
mov
mov
lret
mov
mov
sub
inc
cmp
jp
dec
pusha
adc
iret
mov
jmp
clc
jg
and
push
pop
cmp
pop
in
scas
mov
imul
adc
repz
xchg
mov
push
mov
outsb
jle
test
clc
mov
sub
cmc
pop
xchg
movsl
shll
loopne
stos
inc
lcall
cmp
filds
scas
faddl
mov
popa
scas
in
rorb
sub
lcall
cmp
dec
stos
stos
mov
insb
aad
ror
push
sti
test
fcoml
call
loopne
or
fnstcw
lods
or
lds
cmp
test
fisubrl
pushl
push
addl
xchg
in
aaa
xchg
jp
enter
and
sbb
or
fildll
and
cli
sub
in
mov
mov
fisttps
xchg
pushl
mov
jo
ficompl
pop
mov
rclb
dec
movsb
mov
jmp
cmp
pop
pop
sbb
shrb
int3
scas
or
int
rorb
cltd
aaa
ljmp
movsb
dec
out
into
in
jle
sub
jno
inc
xchg
mov
jbe
cmp
xor
push
cmc
clc
xor
outsb
cld
popf
push
scas
pop
ss
hlt
add
ds
jecxz
push
ret
cli
mov
xor
bound
xchg
leave
sahf
in
shrl
out
fsubrs
gs
sub
test
in
rclb
outsl
std
jmp
mov
jne
xchg
adc
add
or
dec
sub
ss
aam
push
cs
out
jns
pusha
aas
cmpsb
into
addr16
sti
fldt
cmp
cmp
aam
jmp
mov
mov
jae
filds
jg
insb
cltd
lods
pop
rorl
mov
push
jnp
cmpsl
pop
inc
cmp
cmc
lret
clc
lcall
in
adc
mov
dec
scas
mov
xchg
test
dec
push
mov
inc
out
mov
xchg
fcmovbe
ror
mov
flds
loopne
push
jb
cmpsl
jns
addps
add
adc
mov
iret
sbb
scas
ja
daa
mov
ljmp
or
inc
lcall
jp
jp
adc
mov
push
popf
movsl
pusha
lahf
lcall
xchg
testb
andl
dec
sub
jmp
pop
xchg
cmpsb
test
fsubrs
icebp
cwtl
push
add
pop
fsubs
daa
cmc
mov
loopne
xchg
icebp
or
jle
loope
jnp
sbb
repz
add
xchg
or
fnstsw
cmpsb
xchg
test
push
fs
jno
sbb
mov
push
dec
adc
dec
push
push
jmp
pop
mov
inc
inc
stc
pusha
or
or
mov
add
jp
mov
mov
int3
les
notl
enter
fstps
pushf
stc
test
repnz
mov
mov
pop
dec
fisubrs
or
mov
stos
loopne
sub
call
pop
pop
mov
mov
cmc
dec
enter
pop
daa
fcmovnbe
pop
sub
aad
fisttps
cmpsl
jmp
jg
and
mov
inc
stos
imul
in
sar
js
gs
jns
sti
cli
push
idiv
addl
nop
xor
xor
jae
mov
xchg
mov
mov
mov
data16
add
xchg
pushl
inc
or
repnz
dec
test
fsubrs
push
mov
inc
cli
ljmp
mov
mov
sub
mov
inc
sti
inc
imul
movsb
subb
fidivrs
dec
mov
stos
fwait
xor
lcall
mov
cmp
pop
insl
or
jle
mov
gs
mov
add
call
mov
je
xchg
and
sub
loop
pop
and
call
pop
sub
cwtl
jp
inc
jne
pop
jecxz
adc
jge
xchg
xor
add
mov
inc
mov
out
inc
incl
mov
sbb
push
mov
dec
fcmovne
shlb
pushf
dec
mov
xchg
js
push
lret
inc
nop
clc
add
xchg
nop
mov
jns
cmp
jb
or
jmp
xor
mov
outsb
mov
cmpsl
insb
fldcw
outsl
sbb
testl
sub
add
mov
xorb
pushl
and
mov
cmpsb
bound
adc
repnz
push
filds
mov
cli
incl
mul
jae
mov
lcall
cmp
int
ja
fildll
xor
mov
mov
adc
scas
data16
mov
inc
test
sarb
jl
dec
imul
fidivs
iret
imul
adc
cltd
or
sbb
shl
and
push
jnp
aam
lcall
and
or
mov
mov
movsb
shl
sahf
dec
lret
sbb
push
xchg
aad
test
aam
insl
xchg
test
incl
xor
gs
lcall
call
lret
xor
mul
inc
cmpsl
xor
seta
push
shrl
aaa
aam
lock
data16
js
lcall
in
arpl
sub
mov
gs
int3
insb
out
leave
icebp
icebp
ljmp
cli
xlat
loopne
outsl
pop
nop
rcrl
or
xchg
ljmp
xor
mov
pusha
imul
jno
test
les
lcall
sbb
pusha
nop
jo
mov
mov
jnp
outsb
add
push
xchg
mov
and
xchg
movsb
push
inc
or
sti
sti
add
mov
pop
xorb
adc
sbb
xor
mov
leave
cmpsb
decl
into
lcall
cld
pusha
fldcw
xor
insl
les
adc
pusha
les
out
jae
aas
dec
add
or
icebp
orb
pushl
pop
cmpsl
mov
pusha
mov
mov
out
sub
fstl
mov
ss
insb
test
insl
mov
and
or
sub
divl
push
inc
jo
pushl
ret
int3
jecxz
sar
ds
popf
cld
scas
mov
pushf
loop
test
lods
sub
pushl
lcall
bnd
pop
mov
pop
pop
in
and
dec
dec
call
sbb
cld
sbb
cwtl
pop
pop
jns
jg
pop
pushl
sbb
mov
mov
fldcw
sarb
call
and
pushf
cmp
push
push
mov
in
stos
fwait
and
je
mov
insb
push
pop
pop
movsb
dec
hlt
outsl
cmpsb
mov
dec
iret
mov
cli
lcall
mov
lret
ret
in
or
scas
mov
cmp
lock
dec
xor
loop
out
loopne
or
fbld
mov
adc
jp
pop
aaa
mov
xchg
out
push
mov
jg
sub
xor
add
jecxz
mov
and
decl
jg
je
cmpsl
clc
cmc
pop
int3
insl
lret
pop
jno
add
jecxz
loopne
int
pop
sbb
cmp
loope
mov
or
mov
jns
or
ds
decl
jmp
es
fldenv
test
mov
icebp
inc
out
push
hlt
push
mov
xchg
aaa
xor
sahf
in
sahf
insl
repz
sarl
sub
cmp
add
fwait
pop
lret
loope
sarl
push
or
xchg
jmp
dec
call
mov
inc
mov
adc
inc
or
lahf
xchg
fsubrl
ss
daa
ret
movsl
scas
fwait
and
sbb
das
cmp
aas
cmp
sarl
popf
sbb
mov
imul
into
lcall
adcl
push
in
push
mov
imul
jge
cmp
pushl
jmp
jg,pt
xor
pop
fstpt
add
mov
dec
inc
mov
cmp
push
out
popa
les
bound
xchg
push
push
cltd
xor
pop
add
pop
xchg
dec
cli
lock
lcall
pop
hlt
and
mov
pop
inc
imul
dec
jo
inc
out
rclb
mov
pop
xchg
push
repnz
jo
push
or
mov
pushf
icebp
pop
mov
lods
pop
cmp
lcall
pop
lret
mov
icebp
leave
mov
push
lds
mov
lcall
jg
into
pop
lock
jns
jae
push
loop
push
jp
fs
jl
aaa
pop
adc
pushl
sti
test
xor
adc
cmp
js
out
fs
pop
nop
xchg
scas
aad
hlt
ret
or
cltd
jle
push
daa
les
outsb
fcomps
mov
add
or
xchg
cld
add
and
xor
adc
stos
decl
lea
jg
dec
and
mov
insb
jg
in
in
cmp
xorl
incl
jp
mov
repz
fisubl
stos
adc
aad
mov
outsb
bound
mov
cld
pop
and
je
test
test
xchg
stos
call
aam
daa
scas
xorb
outsl
popf
dec
andl
jmp
jns
cmp
stc
mov
dec
lcall
mov
pop
sbb
sbbb
sub
cmpsb
ud1
ss
xchg
stos
sub
call
pop
mov
aad
and
dec
xchg
enter
cld
push
xchg
pop
cmpsl
imul
insb
jnp
fcos
aaa
cld
call
inc
jg
test
mov
fsubl
cmp
inc
push
pop
adc
pushl
idiv
cmp
js
add
ds
loop
push
scas
lock
sti
pushf
dec
test
mov
lret
mov
dec
mov
sbb
mov
enter
push
arpl
bound
iret
aaa
cmp
lock
jp
adc
and
imulb
push
and
mov
xchg
xor
jmp
add
push
addr16
add
cld
pop
and
cmp
jl
pop
test
pushl
add
arpl
loope
leave
inc
aas
outsb
imul
ficomps
pusha
jns
out
xor
out
sahf
sti
leave
loope
cmp
loopne
and
mov
push
movsb
push
push
sahf
jmp
mov
aaa
pop
fiaddl
lahf
jae
imul
jg
sub
jl
pop
hlt
push
mov
lahf
jp
out
decb
call
pop
dec
aad
dec
loope
andb
imul
hlt
movb
push
push
jl,pt
push
lret
lcall
and
test
shlb
adc
inc
shrl
popa
dec
call
aaa
std
jmp
fidivl
icebp
sbbb
dec
adc
std
hlt
adc
xchg
mov
sar
xchg
pop
inc
xchg
ja
mov
outsb
sub
aad
jg
sbb
in
push
mov
mov
jo
out
cwtl
push
sub
imul
mov
inc
add
sbb
dec
push
xchg
fstp
mov
addr16
adc
stc
sbb
arpl
call
xchg
dec
or
insl
ja
into
inc
mov
dec
cmp
adc
movsb
out
xchg
ret
or
or
jbe
xchg
cmp
fisubl
push
mov
es
leave
jb
sbb
jb
fsubrl
call
cmp
and
lods
inc
pop
push
fwait
movmskps
sarb
sub
or
bound
lds
pushl
lcall
notl
sbb
fidivrl
mov
inc
negb
and
jmp
add
fwait
jo
sbb
jb
or
ljmp
pop
mov
mov
icebp
das
push
pop
leave
aam
test
jge
lcall
xchg
lret
icebp
sbb
int3
mov
sbb
cmp
fwait
mov
outsl
cltd
loopne
cli
xchg
mov
mov
jae
xor
sti
adc
aas
imul
inc
hlt
cli
mov
push
push
sarb
jp
adc
outsl
or
repz
arpl
mov
out
push
cwtl
or
shr
mov
fistl
dec
ds
or
lds
push
xlat
aaa
movsl
jo
mov
push
fisubrl
incl
xorl
cmpsb
decl
fwait
xchg
test
or
adc
pop
int
sarl
pop
add
cld
mov
and
fldcw
push
je
dec
cltd
mov
xchg
xor
pop
arpl
mov
cmp
jg
mov
and
jmp
add
push
cli
adc
push
nop
nop
std
int
in
jmp
roll
ret
loopne
sbb
call
sbb
aad
mov
and
pushl
xor
xor
test
fdivs
and
popf
lods
mov
lcall
cmp
inc
fbstp
mov
sbb
hlt
push
or
adc
xor
out
mov
int3
outsb
dec
aaa
mov
sub
sahf
movsl
jp
lahf
cli
loope
mov
lret
adc
fnsave
cld
decl
push
jbe,pt
and
push
movsb
ljmp
xor
or
out
and
loopne
cmp
inc
add
das
ret
xchg
mov
in
sbb
lods
cmc
sbbb
lret
pushf
incb
fistpll
mov
aad
cli
dec
outsb
fsubs
mov
sar
and
lcall
mov
push
pop
call
loopne
cwtl
mov
xchg
test
pop
cli
mov
sub
fstl
ljmp
pop
sub
lahf
leave
xor
inc
fstps
add
jl
inc
add
out
fbld
ljmp
mov
incl
stos
mov
xlat
mov
and
pop
push
test
es
imul
popa
sarl
icebp
incl
mov
addr16
jmp
cmp
mov
int
subl
ja
sti
fdivrl
xchg
sbbb
stos
ds
mov
mov
cmp
cmp
pop
not
fsubrs
decl
pusha
sbb
in
ljmp
xchg
ljmp
mov
and
lock
sbb
scas
das
inc
dec
loope
insl
pop
xchg
inc
sbb
xchg
xchg
sub
push
xbegin
loopne
dec
call
je
fldenv
push
stos
mov
fisubrl
push
mov
dec
popf
std
jmp
or
repnz
adc
xchg
sbb
cld
sub
mov
inc
fwait
dec
sub
add
xchg
ljmp
cmp
mov
int3
testl
add
dec
inc
jbe
xor
jae
fildl
add
call
mov
mov
dec
int
xchg
data16
xchg
and
insl
xor
jecxz
call
or
test
shlb
inc
fcomi
sti
call
lcall
jbe
sbbl
jbe
rolb
add
iret
inc
popf
scas
decl
popa
loope
minps
nop
jbe
pop
dec
rorb
sbb
aas
mov
push
fcomps
sbb
inc
jecxz
cmpb
jmp
int3
addr16
pusha
mov
sbb
adc
sub
inc
xlat
cs
jnp
push
pop
pop
fcmovb
mov
inc
in
push
aam
and
mov
dec
int3
xchg
js
pop
and
pop
xchg
mov
or
std
dec
jmp
outsb
insb
sahf
mov
in
mov
lret
out
dec
sti
or
xchg
lock
decl
cmp
loopne
insb
inc
fists
icebp
pop
call
sbb
add
aam
pop
add
lock
mov
xor
jp
push
loope
lock
jb
into
mov
lcall
hlt
jp
popf
loop
sub
dec
xchg
aas
loop
imul
cmc
insl
jle
popa
lock
ljmp
sarb
sub
dec
testl
sub
sub
sbb
mov
loop
movsl
pop
fcomip
call
dec
cld
sub
bound
cmp
add
cmp
incl
fmuls
jnp
jmp
add
mov
pop
and
xchg
mov
dec
sub
sahf
repnz
sbb
dec
nop
push
push
decl
clc
jge
popf
add
sub
enter
movsb
dec
mov
mov
inc
ds
fnstcw
sbbb
add
outsl
sub
pushl
andl
pop
adc
lret
call
xchg
pusha
aas
xchg
decl
inc
sbb
enter
mov
adc
dec
inc
pop
mov
popa
ljmp
sbb
in
scas
and
test
data16
sahf
xchg
xor
lock
xchg
cs
ljmp
sub
push
outsl
mov
ljmp
jo
mov
sbb
decl
fsubrl
xchg
ud1
jns
jg
ds
sbb
adc
pop
adc
pop
test
lcall
xor
jbe
and
mov
dec
addl
popa
adc
cmp
hlt
decl
inc
es
mov
sub
mov
fucomip
add
arpl
pop
add
aas
sub
mov
shll
stos
and
mov
pushl
dec
ret
xchg
orl
outsl
pop
add
fstpl
mov
jl
mov
out
test
into
pop
pop
out
inc
out
xchg
mov
push
clc
mov
fdivrs
pop
rorb
es
lret
cld
loope
ljmp
out
xlat
pop
adc
and
test
scas
ljmp
lods
pushf
scas
mov
outsl
cli
call
push
pusha
fldcw
dec
xlat
scas
mov
mov
cmp
dec
pop
icebp
push
mov
add
pushl
std
jne
dec
dec
mov
xor
mov
jl
je
and
test
cmp
cs
pop
popa
add
scas
push
negl
lods
jl
and
lds
xchg
mov
jno
jno
add
popf
sahf
ficompl
pop
outsb
pop
fistps
jmp
or
mov
adc
iret
lahf
adc
cld
add
inc
mov
mov
jge
rcrb
imul
sahf
add
pushl
pushf
push
cmpsb
daa
mov
iret
xorl
push
sub
clc
mov
iret
bound
sub
pushl
lea
cltd
sub
dec
jge
movsb
sub
gs
ja
out
ja
mov
inc
lcall
sub
lds
mov
cmp
popa
neg
or
inc
mov
frstpm(287
cli
add
cmp
push
arpl
les
mov
ret
pop
sub
iret
jmp
pop
xchg
dec
pop
or
cli
scas
and
jle
out
sub
popa
cmp
mov
rolb
stos
inc
dec
sbb
pushf
cltd
and
mov
mov
jno
icebp
jmp
pop
push
bound
aas
mov
aaa
and
cmp
test
or
and
cmc
cwtl
insb
shrb
out
clc
decl
imul
or
or
aad
xor
rclb
incl
aad
stos
pextrw
mov
lods
jp
outsl
cmp
lret
out
scas
stc
repz
pop
xchg
pop
and
ljmp
mov
movsl
adc
mov
cwtl
push
out
fcompl
scas
cmp
push
jmp
popa
imul
cmc
jle
sbb
ret
lret
jp
mov
mov
mov
rolb
into
cs
ljmp
sub
fbld
mov
out
push
out
call
jmp
clc
and
shll
call
adc
mov
pop
cli
stos
add
pop
mov
jp
out
and
sub
xchg
lock
fnstenv
sub
shl
cmc
jnp
mov
cwtl
icebp
ljmp
xor
lret
push
dec
incb
adc
test
xor
cwtl
inc
add
dec
add
arpl
hlt
jb
push
shl
jle
adc
dec
xor
pop
xchg
xchg
jg
incl
fcomp
pop
or
cmp
mov
stc
dec
outsl
fstps
sbb
cmpsl
push
add
or
inc
shlb
push
stc
push
leave
xor
insb
lcall
incl
sbb
lods
call
push
inc
inc
movsl
or
std
scas
adc
jg
push
and
int
loopne
int3
sbbl
mov
cmc
xlat
pop
scas
pop
mov
sub
inc
in
enter
and
or
sti
dec
or
adcb
pop
mov
cld
fbld
xor
repnz
cmp
aam
pushf
pop
call
ss
insb
pop
xor
imul
nop
inc
lea
push
mov
xorb
out
cs
push
mov
add
xchg
and
sub
lcall
je
test
xor
adc
jb
lods
pop
adc
inc
andl
idivl
add
jbe
insb
ja
xchg
sub
das
dec
push
popa
cmp
cmp
mov
push
movsl
add
inc
mov
dec
and
xchg
push
pusha
out
jg
movsl
mov
out
gs
xchg
push
xorl
rcrb
cmp
push
cmc
incl
rcr
xchg
cld
loopne
icebp
ret
lock
cmp
outsl
es
jg
lret
mov
push
inc
jnp
pop
and
out
jo
cmp
rorb
mov
adc
decl
mov
push
gs
ret
mov
aam
out
andl
push
aam
les
jl
jp
mov
add
fsubs
xchg
mov
pop
push
inc
and
jnp
es
daa
and
lcall
mov
mov
aad
clc
mov
sahf
jbe
ljmp
loop
xor
lcall
call
mov
test
pop
addr16
xor
push
mov
fwait
loope
stc
faddl
decl
fwait
sub
les
sbb
icebp
pop
adc
incb
rcrb
pop
fbstp
aam
push
xchg
pushf
adcb
xor
cmpb
aas
lock
mov
ret
ljmp
push
sub
cmp
mov
xchg
adc
adc
pop
stc
outsl
adc
sbb
movsl
fistps
push
stos
daa
inc
cmp
cltd
push
fsts
mov
aaa
addl
std
push
loope
test
cmp
sbb
out
adc
call
xchg
push
int
lds
push
push
jno
in
dec
sub
mov
fldl2t
jns
pop
fildl
incl
cld
decl
loop
mov
sub
andl
push
pop
insb
or
jnp
inc
mov
lcall
or
mov
add
xor
xchg
fdivr
clc
iret
pop
xchg
into
push
andps
ljmp
mov
pop
jp
test
or
out
aam
andl
inc
fldenv
xor
clc
mov
orl
test
call
xchg
leave
imul
jnp
mov
mov
stos
into
jns
out
ljmp
nop
ret
mov
or
and
and
pop
sbb
push
mov
cli
cmp
repnz
movsl
popf
push
jnp
adc
dec
ret
xchg
push
pushl
call
shrb
and
mov
lods
into
or
in
dec
sbb
imul
sub
pop
icebp
imul
mov
sbb
sbb
cmp
push
jmp
and
jae
jmp
sahf
or
sub
push
mov
mov
outsb
in
pop
push
out
jbe
xlat
mov
adcl
mov
iret
jb
in
inc
imul
pop
fildll
fistpl
in
rcl
adc
xchg
lds
pop
fists
jp
sarb
inc
sub
clc
das
incl
fprem
fisttps
aam
cmp
inc
cmp
lcall
shl
adc
add
pusha
cmpsb
pop
push
push
lea
shrb
push
rcr
cmp
aad
dec
fdivrp
pushl
xchg
aam
mov
mov
mov
fildll
or
inc
mov
sbb
das
jns
decl
aas
sub
js
pop
jbe
jnp
or
mov
sub
pop
int3
mov
repnz
sahf
mov
jle
notl
idivl
jnp
test
mov
pop
cld
pushl
xlat
push
mov
adc
push
lret
daa
in
jbe
fldenv
icebp
mov
inc
mov
or
lea
push
loopne
stc
and
fs
cmp
jbe
adc
jmp
dec
jecxz
and
push
jns
cld
sti
jmp
mov
rcr
jb
repnz
mov
pushl
xor
popa
pop
je
and
lds
stc
pop
adc
pop
fnstcw
push
cld
xchg
test
js
cs
or
add
test
call
fcomps
cmp
clc
pop
sti
scas
mov
addr16
popa
add
mov
pushf
jg
dec
pop
cmp
mov
test
andl
nop
push
pop
inc
push
cmp
inc
add
out
mov
daa
loop
sbb
stos
aas
shrb
push
pop
in
push
xchg
mov
scas
and
gs
xor
lcall
pop
popf
mov
jo
iret
lds
lock
xor
pop
pop
push
jmp
mov
dec
in
push
sbb
adc
repz
pop
cld
ds
mov
fdivl
jne
or
or
inc
xorb
pop
push
fsubr
push
jle
cmp
push
inc
mov
dec
jae
in
incb
mov
mov
mov
cwtl
push
add
ljmp
aas
xor
adc
sbb
cmp
jnp
or
inc
call
mov
aad
pop
xchg
dec
clc
sbb
mov
ret
ljmp
inc
or
call
mov
or
ret
cmc
fucomip
cs
fcmovnbe
mov
enter
and
and
stos
mov
xchg
iret
cli
repnz
pop
fcmovnbe
cmp
pop
push
jne
cmpsl
push
dec
notl
aas
jmp
call
mov
adc
dec
pop
adc
jno
inc
lock
mov
js
pushl
xchg
fsqrt
clc
shrb
or
push
sub
jp
stos
dec
or
ret
ss
lds
jp
decl
fwait
push
xchg
mov
ja
adc
nop
and
orl
lock
dec
pop
pop
lcall
sti
in
mov
addb
mov
xchg
lods
fldcw
out
xorl
xchg
addr16
je
push
data16
ljmp
ds
jb
mov
aas
jle
fdiv
outsb
mov
dec
dec
insl
es
or
call
pushf
arpl
cltd
rorb
xor
repz
pop
jmp
mov
decl
xlat
movb
pushf
es
imul
and
ljmp
adc
lea
out
cmp
adc
push
stos
or
in
out
ret
je
mov
stos
mov
add
sahf
std
mov
in
pusha
ljmp
pop
clc
lcall
mov
xor
int3
jp
fstpl
lock
pop
lods
jno
bound
or
xchg
andb
jns
es
in
dec
jo
pop
clc
lret
call
mov
add
cmp
lret
dec
xchg
mov
jg
or
roll
xor
sub
jne
aas
push
aam
xchg
rolb
pop
xor
add
ficoms
xchg
pusha
jmp
testb
sbb
mov
mov
sub
ret
mov
movl
pushl
jg
sahf
cltd
xor
sub
popf
iret
mov
das
mov
dec
lods
in
aaa
mov
decl
xor
sbb
cmp
pop
or
dec
mov
add
jb
cmp
cmpsb
daa
enter
loopne
xor
xor
dec
das
clc
incl
aaa
dec
add
aas
adc
stc
loope
jo
or
inc
mov
lock
insb
sbb
test
js
pop
xchg
fs
fwait
bound
ljmp
or
adc
pop
test
cmpl
pop
cmp
lcall
push
push
inc
cmp
fdivrs
sti
dec
jp
push
imul
outsb
jl
fwait
cmp
pop
icebp
imul
call
and
imul
xchg
push
mov
fucompp
pushf
leave
dec
fimull
cmp
or
fcomps
sub
push
pop
mov
int3
jno
inc
jg
iret
push
xchg
ljmp
mov
nop
push
sahf
sub
cld
cmpsl
dec
sbb
lahf
cmp
ljmp
mov
sbb
fsub
sbb
inc
mov
adc
mov
xchg
xorb
mov
cmpsb
mov
out
mov
or
dec
scas
push
addr16
enter
daa
jns
cmc
fcomip
call
pop
dec
mov
cmp
adc
dec
push
cli
mov
das
icebp
jmp
mov
testl
loope
sbb
jp
inc
pop
movsb
clc
outsl
push
in
mov
jmp
ljmp
jl
call
fstpt
inc
sbb
je
cmp
push
cltd
xor
iret
sbb
ds
cmp
imull
pavgb
ljmp
ss
pop
pop
mov
mov
push
into
sarb
push
popa
inc
stos
jae
jmp
mov
mov
mov
or
dec
shlb
mov
scas
lcall
fdivrl
arpl
fdivrs
mov
cli
mov
mov
nop
mov
and
xchg
imul
test
ljmp
ss
sbb
into
test
sbb
add
lock
sub
std
lcall
pop
ret
aad
add
test
and
sub
std
lcall
inc
xor
inc
jge
push
and
loop
cmc
mov
jmp
inc
push
das
or
mov
mov
pop
loop
xor
sbb
mov
adc
js
xor
aad
out
fmul
or
dec
sbb
jb
pop
add
daa
cmc
sbb
cmp
decl
cmp
call
push
cmp
aad
jae
inc
test
out
mov
enter
lcall
adc
adc
out
lock
arpl
stos
cld
jle
int3
push
divl
lcall
jmp
xchg
ret
and
lahf
and
fcmovb
cmp
pop
jl
jns
fstpt
xlat
insl
inc
pop
mov
inc
insl
jo
lcall
arpl
sub
pop
adc
mov
jge
pop
jnp
sub
xor
add
bound
rcrl
dec
push
nop
adc
popf
mov
jg
decb
xchg
mov
jp
adc
pop
inc
add
cmp
jecxz
dec
mov
cmp
incl
or
bound
lcall
lcall
sbb
shll
cmp
imul
pushl
shll
insl
ret
adc
inc
popf
jb
je
lcall
adc
mov
inc
addb
ss
mov
jmp
push
push
in
pop
jl
icebp
dec
shrb
movsl
mov
jg
call
sbb
shr
jbe
stc
call
lods
add
jno
ljmp
cmpsb
or
lahf
scas
pop
data16
test
ret
or
xchg
mov
sbb
idivb
ds
push
iret
out
fwait
or
aas
cmpb
mov
pop
xchg
aaa
aaa
pop
push
jl
fsubs
pushw
xchg
add
xchg
inc
lcall
stos
xchg
mov
inc
and
pop
orb
push
std
jns
mov
in
pop
mov
mov
lahf
in
inc
into
aaa
pop
mov
fadd
fildll
sbb
inc
and
xchg
jge
gs
dec
jge
outsl
xor
in
leave
fisubl
lcall
dec
dec
repz
lcall
es
mov
gs
mov
or
push
lcall
lret
fdivs
daa
mov
and
pop
and
out
jmp
jns
ljmp
mov
int3
sbb
ljmp
jmp
rcll
fs
lcall
ljmp
sub
mov
sub
push
jb
push
push
je,pt
ss
incl
adc
mov
movsl
ja
in
xor
into
and
call
dec
jnp
or
jg
int3
or
xor
or
cltd
imul
cmp
sub
mov
pop
inc
sbb
adc
xchg
xchg
push
int
push
jg
ljmp
out
cmpsl
adc
mov
out
pushf
jb
in
cmp
dec
push
xchg
decl
mov
cwtl
jb
jle
test
add
insb
jo
push
pushf
dec
or
or
out
push
out
test
insl
sbb
push
or
mov
movsb
push
push
or
cmc
call
jmp
jae
or
xchg
stos
out
loop
and
or
adc
insl
nop
add
arpl
mov
dec
fcomip
ljmp
inc
jno
ljmp
adc
inc
loopne
mov
add
cli
pushf
lea
insb
mov
mov
in
jo
mov
jmp
sbb
xchg
imul
mov
push
jbe
stos
adc
jmp
push
and
aad
and
cmp
call
jg
idivb
js
ljmp
pop
add
inc
mov
pushl
cmp
cli
mov
sbb
call
xchg
sti
and
xchg
pop
jns
out
cld
test
sub
and
or
out
ficoml
jae
xchg
cli
shl
daa
and
in
pop
aas
push
repz
call
ljmp
xor
push
and
jns
in
push
stos
shrl
movb
push
stos
xchg
mov
jecxz
lcall
out
push
ljmp
inc
cmp
outsl
out
fwait
enter
jno
aaa
xchg
cli
fistpl
js
lcall
dec
cld
inc
out
repnz
lods
sbbb
mov
adc
jo
pop
cmpsl
js
pop
out
adc
jae
jmp
data16
outsb
sub
outsl
xor
jecxz
sub
mov
mov
jno
and
jecxz
jecxz
pop
les
mov
xchg
pop
add
lret
jl
lods
clc
cmp
jmp
xor
dec
dec
jp
dec
inc
mov
push
int3
inc
sbb
xor
rcl
mov
mov
pushl
in
push
jns
into
fcom
xchg
lret
adc
pop
cmp
or
inc
xchg
dec
ljmp
mov
stos
rcrl
adc
aas
lcall
mov
mov
adc
adc
sub
mov
xor
pop
inc
xchg
outsl
mov
sub
sub
pop
imul
or
push
movsb
sub
push
add
push
jmp
dec
lock
adc
sbb
push
stos
loope
sbb
pushl
outsb
test
mov
ret
idivb
insl
add
push
mov
out
jns
incl
mov
mov
call
movsb
mov
imul
jb
and
dec
stos
cli
mov
jmp
ret
popa
sub
lds
aaa
or
adc
push
orb
roll
inc
js
shr
xor
sub
jge
push
shlb
dec
adc
divl
add
mov
push
inc
pop
push
pmulhw
lret
popa
jge
clc
pushl
cmpb
imul
jg
inc
fnsave
pop
adc
mov
aad
jmp
ficompl
out
jg
icebp
add
loope
ret
mov
sub
xchg
test
fcompl
pop
fadds
adc
out
pop
xorl
icebp
sti
dec
adc
pand
ljmp
mov
pusha
sbb
aas
ret
fs
decb
insl
jno
mov
fiaddl
adc
pushf
jle
adc
cwtl
adc
mov
cltd
push
aam
int
mov
or
aaa
das
call
and
cmc
scas
fldt
jns,pt
pop
cmp
mov
sub
std
jbe
xor
inc
addb
lcall
add
arpl
push
sub
lcall
pop
shrb
gs
leave
das
or
sbb
cmp
add
jmp
aas
loopne
inc
pop
and
pop
or
and
orb
fimuls
push
adc
idiv
jmp
cs
add
cs
mov
sbb
mov
jne
sbb
negl
jmp
pop
push
ja
arpl
and
iret
cmpsb
orl
pushl
call
xor
cmp
pop
lock
jg
gs
in
cmc
sub
filds
inc
or
stos
cld
out
rorl
dec
adc
dec
add
imul
xor
push
lret
outsl
inc
int
mov
enter
jle
rcrl
and
out
mov
sbb
sub
pop
data16
add
fsubrs
pop
adc
nop
pop
loop
pushl
add
pop
push
icebp
out
ret
je
jb
fisubrl
mov
inc
dec
test
push
adc
sarl
loopne
xor
addb
std
inc
push
out
or
out
mov
mull
xor
or
push
or
jl
popf
add
stos
insl
pop
push
sub
fisttps
aas
fisubl
stc
mov
cmpsb
orb
sahf
cwtl
pop
std
decl
call
daa
and
int3
push
pushf
push
scas
popf
mov
xchg
shl
mov
mov
movsb
push
insl
pop
aaa
push
incl
je
adc
aad
or
pop
mov
in
mov
jns
or
negb
ja
lahf
orb
inc
fwait
ljmp
add
ds
mov
sbb
mov
addb
call
inc
popf
data16
in
sbb
stos
ret
pop
push
stos
xlat
mov
mov
pop
adc
adc
jmp
loop
andl
xor
into
fisttpll
clc
ljmp
ss
call
leave
and
imul
push
adc
and
jmp
sbb
add
stos
lea
and
jmp
hlt
mov
lea
repnz
out
jae
xchg
imul
popf
xchg
sbb
outsl
cli
fsub
xor
mov
mov
pusha
lods
dec
xchg
outsb
pusha
add
push
mov
sub
mov
or
aad
mov
call
daa
inc
cmp
lock
mov
sbb
int
lahf
push
ret
xor
test
and
jp
lcall
aaa
pop
ficoml
cmp
incb
psrlw
mov
pop
mov
les
cltd
ret
clc
pop
imul
push
push
sar
decl
lods
bound
dec
jl
sahf
stos
inc
sbb
out
mov
repz
push
push
nop
je
incl
adc
and
adc
ja
in
aas
xor
mov
xor
inc
and
pop
lcall
sti
repnz
mov
pop
push
sub
mov
lret
cs
push
ret
xorl
loope
incl
pop
pop
call
xchg
xchg
push
das
xchg
xlat
push
out
test
aas
jg
push
inc
fsubs
rolb
and
bnd
xor
in
or
loopne
int
push
push
and
decl
mov
xchg
push
mov
adc
inc
scas
mov
decl
mov
jle
and
ror
outsl
mov
pop
call
adc
sub
in
ss
out
xchg
and
incl
mov
push
and
repnz
rorb
and
hlt
repz
mov
mov
out
iret
pushf
outsb
cmpsb
pop
lcall
mov
cltd
ror
iret
jmp
dec
sbb
mov
push
lahf
and
mov
cs
into
mov
out
mov
push
mov
mov
jge
ja
xor
shr
sbb
lods
cli
loopne
gs
lea
adc
jecxz
call
add
xor
push
es
sub
inc
stc
outsl
dec
rolb
push
fs
aas
movl
ret
cwtl
xchg
orb
mov
xlat
pop
iret
mov
pop
sub
incl
mov
inc
scas
mov
sub
mov
jbe
jae
mov
pop
sub
cmc
sub
sub
incl
or
fs
and
or
mov
jbe
lcall
mov
push
mov
cwtl
movb
orl
lea
mov
movsb
out
arpl
incl
cmp
mov
or
or
cmp
lret
dec
hlt
repnz
push
call
std
lcall
sbb
pop
sub
movl
nop
xchg
and
pushl
dec
divb
jbe
test
andl
fcomps
inc
decl
sbbl
cmpsb
test
stc
jecxz
bound
mov
int3
test
mov
shr
bound
pop
dec
ret
test
jb
mov
add
mov
push
jg
pop
jbe
sub
ljmp
shll
and
arpl
mov
adc
cmp
filds
movsb
inc
mov
daa
push
pop
push
jae
out
mov
imul
call
pop
cmp
aam
cmp
pop
pusha
cmp
inc
lock
cmpsl
or
fdivrp
imull
icebp
dec
fsubrl
clc
push
and
js
out
pusha
pop
les
test
cmp
jp
popa
jecxz
cmp
xor
cs
jmp
andb
lret
lcall
xor
je
lcall
push
mov
repz
sti
ds
adc
add
xor
mov
lods
lret
adc
call
out
jmp
cltd
xor
call
clc
push
mov
xchg
and
mov
mov
mov
pop
pop
push
dec
mov
sub
jne
jmp
test
push
ret
jns
xchg
pop
sarb
iret
sub
sbb
dec
test
adc
sar
lods
jne
or
sbb
scas
iret
lods
sbb
cld
aam
test
pop
iret
inc
icebp
pushl
sub
and
popf
cmp
dec
sbb
dec
fsubr
xlat
add
add
jl
sub
pop
and
ss
mov
fisubl
lods
push
imulb
call
mov
int3
nop
filds
fs
sbbl
add
aam
divl
hlt
add
inc
add
mov
test
call
mov
icebp
test
pop
mov
or
out
lods
addb
sub
jb
faddl
out
pop
dec
aad
lea
or
imul
test
fdivrl
aad
xor
ret
call
xor
test
mov
adc
addr16
rcll
mov
movsb
cmp
ljmp
xor
xor
inc
movsb
mov
cmp
sbb
lret
or
ljmp
sar
pop
adc
jnp
out
push
mov
xchg
fisubrl
ljmp
or
pop
hlt
jbe
scas
or
mov
add
pop
push
sub
hlt
scas
and
not
aas
insb
stos
pop
pop
dec
pop
outsl
add
sub
cmc
popa
popf
in
into
mov
and
push
popa
cmp
call
ja
cmc
cli
lcall
add
dec
pop
out
push
cmp
jmp
jbe
xchg
jns
jnp
jno
push
into
sbbl
cmp
les
cli
pusha
or
jg
out
clc
and
mov
pushf
bound
loope
cmpsl
xor
daa
add
add
daa
call
pusha
sbb
iret
xor
fadds
jno
iret
mov
fnstcw
dec
ja
ja
clc
les
jnp
test
jb
jp
outsl
addb
dec
out
mov
call
mov
cmpsl
push
jne
and
ret
pop
cmpsb
rcrb
cmp
xorb
test
outsl
es
fstp
or
dec
jl
call
pop
rcrl
cmp
and
scas
inc
mov
les
fwait
xchg
dec
call
inc
lods
sti
pop
pop
push
orb
or
scas
loopne
shrl
lock
arpl
mov
xchg
jo,pt
push
cmp
std
inc
mov
mov
dec
dec
je
ljmp
inc
and
in
mov
jne
ss
jbe
push
das
sbb
pop
loope
fs
das
stc
lods
sub
ljmp
test
sub
xor
cmp
xor
pop
mov
jne
aam
push
jo
jp
sbb
pop
xchg
stos
lfs
inc
pop
sub
mov
loopne
incl
inc
fmuls
and
shrl
insl
lcall
js
cmp
or
dec
sbb
add
bound
push
stos
push
cld
xchg
lods
push
add
cvtps2pi
xchg
or
mov
call
pop
mov
adc
xchg
lods
sbb
push
sbbb
mov
sahf
loopne
mov
adc
call
mov
mov
call
insb
scas
repz
out
movsb
imul
dec
das
mov
jle
lret
ljmp
mov
push
ret
in
sub
negb
push
jbe
movq
cli
test
lcall
fists
les
sbb
sub
stos
jno
mov
pop
shlb
jnp
lahf
and
stos
sub
les
xor
xor
push
adc
loop
out
cmpsl
dec
aaa
movsl
shr
jbe
fildll
or
mov
repz
mov
or
repnz
call
dec
loop
pop
lock
ret
dec
sub
ret
push
xchg
enter
out
adc
lcall
fisubs
and
jmp
test
icebp
cmp
mov
cld
pop
dec
dec
call
hlt
or
clc
out
dec
and
decl
data16
jl
and
inc
mov
mov
jp
or
jg
or
out
adc
iret
fidivs
jbe
lods
call
jg
mov
mov
ljmp
loopne
sub
sbb
iret
cltd
jno
incl
sub
or
pushf
dec
dec
int
mov
clc
jnp
je
push
jns
iret
pushf
shl
lret
jmp
push
roll
mov
mov
stos
xchg
stos
sub
adcb
in
fcmovu
cmc
cmp
cs
sbb
out
push
mov
decl
xchg
mov
jne
dec
xor
ret
lcall
dec
stos
and
incl
cld
mov
inc
stos
xchg
ficompl
mov
fwait
push
and
loopne
push
jg
into
inc
testb
push
pop
xor
jge
xchg
rcll
fidivrs
cld
testb
in
sbb
sub
or
push
cltd
lock
xor
mov
test
mov
lcall
or
xchg
lods
sub
adc
ret
add
cmpsl
push
neg
jbe
ljmp
in
mov
rorl
jge
stc
cli
pop
loopne
xor
add
jg
mov
lret
fsubr
push
push
mov
aas
stos
mov
subl
jecxz
fistps
js
cmp
add
fs
push
dec
fucomi
mov
jns
sub
imul
fisubrl
xor
adc
push
arpl
outsl
outsb
xor
insb
gs
fsubs
or
jne
inc
insb
insb
outsl
arpl
jnp
sub
jb
xchg
push
outsl
jo
sbb
outsb
jg
jns
dec
imul
xorb
gs
gs
popa
jae
cli
jbe
repz
xor
sub
push
jb
inc
fs
arpl
data16
push
dec
outsl
sub
bound
mov
ss
je
mov
pop
in
mov
jno
push
jns
gs
push
imul
imul
imul
inc
int3
fiadds
incb
inc
inc
outsl
insl
jo
loop
lcall
and
jb
add
insb
outsl
jge
test
imul
or
pusha
aad
sub
sub
or
sub
inc
outsl
and
and
adc
inc
add
push
add
cwtl
push
imul
xchg
ret
xchg
leave
stos
push
xor
or
jmp
sub
imul
inc
stos
fistl
fistpl
lods
mov
lret
xchg
adc
inc
jne
subb
pop
stos
sbb
mov
or
cmpsb
push
inc
shll
cwtl
nop
mov
or
or
cmp
leave
or
cmp
cmp
or
addb
or
incl
push
les
dec
and
les
fucom
push
xor
imul
push
dec
or
fdivrp
sbb
ja
push
mov
cmp
xor
jb
outsb
jae
inc
dec
in
mul
dec
xor
and
nop
test
inc
jnp
adcb
inc
scas
add
add
movsb
xchg
sub
and
or
xchg
add
mov
add
fwait
add
dec
jae
mov
outsl
mov
add
fwait
jae
dec
les
dec
mov
sub
inc
jg
or
pop
inc
jo
inc
lret
inc
pop
push
sbbl
or
xchg
or
inc
xorl
mov
addb
mov
mov
push
lahf
or
test
sub
lret
inc
sbb
loop
out
xchg
sub
fsubrs
mov
adc
push
sub
aad
push
push
xor
fs
or
or
and
fsubs
adc
mull
mov
push
dec
add
add
push
stos
sub
add
decb
add
sbb
incb
insl
int
inc
pop
add
nop/reserved
aas
cmp
inc
adc
lods
lea
mov
pushf
sub
add
adc
out
mulb
fdivs
push
add
and
shll
imul
mov
push
outsb
fs
mov
fsts
rorb
cmp
loopne
dec
dec
and
push
xor
add
xor
pushf
loope
jb
xor
dec
popa
and
inc
sub
mov
mov
lock
push
je
jae
sti
bound
dec
pop
lcall
ret
inc
push
aas
mov
add
and
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
addb
add
add
add
add
add
add
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
fcoml
add
pop
add
in
add
add
add
add
add
add
add
mov
add
rcrb
loopne
add
in
add
add
add
add
add
add
add
fadds
add
movsb
popa
aas
add
pop
add
in
add
add
add
add
add
add
add
add
add
mov
add
pop
add
in
add
add
add
add
add
add
add
sub
add
insb
jno
add
pop
add
in
add
add
add
add
add
add
add
push
add
add
aas
add
pop
add
in
add
add
add
add
add
add
add
js
add
xor
aas
add
pop
add
in
add
add
add
add
add
add
add
mov
mov
add
pop
add
in
add
add
add
add
add
add
add
enter
cld
nop
aas
add
pop
add
in
add
add
add
fcom
add
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
fnstcw
add
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
loope
add
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
jmp
je
pop
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
icebp
add
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
stc
add
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
add
add
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
or
add
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
adc
add
scas
out
lret
xchg
xchg
frstor
adc
cmp
inc
subl
pop
cmp
int3
push
clc
push
push
out
test
jl
push
cmp
push
fdivs
pop
mov
sbb
subl
xor
or
cmpsb
push
xchg
sahf
es
mov
xchg
movsl
xor
neg
dec
stos
xor
stc
sti
rep
ret
std
decb
int3
out
mov
dec
mov
xchg
outsl
pop
inc
push
inc
sub
negb
inc
inc
mov
enter
push
dec
xchg
add
push
jnp
adc
sbb
pusha
imul
sahf
imul
cmp
adc
push
ja
pop
and
adc
push
stos
loope
jp
mov
ret
andb
cmp
testl
mov
inc
push
mov
push
mov
outsb
sub
in
adc
mov
bound
sub
xchg
pop
sub
or
cmpsb
insb
nop
into
dec
fidivrl
xchg
testb
jno
in
or
adc
mov
insl
lock
mov
std
in
popf
or
stos
xchg
jmp
jp
mov
insl
push
dec
mov
adc
or
mov
outsb
inc
mov
idivl
pop
sbb
mov
mov
inc
or
pop
and
in
rorb
mov
mov
out
out
jle
repnz
lds
scas
mov
popa
inc
mov
ds
sbb
sarl
xchg
or
and
ss
dec
pop
and
xchg
fsubs
cmp
and
cmp
mov
cli
sub
adc
push
imul
popf
shl
out
int
xor
sbb
neg
mov
stc
jl,pt
sbb
push
dec
mov
loopne
lea
in
push
mov
dec
adc
mov
ljmp
mov
test
sbb
jbe
pop
pop
icebp
xlat
push
enter
xchg
add
icebp
lcall
sahf
aad
scas
aaa
scas
les
iret
imul
test
jbe
and
pop
int
leave
addb
cwtl
push
push
mov
stos
icebp
mov
ja
jmp
adc
sub
cmp
jno
or
in
ss
pop
sarl
push
gs
push
cmp
lret
push
push
stos
jo,pt
push
adc
iret
mov
in
test
xor
mov
ffree
je
cli
pusha
adc
gs
hlt
test
jle
ds
mov
fcmovne
cmp
fstl
addr16
mov
mov
adc
jl
fs
ss
jmp
roll
fwait
pop
cwtl
shr
neg
cmc
clc
movsb
inc
inc
das
addl
jge
subb
mov
push
std
scas
mov
std
aam
xchg
sahf
xor
ja
outsb
pop
shl
fbstp
inc
scas
scas
mov
mov
in
sub
loopne
xchg
daa
scas
push
push
sub
mov
mov
or
out
mov
xor
xchg
fdivl
jbe
xor
fcmovbe
sarl
fdivl
lahf
hlt
aad
push
xchg
rclb
cmp
push
je
cmpsb
dec
loop
and
push
or
es
dec
cld
cmp
mov
aas
push
mov
hlt
aam
pop
enter
lods
cmc
sbb
jecxz
jp
sti
cltd
inc
and
push
cmp
popa
jnp
setl
mov
push
outsl
negb
imul
and
into
aas
lds
sbb
dec
adc
mov
dec
jno
xor
jns
stos
hlt
jne
test
adc
cmp
lret
loop
cltd
outsl
leave
pop
mov
outsl
cmp
xchg
mov
sbb
notb
test
mov
jle
call
mov
inc
inc
sub
jae
test
mov
hlt
mov
pop
xchg
pop
adc
mov
xchg
adc
mov
pop
add
jmp
fwait
xchg
cmp
repz
fdivrl
jp
stos
cmp
mov
sub
push
pop
adc
mov
jecxz
sub
xor
scas
insl
push
pop
push
fsub
mov
mov
jl
addr16
or
addb
jp
cs
lea
sub
adc
push
xchg
add
icebp
pop
mov
pop
ljmp
cwtl
jbe
mov
dec
adc
cmpsb
scas
inc
xor
and
adc
loope
push
ljmp
mov
and
dec
rclw
xchg
sbb
popf
cmp
or
int
je
and
outsb
add
imul
aaa
aas
lods
invd
lods
jp
xchg
dec
push
pop
dec
adc
lret
pop
sbb
lds
lcall
mov
fmul
in
jne
icebp
in
lret
jl
rorl
fildl
push
push
hlt
mov
lea
scas
test
push
mov
shlb
clc
xor
fsubs
or
mov
dec
mov
and
xor
adc
ss
nop
fidivl
xor
sub
fldenv
loope
scas
or
push
pushf
xor
loopne
out
sbb
inc
nop
xor
shl
push
rcrb
mov
shll
jo
fdivl
inc
mov
in
xchg
jl
dec
stos
out
pop
cmpsb
scas
push
inc
scas
popa
push
hlt
xchg
dec
movsl
xor
lahf
imul
push
sbb
xor
es
leave
dec
mov
test
imul
rolb
int
mov
dec
sub
jmp
cwtl
cld
ret
sbb
push
ja
push
jno
popf
or
popa
addr16
mov
jbe
fs
and
int
popf
xor
cmp
ret
adcb
jmp
jb
leave
adc
cs
popa
or
adc
and
scas
fwait
mov
dec
pusha
cmpsb
arpl
adc
aam
sub
sub
xlat
pusha
cltd
pop
clc
pop
mov
rol
fwait
fs
cmp
test
adc
pop
shlb
adc
sti
test
mov
ja
push
mov
cmp
fstps
xchg
cs
stc
mov
jecxz
shrb
push
mov
mull
pop
outsb
pop
int
mov
jb
test
sub
mov
rorl
jb
rolb
jg
mov
pushf
jo
fiadds
test
dec
cmp
and
xchg
jmp
sub
das
add
xor
daa
bound
inc
add
std
lcall
inc
fistpll
sbb
andl
pushf
or
xor
xor
jl
push
push
bound
mov
addb
icebp
dec
lock
lods
mov
and
fstps
cld
and
daa
cmpsl
cs
mov
inc
ljmp
stos
sarb
data16
sub
xchg
je
mov
pop
xchg
leave
adc
cmp
stos
dec
jle
sbb
out
out
adc
pop
les
dec
leave
jmp
ficoml
dec
mov
aam
je
add
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
cltd
aas
add
cltd
aas
add
add
lret
add
add
add
cltd
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
gs
xor
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
add
add
je
imul
