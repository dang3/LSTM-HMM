xorb
arpl
test
dec
pushf
xchg
inc
stos
dec
ret
loopne
out
cmpsl
sti
rcll
mov
lds
jne
popf
inc
lret
cmovge
mov
cmp
popf
jnp
sub
movsl
inc
add
sbb
adc
sbb
movlhps
xchg
pop
mov
push
cmp
loopne
or
pop
out
push
imul
fwait
mov
xor
fildll
cmp
mov
push
lcall
adc
inc
int3
adc
xchg
test
stos
adc
cmp
es
cltd
mov
xchg
jl
cmpsb
inc
nop
inc
jp
iret
xor
xchg
andb
lea
mov
or
sbb
inc
testb
sbb
inc
scas
int
pop
mov
push
mov
push
popf
jae
pop
inc
test
sbb
movsb
das
loope
sbb
mov
sbb
xchg
add
daa
iret
cmpsl
subb
daa
push
jge
push
inc
push
mov
add
dec
sbbl
sarl
orb
mov
inc
push
and
lret
ret
leave
das
push
rcrb
adc
pop
mov
repnz
inc
cmp
lret
adc
ja
in
cmp
xor
inc
test
or
imulb
icebp
lds
xchg
fistl
int3
xchg
sub
pop
xchg
push
sub
enter
fs
inc
push
cli
push
xchg
mov
pusha
sbb
bnd
stc
dec
cmp
add
lcall
lret
adc
gs
lods
or
dec
mov
xchg
adc
dec
pop
cmp
inc
sbb
xor
mov
sub
xlat
xor
daa
rcrl
sub
mov
mov
andb
pop
lcall
pop
cmp
add
cmp
xchg
mov
mov
sbb
cwtl
stos
or
sbb
inc
jle
insl
and
add
ljmp
mov
mov
jns
inc
movsb
xchg
mov
dec
mov
sarb
mov
xchg
push
xchg
adc
loopne
jmp
adc
inc
cmp
rcll
sub
out
push
shll
mov
scas
lods
fistpll
adc
sbb
gs
pop
int
cwtl
cld
fptan
add
inc
out
push
jge
cmpsl
cmpl
adc
fisubrs
jmp
rcrb
mov
push
les
jge
sub
fimuls
ret
mov
testl
jge
xchg
push
jge
sbb
mov
out
and
lea
or
icebp
lds
pop
push
inc
sub
adc
sarb
cmp
outsb
into
xchg
call
xor
les
xchg
int
sub
sahf
mov
sbb
inc
test
rsqrtps
fists
mov
stc
ljmp
stos
or
out
add
sbb
sub
push
dec
pop
xchg
clc
and
mov
mov
lret
out
xchg
int3
adc
xchg
xchg
fwait
cmpsb
sub
push
movsb
pop
fsubrl
and
fwait
lods
daa
shll
jmp
and
xor
push
sbb
adc
sbb
sbb
hlt
inc
jo
aaa
or
lret
inc
aaa
cmpsb
repz
xchg
mov
fnstcw
adc
testb
lahf
imul
adc
cmp
add
inc
and
testl
call
sub
fwait
add
sahf
inc
xor
lods
pop
scas
fists
mov
ja
leave
and
les
in
push
rcll
subl
decl
jae
push
aaa
push
sbb
xor
outsb
shlb
loop
xchg
push
testl
mov
popf
dec
or
repnz
clc
sbb
je
mov
jg
test
repz
movsl
push
scas
sarb
icebp
nop
adc
cmp
int
mov
popa
and
fxrstor
jb
or
mov
std
in
icebp
dec
notl
loop
jg
ret
jmp
push
xchg
aad
int3
mov
imul
nop
inc
jg
mov
les
inc
jb
xchg
cmp
btc
add
xchg
or
xor
leave
push
add
push
cld
and
les
mov
mov
addl
mov
sub
xor
jno
inc
adc
mov
cmpsl
push
scas
addl
push
in
ret
andb
idivl
xor
cmpsl
scas
xlat
jg
and
xchg
nop
pop
xchg
enter
lret
mov
fcompl
fs
xchg
adc
cmp
sahf
xor
add
lret
dec
ja
xchg
sbb
adc
inc
sbb
jg
and
jmp
mov
dec
mov
js
push
stos
sar
mov
nop
out
sbb
loope
cmp
xor
pop
cld
sbb
dec
and
stos
pop
inc
mov
xor
or
pop
mov
mov
mov
gs
and
imul
xchg
sub
sub
push
or
push
and
push
pusha
int3
int3
int3
xor
insb
cmpsl
xor
mov
cmp
mov
std
mov
add
scas
xor
xor
ret
inc
sbb
sub
push
cmp
sbb
movsb
repnz
call
mov
lds
lcall
orb
rolb
xchg
ret
stos
mov
int
fwait
repnz
mov
push
xchg
push
dec
mov
xchg
hlt
xchg
xchg
push
enter
popa
add
mov
rcll
std
cmp
pop
sbb
and
jle
cmpsl
pop
adc
mov
xchg
ja
fwait
xchg
loope
mov
xor
add
test
cld
jge
jle
sarl
lods
gs
adc
dec
pop
jmp
dec
enter
mov
repnz
stos
rcrl
lds
jo
sbb
cwtl
push
lret
clc
subb
mov
xor
movsl
lcall
iret
xchg
in
sub
inc
inc
mov
dec
fsts
aas
mov
and
jle
sub
mov
stos
sbb
das
mov
inc
scas
scas
insb
pop
fwait
jle
jns
xchg
and
mov
push
shll
dec
xor
cmpsl
jno
mov
push
cmpsl
rcrb
shl
and
lods
rorl
fs
cli
xor
mov
int3
pop
adc
loope,pt
fnstcw
sbb
shlb
xor
jl
cmpsb
xor
pop
pop
add
mov
ds
sub
xor
test
mov
bound
or
dec
bound
repnz
fistps
icebp
jnp
lahf
xchg
cmp
stos
inc
cmp
inc
lret
mov
stc
shrb
lcall
cmp
jmp
sub
fdivrl
sbb
adc
mov
mov
mov
inc
push
inc
pop
lret
movsl
mov
popf
sbb
lret
je
push
jge
mov
sub
out
inc
mov
push
cmpsl
mov
mov
ljmp
in
xchg
or
mov
pop
repnz
imul
stos
cli
sbb
jmp
imul
movsb
mov
cltd
mov
movsb
pop
or
ret
ret
cmp
pop
inc
dec
in
inc
xor
xchg
lods
xchg
or
mov
adc
js
mov
dec
xchg
cmp
test
jg
loope
push
jecxz
stos
xor
add
inc
mov
inc
sti
sbbl
xor
mov
lods
sub
lret
fistl
subl
xchg
popf
mov
jmp
sbb
sbb
jp
and
sub
pop
mov
cmp
sub
xchg
or
inc
lret
push
mov
or
mov
je
mov
xchg
adc
aaa
mov
cmp
in
jmp
lahf
ret
das
out
scas
cld
popf
xchg
mov
dec
lods
std
adc
js
fmuls
test
add
inc
xchg
rorl
addr16
cmpsl
movsb
sub
fsubs
mov
out
imul
das
jmp
cmp
jecxz
sbb
ret
ds
mov
enter
pop
add
icebp
icebp
push
divb
push
mov
dec
imul
and
es
push
xor
pushf
imul
daa
mov
xchg
pop
push
pop
pop
cmp
sbb
mov
jae
aaa
shrl
fmul
mov
cwtl
pop
into
xchg
mov
int3
fisttpll
dec
and
imul
pop
lcall
inc
icebp
sub
pop
and
push
negb
cmp
movl
jbe
fdivl
inc
cmp
add
scas
lods
push
sbbb
push
push
mov
cmpsl
sarb
jno
adc
push
sub
inc
ss
xor
sti
sti
cmp
mov
shlb
pop
ficoms
and
jbe
jmp
or
mov
outsl
mov
std
cltd
sti
ret
xor
cwtl
dec
pop
std
xchg
pop
insl
call
pop
and
sahf
icebp
ss
jecxz
movsb
inc
jb
push
lcall
pusha
aam
dec
loop
and
inc
jno
jne
pop
xchg
mov
pushf
loope
push
rcrl
xor
cmp
insb
sahf
testl
push
mov
pushf
xchg
jg
jle
leave
jp
sbb
inc
loopne
aaa
js
mov
sub
out
cld
jmp
add
insb
mov
test
ja
out
adc
in
or
ss
fimuls
loop
fmull
ret
or
jb,pn
outsb
or
xlat
jecxz
jle
mov
push
bound
pop
xor
rcrb
mov
outsb
js
rorb
sbb
stos
int
cmp
pop
push
stos
ret
out
imul
mull
les
jge
push
lods
stos
dec
test
outsl
jo
mov
cli
mov
and
xor
push
scas
insl
aaa
lods
lods
imulb
aam
out
lods
and
imul
sbb
outsl
and
in
cmp
popa
cli
jle
lea
clc
jns
es
cmc
and
mov
sub
jl
imul
out
in
adc
pop
push
outsb
imul
incb
cmp
mov
inc
dec
icebp
repnz
in
cmc
cli
dec
leave
dec
js
cltd
and
scas
loopne
adc
lcall
jns
ret
mov
jo
push
pop
sub
das
mov
mov
les
sbb
lret
inc
scas
mov
mov
sbb
cmpsb
push
xchg
fdivl
dec
pop
or
push
les
in
jecxz
inc
mov
cld
push
sbb
cmpsb
sbb
sub
and
push
insl
sub
pop
and
test
fwait
je
popl
imul
hlt
jl
inc
or
fadd
aam
sub
loope
and
popf
ss
xchg
push
lods
imulb
sub
pop
icebp
test
or
xor
push
adc
imul
stos
and
add
insb
or
inc
shl
pop
or
or
dec
fldt
sbb
mov
leave
sub
dec
xchg
push
xor
xchg
aaa
mov
lea
pusha
and
nop
out
das
stc
arpl
lret
sub
stos
push
insb
sahf
les
mov
inc
jae
push
shll
test
shr
push
insb
outsb
in
addb
xor
stc
push
mov
dec
cmp
mov
push
leave
mov
pop
mov
push
pop
mov
lock
xchg
inc
jg
fisttps
scas
stc
xor
aaa
fs
sub
mov
mov
add
shrl
jmp
data16
sub
stos
push
or
mov
out
sub
jo
insb
mov
fwait
cmp
jbe
push
xor
ljmp
mov
push
dec
cld
adc
lea
inc
int3
hlt
cmpsb
or
dec
and
push
cmp
push
mov
mov
je
subl
push
xchg
mov
mov
addl
cmc
dec
jge
mov
fwait
mov
sti
in
test
int3
int3
int3
or
fldl
xlat
dec
pop
push
xchg
pop
repz
xchg
pop
push
jns
adc
shlb
rorl
jp
fldt
or
jo
mov
lret
lret
jns
jb
cmp
sbb
repnz
jecxz
jmp
push
rol
stc
inc
fistpll
fists
xor
cmp
pop
rclb
aad
int3
pop
lods
scas
inc
mov
arpl
pushf
rcll
push
popf
pop
and
dec
cmpb
or
shlb
loope
push
negl
jl
mov
xchg
ljmp
xchg
xor
add
and
and
pusha
push
lods
mov
mov
add
inc
cmp
mov
test
jb
adc
loope
call
cwtl
movsl
push
pop
aaa
cltd
push
sbb
and
cs
pop
mov
lret
jp
xor
movsb
aam
in
sub
and
int3
int3
int3
int3
jo
daa
mov
orb
mov
ljmp
jnp
sarb
mov
push
mov
jmp
sub
sub
imul
sbb
xor
dec
pop
aas
jg
jno
int3
xchg
fisubrl
sbb
mov
fwait
mov
sub
inc
shlb
aas
push
mov
shrb
mov
test
sub
pop
xor
out
cmp
ror
and
cmp
cmp
js
jmp
cmp
or
std
push
mov
clc
mov
cltd
mov
ds
jno
jl
and
xchg
aad
sbb
cbtw
test
xor
jge
inc
ret
movsb
add
jmp
jae
popf
enter
xor
pop
lahf
filds
xlat
xchg
xchg
mov
pop
inc
lret
loope
push
mov
sub
popf
push
insl
gs
pop
push
xchg
sub
xor
xor
xchg
fdivrp
imul
out
sti
cmpsb
fiadds
fdivr
pop
mov
decl
sbb
mov
mov
jbe
lea
xor
adc
outsl
sbb
dec
adc
and
mov
cmp
sub
sbb
push
cmp
int3
fadds
mov
mov
mov
cmp
mov
loopne
fwait
in
jne
pop
subl
out
cmovb
inc
stos
test
mov
aas
je
jecxz
cld
mov
enter
sbb
jmp
push
dec
int
outsb
mov
aaa
add
adc
mov
sub
dec
cmp
sahf
jns
xor
mov
int3
int3
int3
int3
pushf
mov
pop
mov
psadbw
mull
test
test
insb
mov
pusha
dec
fsubrl
cltd
or
mov
ret
push
and
mov
mov
and
cwtl
xchg
stos
popf
add
lds
or
inc
sub
lcall
cmp
push
mov
inc
aas
sub
push
xchg
sub
lea
xchg
jp
mov
pop
dec
add
aas
in
dec
sbb
pop
add
notb
or
neg
lods
mov
sbb
adc
bound
daa
lods
jp
subl
push
mov
fildll
std
ja
mov
cmp
and
ljmp
hlt
pushf
mov
pop
bnd
fsub
lods
jns
out
pop
mov
test
out
dec
pop
push
mov
add
push
jmp
cmpsl
int
in
incb
push
data16
add
adc
aas
push
and
imul
andl
xchg
cmpsl
mov
clc
xchg
mov
ds
clc
pop
mov
leave
mov
jno
sbbb
lcall
mov
loope
stc
xor
jne
loop
out
fildl
inc
sub
ret
inc
adc
ja
xchg
aad
incl
push
es
cmpsl
inc
add
test
inc
cmp
pop
push
adc
pop
ljmp
xchg
adc
movsl
jnp
clc
cmp
pcmpgtw
inc
pushf
fs
push
add
adc
inc
or
sub
scas
loopne
or
push
sbb
in
sub
das
inc
jae
cmp
mov
dec
shlb
mov
lods
xchg
icebp
mov
inc
push
movsb
scas
lock
xchg
add
sti
dec
sub
loop
or
scas
jns
hlt
xor
mov
mov
popfw
imull
ds
pop
mov
stc
or
jmp
cmp
add
mov
cli
daa
pop
test
or
mov
mov
dec
shll
iretw
xlat
notb
repz
out
pop
mov
jnp
mov
pop
lods
in
push
mov
cmc
xchg
or
je
aad
jle
shlb
dec
xor
inc
add
and
fstpt
lods
cmpl
mov
mov
inc
mov
rcrb
cmp
push
and
adc
int
adc
mov
fistpl
mov
push
adc
clc
cli
lods
inc
or
lea
addr16
leave
daa
cmp
mov
cmp
add
push
outsl
add
out
mov
addr16
sub
cmp
sub
std
andb
jnp,pn
add
mov
cmp
push
enter
pusha
jo
stos
pusha
mov
inc
push
movsb
pop
mov
lret
inc
nop
bound
mov
fidivrs
jno
sti
cli
pop
and
icebp
xchg
inc
cmp
mov
xchg
scas
jbe
out
mov
sbb
sbb
push
in
dec
cs
gs
fmulp
cmp
mov
cmpsb
add
push
pop
outsb
insl
fwait
adc
xchg
stos
inc
int
int3
int3
int3
int3
int3
add
push
loopne
repnz
adc
rcrl
xchg
dec
movl
sub
mov
notb
xchg
in
xor
sbb
cli
cmpsl
push
jg
fsubs
loopne
mov
out
outsl
hlt
xor
sub
in
insl
ss
call
jbe,pn
icebp
jne
mov
and
flds
imul
inc
pusha
popa
xchg
fucom
mov
loopne
xor
jl
jo
mov
adc
andl
fdivl
mov
push
mov
xchg
enter
mov
fnstsw
mov
loop
cmpsl
fsubs
dec
mov
adc
std
movsb
lods
xor
mov
adc
mov
push
in
pop
add
ja
or
pop
daa
scas
es
add
mov
push
bound
mov
ja
and
out
pushf
mov
sbb
ja
mov
mov
add
or
test
mov
incl
mov
sbb
pop
mov
lea
add
sub
push
daa
mov
or
divl
roll
test
xor
mov
dec
out
dec
adc
xchg
xchg
jge
sub
push
setae
sbb
lret
hlt
xor
imul
push
push
mov
mov
shrl
mov
subb
gs
push
and
jne
mov
test
jg
imul
add
xor
jns
sub
loopne
ljmp
aaa
mov
lds
es
mov
and
jno
decl
outsl
out
cmp
mov
nop
les
cld
cli
xchg
xor
jg
ss
scas
jne
loope
fwait
repz
enter
xor
sahf
cs
sub
xchg
subb
adcb
repz
out
insl
dec
addr16
out
jns
in
in
mov
lods
dec
mov
ja
add
mov
push
xchg
jg
jg
sub
pop
cmp
pop
shlb
pop
and
out
sub
mov
in
dec
inc
loopne
dec
xchg
adc
sahf
add
test
lret
out
movsb
pusha
sbb
dec
jnp
shrb
sar
mov
fdivl
push
mov
inc
rcl
push
rclb
mov
or
lods
sbb
and
aam
xchg
fidivrs
jle
mov
or
mov
jns
into
jb
lret
mov
mov
outsl
xor
mov
cmp
adc
jmp
in
sub
sub
imul
jecxz
and
cmp
or
insl
lret
mov
rorl
and
test
jae
stos
popa
pop
dec
bound
arpl
lcall
jne
es
in
jbe
jge
sbb
and
jmp
jns
sub
jp
pop
add
sub
fwait
mov
pusha
lods
popa
adc
nop
xor
test
xchg
and
dec
jae
add
das
jg
add
jns
jne
and
pop
cmp
mov
xor
movsb
cmp
dec
push
test
push
scas
sub
mov
inc
mov
int3
int3
int3
and
adc
mov
lret
mov
pop
std
or
inc
jl
lods
xor
dec
addr16
sbbl
xchg
add
in
jle,pn
xchg
cwtl
scas
cmp
add
js
xor
mov
sub
fcoms
out
movsb
aam
dec
aad
mov
sbb
loopne
cmc
stos
jg
out
mov
mov
lcall
pop
es
insb
cmpsb
jne
jnp
loope
dec
inc
pop
fisubs
and
cmp
add
pop
dec
inc
or
loop
sbb
xchg
xchg
scas
int3
or
insl
test
xor
cmpsl
out
inc
or
pop
lods
stos
mov
xor
add
int3
inc
ret
jmp
pop
xchg
and
sbb
aam
cmpsl
fwait
and
in
cmpsb
sbb
mov
bound
xchg
add
sbb
dec
out
in
popa
int
add
xlat
xchg
movsl
mov
dec
lods
jnp
jbe
mov
cltd
xchg
and
push
sbb
loope
dec
and
jno
dec
push
insb
sbb
dec
in
xorb
jnp
test
shlb
mov
cltd
je
mov
jmp
test
xchg
and
push
push
pusha
jne
mov
loope
inc
mov
pop
repz
dec
mov
xchg
cwtl
sbb
mov
xchg
jle
cmp
jl
sbb
std
dec
es
int
adc
sub
cmp
or
sti
and
push
mov
mov
idivl
int3
int3
int3
loope
arpl
mov
xchg
mov
sub
adc
ljmp
push
pop
sub
dec
dec
shll
hlt
mov
int
aaa
inc
mov
adc
ret
test
mov
and
mov
shll
push
je
pop
push
mov
mov
cwtl
xor
cmp
xchg
ficompl
push
add
and
mov
and
andl
xor
sarb
test
and
inc
lcall
xor
test
bound
mov
mov
js
sub
aaa
adc
mov
jo
xor
mov
sbb
dec
rcrl
lret
lahf
rorl
adc
inc
xchg
cs
mov
mov
lock
fwait
inc
popf
and
mov
shll
xchg
adc
adc
fistpll
and
inc
or
push
ror
cmc
xor
push
cmp
sbb
imul
arpl
push
insb
and
adc
test
add
add
sub
pop
inc
pop
rolb
pop
cmp
or
mov
ja
test
add
mov
fs
rorl
cmp
out
sarb
sbb
xchg
fistpll
push
xor
push
negl
dec
cmp
fldt
push
cwtl
mov
subl
leave
dec
mov
inc
repz
lods
pop
fidivs
jmp
mov
aaa
jecxz
sbb
and
pop
jae
leave
mov
addr16
ljmp
mov
popa
outsb
sub
shll
in
cli
xchg
int3
repz
ret
jno
repnz
mov
sub
pop
insl
sbb
adc
push
test
add
insb
out
and
pop
sti
cmpsl
xchg
sbb
push
xchg
jg
rcrb
pavgb
notb
icebp
xchg
daa
or
fstpl
cwtl
negl
stc
rcrb
dec
jge
sub
popa
cwtl
pop
xor
repz
int3
int3
int3
int3
or
fiaddl
and
push
adc
pop
test
mov
ss
add
imul
mov
pop
mov
loope
mov
je
lds
xor
out
fnsave
popa
adc
loop
push
mov
in
jb
mov
xor
fbld
bound
mov
mov
idivl
mov
cmp
push
lods
in
dec
cmp
lcall
dec
xchg
notb
test
mov
out
cmp
mov
int
shrl
jg
cwtl
insl
push
sub
div
aam
int3
loopne
popf
sub
xchg
jbe
sar
and
ja
mov
fsubl
out
test
sbbb
daa
pop
or
mov
std
jp
fnstenv
add
lahf
xchg
inc
popa
ret
ret
sbb
sbb
mov
and
add
sbb
test
mov
mov
ss
mov
ja
xor
incb
cmp
and
push
xchg
lahf
push
lret
test
stc
push
in
data16
dec
jno
xor
sub
jl
and
push
jmp
add
xchg
pop
mov
xchg
mov
mov
push
mov
xchg
cmp
adc
sub
xchg
mov
loope
out
pop
faddl
push
fdivrp
inc
sbb
shr
scas
out
es
sbb
jmp
movsb
lcall
outsb
lcall
add
cmp
shr
push
xchg
xchg
add
fisubrl
mov
jne
repnz
cld
and
in
mov
xchg
ret
push
xor
jbe
dec
mov
push
in
sub
pushl
or
loopne,pn
iret
or
add
mov
push
adc
aas
add
subl
scas
out
movsl
fwait
popf
adc
xchg
popf
or
push
push
dec
jo
xchg
dec
lock
fmuls
aaa
and
adc
arpl
sbb
dec
imul
int3
int3
int3
jo
inc
in
in
and
aas
cmp
xchg
lcall
std
jns
iret
adc
lret
call
movsb
push
fists
cmp
clc
jns
jns
inc
nop
or
testl
pop
lods
push
orl
dec
mov
pop
clts
cmp
xor
in
xchg
sub
outsb
ja
das
addb
xor
fwait
lds
push
jo
imulb
push
adc
adc
imul
adc
mov
lods
subb
lcall
mov
dec
femms
adc
xor
xor
test
xchg
sbb
xor
shll
sbbb
aaa
push
fistl
dec
jnp
test
mov
mov
pop
sbb
mov
sbb
fldt
xchg
xor
or
dec
or
sub
inc
fs
adc
sub
aad
xor
fistpll
pop
push
shl
fst
dec
loop
mov
cmp
jnp
cmp
movsb
popa
rcr
xchg
xor
pop
push
stos
add
mov
pop
inc
gs
sub
adc
out
inc
mov
rolb
mov
loop
add
sub
cld
push
pop
pop
stc
cli
add
aaa
sub
add
jmp
pop
shlb
adc
pop
xchg
xchg
fwait
mov
jb
xchg
sbbb
adc
and
jmp
push
stc
mov
inc
aad
and
sbb
sub
and
mov
adc
adc
inc
lcall
addr16
call
push
inc
lret
pop
jp
cld
adc
push
not
mov
bound
xlat
sti
orl
add
lcall
cmp
nop
jno
or
jb
fldt
sbb
int3
int3
int3
int3
int3
dec
daa
or
and
xchg
push
outsb
cs
cltd
inc
or
loop
cmc
into
idiv
mov
push
xor
ret
cltd
push
dec
adc
in
push
fisubrl
sub
enter
ja
dec
stc
jb
inc
popf
mov
and
lcall
adc
jp
int
sub
bound
int3
test
sub
popf
imull
popa
popf
pop
ss
adc
mov
jmp
cltd
inc
rcll
orl
mov
xchg
add
dec
popa
cwtl
cmp
test
lds
or
dec
sbb
jg
pop
mov
pop
inc
add
xchg
sahf
imul
lret
inc
inc
enter
lea
into
les
adc
inc
not
inc
jns
enter
pop
scas
xchg
and
inc
repz
adc
cwtl
inc
add
stos
dec
lds
mov
popa
push
loope
sub
int3
int3
xor
adc
pop
mov
lock
xlat
dec
test
ret
clc
pop
jnp
push
inc
and
pop
mov
dec
pop
ret
hlt
lcall
pop
aam
cmpb
jne
gs
cmp
pop
shlb
cmp
sbb
mov
cmp
lock
mov
sbb
adc
jp
mov
xor
add
sub
daa
mov
jl
les
inc
std
fisttpll
push
mov
bound
push
and
push
dec
mov
je
cmp
aad
icebp
sbb
inc
dec
add
gs
ss
jae
push
aaa
arpl
fistpl
mov
jecxz
mov
imul
xor
push
xchg
in
repz
in
out
ss
les
aaa
insb
cmp
push
cmp
in
mov
lret
cltd
or
enter
in
aam
les
sub
xchg
shrb
das
jbe
rorl
jecxz
fdivs
lods
pop
out
cltd
and
xor
and
ds
leave
das
lock
mov
insb
mov
movsb
les
cltd
int3
int3
int3
int3
int3
xchg
adc
cmp
pop
out
jg
adc
aad
je
mov
jo
movsb
pop
cmc
jbe
cmp
xlat
cmpl
orb
mov
loop
popa
or
ds
sub
out
les
jae
sbb
insb
cmp
sti
test
or
push
in
imul
lods
jmp
adc
add
out
fsubs
lods
lods
shlb
push
pop
and
icebp
rclb
out
mov
mov
lcall
adc
stc
push
lock
insl
add
push
sbb
or
hlt
xor
repz
xlat
sar
je
js
jmp
jle
and
mov
iret
push
scas
mov
dec
dec
mov
insl
mov
adc
pop
int3
int3
int3
int3
int3
inc
inc
sub
aas
push
sub
sti
sbb
test
subl
mov
and
sub
pop
fstl
pusha
push
stos
xor
repz
jg
ja
cwtl
push
pusha
cmp
adc
pmulhuw
ret
push
mov
imul
daa
and
add
lcall
shlb
or
add
mov
jp
pop
aam
pop
pop
add
mov
sbb
out
inc
adc
jbe
jge
lahf
out
clc
out
lahf
inc
sub
ret
inc
jecxz
sbb
insb
imul
popf
lock
xor
sub
lcall
xor
clc
scas
push
adc
inc
hlt
pop
mov
mov
adc
push
fnstenv
out
icebp
sti
pop
int
pop
sub
xor
fsubrs
jo
out
mov
test
push
shll
sub
push
in
ds
stc
sbb
pop
adc
mov
mov
cld
stos
mov
lahf
mov
and
push
push
and
mov
jecxz
mov
pop
xor
xchg
sbb
jne
mov
sbb
xor
sub
fldcw
inc
pop
fldenv
aad
cmpsb
pop
inc
cli
mov
or
mov
dec
fcoml
outsb
mov
pop
pushf
dec
sarb
and
stc
sub
es
int3
int3
int3
jb
test
out
insb
jp
daa
adc
cmp
outsb
mov
mov
data16
das
jp
mov
jge
pop
scas
std
iret
mov
sti
inc
cmp
pop
stc
xchg
arpl
xor
adc
or
jmp
push
jp
sarb
ss
push
sub
shrl
mov
sub
cmc
mov
lods
out
ror
sub
inc
push
rolb
mov
inc
cli
jo
jno
jle
xor
push
xor
out
mov
xor
add
clc
jb
fisttps
pop
and
xchg
sbb
aad
clc
or
mov
xor
roll
push
inc
sub
sub
lret
ret
es
xchg
pop
lea
cmp
shl
ds
jge
in
adc
rcll
sub
orl
cmpsb
pop
insb
cmp
push
jmp
loopne
rcrb
mov
out
jge
out
jmp
cld
frndint
lods
adc
enter
in
pop
sti
ss
faddl
and
test
lahf
mov
loopne
xchg
pop
ficompl
cmp
movsl
jl
or
pusha
jae
adc
jle
mov
cmp
and
jecxz
insb
inc
cltd
repnz
sub
or
mov
mov
cmpsb
lret
dec
movsb
xor
leave
outsl
repz
das
and
push
jo
and
dec
inc
and
rcrb
cmp
jb
out
sub
adc
movsl
pop
fdivrs
in
jmp
mov
jl
subl
jo
test
pushf
into
mov
lods
popf
pop
sub
stos
cmpsl
adc
mov
lret
ror
ja
iret
aam
push
scas
mov
repnz
repz
call
scas
push
adc
mov
xor
adc
dec
lods
addr16
jns
cmpsl
cli
aaa
bound
push
sub
cs
mov
lret
mov
sub
mov
push
xor
daa
inc
fdivrl
cmp
fs
iret
cmp
roll
das
idiv
out
mov
insl
mov
out
sbb
jne
arpl
xlat
sarl
fisubrl
pushf
cld
mov
adc
fistpll
pop
dec
testl
ret
push
ja
in
dec
mov
xorl
addl
imulb
xor
cmc
jnp
hlt
xlat
daa
wbinvd
sbb
sarb
xchg
sub
inc
inc
jae
adcl
mov
std
xor
or
cmp
cli
sub
xchg
mov
faddl
mov
testl
mov
push
jecxz
out
and
jnp
je
jb
or
insl
adc
mov
je
rcll
je
loop
cmp
std
mov
js
dec
add
jae
js
mov
jbe
loop
pop
lods
in
arpl
pop
push
cmp
shrb
mov
movsl
jo
das
rcl
aam
shlb
add
iret
or
pop
flds
pop
test
sub
fnstcw
fmul
gs
rcl
repnz
dec
fstp
sbb
sub
das
inc
inc
jbe
lret
mov
xchg
outsl
fwait
push
xor
mov
fcmovne
jbe
int3
int3
dec
je
loop
adc
loopne
shrl
cmpsl
fucomi
mov
sarb
lods
ljmp
hlt
jne
mov
jne
dec
popa
fwait
insb
inc
xchg
mov
fiadds
jo
sti
in
lret
sti
daa
pop
enter
insl
and
mov
fldt
insb
stos
fildll
ds
pusha
xchg
divl
fdivr
mov
neg
movsl
lcall
fwait
clc
mov
mov
mov
cmp
mov
push
jb
dec
cs
xor
jne
cmpsl
scas
incl
jae
fldt
outsl
pop
cli
in
sti
dec
mov
aad
mov
ss
jnp
pushf
decb
pop
mov
lcall
xor
push
imul
dec
lahf
push
push
shrl
ret
xor
addr16
popa
sbb
loope
jmp
xor
push
je
mov
adc
dec
call
fcoms
sub
test
sarl
xchg
jns
dec
cwtl
cmpsb
cs
stos
xchg
mov
jno
ret
dec
es
sti
mov
jp
popa
pop
lods
outsb
js
jl
int3
adc
lcall
mov
addl
fs
movsl
test
dec
adc
out
mov
mov
sbbb
outsl
add
cwtl
pop
xor
decl
mov
roll
xor
mov
push
ret
pop
sub
das
jg
sbb
hlt
xor
adc
and
push
sti
xor
xchg
bound
and
clc
ljmp
mov
aam
cmp
adc
pop
push
xchg
mov
stos
and
xor
push
scas
das
add
icebp
push
fldl
xchg
jl
xor
and
cmpl
loope
jnp
in
sahf
lds
into
div
mov
in
mov
iret
rorl
jb
xlat
cs
stos
pop
sub
dec
sub
mov
pop
not
mov
in
push
cld
xor
xor
es
adc
push
mov
pop
insl
in
adc
fisttpll
cmpsl
pop
cmp
insl
bound
lock
les
pusha
hlt
fsubrl
dec
imulb
pop
cld
xor
and
incb
and
call
test
movb
int3
int3
int3
clc
inc
jmp
pop
push
pop
fnsave
pop
and
jmp
testl
xchg
cmc
imul
dec
mov
ja
cld
xchg
fdiv
xor
pop
pop
push
aam
fwait
xchg
cmpsb
mov
and
push
dec
into
bound
ljmp
cwtl
pop
cmp
mov
das
push
push
in
gs
adc
hlt
outsl
punpckhwd
mov
shlb
pop
adc
cs
mov
cmp
arpl
xchg
pop
xor
scas
icebp
jge
push
arpl
pop
sbb
dec
mov
enter
jae
and
jne
xor
pop
ja
dec
pop
jne
and
pop
inc
aam
xor
sub
cmp
xlat
inc
outsl
lahf
or
nop
dec
imul
jle
or
es
mov
push
pop
jbe
adc
xchg
mov
jmp
jmp
out
dec
pop
mov
sub
sbb
mov
jp
aam
inc
mov
lcall
inc
inc
mov
js
js
jb
dec
scas
rolb
nop
dec
stos
loope
push
pop
movsb
ss
xchg
cwtl
jg
cmpsb
iret
and
aas
repz
pop
out
lods
dec
push
jno
push
call
cs
leave
and
cltd
jae
je
fwait
jle
into
mov
cli
rcr
or
mov
ss
cli
adc
pop
insl
and
mov
push
pop
dec
add
jb
pop
or
mov
out
push
mov
lods
xchg
dec
xor
ret
pop
jp
ror
je
dec
push
dec
jmp
out
mov
lods
inc
imul
repz
jae
je
push
imul
fstpt
imul
pop
pop
shlb
cmp
sbb
jl
ss
das
in
pop
ficoms
add
mov
clc
push
sarl
xchg
in
push
sti
push
mov
in
testl
inc
fdivrp
jecxz
pop
nop
mov
hlt
out
subb
inc
xor
fstps
xor
jmp
inc
push
sbb
sub
dec
mov
testl
xchg
or
inc
push
xor
shll
jnp
pop
sbb
leave
in
test
cld
neg
imul
arpl
imul
mov
and
inc
mov
mov
push
stc
push
cmp
sub
mov
jbe
inc
sub
pop
movsl
shlb
inc
mov
xor
cmp
sbb
jl
fstl
mov
pusha
xor
fsubl
pushf
xchg
out
stos
push
ds
and
inc
jecxz
mov
cltd
mov
iret
mov
int3
cltd
mov
shlb
scas
insl
lcall
and
jmp
test
sbb
jecxz
inc
shrl
outsl
sub
popf
mov
popf
inc
jae
stos
jnp
call
xor
xchg
fst
dec
pop
jne
inc
cmp
sbb
pop
jno
test
mov
mov
addl
ljmp
mov
mov
inc
aam
icebp
lahf
gs
in
and
pop
leave
lock
push
fwait
push
fstl
xchg
aas
loope
push
arpl
dec
enter
jne
adc
lret
dec
sahf
orb
in
mov
test
mov
out
fnstsw
xor
lcall
out
cmc
fmuls
nop
dec
je
or
shr
outsl
jne
add
scas
push
xor
popa
fimuls
in
push
lret
jl
loopne
cmpb
sub
inc
mov
cmp
cmc
outsl
jns
popa
or
test
push
andl
xor
or
ds
dec
lcall
cmp
daa
inc
sub
popf
push
cwtl
jl
sbbl
enter
sbb
aad
pop
push
repz
rcrl
je
inc
dec
ds
arpl
jmp
pop
add
lret
lods
adc
jmp
sub
jg
mov
lahf
jo
inc
out
add
xchg
std
sub
xor
je
pop
shl
push
push
iret
push
fists
std
mov
xchg
inc
jb
movsl
divb
or
out
xchg
adc
mov
iret
pop
lcall
xchg
xchg
and
cmp
xor
or
cli
fstpl
sbb
add
aad
xchg
lret
sbb
inc
lods
sub
movsl
outsl
mov
mov
ss
lret
and
popf
sub
arpl
jge
xchg
testl
cmp
mov
pop
push
test
test
sub
inc
mov
jmp
arpl
xor
add
xor
cmp
jg
jg
cmc
std
pushf
scas
mov
mov
test
or
mov
pop
push
rolb
fmuls
lcall
dec
or
and
cmp
movsl
xchg
push
in
mov
out
mov
push
add
notl
sub
xchg
ljmp
mov
sbb
in
test
dec
pop
jle
and
add
pop
inc
add
insb
inc
ficoml
mov
push
sar
and
or
mov
int3
icebp
push
jae
push
ret
dec
orl
lahf
add
in
push
aaa
icebp
jns
or
test
int
ja
mov
icebp
adc
mov
and
mov
decl
es
and
sbb
mov
adc
sahf
sub
mov
mov
mov
gs
or
sbb
push
dec
js
push
fs
loop
mov
sbb
outsl
mov
jl
sub
mov
jle
inc
nop
xor
push
pop
mov
andb
jge
subl
cwtl
xchg
jle
cmpsl
lret
sbb
and
xor
sbb
lods
ja
repnz
int3
int3
int3
int3
int3
clc
cmpsb
out
jne
xchg
xchg
repnz
inc
in
dec
inc
sbb
sub
xor
xchg
push
or
add
fldenv
xchg
jnp
sub
or
bound
das
in
sbb
cmp
std
add
mov
test
add
cmpsl
dec
mov
add
pop
pushf
flds
lcall
icebp
push
jl
ljmp
mov
mov
cmp
in
adc
loop
xchg
daa
notl
stos
cmp
sbb
sbb
sbb
lods
sub
cli
or
bound
xlat
inc
push
out
mov
mov
pop
mov
into
gs
dec
icebp
cwtl
add
cmpsb
add
push
jnp
pop
shll
xor
aas
sbb
or
or
jp
sbb
dec
adc
dec
cmc
sub
lret
cmpsb
push
shrl
pop
hlt
or
ret
dec
mov
mov
push
repz
jbe
scas
mov
push
imul
jg
or
push
sub
fwait
sbb
lea
sub
push
lock
adc
lret
fadds
cwtl
out
push
aad
inc
pop
push
bnd
jmp
popa
arpl
xchg
ds
mov
in
and
cmp
cmpl
pop
mov
or
adc
stos
sahf
enter
cld
mov
sbb
sbb
sbb
inc
test
int3
int3
int3
int3
cmp
adc
aam
xchg
fwait
xor
fidivrs
push
cld
ret
dec
dec
pop
leave
aaa
mov
xchg
movsl
mov
pop
push
lret
xor
out
addb
or
inc
leave
repnz
int3
int3
pop
add
mov
jge
dec
or
loope
adc
stos
inc
outsb
xorb
mov
jnp
mov
and
pusha
int3
cli
divb
sub
mov
out
mov
and
lock
dec
repnz
fsubrs
mov
add
popa
test
mov
int
and
pop
outsb
mov
mov
mov
mov
jnp
sbb
js
mov
xor
enter
out
ret
insb
pop
xchg
inc
jecxz
dec
sub
dec
mov
sarl
pop
movb
mov
sub
cmp
pusha
mov
mov
gs
bound
stos
lea
inc
out
or
in
sbb
pop
leave
mov
xchg
fidivrs
lahf
sar
and
cmpsb
push
mov
popf
aaa
sbb
cmp
or
aam
or
stc
rep
pop
pop
popa
fistpl
iret
lds
mov
icebp
sub
mov
jecxz
daa
push
jo
bound
xchg
push
jmp
enter
inc
outsb
mov
adc
inc
arpl
fnstcw
imull
add
rclb
xor
push
shll
fcompl
push
aaa
dec
aas
out
stos
fistps
mov
and
subb
call
adc
pusha
inc
out
fwait
mov
paddusb
call
jne
jbe
fisubl
repnz
adc
test
je
hlt
enter
pop
sub
cmp
xchg
out
jns
repnz
mov
lret
jecxz
mov
movsl
push
jbe
mov
xchg
shll
repz
jecxz
pop
arpl
cmp
push
dec
add
inc
lahf
es
jl
rcll
jnp
rcr
fs
mov
xor
jge
gs
jg
push
sti
stc
or
outsb
jp
fnsave
mov
mov
fs
jl
sub
mov
adc
pop
push
ss
mov
insl
in
mov
repz
xchg
mov
sbb
fdivr
pop
cmpsb
lock
filds
movb
imul
lcall
roll
rolb
roll
data16
insb
mov
dec
cmc
nop
gs
xchg
pushf
mov
imul
xor
mov
mov
shll
jmp
jecxz
cmpsl
jl
testb
push
add
or
xchg
or
les
lcall
iret
or
shlb
dec
or
hlt
mov
xchg
loopne
sbb
mov
push
sbb
add
addr16
loop
fisubs
add
pop
xor
hlt
dec
fnstsw
pop
test
pop
insl
xor
in
inc
sub
roll
jl
aaa
mov
in
xchg
mov
lea
mov
stos
rcr
jo
and
push
inc
xor
mov
push
inc
fistpll
inc
fldln2
cltd
jmp
push
test
cmp
iret
cwtl
pop
mov
dec
imul
arpl
daa
jp
ss
mov
jns
sub
imul
cmp
xorb
sub
dec
and
int3
int3
int3
inc
xchg
out
das
in
inc
xor
mov
jo
orb
jl
inc
divb
test
pop
das
add
sarb
sahf
cli
mov
mov
pop
fcoms
adc
movsb
pop
jmp
gs
sbb
scas
ret
jbe
push
mov
xor
inc
into
cmc
sarl
sbb
adc
hlt
cwtl
fnstenv
in
out
addr16
fwait
clc
jbe
and
mov
or
push
notl
or
jne
out
sbb
and
cmpl
arpl
mov
imul
test
push
gs
scas
add
adc
iret
lods
cmp
clc
xchg
xor
jne
xlat
mov
cwtl
sahf
add
sbb
fldenv
cmp
sub
cmp
and
ret
int3
int3
int3
or
push
repnz
add
xor
mov
shrb
out
push
je
mov
mov
testb
cli
pop
xchg
jno
mov
imul
daa
and
out
push
inc
mov
incl
sbb
rclb
xor
test
cltd
lods
mov
jmp
fisubs
or
std
xchg
bound
add
aas
hlt
xchg
mov
int3
adc
lock
leave
xchg
mov
add
adc
popa
jne
or
sbb
add
dec
addr16
mov
dec
mov
pusha
and
add
sub
repz
cmp
cmp
mulb
daa
pminsw
mov
adc
xor
pop
adc
sbb
push
int3
int3
int3
or
adc
jbe
bound
rcll
lock
pop
jns
fdivrl
sbb
in
adc
lret
jne
aas
mov
push
xchg
movsl
cwtl
pop
sub
mov
jnp
lret
imul
pop
sub
adc
lock
out
test
jge
std
roll
mov
sbb
cmp
mov
lods
xlat
ficoms
rcr
mov
lret
cmp
stos
xchg
mov
std
pop
pop
adc
fstpt
sbb
mov
in
xchg
jecxz
divl
cmpsl
cmp
xor
add
mov
inc
and
xchg
enter
jp
test
imul
gs
js
cwtl
cmc
pop
stc
movsl
ret
inc
mov
jge
aaa
adc
mov
and
notl
adc
fmuls
loopne
push
cwtl
pop
orb
mov
mov
add
mov
mov
sahf
rorb
jge
mov
fwait
mov
xor
jmp
les
and
out
outsb
mov
outsb
cltd
mov
mov
ja
xor
loopne
jnp
fbld
fiadds
fisubrl
xchg
xor
jmp
int3
mov
mov
add
in
nop
push
sbb
aas
mov
sub
push
xor
cmp
shlb
mov
data16
cmp
pop
xchg
fstpt
popa
jb
outsb
arpl
cmp
enter
lahf
fbstp
and
adc
and
xchg
mov
js
xchg
out
or
inc
fistl
popa
and
jb
pop
sub
push
push
fidivl
pop
add
push
int
lods
dec
cmpl
mov
jle
or
dec
sub
lahf
mov
je
in
call
dec
cwtl
cmp
jae
inc
xor
imulb
insb
hlt
xlat
pushf
sub
inc
xchg
lods
nop
rcr
or
das
pop
jbe,pt
dec
add
scas
lods
xor
outsl
lret
pop
push
push
push
push
incl
testb
mov
mov
iret
lret
inc
add
pop
insb
push
fwait
daa
aam
and
adc
ret
jo
cmpsl
add
adc
cmp
sub
orb
stc
or
fwait
inc
adc
test
cmpb
mov
pop
mov
mov
inc
fmull
sbb
push
xchg
jmp
pop
test
out
mov
popl
into
inc
mov
sbbb
adc
cmp
mov
sbbl
aad
lahf
es
dec
cltd
mov
dec
ret
pop
and
sub
jmp
push
leave
jb
icebp
inc
push
push
sahf
cltd
in
mov
icebp
push
pusha
adc
loop
dec
sbb
arpl
lcall
sub
inc
push
inc
xchg
dec
push
and
xor
xchg
sbb
insb
enter
fldt
fldenv
push
or
pop
jmp
cmp
jno
pop
out
je
pop
sbb
out
push
pusha
pop
dec
or
mov
ror
xchg
in
rcl
ret
shll
fisubrs
ret
add
xor
pop
lcall
pop
cmc
mov
ret
sti
sub
mov
iret
push
pop
cmp
and
push
push
data16
shrl
stos
push
sti
pop
test
aad
push
pop
dec
cmp
lods
sub
inc
add
les
int3
int3
int3
int3
adc
cmp
das
lahf
xchg
adc
ss
lret
rclb
int3
int3
cs
insb
es
dec
jge
sarl
push
lret
add
sub
test
out
stc
in
cs
xchg
xor
jmp
xor
mov
mov
lcall
dec
repz
sub
cmp
insb
lret
fldenv
add
inc
sti
jp
cltd
dec
add
decl
arpl
add
inc
adc
loopne
sbb
sbb
lock
cwtl
sbb
scas
psllq
xlat
or
test
fwait
imul
insl
cmc
popf
jns
mov
cmpsb
dec
xchg
xor
aam
inc
arpl
insl
add
add
imul
outsl
lock
mov
cmp
ret
push
jnp
mov
sbb
mulb
mov
sbbb
xchg
fwait
out
loopne
addr16
enter
imul
dec
push
push
inc
insb
add
test
pop
and
dec
out
inc
out
inc
adc
loope
cmp
pop
mov
push
cmp
test
testl
pop
add
stos
js
and
inc
pop
ficompl
mov
sahf
dec
in
cmp
pop
shll
rcll
fistpl
sbb
add
fmuls
pop
cmp
out
sahf
push
into
add
sbb
lcall
lock
push
or
ret
dec
pop
or
nop
sub
out
push
aam
pop
jns
or
inc
ficomps
mov
or
inc
jb
sbb
inc
jno
sbb
in
inc
and
inc
and
and
or
dec
les
inc
mov
ss
cmp
movsl
jmp
cmp
pop
filds
jno
out
rorl
xor
int3
int3
int3
inc
push
jg
pop
cmpsb
frstor
or
jb
rcrl
push
pop
mov
ror
cltd
mov
xchg
sub
adc
cmp
sbb
js
cs
xchg
repnz
adc
mov
xchg
add
sti
mov
sbb
popf
incl
filds
addb
dec
scas
dec
sub
repnz
add
loop
push
clc
out
icebp
inc
popl
je
adc
stos
mov
adc
jo
mov
push
jns
xlat
scas
loope
sub
jbe
cmpsb
or
imul
push
mov
cltd
jmp
out
leave
popf
push
ret
inc
test
in
ret
jae
pop
push
nop
and
outsl
mov
ret
lahf
stc
clc
mov
icebp
in
std
sub
mov
jmp
out
fnstenv
add
xor
lret
fs
icebp
cmp
int3
int3
int3
int3
fimuls
faddp
fs
xor
cwtl
xchg
cmpsl
mov
out
push
jmp
mov
arpl
fwait
mov
std
and
jno
mov
ret
mov
pop
push
and
push
jp
mov
imul
mov
iret
shl
dec
dec
mov
lret
inc
lahf
enter
cmp
sbb
sub
push
mov
out
xor
push
push
adc
ret
push
sbb
push
xor
push
not
adc
cmc
sub
dec
stc
or
mov
pop
ror
sbb
test
arpl
push
push
subl
mov
fwait
xchg
ss
jb
or
mov
call
int3
in
mov
out
insl
iret
cmc
adc
fcomps
xchg
popf
mov
in
inc
les
or
jns
int
adc
mov
jmp
sub
inc
iret
int3
imul
fstpt
jmp
mov
pop
iret
xchg
scas
repz
mov
inc
loop
fdivp
or
mov
scas
mov
std
popa
xor
cmc
pop
mov
flds
imul
test
adc
inc
lahf
insl
adc
test
jbe
daa
fadd
sbb
xlat
movl
flds
stos
push
ljmp
mov
addr16
mov
add
ret
sbb
pusha
int
push
or
rol
cltd
out
add
stos
inc
or
xchg
inc
mov
pop
xor
add
lea
fcmovu
fisttpll
xchg
bound
sub
sahf
xchg
imul
ret
xor
cli
fucomi
add
push
adc
pushf
sbb
mov
xor
lret
mov
dec
mov
idiv
es
leave
sbb
cmp
pop
insb
inc
ljmp
mov
dec
call
cmp
xchg
rorl
push
insl
mov
rcr
mov
xchg
jecxz
jmp
pop
mov
fsubp
push
xor
jns
sbb
int3
int3
int3
int3
push
jecxz
xchg
add
fadds
mov
push
ja
dec
movsb
push
add
and
push
xor
jmp
ret
scas
adc
xchg
jae
clc
sub
pop
adc
mov
fucomp
fs
dec
push
cmp
mov
dec
mov
sub
aaa
mov
in
inc
cmp
xchg
xchg
jecxz
aas
sub
or
lret
push
inc
lock
cltd
mov
push
push
cmp
lods
jae
das
arpl
sarl
fwait
pop
jmp
mov
dec
push
sbb
roll
testl
pop
test
fnstsw
and
lods
leave
mov
ret
loop
std
xchg
lods
nop
shr
dec
mov
push
adc
mov
xchg
adcl
cs
andl
jno
sbb
fsts
lock
xchg
icebp
cs
sbb
mov
f2xm1
jge
fcoml
dec
add
cwtl
test
in
jecxz
dec
mov
repz
sbb
adc
insl
mov
adc
sub
xchg
loope
fs
pop
mov
out
xchg
or
shll
xor
add
sbb
push
fcoms
push
inc
xchg
mov
mov
decb
mov
xlat
cs
shrl
aaa
inc
ja
inc
pop
adc
xchg
mov
testl
call
dec
mov
pop
xor
push
mov
aad
cwtl
lret
add
inc
mov
jmp
call
xchg
add
bound
dec
aaa
dec
cmp
and
out
jmp
test
lock
mov
push
push
faddl
sar
mov
pop
dec
and
mov
ljmp
sub
sbb
jmp
jg
lods
dec
fisubs
pop
lods
pop
jne
divl
or
ja
ss
inc
aaa
xor
inc
pop
mov
iret
ret
mov
test
dec
sti
mov
out
repz
outsl
bound
mov
lcall
or
ds
out
cmpsl
dec
pushf
int3
lods
pop
push
or
cmp
push
repz
out
xchg
ret
mov
cmp
into
mov
adc
add
lods
cltd
loop
mov
pop
outsb
dec
sbb
cmp
popa
ds
je
in
jmp
loop
mov
or
lret
jb
movsb
lret
push
jnp
xorl
and
mov
pop
in
imull
dec
cmp
bound
dec
aaa
fcoms
inc
cli
xchg
cwtl
loopne
sub
push
test
pop
test
jg
mov
fsubr
mov
sub
sbb
mov
dec
ret
inc
test
shr
pop
inc
movsl
or
fsubs
shrl
cmp
inc
leave
and
out
int
lock
push
jne
xchg
rolb
xchg
lret
jb
cld
mov
fistl
dec
cltd
adc
aam
cmpsl
stos
sbb
daa
dec
mov
out
jg
add
incl
cmp
mov
mov
inc
movsl
int3
int3
int3
vrcpss
loope
push
sbb
pushf
pop
add
add
mov
dec
mov
push
lcall
sub
ret
stos
sub
scas
lahf
out
add
add
sbb
pop
jecxz
out
push
or
pop
lcall
outsl
adc
fcomi
pop
xchg
fists
mov
lret
mov
sbb
sbb
sbb
aad
mov
mov
cmc
cmp
lods
iret
mov
pop
jg
or
pop
inc
push
daa
fcompl
test
stos
decl
not
sbb
or
add
hlt
xchg
inc
mov
inc
push
into
sbb
xor
add
pop
mov
sbb
xchg
mov
loope
sub
mov
dec
clc
aaa
stos
daa
ljmp
push
sbb
xlat
jecxz
shl
loope
gs
imul
stos
rorb
xor
jp
inc
and
add
loopne
push
sub
pop
dec
xlat
iret
fsubs
cmpl
fistpl
mov
cmp
mov
pop
dec
sahf
mov
cmc
dec
or
adc
lret
push
pop
jp
mov
ss
or
lret
push
outsb
fiaddl
in
shlb
lret
call
lcall
cwtl
cld
mov
cwtl
add
pop
sbb
movsb
fsub
adc
scas
mov
sub
xchg
les
mov
cmp
test
adc
push
fwait
push
fs
sarb
pop
fiadds
add
xchg
adc
outsl
mov
adc
sbb
divl
sub
mov
mov
subl
fmul
inc
cmp
pushl
fldcw
add
ror
fs
in
or
leave
jbe
fwait
lret
push
lods
or
testb
mov
int
adc
jns
aad
jecxz
pop
xchg
push
adc
test
xor
lret
js
sub
int3
stc
imul
lods
inc
pop
test
and
out
add
nop
xor
test
sub
pop
mov
or
mov
mov
in
pushf
in
call
mov
xchg
repnz
subl
inc
xor
jmp
cs
scas
pop
shr
lods
sub
lahf
fidivrl
mov
sbb
into
test
jno
xchg
repz
outsb
es
shr
cmpsb
push
mov
jno
push
and
mov
and
aam
xor
cli
cmp
fistpll
or
cwtl
pop
rolb
cmp
jmp
cmp
sbb
jnp
jo
lcall
pushf
push
insl
sbb
or
rclb
fwait
cld
int3
int3
int3
int3
int3
das
lods
lcall
inc
icebp
jno
mov
pushl
bound
pop
fisubs
mov
mov
mov
into
int3
insb
cwtl
mov
xor
shrl
sub
ljmp
iretw
sbb
cmpsl
mov
adc
loopne
out
xchg
pop
ljmp
sub
pop
xchg
out
push
loopne
and
jae
push
inc
pop
stos
js
xor
mov
mov
ljmp
and
inc
pop
fisttpl
adc
lahf
sub
pop
mov
pop
adc
inc
in
push
xchg
lret
add
dec
popf
inc
and
sbb
jmp
lods
or
and
movsb
mov
mov
cmp
jg
cmpsl
subl
mov
mov
aas
mov
stc
cmp
int3
mov
es
dec
test
sbb
inc
lea
push
lea
jg
sbb
popf
fwait
add
add
les
iret
cs
mov
mov
test
bound
mov
pushl
sbb
aam
mov
leave
pop
xchg
testl
cmc
mov
les
jns
xchg
jnp
push
shrb
xor
fimuls
dec
scas
inc
inc
popa
int
pop
push
pop
sahf
inc
ljmp
int3
int3
int3
int3
lea
pop
add
push
inc
xchg
push
dec
dec
jg
mov
enter
aas
mul
mov
out
push
or
xchg
fdivl
shlb
cld
sub
ja
ret
add
dec
cmc
hlt
xchg
dec
inc
rcr
fisubl
dec
and
sahf
xor
ljmp
inc
std
pushf
sub
fisttpl
jo
xchg
push
std
je
rorb
call
lods
std
shlb
sbb
neg
fcompl
or
out
das
mov
pop
mov
xor
jp
and
push
sbb
arpl
pushf
in
jne
dec
shll
and
jns
pop
jecxz
lods
lret
cltd
jno
mov
lret
test
push
sub
data16
and
sbb
fbld
mov
mov
aam
ds
sahf
bound
adc
jbe
pop
xchg
mov
sbb
lods
insl
lods
cmp
repz
dec
lea
sub
out
push
rolb
mov
or
out
xor
xor
stc
rcrb
inc
cli
xchg
inc
xchg
jmp
sub
jge
outsb
pop
dec
fbstp
dec
cmp
out
sbb
or
inc
push
xchg
in
sbb
xor
fdivl
inc
int3
shlb
adc
daa
js
outsb
out
pop
inc
rcl
mov
mov
into
andb
inc
jp
das
orl
cmp
int3
dec
sub
outsb
pop
mov
inc
fidivrl
stc
test
pop
push
jge
push
add
mov
add
pop
cmc
add
lock
out
gs
add
cmp
cli
inc
outsl
daa
ret
sub
cmpsl
add
pop
pop
int
mov
in
movsb
add
jp
out
test
mov
enter
pop
fldcw
outsb
sbb
hlt
xor
aaa
dec
lods
cmc
mov
mov
iret
sub
aad
fistps
cmp
pusha
test
push
mov
xchg
add
shrl
and
sbb
sub
int
icebp
loope
addr16
jns
scas
add
movsl
pop
add
and
adc
sbb
pop
je
push
movsl
cld
aaa
xchg
gs
adc
addr16
cmp
cli
ret
or
pop
outsl
sub
popf
mov
jmp
adc
cld
hlt
pop
and
fwait
add
or
repnz
mov
jmp
or
loop
arpl
xlat
aaa
push
push
pop
fisttps
cwtl
cmp
dec
or
or
shrl
mov
sub
lea
rorl
inc
daa
pop
rcl
pop
mov
arpl
push
test
sti
inc
clc
cmpb
mov
push
pop
or
mov
pop
lret
push
pushl
dec
jecxz
lahf
mov
aaa
movsb
add
and
rorb
orl
xchg
add
mov
cmp
addr16
jmpw
orl
mov
daa
adc
lods
sbbl
mov
adc
pop
sbb
negb
lret
xor
push
dec
add
xor
fstl
mov
mov
cmp
sbb
test
xor
cli
pusha
lahf
jmp
das
or
call
lea
push
cmc
jg
jns
cld
scas
mov
lea
mov
out
fisttpll
test
sub
int3
int3
int3
int3
int3
lahf
jno
and
dec
cmp
mov
lcall
adc
dec
icebp
sbb
push
fisttpl
fidivs
inc
lret
jno
fdiv
inc
xor
lds
mov
stos
mov
nop
mov
fiaddl
mov
lds
xlat
ret
pop
jl
les
sbb
daa
mov
icebp
push
xor
clc
pop
jecxz
lock
idivl
xchg
mov
mov
cld
fnstcw
js
xchg
inc
mov
jp
adc
mov
inc
stc
sbb
cmpb
loop
mov
add
mov
xor
stc
mov
shlb
mov
cli
pusha
faddl
stc
loope
enter
inc
rorb
jle
add
je
jmp
mov
int3
fildll
push
jle
cld
xlat
lea
mov
push
popf
mov
pop
adc
dec
gs
mov
sub
lret
loop
pop
pop
stc
sbb
cmp
mov
push
bound
iret
rcr
add
aaa
jne
xchg
jnp
outsb
pop
cs
mov
imul
pop
cmc
mov
sub
push
dec
adc
mov
xor
ret
cmpsb
dec
xchg
pop
jns
lahf
mov
test
inc
mov
pop
jecxz
cmp
push
xor
mov
pop
int
dec
sub
xchg
xchg
mov
add
sub
out
mov
adc
pop
inc
add
ljmp
adcb
rcrb
scas
jnp
add
mov
popf
js
mov
inc
ds
movsb
sbb
mov
loope
jne
ss
imull
in
push
and
pop
xchg
pop
in
push
lret
movw
inc
loope
insl
pop
mov
mov
insb
dec
shlb
xor
mov
int3
dec
push
or
jb
or
int3
int3
int3
int3
int3
std
out
lock
imul
lock
movsb
and
mov
adc
pushl
pop
sbb
pop
sub
cwtl
daa
jmp
or
in
adc
and
cmp
pop
push
and
pop
iret
nop
fs
adc
and
pusha
xor
sub
les
cli
pop
and
mov
or
pop
or
push
jo
or
mov
loopne
push
adc
jnp
inc
cmp
jecxz
mov
fs
xor
or
jne
mov
cmc
push
jns
mov
and
test
sub
sub
lahf
ret
and
aad
or
push
bound
lods
dec
pop
scas
lods
push
scas
cs
leave
xchg
push
mov
xchg
stos
add
scas
adc
mov
pop
adc
and
rol
loope
and
and
out
and
add
xor
iret
call
rol
shrl
gs
arpl
outsb
pop
dec
xchg
push
or
in
xor
sbb
cmp
fnsave
out
cmp
fmuls
and
repz
sarb
je
mov
xlat
cli
js
pop
call
mov
dec
sub
stc
cltd
push
push
xchg
adc
dec
fsub
mov
add
sub
pop
sbb
or
sub
ds
aam
cmp
dec
cmp
and
incl
adc
ret
test
adc
mov
aaa
push
idivl
cmp
dec
mov
and
stc
mov
cwtl
stc
or
add
cmp
int3
int3
cltd
stos
dec
pop
pushf
seto
or
shl
mov
sbb
ja
sbb
daa
mov
mov
and
jbe
clc
sub
test
lahf
mulb
into
cwtl
int3
int3
int3
int3
dec
xchg
xchg
lahf
cmp
sub
sbb
jb
mov
outsl
movsl
cmpb
pop
push
inc
arpl
mov
in
push
mov
sbb
cmc
sub
pop
or
pop
push
mov
pop
gs
sbb
aad
ret
mov
cmp
cmp
lock
out
fisttpll
or
jnp
cmp
imul
fimull
ja
pop
or
ds
adcb
and
imul
sbb
push
sub
pop
loopne
and
sahf
lahf
pop
iret
pop
mov
outsb
push
dec
adc
and
repnz
cmp
inc
aaa
adc
or
aas
fs
leave
hlt
cltd
push
or
stos
xchg
jno
leave
adc
mov
jl
or
mov
mov
ds
lods
das
cs
addb
pop
xor
jb
in
repnz
and
mov
pop
repnz
xchg
movsb
xchg
out
or
mov
scas
stos
xchg
int3
andn
mov
mov
sarb
icebp
jns
pushf
xlat
push
out
add
xchg
in
pop
scas
les
dec
fs
xor
sbb
iret
push
push
ja
rcrb
push
js
xor
pop
cmpsl
lock
xor
sub
test
in
add
push
lret
add
xchg
push
scas
dec
aam
jno
data16
shl
clts
repz
out
int
aas
push
idivb
hlt
xchg
mov
inc
jne
loopne
sbb
ud2
int3
gs
or
add
pop
inc
push
rcll
daa
push
mov
xchg
pusha
out
cltd
mov
adcl
adc
dec
les
insb
jp
int
fidivs
pop
jge
push
repnz
dec
inc
pop
data16
dec
in
lods
push
pop
jnp
xchg
mov
stc
pop
repz
mov
rcpps
loope
insl
dec
sarb
cmp
jmp
xchg
add
in
pextrw
push
jo
jle
jg
cmp
mov
aad
movsl
push
roll
loope
pop
adc
ss
mov
shr
ficomps
jle
cltd
mov
cmp
test
repz
out
inc
xchg
inc
loopne
pop
push
rclb
sub
mov
shlb
fmulp
sub
dec
shll
leave
bswap
scas
push
js
hlt
ljmp
pop
jbe
push
aas
or
jns
and
dec
jle
movl
mov
and
push
mov
cmp
outsl
sbb
jo
es
ret
inc
repnz
push
cmpsl
inc
inc
xor
in
into
push
xor
ljmp
fwait
adc
pusha
dec
jge
jbe
jnp
mov
nop
test
das
mov
aad
xor
lock
test
int3
sbb
xchg
sub
jmp
and
lret
mov
xchg
inc
out
ror
mov
out
int3
int3
int3
int3
int3
bound
pop
and
and
daa
xor
insb
push
daa
and
repnz
jge
push
sub
sub
push
mov
fisubl
idivl
xor
jp
incl
jno
mulb
and
dec
hlt
xchg
ds
lret
loopne
fsub
movsl
adcl
fbld
ss
push
gs
jns
fwait
jbe
sbb
jnp
loope
xchg
push
cwtl
icebp
xor
add
inc
in
arpl
push
inc
pop
jg
pop
sbb
cmpb
popa
mov
stc
call
insb
sub
add
aam
xchg
int3
jle
int3
int3
int3
int3
pop
inc
stc
mov
ret
mov
adc
outsb
mov
mov
push
ficompl
daa
outsl
mov
push
jbe
test
pushf
jb
push
jg
test
cmpsb
ffreep
adc
popa
cld
add
shrl
dec
sub
push
fisttpll
aam
push
cwtl
push
sti
or
cmp
push
fwait
sarl
adc
js
push
je
daa
int3
int3
int3
int3
inc
sbb
clc
js
fidivrs
jno
cmp
inc
push
xchg
mov
pop
in
cs
gs
lahf
pop
subb
mov
dec
movsl
adc
int3
int3
int3
das
jae
and
mov
jp
or
inc
mov
lahf
shrl
dec
ss
mov
xor
addb
fistl
jb
negl
pop
sub
dec
or
or
mov
addr16
in
inc
mov
mov
out
leave
arpl
mov
lods
add
sbb
daa
outsl
ds
inc
pop
add
sti
outsl
cwtl
adc
stos
in
and
out
dec
add
push
or
cltd
stc
in
sbb
push
lock
pop
cld
push
and
or
dec
orl
fwait
xor
out
movlps
push
pop
sti
fcmovnb
leave
addr16
fidivrl
dec
cmp
mov
lahf
mov
negb
dec
mov
outsb
out
repz
stc
rorb
adc
or
xlat
mov
xchg
adc
mov
jecxz
popa
sbb
adcl
xor
into
and
sbb
sub
test
aas
and
out
scas
xchg
int3
inc
xchg
jnp
xor
sbb
sbb
fcmove
lea
and
movb
and
xchg
pop
push
int3
int3
int3
int3
jl
addr16
xlat
sbb
ficompl
pop
jne
mov
or
inc
out
call
ja
dec
in
stos
sarl
xor
fiadds
sbb
lock
mov
mov
ret
jae
add
in
ss
lock
insb
xor
dec
loope
cli
cwtl
mov
imul
popf
cmpb
lcall
nop
fstps
mov
test
dec
cmp
lahf
mov
aad
movsb
push
jp
fdivrs
repz
mov
inc
sub
fisttpll
push
punpcklbw
or
xchg
loope
sub
outsl
dec
xchg
fwait
mov
sbb
xchg
pop
addr16
sub
faddl
add
cs
jbe
sti
sbb
int
ss
dec
sbb
rorl
ret
dec
jecxz
std
andb
jae
pop
sub
rorl
nop
scas
stos
add
add
add
imul
cmp
add
clc
pop
dec
ss
jmp
je
and
mov
int
jnp
jge
inc
incb
dec
mov
sbbl
fnstenv
cmp
jle
mov
imul
nop
rclb
iret
mov
ret
lds
jns
mov
mov
nop
aaa
push
mov
cmpsb
pushf
inc
stos
mov
pop
dec
xchg
sti
inc
cmpsb
rcrb
enter
xchg
shlb
xor
jno
aam
jae
cmpsb
hlt
mov
push
dec
push
in
sub
out
arpl
push
dec
mov
sbb
dec
addl
icebp
mov
dec
mov
push
and
xor
ds
aad
cmp
xchg
xor
out
daa
push
aaa
fldt
inc
dec
xchg
inc
ret
mov
popa
lea
pop
xchg
push
jo
mov
subl
insb
inc
fs
fcoml
xchg
fcmovb
mov
push
mov
mov
mov
mov
pop
clc
ficompl
pop
and
mov
sub
decl
sbb
in
mov
sub
fbld
pop
inc
in
xor
sub
xor
movsb
clc
test
iret
mov
dec
mov
sub
imul
fsubp
pop
mov
cmp
xchg
adc
movsb
shrl
dec
mov
or
out
inc
jmp
pusha
push
and
xlat
test
or
push
and
or
dec
mov
int3
jae
jge
push
mov
pop
cmc
xor
mov
insb
dec
cltd
gs
pop
xor
xchg
aam
inc
loopne
jle
mov
bound
xchg
aad
push
fs
into
ds
adc
dec
rclb
xchg
imul
jns
inc
rcrl
and
xor
mov
sub
ret
cmc
lret
test
cmp
add
pop
aad
jl
jns
cmp
cmp
push
in
and
fwait
and
dec
add
shrb
add
inc
jle
outsl
mov
jb
mov
push
iret
fdivs
pop
pusha
imul
scas
push
pop
in
dec
shrl
xor
je
jge
jecxz
aad
and
xchg
ret
test
ret
movsb
repz
sbb
stos
lahf
push
pop
mov
fnstcw
incl
fmulp
lret
lret
hlt
ret
shll
subl
addr16
jno
sbb
lret
xchg
out
bound
lahf
roll
out
outsb
cmpps
cli
inc
or
and
lock
xchg
lods
aaa
or
push
loopne
fwait
sub
jg
rorb
and
das
sahf
push
adc
aad
mov
xchg
jbe,pn
or
jmp
inc
scas
xchg
jo
mov
add
cltd
add
jbe
dec
daa
push
adcl
jle
xor
mov
dec
mov
and
jnp
rorb
adc
test
fistps
or
ret
sbb
pop
sahf
or
fucomi
pop
sub
dec
into
cli
addr16
and
mov
fcoms
push
jmp
lcall
or
lret
xlat
popf
rcll
in
adcb
lds
dec
push
dec
in
mov
and
or
dec
and
mov
enter
push
lcall
imul
fwait
testb
mov
mov
sbb
aaa
mov
icebp
adc
jp
sbbl
or
xor
out
out
int3
pushl
stc
pop
cwtl
xchg
out
jno
test
outsl
sub
mov
sub
scas
jg
out
mov
jo
or
sbb
jno
fiaddl
aam
fmuls
push
loope
lea
mov
and
mov
fistps
add
sub
or
or
xchg
mov
lds
int3
int3
and
pop
cmp
lock
stos
in
in
cltd
adc
leave
frstor
adc
pop
into
out
inc
dec
mov
mov
fs
inc
adc
into
es
scas
jg
xor
mov
in
mov
add
push
fwait
clc
lods
sub
cmc
pop
xchg
sbb
mov
xchg
push
sbb
and
push
lret
lret
xchg
adc
sahf
outsb
mov
cmp
inc
xchg
sbbl
sbbb
inc
mov
icebp
std
mov
daa
cmp
mov
push
mov
cbtw
and
cltd
push
or
sbb
mov
cmc
xchg
jl
pushf
ret
int3
data16
subl
jecxz
sbb
inc
mov
std
mov
in
and
nop
dec
mov
adc
dec
mov
mov
hlt
outsb
out
jg
and
mov
lret
push
mov
in
sarl
xchg
push
pop
add
das
xchg
dec
sbb
sub
push
aas
nop
and
js
leave
xor
insl
pop
sub
xorb
test
arpl
add
bswap
test
sub
jne
test
mov
inc
pop
stc
mov
jae
mov
lret
pop
aam
xchg
sbb
dec
aaa
add
int
adc
sbb
xchg
pop
inc
aad
addr16
dec
sub
loop
dec
rclb
cmpsl
cmp
xchg
mov
scas
jg
ficompl
pop
icebp
cmpsl
cmp
inc
repz
adc
mov
inc
outsb
mov
test
js
push
dec
sub
repnz
fdivrl
pop
les
popa
pop
lods
sbb
dec
cmp
mov
data16
mov
pmuludq
aas
dec
test
faddl
std
cmpsl
xor
ja
test
xchg
cmpsb
mov
sbb
mov
jg
rolb
rcrb
mov
cmpsl
sub
rcll
inc
cmp
push
cwtl
shr
pop
jge
ja
lret
sub
inc
jge
sub
xchg
imul
cmp
mov
xchg
adc
fwait
imul
jle
aad
stc
sbbl
and
inc
inc
stos
jle
push
dec
sarl
cld
ja
ret
adc
xchg
inc
pusha
cwtl
push
std
movsl
or
ljmp
bound
push
mov
cld
aad
fwait
jo
cmp
call
inc
mov
fwait
cmpsl
lahf
pop
sub
dec
jns
insb
ret
negb
jo
jnp
cmp
or
repnz
jle
lret
mov
sbb
adc
lcall
mov
adc
inc
mov
jge
jp
in
in
xor
imul
xchg
jecxz
dec
cmpsb
mov
rcl
add
jmp
lret
push
loop
leave
roll
pusha
pop
mov
movsb
pop
notb
ret
cmp
ret
dec
popa
push
dec
cmp
leave
xchg
cli
je
ret
mov
ds
aad
jmp
and
mov
rcrb
mov
dec
or
inc
mov
xchg
mov
test
pop
stos
xlat
sbb
mov
cmpsl
subl
xchg
xchg
orb
adc
ljmp
mov
add
ljmp
push
dec
in
shll
dec
jecxz
jbe
mov
jo
out
jmp
insl
jl
mov
cli
shlb
or
cld
cmpsb
dec
cld
inc
mov
xchg
jge
loope
mov
dec
in
cmp
sbb
hlt
xchg
xlat
clc
dec
test
icebp
mov
out
and
or
out
add
adc
andb
mov
pop
aad
pop
pushf
andb
mov
pop
mov
outsb
jo
ficompl
mov
insl
bound
mov
lea
push
std
xchg
enter
call
imul
fsts
cmp
aaa
fstpt
cmp
jge
jp
test
test
insl
das
cli
addr16
adc
pop
or
sarb
push
or
sbb
push
data16
xlat
int
inc
add
inc
sar
movsl
stos
insb
js
cmp
dec
xchg
mov
aam
imul
inc
into
cmp
lea
inc
adc
xor
rolb
sbb
stos
xor
repz
int3
stos
mov
jmp
out
lret
mov
push
repnz
testl
in
pop
add
jb
incb
push
stos
mov
or
cmp
movsb
jecxz
lret
jo
shlb
stos
lret
dec
adc
dec
mov
fsubl
push
pop
icebp
test
mov
aas
cli
ds
ret
sub
lret
dec
in
vdivsd
add
outsb
dec
jmp
mov
sub
and
mov
sbb
test
mov
int3
int3
int3
int3
dec
sbb
mov
mov
mov
movsb
mov
iret
es
stos
sub
das
jae
pop
cld
popa
lds
scas
push
dec
pop
pop
pop
ljmp
lea
push
sub
xchg
cli
stos
push
cld
scas
dec
cmp
adc
jbe
imul
inc
jbe
sbb
push
xchg
pop
xor
dec
xor
xchg
arpl
shrl
icebp
push
call
mov
push
jg
pop
pop
lahf
pop
dec
rol
aas
and
mov
daa
movb
pop
dec
dec
dec
nop
mov
sub
and
stc
inc
jnp
pop
ss
rcr
test
jp
push
mov
adc
imul
push
fimuls
out
xchg
inc
out
add
ret
jne
mov
sti
imul
xor
rcll
sahf
lret
stos
pusha
repz
xor
int
dec
adc
dec
add
push
inc
jno
mov
mov
xchg
xchg
jo
and
sahf
jg
adc
xor
test
push
outsb
push
cwtl
pushl
mov
add
xor
into
jl
dec
cmpsb
out
sahf
outsb
out
out
test
or
mov
decl
sub
das
out
xchg
fimuls
mov
pop
or
or
mov
clc
leave
xchg
mov
pop
and
or
test
jmp
cmp
or
xchg
cmpsl
shr
and
inc
test
int3
pop
sarl
mov
adc
push
mov
dec
mov
mov
sbb
aas
xchg
mov
cmp
mov
jae
sbb
shll
ja
push
push
lock
mov
mov
xchg
pop
mov
mov
call
popf
leave
movsb
outsl
pop
or
repz
call
int3
int3
xchg
aad
gs
sarb
push
out
cmp
push
data16
les
fbld
aas
xstore-rng
cmpsl
add
bound
jl
or
cmp
and
aas
inc
rcll
xchg
ss
outsl
mov
jmp
jg
out
cwtl
in
lds
inc
movsl
mov
shlb
data16
mov
mov
jbe
data16
or
jl
mov
and
leave
mov
mov
test
jbe
clc
mov
jno
dec
arpl
pusha
jnp
inc
call
push
adc
cltd
mov
fisubl
mov
pop
cwtl
scas
lods
test
dec
cmp
scas
or
ja
push
adc
add
sub
ficoml
push
pop
cmc
mov
adc
mov
push
sub
pop
cmp
sarl
jnp
fsubr
mov
push
jnp
lahf
pop
push
pop
push
loop
arpl
xorl
xchg
jle
fs
adcb
les
mov
addr16
jns
rolb
in
daa
adc
jecxz
shl
lahf
inc
mov
and
lret
inc
sahf
adc
xchg
je
ljmp
xor
inc
jb
insl
into
leave
pop
mov
int
adc
shr
movl
jns
ret
sti
mov
jbe
or
sub
sbb
adc
mov
or
stc
loopne
dec
inc
mov
pop
cmp
bound
cmp
sbb
sbb
je
pop
insb
sbb
es
mov
lret
sbb
fildl
jns
sub
gs
mov
pop
mov
adc
mov
out
xor
sbb
fs
outsb
mov
pushf
cld
add
mov
out
cmc
xchg
adc
idivl
lock
lds
push
dec
les
inc
dec
add
lret
mov
int3
out
lea
add
inc
ja
mov
nop
pop
adc
push
sbb
pop
mov
jne
cwtl
cmp
int
pop
jno
in
aam
mov
dec
mov
ret
cmp
ud1
in
aas
test
fmul
mov
mov
pop
mov
mov
jnp
sbb
xchg
aad
mov
movsl
mov
int3
mov
or
inc
adc
xor
xchg
pop
mov
fsubrs
ja
cli
push
mov
pop
fwait
mov
cld
test
andb
mov
rolb
pop
fdivrs
aam
sbb
and
mov
push
lds
aam
adc
add
inc
adc
pop
mov
xor
adc
mov
ret
int
push
mov
xchg
xchg
aaa
dec
mov
add
fstl
dec
dec
jne
mov
int3
int3
int3
test
cmpsb
dec
xor
sbb
cmp
arpl
push
adc
jno
sbb
jae
adc
sub
dec
arpl
sbb
pushf
ds
in
inc
or
fisttpl
mov
lret
test
xor
inc
xor
lcall
xchg
jb
pusha
repnz
mov
mov
lahf
jl
dec
out
mov
sub
sub
pusha
pop
sbb
fcmove
icebp
jns
dec
push
lds
adc
std
inc
pop
out
int3
int3
int3
mov
iret
xchg
sub
push
sbb
loope
mov
mov
aam
jg
sub
jmp
mov
sahf
adc
lret
mov
dec
or
push
or
push
out
daa
adc
and
sti
mov
cmp
and
je
test
cs
ss
cmp
mov
adc
ret
and
xor
adc
jne
cs
call
mov
lods
aaa
scas
pop
xchg
fnsetpm(287
push
push
cmpsl
inc
mov
push
lahf
cld
ss
jp
cwtl
lahf
add
js
pop
pushf
mov
icebp
mov
mov
mov
sub
loopne
ss
pop
ja
and
mov
xchg
adc
ss
push
push
sbb
sub
sub
xchg
pop
popf
add
test
cmp
call
inc
pop
and
ret
adc
mov
add
mov
dec
out
cmp
sbb
les
lahf
out
ss
int
fidivs
mov
fcompl
fbstp
cli
out
cmp
mov
push
dec
push
iret
mov
xchg
sbb
lahf
stc
rclb
scas
cmp
or
scas
mov
cmp
jp
insl
xchg
xor
lahf
or
mov
pop
sbb
test
and
pushf
and
je
lahf
xchg
sahf
addl
or
aam
pop
add
in
fnsetpm(287
xchg
and
jo
mov
mov
sbb
sbbb
dec
lcall
mov
fabs
fiaddl
lcall
dec
and
push
add
adc
cmp
inc
push
adc
jg
stos
pop
jns
incb
dec
push
pusha
sahf
and
imul
sbb
mov
dec
push
pop
or
cmp
lea
jne
call
fiaddl
gs
decl
mov
dec
adc
jne
cmpsb
test
call
push
pop
idivb
jae
inc
in
pop
and
loope
xchg
fildl
ljmp
ss
cmc
scas
test
into
cmpsl
in
mov
mov
in
xor
adc
lods
push
addr16
push
add
icebp
mov
in
and
mov
add
sahf
int3
push
push
cwtl
jae
movsb
sbb
es
mov
xchg
sbb
imul
fs
xchg
inc
xchg
mov
addb
add
mov
fidivl
mov
in
hlt
xor
adc
bound
repz
into
jg
sub
fists
mov
add
scas
repnz
shll
mov
push
enter
loope
dec
out
aaa
repz
push
push
or
pop
repnz
inc
frstor
mov
stos
sarl
jecxz
adc
xchg
dec
nop
inc
fs
jle
mov
or
push
movsl
mov
inc
loopne
popf
mov
fstpt
dec
sub
or
imul
in
mov
mov
mov
lret
or
push
and
aas
testb
or
mov
lock
cmp
lcall
lcall
or
xchg
or
int3
int3
ss
sbb
cs
pop
xchg
pop
add
pop
xor
sarl
lock
int3
or
lock
push
aam
push
sahf
das
stos
aam
inc
inc
adc
daa
dec
popa
bound
jbe
mov
faddp
jecxz
fs
addr16
or
sti
mov
icebp
adc
lahf
lret
dec
push
jle
mov
xor
incb
add
ds
in
loop
jns
movsb
sbb
imul
stos
mov
sbb
ja
cmp
loop
add
ds
fildl
into
in
pop
lret
add
mov
inc
insl
xor
fcmove
ds
cmp
dec
xor
mov
adc
inc
xor
cmp
and
add
shll
dec
js
adc
lahf
and
or
pop
sahf
cmp
jl
negb
flds
rcrb
cmp
cmp
loopne
aad
mov
dec
jnp
xchg
add
jl
add
inc
fidivs
sub
add
mov
push
inc
sbb
push
and
scas
sahf
mov
repnz
inc
xor
or
in
inc
mov
dec
outsb
jnp
mov
adc
je
and
stos
pop
mov
sahf
push
ja
ret
adc
push
popf
ret
xchg
outsb
and
ljmp
and
call
mov
or
mov
hlt
push
inc
pop
dec
imull
pop
ret
pop
js
push
or
out
jns
or
adc
jecxz
add
fistl
es
aaa
stos
pushf
rolb
out
push
pop
add
cmc
and
jmp
lods
dec
pop
sbbb
jne
in
jge
push
lcall
bound
adc
test
ja
or
lahf
jg
xor
inc
jle
cltd
jp
lds
pop
pop
int
dec
add
mov
lock
test
mov
nop
add
in
adc
dec
stos
cmp
stos
out
adc
ja
inc
inc
lret
loope
mov
sub
into
mov
fiadds
jecxz
xchg
xor
mov
mov
aam
and
rcrb
jle
xchg
xor
test
xchg
dec
pop
xchg
cmc
inc
fwait
and
andl
inc
sti
or
stos
inc
push
sbb
lret
aam
fcomi
das
ja
fistps
xlat
cmp
lahf
clc
pop
jbe
or
xchg
push
das
pop
insl
fisubrs
push
mov
cmp
int3
int3
int3
push
add
das
repz
mov
push
rclb
dec
xchg
test
int
int3
int3
int3
int3
sbb
cmp
aam
popf
inc
dec
cwtl
stos
xor
mov
add
mov
stc
inc
mov
in
jne
and
cmp
mov
jle
lret
sub
test
push
mov
pop
je
in
jbe
mov
gs
jge
push
into
mov
mov
dec
ret
lods
popa
outsl
test
pop
rcll
fcmovb
and
and
int
push
xor
mov
jmp
push
xlat
pop
mov
dec
add
aas
enter
or
inc
cmp
add
push
int
jae
push
fildl
jp
add
lret
shll
add
sbb
imul
jbe
mov
mov
xor
sub
push
sbb
sbb
xchg
sub
cltd
movsl
bound
jle
cmpsb
pop
lods
inc
cmpsl
std
jns
js
pusha
in
cmpsl
aam
jmp
cmp
mov
add
and
daa
clc
mov
fwait
je
or
cmp
arpl
xor
into
sbb
ficomps
and
inc
push
sbb
mov
ret
ret
sub
enter
inc
int3
sub
sbb
pop
adc
dec
loop
icebp
sahf
or
xor
in
int3
int3
int3
rorl
jg
mov
lret
fcoms
inc
push
adc
bnd
inc
inc
mov
dec
leave
out
nop
into
lods
shll
add
pop
dec
scas
xor
add
pop
call
push
pushf
and
fndisi(8087
xchg
pop
movsb
aas
xlat
int
xchg
inc
fcmove
jno
out
insl
sub
rcrl
mov
pop
mov
cmp
sbb
ficoms
mov
int3
xor
aad
xor
sub
xor
fsubs
icebp
hlt
dec
std
add
aas
enter
jno
repz
sub
dec
jge
cmp
dec
xchg
push
cld
xchg
xor
xor
inc
jl
sbb
int3
int3
int3
int3
int3
ficompl
nop
mov
xchg
mov
popa
jne
jle
mov
dec
mov
jns
sbb
ret
call
add
sub
adc
adc
push
lahf
mov
mov
add
jmp
jb
mov
pop
xchg
sbb
lods
xor
fldl
push
and
mov
cltd
push
xchg
inc
jmp
jae
pop
cmp
xchg
hlt
popf
push
imul
mov
and
mov
push
fsubrs
jp
imul
fcmovnu
mov
rorb
xor
mov
in
into
pop
jb
jg
xchg
ja
lods
jb
lcall
dec
mov
cmpsb
jge
or
sub
aaa
into
lea
fsts
inc
and
dec
mov
inc
xchg
out
mov
pop
jne
insb
sbb
push
es
fadds
sub
loope
lret
iret
fcomi
adc
cwtl
push
je
nop
addb
outsb
out
mov
dec
xchg
pop
inc
dec
stc
cmp
lcall
inc
int3
jmp
dec
lods
nop
in
jo
mov
fcom
pop
jmp
aad
push
jae
mov
not
mov
arpl
fists
and
dec
jg
pushf
pop
xchg
inc
inc
pop
add
push
stos
jno
sub
push
ja
or
or
mov
xor
ds
jle,pt
test
in
fsub
jmp
clc
or
mov
orb
mov
call
std
mov
cmp
lds
mov
stos
test
jb
pop
xchg
imul
int3
or
pusha
cmp
dec
out
insb
jns
mov
les
dec
or
ret
in
out
jmp
aad
sub
xor
push
dec
nop
sub
fsub
rorl
jmp
js
push
dec
mov
or
test
mov
adc
aaa
mov
movsl
mov
jne
fsts
mov
test
jmp
sti
fdivl
cli
pop
cmp
sub
js
outsb
jbe
mov
xor
sbb
enter
sub
repz
lcall
adc
or
hlt
jmp
push
repz
scas
sub
test
cmpsl
mov
push
sahf
movsl
lock
adc
and
add
std
jae
imul
jnp
int3
int3
int3
int3
fs
rcrb
rorl
stos
dec
add
movsl
mov
pop
jle
es
xchg
scas
jmp
mov
sbb
push
es
nop
adc
add
shrb
lea
cmp
inc
add
xor
dec
arpl
inc
push
sbb
push
lret
shrl
sub
and
rolb
movsb
cwtl
test
cmpsl
daa
xchg
jmp
jne
test
fadds
pop
xchg
mov
sub
in
iret
add
xchg
into
iret
es
rol
inc
xchg
ljmp
mov
insl
sub
push
jae
cwtl
bound
sub
cmp
pop
rorb
testl
pop
adc
xchg
shlb
mov
mov
push
enter
stos
xchg
mov
fstcw
sub
mov
leave
xchg
sub
lea
inc
call
mov
xchg
cmp
add
push
rcll
cmp
adc
xor
and
mov
mov
inc
xor
loope
fisubrs
in
mov
loope
rcrl
xchg
imul
pop
pop
pop
dec
add
mull
mov
movsl
cmp
push
lret
nop
loop
xor
enter
and
adc
out
jo
dec
out
cltd
lods
adc
sbb
jmp
cwtl
test
push
arpl
mov
lcall
jnp
inc
push
imul
lds
or
pop
or
sub
fcomi
cld
push
fdivl
jecxz
mov
ret
das
pop
fildll
rcl
ret
jnp
push
adc
rol
mov
iret
jbe
adc
popf
jo
and
test
js
or
fcmove
int3
int3
int3
flds
out
mov
lods
pusha
inc
sub
mov
push
inc
push
data16
dec
outsb
cmpsb
rorl
imul
lret
jae
pop
pop
cs
sahf
dec
jecxz
js
xor
cltd
push
je
dec
fucomp
xor
mov
mov
in
push
and
sbb
stos
dec
mov
dec
sbb
cmpsb
mov
and
fisubs
loop
loopne
loop
mov
and
push
dec
xor
or
lds
xchg
mov
pop
sub
insl
lcallw
aas
xchg
xchg
cmpsl
jnp
stos
aam
cmp
sub
xchg
push
aas
cmp
cmp
int
pop
fcompl
xchg
sbb
ds
test
das
scas
mov
xchg
arpl
in
and
cltd
popa
scas
xchg
fcomps
cmp
mov
mov
fisttpl
insl
pop
pop
inc
inc
bound
xor
popf
test
repz
sbb
push
pusha
jecxz
mov
int3
int3
or
testb
mov
cmp
pop
cltd
pushf
sub
test
popa
out
rclb
fsubl
loopne
add
cwtl
in
in
int3
scas
rclb
aad
inc
inc
inc
repnz
in
mov
push
andl
testb
aas
sar
ljmp
dec
jecxz
jns
cltd
xchg
sbb
mov
sbb
mov
testl
and
push
into
sub
jae
fstpl
shll
cmp
dec
xchg
sti
dec
dec
test
mov
mov
jae
sbb
lods
jmp
cmp
test
test
push
add
jp
rolb
pusha
cli
push
repnz
negl
xchg
int
pop
aad
test
aam
shlb
sub
cmp
xchg
test
mov
dec
cmp
push
pop
test
add
outsb
js
sbb
sbb
dec
mov
sahf
jnp
jmp
ror
push
push
jg
push
and
aam
push
mov
xor
stc
mov
pop
jb
fnstcw
imul
dec
sbb
inc
stos
pusha
cmp
in
sbb
std
je
mov
insl
add
cmpsl
xor
push
pop
cld
jno
lock
shlb
test
aas
test
ja
push
mov
orb
aas
mov
jl
aam
mov
cli
lahf
roll
mov
jo
pop
and
in
lea
pushf
mulb
pop
push
shlb
loop
fsub
in
fsubr
pop
stos
xor
add
sbb
xor
jbe
je
sub
dec
ds
pop
aad
aam
mov
dec
pop
into
pusha
and
icebp
sbb
addr16
je
pop
and
mov
lods
inc
jne
bound
dec
filds
movsb
ljmp
outsl
sbb
call
pop
frstor
jns
and
pop
mov
ret
sbb
mov
or
int3
adc
loop
mov
or
inc
sbb
add
xchg
push
cwtl
les
pop
cmc
jbe
xor
dec
into
sbb
lcall
stc
testl
sub
pop
jne
es
sub
les
xchg
adc
pop
mov
jbe
out
es
mov
ds
mov
iret
fdivr
shlb
int3
int3
int3
or
out
fdivl
add
stos
cmp
pop
add
imul
test
inc
inc
out
ret
std
pop
mov
idivl
xchg
pushl
jns
xchg
mov
and
mov
adc
loopne
xchg
cltd
jno,pn
cld
cmpsl
ds
xor
and
cmp
inc
stc
cwtl
mov
out
mov
add
int3
int3
int3
in
sbb
cmp
repz
scas
subl
xchg
sbb
js
lcall
mov
out
imul
das
popf
inc
cmp
das
repz
lahf
and
scas
ja
test
and
call
or
adc
out
add
call
gs
jb
insl
mov
xor
loopne
negl
shlb
inc
fs
iret
add
jmp
or
add
fistl
sbb
pop
out
pop
mov
ds
cmp
jb
rcll
test
adc
stc
test
sbb
iret
pop
repz
loope
inc
and
in
test
xchg
arpl
dec
loopne
inc
adc
mov
mov
js
mov
cmp
fdivl
notl
ss
mov
shll
xor
mov
sbb
arpl
clc
adc
sub
sub
sbb
loope
ds
ss
push
loope,pn
mov
add
shll
fdivs
or
repz
movsb
fmuls
mov
or
movsb
int
mov
aas
jno
cmp
pop
mov
and
arpl
or
xchg
arpl
popf
test
scas
mov
stos
lahf
ds
les
mov
dec
pop
shrl
outsb
out
adc
cltd
stos
nop
dec
lods
ss
orb
add
call
jecxz
or
data16
movsb
ds
aas
cmp
adc
fs
cmp
adc
xor
and
sahf
adc
pop
loope
cwtl
test
push
mov
lret
loop
add
and
addr16
in
int3
int3
int3
int3
xchg
push
sahf
pop
push
sub
push
fsts
stos
cmp
jge
adc
xor
clc
gs
das
xchg
mov
daa
stos
pop
pop
add
icebp
sub
pop
pop
int3
xor
dec
or
cmpb
imul
mul
movsb
or
jb
jnp
inc
ja
fsts
scas
data16
sub
push
aam
movsb
jnp
add
sub
lea
cmp
outsb
or
scas
or
movsb
fistpl
outsl
enter
jge
or
and
sbb
lahf
fstps
or
iret
sub
fidivl
je
les
out
fcoml
pop
lret
arpl
dec
sbb
mov
jle
cld
xchg
lods
push
das
xchg
lods
cmp
push
inc
lods
jp
aaa
push
sbb
shll
cli
insb
in
add
and
xchg
add
mov
aad
cmc
test
pop
xor
cmp
aas
add
inc
fldl
add
fcmovb
test
fucomip
shll
sarb
test
pop
pop
lods
pop
sub
rcl
inc
push
fucom
ffree
arpl
push
cs
aad
xchg
shrl
pop
es
testb
push
inc
iret
mov
stc
pop
jge
test
insb
ss
xor
mov
cld
push
insb
or
mov
adc
xor
xor
fdivs
cmpsl
mov
lahf
dec
and
pushf
jl
dec
ffree
mov
mov
push
pop
pop
es
pop
pop
pop
faddl
je
lret
sub
push
roll
mov
aam
and
mov
jo
nop
subl
jne
fsub
mov
push
sub
mov
aas
in
or
lret
add
out
movsl
sub
push
and
fildl
sbb
adc
jp
sub
or
inc
sahf
into
test
jbe
jecxz
lods
out
mov
and
or
aad
sbb
das
push
sub
dec
add
sbb
xchg
shrl
fistps
int3
and
pop
jmp
gs
dec
sub
push
dec
add
pushf
inc
dec
push
fwait
int3
pusha
jp
cli
stc
mov
cmp
loop
loopne
ljmp
mov
fst
push
cmp
sub
inc
ljmp
stc
shll
movsl
add
das
rep
les
stos
lret
and
data16
adc
stc
sbb
adc
or
push
mov
pop
cmp
cli
add
mov
pushf
sub
and
push
scas
pushl
fmull
and
mov
sbb
xlat
and
enter
or
stos
push
icebp
add
in
push
sbbb
pop
popf
dec
gs
insl
xchg
lret
hlt
mov
sub
xor
lea
inc
ljmp
jle
sahf
shlb
stc
fwait
dec
scas
aad
mov
xor
testl
mov
sbb
stos
jecxz
jp
fists
aaa
in
sub
sub
das
adc
in
cli
jmp
pushf
xchg
fisubrl
cld
inc
pop
in
and
mov
mov
mov
icebp
shl
jg
cmp
push
inc
lret
push
xor
adc
fs
jg
xor
mov
lcall
rolb
ljmp
cmpsb
clc
int
jbe
dec
lret
mov
test
mov
sub
notl
or
les
jo
testl
icebp
sub
movsl
mov
xchg
xchg
add
cli
cmp
movsb
test
dec
xchg
sbb
push
mov
fs
or
scas
dec
and
jnp
pusha
add
fdivrs
adc
inc
dec
jge
aad
sbb
jb
ja
inc
mov
stos
add
shll
idivl
add
rcll
xor
lret
cli
test
push
or
test
inc
jnp
add
int3
dec
push
out
sti
pop
shr
test
loopne
mov
xor
add
ret
dec
std
outsl
sahf
mov
fidivrs
leave
jle
popa
movsb
mov
xchg
adc
test
and
pop
out
add
adc
inc
and
sub
dec
push
mov
test
pop
xor
mov
arpl
stos
fwait
sahf
inc
mov
and
ja
clc
and
in
inc
xchg
shrb
pop
pop
call
popf
or
inc
cmpsl
jp
and
or
jne
lds
xchg
fstl
mov
add
cltd
jecxz
insb
pop
bound
rorl
inc
xchg
incl
inc
sahf
mov
push
sbb
cmpsb
mov
mov
test
ficoml
mov
xchg
int3
mov
pop
inc
mov
movsb
and
xor
ss
pushf
je
xor
xor
imul
aaa
jne
sbb
lret
js
xchg
adc
call
imul
bound
cltd
adc
sub
std
adcl
test
sbb
xchg
stc
pop
mov
fadds
and
ss
mov
add
nop
xchg
xchg
int3
scas
cmp
out
nop
aam
dec
addl
mov
mov
test
inc
mov
call
cmpsl
sahf
xchg
loopne
jns
sarb
xchg
pop
aam
inc
or
fld
imul
push
mov
das
in
bts
fmul
int3
int3
int3
int3
push
mov
out
push
pop
movsl
clc
add
add
add
sbb
ret
cmpb
leave
push
xchg
out
mov
inc
sub
test
xor
icebp
inc
out
pushf
stc
mov
sub
loop
pop
lcall
scas
pop
push
push
rorb
in
dec
push
pop
add
xchg
mov
pop
in
adc
mov
sub
jl
xchg
out
inc
or
push
dec
dec
loope
fldenv
xchg
mov
push
cli
cmpsl
or
fnstenv
inc
arpl
daa
cli
loopne
mov
sti
adc
inc
mov
sahf
repz
dec
arpl
popf
mov
adc
fstps
push
sub
js
and
mov
seto
xor
xchg
add
xchg
scas
sbb
sti
lods
lahf
ja
or
aam
push
cmp
xchg
aam
leave
xchg
jp
out
aad
xchg
sti
in
dec
pusha
sbbl
out
xor
ja
pop
sahf
mov
mov
push
mov
test
dec
in
xchg
jl
inc
adc
jns
jmp
push
xor
push
mov
les
add
jo
dec
dec
sub
mov
push
shlb
inc
or
xchg
mov
fsubr
or
fmul
clc
dec
jno
push
dec
adc
ret
sbb
adc
sbb
push
leave
push
dec
push
cmp
cmpsl
jmp
jno
mov
int3
int3
int3
sub
movsb
fiadds
adc
ret
jle
lret
les
push
test
push
mov
xchg
test
lss
movsb
movsl
and
add
xchg
jp
das
test
jecxz
pop
test
test
mov
push
mov
xor
mov
cmp
orb
and
cld
sti
rcrl
add
stos
test
mov
inc
out
sub
dec
in
ret
ja
mov
push
xchg
jnp
repz
ret
out
cltd
dec
les
push
insb
mov
mov
adc
jmp
push
dec
lahf
mov
fwait
lret
xchg
sti
sti
push
jmp
loopne
pop
xchg
mov
lea
cmp
mov
or
iret
mov
icebp
dec
scas
jecxz
inc
movsl
rorb
call
push
outsl
and
adc
inc
push
int3
sbb
pop
movsb
pop
fiaddl
clc
ljmp
aaa
xor
test
mov
mov
xchg
stos
dec
mov
jle
in
inc
jmp
inc
roll
push
out
lods
int
enter
nop
sub
test
fcmovb
mov
sahf
mov
ds
daa
lea
xchg
addl
cmp
nop
icebp
movsb
mov
std
pop
out
inc
pop
data16
mov
mov
fwait
sbb
mov
push
mov
std
cmpl
jo
jns
dec
mov
and
es
mov
movsl
rclb
or
mov
scas
bnd
pop
sbb
insl
sbb
adc
popa
leave
inc
out
cmp
fstpl
push
push
jne
sbb
sbb
add
mov
js
outsb
cli
push
ljmp
aad
call
lahf
in
roll
and
sub
and
out
push
xchg
out
sub
mov
imul
test
adc
mov
fcmovbe
xor
pusha
addl
aaa
sti
xor
mov
add
shl
adc
dec
and
jno
test
pushf
cmp
hlt
fdivrs
sbb
outsl
sbb
lods
cmp
sbb
and
xchg
mov
pusha
scas
sub
sbb
adc
es
mov
aas
dec
pusha
arpl
mov
or
mov
or
xchg
repnz
xor
xchg
aas
jmp
loopne
jbe
les
push
inc
idivl
sti
push
mov
inc
in
cmc
bound
imul
inc
stos
shl
popa
imul
jmp
dec
andb
mov
inc
sub
testb
xchg
jae
rcrl
jnp
aaa
into
push
lds
lahf
mov
and
into
mov
popf
and
inc
dec
stos
push
gs
jecxz
rclb
clc
sbb
push
out
aas
jb
sub
push
int3
int3
int3
int3
int3
ficoml
or
xchg
and
push
ja
fnstsw
sbb
sub
inc
test
xchg
pop
fs
pop
inc
sub
cmp
mov
cmc
gs
movsw
leave
sahf
mov
shlb
pop
jmp
xchg
std
out
jb
pop
cmp
dec
jmp
sti
mov
cmp
push
sub
rclb
adc
and
je
shlb
rclb
mov
rol
mov
and
jns
int3
int3
xchg
cmp
rcrl
test
jnp
in
push
and
and
cmpsb
add
mov
mov
pop
psubb
pusha
fwait
jle
jns
sti
mov
push
test
and
pusha
pop
dec
enter
out
in
in
push
push
jb
ret
ret
sub
int
test
mov
pop
push
ljmp
mov
pop
test
jo
fistl
sub
xor
mov
loopne
inc
cmp
push
fnstsw
and
out
movsl
jl
sub
mov
dec
and
cmpsl
das
mov
mov
sbb
pop
sbb
xor
pop
inc
inc
rcr
sub
aam
shlb
cld
divb
insl
lcall
lcall
js
das
xlat
rcl
xchg
dec
sti
punpckhbw
or
and
faddl
jbe
mov
push
stos
arpl
mov
sub
sbb
jbe
dec
cmpsb
mov
inc
mov
dec
es
mov
inc
pop
pop
xchg
xor
pop
xor
xor
imul
cli
out
test
add
sbb
mov
addr16
pop
or
iret
stc
xor
cmp
ja
pop
cli
fnsave
lea
pop
xor
ljmp
push
jne
addl
pop
lret
cmpsb
mov
in
pop
adc
loop
outsb
lea
call
cmp
rcl
mov
adc
sub
shr
xor
and
sbb
add
nop
lretw
push
pop
jb
lock
hlt
in
stos
mov
nop
mov
scas
mov
add
lods
nop
in
inc
xchg
mov
in
and
lods
sub
cmp
sub
hlt
xchg
out
and
lret
or
mov
cmp
push
push
fmull
mov
or
rcrl
lahf
jb
dec
add
adc
cmp
out
sbb
into
adc
sub
imul
fisttps
dec
adc
add
sub
in
xor
out
aad
int3
int3
int3
int3
int3
push
stos
xor
sub
lods
sbb
adc
out
jmp
rorl
add
push
loope
push
inc
mov
insl
adc
fisubs
lods
add
arpl
push
ss
or
xchg
imul
dec
test
sub
out
cld
leave
aam
out
xor
mov
scas
xor
and
sub
out
dec
mov
bound
mov
std
jecxz
jl
pop
xchg
fisttpl
cli
fs
shll
cmp
xchg
stos
btc
xchg
cmpsb
inc
mov
jl
daa
loopne
or
xchg
mov
xor
jb
pavgw
add
in
mov
or
pop
into
mov
stos
fndisi(8087
fisttpll
fisubrs
out
andb
push
xchg
cltd
push
lret
rcll
mov
jle
jg
sbb
dec
stos
repz
dec
mov
xor
xor
daa
or
fcompl
fmull
mov
push
inc
es
pop
push
add
movsl
stos
inc
outsl
inc
mov
fnstenv
lods
imul
jp
mov
lock
jge
sub
out
mov
insl
into
ret
mov
imul
add
jbe
mov
add
andb
pop
pop
out
out
sub
mov
in
sbb
es
sbb
mov
and
mov
pop
mull
jmp
xor
inc
inc
in
add
xchg
push
jg
sub
out
and
int3
outsb
setns
and
jl
js
repz
decl
cmp
add
push
enter
inc
dec
cmpsl
add
scas
cmp
inc
pop
mov
lods
xchg
sbb
ret
cmpb
pop
pop
jo
testb
nop
int3
je
sub
hlt
mov
push
cwtl
mov
cld
test
cmp
cmp
xor
cmp
pop
mov
mov
call
or
pushf
dec
dec
lods
ret
pop
mov
test
aam
lcall
std
adc
dec
insb
sub
or
lret
jge
mov
daa
adc
and
cmp
sbb
mov
mov
stc
inc
mov
xchg
mov
mov
add
jnp
dec
inc
dec
outsl
dec
jnp
mov
add
popf
sbb
jmp
and
aaa
lret
sbb
les
xor
add
cmp
and
inc
push
test
popa
sbb
jecxz
xchg
nop
pop
sub
sti
outsl
mov
int3
int3
int3
int3
xlat
add
rorb
or
inc
iret
xor
dec
in
mov
hlt
xchg
ja
ljmp
dec
sbb
je
fnsave
cmp
inc
insb
add
lods
pop
hlt
inc
clc
lcall
push
lahf
jp
add
mov
add
or
mov
je
and
lcall
add
popa
popa
fs
scas
mov
dec
int
xchg
lahf
sub
shl
pop
xchg
ljmp
push
sbb
gs
call
jae
or
testb
rcll
sub
add
lock
inc
sbb
pop
sbb
mov
aas
out
and
cwtl
mov
insb
or
and
and
pop
int
iret
nop
leave
lods
inc
or
cmp
jecxz
sub
mov
push
sbb
lret
ljmp
stc
and
popf
imul
test
xchg
push
sar
push
loop
fnstsw
loopne
mov
arpl
adc
movsl
xchg
adc
mov
mov
or
push
lret
jbe
sbb
incl
int3
imul
jne
orl
jnp
mov
inc
pop
hlt
pop
aad
pusha
mov
xchg
mov
pop
push
leave
mov
scas
lret
sub
pop
or
push
leave
pusha
shr
cs
rcr
aam
cmpsl
mov
xlat
mov
sbb
mov
pusha
repz
dec
ret
test
pop
out
jne
inc
adc
pop
stc
es
rolb
adc
rcrb
stc
leave
add
push
sbb
ljmp
lea
push
mov
pop
stc
lea
fiadds
jl
jg
cld
jb
fistpl
test
xchg
lahf
fwait
movsb
mov
sub
xchg
iret
pushf
and
adc
scas
mov
test
ja,pt
xor
mov
stos
pop
nop
lcall
scas
mov
cld
pop
or
sbb
leave
ljmp
lahf
dec
shll
cmp
xor
mov
pavgw
sub
mov
sti
cltd
inc
lods
mov
adc
mov
pushf
ret
jle
add
addb
frstor
fwait
int3
imul
dec
sub
and
inc
add
mov
mov
pop
sti
aad
adc
mov
pop
sbb
and
lahf
xchg
xlat
xchg
nop
inc
ljmp
dec
or
mov
scas
jne
sbb
mov
orl
mov
or
daa
pop
or
fsubs
fsubr
jbe
cmp
pand
test
or
and
sbb
gs
jle
daa
ds
jl
nop
adc
push
or
stc
mov
mov
cmp
cmp
cld
leave
pop
dec
add
lods
sub
clc
cmp
inc
fdivrl
into
jo
dec
xchg
dec
fnstcw
fsubs
cmpsl
int
inc
addl
lcall
out
das
and
insl
enter
jb
push
nop
pop
aaa
sub
jmp
push
std
cmpsl
jne
inc
inc
in
cmp
sbb
pop
outsl
jbe
lret
imul
rcrl
lahf
mov
push
stos
aaa
stos
or
sub
xchg
xor
lret
fnsave
xchg
xchg
mov
mov
loope
lahf
mov
and
cltd
sti
shlb
ret
adc
mov
jl
mov
sub
pusha
mov
push
mov
xor
mov
sub
stc
dec
stos
aaa
inc
push
ficoml
jge
call
and
mov
int
jno
std
cltd
mov
fistl
fbstp
movsl
jbe
adc
jns
icebp
jno
push
mov
mov
mov
inc
std
inc
jns
adc
mov
dec
std
push
jl
stos
sbb
dec
popf
int
shlb
test
pop
mov
and
inc
mov
fcoml
xor
fdiv
in
ret
pop
sub
sub
and
jle
fdiv
xchg
stos
sbb
push
jns
add
inc
add
outsb
cwtl
les
push
imul
pop
push
mov
out
add
sbb
leave
mov
int3
int3
imull
sub
fbstp
sub
jl
dec
into
adc
insb
gs
mov
dec
or
mov
insb
ftst
xor
inc
mov
test
xor
shrl
movsb
fs
jle
int3
int3
int3
shrd
aaa
dec
add
fdivrs
adc
cmpb
sub
sbb
mov
imul
mov
pop
nop
push
xor
loop
jl
jl
std
adc
popf
push
orb
xchg
mov
sti
sbb
fs
je
dec
lock
inc
sbb
push
push
clc
mov
mov
jecxz
mov
jecxz
jbe
aas
dec
mov
inc
push
push
dec
in
adc
stos
repz
out
ret
lea
loop
xchg
adc
cwtl
test
loope
push
dec
sbb
and
das
or
sbbl
xchg
or
jne
icebp
aaa
ret
or
outsl
jp
mov
ja
or
fcmovne
cmp
jae
fisubrl
fcmove
test
lahf
incl
and
xchg
sbb
shlb
and
idivl
add
gs
bound
mov
in
mov
imul
xor
lcall
js
fs
and
orb
and
shl
gs
cmpsb
stc
dec
inc
push
add
sbb
or
stos
mov
movsb
add
mov
pop
in
outsb
push
push
pusha
mul
add
xchg
sub
push
cld
test
inc
fdivr
mov
leave
and
cmp
pop
pusha
pop
sub
mov
jge
stc
xor
dec
sub
mov
adc
cmpsl
es
sbb
cs
ja
je
mov
mov
jno
and
fcoms
stc
aaa
sbb
nopl
sbb
int3
adc
subl
ficompl
fistps
fstpt
int3
mov
lods
gs
in
xchg
dec
xchg
push
lock
lods
push
add
xchg
or
add
mov
pop
les
add
stc
imul
lahf
add
jne
dec
daa
cli
mov
mov
add
in
push
xchg
ljmp
shlb
repz
in
inc
xor
addb
adc
icebp
xor
popa
or
xor
scas
cmp
xorl
and
dec
ss
lock
xor
and
sar
out
stc
or
int3
int3
int3
int3
int3
mov
adc
and
pop
push
jecxz
xor
jp
in
mov
push
ret
pushl
cmp
pop
ret
xchg
testl
imul
fadd
cmp
shlb
xor
outsl
mulb
pop
dec
enter
dec
pop
jno
xchg
movb
dec
jmp
pop
mov
insl
mov
addr16
lahf
std
xchg
insb
pop
pop
jl
scas
lds
movb
push
sbb
inc
jno
sbb
cs
or
movsb
pop
arpl
js
out
mov
in
mov
sbb
fsubp
push
inc
testl
jmp
mov
cmp
sub
bnd
jmp
xchg
add
xchg
add
stos
stos
mov
pop
int
jns
adc
mov
fdivrs
popf
xor
or
adc
mov
lahf
mov
jecxz
cmp
mov
sbb
or
cmp
xor
adc
xchg
pop
pop
sahf
dec
divl
add
dec
jecxz
imul
add
mov
rolb
xchg
and
fcompl
jne
sub
sbb
xor
leave
and
dec
or
bound
sub
andb
and
fsubrp
test
xchg
loopne
push
push
pop
sbb
pop
xor
adc
aas
mov
push
mov
or
daa
inc
mov
aaa
outsb
add
jg
int3
mov
aas
cmp
ds
push
imul
sub
push
aad
or
adc
adc
jne
out
in
pop
xchg
dec
mov
push
and
insb
jo
mov
adc
add
or
cmp
dec
xor
sub
cld
cmc
mov
iret
cmp
push
xchg
test
aaa
sarl
sarl
jno
loop
dec
inc
sub
int3
int3
int3
mov
inc
das
icebp
add
jns
je
enter
sub
ficoml
dec
pop
rclb
addl
xchg
outsb
add
movsl
mov
stos
push
loop
or
jae
xchg
mov
pop
imul
sahf
mov
add
and
movsb
aad
adc
imul
lods
xchg
hlt
push
int3
dec
push
fistpll
adc
mov
mov
jg
loop
or
push
push
rorb
jl
jle
sbb
mov
or
mov
pop
pop
iret
movsl
iret
mov
jp
int3
adc
fbstp
ljmp
sbb
mov
and
fsubs
sub
sub
jmp
pop
ret
dec
jge
xchg
dec
pop
xchg
sbb
dec
adc
out
adc
or
mov
into
stc
ret
fdivrp
fwait
int
lret
cmp
lods
pop
lods
imul
sub
sub
push
movb
mov
ljmp
sbb
daa
int3
outsl
inc
pop
int3
mov
or
cmpsb
iret
ljmp
aam
cmc
or
fldt
or
pushf
xor
add
jl
mov
pop
sub
and
add
push
aaa
push
out
sub
fbstp
push
insb
mov
stos
adc
inc
fbstp
push
and
cmp
xor
psubb
cmp
adc
sub
dec
daa
orl
sti
or
int3
push
vunpcklps
push
cmp
add
inc
test
andl
fnsave
and
lods
gs
xor
inc
lahf
pop
mov
mov
or
adc
hlt
mov
repz
repnz
add
mov
loope
dec
jmp
xor
shrl
sbb
lock
ret
adc
cmpsl
es
cmp
jecxz
jmp
jnp
enter
fwait
push
dec
int3
xchg
sbb
push
pop
and
mov
cmp
int3
int3
int3
int3
in
push
mov
or
out
xchg
cmp
add
push
int
popa
mov
lods
xor
dec
sbb
into
call
mov
jg
mov
xor
sbb
das
aam
outsb
rorb
pushf
sub
mov
shll
lods
mov
push
mov
dec
mov
mov
jae
xor
stc
push
loop
aad
test
pop
xor
pushf
dec
adc
dec
sbb
pop
hlt
call
out
xchg
fs
pop
adc
inc
inc
cmpsl
sahf
dec
add
push
dec
dec
adc
roll
lret
dec
and
aam
es
xor
lret
mov
push
cld
call
arpl
add
push
mov
mov
gs
and
rol
in
mov
cli
jp
js
leave
mov
add
fsubrs
mov
xor
lret
xchg
or
and
in
loope
push
lock
cmp
insb
add
and
mov
mov
mov
jo
adc
and
loope
in
mov
sub
add
movsb
jae
ljmp
dec
out
stc
xor
fwait
pop
cmp
or
push
fmul
jno
cmp
mov
xchg
and
add
xchg
cmp
shrb
dec
outsl
mov
mov
jge
xchg
dec
test
daa
inc
leave
xor
mov
aad
jecxz
std
inc
int3
pop
mov
es
mov
pop
push
xchg
pop
cmp
rclb
add
xor
out
lahf
mov
cmp
in
inc
rcl
mov
push
push
repnz
pop
cmp
push
jne
jne
lcall
add
or
add
push
notl
lock
pop
popa
push
aas
jns
mov
sahf
fcmovnu
jmp
jne
inc
loope
aas
mov
cltd
mov
aas
sub
fnstenv
hlt
pop
pop
ss
jmp
movsl
jge
inc
mov
dec
xor
lock
xor
popa
inc
jo
rcrb
leave
aam
xchg
or
adcb
shl
sarb
mov
push
sbb
mulb
mov
sbb
push
ja
jle
aad
andb
cmp
int3
mov
popf
mov
fcoml
cmp
mov
repnz
lea
ficoms
jo
mov
lcall
xchg
mov
pusha
test
sbb
dec
jb
stos
daa
lret
push
dec
inc
out
adc
xor
dec
mov
nop
xchg
inc
mov
and
xor
adc
popa
push
dec
or
das
fimull
ja
inc
in
std
inc
inc
push
push
stc
jmp
adc
scas
dec
add
lcall
xchg
sarl
ljmp
cmp
rol
shlb
mov
dec
and
xchg
mov
lea
pop
jns
rcrl
int3
int3
int3
and
inc
xchg
dec
popf
pusha
repz
sub
cs
inc
xor
cmpsb
vpmacsswd
fcmovbe
adc
add
mov
pushf
aad
mov
repnz
lret
sub
repz
mov
loop
mov
test
lcall
jns
lret
xor
sarb
repnz
or
lret
cmp
out
das
jmp
adc
jge
fwait
mov
xchg
outsb
sti
mov
and
mov
outsb
insb
gs
popf
roll
push
xchg
mov
aas
add
xor
jo
xor
loopne
push
jnp
lahf
movb
test
dec
dec
pop
pop
clc
push
adcb
and
push
mov
adc
mov
sbb
mov
push
pop
inc
and
or
dec
cmp
mov
pushf
or
push
xor
jbe
xchg
inc
dec
jns
push
lahf
jns
movsl
push
pushf
fiadds
cmp
cltd
or
adc
ret
lahf
in
mov
mov
les
xchg
test
inc
pop
jmp
out
or
dec
mov
xchg
inc
xchg
imul
mov
mov
xchg
lods
lods
mov
test
flds
push
jg
rol
inc
hlt
push
xlat
rcrl
int
int
inc
shlb
xor
test
testb
sbb
or
es
loop
mov
dec
mov
push
push
jecxz
mov
jb
mov
add
ds
adc
inc
jb
pop
in
jge
push
and
mov
das
sahf
hlt
rcrl
out
aad
jno
fs
outsb
aam
push
mov
jno
add
int
clc
popa
cli
scas
repz
jno
es
xor
jns
insl
inc
xchg
ds
fwait
add
lcall
inc
subb
mov
cmp
sbb
push
iret
mov
aaa
loope
push
nop
lret
jns
push
inc
std
mov
pop
ss
out
js
daa
cmp
or
add
inc
cltd
mov
mov
or
jmp
push
scas
orl
mov
test
das
fdivs
jno
mov
mov
xchg
mov
mov
fsubrl
es
add
pop
xor
int
sub
pop
sarl
mov
pop
inc
adc
cmp
mulb
sbb
pop
inc
inc
lock
adc
mov
lret
es
lret
push
jl
adc
and
fsub
mov
dec
inc
xchg
jge
jmp
stos
int3
int3
int3
push
dec
repnz
repnz
sahf
inc
xor
lods
subb
les
sbb
test
rcll
shl
lods
sub
dec
cmp
sbb
daa
les
in
es
in
xchg
add
notl
jecxz
xchg
je
sti
mov
dec
lahf
addr16
fcomi
dec
mov
fdivl
sub
mov
add
int3
int3
int3
int3
int3
jne
and
push
mov
push
cmp
les
push
lods
fucomp
jg
fwait
inc
xchg
add
stos
add
add
addl
jae
inc
jmp
jmp
adc
outsb
dec
push
shr
bound
lods
jns
in
push
and
fisttps
int3
or
lcall
inc
pusha
and
fsubs
add
daa
pusha
sbb
popa
loope
fnsave
and
or
nop
mov
test
mov
ret
mov
mov
data16
cmp
jl
mov
adc
jle
inc
and
addb
rcrb
sbbb
fisubrl
roll
mov
fs
adc
inc
leave
add
adc
and
enter
jbe
fcompl
sbb
jae
shrb
data16
dec
or
ljmp
sbb
xlat
in
in
mov
xchg
mov
cltd
mov
outsb
inc
ljmp
int3
int3
dec
pop
shrl
or
insb
inc
mov
push
add
cwtl
xchg
jecxz
imul
xor
sbb
aaa
add
jecxz
das
mov
mov
sbb
iret
icebp
pop
xor
xchg
add
pop
dec
gs
pusha
pop
sub
negb
cmp
ret
imul
das
dec
lea
xchg
push
xchg
dec
jb
mov
and
mov
mov
fmuls
or
jge
mov
add
sbb
js
outsb
adc
iret
jmp
out
cmp
jmp
int3
outsb
mov
mov
mov
scas
stc
repnz
mov
lret
ss
mov
mov
mov
or
fldenv
stc
pusha
add
into
roll
stc
movsl
jne
or
repnz
cmpsl
adc
shlb
cld
sbb
pop
or
pop
mov
adc
insl
lahf
daa
sbb
lock
push
std
frstor
aaa
lret
addb
push
xchg
mov
out
mov
rclb
adc
push
xchg
push
dec
stos
dec
minps
pop
dec
xchg
mov
xchg
sbb
or
cld
pop
add
bound
jmp
mov
jecxz
adc
jne
and
fwait
loope
or
dec
fnstsw
hlt
push
icebp
mov
dec
adc
sbb
push
pushf
lret
flds
out
cmpsb
or
into
mov
xchg
push
jne
inc
push
clc
jne
je
and
inc
shl
push
imul
sbb
jecxz
mov
xor
js
push
js
adc
pop
pop
add
in
clc
push
mov
cmp
xor
pop
sbb
andb
add
lea
sarl
mov
imul
andl
xor
push
and
arpl
sahf
call
add
dec
inc
in
jmp
scas
jecxz
xor
pop
sahf
dec
sbb
bound
jle
cmpsb
lods
mov
out
rcrl
add
dec
lea
fs
test
shll
cwtl
enter
dec
cmovl
les
int3
int3
jae
repz
lds
outsb
sar
mov
adc
xchg
xchg
push
and
push
std
imul
sub
mov
movsb
aam
jge
cmp
movsl
das
or
xor
stos
sbb
or
mov
inc
mov
mov
push
sbb
lret
int
leave
jae
jne
aas
jns
aam
call
mov
or
add
mov
xor
cmp
xlat
out
arpl
scas
push
mov
adc
adc
sub
mov
xor
loopne
lods
mov
dec
in
inc
insl
nop
pop
xlat
jp
mov
pop
cltd
dec
fdivr
fs
push
pop
pushf
rcr
icebp
fisttpl
jo
clc
lods
mov
dec
xor
aad
sbb
pop
pop
aas
fadds
inc
inc
fnstsw
mov
rclb
jae
push
jns
inc
dec
sahf
sbb
push
gs
inc
ja
sub
adc
add
inc
daa
movsb
mov
mov
stos
add
mov
addr16
cltd
icebp
lahf
dec
add
ss
mov
test
lds
mov
adc
jge
mov
incl
lock
push
dec
pushf
mov
fisubrs
push
fdivr
adc
sub
pop
jg
movsb
flds
fisttpl
dec
jbe
in
and
pop
mov
addr16
aad
das
add
or
sbb
repnz
add
mov
sbb
fcompl
dec
add
push
dec
inc
cmp
mov
adc
call
jg
push
cmp
dec
add
out
jns
adc
int3
in
pushl
test
shl
push
aad
pop
sub
xlat
addr16
pop
lods
rorb
pop
mov
dec
repnz
inc
mov
int
fbstp
add
movsb
scas
pop
xchg
in
nop
cli
pushf
or
test
bswap
dec
mov
je
testl
icebp
or
fcoms
xchg
loope
sub
mov
lret
mov
inc
andb
xor
lcall
mov
mov
pop
rcrb
mov
or
adc
sarl
mov
add
sub
push
in
cltd
das
lret
pop
mov
adc
jae
ja
int3
sub
je
jb
jae
dec
in
xor
in
inc
mov
jae
test
stos
les
fnstsw
xchg
push
scas
push
mov
sub
mov
mov
mov
add
sub
mov
mov
add
sub
sub
sub
sub
sub
mov
xor
mov
mov
add
sub
mov
sub
mov
and
add
add
cmp
je
imul
sub
sub
add
or
mov
add
sub
add
cmp
je
or
mov
and
sub
add
cmp
jne
add
jmp
sub
add
cmp
je
sub
mov
mov
add
leave
ret
int3
int3
int3
int3
push
mov
push
push
xor
mov
sub
sub
mov
push
or
sub
mov
cmp
jne
mov
ret
int3
int3
push
mov
add
xor
sub
or
mov
add
sub
add
and
cmp
jne
sub
mov
sub
mov
sub
mov
mov
mov
sub
mov
inc
mov
mov
mov
sub
cmp
jne
add
sub
sub
cmp
je
xor
mov
mov
add
xor
or
add
call
mov
add
mov
mov
and
add
and
mov
mov
add
shr
add
mov
add
xor
mov
add
sub
mov
sub
sub
xor
and
mov
sub
mov
sub
mov
cmp
je
pop
mov
mov
mov
sub
mov
mov
mov
call
add
mov
add
cmp
ja
sub
add
and
mov
add
xor
test
jne
mov
add
shr
mov
or
mov
sub
mov
mov
sub
sub
add
mov
push
add
add
ret
sub
xor
mov
mov
mov
sub
call
mov
sub
xor
add
and
cmp
je
mov
test
jl
mov
add
mov
mov
or
add
ret
inc
add
add
mov
mov
mov
xor
mov
sub
leave
ret
int3
push
mov
xor
or
add
xor
rol
xor
sub
xor
add
sub
mov
mov
add
mov
sub
xor
sub
mov
xor
add
sub
add
add
xor
sub
call
mov
sub
add
mov
xor
sub
xor
or
add
mov
mov
mov
sub
xor
add
mov
add
mov
mov
sub
xor
sub
add
dec
and
add
mov
ror
mov
sub
add
add
xor
call
sub
ret
mov
add
sub
mov
mov
dec
add
das
pop
add
pop
xor
adc
xor
dec
inc
jp
ds
sub
inc
jbe
inc
daa
inc
jb
sbb
outsl
sbb
add
jb
push
add
adc
pop
and
add
add
adc
ds
and
pop
adcb
cmp
add
mov
pop
add
add
and
xchg
jne
jnp
ss
cmp
outsb
cmp
adc
xchg
test
sub
sbbl
sbb
cmp
test
arpl
add
cmp
and
mov
pop
adc
mov
dec
daa
push
jne
bound
push
pop
add
pop
ja
mov
add
mov
mov
add
adc
sub
xor
xor
dec
jne
add
test
pop
and
add
add
add
inc
test
add
add
jle
cmp
pop
mov
cmp
cmp
and
add
imul
jp
xchg
inc
jg
add
cmp
jg
add
add
dec
xor
dec
insb
dec
mov
push
dec
adc
push
and
jg
add
jns
add
adc
and
mov
add
add
add
sub
aaa
dec
jne
add
sbb
inc
add
push
inc
and
inc
and
add
mov
cmp
sub
mov
push
xorb
add
xor
outsb
pop
addr16
adc
dec
daa
dec
outsb
adc
push
add
add
add
jg
test
add
and
outsb
popa
mov
popa
sub
and
add
andb
adc
aas
das
insb
add
cmpb
pop
daa
xor
add
add
add
cmp
insb
adc
add
add
jle
xor
add
add
sub
pop
dec
adc
pop
sbb
push
pop
es
jge
xor
data16
push
pop
and
inc
pop
data16
push
and
add
xor
add
add
cmp
add
add
sub
adc
add
add
add
jno,pn
add
aaa
dec
adc
jns
fs
add
push
dec
jl
sub
add
adc
pop
mov
jne
sbb
sbb
ds
inc
add
insl
push
sbb
pop
cmp
pop
add
adc
imul
pop
jg
pop
dec
add
inc
jg
ja
dec
add
sub
inc
add
inc
jle
push
inc
push
addl
sbb
jae
add
insl
inc
inc
jno
dec
sub
cs
mov
dec
das
jp
dec
mov
js
js
jns
inc
add
add
add
sbb
and
jo
inc
jle
add
addb
mov
xor
inc
dec
jne
pop
popa
aas
inc
add
cmp
dec
push
add
cmp
add
sbb
jne
test
pop
dec
add
add
js
push
add
test
je
dec
pop
jg
je
sbb
pop
cmpb
jbe
add
outsl
imul
inc
gs
sbb
test
inc
xchg
aaa
push
add
add
add
xor
inc
inc
sub
and
add
inc
xor
sbb
sbb
daa
cmp
and
xor
jp
test
cmp
push
jl
add
sbb
add
push
adc
add
pop
xor
lea
dec
adc
and
adc
sub
aaa
mov
add
add
add
adc
pop
sbb
jno
dec
and
outsb
and
add
add
insl
add
jo
pop
popa
push
lea
add
orb
add
subb
add
dec
add
sbbl
imul
orb
es
adc
je
pop
jae
jo
jle
dec
xchg
addb
popa
sub
add
pop
sub
pop
imul
add
dec
dec
add
add
mov
jns
pop
dec
sub
imul
adc
push
jg
sub
insb
dec
sbb
adc
xchg
xor
dec
pop
pusha
mov
push
pop
add
insl
imul
add
mov
push
sbb
jno
add
and
xchg
sbb
add
inc
jg
outsl
and
sub
sub
mov
pop
add
sbb
and
insl
sub
xor
push
pusha
dec
add
add
sbb
gs
insb
pop
xor
sbb
inc
add
push
jae
add
sub
jle
add
inc
inc
add
and
add
sub
cmp
imul
inc
pop
dec
adc
cmp
pop
mov
inc
cmp
add
push
jg
bound
pop
jbe
add
pop
insb
and
add
adc
inc
pop
xor
inc
add
add
inc
dec
add
inc
add
push
pop
add
dec
push
test
mov
and
mov
xor
add
popa
push
add
push
push
and
add
add
push
dec
jg
add
add
add
add
add
add
gs
cmpl
sbb
sub
jg
popa
add
add
push
add
mov
add
add
inc
outsb
cmp
pop
add
mov
jno
adc
add
mov
and
inc
add
mov
inc
cmp
push
xor
das
dec
add
mov
sbb
pop
sub
sub
outsb
add
imul
add
popa
xchg
insb
dec
xor
add
add
ds
inc
xor
pop
sub
sub
sbb
push
addr16
jge
cmp
dec
add
mov
add
data16
sbbl
bound
adc
pop
pop
jbe
pop
push
add
add
add
cs
add
push
and
mov
xor
add
dec
pop
sbb
add
pop
add
xorl
cmp
mov
add
push
popa
add
add
and
add
sbb
cmp
add
mov
mov
pop
cmp
adc
es
pop
push
xchg
inc
imul
popa
outsb
sbb
add
cs
push
pop
inc
push
add
dec
jp
imul
cmp
pop
dec
jnp
ss
inc
ja
xor
inc
push
je
inc
dec
add
dec
dec
and
adc
aaa
and
test
jl
cs
add
jnp
pusha
xchg
push
dec
add
daa
pop
add
add
jge
add
add
ja
add
jo
add
add
jge
add
and
add
popa
and
inc
push
cmp
dec
das
sub
dec
adc
add
pop
das
dec
popa
add
pop
jo
xor
sbb
dec
inc
add
je
and
add
sbb
mov
inc
push
push
add
xchg
and
ja
add
pop
jae
ja
xor
add
inc
dec
add
add
mov
mov
jg
daa
jge
jae
cmp
add
insb
addr16
sub
sub
add
add
add
add
add
add
outsl
push
dec
pop
ds
jae
xor
dec
add
cmp
xor
jno
add
add
push
pop
jl
mov
jl
add
jg
add
and
add
mov
imul
and
inc
sbb
add
je
add
arpl
add
and
sbb
js
cmp
and
add
inc
push
push
adc
cmp
je
inc
push
mov
adc
pop
addl
adc
dec
pop
das
subl
inc
pop
adc
add
push
cmpl
add
cmp
gs
sbb
addl
add
push
addb
push
xor
push
adc
pop
add
add
add
push
add
dec
pop
add
push
jl
dec
insb
cmp
dec
add
push
xchg
jno
push
adc
add
test
arpl
popa
sub
sub
jns
and
add
sub
add
inc
addb
xor
addl
add
test
sbb
das
andb
dec
add
jns
add
cmp
sbb
add
pop
jbe
add
data16
adc
mov
add
jns
inc
push
push
xchg
add
xchg
xor
sub
arpl
cmp
xor
lea
add
push
dec
adc
sub
xor
mov
xor
mov
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpw
jne
mov
cmpl
jne
cmpw
jne
cmpl
jbe
xor
cmp
setne
mov
ret
xor
ret
push
push
call
andl
lea
push
call
movl
mov
push
push
mov
call
push
call
mov
test
jne
push
call
pop
jmp
mov
push
call
push
push
test
jne
call
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
and
call
push
call
mov
cmp
je
or
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
call
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmpl
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
ret
push
call
xor
ret
call
pushl
call
pushl
call
push
call
add
ret
push
call
test
je
push
push
call
test
je
pushl
call
ret
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
cmpl
je
push
call
test
pop
je
pushl
call
pop
call
push
push
call
test
pop
pop
jne
push
push
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
test
pop
je
push
push
push
call
xor
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
je
mov
mov
mov
cmp
jne
pushl
call
mov
pushl
call
pop
pop
mov
mov
cmp
je
sub
mov
cmp
jb
cmpl
je
mov
call
cmp
je
push
call
pop
call
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
push
push
mov
push
push
xor
xor
cmp
je
inc
cmp
jb
cmp
jae
push
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
cmp
pop
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
pop
pop
ret
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
test
mov
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
push
inc
push
call
mov
cmp
pop
pop
mov
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
mov
push
xor
cmp
push
mov
mov
mov
movl
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
test
pop
je
incl
cmpl
je
mov
mov
incl
mov
inc
test
mov
mov
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
movsbl
push
je
call
test
pop
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
test
pop
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
test
pop
pop
je
andl
incl
leave
ret
push
mov
sub
push
xor
cmp
push
push
jne
call
push
mov
push
push
mov
call
mov
cmp
mov
je
cmp
mov
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
cmp
pop
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
push
push
xor
lea
inc
xor
push
mov
mov
call
cmpl
pop
jle
mov
jmp
push
push
call
mov
add
cmp
movzwl
lea
jbe
push
push
call
test
pop
pop
je
movzwl
inc
add
cmp
jb
jmp
andl
mov
pop
pop
pop
leave
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
mov
test
je
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
push
call
pop
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
mov
test
je
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
call
ret
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
mov
movl
xor
inc
mov
test
je
call
test
je
push
pushl
mov
call
mov
push
pushl
call
mov
mov
movb
movb
mov
mov
push
call
push
call
pop
andl
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
push
call
pop
ret
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
cmp
mov
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
cmp
mov
je
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
mov
push
push
push
lea
xor
push
mov
mov
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
pop
jne
cmpl
jb
xor
inc
leave
ret
push
pop
leave
ret
xor
cmp
push
sete
push
push
call
test
mov
jne
xor
ret
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
andl
jmp
xor
inc
ret
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
xor
push
mov
cmp
movb
movl
lea
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
cmp
mov
lea
mov
mov
mov
je
lea
mov
test
lea
mov
mov
je
mov
call
test
movb
jl
jg
mov
cmp
mov
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
pop
add
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
jmp
cmpl
je
push
push
mov
mov
call
jmp
push
mov
sub
mov
andl
andl
push
push
mov
cmp
mov
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
pop
mov
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
mov
mov
ret
push
lea
sub
mov
xor
mov
push
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
mov
lea
add
movl
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
add
leave
ret
push
mov
pushl
call
test
pop
je
pop
jmp
push
call
pop
pop
jmp
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
ret
mov
ret
add
push
pop
cmp
sbb
and
add
ret
call
test
jne
mov
ret
add
ret
push
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
cmp
pop
pop
jb
mov
sub
lea
cmp
jb
push
call
mov
cmp
pop
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
test
pop
pop
jne
lea
cmp
jb
push
pushl
call
test
pop
pop
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
push
call
mov
push
call
add
test
mov
mov
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
xor
lea
pushl
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmpw
je
xor
ret
mov
add
cmpl
jne
xor
cmpw
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzwl
push
push
movzwl
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
pushl
call
xor
inc
ret
push
push
call
xor
mov
pushl
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmpl
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
mov
ret
pushl
call
test
pop
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmpl
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
jb
orl
jmp
orl
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
pushl
call
mov
pushl
call
cmp
pop
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
movl
call
add
or
pop
ret
mov
test
push
mov
movb
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
push
push
pushl
push
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
push
push
mov
mov
push
xor
lea
push
push
call
mov
mov
mov
xor
lea
stos
stos
stos
mov
add
sub
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
lea
push
pushl
call
test
mov
je
xor
mov
inc
cmp
jb
mov
test
movb
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
add
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
push
mov
sub
push
xor
push
lea
call
cmp
mov
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
cmp
mov
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
push
push
xor
pushl
call
mov
test
pop
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
pushl
pushl
call
mov
test
pop
pop
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
js
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
dec
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fs
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
add
inc
add
cmc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
cmc
inc
add
inc
add
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
inc
add
testb
testb
testb
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
push
push
mov
mov
xor
cmp
push
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
lea
pop
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
mov
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
test
pop
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
cmp
jne
repz
jmp
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
push
lea
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
andl
ret
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
mov
test
je
sub
cmpl
jne
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
mov
je
testw
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
cmp
mov
je
mov
push
push
pushl
push
pushl
pushl
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
cmp
mov
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
push
mov
cmp
ja
push
mov
push
push
xor
cmp
mov
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
cmp
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
cmp
pop
jne
cmp
jne
xor
inc
add
and
push
push
pushl
call
mov
test
jne
cmp
push
pop
je
push
call
test
pop
jne
jmp
call
mov
call
mov
pop
mov
pop
pop
pop
ret
push
call
pop
call
movl
xor
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
andl
call
mov
xor
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
test
inc
add
pop
inc
add
pop
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jnp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xchg
sbb
pushf
sbb
test
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
xor
inc
add
inc
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
inc
add
sbb
in
inc
add
sbb
hlt
sbb
cld
sbb
add
inc
add
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
inc
add
sbb
dec
sbb
pop
sbb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
test
pop
pop
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
cmp
movl
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
push
push
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzbl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
or
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
push
mov
xor
cmp
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
movsb
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
mov
add
cmpsb
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popl
add
add
push
popl
add
add
je
add
xchg
add
mov
popl
add
popl
add
popl
add
popl
add
nop
add
push
nop
add
inc
xchg
add
cs
add
push
xchg
add
push
xchg
add
cld
xchg
add
out
add
ficoml
add
rclb
add
xchg
add
mov
add
je
add
pop
xchg
add
dec
xchg
add
xor
add
sbb
add
in
xchg
add
aam
add
mov
xchg
add
mov
xchg
add
aam
add
loopne
add
repnz
add
add
add
push
xchg
add
and
add
xor
add
dec
xchg
add
xchg
add
adcb
add
xchg
add
rclb
add
clc
xchg
add
push
xchg
add
adc
add
xchg
add
inc
xchg
add
push
xchg
add
push
add
js
add
xchg
add
add
add
add
add
add
add
add
adcb
add
xchg
add
cld
xchg
add
out
xchg
add
ficoml
add
mov
xchg
add
cwtl
xchg
add
test
add
xor
add
push
xchg
add
ss
add
sbb
add
or
add
out
add
fcoms
add
mov
nop
add
add
add
cmp
add
dec
xchg
add
js
add
mov
add
sub
add
xchg
add
lods
loopne
add
inc
add
adc
add
lds
sbb
jo
ret
daa
jecxz
int3
enter
push
sbb
scas
jne
push
sbb
je
aam
ret
mov
cs
int3
jae
negb
fbld
push
sub
push
mov
or
cmc
jmp
cmc
mov
pop
xchg
or
popf
fistpll
adcl
cmpsl
mov
je
mov
jbe
pusha
ret
pushf
mov
outsl
into
jno
jl
xchg
fs
inc
rorl
push
dec
sarb
out
mov
or
mov
ja
fadd
adc
mov
mov
mov
bound
dec
adc
mov
xor
mov
aaa
or
into
push
add
xorb
mov
cmp
push
rclb
pop
js
test
aaa
fs
cwtl
mov
or
dec
inc
arpl
sbb
lahf
mov
dec
addr16
adc
xchg
test
xchg
mov
sub
int3
dec
popa
mov
rcrb
push
jge
aas
adc
call
mov
sbb
arpl
jnp
sub
cmp
fdivp
inc
lret
pushf
and
sbb
add
enter
xchg
arpl
push
dec
xchg
lret
pop
push
jns
sbb
daa
add
pushf
inc
mov
xor
cltd
inc
mov
shrd
or
lret
xor
out
xor
mull
mov
inc
inc
dec
jl
lock
rcrl
sar
aaa
in
lods
add
jmp
nop
pushf
push
xchg
adc
dec
sbb
dec
mov
adc
std
mov
jne
mov
int3
mov
sub
ljmp
loop
xchg
shrb
imul
push
ret
or
in
dec
cwtl
insl
mov
adc
mov
mov
dec
mov
mov
movsl
fucomp
aas
xor
xor
lods
xor
adc
mov
jecxz
or
les
add
bound
xor
flds
jns
dec
inc
neg
notb
jbe
and
mov
out
enter
popa
sbb
push
push
push
test
jmp
inc
ljmp
in
sub
or
je
loop
bound
cltd
cmpsl
scas
sbb
incl
push
loop
mov
inc
inc
cmp
xchg
sub
das
jecxz
enter
ret
sub
mov
sub
fildll
and
mov
dec
lret
cli
fisttpll
mov
das
lods
dec
lret
add
mov
xor
cltd
dec
sti
or
jmp
sbb
cmpsb
mov
cmp
cmp
fcmovbe
cmp
xchg
rclb
xor
add
aam
out
out
pop
rcrb
or
mov
mov
mov
add
dec
orl
jae
leave
es
cs
xlat
lods
mov
bound
dec
aas
ret
je
push
rol
jge
ljmp
and
shll
popf
dec
test
jmp
cld
cmp
dec
movsb
xor
or
addr16
or
mov
adc
pop
cmp
jbe
addb
aaa
ja
out
orl
or
mov
mov
cmp
in
adc
test
or
xchg
and
movsb
sbbb
inc
jg
call
fidivrl
aam
test
adc
jle
fnstenv
and
scas
mov
jo
xchg
jg
mov
add
dec
jbe
cmp
lahf
in
scas
cwtl
daa
pop
xor
jecxz
mov
adc
jg
iret
jae
mov
push
sub
sub
test
in
and
dec
push
stos
iret
faddp
dec
es
mov
push
jno
inc
ret
cwtl
movsl
sub
addr16
inc
add
mov
ret
jo
fimuls
add
in
cmpsl
pop
sbb
inc
mov
pushf
push
leave
movsl
stos
mov
or
adc
adc
dec
xchg
rorb
mov
int
int3
int3
int3
int3
ss
sbb
mov
and
stc
inc
pop
jl
adc
jne
jb
call
mov
pop
push
or
push
cwtl
and
and
mov
ret
std
add
adc
push
icebp
jno
fidivrs
sub
in
lods
pop
rcrb
jmp
ficompl
and
test
scas
shlb
lds
mov
mov
jne
mov
aad
add
push
sub
scas
imul
pop
cmp
rcrl
enter
rcrb
and
push
lock
aas
xchg
jne
add
dec
add
mov
lea
pop
ds
andb
mov
int
out
pop
sub
cwtl
mov
inc
repz
scas
lret
xchg
scas
or
adc
decb
push
dec
ffree
ljmp
test
xchg
sub
pop
aaa
pop
stc
cmc
mov
xchg
jns
or
pop
inc
inc
repnz
push
fs
call
lahf
arpl
mov
adc
push
loop
arpl
in
es
xor
ror
lcall
dec
cmp
sbb
push
insl
push
mov
sti
adc
pop
fbld
lds
enter
push
shlb
jle
mov
stos
or
fndisi(8087
out
cltd
arpl
adc
bound
pop
rol
arpl
pusha
push
add
loopne
cmp
add
jnp
bound
push
int3
mov
mov
jbe
jne
std
mov
leave
jmp
filds
lds
ja
add
jp
mov
int
xchg
dec
imul
imul
scas
cmp
add
mov
mov
cmp
outsb
xor
push
adc
push
pop
sbb
ret
sub
push
dec
aam
xchg
mov
push
sub
push
push
decb
clc
in
shrl
push
xrelease
inc
mov
xchg
pop
popa
movsb
rcrb
int3
push
add
push
inc
xchg
int
inc
dec
mov
dec
sbb
mov
icebp
pop
xchg
inc
push
jl
mov
cltd
outsb
inc
shl
add
pushl
jbe
xchg
arpl
cwtl
enter
shr
scas
repnz
int3
jne
test
div
lret
xor
aad
outsl
fiaddl
xlat
out
cld
adc
or
and
cmp
push
or
in
dec
roll
pop
js
push
mov
dec
push
leave
inc
cmp
shll
jmp
imul
out
and
rcll
jl
push
xor
xor
add
int
xlat
es
mov
and
rcr
mov
ret
or
jae
push
insl
cmpsl
call
dec
insl
inc
dec
loop
and
movl
test
mov
jmp
sub
cmpsl
dec
pop
mov
int3
iret
jle
fldcw
into
xchg
test
ds
xorb
mov
xor
fsubrl
in
xchg
inc
out
fcmovnb
add
inc
std
sbb
lret
mov
test
out
ja
arpl
sub
push
loopne
aaa
ret
sbb
mov
and
push
cmp
ja
scas
mov
pop
fadd
int
cltd
sbb
jle
pop
int3
int3
int3
int3
int3
dec
inc
and
mov
jbe,pn
xchg
call
cmp
inc
fld
or
out
fildll
and
sub
xchg
sbb
mov
imul
movsl
dec
push
jb
in
xchg
jle
lcall
insb
sbb
pop
and
mov
push
neg
lods
iret
push
int
in
lret
jp
and
inc
pusha
pop
add
rorl
int3
cmp
inc
shrl
pop
adc
jb
cmc
cltd
inc
xchg
and
inc
repnz
je
push
push
xor
sub
sbb
jle
icebp
lods
repz
insb
popa
dec
decl
lcall
pop
lods
sbb
jno
mov
push
fwait
jmp
push
inc
mov
mov
add
dec
dec
rcrl
imul
fs
sub
inc
adc
push
fwait
mov
fcoms
pop
or
jle
xor
jge
test
dec
adc
enter
aaa
or
mov
imul
pop
cmc
js
sub
sub
or
jns
sub
dec
xor
and
inc
xchg
jmp
test
dec
test
adc
test
mov
sub
jbe
out
lcall
sub
sub
mov
xor
cmp
cmp
cmc
movsl
daa
sbb
pushf
mov
or
lret
inc
sbb
push
xor
testb
inc
pop
repnz
xchg
clc
pop
jp
and
mov
add
sahf
test
dec
sub
sarb
nop
or
fwait
popw
insl
pushf
jb
sarl
mulb
aaa
xorl
adc
mov
push
and
dec
int3
or
mov
mov
mov
rorb
xor
outsb
mov
lea
dec
jnp
or
inc
pop
push
pop
loop
mov
mov
dec
sbb
mov
push
pushf
les
scas
out
sub
inc
clc
mov
loopne
xchg
insl
fldenv
mov
or
movsl
lds
addl
fsubs
popa
pop
xchg
pop
jne
imul
sbb
add
lret
xor
rcr
sarl
push
add
sbb
dec
dec
cmp
les
daa
cmp
push
repz
aad
or
sub
call
mov
pushl
mov
or
sub
add
flds
add
inc
addr16
inc
int3
int3
int3
int3
int3
mov
test
test
dec
ja
sub
das
push
aaa
or
pop
idivb
and
push
jecxz
imul
sub
cs
aam
subb
fwait
and
dec
lock
dec
sub
jo
sarb
ja
in
fwait
dec
cmp
dec
or
jecxz
lahf
dec
push
jl
push
fadd
movsl
leave
test
ljmp
xchg
xor
sbb
sbb
arpl
cmp
adc
mov
idivl
loop
mov
int
mov
ret
mov
xchg
pusha
out
lock
ds
addr16
inc
jnp
jmp
sub
out
xchg
stos
inc
outsb
pop
into
pushf
ds
daa
jnp,pn
sti
mov
cmpsb
insw
push
outsl
mov
cmpb
popf
xor
pop
nop
adc
sub
mov
add
mov
and
popl
mov
mov
adc
mov
mov
add
xchg
out
push
push
mov
daa
adc
fs
test
gs
clc
adcl
fs
mov
mov
add
repnz
push
pop
lds
int3
push
push
or
and
or
jbe
scas
ds
aad
ja
add
pand
jl
pop
mov
xchg
xor
arpl
pusha
fidivrs
loope
mov
cmp
sub
mov
jmp
or
stos
pop
pop
pop
sarb
pop
inc
dec
sbb
push
fistpl
cwtl
mov
mov
xchg
jecxz
push
and
dec
aaa
retw
pop
and
std
jo
dec
int
adc
jle
jecxz
mov
lcall
and
jb
fsubl
cwtl
sahf
cld
sub
xor
xchg
pop
push
clc
rorl
icebp
outsb
dec
sbb
dec
inc
push
std
stos
pop
sar
fcoms
repnz
mov
adc
insl
in
jno
lcall
roll
dec
xchg
sarb
into
mov
lods
push
es
mov
ljmp
pop
pop
and
mov
movsb
in
lret
xor
inc
push
xor
inc
stc
rclb
aam
xchg
stos
fcmovbe
add
xchg
inc
enter
push
push
mov
push
aas
cwtl
jnp
sub
cmp
rol
add
lret
sbb
mov
mov
sub
mov
and
outsb
cmp
mov
xor
mov
in
adc
fmuls
sti
int3
mov
push
cmpsl
pop
xchg
sub
pop
xlat
cmpsl
xlat
xchg
lds
or
mov
enter
inc
sub
inc
scas
add
xchg
mov
call
jl
call
mov
cmp
pop
cmc
lock
das
cmovno
faddl
cltd
dec
mov
jns
xor
out
sbb
mov
cld
loop
adc
mov
stos
fimull
lahf
test
adc
scas
stos
aad
mov
aam
jmp
dec
add
or
enter
cmpsb
sbb
xchg
xchg
and
ds
stc
in
cld
pop
mov
inc
lds
mov
fildl
movsl
aas
mov
xchg
and
pop
adc
jno
push
xchg
in
mov
fadd
mov
sbb
sub
shlb
or
or
push
push
push
cmp
stos
cmpsl
cmp
mov
push
idivl
add
sti
inc
jle
cmp
jge
pop
rol
in
mov
stos
test
jge
push
pop
mov
callw
adc
or
pop
cltd
pop
mov
icebp
pop
xchg
mov
inc
fisttps
test
in
inc
cmp
ja
daa
sub
ljmp
pop
insb
mov
pop
aas
pop
ljmp
jecxz
mov
jne
sbb
xchg
xchg
arpl
dec
bound
in
xor
test
aas
lds
lods
stos
daa
aas
enter
mov
dec
ret
mov
popa
jge
shlb
cwtl
out
push
inc
addb
inc
jnp
pushf
dec
pusha
lret
mov
int
push
xor
clc
lds
dec
add
mov
xchg
mov
fdivs
sub
push
or
push
inc
mov
cs
dec
out
lods
dec
pop
inc
and
jns
cmp
cld
mov
xchg
aam
adc
int
testb
mov
adc
notl
jecxz
inc
imul
outsl
xorb
ja
fbld
xchg
inc
ffree
and
mov
inc
cmp
sbb
mov
sahf
xchg
adc
adc
push
inc
cmpsb
mov
rcr
lret
jno
dec
cmpsl
fistl
push
jl
pop
andl
icebp
test
mov
int
push
leave
decl
dec
mov
adc
inc
stos
xchg
ss
mov
sbb
es
data16
iret
mov
sub
push
dec
xchg
add
or
hlt
dec
jae
rcrl
pop
mov
push
adc
imul
inc
out
or
lahf
sbb
pop
lcall
rcr
ss
and
push
mov
ret
mov
cmp
xchg
loope
add
jbe
xor
pop
sahf
inc
pushf
bound
out
or
mov
inc
dec
mov
mov
and
push
dec
rclb
mov
xlat
pop
std
cs
cmp
dec
cwtl
cwtl
ffreep
insl
mov
rclb
jne
rcll
xlat
nop
fisubrs
dec
xchg
rep
daa
test
in
cli
in
fisttpl
pushf
int
sub
call
adc
pop
push
ljmp
add
dec
mov
jns
loop
push
out
imul
inc
xchg
cmpsl
jmp
adc
and
push
adc
insb
mov
call
jbe
push
mov
adc
cmp
inc
cmp
lcall
push
jno
mov
xchg
loope
clc
cmpsl
jl
hlt
loope
xchg
pop
fs
mov
pop
sub
and
cs
cwtl
les
loop
out
jnp
sbbb
cwtl
jae
jbe
cli
inc
imul
andl
dec
mov
icebp
adc
daa
mov
in
dec
add
cmp
mov
jno
jne
add
adc
xchg
aas
loope
shll
xlat
stos
dec
mov
mov
aas
cmpb
push
xlat
jmp
jp
adc
dec
xor
jge
lds
loope
push
dec
jno
and
out
testl
dec
aaa
jnp
xchg
jns
rcrb
jno
imul
stos
pop
cmpsb
dec
scas
lds
sbb
addr16
stos
fwait
and
fildl
lret
sbb
ficoml
mov
imul
mov
sti
sahf
adc
adc
jbe
lds
int
cmp
add
xchg
lock
in
sub
cmp
xor
bound
test
xor
or
sub
gs
jb
outsb
mov
mov
rclb
sahf
out
pop
xor
int
fldt
lds
insl
dec
repz
mov
rcll
in
jo
xor
repz
xor
lahf
cmp
jmp
xlat
sub
nop
or
inc
xor
push
sbb
int3
int3
int3
int3
enter
outsb
aaa
iret
push
fcmovnbe
test
fyl2x
sub
insl
lcall
dec
pop
and
jge
pop
dec
loopne
push
pop
fiaddl
popf
adc
rorl
stos
xchg
daa
dec
jae
cmp
inc
popl
mov
lds
xor
adc
mov
lcall
dec
push
les
xchg
rcrw
or
pop
jns
mov
packuswb
pushf
add
and
ss
sti
mov
pop
add
and
cmpsl
mov
add
gs
pusha
notb
mov
lret
stos
adc
and
adc
das
and
enter
xchg
cld
add
or
add
leave
je
xor
adc
or
loopne
fnstsw
and
jns
pushf
imul
mov
repnz
jecxz
fdivl
repnz
stc
fldcw
push
js
dec
and
pop
imul
dec
aad
mov
xchg
test
es
inc
fdivp
cmpsb
xchg
scas
scas
jmp
inc
aaa
cmpsb
orb
es
out
into
fwait
jo
xchg
call
or
mov
dec
cmpsb
mov
cwtl
add
xchg
adc
xor
fsubl
insb
dec
movl
cmp
mov
xchg
or
roll
cmpl
xchg
in
in
mov
dec
mov
lcall
ljmp
cwtl
sbb
das
xor
dec
dec
mov
add
insb
mov
dec
xchg
lods
ficompl
dec
sbb
or
mov
sbbb
cmp
pop
inc
mov
call
xchg
mov
cmp
addb
sbbl
cmp
shl
mov
adc
cwtl
inc
sti
or
popa
fildl
pop
sbb
cmpsl
rcr
decl
pusha
fstl
push
pusha
lret
sbb
test
sbb
pop
daa
orb
lock
and
dec
hlt
es
pop
in
dec
pop
mov
xlat
lcall
cmp
push
sub
popa
or
popa
das
jg
xor
jmp
jmp
xchg
jge
xor
in
sbb
in
or
fs
movsl
aaa
imul
sti
lods
pop
xchg
sbb
mov
jle
and
push
mov
xor
sarb
orb
adc
dec
mov
hlt
or
or
push
ret
iret
pop
jmp
mov
push
cld
aaa
pop
xchg
xor
push
adc
adc
js
dec
mov
icebp
push
mov
in
mov
dec
and
add
mov
test
mov
cld
cmpsl
roll
cwtl
adc
out
insb
test
jns
rcl
push
mov
and
loopne
imul
xchg
mov
add
adc
or
or
mov
jae
jl
push
test
xchg
mov
jg
out
cltd
lret
clc
stos
loop
or
cmp
mov
nop
adc
sbb
lods
or
inc
mov
xchg
in
push
ret
sub
add
mov
pop
xchg
sbb
push
mov
adc
aam
push
jbe
mov
inc
jne
sbb
jns
int3
int3
int3
int3
inc
sbb
push
pop
push
inc
xor
add
mov
xor
pop
mov
mov
cmp
mov
lds
inc
adc
cs
es
sub
pushf
inc
sub
sbb
dec
incl
sahf
fsubrs
bound
lcall
fsubr
mov
lds
jmp
inc
inc
push
aad
ja,pt
lcall
cwtl
cs
loope
sbbl
cmp
in
xchg
xorb
mov
mov
inc
inc
out
adc
stos
xchg
daa
jmp
cmpsb
in
fwait
cwtl
jns
xchg
into
xlat
pop
enter
mov
push
stc
or
push
sti
mov
aam
and
in
cmp
or
cltd
and
mov
bnd
stc
daa
or
push
jo
cmp
xor
xchg
jbe
jne
scas
sbb
pushl
xor
mov
cwtl
xor
xor
sarb
arpl
into
std
dec
ja
dec
mov
add
push
inc
mov
fmulp
aam
std
sub
dec
sarb
mov
and
jge
jle
les
in
sub
dec
leave
mov
loope
rorl
cltd
das
daa
hlt
jl
push
ret
aaa
dec
sbb
aad
clc
mov
cltd
pop
dec
inc
mov
sbb
sbb
push
mov
es
les
adc
dec
sub
je
xchg
or
push
xor
jae
xchg
xlat
jno
or
mov
xor
push
ja
das
mov
xchg
pop
jge
fdiv
outsb
xchg
in
add
call
push
mov
mov
ja
mov
mov
mov
test
xor
push
lahf
dec
sub
mov
mov
mov
pop
lea
movsl
or
and
sub
push
data16
jge
xchg
mov
inc
sti
iret
es
movsl
xchg
mov
cltd
lods
leave
sub
jne
push
fdivs
repnz
jp
out
jl
xor
int3
int3
int3
push
sbb
hlt
push
ds
xor
xchg
push
mov
dec
rclb
dec
les
mov
int
mov
mov
loope
xchg
cwtl
rcll
or
mov
cmc
dec
les
outsl
loope
push
cmp
loopne
mov
out
data16
mov
xchg
cmpsl
cltd
decl
fcoms
xor
out
xchg
mov
and
pusha
vsubsd
pop
ja
out
stc
imul
or
and
ja
cvtps2pi
in
mov
insb
lret
push
mov
add
lret
push
xlat
jmp
xchg
stos
xlat
lds
testl
push
sub
sarl
cmc
sub
cmp
mov
or
jne
mov
enter
mov
pop
lcall
xchg
sahf
adc
adc
clc
imul
ds
fisttpll
mov
xchg
fmuls
dec
out
add
dec
out
adc
pop
add
adc
sub
enter
and
mov
incb
and
adc
mov
jb
xor
movsl
push
xor
xor
flds
inc
lret
ss
fcomps
mov
fwait
scas
push
cltd
test
jne
push
cmp
push
fs
sar
faddl
lods
mov
pop
cmp
jo
dec
adc
mov
lods
sbb
bound
out
mov
sbb
lock
das
insb
inc
xor
int3
int3
les
push
jmp
aaa
fiaddl
xor
adc
cmp
mov
mov
icebp
or
cmp
lods
dec
testl
xchg
mov
pop
mov
mov
int3
mov
jb
cmc
dec
clc
hlt
icebp
cmp
les
jmp
shl
push
loope
and
hlt
aam
or
sbb
lcall
push
xchg
and
add
pop
nop
jbe
jl
gs
pop
mov
in
clc
adc
push
push
jmp
xor
lret
push
push
push
cmp
bound
fsts
stc
push
add
and
push
inc
cmp
xchg
and
daa
add
movsl
sub
jmp
in
fdivrl
xchg
or
sbbb
mov
js
pop
es
push
pop
mov
pop
or
mov
adc
inc
push
inc
lcall
inc
lods
lret
xor
push
loopne
lcall
dec
push
and
sub
cltd
pushf
mov
sbb
xlat
lods
adc
cld
in
add
dec
cwtl
mov
decb
dec
sbb
scas
ds
stos
inc
jns
call
dec
pusha
pusha
mov
sbb
test
cmp
jg
enter
jo
aam
xor
cmp
outsb
fdivrl
aaa
dec
cmp
or
pop
sbb
cmp
xor
sahf
xchg
cwtl
leave
outsl
cmp
stos
shlb
add
or
imul
int3
int3
int3
stos
pop
clc
or
push
add
fisubrs
pop
lret
or
dec
inc
xchg
mov
data16
adc
jg
pushl
stc
xchg
adc
mov
dec
cmp
enter
cmc
jae
lcall
std
roll
aam
adc
cmp
push
mov
dec
mov
rorb
repnz
shrb
push
sbbl
xchg
sub
sub
scas
pop
jnp
adc
mov
mov
inc
out
sahf
xchg
ret
insb
bound
jg
cmpsl
nop
pop
popf
inc
inc
insl
xor
aas
sbb
aam
enter
dec
pop
punpckldq
stos
push
mov
cwtl
leave
mov
loopne
xor
icebp
das
scas
ss
dec
add
dec
pop
adc
lock
pop
xchg
rolb
and
mov
addl
adc
dec
shl
icebp
dec
and
lods
sub
mov
cmp
pop
jbe
lret
das
das
das
ja
mov
iret
fstps
or
nop
subb
rol
cwtl
mov
rcrb
jl
ret
ja
sbb
xchg
movsb
lods
mov
push
add
and
sub
in
stc
mov
or
dec
out
jg
cld
pop
lahf
nop
popl
cmp
lret
addl
call
ss
int3
int3
int3
int3
scas
loop
xor
cmp
jg
cwtl
sub
dec
rol
xchg
test
sub
jp
cmp
mov
xchg
daa
pusha
pop
and
mov
sbb
sahf
faddl
xor
xor
sar
movsl
xchg
xchg
scas
push
or
sub
pop
push
xor
jb
dec
test
xor
sbb
out
mov
or
xor
out
mul
mov
cmp
sti
push
jae
cmpsl
sub
dec
push
adc
dec
pusha
insb
xchg
sti
ja
jns
add
mov
out
cmp
push
xlat
pop
lods
mov
out
cli
out
pop
lret
arpl
mov
xorb
sub
in
and
mov
pop
or
add
cltd
add
jmp
sub
int3
and
loopne
cli
sub
stos
mov
cmp
fwait
pop
add
add
push
mov
or
je
or
xchg
sbb
test
jg
fists
xchg
loopne
adc
movsb
jae
stos
xchg
xchg
cmc
daa
js
mov
pop
xchg
cs
or
adc
test
insb
sbb
pop
sbb
pop
jb
jns
andb
loopne
push
pushl
push
cmp
inc
pop
or
gs
out
rorb
dec
repz
test
cmpsl
inc
lcall
fs
sbb
push
cmp
iret
push
add
mov
negb
or
xchg
xchg
lcall
ret
ret
pop
in
adc
lret
sub
fadd
mov
fildl
mov
test
cmpsl
and
mov
sub
dec
mov
jo
mov
outsl
add
loop
sbb
insb
dec
push
sub
mov
insb
sub
xchg
mov
pop
aam
orb
inc
cs
int3
int3
int3
add
cs
shlb
mov
stc
xchg
mov
outsb
dec
cmp
mov
sbb
xchg
mulb
push
xchg
fs
cmp
test
movb
push
mov
enter
mov
mov
fnstsw
cmp
lods
and
mov
dec
dec
cld
sub
movsb
mov
popf
mov
push
shlb
je
mov
dec
cmp
sbbb
lds
lret
cmpsl
push
pusha
sbb
adc
pop
lret
repnz
je
inc
out
hlt
cmp
pop
xorl
mov
or
js
sub
jle
pop
xchg
xchg
andb
es
pop
jl
aaa
jo
fstl
pop
adc
jl
inc
cli
loop
push
loop
je
stos
pop
lods
fsubrs
rorl
gs
hlt
and
pop
fbld
ret
fbld
push
test
jmp
adc
shl
push
adc
bound
sbb
rcr
cwtl
adc
ds
fisttpll
roll
fmull
jg
jo
loope
or
loope
cs
xor
mov
and
xor
sub
and
arpl
mov
fistl
and
dec
divb
dec
test
ljmp
scas
sub
pushl
xchg
and
fisttps
cmp
or
mov
sbb
dec
les
pop
push
pop
fnsave
in
cmp
ss
es
inc
inc
push
ret
test
sbb
push
mov
scas
xor
jne
popf
outsb
push
aam
jle
pop
rcr
outsb
cltd
jmp
fisubl
mov
mov
and
push
jg
out
pop
jnp
xchg
mov
aaa
nop
sbb
push
xor
push
add
setae
arpl
xchg
loope
mov
scas
stos
jo
pop
test
sahf
scas
dec
adc
inc
insl
mov
sbb
xor
sub
mov
lret
into
loop
gs
xchg
or
pusha
inc
push
popf
aad
mov
sbb
pushf
dec
arpl
incl
pop
xchg
test
incl
jge
sahf
in
inc
push
and
sub
add
dec
fmull
adc
out
xor
enter
xchg
cmp
xor
pinsrw
mov
and
push
imul
cmp
xor
stc
inc
cwtl
nop
add
mov
cmc
pop
call
fildll
ds
popf
inc
inc
int3
pop
mov
or
adc
pop
mov
cmp
and
jns
gs
int3
int3
int3
inc
cmpsb
cmp
push
mov
shlb
mov
cmpsl
cmc
clc
adc
push
scas
subb
loope
or
sbbb
lret
pop
inc
mov
call
shlb
push
jbe
arpl
cmc
mov
add
jle
or
ss
int3
cmp
sub
inc
daa
lret
inc
push
push
mov
inc
xchg
aam
jbe
jge
mov
ret
push
inc
imul
ret
push
dec
ljmp
add
sbb
decl
stos
cmp
jbe
test
push
add
pop
jecxz
orl
aad
loopne
push
cld
test
and
inc
ljmp
scas
push
cld
inc
je
dec
addb
loop
fwait
sub
cmp
add
sbb
repnz
punpcklwd
or
or
jb
xchg
pop
ret
mov
mov
mov
sar
icebp
push
aad
and
aas
add
ljmp
fs
movsb
movsl
loopne
fidivs
xor
outsl
mov
ljmp
push
xor
cmp
or
push
call
mov
jno
or
fstl
fadds
mov
fwait
cmp
push
push
fsts
int
adc
or
dec
std
dec
lds
jnp
ret
call
add
dec
dec
dec
push
and
ds
repz
adc
aam
lahf
jnp
inc
mov
test
pusha
iret
and
pop
sub
repz
xchg
stos
xor
mov
mov
dec
stc
enter
rcll
repnz
ja
sarb
pop
add
clc
and
loope
inc
cld
ds
dec
and
inc
push
test
cmpsl
arpl
es
or
test
lret
dec
popf
cbtw
lods
hlt
gs
mov
popf
add
xor
pop
ret
subb
decl
inc
lods
das
aaa
and
inc
add
sbb
pop
pushf
xchg
lret
ret
fabs
mov
cs
jl
loopne
ret
aaa
xchg
pop
jnp
cld
cs
xchg
adc
in
fwait
mov
lea
mov
aaa
lods
or
stos
leave
sbb
or
nop
ficoms
sbb
loop
subb
stos
jp
shlb
sbb
and
fwait
repz
aam
loop
pop
mov
and
push
fucomp
xor
inc
pop
hlt
sbb
push
sub
fistpl
or
cltd
dec
add
insl
or
mov
clc
lea
cmp
lret
loop
aaa
xor
push
inc
pop
fisttps
add
jmp
adc
xchg
cmp
lds
jg
xchg
mov
fnsave
iret
lahf
mov
in
dec
inc
jb
or
add
cmp
xchg
test
cli
xchg
ds
decl
mov
cmp
dec
jns
pusha
enter
pop
pusha
insl
pop
jno
imul
adc
test
pop
xchg
xchg
mov
push
arpl
mov
lahf
jmp
shlb
jmp
push
outsb
xor
adc
or
lods
cmp
mov
mov
push
pop
mov
fwait
les
rolb
cli
nop
mov
popf
aas
sbb
and
in
pop
fnstcw
test
les
sbb
shll
pop
fildll
dec
push
pushf
imul
inc
imul
jl
or
int3
int3
int3
int3
sbb
imul
out
cld
cmp
ret
std
mov
test
movsb
jmp
rclb
pushf
sbb
jmp
mov
xchg
ret
pop
adc
dec
sub
xchg
jbe
cld
fildll
iret
push
sub
repz
jo
fs
jns
dec
sub
adc
ljmp
mov
pop
insl
xor
push
test
adc
cmp
xchg
stos
push
out
dec
fs
or
pop
test
loope
xchg
push
adc
in
dec
push
mov
sub
cmpsb
gs
jmp
lret
jae
mov
adc
pop
stos
jge
lds
inc
in
fsubl
mov
and
jecxz
sbbb
fmulp
das
push
ljmp
dec
pop
dec
mov
in
inc
loopne
xchg
pop
sbb
sahf
lret
add
mov
es
inc
test
mov
sub
add
mov
fucom
int3
mov
mov
leave
sbb
imul
rorb
enter
add
push
sub
in
add
stos
repz
cmp
aam
test
pop
cmpsl
loope
inc
mov
jno
test
cmp
leave
js
ret
mov
pop
dec
loope
push
mov
sbb
loopne
or
mov
pop
push
mov
sbb
repz
sbb
push
sbb
jge
push
pusha
movsb
lds
pop
mov
popf
int3
int3
sub
mov
cmp
js
jmp
sbb
out
mov
mov
adc
inc
jnp
inc
lds
dec
or
ja
stos
stos
mov
pusha
lods
pusha
sarb
in
std
lods
lds
pop
or
add
xchg
sti
aam
adc
and
mov
dec
lahf
loop
and
rcrb
inc
xlat
push
repz
ss
push
enter
lds
push
cmp
mov
ja
push
cmp
xor
sub
push
inc
mov
or
or
pushl
idivl
inc
in
mov
mov
cmova
jb
jne
imul
hlt
pop
pop
test
xchg
scas
test
mov
inc
subl
jo
rcrb
and
pop
fstpl
ret
jmp
js
fs
push
ds
fcoms
test
xor
lahf
dec
ja
test
push
xchg
int3
in
into
inc
pop
repnz
mov
cmpl
xor
jl
mov
jae
xchg
add
sub
cs
test
dec
pop
aaa
ljmp
loop
sahf
in
push
jmp
ret
adc
push
fistl
pusha
jnp
jg
mov
jle
inc
clc
out
pop
mov
cmp
add
dec
mov
cwtl
sub
pop
jmp
ss
mov
jae
mov
sti
int
push
pop
cmp
push
sti
or
push
in
lods
adcb
add
add
jp
stos
jbe
test
push
je
mov
shll
xor
jne
arpl
leave
xchg
mov
mov
mov
in
dec
mov
shl
in
push
xchg
dec
stos
adc
sbb
fwait
push
add
fcmove
lcall
dec
ret
jmp
stc
xchg
pop
push
mov
mov
fistpl
hlt
ss
int3
int3
int3
int3
sbb
pop
fstpl
push
push
adc
jg
xlat
lods
jmp
cmp
pop
ja
lcall
mov
cwtl
fisttps
mov
jbe
clc
aam
lahf
lahf
adc
mov
inc
sub
pop
xchg
lret
or
jnp
ljmp
mov
xchg
int3
jmp
or
pushf
loope
xlat
rol
pop
mov
in
cmp
push
aad
add
mov
clc
pop
stc
and
sahf
das
fnstcw
repnz
or
jge
mov
xor
inc
lock
idiv
pop
pop
mov
push
add
push
jmp
out
push
dec
scas
mov
clc
and
cwtl
cs
inc
in
fidivl
and
test
clc
dec
test
mov
inc
push
mov
dec
jno
sbb
js
mov
sbb
push
pushl
in
cltd
mov
cmpsl
inc
dec
mov
test
adc
xchg
std
ja
push
xlat
mov
loope
icebp
lods
mov
cmp
jmp
jae
push
shlb
jl
dec
sbb
and
insb
shrl
xchg
shrb
imul
mov
outsb
jnp
pop
xlat
lods
cmpsb
es
aaa
inc
fisubl
adc
mov
dec
fcmovnb
mov
push
out
aas
jnp
push
xor
ss
xor
shl
shlb
sahf
leave
inc
pop
xor
or
ljmp
std
sbbl
pop
in
inc
fldt
mov
mov
xchg
gs
jne
sti
lahf
jno
icebp
cmc
aam
enter
pop
fldcw
into
sub
add
std
daa
lods
cltd
cmpsb
notb
push
push
imul
call
jp
aaa
insb
aad
pop
faddl
pop
aas
repz
xchg
xchg
daa
jno
cmp
icebp
and
clc
sub
dec
test
inc
xchg
push
loopne
movsb
sbb
popa
or
cmpsl
icebp
out
or
sbb
jl
pop
mov
inc
or
sahf
or
mov
adc
cmp
out
inc
push
loop
popa
mov
sub
inc
push
out
std
xchg
push
lret
cmp
pop
dec
leave
fistpll
dec
fwait
rcll
mov
mov
lret
jge
lds
mov
and
push
ds
loope
xchg
cld
cmpb
inc
ja
call
outsb
mov
push
push
dec
hlt
leave
xchg
clc
mov
inc
pop
int3
int3
int3
int3
int3
int3
imul
cmp
inc
call
xor
mov
xor
sbb
mov
imul
and
or
push
stos
dec
or
lock
mov
or
inc
adc
cwtl
jle
dec
in
cmpb
insl
or
stos
aad
lret
jnp
mov
pop
sub
gs
adc
insb
or
add
cmp
es
mov
in
cmp
jnp
insb
out
dec
clc
or
sbb
inc
add
hlt
ds
ss
cmp
pop
repz
push
negl
popa
pop
mov
imul
es
mov
es
pop
repz
sub
rclb
mov
sbb
insb
insl
cmp
pop
mov
push
stos
pop
ja
and
les
shrl
test
dec
and
push
shl
pop
sbb
cli
push
lahf
mov
subb
dec
cmp
out
jbe
scas
xor
iret
dec
sub
pop
or
xchg
mov
xlat
sarb
shl
mov
inc
negb
clc
dec
mov
jl
out
mov
sub
and
pop
imul
push
rcll
cltd
xchg
lds
std
js
mov
mov
inc
outsb
mov
xor
mov
mov
mov
jle
xchg
fcmovnb
sahf
mov
mov
push
inc
jg
and
xor
dec
jne
xor
jae
adc
imul
test
add
js
cmp
push
inc
xor
int3
nop
jbe
pusha
repz
xor
js
xor
pop
mov
xor
push
inc
cli
mov
aad
inc
jp
xor
loop
fiaddl
loop
push
aas
pop
icebp
jne
mov
or
adc
cwtl
repnz
pop
adc
popf
mov
lahf
sub
mov
shll
jle
push
jo
or
ds
jno
pushf
subl
fwait
mov
js
call
out
or
pusha
adc
dec
pop
mov
orl
stos
aad
xor
fcmovne
int3
int3
adc
inc
pop
into
leave
mov
xchg
adc
enter
notl
xor
in
fwait
and
fistl
fisttpl
cmp
dec
mov
pop
add
or
mov
cmpsl
sarb
cmp
add
mov
lods
into
add
jp
stos
mov
xor
push
out
xchg
pop
lret
mov
jle
enter
xchg
shr
ret
mov
loop
adc
cld
jmp
daa
out
inc
insb
pop
pop
jno
into
inc
and
je
pop
xor
cmp
enter
pop
xchg
mov
dec
pop
jne
sub
sub
icebp
negl
adc
mov
fsin
add
mov
mov
push
test
adc
sbb
icebp
jle
xlat
sub
add
cmpsl
sbb
dec
inc
sti
mov
sub
add
out
jae
into
xor
pop
push
adc
lock
mov
andl
fcoml
loope
add
imul
mov
inc
insb
push
mov
mov
fnsave
enter
test
inc
jne
and
push
and
sub
or
dec
sub
cmp
mov
loopw
test
add
mov
xchg
or
lcall
in
or
sub
shll
dec
mov
test
or
cwtl
cmp
add
int3
push
xchg
adc
xchg
in
mov
ss
mov
lds
push
sbb
aam
xchg
ret
lea
imul
cmp
movsl
adc
in
int3
cmp
lods
adc
jp
int
test
ljmp
pop
inc
adc
push
mov
mov
xor
ss
rorl
jb
mov
xchg
ret
or
pop
pop
pop
setge
mov
mov
xchg
adc
cmp
and
jle
inc
and
in
test
aam
mov
das
xor
dec
mov
pop
xchg
mov
push
mov
shrb
je
clc
lods
les
inc
mov
sbb
inc
push
fbstp
mov
sbb
cmp
pop
push
xchg
xchg
pop
xchg
enter
jnp
jb
icebp
mov
mov
add
pop
test
adc
and
loope
mov
jne
bswap
xor
or
cld
mov
test
cli
sub
popa
lds
mov
mov
add
mov
jnp
cs
enter
int3
push
lahf
and
mov
push
mov
clc
add
dec
mov
pop
es
xchg
repnz
push
mov
clc
or
dec
xor
incl
pop
fisttpl
outsl
sub
mov
aas
pop
std
shlb
cmc
mov
addr16
outsl
add
sbb
sbb
test
and
push
dec
sbb
pop
xchg
into
push
ss
dec
sarb
int3
ficoml
imul
lret
jno
push
stc
xchg
pop
rcl
std
nop
or
scas
nop
mov
push
push
sub
addr16
and
lahf
clc
dec
cltd
push
popa
push
mov
jmp
lea
cmpsb
mov
outsl
sarb
insl
test
push
fadds
fcom
mov
jne
cmp
xlat
or
pop
loop
xchg
aad
shr
sbb
rcrb
inc
jmp
mov
movsb
dec
outsb
outsl
dec
mov
jp
pop
and
lea
sbb
idiv
jmp
or
push
inc
mov
jnp
xor
cmc
push
jge
fisubs
ret
movsb
das
jne
sub
test
pop
insb
inc
xchg
adc
mov
and
pop
inc
icebp
mov
js
add
or
add
push
sbb
fwait
mov
inc
loop
xchg
mov
sub
cmpsl
cld
jl
push
loope
out
outsl
inc
sbb
inc
ljmp
and
xor
or
nop
jbe
cli
or
outsl
roll
ja
cs
push
xchg
ja
mov
cmp
add
imul
pop
out
push
ja
pop
ficomps
out
repnz
mov
dec
insl
xchg
add
imul
aam
lahf
xchg
jbe
dec
int
push
inc
fistpll
inc
fmuls
rorb
jns
aam
lods
pop
mull
cwtl
loope
test
imul
out
inc
mov
push
ljmp
push
addr16
adc
shlb
fwait
imul
imul
std
and
and
and
cmpb
push
sbb
popf
inc
mov
rorl
rcl
fwait
push
mov
xchg
sbb
inc
pop
int
negl
or
cmp
fcmovnb
lahf
daa
pop
pushl
xor
leave
jno
and
or
lea
push
notl
fstps
adc
idivl
insb
sbb
xchg
inc
hlt
mov
insl
fstl
jecxz
insb
iret
lret
int
aad
ds
xor
or
lods
in
mov
sub
sub
js
add
fwait
or
or
je
out
and
add
xchg
ret
enter
pop
mov
rcrb
xchg
mov
incb
std
mov
pop
add
xor
mov
push
xor
xchg
incl
clc
daa
xchg
pop
mov
sub
ja
xchg
lret
loopne
clc
and
mov
mov
dec
jo
inc
jg
xchg
xchg
jmp
or
cmp
aad
xchg
or
std
scas
lods
in
ss
mov
push
ss
mov
pop
xor
movsl
xchg
daa
jecxz
inc
out
add
mov
cld
test
and
or
outsb
inc
enter
pop
jb
fcoms
mov
lods
addb
scas
shll
adc
dec
scas
push
sub
and
movsl
rclb
movsb
sbb
add
test
inc
shll
lock
stos
and
popf
mov
dec
stos
aam
cld
movl
push
sbb
shrb
icebp
sub
xor
aam
adc
lods
lret
xchg
jge
or
push
dec
adc
nop
push
push
scas
push
dec
ss
mov
dec
pop
adc
push
adc
sarl
jae
push
ljmp
subl
and
imul
sbb
xchg
test
dec
xor
shrb
int3
int3
int3
or
jge
std
inc
out
mov
dec
push
jge
push
hlt
data16
add
adc
out
push
xchg
jnp
cmp
in
push
incl
jno
sbb
pushf
push
data16
cmp
mov
pushf
fmuls
rcrl
fwait
xchg
clc
shll
cli
shrl
or
xchg
fstps
jl
xchg
mov
bound
cwtl
mov
das
fcoml
pop
dec
mov
std
add
push
int3
inc
roll
add
cwtl
addl
ret
pop
neg
mov
cmp
bound
je
mov
fidivrs
out
fsubrp
loopne
jbe
add
sub
xchg
pop
jbe
aad
push
cmpsb
ljmp
and
ret
rcrl
shl
insb
sbb
rclb
mov
sbb
fistl
and
or
popf
add
dec
jge
push
xor
jge
imul
pushf
inc
sub
and
pop
rorl
sti
mov
fmuls
lret
sbb
shlb
sbbl
test
adc
mov
pop
jbe
sti
fdivp
jl
addr16
fstpl
adc
pop
pop
xchg
outsb
mov
mov
int3
int3
int3
int3
cmp
mov
pop
dec
or
outsb
jnp
in
pop
xchg
jnp
push
mov
mov
inc
leave
mov
sahf
pop
mov
xchg
pushf
or
push
lea
repz
xlat
pushf
fcomi
dec
int
mov
pop
ret
loopne
shlb
fisubl
pop
int3
mov
subb
lea
call
dec
mov
push
lahf
jb
add
jne
xor
shrb
push
jbe
lds
in
jo
push
jle
cmp
mov
hlt
ret
or
nop
cmp
xchg
shr
std
jecxz
lea
loope
scas
fistpl
movb
cmp
mov
out
das
nop
pop
loopne
push
aaa
int3
push
mov
popa
out
mov
lcall
push
jl
test
test
into
jle
push
mov
out
aad
and
xor
mov
mov
jae
xor
lods
jnp
jae
mov
mov
lcall
sub
das
adc
stos
mov
or
mov
test
adc
xor
movsl
mov
jnp
outsl
xchg
or
mov
cmp
out
pushf
ljmp
and
mov
cs
jb
inc
cs
mov
sub
call
pop
xchg
push
ret
xchg
push
sub
inc
pop
mov
xchg
bound
ss
movsb
sahf
popf
jns
push
push
adc
add
or
mov
jnp
xchg
imul
sbb
inc
and
js
and
addr16
xlat
mov
xlat
xchg
or
xchg
jp
mov
jne
or
mulb
push
add
or
iret
mov
pop
sbb
and
nop
loop
loopne
and
xor
aaa
and
ret
iret
dec
xchg
xchg
scas
xorl
and
mov
and
push
xchg
jo
test
mov
inc
xchg
repnz
call
repnz
adc
enter
push
sbb
insb
push
aad
inc
push
clc
test
push
xchg
and
and
cmp
int3
rolb
cmp
ret
daa
test
dec
xor
sub
mov
cli
cmpsw
mov
mov
push
pop
test
add
loopne
sbb
push
imul
pop
inc
insl
ja
subb
loope
std
dec
or
fstpl
insl
fcompl
adc
scas
mov
jle
pushf
movsl
sarl
nop
fstpl
aad
stos
mov
testl
sub
adc
loopne
and
shlb
fcmovb
ret
lret
mov
ret
fisttpl
mov
jle
ret
les
imul
sbb
in
notb
dec
mov
test
in
xchg
mov
xor
rorl
dec
inc
push
fwait
sub
dec
jp
sbb
push
jns
inc
pop
jne
push
insl
sbb
push
add
movsl
jnp
out
or
mov
sbbb
inc
sbb
or
int
sub
mov
inc
add
push
imul
call
cmpsb
fldt
add
sbb
dec
lea
add
lcall
aam
stos
mov
repnz
int3
mov
dec
dec
mov
mov
es
inc
and
sbb
dec
adc
add
rcrb
push
cmp
fadds
loop
pop
inc
cs
mov
add
and
mov
cld
sbb
dec
test
add
cmp
mov
data16
inc
mov
mov
test
xchg
cmpb
call
jns
xchg
or
add
cmp
repz
sub
push
jae
mov
and
mov
cwtl
jle
dec
xchg
jne
popa
xor
dec
adc
xor
jns
es
cltd
out
or
fsubs
jp
mov
ud0
iret
sbbl
adc
fidivrl
xor
adc
addr16
aaa
imul
lahf
jmp
mov
jnp
cwtl
stos
clc
fsts
xor
push
testl
jb
hlt
movhlps
xchg
sbbl
jg
inc
inc
pop
xchg
mov
rol
sbb
pop
push
sti
xchg
fidivrl
jns
cmc
imul
movsl
shrb
in
mov
lret
xorl
rcrb
mov
jle
dec
xor
ret
in
mov
push
jmp
imul
xor
mov
aam
mov
or
sub
fidivl
js
pop
mov
xchg
jge
sub
ret
inc
sbbl
repz
push
mov
pop
mov
xor
stc
scas
sub
push
aad
and
rorl
addr16
or
or
cmp
add
out
imul
inc
adc
cmp
add
xor
out
movl
movsb
add
push
lcall
iret
mov
pop
fnstcw
xchg
mov
mov
gs
pop
push
sbb
adcb
mov
push
dec
cmp
sarb
dec
push
addr16
aam
sub
mov
and
push
push
mov
xchg
mov
ret
loop
loopne
cld
sub
inc
lods
incl
js
sbb
cmpl
lods
jmp
jno,pn
out
mov
fdivp
aam
mov
xchg
sbb
add
scas
mov
mov
add
inc
inc
jns
lcall
nop
jns
lds
xchg
movsb
dec
push
andl
ret
and
dec
mov
outsb
mov
mov
loope
add
mov
sub
sbb
inc
mov
iret
mov
jg
nop
pop
xor
and
sti
fsubrs
cld
cwtl
sbb
fbld
jmp
into
sbb
cmp
or
jo
popf
lcall
jecxz
in
lds
in
push
jecxz
jl
pop
inc
inc
push
test
sbb
icebp
push
adc
xor
mov
ficoml
int
ja
out
or
mov
push
sub
add
push
mov
push
shll
pop
mov
orl
and
test
stc
or
inc
je
xor
mov
xlat
in
mov
test
orl
xchg
push
and
scas
sbb
cltd
mov
dec
dec
cwtl
add
adc
insl
mov
lcall
movsb
jbe
dec
test
repnz
data16
dec
popf
das
dec
sbb
xor
mov
lret
cmp
testl
fstpl
cltd
filds
pop
arpl
or
int3
add
xor
lods
fisubrs
adc
jl
pusha
icebp
jno
imul
or
and
jnp
xor
adc
ret
orl
xchg
test
cwtl
test
xchg
inc
es
mov
add
xor
mov
mov
sbb
adc
jns
fmul
dec
fwait
push
movsl
test
adc
pop
sbb
add
inc
mov
popa
sub
sbb
xchg
cli
int3
xor
int3
mov
lock
scas
push
jge
cmp
lock
mov
call
sbb
xor
in
xor
pop
xor
bound
fisttpl
clc
push
xchg
shlb
lock
sub
xor
repnz
dec
pop
inc
xor
push
out
mov
mov
into
inc
cmpsl
orl
mov
xlat
push
subb
mov
jb
sahf
fwait
cli
pusha
add
lods
outsb
mov
sub
cmp
punpckhwd
iret
push
pop
std
lds
in
mov
push
ss
stos
xlat
ss
fst
mov
int3
int3
stos
xor
or
xor
test
mov
pop
outsl
xchg
inc
and
push
xorb
mov
movsb
add
ret
addb
mov
inc
in
pusha
dec
aaa
adc
push
mov
and
push
das
dec
cmp
call
call
jmp
mov
xor
adc
popf
outsl
jl
mov
dec
rorl
jno
ret
cmp
ja
aas
ret
jecxz
fnstcw
test
stos
adc
test
addr16
sbb
movsl
std
lret
dec
in
and
xchg
pop
bound
inc
inc
inc
fildll
movb
jle
lahf
xor
xchg
push
js
scas
push
sub
cmp
lock
sbb
inc
dec
in
addb
ss
mov
fisttps
cmpsl
xor
sub
das
push
dec
test
popf
and
ss
xor
ljmp
mov
mov
incl
sub
sti
add
add
fadds
sub
cmp
inc
aas
lahf
movsl
aad
ss
dec
movsb
stos
mov
inc
mov
cmc
scas
icebp
and
nop
call
or
inc
sub
add
rorl
and
fldcw
cmp
dec
mov
mov
pop
and
add
dec
dec
int3
out
lret
push
inc
jo
adc
mov
rcrb
daa
mov
jae
dec
pusha
popl
fidivs
add
testl
mov
movsb
dec
shl
cld
sahf
mov
mov
adc
les
pop
xor
insl
into
pushf
int
test
in
jl
push
mov
dec
jbe
in
and
adcb
inc
mov
push
out
xor
add
dec
or
sbb
push
or
pushf
dec
push
stc
insb
sbb
hlt
mov
dec
pop
movsl
stc
sbb
pop
ret
xor
or
icebp
push
cs
ret
cltd
out
imul
lods
enter
or
mov
and
mov
ja
jae
pop
int3
mov
pop
stos
mov
and
dec
jl
clc
cmp
sbb
test
xor
addr16
nop
sub
out
push
add
loopne
dec
dec
jp
mov
and
jbe
lods
xor
sbb
and
cld
mov
mov
and
mov
xor
rorl
push
movsb
out
insl
push
je
ffreep
add
mov
cmp
sub
push
jo
fmulp
push
dec
hlt
and
mov
cs
stos
test
out
outsl
repnz
popf
in
lods
hlt
mov
inc
pop
std
aam
pushl
int
arpl
push
inc
add
in
cmp
jno
in
jbe
fisubs
cmp
fdivp
ds
repnz
shll
xor
imul
sbb
cmp
sbb
ds
sbb
int3
int3
int3
cmpl
mov
push
sub
sahf
out
repnz
cmp
ds
call
in
aad
jo
scas
movsl
inc
push
mov
and
daa
test
jne
mov
jg
cmp
push
loop
arpl
mov
inc
insb
adc
sbb
mov
iret
in
lock
mov
sbb
aas
jge
je
cmp
aad
out
mov
stos
mov
adc
inc
je
jo
add
sbb
out
mov
enter
int3
push
daa
sbb
or
inc
cmp
dec
pop
xor
sub
ds
outsb
xchg
xchg
jge
movsl
cmpxchg
shl
rorb
sbb
js
jbe
leave
mov
lret
or
lahf
fs
cltd
test
cmp
sbb
push
mov
shlb
mov
mov
int3
mov
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
jo
jb
and
je
insb
outsl
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
insl
imul
outsb
arpl
gs
outsl
imul
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
arpl
gs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
inc
add
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
sub
inc
add
add
add
add
jl
add
pushf
sbb
add
incl
add
add
add
add
ljmp
inc
add
inc
add
ljmp
lds
inc
lds
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
jmp
roll
sub
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
ljmp
faddl
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
loope
add
add
add
incl
add
add
incl
add
add
lcall
inc
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
decl
inc
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
icebp
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
icebp
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
stc
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
adc
add
add
incl
add
add
incl
add
add
call
and
lods
mov
add
nop
add
add
add
adc
add
add
add
and
add
test
add
add
add
scas
xchg
add
fdivs
add
movsb
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
mov
add
cmpsb
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popl
add
add
push
popl
add
add
je
add
xchg
add
mov
popl
add
popl
add
popl
add
popl
add
nop
add
push
nop
add
inc
xchg
add
cs
add
push
xchg
add
push
xchg
add
cld
xchg
add
out
add
ficoml
add
rclb
add
xchg
add
mov
add
je
add
pop
xchg
add
dec
xchg
add
xor
add
sbb
add
in
xchg
add
aam
add
mov
xchg
add
mov
xchg
add
aam
add
loopne
add
repnz
add
add
add
push
xchg
add
and
add
xor
add
dec
xchg
add
xchg
add
adcb
add
xchg
add
rclb
add
clc
xchg
add
push
xchg
add
adc
add
xchg
add
inc
xchg
add
push
xchg
add
push
add
js
add
xchg
add
add
add
add
add
add
add
add
adcb
add
xchg
add
cld
xchg
add
out
xchg
add
ficoml
add
mov
xchg
add
cwtl
xchg
add
test
add
xor
add
push
xchg
add
ss
add
sbb
add
or
add
out
add
fcoms
add
mov
nop
add
add
add
cmp
add
dec
xchg
add
js
add
mov
add
sub
add
xchg
add
add
add
inc
add
je
jne
jb
outsb
je
push
add
ljmp
jb
imul
pop
add
insl
imul
outsl
arpl
jae
add
inc
jb
popa
je
push
imul
push
gs
gs
imul
gs
push
popa
je
dec
popa
insl
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
js
arpl
dec
add
je
outsb
push
gs
js
gs
imul
gs
adc
inc
jb
outsl
jb
outsl
fs
xchg
add
insb
imul
outsb
fs
add
inc
gs
outsl
fs
gs
imul
add
test
dec
jo
outsb
dec
jne
gs
add
popa
add
gs
je
dec
jne
gs
add
ret
gs
gs
jae
dec
jne
gs
add
add
je
imul
imul
jns
add
mov
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
enter
je
jns
je
insl
push
imul
gs
outsl
arpl
push
imul
inc
jb
popa
je
inc
imul
outsl
jbe
inc
imul
add
je
popa
je
inc
outsl
jb
popa
je
add
cli
add
gs
gs
jne
arpl
add
add
outsb
fs
gs
jne
arpl
add
dec
outsl
popa
fs
gs
jne
arpl
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
imul
gs
add
gs
imul
je
imul
push
add
gs
je
inc
imul
gs
imul
bound
gs
add
sbb
push
gs
imul
bound
gs
add
inc
add
je
jne
jb
outsb
je
push
dec
add
adc
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
outsl
ja
arpl
insb
insb
inc
popa
jb
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
push
add
je
insb
addr16
je
insl
dec
outsb
je
jmp
insl
gs
arpl
add
jo
jns
insb
imul
add
cltd
add
je
outsl
jns
imul
add
je
insb
imul
inc
popa
je
add
inc
add
outsl
jae
inc
insb
imul
add
xchg
add
je
outsl
jns
outsb
jne
fiaddl
dec
popa
jo
imul
imul
inc
imul
add
xchg
add
jbe
insb
imul
je
add
add
insb
imul
je
add
push
imul
outsl
outsl
imul
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
add
push
outsl
jae
dec
gs
popa
addr16
add
mov
imul
jae
popa
addr16
add
loop
inc
imul
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
pop
add
gs
je
push
outsl
jo
jo
outsb
jne
or
inc
jo
outsb
fs
outsb
jne
add
add
outsb
fs
gs
popa
addr16
add
sbb
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
add
imul
jae
popa
addr16
add
fiadds
inc
outsb
jne
push
imul
xchg
push
gs
imul
js
inc
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
push
push
inc
push
xor
cs
insb
add
out
add
gs
outsb
imul
add
push
outsb
imul
imul
outsl
push
imul
popa
jae
dec
bound
arpl
add
push
dec
inc
inc
jb
insl
push
je
imul
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
dec
outsb
imul
add
imul
imul
imul
xor
cs
insb
add
add
popa
jo
jb
add
jmp
push
gs
imul
adc
dec
gs
jo
insb
insb
outsl
arpl
mov
push
jb
arpl
jae
gs
jo
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
jb
arpl
fs
jae
add
mov
je
jb
arpl
jae
mov
push
je
dec
popa
outsb
fs
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
addl
je
inc
jb
je
arpl
push
arpl
outsb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
gs
popa
insb
jne
add
insb
jae
jb
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
gs
add
je
imul
je
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
cwtl
add
je
jb
jb
je
arpl
push
arpl
outsb
add
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
outsb
add
push
gs
js
gs
imul
gs
add
add
inc
bound
addr16
jb
jae
outsb
je
push
add
fs
imul
add
and
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
push
dec
outsb
outsw
add
add
je
inc
push
add
xchg
add
je
inc
dec
inc
push
add
aas
add
push
popa
insb
imul
add
push
insb
gs
addl
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
xlat
add
insb
push
outsb
ja
outsb
add
dec
gs
jo
imul
dec
jne
je
inc
jns
gs
outsl
push
imul
je
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
inc
add
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
push
je
imul
push
cwtl
and
fidivs
daa
mov
mov
mov
sti
fisubl
xchg
fsub
add
push
push
or
jmp
lods
shrl
leave
outsb
mov
push
call
iret
clc
cmp
sbb
in
insl
and
loope
insl
xor
insl
jecxz
push
out
iret
out
cmpsb
adc
ljmp
pop
outsb
enter
lret
jo
iret
movsb
popf
add
call
dec
outsb
and
cmpsl
mov
sub
sbb
adc
mov
sub
and
sbb
imul
int3
xor
inc
aad
add
pusha
popf
aas
movsb
movsb
stos
test
jecxz
shrl
cmpsb
call
pop
stos
sub
outsb
dec
mov
cmp
push
outsb
call
sub
or
frstor
mov
sub
call
and
shlb
sub
outsb
add
divl
std
aad
mov
sub
lods
popa
sub
outsb
outsl
add
mov
pop
lcall
pushf
mov
sub
mov
sub
jle
fwait
outsb
cs
mov
sub
addr16
cmpsl
outsb
ret
xchg
clc
aad
pop
scas
cmp
iret
mov
mov
outsl
lahf
pop
ret
shll
test
sub
dec
test
xchg
mov
sub
mov
cmc
sub
call
cmpsb
sti
sbb
out
cmp
sbb
push
adcb
jmp
and
add
jg
mov
sahf
xorb
dec
std
loope
add
inc
lcall
jecxz
enter
xor
movsb
push
push
stc
add
sub
outsl
imul
in
cmp
call
movsl
jae
cld
dec
mov
in
call
push
sub
outsb
cmp
sbb
dec
hlt
xchg
outsb
cmp
and
outsl
push
insb
addr16
lock
ror
pop
pop
int
and
ret
sub
xor
in
and
inc
test
popf
add
out
and
jg
inc
outsb
hlt
jp
outsl
cmpb
insb
cmp
iret
push
jo
in
add
xor
pop
mov
fbld
jecxz
enter
cltd
sub
xorl
or
lds
bound
dec
arpl
int
xor
cli
jb
nop
sbb
mov
push
push
ret
andl
aam
lods
dec
outsb
loope
repnz
es
xchg
fs
loope
ljmp
jo
sub
mov
jo
mov
popl
sti
jb
shlb
inc
jo
mov
dec
jmp
repnz
pshufw
sbb
and
xchg
enter
jo
fsubl
mov
ja
jmp
jnp
xchg
movsb
xor
jno
sub
mov
sub
mov
cmp
fwait
out
cmp
push
movsb
dec
jl
enter
movsb
push
fs
xor
lahf
out
cmp
and
out
cltd
inc
negb
or
repnz
push
inc
cmp
test
pop
or
es
mov
pop
shlb
cld
pop
fisttpl
sub
rorl
sub
out
test
push
repz
adc
pop
fldln2
sub
mov
roll
mov
fsubrl
dec
jno
adcl
mulb
cwtl
mov
cld
out
ds
mov
fldl
mov
inc
or
push
cs
push
and
cmp
cld
sub
mov
sub
jg
sub
adc
fbstp
enter
push
or
ljmp
fbld
lret
fimuls
int3
fidivs
sbb
add
add
jmp
mov
cmp
mov
push
inc
insb
pop
inc
pop
sub
push
inc
add
cmp
xchg
leave
jmp
pop
loopne
or
mov
in
dec
sbb
ret
adc
xchg
or
lcall
cmp
sarb
outsl
sbb
and
lods
loopne
mov
hlt
or
in
fstpl
xchg
vmaxsd
pop
out
popf
fstpl
mov
xor
jmp
movb
lods
mov
mov
add
sbb
pop
andl
lods
inc
and
adc
or
push
inc
xor
pushf
in
xchg
jecxz
lret
push
hlt
mov
mov
fstp
js
push
mov
mov
add
shrl
dec
gs
jbe
pop
popf
mov
push
cmc
sub
jns
jno
dec
vrcpss
pusha
loope
cmp
dec
or
add
xchg
dec
push
jbe
clc
and
xchg
fidivrl
mov
adc
movsb
fdivs
jg
mov
push
in
jae
lahf
sbb
ret
mov
fs
push
push
xchg
cs
or
mov
push
lahf
and
movsl
movsb
jnp
rolb
pop
fprem1
sub
mov
into
mov
stos
je
movsb
or
in
pop
mov
jge
and
hlt
inc
movsb
push
das
jg
incb
in
sbb
cli
xor
loopne
sub
pop
mov
jp
insl
mov
sti
inc
cmp
daa
jne
mov
xlat
xchg
pop
add
xchg
rcl
inc
loope
loop
enter
dec
ljmp
out
mov
sahf
sbb
dec
setae
mov
popf
sbb
lea
sbb
adc
mov
js
scas
test
adc
rorb
jns
sbb
jle
add
mov
dec
mov
cltd
dec
in
insl
fsub
pop
dec
addr16
xor
rcrl
ret
es
sub
fwait
scas
incl
cwtl
gs
adc
adc
push
mov
and
mov
in
and
sbb
in
mov
ljmp
push
ret
pop
imul
fcmovbe
sub
add
mov
mov
add
mov
or
int3
int3
int3
pushf
push
jmp
iret
push
push
shrl
dec
inc
movsb
adc
add
add
stos
inc
add
div
xor
pop
cmpsb
leave
adc
dec
and
mov
je
sub
pushf
lds
dec
dec
inc
arpl
xchg
shrb
jae
mov
mov
xchg
adc
inc
cmp
fxch
inc
sbb
sti
mov
rcll
into
lret
and
sbb
les
sbb
inc
adc
mov
mov
mov
or
adc
cmp
lock
clc
cmp
test
mov
stos
pop
movsb
push
es
data16
push
into
sbb
inc
dec
xor
sti
mov
les
movsb
sbb
xchg
lahf
sahf
dec
dec
movsl
push
notb
mov
aam
in
add
imul
andl
sbb
aad
test
sub
pop
lods
mov
or
stos
les
sub
mov
sbbl
scas
adc
xlat
mov
mov
repz
aas
rcr
adc
shrl
push
daa
push
dec
jne
sbb
enter
clc
adc
lahf
mov
subb
mov
xlat
cs
fisubrl
adc
or
imul
dec
bound
xlat
addb
jg
dec
lds
pop
pop
cltd
jle
and
push
pushl
inc
pop
mov
in
dec
cmp
sahf
xchg
gs
mov
adc
flds
std
mov
dec
out
push
xlat
and
rclb
mov
mov
lret
aas
fcoms
mov
cmc
or
into
dec
lcall
lret
mov
xor
sbb
adc
mov
popa
std
pop
xor
daa
push
test
and
push
test
popa
mov
cmp
test
push
insb
xchg
xchg
dec
and
dec
aam
fbld
lods
jecxz
pop
inc
jle
cs
js
cli
lea
pop
dec
mov
cmpsl
es
or
and
xchg
addl
push
loopne
andb
outsb
and
int
adc
jl
xchg
cmc
andb
sbb
jae
jae
and
mov
adc
pusha
adc
mov
add
and
les
imul
sub
mov
xorb
jo
popa
jmp
subl
int3
dec
pop
dec
and
iret
movsb
adc
das
or
adc
int3
and
js
popf
lret
cmp
xchg
ror
inc
mov
add
mov
roll
xor
pusha
andl
xor
pop
imull
out
push
adc
mov
frstor
popf
outsb
pop
sub
push
icebp
out
pop
cmpsb
cld
xor
adc
xchg
and
sub
xor
cltd
leavew
xchg
inc
jmp
loopne
xchg
push
pop
es
int3
int3
int3
cmp
ljmp
test
sub
xchg
fmul
fldenv
test
mov
adc
jne
hlt
call
push
jno
xchg
loop
xor
jle
or
sbb
inc
ror
push
in
cmp
fs
pop
mov
imul
loop
loope
lods
roll
test
rolb
sub
jp
popa
jle
imul
mov
xchg
mov
loopne
xorb
push
cmp
add
push
or
cmp
mov
xchg
mov
or
scas
jle
outsb
cmpsl
sub
lods
inc
xchg
repz
dec
and
mov
jge
sbb
test
jae
sbb
push
and
rep
addb
mov
cmp
jb
sbb
jmp
inc
jbe
lock
sub
mov
push
pop
and
out
insb
pop
gs
cmpsb
xchg
arpl
mov
push
fisubrs
mov
sub
or
fdivrl
pop
push
jp
bound
inc
ficoms
cwtl
pop
fiaddl
mov
test
xlat
test
pop
cmp
enter
leave
sbb
xlat
les
out
mov
fcomip
or
inc
push
imul
or
push
sbb
sub
or
sbb
outsb
sbb
adc
cmp
fimuls
es
push
dec
seta
movsb
or
repz
out
aaa
inc
int3
mov
cmp
das
inc
inc
shlw
pop
out
push
mov
fwait
int3
int3
int3
int3
int3
xchg
addl
cmp
testl
in
loope
pushf
sbb
psadbw
cwtl
and
push
push
sarb
and
inc
cltd
mov
xlat
movsb
fldt
cmpsb
movsl
pop
mov
jnp
in
sub
jbe
int3
inc
add
test
int
xchg
in
mov
jle
rolb
addr16
cwtl
test
or
pushl
popa
sub
shlb
dec
fwait
add
arpl
inc
or
pmuludq
rcrb
shrb
inc
and
jg
push
ret
jmp
fsubs
imul
imul
rcrl
mov
int3
mov
into
or
push
adc
sti
imulb
imul
mov
sahf
je
mov
fnstsw
and
decl
lds
jecxz
out
pop
mov
out
test
jbe,pn
adc
mov
cs
push
je
cmpsl
adc
lods
dec
inc
adc
js
shlb
lods
rolb
push
xchg
fwait
ret
jmp
cwtl
mov
sub
sbb
jns
xor
xlat
shll
push
cmp
pop
add
xor
insb
xchg
pop
or
inc
pop
sbb
rcrl
outsb
cmp
mov
adc
add
jb
stc
enter
inc
jmp
cli
cmc
out
xchg
inc
inc
rcll
mov
cmpsb
pushf
sbb
fistl
into
push
jnp
jno
pop
fldl
sub
pop
scas
adcl
insl
aam
mov
lcall
mov
sub
mov
testl
mov
fisubrl
mov
enter
ljmp
or
mov
pop
faddl
and
sub
pop
and
push
out
add
in
pushf
pop
aad
sbb
bound
fidivs
xor
stc
aam
ret
pop
pop
aaa
xor
fisubl
inc
jle
data16
jns
dec
addr16
nop
pusha
push
cltd
add
rcll
jl
jge
mov
pop
inc
pop
mov
imul
add
add
push
add
fxch
sbb
insb
jecxz
cld
pop
adc
in
jbe
and
lock
lret
add
adc
hlt
inc
sbb
dec
xchg
cmpsl
lock
test
push
mov
xor
repz
cmp
push
stc
mov
fsubl
jl
loop
jnp
jmp
mov
fstps
and
and
stc
leave
imul
push
mov
scas
pop
pop
xchg
and
ret
inc
dec
ficompl
xor
sub
or
es
sarl
and
pusha
out
jns
cmp
jb
and
inc
add
aam
loop
and
jb
cmp
popl
orb
mov
jae
pushf
adc
pop
pop
pusha
std
xchg
xchg
dec
jne
sub
pop
cmpsl
xlat
and
in
push
out
sbb
das
and
mov
dec
inc
loope
push
xor
jns
ret
imul
jge
xchg
jle
push
lret
cli
and
push
fldt
dec
xlat
jmp
mov
mov
jns
in
icebp
mov
faddl
xor
outsl
test
mov
mov
jge
push
stos
into
add
jno
pop
pushf
dec
adc
int3
int3
int3
int3
dec
xlat
mov
pop
push
ja
in
xchg
sub
popa
lahf
dec
jle
xchg
fs
adc
leave
gs
cmpsl
pop
shlb
fwait
adc
inc
and
add
xor
push
add
mov
push
mov
fcmovnu
pop
sahf
in
scas
dec
pop
jle
je
ja
incb
adc
sbb
pushf
and
xor
icebp
or
ret
jmp
pop
inc
imul
aad
xchg
add
pop
lock
int3
int3
jne
or
out
pop
lods
sbb
fucomp
add
bound
pop
and
dec
stos
push
dec
jle
cmp
or
pusha
push
lcall
int
mov
pop
fmuls
pop
cmp
mov
fcos
incl
push
ret
jnp
cmp
or
lcall
filds
clts
into
jne
cld
lret
jl
bound
sbbl
mov
xor
lahf
rol
rcrb
mov
jno
mov
repz
xchg
lcall
jg
pushf
jge
je
inc
push
cmpsb
rclb
lcall
xor
mov
xor
sbb
xchg
jl
jmp
in
dec
das
cmp
add
push
mov
inc
leave
add
movsb
jae
jbe
jle
or
xor
les
in
jae
fnstenv
out
xchg
xchg
xorb
dec
and
xchg
popa
cmp
and
cmp
shrl
adc
fistpl
rorb
jno
imul
cltd
in
cwtl
pop
cmp
xchg
xor
cmp
push
notl
xchg
push
xor
adc
gs
and
aaa
xchg
scas
dec
inc
and
push
out
ret
jmp
xor
xchg
rolb
fiaddl
adc
idiv
xor
or
and
push
lret
cmpsl
jl
mov
xor
mov
push
les
outsb
shrw
pusha
mov
add
pop
xlat
push
push
mov
xchg
leave
xabort
rol
xor
push
inc
adc
insb
call
cmp
cltd
mov
ret
rorb
or
xor
jno
mov
mov
aad
add
rcrl
pop
inc
pop
pop
or
adc
xor
lock
or
stc
or
dec
sbb
loope
inc
cwtl
test
mov
mov
inc
mov
subb
and
test
int
add
in
cmp
pushf
aaa
jle
xchg
xchg
stos
xor
mov
lret
test
sbb
sbb
arpl
test
cmp
test
mov
aaa
jnp
mov
push
outsl
add
das
inc
ja
cmp
int3
lret
lods
xlat
sub
lods
popf
xor
aas
nop
cmp
outsb
xchg
xchg
int3
fwait
xchg
mov
test
out
mov
xchg
mov
dec
popf
inc
stc
loop
leave
movsb
xchg
aad
lcall
test
sbb
sarb
sbb
push
addb
sub
icebp
cmp
mov
push
lods
addl
jo
xor
xchg
je
loopne
mov
and
fistpl
add
push
fdivrl
pop
test
rcl
inc
adc
pop
call
pop
inc
add
push
inc
mov
dec
xor
pusha
ret
mov
sbb
xchg
daa
dec
add
xchg
mov
int3
into
push
inc
xchg
pop
psrlq
aam
cmp
insb
mov
sbb
xor
mov
push
pop
pushf
stos
popf
in
je
push
pop
ficompl
mov
insb
fidivrl
sahf
adcl
mov
cwtl
sbb
push
mov
inc
mov
xorl
cmp
xchg
in
jp
stos
daa
jp
mov
sarb
xchg
or
in
cld
cs
das
jo
inc
xor
push
pushf
pushf
push
gs
js
stc
bound
cmp
push
mov
js
std
aas
pushf
adc
loopne
mov
push
mov
jle
rclb
test
push
ds
sbb
imul
mul
shl
fisubrl
cmp
jmp
orb
in
push
in
mov
lods
call
push
sbb
jp
dec
js
ljmp
in
xchg
sub
sbb
mov
test
in
adc
out
lahf
push
xchg
test
loop
mov
lea
fs
mov
pop
sbbl
inc
ror
push
adc
fbld
jo
xor
sub
ss
xchg
pop
mov
popf
call
xchg
popf
gs
pop
pop
test
fmulp
dec
ret
jbe
mov
enter
xlat
inc
ficompl
dec
mov
scas
decl
test
add
add
pop
into
dec
pop
lret
ret
cmp
adc
add
movsl
nop
jnp
pop
pop
and
lahf
icebp
pop
dec
pushf
fistl
test
push
cwtl
orl
lea
out
mov
and
and
cwtl
out
stos
mov
movsl
inc
jnp
inc
rcr
adc
xchg
out
xchg
das
cmp
cmp
add
and
lret
cmp
pop
xor
dec
jl
imul
roll
js
sbb
mov
in
decl
adc
xchg
sbb
outsb
rol
pop
dec
imul
push
aad
push
aad
pop
mov
sub
jae
fildll
rcll
repnz
push
mov
dec
pushl
mov
sbb
fstpl
jle
out
inc
inc
xchg
std
shrb
outsl
sbb
mov
stos
ja
mov
dec
and
mov
movsl
adc
add
push
in
or
sub
hlt
xchg
int3
test
sub
js
dec
sub
ds
inc
psubq
fdivs
insl
xchg
cmp
push
push
ja
adc
call
xchg
stos
xchg
or
mov
cmp
in
xchg
jle
aas
scas
push
cmp
ljmp
cld
push
pop
pop
mov
flds
xor
cmp
cmp
push
pushl
push
sbb
mov
sub
sbb
or
test
xor
jge
js
pop
sbb
fimull
lods
xlat
sub
pop
xchg
push
or
andl
test
pop
call
mov
jle
int3
int3
int3
int3
int3
int3
jl
add
addr16
pop
lret
fld
hlt
call
xor
dec
imulb
pop
aaa
ss
and
jne
or
fdivrl
adc
fldt
mov
pop
cmpb
push
sti
push
divl
push
push
loope
subb
stc
sarb
push
mov
shl
shlb
mov
fs
xchg
aaa
pop
mov
arpl
mov
and
pop
das
dec
mov
scas
cmpsl
mov
rorb
int3
int3
int3
int3
bnd
adc
or
push
pop
push
and
inc
mov
push
mov
orl
lods
in
cmpsl
ljmp
fwait
adc
out
cmp
rcrl
adc
fidivrs
hlt
lods
adc
rclb
mov
int3
int3
lods
shl
test
int
mov
aaa
sarl
mov
pop
adc
dec
shl
mov
ja
xchg
nop
dec
movsl
pop
pop
add
popf
push
repnz
fistl
add
xchg
mov
aam
xchg
rorb
and
pop
pop
daa
aad
inc
out
in
andl
nop
es
test
push
test
mov
aaa
jmp
adc
adc
mov
popf
inc
sub
mov
cmp
movsl
inc
xlat
cmp
jbe
inc
lods
lahf
xchg
insl
cs
mov
cmp
xchg
orb
or
sti
and
xor
jg
jne
loop
jl
mov
push
iret
and
dec
adc
clc
cwtl
push
mov
cmp
ror
jmp
dec
dec
in
pop
outsl
jge
inc
mov
dec
mov
aaa
sbb
cmp
ror
jmp
leave
adc
incl
dec
adc
cltd
in
testl
lock
pop
mov
jbe
pop
or
aas
mov
xor
cmp
lahf
cmp
aaa
arpl
or
popf
lock
inc
test
cwtl
mov
std
rcrb
clc
sahf
mov
nop
inc
fwait
sbb
nop
cmp
ds
mov
sbbb
sub
push
mov
lahf
dec
cmp
and
insb
cmp
inc
sub
mov
in
aad
sub
dec
jp
movsl
and
test
inc
mov
clc
fsubrl
test
xor
shrl
out
push
ss
dec
jnp
shll
mov
sub
jmp
ljmp
push
test
repz
pop
lret
mov
pusha
push
push
push
sub
xor
pop
stc
lods
sahf
cltd
popa
fwait
jb
pusha
jecxz
jb
loop
aad
adc
cmp
inc
sbb
scas
pop
xlat
jg
notb
jno
lea
xor
push
mov
push
fimuls
cld
jmp
push
push
dec
adc
movsl
popf
and
pushf
jg
mov
cmp
dec
xor
inc
cmpsb
ja
cmp
pushf
add
push
adc
aam
mov
pop
std
dec
loop
lret
push
adc
push
mov
lcall
call
stc
gs
imul
or
rcrb
xchg
das
imul
mov
shrl
or
mov
or
ja
fcmovnu
repz
adc
ffreep
je
xchg
jbe
add
lods
push
es
lock
shl
inc
lock
mov
jbe
mov
cli
inc
fisttps
jo
dec
es
add
lea
les
dec
dec
iret
sbb
je
push
outsl
inc
aam
addr16
lahf
inc
aad
xor
jl
push
sub
sub
rcrb
dec
cmp
pop
pop
loop
add
sub
and
pop
out
shlb
mov
fistps
movsb
mov
lea
stos
ss
xchg
sub
in
addb
cmp
mov
ja
xchg
fsubl
or
fwait
mov
bound
loopne
jge
or
pop
cs
xor
pop
lods
addl
xchg
or
imul
shrl
stos
int3
cld
pop
mov
cmpsb
call
mov
out
ret
test
addl
fbstp
and
fdivl
ficompl
test
fistps
push
inc
lcall
pop
js
xorl
xor
lods
rclb
lret
dec
lock
push
dec
jg
sbb
fwait
xor
aam
xor
call
xlat
lret
pop
cmp
xchg
jno
push
adc
or
in
jge
lahf
in
sbb
in
sbb
fadds
frstor
mov
dec
jo
add
xchg
adc
pop
cmp
cmp
push
push
aaa
outsb
imul
jl
pusha
add
sbb
int3
int3
int3
int3
test
xor
lds
daa
inc
stos
inc
xor
inc
xor
ss
loop
sti
int3
int3
int3
int3
int3
aas
lea
scas
bound
pushf
jle
das
inc
enter
lds
cltd
sbb
inc
dec
test
dec
cmp
jne
sbb
cli
testl
test
stos
pop
push
out
push
into
jge
idiv
cmpsl
add
add
or
push
sub
adc
mov
out
call
outsb
ret
or
cmp
or
add
sbb
inc
out
mov
adc
lret
fimull
jns
add
mov
out
lock
sbbl
js
xchg
inc
loop
cmp
adc
xor
and
imul
into
sbb
jbe
pop
mov
fwait
adc
leave
mov
int3
int3
int3
int3
addr16
add
inc
cmpsb
jl
sub
sarl
test
cmp
outsl
fildl
pop
insb
lock
cwtl
mov
mov
aas
xchg
pushf
or
push
jmp
or
aas
adc
int3
shr
sub
cs
mov
mov
push
jle
pop
enter
cmp
or
int
aas
push
cltd
push
mov
fbstp
dec
stc
or
pop
enter
add
loopne
nop
lods
cmp
dec
mov
iret
jge
lahf
pop
fisttpll
add
aam
mov
mov
pop
andb
xchg
and
stc
mov
iret
adc
add
jmp
lret
adc
mov
scas
movsb
mov
mov
mov
add
scas
sahf
lea
ss
cs
insl
fiadds
cli
pop
mov
dec
xchg
pop
mov
fs
aas
xor
das
dec
cmp
js
mov
shlb
arpl
push
test
xchg
lods
loopne
xchg
ss
push
in
imul
outsb
mov
cmpsb
jne
jns
sub
js
jp
mov
dec
cmp
int
stos
mov
sub
outsb
bound
add
std
ret
test
dec
xchg
mov
xchg
nop
stos
mov
or
mov
inc
loopne
pusha
rol
jl
ja
xchg
cld
mov
cmp
fwait
or
jmp
rcrl
and
mov
outsb
jmp
sti
popa
adc
xor
les
lret
mov
pop
xchg
mov
sbb
notl
xchg
pop
cmp
dec
cwtl
cmpl
xchg
outsl
je
hlt
push
xor
test
repz
cld
dec
jle
push
bound
fists
stos
xchg
sub
iret
dec
sbb
xorb
mov
pop
ja
lds
es
insl
push
pop
add
cmp
xchg
push
sbb
or
shll
xor
addb
addr16
movsl
push
push
or
repz
jae
sbbl
push
in
push
dec
ret
mov
sub
js
movl
pop
push
insb
jle
push
decl
cli
cmpl
and
xchg
push
mov
inc
mov
jno
inc
adc
addr16
inc
cmp
aam
fsubrs
sub
hlt
push
push
scas
ss
lds
fsubrp
pop
sbb
iret
mov
lock
insl
mov
fnsaves
out
mov
fwait
inc
mov
sarb
popa
pop
pop
xchg
mov
inc
iret
aaa
sbb
or
jns
test
fistl
mov
in
push
into
xor
in
fisubrs
push
clc
leave
adc
int3
int3
int3
adc
pop
rorb
sub
iret
jge
jmp
imul
rcrb
int
inc
mov
dec
cmp
mov
loop
mov
cmc
ljmp
mov
jle
or
pop
shlb
sarb
push
jmp
cs
outsl
clc
sub
ja
jl
les
pop
ss
ja
dec
xchg
fistpl
fldenv
data16
addr16
lds
inc
imul
ja
scas
daa
repz
mov
in
xor
pop
sub
pop
mov
aad
mov
push
imul
or
xchg
xchg
cltd
hlt
mov
popa
mov
cltd
or
mov
or
lcall
les
adc
call
fstl
aas
jo
xor
and
dec
mov
jne
sbb
xchg
negb
dec
jmp
mov
dec
xchg
mov
aas
xchg
adc
imul
sar
outsl
popf
test
rclb
mov
fsubr
ficoml
and
ret
dec
xor
test
es
fstpt
addr16
sub
xor
mov
mov
test
shll
pop
les
or
mov
clc
mov
adc
inc
mov
or
pop
into
xor
pop
jge
int3
add
aas
sbbl
lret
repnz
jecxz
lock
rol
xor
mov
movsl
lahf
test
out
cwtl
mov
jmp
test
or
inc
jnp
pop
rolb
fwait
inc
test
sbb
stmxcsr
adc
lods
icebp
sarl
adc
lahf
dec
or
mov
jmp
xor
int3
pusha
out
xchg
push
fimull
mov
sbb
imulb
sbb
sub
xchg
fidivl
mov
clc
push
or
popf
add
inc
adc
test
in
push
ret
mov
jmp
cmp
inc
daa
aam
cmp
adc
add
stos
pop
xchg
push
dec
data16
in
mov
add
pusha
xor
mov
dec
jp
mov
call
int3
int3
cmc
sti
pop
test
bnd
scas
and
xchg
rcl
popa
into
adc
inc
iret
inc
or
in
mov
loope
ficoml
add
jne
lahf
das
or
push
mov
in
cmpsb
pop
mov
cmp
das
sbb
fbstp
xchg
mov
inc
scas
mov
push
pop
pop
sub
jne
xchg
cmpsb
add
push
and
out
cmp
dec
insl
fdivs
dec
cld
gs
pop
mov
jnp
dec
and
lods
shrb
lret
lret
addr16
xchg
rclb
insb
jo
add
add
ret
xor
outsl
aaa
sbb
pop
daa
call
mov
sti
mov
hlt
sbb
sbb
daa
add
lock
out
jg
xchg
inc
dec
pop
insl
lcall
negb
outsb
in
add
arpl
mov
xchg
and
out
test
lods
push
cmp
call
xchg
sbb
inc
out
push
loop
imul
push
dec
and
pop
mov
shlb
push
bound
in
dec
jno
test
xchg
mov
cmp
mov
into
cmp
add
fistps
ss
sub
in
into
lock
dec
pop
stc
dec
mov
dec
add
xor
pop
adcb
pop
add
dec
fstpl
sbb
jb
iret
or
cmc
cmpsl
jg
fstpl
jne
dec
ret
lret
sti
insb
xchg
pop
push
testb
pop
add
and
leave
inc
les
popa
mov
pop
jnp
mov
xchg
xchg
inc
fimull
pmullw
psubq
sbbl
daa
lahf
fidivrl
cltd
mov
jbe
lcall
ds
daa
movsb
xor
jno
ret
aas
mov
fisubrl
xchg
loop
dec
jecxz
inc
test
addr16
cltd
sbb
cmpsl
lcall
addr16
testb
xor
cwtl
cmc
adc
push
in
add
mov
ja
mov
mov
jb
mov
shll
inc
insl
jno
dec
cmp
lea
cmp
ljmp
sbbl
loop
dec
jns
xchg
pop
push
nop
add
cmp
jmp
loope
ret
stos
sarl
xchg
popa
pushf
xchg
lret
and
sub
push
aaa
pop
rcr
dec
push
xchg
jg
cli
xchg
in
in
jecxz
push
mov
movsb
fnsave
cmp
divb
lods
and
cli
xchg
adc
push
inc
mov
loop
or
in
sahf
out
mov
jp
ss
repnz
shll
iret
inc
mov
push
mov
js
xchg
push
inc
mov
filds
xchg
push
lods
xchg
hlt
sub
push
cmpb
mov
push
iret
pop
sub
rolb
in
in
or
lea
push
movsl
rol
xchg
popf
hlt
mov
jns
cmp
cmp
hlt
push
int3
int3
int3
int3
int3
mov
sbb
inc
add
xor
xchg
rcrb
pop
enter
pop
xchg
pop
shll
clc
orb
jecxz
jge
jp
rcr
dec
sub
sub
mov
inc
jp
ret
out
cmp
in
xchg
sti
cmp
dec
sub
sub
push
lret
aaa
dec
je
lea
sbb
mov
and
fstps
pop
mov
push
jo
and
inc
pop
cmp
push
cli
adcb
cmp
adc
cwtl
ret
call
lcall
mov
mov
mov
cmp
pop
jecxz
add
imul
sbb
mov
dec
dec
sbb
sarl
add
loope
jge
mov
sbb
les
mulb
mov
mov
popl
mov
pop
ljmp
or
addr16
test
adc
and
movsl
shll
dec
adc
push
push
lahf
sti
dec
pop
xor
mov
lret
dec
or
loop
inc
movsl
jp
movsb
out
xchg
cmc
cmp
dec
mov
push
outsl
negl
mov
lret
or
cmpsl
inc
ss
pop
xor
mov
test
mov
test
idivb
addl
cmp
call
pop
add
pop
mov
fnsave
push
mov
xor
sbb
mov
dec
xchg
sbb
inc
rcrl
sbb
gs
dec
loope
repnz
clc
mov
int
mov
inc
mov
add
bound
in
das
push
jl
pop
ss
pushf
cmp
jo
or
or
or
push
out
push
mov
test
sbb
pop
cmp
mov
ja
lahf
and
push
adc
iret
lret
push
aam
push
xchg
cmp
cli
xchg
sbb
pop
mov
sbb
ljmp
ljmp
sub
inc
sub
push
aaa
dec
inc
xor
xchg
dec
xchg
xor
outsl
mov
or
mov
sub
dec
inc
roll
stos
les
mov
mov
loope
mov
aas
test
rcrl
mov
pop
into
xor
dec
rcrl
rcll
rdmsr
popf
cld
sbb
jns
xchg
nopl
loop
pop
ret
jmp
pop
jb
leave
dec
and
sub
xor
inc
ret
pop
or
sarb
fisubl
mov
pop
js
push
imul
leave
push
dec
jae
mov
scas
cs
push
adc
xchg
cmp
notl
arpl
and
push
xor
xchg
push
jmp
cwtl
xchg
gs
ret
inc
xchg
jns
sahf
or
mov
mov
xchg
pop
ja
rorb
xchg
dec
sti
pop
jmp
int
std
sub
adc
dec
icebp
loopne
frstor
and
mov
xchg
cld
sub
inc
sarb
ficoml
xchg
jb
loope
nop
push
pop
lcall
mov
pop
std
jno
mov
lds
cmpsb
mov
iret
pop
pusha
fcmovnu
jbe
cld
pop
mov
or
sbb
test
cs
xor
adc
push
imul
sbb
fnstenv
pop
insl
xchg
cmp
mov
int3
fistpll
xchg
jno
mov
add
pushaw
pop
test
mov
adc
xchg
push
mov
jnp
rcll
push
shll
fs
inc
mov
in
imul
pop
pop
xchg
push
push
stc
or
cli
pop
movsl
mov
test
data16
ror
mov
cmp
fdivl
jge
lods
pop
xchg
lods
and
stos
shrb
sbbb
and
cwtl
nop
enter
dec
sbb
loop
cwtl
lds
xchg
in
cmp
adc
outsb
out
cmp
mov
dec
xlat
cmp
adc
xchg
mov
jnp
jp
mov
push
sbb
jle
hlt
mov
rorb
or
xor
mov
xchg
mov
out
jmp
loope
dec
or
js
mov
jmp
inc
pop
mov
ret
lea
incl
pop
imul
pop
ds
cmc
sbb
das
aad
jmp
loope
stos
mov
leave
jle
pusha
jb
test
lds
mov
jp
cmp
jecxz
jbe
fwait
xchg
jb
adc
jb
pop
inc
cmc
mov
push
pop
daa
rolb
scas
scas
jl
sub
lods
adc
adc
test
out
lods
xchg
sahf
dec
xchg
cltd
dec
push
jae
add
pop
xchg
scas
sbb
sbb
ja
mov
sti
nop
js
stos
mov
xlat
inc
mov
js
mov
ret
mov
into
sbb
mov
enter
ret
fcoms
mov
int3
enter
mov
pop
cmpsb
mov
icebp
mov
lods
xor
insl
test
mulb
sti
cmp
pop
push
inc
mov
xchg
stos
pusha
or
xor
leave
test
push
push
add
addr16
int3
int3
mov
outsb
js
mov
addr16
jg
sbb
repnz
inc
sbb
mov
xor
or
sub
pop
jle
sbb
ss
sahf
and
sbb
xor
dec
lcall
sub
addr16
xchg
movsb
pusha
pop
dec
dec
cmp
jno
mov
movsl
aas
xchg
jg
lcall
push
pop
lret
imul
mov
xchg
sub
jno
jo
mov
mov
fimull
xorb
les
mov
mov
adc
pcmpgtw
adc
inc
push
dec
mov
scas
mov
mov
fisttpll
and
fcomps
sbb
data16
push
push
je
subl
pop
adc
test
and
test
pop
cmp
cmpsb
addr16
jae
push
sbb
test
pop
push
movsb
imul
cmp
test
jns
ja
imul
js
shrl
sub
mov
andl
int3
test
sub
add
or
and
xor
dec
pop
addr16
cwtl
dec
sub
sbb
aaa
cmpsb
notl
xchg
out
mov
mov
adc
push
popf
imul
jg
dec
dec
pop
add
dec
loopne
pop
mov
frstor
sbb
sub
mov
mov
shr
idivb
out
mov
mov
mov
push
pop
xchg
dec
inc
pop
popf
mov
stos
int3
add
addr16
sub
shll
fwait
ljmp
adcb
adc
neg
loopne,pn
pusha
inc
xor
loopne
cmp
jo
out
and
fst
jp
mov
shl
jb
shrb
xchg
leave
add
or
push
jb
cmp
and
mov
data16
int
mov
data16
jbe
mov
lock
sbb
cmp
lret
int
pop
cmp
pushf
je
xchg
in
add
scas
jge
add
jnp
lea
pushf
jnp
jae
mov
pop
movsl
xchg
popa
jl
pop
push
rcrb
or
adc
fnstcw
mov
imulb
cltd
push
mov
add
int
mov
inc
push
mov
sbb
fldenv
jge
lahf
fsts
insl
mov
xchg
cmc
ss
adc
lds
and
mov
add
aaa
jae
adc
or
gs
add
sbb
fwait
mov
inc
test
mov
push
sub
mov
loop
fdivp
repnz
push
mov
js
lods
mov
rorl
push
mov
popa
aas
fcmovne
rcrl
aas
push
dec
jp
pop
pop
xorl
int3
add
push
outsb
dec
out
mov
push
adc
repnz
int3
int3
int3
js
sub
lods
in
add
insb
fdivl
fwait
push
fidivs
notb
sbb
gs
mov
adc
xchg
rorl
mov
sbb
or
daa
cs
in
daa
cmpsl
loopne
aam
cmp
into
mov
rorb
iret
jno
xchg
jg
addr16
sub
lock
ljmp
out
add
dec
das
push
sbb
inc
pop
dec
lret
fucomip
pop
stc
push
in
lahf
ficoms
lods
pop
mov
and
daa
pop
adc
dec
jns
into
repz
pop
xchg
ja
pushf
adc
cmp
nop
sbb
clc
mov
jle
aas
dec
lret
add
jo
sbb
repz
lds
es
das
fsubrs
cmp
cmp
mov
out
test
inc
or
mov
adc
pop
inc
jmp
iret
xor
dec
mov
popaw
mov
js
cmp
xchg
ljmp
jne
sbb
cmc
pop
popl
inc
lods
push
movsl
mov
cmp
xchg
stos
push
push
and
jbe
inc
mov
add
xor
subb
push
add
adc
adc
je
aas
lret
jo
fsubl
cwtl
cmpsb
ret
xor
fisttps
sub
inc
adc
mov
push
mov
add
pop
cmpsb
pop
push
popa
adc
mov
jb
jp
popf
test
das
out
std
mov
icebp
sarb
call
jmp
xchg
push
test
fisttpll
loopne
int3
int3
int3
jns
adc
pop
sbb
pop
pop
or
push
ljmp
inc
popf
addl
push
ljmp
ret
rclb
xlat
mov
mov
popf
sar
mov
jo
int3
mov
mov
loope
cs
xor
pop
inc
mov
mov
fstp
cld
addl
dec
cmp
and
addr16
fnstenv
shlb
daa
cmp
adc
cld
push
lcall
mov
data16
jge
and
push
mov
repz
push
push
repz
jbe
dec
rcrl
jle
dec
mov
adc
add
push
xchg
or
xchg
into
pop
fwait
into
jne
lret
and
stc
mov
sub
call
or
dec
xchg
mov
mov
shrb
xchg
sbb
xchg
notb
adc
lea
in
fsubrs
out
push
push
std
push
pop
xor
sub
mov
xor
rorb
and
mulb
or
lret
mov
sub
fcoms
dec
fnstcw
enter
jge
test
jo
adc
lret
xor
mov
cmpsb
mov
outsb
xchg
gs
sub
jbe
cltd
insb
push
lods
fisubs
cld
aad
push
in
or
pop
stos
push
loope
push
pop
dec
jae
sbb
adc
sub
loop
adc
adc
push
pushl
xor
popa
dec
dec
sahf
imull
repnz
fdivr
dec
mov
or
push
xor
int
iret
mov
push
repnz
jne
push
imul
testl
outsb
add
mov
cmp
adc
fs
test
sti
shrb
jbe
and
insl
push
and
enter
push
cmc
pop
hlt
add
sbb
add
xlat
inc
cli
adc
adc
repnz
xor
aad
sbb
cltd
out
rorb
push
xchg
sub
cli
push
pop
or
adc
mov
push
adc
xor
add
rcrb
imul
xor
dec
adc
cmp
shlb
lods
add
or
add
ljmp
imul
int3
int3
int3
sbb
jae
mov
sbb
inc
cmc
insl
filds
adc
outsl
movsl
jg
inc
pop
call
xchg
test
in
test
insl
jecxz
jg
dec
adc
push
or
ret
jae
out
in
mov
sbb
sub
lcall
cld
dec
std
push
movb
jp
fs
mov
fildll
pushf
aaa
mov
int3
dec
push
xor
and
sti
scas
pop
jmp
or
inc
out
mov
addr16
test
adc
or
cmpsb
add
cmp
inc
inc
rcr
imul
ret
or
xor
inc
mov
push
sbb
aad
test
push
fisttpll
push
ja
cmp
fildl
inc
sbb
adc
icebp
mov
repnz
nop
fsts
sbb
adc
sti
xchg
fnstcw
ret
addl
xchg
dec
divl
sarl
cmp
pop
mov
insb
xchg
fldcw
xor
movsb
and
xor
test
sbb
push
xor
sbb
ret
test
jmp
fcomps
cmp
js
icebp
xchg
addb
or
data16
rolb
sbb
aam
das
jl
adc
dec
or
xor
roll
xor
std
inc
gs
xchg
and
lea
test
inc
js
mov
repnz
adcb
mov
mov
fnstcw
dec
fdivl
xchg
ja
daa
dec
inc
mov
and
mov
dec
sbb
fimuls
jb
sub
pop
fsts
pop
imul
loope
repz
aam
cs
add
fcomp
ds
call
stos
add
xor
mov
ljmp
xlat
add
mov
imul
xchg
inc
inc
in
mov
mov
jg
insb
dec
push
sbb
jae
push
add
addb
mov
fiadds
es
xchg
ds
fdiv
pop
mov
test
lret
xchg
sti
jg
ret
dec
jbe
mov
scas
push
pop
mov
test
mov
ret
das
mov
int
pushf
mov
mov
adc
adc
int3
inc
dec
mov
cmpsb
cmp
call
dec
add
fs
dec
pop
jecxz
in
ljmp
pop
aad
add
dec
inc
lock
sbb
loope
add
lock
test
lahf
jno
cmpsl
dec
outsl
cmp
mov
xor
cmp
outsb
mov
or
in
jnp
enter
jge
pop
jb
stc
sbb
decl
xor
test
outsb
in
push
sub
sbb
adc
and
sbb
adc
int3
int
xor
jge
jg
inc
lods
ljmp
aaa
mov
jle
and
frstor
movsb
fsubrs
xor
dec
sub
in
dec
push
inc
mov
inc
push
sub
and
lcall
push
cli
in
nop
inc
int3
mov
fidivrs
mov
pop
push
pushf
add
std
inc
arpl
pop
and
inc
inc
sbb
fsubs
cwtl
sti
addr16
in
push
push
data16
cmp
jg
movsb
or
adc
mov
mov
flds
jecxz
push
lret
fs
add
xor
mov
into
cmp
fsubrl
stos
aam
sbb
shl
int3
int3
int3
int3
int3
std
jbe
insb
jmp
mov
mov
pop
ja
adcl
inc
orb
mov
lods
rcrb
xchg
cld
pop
cld
xchg
cmp
fwait
or
mov
mov
sbb
stos
scas
insb
push
inc
inc
flds
adc
sub
fcompl
xor
adc
add
mov
xchg
lcall
sub
dec
fildll
dec
push
shll
outsl
pop
incl
mov
mov
cmp
fidivrs
mov
jo
push
imul
lods
xchg
sub
outsb
inc
out
pusha
cwtl
fnstcw
cmp
inc
test
inc
aas
sbbb
mov
and
mov
xchg
lea
dec
fadds
fcomps
out
insb
push
add
repnz
jnp
cltd
ja
xor
xor
ja
sahf
jne
sbb
cmp
mov
xor
popf
test
jbe
out
xchg
cs
lods
cwtl
and
popw
shl
lahf
inc
rcrl
mov
fiaddl
mov
daa
adc
jmp
push
aaa
mov
mov
outsb
dec
jno
cld
cs
pushf
pop
sbb
fstpt
jb
cmp
enter
push
sub
flds
xchg
sbb
shrl
lret
ss
out
xchg
cmp
mov
dec
imul
ljmp
sub
andl
inc
adc
and
cltd
fnstsw
movsb
mov
inc
popf
sub
and
insb
and
out
sub
or
mov
aam
adc
mov
add
push
add
cld
cmpsb
fmulp
and
add
jbe
into
dec
push
cmp
outsb
push
aam
subb
scas
test
mov
ret
adc
je
test
lcall
sbb
aaa
push
in
sub
enter
jb
pop
add
pop
rolb
adc
and
cmp
aad
dec
push
pop
and
add
iret
nop
jmp
arpl
aas
cmpsb
mov
inc
xor
repnz
xor
int
fldenv
add
pop
sbb
cld
cmpsl
mov
cs
movsb
das
aaa
adc
cmp
mov
punpckldq
xchg
loop
in
cmp
aaa
cmovo
ljmp
lds
movsl
ljmp
aam
es
mov
cmp
jecxz
xchg
cmpb
lcall
sbb
sbbb
mov
push
cmp
xor
ss
fdivrs
ljmp
adc
mov
and
adcb
and
sub
xchg
jb
inc
or
inc
push
adcl
push
sbb
int3
int3
int3
int3
cmc
dec
lods
fwait
xchg
cmp
cli
inc
and
mov
mov
sbb
ss
ror
xchg
cmp
shlb
out
mov
sub
imulb
mov
cwtl
mov
push
or
push
dec
pop
or
adc
pop
fnstenv
fdivrs
mov
add
data16
dec
sahf
inc
inc
sub
cld
lcall
mov
pop
frstor
sbb
push
xchg
jo,pt
pop
sbb
push
or
stos
or
in
sub
jb
cmp
and
xchg
adc
pop
push
cltd
cmpsb
adc
cmpsb
dec
add
clc
lods
xchg
pushf
pop
mov
fldt
rolb
or
clc
mov
cmp
mov
aad
daa
lock
repnz
sti
xchg
xorb
mov
adc
add
in
inc
xchg
shll
push
adc
ret
pushl
xor
xchg
cmp
fnsave
inc
cmp
xlat
repnz
push
cli
ljmp
pop
icebp
fwait
dec
scas
and
cmp
pop
divb
mov
add
dec
dec
and
inc
push
andl
xchg
clc
and
mov
mov
cld
mov
cmp
cmc
xchg
lcall
push
sbb
pop
jmp
pop
xchg
xchg
leave
rcrl
shll
pop
out
out
loope
push
pusha
adcl
pop
xor
sbb
xor
out
sub
mov
pop
or
cli
or
mov
xor
mov
mov
adc
jg
in
dec
and
xor
lds
repz
fildl
aam
cltd
jne
vmovdqa
push
in
adc
dec
add
int3
int3
int3
int3
int3
cmp
push
xchg
pushf
adc
out
mov
sbb
jge
fwait
ja
mov
cmpb
push
and
xor
cmp
je
add
ret
enter
cmp
ljmp
andb
enter
mov
mov
enter
push
call
mov
mov
xchg
stos
sbb
sub
jmp
out
jae
mov
aad
pop
cli
clc
fwait
xor
icebp
or
lock
jp
pushf
add
outsl
ret
cmpsl
hlt
fisubs
into
fdivr
out
int
lods
sbb
sub
jno
adc
loopne
ss
push
xor
test
push
pop
int3
pop
mov
fsubrs
inc
push
lret
mov
xchg
xchg
xchg
mov
sahf
cmpsb
test
push
sahf
mov
dec
or
adc
loopne
cmp
jns
pop
dec
fsubr
push
sub
scas
lock
jno
hlt
dec
fiaddl
sti
add
pusha
dec
ljmp
or
pop
nop
jns
aaa
mov
daa
filds
sub
add
cmc
or
rolb
or
out
dec
inc
mov
push
mov
xchg
neg
jmp
incl
fidivrl
loope
push
rcrb
mov
or
int3
int3
xor
jae
mov
jle
adc
test
loopne
enter
mov
push
in
cmpsl
mov
outsl
cmp
leave
mov
push
enter
xlat
scas
adc
loope
inc
std
push
loope
sti
jmp
pop
loop
mov
fcomps
and
inc
inc
movsb
fimull
sbb
mov
mov
mov
dec
test
mov
adc
xchg
sub
aam
jle
mov
sbb
jne
clc
mov
mov
int
idivb
cmc
sti
adc
rclb
std
cli
add
lcall
imulb
pop
xor
stos
or
mov
nop
addr16
pop
lcall
xchg
cmp
sub
aam
lret
and
rolb
add
xchg
mov
inc
or
ja
loop
es
cltd
dec
pop
pop
test
mov
mov
fwait
out
dec
xlat
inc
imul
mov
lahf
sub
pop
jbe
jge
and
mov
cmp
mov
repnz
push
vsubsd
dec
mov
stc
test
lock
arpl
add
pop
outsl
or
movsl
mov
dec
pop
push
mov
sbb
xchg
testb
sbb
jns
jl
mov
inc
xchg
mov
xchg
sub
rcrb
pop
pop
push
sbbl
xor
jno
into
or
xchg
sbb
sub
lret
enter
aad
fcoms
and
std
or
insb
mov
xchg
xchg
stc
inc
jle
sbb
lods
in
jae
lahf
sub
mov
and
xlat
movsl
inc
mov
add
mov
ret
mov
stc
loope
fs
pop
inc
sbb
jbe
loop
std
ja
xchg
sbb
jae
test
mov
cs
outsb
es
inc
int
jns
lds
jo
out
aam
pop
or
or
sub
xorb
jno
subl
inc
rcl
sub
or
das
jl
sahf
scas
mov
pop
mov
mov
adc
pushf
or
add
sbb
aam
cmp
cmp
cmc
je
aad
fsubp
pop
into
xor
adc
mov
cmc
into
jae
mov
sahf
ud0
jmp
scas
aaa
jbe
sub
rolb
mov
in
xor
jns
cmp
jnp
jno
cmp
cmp
adcb
int
shr
dec
arpl
out
out
es
sub
or
dec
dec
push
mov
mov
inc
mov
mov
sti
icebp
ljmp
into
stc
sub
popl
mov
sub
mov
call
movsl
loope
cmp
mov
aad
data16
psubq
lea
mov
insb
adc
xchg
ja
movl
cmpb
repnz
loope
inc
inc
inc
jbe
imul
daa
push
cmp
dec
sbb
int3
int3
int3
int3
test
addr16
int
pop
dec
ret
arpl
push
mov
stos
mov
or
mov
sahf
in
iret
je
sub
xor
stos
adc
js
lcall
cli
dec
cmp
repnz
or
sub
int
or
scas
jo
lock
nop
adc
mov
rcl
pop
push
inc
sbb
mov
das
out
dec
fwait
mov
int
push
jo
jle
pop
out
xchg
adc
or
cmp
std
imul
orb
xor
mov
jne
mov
cld
xchg
aam
test
sbb
fwait
clc
mov
sbbl
mov
pop
inc
mov
cmp
push
or
cmpsb
lods
xor
sarl
pushf
hlt
rolb
push
add
aad
aas
mov
pop
in
mov
push
mov
rcrb
or
test
and
lahf
ljmp
dec
ja
sbb
in
insb
cltd
inc
movsl
cmpsl
ror
dec
mov
enter
aam
inc
jmp
call
addr16
test
xchg
icebp
cmpsb
fistps
xor
inc
mov
mov
sub
stos
jo
inc
dec
inc
cmpsl
je
push
lods
push
adc
inc
pop
add
imul
pop
decl
subl
or
jo
sbb
cmp
dec
adc
add
mov
lcall
clc
add
pop
xor
mov
in
mov
loope
mov
rcrl
jge
adc
testb
enter
push
enter
scas
or
xor
push
sti
fstpt
hlt
mov
sbb
or
push
xchg
mov
jg
lods
sbb
add
ficoms
dec
and
push
inc
imul
add
and
dec
bound
leave
cmp
das
ljmp
xchg
mov
push
aad
into
adc
push
clc
and
add
pop
push
xchg
inc
cmp
mov
pop
pop
cmp
ficomps
and
bswap
int3
int3
int3
int3
jae
ret
inc
cmp
mov
mov
add
pop
mov
test
mov
test
fisttps
dec
sarb
out
in
ljmp
popl
ffree
movsl
adc
add
push
shll
popa
shll
adc
hlt
flds
xlat
sbb
adcl
xchg
cwtl
sbb
lds
fldenv
lret
cli
in
cwtl
int3
fisttpl
or
pop
lock
mov
fwait
pop
cs
nop
cmp
push
clc
mov
and
xlat
fbstp
call
jl
mov
rcll
jp
dec
pop
jae
sbb
fcmovnbe
sub
popa
in
xchg
adc
stc
inc
mov
int3
add
lods
ret
lret
js
mov
push
ljmp
xor
push
pop
mov
movsl
movsl
call
dec
pop
dec
mov
fiadds
add
fistpl
xor
popf
push
movsl
icebp
cmp
std
jns
cmc
jne
loop
lods
in
xchg
test
pusha
push
in
mov
pusha
pop
xchg
imull
dec
lret
cmp
push
loopne
or
add
out
scas
icebp
shr
add
xor
leave
or
mov
add
sti
xchg
out
jecxz
xchg
push
cmp
pop
fs
fbld
push
test
fnsave
in
stc
mov
movsl
fldcw
jge
sub
pop
les
inc
lods
xchg
addl
dec
rorb
es
cmp
lea
test
push
xchg
into
add
pop
testl
enter
shrb
and
sub
jb
std
sub
dec
out
fmull
jnp
test
add
push
movb
adc
inc
repz
inc
cmp
in
push
lcall
xchg
cmp
sub
or
pusha
pop
les
add
repz
cmc
sub
xor
pop
mov
in
sahf
xchg
stos
ss
or
adc
loope
xchg
divb
dec
outsl
sbb
out
xor
fstps
stos
dec
inc
in
pop
out
jg
test
fcom
sti
outsl
aaa
sarl
jae
leave
adc
int3
int3
outsb
mov
rol
sbb
and
sbb
dec
gs
cmp
fisttpl
decl
shl
mov
ds
pop
insl
add
nop
and
loop
inc
sub
mov
shlb
jae
fwait
inc
movsb
or
ret
push
add
inc
mov
inc
pop
push
movsl
leave
or
pop
aam
cs
mov
mov
jmp
out
shlb
push
loopne
and
push
mov
lock
fwait
pop
add
pop
clc
nop
pop
sbb
inc
sbb
jecxz
mov
pop
retw
pop
adc
or
test
push
js
scas
xchg
call
sub
jbe
inc
cmp
jnp
push
dec
ljmp
add
xchg
jns
arpl
mov
xor
testb
xorl
cld
aaa
mov
add
ja
cmpsl
sub
pop
loop
loopne
out
int
clc
push
sarb
pop
mov
and
clc
test
sub
add
cld
add
stos
out
jae
ret
das
xchg
cltd
jecxz
adcb
fs
sub
inc
push
sbb
lret
inc
pop
test
insb
mov
stos
inc
test
icebp
adcb
dec
mov
les
and
add
dec
xchg
cmp
faddl
pushf
popf
and
pop
pop
push
push
mov
inc
mov
testb
stos
and
xor
mov
negb
pop
popa
jecxz
or
cmc
sub
cmp
cmp
pop
bound
dec
sub
jb
std
in
notl
add
push
mov
dec
cmp
scas
mov
push
in
mov
cmp
xorl
pushf
sbb
push
roll
fisttps
aam
adc
imul
inc
cvtpi2ps
movsl
cmc
test
mov
ret
push
rorb
and
loopne
pop
jne
xlat
or
mov
popa
xor
dec
add
push
mov
mov
dec
test
jge
cwtl
scas
lcall
cmp
movsb
fadds
xlat
dec
stos
ss
inc
lret
xchg
idivl
pop
movsl
push
cwtl
pop
ljmp
aas
cltd
stos
incb
adc
call
ja
cltd
lds
icebp
sbb
or
shrl
rcl
test
inc
pop
pop
negl
lea
or
inc
scas
ret
push
cmp
xchg
or
lods
mov
or
je
int3
int3
int3
int3
int3
or
sbb
repz
adc
daa
or
hlt
and
stos
mov
push
or
adc
sub
ficompl
inc
xor
push
jp
popf
dec
out
fnop
sbb
fcompl
int
mov
adc
fstpt
dec
aas
mov
mov
out
mov
ja
dec
dec
mov
push
mov
pop
stos
arpl
test
mov
inc
outsb
test
shr
dec
into
mov
popa
sti
jne
shlb
or
mov
xor
ret
addr16
xor
ds
bound
inc
xor
int3
and
scas
dec
loope
cmp
aad
pop
in
ja
insl
mov
ret
mov
repz
mov
cmpsb
mov
lods
sub
call
inc
mov
enter
sbb
into
daa
ficompl
pop
add
cmp
add
jecxz
push
sub
mov
mov
sbb
mov
shll
sbb
jae
ds
int
loope
je
xor
and
sbbb
or
or
or
sub
add
rolb
js
lods
daa
call
jmp
adc
rcrl
sub
les
cmpb
imul
jecxz
jnp
inc
inc
cmp
sar
pop
sahf
lret
jl
push
aaa
setl
shll
ds
cmp
bound
aaa
xchg
xor
mov
cltd
xchg
jge
xchg
mov
leave
sub
inc
in
or
mov
test
mov
icebp
movsl
insb
pop
dec
pop
dec
test
dec
cltd
mov
adc
jmp
test
pushf
dec
pop
push
pop
mov
inc
mov
mov
aas
inc
jecxz
dec
mov
mov
pop
cmp
lods
sub
icebp
inc
popf
mov
add
mov
xchg
test
jmp
mov
sbb
popa
mov
call
mov
cmp
mov
cld
mov
movsb
jae
pop
sarb
mov
push
or
push
mov
sub
stos
out
xchg
pop
les
leave
aas
call
imul
adc
int3
loop
pop
inc
jmp
loop
out
adc
or
xor
pop
inc
push
lock
incb
test
aas
and
into
mov
popf
pop
sahf
jle
mov
mov
add
sbb
pop
sub
lahf
ja
dec
xchg
gs
push
push
sub
push
out
mov
rcrb
clc
test
adc
insb
sti
mov
into
lds
mov
test
shlb
pop
adc
mov
add
mov
add
test
cmp
mov
popa
dec
dec
mov
pop
xchg
inc
pop
aas
loop
add
xchg
in
xlat
test
inc
popf
sti
xchg
std
lcall
flds
test
pop
dec
ret
sahf
xchg
push
popf
and
jp
outsl
xchg
cwtl
cmpsb
adc
sbb
and
nop
cli
inc
pop
xchg
icebp
mov
fcompl
lret
adc
mov
popa
adc
inc
xchg
mov
out
leave
mov
push
outsl
or
mov
in
and
in
popa
xchg
xchg
mov
mov
jnp
sub
pop
dec
inc
cs
cwtl
psraw
aam
decl
cltd
imul
adc
pop
pop
inc
push
lahf
jl
jno
adc
or
adc
adc
imul
int
mov
ficoml
popf
fsub
and
fbld
lret
add
sbb
scas
test
add
lahf
mov
mov
out
outsb
inc
bound
popf
cs
sbbl
xchg
out
inc
pop
and
sbb
out
push
std
out
cmc
cs
adc
sub
or
bound
xchg
pushf
xlat
hlt
jne
cltd
inc
and
sbb
fsubrl
int
jmp
or
insb
ds
cmp
movsb
cmp
lods
repz
inc
test
xchg
test
fnsave
mov
fdivs
hlt
ret
cmp
push
aad
rcrb
cmpsl
cmpsb
fstpl
shrb
out
imulb
fisttpl
mov
mov
loop
or
test
cltd
inc
pushf
repnz
roll
jae
jne
pop
stos
jns
imul
into
adc
sti
insl
cmp
and
sub
add
push
mov
inc
pushf
in
sar
jns
test
fwait
push
pop
xor
jle
xlat
lods
xchg
ja
push
mov
jns
mov
inc
jp
dec
inc
cmpsl
sub
jg
adc
aam
pop
iret
jbe
inc
jg
jae
jle
and
addr16
jmp
jb
sub
add
daa
inc
xchg
test
sbb
dec
xor
imul
mov
enter
in
ret
pop
mov
push
repz
arpl
leave
xor
xor
inc
pop
popa
popf
ja
out
test
fst
jge
cmp
stc
jmp
lods
addr16
shlb
and
or
test
ret
mov
int3
int3
int3
int3
rcrl
xchg
fisubl
xchg
xchg
adc
add
mov
jne
mov
fildl
inc
aam
inc
cwtl
mov
cmp
adc
adc
incb
fisttpl
imul
mov
push
mov
lcall
jne
sub
sub
mov
xchg
push
mov
xchg
and
add
mov
lods
orb
or
sarb
fidivl
aaa
dec
scas
sbb
sbb
outsb
jae
xor
ret
sub
xchg
mov
adc
pop
lcall
stos
loop
int
or
cmc
movsl
ja
add
nopl
adc
lods
imul
or
lret
xchg
mov
or
sbb
mov
sbb
jmp
insl
mov
dec
sahf
aaa
adc
xchg
leave
fucomp
jnp
cs
scas
sarl
dec
mov
jge
inc
fistps
dec
lds
adc
repz
stc
stos
pop
nop
pop
fdivs
mov
dec
popf
xor
jbe
adc
enter
push
cmp
mov
shlb
add
xlat
adc
aad
add
sub
adc
cld
sbb
mov
and
lcall
test
mov
sti
lret
xor
sub
push
test
pusha
pop
mov
sub
add
nop
mov
rolb
lods
aaa
xchg
lea
loope
stos
fstpt
sbb
jg
lcall
xchg
mov
fisubs
popa
rcl
cmp
popf
outsb
lret
add
pusha
inc
lock
xor
call
xchg
outsl
sub
out
lea
pop
popf
es
xchg
out
jmp
pop
sbb
mov
cmpsb
adc
sbb
and
mov
cwtl
out
sbb
and
mov
mov
popa
mov
aas
jecxz
sub
sub
call
out
jbe
push
mov
sub
or
into
fistpl
into
mov
adc
pop
pop
in
sbb
cmpsl
sub
inc
sub
lods
sub
stos
inc
das
or
xchg
punpcklwd
inc
shll
arpl
ror
sbb
into
ret
mov
lods
pop
into
aad
dec
mov
or
or
std
out
loopne
jg
mov
mov
test
fcoml
insl
decb
int
call
cmp
aam
sahf
inc
ljmp
lret
inc
dec
aam
adc
das
cmp
sets
enter
fdivl
fisubl
in
lock
add
jp
fwait
sarb
into
out
mov
sbb
sub
inc
xchg
fsubrs
dec
nop
push
imul
enter
lock
call
cmp
or
sbb
push
cmp
insb
sub
aad
cwtl
dec
mov
pop
scas
pop
or
sbb
xor
insl
test
mov
fsubrs
sbb
mov
pop
popf
lods
nop
mov
imul
imul
dec
sarl
test
cmc
push
jge
cmpb
insb
cmp
loop
icebp
add
pop
jp
filds
jge
xchg
imulb
repz
in
cs
xor
add
rcrb
mov
sub
ja
les
cmpsl
loope
jo
xchg
ret
subl
lret
rorb
sub
nop
add
mov
cmc
and
out
pop
and
jl
imul
add
dec
int3
int3
int3
int3
repnz
cmp
push
enter
mov
imul
dec
push
data16
cmp
enter
movsb
in
cmpl
mov
daa
test
std
aad
stos
or
sar
mov
arpl
subb
sbb
gs
lcall
mov
int3
int3
pop
out
rorb
cmp
push
les
rcrl
push
dec
or
loope
inc
adc
insb
sbb
inc
push
lea
jns
adc
test
rorb
mov
cmp
inc
in
arpl
inc
pop
push
push
and
mov
pop
push
inc
or
add
xchg
les
and
imul
sub
xlat
xor
mov
add
pusha
faddl
add
into
addr16
stos
int
das
push
mov
int
xor
mov
push
loope
lds
push
xchg
sbbb
mov
sbb
dec
test
int3
int3
add
inc
cwtl
xor
jge
fdivrs
rorb
popa
mov
xor
je
jp
push
cmp
xor
mov
xor
jb
mov
cld
push
out
add
xchg
rorb
pushf
setb
filds
adc
xchg
sbb
mov
add
xor
mov
xchg
imul
jo
imull
loop
and
push
push
and
xchg
fcmove
mov
daa
jl
mov
and
xchg
arpl
sahf
push
addr16
xor
rclb
lods
and
sbb
dec
mov
jnp
popf
ljmp
xchg
push
or
sbb
cmp
dec
ret
std
push
xor
dec
mov
push
mov
pop
mov
out
mov
push
and
mov
mov
jmp
leave
scas
xor
jne
jns
mov
xor
test
jne
inc
mov
or
push
pop
add
jb
dec
mov
jb
cmpsb
mov
ss
inc
jno
mov
pop
jmp
jmp
out
push
cmp
rorb
scas
pop
jnp
aad
sub
jnp
xchg
mov
imulb
ds
clc
scas
repz
xchg
sub
push
addr16
push
lods
fdiv
testb
aam
out
dec
mov
dec
xchg
scas
xchg
mov
sub
push
orb
clc
pusha
xor
pop
add
dec
pop
xor
test
mov
jbe
fdivrl
scas
mov
fistps
test
pop
or
and
pop
arpl
mov
adcb
fcompl
or
xchg
sub
and
xlat
pop
inc
xchg
mov
jecxz
xchg
xchg
xchg
ss
fnsave
sub
test
jge
sbb
pop
xchg
fdivrl
push
inc
jmp
cmp
fisttps
mov
and
ds
lret
push
or
dec
xchg
arpl
mov
stos
pusha
xor
jnp
movsl
or
mov
lcall
cmp
nop
fsubrl
fxch
mov
popa
cmp
mov
fbstp
sahf
out
lret
or
testb
imul
pusha
jl
std
jge
out
mov
inc
ret
push
mov
loope
mov
adc
mov
insb
pop
incl
sbb
or
movsl
and
mov
cmp
add
roll
lcall
or
xchg
int3
int3
lods
fdivrs
sahf
mov
jge
idivb
inc
sub
add
stos
pop
cwtl
dec
fadds
ljmp
dec
stos
jno
and
rcl
xor
xchg
stos
ljmp
cmp
stos
mov
dec
pop
xchg
lock
inc
push
into
pop
mov
pop
fidivrs
mov
pop
inc
mov
adcb
icebp
cmp
je
sbb
int
add
and
popf
inc
dec
mov
sbb
dec
adc
xor
int
fs
loop
dec
adc
ficoml
mov
xchg
sahf
mov
shrb
pop
adc
dec
sbb
cmp
dec
push
fstl
test
lcall
es
cld
sahf
or
push
jb
sbb
les
inc
test
pop
addr16
rolb
je
add
sub
ss
sub
scas
xlat
pop
cs
xchg
fwait
mov
and
cmp
mov
cmp
jl
fidivrl
cmp
mov
or
mov
mov
cmpsl
and
adc
xchg
push
jg
inc
push
std
adc
push
stos
mov
iret
mov
notl
adc
mov
repz
xor
jbe
xchg
movsb
outsb
jns
cmp
loopne
lcall
rorl
push
orl
lds
jle
daa
in
add
nop
scas
enter
pop
lods
or
jnp
les
and
mov
int3
int3
int3
int3
jge
out
pushf
js
ds
sub
jmp
lahf
pop
xorl
lods
jle
xchg
add
fs
inc
insl
dec
push
jg
repnz
pop
stc
sub
stos
repnz
jnp
xlat
mov
and
sbb
xor
test
adc
push
cmp
mov
xchg
push
dec
sub
xchg
repz
icebp
sbb
ficoms
fucomp
dec
push
loop
lock
push
pop
mov
je
cmp
stos
ret
pop
lcall
out
dec
xchg
mov
sbb
and
mov
sub
aaa
aaa
add
arpl
lret
jns
xor
orb
paddd
cmp
mov
dec
xchg
lea
movsb
or
ja
shrl
pusha
lods
mov
sbb
adc
mov
flds
daa
inc
orb
sub
mov
jb
sub
mov
js
mov
clc
xor
addr16
sahf
scas
xor
cmp
push
push
das
lds
xchg
sbb
add
cmpsl
and
cmp
xlat
xchg
loop
sbb
iret
inc
lcall
add
mov
fwait
test
data16
push
out
insl
sbb
loopne
jge
ljmp
pop
push
orb
lcall
adc
out
cmpsl
pop
or
or
pop
jmp
sub
add
mov
xor
adc
loope
and
out
popa
loopne
fdivrl
into
jnp
pop
test
xor
jl
test
fildl
addr16
mov
inc
and
cmp
lods
fs
jmp
lock
pushf
sti
mov
test
cmp
dec
push
xchg
iret
icebp
push
orl
dec
int3
test
jge
xor
enter
push
mov
cld
mov
call
and
gs
mov
fcmovnb
jle
mov
repnz
dec
aaa
mov
into
clc
push
push
movsl
mov
scas
xor
out
jne
mov
addr16
shrb
arpl
movsl
out
mov
push
pop
es
out
cmp
fsubl
aas
loope
sub
jno
mov
rclb
aaa
xchg
orl
sbb
adcb
mov
test
or
push
add
sub
or
je
push
out
push
xor
out
pop
lahf
lcall
mov
pop
or
jnp
add
lea
pop
int3
int3
int3
int3
int3
xchg
mov
inc
and
icebp
mov
fsubs
sbb
jne
and
rorb
pop
arpl
push
sti
arpl
fwait
add
scas
pop
push
loop
cs
sbb
clc
cmp
out
pop
es
pop
xchg
lock
mov
pop
push
mov
mov
clc
adc
pop
int
pop
mov
add
inc
adc
lea
sti
sbbl
dec
pop
stos
sub
jb
insb
fisubrl
cmp
leave
pop
popa
pop
das
ja
stos
mov
jp
addr16
add
frstor
xchg
iret
test
push
cmpsb
add
int3
int3
int3
int3
int3
int3
rol
and
pusha
xchg
ja
push
adc
mov
shll
in
lds
fisubrs
mov
pop
fildll
and
pop
rcrb
inc
ds
cli
in
out
int3
rcr
in
jle
es
or
lds
or
lea
pop
shrb
loop
xor
cwtl
je
dec
ficoms
mov
sbb
and
ficoml
in
iretw
stc
push
leave
adc
rcll
rolb
lods
clc
out
popa
loopne
push
out
mov
ret
sub
and
pop
adcl
lret
les
pop
or
lahf
fbstp
or
stos
inc
cli
and
out
clc
scas
cmpsb
inc
int3
sbb
leave
xchg
bound
stos
push
or
stc
insb
add
in
shll
add
pop
pusha
xchg
push
add
jecxz
xor
xor
xchg
lret
sbb
push
aas
mov
push
dec
arpl
test
in
xchg
decb
std
sbb
dec
mov
enter
decl
pop
push
mov
push
mov
out
jmp
mov
adc
ljmp
aam
xor
mov
jecxz
mov
cmp
lods
lahf
lods
jno
int3
fs
sub
leave
xchg
dec
loop
sbb
dec
repnz
gs
outsb
notl
stos
les
jae
add
repnz
loopne
cmp
xchg
push
in
inc
nop
mov
jmp
adc
inc
inc
out
repnz
scas
pushf
lods
pop
lock
inc
push
push
xchg
ret
adc
setg
std
add
and
pop
mov
push
dec
push
in
cltd
imul
pop
xchg
clc
leave
xchg
sub
cltd
inc
push
mov
les
push
in
xor
push
aaa
test
cmp
insl
mov
sbb
or
movsb
cmp
test
into
ja
dec
pop
jle
test
xor
adc
retw
or
inc
or
sti
call
push
stos
aas
stos
mov
xchg
add
xlat
xor
repnz
jge
jle
pop
xor
push
aad
cltd
sub
rorb
movsb
inc
jmp
lret
pushf
pop
sub
mov
data16
jmp
movsl
test
movsl
out
out
cld
or
fdivp
in
adc
pusha
adc
mov
sbb
cmp
and
xor
fwait
loope
sub
push
sub
and
sub
daa
mov
mov
jecxz
testb
scas
mov
adc
pop
jmp
lock
sbb
std
pushf
inc
add
mov
ds
movsl
inc
mov
cmp
rcrl
out
push
inc
mov
nop
ret
cld
in
or
push
mov
sbb
mov
dec
push
fimull
lds
lea
in
cli
je
sbb
lcall
dec
adc
orl
pop
adc
push
mov
xchg
push
mov
in
test
push
movsb
jnp
xor
lret
push
stos
mov
add
sbb
cmp
pushf
inc
sub
cltd
jmp
lods
xor
cmp
xchg
outsb
dec
pop
test
push
imul
movsb
shlb
jg
in
loopne
jb
fs
insl
cmp
add
xchg
nop
mov
jns
cmp
movsb
sbb
jbe
jno
cs
xchg
lret
nop
in
js
inc
nop
push
sbb
jae
mov
or
xor
pminsw
xchg
xchg
inc
dec
rclb
mov
aad
in
cmp
mov
xchg
jb
mov
or
jg
scas
adc
fidivs
in
lds
cmp
fwait
and
aam
adc
sub
add
xchg
negl
cld
adc
push
shlb
je
pop
repnz
inc
out
leave
sbb
lds
bound
adc
inc
mov
inc
lods
jns
scas
mov
adc
hlt
scas
lcall
mov
inc
xchg
add
jp
xchg
push
push
pop
ss
dec
mov
pop
testb
shrb
cmp
inc
and
mov
test
ret
dec
imul
xor
mov
les
push
adc
fidivs
mov
pop
stos
pop
stc
rcrl
dec
mov
iret
in
scas
xlat
xor
fcompl
dec
stos
inc
jb
dec
adc
cltd
std
push
pop
xor
mov
mov
aas
pop
gs
dec
dec
inc
or
mov
out
jp
pop
stos
aad
int3
int3
int3
push
or
and
iret
lea
sub
xchg
lcall
fistl
push
fisubrs
xor
rorl
pop
les
mov
into
pop
ds
stc
sub
std
mov
push
pop
int3
cwtl
mov
add
and
test
test
pusha
pop
jo
dec
call
pop
pop
int
sbb
jbe
lods
add
inc
push
fwait
clc
inc
xor
cmp
lock
test
mov
xchg
int
mov
xchg
insb
adc
gs
lods
sbbl
jp
sbb
or
popf
add
je
push
mov
xchg
mov
and
push
dec
jnp
popa
and
outsb
stos
leave
sub
jb
pop
or
fisubs
stc
push
shlb
push
pop
movsl
jne
ss
loope
mov
jge
sbb
cmp
sub
sbb
test
std
mov
pop
cwtl
and
xchg
jmp
lahf
repnz
sbb
jl
rcll
imul
imull
cmp
jmp
inc
add
movsb
scas
push
daa
jmp
iret
xor
pop
mov
push
shlb
push
hlt
add
cmp
jle
add
xchg
mov
push
jg
sbb
inc
mov
inc
cltd
add
add
les
sbb
out
add
test
add
dec
mov
cmp
or
dec
lods
jne
mov
cwtl
fisttpl
outsb
daa
mov
mov
dec
sub
call
xchg
insb
fs
dec
icebp
xchg
aam
jnp
in
xchg
jmp
inc
xchg
adc
into
dec
mov
pop
pop
mov
mov
push
lret
repz
sbb
fisubs
pop
pop
or
dec
push
jecxz
and
out
popf
push
or
pop
daa
or
and
stc
push
divb
jnp
mov
pushf
lcall
les
mulb
mov
fiaddl
cmpsb
mov
jnp
mov
inc
mov
add
sub
popa
call
scas
aad
jg
fdivr
cmpsb
movb
jl
adc
cmp
pop
or
xchg
jnp
dec
push
adc
jbe
fwait
inc
aas
sub
sub
sarb
push
pop
dec
out
popa
outsb
aam
leave
imul
aam
sahf
outsb
jl
inc
add
cmc
movl
outsb
and
mov
sub
iret
lahf
ja
in
int
in
xchg
aad
into
pop
in
push
loope
out
stc
pop
or
outsb
outsb
push
push
push
sub
in
int3
int3
int3
int3
int3
cli
sub
pushf
push
push
lret
ret
xchg
ljmp
lds
and
aaa
pop
push
scas
add
push
adc
adc
lret
sarb
xor
pop
pop
mov
sbb
add
in
jg
push
leave
add
inc
xor
test
and
fcompl
lahf
ljmp
xchg
std
mov
inc
lock
stos
fsincos
xor
dec
mov
add
adc
pop
sbb
pop
fstp
mov
inc
or
pop
push
sbb
test
rorl
dec
cmp
jo
adc
lds
ss
fnsave
jne
xchg
jmp
lret
or
xor
int3
xchg
jns
pop
add
test
rcll
xchg
adc
movsl
sub
adc
mov
out
in
test
imul
dec
lret
test
sti
mov
ds
push
insb
jno
outsb
adc
dec
cli
sbb
es
popf
xor
stc
daa
out
mov
cli
sarl
rcll
sbb
push
xor
push
or
adc
sub
jne
test
into
out
cmp
jle
mov
push
xor
dec
dec
bound
sub
out
inc
cld
push
adc
and
inc
inc
jle
ja
cmpsl
test
pop
pop
cli
dec
mov
or
dec
stc
xor
push
fbstp
jnp
mov
rcll
push
in
sub
fwait
adc
mov
mov
adc
ljmp
out
push
lcall
add
dec
cwtl
in
pop
int3
lret
mov
pushf
inc
fldl
pop
in
or
mov
stos
pop
pop
ror
push
adc
cmpsb
xchg
xor
mov
fidivrl
jae
popa
push
stos
inc
in
add
mov
test
pop
xchg
jae
cmp
les
mov
and
stos
mov
xchg
inc
xchg
mov
sarb
cmp
dec
adc
test
add
jle
mov
lods
cmp
sub
adc
jbe
mov
sbb
sahf
xchg
jp
push
aas
xor
sbb
push
adc
dec
mov
push
lret
mov
insl
xchg
inc
adcl
out
push
push
je
cmp
jecxz
cmp
daa
mov
add
outsl
pop
and
into
frstor
push
inc
adc
mov
out
je
psubq
mov
mov
inc
imul
adc
mov
sub
push
add
lcall
repnz
lds
fdivs
sahf
dec
jb
sub
loopne
push
mov
mov
lahf
mov
jle
test
rorl
dec
test
xlat
or
and
js
jb
cmp
test
fwait
ret
inc
inc
cltd
mov
xor
lds
out
movl
int3
ror
xchg
jno
lret
outsb
sbb
mov
int3
int3
int3
int3
int3
mov
aad
sarb
add
sbb
adc
xchg
arpl
sbb
jbe
push
mov
pushf
insb
inc
into
xchg
call
xor
cmp
imul
push
mov
mov
int3
int3
int3
int3
das
dec
dec
fistps
adc
mov
mov
lcall
push
dec
push
dec
in
int3
int3
int3
into
inc
mov
add
jg
push
enter
push
pop
mov
std
xchg
cmp
insb
out
mov
lods
mov
jg
dec
lock
push
sbb
loope
add
xor
sti
cs
cmp
push
stc
sub
shl
scas
xchg
es
jmp
out
fdivs
sub
ljmp
daa
testl
mov
cmp
add
cmp
mov
mov
gs
sbb
outsb
inc
inc
cli
loop
mov
aad
adc
ss
sbb
jmp
leave
cli
cltd
sbb
push
imul
out
setge
call
cmc
mov
push
stos
insb
int
xchg
rorl
lcall
pusha
out
adc
fcomps
push
dec
pushl
jmp
jg
ret
or
out
popfw
pop
adc
ss
push
pop
sbb
loope
dec
fildll
pop
rclb
sub
dec
leave
test
scas
xchg
aad
jbe
pop
pop
inc
xor
or
lock
sbb
mov
mov
fcom
shrl
mull
stos
mov
call
inc
add
fadds
out
outsl
jne
cs
shrl
arpl
xor
loop
mov
xchg
push
cmp
inc
push
push
mov
sbb
aam
push
imul
loop
add
fisubrl
push
xlat
insl
sarl
lds
cmp
js
test
add
or
inc
stos
pop
lret
pop
inc
dec
ret
mov
ljmp
mov
sti
popf
popf
mov
xchg
jno
ret
mov
and
mov
xchg
inc
mov
fnstcw
mov
jno
xor
or
mov
aaa
jno
jno
fistpll
lods
jno
pop
arpl
xchg
out
icebp
mov
xchg
pop
pop
inc
and
mov
iret
push
mov
clc
mov
sub
cmpsl
roll
iret
push
lcall
rorl
jno
push
xchg
das
inc
jae
lahf
adc
lahf
jns
fs
jno
sbb
adcb
xor
dec
inc
mov
sub
mov
ljmp
pop
ret
xchg
aad
adc
mov
sub
out
xor
xchg
add
pop
popf
icebp
fmull
jmp
cmp
push
mov
sub
dec
stc
lret
xor
setns
int
fidivrl
sbb
jno
adc
ret
xchg
inc
in
repnz
test
repnz
sbb
mov
test
int3
int3
int3
int3
lds
pushf
push
and
sbb
mov
loope
sbb
cltd
lea
push
add
mov
cmp
daa
insb
sarl
jle
and
orb
divl
mov
loopne
ret
cwtl
fidivrl
stos
push
repnz
xorl
sub
push
outsb
int
fimuls
jno
add
mov
sub
jg
or
ljmp
push
sti
add
mov
ret
push
ja
or
gs
pop
and
add
mov
xchg
xlat
in
jp
cmp
cmp
mov
push
mov
inc
and
fsubrs
sub
mov
lods
mov
fcmovne
pop
rorl
mov
sub
push
xor
inc
or
sahf
jnp
fidivrl
std
mov
push
mov
es
push
subl
jecxz
adc
dec
jb
out
or
mov
lods
mov
dec
incl
pop
inc
dec
and
pushf
fs
mov
dec
mov
push
push
int
dec
imul
lods
sub
and
xor
fistl
push
inc
aas
sbb
int3
int3
int3
int3
int3
lcall
mov
sub
gs
jge
mov
add
test
lods
push
sar
pop
dec
add
lods
sbb
outsl
lods
imul
mulb
repnz
mov
push
sbb
jecxz
into
stc
fdivp
adc
xor
mov
es
lock
out
fiaddl
push
jl
ja
insb
int3
jmp
gs
hlt
rcll
pop
cmc
mov
inc
shrb
xchg
imul
jg
and
and
mov
cmp
int3
pop
sbb
jmp
jle,pn
rclb
and
sbb
inc
mov
and
jecxz
xlat
dec
jne
insb
add
push
movsl
loop
lea
aad
pop
pop
mov
cmp
or
cmp
ret
rorl
and
popa
jno
popf
push
jne
inc
inc
je
sbbb
scas
je
sub
inc
lds
mov
cmc
sbb
xor
wbinvd
loopne
mov
pop
lret
icebp
lods
stos
ds
dec
fstl
pop
mov
lock
dec
push
jae
push
sti
pop
mov
jl
inc
push
cmp
push
popf
test
and
xchg
push
enter
stos
inc
xchg
jge
out
or
mov
ror
cmp
jo
movsb
push
movsl
and
call
jbe
icebp
sbb
daa
xor
daa
pop
ret
mov
ret
test
pop
mov
mov
mov
xchg
pop
fst
jecxz
push
arpl
mov
les
das
repnz
jnp
add
sbb
aam
dec
mov
push
mov
adc
jae
pop
imul
mov
push
cmp
jl
mov
mov
push
lret
mov
inc
mov
imul
sub
clc
cmpsl
movsl
rorb
les
cmp
leave
pop
dec
aam
cmovo
lahf
add
inc
in
mov
rclb
mov
sub
sahf
jo
pop
xor
pop
insb
inc
push
mov
rol
rorl
push
loope
mov
mov
adc
sti
jp
inc
iret
rorl
jmp
jl
and
push
xlat
aam
sbb
and
xchg
jp
mov
lock
pop
mov
js
cli
fdivrs
sub
je
jge
cmp
mov
sti
push
int3
int3
int3
int3
int3
notl
rcl
pop
leave
sahf
xchg
ret
imul
cmp
jns
mov
aas
pop
push
or
or
pop
jno
xchg
icebp
inc
int3
mov
mov
and
push
or
stc
repnz
fstpt
pop
sbb
inc
mov
sub
pop
pop
jecxz
cwtl
mov
test
lds
push
sbb
loope
ret
pop
adc
and
call
frstor
xchg
add
movsl
lods
xor
mov
sbb
cld
mov
jb
sub
rcr
leave
xor
inc
push
jmp
sbb
daa
sbb
ret
mov
aas
arpl
cmp
inc
pop
xor
mov
add
andl
fadds
push
loopne
ret
xchg
addr16
clc
pop
ss
aas
xor
cld
pop
push
adc
std
sub
test
jae
repz
xlat
scas
scas
imul
mov
push
pop
xchg
or
out
ss
inc
push
dec
insl
add
dec
or
dec
and
dec
shlb
mov
jp
sub
mov
sti
adc
subb
mov
sbb
je
mov
out
sbb
rcrb
push
mov
and
inc
js
pop
mov
push
pusha
or
or
je
sbb
inc
icebp
sbb
jecxz
loopne
xlat
fsubrs
xchg
push
cli
loopne
leave
dec
dec
pop
call
inc
mov
dec
imul
xchg
lods
outsb
jecxz
inc
push
ljmp
push
pop
or
ficomps
mov
pop
jmp
push
int3
outsb
neg
sub
test
fsubp
mov
cmp
ret
rolb
fwait
jecxz
in
test
insb
mov
cli
dec
test
pop
fsubrp
addr16
pop
icebp
xor
fnstenv
or
adc
aaa
mov
mov
push
mov
outsl
xchg
mov
inc
mul
sub
loop
imul
iret
sbb
push
xchg
cmp
nop
test
add
inc
cwtl
lods
xchg
jecxz
pop
xor
cs
pushf
jge
lods
loope
push
fbstp
and
xchg
inc
leave
incb
outsb
int
in
push
dec
sarl
jle
sub
pop
adc
in
pusha
andb
jno
inc
lcall
loopne
and
dec
in
add
popa
fimull
dec
fstps
sub
pop
insl
or
xchg
pop
mov
inc
sub
push
jmp
movsb
std
lcall
mov
jmp
cmp
in
cmp
mov
add
pop
sbb
xchg
sub
xor
cmp
pop
incl
add
fcmovnb
andl
test
lds
jb
cmp
push
or
fisttpll
test
pop
loopne
pop
pop
stos
ret
inc
and
fisttpl
mov
xor
mov
fisubs
or
dec
fimuls
scas
xor
xchg
xlat
hlt
pop
stos
sub
repz
test
mov
cld
xchg
push
test
pop
mov
fisubs
pusha
add
mov
add
mov
orb
int
iret
mov
pushf
cmp
arpl
xor
lods
sbb
scas
ror
dec
mov
push
pop
inc
cmpsl
push
lock
int3
int3
int3
int3
int3
int3
mov
dec
mov
pop
mov
jo
pop
xchg
shl
imul
push
pushf
dec
pop
push
push
inc
aam
sti
les
lret
stc
pop
pop
dec
dec
inc
stos
js
push
outsb
js
ds
dec
xorb
lods
xchg
mov
and
and
jae,pn
dec
mov
in
or
test
pusha
add
iret
jle
int
xlat
fs
addr16
push
jno
adc
mov
je
mov
int
pop
nop
mov
inc
lahf
jmp
xchg
jge
xchg
adc
push
jg
repnz
mov
push
jb
fwait
pop
negl
sub
les
scas
daa
xchg
inc
add
push
sbb
lahf
dec
pop
jnp
js
les
add
sahf
xchg
les
pop
jne
addl
or
pop
in
or
xor
dec
add
outsb
dec
dec
rcll
jno
cmp
xor
fisttpl
xlat
jmp
in
xchg
adc
adc
popf
cmp
repz
fdivrs
lcall
pop
jns
iret
rolb
das
pop
xor
xchg
dec
mov
adc
aas
in
scas
fisubrs
pop
pop
bound
fistps
sbb
pop
xchg
sbb
cmp
dec
ss
pop
fidivrs
add
ret
sbb
insb
dec
data16
test
push
mov
test
out
cmpsl
xlat
and
popa
arpl
loope
xchg
in
mov
ficompl
ss
ja
fptan
and
jge
test
in
dec
stos
fsubp
mov
ljmp
add
int3
cmpsl
xchg
hlt
shrl
shrb
push
daa
lcall
mov
mov
out
shl
sub
ljmp
xor
jnp
imul
addr16
popa
dec
or
inc
or
mov
ret
jns
mov
es
mov
fwait
addr16
sbbl
movsb
lcall
sub
dec
lcall
or
test
lahf
inc
outsb
or
pusha
data16
cmp
pop
jle
xor
outsl
arpl
vpminub
jmp
jb
ret
push
jmp
daa
ss
mov
dec
xorb
xchg
xor
repnz
les
sub
push
cmp
sub
inc
ljmp
pop
hlt
add
jp
sbb
push
rcrl
popf
xchg
cltd
decb
adc
inc
mov
rcrb
icebp
cltd
lahf
adc
push
hlt
sti
orl
push
sbb
jg
fs
mov
lock
sbb
xor
jae
test
call
adc
sbbl
jo
xchg
lea
clc
divb
adc
pop
cmp
inc
pop
dec
mov
fstps
inc
push
pop
pop
push
mov
sub
adc
mov
aas
aam
frstor
mov
adc
dec
add
dec
inc
aaa
scas
xchg
mov
mov
cmpsb
pop
int
mov
or
or
lds
gs
push
mov
mov
mov
mov
dec
mov
push
shlb
xor
aas
push
sub
ds
sbb
cmp
ss
xor
addr16
jg
orb
dec
mov
aaa
lods
sub
insb
lahf
enter
mov
cli
fs
imul
push
das
rolb
jl
mov
mov
loop
ss
divb
aad
mov
es
inc
das
and
cmpsb
fisubl
push
ss
xor
shrb
sbb
sub
shr
dec
sub
outsl
sub
movsb
scas
clc
push
pusha
pop
jl
push
int
mov
mov
rcl
ljmp
inc
fstpt
fdivrl
outsl
enter
sbb
add
push
xchg
ffreep
stos
ljmp
mov
sub
dec
int
fisttps
js
jne
mov
clc
pop
xor
ljmp
scas
popf
jne
and
mov
imul
jp
mov
xor
add
push
xor
movsl
lret
out
mov
icebp
in
sub
cmpsl
lahf
sahf
addl
mov
rcpps
inc
xchg
js
cmp
cmpsb
push
std
or
sub
dec
push
daa
mov
test
jno
push
xorb
jmp
in
fs
add
sub
sar
fdivs
in
add
lods
stos
pop
push
push
sbb
sbb
pop
movsb
jno
mov
add
push
push
mov
hlt
fbld
cmc
frstor
enter
push
loope
shll
imulb
mov
sbbl
pop
loop
xor
in
rcll
jg
stos
into
and
mov
stc
into
popf
gs
xlat
aad
sti
inc
lfs
mov
xchg
out
xchg
mov
dec
dec
mov
fstp
jmp
mov
int
clc
aam
jmp
lret
add
add
pop
aaa
fs
mov
idivb
xor
ja
pop
xchg
xchg
call
les
sub
add
pop
cmp
int3
int3
int3
int3
pop
sbb
sub
xchg
adc
jl
jge
and
fdivl
inc
stos
dec
mov
movsb
lret
movsb
pop
adc
test
xor
es
popf
aas
fsubs
jp
fldt
jo
jno
jmp
xchg
xor
push
adc
push
dec
cmp
rcl
iret
sub
ja
and
sbb
pop
mov
loope
out
into
adc
xor
scas
in
cmpsb
and
sarl
xchg
adcb
and
xor
jp
push
dec
leave
and
push
jge
js
push
adc
loope
lock
out
movsb
mov
lds
push
pop
sub
and
test
mov
dec
and
fs
adc
stc
jne
decl
jno
fcomps
cmp
lods
scas
divb
in
fimuls
xchg
test
pop
cs
loop
push
into
pop
mov
mov
pop
out
jge
stos
aas
fistpll
nop
lret
fistpl
into
test
add
lret
add
add
stos
jne
or
sbbl
fdivr
cmp
test
or
lea
cwtl
dec
loop
lock
inc
incl
data16
and
stos
mov
jne
sub
test
in
push
lods
dec
repnz
dec
mov
inc
jp
push
inc
pop
push
mov
cmp
and
fsubrs
movsl
or
inc
mov
aaa
fdivrs
ss
mov
lock
fnstsw
cmp
dec
psubd
xchg
inc
sub
pusha
mov
int3
pop
adc
lods
dec
roll
cmp
cld
sarb
lcall
push
jp
cwtl
test
xor
hlt
loope
js
pop
jne
repnz
mov
into
mov
mov
fisubrs
std
fisttps
cli
aam
mov
mov
lods
into
outsb
inc
enter
mov
mov
nop
rolb
ja
aas
sub
pop
or
sbb
sbb
and
test
imul
cmp
lea
adc
mov
jnp
enter
jg
leave
sub
das
dec
incb
mov
imul
test
dec
sbbl
push
mov
xchg
sub
pop
orl
cld
mov
cmp
lcall
daa
rcll
cltd
dec
movsb
push
hlt
inc
xchg
xchg
lcall
lods
test
je
jbe
xchg
jmp
pop
clc
mov
sti
jns
and
jb
dec
outsl
lahf
andl
subl
lcall
xchg
push
pop
out
mov
aas
fildl
data16
hlt
push
dec
inc
out
in
xchg
out
fs
inc
ljmp
cmp
push
js
sub
or
outsb
insl
psadbw
and
negb
ret
add
aaa
inc
inc
pop
test
sub
addr16
int3
scas
mov
xchg
xchg
arpl
push
stos
movsb
pop
loope
lret
iret
insl
outsb
mov
jb
fwait
or
mov
pmullw
call
jecxz
enter
shl
mov
dec
jae
adc
push
jmp
jg
mov
imul
popa
repnz
or
sub
fcmovnu
mov
sub
lret
das
pop
loope
leave
jbe
and
xorl
jmp
imul
mov
xchg
pop
mov
mov
mov
int3
int3
int3
dec
dec
cmovg
decl
sbb
or
lcall
adc
test
pop
stc
add
jnp
stos
sahf
fsubp
adc
sbb
jmp
dec
out
inc
std
xchg
xchg
insl
push
mov
xchg
adc
aaa
test
mov
jle
repnz
or
test
es
mov
sbb
cs
rcrl
lds
lret
xchg
dec
rol
js
cmp
cli
or
bound
push
cmpsb
fbstp
jb
sub
cmp
subb
fs
sar
mov
cmp
mov
ljmp
fnop
pop
sbb
sbb
xor
lcall
xchg
sub
cmp
dec
fisubl
cld
test
test
xlat
leave
mov
in
mov
and
repz
addr16
addb
insb
add
or
aad
rol
xchg
lock
xor
lea
sbb
fstp
xchg
lret
in
out
cmp
fcmovne
mov
es
mov
int3
cwtl
jb
inc
lock
cmp
xor
sbb
or
dec
push
sub
cmc
in
sub
addr16
mov
mov
push
mov
jns
pop
dec
outsl
fldt
mov
pop
popf
enter
inc
xlat
sarb
or
movsb
and
daa
sub
hlt
push
mov
aas
add
mov
dec
movsb
adc
daa
mov
loope
iret
ret
icebp
and
into
ja
shrb
in
mov
iret
sarb
stos
sub
inc
idivl
test
fdivs
mov
sarb
enter
roll
adc
int
sbb
shlb
frstor
sub
ret
div
or
lods
push
adc
shlb
push
clc
push
outsl
lret
xchg
jmp
inc
mov
push
inc
adc
or
movsl
je
cs
outsl
sbb
sbb
call
into
das
fprem1
insl
mov
add
mov
jl
daa
pop
adc
loop
bound
lods
mov
hlt
push
je
cld
js
scas
mov
roll
in
or
faddl
lock
inc
pop
xor
lea
enter
dec
imul
scas
push
test
fsubrl
pop
and
mov
mov
xchg
mov
cmp
scas
sbb
lds
test
add
dec
jbe
sbb
and
ljmp
and
mov
or
fs
out
push
inc
fwait
aam
mov
fstpt
jae
sbb
pop
mov
push
fsubs
test
sbb
sub
lods
mov
dec
xchg
sbb
and
mov
add
out
or
hlt
out
sarb
xchg
dec
xor
rclb
sbb
outsb
pop
test
mov
sub
sub
aad
repz
stc
aad
cmp
out
dec
push
lret
outsb
popa
bound
fcomps
js
dec
dec
shlb
js
outsl
sbb
pop
dec
pop
scas
xor
fdivrp
jnp
fimuls
mov
or
add
xor
subl
push
pushf
pop
testb
repz
dec
mov
lret
daa
fisubrl
loope
xchg
mov
cli
movsb
ret
sbb
insl
add
dec
pusha
repz
mov
lahf
push
xor
and
sub
daa
pop
scas
test
or
mov
cs
into
jno
and
popa
icebp
mov
sub
and
inc
pop
icebp
in
fists
sbb
and
in
lds
pop
ret
sar
mov
cmp
outsb
loopne
mov
pop
lods
mov
call
mov
mov
ljmp
xor
and
dec
mov
push
lahf
pop
aaa
test
push
xchg
sbb
movsl
mov
xchg
shl
andl
test
jnp
push
lret
or
loopne
imul
pop
das
mov
fs
xchg
sub
in
xchg
lods
repnz
fsub
inc
imul
push
js
mov
add
mov
lea
js
jp
cli
lcall
mov
and
pop
fsts
into
test
sbb
xor
sbb
repnz
cld
jbe
xchg
call
int3
int3
jmp
call
std
mov
fstps
cmovp
inc
or
pop
pop
xor
nop
cmp
ret
sub
cmc
push
cmp
jp
popf
fdivl
jae
inc
sbb
fisubrl
mov
int3
int3
int3
int3
lock
xor
mov
and
xchg
inc
or
ljmp
xlat
aas
mov
inc
dec
nop
or
mov
adc
fimuls
lret
mov
cmp
std
jb
dec
jmp
rcl
mov
push
lret
adc
outsb
sar
call
sub
xor
jl
hlt
leave
mov
adc
lods
mov
cwtl
into
cmp
int
fsubp
push
dec
into
mov
fidivrs
xor
hlt
rcr
in
push
mov
pop
mov
adc
sbb
push
jg
cwtl
cmp
lods
jmp
in
dec
inc
sbb
dec
test
out
inc
xor
and
pop
sbb
rorb
xlat
js
dec
mov
mov
pop
loopne
dec
stc
ds
xchg
adc
cmpsb
xchg
mov
test
xchg
popa
das
clc
add
arpl
pop
push
dec
popf
mov
sbb
les
push
pop
sbb
es
sbb
inc
fistpll
out
std
adc
sti
jge
xchg
in
push
dec
sti
daa
jne
cmp
and
sub
xchg
cmp
outsl
shll
jne
push
movsl
push
mov
inc
test
xlat
and
adc
sti
repnz
rol
loopne
push
stos
cmc
ja
stos
inc
jmp
insb
mov
loopne
addl
adc
das
xchg
inc
gs
xchg
sub
mov
int3
int3
int3
int3
push
inc
sub
push
or
clc
add
lret
and
out
cli
mov
sbb
ja
jg
out
jg
xchg
pop
ficoml
push
aam
adc
hlt
aam
fdivrl
cmpl
mov
inc
sbb
mov
clc
and
sarl
sub
pop
mov
mov
fidivrs
sub
and
jle
push
daa
push
jge
cwtl
push
jne
stos
sbb
mov
enter
xchg
imul
pop
add
pop
fdivrl
add
hlt
aam
cwtl
out
fdivrl
xor
sbb
js
xlat
pop
mov
inc
out
mov
sbb
push
xchg
movsb
adc
push
jo
xchg
or
loope
pop
in
enter
fadds
dec
into
rcrb
cmpsb
cli
adc
out
out
imul
adc
push
lock
mov
inc
subb
xor
mov
mov
loop
pop
out
popf
stos
jl
fistl
jo
and
mov
aad
lret
and
inc
in
mov
jnp
popf
push
int3
int3
int3
int3
int3
test
dec
iret
int3
cmpsb
call
call
jl
clc
pop
stos
xchg
jmp
adc
xor
stos
sbb
ja
lea
stos
xor
jnp
sarb
dec
aam
jno
xor
inc
add
aaa
pop
mov
pop
or
inc
mov
dec
insl
xor
cwtl
adc
test
ret
and
lock
sbb
xchg
test
sbb
adc
lret
adc
daa
pop
jne
sbbl
push
and
mov
adc
xchg
int
cmp
dec
xor
ss
sbb
mov
cli
and
aas
fisubrs
xchg
enter
aas
xlat
mov
jnp
lcall
aaa
insb
sarb
xor
push
pop
rolb
xchg
or
pop
fistps
lcall
adc
enter
sbb
adc
jecxz
add
mov
and
punpckhwd
je
popf
mov
shr
leave
fdivr
xchg
enter
and
addr16
pop
push
mov
lret
adc
stos
or
dec
in
fadds
jbe
mov
icebp
shr
decb
jp
push
dec
sbb
mov
out
mov
push
cmc
mov
mov
inc
pop
rcll
jb
cmp
fmulp
ss
add
push
sarb
popa
xchg
movsb
push
loope
dec
lahf
add
or
and
xor
jo
push
mov
test
out
push
shll
mov
leave
cmpsb
popa
pop
or
mov
jns
inc
mov
xchg
jnp
cmp
lret
inc
adc
jle
or
sbb
movsb
cld
arpl
out
pop
into
sub
aad
jb
leave
pop
cmp
lcall
loop
sub
xchg
orl
push
add
repz
movsb
dec
js
pop
sbb
dec
xlat
jno
outsl
stc
dec
sub
dec
fimuls
fidivrl
das
inc
aam
mov
out
es
cmp
xor
shrl
pop
mov
imul
sbb
nop
adc
fimull
xchg
sub
outsl
sbb
popf
icebp
add
dec
mov
int3
lods
sub
iret
inc
sbb
arpl
adc
lods
mov
dec
cmp
lret
addb
outsb
jle
scas
insb
int3
int3
int3
int3
int3
int3
dec
adc
push
mov
xlat
or
pop
lds
xchg
lret
jnp
inc
jns
mov
sbb
test
jmp
pop
enter
loopne
loope
dec
cli
call
sbb
mov
filds
pop
adc
ss
ds
mov
jo
int
xchg
push
fbld
jbe
test
pop
mov
cmp
and
mov
xchg
imul
das
mov
scas
iret
loope
dec
pop
stc
fldt
push
jecxz
ja
xchg
or
insb
lock
and
lods
stc
popa
cmpsl
ret
cmp
add
add
jge
dec
mov
pop
jmp
push
imul
xchg
sub
sar
ss
addb
pop
loopne
mov
jb
loope
mov
sbb
mov
mov
mov
xchg
aas
pop
incl
add
push
mov
inc
aam
pushl
dec
pop
enter
call
pop
or
pop
inc
leave
mov
and
lcall
stos
daa
cltd
cmpl
enter
scas
mov
mov
into
jnp
push
mov
push
aaa
sub
dec
xchg
out
fistpll
outsb
fbstp
sub
xlat
loop
push
mov
fldenv
adc
mov
pop
sub
xlat
mov
insl
fdivrl
movsl
lds
dec
pop
pop
adc
mov
jge
mov
mov
mov
test
ja
mov
loop
sbb
ror
int3
int3
int3
int3
cmpb
int3
rclb
insb
or
push
lcall
mov
arpl
pop
sub
push
sbb
xchg
xchg
mov
incl
jbe
bound
xor
inc
fldl
out
fsubrl
hlt
mov
jae
das
filds
lret
int3
sbb
gs
js,pt
xor
out
add
loopne
sbb
or
jmp
mov
sub
jle
push
enter
jo
ret
hlt
cmp
in
jmp
mov
rorb
or
hlt
rorl
test
lods
xor
push
insl
pop
xor
mov
xchg
cwtl
mov
dec
into
aad
pop
jbe
fmull
aaa
ds
push
xchg
lret
mov
mov
fidivrs
pop
fildll
sahf
mov
insb
popf
in
pushw
icebp
hlt
imul
pop
gs
mov
in
imul
or
pop
sahf
cmp
mov
pop
mov
xchg
leave
and
int
lods
add
aam
mov
or
mov
xor
enter
or
push
or
nop
add
data16
out
mov
mov
daa
jns
adc
call
xchg
ds
pop
and
js
add
pop
dec
jns
cld
jbe
pusha
int3
test
es
leave
int3
int3
int3
int3
or
addr16
lahf
int3
int3
int3
int3
cvttps2pi
inc
fnop
mov
lret
in
test
mov
int3
cmpsl
mov
mov
mov
data16
xor
sarl
pop
lock
add
sbb
xor
pop
push
sarb
dec
stc
push
inc
lret
jne
cmp
cmp
push
int3
inc
inc
pop
or
fsubrp
sub
in
mov
sub
and
and
cmc
rcl
es
mov
cltd
dec
cmpb
jg
lock
lcall
add
inc
out
fidivrs
push
rorl
adc
bound
test
in
repnz
aam
shll
mov
ret
mov
bound
in
mov
xchg
dec
rolb
adc
rclb
push
or
aaa
adc
fisubrl
sarl
arpl
pop
and
mov
dec
faddl
adc
xchg
ret
arpl
sub
mov
mov
adc
dec
mov
fistps
in
dec
test
xor
pop
or
stos
cmp
scas
xor
adc
or
inc
daa
push
xor
adcb
addl
aad
repnz
popl
jle
sbb
lds
adc
loop
cmp
jg
xchg
int3
test
mov
jne
push
mov
gs
dec
daa
andl
inc
xchg
ljmp
pop
rolb
jp
push
adc
sti
mov
dec
mov
sub
sbb
push
loopne
shrl
adc
xchg
cli
bound
jnp
test
and
or
cmp
adc
cwtl
int3
or
das
setno
push
add
cmpsb
push
leave
iret
out
test
add
nop
insb
inc
shrl
fisubs
sub
mov
rcll
push
pop
push
push
push
enter
imul
or
xor
jo
mov
sarl
int3
int3
int3
int3
add
inc
sbb
or
lret
ficoms
jns
arpl
jns
mov
adc
cwtl
insb
xchg
test
imul
mov
inc
dec
jp
in
sbb
xlat
repnz
inc
cltd
inc
shr
lods
pop
dec
add
test
pop
repz
push
pop
and
cmp
adc
pop
inc
iret
lea
sub
and
aaa
and
cmp
inc
test
outsb
and
mov
add
enter
inc
cmpsb
xchg
push
pop
rorb
sbb
mov
mov
sub
sti
loope
xor
cld
and
xchg
roll
inc
cs
leave
jns
je
xchg
mov
sbb
jmp
sub
subl
sub
add
enter
or
repz
mov
imul
aas
push
jge
adc
sbb
out
cmp
add
mov
leave
fildll
xor
pop
arpl
repz
adc
leave
add
cmp
add
cmp
sbb
loope
mov
jge
xchg
inc
jnp
inc
jb
call
or
jp
adc
mov
mov
jmp
dec
imul
sub
add
mov
pop
cmp
jae
and
clc
std
mov
nop
int3
lods
icebp
jmp
outsl
mov
cmpsb
into
mov
ja
scas
aaa
pop
hlt
mov
cmpl
adc
cmp
hlt
imul
cmc
sub
bound
add
les
cmc
test
sub
iret
adc
ss
out
add
scas
sbb
test
inc
and
push
pop
popf
mov
rclb
subl
aad
aaa
adc
in
push
notl
xchg
nop
shrl
sar
lds
nop
dec
add
cmp
lret
mov
in
lock
fidivs
mov
push
jle
push
pop
pusha
xchg
popf
addb
inc
and
or
push
ja
add
and
addb
div
inc
fcoms
xchg
fidivs
mov
xor
test
sub
cmp
mov
mov
test
xchg
or
and
cmp
sbb
sbb
fcompl
mov
bound
add
ret
idivl
jecxz
scas
xchg
dec
mov
imul
pushl
test
dec
push
add
and
push
inc
add
push
shlb
pushf
push
mov
aas
stos
pop
mov
sub
out
pop
mov
call
ret
xchg
addr16
push
xchg
mov
or
mov
add
fnstsw
dec
into
aas
cs
xchg
fcmovne
cmp
mov
push
push
mov
mov
xor
hlt
cwtl
jp
lods
sbbl
jb
rorb
mov
and
jmp
and
cld
jno
push
xor
cwtl
arpl
pop
fldcw
push
xchg
push
es
out
mov
jno
aaa
cmpsb
mov
js
add
dec
adc
sub
fildl
sbb
xchg
xchg
mov
daa
push
call
aaa
push
mov
mov
or
sbb
stos
pop
xchg
inc
pop
pop
mov
jge
add
dec
cli
das
pop
sub
dec
xchg
dec
mov
and
mov
inc
inc
aad
rorb
inc
xchg
adc
add
sbb
push
dec
push
imul
mov
push
mov
inc
cmpsb
fwait
sti
in
jg
pop
push
jbe
addl
call
mov
aas
int3
int3
int3
int3
int3
mov
adc
adc
in
stos
lcall
ja
rcrb
sub
daa
outsb
pop
pushf
cmp
lcall
pushf
mov
xchg
dec
stos
dec
jmp
cwtl
in
pop
in
rclb
out
cli
enter
popa
fsts
cmp
dec
mov
mov
pop
stc
or
pop
dec
sub
cmpsb
jmp
and
loope
in
cmpsb
add
aas
jl
es
sbb
or
xchg
sbb
xor
push
test
mov
incl
aad
scas
jnp
xor
lahf
loopne
dec
push
rcrl
xor
rcrb
push
nop
call
push
loope
inc
aas
sbb
popf
sbb
cmp
jmp
sbb
mov
cmp
pop
adc
xchg
and
xchg
in
dec
cld
sub
dec
push
mov
xchg
jle
or
fldt
sub
xor
and
dec
pusha
mov
iret
fst
lret
neg
notl
popa
push
mov
iret
mov
jl
jne
aaa
stos
jecxz
call
add
cld
in
sbb
push
dec
fimuls
pop
mov
into
lcall
xor
mov
into
test
lock
test
xchg
cmp
dec
jle
cmp
inc
ss
pop
inc
sbb
pop
pushf
lcall
sahf
and
fldenv
fldt
mov
add
stc
xchg
in
mov
sbb
push
out
or
cmpsl
jns
shll
loop
lods
inc
xchg
iret
outsb
pop
ljmp
shll
cltd
outsb
sar
dec
out
jae
sarb
jo
inc
test
sub
insl
push
jle
out
nop
cli
std
lds
mulb
cld
aam
inc
cs
push
mov
fisttpll
inc
out
sub
jns
test
add
and
xchg
andb
nop
sub
insb
sub
push
mov
subb
pop
push
mov
cmpsb
mov
lahf
dec
xor
push
jg
test
mov
fwait
or
ljmp
dec
sub
inc
icebp
loope
mov
ret
popf
pop
sub
fildll
add
out
leave
cltd
push
jo
stos
and
pop
push
idiv
out
cmp
fists
mov
inc
jecxz
std
push
or
pusha
mov
lods
pop
pop
sub
rolb
mov
stos
shr
movsb
mov
ror
lds
movb
fistpl
and
ja
sbb
inc
sub
int3
mov
cmpsl
test
fsubrl
popf
fsubs
shlb
shll
std
dec
je
and
leave
fdivs
pop
mov
rolb
lods
dec
mov
test
loop
inc
pop
cli
aas
pop
and
imul
push
dec
dec
mov
add
inc
lret
sub
xor
imul
insb
push
fbstp
les
pop
scas
subb
popa
scas
adc
lret
popf
aam
cld
mov
xor
fsubr
xor
aaa
adc
sub
mov
rolb
cmp
push
mov
mov
mov
jmp
test
pop
mov
mov
incl
mov
cmp
fcompp
inc
fidivs
jecxz
jp
sbb
repz
dec
in
push
push
inc
dec
lea
data16
data16
mov
setnp
clc
addl
push
das
mov
pop
push
int3
int3
int3
int3
and
rol
jne
inc
pushf
adc
or
nop
iret
mov
out
or
stos
push
cld
out
aas
clc
jno
push
cld
xlat
inc
das
inc
je
scas
or
or
xor
or
enter
or
or
enter
mov
mov
inc
lds
sbb
lret
jmp
adc
aaa
cmp
sub
js
pop
icebp
xor
mov
scas
insl
repz
pop
loope
daa
inc
mov
pop
xchg
mov
pop
movsb
push
lods
cmp
adc
fimuls
mov
mov
sub
mov
imul
and
dec
xchg
mov
lods
adc
rolb
pop
xor
or
mov
les
mov
out
ljmp
cmp
shlb
iret
cli
pop
scas
cs
and
loope
adc
rorb
ret
fists
push
and
pop
or
mov
shrl
test
mov
mov
xorl
xor
push
out
xchg
pop
fwait
sub
cmpl
jp
repnz
jge
xchg
lods
jle
out
cmpsb
popl
sub
rcll
movsb
adc
sbb
ljmp
mov
addr16
and
in
inc
test
mov
icebp
rcrl
xlat
cmp
push
inc
or
iret
adc
xorb
and
fdivrp
and
push
inc
sbb
imul
pop
scas
out
mov
test
jmp
loopne
imull
dec
popa
xchg
loopne
or
sarb
fsts
loop
dec
xchg
repz
and
jne
jg
jbe
adc
jne
adc
xchg
movsb
xchg
pop
and
adcl
mov
xor
lahf
push
daa
add
fs
clc
jb
fs
outsb
sub
xchg
sub
dec
das
imul
stos
stos
mov
push
adc
and
or
push
ds
push
pop
cmc
pop
lds
in
ret
sub
in
pop
pusha
mov
and
fs
addr16
testl
jle
enter
mov
repz
cmp
pop
mov
jle
pop
fsubrp
mov
enter
out
gs
sbb
outsb
push
jecxz
into
mov
lea
push
pop
pop
pop
pop
or
pop
xlat
mov
mov
and
cmpsb
jle
out
int3
jp
mov
ss
sub
add
xor
leave
repz
or
rclb
adc
pop
inc
mov
popf
inc
leave
or
icebp
and
nop
and
movl
aaa
out
fcoml
mov
fwait
dec
sub
aam
push
in
les
std
js
pusha
xor
fisubs
loop
subl
cmp
stc
or
ret
cmp
test
fcom
or
scas
icebp
or
xchg
jbe
out
and
or
cmp
daa
cwtl
lret
sub
clc
addr16
or
aas
adc
push
mov
xor
jb
xchg
push
sti
nop
cmpsb
mov
xor
movsb
repz
jns
ss
aad
gs
data16
or
inc
and
icebp
sub
mov
xor
scas
mov
pop
or
sti
add
jno
sbb
or
dec
lock
pop
mov
rcrb
dec
aam
mov
aaa
pop
aaa
mov
jge
xchg
push
out
repnz
xchg
repz
push
adc
xor
mov
sbb
jne
and
jmp
int3
int3
int3
int3
mov
out
mov
and
push
in
push
clc
mov
add
mov
sahf
or
add
ljmp
leave
aaa
dec
shl
negb
fs
xor
decl
inc
fnstenv
dec
sub
adc
cmp
bndldx
jmp
push
je
jb
xchg
mov
addr16
push
in
icebp
stc
xor
insl
fwait
push
dec
fimuls
das
inc
jle
sub
mov
inc
mov
pusha
sti
mov
mov
mov
test
or
shlb
ficoml
rolb
scas
test
mov
pop
dec
push
repz
aam
lds
lds
leave
or
pop
xchg
imul
shrb
das
jmp
nop
inc
mov
sbb
cmpsb
dec
jl
cltd
mov
popf
sbb
bound
lods
lret
xchg
clc
add
decl
sbb
test
movsl
fnstcw
inc
lahf
popa
fucomi
pop
adc
push
xor
repz
fs
xchg
shrb
xchg
fstpl
and
pop
rolb
jge
add
in
les
and
xchg
out
jnp
and
push
and
popf
or
cmp
add
int
repnz
push
jp
mov
mov
imul
dec
lahf
std
dec
push
adc
mov
pop
out
xchg
xchg
pop
mov
out
pop
pop
add
sbb
xlat
dec
aaa
hlt
je
push
xchg
push
xchg
cmpsl
aas
ss
lahf
dec
sub
xchg
lret
lret
les
pop
adc
pop
out
mov
xor
or
xor
cmp
loop
test
nop
push
fisttpll
ja
shr
fisubl
jle
jmp
and
mov
or
cmp
or
inc
in
ficoms
dec
mov
das
jb
lahf
xor
cltd
pop
dec
dec
out
push
mov
dec
daa
in
add
jp
push
aaa
int3
jecxz
icebp
pop
inc
insl
pop
into
cld
cmp
fxtract
mov
xchg
bound
pushf
stos
mov
sbbb
aad
lea
test
cmp
sub
pop
xor
inc
arpl
test
sub
jno
xor
xorb
sub
out
data16
subl
adc
shlb
inc
mov
shrl
arpl
push
ljmp
adc
dec
jae
jno
dec
push
cwtl
shlb
xchg
lret
mov
lea
or
jp
pop
imul
hlt
mov
aam
jb
pusha
inc
fistl
call
jp
cld
sahf
stc
push
out
mov
popa
int
or
cmp
call
mov
cmp
mov
sub
adc
test
leave
ret
add
jge
fsubr
and
lea
ja
jp
nop
int3
lahf
fisubs
leave
cmc
in
fldt
sub
fs
int3
int3
int3
int3
int3
or
jne
inc
aas
inc
imul
je
push
mov
notl
push
push
insl
test
in
push
cmpsl
les
mov
pop
ficoms
jp
pop
xchg
jg
fdivrs
push
xor
mov
push
popa
icebp
stc
xlat
mov
stos
or
test
mov
mov
inc
mov
dec
aam
pusha
and
pop
pop
pop
ret
jmp
ljmp
shll
icebp
out
shlb
cs
add
dec
ds
scas
movsb
lret
sub
jne
mov
dec
xchg
mov
cmp
jmp
mov
lea
enter
add
lret
mov
in
cmp
popf
dec
incb
xchg
repz
fldenv
fstl
in
mov
scas
ss
hlt
mov
call
pop
fiadds
arpl
cmpl
cli
hlt
dec
jge
dec
adc
scas
fwait
ret
ds
push
pop
les
push
movsb
mov
ljmp
hlt
out
jb
mov
cmp
and
jno
aas
gs
outsl
mov
mov
mov
lret
lahf
aaa
sbb
push
ficomps
sbb
call
out
adc
loopne
mov
pop
ss
loope
ret
shlb
sti
inc
add
inc
std
sahf
divl
and
cwtl
iret
push
arpl
bound
int3
sub
pand
outsb
test
sbb
and
test
pop
lock
fldenv
pop
inc
jecxz
imul
popf
cli
ljmp
push
outsb
sub
add
or
int3
inc
out
popa
mov
in
aam
xchg
xor
sbb
fwait
aaa
in
scas
and
popf
cli
xlat
ffree
cltd
cmp
test
test
jle
dec
cmp
in
mov
inc
into
pop
xor
loopne
xor
test
cli
lock
jae
arpl
test
cltd
aaa
jmp
inc
push
mov
cmc
or
mov
insb
lahf
dec
pop
out
roll
pop
pop
orl
hlt
cmp
lock
push
leave
cmpsb
jo
sti
lret
dec
xchg
aas
pop
popf
jae
pop
enter
jmp
lea
cmc
sbb
pop
sbb
dec
jmp
sbb
push
mov
mov
mov
dec
fs
and
mov
je
insl
ret
test
mov
inc
push
pop
dec
dec
mov
cltd
stos
ss
movsl
loopne
push
dec
mov
fs
inc
xchg
sub
lsl
idivb
sub
jns
inc
inc
add
int3
int3
int3
int3
int3
pop
sub
arpl
fiadds
jmp
jg
out
lods
inc
rcrl
mov
push
xchg
call
addr16
inc
sbb
fnsave
fwait
push
in
lret
cwtl
iret
repnz
and
hlt
jecxz
adc
in
xchg
roll
pop
jge
jnp
lret
mov
xchg
add
cltd
out
int3
and
inc
and
mov
dec
add
mov
es
sub
shll
cmpb
push
pop
int
movsb
sti
je
aad
cmp
pop
push
sbb
inc
mov
mov
sbb
lods
inc
push
rorl
cmp
scas
cmp
jmp
mov
jo
incl
xchg
imul
push
xchg
out
cbtw
lret
jnp
rorb
dec
jne
inc
outsb
mov
aam
ja
mov
mov
iret
jp
test
sbbl
sub
mov
xor
inc
pusha
ror
addb
mov
addl
es
notb
into
in
mull
pushl
dec
mov
cmc
loope
jnp
repz
push
repnz
scas
rcrb
ljmp
sbb
inc
mul
insb
mov
ds
xlat
jns
push
sbb
pusha
sbb
adc
lret
xor
lret
xchg
push
shlb
jo
mov
and
outsl
pushf
mov
mov
decl
mov
inc
out
jno
cmpsb
mov
push
mov
scas
jns
cmp
add
add
ss
dec
sbb
mov
popa
cmpsb
add
stos
adc
int3
push
pop
mov
inc
cmp
dec
sub
repnz
xchg
mov
push
iret
or
hlt
arpl
imul
insl
cmc
int
in
bound
fdivs
dec
ret
pop
jnp
popf
outsl
pop
call
xchg
jno
clc
popa
sub
cmp
enter
jmp
bound
push
pop
imul
int3
fistpl
aam
ret
xor
shrl
add
mov
dec
mov
jne
xchg
aaa
sti
mov
out
mov
out
les
lret
jbe
leave
jge
mov
hlt
xor
test
mov
cmp
and
pop
jae
fwait
jne
and
jmp
and
mov
mov
mov
pop
push
mov
dec
out
mov
jle
sbb
jmp
and
pop
int3
int3
int3
int3
cwtl
adc
fmulp
sub
xchg
xor
pop
bound
aad
stos
imul
mov
shlb
jno
dec
mov
xchg
jge
and
fmull
push
enter
pop
jge
pop
jp
test
push
xor
int3
mov
rorb
jbe,pt
and
lods
stos
je
fidivrs
ja
insb
fbstp
mov
das
scas
pop
inc
xchg
cmp
out
pushf
std
insl
loopne
hlt
jg
xor
mov
test
xlat
sbb
ret
incl
lock
mov
sub
xchg
ret
mov
fistpl
test
inc
imull
mov
notb
lret
add
fs
sub
ss
popa
sub
inc
jp
ds
in
and
icebp
lock
sarl
jge
sub
out
push
and
sub
adc
mov
mov
pusha
mov
mov
flds
iret
cmp
jo
orl
sbb
xor
dec
or
call
pop
mov
lods
xchg
adc
mov
jl
push
mov
push
and
stc
jns
sub
adc
xchg
test
in
sbb
add
cmp
out
sbb
mov
lods
xor
xchg
fadd
sbb
call
push
add
mov
inc
sub
sub
subb
add
pop
jns
repz
inc
cmp
enter
cmp
push
jg
cltd
push
push
mov
cmp
lods
mov
lahf
icebp
leave
and
sub
mov
mov
mov
sub
push
adc
je
jg
lea
loop
mov
ficomps
sahf
clc
test
aas
testl
divb
lahf
into
inc
push
or
mov
dec
sbb
js
dec
and
inc
ret
inc
lock
mov
not
int3
sub
leave
adc
cmpsb
fcmovu
sbb
inc
or
xchg
mov
xchg
inc
pop
jecxz
das
icebp
rcll
ror
mov
mov
ds
cmp
int
pop
mov
push
or
mov
xchg
push
outsb
je
mov
sub
xchg
subb
mov
push
pop
or
mov
repz
outsl
pmulhw
notl
int3
int3
int3
int3
int3
push
int3
push
mov
push
cmc
lds
fdivr
sbb
arpl
lcall
or
xor
enter
pop
aas
add
sub
dec
fwait
sub
or
inc
gs
repnz
andl
sbb
mov
xorb
or
or
out
pushl
sti
les
and
push
sbb
cmp
sub
push
push
test
repnz
cli
lock
inc
sbb
dec
pop
sub
filds
lods
pop
pop
cwtl
inc
add
inc
cltd
out
outsb
and
jb
and
mov
jecxz
fwait
mov
fildl
pop
mov
dec
jnp
cmpsl
aad
add
adc
cs
sub
xchg
imul
jg
aad
cmp
pop
hlt
and
jb
sbb
mov
sub
jecxz
mov
adc
mov
cmpsb
repnz
jb
lods
pop
addr16
nop
xchg
sbb
fnstsw
pop
jecxz
jne
sbb
mulb
popf
sbb
cli
inc
loope
cs
and
pop
fidivrl
pop
insb
dec
and
cmp
push
rcll
mov
ret
pop
aad
out
cmpsl
pop
xchg
or
cmp
push
mov
inc
int
ret
loop
lea
and
jl
ret
ss
icebp
jl
cltd
sbb
jne
xor
hlt
nop
loop
push
fs
stos
stc
push
movsl
in
add
out
mov
adc
int
xor
clc
adc
sahf
jle
mov
push
out
fsubl
jo
fmuls
jg
fsubl
pop
pop
add
rcl
adc
add
or
xor
in
sti
xchg
js
imull
outsb
sahf
mov
push
xor
lds
inc
mov
jne
sub
cld
in
mov
add
cli
mov
cmp
cmp
pop
jge,pn
inc
push
addl
xchg
mov
mov
fcmovnu
xor
push
frstor
mov
mov
pop
lcall
push
in
xlat
mov
pop
adc
push
aad
mov
fisttpl
jmp
int3
int3
int3
add
std
outsb
notl
mov
test
sub
jge
xor
or
je
daa
lea
jae
mov
pop
add
aas
inc
dec
adc
or
jno
aad
pop
push
movl
popf
jns
jns
in
dec
xchg
data16
inc
neg
lock
dec
mov
push
mov
adc
repnz
cmpsl
mov
aaa
xchg
aam
dec
mov
dec
xor
xor
inc
adc
xchg
scas
push
movntps
stc
rclb
out
pop
sub
repnz
jb
sub
subl
and
sbb
sbb
or
scas
sbb
imul
pop
pop
push
cmp
push
cltd
pop
repnz
xor
lock
push
in
loopne
inc
cli
adc
fmull
xchg
add
and
sub
xor
dec
cmp
push
add
imul
mov
ret
pushf
negb
mov
sub
ljmp
xlat
inc
and
xchg
dec
ds
sub
popa
and
fists
div
jae
enter
add
push
xchg
stos
add
add
pop
and
pop
mov
xor
popf
mov
add
inc
outsb
shrl
shr
lahf
repz
out
cld
sahf
mov
add
pop
and
fiaddl
mov
ss
inc
loopne
mov
ja
movl
mov
add
addr16
daa
jne
loope
sbb
adc
loope
push
movsb
inc
fcomp
insl
scas
mov
stos
dec
or
inc
xchg
add
adc
popa
mov
adc
arpl
ret
push
aam
adc
ja
lods
or
fstl
xchg
shll
xor
and
and
fldenv
adc
dec
add
push
aaa
int3
xor
mov
test
rcl
movsb
cld
int3
push
mov
aam
push
shll
lods
es
dec
addb
das
sub
lods
inc
sub
cmp
inc
cmp
pushf
iret
push
pop
jge
xlat
insb
les
in
outsl
push
fisubs
rolb
mov
pusha
je
mov
rcl
add
fstl
pop
adc
daa
pop
popa
mov
mov
cld
scas
std
and
xchg
out
adc
xor
add
push
mov
movlps
inc
jae
jb
or
ds
mov
add
and
rclb
sub
add
xchg
or
rorl
jb
aad
add
and
insl
dec
adc
std
mov
xchg
repnz
jle
or
call
decl
in
xor
cmc
lods
sar
dec
push
or
sbb
push
imul
pop
int
sbb
pop
jbe
pop
sbb
pop
xor
mov
push
mov
sbb
mov
frstor
mov
adcb
pop
mov
outsb
jno
and
dec
gs
or
push
xlat
mov
sub
imul
push
ss
psrlw
pop
popf
sbb
sahf
fidivrl
je
test
subb
mov
cmc
call
xchg
sbb
push
arpl
addl
or
xchg
jne
lea
out
inc
notb
lcall
mov
lcall
sub
icebp
cmpsl
pop
sbb
repz
cmpsb
sub
les
scas
push
xchg
jo
xchg
int3
dec
sarb
push
inc
dec
xor
push
cmp
jge
lods
cmp
xchg
mov
test
cwtl
les
mov
ficompl
stc
cmp
cmp
xchg
mov
sub
cmpsb
pusha
sub
lret
jno
ret
sahf
dec
jecxz
gs
popl
and
test
rorb
xchg
mov
cmpb
call
cmp
xchg
mov
cmp
or
int
lods
fsubrl
push
jno
mov
sti
mov
mov
dec
mov
aad
push
or
push
mov
fsubrp
out
inc
iret
xor
dec
imul
int
cmc
stc
mov
shll
and
int3
mov
je
and
scas
imul
sub
or
out
repz
clc
lret
or
aas
fwait
imul
jmp
ret
lock
rcll
push
iret
inc
leave
fistpl
leave
jle
lds
sbb
test
cmc
cli
sub
pop
xchg
mov
out
outsl
fcompl
mov
mov
push
mov
je
cld
ds
filds
div
xchg
imul
cli
cmp
xor
cmp
sbb
and
mov
dec
sahf
cmp
shrb
outsb
xor
lret
sbb
jmp
inc
cs
clc
vpmaddwd
faddl
dec
stc
adc
xchg
addr16
jecxz
jbe
decb
sub
nop
xchg
mov
mov
bnd
aaa
cmp
popf
xlat
dec
das
sub
out
jmp
daa
sbb
bound
jg
fs
aad
xchg
in
or
popa
add
mov
jne
int
jae
push
imul
or
sub
mov
fcoms
fdivs
enter
lcall
push
cmpsb
repz
movsl
sbb
mov
and
push
mov
mov
sbb
mov
ss
push
xchg
jmp
test
in
outsl
ljmp
mov
mov
incl
pop
hlt
lahf
lds
dec
scas
dec
daa
xor
scas
sub
js
xchg
push
shlb
rorl
mov
push
jne
pop
jne
push
aas
xor
imul
in
sbb
push
test
inc
fldt
mov
inc
mov
pop
xchg
and
push
int3
int3
fwait
sub
cli
inc
adc
sbb
inc
bound
dec
movl
mov
jbe
inc
mov
mov
cs
inc
jns
adc
sahf
mov
mov
push
mov
clc
les
fists
xor
add
sub
adc
ror
and
enter
add
mov
mov
lret
shlb
push
jp
mov
push
dec
pushf
xchg
xchg
lds
test
and
lea
lods
movb
shll
shlb
xor
or
pushf
inc
cmp
mov
jmp
out
and
mov
mov
sub
and
xchg
popa
sbb
scas
fadd
adc
xchg
sub
adc
fxch
stos
cmp
in
test
sbbb
roll
add
mov
movsl
in
xchg
aas
cmp
and
test
mov
popa
xor
shll
int3
mov
add
clc
push
repnz
lret
out
and
out
add
out
adc
lret
ss
dec
fmull
fwait
sub
fwait
inc
imul
push
mov
out
or
cmp
test
pop
xchg
sub
push
add
leave
fs
sbb
fstl
addr16
adc
add
es
push
ljmp
js
and
push
or
push
loopne
sub
mov
mov
xchg
addr16
cltd
xor
rep
cs
pushf
and
aad
rclb
dec
lcall
or
adc
sbb
popa
popf
es
aam
xchg
adc
shlb
mov
cltd
lods
ficomps
pusha
push
jbe
mov
push
adc
nop
add
in
mov
xchg
push
mov
insl
pop
mov
dec
clc
int
das
inc
mov
int
cmp
enter
daa
inc
leave
in
mov
fstl
or
adc
mov
mov
out
fcoml
xor
mov
xor
subb
jmp
dec
adc
rolb
sub
pop
sub
mov
mov
pop
jno
mov
cli
roll
sbb
inc
xchg
adc
push
sbb
cld
data16
enter
lret
jns
adc
arpl
out
cmp
idivl
inc
add
int3
int3
int3
int3
ljmp
jge
adcl
mulb
cmpsl
sub
roll
movsb
jmp
scas
sub
jp
fs
fwait
std
fmuls
scas
notb
or
imul
fisubl
les
lock
pop
xchg
cmc
arpl
addr16
mov
xor
inc
dec
lret
jns
imul
xchg
cmp
pop
jbe
push
into
outsb
subb
dec
push
xor
lods
movl
test
jnp
sbb
inc
pop
xlat
arpl
pop
cmp
adc
in
inc
jno
cwtl
add
scas
jmp
sbb
scas
pop
imul
adc
fldt
dec
xchg
insl
mov
es
inc
loope
dec
xchg
aam
rcr
dec
mov
pop
xor
std
push
push
dec
mov
adc
jmp
and
in
lea
ficoml
mov
je
mov
xchg
inc
mov
imul
mov
inc
bound
negl
pop
sub
nop
loopne
sbb
cmp
mov
adc
dec
mov
shlb
push
movb
push
cmp
lret
cmp
into
jle
push
jecxz
pop
stc
jmp
xchg
ret
xor
adc
push
inc
in
push
push
sbb
mov
test
xlat
cmpb
dec
push
adc
or
arpl
inc
push
inc
xchg
mov
es
adc
fwait
ss
and
frstor
mov
fistps
mov
rcl
mov
sbb
in
cmp
push
dec
add
inc
insl
adc
xchg
dec
pop
jle
xor
and
cmp
mov
int
lock
add
cmp
mov
fwait
mov
push
repnz
out
js
ja
ss
insb
cli
addr16
testb
cs
xchg
cmpsl
adc
out
pop
jb
inc
stos
push
ja
pop
push
push
loopne
int
cld
sarl
sub
sbb
in
in
out
div
data16
pop
and
ja
repnz
mov
enter
repnz
out
pushf
pop
xchg
daa
pop
es
es
pop
and
sbb
xor
or
popf
jg
daa
test
leave
xlat
out
pop
mov
xchg
mov
loope
lcall
scas
or
stc
and
mov
popf
mov
push
jmp
sti
out
lods
in
inc
dec
jno
jno
push
addr16
mov
sbb
loop
stos
fildl
lahf
in
int3
dec
cmp
mov
ret
in
xchg
sub
cmp
adc
add
mov
and
xchg
pop
xchg
jecxz
xchg
filds
add
inc
lahf
xchg
int3
int3
int3
int3
push
pushf
sub
orb
ja
pop
inc
dec
jecxz
mov
ret
loop
mov
xlat
into
ret
shrl
aaa
mov
pop
and
adc
inc
add
fsub
sub
std
jo
out
int
mov
es
out
cmp
pusha
popf
fisubrl
sub
lret
push
fmull
into
push
fldt
pop
pop
adc
fbld
enter
mov
mov
jnp
dec
xchg
leave
pop
sbb
and
cmp
clc
into
add
adc
adc
jbe
ret
jecxz
inc
sub
cmp
push
or
rcr
imul
fs
adc
popa
sub
popa
idivl
flds
cltd
jle
movsw
out
adc
or
test
int3
int3
int3
int3
lret
ja
inc
mov
xor
mov
push
jg
jo
inc
ja
mov
in
sub
and
pop
xchg
jmp
xchg
inc
dec
stos
xchg
jb
cmp
cmp
and
bound
xor
dec
lret
cmp
daa
mov
push
movsl
cmpsb
mov
adc
push
lods
sub
adc
popf
loop
scas
push
pop
xchg
sarl
dec
sub
outsb
pushf
rcrl
mov
notl
daa
gs
or
xorb
ret
cs
or
add
sbb
andb
idiv
iret
xor
stos
mov
mov
sub
xchg
pop
rcrl
loopne
sbb
xchg
or
mov
sarb
addl
stos
or
pop
int
mov
and
ret
in
push
dec
stc
push
add
dec
fstpt
fiaddl
in
lods
loop
inc
pushf
jbe
inc
push
jl
lods
insl
and
aas
pop
pop
jns
mov
jae
inc
add
push
pop
gs
loop
mov
cmpsb
push
fidivrl
jae
sub
pop
xchg
fisttps
mov
sbb
push
jl
call
add
addr16
pushf
fistps
sub
adc
ds
mov
pop
scas
fdivr
test
cmp
jl
add
das
pop
sub
pop
imul
sbb
dec
mov
rcrl
sbb
jmp
cmp
push
adc
loopne
jp
insb
sahf
mov
xchg
outsb
inc
int3
int3
int3
int3
int3
lret
mov
test
scas
mov
je
fdivrl
mov
gs
loope
loopne
loop
dec
or
adc
das
inc
hlt
mov
iret
mov
push
dec
rcll
fwait
add
jg
adc
sar
icebp
fsubs
jns
int
sahf
lea
mov
mov
mov
out
test
movsl
lods
fsubl
mov
push
inc
sbbl
sub
dec
mov
add
inc
cwtl
dec
aad
pop
in
fwait
xchg
push
aaa
dec
ret
mov
sarb
sub
mov
mov
fs
dec
fsubrp
push
in
cltd
push
dec
jno
push
fbstp
daa
push
hlt
shll
mov
jge
dec
inc
mov
push
jmp
push
and
dec
cmp
pop
sahf
in
clc
mov
enter
sbb
xchg
fsubl
xchg
adc
ss
inc
jae
cwtl
inc
jecxz
xchg
pop
pop
xchg
push
inc
push
popa
dec
loopne
cmpsl
cmp
scas
aam
loop
and
mov
dec
subb
add
in
pop
jge
shrb
outsl
lods
push
mov
push
dec
pop
call
in
pop
mov
lods
inc
xchg
sbb
cli
and
inc
jmp
jnp
out
loopne
mov
push
rclb
out
out
inc
mov
shl
in
insb
pop
repz
mov
data16
mov
ljmp
fwait
push
in
loopne
and
andb
je
xor
popf
xor
shl
xor
lcall
inc
fstpl
aam
andb
adc
clc
test
mov
nop
jl
call
daa
mov
xor
pushf
xor
gs
test
repnz
aaa
push
xchg
pop
cmp
cli
mov
rcrb
daa
popa
insb
fdivrs
adc
xchg
sub
pop
or
stos
fmuls
imul
insb
push
jl
and
cmp
push
inc
push
xchg
mov
jg
xchg
mov
popf
mov
mov
cmp
jle
shl
dec
stos
shlb
cmp
add
xchg
add
dec
cmc
pushf
xor
mov
int3
int3
cmp
lds
arpl
or
fcmovne
aam
jno
andb
dec
movsb
mov
pop
out
inc
lret
sbb
mov
xchg
xor
fiaddl
fwait
es
xor
std
pop
pop
insl
scas
std
in
mov
popl
outsb
jge
pop
xchg
mov
push
in
xchg
les
sub
test
jbe
push
jae
mov
pop
xchg
adc
inc
outsl
cmp
adc
scas
pushf
ret
outsl
ret
scas
lret
out
cmp
adc
pop
xor
sahf
fisubl
in
xor
test
or
lahf
mov
aam
mov
cli
int
cmp
hlt
xchg
aas
jae
or
rorb
inc
ret
bound
mov
stc
pmuludq
repnz
jge
cmc
mov
mov
mov
bnd
pop
add
cmc
jecxz
pop
jb
or
in
xor
lods
mov
ds
and
jo
push
mov
mov
lcall
pop
sub
popa
xchg
dec
push
sub
mov
sarb
dec
fisttps
in
in
push
fsubrl
fsubrs
cmpsl
cmp
sbb
sar
test
test
pop
mov
push
sub
mov
fmull
cmp
or
dec
mov
scas
in
mov
lcall
clc
cltd
ds
adc
ret
mov
mov
stos
sub
push
xchg
inc
push
repnz
sti
and
and
ret
dec
ss
gs
add
sub
dec
in
pop
bound
in
sbb
xor
test
pop
and
sbb
dec
xor
cmpsl
mov
or
shll
pop
mov
mov
in
mov
cmpsb
aam
push
pop
das
mov
decl
cmp
xor
fwait
pop
fisttps
jp
push
ret
xchg
mov
mov
std
push
jecxz
xchg
mov
mov
cmpsl
pop
cltd
cmc
xor
pop
add
pusha
xchg
xor
cmp
test
adc
js
rcll
mov
xchg
sub
or
insb
iret
cltd
xchg
xchg
pop
cmp
push
lcall
and
cmc
aad
imul
rcrb
and
adc
and
sarb
jp
das
and
int3
int3
es
add
addr16
orb
or
mov
ret
mov
mulb
jmp
ret
and
ds
scas
pop
cwtl
sbb
rclb
pop
loopne
lret
lret
mov
xor
sub
jae
xorb
iret
jecxz
or
xlat
push
stc
fmul
dec
xor
cmp
lock
ret
popa
and
adc
fidivrs
push
insl
mov
fidivl
insl
xchg
push
mov
pop
xchg
lea
xchg
in
iret
adc
fwait
push
iret
xchg
mov
fcmovnbe
data16
xchg
scas
push
jo
mov
ret
fists
call
jnp
inc
fwait
loope
or
addr16
cs
out
push
lcall
or
shlb
xchg
jl
dec
pop
push
jns
int3
jl
fadds
sti
mov
inc
sub
fistpl
sub
stos
pop
mov
inc
or
sarl
xchg
shlb
lds
mov
jmp
in
leave
scas
repz
mov
mov
imul
aas
movsb
adc
dec
xor
das
popa
mov
fwait
xchg
in
xchg
jp
mov
lret
stos
mov
pop
xchg
outsb
ret
out
fsubl
or
insl
subl
add
testl
stos
mov
lcall
xlat
mov
in
cmp
hlt
psubsw
lret
sub
mov
loop
aas
sbb
cmp
mov
jno
out
imul
repnz
into
ret
add
adc
sub
out
inc
and
adc
add
mov
out
mov
or
adc
pop
cli
xor
fldl
pushf
push
int3
xchg
inc
out
int3
int3
int3
push
mov
fistl
push
pop
outsb
fdivrl
push
lods
ficompl
sub
add
insb
lods
sbb
cmp
out
clc
pop
jnp
cmp
out
mov
add
stc
adc
outsl
iret
jae
xor
jb
adc
dec
jo
adc
jg
mov
rcrb
add
xchg
in
sbb
in
mov
push
mov
out
lods
dec
loop
mov
mov
xchg
or
out
or
in
cmpsb
inc
subl
push
xchg
cld
lock
pop
aad
out
dec
push
cltd
adc
or
push
mov
inc
mov
je
test
aad
or
scas
jecxz
push
pop
fists
test
mov
mov
stc
dec
sub
pop
fstp
out
jmp
test
je
hlt
stc
filds
shll
fs
and
jno
ret
loopne
lods
fwait
cli
xchg
cmp
or
mov
mov
jmp
shrl
push
pushf
imulb
xchg
push
in
mov
pop
outsl
ljmp
add
mov
jbe
mov
out
enter
dec
lock
enter
adc
sub
repz
ret
and
inc
mov
xchg
push
fdivrs
dec
imul
negl
outsb
xor
fs
movsb
fucomi
xchg
fiadds
inc
mov
jbe
inc
ja
pop
mov
cmpsb
shlb
stc
movb
jne
dec
sbb
push
fcomps
decb
pop
call
lods
cmpsb
aam
push
loopne
mov
cmpsl
push
dec
push
pop
idivl
xchg
lock
xchg
adc
pushl
inc
jne
jbe
jne
mov
mov
push
pop
and
xor
dec
call
in
roll
mov
inc
roll
ret
inc
lret
outsl
aam
popf
iret
fldcw
shl
addr16
rol
push
mov
out
int3
push
cmc
pop
pop
inc
mov
sub
cmp
fbstp
fsubs
and
faddl
movsl
push
mov
sub
add
stc
std
jne
and
lds
nopl
mov
mov
imul
flds
stc
and
xchg
incb
fwait
jns
dec
push
adc
cwtl
push
das
lcall
movsl
pop
push
pop
out
mov
add
xchg
sbb
or
cld
sub
lea
sbb
xchg
lahf
push
in
in
cmpb
cmp
push
fists
lahf
stos
jbe
jns
outsl
leave
jg
push
ret
mov
xchg
pusha
inc
sbb
cmp
xor
xchg
push
shll
dec
lods
pop
cmp
int
int
test
leave
sbb
lret
or
fbld
xchg
add
outsl
ss
mov
inc
and
rolb
fmuls
ret
imul
xchg
add
out
fisubl
push
enter
es
push
add
mov
dec
xor
ret
pop
dec
cmp
test
cmp
xor
xchg
insb
lea
gs
daa
test
gs
lret
pop
je
xor
mov
scas
iret
stc
cmp
pop
pop
or
pop
or
ds
subl
xchg
xchg
cltd
repnz
jmp
popf
xlat
dec
mov
loope
pop
popf
ljmp
xor
or
leave
jb
cmp
add
int3
int3
int3
int3
fiaddl
fldl
xor
fisttpl
inc
and
out
lods
imul
pop
fwait
sbb
into
and
into
daa
sbb
xchg
mov
dec
test
push
scas
lret
jo
dec
out
mov
cld
rcll
jb
pop
jl
rolb
je
inc
add
popa
cmp
pop
into
int
daa
xor
mov
les
adcb
cs
mov
fldl
mov
gs
into
loopne
mov
jns
daa
ficoms
mov
mov
das
adc
faddp
inc
add
add
dec
aam
dec
cmp
movsl
lcall
fwait
dec
repnz
adc
or
fists
call
push
shrb
sbb
xchg
int
pop
lret
dec
push
cli
aas
mov
iret
xchg
mov
stos
shll
dec
push
pop
out
movsb
call
xor
pushf
lods
hlt
add
pop
ja
lea
xchg
ds
dec
ja
mov
addl
inc
mov
in
pop
cltd
adcb
sub
inc
fldcw
cmpsl
cmp
aas
iret
scas
mov
xchg
jge
mov
fs
mov
mov
lcall
push
fcmovb
stc
adc
test
add
cmpsb
addr16
addr16
loopne
fisubl
xor
add
pop
or
orl
push
mov
pop
jle
mov
adcl
lds
fwait
aaa
call
pushf
stos
inc
mov
cmp
rolb
push
ljmp
movsb
pop
popf
pop
and
pop
mov
aam
pusha
mov
fbld
ret
add
dec
mov
mov
je
add
pop
or
shl
loop
jmp
lret
cmp
out
movsb
mov
fwait
cmp
out
das
push
pusha
fucomi
xor
mov
mov
adc
out
adc
inc
sti
mov
jne
enter
jmp
mov
cmp
icebp
jecxz
xlat
mov
pusha
rolb
pop
jae
pop
jmp
cmp
push
sbb
jge
mov
dec
adc
add
add
inc
repz
or
xor
dec
sti
lret
loopne
dec
add
fiaddl
adc
ret
inc
jmp
pop
adc
mov
push
shlb
and
mov
add
stos
hlt
sbb
jne
sti
mov
jl
sahf
mov
xor
jns
xor
add
stos
push
idivb
pop
out
mov
adc
in
dec
loop
or
shll
push
stos
test
push
sub
or
dec
or
dec
dec
push
test
fisubs
rclb
out
add
fdivl
mov
out
or
sub
xchg
jnp
sti
and
stc
xchg
outsl
pushf
test
int3
int3
int3
int3
int3
mov
push
dec
imul
dec
icebp
xor
xchg
add
dec
test
fwait
test
push
les
repz
in
cmp
xor
or
jns
loope
rcl
cmp
push
mov
sahf
pop
js
push
dec
dec
mov
mov
mov
push
add
popf
rclb
addr16
push
xchg
jo
fldcw
shlb
popf
leave
or
loope
xor
mov
jne
inc
xchg
push
dec
sub
sahf
ja
imull
pusha
inc
call
stc
xchg
push
arpl
gs
cs
loop
insb
cmc
data16
and
mov
mov
cli
movsb
xor
js
mov
sbb
outsl
ret
andl
adc
sbb
lods
cmp
sbb
push
clc
inc
sub
lret
xlat
cs
pop
ljmp
xchg
aas
pop
dec
xchg
out
mov
xor
test
sti
fists
rcr
sbb
add
stos
xor
or
test
jecxz
cmp
xor
inc
and
jno
dec
inc
sarl
add
jnp
lock
cmp
call
stos
xchg
pop
push
mov
popf
imul
sub
push
pop
xlat
pop
mov
lods
and
imul
cmp
adc
aaa
addl
xor
add
push
test
sarl
fnstcw
stc
fimuls
add
pop
shrl
shl
xor
aam
push
fwait
ret
js
mov
cmp
rcll
push
sub
sub
test
hlt
and
adc
loope
push
stc
xor
xor
popa
dec
push
scas
pop
incl
add
inc
jnp
xchg
scas
mov
jl
in
jbe
js
lcall
sub
lock
add
cwtl
mov
jp
stos
loope
mov
sbb
sbb
test
fdivr
lret
hlt
xchg
test
inc
mov
stc
out
cmp
fstl
scas
stos
fnstsw
xlat
loopne
and
cwtl
ret
push
fbld
hlt
repnz
data16
sbb
in
jg
dec
mov
xchg
jg
lahf
out
push
aaa
jno
dec
xchg
mov
shl
or
lea
call
repnz
xor
mov
fstps
in
mov
xlat
cs
aas
fldcw
mov
xchg
or
in
testb
repz
int3
int3
int3
sahf
mov
and
sti
mov
icebp
xchg
cli
push
loopne
cmpsl
mov
dec
mov
mov
enter
movsl
inc
inc
jae
shrb
jno
into
or
cmpsb
mov
and
fcoml
lea
mov
jo
pop
mov
adc
subb
loope
inc
fcompl
cmc
inc
aam
out
filds
mov
out
int3
pop
mov
mov
dec
stos
add
orb
aam
mov
adc
outsl
push
aad
dec
xchg
gs
dec
xchg
and
jns
inc
adc
stos
cmpsb
or
fwait
jne
into
mov
jecxz
and
imul
push
xchg
or
xor
out
pop
addb
push
xor
push
jno
insb
call
inc
xor
shlb
sbb
dec
push
dec
insl
rclb
add
insb
pop
xchg
cvtpi2ps
inc
mov
dec
cld
jmp
daa
nop
fadd
xor
xchg
add
xchg
aas
rcr
ret
inc
daa
push
sbb
rcll
mov
adc
lea
pop
xchg
mov
fildll
xor
arpl
cmp
mov
dec
daa
inc
rcll
js
std
iret
mov
imul
arpl
xchg
leave
adc
push
sub
mov
mov
inc
add
xchg
push
cmp
jbe
mov
dec
cmp
mov
ja
sub
rolb
mov
out
in
and
jo
mov
xchg
loop
sub
mov
dec
xorl
inc
cltd
sbb
or
jbe
sbb
repz
add
dec
pushf
dec
mov
xchg
xchg
cs
sbb
or
fbstp
in
xchg
enter
push
sub
sub
and
cmp
mov
mov
dec
mov
adcl
xchg
js
int
call
orb
lcall
nop
dec
inc
insl
std
and
sbb
mov
in
jmp
sbb
aam
mov
mov
mov
xchg
aam
xchg
dec
outsb
or
sarl
dec
pop
faddl
push
rorb
cmp
and
insb
xchg
popa
xor
ret
push
mov
pop
push
jp
mov
into
sbb
cmp
dec
sbb
cmp
clc
xlat
add
cmp
fcmovnb
cli
and
jmp
xor
mov
and
jns
jecxz
outsb
jns
sbbb
jnp
pushf
scas
xor
lods
shr
test
frstor
dec
cmpsl
rolb
arpl
or
add
arpl
aaa
inc
stc
xchg
adc
fdivl
fbstp
push
mov
jno
ja
ss
mov
lds
mov
enter
lcall
or
popa
cltd
pop
ss
jno
in
popa
mov
and
loope
movswl
xchg
push
mov
std
inc
xor
add
sub
sbb
int3
int3
int3
xchg
sub
jne
dec
lret
sti
hlt
cltd
add
fs
int
int3
int
cmp
inc
cli
push
lfs
dec
jl
stos
lahf
sub
ret
add
pop
inc
push
sbb
mov
out
jg
push
lret
scas
dec
push
cmc
rcr
add
add
pop
sub
cmpsb
dec
adc
addr16
lret
add
xorb
sbb
out
cld
insl
faddl
inc
mov
loope
push
ret
pop
jge
scas
xchg
imul
xchg
add
mov
jb
aas
clc
lcall
pop
adc
add
loope
mov
push
data16
pop
lock
mov
dec
dec
cmp
pop
mov
push
xor
outsl
scas
movsl
xchg
xchg
sbb
adc
inc
jle
xor
inc
add
dec
sahf
sbb
mov
mov
pop
loope
pop
jecxz
iret
clc
out
fistps
xlat
rcrb
mov
test
and
fisubrl
into
and
sbbl
push
dec
mov
stc
adc
add
xchg
dec
adc
aas
jmp
fcmovu
pusha
mov
lock
out
pushf
cmpsb
fsts
cs
pop
xlat
push
loope
sbbl
or
push
test
cmpsl
sub
sub
jbe
push
sarb
das
out
pusha
aam
je
fs
test
icebp
push
test
testb
mov
jnp
lret
sub
les
jns
xchg
adc
ret
mov
pop
sbb
fsts
xchg
pop
mov
and
push
mov
adc
test
mov
lods
cmc
rcrl
mov
cli
pushf
out
and
jl
mov
sub
icebp
je
jmp
push
xchg
jno
faddl
scas
mov
sbb
fdivl
push
orl
push
pop
stos
push
xchg
ret
xorb
pop
cli
push
stc
roll
ficompl
pop
daa
insb
lods
gs
rcrl
fs
jecxz
insl
test
call
aad
push
and
mov
std
add
mov
xchg
pop
ss
cltd
dec
mov
adc
push
das
mov
mov
cmp
push
mov
stos
ja
push
inc
fstl
xor
xchg
insb
fisubrs
or
loopne
shl
and
sti
int3
int3
int3
inc
pop
inc
sbbl
cmp
fsts
loope
push
mov
leave
pop
aad
out
dec
das
push
fistps
jbe
dec
mov
inc
lahf
inc
cmp
adc
rcll
repz
fsub
rclb
orb
mov
or
lds
xchg
sbb
cmp
ds
sqrtps
mov
test
es
xchg
cmp
dec
jp
add
lods
std
mov
lcall
pop
sub
maskmovq
testl
and
pusha
pop
std
adc
lea
mov
call
int3
int3
int3
popf
in
rorl
sub
test
mov
inc
xlat
lret
out
int3
cwtl
mov
stos
test
nop
inc
add
lahf
and
inc
adc
aad
add
mov
cmp
sbb
in
mov
xchg
inc
inc
push
stos
adc
dec
sbbb
rclb
jge
out
iret
negb
pop
movsl
mov
loopne
inc
xor
inc
lds
lahf
mov
data16
call
mov
addr16
inc
dec
iret
xchg
and
in
in
rorb
push
mov
sbb
push
andb
rclb
sarl
xchg
out
xchg
adc
mov
xor
rolb
inc
dec
repnz
pop
push
and
or
ja
push
sbb
sti
and
addr16
pop
xor
add
lock
test
scas
daa
es
xchg
cs
into
js
cld
in
dec
sahf
sarl
push
in
add
scas
out
data16
sub
popl
insb
test
xchg
and
or
popf
xchg
aam
pop
push
add
shrb
and
imul
mov
insb
aam
lods
icebp
xchg
xchg
xor
in
mov
or
mov
jne
ja
notl
jb
mov
push
mov
sbb
dec
and
fdivl
lock
int
xor
mov
mov
sub
push
mov
mov
shr
ret
shrl
insl
frstor
fisubrl
pop
lea
fs
mov
out
mov
test
fistpll
lret
mov
push
enter
loopne
cmp
rcr
shlb
out
pushf
jg
push
mov
push
mov
sarl
mov
jbe
test
daa
mov
sbb
imul
ljmp
ss
push
adc
std
stc
mov
sbb
sub
push
in
loopne
cwtl
adc
mov
aam
and
push
pushf
inc
insl
or
xorl
lods
add
mov
adc
enter
pushf
push
clc
lret
mov
pop
pop
or
push
mov
cmp
ret
xchg
jl
das
sbb
fldl
add
mov
cmp
add
ss
inc
inc
lret
mov
nop
sbb
ret
stc
fwait
add
sub
pmullw
mov
addr16
gs
sti
mov
xchg
dec
notb
outsl
xor
rol
or
mov
xchg
push
and
push
in
ret
add
into
insb
adc
divb
dec
mov
cmove
enter
cmp
cmc
xchg
mov
pop
jmp
cmp
ja
sbb
cwtl
jp
adc
fstpl
lret
js
int3
push
js
cld
xchg
dec
cmp
mov
inc
jno
mov
lret
adc
cmpsl
aaa
imul
mov
inc
mov
lods
inc
idivb
mov
add
sti
imul
test
mov
dec
shll
inc
icebp
call
outsb
jnp
and
push
add
sub
into
popa
jg
ja
jp
mov
sbb
cltd
xchg
sbb
ds
adc
in
inc
roll
xor
ljmp
xchg
cli
pop
jno
mov
andb
and
lcall
mov
push
push
outsl
inc
fisttps
fs
call
int
jmp
mov
pop
cmp
push
rcrl
test
out
arpl
mov
sub
push
pop
ljmp
lahf
decl
shlb
xchg
cli
lock
add
jg
cwtl
leave
jae
dec
mov
dec
mov
and
lds
xchg
or
dec
mov
push
inc
pop
call
daa
es
adc
dec
into
out
mov
cmp
or
jle
cmp
xor
faddp
jb,pn
adc
sub
sahf
cmp
int3
int3
int3
int3
int3
int3
sbb
or
dec
gs
stos
out
xor
inc
sub
int3
add
lods
clc
jne
push
shl
repz
xor
cmc
dec
mov
in
xchg
adc
lahf
ret
ficoml
lret
lahf
fsubl
fucom
iret
ret
mov
and
test
mov
or
add
sahf
and
lods
imul
leave
dec
jnp
jbe
xor
mov
mov
sti
movb
push
test
cld
sbb
xchg
adc
pop
stc
dec
mov
mov
cmp
xchg
add
xchg
jno
stos
ror
mov
aam
pop
mov
mov
popa
xchg
xchg
cmpsb
leave
jnp
subb
cmc
add
jb
js
inc
jle
sub
mov
pop
mov
cmp
loop
adc
jg
cmp
aaa
lret
xorl
sub
mov
xor
sub
incl
and
push
addr16
mov
or
dec
cmc
adc
sub
xchg
dec
sbb
push
mov
cmpsb
nop
mov
inc
movl
addr16
inc
test
mov
dec
xchg
das
jle
fmuls
pop
mov
pop
fimull
fcomps
es
sbb
enter
pop
sub
mov
jl
int3
int3
cmp
sub
mov
cmpsb
pop
mov
cltd
sub
test
decl
pushf
dec
in
ficoml
dec
popf
pop
xor
repnz
pushf
cwtl
adc
sub
pop
jnp
push
daa
inc
nop
frstor
gs
mov
xchg
xor
aad
sbb
sarb
dec
add
adc
xor
incl
and
cltd
jae
add
mov
std
jne
mov
and
mov
pop
add
cmp
add
jne
testl
xchg
cltd
add
ret
mov
pop
xchg
push
sbb
pop
int
mov
testb
sbb
stos
push
pop
fiadds
lea
mov
push
inc
jo
mov
jl
dec
ret
out
cs
leave
test
lods
les
sbb
jmp
cwtl
pop
cmp
mov
dec
out
mov
mov
lods
inc
push
mov
les
pop
loop
les
rorl
mov
xchg
shl
push
pop
sub
orl
jmp
lea
xchg
jbe
andb
pop
pushl
push
sbb
cmpsb
out
inc
in
sti
mov
gs
cmp
mov
jge
repnz
cli
mov
inc
sub
cwtl
sbb
push
in
jb
ficoml
push
push
int3
xchg
sbb
xor
js
cli
es
fstps
pop
cmpl
sub
cli
lea
pop
xor
or
addl
fiaddl
movsl
mov
sysexit
xchg
aam
inc
cmp
dec
inc
inc
push
ja
lcall
inc
adc
aas
subl
leave
jg
scas
pop
adc
call
jbe
loop
shrb
jl
stos
pop
inc
and
jle
addb
mov
jmp
push
daa
cmpsl
sahf
cmpsb
or
xchg
dec
pop
adc
in
pop
or
mov
ljmp
popf
dec
fwait
mov
sbb
cli
adc
push
stc
movsl
sbb
adc
mov
jae
jecxz
scas
add
lcall
in
push
jl
in
add
aas
sub
fadd
or
enter
push
cmpsb
jge
inc
pop
sbb
push
ret
mov
xchg
dec
int3
int3
int3
int3
pushf
jp
shlb
fcompl
pop
scas
pop
and
adc
pushf
fidivrl
mov
adc
push
outsl
jbe
jmp
mov
mov
push
mov
in
mov
or
mov
push
pop
mov
imul
rcrb
pop
cwtl
jp,pt
lret
inc
rclb
sbb
jg
les
out
push
sub
push
imul
test
lcall
cmp
push
pop
mov
cmp
rcll
pop
xlat
popa
js
lret
sahf
pop
into
out
dec
popf
and
cmp
popf
loope
pop
std
push
cmpsl
or
pop
sbb
xor
les
adc
pop
inc
in
mov
rcrb
insb
adc
pop
push
mov
jecxz
orl
lea
mov
or
add
fisttpl
xchg
mov
lret
pop
pop
cmp
out
pop
and
xor
dec
xor
orb
cmp
dec
jns
xchg
lea
xchg
dec
inc
cmp
push
hlt
lret
jle
sub
sete
call
mov
or
and
pop
add
push
cli
mov
movsb
sbb
addl
jmp
sbb
and
cmp
mov
sbb
imul
lret
mov
push
nop
stc
sub
pop
aaa
test
xchg
sub
xchg
mov
add
inc
push
or
fimull
mov
push
mov
loop
inc
and
cld
fdivrs
leave
xor
incb
adc
test
or
negb
mov
ss
sahf
leave
inc
out
inc
imul
pop
ret
inc
subb
testl
pop
sbb
mov
fdivl
ror
push
pop
inc
mov
lds
sbb
test
xchg
insb
stc
loop
xchg
jle
fimuls
aas
repnz
mov
pop
inc
stc
xchg
add
or
xchg
mov
mov
and
xchg
stos
je
xor
rcll
jae
or
dec
adc
repz
mov
push
andnps
sbbl
dec
jns
fists
pop
insl
jecxz
mov
jge
mov
dec
loopne
mov
int
push
pop
pop
sbb
cmp
loopne
outsl
popf
sbb
dec
inc
pushf
dec
jecxz
mov
adc
and
jns
test
movsl
add
add
jmp
shll
sub
cmp
pop
sbb
loop
add
rcrl
mov
bound
dec
adc
fcoms
sbb
or
popa
sbb
push
into
adc
jnp
stc
adcl
rcrl
into
test
ficoms
roll
orb
dec
mov
stos
subb
sbb
push
mov
js
int
mov
xor
pop
cmpsb
inc
scas
add
sti
push
pop
popf
xchg
repz
inc
or
mov
dec
jp
push
push
pop
fwait
in
or
les
and
or
outsl
pop
stc
std
push
enter
outsl
or
dec
pop
cmp
add
int3
int3
int3
fxch
push
mov
jp
inc
pop
sub
mov
out
or
into
pop
mov
adc
sbb
xor
lahf
sub
jmp
mov
sbbb
mov
and
fsubs
adc
mov
push
mov
mov
scas
es
dec
jo
rcll
or
or
or
mov
sbb
push
jecxz
adc
fcompl
xor
xor
xchg
int
or
cmc
cld
lds
cmp
pop
sub
mov
mov
xor
test
cmpsl
arpl
xchg
xchg
lds
jns
insb
cmp
or
cs
dec
cmp
repz
or
cmp
divl
shll
rclb
loop
mov
inc
scas
inc
add
mov
ficoms
adc
sub
push
sahf
pop
xchg
test
xlat
mov
or
sub
repz
stos
add
pop
pop
cmp
add
push
jg
ror
jle
aaa
adc
pop
lret
xchg
mov
das
push
adc
xchg
test
ret
sbb
inc
mov
enter
punpckhdq
push
sahf
outsb
mov
pop
lret
fdivrs
repnz
pop
push
in
aam
sti
aas
or
ss
sbb
jae
stos
xchg
and
rcl
call
ljmp
adc
mov
fs
mov
adc
xchg
xor
in
push
mov
lret
fs
push
decl
iret
xchg
pop
loopne
fmuls
loope
ficomps
mov
sar
sub
xor
mov
rep
inc
xchg
jne
dec
sbbb
dec
in
sbbb
push
mov
sbb
add
aad
pusha
jmp
and
adc
or
int
mov
pushf
lret
push
jmp
xor
mov
mov
fs
fsubrs
testb
rcll
mov
pop
sbb
dec
imul
sti
dec
inc
pop
out
add
orb
mov
ficoml
push
xchg
xor
sub
jnp
fstpl
jae
ficompl
push
adc
jmp
mov
test
filds
icebp
subb
mov
xor
pop
sbb
xlat
push
mov
push
or
lret
imul
test
xchg
inc
insb
and
mov
sub
push
sbb
fimull
in
fsubl
test
insl
sbb
popf
stos
mov
fisubrs
cvtps2pd
fists
add
and
sbb
dec
or
sub
pushf
shll
inc
stos
fisubrs
pop
sbb
in
pop
pop
sar
jo
lock
mov
ret
js
adc
insl
inc
daa
pop
xor
xor
fsts
int3
xlat
or
not
lock
and
adc
xchg
cld
xor
pop
dec
xchg
xchg
into
push
lret
dec
inc
mov
pop
sbb
ret
test
int
or
sbb
push
mov
mov
mov
sub
mov
in
push
sub
ja
mov
mov
xchg
in
stos
adc
cmpsl
or
push
and
aad
jnp
pop
add
mov
dec
mov
jl
rcll
testb
int3
int3
int3
int3
inc
add
fwait
or
arpl
mov
in
sbb
cli
js
push
repz
push
pop
aas
jecxz
or
push
pushf
js
cmpsl
push
mov
dec
xchg
fdivrs
pop
nop
mov
mov
scas
xchg
xchg
test
dec
dec
stos
ret
xchg
or
push
sub
add
mov
fsubrs
iret
int3
xchg
imul
push
fisttps
iret
add
rorl
sbb
cli
test
pop
dec
lds
in
dec
insb
movsb
jg
enter
xchg
cmp
test
and
inc
imull
sub
bound
pop
fimull
add
cmpsb
mov
sbb
lock
imul
mov
jecxz
loope
jle
icebp
add
loop
jle
sahf
sbb
dec
mov
pop
mov
xor
jo
add
int
stos
push
cmpsl
sahf
sub
fwait
dec
add
lret
adc
or
mov
add
mov
adc
cmp
push
cmp
xor
mov
xchg
push
sbb
push
pop
sarl
push
int3
int3
int3
int3
int3
int3
pop
out
int
add
ficoml
adc
pop
add
testb
mov
or
pop
mov
jbe
lret
pop
inc
fdivp
shr
mov
dec
ljmp
sbbb
pop
add
inc
add
dec
inc
ret
std
dec
inc
les
mov
nop
sub
cmp
decl
mulb
mov
mov
xor
sub
cltd
mov
cmp
pop
cltd
outsl
lods
cmp
mov
fcmovnbe
inc
push
adc
test
fisttpl
adc
dec
sub
rclb
add
nop
inc
aas
imul
les
cmpsl
push
lods
cwtl
leave
xchg
sub
ficoms
push
push
push
hlt
ljmp
pop
add
push
out
add
paddusw
cmp
push
fcmove
mov
ds
xchg
les
pop
into
push
push
fisubrs
and
pop
mov
pop
inc
lret
push
dec
dec
add
cli
add
mov
in
pop
sub
sar
mov
push
and
mov
rorb
incl
sbb
lahf
nopl
ljmp
jp
andb
sub
and
shl
jnp
mov
imul
xchg
lds
mov
xchg
lds
popf
rclb
jae
sub
fwait
shlb
inc
les
sub
sbb
fadds
push
jge
aam
xchg
int
mov
shll
mov
sbb
push
mov
mov
inc
add
fsts
adc
lock
add
pusha
cwtl
mov
inc
inc
jbe
xchg
push
dec
pop
incb
pop
add
popa
pop
insl
pop
iret
adc
jo
imul
leave
incb
popf
push
test
lds
stc
inc
lods
ja
push
int3
adc
inc
ret
loopne
leave
out
les
dec
loop
add
into
sbb
testb
fnsave
mov
frstor
adc
dec
into
adc
lock
push
mov
xorb
jle
push
fidivrs
xchg
lret
rclb
dec
pop
ror
push
sub
mov
push
xor
push
stc
cltd
add
jnp
adc
mov
mov
sbb
loope
int3
int3
int3
int3
int3
int3
scas
int
sbb
cltd
leave
imul
dec
sub
mov
fisubrs
int
push
filds
imul
cmp
xchg
lods
add
lret
xchg
add
rcrb
xchg
mov
jmp
cltd
sbb
push
sbb
int
call
dec
dec
test
xlat
dec
popf
dec
fisubrs
cmp
push
decl
mov
jo
cmp
in
pop
addr16
xchg
cld
inc
subb
test
pop
lea
jo
add
fstl
stos
jno
bts
fnstenv
loopne
pop
cld
loop
mov
sub
nop
out
sbb
or
cli
test
and
pop
pushf
mov
into
mov
xor
jo
sub
mov
or
sub
imul
incl
rcll
movsb
pop
add
js
push
push
add
pop
add
leave
out
jno
pop
jmp
jl
pop
inc
lret
push
in
sbbb
test
dec
xor
popf
jg
shlb
les
mov
fcompl
sbb
push
push
roll
pop
fsubl
adc
xchg
mov
ficompl
js
sbb
es
or
loopne
push
jbe
fmull
adc
and
nop
enter
xchg
stos
mov
ljmp
push
inc
out
sbb
fs
sub
in
mov
cltd
test
sti
in
or
add
push
int3
int3
int3
int3
push
jge
inc
bound
mov
shrl
imul
dec
add
test
aam
sbbl
popa
mov
out
or
sbb
into
push
push
sbb
fldcw
into
push
sub
das
push
sarl
cmp
cltd
cltd
pop
loope
dec
or
js
filds
or
data16
sahf
aas
or
mov
lret
push
mov
adc
lret
xor
push
add
stos
orb
inc
xchg
lea
dec
cltd
xor
sbb
xchg
dec
lods
mov
push
lahf
stc
es
enter
pop
filds
mov
cmp
bound
jo
mov
cltd
les
sbb
push
xor
enter
orb
int3
fmuls
xchg
js
fdivl
mov
push
sbb
inc
pop
sahf
mov
movsl
insb
cwtl
fadds
pop
mov
incl
cli
xchg
xchg
adc
adc
and
pop
imul
test
addr16
roll
fwait
add
adc
lods
jl
repz
sbb
nop
imul
sbb
xchg
dec
push
ret
mov
stc
and
out
push
inc
inc
sahf
mov
pop
popa
fiaddl
mov
push
xchg
in
xlat
xchg
mov
xor
inc
xchg
decl
push
inc
push
adc
in
decl
ja
sub
pop
jo
pop
lahf
mov
and
add
stos
sbb
xor
pushf
mov
nop
xchg
gs
dec
out
xor
in
enter
pop
stos
cld
iret
aam
inc
add
sub
add
push
dec
add
cld
adc
pop
mov
jae
xchg
jg
fisttpl
add
fcomi
int3
int3
int3
int3
inc
inc
sbb
adc
loop
sarb
rclb
popa
pop
sbb
adc
inc
mov
movsl
inc
dec
cmp
pop
sahf
jae
shrl
adc
scas
js
jle
gs
jae
jnp
jnp
adc
and
inc
out
bound
dec
int
fiadds
clc
dec
sbbb
pop
pop
or
mov
add
push
add
sub
loope
inc
sahf
rorl
jne
rolb
or
xor
stc
test
push
push
das
or
dec
adc
int3
lret
xor
fcmove
mov
mov
addr16
orl
push
pop
inc
cmpsb
jns
cmp
pop
arpl
xchg
or
lahf
add
jl
adc
mov
pop
in
repnz
mov
ljmp
jo
sbb
aad
lods
shrb
aam
push
jle
inc
xchg
cmp
pop
jb
fwait
pop
add
mov
popa
sbb
adc
mov
cld
add
mov
or
xchg
cltd
mov
xchg
sbb
cmpsl
int3
xchg
fistpll
ret
inc
push
fildll
xor
cmc
inc
pusha
sarl
int
mov
in
subl
outsb
orb
sub
dec
fmull
data16
pop
push
lcall
aas
mov
push
pop
js
xchg
fsubl
pop
cmp
push
pop
or
lret
fmuls
xlat
addr16
ret
push
aaa
cwtl
xchg
leave
mov
pop
gs
dec
dec
bound
inc
std
sbb
push
outsl
mov
or
inc
push
sbb
int3
xchg
mov
push
inc
mov
xchg
inc
inc
pop
rcll
push
scas
jbe
jl
mov
sub
cmp
mov
adc
int
out
fsubs
and
cmp
into
lcall
xchg
mov
sub
inc
cmp
push
insb
sub
adc
cs
test
xor
push
scas
dec
sub
xlat
addr16
mov
dec
lahf
pop
inc
pop
pop
or
enter
pop
mov
xchg
mov
and
mov
shlb
xchg
pushf
pop
call
add
test
xor
rcrb
pop
add
mov
mov
fsubl
js
test
mov
add
jmp
pusha
lret
fldcw
xchg
xor
mov
fcomps
in
leave
cmp
int3
int3
int3
int3
and
mov
and
in
hlt
mov
xchg
icebp
ffree
int3
rolb
pop
int
int3
int3
int3
int3
int3
or
xlat
and
fldt
lods
sbb
cli
fimull
popf
xor
pop
je,pt
and
pop
add
pop
out
ja
push
inc
push
jl
pop
mov
xor
add
out
dec
fisttpll
pop
inc
jge
and
sbbl
xchg
xchg
dec
pop
jl
push
pop
or
pop
cmp
or
call
dec
pop
dec
inc
dec
inc
or
xchg
daa
adc
les
fistps
imul
ret
filds
int3
int3
int3
jl
stos
pop
out
leave
cwtl
out
daa
mov
shlb
pop
pop
mov
jae
xchg
cwtl
push
mov
js
xchg
shr
dec
pop
lods
pop
pusha
adc
and
xor
lods
push
cmp
sub
push
push
cld
or
xor
mov
fstl
lods
inc
aam
xchg
movsl
mov
xlat
add
xchg
sub
aam
icebp
cld
fs
data16
mov
mov
insl
cwtl
pop
inc
je
jne
adc
dec
xchg
repnz
dec
or
lcall
pop
xchg
idivl
enter
sarb
xor
mov
sub
mov
lods
cld
cmp
rcrb
test
lcall
insb
movsl
push
dec
sbb
dec
int
xchg
int3
int3
int3
int3
int3
sbb
inc
popf
int
jnp
pop
bound
fildll
dec
rorl
insb
aaa
jnp
jbe
dec
adc
dec
test
jle
es
adc
xor
daa
je
push
mov
adc
mov
jb
ss
int3
sbb
xchg
push
mov
sbb
faddl
xlat
hlt
imul
sahf
add
xchg
in
loopne
cmpsb
ret
sbbl
mov
push
and
pop
inc
jecxz
sbb
jecxz
bound
into
pop
mov
pop
repnz
stc
mov
nop
and
mov
push
mov
stos
fistps
repz
xlat
sub
dec
sub
dec
imul
sti
pop
ja
dec
std
cmp
xchg
test
cmp
ret
int
adc
sbb
mov
pop
icebp
cmp
rolb
push
cmc
dec
in
aad
addl
mov
lret
into
in
aas
bound
sbb
push
lea
cmp
int
push
das
rcrb
mov
lods
call
push
sub
imul
mov
mov
xchg
dec
jl
test
fdivr
xor
insb
mov
out
push
or
xrelease
pop
inc
es
mov
lahf
clc
pop
rcrl
mov
inc
xlat
push
inc
jmp
pop
into
xchg
decl
jae
imul
repnz
fcmovnbe
jmp
xlat
cmp
fmuls
daa
aas
add
lea
cltd
sbb
jecxz
xor
fs
loopne
mov
in
sbb
cmp
cmp
xor
jnp
cmp
icebp
imul
int3
pushf
push
cmp
ja
pop
in
dec
mov
popa
cwtl
jle
cmp
pop
test
jae
adc
stc
fnstenv
sbb
xchg
mov
and
mov
pop
pop
pop
pop
add
mov
icebp
pop
push
jmp
jmp
cmp
imul
stc
adc
mov
jecxz
fs
loope
cmp
push
mov
cmp
and
or
aad
push
cli
in
sub
sub
xor
cmp
pop
shll
outsl
stc
push
sarb
test
push
stos
int
scas
and
scas
jb
daa
gs
aaa
sar
inc
push
sbb
add
fdivl
sub
jmp
cmp
mov
xchg
or
mov
pop
add
fldt
jbe
scas
adc
loop
aam
adc
ljmp
cmpsl
jb
test
es
sub
jo
mov
or
imul
inc
les
stos
cwtl
pop
push
dec
cs
mov
out
ljmp
movsl
fildll
les
push
xchg
xchg
daa
out
push
flds
adc
or
ja
jae
std
sub
and
adcb
or
push
enter
aas
rclb
int
pop
idivb
jmp
sbb
cmp
dec
xchg
int
dec
movsb
xchg
fwait
sbb
jle
cwtl
jmp
cmc
jge
adc
sub
shrl
pop
jge
nop
or
push
sbb
ljmp
int3
int3
int3
sub
pusha
fidivl
xchg
adc
shl
mov
inc
fidivrl
mov
addb
in
cwtl
sbb
and
popf
dec
inc
sub
daa
imul
incb
or
add
jmp
mov
fstpt
int3
mov
into
mov
repnz
mov
mov
mov
and
imul
adc
into
pop
sub
xor
mov
xchg
lret
aas
jl
repz
sbb
push
jp
dec
es
sub
nop
int3
insl
mov
push
adc
repnz
shlb
mov
jl
mov
mov
jns
aad
popa
je
in
dec
int
xchg
mov
pmaxsw
inc
aam
hlt
push
add
or
pop
cmp
cmp
aaa
sbb
jge
call
mov
out
andb
mov
cmpl
fldenv
sub
daa
mov
cmp
out
mov
adc
aam
inc
enter
inc
xchg
test
out
inc
xchg
in
dec
stc
in
pushf
pop
pop
and
ja
sbb
jae
aad
xor
push
aaa
xor
outsb
mov
dec
inc
cmpsl
pop
imul
mov
lock
scas
lds
insb
ss
jmp
scas
xor
inc
sbb
mov
repnz
mov
xor
adc
fcoml
adc
into
mov
and
rclb
sbb
mov
xchg
inc
dec
lods
out
add
dec
pop
jl
inc
adc
cmp
jp
jo
jge
xor
and
lods
adc
call
sbb
pushf
fwait
sbb
out
clc
fiadds
push
in
fsubl
rcll
dec
xchg
rolb
cmp
ds
inc
mov
cmp
cli
and
xchg
pop
test
ss
cmc
lcall
lea
bndstx
ret
mov
dec
ss
test
loop
pop
xor
ret
sbb
cmove
dec
mov
fidivrl
dec
sub
mov
add
out
sarl
xchg
fnstsw
dec
pop
test
inc
mov
mov
loop
push
sbb
and
fmuls
adc
ss
lret
int3
jno
jp
mov
aas
jg
xchg
jge
jno
popa
jo
inc
inc
push
mov
sti
dec
orb
add
lods
out
ds
iret
ret
or
bound
aaa
inc
xchg
fidivrl
out
or
pop
xor
jbe
shl
call
dec
scas
jo
rclb
push
loope
cmc
out
jno
loopne
cwtl
pusha
jle
fisttps
test
mov
rcll
rcrl
lret
clc
cmp
rorb
clc
push
sub
adc
add
int3
stos
cs
popf
lds
push
sub
andb
xchg
int3
aad
pop
cwtl
mov
ja
pop
fimuls
lahf
icebp
xor
out
idiv
xor
sbb
xchg
jae
mov
jecxz
sbb
xor
add
fmuls
movsb
or
fnstenv
mov
icebp
int3
mov
pushl
stos
pop
cmp
push
pop
test
fidivrs
pop
cmp
or
push
xchg
cmp
pop
jge
xor
push
dec
jo
jno
sub
inc
xchg
inc
xor
icebp
dec
nop
movsb
cmp
push
mov
cli
movsl
call
sbb
xchg
gs
div
incl
stc
cltd
std
or
jae
imul
mov
or
das
jo
pop
jmp
or
addr16
push
push
movsl
test
jns
imul
movsb
ret
arpl
push
popa
pop
loop
arpl
jb
push
insl
ficomps
roll
fisttpl
movsb
jge
nop
into
sti
jle
mov
cmp
xchg
xchg
cmp
push
push
sbb
shlb
cs
dec
push
in
inc
inc
loopne
fmulp
or
lds
jb
dec
iret
jae
mov
inc
push
sub
add
jb
cmp
add
js
add
xor
mov
fstps
sub
mov
pop
jmp
push
cmp
decl
fcmove
jnp
nop
in
add
incl
dec
jb
repz
push
sub
mov
mov
inc
jge
cmp
xor
xor
loop
adc
fnstenv
sbb
mov
lock
testl
testl
dec
push
adc
or
or
int
outsl
ljmp
inc
in
mov
sbb
das
bts
push
nop
mov
ret
inc
out
or
lods
sub
jno
sarl
imul
adc
push
mov
jns
inc
push
mov
sti
mov
movsl
icebp
push
xchg
dec
loope
jge
cs
sti
lds
push
test
lods
enter
js
inc
fwait
int
pop
push
xchg
movsb
and
aad
and
mov
pop
jne
lcall
dec
out
push
insl
inc
xor
scas
fistpll
ds
pop
repz
pop
icebp
mov
repnz
mov
mov
xor
ljmp
mov
xor
inc
fs
inc
arpl
in
or
in
clc
mov
nop
addr16
aad
xchg
in
loop
mov
xor
imul
jg
rorb
int3
mov
icebp
outsl
xchg
cltd
or
or
push
mov
rcrl
js
cmp
xor
dec
stos
xchg
idivl
sbb
divl
sub
scas
mov
dec
aas
ret
dec
inc
or
dec
cmp
xchg
mov
bound
pop
cmp
lods
or
int3
int3
pop
inc
jo
add
test
xchg
rolb
andl
stos
jecxz
sub
sbb
xor
and
cmp
ljmp
xor
out
xor
cmp
shr
out
cld
imul
jge
and
movsb
cmp
mov
int
jno
gs
ss
inc
xlat
dec
xchg
imull
or
mov
sub
into
sub
xchg
es
test
rolb
fsubl
in
int3
das
or
mov
lret
ficoms
cvtdq2ps
mov
out
xor
xchg
add
push
leave
or
xor
nop
mov
cmp
cmp
sti
arpl
mov
test
push
pop
cld
adc
rcr
mov
mov
pop
dec
inc
insl
inc
loopne
test
xchg
in
insl
test
lret
dec
je
jnp
mov
mov
pop
jae
xorb
pop
arpl
mov
and
mov
jne
push
adc
fisubl
xchg
bound
shll
fcomip
jo
xor
dec
push
fucomp
mov
cmp
inc
jl
cs
jmp
mov
inc
std
hlt
jecxz
and
fnsave
mov
push
dec
std
xor
stos
in
xor
mov
mov
mulb
cmp
adc
xchg
or
xor
dec
cmp
bound
shrb
test
push
xor
adc
inc
orb
roll
lods
test
xor
mov
add
xchg
idiv
stos
jg
pop
loopne
enter
test
decl
xor
je
clc
sbb
and
xchg
xchg
and
out
cli
test
daa
mov
and
xchg
mov
and
push
pop
cltd
inc
cmp
xchg
pop
mov
push
in
dec
inc
insb
jmp
sbb
out
mov
aas
ja
stos
pop
pushl
enter
punpcklwd
mov
movsl
cmp
scas
pop
mov
cli
rcr
cmc
inc
scas
sbb
and
sarl
jbe
xor
imul
lds
in
sbb
insl
xchg
fadd
out
cmp
test
adc
jmp
or
lahf
mov
outsl
and
xchg
and
cltd
aad
xor
xlat
psubw
push
pop
cmpsb
mov
pop
pop
lock
mov
mov
ds
and
movsl
push
pop
dec
scas
xor
fwait
nop
mov
cmp
xor
iret
inc
inc
cmp
fstps
rorl
and
mov
dec
mov
or
incl
jmp
inc
test
lods
pop
sbb
jecxz
push
testb
mov
fstpt
mov
push
js
cltd
jo
xor
or
mov
sub
leave
add
mov
xchg
cmp
imul
mov
mov
fwait
pushf
cmpsb
mov
pop
out
pusha
dec
jb
jmp
mov
pop
push
and
sbb
inc
mov
idivb
daa
mov
int3
pop
sbb
dec
push
movsl
lret
loop
orb
scas
int
int
pop
mov
add
lock
xlat
subl
xor
test
dec
sbb
lods
xlat
stos
adc
mov
arpl
int3
int3
int3
in
daa
inc
pop
addr16
int3
int3
int3
int3
int3
mov
shrl
cltd
add
push
pop
shlb
ja
sbb
cmp
jbe
sahf
popa
repz
xor
dec
insl
fcomi
sub
lret
outsl
int3
int3
int3
int3
int3
int3
cld
xor
cmp
imul
int
lcall
inc
lret
and
adc
loopne
sbb
xor
mul
ret
sub
bound
xchg
mov
xchg
addb
out
nopl
xor
jl
push
insb
jnp
aas
je
and
mov
pop
xchg
xchg
out
enter
mov
mov
sbb
jp
push
ds
mov
cld
in
outsb
mov
rcr
sbb
imul
cs
sbb
mov
and
lods
stos
pop
cmpsb
insb
icebp
and
inc
shll
pop
shlb
lret
adc
imul
pop
sbb
outsl
jno
mov
out
lods
jle
cld
sbb
ret
sub
adc
scas
pusha
movaps
cmp
pop
mov
jns
cmp
test
dec
mov
xchg
adc
dec
orl
cmp
popa
movsb
ds
iret
sbb
jge
cltd
mov
subl
mov
add
std
sbb
push
ja
mov
enter
add
cmp
imul
mov
add
int3
sbb
add
hlt
fucomip
or
cmp
inc
jns
sbb
push
xchg
xchg
pusha
add
sub
and
lcall
loop
fnstcw
cmpsl
outsl
push
ss
pop
jbe
cmp
popa
ret
sub
sub
dec
pushf
xchg
inc
inc
int3
push
sub
mov
mov
popa
mov
xor
mov
sub
aas
in
insl
test
pushf
dec
or
insb
jb
mov
call
inc
jae
xor
mov
cmp
xchg
add
fwait
cltd
cmp
mov
mov
jns
sbb
xor
sbb
lods
movsl
jae
sbb
lcall
mov
pop
sti
inc
xchg
stos
and
mov
push
mov
push
pop
add
xchg
out
mov
and
adc
add
adc
push
aas
dec
pop
pop
pop
in
in
cmp
mov
mov
fstps
add
cmp
sub
sbb
fcomi
sbb
cmp
lcall
jge
xor
xchg
pusha
test
pop
jnp
inc
jg
cwtl
leave
jb
xchg
test
push
mov
ficoms
xchg
jbe
aas
ja
dec
mov
mov
cwtl
fistps
lock
outsl
lods
inc
lock
or
enter
test
lcall
xor
fimuls
int
es
and
shlb
add
fnsave
cs
pop
or
xchg
pop
mov
out
sub
ja
mov
ret
rolb
enter
ror
int3
int3
int3
jne
mov
mov
test
cmc
sub
cmc
stc
xchg
lret
mov
scas
cmpsl
pop
scas
xchg
push
xchg
inc
das
xchg
popf
dec
adc
jle
mov
out
jmp
mov
daa
cmp
adc
das
js
sbb
mov
and
xor
push
mov
cli
fisubrl
push
pavgb
and
mov
jb
lea
sbb
cmp
stos
jge
sub
jge
cmp
push
inc
jmp
outsb
rcll
enter
mov
mov
cmpsb
scas
push
insb
aas
orl
addr16
mov
dec
or
popf
push
std
mov
mov
xchg
xorl
mov
rcrl
xchg
rol
sub
mov
mov
and
push
mov
movsl
xor
mov
daa
pop
rcl
daa
ret
aad
xlat
sarl
push
mov
push
push
jo
jb
hlt
stos
ss
xchg
mov
ds
sub
fisttpll
mov
xchg
sub
ja
xor
and
iret
cmp
dec
dec
adc
jle
dec
out
enter
mov
aas
leave
xchg
pop
out
clc
inc
mov
push
aad
xchg
jge
and
jg
jecxz
add
push
cli
xor
and
cmpsl
xchg
stc
test
ss
std
jne
scas
cli
loopne
jp
inc
inc
popa
xchg
int3
ficompl
fsubs
and
cltd
sub
test
and
mov
in
je
mov
inc
clc
lds
cld
dec
outsl
pop
pushl
pushf
mov
gs
or
ljmp
adc
xchg
or
std
adc
inc
pop
out
scas
dec
loope
rcl
xchg
inc
imul
push
js
and
cmp
fcoms
and
jbe
cmp
int3
int3
int3
int3
int3
in
inc
mov
jl
xor
mov
mov
sub
sub
push
xor
mov
cli
xlat
xor
or
in
and
lahf
arpl
icebp
push
and
test
fwait
cmc
daa
xor
xchg
in
es
ss
xor
sbb
mov
mov
rep
dec
xlat
mov
nop
shl
xchg
dec
popa
rolb
lcall
testb
loop
push
insb
pop
mov
dec
dec
lods
or
push
out
push
sti
rol
popa
push
data16
mov
repz
fdivr
push
jae
jno
push
xor
mov
push
andl
out
sub
fwait
push
pop
cmpsl
mov
loop
inc
insb
shrl
das
push
daa
fstl
jge
push
mov
cmp
xchg
push
es
mov
pusha
cmp
enter
aaa
jle
imul
mov
fs
dec
rcrl
fildl
cmp
pop
dec
dec
dec
repnz
pop
lret
jne
mov
test
insl
push
inc
pusha
jae
outsb
jmp
mov
pop
lret
push
das
mov
push
lds
insb
mov
jmp
outsb
pop
dec
push
aad
in
enter
xchg
in
jmp
scas
out
ljmp
mov
je
mov
imul
or
lds
sbb
insl
stc
jg
mov
jecxz
ljmp
xchg
sti
sbb
out
push
inc
repnz
or
movsb
fcmovnu
jo
popl
jnp
stc
mov
mov
lods
es
dec
mov
int
mov
jle
and
ficomps
mov
cmp
pop
lcall
sub
mov
push
push
mov
push
push
stos
outsb
ret
incl
xchg
in
movsb
mov
fnsave
stc
fsubrl
out
push
xor
out
imul
dec
mov
es
push
sub
stos
push
sbb
out
sbb
notl
lds
jmp
push
rclb
pop
cmpsl
and
and
enter
clc
out
xor
faddl
jmp
dec
mov
cmp
in
inc
lcall
stc
ljmp
arpl
jb
jge
lahf
into
inc
inc
gs
icebp
adc
mov
add
jmp
jmp
ja
fwait
inc
pop
in
lds
adc
iret
mov
testl
dec
out
shll
dec
push
aas
cmpsl
pop
aad
add
jmp
mov
aad
jne
fwait
clc
fistpl
cmpsl
sbb
fwait
mov
xor
mov
mov
ds
inc
addl
inc
xor
push
cwtl
shrb
sbb
rclb
adc
sahf
push
push
stc
popf
jge
cmpsb
cmpsl
icebp
in
data16
aas
jae
popa
ret
inc
mov
mov
cmp
cmc
iret
mov
pop
or
dec
cmp
rorb
pop
aaa
mov
int
shll
fs
mov
mov
sub
ret
or
pop
jnp
loopne
fidivl
xlat
xor
enter
pop
push
out
cwtl
fwait
sub
std
rclb
add
dec
inc
mov
and
inc
jmp
and
in
gs
fiaddl
push
push
and
push
daa
data16
fistpl
call
xor
xlat
jbe
lahf
add
daa
scas
mov
int3
int3
inc
ss
out
inc
ja
std
push
es
jne
push
adc
inc
loope
lods
lret
xchg
sbb
daa
imul
jle
loope
in
ret
and
cld
sub
xor
aas
xchg
and
and
and
and
mov
push
je
mov
in
ret
jno
ljmp
mov
aam
cmp
pushf
mov
sub
lret
out
cwtl
outsb
pop
xchg
andl
inc
and
mov
jne
je
mov
lcall
jle
fucomp
push
pop
incb
sbb
and
xor
ret
popf
filds
hlt
fbstp
jne
mov
inc
psrlq
scas
sub
popf
fistpl
bound
and
xor
shl
lea
cmp
scas
bound
pop
jno
fcomps
pop
ret
stos
outsb
into
xor
or
jb
loope
pusha
movsl
mov
or
and
pop
stc
sbb
cmpsb
push
sahf
hlt
jnp
cmp
push
jbe
imul
cmp
mov
fs
insb
xor
sub
lret
lret
fldenv
fmull
jb
int
movsb
sub
mov
xchg
enter
int3
mov
insb
and
clc
lock
cmpsl
cwtl
jae
test
or
and
inc
cmp
out
or
out
pusha
mov
pop
adc
repz
nop
outsb
sbb
adc
adc
std
push
mov
push
mov
testb
add
ljmp
fidivl
aad
lret
dec
push
mov
jp
mov
dec
xchg
inc
mov
dec
outsl
insb
add
inc
xchg
ficoms
inc
andl
out
inc
addl
jnp
ljmp
lret
xor
and
mov
sbb
and
and
mov
fisubrl
xlat
pop
jo
sub
xor
jns
jno
pop
cwtl
inc
pop
fnsave
lods
pop
sbb
adc
imul
add
xor
stc
ja
movsb
in
int3
and
lods
jmp
icebp
mov
sub
loopne
dec
loop
lds
cltd
mov
pop
lds
xchg
data16
in
daa
daa
testb
movsl
inc
cli
ja
lahf
or
data16
xlat
stos
adc
jae
cmp
jmp
in
pop
pop
mov
mov
push
and
mov
outsl
xor
insl
sahf
xchg
inc
cmpl
hlt
xchg
stos
pushw
jecxz
repz
push
andb
int3
int3
sub
push
pop
sbb
xchg
rcr
xor
mov
outsb
out
cmpsb
adc
dec
scas
lods
loop
mov
enter
in
repz
push
leave
in
mov
ja
or
das
jmp
jl
data16
cmc
dec
dec
out
dec
je
imul
inc
jbe
loope
sub
cmp
jne
outsb
push
aaa
sbb
fsubrl
xor
insl
outsb
mov
jecxz
pop
mov
pop
mov
fldt
aad
jge
or
sbb
push
inc
ja
or
cmp
outsb
aad
push
fdivr
jmp
xorb
cs
stos
and
iret
pop
cld
aas
rcll
xor
inc
orb
in
lret
shlb
mov
adc
xchg
ja
push
movsb
xchg
cmp
scas
in
add
ljmp
loope
loop
cmpsl
aam
sub
mov
pop
mov
sbb
pop
dec
rcr
mov
aam
cmp
lret
stc
lahf
popa
jp
scas
mov
in
or
popw
xchg
je
call
sbb
addr16
sahf
mov
idivb
leave
push
inc
rcrb
loopne
pop
fs
hlt
js
arpl
push
test
int3
xor
js
jne
stc
in
loope
mov
jg
xor
andb
fisubs
bound
mov
fmul
divl
outsl
adc
add
inc
mov
lds
mov
imull
mov
scas
mov
enter
aaa
cmp
jns
jno
mov
xchg
das
or
add
dec
pop
subl
xchg
jb
cs
out
in
push
adc
mov
pop
sub
jp
mov
add
inc
movsl
cld
cmp
xor
jl
jnp
rdtsc
push
pop
mov
sub
sbb
jnp
xchg
in
pop
mov
cld
test
outsb
and
pop
mov
pop
fcmove
insb
dec
out
lret
mov
mov
rorl
cld
sbb
icebp
das
outsb
sar
and
mov
mov
mov
sub
jnp
dec
pop
sbb
lods
outsb
pop
jae
sbb
dec
stos
and
adc
adc
ljmp
decb
cmp
pop
inc
sbb
ret
jne
insb
shll
xor
gs
mov
stc
rcll
cmp
or
mov
mov
add
mov
cwtl
jge
jl
push
int3
mov
adc
insb
cmp
arpl
incl
aaa
jge
repnz
pop
and
and
int
sub
mov
lcall
cwtl
or
mov
inc
add
pop
dec
and
mov
pusha
iret
ds
push
xchg
adc
inc
xor
lret
xor
ds
xchg
neg
xor
sub
or
jno
inc
inc
loope
xlat
loop
test
jecxz
fucom
dec
fisttpl
js
mov
jno
pop
dec
hlt
cmp
test
pushf
adc
stos
loop
insl
outsl
in
xor
jo
dec
inc
or
mov
dec
out
fwait
mov
repz
movsl
cmp
add
jne
je
je
ret
fcom
mov
int
lret
add
int3
int3
int3
int3
push
imul
and
outsl
dec
pop
mov
jmp
gs
stos
outsb
cmpsb
pop
icebp
xchg
rolb
int3
pop
js
sti
leave
mov
lretw
mov
push
fmull
mov
push
lahf
rorl
mov
and
pop
pop
pop
mov
xor
addr16
stos
sbb
jo
mov
xor
inc
lds
adc
arpl
pop
sbb
or
and
lods
inc
fldenv
mov
jg
push
sub
pop
pop
movsb
lret
pop
ljmp
mov
inc
push
or
fs
ficoml
add
adc
divl
sub
enter
repnz
ss
cmp
hlt
out
jnp
mov
dec
jmp
aas
pop
push
xor
rcll
dec
fistpl
in
jno
lods
aad
push
hlt
push
fists
mov
jo
imul
call
popf
ss
xchg
popa
fdecstp
jbe
shrb
push
js
or
ret
stos
and
mov
fisubs
popa
push
sub
stos
pop
cmp
sub
outsl
sub
and
pop
outsl
jb
mov
mov
aas
adc
mov
sub
movhps
ret
push
mov
imul
mov
ret
jbe
mov
loopne
addr16
ja
push
fmulp
sbb
inc
ficompl
jne
mov
cmp
iret
and
test
mov
push
jnp
inc
into
push
fldenv
mov
mov
or
jmp
jge
xor
fs
jge
mov
jbe
xchg
rol
add
in
push
dec
mov
jg
xchg
dec
jg
jmp
cmp
mull
sbb
out
sub
int3
int3
int3
int3
int3
int3
test
fsub
mov
mov
mov
test
and
mov
xor
inc
clc
pop
pop
xor
push
push
mov
popf
pusha
jnp
incl
ret
mov
pop
sbb
push
push
negb
cmp
in
mov
test
sub
mov
hlt
mov
add
lea
inc
fsubp
inc
es
mov
into
xor
dec
in
inc
jo
mov
test
in
rep
es
and
xchg
or
sarl
addr16
popf
fwait
mov
movsl
mov
cwtl
imul
bound
and
lods
adc
sbb
ret
stos
movb
aas
inc
rep
fimull
ret
stc
jo
das
insl
sub
aaa
stos
aam
ljmp
hlt
sbb
sub
out
addr16
mov
adc
pop
push
or
je
and
cmp
or
and
mov
push
aas
sbb
jnp
cmpsb
sbb
gs
add
outsl
shl
out
out
dec
xchg
adc
ficoms
cmp
in
sub
sub
mov
sub
push
sbb
pop
dec
jnp
xor
jb
pop
cmpl
dec
daa
insl
mov
or
lods
mov
pop
and
cwtl
insl
loope
aam
test
pop
adc
insl
xchg
dec
cmp
cmpsb
lret
push
pop
fidivrs
int3
addr16
inc
sti
int3
ds
mov
int
jmp
cmp
adc
push
or
mov
inc
cwtl
jb
repz
call
shl
imul
add
repz
mov
repnz
stc
insl
out
sub
insb
push
dec
push
push
ret
daa
xor
pop
in
mov
idivl
mov
aam
ret
or
lret
mov
jg
jbe
dec
sub
fisttpll
dec
jl
lods
add
push
mov
out
std
sbb
adc
stc
xchg
mov
out
mov
xchg
aam
or
scas
ror
sub
and
sbb
out
aas
call
pop
adc
pop
cs
sbbl
cmp
jle
adc
xchg
test
addr16
sbb
pop
mov
cmp
push
dec
pop
mov
jp
xlat
call
fldl2t
jmp
sub
adc
mov
icebp
cmpsb
idivl
out
jg
mov
lods
and
dec
es
ss
outsb
sbb
mov
roll
int
jecxz
push
lret
imul
out
popf
lret
inc
sbb
cmp
xor
scas
clc
fs
shlb
loopne
sub
pop
jnp
sbb
ljmp
cli
mov
je
push
push
or
mov
and
shll
xchg
dec
test
pop
jne
push
xchg
add
jne
dec
mov
int3
int3
int3
int3
outsb
in
jno
neg
in
pusha
and
dec
cmp
addr16
xor
push
cmpsb
leave
sub
out
fadds
jb
mov
fcmovu
adc
lods
mov
pop
and
push
fidivrs
sub
arpl
loope
imul
gs
mov
adc
and
loope
mov
xor
sahf
lret
dec
jbe
mov
jge
cld
cmp
imul
jp
sub
mov
fistl
icebp
push
hlt
sbb
jge
push
xchg
cmpl
pushl
loop
push
movsb
addr16
cmp
mov
cmp
clc
outsl
lock
int3
mov
nop
add
push
cmp
push
push
fidivrl
enter
daa
lea
out
insl
ljmp
jnp
jg
inc
mov
and
push
clc
push
dec
mov
xchg
movb
notb
das
mov
mov
push
jecxz
fisubrl
sub
xchg
adc
aad
mov
cmp
ds
nop
mov
je
cmp
sbb
cs
pop
fs
mov
and
pop
roll
cmpsl
mov
mov
stos
jns
push
scas
cmp
adc
in
mov
cmp
ret
sub
pop
sub
out
loope
je
xor
dec
out
cld
cld
jb
ss
sbb
in
xchg
adc
dec
dec
pop
mov
icebp
mov
sbb
and
shlb
lods
daa
scas
cmp
or
mov
jl
xchg
cmp
loopne
xlat
cmpsl
outsl
insl
mov
sbb
les
dec
inc
hlt
ja
sub
cmc
xlat
sti
movsl
cmp
or
int
mov
movsl
aam
jne
lret
push
jns
xor
xor
or
mov
dec
pusha
sbb
xchg
int3
int3
scas
lock
mov
out
popa
stc
std
and
ljmp
int3
and
in
add
xchg
jp
jno
jb
imul
movl
push
push
aas
push
xor
jp
lods
imul
jne
mov
in
stos
adc
hlt
sub
push
call
loopne
mov
sbbl
ret
scas
fdivl
pop
adc
mov
mov
push
test
and
mov
cmp
inc
dec
cs
popa
inc
and
in
iret
push
adc
jp
add
outsl
jae
iret
push
xchg
xchg
or
pop
cmp
arpl
call
scas
or
popa
pop
aad
mov
lahf
std
insl
cmpb
and
mul
aaa
popa
aaa
stc
int3
int3
int3
mov
mov
movsb
mov
pushl
mov
jnp
gs
leave
adc
mov
jbe
xchg
sbb
shrb
rcrl
cmpsl
jne
push
std
adc
and
push
mov
jnp
outsb
pop
inc
mov
xchg
push
pusha
xchg
sti
xchg
repnz
nop
pop
inc
stos
or
add
fsubs
jge
mov
xor
dec
iret
lcall
cmp
pop
fcomps
stos
in
cs
pop
aam
cmp
push
loope
mov
xlat
notl
dec
pop
cmp
cltd
ret
pushf
adc
lcall
push
and
in
aam
add
inc
jle
arpl
jbe
cmp
in
jp
cli
cmpsl
sub
mov
xor
imul
pop
jg
and
and
cwtl
in
or
inc
mov
or
ret
dec
dec
rorl
fmull
out
xor
push
rcll
jp
pop
repnz
fbstp
in
mov
es
orl
inc
mov
aas
push
movsl
test
iret
adc
mov
lcall
mov
mov
icebp
push
ja
aad
add
sub
lcall
pop
aas
jns
xchg
pusha
push
dec
adc
inc
jno
stos
add
hlt
dec
and
mov
mov
mov
incb
mov
push
sahf
inc
xor
pop
and
arpl
repnz
push
fstpl
aas
pop
xor
repnz
fildll
lods
jnp
call
xchg
jno
sub
or
or
push
or
jmp
jp
cmpsb
cmp
push
push
or
ljmp
jle
jb
sarb
push
jecxz
sub
jmp
dec
push
mov
dec
jg
mov
dec
push
mov
dec
sbb
adc
movaps
mov
and
imul
pop
fiadds
mov
mov
xor
xor
ret
les
out
dec
inc
fidivl
and
out
push
push
inc
subb
mov
or
icebp
mov
cmp
aas
std
mov
fidivl
in
jg
sti
xor
sbbl
int
scas
sub
add
pusha
test
xchg
shrb
mov
test
add
out
jmp
mov
mov
inc
rcr
in
lea
pop
stos
enter
jbe
ds
lret
das
imul
data16
or
jne
lods
in
gs
xchg
scas
inc
in
icebp
mov
push
pop
fwait
in
sti
and
stos
add
mov
jl
cli
fs
sbb
nop
adc
roll
cld
test
arpl
rcrl
je
in
lret
add
sbb
xchg
inc
sub
sti
pushf
rolb
pusha
dec
jecxz
mov
inc
mov
xor
mov
mov
adc
out
jno
xor
xor
mov
scas
push
pop
adc
inc
stos
fwait
loope
scas
mov
jle
cmp
xchg
iret
lret
jle
aas
jle
inc
mov
out
sbb
cmpl
cmp
int3
int3
int3
int3
stc
ja
xor
aam
inc
mov
flds
sar
sahf
scas
jb
jns
sarl
xchg
rclb
xchg
pop
cmp
lcall
jae
lret
fwait
ret
sub
cs
fisttpl
lds
jle
iret
mov
inc
mov
inc
jmp
dec
out
cmpsb
sarl
hlt
xchg
test
jge
or
jnp
and
and
sbb
cmp
daa
mov
dec
inc
inc
and
cmp
das
stos
jns
xor
int3
je
stc
ds
jp
je
cmp
outsl
repz
and
cld
insb
out
pop
pop
pop
jns
std
xchg
mov
cwtl
es
repnz
add
aam
inc
dec
xchg
rcrb
jp
in
add
pusha
inc
or
mov
div
sub
icebp
insb
dec
xchg
mov
mov
out
cmp
xchg
in
inc
jo
push
nop
cmp
xor
pop
xchg
mov
scas
adc
ja
testb
int
xor
add
jo
mov
dec
push
add
cmpb
lret
or
adcb
sub
jne
out
sti
outsb
popa
test
pop
daa
shrl
ljmp
outsl
or
inc
push
or
jmp
dec
into
sub
in
push
cmp
rol
rorl
and
stos
jns
xchg
xchg
and
or
sub
sub
xorb
fldz
jg
jae
mov
les
adc
jnp
push
movsb
cmp
addr16
scas
push
mov
dec
jle
inc
mov
xchg
cmpsb
psrad
xchg
ret
sti
inc
pop
dec
lods
add
ret
fmull
push
cmp
jmp
push
cli
mov
mov
fisttpl
lahf
mov
inc
pop
add
stos
sub
and
rcl
repz
xor
or
mov
jns
or
push
add
mov
into
jge
cmp
flds
cs
dec
and
cwtl
aad
xchg
pop
into
lahf
fxch
jp
fs
push
pop
nop
cmpsb
mov
mov
mov
sbb
dec
dec
cmp
dec
or
sbb
cltd
test
imul
dec
fdivl
jle
sbb
dec
call
xor
add
ss
lea
pop
jo
icebp
pusha
pop
in
mov
nopl
mov
mov
sbb
lahf
sahf
inc
cltd
test
or
push
mov
pop
outsb
and
push
inc
arpl
push
inc
push
icebp
add
cld
jae
ret
aam
outsb
or
add
iret
push
or
arpl
int3
mov
cli
add
jmp
lret
lea
mov
sub
sbb
push
add
adc
inc
repnz
int3
int3
daa
push
lods
or
ret
push
jl
orb
add
lahf
cmp
or
test
js
out
xchg
adc
dec
dec
cmp
dec
inc
test
mov
pusha
sbb
ljmp
mov
sarl
mov
andb
in
push
sbb
mov
push
adc
rcrl
sahf
js
and
aas
mov
cmpsb
adc
lret
outsb
cmp
fucom
sub
pop
sbb
dec
cmpl
sbb
or
cmp
dec
inc
cmp
mov
xchg
lahf
xor
or
in
sarb
aaa
dec
and
int3
int3
int3
int3
push
aam
lds
and
jbe
jo
mov
mov
mov
xor
add
dec
adc
cmp
les
scas
xor
out
dec
ret
push
int3
cmp
lods
inc
mov
test
mov
mov
pop
adc
cmp
adc
mov
bound
lea
lcall
or
dec
mov
cwtl
xchg
lock
divl
add
adc
mov
icebp
mov
cwtl
jl
ret
push
mov
pop
in
cmpsl
inc
pop
int3
dec
inc
cmp
cmp
xor
lret
push
subb
and
repz
icebp
or
aad
push
inc
fincstp
loopne
lret
push
in
daa
mov
xlat
lcall
rol
dec
notl
cmp
cmp
xchg
pop
cmp
mov
rolb
lods
pop
mov
pop
mov
and
jnp
mov
pop
or
hlt
jne
ffree
fcmovne
mov
xchg
sbb
cmpsl
loop
in
or
fists
out
stos
pop
insb
lods
inc
mov
into
jle
jo
jb
lods
mov
pop
lock
pop
mov
mov
stos
xor
sbb
push
popa
pop
jo
or
jge
pop
fsubl
adc
mov
lods
sub
stos
pop
push
pop
sub
out
std
xchg
adc
sub
mov
rcrb
popf
ljmp
push
mov
xor
mov
sub
aad
ror
pusha
dec
ja
cltd
testb
cmp
pop
pop
jge
pop
pop
adc
adc
jne
jle
adc
jno
cmp
pop
jns
inc
inc
cli
les
mov
dec
sbb
xchg
inc
dec
loope
inc
jae
xchg
and
and
pop
in
fnstcw
add
mov
add
sub
aam
xchg
rclb
mov
push
pop
movsl
or
pop
xor
push
test
pusha
pop
lock
xor
and
pushf
lds
insl
es
sbb
scas
inc
stos
mov
mov
aaa
sbb
and
testb
cmpsl
mov
inc
jl
rcrl
mov
sti
xchg
jecxz
and
jecxz
push
aam
call
push
scas
pop
in
nop
mov
cwtl
int3
les
mov
incl
jbe
imul
dec
scas
cmp
push
dec
jnp
or
icebp
pusha
cmp
addr16
sahf
adc
dec
enter
test
sub
xlat
iret
mov
push
call
outsl
movsb
imul
sub
ret
jbe,pn
lahf
rcr
xor
int3
int3
int3
int3
int3
add
lcall
test
mov
addr16
aaa
sbb
mov
lret
push
add
iret
sarl
ret
out
xchg
mov
rclb
jnp
loope
push
ljmp
test
push
rcll
push
adc
xor
out
lahf
sbbb
rorl
xchg
popa
mov
mov
xchg
sbb
and
xchg
lret
dec
jb
rclb
mov
cmp
out
and
push
pop
and
fsts
dec
addb
pop
push
sbb
sbb
xor
rolb
scas
xlat
and
jp
popa
mov
lea
mov
pop
push
cmp
or
mov
cs
inc
mov
lahf
xor
aaa
into
push
imul
rcl
or
fs
push
cmp
sub
push
pop
scas
inc
pop
cmpsl
leave
xchg
fwait
out
mov
jl
mov
cmp
sbb
push
clc
daa
aad
jg
push
jp
mov
call
cmpsb
mov
js
push
or
and
call
stc
lret
popf
cli
cld
pop
mov
dec
mov
fbstp
in
pop
in
dec
js
bound
add
sbb
int3
int3
int3
int3
push
push
in
mov
arpl
mov
xchg
sbb
mov
mov
into
jae
pop
jae
inc
int
ret
in
lret
aam
movsl
mov
cltd
pop
xor
in
cltd
in
adc
sarl
inc
add
pause
cmpsb
icebp
inc
and
xlat
test
xchg
daa
outsb
xchg
rcll
jns
xchg
stos
leave
sub
std
sbb
sbb
cmpsl
rclb
cltd
mov
or
mov
xor
and
sub
ja
jg
xor
loope
data16
cld
popa
mov
in
mov
test
movsl
pop
pushw
ss
cwtl
decb
jb
fcoms
jns
lods
packuswb
lcall
in
jbe
imul
fwait
out
sub
mov
dec
jae
push
or
adcb
enter
leave
int3
sub
inc
jge
inc
pop
scas
mov
jmp
aad
mov
loope
sbb
pop
push
jb
cli
or
inc
mov
mov
inc
or
jp
js
sbb
sbb
mov
popf
mov
and
shlb
mov
in
pop
dec
int3
int3
int3
int3
test
jns
cmp
jb
outsl
xor
icebp
lea
sbb
sti
stc
push
or
sub
je
ss
push
dec
jl
mov
mov
dec
add
test
mov
xchg
vpmacsdd
pusha
mov
popa
sub
and
push
rorl
orl
mov
js
in
adc
pop
push
xchg
mov
cmc
push
dec
mov
popf
mov
lret
nop
mov
mov
inc
xchg
aas
lods
jecxz
nop
sti
loop
out
lahf
cmp
dec
xchg
fistl
inc
int3
int3
int3
int3
push
mov
xor
lock
stos
movsb
inc
jge
dec
push
insl
ss
jmp
out
es
aad
fdivrl
js
out
sub
push
mov
xchg
push
inc
ds
mov
cmp
test
fidivrl
xlat
adc
stc
adc
and
jbe
nop
stos
mov
cld
mov
popa
shrl
inc
push
and
mov
sti
push
add
sub
sti
loope
stos
xor
je
call
icebp
dec
and
cmp
sbb
dec
repz
push
in
je
js
mov
ficoms
inc
shll
sub
iret
clc
std
mov
and
enter
aaa
mov
mov
push
add
push
or
shll
lea
mov
push
dec
sahf
test
push
sti
pop
hlt
lahf
xchg
push
jmp
pop
or
fwait
push
shll
jle
xchg
mov
sub
and
pop
sub
mov
xorl
mov
or
sub
or
fs
and
push
xor
xchg
jae
rcl
and
and
hlt
aaa
add
imul
adc
lahf
push
xor
stos
shlb
mov
dec
roll
mov
popf
xor
and
insb
sbb
icebp
pop
inc
int3
int3
int3
int3
int3
stos
loop
insl
cwtl
push
xor
ror
icebp
stos
xor
sahf
add
jb
faddl
lods
andb
fs
cli
cli
jnp
sbb
cmp
movsl
addb
mov
add
pop
ret
jmp
adc
mov
ja
adc
lods
rcr
mov
or
les
loop
stos
mov
pop
mov
add
cmp
push
sub
stc
xor
aam
dec
aaa
pop
cmp
inc
dec
sub
pop
push
xchg
add
push
jecxz
jne
jns
popf
mov
sub
jnp
ds
jge
shlb
push
inc
sbbb
push
fisubl
scas
shll
or
popa
jmp
sub
dec
pushf
adc
mov
cmpsb
loop
cltd
pop
ljmp
orb
xlat
adc
aam
lods
mov
mov
lcall
sub
mov
inc
imul
rolb
fists
hlt
nop
pop
out
out
loop
mov
jl
lret
adc
sbb
sbb
div
das
cmp
jmp
mov
mov
jnp
and
insb
jp
stc
pop
jbe
bound
or
int3
int3
int3
int3
int3
sbb
cmp
mov
test
inc
pop
adc
mov
xor
mov
orl
popa
push
push
nop
shll
add
push
sub
rolb
dec
sbb
pop
cmp
mov
fwait
mov
inc
je
inc
movsl
insl
xchg
roll
int3
int3
int3
dec
jo
cmc
xchg
fcomps
pop
nop
adc
mov
cmp
arpl
pop
inc
add
adcb
mov
lcall
insl
mov
xor
sbbl
add
scas
aas
fisubl
sbb
ret
jno
aad
imul
pop
movsb
dec
shlb
sub
adc
sahf
insl
adc
fdivr
inc
mov
addb
push
out
and
dec
stos
xchg
pop
add
xchg
bound
lea
cs
in
aad
lock
js
adc
shl
mov
pop
out
fnstenv
aaa
sbb
cmp
cmp
sbb
mov
or
movsl
sub
nop
sbb
fstl
ljmp
icebp
repnz
dec
dec
sub
xchg
ficomps
add
adc
mov
lds
pop
pop
add
xchg
dec
divb
test
or
sub
mov
mov
add
mov
in
mov
or
xchg
mov
call
pop
mov
scas
jns
add
lcall
lcall
popa
mov
jle
or
lret
xor
and
mov
xchg
xlat
dec
mov
and
hlt
call
jmp
pop
lcall
mov
iret
lock
adcl
push
sbb
xchg
stc
popa
dec
xchg
push
pop
mov
movsl
enter
lods
into
shrb
jg
and
push
and
aas
push
addr16
mov
aam
xor
loopne
int
sbb
push
les
pusha
fnsave
cmpsl
xor
dec
incb
fldenv
sub
xlat
sbb
or
stc
sbb
scas
je
mov
mov
push
mov
cmp
fnstenv
cmpsb
pop
incl
rol
mov
pop
xor
mov
loop
fistl
decl
int3
int3
adc
adc
mov
pop
nop
pop
mov
or
xchg
movsb
mov
into
into
cmp
xchg
out
mov
loop
lret
dec
cmp
jbe
push
mov
add
push
nop
leave
xchg
mov
enter
cmpsl
call
adc
scas
or
lcall
sahf
mov
mov
jno
jle
sub
sub
xor
sub
nop
stos
sub
dec
ds
insb
or
daa
add
outsb
mov
pop
push
jg
cmp
and
cmp
int3
int3
or
out
dec
adc
cmc
pop
push
dec
sub
jae
ljmp
or
dec
xchg
adc
pop
or
xchg
cld
cs
fnstsw
jg
clc
and
mov
or
rcl
leave
xor
lock
movsb
int3
add
and
imul
xchg
pop
push
inc
push
adc
sub
push
cmp
push
ds
loop
jmp
popf
sbb
outsl
pop
sbb
shll
insb
lock
mov
pop
mov
push
ss
mov
pop
fldenv
mov
inc
mov
cli
mov
mov
and
sbb
mov
repnz
jmp
sbb
adc
pop
arpl
or
push
sub
int
aaa
cmp
popf
cld
loopne
aas
fdivr
push
adc
mov
les
mov
test
ret
les
test
mov
mov
faddl
mov
xchg
mov
jbe
cmp
jae
dec
xchg
fldlg2
in
lods
add
out
pop
ss
subb
gs
arpl
movsl
loopne
lods
loopne
xor
sbb
out
mov
cld
je
push
cmp
stc
enter
push
sbb
dec
test
int
mov
imul
out
int
sub
insb
xchg
fsubl
in
mov
andb
lahf
cmp
xchg
xchg
add
lods
sub
into
aas
jge
rcrl
lret
cli
jmp
out
stos
clc
sbb
decb
push
ljmp
stos
lcall
pop
add
mov
int3
int3
int3
loope
inc
or
loope
and
xor
sbb
dec
inc
pop
add
mov
jge
adc
clc
dec
inc
sub
sub
ret
mov
jl
xor
dec
pop
mov
sbb
movb
scas
adc
sub
sti
fsts
fidivs
js
pop
faddl
stos
sub
rolb
adc
xchg
jmp
cmp
iret
pushf
and
mov
iret
rcrl
jae
scas
cmp
loop
sbb
loope
loopne
movl
sahf
pop
xor
roll
jl
cltd
jecxz
rclb
popa
jl
int
hlt
ss
xlat
xchg
int3
or
jo
mov
xor
lret
daa
fbstp
stos
xchg
rcrl
ds
mov
push
inc
jecxz
imul
bound
sub
mov
dec
cmp
test
mov
sti
mov
fs
aad
and
cld
sbb
sbb
xor
pusha
ret
popf
test
pop
and
shll
fnsave
push
call
jno
inc
test
or
xor
jne
sub
je
xor
mov
imul
adc
or
popf
sbb
jg
cmpb
mov
mov
iret
cltd
mov
pusha
pop
xchg
scas
pop
mov
mov
jl
repnz
addb
push
mov
fstl
or
pusha
das
xchg
and
popf
xchg
and
pop
or
cwtl
arpl
popf
imul
dec
testl
rcrb
xchg
mov
pop
pop
rclb
sub
jns
repz
mov
aad
pop
test
jle
in
mov
dec
xchg
inc
lds
clc
mov
sbb
data16
or
loope
insb
mov
add
inc
add
out
push
pop
adc
mov
lret
mov
and
inc
sbb
mov
mov
mov
or
cmp
pushf
dec
popa
adc
scas
xlat
pop
mov
and
fistl
or
sbb
scas
nop
sbb
clc
idivl
push
mov
lods
lahf
jb
subl
stos
or
push
lods
fisubrs
cmp
push
sbb
sbb
or
cltd
out
dec
jl
xchg
inc
mov
fldt
dec
imul
ss
out
adc
mov
pushf
popa
mov
xor
mov
hlt
jmp
mov
sbb
inc
pop
jns
mov
gs
push
fiadds
or
test
fcmovne
jnp
sub
fstps
or
jge
int3
imul
mov
jmp
gs
ljmp
out
ret
out
mov
leave
mov
movsb
push
push
add
je
dec
fcomi
shrb
cmp
rorl
jge
jae
jl
sarb
insb
repz
in
mov
mov
sbb
daa
mov
repnz
xor
add
push
and
add
jp
jp
pop
idivl
mov
icebp
inc
in
inc
mov
push
inc
lea
push
or
aam
mov
fiadds
sbb
add
jo
mov
cmpsb
mov
cmc
pop
leave
adcb
stos
or
push
ret
mov
mov
xor
stc
call
or
aad
mov
in
lods
adc
xchg
addr16
fdivs
inc
loopne
adc
sbb
scas
cs
jmp
std
nop
mov
and
iret
fwait
mov
popf
outsl
lea
lods
xchg
lock
lock
faddl
xchg
sarb
mov
cmp
push
imul
lea
inc
sti
mov
mov
xlat
mov
out
push
sub
lret
dec
dec
sarl
xchg
orb
push
sti
xchg
imul
cmp
xor
imul
inc
addl
and
mov
inc
enter
inc
lcall
xlat
or
jae
shl
adc
add
repnz
adc
xor
cmp
sbb
js
mov
int3
int3
decl
cmp
das
xor
setne
inc
lods
mov
mov
cwtl
daa
rclb
dec
je
xchg
lds
sbb
test
pop
out
cmp
lea
out
sbb
mov
mov
mov
sbb
xchg
ret
adc
fst
pop
pop
mov
int3
mov
fbld
dec
cmp
shll
sbb
mov
cmp
ja
jle
mov
mov
cld
shr
mov
iret
pop
cli
pop
xlat
push
and
mov
sbb
pop
call
inc
push
pop
lahf
fimull
js
shl
or
repnz
push
jo
jnp
cmp
adc
jmp
and
and
and
mov
jmp
fwait
mov
scas
xchg
jl
lret
scas
push
dec
jge
inc
or
lods
movsb
jp
std
push
lret
scas
cmp
cmpb
fisttpll
into
out
cltd
inc
iret
pushl
pushl
xchg
cmp
fbstp
lods
out
aas
sub
imul
mov
cmpsb
out
add
out
inc
xor
lods
jae
sbb
sbb
enter
or
mov
jl
stc
pop
loope
scas
xor
jb
dec
cmp
cmpb
out
test
enter
add
inc
or
pop
and
xchg
jmp
xor
aas
lret
dec
sub
push
in
movsl
pop
mov
xchg
fdivr
cmp
cwtl
sub
mov
jle
movsl
jne,pt
cmp
pop
cmp
pop
mov
lret
or
fcomip
stos
addr16
cmpl
das
add
es
int3
int3
int3
int3
test
add
sbbb
pop
push
in
mov
sbb
or
jne
das
xor
jg
shll
xchg
push
cmpsb
sub
ds
mov
into
rcrl
hlt
addr16
int
imul
enter
ss
mov
imul
mov
lret
cwtd
dec
push
pop
sbb
push
mov
enter
adc
movsb
inc
popf
xchg
and
push
in
push
addr16
or
fwait
jnp
xchg
inc
decl
adc
sbbb
push
mov
pop
aad
aam
sbb
push
lock
lahf
mov
mov
fsubs
sbb
adc
pop
sbb
dec
and
jmp
jecxz
mov
lcall
and
or
add
pop
idivl
shrb
mov
jecxz
adc
repnz
adc
xchg
enter
xchg
mov
xchg
mov
push
stos
mov
sub
sahf
and
sub
sahf
inc
test
lcall
ret
pop
sbb
es
mov
adc
lahf
jl
clc
ret
out
outsb
cmp
sbb
inc
or
and
int
fisttpl
push
lcall
gs
pop
fnstenv
scas
sahf
stc
pushf
dec
or
inc
fisttpll
cltd
stos
mov
cmp
sbb
pop
pop
or
mov
pop
into
xchg
sbb
push
shl
or
push
rcll
and
add
push
pop
lcall
sbb
aaa
mov
xchg
jle
enter
mov
mov
daa
sub
mov
xor
push
pop
and
mov
pop
adc
dec
dec
fwait
mov
xchg
sbb
loopne
nop
sub
sbb
inc
lret
int3
int3
int3
int3
out
ljmp
fwait
dec
setp
dec
and
mov
inc
xor
xchg
sbb
cmc
add
sbb
mov
xor
push
sbb
push
sarl
adc
sbb
sahf
repz
test
inc
xchg
xor
lret
sbb
sub
and
imul
cmp
dec
stc
sub
ret
add
scas
fisubrs
mov
or
sbb
aas
pop
popf
lods
daa
enter
icebp
add
cmp
mov
inc
lods
or
aad
mov
push
pusha
mov
or
aaa
stos
pop
cmp
lret
sar
xor
shlb
lods
lahf
mov
cmpsb
dec
inc
pusha
mov
pop
ficoms
and
push
add
sub
dec
aas
inc
inc
test
ret
or
fucomi
or
int
sub
push
es
push
inc
ret
dec
test
push
jg
sub
inc
pop
add
cli
lcall
rclb
add
les
mov
in
pushf
mov
cs
lcall
orl
scas
xchg
xchg
int3
lcall
test
and
nop
xor
pop
lcall
movsb
push
rclb
add
sahf
xor
std
fwait
add
cmpsb
addl
fdivl
xchg
push
pop
push
rcrl
cmp
pop
jns
jae
incb
jno
inc
inc
xor
decl
pop
int3
mov
cltd
xchg
mov
mov
mov
sbb
scas
bound
int3
inc
test
mov
cmpsl
orl
es
lds
adc
cmp
mov
xchg
pop
push
xlat
inc
leave
xchg
test
mov
ret
push
push
mov
xchg
and
pop
mov
push
jecxz
or
xchg
leave
aam
sbb
hlt
add
or
jne
aaa
ret
and
mov
sub
and
sbb
mov
popa
dec
call
or
adc
xchg
fwait
and
repnz
das
mov
xchg
push
or
adc
sbb
dec
mov
pop
xchg
imul
test
sbb
les
pop
out
sub
ficomps
sub
aam
jge
insb
inc
rcll
les
push
push
lock
shll
scas
mov
adc
movsl
stos
pop
jno
mov
fildll
inc
cwtl
dec
xchg
xchg
inc
pop
iret
fimull
push
xor
int3
int3
int3
int3
int3
ljmp
mov
ja
insb
push
mov
jae
mov
mov
fnstcw
xor
or
mov
in
xchg
push
sbb
aaa
or
stos
dec
ret
jg
cs
adc
in
vpshld
jns
aam
xchg
rclb
and
pop
xor
or
add
pushf
mov
jl
mov
jbe
cmpl
aam
popf
or
push
add
cwtl
test
inc
mov
jp
out
out
adc
iret
adc
int3
in
cwtl
push
addr16
test
adc
cmp
sbb
mov
adc
xchg
testb
jge
dec
test
pop
mov
add
mov
add
add
add
js
inc
add
add
add
add
add
add
add
add
pusha
jl
add
add
add
jnp
add
add
add
add
insb
jnp
add
add
add
inc
add
add
add
inc
add
add
add
jp
add
add
add
add
test
add
add
add
add
add
and
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
ja
add
add
mov
add
add
add
pushf
ja
add
add
add
add
add
add
rorb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
roll
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
addl
inc
add
add
add
add
add
add
fadds
cmp
inc
add
fadds
cmp
inc
add
fadds
add
add
add
add
adc
inc
add
jg
add
inc
add
test
push
flds
inc
fadds
add
add
inc
fadds
adc
inc
add
inc
mov
add
add
jmp
jg
add
addl
adc
inc
add
mov
add
inc
add
mov
cld
xchg
clc
xchg
lock
call
xchg
aam
inc
add
xchg
rolb
add
xchg
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
push
xchg
dec
xchg
cmp
inc
add
inc
add
xchg
sbb
inc
add
xchg
adc
inc
add
xchg
hlt
xchg
call
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
jg
jg
jg
adc
inc
add
add
add
add
add
add
add
add
add
xorb
add
add
lock
incl
add
add
push
add
push
add
inc
add
incl
add
add
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
fbstp
mov
aad
rolb
int
add
enter
lods
pop
add
mov
add
mov
add
mov
insb
add
mov
jno
in
jae
fnsave
mov
mov
add
fcmovnu
add
incl
xchg
fwait
fwait
add
movsl
movsl
add
scas
mov
scas
mov
lock
in
out
add
in
add
cli
incl
loop
incl
popf
stos
lods
add
rol
loopne
in
add
in
add
repz
add
icebp
testb
rcl
add
rcl
add
in
lock
in
add
lock
out
lock
in
add
rcl
add
icebp
repnz
idiv
add
loop
add
loope
add
in
repnz
in
icebp
add
ljmp
in
repz
idiv
add
idiv
add
idiv
add
cmc
std
add
lock
rcl
add
in
icebp
add
jmp
add
repz
add
ljmp
in
icebp
add
cmc
std
add
idiv
add
repnz
add
ljmp
loope
testl
fsub
jecxz
fcomi
std
add
repnz
add
repz
std
add
out
cli
add
repz
out
repnz
add
icebp
repz
clc
stc
add
incl
outsb
ret
negb
inc
shlb
dec
daa
jne
mov
push
call
orb
fisubl
xor
and
and
inc
in
cmp
or
sti
insl
rcr
push
mov
or
inc
adc
inc
into
mov
stos
clc
lret
or
repnz
imul
sbb
and
add
test
popw
inc
pop
mov
lret
lret
mov
xchg
sbb
xchg
jge
fcoms
pop
inc
lret
mov
leave
mov
cmp
dec
arpl
roll
xor
push
aam
xor
or
out
jnp
scas
add
sti
dec
xchg
loop
popa
xchg
push
in
pop
push
js
or
or
js
pop
dec
mov
adc
and
cld
leave
adc
mov
or
inc
icebp
std
mov
xorb
xor
repnz
lretw
jle
mov
insl
outsl
push
repz
mov
cmc
mov
sahf
or
xor
lret
fnstcw
xchg
iret
mov
pop
mov
mov
jne
xor
cli
jae
cmp
out
xor
dec
add
pop
call
popf
add
inc
sbb
jo
mov
seta
xchg
lods
lea
push
loop
inc
jne
or
pop
cmp
add
xchg
jle
sbb
movsb
enter
xor
mov
js
fisttpll
test
das
mov
mov
iret
mov
aaa
imul
push
mov
cmpb
mov
jmp
fstl
mov
cbtw
in
imul
mov
es
dec
jg
movsb
mov
test
jne
sbb
or
repnz
cmp
in
aam
pop
and
hlt
inc
shlb
jge
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
push
add
jo
add
jo
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
mov
add
add
add
add
add
add
push
add
add
aas
add
add
add
add
add
add
add
rolb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
lods
add
add
add
add
xor
cmp
xor
xor
inc
add
add
push
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
jo
imul
outsl
add
add
add
outsb
add
add
outsl
add
je
ja
popa
add
add
add
inc
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
outsl
add
add
arpl
imul
add
add
add
cmp
sbb
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
je
jb
popa
add
imul
add
add
js
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
sub
add
add
add
add
jns
and
push
add
jo
imul
outsl
add
add
add
outsb
add
add
outsl
add
je
ja
popa
add
add
add
inc
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
outsl
add
add
arpl
imul
add
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
outsl
add
add
arpl
imul
add
add
add
cmp
sbb
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
add
daa
xor
push
xor
fidivl
ljmp
xor
xor
xor
xor
xor
xchg
lcall
xor
xor
cmp
dec
xor
pusha
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
lret
xor
cs
imul
test
mov
fdivl
push
aaa
and
inc
aaa
outsl
aaa
mov
lods
aaa
mov
aaa
or
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
jnp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
leave
cmp
xor
aas
ds
ds
ds
out
hlt
ds
aas
adc
inc
aas
insb
aas
jbe
xchg
aas
xchg
aas
cmpsb
aas
leave
aas
out
aas
add
add
add
add
push
xor
xor
inc
xor
jno
xor
fdivs
or
sub
inc
xor
mov
test
shll
cld
xor
xor
xor
jb
lahf
xor
xor
xor
xor
xor
inc
xor
cmpsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
jle
mov
xor
in
xor
pop
mov
xchg
cmpsb
ss
ss
adc
sbb
aaa
jo
jne
jns
xchg
aaa
mov
aaa
or
push
cmp
imul
cmp
or
sub
cmp
push
jg
mov
cmp
cmp
cmp
jle
test
fwait
cmp
cmp
cmp
cmp
cmp
cmp
jg
mov
fnstcw
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
mov
mov
xor
bound
imul
mov
in
idivl
and
aas
jb
js
nop
aas
movsb
aas
int
lock
add
add
add
sbb
xor
insb
xor
xor
xor
xor
xor
lahf
xor
xor
xor
xor
jb
xchg
xor
xor
xor
xor
xor
xor
outsb
xor
mov
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
mov
xor
inc
ss
test
stos
ss
mov
ss
sbb
pop
aaa
inc
aaa
dec
aaa
data16
jp
jg
movsl
aaa
fdivs
add
push
cmp
cmp
jo
lea
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
jo
jge
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
mov
xlat
cmp
sbb
cmp
pop
ds
mov
lcall
ds
aas
jp
cltd
aas
mov
int
out
aas
add
add
add
dec
add
add
xor
jae
xor
xor
xor
xor
xor
xor
xor
push
xor
jno
nop
xor
xor
xor
xor
inc
xor
jb
xorl
add
sub
inc
xor
outsl
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
mov
fdivl
and
inc
ss
lea
mov
add
and
inc
aaa
push
aaa
fwait
aaa
shlb
aaa
stc
aaa
sub
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
mov
xchg
cmp
adc
and
inc
cmp
jp
xchg
cmp
cmp
cmp
cmp
cmp
pop
cmp
jbe
mov
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
dec
ds
ds
jno,pt
cmpl
ljmp
aas
sub
aas
cmpb
aas
popf
aas
scas
aas
mov
aas
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
dec
xor
xorb
xor
xor
xor
xor
xor
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
mov
xor
lea
cmpsl
ss
ss
push
aaa
jle
mov
aaa
in
aaa
add
adc
sub
dec
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
xor
dec
cmp
jle
mov
cmp
cmp
or
cmp
arpl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
mov
cmp
sub
jl,pt
xchg
popf
ds
or
sub
dec
aas
insl
aas
lcall
aas
lock
idivl
add
add
add
cmp
add
or
xor
test
movsb
xor
xor
xor
xor
xor
pop
xor
xchg
xor
xor
xor
xor
xor
xor
jae
jnp
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outsl
xor
fnsave
daa
ss
outsl
ss
ss
ss
ss
aaa
pop
aaa
dec
aaa
push
aaa
insl
aaa
mov
xchg
aaa
mov
aaa
divl
cmp
jne
xchg
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmpb
cmp
cmp
cmp
cmp
inc
cmp
insb
cmp
cmp
cmp
cmp
cmp
jns
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
sarb
adc
cmp
ds
ds
ds
aas
inc
aas
dec
aas
js
xchg
mov
fwait
aas
mov
add
xor
add
add
add
sbb
dec
xor
jo
mov
sahf
xor
xor
xor
xor
add
daa
xor
xor
xor
xor
or
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insl
xor
mov
xor
pop
xorl
mov
aaa
cmp
addr16
test
mov
loope
ljmp
cmp
jge
lcall
cmp
cmp
cmp
lea
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
fdivrl
insb
mov
mov
ds
and
inc
aas
outsl
aas
mov
aas
repnz
add
add
add
add
add
xor
dec
xor
pop
xor
xchg
xor
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
mov
mov
into
xor
xor
xor
xor
xor
outsl
xor
loopne
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
js
cmpsl
xor
loope
or
and
ss
mov
mov
add
or
sbb
dec
aaa
arpl
jge
aaa
mov
fidivs
or
and
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
fistpll
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
nop
cmp
in
cmp
cs
jg,pt
sahf
ds
ds
push
aas
push
aas
inc
aas
push
aas
pop
aas
cmpl
lahf
aas
cmpsb
aas
les
loopne
add
add
add
wrmsr
and
push
xor
jge
test
stos
xor
xor
xor
and
push
xor
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
js
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jbe
xchg
xor
mov
xor
sub
ss
ss
xchg
ss
ss
ss
aaa
push
aaa
bound
xorl
out
or
adc
cmp
jp
movsl
cmp
icebp
cmp
cmp
cmp
cmp
mov
scas
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
je
test
aad
or
sub
xor
pop
cmpb
ds
loopne
or
cmp
inc
aas
push
aas
mov
mov
aas
add
add
add
wrmsr
sub
xor
popa
xor
xorb
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
dec
xor
xorl
stos
xor
xor
xor
xor
xor
xchg
mov
les
hlt
xor
xor
xor
xor
xor
xor
xor
xor
xor
jbe
cltd
xor
icebp
xor
push
test
ss
ss
push
aaa
aas
aaa
dec
aaa
imul
aaa
fwait
aaa
mov
leave
aaa
cli
aaa
aaa
cmp
cmp
jb
jp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
xchg
cmp
or
xor
cmp
pop
cmp
test
stos
cmp
cmp
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
xor
push
cmpb
ds
aas
daa
aas
push
aas
insl
aas
lea
mov
fidivrs
out
aas
add
add
add
cmp
add
adc
sub
cmp
popa
xor
jae
jp
test
xor
xor
xor
jle
xchg
xchg
xor
xor
xor
arpl
jae
xchg
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
pushf
xor
fdivs
inc
outsl
ss
ss
shll
add
adc
ss
push
aaa
addr16
mov
mov
shlb
add
xor
aaa
cmp
cmp
cmp
cmp
cmp
sbb
inc
cmp
jge
stos
cmp
cmp
cmp
cmp
cmpl
loopne
in
in
cmp
xor
push
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
test
mov
sarb
sub
aas
ds
outsb
jge,pt
test
scas
ds
out
in
ds
adc
ds
dec
aas
insb
aas
xchg
aas
cmpsb
aas
int
in
cli
aas
add
add
add
push
add
add
xor
xor
xor
xor
insl
xor
xor
xor
xor
xor
xor
jl
test
sahf
xor
xor
xor
xor
xor
xor
data16
xor
xor
xor
dec
xor
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
lcall
xor
and
xor
dec
ss
ss
xchg
ss
ss
or
adc
aaa
cmp
push
aaa
ja
jnp
test
aaa
add
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
cmpsb
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
fdivrs
sbb
jno,pt
js
mov
test
mov
adc
push
aas
aaa
aas
push
aas
imul
stos
aas
leave
aas
sti
aas
add
add
add
inc
add
add
xor
xor
xor
xor
xor
xor
xor
xor
jp
jg
mov
xchg
xor
xor
xor
xor
dec
xor
jae
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
movsb
xor
shlb
daa
xor
pop
ss
jg
movsb
ss
jecxz
std
sbb
ss
push
aaa
push
aaa
jns
aaa
popf
aaa
lds
icebp
aaa
sbb
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
cmp
cmp
cmp
xor
aaa
cmp
test
mov
aad
cmp
cmp
push
cmp
mov
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
sub
cmp
dec
ds
ds
ds
ds
ds
and
aaa
aas
imul
mov
lret
aas
fdivrl
in
idivb
cli
aas
add
add
add
add
add
xor
xor
arpl
xchg
xor
xor
xor
xor
xor
xor
xor
push
xor
jne
xchg
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
test
lret
xor
inc
ss
jl
sahf
cmpsl
shll
fnsave
out
or
sbb
dec
aaa
js
xorb
aaa
lds
jmp
cmp
cmp
cmp
dec
cmp
popf
cmp
pop
cmp
imul
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
imul
leave
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
arpl
test
mov
fistpll
dec
ds
ds
cmpl
sarb
add
aas
push
aas
pop
aas
addr16
mov
test
aas
icebp
aas
add
add
add
xor
add
and
inc
xor
data16
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
scas
xor
fnsave
repnz
dec
ss
xchg
ss
aad
std
ss
aaa
lahf
aaa
scas
aaa
aad
ljmp
cmp
mov
sarl
in
cmp
cmp
cmp
cmp
sub
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
test
stos
cmp
cmp
cmp
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
dec
ds
cmpsb
ds
ds
fidivrs
cld
ds
inc
aas
dec
aas
jbe
lahf
aas
aas
in
aas
add
add
add
add
or
and
inc
xor
pop
xor
xchg
xor
sbb
xor
inc
xor
lcall
xor
xor
and
push
xor
xorl
enter
add
xor
dec
xor
test
mov
leave
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xchg
xor
in
lock
pop
ss
push
imul
lret
ss
cld
add
xor
dec
aaa
push
aaa
pop
aaa
jno
jle
fwait
aaa
mov
aaa
or
cmp
cmp
cmp
cmp
cmp
pop
cmp
jl
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
xchg
cmp
cmp
cmp
cmp
jp
test
xchg
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
sarb
aas
ds
mov
cwtl
ds
ds
lret
add
or
aas
cmp
pop
aas
nop
aas
movsl
aas
enter
add
add
add
sub
dec
xor
xor
xor
xor
jl
mov
xor
xor
xor
xor
push
xchg
xor
xor
xor
xor
xor
xor
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
bound
mov
xor
adc
inc
ss
xorb
ss
out
or
getsec
sub
cmp
dec
aaa
jb
xorb
aaa
mov
aaa
and
push
cmp
movsl
cmp
cmp
cmp
pop
cmp
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
mov
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jnp
cltd
cmp
add
sub
inc
ds
js,pt
mov
movsb
ds
fstpt
or
aas
push
aas
jp
aas
mov
sarl
repnz
add
add
add
adc
daa
xor
xor
xor
xor
xor
xor
xor
jp
lcall
xor
xor
nop
xor
std
xor
xor
xor
jne
mov
cwtl
xor
fnstenv
stc
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
mov
mov
iret
xor
inc
ss
ss
ss
ss
aaa
adc
xor
pop
aaa
xorb
aaa
lds
lock
adc
cmp
je
xchg
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
mov
cmp
cmp
cmp
jno
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmpl
inc
ds
ds
ds
xchg
ds
aas
push
aas
push
aas
xor
aas
outsb
aas
jge
mov
leave
aas
jecxz
jmp
icebp
aas
add
add
add
add
add
xor
xorl
jmp
cld
xor
inc
xor
je
mov
xchg
xor
xor
xor
xor
xor
xor
jne
xchg
xor
xor
xor
xor
xor
jns
xchg
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorl
daa
ss
ss
xchg
pushf
movsb
ss
out
or
cmp
push
aaa
jg
mov
aaa
adc
sbb
cmp
push
cmp
cmp
cmp
cmp
cmp
bound
jo
cmpl
ret
cmp
cmp
cmp
sbb
and
sub
pop
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
jecxz
adc
ds
imul
mov
fdivrs
add
sbb
aas
push
aas
gs
outsb
aas
mov
mov
aas
