push
sub
add
add
cmp
add
dec
sub
add
add
add
add
add
jl
add
add
add
lcall
add
sub
add
add
add
sub
add
add
add
adc
cld
xchg
dec
gs
and
xor
mov
inc
sub
mov
addb
adc
cmp
cmp
push
add
jecxz
push
sahf
and
movsl
int3
fdivrl
inc
or
cmpsb
repnz
xchg
sub
adc
adc
cmp
cmp
mov
mov
jns
movsl
addb
adc
cmp
cmp
cld
inc
cld
mov
push
or
mov
addb
cmp
cmp
mov
push
add
cmpsb
jo
movsb
clc
adc
adc
adc
push
aam
out
imul
push
pushf
icebp
mov
pop
movsb
addb
adc
cmp
cmp
cld
mov
popa
shlb
nop
jmp
mov
repnz
addb
cmp
cmp
push
enter
jg
ljmp
adc
adc
cmp
cmp
mov
int3
pusha
mov
pop
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sbb
add
mov
rcll
jle
addb
cmp
cmp
mov
outsb
dec
push
inc
inc
dec
or
or
lret
mov
mov
repnz
push
addb
outsl
daa
sbb
and
jno
rorb
data16
adc
cmp
cmp
fildll
sbb
sbb
pop
and
adc
adc
cmp
cmp
das
mov
fisubrl
outsb
jae
addb
adc
cmp
cmp
sbb
dec
inc
or
in
jns
data16
psllw
adc
mov
notl
ds
sub
add
popa
inc
inc
adcb
push
mov
add
arpl
dec
shl
addb
adc
cmp
cmp
mov
mov
xchg
notb
loop
rclb
sahf
loope
inc
push
inc
test
xchg
imul
and
call
cmp
mov
in
xor
ret
addb
cmp
cmp
xchg
stos
leave
je
shlb
sbbl
addb
cmp
cmp
mov
std
jno
dec
hlt
and
addb
cmp
cmp
mov
sbb
lods
ljmp
xor
inc
mov
push
cmp
adc
adc
cmp
cmp
daa
inc
nop
sbb
lea
pop
push
xchg
movsb
jnp
test
addb
cmp
cmp
mov
jmp
stos
mov
mov
addb
adc
cmp
cmp
push
mov
cmp
roll
lds
cmp
fdivs
sub
sub
mov
sub
mov
push
mov
mov
pop
add
mov
call
mov
push
mov
lea
sub
dec
mov
call
call
mov
sub
mov
inc
mov
mov
sub
sub
movswl
mov
mov
xor
sub
inc
mov
mov
movzbl
add
pop
add
sub
call
lea
movzwl
sub
push
call
add
pop
add
xor
lea
dec
xor
dec
inc
sub
mov
add
sub
sub
pop
xor
add
pop
mov
pop
or
sub
pop
pop
pushl
push
mov
ret
push
add
push
mov
lea
push
add
sub
push
imul
add
push
mov
mov
dec
dec
push
dec
add
mov
xor
add
add
mov
mov
dec
add
movzbl
mov
call
lea
imul
call
sub
sub
call
mov
push
call
mov
xor
call
add
xor
pop
add
ret
push
call
mov
add
add
movzbl
cmp
je
dec
add
mov
add
inc
sub
sub
call
mov
call
dec
sub
jmp
push
push
dec
mov
push
mov
push
sub
inc
dec
add
lea
add
sub
dec
push
add
lea
xor
inc
add
push
or
add
push
mov
push
sub
mov
movzwl
and
mov
mov
call
lea
sub
add
imul
add
sub
jmp
push
mov
push
mov
inc
inc
je
sub
dec
add
mov
sub
lea
mov
sub
add
mov
sub
sub
lea
mov
cmp
jne
imul
add
imul
xor
add
add
mov
mov
add
lea
jmp
sub
push
movsbl
add
mov
mov
test
je
sub
add
xor
mov
mov
add
add
add
repnz
sub
mov
pop
or
jmp
sub
pop
inc
add
mov
sub
dec
movb
add
add
inc
sub
lea
dec
jne
sub
pop
add
pop
pop
jmp
push
mov
push
add
mov
mov
test
je
mov
mov
xor
mov
add
add
push
add
lea
movsbl
add
inc
mov
add
add
dec
je
lea
inc
dec
dec
pop
or
mov
inc
jmp
pop
add
pop
pop
ret
ret
add
jmp
ret
or
add
mov
add
sub
sub
mov
mov
sub
add
xor
add
mov
sub
xor
sub
mov
lea
add
movswl
dec
add
mov
sub
inc
or
mov
mov
add
add
inc
mov
lea
push
and
movzbl
push
sub
mov
mov
movzwl
call
sub
add
sub
mov
cmp
jne
mov
sub
imul
movzbl
sub
lea
add
xor
sub
mov
mov
add
dec
movsbl
sub
mov
add
add
xor
mov
mov
movzbl
sub
or
mov
lea
sub
add
sub
add
mov
add
or
dec
sub
pop
ret
push
mov
xor
sub
movzbl
mov
dec
add
push
mov
add
add
xor
dec
sub
add
push
push
mov
push
add
push
sub
sub
sub
lea
or
call
xor
add
add
push
mov
mov
sub
and
xor
sub
lea
mov
mov
mov
push
add
movswl
add
sub
lea
add
dec
sub
add
mov
pop
add
sub
mov
imul
test
je
add
mov
mov
mov
movswl
push
inc
sub
push
sub
push
mov
push
sub
jmp
add
inc
push
xor
sub
incl
lea
pop
sub
add
dec
sub
push
add
add
and
inc
sub
mov
movzbl
add
sub
add
add
sub
and
lea
mov
sub
inc
mov
add
mov
mov
mov
pop
sub
add
dec
inc
sub
mov
mov
nop
jne
inc
mov
dec
add
sub
mov
imul
movswl
add
mov
add
mov
sub
sub
movswl
sub
mov
mov
test
jbe
sub
dec
imul
add
mov
lea
xor
push
imul
dec
mov
mov
push
xor
xor
add
add
pop
add
mov
xor
or
add
mov
sub
sub
movzbl
lea
add
add
movsbl
and
add
sub
mov
mov
movzbl
dec
mov
and
add
mov
sub
movzbl
mov
add
sub
and
sub
add
movzbl
mov
mov
xor
inc
inc
inc
sub
add
pop
mov
movzwl
sub
add
add
dec
jne
mov
mov
movsbl
add
add
pop
sub
lea
pop
xor
add
pop
sub
inc
jmp
push
push
push
call
pop
pop
jmp
push
push
jmp
sub
push
dec
add
mov
and
call
add
movzwl
add
mov
pop
dec
pop
imul
xor
add
add
mov
add
jmp
add
pop
add
pop
jmp
push
dec
xor
sub
mov
movl
add
add
push
add
push
sub
mov
push
add
push
add
push
call
movzbl
pop
sub
mov
pop
add
pop
jmp
sub
add
mov
inc
mov
mov
mov
mov
dec
inc
mov
add
add
xor
mov
push
add
dec
push
sub
mov
mov
lea
inc
add
dec
pop
sub
mov
pop
mov
cmp
jne
sub
push
sub
mov
add
mov
push
mov
push
add
movzbl
xor
inc
mov
xor
mov
xor
dec
push
xor
inc
xor
add
mov
mov
dec
mov
dec
sub
movzbl
mov
mov
add
add
add
xor
movzbl
inc
add
mov
inc
add
sub
inc
mov
mov
mov
and
add
cmp
jb
add
xor
mov
inc
mov
mov
add
sub
dec
sub
inc
sub
inc
add
add
mov
sub
sub
dec
lea
mov
dec
add
cmp
jb
dec
xor
sub
mov
sub
add
movzwl
sub
mov
add
xor
sub
xor
xor
sub
mov
pop
movzwl
sub
test
jbe
sub
sub
jmp
pushf
daa
add
fsubl
add
add
add
mov
add
add
add
add
daa
add
sbb
add
shlb
add
daa
add
and
add
enter
add
add
sub
add
aam
add
or
adc
add
xor
push
mov
pop
sbb
dec
ret
int3
or
jns
mov
adc
adc
cmp
cmp
data16
and
addb
adc
cmp
cmp
adc
mov
mov
inc
addb
adc
cmp
cmp
xchg
hlt
daa
inc
dec
add
inc
mov
sub
push
sbb
popf
sub
ljmp
addb
adc
cmp
cmp
push
das
in
rcl
mov
dec
imul
adc
adc
cmp
cmp
mov
sub
push
addr16
mov
les
mov
addb
adc
cmp
cmp
mov
ljmp
adcb
adc
cmp
cmp
mov
mov
out
addb
adc
cmp
cmp
int3
and
sbb
pop
pop
mov
or
mov
mov
dec
jl
pop
pop
mov
push
aam
shlb
fcoml
xchg
out
fdivr
xlat
popf
pop
popa
in
lret
xor
int
pop
jecxz
mov
aad
sbb
repnz
icebp
dec
mov
jae
addb
cmp
cmp
mov
push
cli
dec
negb
loop
das
adc
pop
push
sahf
pop
out
xchg
mov
sahf
pop
andb
pop
jne
cmp
xchg
sbb
adc
adc
cmp
cmp
mov
movsl
jmp
and
dec
jl
xor
pop
mov
daa
repnz
addb
adc
cmp
cmp
jno
stos
out
scas
push
or
mov
sbb
out
daa
jl
addb
adc
cmp
cmp
inc
jae
subb
lret
add
add
mov
aad
ljmp
push
xor
adc
xor
enter
jbe
or
pop
sub
xchg
xlat
scas
mov
pop
cmp
sbb
adcb
adc
cmp
cmp
mov
shl
inc
std
in
int
es
jl
sub
mov
addb
cmp
cmp
cltd
cli
cwtl
icebp
cmp
add
lock
adc
adc
cmp
cmp
mov
add
xor
add
adc
aaa
sbb
addb
cmp
cmp
mov
adc
in
arpl
and
push
and
mov
xchg
cmpsl
rcrb
lods
loop
add
and
addb
cmp
cmp
mov
cwtl
aaa
dec
lea
movsl
lret
xor
in
cmp
lods
cmp
in
dec
addb
adc
cmp
cmp
push
out
and
push
xor
mov
hlt
test
addb
adc
cmp
cmp
jne
subl
dec
js
movsb
scas
inc
lret
adcb
inc
pminub
stc
pop
addb
adc
cmp
cmp
push
movb
push
adc
jne
fs
mov
sub
mov
pop
mov
pop
dec
repnz
test
test
loope
xorl
jb
fnstsw
sub
mov
sub
adc
adc
cmp
cmp
mov
in
push
sub
mov
rol
lahf
cmpb
addb
adc
cmp
cmp
out
pop
insb
movsb
imul
lds
add
dec
bound
jg
addb
cmp
cmp
mov
test
mov
xchg
int
loop
addb
adc
cmp
cmp
and
cli
lock
addl
cld
add
mov
xchg
sti
int
add
jns
hlt
adc
adc
mov
and
addb
cmp
cmp
bound
fldcw
fidivrs
jg
jae
jo
movsb
mov
adcb
adc
cmp
cmp
mov
mov
cwtl
pop
call
je
push
cmp
xchg
lea
mov
mov
adc
or
push
ret
cmp
loopne
sub
lods
imul
adc
cmp
cmp
mov
mov
dec
imul
mov
mov
adc
cmc
icebp
mov
and
xor
push
data16
shrb
addb
cmp
cmp
pushf
movsl
push
sub
or
in
pop
push
sub
inc
mov
adcb
adc
cmp
cmp
mov
xor
addb
adc
cmp
cmp
stos
mov
lods
sub
push
leave
adc
addb
cmp
cmp
mov
aas
cli
test
addb
adc
cmp
cmp
cs
xchg
adc
clc
outsb
mov
filds
test
out
jl
xchg
fisttpll
adc
adc
cmp
cmp
mov
adc
scas
arpl
mov
cs
es
sti
ss
xchg
push
addb
adc
cmp
cmp
xor
repnz
inc
inc
es
fidivs
idiv
cld
inc
repz
jp
add
adc
adc
cmp
cmp
mov
cmp
ret
movsl
and
stc
jne
movsl
loopne
push
aaa
push
jl
dec
lret
sub
call
sub
jb
addb
adc
cmp
cmp
in
hlt
xorl
fistps
jb
xchg
scas
fildl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
test
arpl
sahf
jae
fdivrs
addb
cmp
cmp
mov
movsl
fwait
daa
xor
ror
les
ss
int3
sub
inc
or
icebp
aaa
popf
jo
cld
addb
adc
cmp
cmp
rorl
sub
or
adc
jmp
nop
lahf
push
fwait
sbb
lcall
addb
adc
cmp
cmp
bound
dec
mov
xchg
mov
push
mov
stc
movsb
mov
mov
mov
lcall
aas
mov
addb
cmp
cmp
mov
outsl
in
repz
mov
ret
xor
pop
dec
daa
adc
jb
addb
adc
cmp
cmp
adc
add
addr16
ret
outsb
cs
jp
les
scas
addl
xchg
lds
addb
cmp
cmp
pop
mov
adc
adc
cmp
cmp
mov
cld
push
outsb
push
sbb
mov
mov
addr16
out
jecxz
jecxz
addb
adc
cmp
cmp
cld
xchg
test
pop
out
jo
pop
jnp
addb
cmp
cmp
mov
pop
outsb
stos
lds
xchg
addb
cmp
cmp
mov
cmp
popf
jmp
in
outsb
ljmp
sahf
sub
gs
pop
mov
sub
js
mov
mov
int
aam
push
rolb
adc
cmp
cmp
mov
in
rcrl
cld
or
popa
loopne
xor
cltd
sti
and
push
sbb
incl
sbb
addb
adc
cmp
cmp
sahf
xchg
iret
test
add
cmp
pop
aas
pusha
pop
xchg
dec
push
push
in
loope
jnp
jnp
or
and
push
and
jne
or
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
mov
xchg
push
jecxz
out
stos
jnp
xlat
les
cmp
add
addb
cmp
cmp
mov
push
push
lds
pop
fdivrs
xchg
mov
lds
hlt
adc
test
pushf
dec
sti
test
inc
mov
pop
sbb
movlps
scas
dec
fldl
adc
adc
cmp
cmp
or
lret
popa
mov
inc
inc
data16
daa
pop
xor
push
sbb
mov
push
addb
adc
cmp
cmp
add
call
insb
addb
adc
cmp
cmp
ja
addb
cmp
cmp
mov
jl
or
dec
loopne,pt
mov
pop
mov
dec
aas
test
adcb
adc
cmp
cmp
mov
pop
sbb
adc
adc
cmp
cmp
cs
mov
mov
jp
cmp
adc
adc
cmp
cmp
sbb
loope
sub
icebp
movsb
mov
dec
mov
inc
mov
addb
cmp
cmp
mov
insb
mov
out
push
arpl
lret
cltd
cld
mov
add
stc
push
push
fldl
inc
pop
enter
adcb
adc
cmp
cmp
mov
pusha
xchg
js
xchg
sbb
mov
popw
js
dec
mov
roll
addb
adc
cmp
cmp
push
jle
pop
movsb
aad
xchg
shr
bound
mov
addb
cmp
cmp
aam
icebp
lret
add
leave
aad
mov
pop
mov
or
pop
mov
or
fcmovbe
jge
adc
mov
das
mov
xchg
mov
sarl
xor
adc
out
add
adc
adc
cmp
cmp
and
divl
mov
xchg
sbb
test
fstpt
mov
sahf
in
or
icebp
les
jl
andb
mov
out
sbb
jns
test
push
xchg
iret
mov
sbb
sbb
les
rclb
in
addb
adc
cmp
cmp
push
push
insb
outsb
ret
inc
lock
jae
dec
insb
fcmovb
insl
sub
mov
lret
add
popf
test
pop
dec
inc
sub
aam
sbb
into
ss
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
sub
push
push
in
xchg
xchg
push
mov
pop
push
sbb
dec
cmp
addr16
jo
mov
xor
mov
jge
sub
mov
mov
adcb
adc
cmp
cmp
mov
or
in
add
outsb
roll
addb
adc
cmp
cmp
or
clc
movb
pop
push
sbb
jp
lret
movb
adc
cmp
cmp
mov
movsl
out
sub
cli
insb
pop
cmp
addb
cmp
cmp
mov
push
xor
dec
not
scas
stos
loop
lret
push
test
sahf
into
dec
cmpsb
clc
cwtl
cmp
mov
add
sub
addb
adc
cmp
cmp
aaa
xor
pop
push
inc
mov
adc
inc
imul
inc
adc
mov
ja
and
insb
push
les
push
push
mov
pop
nop
popa
ljmp
in
dec
jnp
cmp
mov
push
clc
addb
adc
cmp
cmp
adc
addb
adc
cmp
cmp
pop
dec
cmpsb
xor
mov
addb
cmp
cmp
mov
lock
test
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
xorl
addb
cmp
cmp
mov
cmp
testb
mov
js
or
xchg
mov
pop
pop
arpl
mov
addb
adc
cmp
cmp
iret
jnp
stc
addb
adc
cmp
cmp
sahf
push
andl
xchg
adc
xchg
clc
loopne
int
and
test
jbe
mov
pop
jo
cmp
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
pusha
xchg
mov
xchg
push
and
incl
xor
adc
adc
cmp
cmp
mov
mov
sahf
sbb
jmp
pop
xlat
cmp
adc
cwtl
ljmp
out
mov
daa
into
mov
sbb
loope
fisubl
addb
cmp
cmp
mov
imul
ret
addb
cmp
cmp
pop
mov
cltd
fcoml
mov
cwtl
push
push
testb
pop
mov
and
sub
push
lods
push
cmp
lock
lret
movd
ds
mov
sub
bswap
cltd
and
lahf
adc
dec
mov
mov
lea
inc
cltd
std
fdivrs
clc
add
jo
imul
lds
adc
fmull
mov
adcb
adc
cmp
cmp
mov
je
enter
das
push
scas
cmc
sbb
push
lds
in
xchg
push
les
mov
inc
dec
sbb
inc
mull
addb
adc
cmp
cmp
jecxz
fbld
jne
mov
loope
int
xor
mov
sbb
sub
ret
hlt
mov
mov
inc
mov
sbb
addb
cmp
cmp
mov
out
in
addr16
push
jp
mov
int
add
mov
and
push
or
addb
adc
cmp
cmp
addr16
ljmp
and
mov
add
xor
add
cmp
rcll
dec
sbb
push
ret
and
adc
sbb
pop
loop
adc
dec
push
popa
jmp
or
into
mov
es
scas
aas
fiadds
adc
adc
cmp
cmp
mov
insl
add
cld
lea
dec
cltd
jge
push
btr
mov
mov
inc
addb
adc
cmp
cmp
mov
inc
jle
addb
cmp
cmp
mov
xor
pop
or
stc
je
xor
das
add
out
imul
sahf
out
addb
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
inc
jno
hlt
adc
mov
addb
pop
mov
je
inc
addb
adc
cmp
cmp
div
js
xchg
cmp
mov
addb
adc
cmp
cmp
out
dec
cmp
mov
div
jge
addb
cmp
cmp
mov
jecxz
lock
hlt
cmp
adcb
adc
cmp
cmp
mov
xchg
popf
iret
jne
mov
fisttpll
or
movsb
xor
fsts
movb
adc
cmp
cmp
mov
sahf
sbb
aaa
test
sub
popa
js
in
pop
mov
sbb
inc
mov
clc
adc
dec
faddl
and
add
adc
adc
cmp
cmp
push
int
sub
push
insl
gs
addb
adc
cmp
cmp
push
fxam
inc
int
hlt
int3
stc
fsubrl
jnp
jns
ljmp
adc
adc
cmp
cmp
mov
mov
add
sets
mov
shrl
sbb
mov
ds
shlb
jg
lret
mov
loopne
stos
addb
adc
cmp
cmp
pop
add
xchg
inc
push
aaa
addb
adc
cmp
cmp
xchg
incl
adcb
adc
cmp
cmp
mov
aam
outsb
lods
add
add
cmp
fcmovbe
sub
xchg
loope
cmpsl
rcll
addb
cmp
cmp
mov
cmpsl
or
push
cli
dec
jge
and
adc
adc
cmp
cmp
mov
xchg
mov
add
loopne
repz
adc
adc
cmp
cmp
stos
jns
addb
cmp
cmp
mov
inc
cmp
ja
jns
pop
iret
lret
jno
and
addb
adc
cmp
cmp
test
or
push
fwait
jg
push
sub
dec
adc
ret
addb
adc
cmp
cmp
cltd
mov
dec
xor
in
or
imul
cs
mov
testb
adc
lret
arpl
pop
add
addb
cmp
cmp
mov
cmp
sub
inc
es
imul
xor
push
dec
imull
jp
pop
xchg
xor
mov
lret
mov
movsl
xlat
fsubr
arpl
addb
cmp
cmp
aaa
ja
xor
in
and
iret
ss
cmp
mov
daa
jb
mov
xor
test
add
pop
sbb
fidivrs
addb
adc
cmp
cmp
inc
cmp
or
aas
xorb
jb
sbb
mov
test
ret
cmp
lcall
xchg
addb
adc
cmp
cmp
dec
ja
cwtl
pop
dec
enter
call
lods
mov
push
addb
adc
cmp
cmp
sti
xor
addb
cmp
cmp
mov
addb
adc
cmp
cmp
stos
inc
insb
in
dec
fs
push
sbb
out
cwtl
sbb
movsl
inc
ja
xchg
adc
imul
out
push
scas
pusha
cwtl
jne
push
inc
and
add
pop
arpl
and
cmp
mov
mov
jp
fistps
addb
cmp
cmp
mov
int
add
and
mov
pop
mov
cld
mov
adcb
adc
cmp
cmp
mov
cmc
orb
call
mov
pop
xchg
lods
cmpsb
nop
xor
mov
adc
dec
sti
out
xchg
and
sahf
or
outsl
sub
ja
inc
cmc
adc
addb
cmp
cmp
repz
adc
cmp
cmp
aaa
test
fildl
adc
adc
cmp
cmp
mov
addb
cmp
cmp
mov
fsubl
mov
icebp
push
mov
sbb
imul
addb
cmp
cmp
mov
enter
icebp
lods
adc
frstor
pop
loop
adc
jecxz
adc
insb
mov
push
arpl
fcoml
and
xor
fildl
adc
adc
cmp
cmp
push
idivb
adc
fdivrl
sub
mov
jne
mov
push
cmp
jl
addr16
int3
subl
xlat
pusha
dec
lock
dec
dec
outsl
dec
lea
cmpsb
mov
jge
mov
fs
pop
fidivl
mov
leave
inc
in
mov
addb
cmp
cmp
mov
in
daa
and
xchg
insl
pop
out
cmpsb
sub
mov
and
popa
sbb
push
jle
or
dec
push
xor
js
ret
sbb
adcb
adc
cmp
cmp
mov
div
fistl
cmpsl
xchg
push
push
jle
mov
repnz
push
movsb
flds
cmp
sahf
add
dec
out
xchg
push
negb
cmpl
mov
test
test
addb
cmp
cmp
loop
mov
or
sub
sbb
out
mov
aaa
sbb
addb
cmp
cmp
mov
push
pop
fisubl
imul
adc
cmp
cmp
mov
shll
sub
addb
adc
cmp
cmp
sub
xchg
push
cmp
imul
mov
add
xlat
in
xchg
mov
xchg
and
mov
imul
jne
cmp
push
pop
aas
xor
inc
jae
push
test
push
scas
and
fldl
adc
adc
cmp
cmp
pop
fstps
in
push
mov
addb
adc
cmp
cmp
mov
push
lods
lcall
in
pop
lahf
addb
adc
cmp
cmp
dec
lods
mov
leave
push
add
cmp
addb
adc
cmp
cmp
ljmp
and
add
aas
jmp
ds
sub
gs
inc
je
lcall
adc
adc
cmp
cmp
mov
loope
sahf
pop
xor
adcb
adc
cmp
cmp
mov
dec
add
sar
inc
lods
or
in
leave
xlat
inc
mov
je
push
push
cmp
add
adc
adc
cmp
cmp
add
insl
addb
adc
cmp
cmp
sub
xor
sbb
jne
mov
xchg
mov
inc
lret
pop
adc
adc
adc
cmp
cmp
mov
jmp
into
lea
les
jne,pn
aas
or
push
fst
movsl
pop
or
xchg
push
fisubs
adc
fisubrl
insb
popf
addb
adc
cmp
cmp
lcall
ljmp
adc
adc
cmp
cmp
push
mov
addb
adc
cmp
cmp
pop
mov
addb
cmp
cmp
mov
cmp
jp
cmp
adc
adc
cmp
cmp
jp
clc
adc
cmpsl
dec
sub
addb
adc
cmp
cmp
dec
pop
mov
insl
sbb
addb
cmp
cmp
jno
iret
bound
jbe
leave
scas
pushf
pop
flds
adc
adc
cmp
cmp
popf
xchg
addb
adc
cmp
cmp
mov
test
pop
push
testl
inc
sub
xor
cltd
addb
adc
cmp
cmp
das
pusha
cmp
mov
sti
xor
and
addb
cmp
cmp
mov
incl
fnstcw
mov
mov
adc
adc
cmp
cmp
mov
fisubl
sbb
cmc
lahf
addb
adc
cmp
cmp
pop
sbb
data16
lods
addb
adc
cmp
cmp
test
jns
out
sti
addb
adc
cmp
cmp
sbb
jns
addb
cmp
cmp
mov
sub
in
out
mov
jle
cmp
mov
addb
adc
cmp
cmp
cwtl
mov
inc
lcall
addb
cmp
cmp
mov
cmp
outsb
jns
jge
mov
mov
pop
cmp
dec
les
add
xor
mov
ljmp
adc
cmp
cmp
mov
call
xchg
mov
and
ds
movsl
lock
and
ljmp
sub
mov
xchg
in
outsl
jns
in
ret
ja
sbb
sub
xchg
pop
aam
lcall
cmp
adc
adc
cmp
cmp
mov
cmpsl
mov
or
adc
fisttpll
bnd
jo
out
cmp
fnstenv
add
push
sbb
push
std
out
imul
jmp
dec
xor
add
cltd
out
mov
lock
mov
mov
addb
adc
cmp
cmp
lea
std
movsl
dec
inc
addb
adc
cmp
cmp
cltd
out
addb
adc
cmp
cmp
push
mov
shl
stos
mov
subb
mov
xor
push
scas
dec
mov
inc
addb
adc
cmp
cmp
xor
int3
jnp
gs
add
pop
fldenv
fmuls
add
arpl
ljmp
loop
push
cld
mov
mov
adc
into
aas
jbe,pt
dec
dec
pop
addb
adc
cmp
cmp
inc
xor
jns
lcall
cs
out
addb
adc
adc
cmp
cmp
push
aas
adc
popf
movsb
iret
or
xor
adcb
adc
cmp
cmp
mov
into
dec
pop
dec
fsubs
cmp
push
jl
cwtl
leave
sti
push
imul
cltd
jmp
pop
mov
iret
or
addb
adc
cmp
cmp
insb
mov
addb
cmp
cmp
mov
sub
rorl
addb
adc
cmp
cmp
stc
mov
jae
es
adc
xor
sbb
addb
adc
cmp
cmp
outsb
add
popa
push
mull
lods
mov
ss
clc
rcl
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
dec
mov
mov
inc
ljmp
mov
push
xor
pop
add
aas
mulb
mov
outsb
xchg
xor
cmpsb
pop
fsubl
adcb
adc
cmp
cmp
mov
xchg
pop
test
inc
or
jg
addb
adc
cmp
cmp
in
and
pop
jne
mov
std
into
stc
lea
mov
mov
xchg
inc
inc
adc
aad
cltd
addb
adc
cmp
cmp
inc
mov
sbb
popf
and
addb
adc
cmp
cmp
int3
lret
stos
out
jecxz
inc
mov
or
jmp
inc
xchg
add
addb
cmp
cmp
mov
lahf
outsl
xlat
mov
dec
addb
adc
cmp
cmp
out
xchg
pop
pop
push
sub
repz
iret
mov
repnz
xor
sub
xor
mov
inc
dec
pop
outsl
repnz
cmp
ljmp
add
addb
adc
cmp
cmp
sub
and
in
inc
sahf
sub
mov
addb
adc
cmp
cmp
cmp
mov
addb
cmp
cmp
mov
hlt
fstp
pop
jmp
addb
adc
cmp
cmp
in
stc
out
add
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
hlt
popa
mov
addb
cmp
cmp
mov
pop
mov
mov
mov
inc
pop
shlb
imul
inc
daa
mov
inc
add
pusha
jmp
mov
imul
pop
jp
sub
add
data16
adc
call
sub
jns
inc
repz
enter
adcb
adc
cmp
cmp
mov
stos
pop
xor
cmp
push
addb
adc
cmp
cmp
sbb
push
or
cmp
adc
adc
cmp
cmp
push
adcb
adc
cmp
cmp
mov
cmp
sub
push
sub
xchg
xor
sarl
filds
adc
adc
cmp
cmp
shlb
in
mov
cwtl
movsbl
sahf
ror
jae
lods
jne
test
into
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sbb
std
mov
ja
jg
xchg
je
cmpsl
dec
addb
adc
cmp
cmp
int3
lret
fucomi
dec
mov
push
push
filds
scas
scas
jle
inc
adc
or
pop
clc
in
push
pop
adc
cmp
cmpsb
nop
jno
xchg
dec
sbb
testl
addb
adc
cmp
cmp
xorl
adc
adc
cmp
cmp
mov
inc
adc
sbb
popa
mov
or
addb
adc
cmp
cmp
test
fxam
lock
out
enter
push
cli
dec
xor
inc
addr16
fsubr
jle
dec
inc
dec
sub
into
inc
outsb
daa
aas
sub
ljmp
addb
cmp
cmp
mov
aas
ror
add
addb
cmp
cmp
mov
ret
ss
std
dec
or
test
repz
inc
xchg
sarb
push
push
fsubp
dec
mov
xor
enter
sub
jecxz
inc
scas
mov
notl
dec
dec
lods
adc
xor
jbe
mov
mov
addb
adc
cmp
cmp
jnp
fcmovb
pushf
adc
outsb
rcll
lea
popa
es
pushw
test
gs
arpl
addb
adc
cmp
cmp
outsb
fdivl
sub
repnz
incb
dec
mov
and
sbb
adc
adc
cmp
cmp
int3
cmp
sub
inc
add
je
pop
sbb
mov
adc
adc
cmp
cmp
cltd
jns
ficomps
clc
pop
jmp
gs
push
pop
sub
mov
out
jo
push
dec
ret
addb
cmp
cmp
mov
insl
jne
jno
leave
scas
add
test
sbb
cmc
cmp
pop
mov
loopne
sub
out
addb
adc
cmp
cmp
mov
and
dec
xlat
or
push
jne
xchg
popf
sarl
xor
lods
mov
xor
adc
fiadds
dec
sub
jnp
movsb
in
inc
pusha
stc
mov
jmp
push
sub
add
addb
adc
cmp
cmp
mov
mov
outsl
mov
sbb
sub
addb
adc
cmp
cmp
xchg
adc
adc
cmp
cmp
mov
adc
cs
sbb
add
daa
scas
pop
lea
je
or
xorb
add
pop
lds
pop
sub
addb
adc
cmp
cmp
int3
jp
mov
mov
fwait
push
dec
icebp
xchg
or
push
sub
lods
addb
adc
cmp
cmp
push
cmp
xchg
call
out
xchg
stos
sub
adc
adc
cmp
cmp
subl
addb
adc
cmp
cmp
dec
mov
repz
out
lret
call
daa
mov
loop
sub
call
sbb
fwait
jecxz
jae
sbb
adcb
adc
cmp
cmp
mov
xchg
or
push
addb
adc
cmp
cmp
sbb
lds
inc
cmp
and
subb
addb
cmp
cmp
fiaddl
xor
or
stos
sbb
mov
addb
cmp
cmp
mov
sbb
xchg
out
or
xchg
out
push
movsl
jge
inc
inc
push
rcrl
add
int3
adcl
ret
jne
leave
sbb
sbb
mov
adc
adc
cmp
cmp
ret
icebp
dec
arpl
addb
cmp
cmp
mov
adc
negl
addb
cmp
cmp
mov
lret
mov
adc
aas
dec
scas
hlt
fiaddl
ss
fiadds
adc
adc
cmp
cmp
dec
repz
dec
mov
inc
es
jle
add
out
dec
int
movsb
push
push
addb
adc
cmp
cmp
inc
jne
sub
mov
and
jecxz
mov
xchg
inc
push
push
les
faddl
pop
aas
mov
stos
or
dec
daa
iret
fsubl
sbb
push
sub
test
adc
xchg
stos
adc
adcl
pop
dec
jecxz
ret
push
test
arpl
jmp
xchg
jecxz
or
adc
adc
cmp
cmp
imul
daa
imul
adc
adc
cmp
cmp
mov
xor
inc
xchg
arpl
cmpsl
cmp
inc
inc
mov
int3
sbb
xchg
cmp
dec
adc
sub
pop
rolb
jo
push
and
xor
add
loopne,pt
pushf
in
addb
adc
cmp
cmp
sahf
and
jl
shrl
add
popa
les
dec
pop
cld
and
push
notl
inc
in
addb
adc
cmp
cmp
xor
mov
or
adc
xchg
loop
out
inc
fisttpl
push
cmc
addb
adc
cmp
cmp
xchg
das
dec
adc
adc
jns
bound
addb
cmp
cmp
in
outsl
loop
outsl
mov
adcb
adc
cmp
cmp
mov
imul
addl
xchg
outsb
adc
inc
sti
pop
add
dec
int3
testl
cmp
cmp
xor
fsts
xchg
sub
mull
out
mov
lods
cmp
cmp
jg
aas
cmp
jp
addb
cmp
cmp
mov
jp
lahf
pop
dec
xor
xor
adc
adc
cmp
cmp
mov
cwtl
jmp
ja
jo
scas
sbb
test
push
xor
aam
mov
test
fs
insl
in
jbe
daa
mov
scas
or
cmp
adc
adc
cmp
cmp
mov
shl
lahf
mov
repz
lahf
out
aad
std
das
ret
popa
push
xchg
inc
dec
int3
add
addb
adc
cmp
cmp
push
mov
cli
pop
leave
insb
ljmp
lcall
jecxz
push
inc
out
xor
mov
int
test
cmpsl
out
sbb
sub
dec
repz
lcall
enter
jns
sub
into
ret
addb
adc
cmp
cmp
jl
xchg
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
pushf
das
push
bound
fdivrl
outsb
push
mov
push
adcb
adc
cmp
cmp
mov
popa
mov
adc
addb
cmp
cmp
mov
addb
cmp
cmp
jns
ret
xorb
stc
call
adc
dec
addb
adc
cmp
cmp
je
jge
movsl
mov
dec
fadds
sub
jno
jmp
mov
in
add
addb
adc
cmp
cmp
mov
jo
jo
mov
data16
cs
hlt
xchg
xor
dec
aam
ja
fcompl
and
insb
movsb
and
addb
adc
cmp
cmp
xor
nop
mov
addb
cmp
cmp
mov
lock
dec
xchg
mov
addb
adc
cmp
cmp
fsubr
fstp
addb
adc
cmp
cmp
mov
jp
fistpll
jl,pn
iret
orb
dec
test
dec
jp
lods
inc
aad
in
add
sti
jns
in
addb
cmp
cmp
mov
int3
mov
xor
cmpsb
xchg
dec
dec
cmpb
hlt
rcrb
loope
pop
lock
lods
mov
addb
adc
cmp
cmp
out
sbb
je
in
mov
pop
popf
mov
loop
shll
pushf
aaa
inc
add
ss
jnp
xchg
out
addb
adc
cmp
cmp
inc
mov
xchg
hlt
mov
addb
cmp
cmp
dec
and
push
popa
leave
sbb
mov
jne
loope
mov
mov
or
roll
sub
push
lea
sysenter
in
xchg
out
adc
xor
jno
mov
adc
pop
pusha
inc
sub
ret
addb
cmp
cmp
mov
addb
adc
cmp
cmp
shll
imul
vmread
arpl
cmp
fsubr
in
int3
adc
inc
mov
adcb
adc
cmp
cmp
mov
enter
addr16
pop
xchg
or
pop
lock
sti
addl
cmp
cmp
hlt
addb
adc
cmp
cmp
mov
sbb
add
add
addb
adc
cmp
cmp
push
or
fstps
addr16
jmp
lods
stos
sub
addb
adc
cmp
cmp
dec
push
push
push
cld
and
inc
imulb
xchg
sub
andb
inc
cmpsl
stc
sarb
pop
xchg
jp
ljmp
adcb
adc
cmp
cmp
mov
leave
xchg
cmp
push
test
lret
pop
aaa
cwtl
inc
pusha
mov
jmp
cmp
push
mov
addb
cmp
cmp
mov
xchg
xchg
add
or
pop
cmpsb
stc
test
popa
test
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
shl
mov
jecxz
inc
or
dec
xorb
mov
cmp
addb
cmp
cmp
fsub
mov
adc
mov
cwtl
loopne
xlat
pop
pop
addb
adc
cmp
cmp
leave
addb
adc
cmp
cmp
loop
decb
mov
add
addb
adc
cmp
cmp
addb
adc
cmp
cmp
test
movsl
push
mov
rol
addb
cmp
cmp
mov
addb
adc
cmp
cmp
push
repz
adc
cmp
cmp
jnp
pushf
outsl
jle
outsl
push
jb
out
add
mov
pop
addl
adc
adc
cmp
cmp
mov
fidivrs
stos
and
clc
push
pop
mov
scas
aaa
jno
or
addb
cmp
cmp
mov
out
iret
ljmp
push
addb
adc
cmp
cmp
mov
pop
data16
xchg
xchg
stos
jp
mov
in
mov
stos
cmpb
adc
cmp
cmp
mov
sbb
popa
push
notl
es
add
imul
add
mov
cmp
push
addr16
hlt
jno
push
or
lods
sbb
push
push
in
dec
outsl
rcll
push
inc
lods
aaa
lock
pushf
js
shll
xor
cmp
dec
pop
push
popf
jg
add
loope
cli
dec
dec
add
addb
adc
cmp
cmp
outsl
xor
mov
pop
jle
jnp
jle
push
sub
outsb
lahf
dec
cmp
fisttpl
jne
stos
int3
addb
adc
cmp
cmp
rol
dec
cmp
clc
xor
nop
pop
and
addb
adc
cmp
cmp
xchg
clc
aad
jmp
test
add
dec
pop
mov
fwait
pop
pop
stos
stc
cltd
mov
adc
adc
cmp
cmp
stos
in
les
push
cmpsb
xor
adc
adc
cmp
cmp
mov
push
mov
repnz
test
gs
repz
inc
movsb
and
mov
pop
ja
repz
xchg
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
or
jp
shrb
sub
adc
fadd
mov
jmp
popf
addb
adc
cmp
cmp
lahf
addb
adc
cmp
cmp
lods
pop
pop
shlb
ror
test
cmp
enter
addb
adc
cmp
cmp
fists
mov
scas
dec
adc
lock
adc
cmp
cmp
in
ret
cmp
and
pop
pop
insb
in
orb
xor
icebp
and
inc
push
loope
dec
mov
ljmp
shl
nop
push
imul
scas
xor
adcb
adc
cmp
cmp
mov
and
pop
xor
mov
sbb
cs
stc
out
test
mov
mov
addb
cmp
cmp
mov
sub
addb
adc
cmp
cmp
sbb
cs
jg
lock
or
loope
and
addb
adc
cmp
cmp
mov
and
sub
inc
sub
xchg
je
cmc
popa
subl
mov
in
inc
js
jge
mov
cmpsb
imul
adc
mov
data16
mov
in
outsb
mov
fdivs
mov
fsubrs
or
sub
sbb
add
inc
ret
and
scas
cmp
sti
and
xchg
lods
push
out
add
ja
push
cwtl
xor
dec
popa
pop
cmp
sub
addb
cmp
cmp
jb
std
arpl
add
aaa
push
mov
pusha
cmp
addb
adc
cmp
cmp
adc
push
pop
addl
addb
cmp
cmp
inc
out
mov
jl
addb
cmp
cmp
mov
imul
add
push
mov
imul
mov
bound
gs
insb
pop
jb
mov
dec
loope
push
lock
aam
cmp
mov
loopne
jmp
dec
xchg
ret
cli
pop
aam
mov
imul
addb
cmp
cmp
mov
pusha
movb
movsb
addb
adc
cmp
cmp
cmp
adc
and
test
addb
cmp
cmp
mov
pop
lea
adc
adc
cmp
cmp
and
lock
xadd
adc
adc
cmp
cmp
add
ficomps
pop
loopne
shlb
push
call
addb
cmp
cmp
sbb
adc
fbstp
adc
lahf
pop
xchg
cmp
fimuls
adcb
adc
cmp
cmp
mov
adc
or
leave
pushf
shlb
addb
cmp
cmp
mov
xor
out
aam
insl
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sbb
int
dec
addb
adc
cmp
cmp
out
stos
clc
shrb
fistpll
pop
repnz
mov
loopne
out
cs
fcompl
adc
adc
cmp
cmp
mov
jmp
int3
mov
xor
subl
sbb
out
jecxz
or
sub
out
and
xchg
xchg
lahf
mov
icebp
addb
adc
cmp
cmp
sub
dec
popf
sbb
adc
adc
cmp
cmp
mov
lods
addb
adc
cmp
cmp
xor
adc
sub
inc
or
je
xor
stc
test
adc
adc
cmp
cmp
mov
cmpsl
std
hlt
xchg
lods
enter
adc
cmpsb
mov
adcb
adc
cmp
cmp
mov
push
adc
adcb
adc
cmp
cmp
mov
gs
in
dec
jno
pop
mov
cmp
divb
addb
adc
cmp
cmp
adc
mov
out
cmp
sarl
pop
fs
repnz
movsb
xchg
and
int3
and
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
repz
mov
push
mov
addb
cmp
cmp
addb
adc
cmp
cmp
pop
pop
sbb
dec
hlt
popa
int3
dec
and
fdivrl
sub
sbb
adc
adc
cmp
cmp
inc
pushf
mov
addb
adc
cmp
cmp
jns
pop
cmpsb
std
das
jge
add
sarl
dec
ret
pop
lock
mov
pop
xor
cli
js
jg
push
push
test
imul
pop
imul
loop
pop
inc
xor
sti
inc
int3
xor
daa
sahf
and
rcl
addb
cmp
cmp
mov
addb
adc
cmp
cmp
jecxz
jbe
mov
mov
jnp
or
cmp
mov
xor
sbb
pop
cld
jno
ret
lcall
mov
or
ja
cmp
jle
push
sbb
mov
addb
adc
cmp
cmp
cmpsl
or
stos
stc
cltd
ret
xchg
stos
and
adc
lods
lock
and
or
sub
adc
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
push
mov
dec
mov
outsl
popa
movsb
adc
mov
inc
lds
andb
dec
shll
cmp
push
lahf
pop
rcrb
mov
out
movsb
add
mov
fstps
xor
mov
jle
addb
cmp
cmp
mov
push
fwait
lahf
xchg
not
or
mov
imul
adc
adc
cmp
cmp
sub
stos
fdivrl
lods
test
pop
addb
adc
cmp
cmp
mulb
adc
push
es
mov
xchg
mov
jge
mov
test
push
or
icebp
addb
adc
cmp
cmp
fisubl
pop
movl
sti
or
mov
dec
add
jbe
jmp
mov
outsb
imull
aad
in
push
mov
addb
cmp
cmp
mov
stc
outsb
push
cmc
les
sub
addb
cmp
cmp
dec
popa
fildll
pop
jno
mov
repnz
ljmp
xchg
std
adcl
popf
test
rolb
mov
addb
adc
cmp
cmp
adc
push
lcall
and
xchg
push
xchg
push
movsb
in
inc
iret
and
mov
testb
xchg
push
int
jmp
jae
dec
sbb
push
cld
addb
adc
cmp
cmp
rorb
addb
adc
cmp
cmp
jecxz
outsb
pop
addb
adc
cmp
cmp
jge
adcl
jp
lds
addb
adc
cmp
cmp
fcompl
cli
pop
sbb
lcall
mov
data16
adc
cmp
cmp
movsl
cmpsl
or
lret
mov
addb
cmp
cmp
mov
add
fsubrl
lahf
dec
cmp
add
mov
mov
mov
sub
stc
mov
test
xchg
faddl
xlat
sbb
outsl
sahf
cmp
movsl
stc
sub
pop
cltd
test
addb
adc
cmp
cmp
adc
mov
and
mov
sub
in
addb
adc
cmp
cmp
sahf
out
dec
sub
pop
out
pop
repz
or
adc
insl
or
inc
cmp
push
inc
adc
lret
xchg
loop
scas
dec
jmp
jb
lahf
addr16
repnz
js
cmc
aas
ljmp
jmp
lods
and
mov
push
sub
or
add
es
addb
adc
cmp
cmp
mov
sbb
decb
mov
addb
cmp
cmp
mov
lahf
push
notl
repz
lock
mov
inc
mov
lock
and
out
enter
mov
fildll
mov
mov
push
xor
stos
sahf
inc
jle
mov
push
sbb
dec
lahf
enter
fldt
pop
adc
insb
sbb
inc
insl
sbbl
push
addb
cmp
cmp
aaa
adc
add
scas
dec
sbb
arpl
xchg
mov
movzbl
ret
enter
jecxz
mov
inc
icebp
addb
adc
cmp
cmp
mov
cli
cltd
add
js
popa
push
jle
sub
in
outsb
loope
push
add
popf
shrl
push
and
push
cltd
lret
adc
jp
inc
add
mov
out
jbe
sbb
testl
lods
lea
xlat
lds
and
ljmp
addr16
or
pusha
into
adcb
adc
adc
cmp
cmp
jecxz
cs
loop
sub
pop
and
rolb
xchg
mov
dec
fnstcw
popa
sub
adc
sub
addb
adc
cmp
cmp
es
mov
sub
cmp
push
mov
out
mov
adc
adc
cmp
cmp
addb
adc
cmp
cmp
push
sahf
push
mov
xor
test
xchg
cmp
pop
cmc
cmp
rol
dec
outsl
cmp
cltd
jae
int3
xchg
dec
xlat
jmp
loopne
xchg
mov
mov
addb
cmp
cmp
mov
mov
sti
call
sub
addb
cmp
cmp
mov
into
sbb
addb
adc
cmp
cmp
pop
daa
lock
iret
jbe
sub
addb
cmp
cmp
mov
lcall
jg
inc
jbe
mov
adcb
adc
cmp
cmp
mov
xor
mov
push
push
inc
repnz
leave
js
sub
cmp
imul
jge
push
ja
out
mov
mov
dec
add
add
sub
xor
add
sub
adc
adc
cmp
cmp
inc
mov
push
jmp
imul
addb
cmp
cmp
mov
xlat
adc
mov
or
push
lea
mov
lods
addb
adc
cmp
cmp
push
and
rcll
mov
adc
adc
cmp
cmp
mov
test
test
and
pop
push
add
add
das
dec
sbb
addb
adc
cmp
cmp
xor
jo
call
ficoml
push
popa
mov
cmp
fidivrl
out
jle
xor
pop
mov
xchg
leave
lods
loop
mov
adc
adc
cmp
cmp
mov
and
adc
adc
cmp
cmp
mov
sbb
inc
sbb
add
cmp
adcb
adc
cmp
cmp
mov
adc
adc
adc
cmp
cmp
addb
adc
cmp
cmp
pop
mov
test
push
xchg
adc
adc
cmp
cmp
incb
adc
adc
cmp
cmp
jne
out
mov
call
es
xor
xchg
stc
int3
enter
ret
cltd
aam
scas
mov
or
aaa
out
push
addb
adc
cmp
cmp
pusha
mov
mov
aam
in
cmp
jbe
repnz
mov
dec
popf
sub
in
push
cmp
ja
addb
adc
cmp
cmp
std
mov
pop
pushf
and
push
idiv
popa
lahf
push
push
sub
push
cli
pop
ljmp
repnz
in
mov
xlat
das
jae
into
leave
nop
xchg
outsb
repz
lret
xchg
cwtl
daa
cmp
rolb
cmp
subl
pop
imul
ljmp
mov
imul
push
cmc
sub
pushf
sbb
in
outsl
rorb
sub
jae
adc
cmp
arpl
ds
bnd
lods
jb
or
addb
cmp
cmp
mov
pop
fwait
cltd
push
mov
icebp
addb
adc
cmp
cmp
fsubs
addb
adc
cmp
cmp
and
pop
xor
test
and
aam
cmpsl
fsubrs
aas
out
mov
addb
adc
cmp
cmp
mov
dec
das
sar
in
loope
xor
ljmp
jg
push
and
cmpsb
imul
xor
sbb
fimull
in
mov
shrl
adc
addb
cmp
cmp
mov
dec
nop
in
sub
fcmovne
addb
adc
cmp
cmp
addb
adc
cmp
cmp
or
mov
das
dec
daa
ret
nop
xchg
lods
scas
or
loope
xchg
mov
addb
cmp
cmp
rorb
repnz
mov
adc
adc
cmp
cmp
mov
lret
adc
stos
clc
aaa
inc
jp
cmpb
or
in
or
lret
stos
jle
dec
push
hlt
xor
add
and
stos
das
jp
shlb
movsb
add
mov
push
mov
lock
xlat
in
mov
addb
cmp
cmp
pop
adc
les
adc
adc
cmp
cmp
into
nop
mov
add
arpl
addb
adc
cmp
cmp
inc
push
inc
fisubrl
sub
shrl
int3
jne
push
clc
stos
pop
cmp
scas
movsl
aad
ficoms
sahf
ss
mov
addb
cmp
cmp
xor
push
mov
cmp
mov
mov
lcall
nop
addb
adc
cmp
cmp
bnd
addb
adc
cmp
cmp
sbb
jg
mov
ja
aad
push
aaa
sbb
addb
cmp
cmp
mov
test
out
in
xchg
addb
adc
cmp
cmp
lods
sbb
es
ja
es
mov
addb
cmp
cmp
adc
addb
cmp
cmp
mov
mov
test
je
test
ljmp
fwait
sub
pushf
lret
fisttps
push
push
mov
lock
adc
inc
in
mov
push
cmpsl
gs
daa
mov
cmpsl
mov
fildll
xor
aad
sbb
sti
stos
clc
sub
jns
fildll
xor
sbb
aaa
sahf
sub
fwait
pop
lds
mov
adc
jecxz
or
hlt
mov
movsb
outsl
inc
rolb
adc
adc
cmp
cmp
das
mov
sub
inc
sbb
mov
adc
adc
cmp
cmp
mov
mov
fistl
sub
xchg
inc
sti
xchg
jecxz
or
out
testl
fldcw
push
xchg
jmp
xchg
pop
pushf
and
push
addb
adc
cmp
cmp
pop
xlat
icebp
out
loop
outsl
daa
addb
in
in
adc
int3
pop
inc
lea
adc
adc
cmp
cmp
mov
dec
aas
hlt
outsl
ljmp
adcb
adc
cmp
cmp
mov
ret
insb
jl
test
imull
xchg
mov
mov
mov
lret
mov
lcall
imul
sub
jmp
ja
pop
mov
lret
cmp
or
and
popa
xor
fcompl
sbb
jb
pop
int
or
push
popf
inc
push
mov
and
mov
addb
cmp
cmp
mov
shll
dec
inc
pop
movl
addb
cmp
cmp
jge
and
ss
sbb
mov
push
mov
mov
nop
add
out
push
ljmp
loop
push
xchg
test
ss
int
sbb
dec
addb
adc
cmp
cmp
push
cmp
hlt
xchg
flds
dec
addb
adc
cmp
cmp
pop
in
leave
or
ljmp
insb
sbb
sti
sbbb
adc
addb
cmp
cmp
mov
push
xchg
adc
popl
adc
adc
cmp
cmp
dec
and
jecxz
add
ljmp
pop
sahf
jge
fmull
adcb
adc
cmp
cmp
mov
mov
shrb
push
outsb
sbb
and
addb
cmp
cmp
mov
jns
sbb
addb
cmp
cmp
mov
scas
push
xchg
inc
pop
sti
cmp
aas
mov
mov
call
test
nop
lahf
xchg
test
xchg
ss
ss
push
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
and
and
sbb
addb
adc
cmp
cmp
mov
xchg
push
iret
shrl
nop
add
leave
sbb
xchg
push
push
push
ja
in
cmpsl
addb
adc
cmp
cmp
xor
jmp
cmc
test
arpl
gs
stos
out
sub
mov
sub
clc
dec
xlat
out
push
ljmp
jmp
adcb
adc
cmp
cmp
mov
and
adcb
adc
cmp
cmp
mov
mov
mov
inc
pop
addb
adc
cmp
cmp
std
inc
dec
and
xor
jg
or
adc
adc
cmp
cmp
jp
mov
mov
dec
icebp
sarb
cltd
jno
popa
add
dec
mov
mov
mov
push
enter
xor
lahf
xchg
outsb
lcall
sub
out
fidivl
lret
clc
mov
add
mov
addb
cmp
cmp
mov
and
and
and
mov
xor
addb
cmp
cmp
addb
adc
cmp
cmp
cpuid
xchg
jnp
mov
pop
loopne
jge
dec
jg
push
jo
jp
xor
ljmp
cltd
lods
cmc
mov
jp
jge
adc
sub
addb
adc
cmp
cmp
xor
dec
push
xor
mov
outsb
je
adc
hlt
cmpsb
dec
fistpll
push
call
mov
dec
mov
into
push
push
pop
pop
pop
scas
jmp
cmpl
addb
cmp
cmp
push
hlt
pop
test
mov
jp
xor
adc
adc
cmp
cmp
sub
jl
rcrb
push
or
addb
adc
cmp
cmp
jl
xor
jmp
lret
leave
in
add
aas
push
and
xor
mov
inc
cli
inc
pop
pop
sub
addb
adc
cmp
cmp
xor
fists
mov
dec
arpl
sahf
push
xchg
or
adcb
adc
cmp
cmp
mov
push
inc
popw
fs
or
flds
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
xchg
movsb
les
lock
gs
sbb
fistl
inc
lret
sub
and
adcb
adc
cmp
cmp
mov
jecxz
aas
sub
sbb
inc
mov
inc
xchg
addb
adc
cmp
cmp
dec
xchg
jmp
mov
addb
adc
cmp
cmp
roll
sub
mov
jl
xchg
scas
jb
addb
cmp
cmp
mov
stc
scas
addb
adc
cmp
cmp
inc
enter
adcb
adc
cmp
cmp
mov
adc
addb
cmp
cmp
mov
cmpsl
loopne
fcoml
adcb
adc
cmp
cmp
mov
pop
frstor
aam
inc
lods
je
enter
sub
dec
cmp
adc
adc
adc
cmp
cmp
in
inc
jle
sbb
in
aas
mov
icebp
pushf
inc
mov
adc
xlat
or
sahf
push
lahf
dec
sub
and
and
je
jecxz
mov
addb
cmp
cmp
mov
jle
jns
iret
bound
aam
out
int
mov
cmp
xor
push
pushf
cmpl
cmp
ficomps
pusha
lea
aaa
ret
sbb
out
jecxz
sub
cmp
int3
aam
test
adc
adc
cmp
cmp
mov
mov
aaa
outsb
and
cmp
in
mov
adc
adc
cmp
cmp
enter
mov
popa
fcmovnu
dec
fcmovnu
jns
inc
cwtl
subb
adc
fists
addb
cmp
cmp
mov
mov
and
loope
or
out
fwait
adc
jecxz
cmp
jecxz
push
outsl
pop
sahf
call
addb
cmp
cmp
mov
aad
sub
mov
and
jge
xchg
push
nopl
fists
andl
scas
dec
pop
mov
sub
addb
adc
cmp
cmp
js
mov
adc
add
fnsave
popa
mov
std
and
adc
add
or
inc
cmp
adcb
adc
cmp
cmp
mov
lahf
or
mov
out
pop
cwtl
ret
aad
and
dec
xor
pop
push
sub
loop
push
and
addb
cmp
cmp
jno
and
mov
xor
add
imul
int
dec
mov
sar
fdivp
jns
enter
addb
adc
cmp
cmp
inc
pop
mov
sub
addr16
pop
jecxz
dec
outsb
jge
add
dec
in
sub
test
lcall
cli
mov
adcb
adc
cmp
cmp
mov
lods
jno
pop
xor
popl
mov
addb
cmp
cmp
mov
jp
addb
cmp
cmp
mov
jbe
setns
jnp
inc
pushf
jae
sub
jae
push
bound
loopne
cwtl
mov
xor
mov
fbstp
xor
sub
inc
cwtl
std
dec
adcl
sahf
out
push
gs
jp
xchg
cmp
cmpsb
sahf
pcmpeqb
fstp
push
call
outsb
testl
adc
adc
cmp
cmp
add
mov
adc
mov
push
addb
adc
cmp
cmp
add
inc
mull
xchg
mov
addb
cmp
cmp
mov
lods
push
addb
adc
cmp
cmp
add
addb
cmp
cmp
mov
mov
repz
dec
pop
xor
xchg
jbe
jnp
andb
addb
adc
cmp
cmp
shll
adc
adc
cmp
cmp
mov
mov
jne
add
aad
shrl
xor
add
clc
mov
call
mov
xor
sbb
addb
adc
cmp
cmp
pop
xorb
jo
pop
sub
xchg
pop
int
rclb
xlat
mov
pop
and
test
or
es
add
push
push
dec
addb
adc
cmp
cmp
and
and
out
sub
test
mov
scas
pop
jl
ljmp
xor
mov
mov
addb
adc
cmp
cmp
les
in
decl
insb
xor
addb
adc
cmp
cmp
fstpt
add
aad
mov
lret
les
cmp
jnp
mov
jne
int
jmp
add
cmp
cmp
ret
aam
aad
mov
clc
dec
jp
loope
lret
popw
pop
push
das
sub
addb
adc
cmp
cmp
fcoml
scas
xchg
pop
pop
jbe
addb
adc
cmp
cmp
rorb
add
jne
sbb
das
out
xchg
addb
adc
cmp
cmp
ret
jmp
xor
inc
addb
adc
cmp
cmp
scas
icebp
inc
mov
xchg
std
mov
sub
test
push
imul
addb
cmp
cmp
jp
xchg
xchg
addb
adc
cmp
cmp
pop
jns
cs
addb
adc
cmp
cmp
sub
sbb
notb
adc
adc
cmp
cmp
mov
insb
push
jl
cli
leave
xor
adc
adc
cmp
cmp
rcl
addb
cmp
cmp
mov
mov
and
adcb
adc
cmp
cmp
mov
push
addb
adc
cmp
cmp
cmp
xchg
in
in
addb
adc
cmp
cmp
xchg
jb
add
addb
cmp
cmp
mov
arpl
xchg
aam
and
push
int
push
movsb
xlat
mov
and
stc
push
out
pop
xor
jno
mov
repnz
in
jmp
jnp
jnp
addb
cmp
cmp
mov
js
dec
cmp
dec
cmp
movl
cmp
cmp
mov
jbe
pop
pop
js
push
addb
adc
cmp
cmp
inc
jp
addb
cmp
cmp
mov
lea
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
loope
push
das
ljmp
sbb
adc
cmp
fbld
mov
fidivrs
lea
pop
test
pop
mov
addb
cmp
cmp
mov
ffree
cmc
ds
addb
adc
cmp
cmp
ficoml
pop
adc
dec
cmp
fldenv
addb
cmp
cmp
jge
adc
xchg
repnz
adc
stos
aas
mov
stos
jb
jecxz
jns
in
bound
mov
dec
add
sbb
adc
scas
push
in
add
addb
cmp
cmp
push
out
daa
roll
cltd
or
mov
ja
insb
cmpl
adc
adc
cmp
cmp
mov
orl
lret
mov
lahf
aad
rorl
je
fdivp
pop
ss
xor
lcall
adcb
adc
cmp
cmp
mov
sahf
fidivrs
addb
cmp
cmp
jnp
test
addb
cmp
cmp
mov
addb
adc
cmp
cmp
adc
xchg
nop
dec
jg
addb
adc
cmp
cmp
pop
fisubrs
arpl
test
shrl
pop
sub
push
loope
aam
stos
mov
xchg
sub
fwait
mov
and
in
xchg
addb
adc
cmp
cmp
insb
add
addb
cmp
cmp
bound
adc
mov
inc
repnz
sub
ret
jecxz
addb
cmp
cmp
mov
sub
jo
loope
jge
iret
dec
and
mov
jno
addb
cmp
cmp
mov
mov
cmpsb
ja
je
mov
aaa
inc
out
inc
mov
jns
popf
into
xchg
lret
mov
mov
or
mov
out
icebp
lcall
push
jg
xchg
adc
adc
cmp
cmp
mov
sar
data16
xchg
adc
dec
inc
ficoml
addb
adc
cmp
cmp
cli
notl
movsl
sub
xorl
scas
push
cmpsb
push
mull
in
xchg
add
addb
cmp
cmp
mov
mov
mov
xchg
repz
or
cmp
imul
in
cmpsb
xchg
cli
addb
adc
cmp
cmp
jb
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
xchg
out
cmp
jbe
addb
cmp
cmp
mov
cmp
in
adc
add
cmp
cmc
stc
addb
adc
cmp
cmp
notl
imul
inc
in
or
addb
cmp
cmp
mov
sub
pop
and
mov
mov
adc
jnp
addb
cmp
cmp
mov
and
mov
jbe
es
sub
std
and
dec
cmp
sub
lods
stc
movb
adc
cmp
cmp
mov
popa
les
hlt
inc
addb
adc
cmp
cmp
ja
notb
fwait
call
addb
cmp
cmp
push
jno
ret
dec
push
fs
rolb
adc
adc
cmp
cmp
ficompl
dec
push
roll
mov
sub
dec
divl
xchg
mov
loop
sahf
or
xchg
push
adc
adcb
adc
cmp
cmp
mov
jno
xor
push
and
lss
shl
fiadds
push
clc
movsb
out
xchg
jge
add
lret
mov
adcb
adc
cmp
cmp
mov
xor
adcb
adc
cmp
cmp
mov
in
and
cmpb
push
addb
adc
cmp
cmp
dec
pop
cmp
push
dec
test
mov
in
dec
in
pushf
addb
adc
cmp
cmp
stos
mov
adcb
adc
cmp
cmp
mov
sub
jle
sub
lock
out
lock
gs
jl
adc
cmp
dec
and
addb
cmp
cmp
xchg
dec
fcmovnb
push
sub
push
aam
sti
and
lock
addb
cmp
cmp
fs
sbb
ret
pop
mov
fwait
jg
or
and
sub
imul
xchg
in
rcl
mov
ret
bound
cmc
mov
jge
xor
cmp
dec
aam
dec
arpl
hlt
dec
les
test
adc
jns
inc
popf
push
dec
pop
push
xchg
rcrl
es
fwait
xchg
dec
xor
push
push
and
jg
addb
adc
cmp
cmp
adc
mov
out
hlt
push
lret
addb
cmp
cmp
mov
dec
cmp
ret
addb
cmp
cmp
movsl
int
jle
jnp
addb
adc
cmp
cmp
mov
xchg
push
push
les
fsub
add
leave
mov
adc
adc
cmp
cmp
mov
mov
mul
lcall
inc
xor
cmp
and
xchg
pop
in
test
xor
shll
pop
cmovg
inc
rorb
mov
push
popa
loope
nop
addb
adc
cmp
cmp
add
lods
inc
mov
addb
cmp
cmp
ficomps
addb
cmp
cmp
dec
jno
in
mov
mov
adc
sbb
mov
clc
test
inc
adc
adc
adc
cmp
cmp
adc
push
push
out
push
add
mov
mov
sbb
out
mov
addb
cmp
cmp
mov
mov
std
insb
loop
mov
das
sub
pop
inc
pop
inc
pop
fdivr
rolb
adc
adc
cmp
cmp
jns
popa
into
addb
adc
cmp
cmp
mov
jge
addb
adc
cmp
cmp
sbb
in
aas
in
cld
xor
lret
addb
adc
cmp
cmp
int3
aad
inc
mov
jo
lods
addb
adc
cmp
cmp
in
repz
adc
cmp
cmp
sub
test
mov
addb
cmp
cmp
mov
cmpl
stos
cs
addb
adc
cmp
cmp
sub
dec
dec
lock
gs
add
pop
es
das
arpl
insb
adc
xchg
clc
push
loopne
sub
dec
addb
adc
cmp
cmp
or
pop
addb
adc
cmp
cmp
ret
jle
lea
mov
and
les
bound
test
std
dec
inc
shll
std
adc
test
arpl
mov
scas
arpl
mov
cmp
int3
movsl
cmp
ljmp
repnz
pop
shlb
addb
cmp
cmp
mov
arpl
sub
jge
pop
sbb
fs
int
pop
lods
into
jl
jbe
addb
adc
cmp
cmp
sahf
movsb
in
push
lcall
fdivl
aaa
addb
adc
cmp
cmp
sarb
mov
adc
adc
cmp
cmp
mov
or
movsb
adc
add
mov
jns
mov
addb
adc
cmp
cmp
sub
mov
mov
cli
jecxz
test
stc
call
or
pusha
shll
push
leave
mov
int3
jp
or
insb
adc
push
jno
out
icebp
out
lahf
or
mov
pop
jbe
push
mov
addb
cmp
cmp
mov
out
mov
adc
adc
cmp
cmp
mov
jnp
cmpsl
enter
adcb
adc
cmp
cmp
mov
in
sbb
pop
sarb
mov
mov
test
out
xchg
pop
and
push
mov
orl
adcb
adc
cmp
cmp
mov
and
inc
inc
xchg
push
mov
lcall
pop
subl
or
jno
shrl
mov
xor
std
stos
aam
sti
pop
inc
jne
mov
addb
adc
adc
cmp
cmp
mov
xor
test
dec
push
sarl
and
dec
stc
movsb
lea
cltd
cmc
inc
stos
sarb
mov
lret
adc
fwait
add
or
in
lret
cmp
or
addb
cmp
cmp
imul
cld
xchg
shrl
xor
push
test
ja
ss
push
pop
pop
xor
mov
pop
call
or
movsl
adc
adc
adc
cmp
cmp
mov
adc
push
out
imull
addb
cmp
cmp
mov
pop
cmp
add
hlt
sbb
push
les
fsubr
cmp
cmp
addb
cmp
cmp
mov
addb
adc
cmp
cmp
and
data16
sahf
ljmp
stc
add
cs
movsb
and
mov
fsubp
inc
fldl
ljmp
mov
pop
push
addb
adc
cmp
cmp
jge
inc
jno
gs
jnp
pslld
lcall
add
inc
cli
push
xor
sbb
or
adcb
adc
cmp
cmp
mov
addl
cmp
cmp
sbb
jae
add
int3
shll
mov
adcb
adc
cmp
cmp
mov
and
loop
sbb
jecxz
lret
push
dec
cmp
iret
xor
rorl
cmp
cmpsb
orl
mov
rorb
insb
xor
jb
addb
adc
cmp
cmp
push
call
jae
and
push
or
xor
xchg
addb
adc
cmp
cmp
cs
das
pop
xchg
pop
mov
pop
ljmp
addb
addb
cmp
cmp
shrb
and
test
adcb
adc
cmp
cmp
mov
xor
adcb
adc
cmp
cmp
mov
mov
aas
xchg
out
add
addb
adc
cmp
cmp
addb
adc
cmp
cmp
subb
cld
fiadds
adc
out
jbe
xor
aam
dec
jnp
lods
mov
cs
cmp
sti
es
fs
rolb
and
or
mov
mov
imulb
jge
addb
cmp
cmp
mov
test
mov
lods
jns
xchg
xor
inc
out
push
pop
cmp
addb
adc
cmp
cmp
adc
xlat
jb
adc
lea
mov
loopne
iret
add
add
push
xchg
add
loop
mov
addb
cmp
cmp
push
addb
adc
cmp
cmp
in
iret
xchg
addl
cmp
dec
les
mov
ja
iret
addb
adc
cmp
cmp
fnstsw
push
sar
lea
sub
addb
cmp
cmp
xor
das
pop
mov
xchg
cld
shrl
push
and
mov
addb
cmp
cmp
mov
push
ret
mov
cld
lret
repz
jb
insb
inc
addb
adc
cmp
cmp
lret
sub
jmp
cmc
dec
popf
mov
popa
repnz
addb
adc
cmp
cmp
fwait
rolb
adc
adc
cmp
cmp
push
dec
outsb
jp
inc
mov
pop
addb
adc
cmp
cmp
nop
es
lret
addb
adc
cmp
cmp
cltd
jmp
aad
push
push
dec
adc
movb
adc
cmp
cmp
mov
jbe
sbb
lahf
addb
adc
cmp
cmp
test
ja
pop
lods
sbb
lock
movb
adc
cmp
cmp
mov
push
push
push
addr16
pop
mov
add
jge
add
addb
cmp
cmp
sbb
adcl
inc
loop
fistpl
outsl
inc
cwtl
in
addb
adc
cmp
cmp
mov
mov
mov
push
jb
dec
insl
mov
push
push
and
add
cmp
pusha
cmp
adc
adc
cmp
cmp
imul
adc
cmp
cmp
mov
cmp
dec
jnp
push
dec
dec
and
outsl
mov
lods
repz
adc
cmp
cmp
into
es
clc
inc
js
lods
inc
sar
neg
mov
out
push
scas
adc
in
sbb
cltd
loopne
pop
sub
mov
addb
adc
cmp
cmp
mov
int
addr16
mov
adc
adc
cmp
cmp
inc
mov
aaa
test
cli
mov
outsl
iret
mull
adc
adc
adc
cmp
cmp
stos
lret
sbb
sbb
adc
adc
cmp
cmp
mov
imul
mul
popa
xor
mov
ret
xor
jecxz
addb
adc
cmp
cmp
lods
loop
xchg
xchg
cmp
jnp
push
out
and
adc
outsl
aas
aam
jecxz
addb
adc
cmp
cmp
test
pop
roll
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
inc
xchg
int3
js
addb
adc
cmp
cmp
filds
movsb
pushf
xorb
pop
shr
out
lods
outsb
adc
sbb
xchg
ds
ljmp
jno
mov
ja
test
enter
pop
push
lods
call
and
addb
cmp
cmp
xor
inc
pop
xchg
cmpsb
jle
loopne
leave
subl
lcall
mov
test
pop
roll
adc
xchg
add
sub
addb
adc
cmp
cmp
in
js
push
jno
ret
fisttps
fisttpl
mov
scas
in
push
cmpsb
in
stc
jne
pop
push
fisttps
dec
or
pop
xor
jno
mov
jg
addr16
into
jmp
cmpl
mov
into
push
pop
das
imul
adc
cmp
cmp
mov
dec
lret
inc
fistpll
cmp
adc
or
ss
sub
pop
ficompl
bound
sahf
xor
jb
cmp
xlat
push
fcmovu
pop
fiaddl
xor
dec
fwait
pop
mov
les
mov
pop
cmpsl
pop
js
lock
cmp
xchg
sub
dec
jmp
mov
inc
cwtl
divps
iret
lods
adc
or
popa
mov
dec
mov
push
pop
xlat
mov
lahf
pop
addb
adc
cmp
cmp
inc
scas
add
adcl
cmpsl
xchg
xchg
fistl
pop
sarb
das
cli
mov
into
mov
addb
adc
cmp
cmp
ror
subb
xor
cmp
dec
cwtl
das
and
adc
jbe
push
popa
outsb
add
adcb
sarl
roll
aad
ljmp
xor
lea
and
into
adcl
cmp
addb
adc
cmp
cmp
dec
or
sbb
mov
in
xchg
adc
adc
cmp
cmp
jne
mov
and
mov
push
out
addb
adc
cmp
cmp
fildll
call
addb
adc
cmp
cmp
jg
jg
std
cmp
push
xor
addb
cmp
cmp
mov
enter
inc
xchg
call
add
inc
mov
pushf
insl
xchg
push
dec
push
mov
scas
int
jmp
testl
cmp
nop
cmp
sbb
ljmp
adc
jne
addb
cmp
cmp
mov
lcall
pusha
in
inc
pop
test
adc
adc
cmp
cmp
lods
pop
in
push
addb
adc
cmp
cmp
push
call
adcb
adc
cmp
cmp
mov
sar
add
clc
addl
mov
leave
shl
pop
mov
push
and
push
adc
addb
adc
cmp
cmp
inc
outsb
mull
add
iret
jecxz
and
leave
xchg
movsb
push
sahf
or
adc
adc
cmp
cmp
mov
or
lea
mov
addb
cmp
cmp
mov
cli
add
adc
adc
cmp
cmp
jmp
outsb
addl
dec
movsl
insl
std
and
addb
adc
cmp
cmp
lock
in
dec
mov
jg
std
adc
mov
adc
adc
cmp
cmp
mov
mov
jns
inc
popf
pop
int
jle
mov
adcb
adc
cmp
cmp
mov
test
test
xchg
lahf
stos
jbe
mov
and
cltd
mov
jno
pop
dec
mov
fwait
mov
sub
lods
lea
add
addb
adc
cmp
cmp
ds
pop
fidivrs
adc
popa
addb
adc
cmp
cmp
mov
pop
push
lock
addb
adc
cmp
cmp
push
popa
sbbl
das
pop
jle
in
and
enter
adcb
adc
cmp
cmp
mov
cmc
and
aam
sbb
jge
xchg
jns
ljmp
adc
cmp
cmp
mov
inc
xchg
xchg
movl
xchg
and
outsb
leave
cli
cmc
xchg
jge
or
and
cmpsl
or
jge
pop
outsl
cmp
addb
adc
cmp
cmp
inc
insl
test
push
cmp
push
std
int
jg
adc
les
addb
adc
cmp
cmp
into
data16
stc
ret
or
or
dec
ret
or
idivb
addb
adc
cmp
cmp
test
movsb
add
or
addb
adc
cmp
cmp
sti
xor
push
or
addb
adc
cmp
cmp
push
xchg
adc
mov
mov
and
adcb
adc
cmp
cmp
mov
fcoml
push
insb
mov
mov
mov
repnz
addb
cmp
cmp
mov
mov
popf
icebp
xchg
inc
adc
data16
outsl
mov
xchg
out
push
addb
adc
cmp
cmp
sbb
bound
cs
popa
push
out
dec
test
cmp
and
data16
jl
jnp
push
int3
dec
mull
call
jp
int
mov
cltd
ret
mov
push
addb
adc
cmp
cmp
cwtl
inc
and
popf
mov
outsb
push
mov
jg
mov
shrb
jp
or
push
daa
int
shrb
pop
movl
cmp
cmp
lods
aaa
inc
sti
dec
mov
scas
mov
mov
mov
stos
addb
adc
cmp
cmp
dec
js
jbe
push
movups
sub
sahf
scas
adc
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
cltd
mov
cmp
dec
dec
cmp
pop
cmp
mov
cmp
addb
adc
cmp
cmp
sbb
xchg
adc
cwtl
roll
jne
sbb
rcr
mov
lret
addb
adc
cmp
cmp
jae
shlb
stos
push
das
pop
xor
sysenter
mov
jmp
movsb
fstpl
jmp
and
mov
inc
add
hlt
scas
and
mov
addb
adc
cmp
cmp
mov
ret
pop
ret
fstps
popa
inc
dec
jmp
pop
push
movsl
mov
test
inc
cmp
xor
push
addb
adc
cmp
cmp
pop
lods
inc
subb
fisubrl
adc
sub
dec
dec
add
fadds
adc
adc
cmp
cmp
push
cltd
cmp
and
inc
pop
icebp
xchg
adc
addb
cmp
cmp
mov
pusha
mov
cmpsl
lock
loope
leave
testl
sbb
rcr
sbb
stos
data16
xor
inc
jbe
js
sti
and
or
or
enter
dec
incb
adc
adc
cmp
cmp
addr16
daa
mov
sbb
addb
cmp
cmp
mov
aas
outsl
xor
adc
xor
mov
arpl
popf
cmp
sahf
push
outsb
lods
adc
push
pop
sbb
or
rolb
jbe
js
jmp
int
inc
push
cmpl
jle
in
cltd
popa
lods
and
jl
in
pop
ret
xchg
addb
adc
cmp
cmp
push
lea
and
xchg
ds
jno
aas
mov
mov
push
pop
inc
int3
in
inc
addb
adc
cmp
cmp
add
lcall
dec
jle
cmp
mov
lahf
out
and
mov
leave
addb
adc
cmp
cmp
cmpsl
lods
roll
js
outsl
cmp
sub
and
push
dec
sub
ret
out
jbe
lret
imul
mov
dec
or
std
pushf
mov
enter
addb
cmp
cmp
mov
cmp
repnz
ret
sbb
pop
sbb
cs
pushf
cmp
outsb
add
scas
pop
lods
movsb
iret
mov
addb
cmp
cmp
jae
out
movsb
jp
aas
mov
adcb
adc
cmp
cmp
mov
push
push
dec
hlt
out
ja
out
rcrl
and
nop
int
je
scas
mov
ja
daa
push
std
aad
popa
ret
pop
repnz
addb
adc
cmp
cmp
sub
bound
pop
lods
in
xchg
dec
faddp
dec
mov
or
sub
adc
adc
cmp
cmp
ds
or
clc
je
pop
dec
in
add
sub
xchg
add
fptan
test
iret
push
mov
call
mov
xchg
fs
out
adcl
mov
arpl
out
test
jg
mov
mov
loopne
add
adc
adc
cmp
cmp
addb
adc
cmp
cmp
dec
dec
inc
xchg
jp
stos
push
cmpsb
fstpt
lock
test
out
dec
cs
dec
sbbl
dec
std
test
cmp
popf
fisubs
jmp
pop
mov
addb
cmp
cmp
mov
scas
and
pop
xor
rcl
inc
sahf
pop
aam
js
je
cmp
sub
popf
pop
sti
cs
jecxz
insl
jne
cmp
jl
jmp
lds
mov
aas
xor
jmp
xchg
push
addb
adc
cmp
cmp
stos
fmuls
insl
les
orl
movsb
fsts
cmp
pop
nop
out
jo
or
xor
je
popf
xchg
xchg
jecxz
mov
fs
adc
cmp
in
cwtl
stos
jne
int3
iret
mov
jnp
xchg
pusha
cld
addb
adc
cmp
cmp
movsl
ss
scas
out
popf
pop
jno
push
sbb
or
push
les
lret
into
inc
adc
test
outsl
jns
cli
xchg
lods
pop
scas
mov
add
adc
mov
aad
add
cmp
pop
push
add
pop
dec
cmpsl
push
mov
out
stos
std
jge
push
ljmp
outsl
sbb
cmp
js
sub
add
shll
lock
push
mov
out
cwtl
mov
push
pop
mov
call
xor
xor
mov
cli
jge
fistpl
mov
jp
inc
sub
push
addb
adc
cmp
cmp
loopne
test
push
test
cs
pop
cs
sub
push
mov
data16
addb
cmp
cmp
mov
in
mov
mov
mov
addb
adc
cmp
cmp
test
mov
push
je
orl
sub
fsubp
inc
test
sub
and
out
cwtl
popa
daa
test
cmpsl
dec
and
daa
dec
sbb
jns
push
dec
cmp
mov
addb
cmp
cmp
mov
fucomi
and
xchg
or
push
sbbb
iret
ja
outsl
out
das
gs
das
fsubrl
cmc
fcmovnu
cmp
ja
icebp
cmc
mov
leave
mov
pop
jecxz
or
inc
outsl
test
adc
addb
adc
cmp
cmp
adc
lret
mov
enter
addb
cmp
cmp
mov
addb
adc
cmp
cmp
pusha
data16
pushf
adc
xlat
call
jecxz
add
push
inc
ss
mov
addb
adc
cmp
cmp
mov
xchg
lcall
insb
shl
iret
lcall
dec
jecxz
es
xlat
nop
pop
addb
adc
cmp
cmp
in
sub
test
addb
adc
cmp
cmp
movsb
std
dec
rcll
xchg
add
pop
addb
adc
cmp
cmp
popa
sbb
mov
je
cmc
loop
addb
cmp
cmp
mov
out
inc
push
cmp
inc
sbb
mov
addb
cmp
cmp
mov
xchg
fwait
mov
push
push
cltd
lret
mov
leave
adc
mov
addb
cmp
cmp
mov
popa
pushf
int3
jbe
xor
dec
pop
mov
aad
dec
cli
pop
mov
inc
sub
es
adc
addb
cmp
cmp
ja
faddl
cs
int3
push
pop
and
imul
jne
daa
aam
addb
adc
cmp
cmp
sub
xchg
frstor
lret
mov
fisttpll
cmp
sbb
enter
pushf
pop
lcall
xor
fdiv
push
dec
ret
dec
adc
sub
je
movsb
sbb
push
je
inc
dec
repz
movsb
addb
adc
cmp
cmp
nop
pop
add
pop
in
adc
add
dec
mov
and
adc
adc
cmp
cmp
sahf
lret
jae
loop
pop
push
and
xchg
lcall
addb
cmp
cmp
mov
jecxz
or
addb
cmp
cmp
mov
sbb
sub
sbb
mov
rcll
fcompl
pop
fs
mov
xor
addb
adc
cmp
cmp
mov
jl
push
push
sub
cmp
pop
inc
sbb
addb
cmp
cmp
mov
icebp
pushf
out
out
mov
stos
push
add
loopne
rorl
clc
popf
ret
xacquire
sub
xor
lea
out
call
jmp
addb
cmp
cmp
mov
jb
addb
cmp
cmp
mov
jle
imul
add
xor
mov
pop
pop
add
dec
cmp
sbb
dec
sub
int
mov
addb
cmp
cmp
ds
mov
and
nop
push
out
addb
adc
cmp
cmp
cld
and
mov
mov
cmp
outsl
hlt
jecxz
inc
addb
adc
cmp
cmp
inc
adc
fidivl
or
mov
lret
pop
iret
dec
ret
movsb
dec
pop
add
mov
addb
adc
cmp
cmp
add
pushf
hlt
jbe
jnp
xchg
adc
xchg
leave
xlat
inc
adc
adc
mov
adc
adc
cmp
cmp
push
dec
add
addb
cmp
cmp
cwtl
stos
pusha
adc
iret
xchg
mov
repz
lock
addb
cmp
cmp
lret
mov
xor
outsl
xorb
adc
adc
cmp
cmp
mov
shll
jl
or
inc
scas
fsubp
jo
add
inc
lret
addr16
sti
mov
cmpsl
imul
pop
rclb
jle
addb
cmp
cmp
mov
rol
jle
xlat
inc
clc
addb
adc
cmp
cmp
test
mov
sti
bswap
repz
adc
cmp
cmp
cmp
dec
nopl
adc
fists
jnp
mov
mov
push
shl
push
inc
in
ds
sbb
ret
pop
clc
adc
or
add
mov
pop
enter
xchg
xchg
adc
std
loope
xor
cs
and
loope
push
addb
cmp
cmp
mov
fisubrl
addb
adc
cmp
cmp
push
push
sub
insl
xchg
test
cmpsb
das
jl
dec
adc
adc
adc
cmp
cmp
dec
sbb
adc
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
mov
mov
push
fadds
adc
adc
cmp
cmp
arpl
pushf
ljmp
jb
xor
nop
xor
adc
mov
fbld
mov
xchg
mov
movsl
xor
mov
test
push
roll
movsb
sbbb
int
and
or
sbb
mov
inc
dec
pop
cmpsl
mov
stc
mov
push
push
fistpl
sbb
out
sbb
xor
rcll
adcb
adc
cmp
cmp
mov
ret
inc
sarb
addb
adc
cmp
cmp
test
or
cmp
xlat
add
ret
add
inc
aad
mov
jmp
cmp
xchg
inc
dec
mov
lret
sbb
sbb
mov
sub
scas
jbe
xor
or
xor
add
cs
cli
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
gs
jg
mov
xor
xchg
adc
adc
cmp
cmp
mov
dec
leave
addl
jnp
cmc
stc
mov
mov
xor
mov
cli
sti
loop
mov
push
arpl
mov
aas
mov
dec
test
shrl
loop
mov
and
es
sub
addb
cmp
cmp
mov
jne
popa
out
enter
pushf
mov
popf
icebp
or
xor
xchg
adc
outsl
xor
push
xor
adc
adc
cmp
cmp
mov
pop
pop
pop
lret
scas
ret
ljmp
lds
mov
addb
cmp
cmp
addb
adc
cmp
cmp
jmp
ret
dec
xor
mov
mul
xchg
sbb
cmpsl
mov
gs
fcomip
adc
loope
cmp
sub
sbb
iret
enter
inc
xchg
lds
and
push
sub
clc
lods
xor
or
inc
cmpsb
xchg
jmp
adc
repz
or
rcrb
mov
lahf
dec
mov
loop
fucomi
mov
cmp
add
rcr
iret
repz
subl
ljmp
cmovae
daa
out
call
fwait
fimull
enter
pop
pop
mov
adc
adc
cmp
cmp
addb
adc
cmp
cmp
cmp
add
xor
sarb
aad
jmp
add
push
imul
jg
test
shll
xor
addb
adc
cmp
cmp
fsubl
addb
cmp
cmp
mov
push
cmp
push
and
xlat
rcl
xor
dec
dec
mov
lock
xchg
dec
fs
dec
sbb
rep
sub
cmpb
push
push
adcb
adc
cmp
cmp
mov
adc
and
pop
sbb
mov
cmc
insl
mov
loop
sbb
leave
sahf
test
push
cld
hlt
outsl
mov
mov
in
cmp
pop
movsl
jle
dec
jecxz
mov
sar
fistl
pop
push
xchg
cmp
rcrb
addb
adc
cmp
cmp
pop
sub
mov
adc
adc
cmp
cmp
pop
xchg
hlt
scas
pop
fstpt
push
inc
lock
sbb
lret
dec
xor
and
sbb
rcrb
addb
adc
cmp
cmp
push
sbb
adc
adc
cmp
cmp
jmp
addb
cmp
cmp
mov
in
lea
jb
addb
adc
cmp
cmp
outsb
push
fs
jbe
jl
or
cmp
push
cwtl
sbb
and
add
push
addb
adc
cmp
cmp
inc
jno
and
daa
inc
es
xchg
and
stos
icebp
loope
lods
pop
das
mov
pop
xor
push
adcb
adc
cmp
cmp
mov
fdivrl
addb
cmp
cmp
mov
push
and
addb
adc
cmp
cmp
std
rcrl
push
call
mov
adc
mov
sbb
xlat
push
mov
push
imul
fucom
filds
sbb
xchg
cmovl
cli
inc
inc
movsl
cmc
addl
repnz
enter
jp
xchg
xor
imul
push
and
inc
lds
scas
leave
jl
lock
adc
shll
fldl
loope
adc
aam
ret
push
arpl
dec
enter
addb
cmp
cmp
decb
arpl
fisubs
adc
jns
jle
into
jg
flds
adc
adc
cmp
cmp
clc
addb
adc
cmp
cmp
dec
mov
and
cmp
or
adc
adc
cmp
cmp
jae
pop
mov
out
add
dec
lock
bound
lods
pop
pop
and
shll
lcall
addb
adc
cmp
cmp
mov
mov
in
scas
mov
ficompl
in
cmp
bound
push
pop
cmp
mov
rcrb
fisubrs
aaa
orl
cmp
cmp
mov
lahf
jne
les
adcb
adc
cmp
cmp
mov
add
setnp
xchg
sahf
fwait
ja
jl
ret
mov
addb
adc
cmp
cmp
push
movsl
cld
lds
clc
jecxz
xchg
pop
push
leave
addb
adc
cmp
cmp
or
es
loope
ja
mov
jg
sub
int3
insl
fwait
ret
sbb
les
jg
xor
addb
adc
cmp
cmp
dec
loop
and
das
fsubrs
addb
jb
addb
cmp
cmp
mov
add
adc
adc
cmp
cmp
mov
leave
adc
cmp
mov
xor
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
dec
test
subl
mov
icebp
add
aas
inc
pop
pop
rclb
cmpb
xorl
sub
imul
add
enter
rdmsr
and
pop
and
addb
adc
cmp
cmp
fisubrs
pusha
addb
adc
cmp
cmp
addb
jae
pop
rcr
rcr
inc
jae
into
mov
dec
addb
adc
cmp
cmp
cmp
in
mov
ret
fucomi
jae
cwtl
mov
scas
pop
addb
adc
cmp
cmp
test
add
js
push
and
divb
cs
insb
in
std
lret
stos
jmp
lds
movsl
data16
mov
outsl
mov
testl
cmp
cmp
les
aas
test
nop
mov
je
adc
addb
adc
cmp
cmp
je
ss
cltd
ljmp
adc
adc
cmp
cmp
mov
cld
test
adcb
adc
cmp
cmp
mov
pop
arpl
inc
lret
cmpsb
dec
lahf
scas
inc
mov
adc
adc
cmp
cmp
mov
inc
dec
mov
mov
cmc
pop
addr16
ret
xlat
out
dec
push
cltd
in
mov
stos
add
icebp
test
dec
mov
in
xchg
sub
lcall
adcb
adc
cmp
cmp
mov
dec
xchg
addb
adc
cmp
cmp
add
mov
xor
fmuls
scas
add
lcall
cmp
sbb
mov
cmp
add
daa
or
inc
stc
cmp
insb
imulb
cmp
sub
fsts
ljmp
aam
repz
inc
stos
pop
xorb
les
xchg
pusha
push
jle
addb
adc
cmp
cmp
or
les
insb
pop
mov
addb
cmp
cmp
mov
pop
push
and
xor
addb
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
push
cmpsl
lds
orl
push
scas
ljmp
mov
cmp
addb
cmp
cmp
mov
nop
pop
bound
addb
adc
cmp
cmp
sub
adcb
adc
cmp
cmp
mov
shll
movsl
mov
lret
mov
addb
cmp
cmp
mov
xchg
add
fsubs
addb
adc
cmp
cmp
mov
and
jne
xchg
sbb
pop
in
sbb
lret
xchg
aad
mov
jecxz
push
arpl
mov
mov
push
lret
testb
aas
outsb
or
rcrl
xor
inc
jecxz
fnstenv
andb
popa
xor
pop
mov
xor
adcb
adc
cmp
cmp
mov
xchg
pop
int
dec
pop
jle
aaa
sbb
adc
push
pop
into
jmp
cmp
or
mov
xor
adc
adc
cmp
cmp
sub
push
mov
pusha
or
addb
adc
cmp
cmp
sub
fcoms
dec
push
add
cmc
movsw
call
jg
addb
cmp
cmp
mov
jle
and
addb
adc
cmp
cmp
dec
aas
fstpl
inc
jmp
jne
call
addb
adc
cmp
cmp
mov
addb
cmp
cmp
sub
mov
hlt
xlat
gs
cs
repz
inc
jnp
or
sub
sbb
addb
adc
cmp
cmp
insl
lcall
jne
movsb
ja
adc
mov
mov
out
addb
adc
cmp
cmp
lcall
and
fldcw
dec
int3
ret
enter
addb
cmp
cmp
mov
clc
shrb
addb
cmp
cmp
mov
fdivl
pop
dec
loop
in
addb
cmp
cmp
mov
push
insb
dec
mov
sub
jae
loop
mov
ficomps
sbb
pusha
or
mov
mov
sub
out
cltd
fisubrs
sub
mov
scas
mov
addr16
in
sub
xor
dec
push
in
outsb
daa
jmp
pop
fdivrl
mov
iret
addb
adc
cmp
cmp
movsl
addb
adc
cmp
cmp
push
sbb
jmp
mov
fadds
jne
or
mov
pop
mov
adc
adc
cmp
cmp
mov
ffreep
xor
lret
mov
loope
add
ret
jmp
xchg
test
addb
adc
cmp
cmp
lcall
sbb
dec
sti
xor
repz
je
gs
das
sub
mov
addb
adc
cmp
cmp
mov
and
add
xchg
addb
adc
cmp
cmp
xlat
clc
test
xchg
xchg
cmc
jnp
lea
adcb
adc
cmp
cmp
mov
mov
addb
cmp
cmp
pop
push
outsb
rorl
ja
or
addb
adc
cmp
cmp
mov
int3
push
xor
pusha
insl
mov
outsb
cmp
icebp
and
jb
xchg
ret
shlb
in
push
inc
dec
add
scas
cmp
inc
mov
push
mov
mov
adc
adc
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
imul
test
inc
mov
mov
pop
stc
bswap
mov
fucompp
addb
adc
cmp
cmp
jae
dec
xor
jbe
mov
mov
loopne
jmp
cltd
scas
push
addb
adc
cmp
cmp
xor
ret
lea
dec
mov
inc
xor
push
add
jb
lahf
adc
mov
out
sbb
icebp
addb
adc
cmp
cmp
loope
and
jns
push
cmpsb
adc
sbb
push
iret
je
int
push
ds
and
repz
gs
outsb
in
addb
cmp
cmp
mov
xchg
inc
fmull
scas
and
add
decb
sub
pop
pop
sub
cmpsb
movsl
or
fistpl
dec
scas
das
mov
push
popf
adc
popf
jne
dec
sarl
cmp
push
jae
inc
dec
sub
push
jge
dec
std
lods
or
jmp
movsb
inc
in
adc
jmp
stc
jne
mov
iret
loope
jmp
int
lcall
cmp
sbbl
jns
adc
or
xlat
shlb
xchg
mov
in
fdivrl
pop
fstp
mov
or
daa
pop
mov
pop
sbb
add
ss
int3
ficomps
lcall
sub
jns
xchg
addb
loop
ss
pop
push
mov
mov
lcall
cmp
loopne
add
lahf
xor
loop
addb
adc
cmp
cmp
cmpl
pop
fbstp
mov
addr16
pop
fsts
pop
sti
insl
ds
data16
out
ljmp
cmp
dec
shll
cltd
gs
jle
lea
fists
sub
dec
mov
addb
cmp
cmp
mov
leave
sbb
cmp
jle
shll
adc
addb
mov
xchg
lret
dec
fidivs
addb
cmp
cmp
mov
addb
adc
cmp
cmp
pop
lods
or
inc
or
ret
and
jns
shrb
xor
loope
ds
add
pop
imul
inc
xor
adcb
adc
cmp
cmp
mov
cmp
out
or
leave
adc
in
mov
icebp
xor
and
bound
testb
mov
addb
cmp
cmp
mov
push
ret
test
rcr
adc
adc
adc
cmp
cmp
inc
adc
inc
push
in
xchg
in
jo
aaa
mov
push
jp
mov
add
fldt
addb
adc
cmp
cmp
or
mov
sbb
fldl
sub
pusha
lock
adc
cmp
cmp
data16
adc
mov
add
mov
adc
adc
cmp
cmp
push
mov
pop
notl
in
fsub
pop
adc
test
addb
cmp
cmp
mov
adcb
loop
xchg
or
adc
adc
cmp
cmp
mov
push
addb
adc
cmp
cmp
in
mov
dec
mov
loopne
js
fld
aam
mov
sub
dec
addr16
and
imul
lcall
xchg
adc
addb
cmp
cmp
mov
mov
hlt
cmp
rcrb
push
call
jne
insb
and
lods
aad
cmp
fadds
mov
faddl
mov
adc
adc
cmp
cmp
xchg
or
rorl
stc
aas
cmp
mov
in
jg
cmp
cli
or
jl
add
cmp
mov
addb
adc
cmp
cmp
cmp
xorl
inc
xor
dec
push
cmpb
xor
addb
adc
cmp
cmp
xor
into
sbb
addb
adc
cmp
cmp
cmc
jg
addb
cmp
cmp
mov
dec
add
push
cmp
fistpl
divl
adc
adc
cmp
cmp
mov
int
rorl
addb
cmp
cmp
pop
sub
xchg
jae
in
jnp
jmp
sub
mov
repz
addb
adc
cmp
cmp
aam
hlt
cmp
xor
jae
pop
loop
leave
addb
adc
cmp
cmp
ljmp
inc
jmp
orb
add
jae
addb
adc
cmp
cmp
cltd
jecxz
orl
outsb
xor
pop
jl
fcmovb
dec
and
xchg
cs
addb
cmp
cmp
mov
mov
mov
test
fs
nop
or
es
in
sbb
sbbb
mov
stos
jg
addb
cmp
cmp
mov
pop
nop
aam
mov
dec
add
push
fldl
addb
cmp
cmp
mov
add
cltd
mov
add
dec
in
jb
enter
cmpsb
mov
adc
adc
cmp
cmp
mov
xor
test
ficoms
mov
repnz
cmc
cmc
aas
jne
addb
adc
cmp
cmp
mov
stos
addb
adc
cmp
cmp
or
push
mov
js
filds
xor
repnz
fcoml
shr
add
enter
scas
cmc
push
hlt
mov
addb
cmp
cmp
mov
scas
xchg
stc
mov
leave
jg
xchg
add
xchg
adcl
insl
addb
adc
cmp
cmp
mov
push
pop
out
push
movsl
int
jmp
addb
adc
cmp
cmp
xchg
adc
rcrl
addb
cmp
cmp
mov
je
orb
jns
inc
mov
imulb
jbe
mov
mov
shll
ds
orl
or
cmp
lcall
adc
cmp
cmp
mov
lcall
adcb
adc
cmp
cmp
mov
gs
adc
sbb
adc
adc
cmp
cmp
jns
fdivl
xor
add
pushf
test
addb
adc
cmp
cmp
addb
adc
cmp
cmp
into
jae
mov
sub
mov
addb
cmp
cmp
push
sub
jno
dec
mov
sbb
xchg
or
dec
jbe
lcall
xor
xchg
addb
adc
cmp
cmp
test
ja
in
in
pop
sub
adc
adc
cmp
cmp
mov
jnp
test
adc
adc
cmp
cmp
mov
push
xchg
xchg
sbb
addb
cmp
cmp
mov
loope
test
adc
adc
cmp
cmp
or
gs
xchg
cld
rcrb
sub
addb
cmp
cmp
mov
adc
rclb
and
addb
cmp
cmp
mov
rcrb
out
jge
xor
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pop
inc
xchg
leave
lods
fdivrp
pop
sahf
push
adc
xor
dec
adc
pop
fwait
adc
sbb
mov
fstl
sbb
addb
cmp
cmp
mov
jl
movb
jp
push
xchg
insl
pop
push
sub
lds
sarb
sub
inc
or
aas
jp
les
fld
add
sub
addl
sarl
repnz
scas
sbb
sbb
and
data16
adc
cmp
cmp
ret
addb
cmp
cmp
mov
out
in
xchg
ljmp
adc
adc
cmp
cmp
push
xlat
sarb
cli
jmp
aas
out
push
push
inc
and
adc
inc
int
jmp
nop
mov
insl
arpl
les
adcb
adc
cmp
cmp
mov
push
mov
ret
jae
jbe
mov
mov
push
call
addb
cmp
cmp
mov
push
sub
mov
pop
jge
test
xlat
xchg
pop
and
add
jnp
add
ja
cmp
shld
lock
pop
jecxz
enter
stos
shll
mov
je
sub
push
int
inc
push
lret
arpl
and
insl
movsl
mov
jb
les
adc
adc
cmp
cmp
mov
sub
xchg
pusha
mov
arpl
sti
addb
adc
cmp
cmp
rcll
fsubrl
mov
cmpsl
ds
rclb
inc
gs
dec
ja
inc
dec
mov
mov
xlat
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sar
daa
fsts
jg
mov
xchg
adc
addl
clc
fidivrl
push
imul
loopne
push
aam
cmpb
mov
lods
mov
sub
ret
push
adc
popf
mov
mov
addb
adc
cmp
cmp
or
xchg
pop
shrl
popf
sarb
dec
inc
cltd
mov
outsb
adc
addb
cmp
cmp
pusha
xchg
dec
inc
adc
lahf
push
pop
cmp
jmp
addb
cmp
cmp
push
out
repnz
mov
or
dec
imul
push
sbb
adc
adc
cmp
cmp
seto
fwait
test
push
jno
cmp
xor
lea
mov
mov
mov
sbb
xchg
pop
ss
xor
iret
inc
mov
adc
adc
cmp
cmp
mov
scas
cmpsb
aaa
popa
push
loope
push
test
mov
adcb
adc
cmp
cmp
mov
sbb
lahf
adc
addb
adc
cmp
cmp
rol
pop
jp
jne
sub
testl
cmp
cmp
lds
aad
jecxz
addb
cmp
cmp
mov
es
push
or
ds
pop
pop
mov
addb
cmp
cmp
mov
je
scas
push
xlat
pusha
mov
push
loope
pushf
lds
in
inc
addb
adc
cmp
cmp
sbb
xchg
inc
xchg
push
test
mov
stc
test
mov
lock
adc
cmp
cmp
in
push
sub
adc
adc
cmp
cmp
mov
ljmp
addb
cmp
cmp
xchg
lcall
pop
mul
mov
mov
es
loope
push
add
push
xchg
icebp
jge
sub
outsb
cltd
and
ret
mov
lock
stc
sub
inc
lock
cmp
ss
ret
addb
cmp
cmp
mov
sub
cmpsb
addb
adc
cmp
cmp
jno
inc
decb
das
dec
or
addb
cmp
cmp
mov
iret
sub
adcb
adc
cmp
cmp
mov
fistpl
xchg
in
and
fisubs
insb
sub
mov
cmp
shlb
ror
push
mov
cmp
lds
xchg
addb
adc
cmp
cmp
enter
sarl
inc
mov
repz
fadds
adc
loopne
and
and
jecxz
cmp
adc
adc
cmp
cmp
mov
xorl
mov
vrsqrtss
push
addb
adc
cmp
cmp
popf
adc
inc
in
fld
jle
jge
addb
cmp
cmp
mov
or
mov
adc
adc
cmp
cmp
mov
jno
sub
push
sbb
arpl
addb
cmp
cmp
mov
add
jns
jo
xchg
loopne
subb
push
popf
out
clc
int
add
addb
cmp
cmp
mov
rorb
sar
addb
adc
cmp
cmp
in
xchg
addb
add
sub
ds
xchg
mov
addb
cmp
cmp
mov
jecxz
fldt
addb
cmp
cmp
mov
jns
or
cmp
ljmp
addb
adc
cmp
cmp
sti
push
jg
or
dec
or
mov
inc
inc
pop
and
jb
mov
lahf
push
dec
xlat
mov
push
pusha
in
ret
pushf
rcll
inc
sub
or
int
jo
sbb
cmc
sbb
mov
xlat
sub
bound
lods
mov
fcmovnbe
sub
cld
pushf
lcall
add
je
pop
loope
dec
jns
push
daa
into
cmp
clc
std
sti
es
cmc
add
xchg
or
cs
inc
rorb
lret
lret
es
loopne
imul
lahf
jb
call
push
pop
aad
addb
jnp
push
addb
adc
cmp
cmp
push
push
lcall
aaa
cbtw
add
and
inc
dec
dec
xor
addb
adc
cmp
cmp
xor
in
bound
sub
push
xchg
mov
adc
push
inc
addb
adc
cmp
cmp
addl
jmp
xchg
jns
addb
cmp
cmp
mov
mov
pop
add
fsubs
shlb
cmp
mov
cli
movl
cmp
cmp
add
or
cmp
dec
sub
pop
xchg
cli
addb
adc
cmp
cmp
adc
xor
cwtl
pusha
xchg
adc
adc
cmp
cmp
fistl
xor
dec
cmp
addb
cmp
cmp
mov
inc
hlt
add
mov
jmp
addb
cmp
cmp
add
rcll
lea
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pop
mov
outsb
inc
mov
addb
adc
cmp
cmp
rolb
fsubr
and
in
out
dec
pop
and
jmp
addb
cmp
cmp
jp
xor
xchg
into
jmp
xchg
xor
and
daa
sbb
push
loope
cmp
jo
pop
cmp
mov
sub
enter
cli
dec
jmp
mov
jns
gs
add
addb
cmp
cmp
mov
shrl
addb
cmp
cmp
popf
inc
fisubl
dec
xchg
adc
rorl
mov
int
cmp
stos
pop
fs
sbb
addb
adc
cmp
cmp
mov
jle
daa
dec
mov
addb
cmp
cmp
mov
xchg
mov
stc
mov
lods
ret
aas
lods
sbbb
addb
cmp
cmp
mov
mov
fcompl
repz
stos
push
int
fimull
out
addb
adc
cmp
cmp
sbb
inc
repz
addb
cmp
cmp
jae
ljmp
adc
cmp
cmp
mov
or
or
lahf
data16
out
cli
inc
cltd
pop
call
addb
cmp
cmp
cmpsl
mov
cwtl
xlat
int3
mov
mov
mov
fucomip
sahf
in
dec
add
outsb
outsl
fcompp
jbe
sub
push
sub
jns
sub
jge
addb
adc
cmp
cmp
mov
pop
jecxz
xchg
jns
hlt
out
xor
mov
test
jbe
mov
addb
cmp
cmp
scas
bound
cltd
imul
cld
cs
push
push
sub
loope
addb
adc
cmp
cmp
int3
hlt
add
adc
adc
cmp
cmp
les
pop
xchg
lret
popa
rorb
or
pop
or
push
repnz
cmp
mov
int
mov
sub
adc
inc
inc
addb
adc
cmp
cmp
push
icebp
xlat
bound
cmp
inc
leave
repnz
js
imul
aas
out
jmp
mov
dec
cmpsb
mov
addb
adc
cmp
cmp
inc
fsubrs
mov
loop
lods
add
push
movsl
inc
stos
xchg
cmp
inc
mov
mov
mov
adc
xchg
jb
loop
incl
adc
adc
cmp
cmp
lds
jns
addb
adc
cmp
cmp
sbb
adcb
adc
cmp
cmp
mov
push
xchg
test
shrl
jns
cmp
in
or
stos
sub
inc
clc
insl
push
int3
movsl
mov
cmp
popa
jb
mov
ret
test
jmp
inc
test
adcb
adc
cmp
cmp
mov
enter
sbb
jl
mov
scas
inc
out
outsb
rcrl
adc
cld
xor
cmp
sbb
addb
adc
cmp
cmp
sbb
das
fwait
adcb
xor
cmp
shl
fdivrs
addb
cmp
cmp
mov
add
addb
adc
cmp
cmp
pop
pushw
xchg
cmpsb
loopne
or
popa
push
xlat
and
imul
insl
movsl
ja
nop
nop
into
std
in
addb
adc
cmp
cmp
ds
negb
addb
cmp
cmp
mov
push
fisttpll
pop
aaa
xlat
addb
adc
cmp
cmp
iret
jo
comiss
out
popf
push
test
mov
jecxz
dec
xchg
ja
push
adc
pop
and
fs
push
adcb
adc
cmp
cmp
mov
arpl
stos
pop
popl
adc
adc
cmp
cmp
mov
inc
sbb
nop
sahf
mov
popa
mov
lock
xchg
addb
adc
cmp
cmp
fdivrl
jae
in
bound
adc
mov
dec
adc
xchg
ljmp
xchg
cmpsl
rolb
pop
addb
addb
cmp
cmp
mov
dec
scas
pop
test
ss
insb
shrb
ret
addb
adc
cmp
cmp
and
push
cld
pushf
nop
addb
adc
cmp
cmp
stos
mov
adcb
adc
cmp
cmp
mov
test
loopne
ret
test
into
std
mov
cmp
in
sti
sbb
xor
mov
jl
lret
pusha
push
xchg
and
outsl
sub
pop
addb
adc
cmp
cmp
lret
mov
fdivr
sahf
out
adc
cwtl
jmp
mov
rorl
jbe
aam
aam
push
adc
adc
adc
cmp
cmp
mov
rcrl
lods
incb
adc
adc
cmp
cmp
hlt
mov
and
fsubs
ret
fimuls
movsb
test
lds
subb
jp
adcb
and
addb
cmp
cmp
jno
mov
jnp
ds
lret
dec
test
adc
adc
cmp
cmp
xchg
stos
sub
cmp
addr16
sub
aaa
addb
adc
cmp
cmp
jns
loopne
push
inc
ret
addb
cmp
cmp
mov
push
sub
sub
gs
jmp
adc
adc
cmp
cmp
mov
mov
inc
ds
push
mov
jle
dec
loope
pop
mov
pop
xchg
test
jg
clc
outsl
dec
ret
test
xor
sub
adc
adc
cmp
cmp
mov
add
ja
cmpsb
shlb
addb
cmp
cmp
mov
pop
sub
fisubrl
dec
push
subl
and
movsl
in
ja
and
adc
adc
cmp
cmp
sbb
lret
sbb
xchg
jae
xchg
inc
xchg
addb
adc
cmp
cmp
fstpt
xor
mov
aam
ds
lahf
not
testb
adc
cmp
cmp
mov
fcomip
es
add
mov
out
xchg
lods
pop
add
sbb
icebp
inc
addb
adc
cmp
cmp
scas
scas
insb
ss
insl
and
add
and
adc
adc
cmp
cmp
mov
insl
mov
dec
ss
push
cltd
mov
lea
push
mov
sti
or
outsb
int
addb
cmp
cmp
mov
sbb
jg
pop
and
addb
cmp
cmp
mov
jecxz
cmp
mov
sbb
xchg
loop
sbb
adc
stos
xchg
sbb
addb
cmp
cmp
mov
fisubs
mov
push
ficoml
cmp
and
mov
mov
femms
or
mov
notb
ret
addb
cmp
cmp
out
addb
cmp
cmp
mov
add
inc
call
in
cli
shrl
jns
sub
inc
push
movsl
fdivrl
test
addb
cmp
cmp
mov
cmp
cmp
addb
adc
cmp
cmp
jmp
cmpsl
sti
addb
adc
cmp
cmp
adc
adc
adc
cmp
cmp
jle
xchg
shll
lea
sbb
cltd
inc
pushl
addb
cmp
cmp
addb
adc
cmp
cmp
je
rcrb
mov
adc
adc
cmp
cmp
mov
push
cwtl
insb
mull
stos
or
addb
adc
cmp
cmp
mov
push
adc
adc
cmp
cmp
mov
or
jns
mov
out
inc
lea
adc
adc
cmp
cmp
mov
xchg
or
mov
add
xchg
jnp
push
mov
arpl
rcll
push
aaa
inc
call
and
jbe
mov
cmp
lret
test
mov
sahf
sbb
fcomp
pop
imul
adc
cmp
cmp
mov
push
fs
loope
addb
cmp
cmp
mov
jge
jecxz
or
kmovw
cmp
push
out
sub
gs
mov
nop
loop
xchg
std
sbb
xor
idiv
outsl
mov
mov
addr16
lods
addb
adc
cmp
cmp
clc
adc
mov
rolb
aas
inc
pop
add
inc
cmpsb
sub
iret
jb
incl
lock
popf
addb
adc
cmp
cmp
addb
adc
cmp
cmp
imul
xor
test
popa
and
in
adc
std
mov
mov
addb
cmp
cmp
mov
mov
sarb
xchg
test
data16
jne
popf
test
xchg
push
dec
sub
test
jg
mov
inc
rorl
daa
lahf
inc
fcomi
pop
ss
cmp
lret
enter
ret
mov
and
dec
push
dec
aaa
mov
addb
adc
cmp
cmp
into
xchg
imul
fdivs
sbb
sbb
arpl
or
mov
xchg
sbb
shrl
addb
adc
cmp
cmp
adc
jnp
add
xchg
outsl
shrb
in
xor
push
add
addb
cmp
cmp
adc
xchg
sbbb
addb
adc
cmp
cmp
aad
fdivl
adcb
adc
cmp
cmp
mov
cmpsl
fsubp
dec
add
and
jge
sbb
ljmp
dec
ret
ficomps
sub
addb
cmp
cmp
mov
cmp
lcall
sub
fwait
or
sub
and
mov
mov
mov
adc
adc
cmp
cmp
mov
xor
cmpsb
in
aam
mov
test
pop
cwtl
jp
jl
in
cld
int3
jp,pn
dec
xor
addb
adc
cmp
cmp
pop
or
lea
xor
lcall
jo
adc
sbb
xor
adc
adc
cmp
cmp
mov
pop
sub
es
addb
adc
cmp
cmp
test
outsl
push
out
jle
jno
stos
addb
adc
cmp
cmp
push
sbb
rcrb
adc
addb
cmp
cmp
mov
out
mov
movsb
jge
xor
push
jnp
cmp
scas
addb
adc
cmp
cmp
icebp
push
push
dec
xchg
shrb
jnp
nop
ret
adc
jae
test
jne
pop
and
leave
dec
sub
sub
retw
sbb
cwtl
push
sti
cld
repnz
lret
in
cmp
daa
adc
enter
addb
adc
cmp
cmp
inc
mov
fs
inc
data16
mov
les
mov
lcall
add
cmpsl
sar
dec
rorb
xor
adc
adc
cmp
cmp
mov
mov
dec
std
xor
imul
adc
adc
cmp
cmp
stos
loop
addb
cmp
cmp
mov
or
mov
lock
adc
cmp
cmp
fwait
push
rcl
mov
adcb
adc
cmp
cmp
mov
dec
addb
adc
cmp
cmp
cmp
fwait
sub
sbb
in
addb
adc
cmp
cmp
xor
rclb
and
adc
adc
cmp
cmp
ja
push
sbb
cs
addb
adc
cmp
cmp
cltd
addb
adc
cmp
cmp
ja
push
lcall
out
flds
mov
xchg
lods
mov
sub
addb
adc
cmp
cmp
cltd
jge
mov
xchg
das
and
cwtl
repz
out
insl
mov
fidivrl
enter
jg
subl
mov
into
pusha
or
jns
jnp
stc
cmp
jnp
mov
jmp
adcb
adc
cmp
cmp
mov
out
incl
adc
adc
cmp
cmp
adc
int3
mov
dec
push
cmp
or
xor
xchg
pop
gs
lret
addb
cmp
cmp
clc
roll
fiaddl
adc
adc
cmp
cmp
mov
push
adcl
mov
adc
adc
cmp
cmp
mov
jle
push
aas
movsl
shll
xchg
fstl
or
das
sbb
in
pop
jb
iret
dec
push
cld
ja
addb
adc
cmp
cmp
mov
dec
add
out
addb
adc
cmp
cmp
aad
popa
shlb
mov
aam
pop
addr16
in
aaa
icebp
ret
cld
stos
xchg
popa
shl
pop
jge
push
inc
push
je
sub
cmpsl
push
dec
cld
adc
int
mov
ret
addb
adc
cmp
cmp
mov
rcll
pop
push
out
fcoms
cli
xchg
out
push
adcb
adc
cmp
cmp
mov
out
sahf
negl
int3
enter
addb
cmp
cmp
mov
fwait
push
xchg
or
push
add
add
adcb
adc
cmp
cmp
mov
das
cli
inc
cmp
stc
pop
xor
mov
addb
cmp
cmp
mov
inc
push
cmpb
sub
add
sub
sbb
ret
adc
addb
cmp
cmp
mov
jl
cli
pop
out
pop
mov
jae
dec
sbb
adc
adc
cmp
cmp
dec
addb
adc
cmp
cmp
iret
arpl
jge
addb
adc
cmp
cmp
leave
adc
out
sub
xor
ds
enter
lods
test
outsb
push
iret
popa
cmp
adc
xchg
cmpsl
fstpl
jle
add
lret
aam
test
push
test
mov
jb
addb
cmp
cmp
mov
ss
ret
or
test
add
push
ret
pop
mov
or
mov
cltd
ret
xchg
sub
adc
push
mov
mov
xchg
mov
push
js
loope
xchg
jne
mov
jg
pop
daa
dec
insl
sub
icebp
lock
fisubl
addb
cmp
cmp
mov
filds
push
dec
stos
push
mov
addb
cmp
cmp
dec
or
fsubrs
mov
sbb
sahf
cmp
jg
pop
xchg
inc
mov
addb
cmp
cmp
mov
into
out
rcr
sahf
xor
addb
cmp
cmp
mov
in
lret
mov
xor
inc
movsl
cmp
into
pop
decl
loop
sbb
mov
adcb
adc
cmp
cmp
mov
jbe
addb
adc
cmp
cmp
pop
push
xchg
xchg
std
mov
bound
sbb
out
pop
pop
push
addb
adc
cmp
cmp
xor
dec
addb
adc
cmp
cmp
mov
and
fs
stos
jbe
lods
dec
xor
addb
adc
cmp
cmp
jp
in
add
or
sub
mov
xor
fisttps
sub
jae
inc
push
cmp
dec
dec
cmp
call
loop
dec
lods
pop
and
test
fidivrs
loopne
pop
lahf
stos
nop
fs
pop
mov
addb
cmp
cmp
mov
mov
sub
adc
adc
cmp
cmp
hlt
mov
sbb
cwtl
xor
rcl
jmp
in
mov
jmp
mov
adc
adc
cmp
cmp
mov
mov
pop
clc
jg
pusha
gs
push
fcoml
sbb
sbb
icebp
or
inc
imul
or
lret
adc
sub
lock
mov
incb
adc
adc
cmp
cmp
adc
rorl
inc
addb
adc
cmp
cmp
roll
adc
negb
sbb
xor
addb
adc
cmp
cmp
nop
sti
std
pusha
lods
and
push
ds
mov
aas
lret
mov
sti
or
and
movsb
mov
enter
addb
cmp
cmp
test
sbb
sub
mov
test
xor
test
cli
popf
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
ss
mov
inc
push
inc
out
addb
adc
cmp
cmp
xor
divb
dec
mov
das
xor
fimuls
movsb
repz
dec
cmp
subl
fsub
aaa
cmp
pop
repnz
divl
mov
and
int3
adc
push
mov
and
arpl
adc
adcb
adc
cmp
cmp
mov
pop
xchg
insb
aam
cmpsl
inc
mov
imul
hlt
movsb
addb
adc
cmp
cmp
rorb
addb
cmp
cmp
pop
push
cs
pop
pop
jno
cmp
sbb
daa
out
test
fchs
scas
jne
sbb
dec
insl
xchg
rorl
std
std
mov
jecxz
jae
or
cmc
lahf
loop
cmpsb
adc
xor
scas
aad
movsb
add
lahf
outsl
stc
jne
or
addb
adc
cmp
cmp
in
sub
dec
mov
addb
cmp
cmp
sub
jge
push
add
pushf
push
out
add
jg
dec
jo
inc
mov
out
icebp
mov
adc
adc
cmp
cmp
mov
out
addb
adc
cmp
cmp
jnp
insb
cmp
adc
adc
cmp
cmp
mov
repnz
loopne
xor
push
pusha
xchg
mov
addb
adc
cmp
cmp
repz
xlat
mov
push
jns
cmp
iret
push
js
cmpsl
loopne
jg
fsts
pop
ss
jo
and
loope
int
mov
pop
daa
sahf
lds
lods
sti
mov
adc
sub
mov
in
or
pop
cmp
or
add
ret
dec
cs
adc
xor
adc
pop
dec
leave
daa
adc
lret
pop
sbb
and
or
xchg
push
sbb
das
cmp
push
popf
out
lret
addr16
xor
imul
or
jae
lahf
xchg
into
repnz
scas
call
andl
arpl
fistpll
and
sub
mov
popf
mov
and
jl
or
movsb
add
jne
pop
insb
cmp
shll
mov
jbe
jle
loope
pop
push
push
add
adcb
adc
cmp
cmp
mov
icebp
mov
scas
test
daa
cmp
xor
addb
adc
cmp
cmp
cmp
addb
cmp
cmp
lea
test
mov
adc
adc
cmp
cmp
sbb
mov
add
mov
out
inc
addb
adc
cmp
cmp
cltd
cmp
push
leave
add
or
lods
jns
cmpsl
notl
cmp
leave
dec
cmpsl
push
jecxz
sahf
lret
addb
adc
cmp
cmp
push
into
xchg
adc
ja
cmp
addl
pusha
scas
pop
addb
adc
cmp
cmp
aas
cmp
adc
adc
cmp
cmp
addb
adc
cmp
cmp
pushf
addb
adc
cmp
cmp
popf
inc
lahf
inc
and
xchg
nop
jecxz
fadds
adc
adc
cmp
cmp
orb
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
daa
arpl
icebp
adc
fcoml
ret
cmp
mov
addb
cmp
cmp
xor
js
hlt
in
add
addb
cmp
cmp
mov
adc
push
push
insb
and
fildll
mov
enter
addb
cmp
cmp
dec
mov
jl
sub
mov
mov
or
xchg
adc
sbb
and
outsb
data16
addb
cmp
cmp
mov
fs
xor
imul
pop
cmp
inc
ret
repz
adc
and
pop
xor
arpl
xchg
jo
out
sbb
sbb
in
shl
loop
dec
les
enter
jg
sub
sub
dec
mov
lcall
popa
aam
je
sub
adcb
adc
cmp
cmp
mov
imul
stos
ljmp
adc
cmp
cmp
mov
pop
mov
enter
das
and
sub
lahf
in
sbb
adc
mov
adc
adc
cmp
cmp
mov
outsb
mov
addb
cmp
cmp
mov
iret
jle
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
pop
xor
in
sbb
dec
ljmp
or
or
jge
leave
testl
adc
adc
cmp
cmp
mov
rolb
lods
fmull
adc
adc
cmp
cmp
mov
inc
dec
fists
push
das
xchg
mov
notl
mov
in
in
addb
cmp
cmp
mov
xlat
mov
es
addb
adc
cmp
cmp
adc
adc
cwtl
sub
ret
lea
sbb
jno
inc
jle
mov
xchg
lods
xchg
dec
je
imul
addb
cmp
cmp
mov
jg
lds
cmp
shl
movsl
mov
shll
test
addb
adc
cmp
cmp
rcll
addb
adc
cmp
cmp
push
imul
lock
fnstcw
sub
pop
bound
scas
mov
or
push
imul
sbb
adc
adc
cmp
cmp
jbe
aaa
leave
push
push
aam
inc
mov
addb
cmp
cmp
mov
imull
test
sub
mov
dec
inc
test
incb
adc
adc
cmp
cmp
pop
cli
or
cmp
mov
int
sbb
mov
push
xor
pop
mov
adc
adc
cmp
cmp
mov
loop
leave
mov
push
insb
fiadds
aam
outsl
dec
addb
adc
cmp
cmp
js
insb
aas
sub
adc
adc
cmp
cmp
mov
out
popa
insl
movsl
xchg
adcl
cmp
or
stc
add
les
mov
adcb
adc
cmp
cmp
mov
xor
sbb
pop
cmpsl
stc
push
lret
push
or
cmc
addb
adc
cmp
cmp
mov
sar
in
push
les
cmp
mov
addb
cmp
cmp
mov
stc
mov
fldt
test
out
ljmp
inc
ds
cltd
add
pop
loope
and
add
pusha
aas
and
push
fisubs
add
orb
das
addb
adc
cmp
cmp
cmp
test
in
pop
add
and
push
aam
mov
pop
pop
and
adc
adc
cmp
cmp
enter
xor
rolb
adc
adc
cmp
cmp
stc
call
clc
jecxz
popa
div
repnz
xor
add
fs
push
mov
add
std
inc
push
pop
shr
fiaddl
or
andb
add
pand
aad
xor
mov
mov
adcb
adc
cmp
cmp
mov
cld
xor
sub
xchg
cmp
addb
adc
cmp
cmp
les
test
adc
ss
addb
adc
cmp
cmp
ret
adcb
addb
cmp
cmp
mov
jl
insb
addb
adc
cmp
cmp
nop
mov
mov
sbb
aam
cmp
sbb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
ja
push
cmp
adc
adc
adc
cmp
cmp
mov
cmp
nop
add
aas
dec
xor
ljmp
test
test
loop
addb
cmp
cmp
mov
stc
mov
vmovd
roll
sub
lds
ja
cmpsl
orb
std
pop
cmp
stc
sub
mov
outsb
fidivl
jle
xor
into
pop
mov
jbe
lea
adc
adc
cmp
cmp
divl
mov
gs
pop
or
inc
lods
ret
mov
adc
adc
cmp
cmp
sbb
rcr
add
push
mov
int3
imul
shl
mov
pop
int3
mov
lret
lcall
fildl
adc
adc
cmp
cmp
mov
inc
cmp
lods
add
xchg
popa
add
and
in
pop
jg
push
sarl
lcall
inc
addb
adc
cmp
cmp
push
or
out
or
adc
adc
cmp
cmp
push
mov
lock
adc
cmp
cmp
dec
mov
movsl
and
mov
add
pop
jbe
lcall
addb
cmp
cmp
push
jns
ss
jg
std
or
xor
addb
cmp
cmp
inc
mov
mov
addb
adc
cmp
cmp
jecxz
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
scas
jns
xchg
ljmp
cld
cmpb
popf
adc
push
cli
decb
hlt
lods
addb
adc
cmp
cmp
fdivrl
imul
cltd
mov
test
aaa
std
cmp
out
addb
cmp
cmp
mov
push
mov
addb
cmp
cmp
dec
loope
xor
testb
movsb
sbb
push
notb
push
cmc
scas
or
cwtl
scas
leave
mov
mov
out
addb
adc
cmp
cmp
popa
pop
sub
dec
mov
or
loope
fs
dec
in
jecxz
sbb
cmp
addb
adc
cmp
cmp
xchg
inc
sahf
repz
or
mov
leave
pop
into
lds
ret
addb
cmp
cmp
mov
xchg
test
adcb
adc
cmp
cmp
mov
out
dec
shll
pop
fimull
jnp
inc
mov
addb
cmp
cmp
jg
popf
sbb
shll
jmp
and
addb
cmp
cmp
mov
test
lcall
mov
pushf
data16
movsb
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
add
xlat
in
iret
bound
fdivrs
adc
push
adc
or
out
mov
repz
sar
jnp
test
fwait
pop
push
hlt
ja
fs
mov
stos
xorb
les
xchg
push
lret
fistpl
ds
jns
pop
pop
add
es
cld
in
addb
adc
cmp
cmp
jmp
xchg
jae
push
icebp
gs
inc
xchg
pop
pop
out
dec
pushf
push
sarl
in
cmp
int
mov
cmp
lret
insl
lahf
push
and
mov
jl
xchg
or
inc
fnstenv
inc
aaa
nop
push
mov
pop
push
popf
cltd
popf
mov
cs
sub
fsubrs
sahf
push
int3
sti
cli
fstpl
xchg
jmp
mov
xchg
add
fisubrl
and
fs
xor
addb
cmp
cmp
mov
out
fcmovnb
adc
jnp
int3
mov
mov
lahf
add
add
inc
dec
rcrb
mov
adc
xor
push
pop
mov
ficompl
mov
add
push
xchg
cmp
sarl
ffree
sarb
aaa
push
les
roll
adc
cmp
cmp
mov
push
dec
push
and
das
mov
je
rcrb
dec
dec
mov
sbb
xchg
dec
push
xor
test
jg
bound
cmp
mov
mov
addb
cmp
cmp
mov
scas
addb
adc
cmp
cmp
mov
les
cmp
cmp
push
sti
mov
inc
cld
mov
fldt
js
pusha
aad
imul
cmp
cmp
fiaddl
jg
addb
adc
cmp
cmp
xchg
push
xor
xchg
jecxz
sub
xor
dec
pushf
in
xor
and
xchg
loopne
addb
adc
cmp
cmp
fwait
std
movsl
push
lret
int3
and
jl
jecxz
or
pop
int
in
sbb
mov
mov
adc
adc
cmp
cmp
mov
nop
xchg
fidivs
popa
fsubr
pop
mov
dec
cmpsl
or
mov
testb
ss
cwtl
shrb
or
sub
pop
jecxz
xor
imul
mov
pop
addb
adc
cmp
cmp
inc
sbb
pop
andl
imul
xchg
adcb
adc
cmp
cmp
mov
cmp
addb
adc
cmp
cmp
stos
dec
mov
es
into
inc
xchg
in
gs
addb
adc
cmp
cmp
cli
inc
cmp
ja
addb
cmp
cmp
mov
jnp
scas
aas
sub
adcb
adc
cmp
cmp
mov
icebp
rcr
test
repnz
dec
ret
addb
adc
cmp
cmp
add
outsl
dec
mov
add
rol
or
daa
je
inc
mov
push
arpl
lcall
mov
lock
filds
adc
adc
cmp
cmp
mov
aam
pop
sub
testb
adc
cmp
cmp
mov
shrl
push
mov
dec
into
adc
xchg
mov
cmp
cli
mov
addb
adc
cmp
cmp
add
mov
adcb
adc
cmp
cmp
mov
test
roll
addb
adc
cmp
cmp
lret
mov
sub
mov
cmc
fcmovnu
dec
addb
adc
cmp
cmp
flds
adc
adc
cmp
cmp
adc
addb
cmp
cmp
mov
push
push
lea
addb
cmp
cmp
lods
push
push
fstpt
mov
jmp
sub
hlt
jnp
push
push
lcall
pop
push
push
aam
addb
cmp
cmp
mov
cli
mov
dec
insb
push
test
cld
pusha
jae
enter
mov
cld
inc
cwtl
xor
adc
adc
cmp
cmp
mov
pop
inc
dec
sub
andnps
out
jmp
or
stos
dec
mov
fwait
sahf
cltd
das
push
cmpsb
insl
lahf
std
mov
pop
add
into
das
sub
pushl
pop
xchg
mov
mov
jp
rorl
gs
addb
adc
cmp
cmp
adc
fisubs
sub
sbb
push
subb
push
xchg
inc
xchg
rcl
addb
adc
cmp
cmp
cwtl
lahf
mov
mov
int3
sub
dec
pop
addb
adc
cmp
cmp
outsb
add
cmc
add
ss
ret
pop
rcrl
stc
inc
pop
sbb
xchg
jg
sub
sub
addb
cmp
cmp
mov
shl
cmpsl
push
jmp
out
in
mov
xor
push
jns
jbe
aas
pushf
fstps
popf
scas
repnz
ret
mov
cmp
mov
out
scas
and
mov
push
leave
fists
xchg
mov
fcompl
insb
mov
dec
xchg
add
adc
adc
cmp
cmp
mov
cmp
icebp
scas
imulb
adc
cmp
push
pop
xor
daa
mov
adcb
adc
cmp
cmp
mov
mov
xchg
adc
adc
cmp
cmp
mov
in
jnp
sarl
les
adc
adc
cmp
cmp
inc
stos
inc
sbb
xor
pushf
adc
stos
data16
lcall
adc
adc
cmp
cmp
mov
lock
loope
lds
xchg
daa
lcall
jo
lods
lret
add
scas
pop
xor
xchg
adc
mov
xorb
cmc
jbe
stc
sbb
rcl
or
repz
jl
sar
cmpsl
outsl
push
dec
jnp
loopne
rorb
pop
enter
je
jle
arpl
push
xorl
addb
cmp
cmp
mov
cmp
addb
cmp
cmp
mov
xor
test
ds
cltd
dec
mov
outsl
lahf
hlt
adc
xor
pop
jno
addb
cmp
cmp
mov
add
in
mov
dec
add
les
mov
test
or
stos
out
clc
push
sbb
inc
fiadds
adc
adc
cmp
cmp
mov
addr16
pop
and
adcb
adc
cmp
cmp
mov
lods
xchg
xchg
les
add
adc
adc
cmp
cmp
test
roll
mov
sbb
mov
push
adc
lds
xchg
dec
pop
dec
or
ljmp
pop
lds
sti
jge
imul
lret
pop
sbb
es
out
in
lds
int3
lret
out
cmp
dec
fstpl
push
cmpsl
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
add
xchg
mov
addb
adc
cmp
cmp
pusha
xchg
add
hlt
and
cmpl
mov
pushf
in
adc
ds
js
addb
cmp
cmp
mov
imul
test
sub
adcl
shrb
sub
and
addb
adc
cmp
cmp
dec
cltd
addb
adc
cmp
cmp
lock
lcall
imul
push
decl
insl
jg
jp
int
xchg
mov
addb
adc
cmp
cmp
jle
outsl
in
loop
adc
pushf
inc
push
sub
sub
cmp
es
mov
and
add
stos
mov
sbb
rcl
ljmp
iretw
or
test
sahf
jae
mov
xor
outsl
jno
test
push
add
out
out
mov
sbb
imul
je
jne
cwtl
adc
int3
std
nop
loop
fldcw
adc
adc
cmp
cmp
mov
pusha
cmp
stc
xor
inc
out
test
mov
stc
iret
mov
ret
mov
lods
ja
dec
mov
aaa
addb
adc
cmp
cmp
adcb
mov
and
jg
xchg
stos
mov
addb
cmp
cmp
mov
in
inc
dec
mov
inc
jae
outsl
pop
rclb
dec
les
rclb
int
addb
cmp
cmp
mov
fbstp
jecxz
dec
pop
lcall
addb
cmp
cmp
dec
or
adcb
adc
cmp
cmp
mov
and
rorb
into
addb
adc
cmp
cmp
mov
add
addb
cmp
cmp
test
addb
cmp
cmp
mov
sbb
jne
addb
cmp
cmp
mov
push
mov
imul
adc
adc
cmp
cmp
mov
ja
push
inc
lahf
sarl
aam
fimuls
aam
mov
adc
adc
cmp
cmp
mov
fwait
loope
push
ja
in
mov
pusha
jbe
aas
jnp
sub
addb
cmp
cmp
mov
or
push
hlt
in
pop
cli
aam
imul
loopne
into
xlat
ret
sub
jbe
push
inc
roll
hlt
mov
push
jecxz
xor
ret
push
or
push
cmp
adc
adc
cmp
cmp
mov
call
adc
adc
cmp
cmp
mov
inc
and
addb
cmp
cmp
mov
pop
lahf
pop
and
pop
cmp
daa
out
pop
fidivrl
outsb
sub
mov
hlt
sbb
sub
or
pcmpeqw
std
and
cli
mov
fisttps
xchg
imul
or
dec
test
icebp
jb
push
jmp
pop
mov
sti
sti
inc
enter
add
out
cld
subl
or
dec
dec
pop
dec
inc
mov
test
jmp
dec
xchg
pop
addb
adc
cmp
cmp
inc
ficoml
or
xor
sub
pop
in
ljmp
sub
add
in
cmp
in
inc
outsb
jo
push
inc
jg
addb
cmp
cmp
mov
inc
xchg
cli
stc
adcb
leave
icebp
and
lret
inc
pop
mov
loopne
inc
xor
inc
push
shrl
addb
cmp
cmp
mov
fwait
das
sub
in
push
icebp
call
cmp
addb
cmp
cmp
mov
out
mov
adc
adc
cmp
cmp
mov
push
adcl
leave
cmp
sahf
inc
incl
xor
xor
mov
addb
cmp
cmp
mov
js
addb
adc
cmp
cmp
push
jbe
dec
jecxz
addb
cmp
cmp
mov
or
adc
shlb
lret
mov
jne
fs
iret
fcompl
lcall
xorl
add
sbb
adc
adc
cmp
cmp
mov
pop
xchg
mov
and
add
aam
mov
dec
into
roll
jo
sub
aad
push
scas
push
adc
adc
cmp
cmp
mov
and
lea
sbb
pop
pushf
jle
call
inc
adc
add
out
cwtl
mov
adc
adc
cmp
cmp
mov
cmc
repz
into
andb
call
pop
push
imul
adc
cmp
cmp
mov
outsb
push
subl
pop
push
jp
adc
insb
mov
push
addb
adc
cmp
cmp
push
mov
enter
test
lret
inc
fwait
xlat
sbb
mov
mov
adcb
adc
cmp
cmp
mov
cwtl
jle
or
adcb
adc
cmp
cmp
mov
jg
dec
add
rolb
adc
cmp
cmp
mov
inc
jo
cmp
clc
pop
scas
addb
adc
cmp
cmp
repnz
addb
adc
cmp
cmp
pushf
scas
rorl
jbe
call
addb
cmp
cmp
jns
sahf
adc
xchg
pop
leave
sub
in
addb
adc
cmp
cmp
fisubs
stos
aam
pop
insl
sar
cmp
aad
dec
sbb
pop
pop
loopne
iret
xchg
insl
cwtl
scas
je
lret
addb
cmp
cmp
mov
pop
nop
cmpb
jbe
cmp
adc
adc
cmp
cmp
nop
pop
inc
stos
cmp
sbb
loopne
mov
arpl
addb
cmp
cmp
cmpsl
mov
popf
cli
jle
dec
inc
nop
sbb
push
js
pop
lret
out
ret
fimuls
ret
bound
adc
adc
cmp
cmp
mov
std
js
addb
adc
cmp
cmp
orb
adc
adc
cmp
cmp
mov
repz
push
adc
push
shlb
fsubrs
clc
dec
cmp
lcall
lods
int
mov
addb
cmp
cmp
mov
lret
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
cmpl
mov
adcb
adc
cmp
cmp
mov
pop
jmp
jg
fs
xchg
addb
adc
cmp
cmp
adc
je
addb
adc
cmp
cmp
inc
mov
addb
adc
cmp
cmp
pshufw
aaa
clc
mov
xchg
inc
addb
adc
cmp
cmp
cmc
gs
imul
pop
icebp
scas
xor
roll
shl
inc
sub
insl
and
scas
jecxz
in
hlt
pop
movb
adc
cmp
cmp
mov
push
shufps
inc
cld
int3
shlb
jl
inc
lret
or
sbb
dec
in
sub
xchg
xchg
cwtl
mov
push
dec
or
xor
push
sub
cmp
sti
pop
in
sbb
sbb
addb
adc
cmp
cmp
in
jmp
xchg
addb
adc
cmp
cmp
mov
lcall
addb
cmp
cmp
mov
jno
das
in
dec
in
int
lret
xor
push
inc
jmp
addb
cmp
cmp
mov
aas
je
fstpl
cmp
clc
inc
addb
adc
cmp
cmp
cmp
adcb
adc
cmp
cmp
mov
out
addb
cmp
cmp
mov
shll
xchg
icebp
pop
push
adcb
adc
cmp
cmp
mov
pop
cmp
cwtl
popa
filds
inc
adc
adc
adc
cmp
cmp
mov
in
fs
jno
movl
addb
adc
cmp
cmp
js
leave
mov
jg
inc
cmp
sbb
scas
lds
mulb
dec
leave
jns
loopne
aas
mov
and
repnz
out
imul
addb
adc
cmp
cmp
and
inc
mov
popa
shrl
mov
addb
cmp
cmp
mov
loope
data16
testl
cmp
cmp
addb
adc
cmp
cmp
jo
xor
mov
movsb
lcall
addb
adc
cmp
cmp
ljmp
addb
cmp
cmp
xchg
adc
in
mov
push
inc
sub
add
imul
or
fistl
adc
test
pop
mov
add
fildl
loopne
fadds
inc
mov
cmp
movsl
inc
mov
fwait
sub
push
pop
mov
addr16
loop
jle
or
std
xacquire
cmp
arpl
sbbb
aad
cmp
pop
dec
adc
mov
fnsave
mov
xchg
adc
addb
cmp
cmp
mov
xor
loop
mov
clc
mov
mov
loopne
lods
mov
sbb
mov
iret
cs
addb
adc
cmp
cmp
pop
or
adc
adc
cmp
cmp
push
cmp
fdivrl
push
bound
sub
pop
jbe
aas
add
in
iret
xor
jl
mov
test
inc
repnz
sti
addb
adc
cmp
cmp
out
mov
push
jmp
pop
add
mov
mov
shrb
mov
add
addb
cmp
cmp
mov
inc
jbe
xchg
mov
mov
mov
cmp
hlt
js
ljmp
adc
adc
cmp
cmp
jnp
addb
adc
cmp
cmp
inc
mov
mov
xchg
xchg
dec
adc
adc
adc
cmp
cmp
stc
rdtsc
or
sub
sbb
jo
sbb
ficoml
adc
push
pop
aas
mov
arpl
sub
mov
addb
adc
cmp
cmp
int3
std
in
scas
in
insl
out
lahf
xchg
rolb
adcb
adc
cmp
cmp
mov
push
insl
jmp
lods
dec
xchg
mov
push
stos
lret
addb
adc
cmp
cmp
cmp
hlt
loope
negb
cmp
sbb
inc
pop
mov
sub
cmp
sub
cs
addb
adc
cmp
cmp
push
cmpsb
dec
lahf
jle
subb
addb
adc
cmp
cmp
test
call
sub
cmp
push
jno
mov
int
pop
sub
sarl
loop
mov
subb
adcb
adc
cmp
cmp
mov
push
daa
inc
xchg
sub
mov
dec
lcall
add
xor
roll
iret
push
cmp
fldt
push
add
ret
test
fisubrl
sub
mov
fxtract
fisttpll
push
scas
jmp
loopne
insl
insb
pusha
xchg
fdivrl
jnp
cld
jne
movl
mov
and
adc
adc
cmp
cmp
mov
jo
or
mov
or
stos
mov
push
pop
fidivrl
mov
sbb
push
ds
out
pop
test
loop
test
aas
mov
mov
out
addb
cmp
cmp
mov
sbb
pushf
lods
pop
std
push
addb
adc
cmp
cmp
outsb
imul
pushf
mov
addb
adc
cmp
cmp
pop
es
mov
push
mov
mov
push
addb
adc
cmp
cmp
inc
nop
cld
fistps
in
in
bound
cmpsl
inc
rorb
testl
or
addb
cmp
cmp
mov
xchg
or
addb
cmp
cmp
mov
test
and
pop
adc
jmp
insl
stc
mov
addb
cmp
cmp
mov
movsl
gs
movsb
mov
cld
fsub
jo
js
pop
push
movsb
xchg
mov
sbb
push
inc
stc
aas
addb
adc
cmp
cmp
jbe
addb
cmp
cmp
mov
loopne
push
into
cmp
shrl
addb
cmp
cmp
pop
jb
sbb
inc
incb
lahf
call
int3
xor
addb
cmp
cmp
add
in
sub
addb
adc
cmp
cmp
mov
mov
les
adc
adc
cmp
cmp
mov
cmp
int3
xor
adc
adc
cmp
cmp
mov
enter
dec
pop
stos
out
jbe
mov
pop
mov
popf
and
sti
add
adc
adc
cmp
cmp
shrb
aas
or
xchg
mov
adcb
adc
cmp
cmp
mov
in
in
sti
xor
sbb
int3
aam
inc
outsl
addb
adc
cmp
cmp
jp
cld
pop
and
sub
in
test
sub
and
jge
int
sub
cmp
adc
pop
das
into
idivb
add
xchg
push
sub
stos
jge
cli
mov
imull
addb
cmp
cmp
mov
add
fsubl
xchg
xor
dec
cs
sub
jge
sahf
ljmp
sbb
xor
and
addb
cmp
cmp
xor
jae
xor
jae
cltd
pusha
test
lods
add
leave
push
or
loope
add
add
cld
fwait
in
cltd
pop
ret
sarl
jg
and
icebp
fisubl
mov
xchg
clc
pop
and
addb
cmp
cmp
mov
fwait
mov
jae
addb
adc
cmp
cmp
cmp
repz
mov
pop
push
sub
push
fcoms
cmp
sbb
xchg
inc
push
cs
jp
xor
xor
mov
rcll
mov
cmpsl
mulb
and
adc
adc
cmp
cmp
mov
xor
icebp
addr16
jecxz
xchg
push
ret
mov
mov
in
adc
adcb
adc
cmp
cmp
mov
xor
push
in
sub
addr16
in
imul
stos
aad
imul
and
addb
adc
cmp
cmp
lahf
fmuls
mov
adc
xor
fwait
jb
add
pop
cmp
or
mov
jo
inc
cld
push
icebp
test
adcb
adc
cmp
cmp
mov
sarl
jge
jl
push
sbb
es
add
dec
ret
add
xlat
mov
jne
cmp
xor
fldl
iret
lret
dec
in
lret
mov
lcall
test
movsl
mov
xchg
adc
cmp
cmp
mov
addb
adc
cmp
cmp
jg
sahf
jne
xor
jecxz
loop
pop
mov
or
cli
xor
mov
xchg
in
hlt
fsubrl
dec
movsl
repz
js
div
xor
roll
jns
repnz
addb
cmp
cmp
mov
xor
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sahf
xchg
mov
les
jnp
cmc
mov
mov
sub
jno
cmp
mov
add
or
lahf
cli
jnp
xchg
ss
pop
sbb
shl
sbb
aam
xlat
imul
and
or
pusha
addb
adc
cmp
cmp
xor
gs
outsl
xor
pop
pop
lret
add
nop
cltd
call
stos
and
xor
adc
jge
adc
jle
sub
pop
mov
daa
sbb
lret
mov
jmp
jnp
aaa
cltd
push
push
jp
ja
sbb
rol
nop
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
fldcw
sahf
enter
add
out
inc
aaa
xchg
mov
adc
adc
cmp
cmp
jno
out
sbb
add
and
test
xchg
push
daa
popa
scas
std
sarb
insb
leave
mov
in
sub
jne
pop
addb
adc
cmp
cmp
mov
and
mov
mov
adcb
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
pop
dec
jg
pusha
insb
add
ret
addb
adc
cmp
cmp
insb
stos
pop
std
or
or
data16
fnstcw
rcr
fdivr
es
add
call
decl
stc
and
add
inc
push
loope
mov
je
mov
addb
cmp
cmp
test
bound
mov
addb
adc
cmp
cmp
sub
push
pushf
adc
ss
sub
mov
pop
sub
xor
jnp
std
addb
adc
cmp
cmp
repnz
outsb
js
das
iret
mov
mov
lods
test
insb
sub
dec
dec
out
cmp
sahf
repz
add
inc
mov
nop
je
cmp
adc
adc
cmp
cmp
mov
rol
enter
addb
adc
cmp
cmp
xchg
rcrb
mov
push
push
inc
mov
jnp
lret
pusha
jbe
pushf
mov
jge
cld
ret
addb
cmp
cmp
mov
imul
dec
cmpsl
cld
aam
clc
sti
iret
sub
in
xchg
push
lods
cmp
cmp
mov
test
inc
popf
insb
aas
lds
rorb
lahf
mov
and
addb
adc
cmp
cmp
xchg
test
add
cld
aas
sbb
addb
adc
cmp
cmp
xor
cmpsb
loope
rclb
test
lock
sub
call
adcb
adc
cmp
cmp
mov
mov
push
fisubrl
mov
and
arpl
adc
adc
push
faddl
aad
push
stos
test
add
daa
xor
cs
push
or
ss
test
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
mov
in
ret
cmpsl
loopne
adc
adc
adc
cmp
cmp
addb
adc
cmp
cmp
call
push
dec
mov
push
adc
mov
movsb
shll
push
inc
xor
imul
addl
sub
addb
cmp
cmp
mov
mov
add
jmp
shrb
je
idivb
in
arpl
fstpt
xchg
adc
adc
cmp
cmp
subl
jge
push
in
dec
jp
mov
cmc
xor
loope
fimull
adc
fwait
sub
push
test
rcrl
xchg
insl
mov
adc
addb
adc
cmp
cmp
lods
sub
sbb
iret
into
xor
imul
les
add
or
cmp
mov
js
cmp
mov
test
mov
mov
fcompl
sub
mov
repz
dec
into
std
xchg
aas
cmp
in
shll
icebp
test
dec
dec
gs
pop
gs
movsb
hlt
cmp
xchg
stos
shlb
mov
mov
cmp
iret
push
xlat
lock
aad
addb
adc
cmp
cmp
adc
sub
cmpsl
out
xchg
jns
addb
adc
cmp
cmp
fs
shrb
lock
push
scas
pop
fucomip
sbb
adc
adc
cmp
cmp
mov
and
bound
lcall
addb
cmp
cmp
mov
sbb
shrb
imul
pop
cmpsb
mov
cmc
inc
fisubrs
push
inc
jecxz
addb
cmp
cmp
mov
adc
jg
mov
movsl
stc
ss
add
stos
in
push
and
lahf
add
adc
pop
out
push
hlt
xchg
pop
inc
addb
adc
cmp
cmp
xchg
out
in
pop
lods
daa
inc
inc
addb
adc
cmp
cmp
inc
decb
or
test
dec
dec
push
cmp
aam
push
cmp
adc
adc
cmp
cmp
mov
mov
rorb
outsl
iret
mov
iret
aaa
cmp
adc
sbb
sub
lock
stc
addb
adc
cmp
cmp
xchg
fistpl
mov
iret
addb
adc
cmp
cmp
cmpsb
loop
aad
pop
ret
addb
cmp
cmp
mov
xchg
fs
sbb
jbe
add
jl
cmp
addb
cmp
cmp
inc
dec
call
imul
dec
jns
idivl
ja
ret
jae
lods
or
jb
pop
push
xchg
xor
jge
addb
adc
cmp
cmp
cs
or
sbb
in
mov
jo
and
xor
adc
adc
adc
cmp
cmp
cli
cmpsl
mov
in
push
sub
and
xor
addb
adc
cmp
cmp
xorb
xchg
lds
and
addb
cmp
cmp
mov
icebp
js
jl
dec
addr16
or
test
sbb
dec
rcr
divb
add
mov
cmp
std
jge
insl
addb
adc
cmp
cmp
leave
mov
xchg
pop
sub
adcb
adc
cmp
cmp
mov
fldl
jno
repz
mov
cld
les
addb
cmp
cmp
xor
popa
addb
adc
cmp
cmp
shlb
sahf
dec
addr16
lods
mov
movsl
adc
loop
addr16
flds
in
jge
sbb
xor
addb
cmp
cmp
mov
mov
dec
outsl
mov
add
adcl
test
divb
dec
shrb
sub
addb
cmp
cmp
xchg
jge
or
adc
pop
cmpsl
popa
faddl
adc
adc
cmp
cmp
decl
cs
inc
dec
je
scas
in
test
adc
adc
cmp
cmp
cwtl
lds
inc
dec
xor
outsb
iret
inc
lods
add
loop
addb
cmp
cmp
mov
xor
xchg
dec
pop
xchg
and
scas
fs
dec
test
adc
adc
cmp
cmp
cmp
inc
movsb
add
scas
pop
pop
push
jns
mov
lahf
lods
inc
jne
cld
addb
adc
cmp
cmp
xchg
stc
roll
in
pop
push
idivb
jo
add
sub
or
lret
stos
jb
sbb
in
icebp
pinsrw
gs
sbb
push
sub
xchg
in
addb
adc
cmp
cmp
divl
idivb
mov
scas
jp
mov
mov
sub
dec
jge
addb
adc
cmp
cmp
add
dec
dec
jmp
mov
movsl
inc
imul
or
sarl
jae
or
pop
adc
adcb
adc
cmp
cmp
mov
jae
push
fwait
int3
loope
test
and
movsl
mov
addb
adc
cmp
cmp
sub
push
out
mov
in
addb
adc
cmp
cmp
push
popf
out
pusha
scas
jo
test
ss
in
leave
std
cli
adc
daa
imulb
cmp
adc
or
scas
outsl
inc
ss
fsts
dec
repz
ret
les
mov
dec
jno
addb
cmp
cmp
mov
pop
pop
addb
and
mov
lods
into
dec
mov
pop
test
mov
scas
mov
jo
mov
dec
add
daa
movsl
pop
ret
or
push
in
in
pop
jne
addb
adc
cmp
cmp
imul
mov
jmp
ss
aad
lahf
cmpsl
add
mov
push
gs
adc
adc
cmp
cmp
sub
push
xchg
adc
mov
and
push
cld
aas
movsl
mov
adc
xchg
cmp
adc
adc
cmp
cmp
idivb
ja
outsl
mov
imul
or
aas
addb
adc
cmp
cmp
jb
std
flds
adc
adc
cmp
cmp
jl
test
adc
adc
adc
cmp
cmp
or
or
pop
sbbb
addb
cmp
cmp
push
mov
fcomi
addl
adc
cmp
cmp
mov
adc
cmc
cli
mov
jge
mov
lret
mov
addb
adc
cmp
cmp
sarl
cmp
fbld
test
add
xchg
shlb
mov
mov
adc
cld
addb
adc
cmp
cmp
add
mov
sbb
add
insl
adc
cmp
ret
jge
insl
mov
addb
adc
cmp
cmp
jbe
xor
push
movsl
popa
lahf
xchg
push
xchg
out
mov
push
stc
mov
push
test
adc
adc
cmp
cmp
push
pop
aaa
int3
sahf
dec
movsl
addb
adc
cmp
cmp
xlat
fdivrs
addb
cmp
cmp
mov
ljmp
adc
adc
cmp
cmp
mov
in
xor
fwait
pushf
jns
mov
and
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
fsubl
addb
adc
cmp
cmp
fiaddl
mov
and
mov
adcb
adc
cmp
cmp
mov
cltd
repz
les
mov
js
ds
ja
xor
mov
sub
imul
inc
jl
addb
adc
cmp
cmp
adc
mov
mov
or
lahf
addb
adc
cmp
cmp
push
push
ds
loopne
repz
rol
test
fwait
xor
sbb
out
adc
addb
adc
cmp
cmp
xchg
cli
or
std
cltd
ret
inc
mov
jmp
inc
iret
mov
xchg
inc
aad
push
sub
test
add
clc
dec
mov
inc
xor
sub
lea
sbb
stos
mov
shll
adc
add
pop
lret
xor
imulb
xchg
sbb
adcb
adc
cmp
cmp
mov
jp
ljmp
ficoml
rcll
js
cmp
gs
addb
adc
cmp
cmp
mov
mov
addl
dec
in
mov
cmp
in
lcall
jp
scas
xor
stos
mov
mov
jmp
cmp
adc
imul
addb
adc
cmp
cmp
fwait
stos
popf
adc
adcb
adc
cmp
cmp
mov
test
sub
into
xor
or
repnz
push
hlt
daa
mov
adc
sbb
adc
adc
cmp
cmp
mov
repnz
inc
out
xchg
in
movsb
mov
outsb
dec
test
insl
loope
push
pop
pop
pop
jecxz
pop
repz
addb
adc
cmp
cmp
jno
addb
adc
cmp
cmp
pushf
jns
cmpsl
std
addr16
popf
test
and
fwait
lcall
pop
sbb
jl
addb
adc
cmp
cmp
insl
mov
sti
movb
addb
adc
cmp
cmp
mov
das
loopne
fiaddl
jae
leave
push
in
popa
inc
adc
inc
push
addb
adc
cmp
cmp
loop
jp
outsb
jp
mov
dec
or
adc
adc
cmp
cmp
test
aaa
adc
test
pop
dec
mov
adcb
adc
cmp
cmp
mov
or
jl
push
and
add
mov
sub
and
test
addb
cmp
cmp
mov
cmpsl
mov
push
sahf
dec
adc
mov
addb
cmp
cmp
test
sub
xlat
and
mov
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
lock
or
mov
xchg
addb
adc
cmp
cmp
pop
js
pop
add
nop
mov
add
pushf
and
cmp
push
popf
and
push
dec
repnz
dec
cs
jbe
inc
push
lret
fsubr
mov
inc
and
data16
xor
js
stc
xchg
faddl
test
imul
mov
faddl
adc
fwait
or
cwtl
and
adc
adc
cmp
cmp
mov
dec
sti
adc
flds
push
aaa
jae
jne
aam
sti
pop
clc
sarb
stos
adc
mov
punpckhdq
inc
scas
or
xor
test
jne
lcall
sbb
cld
pop
pop
loopne
adc
lret
xchg
rcrl
rolb
cmp
std
fidivl
test
popl
adc
adc
cmp
cmp
fs
jns
addb
adc
cmp
cmp
sbb
rcrb
push
mov
adc
adc
cmp
cmp
mov
or
push
aam
addb
adc
cmp
cmp
out
or
fwait
sbb
addb
cmp
cmp
push
addb
adc
cmp
cmp
shrl
aam
bound
mov
test
insl
in
loopne
mov
shrb
dec
ja
gs
jmp
adc
movlps
dec
mov
ljmp
inc
movsl
pusha
push
push
sbb
leave
and
lods
insl
scas
aas
lods
mov
out
lods
xor
or
leave
popa
cmp
inc
jg
addb
cmp
cmp
mov
aad
rorb
rorb
adc
addb
adc
cmp
cmp
mov
inc
outsl
cmp
xchg
push
xchg
out
inc
sahf
data16
adc
cmp
cmp
test
lahf
jp
or
out
cmp
sarb
jge
xchg
or
addb
adc
cmp
cmp
push
mov
adc
push
fistl
xor
adc
fdiv
mov
stos
fldl
mov
fisubs
pop
scas
sbb
lods
fistps
mov
ret
xchg
jp
out
and
int3
mov
mov
pop
xchg
addb
adc
cmp
cmp
ds
adc
adc
cmp
cmp
imul
adcb
adc
cmp
cmp
mov
sbbl
popf
rorb
sbb
sub
mov
jb
or
push
addb
cmp
cmp
ljmp
nop
or
sbb
mov
or
adc
popf
out
test
rcll
aaa
mov
jb
aaa
out
pop
daa
addb
adc
cmp
cmp
and
dec
xor
leave
repnz
xchg
inc
addb
adc
cmp
cmp
push
in
rcr
mov
sbb
cmp
addb
adc
cmp
cmp
mov
addb
cmp
cmp
push
adcb
adc
cmp
cmp
mov
popa
in
leave
cltd
ljmp
repz
inc
xchg
pop
inc
ss
or
adc
adc
cmp
cmp
push
insl
and
sbb
adcb
adc
cmp
cmp
mov
ret
pop
daa
xor
adcb
adc
cmp
cmp
mov
stos
loopne
or
or
adcb
adc
cmp
cmp
mov
aaa
xchg
outsl
shll
addb
adc
cmp
cmp
cmp
mov
push
sbb
adc
adc
cmp
cmp
adc
sub
test
push
addb
cmp
cmp
mov
xchg
mov
enter
and
and
adc
adc
cmp
cmp
mov
xor
pop
int3
fsub
fnstsw
pop
in
data16
addb
adc
cmp
cmp
xchg
sti
cwtl
dec
dec
packuswb
test
inc
sbb
adcb
adc
cmp
cmp
mov
adc
ss
pop
in
addb
cmp
cmp
mov
popf
dec
insl
test
aas
push
fildl
adc
adc
cmp
cmp
inc
xlat
xchg
faddp
mov
adc
adc
cmp
cmp
jno
xor
lods
addb
adc
cmp
cmp
xchg
cld
jmp
mov
addb
cmp
cmp
mov
jge
insb
pop
adc
xor
and
dec
fcompl
xorb
ds
or
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
sarb
mov
addb
adc
cmp
cmp
xchg
push
dec
dec
call
adcb
adc
cmp
cmp
mov
xchg
jecxz
mov
das
idivl
jmp
lret
ss
add
ljmp
mov
addb
cmp
cmp
dec
sbb
inc
scas
sub
jne
jb
lds
stc
mov
ret
scas
xor
lret
test
mov
jl
call
or
imul
addb
cmp
cmp
not
push
sti
dec
jp
cltd
xorl
inc
test
lcall
dec
mov
sbb
fldt
push
lock
loope
popf
hlt
fisubrl
cld
and
fsubr
xor
xor
sahf
aas
shll
addb
cmp
cmp
mov
mov
push
mov
pop
adc
call
mov
lcall
adcb
adc
cmp
cmp
mov
int
addb
adc
cmp
cmp
push
fldenv
jae
push
inc
orb
jmp
dec
popa
in
mov
addb
cmp
cmp
mov
addb
inc
shlb
lret
push
int
leave
stc
mov
adc
adc
cmp
cmp
mov
inc
adc
mov
jb
jle
push
jle
arpl
test
lods
sbb
xchg
in
dec
ror
addb
adc
cmp
cmp
leave
jne
dec
inc
jns
pusha
mov
add
addb
adc
cmp
cmp
sub
movsl
inc
mov
mov
addb
cmp
cmp
sbb
addb
adc
cmp
cmp
cs
push
sbb
hlt
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jae
sub
xor
addb
adc
cmp
cmp
inc
inc
mov
dec
addb
adc
cmp
cmp
cmp
addb
cmp
cmp
jnp
inc
cli
xor
sbb
aad
ljmp
js
cmpsb
and
bound
mov
aas
cmp
enter
icebp
lea
test
test
push
int
inc
int
fwait
test
inc
addb
adc
cmp
cmp
repnz
sbb
addb
cmp
cmp
mov
outsl
int
push
in
inc
repnz
jle
stos
fadds
jae
addb
cmp
cmp
mov
push
ljmp
addb
adc
cmp
cmp
and
sbb
pop
pop
push
arpl
fsubl
dec
jl
subl
or
xor
ret
pop
sub
adc
scas
mov
lods
int3
adc
mov
xor
lock
or
dec
cmpsl
daa
mov
cmc
xchg
mov
imul
notl
sbb
addb
adc
cmp
cmp
pop
icebp
xor
sbb
mov
addb
cmp
cmp
inc
sbb
rolb
movsl
pop
xchg
xchg
cmpsl
addb
adc
cmp
cmp
clc
in
jg
xchg
mov
or
addb
adc
cmp
cmp
frstor
cmp
mov
js
jge
jb
cvtps2pd
fisubs
addb
adc
cmp
cmp
out
imul
adcb
adc
cmp
cmp
mov
add
enter
pushf
out
mov
lcall
in
mov
outsl
jne
mov
addb
cmp
cmp
mov
mov
sahf
push
ss
test
cs
push
lods
mov
adc
adc
cmp
cmp
mov
mov
sbb
lds
cmp
ret
test
pop
loope,pt
mov
fs
xor
addb
cmp
cmp
mov
dec
sarl
jns
icebp
testb
addb
cmp
cmp
mov
adc
adc
adc
cmp
cmp
mov
out
add
adc
adc
cmp
cmp
fs
addb
adc
cmp
cmp
pop
push
arpl
mov
addb
cmp
cmp
mov
mov
out
push
add
loopne
mov
push
addb
adc
cmp
cmp
test
jns
out
addb
cmp
cmp
mov
xchg
imul
in
jnp
jl
hlt
cmp
mov
jne
stc
jns
mov
movsl
movl
cmp
cmp
inc
or
jne
push
xor
dec
rorl
and
cmp
jns
inc
adc
pop
and
pop
out
xor
xchg
and
jb
jp
jns
cmp
mov
xchg
stc
mov
mov
mov
mov
or
das
es
cmp
das
in
sbb
mov
adc
adc
adc
cmp
cmp
jge
and
cmpsl
les
lods
lcall
push
cmp
sbb
adcb
adc
cmp
cmp
mov
aad
mov
in
and
int
repnz
add
push
daa
fdivs
adc
and
xor
lret
addb
cmp
cmp
mov
ret
push
pusha
shr
sub
fisubs
imul
popf
xchg
pop
ds
lods
je
cmp
movsb
mov
ss
aaa
jo
dec
inc
mov
ss
dec
or
hlt
fsubr
bound
pop
mov
addb
cmp
cmp
mov
idivl
mov
test
negl
mov
pop
fldt
mov
add
aaa
xchg
cmpsb
movsl
outsl
in
jl
nop
cmpsl
and
adc
adc
cmp
cmp
mov
in
mov
mov
std
ds
push
pop
lock
pop
arpl
mov
add
or
fs
pusha
push
rcrl
adc
addb
cmp
cmp
div
mov
sub
inc
ja
in
repz
xor
test
and
adc
cs
addb
adc
cmp
cmp
ss
xchg
out
dec
lds
xchg
push
mov
lds
jl
mov
mov
arpl
outsb
mov
mov
and
gs
mov
jbe
sbb
cld
jne
pop
aam
in
push
ds
xchg
call
imulb
and
test
lods
mov
lcall
and
ret
movsb
rorb
push
stos
jne
pop
xchg
push
mov
iret
pop
xor
mov
adc
adc
cmp
cmp
mov
sahf
sbb
pop
dec
test
sbb
mov
movsl
es
imul
adcb
adc
cmp
cmp
mov
scas
out
jl
insb
jae
pop
addb
adc
cmp
cmp
add
jb
addb
cmp
cmp
mov
adc
or
xchg
bound
rorb
mov
sbb
push
ret
adc
adcb
adc
cmp
cmp
mov
push
push
add
cmp
mov
jbe
sti
add
push
addb
adc
cmp
cmp
push
xor
pop
add
les
push
fs
jb
mov
int
lret
sbb
pop
fwait
mov
jl
mov
out
xchg
adc
aad
stc
lds
ss
fisubl
mov
mov
xor
ret
pop
fsubrl
pop
or
push
dec
rclb
lods
mov
dec
into
lret
cmp
insb
mov
subl
pop
lcall
addb
cmp
cmp
mov
or
xchg
jmp
mov
mov
nop
out
mov
pop
lods
or
xor
mov
add
jns
shlb
int
pop
xchg
lret
loope
mov
and
jle
inc
push
and
lahf
xchg
enter
or
dec
test
dec
mov
addb
cmp
cmp
mov
popf
test
adcb
adc
cmp
cmp
mov
call
cmc
loope
jo
std
pop
push
inc
pop
data16
mov
sbb
push
add
jmp
data16
or
adc
adc
cmp
cmp
fisttps
push
mov
pop
pop
addb
adc
cmp
cmp
stos
sub
cmp
add
mov
push
loopne
push
hlt
cmp
dec
iret
cmp
push
jge
das
mov
nop
cmpsb
ja
sub
test
das
or
sbbb
jge
inc
out
clc
pushf
imul
stos
addb
adc
cmp
cmp
bound
adc
adc
cmp
cmp
jp
enter
mov
out
fs
pop
fdivrs
andl
roll
stos
xchg
sti
cmc
imul
jmp
cld
repz
addb
cmp
cmp
add
or
add
in
jmp
outsl
test
sbb
jmp
sarb
mov
dec
jae
daa
jge
repz
clc
push
test
aad
jg
out
negb
cmp
add
mov
addb
cmp
cmp
mov
pop
addb
adc
cmp
cmp
lods
repnz
xchg
inc
or
addb
adc
cmp
cmp
pop
xchg
leave
ffreep
addb
adc
cmp
cmp
mov
lret
addb
cmp
cmp
mov
xchg
ss
je
loope
addb
cmp
cmp
mov
cmc
xor
ret
mov
adc
adc
cmp
cmp
mov
sbb
mov
cmpsb
cmpsl
mov
add
jp
out
adc
xchg
mov
out
jnp
sub
cld
nop
lahf
fadd
sub
cmc
test
addb
cmp
cmp
mov
dec
sti
jnp
cmp
adc
adc
cmp
cmp
dec
inc
addb
adc
cmp
cmp
mov
stos
lods
es
daa
jnp
adc
mov
inc
mov
insb
pusha
mov
fstpl
push
testl
sbb
mov
lods
lds
and
outsl
sbb
inc
les
mov
mov
adc
add
lret
mov
addb
adc
cmp
cmp
xchg
outsb
jb
dec
sahf
fsincos
int3
aam
test
adc
pop
ss
lret
or
pop
in
fwait
subb
scas
inc
stos
popa
dec
cmp
mov
lock
and
and
lds
loopne
addb
adc
cmp
cmp
mov
or
add
mov
sub
out
leave
popf
lahf
data16
out
cwtl
out
bnd
scas
xor
dec
out
jne
int3
add
outsl
jp
mov
repz
icebp
inc
push
add
adc
addb
cmp
cmp
mov
adc
add
or
addb
adc
cmp
cmp
hlt
and
aad
repnz
mov
sub
addb
adc
cmp
cmp
sub
out
lea
push
popa
mov
cld
movsl
cmp
ljmp
and
and
add
push
push
inc
mov
cmp
xor
rcrl
je
push
cmp
adc
adc
cmp
cmp
mov
mov
jb
inc
xor
int3
lods
inc
dec
addb
adc
cmp
cmp
out
addb
adc
cmp
cmp
or
sar
push
mov
in
inc
stos
imul
xchg
fs
push
fildl
adc
adc
cmp
cmp
jp
mov
ja
fadds
lods
push
icebp
adc
ret
mov
movl
cmp
ss
pop
jge
pop
dec
sbb
aas
cmpsb
push
or
cltd
cld
push
xor
fwait
sti
mov
mov
movsb
sarb
addb
adc
cmp
cmp
push
add
adc
push
lret
pop
imul
sahf
sub
mov
leave
scas
push
mul
aad
loop
out
push
and
test
idiv
push
sub
push
fildl
adc
adc
cmp
cmp
popa
xor
mov
push
mov
mov
adcb
adc
cmp
cmp
mov
out
dec
leave
adc
rolb
push
cmp
dec
inc
cmp
jno
lcall
mov
mov
jns
addb
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
iret
xchg
mov
imul
add
test
ret
in
mov
push
loop
call
lcall
in
xchg
jno
mov
adcb
adc
cmp
cmp
mov
adc
mov
pop
addb
adc
cmp
cmp
movsb
and
push
addb
adc
cmp
cmp
cmpsl
sbb
in
addr16
cmp
pop
push
or
sbb
mov
decb
imul
ja
enter
addb
adc
cmp
cmp
xchg
add
inc
addb
adc
cmp
cmp
scas
sub
push
inc
inc
cmpsb
call
mov
push
sbb
push
popa
or
addb
cmp
cmp
mov
xor
dec
cmp
ja
jnp
jecxz
jmp
addb
cmp
cmp
test
push
or
lret
sbb
sarb
mov
out
es
int
pop
icebp
in
out
mov
adcb
adc
cmp
cmp
mov
sarb
cld
mov
addb
cmp
cmp
mov
jno,pn
lds
lea
mov
jno
lock
jo
lods
imul
test
and
push
addr16
ss
ljmp
addb
cmp
cmp
mov
and
ds
out
cltd
bound
sarl
imul
xor
push
dec
movl
cmp
cmp
adc
adc
addb
cmp
cmp
mov
mov
in
jns
pop
mov
pop
ja
movsl
lods
cltd
fdivrs
jbe
adc
addb
adc
cmp
cmp
push
inc
jno
sub
cmpl
lret
repnz
adc
push
xor
push
hlt
xchg
loope
out
xor
cmp
mov
mov
push
addr16
es
and
push
xor
addb
adc
cmp
cmp
push
pop
adc
fucompp
adc
in
aaa
inc
les
xor
add
cltd
insl
and
cmp
mov
sbb
icebp
nop
add
adc
mov
adcb
adc
cmp
cmp
mov
aas
xlat
cld
mov
data16
push
repnz
addb
adc
cmp
cmp
cmp
les
xor
rolb
adcb
adc
cmp
cmp
mov
cmp
gs
lds
push
jmp
jo
ja
inc
push
addr16
fiadds
jo
addb
cmp
cmp
mov
lods
sbb
lcall
adcb
adc
cmp
cmp
mov
dec
sbbb
mov
cs
sbb
jmp
call
push
sbb
mov
and
jge
or
or
ss
jbe
dec
fsub
test
mov
imul
addb
adc
cmp
cmp
ss
pop
divb
addb
adc
cmp
cmp
mov
imul
imul
push
lods
loopne
addb
adc
cmp
cmp
add
push
jmp
scas
addb
adc
cmp
cmp
dec
push
int
addb
cmp
cmp
mov
out
jmp
adcb
adc
cmp
cmp
mov
xchg
aam
xchg
das
cmp
shlb
cmpsb
cmp
sbb
or
mov
mov
inc
cmp
ss
adc
adc
cmp
cmp
mov
push
rcll
mov
mov
adcb
adc
cmp
cmp
mov
xor
insl
addb
adc
cmp
cmp
pop
xor
sub
and
mov
test
mov
loope
push
inc
outsl
fdivrp
and
adc
adc
cmp
cmp
or
insb
movsb
inc
popl
adc
adc
cmp
cmp
pop
cltd
push
addb
adc
cmp
cmp
lretw
aad
cmp
orl
jno
stos
push
fneni(8087
addb
adc
cmp
cmp
xchg
xchg
add
clc
inc
sub
pop
pop
imul
jp
sbb
pop
lret
outsb
addb
adc
cmp
cmp
adc
ret
sbb
mov
addb
adc
cmp
cmp
test
add
test
addb
adc
cmp
cmp
jbe
dec
cmp
xchg
xor
ret
fisttps
xor
mov
clc
inc
push
inc
es
jae
ds
mov
cmp
movsl
lods
mov
sbb
xchg
test
mov
lods
pop
sbb
mov
cmpsb
add
ret
addr16
lods
adc
addb
cmp
cmp
mov
cmp
loope
mov
test
in
in
inc
cld
cld
shll
data16
and
out
push
xchg
addb
cmp
cmp
mov
in
adc
hlt
mov
lret
loope
rcrl
stos
push
cwtl
aaa
add
lds
jbe
xor
push
popf
mov
mov
lcall
sbb
mov
mov
push
sbb
nop
rcr
inc
mov
je
ret
mov
addb
cmp
cmp
mov
add
in
addb
adc
cmp
cmp
mov
adcl
sub
lods
fcmove
lods
inc
stos
dec
mov
jge
subl
cmp
aaa
xchg
shrl
lahf
loop
jae
xchg
mov
fyl2x
dec
push
or
out
adc
or
and
into
div
mov
jge
lcall
cmpb
cld
mov
add
shlb
cmp
xchg
mov
ds
add
loopne
xor
imul
push
xchg
and
jne
push
addb
adc
cmp
cmp
faddp
pop
sub
mov
mov
pop
sbb
adc
adc
cmp
cmp
mov
lea
scas
inc
sti
pop
not
shll
dec
jle
addb
cmp
cmp
mov
fisubs
adcb
adc
cmp
cmp
mov
loop
pop
in
addb
cmp
cmp
mov
lea
or
aas
xchg
rcl
hlt
add
jo
xor
jp
sbb
call
adcb
adc
cmp
cmp
mov
xchg
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
repz
and
add
shr
ljmp
adcb
adc
cmp
cmp
mov
cmp
popa
mov
idivl
inc
outsb
aam
mov
sbb
adc
arpl
ss
addb
cmp
cmp
mov
or
mov
addb
adc
cmp
cmp
pushf
addb
adc
cmp
cmp
int3
addb
adc
cmp
cmp
or
adc
cmc
sbb
addb
cmp
cmp
mov
popa
mov
adc
adc
cmp
cmp
mov
xchg
sbb
lcall
jp
xchg
je
cmpsl
repnz
insl
mov
or
xor
addb
cmp
cmp
das
pop
or
addb
adc
cmp
cmp
lret
sub
addr16
mov
mov
addb
adc
cmp
cmp
push
dec
add
push
addb
adc
cmp
cmp
pop
xchg
stc
stos
xchg
iret
fnstcw
mov
mov
inc
addb
adc
cmp
cmp
cmpb
cmp
pop
push
addb
cmp
cmp
fs
fs
out
mov
push
aad
notb
lds
cmpsb
cmc
adc
mov
and
ret
int
je
add
push
popa
aaa
or
pop
je
iret
les
push
mov
jl
mov
mov
or
shl
into
ja
addb
cmp
cmp
mov
adc
xor
xchg
dec
jecxz
sbb
test
jge
addb
cmp
cmp
mov
addb
adc
cmp
cmp
icebp
addb
adc
cmp
cmp
aaa
push
mov
scas
dec
lods
mov
hlt
mov
dec
and
adc
adc
cmp
cmp
mov
xchg
test
sti
mov
sbb
or
xor
xorl
mov
movsl
out
add
push
cmpb
addb
cmp
cmp
mov
leave
iret
xlat
mov
ljmp
mov
sti
jg
dec
adc
icebp
jne
daa
leave
mov
outsb
lret
cmp
add
push
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
dec
movsb
add
lret
insl
adc
iret
mov
cmp
xchg
adc
mov
movsl
in
cmp
das
enter
jp
mov
push
dec
sbb
adc
push
mov
addb
adc
cmp
cmp
cmp
adc
mov
jmp
addb
cmp
cmp
mov
outsl
pop
pop
add
jbe
lods
xchg
lret
cmp
xchg
repnz
enter
cmp
scas
cmpsb
add
scas
hlt
scas
cld
addb
adc
cmp
cmp
subb
addb
stos
sbb
dec
in
dec
push
arpl
add
test
xor
add
push
pop
mov
mov
les
pushf
outsl
xor
add
sbb
pusha
mov
roll
repz
pop
out
popa
repnz
sub
rorl
or
mov
mov
fs
cmp
jmp
rclb
addb
cmp
cmp
mov
enter
cmp
cmp
aam
mov
mov
push
out
adc
fldl
out
jmp
pop
insl
int3
mov
jno
or
jbe
jb
or
inc
lods
xor
outsl
inc
cmp
and
xor
xor
xchg
jns
fstps
push
cmc
xchg
inc
addl
inc
pop
addb
adc
cmp
cmp
mov
push
fcoml
ret
out
pop
repnz
mov
ja
js
sub
daa
adc
inc
out
fbld
addb
cmp
cmp
mov
xchg
jns
into
cltd
je
scas
mov
or
adcb
adc
cmp
cmp
mov
mov
movsl
std
fcmovnbe
fildl
lret
aam
xchg
adc
adc
adc
cmp
cmp
addb
adc
cmp
cmp
mov
mov
mov
test
xchg
rcrl
in
xor
flds
adc
adc
cmp
cmp
mov
inc
stc
fs
popf
nop
sub
mov
addb
addb
cmp
cmp
mov
addb
adc
cmp
cmp
xor
sub
and
push
or
dec
sti
mov
shrb
adc
imulb
test
ljmp
adcb
adc
cmp
cmp
mov
les
in
and
out
lret
pusha
icebp
xor
mov
rorb
adc
adc
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
jns
xchg
xchg
stos
jecxz
adc
movsb
cwtl
jns
xchg
xor
addb
cmp
cmp
mov
dec
jae
fucomp
sarb
xchg
jge
mov
popf
stos
fisttpl
xchg
cltd
in
push
mov
out
pushf
pop
dec
adc
je
cwtl
dec
and
sbb
data16
mov
cmpsl
lock
inc
loopne
mov
popa
or
and
adc
adc
cmp
cmp
lahf
mov
fcmovnu
clc
pop
fadd
cmpsl
mov
mov
fcompl
push
aas
or
adc
ja
es
sbb
sub
rcll
decb
pop
and
adc
jmp
std
ss
dec
adcl
addb
adc
cmp
cmp
dec
fists
jge
push
and
sbbl
cld
es
and
sarb
add
push
scas
rsm
xchg
lods
or
adc
adc
cmp
cmp
jbe
cmp
repz
fstpt
jno
inc
or
andl
lds
addb
adc
cmp
cmp
mov
rcr
cs
test
incl
adc
adc
cmp
cmp
imulb
cmp
popf
insb
addb
adc
cmp
cmp
mov
ss
pop
popa
cld
ljmp
addb
cmp
cmp
mov
ljmp
xlat
imul
mov
addb
adc
cmp
cmp
or
aad
lret
ret
test
popa
in
adc
addb
cmp
cmp
mov
enter
dec
xchg
add
lods
sbbb
pop
adc
addr16
pop
xor
or
scas
std
inc
das
jnp
lret
mov
pusha
mov
stos
sub
mov
pop
xlat
ss
loope
addb
cmp
cmp
mov
loope
push
paddb
adc
int3
call
or
les
cmp
adcb
adc
cmp
cmp
mov
inc
addb
adc
cmp
cmp
xchg
xchg
xor
addb
cmp
cmp
aam
flds
adc
adc
cmp
cmp
push
or
cld
call
test
or
out
ror
pop
addb
adc
cmp
cmp
leave
cmp
pop
lahf
nop
addb
adc
cmp
cmp
mov
jg
js
dec
mov
or
setg
jbe
scas
out
addw
lods
addb
adc
adc
cmp
cmp
popf
lret
mov
jg
mov
add
sar
daa
jl
push
cmp
and
addb
cmp
cmp
mov
cmpsb
mov
push
gs
mov
repz
popl
adc
adc
cmp
cmp
dec
stos
cmp
inc
es
jb
lea
jg
cs
stos
movsl
addb
adc
cmp
cmp
lods
mov
addb
cmp
cmp
mov
xchg
inc
cmpsb
addb
adc
cmp
cmp
rorb
sub
fwait
cmp
sbb
mov
push
mov
pushf
sub
jne
xor
adc
adc
cmp
cmp
xchg
jecxz
and
sbb
mov
xor
xchg
test
inc
mov
addb
adc
cmp
cmp
inc
in
outsb
mov
addb
adc
cmp
cmp
mov
rorb
adcb
mov
pop
pop
rcll
shll
mov
addb
cmp
cmp
mov
dec
xor
inc
rcll
mov
divl
add
sub
lret
sub
lret
in
sbb
sbb
icebp
addb
adc
cmp
cmp
aad
fwait
jns
test
popa
adc
jecxz
mov
inc
nop
aam
addb
cmp
cmp
mov
inc
mov
cmpsb
repz
addr16
sahf
incl
adc
adc
cmp
cmp
lahf
mov
pop
jno
pop
xchg
pusha
test
addb
cmp
cmp
mov
stos
jecxz
adc
cmpsb
push
orb
lods
cmp
ja
xchg
push
adc
jle
inc
push
jne
pop
loope
inc
mov
aad
push
sarb
xchg
mov
xchg
gs
mov
mulb
cmpsb
inc
in
xchg
addb
cmp
cmp
stos
fsts
addb
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
fs
push
sub
popa
pop
jns
std
xor
pop
addb
adc
cmp
cmp
sub
nop
sahf
roll
enter
faddl
adc
adc
cmp
cmp
and
jb
pop
and
or
sbb
or
stc
pop
sub
les
mov
adcb
adc
cmp
cmp
mov
repz
addb
cmp
cmp
mov
add
mov
mov
mov
shlb
mov
pop
add
popf
jns
fimuls
andb
lods
add
insl
insb
push
mov
clc
mov
adc
addb
cmp
cmp
mov
dec
push
jmp
insl
jno
loope
inc
sbb
pop
or
adc
adc
cmp
cmp
nop
incl
jecxz
add
ret
ljmp
push
sub
or
mov
nop
pop
shr
clc
mov
sub
addb
cmp
cmp
mov
or
dec
jp
mov
pop
das
jae
xor
jg
mov
jecxz
mov
sbb
addb
cmp
cmp
mov
negl
movsl
jl
fadds
adc
adc
cmp
cmp
sti
pop
gs
iret
stos
pop
push
mov
mov
or
add
mov
add
lahf
mov
shlb
loop
mov
jbe
sti
push
fsubrs
and
dec
lret
pop
addb
adc
cmp
cmp
adc
dec
nop
fdiv
out
jge
cmp
pop
addr16
add
dec
add
adc
adc
cmp
cmp
into
jbe
cmp
fistpl
aam
mov
out
add
ja
ljmp
add
pop
sub
pop
rorl
int3
and
pop
sub
rorl
mov
lahf
clc
dec
icebp
adc
pushf
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
jle
push
add
fsub
push
push
xchg
dec
fimull
int
xchg
mov
mov
out
addb
adc
cmp
cmp
push
lods
rcrl
jno
lods
ret
addb
adc
cmp
cmp
dec
fldenv
add
adc
addb
cmp
cmp
mov
fildll
dec
adc
iret
pop
jmp
int3
clc
iret
dec
cmp
and
mov
jb
mov
subb
fst
iret
push
pusha
cmpsl
push
xor
mov
bound
jbe
mov
dec
xor
dec
push
addb
adc
cmp
cmp
add
and
add
cmp
add
dec
sub
add
add
add
add
add
jl
add
add
add
lcall
add
sub
add
add
add
sub
add
add
add
jb
gs
xor
cs
insb
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
inc
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
cmp
fs
insb
add
add
imul
jae
add
inc
outsb
fs
jo
popa
je
push
gs
jne
arpl
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
outsl
jae
dec
popa
outsb
fs
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
fs
jb
je
inc
outsl
insl
popa
imul
outsb
je
popa
insb
jae
add
add
push
imul
jb
imul
gs
je
inc
outsl
insl
jo
je
bound
inc
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
inc
imul
inc
jb
popa
je
cmp
addb
adc
cmp
cmp
cmp
xor
inc
cmc
addb
adc
cmp
cmp
lret
imul
lret
addb
adc
cmp
cmp
mov
xor
cwtl
ja
aas
gs
ds
sub
mov
push
mov
inc
rorb
cltd
ret
movsb
in
aas
mov
sahf
cmp
dec
and
lret
push
iret
push
jl
leave
mov
mov
adc
adc
cmp
cmp
mov
cmpsl
dec
adc
stc
addb
adc
cmp
cmp
xchg
add
stc
cs
out
repz
cmc
cltd
addb
adc
cmp
cmp
mov
lret
fiadds
mov
ja
cmp
inc
imul
hlt
xchg
addb
adc
cmp
cmp
das
movsl
jne
jns
adc
addb
cmp
cmp
mov
jno
sbb
adc
cmpsl
aaa
sti
dec
push
addr16
outsl
xchg
mov
xor
or
ja
push
inc
jge
push
fdivr
addb
adc
cmp
cmp
stos
addb
adc
cmp
cmp
pop
cmpsl
lcall
inc
pop
mov
fisubs
jle
adc
xor
frstor
je
lds
imul
ja
sbb
sub
mov
xor
jecxz
mov
and
addb
adc
cmp
cmp
cmp
inc
xor
scas
mov
and
dec
cmp
mov
lcall
push
adc
repz
lahf
enter
lret
ret
cmp
adc
jp
fnstsw
out
test
int3
test
jecxz
fisttps
out
cmp
jg
xor
jne
je
addb
cmp
cmp
mov
ljmp
bound
mov
sub
xchg
adc
adc
cmp
cmp
mov
sbb
jnp
roll
pop
iret
inc
data16
aad
loope
xor
mov
mov
sub
inc
push
aas
dec
add
addb
adc
cmp
cmp
xor
sub
iret
imul
adcb
adc
cmp
cmp
mov
test
stos
dec
neg
xor
gs
adc
jne
cmp
adc
adc
cmp
cmp
mov
loop
js
adc
addb
adc
cmp
cmp
add
addb
adc
cmp
cmp
xor
pop
addb
adc
cmp
cmp
sub
movsl
cltd
int3
mov
out
outsb
movsb
sub
addb
cmp
cmp
and
out
lods
add
inc
add
add
add
adc
lods
add
add
inc
add
inc
add
add
js
inc
add
mov
add
xchg
pusha
cmp
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
cmp
add
adc
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
or
add
add
add
sbb
add
or
add
sldt
add
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
sbb
add
adc
add
adc
add
xor
add
and
add
xor
add
add
add
adc
add
sub
add
sbb
add
or
add
add
add
sbb
add
add
add
or
add
sbb
add
pop
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
pop
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
sub
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
xor
add
inc
add
add
add
add
add
add
add
add
add
or
add
adc
add
adc
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
add
add
sbb
add
adc
add
or
add
or
add
or
add
or
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
and
add
cmp
add
adc
add
adc
add
and
add
add
add
or
add
sbb
add
and
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
add
adc
add
sbb
add
add
add
sbb
add
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
add
add
add
add
add
add
pop
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
arpl
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
add
pop
add
add
add
add
add
or
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
add
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
pop
add
add
add
sub
add
adc
add
add
add
xor
add
push
add
add
add
or
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
nop
add
add
add
add
add
add
add
cmp
add
or
add
add
add
sbb
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
pop
add
add
add
add
add
or
add
das
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
adc
add
adc
add
sub
add
sbb
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
add
add
add
sbb
add
add
add
sub
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
pop
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
pop
add
add
add
add
add
add
add
add
add
adc
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
adc
add
adc
add
or
add
push
add
add
add
or
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
or
add
adc
add
sbb
add
sbb
add
dec
add
add
add
sbb
add
sbb
add
push
add
add
add
sbb
add
aas
add
add
add
add
add
add
add
cmp
add
or
add
pop
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
and
add
sldt
add
add
cmp
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
or
add
sbb
add
and
add
add
add
add
add
lea
add
sbb
add
add
add
or
add
sub
add
xor
add
or
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
adc
add
cmp
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
adc
add
add
add
or
add
bound
add
add
add
sbb
add
sbb
add
and
add
add
add
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
add
add
add
and
add
add
add
sub
add
add
add
and
add
sbb
add
add
add
add
add
add
add
add
add
das
add
add
add
pop
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
adc
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
and
add
sldt
add
add
sub
add
adc
add
or
add
or
add
or
add
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
push
add
add
add
add
add
add
add
add
add
and
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
adc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
add
sbb
add
xor
add
or
add
adc
add
and
add
sbb
add
add
add
sldt
add
add
adc
add
push
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
sub
add
adc
add
adc
add
pop
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
sbb
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
add
add
add
add
xor
add
sldt
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
or
add
and
add
and
add
add
add
and
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
add
add
add
add
add
add
and
add
add
add
push
add
add
add
add
add
push
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
add
add
add
add
or
add
adc
add
adc
add
xor
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
xor
add
sbb
add
sbb
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
or
add
adc
add
adc
add
and
add
pop
add
add
add
and
add
add
add
or
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
sbb
add
push
add
add
add
add
add
inc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
add
adc
add
sub
add
adc
add
add
add
sbb
add
inc
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
or
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
or
add
bound
add
or
add
add
add
add
add
add
add
add
add
and
add
adc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
inc
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
push
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
or
add
sbb
add
sbb
add
or
add
adc
add
or
add
and
add
add
add
add
add
sub
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
sbb
add
add
add
adc
add
adc
add
or
add
sub
add
adc
add
or
add
add
add
sbb
add
or
add
sbb
add
add
add
or
add
mov
add
push
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
or
add
and
add
or
add
adc
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
or
add
xor
add
push
add
add
add
adc
add
or
add
or
add
add
add
add
add
or
add
adc
add
sbb
add
sbb
add
sbb
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
add
add
or
add
and
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
daa
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
sub
add
pusha
add
add
add
add
add
add
add
cmp
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
cmp
add
sbb
add
sbb
add
and
add
or
add
cmp
add
sbb
add
or
add
sub
add
adc
add
push
add
add
add
add
add
imul
add
adc
add
xchg
add
daa
add
add
add
add
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
add
or
add
sub
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
and
add
push
add
add
add
add
add
add
add
dec
add
add
add
add
add
sbb
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
push
add
add
add
add
add
add
add
cmp
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sldt
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
add
adc
add
adc
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
or
add
add
add
add
add
sbb
add
add
add
or
add
push
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
push
add
add
add
add
add
add
add
or
add
das
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sub
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
das
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
or
add
sub
add
and
add
sbb
add
adc
add
lea
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
or
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
sbb
add
adc
add
adc
add
add
add
add
add
add
add
and
add
or
add
pop
add
add
add
arpl
add
or
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
cmp
add
sbb
add
xor
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
xor
add
add
add
or
add
sub
add
adc
add
add
add
add
add
push
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
or
add
or
add
add
add
add
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
adc
add
add
add
pop
add
add
add
add
add
sbb
add
add
add
add
add
push
add
add
add
inc
add
add
add
sub
add
xor
add
adc
add
adc
add
sbb
add
add
add
add
add
or
add
or
add
sbb
add
sub
add
adc
add
add
add
or
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
or
add
sbb
add
pop
add
add
add
lea
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
or
add
xor
add
or
add
cmp
add
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
sbb
add
sub
add
adc
add
add
add
pop
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
add
sbb
add
adc
add
add
add
pop
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
sbb
add
add
add
sub
add
add
add
or
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
or
add
add
add
adc
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
sldt
add
add
add
add
add
add
sbb
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
adc
add
or
add
adc
add
or
add
add
add
dec
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
adc
add
add
add
or
add
and
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
dec
add
add
add
add
add
add
add
adc
add
add
add
add
add
aad
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
and
add
or
add
ja
add
or
add
pop
add
add
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
add
add
add
add
sbb
add
push
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
sbb
add
add
add
add
add
sub
add
add
add
push
add
add
add
adc
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
cmp
add
or
add
add
add
add
add
sbb
add
sub
add
pop
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
sub
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
adc
add
or
add
and
add
add
add
adc
add
or
add
push
add
add
add
xor
add
pop
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
inc
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
xchg
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
aas
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
push
add
add
add
add
add
or
add
imul
add
adc
add
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
xor
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
xor
add
aaa
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
and
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
add
push
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
or
add
or
add
jge
add
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
daa
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
and
add
cmp
add
add
add
add
add
add
add
xor
add
add
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
xor
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
or
add
add
add
dec
add
add
add
sbb
add
or
add
adc
add
sbb
add
sbb
add
add
add
pop
add
add
add
or
add
add
add
adc
add
or
add
mov
add
pop
add
add
add
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
and
add
xor
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
add
sbb
add
sbb
add
adc
add
or
add
xor
add
add
add
adc
add
pop
add
add
add
add
add
add
add
sbb
add
sbb
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
xor
add
adc
add
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
pop
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
or
add
adc
add
or
add
inc
add
add
add
xor
add
and
add
or
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
add
add
add
add
xor
add
sub
add
or
add
adc
add
pop
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
or
add
or
add
adc
add
or
add
adc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
cmp
add
adc
add
and
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
add
sbb
add
inc
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
sbb
add
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
cmp
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
sldt
add
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
add
add
add
or
add
dec
add
add
add
add
add
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
or
add
cmp
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sub
add
add
add
jns
add
or
add
add
add
or
add
or
add
add
add
sbb
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
or
add
sbb
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
xor
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
cmp
add
or
add
sub
add
adc
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
arpl
add
adc
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
or
add
sbb
add
add
add
daa
add
add
add
add
add
and
add
or
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
adc
add
cmp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
or
add
pusha
add
add
add
add
add
and
add
add
add
add
add
add
or
add
add
add
add
add
sbb
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
adc
add
sbb
add
sbb
add
sbb
add
and
add
add
add
add
add
add
add
add
or
add
or
add
or
add
xor
add
add
add
add
add
sbb
add
adc
add
sub
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
or
add
or
add
sub
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
adc
add
add
add
or
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
or
add
das
add
add
add
add
add
add
add
je
add
add
add
adc
add
add
add
add
add
add
add
add
xor
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
sbb
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
xor
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
cmp
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
xor
add
adc
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
sub
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
and
add
adc
add
add
add
or
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xchg
sub
in
mov
faddl
hlt
mov
or
pop
fnstenv
pushl
cmp
icebp
scas
mov
adcb
adc
cmp
cmp
mov
sub
addb
adc
cmp
cmp
adc
test
addb
adc
cmp
cmp
mov
into
les
shrb
push
cmpsl
aad
es
cmp
mov
iret
subl
icebp
subb
cld
push
gs
sbb
in
insb
xchg
xchg
jge
stos
mov
addb
cmp
cmp
mov
adcl
jae
xor
addb
adc
cmp
cmp
mov
and
pop
sbb
adc
or
stc
addb
adc
cmp
cmp
push
or
xor
lret
adc
ja
test
ret
jb
fsubrl
into
stc
adc
pop
js
or
xchg
pop
dec
inc
lods
push
add
cmpsb
xor
or
das
and
addb
adc
cmp
cmp
out
dec
rcl
xor
add
and
repnz
cmp
icebp
xchg
mov
adc
mov
addb
adc
cmp
cmp
or
addb
cmp
cmp
mov
outsb
mov
adc
cs
dec
aad
lahf
std
es
mov
push
setg
shlb
jmp
data16
or
in
add
adcb
adc
cmp
cmp
mov
mov
cmp
loop
test
add
addb
adc
cmp
cmp
ret
addb
adc
cmp
cmp
mov
pop
mov
es
jecxz
rcrl
lea
gs
mov
test
sub
mov
and
mov
pop
imul
or
jno
mul
push
xchg
mov
outsb
and
sbb
or
xchg
lds
std
jno
add
jl
into
xlat
sub
addb
cmp
cmp
mov
pop
fists
adc
adc
cmp
cmp
mov
jae
movsb
rolb
jp
and
mov
addb
cmp
cmp
mov
roll
mov
sbb
mov
mov
insl
stos
repnz
in
sti
js
aas
push
mov
cltd
adc
or
addb
adc
cmp
cmp
fisubl
adc
add
lcall
addb
cmp
cmp
mov
lahf
dec
stos
cmp
addb
cmp
cmp
mov
adc
icebp
sub
dec
inc
es
adc
mov
mov
jmp
int3
xor
mov
jb
cmp
dec
bound
adc
adc
cmp
cmp
fiaddl
adc
adc
cmp
cmp
dec
daa
in
and
sub
add
push
out
insb
push
mov
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
les
add
jp
jbe
push
xlat
xchg
cmp
js
or
bound
repnz
addb
adc
cmp
cmp
sbb
stos
fs
sub
sbb
outsl
push
mov
inc
into
addb
adc
cmp
cmp
xchg
adc
lock
std
pop
xlat
mov
addb
cmp
cmp
mov
xchg
inc
dec
xchg
mov
push
xchg
pop
int3
cli
scas
test
test
cmp
addb
adc
cmp
cmp
shlb
and
xchg
jno
bound
addr16
jo
je
enter
cmpsb
jp
enter
mov
sbb
addb
adc
cmp
cmp
jnp
mov
and
push
xor
adc
adc
cmp
cmp
mov
lods
pushf
push
sbb
and
jp
mov
xchg
scas
repz
popa
mov
bswap
and
mov
addb
adc
cmp
cmp
add
xchg
gs
xlat
clts
cmpsb
fwait
and
cmp
dec
inc
pushl
mov
push
jae
fbld
nop
xchg
repz
mov
aam
push
sub
lahf
sub
imul
adc
adc
cmp
cmp
mov
cmp
stc
fldenv
in
push
sub
andl
addb
cmp
cmp
xchg
fldt
aaa
addb
adc
cmp
cmp
and
mov
add
pop
jbe
ds
mov
addb
cmp
cmp
mov
mov
sub
scas
aaa
adc
addb
adc
cmp
cmp
xor
mov
xor
js
sub
sub
stos
subl
lcall
aam
cmp
push
dec
in
loope
push
lcall
test
jb
in
jbe
imul
adc
adc
cmp
cmp
mov
inc
in
out
aaa
popa
call
sub
dec
test
jbe
cmpsl
gs
ret
jge
xchg
push
ss
bound
fwait
loop
push
and
pop
xor
addb
adc
cmp
cmp
dec
in
mov
bound
inc
addb
leave
ds
push
fisubl
xlat
cmc
ljmp
test
aaa
lret
and
adc
adc
cmp
cmp
pusha
push
jp
mulb
add
aam
xchg
inc
xlat
addb
adc
cmp
cmp
sbb
and
addb
adc
cmp
cmp
test
loopne
mov
addb
adc
cmp
cmp
sti
inc
fnsave
pop
jae
dec
mov
mov
or
xlat
out
push
mov
aad
sub
es
cwtl
cmp
mov
xor
addb
adc
cmp
cmp
std
stc
addb
adc
cmp
cmp
and
push
daa
test
push
adcb
adc
cmp
cmp
mov
fdivl
jne
loope
ds
pop
addb
adc
cmp
cmp
fldenv
enter
aad
xchg
xor
or
adc
adc
cmp
cmp
inc
cwtl
popa
popa
clc
push
xor
loopne
pushf
mov
mov
mov
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
adc
shrl
mov
fildl
aas
fisubl
xor
inc
and
mov
addb
cmp
cmp
mov
push
fs
daa
loope
addb
cmp
cmp
mov
addb
adc
cmp
cmp
in
adc
hlt
movsl
push
int
jne
adc
pop
les
addb
cmp
cmp
mov
sbb
addb
cmp
cmp
mov
arpl
pop
std
xchg
stos
xchg
xchg
leave
pslld
and
mov
in
add
cmp
xor
xchg
add
pop
fwait
test
xlat
xchg
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
fstp
addb
adc
cmp
cmp
jb
mov
aam
mov
icebp
xchg
cwtl
fisttpl
mov
mov
adc
adc
cmp
cmp
mov
push
pop
cmp
adcb
adc
cmp
cmp
mov
sti
int3
xchg
jp
inc
cmpsl
sti
xchg
pop
sub
in
lret
sub
enter
jne
mov
and
and
fs
xor
sbb
and
pop
sbb
addb
cmp
cmp
pop
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
sub
adc
adc
adc
cmp
cmp
addb
adc
cmp
cmp
add
cmp
cli
xchg
addb
adc
cmp
cmp
clc
mov
sub
dec
ss
mov
jg
addb
cmp
cmp
mov
stos
loope
scas
aad
out
test
int3
push
fs
sbb
or
add
divl
mov
pop
lret
adc
loopne
shl
cmp
and
out
jno
pop
stos
addb
adc
cmp
cmp
pop
stos
adcb
mov
mov
jb
int
inc
hlt
dec
lds
sti
cld
cmpsl
push
addb
adc
cmp
cmp
xchg
aaa
lds
addb
cmp
cmp
mov
out
mov
addb
adc
cmp
cmp
out
push
jl
in
frstor
loop
push
iret
add
das
push
jb
adc
push
leave
xor
fisubl
arpl
addr16
iret
adc
aaa
fnsave
out
out
mov
and
adc
adc
cmp
cmp
shll
xchg
push
mov
sub
in
mov
into
lret
popf
addr16
cmp
inc
bound
adc
adc
cmp
cmp
popa
mov
cld
xor
addr16
or
mov
lahf
push
test
jb
mov
addb
cmp
cmp
sub
sbb
mov
fucom
dec
adc
addb
adc
cmp
cmp
inc
xchg
test
cmp
sbb
pusha
addb
adc
cmp
cmp
arpl
adc
adc
cmp
cmp
add
lahf
pop
test
push
fldt
arpl
sbb
repnz
sbb
rcll
add
mov
addb
adc
cmp
cmp
test
sub
addb
adc
cmp
cmp
sbb
jnp
and
addl
adc
adc
cmp
cmp
mov
dec
loopne
pop
addb
adc
cmp
cmp
addb
adc
cmp
cmp
popa
iret
add
addb
adc
cmp
cmp
fwait
addb
adc
cmp
cmp
fs
fsubr
addb
adc
cmp
cmp
mov
data16
xlat
call
aad
dec
jmp
inc
mov
stos
or
adcb
adc
cmp
cmp
mov
cwtl
shl
les
notb
jbe
push
scas
xchg
push
mov
addb
cmp
cmp
mov
xchg
ds
ss
addb
cmp
cmp
mov
test
jmp
cmp
adc
adc
cmp
cmp
mov
dec
out
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
cmp
addb
cmp
cmp
mov
loop
lock
push
and
push
addb
adc
cmp
cmp
fwait
jno
loopne
inc
dec
jns
push
cmp
aam
mov
adc
adc
cmp
cmp
mov
push
dec
cmc
pusha
int3
sarl
pop
pushf
lods
leave
out
sahf
jp
sbb
andb
addb
cmp
cmp
ret
pop
xor
imul
inc
daa
jne
push
dec
xor
leave
imul
pop
stc
xor
sbb
push
sbb
ljmp
jp
jmp
adcb
adc
cmp
cmp
mov
pop
fucomp
daa
push
addb
adc
cmp
cmp
out
cmpsl
and
pop
xor
fcmovne
mov
mov
mov
sub
adc
adc
cmp
cmp
out
ret
addb
cmp
cmp
mov
sahf
icebp
cltd
pushf
sbb
sub
and
mov
fdiv
pop
xchg
jb
xor
mov
addb
adc
cmp
cmp
js
xchg
dec
rcll
cltd
sub
sar
push
dec
mov
lds
pop
fildl
rol
test
push
sbb
in
pop
push
jo
dec
js
paddq
jp
in
push
adc
adc
cmp
cmp
mov
fcmovnbe
out
shll
pop
in
push
addb
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
enter
mov
fldt
cmpsb
add
out
and
adc
ret
repz
cmp
clc
xchg
jbe
addb
adc
cmp
cmp
shll
sub
cli
and
xor
adcb
adc
cmp
cmp
mov
adc
aaa
adc
subl
addb
adc
cmp
cmp
cmc
clc
addb
adc
cmp
cmp
lds
in
lret
push
sub
loopne
push
into
mov
pop
sub
loop
in
adc
stos
cmc
pop
and
push
daa
movsl
sbb
aam
mov
jmp
out
mov
pop
mov
addb
cmp
cmp
mov
fildll
addb
cmp
cmp
movsl
and
inc
xlat
psubsw
loopne
addb
cmp
cmp
mov
and
mov
mov
test
mov
mov
sub
mov
sbb
repz
ss
stos
sti
hlt
addb
adc
cmp
cmp
stos
cmp
ret
adc
in
push
addb
cmp
cmp
mov
addb
adc
cmp
cmp
notl
pop
addb
adc
cmp
cmp
orb
pop
roll
xchg
addb
adc
cmp
cmp
mov
push
cli
out
push
negb
adc
adcb
adc
cmp
cmp
mov
out
adc
addb
cmp
cmp
mov
cmp
in
jnp
stos
jne
fbstp
aam
les
mov
addb
cmp
cmp
mov
out
push
movsb
and
xor
lods
add
cltd
roll
int3
pop
out
addb
cmp
cmp
mov
push
cmp
and
mov
lock
into
lock
ror
inc
mov
addb
cmp
cmp
mov
cmp
neg
sbb
pop
mov
sub
insb
imull
xchg
jne
hlt
in
loopne
dec
xor
pop
sub
adcl
in
into
mov
addb
cmp
cmp
push
or
sbbl
adc
std
mov
cmp
sar
loopne
cmp
ret
push
xchg
lcall
loopne
mov
in
ljmp
xchg
lea
loop
addb
cmp
cmp
mov
jmp
addb
adc
cmp
cmp
out
adc
pop
lret
lret
imul
jle
mov
push
mov
adc
adc
cmp
cmp
mov
push
or
faddl
jle
in
test
jp
push
and
leave
jne
addb
cmp
cmp
mov
enter
lret
mov
addb
cmp
cmp
mov
or
jb
mov
clc
push
popa
popa
fldt
addb
adc
cmp
cmp
sbb
mov
inc
negb
sti
sub
xor
addb
cmp
cmp
mov
test
push
stos
add
int3
push
fnstsw
inc
push
cmp
insl
adc
sub
into
inc
loop
imul
lcall
cmp
lea
jb,pn
idivb
mov
addb
cmp
cmp
mov
sub
popa
add
leave
push
jecxz
jbe
fsubp
addb
adc
cmp
cmp
dec
in
nop
sub
and
cs
and
aaa
mov
mov
lahf
and
cld
lret
and
inc
push
std
mov
addb
cmp
cmp
outsl
data16
out
addb
cmp
cmp
mov
adc
mov
outsb
test
inc
addb
adc
cmp
cmp
sbb
pop
movsb
xchg
std
mov
or
aas
dec
rolb
adc
cmp
cmp
mov
pusha
lods
scas
das
xchg
addb
adc
cmp
cmp
mov
aas
cmp
shll
adcb
adc
cmp
cmp
mov
sbb
test
addb
cmp
cmp
shl
pop
lret
std
jp
jmp
addb
cmp
cmp
and
insb
call
addb
adc
cmp
cmp
xor
shll
out
pop
call
addb
adc
cmp
cmp
test
repz
pop
mov
and
stos
xor
add
adcb
adc
cmp
cmp
mov
insb
addb
adc
cmp
cmp
in
mov
jno
pop
imul
mov
popl
adc
adc
cmp
cmp
leave
movsl
daa
xchg
icebp
stos
mov
xchg
idivl
into
dec
jo
adcl
mov
add
cmpsl
inc
mov
addb
cmp
cmp
addb
adc
cmp
cmp
addw
adc
adc
cmp
cmp
rorl
pop
jl
or
lcall
pop
jno
xchg
xor
fisttpl
and
addb
cmp
cmp
mov
xor
cli
fiadds
ret
jg
lods
mov
add
sub
pop
xchg
sub
leave
cltd
mov
sub
leave
dec
ljmp
addb
cmp
cmp
call
loope
lds
jp
sbb
stos
mov
mov
pop
ret
ss
xchg
inc
push
jns
jg
subl
addb
cmp
cmp
pop
addb
adc
cmp
cmp
mov
jb
or
and
mov
mov
inc
sbbb
addb
cmp
cmp
mov
jb
fdivrl
lock
xor
hlt
xchg
insb
mov
enter
call
push
stos
das
orb
add
addb
cmp
cmp
mov
movb
adc
adc
cmp
cmp
jne
fnstsw
xor
ljmp
daa
cmp
xchg
fsubl
pop
addb
adc
cmp
cmp
xchg
xchg
dec
add
jge
mov
sti
ds
dec
jmp
bswap
lahf
movsb
lret
loop
inc
mov
int3
popl
adc
adc
cmp
cmp
insl
cmpsl
divb
sbbb
mov
push
and
jge
cmp
out
sub
testb
addb
cmp
cmp
mov
addb
adc
cmp
cmp
sti
lcall
or
xchg
insl
addb
adc
cmp
cmp
addb
adc
cmp
cmp
out
addb
cmp
cmp
mov
jl
mov
nop
adc
sbb
addb
adc
cmp
cmp
sub
dec
sbb
test
ss
mov
xchg
pop
addb
adc
cmp
cmp
inc
mov
mov
out
cmp
xchg
outsl
mov
ja
lods
jo
cmpsb
int3
jno
jle
mov
adc
adc
cmp
cmp
push
das
cwtl
dec
ds
loop
mov
adc
adc
cmp
cmp
mov
mov
xor
jns
addb
cmp
cmp
mov
pop
pushf
addb
adc
cmp
cmp
inc
inc
mov
adcb
adc
cmp
cmp
mov
fldt
add
adc
adc
cmp
cmp
mov
xor
sub
dec
shl
sbb
adc
pop
xor
addb
cmp
cmp
push
adc
xor
outsb
xor
fucom
xor
adc
repz
mov
icebp
xchg
adc
mov
sbb
or
or
mov
addb
cmp
cmp
mov
jmp
jno
addb
cmp
cmp
mov
xchg
nop
xchg
addr16
fs
in
out
in
jb
pop
fiaddl
adc
adc
cmp
cmp
daa
inc
das
push
sbb
out
insb
addb
adc
cmp
cmp
lock
stos
popf
mov
adc
adc
cmp
cmp
fdivrl
outsl
jns
rol
rolb
adc
cmp
cmp
mov
jmp
shl
cwtl
pop
mov
mov
pop
jp
out
mov
xchg
jle
popf
lds
or
sti
jo
inc
adcl
dec
imul
sar
add
cmpsb
jo
es
mov
adcb
adc
cmp
cmp
mov
xchg
dec
xchg
cmp
pop
fdiv
jae
dec
mov
mov
jle
inc
in
push
inc
lret
addb
adc
cmp
cmp
movl
lods
ret
mov
gs
jns
addb
adc
cmp
cmp
lods
and
lea
pop
sti
negb
addb
adc
cmp
cmp
mov
fsubp
mov
gs
call
lret
enter
sub
mov
mov
inc
push
dec
mov
xchg
adc
lds
addb
cmp
cmp
fnstcw
adc
jbe
inc
jle
jecxz
add
xor
push
sbb
testl
cmp
cmp
mov
daa
dec
aam
into
fldcw
lods
repnz
pusha
pusha
mov
push
lahf
cmp
adc
adc
cmp
cmp
and
cmc
push
or
dec
cmp
int3
adc
addb
adc
cmp
cmp
mov
cmpsb
jl
cmpsb
mov
jge
addb
cmp
cmp
mov
cmc
lret
pop
inc
scas
nop
mov
pop
loop
inc
addb
adc
cmp
cmp
mov
call
add
mov
lods
mov
or
or
in
push
pop
icebp
addb
adc
cmp
cmp
adc
mov
and
push
iret
fstpl
mov
mov
adc
adc
cmp
cmp
mov
aas
repnz
pusha
push
jl
lods
xchg
addb
adc
cmp
cmp
sub
dec
addl
cmp
cmp
lret
loopne
addb
cmp
cmp
mov
inc
push
cwtl
inc
inc
dec
xchg
jbe
push
mov
aam
dec
push
cltd
push
fwait
mov
addb
mov
insb
adc
gs
mov
mov
inc
lret
push
mov
repnz
into
clc
add
push
das
pop
cli
insl
adc
addb
insb
mov
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
loope
lret
bound
mov
addb
adc
cmp
cmp
bound
mov
mov
outsl
fcomi
cld
mov
adc
adc
cmp
cmp
mov
adc
adc
cmp
cmp
push
cs
xchg
mov
adcb
adc
cmp
cmp
mov
inc
ss
mov
sub
repnz
mov
or
xor
into
mov
xor
aaa
pop
pop
inc
xchg
dec
insb
pop
arpl
shll
inc
ja
stos
add
pushf
inc
in
iret
mov
lods
add
out
aaa
addb
adc
cmp
cmp
add
adcb
adc
cmp
cmp
mov
or
jo
rolb
cs
pop
cmp
loope
das
addb
adc
cmp
cmp
inc
jp
iret
or
xor
leave
mov
addb
cmp
cmp
mov
push
lcall
pop
cmp
addb
adc
cmp
cmp
in
cmp
cltd
push
mov
sub
xchg
insl
mov
stos
mov
dec
cmp
stos
inc
sarb
mov
aas
push
rolb
jno
inc
mov
adcb
adc
cmp
cmp
mov
push
push
addb
adc
cmp
cmp
packssdw
mov
outsb
xor
adcb
adc
cmp
cmp
mov
pop
mov
or
addr16
or
adc
adc
cmp
cmp
mov
add
arpl
addb
adc
cmp
cmp
inc
push
sbb
adcb
adc
cmp
cmp
mov
dec
ficomps
addb
cmp
cmp
mov
push
movsl
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pusha
jle
stc
lea
lcall
addb
cmp
cmp
in
lock
lea
adc
adc
cmp
cmp
xor
orl
mov
adc
adc
cmp
cmp
mov
mul
popa
jnp
xor
aaa
xchg
mov
popf
pop
pop
lret
jae
nop
lods
out
xor
xor
sarl
outsb
movsb
aaa
subl
push
push
push
sbb
or
push
inc
out
push
xchg
rorb
lcall
inc
scas
or
pusha
push
lea
push
out
cmc
push
das
clc
fnstcw
push
test
pushf
pop
cmp
sub
lcall
pop
addb
adc
cmp
cmp
lret
mov
push
les
out
push
add
xchg
lods
daa
dec
pop
orb
push
es
popf
pop
rolb
mov
imul
sbb
push
push
data16
lret
inc
gs
jmp
xor
sbb
es
clc
sbb
addb
adc
cmp
cmp
lahf
xchg
test
dec
call
sar
scas
or
inc
adc
inc
sub
sbb
xchg
aam
dec
int3
fistpl
insl
into
addb
adc
cmp
cmp
xor
lds
inc
xchg
scas
sbb
jb
das
sbb
addb
adc
cmp
cmp
lret
addb
cmp
cmp
out
sub
movsb
testb
adc
adc
cmp
cmp
mov
ljmp
adc
adc
cmp
cmp
mov
adc
pop
movsl
and
push
xchg
push
ret
sbb
test
stc
pcmpeqb
addb
cmp
cmp
in
pop
cmp
punpckldq
lods
addb
jl
dec
sti
out
addb
cmp
cmp
mov
cli
and
negb
test
test
sub
aad
outsb
cld
rclb
pop
outsl
enter
addb
adc
cmp
cmp
rcrl
cmp
xor
ss
mov
in
fnsave
out
dec
sahf
in
rorb
pop
jbe
std
lods
push
cmp
jle
test
addb
adc
cmp
cmp
rorb
adcb
adc
cmp
cmp
mov
and
pop
jmp
mov
cmp
jae
sbb
addb
cmp
cmp
mov
movsb
imul
adcb
adc
cmp
cmp
mov
mov
por
cmp
cltd
out
inc
xchg
addb
adc
cmp
cmp
clc
stos
sbb
lods
popf
sub
inc
sti
xor
xlat
leave
int
shll
mov
int
addb
cmp
cmp
mov
cltd
xchg
cmpsl
lahf
sub
faddl
sbb
add
adcb
adc
cmp
cmp
mov
push
adc
cmp
jb
pop
add
cs
inc
xchg
mov
aad
iret
aaa
hlt
and
incl
xlat
les
dec
out
aaa
jecxz
push
aaa
or
fists
popa
addb
adc
cmp
cmp
in
cltd
inc
pop
cwtl
movl
cmp
cmp
mov
scas
hlt
clc
fsubrp
push
imulb
daa
lods
pop
js
mov
nop
or
mov
adc
sbb
adc
adc
cmp
cmp
stc
into
mov
mov
and
xor
stos
dec
mov
cmpsb
inc
mov
nop
cwtl
sub
jbe
fwait
mov
insl
out
cmp
cli
ds
pop
aaa
mov
scas
mov
jecxz
mov
addb
cmp
cmp
mov
push
dec
repz
into
call
mov
xor
pop
movsl
fidivl
popf
mov
or
xchg
or
wbinvd
lret
mov
addb
adc
cmp
cmp
ja
addb
cmp
cmp
mov
mov
cmp
mov
mov
cli
pop
cld
cld
pusha
mov
adc
add
xchg
ja
addb
cmp
cmp
mov
mov
test
dec
pushw
lea
idiv
gs
jns
xor
push
sub
mov
ljmp
pop
or
clc
scas
pop
orb
xor
jge
pop
in
es
lods
add
addb
cmp
cmp
mov
loope
jb
inc
dec
cs
leave
out
lea
test
mov
mov
mov
pop
loop
sti
jno
or
out
sbb
dec
push
cmc
mov
dec
lock
adc
adc
cmp
cmp
xor
adcb
adc
cmp
cmp
mov
imul
inc
fbstp
fstps
addb
adc
cmp
cmp
cs
sbb
mov
lods
push
mov
cmpsl
and
adc
adc
cmp
cmp
mov
or
jl
adc
xchg
cmpsl
les
repz
movsb
adc
cld
mov
mov
cs
clc
test
addb
adc
cmp
cmp
xchg
push
leave
js
imul
xchg
fildll
hlt
int3
mov
xor
pusha
ja
loopne
sub
pop
cmp
adcb
adc
cmp
cmp
mov
std
test
data16
pop
mov
out
sub
mov
jbe
cwtl
inc
leave
pusha
sbb
imul
out
cmp
aam
out
lcall
adc
adc
addb
cmp
cmp
mov
imulb
out
pop
push
mov
insb
jp
lahf
and
mov
sbb
adc
adc
cmp
cmp
aam
sbb
cs
nopl
adcb
adc
cmp
cmp
mov
lcall
movsl
xchg
xchg
shl
imul
ds
xchg
idivl
pop
faddl
cltd
sar
cmp
add
inc
xchg
scas
stos
xor
addb
adc
cmp
cmp
mov
jmp
cmp
rep
int
jl
cwtl
iret
aaa
and
jge
fimull
addb
adc
cmp
cmp
mov
je
fistps
addb
adc
cmp
cmp
inc
incb
lds
mov
lds
les
and
ja
std
scas
mov
es
cmpsl
test
mov
xor
pop
scas
icebp
and
xchg
stos
leave
add
and
clc
push
and
js
addb
adc
cmp
cmp
mov
cmp
dec
dec
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
enter
push
xchg
cmp
stos
dec
xchg
enter
xor
inc
pop
push
dec
shr
push
jle
inc
mov
lret
sbb
repz
repnz
cmp
addb
cmp
cmp
cmpsl
lock
rcll
adc
adc
cmp
cmp
lret
pop
push
push
inc
es
mov
mov
push
lret
mov
push
mov
sub
in
push
sbb
cmpsb
lods
jmp
sub
inc
shrl
sub
mov
rorb
jge
jle
ds
pop
jle
sbb
jo
xchg
xchg
xor
test
jno
mov
fsubr
in
clc
aaa
dec
mov
cmp
xor
addr16
repnz
cmp
sub
test
lret
in
jne
jmp
stos
sub
push
sub
jne
rcr
add
lea
daa
test
sub
cmpl
hlt
addb
adc
cmp
cmp
clc
jg
mov
adc
stos
pop
arpl
lock
add
negb
pop
shll
aam
push
xchg
xchg
jecxz
jo
daa
xchg
add
xchg
rep
mov
es
mov
std
pop
or
mov
jns
inc
mov
aam
repnz
fiaddl
adc
adc
cmp
cmp
xor
out
mov
push
repnz
lock
addb
adc
cmp
cmp
push
test
shlb
mov
mov
add
pop
dec
call
scas
push
mov
push
mov
movsl
out
lea
dec
mov
int
fs
imul
addb
cmp
cmp
mov
fiaddl
adc
adc
cmp
cmp
mov
cmpb
cmp
sahf
pusha
icebp
dec
mov
push
movnti
fsubs
jge
mov
pop
fwait
pop
sbb
pusha
out
or
pop
sti
add
bound
cmpsl
xor
xchg
dec
into
mov
dec
inc
inc
je
dec
enter
jo
pop
add
xor
inc
and
sub
adc
or
xchg
test
push
addb
adc
cmp
cmp
jne
lret
push
stos
jg
fisubrl
testl
shlb
test
mov
enter
sbb
mov
adc
adc
cmp
cmp
mov
pop
mov
adcb
adc
cmp
cmp
mov
xchg
jle
pop
jle
sub
xor
addb
cmp
cmp
mov
cmp
or
imul
gs
out
sti
cmpsl
inc
pop
aaa
add
adc
adc
cmp
cmp
mov
arpl
addb
adc
cmp
cmp
addb
adc
cmp
cmp
lock
cli
xchg
pop
dec
repz
mov
std
push
fiadds
in
dec
mov
addb
cmp
cmp
mov
scas
jecxz
fistpl
outsb
fildl
adc
adc
cmp
cmp
xor
and
lock
jmp
mov
lock
pop
cmp
ljmp
les
push
addb
adc
cmp
cmp
popa
nop
rorb
jno
pop
rolb
adc
adc
cmp
cmp
mov
clc
pop
addb
adc
cmp
cmp
jb
adc
jnp
cmpb
outsb
test
mov
adc
fs
addb
cmp
cmp
mov
mov
in
addb
adc
cmp
cmp
test
insb
lock
and
pusha
int
into
test
pop
rorl
cmp
rorl
std
mov
adc
adc
cmp
cmp
rorl
adc
lret
out
push
adc
dec
dec
sti
and
adc
ljmp
in
and
addb
adc
cmp
cmp
out
stos
dec
inc
jno
addb
cmp
cmp
mov
mov
push
jb
inc
pop
pusha
dec
mov
adc
adc
cmp
cmp
mov
push
aad
push
push
mov
addb
adc
cmp
cmp
jo
sub
fstps
sti
in
xor
andl
addb
adc
cmp
cmp
pop
or
insl
out
aaa
test
addb
cmp
cmp
mov
xorb
ret
addb
cmp
cmp
stos
mov
inc
and
lcall
add
ret
jns
addl
xchg
clc
imulb
xchg
or
dec
out
outsb
iret
dec
mov
addb
adc
cmp
cmp
pop
int3
pop
mov
jecxz
mov
test
mov
jae
xchg
push
xchg
nop
int3
sub
sbb
cltd
pop
faddl
adc
adc
cmp
cmp
xchg
mov
adc
mov
cltd
xchg
repnz
jnp
sti
or
push
test
sbb
jmp
pop
mov
addb
cmp
cmp
mov
add
addb
cmp
cmp
mov
inc
sahf
sbb
in
and
addb
cmp
cmp
mov
xor
or
adc
adc
cmp
cmp
mov
jno
stos
addb
adc
cmp
cmp
xor
ja
xor
pop
mov
gs
addb
cmp
cmp
mov
dec
mov
lods
addb
adc
cmp
cmp
clc
popf
ds
lret
push
mov
xchg
addb
adc
cmp
cmp
mov
ss
mov
sub
jne
repnz
sub
adc
adc
cmp
cmp
jb
adc
mov
arpl
push
aad
aam
nop
aas
mov
lret
sti
pop
xchg
out
cmp
out
ret
jmp
fwait
nop
fisubrl
cld
addb
adc
cmp
cmp
int
mov
loopne
push
divl
int
addb
adc
cmp
cmp
pop
jno
ss
adcl
addb
adc
cmp
cmp
mov
int
cld
push
ret
addb
adc
cmp
cmp
stos
lcall
insb
movsb
mov
decb
jmp
sub
adcb
adc
cmp
cmp
mov
aas
aam
pop
cli
dec
pop
push
icebp
cmp
addb
cmp
cmp
mov
int
sbb
cs
adc
gs
cmp
adc
dec
and
push
dec
push
loope
jecxz
mov
xchg
dec
pop
dec
xchg
cmp
addb
cmp
cmp
mov
js
ljmp
push
test
and
adc
cmp
or
outsb
fidivs
bound
and
addb
adc
cmp
cmp
iret
scas
bound
call
push
jecxz
add
or
addb
adc
cmp
cmp
mov
dec
mov
pushf
push
es
stos
ret
iret
dec
pop
ret
cli
ror
or
addb
adc
cmp
cmp
xor
jp
sbb
addb
cmp
cmp
mov
sbb
movsl
push
adc
add
lock
call
std
xchg
rcrb
xor
push
addb
cmp
cmp
mov
testl
push
insl
bound
sub
adc
adc
cmp
cmp
mov
xor
pop
xchg
cli
cli
mov
dec
xchg
arpl
sub
xor
jecxz
xchg
or
add
adc
adc
cmp
cmp
mov
lcall
clc
addr16
enter
pop
in
test
cltd
arpl
ja
divb
jae
test
jno
xchg
loop
bound
sbb
push
outsb
lea
jecxz
sub
jl
bound
roll
ret
add
jmp
jl
cltd
repz
cmp
jnp
roll
adc
adc
cmp
cmp
mov
add
adc
adc
cmp
cmp
loopne
dec
cmpsb
fidivrl
pop
mov
imul
pushf
aaa
add
addb
adc
cmp
cmp
sub
sbb
loopne
and
push
daa
outsl
inc
pop
out
inc
dec
mov
mov
adc
adc
cmp
cmp
sub
add
adc
adc
cmp
cmp
and
into
aad
inc
stc
dec
push
inc
cmp
push
sbb
ret
pop
ret
cmc
incb
adc
adc
cmp
cmp
push
ficomps
cmpsb
pop
movsb
arpl
addb
adc
cmp
cmp
movsb
xchg
mov
aaa
fldt
icebp
mov
jbe
pop
es
or
cmp
addb
adc
cmp
cmp
add
inc
sbb
lcall
addb
cmp
cmp
pop
push
push
loopne
addb
adc
cmp
cmp
jg
xchg
jge
jg
xor
jmp
xor
xor
addb
adc
cmp
cmp
clc
jle
sbb
push
movsb
sbb
and
cmpsl
cmp
fbstp
rolb
and
xchg
lahf
sub
stos
inc
int3
loope
push
xor
fildll
sub
push
adc
adc
cmp
cmp
mov
inc
push
cmpsb
in
jb
int3
pop
addb
adc
cmp
cmp
mov
push
pop
jmp
or
lea
push
jl
mov
addb
cmp
cmp
arpl
jnp
xchg
inc
lret
addb
adc
cmp
cmp
inc
pop
mov
cmp
ret
dec
negb
in
sub
adc
and
cmp
addb
cmp
cmp
mov
jp
in
and
int
xor
incb
addb
adc
cmp
cmp
test
addb
adc
cmp
cmp
int
dec
add
js
push
cld
stc
mov
inc
sbb
imul
push
aam
xchg
sub
and
test
incb
jmp
adcb
adc
cmp
cmp
mov
xor
fildll
cld
lea
stos
sahf
rolb
xchg
sbb
xor
add
xchg
cwtl
addb
adc
cmp
cmp
cmpl
addb
cmp
cmp
fs
xchg
data16
add
aas
insb
pushf
addb
adc
cmp
cmp
xchg
mov
sbb
das
mov
push
mov
sub
jecxz
mov
push
sbb
adc
adc
cmp
cmp
sbb
fldcw
jp
movsl
cld
mov
mov
mov
jnp
jae
xchg
jmp
nop
push
pop
sub
xor
leave
inc
les
scas
mov
es
and
mov
mov
dec
add
sub
aas
push
xor
fdivrl
mov
subl
arpl
pop
ja
sbb
mov
pop
sbb
push
aam
bound
xchg
xchg
mov
adc
test
fists
mov
jp
lcall
push
dec
dec
addb
adc
cmp
cmp
push
fidivs
pop
cmp
jbe
rorb
addb
cmp
cmp
mov
out
dec
jl
adc
lret
js
iret
fwait
mov
xor
addb
adc
cmp
cmp
roll
xchg
pusha
cmp
addb
adc
cmp
cmp
int3
jle
into
popa
xor
push
shll
mov
addb
adc
cmp
cmp
cmp
adc
adc
cmp
cmp
adc
push
mov
rcll
fsubrs
addb
adc
cmp
cmp
cli
arpl
xchg
dec
push
test
jl
sbb
popf
in
jecxz
adc
or
push
aas
out
ss
addb
adc
cmp
cmp
xor
xchg
cmp
mov
ss
fimull
in
mov
pop
mov
lods
xlat
sti
sub
sti
fldt
add
aaa
hlt
cmp
das
fnstenv
loop
scas
imul
mov
lret
cmc
jmp
call
mov
out
fistpl
in
pop
and
out
in
test
xor
cmp
or
repnz
adc
or
inc
ret
push
jge
xor
cwtl
and
xor
push
je
popf
addb
adc
cmp
cmp
fstps
pop
in
loop
addb
cmp
cmp
mov
arpl
addb
cmp
cmp
mov
mov
push
sbb
inc
adc
adc
adc
cmp
cmp
mov
daa
test
rcrl
mulb
ret
xchg
addb
adc
cmp
cmp
mov
push
dec
imul
adcb
adc
cmp
cmp
mov
popf
sub
xchg
sbb
sub
sbb
inc
lahf
mov
mov
adc
mov
mov
adc
andb
dec
mov
popf
ret
or
and
adc
adc
cmp
cmp
mov
dec
addb
adc
cmp
cmp
call
cli
addb
adc
cmp
cmp
xchg
pop
fistpll
cmpsl
ret
sbb
scas
int
subb
jg
popl
fiaddl
adc
adc
cmp
cmp
xor
adc
push
pushl
xchg
lods
sar
add
in
lds
stos
xorb
das
lods
aas
inc
outsb
hlt
addb
adc
cmp
cmp
xchg
roll
sbb
addb
cmp
cmp
mov
lret
sti
test
adc
adc
cmp
cmp
add
repz
sbb
or
dec
iret
pop
out
xchg
iret
fisttps
bound
insl
inc
dec
jle
cli
repz
sti
sti
ret
cs
in
cmp
les
ds
mov
cli
fcoms
imul
adc
adc
cmp
cmp
popa
add
js
dec
pop
or
rcll
or
ret
cmp
sbb
adc
adcb
adc
cmp
cmp
mov
lods
roll
mov
mov
jae
dec
call
xor
adc
adc
cmp
cmp
mov
xchg
int
sub
lods
adc
adc
adc
cmp
cmp
push
mov
iret
and
xchg
fisttpll
dec
push
jle
ja
daa
aas
add
adc
adc
cmp
cmp
enter
pop
adc
inc
ja
orb
loop
movsl
ret
loopne
and
addb
cmp
cmp
mov
shlb
add
pop
clc
xor
or
aad
dec
adc
addr16
addb
adc
cmp
cmp
lods
loope
addb
adc
cmp
cmp
mov
xchg
push
inc
or
adc
adc
cmp
cmp
add
addb
adc
cmp
cmp
fstpt
sub
shlb
test
addb
cmp
cmp
pop
addb
adc
cmp
cmp
cwtl
fstp
inc
sbb
rcrl
jecxz
scas
movsl
addb
adc
cmp
cmp
ja
add
push
imul
adc
adc
cmp
cmp
pop
data16
jnp
ret
test
sbb
cs
in
loop
pxor
jecxz,pn
push
pop
ljmp
xchg
dec
mov
scas
and
sbb
push
push
icebp
push
in
inc
mov
push
xchg
mov
lcall
xchg
mov
leave
jne
les
cmp
outsl
sub
aad
stos
adc
cmp
xchg
jecxz
fwait
std
xor
xchg
mov
fimuls
int
and
inc
or
stos
xchg
rorb
adc
or
and
mov
mov
ret
push
and
cmc
add
lret
pusha
mov
addb
adc
cmp
cmp
fsts
les
cmp
ja
call
rcrb
adc
adc
cmp
cmp
mov
dec
cmp
adcb
adc
cmp
cmp
mov
dec
jmp
addb
cmp
cmp
mov
dec
mov
rcr
or
adc
adc
cmp
cmp
out
dec
inc
mov
xchg
fimull
add
ljmp
jmp
xchg
rcrl
jl
jo
inc
mov
in
cmpsb
push
cmc
nop
and
inc
movsl
sbb
push
jbe
popa
jle
jne
out
enter
mov
mov
dec
cltd
mov
mov
inc
inc
pop
icebp
or
push
roll
mov
addb
adc
cmp
cmp
jae
jnp
or
fiadds
addb
cmp
cmp
mov
or
add
adc
jmp
bound
sub
jmp
push
into
daa
pushf
ja
xchg
and
lea
adcb
adc
cmp
cmp
mov
mov
hlt
sub
cmpsl
push
or
push
jno
fs
jo
mov
fdivs
cmpsl
xorl
inc
ss
in
daa
or
divl
sbb
js
and
movsl
cmp
sub
add
xchg
add
or
add
or
repnz
test
mov
add
scas
cmp
addb
cmp
cmp
mov
outsb
das
addb
adc
cmp
cmp
push
mov
xor
dec
inc
sub
out
xchg
adc
adc
cmp
cmp
inc
xor
inc
pusha
out
aam
icebp
mov
adc
adc
cmp
cmp
icebp
inc
ss
and
repnz
test
pop
cmpsb
loop
enter
inc
xor
addb
adc
cmp
cmp
sbb
push
mov
enter
ret
mull
iret
sti
bound
adc
adc
cmp
cmp
mov
and
xchg
lock
iret
inc
pop
add
pop
repz
mov
cmpsb
push
adc
enter
addb
cmp
cmp
enter
adcb
adc
cmp
cmp
mov
ss
je
mov
push
addb
adc
cmp
cmp
fcompp
fistpl
mov
in
mov
mov
addb
cmp
cmp
repz
adc
adc
cmp
cmp
mov
push
mov
fwait
cltd
add
sub
and
aad
je
addb
adc
cmp
cmp
cmp
mov
addb
adc
cmp
cmp
pop
dec
stos
push
jbe
lods
insb
fisttpll
mov
xor
mov
addb
adc
cmp
cmp
outsb
lcall
adcb
adc
cmp
cmp
mov
mov
pop
das
repz
xchg
lods
xchg
stos
nop
sub
cli
mov
adcb
adc
cmp
cmp
mov
cmp
stos
rcrb
dec
repnz
movsb
cmp
enter
imul
icebp
negb
inc
sub
addb
adc
cmp
cmp
addb
adc
cmp
cmp
and
pop
hlt
movsl
push
and
int
ficoml
stos
rcr
dec
and
fnstcw
xchg
dec
out
repnz
or
xlat
push
mov
insb
mov
pop
jbe
jb
jl
sub
orl
addb
adc
cmp
cmp
xchg
enter
icebp
std
dec
fucom
add
shrb
or
into
xchg
cmp
add
jne
jp
jecxz
pop
ja
inc
imul
xchg
pop
sub
dec
sub
in
out
bound
lea
movsl
test
test
cmpsl
into
sbb
outsl
je
jae
out
test
adc
push
sub
inc
pop
mov
addb
adc
cmp
cmp
push
xor
add
hlt
mov
scas
xor
test
xchg
icebp
mov
push
and
mov
jmp
xor
add
sti
in
add
js
arpl
adc
adc
cmp
cmp
mov
dec
and
add
addb
addb
cmp
cmp
mov
pop
sarb
addb
adc
cmp
cmp
xchg
mov
lods
mov
sti
sti
mov
pop
cmp
out
mov
addb
cmp
cmp
mov
jp
jmp
shlb
sub
add
outsl
jne
mov
adc
jg
fwait
lods
sub
movsb
orl
sti
dec
jno
addb
cmp
cmp
mov
sub
xor
addb
adc
cmp
cmp
js
adc
gs
mov
cmpsb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sbb
push
mov
xchg
sbb
inc
ljmp
xchg
shll
jecxz
sti
fs
rorl
mov
inc
pop
mov
imul
pop
test
adcl
xlat
or
mov
arpl
addb
adc
cmp
cmp
jecxz
and
addb
adc
cmp
cmp
bnd
addb
cmp
cmp
adc
adc
adc
cmp
cmp
loopne
jl
xchg
xchg
loope
push
loopne
int
inc
fcmovu
fwait
clc
mov
and
sub
icebp
sbb
xchg
mov
add
jns
xchg
pop
xor
mov
adcb
adc
cmp
cmp
mov
sub
addb
cmp
cmp
mov
cmp
xchg
mov
adcb
adc
cmp
cmp
mov
popa
jge
insb
lret
movsl
movsl
xor
jle
xchg
addb
adc
cmp
cmp
sbb
addb
adc
cmp
cmp
dec
fs
jno
rcll
or
jne
dec
rol
jns
cmpl
xchg
fisubs
sbb
addb
adc
cmp
cmp
cwtl
stc
push
dec
sysret
pop
mov
dec
xor
push
lock
fwait
push
xor
addb
cmp
cmp
mov
xor
dec
divb
inc
add
repz
icebp
addb
adc
cmp
cmp
scas
pushf
jne
addb
adc
cmp
cmp
mov
int3
push
test
inc
mov
sarb
mov
das
fnsave
adcb
adc
cmp
cmp
mov
aam
sub
xchg
adc
adc
cmp
cmp
inc
scas
addb
adc
cmp
cmp
push
out
imul
adcb
adc
cmp
cmp
mov
jns
mov
dec
or
test
jne
rol
roll
adc
cmp
cmp
mov
mov
mov
pop
adc
and
test
mov
test
aad
stos
and
lea
test
push
loop
faddl
mov
pop
sar
pop
push
addb
adc
cmp
cmp
gs
jo
mov
loope
dec
divl
adcb
adc
cmp
cmp
mov
lods
fs
dec
pop
cltd
adc
in
sub
gs
pop
out
out
and
addb
adc
cmp
cmp
push
fwait
loopne
lock
inc
and
rolb
bound
adc
add
inc
addb
adc
cmp
cmp
mov
nop
test
adc
addb
adc
cmp
cmp
test
mov
adc
adc
cmp
cmp
mov
cmp
sbbb
insb
lods
sbb
addb
adc
cmp
cmp
jp
addb
cmp
cmp
mov
jmp
push
arpl
sbbl
stc
xchg
or
mov
addb
cmp
cmp
pop
roll
push
and
sahf
jnp
aas
and
add
movsb
fwait
inc
mov
data16
xchg
xchg
lahf
popl
addb
cmp
cmp
ds
fidivl
push
aam
xor
and
jmp
loopne
addb
adc
cmp
cmp
mov
aad
pop
or
xchg
push
scas
mov
dec
inc
pop
xchg
addb
adc
cmp
cmp
fwait
dec
sbb
flds
xor
das
jge
or
lea
mov
out
addb
adc
cmp
cmp
inc
addb
adc
cmp
cmp
mov
cmc
dec
pop
lret
scas
mov
or
mov
dec
sub
imul
and
popa
pop
mov
shlb
leave
inc
iret
mov
insb
test
sbb
hlt
xchg
xchg
push
xor
sbb
jmp
dec
out
fiaddl
adc
adc
cmp
cmp
ja
addb
cmp
cmp
mov
mov
stos
cmp
insb
push
or
in
cmp
adc
adc
cmp
cmp
mov
fwait
pop
pop
add
xor
mov
or
addb
adc
cmp
cmp
push
imul
jl
aam
adc
adc
addb
cmp
cmp
shlb
push
in
push
and
lret
int3
pop
sbb
stos
sbb
loop
fmull
in
add
out
or
out
addb
adc
cmp
cmp
jno
xchg
xchg
dec
cmc
mov
and
loope
daa
mov
cmpsb
cmp
xchg
mov
movsl
mov
into
mov
push
sub
sub
in
push
cmp
xor
xchg
dec
cmp
add
xchg
mov
addb
cmp
cmp
mov
fwait
dec
bt
ficompl
dec
fwait
cmpb
fiadds
adc
adc
cmp
cmp
mov
jmp
addb
cmp
cmp
mov
fwait
sbb
adc
add
addb
adc
cmp
cmp
or
cwtl
push
or
inc
pop
mov
mov
cwtl
orl
cli
mov
divb
adc
adc
cmp
cmp
bound
xlat
sahf
cmp
addb
adc
cmp
cmp
es
lret
pop
gs
mov
movsb
mov
addb
cmp
cmp
mov
shr
in
cld
inc
mov
addb
adc
cmp
cmp
aaa
leave
out
jp
data16
adc
cmp
cmp
js
outsl
pop
inc
push
sub
in
mov
into
xchg
push
pop
pop
push
jle
repz
adc
cmp
cmp
imul
popf
in
mov
loop
add
adc
hlt
lds
push
push
cmp
mov
movsb
movsl
scas
cli
rorb
and
push
and
addb
cmp
cmp
mov
cli
orb
scas
adc
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
gs
in
addb
adc
cmp
cmp
add
xchg
adc
jmp
mov
clc
jb
in
mov
addb
cmp
cmp
cmc
insl
ja
addb
cmp
cmp
mov
sub
pop
dec
dec
cmc
ja
movl
addb
cmp
cmp
addb
adc
cmp
cmp
jbe
jae
dec
xor
jae
mov
and
lods
sbb
in
lret
push
mov
mov
dec
aaa
bound
mov
xor
int3
pop
fldln2
sbb
insb
outsl
cltd
lea
pop
mov
mov
adcb
adc
cmp
cmp
mov
adc
addb
cmp
cmp
mov
jle
or
addb
adc
cmp
cmp
or
int3
out
jg
addb
cmp
cmp
mov
mov
jne
imulb
cmpsb
in
aas
mov
cmpsb
jnp
movups
sbbl
int
add
push
and
enter
fsubr
xor
cmp
loope
paddusb
int
rcll
push
lods
sbb
inc
ss
faddl
or
fisubrl
push
lret
xchg
adcb
adc
cmp
cmp
mov
popf
out
loop
nopl
movsl
mov
mov
inc
jno
adc
jo
inc
cmp
dec
fwait
jmp
sbb
jne
in
addb
cmp
cmp
mov
add
lea
daa
jno
lock
dec
pop
add
mov
push
push
jns
addb
cmp
cmp
mov
dec
test
enter
addb
adc
cmp
cmp
int3
mov
in
addb
adc
cmp
cmp
ds
pusha
nop
addb
adc
cmp
cmp
loop
inc
into
xor
dec
and
cmp
jns
mov
icebp
sub
repnz
mov
addb
cmp
cmp
adc
adcb
adc
cmp
cmp
mov
pop
stc
push
fcompl
jle
addb
adc
cmp
cmp
mov
adc
dec
adc
std
xor
addb
cmp
cmp
mov
mov
jmp
xchg
mov
adc
adc
cmp
cmp
mov
xchg
or
mov
mov
pop
int
jnp
mov
pop
or
addb
adc
cmp
cmp
jae
cmovs
test
std
cmpsb
dec
fnstenv
outsb
repnz
stc
and
mov
add
push
push
xchg
sbb
addb
cmp
cmp
mov
into
cmpsb
push
enter
test
jge
into
or
pop
loope
add
repz
and
adc
adc
jne
pop
inc
int3
in
fcoml
ret
push
lcall
addb
cmp
cmp
mov
jge
in
mov
shl
jns
xchg
xchg
mov
lret
xchg
jmp
jg
rolb
adc
cmp
cmp
mov
lods
pop
addb
adc
cmp
cmp
or
lret
daa
jle
jae
push
add
cmp
movsl
xchg
pop
out
addb
cmp
cmp
mov
sub
pop
xor
ror
cli
adc
or
imul
xlat
movsb
imul
mov
adcb
adc
cmp
cmp
mov
insb
xchg
fisttpll
mov
adc
mov
or
addb
cmp
cmp
mov
sbb
ja
mov
addb
adc
cmp
cmp
inc
cmp
add
adcb
adc
cmp
cmp
mov
jg
out
or
out
jno
sahf
pop
jbe
mov
insl
xor
adc
aad
sbb
adc
sar
lcall
fstpt
pop
lods
push
pop
and
add
mov
ret
movsl
aam
add
adc
or
addb
cmp
cmp
fidivrs
lds
mov
inc
lods
lock
movsb
cmp
int
pop
push
sub
jg
inc
xlat
mov
pop
addb
adc
cmp
cmp
add
add
push
ds
jnp
sub
aas
cmp
nop
and
outsb
lea
fwait
jmp
shlb
ds
cmp
addb
adc
cmp
cmp
fimuls
dec
scas
cmp
mov
mov
repnz
mov
sub
addb
adc
cmp
cmp
dec
mov
jge
sbb
inc
jmp
pop
cwtl
stos
lahf
movsl
imul
addb
cmp
cmp
daa
xchg
mov
outsl
fbstp
pop
test
addb
adc
cmp
cmp
adc
push
jne
sbb
adcb
adc
cmp
cmp
mov
imul
and
dec
cmp
enter
cmpl
sub
shlb
sbb
mov
sbb
enter
addb
cmp
cmp
mov
outsl
addb
adc
cmp
cmp
jmp
icebp
sbb
jbe
sbbl
pushf
addb
adc
cmp
cmp
mov
lahf
or
lcall
and
ret
inc
jb
ds
adcb
adc
cmp
cmp
mov
outsb
inc
or
dec
adc
add
mov
or
out
gs
or
loope
xlat
push
mov
ret
and
aas
jae
addb
adc
cmp
cmp
xchg
mov
cld
fpatan
jmp
mov
popf
aas
scas
jl
bound
addb
adc
cmp
cmp
sarb
addb
cmp
cmp
mov
arpl
add
mov
push
mov
xchg
push
aam
jle,pn
xor
cli
pop
daa
lds
adc
adc
cmp
cmp
jl
or
outsl
jmp
outsb
notb
popa
push
pop
andl
sysenter
addb
adc
cmp
cmp
hlt
mov
cmpsb
push
sbb
mov
ja
push
dec
lret
add
addb
cmp
cmp
mov
xor
shrb
inc
sbb
pop
in
mov
jb
cmp
or
arpl
aad
push
loope
out
mov
adc
fs
fs
inc
jecxz
or
add
mov
and
test
jecxz
orl
cmp
cmp
mov
loop
fcomp
and
xchg
lds
dec
push
lret
xor
enter
mov
push
sub
jge
xor
addb
adc
cmp
cmp
lods
push
imul
rorl
lods
xchg
cmp
pop
decb
and
data16
adc
cmp
cmp
pop
jg
addb
cmp
cmp
mov
fists
cmp
imul
sbb
addb
cmp
cmp
mov
je
pop
dec
and
lret
jle
int3
pop
jp
adc
popa
adc
xchg
js
cmc
dec
icebp
orl
ss
mov
addb
cmp
cmp
mov
fwait
cmpsl
jmp
notb
push
or
xchg
stos
loop
dec
sbbb
notl
or
xor
test
jmp
test
addb
cmp
cmp
mov
mov
sbb
jo
cmp
fs
xchg
sub
push
call
push
sbb
cmp
loop
jl
push
inc
divl
leave
add
mov
pop
js
imulb
ret
mov
adcb
adc
cmp
cmp
mov
lret
push
add
push
test
lret
push
in
outsb
test
std
addb
adc
cmp
cmp
into
rcrl
lea
js
adc
xchg
jmp
fdivrl
add
sub
std
push
sbb
scas
jge
xor
pop
jnp
repz
sbb
mov
lcall
adc
cmp
cmp
mov
or
sahf
jae
outsb
or
xchg
test
mov
inc
orb
loop
mov
inc
jmp
rolb
addb
cmp
cmp
mov
loop
data16
addb
adc
cmp
cmp
movl
adc
adc
cmp
cmp
mov
movsb
out
fnstsw
sub
addb
cmp
cmp
mov
clc
xchg
jnp
stos
xchg
xchg
mov
add
lcall
inc
mov
stos
cltd
and
xchg
int3
addb
adc
cmp
cmp
mov
xorb
mov
insb
pop
pop
test
cmp
ret
push
mov
lahf
mov
insl
push
mov
inc
lea
and
addb
cmp
cmp
mov
addb
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
xor
aam
pop
push
stc
cld
mov
out
mov
stos
test
and
sbb
ja
adc
jle
inc
and
sbb
sub
pop
mov
push
sahf
sbb
jl
mov
xlat
xlat
pop
mov
xchg
imul
pop
push
out
fnsave
or
addb
cmp
cmp
mov
xor
addb
adc
cmp
cmp
icebp
and
pop
add
xor
adcb
adc
cmp
cmp
mov
aaa
lret
inc
imul
jb
scas
gs
mov
jbe
fwait
addb
adc
cmp
cmp
adc
pop
dec
xchg
inc
and
fwait
adc
out
push
jmp
std
dec
sahf
bound
addb
adc
cmp
cmp
lahf
add
rclb
inc
xchg
lret
cmpsb
stos
imul
mov
push
xor
adc
adc
cmp
cmp
sub
jle
int
lea
push
mov
andb
cmp
js
cmp
mov
jno
xor
das
push
mov
push
fiaddl
mov
adc
xor
push
into
mov
sub
addl
mov
xchg
mov
scas
jecxz
lods
pushf
push
fs
enter
push
daa
insb
addb
adc
cmp
cmp
cmc
mov
adc
addb
cmp
cmp
mov
test
lods
mov
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
inc
cmc
sub
addb
adc
cmp
cmp
or
mov
add
addb
cmp
cmp
mov
xlat
shlb
cmp
and
addb
cmp
cmp
mov
jae
loop
push
lahf
add
fldcw
test
gs
sbb
add
mov
adc
adc
cmp
cmp
pop
and
out
sbb
loop
js
addb
cmp
cmp
mov
outsb
call
pop
in
jg
addb
adc
cmp
cmp
cli
pusha
movsl
sbb
xor
or
or
repnz
pop
in
mov
sub
js
pop
sti
or
mov
ljmp
lahf
xchg
mov
addb
adc
cmp
cmp
dec
dec
mov
inc
add
addb
cmp
cmp
mov
addb
adc
cmp
cmp
pop
aam
sbb
enter
addb
adc
cmp
cmp
cmp
sbb
or
add
outsl
fldl
mov
fildl
adc
adc
cmp
cmp
shlb
loope
mov
mov
lea
addb
adc
cmp
cmp
mov
mov
adc
xor
pop
addb
adc
cmp
cmp
adc
jmp
addb
cmp
cmp
mov
lds
adc
adc
cmp
cmp
addb
adc
cmp
cmp
fnstenv
mov
xchg
fildll
orl
xchg
jmp
xor
and
cs
fsubl
mov
xchg
lds
adc
adc
cmp
cmp
mov
aam
enter
in
andl
mov
addb
adc
cmp
cmp
jnp
rcr
bound
lcall
out
push
lock
pop
fs
mov
out
pop
ljmp
adc
addb
adc
cmp
cmp
push
in
jl
cwtl
mov
enter
sub
push
addb
adc
cmp
cmp
sarl
aas
addb
adc
cmp
cmp
mov
add
test
sub
and
sar
leave
xchg
arpl
lahf
stos
mov
dec
inc
or
or
push
les
push
adc
sub
addb
adc
cmp
cmp
push
cmp
sbb
stos
movsb
sbb
addb
cmp
cmp
dec
in
stos
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
addb
adc
cmp
cmp
dec
jmp
jb
pop
xlat
out
addb
adc
cmp
cmp
and
mov
and
mov
jmp
enter
aaa
out
stos
jg
push
cmp
or
loopne
pop
cmpl
scas
add
addb
cmp
cmp
sbb
addb
cmp
cmp
mov
push
mov
stos
add
push
sarl
mov
addb
adc
cmp
cmp
mov
or
jns
fwait
pop
cli
mov
out
test
out
inc
push
push
sahf
mov
sbb
hlt
scas
push
push
cmp
clc
mov
daa
push
jne
scas
cmp
inc
lock
imul
or
jecxz
jo
cmpsl
lahf
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
roll
fnsave
push
cltd
add
inc
pop
addb
adc
cmp
cmp
outsb
jg
arpl
or
imul
xorb
mov
adc
adc
cmp
cmp
mov
xor
and
and
xchg
dec
lahf
flds
adc
adc
cmp
cmp
pushf
cmpsl
ret
sbb
fstps
push
jnp
out
add
xchg
inc
pop
push
daa
stos
or
out
push
and
lret
out
out
ljmp
adcb
adc
cmp
cmp
mov
cmc
dec
mov
outsb
push
jge
fcomps
addb
cmp
cmp
mov
cmp
repnz
std
jns
mov
inc
or
es
outsl
cmp
aad
call
and
or
jne
jmp
lods
inc
hlt
jl
or
popf
jno
mov
and
sbb
jge
nopl
adc
adc
cmp
cmp
pop
jb,pt
arpl
xchg
pop
outsl
loop
inc
test
jo
jp
scas
adc
pop
push
divl
adcb
adc
cmp
cmp
mov
jg
xor
fucomip
jl
and
or
in
out
sbb
mov
adc
adc
adc
cmp
cmp
xor
jno
sahf
addb
adc
cmp
cmp
jmp
insl
addb
adc
cmp
cmp
inc
es
addb
adc
cmp
cmp
pop
push
rcr
xor
arpl
xlat
jg
push
push
lods
call
lea
enter
mov
cmpl
sbb
loope
push
in
dec
sub
lahf
shrl
addb
cmp
cmp
sub
xorl
and
popf
shll
addb
cmp
cmp
inc
mov
or
rorl
add
clc
scas
sbb
lock
aas
dec
dec
test
jbe
addb
adc
cmp
cmp
cmp
out
add
es
dec
xor
addb
adc
cmp
cmp
aaa
scas
addb
adc
cmp
cmp
loope
adcl
imul
addb
cmp
cmp
add
cmpsb
mov
inc
pop
pushf
lods
pop
add
addb
cmp
cmp
fwait
add
icebp
jmp
mov
addb
adc
cmp
cmp
cmp
mov
stos
push
sarl
pop
into
dec
xor
fisubrl
push
aad
shlb
orps
mov
inc
dec
xor
xor
shr
mull
xchg
jg
cltd
into
xchg
and
cli
push
xlat
pushl
scas
addb
adc
cmp
cmp
mov
or
sbb
stc
nop
pop
xchg
mov
pop
movsl
dec
or
jg
hlt
jnp
jge
addb
cmp
cmp
mov
pop
mov
adcb
adc
cmp
cmp
mov
and
jmp
addb
cmp
cmp
mov
or
jns
and
addb
cmp
cmp
mov
push
pop
mov
jecxz
ja
sub
adc
adc
cmp
cmp
cmp
xchg
addb
adc
cmp
cmp
rep
mov
cmpsl
mov
xchg
imul
lds
push
xchg
mov
pop
adc
addb
cmp
cmp
mov
sbb
cmpsl
cld
mov
cwtl
cmp
xor
fiaddl
mov
xor
addb
cmp
cmp
mov
inc
popa
mov
add
xchg
outsb
mov
cli
icebp
inc
sbbl
adcb
adc
cmp
cmp
mov
subl
rcrl
push
addb
cmp
cmp
mov
es
adc
cmp
cld
push
enter
push
mov
notl
adc
sub
popf
sub
and
mov
add
sub
cmc
arpl
out
and
mov
cmp
addb
adc
cmp
cmp
imul
in
mov
inc
mov
dec
nop
add
lcall
dec
adc
std
xor
ss
mov
push
add
outsb
xor
ja
fwait
xchg
mov
mov
repnz
movsb
xchg
in
inc
add
cld
dec
aaa
sbb
test
dec
nop
mov
dec
cmpsl
hlt
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
das
sbb
cltd
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xlat
mov
sti
inc
or
cmp
bound
mov
subl
fs
in
test
and
pusha
mov
and
addb
adc
cmp
cmp
or
aas
addb
adc
cmp
cmp
mov
sbb
sbb
call
out
das
in
lods
cmpsl
xchg
pop
pop
orb
fbld
cld
and
std
add
mov
pop
and
ds
cmp
dec
addb
adc
cmp
cmp
arpl
jae
jmp
out
pop
inc
aam
mov
addb
cmp
cmp
fnstsw
addb
adc
cmp
cmp
test
bound
add
sbb
loopne
add
mov
rorb
push
mov
add
int3
xor
or
dec
jle
test
int3
cmp
add
int3
push
sbb
outsb
xchg
inc
jb
addb
cmp
cmp
mov
xor
addb
cmp
cmp
mov
les
inc
sbb
out
and
pop
add
mov
rcrl
stos
dec
adc
addb
adc
cmp
cmp
mov
cmp
jge
enter
dec
pop
xchg
jmp
pop
insb
sub
mov
jecxz
lds
mov
out
or
and
lahf
bound
xor
adcb
adc
cmp
cmp
mov
ret
popf
addb
adc
cmp
cmp
mov
pop
js
movsb
push
pop
lea
cmp
frstor
xor
dec
or
test
jl
sub
adc
adc
cmp
cmp
mov
outsl
xor
lret
jno
inc
add
adcb
adc
cmp
cmp
mov
cs
test
or
icebp
addb
adc
cmp
cmp
loop
filds
inc
add
imul
sbb
sbb
cmp
cmp
jg
adc
in
jp
addb
cmp
cmp
mov
test
mov
cwtl
ds
add
loope
orl
mov
mov
xor
sbb
mov
or
add
outsb
xchg
sbb
lret
ds
adc
out
fdivp
js
sub
jle
bound
fimull
sbb
pop
pop
dec
addl
repz
adc
adc
cmp
cmp
bound
add
addb
cmp
cmp
mov
outsb
jnp
mov
hlt
pop
push
xlat
jecxz
inc
sub
jns
imul
pop
jecxz
push
fnstenv
xchg
incl
cmc
xor
addb
adc
cmp
cmp
lcall
popf
dec
dec
mov
xchg
int3
out
jge
xchg
jb
fiadds
adc
adc
cmp
cmp
pusha
je
addb
adc
cmp
cmp
fadds
adc
adc
cmp
cmp
les
add
adc
adc
cmp
cmp
push
aam
adc
xor
ret
mov
or
jne
fdivrs
xor
aad
xchg
jp
sbb
adc
adc
adc
adc
cmp
cmp
jnp
aad
rolb
adcb
adc
cmp
cmp
mov
out
cmp
iret
pop
adc
outsb
pusha
push
adc
ljmp
adc
adc
cmp
cmp
mov
test
xor
sub
cs
aam
sar
scas
pop
jg
lret
popf
dec
addb
adc
cmp
cmp
mov
jae
add
inc
inc
cmp
pop
dec
push
popf
mov
add
push
mov
inc
mov
hlt
add
push
bound
lds
add
xor
icebp
scas
pop
pop
std
sbb
cmp
mov
mov
add
test
inc
mov
mov
test
and
gs
test
loopne
fdivs
mov
stos
rclb
addr16
xor
pop
call
addr16
test
out
fs
jmp
xor
xor
pushf
fnsave
xchg
pop
mov
shll
jge
testb
call
int3
mov
inc
fstl
mov
adcb
adc
cmp
cmp
mov
nop
ret
pop
loopne
sbb
loope
cmpsl
mov
add
cwtl
mov
push
dec
fnstenv
in
push
lods
or
shl
cmp
add
push
negl
fsubr
ss
fs
mov
push
jmp
mov
lcall
adc
adc
cmp
cmp
mov
mov
fwait
addb
adc
cmp
cmp
test
jle
cmp
sub
and
xchg
test
xchg
pusha
sbb
xor
in
mov
es
jg
mov
loop
lods
mov
pop
fdivs
jmp
inc
inc
addb
adc
cmp
cmp
pop
xchg
cwtl
xchg
stc
fisubrl
adc
or
adc
test
cmpsb
ss
pop
add
addb
adc
cmp
cmp
add
adc
adc
cmp
cmp
int3
je
adcl
adc
addb
adc
cmp
cmp
pop
pop
mov
and
les
adc
adc
cmp
cmp
out
add
addl
fs
rcrb
addb
cmp
cmp
pop
les
test
and
enter
adcb
adc
cmp
cmp
mov
sti
insl
repz
jge
enter
cld
pop
push
jo
sbb
cmp
add
fldenv
in
loopne
nop
dec
out
out
outsl
mov
inc
das
jne
push
push
leave
movsb
push
or
lret
lods
addb
adc
cmp
cmp
sub
cmpl
adc
inc
xchg
lret
repnz
adc
cmp
cmp
cmpb
add
data16
sbbb
popa
aas
in
les
sarl
sbb
xlat
mov
popa
out
out
mov
stos
out
addb
cmp
cmp
mov
movsb
arpl
andl
loopne
loope
sub
in
mov
or
pop
outsl
nop
cwtl
mov
adcb
adc
cmp
cmp
mov
push
cmp
into
loop
mov
jno
push
sub
adc
adc
cmp
cmp
paddw
mov
addb
adc
cmp
cmp
out
adc
sub
xor
sahf
jmp
addb
cmp
cmp
outsb
popa
sarl
or
adc
mov
inc
in
lret
addb
adc
cmp
cmp
mov
xor
adc
adc
cmp
cmp
mov
pop
mov
xchg
pop
and
inc
pop
insb
loope
pop
imul
addb
adc
cmp
cmp
add
cmp
xchg
in
xor
lods
ret
loopne,pt
push
aas
outsb
push
jnp
or
mov
sti
lahf
cld
push
es
mov
xor
or
addb
adc
cmp
cmp
jle
test
cmpsl
or
cmpsl
ret
icebp
mov
loop
ljmp
pop
call
addb
adc
cmp
cmp
clc
mov
or
xlat
xchg
es
pop
mov
mov
inc
imul
icebp
fldl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
out
nop
test
inc
mov
pop
push
addr16
mov
movsl
and
gs
inc
cmp
and
adcb
adc
cmp
cmp
mov
xor
mov
pop
pop
xor
addb
cmp
cmp
mov
sub
xchg
icebp
addb
adc
cmp
cmp
addr16
or
sbb
addb
adc
cmp
cmp
inc
int
cwtl
push
mov
imul
ds
stc
sub
mov
addb
cmp
cmp
mov
shrl
rclb
add
addb
cmp
cmp
mov
addb
adc
cmp
cmp
pop
mov
addb
adc
cmp
cmp
inc
dec
cs
outsb
inc
cmp
adc
addb
adc
cmp
cmp
les
sahf
inc
nop
test
sbb
addb
adc
cmp
cmp
pop
imul
inc
jmp
sti
adc
adc
adc
cmp
cmp
push
xchg
je
sti
mov
dec
sub
addb
cmp
cmp
mov
pop
pop
adc
addb
cmp
cmp
sar
ja
js
addb
cmp
cmp
mov
addb
adc
cmp
cmp
pop
xlat
adc
push
aad
pushl
xor
test
jge
xor
and
addb
adc
cmp
cmp
xchg
pop
setbe
and
pop
jne
test
out
ja
fildl
inc
mov
stos
insl
xchg
frstor
loope
setb
xchg
out
dec
sbbl
or
addb
adc
cmp
cmp
fld
iret
aam
in
cld
cmp
cltd
adc
cltd
xor
into
cltd
add
sub
add
leave
or
dec
fcmovbe
add
cmc
jno
rcl
addb
adc
cmp
cmp
aaa
mov
adcb
adc
cmp
cmp
mov
and
mov
into
adc
xor
adc
adc
cmp
cmp
add
adcb
adc
cmp
cmp
mov
cs
xchg
dec
jge
or
lods
clc
lahf
addb
adc
cmp
cmp
fldt
leave
std
mov
jne
jmp
and
dec
repz
out
push
lock
and
pop
push
dec
popf
aaa
inc
cwtl
pop
je
push
pop
xchg
dec
bound
addb
cmp
cmp
fistpll
ret
mov
addb
adc
cmp
cmp
mov
or
cmp
scas
test
mov
rclb
adc
adc
cmp
cmp
mov
jo
sbb
push
jg
shrl
test
dec
fstpt
addb
cmp
cmp
mov
adc
mov
sarb
mov
addb
cmp
cmp
mov
xor
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
hlt
jo
addb
cmp
cmp
mov
inc
push
push
push
xor
cmpsl
sub
sahf
jb
ret
aad
call
mov
rolb
adc
adc
cmp
cmp
shl
pushf
dec
mov
addb
cmp
cmp
sub
sub
sub
stc
inc
pop
fcomp
pop
inc
roll
mov
mov
mov
mov
mov
add
cli
and
xchg
jge
add
add
negl
addb
adc
cmp
cmp
push
pop
cmp
pop
pop
mov
cmc
and
addb
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
gs
aas
repnz
mov
jne
jmp
fisubrs
sbb
xchg
das
or
lea
sbbl
orl
scas
sbb
adcb
adc
cmp
cmp
mov
mov
nop
mov
xor
mov
xor
dec
stos
mov
dec
out
sti
cli
sti
leave
popa
out
fisubl
jl
pop
adc
popa
addb
adc
cmp
cmp
or
push
pop
orl
adc
adc
cmp
cmp
mov
icebp
int
cld
scas
pop
xor
ss
jbe
scas
xlat
aas
addb
adc
cmp
cmp
test
repz
and
lret
faddl
sbb
out
cld
js
mov
sbb
mov
dec
lock
addb
adc
cmp
cmp
aam
stos
push
addr16
aam
inc
jb
fwait
and
fstpl
push
int
mov
lahf
mov
into
nop
fisubl
adc
mov
jmp
addb
cmp
cmp
mov
sub
dec
addb
adc
cmp
cmp
js
addb
cmp
cmp
mov
in
inc
je
int
lcall
and
sbb
mov
dec
addb
adc
cmp
cmp
jecxz
daa
xchg
stc
pushf
pop
xor
jae
lods
lret
adc
addb
adc
cmp
cmp
push
pop
bnd
out
loopne
dec
dec
push
cwtl
lds
addb
cmp
cmp
mov
je
addb
cmp
cmp
mov
jb
mov
mov
push
xor
outsl
pop
call
xchg
test
mov
scas
js
jmp
js
mov
in
jno
repnz
imul
data16
xchg
movsb
pop
jb
scas
enter
sub
lods
roll
sub
adc
cmp
push
loope
addb
adc
cmp
cmp
mov
fsts
dec
clc
mov
jbe
mov
push
fisttpll
adc
adc
addb
adc
cmp
cmp
stos
inc
fdivrl
addb
adc
cmp
cmp
or
int
inc
addb
adc
cmp
cmp
enter
or
enter
fwait
sub
addb
cmp
cmp
scas
dec
mov
adc
adcb
adc
cmp
cmp
mov
or
lock
xchg
test
addb
cmp
cmp
mov
gs
push
lret
fsubl
dec
sarl
fistl
dec
cmpsb
test
and
cli
or
fldcw
pop
dec
enter
lods
inc
lret
fiadds
mov
dec
or
adc
jp
in
cmpsl
push
jp
sarl
xor
adc
ljmp
lret
aam
mov
adc
xchg
outsb
mov
addb
adc
cmp
cmp
lret
mov
daa
cs
jb
pusha
sbb
xchg
sahf
jge
mov
adcb
adc
cmp
cmp
mov
mov
negl
clc
out
pushf
jmp
addr16
pushf
sbb
addb
cmp
cmp
mov
pop
mov
loop
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
xor
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
push
iret
andb
mov
gs
or
mov
addb
adc
cmp
cmp
stos
mov
adc
adc
cmp
cmp
mov
leave
movl
or
adc
jmp
sub
aaa
ljmp
fs
leave
addb
adc
cmp
cmp
ds
addb
adc
cmp
cmp
add
out
clc
mov
pop
movsl
push
xchg
or
out
xchg
mov
sub
mov
sahf
repz
mov
pop
xchg
xor
sub
es
into
ficompl
ljmp
int
shl
jl
idivl
jno
das
pop
inc
int
xchg
dec
add
stc
jno
sbb
push
cmpsl
mov
mov
addb
adc
cmp
cmp
out
push
or
push
addb
cmp
cmp
mov
push
mov
stos
outsl
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
dec
push
jl
adcb
xor
inc
test
mov
shrb
ds
les
rcll
adc
adc
cmp
cmp
mov
sbb
addb
cmp
cmp
mov
mull
addb
cmp
cmp
mov
scas
or
je
xchg
addb
adc
cmp
cmp
and
decl
stos
sbb
stos
and
jbe
fwait
inc
dec
icebp
fdivs
sub
adc
inc
pushf
adc
icebp
push
pop
jns
cmp
mov
cmp
pop
bound
js
mov
icebp
cmpsl
mov
orb
std
out
add
into
cmp
mov
adc
adc
cmp
cmp
cmpsl
sub
jno
cmp
sarl
sbbl
stos
jnp
jbe
xchg
push
adcb
adc
cmp
cmp
mov
mov
sub
cmpsl
sub
inc
pushf
inc
stos
mov
adcb
adc
cmp
cmp
mov
xchg
xor
cmp
clc
sti
das
or
dec
mov
push
mov
sub
nop
fstps
int
pop
addb
adc
cmp
cmp
dec
fsubr
add
adc
adc
cmp
cmp
mov
push
mov
test
daa
rolb
adc
adc
cmp
cmp
pop
fs
popf
mov
cmp
sti
iret
cmp
xchg
xchg
mov
cmp
gs
sbb
imul
adc
cmp
cmp
mov
loope
loop
ds
push
pushf
int3
or
lods
shrl
pushf
mov
and
in
test
and
dec
repz
xchg
imul
sahf
scas
mov
repz
addb
cmp
cmp
mov
ret
addb
cmp
cmp
mov
add
pop
imul
mov
dec
repnz
fucomi
stos
out
js
or
addb
cmp
cmp
mov
xchg
mov
or
addb
cmp
cmp
mov
es
imulb
addb
adc
cmp
cmp
insl
sbb
loop
pusha
add
or
outsl
mov
push
and
jne
aam
addb
cmp
cmp
mov
xlat
and
rclb
movsb
js
outsl
scas
dec
cmp
fnstsw
addb
cmp
cmp
mov
push
aad
jecxz
lock
into
pushf
dec
shl
push
int
jle
fiaddl
fs
lret
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
mov
addb
cmp
cmp
aaa
cmc
push
inc
xor
fnstsw
cmp
addb
adc
cmp
cmp
fdivl
addb
cmp
cmp
mov
add
ret
addb
cmp
cmp
mov
mov
xchg
repz
repnz
adc
jge
mov
inc
or
sti
das
insl
subl
cwtl
stos
pusha
mov
and
mov
loopne
ja
addb
adc
cmp
cmp
addb
adc
cmp
cmp
je
cld
sahf
dec
jecxz
dec
dec
imul
addb
cmp
cmp
mov
out
int3
adc
sub
cmp
pop
lock
adc
cmp
cmp
sbb
add
addb
cmp
cmp
mov
aad
mov
scas
test
mov
jle
jne
push
inc
xor
cmpsl
pop
dec
jo
pop
inc
jns
in
scas
lock
add
pop
stc
cmp
pop
sbb
jmp
mov
pop
fs
lods
or
pushf
push
cmpsl
adc
sar
and
mov
test
in
lds
mov
adc
mov
adcb
adc
cmp
cmp
mov
movsb
adc
adc
jl
test
sahf
jg
and
mov
push
push
mov
addb
adc
cmp
cmp
pushf
jo
pop
inc
ja
insl
sub
adcb
adc
cmp
cmp
mov
xchg
mov
jae
daa
mov
add
pushfw
addb
adc
cmp
cmp
jo
xchg
sub
loopne
cwtl
or
mov
mov
addb
cmp
cmp
shll
adc
jp
xchg
aad
cmpsl
repnz
mov
xchg
addb
adc
cmp
cmp
xor
mov
and
xor
addb
adc
cmp
cmp
sub
addb
cmp
cmp
mov
scas
addb
adc
cmp
cmp
and
cmc
into
mov
aaa
inc
mov
jg
jb
cmpsb
mov
pop
mov
stos
in
hlt
adc
outsl
addb
adc
cmp
cmp
add
mov
outsl
or
je
mov
or
jnp
inc
pop
sub
sub
fisubrs
js
mov
test
imul
aas
cmpsl
pop
or
jle
imul
sar
sbb
adcb
stc
popa
mov
out
addb
cmp
cmp
mov
testl
cmp
cmp
arpl
sub
test
and
jp
clc
mov
dec
ret
cmp
jle
and
dec
fwait
divl
addb
std
pop
cmp
pop
inc
lcall
addb
cmp
cmp
mov
sub
pusha
loopne
jo
out
mulb
and
mov
loope
rcl
call
and
xchg
mov
addb
adc
cmp
cmp
xchg
push
pop
movsb
adc
pop
or
repnz
lahf
add
pop
mov
dec
lahf
iret
adc
push
jbe
push
pusha
repz
adc
cmp
cmp
fildl
addb
cmp
cmp
mov
pop
sub
ret
inc
dec
fs
insl
mov
pop
adc
shll
movsl
pop
mov
push
xchg
out
addb
cmp
cmp
mov
addb
adc
cmp
cmp
in
jbe
push
insb
and
xlat
mov
xchg
popf
pop
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
sahf
gs
mov
pop
jp
stc
repz
rcrl
adc
daa
mov
push
dec
inc
divb
mov
xchg
mov
sbb
pusha
sub
addb
cmp
cmp
mov
dec
loopne
push
adc
outsl
aad
mov
test
addb
adc
cmp
cmp
add
mov
dec
shrl
adc
adc
cmp
cmp
mov
icebp
xchg
xor
sub
or
jno
addb
adc
cmp
cmp
movsb
push
test
stos
test
adc
scas
decl
flds
adc
adc
cmp
cmp
or
mov
inc
ds
push
fcomp
mov
lds
pop
in
and
arpl
adc
adcb
adc
cmp
cmp
mov
ret
jb
or
adc
adc
cmp
cmp
or
addb
cmp
cmp
mov
addb
adc
cmp
cmp
iret
mov
dec
icebp
xchg
pop
pop
push
push
jl
mov
adc
adc
cmp
cmp
mov
jb
repnz
mov
xchg
xor
mov
mov
mov
adc
adc
cmp
cmp
mov
mov
sbb
and
pop
movsb
movsl
mov
addb
cmp
cmp
sbb
and
mov
xor
aad
daa
icebp
push
jbe
mov
push
inc
decl
adcb
adc
cmp
cmp
mov
cmpsb
pop
pop
mov
iret
mov
mov
hlt
push
and
fwait
adc
les
vshufps
repnz
lock
dec
pop
jmp
sbb
dec
inc
inc
xor
and
adc
adc
cmp
cmp
test
xchg
popf
fidivrl
sub
mov
data16
adc
cmp
cmp
outsb
cltd
cmp
pushw
xor
sub
jns
rcl
in
lret
push
sub
xchg
popw
dec
xor
push
movsl
insb
fadds
adc
adc
cmp
cmp
outsb
test
push
popa
sub
pop
fstpt
or
addb
cmp
cmp
mov
dec
leave
fmull
stos
data16
push
addb
adc
cmp
cmp
xlat
mov
dec
into
cmp
fstpt
jne
mov
pop
movsb
mov
inc
pop
pop
insl
pop
push
mov
add
sbb
push
aad
loop
jnp
sub
mov
fisubrs
pop
xlat
test
xor
aam
std
lea
adc
adc
cmp
cmp
jnp
icebp
jbe
ficompl
movl
cmp
cmp
dec
ljmp
addb
cmp
cmp
out
orb
addb
cmp
cmp
mov
mov
mov
mov
repz
adc
cmp
cmp
decb
xchg
mov
adcb
adc
cmp
cmp
mov
loope
loopne
cmpsl
push
adc
imul
lret
push
stos
subb
push
adcb
adc
cmp
cmp
mov
sti
addb
adc
cmp
cmp
sbbb
push
pop
inc
fcoms
xchg
xchg
leave
adc
cmp
iret
and
xor
out
stc
push
xor
push
xlat
paddusb
addb
cmp
cmp
mov
mov
andb
xchg
cmpsb
or
sbb
add
push
imul
pop
dec
dec
subl
jbe
sub
and
out
sbb
cld
das
xor
or
addb
cmp
cmp
mov
mov
mov
jl
addb
adc
cmp
cmp
xchg
rclb
fwait
jbe
stos
cli
mov
mov
fisttps
adc
aam
sub
dec
xor
sub
lcall
xor
inc
inc
jno
aad
lret
into
sub
jl
das
addb
adc
cmp
cmp
mov
or
fcmovne
testb
adc
cmp
cmp
mov
sbb
push
lds
mov
mov
add
dec
addb
adc
cmp
cmp
pop
mov
loop
push
in
repz
addb
adc
cmp
cmp
aas
mov
jecxz
jb
jae
jle
outsl
es
or
xor
push
sub
jp
repz
sub
addb
adc
cmp
cmp
jb
or
mov
adc
mov
addb
cmp
cmp
mov
adc
js
mov
mov
pop
pusha
pop
pop
test
mov
stc
cmp
and
addb
cmp
cmp
mov
shll
ja
lahf
add
addb
cmp
cmp
xor
adc
mov
addb
adc
cmp
cmp
dec
jecxz
pop
movsl
mov
add
insl
inc
aad
push
sub
lahf
and
shlb
leave
jge
test
pop
xchg
mov
int3
fisubl
adc
adc
cmp
cmp
mov
test
arpl
cmp
adc
push
or
mov
ret
mov
testb
xor
push
arpl
insb
add
push
dec
stos
das
inc
addb
adc
cmp
cmp
xor
addb
cmp
cmp
mov
cli
xor
mov
stc
divb
imul
cmp
test
addb
cmp
cmp
mulb
sub
out
inc
andb
pop
leave
mov
jle
movsl
das
jmp
xchg
push
push
mov
scas
dec
xor
adc
adc
cmp
cmp
mov
add
jp
dec
imul
push
fidivrl
cmp
jbe
xchg
mov
aaa
xor
out
testb
jecxz
idivl
mov
mov
pop
lahf
es
ljmp
jnp
addb
cmp
cmp
mov
stos
out
adcl
sub
popa
xchg
out
xchg
aaa
and
addb
cmp
cmp
pop
jb
cmp
sub
xchg
mov
xorl
mov
in
les
add
popf
pop
mov
sbb
mov
mov
and
aad
addb
cmp
cmp
mov
repnz
dec
push
outsl
shrb
xor
sub
adcb
adc
cmp
cmp
mov
shll
xor
js
das
cmp
imul
adc
adc
cmp
cmp
test
sub
addb
cmp
cmp
mov
ret
addb
cmp
cmp
mov
out
pop
daa
xorl
cmp
or
jle
push
addl
repnz
push
pop
iret
mov
xchg
mov
test
in
push
addb
adc
cmp
cmp
pop
xor
push
lahf
adc
lahf
add
popa
movsl
imulb
sub
repnz
xchg
punpckldq
mov
sub
xor
push
jnp,pt
mov
or
dec
aaa
aad
sti
mov
addb
cmp
cmp
mov
xchg
push
xor
and
add
adc
inc
dec
and
mov
adc
adc
cmp
cmp
mov
pop
popa
mov
add
xchg
add
adc
adc
cmp
cmp
daa
das
cmp
adc
adc
cmp
cmp
mov
cmc
inc
add
ret
inc
mov
mov
xor
jo
add
mov
addb
cmp
cmp
mov
cltd
pop
cwtl
fmuls
stos
push
adc
xchg
shll
pusha
in
fsubrs
mov
ficoms
sbb
jmp
push
sub
mov
fdivrs
loop
sub
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
push
loope
add
cmp
mov
addb
adc
cmp
cmp
xchg
jns
sub
leave
shl
or
es
sbb
fwait
push
fwait
pop
push
mov
cmpsb
test
adc
adc
cmp
cmp
mov
rol
sub
adc
adc
cmp
cmp
mov
inc
int3
addb
adc
cmp
cmp
dec
pop
scas
in
jle
rclb
and
ja
inc
loop
popf
inc
addb
adc
cmp
cmp
sub
addr16
jbe
dec
pop
leave
or
push
xchg
mov
cmp
aam
pushf
mov
jmp
sbb
xchg
inc
outsl
lock
cltd
pop
add
addb
cmp
cmp
mov
pop
rcrb
and
shll
addb
cmp
cmp
mov
mov
adc
adc
cmp
cmp
push
or
addb
adc
cmp
cmp
xor
jg
insb
movsl
dec
dec
aaa
je
lahf
scas
jle
add
push
addb
cmp
cmp
mov
or
outsb
enter
dec
out
addb
adc
cmp
cmp
push
outsb
icebp
jl
sbb
rolb
addb
adc
cmp
cmp
bound
fistl
and
fmull
addb
cmp
cmp
mov
pop
lods
push
cmp
push
addb
adc
cmp
cmp
pop
cmc
pop
lds
adc
adc
cmp
cmp
mov
add
dec
lea
roll
out
cld
lock
jp
xchg
cmpsl
popa
in
aam
and
addb
adc
cmp
cmp
aaa
push
addb
mov
je
mov
in
jbe
mov
leave
adc
mov
inc
in
mov
adc
cmp
test
inc
jl
adc
mov
addb
cmp
cmp
jle
mov
jno
outsb
sbb
fdivr
xchg
sbb
jp
sbb
push
out
push
shll
hlt
je
jae
dec
pop
dec
stos
mov
pop
enter
pop
out
test
inc
adc
adcb
adc
cmp
cmp
mov
add
mov
hlt
jno
lret
addb
cmp
cmp
sbb
mov
sbb
adc
adc
cmp
cmp
jmp
mov
addb
adc
cmp
cmp
cmpsb
clc
or
and
imul
sbb
inc
jne
orl
stos
or
or
lods
mov
jmp
lock
adcb
adc
cmp
cmp
mov
in
or
popf
adc
adc
adc
cmp
cmp
mov
rclb
scas
outsb
inc
pop
rorb
mov
inc
sub
add
adc
adc
cmp
cmp
mov
jecxz
ret
lret
xchg
inc
hlt
test
out
test
inc
push
je
xor
xor
add
shll
jne
fcomps
mov
rolb
pop
xor
fsts
xchg
les
cmc
xchg
mov
jp
mov
shll
outsb
inc
lret
and
xor
jle
jne
jge
inc
cld
xchg
dec
in
cmp
sahf
push
roll
testb
and
push
lods
inc
add
or
dec
scas
sbb
adc
adc
cmp
cmp
lcall
cld
cmpsl
and
lret
add
in
divl
fwait
mov
push
jnp
pop
add
adc
sbb
adc
adc
cmp
cmp
cltd
cwtl
mov
aaa
addb
adc
cmp
cmp
sti
pop
test
testl
sar
outsl
lret
movsl
mov
jp
popf
cld
or
mov
adc
mov
das
cmp
rorl
shr
cld
pop
movb
ret
loopne
push
push
gs
mov
xchg
cmp
jl
js
lcall
addb
adc
cmp
cmp
int
dec
clc
adc
sub
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
mov
sahf
lds
pop
cmp
out
or
sbbl
adc
adc
cmp
cmp
mov
les
arpl
and
in
cmp
pop
movd
pop
jns
jg
stos
imul
adcb
adc
cmp
cmp
mov
imulb
dec
cmp
pop
mov
shlb
mov
popf
js
mov
xlat
test
mov
in
push
and
scas
xor
and
out
xchg
fists
inc
mov
xchg
insl
adc
inc
add
rcl
arpl
pop
lods
test
adc
adc
cmp
cmp
decl
int
push
pop
adc
inc
daa
lret
cmp
fldcw
mov
cld
test
add
sub
mov
fidivrs
shrl
xchg
fldenv
cmp
fidivl
daa
or
lods
in
icebp
push
ret
jns
jecxz
addb
cmp
cmp
mov
mov
adc
arpl
pop
enter
aam
mov
mov
push
addb
adc
cmp
cmp
dec
repz
mov
xor
mov
addb
cmp
cmp
mov
xor
xchg
in
sub
call
adcb
adc
cmp
cmp
mov
or
mov
ljmp
mov
adc
adc
cmp
cmp
mov
pop
inc
mov
popa
fbld
inc
cmp
mov
mov
xchg
or
inc
or
adc
xchg
adc
movsl
sbb
adc
adc
adc
cmp
cmp
out
pop
push
addb
fsts
in
push
imul
in
mov
mov
cltd
andb
addb
cmp
cmp
mov
push
mov
fnsave
rclb
mov
push
add
push
test
dec
addb
adc
cmp
cmp
mov
in
sahf
mov
jp
shrl
mov
push
and
popa
addb
adc
cmp
cmp
insl
mov
sub
lods
pop
cmp
xor
rclb
in
ljmp
mull
add
xlat
data16
repnz
out
inc
repnz
adc
cmp
cmp
mov
in
xlat
test
cmp
adc
inc
jne
mov
fs
and
dec
out
dec
repz
sbb
stc
in
orb
sbb
jg
pop
mov
xor
imul
es
or
lret
insb
ss
into
jp
and
addb
adc
cmp
cmp
pushl
repnz
test
mov
push
cmp
imul
addb
adc
cmp
cmp
and
mov
jl
addb
cmp
cmp
mov
or
je
mov
incl
sbb
xchg
mov
push
dec
jnp
pusha
or
inc
and
adc
imul
addb
adc
cmp
cmp
mov
les
xor
pop
faddl
and
addb
cmp
cmp
mov
sub
hlt
aaa
pop
mov
jnp
addb
cmp
cmp
mov
and
mov
fwait
xchg
dec
inc
enter
inc
dec
out
movsl
add
pop
mov
or
push
scas
popf
pop
addb
adc
cmp
cmp
xchg
jg
jo
test
fimuls
mov
add
ror
test
test
addb
adc
cmp
cmp
in
and
das
xchg
addb
adc
cmp
cmp
in
sarl
xchg
sbb
rcrb
ficoms
pop
lods
jl
add
out
addb
cmp
cmp
mov
and
addb
cmp
cmp
mov
jle
xor
adcb
adc
cmp
cmp
mov
out
mov
addb
cmp
cmp
mov
scas
xchg
out
push
push
add
mov
xchg
or
and
inc
mov
add
out
add
mull
sbb
popa
addb
adc
cmp
cmp
loopnew
roll
adc
adc
cmp
cmp
mov
ud1
mov
lock
lods
xchg
pop
imul
adc
adc
cmp
cmp
and
lds
inc
shrb
add
mov
rcl
inc
shll
lods
or
rol
dec
aad
movsb
mov
ss
adc
sub
loop
addb
adc
cmp
cmp
insl
out
cmpsb
xchg
jae
addr16
jo
lods
and
sbb
pop
and
and
jmp
or
out
sbb
adc
adc
cmp
cmp
mov
out
pop
clc
ret
repnz
or
dec
movsb
xchg
flds
dec
in
pusha
dec
lcall
addb
adc
cmp
cmp
decl
cwtl
cmp
addb
cmp
cmp
mov
xchg
add
mov
adc
nop
pmaddwd
int3
pop
jb
in
cli
out
test
js
lods
inc
push
lahf
add
cltd
jl
ret
jmp
pop
out
arpl
pop
mov
xchg
dec
dec
testb
adc
cmp
cmp
mov
imul
clc
addb
adc
cmp
cmp
inc
pop
outsl
lcall
adc
adc
cmp
cmp
push
sub
adc
cmpsl
outsl
xor
xor
sub
xchg
jnp
ds
out
lret
inc
cwtl
cs
jbe
int3
sbb
dec
js
bound
out
pop
cli
jnp
jp
rolb
int
mov
test
lcall
push
mov
cmp
addb
adc
cmp
cmp
dec
jno
or
xor
outsb
scas
test
or
stos
hlt
iret
and
imul
xor
mov
fcmovne
dec
jle
pop
add
ljmp
into
fwait
stos
int3
fcoml
adcb
adc
cmp
cmp
mov
add
push
movsl
lea
adc
adc
cmp
cmp
es
push
jns
mov
adc
adc
cmp
cmp
mov
stos
push
jg
addb
cmp
cmp
mov
inc
fsubrs
or
pcmpeqb
movsbl
ret
sbb
loope
addb
cmp
cmp
mov
stos
mov
roll
mov
pusha
sub
aam
fxam
lock
sarl
iret
xchg
adc
jmp
imul
in
and
cmp
xchg
lcall
adc
adc
cmp
cmp
mov
ror
sbb
ds
sar
repz
addb
cmp
cmp
mov
pop
mov
out
mov
xor
divb
test
add
das
repz
scas
jl
push
xchg
fisubl
push
data16
lods
sub
orl
addb
cmp
cmp
mov
je
dec
in
ja
cmp
out
mov
adcb
adc
cmp
cmp
mov
ljmp
addb
cmp
cmp
sub
dec
std
inc
in
addl
cmp
sub
adc
jg
in
pop
addb
adc
cmp
cmp
lods
jno
xchg
inc
subl
xor
mov
cmp
pop
add
adc
adc
cmp
cmp
jmp
xlat
addb
adc
cmp
cmp
sti
fadds
adc
adc
cmp
cmp
scas
adc
loope
pusha
pop
icebp
jno
xchg
out
or
mov
leave
scas
add
inc
ljmp
popf
xchg
ss
sub
sbb
add
sbb
bound
cmpsl
out
fs
jle
test
std
xor
addr16
sbb
inc
xor
jg
mov
adc
adc
cmp
cmp
mov
jnp
addb
cmp
cmp
mov
pop
nop
or
xchg
fldenv
inc
cs
pop
cmp
lret
cmc
sbb
or
mov
pop
scas
and
jl
mov
jmp
fldt
push
repz
mov
jae
std
aaa
dec
test
dec
sub
sahf
fists
scas
push
mov
adcb
adc
cmp
cmp
mov
or
adc
adc
cmp
cmp
mov
pop
fiadds
ret
add
adc
adc
cmp
cmp
mov
fsts
sbb
fiadds
mov
in
scas
cmp
popa
jne
ds
mov
push
inc
dec
adc
aaa
and
addb
adc
cmp
cmp
fs
push
sub
xorl
lods
popa
aaa
fdivl
adcb
adc
cmp
cmp
mov
cmp
in
test
test
addb
cmp
cmp
movsb
fsts
jo
addb
cmp
cmp
mov
rcrb
loopne
imul
rclb
mov
sub
or
std
dec
lret
inc
andb
push
insb
push
push
and
xchg
adc
jle
push
push
in
negl
stos
imul
add
mov
popf
mov
dec
sub
lds
repz
sbb
test
jp
xor
mov
dec
adc
adc
adc
cmp
cmp
sbb
push
addb
cmp
cmp
mov
dec
sbb
sbb
das
stc
testl
or
inc
mov
fucom
sub
mov
jl
xchg
popf
push
xchg
lock
push
adc
adc
cmp
cmp
mov
cmp
cmp
or
cld
addb
adc
cmp
cmp
or
mov
adcb
adc
cmp
cmp
mov
mov
arpl
hlt
popa
fabs
pusha
mov
xor
fsubrs
adcb
adc
cmp
cmp
mov
add
pop
inc
fwait
dec
cmp
clc
aaa
pop
dec
jecxz
inc
sbb
cmc
inc
dec
add
bnd
mov
test
fdivrs
repnz
addb
cmp
cmp
cmp
loope
adc
push
ja
mov
mov
sbb
mov
iret
clc
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
roll
adc
adc
cmp
cmp
mov
jo
out
dec
lds
sbb
inc
inc
addb
adc
cmp
cmp
pop
mov
and
imul
pop
into
push
repz
adc
cmp
cmp
out
pop
addb
adc
cmp
cmp
jb
addb
adc
cmp
cmp
stos
out
addb
adc
cmp
cmp
jae
xor
xor
ret
testl
cmp
cmp
mov
pop
mov
pop
adc
addb
adc
cmp
cmp
adc
jnp
inc
sbb
inc
jecxz
addl
sahf
es
pop
movsl
movl
addb
cmp
cmp
mov
cmp
and
sti
lret
jg
push
mov
aas
in
jmp
dec
addb
adc
cmp
cmp
fists
mov
jmp
mov
pop
popa
jmp
xchg
inc
decb
mov
loop
mov
test
sub
jg
fldenv
push
adcb
sti
inc
insb
lahf
fisttpll
sarb
sub
gs
loop
pop
jecxz
jb
sub
addb
cmp
cmp
lea
addb
leave
mov
adc
adcb
adc
cmp
cmp
mov
push
daa
sub
mov
jno
addb
cmp
cmp
mov
addb
adc
cmp
cmp
or
addb
cmp
cmp
mov
jecxz
movl
cmp
cmp
pop
fsubr
push
dec
incl
adc
adc
cmp
cmp
cltd
pop
out
loope
aaa
out
jl
rorl
les
sahf
outsl
cmp
sarl
dec
repnz
sbb
mov
adc
adc
cmp
cmp
mov
mov
ss
push
and
fstp
fs
aam
adcl
test
lock
sbb
pop
add
jmp
addb
cmp
cmp
mov
testb
push
xchg
dec
mov
xor
xchg
mov
sti
jecxz
shufps
adc
adc
cmp
cmp
xchg
les
cltd
push
std
mov
dec
daa
sbb
mov
lret
or
in
inc
ljmp
test
addb
adc
cmp
cmp
mov
push
insb
stos
movb
test
nop
sbbl
adcb
adc
cmp
cmp
mov
push
or
adc
adc
cmp
cmp
cmp
addb
cmp
cmp
mov
sbb
add
movsb
or
leave
sarl
push
addb
mov
addb
cmp
cmp
mov
lret
pop
imul
addb
adc
cmp
cmp
lcall
addb
cmp
cmp
mov
and
dec
sub
jbe
addb
pop
cmp
inc
xchg
add
adc
adc
cmp
cmp
dec
int3
xchg
addb
adc
cmp
cmp
clc
and
and
addb
cmp
cmp
mov
mov
addb
cmp
cmp
dec
test
in
out
into
insl
arpl
pusha
scas
fcmovnu
push
ret
enter
or
leave
punpcklwd
or
fidivl
inc
mov
test
popa
hlt
jbe
imul
addb
cmp
cmp
stos
movsl
jno
icebp
cmp
leave
ljmp
xor
jo
repz
or
adc
adc
cmp
cmp
cmp
adc
adc
cmp
cmp
mov
jnp
mov
mov
cmc
and
imul
push
cmc
jmp
shll
lret
testl
inc
xor
mulb
mov
mov
movsb
mov
push
jno
push
sub
mov
push
push
jbe
and
popf
jmp
or
jae
addb
adc
cmp
cmp
std
mov
push
hlt
adc
lret
addb
cmp
cmp
mov
bound
ret
ljmp
adc
adc
cmp
cmp
mov
insb
stos
bnd
cs
pop
and
inc
pop
mov
addb
cmp
cmp
mov
rol
xlat
dec
jae
or
or
push
gs
stc
mov
cmpsb
xchg
mov
add
xor
mov
addb
cmp
cmp
mov
icebp
xor
adcb
adc
cmp
cmp
mov
lea
rolb
adc
adc
cmp
cmp
fwait
or
mov
fldl
adc
adc
cmp
cmp
push
je
stos
mov
adc
adc
cmp
cmp
mov
int3
jg
push
cwtl
push
leave
or
cwtl
push
push
stos
je
shlb
dec
cmp
pop
cmpsb
mov
adcb
adc
cmp
cmp
mov
aam
mov
test
sti
pop
xor
into
test
add
jg
arpl
lock
push
jmp
push
fistps
aam
out
addb
adc
cmp
cmp
mov
lods
in
push
fidivl
addb
adc
cmp
cmp
test
push
addb
adc
cmp
cmp
ja
xchg
addb
adc
cmp
cmp
mov
pushf
mov
orb
jae
dec
fs
aas
push
add
dec
aaa
xor
jge
addb
adc
cmp
cmp
and
in
mov
cmp
rcll
rcll
adc
sub
or
jl
sbb
addb
adc
cmp
cmp
sub
pop
cld
or
and
test
cmp
clc
in
nop
push
insb
sbb
addb
cmp
cmp
loope
xor
mov
mov
imul
mov
pop
and
lahf
xchg
cld
or
lret
sub
rclb
loop
mov
loope
sub
iret
sub
sbb
push
sub
movsl
xor
pop
in
add
addb
adc
cmp
cmp
mov
into
xchg
addb
adc
cmp
cmp
out
push
lcall
addb
adc
cmp
cmp
addb
adc
cmp
cmp
or
mov
adc
adc
cmp
cmp
mov
shrd
addb
adc
cmp
cmp
sub
addb
cmp
cmp
mov
addb
adc
cmp
cmp
inc
cmp
aam
push
out
mov
imul
lods
aas
loop
addb
cmp
cmp
mov
js
in
test
inc
mov
inc
jmp
push
xor
pop
add
addb
adc
cmp
cmp
jecxz
mov
mov
imul
and
stc
pop
in
scas
sbb
jecxz
inc
cmp
int3
push
lods
in
mov
add
rolb
adc
adc
cmp
cmp
xchg
fs
lea
xchg
cmp
add
adc
and
xchg
leave
cmpsl
std
mov
test
push
adc
imul
fsubrs
xchg
subb
xchg
mov
mov
jae
ficoml
movsb
mov
adc
adc
cmp
cmp
mov
or
rcll
cli
mov
cmpsb
xchg
dec
pop
je
addb
adc
cmp
cmp
test
int3
lcall
mov
gs
pop
les
sub
addb
cmp
cmp
mov
jae
dec
insl
ds
popf
cmpsl
xchg
cmpsl
add
push
pop
mov
popa
push
mov
sbb
cmovp
shrl
inc
xchg
out
stos
cmc
mov
addb
adc
cmp
cmp
mov
loope
aaa
adc
lcall
adc
cmp
cmp
mov
movl
test
addb
cmp
cmp
mov
add
insl
mov
das
xchg
shrb
mov
lahf
mov
sub
stc
aam
or
inc
xchg
and
pop
inc
rcrb
mov
fmuls
xchg
jbe
cmp
push
pusha
bound
xsha1
cmpsb
or
cltd
addb
adc
cmp
cmp
mov
popa
xchg
dec
xor
mov
push
xchg
je
ror
addb
adc
cmp
cmp
daa
cmp
push
xor
stc
mov
addb
cmp
cmp
cs
mov
imul
mov
adc
adc
adc
cmp
cmp
mov
mov
lret
push
mov
mov
push
fldt
addb
cmp
cmp
cs
int
addb
cmp
cmp
mov
rdpmc
mov
add
addb
cmp
cmp
mov
lret
std
addb
adc
cmp
cmp
arpl
fwait
std
mov
in
daa
sub
cmp
aas
loopne
imul
sbb
lods
pop
je
ljmp
sbb
fistps
inc
pop
jg
vpor
cmp
call
jo
sub
shll
inc
test
mov
movb
fidivl
jl
add
push
inc
lods
imul
mov
cmp
adc
adc
adc
cmp
cmp
rolb
popf
and
xor
int
rcrl
mov
addb
adc
cmp
cmp
cmpsl
mov
pushf
dec
inc
dec
clc
addb
adc
cmp
cmp
out
addb
adc
cmp
cmp
addb
adc
cmp
cmp
clc
incb
jg
addb
cmp
cmp
mov
adc
mov
sub
inc
or
push
outsl
adc
xchg
ret
clc
sbb
testb
lock
hlt
sbb
jb
pop
pop
outsb
orl
shll
push
pop
jns
adc
or
pop
sbb
fs
fwait
pop
stos
adc
cmp
inc
cmp
addb
cmp
cmp
mov
push
lock
lds
sub
ret
cmova
adcb
adc
cmp
cmp
mov
and
addb
adc
cmp
cmp
daa
xchg
xchg
pushf
insb
mov
cwtl
pop
jb
push
cld
lods
addb
adc
cmp
cmp
jne
call
mov
adcb
adc
cmp
cmp
mov
into
rorb
sub
sub
addb
cmp
cmp
dec
xchg
mov
enter
sbb
ret
arpl
rcll
dec
sbb
mov
test
iret
incl
popa
hlt
xchg
pop
mov
inc
or
dec
mov
mov
jb
test
jp
jnp
cmpsl
out
getsec
cmp
out
testb
addb
cmp
cmp
jo
dec
fbstp
or
or
jp
test
add
pop
lahf
adc
addb
cmp
cmp
mov
jg
repnz
in
xlat
je
fidivs
rcr
sbb
addb
adc
cmp
cmp
push
orb
aas
add
fildll
addb
adc
cmp
cmp
xlat
pushl
fisubs
xor
nop
ret
jp
xchg
jae
jg
fdivrl
cs
sbb
add
pop
std
enter
ds
and
xchg
cmp
bound
mov
call
andl
push
enter
addb
cmp
cmp
mov
mov
std
addb
adc
cmp
cmp
pop
sarl
and
pop
faddp
sbb
faddp
lods
pop
hlt
dec
lods
sub
inc
pushf
jb
xor
and
push
lret
mov
lods
packsswb
lea
mov
adc
adc
cmp
cmp
mov
popl
adc
adc
cmp
cmp
cli
push
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
popf
into
dec
addb
adc
cmp
cmp
enter
fnstcw
addb
cmp
cmp
mov
push
fdivrs
inc
pop
add
cs
addb
adc
cmp
cmp
addb
adc
cmp
cmp
ja
and
in
jb
xchg
pop
mov
loopne
fdivl
and
lods
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pop
repz
pop
fcmove
and
out
jp
cmpsl
jge
cmp
addb
cmp
cmp
mov
hlt
mov
pop
mov
popa
push
mov
pop
push
push
addb
adc
cmp
cmp
daa
inc
push
or
adc
out
mov
mov
mov
push
cwtl
or
mov
lock
shlb
dec
loop
and
and
lods
adc
and
addb
adc
cmp
cmp
pop
or
sti
flds
xor
insl
addb
adc
cmp
cmp
in
addr16
scas
imulb
xorb
ljmp
in
xchg
addb
adc
cmp
cmp
fwait
sub
pop
cs
push
mov
mov
or
shr
pop
andb
rep
call
enter
adcb
adc
cmp
cmp
mov
out
jmpw
mov
loopne
adc
test
rcll
mov
mov
cli
movsb
sbb
dec
push
lea
ljmp
mov
test
jae
lods
fistl
es
mov
addb
adc
cmp
cmp
je
dec
xchg
je
andl
inc
adc
add
mov
pop
movsb
data16
mov
std
sarb
sbb
xorb
jbe
mov
leave
mov
adc
add
pop
sbb
xor
cmp
mov
mov
add
pop
mov
fs
pop
mov
sarb
cmp
adc
adc
cmp
cmp
jae
sub
out
and
in
inc
jecxz
xor
adcb
adc
cmp
cmp
mov
scas
or
dec
pop
xor
push
xor
hlt
aaa
pop
addb
adc
cmp
cmp
fdivrp
mov
pushf
in
jnp
push
in
int3
lcall
js
and
ljmp
aad
cmove
addb
cmp
cmp
lret
sbb
and
decb
roll
adc
cmp
cmp
mov
sbb
adc
adc
cmp
cmp
mov
scas
addb
adc
cmp
cmp
mov
mov
and
inc
dec
xor
adc
mov
mov
stc
mov
into
pop
test
push
cmp
je
mov
adc
adc
adc
cmp
cmp
mov
mov
stos
test
aaa
cmp
mov
out
enter
lea
mov
adcb
adc
cmp
cmp
mov
xchg
jae
fistl
mov
andl
int3
push
mov
es
ror
pop
jae
movsb
xor
sbb
addb
cmp
cmp
push
in
dec
pusha
fcmovu
mov
adc
inc
dec
dec
cmpl
in
addb
adc
cmp
cmp
addr16
push
jnp
xor
outsl
sbb
mov
addb
cmp
cmp
fs
or
xlat
inc
pop
roll
adc
adc
cmp
cmp
ret
push
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
ss
xor
jecxz
jp
or
addb
cmp
cmp
mov
push
enter
lret
cs
cmpsl
push
ret
stos
cltd
add
cmpsl
adc
les
rcrl
xchg
test
ficoml
cli
mov
in
movsb
jge
mov
adc
sub
pusha
pop
imul
mov
sub
adc
adc
cmp
cmp
mov
push
xor
arpl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
dec
xor
fistpll
pushf
aas
repnz
aas
and
out
cmpsb
push
mov
mov
jg
mov
cltd
inc
cmp
jb
movsb
cmp
and
xchg
xor
cld
jmp
sbb
addb
adc
cmp
cmp
mov
sub
xor
cltd
adc
or
addb
adc
cmp
cmp
subb
andb
movsl
xchg
test
stos
andl
cmp
cmp
mov
lock
addb
adc
cmp
cmp
decl
xor
sub
mov
call
subb
and
addb
adc
cmp
cmp
and
mov
sbb
inc
push
stc
push
in
adc
dec
lock
mov
adc
xor
push
outsl
ret
fnstsw
inc
xchg
stc
inc
mov
adc
cmpsb
outsb
mov
mov
add
pop
rclb
hlt
mov
stos
inc
popa
flds
push
add
adc
adc
cmp
cmp
dec
mov
or
pop
loopne
cmp
adc
adc
cmp
cmp
mov
sbb
mov
lret
es
je
mov
add
push
imul
jmp
jbe
cltd
sub
in
cli
push
rorl
addb
cmp
cmp
mov
fadds
mov
adc
adc
cmp
cmp
mov
sbb
aaa
addb
adc
cmp
cmp
jbe
addb
cmp
cmp
mov
mov
lea
jmp
xor
adc
adc
cmp
cmp
in
inc
inc
pop
nop
mov
addb
adc
cmp
cmp
xlat
pop
jg
addb
adc
cmp
cmp
out
addb
adc
cmp
cmp
mov
pushf
and
xchg
addb
cmp
cmp
mov
call
out
mov
jmp
fdivrp
lret
insb
sub
dec
flds
jae
mov
insl
push
outsb
cmp
pushl
inc
inc
in
pop
dec
insl
mov
jbe
lcall
mov
jnp
subl
push
mov
or
jb
sub
mov
adcb
adc
cmp
cmp
mov
aas
addr16
pop
jecxz
push
inc
and
arpl
xchg
adc
int3
mov
dec
cld
dec
add
addb
cmp
cmp
mov
addb
adc
cmp
cmp
mov
mov
jbe
pop
jge
dec
jecxz
inc
pushl
addb
cmp
cmp
fdiv
pop
outsb
jo
fcomps
mov
ss
cmp
repz
enter
cmpsb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sub
add
ret
sub
addb
cmp
cmp
mov
test
cltd
int3
jo
ss
outsl
mov
xor
adc
adc
cmp
cmp
mov
jmp
xor
xchg
popa
daa
pusha
dec
bound
mov
sub
and
push
push
sub
jb
shl
jb
ljmp
iret
rorl
or
xchg
sub
hlt
push
test
and
add
icebp
cwtl
insl
inc
inc
mov
ret
and
jbe
inc
jle
test
lahf
sub
adcb
adc
cmp
cmp
mov
movsb
add
sub
outsl
jb
dec
xor
shl
std
popf
js
fs
xchg
arpl
popf
addb
adc
cmp
cmp
stos
jne
fninit
incb
adc
adc
cmp
cmp
arpl
imul
push
lods
mov
addb
cmp
cmp
rcll
pop
lds
imul
pop
ret
and
sub
push
repnz
or
addb
adc
cmp
cmp
imul
adcb
adc
cmp
cmp
mov
lods
lock
cmp
sbb
int
movsl
adc
mov
pop
mov
or
adc
stc
and
or
sti
inc
mov
inc
push
mov
rcrl
cld
stc
jmp
mov
inc
aad
push
adc
ja
cmp
mov
lds
lods
dec
fsubrl
mov
cmp
fs
mov
enter
mov
xchg
xor
push
and
clc
jmp
js
ja
addb
adc
cmp
cmp
or
xchg
je
pop
incb
adc
adc
cmp
cmp
and
push
addb
adc
cmp
cmp
mov
sbb
addb
adc
cmp
cmp
adc
push
aam
mov
dec
mov
addb
cmp
cmp
movl
cmp
cmp
xor
push
jge
jecxz
es
data16
mov
mov
xchg
rcrb
repz
mov
retw
repnz
out
fwait
pop
and
xlat
adc
scas
sbb
cmp
shlb
ljmp
enter
addb
cmp
cmp
mov
cmc
out
enter
jle
mov
xlat
add
shlb
push
cmpsb
addb
adc
cmp
cmp
jge
or
push
shrb
fildll
test
pop
mov
call
pop
stos
hlt
jle
and
adcb
adc
cmp
cmp
mov
nop
pop
pop
jae
test
xchg
out
ljmp
adc
adc
cmp
cmp
mov
subb
cmp
cld
clc
jecxz
push
jg
pop
lds
ficoms
scas
xchg
push
cmp
hlt
outsb
dec
gs
insl
jg
mov
lret
es
push
sub
lock
sbbl
addb
cmp
cmp
lods
xor
andl
sub
mov
addb
adc
cmp
cmp
es
jnp
out
sbb
pop
je
adc
addr16
addb
cmp
cmp
mov
dec
adc
push
cld
repz
js
sbb
mov
jmp
test
xor
movsb
pop
dec
mov
jge
loop
sti
jmp
enter
fmuls
rcll
adc
adc
cmp
cmp
mov
sub
pop
push
push
sbb
orl
and
jbe
clc
jb
cmp
cmp
je
sub
adc
adc
cmp
cmp
dec
mov
push
jbe
ja
xchg
fs
addb
adc
cmp
cmp
cmp
sbb
pop
cli
or
and
jnp
filds
pop
inc
pop
dec
lahf
in
inc
sbb
addb
adc
cmp
cmp
sbb
fwait
loope
pusha
cmp
rcl
loop
push
sub
or
add
dec
mov
bnd
cmp
addb
adc
cmp
cmp
addb
adc
adc
cmp
cmp
push
fldenv
mov
std
mov
mov
jnp
int
push
lcall
stc
jno
mov
cmp
sub
dec
nop
lods
frstor
ljmp
outsl
jns
icebp
mov
xor
jmp
fcmovnu
fisubrs
xchg
addb
cmp
cmp
mov
xchg
mov
gs
ret
outsb
out
xor
movsb
push
sub
xor
addb
cmp
cmp
mov
add
pop
push
ret
cld
sub
push
jecxz
lret
lods
daa
insb
inc
outsl
in
push
cmp
adcb
adc
cmp
cmp
mov
out
sub
or
rolb
adc
cmp
cmp
mov
sub
xchg
mwait
jne
pushf
out
mov
cmpsl
push
mov
js
fimuls
push
dec
jns
addb
adc
cmp
cmp
gs
bound
xlat
push
sbb
jae
xor
stos
pop
inc
pop
in
data16
adcb
adc
cmp
cmp
mov
mov
inc
xchg
xor
xchg
adc
adc
cmp
cmp
mov
cs
iret
sbb
and
mov
mov
mov
call
addb
cmp
cmp
mov
cltd
mov
nop
mov
pop
xor
leave
cs
lds
and
and
dec
or
dec
mov
pop
movsb
pop
add
addb
cmp
cmp
mov
xchg
inc
xchg
sbb
or
loope
jne
movsb
jb
addb
cmp
cmp
mov
add
adc
call
addb
cmp
cmp
mov
pusha
lret
and
lcall
adc
adc
cmp
cmp
mov
in
iret
or
jecxz
xchg
aam
mov
addb
adc
cmp
cmp
jge
addb
cmp
cmp
mov
xorl
push
mov
push
test
adc
adc
cmp
cmp
xor
push
inc
inc
mov
jge
addb
adc
cmp
cmp
outsl
inc
fs
lock
test
loope
lods
mov
adc
adc
cmp
cmp
mov
push
rorb
and
popf
into
sbbb
dec
xlat
adc
lods
daa
xchg
mov
push
addb
adc
cmp
cmp
js
hlt
mov
addb
adc
cmp
cmp
push
movsl
hlt
addb
adc
cmp
cmp
loope
aam
addb
cmp
cmp
mov
mov
lock
adc
cmp
cmp
call
icebp
xchg
jle
leave
xchg
xor
push
fidivrl
adc
adc
cmp
cmp
mov
pop
test
xchg
sub
mov
je
mov
xchg
jecxz
cmc
pop
ljmp
imul
cld
pop
out
cmp
sub
mov
addb
cmp
cmp
jmp
addb
adc
cmp
cmp
ss
jns
mov
adc
adc
cmp
cmp
mov
addr16
pop
lds
loopne
jnp
mov
jmp
addb
cmp
cmp
mov
ret
popf
mov
cmp
adc
push
sub
mov
push
cmp
imulb
addb
adc
cmp
cmp
divl
cwtl
dec
cmc
fnstsw
sbb
aaa
mov
aas
jns
jmp
insl
lcall
mov
insl
je
out
addb
cmp
cmp
mov
mov
mov
mov
stc
jnp
jge
pandn
and
shrb
in
adc
test
xchg
sbb
xor
test
mov
push
xchg
leave
cmpsb
mov
cmp
icebp
out
add
dec
lods
push
mov
and
addb
adc
cmp
cmp
mov
loopne
pop
push
ss
sbb
jbe
xchg
enter
in
and
mov
xchg
adc
adc
cmp
cmp
mov
push
add
aam
mov
adc
sti
cmp
insb
xchg
test
cmc
fiaddl
mov
ret
rorb
xorl
adc
adc
cmp
cmp
fistpl
cmpsb
and
cld
scas
sti
inc
fsubrs
ljmp
xor
mov
and
lock
ja
shll
and
addb
adc
cmp
cmp
insl
lock
test
in
lods
add
hlt
and
or
inc
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jge
mov
lods
jno
xchg
push
mov
adc
adc
cmp
cmp
mov
repnz
inc
pop
lahf
out
push
addb
cmp
cmp
mov
jbe
push
mov
xchg
adc
adc
cmp
cmp
test
jp
dec
subl
stc
jle
adc
adc
adc
adc
cmp
cmp
mov
sub
repnz
cmp
mov
xlat
ja
push
fisttpll
addb
adc
cmp
cmp
ja
sub
push
js
sahf
sub
cmpsl
int
pusha
sti
ret
rolb
fs
xor
bound
mov
addb
cmp
cmp
test
lret
addb
adc
cmp
cmp
sub
faddl
adc
adc
cmp
cmp
push
xchg
sbb
rcrb
filds
dec
xchg
xchg
movsl
mov
int
mov
or
arpl
xchg
jo
push
sbb
out
ret
push
xchg
push
push
jle
iret
test
fbld
sbb
addb
adc
cmp
cmp
imull
xchg
out
repz
lea
dec
rolb
insl
fcoms
adc
adc
cmp
cmp
mov
push
sti
movsl
bound
adcb
push
incb
jne
xchg
adcb
adc
cmp
cmp
mov
sbb
fcmove
out
sbb
jmp
xchg
imulb
xor
addb
cmp
cmp
mov
push
add
push
sbb
adc
bnd
jo
pop
sub
addr16
mov
addb
cmp
cmp
mov
jno
decb
das
xor
arpl
addb
cmp
cmp
mov
es
lcall
in
in
loopne
xchg
sub
xchg
jecxz
jecxz
aad
addb
cmp
cmp
mov
shll
negl
nop
jo
mov
xchg
lds
mov
adc
push
inc
xchg
stos
shrl
addb
adc
cmp
cmp
push
mov
pop
pop
jg
sbb
ror
addb
cmp
cmp
mov
aaa
push
or
jge
dec
subl
adcb
adc
cmp
cmp
mov
mov
fstpl
mov
jge
dec
jno
in
add
and
sub
xor
loope
mov
aad
mov
addb
cmp
cmp
addb
adc
cmp
cmp
push
mov
push
mov
stos
invlpg
insb
xchg
imul
adc
jns
div
and
stos
adc
pop
movsl
enter
dec
mov
pushw
push
dec
ds
push
out
faddp
pop
rcrb
addb
cmp
cmp
aam
jmp
fdiv
push
jmp
roll
pop
pusha
daa
sub
mov
cs
ds
aas
loop
imul
dec
rcl
or
push
mov
xchg
fsts
jp
pop
rorb
leave
jecxz
or
adcb
addb
adc
cmp
cmp
nop
add
ja
ret
test
jo
jmp
and
mov
pop
int
inc
mov
adc
adc
cmp
cmp
mov
cli
std
pop
jp
cwtl
ss
sbb
cmp
lock
addb
adc
cmp
cmp
pop
ror
sub
sbb
cmp
sbb
test
test
fsubrl
dec
aam
lds
lahf
xchg
lea
sbb
push
xor
lea
xchg
sbb
adc
mov
addb
cmp
cmp
mov
test
out
aad
xchg
dec
push
in
sbb
hlt
test
loopne
int3
push
inc
loopne
sub
addb
adc
cmp
cmp
and
outsl
lods
push
jo
jbe
mov
addb
adc
cmp
cmp
lea
jmp
call
jbe
or
dec
mov
push
jne
icebp
insl
repnz
pop
adc
sahf
pop
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
popa
sbb
mov
mov
orl
orb
es
in
sub
ja
add
xchg
addb
adc
cmp
cmp
add
add
cmpsl
xchg
mov
addb
cmp
cmp
mov
jecxz
jecxz
cli
inc
addb
adc
cmp
cmp
shrb
incl
adc
adc
cmp
cmp
into
mov
adcb
adc
cmp
cmp
mov
imul
testb
call
cltd
mov
adc
adc
cmp
cmp
mov
fwait
mov
xor
xor
bound
cmpl
mov
mov
add
mov
pop
xor
cmp
leave
out
and
insb
pop
dec
out
inc
std
repz
inc
nop
imul
mov
pop
pop
lods
dec
push
pop
repz
cmp
or
roll
shll
push
movl
adc
cmp
cmp
rolb
adc
adc
cmp
cmp
mov
add
pop
xchg
pop
jle
loop
sub
or
and
cmp
dec
aad
mov
ljmp
push
lods
repz
in
fnstcw
mov
addb
cmp
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
mov
mov
enter
xlat
fists
addl
stc
cwtl
sbb
adc
adc
cmp
cmp
mov
enter
mov
jbe
lods
ds
push
adcb
adc
cmp
cmp
mov
daa
xor
xchg
aam
lahf
pop
inc
stos
add
xchg
test
mov
sub
rcrl
sbb
les
adc
adc
cmp
cmp
inc
in
addb
adc
cmp
cmp
lods
rolb
adc
adc
cmp
cmp
loop
cmp
ljmp
pop
outsb
push
push
sahf
sub
adc
adc
cmp
cmp
lcall
adc
adc
cmp
cmp
gs
xchg
ds
push
adc
sub
loope
push
ja
push
addb
adc
cmp
cmp
movsl
cmc
cmp
lcall
out
jmp
addb
cmp
cmp
mov
sub
clc
cwtl
cmp
lods
push
sub
push
and
incl
imul
adc
ret
mov
lahf
iret
lea
adc
adc
cmp
cmp
addb
adc
cmp
cmp
inc
insb
add
mov
stos
daa
pop
sbb
xlat
mov
push
pop
out
add
pushf
cld
fnstcw
in
cmp
test
inc
addb
adc
cmp
cmp
inc
loope
or
jl
mov
sbb
addb
adc
cmp
cmp
mov
mov
cmc
dec
add
inc
or
mov
ret
sbb
add
lahf
mov
mov
push
pushf
int3
int3
push
cmp
lods
subl
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
push
sbb
stos
jg
xchg
aad
xor
adc
push
sub
mov
jno
or
cs
xor
xor
stos
mov
dec
mov
clc
ljmp
aas
out
xor
addb
adc
cmp
cmp
outsb
fwait
mov
ret
adc
jecxz
addb
cmp
cmp
mov
enter
jb
inc
data16
pop
nop
jecxz
insl
lahf
push
mov
cmp
in
pop
popf
je
push
insb
jmp
fsubl
rcll
adcb
adc
cmp
cmp
mov
in
xor
jae
stc
inc
dec
fdivr
push
push
mov
addb
adc
cmp
cmp
adc
aam
mov
add
popf
push
jae
lock
dec
cmp
sbb
ret
stc
jbe
push
addb
adc
cmp
cmp
add
jecxz
add
popf
jbe
xchg
dec
js
mov
push
pop
push
push
lock
add
add
xchg
addb
adc
cmp
cmp
cwtl
mov
imul
lret
inc
sub
xchg
inc
lcall
pop
out
cli
xchg
imul
adc
cmp
cmp
mov
add
dec
jbe
xchg
push
push
addb
cmp
cmp
mov
mov
lods
repnz
dec
or
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
imul
inc
les
adc
adc
cmp
cmp
fiadds
xchg
add
jl
ret
cmp
xchg
and
adc
jecxz
addb
cmp
cmp
mov
ljmp
or
fldcw
sub
imulb
aas
pop
addb
adc
cmp
cmp
sti
out
cwtl
cmc
nop
xchg
pop
mov
out
sub
pop
out
mov
fstpt
outsl
xorb
nop
test
rorb
ljmp
leave
or
push
cmp
dec
test
push
outsl
cmp
mov
iret
lea
sub
test
jle
insl
jecxz
push
loope
into
nop
pushf
mov
addb
cmp
cmp
mov
fists
jge
add
xchg
cmp
addb
cmp
cmp
mov
xor
stos
fisttpll
test
xchg
test
push
loop
adc
mov
cwtl
aaa
cmp
mov
xor
arpl
out
push
push
faddl
adc
adc
cmp
cmp
xchg
loop
jmp
sysret
out
or
pop
cmp
mov
addb
adc
cmp
cmp
mov
dec
cltd
clc
adc
lods
adc
cwtl
inc
addb
adc
cmp
cmp
ja
gs
xchg
loopne
mov
icebp
mov
dec
xorl
adc
adc
cmp
cmp
lret
add
lret
xor
pusha
xchg
inc
ret
inc
mov
sar
addb
adc
cmp
cmp
mov
and
leave
hlt
pop
addb
adc
cmp
cmp
test
test
sub
out
in
sbbl
rcll
flds
adc
adc
cmp
cmp
insb
fucomi
iret
das
mov
lcall
fisubrs
addb
cmp
cmp
mov
bound
adc
adc
cmp
cmp
ss
inc
imul
pop
pop
mov
bound
lds
cwtl
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
lret
inc
cmc
mov
inc
stc
or
addb
cmp
cmp
mov
cmp
adc
adc
cmp
cmp
mov
pop
arpl
js
addb
adc
cmp
cmp
jmp
push
in
enter
dec
jnp
mov
adcb
adc
cmp
cmp
mov
mov
sahf
gs
add
movsl
cwtl
mov
mov
mov
mov
xchg
adc
pop
divl
mov
adc
adc
cmp
cmp
ja
sub
andb
jns
icebp
pop
popa
pop
or
sub
sbb
stc
jno
cmp
pop
xor
mov
mov
call
test
adcb
adc
cmp
cmp
mov
xchg
sarb
shrb
mov
ret
popa
lea
ret
and
cmp
cli
ds
out
mov
std
hlt
ret
inc
add
les
shll
daa
cmp
and
mov
pop
add
pop
in
or
outsl
lret
mov
loop
or
dec
cli
xchg
call
mov
dec
les
push
add
jecxz
test
addb
cmp
cmp
mov
insl
ss
cmpsb
inc
mov
sbb
lock
dec
notl
mov
and
ljmp
popa
sbb
jae
out
and
lock
rcll
negl
addb
cmp
cmp
mov
or
aaa
cs
jg
dec
cli
scas
or
sub
dec
push
mov
mov
xor
pusha
test
adc
adc
cmp
cmp
mov
xlat
mov
imul
dec
aas
mov
addb
cmp
cmp
mov
push
mov
pop
cmp
sbb
jb
testl
adc
adc
cmp
cmp
mov
dec
pop
lods
or
cmp
dec
lahf
xor
xchg
les
and
addb
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
mov
xorl
daa
jmp
addb
cmp
cmp
mov
and
dec
adc
sahf
fcmovb
addb
adc
cmp
cmp
cmp
in
sub
int
imul
sti
mov
out
inc
daa
popl
mov
test
testb
adc
adc
cmp
cmp
test
add
pusha
mov
sub
xchg
xor
cmp
repz
dec
and
and
push
add
xchg
xchg
add
push
add
outsl
mov
push
xor
addb
adc
cmp
cmp
jmp
add
fwait
adc
cs
cmp
addb
cmp
cmp
mov
xchg
fsub
add
push
pop
lcall
sub
repnz
adc
cmp
cmp
mov
pop
cltd
addb
addb
cmp
cmp
iret
push
icebp
jp
outsb
mov
mov
pop
or
pop
jecxz
bound
push
pop
loope
cwtl
mov
ds
inc
pop
lods
push
push
addb
adc
cmp
cmp
cmp
lret
addb
adc
cmp
cmp
mov
add
cmp
inc
inc
clc
dec
cwtl
addb
adc
cmp
cmp
fbld
sbb
mov
mov
adc
jle
mov
adc
adc
cmp
cmp
mov
lcall
adc
jo
mov
std
pop
in
xchg
mov
addb
adc
cmp
cmp
ret
in
and
xor
cmpsb
xchg
js
sti
cs
jmp
fwait
lret
cmp
rcl
clc
fidivrl
cmp
addb
adc
cmp
cmp
out
jg
xchg
inc
sub
cwtl
adc
and
jge
pop
mov
mov
jbe
data16
mov
mov
cmp
or
imull
mov
jb
mov
xchg
xlat
add
lock
cld
kmovb
fimuls
push
shrl
js
jno
mov
data16
jg
clc
pop
jb
addb
adc
cmp
cmp
xchg
adc
mov
mov
int
mov
stos
cmc
cmpsb
les
mov
outsl
mov
lods
fwait
inc
adc
add
mov
cmp
jae
push
hlt
stc
push
test
fdivrl
dec
pop
cmp
pushf
and
inc
sti
insb
std
addb
adc
cmp
cmp
stos
mov
test
int
adc
rolb
and
lret
pop
addb
adc
cmp
cmp
cmp
imul
addb
cmp
cmp
aad
cld
jle
mov
js
cmp
or
fwait
jnp
int
out
mov
addb
cmp
cmp
mov
testb
adc
cmp
cmp
mov
cmp
xor
push
mov
mov
into
daa
pusha
ja
mov
jmp
testb
push
call
addb
cmp
cmp
mov
pop
shr
jnp
pop
cmp
outsb
shl
mov
mov
push
sbb
ss
push
test
mov
addb
adc
cmp
cmp
xor
push
das
sbb
lds
addb
adc
cmp
cmp
pop
jge
mov
push
into
insb
movb
cltd
xor
mov
addb
adc
cmp
cmp
fs
sbb
mov
addb
cmp
cmp
fcoms
and
ja
sti
push
sub
mov
in
insb
jge
mov
dec
jo
dec
jae
cs
sarb
push
and
jns
pusha
push
or
testb
adc
mov
into
push
mov
setp
inc
xchg
or
out
add
lods
sti
arpl
fsqrt
mov
adc
test
fcomi
ds
sbb
cmpsb
pop
mov
mov
xchg
loopne
stc
vpunpckhwd
sub
adcb
add
call
out
push
xchg
movsl
sbb
sbb
cmpl
mov
dec
fwait
je
xchg
call
adc
adc
cmp
cmp
mov
adc
sbb
jno
rorl
inc
lcall
scas
xchg
clc
pop
scas
pop
stc
fwait
mov
fisttpll
fst
xor
xor
pop
into
dec
call
sbb
addb
adc
cmp
cmp
push
add
xchg
fcomps
popa
push
and
popf
push
insb
gs
jmp
sub
addb
adc
cmp
cmp
in
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
adc
addb
adc
cmp
cmp
lods
cmovge
adcb
adc
cmp
cmp
mov
lods
movsl
jl
addb
cmp
cmp
mov
cmpsl
neg
outsb
jl
rcr
scas
dec
jbe
sub
fmul
loop
enter
gs
stos
mov
je
or
cmpsl
mov
insb
in
cmp
dec
push
push
dec
addb
adc
cmp
cmp
enter
adcb
adc
cmp
cmp
mov
dec
popf
incl
push
movsb
lcall
push
dec
addb
adc
cmp
cmp
sub
push
add
out
add
inc
outsl
test
aad
call
mov
adc
cltd
sbb
lods
faddl
lret
mov
jl
roll
adc
cmp
cmp
mov
xor
arpl
pop
clc
ljmp
adc
mov
mov
ret
paddusb
into
dec
insl
pop
popa
mov
icebp
sahf
and
fimull
insl
jl
pop
outsb
push
pop
mov
mov
addb
adc
cmp
cmp
and
cmp
cmp
into
mov
aas
addb
adc
cmp
cmp
mov
cltd
cmp
fwait
addb
adc
cmp
cmp
dec
and
xchg
fwait
jae
adc
xchg
sahf
bound
mov
mov
sbb
pop
jmp
mov
fisttpll
lret
xchg
inc
lahf
stos
daa
ficoml
jge
js
addb
cmp
cmp
mov
outsl
jne
inc
fsubs
adc
dec
mov
pop
dec
adc
data16
adc
cmp
cmp
and
adcb
adc
cmp
cmp
mov
rolb
sbb
cli
stc
pop
and
mov
dec
lret
pop
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
aas
dec
and
xchg
hlt
inc
mov
xchg
push
addb
adc
cmp
cmp
lret
popl
jnp
and
arpl
jle
outsl
or
outsb
aam
test
roll
jb
jl
icebp
jo
push
xchg
adc
adc
cmp
cmp
sub
inc
mov
push
dec
ss
jmp
addb
cmp
cmp
divb
pop
dec
popa
fimuls
fwait
cmp
cmp
jp
and
add
iret
add
adc
adc
cmp
cmp
js
pop
sub
addb
adc
cmp
cmp
and
or
addb
adc
cmp
cmp
jbe
mov
adc
adc
cmp
cmp
mov
cli
mov
addb
cmp
cmp
mov
dec
mov
dec
and
mov
lretw
xchg
icebp
jmp
inc
es
out
sbb
fnstcw
dec
jne
inc
pop
daa
push
stos
adc
push
jmp
addb
cmp
cmp
mov
cmpsl
cltd
mov
addb
adc
cmp
cmp
scas
pop
int
cmpsl
addb
adc
cmp
cmp
lea
filds
ficomps
mov
outsb
mov
add
lcall
lods
xchg
add
mov
xor
mov
addb
adc
cmp
cmp
arpl
clc
addb
adc
cmp
cmp
jmp
sbb
sub
shl
stos
repz
jle
insb
mov
test
in
out
addb
adc
cmp
cmp
cmc
out
je
sub
je
cld
jns
daa
jle
addb
cmp
cmp
mov
addb
adc
cmp
cmp
or
addr16
or
jmp
addb
adc
cmp
cmp
icebp
add
mov
addb
cmp
cmp
cli
test
pop
loope
fwait
adc
aam
push
addb
adc
cmp
cmp
adc
ss
addb
cmp
cmp
mov
xchg
js
cmp
outsb
addb
adc
cmp
cmp
fldenv
loop
mov
mov
adcb
adc
cmp
cmp
mov
add
push
and
sbbb
adc
adc
cmp
cmp
and
addr16
mov
std
icebp
cmpsl
lcall
mov
jecxz
int3
call
lock
inc
mov
lret
nop
inc
or
shrl
lods
ljmp
ret
pop
jo
int3
fsubl
iret
fnstsw
ds
mov
dec
mov
addb
cmp
cmp
mov
inc
lret
stos
mov
addb
adc
cmp
cmp
mov
mov
mov
adc
mov
xchg
es
loopne
js
jns
pusha
popf
repnz
jbe
or
pop
fld
sub
mov
adc
sub
test
jno
daa
call
jne
and
addb
cmp
cmp
mov
adc
in
into
lret
cmp
daa
and
dec
in
xchg
push
daa
mov
pop
fadds
adc
adc
cmp
cmp
mov
mov
insb
jge
push
dec
ret
dec
mov
xor
outsb
repz
jno
mov
mov
cmp
mov
adc
adc
cmp
cmp
mov
lcall
nop
jmp
lea
int
loop
lcall
mov
pushf
jae
add
cmpsl
sarb
push
cmc
xor
xchg
shrl
mov
push
andl
xchg
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
int3
dec
je
rcl
push
mov
addb
cmp
cmp
inc
cmp
adc
adc
cmp
cmp
mov
jns
mov
dec
adc
sbb
stos
jns,pn
jnp
fstl
sub
lret
mov
fdivrl
adc
adc
cmp
cmp
cmc
les
cmpsl
cwtl
mov
popf
xchg
pop
pop
inc
mov
sbb
mov
pop
push
bound
int
fadds
incb
push
pop
mov
cmpsl
movd
add
adc
and
sbb
ja
lods
and
out
pop
xor
xor
mov
mov
inc
addb
adc
cmp
cmp
push
mov
add
xor
sub
dec
and
test
addb
adc
cmp
cmp
scas
sti
xchg
push
mov
ret
ret
add
js
push
call
inc
sub
jmp
lds
addb
cmp
cmp
mov
inc
mov
push
inc
ret
cmc
xchg
jo
addb
cmp
cmp
mov
cmc
outsl
pop
add
pop
iret
sub
addb
adc
cmp
cmp
fcoms
dec
addb
adc
cmp
cmp
orl
push
addb
adc
cmp
cmp
out
add
pusha
xlat
mov
das
lock
stc
cltd
mov
insb
nop
addr16
addb
adc
cmp
cmp
push
sub
scas
mov
inc
subb
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
xchg
aas
addb
adc
cmp
cmp
inc
cmpsb
add
addb
adc
cmp
cmp
xlat
ljmp
loop
and
shll
mov
stos
repnz
push
and
cmpsb
outsb
mov
addb
adc
cmp
cmp
push
add
addb
adc
cmp
cmp
inc
imul
cmp
cmp
sub
popa
jecxz
fists
jo
popf
mov
sbb
adc
push
int3
mov
adcb
adc
cmp
cmp
mov
pop
aaa
sbb
daa
jmp
inc
sbb
xchg
jl
repnz
adc
addl
cwtl
and
addb
cmp
cmp
mov
pop
addb
adc
cmp
cmp
fldl
xor
imul
fs
mov
mov
mov
mov
or
xchg
addb
adc
cmp
cmp
lods
add
sub
ljmp
lret
fs
out
or
outsl
cwtl
int
das
mov
insb
adc
cmpsl
jl
das
cmpsl
mov
jge,pt
mov
push
push
lea
clc
stos
call
aad
or
mov
ljmp
testl
addb
cmp
cmp
mov
add
mov
inc
jl
dec
add
mov
push
xlat
mov
aad
loopne
mov
sub
mov
and
adc
adc
cmp
cmp
adc
addb
cmp
cmp
mov
test
icebp
out
not
out
dec
cli
xor
sub
addb
cmp
cmp
mov
xchg
int
addb
cmp
cmp
mov
or
xor
fdiv
jge
push
inc
pop
fs
addb
adc
cmp
cmp
pop
loopw
add
hlt
cli
stc
popa
push
mov
xchg
ds
js
push
call
addb
adc
cmp
cmp
cmpsl
inc
std
rclb
jle
stc
pop
mov
movsl
dec
cs
sahf
add
movsl
mov
clc
pop
cltd
cmp
call
rorb
mov
scas
gs
pusha
inc
mov
add
addb
cmp
cmp
mov
mov
adc
addb
adc
cmp
cmp
scas
in
dec
jp
push
mov
inc
fidivl
xor
add
dec
fstl
sub
inc
jecxz
ret
pop
add
dec
rcl
std
mov
dec
push
push
mov
push
into
cmp
addb
adc
cmp
cmp
out
dec
and
xor
lea
adcb
adc
cmp
cmp
mov
mov
in
test
xchg
xor
xchg
xor
mov
adc
adc
cmp
cmp
mov
fdiv
mov
imul
in
out
addb
adc
cmp
cmp
push
aam
push
fsubrs
addb
adc
cmp
cmp
pusha
add
sbb
inc
sub
adc
adc
cmp
cmp
mov
loop
lods
cmp
adc
adc
cmp
cmp
mov
cmp
addb
cmp
cmp
mov
push
pop
fwait
push
je
into
jl
jno
addb
cmp
cmp
mov
jg
movsl
ljmp
addb
cmp
cmp
mov
addb
adc
cmp
cmp
ds
mov
pop
mov
lret
pop
push
mov
je
lahf
lret
dec
lds
hlt
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
cli
jge
lds
mov
popf
dec
push
mov
and
jno
xorl
jnp
nop
lds
addb
adc
cmp
cmp
and
addb
adc
cmp
cmp
jno
lock
movsb
sub
lods
les
shl
lock
addb
adc
cmp
cmp
and
addb
cmp
cmp
mov
cmp
cltd
mov
orl
adc
adc
cmp
cmp
bound
hlt
push
or
movl
adcb
adc
cmp
cmp
mov
sbb
in
js
dec
lea
iret
add
push
add
bound
ds
or
jp
in
mov
dec
mov
in
addb
cmp
cmp
mov
mov
xor
testb
aad
fdivp
in
fldenv
mov
pop
cmc
call
hlt
in
pop
fidivl
xor
or
push
out
dec
aaa
cmp
xor
in
mov
cmpsb
cmp
les
cmp
xorl
in
sub
and
jns
push
push
ds
inc
cmc
ret
stos
mov
push
and
jnp
push
cmp
fimuls
jmp
addb
cmp
cmp
mov
pop
lea
pop
das
jge
addb
adc
cmp
cmp
inc
imul
rorb
adcb
adc
cmp
cmp
mov
lods
xor
fisubrl
push
int
inc
lods
cmp
push
ret
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
jb
clc
pop
scas
sbb
push
rorb
daa
push
mov
inc
push
out
jb
push
pop
fiaddl
and
scas
outsb
out
jb
cmpsl
data16
nop
leave
dec
fiaddl
fimuls
mov
addb
adc
cmp
cmp
add
cmp
aad
mov
dec
in
adc
pop
cmp
mov
dec
mov
xchg
sbb
pop
cmpsl
hlt
adc
addb
adc
cmp
cmp
xlat
cmpsl
sub
daa
rolb
scas
test
enter
enter
into
mov
arpl
rcrb
dec
cli
mov
adcb
adc
cmp
cmp
mov
lret
xor
xchg
psubsb
addb
adc
cmp
cmp
and
push
mov
out
inc
dec
push
out
lock
adc
cmp
cmp
push
shlb
push
xorb
jle
xor
cmp
xor
xorl
addb
cmp
cmp
loop
fldl
xor
mov
push
push
jb
xor
lahf
dec
mov
outsb
add
pop
inc
ja
sub
or
scas
cmp
jl
popf
pop
mov
inc
std
iret
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
sbb
addb
cmp
cmp
mov
les
stc
lock
addb
cmp
cmp
mov
add
add
adc
adc
cmp
cmp
mov
repz
lock
dec
in
xor
mov
jecxz
imulb
sti
jbe
cmpsl
mov
adc
adc
cmp
cmp
mov
push
xchg
aas
and
sub
sarl
repnz
pop
movsl
aas
fdiv
jge
jp
lcall
adc
cmp
cmp
mov
nop
test
das
add
nop
and
inc
lcall
addb
cmp
cmp
mov
adc
adc
cmp
cmp
mov
pop
mul
sub
inc
shl
addl
cmp
cmp
sti
pop
popf
pop
ss
xchg
sub
imul
popf
pop
push
xchg
cmovo
fwait
pop
pop
ljmp
cld
xchg
out
icebp
rorl
mov
cmp
adcb
adc
cmp
cmp
mov
cmp
add
mov
adc
adc
cmp
cmp
mov
repnz
adc
cmp
cmp
int
iret
or
daa
mov
mov
jp
fidivrl
imul
or
jmp
ja
mov
addb
adc
cmp
cmp
mov
or
cmpsl
pop
sbb
cs
cmp
out
es
icebp
sub
movsl
lock
out
test
cmp
mov
addb
cmp
cmp
mov
add
add
adc
cltd
and
iret
mov
mov
pop
jmp
insl
push
test
out
test
mov
addb
cmp
cmp
mov
icebp
dec
lods
jo
sbb
add
sub
mov
ss
stos
jne
ret
rcll
mov
adc
roll
loopne
dec
inc
lock
mov
dec
addb
adc
cmp
cmp
pop
leave
push
xchg
or
rcrl
aad
insl
fsts
int3
adc
in
stos
sbb
mov
fs
leave
push
lea
je
push
addb
adc
cmp
cmp
ja
in
loopne
stc
adc
lock
mov
xor
xlat
fnstenv
iret
fidivrl
mov
shll
in
cmp
repz
and
mov
push
call
addb
adc
cmp
cmp
into
out
addb
adc
cmp
cmp
ljmp
test
adcb
adc
cmp
cmp
mov
push
sub
iret
add
movsl
arpl
loope
mov
scas
imul
lret
repz
fistps
insl
shrb
or
adcb
adc
cmp
cmp
mov
pop
aas
iret
lods
addb
adc
cmp
cmp
addb
loopne
push
xchg
ficoml
and
xor
into
push
sub
insl
xchg
jge
pop
test
sub
add
jmp
cmc
inc
fs
addr16
mov
add
pop
sahf
mov
pusha
pop
cld
test
fcompl
sbb
adc
adc
cmp
cmp
mov
push
je
xor
push
mov
faddl
aam
cld
sahf
inc
ficompl
addb
adc
cmp
cmp
addb
adc
cmp
cmp
aaa
pop
out
addb
adc
cmp
cmp
lret
inc
movsb
add
addb
cmp
cmp
and
adc
gs
pop
fsubl
push
fnstcw
lahf
and
push
push
cmp
adc
adcb
adc
cmp
cmp
mov
and
into
fcmovnb
sub
addb
adc
cmp
cmp
add
hlt
add
test
lahf
pop
rcrl
addb
cmp
cmp
mov
adc
addb
cmp
cmp
mov
jp
out
mov
scas
add
fsub
shrl
clc
jecxz
icebp
adc
movsb
adc
insl
add
sarb
cmp
bound
mov
shll
sub
mov
addb
adc
cmp
cmp
sub
in
leave
xchg
test
loopne
sbb
mov
mov
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
dec
call
addb
cmp
cmp
sbb
lock
lea
addb
cmp
cmp
mov
push
data16
addb
adc
cmp
cmp
push
jp
sbb
stos
addb
adc
cmp
cmp
cmp
stos
into
mov
push
sub
jnp
push
push
adc
rorb
mov
xor
aam
bound
addb
cmp
cmp
mov
xchg
cmp
adc
adc
cmp
cmp
in
stos
jae
inc
sbb
mov
adcb
adc
cmp
cmp
mov
jb
addb
adc
cmp
cmp
push
and
outsl
cli
sbb
and
addb
cmp
cmp
mov
test
jne
leave
sbb
jnp
insl
in
pop
popf
lds
ljmp
push
xchg
push
out
cltd
jnp
mov
dec
int3
addb
adc
cmp
cmp
pop
mov
mov
xchg
push
rcll
push
mov
lahf
jecxz
adc
push
addb
cmp
cmp
mov
outsl
push
sbb
adc
adc
cmp
cmp
stos
xchg
pop
call
cmp
inc
scas
fcoml
addb
adc
cmp
cmp
pop
pop
stos
add
jbe
pop
mov
adcb
adc
cmp
cmp
mov
add
mov
mov
mov
les
lret
loop
test
out
cwtl
rclb
fdivl
arpl
pop
inc
dec
pop
imul
lea
repnz
addb
cmp
cmp
mov
divb
stos
ja
jg
mov
cs
pop
ds
adc
cmp
cmp
push
aas
dec
cmp
jne
mov
mov
mov
addb
cmp
cmp
insb
arpl
addb
adc
cmp
cmp
mov
mov
lea
addb
adc
cmp
cmp
mov
loope
dec
sbb
xchg
push
jg
or
jne
xorl
xchg
addb
cmp
cmp
fucom
insb
inc
fldt
addb
cmp
cmp
mov
pop
addb
adc
cmp
cmp
lods
ds
popa
shll
hlt
ret
shlb
mov
jno
jae
jl
push
inc
mov
mov
jg
add
adcb
adc
cmp
cmp
mov
out
out
lock
sarb
jb
fists
addb
cmp
cmp
mov
js
fcoml
loope
testb
adc
cmp
cmp
mov
mov
addb
cmp
cmp
popf
or
into
mov
cmp
inc
fiadds
adc
adc
cmp
cmp
mov
push
loopne
jg
cltd
int
mov
mov
adcb
adc
cmp
cmp
mov
jmp
imull
inc
lods
mov
enter
das
sub
lahf
lds
fs
mov
jne
jg
cmp
cwtl
mov
mov
addb
cmp
cmp
mov
sbb
daa
pop
out
addb
adc
cmp
cmp
xlat
mov
sub
cmp
pop
xchg
repz
adc
cmp
cmp
clc
mov
adc
stc
es
mov
fwait
mov
lods
pop
stc
sarl
mov
adc
adc
cmp
cmp
push
bnd
or
inc
lea
icebp
clc
ljmp
cmpsb
int
es
adcb
adc
cmp
cmp
mov
mov
adc
fs
inc
daa
pop
xor
movsl
xchg
mov
fs
inc
addb
adc
cmp
cmp
push
jns
nop
push
mov
cmp
xlat
adc
mov
imul
cmp
addb
cmp
cmp
mov
jmp
mov
out
lahf
mov
repnz
insb
adc
pop
jbe
and
flds
push
lcall
push
inc
enter
sub
addb
cmp
cmp
mov
loopne
addb
adc
cmp
cmp
inc
pop
movsl
stc
inc
mov
test
mov
mov
bound
fadd
aaa
push
dec
pop
push
imul
icebp
push
jns
jbe
xchg
jnp
shlb
add
adc
xchg
ss
add
mov
fdivs
dec
xlat
xchg
cmpxchg
addb
adc
cmp
cmp
std
mov
adcb
adc
cmp
cmp
mov
push
subl
and
adcb
adc
cmp
cmp
mov
jecxz
jns
push
xchg
push
push
mov
addb
cmp
cmp
mov
jae
addb
adc
cmp
cmp
pop
xor
push
out
sbb
enter
jb
cmpsl
inc
jp
push
ds
dec
aas
ficoms
mov
mov
je
inc
das
mov
push
sbb
add
adcb
adc
cmp
cmp
mov
aaa
stos
in
jbe
jge
call
out
movsb
faddl
adcb
adc
cmp
cmp
mov
jbe
or
add
ret
fsubrl
fsubs
and
jp
popf
scas
cmp
stc
es
mov
pop
adc
push
arpl
int
and
dec
jge
xchg
cmpsl
mov
mov
adcl
ss
add
and
in
dec
jbe
int
lea
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
sub
aad
mov
xchg
fwait
add
pop
jl
jb
jp
push
xchg
push
testb
adc
cmp
cmp
mov
lahf
inc
and
pop
push
lea
outsl
subb
adcb
adc
cmp
cmp
mov
lahf
fcmovbe
out
test
mov
or
dec
out
adc
or
fisubl
sti
push
repnz
andb
addb
adc
cmp
cmp
fidivs
sub
mov
push
push
jne
addb
cmp
cmp
mov
add
or
adc
cmp
pop
xchg
xlat
adc
adc
adc
cmp
cmp
mov
adc
nop
je
jb
or
adc
adc
cmp
cmp
imul
loope
aad
outsl
test
sub
insb
and
sub
mov
xchg
inc
iret
jae
into
push
lcall
push
pusha
insl
pop
adc
daa
movsl
fsubrs
sbb
jnp
js
adc
and
pop
std
and
or
and
pop
and
adcb
adc
cmp
cmp
mov
adc
rorb
das
sub
jns
push
or
imul
scas
add
stos
push
rorb
pop
rcrl
imul
test
mov
leave
mov
aas
mov
dec
mov
ds
jmp
inc
addb
adc
cmp
cmp
add
inc
rcl
xchg
addb
adc
cmp
cmp
or
jo
add
mov
jge
xchg
hlt
inc
push
addb
adc
cmp
cmp
cmp
sahf
mov
inc
enter
xor
arpl
shll
dec
push
jmp
push
sahf
and
pop
cli
lds
adc
adc
cmp
cmp
icebp
inc
sbb
addb
adc
cmp
cmp
icebp
mov
inc
dec
mov
sub
orl
adc
adc
cmp
cmp
add
sbb
addb
cmp
cmp
dec
push
xor
pushf
aad
ret
add
addb
cmp
cmp
mov
inc
mov
mov
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
jmp
mov
sub
int
addb
adc
cmp
cmp
daa
mov
inc
in
repnz
addb
adc
cmp
cmp
sub
or
fisubrs
or
out
mov
or
sbb
adcl
mov
fwait
jno
xchg
and
lods
cld
add
xor
pop
adc
push
addr16
int3
int3
sub
mov
leave
std
pop
push
xor
mov
ret
and
gs
addb
adc
cmp
cmp
add
test
in
gs
sub
ficompl
addb
adc
cmp
cmp
dec
fldenv
pop
fldl
sarb
addl
xchg
jnp
arpl
push
cmp
mov
jle
addb
adc
cmp
cmp
or
mov
addb
cmp
cmp
mov
sahf
cltd
pop
inc
push
jl
push
pop
cmp
daa
adc
sbb
sbb
jl
sahf
roll
int3
jmp
addb
cmp
cmp
mov
fdivl
insb
and
mov
xlat
jp
xchg
push
orl
addb
cmp
cmp
mov
pop
in
out
addb
cmp
cmp
mov
call
aaa
or
dec
jno
mov
adc
adc
cmp
cmp
mov
or
repz
mov
pusha
sub
xorl
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
add
push
je
push
jg
jge
jnp
cmp
inc
lods
fmul
das
jae
addb
cmp
cmp
mov
jp
int3
stc
mov
scas
push
adc
mov
pushf
cmpsb
sarl
repz
push
xchg
imul
adc
imull
mov
mov
dec
or
xor
test
into
mov
xchg
addb
adc
cmp
cmp
jle
addb
adc
cmp
cmp
push
pop
dec
pop
inc
xchg
into
push
ljmp
mov
movsl
mov
addb
cmp
cmp
mov
shl
scas
push
shrl
mov
fwait
scas
cmpsl
mov
int3
inc
xchg
cmpsb
jmp
aas
adc
push
push
out
cmp
mov
push
scas
mov
and
xlat
xchg
lods
adc
adc
jnp
in
add
inc
nop
add
xchg
fildl
pop
inc
pop
cmpl
addb
cmp
cmp
mov
add
dec
addb
adc
cmp
cmp
pop
movsb
fwait
xchg
ret
loop
xchg
rcrl
fistps
movsb
push
mov
pop
inc
push
mov
mov
addb
adc
cmp
cmp
mov
xlat
inc
and
jge
into
push
adc
mov
mov
push
icebp
scas
addb
adc
cmp
cmp
lods
loope
mov
popa
mov
fldcw
jecxz
addb
adc
cmp
cmp
cltd
mov
fldenv
addb
cmp
cmp
or
loopne
cli
xor
sub
vshufps
dec
ret
or
or
insb
mov
test
adc
loopne
addb
cmp
cmp
mov
xchg
rolb
jb
rcrb
sub
shrl
addb
cmp
cmp
mov
addr16
push
push
out
add
jl
push
sbb
in
inc
push
mov
push
pop
push
enter
rorl
xlat
call
inc
mov
adcb
adc
cmp
cmp
mov
and
pusha
out
xchg
mov
shrb
call
jnp
dec
mov
addb
cmp
cmp
mov
jge
lods
mov
je
mov
pop
push
call
push
fwait
inc
push
xchg
push
je
pop
adc
adcb
adc
cmp
cmp
mov
les
push
arpl
sahf
roll
js
xchg
addb
adc
cmp
cmp
xor
mov
adc
int
jg
pop
dec
scas
cmp
jmp
scas
aad
vmovdqa
push
cmpsl
stos
adc
add
jns
int
popa
jmp
js
inc
cmp
mov
push
out
and
out
xchg
push
cld
in
add
lahf
into
hlt
addb
adc
cmp
cmp
lcall
jl
cmp
jno
mov
mov
xchg
dec
jno
mov
jmp
xchg
in
pusha
mov
and
test
lods
mov
lock
sub
inc
cwtl
mov
push
out
push
xorl
xor
ss
cmpsl
dec
movsb
ss
jns
popl
push
xor
clc
fnstsw
jb
and
mov
lea
pop
cmp
adc
adc
cmp
cmp
cmp
cmpsl
add
adc
adc
cmp
cmp
push
hlt
inc
iret
cmc
jbe
nop
mov
addb
adc
cmp
cmp
popa
insl
xlat
rclb
icebp
popf
jnp
fsubl
ss
out
in
jae
or
push
pop
inc
std
adc
mov
addb
cmp
cmp
mov
bound
adc
adc
cmp
cmp
bnd
lds
arpl
and
pop
add
cmp
jne
fimuls
outsb
or
in
sub
ljmp
push
cmc
push
sub
or
or
test
add
stos
stos
ds
rorb
fisubrl
mov
enter
push
mov
add
pop
mov
cmp
addb
adc
cmp
cmp
cmp
adc
adc
cmp
cmp
sub
or
xchg
lock
inc
adc
call
mov
leave
inc
dec
jge
mov
mov
in
imul
mov
dec
loope
addb
cmp
cmp
mov
addb
adc
cmp
cmp
xor
xchg
xlat
sub
cmpsb
fwait
addb
adc
cmp
cmp
or
addb
cmp
cmp
mov
jno
sub
adc
adc
cmp
cmp
jbe
outsl
fwait
xor
jne
addb
cmp
cmp
mov
addb
adc
cmp
cmp
cmpsl
cmp
aam
pop
adc
push
push
push
pop
int3
shlb
push
repnz
mov
addb
cmp
cmp
out
inc
mov
adc
dec
popa
dec
mulb
mov
test
push
iret
and
sbb
icebp
pop
cmpsb
addb
adc
cmp
cmp
and
addb
cmp
cmp
mov
pusha
or
jg
push
jmp
test
mov
loop
xor
jge
or
and
addb
adc
cmp
cmp
adc
addb
cmp
cmp
or
es
fsubrl
cmpl
xchg
jo
xlat
and
pop
dec
jbe
enter
addb
adc
cmp
cmp
mov
jl
jne
jns
nop
adc
xor
imul
addb
adc
cmp
cmp
jmp
sbb
pushf
lods
or
adc
adc
cmp
cmp
stos
xchg
mov
repnz
sub
call
jl
mov
jno
cmp
adcb
adc
cmp
cmp
mov
pushl
mov
mov
sar
jmp
dec
out
mov
rclb
sub
int
jp
pop
push
mov
addb
cmp
cmp
mov
arpl
adc
adc
cmp
cmp
mov
adc
adc
cmp
cmp
pop
cmpsb
lahf
sbb
jmp
js
pushf
cmp
push
addb
adc
cmp
cmp
lret
addb
cmp
cmp
addb
adc
cmp
cmp
imull
push
lods
pop
in
mov
adc
xor
outsl
inc
enter
addb
cmp
cmp
mov
jo
fs
dec
stos
inc
cmp
aaa
addb
adc
cmp
cmp
out
outsb
sbb
cmp
fmulp
inc
adc
stc
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
add
addb
adc
cmp
cmp
mov
add
xchg
pop
stc
inc
cltd
mov
or
push
xor
adc
into
clc
and
sbb
imul
sahf
dec
inc
leave
sbb
insb
mov
adcb
adc
cmp
cmp
mov
push
mov
and
and
mov
xor
stc
or
dec
cmp
xor
outsl
mov
addb
adc
cmp
cmp
cmp
adc
sub
jmp
jle
test
adcb
adc
cmp
cmp
mov
push
mov
jl
inc
mov
popf
leave
dec
adcl
add
adc
adc
cmp
cmp
mov
fsubl
negb
addb
adc
cmp
cmp
iret
mov
mov
jne
xor
lock
in
xlat
jg
sbb
aas
addb
adc
cmp
cmp
adc
sub
decl
mov
xchg
cmpsb
mov
sbb
stc
adc
add
iret
cmc
mov
pop
movsl
stc
jns
popf
fwait
je
mov
popf
sbb
or
andb
addb
cmp
cmp
mov
sbb
adc
adc
cmp
cmp
sbb
or
push
out
addb
adc
cmp
cmp
mov
mov
pusha
cli
push
fwait
jb
mov
les
call
adc
adc
cmp
cmp
mov
in
mov
fs
addb
adc
cmp
cmp
xchg
and
mov
loop
or
addb
cmp
cmp
mov
add
mov
mov
xchg
mov
sub
push
push
inc
mov
test
pusha
jno
add
pop
subl
cmp
sbb
adcb
adc
cmp
cmp
mov
rolb
adc
popa
popf
and
popf
imul
sahf
pop
jge
mov
dec
cmp
sbb
cmpsb
in
xchg
mov
popf
addb
adc
cmp
cmp
jle
xchg
dec
addb
adc
cmp
cmp
dec
rcrl
orb
push
repz
shlb
outsl
addb
adc
cmp
cmp
mov
gs
popa
imul
addb
cmp
cmp
mov
faddl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
cmp
sahf
xor
mov
pop
scas
sub
je
mov
fwait
shlb
jp
or
out
outsb
and
xor
push
xchg
add
adcl
xor
scas
and
inc
adc
dec
mov
addb
cmp
cmp
mov
xor
pusha
movsl
jae
outsb
dec
inc
lcall
psraw
mov
cld
stos
into
xchg
cltd
sub
loope
test
adc
push
fdivl
add
enter
lea
mov
adc
dec
outsl
mov
in
mov
repz
addb
adc
cmp
cmp
xchg
add
out
xlat
loopne
pop
push
inc
rcl
addb
adc
cmp
cmp
mov
adcb
adc
cmp
cmp
mov
mov
or
inc
cmp
icebp
add
addb
adc
cmp
cmp
testl
cmp
cmp
add
xor
addb
cmp
cmp
mov
mov
xor
loopne
rcrl
adc
test
enter
mov
loope
dec
dec
sub
lret
mov
xchg
scas
jge
les
addb
adc
cmp
cmp
mov
jno
pop
dec
stos
push
mov
fnsave
cmpsl
or
adc
adc
cmp
cmp
int
add
addb
adc
cmp
cmp
aam
and
rolb
loop
pop
jnp
addb
adc
adc
cmp
cmp
jp
addb
adc
cmp
cmp
das
nop
insl
popa
jecxz
addb
adc
cmp
cmp
and
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
push
repnz
out
outsl
nop
cmc
mov
lods
pop
jne
xor
fst
inc
jmp
leave
lock
sbb
cmpsb
fstps
loop
or
in
test
dec
repnz
xbegin
rclb
enter
divb
or
sbb
adc
sbb
inc
mov
mov
pop
insl
aaa
pusha
push
clc
and
jp
jnp
dec
jno
mov
addb
cmp
cmp
mov
xchg
fnsave
adc
adc
cmp
cmp
mov
inc
dec
jnp
pop
sbb
adc
lcall
fucomi
cwtl
or
mov
inc
faddl
adc
adc
cmp
cmp
jmp
push
inc
xchg
and
and
push
push
outsb
sbb
jae
test
mov
add
addb
adc
cmp
cmp
out
pop
addb
adc
cmp
cmp
push
add
ss
andb
ret
int3
sub
adc
jmp
addb
cmp
cmp
mov
xor
repnz
add
test
mov
or
adc
adc
cmp
cmp
int3
pusha
ret
adc
jmp
xor
addb
cmp
cmp
xor
arpl
les
aam
pop
push
hlt
call
xchg
js
dec
ret
mov
push
jbe
bound
pop
popa
rolb
push
es
xchg
cmp
sub
addb
adc
cmp
cmp
cltd
out
ljmp
lods
push
xchg
cmpsb
lret
fdivrl
or
sbbl
int3
mov
xchg
pop
gs
outsl
es
scas
clc
mov
sbb
pop
popf
jg
inc
into
and
stos
xchg
mov
adc
push
test
addb
cmp
cmp
mov
fimull
addb
cmp
cmp
mov
mov
mov
jp
mov
imul
adc
adc
cmp
cmp
dec
mov
sbb
rcll
sbb
sarl
inc
das
mov
jmp
addb
cmp
cmp
incb
sub
addb
adc
cmp
cmp
mov
jmp
bound
fidivrl
out
fisubl
xchg
push
jmp
inc
in
icebp
in
in
xchg
push
pop
push
addb
adc
cmp
cmp
fistpl
cmpsl
mov
dec
pushf
dec
out
sub
lods
lods
sub
fimull
in
data16
outsl
scas
xchg
mov
pop
mov
cmpb
dec
jmp
cs
std
or
fmuls
iret
add
addb
adc
cmp
cmp
mov
iret
mov
jl
addb
cmp
cmp
mov
imul
add
fwait
inc
adc
xchg
sub
lods
ss
aaa
iret
or
pop
subl
loopne
addb
adc
cmp
cmp
mov
incb
sbb
dec
pop
sbb
addb
cmp
cmp
mov
mov
sbb
xchg
bound
ja
sarl
lods
jmp
mov
addb
cmp
cmp
pop
jne
sbb
xor
addb
adc
cmp
cmp
in
daa
stos
insb
cld
cwtl
push
pop
mov
pop
pusha
test
rclb
push
mov
adc
pop
in
cmp
pop
sub
popf
mov
jb
addb
adc
cmp
cmp
jno
addb
cmp
cmp
mov
rcll
insl
jbe
addb
adc
cmp
cmp
arpl
jge
sbb
mov
push
cltd
fisubs
jg
mov
addb
adc
cmp
cmp
leave
mov
movsl
loop
iret
ljmp
adc
lods
push
lahf
and
test
outsb
popf
stos
push
dec
movsb
icebp
xchg
or
jmp
repz
dec
pop
lahf
test
cs
mov
jge
cli
pusha
out
inc
inc
xchg
mov
adc
pushf
push
aad
or
mov
push
sbb
aad
clc
pop
mov
xchg
inc
into
addb
adc
cmp
cmp
pop
push
addb
adc
cmp
cmp
inc
push
xchg
and
stos
dec
cmc
or
test
jno
addb
cmp
cmp
mov
lcall
mov
pop
out
push
int
outsl
popf
fwait
iret
addb
adc
cmp
cmp
sarb
cmc
iret
cmpsb
pcmpgtw
ret
add
jl
sahf
sahf
arpl
in
pop
xchg
ret
inc
ficoml
inc
pushf
sbb
addb
adc
cmp
cmp
shrl
adc
addb
adc
cmp
cmp
out
rcrl
xor
enter
sub
call
mov
cmc
dec
scas
nop
pop
lahf
loop
addl
pop
xchg
mov
ret
mov
push
bound
lret
inc
test
pop
mov
addb
adc
cmp
cmp
lahf
sbb
addb
adc
cmp
cmp
std
push
inc
pop
es
outsl
add
pop
xlat
imul
xchg
out
insb
mov
cmp
jns,pt
cwtl
pop
gs
rorb
je
xor
adcb
adc
cmp
cmp
mov
mov
or
sub
adcb
adc
cmp
cmp
mov
fwait
push
and
xor
popa
inc
jae
addb
adc
cmp
cmp
xchg
nop
xchg
jecxz
pop
test
dec
xchg
adc
std
lret
js
in
icebp
addb
adc
cmp
cmp
xorps
addb
adc
cmp
cmp
mov
adc
push
mov
ret
bound
int3
cmp
mov
dec
repz
sti
icebp
mov
lret
inc
shr
pushf
sbb
pop
addb
adc
cmp
cmp
dec
pop
xor
sbb
or
addb
cmp
cmp
mov
push
cwtl
push
lods
pop
cmp
addb
cmp
cmp
mov
leave
xor
fbld
push
sbb
dec
pop
jnp
sbb
negl
xor
ds
mov
int3
cmpb
fnstsw
or
addb
cmp
cmp
mov
pop
mov
loop
cs
inc
mov
icebp
test
addb
cmp
cmp
mov
xchg
mov
out
add
shlb
mov
inc
cmp
pusha
jno
in
sbb
mov
idivb
push
or
popa
lods
cmp
fs
cmp
adcb
adc
cmp
cmp
mov
mov
jnp
adc
addb
adc
cmp
cmp
add
ret
jns
pop
call
adc
adc
cmp
cmp
mov
add
adc
addb
cmp
cmp
sbb
cmc
int3
aaa
push
loopne
repz
push
xor
xor
adc
adc
cmp
cmp
stos
addb
adc
cmp
cmp
xor
dec
cli
aas
and
mov
jbe
nop
leave
add
addb
adc
cmp
cmp
fldenv
xchg
cli
addb
adc
cmp
cmp
adc
leave
roll
adc
cmp
cmp
mov
movsb
fwait
mov
out
xchg
nop
push
sbb
push
pop
inc
xor
pop
or
jmp
mov
adc
adc
cmp
cmp
mov
ljmp
mov
sub
or
mov
adcb
adc
cmp
cmp
mov
jl
addb
cmp
cmp
mov
cli
push
ret
pop
cltd
inc
call
scas
arpl
adc
adc
cmp
cmp
sub
or
mov
sbbb
add
lods
addb
adc
cmp
cmp
sub
js
inc
dec
int
push
cmc
jbe
jo
fldt
cwtl
jnp
and
sbb
addb
adc
cmp
cmp
adc
pop
mov
mov
testl
cmp
cmp
aas
movsb
ret
fcomip
xchg
push
test
or
outsb
jecxz
hlt
inc
sub
daa
ja
mov
jp
push
pop
sti
xchg
roll
adc
adc
cmp
cmp
movsb
cltd
std
ljmp
addb
cmp
cmp
mov
sbb
ror
and
jecxz
jl
xor
dec
out
or
loope
pushf
jno,pn
cwtl
cmp
jae
insl
into
lahf
push
fistl
or
out
addb
cmp
cmp
mov
adc
adc
adc
cmp
cmp
mov
and
inc
or
push
addb
adc
cmp
cmp
test
in
insb
add
nop
ss
jge
pop
mov
movsl
inc
test
psrlw
adc
adc
cmp
cmp
mov
jb
cmp
adc
adc
cmp
cmp
addb
adc
cmp
cmp
and
addb
cmp
cmp
mov
lods
push
pop
xor
sub
xor
aam
mov
push
pop
arpl
out
jo
inc
iret
ret
ljmp
adc
neg
jbe
cltd
sarl
ss
jmp
and
push
adcl
cltd
movsb
stos
or
push
daa
mov
jns
mov
sbb
icebp
int3
popf
xchg
inc
ds
sub
addr16
fs
xchg
ret
dec
lock
cmc
ret
dec
bound
rorb
jl
das
xor
in
test
mov
jno
mov
xchg
add
addb
adc
cmp
cmp
lret
mov
xchg
cmp
addb
cmp
cmp
mov
mov
or
fisubrs
mov
addb
cmp
cmp
popa
inc
mov
cmp
jmp
inc
xor
femms
imul
cmp
ds
mov
int
xor
stc
xor
sbb
inc
or
xchg
mov
xor
xchg
ret
jl
xor
adc
mov
adcb
adc
cmp
cmp
mov
insl
push
dec
out
jecxz
stos
xor
add
subb
inc
adc
add
adcb
adc
cmp
cmp
mov
adcb
sbb
lock
mov
addb
adc
cmp
cmp
popf
mov
addb
cmp
cmp
mov
inc
mov
mov
adc
outsl
stos
addb
adc
cmp
cmp
push
push
xchg
scas
xchg
addb
adc
cmp
cmp
movsl
xor
mov
addb
cmp
cmp
fxch
push
ds
addr16
pop
add
cli
cmp
popf
cmp
and
adc
xchg
lods
sub
aaa
int3
pop
or
push
and
xchg
out
adc
inc
mov
or
adcb
adc
cmp
cmp
mov
mov
mov
imul
adcl
test
addb
adc
cmp
cmp
mov
dec
or
lods
lret
inc
inc
gs
or
fs
movsl
mov
jns
push
mov
push
das
aam
mov
mov
scas
stos
addb
adc
cmp
cmp
fs
outsl
mov
adc
adc
adc
cmp
cmp
mov
jmp
sub
sar
jne
push
mov
addb
adc
cmp
cmp
fwait
dec
mov
mov
xor
cmp
jp
addb
cmp
cmp
mov
pop
add
push
in
xchg
fadd
test
addb
cmp
cmp
mov
adc
stc
or
addb
cmp
cmp
mov
movl
jge
scas
rcll
rorl
push
push
decl
xor
into
pushw
int
jmp
fbstp
out
aaa
popa
dec
cmp
cmpb
ja
pmulhuw
mov
loope
inc
addb
adc
cmp
cmp
lahf
movsl
mov
jecxz
or
xor
test
stc
sub
sbb
add
jne
mov
in
cmp
jae
addr16
sbb
xchg
cltd
cmp
push
jnp
or
push
sbb
rclb
cmc
jo
mov
jno
and
mov
addb
adc
cmp
cmp
pop
js
imul
incb
loope
enter
cmp
out
push
loop
push
andb
add
adc
adc
cmp
cmp
dec
lds
push
ror
out
in
sub
mulb
xor
ja
fldt
jne
jno
pop
pop
pop
in
mov
shll
xchg
pop
ds
movsl
int3
push
cli
or
int
pop
xchg
push
movsl
inc
incl
xlat
cmp
adc
adc
cmp
cmp
mov
xchg
and
lahf
dec
mov
arpl
or
xor
icebp
imul
and
inc
or
mov
es
inc
pop
ss
pop
lcall
pop
pop
out
adc
test
mov
addb
adc
cmp
cmp
pushf
lods
out
add
adc
adc
cmp
cmp
rcrl
inc
xor
push
mov
pop
sbb
pop
cmc
and
xchg
stos
push
xchg
xchg
in
movsl
sbb
pop
xchg
pop
flds
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
test
mov
popa
push
addb
cmp
cmp
mov
and
dec
addb
adc
cmp
cmp
xchg
daa
jge
loope
mov
jae
mov
fiaddl
adc
adc
cmp
cmp
daa
aas
jnp
ficoml
inc
sarb
addb
adc
cmp
cmp
pusha
je
insl
outsb
lods
data16
lcall
xor
fst
repz
push
scas
jecxz
jle
mov
addb
cmp
cmp
mov
scas
inc
dec
mov
call
in
pop
push
aas
inc
adc
mov
lahf
push
cmp
out
notb
shrl
loope
movsl
scas
out
jnp
sub
repnz
ficoml
push
pop
sbb
adc
adc
cmp
cmp
out
out
pop
cmpsb
rcll
jns
stc
faddp
pushf
sbb
push
lds
sub
mov
in
mov
mov
adc
addb
adc
cmp
cmp
imul
fcmovnu
aas
je
std
xchg
add
push
jg
mov
adc
adc
cmp
cmp
mov
xchg
sbb
xor
mov
lea
test
addr16
shl
sbb
adc
adc
cmp
cmp
in
and
sub
lods
fdivr
push
pop
or
fwait
and
xor
dec
in
inc
or
iret
imul
adc
cmp
cmp
mov
rcr
jns
test
or
xchg
pop
sbb
jnp
shll
lea
aaa
cltd
lahf
mov
test
pop
lcall
addb
cmp
cmp
les
int
addb
adc
cmp
cmp
in
xchg
jle
test
cli
push
jbe
movsb
push
shlb
cmp
aad
test
aas
sbbb
addr16
mov
addr16
cmp
cmp
out
pop
mov
imulb
stos
push
cli
pop
sbb
jl
stc
test
inc
xlat
inc
bound
aaa
addb
adc
cmp
cmp
sbb
scas
jno
xchg
aam
lcall
shll
out
je
addb
cmp
cmp
mov
ror
inc
icebp
testb
cmp
adc
adc
cmp
cmp
or
das
cltd
adcb
addb
adc
cmp
cmp
sahf
js
cltd
or
jg
imul
xchg
and
lds
jo
loop
mov
dec
loope
mov
jb
mov
adc
arpl
mov
jmp
insl
inc
jb
jb
push
dec
int
insb
test
test
icebp
xchg
lea
cmp
xchg
dec
out
fstpl
addb
cmp
cmp
mov
imul
adcb
adc
cmp
cmp
mov
es
pop
inc
mov
ret
movsb
addb
adc
cmp
cmp
mov
push
stos
push
push
daa
add
fsubs
dec
outsb
sarl
addb
cmp
cmp
mov
sbb
fisubrl
push
aam
out
dec
gs
addb
adc
cmp
cmp
mov
clc
push
cs
ret
cld
test
fcoml
push
push
adc
addb
adc
cmp
cmp
pop
mov
pop
addb
adc
cmp
cmp
or
or
bound
mov
lret
sbb
jecxz
push
ja
imulb
mov
xor
mov
lea
mov
push
lds
mov
jno
add
mov
and
pop
adc
xchg
test
adc
adc
cmp
cmp
mov
leave
push
outsb
or
pop
xchg
push
push
addb
adc
cmp
cmp
sub
movsl
mov
mov
and
adc
outsl
pop
xor
pop
add
xchg
addb
adc
cmp
cmp
and
jge
fisttpl
mov
and
xor
dec
and
pusha
and
add
or
addb
cmp
cmp
and
pop
adc
add
in
xchg
jecxz
mov
adc
xor
push
out
pop
repz
in
adc
fidivl
cmp
lea
in
mov
push
adc
mov
sahf
sbbl
sub
test
ret
sub
xchg
cmp
cltd
scas
sub
sti
int3
sbb
and
add
jne
lret
jg
jno
hlt
popf
nop
mov
sub
push
lods
lock
mov
aad
lods
fs
insb
aam
or
sahf
pop
iret
sbb
roll
adc
adc
cmp
cmp
leave
ffree
fwait
popf
xchg
pop
or
std
hlt
stc
push
stos
mov
or
inc
das
pop
sti
jl
push
mov
sub
out
fistps
test
or
nop
mov
and
in
movsl
mov
mov
ja
les
cmp
mov
sbb
and
pop
sub
push
stos
sbb
adc
adc
cmp
cmp
mov
rorb
inc
pop
fwait
pop
scas
cmpsl
shlb
pop
jb
jns
mov
es
repz
lahf
sub
std
test
adc
jne
rolb
adc
adc
cmp
cmp
movsl
lret
addb
cmp
cmp
add
push
jmp
mov
inc
or
inc
addb
adc
cmp
cmp
lahf
clc
jns
or
xlat
pushf
into
ja
cmp
cmp
js
pop
or
insb
fwait
addb
adc
cmp
cmp
xchg
adc
loop
cltd
lods
inc
popf
and
leave
cmp
adc
adc
cmp
cmp
mov
xor
bound
xchg
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
jne
pop
mov
dec
clc
mov
pop
arpl
dec
lea
pop
test
adc
repz
out
hlt
std
test
ror
mov
adc
adc
cmp
cmp
fstpt
cs
xor
pop
sbb
sbb
or
push
out
movsl
sbb
mov
repz
jecxz
or
sub
mov
jge
xchg
mov
jecxz
gs
addb
cmp
cmp
mov
icebp
fdivs
arpl
cmp
sbb
addb
cmp
cmp
mov
sti
dec
mov
add
out
mov
pusha
sbb
dec
xchg
xchg
incb
pop
push
sub
add
cmc
adc
jle
imul
ficompl
xchg
and
in
imul
bnd
xlat
cmp
ljmp
imul
jns
jg
je
outsb
dec
mov
cs
test
addb
adc
cmp
cmp
sbb
jl
out
dec
cmp
leave
push
incl
fists
fstpl
pop
mov
movsb
out
or
sbb
addb
adc
cmp
cmp
xlat
jg
fists
test
xacquire
sbb
das
gs
popf
mov
jns
mov
jp
rol
mov
jg
ss
mov
addb
cmp
cmp
movsl
loop
sti
cmp
testl
popa
ljmp
testl
cmp
cmp
mov
js
cmp
leave
adc
enter
mov
stc
addr16
sub
icebp
mov
addb
cmp
cmp
mov
jb
incl
xchg
addb
adc
cmp
cmp
mov
jo
sub
adc
push
outsl
dec
cld
jae
jns
addb
cmp
cmp
mov
inc
movsb
fldcw
jnp
xor
imul
fnstcw
rdtsc
adc
call
dec
jecxz
sub
dec
or
addb
cmp
cmp
mov
das
or
xor
cmp
xchg
mov
dec
cmc
mov
mov
pusha
xor
inc
pop
addb
adc
cmp
cmp
mov
or
stos
inc
popa
mov
test
lea
addb
adc
cmp
cmp
les
fdivrl
out
jge
movsb
cmp
add
cmpsl
add
add
sbb
iret
nop
pushf
popf
addb
adc
cmp
cmp
sti
mov
or
xchg
icebp
movsb
orb
push
cmp
aam
xchg
jg
shll
lea
xchg
addb
cmp
cmp
or
xchg
popf
lret
out
loope
pop
por
sub
jo
addb
cmp
cmp
mov
cmpsl
push
xchg
out
xor
shll
iret
pusha
movsl
mov
out
xchg
pop
xchg
in
pop
cld
cmp
sti
pop
pop
add
call
add
add
adcb
adc
cmp
cmp
mov
cs
push
cmp
addb
adc
cmp
cmp
sbb
sub
shlb
sub
adc
or
adc
adc
cmp
cmp
mov
nop
les
imul
pop
fmul
enter
xchg
or
faddl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
out
mov
xor
and
loopne
jge
hlt
dec
mov
adc
adc
cmp
cmp
xor
popa
push
loope
mov
pop
cmpl
int
jg
ss
addb
cmp
cmp
inc
mov
or
adc
iret
loope
addr16
addb
cmp
cmp
sbb
rorl
hlt
inc
mov
xlat
test
mov
lods
mov
dec
popf
cmp
xchg
lret
sbb
addb
adc
cmp
cmp
ljmp
and
mov
push
nop
out
fwait
and
mov
adc
adc
cmp
cmp
addb
adc
cmp
cmp
mov
cmp
add
lds
inc
into
push
add
ljmp
sahf
inc
or
lds
or
or
and
daa
jne
idivl
es
loop
ljmp
aas
add
out
push
fnstsw
out
sbb
dec
push
mov
xor
movsb
nop
imul
adc
adc
cmp
cmp
mov
in
xor
addb
cmp
cmp
sti
popf
inc
dec
mov
lock
imul
jge
imul
mov
cli
lahf
adc
mov
jmp
or
jmp
addb
adc
cmp
cmp
sbbb
aam
fs
inc
adc
lods
mov
shl
scas
addb
adc
cmp
cmp
insl
cmp
addb
cmp
cmp
xor
jl
in
inc
orl
nop
adc
adc
inc
mov
addb
cmp
cmp
call
dec
int
and
sti
rorl
or
stos
lret
fstpl
adc
adc
cmp
cmp
mov
xchg
ja
ljmp
sbb
add
popf
outsl
out
lods
fildl
rclb
ja
push
test
adc
adc
cmp
cmp
cli
lods
xchg
xor
dec
repz
repz
cmp
addl
inc
mov
add
cmp
jae
sub
sub
mov
repnz
addb
cmp
cmp
mov
loop
pop
xchg
adc
addb
cmp
cmp
mov
notl
mov
ljmp
sub
mov
sub
mov
jne
mov
aas
xor
sbb
sti
das
stos
lods
mov
mov
xchg
ds
mov
rcrb
inc
lret
in
mov
xchg
xchg
and
rolb
mov
out
mov
adcb
adc
cmp
cmp
mov
sbb
sar
dec
scas
enter
aas
shrb
in
xor
jne
and
pop
adcb
cmp
push
lods
int3
mov
fcoms
dec
fisttpll
addb
cmp
cmp
mov
fwait
in
in
jle
and
sub
fmul
add
adcb
mov
jns
stos
push
mov
addb
cmp
cmp
mov
lahf
push
mov
pop
sbb
mov
cmp
pop
outsb
loop
push
movsb
dec
xor
movsl
push
mov
dec
sub
lahf
push
call
cs
dec
out
push
pop
rolb
push
adc
jmp
call
mov
adc
or
stc
xchg
imul
cs
adc
sub
in
test
mov
out
inc
pop
addb
adc
cmp
cmp
xchg
in
je
add
adc
cmpsb
aaa
fstpl
push
dec
sub
add
addb
cmp
cmp
mov
subb
scas
lahf
test
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
fnstsw
sub
pop
pop
std
addb
adc
cmp
cmp
dec
shll
mov
and
scas
pop
addb
adc
cmp
cmp
lods
ds
push
inc
adc
push
addb
cmp
cmp
add
xchg
notb
add
cmp
adcb
adc
cmp
cmp
mov
iret
mov
mov
dec
imul
mov
xor
lcall
je
push
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
inc
in
xor
push
frstor
adc
adc
cmp
cmp
mov
ljmp
jne
aad
xor
shrb
mov
jcxz
icebp
sbb
mov
mov
adc
mov
sub
sti
sub
addb
cmp
cmp
mov
addb
adc
cmp
cmp
sub
mull
out
and
ja
insl
fs
addb
cmp
cmp
mov
repz
push
adc
addb
adc
cmp
cmp
lret
pop
sarl
mov
mov
inc
dec
push
dec
pop
aaa
and
pop
push
mov
aam
enter
mov
dec
dec
std
pop
repz
xchg
jle
cmc
mov
pop
cltd
push
cs
pop
icebp
adc
addb
adc
cmp
cmp
sub
dec
and
ljmp
push
addb
adc
cmp
cmp
sub
adc
adc
adc
cmp
cmp
mov
xchg
push
sti
in
rolb
in
sub
je
addb
adc
cmp
cmp
ljmp
movsb
addr16
addl
mov
inc
xchg
xchg
mov
xor
nop
sbb
and
pushf
jmp
push
inc
push
xchg
shl
sti
js
mov
imul
push
ret
mov
xor
loopne
dec
pop
movsl
or
scas
dec
les
add
cmp
sub
xchg
fdivrs
ss
nop
inc
dec
adc
inc
add
adc
addb
cmp
cmp
mov
cs
adc
ljmp
loopne
xor
addr16
jb
pop
fiadds
addb
cmp
cmp
mov
push
test
fisubs
xor
cwtl
fwait
pandn
pop
push
xchg
sub
or
adc
adc
cmp
cmp
scas
lods
leave
adc
inc
je
or
cmp
cld
inc
and
addb
adc
cmp
cmp
mov
adc
testl
scas
aad
lcall
push
adcl
addb
cmp
cmp
aas
repz
and
xchg
lret
es
in
addb
cmp
cmp
mov
movsb
divb
ja
mov
insl
sahf
cmp
adc
adc
cmp
cmp
sbb
jno
jae
sbb
add
adcb
adc
cmp
cmp
mov
out
addb
cmp
cmp
mov
sbb
clc
hlt
dec
add
in
sbb
xchg
addb
adc
cmp
cmp
repz
shlb
or
jp
jns
mov
mov
inc
sti
or
dec
into
dec
or
pop
ds
addb
cmp
cmp
dec
cmp
addb
adc
cmp
cmp
cmp
push
out
dec
sub
addb
cmp
cmp
mov
adc
dec
xchg
push
pop
mov
outsb
jo
cwtl
xchg
lds
sub
lahf
xor
in
addb
adc
cmp
cmp
jne
push
addb
adc
cmp
cmp
mov
sbb
adc
adc
cmp
cmp
mov
mov
mov
dec
cli
sbb
fwait
lods
add
mov
cmpl
addb
cmp
cmp
loopne
repnz
or
es
popa
jnp
in
or
cltd
addb
adc
cmp
cmp
xor
ret
inc
icebp
push
filds
adc
adc
cmp
cmp
jmp
cmp
or
ret
jo
popa
out
push
cs
xchg
add
addb
cmp
cmp
mov
pop
mov
movsl
inc
ficompl
enter
addb
adc
cmp
cmp
xor
or
inc
test
or
sbb
or
addb
cmp
cmp
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
rsqrtps
mov
pusha
dec
push
das
cwtl
stos
jecxz
cs
dec
cld
sub
or
sti
xorl
mov
pop
arpl
xor
add
pop
mov
mov
sahf
out
sub
mov
mov
push
cmp
dec
fsubl
in
addb
adc
cmp
cmp
push
mov
dec
adc
jnp
fsubl
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
std
clc
cmc
data16
mov
addb
cmp
cmp
mov
pusha
loopne
addb
cmp
cmp
mov
lds
mov
je
xchg
test
shl
jbe
dec
stos
jns
mov
idiv
and
setp
pop
jbe
sub
cmp
push
and
out
push
push
pushf
or
pop
cmp
adc
push
ds
inc
mov
add
push
movsl
pop
inc
sub
out
jecxz
test
or
in
mov
addb
adc
cmp
cmp
int3
jmp
pop
sub
gs
pop
pusha
notb
xor
test
incb
adc
adc
cmp
cmp
mov
leave
enter
pop
jno
addb
cmp
cmp
mov
addb
adc
cmp
cmp
stos
push
jp
jecxz
sub
adc
xchg
lcall
rclb
lea
jnp
ret
loope
addb
adc
cmp
cmp
or
mov
data16
lds
js
sbb
out
idivb
cmpl
or
aas
daa
addb
adc
cmp
cmp
stos
cmp
sub
pop
push
fsubrl
mov
sub
cmpsl
push
mov
lds
pop
loop
xchg
femms
out
out
cmp
pusha
sti
cmp
add
ret
pop
fldcw
adc
adc
cmp
cmp
mov
sub
sti
std
or
sarl
adcb
adc
cmp
cmp
mov
xchg
jecxz
inc
adc
out
loope
jle
rorb
call
cmp
out
jo
cwtl
cmp
sbb
aas
fadds
loopne
xor
sub
insl
clc
negl
mov
test
sbb
pushf
and
stc
sub
jnp
or
jl
add
xchg
dec
mov
and
addb
cmp
cmp
mov
into
loopne
xorb
adc
adc
cmp
cmp
mov
dec
outsl
popf
cmp
addb
adc
cmp
cmp
pop
clc
popf
xor
or
jnp
fisubrl
push
xchg
inc
addb
adc
cmp
cmp
bnd
sub
pop
pop
pusha
lahf
fdivs
js
rcll
stc
adc
clc
xchg
mov
insb
fxch
addb
adc
cmp
cmp
addb
adc
cmp
cmp
cmp
cmp
addb
adc
cmp
cmp
in
sub
out
pop
mov
inc
jge
push
scas
jmp
and
scas
ljmp
dec
lds
adcl
and
dec
xchg
test
jl
mov
addr16
cmpsb
out
push
jp
pop
or
or
dec
pop
bound
jp
mov
les
aad
xchg
stos
sub
shll
out
sub
push
pop
inc
pop
fbstp
ret
inc
aaa
sbbl
mov
addb
cmp
cmp
mov
push
xchg
xchg
addb
adc
cmp
cmp
popa
jb
addr16
push
insl
popa
push
add
xlat
add
iret
jne
addb
adc
cmp
cmp
cmpsb
xchg
sub
adc
adc
cmp
cmp
mov
dec
in
addb
cmp
cmp
mov
mov
addb
adc
cmp
cmp
pop
dec
aaa
test
jbe
xchg
in
xchg
sub
jge
addb
adc
cmp
cmp
jns
lds
cmpsl
addb
adc
cmp
cmp
mov
imul
sub
aad
add
adcb
adc
cmp
cmp
mov
ret
lret
sbb
out
or
xor
out
lret
jp
push
push
addb
adc
cmp
cmp
dec
pop
imul
mov
xor
jae
xor
enter
addb
cmp
cmp
mov
in
addb
adc
cmp
cmp
cmp
adc
adc
cmp
cmp
mov
loope
jno
addb
cmp
cmp
mov
dec
and
lret
ret
mov
fwait
sub
aas
ficoml
push
xchg
sub
imul
adcb
adc
cmp
cmp
mov
mov
pop
inc
and
mov
sub
adc
adc
cmp
cmp
mov
cs
mov
push
pop
aad
xchg
ljmp
ret
cmc
sub
cs
inc
dec
mov
movsl
out
jae
mov
hlt
dec
lock
mov
movsl
and
addb
cmp
cmp
jl
sbb
cmp
jl
dec
mov
addb
adc
cmp
cmp
add
addb
adc
cmp
cmp
xor
cmp
adc
bound
adcb
adc
cmp
cmp
mov
test
icebp
jg
out
push
fistl
loopne
xchg
mov
mov
addb
adc
cmp
cmp
movsb
push
push
fsubs
int
flds
adc
adc
cmp
cmp
outsb
cmp
or
lret
dec
pop
mov
adc
sub
adc
xchg
pop
sub
lea
imul
adc
adc
cmp
cmp
mov
jo
out
adc
dec
mov
adc
adc
cmp
cmp
mov
cld
add
aaa
xchg
mov
addb
cmp
cmp
mov
popf
xor
adc
adc
cmp
cmp
test
enter
addr16
or
popf
dec
js
sbb
push
dec
cwtl
sub
repnz
mov
test
addb
adc
cmp
cmp
sbb
adc
adc
cmp
cmp
mov
mov
imul
addb
adc
cmp
cmp
pusha
gs
nop
fcmovb
cld
into
dec
aam
push
pop
sbb
adc
out
jmp
jno
shl
out
pop
jl
inc
fisubrs
mov
hlt
pop
xchg
jmp
shlb
shrl
and
cld
add
testl
addb
cmp
cmp
mov
adcl
out
cmp
xor
aaa
or
aas
lods
mov
ret
test
daa
push
sub
das
xchg
xor
push
mov
cmpsb
shrl
call
lcall
test
fidivl
test
dec
int
cwtl
sub
xlat
xor
addb
adc
cmp
cmp
in
push
mov
xor
inc
mov
adc
adc
cmp
cmp
lahf
addb
adc
cmp
cmp
mov
cmp
imul
dec
imulb
lds
adc
das
div
pop
mov
popf
sub
enter
test
adc
adc
cmp
cmp
xor
jns
movsl
or
pusha
mov
int3
fcmove
addb
adc
cmp
cmp
test
xchg
xor
sbb
addb
adc
cmp
cmp
dec
mov
mov
adcb
adc
cmp
cmp
mov
cmp
mov
out
inc
add
test
push
mov
adc
cli
nop
lret
rolb
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
fildl
mov
addb
cmp
cmp
mov
mov
addb
adc
cmp
cmp
in
inc
movsl
pop
inc
push
inc
inc
imul
scas
mov
pop
mov
inc
mov
adc
sahf
test
mov
addb
adc
cmp
cmp
insl
jg
popa
fs
jne
mov
or
and
adc
jecxz
xor
enter
sbb
push
lea
mov
cmp
inc
out
mov
or
lret
aaa
sub
idivb
cmp
adc
lds
mov
cli
xchg
movsl
outsb
loope
lods
ds
and
iret
in
mov
imul
shll
jp
sbb
mov
jp
addl
mov
test
cmc
addb
adc
cmp
cmp
mov
adc
mov
xchg
cld
in
sub
mov
int
imul
fldcw
mov
fsub
addb
adc
cmp
cmp
inc
gs
cmp
scas
subl
adc
fwait
addb
adc
cmp
cmp
push
in
or
hlt
jge
fwait
pop
or
push
jl
addb
adc
cmp
cmp
je
inc
enter
out
mov
addb
adc
cmp
cmp
aad
out
addb
cmp
cmp
mov
sahf
jno
dec
loope
sub
aad
and
sarl
sbb
jb
mov
mov
fimuls
cmpsl
dec
push
imul
in
lcall
adc
mov
insb
mov
inc
add
pop
fisttpll
addb
adc
cmp
cmp
cmpsl
mov
mov
ficoms
enter
cmpsl
cmc
addb
adc
cmp
cmp
and
adcb
adc
cmp
cmp
mov
ret
cmp
adc
adc
cmp
cmp
fadds
lods
fcomp
sbb
out
cltd
std
hlt
cltd
pop
ret
cmp
dec
inc
add
addb
cmp
cmp
mov
cmp
addb
adc
adc
cmp
cmp
push
out
orb
adcb
adc
cmp
cmp
mov
inc
mov
adc
adc
cmp
cmp
dec
scas
jle
lret
addl
cmp
cmp
mov
push
outsl
stc
push
ret
sbb
roll
adc
adc
cmp
cmp
leave
xor
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
ja
ret
addb
cmp
cmp
mov
testl
addb
adc
cmp
cmp
mov
pusha
lods
call
adc
adc
cmp
cmp
mov
fdivrl
sbb
xor
push
pushf
data16
loop
lea
imul
jne
dec
jnp
in
adcb
adc
adc
cmp
cmp
adc
xor
addb
adc
cmp
cmp
shlb
les
cmpsl
mov
adc
adc
cmp
cmp
mov
dec
out
xchg
and
addb
cmp
cmp
cmpsb
xchg
xacquire
ret
inc
addb
adc
cmp
cmp
enter
xor
or
and
imul
adc
adc
cmp
cmp
fs
pushf
adc
test
dec
mov
das
mov
scas
repnz
inc
dec
insb
addb
adc
cmp
cmp
mov
and
addb
cmp
cmp
mov
adc
ss
adc
mov
sbb
iret
hlt
in
sub
aam
push
or
inc
cmp
mov
fwait
decl
and
add
adc
adc
cmp
cmp
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
dec
xchg
lret
add
daa
push
or
dec
or
repz
das
lret
lahf
push
imul
jne
sti
pop
addb
adc
cmp
cmp
adc
addb
cmp
cmp
mov
inc
dec
fsubrl
ljmp
xrelease
adcb
adc
cmp
cmp
mov
adc
xchg
addb
adc
cmp
cmp
loope
addb
adc
cmp
cmp
test
insb
in
cmp
push
adcb
adc
cmp
cmp
mov
into
inc
xchg
or
sub
adc
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
and
mov
mov
mov
mov
pop
jb
sub
xor
in
jl
push
das
out
lods
les
addb
adc
cmp
cmp
testb
stos
addb
adc
cmp
cmp
cmp
pop
push
and
adc
adc
cmp
cmp
clc
out
out
cmp
ficomps
hlt
aas
lds
mov
std
out
lds
jns
addb
adc
cmp
cmp
push
cmp
into
adc
into
sbb
cmp
divb
shlb
pop
adc
cmp
in
je
rolb
addl
adc
data16
cmp
and
in
lock
xchg
ret
or
or
adc
adc
cmp
cmp
inc
addb
adc
cmp
cmp
pop
sbb
mov
lods
clc
add
call
pop
lahf
fcoms
pusha
jp
mov
sti
and
and
addb
cmp
cmp
mov
push
lcall
fiaddl
adc
adc
cmp
cmp
mov
inc
jge
loop
sbb
lcall
addb
cmp
cmp
mov
cmp
mov
fisubrl
decb
inc
loop
inc
sub
ja
les
sbb
xlat
xor
in
dec
cli
insb
imul
addb
cmp
cmp
mov
pop
and
mov
and
mov
add
jmp
xlat
int3
lret
stos
dec
imul
jo
cmp
mov
addb
cmp
cmp
mov
mov
addb
cmp
cmp
pop
sbb
test
inc
fidivrl
and
adc
es
pop
cli
cmp
in
test
mov
and
test
xor
push
jmp
addb
cmp
cmp
addb
adc
cmp
cmp
push
aam
jno
addb
cmp
cmp
mov
insb
cmp
ljmp
roll
xchg
or
popl
movsb
lret
mov
dec
stos
add
sti
and
and
pop
jle
pop
shll
addb
cmp
cmp
mov
shrl
scas
lret
test
add
pushf
popa
iret
pop
push
or
nop
sti
repz
push
push
adc
adc
cmp
cmp
mov
jg
mov
shll
jne
movsl
addb
adc
cmp
cmp
mov
cld
and
push
aam
mov
andb
adcb
adc
cmp
cmp
mov
bound
das
inc
gs
in
push
test
adcb
adc
cmp
cmp
mov
shll
adcb
adc
cmp
cmp
mov
mov
lcall
add
clc
out
ret
loop
in
pop
push
inc
xor
adcb
adc
cmp
cmp
mov
ss
outsl
fisttpll
fdiv
mov
inc
sub
or
ret
or
sub
sbb
jo
sbb
and
addb
cmp
cmp
out
dec
pop
jb
bnd
push
xor
cmp
aaa
mov
xchg
loope
aad
ljmp
add
lea
push
std
xor
addb
adc
cmp
cmp
imul
sbb
in
addb
adc
cmp
cmp
ficoms
xchg
into
dec
hlt
loope
addb
cmp
cmp
mov
imull
or
addb
adc
cmp
cmp
jne
addb
adc
cmp
cmp
aaa
aaa
les
mov
adc
adc
cmp
cmp
mov
mov
cwtl
dec
xchg
js
xchg
mov
popa
testl
adc
adc
cmp
cmp
mov
je
sbb
jo
mov
cwtl
mov
addb
cmp
cmp
mov
cmp
popa
daa
adc
mov
adc
adc
cmp
cmp
mov
insb
push
sub
stos
fwait
pop
jle
int
dec
iret
out
mov
in
movsb
add
stc
scas
and
dec
push
or
addb
adc
cmp
cmp
rorb
addb
adc
cmp
cmp
aaa
xchg
mov
mov
mov
daa
frstor
in
icebp
pusha
popf
xchg
xor
addb
cmp
cmp
sub
int3
sbb
cmpsl
sbb
dec
jmp
adc
adc
adc
cmp
cmp
mov
inc
addb
adc
cmp
cmp
data16
pop
and
popa
xchg
addb
adc
cmp
cmp
mov
stos
and
inc
and
cmpsl
lods
and
mov
lret
pop
jle
addb
cmp
cmp
mov
insb
inc
and
into
jmp
fadds
push
xchg
pusha
inc
sub
std
push
mov
cmp
push
pop
dec
jle
or
adcb
adc
cmp
cmp
mov
leave
inc
pop
mov
out
shrl
leave
mov
movl
adc
adc
cmp
cmp
imul
addb
cmp
cmp
mov
insl
push
sbb
pop
xchg
adc
adc
cmp
cmp
cmc
xor
cmpsl
mov
leave
cmp
pop
insb
inc
xchg
addb
adc
cmp
cmp
dec
lahf
xchg
push
sub
adcb
adc
cmp
cmp
mov
insl
add
mov
jg
cmp
sbb
or
mov
nop
dec
mov
push
addb
adc
cmp
cmp
push
xchg
pop
ret
fsubr
adc
addb
cmp
cmp
mov
into
in
sbb
jecxz
cmp
aad
mov
lcall
xchg
std
lea
scas
pusha
nop
and
sub
adc
adc
cmp
cmp
dec
and
cmp
into
mov
sub
decl
test
test
cmp
addb
cmp
cmp
nop
mov
call
xor
jno
sub
and
addb
cmp
cmp
mov
cltd
addb
adc
cmp
cmp
addb
adc
cmp
cmp
add
fisubrl
pop
cli
les
pop
xchg
jle
mov
addb
cmp
cmp
mov
dec
and
movsl
mov
es
adc
addb
cmp
cmp
pop
test
addb
cmp
cmp
sahf
ret
xchg
push
rolb
adc
cmp
cmp
mov
push
ficompl
lahf
mov
pop
pushf
daa
jns
das
jnp
mov
bound
popa
mov
adcb
adc
cmp
cmp
mov
or
jge
inc
rorl
pop
ja
rcll
xor
or
adc
pop
leave
cmp
push
sbb
cmpsl
sbb
adc
adc
cmp
cmp
int3
push
test
mov
movsl
in
inc
lea
jge
loop
addb
cmp
cmp
mov
or
mov
test
fwait
sbb
mov
jns
frstor
stos
out
or
push
add
outsb
addb
adc
cmp
cmp
orl
mov
cld
xchg
jmp
aaa
mov
pop
loope
push
xor
fsubr
sbb
movsb
js
dec
dec
jmp
fistpll
or
mov
push
sbb
sub
nop
mov
addr16
inc
je
inc
or
cmc
stos
push
mov
gs
adcl
mov
push
fldt
cmc
lea
or
adc
imull
jno
xchg
cltd
mov
sbb
cmp
jae
inc
test
or
mov
neg
lods
data16
hlt
and
test
sub
fdivrl
sub
addb
adc
cmp
cmp
test
cld
lcall
repnz
movsl
lret
movsb
out
fcomip
fs
repnz
rcrb
mov
cmp
sub
loop
push
out
mov
or
addb
adc
cmp
cmp
jge
push
movsb
fadds
pop
jbe
sbb
je
push
lods
and
or
cwtl
add
popf
cmp
pop
addb
adc
cmp
cmp
sub
push
mov
sahf
inc
fidivrs
rcrl
xor
dec
out
adc
sbb
dec
inc
add
add
ficomps
adc
jb
dec
or
dec
xor
dec
push
jbe
loop
mov
scas
pop
les
cld
aas
vpand
xchg
call
xchg
push
fildl
or
pop
insl
std
ds
pop
in
fcomps
enter
adc
adc
adc
cmp
cmp
push
outsl
dec
shl
mov
add
rorb
aas
pop
jmp
adcb
addb
adc
cmp
cmp
shll
adc
adc
cmp
cmp
mov
loop
addb
cmp
cmp
mov
test
sahf
jp
movsb
cltd
dec
pop
and
iret
jge
ds
mov
movsb
shll
addb
cmp
cmp
cmp
mov
sbb
addb
cmp
cmp
mov
sbb
int3
add
add
sbb
mov
add
jo
mov
xchg
call
cmp
in
push
cmp
lea
push
rorb
or
dec
fiaddl
addb
adc
cmp
cmp
rolb
leave
addr16
addb
adc
cmp
cmp
andl
xchg
cmp
test
sbb
call
inc
cwtl
jno
dec
push
or
nop
jbe
inc
add
xchg
movsb
adc
dec
ds
and
jbe
adc
sub
loop
jb
test
lock
or
push
test
lret
movsl
js
mov
loope
addb
cmp
cmp
mov
ret
sub
push
push
ret
repnz
pop
mov
fiadds
push
mov
outsb
xor
adc
adc
cmp
cmp
addb
adc
cmp
cmp
stos
pop
lea
movsl
dec
addb
adc
cmp
cmp
mov
shlb
mov
fildll
pop
sub
test
adc
ss
in
push
jno
cwtl
addl
adc
cmp
cmp
mov
xlat
shlb
clc
dec
inc
sti
in
cmp
sub
mov
xlat
mov
adc
adc
cmp
cmp
add
or
pop
xchg
rorl
addb
cmp
cmp
mov
addl
cmc
pop
out
notl
mov
addb
cmp
cmp
mov
adc
ja
lock
jb
adc
adc
cmp
cmp
jp
lret
mov
mov
and
cli
out
jne
and
mov
pop
xor
adc
adc
cmp
cmp
sbb
mov
in
jmp
adc
adcb
adc
cmp
cmp
mov
and
addb
adc
cmp
cmp
dec
insl
addb
adc
cmp
cmp
addr16
sbb
dec
popf
scas
sbb
mov
pop
dec
inc
pop
xchg
mov
stos
shll
mov
mov
adc
adc
cmp
cmp
mov
xor
or
push
popf
xor
cmp
pop
adc
mov
push
lods
stc
xchg
mov
rcr
cmovno
into
adc
andl
mov
mov
addb
cmp
cmp
mov
addb
cmp
cmp
mov
push
mov
cmp
add
jae
inc
add
and
mov
test
addb
cmp
cmp
mov
icebp
rcr
and
andl
adcb
adc
cmp
cmp
mov
int
pusha
test
dec
call
push
js
addb
adc
cmp
cmp
mov
mov
lret
dec
sarl
enter
fmulp
jmp
insl
dec
xor
and
mov
xor
adcb
adc
cmp
cmp
mov
sub
dec
lods
add
and
mov
xor
outsb
inc
in
mov
or
sti
addb
adc
cmp
cmp
stos
subb
xor
mov
xlat
int3
jbe
rcr
pop
addb
adc
cmp
cmp
jno
pop
inc
mov
or
cmc
aas
addb
adc
cmp
cmp
aas
leave
ret
hlt
and
dec
shlb
addr16
addb
cmp
cmp
mov
dec
cmc
enter
cwtl
adc
btc
aaa
bound
clc
mov
mov
outsl
xlat
cmp
cmp
adc
lret
ljmp
mov
ljmp
fwait
dec
movb
andb
addb
cmp
cmp
mov
jp
pushf
pop
and
shlb
sar
inc
out
fcmovnu
aaa
sub
jo
addb
cmp
cmp
mov
rep
jae
addb
cmp
cmp
mov
jb
addb
cmp
cmp
mov
mov
call
addb
cmp
cmp
mov
push
sbb
and
jae
addb
cmp
cmp
mov
adc
cmp
xor
iret
outsb
xor
lahf
mov
pushf
pop
or
xchg
sbbl
jge
sbb
adc
call
addb
adc
cmp
cmp
clc
outsb
mov
fs
fldenv
addb
adc
cmp
cmp
pop
mov
movsb
int3
dec
pop
xor
test
out
addb
cmp
cmp
mov
out
cmp
and
test
fldenv
sbb
xchg
lods
mov
push
test
data16
xor
xor
addb
adc
cmp
cmp
xor
das
rorb
int3
xor
iret
roll
data16
or
pop
ds
movsb
addb
adc
cmp
cmp
mov
xlat
pop
rcrb
test
pop
pushf
mov
or
addb
adc
cmp
cmp
sub
fs
cmp
addl
dec
mov
inc
or
adc
addb
cmp
cmp
mov
aad
xor
stos
jns
push
mov
aad
mov
dec
insl
addb
adc
cmp
cmp
pop
out
xchg
and
adc
sbb
addb
adc
cmp
cmp
or
loop
addb
cmp
cmp
mov
sbb
adc
adc
cmp
cmp
mov
or
fistl
push
mov
not
in
pop
push
pop
sbb
jecxz
jl
push
cli
jl
xchg
jmp
imul
outsb
xor
lods
or
addl
cmp
cmp
stc
pop
cmc
out
out
in
mov
pop
xlat
int
addr16
addr16
mov
addb
cmp
cmp
and
adc
adc
cmp
cmp
mov
push
or
mov
mov
lret
cmp
lock
adc
cmp
cmp
mov
fucomp
dec
inc
adc
mov
xchg
dec
mov
adc
adc
cmp
cmp
mov
push
mov
mov
xchg
mov
adcb
adc
cmp
cmp
mov
jmp
and
lods
xor
add
andb
clc
push
push
lcall
jmp
repz
addb
cmp
cmp
mov
mov
xor
cmp
rcll
lret
insb
cld
addb
adc
cmp
cmp
mov
outsl
pop
addb
adc
cmp
cmp
or
adcb
adc
cmp
cmp
mov
lahf
jge
push
ret
or
mov
mov
xchg
orb
testl
cmp
cmp
mov
int3
loope
int
dec
imul
addb
adc
cmp
cmp
xchg
insb
lahf
nop
sbb
xor
push
mov
mov
cmpsb
jecxz
mov
adc
adc
cmp
cmp
addb
adc
cmp
cmp
pop
shrb
inc
push
or
adc
adc
cmp
cmp
mov
mov
shlb
arpl
cmp
add
xchg
fsub
dec
fnstsw
addb
or
cmp
ret
xor
adc
ds
push
outsb
mov
rcrw
dec
loop
push
ljmp
pop
por
dec
inc
in
dec
sub
shl
push
dec
sbb
mov
cmp
sub
shlb
add
shrl
sub
insb
adc
imull
frstor
aam
aam
mov
jl
dec
aam
hlt
sbb
mov
out
jg
mov
lcall
addb
cmp
cmp
mov
pop
addr16
xchg
xor
adcb
adc
cmp
cmp
mov
fnstsw
ret
outsl
or
and
and
adc
pop
mov
xlat
mov
mov
xchg
jae
insl
fmuls
inc
jecxz
ret
aad
xchg
pop
addb
adc
cmp
cmp
sbb
or
pop
cld
mov
jg
repnz
cmc
insb
roll
test
arpl
mov
jp
aam
fcompl
pop
lcall
addb
cmp
cmp
push
adc
addb
adc
cmp
cmp
adc
and
mov
sub
addb
adc
cmp
cmp
stos
mov
fldcw
cs
shll
cli
ljmp
adcb
adc
cmp
cmp
mov
incl
addb
adc
cmp
cmp
icebp
sub
daa
in
testl
mov
pop
stos
addb
adc
cmp
cmp
sub
xor
jecxz
mov
adc
adc
cmp
cmp
mov
sarl
inc
inc
ret
xchg
sub
mov
pop
push
or
out
mov
pop
idiv
or
mov
mov
inc
mov
addb
cmp
cmp
mov
jmp
addb
cmp
cmp
je
lods
mov
jb
mov
popf
sbb
bound
pop
in
fwait
enter
addb
cmp
cmp
jmp
addb
cmp
cmp
mov
adc
dec
out
cmp
addb
adc
cmp
cmp
push
insl
pop
cmpl
or
stc
or
jno
sbb
je
mov
addb
cmp
cmp
sbb
mov
popa
cmc
jae
sub
xchg
fisubrl
ss
mov
lock
jb
sbb
iret
stc
mov
cmp
adcb
adc
cmp
cmp
mov
lcall
adcb
adc
cmp
cmp
mov
jp
pop
add
addb
cmp
cmp
clc
add
incb
adc
adc
cmp
cmp
pop
pop
in
out
mov
lods
pop
jg
ficoml
jg
lret
movsb
push
mov
pop
aad
roll
pop
pop
scas
testl
addb
cmp
cmp
inc
adc
or
aas
push
fcomps
add
insl
rcrb
frstor
sbb
cltd
rcrl
aad
ret
dec
pop
subl
dec
mov
std
or
je
in
and
mov
pop
and
andl
sbb
xchg
divb
sbbl
dec
mov
mov
xor
addb
adc
cmp
cmp
and
cli
fildl
addb
cmp
cmp
mov
mov
pop
inc
or
xor
outsl
and
ljmp
stc
dec
push
jl
into
cld
int
ja
fs
addb
adc
cmp
cmp
jns
sbb
xor
addb
adc
cmp
cmp
xchg
test
cmp
adc
icebp
fsubl
ret
dec
pop
addb
adc
cmp
cmp
sbb
adc
adc
cmp
cmp
inc
push
ret
insl
mov
jg
jmp
push
fiaddl
adc
adc
cmp
cmp
mov
dec
jmp
clc
lds
push
ret
sbb
je
popf
fiadds
adc
adc
cmp
cmp
inc
shlb
lret
push
lahf
push
addb
adc
cmp
cmp
mov
fidivrs
ficoml
ds
bnd
sahf
push
cmp
daa
jmp
test
cmp
xor
mov
scas
jb
es
out
sub
inc
cmp
add
adc
adc
cmp
cmp
adc
cld
add
jb
jmp
adc
adc
cmp
cmp
mov
stc
or
mov
adcb
adc
cmp
cmp
mov
jg
xor
xchg
fisubs
hlt
xor
cmp
sub
cmp
lret
adc
mov
loope
addb
adc
cmp
cmp
cmp
jg
inc
dec
fdivl
and
sarl
dec
cmpl
dec
imul
add
movsl
out
mov
cmpsb
addb
adc
cmp
cmp
cmp
inc
test
das
mov
aam
sub
lahf
and
mov
lret
fidivrl
or
pop
mov
rcll
addb
cmp
cmp
mov
and
push
dec
neg
adc
sbb
jno
add
dec
cmp
test
into
lcall
or
out
movb
or
incb
adc
adc
cmp
cmp
sahf
cmp
int
dec
xor
outsb
aam
lds
sbb
iret
dec
adc
adc
adc
cmp
cmp
mov
out
addb
adc
cmp
cmp
or
sbb
adc
in
fsubrl
addb
adc
cmp
cmp
mov
addb
cmp
cmp
mov
sti
pushw
in
xor
roll
adc
cmp
cmp
mov
mov
shll
mov
jp
addb
adc
cmp
cmp
dec
dec
mov
push
ret
iret
jnp
jns
mov
adcb
xor
mov
adc
adc
cmp
cmp
mov
push
mov
cmpb
subl
cmc
push
sub
and
xchg
ljmp
pop
in
insb
sarb
sub
addb
cmp
cmp
jmp
sub
jmp
fistl
rcrl
sbb
sub
xchg
pop
fcomps
addb
cmp
cmp
dec
cmp
adc
addb
cmp
cmp
inc
inc
push
inc
ja
jnp
mov
call
stos
lea
jb
push
inc
mov
scas
loope
cli
popa
outsl
out
clc
gs
movsb
xorl
out
jb
adc
adc
cmp
cmp
aaa
pushf
sub
std
fldenv
cwtl
inc
iret
addb
adc
cmp
cmp
cmp
xor
mov
jo
imul
addb
cmp
cmp
push
les
ja
nop
mov
std
loope
push
mov
addb
cmp
cmp
mov
mov
enter
or
push
mov
addb
cmp
cmp
mov
mov
loop
loope
addb
cmp
cmp
mov
adc
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
daa
ret
movsb
adc
addb
cmp
cmp
mov
push
xor
jbe
testl
test
addb
adc
cmp
cmp
fistpll
sub
push
outsl
sarl
inc
xorl
ret
addb
adc
cmp
cmp
sbb
pushf
and
es
pusha
lods
add
lock
mov
jecxz
addb
adc
cmp
cmp
mov
lods
jae
aaa
or
rcrb
sahf
push
push
push
jle
fnstenv
cmp
addb
cmp
cmp
mov
imul
sub
nop
adc
xor
addb
cmp
cmp
mov
cmp
jne
jb
insb
dec
std
push
addb
adc
cmp
cmp
ret
or
leave
push
imul
sub
push
lahf
and
and
fiadds
addb
adc
cmp
cmp
test
lods
addb
adc
cmp
cmp
and
adc
jo
mov
xchg
mov
sub
adcb
adc
cmp
cmp
mov
jecxz
out
shll
sub
out
xor
cltd
or
cs
adc
or
inc
push
inc
outsb
add
addb
cmp
cmp
lahf
addb
adc
cmp
cmp
cmp
jo
iret
xchg
dec
call
fisubrl
pop
mov
jl
cmp
ret
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
inc
mov
or
adc
adc
cmp
cmp
mov
int3
and
pop
xchg
cmc
cld
dec
fstps
mov
pusha
mov
test
inc
dec
and
addb
cmp
cmp
lods
mov
jb
adc
adc
cmp
cmp
mov
sarb
inc
mov
adc
addb
adc
cmp
cmp
adc
and
addb
adc
cmp
cmp
xor
xor
adcb
adc
cmp
cmp
mov
movsl
scas
push
xchg
mov
adcb
adc
cmp
cmp
mov
fidivrs
pop
les
and
call
pop
inc
in
sub
sti
aas
push
sub
shrl
add
pop
loopne
fsubl
sub
dec
or
mov
out
addb
adc
cmp
cmp
scas
mov
mov
movsb
cltd
enter
shlb
cmp
sbb
add
jl
cltd
outsl
movsb
pop
fidivl
xchg
mov
mov
addb
cmp
cmp
mov
sub
std
jmp
cmpsb
mov
cmp
jge
push
aas
imulb
mov
dec
or
test
adc
stc
sbb
faddl
adc
adc
cmp
cmp
xchg
cli
sub
fadds
adc
adc
cmp
cmp
addb
adc
cmp
cmp
fwait
jno
jns
sbb
out
mov
mov
inc
pop
in
mov
add
and
in
mov
or
adcb
adc
cmp
cmp
mov
aad
adc
fs
jo
popf
mov
addb
adc
cmp
cmp
push
cs
and
aas
enter
mov
mov
pop
add
addb
cmp
cmp
mov
imulb
push
pop
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
xor
jae
addb
cmp
cmp
mov
jb
sti
test
insb
ret
cmp
dec
mov
cmp
pop
pop
mov
inc
addb
adc
cmp
cmp
fildl
inc
ret
and
cmp
xlat
jae
aas
je
addb
cmp
cmp
mov
mov
mov
insb
jns
ffreep
lcall
rclb
push
addb
adc
cmp
cmp
xor
xor
or
mov
adc
jne
jmp
pop
mov
sbb
pop
movl
adc
cmp
cmp
and
movb
lods
mov
shrl
pop
cmpb
movsl
cmp
pop
repz
addb
adc
cmp
cmp
pop
icebp
scas
cmpsb
das
push
roll
les
or
sub
cmp
xchg
mov
out
jmp
pusha
cld
xchg
fbld
jge
sbb
push
jecxz
iret
inc
hlt
sub
cmp
pushf
fs
dec
dec
xor
inc
pop
ret
addb
cmp
cmp
inc
pop
sti
jle
mov
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
cwtl
xchg
xchg
mov
sbb
push
loope
rcr
push
pop
mov
ret
mov
ja
je
sbb
ljmp
adc
adc
cmp
cmp
mov
adc
movsb
cmp
mov
in
mov
es
and
xchg
mov
xchg
int
xor
ja
js
adc
adc
cmp
cmp
mov
pop
inc
cmp
pop
mov
aas
lods
mov
push
pop
dec
fimull
mov
les
es
mov
add
inc
test
dec
xchg
push
jno
pop
fstpt
xchg
in
cmp
xchg
scas
mov
idiv
fcomip
sub
mov
or
pop
into
lds
adc
adc
cmp
cmp
xchg
shr
addb
adc
cmp
cmp
rorl
out
xchg
bound
pop
pop
add
sub
arpl
imul
lods
in
in
hlt
in
add
movb
xor
pushf
add
insb
sbb
int3
inc
addb
adc
cmp
cmp
lret
inc
dec
adc
arpl
push
dec
jge
pop
xchg
das
mov
ds
test
sti
cltd
or
jbe
jb
mov
shl
sarl
sub
inc
or
aad
xlat
xchg
insl
pop
addb
adc
cmp
cmp
jl
dec
out
stos
xor
mov
js
movsl
addb
test
pop
stc
add
in
pop
lea
andb
popa
xor
jnp
xchg
int
orl
mov
mov
cmc
fsubrs
cmc
xchg
pop
cmc
mov
inc
sbb
outsb
mov
jnp
addb
adc
cmp
cmp
add
addb
cmp
cmp
mov
arpl
push
sub
dec
adc
pushf
and
xor
iret
push
loopne
or
adc
push
cmpsl
loop
fwait
repz
sbb
mov
cltd
adc
ficoml
stos
and
mov
repnz
popf
jb
out
addb
adc
cmp
cmp
add
filds
cmp
std
fisttpl
pusha
jo
popf
and
sbb
or
add
push
test
and
addb
cmp
cmp
jbe
sub
bound
push
jg
pop
scas
fistl
aaa
lods
imul
jg
xor
and
mov
pushf
lcall
push
fistpll
push
add
jbe
push
sub
js
mulps
jl
scas
pop
inc
in
dec
xchg
push
call
jnp
jle
arpl
adc
adc
cmp
cmp
sahf
inc
shrl
pusha
xchg
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
sbb
xchg
rorb
adcb
adc
cmp
cmp
mov
loope
les
clc
add
addb
cmp
cmp
mov
sbb
daa
cmp
cmp
clc
push
test
ds
adcl
adc
shlb
cmp
int3
fdivr
fistps
ja
cli
or
je
mov
addb
cmp
cmp
add
dec
xchg
mov
arpl
addb
cmp
cmp
mov
and
lret
mov
xor
hlt
addb
adc
cmp
cmp
ljmp
adcb
adc
cmp
cmp
mov
mov
jo
addb
adc
cmp
cmp
add
pop
in
mov
sbb
adc
adc
cmp
cmp
fwait
jne
out
push
jmp
imul
je
push
cltd
add
pop
nop
xchg
sub
aaa
scas
inc
insl
sbb
adcb
adc
cmp
cmp
mov
sbb
adcb
adc
cmp
cmp
mov
and
or
xchg
adc
adc
xchg
cltd
test
outsl
pop
xchg
mov
push
sub
pop
scas
addb
adc
cmp
cmp
mov
insb
js
fs
popa
loopne
dec
pop
xchg
addb
adc
cmp
cmp
mov
sbb
nop
addb
adc
cmp
cmp
and
insl
hlt
in
xchg
popf
fisubrl
mov
push
jge
hlt
mov
mov
in
fisttpl
loop
xchg
inc
mov
jge
movsl
xor
addb
cmp
cmp
and
aaa
ja
addb
adc
cmp
cmp
xor
cmp
sti
imulb
notb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xor
lret
cmp
cmpps
pop
stc
addb
adc
cmp
cmp
adc
pop
mov
loope
popf
gs
or
adc
adc
cmp
cmp
clc
sahf
ficoml
sarb
sti
dec
orl
cli
clc
iret
cld
mov
push
mov
sub
cli
or
mov
gs
idivl
lcall
repz
es
hlt
shl
or
xchg
mov
test
jb
adc
adc
cmp
cmp
or
or
mov
adc
das
inc
jp
jns
jecxz
ds
test
stos
lahf
or
mov
pop
loop
ret
addb
cmp
cmp
add
jl
xor
adc
mov
pop
add
or
or
addb
cmp
cmp
mov
sub
test
popa
pusha
js
cs
imul
ljmp
mov
in
andl
out
loop
insl
jnp
jns
in
hlt
js
divl
addb
adc
cmp
cmp
pushf
fbld
xor
add
imul
movsl
rcl
repnz
addb
adc
cmp
cmp
loope
or
stc
or
lahf
pop
scas
sahf
inc
decl
adc
cld
addb
adc
cmp
cmp
jg
and
add
sub
cmp
add
daa
lahf
sub
std
dec
mov
addb
adc
cmp
cmp
xlat
cltd
push
movsl
dec
stos
addb
adc
cmp
cmp
cld
fidivrs
out
push
aas
icebp
roll
inc
subl
inc
das
lret
push
es
fisubl
jmp
pop
and
mov
mov
or
icebp
ret
addb
cmp
cmp
jns
stc
push
aaa
and
sbb
rsqrtps
fsubrs
adcb
adc
cmp
cmp
mov
adc
or
dec
and
addb
cmp
cmp
cltd
xchg
fdivrs
lret
dec
call
add
add
adc
xchg
inc
mov
or
cmpsb
addb
adc
cmp
cmp
lods
sahf
in
jno
je
das
out
xchg
into
sub
push
addb
adc
cmp
cmp
adc
mov
sbb
shrb
insl
dec
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
stos
inc
cmp
xchg
or
mov
pushf
es
sti
push
cs
pop
xor
movsb
or
inc
in
mov
rorl
push
adc
adc
adc
cmp
cmp
cmp
xor
and
mov
rcl
cmp
mov
push
ja
jge
cmpsb
mov
sbb
insb
and
hlt
lds
inc
cmp
das
jbe
inc
or
popa
icebp
or
popl
ds
addr16
and
mov
out
rcll
pop
mov
xor
addb
adc
cmp
cmp
sbb
rcrl
mov
or
mov
adc
add
adc
sbb
les
ret
inc
int
jnp
addr16
and
jae
mov
addb
adc
cmp
cmp
fadd
sbb
cs
adcb
adc
adc
cmp
cmp
mov
popf
xchg
push
mov
dec
push
push
fsubs
dec
ret
mov
mov
icebp
adc
sub
sahf
jle
jmp
mov
add
jge
xchg
cld
inc
not
cmp
xor
inc
subl
ds
ret
movsl
push
mov
stos
subb
jno
fdiv
mov
cwtl
jnp
fbstp
dec
pop
icebp
jle
aaa
xor
nop
adc
rolb
imul
adc
adc
cmp
cmp
scas
icebp
sahf
mov
mov
fstpt
jle
dec
pop
add
or
imul
cld
test
push
ret
in
and
mov
addb
adc
cmp
cmp
arpl
cmp
sahf
insb
iret
pop
inc
and
ret
xor
adc
addb
cmp
cmp
mov
rep
fiaddl
pop
mov
pusha
mov
das
sbb
fnstsw
cmpsb
adc
xor
adc
adc
cmp
cmp
mov
and
push
pop
adc
cmp
jo
xor
push
frstor
notb
sub
addb
cmp
cmp
mov
xchg
mov
push
push
adc
lret
addb
adc
cmp
cmp
or
fwait
scas
test
loope
sbb
xor
jo
jle
adc
hlt
jp
push
out
sahf
or
adc
adc
cmp
cmp
lods
ljmp
dec
mov
mov
arpl
or
fildll
sub
outsl
idivl
rorb
filds
adc
adc
cmp
cmp
repnz
mov
push
out
and
and
mov
addb
cmp
cmp
mov
jp
mov
je
mov
add
ds
in
adc
pop
je
das
pop
adc
xchg
cmp
sub
addb
adc
cmp
cmp
and
cmp
sub
inc
addb
adc
cmp
cmp
cmp
and
mov
addb
cmp
cmp
fsubrs
addb
adc
cmp
cmp
addb
adc
cmp
cmp
push
add
insb
pop
es
sti
inc
daa
sbb
or
addl
out
or
jne
sbb
out
addb
adc
cmp
cmp
sub
outsl
xor
addb
adc
adc
cmp
cmp
int
dec
dec
add
mov
loop
call
jp
fs
sbb
lcall
adc
adc
cmp
cmp
mov
add
in
inc
jo
cmp
pop
mov
addb
adc
cmp
cmp
cmp
lea
loop
jns
aaa
jmp
pusha
repnz
adc
adc
cmp
cmp
mov
jl
clc
mov
inc
inc
xor
testb
adc
cmp
cmp
mov
add
addb
cmp
cmp
pusha
adc
test
xchg
and
adc
adc
cmp
cmp
mov
bound
cwtl
pop
sbb
scas
rcl
lcall
addb
cmp
cmp
mov
mov
addb
cmp
cmp
scas
stc
das
xor
adc
adc
cmp
cmp
mov
andb
addb
cmp
cmp
lods
cmp
addb
adc
cmp
cmp
mov
pop
xchg
sub
inc
cmp
pop
pushf
cmp
xchg
enter
sbb
movsb
mov
mov
or
adcb
adc
cmp
cmp
mov
mov
orb
dec
jno
faddl
imul
daa
bnd
dec
out
icebp
pop
xchg
dec
shl
movsb
add
mov
sbb
jo
or
dec
jmp
xor
mov
mov
jge
add
adc
scas
push
inc
dec
adc
or
addb
cmp
cmp
mov
pop
xor
dec
sbb
mov
xor
add
outsb
addb
adc
cmp
cmp
pusha
mov
lods
fwait
mov
addb
adc
cmp
cmp
and
stc
out
sbb
hlt
xchg
and
icebp
xor
nop
cltd
addb
adc
cmp
cmp
sub
push
mov
addb
adc
cmp
cmp
lea
mov
jmp
icebp
add
xchg
jns
addb
adc
cmp
cmp
sbb
mov
addb
cmp
cmp
mov
push
aas
or
popa
int
movsb
sarb
push
xor
in
xor
jno,pn
jnp
addb
cmp
cmp
mov
mov
lods
jge
cmpl
jmp
or
es
je
sarb
insb
addb
adc
cmp
cmp
pop
cltd
repz
lret
adc
aam
cmp
addps
into
dec
lds
mov
adcb
adc
cmp
cmp
mov
cld
push
cmc
cmp
aad
aas
push
fists
adc
in
push
mov
fsubp
arpl
out
scas
xchg
aam
mov
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
xchg
cmpsb
mov
add
addb
cmp
cmp
sti
inc
pop
push
push
push
mov
andb
and
jp
jecxz
sarb
adc
mov
leave
or
adc
adc
cmp
cmp
dec
addb
adc
cmp
cmp
push
mov
and
addb
cmp
cmp
mov
cmc
push
fcmovb
dec
jnp
inc
jle
jns
sbb
addb
cmp
cmp
mov
notl
call
lea
jb
push
add
adc
fwait
xor
loopne
ret
dec
mov
jbe
rorb
cmp
stc
inc
cs
out
and
xchg
xlat
jnp
addb
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
push
xchg
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
add
lea
divb
inc
inc
addb
adc
cmp
cmp
xlat
andb
sub
xchg
stos
mov
xor
push
lret
jno
mov
pusha
pop
sub
pop
sti
push
addb
adc
cmp
cmp
das
inc
mov
sti
lret
dec
xchg
push
iret
push
fst
in
shr
dec
sbb
dec
pop
std
sbb
or
push
jecxz
xchg
add
shll
sbb
cmp
and
push
xchg
addb
adc
cmp
cmp
adc
mov
cmp
test
mov
push
pop
sbb
sub
lret
stc
int
in
addb
adc
cmp
cmp
neg
push
cli
inc
dec
addr16
enter
push
pop
xor
jp
push
lret
adc
sbb
pop
int
aad
fldl
adc
adc
cmp
cmp
enter
jecxz
shll
jae
mov
in
clc
addb
adc
cmp
cmp
and
repnz
shl
sub
sub
and
cs
pusha
ds
pop
push
xor
pop
xchg
rcrl
addb
adc
cmp
cmp
jge
aaa
cltd
call
adcb
adc
cmp
cmp
mov
int
jno
mov
addb
adc
cmp
cmp
dec
and
shrl
adc
inc
or
addb
adc
cmp
cmp
pop
mov
fs
inc
sbb
scas
mov
add
add
jnp
scas
clc
sar
mov
jno
scas
sbb
and
stc
push
sub
scas
inc
add
xchg
sbb
xchg
in
jnp
sub
test
dec
push
lcall
inc
addr16
rolb
andl
jp
lods
ss
mov
fs
vandnps
mov
mov
repnz
rcrb
insb
sbb
addb
cmp
cmp
mov
addb
adc
cmp
cmp
aas
add
sub
mov
add
stos
dec
insl
push
mov
rcr
adc
sti
stos
mov
sbb
add
mov
push
cmpb
imul
mov
sub
rcl
add
addb
cmp
cmp
mov
movsl
pop
andb
addb
cmp
cmp
inc
cmpsb
mov
push
dec
cmp
cmp
sbbl
imul
inc
sbb
sbb
es
jmp
mov
cmpsb
loop
add
xor
or
addb
cmp
cmp
mov
addb
adc
cmp
cmp
ss
lds
xor
xlat
cmpsl
mov
in
inc
jne
push
ljmp
add
pop
sahf
or
enter
ja
sbb
sahf
pop
clc
adc
imulb
xchg
and
inc
repz
jne
mov
je
inc
xor
clc
mov
test
adc
adc
cmp
cmp
mov
cmpsl
jg
jge,pn
jns
jp
addb
adc
cmp
cmp
or
sbb
xor
adc
adc
cmp
cmp
mov
test
out
sub
xchg
or
aas
sti
arpl
jae
xor
movsl
in
pop
add
xor
sub
addb
cmp
cmp
mov
add
out
addb
cmp
cmp
mov
pop
pop
dec
inc
out
insl
adc
jae
lret
addb
cmp
cmp
mov
sbbb
addb
cmp
cmp
or
adc
adc
cmp
cmp
mov
jae
fidivs
xchg
mov
sub
jl,pn
sti
shrl
aas
sub
test
addb
cmp
cmp
mov
or
cmc
mov
stos
int3
push
add
xchg
lock
insb
addb
adc
cmp
cmp
out
ss
popf
out
jl
mov
addb
adc
cmp
cmp
or
stc
int
dec
scas
jae
addb
adc
cmp
cmp
mov
cwtl
addb
adc
cmp
cmp
movsl
and
pop
test
out
pop
repz
adc
cmp
cmp
mov
aam
xchg
mov
and
addb
cmp
cmp
mov
xchg
jo
sub
addb
cmp
cmp
mov
sbb
mov
aas
pusha
xchg
addb
adc
cmp
cmp
lds
inc
data16
addb
cmp
cmp
mov
into
xchg
xchg
add
push
addb
adc
cmp
cmp
cmp
bound
bound
xchg
ds
adc
addb
adc
cmp
cmp
outsb
hlt
in
addb
adc
cmp
cmp
gs
sarb
add
pushf
push
inc
call
mov
jg
sub
rolb
adc
adc
cmp
cmp
xorl
push
cmpsb
push
inc
shll
lret
addb
cmp
cmp
leave
fldenv
pop
cmp
push
aaa
inc
xor
pusha
dec
sbb
push
mov
stos
and
pop
out
out
movsl
rcrb
cltd
jg
mov
jo
mov
mov
cmpsb
cmc
addb
adc
cmp
cmp
push
dec
popa
into
pop
das
cmp
fs
loope
cmp
push
adc
dec
xor
adc
adc
cmp
cmp
sbb
aaa
cmp
mov
addb
adc
cmp
cmp
cmp
or
movsb
dec
lret
popa
fsubrp
repnz
or
cmp
addb
adc
cmp
cmp
dec
add
addb
adc
cmp
cmp
daa
cld
pop
and
in
xchg
push
mov
pop
add
addb
adc
cmp
cmp
cmp
ficomps
push
out
test
mov
cmp
cwtl
mov
outsl
es
addb
adc
cmp
cmp
movsl
sbb
popf
dec
xchg
orl
pop
mov
lahf
adc
mov
dec
dec
test
mov
adc
adc
cmp
cmp
mov
leave
sbb
or
enter
insb
sbb
jne
xchg
movsb
loop
inc
mov
push
mov
mov
xchg
movsb
and
stc
push
loop
cmpsb
jae
jle
add
ret
inc
sbb
mov
inc
push
out
leave
movl
cmp
cmp
aaa
cmpsl
mov
adc
adc
cmp
cmp
mov
push
sub
lcall
mov
pushf
cmp
cld
push
stos
cmpb
dec
cltd
into
aam
jb
push
addb
adc
cmp
cmp
lods
mov
inc
enter
loope
int
ret
sub
ficompl
popf
fimuls
cmp
mov
sbb
or
addb
cmp
cmp
mov
addb
cmp
cmp
mov
repnz
aam
and
push
push
sbb
jbe
add
addb
cmp
cmp
jno
addb
cmp
cmp
mov
mov
mov
and
inc
fistpll
cs
fildl
data16
jle
movsb
addb
adc
cmp
cmp
jae
or
pop
xor
mov
adc
adc
cmp
cmp
mov
psrld
and
cmp
xchg
or
int
sub
jg
in
push
popa
pop
jne
jl
inc
jmp
addb
cmp
cmp
sahf
mov
jecxz
cmp
clc
or
addb
cmp
cmp
mov
into
andb
fisubl
add
adcb
adc
cmp
cmp
mov
xchg
cltd
lods
or
or
jmp
mov
addb
cmp
cmp
mov
jle
lock
xchg
cmc
or
xlat
or
add
xor
push
and
add
inc
add
mov
sbb
push
adc
loopne
jnp
inc
jmp
adc
adc
cmp
cmp
mov
push
insb
pop
lods
push
mov
sti
mov
cmc
in
push
fisttpl
xchg
push
sbb
ss
jbe
movsb
aaa
dec
dec
xor
dec
mov
pop
rolb
and
cmp
push
into
adc
mov
push
adc
lock
add
addb
adc
cmp
cmp
inc
ucomiss
xorl
lea
sbb
adc
adc
cmp
cmp
popa
fwait
out
cld
pop
push
adc
loop
pop
lret
lret
mov
sbb
popf
and
push
aas
xor
das
repz
mov
test
jae
push
lds
cmpsl
adc
and
or
arpl
stc
ja
adc
addb
adc
cmp
cmp
xchg
out
das
or
mov
icebp
fsubs
push
sbb
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
loopne
negb
lods
je
sbb
adc
adc
cmp
cmp
mov
sbb
sbb
out
test
arpl
fst
xchg
or
addb
adc
cmp
cmp
jae
test
loop
adcl
repnz
add
push
imul
mov
movb
adc
cmp
cmp
mov
fmull
xor
add
fsubr
mov
loopne
test
xchg
sbb
push
mov
push
cmp
addb
adc
cmp
cmp
adc
addb
adc
cmp
cmp
sbb
addb
adc
cmp
cmp
imul
adc
cmp
cmp
mov
addb
adc
cmp
cmp
sub
dec
jnp
fidivrs
adc
adc
cmp
cmp
mov
lcall
sbb
ja
add
ja
jae
addr16
leave
sbb
gs
fcompl
aam
push
sbb
push
movsb
jp
iret
in
or
pop
mov
mov
fildl
jno
xchg
addr16
bound
inc
mov
addb
adc
cmp
cmp
or
adc
adc
cmp
cmp
in
push
xchg
push
mov
adc
adc
adc
cmp
cmp
mov
cmp
push
out
arpl
jne
movb
ljmp
adc
adc
cmp
cmp
mov
iret
or
stos
or
dec
cld
inc
adc
mov
out
cmp
call
cmpsl
hlt
addb
adc
cmp
cmp
add
cld
scas
push
clc
jo
cmp
jge
cwtl
daa
adc
cmp
xchg
call
jp
cmpl
repz
into
and
add
dec
inc
fldt
lods
lret
mov
addb
adc
cmp
cmp
pusha
repnz
lahf
inc
icebp
xor
cli
push
pop
and
fisubs
testb
adc
cmp
cmp
mov
lahf
popf
outsb
push
cmpsb
jmp
hlt
cmp
negb
addb
cmp
cmp
nop
xchg
das
adcl
rorb
adc
ja
lods
jne
dec
outsl
inc
insl
jp
pusha
mov
mov
call
xchg
sbb
punpckhdq
sub
add
addb
adc
cmp
cmp
pop
das
pop
push
sub
addb
cmp
cmp
mov
movsb
or
fiadds
xchg
addb
adc
cmp
cmp
loopne
cmp
addb
adc
cmp
cmp
out
dec
dec
in
cli
push
scas
mov
xacquire
sbb
push
addb
adc
cmp
cmp
jecxz
xlat
sahf
in
in
fldt
xlat
inc
or
addb
cmp
cmp
inc
fnstcw
es
lret
outsl
add
outsb
adc
adc
adc
cmp
cmp
pusha
mov
addb
cmp
cmp
dec
adc
adc
adc
cmp
cmp
mov
or
roll
adc
adc
cmp
cmp
jnp
outsb
movsb
bnd
sbb
gs
adcl
and
mov
lock
push
cltd
cwtl
sbb
addb
adc
cmp
cmp
mov
imul
push
cmp
or
addb
adc
cmp
cmp
add
movsb
xor
xchg
iret
inc
cs
jne
cwtl
xchg
jmp
das
cs
xor
rclb
scas
jge
lret
addb
adc
cmp
cmp
clc
inc
adc
shll
fldl
adcb
adc
cmp
cmp
mov
and
sub
lock
addb
cmp
cmp
mov
xchg
addb
adc
cmp
cmp
dec
cmpsb
leave
addb
adc
cmp
cmp
sub
and
lea
sub
lahf
stos
leave
sub
repz
adc
cmp
cmp
ss
sti
je
rorl
mov
aaa
mov
insl
addb
adc
cmp
cmp
push
or
mov
inc
and
in
sub
lahf
lods
mov
setno
pop
movsl
push
cltd
xchg
shlb
or
pushf
push
movsb
pop
mov
sub
jo
xchg
lahf
repnz
fdivs
addb
cmp
cmp
int3
idivb
sbb
data16
mov
xchg
add
and
push
push
sbb
outsb
scas
flds
and
pop
pop
xchg
adc
xchg
jecxz
out
incb
adc
adc
cmp
cmp
adc
sub
imul
addb
adc
cmp
cmp
test
imul
mov
push
loopne
cmpsb
push
push
int3
xor
adc
pop
xor
cld
or
daa
add
std
pushf
sbb
fstpt
fldcw
adc
addb
cmp
cmp
pop
add
or
add
fstpl
filds
push
xor
adc
adc
cmp
cmp
adc
xor
push
lahf
add
inc
jae
inc
push
cltd
addb
adc
cmp
cmp
pop
fimull
fmull
xor
lock
jo
imul
adcb
adc
cmp
cmp
mov
test
ds
xchg
ret
bound
push
xor
addb
cmp
cmp
mov
add
pusha
lret
inc
sub
mov
sbb
push
mov
sub
or
std
jne
insl
sub
mov
fsubr
jge
and
addb
adc
cmp
cmp
addb
adc
cmp
cmp
shll
xor
adcb
adc
cmp
cmp
mov
xchg
and
jecxz
fisttpll
xchg
add
lahf
addb
adc
cmp
cmp
pusha
fistpl
and
ja
pop
mov
cmp
sub
jg
into
cmp
pop
andb
adc
dec
or
adc
adc
cmp
cmp
mov
dec
out
mov
imul
adcb
adc
cmp
cmp
mov
insb
sub
addb
adc
cmp
cmp
fcoms
or
jnp
pop
mov
scas
xchg
addb
adc
cmp
cmp
xor
test
push
pop
insb
lods
adc
inc
jns
incl
push
imul
inc
push
or
mov
mov
test
imul
addb
cmp
cmp
mov
pusha
sub
mov
jno
adc
dec
cmp
lock
push
sbb
pop
dec
repz
mov
lahf
js
xor
and
jmp
jbe,pn
test
push
push
and
in
push
pop
or
mov
lahf
shll
push
addb
adc
cmp
cmp
inc
and
mov
jmp
stos
shr
outsb
dec
test
loop
outsb
addb
adc
cmp
cmp
mov
gs
int3
in
adc
adcb
adc
cmp
cmp
mov
xchg
add
mov
roll
dec
jg
or
scas
mov
test
xchg
sub
xchg
mov
push
xchg
adc
xchg
in
addb
adc
cmp
cmp
inc
scas
addb
adc
cmp
cmp
mov
xchg
sub
xor
cwtl
cwtl
scas
cmc
sarb
push
jmp
adcb
adc
cmp
cmp
mov
in
in
pop
dec
js
sbb
pop
dec
sub
addb
cmp
cmp
outsb
mov
jmp
fimull
pop
ret
adc
lret
addb
adc
cmp
cmp
sbb
push
cltd
pop
cmp
mov
lahf
push
mov
inc
lds
ret
sbb
adc
adc
cmp
cmp
cmp
lcall
jmp
inc
mov
dec
call
sub
into
pushf
xor
mov
dec
scas
out
sub
jo
add
xor
pop
addb
adc
cmp
cmp
into
jmp
ds
fwait
mov
lea
addb
cmp
cmp
mov
jmp
or
xchg
xorl
xchg
xchg
mov
pusha
pop
shrl
dec
shrb
in
fwait
outsb
and
dec
or
fucomip
pop
call
mov
aas
cmc
mov
scas
or
jno
in
dec
arpl
iret
clc
cmp
and
push
adc
adc
cmp
cmp
mov
fs
pop
inc
sbb
addb
cmp
cmp
mov
fldl
push
add
outsl
sbb
pop
loop
jge
inc
bound
test
sbb
aad
lds
mov
dec
jge
addb
cmp
cmp
mov
xor
add
adc
addb
cmp
cmp
mov
and
xor
push
sub
addb
adc
cmp
cmp
adc
mov
pop
and
mov
jp
pop
push
mov
test
inc
lods
mov
cmp
lods
leave
shlb
adc
adc
cmp
cmp
mov
sub
fs
and
rolb
adc
push
dec
xchg
addb
adc
cmp
cmp
lret
pop
jns
int
idivl
addb
cmp
cmp
mov
cld
gs
lock
addb
cmp
cmp
mov
lret
mov
dec
repnz
out
mov
addb
cmp
cmp
jecxz
vlddqu
sbb
add
xchg
mov
push
mov
cltd
mov
and
addb
adc
cmp
cmp
or
cs
and
pop
test
fisttpl
xor
push
fldt
xor
inc
jmp
addb
adc
cmp
cmp
add
addb
cmp
cmp
mov
xchg
cmpsb
es
fs
out
out
addb
cmp
cmp
mov
pop
scas
push
inc
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
sub
jl
xor
adc
adc
cmp
cmp
jnp
mov
inc
sub
jbe
mov
mov
in
push
in
xchg
jl
sbb
outsl
fnstcw
addb
adc
cmp
cmp
loope
loop
je
dec
jl
jbe
jecxz
jo
gs
pop
xchg
adc
out
dec
addb
adc
cmp
cmp
dec
inc
fdivrs
enter
pop
pop
ljmp
addb
cmp
cmp
aam
dec
and
jl
popf
adc
addb
adc
cmp
cmp
dec
repz
mov
mov
or
pusha
addb
adc
cmp
cmp
mov
mov
sbbl
aaa
addb
adc
cmp
cmp
sbb
add
addb
cmp
cmp
adcb
mov
jne
addb
cmp
cmp
mov
add
int
outsl
fsubl
addb
cmp
cmp
mov
ljmp
movb
and
push
dec
xor
in
or
mov
adc
adc
cmp
cmp
mov
fbstp
inc
out
jns
add
in
mov
lret
data16
adc
push
enter
int3
mov
push
pop
maxps
insl
dec
shl
popf
fdivs
popa
and
ret
add
addb
cmp
cmp
mov
jl
lea
addb
adc
cmp
cmp
dec
jnp
jg
pop
dec
lods
imul
popa
sbb
adc
adc
cmp
cmp
mov
scas
pushf
addb
adc
cmp
cmp
enter
outsl
inc
int
addr16
dec
inc
lods
mov
iret
mov
ljmp
xchg
adcb
adc
cmp
cmp
mov
iret
mov
xchg
loope
dec
jo
clc
xchg
jmp
inc
addb
adc
cmp
cmp
int3
push
adc
enter
incl
jbe
xor
lcall
rorl
addb
cmp
cmp
pop
arpl
mov
cmc
cltd
cmc
jge
loope
xchg
xchg
mov
xchg
or
addb
adc
cmp
cmp
fdivrl
ret
xchg
add
fdivrs
or
shll
outsl
aas
fsubrs
lcall
adc
cmp
cmp
mov
mov
pop
ljmp
dec
mov
call
mov
adc
adc
cmp
cmp
mov
fsub
es
gs
repz
or
cld
sarl
movsl
addb
adc
cmp
cmp
jl
sahf
push
bound
mov
cmp
push
mov
jo
jb
sarb
dec
push
cltd
mov
cmc
cmp
dec
push
jp
out
addb
adc
cmp
cmp
int
pop
pusha
pop
xor
loop
addl
xchg
andb
sti
and
mov
addb
adc
cmp
cmp
lock
adc
loop
add
faddl
add
fcmovb
push
lock
adc
addb
adc
cmp
cmp
add
dec
mov
xor
fnsave
add
ljmp
xor
xchg
addr16
sbb
push
xchg
xchg
outsb
inc
xor
imulb
out
fiaddl
mov
int
inc
push
clc
fistpl
xor
mov
mov
ret
push
xor
loope
jo
mov
addb
adc
cmp
cmp
enter
push
cltd
pusha
sbb
add
inc
das
mov
inc
scas
sub
adcb
adc
cmp
cmp
mov
mov
es
shr
push
pop
idivl
loope
addb
cmp
cmp
mov
push
lahf
shl
scas
mov
sahf
cltd
pop
add
mov
aam
and
adc
inc
xor
in
shll
push
sbbl
addb
cmp
cmp
mov
and
addb
cmp
cmp
mov
into
fisubrl
sbb
lcall
mov
addb
cmp
cmp
dec
popa
int3
add
xor
lea
pop
lds
adc
adc
cmp
cmp
cltd
clc
jns
mov
or
mov
adc
adc
cmp
cmp
mov
orb
int
mov
cmp
and
pop
mov
adc
adc
cmp
cmp
shll
lea
cmc
lea
data16
adc
cmp
cmp
loope
adc
xor
jno
lcall
cwtl
in
test
aaa
andl
addb
adc
cmp
cmp
sbb
xor
add
out
addb
adc
cmp
cmp
jne
lcall
mov
jl
addb
cmp
cmp
mov
cli
pop
testl
adcb
pop
mov
add
jmp
inc
in
sub
adcb
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
mov
lret
filds
data16
mov
in
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
inc
inc
les
sbb
adc
gs
xor
lods
inc
add
jne
repnz
adc
cmp
cmp
clc
fwait
mov
std
shll
aas
ret
mov
jmp
mov
inc
and
pop
pop
out
pop
pop
movsl
xchg
push
daa
push
mul
pop
or
insl
jmp
test
and
mov
xchg
mov
cmpsb
out
imul
ljmp
add
cmp
mov
sbb
mov
aaa
xor
out
ja,pt
dec
cmp
adc
adc
cmp
cmp
nop
arpl
scas
mov
jnp
int3
fisttps
push
addb
adc
cmp
cmp
out
in
sub
movsb
sbb
aaa
mov
mov
ss
jbe
daa
push
shl
ljmp
lcall
adc
adc
cmp
cmp
lods
inc
sub
or
test
adc
adc
cmp
cmp
mov
adc
movsl
shll
sbb
dec
fstpt
in
aaa
fmull
aad
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xor
sub
mov
dec
lret
mov
adcb
adc
cmp
cmp
mov
sub
outsb
pop
outsb
cmp
pop
jp
test
xor
lds
aas
ss
cmp
adc
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
sbb
push
pushf
sti
addb
adc
cmp
cmp
aam
loopne
adc
adc
adc
cmp
cmp
mov
and
mov
dec
dec
adc
cwtl
xchg
cmpsl
ds
or
push
cmp
mov
fldcw
ficompl
sbb
inc
outsb
mov
dec
jecxz
repnz
out
addb
adc
cmp
cmp
in
jmp
addb
cmp
cmp
mov
shrl
addb
cmp
cmp
push
jle
adc
xor
adcb
adc
cmp
cmp
mov
fwait
adcl
test
cmp
scas
xor
adc
jne
loopne
sbb
ja
popa
mov
je
nop
xchg
js
or
push
add
lods
mov
xchg
mulb
mov
lret
int3
fucom
idivb
fcmovu
mov
outsb
xchg
jae
jno
fmull
pop
push
xor
jno
inc
pop
or
clc
daa
cmp
or
inc
std
aas
ficomps
insl
cmp
and
jmp
lea
xchg
sahf
xlat
addb
adc
cmp
cmp
mov
lahf
pop
xchg
pop
in
addb
adc
cmp
cmp
cmpsl
mov
data16
jnp
movsl
and
mov
push
aam
aam
mov
test
cmp
push
lock
and
enter
inc
call
mov
addb
cmp
cmp
mov
add
adc
adc
cmp
cmp
cmpb
adc
scas
outsb
mov
mov
lods
aam
jmp
mov
mov
mov
adc
adc
cmp
cmp
mov
ret
sub
push
jns
data16
js
pop
jno
push
sub
addb
cmp
cmp
mov
push
cltd
ljmp
adc
xor
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
cmp
lods
adc
or
cmp
inc
loope
push
cmpsl
fimull
xchg
pop
add
int3
cmp
addb
cmp
cmp
mov
clc
addr16
xchg
incl
push
and
and
xchg
mov
test
mov
inc
sbb
pop
or
adc
adc
cmp
cmp
mov
sbb
arpl
mov
fsubrl
sub
cmp
insb
sub
adc
adc
cmp
cmp
out
jl
mov
mov
std
mov
addb
adc
cmp
cmp
rolb
cmpsb
jle
cld
frstor
loope
addb
cmp
cmp
mov
add
cmp
or
hlt
sbbb
add
aam
imul
xchg
inc
cmp
es
push
adc
stos
aaa
mov
movsb
or
cltd
das
fwait
push
lock
andb
addb
cmp
cmp
icebp
and
adc
adc
cmp
cmp
cmpsb
inc
jns
jbe
addb
adc
cmp
cmp
lret
xchg
jecxz
cltd
cltd
jno
mov
sbb
mov
sbb
and
dec
std
fwait
ret
andb
jbe
cmpsl
jno
xlat
or
xor
or
nopl
jmp
movsl
cmc
ret
insl
push
fwait
pusha
pop
pop
repz
adc
cmp
cmp
addb
adc
cmp
cmp
outsl
cmp
lahf
mov
mov
outsb
ja
repnz
sbb
lods
pushf
data16
dec
dec
sbb
adc
mov
mov
mov
sahf
or
gs
cmpsl
and
and
test
jo
or
and
dec
sahf
inc
push
daa
pop
push
fists
jnp
stos
test
inc
mov
sub
mov
lock
roll
cltd
and
insb
or
cltd
outsb
mov
or
popa
mov
idivb
adc
jle
lds
pop
addb
adc
cmp
cmp
stc
imul
mov
adc
adc
cmp
cmp
mov
fbld
fstps
ret
or
pusha
cwtl
push
test
dec
xchg
push
addb
adc
cmp
cmp
loop
inc
pop
sub
xchg
daa
loope
rolb
and
notb
adc
xchg
lods
jl
jbe
pop
pop
lahf
es
adcb
adc
cmp
cmp
mov
in
pop
scas
lds
popa
sti
sbb
cmp
cmp
in
ret
leave
iret
pop
loope
call
data16
mov
pop
jp
jg
add
sub
cmp
fs
xor
xor
adc
adc
cmp
cmp
adc
add
xchg
and
cld
dec
mov
dec
addb
adc
cmp
cmp
mov
or
addb
cmp
cmp
ret
into
pop
jl
in
cmpsb
mov
adcb
adc
cmp
cmp
mov
push
jnp
pusha
and
addr16
or
outsl
or
dec
ss
imul
adcb
jp
jl
lods
loop
adc
xchg
xor
js
lea
adc
adc
cmp
cmp
gs
push
and
imul
pop
aas
xor
addb
adc
cmp
cmp
std
int
or
jnp
dec
mov
adc
lahf
jmp
hlt
clc
add
stc
sti
aaa
mov
adc
fwait
xlat
sti
lock
xor
pop
dec
scas
jge
leave
mov
imul
jns
pop
int
cltd
push
out
sti
inc
push
push
cli
adc
and
lcall
adc
stos
or
test
lret
mov
addb
cmp
cmp
mov
ss
addb
adc
cmp
cmp
push
dec
ret
rolb
adc
adc
cmp
cmp
incl
adc
adc
cmp
cmp
divb
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
mov
cmp
and
movb
outsb
sub
addb
cmp
cmp
addb
adc
cmp
cmp
stos
xor
leave
pop
jl
jle
pop
dec
lods
xchg
ja
pop
pusha
xlat
test
pop
lret
or
sub
imul
xor
ja
jno
and
lds
cmp
fwait
pop
loope
xor
int
scas
decl
pop
mov
adc
adc
cmp
cmp
mov
xor
std
mov
in
je
sub
addb
adc
cmp
cmp
dec
js
ret
add
adc
adc
cmp
cmp
mov
or
mov
sbb
and
addb
cmp
cmp
mov
mov
xchg
aam
push
int3
shl
add
adcb
adc
cmp
cmp
mov
jge
addb
adc
cmp
cmp
insl
in
jg
sahf
jl
push
xchg
imul
das
xchg
dec
sbb
out
lea
sarl
cmpsb
add
adc
repnz
adc
cmp
cmp
ror
inc
stos
js
into
icebp
mov
in
in
push
push
adc
addb
adc
cmp
cmp
push
rcr
in
inc
loop
das
jmp
xchg
das
lock
sar
repz
adcb
adc
cmp
cmp
mov
dec
loop
mov
jge
divb
sbb
stos
addb
adc
cmp
cmp
jno
pop
jno
out
in
sbb
xchg
xor
addb
adc
cmp
cmp
sbb
mov
test
shrl
fistl
test
inc
add
nop
cmp
addr16
addb
cmp
cmp
mov
and
lea
adc
adc
cmp
cmp
aaa
imul
adc
cmp
cmp
mov
dec
lcall
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
lods
xchg
dec
xchg
in
fdivr
rorl
addb
adc
cmp
cmp
icebp
sbb
inc
sub
adcb
adc
cmp
cmp
mov
mov
cltd
scas
push
out
addb
adc
cmp
cmp
adc
jmp
fstpt
fstpl
mov
push
gs
int
cmp
or
xchg
leave
jo
ret
addb
cmp
cmp
mov
clc
inc
addb
adc
cmp
cmp
ss
js
sahf
movsb
inc
jns
cs
adc
addb
adc
cmp
cmp
ljmp
xor
cmp
jmp
int
cmp
pop
shll
xor
arpl
test
dec
xchg
adc
addb
adc
cmp
cmp
dec
pushf
mov
sbb
jb
adc
adc
cmp
cmp
xchg
out
imul
xchg
mov
pop
adc
in
mov
add
pop
add
push
inc
scas
cmp
xchg
sahf
sub
addb
cmp
cmp
mov
test
mov
pop
add
inc
cltd
pop
sti
pushf
pop
insb
mov
popa
jle
loopne
mov
loope
popa
dec
dec
repnz
push
stos
repz
pop
add
loope
sub
mov
push
lock
adc
adc
cmp
cmp
scas
mov
clc
sub
adc
adc
cmp
cmp
ret
or
sahf
push
addb
adc
cmp
cmp
repz
pop
lods
and
adc
adc
cmp
cmp
mov
je
ja
loope
addb
adc
cmp
cmp
adc
enter
add
addb
adc
cmp
cmp
jo
fs
scas
mov
xchg
sub
jg
or
leave
fnstenv
add
addb
cmp
cmp
mov
jno
sbb
jno
add
mov
aam
insb
lcall
jge
loope
dec
jmp
aas
call
addb
adc
cmp
cmp
mov
and
testb
test
xchg
push
ja
hlt
lret
std
ror
mov
xchg
adc
test
jg
add
cltd
aad
fsubrs
leave
dec
xor
jmp
jb
cli
mov
ja
dec
loopne
fiadds
inc
jg
cld
jno
xor
add
or
addb
cmp
cmp
mov
push
mov
mov
sub
dec
scas
lods
subb
rclb
repnz
loopne
ficoms
out
ret
inc
mov
adc
fwait
xchg
test
addb
cmp
cmp
mov
adc
incb
adc
adc
cmp
cmp
xchg
sub
addb
cmp
cmp
push
jp
mov
addb
cmp
cmp
mov
mov
stos
inc
cmp
mov
pop
ret
test
pop
daa
jbe
cmp
addb
cmp
cmp
mov
repnz
cmp
sbb
jmp
scas
lahf
xchg
clc
jo
inc
sub
jae
mov
data16
std
or
ja
insb
stc
sub
ror
xchg
mov
or
mov
out
mov
insl
sub
mov
cmp
sub
or
not
add
push
inc
ljmp
sbb
adc
adc
cmp
cmp
mov
adcl
inc
out
repz
addb
cmp
cmp
mov
outsl
xor
insl
pushl
rorb
and
xor
dec
or
leave
outsl
pop
xchg
sarl
and
cli
lret
dec
call
and
mov
addb
cmp
cmp
mov
push
addb
cmp
cmp
mov
jp
dec
aam
mov
add
ds
push
js
inc
cmp
mov
subb
mov
out
pop
cmpb
std
push
je
and
addb
adc
cmp
cmp
add
dec
out
pop
xor
roll
sbb
das
push
or
adcb
mov
xor
jg
movsb
scas
sarl
pushf
mov
adc
arpl
adc
adc
cmp
cmp
sbb
addb
adc
cmp
cmp
imul
js
lods
in
pop
fwait
add
jecxz
push
cmp
cmpsb
nop
fcmovbe
cmp
lds
inc
mov
mov
popl
adc
adc
cmp
cmp
xor
scas
inc
sbb
dec
addb
adc
cmp
cmp
into
jl
addb
adc
cmp
cmp
cmc
dec
jl
addb
adc
cmp
cmp
xlat
dec
cli
cmp
addb
adc
cmp
cmp
movsb
je
jg
lods
sub
ror
inc
int3
xchg
jno
testl
cmp
cmp
pop
sub
pop
mov
test
stc
pop
fldt
psubd
adcb
adc
cmp
cmp
mov
in
xor
aam
fcmovne
std
push
fistpll
add
popf
mov
pop
xchg
addb
cmp
cmp
mov
fcomi
std
addr16
ja
inc
adc
insb
lret
mov
mov
std
stos
mov
dec
in
addb
cmp
cmp
mov
cmp
jae
pop
or
jmp
outsl
xchg
jecxz
out
shl
shll
mov
addb
cmp
cmp
inc
cmpl
addb
adc
cmp
cmp
push
jbe
addb
cmp
cmp
mov
xchg
jne
xchg
int3
sbb
test
mov
add
sti
bnd
lret
push
je
aaa
mov
adc
adc
cmp
cmp
movsb
addb
adc
cmp
cmp
test
int
push
rep
jg
loopew
addb
cmp
cmp
mov
xchg
cmpsl
adc
addb
adc
cmp
cmp
lahf
mov
cwtl
inc
ror
pop
xlat
and
xchg
pop
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
lar
in
inc
pop
lret
cmp
sbb
dec
jmp
sbb
pop
dec
int
loopne
addb
adc
cmp
cmp
inc
sarb
mov
lret
cmp
addb
cmp
cmp
mov
cwtl
cltd
add
sbb
jge
std
jno
int3
cltd
jp
jae
int3
cmp
dec
lods
or
inc
int3
pop
jnp
cmpsl
aam
bound
imul
daa
stos
xor
arpl
sbb
or
inc
fsubr
loopne
push
sbb
cld
or
lds
lret
jo
dec
test
addb
adc
cmp
cmp
leave
add
and
pop
lods
cmp
push
cmp
cld
xchg
mov
push
adc
adc
adc
cmp
cmp
dec
addb
adc
cmp
cmp
mov
fwait
je
cmpsl
mulb
lds
jo
sbb
push
push
call
cltd
jne
imul
mov
es
push
adc
adc
cmp
cmp
mov
ja
loop
sbb
mov
xor
enter
inc
mov
mov
loop
addb
cmp
cmp
mov
movb
clc
int3
lret
sbb
addb
cmp
cmp
xchg
addb
adc
cmp
cmp
iret
stc
fs
pop
and
push
cld
sarb
mov
and
sbb
push
xor
cmc
pop
jecxz
cmp
repnz
arpl
aam
bswap
es
inc
cs
dec
sub
subl
cli
add
sbb
push
pop
or
adc
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
aas
xor
and
cltd
enter
addb
adc
cmp
cmp
adc
incb
mov
lcall
xchg
pop
ljmp
ret
icebp
xor
push
lods
imul
lret
jb
aas
xchg
test
adc
mov
addb
cmp
cmp
mov
icebp
lret
sbb
int
and
sub
dec
cld
mov
rorl
mov
inc
xor
inc
mov
add
add
adc
adc
cmp
cmp
mov
sub
adc
sub
sbb
push
int3
mov
addb
adc
cmp
cmp
sub
pop
ucomiss
xor
push
adc
adc
cmp
cmp
mov
jle
movb
adc
addb
adc
cmp
cmp
nop
mov
call
addb
adc
cmp
cmp
lret
xchg
pusha
inc
xchg
sub
ret
inc
dec
pop
or
and
mov
movl
and
into
jge
inc
daa
iret
cld
sbb
in
aaa
and
repz
outsl
ffreep
or
int
repz
das
repnz
addb
adc
cmp
cmp
inc
jg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
loope
addb
cmp
cmp
mov
call
adcb
adc
cmp
cmp
mov
cmpsl
sbb
jl
addb
adc
cmp
cmp
div
add
jp
cwtl
das
adc
lahf
fs
addb
cmp
cmp
mov
cmpl
cld
not
and
cltd
popf
xchg
std
xorb
push
clc
fcompl
jmp
hlt
out
xchg
pop
int3
jbe
jg
in
inc
call
sbb
push
addb
adc
cmp
cmp
in
scas
test
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
dec
pop
push
daa
test
sub
push
rclb
addb
adc
cmp
cmp
jbe,pn
sub
fs
lds
call
pop
push
mov
addb
cmp
cmp
into
loopne
les
pop
mulb
repnz
insb
xchg
loopne
cmpsb
add
mov
addb
cmp
cmp
mov
fstpt
dec
rclb
adc
or
jns
leave
addb
adc
cmp
cmp
or
mov
addb
adc
cmp
cmp
add
insb
pop
sbb
stc
push
test
aad
daa
enter
adc
insl
mov
addb
cmp
cmp
mov
lret
lret
addb
adc
cmp
cmp
pop
mov
push
mov
inc
and
adc
adc
cmp
cmp
int3
addb
adc
cmp
cmp
push
mov
pop
push
in
frstor
mov
xor
bound
inc
cmpsb
nop
fldenv
mov
pop
mov
mov
mov
hlt
dec
rcrl
shrb
fs
repnz
addb
cmp
cmp
push
dec
push
pop
fisubrs
jb
addb
adc
cmp
cmp
mov
mov
and
addb
cmp
cmp
mov
push
xor
lret
push
enter
clc
lahf
jmp
repnz
addb
adc
cmp
cmp
adc
mov
addb
adc
cmp
cmp
scas
sub
iret
icebp
loopne
insl
mov
addb
cmp
cmp
mov
cmpsb
dec
into
xor
xchg
xchg
or
test
testl
cmp
cmp
shl
push
fwait
arpl
push
addb
adc
cmp
cmp
xchg
cmovnp
pop
fs
mov
addr16
jp
xchg
adc
adc
cmp
cmp
xchg
mov
adcb
adc
cmp
cmp
mov
inc
adc
push
push
sbb
fcoms
int3
out
lret
mov
pop
lahf
stos
xchg
add
adc
adc
cmp
cmp
pop
or
inc
ret
xorl
addb
adc
cmp
cmp
std
jmp
out
rcll
hlt
add
jns
mov
pop
sub
mov
fcoms
jne
lahf
xchg
xchg
dec
aam
sub
jle
pop
aam
js
out
inc
adc
out
pop
jecxz
and
jne
cmpsl
lods
in
out
addb
adc
cmp
cmp
sub
pusha
aad
scas
addb
adc
cmp
cmp
inc
movsb
jae
fbstp
fsubl
and
fnstenv
jle
dec
inc
pop
mov
insl
mov
addb
cmp
cmp
mov
or
enter
adcb
adc
cmp
cmp
mov
test
in
cmp
sarb
repz
inc
or
dec
pop
addb
adc
cmp
cmp
mov
inc
mov
addb
cmp
cmp
mov
and
xchg
scas
mov
sbb
jle
and
aaa
adc
enter
push
or
add
inc
daa
mov
outsb
imul
adcb
adc
cmp
cmp
mov
popa
rorb
xchg
test
addb
cmp
cmp
mov
or
lock
enter
stc
adc
xchg
je
mov
cs
scas
or
xor
cmp
dec
dec
repnz
xchg
lcall
outsb
shrd
addb
adc
cmp
cmp
addb
adc
cmp
cmp
cmc
sarl
je
pop
mov
lock
scas
test
fimull
cmp
hlt
test
add
or
ret
add
xchg
aas
jno
xchg
mov
addb
cmp
cmp
mov
fsubs
inc
mov
dec
in
sub
xor
adc
adc
cmp
cmp
inc
addb
adc
cmp
cmp
in
out
addb
adc
cmp
cmp
cmc
fmul
cli
and
addb
cmp
cmp
mov
lcall
push
test
sbb
push
push
sub
inc
repnz
std
lret
cltd
cmp
pop
popa
push
cmpsb
sarl
xor
adc
adc
cmp
cmp
xor
test
iret
mov
xorb
mov
jb
inc
push
aas
loop
stc
addb
adc
cmp
cmp
xor
into
lock
ja
fisubrl
pop
cmp
lret
loop
push
mov
addb
adc
cmp
cmp
shlb
mov
jecxz
pop
popa
cmp
addb
adc
cmp
cmp
scas
repnz
es
dec
xchg
into
cmpsl
xor
testl
adc
fdivrl
dec
ret
sarb
jle
lret
aad
jp
mov
cli
leave
out
lock
loope
repnz
dec
adcb
jg
cmp
fsubs
xchg
xchg
incb
cs
pop
xchg
dec
mov
mov
sub
inc
xlat
jb
adc
inc
cmpxchg
adc
push
imul
pop
jp
lcall
out
mov
stos
pop
sbb
test
gs
jae
movsl
xor
addb
adc
cmp
cmp
fsubrp
stos
jne
fldl
test
lret
pop
div
mov
mov
addb
adc
cmp
cmp
lret
cmc
cmpsb
cli
xchg
push
sub
jbe
sub
adc
adc
cmp
cmp
mov
add
mov
insl
adc
cwtl
pop
pop
ficompl
add
rolb
addr16
pop
fnstcw
adc
jnp
jmp
adc
adc
cmp
cmp
mov
push
loope
dec
mov
adc
adc
cmp
cmp
mov
sub
fldenv
adcb
adc
cmp
cmp
mov
imul
addb
adc
cmp
cmp
popa
xchg
and
addb
addb
adc
cmp
cmp
inc
lcall
adc
cmp
cmp
mov
cmp
dec
movsb
xchg
dec
addb
adc
cmp
cmp
push
addb
adc
cmp
cmp
shll
cmp
repnz
enter
push
sbb
cmp
ss
dec
addr16
sti
sub
inc
lods
xor
jle
movsb
pop
mov
out
push
dec
imul
sbb
js
fcmovnb
aam
or
pop
lret
fdiv
jge
cld
mov
sbb
jle
out
mov
mov
mov
addb
adc
cmp
cmp
out
xchg
sub
addb
cmp
cmp
mov
addb
adc
cmp
cmp
js
adcl
cwtl
arpl
cltd
fisttps
jl
inc
push
push
xchg
test
idivl
fwait
cmp
mov
cmp
sbb
fmul
les
push
rep
stc
push
outsb
mov
mov
enter
sbb
nop
dec
lock
pop
int3
adcb
and
clc
mov
mov
inc
fdivl
jbe
xchg
lcall
adc
adc
cmp
cmp
mov
xchg
imul
cmc
sbb
sub
or
xor
ffree
pusha
lret
inc
push
ljmp
mov
jg
jnp
addb
cmp
cmp
mov
iret
lcall
cld
xchg
jmp
je
jmp
dec
addb
adc
adc
cmp
cmp
mov
add
adc
std
fdivl
aas
mov
adc
adc
cmp
cmp
jp
mov
inc
lods
cmp
mov
push
inc
addb
adc
cmp
cmp
mov
in
push
xor
subl
xchg
xor
or
adcb
adc
cmp
cmp
mov
xchg
cmp
adc
filds
xor
sbb
test
addb
cmp
cmp
mov
or
adcb
adc
cmp
cmp
mov
push
imul
mov
arpl
or
addb
cmp
cmp
mov
inc
push
mov
and
repz
pop
addb
mov
jge
xlat
ror
rol
jmp
insb
xor
lret
mov
fs
dec
xor
push
testb
repz
cmp
sahf
pushl
iret
loopne
inc
mov
addb
cmp
cmp
mov
ljmp
cmpsl
es
imul
aad
test
fidivs
pop
jp
insb
pop
xchg
dec
jb
ret
cmp
or
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
inc
ljmp
std
sub
ljmp
incl
adc
adc
cmp
cmp
mov
addb
cmp
cmp
mov
inc
in
cmp
roll
addb
adc
cmp
cmp
sub
not
dec
pushl
mov
rorb
in
inc
mov
xchg
repz
aaa
fcompl
stos
stos
arpl
mov
inc
mov
xor
jb
pop
xchg
push
inc
mov
or
inc
out
pop
lds
xor
addb
adc
cmp
cmp
stc
add
inc
jno
dec
push
jp
outsl
nop
jmp
dec
pop
or
mov
sub
andb
test
addb
cmp
cmp
mov
push
arpl
cmp
mov
addb
cmp
cmp
mov
mov
push
mov
mov
mov
adcb
adc
cmp
cmp
mov
push
test
jge
clc
push
loopne
adc
addb
adc
cmp
cmp
mov
dec
add
roll
adc
adc
cmp
cmp
add
addb
adc
cmp
cmp
addb
adc
cmp
cmp
aaa
in
lldt
insb
in
leave
push
stos
adc
in
or
or
inc
mov
mov
test
xor
mov
daa
test
jge
pusha
and
jnp
mov
mov
mov
insl
or
rcrb
scas
negl
pop
addb
adc
cmp
cmp
ds
and
repnz
adc
adc
adc
cmp
cmp
xlat
mov
shll
in
add
leave
lock
cmp
sub
test
sbb
cwtd
xchg
sbb
lret
pop
out
dec
test
cmpb
out
jbe
and
lock
test
inc
adc
adc
adc
cmp
cmp
cli
dec
mov
inc
cmp
push
dec
xchg
dec
lcall
fidivrl
fsts
daa
push
xlat
aaa
xchg
stos
or
ljmp
addb
adc
cmp
cmp
out
jae
fistpll
fcoms
sbb
cltd
sub
xor
adc
push
int3
sarb
push
call
fcomi
decl
inc
mov
out
push
push
and
add
or
xchg
jmp
dec
xlat
mov
pop
in
fldt
mov
dec
bswap
addb
adc
cmp
cmp
ljmp
adc
adc
cmp
cmp
mov
and
cmp
aaa
push
xor
fisubrl
addb
cmp
cmp
mov
ret
jge
or
cwtl
repnz
arpl
addb
cmp
cmp
mov
sub
ljmp
add
jnp
jnp
and
adc
adc
cmp
cmp
sbb
loop
clc
xchg
add
adcb
adc
cmp
cmp
mov
mov
adcb
adc
cmp
cmp
mov
add
push
icebp
inc
xchg
arpl
adc
adc
cmp
cmp
mov
mov
add
inc
cmp
adcb
adc
cmp
cmp
mov
dec
movsl
test
lcall
lds
mov
dec
mov
fisubl
addb
adc
cmp
cmp
pop
push
lds
cwtl
addb
adc
cmp
cmp
push
lret
stos
ret
addb
adc
cmp
cmp
cld
sbb
mov
outsb
loopne
push
notl
cmpsb
fistl
arpl
scas
dec
or
sbb
adcb
adc
cmp
cmp
mov
push
shll
ret
lret
xchg
jo
ljmp
add
into
inc
cmp
cld
lods
adc
or
add
mov
cld
adc
fsubrl
test
fdiv
insb
clc
add
inc
sbb
je
fdivr
fcoms
jnp
push
pop
cmp
jne
test
in
xchg
inc
xor
addb
cmp
cmp
mov
jge
pushf
pop
pop
and
mov
addb
cmp
cmp
rcll
mov
cli
cs
push
lret
in
mov
insb
cmp
pop
test
int
inc
mov
xchg
push
cmpl
mov
int3
push
testb
mov
xlat
mov
divb
loope
push
sub
shrb
and
mov
add
shr
mov
adcb
adc
cmp
cmp
mov
shlb
dec
out
sub
jnp
xor
inc
cmp
adc
adc
cmp
cmp
xchg
mov
scas
mov
add
mov
orb
out
imul
mov
push
sbb
insb
hlt
addb
adc
cmp
cmp
sub
out
cmc
loope
pop
xchg
subl
nop
cmp
mov
pop
roll
adc
cmp
cmp
mov
into
pop
inc
and
push
or
pop
mov
fisttpll
sub
fisttpl
leave
adc
lock
dec
cmc
mov
mov
out
jnp
jmp
push
inc
jle
lcall
addb
cmp
cmp
mov
xor
mov
rol
pop
std
jmp
sarl
adc
and
fldl
xor
adc
adc
cmp
cmp
mov
push
divl
pop
sub
notb
leave
cld
popf
dec
mov
mov
pop
mov
jecxz
push
mov
adcb
adc
cmp
cmp
mov
add
mov
jecxz
mov
addb
cmp
cmp
or
or
lret
adcb
lahf
ret
fs
sub
or
adc
adc
cmp
cmp
mov
mov
movsb
adc
dec
inc
mov
dec
pop
out
addb
cmp
cmp
mov
lock
les
not
shl
dec
adc
shrb
jge
out
or
or
push
stc
add
das
add
mov
mov
and
sar
inc
mov
push
in
roll
adc
adc
cmp
cmp
js
fiadds
addb
cmp
cmp
bound
jae
addb
cmp
cmp
mov
hlt
sub
inc
and
jge
fstpl
pusha
push
mov
mov
ds
out
addb
cmp
cmp
mov
adc
test
in
mov
adc
cmp
fidivs
sbb
insb
lcall
sbb
or
push
scas
jae
xor
and
sbb
pushf
pop
aaa
or
adc
adc
cmp
cmp
repnz
mov
pop
and
inc
imul
scas
and
cs
cmp
addb
adc
cmp
cmp
jno
fsqrt
stc
push
jg
rorb
repnz
fdivrs
scas
lods
aaa
out
fcompl
clc
pop
sarb
dec
sub
movsb
repz
mov
adcb
adc
cmp
cmp
mov
sub
fisttpl
xor
cmpsl
call
mov
cmp
int
xlat
shrb
dec
bound
jl
add
js
hlt
addb
adc
cmp
cmp
hlt
push
jge
bound
sub
cmp
add
xchg
bound
das
xor
pushf
mov
aad
out
dec
sti
xor
fwait
sbb
push
movsb
sub
mov
adc
adc
cmp
cmp
mov
jb
sarb
cmp
aad
mov
cmc
pop
std
out
jmp
and
addb
adc
cmp
cmp
imul
addb
adc
cmp
cmp
test
push
sbb
orl
lock
add
xlat
dec
mov
jo
lret
outsb
int
js
inc
or
jns
jne
addb
cmp
cmp
mov
sub
out
mov
js
test
hlt
mov
pop
add
xlat
mov
clc
or
addb
cmp
cmp
mov
repnz
mov
in
mov
pop
sti
addb
adc
cmp
cmp
call
cmp
imul
push
or
loope
pop
inc
hlt
add
movsb
add
adcb
adc
cmp
cmp
mov
scas
push
les
mov
imul
cmp
cmpsl
mov
cmpsl
push
push
dec
push
mov
dec
push
and
mov
fdivr
sub
push
out
std
mov
mov
jmp
jne
add
jg
out
test
js
jge
cmp
icebp
outsl
into
jmp
call
dec
fwait
out
push
inc
out
or
addb
cmp
cmp
pop
push
dec
shll
enter
lods
dec
push
cmp
inc
leave
jb
mov
nop
xor
push
xchg
xorb
pop
jnp
xchg
mov
outsb
lea
fcoms
addb
cmp
cmp
mov
xor
mov
ja
fxch
icebp
ss
xchg
pop
enter
jb
lds
jp
mov
jno
pusha
in
mov
mov
sub
addb
cmp
cmp
mov
addb
adc
cmp
cmp
push
mov
mov
addb
adc
cmp
cmp
cmp
push
leave
sbb
leave
scas
mov
lods
fs
gs
sbb
mov
mov
and
addb
adc
cmp
cmp
ficompl
lods
dec
mov
pop
out
movl
cmp
cmp
div
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
adc
icebp
std
inc
cmp
lcall
shr
aas
sub
insl
fsubr
mov
cmp
cwtl
pop
jnp
cmc
ret
push
ja
loope
iret
pop
or
jl
test
sahf
imul
mov
jmp
mov
add
pusha
mov
add
xor
add
pop
in
hlt
imul
addb
adc
cmp
cmp
xchg
in
fldcw
push
inc
jns
iret
jg
pop
outsl
cmp
mov
xor
mov
les
int3
push
aam
loop
mov
adc
adc
cmp
cmp
mov
int3
sti
arpl
sub
push
push
pop
xchg
sbb
mov
dec
sbb
shlb
push
sahf
test
test
dec
dec
pop
aaa
inc
lcall
adc
adc
cmp
cmp
popf
scas
addb
adc
cmp
cmp
or
addb
cmp
cmp
mov
xchg
pushl
push
lea
jno
jmp
rcrl
and
mov
adc
adc
cmp
cmp
mov
inc
enter
add
mov
mov
orb
push
addb
adc
cmp
cmp
movsl
xchg
or
addb
adc
cmp
cmp
mov
xchg
ret
shrb
xchg
sbb
out
pushf
adc
popl
mov
and
imul
ret
into
xor
or
jae
push
jl
xlat
into
cmp
and
pop
sub
addb
adc
cmp
cmp
or
xor
dec
je
or
xor
jno
addb
cmp
cmp
mov
stc
pop
mov
adc
add
mov
adcb
adcb
adc
cmp
cmp
mov
inc
mov
cmp
mov
jno
addb
cmp
cmp
mov
dec
addb
adc
cmp
cmp
orl
dec
stos
roll
inc
xchg
jnp
xorb
push
repnz
cmc
icebp
pop
sub
imul
loop
test
inc
stos
jecxz
testl
cmp
cmp
addb
adc
cmp
cmp
add
add
movsl
xchg
pop
xor
sub
push
aaa
pop
fistpl
addb
cmp
cmp
mov
mov
dec
adc
stos
cwtl
mov
sub
lock
adcb
adc
cmp
cmp
mov
adc
int
movsl
jmp
cmp
rclb
dec
mov
push
pop
mov
int3
pop
add
addb
cmp
cmp
mov
and
mov
xlat
inc
mov
pop
cmp
push
sub
adcb
adc
cmp
cmp
mov
sbb
addb
adc
cmp
cmp
out
lcall
addb
cmp
cmp
mov
pushf
mov
inc
gs
call
or
cmp
das
hlt
into
and
jo
nop
mov
ret
decl
and
fimull
sub
adc
adc
cmp
cmp
sub
mov
addb
cmp
cmp
mov
pusha
add
addb
cmp
cmp
mov
andb
es
jmp
mov
cwtl
addb
adc
cmp
cmp
das
inc
addb
adc
cmp
cmp
int
or
xorb
testl
into
mov
in
addb
adc
cmp
cmp
push
loop
jae
hlt
sbb
pop
or
lock
cmpsb
ds
es
pushl
xchg
inc
xchg
cltd
sbb
mov
stos
add
push
jo
and
addb
adc
cmp
cmp
fldl
nopl
xor
addb
adc
cmp
cmp
cmc
test
cmp
sbb
or
sub
in
or
into
test
int3
adcb
dec
addb
adc
cmp
cmp
pop
cmp
jmp
adcb
adc
cmp
cmp
mov
cmpsl
sbb
ja
and
out
arpl
test
pop
fwait
sub
inc
lret
lea
cli
mov
into
aaa
int
push
dec
push
adc
cmpb
pop
and
jno
pop
sbb
jmp
mov
clc
mov
fmul
adc
adc
repnz
ss
clc
mov
mov
fisttpl
call
aas
cli
int
addb
adc
cmp
cmp
push
mov
mov
mov
mov
mov
mov
movsl
xor
lock
ja
sub
mov
mov
jge
out
cld
fnstsw
mov
pop
call
addb
cmp
cmp
push
out
or
iret
inc
lods
rcrb
ret
fbstp
test
cld
sbb
push
adc
inc
pop
pop
mov
es
mov
sub
push
out
and
pop
addb
adc
cmp
cmp
xchg
rcll
addb
cmp
cmp
mov
jno
mov
dec
mov
aam
sub
inc
adc
sub
inc
adc
jmp
adc
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
clc
xchg
xor
das
inc
pop
inc
adc
sub
add
adc
adc
cmp
cmp
fdivs
mov
icebp
cmpsb
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
stos
fcmovnbe
jns
shrl
jb
lret
mov
cmpsb
repnz
dec
cs
jl
dec
mov
addb
cmp
cmp
mov
or
aam
mov
data16
adc
add
xor
cmp
fwait
movsb
ror
cmp
rclb
or
push
js
movsl
push
dec
lret
xchg
adc
inc
mov
push
sub
addb
adc
cmp
cmp
out
loop
push
outsb
push
pop
adc
in
mov
sahf
push
jo
cmc
pop
addb
adc
cmp
cmp
push
pushl
xchg
xor
addb
cmp
cmp
mov
out
in
in
or
ja
and
add
mov
pop
add
fistps
adc
adc
cmp
cmp
mov
repnz
repz
jno
addb
adc
cmp
cmp
cltd
popf
and
aad
fiaddl
adc
adc
cmp
cmp
insb
push
cmpsl
int3
ficoms
faddl
mov
addb
adc
cmp
cmp
inc
arpl
dec
jmp
mov
addb
adc
cmp
cmp
test
loope
and
adc
adc
cmp
cmp
ss
addb
adc
cmp
cmp
push
adc
scas
shrl
addb
cmp
cmp
mov
mov
jns
xlat
mov
mov
sbb
stos
std
cmp
cmpsb
cmp
addb
cmp
cmp
mov
sbb
mov
mov
mov
mov
int
addb
adc
cmp
cmp
outsl
cmp
push
call
xchg
fcoml
cmc
bound
sahf
inc
test
lahf
xchg
adc
pop
jecxz
mov
test
mulb
xchg
fwait
shrl
stos
dec
addb
adc
cmp
cmp
bound
lret
mov
xor
lret
call
into
hlt
pop
lahf
mov
dec
jmp
xchg
jnp
mov
cmp
out
arpl
int
addb
adc
cmp
cmp
icebp
fadds
adc
adc
cmp
cmp
out
int
loopne
negb
addr16
adc
mov
pop
addb
adc
cmp
cmp
imul
adcb
aaa
push
push
jge
adc
pop
inc
xchg
mov
fisubrs
and
add
mov
out
push
xor
mov
pop
push
jle
rclb
mov
inc
sbb
adc
add
leave
insl
xchg
imul
push
cltd
fwait
jb
inc
pop
aam
jl
aam
cli
aas
sti
and
addb
cmp
cmp
addb
adc
cmp
cmp
out
lods
pop
xchg
adc
addb
cmp
cmp
ret
dec
dec
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
in
adcb
push
int3
je
insl
adc
pop
addb
adc
cmp
cmp
popa
xor
mov
call
sub
push
dec
pusha
mov
enter
adc
push
mov
inc
fwait
jp
mov
aaa
mov
adc
insb
sbb
adc
xchg
aaa
into
sti
jno
or
adc
adc
cmp
cmp
addb
adc
cmp
cmp
aas
rolb
push
imul
lds
add
addb
adc
cmp
cmp
pop
incl
cmc
data16
push
push
mov
stc
xor
movsl
xchg
mov
mov
addb
adc
cmp
cmp
or
jns,pt
in
mov
les
adc
adc
cmp
cmp
mov
xchg
je
lock
xchg
outsl
aad
call
adc
adc
cmp
cmp
mov
scas
incl
adcb
adc
cmp
cmp
mov
inc
je
push
aam
addb
cmp
cmp
mov
adc
and
nop
and
mov
addb
adc
cmp
cmp
cli
sbb
mov
cmp
add
pop
mov
ds
mov
push
inc
mov
sub
dec
sti
inc
mov
das
push
and
inc
leave
and
ret
push
int
xchg
out
fwait
mov
and
push
jb
push
hlt
pop
js
and
push
pop
daa
imul
cmp
cmp
in
dec
clc
pop
js
jno
std
sbb
cmpsl
test
cs
mov
lahf
jb
mov
daa
ret
lcall
add
test
addb
adc
cmp
cmp
repnz
outsl
in
pop
fimull
idivl
mov
xchg
or
addb
cmp
cmp
mov
xchg
addb
adc
cmp
cmp
test
or
inc
out
jns
jb
mov
push
loope
xchg
addb
adc
cmp
cmp
addb
adc
cmp
cmp
rcrb
inc
inc
adc
addb
adc
cmp
cmp
inc
push
xor
icebp
int
xchg
dec
dec
jbe
cmp
out
outsl
mov
xchg
mul
popa
cld
addb
adc
cmp
cmp
aas
mov
pop
stos
addb
adc
cmp
cmp
cmp
inc
mov
xchg
loop
and
adc
adc
cmp
cmp
fistl
xor
cmc
scas
aad
and
cli
int3
cmc
sbb
xor
dec
addb
adc
cmp
cmp
dec
mov
lods
and
sub
testb
adc
adc
cmp
cmp
mov
xor
addl
cmp
cmp
sbb
in
test
mov
lea
jmp
mov
sub
xor
fnstsw
lcall
sbb
xor
sbb
movsb
add
xchg
pop
rcll
addb
adc
cmp
cmp
cmp
ja
scas
mov
cmp
lods
or
xchg
popf
inc
and
cli
in
pavgb
cltd
scas
pop
cmp
jno
test
cmp
adc
leave
js
pop
push
xlat
sub
mov
std
lcall
jb
pop
push
xchg
imul
mov
stos
cmp
sub
addb
adc
cmp
cmp
or
dec
xchg
in
xchg
outsb
push
mov
hlt
sahf
fnstsw
dec
push
test
mov
mov
addb
cmp
cmp
cs
outsl
pushf
iret
mul
sub
mov
xchg
out
jae
iret
jl
mov
sbb
icebp
int
movsl
scas
mov
or
mov
push
addb
adc
cmp
cmp
pop
jg
pusha
lcall
iret
inc
add
addb
adc
cmp
cmp
lret
insl
add
cmp
ja
fmul
mov
mov
adc
adc
cmp
cmp
mov
lds
lock
lea
shll
loopne
jns
adc
pushf
dec
inc
bound
addb
adc
cmp
cmp
pushf
inc
mov
mov
shrb
std
rolb
ja
icebp
dec
adc
into
lret
call
mov
jns
test
or
jb
adc
adc
cmp
cmp
add
aad
cmp
data16
popf
insb
jb
mov
addb
cmp
cmp
push
mov
inc
rcr
aam
addb
cmp
cmp
mov
das
cltd
cwtl
jp
cmp
addb
cmp
cmp
mov
out
dec
push
mov
test
adc
adc
cmp
cmp
mov
mov
fnsave
and
xor
add
addb
adc
cmp
cmp
cmp
sbb
jecxz
cmp
mov
sub
sti
dec
fnstenv
xchg
xchg
mov
jb
mov
mov
andl
adc
adc
cmp
cmp
mov
sbb
imul
cltd
and
adc
popf
push
roll
adc
adc
cmp
cmp
lods
addb
adc
cmp
cmp
dec
and
cmp
sbb
scas
jg
addb
adc
cmp
cmp
aaa
scas
jle
addb
cmp
cmp
mov
int
adc
sub
lcall
and
add
adc
adcb
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
sbb
jmp
jne
test
lods
inc
popa
addb
adc
cmp
cmp
mov
cs
sbb
adc
adc
cmp
cmp
sti
hlt
xchg
cmpb
xorl
addb
adc
cmp
cmp
push
adc
mov
mov
addb
cmp
cmp
out
lret
cwtl
jg
addb
adc
cmp
cmp
jle
mov
xor
mov
sub
sarb
push
sub
adcb
adc
cmp
cmp
mov
adc
in
push
aam
jne
jnp
enter
adc
subb
call
popl
adc
adc
cmp
cmp
movb
xchg
adc
insb
lcall
dec
mov
mov
sti
push
dec
clc
addb
adc
cmp
cmp
push
or
loope
aas
in
addb
adc
cmp
cmp
and
test
das
addb
adc
cmp
cmp
adc
xchg
addb
adc
cmp
cmp
inc
cs
adc
adc
cmp
cmp
popf
rcrl
in
mov
addb
cmp
cmp
mov
imul
mov
push
adc
inc
mov
mov
fwait
inc
push
pushf
add
loope
xorl
and
stc
dec
or
sbb
adcb
adc
cmp
cmp
mov
andb
lods
repz
jg
ljmp
cwtl
mov
adc
adc
cmp
cmp
dec
xchg
adcb
adc
cmp
cmp
mov
cmp
inc
std
fwait
cmp
xchg
loop
or
addb
cmp
cmp
jmp
xchg
or
and
push
insb
dec
ficoml
in
fs
and
adc
outsl
mov
addb
adc
cmp
cmp
daa
arpl
jne
icebp
js
jmp
jmp
pushf
sti
xor
adc
adc
cmp
cmp
mov
mov
xchg
addb
adc
cmp
cmp
xor
in
xor
jge
inc
addb
adc
cmp
cmp
or
dec
xchg
xor
rclb
or
insb
daa
push
mov
adcb
adc
cmp
cmp
mov
jno
inc
jle
addr16
in
mov
adc
adc
insl
stc
daa
gs
mov
or
sbb
pop
addb
adc
cmp
cmp
std
inc
pop
jg
test
addb
cmp
cmp
jecxz
cmp
push
addb
adc
cmp
cmp
mov
pop
xchg
int3
gs
outsl
fwait
sbb
adc
addb
cmp
cmp
mov
ret
and
mov
mov
addb
cmp
cmp
xor
push
shl
inc
imulb
rorl
lods
inc
bound
mov
lods
outsb
addb
adc
cmp
cmp
test
in
aaa
incl
cli
incl
adc
adc
cmp
cmp
add
cmp
dec
xchg
dec
popf
lods
jp
pop
push
in
mov
in
lods
jl
scas
je
xchg
mov
aad
cld
push
addb
adc
cmp
cmp
ret
rolb
stc
inc
sub
dec
xor
push
cltd
cmp
ljmp
addb
cmp
cmp
mov
dec
push
lret
fdivr
xchg
test
movsb
imul
mov
ficomps
xor
lods
jl
fnstcw
push
sbb
cmp
addb
cmp
cmp
mov
jae
cld
mov
adcb
adc
cmp
cmp
mov
and
mov
add
adcb
adc
cmp
cmp
mov
into
push
xchg
add
xchg
sahf
dec
dec
jl
pushf
ss
das
jge
pop
addb
adc
cmp
cmp
in
push
in
pop
push
sub
adc
adc
cmp
cmp
addb
adc
cmp
cmp
dec
mov
shll
cltd
das
hlt
adc
xchg
adc
pop
dec
sbb
mov
and
dec
jne
es
mov
pop
or
or
push
leave
add
adc
adc
cmp
cmp
or
addb
adc
cmp
cmp
or
adc
adc
cmp
cmp
into
addl
dec
sbb
mov
adc
addb
cmp
cmp
mov
xorb
addb
adc
cmp
cmp
inc
or
adc
scas
test
out
out
out
inc
adc
jnp
les
adc
adc
cmp
cmp
addb
adc
cmp
cmp
xchg
xor
inc
aam
cmc
push
sub
mov
cmpsl
addb
adc
cmp
cmp
and
arpl
adcb
adc
cmp
cmp
mov
mov
addb
cmp
cmp
mov
add
addb
adc
cmp
cmp
mov
insb
cmp
adc
aas
addb
movb
mov
sbb
cwtl
iret
pop
mov
popf
mov
adc
adc
cmp
cmp
mov
jecxz
out
es
cwtl
test
lds
hlt
outsl
and
and
repz
dec
popa
adc
addb
cmp
cmp
or
jge
pop
or
cwtl
std
push
mov
loope
xchg
addb
adc
cmp
cmp
mov
mov
imul
movsb
sbb
inc
imul
cmp
cmp
xchg
pop
insl
inc
push
mov
addb
cmp
cmp
mov
adc
rolb
addb
cmp
cmp
mov
dec
jp
mov
mov
leave
push
jo
adc
push
pop
add
adcb
adc
cmp
cmp
mov
inc
repz
aad
cmpsl
movb
adc
cmp
cmp
mov
push
stc
lock
add
adc
lret
pop
mov
dec
sub
test
insl
xchg
cltd
ret
dec
addb
adc
cmp
cmp
ret
add
xchg
mov
lods
push
sub
mov
insl
pop
jmp
addb
cmp
cmp
mov
iret
cmc
jno
push
adc
sti
xchg
adc
adc
cmp
cmp
js
rorl
imulb
adcb
adc
cmp
cmp
mov
lea
addb
cmp
cmp
mov
adc
ret
adc
cmp
test
ja
pop
mov
adcb
adc
cmp
cmp
mov
inc
in
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
inc
outsl
outsl
dec
mov
arpl
addb
cmp
cmp
mov
push
into
xor
data16
icebp
xchg
inc
and
popf
fs
movsb
pop
xor
aad
test
sub
or
cmp
dec
nop
inc
imul
mov
adcb
adc
cmp
cmp
mov
push
addb
adc
cmp
cmp
cs
fcmovb
mov
addb
cmp
cmp
mov
in
sbb
jno
addb
cmp
cmp
mov
cld
mov
addb
adc
cmp
cmp
or
fs
sub
sub
cld
xchg
aad
mov
sbb
insb
aad
lods
jae
popa
xchg
sub
das
test
ss
mov
and
push
outsb
enter
jnp
loope
push
mov
addb
adc
cmp
cmp
xchg
les
pop
sbb
push
jb
mov
adcb
adc
cmp
cmp
mov
xor
jae
push
daa
pop
lods
add
pop
addb
adc
cmp
cmp
mov
mov
pop
pop
hlt
stc
sbb
adc
adc
cmp
cmp
je
mov
ss
lahf
xchg
mov
shr
out
cs
es
rcr
addb
cmp
cmp
mov
ficompl
jnp
cmpb
adcb
adc
cmp
cmp
mov
xchg
pop
fildll
sahf
shrb
ljmp
pushf
xchg
or
or
addb
cmp
cmp
loope
or
aad
xor
pop
adc
cmp
and
addb
adc
cmp
cmp
dec
mov
lahf
push
and
dec
addb
adc
cmp
cmp
cld
xchg
cmp
daa
pop
or
inc
pop
dec
movsl
cwtl
cmp
cmp
push
mov
mov
js
jns
fwait
lret
jae
pop
mov
push
lock
adc
cmp
cmp
mov
addb
cmp
cmp
mov
cmpsb
mov
rcrb
push
jns
orb
addb
adc
cmp
cmp
mov
mov
pusha
scas
loopne
cs
shll
addb
cmp
cmp
mov
xor
sub
push
adc
mov
jbe
test
aaa
add
cmp
sub
fisubl
leave
ret
scas
push
pop
xchg
pop
fsubr
out
cltd
cmpsl
jae
dec
mov
roll
adc
adc
cmp
cmp
in
adc
js
insb
mov
imul
fdivs
cmpsb
fwait
inc
shlb
cmp
shrl
jmp
and
bound
addb
cmp
cmp
mov
pop
add
xchg
mov
test
mov
cmp
notw
addb
adc
cmp
cmp
xor
pushf
shl
or
push
sub
addb
cmp
cmp
stc
xchg
dec
incb
in
xchg
mov
iret
rorl
je
xchg
add
addb
adc
cmp
cmp
fdivl
addb
cmp
cmp
pop
in
sbb
lods
or
movsl
daa
push
loope
icebp
scas
jno
outsb
cs
rcr
addb
adc
cmp
cmp
pop
insl
xor
addb
adc
cmp
cmp
sbbb
loopne
add
adcb
adc
cmp
cmp
mov
les
ficoml
cmpsl
ds
ret
push
dec
pop
rcl
outsl
daa
or
fwait
xchg
iret
xchg
fcomp
addb
adc
cmp
cmp
test
or
addb
adc
cmp
cmp
sub
and
movsl
bound
cmp
addb
cmp
cmp
mov
popf
push
jge
mov
adc
adc
cmp
cmp
mov
add
adcb
adc
cmp
cmp
mov
jno
out
or
inc
jg
xchg
dec
ds
test
es
in
mov
inc
fcmovnbe
cmp
fidivrl
test
adc
adc
cmp
cmp
mov
in
stos
call
movsl
xchg
and
fldl2t
pop
ret
inc
sti
shrb
lret
addb
adc
cmp
cmp
or
mov
nop
or
out
xlat
ror
sub
xchg
mov
inc
sahf
pop
and
pop
hlt
popf
mov
add
add
add
cltd
fadd
nop
mov
mov
mov
addb
cmp
cmp
sti
aad
xchg
mov
les
cmpsl
rorb
dec
add
cmc
and
sub
mov
push
daa
addb
adc
cmp
cmp
xlat
call
out
movsl
and
repnz
mov
dec
cmpsl
or
cmp
lahf
jae
leave
pushf
dec
add
sub
addb
adc
cmp
cmp
ds
cld
push
test
addb
adc
cmp
cmp
jl
pop
hlt
jbe
fs
insl
mov
adc
dec
scas
dec
addb
adc
cmp
cmp
cmp
jecxz
cld
jp
lods
lock
mov
adc
or
mov
das
in
jno
addb
adc
cmp
cmp
sbb
addb
adc
cmp
cmp
jmp
jb
lods
mov
stos
xchg
es
and
sub
xchg
loop
push
add
das
ds
insl
dec
outsb
adc
sbb
xchg
mov
mov
dec
arpl
jae
pop
inc
lcall
sub
out
mov
inc
jge
ds
cmp
cltd
icebp
dec
mov
jge
pop
cld
lahf
xchg
data16
xchg
cltd
sub
pop
popf
mov
std
js
bound
stos
sti
addb
adc
cmp
cmp
mov
shl
push
addb
adc
cmp
cmp
addb
adc
cmp
cmp
ret
int3
xchg
repnz
imul
popa
jnp
sub
and
xchg
addb
adc
cmp
cmp
std
push
lds
addb
cmp
cmp
mov
lret
filds
scas
scas
out
xor
push
lods
jbe
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
loop
xchg
and
clc
stos
fadds
stos
mov
adc
sti
cmpsb
in
mov
mov
and
push
and
and
insl
or
jg
dec
addb
adc
cmp
cmp
mov
loopne
addb
cmp
cmp
mov
push
shrb
adc
in
or
inc
jnp
add
in
loop
add
lret
xchg
inc
xchg
cmp
cs
idiv
das
cmpsl
imul
mov
dec
je
sub
adc
sarl
xchg
insl
sbb
mov
sub
dec
dec
sbb
movsb
push
xchg
pop
pop
pop
cmc
push
add
mov
push
cmp
dec
jecxz
addb
adc
cmp
cmp
addb
adc
cmp
cmp
test
out
imul
mov
addb
adc
cmp
cmp
xchg
xlat
cmp
scas
movsb
faddl
xor
mov
sbb
addb
adc
cmp
cmp
ret
add
pusha
jmp
jmp
out
xlat
enter
mov
and
inc
pushf
add
addb
adc
cmp
cmp
insb
enter
addb
cmp
cmp
mov
cli
jae
jle
mov
jnp
jmp
loopne
orb
mov
test
mov
loopne
inc
add
mov
xchg
in
jnp
je
and
adc
addl
xlat
test
addb
adc
cmp
cmp
xchg
jb
push
in
inc
xor
mov
ret
enter
stc
dec
hlt
lret
gs
movb
scas
pop
lock
mov
pop
dec
shlb
stos
sub
push
and
adc
adc
cmp
cmp
daa
pop
std
mov
addb
cmp
cmp
mov
fsubl
hlt
dec
fmuls
gs
sub
cmpsl
imul
popl
adc
adc
cmp
cmp
mov
inc
pushf
jg
ret
jnp
stc
shl
loope
addb
cmp
cmp
mov
in
push
enter
in
xchg
loop
call
or
rcrl
lahf
shr
insl
test
jb
jl
nop
dec
je
dec
and
cmp
outsb
jno
inc
mov
addb
cmp
cmp
mov
cmpsl
dec
mov
adc
addb
cmp
cmp
int
dec
xor
in
cmc
popa
pop
add
mov
out
addr16
pushf
inc
xor
add
dec
repz
test
cwtl
mov
addb
cmp
cmp
mov
nop
mov
ja
pop
jle
mov
movb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
test
addb
adc
cmp
cmp
cmp
aas
mov
cmc
ja
cli
add
repz
jl
cmp
outsl
pop
pop
addb
adc
cmp
cmp
rorb
xor
mov
enter
les
imul
outsb
pop
jg
pop
sti
sahf
adc
push
js
xor
mov
xchg
idivb
add
push
test
addb
adc
cmp
cmp
sbb
shll
cwtl
cmp
mov
adc
addb
cmp
cmp
mov
inc
xchg
pop
lds
addl
pop
and
or
jmp
addb
cmp
cmp
mov
test
xchg
es
xchg
push
cmpsl
pop
repz
jnp
adc
xlat
inc
addr16
sub
call
addb
cmp
cmp
sahf
mov
push
cmpb
addb
adc
cmp
cmp
jo
repnz
and
pop
addb
adc
cmp
cmp
ja,pn
xor
orb
xor
enter
or
or
jnp
xchg
int
fsubr
sub
pop
decl
dec
icebp
sub
out
ja
popf
js
cltd
xchg
jo
mov
pop
mov
int3
push
daa
sub
adc
adc
cmp
cmp
cmc
dec
addb
adc
cmp
cmp
movsb
mov
xchg
ret
xor
xchg
scas
cmpsl
std
call
sub
cltd
pop
jb
dec
xorl
fistps
pop
pop
inc
rcl
and
push
outsl
mov
dec
sahf
pop
mov
movsl
jbe
icebp
and
fisttpll
sbbl
sarl
sbb
cmc
std
dec
frstor
jmp
adcb
adc
cmp
cmp
mov
sbb
imul
fstl
sbb
loop
pop
lahf
jl
pcmpgtb
lret
jo
movb
aas
jne
divb
pop
cmp
movb
addb
cmp
cmp
mov
addb
adc
cmp
cmp
fdivl
sbb
adc
adc
cmp
cmp
cmp
push
jp
je
arpl
div
mov
inc
or
sbb
inc
int
mov
out
pop
sub
cltd
dec
mov
addb
adc
cmp
cmp
mov
repz
addb
cmp
cmp
sbb
xor
mov
leave
sti
punpcklwd
sbb
int3
fldenv
imul
dec
popf
pop
ret
mov
out
dec
fidivrl
xor
adcb
adc
cmp
cmp
mov
stc
mov
add
dec
out
test
inc
sbb
addb
adc
cmp
cmp
loop
mov
fldl
sub
addb
cmp
cmp
mov
loop
push
outsb
xchg
xchg
rolb
adc
cmp
cmp
mov
mov
adc
jle
inc
lcall
jmp
inc
jae
mov
sarb
push
cli
imul
arpl
xchg
hlt
mov
cmp
test
and
sub
stos
adc
rcrb
jne
pop
pop
aas
sti
push
testl
cmp
cmp
mov
or
popf
or
xor
scas
outsb
add
fsubrs
xchg
sub
push
sbb
jge
add
addb
cmp
cmp
pop
bound
adc
adc
cmp
cmp
imull
adc
adc
cmp
cmp
mov
in
jae
loop
fcmovnb
inc
std
roll
adc
cmp
addb
cmp
cmp
pop
stos
push
jl
addb
cmp
cmp
mov
inc
popa
and
or
push
mov
pop
xor
addb
cmp
cmp
sbbl
inc
sar
pop
in
pop
mov
testl
adc
adc
cmp
cmp
mov
xlat
gs
adc
adc
adc
add
repnz
lret
addb
adc
cmp
cmp
test
ss
call
lahf
outsl
lods
cmp
mov
inc
inc
fcoml
lcall
adc
adc
cmp
cmp
pop
pop
jecxz
fstl
adc
adc
adc
cmp
cmp
mov
in
jl
mov
or
push
cmpsl
push
pop
push
jne
mov
rolb
add
adcb
addb
cmp
cmp
xor
addb
adc
cmp
cmp
in
mov
xchg
adc
in
decb
addb
adc
cmp
cmp
mov
scas
cmp
ljmp
adcb
adc
cmp
cmp
mov
xchg
or
pop
scas
pop
mov
fst
stos
es
lds
lret
shlb
test
addb
adc
cmp
cmp
pop
repnz
pop
and
orb
dec
pop
andl
or
mov
daa
dec
hlt
or
cmp
xchg
mov
cmc
pop
push
aas
hlt
jg
cmp
fistpl
loop
dec
or
pop
imul
add
lahf
inc
movsl
stc
cmp
repz
pop
addb
adc
cmp
cmp
mov
inc
clc
sbb
and
int
rclb
lea
adc
or
mov
scas
push
fistps
sub
dec
cmp
addr16
or
add
mov
aas
repnz
enter
addb
adc
cmp
cmp
dec
pop
jp
jo
xor
lahf
jp
jbe
out
xchg
dec
leave
pushfw
outsl
and
roll
cld
push
sbb
mov
pop
loop
and
mov
adcb
adc
cmp
cmp
mov
in
int3
daa
fisubrl
addb
adc
cmp
cmp
jmp
jmp
test
and
mov
adc
adc
cmp
cmp
mov
out
inc
icebp
fnstcw
jp
fs
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jecxz
addb
cmp
cmp
mov
cmpsb
popa
loope
push
movsl
cltd
popa
xchg
es
into
ret
push
mov
jbe
mov
dec
addb
adc
cmp
cmp
enter
addb
cmp
cmp
mov
das
mov
xchg
dec
mov
mov
addb
adc
cmp
cmp
inc
addl
outsl
cmp
push
ret
addb
adc
cmp
cmp
add
lds
add
mov
push
sbb
push
pop
dec
mov
out
out
xor
mov
push
loop
addb
adc
cmp
cmp
push
outsl
bound
push
push
int3
sbb
daa
enter
addb
cmp
cmp
mov
inc
add
mov
cwtl
xchg
push
xor
mov
repz
cs
dec
test
cmpsl
cmc
cltd
mov
xchg
push
es
dec
repnz
nop
lds
addb
adc
cmp
cmp
mov
pop
mov
cwtl
addb
adc
cmp
cmp
xchg
inc
sub
pop
addb
adc
cmp
cmp
je
lahf
arpl
adc
adc
cmp
cmp
mov
sbb
sbb
adc
adc
cmp
cmp
lea
data16
insb
loope
ss
xor
jne
xchg
mov
addb
cmp
cmp
add
insb
jle
cmc
aas
pop
inc
jg
stc
frstor
xor
nop
cmovp
ja
jge
sti
stos
adc
add
pop
adc
mov
inc
and
mov
clc
or
xor
cmp
fiadds
sbb
repz
cltd
cmp
push
adcl
cmp
add
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
push
adc
xor
fmul
cmp
insl
mov
pop
add
mov
adc
adc
cmp
cmp
mov
xor
out
adc
or
fldl
mov
pushf
xor
in
and
cmp
cmp
sub
jo
cs
addb
adc
cmp
cmp
out
insl
movsl
adc
mov
adcb
adc
cmp
cmp
mov
dec
inc
or
xchg
loopne
sti
js
fdivs
push
xchg
mov
dec
jp
jnp
or
addb
cmp
cmp
or
mov
icebp
cmp
adcb
adc
cmp
cmp
mov
shrb
push
push
fdivs
sub
dec
sub
repnz
nop
mov
dec
addb
adc
cmp
cmp
jnp
lret
dec
sti
adc
leave
add
fsubrl
bound
sub
push
ds
adc
cmp
cmp
mov
push
pop
or
mov
bound
out
push
movsl
addb
adc
cmp
cmp
jb
addb
adc
cmp
cmp
sti
sub
lcall
out
mov
addb
adc
cmp
cmp
addr16
addb
adc
cmp
cmp
add
adc
adc
cmp
cmp
xchg
es
adc
adc
cmp
cmp
mov
pop
sub
or
push
addb
adc
cmp
cmp
jmp
cmovl
stos
ds
pop
inc
addb
adc
cmp
cmp
pop
addb
adc
cmp
cmp
jns
into
stc
ja
pop
xchg
scas
loop
xchg
pop
pop
mov
pushf
dec
popf
fildl
icebp
cwtl
pop
cwtl
inc
test
mov
adcb
adc
cmp
cmp
mov
push
lds
popf
sub
jb
or
stos
scas
in
mov
sub
enter
fwait
shll
sbb
fwait
insb
push
and
push
mov
xlat
xchg
sar
dec
ljmp
sbb
or
andl
or
imul
addb
cmp
cmp
fidivrs
gs
scas
sbb
sbb
cld
daa
ljmp
into
jle
sub
addb
adc
cmp
cmp
fnstcw
mov
dec
fwait
inc
sar
jno
lods
and
popa
cli
addb
adc
cmp
cmp
xchg
fistps
das
adc
pmuludq
cmp
dec
addb
adc
cmp
cmp
scas
xor
cld
add
pop
ja
jecxz
mov
cli
pop
adc
dec
sub
dec
mov
int
mov
pusha
cmp
clc
xchg
jo
into
xor
adc
adc
cmp
cmp
dec
enter
xchg
adc
jbe
cmp
addb
cmp
cmp
in
aaa
addb
adc
cmp
cmp
outsl
addb
adc
cmp
cmp
pop
arpl
outsl
icebp
scas
shl
push
pop
sbb
addb
cmp
cmp
ret
xchg
xchg
mov
incb
adc
adc
cmp
cmp
in
hlt
hlt
jge
push
pop
clc
cmp
cmpsb
xor
shrb
xor
dec
pop
push
inc
xchg
repnz
pop
sbb
sbb
ds
sub
cwtl
jmp
dec
adc
dec
pop
adc
jbe
es
addb
cmp
cmp
mov
gs
pop
test
sub
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
mov
clc
movsl
fwait
int
jg
sub
xchg
aad
mov
outsl
insb
xchg
mov
cld
push
sub
sar
lds
iret
testb
adcb
adc
cmp
cmp
mov
sbb
pop
adc
les
cmpb
xchg
push
sbb
loopne
adc
call
xor
xchg
mov
aam
out
xchg
jno,pt
inc
scas
sbb
js
lods
and
clc
out
inc
xlat
mov
js
ja
cmp
addb
adc
cmp
cmp
into
leave
sahf
movsl
outsl
movsb
rol
std
mov
adcb
adc
cmp
cmp
mov
pop
mov
shrb
popa
movsb
aad
jg
outsb
fwait
jl
cld
inc
das
sbb
lret
sub
jp
lds
dec
xchg
aas
cmp
inc
fidivl
lahf
lret
cwtl
addb
adc
cmp
cmp
lock
sahf
imul
adc
adc
cmp
cmp
mov
push
mov
adcb
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
mov
sbb
mov
arpl
add
adc
adc
cmp
cmp
push
test
mov
fidivrs
add
or
add
clc
pop
adc
addb
cmp
cmp
mov
jl
cmc
jmp
pop
xchg
xchg
ret
adc
dec
and
adc
adc
cmp
cmp
mov
shufps
push
lret
addb
adc
cmp
cmp
pusha
jne
dec
clc
addb
adc
cmp
cmp
lret
bound
adc
adc
cmp
cmp
xor
fistl
std
xchg
stos
mov
out
sub
dec
mov
addl
push
jge
sbb
addb
adc
cmp
cmp
pop
popf
cmp
adc
adc
cmp
cmp
rolb
adc
cmp
cmp
mov
test
cli
mov
mov
pop
leave
nop
mov
movl
fwait
cmpsb
out
sub
pop
fadd
insb
addb
adc
cmp
cmp
push
add
aas
add
addb
adc
cmp
cmp
lret
push
xchg
mov
dec
testb
adc
adc
cmp
cmp
addb
adc
cmp
cmp
inc
sub
cmp
fs
lret
lahf
push
add
mov
mov
jle
aaa
ds
out
imul
addb
adc
cmp
cmp
xor
loope
arpl
es
mov
mov
xchg
pusha
sub
mov
addb
adc
cmp
cmp
addb
adc
cmp
cmp
idivl
fs
in
fs
jb
push
mov
cwtl
or
fisubrl
or
andl
cli
orb
addb
cmp
cmp
mov
inc
into
mov
adcb
adc
cmp
cmp
mov
pusha
inc
in
pop
push
mov
adc
adc
cmp
cmp
in
iret
cli
lcall
adc
adc
cmp
cmp
mov
rolb
adc
adc
cmp
cmp
aas
lcall
adc
adc
cmp
cmp
mov
inc
dec
xor
jo
outsl
push
jl
icebp
pusha
sbb
out
pop
or
test
or
addb
cmp
cmp
mov
cmp
adc
adc
cmp
cmp
xchg
jb
pusha
pop
cmp
and
adc
adc
cmp
cmp
mov
sub
mov
xchg
mul
pop
nop
rol
rclb
testl
cwtl
adc
pop
mov
jg
call
sbb
jl
lock
ficoms
push
push
cmp
sbb
mov
mov
into
sbb
addb
cmp
cmp
mov
out
or
push
test
inc
push
mov
sbb
aad
pop
cmp
cld
mov
jle
imul
adcb
adc
cmp
cmp
mov
insl
adc
add
adc
adc
cmp
cmp
mov
xchg
jecxz
addb
cmp
cmp
mov
test
add
adc
adc
adc
cmp
cmp
mov
test
out
lods
inc
adc
jmp
sbb
adc
adc
cmp
cmp
add
rep
fldenv
les
adcb
adc
cmp
cmp
mov
out
orl
jno
xchg
push
std
push
xlat
outsb
arpl
mov
mov
fs
jmp
sbb
push
bound
pop
std
dec
rolb
add
hlt
add
lods
or
or
jmp
pop
je
addb
cmp
cmp
mov
lods
mov
mov
or
mov
sti
lock
outsl
add
jo
aas
mov
outsl
call
adc
or
clc
xchg
imul
outsb
push
and
push
addb
adc
cmp
cmp
shl
or
addb
cmp
cmp
mov
ds
cmp
pusha
push
std
je
jp
push
inc
inc
andl
cli
addb
adc
cmp
cmp
std
das
jge
ja
jmp
adc
adc
cmp
cmp
mov
mov
addb
cmp
cmp
mov
xor
ljmp
sbb
mov
scas
sub
push
xchg
iret
cmp
lods
addb
adc
cmp
cmp
cmc
cltd
rorb
addb
adc
cmp
cmp
test
addb
repnz
xchg
ja
sarl
sti
addb
cmp
cmp
mov
add
adc
adc
cmp
cmp
cmc
adc
pop
dec
ret
add
xor
xor
jo
addb
adc
cmp
cmp
movsl
mov
pop
adc
push
xchg
mov
cld
scas
dec
mov
adc
outsb
mov
fdivrs
mov
jnp
push
dec
addb
adc
cmp
cmp
lea
dec
je
scas
push
cmp
pop
and
jle
stos
clc
insl
adc
popa
js
pop
xor
call
fstl
addb
cmp
cmp
mov
shlb
adcb
adc
cmp
cmp
mov
sbb
pop
imul
cmpl
push
mov
mov
orl
call
fiaddl
xchg
dec
addb
adc
cmp
cmp
addb
adc
cmp
cmp
xor
pop
inc
out
repz
adc
cmp
cmp
push
mov
repnz
xchg
push
push
leave
loopne
into
roll
inc
pusha
add
pop
mov
pushl
inc
idivl
and
mov
xorb
jae
adc
cmp
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
sbb
jns
addb
cmp
cmp
mov
loope
outsl
mov
aas
sub
mov
jno
js
inc
pop
rclb
push
inc
jge
subl
cmp
add
or
shrl
outsl
push
leave
jmp
adcb
adc
cmp
cmp
mov
push
sahf
shll
aad
mov
addb
cmp
cmp
mov
push
push
loope
pop
dec
dec
xchg
and
xlat
add
out
inc
or
enter
into
loop
mov
pop
das
fnclex
addb
adc
cmp
cmp
mul
inc
xchg
sarb
sub
push
loope
bound
mov
addb
cmp
cmp
mov
inc
test
adc
jge
xor
dec
call
aad
repz
jle
or
adc
adc
cmp
cmp
jno
inc
hlt
jo
call
insb
out
dec
iret
call
pop
cmpsl
mov
adcb
adc
cmp
cmp
mov
test
addb
cmp
cmp
adc
outsl
push
andb
addb
cmp
cmp
adc
sub
addb
cmp
cmp
mov
xor
dec
push
push
adc
jne
aas
and
mov
cmp
addb
adc
cmp
cmp
test
adc
jl
push
gs
addb
adc
cmp
cmp
loop
addb
cmp
cmp
mov
mov
and
mov
lahf
xor
addb
cmp
cmp
mov
cwtl
test
dec
push
into
dec
imul
inc
or
xlat
dec
add
xchg
sbb
adcb
adc
cmp
cmp
mov
les
aaa
shlb
cmp
test
pop
addb
adc
cmp
cmp
out
jbe
and
rorb
cmpsl
inc
sub
test
clc
out
rclb
adc
adc
cmp
cmp
mov
or
inc
cmpsl
lahf
jbe
scas
mov
sub
rolb
pop
or
mov
inc
mov
cs
pop
xchg
out
cmp
call
rorl
xor
int3
fldcw
fwait
adc
lods
fs
ss
je
dec
cmc
pop
addb
adc
cmp
cmp
pop
xchg
xchg
es
scas
or
movsl
movsb
sbb
cltd
imul
xor
les
ficoms
out
jge
addb
cmp
cmp
mov
pop
push
negl
dec
push
pop
shl
or
enter
int
xor
push
xchg
sar
and
sub
int
fisttpll
mull
mull
addb
cmp
cmp
mov
jno
xchg
add
and
pop
stc
std
mov
mov
les
fxch
pop
or
adc
and
stos
imul
push
dec
repnz
sbb
imul
addb
cmp
cmp
mov
lods
jbe
mov
repz
outsb
or
mov
push
add
insb
add
cli
clc
push
es
imull
mov
push
xchg
add
addb
adc
cmp
cmp
cmp
adcb
adc
cmp
cmp
mov
push
adc
dec
testb
mov
mov
addb
cmp
cmp
lods
mov
adcb
adc
cmp
cmp
mov
pop
sbb
ficoml
adc
cmp
or
add
jmp
addb
cmp
cmp
into
mov
stos
fcoms
lea
test
outsb
lret
and
pop
aaa
xchg
ds
lahf
lods
mov
sub
addb
cmp
cmp
mov
or
int
std
das
mov
adc
addb
cmp
cmp
mov
sbb
adcb
adc
cmp
cmp
mov
push
mov
and
stos
stos
aad
jmp
pop
inc
add
adc
addb
cmp
cmp
mov
mov
push
call
daa
mov
std
pop
xchg
adc
addb
adc
cmp
cmp
lret
shll
aas
mov
xor
std
lock
sti
mov
int3
sbb
xchg
addb
adc
cmp
cmp
scas
out
adc
adc
cmp
cmp
mov
sbbl
push
adc
cmp
adcb
adc
cmp
cmp
mov
inc
dec
cli
xor
sbb
lahf
cli
ss
mov
push
ret
inc
sbb
in
mov
add
loopne
xchg
pop
addb
adc
cmp
cmp
xchg
adc
outsb
ret
xlat
fs
pushf
or
rorb
cmp
scas
inc
mov
sbb
adcb
adc
cmp
cmp
mov
pop
test
xchg
sub
push
orl
mov
pop
in
mov
pop
add
and
pop
pop
sub
sbb
mov
cltd
or
xor
icebp
addb
adc
cmp
cmp
stc
mov
adcb
adc
cmp
cmp
mov
fimuls
fnstsw
mulb
jns
pop
cmc
daa
lods
mov
in
addb
adc
cmp
cmp
xor
or
push
and
stos
push
addb
cmp
cmp
mov
cmp
gs
dec
jb
movb
adc
cmp
cmp
mov
nop
les
and
mov
fildll
lret
mov
addb
cmp
cmp
mov
imul
pushf
jmp
xchg
sti
loope
test
cmp
bound
movsl
jnp
in
cltd
jmp
push
fistl
in
xchg
aad
sub
xor
lcall
shlb
add
xchg
outsb
stc
jbe
adc
scas
xor
adcb
adc
cmp
cmp
mov
lcall
xchg
jmp
stc
enter
jp
test
cmpsl
lret
xchg
nop
and
cltd
mov
out
aaa
or
mov
lahf
jp
fadds
adc
adc
cmp
cmp
adc
scas
and
or
or
std
mov
push
add
mov
mov
stos
cmc
xor
aaa
push
or
adc
addb
adc
cmp
cmp
dec
addb
adc
cmp
cmp
jl
cmp
push
fsubp
fchs
iret
pop
imul
or
dec
addb
adc
cmp
cmp
dec
jnp
arpl
sbb
mov
mov
icebp
sbb
push
pop
or
xchg
mov
insl
pusha
or
xorb
push
or
addb
cmp
cmp
rorl
addb
adc
cmp
cmp
clc
jo
rolb
adc
adc
cmp
cmp
inc
imul
flds
or
mov
adc
adc
cmp
cmp
mov
leave
idivb
pop
jns
dec
fdivs
mov
dec
aas
movsl
or
int3
rcrl
addb
adc
cmp
cmp
mov
add
leave
out
cmpsl
and
pop
mov
aaa
out
or
addb
cmp
cmp
mov
in
mov
fdivrl
test
adc
addb
cmp
cmp
mov
mov
stos
xchg
insb
imul
adc
cmp
cmp
inc
sbb
mov
iret
and
or
repnz
addb
adc
cmp
cmp
out
addb
adc
cmp
cmp
jle
popf
xchg
cmc
bound
or
fistpll
dec
inc
sub
pop
scas
addb
adc
cmp
cmp
mov
jb
dec
xchg
xor
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
inc
shrl
adc
aam
adc
repz
inc
shrl
adc
adc
cmp
cmp
mov
pusha
outsb
push
or
addb
adc
cmp
cmp
fstpt
jno
cmp
cmp
lret
fmulp
jo
mov
mov
rcrb
fcompl
addb
adc
cmp
cmp
js
sbb
daa
idivl
sub
aam
xor
push
mov
mov
adc
adc
ds
xchg
lods
mov
pop
mov
xchg
fistps
cmpsl
inc
ret
mov
addb
adc
cmp
cmp
xchg
addb
adc
cmp
cmp
jae
push
cld
xor
sarl
loop
fwait
push
pop
cmp
cwtl
imul
mov
mov
adc
adc
cmp
cmp
mov
pop
mov
sbb
dec
push
push
xor
sti
mov
ja
cs
movsb
or
faddl
adc
adc
cmp
cmp
mov
push
adc
fnsave
adc
test
loopne
sub
jnp
addb
adc
cmp
cmp
sub
jge
test
bound
loope
adc
insb
xchg
in
jnp
mov
xor
xchg
adc
adc
cmp
cmp
push
sub
sub
mov
movsl
xchg
addb
adc
cmp
cmp
jo
mov
addb
adc
cmp
cmp
lea
adc
adc
cmp
cmp
cmp
mov
nop
dec
ljmp
ja
addb
adc
cmp
cmp
push
xchg
inc
addb
adc
cmp
cmp
test
sub
push
sti
aam
dec
ret
sbb
mov
loop
test
ljmp
mov
incl
ja
cmp
xor
addb
cmp
cmp
mov
das
addb
adc
cmp
cmp
mov
fadd
add
sarl
adcb
mov
sahf
mov
jle
or
sub
insb
ds
push
xor
sahf
mov
rcrb
mov
mov
jecxz
stos
dec
and
mov
fnstsw
cmp
addb
adc
cmp
cmp
in
dec
or
insl
std
mov
loop
push
xlat
mov
dec
sub
pushf
pop
fwait
pushf
and
outsl
lcall
movsb
mov
popf
hlt
ret
ret
les
and
fmulp
adc
jne
in
mov
add
cmp
mov
or
addr16
ja
addb
cmp
cmp
mov
pop
mov
xchg
roll
xchg
pop
cli
cmpsb
mov
add
scas
inc
mov
sahf
adc
pop
jmp
push
shrb
das
sub
or
and
rcrl
mov
pop
mov
push
inc
push
enter
fs
test
clc
cmp
test
jecxz
cmp
cli
pop
mov
add
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
loopne
cmpsb
std
repz
cmp
addb
cmp
cmp
inc
out
es
cmp
jbe
insb
and
or
push
dec
dec
mov
je
pop
cmp
mov
jbe
pop
lea
dec
and
xlat
or
and
fbstp
addb
adc
cmp
cmp
out
outsl
mov
jle
mov
insb
addb
adc
cmp
cmp
sbb
mov
pushf
and
addb
adc
cmp
cmp
pop
xchg
mov
and
or
xor
je
sbb
cmp
jne
subl
addb
adc
cmp
cmp
sbb
dec
ret
jne
inc
push
inc
mov
push
xor
and
es
mov
jp
and
jb
insb
adc
addb
cmp
cmp
mov
insb
mov
or
xor
push
mov
mov
into
inc
into
sahf
add
pop
or
loop
push
lret
push
pop
loopne
ja
std
sti
out
inc
fildl
mov
adc
adc
cmp
cmp
mov
ja
shlb
ret
mov
fnstsw
leave
sbb
popa
cltd
adc
mov
adc
dec
hlt
int3
lret
mov
idiv
xlat
mov
mov
cmp
or
cmpsb
stos
data16
push
addb
adc
cmp
cmp
imul
ljmp
mov
inc
sarl
or
pop
mov
and
shrl
out
aad
push
push
xor
fnsave
sbb
adc
adc
cmp
cmp
jge
add
adc
adc
cmp
cmp
mov
mov
dec
jge
cs
enter
jle
xchg
add
sahf
mov
lea
out
jns
xor
and
mov
push
lock
pop
fwait
pop
sub
enter
sbb
adc
adc
cmp
cmp
sub
int
add
in
add
adc
adc
cmp
cmp
jecxz
in
jbe
pop
lahf
xchg
daa
jo
xchg
outsl
dec
dec
jne
fisttps
addb
cmp
cmp
je
sbb
in
jle
iret
js
or
out
push
popf
sub
repz
insb
xor
dec
imul
addb
cmp
cmp
mov
fs
adc
adc
cmp
cmp
mov
jo
bswap
cmp
int3
add
hlt
dec
and
les
addb
cmp
cmp
mov
inc
xchg
sbb
and
bound
jno
addb
adc
cmp
cmp
faddl
fildll
lock
pop
cwtl
push
inc
cmp
js
roll
adc
cmp
cmp
mov
icebp
cmc
cmp
adc
adc
cmp
cmp
mov
push
cltd
adcl
pop
icebp
sub
mov
shlb
ror
pushf
add
addb
adc
cmp
cmp
ret
mov
enter
out
outsl
xchg
xlat
jg
stc
or
dec
ret
dec
push
cmp
inc
or
push
push
fadd
dec
pop
cmp
clc
sub
adc
adc
cmp
cmp
mov
loope
xor
ja
adc
inc
and
adc
adc
cmp
cmp
push
cs
mov
adc
movl
cmp
cmp
repz
outsl
stos
add
pop
dec
inc
ds
fucom
pop
mov
mov
mov
arpl
jmp
repnz
push
xor
mov
mov
pop
mov
stos
pop
mov
adcb
adc
cmp
cmp
mov
jae
push
adc
fidivrl
sub
addb
adc
cmp
cmp
jbe
aad
mov
addb
cmp
cmp
cmp
mov
mov
mov
ret
mov
jb
xor
or
pusha
sbb
cmp
cmp
pop
sub
int
hlt
loopne
addb
adc
cmp
cmp
js
loope
or
add
add
sbb
push
adc
mov
addb
cmp
cmp
mov
jns
or
lock
or
addb
adc
cmp
cmp
mulb
fnstsw
les
lock
ja
mov
fidivs
sub
fwait
in
lret
xchg
call
testb
adc
cmp
cmp
mov
xor
cltd
out
mov
fists
add
mov
in
fiaddl
sbb
pop
es
gs
xchg
addb
cmp
cmp
mov
sbb
minps
int3
jecxz
inc
cwtl
or
gs
addb
cmp
cmp
mov
js
arpl
adc
adc
cmp
cmp
mov
decl
adc
icebp
shlb
aas
sahf
cmc
dec
jns
sub
jecxz
lea
mov
jmp
ffreep
repz
aas
stos
pop
lahf
ljmp
jb
lea
adc
adc
cmp
cmp
xchg
aam
mov
jo
icebp
cmpsl
cmp
sub
sbb
pmuludq
cmp
add
insl
sub
in
push
push
dec
push
iret
cmpsb
lea
data16
daa
adc
jge
into
clc
and
sti
xor
jp
loopne
push
push
jg
je
sbb
or
ja
addb
cmp
cmp
mov
flds
das
dec
push
cld
mov
movsb
repnz
or
loope
xor
sub
nop
push
jp
cmp
addb
cmp
cmp
xchg
xchg
cli
clc
divl
dec
jl
rcr
mov
fwait
push
repz
shlb
shlb
mov
in
addb
adc
cmp
cmp
aad
or
cltd
outsl
scas
cmc
mov
adc
adc
cmp
cmp
mov
loopne
std
pusha
cs
dec
sti
jmp
sbb
adc
adc
cmp
cmp
jmp
mov
xchg
rorl
lret
mov
addb
cmp
cmp
mov
lret
dec
cmp
sbb
in
cmp
push
adc
or
xor
ret
ret
jl
daa
dec
es
xchg
js
ja
gs
sarb
sub
pop
add
into
movl
cmp
cmp
addb
adc
cmp
cmp
outsb
pop
push
mov
mov
aam
sbb
lret
adc
hlt
mov
scas
cmp
sbb
mov
daa
cs
or
std
cltd
out
setno
fstpt
addb
adc
cmp
cmp
repz
data16
mov
push
mov
jle
xchg
pop
cmc
mov
and
fs
sbb
rcpps
and
xor
addb
adc
cmp
cmp
cmp
ficompl
ljmp
bound
push
in
dec
sti
loope
mov
adc
popa
xchg
inc
addb
adc
cmp
cmp
push
movsl
scas
or
loope
jge
mov
movsl
in
popf
flds
mov
lods
mov
iret
lahf
insb
mov
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
mov
inc
pop
neg
ret
aaa
cmp
adc
jg
aaa
fnstcw
js
xor
xor
lods
and
adc
adc
cmp
cmp
mov
push
loop
jg
cld
repnz
mov
mov
addb
cmp
cmp
mov
fdivs
mov
pop
pop
arpl
lds
adc
adc
cmp
cmp
loope
movsl
mov
adcb
adc
cmp
cmp
mov
lahf
push
mov
lods
out
addr16
mov
cmp
and
sub
ret
addb
adc
cmp
cmp
push
out
mov
imul
addb
adc
cmp
cmp
sub
pop
mov
les
in
mov
lds
adc
adc
cmp
cmp
mov
mov
sbb
xchg
jp
inc
clc
adc
iret
cmp
sbb
dec
or
aas
adc
mov
cmc
fbstp
jmp
add
sbb
mov
xor
adc
adc
cmp
cmp
decl
xor
adc
adc
cmp
cmp
mov
stos
push
mov
faddl
cmp
mov
jmp
or
pop
mull
outsb
inc
xor
out
dec
xchg
push
inc
in
icebp
dec
mov
sub
xor
pop
xorb
addb
cmp
cmp
jecxz
lods
cmpsl
and
adcb
adc
cmp
cmp
mov
cwtl
call
adcb
adc
cmp
cmp
mov
jns
stos
stos
roll
scas
or
push
test
fs
ja
lahf
addb
adc
cmp
cmp
addb
adc
cmp
cmp
jecxz
scas
push
js
mov
es
and
ja
dec
pop
adc
push
xor
lcall
lock
testb
adc
cmp
cmp
mov
outsl
mov
insl
test
adc
dec
sbb
fcomip
repnz
push
mov
dec
and
arpl
adc
adc
cmp
cmp
sbb
or
les
adc
mov
out
fcompl
mov
sti
sarb
pop
dec
inc
cmp
pop
jle
sub
mov
adcb
adc
cmp
cmp
mov
dec
jl
dec
adc
jecxz
mov
addb
cmp
cmp
push
xchg
adc
adc
adc
adc
loop
inc
xchg
int3
ljmp
orl
push
dec
nop
pop
cmp
aas
xchg
cmpsl
idivb
leave
dec
in
fs
in
sub
addb
adc
cmp
cmp
scas
cmp
push
lret
xchg
mov
aaa
scas
mov
cmp
int3
in
inc
sbb
data16
out
in
and
mov
push
push
cmc
adc
outsl
sub
hlt
inc
cs
mov
inc
and
out
mov
outsl
fisttps
mov
addb
cmp
cmp
mov
je
push
sbb
inc
mov
push
mov
adc
adc
cmp
cmp
mov
fnstsw
pop
shll
nop
into
inc
adc
push
mov
lahf
rcrl
insb
dec
xchg
scas
pusha
xor
push
arpl
addb
cmp
cmp
mov
call
adcb
adc
cmp
cmp
mov
cltd
mov
test
mov
popf
mov
xchg
in
xor
arpl
xchg
dec
addb
adc
cmp
cmp
pop
sbbb
push
es
mov
nop
add
addb
adc
cmp
cmp
dec
loope
xchg
push
add
or
hlt
addb
adc
cmp
cmp
stos
mov
addb
adc
cmp
cmp
xor
cmpsb
imul
out
push
pusha
mov
fdivs
mov
sbb
xchg
mov
xlat
ret
ret
bswap
repz
adc
cmp
cmp
addb
adc
cmp
cmp
mov
in
cs
fwait
lock
addb
cmp
cmp
push
inc
mov
std
jp
pop
addb
adc
cmp
cmp
in
stos
sbbb
mov
addb
cmp
cmp
add
cmc
mov
lock
mov
xorb
xor
fs
daa
mov
adc
ret
push
jg
inc
cmpsb
out
addb
xlat
scas
add
dec
cmp
fisubrl
insl
fisttps
mov
push
jnp
loop
insl
pusha
aam
lds
mov
sbb
std
call
addb
cmp
cmp
mov
fwait
jl
addb
adc
cmp
cmp
ret
addb
cmp
cmp
mov
jle
addb
cmp
cmp
mov
push
xchg
notb
lret
pop
dec
push
sti
xchg
out
stc
push
das
aad
xchg
and
or
push
jae
jmp
addb
adc
cmp
cmp
shl
stc
mov
insb
cwtl
addb
adc
cmp
cmp
addb
adc
cmp
cmp
pop
mov
fldenv
cmp
pop
lret
stos
sbb
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
adc
add
cltd
out
sbb
movsl
dec
addb
adc
cmp
cmp
sub
adc
adc
cmp
cmp
xlat
push
inc
lea
pushl
ja
addb
cmp
cmp
mov
frstor
inc
xlat
xchg
adcl
and
mov
jae
addb
adc
cmp
cmp
dec
and
dec
test
mov
addb
adc
cmp
cmp
scas
jmp
int
pop
fsubrs
inc
xor
adc
repnz
adc
cmp
cmp
push
imul
jmp
adcb
adc
cmp
cmp
mov
mov
addb
adc
cmp
cmp
and
jb
sub
mov
dec
cmp
add
pop
dec
mov
xor
adc
adc
cmp
cmp
mov
jge
and
sbb
addb
cmp
cmp
cmp
cmp
pop
repz
out
add
xchg
lock
xchg
sbb
in
mov
pop
push
addb
adc
cmp
cmp
xchg
scas
ljmp
mov
lods
add
jg
adc
and
inc
addb
adc
cmp
cmp
test
cmpsb
add
fiadds
push
lea
pop
insb
repnz
mov
call
adc
adc
cmp
cmp
mov
clc
cli
fbld
adc
dec
pop
lret
addb
adc
cmp
cmp
sub
sbb
addb
adc
cmp
cmp
mov
jecxz
jmp
imul
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
mov
addl
pop
jb
sub
stc
mov
sti
iret
cmp
lods
addb
adc
cmp
cmp
pop
jge
xor
dec
adc
imul
jecxz
sbb
insb
adc
push
mov
mov
sbb
pop
pop
sub
mov
ljmp
test
aad
pop
popf
lret
mov
xor
add
or
jmp
addb
adc
cmp
cmp
fldl
adc
push
mov
mov
adcb
adc
cmp
cmp
mov
jne
mov
pushf
xchg
and
push
ljmp
mov
mov
push
mov
repnz
sti
lahf
popa
sbb
cli
dec
ret
mov
inc
imul
mov
es
loope
stc
repnz
cltd
or
das
fistpl
inc
xor
outsl
sbb
lahf
jge
fwait
iret
mov
shrl
popa
and
xor
and
addb
adc
cmp
cmp
dec
add
addb
cmp
cmp
mov
addb
adc
cmp
cmp
loop
xor
xchg
push
xor
pop
test
mov
push
scas
push
dec
into
iret
mov
push
addb
adc
cmp
cmp
xor
mov
addb
cmp
cmp
jp
movsl
out
mov
cmp
movsl
loope
out
jbe
mov
sbb
xchg
or
sub
loop
aad
pusha
sbb
addb
adc
cmp
cmp
mov
jns
inc
mov
adc
adc
cmp
cmp
pop
or
jge
addb
adc
cmp
cmp
sbb
xor
push
jns
fldpi
loope
daa
mov
xchg
xor
push
pop
push
call
sbb
dec
dec
cmp
popf
mov
push
into
mov
add
push
dec
mov
mov
movsl
xchg
or
ret
jbe
ss
and
rcrb
mov
addb
cmp
cmp
mov
xchg
cltd
inc
push
ljmp
popf
xchg
mov
xchg
dec
cs
push
cmp
ljmp
arpl
xchg
in
xor
sbb
mov
jnp
addb
adc
cmp
cmp
jae
pop
inc
icebp
shrb
xchg
push
sahf
loope
sub
adc
adc
cmp
cmp
mov
sub
adc
addb
cmp
cmp
mov
and
push
jbe
push
mov
addb
adc
cmp
cmp
push
dec
jmp
shrb
addb
cmp
cmp
pop
std
aaa
lock
test
repz
mov
aas
dec
rcr
pusha
les
cmp
dec
cld
cltd
addb
adc
cmp
cmp
mov
int3
mov
jmp
out
in
movsb
cmpl
cs
pop
test
arpl
pop
xor
jno
aam
sbb
arpl
addb
adc
cmp
cmp
jge
sub
cmp
outsl
or
psraw
ljmp
mov
xchg
add
cmc
inc
not
cli
aad
sbb
dec
and
mov
mov
rclb
sbb
jle
jg
cmp
mov
or
adcb
adc
cmp
cmp
mov
out
out
addb
adc
cmp
cmp
pop
out
jnp
addb
cmp
cmp
mov
iret
aaa
xchg
xor
clc
shrb
addb
cmp
cmp
dec
cmp
nop
lea
cmpsb
call
addb
adc
cmp
cmp
scas
addb
adc
cmp
cmp
call
ljmp
push
dec
and
in
insb
lret
dec
jb
std
adc
mov
xchg
mov
addb
cmp
cmp
mov
lock
jl
xor
inc
sub
mov
jg
loope
sub
addb
adc
cmp
cmp
xchg
push
std
stos
dec
mov
addb
adc
cmp
cmp
mov
adc
adc
cmp
cmp
mov
cmp
jg
jp
rolb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
sub
addb
cmp
cmp
mov
cltd
dec
mov
xchg
mov
inc
dec
mov
scas
mov
addb
cmp
cmp
xchg
mov
adcl
cmp
aaa
adc
sub
jmp
xchg
popa
inc
jmp
outsb
mov
xor
mov
addb
adc
cmp
cmp
cmpsl
pop
pusha
jecxz
into
xlat
fst
pop
bound
fsubr
orb
lods
es
sub
pop
inc
dec
leave
fcmovnu
mov
addb
cmp
cmp
mov
iret
dec
out
push
decl
insb
mov
inc
push
dec
mov
popa
push
add
test
call
and
dec
sbb
ljmp
imul
cmp
cmp
mov
repnz
adc
cmp
cmp
fs
xchg
mov
adc
adc
cmp
cmp
incl
push
insl
shl
push
sahf
addb
adc
cmp
cmp
test
rcll
fwait
pop
imul
cmp
mov
adcb
adc
cmp
cmp
mov
addr16
adcb
adc
cmp
cmp
mov
movsb
aaa
les
sub
dec
inc
addb
adc
cmp
cmp
addb
adc
cmp
cmp
bound
mov
or
push
std
mov
inc
xchg
arpl
xchg
cmp
dec
gs
or
lea
dec
cmp
pop
jge
push
xor
mov
orb
dec
push
pop
repz
test
imul
inc
xor
mov
test
cs
rcrb
pop
pop
adc
mov
push
movsb
or
xor
outsl
xor
pop
rclb
jno
cmp
sbb
inc
insb
dec
dec
fdivs
mov
hlt
xchg
call
mov
and
mov
test
sbb
adc
adc
cmp
cmp
fs
lret
mov
cltd
aam
pop
cmp
inc
adc
xchg
addb
adc
cmp
cmp
movsb
pop
pop
gs
add
pusha
and
test
lea
dec
out
dec
das
addb
adc
cmp
cmp
fcompl
adc
add
pusha
test
xor
and
pushf
insb
sub
mov
xor
addb
cmp
cmp
mov
decl
scas
enter
fimull
lcall
adcl
xor
mov
addb
cmp
cmp
mov
or
mov
xchg
mov
lret
je
inc
test
mov
addb
adc
cmp
cmp
add
cmp
int3
fwait
jecxz
cmp
test
cmc
fwait
inc
ss
pop
lret
repz
lods
decl
aaa
push
cmp
inc
test
jo
aad
adc
jbe
mov
pop
into
loope
jb
imul
adc
adc
cmp
cmp
push
xchg
xor
ret
fs
xor
pop
inc
bound
push
sub
adc
adc
cmp
cmp
xor
cmp
lea
mov
mov
mov
addb
cmp
cmp
mov
inc
or
xlat
xchg
or
push
jbe
addr16
inc
adc
lds
shlb
add
push
les
jge
jle
sbb
or
or
jb
call
push
sub
push
icebp
jle
addb
adc
cmp
cmp
add
popa
pusha
jo
add
gs
shll
fwait
pop
movsb
dec
and
mov
in
xor
xchg
cmp
ret
dec
stos
dec
add
scas
in
addb
cmp
cmp
mov
dec
sbbb
adc
clc
mov
sbb
adc
adc
cmp
cmp
fadd
cmpsl
dec
push
add
lds
cmpl
add
icebp
addb
adc
cmp
cmp
dec
dec
cmp
addb
cmp
cmp
mov
js
insl
dec
fldt
and
sbb
in
arpl
sub
clc
ficoms
aaa
inc
mov
addb
cmp
cmp
mov
rclb
pop
orl
adc
adc
cmp
cmp
mov
popf
test
addb
cmp
cmp
mov
js
iret
adc
ja
addb
cmp
cmp
mov
ja
xchg
push
or
inc
jl
push
dec
push
xlat
xchg
int
mov
movb
nop
repnz
das
nop
insl
add
addb
cmp
cmp
mov
cltd
push
imulb
push
jl
daa
push
jns
mov
addb
adc
cmp
cmp
outsb
fidivrl
mov
adc
adc
cmp
cmp
mov
adc
dec
shll
and
push
jl
xor
mov
jmp
addb
adc
cmp
cmp
aaa
rolb
push
popa
test
bound
addb
adc
cmp
cmp
movsl
xor
and
fcmovb
enter
in
adc
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
call
or
adc
adc
cmp
cmp
mov
scas
loopne
into
inc
les
pusha
into
xor
xor
adc
addb
cmp
cmp
mov
lea
jo
adc
aad
and
adc
adc
cmp
cmp
xchg
jge
dec
ss
xchg
pop
push
xchg
ret
sbb
pop
jne
mov
dec
rorb
lods
jle
or
out
addb
adc
cmp
cmp
mov
hlt
aad
add
addb
adc
cmp
cmp
gs
lods
stc
add
addb
cmp
cmp
xchg
arpl
dec
pop
repz
addb
adc
cmp
cmp
pop
cltd
cmpsb
popf
dec
inc
pop
push
mov
pushf
les
dec
ss
es
fdivp
enter
fildll
imul
adc
adc
cmp
cmp
mov
sti
jbe
movsl
push
mov
orb
addb
cmp
cmp
mov
in
addb
adc
cmp
cmp
dec
in
bound
jmp
loopne
in
ljmp
adcb
adc
cmp
cmp
mov
rcrb
sarb
inc
pop
icebp
sub
shrb
xchg
std
cltd
out
xchg
stos
pusha
jne
mov
andl
push
xor
mov
add
addb
cmp
cmp
or
hlt
cltd
add
in
and
cs
mov
ret
fimuls
lods
and
loope
mov
and
lock
pop
test
shld
adc
adc
cmp
cmp
insb
shlb
inc
xchg
iret
out
jmp
xlat
fcmovb
adc
fisttpl
jo
outsb
sbb
out
inc
inc
ret
lods
out
je
bound
js
pop
adc
xlat
mov
aad
push
or
mov
sub
mov
cmc
movsl
shr
sub
push
cmp
xchg
mov
pushw
movb
adc
negb
jl
addb
cmp
cmp
mov
sub
addb
cmp
cmp
mov
dec
adc
mov
addb
cmp
cmp
sbb
mov
adc
adc
cmp
cmp
mov
mov
dec
sbb
mov
call
and
jle
addb
cmp
cmp
mov
addb
adc
cmp
cmp
shlb
out
cmp
aas
mov
jecxz
cs
and
pop
push
fcoms
in
ss
jb
jecxz
inc
and
pop
pop
xchg
fmuls
jbe
xlat
clc
je
sbb
test
loopne
addb
cmp
cmp
mov
jmp
xchg
sub
sub
push
fidivl
jae
rolb
mov
jb
addb
cmp
cmp
mov
addb
adc
cmp
cmp
xor
xor
push
pop
xor
aaa
int
or
test
dec
ret
jge
lods
inc
adc
mov
pusha
std
xor
mov
pop
add
daa
hlt
dec
faddp
cmp
adc
adc
movsl
mov
pushf
add
push
dec
sahf
jecxz
test
adc
adc
cmp
cmp
mov
insl
adc
out
int3
fwait
xchg
out
add
inc
dec
xchg
int3
jo
xchg
adc
sahf
test
mov
je
mull
fdivl
addb
cmp
cmp
mov
nop
and
in
dec
dec
dec
mov
mov
mov
stos
fdivrp
cmc
flds
rorl
ficoml
subl
addb
cmp
cmp
mov
scas
inc
mov
addb
adc
cmp
cmp
jl
add
inc
es
jle
push
imul
xor
and
xchg
pop
addb
adc
cmp
cmp
std
pop
divl
cwtl
xchg
push
jb
push
push
addb
adc
cmp
cmp
inc
and
loopne
jg
jno
lcall
repz
xchg
pop
roll
arpl
cs
or
push
popa
fisttpl
addb
cmp
cmp
fsts
enter
sub
inc
adc
pop
jae
addb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
or
sbb
rcrb
addb
cmp
cmp
mov
push
cs
addb
adc
cmp
cmp
push
jmp
fwait
repnz
jbe
and
out
fildll
push
mov
mov
enter
fildll
fistpl
inc
fwait
mov
adc
adc
cmp
cmp
jl
or
js,pn
jg
inc
in
sbb
in
in
and
dec
ljmp
mov
mov
xor
mov
jnp
std
addb
adc
cmp
cmp
icebp
lret
pop
mov
pusha
iret
test
neg
mov
mov
cmc
addr16
sbb
addb
adc
cmp
cmp
cltd
aas
imul
fmuls
cli
aas
addb
adc
cmp
cmp
leave
rorb
ret
ds
mov
ret
push
cmp
data16
adc
adc
cmp
cmp
aas
xor
adc
adc
cmp
cmp
mov
fwait
adc
push
test
cltd
fcmovb
cmp
arpl
and
xor
mov
adc
adc
cmp
cmp
mov
push
jge
and
adc
adc
cmp
cmp
mov
gs
adc
scas
mov
push
movsl
je
pop
jne
inc
nop
lahf
push
lahf
jo
xor
std
push
js
mov
stos
add
adcb
adc
cmp
cmp
mov
xorl
push
dec
daa
sub
jae
cmp
pop
cld
dec
stos
lahf
inc
fistl
and
pop
rcrb
dec
push
aas
dec
int3
xchg
das
popa
es
insl
fstpl
aaa
je
cmp
gs
ljmp
jae
addb
adc
cmp
cmp
jecxz
hlt
and
lahf
add
jl
les
mov
sbb
sub
add
pop
sub
pop
js
sub
push
out
push
and
addb
cmp
cmp
jo
push
mov
pop
scas
sti
push
pushf
xorb
adc
adc
cmp
cmp
mov
inc
leave
inc
jp
pop
adc
xchg
ret
and
jbe
pop
mov
lods
mov
and
cmp
cmp
shll
addb
adc
cmp
cmp
mov
lods
daa
cmp
clc
push
ja
pop
xchg
mov
negb
mov
js
inc
aaa
loop
push
stos
loopne
mov
mov
sub
pop
leave
mov
stos
stos
pop
fsubs
lods
dec
cmc
adc
mov
jb
rcl
shl
xchg
cmp
inc
pop
add
addb
cmp
cmp
mov
lods
cltd
push
push
ret
xor
and
sbb
xlat
aaa
cmp
jp
push
pop
push
sti
push
dec
fstps
jle
inc
inc
pop
mov
dec
addb
adc
cmp
cmp
fs
loop
sbb
insl
loopne
cwtl
out
inc
enter
pop
lods
lret
imul
addb
cmp
cmp
int
lahf
addb
adc
cmp
cmp
pop
shl
dec
jecxz
sub
pop
add
addb
cmp
cmp
pop
addb
adc
cmp
cmp
jns
addb
adc
cmp
cmp
aas
hlt
xor
jp
outsb
push
xchg
popa
mov
dec
jne
dec
shll
jae
inc
sbb
dec
movsb
add
push
in
stos
lcall
es
mov
xchg
mov
jle
jp
cmc
popa
pop
das
jae
stc
or
jae
mov
sbb
mov
cmpsl
fisubrs
push
aam
mov
mov
and
dec
icebp
js
and
dec
in
inc
movsl
cmp
push
add
cmp
adc
icebp
xorl
mov
sbb
lret
pusha
xchg
and
and
shl
sbb
xchg
cmp
xchg
mov
or
xchg
fs
fidivl
dec
in
jns
insb
popa
lods
sbb
xchg
aaa
nop
jbe
push
mov
xchg
mov
xor
addb
cmp
cmp
mov
jno
hlt
xchg
aas
pop
addb
adc
cmp
cmp
cmpsl
test
xchg
pop
pop
das
fidivl
add
addb
adc
cmp
cmp
pop
push
push
rclb
inc
push
fdivrs
lods
mov
out
mov
adc
adc
cmp
cmp
fiadds
adc
adc
cmp
cmp
mov
inc
sub
dec
aaa
enter
out
jne
mov
test
jle
mov
out
test
repz
insb
addb
adc
cmp
cmp
inc
mov
mov
or
stc
daa
lods
dec
push
mov
fs
push
out
and
jp
addb
cmp
cmp
mov
lahf
fdivs
push
aad
cmp
xor
xchg
jecxz
xor
add
shlb
mov
addb
adc
cmp
cmp
leave
mov
sahf
fwait
std
addb
adc
cmp
cmp
mov
pop
xadd
xchg
aaa
or
std
pop
icebp
pop
cwtl
stos
mov
addb
cmp
cmp
ja
movsb
insl
imul
mov
mov
out
into
addb
adc
cmp
cmp
outsb
lea
insl
cs
push
and
mov
hlt
addb
adc
cmp
cmp
pop
pop
enter
xchg
jp
dec
adc
insl
addb
adc
cmp
cmp
pushl
jl
push
std
lock
adc
cmp
cmp
sbbb
mov
inc
in
adc
fwait
xor
jg
div
lret
addb
adc
cmp
cmp
addb
adc
cmp
cmp
js
pop
pop
and
aam
inc
jbe
addb
adc
cmp
cmp
hlt
addb
adc
cmp
cmp
mov
pop
das
jl
data16
idivl
inc
in
fcoml
addb
adc
cmp
cmp
ja
adc
insl
push
jle
sub
addb
cmp
cmp
mov
negl
pop
ljmp
test
cltd
inc
mov
adc
adc
cmp
cmp
mov
mov
add
dec
mul
dec
jb
or
push
repz
cmp
rcrb
addr16
fiaddl
ficomps
adc
loopne
jbe
push
addb
adc
cmp
cmp
fdiv
gs
addb
adc
cmp
cmp
inc
das
jbe
addb
adc
cmp
cmp
mov
enter
outsl
mov
pop
jle
add
addb
adc
cmp
cmp
bound
xchg
call
jo
xchg
cs
mov
out
mov
scas
sbb
sbb
adc
adc
cmp
cmp
mov
les
lock
inc
aam
mov
mov
mov
jbe
imull
loop
inc
mov
push
xchg
out
fldlg2
imul
daa
les
mov
std
out
add
cmp
popa
inc
push
in
mov
inc
fisttps
in
add
addb
cmp
cmp
mov
in
jne
mov
push
shl
xchg
fisttpl
jne
xor
adcb
adc
cmp
cmp
mov
test
subl
xor
dec
inc
addb
adc
cmp
cmp
push
les
pop
and
pop
inc
pushf
movsl
movsl
sub
pop
mov
sub
xchg
mov
addb
adc
cmp
cmp
in
xchg
push
inc
and
dec
jo
adc
sbb
hlt
push
mull
addl
lret
mov
addb
cmp
cmp
mov
sub
or
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
push
mov
std
addl
xchg
aam
sbb
push
mov
dec
add
inc
insb
mov
mov
shlb
sub
adc
jg
subb
ficoml
pop
and
inc
jo
mov
adc
adc
cmp
cmp
mov
dec
jns
push
gs
aaa
mov
loope
xor
addr16
lahf
aam
push
aaa
cwtl
into
stos
dec
jge
shl
cld
test
dec
lret
addb
adc
cmp
cmp
addr16
mov
stos
pop
rcrb
push
lds
cld
xchg
rcrb
sbb
insb
sbb
lahf
rcrl
push
addb
adc
cmp
cmp
outsl
cli
mov
mov
sub
movsl
fbld
addr16
pop
dec
cmp
xchg
pop
loope,pt
addb
adc
cmp
cmp
movsl
icebp
hlt
popf
popf
push
insb
jmp
leave
outsb
dec
sbb
mov
addb
cmp
cmp
mov
mov
inc
movsl
fiadds
fidivrl
dec
movsb
sub
fildl
mov
pop
sub
sbb
mov
aaa
mulb
clc
sub
pop
scas
stc
aaa
faddl
adc
adc
cmp
cmp
mov
and
divl
cmp
addb
cmp
cmp
and
adc
adc
cmp
cmp
mov
addb
adc
cmp
cmp
pop
xchg
movsl
adc
xchg
or
and
mov
mov
pop
jg
adc
mov
xchg
nop
out
inc
aad
clc
pop
xchg
xchg
push
push
push
adc
repz
adc
adc
cmp
cmp
cmpsb
push
fwait
sbb
jmp
imul
clc
inc
push
std
imul
rorb
out
mov
mulb
repz
sti
aas
mov
dec
ret
popf
add
mov
jge
pop
or
xor
adc
addb
cmp
cmp
ja
jl
lods
mov
mov
jae
mov
int3
mov
int
popa
pop
mov
addb
cmp
cmp
or
sbb
adc
jecxz
lret
adc
shll
mov
mov
adc
adc
cmp
cmp
mov
lock
fcmovu
les
sbb
fnsave
inc
cld
push
mov
dec
xor
out
mov
rolb
adc
adc
cmp
cmp
jbe
outsl
lds
mov
fdivs
adc
ret
cwtl
push
bound
jnp
sub
cld
xchg
addb
adc
cmp
cmp
or
addb
cmp
cmp
mov
stos
mov
ja
in
addb
adc
cmp
cmp
stc
in
repz
arpl
xchg
icebp
jp
loopne
pop
pop
dec
fwait
sub
adc
adc
cmp
cmp
cmp
push
pop
mov
xor
insl
jp
jb
test
jbe
sub
mov
loopne
jl
ret
aaa
addb
adc
cmp
cmp
xchg
addb
inc
ljmp
test
pop
dec
sbb
adc
int
popa
fsubrl
fdivrs
mov
clc
mov
addb
adc
cmp
cmp
push
dec
xor
adc
inc
aam
jl
xor
adc
jmp
addb
adc
cmp
cmp
inc
mov
adc
adc
cmp
cmp
mov
test
adcb
adc
cmp
cmp
mov
inc
push
jecxz
imul
cwtl
cmp
cmp
out
cwtl
shll
pushw
pushf
mov
cmp
or
addb
cmp
cmp
mov
lcall
or
addb
cmp
cmp
mov
loop
xor
lret
xor
repz
or
or
mov
loop
movsb
add
jl
mov
mov
xor
repz
jp
push
add
xchg
aaa
cwtl
inc
sbb
stos
jmp
mov
adcl
mov
loope
iret
pop
dec
mov
lods
out
and
mov
test
adc
addb
cmp
cmp
mov
std
push
add
aas
xchg
addb
adc
cmp
cmp
xor
pop
mov
xor
adc
adc
cmp
cmp
pusha
xor
xlat
rclb
or
repz
pop
push
mov
addb
cmp
cmp
mov
xchg
cli
fimull
push
sbb
movsl
loope
test
xor
cmp
fnsave
inc
fstpl
adc
adc
cmp
cmp
mov
in
je
push
xchg
movsl
cltd
fistl
add
js
mov
jcxz
cmp
jns
and
addb
adc
cmp
cmp
in
es
addb
cmp
cmp
mov
push
mov
adcb
adc
cmp
cmp
mov
mov
xchg
out
loop
sub
roll
cmp
sub
mov
sbb
je
lret
pop
push
push
ret
scas
mov
push
dec
mov
push
mov
add
mov
mov
pop
xchg
sub
adc
loop
push
push
addb
adc
cmp
cmp
cmp
cmp
dec
ds
scas
push
cmp
push
ret
cmp
fs
cmp
sub
sbb
lods
add
sub
fstps
jno
out
or
pop
shlb
test
pop
xor
mov
xchg
hlt
pop
scas
scas
xchg
pusha
jae
stos
bound
push
xchg
aas
sbb
bound
sbb
mov
push
xchg
ss
jmp
fdivl
sti
sbb
insb
or
in
pop
dec
int3
jle
shlb
xor
mov
cltd
in
or
rcr
inc
pop
cld
mul
lea
addb
adc
cmp
cmp
mov
repz
push
add
inc
addb
adc
cmp
cmp
push
addr16
cmp
addb
adc
cmp
cmp
ficoms
mov
inc
pop
lahf
pop
cmpsb
push
addb
adc
cmp
cmp
cmp
mov
jbe
pop
in
aam
addb
cmp
cmp
mov
ret
cltd
pop
stos
sbb
jns
jb
jp
cmp
loop
int3
mov
push
aaa
dec
sbb
dec
add
divb
int
mov
mov
enter
addb
cmp
cmp
and
mov
addb
cmp
cmp
mov
icebp
nop
movsb
sbb
sub
add
loopne
push
addb
adc
cmp
cmp
iret
nop
push
addl
jb
shlb
cmp
bound
addl
push
enter
test
adc
adc
cmp
cmp
xchg
or
iret
popl
mov
arpl
pop
push
cmp
neg
sbb
and
jns
push
lahf
jbe
dec
adc
add
addb
adc
cmp
cmp
lahf
xchg
add
in
clc
ret
lds
mov
fnstcw
cli
add
dec
add
sbb
sahf
inc
rolb
fbstp
shr
push
jne
cli
inc
push
in
addb
cmp
cmp
mov
arpl
mov
popa
cli
and
jle
in
mov
addb
cmp
cmp
mov
jo
mov
sbb
addb
cmp
cmp
cmp
dec
cmp
clc
ljmp
mov
minps
inc
sub
insl
fdiv
add
fmull
idivl
jl
mov
repnz
dec
pusha
sbb
arpl
pop
push
xchg
push
in
or
mov
enter
push
jg
adc
add
mov
dec
fiadds
out
and
lcall
pop
addb
adc
cmp
cmp
icebp
and
call
mov
adc
cs
cwtl
xor
addb
cmp
cmp
mov
push
xlat
or
aad
sub
addb
cmp
cmp
mov
lods
inc
aas
push
add
push
mov
fiaddl
loope
jne
pop
pop
mov
push
cs
addr16
xchg
rol
add
addb
adc
cmp
cmp
cld
push
int
addb
adc
cmp
cmp
movsb
push
mull
mov
sub
adc
adc
cmp
cmp
sbb
fldcw
int3
sarb
adc
adc
cmp
cmp
inc
mov
adc
es
mov
sbb
fisttpl
addb
adc
cmp
cmp
and
mov
addb
cmp
cmp
pop
inc
insb
push
pop
pop
jg
std
mov
cld
push
adcb
adc
cmp
cmp
mov
dec
and
adc
adc
cmp
cmp
mov
push
add
fnstenv
push
adcb
adc
cmp
cmp
mov
pop
mov
jbe
dec
jns
jb
jge
lret
mov
jno
cmp
sti
and
mov
adcb
adc
cmp
cmp
mov
dec
movsl
loopne
pop
jge
in
jecxz
sbb
addb
cmp
cmp
mov
inc
xchg
cli
xor
addr16
pusha
sti
test
inc
outsb
roll
adc
adc
cmp
cmp
lods
enter
data16
xlat
ja
adc
adcb
adc
cmp
cmp
mov
icebp
push
xchg
es
hlt
daa
stc
dec
sbb
xor
dec
jmp
mov
addb
adc
cmp
cmp
pop
cmpsl
in
fnstenv
loope
xchg
hlt
cmp
jle
rcr
pop
je
mov
adc
filds
add
loop
lods
pushf
push
mov
push
ljmp
push
and
addr16
fbld
js
or
xchg
es
adc
fildl
adc
adc
cmp
cmp
addb
adc
cmp
cmp
add
jg
subb
addb
adc
cmp
cmp
adc
sbb
rcll
jp
jns
dec
adc
mov
add
xchg
jno
jb
addb
adc
cmp
cmp
addb
adc
cmp
cmp
into
std
pusha
and
cld
clc
sub
xchg
and
push
push
hlt
scas
nop
mov
addb
cmp
cmp
mov
lea
mov
xchg
test
adc
adc
cmp
cmp
mov
inc
jno
inc
mov
test
icebp
or
mov
mov
add
int3
or
fs
subl
jp
or
std
and
xor
cmp
lahf
cmp
popa
je
addb
cmp
cmp
mov
movsl
inc
les
adc
clc
clc
imulb
data16
addb
adc
cmp
cmp
push
sub
addb
cmp
cmp
mov
cwtl
stos
and
ja
cmpb
mov
add
gs
sbb
mov
mov
addb
cmp
cmp
mov
add
addb
cmp
cmp
mov
shll
or
popa
into
adc
addr16
sub
loopne
leave
scas
and
add
push
sarb
call
cwtl
outsl
cmpl
lret
shl
jle
inc
ret
inc
test
jg
icebp
cld
inc
je
ret
dec
and
iret
or
adc
adc
cmp
cmp
in
push
dec
call
out
dec
jno
push
addb
adc
cmp
cmp
clc
fwait
adc
data16
xor
js
cmpsl
jns
addb
cmp
cmp
mov
addb
adc
cmp
cmp
dec
fmul
pop
movsl
pop
add
addb
adc
cmp
cmp
aam
subl
mov
outsb
adc
pop
lret
addb
cmp
cmp
mov
sahf
mov
enter
sbbl
in
xor
xor
addb
cmp
cmp
mov
fadd
repz
xor
sbb
ja
addb
adc
cmp
cmp
addb
adc
cmp
cmp
bswap
xlat
fwait
pop
aas
insl
test
sub
dec
pusha
fistpll
scas
pop
hlt
inc
idivb
adcb
adc
cmp
cmp
mov
and
sbb
xchg
or
addb
loop
mov
push
mov
lds
imul
push
call
push
and
lahf
mov
push
iret
addb
adc
cmp
cmp
jb
dec
lock
loope
dec
sub
dec
hlt
ss
xchg
mov
ret
dec
xor
mov
or
xchg
addb
adc
cmp
cmp
outsb
call
addb
cmp
cmp
mov
inc
pop
mov
push
loop
bound
cmp
scas
adc
addb
cmp
cmp
mov
arpl
lahf
test
testl
adc
adc
cmp
cmp
mov
mov
mov
adc
mov
fucom
scas
hlt
loopne
cmp
aas
mov
or
mov
addb
adc
cmp
cmp
popf
mov
add
ret
mov
addb
adc
cmp
cmp
push
mov
clc
sub
push
jno
sti
ds
jmp
test
addb
cmp
cmp
mov
mov
and
inc
mov
inc
fisttpll
lret
ret
es
dec
cld
or
jp
xchg
stos
loop
sub
xlat
fdivs
stos
pop
cmp
loope
jno
jae
addb
cmp
cmp
mov
fwait
out
cli
aas
pop
aas
dec
addb
adc
cmp
cmp
hlt
insl
repz
adc
cmp
cmp
adc
adc
adc
cmp
cmp
cmc
cmpsb
mov
or
insb
lock
scas
test
mov
fmul
add
and
addb
cmp
cmp
mov
fidivl
jne
pop
faddl
outsl
loop
aaa
jns
rorl
jge
mov
mov
push
addb
adc
cmp
cmp
mov
jmp
addb
cmp
cmp
mov
sub
jae
cmp
insl
jb
pushf
push
mov
or
pop
sbb
fcmovb
sub
popa
aad
sub
cmp
aas
iret
and
adc
mov
gs
loope
les
add
adc
dec
mov
xchg
add
sub
mov
cmp
mov
addb
cmp
cmp
dec
xor
addb
adc
cmp
cmp
dec
sub
jno
push
or
addb
adc
cmp
cmp
cwtl
stos
xor
mov
out
test
into
pop
loopne
pusha
addb
adc
cmp
cmp
dec
out
andb
dec
out
fbstp
fmulp
xorl
mov
addb
cmp
cmp
mov
mov
addb
cmp
cmp
mov
fnsave
ret
outsb
cmpsb
xchg
lcall
push
pushl
scas
xchg
enter
adcb
adc
cmp
cmp
mov
mov
mov
fcomps
addb
cmp
cmp
mov
into
inc
fiaddl
mov
adc
adc
cmp
cmp
rcll
movsb
fnstenv
add
jnp
addb
cmp
cmp
mov
xor
push
aas
je
andb
in
scas
xchg
inc
divl
addb
cmp
cmp
mov
flds
adc
adc
cmp
cmp
mov
lcall
dec
addb
adc
cmp
cmp
push
loope
mov
testl
xchg
push
ficomps
pusha
inc
mov
and
in
jmp
sub
inc
fstl
mov
pop
mov
and
sbb
addb
cmp
cmp
mov
ret
rclb
add
arpl
dec
cli
cmp
addb
adc
cmp
cmp
push
imul
xlat
shlb
inc
and
and
pop
jmp
imul
inc
inc
lds
mov
stc
dec
jge
test
pop
nop
mov
xor
push
imul
push
stos
jnp
lahf
out
ljmp
or
movsb
addb
adc
cmp
cmp
pop
pushf
xchg
mov
adc
adc
cmp
cmp
adc
aaa
sbb
jno
addr16
xchg
and
lret
adc
data16
mov
stc
pop
repnz
lret
shr
out
push
mov
adcb
adc
cmp
cmp
mov
rorl
out
mov
data16
and
adc
adc
cmp
cmp
bound
addb
cmp
cmp
mov
mov
push
cmp
fisttpll
add
test
movsb
inc
xor
inc
adcb
xor
mull
jne
add
push
push
xor
xchg
dec
addb
adc
cmp
cmp
adc
pusha
push
loope
pop
and
stos
inc
in
jno
push
pop
out
cmp
imul
sbb
mov
addb
cmp
cmp
xor
outsb
cmc
pop
fcmovnu
pop
dec
xchg
or
add
pop
addb
adc
cmp
cmp
inc
hlt
jo
pop
mov
or
jnp
xor
xor
addb
cmp
cmp
push
lcall
xchg
repz
inc
in
jp
add
test
pushf
cmp
lahf
enter
xlat
popa
addb
adc
cmp
cmp
adc
test
addb
adc
cmp
cmp
js
into
aaa
jae
rorb
pusha
jl
addb
cmp
cmp
mov
sbb
dec
out
clc
mov
and
xor
push
lret
mov
ret
movsl
inc
or
or
push
lcall
adc
cmp
cmp
mov
lret
push
int
cli
or
adcb
jge
pmuludq
push
fs
mov
xor
aaa
mov
dec
pop
xor
popa
inc
movsl
adc
xor
dec
addb
adc
cmp
cmp
sbb
cli
test
addb
adc
cmp
cmp
jne
cmp
icebp
rorl
adc
mov
adcb
adc
cmp
cmp
mov
hlt
mov
int
roll
mov
in
cmc
pop
das
std
fldenv
arpl
addb
adc
cmp
cmp
push
sub
mov
fs
pop
in
pusha
cmp
ljmp
adc
adc
cmp
cmp
mov
nop
into
mov
mov
bound
sbb
inc
movsl
sub
sub
lret
addb
cmp
cmp
test
hlt
imul
ret
js
push
add
adc
in
xchg
push
or
mov
xlat
addb
adc
cmp
cmp
out
lret
mov
inc
addb
adc
cmp
cmp
xlat
cmp
popf
sbb
mov
int
bound
xchg
xor
popf
mov
mov
adc
or
sub
filds
adc
adc
cmp
cmp
inc
jecxz
mov
xchg
push
mov
xlat
cld
stos
adc
or
jmp
js
jl
cmp
add
xchg
xchg
and
xchg
dec
cmp
adcb
adc
cmp
cmp
mov
test
addb
cmp
cmp
mov
jae
fistpl
push
daa
repnz
jmp
cltd
inc
sahf
mov
cmpl
add
dec
mov
adcb
adc
cmp
cmp
mov
push
cmp
es
jmp
push
rorl
shlb
pushf
jne
addb
adc
cmp
cmp
arpl
scas
pop
mov
addb
cmp
cmp
push
inc
cmp
movsb
mov
xchg
push
xchg
sti
shrb
push
and
ret
cli
cmc
mov
add
insl
xchg
daa
shl
sbb
xor
adc
adc
cmp
cmp
iret
int3
loope
fbld
sub
mov
adc
adc
cmp
cmp
mov
leave
jo
addb
adc
cmp
cmp
mov
out
in
loop
mov
mov
out
adc
sub
outsl
cmpb
cmpsb
in
popa
stos
mov
pop
ret
aad
ja
lock
xor
push
adc
addb
cmp
cmp
add
shrb
repnz
ret
push
push
mov
addb
cmp
cmp
ljmp
aaa
adc
shr
outsb
jp
or
ja
icebp
icebp
bound
adc
adc
cmp
cmp
addr16
imul
mov
adc
adc
cmp
cmp
addb
adc
cmp
cmp
lea
mov
fwait
clc
pop
inc
xchg
in
addb
adc
cmp
cmp
ret
push
mov
addb
cmp
cmp
lahf
lock
inc
stos
test
sub
fs
xchg
aaa
inc
jecxz
push
ss
xor
pushf
and
enter
aas
flds
dec
xchg
out
fldt
pop
aad
sub
lods
js
fidivl
and
flds
outsl
cmc
mov
adcb
adc
cmp
cmp
mov
jecxz
jns
in
addb
adc
cmp
cmp
int
xchg
xor
push
push
or
add
cwtl
in
xchg
int
or
testb
addb
cmp
cmp
mov
cmp
mov
les
inc
nop
mov
push
xchg
dec
loop
dec
ss
lret
and
mov
jg
sub
movsl
divl
into
pop
call
dec
mov
and
adcb
adc
cmp
cmp
mov
icebp
or
lahf
fldl
les
into
inc
or
nop
dec
jo
add
jno
fimuls
out
xchg
inc
cwtl
fildl
adcb
adc
cmp
cmp
mov
jnp
add
inc
orb
adc
adc
cmp
cmp
mov
push
dec
stos
mov
sub
stc
dec
mov
pop
cltd
adc
adc
adc
cmp
cmp
cmp
scas
arpl
xchg
and
mov
aaa
dec
aad
sbb
mov
push
lods
addb
adc
cmp
cmp
test
sub
fldt
sbb
pop
sub
mov
dec
sbb
addb
adc
cmp
cmp
dec
divl
out
add
pop
test
add
and
adc
adc
cmp
cmp
mov
int3
add
fldenv
addb
cmp
cmp
mov
jle
cwtl
push
pop
icebp
mov
dec
scas
cmc
dec
and
mov
lret
add
adc
adc
cmp
cmp
mov
addb
cmp
cmp
mov
add
xchg
arpl
mov
addb
adc
cmp
cmp
adc
pop
jp
stc
cmpsl
push
jns
out
sub
arpl
adc
adc
cmp
cmp
mov
loope
insl
mov
addb
cmp
cmp
mov
cltd
add
xchg
mov
adc
adc
cmp
cmp
adc
nop
add
lods
sub
jno,pn
inc
stos
mov
fdivrs
push
mov
mov
in
std
jle
dec
es
lds
stos
mov
jl
vmread
cmpsb
sub
mov
addb
cmp
cmp
mov
fsubrl
pop
fistps
add
mov
mov
test
pop
clc
add
push
inc
sti
push
xor
frstor
addb
adc
cmp
cmp
add
inc
mov
aas
mov
mov
popa
stc
addb
adc
cmp
cmp
mov
cmpsb
out
adc
addb
adc
cmp
cmp
push
push
jno
xchg
test
test
mov
mov
and
lcall
xor
addb
cmp
cmp
shll
adc
adc
cmp
cmp
out
inc
mov
pop
je
dec
dec
sbb
addb
adc
cmp
cmp
insb
movsb
daa
jne
sub
aas
addb
adc
cmp
cmp
out
into
mov
aam
je
push
out
jge
int3
push
xchg
adcb
adc
cmp
cmp
mov
xchg
mov
mov
addb
cmp
cmp
mov
or
imull
fxch
enter
ret
mov
mov
xor
xchg
repz
movsl
dec
pop
xor
stc
adc
mov
addb
cmp
cmp
je
add
or
adc
adc
cmp
cmp
aaa
inc
sub
fistpl
mov
gs
or
int
add
adc
addb
cmp
cmp
mov
lods
jae
jns
lods
pusha
inc
dec
addb
adc
cmp
cmp
test
call
addb
cmp
cmp
xor
inc
jb
cmpsb
ja
loope
cmp
lds
shlb
cld
pop
addb
adc
cmp
cmp
faddl
mov
jae
arpl
mov
ljmp
mov
adc
stos
sahf
fnstenv
and
lea
addb
cmp
cmp
sti
adc
push
daa
push
sbb
cmc
push
rorb
addb
adc
cmp
cmp
clc
lds
inc
mov
pop
add
and
mov
dec
add
hlt
xchg
xchg
outsl
push
std
es
jbe
clc
xchg
loopne
push
dec
inc
int
cmc
cmp
cmc
xor
pusha
sub
addb
cmp
cmp
mov
jns
xor
subb
pop
dec
mov
pop
addb
adc
cmp
cmp
mov
mov
icebp
and
xchg
jp
sar
pop
jmp
and
stos
out
addb
cmp
cmp
mov
pop
outsb
add
data16
push
daa
cmp
add
insl
das
jae
repnz
je
movd
mov
or
subb
mov
sbb
popl
jp
and
adcb
adc
cmp
cmp
mov
inc
iret
cmp
ret
cmp
addb
cmp
cmp
mov
and
rolb
mov
xor
leave
fsubrp
repnz
addb
cmp
cmp
sbb
push
jl
addb
adc
cmp
cmp
ret
pop
xchg
movsl
inc
aas
push
insl
ljmp
pop
addb
adc
cmp
cmp
stos
pop
in
aas
jb
and
jnp
out
dec
loopne
rcrb
addb
cmp
cmp
cli
inc
ds
flds
icebp
mov
addb
cmp
cmp
mov
rorb
addb
adc
cmp
cmp
iret
pop
and
rol
jle
je
ds
addb
adc
cmp
cmp
daa
adc
cmpsl
scas
decb
rolb
and
add
mov
addb
adc
cmp
cmp
movl
cmp
cmp
loope
out
jb
cli
xchg
aam
pop
pop
outsl
or
inc
addb
adc
cmp
cmp
cli
ljmp
fisubs
xor
leave
mov
push
pop
add
mov
rcll
stc
sbb
cltd
or
loope
cmp
cmp
lds
jecxz
insb
sbb
fisttps
dec
addb
adc
cmp
cmp
in
aaa
fimull
insb
out
push
jne
jnp
lret
dec
inc
pusha
gs
addb
cmp
cmp
mov
pop
jbe
lods
jecxz
mov
mov
xchg
fimull
xchg
lods
out
mov
adc
adc
cmp
cmp
mov
sbb
mov
mov
lcall
js
gs
push
cs
push
or
cli
repz
adc
cmp
cmp
xchg
jp
or
movsl
inc
shrl
int
pop
or
aad
aad
fwait
cli
stc
imul
pop
mov
cmp
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
mov
js
inc
cld
push
adc
in
jl
jl
push
xchg
sub
addb
cmp
cmp
mov
mov
rcll
jge
cmp
daa
addb
adc
cmp
cmp
adc
sub
addr16
imul
xor
and
add
xor
pop
int3
adc
sub
clc
or
xchg
test
sbb
cmp
in
xlat
jnp
sub
repnz
outsb
xchg
add
jg
xchg
ljmp
sub
arpl
sub
push
addb
cmp
cmp
mov
or
addb
adc
cmp
cmp
int3
ds
incb
adc
adc
cmp
cmp
pushf
cmp
shll
addb
adc
cmp
cmp
sti
cmp
push
rcll
jb
adcb
adc
cmp
cmp
mov
mov
addb
cmp
cmp
mov
mov
mov
addb
cmp
cmp
mov
sar
data16
addb
cmp
cmp
mov
lods
addb
adc
cmp
cmp
xchg
pop
aad
push
out
mov
xor
mov
addb
cmp
cmp
mov
pop
jl
jl
nop
mov
daa
adc
adc
in
jae
fisubs
subb
sub
enter
mov
xchg
cmc
roll
adc
not
jl
int
cli
scas
xchg
sub
adc
adc
cmp
cmp
inc
sub
mov
and
addb
cmp
cmp
mov
out
addb
adc
cmp
cmp
jmp
into
inc
shl
fwait
sub
pop
mov
dec
xlat
out
pop
mov
mov
loopne
aad
cwtl
jno
orl
adc
adc
cmp
cmp
mov
in
mov
les
rorl
cli
push
faddl
mov
pop
jb
fiadds
addb
cmp
cmp
mov
mov
int
cmp
jae
or
div
dec
icebp
clc
mov
addb
adc
cmp
cmp
or
pmaddwd
dec
dec
push
sub
lds
jle
xor
mov
lret
bound
dec
pop
mov
adcb
adc
cmp
cmp
mov
jmp
movsb
shrb
outsb
sbb
dec
out
scas
je
mov
add
inc
or
adcb
adc
cmp
cmp
mov
xchg
mov
push
popaw
ss
mov
jo
mov
dec
jg
addb
cmp
cmp
mov
inc
cmp
addb
cmp
cmp
add
movsl
mov
out
add
int
les
popa
addb
adc
cmp
cmp
fidivs
xchg
mov
pop
insl
iret
lds
add
fiadds
addl
in
jecxz
out
inc
mov
dec
sub
sbb
adc
adc
cmp
cmp
cmp
mov
pop
insb
add
aam
xorl
adc
cmp
cmp
add
inc
shrb
push
aaa
addb
adc
cmp
cmp
pop
sub
xor
es
jp
jnp
mov
sub
adc
adc
cmp
cmp
cs
in
xchg
inc
and
ja
xchg
loopne
sbb
aaa
add
out
xor
in
fs
aad
rorl
add
xor
adc
adc
cmp
cmp
sti
lds
outsb
mull
daa
inc
inc
gs
addb
cmp
cmp
test
lcall
aas
sub
xchg
or
push
xchg
das
sub
xor
adc
adc
cmp
cmp
mov
and
addb
adc
cmp
cmp
iret
sbb
adc
adc
cmp
cmp
sub
mov
pop
jl
sbbb
aas
jmp
mov
mov
cmp
xchg
addb
adc
cmp
cmp
iret
adc
and
test
mov
lcall
insb
pop
adc
xchg
outsb
fs
sahf
rol
rorl
hlt
push
mov
jno
insb
sbb
ljmp
out
cmc
xor
mov
push
insb
ljmp
addb
cmp
cmp
push
xor
mov
fldenv
neg
jb
pusha
fsubl
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
jmp
sub
jb
xorb
inc
sbb
mov
or
adcb
adc
cmp
cmp
mov
test
adc
mov
mov
cmp
leave
and
jmp
outsb
jb
cmp
add
adc
scas
pop
mov
push
addb
adc
cmp
cmp
movsb
push
mov
push
enter
cltd
mov
xor
stos
nop
out
mov
pop
mov
mov
arpl
ficomps
and
cmp
addb
adc
cmp
cmp
ja
addb
adc
cmp
cmp
mov
mov
add
filds
add
call
addb
cmp
cmp
mov
cmp
push
or
or
scas
movhps
addb
cmp
cmp
push
sub
adcb
adc
cmp
cmp
mov
addb
adc
cmp
cmp
and
and
xchg
dec
js
xlat
imul
cwtl
pop
mov
je
ds
jle
jnp
and
push
imul
addb
adc
cmp
cmp
test
adc
adc
cmp
cmp
mov
fcompl
push
rcrl
cmpsl
scas
loope
adc
addb
cmp
cmp
in
adc
test
mov
mov
in
push
pushf
test
ror
inc
dec
stos
repz
fiaddl
adc
adc
cmp
cmp
mov
mov
bnd
addb
adc
cmp
cmp
mov
xor
mov
jg
mov
addb
cmp
cmp
mov
push
test
addb
adc
cmp
cmp
fldcw
imul
dec
dec
insl
and
insl
out
dec
fs
adc
pop
cmc
mov
inc
loope
je
pusha
lea
adc
adc
cmp
cmp
jmp
pop
in
push
cmpsb
mov
jne
outsb
pop
and
cmp
sub
and
adcl
leave
inc
loopne
inc
mov
lret
jecxz
fadds
adc
adc
cmp
cmp
push
movzbl
or
dec
pop
pop
incl
int
addb
adc
cmp
cmp
loopne
cld
cmp
and
inc
repnz
shl
or
adc
sti
out
sub
jmp
xor
cli
addb
adc
cmp
cmp
insl
outsl
mov
mov
jno
addb
adc
cmp
cmp
mov
mov
adc
adc
cmp
cmp
outsb
addb
adc
cmp
cmp
int
test
ret
cmpsl
cmp
mov
leave
cs
mov
test
cli
sub
dec
stos
jp
cmp
addb
cmp
cmp
mov
test
and
push
lock
mov
je
jle
inc
mov
int3
testl
adc
adc
cmp
cmp
dec
jmp
xchg
daa
lods
je
sarb
dec
aas
cmp
xchg
ss
addb
adc
cmp
cmp
or
pop
or
addb
adc
cmp
cmp
add
mov
sbb
loope
in
push
sub
stos
fcmovne
lds
jo
out
cmpsl
push
mov
adcb
adc
cmp
cmp
mov
push
mov
icebp
mov
faddl
adc
adc
cmp
cmp
sbb
addb
cmp
cmp
mov
outsb
fiaddl
cmpsl
jmp
add
add
addr16
cmp
hlt
pop
sbbl
dec
in
sbb
mov
or
test
popf
pop
push
addb
adc
cmp
cmp
or
repnz
ret
fimuls
pop
clc
cld
dec
add
addb
adc
cmp
cmp
jbe
test
rclb
mov
frstor
mov
adc
adc
cmp
cmp
mov
and
mov
mov
movsl
push
mov
jno
repnz
ficompl
mov
cltd
daa
outsb
adc
mov
addb
cmp
cmp
filds
adc
adc
cmp
cmp
mov
sbb
add
ja
push
sub
xor
shrb
dec
xchg
sub
sti
mov
pop
enter
xchg
rcl
mov
aam
pusha
insl
mov
int
gs
xchg
notl
shll
lcall
and
jmp
dec
xchg
adc
addb
adc
cmp
cmp
in
addb
adc
cmp
cmp
push
jne
imul
pop
lods
xor
insl
xchg
and
popa
jb
pop
mov
std
mov
test
lret
sbb
or
inc
addr16
lcall
mov
pop
mov
mov
lcall
mov
out
mov
js
jecxz
push
inc
cmp
andb
cld
repz
mov
pop
lret
aad
popa
or
addb
cmp
cmp
dec
in
rcrb
and
lds
adc
adc
cmp
cmp
mov
push
push
mov
jg
lods
and
addb
adc
cmp
cmp
pop
sbb
addb
adc
cmp
cmp
lahf
ficoml
addb
adc
cmp
cmp
dec
xchg
ss
cs
cltd
cwtl
outsb
lods
cmpb
push
dec
mov
sub
dec
lods
out
jo
sbb
sbb
cld
addb
adc
cmp
cmp
add
or
push
data16
aas
addb
adc
cmp
cmp
mov
aad
pop
jo
addb
cmp
cmp
mov
push
out
inc
cmp
insb
loop
popf
in
xchg
fldl
adc
adc
cmp
cmp
xchg
push
push
xor
jl
push
dec
mov
cmpsb
test
fwait
cmp
icebp
loop
aaa
mov
scas
adc
cli
enter
sbb
xor
scas
aad
addb
adc
cmp
cmp
testl
cmp
cmp
jno
pop
inc
mov
enter
and
adc
adc
cmp
cmp
push
jbe
cwtl
or
pop
les
xchg
cwtl
adc
adcb
adc
cmp
cmp
mov
push
or
mov
scas
jmp
xchg
ss
cmp
adc
adc
cmp
cmp
mov
sbb
lock
pop
imul
addb
adc
cmp
cmp
addb
adc
cmp
cmp
mov
xchg
loop
pop
aad
inc
sbb
and
in
xchg
push
dec
lods
cli
fcmovnbe
push
mov
mov
mov
jbe
lcall
cmp
push
aad
pop
js
sbb
lods
idivb
repnz
enter
stc
xchg
loop
jae
shrb
aad
aam
mov
loop
sbb
xchg
repz
hlt
addr16
push
andb
mov
popf
mov
add
sahf
cltd
aad
stc
out
jp
addb
cmp
cmp
mov
jo
and
inc
popl
adcl
sarb
addb
cmp
cmp
mov
jae
mov
enter
dec
adc
addb
cmp
cmp
mov
cld
repnz
orl
cmp
addb
adc
cmp
cmp
cld
push
addb
cmp
cmp
mov
pushf
imul
adc
adc
cmp
cmp
outsl
push
or
dec
iret
subb
lds
dec
jne
lcall
lcall
dec
adc
dec
push
fisubrl
or
sbb
rolb
adc
cmp
cmp
mov
test
mov
xchg
fiadds
imul
mov
addb
cmp
cmp
mov
addb
adc
cmp
cmp
int3
sarb
inc
shl
cmp
adc
sub
adc
adc
cmp
cmp
loope
shrl
addb
cmp
cmp
mov
loopne
mov
push
cmp
sub
sub
sbb
test
xor
ret
mov
imul
add
addb
adc
cmp
cmp
inc
out
repz
sbb
lds
lret
sbb
xchg
imulb
xor
cmp
addb
adc
cmp
cmp
push
shl
dec
cltd
jp
mov
push
nop
scas
out
in
pop
insl
cs
inc
mov
mul
cwtl
cmp
sbb
xchg
movsl
in
pop
lock
push
push
outsb
sub
cmpsl
pushl
pusha
cltd
dec
add
fld
jl
shl
mov
sub
pushf
stos
xor
xor
pop
push
cmpsl
fidivl
cmp
ret
out
cmpsb
push
xor
adc
adc
cmp
cmp
mov
jg
push
mov
fdivl
or
push
mov
clc
jle
mov
mov
adc
adc
cmp
cmp
mov
ljmp
addb
cmp
cmp
mov
stc
adc
pushf
mov
or
jp
lock
and
iret
addb
adc
cmp
cmp
pusha
dec
push
jge
sbb
pop
xchg
add
dec
lcall
addb
cmp
cmp
jb
cmc
sub
cmp
inc
fmulp
and
mov
out
pusha
jne
and
mul
mov
addb
cmp
cmp
stos
or
testb
cmp
hlt
xor
setl
adc
adc
cmp
cmp
mov
fdiv
pop
and
iret
bound
push
jge
pop
in
addb
adc
cmp
cmp
lahf
daa
out
aas
addb
adc
cmp
cmp
mov
xchg
mov
dec
xor
dec
jge
cli
inc
dec
cmp
xor
shlb
addb
cmp
cmp
mov
mov
add
ljmp
adcb
adc
cmp
cmp
mov
adc
movsb
sbb
sub
addb
cmp
cmp
mov
mov
adc
inc
call
adcb
adc
cmp
cmp
mov
inc
sti
sbb
adc
sub
std
jne
adc
bound
into
addb
adc
cmp
cmp
ret
movsb
pop
fs
push
lahf
outsl
test
xchg
pusha
lret
push
xchg
fildl
lods
sbb
mov
stc
inc
dec
pop
push
push
loope
sub
addb
cmp
cmp
mov
and
adc
adc
cmp
cmp
push
ja
xchg
hlt
xchg
jp
lods
in
and
imul
adc
rcrl
mov
int
xor
movsl
sbb
jl
cmp
dec
daa
ret
scas
cmp
cmp
jg
addb
cmp
cmp
mov
les
addr16
sahf
cmp
shlb
add
jo
addb
cmp
cmp
mov
xor
hlt
mov
addb
adc
cmp
cmp
sub
push
cmp
jge
xor
popf
and
flds
stos
xchg
or
cld
pop
inc
cmpps
xchg
popa
push
addb
cmp
cmp
mov
jmp
sub
xchg
filds
adc
adc
cmp
cmp
scas
sbb
add
mov
dec
ds
xor
ja
mov
adc
adc
cmp
cmp
mov
lcall
scas
pop
call
negb
or
lods
mov
into
push
sub
mov
push
mov
cmpsl
arpl
nop
jae
sbb
fdivrl
cmp
loopne
bound
push
sahf
fldl
adc
adc
cmp
cmp
mov
addb
cmp
cmp
mov
in
fiadds
ficomps
lcall
aaa
addb
adc
cmp
cmp
repnz
adc
cmp
cmp
push
mov
mov
mov
xor
push
mov
mov
adcb
adc
cmp
cmp
mov
movsb
jae
clc
in
addb
adc
cmp
cmp
jecxz
inc
inc
inc
les
xor
dec
sub
movsl
imul
bound
xlat
xor
loopne
dec
addb
adc
cmp
cmp
loopne
mov
nop
out
adc
dec
xchg
test
xor
int3
shlb
mov
adc
adc
cmp
cmp
mov
out
or
and
sub
icebp
sar
aam
addb
cmp
cmp
mov
outsl
and
xor
xchg
adc
adc
addr16
loopne
jnp
jecxz
loop
addb
cmp
cmp
mov
pop
lahf
loope
lods
fwait
das
sbb
addb
adc
cmp
cmp
or
xchg
push
mov
leave
inc
mov
pop
adc
or
jne
icebp
dec
repnz
jns
xor
xchg
inc
stos
std
out
stos
aad
mov
das
mov
andb
adc
push
dec
xchg
stos
fsubl
lods
inc
adc
outsb
jne
mov
pushf
lods
loop
mov
hlt
add
mov
cmpsl
xor
addb
adc
cmp
cmp
int3
in
popa
dec
mov
loop
pop
icebp
rcrl
add
in
frstor
daa
addb
adc
cmp
cmp
ljmp
jge
out
jne
cli
and
adc
adc
cmp
cmp
addb
adc
cmp
cmp
in
stos
ja
mov
addb
cmp
cmp
mov
pop
xlat
jae
jl
jno
lcall
cmp
adcb
adc
cmp
cmp
mov
push
mov
sbbb
in
xlat
mov
fcmovbe
mov
mov
jno
loope
mov
shr
pop
sbb
ret
addb
adc
cmp
cmp
sahf
sub
fisttpl
xchg
add
cmp
pslld
dec
xchg
out
clc
clc
movsl
xchg
mov
mov
sar
pusha
jp
shr
addb
adc
cmp
cmp
cmp
dec
rcrb
aaa
or
and
addb
adc
cmp
cmp
aas
fstp
xchg
cmp
jge
popf
inc
cmc
and
sahf
ds
nop
xchg
int3
add
in
movsl
stos
aaa
mov
pop
fisubl
sub
std
pop
addb
adc
cmp
cmp
dec
xchg
jae
filds
dec
pop
add
add
lcall
add
add
add
add
add
add
orb
add
inc
add
adcb
add
pop
add
addb
add
lcall
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
add
push
add
and
add
inc
push
add
cmp
add
sub
add
inc
add
add
add
add
add
add
inc
add
adc
add
adc
add
cmpsl
movsl
xchg
adc
and
adc
add
adc
jb
adc
imul
push
bound
adc
dec
push
adc
ds
adc
adc
adc
adc
adc
push
push
adc
or
adc
add
fs
inc
xchg
xchg
add
push
push
inc
cli
dec
dec
cmp
inc
inc
xor
inc
ds
sub
cmp
es
xor
loopne
sub
sbb
sub
adc
shlb
adc
push
sbb
lahf
sbb
or
sbb
pop
jnp
push
pop
outsb
sbb
push
push
push
adc
inc
adc
adc
and
adc
adc
adc
or
adc
push
pop
adc
add
add
add
inc
cmp
les
push
repz
lock
imul
out
in
imul
call
fcmovnu
xlat
xlat
xlat
sar
rcl
lret
inc
mov
mov
mov
movsb
jmp
xchg
mov
mov
outsl
pushl
ljmp
pop
sti
pop
pop
dec
repz
push
ds
dec
dec
xor
fidivrl
ss
xor
sbb
sub
push
mov
and
cmpsb
and
or
xchg
sbb
jp
pop
pop
addr16
adc
add
cmp
adc
adc
adc
adc
or
adc
or
adc
add
sbb
add
mov
ljmp
std
cld
sti
leave
std
std
cld
lret
std
cld
sti
int
cld
sti
into
cld
cld
cli
iret
sti
sti
stc
sar
sti
cli
aam
cli
clc
sti
sti
stc
frndint
cld
cli
fdivr
sti
cli
loopne
cld
cli
loop
sti
cli
in
cld
sti
ljmp
clc
lock
stc
div
clc
clc
div
repnz
out
cli
jmp
out
call
call
sar
int3
int3
mov
mov
jmp
xchg
cmp
xchg
jo
pop
stc
bound
lock
push
aas
out
inc
das
fnstcw
cmp
xor
sbb
and
or
sbb
push
addr16
adc
push
inc
push
adc
sbb
pop
or
add
add
jecxz
fadd
lds
mov
inc
inc
inc
inc
mov
mov
cld
cld
cld
mov
cli
cli
stc
sar
test
cmc
cmc
hlt
hlt
repz
out
enter
lret
out
in
ljmp
jmp
aad
jmp
fldl2e
jmp
call
out
out
in
ljmp
repnz
div
icebp
out
sti
icebp
icebp
out
in
in
call
fstp
fdivr
rcl
leave
inc
ret
mov
lcall
mov
jns
data16
pop
pop
inc
jmp
xor
mov
adc
adc
pop
adc
add
add
loopne
sarb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
cli
cli
cli
sar
test
icebp
lock
jmp
call
lret
jecxz
loopne
fcmovbe
fstp
fcomp
fcmovu
jecxz
call
out
loop
jmp
call
sti
hlt
hlt
repnz
repnz
push
cmp
daa
adc
adc
xor
adc
add
out
out
ljmp
div
enter
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
std
sar
clc
ret
icebp
ret
in
in
jmp
in
jecxz
fstp
fcmove
xlat
aam
int
enter
in
div
repz
sar
push
push
cmp
and
add
sbb
add
add
div
xorl
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
std
cld
cli
vpsubw
clc
test
hlt
cmc
loop
sarb
repz
stos
pushl
xor
mov
adc
and
add
add
cld
sti
push
rol
fcmovu
rcr
dec
dec
dec
div
test
loope
loop
out
out
lock
div
lret
std
std
std
enter
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
std
cld
cld
sti
enter
enter
leave
cmc
cmc
hlt
leave
repnz
leave
repnz
enter
int
int3
enter
icebp
call
cmp
push
adc
and
ljmp
int
ret
lret
dec
dec
dec
cld
cld
cld
int
loopne
aad
xlat
fmul
rcl
fxch
lret
ret
leave
lret
lret
iret
iret
rcr
aam
loopne
loope
in
in
out
lock
div
lret
cld
cld
cld
enter
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
std
lret
cli
lret
clc
lret
test
hlt
hlt
lret
icebp
icebp
icebp
int3
repnz
enter
repz
push
jmp
adc
inc
pop
adc
daa
sbb
add
call
fcmovnu
shl
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
stc
stc
stc
int
repnz
jmp
fnstsw
aam
fcmovu
int
iret
fxch
enter
vpaddusb
ret
fmul
into
into
aam
xlat
in
in
out
out
out
into
div
test
cli
cli
lret
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
std
cld
int3
sti
sti
cli
int3
stc
clc
test
hlt
hlt
repz
hlt
hlt
int3
rcl
iret
fdiv
repnz
popa
hlt
pop
adc
dec
pop
adc
sub
adc
add
call
mov
std
std
cld
cld
iret
call
call
dec
loope
loop
fcompp
out
call
sar
stc
cli
iret
dec
dec
dec
dec
dec
dec
dec
dec
stc
stc
stc
int
icebp
icebp
iret
call
loopne
aam
xlat
int3
int
fcmove
iret
iret
fcmovb
ffree
ret
ret
fmul
iret
rcr
aam
aam
fnstsw
loopne
ljmp
iret
clc
clc
clc
into
dec
dec
dec
dec
sti
sti
cli
into
clc
clc
test
div
test
rcr
icebp
icebp
out
std
test
push
push
adc
add
repz
cltd
mov
cmpsl
push
icebp
out
aam
call
call
call
out
jmp
fmul
lret
int
leave
lret
ffreep
loopne
enter
iret
rcr
xlat
fcomp
fcmovnu
fstp
ljmp
shl
idiv
iret
dec
dec
dec
dec
dec
dec
dec
dec
cli
cli
cli
into
icebp
icebp
icebp
shr
jmp
fst
aam
aad
leave
lret
vpaddusw
mov
mov
faddp
enter
into
into
div
sar
sti
cli
sar
clc
not
stc
stc
clc
rcr
fcmovnu
lock
cli
xchg
xchg
test
sbb
push
popa
push
adc
or
add
add
cli
clc
insl
mov
in
call
call
call
call
dec
dec
call
sar
stc
stc
shr
out
lock
call
rcl
aam
iret
rcl
lret
rol
loopne
lret
int3
int3
int
fst
aam
fcmovu
fsubr
call
out
sar
stc
stc
sar
dec
dec
dec
dec
dec
dec
dec
dec
sti
sti
sti
shl
icebp
icebp
aam
out
fcmovu
fcmovnu
iret
rcl
fdiv
div
aam
std
cld
sar
stc
clc
sar
cli
stc
shl
loopne
fsubr
in
in
clc
mov
sbb
outsl
adc
adc
add
incb
mov
jecxz
call
call
call
cmc
cmc
cmc
xlat
fnstsw
loope
jmp
cmc
cmc
cli
cli
cli
aam
call
call
dec
dec
dec
dec
dec
shl
div
shl
icebp
lock
out
xlat
fcmovnu
rcl
aam
iret
rcl
faddp
loopne
vpavgb
mov
lret
fcmovnu
in
xlat
out
out
out
aad
div
aam
sar
call
call
call
call
call
std
std
cld
aam
sti
cli
aam
sti
cli
aam
out
fsubr
jmp
mov
jns
adc
jmp
rcl
enter
mov
aad
call
call
hlt
hlt
cmc
fcom
rcl
loopne
iret
shl
int3
int
loop
enter
enter
lret
int
into
iret
shl
fcmovu
jecxz
in
out
call
aad
cli
cli
sar
call
call
call
dec
dec
call
call
sar
clc
clc
aam
lock
jecxz
in
fnstsw
loopne
rcl
rcr
enter
ret
mov
loop
mov
iret
iret
fcomp
div
xlat
aad
std
cld
std
std
cld
in
in
ljmp
mov
adc
adc
adc
add
decl
xlat
fdivrs
call
fdivr
call
call
call
call
call
std
std
std
cmc
cmc
cmc
fdiv
lock
ftst
in
fcmovnu
fnstsw
fst
aam
loopne
int3
int
leave
leave
lret
lret
enter
enter
aad
fcomp
fucom
loop
fucomi
jmp
fprem1
cmc
cmc
cli
cli
cli
aad
call
call
call
call
call
call
call
call
cmc
cmc
cmc
xlat
out
out
out
in
fcmovu
fmulp
lret
lret
loope
in
in
call
std
fdivr
std
fdiv
lock
fldl2t
call
mov
xchg
adc
adc
add
jmp
out
mov
sti
cli
fcos
fcos
fcos
fldl2e
jmp
fucomp
ljmp
sti
sti
sti
fdivr
call
call
call
call
call
call
call
cmc
cmc
cmc
xlat
out
out
out
ftst
in
rcl
loopne
int3
int
leave
lret
vpavgw
vpavgw
leave
leave
jecxz
aam
loopne
aad
loopne
loop
fsubr
ljmp
cli
cli
cli
xlat
call
call
call
call
call
fdivr
fcos
fcos
std
fdecstp
cmc
hlt
in
lock
leave
pushl
and
adc
add
hlt
hlt
icebp
lea
icebp
out
fcmovu
fcmovnu
loop
lret
int3
out
lret
mov
out
int3
into
in
lret
int3
in
rcl
loop
loopne
jecxz
fsubrp
out
out
fdiv
repz
fsincos
sti
sti
fdivr
call
call
call
call
call
call
call
std
std
std
xlat
cmc
cmc
cmc
fldln2
out
out
fnsetpm(287
in
fstp
fcmovnu
loopne
rcl
loop
int3
int3
jecxz
enter
mov
enter
in
int3
int3
jecxz
aad
loope
fcmovnu
loopne
repz
stc
neg
in
loope
fstp
xlat
incl
sub
sbb
add
sti
sti
stc
arpl
in
jecxz
fdivr
fdivr
fdivr
fcos
cld
cld
fcomi
cmc
cmc
fsubr
jmp
fsubp
in
loopne
fstp
loope
rcl
jecxz
int3
int
mov
out
lret
lret
int3
int
into
iret
shl
fstp
fsubp
in
in
out
out
lock
hlt
cmc
std
fcos
call
call
call
call
call
call
frndint
cld
cld
cmc
cmc
fucomi
ljmp
xlat
xlat
jecxz
mov
fnstsw
loopne
cld
sti
fucom
in
out
loop
dec
inc
xor
pop
adc
aaa
pop
adc
and
add
add
ds
iret
ljmp
fdivrp
repz
fucomip
in
in
loope
cmc
cmc
fdivrp
std
std
fdivr
fcos
fcos
fdivr
fcos
cld
cld
fcomi
repz
fsubr
jmp
fsubp
loop
loopne
fcmovu
loop
rcl
jecxz
int3
int
vcvtdq2pd
lret
lret
out
mov
in
rcl
jecxz
loope
in
loopne
out
out
fdivp
div
std
std
fdivr
fdivrp
fdivrp
fdivrp
in
in
out
loope
dec
dec
cmp
sbb
push
and
add
add
lcall
rcl
icebp
lret
repnz
fdivrp
fsubrp
in
in
loop
lret
lret
int3
into
call
iret
rcl
out
rcl
in
loopne
jecxz
in
loop
icebp
repnz
div
std
std
fdivr
fcos
fcos
fcos
stc
stc
fdiv
hlt
hlt
fucomp
jmp
loopne
xlat
fcomp
in
into
iret
out
enter
ret
ret
call
rol
call
iret
rcl
out
fstp
in
loop
jecxz
repz
jmp
jmp
in
jmp
in
ljmp
pop
or
pop
adc
add
add
incl
aad
mov
jmp
jmp
fdivrp
sti
sti
loopne
hlt
cmc
loope
ljmp
fcmovnu
fucom
rcl
shl
leave
lret
mov
jmp
enter
rcl
out
aam
in
fstp
jecxz
out
loope
icebp
repnz
clc
clc
fdivrp
fdivr
fdivr
fdivr
fdivrp
clc
clc
fcomip
icebp
icebp
loope
out
jecxz
in
aad
out
mov
out
jmp
jmp
jmp
jmp
out
in
repnz
loope
sbb
inc
push
adc
add
call
lods
sti
sti
sti
loop
jmp
jmp
std
std
std
loope
out
lock
div
loop
std
std
loope
fdivrp
fdivrp
fdivrp
cli
cli
fcomip
repnz
jmp
fcomp
int3
int3
int
lret
jmp
ret
ljmp
shl
fcomp
fstp
fsubp
in
in
in
loop
repnz
stc
stc
loopne
fdivrp
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
ljmp
push
out
sbb
push
adc
add
repnz
mov
repnz
in
jmp
jmp
sti
sti
sti
jecxz
rcl
jmp
enter
in
int3
int
ljmp
fld1
loopne
loope
jmp
icebp
icebp
jecxz
stc
stc
loope
jmp
fdivrp
fdivrp
fdivrp
fdivrp
fdivrp
jmp
stc
stc
stc
loope
lock
call
loopne
aam
aad
rcl
shr
leave
lret
vpor
mov
int
into
ljmp
xlat
jmp
jmp
repnz
jmp
jmp
jmp
jmp
in
in
jmp
div
cmc
pushl
out
pop
sbb
add
add
clc
mulb
mov
loop
jmp
jmp
jmp
jmp
jmp
cli
cli
cli
in
repnz
jmp
out
loope
out
xlat
fsubr
rcl
aam
lret
int3
int
enter
jmp
iret
shr
iret
rcl
ljmp
loop
jmp
repz
sti
sti
loope
jmp
jmp
jmp
jmp
jmp
std
std
std
loop
div
in
out
out
in
in
out
jmp
enter
rol
cli
cli
cli
out
jmp
jmp
jmp
out
in
jmp
cli
cli
stc
incl
and
pop
adc
add
add
cld
cld
inc
fcmovnu
shr
jmp
jmp
jmp
div
mul
div
mul
in
jmp
jmp
jmp
jmp
jmp
jmp
jecxz
div
in
icebp
icebp
in
out
out
call
int3
int
jmp
enter
lret
vpaddsb
into
into
jmp
iret
iret
ljmp
in
jmp
hlt
hlt
in
sti
sti
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
in
in
cld
cld
sti
std
mov
adc
adc
jmp
iret
into
repnz
into
jmp
jmp
jmp
fucomip
enter
enter
aad
fcmovu
fsubr
loop
jecxz
out
call
out
cli
cli
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
cld
cld
in
hlt
hlt
in
out
out
out
jecxz
call
rcl
shr
lret
in
ret
vshufps
out
lret
int3
int3
in
leave
lret
rcl
shr
fsubr
out
out
out
out
out
jmp
call
call
repz
cld
cld
sti
cld
xchg
nop
cmp
adc
add
decl
rcr
cld
call
call
jmp
cli
sti
sti
out
repz
call
loop
in
aad
xlat
in
lret
int3
int
leave
leave
lret
out
lret
out
leave
lret
int
iret
in
aad
xlat
jmp
fcmovnu
jmp
in
jmp
cmc
cmc
mul
cld
cld
cld
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sti
sti
sti
out
hlt
hlt
call
loopne
loope
fcmovu
rcl
shr
lret
out
icebp
repnz
jmp
ljmp
cld
sti
lcall
jno
adc
xor
jecxz
fnstsw
std
std
cld
jmp
jmp
call
div
jmp
jmp
jmp
jmp
jmp
jmp
jmp
div
mul
out
out
out
jmp
fstp
fsubrp
rcl
aad
int3
int
out
leave
lret
mov
out
int3
into
iret
out
int3
int
out
rcl
shr
fsubrp
call
out
out
jmp
out
jmp
jmp
jmp
jmp
call
ljmp
jmp
jmp
jmp
div
in
std
cli
movsl
movsb
xchg
ljmp
sub
jnp
adc
xor
in
in
call
push
div
jmp
ljmp
lock
push
xor
jo
cs
andl
cwtl
subb
lcall
fcmovnbe
leave
in
jmp
loope
sti
cli
clc
call
jmp
jmp
jmp
jmp
jmp
jmp
cli
cli
sti
call
ljmp
in
fcomp
fsubr
rcl
aam
mov
lock
enter
icebp
leave
lret
into
ror
out
rcl
aam
loopne
loope
call
icebp
icebp
in
stc
stc
stc
jmp
jmp
in
in
in
clc
clc
imul
cli
lods
stos
sahf
pushl
xor
xchg
add
hlt
hlt
icebp
jno
mov
out
in
jmp
std
jmp
bound
xor
lcall
ud0
or
jmp
push
ljmp
and
ja
cmp
mov
cli
popf
xchg
mov
xchg
repz
mov
shr
icebp
in
jmp
call
jmp
jmp
call
call
ljmp
icebp
in
out
out
fstp
fsubrp
rcl
shl
into
into
into
icebp
ret
repnz
out
out
in
out
out
cli
cli
stc
out
stc
mov
movsb
pushl
adc
stc
stc
testl
repnz
in
in
jmp
js
stc
pop
xor
sbb
arpl
sbb
arpl
sbb
bound
sbb
pop
xor
adc
pop
cmp
lcall
push
lcall
or
jmp
sbb
insl
dec
sub
jnp
ds
mov
movsb
mov
ret
mov
repnz
div
jmp
in
out
out
call
in
stc
cli
cli
jmp
jmp
ljmp
jmp
jmp
jmp
in
cld
cld
cld
out
cli
cli
cli
out
out
out
out
cld
cld
sti
lock
stc
mov
ss
adc
add
std
std
std
sub
enter
aam
idiv
in
out
in
cmpsb
xchg
jl
pop
xor
jmp
sbb
arpl
sbb
bound
sbb
addr16
and
xchg
ja
pushl
jmp
sbb
arpl
sbb
arpl
sbb
bound
sbb
pop
ss
pop
cmp
lcall
adc
pop
ss
push
xor
jmp
sbb
ljmp
out
lret
int3
int
enter
enter
leave
leave
lret
into
iret
repnz
shl
fyl2x
out
out
in
in
out
lock
cmc
cmc
out
cld
cld
cld
out
out
out
push
push
std
std
cld
icebp
stc
rol
cmp
adc
call
rcl
leave
in
leave
mov
out
out
in
mov
xor
jmp
sbb
arpl
sbb
popa
cmp
ljmp
and
jmp
jmp
sbb
bound
sbb
bound
sbb
push
je
pushl
xor
popa
cmp
jmp
sbb
arpl
sbb
bound
sbb
loop
shl
ljmp
in
std
std
std
in
div
imul
out
out
out
out
in
in
fcmovu
fcomi
aam
aad
lret
lret
int3
hlt
enter
ret
not
fcomp
repz
push
push
push
std
std
std
repnz
stc
enter
inc
aas
sub
cmp
add
add
incl
ror
ret
shll
push
out
rol
mov
jmp
sbb
arpl
sbb
pusha
cmp
ljmp
push
icebp
out
jl
aas
lcall
adc
pusha
cmp
ljmp
sub
fnop
lcall
adc
arpl
sbb
arpl
sbb
arpl
sbb
pop
cmp
call
lret
ljmp
out
repz
hlt
out
out
out
in
out
out
out
out
push
cli
cli
cli
icebp
clc
clc
clc
repnz
push
push
push
std
repz
stc
iret
into
incl
xor
in
fildll
cli
cli
stc
icebp
push
push
loope
shl
arpl
sbb
bound
sbb
pop
cmp
clc
div
jmp
xor
pushl
cmp
cld
cld
cld
cli
clc
idiv
jae
xor
pop
cmp
jmp
sbb
pop
ss
mov
in
int3
int
hlt
hlt
enter
mov
cmc
int3
int
hlt
aam
aad
loopne
loope
in
in
lock
clc
clc
repnz
push
push
push
push
push
hlt
stc
rcl
leave
decl
xor
out
out
jmp
push
icebp
out
repz
push
push
lock
jmp
pusha
cmp
jmp
sbb
pop
cmp
incl
std
std
call
lret
pop
cmp
lcall
incl
call
xor
sbb
arpl
sbb
pop
xor
idiv
out
out
out
stc
stc
stc
lock
hlt
hlt
icebp
jmp
loopne
repz
xlat
xlat
cmc
rcl
shl
enter
mov
test
hlt
push
push
push
stc
aad
int
dec
dec
aaa
mov
hlt
hlt
icebp
popa
mov
out
cmc
push
push
cld
sti
sti
bnd
cmp
jmp
sbb
pop
aaa
adc
xchg
push
cmc
repz
xor
push
xor
call
inc
mov
lcall
push
jmp
sbb
arpl
sbb
pop
xor
jmp
div
out
out
lock
clc
stc
icebp
icebp
push
push
push
push
push
push
push
div
div
icebp
icebp
icebp
cmc
hlt
push
push
push
cli
fcmovu
sar
push
dec
cmp
sbb
add
stc
stc
idivl
ret
ret
xlat
clc
push
push
push
mov
cld
pop
ss
arpl
sbb
pop
ss
mov
lcall
sub
ljmp
jmp
inc
and
popa
cmp
sbb
pop
ss
xchg
jp
sti
ljmp
test
int
mov
test
rcl
neg
mul
loop
cmc
out
out
out
cmc
repz
sti
sti
sti
cmc
push
push
push
push
push
push
cli
fcos
push
push
inc
leave
sbb
or
add
add
std
cld
and
lret
aam
lret
std
push
push
push
popf
xchg
pop
xor
jmp
sbb
pop
xor
push
in
out
in
call
mov
mov
cli
stc
idiv
incl
aaa
adc
arpl
sbb
pop
cmp
incl
push
push
push
stc
stc
stc
repz
lock
out
out
fcomip
xlat
test
int3
int3
clc
mov
stc
enter
rcl
stc
stc
cli
stc
idiv
push
push
clc
cli
jecxz
fdivrp
pop
push
inc
rcrb
pop
or
add
decl
rcl
leave
fmulp
leave
sar
push
push
push
mov
xchg
cli
pop
xor
lcall
push
jmp
fcmovbe
enter
xchg
clc
div
jmp
pop
dec
shll
mov
in
pushl
xor
lcall
push
pushl
repz
icebp
icebp
repnz
stc
stc
stc
hlt
push
push
push
push
push
push
push
sti
sti
sti
div
hlt
hlt
imul
ljmp
clc
clc
stc
sti
in
loopne
pop
pop
dec
xlat
sbb
or
add
add
fcmovbe
ret
mov
idiv
push
push
enter
pop
ss
arpl
sbb
pop
xor
call
lret
andb
call
int
jmp
shlb
cmp
jmp
sbb
insl
dec
sub
in
leave
lret
int
enter
into
iret
clc
rcl
sar
fdivp
jecxz
in
in
in
in
div
div
idiv
std
std
idiv
push
push
clc
clc
stc
cli
sti
out
loop
pusha
pop
dec
fstpl
add
add
in
mov
cli
stc
clc
idiv
push
push
fcmovbe
leave
stc
pop
cmp
lcall
push
mov
dec
shlb
in
call
mov
decl
xchg
pushl
lcall
adc
jmp
sbb
loop
aam
push
std
std
cmc
cmc
cmc
div
out
out
out
mul
in
neg
fcmovu
stc
rcl
sar
enter
vpsubd
mov
enter
lret
int3
int
hlt
hlt
hlt
cli
cli
cli
sti
std
jmp
pop
dec
loope
sbb
add
jmp
cmpb
out
clc
clc
push
in
out
clc
imul
lcall
dec
mov
inc
mov
call
add
mov
cld
cld
sti
cli
stc
incl
push
aaa
lcall
xor
jmp
sbb
pop
cmp
call
lret
sar
stc
cli
idiv
cld
cld
idiv
push
push
push
push
push
clc
clc
stc
stc
stc
stc
icebp
icebp
icebp
cli
in
in
cmc
cmc
cmc
cli
cli
sti
sti
std
ljmp
jecxz
sbb
dec
icebp
icebp
out
pop
mov
jmp
clc
clc
clc
div
clc
je
xor
pop
cmp
pop
cmp
xlat
iret
mov
sub
decl
cli
stc
idiv
jbe
lcall
adc
call
lds
jmp
sbb
pop
xor
mov
stc
lret
stc
int
iret
cli
xlat
fcomp
stc
loopne
jmp
repnz
stc
stc
stc
stc
stc
stc
cli
sti
sti
cld
cld
in
in
jmp
out
sbb
push
div
idivb
fdivr
stc
stc
clc
test
pop
xor
pop
jmp
fcmovnbe
ljmp
xor
ljmp
es
out
in
call
push
in
jmp
call
or
shll
ljmp
jmp
pop
lcall
or
sti
push
sti
sti
sti
clc
repz
clc
call
loop
cli
fcomp
rcl
sar
lret
sti
enter
cld
rcl
sar
rcl
sar
jmp
cld
cld
std
push
out
jmp
imul
and
add
sti
sti
cli
and
mov
cli
stc
stc
xchg
jle
std
pop
xor
jge
inc
push
repnz
jmp
sub
adc
leave
mov
jmp
fst
jmp
lcall
or
call
ss
pop
xor
jmp
std
std
clc
clc
clc
stc
stc
stc
cli
cli
std
std
sti
div
idiv
in
out
out
cld
jecxz
in
in
in
in
cld
cld
std
push
icebp
out
ljmp
pop
ljmp
add
decb
iret
iret
int3
ret
cli
cli
cli
movsb
jns
mov
fcmovbe
enter
cmp
push
xor
lcall
call
int3
ret
lcall
adc
pop
cmp
jb
xor
cld
cld
sti
inc
mov
lcall
or
pop
ss
xchg
jl
std
out
jmp
lret
sti
lret
int3
into
sti
aam
sti
fdivr
loop
jecxz
jmp
in
sti
cmc
cmc
idiv
cld
cld
cld
sti
sti
cld
cld
cld
push
repz
pop
out
and
adc
add
add
incl
xlat
int
enter
sti
sti
cli
mov
dec
sub
ret
mov
call
enter
loopne
dec
shll
push
aaa
push
repz
dec
mov
ud0
sbb
jns
cmp
lock
jmp
ljmp
and
incl
std
stc
stc
stc
stc
cli
repnz
call
cld
aam
cld
int3
int
cld
enter
enter
iret
std
int3
int
fcomp
fsin
in
in
push
hlt
icebp
pushl
lock
adc
add
add
cmpsl
ret
cli
cli
stc
cld
sti
sti
aam
sar
xor
push
lcall
adc
gs
push
jp
cmp
jmp
sbb
bound
xor
jns
cmp
pop
cmp
js
cmp
std
cld
sti
lret
pushl
xor
div
repz
cli
cli
cli
sti
sti
cld
cld
cli
cli
cli
cld
repz
std
ljmp
push
cmc
repz
gs
adc
add
add
in
xchg
mov
lock
cld
cld
in
fdivr
pop
aaa
adc
pop
xor
pop
aaa
adc
pop
cmp
pop
aaa
adc
pop
cmp
jmp
sbb
pop
cmp
lcall
adc
ljmp
and
stos
xchg
cmp
fxch
clc
div
ljmp
sbb
fcmovbe
sar
leave
std
int
iret
cld
rcl
sar
fcmovu
fdivr
in
out
lock
cld
div
idiv
std
std
clc
div
jns
addr16
and
adc
add
add
in
call
in
in
jmp
std
cld
stc
div
cld
mov
xchg
jl
incb
push
xor
gs
push
lcall
adc
pop
xor
lcall
or
lcall
adc
pusha
cmp
jmp
sbb
pop
xor
lcall
adc
ljmp
jmp
sbb
loop
aam
clc
clc
stc
sti
in
out
out
cld
out
out
fcomp
rcl
aam
lret
lret
int
dec
leave
lret
dec
lret
rcl
sar
fcmovnu
fdivr
out
call
clc
clc
idiv
jp
imul
repz
inc
sarl
std
std
std
cld
cld
cld
div
repnz
out
aam
sar
mov
std
test
jle
xchg
js
jle
inc
insl
dec
sub
fs
sbb
pop
aaa
adc
pop
xor
lcall
or
pop
aaa
adc
pop
ss
lret
sar
cld
cld
cld
std
std
std
clc
clc
clc
out
out
lock
out
loopne
xlat
xlat
fdivr
sti
cld
sti
stc
clc
idiv
jl
push
and
add
add
stc
clc
es
not
ror
std
std
std
std
cld
cld
cld
cld
cld
sti
sti
sti
sti
repnz
cld
loop
aam
iret
lds
std
mov
jb
jns
cmp
fs
sbb
shll
std
int3
int
fcomp
loope
ljmp
sti
sti
sti
stc
clc
idiv
jl
push
and
add
add
incl
shlb
jmp
out
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
stc
clc
cld
in
jmp
jmp
div
clc
std
jmp
in
loopne
loop
rcl
aam
iret
rcl
dec
int
dec
lret
int
rcl
aam
xlat
fdivr
out
call
stc
clc
idiv
jge
imul
and
add
stc
imull
lret
lret
mov
fcmovnbe
out
out
jmp
div
cmc
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
push
div
in
in
in
jmp
in
fcomp
rcl
sar
hlt
hlt
hlt
stc
clc
idiv
jle
imul
and
add
div
xor
mov
mov
mov
mov
call
ror
fstp
aam
call
lock
std
stc
stc
clc
std
std
std
std
std
std
std
std
std
std
std
clc
clc
idiv
jle
insb
sti
and
add
incl
div
xor
repz
in
in
call
mov
aad
lret
lret
enter
inc
shll
int3
sar
xlat
iret
jmp
loop
in
in
jmp
std
std
std
std
clc
clc
idiv
jle
insb
sti
and
add
add
decl
cld
sti
and
clc
testb
lock
mov
fmul
rcl
into
ret
out
lret
inc
shll
mov
dec
leave
mov
jmp
loopne
in
in
call
clc
div
jle
insb
std
and
adc
add
add
incl
sti
sti
cli
aaa
div
hlt
pop
out
out
ljmp
fcmovnbe
rcl
rol
in
lret
inc
shll
dec
enter
aam
jmp
loopne
out
in
jmp
cli
cli
clc
jmp
jle
add
add
incl
sbb
cld
sti
cmp
div
pop
lock
xchg
call
aam
rcl
lock
inc
shlb
dec
lret
sar
xlat
iret
jmp
out
push
repnz
cld
cld
cld
out
out
ljmp
shll
incl
cld
std
cld
aas
div
mulb
icebp
in
xchg
out
fistpll
into
ret
stc
mov
mov
ret
dec
lds
clc
div
dec
enter
lods
sahf
pusha
decl
ljmp
sti
sti
cli
push
div
hlt
jg
in
call
shl
loopne
xchg
push
incl
incb
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
addb
add
add
addb
add
add
addb
add
add
addb
add
add
addb
add
add
addb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
rolb
add
add
loopne
add
add
jg
loopne
add
add
jg
loopne
add
add
jg
loopne
add
add
jg
loopne
add
add
jg
loopne
add
add
jg
lock
add
add
lock
add
add
lock
add
add
lock
add
add
lock
add
add
lock
add
add
lock
add
add
lock
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
cld
add
add
add
incb
add
add
jg
incl
add
add
jg
cld
add
add
jg
push
add
add
inc
add
jg
incl
add
cld
add
add
add
add
inc
inc
add
add
and
sub
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
je
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
push
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jb
add
add
je
add
add
outsl
add
je
push
add
jb
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
jb
add
add
je
add
add
outsl
add
je
push
add
jb
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
jb
jb
jno
imul
add
add
add
add
push
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
insb
add
js
jb
jb
jno
imul
add
add
add
add
add
add
pop
add
add
imul
push
add
jb
jae
imul
add
add
popa
add
add
and
push
add
xor
add
add
add
add
xor
xor
xor
xor
xor
add
add
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
jb
add
add
je
add
add
outsl
add
je
push
add
jb
add
add
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jb
add
add
je
add
add
outsl
add
je
push
add
jb
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
