jns
addb
ficoms
mov
pop
lret
dec
out
addr16
das
xchg
daa
or
inc
push
es
pushl
push
pop
and
jecxz
icebp
jp
enter
cmp
in
js
imull
inc
f2xm1
jnp
cmp
fistpl
hlt
inc
xor
or
out
push
xor
and
mov
aam
adc
jmp
shll
xchg
fisubrl
fnstenv
in
inc
ljmp
aam
mov
loope
sub
inc
jg
in
cmp
sub
push
aam
and
lret
rclb
fldt
mov
stc
push
call
fldenv
mov
arpl
fisubs
mov
aam
xchg
lds
inc
sarb
das
cltd
mov
testb
mov
sub
iret
rorl
out
outsl
dec
inc
int
dec
add
loopne
insl
xor
fdivl
aas
subl
adc
dec
enter
mov
test
fwait
xor
sahf
movsl
decl
fbstp
and
test
fisttpll
mov
js
call
cmp
out
mov
jmp
dec
lret
or
push
pop
and
jmp
movsb
or
sub
insb
push
mov
mov
enter
orb
test
mov
cmpsl
dec
fwait
ss
or
jns
fcoms
pop
pushf
testl
incl
cwtl
pop
loopne
icebp
cmp
mov
imulb
mov
fisubl
add
popa
cmpsl
into
push
add
das
cmp
sbb
enter
ja
icebp
fwait
jns
or
call
fcmovb
lea
into
xor
shl
in
jecxz
adc
lock
pusha
mov
es
call
cmpsb
daa
pop
cmp
and
popl
inc
pop
inc
inc
ljmp
lret
call
es
or
mov
mov
add
jl
dec
cmpsl
es
pop
addb
sub
movsl
pushl
jg
push
sbb
sub
lret
pop
jnp
sar
sub
push
cmc
push
push
pop
add
xor
daa
mov
in
fistpll
or
add
out
call
push
and
inc
inc
dec
roll
cmp
pushl
push
into
fs
mov
inc
lods
mov
cmpsb
call
cmp
outsb
push
call
das
in
insl
sbb
pop
cmp
popa
or
pop
mov
ljmp
sbb
and
insb
push
pop
lods
lock
pop
pop
enter
push
mov
decl
loop
ja
xchg
jp
cwtl
sub
dec
xlat
stos
cmp
inc
fwait
ljmp
clc
cmp
insl
mov
subl
xchg
fiadds
dec
mov
sbb
pop
push
and
ret
dec
orb
imul
lret
pop
mov
cmp
mov
sbb
jg
sahf
out
push
mov
or
jl
sub
fmuls
jecxz
cli
cmp
out
push
test
or
call
pop
jns
imul
mov
push
lcall
cmp
pop
enter
popa
inc
test
or
or
lods
inc
dec
cmp
lcall
mov
and
cmp
leave
add
or
mov
loopne
xchg
mov
repz
pop
dec
ljmp
adcl
adcl
xchg
sbb
outsb
lea
xchg
data16
lcall
xor
or
std
scas
aaa
je
outsb
sarb
and
call
arpl
inc
jge
aam
mov
push
pusha
xchg
test
add
jp
lcall
call
xchg
into
ret
mov
mov
test
or
lods
or
fsubrs
dec
lcall
idiv
leave
inc
xor
jne
sbb
dec
ffreep
andl
out
xlat
je
sub
jmp
inc
mov
cmpl
lret
cwtl
mov
sub
pop
std
jmp
int
mov
mov
stos
iret
sbb
push
mov
jo
pop
ret
push
mov
stos
xor
sti
outsb
cmpsb
in
mov
xlat
mov
sti
sbb
sbb
inc
pop
xchg
rcll
sbb
and
ret
sbb
xor
repnz
ljmp
and
das
notb
hlt
add
pop
add
push
xor
hlt
fildl
stc
dec
insb
push
in
pop
mov
cmpsb
fxch
les
xlat
mov
dec
cmp
loopne
loopne
push
mov
pushl
pop
and
aaa
mov
mov
add
ret
jle
sub
jge
inc
pop
sbb
stos
js
pusha
lods
aad
pop
adc
fnsetpm(287
iret
mov
in
pop
push
rorl
orb
push
push
mov
dec
call
pop
xor
dec
or
int3
stos
lock
or
shrl
add
lds
push
xor
sub
dec
xchg
outsb
xor
leave
lret
cmp
mov
dec
pushf
fbstp
and
dec
xchg
addb
stos
fistps
xor
in
sbb
fwait
andb
push
pop
lret
mov
and
jne
lcall
and
sbb
inc
test
inc
bound
je
out
xchg
incl
jns
imul
loope
negb
jecxz
out
inc
lahf
xchg
mov
ss
jmp
sub
js
jecxz
ds
dec
and
cwtl
add
cmp
cld
xchg
xchg
cmp
divb
dec
setnp
out
nop
rorl
xor
mov
mov
data16
lcall
mov
in
in
dec
lods
push
outsl
push
lods
test
insl
xchg
in
xlat
ljmp
mov
incl
ret
sub
jl
sti
mov
nop
inc
xor
popf
sarl
jb
fistpll
fldcw
dec
sub
add
push
fdivs
mov
in
sti
fs
decl
pop
arpl
mov
rcll
push
bound
imul
shrb
xlat
clc
jge
rcrb
js
cmp
or
lods
and
movsb
movsb
out
sbb
push
insl
xchg
mov
sub
sub
int
xchg
les
jb
call
cli
cmp
stc
sub
gs
scas
cmpsl
stos
pop
push
sbb
ret
xor
cmp
xchg
cmp
inc
or
mov
test
dec
xchg
sahf
mov
call
cmp
and
out
mov
daa
jb
adc
pop
mov
xchg
ljmp
mov
mov
push
mov
jmp
in
ret
push
repnz
jne
jmp
aas
cmp
dec
aam
mov
mov
xor
jge
std
xor
popf
stos
cmp
pushl
int
popw
adc
sub
arpl
dec
out
fisttpl
sbb
decl
cmp
das
cmp
pop
pop
dec
push
mov
dec
mov
mov
mov
dec
fisubl
and
loop
lahf
fs
cli
cwtl
adc
xor
jg
shlb
cmpsb
xchg
nop
xor
and
xchg
xchg
xor
ljmp
ja
loop
jo
loopne
outsl
mov
jb
and
in
xor
and
movsl
xor
call
push
clc
testb
lahf
jae
xlat
movsb
pop
xchg
aad
xor
mov
in
mov
loop
dec
mov
or
fwait
sub
jbe
sub
cs
rclb
mov
sti
and
inc
adc
incl
inc
adc
push
mov
jecxz
pop
cmp
inc
fsubrl
jg
pop
sbb
cmp
mov
fistpl
scas
repnz
inc
test
sar
call
pop
jp
mov
cwtl
loope
popa
out
pop
leave
or
mov
shl
aam
sub
mov
sub
ljmp
hlt
test
loope
or
decl
cld
pop
and
lock
mov
movsb
lock
imul
test
push
mov
int3
adc
mov
and
hlt
adc
jg
sbb
mov
fiadds
inc
mov
cmc
and
in
ret
call
or
stc
cld
jo
lea
sahf
mov
add
push
xchg
mov
add
call
push
push
ss
mov
movsb
mov
lds
xor
mov
add
xor
bound
mov
ljmp
sar
ljmp
mov
cmp
cmp
lret
call
sub
lret
xchg
jg
ljmp
jl
rcll
adc
movsl
cmp
adc
inc
add
fldt
ret
mov
mov
jle
mov
add
loopne
adc
sub
mov
mov
add
and
inc
lahf
idiv
pop
inc
and
ja
mov
dec
js
mov
fstpl
mov
jmp
or
mov
jns
clc
lods
jb
insb
xor
push
mov
sub
sub
mov
sub
mov
aas
shll
std
jbe
jge
test
or
add
incl
sbb
sbbl
pop
into
cmc
mov
iret
cmpsb
mov
push
paddw
sub
add
and
sarb
sub
mov
mov
loopne
ret
push
push
sub
aas
cld
mov
inc
jno
and
jmp
jnp
mov
loope
xchg
loop
gs
push
mov
call
xor
packssdw
xchg
and
out
sub
aas
pop
addb
mov
add
nop
xlat
and
mov
sbb
adc
adc
imul
xchg
dec
addb
push
fstps
jbe
shlb
mov
cmp
fcmovnb
xchg
insl
sub
jmp
pop
loopne
inc
add
mov
or
dec
push
inc
nop
add
xor
dec
push
inc
std
inc
push
add
sub
test
jg
push
loopne
inc
insb
mov
leave
aad
addr16
call
es
and
dec
add
mov
stc
and
clc
xor
shll
jg
repz
lcall
dec
int
in
cmp
xor
jne
fmull
lock
xlat
ljmp
inc
loope
lock
ljmp
dec
cmpsl
or
orb
in
insl
push
cld
dec
jae
shlb
jno
fbstp
decl
cmpsb
cld
test
mov
test
fnstcw
jno
fcoms
adc
ljmp
xor
xor
jno
push
add
loop
sbb
stc
lcall
pushl
xor
push
in
xor
sbb
push
jge
loop
fnstenv
mov
add
in
dec
cmp
ret
and
mov
mov
inc
cli
jl
push
cmp
sub
stc
mov
das
jge
xor
insl
in
xor
and
fs
mov
loopne
and
xor
in
mov
or
lock
adc
push
sub
or
pop
pop
sbb
sti
outsb
fcmovnu
jae
mov
fbld
cmpsl
and
sub
xlat
jbe
fildl
cmp
sub
or
and
das
pop
xor
movsb
fwait
gs
sbb
or
mov
movsbl
and
pop
adc
mov
and
data16
sub
or
xchg
pusha
mov
inc
mov
sub
movsl
int
sub
mov
mov
adc
add
push
ret
out
jnp
rcrb
rol
push
cmp
sbb
fildll
popf
mov
sub
mov
inc
add
fs
add
nop
push
add
andb
adc
or
and
or
add
cmp
sbb
loopne
loope
and
add
loop
sub
mov
call
add
add
mov
sub
xchg
push
push
xor
push
xchg
mov
inc
inc
adc
and
inc
adc
xchg
add
inc
inc
adc
mov
inc
add
adc
adc
nop
inc
add
add
lds
daa
inc
repnz
jl
mov
adc
les
add
push
call
sub
out
sahf
out
push
bound
mov
jns
xchg
movsb
mov
int3
mov
jns
out
push
clc
push
or
jns
out
pusha
jbe
xchg
sahf
out
sahf
cmpsb
mov
fsubr
cld
cmp
sarl
sub
jb
cmp
repz
ds
out
adc
and
sahf
out
sahf
push
bound
lcall
shl
repnz
repz
shll
cmp
js
repz
mov
repz
ret
and
iret
repz
dec
pop
push
mov
mov
loop
add
jns
out
sbb
inc
pop
jb
jns
out
cwtl
test
aam
sarl
cld
or
sbb
cmp
iret
repz
fs
mov
mov
sahf
cmpsl
sbb
inc
push
data16
out
sahf
jl
movsb
mov
aam
int
jns
cld
adc
and
repz
repz
pop
jb
xchg
iret
repz
stos
ret
clc
push
repz
mov
push
fs
repz
xchg
mov
sahf
out
ds
sbb
inc
push
jns
out
data16
cmpsb
mov
jl
out
in
adc
and
repz
ss
pop
jbe
sahf
ds
repz
fdiv
or
jns
out
sbb
dec
pop
jb
jns
out
xchg
mov
jns
cli
adc
and
cmp
repz
data16
cmpsb
repz
repz
lret
int3
cmp
repz
push
repz
jns
iret
testb
push
cs
sahf
out
sahf
push
data16
pushf
mov
lahf
out
int3
fdiv
add
adc
cmp
repz
dec
pop
push
repz
jp
stos
mov
stc
cmp
adc
sub
jns
out
pusha
jbe
pushf
lods
sarl
aam
add
adc
repz
and
dec
pop
jo
cmp
repz
scas
mov
out
testb
push
cs
out
sahf
out
je
movsb
mov
shl
clc
adc
and
cmp
repz
pop
outsb
jle
repz
rep
mov
loopne
out
sahf
out
rcrl
sub
dec
sahf
out
sahf
pop
outsb
xchg
jns
ljmp
iret
sub
push
push
cwtl
cmp
repz
mov
sahf
cmpsl
stc
push
aad
xor
pop
out
sahf
out
test
sahf
int3
loop
adc
es
repz
pop
je
lcall
shr
add
out
sahf
cmpsl
sbb
cmp
sahf
out
sahf
jle
scas
aam
cmp
sarl
sbb
dec
pop
repz
rep
test
iret
aam
hlt
add
adc
out
sahf
sub
pop
je
mov
mov
loop
adc
repz
shrl
ds
pop
outsb
iret
repz
xchg
sahf
cmpsl
stc
cmp
or
sbb
inc
jns
out
push
insb
jl
pushf
repz
out
fdiv
or
iret
repz
and
dec
fs
ds
repz
mov
jns
out
adc
inc
push
push
jns
out
mov
jl
shr
add
sbb
inc
cmp
repz
data16
cmpsb
stc
cmp
repz
jns
cmpsl
and
dec
pusha
js
out
sahf
nop
mov
cmp
repz
push
loopne
ds
repz
rep
test
iret
lret
add
sbb
cmp
jo
inc
lahf
out
nop
test
enter
repz
push
sub
repz
push
data16
mov
cmp
call
jns
out
ds
fs
out
sahf
out
mov
repz
adc
and
inc
push
outsb
cmp
repz
sahf
mov
fdivrl
out
in
add
adc
cmp
jns
out
fs
mov
mov
loopne
or
out
sahf
out
ss
data16
sahf
out
sahf
mov
cmp
sarl
push
cs
pop
repz
repz
lcall
lret
js
push
iret
repz
sub
dec
bound
cmp
repz
mov
fsubr
jns
out
clc
or
and
dec
out
sahf
out
jo
xchg
scas
int
jns
fsubr
cld
adc
sub
repz
push
insb
jl
repz
repz
lods
mov
lcall
cmp
pop
jb
cwtl
scas
stc
sahf
out
aam
cld
data16
sahf
out
fiadds
cmp
jo
jns
out
nop
cmpsb
mov
fcompl
add
outsb
push
sub
push
jns
out
push
mov
out
in
in
out
push
and
out
cmp
push
out
sahf
out
lcall
lahf
lock
push
es
cmp
repz
jle
cmpsb
mov
ds
repz
fsubr
add
sbb
jns
out
inc
pop
jb
sahf
out
sahf
xchg
mov
out
idivl
adc
into
push
ss
sahf
out
sahf
push
outsb
xchg
out
int3
fdiv
or
and
cmp
repz
outsb
jle
repz
xchg
lods
mov
out
ds
sbb
dec
bound
out
js
cwtl
scas
repz
out
out
add
adc
iret
repz
cmp
push
iret
repz
shr
add
sbb
out
xor
jo
out
sahf
out
scas
mov
xor
decb
negb
ss
pop
cmp
repz
mov
iret
repz
out
push
mull
out
sahf
out
inc
push
data16
out
sahf
mov
cmp
repz
push
clc
sub
dec
repz
repz
test
cmpsl
stc
cmp
out
push
stc
push
sahf
out
sahf
cs
pop
push
cwtl
jl
out
mov
out
add
repz
rcll
cmp
fs
repz
je
xchg
movsb
mov
cmp
add
sbb
cmp
out
push
pusha
jo
cwtl
out
sahf
out
rcl
test
cmp
push
cld
sbb
cmp
pop
cmp
repz
jl
pushf
mov
ds
repz
std
and
jns
out
inc
push
insb
jl
out
sahf
mov
cmp
repz
adc
sub
repz
repz
xchg
scas
out
ds
or
push
ss
out
sahf
dec
pop
outsb
xchg
enter
add
sahf
out
sahf
and
dec
bound
jns
out
lcall
dec
repz
sbb
inc
push
iret
repz
push
mov
repz
loop
or
and
out
cmp
jle
out
sahf
out
mov
repz
or
push
xor
pop
insb
cmp
repz
mov
repz
cli
or
out
sahf
out
inc
push
data16
out
sahf
mov
cmp
repz
or
sbb
cmp
cmp
repz
bound
cwtl
iret
repz
test
shl
lock
sahf
out
lcall
jns
out
test
xor
out
clc
adc
es
repz
push
push
mov
cmp
add
adc
out
sub
push
push
out
test
into
fmulp
repz
hlt
add
adc
cmp
iret
repz
jb
cwtl
test
cmp
repz
testb
jns
cmpsl
sbb
cmp
pop
sahf
out
sahf
insb
sbbb
out
call
ss
repz
push
outsb
jle
sahf
out
int3
movsb
pop
push
fdiv
cmp
sarl
adc
inc
push
repz
repz
test
cmpsl
stc
cmp
into
out
push
or
sahf
xor
push
out
lods
ret
repnz
repz
sbb
inc
push
iret
repz
data16
sahf
mov
sahf
out
cmp
hlt
or
and
jns
out
dec
fs
movsb
out
sahf
out
shl
testb
adc
out
push
xor
push
fs
jns
out
pushf
lods
mov
sahf
loop
or
sbb
inc
cmp
repz
jo
sahf
mov
cmp
repz
fsubrp
decb
adc
jns
cmpsl
push
xor
pop
insb
sahf
out
sahf
test
cmp
sarl
push
es
repz
repz
mov
iret
rcl
lock
imul
pop
out
sahf
out
js
sahf
scas
int
jns
mov
adc
cmp
xor
push
fs
repz
lcall
fsubr
clc
or
and
dec
pop
jbe
pushf
jns
out
lods
mov
cmp
repz
sbb
cmp
repz
push
int3
sahf
out
cmp
hlt
add
adc
jns
out
xor
pop
insb
jl
jns
out
mov
repz
ljmp
cmp
repz
jp
test
imul
hlt
add
sbb
jns
out
dec
bound
lahf
out
sahf
lcall
cmp
repz
sub
dec
jb
xchg
stos
mov
lret
or
sahf
out
sahf
xor
data16
jns
out
pushf
mov
repz
repz
iret
repz
fs
lcall
shr
add
adc
jns
out
xor
outsb
xchg
jns
out
mov
aam
push
data16
out
pop
push
sub
dec
pop
out
sahf
out
xchg
jns
out
push
and
cmp
repz
dec
fs
repz
rep
ret
clc
out
sahf
out
and
sub
dec
sahf
out
sahf
pop
outsb
jle
sahf
scas
jl
out
mov
and
cmp
rcll
es
iretw
repz
jl
movsb
mov
stc
cmp
add
sbb
dec
jns
out
pusha
jo
nop
test
jno
out
aam
call
repz
cs
pop
repz
int
jl
mov
cwtl
cmpsb
mov
repz
ret
in
cli
or
cmp
mov
xor
iret
repz
pop
push
xchg
mov
int3
ficoms
repz
push
cs
repz
ds
pop
outsb
jle
repz
mov
sahf
out
cmp
decb
daa
push
jns,pn
out
ds
pop
outsb
jle
add
sub
test
push
decl
adc
enter
call
add
and
stos
xor
lea
incl
and
mov
fistpll
jb
mov
lret
test
nop
cli
jp
loopne
je
std
stos
dec
push
pop
lock
mov
lahf
pusha
mov
lahf
iret
out
fisubs
xor
ljmp
xor
fwait
mov
mov
pop
les
out
fidivrl
scas
adc
out
or
rolb
test
push
sbb
push
or
ret
and
ficomps
lods
or
pushl
lock
adc
repnz
aas
jno
mov
mov
mov
test
add
test
pop
loope
jb
add
push
leave
mov
hlt
fwait
mov
sub
lcall
les
push
pop
cmc
testl
sbb
cltd
push
gs
rclb
jecxz
jmp
xor
mov
push
push
mov
pop
pushw
cmp
pop
jp
push
sub
pushl
ljmp
mov
mov
inc
sub
pop
stos
inc
xlat
pop
jge
lock
sub
xchg
and
psrlq
scas
lock
pop
adc
pop
cmpsl
cmp
incl
fidivrl
xchg
jge
stos
or
lret
inc
add
leave
lds
or
ja
aaa
hlt
xchg
inc
jo
jecxz
scas
xchg
sahf
das
out
arpl
aaa
dec
cmp
push
pop
ss
sub
sub
lcall
mov
inc
std
jo
mov
mov
mov
pusha
sbb
call
pushl
inc
jl
les
dec
aam
xor
clc
imul
mov
pushl
cwtl
int3
ret
cmp
in
pop
stc
xor
cmp
add
sub
movsb
aam
jmp
pop
jbe
dec
jmp
out
push
addr16
in
or
sub
fadds
leave
sarb
jmp
inc
ds
or
cmpb
mov
cmpsl
andb
repz
mov
mov
add
jg
incl
jp
test
lret
in
ja
adc
push
mov
in
sbb
std
mov
pushl
ffree
andb
test
mov
mov
enter
mov
add
out
aaa
jb
incl
loopne
sbb
fwait
movsl
sub
xchg
ja
fimull
std
push
inc
fidivrl
xor
cmpsl
pop
or
mov
imul
call
and
adc
sub
or
pop
pop
lcall
adcb
dec
sub
and
or
xor
push
dec
xchg
cmp
pop
jp
stc
jmp
pop
mov
xor
sbb
sbb
ds
inc
jp
iret
add
dec
cwtl
jle
xchg
out
fistpll
xor
push
in
or
test
lcall
sub
cvtps2pi
ljmp
jp
xor
aas
cltd
jbe
cli
sub
pop
dec
aas
lods
repz
in
pop
mov
aad
sbb
ljmp
imul
into
xchg
push
jae
xor
jb
outsb
adc
cs
inc
fistpll
in
aad
jo
xor
imul
or
xor
jb
or
push
ret
mov
aaa
decl
das
or
push
jne
cmp
bound
cmp
pop
fwait
or
dec
outsl
jg
test
adc
cmpsl
xor
data16
xor
imul
call
xlat
aas
or
mov
shlb
cmc
lret
inc
imul
adc
mov
test
divl
lcall
fidivrs
dec
pushf
jne
add
mull
add
loopne
jmp
or
and
push
aam
das
rcr
ljmp
in
cmpsb
cmp
cwtl
mov
mov
push
sbb
popa
dec
sti
fbstp
adc
mov
xor
pop
fwait
dec
repz
lcall
fsubl
xor
cwtl
mov
cmp
mov
lcall
aas
adc
mov
fwait
mov
dec
fnstcw
ror
ss
incl
imul
ss
mov
xor
or
stc
fildl
nopl
mov
or
push
cmp
xor
loopne
js
dec
movsb
jle
ja
mov
adc
xchg
push
push
stos
xor
aaa
pop
into
mov
int3
insb
mov
inc
push
into
lds
into
in
das
adc
lcall
into
xchg
loopne
cmp
test
pop
lds
cmp
mov
clc
mov
xor
ret
cs
xor
jbe
dec
and
push
xor
dec
aad
cld
out
mov
inc
jp
rcl
int
aaa
imulb
aas
ljmp
dec
sub
jns
hlt
jp
cmpsb
pop
fildll
out
mov
cmpsl
es
ret
mov
inc
push
call
nop
adc
sub
mov
pop
outsl
pop
jo
push
idivb
imul
push
je
ss
into
es
ja
ds
fstpt
dec
jns
and
adc
std
pop
jo
adc
pop
push
mov
adc
repz
mov
clc
jl
jbe
cmpsb
cmp
mov
xchg
decl
test
mov
jae
sbb
push
jg
int
ds
mov
lods
jp
aas
out
xor
push
xchg
pop
and
or
into
mov
shrb
jp
out
ljmp
and
push
mov
dec
jbe,pt
jg
dec
push
in
pop
cli
push
push
sub
dec
pushl
outsb
xchg
test
call
test
movsb
int
inc
xor
add
cmp
lcall
xchg
orl
push
mov
lods
es
or
push
call
push
les
push
stc
cmpsb
lret
dec
dec
lcall
adc
push
repz
jbe
or
ds
or
repz
adc
mov
mov
nop
pop
or
dec
lcall
cmp
cmp
incl
mov
movsb
push
and
imul
imul
test
fimull
icebp
dec
pop
lods
mov
dec
icebp
outsl
ret
ret
mov
mov
inc
or
inc
sbb
or
mov
jle
push
sub
mov
ljmp
nop
lcall
xchg
and
sub
test
int
jnp
xchg
xchg
inc
mov
push
push
jne
or
jnp
and
dec
pop
insb
pop
mov
xchg
movsb
inc
adc
dec
jp
icebp
sbb
jle
lcall
dec
and
pop
mov
xlat
cmp
inc
sbb
popf
or
sub
cmc
or
addr16
imul
jnp
aad
adc
jg
fistps
notl
dec
addb
push
add
xchg
iret
inc
sar
inc
repnz
jle
mov
pop
mov
mov
pop
mov
cwtl
push
lock
push
cmc
dec
xchg
paddd
push
cmp
aaa
cmp
lods
sub
dec
dec
lock
mov
inc
fwait
icebp
imul
push
add
stos
mov
es
sub
das
mov
icebp
aas
push
cmp
mov
mov
mov
mov
std
lds
arpl
insb
jecxz
mov
jbe
inc
add
insb
nop
int3
icebp
mov
addr16
push
ret
loop
outsl
mov
push
test
ret
ficomps
repz
and
jb
jp
int
decl
incl
call
xchg
scas
aad
mov
or
inc
pop
push
xchg
jge
ljmp
jg
mov
or
dec
fwait
outsb
cmp
ss
dec
cmp
xor
jg
cli
pop
xor
sub
xor
test
cwtl
sar
pop
mov
jo
dec
cmp
incl
jge
aas
aaa
data16
dec
dec
push
outsb
or
idiv
adc
dec
or
mul
es
mov
add
in
ljmp
xlat
decl
test
sti
cmp
and
mov
sbb
mov
incl
jp
cmc
pop
mov
lods
int
aas
add
push
jns
fwait
scas
lods
repnz
push
cmp
sahf
sbb
xlat
mov
mov
sub
sahf
cld
mov
addr16
inc
cmp
out
clc
xor
in
mov
adc
pop
mov
xor
je
push
incl
jae
dec
cmp
jae
push
jne
dec
dec
dec
push
je
imul
inc
js
pop
dec
push
push
call
pop
jo
xor
cmp
bound
inc
inc
pop
fs
jo
gs
outsb
inc
dec
cmp
jae
push
pushl
je
insl
js
inc
inc
bound
jno
gs
jbe
jbe
ja
push
sbb
xor
push
mov
dec
inc
push
push
xor
push
ss
push
outsl
xor
dec
pop
push
ja
jno
js
data16
ljmp
push
jne
push
push
pop
sbbb
js
cmp
decl
aaa
jno
inc
jno
inc
cmp
push
push
pop
jb
aaa
push
inc
xor
mov
push
arpl
jp
xor
or
jo
inc
bound
addr16
push
add
dec
xor
dec
dec
jo
push
pop
push
dec
inc
inc
out
test
push
mov
add
jns
xor
es
aam
inc
jp
pop
jl
pop
dec
mov
xor
jns
jp
dec
dec
mov
cmp
inc
jno
mov
push
push
inc
insl
mov
jg
push
dec
inc
data16
insw
inc
dec
les
dec
bound
popa
mov
pushl
imul
dec
xor
jo
ss
push
dec
xor
dec
ss
push
inc
inc
aaa
cld
incl
push
dec
dec
xor
dec
dec
imul
jo
inc
dec
inc
push
fdivr
decl
ja
dec
inc
push
insb
inc
pop
xor
je
pop
loop
inc
inc
les
add
roll
mov
or
mov
sti
add
aaa
cmp
aad
out
sbb
lds
popa
add
imul
rcrl
sbb
add
out
xor
lock
int3
xlat
cs
nop
loopne
lock
add
or
adc
das
in
dec
and
faddl
pop
dec
jae
push
push
or
inc
sahf
or
and
mov
sti
cld
pop
cmc
inc
mov
jo
mov
mov
sub
insb
iret
idivb
sbb
jbe
push
or
push
mov
adc
and
fnstenv
inc
push
adc
adc
push
sub
sbb
sbb
jbe
dec
mov
fwait
dec
lahf
xor
inc
mov
mov
jge
lods
aad
rorb
sahf
loop
aas
in
rcll
loopne
inc
xor
std
jbe
xchg
dec
cmp
mov
push
mov
subl
mov
mov
xchg
adc
lcall
fisttpl
push
std
adc
jp
daa
out
dec
fdivl
dec
push
popf
inc
fdivr
mov
ds
ja
js
rolb
aas
sti
jbe
adc
das
addr16
cld
ret
nop
pusha
adc
ja
in
cld
sbb
add
aas
lds
inc
fisttpll
inc
push
sbb
adc
add
dec
jo
sbb
iret
lock
std
xchg
push
in
jo
jbe
pop
xchg
loop
xlat
inc
out
ret
addb
add
or
sahf
loope
negb
pushf
pop
test
outsl
fadd
mov
outsb
push
cmp
outsl
and
into
mov
sub
xchg
jb
push
pop
xor
ret
and
data16
aas
add
scas
leave
les
push
mov
fldt
mov
xchg
jo
int
fldt
icebp
sarl
add
mov
ss
dec
mov
jmp
lds
ffreep
jl
jns
test
ja
insb
mov
xchg
je
sti
fiaddl
das
jge
insb
jle
scas
fadd
jb
out
or
dec
or
iret
sti
sbb
into
loope
ja
push
jae
loop
pop
adc
scas
ds
mov
movb
lds
in
imul
js
or
imul
gs
xor
loope
pop
imull
fs
insb
pop
inc
sbb
gs
jb
je
arpl
push
gs
push
sub
cs
gs
jbe
add
pop
aad
jnp
jb
dec
outsb
and
imul
push
imul
gs
outsl
arpl
fcmovu
lods
dec
or
pop
xor
in
in
lods
xor
inc
outsl
jne
pop
push
jne
jns
push
imul
jmp
jb
popa
outsb
arpl
sbb
push
adc
lock
fistps
inc
jne
mov
popa
fs
sub
dec
inc
push
mov
fs
mov
ds
adc
cld
fcmovnu
pop
dec
jmp
loop
popa
jb
outsl
dec
jne
int3
into
push
mov
jns
sub
sub
sti
mov
das
sub
movsb
mov
pop
arpl
sbb
testb
mov
jb
jns
js
iret
push
and
push
dec
cmc
and
popa
jbe
and
jo
rolb
push
jb
or
fs
jae
imul
hlt
gs
push
arpl
daa
inc
imul
mov
cltd
and
inc
cmp
addl
outsl
insl
mov
xor
sbb
clc
ficomps
sub
bound
sub
push
imul
xor
call
push
outsb
push
in
fs
cmp
xor
out
int
mov
fwait
push
outsl
xchg
and
cmpl
add
insb
xorb
cmp
in
mov
popa
imul
outsb
lret
xor
pop
push
adc
inc
in
sbb
inc
shl
aam
pop
and
jb
sub
shrb
push
gs
pop
jb
jae
outsb
sbbl
jae
fdivl
addr16
outsl
mov
dec
gs
push
inc
clc
icebp
pusha
jnp
popa
jo
jae
jg
scas
mov
jecxz
dec
movsb
outsb
mov
and
adc
add
popa
jne
data16
mov
jg
jns
sbb
pop
lret
insb
mulb
and
and
stos
push
lret
push
or
or
inc
out
pusha
jno
mov
push
mov
pop
inc
push
sub
lcall
inc
shr
dec
bound
repz
or
cmpsb
sub
sbb
scas
mov
xor
xlat
jbe
jne
fldl2e
out
mov
repz
stos
roll
adc
sub
fstps
mov
rclb
xchg
test
fisttpll
repz
add
outsl
sti
lods
push
insb
cwtl
loopne
inc
inc
insb
push
sbb
mov
jne
adc
ja
roll
jo
jae
shrb
inc
rcrb
imull
shrb
daa
push
notl
mov
sbb
ret
fstpl
adc
out
pop
or
inc
xor
xchg
das
xor
loop
les
inc
jo
loop
mov
pop
adc
mov
nop
mov
add
jecxz
push
add
lock
imul
es
push
pusha
out
ss
xor
pushf
add
shlb
push
in
ret
data16
xor
ja
in
jmp
imul
fistpl
rcrb
movsl
sub
jecxz
int3
neg
icebp
pusha
jno
pop
push
ret
or
jo
xorl
xchg
sbb
fdivrs
ret
gs
js
jo
addr16
dec
lock
jecxz
pushf
movsl
movsl
fildll
inc
inc
cmpsl
fldt
fcoms
xchg
adc
daa
mov
and
dec
xorl
ja
and
shl
push
or
jne
cltd
dec
push
in
out
mov
dec
arpl
xor
xchg
sbb
lret
push
jge
fldl
inc
lret
xlat
outsb
add
incl
and
xchg
gs
test
pop
add
xorl
or
adc
adc
xchg
mov
inc
jmp
mov
push
subl
push
add
adc
enter
nop
inc
add
add
push
add
and
nop
push
add
add
xorl
and
adc
sub
or
inc
add
adc
adc
nop
inc
add
xchg
dec
cmpsb
push
jmp
add
add
call
mov
sub
add
add
cmpsb
mov
mov
incb
addl
adcb
adc
or
adc
add
subl
inc
add
adc
adc
mov
dec
or
sub
mov
test
push
mov
adc
push
and
test
pop
add
xorl
sub
adc
add
add
nop
inc
add
xchg
add
mov
inc
adc
enter
nop
inc
add
add
subl
push
leave
ret
and
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
cmpb
mov
add
incl
xor
pop
pop
xor
xor
inc
mov
add
add
fnstenv
dec
test
add
add
add
add
add
add
mov
mov
mov
add
sub
add
incb
fcmovnu
div
pop
push
add
cmp
sbbl
sub
sbb
cwtl
add
in
jg
orl
addl
jnp
cwtl
mov
incl
sbb
je
gs
sbbb
imul
cmp
sub
mov
rcll
rorb
and
ds
add
roll
add
sub
ds
gs
rclb
shrb
and
out
ljmp
loop
or
push
incl
jg
pop
les
call
add
stc
and
push
flds
mov
outsl
push
push
pop
add
sbb
aas
dec
daa
or
pusha
ds
xor
outsl
add
inc
das
adc
mov
add
fildl
push
add
push
aad
ret
stos
xchg
cmpsl
jge
imul
push
sbb
push
fmul
fld
or
loope
pavgb
fisubl
sbb
gs
popl
mov
imul
cmp
loope
dec
pop
push
fucomip
push
addr16
push
fiadds
aad
mov
mov
mov
sbb
mov
idivb
addl
or
into
add
test
imul
aas
push
sub
sbb
mov
sbb
iret
add
dec
test
cltd
add
pop
stos
pop
push
out
cmp
iret
cmpsb
pop
mov
shlb
dec
shrl
xchg
insl
pop
movsl
pusha
or
int3
push
add
mov
loope
movd
stos
aas
mov
fcmovnb
mull
mov
movsb
adc
rolb
test
xor
dec
rcl
mov
loope
addr16
add
iret
cmpsb
jns
dec
xadd
adc
and
pop
insl
mov
mov
mov
in
jnp
shrl
dec
push
jge
ja
mov
xchg
test
mov
sub
sbb
loopne
fcoms
pop
addr16
lret
cld
aaa
insl
stos
push
pop
ds
mov
out
add
add
loop
or
sbbl
imul
or
leave
and
imul
pop
pop
cmp
mov
and
stc
fs
pop
notl
testb
andb
inc
add
pop
sbb
loopne
imul
cmpsl
sbb
sbb
or
pop
sbb
cmp
push
jge
push
xor
or
xor
pop
mov
sub
jge
clc
aam
pop
push
lgs
lahf
ds
xchg
or
popf
jbe
sbb
outsb
and
ret
popw
test
xor
std
xlat
cmpsl
mov
mov
push
filds
lret
push
mov
lods
jge
lcall
cmp
fisttpll
add
lahf
cmpsb
imul
pop
cmp
mov
jnp
iret
add
mov
sbb
movsl
sbb
sub
shll
or
shl
pop
divl
sbb
loopne
cmpsl
imul
shl
mov
sbb
jmp
stos
pop
outsl
lcall
aad
add
cmpsl
imul
sbb
cmp
ja
push
iret
pop
fsub
movsl
std
jg
icebp
sbb
lock
push
mov
pop
xor
pop
push
std
sar
jae
imul
dec
sbb
push
push
out
xor
in
sarl
add
mov
nop
test
pop
and
in
lock
ljmp
insl
outsl
mov
stos
mov
xor
jo
jmp
int
mov
mov
cld
push
in
sar
out
aaa
xor
outsl
fcmovnu
out
fwait
jo
jmp
xor
call
xor
rorl
push
sbb
div
loopne
outsl
sub
inc
xor
imul
dec
lds
jge
jp
dec
pop
mov
incl
jle
xor
leave
jnp
add
dec
push
add
mov
ds
push
add
popl
cmc
scas
decl
adc
jb
xchg
and
push
lods
dec
add
lcall
jno
cld
or
xorb
inc
add
inc
lock
push
incl
push
enter
cli
mov
adc
sub
pop
cmp
ret
pop
and
ja
das
adc
testl
pop
lock
add
xor
in
fiaddl
sbb
sbb
cmp
or
mov
lahf
in
pushl
add
jle
mov
add
inc
imul
adc
pushf
aam
outsb
jbe
xchg
loop
cli
mov
and
in
je
lea
jo
mov
mov
je
and
je
insl
lcall
in
jg
or
or
or
lock
addb
jg
addl
add
test
test
push
mov
or
sub
add
scas
push
adc
dec
aaa
ljmp
and
iret
push
push
mov
and
adc
fstps
xchg
push
jo
xor
jo
bound
inc
and
add
or
add
js
add
inc
add
add
or
icebp
out
test
cmpsl
repnz
add
or
dec
gs
add
mov
adc
add
xchg
add
jbe
insb
add
addr16
dec
add
ja
mov
incl
add
shlb
xor
or
add
inc
inc
jp
pusha
add
imul
sub
add
add
add
adc
add
fnsave
dec
sub
inc
inc
cs
shll
mov
es
idivl
cmpsl
add
and
lods
call
loopne
pop
bound
pop
dec
or
aas
xor
add
pop
or
jg
mov
lods
movsb
add
xor
mov
lock
mov
mov
incb
add
int3
fistpl
mov
add
add
jno
add
int
mov
add
les
xor
sti
add
xor
stos
std
incl
add
add
inc
add
cld
add
xor
sbb
add
mov
push
add
add
push
add
xlat
lock
pop
xor
std
inc
cld
and
sub
sub
xor
lret
xor
pushl
add
cmp
mov
loop
addr16
imul
ljmp
jno
jae
jne
jbe
xchg
mov
pop
pop
lahf
incl
testb
jge
incl
cld
pop
aas
mov
or
add
or
aas
sbb
in
add
add
add
xor
rorb
or
push
add
add
insl
add
add
ds
mov
in
sub
jbe
sub
mov
pop
xchg
mov
es
add
out
sub
loopne
sub
mov
and
loopne
adc
mov
and
sbb
xor
dec
inc
incb
and
rcrb
lock
dec
jp
stos
mov
lret
xchg
stos
gs
imul
in
call
pop
cmpb
fldenv
mov
mov
call
call
int
pop
inc
mov
nop
pop
sbb
dec
ss
mov
notb
fwait
lods
mov
in
scas
mov
or
out
lods
mov
adc
sbb
lock
out
lret
add
lret
or
push
cmpsb
into
add
cmp
sbb
pop
jecxz
pop
jl
mov
fld
pop
and
pop
mov
sbb
mov
rolb
mov
dec
pop
lret
jmp
sti
repz
test
mov
inc
pop
int
mov
sbb
int
cld
pushl
jecxz
lahf
adc
es
mov
neg
out
mov
sbb
ja
adc
std
sub
inc
shlb
std
xchg
or
or
sub
dec
xlat
mov
sbb
sub
mov
cltd
cmp
inc
xor
adc
add
push
adc
sbb
inc
in
jg
addb
pop
jae
or
adc
imul
aad
fistps
or
add
inc
sub
sbb
hlt
fistps
push
push
or
and
adc
rolb
sarb
mov
or
or
add
add
ret
cmp
adc
pop
pop
rcll
or
push
outsb
add
les
in
push
mov
scas
push
push
add
cmp
sub
mov
test
dec
aaa
push
xor
push
popa
outsl
adc
rorb
or
fstpl
pop
inc
push
cmp
add
insl
pop
imul
push
cmp
add
sbb
mov
fdivrl
daa
push
add
pop
test
rorl
pop
outsl
fidivl
add
pusha
testl
push
adc
and
faddl
add
js
out
and
pop
jo
and
pushf
imul
add
push
enter
add
imul
sar
lcall
out
dec
shlb
push
aas
rorl
add
push
and
add
mov
lcall
dec
jo
add
or
data16
fldt
sbb
outsl
cmp
mov
push
cwtl
pop
mov
dec
mov
lahf
xchg
adc
or
sbb
inc
sbb
sarb
add
add
xchg
sets
pop
insb
lcall
or
pop
aaa
add
inc
shrl
rolb
add
pushf
cmp
lods
loopne
add
add
add
mov
call
dec
inc
push
imul
das
sbb
add
push
loopne
mov
test
in
loopne
and
push
std
insl
rcrl
shl
or
sub
ficoml
add
dec
mov
mov
lcall
sbb
es
loopne
sarl
mul
ss
pop
jbe
loopne
lods
iret
add
mov
jns
loopne
mov
dec
add
lods
shlb
sub
add
xor
and
rorl
mov
push
add
loopne
out
nop
sbb
std
xor
push
and
in
xor
push
push
into
test
add
lods
sub
adc
cli
add
loopne
and
jo
mov
testl
pop
fistpl
outsl
add
fneni(8087
sbb
add
iret
cmp
dec
xchg
test
cmp
loopne
mov
popa
xor
push
js
lcall
inc
and
loopne
pop
or
fcom
push
pop
ret
dec
mov
lcall
loope
roll
push
outsb
insl
or
rolb
loopne
or
jp
cmovp
movzbl
stos
mov
gs
or
cmp
fildl
push
push
ljmp
int3
xlat
loopne
stos
sbb
push
aas
pop
loopne
xor
or
pushf
adc
cmpsl
or
loopne
xor
rcr
stos
mov
es
xor
loopne
stos
lret
addb
adc
cmp
push
jmp
ret
lcall
repz
push
add
in
mov
xchg
add
insb
dec
add
ret
pop
mov
add
sbb
push
push
shll
addr16
loopne
jae
pop
jg
push
or
pop
fwait
sbb
mov
sbb
cmp
pop
es
scas
adc
xchg
inc
add
mov
push
popf
mov
xlat
out
push
push
xchg
mov
loop
push
ss
push
or
mov
pop
dec
push
aam
add
loop
and
dec
and
sub
js
adc
or
cmp
loopne
jecxz
rcrb
into
and
dec
xor
pushf
xchg
sbb
mov
ret
push
cld
sbb
dec
lods
loope
fcoml
outsb
out
loope
fmuls
ficompl
fnstenv
sub
xchg
or
mov
cmp
mov
out
mov
xchg
jno
adc
out
mov
adc
cmp
int
xor
push
pop
and
or
mov
add
jo
lret
jo
lods
push
roll
or
or
sub
xor
or
add
inc
pop
pop
js
push
push
fwait
jno
and
arpl
fcmovnu
scas
cmpsb
jo
jb
ja
push
push
lock
or
fiadds
sbb
xor
mov
lock
mov
sbb
adc
out
lock
jge
sti
mov
es
mov
mov
aas
sub
jo
inc
sbb
lock
cmp
out
jnp
cwtl
lock
xchg
sbb
stos
psraw
mov
mov
jecxz
add
repz
loopne
pop
inc
inc
shlb
push
hlt
dec
movsb
add
rclb
inc
imul
sub
inc
jo
mov
jns
jbe
cltd
ret
lahf
mov
fstl
fcompl
arpl
inc
inc
push
adc
mov
xor
sbb
stos
push
adc
add
test
js
adc
xor
shl
out
lock
xor
lahf
pop
add
or
inc
add
jbe
cltd
andb
dec
cmpsb
shl
sbb
outsl
mov
pop
rcll
sbbl
mov
fwait
imul
sbb
lock
mov
insb
int
dec
jne
add
adc
and
or
add
jno
test
xchg
cmp
clc
into
lock
add
xor
into
cwtl
adc
cmpsl
push
sahf
cmpsb
incb
repz
std
in
shlb
test
xor
test
loope
mov
outsl
adc
mov
xor
mov
jns
rol
roll
or
jb
or
add
pop
pop
add
int3
pop
add
add
cmp
and
add
push
add
push
adc
insb
add
jge
push
add
dec
mov
add
fildl
dec
inc
add
add
add
movl
inc
nop
popa
add
pop
add
inc
add
add
bound
add
push
jl
add
push
add
add
add
adc
adc
add
roll
aaa
fs
xor
sbb
outsl
push
add
add
ss
add
fadds
daa
add
jg
testb
add
and
pushf
and
bound
nop
or
add
add
clc
mov
fbld
sbb
pop
add
add
sbb
cmp
add
movb
add
nop
or
adc
outsl
in
pop
mov
arpl
add
add
mov
add
mov
push
xor
pusha
add
add
dec
add
jp
cs
add
js
xor
add
push
sbbl
add
add
adc
and
insb
adc
mov
clc
nop
adc
add
add
or
add
pand
insl
enter
add
add
mov
jo
xchg
add
add
add
adc
add
dec
add
push
sub
cmp
pop
insl
fadds
adc
push
fiadds
addr16
adc
dec
push
add
xor
add
add
int
outsb
js
push
add
sub
add
es
ret
insl
roll
adc
push
and
mov
mov
jbe
adc
adc
sub
add
or
push
add
inc
xorb
imul
add
pop
add
xchg
mov
pop
add
xor
xor
adc
sti
xor
outsl
out
add
pop
add
xor
mov
push
add
or
add
xor
jecxz
add
xor
out
ret
fbld
xor
cld
adc
mov
pop
cmpsb
xor
test
out
adc
stos
xor
stos
dec
add
xor
scas
inc
add
xor
outsl
out
add
inc
add
xor
mov
add
xor
mov
inc
add
xor
add
ds
xor
xor
add
out
fbld
lret
add
adc
add
xor
add
out
ss
xor
shlb
xor
xor
outsl
out
xor
xor
add
cs
xor
loop
stc
or
out
add
sub
xor
add
shrb
add
xor
add
mov
add
xor
in
xor
add
and
xor
add
sbb
pushf
add
sbb
inc
add
mov
push
cmp
and
cmp
push
cmp
cmp
sub
add
sub
sub
xor
push
xor
das
fwait
mov
adc
add
xor
xor
add
xor
sub
adc
add
fwait
mov
add
inc
sbb
add
fwait
mov
add
push
sbb
push
push
add
mov
adc
dec
adc
dec
adc
mov
lret
syscall
orb
push
adc
adc
push
add
and
push
stos
pop
adc
push
adc
into
pop
push
push
adc
repnz
sbb
sbb
push
push
push
push
push
pop
adc
cmp
mov
outsb
xchg
adc
add
pop
adc
and
add
dec
movsb
add
add
dec
push
add
loopne
shlb
and
adc
or
insl
aad
inc
or
inc
push
or
push
or
inc
push
or
insb
add
adc
add
movups
push
cs
xor
cmp
cmp
sbb
push
inc
adc
js
cmp
xchg
cmp
int3
shrb
enter
xor
sbb
jo
xor
xor
rcll
push
xor
push
sbb
mov
adc
xchg
popa
ja
in
sub
inc
adc
mov
push
cwtl
mov
adc
dec
jbe
ret
es
dec
adc
push
dec
adc
and
dec
adc
and
dec
adc
ds
data16
js
sbb
adc
adc
sbb
adc
push
dec
sbb
or
ss
notb
adc
lds
sub
adc
adc
mov
sub
add
bound
pcmpeqb
insb
pop
mov
adc
adc
push
sub
or
and
or
adc
mov
add
sub
add
sbb
adc
xor
xchg
lret
adc
xor
ljmp
pop
pop
xchg
pop
pop
mov
add
add
mov
stos
add
mov
mov
aaa
push
pop
mov
pop
popl
push
pop
test
aaa
jg
pop
adc
dec
pop
lods
add
aas
dec
pop
scas
jle
scas
mov
dec
pop
nop
add
int3
add
int
pop
lret
pusha
xlat
out
addb
add
add
pop
xchg
add
xchg
imul
pop
cmp
xchg
add
pop
xchg
add
pop
xchg
insb
pop
xchg
fbstp
pop
cltd
add
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
std
add
cli
sahf
add
pop
lahf
lret
sub
mov
push
pusha
add
pop
movsb
xor
movsl
xchg
pop
cmpsb
jg
rolb
cmpsl
add
pop
test
es
test
add
pop
mov
pusha
add
lcall
pop
mov
sbb
mov
sbb
mov
sbb
mov
pop
mov
movsb
pop
mov
add
mov
adc
mov
call
pop
mov
add
pop
rolb
pop
roll
pop
ret
add
ret
pop
les
or
lds
mov
movb
pop
movl
pop
leave
add
mov
pop
or
jmp
pop
or
and
add
push
or
and
cmpsb
and
jmp
push
or
and
mov
and
lods
and
and
pusha
and
gs
jmp
inc
or
and
or
or
and
shlb
aaa
or
or
xor
decl
aam
xor
shlb
xor
popa
and
or
and
or
and
or
and
rorl
and
sub
adc
and
or
push
jbe
and
push
and
or
pop
or
and
sbb
std
push
decl
or
sbb
or
and
sbb
push
or
and
or
and
adc
hlt
mov
adc
adc
cmp
adc
mov
and
xchg
and
mov
or
and
xor
or
decb
ficomps
add
pop
or
and
pop
or
xor
or
pop
push
and
or
push
or
push
or
and
push
std
decl
and
or
and
and
mov
push
and
push
and
and
mov
decl
push
and
pop
and
pop
and
pop
and
and
and
sub
inc
or
mov
sub
cmp
pop
and
or
or
cmp
pop
and
or
ljmp
hlt
xor
shll
or
and
das
or
jmp
or
and
or
and
or
and
or
and
push
daa
and
pop
cld
decl
lods
and
and
mov
and
iret
sbb
scas
and
cli
jg
or
or
and
mov
and
or
and
adc
adc
arpl
adc
adc
gs
push
and
pop
lock
pop
daa
in
outsl
es
mov
aad
inc
sbb
inc
cld
or
es
ss
imulb
add
sbb
add
pop
mov
jle
push
or
or
add
or
cmp
xor
or
and
or
and
or
sub
or
sub
out
mov
je
rolb
and
jg
dec
mov
pop
or
add
sbb
or
add
sbb
decl
add
pop
or
add
adc
or
add
adc
decl
add
loopne
push
or
add
or
jecxz
or
cli
mov
in
sub
add
or
fwait
fucomip
push
jmp
pop
or
add
pop
or
jbe
pop
in
pop
or
pop
jo
push
fldt
icebp
or
push
push
sub
push
or
push
push
push
or
push
push
or
adc
dec
or
adc
dec
or
adc
decl
dec
or
push
push
dec
or
sbb
inc
or
sbb
inc
or
sbb
decl
inc
or
push
push
inc
or
and
ds
and
cmp
scas
clc
mov
push
cmp
es
cmp
push
pushl
or
sub
xor
sub
xor
sub
push
xor
xor
ljmp
or
xor
sub
xor
sub
xor
push
sub
cmp
mov
push
lock
and
push
pop
decl
inc
push
sbb
or
inc
push
sbb
inc
push
sbb
decl
dec
push
adc
or
dec
push
adc
push
call
or
mov
push
push
or
loopne
cmc
fwait
lods
or
push
aam
pop
push
push
or
sub
mov
xor
xor
pop
push
pop
mov
fisttpl
jp
sub
xor
aaa
xor
xor
xor
mov
fldt
xor
xor
xor
imul
aas
xor
xor
xor
inc
xor
inc
addb
xor
inc
xor
inc
xor
pop
mov
roll
dec
xor
xor
xor
dec
xor
xor
mov
stos
dec
xor
xor
dec
xor
xor
push
repnz
xor
xchg
push
xor
pop
xor
insb
fdivs
pop
xor
xor
xor
adc
sbb
pusha
push
xchg
pop
xor
xchg
mov
xor
bound
shrb
loop
adc
test
mov
adc
lods
adc
lods
adc
mov
lds
bound
adc
mov
xchg
mov
mov
mov
lds
shlb
cmp
pop
repnz
adc
arpl
mov
mov
jbe
fdivs
rcll
ret
insl
xor
adc
adc
js
push
jg
shrb
push
push
test
xchg
add
push
adc
xor
adc
sub
add
dec
adc
add
incl
push
add
js
pop
and
mov
mov
and
and
lods
fldenv
test
outsb
push
and
xchg
add
jle
add
push
sahf
out
pop
testb
hlt
repz
out
in
in
in
add
cmp
repz
scas
fldt
iret
lods
fldcw
repz
fisubrs
iret
repz
rcrl
aam
rclb
cmp
xchg
cld
jg
fbstp
repz
ja
repnz
push
insl
push
mov
out
insb
lea
push
jns
out
imul
jns
fsubs
arpl
sahf
out
js
push
fisubs
cmp
repz
popa
push
shlb
push
repz
repz
push
xchg
push
xchg
iret
repz
push
xchg
push
xchg
push
nop
cmp
jns
add
dec
push
sahf
dec
repz
repz
dec
pushf
dec
fwait
iret
repz
dec
lcall
repz
xchg
inc
xchg
inc
daa
daa
daa
pop
out
inc
aas
ds
push
mov
cmp
cmp
out
sahf
xchg
test
test
xorl
and
xorb
xor
das
jge
jl
jns
out
jnp
jp
jns
jns
out
js
pop
sbb
pop
sbb
sbb
cmp
repz
adc
ds
notl
push
mov
pop
pop
push
aas
mul
pop
jae
push
inc
mov
ds
cmp
insl
jle
cmp
mov
xchg
jmp
andnps
sbb
xor
movsb
add
push
lahf
pop
jle
fs
imul
cmp
xlat
push
and
outsb
jp
pop
add
or
std
nop
inc
std
daa
mov
in
incl
je
fldl
adc
scas
aaa
imul
mov
cmp
bound
ljmp
xchg
jl
in
mov
ret
and
sub
mov
or
ljmp
mov
and
sub
orb
mov
aas
popw
sbb
pushl
and
adc
mov
push
out
jns
sub
adc
cmpsb
add
inc
leave
sub
push
dec
add
add
outsl
mov
stc
mov
sbb
subb
loopne
add
mov
pop
adc
pop
outsl
dec
data16
outsb
dec
xorb
inc
jge
mov
lret
xchg
ss
and
xchg
mov
mov
push
mov
mov
mov
sbb
mov
mov
cmp
mov
bound
sahf
pushl
xor
xor
xor
xor
xor
sub
sub
in
mov
pushl
test
lret
sahf
aas
sti
rorl
adc
mov
push
gs
inc
jge
push
xchg
movsl
jg
xor
mov
sub
mov
jl
sbb
mov
insb
pushl
mov
jl
jnp
mov
imul
xor
lods
push
push
push
fisubrs
imul
lcall
jbe
enter
xor
xor
xor
xor
xor
xor
xor
xor
xor
lcall
imull
scas
dec
sarb
or
outsl
and
push
int3
pop
or
int3
xor
xor
fdivl
xor
xor
xor
xor
xor
jne
rolb
in
pop
insb
jno
fs
div
ret
ljmp
pop
jb
movsl
inc
mov
mov
pop
xor
mov
jo
dec
pushl
ljmp
mov
ds
fldt
dec
pop
pop
adc
lret
ss
mov
ss
lcall
ss
inc
rcrb
jl
in
sahf
sub
sarl
vmovaps
shl
push
jmp
scas
cli
pushl
cld
xor
ja
mov
xor
push
arpl
out
adc
cmp
fidivrl
push
cmp
cmp
cmp
cmp
cmp
cmp
rorl
mov
call
imul
pop
repz
cltd
lret
jo
dec
cmp
aas
aas
sarl
lcall
aas
in
lcall
pusha
push
mov
pusha
mov
and
jp
cmpsl
cmp
mov
xor
mov
xor
mov
xor
pop
xor
mov
cwtd
clc
jae
xor
push
call
popa
imul
pushl
and
lahf
xor
pushl
xchg
inc
push
sub
cmpsl
or
or
dec
aaa
cld
inc
out
jge
ss
out
pop
shll
mov
mov
lcall
mov
mov
inc
adc
ret
mov
fwait
push
sub
mov
pushl
inc
aaa
shlb
cmp
outsb
cmp
xorb
cmc
insb
push
sbb
clc
fistpll
cld
incl
adc
sbb
cmp
cmp
cmp
cmp
xor
lcall
lds
ret
and
icebp
cli
add
add
sti
push
cmp
cmp
lcall
cmp
fidivrl
inc
push
cmp
jge
cs
loop
inc
jb
pushl
lods
pop
and
loope,pt
test
jb
xchg
ds
ds
ds
call
jle
and
sub
lret
push
mov
add
js
nop
data16
call
xor
mov
pop
xor
xor
xor
xor
aas
inc
cmp
push
sub
cmpsb
pushl
ljmp
mov
jge
add
cmp
enter
icebp
cmp
cmp
jl
cltd
andl
push
sahf
es
mov
std
pushw
sbb
arpl
cmp
call
cmp
cmp
cmp
cmp
out
pop
jle
repz
lahf
les
jmp
fldcw
sahf
out
pop
adc
fdivrs
sub
sahf
cmp
call
out
aaa
push
or
sub
sbb
js
sbb
bound
and
shll
insl
cli
pop
je
lahf
xor
xor
xor
scas
adc
inc
clc
or
push
mov
cmpsl
adc
push
pxor
adc
jmp
push
pop
out
sbb
or
lock
push
pop
cmp
sub
sub
clc
mov
cmp
cmp
cmp
push
roll
sti
cmp
pop
mov
aas
lcall
jg
addl
pushl
mov
outsl
xchg
xchg
xchg
imul
fwait
arpl
mov
cmpsl
call
stos
stos
push
lods
scas
scas
dec
mov
mov
mov
mov
mov
mov
ret
cmp
mov
pushl
leave
lret
int
iret
das
rcl
shrl
aad
xlat
daa
fstp
fistps
loope
jecxz
in
out
call
jmp
out
out
psllw
repz
div
pop
stc
cli
sti
add
incl
add
add
jmp
add
add
inc
inc
inc
add
dec
or
decl
add
push
push
push
add
adc
or
xor
adc
xor
sbb
sbb
sbb
or
add
add
xor
xor
and
xor
sub
sub
sub
or
add
xor
and
out
inc
loop
sbb
incl
andl
in
adc
add
sbb
mov
sbb
pop
xchg
pop
incl
test
add
addb
incl
scas
js
pop
sbbl
pusha
add
add
mov
rclb
rorl
addb
sbb
ret
add
or
into
add
sbb
add
in
adc
jg
fildl
bswap
sbb
aas
loop
mov
rcr
sbb
dec
out
add
dec
rolb
add
popa
add
neg
icebp
popf
rolb
imul
fwait
insb
insb
sub
gs
je
incl
add
fs
imul
add
or
std
ljmp
ret
or
add
je
jb
jns
adc
add
orl
lret
push
pop
cld
in
xlat
inc
xchg
cld
mov
cmpsl
rolb
rclb
outsb
push
pushf
je
mov
push
and
shlb
cs
xor
aaa
lock
push
roll
add
dec
cmpsl
lock
jae
jb
lret
add
add
outsb
jg
rorb
or
or
add
das
fsubs
cwtl
data16
lds
mov
pop
sahf
inc
fbstp
push
loop
insl
ret
sub
loopne
cld
orb
fiaddl
jo
push
ficompl
rorl
rolb
xchg
add
pop
ret
add
xchg
lret
inc
pushl
add
sub
add
add
aad
xchg
in
ficoml
test
inc
jno,pn
xor
in
sub
and
loopne
je
push
pop
add
outsb
adc
pop
and
paddsb
mov
fists
mov
push
int3
or
pop
mov
push
add
add
pusha
push
gs
mov
jmp
mov
pusha
and
insb
inc
jl
pusha
xor
cwtl
add
cmpb
sbb
je
jo
das
das
ja
jo
bound
pushf
sbb
shr
das
loope
call
insb
lcall
gs
push
out
inc
jbe
lock
stos
loopne
mov
mov
setae
popa
or
or
sub
outsl
adc
jecxz
jg
jl
and
iret
xor
cs
xor
xchg
mov
mov
push
add
subb
mov
lret
insb
mov
push
pop
lock
dec
xchg
xorl
mov
mov
mov
jnp
mov
xchg
mov
pop
sub
out
sbb
pop
jecxz
add
inc
ljmp
call
test
pop
addl
lods
sub
repnz
xor
adc
push
mov
cs
notl
std
jmp
sti
xor
call
add
sub
add
in
call
lods
lods
inc
hlt
popa
adc
and
enter
sub
icebp
sbb
cmp
and
xor
cmp
pop
mov
cmp
cmp
sub
sbb
sub
add
jmp
dec
sub
sbb
sbb
pop
shlb
in
std
push
out
fisubrl
and
jmp
ljmp
in
scas
shrb
pop
movsb
xor
inc
mov
movsl
add
popa
or
es
push
jg
testb
add
mov
out
mov
lods
push
mul
jb
jo
mov
mov
dec
stos
mov
sub
out
clc
or
adc
ds
sub
cmpsl
fdivl
pushf
movsb
fdivrs
sbb
mov
mov
jo
jg
icebp
cltd
cmpsl
mov
jbe
div
sbb
in
lds
jmp
jns
add
insb
test
inc
fmuls
cmpsl
dec
and
jo
pop
and
push
mov
outsl
jae
jo
arpl
or
addl
sub
rcr
adc
jg
loop
rcr
add
sti
movsb
push
in
mov
or
push
cld
jecxz
clc
add
mov
je
add
gs
adc
ja
ret
fwait
insl
cwtl
jo
popa
xorb
jle
pushf
gs
arpl
loope
into
and
js
cli
pop
mov
add
mov
test
test
scas
jg
scas
adc
add
mov
andl
std
call
inc
mov
cltd
xchg
mov
xor
pop
out
dec
adc
and
popl
push
jno
add
push
out
xor
push
pop
outsl
cld
inc
in
sbb
inc
add
stc
add
shrb
mov
jbe
and
jne
notb
xorl
sarb
test
nop
jg
inc
mov
dec
sbb
dec
or
add
or
mov
dec
jmp
fcomip
mov
nop
pop
pop
pop
cmpsl
inc
pop
mov
or
stc
or
mov
push
xor
inc
or
sub
scas
adc
sbb
push
test
scas
inc
movsl
or
insl
cmpl
push
ret
or
sbb
sbb
pop
out
push
jmp
adc
sbb
push
inc
or
mov
ljmp
add
inc
jp
movsl
add
push
out
add
inc
mov
dec
mov
mov
divl
mov
cwtl
cmp
or
jle
or
pop
add
clc
dec
push
mov
dec
add
jecxz
mov
sbb
sbb
mov
push
icebp
add
push
shrb
insb
sub
jg
cld
pop
imul
or
inc
std
jmp
mull
mov
jmp
sbb
hlt
mov
add
popf
and
xlat
int3
filds
ffreep
add
add
dec
stos
cli
push
dec
mov
mov
notb
dec
pop
mov
xor
cld
lock
in
icebp
add
in
dec
es
mov
cmpsl
pop
dec
pop
mov
dec
mov
inc
dec
mov
orb
jmp
dec
push
mov
pop
pop
mov
or
cmc
fistpl
xchg
sbb
loop
add
testb
jbe
fwait
icebp
lcall
sbbb
mov
scas
adcl
fbld
inc
xchg
xchg
mov
inc
xchg
cmpsb
add
pop
mov
pop
cli
xchg
inc
dec
dec
mov
cmpsb
jae
mov
push
add
ljmp
mov
pop
add
aas
rol
adc
add
ss
loopne
and
aam
lcall
push
scas
mov
mov
mov
mov
mov
lcall
mov
pop
ret
push
push
mov
xchg
push
push
inc
mov
popa
ret
dec
shr
ljmp
out
lock
sbb
add
loopne
in
adc
test
add
push
pop
decl
or
popa
mov
jae
xchg
or
fucomi
insb
bound
xchg
pop
mov
test
lods
pop
adc
pushl
add
mov
lahf
jno
fwait
mov
test
xor
xchg
mov
xchg
mov
mov
add
xlat
stos
jmp
pop
add
call
andb
mov
mov
das
cli
ljmp
ret
rol
aad
add
and
jecxz
xor
roll
xor
dec
les
add
js
imul
add
out
lds
sar
hlt
or
sbb
jecxz
aad
subb
xchg
or
mov
jae
mov
push
sub
jno
pusha
mov
add
int3
loope
or
idiv
outsl
clc
out
cmc
add
and
and
add
adc
lret
mov
lock
dec
dec
scas
cmpsb
pop
xchg
data16
xchg
xor
add
inc
or
cmp
jne
sbb
push
or
adc
ljmp
sub
or
jae
sahf
mov
xchg
mov
and
sbb
push
clc
xor
and
mov
sbb
jmp
cltd
mov
jno
mov
pop
movsb
fcomip
cmpsb
pushl
mov
sbb
jmp
mov
xchg
decb
mov
lahf
addb
adc
lsl
btr
sbb
sbb
pop
out
push
es
out
mov
mov
je
addr16
adcl
data16
xor
xchg
xor
mov
push
add
addr16
pop
cmpsl
push
test
mov
outsl
push
push
cmpsl
inc
pop
andb
and
jno
mov
adc
xchg
xchg
or
mov
jb
or
pusha
jle
lcall
pop
inc
push
mov
inc
jb
test
aas
jo
pop
inc
push
arpl
ljmp
push
mov
xor
jb
and
dec
mov
add
rolb
fldenv
jg
outsl
clc
lret
and
loop
in
fs
add
in
jmp
mov
or
or
push
and
ljmp
xchg
data16
xorb
mov
dec
dec
dec
mov
dec
dec
add
pop
loopne
out
xor
shll
mov
push
push
push
es
das
cmp
push
shrb
ss
loop
dec
lods
pop
jo
movb
push
or
fidivs
add
lock
mov
add
sbb
icebp
add
add
decl
and
imul
and
cld
incl
popf
add
xchg
js
mov
cld
dec
stos
call
fnsave
test
dec
cbtw
inc
mov
mov
in
clc
cmp
cmpl
lcall
pop
mov
pop
dec
decl
stc
clc
push
mov
xor
xor
idiv
mov
rclb
cmpsb
pop
inc
inc
mov
ja
lahf
add
xchg
stos
lods
mov
stos
mov
scas
dec
mov
add
mov
mov
fwait
dec
mov
mov
stos
xchg
lea
mov
inc
test
or
pusha
inc
ds
jmp
add
or
mov
mov
mov
and
sub
ja
mov
sub
test
repz
pop
or
dec
pop
clc
adc
inc
mov
repz
cld
call
repnz
xor
js
pusha
mov
fldl
and
mov
push
hlt
xor
stc
sahf
adc
push
push
mov
adc
in
cli
adc
fadd
sarb
aam
xor
fmuls
fcmovu
xor
pop
add
or
xchg
je
insl
mov
idivb
add
or
roll
mov
subb
pushf
fidivs
cld
push
mov
decl
cld
cld
repnz
ja
jle
ljmp
add
or
data16
mov
add
ja
jns
jp
add
xor
sbb
roll
lods
mov
add
sbb
out
adc
mov
pop
aaa
and
popf
popa
adcb
aas
les
sub
adc
or
or
adc
psrad
pop
cmp
sbbb
loop
loopne
jecxz
add
cwtl
cltd
sbbl
test
pop
stos
outsl
stos
clc
mov
jmp
repnz
mov
cmc
pop
mov
incb
cltd
test
out
pop
or
loopne
and
ret
sbb
adc
inc
decl
lock
ror
les
push
mov
cmpsb
pop
add
inc
xor
pop
jg
inc
mov
add
mov
fdivp
je
mov
dec
mov
add
jb
out
lcall
scas
push
test
and
adc
mov
lcall
mov
inc
push
add
scas
adc
ltr
incl
jae
xchg
dec
lret
jns
jl
jae
add
and
aaa
pop
cmc
ljmp
sub
push
xor
push
adc
fs
cli
out
call
xor
push
add
scas
xchg
shr
add
jmp
pop
push
cmp
or
push
ljmp
jmp
es
push
mov
aam
loope
xchg
lods
inc
mov
add
sub
adc
fst
inc
ret
imul
mov
scas
xor
out
loop
sub
rol
in
dec
test
dec
jg
fisubrs
lret
add
out
movl
testb
sbb
cmp
mulb
sbb
adc
add
adc
outsl
clc
lcall
cli
sub
sub
jecxz
mul
sub
mov
jg
mov
pushl
dec
jecxz
out
fwait
les
jg
or
mov
jge
scas
lods
or
rolb
shll
rcr
outsb
mov
scas
push
push
aaa
adc
cmpsb
pop
sbb
ljmp
insb
and
call
dec
std
jg
mov
int
add
cmc
clc
add
lret
aam
pop
shlb
loop
add
mov
dec
inc
cmpsl
inc
pop
jno
or
mov
inc
dec
inc
add
xor
ret
cmp
clc
sub
jo,pn
cltd
push
mov
sarb
and
xchg
cwtl
jecxz
dec
dec
inc
std
lcall
push
push
add
incl
js
jmp
xor
clc
imul
add
jecxz
jbe
pushf
in
shll
les
movsb
rcrl
sbb
inc
add
into
or
clc
enter
jg
loopne
fldl
loope
mov
sbb
rol
data16
cmp
jbe
ss
push
fwait
decl
das
xor
aaa
sbb
push
shrb
and
ret
add
clc
decl
xor
aas
fnstsw
and
mov
ja
aaa
lds
ds
shll
das
sar
pop
or
dec
lea
dec
mov
lcall
inc
mov
pushf
pop
push
push
mov
xchg
pop
adc
pusha
pop
push
mov
out
les
and
mov
adc
aaa
orl
cmp
ljmp
mov
mov
scas
dec
adc
stos
mov
mov
lahf
inc
mov
mov
outsb
add
pop
addb
xchg
jnp
xorl
nop
add
leave
lcall
loopne
in
jmp
add
cmc
daa
and
cmp
mov
adc
mov
dec
pop
and
mov
insl
jb
pop
add
fildl
pop
inc
pop
movsb
pop
inc
jne
jl
inc
inc
pop
orb
pop
or
adcb
push
push
sbbl
jmp
jle
cwtl
subb
xor
lret
ss
pop
test
add
pop
push
push
scas
pop
xchg
push
dec
push
cmp
mov
mov
add
xor
loope
sti
jmp
inc
mov
mov
clc
or
lea
jb
sbbb
ja
stos
sahf
xchg
xorl
imul
std
int3
sbb
lret
arpl
aaa
cltd
lret
jmp
mov
jnp
data16
inc
lcall
popa
subl
addl
cltd
bound
stos
lea
icebp
mov
stos
insb
xchg
pushf
xchg
jle
test
loop
cli
stos
sahf
mov
mov
stos
dec
cmpsb
mov
pushl
mov
lods
mov
mov
mov
mov
mov
rcll
inc
dec
dec
push
fistps
inc
inc
mov
inc
push
add
adc
mov
enter
sbbb
ljmp
mov
mov
pushf
sahf
push
xor
cmp
fsubrs
push
pop
push
mov
dec
pop
xchg
jge
add
mov
pop
arpl
add
fcomip
pop
cld
lahf
pop
push
dec
mov
push
popf
js
jl
push
jle
ljmp
loope
in
mov
sub
lcall
dec
push
jmp
jg
ljmp
into
daa
pusha
hlt
sub
daa
rol
ljmp
push
std
jmp
jmp
cld
mov
pushf
dec
dec
pop
test
mov
pop
add
cmpsl
dec
pop
pop
stos
incb
pop
push
or
mov
push
inc
jle
cmp
cmp
pop
lock
cmp
out
arpl
push
jnp
push
sti
add
jbe
jne
or
sbb
or
unpcklps
loopne
call
adc
push
pop
push
cmpsb
adc
cwtd
rclb
xchg
nop
xchg
call
inc
xorl
fadds
xchg
pusha
sahf
cltd
lcall
xchg
xchg
sahf
jns
scas
add
dec
test
mov
loope
add
push
repnz
movsl
jo
mov
mov
push
mov
mov
les
ret
std
add
and
into
les
add
decl
aam
fcompp
fisubl
into
xor
or
scas
add
call
jg
scas
xor
in
mov
sbb
sti
out
mov
mov
adc
inc
icebp
push
cmp
decl
add
mov
dec
or
adc
push
sbb
or
inc
pop
hlt
fbld
and
xor
cmp
add
cmp
fdivr
scas
jg
cmp
cld
xor
daa
ret
sub
dec
inc
inc
icebp
add
add
inc
pop
dec
loop
cmp
cmp
popa
and
sahf
data16
std
sub
cmpsb
xchg
nop
jnp
test
test
jg
xchg
xchg
call
mov
jp
cmpb
jp
xchg
xorb
add
jmp
dec
cltd
jle
mov
aam
push
subl
decl
ret
fs
movsl
push
test
mov
pop
mov
add
mov
stos
and
repz
call
pushf
push
stos
stos
negb
lods
fstl
add
loope
jle
je
mov
push
dec
pop
dec
ret
ljmp
loop
xchg
fwait
insb
adc
sub
test
insl
fs
ljmp
add
sbb
test
and
jg
stos
mov
mov
mov
cltd
pusha
fcomi
decl
dec
dec
pop
add
pop
cmc
div
je
roll
mov
outsb
arpl
jp
add
mov
push
std
out
sbb
or
loopne
inc
jg
cmpsb
jl
mov
jbe
in
cwtl
test
ljmp
mov
xchg
arpl
mov
push
pop
push
cwtl
ja
jae
ficoml
dec
add
pushf
incl
xchg
mov
inc
add
mov
cs
fisttps
sbb
inc
loope
inc
scas
ljmp
ror
popa
add
mov
scas
mov
lcall
loopne
jge
mov
pop
loopne
mov
imul
cmp
add
aas
es
dec
idiv
jmp
cmp
loope
cli
sub
xor
sub
sub
sub
xor
jnp
mov
xorb
push
inc
dec
mov
std
imul
dec
inc
add
scas
pusha
or
les
jne
test
dec
out
add
xchg
add
aaa
and
les
mov
lock
cmp
jnp
add
or
xor
add
jmp
imul
add
int3
iret
add
and
les
mov
movl
jnp
leave
cmp
aas
lret
gs
sub
cld
andb
lods
das
xor
inc
inc
push
loopne
pushl
push
dec
repnz
or
cli
bnd
adc
call
out
loop
mov
jmp
lods
sbb
mov
dec
dec
dec
ret
clc
imul
jl
adcb
mov
xor
js
push
outsl
arpl
cmp
mov
push
ljmp
test
pop
inc
push
notb
pop
adc
sbb
addl
pusha
xchg
xchg
subl
mov
imul
nop
xchg
jb
mov
or
arpl
adc
jae
sarl
call
fwait
xchg
int
mov
mov
mov
in
ja
popf
fisubrl
sbb
aam
or
and
outsl
loopne
xchg
insb
lock
sbb
pushl
or
frstor
cmp
mov
or
fcom
iret
xor
push
std
mov
add
out
sbb
sti
jg
enter
add
adc
in
inc
or
nop
sbb
sbb
pop
loopne
dec
int3
pop
sbb
add
ss
subb
lods
fimull
loope
lcall
xor
ffreep
inc
xor
or
stos
call
xor
xchg
pop
or
cmpsb
cmpb
in
cs
push
test
dec
pusha
ljmp
js
mov
test
mov
ljmp
inc
push
pop
pop
push
scas
pop
outsl
pop
sbb
sbb
mov
pop
and
sbb
pop
loop
jmp
sbb
clts
out
sbb
jmp
jle
mov
dec
inc
hlt
push
out
clc
inc
dec
scas
stos
mov
add
nop
mov
or
fcmovu
pop
std
lods
popa
je
pusha
js
enter
add
imul
incl
mov
inc
inc
inc
mov
adc
stos
lcall
mov
mov
or
mov
adc
loopne
dec
pop
jg
xchg
scas
inc
cmp
push
ja
mov
add
cwtl
gs
outsl
xchg
jo
inc
cmpsl
add
push
mov
mov
dec
loope
push
mov
mov
out
enter
mov
scas
mov
cwtl
lcall
xchg
cwtl
jbe
pushl
call
jnp
sbb
or
mov
xchg
dec
in
dec
add
dec
push
scas
push
push
ss
push
push
pop
cmpsb
pop
cld
mov
gs
push
insb
insl
outsb
nop
jo
add
je
jbe
js
add
or
or
pusha
and
das
xor
xchg
push
mov
je
inc
loopne
js
js
outsb
and
add
add
and
mov
inc
add
or
mov
or
fldt
das
or
add
push
pop
pop
pop
mov
arpl
addr16
imul
test
or
sub
add
and
movsl
push
gs
mov
in
adc
loopne
push
scas
and
inc
js
mov
mov
and
dec
mov
outsl
cli
es
add
js
jo
mov
inc
and
xchg
adc
insb
js
adc
lock
insb
inc
mov
clc
push
outsb
add
add
lock
jae
pop
fdivl
aaa
test
aam
insb
cmpb
hlt
jbe
or
add
mov
add
xchg
mov
loopne
bound
insb
mov
push
shrb
gs
push
jo
add
mov
jg
mov
popa
fs
bound
jb
jb
inc
mov
mov
inc
jb
popa
je
stos
push
filds
fs
hlt
xor
pop
lock
pop
lcall
mov
dec
xchg
outsw
jb
jmp
push
sbb
push
jb
arpl
lods
je
push
subb
or
jp
fwait
push
je
lea
jl
scas
pop
mov
dec
nop
rolb
xor
out
lcall
xor
outsb
fwait
insb
cli
adc
fs
cmpb
mov
or
pushl
decb
ret
js
ret
xchg
cmp
mov
inc
inc
xchg
ss
jg
inc
push
adc
mov
push
bound
jg
push
and
push
inc
dec
mov
mov
add
inc
mov
mov
or
push
xor
dec
inc
inc
outsl
push
dec
push
dec
stos
xchg
lods
inc
push
lods
or
dec
dec
dec
aas
cld
ja
mov
push
xchg
scas
inc
push
or
mov
adc
clc
mov
dec
push
inc
mov
inc
dec
mov
lock
inc
dec
icebp
add
sarl
jno
add
and
sub
dec
xchg
add
inc
xor
dec
inc
stos
in
inc
pushf
outsl
outsb
outsb
lcall
pop
out
arpl
sub
ja
outsb
arpl
mov
bnd
outsb
je
and
mov
lock
cmp
shlb
outsb
arpl
inc
in
nop
imul
mov
push
ds
add
jo
popa
insb
imul
insb
outsl
jae
xor
mov
bound
mov
mov
and
adc
xor
pop
hlt
sbb
jo
mov
sahf
gs
mov
add
mov
aad
sub
push
pushf
jno
or
and
inc
hlt
add
cs
bound
jl
push
insb
xchg
outsb
push
jae
into
inc
addr16
push
inc
xchg
jae
call
xor
add
xor
dec
shlb
aaa
hlt
fcoml
sbb
jno
xchg
imul
ss
xor
mov
int
rclb
rcrb
addb
mov
and
jle
xchg
xor
push
ret
cmc
fildl
jb
mov
adc
enter
push
mov
mov
xor
sub
xor
mov
push
fcomps
mov
icebp
scas
in
stos
test
jo
xor
in
jne
mov
outsb
repnz
sub
insl
popa
jo
out
add
inc
dec
push
mov
decl
mov
mov
gs
pop
xor
icebp
add
xor
repnz
mov
fsubrl
out
jo
lods
imul
add
gs
addr16
jg
fists
adc
mov
sub
mov
add
loop
mov
pop
dec
jp
mov
pushf
imul
add
inc
xchg
sub
add
push
cwtl
cmp
insb
mov
push
push
lea
add
aas
mov
xor
inc
mov
inc
sub
addr16
jle
dec
std
pop
dec
decl
add
dec
fcomps
and
inc
std
jnp
lcall
jbe
push
mov
or
cmp
test
jns
inc
jge
mov
push
scas
sbbl
add
xchg
push
xchg
push
cli
jg
or
xchg
rcll
test
lock
dec
lock
mov
mov
lea
push
aas
xchg
sub
dec
mov
push
outsl
mov
xor
dec
xor
frstor
and
xor
add
call
aaa
cld
das
es
jb
xor
inc
outsb
mov
adcb
add
inc
insb
or
mov
gs
jnp
inc
xchg
jbe
inc
add
je
in
add
lds
ljmp
and
data16
imul
and
fbstp
divb
or
int3
or
and
add
fsubs
jb
mov
and
and
xor
cmpsb
fidivl
pop
mov
pushf
pushl
push
sbb
xchg
inc
repnz
add
dec
pop
jge
add
mov
call
lret
push
push
fildl
dec
call
lock
pop
or
icebp
cs
adc
ljmp
hlt
in
inc
nop
ja
push
mov
enter
ljmp
add
fwait
call
pop
and
aaa
shrb
sar
lock
cmp
mov
add
movsb
push
call
aas
pop
ret
push
nop
and
jg
in
jle
test
add
add
add
pop
stc
dec
outsl
push
std
mov
jp
jne
push
mov
push
sub
fstpl
fcmovnb
incl
add
call
dec
pop
sti
mov
jbe
and
cmp
scas
iret
std
ds
leave
call
test
jp
mov
push
call
cmp
adc
scas
jmp
je
jo
addb
pop
fmull
mov
jmp
shlb
and
mov
add
mov
push
pop
push
clc
dec
enter
dec
fists
mov
cmp
inc
inc
add
out
stos
movsb
cmp
cld
lea
std
repnz
jo
add
aas
mov
mov
fistps
sbb
push
add
outsb
je
add
mov
pop
call
ljmp
filds
test
cmp
ljmp
pop
mov
push
ds
add
pushf
add
int
pcmpeqw
call
xchg
sbb
test
pop
nop
pop
push
mov
mov
rolb
push
inc
cmp
or
add
ss
and
and
push
sub
in
jb
mov
loopne
jmp
mov
xor
lock
pop
mov
faddl
push
add
fbld
lock
nop
lcall
cwtl
scas
push
mov
add
out
inc
dec
or
jne
das
rorl
xor
stos
add
or
mov
push
inc
jg
divb
xor
inc
in
mov
ret
dec
add
imull
push
lea
push
sbbb
ljmp
and
mov
adc
mov
repz
push
mov
sbb
lret
scas
jl
je
mul
outsl
incl
cmpl
je
and
add
jg
mul
cltd
mov
jmp
mov
jmp
mov
ret
inc
cmpb
mov
adc
add
je
cmp
jbe
pop
sar
fildl
push
or
and
test
je
loop
test
mov
add
push
adc
pop
fbld
rcrb
push
enter
ret
fildll
push
sbbl
push
push
call
fnsave
pop
rorb
test
mov
insl
orb
xor
shlb
pop
pop
ret
clc
add
mov
pop
shl
adc
ret
stos
addr16
aas
mov
fcoml
rcrb
jl
sbb
inc
or
leave
push
loop
inc
bound
and
add
mov
sub
adc
xchg
add
dec
xor
test
jb
cld
mov
push
add
push
rorb
mov
sbb
lock
ret
xchg
mov
cld
jo
out
rolb
mov
mov
jg
adc
mov
inc
inc
add
ss
adc
adcl
add
aaa
push
loopne
adc
xor
adc
bound
mov
push
shll
in
pop
lock
sarb
mov
add
aas
outsl
dec
loop
add
sbb
mov
hlt
rolb
das
push
sarl
rolb
add
dec
mov
mov
scas
decb
jbe
add
cmp
adc
mov
inc
icebp
out
ds
fs
pop
leave
add
inc
enter
push
in
pop
je
push
fsubrs
shll
push
mull
frstpm(287
fildl
ret
or
movsb
push
ret
sub
push
fcoml
push
outsl
aaa
cld
add
je
int3
add
xchg
add
sbbb
and
xchg
je
push
xor
fidivl
std
add
mov
push
in
adc
cmp
hlt
push
loopne
mov
pusha
mov
mov
add
mov
mov
outsl
sbbb
test
sub
push
jne
and
and
inc
jl
incl
repz
cmp
or
cmp
add
je
mov
jmp
mov
inc
sub
lods
add
pop
incl
xor
pop
push
dec
sub
loopne
pop
pusha
jge
cmp
jmp
jecxz
popa
inc
loope
clc
mov
pop
loopne
in
sbb
inc
pop
push
mov
rolb
or
sbb
daa
loop
pushl
roll
adc
pop
push
test
pusha
adc
pop
pop
shlb
pusha
andb
test
and
add
pusha
add
xlat
call
sbb
and
loope
loopne
push
add
add
xchg
jmp
push
inc
pop
out
sbb
xchg
xor
fwait
push
ds
push
lret
inc
pusha
daa
dec
cmp
jl
and
xor
jle
in
scas
xchg
push
jbe
mov
inc
or
ljmp
movsl
pop
push
or
in
loopne
adcl
jecxz
dec
loope
sbb
xorl
jmp
in
mov
adc
or
inc
jmp
add
repz
ds
dec
xor
push
je
cmp
jg
je
add
xor
rolb
adc
ljmp
xchg
add
push
xchg
add
int
mov
pop
jmp
sub
sub
or
inc
orb
cwtl
sub
cmp
mov
loopne
and
push
and
push
push
popa
push
ljmp
push
icebp
mov
addl
outsb
mov
pop
push
push
rorl
movsb
pusha
pusha
add
addl
xor
adc
loopne
loopne
pop
xchg
jbe
dec
aam
push
push
pusha
mov
jl
je
in
cmpsb
mov
add
mov
pop
call
inc
mov
shl
jp
call
sahf
or
test
ds
mov
mov
add
stos
jne
add
loope
push
push
les
call
jmp
pusha
pushl
std
mov
and
or
call
xchg
add
ja
movb
push
or
mov
loopne
jl
call
and
pusha
inc
add
adc
push
jb
movsb
test
push
inc
pusha
jo
outsl
cli
pop
loope
pusha
dec
or
in
or
lea
das
shl
mov
mov
mov
int3
call
mov
adc
or
sbb
mov
inc
loop
push
lock
andb
repz
push
loopne
sbb
push
pusha
test
in
das
fisubl
mov
cli
push
call
cmpsl
fildl
pop
add
mov
test
je
add
mov
mov
test
adcl
adc
shr
or
or
clc
idiv
mov
loop
je
and
mov
inc
and
les
or
in
or
pushl
movsb
cmpb
pop
outsl
mov
rolb
mov
int3
ret
sahf
push
add
mov
mov
fidivrl
adc
or
aad
in
pop
jle
mov
jmp
mov
push
popa
add
sarb
jl
cmc
popa
add
dec
pusha
add
cmp
divl
jbe
adc
data16
out
ret
lea
jno
call
mov
ja
jno
add
les
icebp
pop
notb
push
push
mov
xor
sbb
push
inc
mov
cmp
mov
push
je
jge
aas
std
push
hlt
add
data16
ja
inc
sub
incb
pop
adc
mov
call
jbe
add
aaa
cld
mov
mov
push
bnd
mov
cmc
or
mov
adcb
pop
cld
push
mov
or
incb
clc
jl
adc
test
arpl
cs
shrb
ja
sbb
imul
clc
scas
push
fdivs
jne
mov
push
pop
or
sub
add
les
jmp
std
mov
es
mov
inc
xor
mov
repnz
jmp
int3
jne
push
call
cmpl
xor
scas
cli
out
or
xor
cmp
add
test
adcl
and
std
lock
cmp
sbbb
lcall
and
add
xor
scas
decl
xor
incl
test
push
adc
icebp
inc
cmp
xor
mov
shl
pop
cmp
ret
and
mov
pushl
add
add
cmp
cmp
in
sub
lock
inc
lock
pop
jno
or
mov
jne
jmp
inc
jo
lock
add
std
sbb
ret
push
enter
jno
lret
adc
dec
add
ret
test
call
jnp
inc
sbb
or
cld
jno
push
push
xor
xor
pop
shl
push
xorb
or
adc
lea
add
call
pop
das
jo
ja
add
inc
jo
push
push
mov
sub
or
adcb
push
add
dec
dec
mov
insb
mov
int3
leave
inc
push
mov
fisttpl
and
push
jb
xor
push
loop
outsl
pop
je
sbbb
enter
daa
push
call
mov
push
fwait
mov
shlb
or
and
arpl
push
xchg
or
inc
fdivr
in
outsl
scas
xor
inc
sti
push
mov
xor
les
jbe
inc
cmpsb
incl
lock
adc
or
push
push
pop
ljmp
add
mov
dec
in
dec
push
pop
sbb
sarb
mov
sub
lahf
mov
jecxz
jmp
xor
mov
cmp
jge
add
mov
call
stc
adc
cmp
sbb
inc
into
xor
pop
cmpsb
push
add
fwait
mov
mov
test
jmp
mov
call
pop
pusha
cmp
enter
jb
ss
call
lcall
mov
or
or
fs
mov
push
add
add
push
or
adc
and
or
cmp
xor
int3
adc
pop
pop
je
faddp
dec
jb
call
pop
lcall
push
incl
xor
xor
lea
jno
lods
mov
call
add
mov
inc
or
mov
lea
clc
xor
stos
push
lock
cld
sar
add
mov
jo
jne
adc
adc
and
push
cmp
fcomip
mov
inc
lar
mov
jne
add
adc
int3
add
mov
addl
add
xor
mov
ljmp
in
addr16
mov
push
push
mov
call
jne
hlt
jbe
mov
sub
xchg
scas
push
inc
iret
jmp
xor
inc
mov
icebp
sbb
xor
sub
test
add
add
mov
lock
out
pop
xor
in
add
add
add
cmpl
push
rorl
dec
jne
mov
lock
out
enter
stc
add
sbb
dec
add
ret
add
jne
xchg
adc
nop
ss
or
jae
mov
int
ret
mov
ret
rolb
dec
dec
je
addl
mov
orl
fldt
inc
mov
xor
adc
nop
cli
pushl
addb
jns
pop
pop
jp
data16
andl
outsl
lret
and
cs
xor
fdivrl
ret
jo
xor
add
add
fiadds
cmp
pop
mov
jp
je
xchg
sub
andl
push
dec
cmc
subb
addb
je
call
mov
shr
jb
addb
cmp
jne
mov
aam
je
mov
cmpsl
icebp
ja
adc
adc
pop
cmp
cld
add
aaa
jge
js
icebp
scas
add
ss
pop
jmp
mov
mov
lock
add
inc
jmp
je
lcall
mov
cwtl
cmp
jbe
mov
jmp
xor
add
inc
jmp
jno
shr
xor
xchg
pshufw
cmp
lea
loope
push
dec
add
aad
mov
scas
mov
jb
dec
test
add
sarl
or
sahf
jno
adc
push
jne
les
jg
add
jo
mov
push
push
push
add
or
jg
enter
adc
aas
jmp
or
or
testl
mov
xchg
pop
je
or
mov
jb
je
pop
icebp
xor
sbb
mov
in
cmpsb
push
or
push
mov
adc
add
fstpt
call
mov
ss
mov
or
jp
mov
mov
adc
cwtl
or
cmp
add
jo
ret
push
xlat
fwait
or
push
je
and
or
test
clc
les
jmp
inc
mov
cmp
test
sub
or
xchg
cmc
push
jb
jmp
push
imul
decl
in
sub
repnz
mov
and
sub
inc
jecxz
outsb
inc
je
lahf
clc
pushl
incl
je
imul
add
xor
push
mov
aam
mov
push
fistpll
jbe
loopne
mov
xor
adc
pop
sbb
lcall
sub
pop
pop
pop
xor
lock
xor
jmp
jge
add
xor
cmp
ja
add
inc
mov
push
xor
adc
jbe
call
clc
adc
lods
jbe
cwtl
test
or
scas
jp
mov
inc
mov
enter
lea
mov
mov
jmp
mov
je
jp
jne
lods
call
outsb
xor
push
imull
mov
mov
lock
adc
jae
in
call
fadd
cmovb
pop
adc
dec
mov
clc
call
xchg
xor
test
lock
insl
push
sahf
fimuls
addl
data16
cli
je
jl
outsb
inc
mov
jl
xchg
cmp
push
push
add
mov
test
push
scas
jl
int
xchg
sbb
jmp
push
paddd
sbb
dec
aad
test
fistpl
fisttps
mov
sbb
imul
fsubs
repnz
fisubl
mov
imul
icebp
mov
jge
test
out
call
jne
insl
push
rorl
push
pop
push
pop
pop
pusha
add
stos
mov
adc
inc
lret
xorb
jmp
sar
cli
andb
mov
sub
fistpll
push
mov
orl
lret
andl
push
int3
sarb
rclb
jp
loop
add
jnp
sbb
cmp
shr
push
repz
sbb
call
or
mov
lock
and
pop
in
pop
adc
lods
lret
push
push
sahf
sbb
cli
push
push
incl
sbb
add
rclb
orl
cmc
mov
enter
cmp
fcoml
stc
mov
pushl
cld
cmp
push
leave
insb
add
inc
or
pop
push
add
add
pushl
inc
and
in
add
and
push
cli
jmp
push
xchg
add
mov
orb
sub
or
or
push
rclb
rorb
pop
pop
ret
cmp
out
or
std
int
ljmp
mov
pop
add
push
decl
add
cmp
jp
je
adc
test
stos
in
mov
shlb
pop
ret
call
clc
inc
adc
insb
mov
mov
sbb
push
mov
pop
lock
lea
leave
lock
ljmp
nop
roll
xchg
js
push
cmc
mov
sarl
ljmp
push
inc
in
push
push
mov
push
jl
or
sbbb
jmp
jbe
je
data16
std
xchg
je
push
fimull
adc
int3
sar
adc
lea
push
sub
pop
add
incl
push
sbb
mov
mov
push
mov
call
aas
jle
mov
pop
add
mov
add
shll
or
outsb
out
test
push
loop
pusha
mov
data16
faddl
std
shlb
lods
sbb
xor
push
mov
je
call
inc
add
push
sbbl
int3
jo
push
pushw
xchg
jne
inc
pop
js
cmp
mov
insb
jne
push
into
aam
shlb
pop
inc
sahf
mov
test
jle
pop
lods
push
push
add
fildl
push
test
movsl
lcall
or
mov
in
je
loopne
fildl
xchg
loopne
in
mov
aam
mov
jne
out
test
pusha
sbb
mov
mov
dec
sub
nop
jbe
jo
or
rolb
inc
sbbb
hlt
pop
sarb
sbb
adc
cmpsl
call
dec
mov
inc
inc
hlt
pop
add
adc
cli
add
inc
inc
mov
mov
dec
insb
sahf
mov
pop
cli
dec
imul
push
pop
jb
add
call
loop
and
pusha
jle
push
out
lods
pop
js
pop
mov
and
and
mov
aaa
mov
pop
sbb
insb
bound
insb
inc
push
test
add
incl
push
call
add
add
mov
mov
mov
jp
lds
aas
mov
cmc
in
inc
pusha
testl
or
sub
mov
and
inc
and
inc
xor
ss
hlt
test
cmp
inc
call
inc
lock
cmp
pop
fstpl
cmp
xor
pop
jl
sbb
add
divb
rclb
jp
jne
mov
adc
sbb
stc
add
ss
push
fadds
add
adc
dec
add
out
or
or
and
mov
mov
sub
jbe
lock
or
cmp
push
add
loope
jl
add
test
loopne
int
or
add
or
xchg
decl
add
je
add
cld
add
push
fbstp
call
adc
pop
or
bound
inc
and
lods
dec
cmp
lea
push
jmp
mov
jb
pop
jl
mov
mov
imul
fiaddl
xchg
jmp
inc
and
cmp
add
insb
into
out
inc
or
pop
addl
sub
je
frstor
int3
push
sbb
mov
push
rorb
mov
fdivr
jmp
or
mov
dec
repnz
cmp
mov
cs
mov
pusha
insl
ret
mov
push
loopne
orl
lea
jbe
clc
pop
je
pop
mov
call
fs
or
notb
add
mov
add
call
fbld
dec
or
ss
scas
jl
pusha
mov
mov
mov
jb
xorb
or
xor
adc
enter
or
lock
or
shlb
mov
add
aam
or
pop
push
xadd
fistpl
int
sub
pop
adc
loopne
add
inc
and
adc
xor
loopne
xchg
dec
lea
mov
test
mov
or
fidivs
fistl
jb
add
mov
ljmp
aam
push
adc
add
mov
mov
lea
loopne
mov
add
dec
mov
and
in
inc
sbb
es
fs
fistl
push
add
pusha
add
hlt
cmp
or
pop
andb
sbb
loopne
nop
out
mov
and
scas
testb
mov
sbb
mov
mov
decb
add
sbb
popa
xchg
je
pop
add
repz
in
inc
cli
cmc
lods
push
push
pop
cld
push
and
push
call
std
ja
cmpsb
fcomps
push
cmovne
cmp
loopne
outsl
fdivs
jge
mov
syscall
add
stos
mov
add
hlt
mov
add
lret
out
les
adc
call
outsb
cmpsb
jg
push
sub
xchg
add
scas
or
mov
lods
mov
push
cld
scas
outsl
mov
mov
jbe
hlt
test
stos
bound
mov
outsb
aaa
cmp
pop
push
xor
hlt
jmp
movb
bound
jmp
add
add
aam
in
inc
adc
xchg
or
adc
push
push
sbb
decl
adc
pop
push
movsl
out
int3
aam
loopne
fs
out
sbb
ljmp
jne
fs
cmp
cmp
repnz
jno
push
std
cmp
jmp
mov
cmpsb
scas
fistpll
incl
adc
gs
jo
dec
hlt
pop
mov
jge
andb
pop
xor
scas
cli
mov
mov
pop
and
cmp
in
mov
jl
and
adc
outsl
hlt
adc
sbb
push
push
mov
ja
test
mov
add
clc
rolb
sub
jg
pop
std
pushl
or
ss
cmp
lock
jo
in
jle
add
je
stos
outsl
fists
mov
je
adc
mov
jmp
xchg
test
std
sbb
sbb
mov
add
push
inc
add
inc
icebp
gs
lock
dec
lock
fwait
movsl
xor
or
enter
mov
mov
mov
es
lock
add
add
push
test
xchg
jo
inc
cli
fwait
ds
mov
nop
jo
and
lock
decb
call
mov
loopne
inc
sahf
je
push
inc
aad
jecxz
scas
call
pop
sub
out
mov
fcomip
sbb
push
adc
fisttpl
cmp
pop
pusha
ljmp
notb
daa
mov
sarb
and
idivb
sbbb
sti
je
add
pop
mov
xchg
add
pop
push
add
movsl
stos
test
or
lods
and
mov
xor
les
inc
je
movb
mov
jecxz
add
add
xor
sbb
stos
mov
adc
movl
jge,pn
push
mov
cmpb
in
mov
pushl
push
testb
sbb
in
lock
xor
and
sbb
inc
rolb
and
pop
decl
sbb
outsb
inc
insb
iret
mov
jo
xor
jbe
inc
add
mov
or
mov
jb
cmc
jg
hlt
add
and
adcb
sbb
cmp
cmovb
cmpl
fbld
add
push
jno
call
andl
sub
sbb
mov
aam
jns
mov
cmp
stos
mov
mov
xor
dec
pop
jo
xorb
outsl
das
andb
add
pop
repnz
add
push
push
andl
in
sarl
ljmp
ss
push
push
test
inc
gs
xchg
movl
sbb
jo
jp
xor
ret
push
pop
je
inc
loopne
sti
add
sbb
adc
jmp
or
inc
lcall
dec
repz
sbb
push
and
adc
shrb
fucomip
xchg
xor
push
cmp
jbe
xchg
sub
push
jb
cmc
fcomi
out
shlb
push
jmp
test
lock
mov
xorb
inc
push
adc
inc
cmp
mov
dec
cmp
cmpsb
jl
rolb
mov
adc
cmp
jbe
std
mov
jo
and
sti
jne
mov
movsl
sbb
jle
jae
mov
mov
lea
jle
ljmp
add
cwtl
push
mov
sbb
push
sbb
incl
test
je
adcw
mov
loop
push
pop
add
mov
ret
fildl
xchg
shlb
cmp
lcall
cld
cmp
icebp
add
xor
mov
out
jmp
jg
lock
or
and
aaa
insl
clc
add
sub
scas
add
decl
lret
lock
pop
roll
pusha
sbbb
cs
cmpb
scas
or
push
sbb
inc
and
cli
stos
mov
adc
push
dec
xor
mov
mov
lea
mov
cli
pushl
scas
push
insl
mov
pop
push
and
xor
imul
addb
push
das
inc
psllw
sbb
mov
hlt
call
xor
jmp
std
cld
add
loopne
fisttps
mov
push
add
jl
add
dec
fstpt
imulb
push
out
jns
dec
inc
jo
inc
jb
push
in
fwait
in
add
leave
inc
lea
sub
xchg
popa
inc
push
icebp
mov
jb
movsb
repz
jo
pusha
fisttpll
mov
mov
fs
divps
mov
stos
fistpll
add
sub
push
mov
loopne
scas
mov
jo
in
test
ljmp
cmp
ljmp
pushl
add
cmpsb
out
add
mov
push
lock
jno
push
popa
ja
mov
jo
aam
cmp
testb
push
pop
push
icebp
test
cmp
inc
and
rcrb
xor
mov
mov
call
jo
jno
dec
push
lods
lcall
mov
das
mov
lcall
add
repnz
dec
and
jbe
dec
push
adc
pop
adc
mov
mov
jmp
cld
mov
sbb
lock
outsb
test
out
adc
inc
mov
inc
adc
mov
mov
mov
push
add
add
test
inc
fwait
dec
mov
push
jo
push
jle
test
jo
push
in
aam
neg
add
push
call
dec
and
mov
imul
test
pop
imul
stc
sbb
xor
stos
das
test
repz
mov
adc
pop
fnstenv
xor
or
mov
sti
xor
icebp
js
add
arpl
incb
xor
cmp
out
jo,pn
pop
pop
or
je
add
or
or
test
push
cmp
adc
and
lcall
and
xor
xor
add
scas
lock
push
xchg
mov
pop
fisubl
aaa
add
adc
insl
mov
xor
add
add
xchg
je
sar
mov
mov
mov
pop
lcall
insb
push
xor
add
or
inc
sbb
mov
push
test
movsb
sub
add
in
lahf
jne
mov
mov
int3
call
cld
add
shl
pushf
jne
push
add
arpl
mov
ss
mov
or
test
les
lcall
lock
push
xchg
mov
and
mov
sbb
dec
addb
cli
mov
mov
jo
mov
pusha
jno
pop
mov
pop
imul
xor
sbb
fisttpl
jmp
xor
sbb
ljmp
pop
rorb
add
jl
clc
inc
dec
sub
sbb
imulb
mov
xor
mov
and
mov
subb
dec
pusha
or
sub
xchg
inc
xor
cmp
or
add
mov
cmp
out
je
mov
outsl
jg
sbb
push
fdivrp
shr
or
mov
push
fstpl
xchg
test
and
or
sub
sti
shlb
jecxz
clc
xor
jo
and
mov
out
jle
js
adc
in
jmp
xorb
test
mov
call
inc
xor
push
xchg
pop
lods
mov
clc
sub
call
mov
cli
cmp
ret
out
add
sub
jg
lock
cmp
enter
inc
adc
add
adc
xchg
adc
mov
pop
ja
adc
dec
testl
incb
add
jne
repz
fimull
or
cmpl
test
je
test
call
sbb
or
push
test
adc
mov
outsl
test
pop
add
adc
frstor
jns
imull
aam
sbb
jge
pusha
call
jg
ss
ljmp
pop
push
pop
inc
push
inc
test
pop
gs
subb
push
add
sbb
add
into
insl
jg
aas
push
addl
jl
add
addb
fisttpl
ss
fisttpl
mov
pop
mov
fisttps
sub
inc
testb
shrb
aam
dec
call
push
add
mov
jne
cmpl
sti
jne
repnz
mov
adc
cmp
fs
jle
ljmp
add
stc
dec
aas
inc
fimull
lahf
sbb
cmp
xor
or
je
shrb
lods
in
add
pop
push
outsl
cmpsb
out
xor
into
pushl
leave
or
mov
insl
rclb
stos
xorb
sar
sub
push
rclb
jbe
test
xor
and
movsl
fisubs
rolb
xor
ret
jbe
sbb
add
scas
dec
fadd
inc
clc
dec
mov
add
sarb
or
xor
mov
mov
lds
xor
ret
ret
int3
mov
enter
lock
test
or
dec
add
call
pusha
push
shll
push
cmp
add
or
mov
rorl
repz
pop
and
aaa
shrl
or
jmp
mov
mov
and
xchg
or
shlb
add
jg
faddl
roll
add
fidivl
dec
mov
inc
imul
xadd
into
out
cmp
out
push
int3
scas
mov
mov
cld
aaa
add
push
mov
test
repz
mov
and
add
mov
scas
sarb
stos
push
cmpsb
repz
mov
sub
mov
push
mov
push
insb
popf
cli
inc
jl
jb
mov
das
add
rorb
mov
add
jmp
dec
scas
push
mov
xor
cs
loopne
jae
cmp
ja
or
sub
dec
loope
out
aas
or
mov
imul
pusha
jae
push
push
test
dec
loopne
call
aad
scas
push
or
mov
xor
mov
push
pop
mov
dec
mov
lea
sti
fsubrs
mov
pusha
ss
in
jl
or
mov
loopne
mov
call
mov
push
lea
sar
sahf
inc
dec
fbld
rorb
add
pusha
inc
jl
mov
in
pop
jb
loopne
pop
inc
adc
movb
movl
cld
loope
sbb
loopne
mov
js
sbb
mov
das
fisubs
pop
hlt
lods
mov
or
inc
loopne
xchg
mov
lea
das
push
adc
in
mov
test
fdivr
jmp
fildl
int3
jb
clc
mov
call
mov
pusha
jb
andb
add
push
push
pop
into
test
popa
fwait
ror
pusha
xchg
add
inc
and
jo
popf
or
jne
or
pusha
pop
push
scas
jne
mov
push
or
add
push
sub
test
pusha
or
or
inc
xlat
cld
je
mov
sub
push
pusha
cmp
mov
lcall
mov
inc
clc
call
mov
pusha
sub
sub
mov
fmuls
or
les
fs
les
inc
mov
cmp
int
loopne
in
jl
inc
movsb
outsb
sbb
inc
cmpsb
cld
pop
fcoms
dec
outsl
xor
ds
test
mov
call
pop
loopne
add
outsl
adc
je
lea
cs
mov
mov
ss
mov
push
or
cmp
pop
add
add
shll
or
loop
or
pop
or
mov
popl
rclb
sbbb
shr
adc
lods
push
push
subb
test
sti
loopne
mov
pop
pop
adc
das
js
loop
inc
int3
cs
pop
push
inc
ud2
mov
sti
and
sti
ja
lea
addl
lea
rclb
aaa
push
mov
and
jp
je
adc
mov
dec
pop
push
push
push
sub
and
xor
mov
leave
cmp
loopne
iret
jne
or
andb
mov
adc
add
loopne
jg
loope
or
jp
add
es
testl
jo
cmpb
adc
andb
repz
pop
negl
sarb
pusha
mov
pusha
aam
adc
add
or
ja
jns
in
push
and
bound
inc
mov
inc
hlt
jmp
push
add
popf
pusha
sub
pop
lea
loopne
decb
pop
loopne
rcrb
pop
leave
popa
sbb
pop
pop
push
inc
ffreep
add
test
sbb
call
test
and
jmp
test
loopne
into
pusha
ja
xor
mov
cmp
xchg
push
fdivr
jg
add
pop
and
push
lea
fistpll
add
arpl
add
inc
and
mov
cltd
shl
cltd
or
mov
mov
mov
pop
lret
je
jecxz
push
lods
add
adc
insl
mov
mov
xor
data16
push
or
nop
in
or
rorb
mov
mov
pop
idiv
add
add
insb
mov
das
rcrb
xor
sub
lock
xor
clc
add
dec
pop
mov
adc
sbb
push
mov
push
repz
inc
decl
push
fildll
cmp
inc
leave
xor
in
mov
das
mov
pop
jecxz
inc
jle
pop
sub
decl
pop
lock
cmp
mov
push
mov
mov
jle
inc
cmp
push
aas
or
xchg
cld
inc
add
or
cmpb
jg
push
call
push
adc
ret
xor
inc
movl
or
dec
ret
cmpsb
testb
pop
mov
pop
adc
jb
repz
test
jo
or
or
out
add
jae
jecxz
dec
jecxz
lret
pop
popa
jg
jne
cs
jmp
pop
lea
mov
cld
decl
fsubrs
add
movzbl
xchg
add
adc
mov
imul
or
mov
aas
sub
mov
scas
aas
repnz
push
or
xor
push
fcmovnu
pushl
nop
lock
lea
sub
xchg
repnz
push
sbb
adc
cli
aaa
cld
add
insb
and
inc
lock
lea
sbb
fcoms
dec
fs
ret
sub
add
push
test
add
pop
sbb
shrl
fs
inc
push
push
ljmp
adc
test
mov
jo
cs
dec
in
out
mov
call
out
or
add
int3
cmp
and
inc
inc
mov
mov
mov
or
push
push
push
je
cli
sbb
cli
xchg
jp
and
xor
ret
scas
push
jl
and
xchg
add
pop
fsubs
call
pop
add
mov
shlb
mov
sub
or
mov
and
add
add
call
and
lcall
sbb
push
lea
fidivs
xor
outsl
pop
test
cmp
or
icebp
fbstp
jp
pop
div
jne
jbe
cmp
adc
jbe
je
jl
test
call
mov
jmp
dec
jne
jno
xor
fwait
jle
jecxz
scas
lock
rol
lock
shr
adc
xor
imul
repnz
dec
push
sbb
call
inc
aam
mov
jo
shl
pop
cmp
mov
in
sub
and
mov
inc
repnz
mov
add
pop
test
imul
adc
push
fcoms
xor
add
xchg
mov
cmpb
cmp
ret
je
js
mov
aam
call
sbb
cs
push
je
add
sbb
xor
inc
pop
mov
jo
adc
and
mov
push
sqrtps
mov
adc
dec
lea
add
mov
or
int3
test
mov
call
xchg
xor
pop
dec
cmp
pop
mov
clc
cmp
xor
in
sub
push
push
cwtl
mov
jns
push
out
cld
cmp
pop
decl
loope
aam
int3
idivb
jne
or
and
call
pushl
push
call
jne
insb
cwtl
mov
call
xor
jmp
and
pop
add
mov
or
inc
addb
jmp
push
pop
fidivl
inc
call
shlb
jno
add
add
xchg
mov
and
and
add
adc
aaa
push
push
inc
fiadds
adc
jge
cld
jge
cwtl
pushl
mov
cmp
into
daa
mov
push
lea
mov
or
mov
xor
dec
xor
inc
clc
je
mov
ljmp
adc
orb
in
and
jp
mov
jo
cmpl
inc
jb
jb
inc
fsubr
rorl
cli
inc
fildll
jmp
or
fdivr
push
push
hlt
xchg
add
cmpl
sub
jne
stos
fiadds
xorb
orb
lock
cld
lods
call
loope
mov
lock
push
lock
je
call
sub
jg
pop
push
xor
mov
xor
call
xor
sar
mov
mov
icebp
add
clc
add
pop
jo
mov
js
inc
inc
mov
js
jmp
push
lods
sub
xchg
cmp
mov
cmp
jb
inc
mov
xor
mov
sbb
and
or
sbb
push
jbe
pop
add
je
call
or
mov
jmp
and
mov
clc
mov
add
pop
es
subl
shlb
jl
les
cmp
mov
dec
xor
outsb
and
xor
and
add
fs
insb
mov
fsubp
mov
pop
adc
out
pop
je
mov
lock
ret
mov
sub
or
jo
inc
ror
mov
cmp
call
or
and
mov
js
icebp
loop
je
jne
mov
incl
sbb
jns
push
loopne
or
hlt
xchg
lock
gs
aam
push
sbb
adc
xor
jl
rol
cmp
inc
push
jae
push
adc
jno
mov
add
test
cmp
mov
push
mov
push
stos
std
icebp
add
xor
mov
mov
mov
dec
add
mov
mov
xchg
cmpb
ljmp
add
out
jo
test
in
hlt
adcb
add
sub
sub
setg
mov
jne
adc
je
cmp
cmpsl
mov
mov
pusha
lock
call
lock
jnp
sbb
test
mov
call
jb
mov
push
push
mov
call
dec
test
push
jo
xor
or
and
push
pop
pusha
add
andb
push
push
fcoml
lock
mov
pop
push
jl
lock
xorb
je
or
xor
repnz
pushl
or
adc
andl
adcl
or
lock
jbe
and
sbb
adc
negb
push
add
sbb
sub
mov
mov
mov
js
je
inc
out
mov
push
xor
lcall
ljmp
js
js
xor
call
lock
aas
xchg
call
jbe
movsl
sbb
jg
add
pop
repz
test
sbb
incb
sti
jp
sbbb
adc
mov
jl
adc
or
jge
xchg
and
cmp
in
mov
xor
clc
sbb
jl
jmp
dec
pop
subb
add
and
pop
jae
mov
out
leave
mov
jmp
loope
cld
jl
xor
hlt
sbb
std
call
movsb
pushl
push
stos
push
pop
pop
nop
cli
test
fwait
sub
xor
cli
mov
mov
inc
pop
mov
jl
mov
pop
mov
mov
insb
inc
repnz
in
mov
or
std
sbb
and
push
push
lods
mov
out
adc
outsb
xchg
mov
push
push
sbb
jp
xor
mov
psllw
mov
addb
pop
xchg
jle
subl
clc
in
and
dec
loopne
mov
mov
push
call
adc
enter
fsubl
inc
fsubl
aad
adcb
or
xchg
xor
lcall
enter
cmp
andl
and
or
add
cmp
lock
sahf
jp
adc
adc
xchg
push
call
addl
add
repz
aad
mov
mov
dec
mulb
mov
test
or
cmp
test
dec
lahf
cmp
bound
rcll
test
mov
jle
ds
add
dec
sahf
dec
add
scas
mov
andl
mov
pop
or
subl
inc
or
test
xor
adc
cs
in
adc
push
into
fmulp
mov
mov
fucom
sub
push
cs
fimuls
adc
cmp
adc
or
push
add
les
pop
je
inc
mov
mov
mov
jl
fiaddl
or
pop
cli
cmp
mov
inc
or
int3
call
clc
mov
testl
mov
sub
cld
lock
inc
mov
xchg
scas
pop
or
jne
and
das
xor
rclb
or
mov
shl
aaa
add
int
jmp
jg
mov
xchg
xor
pop
cmp
dec
cld
stos
fiadds
out
and
call
xorb
cmpsb
mov
testl
int3
dec
pop
sbb
push
mov
sub
xchg
and
lock
loopne
mov
jo
xchg
std
mov
xor
mov
in
mov
xchg
xchg
pop
or
outsb
cltd
in
shrl
test
sbb
in
pop
push
out
flds
testb
outsb
add
or
enter
data16
popa
add
mov
add
mov
pop
scas
mov
mov
jl
sar
fstl
jge
add
addl
mov
clc
fdivrs
js
daa
dec
add
xlat
mov
scas
sahf
mov
test
test
adc
jb
out
div
dec
out
add
out
aaa
je
cmp
stc
pop
push
filds
or
in
aas
jge
jne
lea
aaa
jmp
ret
jbe
jb
jl
pop
call
lea
out
cmpsl
paddd
jbe
adc
or
sbb
jge
sbb
and
aad
or
jb
inc
xor
mov
jecxz
push
in
adcb
call
jb
orl
fbstp
lods
add
pop
mov
lea
scas
jmp
mov
jl
mov
mov
jge
mov
push
lea
push
xchg
jo
mov
test
orb
push
mov
mov
ljmp
sbb
mov
jl
pop
out
aaa
or
icebp
test
cld
dec
sarb
aaa
sahf
jmp
cmp
sub
and
jbe
daa
push
hlt
sahf
jle
fwait
scas
subl
mov
ljmp
mov
mov
mov
loopne
leave
sahf
dec
out
fadds
call
mov
adc
shll
testb
jne
sub
scas
xor
push
jae
adc
lea
inc
jb
cli
ss
dec
pop
or
idiv
punpckhdq
mov
jmp
push
cmp
push
inc
push
in
xor
sub
scas
aas
inc
shll
enter
jne
cmp
jmp
inc
ret
jne
jb
mov
loopne
lret
or
mov
and
lea
call
gs
mov
imul
add
mov
ss
jb
lods
dec
pop
xchg
out
add
dec
aam
sub
pop
add
jl
clc
add
push
push
mov
add
mov
mov
pop
imul
xor
cmp
add
fmull
ja
mov
mov
push
decl
add
jo
cmpsb
or
out
int3
call
fstpt
cs
mull
pop
clc
cmp
push
adc
fbstp
sbb
sbb
testb
sub
fidivrs
cs
push
inc
push
sub
test
gs
mov
daa
fmul
cmp
add
int3
mov
loopne
mov
jle
xor
mov
sbb
out
mov
add
pop
mov
mov
and
xorl
inc
scas
das
push
or
xor
push
fucomp
daa
jle
in
push
lods
or
rol
repz
sbb
cmp
call
adc
or
pop
div
inc
mov
das
push
es
add
push
outsb
fcomi
sub
jecxz
add
loopne
mov
pusha
cld
mov
cmp
and
mulb
or
call
jl
adc
xlat
xor
cmp
mov
push
cmpsb
mov
or
fs
int3
pop
mov
outsb
adc
cmp
inc
add
and
push
loopne
cld
inc
mov
xchg
push
or
cmp
add
mov
pop
pop
add
push
ss
cmp
shr
push
je
inc
or
mov
push
cmp
and
mov
daa
lea
jl
sbb
cmp
push
add
je
scas
test
jecxz
push
es
lods
jg
xor
push
push
mov
pop
mov
cmpb
inc
cmp
fiaddl
ljmp
ds
neg
mov
push
cli
loopne
cwtl
ret
cmp
es
push
fmuls
push
cwtl
add
or
push
pop
adc
push
and
mov
clc
adc
mov
cmp
xlat
mov
push
call
test
xchg
lock
hlt
jmp
xchg
fsubl
pop
hlt
pop
or
pop
lcall
xor
push
imul
or
clc
scas
inc
lock
or
sbb
mov
push
sbbb
adc
rcr
das
lea
je
xchg
add
gs
add
mov
xor
mov
cmp
pop
mov
xchg
adc
sbb
sbb
xchg
cmp
aaa
dec
emms
xor
mov
adc
or
jae
push
clc
add
pushl
outsb
push
pop
ss
add
jns
aad
negb
add
or
in
jae
push
jecxz
push
rclb
mov
shrl
jne
test
pop
in
lea
pop
xchg
movsl
into
push
in
cmpsb
mov
lods
mov
mov
mov
call
jnp
test
jmp
push
cwtl
or
decb
and
clc
dec
pop
dec
ljmp
jmp
push
fcom
sub
inc
lea
into
testb
pop
sub
shr
pop
lods
data16
call
push
jbe
push
loop
push
jo
mov
or
mov
mov
push
mov
dec
clc
cmp
push
cmp
ljmp
je
cmp
je
xor
jmp
mov
jmp
mov
jmp
mov
jmp
mov
inc
je
outsb
push
jbe
push
mov
jnp
into
mov
call
movsbl
call
sub
dec
fimuls
add
mov
dec
test
add
add
into
pop
popl
into
pop
test
jno
pushf
and
call
notb
push
les
je
or
jae
call
jmp
and
add
shrl
lea
stos
pop
pop
in
es
push
mov
mov
call
xchg
fmuls
cmp
jle
ljmp
inc
in
clc
out
mov
int3
leave
mov
cmp
pop
imul
cmp
mov
inc
iret
daa
adc
sbb
mov
clc
xor
sbb
cmp
mov
ljmp
out
adc
dec
cmp
mov
push
ret
or
or
mov
lcall
push
sahf
jbe
xchg
insl
inc
xor
push
int3
test
dec
cmp
nop
loop
adc
idiv
pop
test
vmwrite
pop
outsl
push
push
stos
adc
shlb
fdiv
dec
shll
mov
add
or
fcomps
mov
ror
pop
pop
cmp
cmp
add
or
call
les
cmpsb
or
add
mov
pop
inc
out
dec
pop
mov
jl
rcrl
sub
cmpsl
div
pusha
xchg
loope
mov
jnp,pn
pusha
pop
popa
pop
lret
mov
imulb
dec
icebp
inc
dec
jg
sbb
xchg
int3
daa
adc
or
fisubrs
ss
out
push
test
adc
xchg
mov
adc
mov
jmp
or
cmp
fldt
loopne
pop
add
addb
bound
std
scas
cli
pop
jl
or
es
movb
xchg
cmp
jne
std
and
shrl
mov
and
fisttps
mov
mov
shlb
xchg
adc
testl
adc
push
popf
rorb
idivb
mov
add
pop
adc
mov
mov
hlt
inc
mov
mov
push
xchg
sub
adc
jno
push
inc
test
je
cmpw
jae
pushl
pop
push
adc
dec
adc
cmp
jmp
jg
inc
or
mov
xchg
call
lods
hlt
shlb
push
ds
std
jne
add
push
push
vphaddwq
vmovhps
jne
push
lea
cmpsb
mov
xchg
lea
lea
mov
idivb
sub
inc
inc
cmove
jmp
add
jne
xchg
xchg
xchg
push
push
push
push
clc
mov
leave
mov
push
testb
adc
or
jg
mov
push
pop
sub
cld
sub
lock
sbb
or
aaa
sub
call
dec
scas
pop
fmulp
into
push
call
and
add
adc
into
jne
aad
add
out
cmpl
lods
call
outsb
loopne
add
add
xor
mov
lods
cmp
movsb
mov
and
nop
outsb
mov
sbb
add
push
lock
mov
outsb
mov
orb
cmpsl
pop
add
xchg
sbb
mov
cli
jmp
jg
and
aaa
jbe
testb
sub
push
fsubrp
fisubrl
ja
cld
mov
mov
clc
dec
jae
js
adc
xorl
aad
fisttps
add
je
pop
sti
sub
add
sub
pop
sub
fldt
mov
int
mov
test
or
mov
push
pop
jb
inc
sahf
fbld
and
cmpsb
enter
add
lock
hlt
mov
mov
jb
add
lahf
jecxz
insb
or
imul
add
sub
nop
jne
outsb
add
ds
cltd
loopne
sbb
ds
jbe
sahf
daa
jmp
call
fidivrl
pop
xlat
cmp
outsl
in
xchg
sub
cmp
out
lea
mov
enter
pop
rorl
xor
or
mov
repnz
push
ds
jg
push
je
pop
mov
bnd
je
cmp
lea
cmp
ja
data16
adc
add
pop
lock
sub
inc
cmp
aas
push
jmp
jae
dec
push
mov
sub
jl
fnsave
hlt
test
push
add
insb
jae
dec
mov
push
sub
sahf
add
enter
mov
add
add
divl
test
push
mov
test
hlt
popa
or
fwait
outsb
lock
mov
fiadds
clc
xchg
push
cmp
cltd
insl
mov
xchg
movsb
add
pop
sub
jne
imul
testb
add
cmp
test
js
fdiv
mov
ja
add
add
adc
dec
mov
enter
add
cltd
sbb
jbe
cld
enter
push
mov
shlb
pop
add
mov
add
add
je
test
push
pop
push
out
add
push
cld
rorl
div
push
jae
mov
mov
and
jbe
adc
jmp
add
mov
mov
jg
jo
jle
mov
xor
loopnew
insb
cmp
mov
dec
fcompl
mov
mov
call
ret
sbb
cld
add
fcmovnu
pusha
jl
add
loop
cmp
cmpb
pop
or
call
mov
mov
cwtl
andb
xor
orb
jg
mov
inc
sbb
xchg
subb
cld
jge
xor
lock
fdivp
ja
je
inc
push
push
mov
inc
iret
out
xorl
push
roll
pushl
fcoml
push
sub
xorl
add
mov
das
mov
pop
cld
addl
cmp
or
idiv
or
mov
dec
andb
dec
add
rcll
jnp
in
add
mov
mull
sbb
addl
call
leave
fimuls
orb
jns
mov
cli
cmp
sbb
mov
jb
push
adc
aam
add
in
jne
add
mov
popa
movsb
das
decb
lahf
test
incl
inc
in
pop
call
push
test
cmpl
sub
mov
add
adc
pop
imul
push
pushl
push
mov
scas
call
loope
push
jge
jmp
call
repnz
sub
mov
fsubs
cld
push
cmpb
js
adc
mov
jbe
orb
add
add
xchg
or
add
out
inc
in
add
push
push
mov
icebp
or
dec
ret
call
pop
adc
and
sub
mov
call
adc
jmp
fisttps
pop
cmp
mov
mov
test
xlat
jmp
je
mov
test
add
mov
mov
aaa
rcrl
mov
mov
ffreep
cmp
cmp
mov
add
or
scas
call
adc
mov
mov
shlb
add
mov
add
daa
add
mov
xchg
jo
or
cld
mov
inc
call
orb
push
hlt
sbb
in
pop
mull
mov
add
das
mov
movsl
jbe
sbb
sahf
and
add
mov
adc
xor
lods
push
fimuls
xor
add
jbe
and
or
movb
pop
ret
fiaddl
outsb
or
add
push
xor
push
ret
test
pop
sbbb
fidivl
xor
lock
add
sbb
into
mov
rcrb
cwtl
mov
pop
std
in
or
cmp
mov
test
jo
jb
and
addb
pop
add
add
add
test
pop
fnclex
outsb
mov
movsbl
or
push
push
xchg
add
mov
and
cli
and
hlt
int
faddp
pop
and
sbb
sub
fistl
addb
cmp
pusha
xchg
dec
pusha
mov
addr16
push
inc
pusha
add
inc
nop
sbb
or
sub
xchg
mov
add
fwait
je
cmpb
push
loopne
add
out
ret
leave
cmp
test
add
aam
test
sahf
mov
test
inc
mov
repnz
mov
inc
adc
ret
sub
pusha
jg
lock
pop
call
xchg
xor
pusha
ds
mov
or
adc
fwait
mov
xchg
dec
cmpsl
call
popf
rorb
add
jo
add
dec
insb
xor
bound
out
mov
push
cs
pop
movb
in
loopne
mov
sub
mov
or
and
lds
rorl
loope
loop
jo
ret
xor
inc
jl
cmovp
outsl
je
mov
mov
nop
std
call
or
cmpsb
lock
out
push
mov
cmp
outsb
ret
scas
push
popa
or
push
jp
jle
popl
sub
hlt
jo
xor
loopne
dec
pusha
pop
pusha
addr16
or
or
pusha
or
push
push
push
pusha
xor
jge
jbe
pop
adc
pop
lock
or
jg
mov
loopne
loopne
sbb
xor
loopne
pusha
push
sbb
push
add
mov
std
and
subb
gs
sbb
pop
fsubl
popa
aas
out
movsl
incl
dec
fdivrl
or
cli
sub
or
add
sub
mov
jbe
lea
pop
divb
adc
outsl
push
sbb
pop
push
push
filds
mov
test
and
sarl
loopne
and
push
pop
loopne
jp
adc
add
xor
cmp
sub
mov
sbb
xchg
loopne
add
dec
mov
add
jmp
and
inc
clc
jb
jl
jbe
pusha
xchg
push
fisttps
popa
sub
inc
or
push
test
pop
loopne
clc
sti
jne
add
movsb
push
push
mov
int3
adc
idiv
xchg
xorb
adc
mov
inc
add
mov
test
push
cmpsb
mov
in
mov
or
test
sub
sbb
shlb
dec
add
outsl
jg
mov
mov
cmp
lea
add
inc
lock
inc
into
pop
jae
in
mov
inc
pusha
add
out
jne
dec
imul
or
mov
aam
dec
jg
les
lret
clc
addl
sub
in
les
cmp
mov
dec
push
or
sbb
je
sub
push
xchg
rolb
std
push
add
ret
je
gs
and
outsb
mov
popa
enter
adc
or
lods
fldt
pop
push
frstor
cs
pop
cld
test
push
push
test
filds
push
or
push
popa
jno
mov
insl
fldt
cli
sub
jno
add
lods
pusha
dec
ljmp
mov
cli
xor
or
icebp
jns
rcl
repnz
adc
cmp
push
inc
fsubrl
lods
bound
loope
cmpsb
inc
xor
fdivr
add
pop
xor
mov
jo
notb
or
add
push
je
movsb
mov
fdiv
or
xor
jge
test
jbe
fbstp
add
jo
mov
mov
aaa
jb
mov
mov
movl
jg
add
aam
add
out
sbb
and
or
mov
jns
cmp
or
mov
mov
das
fcmovb
cmp
push
xor
repz
pusha
lds
pop
clc
out
push
cld
mov
jb
cmp
sub
fs
add
add
adc
xor
push
mov
aam
xor
test
mov
pop
jecxz
push
xchg
nop
sub
roll
xor
int3
lods
pushl
adc
incl
aaa
mov
sbb
in
push
add
shlb
push
add
inc
cmp
rcrl
inc
ficoml
xor
xor
dec
xor
lea
jnp
mov
fnstenv
push
pop
mov
je
outsb
mov
xor
outsb
mov
jg
in
mov
xchg
incl
xor
pop
dec
jb
sti
add
push
call
add
adc
stos
nop
decb
jecxz
xchg
ss
adc
mov
push
mov
cmp
sub
test
xchg
stos
hlt
call
jecxz
push
lcall
or
xchg
stos
push
add
mov
fstl
ja
test
xchg
xor
or
inc
add
cmc
pop
orb
lea
clc
mov
inc
xor
and
pop
dec
dec
clc
mov
inc
das
and
pop
leave
cmp
xchg
push
fbld
dec
add
add
leave
mov
test
adc
push
mov
lcall
outsb
or
push
call
divb
jg
sub
cmpb
mov
jo
mov
jmp
lea
cmpsb
mov
jnp
cmp
cli
testl
je
cmp
mov
xor
mov
shrb
fdivrl
jp
clc
xor
jmp
int3
leave
or
icebp
testb
cmpb
cmc
cmpb
incl
lds
jl
push
push
lret
add
jb
mov
adc
adcl
mov
testl
into
mov
sbb
test
or
out
data16
decl
mov
aas
xchg
add
pop
data16
mov
mov
dec
add
sarl
sub
cltd
or
mov
sbb
sbb
push
mov
pop
add
cmp
loopne
mov
rolb
mov
mov
cld
mov
icebp
mov
scas
call
imul
outsl
clc
test
subb
pop
aas
mov
jo
or
incl
je
jl
add
add
jno
add
dec
add
mov
pop
push
cs
cld
mov
add
mov
add
mov
aaa
cld
aaa
sbb
fistl
call
xor
or
and
dec
add
pop
pop
scas
mov
or
out
or
or
and
add
push
sahf
mov
sub
add
ljmp
jmp
or
mov
pop
or
lock
lods
test
jo
loopne
jg
push
xchg
pop
dec
aaa
call
or
add
sub
jb
adc
xor
clc
pop
jmp
and
cmp
add
mov
rdpmc
fcmovnb
pop
lock
fldt
and
mov
call
mov
mov
push
lods
js
ljmp
xor
add
lea
mov
icebp
adc
ds
lock
mov
je
push
pop
test
dec
push
mov
jg
push
mov
es
mov
ss
mov
dec
push
push
test
ret
push
jbe
and
sbb
mov
push
pushl
mov
outsb
mov
sbb
dec
and
sbb
xor
subb
mov
add
add
cmpsl
adc
incl
pushl
lea
cld
xor
sub
ljmp
and
dec
xchg
inc
pop
int
inc
sbb
inc
and
or
cwtl
jb
dec
stos
sub
hlt
push
push
das
clc
push
add
pop
sub
paddb
adc
xchg
adc
stos
mov
jnp
or
call
test
incl
pop
test
repz
jl
sub
mov
push
outsl
or
rclb
jecxz
fisttps
mov
adc
sbb
jo
sub
mov
sbb
pop
mov
and
aaa
cmc
push
add
add
rolb
push
push
mov
add
push
cmpsb
dec
adc
xor
add
xchg
adc
loopne
clc
inc
cmp
popf
sbbb
push
lods
shll
fdivrs
call
jo
je,pn
push
sub
adc
push
les
sbb
lock
fs
sub
jle
adc
pop
lock
cli
jg
and
cmp
mov
add
add
sub
pop
int
adc
test
icebp
add
add
adc
or
lock
mov
xchg
jne
mov
lock
call
subb
add
les
mov
sbb
adc
mov
movb
xchg
lock
xor
add
mov
xchg
inc
xchg
fs
lcall
scas
shlb
adc
cltd
addl
mov
stos
cltd
jp
sbb
pushl
int3
adc
pusha
xchg
cmpb
push
jbe
push
mov
mov
and
mov
sti
call
shlb
not
pusha
xor
inc
xchg
mov
pusha
or
add
nop
je
aas
lods
mov
xor
jne
or
cmp
push
add
cmp
loopne
pushl
jg
add
ds
call
testl
jmp
mov
xor
in
add
hlt
lea
cmpsl
pop
aaa
cld
dec
mov
gs
aam
push
add
inc
out
add
push
jp
mov
push
cld
jo
mov
dec
xor
cs
xor
stos
mov
inc
cmp
dec
sbb
sbb
mov
fdivrl
test
std
push
incl
orb
movsb
call
decl
pop
test
add
push
shrb
addr16
adc
fwait
jecxz,pt
xchg
mov
dec
cmp
or
loope
xchg
jb
dec
dec
test
cmp
add
mov
nop
jmp
add
pop
mov
add
push
arpl
mov
inc
add
push
mov
pop
ret
mov
lea
push
add
push
inc
or
data16
jg
add
push
je
adc
cmpb
pop
or
xor
xchg
dec
hlt
call
add
mov
adc
rolb
sub
movsl
fwait
loop
ret
cmp
push
xchg
jno
add
jp
std
ja
insb
push
push
sub
push
pop
xor
lock
mov
cmpsb
stc
inc
jmp
and
pushf
push
mov
rcrb
aas
ficomps
pop
loopne
out
add
fsubrs
add
in
fcoml
push
adc
in
xchg
mov
mov
lret
push
pop
int
sbb
mov
decb
lock
sub
or
jne
dec
dec
cwtl
orl
jg
andb
jne
push
das
subb
sar
or
cmpsb
ret
sbb
cli
add
sbb
adc
or
mov
outsl
incl
add
xchg
jmp
rcrb
mov
and
ds
adc
inc
xchg
fisubs
mov
lock
mov
ja
jle
pop
fucomi
fiadds
push
xchg
nop
sbb
jp
leave
in
xchg
push
xchg
mov
roll
popa
adc
mov
test
es
sbb
push
dec
mov
lock
push
ljmp
cmp
mov
lock
test
mov
or
bound
subb
mov
into
nop
cmp
add
sbb
iret
push
andl
jb
add
mov
mov
mov
sbb
pop
lock
int3
shll
adcb
paddsb
jge
fidivrl
lea
dec
dec
or
call
je
hlt
outsl
sbb
adc
rclb
mov
mov
mov
lcall
jae
pusha
cld
int
mov
pop
add
aam
cmpsl
out
imul
jl
sbb
lods
pop
sbb
je
xor
ss
rclb
sub
cmpsb
adc
jb
les
jne
or
inc
std
cmp
je
scas
add
sbb
mov
cmp
shrl
inc
push
mov
cld
adcb
adc
dec
xor
dec
sbb
enter
adc
xor
testl
fcoms
jae
mov
xadd
mov
jmp
call
fcoms
arpl
mov
jp
fcoms
or
jne
jbe
dec
push
xor
stos
sbb
jne
call
js
add
xor
arpl
mov
cmpsb
pop
push
push
lea
add
or
cld
mov
inc
rolb
shl
add
test
lcall
xor
xchg
sti
add
mov
roll
and
leave
inc
adc
mov
test
shl
lcall
ret
xor
xchg
or
add
add
ret
pop
decl
push
jne
test
leave
mov
jg
sub
push
cli
ljmp
jno
inc
test
stc
cmp
push
jbe
out
mov
call
push
mov
ss
jge
test
rclb
or
rolb
nop
aaa
mov
divps
int3
rclb
aam
cmp
je
mov
or
pusha
loopne
add
pop
mov
loop
ret
sub
aas
or
mov
inc
add
out
pusha
or
jb
cltd
aam
sar
imul
es
add
pop
cwtl
xlat
jae
add
cli
loopne
mov
into
sbb
mov
xchg
dec
inc
insl
mov
lods
add
out
cmp
icebp
incl
and
xchg
shlb
cmp
mov
sbb
xor
aas
cmp
popf
xchg
call
lretw
mov
mov
jb
mov
into
call
sti
out
das
ljmp
inc
loopne
je
and
sbb
or
add
inc
mov
testb
jne
adc
xchg
loope
nop
mov
jo
or
dec
adc
loopne
jo
pop
loope,pt
data16
enter
mov
fs
push
clc
xchg
ds
aad
fwait
push
xor
pusha
jb
or
xchg
or
adc
movsb
aaa
enter
push
adc
adc
or
or
or
xor
mov
sub
ss
outsl
mov
inc
jbe
dec
shlb
mov
pop
scas
nop
xor
inc
in
andb
jle
cld
loopne
call
cld
or
std
loope
sarl
movsl
mov
testl
or
cld
push
icebp
pusha
push
add
pusha
add
xorb
mov
jg
mov
icebp
xorl
ret
mov
mov
add
xor
push
mov
ret
ljmp
aam
mov
rolb
loopne
mov
add
or
mov
hlt
mov
pop
std
jmp
mov
lock
mov
xchg
leave
sbb
add
ret
add
cld
shl
mov
inc
int3
dec
ret
cs
sbb
popa
pcmpeqd
sar
sbb
sub
xor
es
call
cmpsb
inc
sbb
push
ljmp
out
jle
mov
xchg
lret
call
and
mov
inc
pop
pusha
jle
mov
adc
or
sub
outsl
andb
repz
xchg
shlb
cmp
jne
inc
pop
leave
iret
lea
aaa
int3
outsl
xchg
out
lods
add
mov
clc
imul
std
pop
pop
fadds
ds
mov
stos
mov
scas
fisubl
cld
sub
pop
cmp
and
jb
or
rclb
sbb
add
mov
mov
movb
fcoms
add
or
out
mov
shrb
xor
and
mov
push
add
mov
je
mov
sub
sub
jl
out
call
xchg
jbe
call
mov
js
test
call
call
call
fs
push
std
ret
dec
cli
test
call
add
pushl
mov
das
call
ja
call
inc
lret
and
call
inc
lds
call
ja
or
fcomps
shrb
mov
adc
jb
outsb
add
add
lock
hlt
mov
hlt
mov
je
loope
mov
jecxz
adc
imul
js
mov
loope
mov
bnd
je
test
outsl
or
pop
and
cmp
in
push
mov
imul
fidivrl
inc
jmp
inc
sub
push
fadds
in
lods
push
xchg
xor
add
xor
add
jg
loopne
fwait
sti
xorb
push
loopne
mov
ss
pushl
adc
dec
pusha
pop
add
jp
sub
mov
jb
jg
popf
fs
call
jb
mov
enter
nop
xor
xor
ja
call
cmpb
mov
out
lock
leave
fs
test
ljmp
xorl
push
jb
enter
mov
sbbl
mov
call
movsl
and
unpcklps
add
stos
enter
das
sbb
add
fsubr
jle
cli
sbbb
lock
inc
mov
jo
into
add
jle
mov
push
sub
xchg
addl
std
incl
mov
push
insb
std
jo
xor
push
xchg
sbb
dec
inc
iret
xor
push
pop
loopne
incl
or
dec
insb
jo
je
data16
cmp
mov
pop
pop
aaa
icebp
lea
rorb
aas
add
iret
mov
addl
jne
dec
push
adc
stos
shlb
mov
cmpsb
insl
mov
je
sbb
sub
ljmp
into
push
cmp
jo
test
rcr
xor
jb
outsl
add
pop
movsb
and
add
incl
fiadds
in
mov
add
and
fdivrp
data16
cwtl
xchg
jae
mov
inc
xorb
push
push
push
mov
add
pop
xor
xor
push
push
decl
mov
pop
int
call
push
je
les
cmp
jmp
inc
pop
push
mov
jb
test
lock
aaa
fst
xor
jge
rolb
mov
je
add
jo
xchg
adcb
jl
add
push
test
sub
lock
sub
fwait
dec
stos
mov
dec
xor
mov
pop
shr
push
and
and
ljmp
lock
mov
xor
call
cld
mov
dec
add
xor
add
or
lds
inc
cltd
mov
jmp
and
ljmp
aas
mov
xor
inc
jg
mov
xor
cmp
jle
cmpl
js
inc
in
mov
lea
std
shll
call
mov
xchg
or
xlat
ret
mov
ja
mov
jle
add
mov
mov
pop
ja
mov
cmp
andb
inc
xlat
int3
addb
lock
das
jo
push
hlt
add
and
data16
daa
adc
lock
add
mov
sbb
or
adc
call
pop
cli
pop
les
or
add
incl
or
mov
dec
push
xor
addb
and
int3
test
lock
mov
test
jmp
inc
lock
mov
mov
pop
jbe
cmp
xor
call
or
push
mov
push
pushf
lods
lea
das
jno
aam
lods
stos
nop
push
lret
xor
push
sub
push
xor
dec
push
addl
std
ljmp
mov
inc
cmp
loopne
push
add
add
sbbb
sbb
sub
in
mov
pop
cmp
add
inc
sub
incl
jg
ja
adc
mov
add
xchg
and
fwait
xchg
inc
mov
lret
sub
aad
outsb
push
mov
incb
mov
adcb
mov
xor
mov
pop
xor
mov
roll
ret
jne
add
cs
pushf
xchg
jo
mov
enter
roll
mov
add
das
add
push
call
xchg
xchg
inc
int3
stos
bound
hlt
lock
lods
std
mov
stos
xor
add
ret
fistps
jo
icebp
lcall
data16
loop
test
xchg
es
lods
push
mov
add
out
stos
call
or
fwait
sbbl
mov
sbb
ret
scas
mov
daa
push
scas
lea
in
xor
inc
add
rcr
fsubl
ljmp
scas
stos
test
test
in
add
mov
ret
popf
push
adc
sbbl
jle
aad
mov
adc
cld
add
inc
adcb
mov
mov
dec
mov
sbb
pop
insb
mov
fisubrl
mov
adc
jg
mov
fsubrl
jb
jbe
call
jne
xchg
or
int3
jnp
cltd
outsl
sub
lea
and
cli
call
inc
testl
fs
or
pusha
movsl
icebp
xor
mov
je
outsl
loope
add
push
jbe
lret
lds
incb
add
aam
cmp
mov
lock
add
fwait
push
mov
or
dec
or
pop
pop
mov
pop
push
and
push
jl
enter
cmp
xor
pop
fbld
and
and
xchg
and
mov
and
adc
cld
mov
xor
pop
loopne
xor
jae
sbb
lock
int3
mov
cmp
repz
mov
sbb
jmp
icebp
imul
setbe
jmp
push
xor
movsb
in
dec
dec
shlb
dec
mov
test
jno
lcall
mov
inc
ljmp
mov
fbstp
addl
ja
mov
loopne
push
mov
xchg
sub
pop
inc
push
outsl
mov
aaa
lock
push
inc
out
fdiv
das
clc
push
add
jno
lock
sub
jbe
int3
inc
xor
add
sub
push
out
lock
aas
inc
mov
push
call
adc
sub
call
mov
push
jmp
and
or
cmp
push
mov
lret
cmp
je
sbb
int3
icebp
stos
push
loopne
mov
fs
sarb
lods
repnz
flds
fadd
cmpsb
xor
outsb
movl
mov
lock
add
sbb
push
mov
jo
adc
adc
mov
push
pop
repnz
cwtl
add
fcoms
aam
or
lock
incl
cwtl
add
push
lea
adc
or
icebp
stos
dec
push
call
faddp
lods
leave
sub
sub
imulb
or
js
add
push
test
sub
fs
push
or
mov
dec
adc
jo
jno
or
pop
adc
int
sbb
sub
and
jno
and
pop
or
jo
adcl
andl
ja
pop
pushf
jnp
mov
std
sbb
cmpsb
xor
and
mov
mov
je
les
lock
inc
push
inc
fstpl
inc
nop
clc
pop
test
bound
ret
inc
pop
or
insb
push
mov
push
ret
mov
mov
pop
je
mov
sahf
lods
push
mov
or
movsb
add
pop
jp
or
jp
xorb
xor
popf
clc
shr
mov
movsb
mov
push
add
dec
ret
push
lock
push
add
jae
rcrb
ret
movsb
ret
sahf
xchg
icebp
in
je
js
cmp
add
cmovge
add
mov
les
fwait
ret
js
dec
js
mov
pop
movsb
ja
push
cmpb
or
push
add
sub
xchg
hlt
push
mov
mov
mov
mov
jmp
lea
sub
ljmp
out
sub
or
dec
mov
or
pop
dec
movsl
or
lret
mov
mov
cmp
or
jne
ljmp
out
cmp
mov
adcl
push
call
mov
dec
pop
loope
out
cwtl
cmpb
sub
add
push
fwait
jbe
inc
and
addb
lea
sub
push
and
test
push
or
jl
push
leave
fimuls
test
call
loopne
ret
jl
sub
mov
dec
repz
and
and
add
aam
push
testb
or
test
push
lcall
movsb
outsb
cmp
scas
add
lret
add
mov
call
test
jbe
call
fwait
push
xor
or
inc
and
add
flds
je
cmp
and
push
call
insl
push
add
je
jb
pusha
pusha
scas
mov
mov
add
call
xor
ret
int
jg
pushf
ss
adc
pop
mov
add
jp
push
mov
jp
sub
sub
sarb
pop
push
and
mov
add
or
mov
dec
gs
xrelease
fists
mov
mov
add
push
sbb
mov
jo
push
and
mov
and
lea
mov
add
loopne
add
pushf
mov
cmp
add
scas
push
addl
push
insb
ds
jno
mov
cmpl
les
sub
mov
sarb
pop
mov
mov
pop
push
jmp
adc
sbb
sub
aas
shlb
pop
out
mov
add
addl
shlb
pop
test
push
jne
jbe
lcall
sub
je
iret
add
xor
mov
push
fistpll
inc
dec
mov
rcll
enter
mov
out
call
adc
push
jb
aam
ret
adc
ret
mov
add
push
stos
add
ret
rorb
aam
cld
push
add
push
lret
push
or
iret
scas
sbb
push
xchg
sbb
xor
outsb
mov
push
or
insb
pop
mov
pop
and
test
adc
rol
in
icebp
outsl
mov
and
jne
call
jo
dec
xchg
incl
mov
insl
clc
call
dec
cmp
or
aas
inc
fs
roll
add
add
pop
orb
je
cld
mov
in
outsl
mov
add
or
addl
add
ret
clc
jmp
call
or
mov
test
test
pusha
jp
or
push
xor
inc
dec
fdivl
ret
pop
in
into
or
out
popf
js
repz
pop
xchg
add
cld
inc
ljmp
xchg
stos
negb
call
ud0
jmp
or
clc
repz
lods
loopne
or
pop
sarl
pop
and
jg
xor
inc
sbb
or
mov
xchg
dec
push
scas
lea
scas
pop
mov
inc
fsubrs
or
dec
inc
sub
mov
or
or
push
add
or
popa
add
jo
call
mov
das
rorb
andl
ss
add
add
loopne
push
js
cmpl
call
pavgw
mull
fisttps
or
mov
js
xor
fs
int3
adcl
test
push
xor
lret
cld
jp
push
loopne
jl
jbe,pn
or
xor
in
scas
rol
push
mov
mov
in
push
or
lcall
sbb
pop
punpcklbw
dec
push
fsubs
test
pop
xchg
pusha
xor
cmp
fs
loopne
mov
pop
sbb
sbb
push
sarb
imul
add
loopne
mov
mov
sbb
loopne
or
mov
loop
ror
mov
loopne
push
push
push
je
jno
mov
loopne
mov
jb
jg
sbb
jne
dec
pop
add
out
mov
xchg
inc
aaa
and
push
xor
inc
inc
aaa
cwtl
je
add
ss
dec
fimull
adc
idiv
subl
pop
pop
loopne
mov
inc
cmpl
fdiv
orb
and
push
push
and
push
daa
ret
cmp
call
pop
dec
xchg
mov
add
jg
adc
je
sbb
push
inc
enter
cmp
mov
lds
gs
incl
mov
andb
cmpsb
int
not
loop
mov
push
adc
ss
rolb
push
jmp
cmp
mov
pusha
push
bnd
adcb
imul
jge
mov
loopne
mov
dec
stc
popa
paddd
add
cmp
dec
push
lods
call
call
jle
pop
jbe
clc
loop
aad
xchg
sbb
mov
add
movsl
pop
push
sub
adc
loop
ljmp
push
ret
push
mov
in
loope
fsub
lahf
pop
in
call
clc
out
add
pop
lock
inc
or
rolb
lock
rclb
jno
std
cld
popa
adc
inc
add
test
mov
cwtl
test
hlt
fwait
movsl
loopne
fisttpl
xor
popf
ret
push
pushl
jecxz
es
call
insb
inc
sub
and
mov
bound
add
mov
cmp
mov
jmp
lcall
push
inc
pushf
push
scas
call
push
popa
sbb
adc
in
inc
mov
mov
sbb
xchg
add
ja
pusha
mov
outsl
mov
add
loopne
test
pop
ret
in
andb
jbe
push
push
or
xchg
pusha
mov
aaa
cld
call
popa
in
sbb
leave
xorb
cld
into
call
xchg
pusha
sbb
fldenv
mov
fs
jbe
push
loopne
lea
rolb
sahf
pop
cltd
and
jge
ss
hlt
mov
or
cwtl
sub
in
mov
cmp
je
sbb
add
je
mov
cld
ljmp
jno
lret
repnz
imul
sbb
or
clc
incl
iret
mov
icebp
adc
sbbb
je
call
mov
dec
add
add
mov
lock
mov
mov
in
test
fistpll
jno
mov
sub
sarb
adc
inc
sbb
xor
dec
sbb
cmc
ja
clc
jns
mov
nop
add
arpl
outsl
js
jo
hlt
jne
dec
add
clc
subl
roll
call
jo
mov
sub
hlt
jo
lret
and
mov
adc
icebp
bound
in
cmp
jge
jg
mov
mov
inc
hlt
add
xchg
hlt
je
xor
cmp
and
ljmp
mov
push
lock
call
lds
mov
pop
fs
jg
dec
call
out
add
cmp
sahf
gs
jmp
popa
push
xchg
xchg
adc
mov
adc
cmpsb
or
add
cmpsb
inc
dec
js
jbe
mov
mov
inc
sub
or
jo
jbe
js
xor
shl
mov
add
adc
packssdw
in
insb
inc
xorb
mov
adc
es
jmp
sub
fcoms
xchg
mov
adc
cmp
push
sub
push
mov
sbb
xor
or
mov
sahf
and
xor
cmp
push
ret
je
push
stos
push
shl
mov
js
mov
add
movsb
sub
xor
push
push
lock
jno
pop
sahf
push
mov
push
inc
pop
stos
mov
mov
icebp
add
loopne
jmp
clc
mov
mov
hlt
fdivr
adc
cmpsb
pop
jmp
stc
cmp
sbb
fs
loop
call
mov
pop
cwtl
mov
mov
decl
xor
inc
jecxz
add
in
dec
in
lahf
lock
shlb
jle
push
adc
scas
xchg
dec
and
push
ljmp
mov
adc
sub
fdivrs
add
adc
xchg
add
fwait
mov
cmp
add
ljmp
bsr
sbb
or
test
or
mov
stc
or
pop
push
pop
pop
je
pop
ret
xor
and
jle
mov
daa
aam
cmp
adc
sar
sub
mov
es
dec
add
icebp
inc
jge
mov
or
loop
sti
je
push
xor
scas
xor
outsl
cmp
repz
dec
push
jo
pop
loope
adc
inc
lock
adc
mov
add
xchg
divb
xor
ljmp
xor
inc
mov
sub
add
jmp
add
jno
iret
aam
popa
jo
dec
and
sub
add
mov
or
pop
clc
dec
add
mov
jle
xchg
add
sub
xlat
adcl
add
mov
jae
shrb
pop
lret
and
cmp
jnp
mov
inc
jo
cmpsb
xor
inc
fisubs
test
je
pushf
hlt
lods
and
mov
mov
or
sub
add
scas
mov
jmp
adc
push
call
fsubr
incb
decb
mov
jl
je
xchg
cmp
movsb
popl
jge
add
push
sub
jl
push
or
pop
cld
js
aas
add
loop
or
jl
in
repz
add
clc
jmp
pusha
adc
xor
pop
dec
mov
or
push
lret
mov
jg
jbe
test
dec
loope
push
mov
or
add
mov
push
push
sbb
inc
loopne
or
mulb
add
jbe
push
jmp
or
mov
out
push
lods
ja
in
xor
sub
js
jmp
addb
jo
dec
call
mov
jg
lret
mov
jo
rcrb
push
adc
lock
ds
loopne
mov
pop
dec
rorb
inc
incb
jo
mov
push
or
and
in
xor
call
pavgb
out
mov
fistpl
pop
call
movl
push
pop
inc
add
mov
and
pop
cmpsl
call
xor
sbb
push
jmp
call
lock
insb
lock
mov
sti
je
adc
stos
sbb
jl
mov
jmp
jo
int
mov
jl
sbb
adc
lock
mov
insb
add
push
mov
mov
dec
and
push
fcoml
sbb
repz
xor
push
inc
jl
pushf
out
dec
and
clc
adc
adc
or
pop
repz
sbb
out
sub
cmp
mov
call
cli
and
or
mov
mov
decl
adc
shrb
and
repnz
mov
and
cld
xbegin
xor
inc
std
xor
sahf
jo
add
jg
sbb
jl
mov
in
mov
push
outsl
movsb
les
jmp
mov
sub
jle
call
xor
out
je
test
cmp
or
inc
testb
lret
sti
ljmp
andl
jno
jg
enter
add
mov
lock
ss
scas
adc
pop
mov
out
xor
cli
notb
mov
inc
cmp
jg
incl
clc
inc
xor
cmp
push
pop
add
clc
adc
data16
sti
push
int3
aaa
cmc
mov
sub
leave
je
in
mov
sub
jmp
pop
pushl
inc
push
int3
imul
adc
test
in
imul
lock
inc
inc
push
rolb
add
add
jl
xorl
test
push
fidivs
pop
ret
xor
sub
push
pop
ret
idivb
stc
addr16
push
push
pop
imul
add
add
mov
loop
call
jp
shr
jmp
inc
fistpl
ljmp
push
pop
sbb
and
adc
fnsave
je
into
das
adc
sbb
aam
mov
aaa
andl
push
xchg
or
movsb
push
mov
pop
negb
pop
testb
rorl
ret
push
push
mov
mov
js
rol
add
or
add
insl
inc
jnp
sub
fdivl
pop
add
movb
test
or
and
or
add
push
outsb
popf
jb
pop
rcrl
sbb
mov
or
and
fdivrs
inc
out
xchg
ja
push
rolb
es
call
imul
pop
mov
data16
pop
mov
add
dec
add
stos
sahf
popf
mov
push
mov
je
and
jmp
clc
fistpll
call
out
push
pop
ja
or
fstpl
mov
lea
or
mov
or
adc
orb
inc
jmp
movb
push
andb
out
xchg
jle
mov
xchg
add
repz
push
dec
add
jbe
test
out
icebp
ljmp
fmuls
sar
jmp
inc
pop
sub
and
loope
pop
or
in
lgdtl
inc
pop
cwtl
lock
insb
scas
int3
leave
fdivp
xchg
inc
cmpsb
xor
cmpsb
cmp
movsb
lea
je
mov
call
add
fidivrl
pop
add
cmp
or
stos
loopne
dec
inc
cmp
scas
cld
xor
test
push
rol
mov
enter
jmp
ret
cld
dec
pushf
add
cmp
jne
sub
mov
incl
adc
mov
hlt
cmovs
mov
in
xor
roll
sbb
ljmp
or
ret
mov
rorl
ja
hlt
in
sbbb
sbb
dec
add
adc
mov
add
testb
inc
loop
mov
pop
movsb
mov
mov
sar
add
sub
rorb
dec
in
lret
das
clc
nop
cld
pop
adc
lods
adc
or
dec
sub
rcrb
jge
or
loop
rol
jge
aas
push
dec
sub
lock
mov
nop
inc
clc
sub
add
mov
rclb
pop
jg
push
cmpsb
cmpsb
repnz
jecxz
xchg
inc
adcb
or
add
fcompl
dec
or
and
cmp
loopne
push
pop
imulb
pop
jmp
call
push
loop
daa
testb
push
pusha
rolb
rcl
mov
jo
aaa
or
mov
adc
inc
mov
rclb
add
mov
jg
xor
dec
lea
je
mov
les
test
xchg
fdiv
add
cmp
add
fistps
mov
jno
mov
addr16
pop
addl
sbb
sub
shrl
push
pusha
testl
pop
loopne
or
call
jbe
sbb
iret
ret
xchg
dec
outsb
jns
inc
rol
add
jmp
aas
push
mov
adc
mov
stos
rol
mov
push
mov
lahf
scas
sbb
push
mov
mov
sbbl
out
fdivrs
call
je
inc
dec
push
jl
push
popa
mov
leave
dec
shlb
sar
daa
jb
std
rorb
push
mov
sub
and
pusha
or
pusha
add
jg
push
jbe
mov
repnz
adc
cs
pop
pop
loopne
and
daa
pusha
pop
pop
and
add
adc
add
or
inc
sub
pusha
cmp
int3
jp
loopne
pushl
bound
popf
xor
jae
dec
popa
add
jp
add
pusha
add
popf
dec
push
push
lock
addb
popa
inc
add
add
mov
lock
xor
repnz
loopne
xchg
mov
aam
or
cmp
push
das
aad
cmp
push
mov
in
and
jl
and
loopne
xor
jecxz
jo
js
add
cmp
loopne
loope
mov
in
sub
test
jmp
jl
or
inc
pusha
add
flds
popa
push
cmp
ljmp
out
push
js
ret
cld
bound
push
or
pusha
sbb
ljmp
andb
popa
xchg
call
dec
mov
in
pop
pusha
gs
pop
adc
push
fsub
pop
mov
cmp
lock
stc
jb
or
add
mov
adc
insl
push
pop
popa
add
and
cmpb
pusha
jl
jp
xor
and
sbb
pop
adc
in
fs
fsubs
jle
jl
lret
popa
das
fsubrs
subl
jno
add
stos
insl
cld
pop
mov
jp
in
xor
jmp
lret
ss
loope
loopne
imul
pop
jbe
lods
cmpb
sbb
xchg
jo
lods
shll
ret
xchg
adc
ss
push
push
inc
mov
pusha
mov
cld
or
hlt
jg
mov
je
enter
inc
cmp
jle
push
pop
pop
add
adc
adc
dec
sub
adc
clc
mov
sbb
sub
add
pusha
push
push
in
sub
mov
dec
lea
hlt
fsubrs
lea
loope
loopne
push
xchg
jmp
lret
in
add
lea
mov
scas
push
xor
fs
fisttpl
mov
pusha
pop
xchg
ror
testb
jb
popa
jb
data16
add
pop
pusha
xor
dec
lock
fmuls
dec
pop
call
and
loope
xchg
hlt
mov
add
loopne
xor
shlb
jmp
addl
outsb
xorb
jp
bound
mov
sbb
outsl
inc
dec
mov
sbb
loopne
call
negl
pop
and
and
orl
test
jae
aaa
mov
sub
loopne
or
xor
jmp
das
mov
adc
or
mov
add
faddl
xchg
inc
push
mov
aaa
insb
jg
loopne
lods
loopne
int3
cmp
fimuls
xchg
aas
dec
and
ret
mov
cmp
dec
jecxz
lock
and
mov
cmp
pusha
adc
outsb
and
pop
pop
or
add
cwtl
addl
inc
mov
out
adc
inc
xchg
mov
mov
inc
loopne
ljmp
mov
mov
in
mov
loop
repz
icebp
adc
cmp
xor
std
jo
add
add
push
orb
roll
mov
cld
inc
mov
mov
jne
std
outsl
pushl
inc
adc
xor
jne
jo
lea
scas
lea
scas
call
sub
data16
add
push
pop
add
stos
mov
jmp
mov
cld
xor
mov
repnz
loopne
jge
sbb
xor
and
leave
nop
cmp
shll
ds
mov
inc
outsl
push
rcrl
jp
mov
incl
jmp
loopne
add
push
mov
mov
and
lcall
cmp
push
fdivrp
or
je
idiv
jmp
mov
mov
icebp
push
call
dec
jmp
sbb
xor
mov
sub
or
bnd
mov
insb
cli
push
jo
adc
rcrb
ds
push
lock
stos
pop
jb
lock
inc
inc
psraw
pop
lock
push
call
lock
push
pop
inc
jo
scas
mov
je
mov
insl
mov
mov
je
push
or
loopne
enter
incl
dec
push
lods
push
xor
add
jg
mov
and
call
sub
mov
ljmp
lock
pop
inc
sbb
mov
dec
je
call
sar
decl
pshufw
bound
call
icebp
fsub
xor
stos
push
call
sub
or
or
add
pop
inc
data16
jo
jne
sbb
add
mov
add
cmp
xor
inc
mov
push
cmp
sarb
loopne
scas
push
mov
mov
or
or
icebp
add
xorb
or
xchg
in
inc
add
jne
jl
je
jb
xchg
nop
xchg
ret
push
bound
in
or
push
adc
sub
cmp
fdivs
or
push
mov
insb
add
jmp
or
add
jo
out
push
or
pop
adc
mov
cmc
stos
aad
aas
push
or
call
mov
and
lods
lret
push
push
call
or
js
cmc
notb
pop
jb
push
je
sti
and
sbb
outsl
sbb
cmpsb
lock
sbb
adc
rclb
repz
pop
sti
mov
pusha
jne
jmp
fbstp
mov
xor
adc
ret
roll
ds
out
and
loope
add
and
loop,pt
dec
or
cmp
andb
js
rolb
mov
jg
dec
push
scas
pop
call
js
xchg
jne
mov
or
inc
clc
jnp
int3
and
enter
sbb
jmp
repnz
push
push
jb
icebp
add
adcb
je
lock
inc
pop
mov
por
addl
mov
sbb
pop
std
repz
mov
repnz
jg
mov
mov
pop
inc
mov
aas
repz
cmp
je
jo
movsl
mov
pmaxub
pop
cld
test
icebp
pop
out
loopne
rclb
pop
jb
test
movsb
in
cld
imul
aam
mov
jmp
mov
mov
lcall
in
call
and
jb
or
jne
adc
or
pop
lock
test
pop
mov
pop
popf
adc
mov
adc
negl
cltd
xor
enter
test
std
push
push
test
jno
adc
jo
and
das
mov
mov
call
inc
mov
dec
fdivs
or
aas
aam
shl
cli
xor
sti
xor
or
inc
sbb
call
xchg
pop
add
cmp
add
xlat
mov
stc
xor
out
inc
xchg
pop
pop
pop
jo
push
dec
leave
and
test
mov
adc
xor
push
and
lock
aad
pushl
and
add
pushf
inc
jg
incl
jg
mov
notl
lock
xchg
aas
jmp
pop
add
sub
mov
dec
movups
lock
sbb
mov
push
test
cltd
data16
cwtl
mov
loope,pn
xchg
pop
lea
add
jmp
mov
xor
mov
or
das
push
shlb
push
mov
push
clc
push
jl
clc
mov
jmp
adc
inc
sti
incb
mov
popa
fbld
jp
addb
lock
mov
dec
or
lea
lock
or
xchg
inc
cli
mov
dec
lret
inc
ja
adc
in
leave
pop
adc
into
push
jmp
movb
cmp
or
decl
in
sbb
push
movzbl
add
adc
inc
aad
sub
lods
cmp
sbb
call
repnz
mov
add
js
decl
push
cmp
imulb
outsb
add
dec
add
sub
sub
mov
jo
rorb
movl
xor
insb
lcall
stos
adc
and
arpl
xor
xor
lea
dec
cmp
pop
adc
jp
test
stos
adcb
push
or
add
pushl
je
inc
fildl
inc
pop
jae
jno
mov
ljmp
pushl
cs
test
xorb
loop
add
push
inc
push
add
adc
and
and
add
cmp
lret
mov
cld
xor
inc
test
pop
mov
push
or
push
incb
xor
imul
mov
or
adc
fwait
jb
cwtl
or
add
add
sbb
adc
jle
notb
add
jbe
call
push
dec
adc
jg
incl
xchg
push
xchg
sub
sarl
add
testb
je
xor
sbb
lock
sbb
cli
stos
jg
dec
push
mov
add
sbb
jne
test
jg
inc
add
pop
push
or
fistps
xor
cmp
add
jmp
xor
in
fsubrp
xor
aas
and
imul
loopne
fldl2t
sub
pop
mov
cmp
jae
mov
ret
movsb
scas
je
mov
shrb
mov
pop
int3
lcall
shlb
fisubl
test
and
cld
cmp
ja
lods
add
nop
jg
dec
dec
push
add
jmp
cltd
testb
hlt
add
roll
add
cmp
xchg
xor
add
adc
xor
insb
rcl
push
push
adc
dec
insb
nop
pushf
jo
stos
jg
stos
jb
xchg
sub
inc
mov
je
es
adc
movsb
jbe
lods
mov
enter
shll
pop
jbe
adc
mov
or
xor
add
shlb
nop
outsb
sub
les
out
cltd
sub
cs
xchg
mov
mov
inc
mov
js
pop
dec
cwtl
mov
sbb
ljmp
popf
add
hlt
ja
sub
movl
rolb
fcmovnbe
dec
or
es
lcallw
dec
adc
add
icebp
pop
into
add
fs
jl
hlt
inc
test
cli
das
mov
or
pop
jmp
pop
mov
push
mov
jo
test
stos
inc
lret
dec
clc
stos
pusha
decl
or
les
pop
sbb
int
mov
cld
test
push
lock
loop
or
mov
out
inc
cld
sarb
out
jge
inc
fbstp
test
pop
lea
adc
lods
xchg
inc
dec
xor
popa
sahf
dec
sub
add
cmpl
addr16
orb
xchg
and
cs
push
adc
jge
push
pop
ret
je
add
push
mov
xor
mov
addb
test
cmovp
inc
addb
cld
fst
out
jbe
mov
sub
fcoms
jl
add
or
and
push
mov
xchg
ficompl
pop
lret
mov
add
mov
repnz
push
or
cmp
fwait
popa
faddl
lock
add
shlb
cmpb
andb
daa
pusha
push
add
mov
cld
inc
and
fst
xchg
fcoms
sar
add
pop
mov
data16
insb
ljmp
fdivrs
add
dec
add
mov
cmpb
add
xor
adc
jl
adc
dec
rorb
add
outsl
push
loop
or
mov
jne
jg
push
invd
jp
add
jb
loop
movsb
add
andb
push
inc
fcompl
ret
gs
ret
xlat
inc
out
js
inc
mov
mov
clc
cmc
nop
or
lret
jnp
sub
xor
rcrb
adc
push
outsb
add
les
scas
push
adc
cli
shlb
hlt
ljmp
push
cmpb
arpl
jle
pop
movsb
or
scas
add
loope
inc
lret
mov
cmp
pop
insb
fbstp
fcmovb
dec
in
shlb
test
daa
adc
xor
or
jbe
mov
mov
push
pusha
insb
add
xor
mul
negb
pop
mulb
sbb
add
pop
ja
xor
loop
add
ret
sub
in
inc
ljmp
jl
popa
mov
mov
jmp
bound
mov
inc
add
pop
add
or
adc
je
xchg
ror
inc
sti
jmp
fcomps
aas
inc
and
xchg
mov
mov
jo
ljmp
inc
add
jmp
jmp
sub
test
stos
ret
test
inc
cmp
cwtl
loopne
and
fcoml
push
je
or
sbb
shlb
adc
rorb
outsb
shrl
adc
mov
push
add
add
inc
lcall
fcmovnb
cmpsb
in
jmp
imul
int3
leave
cmp
lock
mov
dec
sti
nop
test
loop
cmp
or
mov
mov
add
pushl
or
loope
jo
add
mov
jg
jbe
incl
add
push
call
xor
loop
incb
pusha
add
jmp
inc
hlt
add
sbb
push
push
inc
and
and
cmc
or
jmp
dec
sarl
and
loopne
push
cmpb
adcb
add
ret
and
orb
and
insl
aaa
aam
jge
in
mov
mov
je
jg
jnp
jg
sbb
add
adc
jmp
mov
gs
in
lea
or
call
loopne
bound
ja
popa
std
add
loope
test
lock
xor
sbb
or
insl
adc
jmp
jmp
mov
in
bound
add
pusha
push
adc
in
sbb
insl
xchg
ljmp
and
jg
mov
fadds
pop
xchg
jb
mov
pop
js
or
cmpl
lods
push
lcall
xchg
mov
or
sbb
xchg
inc
inc
mov
lea
add
xor
hlt
jbe
je
xchg
lea
mov
scas
adc
mov
andb
or
push
mov
inc
inc
and
xor
shrl
sbb
pop
sar
fcoml
cld
outsl
jg
mov
sub
pusha
jns
lea
jp
pop
int
lds
loopne
dec
testb
adc
cmpsb
add
mov
and
mov
shrb
movl
dec
jge
cli
ljmp
xor
test
ds
cltd
in
mov
push
mov
mov
ds
mov
divl
cmp
xchg
add
sub
adc
mov
shll
mov
shlb
ja
jg
loopne
cmp
pop
pcmpgtd
lea
out
cli
jg
push
mov
mov
pusha
xor
and
add
pusha
xchg
out
fdivp
outsl
mov
aas
push
je
mov
add
jmp
mov
ss
sub
iret
adc
xchg
loopne
repnz
loope
jmp
inc
inc
call
aad
loop
inc
inc
mov
sub
je
lret
popa
dec
adc
and
outsl
jg
pop
lret
inc
daa
xchg
lret
repz
loope
or
and
inc
push
sbb
loopne
mov
lret
cmp
push
cld
or
and
and
or
adc
push
mov
testl
icebp
add
or
sub
mulb
dec
popa
aas
fwait
inc
loope
lret
outsb
in
push
pusha
xchg
hlt
call
loope
dec
pusha
or
add
outsl
aaa
mov
lea
movsb
jecxz
adc
je
jno
dec
sbb
or
cld
add
push
or
stc
pop
ss
jo
cmp
cs
ret
mov
movsl
xor
scas
addb
adc
and
stc
pop
dec
movsb
xor
mov
push
popf
lcall
pushl
dec
mov
inc
add
icebp
dec
enter
push
add
stos
fdivp
and
testb
mov
dec
add
stos
push
cld
outsb
call
test
movsb
nop
jbe
adcb
mov
jno
ret
aam
mov
aaa
lds
push
xor
xor
sbb
es
addl
xor
add
adc
in
mov
mov
cmp
push
je
add
cmc
add
les
mov
push
or
clc
subb
sbb
pop
xor
cmp
add
mov
mov
mov
jo
mulb
lock
xorb
jo
xor
dec
or
ret
sub
add
mov
xchg
lock
push
and
cmpl
aad
les
mov
cmp
add
push
fs
jmp
cmp
je
lcall
mov
inc
out
fsubr
adc
fildll
vmwrite
and
add
xor
sbbb
lods
ss
test
icebp
dec
push
out
outsl
cli
in
xchg
xor
cld
enter
add
pop
xor
imul
push
sub
call
or
inc
cmp
inc
jmp
jmp
sub
mov
popa
jo
les
jmp
aad
ljmp
mov
add
mov
jmp
testb
mov
je
insb
add
fnstenv
push
sbb
lcall
inc
hlt
and
insl
add
add
data16
sub
es
mov
xchg
sub
xchg
mov
push
ret
jg
mov
mov
addb
jl
inc
cwtl
add
xor
in
mov
lock
mov
jle
adc
mov
pop
and
jae
or
test
jp
sub
xor
jge
hlt
xor
jmp
cmpsb
mov
xchg
add
jne
idiv
xchg
push
mov
je
jne
add
mov
inc
insb
sub
dec
stos
insb
pop
inc
popa
add
push
cld
push
sbb
lock
sub
icebp
xorl
mov
pop
push
jae
mov
add
jp
mov
mov
inc
jecxz
jo
mov
lret
cli
ja
mov
mov
sub
loopne
jo
xchg
push
lds
lcall
ljmp
lock
adc
pop
inc
add
push
mov
lea
push
mov
inc
out
inc
test
or
or
cmp
mov
ss
or
clc
sbbb
add
lcall
mov
ret
dec
lock
push
add
adc
add
cs
shr
loopne
cli
inc
addb
jne
int3
sarb
repnz
ljmp
inc
clc
outsb
cmp
setne
inc
je
mov
test
repz
adc
test
dec
xor
add
shrl
inc
sbb
jmp
addl
and
or
adc
aam
jnp
xor
mov
inc
les
add
loope
cmp
lock
add
fildl
ss
inc
jbe
pop
xor
add
int
mov
pop
jmp
fisttps
mov
mov
inc
inc
idiv
xor
sbb
adc
sti
add
xor
inc
or
add
lock
push
add
shlb
dec
add
sub
jge
adc
lcall
dec
add
frstor
repnz
inc
testb
jmp
mov
aaa
add
adc
pusha
mov
sbb
mov
loopne
clc
or
mov
sub
pushl
and
cmp
je
ret
icebp
cmpsb
daa
rclb
add
mov
lock
jo
xchg
inc
pusha
pcmpgtb
fcomip
decl
jmp
xor
adc
aas
cmp
ss
xor
inc
adc
aad
lds
or
and
out
add
mov
cmp
ja
mov
cmp
pop
cmc
andl
or
nop
fists
push
lods
ljmp
add
push
test
xchg
mov
aam
xorb
and
cmc
adc
mov
into
add
fisttps
jo
pop
and
mov
xor
push
mov
xor
adc
rol
sarb
add
xchg
shlb
or
sub
sbb
int
add
ret
jns
rcr
call
xor
sub
xor
add
repz
repz
xchg
lds
cmp
add
xchg
lods
enter
inc
cmp
push
xor
js
outsl
push
pop
mov
add
mov
lock
pop
insb
call
xor
adc
xchg
popf
sub
repnz
jmp
pop
subb
mov
push
mov
mov
or
jbe
jb
or
add
mov
jns
icebp
add
xchg
xor
ret
std
jae
rcl
jle
repnz
ret
fcoml
mov
icebp
push
jbe
test
js
cwtl
scas
add
rcll
push
dec
jne
and
inc
ljmp
inc
hlt
ret
inc
or
dec
jbe
ret
dec
rorl
xor
xor
mov
add
dec
xorl
jg
mov
xor
mov
ret
cmp
cs
int
jne
inc
lock
cld
add
add
add
mov
pop
and
push
loop
lock
lods
sbb
adcb
inc
mov
xor
jo
xor
mov
les
inc
jmp
pop
lret
push
adc
cmp
push
or
fisttps
push
lock
lret
pop
push
out
mov
jnp
jo
add
dec
cld
scas
hlt
data16
jle
mov
cmp
roll
cmp
jmp
jmp
jmp
xor
out
add
clc
mov
jmp
jne,pt
mov
add
cmp
mov
test
mov
pushl
cld
jbe
jmp
add
lds
add
pusha
ret
cmp
jbe
cmp
ja
gs
xor
lock
out
add
ret
imul
stos
sub
push
enter
shl
or
sbb
adc
mov
test
add
sub
mov
jo
or
add
jge
lock
xchg
push
dec
rorb
std
divb
sub
cmp
jl
or
lock
or
mov
xor
add
jno
aaa
loope
shl
insb
roll
cld
mov
test
pop
cli
mov
adc
cmpb
or
mov
jle
int
inc
stos
sbb
cltd
fmuls
jle
sbb
adc
mov
inc
jbe
hlt
push
xchg
add
jb
xchg
clc
sub
mov
aaa
mov
adc
inc
mov
out
or
jbe
add
xchg
xor
cmp
push
mov
inc
sub
insb
xor
decb
adc
inc
add
into
loop
pop
jmp
addb
push
dec
movl
ret
xchg
or
push
orl
pop
pmuludq
packssdw
adc
dec
test
pop
pop
mov
dec
lock
or
repnz
int3
das
clc
mov
inc
jmp
add
add
mov
jno
inc
pop
push
addb
aas
xchg
pop
xorb
inc
stos
in
inc
xor
fiaddl
and
push
ret
or
jb
hlt
orb
inc
sub
mov
mov
sub
add
dec
lock
stc
mov
imul
sub
dec
adc
pop
add
in
jge
lock
les
adc
add
mov
insl
xchg
and
sbb
adc
mov
fcomip
pop
divl
adcb
pop
jo
rclb
fwait
sub
cmp
cmpsb
rcrb
mov
adc
gs
pop
xlat
imul
call
imul
mov
sar
stos
add
add
xchg
rorl
data16
stc
fbstp
loop
jl
sub
stc
mov
inc
mov
ret
xchg
lret
xor
test
or
xor
in
sbb
push
fadds
nop
jl
adc
pusha
xorb
fiaddl
outsb
pop
je
add
sub
test
or
popa
inc
jl
inc
mov
dec
pop
hlt
or
cmpsl
mov
sbb
cli
inc
movups
xchg
jge
jo
xchg
dec
test
rcll
push
or
sbb
outsb
mov
addb
or
icebp
adc
je
dec
ljmp
xchg
aas
jp
lahf
rorb
add
or
aad
out
sbb
outsl
jo
repz
pusha
cld
mov
push
cmp
or
lock
jmp
and
add
movsl
sarb
cld
adc
rcr
inc
rcr
lock
xorl
cld
jmp
test
test
mov
ret
jp
push
sarb
add
fcmovb
cwtl
cmp
popa
sbb
lock
adc
scas
shrb
neg
fistpll
or
sbb
lds
les
movl
mov
jb
adc
sbbl
popa
adcb
loopne
adc
clc
push
subb
jbe
dec
leave
cmpsb
push
jne
adc
loopne
jg
xor
call
mov
or
add
mov
xor
testb
adc
or
lret
and
mov
mov
cmp
in
jecxz
ret
mov
xor
and
adc
pop
cmpb
jmp
aad
jnp
addr16
cltd
mov
cld
inc
mov
or
push
or
pop
or
cmpb
fsubs
ret
xorl
sbb
leave
add
xchg
hlt
decl
adc
mull
lock
pop
test
into
loopne
pop
lods
inc
mov
sub
jo
push
and
adc
pop
xlat
nop
aam
push
test
mov
les
ljmp
mov
inc
lock
rorl
loopne
nop
ss
test
sbb
and
lret
ficomps
sub
test
jmp
or
or
and
clc
call
push
xor
adc
pop
loopne
or
adc
sar
mov
fists
in
mov
jmp
and
jb
loopne
dec
xor
mov
sub
sub
or
aaa
mov
xlat
jmp
insl
jecxz
push
mov
lahf
push
std
loope
lret
cmpsb
mov
xor
cmpb
pusha
cltd
pop
imul
push
pusha
mov
sub
adc
pop
dec
mov
push
jecxz
dec
loopne
xor
aas
es
dec
loop
mov
ret
add
cmc
subb
or
adc
insb
cmp
roll
cmp
subl
fucomp
fwait
or
mov
pusha
mov
mov
add
ret
cli
and
vmread
adc
and
adc
in
add
cld
loope
cmp
push
pusha
int3
dec
ljmp
adc
ss
dec
jo
dec
scas
mov
add
nop
jbe
lea
cmp
fistps
stc
or
inc
fadds
and
pop
add
subb
dec
sub
in
dec
mov
fcomi
ds
add
dec
sub
mov
subb
mov
adcl
sub
cmp
and
incl
jmp
inc
pusha
bound
decb
mov
addl
and
mov
jle
and
je
inc
jle
bound
jle
pusha
or
arpl
mov
lods
jne
pusha
mov
nop
or
inc
jmp
cmp
cwtl
sbbl
aaa
ret
pushf
inc
add
inc
fsts
mov
loop
cld
fisttps
sbb
add
or
movb
outsb
int
fisttps
jmp
jo
lock
add
mov
cli
fbstp
hlt
decl
loopne
test
and
xor
add
fistpll
or
jp
testb
adcl
xchg
decl
mov
aaa
fucompp
arpl
jae
add
ljmp
mov
push
mov
inc
cmpsb
jle
or
add
inc
cmp
xor
add
mov
icebp
inc
ret
jo
aaa
inc
add
or
sti
pop
hlt
pop
out
inc
and
je
or
mov
fstpt
jmp
push
testb
and
push
ja
shlb
mov
mov
add
dec
xchg
push
popa
dec
push
mov
jmp
xchg
jo
xor
jl
aaa
jg
add
data16
mov
out
push
stos
adc
icebp
mov
lock
jle
adc
sarl
outsb
mov
jl
sub
add
jle
xor
add
add
pop
xchg
pop
jg
incl
lock
mov
jle
mov
xor
xchg
in
push
jno
mov
or
or
paddusb
mov
add
stos
mov
cmpb
cmp
sub
test
jle
sbb
cmp
or
add
scas
pop
lret
jno
loop
sbb
fsubrs
mov
add
add
repnz
add
out
fdiv
decl
sub
xor
scas
jl
not
sub
mov
insb
mov
add
sarl
pushf
mov
cmpsb
clc
jg
xor
icebp
lock
jnp
in
inc
or
jo
es
mov
in
jnp
icebp
xor
xchg
add
dec
mov
stos
je
mov
sbb
jae
jo
jo
or
adc
inc
xchg
xor
fucomi
and
mov
or
sbb
mov
mov
cmp
mov
out
xchg
lock
jb
and
jmp
xor
rorb
shl
add
dec
jb
inc
outsl
mov
mov
fcomip
pop
pusha
fdiv
adc
sub
lock
shlb
jo
adc
add
repz
ret
add
jl,pt
mov
jo
mov
mov
and
lock
mov
or
lods
lock
repz
add
test
lock
sub
mov
jmp
imul
or
sbb
inc
fucompp
js
pop
jo
or
inc
repnz
xor
mov
mov
jmp
xor
fcompp
jo
jb
push
mov
push
push
je
loop
mov
adc
inc
pop
sahf
jne
fsubrp
mov
adc
orb
inc
xor
mov
testb
cs
pop
jg
adc
jmp
xor
adc
das
cld
ret
lock
push
jg
call
aaa
push
nop
adc
xor
xor
ret
cmp
push
ss
lods
std
loopne
sbb
inc
ss
mov
xlat
lods
push
mov
ss
adc
popf
movsl
sub
repnz
add
popf
add
add
cmp
aam
xor
mov
push
lock
cmp
jae
add
pop
add
scas
clc
inc
dec
adc
jae
xor
popa
orl
movl
add
and
jmp
push
or
mov
das
push
add
mov
or
lcall
add
sub
stos
mov
out
add
mov
jmp
add
cmpsl
xchg
addb
mov
shrl
xorb
hlt
cmpsl
add
inc
mov
andl
xchg
mov
shlb
cmpsb
cld
lcall
xor
test
add
and
cmp
je
mov
cmc
fs
lcall
sub
mov
scas
hlt
xchg
pop
clc
xchg
xor
repz
xorb
add
add
or
stc
cmp
push
cmp
jmp
jmp
push
jmp
dec
fistpl
incb
decl
adc
lea
lock
inc
push
incl
scas
mov
in
addb
inc
jo
or
adc
shr
insb
test
test
pop
orl
sahf
loop
lds
cmp
or
xor
or
inc
jmp
mov
ljmp
mov
jmp
mov
fcomps
push
into
nop
dec
xor
add
jno
jno
mov
inc
fildll
les
jae
xchg
add
addb
sets
push
enter
rclb
mov
xor
les
xor
scas
xor
cld
pop
add
loopne
jo
in
push
inc
and
push
add
mov
jno
das
inc
jo
xor
outsl
pop
cld
lods
imul
sbb
lcall
lock
lock
outsb
or
out
jo
jmp
jne
out
and
mov
adc
out
jo
add
pushf
mov
ljmp
in
add
add
cmp
outsb
dec
insb
dec
push
and
out
add
push
add
ficoms
inc
cmc
or
pop
or
mov
and
in
push
dec
push
adc
push
push
mov
xchg
loop
mov
jmp
or
lea
or
mov
push
add
lods
dec
adc
test
add
xor
shlb
xorb
jle
loop
cmp
loopne
cmp
out
add
data16
es
mov
lret
add
nop
fiadds
push
xchg
mov
push
add
cmp
loope
je
mov
adc
dec
pop
fdivr
inc
adc
dec
add
mov
mov
ljmp
jg
call
pusha
dec
push
or
or
push
stos
cmp
fsubr
and
andl
mov
xchg
addb
inc
orb
jg
jl
les
andb
fldl
gs
cmp
and
mov
ljmp
addb
inc
add
push
ljmp
sub
mov
addl
mov
or
dec
or
mov
aas
mov
pushf
je
mov
or
sbb
rclb
mov
mov
nop
test
xlat
adc
or
orl
pushl
cmp
push
add
pop
je
adc
xchg
xchg
call
pop
clc
out
mov
add
hlt
decb
std
inc
add
cmpsb
or
and
inc
inc
popa
add
add
sti
mov
stc
test
rorb
add
add
loope
and
shll
or
add
aaa
jl
js
add
enter
xchg
pop
inc
inc
rolb
mov
add
adc
pop
rorb
mov
add
push
orb
jmp
je
sub
lcall
jg
insb
je
clc
pop
push
push
add
push
sarl
add
stos
fmull
add
adc
push
fcompl
je
or
adc
sbb
popa
xor
jg
pop
xchg
inc
and
pop
rclb
cld
push
and
mov
mov
adc
shll
and
sbb
movsl
adc
and
xchg
rolb
rol
sarb
add
mov
dec
xchg
pop
ret
sbbb
xor
cmp
sar
jae
ljmp
shll
pusha
inc
jg
inc
mov
fwait
xor
add
and
jg
outsl
sub
js
mov
and
pop
lea
lock
aas
jo
aam
fs
out
in
cmp
cmp
in
mov
out
dec
fadd
push
je
ret
add
call
into
pushf
adc
pextrw
or
or
ret
int3
das
pop
push
jmp
ffreep
into
xor
inc
rcr
lds
adc
adc
add
je
inc
add
xor
pushl
orl
pavgb
or
mov
dec
call
or
add
mov
fildll
nop
and
loopne
jecxz
push
xlat
loopne
xor
in
bound
call
loopne
pop
cld
pusha
outsb
adc
enter
xchg
aas
lret
add
fisubl
je
cld
pop
and
insl
test
adc
mov
jl
sbb
push
add
jbe
push
cmpsl
add
mov
movsb
das
push
popl
jo
sbb
lret
and
and
out
stc
loope
xor
xlat
jecxz
lret
loopne
call
loope
xor
popa
push
inc
mov
mov
rorl
fdivrp
in
dec
addl
insl
adc
out
in
sub
add
sub
mov
or
es
mov
adc
jmp
ss
cmp
and
es
loopne
or
mov
sarb
test
cli
or
xchg
fcmovb
call
shlb
arpl
jmp
pusha
dec
push
xchg
and
outsb
adc
popa
adc
insb
movsl
inc
mov
enter
inc
scas
mov
icebp
test
inc
jne
loope
stos
rcrl
call
mov
cmp
clc
jl
push
cmp
jbe
xor
es
pop
insl
aaa
test
xchg
sbb
sbb
addr16
push
pushl
lods
sbb
mov
movsb
loope
dec
sub
jecxz
pusha
adc
sub
dec
push
jecxz
js
mov
pusha
mov
test
adc
jbe
das
lock
push
push
push
lock
xchg
push
add
jmp
out
jo
sahf
loope
je
and
xor
shl
inc
xchg
popa
add
fiaddl
dec
xor
pop
cmpb
jbe
cltd
cli
inc
lods
daa
popa
dec
loopne
ss
cmpb
jecxz
push
adc
xchg
cmp
mov
lea
cmp
xor
movsl
push
xor
push
cld
jmp
loopne
mov
push
fsubs
inc
jmp
rcll
pushl
into
fistl
das
je
inc
arpl
jecxz
cmp
pusha
pop
popa
cmp
jnp
adc
shl
cmp
ret
jecxz
popa
mov
loopne
movsb
in
xlat
je
popa
pop
lret
push
mov
jl
enter
or
and
in
dec
lods
and
loopne
ret
and
push
add
sbb
adc
jecxz
xor
es
frndint
mov
jmp
repnz
xlat
bound
add
xchg
or
call
or
cld
mov
fildl
pop
add
pusha
loop
clc
and
mov
pusha
sub
push
sbb
mov
and
pop
mov
cmp
pop
loopne
ret
call
mov
out
test
out
or
sub
mov
and
sbb
ss
cmp
inc
rclb
or
or
sub
fsubrs
inc
cli
mov
add
jae
adc
and
ja
addb
sti
test
or
xchg
pop
pop
outsb
inc
cwtl
call
insb
sub
cli
cmp
mov
push
mov
xor
jge
push
lods
or
jo
xorb
inc
test
xchg
mov
add
pop
loop
add
movsb
push
jo
cmp
adc
add
cmpl
ret
sbb
test
mov
lea
ss
inc
bound
add
dec
sbb
ficompl
addl
jbe
ret
add
out
jp
xor
shl
add
lds
add
or
lds
or
adc
adc
lret
cmp
jmp
xor
or
jmp
or
jg
test
ret
jb
test
test
cmp
clc
jmp
xchg
sti
pop
roll
mov
std
add
mov
loopne
shl
out
sbb
push
lods
insl
sub
mov
push
push
addb
loope
xor
dec
cmc
sbb
xchg
inc
outsl
pop
adcl
adc
inc
push
insl
sti
xchg
push
push
imul
adc
out
push
push
push
add
push
imul
out
imul
add
int3
push
jl
dec
shll
mov
fldcw
or
push
xor
mov
jle
adc
add
fcoml
lock
data16
xor
push
insb
test
ljmp
or
mov
lods
fcompl
xchg
lods
and
add
insb
sub
add
add
mov
loope
and
push
pop
mov
mov
cmpsb
sbb
mov
cli
pop
xor
add
incb
add
mov
add
or
dec
repnz
push
out
dec
lds
enter
sbb
add
in
sbb
loope
pop
xor
fisubs
fisubs
and
add
cld
fstpt
or
sub
sub
mov
add
das
add
adc
push
xor
mov
mov
xchg
mov
gs
aas
mov
les
dec
nop
mov
pop
fistpl
adc
push
insb
or
movsl
push
fiaddl
lock
or
and
cld
inc
or
push
test
dec
xor
mov
in
int
outsl
cmp
jo
or
adc
cmp
xchg
xchg
loop
add
or
xchg
ret
xor
out
inc
jns
push
pop
or
adc
cmp
cmp
add
mov
lock
hlt
incl
inc
push
or
outsb
enter
push
or
and
add
jo
sbb
leave
cld
ret
dec
mov
test
jbe
add
mov
fwait
clc
ss
cmp
pop
nopl
out
int
roll
pushf
stc
aam
jno
sar
aaa
push
and
cmp
dec
out
or
mov
sbb
pop
std
fisttps
dec
sbb
clc
push
jmp
inc
sbb
xchg
cld
mov
jbe
inc
add
movzwl
sbb
inc
adc
adc
jne
pop
loopne
xor
fs
add
mov
mov
mov
pop
mov
inc
lods
inc
push
pop
addl
push
inc
ret
xchg
lock
mov
add
mov
cld
push
and
pop
pusha
jp
ds
call
inc
test
jo
push
outsl
outsl
xchg
lcall
and
mov
cld
cs
lea
jb
mov
jge
push
jo
aaa
cld
out
lock
adc
stos
inc
ja
fisttpl
mov
test
mov
repz
pop
lock
jo
or
or
lods
add
call
sbb
shlb
fldt
add
pop
sbb
push
testl
insl
sbb
in
test
clc
xor
fcmovnu
imul
mov
or
pusha
add
ret
lcall
sub
xchg
add
add
ret
cmp
mov
add
dec
int
and
add
pushf
mov
sbb
dec
adc
stos
xor
stos
jg
hlt
push
add
add
rorl
mov
fdivp
jbe
mov
sbb
ds
ljmp
orb
jo
add
push
sbb
scas
mov
add
decl
popa
scas
or
add
pop
lock
inc
jg
insb
sbb
ret
es
data16
cld
mov
jmp
je
push
rorl
ljmp
test
xor
or
push
pop
dec
loop
sahf
cmp
mov
push
rorl
cmp
jle
mov
sarl
test
push
sub
test
sbb
fs
lock
sbb
mov
rorb
push
mov
and
mov
mov
xor
inc
or
je
pop
xchg
repz
fidivrs
ljmp
add
lock
pushw
pop
test
stc
jo
adc
cli
outsl
pop
pop
pop
mov
es
add
sti
cmp
jl
and
mov
shll
testb
jbe
cmpsb
test
subb
ficompl
push
mov
mov
sbb
jp
push
xor
dec
fdivs
mov
mov
xor
add
fisubs
outsb
call
xchg
sarl
inc
sbb
cld
mov
jge
jl
mov
je
or
push
arpl
mov
rcl
add
enter
mov
xchg
jmp
jl
xchg
cli
cld
ja
mov
cmpl
sub
mov
lock
or
enter
inc
and
adc
jmp
dec
jbe
in
fsubs
je
je
push
call
lret
push
cmp
es
push
mov
adc
push
cs
mov
dec
push
sbb
scas
jl
cmp
aaa
add
mov
gs
lock
inc
add
or
sub
push
sbb
push
clc
xor
add
lcall
xchg
stc
jae
sub
dec
add
jmp
sbbb
repz
pusha
in
ljmp
stc
les
jae
mov
sbb
loope
lods
inc
pop
pop
xor
or
stos
icebp
fildll
sub
mov
fdivl
jmp
movsb
lock
push
mov
std
sub
jne
addl
jmp
inc
add
dec
je
inc
les
jb
mov
mov
inc
inc
in
testb
es
mov
addl
je
jmp
fisubl
call
cli
sti
cmp
rcl
mov
push
xor
in
jmp
cmp
sahf
test
lret
mov
scas
popl
sub
pop
shrb
add
cmp
add
mov
lret
rolb
mov
mov
push
jp
cmp
rcll
test
fstp
adc
jb
pop
jbe
aaa
pop
push
jle
mov
xor
ret
lea
enter
xchg
mov
shrl
adc
pop
in
imul
je
and
outsb
cmp
dec
sar
or
cmpb
jne
cmp
ss
lock
cmp
cmp
add
mov
repnz
or
stos
in
jne
push
pushf
jne
cmp
mov
sbb
pop
mov
into
popf
aas
add
fmulp
jbe
sbb
les
jl
add
mov
sahf
lock
or
je
cmp
jb
jmp
aaa
dec
pop
insb
fldenv
mov
pop
fistpl
je
out
stos
test
jmp
push
adc
dec
sbb
fdiv
scas
mov
and
lret
inc
pop
call
cwtl
jbe
loopne
xor
mov
cwtl
out
or
or
test
movsb
sub
mov
fsubrs
sbb
mov
sub
xchg
mov
or
std
jle
out
mov
nop
xchg
or
cmp
mov
lea
cmpsb
cmpsl
inc
das
je
cmp
xchg
clc
jbe
cmpsb
mov
addb
cs
adc
push
mov
cmp
divb
adc
dec
jb
lret
test
adc
cmpsl
clc
vmptrst
add
pushf
daa
and
pop
mov
mov
loopne
lcall
jge
mov
jge
ja
mov
jne
sar
xchg
clc
mov
cmpb
and
jne
outsb
cmp
cwtl
jecxz
pop
std
dec
pop
add
ljmp
jl
mov
or
sbb
nop
adc
jbe
shl
repnz
mov
ret
push
xor
repz
stos
bound
lock
adc
push
pop
pop
rcrb
clc
shlb
mov
in
outsl
test
push
and
jecxz
jle
aam
ss
sbb
mov
sti
jmp
dec
clc
enter
mov
jne
cmp
je
jl
add
fisttpll
mov
mov
add
sbb
push
outsb
adc
mov
mov
jp
rcrl
sub
ss
idivb
mov
adc
inc
pop
dec
cmp
jge
pop
lock
les
push
nop
sub
sbb
cld
mov
adc
adc
jbe
add
cld
push
pop
mov
cmp
or
movb
sub
movsb
pop
mov
andl
ret
push
inc
add
aas
xchg
add
mov
adc
and
sbb
test
pusha
lods
xchg
les
arpl
xor
dec
dec
popw
push
dec
adc
int3
mov
movsl
gs
lock
mov
or
add
push
mov
cli
movsb
jp
cmc
cmpsb
adc
push
movl
std
es
xor
sub
mov
adc
jnp
data16
jb
or
jle
xor
lock
loopne
add
roll
clc
lock
insl
push
pop
rorb
cmp
add
adc
pop
or
adc
push
das
shrb
idivb
xchg
fwait
rorb
inc
add
test
xor
jne
sub
adc
adc
dec
mov
gs
je
shr
outsb
sbb
jmp
cs
or
push
es
shrl
cltd
push
mov
jle
das
movsl
rolb
push
pop
and
ds
pop
lods
cmp
jbe
pop
ss
and
push
fistl
fisttpl
jecxz
int3
ss
or
in
sahf
aam
add
pop
daa
jle
and
mov
xchg
cmp
or
js
and
test
push
push
push
lds
shlb
mov
jl
cmpsb
mov
aam
lock
sahf
push
loopne
jge
jge
adc
mov
dec
xchg
add
loopne
adc
push
and
lcall
dec
pop
push
inc
jge
test
adc
or
sub
mov
xchg
test
adc
or
push
adc
inc
sbb
sti
gs
dec
ret
mov
and
adc
imul
scas
aaa
xchg
mov
nop
loopne
lcall
in
call
int3
pop
aas
xor
bound
mov
sub
dec
lret
push
hlt
rclb
pushl
rcl
movsb
xor
fsubs
stos
fsts
aam
fidivs
push
xchg
out
sbb
cmpsl
fs
inc
es
rcrl
adc
push
sub
in
fistpl
test
ror
sarl
cmp
stc
xchg
idivb
repz
movsl
sti
push
cs
aad
lea
leave
pop
push
loope
xchg
pop
fmull
sti
adc
push
fs
mov
outsl
std
adc
fistpll
and
cmpsb
fnstcw
xor
xor
add
push
mov
stc
iret
sbbl
in
aad
push
lock
cmpl
adc
outsb
leave
dec
loope
insb
scas
xchg
pop
loope
imul
pop
xchg
inc
dec
jl
mov
adc
xchg
or
xor
pop
dec
mov
mov
push
adc
fisubs
jmp
lods
inc
out
push
push
push
push
or
cmp
jp
add
insl
outsb
dec
and
or
or
jg
dec
cmpsl
loope
adc
add
sbb
push
test
sbb
adc
sbb
rclb
cld
cld
jle
cli
sarb
sti
insb
orl
push
adc
pop
or
add
lock
push
movsb
jb
push
sub
hlt
addr16
insb
cli
inc
scas
jle
xchg
inc
push
incb
fdivrl
sub
and
mov
jp
shrl
sbb
fsubrl
or
ficoms
lea
push
or
add
adc
jo
push
cmp
add
cmp
insl
push
call
sbb
adc
cs
mov
rorb
cs
push
add
outsl
and
mov
fcomip
jmp
mov
imul
adc
pop
lock
rolb
call
rorb
divb
mov
add
jb
nop
sbb
insb
std
add
icebp
jbe
mov
xchg
pop
and
jne
fsubr
incl
ljmp
sti
mov
call
in
add
jmp
jbe
pop
je
jb
rcll
pop
sub
mov
mov
or
push
shlb
stos
jge
inc
lea
adc
cmovns
push
psubsb
add
xor
daa
dec
lret
andb
dec
clc
or
test
cli
pop
scas
push
push
mov
xchg
xlat
xchg
push
mov
decl
jbe
add
repnz
mov
aad
add
sbb
in
jne
mov
push
lea
push
cmp
mov
push
push
cmp
xor
stos
cld
ret
pop
call
jo
test
out
jbe
mov
jb
mov
push
mov
ret
icebp
rcll
ds
xchg
fidivrs
sub
mov
fistps
sbb
lea
jns
pop
or
sub
xor
mov
sub
mov
push
je
das
push
jp
push
mov
ds
popw
inc
pusha
xor
or
adc
js
shr
or
lea
add
and
je
jne
loope,pn
fldcw
lea
loopne
mov
xchg
pop
pop
or
das
js
cmp
je
movzwl
cltd
cmp
je
pop
adc
aam
push
dec
std
mull
mov
ss
add
lods
inc
mov
shlb
sti
or
add
inc
icebp
shr
fisttps
sti
add
mov
leave
adc
and
cli
ja
add
clc
jg
outsl
push
add
adc
pop
data16
jl
add
testl
scas
push
mov
pop
xor
push
adc
mov
mov
xor
lcall
xor
mov
mov
data16
push
je
push
add
and
addl
cs
adc
sbbb
hlt
adc
xor
add
ret
js
or
or
rorb
adcl
cld
lds
jo
inc
rclb
lsl
imulb
ret
jle
in
xor
jmp
cmp
je
scas
pop
pusha
pusha
testl
add
cmp
rcrl
paddd
adc
into
fwait
std
mov
call
push
mov
nop
out
or
scas
iret
nop
imul
outsl
in
mov
enterw
add
inc
sbb
outsl
pushf
push
cmp
call
and
cmpsb
je
add
sbb
fstpt
sub
inc
jecxz
inc
into
call
cmc
std
mov
js
push
lahf
pusha
scas
sub
pop
mov
push
rcll
ss
mov
popf
fldl
sub
mov
sahf
push
pop
enter
adc
arpl
sbb
mov
outsl
ds
lods
sub
enter
mov
push
punpckhbw
push
pushf
testb
inc
adc
adc
mov
inc
js
adc
fs
out
adc
jl
dec
pushf
sub
shll
je
out
imul
mov
sbb
or
mov
std
inc
inc
pop
dec
and
jne
mov
cli
es
cmp
movb
imul
js
jo
outsb
cmovs
stos
push
inc
jnp
dec
scas
invd
lods
scas
xchg
test
movsl
sahf
js
adcb
fidivs
mov
popf
das
fsubrl
inc
nop
pop
dec
std
mov
xor
popl
xor
js
or
call
mov
push
out
dec
cmp
je
lea
lods
dec
or
dec
jle
lock
or
shrb
dec
or
xor
adc
sub
mov
mov
cld
out
sbb
cmp
mov
aad
mov
push
mov
dec
mov
loopne
add
cld
jg
push
jne
push
add
pop
mov
inc
inc
dec
mov
nop
dec
dec
inc
jp
pop
jg
add
clc
jmp
jbe
xor
and
dec
lea
xchg
cli
or
push
and
orb
insl
xchg
mov
cmp
mov
dec
cmpsb
adc
dec
mov
inc
enter
mov
dec
push
or
fidivrl
sub
jb
clc
or
or
push
les
lret
jne
testl
mov
or
subb
inc
ljmp
gs
xchg
jne
inc
push
mov
neg
in
and
lea
push
ljmp
faddl
pop
and
pop
ret
xchg
or
js
xchg
xchg
jl
mov
cmpsb
xchg
jbe
leave
rolb
xchg
dec
pop
insl
sbb
js
mov
push
in
inc
and
lock
sahf
mov
mov
dec
cmp
or
adc
mov
js
push
add
fcoml
push
lds
pop
aam
cmpsb
les
cmovns
push
cmp
xchg
cmc
fs
int3
cs
les
adc
sub
fs
lcall
neg
push
sbb
dec
lods
test
xchg
push
push
rolb
mov
lret
fiadds
push
and
adc
push
pop
push
add
fidivs
push
mov
inc
popf
add
jmp
push
sti
push
push
hlt
cmp
add
xor
xor
inc
jmp
testl
push
testb
je
pop
shlb
movsb
cli
jle
add
inc
mov
add
cmp
push
adc
add
pop
pop
orl
or
and
data16
cwtl
jb
sbb
add
pop
xchg
outsl
test
stos
mov
mov
or
or
rol
pop
les
dec
in
or
inc
aad
clc
pop
lods
loopne
pop
clc
mov
inc
jne
add
or
add
call
test
dec
mov
aam
pop
scas
les
into
inc
jne
inc
jo
push
addb
out
push
cmc
push
add
ret
negb
cmpb
in
pop
mov
push
add
add
ficoml
push
adc
lock
dec
adc
mov
jno
ret
addb
lds
or
or
movsl
cmpb
dec
ret
mov
cmp
and
cmp
int3
lcall
adc
push
cmp
lea
ret
and
add
push
push
addb
sub
or
mov
jne
mov
cmp
orb
addr16
into
subl
faddl
adc
add
mov
adc
mov
cli
ds
ja
les
shlb
pushl
rolb
lock
jne
outsl
repnz
pop
jne
mov
int3
or
ds
cmc
loopne
or
out
push
pop
jne,pn
cmpsb
pop
mov
mov
data16
mov
js
add
cmp
test
lods
xchg
shrb
xor
push
mov
add
aam
pop
and
rcrb
aaa
loop
out
pop
adc
rol
adc
jmp
mov
in
out
mov
stos
test
div
je
call
aas
jg
mov
xchg
push
in
es
jb
aam
stos
add
xor
mov
test
add
es
or
cmpsb
outsb
push
fcoml
sub
mov
add
fcoms
push
adc
movsb
rolb
xchg
xchg
fs
add
dec
inc
call
pop
xchg
mov
sub
mov
adc
adc
sbb
dec
shr
pushl
mov
push
mov
dec
nop
clc
push
jno
test
out
dec
in
rolb
mov
mov
mov
dec
push
roll
es
and
insl
out
pop
out
cmp
mov
ljmp
ss
push
cli
push
adc
movups
adc
push
or
xchg
ret
ret
loopne
pop
fs
adc
in
fildl
lea
push
stos
xor
mov
lock
hlt
pop
push
push
adc
or
push
ljmp
loop
mov
mov
cltd
cwtl
push
sub
or
lahf
lcall
hlt
bound
test
pop
or
imul
inc
cmpsb
and
jmp
dec
push
lock
mov
add
addl
pop
sti
call
push
cmp
notl
dec
flds
pusha
dec
adc
out
push
mov
ret
add
in
or
push
push
je
dec
test
pop
lods
cmp
std
in
fnstsw
loop
and
or
idiv
mov
pusha
gs
loopne
or
loopne
out
je
lea
mov
call
jo
adc
or
scas
lock
pusha
or
add
loopne
pop
pusha
arpl
sbb
in
xchg
sbb
pusha
pusha
inc
loop
xchg
movsb
pusha
nop
add
add
and
xor
mov
or
and
clc
incl
jno
mov
loopne
call
add
lock
pusha
popa
mov
mov
lahf
push
mov
outsb
fstps
pop
rcrb
push
pusha
or
add
gs
adc
mov
jo
push
lock
daa
xor
cmp
jg
fwait
les
pusha
test
pusha
adc
shl
ja
pusha
and
addr16
ja
xor
xorl
push
idivb
mov
mov
test
jbe
add
add
push
std
jg
push
or
inc
push
cmp
mov
sarl
lret
ljmp
cld
testb
pop
push
or
sub
pushf
out
fistps
sub
mov
das
push
add
leave
loopne
test
je
addl
sbbb
dec
lods
fisttps
jb
and
dec
or
push
loopne
call
bound
pop
loopne
xchg
mov
dec
mov
movsb
js
mov
sbb
pusha
jle
cwtl
sbb
mov
aas
push
mov
por
jl
clc
nop
add
lock
outsl
or
sbbb
and
pusha
and
xlat
orb
xor
mov
push
nop
push
popa
xor
nop
outsb
sti
loopne
pop
dec
clc
decl
cmp
subb
andb
add
sbb
add
icebp
call
rorb
pusha
lret
push
jp
jle
add
mov
and
sub
mov
dec
add
cld
enter
pop
inc
iret
jge
je
or
mov
dec
mov
add
incl
jge
adc
mov
icebp
add
loopne
lock
lahf
cmpsb
clc
adc
popa
outsb
aas
cmc
int
xchg
shlb
sbb
dec
push
add
scas
mov
loop
popa
jp
enter
pop
or
mov
rclb
dec
mov
push
jb
out
adc
ss
cmp
cmpl
incl
fs
jne
add
push
jmp
cmp
add
or
jp
add
and
popa
push
mov
cmp
pop
mov
sub
xchg
and
dec
lea
inc
sarb
aas
movl
jge
cld
jne
arpl
test
add
jl
fistl
mov
mov
and
cld
cld
int
cmp
jl
cmp
leave
popa
pop
pop
cld
stos
push
xchg
inc
push
nop
push
pop
cld
pop
mov
xchg
mov
push
decl
push
je
jb
inc
fdivl
or
cmpl
adc
mov
stos
call
mov
cmp
mov
inc
test
mov
test
xor
xchg
pushf
mov
push
je
outsb
adc
add
mov
add
pop
inc
jge
mov
and
and
mov
decl
mov
mov
or
push
xor
pushw
inc
adc
hlt
and
push
push
jp
loopne
inc
jle
or
mov
call
or
fs
sub
je
fdivr
ljmp
inc
insb
movsl
lock
push
lock
xor
in
sub
dec
lea
and
shlb
push
push
out
sub
jno
pop
mov
leave
test
or
bound
test
pusha
ret
or
adc
cmp
push
adc
lods
or
pop
sbbb
scas
call
xor
imul
mov
jmp
je
and
cmp
or
stos
es
outsb
test
jl
ret
test
incl
jno
add
or
add
push
das
pop
cld
pop
cli
add
or
mov
adc
jl
mov
xchg
cld
push
imul
xor
cmp
das
test
test
inc
or
pop
mov
je
popl
jno
inc
mov
imul
lock
jg
shll
jle
stos
add
or
push
std
decl
mov
repz
push
mov
pop
pop
ljmp
cmp
push
sbb
xor
jo
mov
xchg
test
sub
jg
mov
sbb
jge
ret
xor
lods
jno
popf
or
aas
lret
mov
adc
std
lock
mov
idiv
lcall
jl
push
test
push
lea
jo
or
jmp
lea
add
jb
add
xchg
jbe
adc
inc
jl
adcb
cmp
mov
fdiv
mov
adc
push
orb
fiaddl
ret
out
xchg
clc
stos
add
sub
data16
mov
push
mov
add
adc
jle
jl
xchg
pop
or
add
jmp
cmp
addl
cld
mov
mov
pop
imull
pop
pusha
adc
pop
xchg
adc
pop
mov
pop
jo
mov
pop
js
mov
cmpsb
out
lcall
xchg
mov
stos
mov
lret
dec
iret
xor
xchg
add
push
xchg
xor
mov
dec
call
subb
jl
cld
inc
mov
call
shlb
lods
call
loope
or
pop
lock
mov
jle
bound
add
mov
inc
or
mov
xchg
jmp
lock
sbb
orl
lcall
fwait
mov
or
stc
jb
or
movsb
pusha
adc
arpl
and
mov
cmp
and
jg
mov
lret
or
adc
jle
pop
pop
dec
daa
mov
incl
add
sbb
popa
jl
xor
lock
add
jo
fbstp
push
add
push
sbb
jno
cmpb
es
add
sbb
adc
cmp
call
xor
cmpsb
mov
cmp
adc
mov
cmp
jb
jbe
jg
jg
mov
add
push
lock
xor
sub
mov
and
sbb
inc
sti
decl
adc
js
pop
pushf
lock
mov
jecxz
pop
adc
lock
sbb
push
push
push
push
jae
pop
pop
lock
mov
adc
adc
es
nop
dec
and
adc
je
jo
sbb
loopne
push
out
out
xor
adcb
cmpsb
popa
scas
cs
call
inc
jg
xor
cwtl
leave
xor
mov
dec
and
js
je
fisttps
mov
mov
loopne
lock
jno
mov
or
rcrb
inc
call
sub
and
mov
sbb
mov
hlt
jg
adc
clc
xor
inc
adc
insl
pop
add
sbb
mov
mov
cmp
pushl
push
pop
lock
xchg
xor
xor
loope
add
cmp
mov
add
jno
sbb
add
fwait
add
rclb
jl
hlt
jbe
clc
mov
sbb
mov
xor
bound
push
and
ss
mov
mov
dec
and
stos
addb
mov
pop
es
cmp
out
mov
mov
leave
ret
or
in
jb
mov
add
add
inc
mov
mov
mov
pop
or
js
sub
dec
call
push
call
adc
push
mov
mov
mov
or
dec
fsubs
call
js
insb
lret
icebp
aas
sub
push
adcb
dec
pop
iret
mov
add
jo
call
push
lock
sub
jo
add
mov
mov
push
pop
push
cltd
pop
cmpsl
out
icebp
inc
outsb
or
call
iret
stc
push
hlt
mov
push
incl
push
mov
jae
test
in
pop
jo
hlt
mov
jo
sahf
pop
or
adc
mov
add
xor
loope
add
pop
pop
lods
jb
lock
daa
push
sbb
and
cld
mov
test
mov
aas
cwtl
push
mov
jo
je
lock
pshufw
and
push
pop
sub
or
xor
and
decl
add
lock
fidivs
add
xor
jg
aaa
stos
dec
or
je
xor
jmp
mov
push
inc
fistpl
out
lock
jb
pop
jle
dec
sub
mov
push
pop
addr16
ja
jle
adc
cld
pop
pop
pop
jae
push
xchg
and
jne
mov
inc
mov
dec
mov
xor
sub
mov
pop
push
pop
mov
ss
sub
loop
rorb
jno
mov
or
cmp
je
cmp
and
test
dec
push
add
in
jmp
test
add
pop
lods
or
xor
shlb
cmpb
jl
mov
ja
je
or
scas
test
inc
jb
outsl
pop
add
outsb
leave
movsb
out
mov
inc
subb
pop
aaa
mov
dec
or
mov
hlt
mov
je
or
ljmp
das
mov
inc
lea
pusha
adc
lds
push
pop
sub
je
cwtl
pop
mov
test
testl
add
les
cs
sbb
adc
adcl
in
add
clc
cmp
jne
sub
inc
loopne
mov
jle
fsub
aaa
cs
add
pop
or
xor
adc
pop
add
mov
add
fwait
rol
jbe
or
push
adc
jg
lock
std
add
and
xor
pop
mov
neg
stc
out
xor
addl
xor
push
adc
pop
cmp
cli
out
outsl
mov
in
xor
andl
sub
call
fcoml
add
subb
test
add
xchg
add
push
lahf
inc
add
call
xchg
enter
movsl
adc
xchg
shl
cmp
mov
xor
xlat
add
rorl
inc
mov
testl
or
pop
fsub
ss
ficompl
cmpl
push
pushl
add
frstor
cmpsl
cmc
and
and
faddl
call
data16
add
cmc
repnz
fs
adc
cmp
pop
jmp
cmp
lds
sub
loop
jnp
ret
mov
aad
fldl
sub
xor
inc
dec
xchg
shll
jae
sarl
inc
stc
iret
inc
jl
jo
rol
outsb
rolb
mov
pusha
xchg
mov
pop
xor
mov
pop
bound
arpl
dec
std
test
push
push
adc
fsqrt
sbb
dec
inc
orl
in
clc
sub
shrb
mov
icebp
push
dec
lcall
test
jnp
fs
call
test
lea
test
pop
push
inc
or
bound
cs
sbb
decl
lock
xor
ret
add
nop
jp
adc
mov
or
scas
add
lcall
jmp
jnp
xor
lret
rol
pushf
sarl
adc
shrb
clc
push
add
out
rcrl
out
int
sub
int
pop
call
aam
or
and
adc
fcmovbe
cs
push
push
mov
sahf
mov
fistl
ret
enter
or
adc
imul
andl
mov
movsl
adc
mov
shll
pop
jmp
rolb
add
push
push
iret
mov
sbb
decl
sbb
or
pop
cmp
sbb
sbb
negb
cmp
std
cmpsb
movb
dec
sbb
jecxz
js
push
cmp
inc
sbb
fwait
cwtl
or
xor
stos
jo
mov
out
mov
mov
mov
shrl
arpl
flds
inc
and
jbe
icebp
rolb
rorb
fwait
jl
add
push
ljmp
jl
add
fbld
mov
adc
adc
cmpsb
pop
lret
xchg
in
or
movsb
ret
insb
push
lea
outsb
xchg
adc
int3
fistl
int3
scas
incl
adc
aaa
lods
shl
add
jp
lea
loop
cmp
add
mov
jbe
subl
inc
rcl
add
inc
jae
pop
push
lea
rol
sbb
add
sbb
mov
pushf
add
mov
and
shlb
fidivs
cmp
mov
xor
and
loopne
adc
scas
clc
push
jmp
test
fwait
dec
add
fwait
mov
aaa
push
lea
add
jb
arpl
pop
cmpl
loopne
cmp
imul
insl
pusha
lea
pop
test
inc
and
mov
adc
jbe,pn
xchg
xor
push
pop
push
fdivs
js
mov
push
sti
loopne
loopne
adc
cmp
mov
add
mov
sbb
outsl
adc
lock
or
fildll
push
push
pop
push
dec
mov
mov
or
jb
xor
and
ja
pop
jb
movsb
negb
insb
jecxz
decl
cld
lcall
xchg
insb
sbb
popf
loope
or
ds
mov
mov
mov
push
push
dec
jno
sub
imul
add
nop
adc
or
xchg
sub
push
test
add
dec
or
stc
loopne
js
es
sahf
pushl
cmp
add
cmp
out
push
daa
jl
lock
lea
bound
incl
loopne
orl
ficoml
pusha
insb
add
sub
inc
hlt
es
xor
out
xor
pop
mov
jbe
cmpsb
push
jge
movsl
push
cmp
push
in
push
or
andl
mov
add
popa
pcmpeqw
clc
dec
or
movsl
add
adcl
lods
aas
in
cld
or
sarb
mov
aas
and
decl
ret
pop
xchg
jl
adc
and
push
sub
inc
sub
adc
scas
xchg
sub
xor
andb
imul
and
push
push
mov
mov
sbb
shl
sarb
mov
loopne
call
jb
mulb
add
in
addb
popa
enter
sub
adc
and
push
push
jnp
and
out
add
jo
adc
test
aaa
loopne
add
pop
loopne
aaa
shrl
adc
add
decl
jecxz
jge
mov
push
cmc
mov
jecxz
push
pushw
test
in
mov
enter
sbb
dec
inc
repnz
adc
add
or
and
enter
hlt
push
pop
lcall
loopne
push
lcall
adc
comiss
adc
call
mov
ret
outsb
ret
test
mov
test
inc
adc
dec
push
inc
push
adc
decl
jb
mov
or
loopw
cmp
cltd
popa
cld
mov
cld
bound
or
push
frstor
push
addb
cmp
je
stos
adc
mov
rolb
fsub
cwtl
sbb
dec
in
pop
cmp
add
cwtl
loopne
je
sub
dec
mov
mov
inc
hlt
jge
push
stos
mov
pusha
push
cwtl
pushl
adc
add
cld
and
gs
cld
or
filds
clc
dec
mov
pusha
pusha
jnp
push
data16
cmp
sub
xor
sub
call
fnstenv
sbb
pop
hlt
jmp
xchg
or
pop
xchg
ret
andb
sbb
xor
push
sbb
mov
es
lcall
shr
mov
add
hlt
dec
jne
jbe
inc
hlt
mov
lock
jb
jmp
jo
jmp
mov
push
jo
inc
ljmp
mov
call
jl
adc
cmp
std
jno
dec
cld
call
mov
push
rclb
mov
hlt
sub
push
xor
inc
pop
jo
adc
adc
bnd
mov
add
mov
pop
add
es
add
cs
xchg
add
je,pt
stos
push
out
mov
mov
sub
mov
sub
rcr
xor
fadd
and
out
or
push
adc
inc
jo
mov
adc
xor
add
mov
adc
xor
movsl
jbe
sbb
dec
add
icebp
push
xchg
lea
add
jl
fisttps
jne
mov
or
cmp
mov
loopew
stc
call
les
xchg
out
bswap
add
or
push
jns
pop
xor
jno
mov
insb
in
mov
pop
adc
adc
pop
outsb
and
xor
mov
mov
orl
add
mov
outsl
mov
addl
adc
pop
mov
insb
fwait
or
inc
add
jne
pop
xor
lcall
je
mov
fadd
add
jo
add
mov
add
je
pop
shr
fs
mov
push
mov
and
adc
add
push
push
fs
add
adc
mov
std
std
lods
push
xchg
pshufw
arpl
xchg
cmpb
mov
push
stos
incb
test
scas
xchg
push
jb
pop
cmp
lcall
data16
and
add
mov
or
jl
outsl
adc
mov
call
adc
xor
aaa
push
and
sbb
xor
call
inc
sbb
movb
adc
test
mov
addl
mov
jle
sub
jl
add
inc
jecxz
dec
add
jl
add
cmp
ret
add
scas
es
and
insl
je
test
roll
pop
jno
dec
add
inc
lock
xor
push
call
shl
sub
lods
jmp
jo
cmp
lea
shlb
and
jo
scas
adc
add
mov
and
mov
xor
jo
loopne
orb
pop
jo
sbb
add
out
jo
and
jo
cmp
ret
add
popa
pushl
mov
mov
aam
cmc
inc
ljmp
sub
scas
test
ja
jo
jmp
cmp
push
or
sbb
or
sahf
mov
subb
jns
sti
or
jle
mov
jp
adc
and
push
clc
ja
mov
add
orb
jmp
adc
push
jno
and
movsb
jmp
mov
inc
inc
jne
xor
mov
stos
aaa
cmp
sub
sbb
add
fsub
shlb
iret
lock
adc
mov
repnz
js
sbb
mov
test
dec
or
push
data16
adc
sbb
mov
or
jnp
les
push
loopne
inc
pop
mov
adc
outsb
dec
push
aam
hlt
cltd
cmp
icebp
push
pusha
mov
ret
dec
sub
scas
mov
mov
add
mov
or
mov
cld
test
loop
loopne
cld
pop
mov
mov
push
mov
js
jne
or
lock
push
in
out
push
adc
arpl
and
mov
aam
in
pop
add
pop
clc
pushl
mov
adc
inc
push
call
xorl
pop
sub
lock
negb
push
outsb
ret
ret
mov
xor
jo
cmp
jno
inc
push
dec
mov
mov
sti
or
mov
call
and
or
adc
jo
decl
jg
add
add
and
xor
cmpsb
inc
jecxz
cli
call
jl
lea
rolb
add
mov
sub
pop
and
dec
test
fwait
add
and
cmp
je
push
pop
pop
and
sub
fadds
in
xchg
lock
je
mov
dec
jle
lods
shl
bound
pop
xchg
inc
je
les
sbbb
adc
xchg
add
rcrb
sbb
jmp
cmpl
jo
add
cmp
test
fcomip
fwait
in
cmc
cmp
je
idivb
clc
je
mov
mov
jmp
mov
clc
jmp
rolb
mov
push
lock
call
dec
inc
dec
mov
lea
mov
add
push
orb
enter
xor
cwtl
mov
out
xorl
adc
fdiv
popa
adc
daa
test
shlb
sub
add
inc
insb
out
sub
call
mov
and
inc
or
out
mov
or
in
insb
je
push
lods
push
push
icebp
push
or
lds
cld
adc
nop
push
icebp
pop
inc
and
cmpsb
jo
test
mov
test
pop
add
dec
mov
mov
subb
jmp
lock
cwtl
mov
or
xchg
clc
and
add
mov
lock
jo
jge
adc
push
xchg
movsb
stos
xchg
ss
or
add
cld
and
sbb
cmp
jne
test
scas
cld
pop
loope
or
je
stos
cmp
or
loop
push
sar
cld
xchg
xor
xor
clc
xchg
push
test
jno
mov
xor
xchg
add
and
xchg
ljmp
xor
out
sbb
mov
push
roll
xchg
or
add
pushl
insb
lock
incb
xor
call
sbb
add
add
mov
std
ja
sbb
push
nop
cmp
and
icebp
xchg
add
dec
ret
cmp
cwtl
insl
sbb
sti
mov
mov
inc
xor
faddl
pushl
shll
xchg
push
mov
jae
mov
jns
mov
jp
mov
shrb
cld
jg
jne
pop
fimull
add
and
scas
insl
xor
mov
mov
faddl
mov
mov
or
and
call
test
ljmp
sbb
out
insl
and
sbb
aaa
adc
int3
idivb
fimuls
mov
mov
mov
idivl
lock
and
push
mov
addb
outsb
loopne
push
jmp
adc
sar
pusha
inc
mov
inc
call
imul
cmp
cmp
bound
add
xchg
dec
push
push
enter
call
jg
call
xchg
add
aas
imul
je
call
mov
in
inc
sub
mov
subl
je
or
sbb
scas
and
dec
sub
outsb
add
push
push
fimuls
rol
pop
add
ret
or
pop
push
rorb
and
sbb
xor
cs
push
aad
clc
je
pop
cld
imul
ds
inc
adc
mov
inc
fsub
je
sbb
inc
out
insb
or
in
dec
fdivl
mov
pushf
mov
test
adc
mov
adc
mov
push
dec
cmp
lahf
aam
add
xor
adc
bound
ret
test
mov
mov
adc
scas
cmp
cmp
jb
mov
andb
jmp
lods
fidivrs
or
xchg
dec
adc
dec
add
lcall
add
cltd
hlt
fsubrl
pop
cltd
cmp
jae
lock
clc
mov
cld
repnz
imulb
mov
nop
add
xchg
test
adc
jmp
notl
call
clc
pop
sub
push
in
add
or
or
cmc
xor
enter
add
aam
adc
pop
mov
cmp
push
or
sbb
sahf
and
or
or
idiv
mov
cmpl
push
mov
inc
fbstp
jbe
adc
xlat
mov
cmpsb
xor
stos
push
or
and
sti
int
cmpsb
add
cld
sarl
push
push
push
jbe
cmp
ja
outsl
clc
pop
sub
sub
je
add
jbe
mov
inc
in
lds
clc
add
jmp
xchg
dec
jne
pop
pop
arpl
test
or
out
mov
in
jbe
cmc
ljmp
aam
cmp
jl
push
mov
push
push
xor
push
shrl
sbbl
clc
dec
pop
push
push
pop
sbb
fmuls
dec
neg
mov
push
in
cmc
inc
loop
loopne
ret
in
push
dec
loope
jp
pop
int
xchg
push
fucomip
test
cs
pop
in
mov
push
dec
xor
les
pop
xor
imul
shlb
mov
adc
push
bound
out
pusha
cmp
pop
popa
popf
push
in
cmp
adc
aas
cli
sub
mov
mov
adc
movsb
add
mov
ss
push
xchg
or
call
jbe
imul
mov
add
adc
out
add
or
cmp
daa
xchg
and
lock
xor
dec
push
pushf
push
cmp
sbbb
add
sbbl
mov
inc
rorb
aas
dec
add
test
js
sbb
sti
push
push
mov
aaa
and
fcoms
xchg
pop
pushf
inc
or
push
addl
inc
mov
mov
or
fdivs
jl
es
into
into
inc
fsub
loopne
loopne
sbb
mov
adc
mov
dec
inc
inc
sarl
push
fiadds
imull
add
mov
call
add
and
ss
in
in
mov
or
jmp
inc
lea
xor
xor
or
push
push
pop
adc
xlat
inc
loope
repz
outsl
shll
adc
mov
mov
mov
shlb
cmp
xchg
outsb
ds
sub
lea
lods
mov
pop
or
sti
sub
inc
cld
adc
fidivs
jnp
push
call
sub
sbb
out
mov
pop
sti
aas
push
cmovs
insb
in
faddl
mov
jbe
jl
pusha
shlb
push
sbb
and
stos
hlt
and
xor
jle
mov
mov
xchg
je
shrb
inc
mov
add
insl
daa
adc
xchg
push
mov
nop
adc
pop
sarl
je
mov
xor
mov
lock
push
xor
fiadds
add
test
xchg
hlt
jmp
sbbw
add
jns
sub
inc
hlt
and
ljmp
sbb
and
ret
push
fimull
pop
arpl
in
add
xchg
call
jmp
inc
mov
aam
loope
ss
push
pop
inc
push
push
inc
xor
ss
or
addl
pusha
test
loope
bound
mov
pop
rorl
int3
notl
into
adc
cmp
jg
in
fs
movsl
mov
lods
and
push
or
cmpsl
sub
inc
inc
das
insl
pop
jecxz
and
dec
mov
sub
and
addl
sub
es
push
mov
and
hlt
lods
dec
inc
fmuls
or
or
outsb
movsb
push
loopne
cmpb
loope
addr16
or
xchg
gs
mov
into
lea
aas
and
pop
xorb
or
pop
sub
sahf
xor
and
je
dec
xchg
call
subb
stc
jne
add
pop
rolb
xchg
xchg
mov
push
cmp
cmp
push
aam
test
xchg
test
enter
ja
enter
push
call
or
inc
adc
repnz
loop
xor
jbe
mov
adc
pop
movsb
inc
cmp
out
outsb
cwtl
inc
adc
sahf
cmp
scas
push
dec
out
xor
cmp
jbe
push
push
sti
mov
js
insb
push
inc
mov
mov
pop
fisubrs
jne
pop
jg
push
mov
inc
jmp
mov
jbe
or
inc
mov
pop
mov
je
inc
dec
sub
daa
loopne
lret
insb
pop
fisubl
inc
test
and
lea
or
add
scas
adc
ljmp
add
sbb
push
push
pop
add
push
inc
incl
mov
or
push
add
mov
mov
int
decl
out
sub
jl
inc
jb
push
pop
je
push
clc
add
adc
or
cmp
jb
inc
ret
jbe
mov
loop
mov
je
addb
data16
leave
mov
jmp
push
lret
jg
add
xor
jae
mov
inc
xchg
sbb
fs
notb
mov
cmpsb
mov
lahf
in
scas
movzwl
push
mov
push
adc
fsubrl
scas
enter
out
shl
mov
dec
push
mov
push
dec
sti
and
repnz
subb
cmp
vmread
ljmp
andl
jl
inc
xchg
dec
fisubl
mov
test
test
repnz
push
mov
das
sbb
testl
subb
cmp
sbb
or
cmp
jne
aam
jmp
jne
mov
mov
imul
sub
add
pop
popa
mov
in
inc
mov
data16
nop
mov
ja
push
inc
int
mulb
mov
mov
jns,pn
call
xor
iret
shlb
mov
pop
stos
call
push
inc
cld
cmp
xor
fsubrl
mov
nop
cmp
pop
into
bound
fmuls
ja
cmp
jg
popa
xor
lock
inc
lods
ljmp
hlt
adc
cmp
incl
ffreep
pop
adc
rorb
mov
ss
jl
dec
fdivr
outsb
dec
mov
dec
call
add
cmpl
jle
cld
popf
rorb
cli
cld
inc
jmp
jl
loopne
scas
push
outsb
jbe
xor
adc
scas
push
in
xorl
sub
inc
adc
lock
ss
flds
mov
sbb
cmp
lcall
xor
push
addb
or
add
lock
scas
mov
cmpb
fisubrs
pusha
or
test
add
clc
aas
loope
or
push
jne
lock
rcrb
push
decl
xor
aaa
add
loopne
and
jbe
sarb
cmp
inc
sbb
outsb
push
add
push
aam
and
fcoms
push
push
andl
ja
test
out
sahf
mov
xor
outsl
jnp
les
jl
sahf
add
outsb
or
dec
rolb
sub
pop
es
in
sahf
sub
faddl
out
movsb
pop
cmp
inc
cmp
mov
adc
rcrb
cld
cmc
rorl
mov
dec
sbb
push
rclb
imul
adc
loopne
add
add
nop
dec
popa
push
pusha
notb
or
lea
dec
mov
push
aam
push
es
ljmp
scas
scas
adc
shlb
notl
cs
shrb
pop
sahf
push
test
pop
or
data16
mov
add
call
adc
jne
add
into
call
test
mov
or
sbb
in
loopne
lea
mov
jle
jne
mov
cmpsl
fld
inc
dec
push
pop
aam
cld
incb
and
cmpsb
fcoml
add
sbb
sbb
scas
push
and
gs
add
add
or
jo
pop
mov
fsubrs
inc
fsubs
push
aam
in
ss
mov
adc
es
jae
push
std
jmp
jl
push
add
mov
icebp
pushf
std
inc
scas
mov
mov
ss
ds
lock
sbb
imul
rorb
je
stos
lock
ret
sti
je
repz
pop
ja
push
jle
mov
inc
jmp
or
adc
mov
add
mov
mov
mov
imul
ss
call
pop
jno
scas
idivb
push
aaa
out
std
ja
call
inc
pop
xor
adc
or
inc
in
out
mov
jl
rclb
jns
jmp
jnp
call
cmpsl
int3
mov
or
leave
ret
jl
lods
sub
mov
xor
push
push
popa
xchg
stos
scas
pop
sub
push
jmp
cmpsl
or
test
sub
lret
adc
ss
fimuls
push
pop
shlb
daa
inc
or
data16
jns
fisubrl
pop
pop
mov
in
aam
sahf
pop
lock
xchg
fmuls
cmp
dec
mov
lods
sub
jns
push
fcmovbe
out
cwtl
adcb
icebp
mov
stc
mov
push
hlt
orb
cmp
adc
push
add
jns
into
divb
mov
jne
jl
xchg
call
aam
cli
data16
sbb
pushf
call
fldcw
les
je
jbe
inc
sub
push
nop
stos
in
xor
dec
std
cmpsb
add
addb
sarb
pop
loopne
testl
mov
stos
mov
enter
incb
push
pop
jne
push
lods
enter
dec
aas
lods
lea
cld
dec
enter
addb
push
push
stos
in
hlt
addb
lods
cld
cld
push
daa
adc
xor
jecxz
adc
xchg
push
je
data16
shrb
hlt
sub
insb
fadds
enter
decb
clc
and
mov
cld
cmp
mov
sar
aas
cmp
add
add
shrb
inc
adc
bound
pop
in
mov
roll
popf
inc
shl
scas
add
xchg
sbb
test
inc
and
cmp
adc
push
xchg
jp
cli
int3
nop
push
add
mov
mov
das
or
mov
aaa
push
es
jmp
adc
inc
js
shr
inc
sbb
sub
xor
fsubl
fimull
adc
ret
data16
xor
rorb
and
fdivrs
movsb
push
and
push
insb
sub
jmp
xchg
call
clc
push
adc
jp
adc
mov
dec
loopne
mov
mov
popa
fmull
les
cwtl
stos
ljmp
jp
pop
push
inc
loope
call
push
push
aaa
cld
insl
mov
jne
inc
call
or
add
or
inc
dec
insb
sub
jne
pop
cmp
nop
inc
rolb
rolb
rolb
mov
lcall
das
in
cmp
push
xor
ret
jmp
and
lods
rcll
loopne
scas
jg
ljmp
stc
xchg
pop
inc
sarb
call
test
rolb
pop
add
sbb
xor
or
mov
mov
or
ja
mov
xchg
mov
ss
rorb
cmpb
add
aad
adc
add
push
sub
fmuls
test
mov
sbb
sbb
aam
mov
pop
jge
mov
xchg
scas
das
out
add
adc
cmp
xchg
scas
xchg
stos
lock
scas
mov
and
in
stos
sbb
daa
xchg
xor
sbbb
loope
mov
test
mov
push
cmpsl
sub
ret
lea
in
xchg
adc
pop
push
or
std
call
or
push
cld
je
pop
out
jge
lret
inc
jne
mov
sub
cld
or
lret
in
push
hlt
dec
push
sub
stos
sub
mov
sub
out
mov
xchg
lcall
add
shrl
fwait
in
stos
cld
or
or
adc
in
stos
dec
call
addb
push
shl
lods
pshufw
adc
mov
mov
clc
je
jb
ret
rolb
sbbb
aaa
cld
sbb
dec
rcrb
in
inc
pop
in
das
mov
sbb
inc
loopne
mov
testl
sbb
push
sbb
or
loope
shrb
ljmp
cmp
das
xchg
aad
pop
shlb
sbb
pusha
fs
rorb
inc
xchg
push
mov
adc
push
je
inc
push
push
clc
push
push
gs
out
test
or
insb
inc
inc
mov
adc
and
or
enter
test
add
ret
movsl
jne
shrb
mov
popf
mov
pop
push
fiadds
hlt
dec
enter
xor
push
adc
mov
orl
and
repnz
add
push
popf
cmpsl
push
and
xchg
enter
mov
lods
mov
sub
mov
add
mov
mov
loopne
mov
movl
mov
stos
loope
add
sub
mov
dec
sbb
pop
fcos
ret
aaa
ret
push
adc
in
push
fcoms
jo
push
push
orb
sub
cmpsb
ljmp
out
stos
push
add
in
das
mov
sbb
loope
nop
cmpsl
jmp
sti
adc
aaa
add
hlt
mov
mov
es
or
je
and
mov
pop
jp
dec
sbb
inc
shr
ja
add
push
mov
xor
movb
xchg
xchg
lret
jb
push
pop
gs
mov
scas
cmp
and
xchg
call
rcrl
clc
adc
loope
call
xlat
xchg
lret
and
dec
pop
xor
jae
pop
mov
filds
cmpsb
mov
mov
add
int3
fstpt
pop
jmp
and
out
pop
add
push
mov
loop
data16
and
loop
add
cmc
push
fidivrs
jb,pt
mov
cld
xchg
lods
add
sub
bnd
jne
mov
mov
movsb
lret
jg
call
fwait
int
loopne
out
xor
add
push
iret
int
mov
ja
lret
mov
or
cs
dec
jecxz
je
pop
pop
sub
incl
data16
dec
or
dec
push
add
lea
cmp
neg
scas
popa
or
dec
mov
cmp
enter
add
and
fmulp
push
mov
add
sbb
fsubrl
in
mov
inc
sbb
enter
pop
cs
lahf
pop
lock
sbb
test
cmovbe
or
push
push
adc
addl
push
call
lock
push
aam
xor
add
aam
testl
push
pop
cltd
pop
jae
xchg
adc
push
push
jecxz
cmp
push
jne
lock
data16
and
push
or
push
pop
push
into
mov
jb
xor
mov
roll
jle
ja
adc
jbe,pn
pop
clc
push
movb
or
jmp
movb
sahf
mov
ljmp
stc
add
pop
and
xlat
cmp
ret
enter
test
mov
aam
add
jne
add
mov
fmull
pop
shlb
xor
repz
push
test
aaa
daa
fldl
xchg
pusha
or
icebp
cmp
mov
push
and
je
fwait
jo
rorb
pop
cmp
jb
cmp
lret
mov
jmp
scas
cltd
inc
ror
enter
add
mov
inc
add
je
adc
lsl
mov
add
nop
mov
add
push
mov
ds
idiv
inc
inc
imul
sub
hlt
dec
push
or
mov
dec
add
data16
add
push
outsb
xor
lea
push
pop
ret
js
pop
xchg
pop
mov
fucomi
push
fmull
loopne
ds
jbe
fnstsw
sarw
lock
pop
xchg
out
hlt
and
scas
mov
jl
jmp
or
jb
fdiv
pop
lods
push
lock
call
into
inc
mov
cmp
jmp
cwtl
dec
push
push
mov
sub
pop
outsb
jle
data16
test
imul
or
mov
sub
pop
jbe
jmp
xchg
stos
push
push
push
sub
pop
aam
fisubrs
test
xchg
ljmp
repnz
inc
int3
stos
push
decb
cmpsb
in
enter
mov
xor
push
ffree
jmp
mov
cmp
repz
or
push
xor
cwtl
jle
mov
fisubrs
pusha
iret
pop
es
mov
aaa
mov
or
lea
xor
xor
inc
adc
or
add
xor
mov
or
xor
jmp
shr
sbb
add
sti
xchg
add
or
shr
or
or
xchg
mov
add
rolb
mov
je
cmpsb
lds
cmp
clc
jbe
mov
xchg
and
cmc
push
inc
decb
push
scas
nop
push
mov
sbb
xor
shrb
adc
scas
push
call
das
adc
mov
mov
push
js
mov
popf
lret
push
mov
shrb
dec
das
inc
repz
je
and
outsb
pop
or
call
lea
ja
push
inc
and
inc
and
cltd
pushw
pop
mov
das
push
xchg
shlb
push
push
inc
push
mov
jne
cmp
stos
loope
pop
cld
mov
pop
adc
mov
or
and
push
sahf
or
scas
or
inc
mov
aam
sahf
lret
iret
rcrl
sub
clc
pop
les
cmp
jle
pop
mov
adc
xor
xor
daa
sub
incb
sbbl
or
mov
push
jbe
push
add
jecxz
mov
xor
call
push
xchg
push
outsl
adc
and
out
push
adc
adc
push
call
sub
lret
add
std
adc
sbb
in
sbb
stc
fldlg2
iret
xchg
fwait
dec
push
sbb
icebp
inc
call
es
dec
or
shlb
pushl
shr
hlt
rorl
loop,pt
or
je
insl
roll
clc
or
dec
inc
ss
adcl
mov
sub
mov
adc
lahf
arpl
adc
mov
das
pop
push
push
xchg
and
pushf
sarl
ja
ljmp
popf
fcmovnbe
xor
call
ffreep
mov
dec
enter
pusha
push
outsb
fwait
lock
inc
xor
jb
movups
ret
clc
stos
xor
mov
mov
mov
and
rcrl
imul
std
jle
inc
pop
cs
into
data16
xchg
mov
call
inc
push
in
or
adc
mov
enter
clc
out
adc
mov
mov
cmpsl
cmpsb
loopne
iret
loopne
test
dec
dec
cmpsb
hlt
lret
xor
out
mov
xor
rolb
shrb
into
and
bound
jo
lret
pusha
xor
adc
push
scas
pop
sbbl
daa
hlt
inc
arpl
inc
xchg
or
orb
cltd
mov
push
ss
ret
sub
call
sub
push
outsl
pop
inc
in
pop
test
adc
out
mov
and
loopne,pt
or
cwtl
pushf
cltd
sbb
mov
adc
cltd
and
and
add
cmp
xor
adc
add
add
fcmovnb
inc
mov
out
lea
push
mov
jmp
sbb
mov
inc
cmpsb
xchg
inc
test
push
xor
call
outsl
inc
in
push
call
and
lahf
ret
adc
push
push
aaa
push
les
mov
adc
ja
jo
loope
ret
cmpsl
push
push
cs
xor
shlb
and
rorb
mov
push
add
loopne
mov
push
push
mulb
sarl
ret
cld
pop
in
lret
stos
adc
push
clc
inc
adc
or
dec
xchg
push
jp
add
xchg
shll
cmp
mov
rclb
push
sbb
adc
mov
loop
mov
imul
es
lock
and
cmpw
dec
cltd
rcr
data16
jbe
lcall
scas
jne
xchg
fcoms
sbb
cli
push
adc
push
pusha
xor
jne
bound
sarl
aam
out
divb
lea
and
mulb
in
pusha
mov
testb
sub
nop
aam
sub
or
jmp
pop
add
pop
push
cwtl
daa
xor
sti
sar
add
xor
out
mov
add
aas
mov
mov
mov
test
cld
jp
add
xor
js
sti
pusha
push
or
mov
shll
push
out
cli
out
or
mov
mov
sub
mov
fcomps
pop
sub
fucom
lock
mov
sbb
int3
cmp
jno
leave
jb
cmpsb
jmp
or
mov
sbb
jae
sub
xor
add
insb
aas
xor
add
inc
push
or
mov
push
ret
repz
sub
mov
decl
cli
or
adc
or
jp
sbb
cmpsb
repz
inc
add
inc
fdivs
fs
decl
mov
and
jg
add
xor
xor
add
cmp
les
loope
cmpl
int
jmp
int3
leave
and
movzbl
or
mov
insb
jle
push
loop
leave
inc
int
jnp
cli
or
lock
mov
ds
or
fcomi
add
hlt
cli
dec
pcmpgtb
fildl
cmp
xor
data16
mov
pop
add
hlt
lock
dec
rcrb
or
js
into
incl
mov
sbb
out
push
cwtl
jp
clc
clc
pop
xchg
add
cli
sub
mov
test
hlt
in
push
push
xor
adc
insb
dec
pop
jo
or
pop
lret
jecxz
jno
loope
sbb
clc
xchg
inc
adcl
adc
out
push
and
jmp
sub
aad
cs
xchg
mov
aaa
ljmp
outsb
adc
jmp
jae
testl
lret
pop
add
or
iret
rcl
push
sbb
cmpb
fsubs
sbb
cli
push
mov
cmp
aas
push
loop
jne
push
fdiv
inc
lock
jbe
dec
jge
test
cmp
mov
dec
imul
adc
mull
dec
inc
mov
xchg
enter
loop
sub
test
mov
mov
and
add
cwtl
call
rorl
pushf
xor
add
sbb
inc
sbbb
arpl
into
jmp
rcll
roll
cltd
cld
sbb
dec
clc
ds
lea
mov
sbbl
jns
jne
aas
mov
pop
cmpsl
popa
mov
push
loope
xchg
mov
mov
data16
test
rclb
mov
shrb
mov
ds
pop
and
or
mov
cld
shl
es
and
or
mov
mov
incl
pop
or
jne
mov
push
jmp
pop
movsl
data16
dec
dec
jb
jmp
scas
je
dec
pop
jnp
push
loope
je
and
hlt
into
sahf
out
jp
xchg
push
mov
jmp
add
into
or
out
jbe
pop
sub
jnp
cmpsb
or
push
pop
add
push
xor
ficoml
loope
jbe
int3
adc
sbb
xchg
sbb
fsqrt
data16
and
mov
jae
lahf
adc
icebp
mov
mov
mov
dec
sub
push
mov
dec
push
push
idivb
sti
lret
or
jp
mov
clc
or
jg
mov
call
rolb
pushl
mov
je
xlat
paddd
mov
pop
push
call
pop
pop
idivl
imul
in
call
fldt
pop
jae
out
cmc
test
scas
je
mov
and
push
cmp
add
pop
adc
cmp
mov
inc
mov
xor
loop
pop
lods
inc
adc
rcl
xlat
rclb
push
xor
xorl
mov
inc
bnd
or
jae
push
cmpsl
xchg
push
addb
in
push
je
inc
divl
addl
je
jl
or
mov
cmpb
jne
xor
add
outsb
inc
xor
push
fcomps
jmp
push
jl
or
adc
pusha
fwait
in
or
cmp
fsubs
sbbl
pushf
adc
dec
or
popa
test
pop
xchg
cmp
inc
adc
inc
dec
mov
rcrb
adc
loopne
add
std
sub
insb
lahf
jg
daa
aas
cmpl
test
daa
and
cmpsl
fnstcw
sub
push
add
xor
sub
push
repz
ret
sbb
jbe
xor
lods
add
stos
pop
cld
mov
xchg
add
push
test
pop
jne
pop
jle
je
add
or
or
cmp
js
pop
fistpl
mov
inc
inc
inc
jnp
pop
das
sub
clc
cmp
je
out
in
sub
jg
mov
call
stos
add
cwtl
stos
pop
push
dec
pop
push
insb
jmp
adc
xor
or
inc
push
push
pop
aam
test
mov
push
enter
cmpb
hlt
mov
xor
mov
lea
mov
inc
mov
xchg
or
popa
mov
xor
cmp
add
nop
subb
fists
inc
call
or
jnp
ss
or
and
or
cs
mov
mov
bound
cltd
push
mov
scas
jle
shlb
push
pushl
jmp
mov
lock
ljmp
ficomps
lock
push
add
aam
add
push
sub
or
call
inc
add
stos
test
shlb
mov
xchg
mov
cs
fcomps
push
mov
cmc
cs
data16
jb
mov
xor
daa
ja
push
lea
mov
mov
sub
pop
push
jp
sbb
mov
hlt
or
icebp
add
popf
or
pop
xchg
mov
and
gs
inc
pop
mov
call
sub
clc
sub
jmp
dec
mov
into
add
push
xchg
add
xor
add
sbb
lea
sub
stos
jp
push
call
or
ss
sub
sbb
decl
push
mov
dec
push
jbe
out
xchg
xlat
loop
push
push
pop
jb
test
pop
cmc
movsb
or
sbb
add
add
outsl
pop
repz
jecxz
popf
jo
lcall
push
scas
call
arpl
adc
iret
mov
mov
cmp
std
push
hlt
int
hlt
imull
jp
sti
jb
mov
aam
or
adc
mov
repz
aad
add
mov
fists
loope
les
pop
mov
das
mov
fidivs
push
pop
je
jbe
fimull
sti
mov
outsl
or
dec
mov
xchg
xor
push
pop
decb
imul
sub
sub
jne
test
add
jmp
jne
adc
cmpsl
cmp
jl
fisttps
pop
cmp
add
jecxz
push
je
mov
in
or
mov
das
cmpsb
call
xor
push
pop
xlat
ret
push
data16
in
pop
push
and
push
vmwrite
mov
add
mov
or
inc
test
out
popf
sub
ror
xchg
mov
push
lds
jb
shl
mov
cmpsb
xchg
pop
or
mov
jle
mov
cmovs
pop
jne
lea
adc
push
inc
add
jbe
lcall
push
insl
mov
xchg
push
adc
iret
push
je
jp
mov
xor
lock
ficompl
cmp
cmpb
or
pop
mov
sub
sub
test
push
push
or
cmp
dec
inc
add
mov
push
push
call
pop
jle
fists
out
cmp
cmp
outsl
loop
icebp
cmp
push
daa
cmp
addb
jne
fistpll
sub
add
add
dec
add
pop
dec
or
mov
sub
out
jle
push
stos
mov
sbb
cmp
test
daa
gs
in
or
cld
insl
jecxz
lret
cmp
subb
sub
and
xor
push
and
lods
mov
sub
pop
cmpsl
test
sbb
scas
testb
push
std
mov
sbb
aaa
test
and
outsb
testb
test
iret
mov
or
pop
mov
adc
jecxz
fimuls
notb
cmp
into
jmp
je,pn
adc
and
idivb
push
and
xchg
adc
push
inc
add
mov
rcrb
mov
add
in
or
inc
add
pop
add
push
jb
jmp
mov
into
lret
jo
iret
pusha
out
or
movsb
setnp
add
xchg
jle
cmp
cmp
dec
adc
movsb
pop
adc
mov
or
dec
dec
outsb
dec
push
das
call
jbe
test
insb
ret
nop
inc
lcall
sbb
jbe
mov
cmp
jmp
test
jo
call
leave
mov
inc
push
xor
cmp
rolb
inc
add
cmc
push
add
mov
call
push
insb
das
push
push
adc
sub
mov
and
push
mov
xor
mov
or
pop
stos
pop
add
and
sub
out
jl
push
sbbl
fs
test
pop
insb
or
push
mov
pop
cs
pop
xor
clc
lea
push
lock
loop
mov
decb
call
add
dec
or
outsb
dec
jne
js
rcrb
stos
loop,pt
add
orl
sbb
pop
pop
adc
inc
cmp
jb
lret
jle
adc
decl
add
idivb
rcl
cli
stc
aaa
lea
pop
pop
adc
sahf
pop
call
pop
inc
jecxz
inc
or
mov
pop
pop
pop
clc
jle
add
push
dec
pop
mov
cmp
sti
mov
mov
xchg
je
ja
pop
adc
and
add
addb
js
push
sbb
and
decl
iret
xchg
mov
xchg
mov
xor
xchg
lcall
in
jp
adc
in
and
mov
mov
add
jl
add
hlt
mov
movb
add
mov
scas
cld
mov
in
sbb
cmp
je
scas
or
jmp
sbb
das
mov
sbb
call
or
and
rolb
icebp
inc
fdivrs
shll
xchg
stos
pop
pop
ror
loope
push
cmp
xchg
lds
fmuls
or
outsb
or
cwtl
shlb
push
inc
push
ret
xchg
add
outsb
adc
mov
sub
xor
push
push
bound
xor
cmp
and
cmp
out
xchg
adc
jne
repnz
or
fiaddl
ss
lahf
cld
pop
pop
or
sub
xor
push
cmp
inc
out
fisttps
push
outsb
sbb
xchg
pop
push
push
sub
xchg
insl
or
mov
jle
add
inc
mov
ret
cmp
xorb
mov
je
mov
jo
mov
cmp
push
jb
mov
ret
movsb
ja
cmpsb
jb
mov
push
lock
stc
adc
adc
shrl
call
xchg
pop
pop
xchg
aaa
std
decl
into
lods
jp
aas
mov
imul
cld
push
cmpb
test
pop
push
push
call
adc
add
xchg
mov
outsb
mov
push
mov
out
cmp
and
adc
outsl
je
jl
add
andb
xchg
dec
pop
sbbb
pop
mov
movsl
in
lock
je
call
xor
fs
ss
pop
repz
add
push
daa
push
and
or
mov
push
mov
add
popa
xchg
aad
fs
stc
push
test
ljmp
adcb
add
adc
mov
ffreep
rclb
mov
xchg
idivb
add
jg
hlt
push
push
jb
shr
js
or
adc
pop
pop
dec
cmpsb
mov
js
call
inc
jle
xchg
inc
aas
repnz
add
adc
xorl
or
dec
jl
aaa
xor
xor
popa
pusha
inc
cmp
push
inc
push
push
add
inc
ljmp
dec
push
lea
pushf
pusha
or
lods
das
xchg
dec
and
inc
lahf
jle
dec
call
sub
sbb
xchg
lea
xchg
and
add
mulb
inc
js
lock
cli
push
es
out
xchg
cmp
ret
sub
add
pop
ret
pop
cmp
add
es
push
insl
hlt
jno
lcall
outsb
test
and
subb
adc
andl
in
dec
test
das
mov
jmp
data16
inc
lds
adc
add
cld
or
mov
scas
call
add
mov
jg
cmp
imulb
cmpb
incb
flds
fsubr
xchg
hlt
inc
incb
or
inc
pusha
lock
cmc
mov
jae
sub
jnp
ss
pop
sub
les
cli
mov
sarb
or
insb
add
mov
inc
inc
inc
ja
hlt
push
je
push
mov
inc
fists
lock
addb
push
cmpsb
mov
adc
sbb
iret
lea
push
jl
push
push
mov
push
jbe
fmuls
cmc
push
rorb
sbb
xchg
leave
bound
push
daa
je
inc
cld
mov
xlat
test
rorl
rorb
pusha
outsl
ror
cmpsb
mov
sbbb
sahf
sub
add
les
jl
ds
pop
popf
add
int3
call
and
add
and
mov
push
rclb
mov
pop
cwtl
jne
xor
inc
add
and
ds
and
mov
ret
int
jae
mov
mov
jb
sar
xchg
sbb
xlat
add
lock
sub
jo
fs
dec
fdivs
xor
rolb
clc
fldt
add
jmp
int3
dec
xchg
cmp
adc
mov
enter
sti
jne
shlb
xchg
adc
sbb
pop
mov
or
rclb
decb
test
xor
xchg
xor
aaa
adc
jb
jmp
or
stos
jmp
mov
inc
mov
adc
cmp
sbb
and
insb
mov
inc
xchg
cs
push
adcb
fs
mov
or
and
pop
cltd
incl
or
adc
jo
and
add
xlat
dec
cmp
cmovo
fcoms
movsb
mov
add
mov
cld
mov
and
lahf
xchg
inc
pop
ret
loop
dec
loop
adc
inc
rorb
push
push
inc
add
fisubs
mov
sub
icebp
pusha
sbb
or
repz
pop
popa
jmp
mov
or
je
xchg
pop
mov
mov
jl
loopne
out
or
or
pop
adc
mov
push
mov
inc
in
push
jb
add
loopne
push
xorl
mov
loope
sub
fcom
imul
loopne
cwtl
lods
push
pop
jp
pusha
sub
fistl
or
sub
call
pushf
or
scas
cmpb
mov
incb
jecxz
and
and
call
and
pop
sub
adcb
push
adc
cld
lcall
call
cmp
jbe
inc
popa
mov
roll
lods
xlat
jmp
add
and
or
filds
cmp
and
jmp
divb
dec
inc
add
cs
sub
call
mov
fldt
aaa
adc
adc
pop
or
sbb
inc
es
add
loope
add
scas
mov
or
mov
xor
adc
inc
lds
fisttpl
and
and
pop
mov
repz
mov
mov
jne
push
pop
pop
mov
add
call
or
xchg
adc
jge
mov
cmp
mov
scas
call
nop
dec
scas
cs
loopne
loopne
sbb
loopne
pusha
adc
movsl
jg
adc
add
jecxz
add
rorb
add
cli
clc
mov
aam
loopne
lods
xor
or
mov
push
lods
loopne
test
pop
add
bound
jle
push
mov
ret
mov
pop
pop
add
rep
adc
add
jecxz
push
and
or
pop
push
loopne
jne
xor
scas
test
or
loopne
mov
pop
addb
jg
pop
pusha
xor
repz
push
scas
mov
and
js
add
jmp
add
mov
les
ret
xchg
adc
ljmp
sub
ljmp
rorb
inc
fs
inc
add
sbb
xor
inc
loope
sti
add
pop
jecxz
repnz
stos
addl
sub
jp
fsubrp
cs
sbb
pop
test
andl
aaa
sbb
add
jne
push
cld
push
mov
js
icebp
jecxz
pop
xchg
mov
xchg
cld
jle
add
or
cmp
loopne
subl
in
outsl
or
je
pop
rolb
adc
lods
lds
lahf
adc
pop
js
jb
dec
push
rcl
rolb
xchg
scas
movsb
push
into
jb
popa
dec
ret
outsl
out
mov
repz
cmpl
push
les
add
rdpmc
loopne
clc
jecxz
fildl
pop
or
or
popa
out
xor
xor
sub
in
push
mov
sarb
ljmp
push
or
repnz
idivb
dec
or
cmpl
add
das
and
rclb
sarb
add
cmp
sbb
push
xor
mov
loopne
adc
xor
insb
loop
add
jb
or
pop
mov
call
icebp
aaa
inc
inc
idivb
xor
or
add
ljmp
jbe
lock
push
test
sbb
movb
lock
inc
lock
pushf
or
in
in
das
mov
lea
and
call
jecxz
into
dec
mov
push
lcall
or
cmpsb
icebp
xchg
loop
inc
sbb
pcmpeqw
add
aam
sub
adc
push
ljmp
mov
push
in
pusha
or
pop
or
push
call
add
shll
mov
loope
or
mov
addl
loopne
xor
xchg
repz
dec
leave
or
inc
es
mov
xor
cmpsb
es
pop
or
or
sbb
sbbb
or
lock
push
cmp
movsl
imul
or
pushf
ljmp
movsb
pop
call
hlt
adc
mov
lock
sbb
inc
std
xchg
sub
lock
jle
outsb
add
push
mov
cmp
adcl
push
or
jbe
or
sti
ja
fcoml
pop
sub
xor
jmp
lods
dec
fs
std
lcall
or
mov
ljmp
mov
or
cli
out
mov
mov
or
ret
push
push
ret
shlb
inc
notb
mov
add
push
call
cli
add
adc
jmp
add
stos
mov
add
and
add
fwait
add
inc
xor
shl
mov
mov
incb
adc
data16
jne
fs
pop
bnd
mov
jnp
fbstp
sbb
add
or
aam
aad
jl
xor
mov
add
icebp
fmuls
je
add
sbbl
jle
bound
mov
jl
lds
inc
add
je
je
cmp
mov
mov
jb
sbb
hlt
mov
dec
xchg
mov
jge
shr
clc
lock
pop
add
xor
mov
clc
push
call
je
mov
push
xor
pushl
adc
or
or
add
xor
lea
out
xchg
hlt
adc
je
nop
mov
loopne
ja
adc
shrl
pop
mov
test
test
jle
xor
pop
sub
ja
jo
push
mov
aaa
add
or
jl
fists
jo
inc
mov
sub
ret
xor
clc
int
sarb
mov
sbb
je
fs
fucomip
sub
adc
and
cmp
jbe
jo
testl
and
mov
ljmp
pop
jb
lock
add
loopne
fs
imul
cli
sbb
icebp
xchg
in
sbbb
repnz
adc
push
in
call
or
ret
adc
mov
cmpsb
jne
xor
or
inc
out
jg
inc
lock
add
sbb
sub
mov
jl,pt
xchg
xchg
lea
mov
add
jne
push
loopne
imul
mov
cmpb
movsl
cmp
jo
cli
addb
ljmp
add
cmp
jne
push
nop
sbb
loop
add
ficompl
xchg
cmp
jb
push
jne
jo
dec
pushf
push
je
sub
mov
pop
cmc
lock
xchg
je
sub
adcb
int3
shrb
mov
add
push
cmpsb
cld
push
push
inc
push
je
out
pop
or
aam
add
dec
inc
and
push
aaa
mov
and
clc
adc
cmpsl
mov
call
xchg
adc
and
addb
das
and
lea
test
jbe
scas
test
and
cmovs
mov
or
adc
jo
jb
mov
cmc
test
stos
add
jg
sub
in
add
add
daa
orl
sbb
cs
imul
adc
or
jb
orb
add
out
fwait
rolb
dec
mov
outsl
jp
test
inc
xchg
jbe
sub
inc
jo
push
negb
mov
jno
je
fisubrs
xchg
cld
add
add
fisubs
je
sar
cwtl
add
pop
ret
lcall
rcrb
ds
cmp
sti
xchg
cli
or
ss
repnz
clc
repnz
je
add
xor
sub
xchg
sbb
and
jmp
jo
je
add
sbb
cli
lds
jns
jmp
hlt
or
push
push
sbb
adc
or
xchg
jbe,pt
mov
mul
mov
xor
push
mov
push
ljmp
or
stc
or
jo
stos
data16
pusha
and
mov
jmp
fidivl
dec
jecxz
cmpsb
xor
pop
add
xor
push
cli
dec
lret
adc
lock
lret
and
push
or
clc
push
and
clc
mov
or
cmpsl
dec
adc
xor
and
jnp
push
ljmp
jb
xor
call
sub
add
lock
inc
cltd
shlb
movsl
icebp
bound
repz
or
adcb
cli
dec
jl
mov
insb
push
fldcw
bnd
in
mov
mov
pop
push
mov
mov
xor
cmp
dec
jo
and
pop
xor
arpl
das
adc
jl
jmp
shlb
jo
data16
add
pop
sub
add
fisttpll
adc
mov
test
iret
add
rol
les
sbb
inc
push
dec
or
sub
shll
add
dec
push
pop
shll
je
push
and
pusha
fiadds
add
pusha
xor
test
loopne
repz
inc
inc
inc
mov
xor
lods
int3
leave
xchg
div
lahf
rorl
aas
inc
pop
pop
lcall
adc
and
mov
xchg
xchg
cmp
dec
dec
adcb
lock
mov
inc
mov
mov
mov
test
push
rclb
mov
add
mov
dec
push
mov
xor
sbb
rolb
and
sub
pop
push
andb
lock
lret
cmp
outsl
and
scas
xor
adc
or
inc
adc
sub
lods
xorb
jb
and
jo
sbb
jp
sarb
lock
dec
add
js
push
movsb
jo
xchg
pushf
mov
or
sub
imul
js
pushf
sub
mov
cmpb
fs
sbb
jmp
cmp
repnz
mov
jnp
xor
addb
insb
mull
mov
enter
addb
mov
mov
xor
adc
aas
mov
loopne
dec
or
mov
test
add
bound
lea
xor
rorb
inc
sub
inc
push
in
pop
cmp
jp
repz
in
pop
fs
cmp
hlt
repz
push
lods
xchg
sub
mov
mov
xor
push
pusha
movsb
ret
dec
test
sbb
or
push
sub
les
mov
push
mov
push
adcl
leave
dec
out
jmp
ret
mov
push
and
call
icebp
mov
mov
cli
mov
add
xchg
into
pop
cmp
call
or
repnz
cli
scas
pop
fidivrs
lea
call
ss
outsb
or
jbe
daa
adc
pop
loope
or
jns
pushf
or
jb,pn
out
outsb
lret
or
enter
push
shlb
push
jb
mov
xor
jl
or
xchg
mov
aam
or
cmp
sub
cs
scas
inc
test
inc
jb
sbb
data16
addb
daa
pop
mov
push
pop
sub
mov
jg
dec
jp
push
mov
bound
enter
push
push
fs
and
cltd
in
inc
clc
adc
je
lods
out
fsubl
pop
dec
add
rcrl
and
inc
add
ss
loope
decl
mov
ret
or
or
jb
mov
mov
sub
lea
or
mov
add
jne
je
inc
mov
out
xchg
stos
loopne
xor
testb
mov
push
xchg
mov
rorb
std
or
pop
and
insb
mov
out
adc
lds
lea
cmp
push
inc
cmp
pop
rorl
adc
mov
cmp
push
mov
xor
sub
push
mov
xchg
ss
ss
mov
mov
int
idivl
push
jne
cmp
int
mov
nop
inc
out
cmp
pop
decb
scas
lock
mov
adc
fwait
inc
adc
je
sbb
stos
adc
je
idiv
pop
cmpsb
notb
jb
mov
add
and
movsb
hlt
stc
out
add
push
push
pop
lcall
arpl
adc
pushf
cmp
fs
add
je
in
sbb
je
addb
aas
xor
and
or
adc
jl
shrb
loope
decb
pop
cmp
jo
inc
mov
pop
ss
je
sti
or
push
clc
scas
adc
pop
dec
sti
cmp
outsb
cs
inc
hlt
inc
pop
or
lods
js
jmp
mov
or
int3
sbb
push
push
dec
std
mov
xlat
pop
or
sub
jae
cmp
and
xor
mov
out
call
xchg
sbb
inc
aam
mov
frstor
xor
push
sahf
sub
or
outsb
fists
jbe
sbb
push
inc
out
data16
test
jmp
pusha
sahf
add
inc
das
out
sbb
xchg
dec
inc
or
fiaddl
into
ret
adc
call
lods
fidivrs
sti
push
cmpl
sbb
push
and
call
and
fwait
sub
lods
xchg
lods
add
xlat
jl
push
jl
mov
push
push
out
cmp
std
inc
cld
mov
movsb
arpl
fcmovu
and
cmp
mov
out
mov
call
lret
hlt
popa
int3
sahf
pop
test
call
inc
pop
test
add
push
lret
clc
or
imul
sbb
orl
inc
adc
mov
add
popf
add
sub
and
add
jl
shrl
fadd
filds
adc
cld
and
inc
outsb
sub
and
and
mov
add
or
add
sub
cli
inc
jp
insb
idivb
loopne
rorl
sub
pop
mov
inc
daa
jmp
xchg
loope
cmc
popa
xchg
mov
lock
mov
or
faddl
push
add
mov
neg
and
jle
xor
lea
pop
sarl
ds
jle
into
fadd
test
sbb
mov
sbb
sbb
les
sbb
jne
aaa
stc
xor
insb
aam
jbe
call
sbb
sbb
cmp
cli
adc
cmp
push
or
adc
sub
sub
out
and
and
cmc
xchg
shl
pop
ds
fmuls
je
imulb
pop
xchg
and
cmp
jecxz
mov
shll
inc
mov
cmp
jne
push
and
mov
adc
mov
pop
int3
or
sub
mov
ds
mov
push
test
push
sti
lds
push
pop
sar
mov
cmp
mov
cs
mov
xor
adc
roll
jmp
dec
ljmp
add
mov
movb
ret
add
add
iret
push
nop
dec
cltd
cmp
mov
push
mov
jbe
ss
pop
add
add
stos
cmp
sti
mov
neg
cmp
mov
jb
pop
movsb
pop
inc
ret
popa
pop
loope
mov
lods
pop
scas
cmp
dec
rorb
add
mov
sub
push
inc
xor
stos
or
mov
ficoms
stc
movsb
lock
in
add
xlat
add
mov
or
push
sar
lret
loope
cmc
mov
repz
or
mov
jle
sub
pop
pop
mov
decl
mov
and
and
add
cmp
jns
xorb
push
sub
test
ss
push
lock
clc
mov
or
decl
adc
adc
add
test
dec
lock
mov
out
cmp
ljmp
ret
mov
stos
stc
and
mov
rcrl
shr
or
sub
movl
jl
ja
cmc
jbe
inc
dec
add
loop
rcll
or
jne
rcrl
cmp
scas
adc
out
cli
jl
aas
mov
sub
ret
test
into
jne
push
fadds
cmp
jo
push
dec
push
sbb
pusha
dec
push
jmp
int3
shlb
mov
push
add
ret
xchg
add
pop
inc
dec
and
test
cmp
pop
and
mov
test
inc
xor
mov
xor
xor
test
cld
lock
sbbb
hlt
je
cmp
jmp
lea
pop
mov
dec
ja
out
rorl
in
push
cld
inc
pop
repnz
jb
shrb
dec
js
mov
sub
dec
adc
sti
jl
outsb
inc
dec
incl
inc
push
mov
aas
mov
mov
icebp
pop
add
roll
mov
push
or
call
add
ret
lea
sarb
push
hlt
jle
mov
jne
or
lods
testb
mov
loopne
jmp
lock
hlt
adc
adcl
push
cmpsb
fdivrp
jbe
lea
int
pop
cmp
xor
adc
mov
cmp
je
push
or
lods
call
jne
lods
iret
add
dec
mov
addb
xchg
test
les
fisubs
ficoms
push
sbb
add
outsb
jg
add
into
add
callw
sbb
negl
mov
push
and
incl
mov
mov
add
jg
data16
ja
add
test
inc
loopne
add
mov
adc
add
mov
add
push
fildl
cwtl
clc
iret
rcll
jmp
mov
inc
pop
push
push
addl
mov
adc
jne
je
cli
lds
sbb
push
push
push
mov
and
jle
clc
and
sub
xchg
jl
jg
rcll
in
dec
cmp
or
add
icebp
shl
inc
lds
sbb
mov
and
or
adcb
cld
loope
dec
je
sbb
push
dec
dec
es
testb
add
das
pop
testl
add
sbb
scas
jle
call
dec
outsb
shlb
shrl
push
pop
pop
cwtl
mov
mov
mov
cmp
adc
cmpsb
inc
pop
push
push
adc
xlat
call
das
xor
push
push
push
xorl
rolb
cmc
add
iret
pop
ret
sti
xor
das
ss
fmuls
dec
mov
rcll
or
test
push
ficoml
jo
jle
je
add
push
decl
push
pop
cld
xorb
insb
adc
push
call
jl
xchg
push
mov
push
or
add
pop
cmp
lock
subb
ret
sub
jbe
mov
mov
hlt
scas
pusha
scas
ja
add
add
and
mov
sbb
mov
fisttps
hlt
xor
jo
xor
es
es
xchg
push
shlb
stos
inc
sbb
ret
push
inc
fsubs
add
mov
pop
push
add
add
fbld
rorb
pop
add
adc
push
aam
or
in
jl
add
xchg
lcall
or
push
fists
cmp
mov
mov
jbe
cwtl
push
mov
cmp
sub
cld
pop
add
or
cmpsb
loope
out
addb
mov
clc
call
adc
or
leave
imul
mov
data16
test
xchg
mov
cmp
mov
cmpxchg
and
xchg
pop
xorl
rorb
ret
push
stos
inc
call
add
jbe
in
jp
lock
adc
and
xor
pop
mov
fs
outsl
clc
stos
data16
xchg
loopne
cli
cmp
mov
sti
mov
push
dec
es
mov
cmp
and
aaa
mov
aam
into
enter
mov
push
mov
inc
insb
and
adc
sahf
sbb
inc
push
pop
out
push
loopne
adc
repz
mov
mov
in
je
mov
xchg
outsl
dec
push
cmp
cmc
sub
push
pop
mov
in
jne
xchg
clc
jle
sbb
mov
sti
lock
rorl
rorb
mov
and
xorb
cs
cmp
cmpsb
push
test
ja
mov
sub
lods
add
dec
dec
mov
jno
pushf
inc
mov
dec
sub
movsb
push
mov
loopne
movl
pop
sbb
lret
adc
lods
imul
inc
decb
adcb
nop
or
loop
imul
es
mov
or
int3
mov
cmpsl
mov
fadd
adcb
mov
lea
pop
sbb
xchg
sub
ja
pushf
ljmp
cmp
cmp
push
imul
dec
mov
sbb
inc
in
addb
or
cmpsb
call
in
repnz
adc
push
cmp
imul
call
fadds
notl
call
mov
iret
xlat
sub
movsl
and
mov
loop
into
stos
xchg
dec
je
lock
sahf
daa
int
adc
push
mov
fwait
jne
push
push
xchg
jg
cwtl
adc
mov
aam
cmp
adc
push
gs
push
shlb
pop
adc
mulb
dec
pop
inc
in
dec
rep
adc
pop
lock
adc
mov
mov
and
add
xchg
jp
and
mov
cmp
sti
rclb
add
mov
sti
mov
or
add
mov
add
out
xchg
std
add
add
mov
xchg
pop
lods
push
leave
xchg
cli
les
push
jmp
in
lret
push
push
sub
les
lods
push
les
sbb
mov
xor
pusha
mov
out
cmp
inc
add
jle
mov
sub
mov
jbe
add
add
dec
clc
adc
pop
lock
push
cmp
repnz
test
add
pop
push
test
add
mov
or
outsl
dec
ljmp
sahf
mov
pop
jo
mov
pusha
out
add
add
loopne
xorb
pop
hlt
fdivl
inc
adc
stos
outsb
in
push
mov
xor
adc
nop
pop
sbb
gs
add
xor
fcmovnb
and
lock
sbb
jle
xor
add
adc
push
fwait
dec
sub
sbbb
stc
rol
adc
cld
add
push
fucomi
mov
mov
add
nop
in
call
sbb
xor
inc
add
movb
lods
inc
testl
sub
not
inc
jecxz
sti
fldt
es
subb
lock
xor
add
xor
adc
or
cld
pop
add
imul
mov
ja
adc
sbb
loope
push
sti
sbb
push
sbb
or
jo
jne
cli
jbe
or
adc
sahf
and
ljmp
pop
push
add
jb
or
outsl
call
cld
or
ret
leave
sbb
outsl
mov
xchg
adc
repz
adc
lret
add
xchg
jb
outsb
adc
shr
jbe
add
mov
sbb
sbb
popf
cmp
push
dec
fadd
lea
push
and
in
js
pop
stos
mov
stos
mov
xor
sarb
inc
mov
loope
push
mov
sub
imul
push
addr16
stos
mov
push
sahf
add
sbb
rcll
mov
jbe
xchg
decl
add
shlb
outsb
sbb
rclb
es
rcrb
into
pop
sbbb
cli
push
rcr
pop
outsl
inc
push
sarb
or
and
add
and
and
adc
dec
addl
shlb
or
push
add
add
lock
mov
add
add
arpl
jb
daa
jno
inc
enter
xor
lock
xchg
xor
leave
call
movsl
jo
fiadds
int3
lods
jp
mov
push
call
pop
xchg
or
xor
test
adc
pushl
push
or
fiadds
mov
add
add
add
push
push
add
test
in
xlat
test
push
mov
push
js
jl
sub
andb
push
adc
adc
pop
or
jae
aas
addb
add
push
add
lret
dec
jl
aaa
mov
add
andb
xor
push
xchg
lock
jg
pop
adc
mov
xchg
popa
add
mov
add
push
jl
jo
orb
jno
xor
xchg
cld
mov
mov
dec
sbb
addb
fsubrl
lret
or
mov
sub
outsl
mov
adc
mov
add
push
popf
les
call
xor
sub
add
sub
sahf
inc
add
aad
test
add
or
mov
xchg
je
pop
and
lods
sub
pop
sbb
incl
add
into
lea
add
call
inc
popf
pusha
push
insb
es
add
lcall
inc
or
lret
sbb
mov
dec
and
pop
adc
mov
outsb
out
push
add
cwtl
xchg
dec
movmskps
pop
lahf
add
cli
rcrl
jg
or
and
inc
in
push
call
mov
test
adc
je
dec
adc
adc
mov
inc
push
add
sti
pop
movb
jmp
cmp
movsb
mov
inc
xchg
push
jae
orb
sub
lcall
and
xor
jg
add
sbb
jne
addl
bound
test
push
jge
data16
add
loopne
mov
loopne
cmp
in
push
in
xchg
call
add
adc
punpckhdq
imul
dec
add
sub
es
movsl
lret
mov
mov
test
cld
mov
rcrb
mov
adc
ja
stos
adc
push
sbb
je
and
jle,pt
lock
push
je
lea
add
idivl
pop
nop
add
and
clc
add
inc
inc
add
insb
xchg
mov
je
adc
loopne
jl
arpl
lods
pusha
or
adc
es
push
in
mov
addb
push
pop
in
add
sti
pop
ljmp
cltd
mov
aam
cmp
sub
push
cmpb
popf
or
pop
jmp
and
inc
adc
movsl
mov
retw
loopne
adcl
pop
dec
xchg
ret
mov
dec
jg
bound
add
into
and
sub
idiv
dec
adc
std
in
sbb
call
cld
pusha
or
mov
cmp
adc
add
and
fsqrt
bound
subb
js
loop
in
lods
lret
shl
pop
pop
in
mov
incl
adcl
inc
mov
dec
pushf
add
clc
mov
rolb
xor
xchg
mov
pop
std
ljmp
test
movsb
or
mov
clc
pusha
adc
mov
les
xchg
faddl
xor
and
mov
adc
lret
and
jl
adc
decb
or
inc
mov
in
aaa
inc
and
js
call
loopne
ret
insl
rorl
lret
mov
cmp
lock
push
pop
or
adc
xchg
das
add
push
push
xor
mov
mov
cmp
jg
inc
or
push
shrb
sbb
push
xor
inc
dec
xor
adc
sub
or
sbb
xor
inc
clc
inc
sbb
fbld
push
mov
je
cmp
scas
mov
dec
sbb
sub
inc
inc
rcr
add
dec
sbb
xor
adc
push
lock
and
pushl
mov
shlb
jecxz
jnp
lock
inc
inc
rcrl
mov
mov
outsb
pop
hlt
add
push
cltd
ljmp
cmp
push
test
mov
push
cld
sbbb
adc
cs
and
xor
shr
decl
pop
popa
xor
inc
xor
sbb
cmc
pop
jo
lock
jnp
push
push
jno
pop
cmp
decl
call
add
into
lock
call
xchg
arpl
push
lock
lock
clc
mov
hlt
mov
mov
out
call
mov
lock
xchg
push
ja
fidivl
outsl
pop
pushf
pusha
jo
lock
or
jo
jmp
cmp
mov
shlb
mov
adc
jg
dec
and
aam
jae
jl
loopne
lods
nop
push
data16
mov
mov
pop
call
cmp
cmpsl
mov
inc
add
or
jne
xchg
pop
xor
push
and
sub
add
sarl
or
jg
icebp
movsb
mov
repz
in
push
mov
ljmp
dec
mov
add
cmpsb
je
xor
inc
push
push
hlt
add
xor
sbb
mov
decl
xor
or
inc
pop
jp
xchg
or
mov
mov
jg
adc
inc
fdiv
or
lahf
pop
or
add
xor
sti
jb
jmp
in
push
subb
mov
test
pop
cmc
pushl
sub
inc
dec
and
adc
and
xor
jbe
cmpsb
cmp
dec
pop
pusha
ljmp
sbb
sbb
lea
outsl
mov
in
mov
mov
cmp
mov
test
or
pop
jno
dec
sbb
or
push
imul
jmp
and
mov
push
mov
hlt
shrl
jmp
fwait
in
imul
xchg
mov
or
mov
add
in
cmpsb
aaa
add
push
add
or
clc
mov
or
push
in
mov
or
adc
test
cmp
or
xor
frstor
jle
cld
repz
lea
push
lea
xchg
andb
lods
lock
lock
push
mov
jne
jne
add
data16
test
call
inc
mov
pop
mov
and
pop
fidivl
and
push
adc
jne
popf
sti
add
add
add
mov
call
push
sub
lahf
add
add
stos
lods
int
push
or
push
fisttpl
jecxz
add
mov
je
sbb
and
adc
inc
pop
sub
scas
xor
fmuls
in
add
adc
daa
out
rorb
icebp
mov
push
mov
add
or
dec
inc
mov
mov
clc
sub
mov
dec
add
cmp
pop
and
mov
fs
or
pop
call
jbe
push
inc
or
or
mov
adc
sub
inc
nop
pushf
mov
fsubrl
out
xchg
shll
movsb
sbb
push
add
sbb
mov
std
cmp
jp
jo
in
arpl
xchg
push
outsb
adc
js
jae
out
jo
sar
test
sbbb
dec
fistl
jle
mov
outsb
xor
loop
inc
xor
ljmp
inc
mov
jle
push
push
add
test
xchg
popf
adcb
test
movsb
in
fcmovnu
inc
stos
mov
cmp
mov
jg
fcmovnbe
sti
mov
push
push
xor
add
xor
fcoms
push
fdivrs
lods
jo
push
xor
add
mov
pop
jb
add
pop
push
xor
mov
inc
aaa
mov
inc
testb
add
jp
xor
xor
fisttps
test
xor
xlat
jno
sub
hlt
or
xor
sarb
dec
mov
test
push
rolb
jecxz
insl
and
nop
and
xchg
testl
push
pusha
filds
xor
bound
adc
inc
inc
or
xor
add
cmp
jne
das
sarl
or
adc
mov
dec
add
sub
rcl
popa
call
and
jbe
mov
mov
ljmp
mov
sbb
incl
jo
je
call
add
inc
pop
cwtl
testl
push
xor
ja
dec
pushf
push
xchg
add
pop
repnz
cs
xor
pop
nop
das
sbb
mov
in
sbb
fwait
inc
in
jp
leave
or
je
call
int3
mov
pop
sub
and
jnp
insl
jg
fisttpl
test
jb
out
xor
xchg
jo
mov
xor
call
jmp
adc
ficoml
jge
outsl
add
ret
pop
out
xor
not
orb
incl
and
adc
mov
sbb
cmp
mov
mov
lods
cltd
sti
pop
cli
push
jmp
and
outsl
xor
cli
mov
mov
hlt
xor
push
mov
int3
or
loopne
add
sub
sbb
sbb
add
or
inc
add
mov
inc
sub
adc
xchg
call
mov
rclb
rcll
insl
jmp
int
fwait
pop
add
je
fsubrp
testl
xor
add
adc
or
inc
xor
stos
or
push
call
add
mov
push
and
nop
cmpsb
pop
andl
test
roll
out
daa
add
aaa
ficompl
inc
cwtl
mov
and
or
adc
pop
xchg
add
push
xchg
dec
lock
pusha
sub
mov
stos
sti
ljmp
add
push
mov
jne
jle
fidivs
inc
pop
lds
subb
mov
mov
and
mov
loopne
arpl
jg
addb
fistpl
mov
xorb
repz
sbb
pop
add
cs
adc
add
push
sbb
xor
push
cmp
mov
sbbb
jge
loopne
adc
sub
subb
imul
ljmp
lcall
or
add
adc
xorb
or
sub
aaa
or
or
lods
arpl
inc
call
sub
add
addl
nop
sbb
dec
cmpsl
mov
xchg
sub
fcoms
mov
mov
jmp
clc
ljmp
adc
leave
inc
ret
jnp
sub
mov
pop
or
mov
rcrb
lock
enter
add
push
stos
inc
movsl
in
mov
jb
mov
str
add
adc
stos
rclb
pop
lcall
push
or
mov
push
js
lock
sub
cmpl
lea
aaa
mov
mov
add
push
xor
pop
rcrb
and
xchg
or
les
and
lock
es
adc
jg
and
xor
fistps
cmp
call
sarb
es
xor
sub
adc
and
xor
les
xor
rclb
imul
sub
lea
lock
mov
sub
hlt
shll
add
add
movsb
xchg
add
jmp
js
add
test
pop
stos
mov
add
nop
addr16
pop
or
push
add
xchg
pusha
imul
pusha
nop
adc
pop
cli
dec
cld
scas
push
ss
mov
inc
inc
in
les
sarb
pop
and
or
jp
cs
sub
hlt
push
adc
add
movsl
ljmp
rcll
aaa
ficoml
je
scas
or
or
cld
xor
jl
and
addr16
inc
xor
js
addb
mov
dec
adc
push
add
pop
rclb
enter
rcrb
sbb
and
in
xchg
hlt
push
jl
adc
lret
movsl
add
and
pushf
jp
or
adc
add
aas
cmpsb
mov
dec
and
push
loopne
jg
inc
lods
test
lods
push
push
add
add
pop
or
stc
popa
sbb
add
movsb
add
ds
add
dec
jb
fwait
xor
sbb
ljmp
cmp
adc
inc
cmp
and
push
sub
clc
add
add
enter
cmp
or
iret
loopne
shr
aaa
fldenv
or
and
sub
dec
xor
loopne
insb
pop
mov
rclb
sar
cmp
push
inc
push
pusha
pop
sub
jo
add
or
fistpll
add
nop
or
pusha
inc
out
push
popa
addr16
mov
dec
sub
pop
add
movsl
dec
jl
sub
bound
xchg
mov
data16
inc
decl
push
loopne
loope
dec
pop
pop
pop
push
jle
adc
ljmp
push
fisttps
mov
jle
lods
ret
add
add
and
iret
repnz
cmc
xchg
and
loop
cmp
mov
xchg
adc
jecxz
or
imul
loopne
loopne
sbb
add
sbb
and
add
sub
sub
ret
shll
cmc
sbb
cwtl
adc
mov
mov
and
lret
call
xchg
mov
outsl
jp
aam
push
mov
imul
fisttps
lcall
push
mov
adc
pusha
or
push
sbbb
or
push
mov
into
xchg
push
decl
loope
hlt
shl
pop
adc
push
pusha
add
mov
ss
icebp
addr16
arpl
or
xchg
or
bound
and
in
adc
add
out
loopne
lock
sbb
out
dec
popa
in
sub
fisttps
fcoms
lahf
es
loopne
ljmp
lds
addl
loop
or
jl
cmc
mov
loope
mov
mov
mov
mov
xor
pop
loopne
js
aas
pop
ret
add
fsubs
add
xchg
rolb
add
and
sbb
iret
mov
addl
ret
push
fists
xchg
out
mov
pusha
rorb
cmpsl
loopne
sti
jae
jle
fisttps
bound
rolb
add
popa
xchg
test
es
or
hlt
add
into
loopne
fiadds
outsl
push
incb
pusha
fisubl
cld
pusha
add
outsb
outsl
sbb
movl
ret
and
dec
xchg
mov
jle
or
movsb
mov
cmp
sti
inc
mov
in
or
pusha
pushf
popa
popa
lods
cli
mov
test
scas
insb
mov
cs
lahf
pop
cmpsb
pusha
stos
stos
cmp
push
add
adc
and
adcb
ret
shlb
mov
popaw
es
jp
test
fiadds
fisttps
lret
mov
pop
loopne
add
cwtl
ljmp
jbe
mov
mov
nop
sbb
mov
pop
dec
fists
bound
mov
cli
mov
mov
push
gs
jne
add
popf
loope
pushf
jl
inc
mov
in
jg
mov
cmp
aas
add
xor
mov
clc
stos
jb
jmp
push
sbb
add
or
jg
stos
call
pop
xor
loopne
xor
or
aam
mov
pop
lock
mov
adc
add
sbb
decl
cmp
push
push
jmp
xorb
xchg
pop
dec
ljmp
mov
push
xor
cltd
mov
dec
jbe
or
jb
mov
cmp
mov
pop
test
dec
sbb
sub
dec
push
cli
cmp
subb
andl
adc
push
mov
jo
fcomp
cmp
sub
xor
inc
lock
inc
ret
lock
cmp
jo
push
je
lock
lcall
push
test
pushw
orb
adc
sar
mov
repnz
xor
push
inc
and
or
inc
loop
call
sbb
inc
adc
jb
push
adc
or
mov
in
xor
loopne
sti
xor
clc
rcll
xor
or
jbe
inc
sbb
or
jp
leave
and
xchg
loop
in
or
adc
xchg
jbe
cld
sbb
pop
lret
rcll
jmp
fdivrl
or
push
fwait
cli
push
lcall
and
add
xor
adc
shrb
call
push
or
mov
push
rolb
adc
lock
pop
pop
mov
stc
or
popf
sbbb
jno
pop
adc
cmp
mov
push
add
mov
outsl
inc
mov
out
jo
loopne
add
push
sub
insb
add
cld
mov
adc
cli
inc
fsubrl
cmp
inc
mov
add
sbb
inc
dec
mov
mov
outsl
xor
xchg
push
pop
aam
iret
icebp
sbb
in
je
or
sub
fwait
icebp
fwait
insb
or
dec
lock
adc
shll
mov
lock
sarb
rorb
and
and
sub
inc
adc
jl
cwtl
adcb
pop
jmp
push
test
lock
stos
add
push
lock
mov
nop
adc
pusha
xorl
and
mov
xchg
int3
or
test
add
rolb
pop
les
cmp
rcrb
add
dec
or
push
es
xor
push
dec
loope
ljmp
jo
lock
inc
je
add
fs
mov
call
jge
rcrl
mov
xor
divb
xchg
ficompl
aaa
push
cltd
mov
scas
push
hlt
or
dec
mov
cmp
mov
inc
lods
lcall
stos
hlt
lcall
mov
jp
pop
lea
icebp
mov
addb
out
mov
call
sbb
call
sub
add
mov
mov
xor
jo
push
adc
xor
mov
mov
dec
and
add
adc
xor
adcl
sbb
ss
incb
add
das
adc
mov
sbb
lock
xor
push
jae
xor
outsl
ljmp
repz
insb
popa
mov
jb
icebp
push
mov
call
push
addl
xor
add
rcrl
adc
or
cli
fadds
ficoml
mov
lret
sbb
xchg
pusha
push
xor
pop
adc
aaa
inc
jmp
inc
mov
dec
lock
mov
xchg
mov
test
arpl
push
mov
or
subb
mov
xor
pop
mov
mov
inc
dec
push
mov
mov
lods
cmp
jb
fwait
movsb
cli
add
repnz
add
xor
mov
jecxz
xchg
scas
or
movsb
aad
icebp
icebp
dec
jne
xchg
xor
bound
xor
call
or
or
loopne
cld
pop
cmp
push
mov
sub
jg
sub
mov
or
aaa
mov
xor
mov
adc
sub
push
rol
xchg
mov
adc
adc
push
fcoms
lock
rclb
xor
out
inc
lock
or
stos
mov
or
popa
xor
xor
sub
jg
push
xor
test
rcrb
adc
ljmp
push
jbe
cwtl
movsb
out
and
adc
lods
jae
jmp
sub
insl
adc
jnp
sub
mov
mov
mov
inc
mov
aam
loopne
xor
mov
jo
jg
imul
push
cmp
icebp
add
loope
aad
add
jo
pushf
xor
mov
sbb
and
mov
mov
in
int
stos
jne
ljmp
xor
jle
lock
jo
mov
call
ljmp
add
sbb
cs
shrl
add
jge
pop
mov
aas
xor
mov
lds
mov
shrl
loopne
and
shrb
jp
dec
or
xor
sbb
and
dec
adc
pop
cs
push
or
adc
jo
lcall
add
fmull
sub
cmp
call
lock
inc
fs
inc
xchg
aad
das
and
mov
pop
mov
jg
jl
and
push
inc
or
xor
inc
test
mov
adc
or
xor
cmp
pop
cld
mov
jo
test
xor
cli
or
and
negl
movsl
inc
add
xor
pop
or
add
addb
mov
lret
xlat
loope
decb
cmp
xor
inc
jo
bound
and
shlb
pop
adc
inc
xor
imul
xchg
addb
rclb
lock
mov
inc
or
dec
lock
mov
sub
pop
push
xor
push
cmp
add
mov
cmp
je
push
dec
and
inc
push
push
jo
mov
push
call
add
or
shr
jle
lret
cmp
cwtl
xor
xor
push
mov
es
mov
mov
mov
call
push
mov
cmp
adc
push
cmp
add
xchg
add
mov
outsl
bound
je
jge
add
sub
inc
jge
je
orb
mov
or
stos
dec
lea
enter
adc
push
and
dec
clc
mov
gs
cld
mov
pop
arpl
and
add
push
inc
cli
sti
ds
call
mov
sbb
enter
or
or
and
clc
add
or
xchg
dec
call
orb
dec
mov
cmp
xlat
adcb
rolb
inc
add
mov
inc
dec
xchg
sahf
mov
cmp
and
pop
loop
add
cmpsb
popa
jnp
sub
jae
pop
sbb
loope
inc
dec
mov
cmp
test
adc
pop
mov
push
icebp
sbb
dec
in
sub
mov
or
sarb
repnz
aas
orb
xor
xchg
inc
add
pusha
sarl
cwtl
leave
mov
into
dec
mov
push
lea
push
fs
mov
sub
mov
arpl
pop
jno
mov
xorl
mov
addb
or
push
mov
insb
push
xor
jbe
aam
bound
or
lret
push
add
or
lods
mov
xor
xchg
add
push
aaa
verr
sahf
mov
dec
aam
adc
cmp
or
shrb
mov
test
inc
mov
mov
adc
push
pop
les
int
or
outsb
mov
fmuls
test
and
lret
jle
cmpsb
and
push
jo
inc
cs
sbb
cli
inc
dec
sbbb
mov
sbbb
lock
or
push
mov
lea
mov
testl
inc
mov
cmp
mov
int3
add
imul
pop
push
test
push
mov
stos
aas
xchg
cmp
dec
and
call
push
std
or
jo
or
sbb
add
push
aam
inc
or
fisttpll
cld
xor
mov
call
add
call
xorb
sbb
stos
sbb
cmc
sub
shrl
cmc
add
adc
or
popa
and
call
inc
pop
adc
lcall
dec
loop
test
or
mov
sub
call
adc
xor
cmp
outsb
scas
or
and
es
xor
mov
inc
ret
pop
inc
hlt
jne
mov
stos
cmp
add
inc
push
push
dec
add
add
lcall
xor
rcrb
mov
adc
insb
cld
dec
add
fcomi
mov
push
xchg
das
jl
scas
lea
sub
cmpsb
mov
mov
push
mov
shrl
pop
nop
adc
add
and
rorl
xchg
cs
fs
inc
pop
dec
test
jmp
nop
test
inc
or
adc
xor
mov
adcb
shrb
add
push
jge
jbe
or
lds
call
pusha
mov
out
add
and
adc
push
in
insb
cli
jge
adc
sbb
rorb
push
add
sub
and
call
sub
scas
push
dec
lret
push
or
mov
je
loopne
jl
adc
ljmp
push
idiv
adcb
movsb
rolb
inc
xor
das
dec
cmp
sbbl
dec
shl
jbe
mov
push
mov
loopne
test
cmpsb
or
inc
inc
mov
scas
cs
lea
outsb
cli
and
jl
dec
out
out
push
and
jg
cmpsb
call
fs
adc
fsubrs
test
subb
adc
cli
add
pusha
push
xchg
lcall
aad
dec
enter
add
jae
sub
xchg
or
inc
push
movsl
jo
loopne
adc
sbb
mov
adc
mov
or
adc
test
loopne
push
push
daa
test
push
xchg
sub
out
scas
clc
pop
push
add
cmc
loopne
mov
jne
and
sub
loopne
xor
dec
ffree
decl
sbb
add
mov
push
pushl
lcall
push
add
mov
sub
jg
decl
add
bound
leave
sbb
xchg
and
arpl
call
ret
orl
and
adc
sub
lcall
je
push
sbb
fmuls
jnp
loope
inc
sti
add
loopne
not
sub
mov
sub
jo
sbb
mov
imul
cmp
pusha
push
jne
xlat
scas
xchg
add
scas
cs
lock
push
lea
cmc
inc
jnp
jmp
and
jl
push
and
xchg
or
cmp
lock
xlat
fisubrl
add
jmp
mov
jg
inc
pusha
pushf
icebp
js
mov
push
cmpb
sti
in
fwait
loop
inc
pop
hlt
je
jmp
or
mov
loopne
stos
xor
or
dec
push
inc
ljmp
push
int3
call
push
xchg
bnd
dec
mov
mov
loopne
pop
lds
test
cld
cmpl
add
je
sbb
xchg
dec
sub
sub
or
push
push
loop
lea
push
push
jp
add
pusha
mov
add
cmp
push
test
nop
out
dec
std
loopne
call
cs
jmp
xchg
inc
outsl
pop
or
mov
shlb
pop
adc
loopne
loope
push
nop
inc
sub
and
mov
test
push
sbb
dec
mov
mov
push
add
hlt
loopne
lcall
dec
push
popa
inc
ret
add
into
sub
je
push
fs
jmp
push
adc
call
lds
cmpb
mov
sub
pop
ja
inc
mov
cli
pop
daa
inc
mov
scas
mov
outsb
addb
jle
xchg
pop
insl
test
les
loop
inc
test
scas
mov
push
js
dec
adc
push
add
xor
mov
add
pusha
loope
adc
cmp
test
push
jne
mov
add
je
xor
xchg
jp
jne
add
stos
sub
or
je
adcl
inc
mov
fldcw
adc
jmp
clc
pusha
inc
and
loopne
mov
mov
loope
xchg
loop
jl
push
add
clc
not
and
sbb
add
outsb
dec
mov
pusha
mov
andb
add
fadds
sub
mov
xor
push
mov
ds
imulb
arpl
das
pushf
dec
add
rorl
scas
push
ret
scas
call
push
jo
jnp
je
arpl
enter
and
lea
or
xchg
js
pop
ljmp
ds
je
or
xor
pusha
adc
push
pop
mov
mov
lock
fidivl
and
mov
andl
sub
xor
adc
xor
ljmp
fs
lcall
insb
jecxz
adc
rep
push
scas
mov
aad
je
movb
push
cmpsb
lea
push
push
clc
scas
push
jo
pop
add
or
sahf
xor
jg
mov
test
divb
aas
cltd
and
add
cmpsb
pop
add
pop
add
outsb
or
sar
cmp
pop
cmp
je
or
add
rolb
rol
xor
xchg
adc
inc
push
xor
cmp
sub
lock
push
or
mov
push
inc
ja
and
mov
shrb
loope
js
nop
ja
push
mov
jo
lea
or
mov
out
clc
xchg
jne
sbb
xor
or
out
jno
dec
test
arpl
or
sub
sub
jp
subb
iret
call
or
pop
fsubr
add
mov
mov
add
lock
adc
test
and
dec
mov
or
and
mov
push
xchg
cmc
call
ficompl
jo
or
jg
stos
add
and
adc
movsl
ds
jo
sub
mov
xchg
pop
push
outsl
xor
sub
addr16
sub
pop
imul
mov
mov
mov
add
jne
xchg
fimuls
or
loopne
lods
ljmp
adc
cmp
dec
pusha
aas
mov
cmp
mov
jo
ret
xor
dec
jo
ljmp
add
add
lret
mov
push
cld
jnp
xor
pop
mov
cmp
and
out
mov
push
cmp
xchg
and
ss
subb
data16
je
movsl
push
dec
je
cmp
call
lea
cltd
lcall
adc
push
stc
mov
push
xchg
ficoms
dec
insl
and
jb
sub
scas
xor
lock
or
and
push
hlt
add
sbb
fistpll
xor
and
ja
add
pop
and
pop
mov
push
mov
add
mov
scas
mov
stc
push
data16
divb
mov
fsubrl
out
mov
sub
ja
pop
add
ja
or
aas
cmp
dec
mov
es
movsbl
pushw
pop
je
cmp
xchg
cmpsb
cmovno
add
decl
add
jg
xor
push
push
or
xor
mov
sub
push
cmp
push
dec
loop
pop
fimuls
push
js
cmp
lods
dec
ljmp
jbe
lcall
mov
push
jb
add
mov
cmp
jb
xorb
inc
repz
icebp
or
ds
jg
jne
in
je
sub
iret
enter
sarb
sbb
aas
inc
mov
pop
loopne
dec
outsb
adc
pop
cmp
stos
or
push
mov
hlt
rorl
push
mov
cmp
jp
stc
cmp
jb
cmp
fbld
or
cli
inc
inc
lea
aam
cmp
das
add
xorb
sub
orb
shrb
xor
jo
je
push
xor
cs
jmp
sub
push
mov
and
in
mov
mov
mov
xor
xchg
rorb
push
add
leave
xor
sahf
cld
inc
add
mov
jne
xchg
subl
mov
adc
hlt
cmp
lea
mov
out
pushl
xor
lcall
cmc
mov
ret
xor
xchg
jo
or
mov
push
or
cmp
loope
push
loopne
es
sbb
jle
mov
test
subb
mov
jne
adc
mov
or
adc
jo
sarb
fistps
push
cli
lock
iret
cmp
mov
push
lods
inc
push
xor
mulb
lock
inc
mov
xor
add
das
mov
mov
mov
rorl
jl
inc
js
ret
ret
adc
shll
fimuls
mov
rcll
xor
test
jno
icebp
inc
add
pop
xor
add
les
add
and
xchg
or
rep
mov
cmc
add
dec
in
outsl
mov
dec
or
lahf
lock
adc
out
in
and
imull
and
rorb
add
push
repz
mov
adc
jl
cmp
add
in
mov
or
add
or
or
sbb
or
fisubl
mov
or
cmpsb
movsb
pusha
add
pusha
add
imul
rcrl
and
push
pop
mov
or
icebp
add
fbstp
mov
jbe
mov
adc
mov
push
jb
sub
add
sub
mov
test
movsl
or
mov
test
rorb
xor
scas
cwtl
push
pop
movl
push
push
push
call
ds
dec
ja
xor
icebp
dec
hlt
pushl
push
clc
inc
loopne
fistl
cs
jge
daa
leave
or
and
or
adc
sub
mov
or
hlt
xchg
icebp
sbb
mov
call
into
call
mov
sti
outsb
sub
adc
call
cmp
hlt
decl
pop
pop
lret
sub
push
or
or
xor
xlat
add
and
mov
call
daa
cmc
mov
pop
lea
jp
ljmp
cli
sarb
in
pop
es
test
mov
mov
les
push
xor
jl
adc
scas
push
sbb
and
div
jp
or
adc
into
push
jb
push
add
loopne
and
jne
cmp
aas
adc
push
mov
pop
cld
xor
ja
add
sahf
cmp
xorl
fcmovnb
les
rcrl
mov
mov
in
and
jbe
popa
fcomip
mov
ret
in
jle
push
or
sub
push
aad
mov
inc
adc
pushf
aaa
ret
clc
add
icebp
dec
push
jmp
push
push
mov
inc
mov
push
test
dec
mov
js
jbe
xchg
das
jmp
adc
pushl
sbb
lods
add
pop
shr
push
inc
add
cmp
pop
inc
shll
lods
das
outsl
divb
iret
jg
jno
lret
add
xorl
push
lcall
add
xor
add
mov
scas
call
mov
jge
add
test
push
and
pop
mov
jl
add
cmp
sub
icebp
out
inc
mov
push
mov
and
and
sti
cmp
jne
pop
ret
out
cmp
cwtl
aam
inc
pushf
add
loop
xchg
mov
je
xchg
iret
call
and
pop
push
and
insb
dec
or
push
stos
add
mov
push
je
testl
sbb
adc
push
adc
js
push
inc
or
mov
fsubrs
pop
pop
pop
test
decb
add
adc
mov
repnz
imul
adc
pop
rclb
repz
lret
jmp
xchg
or
mov
and
sub
mov
clc
or
pop
add
data16
add
add
sub
jecxz
inc
add
nop
cmp
lods
ret
and
adc
jecxz
xchg
je
add
add
test
aam
lods
lock
add
jg
stos
adc
flds
rcll
add
ljmp
mulb
mov
push
push
sub
fcoms
xor
cmp
cld
adc
imul
add
or
mov
ret
xor
pusha
sti
in
jge
or
js
pop
test
push
ss
sub
nop
out
cmp
call
ret
enter
std
incl
andb
sbb
cmp
sub
xorb
cld
pop
je
imul
add
inc
inc
push
push
jbe
test
pop
dec
add
or
mov
sub
call
int
dec
inc
push
call
push
leavew
orb
push
call
fldcw
ret
cmc
sub
sub
or
xchg
int3
push
cmp
xchg
jl
adc
push
rcrw
pop
add
shlb
fdivrs
add
push
pop
int
cmp
jbe
test
sbb
outsb
or
sarb
lahf
adc
shlb
imul
adc
mov
setge
xor
test
sar
aas
mov
data16
or
pop
add
sub
jo
xorb
inc
and
cmpb
fsubrs
mov
roll
xor
lods
ja
jb
and
inc
test
push
add
test
das
enter
cmpsl
mov
lret
mov
mov
lods
adc
and
ret
and
repz
cmp
bsf
lretw
je
or
xchg
cmp
sti
lretw
dec
mov
lret
push
aaa
movsb
icebp
sub
mov
inc
nop
sarl
rorl
lea
lods
addb
dec
lods
shll
cmp
lods
clc
mov
loopne
pusha
xchg
leave
subb
out
mov
insb
shlb
xor
xor
shlb
push
xor
dec
or
add
mov
cmp
test
inc
loop
pop
sti
jl
xorl
call
call
ret
jmp
shlb
cli
add
aam
rcll
add
push
cli
and
leave
pop
out
mov
mov
scas
mov
popa
xor
mov
adc
testl
insb
fsubs
push
fbstp
data16
xor
in
leave
push
rorl
pop
ss
and
ret
pop
mov
and
inc
subl
mov
repnz
enter
mov
xor
mov
add
cmpsb
mov
mov
and
cmp
push
add
push
jb
sbb
sub
dec
lcall
sarb
hlt
test
lea
test
fsubl
in
in
pop
popa
ja
int3
add
push
pop
bound
sub
pusha
inc
andl
scas
test
pop
movsb
ds
pusha
add
cs
mov
add
dec
pop
push
call
loopne
dec
lock
sbb
add
sbb
test
rcrb
add
cmp
pushf
loopne
out
jecxz
out
hlt
pop
leave
test
mov
sbb
je
pop
jecxz
lcall
mov
dec
adc
adc
sbbb
cmp
addl
es
call
jp
sbb
or
add
adc
mov
icebp
push
adc
pusha
data16
or
test
or
add
das
and
jns
mov
lock
es
inc
push
out
push
xorb
mov
pusha
xchg
out
cmp
mov
cmp
pusha
add
and
int
dec
jecxz
loopne
or
jne
sub
out
mov
adc
cld
add
pop
std
je
dec
outsl
or
je
loopne
mov
and
mov
aam
xchg
inc
adc
pusha
pop
inc
and
adc
movsl
add
lea
inc
xor
or
ss
cmp
push
or
xchg
pusha
inc
loopne
and
aad
test
adc
loope
pusha
andw
pop
sbb
adc
loopne
add
loopne
mov
adc
rorl
mov
data16
mov
add
in
cltd
inc
pop
hlt
call
sub
jb
inc
pop
nop
jle
popa
pusha
sbb
faddl
pop
loopne
sub
movsb
fadds
fcoms
or
icebp
add
movsb
adc
push
ret
add
loope
dec
push
jb
adc
std
add
in
sub
dec
xorb
aam
lcall
lock
je
adcl
jne
adc
adc
push
loope
rcrl
ds
mov
add
data16
shr
fisubs
mov
sbb
pop
lcall
jb
and
add
push
add
das
loop
sub
mov
les
pusha
add
dec
incl
adc
stos
and
xor
das
inc
pusha
jl
pusha
mov
mov
orb
sub
fcmovb
or
scas
mov
jle
jl
add
pop
and
pop
movsb
add
pop
or
xchg
addl
jne
jmp
loopne
cmp
je
or
mov
ljmp
shr
jp
adc
jmp
pop
adc
add
je
inc
in
push
push
jmp
sub
adc
mov
adc
xor
push
in
out
loopne
push
inc
add
mov
sub
cmp
loopne
andl
xor
jl
xor
loopne
incb
test
js
jmp
insl
xchg
sub
mov
add
hlt
in
aaa
es
add
ja
lea
ss
adc
bnd
mov
add
scas
stos
imul
xorl
stc
inc
adc
sarb
and
xor
push
stos
adc
movsb
mov
orb
mov
ja
jmp
adcb
stos
loope
cld
jp
pop
imul
adc
cmp
add
inc
inc
dec
insl
or
out
push
mov
ret
in
add
push
sub
jg
idivb
xchg
xchg
push
adc
test
lret
adc
mov
inc
push
aaa
test
ljmp
inc
lock
inc
or
nop
push
or
mov
stos
dec
out
nop
decl
mov
outsl
sbb
or
ljmp
jle
add
jne
adc
add
mov
divl
lock
data16
xor
inc
loopne
cld
outsl
push
mov
add
jne
xor
add
and
jle
cmp
lock
cltd
imul
or
shll
ljmp
cmp
add
sbb
xchg
push
adc
js
data16
and
jmp
push
or
pop
imul
xchg
mov
and
rdtsc
adc
mov
mov
push
lock
lea
ret
or
sbb
or
cltd
orl
cmp
add
xor
and
ljmp
dec
jmp
inc
jmp
mov
mov
aas
or
lret
add
data16
iret
mov
jmp
stos
mov
pop
cmc
je
insb
or
cld
int
punpcklbw
mov
or
jmp
pop
dec
scas
clc
or
sub
xlat
jb
repnz
xor
xchg
cmp
mov
adc
mov
xor
pop
xorb
incb
icebp
or
test
mov
cwtl
fnstcw
dec
idiv
push
xchg
mov
andl
add
jg
loope
xchg
or
mov
and
sub
std
sub
jg
cmpsl
je
clc
inc
je
or
ljmp
fidivl
add
mov
test
adc
adc
push
or
add
mov
addr16
add
push
popl
mov
sbb
xchg
cmp
push
jge
add
mov
add
imul
rclb
mov
lret
mov
sbb
adc
hlt
mov
jo
xor
push
jmp
mov
or
lock
or
jmp
mov
es
nop
add
jo
sub
mov
mov
call
jb
testb
and
mov
mov
in
add
push
push
jp
icebp
cmp
sbb
nop
incb
jb
add
jne
xorl
incl
sbbb
mov
adc
repz
cli
call
dec
add
lcall
es
push
es
mov
adc
imul
out
adc
cmp
mov
pusha
jno
xor
jne
mov
or
aaa
repnz
divb
or
js
outsl
js
jo
lock
insb
jmp
lahf
lock
push
sti
data16
imul
add
push
push
out
jmp
inc
jl
icebp
cs
adc
jne
loopne
jmp
and
in
sub
idiv
popa
pop
push
xor
es
cs
pusha
jmp
mov
rcrl
jne
ret
push
sub
mov
xor
cld
mov
push
push
lret
ljmp
add
fildll
and
mov
lcall
or
ljmp
push
xor
push
les
icebp
dec
test
xchg
popf
repz
xor
and
shll
sub
xor
lret
mov
stos
popa
mov
push
push
mov
adc
or
lock
mov
ret
repz
cli
fwait
test
jp
mov
mov
insl
aad
add
add
inc
pop
xor
add
and
iret
sub
pusha
sti
push
sbb
jo
jmp
mov
test
and
je
push
xor
push
rcr
push
lret
cmc
jle
cmp
jl
mov
push
cmp
psllw
jno
add
orl
jle
cs
push
or
inc
inc
jle
mov
fstl
shl
add
sbb
rorb
aad
jnp
cmp
and
jo
push
mov
push
lcall
mov
jno
cmpsb
or
push
and
or
scas
push
fisubl
je
andb
jp
add
mov
sarb
mov
lcall
cmpb
fwait
xlat
dec
arpl
cmp
int3
or
insl
mov
mov
fdivl
push
fidivrl
pop
stos
in
pop
aas
or
or
xor
nop
xor
call
push
lock
pop
xor
adc
lock
mov
xchg
lret
inc
js
ss
xor
mov
stos
adc
jo
test
dec
mov
mov
add
sbb
imul
sbb
fistps
stos
and
jno
div
dec
out
pop
pop
clc
outsl
inc
stos
mov
das
mov
je
inc
mov
xchg
loop
adc
jno
jo
jno
dec
sbb
xchg
or
cli
push
inc
inc
loop
inc
and
push
xchg
mov
xchg
jae
dec
lods
loope
outsb
enter
fs
sub
cmp
cld
or
je
xor
cmpsl
xor
mov
pop
pusha
mov
pop
lcall
inc
sub
repz
add
icebp
adc
and
adc
lds
cld
icebp
push
pop
mov
push
xor
stc
mov
cld
add
sbb
pushl
out
sub
jno
xchg
jo
shlb
jbe
pop
hlt
pop
ror
inc
xchg
ror
repnz
xor
cmpsb
inc
in
sbb
inc
jle,pn
adc
add
icebp
add
out
pusha
shrd
icebp
sbb
adc
filds
ja
pop
or
add
mov
nop
or
lock
adc
add
icebp
add
mov
sahf
xor
mov
sbb
mov
sub
stc
add
and
mov
or
nop
adc
inc
rcrb
call
sub
pop
mov
jb
push
or
sbb
divb
sbb
pop
or
adcb
xchg
push
jmp
mov
repz
sbbb
fimuls
mov
adc
rcl
insb
mov
inc
jecxz
jmp
jbe
inc
popa
jmp
or
push
loopne
dec
push
hlt
mov
movsl
sbb
xchg
test
add
out
ss
adcl
add
hlt
int3
rclb
mov
loopne
adc
outsl
push
jg
imul
filds
lods
mov
aas
inc
outsb
mov
decl
call
add
and
pop
addb
outsb
je
stc
je
fcomi
pop
mov
add
push
add
mov
orb
mov
pop
adc
and
adc
sub
xor
mov
and
mov
mov
insb
pop
xchg
mul
add
orb
cld
push
mov
dec
jno
andl
add
ja
js
and
or
xchg
hlt
or
dec
andl
fildll
push
cli
lock
test
push
movsb
or
hlt
sbb
cmp
xorl
test
or
inc
popa
xchg
inc
ret
incb
mov
and
cmpsb
mov
ljmp
and
sub
ret
xchg
sub
adc
lock
xchg
pop
ret
sar
insl
add
xor
stc
rolb
movb
ret
dec
or
adc
rolb
or
shlb
mov
jmp
jne
xor
bound
pop
push
adc
sub
imul
and
bound
and
mov
jo
test
fs
rclb
rorb
cli
inc
mov
xchg
inc
shlb
popl
and
sub
push
inc
fsubrs
orb
pushl
sti
jle
adc
cmp
sbb
push
push
and
and
sbb
lds
jmp
js
rorb
jnp
mov
les
enter
cmpb
or
sarl
sub
and
and
ret
das
pop
mov
out
push
add
lds
repnz
stos
sbbb
or
enter
aam
mov
inc
pop
sub
jne
rorl
xabort
mov
sub
adc
inc
je
dec
mov
dec
rcrb
lock
and
out
imul
orb
push
inc
arpl
sar
repnz
shl
add
mov
test
pop
icebp
das
add
jp
cmc
sub
mov
jmp
xor
cwtl
xor
or
nop
cmp
into
das
or
push
test
fstpt
jge
mov
js
shl
lock
adc
adc
repz
or
dec
ja
rclb
lret
jg
mov
cs
jp
cs
lock
loop
lock
hlt
loop
sbb
sbb
push
movsb
xchg
clc
divb
cs
sbb
cmp
inc
scas
mov
sbb
loop
push
add
sub
sbbb
test
push
mov
call
shlb
xchg
je
jl
and
jbe
call
mov
jbe
decb
push
rorb
sbb
movsb
sbbb
fs
icebp
mov
sti
pop
mov
das
sarb
jp
dec
hlt
jg
iret
jmp
mov
inc
call
aad
pusha
pushf
xchg
lea
in
insb
or
sbb
push
mov
test
dec
or
push
push
cli
pop
sbb
pusha
or
add
pusha
mov
add
mov
loope
ljmp
add
je
subl
orl
mov
ja
sbb
add
jmp
add
lea
or
pop
out
adc
enter
dec
call
push
aaa
add
inc
and
or
add
jmp
jne
xor
or
ret
jae
lods
roll
xor
decl
loope
mov
add
cli
inc
gs
insb
leave
add
or
pop
or
or
sub
filds
in
ljmp
ror
pusha
xor
repz
and
xor
adc
loopne
or
push
mov
js
mov
mov
pop
insb
adc
adc
or
jmp
test
or
lret
repnz
mov
lock
mov
je
push
jle
and
xlat
popa
jo
repnz
out
bound
loopne
sbbb
ljmp
push
addl
mov
jmp
or
fwait
loopne
popa
jns
adc
mov
loopne
fldt
shl
inc
sub
rclb
fidivrs
jg
push
add
fdivr
movb
add
mov
and
or
test
add
orb
cwtl
push
pusha
add
push
dec
sub
or
jp
das
mov
adcl
add
loope
adc
add
mov
lret
ret
pop
or
xchg
mov
sub
negb
push
dec
pusha
mov
ss
push
popa
or
lods
and
sub
movsl
clc
add
jg
jl
mov
xchg
or
jmp
stc
mov
and
imul
pusha
pop
sub
sbb
add
dec
cmp
and
add
loopne
adc
sub
mov
or
sarl
adc
jle
hlt
ds
cmpsl
pusha
shlb
add
pusha
stos
and
jg
or
push
mov
movb
stos
in
cltd
lret
xor
jnp
add
test
push
mov
aas
sbb
or
loopne
adc
in
ljmp
out
xor
push
jo
add
add
add
inc
push
imul
sub
adc
xchg
sbb
add
jmp
ret
and
pop
xchg
repnz
or
add
decb
mov
mov
js
outsb
cmp
sub
ss
cmp
test
movsl
decl
mov
das
jno
adc
mov
or
mov
add
shl
mov
jbe
inc
cltd
sar
mov
nop
or
mov
lret
mov
or
push
sub
mov
jno
jne
sbb
push
xlat
or
add
scas
pop
test
mov
test
jmp
fildll
xor
lcall
or
sub
jg
je
or
add
ret
mov
gs
outsb
rcr
je
mov
in
pop
mov
je
push
pop
ljmp
out
cmp
arpl
xor
or
add
fmuls
int3
and
push
aam
dec
mov
ret
sbb
xor
or
jmp
fs
mov
add
xor
pop
jmp
mov
movaps
rclb
rclb
jb
xor
les
int
idiv
and
nop
xor
adc
cmp
data16
pop
mov
add
lds
jo
pop
in
push
push
les
pop
dec
xor
jl
sahf
icebp
test
scas
push
shrl
orb
inc
adc
push
xabort
mov
incb
jo
or
jne
aas
ja
inc
add
and
and
das
or
add
les
stos
ret
test
in
dec
add
stos
insl
fwait
cmpsb
mov
push
jl
mov
add
lret
rcr
mov
rcl
and
enter
imul
or
sbb
sahf
jns
int
sbb
inc
mov
inc
cmc
or
sub
aaa
add
pop
push
shlb
mov
add
mov
xchg
fimull
xor
inc
fdivs
adc
rcll
rcll
out
cmpsb
mov
dec
sub
inc
push
jge
sti
lcall
dec
popa
test
movsl
add
fidivl
push
adc
push
into
inc
outsl
push
add
jp
add
jbe
adc
push
adc
shlb
or
cld
stos
mov
data16
mov
add
push
pusha
push
adc
dec
sub
and
adc
push
xor
icebp
fimull
xchg
aad
lock
adc
ja
and
and
ret
mov
fiadds
pop
mov
pop
mov
push
fbld
jle
call
mov
mov
jmp
dec
mov
pop
push
dec
and
push
mov
xchg
lea
jo
mov
mov
stos
pop
pop
jg
pop
push
aaa
dec
xchg
inc
add
and
pop
pop
or
pushl
movsl
loopne
les
mov
pusha
cwtl
or
jge
sbb
add
mov
daa
xor
aaa
pusha
jmp
pop
cmp
fs
ret
pop
push
sbb
orb
enter
outsb
jmp
pop
orl
push
int
mov
xor
or
pop
shrl
mov
movl
inc
inc
and
dec
cmpsb
or
jl
mov
out
insb
fcomps
out
push
sub
mov
fucomi
sbb
shlb
jb
pop
mov
insl
jb
adcb
call
call
mov
mov
jl
push
adc
add
inc
or
sub
or
je
loope
or
push
subb
or
ret
pop
mov
dec
dec
lock
adc
out
pop
jmp
out
lock
xchg
add
pop
or
mov
adc
or
jno
fsts
xchg
mov
subl
xchg
add
cmp
inc
fcomp
xor
into
adcb
mov
jo
rorb
sub
cld
fisttpl
cmpl
sub
aaa
and
in
inc
xor
and
cmp
shl
adc
lock
cmp
jb
scas
es
mov
mov
cmc
jo
shlb
mov
mov
scas
push
lock
add
and
into
push
push
loope
push
or
test
int3
push
pop
adc
repnz
inc
aaa
mov
or
enter
add
insb
scas
or
hlt
lea
sbb
enter
fdivp
call
xor
inc
adc
jb
adc
or
arpl
ret
jmp
clc
jle
mov
mov
stos
lea
jae
or
sbb
outsb
iret
mov
jb
movsb
add
pop
insb
and
sahf
int
pushf
iret
adc
xchg
lock
push
dec
or
leave
insb
fmull
pop
mov
xchg
mov
jmp
lea
movsb
xor
adc
inc
mov
in
jl
inc
cs
out
clc
dec
fcoml
mov
push
cli
lods
push
cmc
add
sub
jnp
and
jl
aas
push
orb
and
inc
jmp
mov
xchg
or
or
cmp
sbb
push
sbb
push
cmp
pusha
lds
roll
sbb
xor
shrb
cwtl
push
call
or
into
add
xor
mov
outsl
pop
add
xor
dec
xchg
xorb
and
stc
divl
aad
loop
addl
xor
cwtl
or
sub
popa
mov
and
call
or
fisttps
add
mov
adc
ret
outsl
xor
mov
mov
inc
aam
decl
test
mov
dec
test
xor
push
lock
jmp
cmovo
push
sbb
lods
jno
scas
and
jmp
sub
sbb
pushf
and
pop
add
je
jb
movsb
ss
sbb
push
arpl
xor
jo
sub
sbb
xchg
sub
push
sahf
mov
test
pop
inc
mov
mov
add
test
int3
mov
jle
stos
insb
cwtl
in
add
sub
push
xchg
fisubs
inc
nop
xor
lock
scas
clc
inc
push
or
dec
mov
pushf
and
fidivrs
and
mov
adc
push
sub
mov
xchg
rolb
mov
add
std
push
and
cltd
dec
sbb
clc
pop
lds
pop
adc
mov
enter
sti
je
pusha
jbe
mov
nop
test
out
push
adc
sub
push
je
popa
jle
sbb
insl
pop
cmc
mov
add
je
mov
add
push
push
mov
jg
pop
xchg
mov
daa
push
inc
jg
push
je
or
int3
repnz
insb
cld
leave
clc
add
icebp
mov
add
cmp
mov
jbe
aam
js
fcmovbe
add
pop
ja
call
dec
xor
rolb
and
scas
sti
faddl
jbe
mov
jb
push
push
and
xor
xor
pop
push
call
pushf
xor
mov
xor
clc
inc
jbe
fdivr
addl
adc
jge
repz
add
add
int3
inc
add
cmp
jl
aam
jae
nop
mov
inc
and
mov
call
cmpl
cmp
inc
add
pop
pop
or
jae
rorl
aaa
fidivs
fcmovbe
adc
push
fadds
add
adc
dec
adc
jle
dec
imul
pop
aam
pop
roll
call
or
enter
subb
pop
add
sub
or
add
in
cwtl
add
scas
push
outsl
adc
add
pop
jecxz
pushf
icebp
iret
mov
orb
add
add
mov
adc
pop
out
in
adc
cmpb
adc
xorb
jb
dec
scas
fcomps
xorb
mov
loopne
test
test
jne
call
std
and
jb
xor
mov
nop
add
cwtl
push
jbe
in
adc
pop
movsb
jo
inc
lret
mov
push
xchg
mov
clc
scas
add
fsubr
xchg
xor
sub
pop
sbb
cmp
sbb
mov
les
in
mov
or
adc
mov
mov
push
jo
adc
mov
or
test
and
icebp
inc
cmp
test
ret
loope
and
test
add
lods
fisubrl
adcb
xor
movl
sbb
fs
test
and
cs
adc
enter
or
fistl
nop
mov
xchg
or
add
adc
push
hlt
inc
out
add
pop
loope
xor
mov
rorl
mov
cmpb
adc
xchg
jmp
lods
into
ja
je
sub
iret
test
mov
mov
sub
add
mov
add
sbb
push
add
mov
sbb
cli
pop
add
push
push
push
or
or
cmp
cli
add
sub
fs
fbld
mov
push
push
pop
call
mov
push
mov
cmpsb
jmp
loop,pt
and
lea
test
fadds
js
decl
fstl
icebp
add
cli
cs
add
jo
js
jno
subb
and
add
stos
test
xchg
fldt
adc
xchg
mov
push
sub
or
ds
cmp
addb
clc
mov
call
sub
sarb
fsubp
xor
mov
push
adc
mov
mov
adc
jo
and
fbstp
jl
jne
loop
add
jmp
and
xor
rclb
fimull
mov
movzwl
stc
popa
sbb
sbb
jo
ret
insl
cwtl
mov
push
or
and
xchg
sbb
mov
xor
test
dec
outsl
sbb
cmp
jae
push
test
or
mov
or
or
inc
jl
inc
sti
clc
ja
mov
leave
jmp
xchg
ja
or
add
adc
mov
mov
or
cmp
pusha
jg
bound
cld
adc
pusha
dec
std
jbe
xchg
loopne
push
andl
dec
xchg
arpl
lcall
cli
mov
push
adc
add
cmp
ret
lds
sub
test
popa
adc
sarl
sbb
add
ret
notl
mov
xchg
pusha
adc
bound
cmp
jecxz
push
ss
jbe
shr
mov
adc
push
scas
push
mov
inc
sbb
cli
in
and
aaa
mov
icebp
pusha
push
jb
clc
ret
sub
cmpsl
lea
bound
push
xchg
push
add
arpl
ja
add
push
xchg
cmp
dec
push
cmp
xor
incl
add
loopne
push
lea
loopne
push
adcl
add
adc
and
jne
pushf
nop
popa
add
les
inc
pop
jl
addb
mov
pusha
mov
or
call
sahf
nop
jl
jl
fnsave
jle
pop
sub
add
popa
and
mov
xchg
fistpl
and
outsb
insb
outsl
or
mov
lods
or
mov
dec
push
dec
push
and
push
mov
cld
bound
or
pop
dec
clc
out
orb
je
std
sahf
sbb
jle
sub
loop
cmp
pusha
jl
cmp
cmp
add
lret
pop
loopne
shrb
pop
mov
add
cmp
jb
and
push
in
sti
rorb
ja
cmp
ljmp
loope
ss
or
push
adc
sub
xchg
jne
popa
sbb
sbb
sti
add
push
mov
pop
add
jno
jmp
addl
adc
mov
loopne
pop
inc
push
and
nop
fsubrp
add
pop
pop
or
push
pop
jnp
roll
lods
shlb
sbb
xchg
fwait
sbb
addb
ret
js
movsb
enter
fidivs
cmp
jl
pop
and
mov
roll
bound
mov
inc
jo
mov
mov
mov
mov
adc
fnstenv
mov
sub
pusha
adc
push
jecxz
sbb
push
pop
cli
cmpl
and
push
xor
push
sub
pop
je
jbe
lea
sbb
jl
add
add
cmp
cmp
cmp
popl
and
cmp
add
sbb
dec
pop
sbb
pushf
popa
ss
add
pop
cmp
ds
push
adc
mov
and
test
in
jne
imul
test
leave
mov
pusha
call
sub
decl
push
call
jmp
jo
and
xchg
les
pop
push
jmp
mov
inc
imul
les
add
aad
inc
fwait
insb
mov
and
add
add
cmp
mov
daa
jmp
jl
sub
sbb
repz
inc
pushl
push
xor
ss
movl
dec
jg
lods
add
dec
add
dec
xchg
mov
add
arpl
arpl
ss
fwait
xchg
add
pop
subb
add
cmp
js
push
dec
loop
lret
jo
hlt
cmpl
mov
es
data16
and
ljmp
cmp
mov
adc
cmp
inc
jmp
or
bound
ret
push
lock
add
aam
xor
inc
in
out
jbe
and
imul
loopne
mov
adc
push
xor
or
inc
pop
and
pop
arpl
or
inc
ret
rolb
aam
test
insl
imul
mov
add
or
jle
jl
add
xor
scas
int
cmpl
pop
xorb
push
shlb
or
push
shrb
mov
repz
sbb
jno
lods
add
mov
ss
cwtl
jge
lret
adc
lahf
test
push
popa
call
cltd
xor
mov
dec
fiaddl
cmpsb
stc
mov
add
fdivl
add
mov
or
push
cwtl
lret
les
outsb
xchg
sub
adc
inc
popa
fs
mov
inc
cmpl
adc
dec
cld
push
jb
idivl
push
cmp
push
and
push
test
adc
jo
sbb
test
icebp
or
pop
mov
movsb
mov
add
in
and
inc
aaa
xor
sbb
cs
or
lahf
lods
loopne
in
jmp
mov
pop
sub
push
mov
int
push
shlb
xor
jmp
lods
mov
outsb
dec
adc
adc
outsb
add
mul
jbe
mov
orb
xor
ret
das
adc
add
add
push
push
ds
lods
xor
outsb
mov
and
mov
cmpsb
push
xor
hlt
pusha
adc
lahf
mov
loopne
pop
push
xor
loope
enter
dec
sub
push
inc
mov
mov
icebp
stos
movsb
and
cmpsl
call
or
push
jp
and
enter
add
testb
popf
xchg
cld
inc
or
pop
adc
sub
push
push
lcall
xor
xor
test
mov
xor
sub
sahf
loop
pop
sar
ja
ret
scas
add
or
or
xchg
cwtl
add
xchg
jb
clc
pop
push
add
fcomps
add
sbb
pop
mov
sbb
sbb
cmp
inc
inc
cmpsb
push
mov
or
xor
xchg
add
pop
mov
add
orb
into
call
and
movsb
movsl
dec
pop
rorb
icebp
jl
xor
cmp
cmpsb
xorb
mov
add
cwtl
and
ja
lcall
inc
testb
sbb
jb
in
mov
mov
adc
jb
clc
pop
sub
add
aaa
cld
jle
clc
rolb
loope
or
cmpsb
adc
in
lock
out
jno
call
sbb
lcall
lock
mov
xor
push
loope
mov
jg
stos
sub
cld
and
lods
mov
xor
cmpb
cmp
ljmp
mov
mov
repz
cmpsb
mov
jbe
clc
pop
leave
sub
ljmp
push
shlb
adc
int3
ss
loop
and
rorb
fbstp
scas
jne
lock
push
mov
test
icebp
push
pop
mov
ret
fisttpll
push
lret
mov
ret
xchg
push
std
repz
adc
xor
push
pop
test
inc
jle
lock
mov
and
into
lods
push
jo
dec
daa
inc
hlt
or
das
push
pop
decl
loopne
xor
inc
ja
fistpl
incb
mov
mull
add
add
jmp
cmp
jmp
andl
fwait
or
jmp
les
xchg
ficoml
adc
xchg
testb
std
je
inc
mov
aam
push
cmpsb
icebp
mov
jecxz
lods
incl
or
or
lock
jmp
out
jg
inc
ss
pusha
inc
or
jmp
mov
sbb
rclb
out
enter
and
cli
pop
mov
or
das
jmp
and
pop
sahf
adc
jbe
push
or
add
mov
xchg
mov
std
sbb
xchg
inc
pop
leave
cmp
data16
adc
lcall
jne
movsb
add
mov
rcll
lcall
lahf
add
and
clc
ljmp
mov
call
jo
mov
push
add
xor
int3
sub
push
in
enter
mov
outsb
stos
sarl
sbb
push
add
lcall
add
andb
xchg
mov
add
push
add
es
add
in
cld
jg
push
loopne
add
mov
cwtl
pop
pop
mov
pop
and
sbbb
fisttps
je
dec
adc
xor
sbb
cmp
jo
mov
rcl
ljmp
push
jno
data16
pop
xor
hlt
imul
add
icebp
push
decl
mov
push
xchg
loope
test
in
jle
add
cmc
push
mov
lcall
call
push
lods
mov
clc
push
mov
adcb
lahf
sub
adc
jno
jno
push
clc
mov
dec
or
stos
filds
incb
fs
push
jo
add
lock
fiaddl
pop
sbb
aad
sbb
jne
loopne
xchg
adc
pop
inc
mov
add
push
mov
data16
adc
cli
add
aas
jo
inc
pop
hlt
pop
dec
add
mov
or
ret
pusha
or
adc
push
aas
mov
jmp
add
push
nop
std
mov
jo
jo
mov
mov
lea
call
add
adc
aad
adc
clc
jmp
std
lock
mov
mov
lock
push
dec
jge
xchg
frstor
cld
inc
and
mov
fldt
jle
enter
das
movsb
inc
mov
add
enter
mov
and
movsb
loopne
cld
push
push
jo
jno
add
dec
xchg
lods
jg
fwait
sbb
sbb
jae
pop
adc
or
push
add
jl
and
pop
aam
mov
cmp
dec
xlat
cmp
mov
lods
jle
or
inc
mov
mov
pop
je
adc
mov
shlb
push
call
int
mov
jne
cmp
and
dec
push
rolb
shrb
add
push
mov
stos
stos
jo
push
inc
and
mov
jb
or
pop
movsb
add
jge
mov
xchg
sub
mov
inc
add
loope
in
les
movsb
rol
repnz
jbe
in
mov
jbe
test
xor
call
add
pop
cmp
mov
lcall
push
mov
ss
or
add
fstp
pop
sbb
add
and
mov
add
lods
cli
ret
fwait
and
inc
movups
test
lods
sub
push
daa
jne
add
inc
inc
xor
cwtl
xchg
push
mov
fadds
outsb
es
std
add
jne
lods
scas
lods
mov
mov
jbe
jb
xchg
mov
add
xor
xchg
out
pop
shlb
sub
les
jb
inc
or
dec
add
addl
push
and
cmpsl
lea
mov
addb
ret
cmpsb
push
xchg
xor
xor
lods
andb
or
add
ror
xorb
xor
push
or
popa
repnz
mov
test
mov
js
lea
filds
dec
sti
shlb
add
outsb
adc
dec
in
rolb
or
test
add
add
add
push
mov
mov
and
test
dec
movb
pop
gs
cld
je
out
data16
cmp
mov
xor
push
andb
scas
push
pop
push
inc
test
in
pop
sub
aaa
jno
xor
inc
int3
cli
scas
pop
popa
xor
cld
into
rclb
call
push
fs
add
adc
push
cmp
sub
jnp
jecxz
add
je
xor
add
je
aas
cmp
sbb
loopne
sub
pusha
out
add
and
sarb
call
fsubrl
ret
add
shrb
pop
inc
orb
push
pop
mov
xchg
cli
xor
ret
add
sar
add
mov
nop
jmp
jl
sbb
inc
decl
rol
inc
xor
xchg
push
xor
fmuls
mov
call
fildll
pop
shlb
push
shrb
push
pop
sub
ljmp
push
push
aas
adc
push
lret
fdivl
and
pop
pop
and
mov
rorl
pop
adc
adc
lea
idivb
add
cld
aam
shlb
sbb
adc
popa
push
rol
clc
push
or
inc
jp
push
push
pop
inc
js
xor
jl
test
adc
xchg
mov
clc
mov
shlw
adc
mov
je
xor
pop
sbb
push
add
jo
pop
mov
mov
cs
xor
cmpps
lock
inc
cmp
mov
xor
lahf
popa
sub
sbb
sub
jne
ja
pop
adc
push
rcr
xor
aaa
cld
xchg
cmp
push
fs
inc
rorb
shll
sbb
lock
pop
inc
in
push
push
stos
or
inc
push
jle
ret
enter
lods
notl
lods
in
push
sub
sbb
js
mul
jbe
aam
cmc
mov
loopne
incl
sub
mov
mov
test
xchg
fistpll
mul
sbb
push
xchg
mov
in
dec
ss
mov
popa
xchg
pop
push
and
aam
dec
dec
cld
xchg
nop
pusha
xor
push
mov
ret
or
aam
push
xchg
loopne
dec
add
loopne
add
cmp
test
push
aam
outsb
aam
inc
ret
inc
add
xchg
push
vmread
scas
push
cmpsb
sub
fwait
test
repnz
in
cs
cli
add
add
jae
lea
and
dec
mov
adc
loop
lea
cli
mov
jg
xor
loopne
movb
outsb
iret
aaa
or
push
add
je
add
mov
call
aam
jbe
aad
scas
inc
adc
pop
lret
aam
rorb
adc
loopne
and
cs
pop
mov
add
out
cmpb
mov
mov
loopne
or
fists
in
xchg
sbb
test
inc
scas
lods
add
cmp
lods
mov
jl
mov
xor
lcall
out
test
je
test
add
sub
xchg
mov
push
ljmp
sbb
popa
and
sub
add
dec
mov
sub
cmp
push
ret
popa
popf
inc
aad
adc
add
fidivrs
lea
adc
adcb
loopne
loope
adc
xchg
jp
jnp
cmp
or
popa
pusha
sub
pop
ret
jl
or
jne
mov
mov
adcl
lock
mov
dec
sbb
ret
adc
cmp
add
cmp
sub
or
mov
inc
add
orb
cmp
loope
xchg
mov
ss
nop
sub
mov
add
push
addr16
push
push
or
add
add
inc
mov
xor
xchg
loopne
test
es
jmp
dec
push
test
bound
leave
mov
push
sub
mov
rcr
mov
loope
insb
inc
add
test
call
sbb
pop
lret
pusha
pop
push
orl
sub
stc
inc
and
pop
mov
pusha
dec
push
jnp
movsb
loopne
je
jae
nop
cmp
pop
mov
insb
push
inc
add
xchg
rorb
add
pop
leave
call
and
in
mov
lret
insb
cmpsb
icebp
loopne
push
mov
sub
fisttps
or
or
shr
iret
loop
pop
sbb
add
popa
inc
lock
test
push
xor
inc
add
mov
sub
ja
add
pusha
adc
loopne
fdivs
clc
cmpsb
and
jecxz
mov
movsb
xlat
loopne
add
loopne
cmp
mov
incl
aas
dec
add
push
dec
jbe
mov
pusha
mov
adc
loope
push
in
pop
and
ret
push
popa
cli
or
loopne
sub
in
adc
insl
mov
push
and
inc
call
and
cmp
repz
aam
inc
add
cmp
cmp
dec
cmp
sahf
scas
les
or
adc
mov
mov
cmp
sub
mov
mov
pop
icebp
xor
int3
sub
push
lock
sbb
dec
push
mov
inc
add
call
in
ss
and
xor
mov
cmp
outsl
add
ret
mov
and
mov
adc
inc
fistl
aam
dec
and
pop
loopne
adc
movb
addb
inc
push
adc
jbe
jle
sub
sbbb
out
jle
test
ljmp
and
add
xor
xchg
dec
faddl
sub
repnz
dec
std
mov
or
jo
mov
jo
loopne
jnp
or
or
lret
mov
adc
fdivr
rorb
cmp
mov
add
dec
repz
pusha
in
xor
adc
sahf
jae
dec
std
jg
mov
scas
daa
jb
sub
sub
cld
dec
cmc
pop
push
mov
mov
or
add
jo
and
mov
cmp
outsb
data16
or
clc
into
add
and
pop
ljmp
xorb
or
inc
add
push
jge
sbbl
lret
pop
sub
cmp
mov
jne
dec
mov
push
ljmp
test
mov
cmp
add
dec
mov
fsubrs
sti
mov
inc
cld
loop
add
pushl
arpl
pop
lock
or
cld
mov
movb
mov
and
outsb
stos
push
insl
inc
and
out
nop
adc
pop
pop
repnz
jmp
sub
xchg
fldz
inc
decb
or
and
jo
test
xchg
movsb
mov
dec
mov
push
call
fst
pushl
mov
xor
cmp
jo
jo
sbb
les
nop
imul
push
fcomp
movsb
mov
jbe
mov
in
mov
push
push
aaa
pop
or
inc
mov
xchg
outsb
jg
mov
cmpb
daa
jg
pop
add
loope
call
push
pop
fstps
mov
cwtl
test
cli
pop
shll
aas
push
push
adcb
fdivl
and
mov
adcl
add
push
xor
cld
sub
repz
xor
jge
add
xchg
add
or
iret
push
push
js
add
and
xchg
xchg
sahf
cmp
je
mov
or
sbb
jle
jb
andb
mull
cwtl
mov
mov
scas
push
mov
ja
stos
and
jmp
push
hlt
adc
push
jp
or
fsubl
jo
jl
adc
mov
fdivrs
loope
aam
adc
add
and
and
and
xor
mov
pop
push
lock
cmp
pushf
cli
inc
add
xor
repnz
js
mov
call
pop
pop
and
cld
std
mov
rolb
nop
dec
loop
mov
pop
adc
or
adc
pop
lock
scas
and
pop
cld
push
push
stos
jo
add
pop
add
mov
jnp
cli
and
jmp
jg
insb
push
das
enter
push
mov
sub
xor
lock
push
inc
and
mov
or
jge
jb
stos
jg
or
inc
daa
cmpb
add
test
clc
mov
scas
mov
inc
adc
movsb
adc
ljmp
inc
add
ja
idivb
sbb
mov
push
bound
scas
xor
mov
sbb
jg
call
pop
test
idivl
lock
jmp
cmp
add
decl
popf
inc
pop
incl
push
mov
mov
ja
cmpsb
fildl
xor
add
push
insl
addb
mov
pop
pop
adcb
mov
push
lock
ss
ljmp
jb
sbb
mov
mov
lods
inc
loop
mov
out
or
and
mov
mov
in
add
stos
inc
std
mov
jno
inc
adc
or
test
loope
and
add
pop
sub
ja
mov
inc
sbb
adc
pop
adc
testb
lock
xorl
std
fstpt
sbb
lock
je
call
xchg
fadds
stos
xor
sbb
jge
adc
ret
repnz
xor
hlt
adc
lock
xchg
mov
push
jo
decl
fmuls
test
mov
jo
movsb
icebp
pushf
xor
dec
jg
mov
dec
es
add
push
sub
cld
or
mov
lock
xchg
aaa
pop
pusha
sbb
outsb
rolb
xor
add
xchg
push
rorl
xor
jp
jno
daa
aas
sbb
test
es
ret
mov
add
push
adcl
inc
out
or
test
je
mov
ret
adcb
testb
push
mov
dec
mov
mov
int
push
cld
sbb
insb
push
mov
shl
or
sbb
push
jb
sbb
insb
shlb
push
add
jp
pop
jmp
push
in
fcomps
sbb
sbb
and
or
test
inc
rorb
jge
adc
mov
movsb
jne
and
call
push
scas
sbb
or
sub
mov
incl
adc
aam
fsubp
mov
add
shlb
out
hlt
imul
fldl
fs
or
fbld
or
jo
test
pop
and
sub
mov
or
or
push
pop
mov
sub
jo
push
mov
bound
call
out
jg
cmp
xchg
call
test
inc
jne
xor
fwait
mov
adc
adc
call
pop
push
and
fiaddl
loope
add
bnd
xchg
test
mov
xor
jecxz
ds
lock
mov
or
mov
xchg
sub
add
fs
mov
pushl
adc
inc
mov
call
jo
jl
nop
pusha
jg
ljmp
adc
cld
wrmsr
or
pop
push
cwtl
and
icebp
ret
add
cmp
adc
add
add
mov
fiaddl
and
jne
mov
inc
or
repz
lods
dec
cld
add
or
or
push
es
ss
outsl
clc
cli
adc
rolb
lock
mov
adc
pusha
inc
es
push
test
movsb
add
aam
cld
mov
push
add
xor
ficompl
mov
push
push
pop
dec
idivb
add
sti
push
cwtl
xor
je
loop
pop
fmuls
fwait
dec
in
mov
push
jp
mov
les
icebp
loope
stos
pop
xchg
stc
sbb
jle
xchg
in
ljmp
sbb
mov
push
add
cli
or
mov
push
fsubl
add
pusha
movb
dec
movsl
mov
ljmp
pushl
outsl
sbb
sub
mov
ret
adc
pop
insb
adc
jo
lods
or
mov
jbe
pop
aas
add
xchg
inc
jnp
das
ljmp
push
adc
andb
or
add
cmp
jmp
js
ljmp
decl
mov
mov
push
xlat
aaa
jne
add
push
push
dec
add
mov
mov
add
aas
gs
push
or
xchg
andb
adc
dec
dec
dec
lahf
pop
inc
xchg
push
aam
call
and
test
or
and
xorb
fbld
out
dec
pusha
add
cmc
mov
incb
mov
and
inc
push
cld
inc
push
into
adc
mov
insb
xchg
dec
push
sbbb
lock
jnp
insb
adcl
sub
adcl
inc
xor
sbbb
sbb
pop
sub
push
cmp
inc
inc
clc
xchg
andl
stc
sub
push
sarb
ret
pop
sbb
outsb
mov
push
dec
sbbb
loopne
lods
or
or
hlt
ret
and
rolb
mov
orb
jg
call
jne
aas
rolb
adcb
mov
je
mov
repz
rolb
shlb
test
outsb
push
or
mov
and
push
enter
dec
std
add
ja
jmp
mov
test
mov
push
and
jg
mov
add
sub
je
push
icebp
add
pop
arpl
mov
cmp
adc
mov
push
mov
jl,pt
icebp
fimuls
pop
adc
pop
pop
inc
or
cwtl
call
sub
enter
add
mov
std
jg
ret
outsb
cmp
mov
outsb
and
adc
mov
mov
clc
push
xor
lods
xchg
ljmp
ret
cmpsb
xchg
sbbb
idivb
adc
pop
insb
sbb
gs
adc
pop
pop
push
lods
mov
out
add
push
xchg
rcll
pusha
add
sarb
fs
test
inc
mov
cli
jae
pop
mov
loope
pop
xchg
cmp
dec
cmp
test
loop
scas
sbb
jo
mov
pop
xor
cld
pop
lcall
les
or
or
lock
or
das
inc
pop
mov
add
push
call
add
inc
or
cmp
int3
adc
or
sub
scas
roll
jecxz
stc
sub
pop
int3
fistpl
add
mov
add
or
add
inc
sbb
outsb
mov
icebp
pop
lea
test
and
cmp
dec
xchg
shl
sbb
popf
cli
jmp
jmp
imul
push
jmp
aam
inc
mov
or
xor
call
dec
jl
dec
push
enter
push
in
ja
push
pop
hlt
cmpsb
sub
fisttpll
hlt
loopne
loope
xchg
loopne
dec
cld
not
add
lock
addr16
inc
je
sbb
push
jo
add
and
popa
loop
mov
and
and
data16
xchg
pop
out
dec
cld
and
cmpsb
jmp
jmp
into
or
loopne
mov
jp
dec
jo
test
mov
jb
inc
js
dec
out
mov
aaa
xorl
call
bound
mov
loopne
outsb
leave
add
ss
jle
jle
jle
decb
jl
add
fdivs
pop
fiadds
pusha
push
inc
pop
movsl
cmpb
call
adc
jge
bound
shr
mov
add
call
cmp
push
sbb
addl
cmp
das
add
addr16
fsts
add
jg
dec
push
ret
push
or
pop
cmp
test
adc
or
xorb
pushf
addl
xor
fmuls
xchg
pusha
jb
mov
or
dec
jne
push
mov
mov
jge
pop
pop
icebp
mov
mov
ret
loopne
inc
or
insl
lods
jmp
add
test
mov
push
pusha
jp
pop
or
cmc
jecxz
popa
outsl
push
jmp
bound
and
mov
mov
or
push
and
loope
sbb
clc
mov
sbb
fcoms
cmp
aaa
add
fcomps
pusha
pop
test
ror
push
call
bound
out
push
add
adc
or
add
xchg
pop
xchg
es
movsl
clc
popa
push
outsb
adcb
fstpl
shlb
or
mov
and
es
adc
mov
xchg
push
sub
ja
loopne
lods
or
push
push
scas
mov
je
loop
aas
pop
push
scas
or
lock
adc
loopne
pusha
scas
hlt
notb
outsl
jl
dec
test
repnz
jg
adc
jb
lret
fidivrl
sub
or
dec
test
insb
push
stos
sbb
mov
sub
inc
dec
add
dec
jge
mov
sbb
push
dec
push
add
insl
or
xor
scas
xor
pop
pop
test
dec
cmp
pop
mov
xchg
xor
and
or
fisubl
popa
pop
mov
subb
and
add
repz
clc
test
pop
sub
lret
loopne
pop
shrb
push
jmp
jnp
add
or
adc
push
hlt
adc
call
je
add
loopne
loope
mov
out
cld
mov
lcall
fisttpl
lock
adc
push
jl
pop
mov
adc
mov
pusha
dec
hlt
adc
fnclex
inc
aam
push
orb
loopne
testb
outsl
fldl
pop
adc
inc
ret
ja
add
jne
or
std
inc
inc
ds
push
pop
loopne
jecxz
lea
mov
lods
loopne
inc
outsl
idivb
loopne
test
fmull
xor
add
ss
incl
arpl
dec
xchg
add
lock
loope
rcl
call
je
add
add
rclb
jb
mov
lock
ret
add
mov
and
push
pop
ja
call
add
mov
pop
iret
mov
and
push
aas
push
nop
lock
lea
lods
or
fistps
fcmove
adc
dec
and
lock
cmp
in
mov
pusha
mov
lcall
pop
addb
inc
cmpb
sbb
lock
jg
dec
out
or
add
sti
inc
add
mov
add
shlb
pop
insb
clc
mov
in
loop
ljmp
mov
ja
or
mov
sbb
xor
test
ss
push
mov
jl
push
fisttpl
push
cmp
mov
ret
outsb
outsl
mov
aaa
js
and
mov
je
cmp
adc
loopne
pushf
ljmp
adc
add
mov
pushl
addl
sbb
negb
adc
mov
adc
push
enter
cmp
hlt
imul
add
mov
aam
dec
adc
adc
sub
dec
jo
pop
mov
mov
adc
add
lock
sbb
fwait
or
bnd
mov
xchg
popa
push
inc
jbe
popa
shrb
insb
add
dec
es
ficomps
adc
adc
xor
int3
popa
stos
dec
into
clc
mov
cmpsb
fimuls
aaa
movsl
mov
repz
cmp
sbb
test
jo
add
and
mov
mov
insl
jae
sub
adc
test
rolb
cltd
outsb
mov
sub
sbb
cli
lcall
mov
cli
incl
lock
or
pmaddwd
mov
mov
xchg
sub
mov
jo
inc
xor
cmp
add
jo
push
sbb
adc
fs
jmp
mov
xor
mov
add
ja
xchg
je
lock
int3
add
add
add
and
dec
push
or
incb
add
xchg
adc
fdivl
mov
mov
sub
cli
mov
jecxz
out
pop
test
ja
adc
xchg
inc
les
push
movsb
push
push
pop
hlt
lea
mov
inc
clc
fnstsw
xor
add
or
push
and
inc
mov
dec
loopne
inc
jg
lret
int3
jo
or
lock
fcompl
pop
xor
imul
movsb
sub
sbb
jne
jo
jmp
jno
test
or
inc
dec
clc
xlat
fisubrl
push
lods
inc
mov
sbb
mov
daa
icebp
mov
push
ljmp
inc
mov
lods
fwait
jb
jo
icebp
movsb
call
test
or
xchg
cwtl
clc
lds
mov
mov
add
test
dec
sbb
and
push
aas
jle
dec
dec
cmp
shlb
mov
pop
xchg
shll
out
lea
mov
lods
decl
dec
call
or
or
out
insl
incl
dec
or
jo
jmp
out
clc
push
in
call
cmp
adc
push
dec
push
xchg
jle
mov
push
jg
cmpsb
xchg
out
mov
adc
and
mov
mov
pusha
sar
mov
mov
xor
xor
add
push
inc
add
loopne
je
mov
dec
xor
rcrb
adc
js
add
lea
pusha
bound
inc
sar
lds
cmp
ficoms
sub
jo
jbe
pushf
out
mov
insb
or
mov
cmp
lea
adc
push
sub
orb
push
and
into
shr
ds
fsubl
icebp
lret
xor
push
fcompl
inc
inc
outsb
mov
xor
push
add
add
scas
les
adc
movsb
lock
mov
movsb
jmp
ljmp
push
mov
add
je
push
pop
or
xchg
cli
push
clc
cld
loope
je
mov
into
push
pop
jge
pop
dec
clc
adc
mov
das
lock
ret
pushfw
aam
and
mov
stos
add
jnp
inc
mov
ljmp
inc
mov
jb
shll
je
decl
jmp
adcb
leave
push
dec
add
cld
pushl
push
cld
fadds
clc
adc
je
xor
xor
xor
lret
xchg
mov
add
push
int3
data16
and
xchg
hlt
cmp
fmuls
inc
cld
aaa
insl
out
mov
xchg
mov
lock
adc
add
fwait
cmp
pop
pop
xor
sub
jno
xor
aad
enter
pop
push
test
adc
jl
mov
cmp
sbb
fmull
icebp
sub
fidivs
adc
sub
sub
pop
cmp
out
lock
pushf
and
add
out
jp
and
pop
add
pop
shrb
cwtl
repz
test
rorb
adc
popf
and
ror
jmp
clc
mov
push
inc
mov
mov
je
rol
adc
push
adc
call
pop
push
cmpb
ret
xor
jo
mov
fisubl
sbb
out
sub
pop
loopne
mov
adc
loope
dec
sbb
jo
jmp
mov
xor
push
jne
xchg
jl
xor
jno
cmp
jo
mov
js
adc
and
xor
pop
or
xchg
nop
sub
add
aaa
cld
cld
mov
sbb
cmp
push
cmpsb
or
les
pop
or
add
and
xchg
clc
mov
or
in
mov
add
add
mov
jo
push
push
into
and
imul
outsb
push
mov
sar
inc
lcall
les
push
mov
fsubrs
mov
test
pop
incl
mov
mov
inc
mov
loop
pop
cbtw
pop
out
pop
cmp
pop
into
pusha
mov
push
ljmp
loope
inc
xchg
and
xchg
cli
cld
xchg
fdivr
push
push
mov
push
mov
push
push
push
sbbb
pusha
xchg
push
cmpsb
aas
add
stos
sub
add
fistl
add
xor
andb
add
jmp
jo
inc
mov
push
jg
loopne
fucomi
test
fstl
mov
adc
lret
push
add
insb
add
sbb
test
add
test
mov
adc
pop
and
dec
adcl
aad
sbb
rclb
je
pop
orl
lods
stc
mov
cmpsb
mov
inc
push
mov
ret
inc
fsubrs
mov
add
inc
push
scas
cmp
fisubrs
cs
cli
push
sub
inc
pop
fdivs
cmp
add
and
gs
lods
lcall
pop
or
jno
clc
or
orl
stos
add
int3
add
push
sub
fdivr
push
inc
dec
xor
adc
ja
cli
sub
push
cmp
ljmp
lret
lcall
rcrb
cmp
adc
adc
lock
hlt
add
in
or
cmp
adc
add
fsubs
lahf
add
sbbb
mov
rolb
mulb
inc
pop
pop
jns
and
or
inc
adcl
in
and
push
xchg
cmp
xor
lret
dec
or
mov
or
rcrb
cmp
inc
xchg
shlb
mov
sub
adc
nop
jbe
insl
lods
and
adc
mov
mov
jae
lds
push
push
testb
mov
jg
fdivr
daa
loop
rcrl
shlb
mov
das
xchg
sub
mov
xorb
pop
lea
cwtl
pop
add
mov
nop
rorb
rorb
adc
and
lock
or
repnz
pop
sbb
jge
xchg
mov
outsb
mov
out
push
loopne
sbb
test
sbb
mov
or
sbb
inc
popf
roll
jg
jp
popf
dec
and
xchg
lods
das
lret
add
mov
rcrl
mov
roll
xchg
adc
xor
and
cmp
repnz
add
insb
push
fldl
pop
dec
lea
ret
add
call
fldenv
sbb
out
loope
scas
popa
inc
adc
or
jmp
outsb
shlb
add
jne
add
adc
push
ljmp
adc
dec
cs
add
cltd
or
aad
out
sub
aaa
aaa
inc
adc
jbe
ds
arpl
or
push
add
adc
inc
ja
pop
loopne
jge
add
or
out
rorl
or
pop
and
rcl
incl
inc
inc
mov
jle
movsb
pop
loop
push
test
clc
mov
outsl
adc
cmpsb
xor
push
and
out
roll
lcall
addl
add
and
mov
xor
xor
daa
lahf
insl
adc
lret
std
ljmp
mov
pop
pusha
inc
scas
loopne
pusha
sub
inc
pop
add
fwait
rcl
mov
and
add
das
xor
fdivl
jge
cmp
or
xor
fimuls
mov
lea
sub
call
xchg
and
add
shrb
pusha
orb
and
dec
pop
mov
test
pusha
out
dec
dec
aas
lret
clc
xor
push
dec
xchg
loope
pusha
shl
insb
fmull
sub
in
add
and
pop
std
pusha
sub
xchg
test
xor
test
jne
roll
loopne
hlt
bound
mov
dec
cmpsb
shlb
sbb
xor
popa
insl
stos
outsl
or
mov
call
lods
mov
int
or
pop
or
jle
sbb
aas
hlt
cltd
add
pop
push
cmp
inc
aaa
mov
dec
loopne
cmp
loopne
movb
cld
pusha
bound
adc
and
dec
dec
dec
add
or
pop
push
cli
cs
xorb
int
push
push
cwtl
clc
ja
ret
gs
mov
test
mov
adc
and
fcmovnu
andb
pop
push
es
loopne
out
mov
inc
fisttpl
xchg
lods
out
inc
cmp
pusha
pop
outsb
nop
js
push
sub
int
push
inc
adc
test
inc
cld
into
cvttps2pi
ljmp
bound
fwait
popa
cmp
jae
hlt
aad
cmpsb
fistpl
cmp
cmp
or
enter
dec
adc
adc
xor
scas
adc
pusha
push
pusha
or
pop
mov
xor
outsb
es
scas
xor
daa
cmp
pop
mov
ret
or
popa
inc
loope
pushf
ss
ljmp
pop
or
adc
test
ss
lock
outsl
clc
xchg
add
loopne
pushf
aam
call
add
pop
sahf
repz
adc
mov
vpmacsdqh
jb
sbb
loop
outsb
sub
loopne
fadds
subb
sbb
insb
push
jbe
in
pop
lock
add
inc
adc
vmwrite
pusha
lahf
ret
shl
pop
fsubl
loope
pop
mov
mov
adc
loopne
inc
and
arpl
push
stos
sbb
mov
fdiv
inc
and
in
add
inc
jp
cmp
xchg
loopne
ret
shr
ret
rolb
push
loope
mov
cli
xchg
loopne
add
jmp
and
call
mov
and
and
cmp
push
lret
adc
push
test
mov
js
mov
cmpb
adc
ret
add
xor
pop
sbb
push
testb
or
add
lret
add
inc
scas
add
push
jge
jo
add
or
ret
xchg
or
push
mov
cmp
shrb
shlb
xchg
push
mov
sbb
cwtl
xor
inc
pop
cli
add
clc
push
sub
jg
add
mov
notl
cmp
add
sar
mov
sub
push
xor
aaa
or
xor
cs
inc
add
outsb
mov
jo
add
push
daa
add
xor
ja
imul
lods
and
pop
lret
dec
cmc
add
pop
insl
jmp
push
xchg
push
mov
sub
es
pushl
addb
jo
dec
and
lods
call
sti
mov
ja
aam
mov
add
std
mov
add
push
add
push
jb
cmp
in
mov
pop
push
les
rolb
nop
icebp
stos
add
out
inc
add
int3
xor
jp
in
push
int3
call
std
or
xor
leave
jl
bound
cmp
push
adc
icebp
es
cli
sub
call
arpl
and
inc
jg
ret
add
inc
xor
sub
push
sub
and
mov
mov
js
jno
shrb
mov
sbb
and
rolb
fwait
shrb
push
sbb
or
pop
mov
pop
cmpsl
lret
leave
jo
jno
in
jl
pop
inc
test
pop
mov
sbb
dec
and
popa
shl
mov
add
pusha
add
dec
pop
mov
inc
inc
jo
mov
enter
pop
ficoml
dec
adc
aaa
cmpsl
mov
xor
divb
or
std
push
adc
inc
inc
test
mov
call
mov
jl
btr
lahf
add
adcl
lcall
je
pop
mov
mov
les
repz
xor
adc
push
mov
mov
test
mov
mov
xorl
lock
arpl
pop
divb
lock
dec
loopne
andl
cld
pop
push
cmc
push
arpl
cmp
pop
fldt
call
mov
adc
repz
icebp
jo
cld
xchg
xor
jno
cmp
jl
and
test
inc
pop
fs
xor
mov
or
hlt
jg
adcb
jb
inc
jno
loopne
sbb
and
and
pushf
clc
outsl
mov
add
das
pop
jecxz
adc
cmp
out
aam
cmp
lret
orb
cmc
jg
iret
jo
test
fsqrt
outsl
jle
jo
adc
dec
inc
xor
movsb
fdivr
ja
cmc
and
ss
je
xor
mov
cmp
lock
adc
adcl
mov
subb
inc
mov
orl
sarl
cmp
dec
add
movsb
xor
inc
mov
mov
and
orl
clc
mov
js
dec
push
cwtl
mov
or
incb
push
fs
jp
ret
mov
sbb
xor
inc
or
dec
cli
mov
cmp
push
cmpsl
push
xor
xor
dec
ja
mov
push
cmpb
loopne
or
gs
mov
xchg
or
or
divb
or
mov
aaa
icebp
mov
test
mov
iret
xor
lock
add
rorb
test
mov
xchg
or
lock
mov
and
test
pushl
add
mov
out
jo
sbb
adc
ja
add
lock
cmpb
add
jle
inc
test
ss
push
test
jg
push
lea
jg
cmc
jl
xchg
insb
icebp
push
imul
push
xor
xor
ljmp
push
ljmp
adc
fiadds
enter
out
or
ret
roll
test
xor
or
push
xchg
decl
push
cwtl
mov
mov
or
xor
aaa
xor
out
call
sub
sub
dec
ljmp
clc
shl
lock
shl
daa
jo
sub
popa
jo
gs
jmp
lock
cmp
inc
icebp
inc
mov
cmc
es
push
pop
adc
in
push
jbe
push
adc
pop
push
js
sub
pop
and
sub
fbstp
fwait
or
pusha
inc
and
xchg
pop
adc
adc
and
xorb
mov
pushl
jns
ss
add
sub
and
jmp
add
xor
pop
cmpsl
stos
or
lea
pushf
lock
jo
cltd
cli
decl
inc
mov
mov
insb
mov
ret
sbb
and
jo
cli
adcb
jo
jmp
jle
out
mov
divb
pop
fucomip
push
push
gs
or
loop,pn
mov
hlt
push
stc
and
subb
outsb
lock
sub
add
mov
mov
test
mov
cmp
cmp
decl
lock
in
loopne
push
sub
xor
push
mov
sbb
cmc
es
fwait
mov
sub
lahf
bound
or
icebp
loopne
or
or
add
pop
sub
push
pop
sbb
pop
pmuludq
or
mov
xor
pusha
xor
mov
xchg
xor
lock
sub
jae
xor
je
test
pop
das
or
cmp
xor
push
bnd
add
adcb
outsl
call
adc
sub
mov
cmp
fdivr
stos
sbb
xor
popa
jnp
lock
in
adc
test
adc
xor
sub
xchg
and
je,pn
lods
lea
call
fdivrl
xor
int
sub
mov
add
cwtl
adc
add
cmp
inc
je
sub
pusha
icebp
mov
pop
jl
jg
fucomi
xchg
jecxz
je
in
jmp
cltd
lcall
adc
jg
fdivs
shll
push
clc
add
ljmp
xorl
faddp
mulb
jbe
push
inc
sbb
mov
call
pop
and
xchg
or
mov
arpl
arpl
inc
jo
cmp
add
mov
xor
cmpsb
inc
dec
mov
les
pushf
mull
loope
popa
es
push
xor
mov
jl
fistpl
ret
aad
mov
pusha
push
rorl
sbb
mov
pusha
nop
or
ds
cld
push
sbb
mov
test
adc
sahf
adc
mov
sub
lea
pushf
hlt
push
lcall
jne
nop
arpl
pop
mov
fsubrs
xchg
insb
fdivrp
push
add
push
add
inc
mov
jb
pop
mov
or
xchg
movsl
or
or
and
mov
dec
cmp
mov
add
movsb
je
scas
movsb
mov
je
loopne
ret
dec
and
loop
xchg
pop
add
push
jmp
push
push
adc
dec
add
sub
adc
add
or
cwtl
clc
pop
and
pop
add
adcb
jne
add
mov
ror
mov
xor
inc
popa
nop
sahf
pusha
pop
test
das
insb
sub
fstpl
shr
out
jle
sub
push
or
icebp
subb
mov
rorb
push
int3
rorb
addb
mov
repz
adc
xor
test
stos
inc
sub
xchg
mov
out
cmp
jb
lock
int3
and
xchg
xchg
inc
ja
nop
dec
mov
add
adc
enter
decl
sub
insb
push
mov
push
dec
jb
adc
mov
stos
jbe
xor
or
lret
sbbb
xchg
aad
int3
sbbl
je
mov
loopne
jbe
leave
ret
push
sar
popf
clc
add
cmp
add
pop
mov
nop
push
fiadds
inc
xchg
add
pop
bound
je
je
xor
lods
jg
div
mov
add
jg
cs
mov
ja
xchg
lock
inc
std
dec
push
and
clc
test
sbb
inc
jb
ret
fbstp
ja
jbe
add
rorl
adc
sbb
pusha
gs
pop
rorl
into
sti
cmp
sbb
into
ret
or
pop
cmp
push
jecxz
mov
adc
inc
lret
scas
add
adc
test
jge
push
popa
push
dec
shlb
pushf
clc
push
inc
pop
mov
add
add
add
out
cli
mov
pop
add
xor
add
ds
push
push
fwait
je
fistl
jle
ret
add
push
pop
andl
clc
push
add
adc
add
adc
jg
inc
cmpsl
mov
pop
ret
pop
gs
pusha
decb
dec
adc
sub
inc
xchg
or
jno
pop
push
xchg
out
sbb
rclb
sbb
lods
in
jl
mov
jle
push
adc
jp
xor
out
out
pop
rorb
cli
outsl
push
rolb
ret
add
mov
or
test
adcb
test
dec
mov
cmpsl
movsb
xor
or
loop
jo
jne
rcl
or
add
cmp
cmp
pop
shlb
xor
call
pop
and
test
mov
sub
shl
ret
inc
ret
inc
repz
rorb
test
jl
dec
sub
lret
rclb
shlb
dec
push
pop
pop
or
loopne
sub
ret
or
add
jbe
je
and
pop
outsl
mov
arpl
mov
in
lods
add
scas
lock
aaa
inc
lea
cmp
jecxz
add
cltd
je
cmp
cmc
add
pop
arpl
sbb
rorl
sub
sbb
cmp
add
or
jmp
insl
loop,pn
mov
pop
loope
cmp
sbb
and
push
or
sahf
lret
xchg
flds
mov
incl
adc
popa
sub
mov
por
repnz
in
rolb
mov
add
add
cs
cmp
add
sub
sub
add
add
lods
insb
mov
add
sti
mov
pop
insl
pop
and
jo
and
stos
dec
sub
loopne
or
sbb
or
add
fldl
call
fdivrs
adc
incl
test
loopne
push
int3
mov
push
mov
or
movsb
sti
jmp
jbe
or
movsb
and
mov
clc
or
cwtl
fs
repz
hlt
decl
adc
loope
es
or
movsb
inc
sbbl
push
icebp
jbe
sbb
ficomps
ret
dec
popf
fdivr
mov
popa
xor
movsb
in
bound
jb
jl
mov
xchg
loopne
mov
or
xchg
mov
push
test
lcall
add
sbb
es
fsubr
inc
std
inc
push
loopne
call
dec
loope
adc
sbb
mov
fs
adc
inc
pop
aaa
inc
pusha
push
pusha
pop
mov
adc
cmp
fwait
jbe
pusha
inc
add
adc
insl
jg
sbb
and
pushf
cmp
push
xchg
test
inc
lcall
xchg
clc
inc
mov
ljmp
pusha
or
push
loopne
test
fdivp
adc
fs
and
cmp
pushf
add
and
ds
inc
pusha
sub
xchg
lahf
mov
inc
pop
outsl
decb
incl
mov
call
outsl
cmpsl
add
inc
inc
jbe
jp
fwait
dec
cmp
scas
loopne
test
adc
pop
lret
call
or
pusha
enter
lock
test
xchg
jecxz
addr16
pusha
xor
pop
das
mov
and
jg
pop
sti
pusha
daa
or
push
pusha
xor
push
rcl
or
mov
aam
ret
mov
cmc
incl
loopne
push
adc
in
inc
loopne
loopne
or
pop
xor
popa
add
mov
dec
push
add
scas
lea
dec
popa
add
fsubrs
test
and
loope
xchg
pop
ret
cmpsl
inc
dec
ljmp
addb
mov
xchg
hlt
mov
clc
add
sbb
adcl
push
loopne
pushl
shlb
cmp
or
movsb
and
mov
adc
or
in
inc
xor
xor
je
cmpb
and
add
push
outsl
hlt
je
shrb
or
add
push
test
adc
jne
lcall
dec
jbe
jo
aam
jb
in
jo
jp
call
cmpsb
fimull
push
cmp
cmp
push
push
pop
inc
imul
faddp
push
xchg
push
xor
clc
or
test
lahf
mov
add
mov
sub
shrb
push
inc
ljmp
dec
lret
aam
mov
or
dec
mov
and
ret
icebp
push
adc
pop
and
mov
sub
sub
push
xor
fcoml
or
and
pop
mov
adc
aam
adc
and
cli
loopne
or
or
add
push
adc
icebp
jo
call
aas
dec
push
scas
push
and
mov
jno
mov
jo
cmc
xor
mov
inc
jmp
addr16
insl
fiaddl
clc
mov
sub
pop
and
or
cwtl
inc
clc
lcall
je
mov
mov
jbe
jo
sub
xor
add
shrb
xor
pop
fmull
outsl
push
jno
push
inc
test
cs
jb
pop
adc
adc
sub
adc
add
add
adc
add
or
jmp
mov
lock
jmp
rcrb
ret
movsb
ret
sub
shrb
pushf
push
popa
jo
or
lock
call
dec
push
int3
add
xor
adc
lahf
xchg
nop
dec
or
in
out
dec
mov
fs
mov
push
xchg
add
pop
faddl
bound
xchg
pop
cmp
adc
rcll
cmpsl
inc
dec
pop
test
xor
xchg
jle
lock
push
test
cmp
add
sbb
test
lods
pop
or
test
inc
filds
icebp
add
lock
push
and
pusha
pop
add
outsb
nop
sbb
outsl
cmp
add
mov
je
and
fs
loope
incb
aaa
icebp
or
cmp
jb
or
or
add
imul
mov
sbb
icebp
xor
mov
adc
adc
in
push
leave
repz
push
test
jae
push
mov
je
je
jne
hlt
mov
sub
divl
or
jo
mov
cmp
mov
mov
push
push
sti
dec
dec
pop
pushf
push
cmpb
inc
mov
out
pop
add
bound
clc
jp
inc
aam
xor
add
cmp
mov
dec
jg
jmp
mov
outsl
cmpsb
mov
je
add
dec
push
cmp
je
pushf
mov
xor
sub
sub
xor
dec
rolb
mov
sub
pop
jl
lcall
divl
rolb
mov
loopne
clc
xchg
and
jge
cmp
cmp
mov
dec
bound
mov
das
cmpsb
and
call
jo
jo
pop
jmp
dec
incl
rclb
or
addl
sbb
stos
push
mov
lock
hlt
hlt
jb
add
cmp
mov
mov
push
push
push
sub
or
leave
cmp
gs
ja
jmp
lock
add
clc
push
jo
jne
add
sub
cld
je
mov
or
xor
rcrl
push
scas
rclb
ja
pop
fdiv
xorl
lds
bound
fiaddl
mov
dec
sub
pop
push
mov
mov
cmp
es
inc
in
adc
ss
adc
inc
inc
pop
lock
xor
or
clc
or
push
add
add
push
lock
das
jne
jg
add
je
jnp
loopne
andb
addb
inc
bound
pop
je
js
and
and
lock
add
xor
mov
dec
scas
pop
and
mov
outsl
push
clc
sub
push
jo
jne
psubsb
adc
mov
jo
cwtl
mov
fs
sbb
push
xchg
jecxz
or
add
rolb
mov
loop
inc
adc
or
mov
mov
and
data16
mov
jb
ret
or
je
add
inc
add
jg
mov
xchg
in
or
int3
leave
mov
add
hlt
add
es
adc
inc
inc
xchg
xchg
cmp
leave
fwait
mov
push
jg
pop
fcoml
dec
orl
or
sub
es
mov
xchg
lock
lock
pop
lock
repnz
inc
aam
mov
outsl
loopne
and
pop
sar
call
fisubl
das
lock
shll
pop
push
adc
call
xchg
movsl
inc
es
push
mov
cmp
add
pop
xchg
adc
or
lods
pusha
inc
xchg
jmp
call
dec
inc
jo
mov
decl
mov
pushl
push
add
inc
incl
loope
xchg
inc
add
sbb
mov
cmc
shr
pop
add
inc
add
jmp
push
jne
lock
add
cmp
mov
inc
cmp
movsl
mov
fnstenv
cmp
sub
jl
add
fsubrl
add
pop
add
jo
inc
in
mov
das
cli
xor
aam
subl
movb
mov
pop
or
rcll
mov
mov
add
add
jl
jo
cmp
add
lock
add
es
ljmp
push
mov
mov
jo
push
xchg
adcl
and
mov
rorl
addr16
add
or
sub
jne
and
aas
jle
ja
lea
cli
ja
push
add
jne
add
mov
or
mov
mov
add
loope
cs
sahf
ret
xor
jecxz
pop
int
rol
xchg
and
mov
and
push
xor
das
mov
cs
pop
xor
mov
sub
mov
adc
adc
xorl
jo
pop
pop
dec
push
movsb
or
push
jp
rorb
imul
inc
push
call
int3
inc
lods
xor
lahf
je
icebp
pop
xor
cmp
ja
test
cld
or
mov
adc
push
pop
fs
add
push
ds
cwtl
repnz
rol
cmp
add
ret
and
and
testb
andb
adc
stos
mov
jae
push
lea
lcall
sub
inc
push
inc
hlt
loop
jne
pop
inc
dec
push
xchg
mov
rolb
add
jge
je
test
jbe
push
cld
adc
inc
push
or
pop
mov
rol
je
push
xor
mov
lods
fadd
or
jno
adc
inc
clc
pushf
adc
add
or
cs
and
pop
dec
ret
fmuls
xor
or
or
jg
pop
jo
cli
add
xchg
hlt
add
loopne
cli
or
jb
add
fs
and
adc
cli
in
mov
mov
xor
inc
jmp
outsl
push
sahf
test
pop
jb
pop
add
mov
cmp
mov
cmp
cwtl
cmp
push
cld
push
out
dec
js
and
jp
data16
pop
shrl
nop
mov
les
mov
int
lahf
inc
mov
xor
jbe
sarb
cmp
jae
mov
xorb
in
fadds
je
incl
xor
jns
xchg
add
les
adc
cli
xor
jle
lret
add
sbb
push
push
aaa
imulb
add
cwtl
adc
and
fidivs
pop
or
imull
and
ljmp
pop
mov
mov
int3
add
lods
xchg
pop
jg
mov
dec
andl
cmp
loop
mov
xchg
fisubs
idiv
lds
jnp
push
adc
ljmp
add
idivb
lds
xchg
scas
lret
mov
or
sub
pop
lret
inc
call
or
push
jb
sbb
test
or
clc
or
push
cld
ret
jb
test
es
xchg
push
movsl
jne
and
add
pop
and
fmuls
jg
shrb
inc
inc
rorb
hlt
shll
dec
fisubrl
mov
lock
loopne
ficoml
cmpsb
push
adc
push
out
add
xorb
test
mov
inc
xchg
mov
jg
push
pop
shlb
and
pop
jb
incl
inc
mov
mov
aas
adc
add
movsb
sub
push
mov
lds
dec
rolb
jbe
filds
pusha
and
ror
call
mov
rcrb
neg
in
and
std
or
mov
rcrb
cmp
rclb
outsb
fdivr
jmp
ds
dec
add
mov
test
pop
dec
mov
xor
fdivl
insb
add
mov
cmp
push
cmp
and
addr16
shll
test
dec
push
mov
int3
inc
add
mov
and
inc
jmp
mov
mov
sub
shrb
test
ret
lock
nop
in
xchg
add
pop
or
inc
cli
mov
call
movsb
subb
mov
sub
or
call
push
cmp
add
fisubrl
sbb
call
add
movsb
in
add
ret
fucomp
adc
add
pop
data16
lret
add
jmp
or
bound
add
out
sbbl
mov
mov
sbb
and
adc
loop
or
ficoms
idivb
arpl
mov
cwtl
or
inc
stos
inc
jmp
les
popl
cmc
lods
sbb
add
jo
or
movsb
fisubrl
and
pop
insl
aaa
icebp
mov
dec
mov
cs
or
jl
insl
or
aam
pop
and
bound
cmp
ds
add
data16
adc
dec
jp
jg
test
insb
sbb
mov
sbb
std
rcrl
add
mov
scas
stc
push
out
pusha
or
les
cmp
or
or
jmp
push
jge
shlb
pusha
push
cwtl
add
loopne
rolb
pusha
and
cld
ss
push
mov
cld
add
dec
mov
es
add
mov
add
or
scas
pusha
inc
loop
sti
loopne
and
mov
or
push
or
add
or
sti
sbb
mov
or
sarl
in
neg
or
mov
sub
mov
mov
jbe
mov
loope
sbb
mov
add
leave
mov
push
or
and
loop
pop
test
and
cltd
loopne
mov
cmp
or
sub
mov
aas
pusha
jl
adc
sbb
or
cmp
mov
sbb
in
loopne
or
insl
cmp
dec
loop
cltd
shll
or
in
mov
testb
inc
add
cmpb
add
pop
ret
sbb
lcall
add
or
push
hlt
jg
add
add
insb
js
sbb
adc
fcoms
dec
add
loop
xor
mov
nop
loopne
push
loopne
jo
pop
aam
adc
popa
push
pop
js
inc
test
loope
push
mov
ljmp
subb
adc
xchg
iret
iret
repz
sbb
sub
adcb
pusha
add
xor
dec
test
repnz
loop
adc
out
cmp
mov
mov
add
mov
add
push
je
ds
and
lcall
iret
mov
jl,pt
lcall
dec
sub
enter
add
loopne
call
test
mov
call
pop
inc
data16
shlb
adc
test
dec
fdivp
aaa
ret
mov
call
sbb
xor
adc
aaa
in
adcl
lock
fs
and
pop
or
or
push
pop
mov
xchg
inc
xor
mov
sbb
cwtl
in
pop
add
in
loopne
notl
dec
dec
jl
or
shll
or
fdivs
and
dec
add
pop
and
add
out
dec
call
pop
dec
loopne
and
xchg
inc
daa
cmc
sub
out
or
jmp
adc
inc
adc
jg
cmp
add
ds
adc
pop
dec
cmpsb
je
mov
mov
std
arpl
xor
push
push
and
push
add
push
lea
or
add
and
adc
pop
call
push
scas
push
fnstsw
iret
push
sbb
aam
push
ret
lods
inc
mov
addb
outsb
add
pusha
outsl
and
or
mov
sub
andl
loopne
mov
ljmp
sbb
ss
lods
add
sub
arpl
push
fdivs
push
in
push
loope
or
push
dec
loop
out
fs
or
xchg
cmc
mov
jp
lods
sub
std
fbstp
pop
cmp
xor
cmp
test
jg
sbb
jo
jo
test
jo
jno
mov
add
cmp
xor
sub
inc
insb
data16
dec
push
or
mov
sbb
jbe
lock
adc
push
fwait
dec
add
or
bound
cmpsb
jae
and
ljmp
add
xor
fmuls
pop
cmp
sub
push
jle
or
enter
xchg
testb
adc
test
inc
adc
dec
sbbb
pop
ja
fbstp
cli
xchg
or
mov
inc
pop
add
inc
mov
dec
repnz
jne
ljmp
jne
adc
mov
cmp
xchg
jl
or
inc
mov
imul
sbb
inc
add
lock
jl
cli
int3
mov
int
enter
add
sub
push
push
daa
xor
pop
xor
push
call
push
sbb
push
or
test
sub
jo
push
xor
ja
adc
pop
xor
rcrb
and
in
rorb
inc
add
incl
mov
mov
leave
lock
loope
hlt
pop
jmp
inc
subb
fwait
outsl
push
lock
call
addl
mov
cld
addl
mov
push
leave
add
test
sub
ret
dec
jmp
jmp
cmpb
cmpsl
and
add
sar
test
adc
gs
inc
pop
mov
aam
inc
push
out
or
lods
xchg
mov
mov
je
mov
mov
fiadds
jmp
add
pusha
jp
lock
dec
divl
adc
sbb
mov
mov
dec
jo
xor
dec
add
adcb
xor
loopne
inc
push
je
and
xor
push
add
xor
mov
jo
mov
or
mov
stos
add
dec
push
fwait
test
call
les
cmp
inc
decl
cmp
and
ja
adcb
add
mov
jmp
cmp
inc
jp
dec
push
or
sub
jne
inc
pop
ljmp
mov
or
pop
jo
add
sbb
ret
pop
mov
leave
fmul
je
ret
test
out
push
adc
sbbl
add
hlt
shlb
push
std
add
xchg
insb
adc
or
dec
inc
dec
es
test
jo
orl
divb
in
mov
fildll
xchg
lock
mov
jle
mov
add
test
sbb
mov
stos
mov
shlb
jmp
mov
xor
push
es
scas
orb
mov
dec
inc
or
cld
jo
pop
add
dec
adc
call
aaa
lea
cmpsl
mov
push
shlb
or
dec
cli
jns
pop
xor
cld
cld
jbe
sub
fs
pop
mov
or
loop
inc
push
stos
push
shrb
and
pushl
call
xchg
repz
adc
ficoms
xor
add
inc
xchg
lock
mov
cmp
loope
lcall
inc
test
adc
shll
outsl
push
sbb
jbe
sub
adc
test
sbb
xor
mov
cmp
sbb
inc
inc
ret
mov
clc
fidivrl
sti
push
pop
or
lock
xor
add
add
call
lock
push
pop
pop
mov
mov
clc
in
outsl
cli
mov
and
push
inc
insb
lea
test
cmp
stos
push
inc
in
add
dec
popa
std
rcrb
fdivs
scas
sbb
in
mov
mov
lret
add
push
ljmp
icebp
xchg
pop
dec
mov
nop
sbb
mov
lock
outsl
and
mov
mov
lock
dec
decl
divl
inc
mov
add
inc
faddl
mov
cmp
lock
mov
and
in
push
add
ficompl
mov
xor
jo
adc
sbb
enter
mov
lock
incl
jno
js
orb
lods
jo
mov
sub
rorb
and
adc
hlt
jo
dec
or
movsb
add
mov
pop
loope
adc
push
or
roll
and
mov
or
pusha
test
int3
outsb
jo
call
call
insl
mov
inc
iret
adcb
xor
call
lea
call
ret
adc
in
pop
cmc
xchg
int
inc
jo
jno
fdivs
aam
scas
pop
mov
test
mov
and
or
inc
out
mov
mov
nop
cmp
push
push
pushl
add
jle
aam
or
mov
mov
adc
mov
jo
add
xor
add
or
repz
or
mov
jb
fmuls
popa
es
push
inc
jb
fucomip
aaa
mov
mov
daa
outsb
lock
and
dec
pop
and
add
les
pusha
dec
jne
mov
enter
mov
fcom
das
cmpsb
mov
mov
jb
out
mov
add
sub
cld
lods
adc
shr
adc
pop
cmpb
adc
or
xchg
or
jmp
sub
sbbb
sbb
lock
dec
inc
or
sub
push
fs
cmp
test
push
sbb
ret
sub
add
lahf
and
out
je
ret
aaa
lret
aam
scas
hlt
xor
outsl
mov
pop
or
push
sbb
mov
test
ds
sub
sbb
inc
arpl
add
push
orb
outsb
push
dec
cmp
loopne
pop
cmpsb
ret
push
sahf
sub
les
sbb
icebp
fwait
add
call
loop
and
or
xchg
mov
shlb
sub
dec
imul
rcrl
ret
mov
movsb
or
jb
inc
add
add
ss
lock
push
push
mov
xor
add
and
jg
xor
mov
popl
xor
bound
ret
cmpsl
and
scas
sbb
clc
stos
jne
out
or
push
lock
add
xor
dec
sub
testl
addb
andb
fbld
jmp
inc
pusha
dec
stos
inc
mov
cwtl
and
adc
mov
fidivs
jmp
mov
shlb
add
cmp
adc
lret
in
inc
add
xor
or
or
or
ret
add
pusha
push
jb
stc
out
mov
stos
mov
dec
add
add
sbb
mov
aam
jmp
les
or
adc
adc
add
sbb
mov
addr16
or
rclb
jbe
xchg
sahf
add
shr
add
push
add
orb
inc
or
aam
cs
dec
or
leave
je
mov
pusha
xor
scas
sub
add
dec
jl
jp
pop
lods
mov
and
sbb
add
data16
add
or
or
mov
dec
cmpsl
shlb
and
push
cmp
outsb
inc
push
mov
inc
call
test
daa
in
ljmp
decb
test
pop
les
stos
cmp
or
call
mov
add
mov
and
mov
mov
push
mov
inc
and
gs
push
pop
jl
pusha
call
or
shrb
fldenv
js
xchg
frstor
push
movl
aaa
xor
xchg
inc
lock
call
add
sbb
pop
push
out
outsb
push
aaa
inc
xor
ret
xor
clc
ret
decl
cmpsb
scas
or
fbld
fsub
add
ds
cld
cmc
inc
subb
push
dec
fnstsw
jl
je
mov
pushw
and
xor
mov
push
daa
add
mov
add
shlb
add
add
adc
cwtl
inc
adc
add
or
jmp
test
hlt
xor
dec
bound
ret
sub
jle
and
into
and
into
inc
inc
jne
sarb
inc
ret
push
shrb
lcall
or
out
push
int3
movsb
add
sub
sbb
outsb
lods
xchg
faddl
roll
je
inc
sub
rolb
cmp
popl
notb
jbe
cmp
inc
mov
je
add
and
cld
rcrb
add
stc
or
jecxz
sbb
adc
out
mov
sti
sub
sub
rol
adc
or
jg
jmp
sub
rorb
push
sub
xlat
mov
sti
xchg
loop
call
add
inc
arpl
push
and
push
call
outsb
dec
or
mov
les
jns
inc
sbb
inc
hlt
clc
mov
xor
es
mov
mov
add
pop
pop
push
jno
test
sbb
add
dec
cmp
daa
push
push
inc
mov
pushf
xor
cli
add
fistl
lock
add
rcrl
addr16
cli
lea
sti
sbb
mov
sti
rcrb
add
scas
jb
xchg
and
push
push
leave
cmp
add
adc
sub
mov
lds
mov
adc
popa
push
fs
roll
addl
jb
jno
test
inc
shrb
and
je
nop
enter
push
jo
adc
mov
inc
mov
jp
test
out
push
imul
and
xchg
push
sahf
push
push
add
sub
popf
adc
movsl
cmpsb
iret
adc
cmp
pop
jecxz
jne
jle
aas
mov
call
sub
ss
mov
xor
cld
jl
push
inc
cltd
flds
fs
loopne
adc
es
add
or
call
or
stc
mov
mov
or
add
subl
pop
test
dec
or
cli
adc
pop
mov
fcomi
nop
ljmp
pusha
add
pop
pusha
in
xor
add
mov
push
push
dec
repz
add
lahf
sbb
push
xor
nop
pop
pop
sbb
jnp
cmpsb
pop
aas
je
add
pop
push
outsl
pop
jnp
adc
push
inc
dec
adc
imul
mov
loopne
lock
filds
loope
jp
cltd
mov
dec
cwtl
fxtract
adc
and
repnz
mov
push
mov
and
stos
lock
cld
mov
sub
test
out
neg
cmc
lret
adc
or
or
stos
hlt
loope
fcmovu
shr
imul
enter
xlat
stos
in
out
sbb
out
rcl
stos
mov
jns
fnstenv
cmpsb
test
rcl
mov
rcl
loop
test
sub
ja
sub
mov
mov
rcrb
sahf
imul
movsb
sbb
pushf
sub
test
adc
push
fisttpll
sbb
cmp
push
mov
pusha
stos
push
pusha
push
sub
add
add
adc
aam
cmpsb
lods
iret
adcl
xchg
sbb
pop
fldl
mov
xchg
mov
sbb
lcall
push
aad
add
loopne
mov
cs
pop
adc
mov
push
xor
and
enter
inc
popa
or
addr16
add
jmp
mov
xchg
sub
inc
jne
jb
lea
int3
rclb
xorb
mov
adc
ret
inc
leave
pop
sub
inc
cs
inc
sub
sbb
xchg
push
sbb
in
aam
or
sbb
xchg
mov
push
inc
mov
dec
jl
jb
lea
lret
loopne
fisttpl
movsb
or
add
pusha
stos
xchg
add
das
add
add
orl
or
ret
cmp
dec
sbb
pushf
and
in
lock
inc
repz
test
mov
adc
jg
sti
push
add
loopne
jbe
mov
add
add
loopne
sub
dec
cwtl
insl
or
jmp
push
inc
xor
pop
fcomps
pop
aam
sub
dec
enter
ja
in
clc
int3
jo
divl
mov
push
or
cmpsb
fdivs
test
jo
pop
jo
push
jnp
icebp
mov
bound
or
jbe
mov
ficomps
cmp
cltd
pop
push
adc
lea
mov
add
sbb
and
mov
jbe
cmp
and
aaa
pop
test
fbstp
jb
fildll
shlb
mov
add
jl
pushf
push
add
add
out
pushl
sarb
and
mov
add
dec
or
in
xchg
movb
lret
sub
sub
inc
push
cmp
xor
scas
movw
adc
cmpsb
cmp
roll
incb
push
and
and
dec
xchg
and
or
in
scas
pop
xor
mov
insb
testl
mov
ss
mov
ss
ret
cmp
push
and
push
adc
repz
cmc
add
add
mov
jae
out
and
mov
mov
pop
and
add
lret
mov
dec
push
fisubl
add
jo
rcrl
pop
ljmp
lock
fdivl
nopl
dec
adc
pop
sub
xor
cmp
js
add
add
test
stos
outsl
shlb
pop
sbb
xor
jae
in
or
pop
hlt
rcrl
lods
mov
mov
xor
mov
stos
inc
adc
sahf
add
dec
add
incb
inc
into
rcl
mov
mov
sbb
add
inc
adc
jl
inc
and
icebp
sub
enter
or
pop
notb
mov
ja
cmp
push
enter
xor
sbb
aam
test
xchg
mov
adc
inc
fisubrs
pushl
nop
andl
enter
ret
add
dec
and
jo
pop
jo
add
outsl
mov
mov
mov
data16
or
call
aam
add
mov
popf
daa
xor
pop
add
iret
mov
mov
and
dec
cs
mov
andb
les
sbb
add
call
mov
push
push
inc
mov
mov
xchg
lea
adc
and
into
jb
xchg
mov
push
add
inc
pop
mov
subb
data16
pop
fisubl
jb
mov
pop
mov
into
nop
xor
cmp
mov
mov
lret
nop
in
or
sbb
add
adc
clc
fisttps
dec
mov
push
push
sbb
xor
add
inc
inc
cwtl
shlb
outsb
aaa
ss
and
outsb
mov
fsubrs
push
pusha
ret
call
push
mov
subb
sub
loop
rorb
mov
sub
mov
shlb
push
fdivrl
adc
xor
mov
inc
adc
and
mov
cltd
add
inc
aad
jne
scas
push
mov
or
fisubrs
stos
pop
cmp
push
dec
inc
sti
or
inc
lods
mov
jo
fs
in
mov
inc
addb
cmpsb
test
dec
lret
sbb
adc
cwtl
and
mov
mov
call
test
mov
inc
call
adc
add
ret
test
or
jbe
inc
in
add
add
je
add
dec
clc
add
in
in
lret
or
push
mov
pop
inc
sar
test
or
mov
pop
stc
and
mov
cmpl
mov
jmp
icebp
add
pushl
jmp
call
lock
call
pshufw
pop
jmp
mov
or
out
fimull
sahf
lock
call
add
sbb
aam
into
mov
sub
cmp
mov
out
in
mov
int
jmp
jns
or
pop
popa
loop
add
call
or
test
cmc
call
in
pushl
xor
cld
je
push
mov
mov
push
je
ret
scas
push
ja
andb
addb
inc
cmc
pop
ret
push
add
cmp
inc
jg
sbb
stos
int3
lock
pop
push
rolb
jbe
mov
cmpsb
mov
push
adc
cmpsb
pop
mov
scas
mov
mov
push
xor
pop
adc
cmp
das
push
into
push
cmovs
lock
jne
mov
out
xchg
and
cmpl
or
pop
mov
xor
lea
mov
xchg
lock
inc
scas
cmp
adc
gs
icebp
push
xor
mov
fnstenv
mov
pop
mov
sub
int3
mov
out
jb
inc
and
or
push
enter
push
push
mov
mov
pop
call
call
sbb
loopne
loope
jb
add
push
mov
xchg
cli
sub
call
add
xor
xchg
fmuls
mov
add
add
gs
andb
and
out
mov
dec
scas
and
shl
fisubrl
push
push
scas
mov
push
mov
and
ret
xor
jne
add
inc
scas
mov
jmp
inc
in
aaa
pop
jg
xor
adc
and
cmp
ljmp
push
mov
out
mov
mov
dec
mov
or
scas
sbb
xor
mov
adc
add
scas
lds
js
mov
movsb
mov
mov
add
scas
push
or
xor
inc
ljmp
lcall
sbb
push
xor
or
fimull
testb
dec
in
push
dec
xor
mov
jp
jae
insb
loop
or
adc
jl
fisttpl
clc
cmpb
inc
jo
mov
or
shl
or
push
ja
xlat
mov
jl
push
shlb
les
mov
enter
cld
scas
cmpsb
cmc
stc
cmpb
mov
lock
and
outsb
adc
sbb
fistps
cmpsb
cltd
idiv
nop
xchg
rcrb
xor
test
repz
cmpsl
sub
subb
sub
mov
sbb
outsl
mov
jns
gs
mov
sub
scas
je
mov
icebp
mov
incl
xor
mov
fs
bound
adc
pop
test
push
cmpsb
sub
fwait
dec
dec
adc
lret
mov
xorb
pop
sub
add
mov
data16
cmpl
mov
adc
pop
add
add
sbb
dec
fistl
push
push
aad
fadd
mov
dec
xor
inc
mov
mov
test
and
addb
ds
fdiv
add
addb
stos
ljmp
or
add
mov
cmp
xchg
push
push
sub
mov
enter
hlt
mov
mov
fucomip
cmpsl
ds
fidivl
pop
dec
insb
xchg
addr16
push
add
mov
loope
cmp
mov
or
sbb
and
es
cmpsl
or
mov
sbb
test
and
lea
insb
adc
call
mov
push
mov
inc
ljmp
int3
adc
mov
add
jl
sbb
xchg
fcoms
ja
jbe
int3
outsl
add
push
mov
cltd
arpl
push
dec
dec
test
aam
pusha
js
outsb
lea
xchg
inc
mov
shr
hlt
add
pop
iret
cld
cltd
add
add
adc
orb
mov
mov
dec
test
insl
cmp
sbb
and
jbe
adc
mov
xorl
loopne
lret
pop
xor
stc
cmc
mov
push
outsb
add
loop
je
mov
mov
in
es
shrb
dec
dec
std
cmp
jae
dec
fdivl
jle
jl
push
add
mov
sbb
pop
pop
pop
lea
pop
fstps
pop
loopne
iret
add
xchg
mov
lret
dec
or
sub
hlt
je
imul
or
je
xor
pop
inc
inc
popa
sahf
mov
pop
je
or
xor
mov
add
bound
or
in
cmpsb
out
lock
push
push
add
outsb
inc
xchg
pusha
daa
test
jb
sahf
xor
or
scas
jge
push
in
mov
fst
and
or
jbe
mov
ljmp
or
cmpsl
pop
inc
arpl
push
add
cmp
test
mov
add
rolb
jecxz
xchg
or
jb
call
push
fsubrl
push
pusha
mov
inc
inc
jbe
data16
or
insb
std
adc
movsl
push
sarb
dec
pop
dec
nop
xor
cmpsl
or
mov
sbb
es
pop
pop
mov
lcall
dec
aad
push
adc
cmp
pushf
adc
enter
fisubrs
xadd
shrb
and
inc
out
sbb
ret
pop
jl
ret
lahf
xor
push
jne
add
xchg
adc
adc
dec
je
xchg
call
rorb
lock
xor
dec
loop
push
int3
adc
add
and
in
pop
adc
mov
mov
call
mov
push
inc
stos
popa
call
aas
rorl
add
data16
add
clc
mov
cmpsb
mov
outsl
add
add
adc
inc
add
xchg
jo
add
mov
sub
shrb
aaa
or
movsl
push
cmp
adc
and
or
and
mov
mov
shrl
add
sub
pop
sub
jg
lea
pop
adc
cmpb
pop
xor
adc
add
adc
jg
inc
inc
xor
rclb
jp
mov
push
inc
mov
es
mov
or
out
push
test
stos
xor
cmp
mov
fisubrl
fs
dec
fcmovne
sahf
or
and
insl
jp
push
sbb
sub
push
inc
fs
adc
cmp
fmull
add
push
push
lock
daa
test
pop
mov
sbb
es
pop
mov
dec
clc
ljmp
loop
adc
add
push
insb
or
add
xor
dec
pusha
dec
jp,pn
clc
inc
or
in
dec
inc
call
in
imul
xchg
adc
lea
xchg
xor
xor
dec
decl
test
icebp
sbb
lea
pusha
push
xchg
mov
jb
xchg
sub
and
add
nop
popa
add
lock
clc
mov
or
hlt
sbb
add
xor
scas
mov
jmp
mov
stos
lock
test
pusha
xor
pop
mov
call
adc
test
into
call
lret
adc
xchg
in
pop
lea
cmp
and
jo
pop
lcall
lds
sub
repnz
pop
ljmp
std
jmp
or
shl
add
sub
and
jmp
and
push
std
idivb
jne
pusha
enter
pusha
pop
cs
in
lahf
ljmp
or
es
fistps
loope
movsl
xor
testl
shrl
add
out
and
loope
add
dec
mov
inc
hlt
push
jl
pusha
push
jmp
test
cmpl
mov
and
mull
scas
pop
and
je
push
push
pusha
jb
push
dec
test
enter
orb
add
popa
and
sbb
clc
xor
lods
push
loopne
sbb
xor
sub
and
out
shr
dec
add
loop
add
int3
jmp
pusha
sbb
rorl
dec
sbbb
lcall
pusha
sub
cmp
loopne
sbb
pop
inc
aam
add
enter
mov
dec
push
fiadds
enter
sti
loope
shlb
mov
mov
and
lret
ljmp
fs
loopne
pusha
fwait
or
lds
int
movsl
lods
gs
leave
ret
loope
adc
or
adc
hlt
and
fisubrl
daa
mov
pop
and
loope
fstpl
push
xchg
scas
std
dec
xor
rclb
test
ffreep
aas
or
notl
push
mov
xchg
cmp
xor
bound
ja
sarb
jbe
adc
mov
lods
add
es
mov
sub
imulb
jg
ss
popw
pusha
lods
clc
loopne
mov
popl
fdivrp
loope
adc
das
adc
push
inc
xchg
inc
push
inc
nop
nop
push
and
mov
mov
roll
mov
mov
push
aam
sub
jp
in
or
add
and
mov
jmp
cmpsb
push
push
nop
push
cltd
pusha
sbb
sub
and
mov
loopne
nop
pop
mov
outsl
pop
or
mov
movb
cmpsb
mov
push
mov
inc
insb
or
fs
and
add
scas
rolb
cmp
pusha
cmp
or
test
loope
roll
pusha
adc
xchg
loope
inc
sub
loopne
lods
add
jne
push
mov
mov
add
jo
movsl
in
ljmp
out
sbb
outsb
xor
push
adc
loopne
aam
add
pop
cmc
dec
xchg
lock
push
inc
pusha
and
jo
or
xor
bound
adc
or
es
and
js
inc
push
mov
rorb
addr16
popa
sub
loop
mov
mov
cmp
or
fidivl
jp
adc
sbb
dec
rorb
idivb
mov
test
or
cmc
fwait
test
enter
add
std
pushl
push
sbb
sbb
adc
daa
push
shrb
cmpsl
mov
pop
imul
push
add
rcrl
andl
add
lock
or
adc
or
sbb
or
or
and
jo
adc
shl
out
or
hlt
add
incb
lock
push
icebp
dec
mov
fucom
test
xchg
sbb
and
xor
sbb
adc
aaa
adc
push
adc
xchg
jb
faddl
adc
push
mov
leave
lret
push
je
adc
xor
xor
adc
add
pusha
jnp
add
push
nop
ljmp
push
sub
mov
lock
aas
jo
in
pop
mov
adcb
rorb
mov
loopne
dec
pop
roll
xor
sub
mov
push
mov
cld
jno
lods
jnp
movsl
das
adc
jae
mov
and
mov
ljmp
call
call
clc
xchg
ljmp
fisttps
push
inc
stos
sub
push
orl
jnp
cmp
xchg
lock
call
lock
mov
add
cltd
sub
sub
loopne
test
fdiv
ficoml
aaa
jle
lock
fidivl
cld
lods
jmp
icebp
jo
and
aas
mov
cli
xor
jmp
jo
hlt
jno
cmc
sub
sbb
mov
adc
fidivs
add
cmp
push
mov
push
mov
push
mov
adc
pop
push
mov
add
xor
sbb
sub
jne
xor
or
inc
push
sub
xor
bound
jmp
sub
scas
and
in
and
jno
lods
jno
sahf
sbb
or
lcall
mov
jmp
out
lock
das
cmp
sti
xor
pop
or
pop
cmp
insb
enter
xchg
cmp
loope
or
outsb
adc
sub
lea
mov
sahf
push
lret
dec
ljmp
lock
or
xchg
inc
lret
daa
add
dec
rcr
in
push
sub
sbb
mov
incl
xor
jb
das
adc
cmp
inc
sbb
add
lds
add
sahf
adc
in
lods
add
sbb
out
cmp
call
divb
and
inc
mov
xchg
rclb
sub
mov
jg
push
push
jb
adc
lsl
adc
in
push
push
jle
cmc
add
nop
adc
xor
push
mov
loop
or
cmp
sub
lock
sbb
or
add
xor
sub
push
cld
push
pushl
sub
mov
add
pop
nop
mov
adc
adcb
js
in
hlt
shlb
add
push
pop
imul
dec
lock
icebp
push
xor
dec
ss
incl
xchg
int3
lock
push
stos
ds
jge
xchg
xor
xor
or
test
mov
add
xchg
sub
inc
je
cwtl
mov
and
ljmp
xor
pop
or
lods
fcoms
xchg
xchg
add
lcall
pushf
adc
sbb
je
jmp
pop
add
or
add
sbb
push
fiadds
stos
jne
fmull
push
push
sub
lcall
mov
imul
xor
push
inc
subb
or
push
in
cltd
xor
dec
imul
cli
sbb
xchg
insb
mov
mov
and
cmpsb
sbb
dec
hlt
pop
push
in
bound
scas
or
fldt
add
cmp
cmp
je
xchg
pop
repnz
xlat
push
mov
lock
mov
jl
or
and
mov
jne
cmpsb
pop
push
pop
and
and
sbb
inc
test
aas
mov
ljmp
cmp
ja
mov
pop
cmpb
aaa
addl
dec
and
add
inc
jne
sub
rcll
test
push
sub
aad
jo
mov
inc
jo
repnz
push
add
lods
push
push
pop
aaa
mov
enter
lods
adc
ljmp
addl
dec
inc
test
inc
inc
dec
add
sahf
pop
cmp
cmp
adc
ret
aaa
or
or
inc
and
cmp
pusha
pop
jge
movsb
mov
inc
fcmove
lock
push
dec
addb
mov
stos
mov
inc
add
add
jbe
add
push
icebp
push
push
pop
sub
mov
jo
hlt
scas
daa
and
push
imul
inc
xlat
mov
out
add
inc
call
mov
clc
and
lahf
mov
call
sbb
lock
sub
or
dec
xor
test
call
add
scas
cli
jb
loopne
adc
inc
mov
xor
sti
inc
mov
clc
adc
int3
jo
xor
xchg
lock
nop
dec
mov
mov
cmp
hlt
hlt
lods
adc
inc
mov
xchg
mov
xorb
cld
sub
mov
or
xchg
mov
push
pop
jae
ret
and
mov
hlt
shr
inc
jg
cmpsl
pusha
lret
jp
pop
mov
push
xor
mov
ljmp
shl
inc
jb
fcoml
sbb
jo
xchg
pusha
jecxz
xchg
or
in
sbb
call
es
lock
pop
icebp
fstpt
pop
shll
push
mov
and
in
or
push
add
sbbb
pop
mov
mov
and
mov
mov
lock
idivl
add
lock
adc
cmove
xor
push
mov
add
add
ret
add
pusha
sbb
add
les
or
xchg
sbb
hlt
call
aas
add
add
and
addb
pushl
mov
pop
sbb
call
xor
sti
push
push
lock
jno
insb
add
inc
test
decb
adc
xchg
nop
push
jl
cld
rolb
adc
add
add
ret
dec
movsl
inc
rclb
sbb
cmpl
sub
add
jecxz
sbb
jmp
insb
fildl
in
xor
cmp
je
inc
or
and
mov
xor
pop
mov
xorb
daa
and
push
jno
jbe
or
add
mov
and
test
mov
mov
fwait
add
jl
adc
push
pop
add
adc
jl
cli
adc
push
dec
xchg
adc
sub
mov
mov
pop
std
pop
xorl
push
sub
fsubr
push
inc
cmp
xlat
xchg
inc
popa
push
jbe
fadd
or
pop
jecxz
dec
cmpb
and
xor
enter
pop
lret
sbb
hlt
test
jbe
sti
add
add
jbe
andb
and
inc
pop
sub
test
lsl
push
cmp
movsl
dec
mov
sahf
enter
lcall
test
mov
and
movsl
inc
cli
ret
mov
lea
outsb
mov
inc
xchg
jmp
stos
imull
int3
orb
shlb
push
pop
cmp
add
out
test
mov
cmpb
mov
push
add
mov
inc
shlb
mov
call
scas
add
popfw
xchg
pop
orb
int3
jmp
adc
mov
adc
orl
stos
mov
out
and
and
in
sarb
sub
add
stos
add
fs
jle
add
mov
loopne
inc
or
test
fidivl
and
mov
add
push
jl
push
push
int3
push
mov
scas
roll
movl
rclb
pop
pop
and
lcall
pop
mov
in
mov
addr16
loop
or
decl
ret
rcll
inc
push
push
xor
inc
jp
or
add
jo
call
push
push
test
sbb
andb
push
fidivrl
hlt
inc
push
sbb
dec
and
or
add
pusha
sub
into
add
es
rcrl
sbb
fldl
cmp
jbe
in
lods
or
push
add
push
jle
nop
lock
push
push
cld
xor
jne
xchg
push
imul
cmp
inc
rcll
adc
jmp
mov
mov
pop
adc
test
rcrl
scas
jl
pop
in
insb
mov
lea
inc
inc
xchg
mov
jecxz
pop
cmpsb
mov
fsubrs
lahf
mov
xor
or
nop
add
clc
mov
loop
fiadds
push
rcl
cmp
shll
or
mov
lea
xor
in
inc
cmp
xor
adc
idiv
push
out
cmp
ret
or
dec
dec
sarb
mov
or
sbb
mov
add
mov
outsl
pop
loopne
push
mov
shll
jbe
ficomps
leave
cmp
pop
and
jg
stos
xchg
mov
adcb
rolb
or
call
dec
add
outsl
add
mov
nop
add
and
xor
clc
imul
xor
add
inc
and
jne
jbe
popa
cmp
pusha
daa
push
test
push
and
cmp
dec
sbb
cmp
pusha
sub
loop
and
or
push
adc
add
inc
xchg
sbb
loope
lock
push
dec
adc
out
mov
lods
add
ljmp
popa
or
adc
es
in
cmpsb
loopne
jno
xchg
or
inc
cmpsb
or
jp
mov
or
decl
push
pop
loopne
pusha
inc
cld
pop
test
in
adc
mov
and
inc
orb
sub
xor
push
dec
push
adc
add
loope
push
cmpsl
movsb
dec
jl
xor
fmulp
arpl
cli
call
movsb
pusha
aas
pusha
lcall
add
test
jmp
jp
addl
rclb
push
sbb
push
inc
or
add
sbb
in
in
or
xor
loop
out
adc
inc
aam
sbb
sbb
loopne
pop
jo
outsb
cld
loopne
or
push
mov
add
out
mov
cmpl
sbb
jb
mov
sbb
loopne
xor
cmc
push
incl
adc
jne
pusha
add
lcall
call
lock
dec
loopne
out
or
mov
psubsb
adc
inc
popa
lcall
test
orb
pop
daa
sbb
loopne
jae
imul
icebp
addps
mov
sbb
sub
or
add
sub
mov
clc
sarl
jge
lods
add
xchg
into
pusha
adc
jp
adc
ret
mov
negb
xor
jne
push
cmp
sub
and
xor
js
icebp
mov
repnz
add
ret
inc
inc
outsl
pushf
dec
sub
push
dec
add
mov
adc
add
xchg
or
adc
mov
je
out
clc
subb
xor
call
out
lock
test
pop
dec
pusha
lods
loopne
lea
mov
dec
popf
sub
pop
sub
push
add
xor
sub
lods
aas
jo
cmpsl
sbbl
inc
jnp
mov
outsb
inc
repnz
xchg
and
loopne
inc
sub
or
mov
and
loopne
out
in
adcb
pop
idiv
cmpsb
adc
data16
and
pusha
mov
cs
lock
push
add
rorb
int3
pop
and
dec
adc
xor
rorb
inc
sub
int
and
stos
loopne
loopne
mov
es
inc
lcall
test
cmp
xor
sub
lock
pop
xor
pop
shlb
ret
mov
roll
sub
test
add
mov
nop
add
mov
addr16
xor
inc
loope
add
add
nop
mov
add
loope
mov
ffreep
xchg
or
and
pop
mov
xchg
mov
adc
cli
mov
adc
and
sbb
jb
mov
pop
rorb
in
inc
push
push
push
ljmp
sbb
test
mov
popa
pop
push
dec
decl
jmp
sub
or
pop
dec
cmp
icebp
mov
push
lea
mov
push
adc
jb
je
sbb
add
mov
bound
cs
xor
sub
jo
cmpsb
xor
jle
xchg
jo
mov
adc
inc
es
and
or
mov
adcb
hlt
adc
out
mov
add
jmp
in
push
orl
jp
jp
add
inc
and
or
call
add
cs
ss
xor
dec
sbb
cmp
fnstsw
or
jne
mov
sub
mov
xor
add
faddl
mov
jnp
mov
xor
lock
pop
fucom
or
dec
shrb
int3
fisubrl
dec
nop
std
and
lahf
add
notl
loop
mov
mov
push
or
push
mov
cmp
adcb
pop
incl
lods
or
cmp
ret
mov
push
lea
sti
mov
mov
cli
adc
and
add
mov
ficoml
lods
cmp
jge
lahf
sbbl
inc
call
negb
jo
popa
jecxz
add
and
stos
xor
lea
mov
movsb
pop
sar
mov
lods
lock
or
ljmp
adc
popf
jo
std
jno
hlt
std
mov
adc
inc
and
jo
jbe
and
push
shlb
sbb
pop
ljmp
or
test
popa
pushl
daa
std
sub
jle
icebp
inc
add
lods
sar
addl
jo
rorb
sbb
xor
inc
jl
add
push
idivb
inc
inc
nop
or
cmp
out
in
outsb
mov
ljmp
pusha
test
or
inc
fs
or
in
pop
push
adcb
add
mov
incl
dec
or
out
pop
push
inc
insb
xchg
add
mov
aas
and
movsl
clc
stos
jp
jb
imul
inc
inc
cmc
es
jno
adc
scas
fwait
mov
xchg
arpl
push
clc
dec
lock
push
call
or
xchg
pushf
xor
call
add
mov
push
push
adc
mov
rolb
lret
pop
mov
push
lock
mov
xor
mov
mov
call
cmc
daa
dec
push
shrb
push
cmp
cmpsb
aaa
jb
cmp
or
add
sub
inc
ja
jg
lods
int3
sbb
mov
dec
cmp
mov
lea
mov
mov
dec
sbb
jl
icebp
jg
lods
sbb
mov
jne
inc
test
xor
pop
shr
mov
clc
xchg
sub
xor
mov
sti
ja
bound
les
xchg
mov
or
push
sbb
adc
aaa
jp
mov
into
sbb
push
pop
and
xor
repnz
mov
pushf
test
lock
cli
lock
jno
dec
adc
mov
push
fs
mov
cmpsb
ljmp
sahf
and
in
and
push
inc
pop
add
ret
xchg
jno
mov
push
or
jo
jns
pop
dec
cmpsb
mov
lock
clc
cmp
xor
ljmp
jo
mov
imul
punpcklbw
aaa
call
add
or
xor
repnz
loop
mov
push
mov
es
lds
testb
mov
divl
decb
sbb
mov
shlb
pop
movsb
mov
pop
mov
inc
sbb
loopne
lock
cmpsb
fwait
lea
adc
int
push
add
jg
icebp
pop
cwtl
mov
ss
push
jno
test
cli
call
xor
xor
mov
xchg
xor
aas
cmp
je
xchg
outsb
adc
and
cwtl
jge
lds
and
push
sti
das
adc
les
mov
mov
mov
pop
mov
std
jbe
and
mov
jne
cltd
add
jno
les
sub
mov
insb
mov
aas
rol
or
pusha
andb
push
loopne
aam
shlb
sbb
inc
mov
adc
idivb
xchg
push
push
test
test
lret
aas
jl
and
jne
jo
shl
push
pusha
enter
loopne
xor
jno
sbb
out
add
mov
push
cmp
dec
xchg
in
xor
sbb
adc
jb
add
jne
fs
dec
mov
add
fcomi
or
xchg
jg
lock
or
sbb
roll
lea
and
mov
sbb
and
sbb
pop
and
je
xor
in
dec
pop
inc
add
mov
hlt
adc
add
insb
andl
jnp
jmp
mov
lret
lock
mov
sbb
mov
repnz
jae
sbb
in
mov
cmpsl
mov
sbb
es
mov
push
cmpsb
aam
cmc
idiv
decl
subb
xor
je
mov
xor
jno
adc
or
xchg
jno
divl
mov
in
ja
xor
push
jo
sbb
jbe
loopne
xor
addb
mov
adc
test
or
cmp
mov
and
mov
pop
pop
inc
mov
jle
mov
mov
call
inc
mov
inc
mov
ret
mov
mov
xor
outsb
adc
xor
pop
push
mov
pusha
xchg
or
mov
push
cwtl
test
push
cwtl
scas
adc
cmp
imul
stos
les
push
or
cmp
mov
jbe
sub
add
dec
jo
mov
call
add
pushl
test
cmp
mov
add
je
add
adc
notb
roll
dec
aam
jle
adc
fisttps
mov
push
sbb
pop
pop
imul
add
pop
enter
pusha
cwtl
cld
adc
daa
mov
pop
mov
cmp
lret
push
add
dec
mov
inc
and
pop
and
ret
ror
sbb
clc
aaa
sbb
pusha
add
sbb
push
mov
add
push
or
test
sub
repz
pop
inc
dec
call
in
imul
fwait
notl
jl
sub
xor
ret
mov
sbb
jnp
push
and
sbb
mov
inc
cmpb
mov
push
addb
mov
jle
loope
add
lock
mov
fiaddl
jl
cmp
out
mov
push
in
das
push
test
call
call
mov
adc
mov
gs
mov
call
adc
cmpb
in
inc
or
add
incl
push
sbb
xorl
xchg
or
test
push
or
std
push
and
inc
loop
jb
cmp
lock
jge
push
xchg
rclb
mov
xchg
loop
cmp
mov
adc
jno
inc
adc
movsb
sbb
pop
loopne
andb
xchg
and
shl
mov
add
daa
mov
and
movaps
outsl
add
xor
je
shrb
mov
adc
sbb
pop
adc
in
shrb
outsb
mov
add
les
outsl
mov
push
inc
xor
in
jp
into
push
xor
inc
arpl
push
xorb
sbb
mov
ljmp
push
ds
insb
and
call
pop
jb
adc
pop
add
fwait
or
pop
pop
push
rcrb
push
add
andb
dec
and
icebp
and
sbb
pushf
je
in
test
sub
shrb
rorb
xchg
inc
adc
pop
enter
add
pop
or
adc
aaa
icebp
jg
fdivrl
mov
adc
jno
or
movsb
iret
not
lods
adc
mov
cs
push
xor
lret
int3
out
jb
jecxz
sbb
dec
mov
push
inc
lcall
add
adc
jb
cmp
sub
xchg
ret
push
or
or
shlb
mov
ret
xchg
adc
sub
lret
and
xor
push
shrb
call
add
xor
xor
adc
pusha
pop
adc
xchg
and
cld
cmp
pop
xchg
mov
push
cmpsb
add
xor
icebp
fildll
add
cmp
je
mov
cmp
cmp
insb
stos
inc
mov
cmc
cmpl
cli
mov
dec
add
mov
mov
scas
add
call
push
stos
test
loopne
sbb
mov
push
addb
cmpsb
dec
or
loopne
and
pop
pop
lock
sub
pusha
inc
xor
cmpsb
sti
loopne
fucomip
stos
add
inc
loop
xchg
dec
adc
xor
mov
sub
call
call
jmp
add
pusha
or
lds
loop
loopne
popa
nop
cmp
movsb
dec
loope
or
out
scas
ljmp
push
xor
pop
pop
je
leave
js
out
lods
adc
cmp
push
mov
mov
adc
push
jecxz
dec
mov
cs
jecxz
in
in
in
and
adc
lock
ljmp
mov
add
into
add
mov
and
insl
mov
add
lods
adc
loopne
pop
daa
add
jge
outsb
jp
xchg
add
enter
sub
cs
je
adc
aaa
insl
pop
cmp
or
mov
sbb
push
ror
cli
adc
push
mov
bound
mov
xchg
add
dec
mov
inc
sbb
or
rclb
rcrb
push
testb
mov
sbb
pushl
cs
stos
push
cld
rcrb
mov
push
jnp
jne
mov
inc
cwtl
inc
leave
sub
fs
shlb
xor
addl
mov
out
pop
pushl
jno
jge
push
loopne
dec
lea
push
mov
sahf
push
call
loopne
sub
mov
push
add
lcall
add
and
push
cwtl
pop
idiv
inc
mov
pop
enter
mov
push
mov
aaa
mov
push
movb
mov
dec
rorb
adc
or
hlt
or
mov
in
aam
out
nop
addl
test
jo
mov
int3
push
xchg
dec
fwait
sbb
inc
inc
pop
sub
clc
mov
xor
jmp
jle
jge
out
inc
in
inc
popa
sub
inc
addr16
dec
mov
ljmp
dec
fisubs
jp
adc
loopne
pop
call
lock
cld
call
pop
adc
xor
push
ja
loopne
shr
fwait
out
dec
int
popf
mov
les
add
mov
lea
xor
data16
or
adc
mov
test
rclb
shlb
jmp
ljmp
and
mov
jbe
mov
jge
pop
pusha
or
jle
aaa
jne
shrl
fs
pop
call
dec
es
mov
xor
je
jg
les
xor
cli
mov
or
out
pusha
add
lds
out
add
and
stc
sbbb
jo
sbb
or
enter
xor
add
xchg
xchg
dec
clc
add
pusha
sub
dec
rcrb
adc
int
cmp
es
fldenv
subl
std
jb
in
insl
jp
and
mov
rolb
fsubrl
lock
incb
movsb
and
call
ret
and
or
stos
pop
mov
add
push
mov
in
xor
or
or
incb
dec
pop
sub
inc
sub
and
sub
test
mov
xorb
xor
popf
mov
ljmp
icebp
adc
sub
addb
or
dec
or
add
jg
inc
xchg
ljmp
aaa
orl
inc
call
sub
xchg
ret
int3
sarb
or
mov
push
inc
pop
das
jl
or
jg
movb
mov
lods
pop
pop
leave
mov
jecxz
xorl
and
stos
mov
and
cmp
in
or
add
add
lock
fadds
out
inc
mov
fs
cmc
xor
jg
das
push
pusha
or
adcb
or
in
jg
cmpsb
jno
pushf
or
mov
inc
cmpsl
icebp
add
test
shlb
xchg
mov
test
cmpb
faddl
int
test
icebp
xor
push
xor
pop
jbe
pop
inc
cld
mov
jo
vmread
jae
jo
repnz
outsl
mov
push
aam
xor
iret
jo
adc
sti
mov
out
add
jne
xchg
ss
rorb
loop
add
lock
arpl
mov
jp
jge
jl
and
mov
mov
cmp
push
and
faddl
pop
mov
mov
outsl
adc
sub
mov
dec
add
repnz
fsubrs
mov
ficompl
insl
mov
sbb
push
lods
in
add
xchg
fmuls
call
cld
or
add
adc
push
adc
xor
fwait
mov
push
and
in
pusha
push
fidivs
and
fisubrs
or
mov
cmp
inc
test
incb
dec
add
mov
int
cmp
aam
or
out
je
push
cmp
fistps
or
jmp
in
xchg
lret
mov
les
adc
ret
adc
mov
pop
add
inc
ljmp
mov
pop
mov
cmp
out
xor
mov
outsb
add
adc
cmc
push
les
dec
imul
mov
cmc
dec
cmp
add
mov
incl
fcomip
repnz
xor
jp
jo
notb
stc
adc
inc
inc
stos
adc
mov
or
incl
xor
push
icebp
in
jo
add
xor
pop
fdivr
mov
sub
jo
test
jo
push
xor
inc
pop
cli
mov
add
xor
popf
add
mov
outsb
or
jns
and
add
sar
sub
mov
repnz
jp
push
push
mov
jb
nop
and
inc
lods
icebp
or
jl
mov
fldt
pop
adc
jl
call
xchg
mov
push
mov
ret
sub
clc
test
lea
push
sub
sub
rolb
lret
enter
xor
ret
add
sub
sbb
inc
xor
je
pusha
push
xor
sbb
mov
pop
inc
push
incl
mov
jmp
jo
push
andb
xor
xchg
call
mov
ret
mov
jo
sub
xor
subb
push
or
inc
and
sbb
add
mov
and
mov
cmp
mov
adc
inc
and
sbb
add
xchg
cmp
test
dec
push
push
cld
out
es
xchg
je
add
or
and
das
mov
stc
out
js
or
and
inc
add
js
aaa
mov
test
pop
les
pop
call
out
lea
int
sbb
std
mov
adc
xchg
xor
xor
xor
icebp
outsb
stos
jmp
lock
sbb
aad
ficompl
sub
iret
pushf
cmp
push
addb
mov
push
or
sbb
cmp
add
cmc
mov
pushl
sti
inc
push
lock
or
xchg
mov
mov
lods
xor
fstpt
aaa
cmp
adc
jo
nop
cmp
mov
cmp
pop
test
cmp
out
dec
imul
loopne
or
jo
pop
and
repz
lock
inc
cmp
add
mov
icebp
mov
cld
das
mov
repnz
es
inc
push
ss
pusha
mov
add
icebp
mov
lock
inc
shl
lock
test
js
adc
lcall
sbb
and
data16
divb
sbb
fisttpll
std
lock
xchg
xor
pop
mov
jb
push
add
mov
jp
or
test
decl
pop
jae
shr
out
xchg
cli
inc
cmp
mov
clc
mov
mov
daa
mov
mov
mov
and
jo
or
or
adc
stos
sub
push
js
pop
add
movb
andb
out
add
test
xor
cli
push
lock
inc
aad
lcall
jg
mov
xor
sub
in
dec
inc
repnz
icebp
pop
enter
or
mov
pop
jo
jne
mov
scas
clc
icebp
pop
aam
mov
add
push
pop
mov
dec
std
int
roll
jae
or
cmp
decl
mov
lock
inc
push
decl
js
fdiv
push
add
dec
loope
call
hlt
add
lock
mov
add
xor
jne
add
pop
inc
push
fnstcw
lock
mov
push
and
push
cmc
pop
lock
cltd
xor
xor
xchg
out
mov
scas
add
std
push
xchg
pusha
and
pop
jbe
dec
inc
ss
or
jb
outsb
push
sub
adc
lods
add
dec
loop
jmp
loopne
imul
imul
add
loop
jb
pop
dec
add
pushl
push
pop
dec
mov
mov
lods
push
and
mov
xor
xor
insb
pusha
imul
sbb
ret
dec
sbb
shlb
mov
rolb
out
add
push
insb
test
inc
lcall
mov
add
out
dec
mov
mov
les
inc
ljmp
pop
add
sbb
and
dec
shlb
insb
dec
mov
mov
jbe
es
inc
mov
dec
fmuls
call
movb
div
xlat
add
jmp
dec
cmp
test
pop
xchg
fs
inc
xchg
popf
mov
mov
fisttpl
and
fidivrs
mov
mov
nop
inc
inc
loopne
adc
xchg
neg
mov
mov
mov
inc
or
or
mov
mov
adc
mov
mov
pop
or
in
mov
mov
cmpsb
mov
test
sub
aaa
jg
push
mov
pop
jmp
mov
mov
pop
shll
int
popf
dec
and
mov
les
fidivl
push
mov
mov
mov
sar
ret
mov
sarb
or
jnp
fmuls
mov
mov
push
outsl
outsl
or
mov
int3
mov
mov
scas
imul
aam
push
out
ss
and
mov
sbb
orb
fidivrs
loopne
xlat
outsl
sbb
cmp
in
std
mov
out
dec
mov
aaa
jg
insb
pop
xchg
adc
mov
shlb
out
inc
lock
popl
or
call
insb
ficompl
loop
clc
call
loopne
lcall
shlb
mov
mov
add
mov
add
out
or
and
mov
dec
rcl
or
lock
mov
mov
lcall
inc
xchg
ret
jge
push
mov
fdivrp
sbb
sbb
inc
or
stos
sbb
xchg
icebp
data16
push
mov
in
add
jg
and
mov
dec
and
push
dec
and
rol
fisubl
cld
pop
dec
fcomp
mov
mov
sub
outsb
aaa
cld
dec
inc
imull
ret
or
sarl
xor
andb
add
cmp
mov
inc
inc
lock
sarl
pushl
dec
dec
xor
adc
jg
mov
inc
shlb
mov
add
pop
loopne
sbb
mov
add
pop
dec
inc
inc
inc
mov
pop
popa
or
adc
jmp
std
lcall
sub
bound
push
inc
mov
lods
mov
sti
mov
or
push
push
cmpsb
push
pop
inc
cmp
movsl
mov
fcomi
insl
pop
or
inc
dec
pusha
or
sbb
inc
push
hlt
or
ljmp
popf
and
push
sbb
clc
bound
stc
push
inc
cmp
or
mov
stos
mov
outsb
mov
sub
push
mov
mov
jecxz
je
sub
movl
fcmovb
enter
loopne
in
icebp
push
jbe
mov
incl
cli
incb
addl
jnp
dec
jb
mov
cmp
fcompl
gs
pop
stos
insb
call
jle
adc
popa
cld
add
scas
fdiv
push
ret
ljmp
pop
and
es
add
sbb
cltd
ret
lods
cmp
ljmp
out
xchg
xorl
stos
inc
add
ljmp
inc
test
and
imul
or
jmp
das
xchg
xor
sub
xor
cmp
lahf
filds
sbb
rorl
xchg
cmp
adc
inc
js
lea
clc
fbstp
adc
call
je
dec
rolb
inc
sbb
call
adc
test
or
mov
xchg
sbb
jge
js
aam
and
push
mov
xor
inc
test
mov
jp
mov
loopne
pusha
ret
cs
and
mov
je
mov
push
int3
cmpsb
dec
jg
sub
lods
je
in
or
push
mov
lea
inc
mov
xor
mov
dec
fdivrs
rcrl
push
push
add
outsb
roll
inc
xchg
repnz
sbb
ljmp
inc
out
push
jne
mov
push
fcoms
push
pop
lods
lret
mov
cs
in
sbb
mov
or
in
push
repz
mov
test
lea
pop
mov
sub
sbb
inc
dec
xchg
aam
or
mov
add
lret
xor
sub
or
andb
ss
cmp
jecxz
or
add
adc
je
aaa
or
out
insb
stc
insb
add
inc
sbb
jle
dec
jge
push
push
jb
call
xchg
int
ret
dec
ret
xchg
cmp
xor
mov
pop
adc
push
or
dec
inc
jno
jmp
sahf
scas
sbb
pop
jne
loopne
pop
add
sbb
jg
ss
xor
pusha
loop
sub
lock
cld
lret
push
adc
inc
mov
cmp
lods
xor
fcos
aaa
test
add
je
call
and
or
call
cmovne
push
scas
push
inc
xor
mov
mov
add
mov
cmp
sbb
push
loope
aaa
dec
dec
scas
jo
inc
mov
daa
mov
aaa
lods
nop
sbb
sub
or
std
add
or
adc
popl
and
mov
and
and
fs
sbb
and
inc
sbb
pusha
and
cltd
sub
scas
sub
jbe
pop
jg
clc
mov
add
js
xchg
and
jne
rcrb
lret
push
ljmp
jl
and
or
dec
outsb
insb
xchg
mov
adc
xor
mov
enter
push
ss
mov
cld
jne
sbb
lret
jo
add
mov
lret
or
jo
call
test
icebp
sarb
enter
je
and
sub
cmp
outsb
mov
out
xchg
mov
cs
add
inc
sub
or
icebp
mov
adc
pop
cmp
dec
nop
lea
pop
cmpsl
and
push
mov
leave
push
or
inc
or
nop
roll
ret
add
mov
add
data16
add
sarb
mov
repz
mov
mov
icebp
push
je
pop
push
sbb
je
add
std
jle
sub
mov
mov
mov
cmp
mov
inc
inc
jno
sbb
sub
push
hlt
add
inc
or
add
add
das
sbb
mov
inc
or
jp
jo
idivb
jl
mov
cmovs
mov
add
addl
jne
lret
andb
inc
add
push
fdivs
push
jle
pop
mov
add
test
je
pop
ret
jl
or
and
xor
jl
or
xor
enter
mov
js
jmp
subl
adcb
adc
add
cmpsb
or
add
xor
add
or
pusha
adcl
mov
clc
neg
jmp
inc
adc
pop
mov
inc
lds
lret
test
sub
pop
inc
inc
imulb
enter
dec
add
clc
dec
outsb
test
push
pusha
mov
ret
sub
pop
lods
lret
push
pop
and
sti
divb
mov
leave
sahf
rolb
add
add
add
negb
sub
add
cld
mulb
push
test
incb
push
inc
mov
push
adc
pop
cld
jl
icebp
pop
mov
push
add
ds
jmp
mov
pop
add
xchg
invd
jo
inc
lcall
mov
push
inc
clc
inc
mov
scas
repz
bound
and
lods
inc
jl
call
mov
inc
mov
mov
mov
out
add
pop
jl
call
mov
add
add
inc
sub
dec
jmp
jne
jmp
add
and
cmp
call
xor
inc
inc
rcll
sbb
cmp
inc
jmp
or
push
add
mov
mov
int3
inc
or
sbb
pop
and
imul
sbb
lock
jo
lock
and
and
sarb
rolb
push
sbb
inc
icebp
pop
mov
aam
ror
in
insb
jb
enter
xchg
mov
push
or
pop
mov
mov
push
mov
mov
push
ljmp
add
test
testb
js
add
and
xchg
adc
sbb
and
mov
inc
jo
jle
cmp
inc
loopne
faddl
cmp
cmpsb
add
inc
cmp
push
push
dec
test
mov
lret
pushl
mov
inc
cld
mov
adc
mov
mov
mov
sbb
insb
jb
dec
loop
mov
sar
and
push
jo
or
je,pt
or
mov
pop
mov
je
jno
aas
cltd
dec
xchg
pusha
or
and
mov
les
dec
jg
add
arpl
sub
movl
mov
pusha
xchg
ss
rolb
mov
sbbl
xor
ret
cmc
push
scas
push
push
sub
push
cmp
mull
sub
out
add
dec
xor
or
jno
push
je
icebp
adc
adc
dec
push
call
and
push
in
jb
mov
or
jp
addr16
push
lahf
add
mov
cwtl
or
add
enter
and
push
lock
sub
cmp
add
xchg
or
pop
cs
add
js
ret
mov
jo
pop
pop
cmpb
jo
mov
aaa
or
pop
mov
cmp
add
xor
add
push
fwait
or
and
shl
and
std
std
test
mov
movsl
add
fs
or
adcb
xor
or
inc
icebp
pop
lods
push
lea
xor
mov
leave
ret
hlt
sarb
ja
push
jae
adc
xor
ss
mov
inc
push
sbb
mov
adc
orb
inc
cwtl
test
xor
add
sub
mov
rolb
aaa
ret
movsb
push
lock
mov
adc
mov
jo
aad
adc
xor
adc
dec
hlt
clc
push
cs
sub
xor
or
sub
push
mov
and
cld
in
fsts
lcall
shrb
mov
dec
or
scas
test
or
insb
bnd
cli
and
outsb
inc
or
pushf
pop
xchg
ss
es
fcom
aas
add
sbb
aaa
fsubrl
call
add
add
xor
adc
jl
push
mov
fisubs
and
pusha
jmp
aaa
rol
jmp
inc
xor
inc
xor
push
xchg
jo
add
aaa
push
mov
xchg
lock
xorb
sub
mov
roll
addb
push
push
push
xor
fidivl
or
or
jbe
mov
adc
add
les
adc
addr16
pop
push
push
inc
jg
add
xor
test
push
shlb
mov
or
sub
aad
test
je
and
xchg
out
inc
in
fmuls
mov
bound
popa
addl
fwait
add
pop
pop
cmp
pop
add
add
cmp
and
add
sbb
xor
adc
loopne
repz
pop
pop
cmp
pop
adc
xorb
xor
or
mov
xor
aam
fadd
mov
or
lret
add
test
cld
cli
push
leave
pop
orb
mov
sub
add
insb
add
sub
add
xor
inc
adc
dec
jmp
lods
or
pop
lret
add
hlt
cs
add
or
xchg
add
push
insb
dec
push
jle
movsl
shlb
inc
call
cld
call
adc
inc
mov
xchg
adc
test
adc
std
adc
and
cmp
jo
adc
jp
std
sbbb
fildl
cmp
icebp
arpl
push
xchg
cli
cld
addb
jmp
or
xor
pop
mov
filds
out
mov
pop
pop
addl
jle
xchg
xor
test
add
sbb
inc
cmpb
das
adc
ja
and
adc
mov
adc
cmpsl
in
push
fsubrs
lea
push
test
xchg
add
fwait
cmp
push
inc
fs
in
das
jle
inc
pop
sub
testl
gs
mov
popw
push
les
mov
or
add
push
jbe
dec
mov
xor
aam
push
xchg
addb
jg
inc
vcmpneq_oqps
shlb
lock
je
inc
add
ror
adc
cmp
push
push
cld
testl
js
mov
test
add
cwtl
ds
push
cs
pop
push
push
daa
test
lret
clc
shlb
dec
add
ljmp
jl
in
rclb
inc
mov
mov
lods
lods
xchg
cli
sbb
inc
repz
xor
inc
popa
push
xor
fistps
push
push
add
push
mov
adc
jmp
rclb
xchg
add
push
sub
notb
shlb
jne
mov
pop
lds
jle
push
jmp
popf
je
leave
sbb
adc
pop
and
and
push
xchg
push
push
and
and
data16
and
daa
sub
inc
loope
aas
add
out
es
cmp
adcl
into
loopne
lods
add
sub
cltd
rol
mov
and
mov
jge
pop
push
shl
or
or
adc
inc
mov
cs
add
add
jbe
dec
jmp
jo
sub
jl
or
and
js
inc
mov
testl
shrl
rcrb
sub
insl
sub
add
or
jmp
push
les
rcr
out
shrb
or
sahf
push
jbe
xor
xchg
scas
mov
or
loope
jne
dec
mov
sub
jle
push
stos
dec
mov
pusha
test
push
adc
sub
mov
xor
xchg
stc
hlt
jl
add
or
loopne
jo
rclb
or
adc
adc
xor
cli
mov
lcall
mov
adc
xor
mov
nop
adc
pusha
or
ljmp
cmp
movsl
add
cmpb
test
out
cld
add
dec
xchg
jmp
jp
insb
push
or
adc
xor
subb
inc
insl
inc
dec
jo
mov
push
push
push
adc
cmp
mov
and
ret
enter
jo
jp
loopne
jb
mov
jl
push
jbe
inc
js
lea
inc
sbb
pop
push
loop
add
bound
aaa
add
or
orb
test
repz
lods
inc
or
xchg
nop
push
mov
adc
inc
mov
cmp
xor
add
call
add
adc
movb
xor
ret
enter
add
test
pop
adc
jbe
or
inc
icebp
and
push
and
pusha
xor
mov
or
add
cld
adc
out
std
inc
mov
sub
mov
or
xchg
mov
lcall
mov
sbb
sbb
sub
adc
dec
daa
cwtl
or
mov
out
pusha
test
or
jg
mov
mov
adc
pusha
lea
cmp
push
mov
jb
jmp
sub
adc
mov
adc
cmp
mov
sub
and
adc
and
sub
repz
or
scas
jne
and
lret
xor
inc
testl
pop
sub
pusha
cmp
mov
mov
or
push
xchg
adc
pop
jecxz
pop
cmpl
loop
ds
add
sbb
iret
cmpsb
inc
cmp
mov
add
pop
adc
imul
scas
les
adc
in
pop
popa
mov
in
jmp
or
stc
push
loopne
pusha
dec
cmc
push
lds
sub
lahf
int3
loope
js,pn
jnp
xorl
fcoml
mov
add
push
pop
mov
inc
pusha
adc
stc
dec
enter
scas
push
add
mov
sbb
fistpl
add
and
sub
mov
and
lret
je
sub
cli
popa
push
adc
cmp
and
les
push
stos
inc
mov
dec
std
xchg
dec
pusha
adc
push
cli
push
leave
nop
ret
test
push
add
adc
insl
pusha
loopne
andb
pusha
popf
mov
rolb
jbe
bound
rcl
push
pop
and
aad
stos
and
add
out
sbb
xor
cmp
sbb
insb
jg
push
inc
loopne
or
pusha
add
sahf
and
lds
and
push
xchg
lcall
call
cmc
xchg
adc
sbb
push
cmp
adc
push
hlt
sub
adc
sbb
adc
push
sbb
imul
and
int3
in
push
lock
jmp
mov
insb
movsl
mov
pop
daa
add
jne
sti
aaa
xorb
xor
or
pop
testb
xor
sub
fisttps
inc
push
add
imul
adc
sbb
xchg
jl
sbb
pop
and
cli
iret
rolb
fsubp
imulb
mov
push
pop
inc
stos
and
mov
add
jg
push
inc
arpl
ret
xchg
pop
xchg
adc
push
push
rorb
dec
xchg
nop
adc
push
push
nop
xchg
sbb
dec
mov
inc
in
jo
fimuls
xchg
bswap
jl
push
add
popf
clc
and
push
and
adc
push
jo
push
cld
or
and
std
lock
test
xor
adc
mov
out
add
xchg
hlt
or
mov
and
leave
jno
test
sub
mov
neg
sub
es
outsb
mov
test
and
lock
shll
sbb
test
mov
xchg
rorb
xchg
jl
aam
add
dec
into
addl
or
in
pop
add
and
adc
pop
xor
or
cmpl
hlt
and
mull
add
leave
lods
mov
andb
push
call
adc
mov
adc
call
sub
out
inc
push
clc
jmp
ret
call
clc
jmp
outsb
sub
inc
nop
xor
orl
push
pushf
xchg
mov
hlt
xor
shlb
xor
shrl
jle
adc
ss
mov
test
push
incl
aaa
cmp
add
push
xor
movb
stos
and
jmp
cs
and
and
cmp
enter
js
mov
pop
xorb
xlat
pop
mov
add
pop
pop
mov
rorl
lock
add
add
ljmp
filds
dec
sbb
push
dec
dec
xchg
and
test
mov
je
addb
adc
xchg
and
lea
jge
mov
out
add
add
mov
push
std
jne
and
sub
add
mov
pop
clc
popl
fstl
inc
pop
push
cld
mov
push
dec
mov
hlt
jo
sub
cmp
mov
and
add
mov
adc
imul
sub
rcrb
jge,pt
popa
enter
adc
jo
jne
popa
fcoml
mov
call
sbb
xor
idiv
popf
ret
and
rcl
adc
pop
lret
outsl
xor
push
mov
or
mov
inc
mov
pop
xor
push
clc
or
mov
xorb
decl
in
xor
sub
out
push
jle
and
jb
xor
cmp
fisubs
xor
mov
inc
movsl
adc
mov
test
or
es
rorb
add
movzbl
add
lock
push
add
or
ss
add
inc
pop
pop
adc
push
call
mov
inc
rol
adc
mov
or
pop
shlb
push
xchg
cltd
enter
aaa
dec
pop
dec
loopne
lods
popf
icebp
jl
lock
push
pop
sub
xchg
mov
sarb
call
push
pop
jo
icebp
dec
shrb
lods
ljmp
mov
add
xor
je
out
andb
pop
aaa
call
jg
sbb
mov
mov
mov
pop
xchg
xchg
or
jbe
sahf
jmp
adc
fwait
push
jno
and
mov
add
or
sahf
call
rcrb
adc
dec
test
pusha
adc
rclb
stos
inc
cli
mov
icebp
cmp
loopne
push
loopne
adc
mov
jbe
fdivs
mov
rorb
mov
mov
and
mov
data16
or
xor
dec
fildl
divb
lods
mov
jp
and
xchg
mov
inc
shlb
cwtl
inc
sti
movl
mov
ss
lcall
mov
mov
sub
call
dec
cld
int3
int
adc
popa
ja
xor
jo
xor
add
add
sbb
mov
xor
mov
push
xor
pop
icebp
dec
dec
add
call
mov
outsb
inc
inc
xor
ja
dec
mov
inc
cld
jg
and
or
pop
mov
add
je
adc
adc
popl
cli
jbe
xor
inc
in
mov
push
jmp
mov
push
xchg
cmc
fdiv
ja
lea
and
ds
mov
loope
adc
rol
jle
mulb
rorl
sbb
shl
addb
pusha
mov
hlt
xor
in
cli
add
mov
sbb
sbb
mov
mov
sub
mov
mov
insb
add
sub
out
movsb
mov
xor
or
or
xor
insb
cmp
outsb
mov
clc
mov
addr16
mov
adc
test
call
pop
push
dec
mov
xor
pop
enter
and
test
jbe
adcb
test
sub
jg
lock
aam
push
or
dec
mov
orb
mov
sub
fwait
pop
push
jb
dec
lock
incb
add
das
and
jo
xor
jbe
adc
or
or
idivb
cmp
mov
pop
cld
outsl
push
mov
push
push
push
shll
shr
sahf
mov
mov
add
shr
xchg
add
push
lods
push
test
push
outsl
sbb
add
adc
xor
mov
dec
inc
sbb
mov
mov
dec
sbb
inc
jns
push
shll
les
sbb
pop
fiaddl
adc
push
mov
rolb
testb
ja
add
neg
push
adc
scas
add
sbb
jge
fistpll
or
es
scas
add
ja
mov
adc
pop
and
dec
mov
jmp
mov
outsb
push
xor
adc
add
or
mov
testl
repz
cld
xor
add
push
mov
inc
aam
mov
mov
add
push
pusha
imul
out
push
je
sub
jo
mov
adc
fs
not
lret
sub
pop
sub
jae
and
lea
sub
lock
bound
outsl
adc
or
fidivl
fiadds
pusha
jg
mov
pop
cmp
and
dec
jbe
pushf
inc
jb
or
test
ret
push
and
push
fmulp
inc
out
adc
ds
push
jne
jl
add
cli
decl
inc
or
mov
fcos
je
xchg
test
xchg
pusha
lret
or
fsubr
fcmovbe
sub
fldcw
push
scas
imul
adc
insl
xor
js
mov
jb
cmpb
lods
push
push
je
xchg
pushf
inc
jmp
es
adc
push
dec
xor
xor
xchg
xor
push
or
mov
mov
xor
pop
sub
push
pop
scas
adc
or
xor
pop
ret
xchg
xorb
jb,pn
pop
lea
ss
or
xchg
mov
cmpb
inc
xchg
adc
mov
sbb
orb
repz
adc
fs
cli
dec
adc
xor
sbb
je
inc
and
inc
add
jnp
or
daa
mov
popl
and
enter
popf
orb
push
adc
shrb
decl
and
dec
pop
aaa
es
add
mov
test
mov
pushl
add
mov
add
xor
add
rorb
inc
in
ljmp
cltd
push
dec
cli
xor
movsb
mov
sub
push
jle
addl
lea
add
adc
dec
jb
ret
and
xchg
cmpb
push
push
call
add
and
jbe
dec
test
pop
jl
aad
adc
xor
enter
sub
xchg
je
push
pop
ficompl
int3
je
adc
iret
addb
pusha
cmp
cmp
push
xchg
adc
or
add
int3
or
xor
dec
or
cld
iret
xor
insl
pop
adc
add
sets
call
dec
testb
call
pop
add
cmpsb
cli
outsb
dec
outsb
sub
je
adc
dec
test
scas
cli
adc
mov
xchg
adc
test
nop
clc
or
stos
push
jno
repnz
mov
int3
cmpl
push
test
cli
mov
mov
push
into
sbb
inc
je
frstor
hlt
sarb
adc
xchg
into
in
pop
dec
inc
int
cmpl
dec
mov
pop
add
or
adc
add
sbb
adc
inc
test
adc
or
and
adc
scas
add
adc
pop
repz
mov
dec
push
incb
adc
mov
sbbl
pop
or
lods
add
and
or
roll
loop
mov
sub
rclb
movsb
lret
call
push
mov
adc
lret
pop
adc
adc
shrb
add
pop
push
and
push
cmp
mov
sub
mov
nop
clc
add
or
fcmovnu
cmp
sbb
cmp
or
test
inc
and
data16
pushf
ror
add
js
push
decl
add
and
rolb
pushf
pop
push
mov
movb
mov
cwtl
rolb
and
ja
pop
movsb
roll
loopne
cli
loopne
insb
mov
adc
mov
pushf
or
sub
aaa
inc
pop
nop
movsb
add
movl
roll
test
and
mov
aam
adc
cld
push
sahf
push
add
dec
mov
pop
int3
push
rorb
test
push
loop
or
fdivs
push
imul
test
js
shl
js
pop
push
add
jle
stos
fadd
testb
int
or
lock
mull
lds
mov
mov
jg
xchg
mov
add
push
rcr
loop
rcr
or
jne
inc
test
lock
out
mul
add
push
add
divl
cmp
adc
dec
sub
or
ljmp
add
aaa
fdivrs
mov
test
jmp
outsb
popa
mov
push
mov
hlt
push
push
or
out
sbb
or
decl
mov
push
push
adcb
pop
pop
movsb
ret
or
ret
data16
mov
and
insl
sbb
ret
outsl
cli
cs
mov
test
push
rorb
lea
mov
stos
adc
push
mov
sete
outsl
out
inc
adc
sbb
add
aaa
pushf
testb
push
cmovs
push
push
push
sbb
jle
cmp
mov
add
aaa
or
add
je
or
es
or
xlat
cmp
sbb
jg
shlb
imul
sub
sub
push
adc
pushl
popa
loopne
pop
pusha
pop
cmp
cmp
outsl
pop
or
out
fadd
sub
jg
shr
or
inc
add
loope
adc
lret
mov
clc
push
xor
test
shlb
or
mov
adc
push
call
mov
adc
or
sbb
add
add
loope
sub
loope
push
ret
testl
add
add
sub
shll
dec
mov
sbb
jbe
insb
and
test
clc
jb
add
loopne
test
jo
or
aas
add
push
jbe
call
jle
dec
fs
pusha
andl
dec
mov
jg
jl
dec
lock
mov
cmp
inc
mov
mov
xor
jmp
clc
cwtl
dec
cmp
push
pop
jle
and
push
loopne
mov
pop
pop
push
je
ret
test
xchg
cwtl
loope
mov
jb
or
rcrb
ljmp
int3
mov
fdivr
fdivs
nop
lock
pop
sub
pop
pop
aam
loopne
jne
mov
add
inc
mov
or
jecxz
sbb
pop
or
rcll
and
cld
inc
fdivs
cmp
sahf
dec
push
or
jmp
rorb
add
sub
sub
loopne
adc
cld
shl
mov
mov
jb
les
cld
and
add
mov
jmp
popa
xor
and
pusha
cmp
loope
xchg
mov
cwtl
orl
test
sbb
add
inc
mov
xchg
int
lock
push
xchg
call
or
xor
mov
push
imul
mov
mov
addr16
mov
pop
pushl
pop
pop
mov
add
lret
cltd
pusha
adc
add
sub
jbe
mov
adc
push
adc
pop
inc
pop
add
push
push
fs
mov
add
push
push
inc
add
sbb
xor
push
shll
sbb
mov
pop
adc
sbb
sbb
mov
mov
and
add
or
jo
clc
and
insl
cs
lock
addb
fdivs
frstor
pop
cmpsb
lock
in
mov
pop
sub
sbb
push
xchg
stos
mov
pusha
mov
xchg
movsb
data16
shll
jl
js
mov
sub
inc
pop
adc
cli
or
or
push
std
or
add
or
and
sbb
add
sbb
movsl
pop
dec
stos
sub
and
insl
xchg
in
push
imul
imul
out
lcall
cs
mov
insl
outsl
push
lock
aam
or
pop
cmp
sub
adc
movsb
mov
int3
push
das
jo
sub
push
xlat
cmpb
sbb
xor
push
xchg
sbb
insb
aaa
pop
mov
out
add
xor
lods
xchg
dec
repnz
inc
push
cld
add
test
stc
mov
and
adc
sbb
mov
ret
mov
add
push
jl
jo
cld
push
stos
lock
stos
cmp
loopne
pop
add
push
icebp
add
loop
mov
mov
inc
or
aad
cwtl
dec
mov
add
ror
cmc
add
push
imul
or
add
sbb
mov
dec
jo
subb
jo
jp
push
push
or
loope
aad
jo
jnp
outsb
mov
xor
push
sbb
pcmpgtd
sbb
or
push
xor
xor
or
xchg
call
pop
in
jne
add
jno
push
or
stos
mov
lods
loopne
pop
sub
ljmp
xor
pop
push
lock
xchg
mov
lds
loop
lcall
ret
loopne
mov
ss
mov
jb
rorb
dec
cmpsb
mov
jmp
hlt
or
mov
push
ja
adc
test
pop
ljmp
push
lock
scas
jns
lods
lock
jne
ds
jae
ss
add
sti
xor
xor
in
add
negb
xor
adc
add
add
or
out
sarl
xor
cmpsl
jp
int3
jnp
mov
pop
sbb
jne
and
sbb
ja
push
ja
add
lcall
dec
cwtl
imul
push
xchg
push
jno
in
aad
sbb
enter
push
loopne
dec
sbb
sbb
repz
sbb
nop
lock
xchg
stos
int
shl
out
sbb
movsb
jo
or
lcall
or
je
inc
cmp
add
faddl
lock
shll
mov
popf
push
out
or
orl
push
subl
js
lods
andl
dec
lock
mov
mov
cld
sarb
sbb
xchg
push
icebp
mov
sub
lods
stos
and
push
outsl
adc
movsb
jo
push
add
int
shrl
outsb
xor
insl
adc
or
in
dec
fldcw
mov
inc
pushf
cmp
pusha
cmp
loopne
lods
cld
or
stos
in
stos
fmull
pop
or
les
push
lods
jp
push
mov
pop
adcl
out
sbb
xchg
add
lcall
pusha
pop
pop
adc
insl
inc
xchg
push
stos
dec
jl
xor
insl
sub
cmp
cmp
xor
sahf
or
lcall
xchg
push
xchg
add
dec
mov
stos
xchg
decl
sub
and
add
sbb
adc
push
bound
mov
xchg
fsubrs
mov
stc
xor
cmc
adc
add
jmp
in
cmp
xor
pop
imul
roll
imul
mov
shll
movsl
push
testb
popf
add
cmp
stos
cltd
adc
add
lea
sbb
ss
int
movb
ret
addb
add
stos
scas
dec
repz
push
sbb
xor
repz
mov
dec
repz
jbe
outsb
dec
repz
push
bound
push
xor
repz
dec
dec
inc
inc
repz
repz
xor
dec
repz
sub
and
sbb
xor
repz
push
or
add
cmpb
ljmp
loop
fcmovbe
sahf
cmpsb
imul
mov
mov
cmpsb
jns
jbe
sbb
cmpsb
jns
xchg
xchg
mov
cmpsb
jns
jp
jb
cmpsb
jns
cmpsb
push
bound
lcall
dec
inc
inc
jns
cmpsb
jns
cmp
xor
cmpsb
jns
cmpsb
sub
and
sbb
adc
or
add
shll
inc
jb
div
out
push
ljmp
loop
fcmovbe
dec
shll
ror
lret
mov
lahf
mov
xchg
les
mov
pusha
mov
mov
stos
mov
pusha
jo
mov
inc
xor
mov
imul
pop
rcrl
sub
pop
push
sbb
inc
test
and
sbb
xchg
cmp
aaa
xor
outsb
cmpsl
imul
scas
imul
add
or
sbb
xor
sbb
lcall
sbb
adc
dec
roll
or
inc
add
imul
out
imul
ljmp
add
mov
fiaddl
icebp
xor
loopne
pusha
cmpsl
movsb
xor
ror
call
sahf
lcall
movsb
add
sbb
jbe
or
cmp
movsl
fnstenv
pop
mov
pop
add
add
cmp
cmpsb
add
dec
cmpsl
and
cmpsl
push
sbb
push
sbb
movsl
cmp
inc
mov
int3
shll
ret
loopne
mov
add
and
mov
or
pusha
jo
mov
sbb
inc
push
sbb
lock
mov
pusha
dec
aas
jp
adc
andb
sbb
mov
jno
sub
xor
inc
cmp
mov
xor
push
jmp
sbb
loope
jns
and
sarl
dec
mov
jg
lcall
cmpsb
das
popl
movb
mov
add
jne
stos
push
and
xorb
jne
sub
add
std
or
insb
lea
add
aas
and
rcrb
aaa
mov
das
pop
movsl
pop
adc
pop
pop
sbb
mov
and
sub
xchg
shl
push
push
bound
sti
addl
sub
repnz
in
mov
and
mov
push
push
mov
shr
or
sarb
das
ret
or
pop
loopne
loopne
pop
es
jb
ret
ret
or
add
orl
jge
sbb
add
push
data16
cmpsl
sub
mov
mov
popf
mov
push
int
rorb
xor
xlat
add
out
and
adc
das
adc
adc
call
adc
dec
mov
out
fdivr
aaa
mov
push
ret
pop
das
add
or
push
push
pop
and
and
xchg
fstps
add
cmp
fdivrl
std
adc
pop
lock
icebp
push
add
lock
cmp
call
jecxz
add
inc
add
mov
xor
pushl
jb
mov
mov
fisttps
mov
add
bound
icebp
push
and
pop
mov
incl
mov
cmpsl
add
cmp
push
add
jp
jg
add
push
rolb
call
mov
pop
lock
add
or
mov
add
add
or
mov
push
call
shrb
mov
and
or
fidivrl
je
inc
xor
stc
adc
sub
xor
xor
fnstsw
cmp
nop
in
ja
pushl
pop
cltd
xor
cmp
call
addb
xor
add
push
xchg
repnz
call
cmc
or
lods
inc
pop
sub
pop
mov
and
sbb
je
pop
je
pop
adc
jo
mov
hlt
pushl
stc
add
and
push
inc
jo
lock
and
mov
mov
or
mov
addb
cmp
insb
das
fdivr
call
xor
mov
jno
std
xchg
mov
sbb
add
sbb
add
adc
cwtl
inc
pop
mov
mov
xor
xor
out
jo
and
jo
or
pop
shll
test
imul
add
popa
pushf
lcall
mov
add
push
loop
mov
in
and
and
or
adc
pop
jo
jbe
add
xchg
xor
add
sbb
push
sbb
cld
sbb
cwtl
cld
mov
jge
lret
jg
cwtl
or
adcb
pop
cmp
xor
outsb
or
mov
or
xor
cltd
xor
addl
ret
jbe
add
mov
pop
mov
inc
mov
and
lock
sti
cmp
decl
loopne
xchg
andb
add
and
ss
add
sbb
ret
mov
push
int
mov
jne
inc
orb
mov
mov
fimull
hlt
add
and
mov
icebp
add
add
mov
xor
inc
jne
mov
movsl
call
test
jno
dec
mov
cmc
out
adc
add
cli
jo
ret
mov
hlt
add
call
jne
cmp
clc
repnz
repnz
add
pop
call
shl
add
push
xor
hlt
jg
push
cmp
sbb
call
adc
bswap
xor
jo
inc
sub
mov
cmp
mov
or
cld
adc
pop
sti
or
fcom
mov
mov
jle
ja
mov
jmp
push
mov
and
adc
mov
push
call
jo
add
ds
xchg
div
ds
pop
add
pop
es
push
mov
cmp
xor
out
call
xor
je
jp
xor
sbb
sahf
outsb
jp
shll
push
xor
sub
aad
inc
and
add
sbbb
fdivl
mov
mov
and
movsb
or
pop
cmpsb
fwait
lock
xor
inc
mov
pop
jl
xor
or
sub
and
mov
shll
test
mov
and
mov
mov
mov
ljmp
scas
sub
xor
hlt
add
cmp
mov
mov
inc
mov
jbe
push
mov
sti
push
icebp
sbb
pop
bound
mov
cmp
mov
mov
push
push
push
clc
jno
or
call
jl
jg
cmp
pop
mov
jo
adc
or
clc
jbe
sub
jbe
xchg
sti
xor
cmp
jmp
inc
add
xor
cmc
notb
sbb
pop
push
lock
xchg
fsubr
clc
adc
sbb
push
or
test
imul
mov
js
jbe
cmp
std
shrb
cmp
jl
lock
cmp
testb
push
add
call
xor
push
pushl
call
add
add
ss
shlb
outsb
loop
cmpsb
jae
xor
pop
add
pop
or
sub
call
add
jg
mov
negl
rorb
add
movsb
sbb
add
jo
out
leave
test
mov
daa
cmp
or
iret
or
dec
add
cld
mov
mov
cmp
mov
and
xor
call
cld
aaa
add
jle
xchg
subl
sbbb
pop
addl
sbb
inc
jl
andb
aam
fisttpll
add
add
pusha
xchg
or
add
test
inc
xchg
xchg
out
add
xor
inc
and
and
add
pusha
test
xchg
push
mov
je
mov
add
sub
push
mov
push
jg
jbe
xor
sbbb
into
fistpl
lret
movsb
je
cmp
je
adc
loope
cmp
add
pcmpeqb
mov
orb
xchg
mov
inc
outsl
xchg
add
ret
rolb
mov
ret
nop
je
ret
movsb
push
cmp
movsl
je
int3
fildll
ret
cmpsb
adc
ret
xchg
cs
stos
adc
ret
stos
je
ret
lods
outsl
mov
mov
ret
scas
adc
ret
mov
adc
insl
je
mov
out
ret
outsb
or
outsl
hlt
ret
movups
add
aas
add
incb
add
cmp
jo
sbb
cmp
fstl
and
mov
insb
imul
mov
call
add
movsl
cli
lret
push
ret
inc
test
pop
or
jge
inc
lret
inc
cli
xor
scas
rolb
mov
push
les
jecxz
fistpll
ret
add
hlt
or
shl
mov
jle
aam
xchg
mov
or
mov
add
jle
mov
clc
jg
dec
inc
ret
sarb
call
push
mov
outsl
scas
call
bound
adc
rclb
mov
add
add
div
or
push
jne
push
add
shrb
ret
test
cmp
lcall
shrb
xorb
mov
shll
pop
and
inc
adc
mov
mov
test
and
and
mov
cld
stos
push
lock
xadd
mov
repnz
sbbl
cli
js
addl
je
inc
inc
mov
mov
and
pusha
cmp
dec
or
sbb
loopne
add
es
push
cld
cmp
sbbb
fisttpl
loop
add
ljmp
addr16
inc
jg
add
sub
inc
call
mov
xchg
push
test
je
jge
push
add
mov
push
call
cli
movq
or
inc
loope
pop
cmp
mov
sbb
hlt
xor
bound
and
push
ret
test
ljmp
mov
xchg
or
cmp
cmc
hlt
adc
add
inc
lds
jg
nop
pushf
mov
pusha
dec
ret
sub
mov
xor
jbe
loope
or
fbstp
jo
sub
popa
cmp
add
push
and
push
mov
scas
clc
pop
push
push
loope
adc
out
inc
out
add
xor
push
jg
lcall
lcall
jle
dec
pusha
punpcklbw
clc
jle
in
add
fs
imul
repz
dec
mov
or
add
das
xor
test
xchg
inc
movsb
in
push
inc
jb
insb
clc
adc
or
call
inc
aaa
adc
push
mov
add
arpl
add
mov
sbb
adc
adc
add
insl
mov
aam
adc
sbb
ja
jle
ja
and
adc
push
xlat
pusha
add
imul
shll
out
inc
or
lret
movsb
hlt
outsl
pushl
push
inc
dec
pusha
or
enter
xchg
loopne
cmp
pop
inc
xor
loope
cmpsb
insl
xchg
inc
outsl
jp
sahf
loope
adc
ds
inc
lock
push
call
mov
cmpsb
fstps
push
sbb
call
clc
sbb
add
data16
add
sti
inc
ret
add
test
sub
cmp
inc
pushf
sub
cmc
in
inc
inc
pop
adc
mov
add
dec
pop
add
mov
sbb
fldenv
mov
out
add
es
popa
adc
loopne
add
and
inc
loopne
popa
add
push
jo
jmp
aad
leave
push
push
or
jnp
pop
and
push
ja
mov
push
sar
pop
xor
les
aaa
icebp
add
jnp
dec
inc
cmc
arpl
add
and
orb
dec
iret
xlat
cmp
push
cltd
pop
xor
xchg
fdivrs
push
pop
sbb
pusha
roll
repz
shrl
sbb
insl
pop
movsl
and
out
mov
sbb
jnp
sbb
lcall
dec
mov
xor
jl
pushl
out
rcrl
ret
scas
lea
pop
mov
jp
out
mov
and
stos
jmp
xchg
int
adc
cmp
mov
pop
jg
mov
mov
les
jnp
sbb
push
stos
sub
popf
mov
sarl
jne
jo
mov
aaa
cs
pop
cld
push
jl
push
pop
stos
xchg
mov
out
mov
ret
push
xor
xor
adc
dec
pop
imul
aad
mov
or
or
add
pop
clc
jg
add
and
inc
adc
jp
cli
clc
push
jg
xor
add
mov
and
pushf
dec
push
mov
jo
cmp
ret
pop
and
cmpsl
xchg
leave
sbb
jecxz
sar
imul
das
cmp
mov
pop
pcmpeqw
jnp
fwait
push
mov
shll
fwait
jno
sub
inc
pop
jmp
pop
aad
dec
jno
sbb
loope
lcall
mov
psrlw
rorl
cld
dec
push
and
clc
xor
aam
dec
jle
leave
lock
dec
fstpl
jo
mov
adc
pop
ljmp
clc
jo
cmpsl
enter
sub
stc
jo
add
imul
in
imul
push
sub
les
or
mov
int3
xchg
je
push
sub
mov
lods
inc
popl
data16
movsl
decl
xchg
jae
add
mov
jg
or
imul
and
fs
xor
pop
pop
les
push
push
and
xchg
push
jae
add
pusha
fistpl
sbb
outsl
jb
or
fcomp
add
inc
mov
mov
mov
push
outsl
inc
outsl
mov
inc
popa
je
push
sbb
adc
add
jo
adcb
fwait
mov
bound
gs
bound
in
add
xor
lcall
outsl
or
adc
cmp
fiaddl
pop
ljmp
add
je
or
pop
mov
push
shlb
or
sbb
add
notb
add
aad
mov
mov
test
je
fiadds
nop
push
stos
jo
fisubl
dec
pop
insb
inc
jae
add
jle
fidivrs
dec
imul
insb
nop
xor
dec
sahf
outsb
fs
ja
fisttpl
mov
inc
pushf
popa
mov
sbb
add
hlt
inc
cmp
int3
ss
cwtl
jb
popa
cmpb
mov
scas
test
dec
or
push
inc
shlb
push
add
jb
adc
fistpll
je
xchg
imul
insb
push
pusha
push
xchg
loopne
jle
mov
lcall
push
jo
xchg
sbb
out
icebp
add
pop
out
add
mov
add
mov
subb
xor
lcall
mov
push
or
adc
jb,pn
arpl
fwait
dec
mov
jb
adc
add
fcomip
or
repnz
or
pusha
movnti
dec
ret
arpl
or
add
add
pushf
xchg
jb
mov
lds
lea
push
xor
mov
xchg
roll
add
das
pop
cltd
gs
sub
xchg
xchg
jae
ss
add
mov
js
sbbb
push
jecxz
out
cmpsb
inc
adc
sbb
push
inc
nop
jne
rol
xchg
push
mov
inc
pusha
or
out
cmp
add
mov
lock
test
sbb
cmp
xchg
sub
jg
dec
jo
add
mov
push
in
add
sbb
mov
and
outsb
push
xchg
add
loopne
push
push
jae
int
mov
je
add
sub
xor
sub
add
nop
insb
push
or
mov
push
mov
orb
adcl
push
idiv
enter
ja
orl
jbe
lock
xchg
std
andb
fsts
ljmp
ret
inc
xchg
sbbb
add
push
icebp
push
cmp
push
and
fsub
mov
popa
addb
xchg
cld
jno
mov
orl
insl
dec
mov
push
sbb
jo
int3
js
sbbb
test
sbb
insl
adcb
rolb
fdiv
mov
ja
cltd
andl
std
out
adc
xchg
push
imul
cmp
aad
mov
cs
insl
cmp
jbe
fistpl
inc
jo
add
insb
stos
bound
shll
add
adc
add
jb
pushf
insl
pop
mov
push
lds
inc
cmp
ret
sbb
subl
inc
imul
arpl
rcrb
stos
pop
or
mov
sub
and
icebp
lds
xchg
or
outsl
sub
shrl
or
out
arpl
shlb
outsl
mov
gs
adc
lds
ret
or
mov
popa
lds
adc
pop
fcmovb
push
dec
sub
jbe
push
xchg
xchg
adc
dec
add
mov
mov
outsb
hlt
test
xchg
stos
dec
das
and
mov
rorb
xchg
inc
rorb
push
lods
inc
ret
popa
adc
js
fwait
scas
mov
push
push
rcrb
sahf
mov
imul
sar
lahf
cmp
imul
lea
shrb
ds
xchg
jbe
dec
mov
rorb
sub
adc
and
mov
lret
inc
js
rol
shll
insb
es
fmull
mov
mov
jbe
cmp
imul
rcll
xchg
enter
inc
shr
cmp
rorl
sub
push
bound
data16
into
add
test
loop
sbb
jb
sarb
lods
shrb
outsb
add
out
imul
fisubrl
je
cmp
jns
inc
sbb
dec
inc
push
mov
ss
xchg
jb
loopne
push
mov
subb
add
sti
mov
imul
push
insb
idivl
loope
adc
pusha
and
sub
loope
xchg
loopne
jg
ficompl
jg
loope
insb
add
add
sbb
pop
jo
push
in
andb
jne
aaa
add
insb
mov
mov
xchg
stos
gs
mov
lock
dec
fs
jb
sahf
loopne
fbld
inc
sar
dec
mov
dec
lds
add
in
popa
add
cmpsl
loope
outsb
jb
clc
decl
jb
outsl
fwait
adc
imul
adcl
jmp
sbb
mov
std
mov
aas
arpl
loope
out
push
out
es
push
push
or
jne
mov
xor
inc
jb
outsl
add
in
dec
in
xchg
fwait
pusha
outsl
xorb
negb
popa
int3
mov
loop
inc
push
scas
mov
loope
mov
rclb
push
js
and
mov
imul
push
push
loopne
inc
data16
int3
add
pushf
loopne
mov
push
add
dec
dec
jmp
or
loopne
mov
bound
movsb
shll
pusha
and
cmp
cs
and
scas
repnz
push
mov
cmp
push
loopne
ret
fbstp
int3
loopne
add
insb
or
je
bound
insb
mov
loope
andl
mov
jae
adc
sahf
mov
dec
sbb
xchg
cmpsb
cwtl
loopne
add
jecxz
adc
fsts
and
jg
mov
sbb
ds
add
and
jb
outsb
sub
int3
or
pushl
loopne
sahf
popa
bound
cwtl
cmp
arpl
int3
add
add
data16
out
dec
gs
mov
dec
sub
or
je
add
dec
pop
mov
loopne
sahf
lock
loop
jb
stos
xor
xchg
sub
js
addb
pop
dec
sbb
int3
cmp
mov
cli
mov
mov
daa
sub
dec
jae
lods
loopne
mov
stos
jb
movsb
popa
adc
jmp
xor
popa
add
pusha
leave
pusha
push
push
in
clc
sbb
add
bound
inc
addl
mov
je
dec
push
dec
pusha
in
fimull
add
cmp
xor
clc
xchg
popa
jae
inc
xor
stos
gs
mov
mov
push
loopne
outsl
ja
jg
lods
sub
je
in
and
adc
mov
add
pusha
or
shrb
outsl
add
and
clc
cmp
gs
jmp
mov
adc
jl
mov
out
adc
bound
inc
test
sub
in
adc
add
fistl
mov
fwait
stos
jo
push
cmp
jo
cs
or
sahf
mov
decb
add
add
mov
popa
cmp
ja
pusha
loop
push
mov
push
push
cltd
push
outsb
or
stos
imul
mov
repnz
insb
add
bound
lea
mov
mov
mov
and
fwait
push
add
add
sahf
outsb
jae
inc
sbb
add
mov
lock
lock
mov
mov
sbb
mov
fcoml
lds
xor
mov
jno
jb
cmp
mov
aaa
mov
lcall
push
or
test
cmp
inc
std
aaa
rol
add
xor
add
lock
push
jb
push
push
imul
cmp
les
inc
fs
add
movsl
je
jo
insb
pop
hlt
sub
jno
or
or
add
cmp
outsb
cmpsb
icebp
push
inc
mov
push
sahf
sub
jns
add
gs
sbb
fbld
lock
nop
ja
xor
or
inc
insb
sahf
test
decl
xchg
xor
inc
lea
mov
andb
push
push
popa
cmc
add
jno
mov
cmp
inc
cld
outsb
mov
sbb
or
xor
jp
lock
push
mov
stos
add
dec
xchg
jne
sbb
cld
out
inc
insl
xor
jns
dec
inc
rorb
fwait
jno
xor
and
fdivp
or
icebp
push
mov
push
outsb
inc
orb
xor
call
dec
or
mov
mov
cmp
dec
inc
push
cmp
sbb
lods
xor
incl
jno
xor
in
icebp
enter
add
ja
xchg
jo
adc
jae
scas
cs
cmpb
outsb
cltd
outsl
sub
mov
arpl
ljmp
les
jo
test
into
icebp
dec
stos
mov
dec
mov
xor
add
jno
sbb
mov
mov
dec
mov
es
andl
push
subb
mov
add
and
imul
aad
add
lcall
decl
icebp
mov
adc
add
add
data16
jns
dec
inc
in
jg
jge
mov
ss
pushf
jbe
mov
int
push
dec
cmp
add
nop
repz
insl
loope
push
mov
scas
add
adc
incb
lock
sbb
mov
jae
push
sahf
add
dec
add
je
jo
dec
inc
bound
stos
push
std
xor
or
pushf
mov
and
cs
sarb
filds
ss
rdpmc
or
sbb
fwait
or
xor
jae
jo
xor
ljmp
loope
ret
xor
orb
je
mov
add
push
mov
gs
mov
mov
mov
jg
lock
mov
imul
daa
inc
cld
dec
add
push
arpl
jno
or
add
fwait
push
scas
or
inc
pop
out
add
incl
mov
mov
mov
jp
jb
pusha
in
push
or
push
int3
add
fs
insb
or
shl
sbb
lret
and
lcall
outsb
jno
xor
lea
pop
pusha
clc
add
xor
xor
or
test
je
nop
repnz
pop
icebp
or
imul
outsb
xor
mov
ljmp
mov
mov
jbe
inc
jns
push
arpl
jo
mov
dec
xor
mov
call
jb
jbe
jb
sahf
arpl
dec
cmc
pop
mov
add
jne
jns
repz
incl
fdivl
scas
jbe
mov
arpl
stos
jns
es
arpl
ljmp
lds
add
adc
std
mov
mov
mov
cmp
mov
fcmovb
cmpsb
push
imul
jno
lock
mov
push
xor
add
xchg
gs
gs
inc
cltd
cs
mov
mov
pop
dec
mov
movsb
xor
cwtl
jns
lcall
icebp
ljmp
je
leave
int3
dec
lods
cwtl
je
push
xchg
sub
or
lock
stos
outsl
cmp
mov
adc
and
push
mov
pop
add
jb
push
imul
incl
inc
insb
dec
outsb
dec
outsb
jb
sub
in
imul
popa
xor
cmp
jo
fucomp
adc
inc
add
push
xor
mov
mov
mov
mov
outsb
jns
mov
xorb
push
jne
lock
mov
and
and
outsl
jo
add
dec
inc
mov
add
imul
push
cld
sbbb
lods
jne
inc
mov
dec
outsl
xor
shlb
rep
int
mov
add
cmpsl
js
and
cmp
jne
ss
fidivl
sbb
add
popf
jno
jb
xlat
inc
jae
nopl
outsl
mov
jo
clc
mov
adc
gs
add
mov
mov
jne
je
add
ret
jl
inc
inc
lods
andl
movsb
sbb
sbb
nop
mov
loope
cmp
popa
arpl
arpl
inc
gs
arpl
arpl
fstp
add
mov
outsb
jb
pop
test
mov
xchg
outsl
inc
xor
xchg
mov
lods
or
out
or
imul
lcall
cli
inc
insl
jo
test
add
sbb
jo
inc
movsb
fisubs
in
adc
insb
bound
push
outsl
and
pusha
add
push
sbb
popa
sub
xorb
subb
and
sbb
fiadds
ja
jbe
aam
sahf
outsb
mov
test
mov
jae
jb
data16
andb
popa
xchg
outsb
adc
inc
mov
or
inc
adcl
incl
inc
adc
xchg
subb
orb
fs
add
xchg
jae
push
call
mov
test
inc
dec
lcall
adcb
arpl
jnp
add
movsb
and
xchg
mov
pop
cwtl
or
inc
push
jb
lock
cmp
dec
xor
test
popa
fildl
mov
insb
xchg
add
add
pop
xor
outsl
insb
fwait
inc
jl
sahf
jo
clts
fucomip
inc
aad
insl
inc
add
push
nop
inc
jb
jl
fwait
addr16
daa
rclb
insb
inc
inc
xchg
jne
shlb
inc
fisttpl
mov
bound
push
ret
add
loop
lcall
rcrl
and
int
sbb
mov
fwait
loop
dec
push
dec
mov
loop
dec
or
or
sub
bound
mov
mov
push
rcrb
mov
mov
xchg
movsb
loopne
insb
rolb
aam
mov
xchg
and
mov
fdivrs
in
mov
add
jns
fdivs
ljmp
inc
push
mov
mov
push
rorb
mov
pop
mov
add
pushf
ret
xchg
lds
xchg
add
mov
sbbl
inc
inc
inc
add
adc
or
adc
add
mov
cmp
pop
dec
adc
add
inc
outsl
cwtl
jne
mov
int
cs
cwtl
lods
rorl
lcall
cmpl
je
dec
lea
sub
into
mov
push
adc
add
es
xchg
mov
and
mov
dec
inc
inc
xchg
movsb
lret
mov
sbb
xor
ss
add
dec
fwait
mov
xchg
inc
insb
add
sbb
inc
mov
cmp
dec
pop
cmp
shlb
mov
add
int3
test
aaa
subb
lock
push
mov
shlb
pusha
and
cwtl
cmp
xor
ljmp
ror
mov
pusha
arpl
lods
daa
popa
cmp
xchg
jne
dec
lcall
xchg
imul
adc
loope
dec
sbb
xchg
xchg
popa
push
inc
andl
xchg
mov
sub
pop
fldl
test
adc
ds
and
les
or
mov
loopne
arpl
data16
inc
cmpsb
jl
sarb
pushf
push
jns
mov
popa
xor
dec
in
add
add
pop
loope
repz
loopne
pop
add
push
scas
or
insb
cmp
pop
shl
add
imul
decl
or
outsb
loop
les
and
insb
loop
loope
add
pusha
ficomps
and
xor
add
hlt
mov
repnz
ss
lcall
xor
sub
sub
xchg
jo
push
or
pop
and
mov
cli
das
mov
cmpsb
push
push
in
add
jo
push
push
sub
fs
jno
lcall
jp
jb
dec
pop
lea
push
out
add
mulb
mov
dec
push
add
mov
bound
sub
sbb
inc
mov
lcall
mov
jbe
xchg
lods
bound
push
call
pop
push
or
add
lahf
data16
mov
loopne
popa
movsb
inc
add
pusha
push
dec
lret
je
xchg
jp
pusha
adc
bound
xchg
fs
loop
ljmp
adc
insb
mov
bound
inc
les
dec
notl
jge
sbb
jle
imul
mov
bound
lcall
mov
adc
inc
fisttpll
cld
jae
sbb
and
add
adc
decl
icebp
lcall
psrad
test
pop
pop
xor
mov
and
outsb
cld
adc
push
add
js
adc
fists
test
adc
in
loopne
push
and
add
xor
inc
mov
fcompl
das
mov
std
outsl
jbe
adcb
dec
dec
inc
stos
loop
dec
dec
mov
ficoml
test
into
dec
xor
jo
cwtl
fsubl
mov
inc
adc
pop
pushl
pop
push
std
popa
add
popa
push
inc
push
or
dec
gs
add
or
xchg
pusha
ja
add
xchg
arpl
mov
mov
jae
fdivl
push
or
mov
je
popa
mov
inc
pop
jo
lcall
add
fcoml
mov
arpl
testb
mov
inc
jg
mov
pop
ja
xchg
jae
arpl
mov
jbe
dec
jne
jne
pusha
jl
cwtl
jecxz
roll
sbb
push
inc
inc
add
loopne
sbb
xor
addb
cmp
decl
mov
dec
jo
adc
jge
jb
movsl
add
or
xor
mov
cs
lods
daa
call
pop
gs
dec
clc
push
ljmp
lea
sbb
cmp
and
add
rcll
adc
inc
inc
mov
lret
mov
xchg
sbb
dec
stos
mov
mov
or
lret
adc
jo
push
push
inc
adc
in
push
push
xor
jbe
loopne
jmp
xor
mov
enter
push
mov
pushf
and
scas
ret
or
fcomi
inc
adc
or
or
sbb
dec
in
mov
add
add
lock
cmp
sub
lcall
std
and
add
jmp
inc
mov
sarb
xor
mov
adc
roll
cmpsb
xor
dec
pop
xchg
shll
loopne
lcall
jmp
or
xchg
test
inc
test
add
cmp
mov
cwtl
fisttpll
jmp
subl
repnz
jnp
sti
inc
ljmp
pop
scas
adc
cmp
cli
inc
adc
aam
das
sar
add
jmp
dec
test
xchg
icebp
cmpsb
scas
mov
or
mov
enter
mov
dec
dec
cld
inc
jmp
loopne
in
insb
cmp
inc
mov
push
mov
push
aad
sub
ret
cmp
xchg
mov
mov
lock
and
push
add
aaa
popa
cs
mov
je
and
pop
jbe
push
xchg
clc
repz
fldl
xchg
jle
add
lahf
les
int3
int
adc
sti
aas
mov
or
mov
aas
movsl
add
mov
xchg
outsb
in
add
sub
out
loop
pop
dec
shl
aas
das
add
and
lock
cld
test
and
aas
mov
ljmp
sbb
aas
int3
scas
mov
xchg
xor
out
cmp
add
ja
stos
in
rolb
dec
pop
loope
les
aas
insl
les
mov
pushl
int
inc
lcall
xchg
movb
dec
add
xchg
aas
loop
add
cmp
sahf
mov
jl
pop
roll
pop
aas
sub
das
stc
inc
mov
xchg
test
sti
inc
dec
shlb
ljmp
sub
subb
das
fstl
pushf
add
int3
fcoml
ljmp
jb
xchg
cmpl
inc
into
shrb
jge
cmc
stos
jg
xchg
mov
and
call
pop
and
mov
mov
jne
out
outsl
fldt
cmp
jno
rcr
adc
out
mov
pop
cmp
xchg
sub
xchg
mov
mov
pop
add
and
in
leave
aad
hlt
pushl
push
push
add
imul
faddp
jge
call
and
out
pop
test
cmp
push
and
mov
adc
scas
stc
xchg
jge
add
enter
aaa
jle
fmuls
imulb
jns
outsb
andb
cmp
jp
fsubl
ljmp
test
inc
jl
add
push
push
adc
jge
add
dec
test
add
enter
xchg
daa
sti
or
push
add
sub
sti
mov
popa
movsl
adc
std
fwait
sti
add
or
jno
sub
fisubrl
loop
sti
add
or
iret
mov
les
scas
mov
push
lcall
adc
sub
dec
mov
mov
cmp
xor
add
jl
xor
add
mov
xor
js
cmp
or
pop
or
xor
lds
jle
pop
ljmp
inc
or
jbe
mov
mov
or
mov
test
loop
ret
movl
cmpsl
fisubrs
sbb
aas
or
addl
mov
mov
push
mov
iret
add
push
push
filds
sub
inc
push
pop
push
adc
rcrl
das
dec
aaa
inc
aad
mov
arpl
or
addr16
flds
imul
ja
lcall
mov
xchg
incl
outsl
test
rolb
in
outsl
mov
cmp
cmp
cmp
mov
cmp
insb
cmp
mov
imul
cmp
lock
lods
cmp
mov
jae
call
pop
push
repz
fstpt
add
ret
ds
ds
push
mov
jle
adc
int
pop
loopne
test
jae
xchg
arpl
movsb
ds
mov
inc
les
xor
int
aam
and
in
adc
add
add
xrelease
jecxz
push
hlt
idivb
and
rcll
xor
ret
aas
fidivl
aas
fs
xchg
sbb
add
fistpll
fnstcw
jae
pop
arpl
fcoml
mov
inc
aas
leave
sub
int
xor
lret
pop
mov
hlt
aas
add
and
add
or
sbb
xor
xor
lret
clc
pop
loope
mov
pop
xor
cld
sbb
jl
jnp
xor
pushf
xor
push
pop
ret
jb
sbb
adc
int3
rcr
xor
xor
inc
adc
or
xor
mov
int
jle
sbb
sub
lret
xor
mov
pop
xor
int
mov
jl
jnp
mov
pushf
xor
push
fst
mov
int3
xor
xor
xor
cld
xor
xor
xor
mov
mov
xor
pop
xor
jl
jnp
add
xor
xor
stc
pop
xor
xor
xor
cld
xor
xor
xor
mov
inc
jbe
adc
xor
mov
mov
xor
add
add
add
xchg
adc
mov
sub
fdivl
sbb
push
hlt
int
in
or
cld
xor
pusha
xor
add
add
pop
adc
add
xor
adc
mov
adc
pushf
xor
xor
mov
adc
dec
xor
xor
adc
inc
adc
jg
insl
add
xor
lret
xor
dec
mov
repz
stos
xor
insb
push
inc
mov
or
add
push
repz
adc
xor
in
or
xor
adc
ss
sub
xchg
adc
les
xchg
add
pop
inc
xchg
cmp
pop
decl
aaa
ds
dec
cmp
loopne
mov
dec
inc
adc
jle
loopne
loopne
pusha
inc
ja
in
add
test
dec
das
pop
push
pop
inc
adc
cmp
lea
insb
cmp
xchg
add
add
and
jg
cmp
pop
cmp
and
ds
ss
aas
adc
cltd
mov
inc
lods
lcall
pusha
lods
push
push
fnsave
pusha
inc
xor
inc
mov
ja
jge
inc
lahf
or
lds
or
xchg
inc
push
push
les
incl
xor
xor
add
sub
xor
sub
ljmp
inc
xor
xor
and
and
mov
xor
pop
add
es
xor
leave
push
test
fbld
xor
icebp
adc
andb
fwait
add
mov
xor
shlb
sub
fidivl
and
jmp
outsl
adc
ss
ss
ss
fdivs
cmpsb
aaa
push
add
add
adc
cmp
add
cmp
mov
bound
xchg
cmp
out
cmp
cmp
and
scas
mov
jl
cmp
mov
sbb
lock
cmp
sub
mov
call
cmp
cmp
add
add
adc
cmp
cmp
sub
cmc
or
or
sti
cmp
ljmp
rcll
and
pusha
ja
adcl
push
add
pop
shlb
xor
xor
xor
add
and
dec
push
inc
or
add
push
ss
sbb
into
cmp
cmp
cmp
cmp
cmp
cmp
add
adc
rcr
lret
adc
cmp
je
cmp
rcr
adc
and
insl
cmp
cmp
jbe
pop
push
inc
das
roll
or
aad
pop
mov
ds
ds
xor
xchg
inc
loopne
xor
aad
inc
adc
push
pop
cmpsl
and
xor
add
lods
mov
js
xor
xor
xor
xor
xor
andb
xor
add
loopne
or
mov
push
cmp
incb
cmp
cmp
cmp
cmp
push
aam
outsl
pop
cmp
lret
lret
or
xchg
pusha
or
xor
shlb
push
xor
or
xor
sbb
xor
xor
sub
scas
fcoms
test
lock
test
cmp
cmp
js
push
fdivrs
cld
mov
cmp
arpl
lods
cmp
adc
stos
dec
loopne
sub
aas
fistpll
xor
je
fwait
rcr
jg
aas
pop
aas
pushf
and
mov
movsl
xchg
xor
xor
incl
clc
fidivl
rdtsc
cli
data16
xor
add
hlt
jecxz,pn
adc
jg
or
ds
xor
ss
or
xor
lcall
xor
or
sub
and
cmp
or
das
cmp
lcall
fstpt
sub
lret
pusha
dec
or
fnstsw
push
cmp
pop
cmp
imul
and
cmp
mov
je
nop
aaa
mov
cmp
cmp
ds
mov
pop
mov
push
outsb
push
adc
jo
sbb
out
mov
outsl
clc
mov
dec
rclb
xor
xor
rcrb
popf
xor
mov
scas
xor
ljmp
xor
xor
inc
shr
xor
dec
mov
insl
ss
add
divl
push
aaa
jmp
aaa
cs
aaa
mov
aaa
pop
aaa
xchg
aaa
jne
aaa
nop
aaa
pop
aaa
test
mov
inc
repz
cld
in
nop
add
cmp
adc
or
cmp
cmp
inc
out
jg
cmp
cmp
cmp
adc
jae
lret
cmp
scas
cmc
xchg
cmp
cmp
ds
ds
adc
pop
sub
outsl
lock
mov
insb
xor
push
inc
nop
push
cld
inc
mov
xor
enter
xor
mov
pop
cmp
ret
xor
xor
cmp
loopne
adc
cmpsl
adcl
mov
inc
mov
ss
mov
aaa
fisttpll
aaa
adcl
pushl
cli
adc
cmp
rclb
stos
mov
les
popf
cmp
lds
cmp
lea
lods
cmp
into
adc
pop
cmp
cmp
and
cmp
lea
hlt
adc
dec
aas
jb
sbb
es
lock
xor
je
or
divb
mov
adc
add
jg
xor
sbb
pushf
ss
jg
and
jo
clc
scas
clc
sub
cmp
xchg
cmp
push
aas
and
sub
or
add
subb
enter
gs
cmp
cmp
cmp
jl
xor
adc
xorl
jo
ss
sub
cmp
cmc
mov
or
cmp
inc
repnz
cwtl
jnp
inc
cmp
cmp
daa
mov
pop
dec
sbb
mov
sbb
shl
jo
add
jg
xor
mov
or
xchg
lock
mov
xor
xor
pushl
xchg
xor
pusha
and
adc
cmp
xor
xor
xor
nop
xlat
xor
arpl
out
dec
out
adc
dec
add
cld
ss
ss
ss
or
ss
rorb
fsubrl
daa
mov
adc
ss
das
ss
push
inc
les
aas
ss
jg
js
dec
lods
ss
movsb
ss
ss
adc
mov
ja
jb
xor
adc
mov
pop
hlt
mov
aaa
hlt
aaa
getsec
add
mov
adc
aaa
daa
aaa
aam
pushl
aaa
add
aaa
aas
aaa
add
aaa
lods
aaa
or
movsb
push
testb
addr16
adcb
push
sbb
sarb
je
mov
aaa
insb
aaa
xchg
aaa
ficomps
mov
scas
dec
dec
aaa
insl
cmp
or
add
xchg
or
jo
cld
mov
enter
adc
xor
push
ja
add
push
in
xor
cmpsl
xor
scas
xor
xor
rcrl
xor
add
lods
push
in
adc
xor
xor
xor
and
jmp
add
xor
mov
pop
nop
or
jo
sbb
add
xchg
pusha
xchg
es
mov
xor
cmp
fidivrl
fistpll
jne
lods
cmp
std
cmp
cmp
cmp
push
mov
mov
xorb
cmp
js
mov
sub
xor
in
sub
rclb
loopne
xchg
jl
inc
shll
insb
inc
jle
and
notb
jl
mov
xor
cmp
add
jle
jo
xor
adc
mov
lods
jbe
xor
fstpt
xor
rorb
inc
jo
sbb
jle
or
xor
sub
pop
xor
enter
and
ss
adc
cli
scas
jg
aaa
mov
aaa
orb
loop
cmp
ljmp
mov
push
cmp
xchg
adc
cmp
jnp
fisttps
out
scas
cmp
xor
adc
cmp
cmp
or
mov
cmp
cmp
cmp
push
cmp
cmp
imul
jg
es
sahf
emms
call
clc
cmp
cmp
sub
cmp
add
inc
add
ds
adc
add
incl
jae
std
xor
xor
jp
xor
jp
xor
daa
inc
sub
mov
push
inc
xor
mov
dec
add
and
shll
jg
sarb
xor
push
call
xor
xor
adc
pop
rclb
xor
loope
push
jne
call
xchg
cmp
or
mov
cld
push
cmp
les
cmp
cmp
mov
push
cmp
cmp
cmp
into
ret
mov
push
push
push
xor
cmp
cmp
and
cmp
cmp
cmp
inc
cmp
inc
cmp
xlat
shrb
cmp
dec
cmp
mov
pushl
inc
push
stos
xchg
aas
inc
aas
loop
mov
lock
aaa
dec
movsb
xor
jbe
xor
pop
xor
test
pop
xor
imul
jecxz
push
xor
xor
xor
xor
repz
jp
jle
adc
cli
jge
outsl
xor
xor
je
mov
push
xor
xor
cmp
and
xor
xor
xor
imul
shl
cmc
xor
es
lock
xchg
xor
ss
inc
jg
xor
or
in
cmp
dec
cmp
cmp
cmp
dec
stc
cmp
cmp
and
loope
pusha
inc
sbbb
fs
xor
shll
sbb
sbb
push
cmc
fcmovnu
hlt
adc
sub
lock
jo
pusha
test
cmp
mov
push
cmp
sti
cmp
jle
pop
icebp
incl
xor
cmpsl
nop
cwtl
or
dec
mov
test
cmp
lock
add
cld
outsb
aas
and
lock
mov
mov
xor
shlb
push
in
scas
inc
xor
rcr
cli
xor
xor
xor
lcall
in
decl
inc
cmp
cmp
cmp
cmp
cmp
insl
cmp
testl
adc
jecxz
xor
adc
cmp
lret
adc
lds
add
xor
xor
fisubrl
xor
rolb
outsb
clc
aaa
cld
icebp
mov
sarb
adc
fnsave
movsl
xchg
idiv
or
mov
test
or
cmp
sbb
fnstcw
cmp
jnp
jbe
inc
xchg
cmp
jecxz
add
or
cmp
pop
cmc
call
cmp
test
pop
in
xchg
add
cmp
cmp
jo
mov
ja
or
mov
sti
decl
repnz
cmp
cmp
cmp
hlt
outsl
mov
xlat
and
cmp
ds
mov
lcall
aaa
ds
ja,pt
jbe
mov
xor
add
jo
and
in
cli
aas
test
aas
aad
nop
add
mov
push
xor
leave
xor
scas
xor
sbbb
loopne
or
xor
and
and
lcall
mov
lds
in
mov
rol
popa
xor
push
insb
xor
shll
and
ljmp
fdiv
enter
mov
popf
xor
test
xor
std
xor
xor
mov
dec
ss
xchg
mov
add
cmp
roll
ds
shlb
or
sub
subl
out
cli
adc
cld
or
cmp
cmp
cmp
cmp
inc
daa
sub
sarb
xor
cmp
adc
pop
push
out
cmp
stc
adc
xchg
cmp
pushf
cmp
mov
fnstcw
adc
adc
fnstsw
lret
jle
jl
cmp
loop
adc
cmp
cmp
call
cmp
xchg
cmp
ljmp
mov
mov
enter
ds
or
bound
pop
loop
js
repnz
orl
lret
js
add
and
outsl
ljmp
dec
xor
add
xor
jge
lods
xor
frstor
into
out
fidivl
pop
adc
xor
rcll
adc
xor
xor
sbb
cmc
testb
and
xlat
adc
xor
xor
xchg
adc
roll
push
xor
aam
fsubp
jl
or
sbb
repnz
std
add
xor
xor
xor
call
shlb
es
adc
clc
fsubr
bound
dec
push
adc
jg
xor
xor
xor
xor
mov
add
sbb
push
push
sbb
jl
add
loop
inc
inc
addb
add
divb
adc
fildll
shll
jbe,pt
pop
in
mov
es
imul
pop
test
and
in
add
push
jg
pop
jno
aaa
jge
mov
imul
aaa
sub
frstor
cli
jb
sbb
aaa
jg
insl
cmp
cmp
fdivrs
adc
cmp
cmp
int3
sahf
pop
cmp
lret
cmp
mov
cmp
cmp
cmp
xor
pop
cmp
cmp
adc
sub
jmp
cmp
pop
cli
pop
xchg
sbb
ds
and
mov
sti
lds
sbb
cmc
aas
add
add
dec
ret
add
popf
jb
fidivl
pop
cmp
aaa
cld
or
dec
xor
xor
xor
xor
xor
stc
fistl
jbe
xor
xor
mov
jno
push
aad
xor
push
adc
outsb
inc
push
dec
xor
mov
test
icebp
mov
pop
fcoms
mov
add
xchg
lock
cmp
stos
movl
cmp
shl
sbbb
ds
lcall
cmpsl
shlb
inc
cmp
and
insb
xor
or
inc
in
sbb
cmp
cli
xor
inc
jp
xchg
xor
mov
loopne
xor
cmp
xor
xor
xor
lahf
xor
loope
int3
fistps
cmp
cmp
cmp
cmp
sub
pop
cmp
into
aas
gs
xchg
mov
rclb
cmp
xor
mov
incb
cwtl
xor
arpl
ret
xor
xor
push
xor
mov
xor
xor
movsb
fwait
sub
xor
jmp
mov
dec
xor
shlb
or
add
sarb
sbb
loop
fwait
mov
sub
rclb
xor
lret
ss
sbb
ss
ss
ss
ss
mov
push
jno
mov
jns
xorb
adc
jb
xchg
mov
cli
bound
mov
push
ss
jge
movsb
sub
mov
dec
cmp
cmp
or
mov
dec
pop
xchg
add
xchg
jg
fildll
int
daa
adc
cmp
cmp
imul
or
cmp
cmp
push
mov
adc
nop
cmp
lods
add
or
mov
pop
and
mov
fidivrl
mov
cmp
bound
dec
les
decb
ds
pop
lods
sahf
pop
ds
decb
mov
sahf
aas
xchg
aas
leave
test
cmp
xor
int
sbb
dec
movsl
and
pop
loopne
jg
mov
xor
xor
pusha
divb
mov
sbb
decb
and
mov
inc
adc
xor
jg
lea
lret
bound
std
cmp
outsl
push
test
xor
push
ds
cmp
adc
cmp
cmp
outsl
clc
cs
cmp
mov
cmp
cmp
mov
loopne
cmp
fdivrs
mov
adc
bound
mov
jle
out
cmpsb
pusha
lea
cld
cmp
call
pusha
mov
mov
adc
mov
jle
xchg
add
loopne
sbb
xchg
fcmovu
cmpb
rcrl
pusha
cmp
fnstcw
jne
outsb
aas
hlt
lock
test
xchg
mov
popa
xor
push
jmp
dec
mov
xor
xor
incb
pop
ljmp
or
pop
ss
cmp
push
or
ss
jg
xor
test
mov
mov
loope
sub
cmp
loopne
insb
fmuls
test
cmp
dec
cmovb
mov
cmpb
mov
arpl
mov
push
orb
jecxz
xchg
add
xor
xor
xor
xor
dec
call
mov
cmp
daa
mov
and
or
aaa
adc
into
xor
fisttps
fildl
mov
lret
aaa
xchg
aaa
pusha
aaa
mov
aaa
sbb
mov
cmp
cmp
cmp
cmp
adc
decl
add
in
cmp
cmp
push
pusha
inc
adc
or
ret
add
aad
movsb
xchg
and
pop
and
cmp
adc
cmp
mov
jl
mov
inc
cmp
cmp
cmp
and
dec
lods
les
cmp
cmp
fdivl
cmp
inc
cmp
add
clc
inc
add
mov
or
ds
adc
xchg
outsl
mov
add
lcall
adc
loop
sbb
inc
xor
lds
loopne
rcrl
xor
inc
inc
jp
xchg
loopne
in
cmpsb
or
aad
cwtl
xor
push
push
sbb
lea
pusha
mov
movsb
adc
push
loopne
iret
inc
mov
cwtl
cmp
repz
push
cmp
cmp
push
cmpl
fsubp
push
ds
inc
push
sar
cmpsl
aas
test
aas
pop
loope
and
push
fcomip
xor
xor
xor
add
xor
xor
xor
add
pop
adc
xor
xor
incl
or
sub
pop
xor
loopne
cmpb
outsb
pusha
adc
in
cmc
mov
rolb
in
shlb
add
das
rorb
jb
cmpsb
ss
les
xor
mov
push
ss
add
aaa
out
mov
ds
mov
movsb
cmp
les
in
pop
cmp
cmp
xor
loop
xor
push
loopne
mov
or
xchg
xchg
xor
xor
mov
pop
xor
xor
test
lret
bound
push
jnp
xor
cmp
xor
adcb
pushf
aaa
jge
test
cmp
sbb
jmp
cmp
nop
cli
scas
lret
lock
and
dec
jl
cmp
aas
loop
or
inc
loopne
pusha
fwait
aad
xor
aas
xor
movb
loopne
lea
xor
mov
and
test
je
mov
je
mov
jbe
std
dec
xor
cmp
push
add
add
and
mov
mov
adc
repz
jle
push
loopne
std
xor
xor
xor
xor
and
xor
lock
clc
lret
xor
xor
mov
xor
push
cld
mov
notb
imul
xor
jg
jnp
mov
bnd
fistpl
and
xor
cmpsl
xor
or
mov
imul
or
sub
in
xor
ljmp
add
add
stc
xor
xor
adc
sub
or
xor
jo
cmp
decl
xor
test
lahf
xor
jl
jo
icebp
in
jnp
jbe
mov
imul
xor
adc
cld
in
ja
add
xor
xor
adc
inc
adc
shll
xor
xor
adc
fwait
cmpsb
outsb
cld
add
aaa
insl
xchg
cmpsb
aaa
add
add
call
movb
adc
cmp
loop
fsts
decl
lock
pushf
add
cmp
cmp
cmp
push
dec
cmp
ds
ds
aaa
add
shl
push
stos
lock
add
filds
xor
inc
jo
sbb
jmp
push
nop
xor
inc
xor
xor
pusha
cwtl
aaa
sub
leave
aaa
pop
cmp
ljmp
xchg
cmp
add
jo
push
cmp
out
xchg
ret
add
into
lock
mov
pop
add
add
fdivs
dec
xchg
ja
cli
add
inc
xor
xor
add
ljmp
add
xchg
xor
add
fistps
mov
dec
aaa
lret
aaa
lds
loopne
lcall
jmp
mov
test
cmp
cmp
cmp
gs
lock
sarl
cmp
sbb
mov
push
divb
and
push
pop
icebp
xor
xor
sbb
xor
push
xor
xor
xor
rorl
xor
jl
adc
rclb
aaa
icebp
sbb
add
cmp
sti
cmp
mov
mov
jo
sbbb
fwait
inc
cmc
mov
mov
xor
aaa
fs
mov
mov
xor
cmp
dec
fdiv
aaa
pop
cmp
fidivrs
sub
pop
push
cmp
mov
dec
mov
cmp
add
cmp
cmp
cmp
cmp
mov
cmp
scas
push
dec
das
out
cmp
cmp
cmp
add
push
nop
sbb
cwtl
out
adc
push
pop
outsl
cmp
fwait
push
ds
ds
faddl
aas
icebp
aas
cmp
js
aas
loopne
loop
nop
adc
decl
add
fcoms
xor
xor
xor
int
or
xor
xor
fbld
mov
xor
xor
add
test
lock
popf
dec
push
sbb
xchg
xor
lock
in
adc
mov
adc
adc
out
aas
pop
lock
mov
aas
mov
aas
sahf
adc
mov
jnp
jle
imul
aas
push
add
mov
inc
js
and
inc
mov
xchg
mov
das
cmp
push
rolb
pushl
mov
sbb
and
addr16
mov
insb
decl
xor
insb
es
xor
add
pop
jb
adc
ss
xor
lock
pusha
ds
and
add
loop
aaa
sbb
rolb
jo
or
cmpb
aam
hlt
lock
adcb
lret
fwait
xor
adcb
insb
aam
and
pop
adc
sbb
dec
push
adc
fidivrl
pop
xor
das
add
call
xor
or
addr16
stos
push
in
add
das
add
xorb
pop
mov
pop
in
push
lods
mov
pop
in
lcall
mov
aaa
push
test
adc
out
clc
out
adc
fbstp
and
xlat
sub
iret
aaa
xor
push
mov
mov
pop
aaa
add
cld
or
aaa
mov
xorl
xorb
jno
or
mov
jg
ud0
add
mov
mov
jg
mov
pop
lock
in
lock
shll
sbb
cld
inc
fwait
push
into
adc
in
iret
xchg
insl
fnsave
into
cmpsl
mov
jl
cmp
cmpsl
iret
sub
aad
call
call
sti
int3
lods
mov
test
std
mov
lret
jge
es
call
mov
or
lret
or
add
cltd
pop
lcall
in
icebp
gs
loopne
rol
pusha
dec
or
xor
neg
fildll
dec
or
shr
hlt
xchg
jo
outsl
fs
xor
fbld
cld
add
fucomip
fcmovne
mov
push
push
push
xchg
and
xorw
jg
scas
pop
add
pushf
add
mov
outsb
leave
std
jns
add
and
add
xor
stos
xchg
fsubrs
mov
jae
lds
icebp
add
mov
cli
cmp
push
mov
mov
test
inc
pop
bound
add
cmc
cmc
cltd
add
or
test
pop
repz
outsl
xor
lods
xchg
stos
mov
xchg
inc
pop
je
mov
decb
mov
rclb
mov
add
call
sbb
xor
ret
js
sbb
sbb
or
add
movsb
mov
adc
imul
add
pop
and
divb
cld
and
jb
movb
cmpsb
popf
dec
sbb
lods
andb
fwait
in
pop
push
aam
sarb
add
or
mov
sbb
dec
sbb
add
ret
sbb
cli
movsl
inc
out
mov
adc
decl
in
cmc
push
and
mov
roll
add
jg
rcll
pop
push
push
addl
decl
add
xorb
enter
cwtl
pop
cs
add
imul
aaa
cld
sbb
mov
lcall
push
dec
imul
xlat
add
fsubrl
sbb
mov
inc
lods
push
in
das
in
out
or
in
adc
pop
push
add
jmp
jle
jne
jmp
mov
es
shlb
in
hlt
jp
enter
push
inc
jl
pop
inc
mov
jns
cwtl
xor
scas
stc
mov
cmpsb
or
xchg
bound
aaa
push
mov
inc
mov
cmp
lret
cmpsb
lcall
inc
lods
not
cmc
ficoml
add
sar
push
mov
push
outsb
push
call
std
push
in
jae
push
aad
mov
mov
dec
cs
test
movsl
dec
cmp
int3
ficoms
mov
lods
jo
xchg
pop
lret
dec
out
addr16
das
xchg
daa
or
inc
push
es
shr
movsl
pop
and
jmp
dec
icebp
jp
enter
cmp
in
js
imull
inc
f2xm1
jnp
cmp
fistpl
hlt
inc
xor
call
loopne
mov
out
push
xor
and
mov
aam
adc
loopne
xor
ljmp
fnstenv
in
inc
ljmp
aam
mov
loope
sub
inc
jg
mov
mov
int
aam
and
lret
rclb
fldt
mov
stc
push
rcr
fs
decl
or
fisubs
mov
aam
xchg
lds
inc
sarb
das
cltd
mov
mov
mov
jns
sub
iret
rcr
outsl
dec
inc
int
dec
add
loopne
insl
xor
fdivl
aas
subl
adc
dec
enter
mov
test
fwait
xor
sahf
movsl
lcall
decl
fbstp
and
fisttpll
mov
js
call
aas
mov
mov
jmp
and
decl
jmp
pop
and
jmp
movsb
or
sub
insb
push
mov
mov
mov
test
mov
icebp
ljmp
shlb
push
jns
fcoms
pop
pushf
testl
ljmp
fidivs
jnp
cmp
mov
push
adc
stos
push
mov
mov
jmp
movsb
test
test
cmpsl
into
push
add
das
cmp
sbb
enter
ja
icebp
fwait
jns
or
pop
rol
sarb
sub
xor
shl
jmp
in
jecxz
adc
lock
pusha
mov
es
push
fldl
lds
mov
and
inc
jmp
fmuls
ljmp
lret
es
or
mov
mov
sub
jmp
loopne
pushf
pop
jl
dec
cmpsl
es
pop
in
adc
jg
push
sbb
sub
lret
pop
jnp
sar
sub
push
cmc
push
push
pop
add
xor
mov
popf
jbe
in
fistpll
or
add
out
call
call
and
inc
inc
dec
roll
cmp
push
into
fs
mov
inc
lods
mov
jmp
jle
xor
outsb
push
xchg
nop
cmpsb
sbb
sbb
pop
cmp
shr
push
shlb
mov
jae
and
insb
push
pop
lods
lock
pop
lcall
mov
push
mov
or
loop
ja
xchg
jp
cwtl
sub
pushl
dec
xlat
stos
cmp
inc
fwait
cmp
insl
mov
subl
lcall
xchg
fiadds
dec
mov
sbb
pop
push
and
leave
orb
imul
lret
pop
mov
decl
dec
jg
pop
sbb
out
push
mov
or
jl
sub
fdivr
push
cld
decl
jecxz
cli
cmp
out
push
test
or
inc
or
cmc
pop
jns
imul
lcall
mov
push
lcall
mov
pop
enter
popa
inc
test
pushl
loope
jp
lods
inc
dec
cmp
mov
and
cmp
leave
add
or
decl
mov
repz
pop
dec
imul
xchg
add
cltd
jo
adcl
cld
decl
lea
xchg
data16
divl
or
std
scas
pushl
je
outsb
sarb
and
arpl
inc
jge
aam
mov
push
pusha
xchg
test
fdivrs
add
jp
lcall
adc
jle
mov
test
out
cli
xor
xor
cmp
sbb
idiv
leave
inc
xor
jne
lcall
out
dec
ffreep
andl
out
xlat
je
loope
mov
cmpl
jg
pushl
lret
cwtl
mov
sub
pop
mov
int
mov
mov
pushl
sbb
push
mov
jo
pop
ret
push
lds
cmp
pop
idiv
outsb
cmpsb
in
jmp
add
push
lock
mov
sti
sbb
sbb
inc
pop
xchg
rcll
sbb
ja
jmp
mov
repnz
and
incl
adc
add
pop
add
push
xor
hlt
fildl
stc
dec
insb
push
lds
sarl
fadds
jno
call
ljmp
loopne
loopne
push
mov
and
aaa
mov
or
lcall
mov
add
ret
jle
sub
sbb
mov
jp
lods
aad
pop
adc
out
in
pop
push
rorl
orb
and
divb
sahf
push
pop
dec
lds
pop
xor
dec
or
int3
lcall
jmp
subb
xor
stos
mov
fnstenv
fcmovnb
jae
push
xor
sub
dec
xchg
outsb
xor
leave
lret
cmp
mov
pushl
and
dec
xchg
addb
stos
fistps
xor
ljmp
cmp
pop
lret
mov
and
jne
fwait
adc
decl
and
sbb
inc
test
inc
bound
je
out
xchg
pusha
je
decl
imul
loope
negb
jecxz
out
inc
lahf
xchg
mov
ss
movsb
filds
decl
inc
dec
sub
js
jecxz
ds
dec
and
cwtl
add
cmp
cld
xchg
call
arpl
fwait
bound
cmp
xor
mov
mov
data16
pop
sbb
mov
adc
dec
lods
push
outsl
push
lods
test
insl
xchg
in
xlat
ljmp
mov
xor
ljmp
or
sarl
jb
fistpll
fldcw
dec
sub
decl
lcall
push
fdivs
mov
in
sti
fs
or
decl
mov
rcll
push
bound
imul
shrb
xlat
jge
rol
lcall
js
cmp
or
lods
and
movsb
movsb
out
sbb
es
sbb
mov
sub
mov
xor
sbb
jb
mov
push
dec
stc
sub
gs
scas
cmpsl
stos
clc
incl
push
sbb
ret
xor
mov
cmp
inc
or
mov
test
ljmp
jo
dec
xchg
sahf
mov
dec
lds
and
out
mov
daa
jb
adc
fwait
cli
add
loop
ljmp
ljmp
movsb
add
push
mov
jmp
in
ret
push
repnz
dec
aam
int3
push
aas
pop
dec
aam
mov
mov
decl
inc
xor
jge
std
xor
popf
stos
xorl
enter
mov
jmp
lahf
dec
out
fisttpl
sbb
lods
daa
out
icebp
das
cmp
pop
pop
dec
incl
mov
mov
mov
dec
fisubl
and
loop
add
cmp
jb
cli
cwtl
adc
xor
xor
mov
jmp
cmpsb
xchg
nop
xor
and
xchg
xchg
xor
sub
loop
jo
loopne
outsl
mov
pushl
and
in
xor
and
movsl
xor
push
clc
testb
lahf
jae
xlat
movsb
pop
xchg
add
jb
mov
in
mov
loop
dec
mov
add
sub
cs
decl
inc
pushf
std
inc
sti
and
inc
adc
inc
adc
push
mov
mov
pop
cmp
inc
fsubrl
pop
sbb
cmp
mov
cmp
pop
scas
repnz
inc
test
rcl
pop
jp
mov
cwtl
loope
popa
out
lock
incl
leave
or
mov
shl
aam
sub
aas
sub
ljmp
jp
jl
hlt
test
loope
or
cld
pop
and
lock
jmp
mov
movsb
lock
imul
int3
adc
mov
fwait
decb
int
hlt
adc
jmp
stos
mov
fiadds
pushl
jp
cmc
and
in
ret
push
stc
cld
jo
mov
sahf
mov
mov
fwait
inc
xchg
mov
lock
ficompl
sub
inc
ss
sti
leave
mov
inc
dec
mov
sub
pop
push
mov
sbb
or
out
ret
je
in
mov
clc
mov
xor
xor
insb
sahf
fwait
sub
arpl
test
cs
cli
jle
stc
push
lret
xchg
imul
mov
int3
movsb
data16
loop
cmp
lcall
mov
es
mov
xchg
rep
xchg
stc
pop
adc
push
mov
adcl
xor
ljmp
test
and
data16
arpl
inc
mov
pop
imul
sbb
decl
mov
sub
divb
and
jno
push
pop
roll
fisttps
adc
jg
outsb
adc
add
out
sahf
rorb
xor
ret
arpl
jns
das
fimuls
iret
mov
jp
scas
test
sti
aas
repz
ds
sbbb
mov
iret
mov
movsl
insl
mov
int
test
or
outsb
enter
adc
and
xor
dec
fisttpl
arpl
dec
movl
sbb
dec
sub
into
and
ja
hlt
enter
push
push
xchg
xchg
cmc
xchg
push
jmp
pop
fs
lcall
cmp
shlb
jecxz
mov
mov
pushl
pop
sub
adc
dec
out
mov
shr
mov
hlt
mov
std
pop
hlt
imulb
jmp
mov
jl
push
mov
loop
mov
xor
lcall
into
popf
xlat
orl
jmp
aaa
in
into
jbe
aad
push
jp
push
sbb
xchg
sbb
lock
pushl
mov
ljmp
add
push
out
sub
cmpxchg
pop
je
in
fincstp
inc
inc
mov
adc
push
push
sub
out
adc
jg
leave
xchg
jle
dec
adc
rorl
movsl
sti
xchg
or
rorb
stos
adc
jmp
je
clc
sub
imul
adc
stos
add
rcrl
data16
ljmp
xor
cli
jmp
sbb
movl
decl
cmp
test
rcr
int3
imul
icebp
insb
jg
jne
jns
push
jle
vmovsd
jle
cmp
rolb
psrlq
pop
es
xor
mov
adc
ja
push
ret
ljmp
push
rorl
popf
mov
push
mov
and
cltd
daa
fldl
lret
pop
mov
ret
call
mov
mov
xchg
or
repnz
add
pop
clc
push
ljmp
out
cmp
xor
mov
cmp
dec
sahf
test
pop
push
mov
outsl
mov
call
push
dec
jl
stos
xor
pop
mov
out
cmc
in
push
jmp
movsl
xchg
icebp
decl
mov
scas
cmp
inc
pop
sub
xchg
in
daa
push
rol
into
jge
sub
push
sti
loop
or
inc
mov
fiaddl
jns
fsubs
push
cmp
test
dec
test
loopne
popf
jbe
and
std
sbb
testb
cmp
das
and
lods
dec
lret
mov
js
popf
sti
hlt
out
pusha
rcrl
nop
shll
cmp
lcall
int3
cmp
scas
daa
in
in
loop
mov
sbb
fstl
pushl
xchg
leave
or
aad
test
push
pop
mov
in
push
mov
call
jg
fimull
rcll
leave
test
pop
out
jae
cmp
lcall
insb
and
mov
jle
in
fisttps
mov
stc
lahf
cmp
je
xchg
lock
adc
or
stc
mov
and
and
lcall
test
xchg
mov
lahf
leave
inc
jecxz
pop
jge
mov
sbb
int
jo
push
imul
call
popf
js
xchg
pushf
jle
xchg
jo
push
negb
int
xchg
leave
daa
vpaddsb
in
cwtl
mov
pop
and
jmp
cld
psubusw
stos
mov
jb
xor
jp
mov
gs
fadd
stos
pop
jl
lods
sti
ss
jb
repz
xchg
sub
pushf
cmp
jns
sti
cld
mov
add
loopne
insl
lret
into
test
mov
pop
scas
aas
jmp
notb
decl
mov
push
aas
xor
mov
mov
dec
mov
decl
shrb
loop
dec
cmp
lret
xchg
rolb
jmp
imul
popa
or
enter
icebp
aam
popl
mov
icebp
and
push
mov
xchg
adc
inc
jg
sbb
mov
mov
push
mov
and
jle
jns
inc
inc
mov
fcoml
insl
mov
outsl
adc
addb
enter
pushl
mov
ds
add
arpl
and
cmp
fcomps
fnsave
mov
inc
pop
dec
lahf
cmpsb
jnp
es
xchg
xchg
sbbl
mov
das
clc
lcall
jb
mov
fdivl
clc
xchg
xchg
mov
lcall
push
push
rol
int
mov
je
mov
xlat
insb
lret
push
jno
and
stc
movsb
dec
xchg
pop
iret
jnp
lcall
rcrl
xchg
aam
sbb
mov
dec
mov
ret
out
call
pop
cmc
inc
lods
sbb
mov
add
xchg
loop
and
ljmp
add
xchg
pop
dec
jmp
pop
xor
and
jg
incl
dec
cld
ret
mov
lods
adc
and
mov
cmp
cmp
and
pop
lods
pop
dec
icebp
or
xchg
adcb
or
cmp
mov
or
fbstp
mov
call
adc
mov
add
clc
jmp
xchg
adc
inc
or
mov
fwait
repz
lods
xchg
and
inc
add
ljmp
adc
cmp
xchg
cltd
mov
inc
ret
imul
and
movsb
add
ljmp
push
das
cwtl
scas
lret
fs
fwait
orl
in
sbb
lcall
nop
push
cmp
repz
or
icebp
pop
icebp
lods
or
imul
ficomps
ljmp
mov
adc
mov
jg
push
int3
fldl
jg
fstpl
dec
mov
ret
les
insb
movsb
adc
in
inc
and
lahf
sbb
mov
mov
push
orl
orb
inc
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
push
xchg
or
popf
and
add
add
fs
adc
add
push
je
inc
popa
xor
jb
push
je
inc
mov
mov
push
push
jb
xor
jb
push
xor
js
dec
cmp
sbb
imul
sub
aam
lret
push
fcmovnu
outsl
outsb
xor
adc
jle
pop
xchg
insb
adc
or
gs
mov
mov
sbb
jbe
popa
or
dec
jmp
loop
and
push
int3
inc
pop
int
mov
ds
insb
sti
cmc
pop
push
outsl
dec
push
outsb
mov
pop
mov
enter
inc
fs
rcl
aad
dec
or
jle
mov
addl
addr16
inc
insb
insb
fdivrl
sbb
inc
sbb
insl
rcrb
push
hlt
jae
sbb
add
mov
popa
test
push
lods
bound
cmpsb
inc
pop
add
jb
mov
aam
pop
jb
push
inc
fs
xor
imul
sbb
imul
push
jae
cmpsb
gs
popa
mov
push
add
sub
xchg
inc
jae
bound
jae
inc
outsl
lods
js
cmc
int3
fs
roll
and
fldcw
addb
aaa
popa
add
add
xchg
adc
add
aaa
dec
add
push
xor
xchg
push
stos
adc
subl
insb
or
test
sbb
mov
scas
add
pop
iret
jo
pusha
inc
cmp
mov
sbb
xor
sti
and
mov
add
xchg
sub
pop
test
dec
les
add
or
cmc
lods
dec
inc
adc
and
sub
lahf
pop
push
and
into
test
or
jb
add
imul
adc
mov
sbb
and
inc
adcb
and
adc
sub
test
adc
pushf
inc
mov
jmp
pusha
cmp
mov
aas
pusha
inc
mov
mov
dec
or
aad
lds
rorl
and
add
mov
fcomi
sbb
stos
push
test
dec
and
xor
cmpsl
mov
lods
lea
add
push
outsl
add
lea
and
subl
adc
and
and
mov
aaa
sub
adc
sub
sub
sbb
test
dec
mov
xor
and
push
bound
loope
and
pop
pop
push
test
out
mov
jne
sub
mov
stos
daa
mov
mov
sbb
inc
fcmovbe
cmpsl
xchg
roll
popa
jae
pop
cli
jae
cs
insb
xor
ret
adc
xchg
add
rcll
push
lds
addr16
push
xchg
andb
pop
and
push
test
inc
inc
adc
andb
andl
pop
or
loope
jae
adc
or
add
mov
add
shll
adc
jns
pop
add
adc
push
adc
sbb
adc
mov
add
adc
inc
sub
inc
mov
test
pop
repz
decl
mov
adc
mov
aam
adc
adcb
ret
push
xor
push
jno
in
push
stc
test
inc
and
shrb
add
pusha
push
aaa
movsb
push
push
andl
cmpsl
mov
inc
mov
insl
inc
mov
or
test
int
lds
mov
lods
inc
cmc
xorl
inc
adc
test
mov
add
pop
fisttps
stos
sub
pop
and
push
adc
push
push
adc
test
dec
sub
cmpxchg8b
adc
rorl
mov
and
adc
shll
xor
sub
add
adc
dec
sbb
adc
sbb
xchg
inc
sbb
sbb
sbb
adc
adc
or
daa
movsb
mov
imul
push
daa
add
inc
arpl
add
loopne
adc
xchg
xor
push
mov
add
sbb
and
sub
dec
jge
and
pop
mov
in
adc
shrb
push
icebp
inc
inc
or
jnp
push
inc
xchg
add
xchg
and
adc
xor
and
xchg
stc
push
and
and
aas
loope
add
rcrl
mov
xchg
inc
sub
adc
rcrl
rorl
or
test
mov
and
les
inc
andb
stos
mov
jne
or
loopne
xchg
addb
pop
push
dec
les
sub
or
push
pop
shrb
adc
sbb
test
add
add
inc
imul
push
dec
dec
sub
popf
add
or
or
push
adc
mov
push
adc
inc
jne
mov
orb
push
inc
aaa
cmp
fbld
adc
jge
or
pop
dec
shrb
inc
dec
and
add
push
dec
inc
lods
sbb
loop
push
rclb
adc
and
inc
mov
mov
add
sbb
xchg
xchg
adc
push
test
inc
and
xorl
push
mov
push
sub
pop
rolb
sub
inc
scas
les
sub
jecxz
push
sbb
stos
dec
add
push
adc
adc
inc
subl
ja
mov
inc
xchg
shlb
pop
aam
test
stc
test
mov
adcb
orb
inc
xchg
inc
add
or
popl
rolb
mov
les
shlb
adc
shl
add
push
mov
sub
push
adc
lahf
or
mov
or
int
mov
inc
xor
iret
xchg
xor
jmp
push
mov
imul
roll
add
sbb
add
mov
adc
add
mov
push
push
adc
stos
or
push
aad
lea
adc
outsb
push
or
push
push
or
add
popa
dec
aad
incl
int3
shlb
adc
inc
shll
adc
mov
aam
push
add
lahf
mov
or
pop
loop
push
xor
xor
sub
xchg
sbb
mov
xor
add
dec
movsl
sub
xor
test
push
filds
dec
add
add
add
xor
add
add
pop
add
sbb
pop
daa
incb
inc
pop
mov
insl
repnz
ucomiss
cmp
add
jge
push
fadd
mov
jl
cmp
fs
iret
rcrl
subb
add
bound
add
mov
add
and
cmp
pusha
rolb
mov
cmp
inc
lods
popa
je
cmpsb
mov
mov
jle
inc
outsb
dec
push
shrl
xor
icebp
fimull
pop
leave
leave
adcb
xor
or
mov
push
into
jb
scas
test
loope
sbb
outsl
inc
add
add
inc
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
movsl
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
cmpsl
inc
add
add
add
add
add
add
add
add
add
add
or
add
shrb
add
in
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
mov
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
mov
add
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
and
add
in
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
and
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
daa
cmp
loop
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
sub
add
in
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
sub
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
xor
add
in
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
xor
add
in
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
cmp
loop
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
cmp
add
in
lock
shll
in
popa
repnz
into
adc
sbb
xchg
xchg
fnsave
pusha
pop
mov
mov
sub
adc
sti
xor
pop
test
mov
lret
andb
push
call
or
pop
int3
lret
out
lret
idivb
sbb
lcall
icebp
gs
lahf
dec
jne
jle
mov
mov
or
rclb
hlt
cmp
outsl
fwait
jne
fcomp
out
ret
cld
jmpw
xchg
fisttps
push
pop
mov
xchg
xchg
rorb
leave
add
dec
fxtract
and
out
into
pop
sub
pop
stc
push
lret
jae
cmp
movsb
data16
movsl
jo
and
cmp
stos
jae
push
jb
mov
test
sar
sbbl
pushf
mov
or
cltd
fdiv
or
and
lods
xchg
push
mov
and
push
in
xchg
pop
jne
push
add
mov
jl
pop
mov
jns
bndldx
sbb
idivl
out
mov
xor
push
mov
mov
push
dec
dec
and
jb
movb
bound
in
subb
pop
mov
xor
std
repnz
mov
out
pop
in
push
dec
aaa
inc
ret
sbb
pop
pop
inc
jl
inc
fbld
in
or
mov
roll
inc
push
jg
shrl
out
or
cmp
inc
jnp
xorb
out
repnz
fmull
pop
fsts
push
pop
cli
dec
jmp
mov
imul
and
cltd
cmpl
pop
mov
out
or
dec
or
xchg
pop
push
aam
cmp
mov
jmp
lea
in
or
xor
call
clc
mov
mov
mov
xor
inc
jl
in
and
stc
lahf
addr16
movsb
cmp
shrb
cmp
imul
cmc
pushf
or
and
in
mov
sub
or
jns
stos
xor
pop
or
sbb
inc
xchg
mov
inc
orl
lcall
xor
cwtl
cmpsl
xor
mov
push
mov
cmpsb
out
xchg
pop
stos
lds
jb
pop
mov
arpl
push
mov
inc
push
popf
sub
dec
les
inc
pop
adc
nop
hlt
cmp
jbe
add
jmp
lahf
dec
psubb
jnp
xchg
int3
dec
jo
jmp
cmp
stos
imul
loopne
fisttpl
in
repnz
movsl
or
sbb
add
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
add
add
mov
add
dec
mov
add
pop
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
arpl
xor
add
outsb
jae
popa
jb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
jb
outsb
jae
popa
je
dec
popa
insl
gs
add
addr16
jb
push
inc
popa
jb
push
xor
imul
