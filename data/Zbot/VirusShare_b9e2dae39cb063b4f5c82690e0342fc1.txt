fcomi
call
in
sub
push
pushl
push
push
or
add
addr16
mov
add
lea
push
paddb
push
add
jp
ret
das
sbb
in
outsb
sbb
ss
or
in
sub
xchg
aaa
ja
push
push
hlt
push
rdtsc
add
fs
sahf
fisttpl
xor
sub
cld
sub
in
push
sub
push
add
push
push
pop
mov
in
out
inc
add
push
pop
lock
lock
sarl
cmp
push
call
lret
out
xor
add
shl
xlat
sbb
push
neg
sbb
push
fstpt
not
push
jne
lcall
sbb
add
insl
movsl
loop
neg
push
inc
sub
add
jmp
outsb
idivl
outsl
fildll
repnz
dec
sbb
sbb
insb
pop
inc
add
in
out
or
scas
mov
div
fisttps
mov
cli
adc
pop
or
fwait
cmp
or
dec
popf
sti
in
fistl
jae
insl
add
shll
lock
push
and
push
pop
xlat
mov
js
hlt
loop
push
sub
div
dec
not
mov
push
cld
dec
aas
or
jo
das
or
in
outsl
pop
pop
fs
dec
mov
cld
hlt
ja
push
inc
push
mov
sahf
or
imull
push
mov
xchg
push
ss
push
push
outsb
xchg
clc
outsb
xor
je
xor
and
lret
sbb
ja
add
jne
or
ja
clc
lea
les
dec
push
add
cmp
cmp
mov
xor
popf
aad
jae
add
ret
testb
add
add
movsl
in
testl
mov
jmp
scas
sbb
pop
push
push
dec
out
sti
sbb
outsl
clc
sti
xchg
dec
xchg
mov
xor
fnstcw
movl
xor
jle
adc
lcall
lahf
push
div
dec
fwait
aad
rcrb
neg
ret
adc
sbb
adc
jo
mov
popa
sub
push
pushf
arpl
out
int
cld
push
pop
call
xor
testl
xlat
neg
sub
sbb
add
dec
cwtl
int3
clc
add
cmp
xorl
imul
dec
fs
je
ja
inc
hlt
mov
popa
lods
ja
add
aaa
lods
or
pop
pop
mov
sbb
push
mov
dec
xchg
outsb
into
sbb
addr16
dec
push
push
outsl
sub
pop
ret
sub
mov
push
imul
mov
inc
fsub
mov
xchg
push
cmp
gs
testl
popa
aaa
pop
add
imul
xchg
jne
add
sub
out
push
jge
dec
push
pop
outsl
and
adc
insb
mov
inc
scas
in
jno
lret
xor
dec
fdivrs
loopne
push
push
and
cmpsb
jg
dec
inc
je
inc
clc
xchg
in
pop
in
push
clc
sub
cltd
mov
mov
adc
push
testb
xchg
aad
xor
sbb
xor
push
cmp
jg
ficoml
push
out
xchg
fnstcw
je
xor
out
out
bound
push
mov
add
xor
cs
popf
in
into
mov
pop
hlt
dec
cld
mov
in
sbb
aas
pop
jae,pn
imul
lahf
mov
xlat
dec
movl
rorl
inc
add
adc
cmc
mov
inc
inc
add
and
pop
pushf
aam
es
cli
sub
pop
sbb
daa
add
push
dec
cmp
push
push
fs
insb
lock
xor
call
inc
xor
push
jb
sub
mov
dec
dec
inc
jb
lcall
leave
pop
fcomps
xor
push
cld
jo
pop
fists
sub
fst
call
lock
mov
sbb
jnp
mov
loopne
mov
sub
popf
add
push
mov
arpl
jo
and
cmc
into
lods
popf
lock
ja
testl
scas
lock
cmp
xor
mov
das
mov
dec
mov
pop
or
push
jns
ret
xor
outsl
push
push
dec
dec
enter
pmaxub
mov
out
sar
rorb
inc
adc
dec
adc
dec
add
cs
push
imul
sub
scas
or
dec
add
xchg
sti
inc
adc
lcall
jo
inc
inc
push
sub
notl
inc
popa
cmc
sbb
cmpsl
loopew
faddl
xor
imul
xchg
icebp
or
add
sub
push
fidivrs
movmskps
sbb
lret
into
lds
push
enter
aaa
imul
dec
jb
mov
out
push
add
pop
das
xchg
dec
xor
and
dec
andl
push
insl
ret
std
pop
loopne
imul
inc
jp
outsb
sbb
dec
inc
addr16
jo
cmp
jecxz
sahf
clc
push
cwtl
dec
and
out
aam
sub
aaa
and
inc
jmp
std
icebp
out
jo
insl
mov
xchg
mov
pop
dec
mov
push
lahf
lods
mov
adc
push
test
clc
sbb
adc
push
sub
inc
jge
sub
sbb
das
and
push
gs
std
pop
push
lock
add
inc
cmpsb
lea
cmp
pop
jno
outsb
loop
cmpl
ja
jbe
inc
cmc
mov
jbe
pop
cld
add
rcll
fisubl
xchg
sub
cs
cld
mov
jne
filds
js
mov
cmp
push
dec
pop
fists
xchg
pop
imul
scas
leave
sahf
or
or
scas
jno
es
xabort
inc
repnz
sbb
dec
call
inc
push
add
pop
push
insb
push
js
leave
sahf
sbbb
mov
lods
addl
add
ss
inc
imul
fs
push
popa
lods
insl
jbe
jns
dec
push
and
pop
inc
cli
sbb
mov
xchg
dec
bound
dec
push
jae
loope
lcall
daa
aas
mov
jmp
dec
fdivp
test
popf
cmp
call
xor
jae
rclb
or
fisubrl
add
jnp
outsl
add
push
jle
orb
inc
inc
adc
adc
fistpll
inc
push
pop
and
add
sti
mov
shll
repnz
aas
inc
cmp
out
mov
adc
adc
add
push
scas
sarb
pop
sbb
icebp
cld
imul
xchg
sbb
sub
pushf
sti
mov
sbb
ljmp
repz
ja
jg
jp
or
fmul
inc
sub
out
fsubrp
ficomps
sbb
mov
inc
adc
inc
nop
cld
movsl
addb
loop
clc
pop
jnp
fdivl
ja
xor
sarb
adc
fs
lret
jne
mov
fstpt
imul
xor
lds
outsl
cmp
addb
or
jae
cmp
incl
add
mov
jmp
jg
mov
ret
lods
incb
arpl
out
fiadds
adc
jno
xchg
cmp
cs
in
pop
dec
ret
adc
and
xchg
sbb
sbb
adcb
shr
adc
cli
and
sti
outsl
int
push
sar
and
pop
pop
mov
and
std
dec
fstpl
sbb
xor
daa
lods
stc
daa
mov
sbb
or
cld
es
and
shl
ja
push
xor
into
enter
cwtl
jp
sbb
pop
call
lahf
cmp
sti
aaa
mov
mov
add
or
stc
aaa
ja
inc
out
cmpsl
mov
cmpl
into
std
lea
sub
dec
pop
loopne
sarl
cmpsb
sub
out
leave
movd
cltd
or
imul
sub
out
dec
lcall
xor
mov
ljmp
test
lahf
mov
sub
fadds
xchg
dec
or
cld
adc
repz
cmp
push
dec
inc
stos
push
je
stos
movsb
testl
ljmp
lret
adc
cmp
fdivl
or
pop
ja
dec
push
push
dec
addb
mov
ss
out
mov
mov
aam
ret
add
cld
jg
and
out
mov
mov
pop
ror
sub
add
jmp
mov
xor
mov
imul
int3
pop
arpl
clc
mov
sub
aas
mov
aas
rdtsc
cmpb
mov
push
sarb
push
jns
cmpb
fdivr
scas
sti
test
sub
aam
inc
mov
jne
mov
add
out
jp
out
rclb
push
aad
imul
repnz
ret
mov
cmc
imul
adc
movsl
add
push
jl
sahf
cld
sub
insl
dec
in
repz
jno
cmp
xor
or
js
out
mov
aaa
adc
aaa
mov
fnsave
stos
or
jb
jnp
movups
outsb
add
jb
inc
mov
xor
jg
testl
or
popf
andl
jae
loop
enter
out
and
ret
mov
inc
inc
jbe
and
xchg
iret
dec
jns
sti
mov
out
imul
adc
dec
mov
int
xor
std
popf
lea
xlat
and
cmp
jno
and
mov
fwait
stos
out
clc
ja
ljmp
ja
fs
inc
inc
push
orl
arpl
imulb
movsb
dec
sbbl
shl
xlat
sarl
xchg
xchg
sbb
test
stc
add
ret
cmc
clc
inc
adc
mov
adc
cmp
push
cltd
rclb
mov
sarl
loope
flds
jg
popf
cmp
lahf
sbb
push
rcrl
sti
xor
pusha
sbb
sarl
add
cli
subb
ja
incl
lret
lret
sbb
push
imul
mov
fsubp
ret
mov
aaa
sbb
icebp
cmpl
dec
add
jbe
xor
gs
lahf
fneni(8087
mov
les
ds
orb
fisttpl
inc
pop
mov
scas
rclb
sub
int
aas
mov
jp
into
call
aad
jmp
fisubs
mov
cmp
cmp
mov
cltd
stc
incl
cltd
xor
insb
pusha
mov
incb
repz
in
add
insb
cmpsb
and
jae
jg
jno
sub
ret
cld
ss
sbb
mov
cmc
push
push
sbb
mov
mov
inc
sub
xchg
dec
inc
xchg
lret
pop
insb
push
into
dec
subb
and
fs
inc
xchg
shll
sbb
aaa
cmpsl
imul
xchg
jle
clc
into
fdivl
scas
mov
scas
dec
fnstenv
out
xor
mov
dec
inc
pop
jg
jle
or
aas
adc
inc
adc
jo
and
jg
add
add
adc
pop
sti
arpl
jge
shl
subb
and
out
out
fcompl
jg
inc
in
or
sahf
xor
adc
pop
idiv
lods
push
cmpsb
sbb
mov
mov
inc
bound
push
sub
mov
pop
lds
je
ja
int
iret
push
data16
sub
push
std
push
add
outsb
scas
shl
jb
leave
mov
inc
adc
movb
insl
icebp
fucomip
aas
ret
testb
addr16
pop
sub
or
sti
out
pop
jno
test
cmp
shrb
dec
inc
clc
pop
out
inc
in
outsl
xchg
adc
pop
inc
jge
icebp
pxor
ljmp
out
adc
mov
jmp
popa
test
stos
adc
out
std
ret
push
cli
cmpsl
push
xchg
xchg
pop
les
and
and
jmp
sub
or
ror
pop
push
push
push
cmp
pop
mov
call
jns
jae
mov
push
sub
inc
loopne
idivl
xor
jge
sub
stos
aas
cmp
loop
data16
scas
arpl
xor
inc
mov
inc
cmp
icebp
out
std
ja
fs
cwtl
mov
add
cmp
jmp
mov
dec
lcall
pop
jecxz
mov
dec
shll
xor
sub
ss
adc
aas
mov
sub
pop
pusha
adc
inc
jns
int3
mov
ds
or
subb
enter
sbb
xor
aas
icebp
cmp
fadds
mov
jle
dec
popl
xchg
std
pop
mov
mov
call
inc
xchg
test
xchg
out
lahf
or
push
sahf
loope
cmp
cmp
dec
cld
popl
mov
fwait
and
inc
mov
pushl
and
jp
mov
int3
lods
push
mov
gs
sti
mov
xlat
cmp
pop
jmp
hlt
enter
notb
pop
or
mov
mov
cwtl
pop
bts
mov
pop
jmp
sbb
mov
push
inc
rcr
jecxz
loopne
lret
lods
out
xchg
inc
jmp
pop
lret
cmp
xchg
jo
jo
xchg
mov
xor
jmp
lock
push
dec
ficoms
lret
sbb
fdivs
mov
je
xchg
xchg
stc
cltd
std
jno
or
mov
mov
adc
push
pop
sbb
pop
jnp
inc
mov
xlat
sub
jl
mov
xor
push
call
out
jmp
pop
xchg
movsl
cli
aas
cmp
xchg
cmp
push
imul
sub
ds
lods
loopne
shll
stos
scas
nop
sbb
mov
std
xor
ficoms
jnp
and
add
fldenv
push
ss
jg
cli
jb
aaa
and
adc
xlat
dec
clc
ljmp
or
push
push
fndisi(8087
or
mov
add
out
outsb
inc
or
push
lods
int
sub
std
cltd
mov
test
jl,pn
push
sbb
sbb
ret
push
mov
jb
test
std
ret
sti
into
in
mov
inc
imul
aas
loope
cmp
push
mov
faddl
stc
test
sar
cmp
xor
dec
ret
das
jge
lock
adc
xchg
adc
sub
ljmp
lahf
fistps
dec
push
aad
cmp
lcall
mov
push
cmc
xchg
lock
cli
sbb
xor
ljmp
icebp
call
dec
dec
repnz
ffreep
clc
jne
in
lea
loop
icebp
scas
stos
outsl
or
in
adc
stc
fsubrs
lock
out
pop
and
ljmp
xchg
ss
lahf
jle
dec
insl
lods
xorb
cli
outsb
negb
cmc
arpl
fildl
stc
pop
push
sbb
lret
cmp
push
or
dec
or
sti
in
std
push
pusha
popf
nop
lcall
insl
xor
jnp
ret
adc
adc
push
jp
pop
jle
imul
fcoms
mov
pmaxub
lock
popf
jecxz
lods
xlat
test
inc
add
push
ljmp
out
add
push
loop
shl
pop
cmpb
lret
inc
add
cld
mov
mov
push
pop
das
dec
lcall
mov
xchg
out
insl
hlt
jl
pop
adc
je
aas
pop
das
sbb
arpl
cmp
jnp
lea
jno
incb
xor
cli
cmp
push
cld
push
adc
hlt
dec
lcall
adc
sub
or
xor
cmc
icebp
call
jmp
adc
cmp
les
lcall
fwait
stos
inc
test
lret
insl
out
cmp
push
xchg
pop
loope
or
iret
jmp
lahf
popa
add
sbb
ja
sbb
sub
shll
in
std
xchg
daa
mov
adc
sub
cld
addr16
adcb
xor
dec
sub
mov
mov
add
fnsave
jge
pop
add
mov
aas
mull
call
xor
cmp
adc
push
xor
lock
stc
or
mov
daa
orb
mov
rolb
loope
and
pop
or
push
fs
cmpsb
mov
clc
sub
sbb
xlat
add
mov
fucom
aad
dec
add
pusha
cmpsb
inc
addr16
inc
xchg
dec
dec
pop
or
bound
or
sub
and
jns
sub
sbb
gs
test
repnz
sub
sahf
push
mov
movsb
push
testb
inc
rorl
out
sub
repz
in
jo
xchg
es
fldenv
roll
push
leave
jge
outsl
inc
popa
mov
and
aam
push
popf
loop
sub
aas
jnp
mov
sahf
mov
add
xor
cmc
filds
inc
ficompl
pop
jbe
sub
xor
in
fucom
aas
cmp
shlb
out
add
dec
inc
das
daa
mov
xchg
dec
push
in
mov
dec
sub
sahf
mov
cli
cmp
adc
cmp
call
pop
aad
lock
mov
cmpsb
mov
daa
mov
jnp
lahf
lock
pop
inc
add
adc
push
ffreep
inc
inc
sbb
dec
cmpsl
jnp
out
aas
mov
mov
add
push
fdivrp
fstps
repz
fucomp
loope
jg
bound
icebp
cmpsl
add
inc
stos
out
bound
xchg
clc
icebp
or
mov
inc
pop
imul
fdivrp
inc
mov
or
mov
mov
xor
std
fcomip
vprotw
in
fnstcw
fiadds
lret
loope
mov
sbb
ret
in
scas
adc
mov
dec
push
pop
cmp
jg
icebp
icebp
sarl
cltd
adc
mov
mov
mov
data16
jmp
cmp
adc
in
std
jb
sahf
adcb
int
scas
in
mov
jge
xchg
cmp
inc
jp
xchg
push
xorl
cmp
xchg
jmp
in
sbb
cmp
xchg
jp
rcr
popf
fidivrs
xor
sbb
xor
inc
push
inc
cmp
test
pushf
adc
iret
push
test
mul
pushl
jne
push
fisubrl
jns
fistpll
xor
pop
mov
repz
dec
jae
lods
xor
outsl
jg
mov
dec
cld
sbb
pushf
mov
decl
pop
bound
push
pushf
adc
outsl
or
sti
nop
test
das
sbb
mov
mov
aas
mov
subl
ss
cli
je
mov
std
xchg
mov
sti
dec
ljmp
dec
fiaddl
repz
xor
mov
in
lock
pop
mov
cmp
addr16
xchg
inc
popf
jp
cmp
inc
cmc
clc
nopl
fnstcw
test
sbb
notb
je
jg
mov
fnsave
in
scas
adc
ret
mov
aas
sahf
pusha
mov
jg
cmp
dec
lock
dec
adc
push
cwtl
inc
mov
jo
fdivrs
xchg
mov
out
fistps
pop
pop
shlb
adc
ds
lods
jge
ja
add
adc
mov
jg
or
adc
test
push
adc
cmpl
clc
lcall
add
mov
or
hlt
sti
scas
negl
push
mov
jae
push
imul
pop
enter
aad
or
lahf
push
ss
sub
loope
lock
jge
cmpsl
mov
mov
mov
fdivrl
shrl
stos
jne
ljmp
lods
aas
nop
lods
mov
dec
mov
not
sub
xchg
pop
sbbb
push
sub
xor
jne
cmc
pop
scas
pop
pusha
add
sbb
out
cmp
inc
mov
dec
jle
jns
imul
in
mov
mov
pop
cmpb
xchg
mov
mov
cmp
std
cs
nop
mov
push
mov
sti
xchg
fists
ljmp
xor
incl
jnp
or
xor
dec
sbb
stos
jl
push
rorb
jge
filds
or
add
fmuls
or
in
mov
repnz
stos
in
inc
push
repz
dec
fmulp
fdivr
jo
les
sbb
std
in
clc
hlt
or
shl
test
out
stc
mov
roll
xchg
int
arpl
dec
push
or
inc
in
decl
out
cltd
pop
ud2
pushf
pop
mov
lahf
jnp
inc
mov
mov
neg
or
mov
xorl
rclb
call
pop
dec
shl
clc
adc
push
add
fcmovnu
ret
cmp
cli
pushl
inc
add
sbb
test
mov
jecxz
mov
add
sahf
movaps
lock
and
clc
pop
sbb
shll
cmp
ljmp
testb
mov
pop
bound
test
incb
mov
in
fisubrs
push
imull
and
sbb
mov
punpckhbw
mov
pop
sub
inc
dec
ljmp
hlt
sub
lods
or
mov
std
incl
sbb
sub
mov
decb
mov
mov
xchg
mov
and
push
adc
hlt
call
sub
mov
cld
shrl
jb
xchg
out
int
pop
mov
mov
or
and
sub
lahf
xchg
push
xchg
nop
dec
insl
or
dec
fs
pop
mov
bound
in
call
cmp
sub
mov
xor
add
out
movsb
cmp
dec
pusha
add
sti
mov
insl
inc
std
out
adc
cmpl
jg
std
mov
mov
cmp
sbb
jmp
xor
mov
or
push
rol
xor
push
dec
int3
addb
lds
xchg
repz
ds
xlat
fnstcw
push
mov
fdivl
rorb
rcr
mov
dec
decl
jl
sarl
inc
lea
in
and
sub
fyl2x
inc
jmp
xor
sti
jne
jmp
outsl
add
mov
mov
cmpb
cmpsl
add
add
sub
call
in
scas
sbb
lods
jmp
xlat
jecxz
mov
shll
dec
aam
jge
sti
aas
fdivrl
xlat
mov
mov
sarb
adc
rcr
int3
cmp
int
ja
clc
dec
popf
cmp
in
xchg
push
cmp
int3
mov
std
mov
mov
mov
pop
dec
jb
cli
cmpsb
and
xor
dec
jnp
cmpsb
mov
pop
inc
in
jg
hlt
push
inc
xor
mov
stc
in
imul
inc
add
mov
pop
jns
lret
in
xchg
clc
iret
ret
mov
lahf
shrl
sahf
out
jle
adc
and
inc
inc
insb
xchg
mov
lds
sub
loope
mov
shll
sbb
cmp
jg
loope
inc
cld
mov
test
test
add
sub
filds
or
push
and
adc
jnp
pop
jne
push
lret
sbbl
mov
test
jo
out
fisubs
add
inc
cmc
add
jbe
dec
xor
jl
addr16
jg
mov
movsl
xor
mov
hlt
out
dec
arpl
xor
xchg
pcmpeqw
sbb
cmp
test
push
data16
mov
pop
sbb
fbstp
xlat
sub
pop
and
cli
shl
clc
pop
sbb
stos
nop
add
mov
sar
pop
inc
jl
shl
mov
rcll
jno
add
or
stos
xchg
test
adc
adcb
mov
push
daa
fbld
inc
xchg
test
loope
mov
ja
rorl
rclb
or
cmp
push
fsts
mov
fisttps
xchg
mov
mov
clc
mov
xlat
adc
and
arpl
incl
add
pusha
sbb
xchg
mov
jg
lock
sub
adc
push
lea
fidivrs
add
xor
stos
sub
mov
adc
pop
xchg
jno
cld
iret
xchg
jno
and
int
ret
add
ljmp
std
incl
pop
inc
jb
jle
outsl
fidivrs
sbb
and
mov
aas
inc
enter
fisttps
add
imulb
ljmp
scas
mov
in
inc
cmp
call
decl
testl
pop
rolb
icebp
aaa
cmpsl
inc
iret
dec
add
jo
lret
test
jg
loopne
sbb
fucom
loop
js
ret
push
mov
jae
loop
rorl
scas
mov
xchg
decl
ficoms
mov
popa
xor
rcl
sbb
fxch
jmp
sub
mov
sub
pop
mov
popa
sbb
push
push
popa
cmp
loop
test
cmp
and
aaa
jb
cmp
popa
dec
pop
mov
dec
dec
sbb
xlat
decb
jl
or
mov
pushf
stos
ret
and
sbb
outsl
jl
in
add
das
lock
jb
dec
sbb
xchg
or
mov
pop
sarb
inc
out
frstor
call
add
nop
fwait
dec
cmp
xor
mov
loopne
inc
xor
pop
imul
pop
cmp
sbb
cmpsb
arpl
std
xchg
xchg
push
mov
cmpsb
push
pusha
mov
pop
mov
push
dec
pop
outsb
inc
ret
dec
cwtl
rorb
and
ror
scas
push
lahf
add
sub
pop
dec
ds
pop
stos
or
aam
push
ja
inc
jle
add
and
int
mov
js
mov
data16
inc
fidivl
out
mov
sahf
cmp
inc
mov
dec
xor
fdivs
addr16
repz
insl
mov
push
lods
outsl
mov
or
sub
imul
call
shrl
test
stos
jne
or
jmp
cmc
call
pusha
cmc
sbb
mov
arpl
int3
sar
mov
seta
fs
or
mov
shrl
mov
bound
mov
and
adc
adc
jecxz
jecxz
or
dec
push
das
inc
or
xchg
aas
add
dec
iret
pop
rolb
cmpb
lahf
sbb
sarl
incb
negb
xlat
dec
pop
neg
push
mov
popa
ret
jae
sarb
sarl
jecxz
mov
pushf
xor
shll
push
aam
jmp
add
std
jecxz
decl
jae
or
fwait
jg
incl
mov
push
jae
flds
incl
lods
sub
and
mov
pop
push
push
mov
enter
es
jg
loope
andl
cwtl
or
out
jmp
mov
fisubs
cmp
iret
cmp
flds
pop
push
sbb
loopne
inc
lea
adc
and
pop
cld
jge
cld
adc
xor
cmp
clc
call
test
enter
mov
cmp
movsl
push
sub
mov
sbb
inc
dec
adc
test
cmpsb
cmp
lock
cmp
and
or
jecxz
xor
mov
call
in
mov
out
std
pop
andl
mov
cmc
loop
mov
adc
jp
iret
std
xlat
gs
out
repz
add
loop
clc
int
ret
lcall
mov
pushf
inc
xor
cmp
jecxz
test
push
int
aad
mov
add
jg
sub
jge
dec
repnz
dec
insb
mov
cld
decl
arpl
jae
lods
add
xchg
dec
movsl
ja
xor
jge
xchg
decl
jg
test
inc
enter
pop
jb
vcvtdq2ps
cli
sub
pmulhw
imul
jg
lea
ja
sbb
hlt
loope
fucom
sbb
mov
out
mov
push
pop
jno
outsl
xchg
inc
call
cld
push
mov
sahf
xor
das
push
pusha
jge
dec
mov
and
out
add
mov
push
in
mov
sarl
sub
cmpxchg
jnp
js
add
jmp
cmp
pop
ljmp
sub
push
mov
aas
mov
dec
mov
add
pop
test
int
mov
cs
decb
icebp
fmull
xor
ficompl
ja
xor
inc
cmpsb
cli
fistpll
out
hlt
ss
pop
fimuls
add
mov
dec
add
sti
push
xor
cmp
push
js
mull
ret
sbb
data16
lods
das
lock
adc
out
les
dec
jne
sti
rcll
xor
in
in
dec
xchg
push
inc
leave
mov
xchg
mov
jg
dec
jmp
notb
bswap
decl
cwtl
and
idiv
jge
repz
add
je
inc
cltd
movsl
mov
jnp
inc
mov
push
fisubl
or
ja
out
adc
mov
add
pop
xchg
inc
incl
out
and
and
pop
aaa
test
clc
bound
cld
jns
lods
pop
stc
or
rcrb
orb
dec
jl
sub
dec
jns
or
or
pop
fs
imul
pop
jge
movsb
dec
sbb
lock
xor
pushf
mov
pop
fisttps
fistpll
mov
sbb
xchg
movsl
push
jae
lods
mov
icebp
popf
lea
cmp
dec
mov
clc
mov
jmp
jno
or
dec
outsl
jmp
pop
dec
loopne
cli
pushf
xchg
dec
push
and
sbb
pusha
js
sub
fadds
shll
push
xchg
push
lret
sti
jg
test
sti
dec
xchg
push
jmp
rol
pop
push
sbb
xor
pushl
call
in
jmp
sti
xchg
mov
mov
inc
in
shll
adc
sub
inc
call
pop
add
and
outsl
loopne
pop
fstpt
fadd
jmp
std
cli
add
rcrb
mov
loope
ljmp
and
xlat
in
inc
jmp
movsb
call
enter
fwait
pop
pop
mov
fabs
lahf
sti
push
out
push
pop
add
mov
inc
shrl
push
cmp
sbb
xchg
cmp
adc
sbb
aad
add
test
js
cs
pushl
sahf
adc
xchg
out
std
out
std
nop
dec
inc
jecxz
add
adc
test
gs
aas
push
orl
cs
cmpb
in
jg
in
dec
inc
jl
dec
fsts
and
lret
mov
mov
jecxz
sub
xchg
jbe
inc
std
sbb
cwtl
jne
adc
push
jg
aas
or
inc
call
pop
loop
inc
stc
fmull
incb
or
push
add
jg
mov
mov
hlt
fdivl
roll
sub
or
push
sub
stos
lds
pop
add
mov
pop
dec
jp
xchg
push
jle
pop
aas
sbb
xchg
fmuls
fbstp
out
pop
mov
sub
sti
mov
add
stc
or
pop
inc
inc
inc
mov
in
mov
add
xor
mov
pushl
cmp
or
xor
mov
inc
loopne
test
loopne
hlt
push
fldcw
sbb
add
decl
addr16
cwtl
mov
inc
push
jo
es
jnp
inc
mov
ljmp
inc
push
call
mov
pop
pop
add
jb
es
mov
adc
mov
popf
adc
aas
rcll
das
arpl
std
ret
sti
xchg
outsl
mov
fisubrl
xchg
iret
dec
pop
jle
dec
fadd
jp
push
inc
jno
aas
lret
ficomps
add
inc
xor
popa
imul
cltd
mov
test
lcall
mov
popf
imul
cmp
and
push
decl
mov
cld
dec
mov
or
jg
or
lods
xchg
add
std
addr16
out
dec
sub
pop
push
es
mov
push
ss
scas
mov
cmc
jg
or
inc
loopne
and
adc
cmp
outsl
shl
test
pop
push
ret
pop
cvtps2pi
les
xor
shlb
sti
out
sub
xor
shl
and
pop
hlt
lahf
or
cmpsl
xor
nop
cmp
mov
iret
movsl
jns
sbb
cld
shl
js
or
pop
mov
xor
fisubrl
mov
sti
xor
push
into
pusha
mov
jl
lea
cld
fdivs
xchg
pop
add
or
mov
dec
jmp
adc
jge
cmp
in
ljmp
cmc
or
or
push
aaa
fcmove
mov
and
xchg
or
ljmp
jnp
gs
mov
and
sbb
fs
lret
adc
mov
out
push
pushl
inc
repz
mov
imull
das
jnp
mov
outsb
add
jl
mov
js
add
adc
loopne
ljmp
push
lret
jl
sbb
int3
lcall
shlb
clc
bound
dec
fbld
or
add
add
sti
or
jo
fistpll
clc
jecxz
ja
test
push
clc
cmp
stc
adc
sti
addr16
loop
shr
push
icebp
adc
fiadds
and
aas
idivl
add
popf
mov
and
cmovg
inc
xor
int3
dec
cmp
jg
pop
insb
lret
ljmp
or
and
mov
lcall
out
js
aas
ret
addr16
adc
jne
in
and
mov
idivb
cli
mov
sahf
or
or
aas
dec
insb
add
mov
sahf
aaa
xchg
mov
test
loope
loop
lock
clc
adc
mov
push
je
sub
inc
cwtl
inc
decl
or
lret
add
nop
and
push
jle
jmp
js
insb
mov
mov
sbb
movsl
sbb
adc
leave
push
mov
out
ja
or
rcrb
jle
sub
iret
clc
jo
mov
xchg
jnp
cmp
sub
test
pop
or
sub
push
fnclex
mov
mov
push
xor
mov
das
lds
xor
enter
mov
in
aaa
in
pop
or
jg
js
fbld
sahf
jg
and
dec
sbb
cmpb
fsts
pop
mov
out
std
mov
mov
lods
sbb
sahf
pop
xor
mov
daa
dec
sbb
xchg
xchg
inc
mov
mov
dec
aas
inc
call
jo
int3
sbb
loopne
cmpsl
pop
push
orb
push
push
jmp
sub
jge
rcll
mull
mov
sbb
ror
mov
nop
add
jnp
cmp
mov
fisubrl
pop
push
in
add
clc
rolb
jecxz
out
sub
sbb
inc
movsb
sbb
mov
jg
lahf
xchg
mov
inc
stos
jp
add
cmp
lock
orb
push
loope
rorb
icebp
jmp
stos
jp
fidivrs
dec
cwtl
imul
or
nop
aas
mov
jmp
lcall
mov
jl
mov
sub
and
ret
movsb
test
mov
sahf
fs
lock
loopne
in
push
jg
inc
jne
cmp
dec
std
movl
pop
cmp
aas
lret
xchg
mov
or
lcall
shrb
jecxz
xor
in
movsb
popa
inc
dec
pop
stos
rol
div
mov
or
sti
mov
cmpsl
cmp
xchg
icebp
pop
imul
sub
shr
or
xchg
test
loopne
sti
aam
lahf
loope
pop
xor
lcall
push
push
adc
adc
pushf
pop
jbe
addl
sub
movsl
push
fistpll
lods
mov
push
stc
cmc
stc
addb
jmp
out
inc
stos
outsl
cli
test
xchg
cmp
xor
push
fnsave
push
sbb
ret
inc
decl
call
es
pusha
mov
std
ret
mov
movsb
pop
clc
xor
inc
les
mov
mov
and
push
mov
cmc
fstpl
ljmp
pushf
loopne
jp
mov
push
xor
mov
jg
mov
sbb
je
arpl
clc
xchg
xlat
jnp
nop
adc
add
mov
mov
xor
mov
dec
daa
lds
mov
flds
dec
xlat
testl
push
repz
xor
das
rcr
jle
mull
adc
inc
bound
ja
ret
pop
jns
popf
js
sbb
add
xor
xor
lret
jmp
out
fs
cmpsl
shll
cld
mov
icebp
cmp
call
out
cmp
icebp
xor
aas
fdivr
and
orl
jo
addr16
push
shll
add
pop
sbb
jmp
xor
incb
fimuls
out
adc
cmpb
sub
filds
js
pop
cs
enter
inc
push
adc
push
add
pop
push
aam
out
loop
ds
lea
stos
andb
test
jmp
cs
inc
add
leave
cmpsb
xchg
mov
sti
or
dec
mul
stos
cli
xchg
mov
ljmp
mov
add
add
pop
rcll
out
adc
lea
std
sub
mov
cmpsb
add
and
movsb
loop
cld
cmpsl
push
dec
faddl
out
jl
mov
lret
xchg
add
mov
mov
or
fwait
mov
or
dec
ss
mov
lock
xchg
in
mov
out
push
decl
push
push
jecxz
ljmp
jnp
ja
inc
and
dec
sub
aas
cmp
divl
out
pop
aas
aas
dec
ret
ficomps
fwait
jnp
mov
popf
or
clc
das
jle
gs
xchg
pop
push
cmp
lret
or
stos
rcl
sbb
cmc
push
adc
mov
lret
aaa
or
push
jl
adc
and
lret
test
and
add
inc
or
inc
cmpb
cmc
cs
pop
pop
mov
or
pop
sarb
roll
cmp
ljmp
cmp
mov
imul
or
loope
and
fistpll
add
inc
xor
mov
push
cmc
popa
pop
jbe
mov
dec
loopne
sbb
pop
xchg
push
xchg
inc
test
sbb
jge
jnp
pop
dec
sar
push
mov
call
jmp
xchg
in
pop
push
sub
add
adc
jo
or
pop
add
shr
std
jg
jg
enter
fiaddl
andl
push
ret
push
pop
idiv
fisttps
cs
loopne
stos
fstps
leave
negl
fcmove
mov
mov
daa
loopne
loopne
pop
stc
in
div
call
sub
mov
xchg
adc
xor
outsb
ret
bnd
lods
mov
jno
mov
jne
inc
mov
lcall
clc
iret
mov
inc
es
fcmovb
and
imull
data16
mov
jnp
ja
call
das
pop
sub
fs
mov
jmp
decb
cli
cmpsb
mov
call
subb
mov
jg
loope
inc
sbb
stc
out
or
xchg
mov
movb
adc
mulb
add
cmc
jle
call
lock
sbb
jg
ljmp
popa
mov
pop
and
loop
inc
add
dec
pop
dec
insl
add
adc
stos
push
insb
stos
mov
out
fistpll
movsb
mov
in
jmp
gs
and
jle
mov
scas
daa
xor
jg
cli
aas
lods
adc
and
das
cwtl
xchg
mov
arpl
sub
fstpt
adc
sub
aas
sarl
rorl
inc
lds
adc
adcb
xor
xchg
aas
ret
std
fdiv
jno
lods
cs
popa
scas
and
xor
mov
lods
ds
fcmovnbe
add
clc
mov
adc
mov
sarl
and
inc
lahf
cli
in
inc
xor
inc
outsl
adc
sbb
push
js
jae
mov
lods
out
xchg
hlt
fmull
loope
jae
pop
mov
aam
jb
xor
rcl
mov
xchg
movsl
or
or
mov
std
mov
adc
mov
add
add
decb
push
pop
and
jbe
push
mov
test
repz
lahf
fs
pop
cmp
out
out
ficomps
lods
dec
cmp
xor
gs
fcmovnb
inc
adc
test
xor
and
pop
xchg
fs
mov
and
in
fidivl
mov
jecxz
push
add
push
loope
adc
fildll
idiv
insb
push
or
iret
data16
iret
xchg
jp
out
add
notl
sbbb
fs
mov
cmc
aaa
sub
in
imul
jno
inc
lcall
fildl
push
imul
sarl
ret
mov
test
in
jno
cld
neg
mov
aam
addr16
inc
pop
sbb
clc
iret
pop
pop
imul
imul
sahf
dec
pusha
insb
in
or
add
ret
jge
pop
int3
rclb
sub
push
xchg
in
popa
cmp
or
sub
out
cwtl
mov
or
in
out
or
mov
add
dec
mov
and
aaa
jl
inc
jg
inc
cmp
popl
dec
push
sbb
or
mov
std
js
scas
xchg
iret
push
fistpll
push
lock
out
test
adc
cmc
popf
rcll
lahf
rcl
jecxz
mov
add
shrl
mov
pop
stos
pop
jmp
icebp
xchg
out
push
jnp
or
scas
xor
jg
ss
or
adc
shr
daa
sbb
push
sbb
test
mov
incl
std
icebp
pop
insb
fs
dec
fistps
into
rolb
jnp
mov
mov
aas
out
push
sub
lcall
or
mov
cwtl
lahf
lock
insb
push
adc
jnp
lcall
mov
loop
push
decb
loope
in
leave
pop
test
push
clc
outsl
sbb
mov
cli
popa
jno
pop
pop
lea
pop
jge
loope
mov
imul
or
inc
aas
jmp
imul
push
push
inc
loop
xor
movsb
push
fstps
leave
in
mov
dec
push
js
or
ret
call
or
lea
mov
cld
xorb
pop
pop
push
xor
dec
xchg
cmp
loope
clc
out
icebp
call
pop
push
sbb
add
enter
aas
jg
cli
inc
xor
test
icebp
aas
or
lea
ret
mov
sti
jne
push
adc
push
jb
lds
cmc
mov
lret
adc
pop
loopne
aas
sti
mov
ljmp
dec
mov
js
adc
inc
subl
ja
stc
and
mov
fwait
bsr
aam
cmpsb
inc
mov
dec
test
ds
cmp
push
pop
cld
daa
cmp
mov
fucom
and
jle
jmp
cmp
call
jmp
add
movsb
popa
lret
mov
sbb
jmp
adc
or
andb
mov
fsubrl
cmp
into
repnz
gs
sub
mov
cmpsb
jle
mov
das
aad
in
add
mov
jge
incl
repz
js
js
movsl
inc
mov
push
mov
loope
mov
loope
inc
movq
cld
std
jg
lcall
pop
mov
sbb
sbbl
inc
fincstp
mov
in
jecxz
cmc
aad
in
push
mov
jle
hlt
jg
cmpl
inc
xchg
push
sub
pop
ljmp
ret
or
nop
dec
jno
cmp
cmp
jecxz
xchg
test
mov
pop
push
cmc
scas
jne
cwtl
outsl
decl
decb
icebp
arpl
jb
add
dec
cmc
cli
out
ds
addr16
cmpsb
addr16
out
pop
mov
mov
jnp
cmc
xchg
ljmp
mov
and
dec
dec
cld
fsubr
pop
mov
jbe
imul
out
jg
ds
jno
sub
mov
imul
lea
popa
adc
mov
sub
dec
push
jb
out
push
jmp
dec
xor
cld
mov
pop
aas
mov
bnd
ret
jae
sub
pop
call
jmp
insb
pop
js
shll
inc
mov
out
icebp
idivb
inc
mov
jno
lea
jmp
fnsave
sub
pop
icebp
pop
test
enter
and
filds
rcl
or
rcl
jg
jecxz
xchg
daa
inc
jmp
cmpb
jp
jecxz
xchg
lods
adc
push
imull
cmp
ljmp
pop
inc
adc
jl
xor
mov
mov
mov
cmp
call
add
imul
loope
out
pushf
orb
dec
shr
pop
mov
in
and
dec
subb
fwait
imul
and
fwait
jle
in
rcll
adc
add
jg
aad
aad
popa
jo
sub
je
decb
sbb
push
in
mov
repnz
mov
hlt
xchg
scas
fwait
out
add
jbe
enter
add
cltd
loop
cli
das
sbb
cmc
je
jl
test
cmpb
repz
dec
lods
aaa
push
mulb
mov
aas
ret
aas
mov
mov
dec
add
jle
ret
mov
fwait
sbb
ret
push
shll
out
shr
data16
pop
xor
daa
imul
lahf
mov
xchg
mov
aas
mov
mov
add
push
mov
jge
outsl
cmpl
mov
pop
push
pusha
andl
pop
sarl
arpl
pop
lods
cli
inc
mov
and
es
adc
stc
imul
jg
jecxz
jno
pop
add
cmp
jns
sub
xchg
leave
iret
std
pushl
mov
add
aas
pop
imul
test
lods
cmp
fs
lret
adc
add
or
out
ja
sbb
pusha
bound
mov
jno
iret
sbb
inc
ret
shll
xchg
and
neg
sti
daa
ret
fldlg2
pushf
rolb
scas
ja
jnp
sbb
jo
sbbb
adc
stos
subb
pop
jmp
inc
adc
rolb
int3
xor
fidivs
xchg
xchg
xchg
fwait
hlt
adc
push
pop
jg
call
mov
out
cmp
push
inc
ret
sbb
clc
lahf
lock
lret
test
mov
sti
ja
lahf
fstpt
lock
inc
fimuls
jg
dec
cmp
mov
mov
push
out
ret
xor
sub
movsl
fisubrs
adc
pop
into
add
movsl
stos
cmp
jmp
loop
addr16
sbb
lock
in
mov
js
popf
mov
or
cli
subb
loope
aaa
rcrb
mov
sub
pop
and
push
aam
push
jno
std
ret
jg
std
shrb
les
xchg
cmpsl
aam
fsubrl
add
or
xchg
pop
sbbl
insl
cld
mov
incl
int3
mov
popf
sub
mov
mov
mov
hlt
mov
notb
dec
add
test
lock
push
xchg
pop
mov
dec
or
inc
adc
ja
add
fistpll
cltd
adc
rorb
xchg
push
ljmp
negb
cmp
mov
jne
fidivs
out
popf
cmp
pop
mov
shrl
sub
xlat
aam
mov
jg
clc
rclb
mov
aam
dec
arpl
mull
pop
mov
and
jle
inc
mov
mov
dec
loope
popa
popa
popf
into
xor
jmp
jmp
cld
xor
ret
scas
sub
mov
aam
add
sub
lcall
xor
push
fcomip
adc
or
push
cmp
mov
jp
push
mov
inc
mov
arpl
dec
hlt
jae
sub
mov
sar
cmp
dec
outsb
flds
jecxz
dec
push
xchg
add
clc
mov
jp
cli
adc
fwait
mov
sti
scas
shr
ficoms
push
stc
sub
jl
out
ffreep
jb
notb
cmp
adc
out
std
pop
cld
dec
fs
call
inc
jno
ljmp
ja
cli
adc
xor
lods
push
aad
jg
fdiv
fisubl
add
mov
lcall
push
test
mov
xchg
andl
mov
mov
in
inc
pusha
mov
js
cs
cmp
jge
les
dec
cltd
sub
clc
pop
cmp
nop
mov
lods
lock
ja
jg
in
mov
push
sbb
lcall
mov
mov
or
and
jg
jecxz
jno
loope
xor
push
xchg
push
das
mov
mov
sarb
jp
fistpll
daa
and
pop
add
ja
adc
dec
push
popa
mov
push
imul
mov
pop
jl,pt
call
fsubrl
ficomps
aas
sub
add
push
dec
inc
test
lods
ffree
lods
idivl
cmp
jnp
pop
push
add
xchg
out
jnp
in
xchg
outsl
jno
leave
push
into
mov
inc
loopne
push
scas
and
out
mov
icebp
dec
inc
fdivrp
in
aas
mov
push
fs
out
inc
pop
and
sbb
push
push
mov
aas
or
or
jno
add
insb
popa
dec
es
push
jecxz
pop
or
push
fbstp
add
cmp
cmp
enter
dec
xchg
dec
or
lret
std
pop
sar
pop
loopne
cld
pop
rcr
pop
aas
and
aas
jg
dec
mov
out
mov
jg
sti
rorb
push
cwtl
mov
ss
or
mov
mov
jle
std
std
pop
jmp
jne
aad
lds
cmp
and
nop
mov
xor
add
lea
sbb
lock
cs
das
xor
aaa
scas
xchg
jmp
loopne
and
out
sub
out
aas
mov
jg
addr16
aad
xchg
pop
psrlq
cmp
dec
stc
and
dec
je
xor
mov
pop
cltd
jle
push
outsl
dec
cmpsb
add
inc
rolb
aaa
addl
inc
push
scas
inc
mov
and
and
and
mov
inc
dec
sub
aad
pop
push
jns
dec
lcall
xchg
hlt
aaa
mov
cltd
js
mov
sub
xchg
or
dec
jns
push
emms
sbb
sbb
aad
les
cld
dec
push
out
cld
jg
xchg
loop
das
mov
or
js
aas
adc
incl
daa
je
daa
fdiv
push
xchg
jnp
cmc
lahf
cmp
push
jmp
or
clc
mov
jg
stos
jg
cmp
cmp
daa
movsb
loopne
mov
sbb
aam
in
in
xchg
cmp
push
int3
mov
cwtl
add
out
mov
sahf
aas
push
mov
imul
adc
jg
pop
es
mov
mov
movsl
xchg
pusha
jo
pop
adc
sbb
pop
mov
arpl
or
add
dec
adc
mov
decl
mov
mov
cmpl
mov
shll
cwtl
lods
push
in
jnp
mov
adc
mov
add
push
jne
sahf
mov
cli
nop
rorb
ror
mov
ljmp
sub
movsb
inc
add
sti
push
cld
jg
inc
mov
ds
sub
aaa
fldln2
fucom
mov
repz
setne
fadd
sti
adc
inc
inc
dec
jb
cwtl
inc
sahf
sbb
idivl
push
rolb
into
add
push
cmc
pop
cmpsl
jg
loop
int3
pusha
aad
out
add
push
mov
out
es
cmp
pop
sahf
inc
ds
arpl
scas
pop
std
mov
dec
jecxz
aad
dec
shr
mov
ror
insl
dec
gs
repnz
outsl
iret
sub
fcmovnu
sub
mov
movsb
in
test
das
inc
cmpl
mov
push
jg
clc
lahf
mov
pop
lock
sahf
xchg
lods
dec
adc
lods
sbbb
and
jecxz
or
jmp
cmc
arpl
or
add
and
fdivr
addr16
hlt
push
loop
rcrb
lods
fsubrs
or
mov
mov
popf
push
lcall
pop
lods
stos
shl
dec
push
dec
push
sahf
incb
add
inc
or
test
test
dec
push
jae
mov
test
cmp
push
scas
mov
push
inc
and
ret
je
aad
stc
fcmovnb
add
push
rcll
inc
inc
pop
sub
xor
xchg
inc
mov
pop
jp
lahf
aad
mov
mov
add
mov
stc
cmc
and
push
mov
out
lock
ljmp
mov
add
cmp
into
adc
in
adc
cld
pop
negl
sub
pop
jbe
sub
sbb
mov
xlat
xchg
mov
adc
mov
dec
shlb
mov
cmp
jecxz
jge
mov
popa
je
shlb
sbb
push
or
adc
mov
jmp
dec
xchg
mov
out
mov
sbb
or
xchg
test
fisttpll
aam
push
aaa
lea
sbb
lock
sbb
mov
stos
lcall
xchg
cmp
mov
sar
and
stos
ljmp
push
inc
jecxz
lahf
cmp
dec
jmp
adc
push
jmp
mov
loopne
cmp
add
mov
into
out
leave
pop
or
pop
out
xchg
push
das
push
out
inc
mov
movsb
mov
cmpsb
test
cli
xchg
clc
out
shr
lods
add
push
jg
ja
mov
push
out
ljmp
pop
lret
cmp
das
clc
out
fstpt
scas
cmp
inc
pop
dec
mov
arpl
ret
mov
insl
jl
loop
aam
aad
inc
movsl
test
lods
xchg
fistpll
dec
fwait
sub
ja
mov
mov
dec
mov
jp
fdivr
mov
fmuls
lds
push
cld
or
ficoml
std
jae
jno
mov
call
dec
adc
cmp
mov
addr16
sbb
sarl
or
push
jb
fistpl
mov
rcll
pop
add
pop
icebp
push
bound
sbb
ja
mov
frstor
call
loop
dec
jb
dec
aad
xchg
mov
adc
pop
insl
sub
and
jg
pop
mov
mov
sub
int3
jg
cs
jle
jecxz
push
inc
mov
mov
adcl
adc
sub
movsb
nop
xchg
cmp
ret
push
adc
cmp
aaa
push
jg
iret
popf
pop
hlt
xor
jg
dec
cltd
jl
and
inc
hlt
pop
out
mov
lods
and
mov
aad
insb
cmp
ss
hlt
scas
testl
ljmp
test
inc
arpl
jnp
inc
in
outsb
rolb
lods
std
fnstsw
xchg
std
dec
xchg
add
mov
mov
fs
xchg
cmc
stos
sub
mov
inc
pop
pop
out
out
std
mov
test
fcompl
xchg
sbb
xchg
cltd
add
in
push
dec
jmp
inc
push
shrb
cmp
inc
sbb
cmp
pop
flds
or
stos
pop
cmpsl
inc
mov
aad
push
inc
imul
movsb
cmp
dec
js
lods
push
dec
pushl
mov
pop
idivl
sub
sub
ja
dec
sbb
enter
outsl
mov
loope
lret
out
dec
leave
jg
ja
jg
mov
hlt
fwait
movsl
mov
jb
sti
jbe
test
inc
lea
movsl
arpl
mov
xor
sub
mov
out
cld
mov
or
hlt
push
mov
ja
sbb
dec
adc
fisttpl
sbb
cmc
aad
loope
sbb
mov
dec
in
lock
mov
sbb
cmp
add
inc
clc
jg
push
adc
enter
push
int3
push
push
jle
cli
xor
or
jecxz
jecxz
sub
cmpsb
jae
fdivl
loopne
mov
inc
cmpsb
or
dec
arpl
xchg
dec
dec
call
in
add
mov
popl
or
inc
outsb
iret
and
push
outsb
jne
outsl
repz
xlat
xchg
inc
pop
jg
aas
push
lahf
cltd
xor
and
stc
mov
rolb
aad
fbld
sub
pop
out
in
mov
push
adc
lock
inc
das
cld
mov
sahf
mov
hlt
and
dec
add
sti
xor
divb
pop
cmpl
and
xchg
lods
imul
adc
sbb
jae
jle
jle
mov
or
add
ss
lahf
adc
mov
jne
test
sub
and
aas
inc
scas
add
addr16
test
hlt
pop
mov
adc
jg
jb
movsb
outsl
mov
negl
rep
scas
clc
test
jg
sub
mov
ss
mov
push
sub
out
push
bound
jg
mov
lahf
mov
cmpb
cwtl
test
xchg
shl
xchg
loop
pop
aas
into
sbb
sub
out
jo
in
sbb
ss
stos
sbb
jge
mov
popa
mov
inc
loop
adc
das
mov
ljmp
pop
jb
mov
adc
aas
int3
sub
or
mov
mov
jge
rcll
cmpsb
stos
or
adc
sub
iret
jbe
fbld
sub
ss
jg
sarl
inc
push
ss
pop
push
or
das
sub
cmp
pop
aam
data16
shrl
sub
ss
mov
pop
and
cmp
inc
pop
arpl
cmpsl
repnz
mov
shlb
jg
cwtl
pop
or
rolb
or
mov
or
add
mov
aad
jge
sbb
ret
sti
push
out
push
push
xorb
loopne
outsb
jmp
int3
cmp
cld
sarl
dec
mul
decl
sbb
data16
and
cli
fwait
adc
js
fwait
or
test
ret
int3
sbb
out
xor
adc
push
lock
inc
in
aas
push
movsb
fcoml
xor
cmp
ret
push
mov
divl
pop
data16
cmp
mov
mov
hlt
int3
or
cmp
popf
sbb
arpl
mov
repnz
mov
xchg
mov
xchg
decl
fyl2x
stos
fidivrs
lods
sub
mov
jns
pop
je
js
daa
leave
cltd
jg
jle
sbb
push
pop
jnp
jae
aam
ret
addr16
arpl
push
in
mov
frstor
cmp
idiv
pop
sbb
mov
push
xor
loope
mov
jae
pop
dec
aaa
xor
lock
fists
mov
rol
cmp
fwait
jnp
repz
out
lret
pop
mov
or
cli
inc
jg
hlt
push
pushf
push
loop
sbb
adc
and
lods
clc
pop
aad
popf
idivb
es
pop
gs
jne
add
mov
bound
loop
lds
loope
sub
mov
ss
mov
faddl
sbb
imul
aas
daa
or
or
in
imul
adc
dec
imull
into
push
mov
enter
add
pushf
scas
aas
dec
call
cmc
mov
push
cmp
or
out
fisttpl
repz
lock
dec
xor
stos
fwait
adc
push
out
push
ja
mov
outsb
jmp
test
sbb
fldenv
mov
inc
add
xchg
jb
add
lahf
inc
test
mov
mov
adc
xchg
loope
jecxz
sub
and
aas
ja
and
hlt
mov
sbb
fstpt
jl
cli
mov
or
aad
sub
js
into
std
daa
jp
mov
mov
dec
inc
ret
cmpsb
imul
sub
jnp
pop
mov
dec
mov
outsl
sbb
xchg
sbb
sbb
push
incb
stos
ja
loopne
ljmp
dec
dec
push
hlt
jo
xchg
loope
std
popa
jns
pop
add
sub
push
lods
decb
lcall
pop
cmpl
fcoml
mov
lcall
mov
mov
cli
pop
push
aas
aam
sbb
subb
scas
sti
sbb
out
push
ljmp
ljmp
push
test
dec
popa
fdivrl
xor
negl
repnz
and
sub
adc
iret
lock
repnz
jnp
shl
test
jge
xor
push
ret
jmp
lock
dec
push
dec
and
fdivs
fsubrs
daa
push
sahf
test
std
std
pop
jo
dec
adc
add
js
shll
js
mov
mov
or
addl
dec
imul
fsubrp
sub
sbb
enter
cld
mov
cmp
sbb
shll
mov
and
add
fistl
mov
push
data16
and
jecxz
push
sbb
mov
inc
test
pop
xor
xor
outsl
ficomps
push
cld
popa
icebp
out
cmpsb
addl
mov
fisttpl
mov
mov
xchg
mov
into
mov
testl
repz
mov
mov
push
insb
mov
gs
push
lahf
add
cmp
and
cld
push
arpl
cmp
imul
cmc
jg
sahf
xchg
jne
sub
fsub
add
sbb
test
ja
call
cwtl
les
xchg
and
pop
test
stos
lahf
push
inc
cltd
fwait
lahf
mov
pmulhuw
jo
call
in
sub
clc
arpl
aas
popf
pop
jmp
lcall
adc
mov
pop
out
push
sbb
bound
push
sbb
jmp
les
pop
mov
jae
ja
cli
pop
mov
out
aas
add
cwtl
jmp
xchg
and
imul
cmpsl
ja
mov
insl
mov
jg
xchg
outsb
test
enter
sbb
sub
cld
xchg
cmc
dec
cmpsl
cmp
jle
mov
adc
sar
lods
test
push
adc
stc
movb
shr
cli
or
popf
outsb
dec
repz
std
aas
andl
mov
enter
dec
cmpsl
stc
lock
push
push
cmp
sbb
pop
and
xor
sub
jle
pushl
negb
xor
lahf
cmp
in
add
test
js
ret
lahf
stos
add
jo
sbb
std
xchg
fisubrs
xchg
dec
sbb
sbb
int
out
mov
jle
idiv
cmp
push
cmp
mov
and
ja
fcoms
pop
mov
andl
cmc
cmp
mov
pop
add
add
jge
loop
nop
xchg
mov
into
test
cld
adc
push
add
loope
or
test
or
in
hlt
adc
mov
pop
icebp
mov
jno
jg
jg
mov
rolb
mov
mov
pop
push
xchg
push
add
je
sti
out
lock
fs
xchg
data16
insb
or
jg
std
fistpll
or
imul
mov
mov
mov
scas
inc
or
ret
or
mov
jg
mov
pop
outsl
mov
icebp
decl
push
push
mov
enter
loopne
idiv
jmp
aaa
in
pushf
gs
nop
sub
push
or
fwait
pop
ds
std
iret
ret
or
mov
arpl
add
test
xor
and
movsb
into
jmp
jg
ja
or
in
mov
xor
arpl
sub
xor
or
push
lock
sub
lcall
shll
mov
jbe
lds
fdivrp
into
cld
lcall
mov
add
add
out
out
sbb
cs
incl
fsubrl
fldcw
cmp
sbb
add
sbb
push
xchg
mov
jmp
ds
sarb
cmpsb
xchg
push
dec
adc
ret
decl
cli
frstor
jmp
dec
jg
ss
test
jno
push
jg
fstps
cs
in
jge
cmp
or
adc
sti
and
cld
sub
inc
movsb
cli
popl
fistpl
sarl
clc
out
std
jg
dec
xacquire
sbbl
push
out
lea
mov
popf
jge
out
aam
or
mov
hlt
cli
jo
or
jne
add
pop
pop
cld
leave
hlt
or
aaa
sbb
xchg
mov
mov
test
fistpl
idivl
ret
fwait
cmp
js
push
ds
sti
mov
xor
insb
cmp
jo
add
fsub
pop
add
in
adc
in
loopne
cli
sbb
sub
mov
clc
sbb
mov
sbb
inc
push
outsl
jl
jo
inc
lods
push
loopne
call
xlat
lock
mov
stos
aad
mov
mov
mov
ds
movsb
jg
mov
xor
mov
jmp
xchg
adc
andb
and
decb
ja
nop
pop
inc
data16
jbe
xchg
sti
negl
rolb
cmp
leave
add
popa
mov
xor
push
inc
jg
loop
and
adc
sub
in
mov
imul
xor
inc
add
ficomps
mov
and
or
xchg
fsts
push
mov
imull
idivl
jae
psubd
call
jmp
data16
stos
xor
adc
xchg
sub
sub
xchg
ret
lret
cmp
and
cmc
pop
push
dec
sbb
cmc
cmp
in
xor
je
in
pusha
push
call
pop
repnz
mov
dec
mov
jg
leave
jnp
mov
jmp
push
pop
call
in
popl
ret
popa
lahf
cmc
sub
les
sbb
loopne
add
mov
sahf
adc
cmpsl
pop
icebp
mov
push
lcall
movsb
pop
pop
rcrl
ja
xor
aad
subb
xchg
xor
addr16
lahf
or
mov
fidivs
push
roll
xchg
pop
adc
cli
xor
nop
dec
cmc
mov
mov
pop
sti
shlb
movsl
gs
in
push
or
popa
daa
ljmp
jg
add
in
adc
ds
fucomi
rcrb
xchg
pop
pop
jae
sar
mov
ret
fmull
mov
sub
adc
dec
in
je
sbb
inc
std
iret
repnz
sub
cmpsb
and
in
daa
ret
in
jo
int
and
shll
in
ljmp
fistps
xchg
fldcw
iret
cmp
dec
mov
rcrb
cmp
cmp
popa
lock
rolb
nop
cltd
js
dec
or
sti
pushl
sbbb
loop
push
push
jo
stos
push
push
cltd
les
das
lret
mov
pop
lcall
pop
mov
aam
rcll
stos
xchg
bound
cmc
idiv
xor
sahf
mov
inc
sub
and
int
repnz
xor
rcl
sbb
jg
dec
jmp
sbb
stos
imul
out
inc
dec
call
sub
push
xchg
jnp
jg
popf
jns
xor
std
ret
mov
outsb
mov
push
jp
mov
xchg
push
dec
shrb
aaa
rol
xor
xchg
jg
in
pop
mov
sbb
inc
xchg
pop
and
xor
lahf
stos
cmpsl
add
bound
daa
std
cmpsl
mov
dec
rcrb
xor
movsb
cmp
push
pushf
xchg
sahf
scas
mov
mov
popf
sti
xchg
enter
jae
mov
mov
ja
pop
mov
jg
jp
out
std
or
sub
leave
sbb
or
nop
mull
jne
sahf
stos
sti
lds
mov
pushf
xchg
pushf
xchg
inc
sbb
and
sub
mov
fimuls
adc
add
es
icebp
adc
cmpsl
add
pop
jmp
ss
std
add
std
pop
or
popa
cltd
sbb
pop
xlat
sbb
or
mov
dec
aas
adc
push
jmp
add
iret
mov
popa
cmc
mov
sbb
pop
and
je
sbb
bound
mov
std
testb
gs
call
int3
push
daa
lret
xchg
xlat
sbbb
das
add
les
mov
mov
outsl
or
bswap
mov
mov
jle
loopne
fisttpll
lcall
push
rorl
mov
jmp
sbb
or
pusha
js
sbb
das
lods
bound
mov
xor
pop
cmpl
mov
add
mov
popf
jl
inc
jmp
lods
mov
mov
dec
pop
or
xchg
adc
cmpsb
or
rcrb
adc
fwait
cmpsl
sbb
mov
lds
mov
dec
hlt
pop
aas
push
icebp
push
movsl
sbb
int3
pop
inc
mov
cli
call
mov
imul
mov
mov
popa
test
sbb
xchg
sti
mov
sub
les
rclb
lods
xchg
mov
movsl
sahf
inc
cmp
icebp
stc
pop
add
and
cltd
push
inc
sbb
or
shrb
jg
outsb
lcall
ds
lods
popf
cwtl
xchg
mov
inc
popf
sbb
lods
sub
pop
push
xlat
mov
ja
int
lahf
xchg
xor
ss
stos
lods
lea
add
pop
into
cmp
loope
jge
dec
push
or
dec
inc
sub
out
push
pop
jecxz
mov
xor
cli
adc
je
fimull
das
pop
xchg
popf
fdivr
pop
mov
in
cld
or
xor
ja
cmpl
pushf
mov
jo
movsb
mov
xchg
xor
push
mov
scas
shll
jge
lock
out
std
stc
stos
mov
aaa
repnz
aaa
int
sub
into
jns
pop
and
mov
inc
pop
jmp
and
dec
inc
adc
push
lods
adc
and
popa
jl
ret
push
and
cli
ljmp
sbb
insl
xor
ss
inc
dec
push
jmp
xor
jl
mov
or
mov
push
lahf
sbb
movsb
outsb
push
into
fisttps
pop
xor
pop
adc
jb
je
xchg
out
sbb
fsubr
or
jae
and
icebp
mov
inc
stos
sub
aad
push
sbb
popf
shrl
push
mov
int
repz
jg
inc
push
mov
adc
adc
inc
pop
enter
push
or
enter
movl
ret
test
jbe
fs
adc
push
imul
loope
std
ds
mov
call
repz
fistps
and
test
fsts
xchg
ffreep
adc
dec
mov
pop
add
clc
pop
fimuls
dec
xchg
hlt
mov
adc
xchg
cmp
sub
xchg
fucomi
mov
xor
clc
enter
out
xchg
dec
loopne
stc
pop
shlb
fwait
cmp
add
adc
pusha
mov
jo
push
lods
jle
leave
cwtl
cmp
cmc
mov
push
push
mov
insl
dec
xchg
dec
ss
fdivrs
push
jne
orb
aas
stos
clc
pop
cmp
test
cmp
cld
aam
shr
sub
mov
add
test
cld
xchg
dec
jle
jbe
xchg
inc
push
push
add
std
jnp
pop
jp
cs
in
aas
ret
bound
xlat
fbld
stc
out
sbb
ljmp
shll
add
lds
sarl
mov
test
das
in
decb
mov
daa
sti
fistps
inc
outsb
jo
das
sbbb
clc
fnstcw
add
sbb
filds
decb
mov
lret
adc
dec
inc
out
std
push
fistpl
sti
js
jns
call
xor
push
push
push
mov
or
in
ud1
dec
pusha
xor
notb
iret
add
push
inc
inc
hlt
sub
inc
gs
popa
testl
cld
data16
xorl
sti
adc
inc
inc
inc
jle
push
sub
shll
xor
ss
jb
comiss
sar
mov
xchg
data16
push
push
inc
sti
fucomip
pushf
adc
xor
sub
cmp
jne
sbb
mov
and
adc
sbbl
pop
pop
and
out
inc
es
cld
push
mov
push
jbe
inc
mov
push
mov
sbb
or
inc
pop
jbe
fdivp
fbld
add
pop
arpl
pop
add
leave
sub
pop
sbb
outsl
sbb
dec
jbe
push
jbe
add
inc
pop
push
push
jae
add
movl
inc
jo
dec
std
pop
fcmovnu
xlat
fcomps
add
jmp
cmp
push
int3
xor
cmove
jb
sti
mov
fmull
dec
inc
popa
inc
push
cld
and
and
nop
add
inc
xor
inc
fcoms
pushf
in
fimuls
mov
das
inc
inc
jne
mov
add
mov
jno
sub
neg
outsb
or
push
mov
dec
inc
in
gs
dec
xor
inc
outsl
fldcw
pop
pop
push
aas
mov
cld
adc
sbb
xor
add
decl
add
stos
add
dec
add
mov
pop
ror
std
in
decb
and
test
add
add
add
xchg
ret
loopne
jl
call
std
lret
mov
cmpsl
add
dec
mov
mov
mov
scas
shll
pop
inc
lea
and
xchg
add
pusha
pop
xchg
fbstp
lock
hlt
int3
mov
add
mov
ret
or
add
cmc
or
clc
add
mov
or
in
add
add
add
add
push
fidivl
add
cmp
repz
add
test
mov
mov
add
clc
lea
adc
fsub
outsl
lods
jg
int
sbb
xchg
add
setb
push
rolb
outsl
fstpt
or
cmpsb
adc
jae
mov
add
jmp
add
and
sbb
add
inc
adc
ljmp
js
add
inc
pop
inc
add
nop
push
pop
add
mov
jbe
das
push
rolb
out
js
sbb
add
add
fmull
dec
pop
sub
and
fs
test
fstpt
add
mov
adc
stos
cmp
adc
mov
nop
ret
int
adc
fistpl
dec
mov
movsl
lea
adc
add
rcll
frstpm(287
repz
std
push
ret
add
add
mov
jbe
cmp
rep
push
mov
dec
jl
in
insb
pop
add
lea
inc
adc
lea
jne
lea
repnz
or
jge
pop
outsl
lods
movsl
in
xchg
xchg
sbb
xchg
test
out
testb
cmp
add
out
inc
xchg
pop
sbb
jae
add
add
nop
add
or
or
imul
bound
je
ret
int
jno
leave
mov
cmp
sti
lods
pop
pushf
jns
add
mov
ja
adc
mov
pusha
inc
add
stc
das
fbstp
mov
adc
and
jb
ja
and
insl
popa
and
insl
sub
pop
sub
inc
mov
push
mov
test
push
jns
xchg
cwtl
test
inc
mov
adc
cmpsb
mov
fstpt
subb
or
push
adc
pop
fdivrs
rcrb
fdivrp
push
dec
push
mov
pop
xchg
test
lock
add
mov
mov
les
or
mov
xchg
pop
add
or
cmp
lahf
out
and
jle
pop
jecxz
jae
push
nop
xor
jae
scas
add
in
sbb
adc
adc
jmp
jecxz
add
mov
and
lea
sub
jo
mov
mov
notl
dec
outsl
cmp
and
test
andb
push
xchg
movsl
aas
std
outsl
push
pushf
or
push
push
pop
outsb
inc
sbb
into
and
and
jle
fcmovne
and
jbe
xor
sbbl
cmc
jecxz
mov
fdivrp
mov
ss
add
in
push
popf
or
ljmp
stos
loop
mov
jl
fs
or
xor
xchg
fidivrl
xorl
test
or
add
push
xchg
inc
mov
pause
outsl
mov
adc
xor
shl
sahf
ljmp
sbb
add
mov
test
pop
sub
fwait
outsb
lea
xchg
push
xchg
aam
adc
arpl
ljmp
std
addb
cwtl
push
leave
push
mov
xchg
pop
fcomip
cmpsb
mov
xchg
outsb
incl
add
push
or
mov
fstpt
ficoms
lret
ss
pop
sbb
stos
jge
in
inc
pushf
daa
mov
addr16
fs
jl,pn
lcall
xchg
test
mov
mov
mov
hlt
add
xor
xchg
mov
insb
cltd
rcrl
xlat
sub
cld
jp
fildll
out
add
insl
add
add
inc
mov
pop
mov
pop
js
cli
push
test
aam
push
addr16
es
add
std
aaa
sbb
cmpsl
gs
sbb
sbb
dec
outsl
sbb
call
or
je
aam
push
sbb
cmc
adc
leave
fstps
jne
stc
lds
cmp
adc
in
insl
ret
jnp
pop
mov
jbe
push
pop
fdivs
out
jo
les
rep
movsl
inc
xor
sbb
push
rol
mov
xchg
push
pop
jb
movsl
ret
jmp
rcrb
addl
popa
popf
xchg
push
add
lret
pushf
loop
addb
inc
stos
lds
test
xlat
test
lcall
push
lahf
add
lea
mov
ljmp
add
add
fwait
loop
jno
jge
stos
sub
das
sub
outsb
out
mov
rorb
fs
mov
mov
adc
push
pop
mov
sub
lock
or
ljmp
mov
pusha
fcmovnu
rorb
and
int
pop
xor
iret
pop
pop
fmuls
xchg
inc
mov
les
or
fbstp
jno
cmp
rorl
sbb
imulb
popa
push
out
xor
xorl
movsl
in
movsb
mov
test
inc
mov
dec
sbb
jl
cmp
jge
add
fistps
jb
fadds
mov
ja
push
lea
push
in
lea
stc
mov
divb
fstl
outsb
jmp
mov
push
fucomi
jecxz
hlt
das
jge
and
shll
fcoml
shl
fdivrs
inc
jecxz
je
insl
les
xor
ffreep
lods
lea
fcomp
xor
mov
push
xchg
add
inc
dec
pop
js
mov
jae
outsb
mov
outsb
and
jnp
addl
arpl
mov
or
or
ret
and
jmp
inc
arpl
dec
and
inc
out
outsb
inc
pop
sub
cmp
lahf
cld
pop
dec
imull
out
and
xor
xor
daa
pop
ja
sbbl
mov
aaa
pop
dec
lret
or
or
rcrl
mov
jb
ljmp
ss
sub
aam
inc
mov
ret
leave
push
imul
scas
mov
lea
lock
cmc
shrl
ret
sub
xlat
pop
jmp
cwtl
test
test
dec
lods
jne
ror
sarl
loope
ljmp
shrl
je
into
test
cmp
out
mov
mull
mov
test
imul
ss
roll
dec
mov
les
lea
jp
loope
mov
xchg
outsb
fldt
add
in
scas
pop
ret
ss
or
jo
jnp
push
insb
mov
shll
in
xchg
call
add
cmc
jecxz
pop
arpl
dec
addr16
pop
ret
insb
es
cmpb
lret
test
jne
add
subb
adc
jne
das
cld
in
ret
xor
aad
jmp
pop
mov
fsts
loopne
pop
pop
jbe
jno
in
into
adc
mov
test
xchg
mov
and
mov
inc
adc
sub
push
push
roll
push
xor
flds
and
add
movsl
popa
or
shll
mov
lods
fbstp
into
mov
adc
repz
xor
out
outsl
pusha
cmp
iret
repz
cmpsb
adc
sbb
jmp
xchg
nop
cmc
dec
add
loope
ret
sub
xor
jle
leave
and
loop
pop
cwtl
bound
mov
dec
dec
mov
test
mov
xchg
test
adc
pop
xor
fcmovb
jl
mov
sbb
insb
or
push
sub
sahf
mov
fisttps
xor
lods
sbb
repnz
or
negb
adc
out
jge
repnz
ret
insb
cmp
xor
mov
push
loop
push
pop
fcomp
lcall
js
add
push
mov
pop
xorl
test
movsl
mov
jg
cmp
test
fistl
call
lds
les
mov
movsl
lret
pusha
lds
sbb
out
jle
jecxz
mov
test
and
mov
in
or
bound
sbb
adc
push
hlt
or
fistpll
dec
jb
out
jno
popa
inc
insb
push
sarl
ret
cld
push
push
and
nop
pop
inc
jo
lea
or
xor
cmp
rclb
inc
shlb
and
mov
js
sbb
aaa
in
fdivs
mov
pop
ss
mov
xchg
lea
repnz
loope
push
jmp
shlb
push
mov
imul
das
fcompl
or
icebp
test
jns
cmp
jecxz
fadds
into
pop
or
push
sbb
mov
jnp
mov
out
dec
fildl
sti
cmp
inc
jnp
pop
in
sbb
cltd
adc
or
mov
inc
pop
sbb
push
mov
adc
adc
mov
inc
mov
cmp
xor
test
cmp
sub
nop
jnp
insl
adcl
in
or
mov
test
insl
inc
shlb
loop
jle
add
or
sub
fcomip
daa
rol
mov
shlb
mov
fadd
add
dec
adc
icebp
pop
push
xchg
push
xchg
lcall
mov
push
call
or
lea
sub
dec
nop
mov
div
jns
test
sub
cli
pop
dec
test
insb
jg
mov
mov
rcrb
das
jno
inc
push
daa
pop
and
adc
aas
jp
js
pop
mov
pop
lods
stc
sub
outsl
fisttpl
shrl
insl
lea
mov
js
jbe
mov
pop
adc
mov
mov
mov
mov
or
lock
adc
or
mov
outsl
in
mov
cmc
lods
iret
sbb
push
sub
cmp
pop
inc
add
or
fildll
jne
aaa
adc
or
pop
pop
add
je
bound
lods
add
jno
xchg
mov
push
and
pop
pop
and
cmpl
xchg
test
and
pusha
and
sbb
test
in
adc
xor
jb
fisubrs
dec
cmp
sbb
or
mov
push
and
in
jmp
cld
addr16
jae
cmpsb
aam
pusha
dec
in
call
add
cld
xchg
cmp
jle
out
sbb
push
adc
xor
call
clc
jmp
sbb
or
fidivrl
imul
add
aaa
push
push
enter
testb
fisttpl
into
in
pusha
jns
dec
mov
mov
adc
rolb
in
push
dec
mov
in
or
insl
xchg
mov
popa
sbb
ret
mov
push
pop
xor
mov
test
icebp
jne
clc
sub
sub
mov
jmp
pop
shlb
call
cmp
ficoml
add
cmp
fcmovnbe
inc
arpl
mov
movsb
inc
jmp
mov
mov
test
inc
xor
ljmp
or
inc
test
push
inc
pusha
insl
jnp
insl
adc
stos
or
xchg
push
add
mov
sbb
inc
out
cs
outsb
push
icebp
cmpl
imul
cwtl
outsl
call
xchg
xchg
out
rol
loopne
loope
adcb
imul
fnstenv
mov
add
pop
imul
test
jl
adc
push
add
nop
mov
mov
mov
loopne
or
lods
test
and
jo
dec
push
pop
outsb
pusha
sti
dec
out
pop
cmp
adc
mov
xor
add
inc
dec
popa
xchg
data16
push
sbb
rcrb
mov
fistl
gs
in
sbb
aaa
xchg
mov
shlb
mov
inc
aad
xorl
cmp
mov
adc
aas
cltd
cld
outsb
pop
ficoml
ljmp
push
jb
call
aaa
or
push
leave
mov
ret
popa
je
fstpl
addb
stc
xchg
fsubrs
adc
pop
xlat
mov
movsl
shl
mull
jp
push
push
lahf
push
dec
pop
repz
add
adc
pop
fldl
push
xchg
or
insb
adc
loope
inc
inc
add
iret
mov
outsb
ret
lea
jo
out
inc
arpl
cmpsb
fwait
sbbl
push
pop
data16
add
cld
push
cmp
clc
fcmovnb
mov
pop
sub
dec
lds
inc
in
inc
jecxz
adc
psubsw
sti
cmpsb
out
cmpsb
test
notb
sub
jo
insl
call
enter
jle
ret
xchg
add
or
fcmovnu
mov
pop
aas
push
mov
inc
mov
and
in
stos
mov
orb
mov
inc
arpl
dec
cld
aaa
nop
rcll
fisttpl
stos
pop
rcr
int3
inc
dec
add
mov
dec
sbb
dec
pop
jg
inc
add
ss
fld
sarl
mov
push
dec
idivb
xchg
leave
pop
clc
in
inc
enter
dec
dec
mov
movsb
movsl
mov
pop
sub
rcrb
addr16
insl
or
lock
pop
add
fdivs
push
loopne
cwtl
xchg
xchg
pusha
mov
movsl
fisttps
push
and
lds
mov
xor
pusha
mov
js
mov
jno
arpl
repz
mov
sbb
adc
xchg
loop
test
sub
imul
push
lret
cmc
jp
into
leave
add
dec
decl
lahf
push
sub
pop
clc
aas
rcrl
push
test
shlb
pop
mov
movsl
lods
mov
jge
pop
ret
lods
in
ret
sub
push
dec
cmp
or
push
enter
gs
movsb
adc
inc
jmp
popa
imul
mov
fdivrl
lock
mov
pop
inc
inc
aad
pop
push
xlat
inc
jmp
pop
sbb
pushf
mov
push
or
movsl
cmp
aam
pusha
jo
cmc
push
adc
mov
or
test
mov
les
mov
jp
pop
sti
shll
orb
xorb
sub
enter
out
stos
xchg
movsb
xchg
add
xchg
scas
call
ds
pop
insl
das
mov
add
mov
cmc
mov
jo
jge
das
push
and
mov
out
sti
insl
fisttpl
ret
cmpsl
out
add
movsl
mov
dec
scas
inc
fimuls
lahf
mov
movsl
testb
push
iret
outsb
mov
in
sbb
xor
insl
sti
mov
and
mov
jle
xor
xchg
pop
push
pop
sbb
or
ss
loope
pmaxub
test
xor
ljmp
jb
push
mov
pop
cs
jb
mov
pop
push
call
fadd
cli
or
in
das
sub
jno
repnz
push
inc
fisubrl
mov
cltd
pop
mov
leave
inc
xchg
loope
sub
movsl
cltd
clc
mov
inc
xchg
test
jo
imul
ret
mov
repnz
mov
fistpll
ss
ret
push
in
fistl
jo
sbb
mov
mov
icebp
outsb
xor
mov
ret
dec
aas
xor
xor
cli
add
mov
add
xchg
push
aas
sbb
lods
dec
mov
stos
mov
stos
pop
dec
adc
aas
push
fldz
xor
cli
lods
inc
out
lods
testb
adc
cmp
sbb
andl
inc
xchg
pop
repz
clc
stos
adcl
push
sub
cmp
ljmp
stos
pop
jg
jle
in
iret
cmp
ljmp
push
fs
lcall
jns
jmp
fldl
das
inc
inc
cmc
and
lods
mov
fstps
mov
adc
add
mov
cltd
mov
add
cmp
push
mov
xchg
pop
mov
mov
call
out
mov
mov
test
cmp
sbb
hlt
mov
cli
jle
fcomps
mov
dec
repz
and
jnp
and
or
ret
dec
inc
or
mov
jg
mov
outsl
sub
xor
orb
xchg
pop
mov
je
fsub
loope
sub
mov
ss
je
cmc
enter
adc
ss
xor
ret
ret
push
cmp
imul
sbb
push
ss
cmp
cmc
fidivrl
call
das
mov
ret
and
jl
mov
in
push
int
into
adc
mov
jne
out
int3
scas
push
pop
jle
inc
mov
sub
aas
jae
outsl
nop
rcrb
xchg
mov
push
jbe
push
ret
cld
pop
pushf
adc
xchg
push
pop
testl
lods
in
loop
mov
cmp
test
das
cld
rcll
xor
xor
push
insb
shll
inc
inc
jne
pop
clc
sbbb
test
jno
out
icebp
in
mov
jne
pop
loopne
cli
add
sub
int
insb
out
pop
inc
mov
das
std
fcmovnbe
jmp
jns
imul
jecxz
movsl
in
mov
push
adc
incl
aas
jo
flds
aaa
add
rcrb
popf
imul
and
sbb
sahf
iret
inc
inc
add
jbe
adcl
sbb
and
push
sub
mov
add
push
mov
clc
push
rcl
fcmovnbe
lods
push
lret
sub
mov
lods
pop
jnp
and
mov
popa
loope
xchg
xchg
aas
inc
hlt
mov
clc
in
fucomi
test
imul
push
add
or
lcall
sbb
jl
cmp
dec
loope
test
mov
mov
push
inc
and
sti
sbb
std
cmp
in
punpckhwd
out
pop
jo
icebp
das
sub
gs
aaa
pop
sbb
mov
mov
repz
mov
in
or
adc
mov
ss
sbb
dec
cli
arpl
daa
push
popa
imul
xchg
xchg
pop
xorb
test
popa
aas
int
pop
push
cmp
outsl
jl
and
sbb
mov
ret
test
cld
cmpl
sub
popa
pop
fcoms
shl
loop
mov
jo
mov
movsl
cltd
stos
xlat
cmp
dec
sbb
adc
fbstp
jmp
clc
dec
cmp
test
add
popa
mov
lret
push
xor
nop
popa
data16
cltd
adc
pop
in
shlb
test
std
fs
cs
mov
cli
fisttpl
mov
pop
clc
mov
push
fisttpll
int
or
and
mov
fucomp
jno
out
test
les
jmp
cltd
adc
loopne
aam
mov
push
mov
or
loopne
jo
cli
sbb
jns
sar
adc
inc
stc
mov
rcl
roll
js,pt
push
mov
aas
lret
mov
fstpl
mov
or
lods
jne
int3
jg
test
and
or
test
popf
push
clc
push
ret
fnstcw
int
and
adc
mov
sbb
in
jb
cld
mov
or
out
push
cmp
sbb
jno
lcall
mov
mov
movsl
insl
sbb
into
popf
sub
fisttps
jb
mov
outsb
push
arpl
ljmp
loop
dec
xchg
sarl
or
ds
mov
in
fimull
dec
add
cmp
fwait
push
fsubrs
insb
mov
sub
sub
in
dec
lcall
dec
pop
adc
xchg
adcl
mov
inc
jo
sub
fcoms
xchg
mov
outsb
call
es
dec
sbb
sbb
dec
xor
cld
push
mov
cld
lods
js
movb
out
les
cmp
insl
jmp
cmpb
repz
fistps
inc
insb
loope
mov
or
dec
sub
imul
in
mulb
sbbb
ret
xchg
mov
pop
mov
ds
add
jecxz
sub
fisttpll
and
sub
es
push
insb
fiaddl
sub
pop
shlb
xorb
js
jmp
ret
mov
ret
pop
subb
mov
mulb
leave
daa
lods
jmp
cwtl
jmp
sti
or
mov
xchg
sbb
icebp
enter
ret
mov
fwait
insl
insb
insb
xchg
out
add
mov
loopne
and
sub
inc
addl
and
pop
gs
shlb
mov
ja
in
out
xor
cmp
incl
adc
or
shll
sbb
fbstp
lock
out
cmpsl
mov
mov
test
push
add
pushf
or
jb
sbb
aaa
outsb
xor
and
lods
leave
dec
xchg
aas
hlt
sbb
bnd
sbb
push
or
jecxz
xchg
adc
rclb
into
push
xlat
leave
pop
mov
cmp
movsl
fildl
lret
loop
push
repnz
insb
fildl
dec
and
lcall
lahf
and
inc
or
leave
ds
push
or
jg
and
mov
into
and
xor
mov
xchg
dec
subb
gs
sbb
adc
in
bound
sbb
cmc
ret
xchg
in
icebp
scas
loope
cli
call
js
xchg
xchg
push
and
lea
lock
mov
jmp
nop
xor
jp
insl
mov
aas
add
in
pop
push
sarb
xchg
test
testl
mov
inc
inc
xor
cmp
add
sbb
adc
pop
outsb
mov
js
or
sub
xchg
jecxz,pn
push
test
ja
sub
dec
mov
imul
inc
cwtl
pop
loope
loope
lret
mov
cmp
rcrl
fimull
dec
and
lcall
jo
call
and
nop
xchg
pop
cld
imul
jp
in
pusha
fidivrl
or
in
pop
out
jb
dec
fmul
dec
sub
push
daa
mov
sbb
inc
fildl
push
fwait
jg
mov
jle
mov
push
or
lea
mov
mov
dec
into
sbb
pop
push
sbb
lds
int3
imul
cmpb
xchg
xchg
jl
xor
in
mov
cmpsl
and
xchg
jg
dec
add
pop
dec
and
mov
push
dec
adc
inc
mov
inc
fs
dec
cmpsb
test
mov
pop
push
sarl
push
xchg
lods
les
mov
outsl
movsl
clc
shlb
cmpsl
incb
xchg
cmpl
jle
aam
popf
aad
mov
sti
outsb
push
addl
pop
mov
jmp
fdivr
or
dec
cmp
or
fisttps
xchg
sub
lods
aas
hlt
test
dec
push
jg
sbb
xchg
cmpsl
in
idivl
push
rcrb
lret
in
or
test
pop
xor
adc
sbb
push
out
sbb
jno
or
pushf
and
jmp
pop
inc
shl
fildl
les
out
std
out
rcr
jb
cmc
int
in
mov
loopne
xor
cwtl
pop
pop
cmp
xor
inc
push
pop
std
jge
ficompl
clc
jg
dec
jmp
cmp
movsl
xchg
cmp
iret
jg
test
inc
fsubr
sub
xchg
and
mov
pop
repnz
mov
push
fcompl
add
inc
push
in
xchg
xchg
jbe
out
xor
scas
push
int
neg
mov
daa
pop
loop
mov
nop
testb
inc
push
rcll
add
mov
push
mov
leave
inc
adc
mov
outsb
lods
add
pop
rorl
inc
popa
inc
add
pop
call
jecxz
movsl
stos
cmp
les
in
or
mov
in
mov
cmpsb
int3
cmc
aad
repz
push
jecxz
ffree
jg
add
jae
dec
mov
cmc
mov
loopne
lret
nop
xor
arpl
pop
jnp
push
dec
push
loopne
insl
mov
jl
ds
inc
sarl
incb
js
outsb
or
dec
lea
movsl
mov
xor
xchg
xor
mov
add
sbb
mov
insb
in
int
push
add
and
out
shr
pop
add
and
cwtl
fs
dec
sub
add
sarb
into
in
decl
aam
or
xchg
xchg
fmull
fisubl
add
ret
or
sti
les
mov
or
jg
xlat
outsl
cmp
xchg
xor
push
add
xchg
mov
int
mov
icebp
adc
cmp
xor
hlt
rorl
dec
cld
lods
lea
filds
jmp
mov
sbb
in
insl
mov
xor
aaa
mov
lods
subl
sub
loopne
jmp
inc
loop
xlat
je
or
stos
mov
jecxz
ret
add
xchg
insb
xor
lds
or
ret
push
sbb
imul
xchg
jbe
mov
sti
push
clc
mov
adc
pop
adc
jae
enter
jg
pop
in
pop
adc
and
arpl
xor
js
mov
cld
out
and
pop
mov
push
test
hlt
pop
addl
push
sbb
aaa
or
bound
mov
pop
sbb
push
pop
or
push
loopne
lds
mulb
int3
out
outsb
icebp
movl
add
pop
mov
dec
pusha
stos
outsl
jbe
mov
out
loop
js
lods
mov
outsb
push
and
call
mov
adc
lahf
cmpsl
pop
mov
mov
shlb
ret
pop
out
sbb
jp
scas
or
cmc
or
lods
xor
outsb
pusha
hlt
or
movsl
fcoms
jle
xor
scas
lods
scas
movsl
xchg
fst
push
cld
jns
insb
push
jae
push
xchg
int
inc
or
fdivs
adc
outsb
mov
int3
je
or
sahf
or
cmp
call
fimuls
xchg
sub
and
sub
mov
pop
xchg
aas
pop
addr16
pop
mov
adc
sarl
loopne
fwait
mov
stos
or
outsl
enter
adc
push
sub
or
test
ret
dec
loop,pt
sahf
lock
outsl
decl
push
movsb
xor
popa
pusha
jp
cld
fimull
mov
mov
push
test
shrl
mov
mov
fistpl
mov
adc
xchg
cld
dec
pop
pop
mov
nop
addb
fldt
test
lds
pop
sub
or
aad
ret
pop
dec
pop
adc
and
xor
test
mov
push
cltd
push
sbb
push
ret
dec
xchg
in
sub
mov
fidivs
jecxz
stc
mov
call
movsl
cmp
pop
rcr
dec
push
push
fstp
movsl
fs
inc
repz
into
xchg
cmp
push
test
scas
sar
test
pop
cmpsb
push
test
add
inc
insl
in
pushf
clc
mov
lock
mov
aaa
mov
rorl
and
jbe
pop
out
das
insb
sbb
add
cmpl
out
ret
pushf
dec
adc
pop
mov
movsl
fistpll
xchg
xrelease
jne
test
xchg
dec
jg
mov
addr16
test
js
ss
sbb
add
xchg
mov
cmpsb
pop
loop
push
aas
in
cmp
sub
dec
std
push
scas
mov
xor
or
pop
cmp
push
and
cmp
xchg
inc
fucomip
dec
nop
jle
test
inc
sub
pop
inc
xchg
stos
mov
pop
cmp
clc
fdivs
lcall
mov
adc
enter
mov
mov
jl
int3
adc
and
inc
std
aaa
nop
inc
insb
cld
fstl
push
into
xchg
fisttps
adc
lcall
imul
add
sbbl
inc
sbb
scas
pop
pop
int3
cmp
push
bound
fisttps
cmp
fidivrl
repnz
jne
dec
pop
push
movsl
in
jb
and
in
mov
imul
sbb
xchg
lret
insb
ret
test
in
adcb
out
scas
fs
sbb
cmc
insl
mov
nop
adc
decl
pop
mov
lret
sbbb
xor
dec
icebp
rolb
in
sarl
std
mov
push
mov
test
sahf
or
je
add
push
push
dec
xchg
outsb
in
cli
fs
ja
in
loopne
jecxz
inc
push
fstl
aad
ficoml
cltd
add
push
sbb
iret
xchg
lcall
pop
dec
add
add
add
xchg
pop
or
fs
popf
jb
pop
fistps
in
fbstp
jb
orb
call
ljmp
imulb
daa
cmp
adc
sbb
scas
outsb
scas
xor
hlt
mov
rcrb
iret
ljmpw
pop
add
cmpsb
mov
push
xor
sti
adc
push
rclb
and
lock
inc
or
mov
adc
sti
inc
xchg
out
cmc
cmp
cmpsb
movsl
add
and
inc
dec
ljmp
into
jp
sarb
mov
mov
dec
std
rclb
test
or
jae
bound
repz
inc
jnp
subb
xchg
cmp
mov
push
push
pop
sahf
js
and
lea
add
sub
cmp
in
fldt
mov
dec
fildl
fcmovnb
scas
aaa
sbb
mov
dec
rolb
adc
mov
xor
insl
imul
mov
addr16
ja
ret
icebp
testb
iret
fnstcw
cmc
adc
cltd
stc
sub
cwtl
push
lret
lahf
dec
inc
gs
decb
jl
adc
mov
or
iret
clc
push
mov
cmp
and
and
nop
mov
outsl
pop
insb
fdivrs
push
or
mov
add
adc
pop
out
ja
shll
mov
jl
mov
cmc
divb
xchg
inc
sub
cmpsl
negl
jne
pop
fmuls
xor
and
das
insb
ficompl
inc
jmp
sub
pop
mov
enter
sub
popf
push
ljmp
mov
bound
nop
push
mov
push
fcomps
imul
inc
mov
scas
mov
sub
rolb
mov
push
xchg
cmpsb
or
mov
mov
in
lds
and
jmp
add
pop
jg
pop
push
rclb
pop
sbb
inc
movsl
frstor
lods
std
push
out
js
roll
and
push
fdivs
lcall
mov
addr16
jnp
rcrb
sarl
mov
cld
leave
xor
mov
outsb
outsb
mov
ret
jbe
jle
dec
test
sbb
mov
or
loopne
sar
pushf
js
sbb
cltd
sbb
aaa
rcrl
lcall
ret
lock
xchg
mov
mov
cmp
fldt
cmp
mov
adc
in
push
insl
cmpsb
leave
je
pop
mov
ds
pop
jl
in
pushl
cmp
xor
mov
mov
sub
pop
adc
lods
dec
pop
outsb
aam
sub
inc
pop
or
hlt
lea
push
xchg
cmp
scas
mov
fldt
jbe
inc
sbb
xchg
inc
in
jns
jae
fnstenv
jbe
pop
scas
dec
scas
jnp
dec
and
call
fs
mov
jmp
push
add
sbb
inc
cmc
adc
ss
ljmp
mov
test
sbb
negl
mov
xor
shld
aad
repnz
ret
cmp
adc
das
or
add
xchg
mov
repnz
add
push
push
push
incl
lahf
and
out
push
sbb
loop
adc
daa
call
mov
mov
push
adc
mov
xchg
adc
jle
dec
mov
push
push
arpl
ljmp
adc
or
jmp
jle
test
mov
dec
fiaddl
mov
mov
incb
cs
cmpsl
clc
nop
inc
push
icebp
pop
jp
or
push
pop
js
mov
movsl
outsl
mov
aas
in
je
adc
sbb
xor
sub
or
push
sbb
jmp
inc
aaa
mov
fistps
testl
jnp
mov
fidivs
and
in
hlt
pushl
lret
jle
call
imull
xor
lock
test
or
std
jmp
and
and
outsl
jno
dec
and
inc
sub
out
sbbb
into
mov
loopne
movsl
jae
jo
push
dec
mov
in
sbb
into
pop
imul
xor
mov
mov
push
ficoms
scas
inc
xor
mov
mov
enter
or
sbb
pop
mov
inc
xchg
popl
movsl
mov
cmp
in
aam
jne
lea
mov
sub
rol
mov
lret
sahf
or
out
sbbl
incl
xchg
sbb
mov
cs
xor
xchg
leave
sbb
ljmp
sub
push
incb
int
inc
mov
arpl
nop
rclb
lea
jo
dec
mov
clts
in
dec
lods
test
inc
in
pop
sti
test
in
jl
rolb
xor
js
inc
xchg
push
push
mov
insb
pop
clc
xor
mov
sbb
mov
pop
stos
js
mov
sarb
pushf
ret
repz
hlt
pop
cli
mov
push
cmp
jp
dec
dec
fwait
lods
jecxz
aas
mov
and
mov
inc
inc
addl
das
dec
outsl
pop
clc
ds
adc
adc
roll
imul
ret
dec
scas
or
sti
or
push
std
mov
popa
xchg
inc
int3
cwtl
cmc
roll
outsb
fistpll
sbb
xchg
imul
cs
adc
aad
ja
jmp
jg
cmc
loope,pt
cmp
dec
xchg
dec
xor
add
mov
cmpsb
add
cmp
mov
iret
mov
cld
js
fcomps
adc
outsl
in
sbb
pop
inc
mov
jbe
inc
xchg
push
push
or
clc
mov
add
ret
ss
jge
loopne
clc
inc
pop
mov
pop
mov
btc
test
pop
and
jnp
mov
stc
sbb
scas
dec
into
pop
fsubr
pusha
mov
in
xchg
jl
cmpsl
in
sub
push
out
rorb
lods
mov
fimuls
adc
insb
adc
mov
pop
xlat
xor
mov
jo
push
and
sti
sub
lods
or
outsl
push
dec
in
or
push
push
mov
pusha
and
mov
sbb
je
fs
ret
jg
imul
jl
xor
out
push
cld
sbb
in
push
ficoms
test
mov
mov
pop
fmul
or
mov
in
sbb
stos
into
push
bound
xor
sub
ljmp
enter
into
xchg
sub
lods
jge
and
repnz
ret
cmpsb
adc
jle
jne
inc
in
outsb
test
or
fcmovbe
or
scas
jne
mov
js
inc
jbe
push
xorb
sti
push
push
sbbb
pop
sub
xchg
icebp
std
xor
sbb
pop
mov
movsb
repnz
andl
aaa
adc
jbe
repnz
mov
sub
or
or
or
std
adc
int
cmpsb
push
dec
dec
or
ja
outsl
test
xor
jbe
add
and
shlb
rorb
cli
ret
push
das
jl
mov
add
lret
je
sbb
sub
cmpsb
mov
inc
sub
or
fnstsw
push
and
cld
dec
push
loopne
jmp
fidivs
add
push
pop
in
push
inc
loopne
dec
outsl
sbb
jl
jbe
inc
mov
in
mov
pop
popa
pop
inc
mov
mov
push
push
adc
pop
dec
test
pop
xchg
std
sub
in
rorb
nop
dec
jmp
leave
fucomip
and
out
js
dec
icebp
or
cmp
jnp
adc
adc
xorb
shrd
xor
xchg
fmulp
lds
outsb
cmp
lods
rcl
das
sarb
pop
pop
jns
jle
outsb
sbb
pop
mov
mov
js
call
inc
lcall
mov
dec
sub
and
js
xchg
fsubrl
bound
popa
push
idivb
adc
stos
pop
daa
adc
pop
pop
sub
push
data16
push
xchg
subl
hlt
js
int
add
jo
or
and
hlt
in
lods
cli
outsl
adc
or
lcall
lds
pop
sti
faddl
pop
sahf
cmp
mov
pusha
cmp
jo
push
fadds
mov
rcrb
outsl
loop
aas
repz
mov
sub
mov
lods
sahf
cmp
inc
fimuls
out
inc
loop
es
insl
test
insb
adc
pop
mov
cmc
pop
push
sub
int3
mov
lds
hlt
repz
adc
dec
pop
jp
dec
sti
xor
sub
loope
repnz
shrl
fiaddl
jns
add
xchg
push
mov
into
imul
and
clc
movsl
xchg
je
pop
addl
mov
es
and
mov
sub
out
repnz
jp
imul
in
incl
mov
xchg
test
call
outsb
out
sti
outsl
jmp
sbb
and
mov
pop
lahf
cmpb
lds
mov
ret
mov
mov
shrb
push
xchg
and
out
mov
mov
outsl
add
icebp
push
je
jge
sub
mov
fs
jb
inc
or
in
pop
push
or
xchg
bnd
fstps
xor
pop
mov
faddp
iret
and
adc
in
pop
das
add
jno
pushf
pop
icebp
stos
cmp
cld
es
stos
stos
mov
cli
mov
push
ss
int3
testb
xchg
test
flds
pop
out
repz
dec
pop
adc
mov
sub
pop
insl
stos
ret
jecxz
jl
clc
cmp
sbb
xchg
cltd
inc
pop
and
inc
das
adc
cmpsl
das
popa
loop
jle
das
cwtl
lahf
add
dec
jecxz,pn
push
lods
lods
or
add
aaa
sbb
push
xchg
loope
jp
xor
lods
mov
mov
pop
jge
fldl
cwtl
inc
inc
jne
lds
or
jp
clc
aaa
jle
mov
cmp
mov
jp
rcrl
rolb
test
cltd
mov
test
mov
in
nop
daa
or
ss
outsl
idiv
insl
sub
push
xchg
and
xchg
adc
xor
aad
test
fdivr
idiv
or
mov
mov
jno
mov
jnp
inc
pop
data16
mov
fidivl
adc
sbb
out
popf
mov
push
dec
loopne
movsl
lret
shl
add
mov
mov
mov
ds
and
jmp
and
nop
arpl
ljmp
xor
loope
cmp
push
jp
enter
cs
mov
loop
jle
pop
arpl
ja
fisubrl
cld
or
sub
popa
repz
mull
daa
inc
fistpll
sbb
xor
aaa
stos
cmp
mov
inc
insb
icebp
mov
and
dec
or
xor
sbb
mov
sbb
movsb
cmp
add
nop
ljmp
dec
js
and
outsl
fmull
mov
roll
stc
lods
cmpl
cs
pusha
cmp
addb
pop
or
xchg
lods
js
loope
fldl
std
adc
cmp
and
jle
jg
push
aaa
add
sub
or
lds
push
xor
push
jg
mov
xchg
jb
xabort
ja
add
sbb
xlat
lods
add
lock
jle
pusha
mov
mov
ret
xchg
pop
outsl
mov
cmp
inc
or
xchg
ror
cmp
cmpb
adc
bound
nop
push
aaa
pop
test
inc
and
inc
test
xor
mov
sbb
repnz
jmp
or
push
inc
icebp
mov
xor
cmp
push
pop
xchg
popa
frstor
pop
loopne
insl
push
inc
jns
cltd
out
or
bound
push
fwait
imul
mov
pop
ficoml
push
cmp
mov
mov
jns
xchg
jne
movsl
dec
xchg
sub
dec
sti
cli
cmpsl
outsb
outsl
push
pop
out
mov
inc
dec
movl
xchg
lcall
xor
sub
popa
inc
mov
jg
push
shl
dec
je
cmc
sahf
pop
insb
dec
shll
push
out
clc
push
dec
jmp
arpl
mov
mov
and
leave
sbb
fistl
pop
and
cld
pop
inc
push
lds
inc
push
add
cmovl
xchg
inc
mov
rcll
ja
sub
flds
mov
sbb
pop
call
clc
mov
add
ss
pop
xchg
bound
xchg
push
add
xorb
dec
push
clc
ret
sbb
jl
jo
test
add
mov
inc
cli
jmp
rcrl
cmpsb
call
xchg
test
shrl
mov
or
sub
loopne
lock
mov
shll
mov
inc
xchg
inc
push
ds
test
inc
jle
sub
mov
and
test
adc
pop
mov
push
mov
or
imul
pop
loop
mov
pop
or
jge
leave
imul
mov
mov
pushf
lods
dec
data16
aaa
or
fistps
pop
lock
push
cld
aam
inc
xor
add
xor
add
and
mov
lods
leave
sub
cs
das
sbb
daa
popa
xor
pop
fsubs
dec
pop
stos
cs
ljmp
fcmovb
inc
mov
js
mov
sub
out
xchg
roll
lock
xchg
leave
push
mov
sbb
and
movsl
mov
jbe
sub
mov
push
add
int3
sbb
loop
xchg
add
pop
mov
jle
mov
mov
sbb
shlb
stos
sbb
push
lahf
cmp
xchg
mov
push
lret
and
hlt
cs
test
clc
loopne
test
xor
mov
mov
jnp
jge
subb
mov
fmul
les
mov
inc
aam
fwait
ljmp
shr
fiadds
mov
fs
ss
jle
push
outsl
jmp
loopne
fidivl
push
pusha
adc
sbb
mov
fcmovb
sbb
lods
push
daa
loop
mov
xor
shrl
insl
hlt
sbb
sub
call
fwait
cli
xchg
aad
or
negl
adc
dec
mov
inc
pop
scas
cltd
sbbb
int
test
push
sub
icebp
add
int3
mov
pop
push
push
cmp
mov
jmp
push
je
push
or
pop
push
mov
and
loopne
xor
imul
mov
jns
or
das
test
dec
pop
out
jp
mov
push
imul
stos
js
lea
std
das
je
adc
and
jmp
mov
lret
pushl
xor
add
cmpb
shlb
push
push
mov
jo
fisubrs
adc
mov
or
pop
mov
fldenv
test
or
mov
push
in
sub
xchg
stc
dec
jnp
addb
insl
sbb
push
test
sbb
adc
dec
aaa
pop
mov
mov
fsubs
subb
repnz
icebp
outsl
mov
push
adc
arpl
cmp
popf
or
outsl
mov
fcmove
div
cmpl
mov
and
add
stos
into
ljmp
stos
pop
pop
pop
push
sub
add
sub
imul
pop
mov
pop
cmp
xor
div
outsl
les
sub
test
mov
and
xchg
mov
test
std
daa
and
leave
lahf
stos
cwtl
movsb
loopne
out
sub
rorl
adc
add
push
mov
xchg
leave
imul
xlat
outsl
push
inc
and
sub
nop
std
and
scas
aam
or
mov
enter
fwait
xor
call
add
mov
movsb
inc
loop
add
dec
pop
mov
xchg
cs
rcrb
ljmp
cli
enter
dec
dec
mov
dec
jb
or
aad
orl
pop
in
cmp
outsl
ljmp
and
ja
insl
loope
cld
dec
insb
mov
xchg
sub
lods
rcr
cli
push
fcomi
mov
inc
lret
cli
add
rcrl
jmp
mov
xor
fbld
stos
pop
inc
or
and
outsl
add
bound
xchg
leave
cmp
arpl
insb
clc
dec
sub
mov
fwait
nop
lret
or
std
out
scas
jnp
or
inc
add
or
push
pop
inc
mov
test
jbe
ja
mov
test
pop
mov
in
fwait
add
pop
fidivl
xor
adc
jl
mov
and
mov
ds
enter
adc
dec
pop
ljmp
in
xchg
mov
shlb
outsl
rcrl
dec
aad
xor
scas
outsl
pop
mov
mov
into
nop
jp
mov
iret
adc
fiadds
fisubrl
aas
adc
mov
add
call
push
aad
daa
mov
add
adc
inc
and
mov
outsl
adc
jns
inc
mov
mov
pop
in
mov
xchg
or
outsl
les
fsubs
clc
sbb
pop
mov
lock
adc
in
and
fiadds
jmp
pop
cli
mov
xlat
jbe
aas
pop
repnz
cwtl
stos
inc
inc
mov
in
pop
mov
add
lcall
cmp
das
hlt
dec
sub
jmp
sbb
add
xor
sarl
icebp
outsl
loopne
add
pop
cwtl
xbegin
mov
hlt
and
jecxz
outsb
sub
clc
sbb
mov
fmulp
xor
dec
das
rol
lret
cmp
mov
gs
xchg
addb
das
dec
inc
adc
push
test
rcrb
ret
jp
pop
rorb
push
pop
or
es
mov
mov
cmc
push
cwtl
add
loop
clc
decl
fdivp
or
jbe
dec
mov
xor
filds
xor
subb
outsl
push
cltd
inc
and
cmpsl
sub
mov
ret
adcl
xchg
mov
push
js
dec
test
dec
push
add
push
cmp
stc
mov
mov
sbb
rclb
movsb
mov
ret
push
jmp
mov
les
cmp
imul
shlb
test
adc
aam
shrb
pop
jg
xchg
imul
mov
mov
xchg
xchg
cs
fisubrl
jge
xchg
stos
ss
lea
sbb
inc
cmp
and
mov
hlt
lock
add
fdivl
and
out
pop
xchg
in
pushl
adc
mov
mov
push
aaa
jns
push
sbb
stc
xor
std
add
and
mov
sahf
dec
inc
outsl
jl
call
push
xchg
xchg
adc
test
lcall
jp
push
lcall
repz
lret
cmp
test
mov
add
fistl
cltd
push
fs
dec
mov
mov
and
mov
insb
xor
or
outsb
jo
and
std
hlt
mov
adc
aas
outsl
frstor
decl
dec
and
jecxz
in
cmp
mov
cwtl
pop
movsl
lcall
call
xchg
pop
adc
mov
jmp
ljmp
xchg
push
inc
jle
addr16
insb
outsb
pop
pop
xor
into
mov
mov
dec
shrl
les
pushf
push
xchg
cmc
mov
adc
pop
xor
lret
or
add
push
inc
jg
push
call
inc
jne
push
sub
ficomps
adc
fstpl
and
sbb
mov
in
add
inc
or
rorb
ss
push
add
fdivr
std
cmp
sub
jbe
fildl
stos
loope
sarb
shll
xor
and
add
fldt
cltd
pop
and
xor
pushf
push
shlb
fisubl
push
dec
xchg
outsl
inc
out
out
test
adc
mov
jg
aam
jecxz
loope
pushf
insb
incl
mov
lcall
std
insl
sbb
mov
movsb
rcrb
cmp
cmp
lods
xchg
outsl
insb
mov
xor
aad
lcall
mov
stos
xchg
or
cmp
rcrl
outsl
das
shrb
xlat
or
daa
fs
imul
xchg
mov
pop
push
dec
mov
test
scas
shl
cmp
lds
ds
enter
mov
fdivr
pop
cmp
push
das
jge
sub
int
or
insb
fistps
mov
mov
es
xor
and
dec
mov
xchg
lret
in
pop
sbb
cmc
push
mov
sub
mov
loop
rcrl
inc
rcl
rcrl
push
lods
filds
rorl
sar
sub
loop
or
xchg
lcall
ljmp
sarb
jle
testb
adc
xor
in
sbb
pop
adc
arpl
add
mov
push
mov
hlt
in
or
icebp
sbb
or
or
mov
jnp
add
out
shrl
inc
jmp
sub
push
outsb
rcl
push
sbb
arpl
cld
sbb
mov
sets
xchg
outsl
or
dec
iret
imul
cmp
popa
test
call
pop
repz
loop
pop
adc
sub
cmp
je
xorl
in
xchg
scas
dec
mov
dec
inc
popf
push
inc
and
sbb
pushl
ret
and
cmpl
data16
adc
fldt
je
push
dec
sbb
repnz
xchg
sbb
aam
dec
inc
cmpsl
loopne
mov
push
mov
pop
sti
lock
lcall
mov
mov
add
add
pop
test
jmp
add
sbb
fldl
jo
jbe
xchg
jnp
loope
or
cmp
stos
rcll
out
mov
outsb
sub
pop
icebp
cltd
inc
xor
call
stos
fs
sbb
ud0
pop
inc
nop
shl
das
jo
sbb
xlat
and
mov
iret
sbb
lods
jp
pop
push
lods
inc
sub
sbb
xor
out
insb
es
push
cmp
out
push
std
pop
push
xchg
in
jecxz
mov
cmc
ds
cmp
sbb
mov
daa
iret
sbb
dec
xor
mov
jg
dec
push
mov
cmp
ret
mov
call
in
mov
and
push
push
jae
push
or
sub
mov
movsb
and
sub
pop
jns
pop
cs
mov
leave
or
rcrl
pop
fs
das
mov
inc
in
xchg
movsb
mov
pop
sub
jo
mov
sahf
adc
push
cmp
and
icebp
in
pop
pop
add
cwtl
inc
pop
inc
mov
sbb
mov
xchg
cmp
mov
pop
dec
test
cmp
xor
test
jle
rcrb
cmp
std
push
mov
mov
or
arpl
sbb
and
inc
push
cld
jle
and
sub
enter
and
mov
enter
mov
ret
sbb
fisubrs
rcrl
or
ljmp
aas
adc
fistpll
inc
inc
add
mov
je
inc
mov
mov
cmpsb
jne
xchg
jnp
sti
fnop
dec
das
out
mov
pop
call
fistpll
lods
test
clc
sahf
and
std
push
add
mov
mov
icebp
cld
bndstx
xchg
cmp
stos
pop
push
lcall
xchg
xchg
daa
dec
pop
inc
faddp
or
movsb
add
or
mul
inc
fistpll
out
test
cmp
jecxz
mov
xor
das
inc
sar
fiaddl
or
dec
insl
mov
lcall
cmp
mov
cmp
cmpb
nop
aaa
mov
in
in
push
and
add
insb
clc
mov
push
sbb
bound
inc
and
pushl
std
add
pop
adc
inc
jl
pop
cmpsb
test
ljmp
jb
lock
pop
pop
or
lds
mov
std
pop
flds
pop
mov
mov
movsl
inc
sbb
mov
ficoml
test
adc
insb
adc
mov
popa
mov
sbbb
xchg
iret
imul
sub
dec
push
lahf
sub
testb
test
mov
lods
xchg
loope
test
sbb
push
pop
sbb
push
cmc
lock
addb
daa
xor
and
cmpl
outsl
jg
in
enter
lds
out
mov
mov
adc
mov
or
push
mov
loopne
inc
popa
xlat
das
xor
jle
jns
pop
test
popf
test
lock
fisubl
js
adc
sahf
lods
lret
ljmp
sbb
shlb
aas
mov
jnp
scas
mov
inc
pop
mov
std
add
iret
lods
das
pop
clc
in
popa
xor
gs
cmpsl
fisttpll
mov
fsubrl
call
xchg
xchg
ret
and
jecxz
cli
mov
cmpsb
add
mov
jp
pop
sbb
xor
jg
xor
pop
arpl
sub
scas
xchg
mov
mov
inc
pushl
scas
insl
pop
mov
loope
in
mov
push
push
clc
decl
jmp
or
adc
adc
inc
inc
lar
sbb
ljmp
pop
gs
mov
cmc
inc
inc
or
push
movsb
cs
hlt
movsl
push
sub
dec
lret
cld
rol
mov
push
fsubrs
insb
mov
push
inc
inc
adc
mov
in
jecxz
mov
mov
sub
xor
cmp
mov
hlt
decl
lods
test
xchg
lcall
lahf
je
hlt
lods
pusha
mov
mov
sub
cmp
loopne
in
mov
sub
clc
stos
inc
or
xchg
push
addb
clc
cs
repnz
push
out
push
adc
and
and
fldl
outsb
aam
jl
jp
repz
mov
mov
aam
and
lods
adc
xchg
mov
js
das
cmp
fs
lahf
sub
dec
ret
inc
cmp
xchg
daa
in
fldt
xor
pop
int3
inc
mov
jo
pop
add
mov
lock
cmpsb
add
mov
pop
mov
mov
xchg
insb
inc
shll
ss
mov
push
inc
scas
data16
inc
mov
movb
outsb
decl
xor
adcl
es
jne
mov
mov
pushf
cmp
lods
add
out
push
fistps
in
mov
xor
adcb
sub
push
fisubs
outsl
jg
or
ss
scas
mov
and
movsl
adc
lods
or
lea
cli
iret
cs
add
jnp
mov
fcmovb
adc
adc
pop
jbe
sti
or
xchg
fldcw
xchg
mov
jg
mov
sbb
xor
dec
ret
mov
inc
and
and
push
ljmp
fwait
mov
fldt
lcall
jne
jno
dec
test
fwait
push
pop
xchg
dec
sub
sub
add
lds
fs
mov
mov
sub
mov
pop
mov
sub
adc
outsb
insb
fisttps
orb
cmp
into
sbb
mov
dec
mov
and
test
pop
outsl
scas
shll
lret
xchg
cltd
cmc
fisubrl
in
cmp
inc
das
sub
mov
imul
mov
mov
lret
mov
fadds
and
adc
js
ljmp
mov
orl
jp
pop
add
shll
xor
repnz
iret
shrl
rorl
aad
sub
inc
push
add
lcall
aas
add
in
icebp
mov
call
and
adc
popf
idiv
fwait
cli
or
popa
shll
cmc
jp
jbe
push
push
dec
adc
dec
cld
and
sbb
ffree
or
pmullw
imul
jns
jne
rol
adc
loop
loopne
pop
jl
daa
sbb
test
aaa
clc
test
cld
xlat
jle
add
dec
push
mov
and
lcall
movl
mov
inc
push
pop
fsub
xchg
xchg
aas
adc
push
lret
sbb
inc
mov
test
inc
and
scas
mov
je
in
xchg
pop
jp
imul
lods
ret
jbe
popf
cmpsl
movsb
lods
xchg
fcomi
ret
int
inc
pushl
test
jne
pop
xor
mov
pop
js
fidivs
sub
and
outsl
pop
adc
fld1
sbb
cmpsb
sahf
push
dec
adc
das
roll
lock
addr16
and
sahf
pop
jecxz
pop
sti
ret
cmc
or
dec
rorl
mov
std
add
xchg
add
in
mov
push
xchg
fbstp
nop
mov
rcrb
insl
fdivrs
push
xchg
mov
fdivl
outsl
ds
ljmp
mov
xchg
cmp
push
mov
sbb
pop
xchg
jo
pop
push
push
imul
dec
fisttps
std
lea
inc
in
rcl
out
cmpsl
xchg
aaa
cli
mov
sub
rcr
inc
pop
sub
popa
and
gs
mov
xor
and
mov
movl
sub
jg
lods
gs
outsl
xor
pop
jb
std
mov
outsl
mov
stc
call
push
jecxz
adc
mov
jg
xor
or
push
or
repnz
ds
fimuls
push
xor
adc
test
mov
lahf
repnz
addb
dec
popa
adc
xchg
cmpl
xchg
xchg
xlat
jno
call
mov
pop
mov
les
hlt
sbb
mov
nop
mov
scas
inc
insl
add
outsb
push
inc
es
push
fwait
xchg
popa
sub
scas
mov
xor
cmp
ud0
mov
cmp
leave
jo
andl
out
outsb
sbb
cltd
inc
stc
or
push
add
pop
into
fdivp
lcall
or
inc
fs
push
pop
fimull
mov
test
sbb
lock
or
aas
fldl
cmp
imul
popa
into
adc
cmp
icebp
add
pusha
cmp
aas
in
call
aad
and
aas
adc
and
ss
sub
push
xchg
xor
and
repz
pop
jle
sbb
inc
cwtl
mov
xlat
nop
add
int3
cmp
data16
outsl
outsl
inc
jg
jno
adc
mov
stos
popa
clc
or
add
rclb
dec
das
inc
loope
mov
loop
outsl
push
push
outsl
sbb
pop
pop
rcrb
adc
lcall
mov
mov
and
sub
push
add
fs
adc
push
push
lods
loop
mov
or
and
and
adc
ja
insb
je
jne
add
lods
mov
push
inc
xchg
dec
fisubs
out
fimull
jle
add
mov
cs
fstpt
outsl
xchg
arpl
call
jnp
or
sbb
je
mov
enter
cli
inc
ret
in
mov
aam
addl
or
sbb
out
cmpsb
mov
or
mov
jbe
mov
push
mov
xor
lock
das
push
das
frstor
jns
mov
add
xchg
lds
push
fimuls
sbb
push
jno
push
sbb
mov
sub
sub
jg
cld
test
jae
mov
pushf
out
cmpsl
pop
ficomps
and
jbe
popf
std
das
jno
sar
sbb
nop
sub
nop
jb
into
inc
cmp
push
insl
sbb
gs
fdivr
xchg
sbb
clc
movb
popa
mov
mov
jge
or
and
sbb
xchg
ret
rcrb
add
pop
fcom
jg
aaa
inc
sbb
jne
cmpsb
sub
adc
lock
rorb
add
test
insb
scas
add
mov
or
mov
loopne
push
jle
pop
out
inc
in
mov
sub
xchg
lcall
ret
add
mov
and
mov
dec
add
adc
mov
or
pop
test
aaa
loop
push
clc
pop
or
js
lods
das
lock
xchg
fwait
mov
dec
dec
sbb
ficoml
rclb
shl
ret
mov
loope
push
jg
aam
jae
sbb
pop
or
test
and
ret
rorl
enter
js
jno
sbb
into
pop
lods
cmp
adc
leave
push
sbb
jmp
mov
mov
and
or
mov
cmpl
mov
push
dec
mov
mov
mov
push
xor
xlat
jno
adc
inc
mov
jmp
rcl
dec
sahf
shlb
mov
push
lcall
push
xchg
fisubrs
pop
int3
enter
mov
jge
fs
aad
xchg
aas
xchg
pop
and
mov
movsl
into
sub
outsb
mov
cmpsb
and
mov
add
jb
out
add
jmp
aad
mov
clc
inc
mov
inc
pmovmskb
or
sub
cwtl
and
in
shl
cmpsb
mov
inc
insl
push
fidivl
jmp
pop
sub
test
xrelease
or
out
outsl
pop
imul
das
std
mov
adcb
addb
and
dec
rcrl
cmp
mov
std
inc
das
mov
add
stos
and
shl
dec
aaa
imul
addr16
inc
dec
or
imul
xchg
iret
call
mov
add
out
fistps
cmp
adc
popf
out
je
add
mov
shll
push
pop
sbb
rcrb
testb
test
or
sbb
xchg
fsubrs
movsb
dec
add
jg
fimuls
push
lahf
test
cmpsl
cmp
jmp
pushl
jl
jmp
dec
mov
push
inc
pop
daa
daa
dec
insl
ss
in
clc
sbb
imul
ret
jp
inc
popa
orb
dec
jge
outsl
outsl
xor
pop
out
mov
xorl
fadds
adc
and
andb
cli
imulb
xchg
dec
shrl
cld
jg
pushf
inc
push
mov
pop
test
ret
jecxz
add
xor
push
outsl
stos
nop
adc
decl
or
bound
mov
or
cwtl
wrmsr
adc
jbe
imul
add
and
call
mov
lea
inc
mov
sub
ret
sub
dec
sbb
mov
dec
pop
std
mov
ret
cmp
jmp
shlb
inc
gs
dec
aaa
les
ret
adc
xchg
scas
movsb
mov
or
add
lds
cmp
inc
dec
dec
xchg
fnclex
sbb
xor
fbld
inc
mov
or
insl
xor
aam
jbe
add
sbb
ljmp
push
add
popl
aas
ljmp
out
or
pop
xchg
adc
out
rolb
mov
jecxz
cmpsb
lcall
mov
jnp
gs
mov
loop
sbb
push
mov
popf
test
adc
mov
push
pop
push
xchg
inc
aaa
mov
cltd
add
jecxz
out
dec
outsb
shll
xor
sahf
cmc
es
mov
push
mov
ja
clc
das
hlt
dec
cmc
mov
scas
jb
arpl
nop
mov
movsl
jnp
bound
sahf
scas
and
jle
cmp
hlt
mov
jnp
shrb
les
das
jl
sub
xchg
push
pop
jge
fisttpll
inc
adc
inc
call
add
adc
pop
popf
sbb
xor
shll
mov
testb
pusha
nop
jg
push
fiadds
aas
sub
cmp
or
hlt
jo
ss
xchg
mov
cmp
pop
repz
mov
lret
cld
ret
call
xchg
ror
add
sub
sub
jg
fbld
push
orl
lds
out
mov
loop
mov
mov
jg
dec
jno
or
out
xor
sarl
mov
in
or
shll
fdivr
mov
fistps
add
popa
adc
cmp
pop
inc
outsl
cld
jmp
dec
push
adc
dec
movsb
mov
jg
xchg
pusha
add
mov
inc
lock
mov
stos
nop
movsl
add
je
push
cli
test
jecxz
pusha
and
mov
insl
mov
arpl
xchg
push
dec
aas
shll
adc
mov
int3
je
js
adc
and
or
outsl
mov
xor
sbbl
sahf
push
jno
das
jl
scas
or
and
loopne
out
arpl
inc
and
adc
std
addl
mov
pop
or
sbb
sbb
lea
int3
push
push
dec
addb
aad
lock
mov
popf
add
in
iret
fildll
inc
loopne
test
mov
mov
jl
xchg
or
hlt
fs
imul
sbb
mov
imul
dec
push
inc
mov
jge
xchg
mov
or
add
fistpl
inc
sbb
lcall
mov
cld
jmp
jbe
mov
cwtl
mov
sub
xlat
inc
push
pop
mov
jmp
mov
fidivl
std
insb
push
test
xor
movsl
hlt
lods
enter
or
mov
fsubrp
push
pop
pop
or
hlt
inc
pop
cld
mov
mov
xor
and
bnd
ljmp
repz
push
outsl
cmc
mov
jge
jo
scas
sbb
pop
cmpb
aad
mov
mov
push
call
ret
gs
xchg
xor
loop
iret
dec
add
inc
and
sub
jp
add
lret
insb
adc
add
jbe
es
jbe
cmc
adc
push
ret
ljmp
sub
rcrb
and
in
jo
mov
push
icebp
aam
test
leave
mov
jo
mov
fwait
push
stos
js
push
or
inc
out
loop
push
and
fildll
fwait
mov
pop
xorl
inc
pop
stos
arpl
lods
lea
add
stos
js
inc
ud0
nop
incb
or
adc
xor
add
cmc
loopne
stos
rclb
push
xchg
daa
mov
adc
das
aam
int
loope
mov
rorb
iret
push
jl
inc
fisttps
ds
pop
xor
dec
or
sub
out
sbb
jg
adc
cmpsb
fistpll
pop
int3
xor
sti
pop
and
fldl
mov
add
mov
je
mov
loope
je
pop
mov
mov
out
mov
mov
pop
add
cli
movsl
std
das
jno
je
mov
insb
cmp
mov
mov
xchg
cmp
add
loope
sub
js
xchg
fisubs
shll
pop
lret
adc
call
loopne
ret
xlat
inc
add
inc
sub
insl
or
dec
test
mov
jno
cmp
mov
aaa
and
sbb
cs
fsts
and
data16
dec
test
test
mov
lods
mov
mov
inc
insl
aaa
inc
lods
icebp
in
scas
test
inc
leave
std
dec
enter
rol
or
jg
jg
sbb
dec
add
in
repnz
mov
dec
lea
aad
xor
sbbl
shrb
cs
insb
imul
pushl
mov
dec
xchg
dec
popf
pop
in
pop
shrb
insb
stc
int3
in
inc
xor
hlt
out
xor
xchg
pop
inc
xor
adc
scas
mov
add
sti
sub
xchg
fdivr
xchg
jo
sub
or
mov
incl
lock
and
ret
or
sti
ljmp
xor
add
rclb
push
push
inc
inc
cmp
pop
mov
mov
test
arpl
fisubl
mov
push
test
push
jno
insb
pop
loopne
in
jns
cmpsl
je
lret
lea
inc
std
xchg
ja
stos
mov
test
inc
test
mov
adc
adc
pusha
fwait
jmp
xor
sub
mov
add
sbb
push
sub
push
push
je
mov
fsubrs
popf
push
fld
add
dec
ljmp
mov
test
push
mov
loop
mov
pop
mov
ret
and
ret
mov
or
cs
or
sbb
jbe
adc
js
movsl
outsl
push
dec
add
push
cltd
sbb
sbb
cmp
leave
lock
inc
aam
dec
push
imul
addb
add
rcll
add
andl
mov
movsl
add
cmp
jecxz
mov
insl
aad
add
cmp
sbb
cmpsb
ss
test
cmpsl
push
adc
mov
loope
clc
incl
adc
xchg
stos
bnd
lea
loope
cmc
or
jo
sti
adc
ss
jg
pop
adcb
inc
mov
xor
and
outsl
jge
test
adc
fistl
mov
in
rorl
add
out
mov
jecxz
aam
mov
add
movsl
lcall
jmp
nop
xchg
divl
mov
fstpt
dec
cmp
ret
aaa
push
ds
mov
pop
and
scas
pop
int3
add
outsl
cmpsb
sub
mov
lods
jge
shlb
insb
fisttps
inc
cli
xor
arpl
sbb
xor
sub
fsubrl
push
mov
cmpsl
mov
pop
and
test
dec
mov
sbb
mov
inc
stos
fsubrs
fdiv
dec
sarb
icebp
xor
pop
jge
add
mov
fwait
call
aaa
bound
movsb
inc
xchg
inc
push
out
test
push
loope
mov
lea
jb
push
pop
fdivrs
add
imul
decl
bound
sub
pop
mov
add
dec
xor
lods
aam
mov
repnz
popa
jae
les
scas
or
mov
or
mov
outsb
aam
pop
dec
cld
pop
stos
sbb
xchg
loope
mov
dec
sbb
fisttps
inc
jmp
test
jno
das
jno
jle
les
xchg
pop
loop
aaa
test
dec
sarb
or
add
dec
outsl
roll
or
xchg
add
xchg
push
addb
mov
mov
jl
lds
jle
lds
adc
jnp
add
mov
push
hlt
mov
das
lock
lds
jno
add
std
adc
mov
loopne
sub
imul
jbe
mov
cli
movsl
in
out
sbb
ret
pop
mov
mov
jp
and
xchg
lahf
jnp
inc
adc
pop
mov
add
scas
push
clc
mov
lea
mov
dec
mov
cmpsb
inc
sbb
pushf
cltd
inc
mov
fisttps
fisubl
repnz
pop
ds
fcmovnbe
push
stos
push
xor
mov
adc
mov
add
xchg
mov
shr
movsl
movsl
int3
movsb
push
mov
adc
inc
mov
rorb
inc
jmp
int3
pushf
repz
cmp
test
jb
push
jmp
adc
clc
faddp
cli
mov
ret
sti
sub
or
lret
sub
sbb
fistpll
aaa
mov
out
lret
lcall
xor
xor
fwait
jp
aaa
cld
add
sbb
xchg
out
push
dec
and
jns
mov
ret
and
imul
jl
sbb
mov
xorl
and
shr
movsl
xor
xor
add
leave
push
or
dec
dec
mov
adc
cwtl
ja
movsb
jmp
loopne
push
push
sbb
out
insl
or
push
or
xchg
in
nop
clc
adc
inc
test
inc
push
or
outsl
push
mov
xchg
cmpsb
pop
mov
jg
mov
push
mov
ja
adc
push
mov
pop
pop
dec
aad
insb
xchg
xor
lea
push
enter
add
xor
cli
sub
dec
out
scas
roll
jle
push
fisubl
jmp
rcr
fadds
mov
imul
add
xor
rorl
mov
outsl
insb
aam
ret
sub
dec
sahf
xchg
mov
pop
rorl
cld
addr16
add
fwait
dec
and
je
lock
in
and
aad
lret
push
mov
das
mov
and
or
push
rcll
xor
outsl
ljmp
mov
or
xchg
mov
adc
in
pop
inc
add
push
mov
mov
popf
mov
and
stc
insl
ficoml
add
fs
xchg
and
inc
add
or
loop
jbe
fadds
les
and
sub
jge
or
scas
cmp
aaa
sub
xor
add
in
cmp
enter
jmp
mov
add
mov
mov
xchg
outsl
push
aas
sbb
jecxz
adc
sub
pop
xor
cmp
lock
sub
push
movsl
sub
xor
or
scas
pop
jle
fcoms
fst
fwait
les
daa
xor
pop
mov
push
push
clc
sub
dec
cmp
ret
mov
fldcw
mov
push
dec
js
xchg
inc
xor
sub
adc
fstps
adc
loopne
aad
repnz
arpl
out
pop
das
push
pop
ficoml
popa
xor
mov
les
push
xchg
push
into
dec
inc
rcl
cmpsb
xor
jg
push
fstpt
ljmp
adc
push
out
ds
je
mov
mov
lods
adc
fistpll
mov
clc
pop
adc
mov
dec
xchg
push
xor
movsb
cmc
outsl
out
mov
ljmp
pop
lahf
sbb
or
shll
xchg
push
mov
add
lock
cmp
fdivrp
leave
adc
sub
cmc
mov
pop
arpl
inc
cmp
arpl
or
lods
sti
bound
jno
or
cmp
int
add
inc
insl
pop
push
sbb
xor
bound
pop
fisubs
or
in
or
imul
movsl
sub
jo
jmp
cmpsb
inc
xor
mov
lods
jnp
cwtl
mov
outsb
or
and
iret
aad
add
insb
add
loopne
fildl
clc
xchg
dec
inc
nop
rclb
sti
stc
or
push
sub
xchg
nop
mov
int
loope
jl
test
movsl
scas
enter
sbb
aam
mov
dec
sub
ljmp
fisttps
f2xm1
sub
shr
mov
push
roll
movsl
adc
leave
add
pop
fmuls
rcll
testl
in
push
pushf
push
adc
push
pop
push
mov
add
cmc
jbe
mov
lea
ret
mov
inc
mov
xchg
and
or
lcall
cmp
lahf
arpl
sti
inc
mov
pop
or
xchg
subl
and
push
mov
mov
mov
mov
iret
mov
hlt
or
sbb
aaa
lds
fsubrs
push
sbb
add
jecxz
out
mov
mov
or
cmp
add
shl
mov
lock
out
scas
push
mov
imul
cmpsl
ficomps
mov
inc
or
sub
and
and
adc
ficomps
dec
imul
add
inc
jl
sbb
or
int
and
pop
rorb
bnd
fistpl
and
xchg
je
sub
mov
sbb
cmp
nop
jmp
int3
add
adc
lret
aad
sub
js
add
outsl
jmp
fnsave
or
addl
jmp
mov
inc
cmc
pop
cwtl
cmpsl
inc
mov
std
xchg
insl
ss
cmp
mov
fs
fcmovnb
jl
lods
movsbl
mov
in
xor
jge
loop
js
lahf
rcrb
sbb
shrl
fstl
xchg
mov
cli
cmpsb
loopne
shrl
dec
jg
push
pop
xor
jo
mov
mov
jo
and
rolb
aas
and
lea
cld
adc
fwait
or
pop
outsl
jle
lahf
outsl
sbb
out
xchg
push
sti
pop
ljmp
es
out
je
cs
mov
jl
xchg
inc
pushf
mov
rorb
jns
mov
testl
inc
pusha
jb
das
je
xchg
loop
movsb
mov
cmp
and
in
add
incb
mov
mov
add
jo
mov
mov
mov
pop
sbb
mov
popa
ss
push
stos
xchg
shl
out
xchg
out
cmp
mov
and
sub
cmc
dec
mov
lods
fwait
lods
sbb
jbe
push
xor
fisubl
jmp
xlat
adc
mov
test
mov
mov
inc
les
mov
add
sbbb
sub
add
orb
sub
mov
jne
test
push
scas
iret
leave
pop
mov
mov
aas
rcl
xor
into
sbb
pop
movl
or
cmp
shlb
mov
scas
adc
inc
idivl
popa
in
sub
js
and
mov
jmp
xchg
mov
insb
lret
cmp
lea
jge
bound
lea
lock
out
pusha
sahf
out
sbb
lods
ljmp
arpl
mov
jnp
orb
lods
movq
pushf
in
pop
xchg
stos
cmp
or
dec
xor
xor
mov
xor
mov
in
clc
test
cmp
insb
push
jae
test
or
sbb
bound
jl
jno
inc
add
in
and
inc
mov
icebp
shr
mov
cld
fistpll
lcall
aad
test
fcoml
movzbl
pop
sbb
jmp
arpl
xchg
rorl
movsb
sbb
xor
inc
fcompl
sbb
lock
cwtl
pushf
clc
push
mov
imull
xchg
inc
push
and
leave
cmp
lods
iret
sahf
or
push
and
push
das
les
add
fnstenv
inc
imull
inc
jnp
cmp
arpl
cmp
push
incb
mov
mov
pop
adc
xlat
add
sbb
in
sbb
jl
in
or
cmp
and
mov
add
or
mov
movsb
leave
arpl
ss
xor
mov
or
out
cmp
adc
pop
out
rorl
cmpsb
jmp
ja
mov
je
pop
popf
lods
aad
jl
and
or
hlt
fdivs
add
mov
sbb
mov
push
mov
out
xchg
fadds
daa
enter
in
out
add
and
xchg
incb
mov
inc
jo
stos
je
in
jnp
aad
test
insb
ficoml
hlt
xor
shl
out
mov
add
rcr
lock
andl
or
lock
jecxz
jg
adc
push
fwait
lahf
out
or
push
jno
cmpsb
mov
fucomi
mov
inc
jne
lret
pop
scas
push
push
enter
inc
add
stos
ja
filds
mov
xor
add
dec
cmp
aas
adc
pop
je
insl
cmp
int
jg
andl
int
xchg
fcmovnu
cmp
pop
push
js
movsl
adc
subl
inc
mov
in
inc
sbb
xchg
jle
xchg
lods
cmp
ja
addr16
in
inc
fstpt
push
or
in
fwait
sti
xchg
test
mov
sub
mov
lds
pop
and
clc
sub
ds
outsl
inc
subl
loopne
or
sbb
in
sub
or
nop
cmp
pop
outsl
adc
xor
add
shll
push
ret
lcall
sahf
adc
mov
push
in
add
add
in
fsub
mov
ret
pop
js
loopne
orb
fldz
jae
lahf
dec
pushf
mov
sbbb
fistpl
call
push
adc
dec
xorb
cmp
fdivl
jmp
lret
aaa
cmp
enter
loopne
sub
les
and
and
cmp
dec
cmpsb
mov
aaa
or
sarl
inc
mov
lods
outsl
iret
out
lcall
mov
cmpsl
data16
test
call
pop
cmp
push
test
sub
add
insb
xchg
push
add
sbb
into
mov
inc
gs
lret
push
lock
clc
jecxz
xchg
push
push
add
pop
jp
iret
out
aad
inc
mov
mov
jnp
popf
pop
xchg
adc
xchg
push
inc
jp
mov
test
rorb
cmp
nop
stc
fsubp
pop
scas
mov
pop
jae
sbbl
jp
cmp
or
adc
ret
aaa
sub
jne
jmp
inc
je
mov
fdiv
fsubr
mov
cmp
sub
sbb
jg
inc
or
mov
or
pand
jb
lret
dec
pusha
test
xor
cmpl
loop
mov
dec
lcall
aaa
cmc
notb
jae
or
xor
jmp
lock
inc
push
leave
jb
or
ret
std
pop
fwait
jbe
scas
and
ror
and
mov
mov
sub
pop
fsubr
psrlw
js
es
mov
fs
ret
cli
mov
mov
xchg
add
push
gs
pop
repnz
insb
fstl
cmp
fstpl
pop
xor
icebp
pop
shlb
mov
adc
pusha
mov
sarl
jmp
lahf
lods
cmc
clc
js
sub
cs
inc
pop
cs
fmull
inc
std
mov
mov
js
or
pop
xchg
sub
adc
xchg
fistpll
add
sahf
push
adc
cld
aam
inc
pop
popa
jecxz
push
sub
jg
mov
and
aaa
adc
sahf
cmp
notb
leave
mov
or
jns
and
adcb
rcrl
in
pop
aam
loopne
xchg
xchg
in
jno
mov
insb
fldcw
movsb
push
xchg
mov
jl
push
or
jmp
push
push
lock
sbb
inc
repz
dec
push
jecxz
pop
jbe
cmpl
cli
dec
fsts
push
gs
les
mov
sub
loopne
imul
scas
adc
ret
outsb
js
outsl
pusha
pop
dec
fcmovne
adc
pop
cmp
push
fsubrs
rcrb
inc
jg
mov
dec
out
int3
jno
test
dec
stos
aam
in
push
adc
inc
lcall
inc
mov
outsl
inc
je
add
xor
loope
repz
xlat
and
cmpsl
ret
call
aad
push
dec
pop
pop
in
cmp
pop
mov
scas
xor
sbb
movsl
mov
cmp
xlat
into
mov
jle
jno
ljmp
ret
xchg
lret
paddq
pop
cmp
xchg
inc
lods
stos
fsubrs
sbb
movsb
add
cli
movsb
mov
mov
insb
std
push
mov
mov
imul
inc
lea
inc
shlb
xchg
xchg
out
sub
jnp
and
mov
inc
mov
int3
clc
outsl
js
sbb
xor
adc
cmp
push
push
not
iret
mov
lods
scas
pop
jmp
adcl
xchg
or
lea
sub
push
push
addr16
ljmp
add
jae
sti
adc
inc
and
mov
push
andb
pusha
out
mov
dec
repz
loop
add
and
in
test
pop
movsb
jae
add
xorb
clc
addl
fistps
cmp
test
dec
jecxz
je
fs
scas
jo
jns
xor
add
iret
popa
pushaw
je
movsl
xchg
jne
test
test
sbb
roll
lods
ffreep
data16
ss
push
or
xchg
cmpsb
pop
pop
iret
add
mov
insl
imul
out
sahf
jge
dec
je
test
dec
or
test
sbb
call
add
sbb
hlt
cmpb
push
mov
pop
cmp
sbbb
mov
cld
das
xchg
push
or
mov
jge
xchg
lret
lahf
sbb
xor
lds
mulb
dec
lock
loope
hlt
cs
mov
and
addr16
push
jge
cmp
es
xchg
add
fistpll
sub
adc
push
xor
int3
jns
xor
lret
or
xchg
addl
mov
jp
repnz
xorl
data16
ficomps
sbb
mov
js
sbb
test
frstor
mov
or
mov
dec
sub
or
inc
stos
mov
push
mov
lret
arpl
jg
and
cmp
and
decl
insb
fisttps
sbb
dec
icebp
mov
cmp
insb
in
jnp
stc
repnz
jb
mov
fstl
adc
incl
loope
ljmp
fisubrs
inc
mov
shl
jg
mov
dec
fcomi
push
daa
jl
jae
leave
push
pop
or
idiv
scas
addr16
rcrl
sub
sarl
jge
xchg
push
mov
sbb
cmp
aam
cmp
rcl
dec
leave
enter
jge
xchg
ret
ja
andl
xchg
jmp
ja
ret
test
adcl
or
sbb
adc
sbb
inc
movsl
mov
sbb
add
movb
mov
jle
mov
ret
bound
mov
scas
push
add
cmp
js
lret
lahf
sbbb
mov
outsl
cmp
pop
imul
pop
add
push
outsb
imul
sbb
fs
inc
out
or
scas
dec
ret
add
xor
sub
das
dec
mov
push
cs
jle
addr16
cmpsl
cmp
outsl
loop
mov
inc
cs
push
adc
mov
adc
lods
repnz
jecxz
xor
fs
pop
rcll
into
insb
sarb
jbe
pushf
ja
out
add
inc
addr16
loope
and
adc
xchg
mov
mov
mov
mov
fmull
or
xor
movb
inc
cmc
loopne
and
fs
jnp
in
fisttpll
jne
xor
add
bound
push
in
lcall
out
insb
jns
mov
xor
xchg
inc
test
inc
icebp
hlt
inc
into
clc
gs
mov
inc
mov
jp
loop
push
push
dec
inc
scas
lret
xor
pop
add
add
cmp
mov
call
sub
mov
fsubp
test
pop
or
mov
fnstenv
popl
mov
inc
filds
clc
jb
push
stos
xchg
addb
mov
ljmp
adc
jmp
int
mov
xchg
and
repnz
insb
xor
sub
popa
inc
add
mov
clc
push
rcll
clc
testl
sbb
cmp
je
pop
ret
mov
sbbb
xor
int3
dec
sbb
push
and
stc
aam
popa
daa
jne
jns
mov
sub
pop
jge
movsl
mov
inc
push
fnsave
into
jmp
push
jne
mov
imul
pop
adc
ret
les
jmp
mov
push
xor
nop
dec
mov
fmul
adc
inc
push
jecxz
mov
inc
int
popa
jns
mov
aaa
outsl
hlt
shll
jae
and
cmp
movsb
sbb
mov
pop
ljmp
clc
enter
out
mov
xor
sbbb
mov
shlb
pop
je
jmp
arpl
push
test
inc
mov
clc
add
mov
lods
dec
mov
mov
cli
sub
mov
clc
decl
mov
lods
and
cmpsl
out
xlat
mov
sbb
add
fidivrs
cmp
and
loope
or
sbb
cli
fiadds
lods
jge
dec
jo
pop
jg
push
insl
dec
stos
mov
lahf
int
adc
pop
jle
test
lcall
fisubrl
inc
mov
pop
jl
add
sbb
jbe
in
icebp
popa
iret
gs
addr16
lahf
sarb
push
mov
adc
cmpb
push
mov
jbe
xchg
hlt
inc
out
loope
scas
das
sbb
add
mov
or
in
dec
sarl
aad
and
or
out
cmp
sub
add
scas
cmp
les
ret
jge
movl
icebp
mov
aad
loopne
xor
add
sahf
xor
and
xchg
test
mov
push
fidivs
fld1
jmp
cld
imul
push
mov
inc
inc
cmc
in
dec
inc
std
push
int3
das
pop
mov
mov
lods
fsubr
xlat
sarb
xor
stc
jmp
loopne
in
shll
dec
out
outsb
insl
lds
cmc
pop
xchg
xbegin
call
sarb
sbb
add
sub
shll
xchg
out
incl
andb
sub
loopne
push
cwtl
inc
das
out
sbb
xchg
fs
jbe
fisttps
or
sbb
jmp
dec
xor
repnz
aam
stos
jg
inc
repz
fimuls
xchg
jle
call
cld
inc
or
lret
jnp
fidivrs
or
push
sbb
mov
jbe
mov
repnz
push
hlt
adc
sti
js
test
pusha
sbb
idivb
fstpl
pop
adc
ud2
xor
xor
cltd
ficomps
jo
dec
jg
in
mov
xchg
repz
lcall
mov
loope
enter
inc
in
cli
sbb
push
dec
gs
in
xchg
sahf
pop
jmp
add
cld
pop
xor
aam
cs
and
in
mov
int3
push
pop
outsl
and
push
and
and
adc
mov
push
adcl
loop
enter
push
ss
dec
daa
jp
fbld
push
adc
ss
sarb
mov
jecxz
daa
sbb
fildll
lds
lcall
or
dec
mov
shl
and
mov
mov
and
in
mov
fnstcw
mov
or
cli
je,pt
insb
loopne
test
push
cmpsl
push
cmp
add
movsb
lcall
iret
es
jmp
insb
jg
dec
enter
cmp
cmp
mov
push
repz
out
mov
test
movb
fdivs
push
pop
insl
cld
test
and
jnp
movsb
cmpsl
sbb
adc
fnstcw
xchg
xchg
push
cmp
fildll
sbb
pop
decb
or
shr
mov
loope
jae
push
cmp
jg
pop
test
push
fmuls
dec
sbb
out
or
rcll
pop
or
stos
xor
push
xchg
push
out
inc
push
test
jecxz
rcrb
je
imul
in
push
fidivl
in
gs
cmp
in
sbb
cs
bound
insl
dec
pop
stos
xlat
mov
shll
cs
sub
inc
push
pop
int3
sub
jge
xchg
ja
imul
inc
mov
xor
mov
in
bound
jns
jp
pop
adc
lea
xor
jmp
pop
jbe
testb
fisttpll
xchg
inc
lods
jecxz
sbb
dec
mov
xchg
andl
cmp
aaa
sahf
xlat
adc
imulb
mov
mov
xchg
enter
sbb
stos
xchg
jle
pushf
sbb
outsb
mov
pop
or
arpl
test
xor
sbb
in
movsl
cmp
xchg
ret
jnp
inc
xlat
ljmp
int
mov
dec
mov
jg
mov
and
mov
pop
cwtl
jo
pop
lret
xchg
sub
cmc
loopne
decl
push
xor
stos
in
repz
jmp
add
jle
add
ja
inc
mov
insb
lock
aas
xchg
adc
andb
pop
jl
out
adc
sub
pop
lock
dec
dec
int
jo
scas
jecxz
test
rcr
aad
xor
or
outsb
aam
jg
jno
test
hlt
in
jg
loopne
rcrl
jno
inc
jns
fcmovnu
ljmp
sti
adc
scas
jmp
mov
mov
and
xchg
daa
inc
mov
and
outsb
fsubrs
push
lea
adc
or
dec
pop
mov
jle
add
out
adc
sub
mov
jb
xor
test
xchg
mov
scas
mov
add
jne
cmp
jbe
divl
sbb
xchg
test
sar
pop
cld
sbb
adc
cli
push
fwait
test
imul
ja
add
or
sub
out
subb
cli
in
push
dec
push
repnz
movsl
nop
fadds
inc
mov
into
movsl
push
out
push
inc
lods
incb
fistpll
and
lods
jne
rorl
push
dec
mov
popa
xchg
mov
adc
mov
xor
jns
pop
mov
shll
bswap
pop
call
outsl
cmpsb
loope
clc
xor
mov
sub
sub
lds
lahf
inc
and
fwait
xor
mov
pop
lock
adc
mov
inc
push
mov
mov
xor
cmp
xchg
aam
jns
sub
xor
xor
mov
add
cmpsl
or
mov
mov
outsb
sub
cmp
fildll
adc
cmp
jmp
aam
add
lcall
mov
sahf
fadds
iret
nop
cli
jb
push
dec
jl,pt
in
jg
mov
mov
jg
add
std
sub
xchg
inc
mov
jmp
aaa
pop
into
ljmp
mov
movsl
pop
std
lds
imul
mov
add
fadd
inc
mov
push
mov
addr16
out
cmp
add
jg
lock
testb
inc
dec
clc
cmp
mov
add
mov
xchg
incl
aas
fstp
je
mov
ss
adc
mov
push
xchg
dec
mov
sti
mov
push
inc
adc
and
sub
cmp
inc
sbb
cmp
pop
lods
inc
shrl
dec
push
cmp
add
and
push
cmpsb
int
arpl
jp
cmp
push
pop
outsb
inc
mov
dec
sbb
push
add
and
aaa
pop
or
mov
pop
or
sub
xchg
add
test
neg
lods
add
mov
inc
outsl
les
lret
shr
les
fucomip
xchg
push
sbbb
in
inc
cmp
insl
pop
mov
mov
mov
loop
and
rcrb
pop
sub
mov
mov
xchg
ss
pop
xchg
incb
adc
or
in
je
add
sysret
repnz
inc
outsl
or
push
mov
rclb
mov
decl
cmpl
xchg
out
jge
fnsave
pop
es
jp
jb
pop
ucomiss
loopne
push
insb
jo
movsb
add
call
in
xchg
cmpl
scas
jmp
lds
sub
sub
sub
scas
push
insl
sub
add
shrb
pop
add
int3
jp
jne
adc
pushf
arpl
into
add
movsb
add
cli
outsl
lock
or
scas
sub
jae
xchg
add
data16
fildl
cltd
mov
fs
sub
loopne
dec
xchg
sbb
ds
adc
jmp
loopne
mull
fidivrs
dec
jbe
clc
lods
lods
mov
dec
mov
lcall
int
inc
inc
jl
jmp
adc
scas
mov
daa
std
mov
inc
sbb
jecxz
test
and
adc
mov
push
clc
sub
shrl
imul
adc
mov
push
hlt
inc
jno
dec
popf
mov
pop
xlat
sub
sti
fstps
icebp
xchg
sub
push
lcall
hlt
xlat
int
add
cmp
and
xor
jnp
or
jmp
fbstp
mov
jmp
dec
jae
testb
rcrl
les
mov
mov
repnz
inc
jmp
icebp
jns
and
add
inc
or
sbb
pop
mov
xchg
push
test
and
fcompl
inc
pushl
enter
data16
call
xchg
data16
aaa
jecxz
xor
pop
pop
decl
andb
cmp
jmp
jp
sbb
sbb
mov
mov
cmc
sub
mov
shrl
movb
jbe
std
xchg
adcl
aad
je
add
cld
or
into
push
fimull
inc
and
loop
ljmp
jmp
jne
push
insl
sahf
and
stos
mov
mov
fmuls
xor
push
mov
pop
imul
push
mov
icebp
mov
ss
arpl
xchg
xchg
push
mov
stos
in
mov
test
test
outsl
test
mov
sbb
inc
es
pop
mov
out
aad
and
outsl
mov
adcl
fldcw
lea
fcom
clc
insb
clc
or
cmc
btc
push
ss
addb
cmp
jle
movsl
pop
repz
scas
jmp
jno
in
or
cmp
xchg
popa
inc
mov
subb
les
aas
roll
subb
xchg
imul
adc
shr
into
inc
mov
lock
lock
mov
jge
imul
dec
inc
negl
lcall
xlat
jg
push
xchg
pop
push
out
inc
fcomp
in
pop
call
jno
xchg
in
mov
dec
or
push
xchg
cmpsb
mov
jne
jns
stos
mov
popa
inc
mov
and
addr16
mov
cmp
loopne
sbb
sbb
mov
or
cli
mov
shr
xlat
jo
sub
xchg
inc
sbb
mov
decl
mov
pop
inc
jl
push
stos
clc
stc
mov
mulb
pop
mov
mov
repz
push
pushf
inc
faddl
sbb
sub
pop
pop
push
ficomps
pop
ja
add
cmp
out
cmp
jno
cmp
inc
push
sbb
stc
jge
aas
jp
xor
in
jecxz
hlt
mov
inc
push
inc
sub
adc
stc
testl
dec
loopne
dec
scas
repz
les
sahf
push
jp
hlt
cltd
ljmp
ffree
pop
aas
mov
std
aaa
lds
inc
imul
mov
push
out
jns
jg
loope
xchg
mov
jne
push
pushf
jbe
jb
insl
fnstsw
arpl
adc
rol
xor
mov
mov
dec
shrb
jg
or
pop
cmp
fs
sub
pop
outsb
loop
add
pop
das
arpl
adc
loope
mov
scas
ret
sahf
fmul
mov
pop
insb
lods
xchg
cli
ds
dec
xchg
aaa
in
sahf
xchg
into
add
outsl
fwait
xchg
cmpsl
orb
mov
movsb
inc
inc
data16
es
and
iret
out
sub
in
mov
lahf
sub
inc
mov
call
adc
std
lcall
out
lahf
adc
or
out
push
inc
sbb
lret
hlt
ss
dec
push
inc
leave
out
push
xor
shl
push
pop
les
cmp
or
sbb
into
loopne
ja
inc
xchg
imul
dec
rclb
and
sub
pusha
cmp
pop
subl
mov
into
xlat
decl
icebp
int3
push
sbb
push
push
ret
sub
dec
lret
xor
mov
scas
fbstp
cmp
ja
push
adc
push
pop
inc
xchg
push
pushf
sub
fcmovb
cld
inc
das
cld
and
mov
fisubrs
clc
outsl
cmp
add
adc
in
hlt
inc
je
mov
test
sub
faddl
loopne
pop
mov
xor
inc
pop
cmpsl
rcrb
shll
mov
in
pop
push
cmp
dec
jo
sahf
inc
adc
add
leave
rolb
aad
mov
rcl
enter
push
shrl
or
out
dec
lods
aad
and
outsl
add
lods
jle
sbb
sbb
sub
leave
mov
push
adc
jg
loopne
add
dec
xor
out
fistpl
add
xchg
cli
add
pop
cwtl
mov
icebp
jnp
imul
jbe
loope
lock
fmull
fsubs
cmp
xchg
add
mov
cmp
shrb
push
in
dec
out
and
mov
xor
mov
orb
mov
cwtl
jg
je
push
xor
addr16
jnp
sar
cmp
jg
sti
mov
cmp
xor
mov
xor
pop
into
test
add
or
push
icebp
xor
test
xlat
dec
bound
lret
xor
in
cmpsl
clc
arpl
test
aas
xchg
xchg
mov
ficoml
mov
xchg
push
daa
sbb
outsb
negb
imul
sbb
sub
in
movsb
xchg
cmpb
push
add
push
notl
iret
mov
xchg
addl
out
adc
pop
or
mov
test
loop
in
jecxz
dec
adc
loope
call
jno
sub
or
push
es
or
push
lret
decl
je
mov
cwtl
mov
sbb
or
mov
out
push
rorl
lfs
adc
mov
lods
mov
mov
fimull
adc
hlt
jno
add
insl
cmp
jl
mov
jns
lcall
cmpsl
addb
fsubs
lods
std
cs
and
fs
sbbb
sbb
mov
push
out
xor
rol
push
rclb
movsb
cld
mov
mov
adc
or
sub
pop
jno
leave
xchg
int3
pop
jge
aaa
mov
xchg
imul
ret
ret
cmc
mov
int3
mov
insl
fstpt
stos
pop
mov
add
orl
jle
leave
pop
out
add
mov
ljmp
jb
sub
push
dec
push
stos
xor
jecxz
and
ret
adc
adc
fisttps
push
jae
add
js
mov
jmp
aaa
sbb
hlt
xchg
pop
push
add
nop
jns
test
insb
add
inc
cwtl
add
sbb
popa
ret
shll
mov
push
cmpsb
cmp
or
and
fisttpl
mov
xchg
fsubs
aaa
icebp
or
jle
aam
sbb
pop
xor
sbb
mov
test
dec
inc
nop
mov
inc
xor
xor
push
adc
push
or
fldl
and
sbb
jle
loopne
and
dec
addb
xor
ret
mov
nop
push
jmp
in
dec
repnz
xchg
pushf
xchg
setle
mov
sbbl
mov
xor
mov
fdivrs
rorb
decl
cmp
xchg
push
rcrl
push
adc
movzwl
pop
pop
fucomi
cli
arpl
inc
shll
mov
ret
mov
mov
loop
adc
inc
jo
or
mov
sub
jnp
dec
je
jnp
jg
mov
movsb
in
and
pop
mov
mov
jne
cmc
jno
and
mov
arpl
rorb
mov
jecxz
scas
and
inc
hlt
adc
adc
xorb
mov
and
insb
inc
pop
out
push
lock
xchg
sbb
jne
fbld
push
out
xorb
test
enter
das
les
or
or
jno
jnp
cli
mov
push
arpl
and
jmp
jecxz
and
stc
or
outsb
dec
lods
pop
inc
ss
pop
testl
scas
int3
sbb
cmpb
out
sbb
mov
les
jle
icebp
xorl
enter
inc
push
cld
cmp
lods
sub
jno
and
sarb
add
pop
cld
mov
add
xor
inc
lods
mov
lahf
jne
shll
clc
into
sbb
mov
xor
imull
je
pop
sahf
add
outsb
les
mov
sbb
or
cmp
sbb
push
rcrb
fnsave
orb
adc
jae
mov
scas
clc
rolb
out
test
iret
sar
fsubrs
add
cmp
push
mov
jle
dec
loop
mov
icebp
jge
push
mov
mov
mov
decb
add
cmpsb
les
fcomi
call
in
sub
push
pushl
push
push
or
add
addr16
mov
add
lea
push
paddb
push
add
jp
ret
das
sbb
in
outsb
sbb
ss
or
in
sub
xchg
aaa
ja
push
push
hlt
push
rdtsc
add
fs
sahf
fisttpl
xor
sub
cld
sub
in
push
sub
push
add
push
push
pop
mov
in
out
inc
add
push
pop
lock
lock
sarl
cmp
push
call
lret
out
xor
add
shl
xlat
sbb
push
neg
sbb
push
fstpt
not
push
jne
lcall
sbb
add
insl
movsl
loop
neg
push
inc
sub
add
jmp
outsb
idivl
outsl
fildll
repnz
dec
sbb
sbb
insb
pop
inc
add
in
out
or
scas
mov
div
fisttps
mov
cli
adc
pop
or
fwait
cmp
or
dec
popf
sti
in
fistl
jae
insl
add
shll
lock
push
and
push
pop
xlat
mov
js
hlt
loop
push
sub
div
dec
not
mov
push
cld
dec
aas
or
jo
das
or
in
outsl
pop
pop
fs
dec
mov
cld
hlt
ja
push
inc
push
mov
sahf
or
imull
push
mov
xchg
push
ss
push
push
outsb
xchg
clc
outsb
xor
je
xor
and
lret
sbb
ja
add
jne
or
ja
clc
lea
les
dec
push
add
cmp
cmp
mov
xor
popf
aad
jae
add
ret
testb
add
add
movsl
in
testl
mov
jmp
scas
sbb
pop
push
push
dec
out
sti
sbb
outsl
clc
sti
xchg
dec
xchg
mov
xor
fnstcw
movl
xor
jle
adc
lcall
lahf
push
div
dec
fwait
aad
rcrb
neg
ret
adc
sbb
adc
jo
mov
popa
sub
push
pushf
arpl
out
int
cld
push
pop
call
xor
testl
xlat
neg
sub
sbb
add
dec
cwtl
int3
clc
add
cmp
xorl
imul
dec
fs
je
ja
inc
hlt
mov
popa
lods
ja
add
aaa
lods
or
pop
pop
mov
sbb
push
mov
dec
xchg
outsb
into
sbb
addr16
dec
push
push
outsl
sub
pop
ret
sub
mov
push
imul
mov
inc
fsub
mov
xchg
push
cmp
gs
testl
popa
aaa
pop
add
imul
xchg
jne
add
sub
out
push
jge
dec
push
pop
outsl
and
adc
insb
mov
inc
scas
in
jno
lret
xor
dec
fdivrs
loopne
push
push
and
cmpsb
jg
dec
inc
je
inc
clc
xchg
in
pop
in
push
clc
sub
cltd
mov
mov
adc
push
testb
xchg
aad
xor
sbb
xor
push
cmp
jg
ficoml
push
out
xchg
fnstcw
je
xor
out
out
bound
push
mov
add
xor
cs
popf
in
into
mov
pop
hlt
dec
cld
mov
in
sbb
aas
pop
jae,pn
imul
lahf
mov
xlat
dec
movl
rorl
inc
add
adc
cmc
mov
inc
inc
add
and
pop
pushf
aam
es
cli
sub
pop
sbb
daa
add
push
dec
cmp
push
push
fs
insb
lock
xor
call
inc
xor
push
jb
sub
mov
dec
dec
inc
jb
lcall
leave
pop
fcomps
xor
push
cld
jo
pop
fists
sub
fst
call
lock
mov
sbb
jnp
mov
loopne
mov
sub
popf
add
push
mov
arpl
jo
and
cmc
into
lods
popf
lock
ja
testl
scas
lock
cmp
xor
mov
das
mov
dec
mov
pop
or
push
jns
ret
xor
outsl
push
push
dec
dec
enter
pmaxub
mov
out
sar
rorb
inc
adc
dec
adc
dec
add
cs
push
imul
sub
scas
or
dec
add
xchg
sti
inc
adc
lcall
jo
inc
inc
push
sub
notl
inc
popa
cmc
sbb
cmpsl
loopew
faddl
xor
imul
xchg
icebp
or
add
sub
push
fidivrs
movmskps
sbb
lret
into
lds
push
enter
aaa
imul
dec
jb
mov
out
push
add
pop
das
xchg
dec
xor
and
dec
andl
push
insl
ret
std
pop
loopne
imul
inc
jp
outsb
sbb
dec
inc
addr16
jo
cmp
jecxz
sahf
clc
push
cwtl
dec
and
out
aam
sub
aaa
and
inc
jmp
std
icebp
out
jo
insl
mov
xchg
mov
pop
dec
mov
push
lahf
lods
mov
adc
push
test
clc
sbb
adc
push
sub
inc
jge
sub
sbb
das
and
push
gs
std
pop
push
lock
add
inc
cmpsb
lea
cmp
pop
jno
outsb
loop
cmpl
ja
jbe
inc
cmc
mov
jbe
pop
cld
add
rcll
fisubl
xchg
sub
cs
cld
mov
jne
filds
js
mov
cmp
push
dec
pop
fists
xchg
pop
imul
scas
leave
sahf
or
or
scas
jno
es
xabort
inc
repnz
sbb
dec
call
inc
push
add
pop
push
insb
push
js
leave
sahf
sbbb
mov
lods
addl
add
ss
inc
imul
fs
push
popa
lods
insl
jbe
jns
dec
push
and
pop
inc
cli
sbb
mov
xchg
dec
bound
dec
push
jae
loope
lcall
daa
aas
mov
jmp
dec
fdivp
test
popf
cmp
call
xor
jae
rclb
or
fisubrl
add
jnp
outsl
add
push
jle
orb
inc
inc
adc
adc
fistpll
inc
push
pop
and
add
sti
mov
shll
repnz
aas
inc
cmp
out
mov
adc
adc
add
push
scas
sarb
pop
sbb
icebp
cld
imul
xchg
sbb
sub
pushf
sti
mov
sbb
ljmp
repz
ja
jg
jp
or
fmul
inc
sub
out
fsubrp
ficomps
sbb
mov
inc
adc
inc
nop
cld
movsl
addb
loop
clc
pop
jnp
fdivl
ja
xor
sarb
adc
fs
lret
jne
mov
fstpt
imul
xor
lds
outsl
cmp
addb
or
jae
cmp
incl
add
mov
jmp
jg
mov
ret
lods
incb
arpl
out
fiadds
adc
jno
xchg
cmp
cs
in
pop
dec
ret
adc
and
xchg
sbb
sbb
adcb
shr
adc
cli
and
sti
outsl
int
push
sar
and
pop
pop
mov
and
std
dec
fstpl
sbb
xor
daa
lods
stc
daa
mov
sbb
or
cld
es
and
shl
ja
push
xor
into
enter
cwtl
jp
sbb
pop
call
lahf
cmp
sti
aaa
mov
mov
add
or
stc
aaa
ja
inc
out
cmpsl
mov
cmpl
into
std
lea
sub
dec
pop
loopne
sarl
cmpsb
sub
out
leave
movd
cltd
or
imul
sub
out
dec
lcall
xor
mov
ljmp
test
lahf
mov
sub
fadds
xchg
dec
or
cld
adc
repz
cmp
push
dec
inc
stos
push
je
stos
movsb
testl
ljmp
lret
adc
cmp
fdivl
or
pop
ja
dec
push
push
dec
addb
mov
ss
out
mov
mov
aam
ret
add
cld
jg
and
out
mov
mov
pop
ror
sub
add
jmp
mov
xor
mov
imul
int3
pop
arpl
clc
mov
sub
aas
mov
aas
rdtsc
cmpb
mov
push
sarb
push
jns
cmpb
fdivr
scas
sti
test
sub
aam
inc
mov
jne
mov
add
out
jp
out
rclb
push
aad
imul
repnz
ret
mov
cmc
imul
adc
movsl
add
push
jl
sahf
cld
sub
insl
dec
in
repz
jno
cmp
xor
or
js
out
mov
aaa
adc
aaa
mov
fnsave
stos
or
jb
jnp
movups
outsb
add
jb
inc
mov
xor
jg
testl
or
popf
andl
jae
loop
enter
out
and
ret
mov
inc
inc
jbe
and
xchg
iret
dec
jns
sti
mov
out
imul
adc
dec
mov
int
xor
std
popf
lea
xlat
and
cmp
jno
and
mov
fwait
stos
out
clc
ja
ljmp
ja
fs
inc
inc
push
orl
arpl
imulb
movsb
dec
sbbl
shl
xlat
sarl
xchg
xchg
sbb
test
stc
add
ret
cmc
clc
inc
adc
mov
adc
cmp
push
cltd
rclb
mov
sarl
loope
flds
jg
popf
cmp
lahf
sbb
push
rcrl
sti
xor
pusha
sbb
sarl
add
cli
subb
ja
incl
lret
lret
sbb
push
imul
mov
fsubp
ret
mov
aaa
sbb
icebp
cmpl
dec
add
jbe
xor
gs
lahf
fneni(8087
mov
les
ds
orb
fisttpl
inc
pop
mov
scas
rclb
sub
int
aas
mov
jp
into
call
aad
jmp
fisubs
mov
cmp
cmp
mov
cltd
stc
incl
cltd
xor
insb
pusha
mov
incb
repz
in
add
insb
cmpsb
and
jae
jg
jno
sub
ret
cld
ss
sbb
mov
cmc
push
push
sbb
mov
mov
inc
sub
xchg
dec
inc
xchg
lret
pop
insb
push
into
dec
subb
and
fs
inc
xchg
shll
sbb
aaa
cmpsl
imul
xchg
jle
clc
into
fdivl
scas
mov
scas
dec
fnstenv
out
xor
mov
dec
inc
pop
jg
jle
or
aas
adc
inc
adc
jo
and
jg
add
add
adc
pop
sti
arpl
jge
shl
subb
and
out
out
fcompl
jg
inc
in
or
sahf
xor
adc
pop
idiv
lods
push
cmpsb
sbb
mov
mov
inc
bound
push
sub
mov
pop
lds
je
ja
int
iret
push
data16
sub
push
std
push
add
outsb
scas
shl
jb
leave
mov
inc
adc
movb
insl
icebp
fucomip
aas
ret
testb
addr16
pop
sub
or
sti
out
pop
jno
test
cmp
shrb
dec
inc
clc
pop
out
inc
in
outsl
xchg
adc
pop
inc
jge
icebp
pxor
ljmp
out
adc
mov
jmp
popa
test
stos
adc
out
std
ret
push
cli
cmpsl
push
xchg
xchg
pop
les
and
and
jmp
sub
or
ror
pop
push
push
push
cmp
pop
mov
call
jns
jae
mov
push
sub
inc
loopne
idivl
xor
jge
sub
stos
aas
cmp
loop
data16
scas
arpl
xor
inc
mov
inc
cmp
icebp
out
std
ja
fs
cwtl
mov
add
cmp
jmp
mov
dec
lcall
pop
jecxz
mov
dec
shll
xor
sub
ss
adc
aas
mov
sub
pop
pusha
adc
inc
jns
int3
mov
ds
or
subb
enter
sbb
xor
aas
icebp
cmp
fadds
mov
jle
dec
popl
xchg
std
pop
mov
mov
call
inc
xchg
test
xchg
out
lahf
or
push
sahf
loope
cmp
cmp
dec
cld
popl
mov
fwait
and
inc
mov
pushl
and
jp
mov
int3
lods
push
mov
gs
sti
mov
xlat
cmp
pop
jmp
hlt
enter
notb
pop
or
mov
mov
cwtl
pop
bts
mov
pop
jmp
sbb
mov
push
inc
rcr
jecxz
loopne
lret
lods
out
xchg
inc
jmp
pop
lret
cmp
xchg
jo
jo
xchg
mov
xor
jmp
lock
push
dec
ficoms
lret
sbb
fdivs
mov
je
xchg
xchg
stc
cltd
std
jno
or
mov
mov
adc
push
pop
sbb
pop
jnp
inc
mov
xlat
sub
jl
mov
xor
push
call
out
jmp
pop
xchg
movsl
cli
aas
cmp
xchg
cmp
push
imul
sub
ds
lods
loopne
shll
stos
scas
nop
sbb
mov
std
xor
ficoms
jnp
and
add
fldenv
push
ss
jg
cli
jb
aaa
and
adc
xlat
dec
clc
ljmp
or
push
push
fndisi(8087
or
mov
add
out
outsb
inc
or
push
lods
int
sub
std
cltd
mov
test
jl,pn
push
sbb
sbb
ret
push
mov
jb
test
std
ret
sti
into
in
mov
inc
imul
aas
loope
cmp
push
mov
faddl
stc
test
sar
cmp
xor
dec
ret
das
jge
lock
adc
xchg
adc
sub
ljmp
lahf
fistps
dec
push
aad
cmp
lcall
mov
push
cmc
xchg
lock
cli
sbb
xor
ljmp
icebp
call
dec
dec
repnz
ffreep
clc
jne
in
lea
loop
icebp
scas
stos
outsl
or
in
adc
stc
fsubrs
lock
out
pop
and
ljmp
xchg
ss
lahf
jle
dec
insl
lods
xorb
cli
outsb
negb
cmc
arpl
fildl
stc
pop
push
sbb
lret
cmp
push
or
dec
or
sti
in
std
push
pusha
popf
nop
lcall
insl
xor
jnp
ret
adc
adc
push
jp
pop
jle
imul
fcoms
mov
pmaxub
lock
popf
jecxz
lods
xlat
test
inc
add
push
ljmp
out
add
push
loop
shl
pop
cmpb
lret
inc
add
cld
mov
mov
push
pop
das
dec
lcall
mov
xchg
out
insl
hlt
jl
pop
adc
je
aas
pop
das
sbb
arpl
cmp
jnp
lea
jno
incb
xor
cli
cmp
push
cld
push
adc
hlt
dec
lcall
adc
sub
or
xor
cmc
icebp
call
jmp
adc
cmp
les
lcall
fwait
stos
inc
test
lret
insl
out
cmp
push
xchg
pop
loope
or
iret
jmp
lahf
popa
add
sbb
ja
sbb
sub
shll
in
std
xchg
daa
mov
adc
sub
cld
addr16
adcb
xor
dec
sub
mov
mov
add
fnsave
jge
pop
add
mov
aas
mull
call
xor
cmp
adc
push
xor
lock
stc
or
mov
daa
orb
mov
rolb
loope
and
pop
or
push
fs
cmpsb
mov
clc
sub
sbb
xlat
add
mov
fucom
aad
dec
add
pusha
cmpsb
inc
addr16
inc
xchg
dec
dec
pop
or
bound
or
sub
and
jns
sub
sbb
gs
test
repnz
sub
sahf
push
mov
movsb
push
testb
inc
rorl
out
sub
repz
in
jo
xchg
es
fldenv
roll
push
leave
jge
outsl
inc
popa
mov
and
aam
push
popf
loop
sub
aas
jnp
mov
sahf
mov
add
xor
cmc
filds
inc
ficompl
pop
jbe
sub
xor
in
fucom
aas
cmp
shlb
out
add
dec
inc
das
daa
mov
xchg
dec
push
in
mov
dec
sub
sahf
mov
cli
cmp
adc
cmp
call
pop
aad
lock
mov
cmpsb
mov
daa
mov
jnp
lahf
lock
pop
inc
add
adc
push
ffreep
inc
inc
sbb
dec
cmpsl
jnp
out
aas
mov
mov
add
push
fdivrp
fstps
repz
fucomp
loope
jg
bound
icebp
cmpsl
add
inc
stos
out
bound
xchg
clc
icebp
or
mov
inc
pop
imul
fdivrp
inc
mov
or
mov
mov
xor
std
fcomip
vprotw
in
fnstcw
fiadds
lret
loope
mov
sbb
ret
in
scas
adc
mov
dec
push
pop
cmp
jg
icebp
icebp
sarl
cltd
adc
mov
mov
mov
data16
jmp
cmp
adc
in
std
jb
sahf
adcb
int
scas
in
mov
jge
xchg
cmp
inc
jp
xchg
push
xorl
cmp
xchg
jmp
in
sbb
cmp
xchg
jp
rcr
popf
fidivrs
xor
sbb
xor
inc
push
inc
cmp
test
pushf
adc
iret
push
test
mul
pushl
jne
push
fisubrl
jns
fistpll
xor
pop
mov
repz
dec
jae
lods
xor
outsl
jg
mov
dec
cld
sbb
pushf
mov
decl
pop
bound
push
pushf
adc
outsl
or
sti
nop
test
das
sbb
mov
mov
aas
mov
subl
ss
cli
je
mov
std
xchg
mov
sti
dec
ljmp
dec
fiaddl
repz
xor
mov
in
lock
pop
mov
cmp
addr16
xchg
inc
popf
jp
cmp
inc
cmc
clc
nopl
fnstcw
test
sbb
notb
je
jg
mov
fnsave
in
scas
adc
ret
mov
aas
sahf
pusha
mov
jg
cmp
dec
lock
dec
adc
push
cwtl
inc
mov
jo
fdivrs
xchg
mov
out
fistps
pop
pop
shlb
adc
ds
lods
jge
ja
add
adc
mov
jg
or
adc
test
push
adc
cmpl
clc
lcall
add
mov
or
hlt
sti
scas
negl
push
mov
jae
push
imul
pop
enter
aad
or
lahf
push
ss
sub
loope
lock
jge
cmpsl
mov
mov
mov
fdivrl
shrl
stos
jne
ljmp
lods
aas
nop
lods
mov
dec
mov
not
sub
xchg
pop
sbbb
push
sub
xor
jne
cmc
pop
scas
pop
pusha
add
sbb
out
cmp
inc
mov
dec
jle
jns
imul
in
mov
mov
pop
cmpb
xchg
mov
mov
cmp
std
cs
nop
mov
push
mov
sti
xchg
fists
ljmp
xor
incl
jnp
or
xor
dec
sbb
stos
jl
push
rorb
jge
filds
or
add
fmuls
or
in
mov
repnz
stos
in
inc
push
repz
dec
fmulp
fdivr
jo
les
sbb
std
in
clc
hlt
or
shl
test
out
stc
mov
roll
xchg
int
arpl
dec
push
or
inc
in
decl
out
cltd
pop
ud2
pushf
pop
mov
lahf
jnp
inc
mov
mov
neg
or
mov
xorl
rclb
call
pop
dec
shl
clc
adc
push
add
fcmovnu
ret
cmp
cli
pushl
inc
add
sbb
test
mov
jecxz
mov
add
sahf
movaps
lock
and
clc
pop
sbb
shll
cmp
ljmp
testb
mov
pop
bound
test
incb
mov
in
fisubrs
push
imull
and
sbb
mov
punpckhbw
mov
pop
sub
inc
dec
ljmp
hlt
sub
lods
or
mov
std
incl
sbb
sub
mov
decb
mov
mov
xchg
mov
and
push
adc
hlt
call
sub
mov
cld
shrl
jb
xchg
out
int
pop
mov
mov
or
and
sub
lahf
xchg
push
xchg
nop
dec
insl
or
dec
fs
pop
mov
bound
in
call
cmp
sub
mov
xor
add
out
movsb
cmp
dec
pusha
add
sti
mov
insl
inc
std
out
adc
cmpl
jg
std
mov
mov
cmp
sbb
jmp
xor
mov
or
push
rol
xor
push
dec
int3
addb
lds
xchg
repz
ds
xlat
fnstcw
push
mov
fdivl
rorb
rcr
mov
dec
decl
jl
sarl
inc
lea
in
and
sub
fyl2x
inc
jmp
xor
sti
jne
jmp
outsl
add
mov
mov
cmpb
cmpsl
add
add
sub
call
in
scas
sbb
lods
jmp
xlat
jecxz
mov
shll
dec
aam
jge
sti
aas
fdivrl
xlat
mov
mov
sarb
adc
rcr
int3
cmp
int
ja
clc
dec
popf
cmp
in
xchg
push
cmp
int3
mov
std
mov
mov
mov
pop
dec
jb
cli
cmpsb
and
xor
dec
jnp
cmpsb
mov
pop
inc
in
jg
hlt
push
inc
xor
mov
stc
in
imul
inc
add
mov
pop
jns
lret
in
xchg
clc
iret
ret
mov
lahf
shrl
sahf
out
jle
adc
and
inc
inc
insb
xchg
mov
lds
sub
loope
mov
shll
sbb
cmp
jg
loope
inc
cld
mov
test
test
add
sub
filds
or
push
and
adc
jnp
pop
jne
push
lret
sbbl
mov
test
jo
out
fisubs
add
inc
cmc
add
jbe
dec
xor
jl
addr16
jg
mov
movsl
xor
mov
hlt
out
dec
arpl
xor
xchg
pcmpeqw
sbb
cmp
test
push
data16
mov
pop
sbb
fbstp
xlat
sub
pop
and
cli
shl
clc
pop
sbb
stos
nop
add
mov
sar
pop
inc
jl
shl
mov
rcll
jno
add
or
stos
xchg
test
adc
adcb
mov
push
daa
fbld
inc
xchg
test
loope
mov
ja
rorl
rclb
or
cmp
push
fsts
mov
fisttps
xchg
mov
mov
clc
mov
xlat
adc
and
arpl
incl
add
pusha
sbb
xchg
mov
jg
lock
sub
adc
push
lea
fidivrs
add
xor
stos
sub
mov
adc
pop
xchg
jno
cld
iret
xchg
jno
and
int
ret
add
ljmp
std
incl
pop
inc
jb
jle
outsl
fidivrs
sbb
and
mov
aas
inc
enter
fisttps
add
imulb
ljmp
scas
mov
in
inc
cmp
call
decl
testl
pop
rolb
icebp
aaa
cmpsl
inc
iret
dec
add
jo
lret
test
jg
loopne
sbb
fucom
loop
js
ret
push
mov
jae
loop
rorl
scas
mov
xchg
decl
ficoms
mov
popa
xor
rcl
sbb
fxch
jmp
sub
mov
sub
pop
mov
popa
sbb
push
push
popa
cmp
loop
test
cmp
and
aaa
jb
cmp
popa
dec
pop
mov
dec
dec
sbb
xlat
decb
jl
or
mov
pushf
stos
ret
and
sbb
outsl
jl
in
add
das
lock
jb
dec
sbb
xchg
or
mov
pop
sarb
inc
out
frstor
call
add
nop
fwait
dec
cmp
xor
mov
loopne
inc
xor
pop
imul
pop
cmp
sbb
cmpsb
arpl
std
xchg
xchg
push
mov
cmpsb
push
pusha
mov
pop
mov
push
dec
pop
outsb
inc
ret
dec
cwtl
rorb
and
ror
scas
push
lahf
add
sub
pop
dec
ds
pop
stos
or
aam
push
ja
inc
jle
add
and
int
mov
js
mov
data16
inc
fidivl
out
mov
sahf
cmp
inc
mov
dec
xor
fdivs
addr16
repz
insl
mov
push
lods
outsl
mov
or
sub
imul
call
shrl
test
stos
jne
or
jmp
cmc
call
pusha
cmc
sbb
mov
arpl
int3
sar
mov
seta
fs
or
mov
shrl
mov
bound
mov
and
adc
adc
jecxz
jecxz
or
dec
push
das
inc
or
xchg
aas
add
dec
iret
pop
rolb
cmpb
lahf
sbb
sarl
incb
negb
xlat
dec
pop
neg
push
mov
popa
ret
jae
sarb
sarl
jecxz
mov
pushf
xor
shll
push
aam
jmp
add
std
jecxz
decl
jae
or
fwait
jg
incl
mov
push
jae
flds
incl
lods
sub
and
mov
pop
push
push
mov
enter
es
jg
loope
andl
cwtl
or
out
jmp
mov
fisubs
cmp
iret
cmp
flds
pop
push
sbb
loopne
inc
lea
adc
and
pop
cld
jge
cld
adc
xor
cmp
clc
call
test
enter
mov
cmp
movsl
push
sub
mov
sbb
inc
dec
adc
test
cmpsb
cmp
lock
cmp
and
or
jecxz
xor
mov
call
in
mov
out
std
pop
andl
mov
cmc
loop
mov
adc
jp
iret
std
xlat
gs
out
repz
add
loop
clc
int
ret
lcall
mov
pushf
inc
xor
cmp
jecxz
test
push
int
aad
mov
add
jg
sub
jge
dec
repnz
dec
insb
mov
cld
decl
arpl
jae
lods
add
xchg
dec
movsl
ja
xor
jge
xchg
decl
jg
test
inc
enter
pop
jb
vcvtdq2ps
cli
sub
pmulhw
imul
jg
lea
ja
sbb
hlt
loope
fucom
sbb
mov
out
mov
push
pop
jno
outsl
xchg
inc
call
cld
push
mov
sahf
xor
das
push
pusha
jge
dec
mov
and
out
add
mov
push
in
mov
sarl
sub
cmpxchg
jnp
js
add
jmp
cmp
pop
ljmp
sub
push
mov
aas
mov
dec
mov
add
pop
test
int
mov
cs
decb
icebp
fmull
xor
ficompl
ja
xor
inc
cmpsb
cli
fistpll
out
hlt
ss
pop
fimuls
add
mov
dec
add
sti
push
xor
cmp
push
js
mull
ret
sbb
data16
lods
das
lock
adc
out
les
dec
jne
sti
rcll
xor
in
in
dec
xchg
push
inc
leave
mov
xchg
mov
jg
dec
jmp
notb
bswap
decl
cwtl
and
idiv
jge
repz
add
je
inc
cltd
movsl
mov
jnp
inc
mov
push
fisubl
or
ja
out
adc
mov
add
pop
xchg
inc
incl
out
and
and
pop
aaa
test
clc
bound
cld
jns
lods
pop
stc
or
rcrb
orb
dec
jl
sub
dec
jns
or
or
pop
fs
imul
pop
jge
movsb
dec
sbb
lock
xor
pushf
mov
pop
fisttps
fistpll
mov
sbb
xchg
movsl
push
jae
lods
mov
icebp
popf
lea
cmp
dec
mov
clc
mov
jmp
jno
or
dec
outsl
jmp
pop
dec
loopne
cli
pushf
xchg
dec
push
and
sbb
pusha
js
sub
fadds
shll
push
xchg
push
lret
sti
jg
test
sti
dec
xchg
push
jmp
rol
pop
push
sbb
xor
pushl
call
in
jmp
sti
xchg
mov
mov
inc
in
shll
adc
sub
inc
call
pop
add
and
outsl
loopne
pop
fstpt
fadd
jmp
std
cli
add
rcrb
mov
loope
ljmp
and
xlat
in
inc
jmp
movsb
call
enter
fwait
pop
pop
mov
fabs
lahf
sti
push
out
push
pop
add
mov
inc
shrl
push
cmp
sbb
xchg
cmp
adc
sbb
aad
add
test
js
cs
pushl
sahf
adc
xchg
out
std
out
std
nop
dec
inc
jecxz
add
adc
test
gs
aas
push
orl
cs
cmpb
in
jg
in
dec
inc
jl
dec
fsts
and
lret
mov
mov
jecxz
sub
xchg
jbe
inc
std
sbb
cwtl
jne
adc
push
jg
aas
or
inc
call
pop
loop
inc
stc
fmull
incb
or
push
add
jg
mov
mov
hlt
fdivl
roll
sub
or
push
sub
stos
lds
pop
add
mov
pop
dec
jp
xchg
push
jle
pop
aas
sbb
xchg
fmuls
fbstp
out
pop
mov
sub
sti
mov
add
stc
or
pop
inc
inc
inc
mov
in
mov
add
xor
mov
pushl
cmp
or
xor
mov
inc
loopne
test
loopne
hlt
push
fldcw
sbb
add
decl
addr16
cwtl
mov
inc
push
jo
es
jnp
inc
mov
ljmp
inc
push
call
mov
pop
pop
add
jb
es
mov
adc
mov
popf
adc
aas
rcll
das
arpl
std
ret
sti
xchg
outsl
mov
fisubrl
xchg
iret
dec
pop
jle
dec
fadd
jp
push
inc
jno
aas
lret
ficomps
add
inc
xor
popa
imul
cltd
mov
test
lcall
mov
popf
imul
cmp
and
push
decl
mov
cld
dec
mov
or
jg
or
lods
xchg
add
std
addr16
out
dec
sub
pop
push
es
mov
push
ss
scas
mov
cmc
jg
or
inc
loopne
and
adc
cmp
outsl
shl
test
pop
push
ret
pop
cvtps2pi
les
xor
shlb
sti
out
sub
xor
shl
and
pop
hlt
lahf
or
cmpsl
xor
nop
cmp
mov
iret
movsl
jns
sbb
cld
shl
js
or
pop
mov
xor
fisubrl
mov
sti
xor
push
into
pusha
mov
jl
lea
cld
fdivs
xchg
pop
add
or
mov
dec
jmp
adc
jge
cmp
in
ljmp
cmc
or
or
push
aaa
fcmove
mov
and
xchg
or
ljmp
jnp
gs
mov
and
sbb
fs
lret
adc
mov
out
push
pushl
inc
repz
mov
imull
das
jnp
mov
outsb
add
jl
mov
js
add
adc
loopne
ljmp
push
lret
jl
sbb
int3
lcall
shlb
clc
bound
dec
fbld
or
add
add
sti
or
jo
fistpll
clc
jecxz
ja
test
push
clc
cmp
stc
adc
sti
addr16
loop
shr
push
icebp
adc
fiadds
and
aas
idivl
add
popf
mov
and
cmovg
inc
xor
int3
dec
cmp
jg
pop
insb
lret
ljmp
or
and
mov
lcall
out
js
aas
ret
addr16
adc
jne
in
and
mov
idivb
cli
mov
sahf
or
or
aas
dec
insb
add
mov
sahf
aaa
xchg
mov
test
loope
loop
lock
clc
adc
mov
push
je
sub
inc
cwtl
inc
decl
or
lret
add
nop
and
push
jle
jmp
js
insb
mov
mov
sbb
movsl
sbb
adc
leave
push
mov
out
ja
or
rcrb
jle
sub
iret
clc
jo
mov
xchg
jnp
cmp
sub
test
pop
or
sub
push
fnclex
mov
mov
push
xor
mov
das
lds
xor
enter
mov
in
aaa
in
pop
or
jg
js
fbld
sahf
jg
and
dec
sbb
cmpb
fsts
pop
mov
out
std
mov
mov
lods
sbb
sahf
pop
xor
mov
daa
dec
sbb
xchg
xchg
inc
mov
mov
dec
aas
inc
call
jo
int3
sbb
loopne
cmpsl
pop
push
orb
push
push
jmp
sub
jge
rcll
mull
mov
sbb
ror
mov
nop
add
jnp
cmp
mov
fisubrl
pop
push
in
add
clc
rolb
jecxz
out
sub
sbb
inc
movsb
sbb
mov
jg
lahf
xchg
mov
inc
stos
jp
add
cmp
lock
orb
push
loope
rorb
icebp
jmp
stos
jp
fidivrs
dec
cwtl
imul
or
nop
aas
mov
jmp
lcall
mov
jl
mov
sub
and
ret
movsb
test
mov
sahf
fs
lock
loopne
in
push
jg
inc
jne
cmp
dec
std
movl
pop
cmp
aas
lret
xchg
mov
or
lcall
shrb
jecxz
xor
in
movsb
popa
inc
dec
pop
stos
rol
div
mov
or
sti
mov
cmpsl
cmp
xchg
icebp
pop
imul
sub
shr
or
xchg
test
loopne
sti
aam
lahf
loope
pop
xor
lcall
push
push
adc
adc
pushf
pop
jbe
addl
sub
movsl
push
fistpll
lods
mov
push
stc
cmc
stc
addb
jmp
out
inc
stos
outsl
cli
test
xchg
cmp
xor
push
fnsave
push
sbb
ret
inc
decl
call
es
pusha
mov
std
ret
mov
movsb
pop
clc
xor
inc
les
mov
mov
and
push
mov
cmc
fstpl
ljmp
pushf
loopne
jp
mov
push
xor
mov
jg
mov
sbb
je
arpl
clc
xchg
xlat
jnp
nop
adc
add
mov
mov
xor
mov
dec
daa
lds
mov
flds
dec
xlat
testl
push
repz
xor
das
rcr
jle
mull
adc
inc
bound
ja
ret
pop
jns
popf
js
sbb
add
xor
xor
lret
jmp
out
fs
cmpsl
shll
cld
mov
icebp
cmp
call
out
cmp
icebp
xor
aas
fdivr
and
orl
jo
addr16
push
shll
add
pop
sbb
jmp
xor
incb
fimuls
out
adc
cmpb
sub
filds
js
pop
cs
enter
inc
push
adc
push
add
pop
push
aam
out
loop
ds
lea
stos
andb
test
jmp
cs
inc
add
leave
cmpsb
xchg
mov
sti
or
dec
mul
stos
cli
xchg
mov
ljmp
mov
add
add
pop
rcll
out
adc
lea
std
sub
mov
cmpsb
add
and
movsb
loop
cld
cmpsl
push
dec
faddl
out
jl
mov
lret
xchg
add
mov
mov
or
fwait
mov
or
dec
ss
mov
lock
xchg
in
mov
out
push
decl
push
push
jecxz
ljmp
jnp
ja
inc
and
dec
sub
aas
cmp
divl
out
pop
aas
aas
dec
ret
ficomps
fwait
jnp
mov
popf
or
clc
das
jle
gs
xchg
pop
push
cmp
lret
or
stos
rcl
sbb
cmc
push
adc
mov
lret
aaa
or
push
jl
adc
and
lret
test
and
add
inc
or
inc
cmpb
cmc
cs
pop
pop
mov
or
pop
sarb
roll
cmp
ljmp
cmp
mov
imul
or
loope
and
fistpll
add
inc
xor
mov
push
cmc
popa
pop
jbe
mov
dec
loopne
sbb
pop
xchg
push
xchg
inc
test
sbb
jge
jnp
pop
dec
sar
push
mov
call
jmp
xchg
in
pop
push
sub
add
adc
jo
or
pop
add
shr
std
jg
jg
enter
fiaddl
andl
push
ret
push
pop
idiv
fisttps
cs
loopne
stos
fstps
leave
negl
fcmove
mov
mov
daa
loopne
loopne
pop
stc
in
div
call
sub
mov
xchg
adc
xor
outsb
ret
bnd
lods
mov
jno
mov
jne
inc
mov
lcall
clc
iret
mov
inc
es
fcmovb
and
imull
data16
mov
jnp
ja
call
das
pop
sub
fs
mov
jmp
decb
cli
cmpsb
mov
call
subb
mov
jg
loope
inc
sbb
stc
out
or
xchg
mov
movb
adc
mulb
add
cmc
jle
call
lock
sbb
jg
ljmp
popa
mov
pop
and
loop
inc
add
dec
pop
dec
insl
add
adc
stos
push
insb
stos
mov
out
fistpll
movsb
mov
in
jmp
gs
and
jle
mov
scas
daa
xor
jg
cli
aas
lods
adc
and
das
cwtl
xchg
mov
arpl
sub
fstpt
adc
sub
aas
sarl
rorl
inc
lds
adc
adcb
xor
xchg
aas
ret
std
fdiv
jno
lods
cs
popa
scas
and
xor
mov
lods
ds
fcmovnbe
add
clc
mov
adc
mov
sarl
and
inc
lahf
cli
in
inc
xor
inc
outsl
adc
sbb
push
js
jae
mov
lods
out
xchg
hlt
fmull
loope
jae
pop
mov
aam
jb
xor
rcl
mov
xchg
movsl
or
or
mov
std
mov
adc
mov
add
add
decb
push
pop
and
jbe
push
mov
test
repz
lahf
fs
pop
cmp
out
out
ficomps
lods
dec
cmp
xor
gs
fcmovnb
inc
adc
test
xor
and
pop
xchg
fs
mov
and
in
fidivl
mov
jecxz
push
add
push
loope
adc
fildll
idiv
insb
push
or
iret
data16
iret
xchg
jp
out
add
notl
sbbb
fs
mov
cmc
aaa
sub
in
imul
jno
inc
lcall
fildl
push
imul
sarl
ret
mov
test
in
jno
cld
neg
mov
aam
addr16
inc
pop
sbb
clc
iret
pop
pop
imul
imul
sahf
dec
pusha
insb
in
or
add
ret
jge
pop
int3
rclb
sub
push
xchg
in
popa
cmp
or
sub
out
cwtl
mov
or
in
out
or
mov
add
dec
mov
and
aaa
jl
inc
jg
inc
cmp
popl
dec
push
sbb
or
mov
std
js
scas
xchg
iret
push
fistpll
push
lock
out
test
adc
cmc
popf
rcll
lahf
rcl
jecxz
mov
add
shrl
mov
pop
stos
pop
jmp
icebp
xchg
out
push
jnp
or
scas
xor
jg
ss
or
adc
shr
daa
sbb
push
sbb
test
mov
incl
std
icebp
pop
insb
fs
dec
fistps
into
rolb
jnp
mov
mov
aas
out
push
sub
lcall
or
mov
cwtl
lahf
lock
insb
push
adc
jnp
lcall
mov
loop
push
decb
loope
in
leave
pop
test
push
clc
outsl
sbb
mov
cli
popa
jno
pop
pop
lea
pop
jge
loope
mov
imul
or
inc
aas
jmp
imul
push
push
inc
loop
xor
movsb
push
fstps
leave
in
mov
dec
push
js
or
ret
call
or
lea
mov
cld
xorb
pop
pop
push
xor
dec
xchg
cmp
loope
clc
out
icebp
call
pop
push
sbb
add
enter
aas
jg
cli
inc
xor
test
icebp
aas
or
lea
ret
mov
sti
jne
push
adc
push
jb
lds
cmc
mov
lret
adc
pop
loopne
aas
sti
mov
ljmp
dec
mov
js
adc
inc
subl
ja
stc
and
mov
fwait
bsr
aam
cmpsb
inc
mov
dec
test
ds
cmp
push
pop
cld
daa
cmp
mov
fucom
and
jle
jmp
cmp
call
jmp
add
movsb
popa
lret
mov
sbb
jmp
adc
or
andb
mov
fsubrl
cmp
into
repnz
gs
sub
mov
cmpsb
jle
mov
das
aad
in
add
mov
jge
incl
repz
js
js
movsl
inc
mov
push
mov
loope
mov
loope
inc
movq
cld
std
jg
lcall
pop
mov
sbb
sbbl
inc
fincstp
mov
in
jecxz
cmc
aad
in
push
mov
jle
hlt
jg
cmpl
inc
xchg
push
sub
pop
ljmp
ret
or
nop
dec
jno
cmp
cmp
jecxz
xchg
test
mov
pop
push
cmc
scas
jne
cwtl
outsl
decl
decb
icebp
arpl
jb
add
dec
cmc
cli
out
ds
addr16
cmpsb
addr16
out
pop
mov
mov
jnp
cmc
xchg
ljmp
mov
and
dec
dec
cld
fsubr
pop
mov
jbe
imul
out
jg
ds
jno
sub
mov
imul
lea
popa
adc
mov
sub
dec
push
jb
out
push
jmp
dec
xor
cld
mov
pop
aas
mov
bnd
ret
jae
sub
pop
call
jmp
insb
pop
js
shll
inc
mov
out
icebp
idivb
inc
mov
jno
lea
jmp
fnsave
sub
pop
icebp
pop
test
enter
and
filds
rcl
or
rcl
jg
jecxz
xchg
daa
inc
jmp
cmpb
jp
jecxz
xchg
lods
adc
push
imull
cmp
ljmp
pop
inc
adc
jl
xor
mov
mov
mov
cmp
call
add
imul
loope
out
pushf
orb
dec
shr
pop
mov
in
and
dec
subb
fwait
imul
and
fwait
jle
in
rcll
adc
add
jg
aad
aad
popa
jo
sub
je
decb
sbb
push
in
mov
repnz
mov
hlt
xchg
scas
fwait
out
add
jbe
enter
add
cltd
loop
cli
das
sbb
cmc
je
jl
test
cmpb
repz
dec
lods
aaa
push
mulb
mov
aas
ret
aas
mov
mov
dec
add
jle
ret
mov
fwait
sbb
ret
push
shll
out
shr
data16
pop
xor
daa
imul
lahf
mov
xchg
mov
aas
mov
mov
add
push
mov
jge
outsl
cmpl
mov
pop
push
pusha
andl
pop
sarl
arpl
pop
lods
cli
inc
mov
and
es
adc
stc
imul
jg
jecxz
jno
pop
add
cmp
jns
sub
xchg
leave
iret
std
pushl
mov
add
aas
pop
imul
test
lods
cmp
fs
lret
adc
add
or
out
ja
sbb
pusha
bound
mov
jno
iret
sbb
inc
ret
shll
xchg
and
neg
sti
daa
ret
fldlg2
pushf
rolb
scas
ja
jnp
sbb
jo
sbbb
adc
stos
subb
pop
jmp
inc
adc
rolb
int3
xor
fidivs
xchg
xchg
xchg
fwait
hlt
adc
push
pop
jg
call
mov
out
cmp
push
inc
ret
sbb
clc
lahf
lock
lret
test
mov
sti
ja
lahf
fstpt
lock
inc
fimuls
jg
dec
cmp
mov
mov
push
out
ret
xor
sub
movsl
fisubrs
adc
pop
into
add
movsl
stos
cmp
jmp
loop
addr16
sbb
lock
in
mov
js
popf
mov
or
cli
subb
loope
aaa
rcrb
mov
sub
pop
and
push
aam
push
jno
std
ret
jg
std
shrb
les
xchg
cmpsl
aam
fsubrl
add
or
xchg
pop
sbbl
insl
cld
mov
incl
int3
mov
popf
sub
mov
mov
mov
hlt
mov
notb
dec
add
test
lock
push
xchg
pop
mov
dec
or
inc
adc
ja
add
fistpll
cltd
adc
rorb
xchg
push
ljmp
negb
cmp
mov
jne
fidivs
out
popf
cmp
pop
mov
shrl
sub
xlat
aam
mov
jg
clc
rclb
mov
aam
dec
arpl
mull
pop
mov
and
jle
inc
mov
mov
dec
loope
popa
popa
popf
into
xor
jmp
jmp
cld
xor
ret
scas
sub
mov
aam
add
sub
lcall
xor
push
fcomip
adc
or
push
cmp
mov
jp
push
mov
inc
mov
arpl
dec
hlt
jae
sub
mov
sar
cmp
dec
outsb
flds
jecxz
dec
push
xchg
add
clc
mov
jp
cli
adc
fwait
mov
sti
scas
shr
ficoms
push
stc
sub
jl
out
ffreep
jb
notb
cmp
adc
out
std
pop
cld
dec
fs
call
inc
jno
ljmp
ja
cli
adc
xor
lods
push
aad
jg
fdiv
fisubl
add
mov
lcall
push
test
mov
xchg
andl
mov
mov
in
inc
pusha
mov
js
cs
cmp
jge
les
dec
cltd
sub
clc
pop
cmp
nop
mov
lods
lock
ja
jg
in
mov
push
sbb
lcall
mov
mov
or
and
jg
jecxz
jno
loope
xor
push
xchg
push
das
mov
mov
sarb
jp
fistpll
daa
and
pop
add
ja
adc
dec
push
popa
mov
push
imul
mov
pop
jl,pt
call
fsubrl
ficomps
aas
sub
add
push
dec
inc
test
lods
ffree
lods
idivl
cmp
jnp
pop
push
add
xchg
out
jnp
in
xchg
outsl
jno
leave
push
into
mov
inc
loopne
push
scas
and
out
mov
icebp
dec
inc
fdivrp
in
aas
mov
push
fs
out
inc
pop
and
sbb
push
push
mov
aas
or
or
jno
add
insb
popa
dec
es
push
jecxz
pop
or
push
fbstp
add
cmp
cmp
enter
dec
xchg
dec
or
lret
std
pop
sar
pop
loopne
cld
pop
rcr
pop
aas
and
aas
jg
dec
mov
out
mov
jg
sti
rorb
push
cwtl
mov
ss
or
mov
mov
jle
std
std
pop
jmp
jne
aad
lds
cmp
and
nop
mov
xor
add
lea
sbb
lock
cs
das
xor
aaa
scas
xchg
jmp
loopne
and
out
sub
out
aas
mov
jg
addr16
aad
xchg
pop
psrlq
cmp
dec
stc
and
dec
je
xor
mov
pop
cltd
jle
push
outsl
dec
cmpsb
add
inc
rolb
aaa
addl
inc
push
scas
inc
mov
and
and
and
mov
inc
dec
sub
aad
pop
push
jns
dec
lcall
xchg
hlt
aaa
mov
cltd
js
mov
sub
xchg
or
dec
jns
push
emms
sbb
sbb
aad
les
cld
dec
push
out
cld
jg
xchg
loop
das
mov
or
js
aas
adc
incl
daa
je
daa
fdiv
push
xchg
jnp
cmc
lahf
cmp
push
jmp
or
clc
mov
jg
stos
jg
cmp
cmp
daa
movsb
loopne
mov
sbb
aam
in
in
xchg
cmp
push
int3
mov
cwtl
add
out
mov
sahf
aas
push
mov
imul
adc
jg
pop
es
mov
mov
movsl
xchg
pusha
jo
pop
adc
sbb
pop
mov
arpl
or
add
dec
adc
mov
decl
mov
mov
cmpl
mov
shll
cwtl
lods
push
in
jnp
mov
adc
mov
add
push
jne
sahf
mov
cli
nop
rorb
ror
mov
ljmp
sub
movsb
inc
add
sti
push
cld
jg
inc
mov
ds
sub
aaa
fldln2
fucom
mov
repz
setne
fadd
sti
adc
inc
inc
dec
jb
cwtl
inc
sahf
sbb
idivl
push
rolb
into
add
push
cmc
pop
cmpsl
jg
loop
int3
pusha
aad
out
add
push
mov
out
es
cmp
pop
sahf
inc
ds
arpl
scas
pop
std
mov
dec
jecxz
aad
dec
shr
mov
ror
insl
dec
gs
repnz
outsl
iret
sub
fcmovnu
sub
mov
movsb
in
test
das
inc
cmpl
mov
push
jg
clc
lahf
mov
pop
lock
sahf
xchg
lods
dec
adc
lods
sbbb
and
jecxz
or
jmp
cmc
arpl
or
add
and
fdivr
addr16
hlt
push
loop
rcrb
lods
fsubrs
or
mov
mov
popf
push
lcall
pop
lods
stos
shl
dec
push
dec
push
sahf
incb
add
inc
or
test
test
dec
push
jae
mov
test
cmp
push
scas
mov
push
inc
and
ret
je
aad
stc
fcmovnb
add
push
rcll
inc
inc
pop
sub
xor
xchg
inc
mov
pop
jp
lahf
aad
mov
mov
add
mov
stc
cmc
and
push
mov
out
lock
ljmp
mov
add
cmp
into
adc
in
adc
cld
pop
negl
sub
pop
jbe
sub
sbb
mov
xlat
xchg
mov
adc
mov
dec
shlb
mov
cmp
jecxz
jge
mov
popa
je
shlb
sbb
push
or
adc
mov
jmp
dec
xchg
mov
out
mov
sbb
or
xchg
test
fisttpll
aam
push
aaa
lea
sbb
lock
sbb
mov
stos
lcall
xchg
cmp
mov
sar
and
stos
ljmp
push
inc
jecxz
lahf
cmp
dec
jmp
adc
push
jmp
mov
loopne
cmp
add
mov
into
out
leave
pop
or
pop
out
xchg
push
das
push
out
inc
mov
movsb
mov
cmpsb
test
cli
xchg
clc
out
shr
lods
add
push
jg
ja
mov
push
out
ljmp
pop
lret
cmp
das
clc
out
fstpt
scas
cmp
inc
pop
dec
mov
arpl
ret
mov
insl
jl
loop
aam
aad
inc
movsl
test
lods
xchg
fistpll
dec
fwait
sub
ja
mov
mov
dec
mov
jp
fdivr
mov
fmuls
lds
push
cld
or
ficoml
std
jae
jno
mov
call
dec
adc
cmp
mov
addr16
sbb
sarl
or
push
jb
fistpl
mov
rcll
pop
add
pop
icebp
push
bound
sbb
ja
mov
frstor
call
loop
dec
jb
dec
aad
xchg
mov
adc
pop
insl
sub
and
jg
pop
mov
mov
sub
int3
jg
cs
jle
jecxz
push
inc
mov
mov
adcl
adc
sub
movsb
nop
xchg
cmp
ret
push
adc
cmp
aaa
push
jg
iret
popf
pop
hlt
xor
jg
dec
cltd
jl
and
inc
hlt
pop
out
mov
lods
and
mov
aad
insb
cmp
ss
hlt
scas
testl
ljmp
test
inc
arpl
jnp
inc
in
outsb
rolb
lods
std
fnstsw
xchg
std
dec
xchg
add
mov
mov
fs
xchg
cmc
stos
sub
mov
inc
pop
pop
out
out
std
mov
test
fcompl
xchg
sbb
xchg
cltd
add
in
push
dec
jmp
inc
push
shrb
cmp
inc
sbb
cmp
pop
flds
or
stos
pop
cmpsl
inc
mov
aad
push
inc
imul
movsb
cmp
dec
js
lods
push
dec
pushl
mov
pop
idivl
sub
sub
ja
dec
sbb
enter
outsl
mov
loope
lret
out
dec
leave
jg
ja
jg
mov
hlt
fwait
movsl
mov
jb
sti
jbe
test
inc
lea
movsl
arpl
mov
xor
sub
mov
out
cld
mov
or
hlt
push
mov
ja
sbb
dec
adc
fisttpl
sbb
cmc
aad
loope
sbb
mov
dec
in
lock
mov
sbb
cmp
add
inc
clc
jg
push
adc
enter
push
int3
push
push
jle
cli
xor
or
jecxz
jecxz
sub
cmpsb
jae
fdivl
loopne
mov
inc
cmpsb
or
dec
arpl
xchg
dec
dec
call
in
add
mov
popl
or
inc
outsb
iret
and
push
outsb
jne
outsl
repz
xlat
xchg
inc
pop
jg
aas
push
lahf
cltd
xor
and
stc
mov
rolb
aad
fbld
sub
pop
out
in
mov
push
adc
lock
inc
das
cld
mov
sahf
mov
hlt
and
dec
add
sti
xor
divb
pop
cmpl
and
xchg
lods
imul
adc
sbb
jae
jle
jle
mov
or
add
ss
lahf
adc
mov
jne
test
sub
and
aas
inc
scas
add
addr16
test
hlt
pop
mov
adc
jg
jb
movsb
outsl
mov
negl
rep
scas
clc
test
jg
sub
mov
ss
mov
push
sub
out
push
bound
jg
mov
lahf
mov
cmpb
cwtl
test
xchg
shl
xchg
loop
pop
aas
into
sbb
sub
out
jo
in
sbb
ss
stos
sbb
jge
mov
popa
mov
inc
loop
adc
das
mov
ljmp
pop
jb
mov
adc
aas
int3
sub
or
mov
mov
jge
rcll
cmpsb
stos
or
adc
sub
iret
jbe
fbld
sub
ss
jg
sarl
inc
push
ss
pop
push
or
das
sub
cmp
pop
aam
data16
shrl
sub
ss
mov
pop
and
cmp
inc
pop
arpl
cmpsl
repnz
mov
shlb
jg
cwtl
pop
or
rolb
or
mov
or
add
mov
aad
jge
sbb
ret
sti
push
out
push
push
xorb
loopne
outsb
jmp
int3
cmp
cld
sarl
dec
mul
decl
sbb
data16
and
cli
fwait
adc
js
fwait
or
test
ret
int3
sbb
out
xor
adc
push
lock
inc
in
aas
push
movsb
fcoml
xor
cmp
ret
push
mov
divl
pop
data16
cmp
mov
mov
hlt
int3
or
cmp
popf
sbb
arpl
mov
repnz
mov
xchg
mov
xchg
decl
fyl2x
stos
fidivrs
lods
sub
mov
jns
pop
je
js
daa
leave
cltd
jg
jle
sbb
push
pop
jnp
jae
aam
ret
addr16
arpl
push
in
mov
frstor
cmp
idiv
pop
sbb
mov
push
xor
loope
mov
jae
pop
dec
aaa
xor
lock
fists
mov
rol
cmp
fwait
jnp
repz
out
lret
pop
mov
or
cli
inc
jg
hlt
push
pushf
push
loop
sbb
adc
and
lods
clc
pop
aad
popf
idivb
es
pop
gs
jne
add
mov
bound
loop
lds
loope
sub
mov
ss
mov
faddl
sbb
imul
aas
daa
or
or
in
imul
adc
dec
imull
into
push
mov
enter
add
pushf
scas
aas
dec
call
cmc
mov
push
cmp
or
out
fisttpl
repz
lock
dec
xor
stos
fwait
adc
push
out
push
ja
mov
outsb
jmp
test
sbb
fldenv
mov
inc
add
xchg
jb
add
lahf
inc
test
mov
mov
adc
xchg
loope
jecxz
sub
and
aas
ja
and
hlt
mov
sbb
fstpt
jl
cli
mov
or
aad
sub
js
into
std
daa
jp
mov
mov
dec
inc
ret
cmpsb
imul
sub
jnp
pop
mov
dec
mov
outsl
sbb
xchg
sbb
sbb
push
incb
stos
ja
loopne
ljmp
dec
dec
push
hlt
jo
xchg
loope
std
popa
jns
pop
add
sub
push
lods
decb
lcall
pop
cmpl
fcoml
mov
lcall
mov
mov
cli
pop
push
aas
aam
sbb
subb
scas
sti
sbb
out
push
ljmp
ljmp
push
test
dec
popa
fdivrl
xor
negl
repnz
and
sub
adc
iret
lock
repnz
jnp
shl
test
jge
xor
push
ret
jmp
lock
dec
push
dec
and
fdivs
fsubrs
daa
push
sahf
test
std
std
pop
jo
dec
adc
add
js
shll
js
mov
mov
or
addl
dec
imul
fsubrp
sub
sbb
enter
cld
mov
cmp
sbb
shll
mov
and
add
fistl
mov
push
data16
and
jecxz
push
sbb
mov
inc
test
pop
xor
xor
outsl
ficomps
push
cld
popa
icebp
out
cmpsb
addl
mov
fisttpl
mov
mov
xchg
mov
into
mov
testl
repz
mov
mov
push
insb
mov
gs
push
lahf
add
cmp
and
cld
push
arpl
cmp
imul
cmc
jg
sahf
xchg
jne
sub
fsub
add
sbb
test
ja
call
cwtl
les
xchg
and
pop
test
stos
lahf
push
inc
cltd
fwait
lahf
mov
pmulhuw
jo
call
in
sub
clc
arpl
aas
popf
pop
jmp
lcall
adc
mov
pop
out
push
sbb
bound
push
sbb
jmp
les
pop
mov
jae
ja
cli
pop
mov
out
aas
add
cwtl
jmp
xchg
and
imul
cmpsl
ja
mov
insl
mov
jg
xchg
outsb
test
enter
sbb
sub
cld
xchg
cmc
dec
cmpsl
cmp
jle
mov
adc
sar
lods
test
push
adc
stc
movb
shr
cli
or
popf
outsb
dec
repz
std
aas
andl
mov
enter
dec
cmpsl
stc
lock
push
push
cmp
sbb
pop
and
xor
sub
jle
pushl
negb
xor
lahf
cmp
in
add
test
js
ret
lahf
stos
add
jo
sbb
std
xchg
fisubrs
xchg
dec
sbb
sbb
int
out
mov
jle
idiv
cmp
push
cmp
mov
and
ja
fcoms
pop
mov
andl
cmc
cmp
mov
pop
add
add
jge
loop
nop
xchg
mov
into
test
cld
adc
push
add
loope
or
test
or
in
hlt
adc
mov
pop
icebp
mov
jno
jg
jg
mov
rolb
mov
mov
pop
push
xchg
push
add
je
sti
out
lock
fs
xchg
data16
insb
or
jg
std
fistpll
or
imul
mov
mov
mov
scas
inc
or
ret
or
mov
jg
mov
pop
outsl
mov
icebp
decl
push
push
mov
enter
loopne
idiv
jmp
aaa
in
pushf
gs
nop
sub
push
or
fwait
pop
ds
std
iret
ret
or
mov
arpl
add
test
xor
and
movsb
into
jmp
jg
ja
or
in
mov
xor
arpl
sub
xor
or
push
lock
sub
lcall
shll
mov
jbe
lds
fdivrp
into
cld
lcall
mov
add
add
out
out
sbb
cs
incl
fsubrl
fldcw
cmp
sbb
add
sbb
push
xchg
mov
jmp
ds
sarb
cmpsb
xchg
push
dec
adc
ret
decl
cli
frstor
jmp
dec
jg
ss
test
jno
push
jg
fstps
cs
in
jge
cmp
or
adc
sti
and
cld
sub
inc
movsb
cli
popl
fistpl
sarl
clc
out
std
jg
dec
xacquire
sbbl
push
out
lea
mov
popf
jge
out
aam
or
mov
hlt
cli
jo
or
jne
add
pop
pop
cld
leave
hlt
or
aaa
sbb
xchg
mov
mov
test
fistpl
idivl
ret
fwait
cmp
js
push
ds
sti
mov
xor
insb
cmp
jo
add
fsub
pop
add
in
adc
in
loopne
cli
sbb
sub
mov
clc
sbb
mov
sbb
inc
push
outsl
jl
jo
inc
lods
push
loopne
call
xlat
lock
mov
stos
aad
mov
mov
mov
ds
movsb
jg
mov
xor
mov
jmp
xchg
adc
andb
and
decb
ja
nop
pop
inc
data16
jbe
xchg
sti
negl
rolb
cmp
leave
add
popa
mov
xor
push
inc
jg
loop
and
adc
sub
in
mov
imul
xor
inc
add
ficomps
mov
and
or
xchg
fsts
push
mov
imull
idivl
jae
psubd
call
jmp
data16
stos
xor
adc
xchg
sub
sub
xchg
ret
lret
cmp
and
cmc
pop
push
dec
sbb
cmc
cmp
in
xor
je
in
pusha
push
call
pop
repnz
mov
dec
mov
jg
leave
jnp
mov
jmp
push
pop
call
in
popl
ret
popa
lahf
cmc
sub
les
sbb
loopne
add
mov
sahf
adc
cmpsl
pop
icebp
mov
push
lcall
movsb
pop
pop
rcrl
ja
xor
aad
subb
xchg
xor
addr16
lahf
or
mov
fidivs
push
roll
xchg
pop
adc
cli
xor
nop
dec
cmc
mov
mov
pop
sti
shlb
movsl
gs
in
push
or
popa
daa
ljmp
jg
add
in
adc
ds
fucomi
rcrb
xchg
pop
pop
jae
sar
mov
ret
fmull
mov
sub
adc
dec
in
je
sbb
inc
std
iret
repnz
sub
cmpsb
and
in
daa
ret
in
jo
int
and
shll
in
ljmp
fistps
xchg
fldcw
iret
cmp
dec
mov
rcrb
cmp
cmp
popa
lock
rolb
nop
cltd
js
dec
or
sti
pushl
sbbb
loop
push
push
jo
stos
push
push
cltd
les
das
lret
mov
pop
lcall
pop
mov
aam
rcll
stos
xchg
bound
cmc
idiv
xor
sahf
mov
inc
sub
and
int
repnz
xor
rcl
sbb
jg
dec
jmp
sbb
stos
imul
out
inc
dec
call
sub
push
xchg
jnp
jg
popf
jns
xor
std
ret
mov
outsb
mov
push
jp
mov
xchg
push
dec
shrb
aaa
rol
xor
xchg
jg
in
pop
mov
sbb
inc
xchg
pop
and
xor
lahf
stos
cmpsl
add
bound
daa
std
cmpsl
mov
dec
rcrb
xor
movsb
cmp
push
pushf
xchg
sahf
scas
mov
mov
popf
sti
xchg
enter
jae
mov
mov
ja
pop
mov
jg
jp
out
std
or
sub
leave
sbb
or
nop
mull
jne
sahf
stos
sti
lds
mov
pushf
xchg
pushf
xchg
inc
sbb
and
sub
mov
fimuls
adc
add
es
icebp
adc
cmpsl
add
pop
jmp
ss
std
add
std
pop
or
popa
cltd
sbb
pop
xlat
sbb
or
mov
dec
aas
adc
push
jmp
add
iret
mov
popa
cmc
mov
sbb
pop
and
je
sbb
bound
mov
std
testb
gs
call
int3
push
daa
lret
xchg
xlat
sbbb
das
add
les
mov
mov
outsl
or
bswap
mov
mov
jle
loopne
fisttpll
lcall
push
rorl
mov
jmp
sbb
or
pusha
js
sbb
das
lods
bound
mov
xor
pop
cmpl
mov
add
mov
popf
jl
inc
jmp
lods
mov
mov
dec
pop
or
xchg
adc
cmpsb
or
rcrb
adc
fwait
cmpsl
sbb
mov
lds
mov
dec
hlt
pop
aas
push
icebp
push
movsl
sbb
int3
pop
inc
mov
cli
call
mov
imul
mov
mov
popa
test
sbb
xchg
sti
mov
sub
les
rclb
lods
xchg
mov
movsl
sahf
inc
cmp
icebp
stc
pop
add
and
cltd
push
inc
sbb
or
shrb
jg
outsb
lcall
ds
lods
popf
cwtl
xchg
mov
inc
popf
sbb
lods
sub
pop
push
xlat
mov
ja
int
lahf
xchg
xor
ss
stos
lods
lea
add
pop
into
cmp
loope
jge
dec
push
or
dec
inc
sub
out
push
pop
jecxz
mov
xor
cli
adc
je
fimull
das
pop
xchg
popf
fdivr
pop
mov
in
cld
or
xor
ja
cmpl
pushf
mov
jo
movsb
mov
xchg
xor
push
mov
scas
shll
jge
lock
out
std
stc
stos
mov
aaa
repnz
aaa
int
sub
into
jns
pop
and
mov
inc
pop
jmp
and
dec
inc
adc
push
lods
adc
and
popa
jl
ret
push
and
cli
ljmp
sbb
insl
xor
ss
inc
dec
push
jmp
xor
jl
mov
or
mov
push
lahf
sbb
movsb
outsb
push
into
fisttps
pop
xor
pop
adc
jb
je
xchg
out
sbb
fsubr
or
jae
and
icebp
mov
inc
stos
sub
aad
push
sbb
popf
shrl
push
mov
int
repz
jg
inc
push
mov
adc
adc
inc
pop
enter
push
or
enter
movl
ret
test
jbe
fs
adc
push
imul
loope
std
ds
mov
call
repz
fistps
and
test
fsts
xchg
ffreep
adc
dec
mov
pop
add
clc
pop
fimuls
dec
xchg
hlt
mov
adc
xchg
cmp
sub
xchg
fucomi
mov
xor
clc
enter
out
xchg
dec
loopne
stc
pop
shlb
fwait
cmp
add
adc
pusha
mov
jo
push
lods
jle
leave
cwtl
cmp
cmc
mov
push
push
mov
insl
dec
xchg
dec
ss
fdivrs
push
jne
orb
aas
stos
clc
pop
cmp
test
cmp
cld
aam
shr
sub
mov
add
test
cld
xchg
dec
jle
jbe
xchg
inc
push
push
add
std
jnp
pop
jp
cs
in
aas
ret
bound
xlat
fbld
stc
out
sbb
ljmp
shll
add
lds
sarl
mov
test
das
in
decb
mov
daa
sti
fistps
inc
outsb
jo
das
sbbb
clc
fnstcw
add
sbb
filds
decb
mov
lret
adc
dec
inc
out
std
push
fistpl
sti
js
jns
call
xor
push
push
push
mov
or
in
ud1
dec
pusha
xor
notb
iret
add
push
inc
inc
hlt
sub
inc
gs
popa
testl
cld
data16
xorl
sti
adc
inc
inc
inc
jle
push
sub
shll
xor
ss
jb
comiss
sar
mov
xchg
data16
push
push
inc
sti
fucomip
pushf
adc
xor
sub
cmp
jne
sbb
mov
and
adc
sbbl
pop
pop
and
out
inc
es
cld
push
mov
push
jbe
inc
mov
push
mov
sbb
or
inc
pop
jbe
fdivp
fbld
add
pop
arpl
pop
add
leave
sub
pop
sbb
outsl
sbb
dec
jbe
push
jbe
add
inc
pop
push
push
jae
add
movl
inc
jo
dec
std
pop
fcmovnu
xlat
fcomps
add
jmp
cmp
push
int3
xor
cmove
jb
sti
mov
fmull
dec
inc
popa
inc
push
cld
and
and
nop
add
inc
xor
inc
fcoms
pushf
in
fimuls
mov
das
inc
inc
jne
mov
add
mov
jno
sub
neg
outsb
or
push
mov
dec
inc
in
gs
dec
xor
inc
outsl
fldcw
pop
pop
push
aas
mov
cld
adc
sbb
xor
add
decl
add
stos
add
dec
add
mov
pop
ror
std
in
decb
and
test
add
add
add
xchg
ret
loopne
jl
call
std
lret
mov
cmpsl
add
dec
mov
mov
mov
scas
shll
pop
inc
lea
and
xchg
add
pusha
pop
xchg
fbstp
lock
hlt
int3
mov
add
mov
ret
or
add
cmc
or
clc
add
mov
or
in
add
add
add
add
push
fidivl
add
cmp
repz
add
test
mov
mov
add
clc
lea
adc
fsub
outsl
lods
jg
int
sbb
xchg
add
setb
push
rolb
outsl
fstpt
or
cmpsb
adc
jae
mov
add
jmp
add
and
sbb
add
inc
adc
ljmp
js
add
inc
pop
inc
add
nop
push
pop
add
mov
jbe
das
push
rolb
out
js
sbb
add
add
fmull
dec
pop
sub
and
fs
test
fstpt
add
mov
adc
stos
cmp
adc
mov
nop
ret
int
adc
fistpl
dec
mov
movsl
lea
adc
add
rcll
frstpm(287
repz
std
push
ret
add
add
mov
jbe
cmp
rep
push
mov
dec
jl
in
insb
pop
add
lea
inc
adc
lea
jne
lea
repnz
or
jge
pop
outsl
lods
movsl
in
xchg
xchg
sbb
xchg
test
out
testb
cmp
add
out
inc
xchg
pop
sbb
jae
add
add
nop
add
or
or
imul
bound
je
ret
int
jno
leave
mov
cmp
sti
lods
pop
pushf
jns
add
mov
ja
adc
mov
pusha
inc
add
stc
das
fbstp
mov
adc
and
jb
ja
and
insl
popa
and
insl
sub
pop
sub
inc
mov
push
mov
test
push
jns
xchg
cwtl
test
inc
mov
adc
cmpsb
mov
fstpt
subb
or
push
adc
pop
fdivrs
rcrb
fdivrp
push
dec
push
mov
pop
xchg
test
lock
add
mov
mov
les
or
mov
xchg
pop
add
or
cmp
lahf
out
and
jle
pop
jecxz
jae
push
nop
xor
jae
scas
add
in
sbb
adc
adc
jmp
jecxz
add
mov
and
lea
sub
jo
mov
mov
notl
dec
outsl
cmp
and
test
andb
push
xchg
movsl
aas
std
outsl
push
pushf
or
push
push
pop
outsb
inc
sbb
into
and
and
jle
fcmovne
and
jbe
xor
sbbl
cmc
jecxz
mov
fdivrp
mov
ss
add
in
push
popf
or
ljmp
stos
loop
mov
jl
fs
or
xor
xchg
fidivrl
xorl
test
or
add
push
xchg
inc
mov
pause
outsl
mov
adc
xor
shl
sahf
ljmp
sbb
add
mov
test
pop
sub
fwait
outsb
lea
xchg
push
xchg
aam
adc
arpl
ljmp
std
addb
cwtl
push
leave
push
mov
xchg
pop
fcomip
cmpsb
mov
xchg
outsb
incl
add
push
or
mov
fstpt
ficoms
lret
ss
pop
sbb
stos
jge
in
inc
pushf
daa
mov
addr16
fs
jl,pn
lcall
xchg
test
mov
mov
mov
hlt
add
xor
xchg
mov
insb
cltd
rcrl
xlat
sub
cld
jp
fildll
out
add
insl
add
add
inc
mov
pop
mov
pop
js
cli
push
test
aam
push
addr16
es
add
std
aaa
sbb
cmpsl
gs
sbb
sbb
dec
outsl
sbb
call
or
je
aam
push
sbb
cmc
adc
leave
fstps
jne
stc
lds
cmp
adc
in
insl
ret
jnp
pop
mov
jbe
push
pop
fdivs
out
jo
les
rep
movsl
inc
xor
sbb
push
rol
mov
xchg
push
pop
jb
movsl
ret
jmp
rcrb
addl
popa
popf
xchg
push
add
lret
pushf
loop
addb
inc
stos
lds
test
xlat
test
lcall
push
lahf
add
lea
mov
ljmp
add
add
fwait
loop
jno
jge
stos
sub
das
sub
outsb
out
mov
rorb
fs
mov
mov
adc
push
pop
mov
sub
lock
or
ljmp
mov
pusha
fcmovnu
rorb
and
int
pop
xor
iret
pop
pop
fmuls
xchg
inc
mov
les
or
fbstp
jno
cmp
rorl
sbb
imulb
popa
push
out
xor
xorl
movsl
in
movsb
mov
test
inc
mov
dec
sbb
jl
cmp
jge
add
fistps
jb
fadds
mov
ja
push
lea
push
in
lea
stc
mov
divb
fstl
outsb
jmp
mov
push
fucomi
jecxz
hlt
das
jge
and
shll
fcoml
shl
fdivrs
inc
jecxz
je
insl
les
xor
ffreep
lods
lea
fcomp
xor
mov
push
xchg
add
inc
dec
pop
js
mov
jae
outsb
mov
outsb
and
jnp
addl
arpl
mov
or
or
ret
and
jmp
inc
arpl
dec
and
inc
out
outsb
inc
pop
sub
cmp
lahf
cld
pop
dec
imull
out
and
xor
xor
daa
pop
ja
sbbl
mov
aaa
pop
dec
lret
or
or
rcrl
mov
jb
ljmp
ss
sub
aam
inc
mov
ret
leave
push
imul
scas
mov
lea
lock
cmc
shrl
ret
sub
xlat
pop
jmp
cwtl
test
test
dec
lods
jne
ror
sarl
loope
ljmp
shrl
je
into
test
cmp
out
mov
mull
mov
test
imul
ss
roll
dec
mov
les
lea
jp
loope
mov
xchg
outsb
fldt
add
in
scas
pop
ret
ss
or
jo
jnp
push
insb
mov
shll
in
xchg
call
add
cmc
jecxz
pop
arpl
dec
addr16
pop
ret
insb
es
cmpb
lret
test
jne
add
subb
adc
jne
das
cld
in
ret
xor
aad
jmp
pop
mov
fsts
loopne
pop
pop
jbe
jno
in
into
adc
mov
test
xchg
mov
and
mov
inc
adc
sub
push
push
roll
push
xor
flds
and
add
movsl
popa
or
shll
mov
lods
fbstp
into
mov
adc
repz
xor
out
outsl
pusha
cmp
iret
repz
cmpsb
adc
sbb
jmp
xchg
nop
cmc
dec
add
loope
ret
sub
xor
jle
leave
and
loop
pop
cwtl
bound
mov
dec
dec
mov
test
mov
xchg
test
adc
pop
xor
fcmovb
jl
mov
sbb
insb
or
push
sub
sahf
mov
fisttps
xor
lods
sbb
repnz
or
negb
adc
out
jge
repnz
ret
insb
cmp
xor
mov
push
loop
push
pop
fcomp
lcall
js
add
push
mov
pop
xorl
test
movsl
mov
jg
cmp
test
fistl
call
lds
les
mov
movsl
lret
pusha
lds
sbb
out
jle
jecxz
mov
test
and
mov
in
or
bound
sbb
adc
push
hlt
or
fistpll
dec
jb
out
jno
popa
inc
insb
push
sarl
ret
cld
push
push
and
nop
pop
inc
jo
lea
or
xor
cmp
rclb
inc
shlb
and
mov
js
sbb
aaa
in
fdivs
mov
pop
ss
mov
xchg
lea
repnz
loope
push
jmp
shlb
push
mov
imul
das
fcompl
or
icebp
test
jns
cmp
jecxz
fadds
into
pop
or
push
sbb
mov
jnp
mov
out
dec
fildl
sti
cmp
inc
jnp
pop
in
sbb
cltd
adc
or
mov
inc
pop
sbb
push
mov
adc
adc
mov
inc
mov
cmp
xor
test
cmp
sub
nop
jnp
insl
adcl
in
or
mov
test
insl
inc
shlb
loop
jle
add
or
sub
fcomip
daa
rol
mov
shlb
mov
fadd
add
dec
adc
icebp
pop
push
xchg
push
xchg
lcall
mov
push
call
or
lea
sub
dec
nop
mov
div
jns
test
sub
cli
pop
dec
test
insb
jg
mov
mov
rcrb
das
jno
inc
push
daa
pop
and
adc
aas
jp
js
pop
mov
pop
lods
stc
sub
outsl
fisttpl
shrl
insl
lea
mov
js
jbe
mov
pop
adc
mov
mov
mov
mov
or
lock
adc
or
mov
outsl
in
mov
cmc
lods
iret
sbb
push
sub
cmp
pop
inc
add
or
fildll
jne
aaa
adc
or
pop
pop
add
je
bound
lods
add
jno
xchg
mov
push
and
pop
pop
and
cmpl
xchg
test
and
pusha
and
sbb
test
in
adc
xor
jb
fisubrs
dec
cmp
sbb
or
mov
push
and
in
jmp
cld
addr16
jae
cmpsb
aam
pusha
dec
in
call
add
cld
xchg
cmp
jle
out
sbb
push
adc
xor
call
clc
jmp
sbb
or
fidivrl
imul
add
aaa
push
push
enter
testb
fisttpl
into
in
pusha
jns
dec
mov
mov
adc
rolb
in
push
dec
mov
in
or
insl
xchg
mov
popa
sbb
ret
mov
push
pop
xor
mov
test
icebp
jne
clc
sub
sub
mov
jmp
pop
shlb
call
cmp
ficoml
add
cmp
fcmovnbe
inc
arpl
mov
movsb
inc
jmp
mov
mov
test
inc
xor
ljmp
or
inc
test
push
inc
pusha
insl
jnp
insl
adc
stos
or
xchg
push
add
mov
sbb
inc
out
cs
outsb
push
icebp
cmpl
imul
cwtl
outsl
call
xchg
xchg
out
rol
loopne
loope
adcb
imul
fnstenv
mov
add
pop
imul
test
jl
adc
push
add
nop
mov
mov
mov
loopne
or
lods
test
and
jo
dec
push
pop
outsb
pusha
sti
dec
out
pop
cmp
adc
mov
xor
add
inc
dec
popa
xchg
data16
push
sbb
rcrb
mov
fistl
gs
in
sbb
aaa
xchg
mov
shlb
mov
inc
aad
xorl
cmp
mov
adc
aas
cltd
cld
outsb
pop
ficoml
ljmp
push
jb
call
aaa
or
push
leave
mov
ret
popa
je
fstpl
addb
stc
xchg
fsubrs
adc
pop
xlat
mov
movsl
shl
mull
jp
push
push
lahf
push
dec
pop
repz
add
adc
pop
fldl
push
xchg
or
insb
adc
loope
inc
inc
add
iret
mov
outsb
ret
lea
jo
out
inc
arpl
cmpsb
fwait
sbbl
push
pop
data16
add
cld
push
cmp
clc
fcmovnb
mov
pop
sub
dec
lds
inc
in
inc
jecxz
adc
psubsw
sti
cmpsb
out
cmpsb
test
notb
sub
jo
insl
call
enter
jle
ret
xchg
add
or
fcmovnu
mov
pop
aas
push
mov
inc
mov
and
in
stos
mov
orb
mov
inc
arpl
dec
cld
aaa
nop
rcll
fisttpl
stos
pop
rcr
int3
inc
dec
add
mov
dec
sbb
dec
pop
jg
inc
add
ss
fld
sarl
mov
push
dec
idivb
xchg
leave
pop
clc
in
inc
enter
dec
dec
mov
movsb
movsl
mov
pop
sub
rcrb
addr16
insl
or
lock
pop
add
fdivs
push
loopne
cwtl
xchg
xchg
pusha
mov
movsl
fisttps
push
and
lds
mov
xor
pusha
mov
js
mov
jno
arpl
repz
mov
sbb
adc
xchg
loop
test
sub
imul
push
lret
cmc
jp
into
leave
add
dec
decl
lahf
push
sub
pop
clc
aas
rcrl
push
test
shlb
pop
mov
movsl
lods
mov
jge
pop
ret
lods
in
ret
sub
push
dec
cmp
or
push
enter
gs
movsb
adc
inc
jmp
popa
imul
mov
fdivrl
lock
mov
pop
inc
inc
aad
pop
push
xlat
inc
jmp
pop
sbb
pushf
mov
push
or
movsl
cmp
aam
pusha
jo
cmc
push
adc
mov
or
test
mov
les
mov
jp
pop
sti
shll
orb
xorb
sub
enter
out
stos
xchg
movsb
xchg
add
xchg
scas
call
ds
pop
insl
das
mov
add
mov
cmc
mov
jo
jge
das
push
and
mov
out
sti
insl
fisttpl
ret
cmpsl
out
add
movsl
mov
dec
scas
inc
fimuls
lahf
mov
movsl
testb
push
iret
outsb
mov
in
sbb
xor
insl
sti
mov
and
mov
jle
xor
xchg
pop
push
pop
sbb
or
ss
loope
pmaxub
test
xor
ljmp
jb
push
mov
pop
cs
jb
mov
pop
push
call
fadd
cli
or
in
das
sub
jno
repnz
push
inc
fisubrl
mov
cltd
pop
mov
leave
inc
xchg
loope
sub
movsl
cltd
clc
mov
inc
xchg
test
jo
imul
ret
mov
repnz
mov
fistpll
ss
ret
push
in
fistl
jo
sbb
mov
mov
icebp
outsb
xor
mov
ret
dec
aas
xor
xor
cli
add
mov
add
xchg
push
aas
sbb
lods
dec
mov
stos
mov
stos
pop
dec
adc
aas
push
fldz
xor
cli
lods
inc
out
lods
testb
adc
cmp
sbb
andl
inc
xchg
pop
repz
clc
stos
adcl
push
sub
cmp
ljmp
stos
pop
jg
jle
in
iret
cmp
ljmp
push
fs
lcall
jns
jmp
fldl
das
inc
inc
cmc
and
lods
mov
fstps
mov
adc
add
mov
cltd
mov
add
cmp
push
mov
xchg
pop
mov
mov
call
out
mov
mov
test
cmp
sbb
hlt
mov
cli
jle
fcomps
mov
dec
repz
and
jnp
and
or
ret
dec
inc
or
mov
jg
mov
outsl
sub
xor
orb
xchg
pop
mov
je
fsub
loope
sub
mov
ss
je
cmc
enter
adc
ss
xor
ret
ret
push
cmp
imul
sbb
push
ss
cmp
cmc
fidivrl
call
das
mov
ret
and
jl
mov
in
push
int
into
adc
mov
jne
out
int3
scas
push
pop
jle
inc
mov
sub
aas
jae
outsl
nop
rcrb
xchg
mov
push
jbe
push
ret
cld
pop
pushf
adc
xchg
push
pop
testl
lods
in
loop
mov
cmp
test
das
cld
rcll
xor
xor
push
insb
shll
inc
inc
jne
pop
clc
sbbb
test
jno
out
icebp
in
mov
jne
pop
loopne
cli
add
sub
int
insb
out
pop
inc
mov
das
std
fcmovnbe
jmp
jns
imul
jecxz
movsl
in
mov
push
adc
incl
aas
jo
flds
aaa
add
rcrb
popf
imul
and
sbb
sahf
iret
inc
inc
add
jbe
adcl
sbb
and
push
sub
mov
add
push
mov
clc
push
rcl
fcmovnbe
lods
push
lret
sub
mov
lods
pop
jnp
and
mov
popa
loope
xchg
xchg
aas
inc
hlt
mov
clc
in
fucomi
test
imul
push
add
or
lcall
sbb
jl
cmp
dec
loope
test
mov
mov
push
inc
and
sti
sbb
std
cmp
in
punpckhwd
out
pop
jo
icebp
das
sub
gs
aaa
pop
sbb
mov
mov
repz
mov
in
or
adc
mov
ss
sbb
dec
cli
arpl
daa
push
popa
imul
xchg
xchg
pop
xorb
test
popa
aas
int
pop
push
cmp
outsl
jl
and
sbb
mov
ret
test
cld
cmpl
sub
popa
pop
fcoms
shl
loop
mov
jo
mov
movsl
cltd
stos
xlat
cmp
dec
sbb
adc
fbstp
jmp
clc
dec
cmp
test
add
popa
mov
lret
push
xor
nop
popa
data16
cltd
adc
pop
in
shlb
test
std
fs
cs
mov
cli
fisttpl
mov
pop
clc
mov
push
fisttpll
int
or
and
mov
fucomp
jno
out
test
les
jmp
cltd
adc
loopne
aam
mov
push
mov
or
loopne
jo
cli
sbb
jns
sar
adc
inc
stc
mov
rcl
roll
js,pt
push
mov
aas
lret
mov
fstpl
mov
or
lods
jne
int3
jg
test
and
or
test
popf
push
clc
push
ret
fnstcw
int
and
adc
mov
sbb
in
jb
cld
mov
or
out
push
cmp
sbb
jno
lcall
mov
mov
movsl
insl
sbb
into
popf
sub
fisttps
jb
mov
outsb
push
arpl
ljmp
loop
dec
xchg
sarl
or
ds
mov
in
fimull
dec
add
cmp
fwait
push
fsubrs
insb
mov
sub
sub
in
dec
lcall
dec
pop
adc
xchg
adcl
mov
inc
jo
sub
fcoms
xchg
mov
outsb
call
es
dec
sbb
sbb
dec
xor
cld
push
mov
cld
lods
js
movb
out
les
cmp
insl
jmp
cmpb
repz
fistps
inc
insb
loope
mov
or
dec
sub
imul
in
mulb
sbbb
ret
xchg
mov
pop
mov
ds
add
jecxz
sub
fisttpll
and
sub
es
push
insb
fiaddl
sub
pop
shlb
xorb
js
jmp
ret
mov
ret
pop
subb
mov
mulb
leave
daa
lods
jmp
cwtl
jmp
sti
or
mov
xchg
sbb
icebp
enter
ret
mov
fwait
insl
insb
insb
xchg
out
add
mov
loopne
and
sub
inc
addl
and
pop
gs
shlb
mov
ja
in
out
xor
cmp
incl
adc
or
shll
sbb
fbstp
lock
out
cmpsl
mov
mov
test
push
add
pushf
or
jb
sbb
aaa
outsb
xor
and
lods
leave
dec
xchg
aas
hlt
sbb
bnd
sbb
push
or
jecxz
xchg
adc
rclb
into
push
xlat
leave
pop
mov
cmp
movsl
fildl
lret
loop
push
repnz
insb
fildl
dec
and
lcall
lahf
and
inc
or
leave
ds
push
or
jg
and
mov
into
and
xor
mov
xchg
dec
subb
gs
sbb
adc
in
bound
sbb
cmc
ret
xchg
in
icebp
scas
loope
cli
call
js
xchg
xchg
push
and
lea
lock
mov
jmp
nop
xor
jp
insl
mov
aas
add
in
pop
push
sarb
xchg
test
testl
mov
inc
inc
xor
cmp
add
sbb
adc
pop
outsb
mov
js
or
sub
xchg
jecxz,pn
push
test
ja
sub
dec
mov
imul
inc
cwtl
pop
loope
loope
lret
mov
cmp
rcrl
fimull
dec
and
lcall
jo
call
and
nop
xchg
pop
cld
imul
jp
in
pusha
fidivrl
or
in
pop
out
jb
dec
fmul
dec
sub
push
daa
mov
sbb
inc
fildl
push
fwait
jg
mov
jle
mov
push
or
lea
mov
mov
dec
into
sbb
pop
push
sbb
lds
int3
imul
cmpb
xchg
xchg
jl
xor
in
mov
cmpsl
and
xchg
jg
dec
add
pop
dec
and
mov
push
dec
adc
inc
mov
inc
fs
dec
cmpsb
test
mov
pop
push
sarl
push
xchg
lods
les
mov
outsl
movsl
clc
shlb
cmpsl
incb
xchg
cmpl
jle
aam
popf
aad
mov
sti
outsb
push
addl
pop
mov
jmp
fdivr
or
dec
cmp
or
fisttps
xchg
sub
lods
aas
hlt
test
dec
push
jg
sbb
xchg
cmpsl
in
idivl
push
rcrb
lret
in
or
test
pop
xor
adc
sbb
push
out
sbb
jno
or
pushf
and
jmp
pop
inc
shl
fildl
les
out
std
out
rcr
jb
cmc
int
in
mov
loopne
xor
cwtl
pop
pop
cmp
xor
inc
push
pop
std
jge
ficompl
clc
jg
dec
jmp
cmp
movsl
xchg
cmp
iret
jg
test
inc
fsubr
sub
xchg
and
mov
pop
repnz
mov
push
fcompl
add
inc
push
in
xchg
xchg
jbe
out
xor
scas
push
int
neg
mov
daa
pop
loop
mov
nop
testb
inc
push
rcll
add
mov
push
mov
leave
inc
adc
mov
outsb
lods
add
pop
rorl
inc
popa
inc
add
pop
call
jecxz
movsl
stos
cmp
les
in
or
mov
in
mov
cmpsb
int3
cmc
aad
repz
push
jecxz
ffree
jg
add
jae
dec
mov
cmc
mov
loopne
lret
nop
xor
arpl
pop
jnp
push
dec
push
loopne
insl
mov
jl
ds
inc
sarl
incb
js
outsb
or
dec
lea
movsl
mov
xor
xchg
xor
mov
add
sbb
mov
insb
in
int
push
add
and
out
shr
pop
add
and
cwtl
fs
dec
sub
add
sarb
into
in
decl
aam
or
xchg
xchg
fmull
fisubl
add
ret
or
sti
les
mov
or
jg
xlat
outsl
cmp
xchg
xor
push
add
xchg
mov
int
mov
icebp
adc
cmp
xor
hlt
rorl
dec
cld
lods
lea
filds
jmp
mov
sbb
in
insl
mov
xor
aaa
mov
lods
subl
sub
loopne
jmp
inc
loop
xlat
je
or
stos
mov
jecxz
ret
add
xchg
insb
xor
lds
or
ret
push
sbb
imul
xchg
jbe
mov
sti
push
clc
mov
adc
pop
adc
jae
enter
jg
pop
in
pop
adc
and
arpl
xor
js
mov
cld
out
and
pop
mov
push
test
hlt
pop
addl
push
sbb
aaa
or
bound
mov
pop
sbb
push
pop
or
push
loopne
lds
mulb
int3
out
outsb
icebp
movl
add
pop
mov
dec
pusha
stos
outsl
jbe
mov
out
loop
js
lods
mov
outsb
push
and
call
mov
adc
lahf
cmpsl
pop
mov
mov
shlb
ret
pop
out
sbb
jp
scas
or
cmc
or
lods
xor
outsb
pusha
hlt
or
movsl
fcoms
jle
xor
scas
lods
scas
movsl
xchg
fst
push
cld
jns
insb
push
jae
push
xchg
int
inc
or
fdivs
adc
outsb
mov
int3
je
or
sahf
or
cmp
call
fimuls
xchg
sub
and
sub
mov
pop
xchg
aas
pop
addr16
pop
mov
adc
sarl
loopne
fwait
mov
stos
or
outsl
enter
adc
push
sub
or
test
ret
dec
loop,pt
sahf
lock
outsl
decl
push
movsb
xor
popa
pusha
jp
cld
fimull
mov
mov
push
test
shrl
mov
mov
fistpl
mov
adc
xchg
cld
dec
pop
pop
mov
nop
addb
fldt
test
lds
pop
sub
or
aad
ret
pop
dec
pop
adc
and
xor
test
mov
push
cltd
push
sbb
push
ret
dec
xchg
in
sub
mov
fidivs
jecxz
stc
mov
call
movsl
cmp
pop
rcr
dec
push
push
fstp
movsl
fs
inc
repz
into
xchg
cmp
push
test
scas
sar
test
pop
cmpsb
push
test
add
inc
insl
in
pushf
clc
mov
lock
mov
aaa
mov
rorl
and
jbe
pop
out
das
insb
sbb
add
cmpl
out
ret
pushf
dec
adc
pop
mov
movsl
fistpll
xchg
xrelease
jne
test
xchg
dec
jg
mov
addr16
test
js
ss
sbb
add
xchg
mov
cmpsb
pop
loop
push
aas
in
cmp
sub
dec
std
push
scas
mov
xor
or
pop
cmp
push
and
cmp
xchg
inc
fucomip
dec
nop
jle
test
inc
sub
pop
inc
xchg
stos
mov
pop
cmp
clc
fdivs
lcall
mov
adc
enter
mov
mov
jl
int3
adc
and
inc
std
aaa
nop
inc
insb
cld
fstl
push
into
xchg
fisttps
adc
lcall
imul
add
sbbl
inc
sbb
scas
pop
pop
int3
cmp
push
bound
fisttps
cmp
fidivrl
repnz
jne
dec
pop
push
movsl
in
jb
and
in
mov
imul
sbb
xchg
lret
insb
ret
test
in
adcb
out
scas
fs
sbb
cmc
insl
mov
nop
adc
decl
pop
mov
lret
sbbb
xor
dec
icebp
rolb
in
sarl
std
mov
push
mov
test
sahf
or
je
add
push
push
dec
xchg
outsb
in
cli
fs
ja
in
loopne
jecxz
inc
push
fstl
aad
ficoml
cltd
add
push
sbb
iret
xchg
lcall
pop
dec
add
add
add
xchg
pop
or
fs
popf
jb
pop
fistps
in
fbstp
jb
orb
call
ljmp
imulb
daa
cmp
adc
sbb
scas
outsb
scas
xor
hlt
mov
rcrb
iret
ljmpw
pop
add
cmpsb
mov
push
xor
sti
adc
push
rclb
and
lock
inc
or
mov
adc
sti
inc
xchg
out
cmc
cmp
cmpsb
movsl
add
and
inc
dec
ljmp
into
jp
sarb
mov
mov
dec
std
rclb
test
or
jae
bound
repz
inc
jnp
subb
xchg
cmp
mov
push
push
pop
sahf
js
and
lea
add
sub
cmp
in
fldt
mov
dec
fildl
fcmovnb
scas
aaa
sbb
mov
dec
rolb
adc
mov
xor
insl
imul
mov
addr16
ja
ret
icebp
testb
iret
fnstcw
cmc
adc
cltd
stc
sub
cwtl
push
lret
lahf
dec
inc
gs
decb
jl
adc
mov
or
iret
clc
push
mov
cmp
and
and
nop
mov
outsl
pop
insb
fdivrs
push
or
mov
add
adc
pop
out
ja
shll
mov
jl
mov
cmc
divb
xchg
inc
sub
cmpsl
negl
jne
pop
fmuls
xor
and
das
insb
ficompl
inc
jmp
sub
pop
mov
enter
sub
popf
push
ljmp
mov
bound
nop
push
mov
push
fcomps
imul
inc
mov
scas
mov
sub
rolb
mov
push
xchg
cmpsb
or
mov
mov
in
lds
and
jmp
add
pop
jg
pop
push
rclb
pop
sbb
inc
movsl
frstor
lods
std
push
out
js
roll
and
push
fdivs
lcall
mov
addr16
jnp
rcrb
sarl
mov
cld
leave
xor
mov
outsb
outsb
mov
ret
jbe
jle
dec
test
sbb
mov
or
loopne
sar
pushf
js
sbb
cltd
sbb
aaa
rcrl
lcall
ret
lock
xchg
mov
mov
cmp
fldt
cmp
mov
adc
in
push
insl
cmpsb
leave
je
pop
mov
ds
pop
jl
in
pushl
cmp
xor
mov
mov
sub
pop
adc
lods
dec
pop
outsb
aam
sub
inc
pop
or
hlt
lea
push
xchg
cmp
scas
mov
fldt
jbe
inc
sbb
xchg
inc
in
jns
jae
fnstenv
jbe
pop
scas
dec
scas
jnp
dec
and
call
fs
mov
jmp
push
add
sbb
inc
cmc
adc
ss
ljmp
mov
test
sbb
negl
mov
xor
shld
aad
repnz
ret
cmp
adc
das
or
add
xchg
mov
repnz
add
push
push
push
incl
lahf
and
out
push
sbb
loop
adc
daa
call
mov
mov
push
adc
mov
xchg
adc
jle
dec
mov
push
push
arpl
ljmp
adc
or
jmp
jle
test
mov
dec
fiaddl
mov
mov
incb
cs
cmpsl
clc
nop
inc
push
icebp
pop
jp
or
push
pop
js
mov
movsl
outsl
mov
aas
in
je
adc
sbb
xor
sub
or
push
sbb
jmp
inc
aaa
mov
fistps
testl
jnp
mov
fidivs
and
in
hlt
pushl
lret
jle
call
imull
xor
lock
test
or
std
jmp
and
and
outsl
jno
dec
and
inc
sub
out
sbbb
into
mov
loopne
movsl
jae
jo
push
dec
mov
in
sbb
into
pop
imul
xor
mov
mov
push
ficoms
scas
inc
xor
mov
mov
enter
or
sbb
pop
mov
inc
xchg
popl
movsl
mov
cmp
in
aam
jne
lea
mov
sub
rol
mov
lret
sahf
or
out
sbbl
incl
xchg
sbb
mov
cs
xor
xchg
leave
sbb
ljmp
sub
push
incb
int
inc
mov
arpl
nop
rclb
lea
jo
dec
mov
clts
in
dec
lods
test
inc
in
pop
sti
test
in
jl
rolb
xor
js
inc
xchg
push
push
mov
insb
pop
clc
xor
mov
sbb
mov
pop
stos
js
mov
sarb
pushf
ret
repz
hlt
pop
cli
mov
push
cmp
jp
dec
dec
fwait
lods
jecxz
aas
mov
and
mov
inc
inc
addl
das
dec
outsl
pop
clc
ds
adc
adc
roll
imul
ret
dec
scas
or
sti
or
push
std
mov
popa
xchg
inc
int3
cwtl
cmc
roll
outsb
fistpll
sbb
xchg
imul
cs
adc
aad
ja
jmp
jg
cmc
loope,pt
cmp
dec
xchg
dec
xor
add
mov
cmpsb
add
cmp
mov
iret
mov
cld
js
fcomps
adc
outsl
in
sbb
pop
inc
mov
jbe
inc
xchg
push
push
or
clc
mov
add
ret
ss
jge
loopne
clc
inc
pop
mov
pop
mov
btc
test
pop
and
jnp
mov
stc
sbb
scas
dec
into
pop
fsubr
pusha
mov
in
xchg
jl
cmpsl
in
sub
push
out
rorb
lods
mov
fimuls
adc
insb
adc
mov
pop
xlat
xor
mov
jo
push
and
sti
sub
lods
or
outsl
push
dec
in
or
push
push
mov
pusha
and
mov
sbb
je
fs
ret
jg
imul
jl
xor
out
push
cld
sbb
in
push
ficoms
test
mov
mov
pop
fmul
or
mov
in
sbb
stos
into
push
bound
xor
sub
ljmp
enter
into
xchg
sub
lods
jge
and
repnz
ret
cmpsb
adc
jle
jne
inc
in
outsb
test
or
fcmovbe
or
scas
jne
mov
js
inc
jbe
push
xorb
sti
push
push
sbbb
pop
sub
xchg
icebp
std
xor
sbb
pop
mov
movsb
repnz
andl
aaa
adc
jbe
repnz
mov
sub
or
or
or
std
adc
int
cmpsb
push
dec
dec
or
ja
outsl
test
xor
jbe
add
and
shlb
rorb
cli
ret
push
das
jl
mov
add
lret
je
sbb
sub
cmpsb
mov
inc
sub
or
fnstsw
push
and
cld
dec
push
loopne
jmp
fidivs
add
push
pop
in
push
inc
loopne
dec
outsl
sbb
jl
jbe
inc
mov
in
mov
pop
popa
pop
inc
mov
mov
push
push
adc
pop
dec
test
pop
xchg
std
sub
in
rorb
nop
dec
jmp
leave
fucomip
and
out
js
dec
icebp
or
cmp
jnp
adc
adc
xorb
shrd
xor
xchg
fmulp
lds
outsb
cmp
lods
rcl
das
sarb
pop
pop
jns
jle
outsb
sbb
pop
mov
mov
js
call
inc
lcall
mov
dec
sub
and
js
xchg
fsubrl
bound
popa
push
idivb
adc
stos
pop
daa
adc
pop
pop
sub
push
data16
push
xchg
subl
hlt
js
int
add
jo
or
and
hlt
in
lods
cli
outsl
adc
or
lcall
lds
pop
sti
faddl
pop
sahf
cmp
mov
pusha
cmp
jo
push
fadds
mov
rcrb
outsl
loop
aas
repz
mov
sub
mov
lods
sahf
cmp
inc
fimuls
out
inc
loop
es
insl
test
insb
adc
pop
mov
cmc
pop
push
sub
int3
mov
lds
hlt
repz
adc
dec
pop
jp
dec
sti
xor
sub
loope
repnz
shrl
fiaddl
jns
add
xchg
push
mov
into
imul
and
clc
movsl
xchg
je
pop
addl
mov
es
and
mov
sub
out
repnz
jp
imul
in
incl
mov
xchg
test
call
outsb
out
sti
outsl
jmp
sbb
and
mov
pop
lahf
cmpb
lds
mov
ret
mov
mov
shrb
push
xchg
and
out
mov
mov
outsl
add
icebp
push
je
jge
sub
mov
fs
jb
inc
or
in
pop
push
or
xchg
bnd
fstps
xor
pop
mov
faddp
iret
and
adc
in
pop
das
add
jno
pushf
pop
icebp
stos
cmp
cld
es
stos
stos
mov
cli
mov
push
ss
int3
testb
xchg
test
flds
pop
out
repz
dec
pop
adc
mov
sub
pop
insl
stos
ret
jecxz
jl
clc
cmp
sbb
xchg
cltd
inc
pop
and
inc
das
adc
cmpsl
das
popa
loop
jle
das
cwtl
lahf
add
dec
jecxz,pn
push
lods
lods
or
add
aaa
sbb
push
xchg
loope
jp
xor
lods
mov
mov
pop
jge
fldl
cwtl
inc
inc
jne
lds
or
jp
clc
aaa
jle
mov
cmp
mov
jp
rcrl
rolb
test
cltd
mov
test
mov
in
nop
daa
or
ss
outsl
idiv
insl
sub
push
xchg
and
xchg
adc
xor
aad
test
fdivr
idiv
or
mov
mov
jno
mov
jnp
inc
pop
data16
mov
fidivl
adc
sbb
out
popf
mov
push
dec
loopne
movsl
lret
shl
add
mov
mov
mov
ds
and
jmp
and
nop
arpl
ljmp
xor
loope
cmp
push
jp
enter
cs
mov
loop
jle
pop
arpl
ja
fisubrl
cld
or
sub
popa
repz
mull
daa
inc
fistpll
sbb
xor
aaa
stos
cmp
mov
inc
insb
icebp
mov
and
dec
or
xor
sbb
mov
sbb
movsb
cmp
add
nop
ljmp
dec
js
and
outsl
fmull
mov
roll
stc
lods
cmpl
cs
pusha
cmp
addb
pop
or
xchg
lods
js
loope
fldl
std
adc
cmp
and
jle
jg
push
aaa
add
sub
or
lds
push
xor
push
jg
mov
xchg
jb
xabort
ja
add
sbb
xlat
lods
add
lock
jle
pusha
mov
mov
ret
xchg
pop
outsl
mov
cmp
inc
or
xchg
ror
cmp
cmpb
adc
bound
nop
push
aaa
pop
test
inc
and
inc
test
xor
mov
sbb
repnz
jmp
or
push
inc
icebp
mov
xor
cmp
push
pop
xchg
popa
frstor
pop
loopne
insl
push
inc
jns
cltd
out
or
bound
push
fwait
imul
mov
pop
ficoml
push
cmp
mov
mov
jns
xchg
jne
movsl
dec
xchg
sub
dec
sti
cli
cmpsl
outsb
outsl
push
pop
out
mov
inc
dec
movl
xchg
lcall
xor
sub
popa
inc
mov
jg
push
shl
dec
je
cmc
sahf
pop
insb
dec
shll
push
out
clc
push
dec
jmp
arpl
mov
mov
and
leave
sbb
fistl
pop
and
cld
pop
inc
push
lds
inc
push
add
cmovl
xchg
inc
mov
rcll
ja
sub
flds
mov
sbb
pop
call
clc
mov
add
ss
pop
xchg
bound
xchg
push
add
xorb
dec
push
clc
ret
sbb
jl
jo
test
add
mov
inc
cli
jmp
rcrl
cmpsb
call
xchg
test
shrl
mov
or
sub
loopne
lock
mov
shll
mov
inc
xchg
inc
push
ds
test
inc
jle
sub
mov
and
test
adc
pop
mov
push
mov
or
imul
pop
loop
mov
pop
or
jge
leave
imul
mov
mov
pushf
lods
dec
data16
aaa
or
fistps
pop
lock
push
cld
aam
inc
xor
add
xor
add
and
mov
lods
leave
sub
cs
das
sbb
daa
popa
xor
pop
fsubs
dec
pop
stos
cs
ljmp
fcmovb
inc
mov
js
mov
sub
out
xchg
roll
lock
xchg
leave
push
mov
sbb
and
movsl
mov
jbe
sub
mov
push
add
int3
sbb
loop
xchg
add
pop
mov
jle
mov
mov
sbb
shlb
stos
sbb
push
lahf
cmp
xchg
mov
push
lret
and
hlt
cs
test
clc
loopne
test
xor
mov
mov
jnp
jge
subb
mov
fmul
les
mov
inc
aam
fwait
ljmp
shr
fiadds
mov
fs
ss
jle
push
outsl
jmp
loopne
fidivl
push
pusha
adc
sbb
mov
fcmovb
sbb
lods
push
daa
loop
mov
xor
shrl
insl
hlt
sbb
sub
call
fwait
cli
xchg
aad
or
negl
adc
dec
mov
inc
pop
scas
cltd
sbbb
int
test
push
sub
icebp
add
int3
mov
pop
push
push
cmp
mov
jmp
push
je
push
or
pop
push
mov
and
loopne
xor
imul
mov
jns
or
das
test
dec
pop
out
jp
mov
push
imul
stos
js
lea
std
das
je
adc
and
jmp
mov
lret
pushl
xor
add
cmpb
shlb
push
push
mov
jo
fisubrs
adc
mov
or
pop
mov
fldenv
test
or
mov
push
in
sub
xchg
stc
dec
jnp
addb
insl
sbb
push
test
sbb
adc
dec
aaa
pop
mov
mov
fsubs
subb
repnz
icebp
outsl
mov
push
adc
arpl
cmp
popf
or
outsl
mov
fcmove
div
cmpl
mov
and
add
stos
into
ljmp
stos
pop
pop
pop
push
sub
add
sub
imul
pop
mov
pop
cmp
xor
div
outsl
les
sub
test
mov
and
xchg
mov
test
std
daa
and
leave
lahf
stos
cwtl
movsb
loopne
out
sub
rorl
adc
add
push
mov
xchg
leave
imul
xlat
outsl
push
inc
and
sub
nop
std
and
scas
aam
or
mov
enter
fwait
xor
call
add
mov
movsb
inc
loop
add
dec
pop
mov
xchg
cs
rcrb
ljmp
cli
enter
dec
dec
mov
dec
jb
or
aad
orl
pop
in
cmp
outsl
ljmp
and
ja
insl
loope
cld
dec
insb
mov
xchg
sub
lods
rcr
cli
push
fcomi
mov
inc
lret
cli
add
rcrl
jmp
mov
xor
fbld
stos
pop
inc
or
and
outsl
add
bound
xchg
leave
cmp
arpl
insb
clc
dec
sub
mov
fwait
nop
lret
or
std
out
scas
jnp
or
inc
add
or
push
pop
inc
mov
test
jbe
ja
mov
test
pop
mov
in
fwait
add
pop
fidivl
xor
adc
jl
mov
and
mov
ds
enter
adc
dec
pop
ljmp
in
xchg
mov
shlb
outsl
rcrl
dec
aad
xor
scas
outsl
pop
mov
mov
into
nop
jp
mov
iret
adc
fiadds
fisubrl
aas
adc
mov
add
call
push
aad
daa
mov
add
adc
inc
and
mov
outsl
adc
jns
inc
mov
mov
pop
in
mov
xchg
or
outsl
les
fsubs
clc
sbb
pop
mov
lock
adc
in
and
fiadds
jmp
pop
cli
mov
xlat
jbe
aas
pop
repnz
cwtl
stos
inc
inc
mov
in
pop
mov
add
lcall
cmp
das
hlt
dec
sub
jmp
sbb
add
xor
sarl
icebp
outsl
loopne
add
pop
cwtl
xbegin
mov
hlt
and
jecxz
outsb
sub
clc
sbb
mov
fmulp
xor
dec
das
rol
lret
cmp
mov
gs
xchg
addb
das
dec
inc
adc
push
test
rcrb
ret
jp
pop
rorb
push
pop
or
es
mov
mov
cmc
push
cwtl
add
loop
clc
decl
fdivp
or
jbe
dec
mov
xor
filds
xor
subb
outsl
push
cltd
inc
and
cmpsl
sub
mov
ret
adcl
xchg
mov
push
js
dec
test
dec
push
add
push
cmp
stc
mov
mov
sbb
rclb
movsb
mov
ret
push
jmp
mov
les
cmp
imul
shlb
test
adc
aam
shrb
pop
jg
xchg
imul
mov
mov
xchg
xchg
cs
fisubrl
jge
xchg
stos
ss
lea
sbb
inc
cmp
and
mov
hlt
lock
add
fdivl
and
out
pop
xchg
in
pushl
adc
mov
mov
push
aaa
jns
push
sbb
stc
xor
std
add
and
mov
sahf
dec
inc
outsl
jl
call
push
xchg
xchg
adc
test
lcall
jp
push
lcall
repz
lret
cmp
test
mov
add
fistl
cltd
push
fs
dec
mov
mov
and
mov
insb
xor
or
outsb
jo
and
std
hlt
mov
adc
aas
outsl
frstor
decl
dec
and
jecxz
in
cmp
mov
cwtl
pop
movsl
lcall
call
xchg
pop
adc
mov
jmp
ljmp
xchg
push
inc
jle
addr16
insb
outsb
pop
pop
xor
into
mov
mov
dec
shrl
les
pushf
push
xchg
cmc
mov
adc
pop
xor
lret
or
add
push
inc
jg
push
call
inc
jne
push
sub
ficomps
adc
fstpl
and
sbb
mov
in
add
inc
or
rorb
ss
push
add
fdivr
std
cmp
sub
jbe
fildl
stos
loope
sarb
shll
xor
and
add
fldt
cltd
pop
and
xor
pushf
push
shlb
fisubl
push
dec
xchg
outsl
inc
out
out
test
adc
mov
jg
aam
jecxz
loope
pushf
insb
incl
mov
lcall
std
insl
sbb
mov
movsb
rcrb
cmp
cmp
lods
xchg
outsl
insb
mov
xor
aad
lcall
mov
stos
xchg
or
cmp
rcrl
outsl
das
shrb
xlat
or
daa
fs
imul
xchg
mov
pop
push
dec
mov
test
scas
shl
cmp
lds
ds
enter
mov
fdivr
pop
cmp
push
das
jge
sub
int
or
insb
fistps
mov
mov
es
xor
and
dec
mov
xchg
lret
in
pop
sbb
cmc
push
mov
sub
mov
loop
rcrl
inc
rcl
rcrl
push
lods
filds
rorl
sar
sub
loop
or
xchg
lcall
ljmp
sarb
jle
testb
adc
xor
in
sbb
pop
adc
arpl
add
mov
push
mov
hlt
in
or
icebp
sbb
or
or
mov
jnp
add
out
shrl
inc
jmp
sub
push
outsb
rcl
push
sbb
arpl
cld
sbb
mov
sets
xchg
outsl
or
dec
iret
imul
cmp
popa
test
call
pop
repz
loop
pop
adc
sub
cmp
je
xorl
in
xchg
scas
dec
mov
dec
inc
popf
push
inc
and
sbb
pushl
ret
and
cmpl
data16
adc
fldt
je
push
dec
sbb
repnz
xchg
sbb
aam
dec
inc
cmpsl
loopne
mov
push
mov
pop
sti
lock
lcall
mov
mov
add
add
pop
test
jmp
add
sbb
fldl
jo
jbe
xchg
jnp
loope
or
cmp
stos
rcll
out
mov
outsb
sub
pop
icebp
cltd
inc
xor
call
stos
fs
sbb
ud0
pop
inc
nop
shl
das
jo
sbb
xlat
and
mov
iret
sbb
lods
jp
pop
push
lods
inc
sub
sbb
xor
out
insb
es
push
cmp
out
push
std
pop
push
xchg
in
jecxz
mov
cmc
ds
cmp
sbb
mov
daa
iret
sbb
dec
xor
mov
jg
dec
push
mov
cmp
ret
mov
call
in
mov
and
push
push
jae
push
or
sub
mov
movsb
and
sub
pop
jns
pop
cs
mov
leave
or
rcrl
pop
fs
das
mov
inc
in
xchg
movsb
mov
pop
sub
jo
mov
sahf
adc
push
cmp
and
icebp
in
pop
pop
add
cwtl
inc
pop
inc
mov
sbb
mov
xchg
cmp
mov
pop
dec
test
cmp
xor
test
jle
rcrb
cmp
std
push
mov
mov
or
arpl
sbb
and
inc
push
cld
jle
and
sub
enter
and
mov
enter
mov
ret
sbb
fisubrs
rcrl
or
ljmp
aas
adc
fistpll
inc
inc
add
mov
je
inc
mov
mov
cmpsb
jne
xchg
jnp
sti
fnop
dec
das
out
mov
pop
call
fistpll
lods
test
clc
sahf
and
std
push
add
mov
mov
icebp
cld
bndstx
xchg
cmp
stos
pop
push
lcall
xchg
xchg
daa
dec
pop
inc
faddp
or
movsb
add
or
mul
inc
fistpll
out
test
cmp
jecxz
mov
xor
das
inc
sar
fiaddl
or
dec
insl
mov
lcall
cmp
mov
cmp
cmpb
nop
aaa
mov
in
in
push
and
add
insb
clc
mov
push
sbb
bound
inc
and
pushl
std
add
pop
adc
inc
jl
pop
cmpsb
test
ljmp
jb
lock
pop
pop
or
lds
mov
std
pop
flds
pop
mov
mov
movsl
inc
sbb
mov
ficoml
test
adc
insb
adc
mov
popa
mov
sbbb
xchg
iret
imul
sub
dec
push
lahf
sub
testb
test
mov
lods
xchg
loope
test
sbb
push
pop
sbb
push
cmc
lock
addb
daa
xor
and
cmpl
outsl
jg
in
enter
lds
out
mov
mov
adc
mov
or
push
mov
loopne
inc
popa
xlat
das
xor
jle
jns
pop
test
popf
test
lock
fisubl
js
adc
sahf
lods
lret
ljmp
sbb
shlb
aas
mov
jnp
scas
mov
inc
pop
mov
std
add
iret
lods
das
pop
clc
in
popa
xor
gs
cmpsl
fisttpll
mov
fsubrl
call
xchg
xchg
ret
and
jecxz
cli
mov
cmpsb
add
mov
jp
pop
sbb
xor
jg
xor
pop
arpl
sub
scas
xchg
mov
mov
inc
pushl
scas
insl
pop
mov
loope
in
mov
push
push
clc
decl
jmp
or
adc
adc
inc
inc
lar
sbb
ljmp
pop
gs
mov
cmc
inc
inc
or
push
movsb
cs
hlt
movsl
push
sub
dec
lret
cld
rol
mov
push
fsubrs
insb
mov
push
inc
inc
adc
mov
in
jecxz
mov
mov
sub
xor
cmp
mov
hlt
decl
lods
test
xchg
lcall
lahf
je
hlt
lods
pusha
mov
mov
sub
cmp
loopne
in
mov
sub
clc
stos
inc
or
xchg
push
addb
clc
cs
repnz
push
out
push
adc
and
and
fldl
outsb
aam
jl
jp
repz
mov
mov
aam
and
lods
adc
xchg
mov
js
das
cmp
fs
lahf
sub
dec
ret
inc
cmp
xchg
daa
in
fldt
xor
pop
int3
inc
mov
jo
pop
add
mov
lock
cmpsb
add
mov
pop
mov
mov
xchg
insb
inc
shll
ss
mov
push
inc
scas
data16
inc
mov
movb
outsb
decl
xor
adcl
es
jne
mov
mov
pushf
cmp
lods
add
out
push
fistps
in
mov
xor
adcb
sub
push
fisubs
outsl
jg
or
ss
scas
mov
and
movsl
adc
lods
or
lea
cli
iret
cs
add
jnp
mov
fcmovb
adc
adc
pop
jbe
sti
or
xchg
fldcw
xchg
mov
jg
mov
sbb
xor
dec
ret
mov
inc
and
and
push
ljmp
fwait
mov
fldt
lcall
jne
jno
dec
test
fwait
push
pop
xchg
dec
sub
sub
add
lds
fs
mov
mov
sub
mov
pop
mov
sub
adc
outsb
insb
fisttps
orb
cmp
into
sbb
mov
dec
mov
and
test
pop
outsl
scas
shll
lret
xchg
cltd
cmc
fisubrl
in
cmp
inc
das
sub
mov
imul
mov
mov
lret
mov
fadds
and
adc
js
ljmp
mov
orl
jp
pop
add
shll
xor
repnz
iret
shrl
rorl
aad
sub
inc
push
add
lcall
aas
add
in
icebp
mov
call
and
adc
popf
idiv
fwait
cli
or
popa
shll
cmc
jp
jbe
push
push
dec
adc
dec
cld
and
sbb
ffree
or
pmullw
imul
jns
jne
rol
adc
loop
loopne
pop
jl
daa
sbb
test
aaa
clc
test
cld
xlat
jle
add
dec
push
mov
and
lcall
movl
mov
inc
push
pop
fsub
xchg
xchg
aas
adc
push
lret
sbb
inc
mov
test
inc
and
scas
mov
je
in
xchg
pop
jp
imul
lods
ret
jbe
popf
cmpsl
movsb
lods
xchg
fcomi
ret
int
inc
pushl
test
jne
pop
xor
mov
pop
js
fidivs
sub
and
outsl
pop
adc
fld1
sbb
cmpsb
sahf
push
dec
adc
das
roll
lock
addr16
and
sahf
pop
jecxz
pop
sti
ret
cmc
or
dec
rorl
mov
std
add
xchg
add
in
mov
push
xchg
fbstp
nop
mov
rcrb
insl
fdivrs
push
xchg
mov
fdivl
outsl
ds
ljmp
mov
xchg
cmp
push
mov
sbb
pop
xchg
jo
pop
push
push
imul
dec
fisttps
std
lea
inc
in
rcl
out
cmpsl
xchg
aaa
cli
mov
sub
rcr
inc
pop
sub
popa
and
gs
mov
xor
and
mov
movl
sub
jg
lods
gs
outsl
xor
pop
jb
std
mov
outsl
mov
stc
call
push
jecxz
adc
mov
jg
xor
or
push
or
repnz
ds
fimuls
push
xor
adc
test
mov
lahf
repnz
addb
dec
popa
adc
xchg
cmpl
xchg
xchg
xlat
jno
call
mov
pop
mov
les
hlt
sbb
mov
nop
mov
scas
inc
insl
add
outsb
push
inc
es
push
fwait
xchg
popa
sub
scas
mov
xor
cmp
ud0
mov
cmp
leave
jo
andl
out
outsb
sbb
cltd
inc
stc
or
push
add
pop
into
fdivp
lcall
or
inc
fs
push
pop
fimull
mov
test
sbb
lock
or
aas
fldl
cmp
imul
popa
into
adc
cmp
icebp
add
pusha
cmp
aas
in
call
aad
and
aas
adc
and
ss
sub
push
xchg
xor
and
repz
pop
jle
sbb
inc
cwtl
mov
xlat
nop
add
int3
cmp
data16
outsl
outsl
inc
jg
jno
adc
mov
stos
popa
clc
or
add
rclb
dec
das
inc
loope
mov
loop
outsl
push
push
outsl
sbb
pop
pop
rcrb
adc
lcall
mov
mov
and
sub
push
add
fs
adc
push
push
lods
loop
mov
or
and
and
adc
ja
insb
je
jne
add
lods
mov
push
inc
xchg
dec
fisubs
out
fimull
jle
add
mov
cs
fstpt
outsl
xchg
arpl
call
jnp
or
sbb
je
mov
enter
cli
inc
ret
in
mov
aam
addl
or
sbb
out
cmpsb
mov
or
mov
jbe
mov
push
mov
xor
lock
das
push
das
frstor
jns
mov
add
xchg
lds
push
fimuls
sbb
push
jno
push
sbb
mov
sub
sub
jg
cld
test
jae
mov
pushf
out
cmpsl
pop
ficomps
and
jbe
popf
std
das
jno
sar
sbb
nop
sub
nop
jb
into
inc
cmp
push
insl
sbb
gs
fdivr
xchg
sbb
clc
movb
popa
mov
mov
jge
or
and
sbb
xchg
ret
rcrb
add
pop
fcom
jg
aaa
inc
sbb
jne
cmpsb
sub
adc
lock
rorb
add
test
insb
scas
add
mov
or
mov
loopne
push
jle
pop
out
inc
in
mov
sub
xchg
lcall
ret
add
mov
and
mov
dec
add
adc
mov
or
pop
test
aaa
loop
push
clc
pop
or
js
lods
das
lock
xchg
fwait
mov
dec
dec
sbb
ficoml
rclb
shl
ret
mov
loope
push
jg
aam
jae
sbb
pop
or
test
and
ret
rorl
enter
js
jno
sbb
into
pop
lods
cmp
adc
leave
push
sbb
jmp
mov
mov
and
or
mov
cmpl
mov
push
dec
mov
mov
mov
push
xor
xlat
jno
adc
inc
mov
jmp
rcl
dec
sahf
shlb
mov
push
lcall
push
xchg
fisubrs
pop
int3
enter
mov
jge
fs
aad
xchg
aas
xchg
pop
and
mov
movsl
into
sub
outsb
mov
cmpsb
and
mov
add
jb
out
add
jmp
aad
mov
clc
inc
mov
inc
pmovmskb
or
sub
cwtl
and
in
shl
cmpsb
mov
inc
insl
push
fidivl
jmp
pop
sub
test
xrelease
or
out
outsl
pop
imul
das
std
mov
adcb
addb
and
dec
rcrl
cmp
mov
std
inc
das
mov
add
stos
and
shl
dec
aaa
imul
addr16
inc
dec
or
imul
xchg
iret
call
mov
add
out
fistps
cmp
adc
popf
out
je
add
mov
shll
push
pop
sbb
rcrb
testb
test
or
sbb
xchg
fsubrs
movsb
dec
add
jg
fimuls
push
lahf
test
cmpsl
cmp
jmp
pushl
jl
jmp
dec
mov
push
inc
pop
daa
daa
dec
insl
ss
in
clc
sbb
imul
ret
jp
inc
popa
orb
dec
jge
outsl
outsl
xor
pop
out
mov
xorl
fadds
adc
and
andb
cli
imulb
xchg
dec
shrl
cld
jg
pushf
inc
push
mov
pop
test
ret
jecxz
add
xor
push
outsl
stos
nop
adc
decl
or
bound
mov
or
cwtl
wrmsr
adc
jbe
imul
add
and
call
mov
lea
inc
mov
sub
ret
sub
dec
sbb
mov
dec
pop
std
mov
ret
cmp
jmp
shlb
inc
gs
dec
aaa
les
ret
adc
xchg
scas
movsb
mov
or
add
lds
cmp
inc
dec
dec
xchg
fnclex
sbb
xor
fbld
inc
mov
or
insl
xor
aam
jbe
add
sbb
ljmp
push
add
popl
aas
ljmp
out
or
pop
xchg
adc
out
rolb
mov
jecxz
cmpsb
lcall
mov
jnp
gs
mov
loop
sbb
push
mov
popf
test
adc
mov
push
pop
push
xchg
inc
aaa
mov
cltd
add
jecxz
out
dec
outsb
shll
xor
sahf
cmc
es
mov
push
mov
ja
clc
das
hlt
dec
cmc
mov
scas
jb
arpl
nop
mov
movsl
jnp
bound
sahf
scas
and
jle
cmp
hlt
mov
jnp
shrb
les
das
jl
sub
xchg
push
pop
jge
fisttpll
inc
adc
inc
call
add
adc
pop
popf
sbb
xor
shll
mov
testb
pusha
nop
jg
push
fiadds
aas
sub
cmp
or
hlt
jo
ss
xchg
mov
cmp
pop
repz
mov
lret
cld
ret
call
xchg
ror
add
sub
sub
jg
fbld
push
orl
lds
out
mov
loop
mov
mov
jg
dec
jno
or
out
xor
sarl
mov
in
or
shll
fdivr
mov
fistps
add
popa
adc
cmp
pop
inc
outsl
cld
jmp
dec
push
adc
dec
movsb
mov
jg
xchg
pusha
add
mov
inc
lock
mov
stos
nop
movsl
add
je
push
cli
test
jecxz
pusha
and
mov
insl
mov
arpl
xchg
push
dec
aas
shll
adc
mov
int3
je
js
adc
and
or
outsl
mov
xor
sbbl
sahf
push
jno
das
jl
scas
or
and
loopne
out
arpl
inc
and
adc
std
addl
mov
pop
or
sbb
sbb
lea
int3
push
push
dec
addb
aad
lock
mov
popf
add
in
iret
fildll
inc
loopne
test
mov
mov
jl
xchg
or
hlt
fs
imul
sbb
mov
imul
dec
push
inc
mov
jge
xchg
mov
or
add
fistpl
inc
sbb
lcall
mov
cld
jmp
jbe
mov
cwtl
mov
sub
xlat
inc
push
pop
mov
jmp
mov
fidivl
std
insb
push
test
xor
movsl
hlt
lods
enter
or
mov
fsubrp
push
pop
pop
or
hlt
inc
pop
cld
mov
mov
xor
and
bnd
ljmp
repz
push
outsl
cmc
mov
jge
jo
scas
sbb
pop
cmpb
aad
mov
mov
push
call
ret
gs
xchg
xor
loop
iret
dec
add
inc
and
sub
jp
add
lret
insb
adc
add
jbe
es
jbe
cmc
adc
push
ret
ljmp
sub
rcrb
and
in
jo
mov
push
icebp
aam
test
leave
mov
jo
mov
fwait
push
stos
js
push
or
inc
out
loop
push
and
fildll
fwait
mov
pop
xorl
inc
pop
stos
arpl
lods
lea
add
stos
js
inc
ud0
nop
incb
or
adc
xor
add
cmc
loopne
stos
rclb
push
xchg
daa
mov
adc
das
aam
int
loope
mov
rorb
iret
push
jl
inc
fisttps
ds
pop
xor
dec
or
sub
out
sbb
jg
adc
cmpsb
fistpll
pop
int3
xor
sti
pop
and
fldl
mov
add
mov
je
mov
loope
je
pop
mov
mov
out
mov
mov
pop
add
cli
movsl
std
das
jno
je
mov
insb
cmp
mov
mov
xchg
cmp
add
loope
sub
js
xchg
fisubs
shll
pop
lret
adc
call
loopne
ret
xlat
inc
add
inc
sub
insl
or
dec
test
mov
jno
cmp
mov
aaa
and
sbb
cs
fsts
and
data16
dec
test
test
mov
lods
mov
mov
inc
insl
aaa
inc
lods
icebp
in
scas
test
inc
leave
std
dec
enter
rol
or
jg
jg
sbb
dec
add
in
repnz
mov
dec
lea
aad
xor
sbbl
shrb
cs
insb
imul
pushl
mov
dec
xchg
dec
popf
pop
in
pop
shrb
insb
stc
int3
in
inc
xor
hlt
out
xor
xchg
pop
inc
xor
adc
scas
mov
add
sti
sub
xchg
fdivr
xchg
jo
sub
or
mov
incl
lock
and
ret
or
sti
ljmp
xor
add
rclb
push
push
inc
inc
cmp
pop
mov
mov
test
arpl
fisubl
mov
push
test
push
jno
insb
pop
loopne
in
jns
cmpsl
je
lret
lea
inc
std
xchg
ja
stos
mov
test
inc
test
mov
adc
adc
pusha
fwait
jmp
xor
sub
mov
add
sbb
push
sub
push
push
je
mov
fsubrs
popf
push
fld
add
dec
ljmp
mov
test
push
mov
loop
mov
pop
mov
ret
and
ret
mov
or
cs
or
sbb
jbe
adc
js
movsl
outsl
push
dec
add
push
cltd
sbb
sbb
cmp
leave
lock
inc
aam
dec
push
imul
addb
add
rcll
add
andl
mov
movsl
add
cmp
jecxz
mov
insl
aad
add
cmp
sbb
cmpsb
ss
test
cmpsl
push
adc
mov
loope
clc
incl
adc
xchg
stos
bnd
lea
loope
cmc
or
jo
sti
adc
ss
jg
pop
adcb
inc
mov
xor
and
outsl
jge
test
adc
fistl
mov
in
rorl
add
out
mov
jecxz
aam
mov
add
movsl
lcall
jmp
nop
xchg
divl
mov
fstpt
dec
cmp
ret
aaa
push
ds
mov
pop
and
scas
pop
int3
add
outsl
cmpsb
sub
mov
lods
jge
shlb
insb
fisttps
inc
cli
xor
arpl
sbb
xor
sub
fsubrl
push
mov
cmpsl
mov
pop
and
test
dec
mov
sbb
mov
inc
stos
fsubrs
fdiv
dec
sarb
icebp
xor
pop
jge
add
mov
fwait
call
aaa
bound
movsb
inc
xchg
inc
push
out
test
push
loope
mov
lea
jb
push
pop
fdivrs
add
imul
decl
bound
sub
pop
mov
add
dec
xor
lods
aam
mov
repnz
popa
jae
les
scas
or
mov
or
mov
outsb
aam
pop
dec
cld
pop
stos
sbb
xchg
loope
mov
dec
sbb
fisttps
inc
jmp
test
jno
das
jno
jle
les
xchg
pop
loop
aaa
test
dec
sarb
or
add
dec
outsl
roll
or
xchg
add
xchg
push
addb
mov
mov
jl
lds
jle
lds
adc
jnp
add
mov
push
hlt
mov
das
lock
lds
jno
add
std
adc
mov
loopne
sub
imul
jbe
mov
cli
movsl
in
out
sbb
ret
pop
mov
mov
jp
and
xchg
lahf
jnp
inc
adc
pop
mov
add
scas
push
clc
mov
lea
mov
dec
mov
cmpsb
inc
sbb
pushf
cltd
inc
mov
fisttps
fisubl
repnz
pop
ds
fcmovnbe
push
stos
push
xor
mov
adc
mov
add
xchg
mov
shr
movsl
movsl
int3
movsb
push
mov
adc
inc
mov
rorb
inc
jmp
int3
pushf
repz
cmp
test
jb
push
jmp
adc
clc
faddp
cli
mov
ret
sti
sub
or
lret
sub
sbb
fistpll
aaa
mov
out
lret
lcall
xor
xor
fwait
jp
aaa
cld
add
sbb
xchg
out
push
dec
and
jns
mov
ret
and
imul
jl
sbb
mov
xorl
and
shr
movsl
xor
xor
add
leave
push
or
dec
dec
mov
adc
cwtl
ja
movsb
jmp
loopne
push
push
sbb
out
insl
or
push
or
xchg
in
nop
clc
adc
inc
test
inc
push
or
outsl
push
mov
xchg
cmpsb
pop
mov
jg
mov
push
mov
ja
adc
push
mov
pop
pop
dec
aad
insb
xchg
xor
lea
push
enter
add
xor
cli
sub
dec
out
scas
roll
jle
push
fisubl
jmp
rcr
fadds
mov
imul
add
xor
rorl
mov
outsl
insb
aam
ret
sub
dec
sahf
xchg
mov
pop
rorl
cld
addr16
add
fwait
dec
and
je
lock
in
and
aad
lret
push
mov
das
mov
and
or
push
rcll
xor
outsl
ljmp
mov
or
xchg
mov
adc
in
pop
inc
add
push
mov
mov
popf
mov
and
stc
insl
ficoml
add
fs
xchg
and
inc
add
or
loop
jbe
fadds
les
and
sub
jge
or
scas
cmp
aaa
sub
xor
add
in
cmp
enter
jmp
mov
add
mov
mov
xchg
outsl
push
aas
sbb
jecxz
adc
sub
pop
xor
cmp
lock
sub
push
movsl
sub
xor
or
scas
pop
jle
fcoms
fst
fwait
les
daa
xor
pop
mov
push
push
clc
sub
dec
cmp
ret
mov
fldcw
mov
push
dec
js
xchg
inc
xor
sub
adc
fstps
adc
loopne
aad
repnz
arpl
out
pop
das
push
pop
ficoml
popa
xor
mov
les
push
xchg
push
into
dec
inc
rcl
cmpsb
xor
jg
push
fstpt
ljmp
adc
push
out
ds
je
mov
mov
lods
adc
fistpll
mov
clc
pop
adc
mov
dec
xchg
push
xor
movsb
cmc
outsl
out
mov
ljmp
pop
lahf
sbb
or
shll
xchg
push
mov
add
lock
cmp
fdivrp
leave
adc
sub
cmc
mov
pop
arpl
inc
cmp
arpl
or
lods
sti
bound
jno
or
cmp
int
add
inc
insl
pop
push
sbb
xor
bound
pop
fisubs
or
in
or
imul
movsl
sub
jo
jmp
cmpsb
inc
xor
mov
lods
jnp
cwtl
mov
outsb
or
and
iret
aad
add
insb
add
loopne
fildl
clc
xchg
dec
inc
nop
rclb
sti
stc
or
push
sub
xchg
nop
mov
int
loope
jl
test
movsl
scas
enter
sbb
aam
mov
dec
sub
ljmp
fisttps
f2xm1
sub
shr
mov
push
roll
movsl
adc
leave
add
pop
fmuls
rcll
testl
in
push
pushf
push
adc
push
pop
push
mov
add
cmc
jbe
mov
lea
ret
mov
inc
mov
xchg
and
or
lcall
cmp
lahf
arpl
sti
inc
mov
pop
or
xchg
subl
and
push
mov
mov
mov
mov
iret
mov
hlt
or
sbb
aaa
lds
fsubrs
push
sbb
add
jecxz
out
mov
mov
or
cmp
add
shl
mov
lock
out
scas
push
mov
imul
cmpsl
ficomps
mov
inc
or
sub
and
and
adc
ficomps
dec
imul
add
inc
jl
sbb
or
int
and
pop
rorb
bnd
fistpl
and
xchg
je
sub
mov
sbb
cmp
nop
jmp
int3
add
adc
lret
aad
sub
js
add
outsl
jmp
fnsave
or
addl
jmp
mov
inc
cmc
pop
cwtl
cmpsl
inc
mov
std
xchg
insl
ss
cmp
mov
fs
fcmovnb
jl
lods
movsbl
mov
in
xor
jge
loop
js
lahf
rcrb
sbb
shrl
fstl
xchg
mov
cli
cmpsb
loopne
shrl
dec
jg
push
pop
xor
jo
mov
mov
jo
and
rolb
aas
and
lea
cld
adc
fwait
or
pop
outsl
jle
lahf
outsl
sbb
out
xchg
push
sti
pop
ljmp
es
out
je
cs
mov
jl
xchg
inc
pushf
mov
rorb
jns
mov
testl
inc
pusha
jb
das
je
xchg
loop
movsb
mov
cmp
and
in
add
incb
mov
mov
add
jo
mov
mov
mov
pop
sbb
mov
popa
ss
push
stos
xchg
shl
out
xchg
out
cmp
mov
and
sub
cmc
dec
mov
lods
fwait
lods
sbb
jbe
push
xor
fisubl
jmp
xlat
adc
mov
test
mov
mov
inc
les
mov
add
sbbb
sub
add
orb
sub
mov
jne
test
push
scas
iret
leave
pop
mov
mov
aas
rcl
xor
into
sbb
pop
movl
or
cmp
shlb
mov
scas
adc
inc
idivl
popa
in
sub
js
and
mov
jmp
xchg
mov
insb
lret
cmp
lea
jge
bound
lea
lock
out
pusha
sahf
out
sbb
lods
ljmp
arpl
mov
jnp
orb
lods
movq
pushf
in
pop
xchg
stos
cmp
or
dec
xor
xor
mov
xor
mov
in
clc
test
cmp
insb
push
jae
test
or
sbb
bound
jl
jno
inc
add
in
and
inc
mov
icebp
shr
mov
cld
fistpll
lcall
aad
test
fcoml
movzbl
pop
sbb
jmp
arpl
xchg
rorl
movsb
sbb
xor
inc
fcompl
sbb
lock
cwtl
pushf
clc
push
mov
imull
xchg
inc
push
and
leave
cmp
lods
iret
sahf
or
push
and
push
das
les
add
fnstenv
inc
imull
inc
jnp
cmp
arpl
cmp
push
incb
mov
mov
pop
adc
xlat
add
sbb
in
sbb
jl
in
or
cmp
and
mov
add
or
mov
movsb
leave
arpl
ss
xor
mov
or
out
cmp
adc
pop
out
rorl
cmpsb
jmp
ja
mov
je
pop
popf
lods
aad
jl
and
or
hlt
fdivs
add
mov
sbb
mov
push
mov
out
xchg
fadds
daa
enter
in
out
add
and
xchg
incb
mov
inc
jo
stos
je
in
jnp
aad
test
insb
ficoml
hlt
xor
shl
out
mov
add
rcr
lock
andl
or
lock
jecxz
jg
adc
push
fwait
lahf
out
or
push
jno
cmpsb
mov
fucomi
mov
inc
jne
lret
pop
scas
push
push
enter
inc
add
stos
ja
filds
mov
xor
add
dec
cmp
aas
adc
pop
je
insl
cmp
int
jg
andl
int
xchg
fcmovnu
cmp
pop
push
js
movsl
adc
subl
inc
mov
in
inc
sbb
xchg
jle
xchg
lods
cmp
ja
addr16
in
inc
fstpt
push
or
in
fwait
sti
xchg
test
mov
sub
mov
lds
pop
and
clc
sub
ds
outsl
inc
subl
loopne
or
sbb
in
sub
or
nop
cmp
pop
outsl
adc
xor
add
shll
push
ret
lcall
sahf
adc
mov
push
in
add
add
in
fsub
mov
ret
pop
js
loopne
orb
fldz
jae
lahf
dec
pushf
mov
sbbb
fistpl
call
push
adc
dec
xorb
cmp
fdivl
jmp
lret
aaa
cmp
enter
loopne
sub
les
and
and
cmp
dec
cmpsb
mov
aaa
or
sarl
inc
mov
lods
outsl
iret
out
lcall
mov
cmpsl
data16
test
call
pop
cmp
push
test
sub
add
insb
xchg
push
add
sbb
into
mov
inc
gs
lret
push
lock
clc
jecxz
xchg
push
push
add
pop
jp
iret
out
aad
inc
mov
mov
jnp
popf
pop
xchg
adc
xchg
push
inc
jp
mov
test
rorb
cmp
nop
stc
fsubp
pop
scas
mov
pop
jae
sbbl
jp
cmp
or
adc
ret
aaa
sub
jne
jmp
inc
je
mov
fdiv
fsubr
mov
cmp
sub
sbb
jg
inc
or
mov
or
pand
jb
lret
dec
pusha
test
xor
cmpl
loop
mov
dec
lcall
aaa
cmc
notb
jae
or
xor
jmp
lock
inc
push
leave
jb
or
ret
std
pop
fwait
jbe
scas
and
ror
and
mov
mov
sub
pop
fsubr
psrlw
js
es
mov
fs
ret
cli
mov
mov
xchg
add
push
gs
pop
repnz
insb
fstl
cmp
fstpl
pop
xor
icebp
pop
shlb
mov
adc
pusha
mov
sarl
jmp
lahf
lods
cmc
clc
js
sub
cs
inc
pop
cs
fmull
inc
std
mov
mov
js
or
pop
xchg
sub
adc
xchg
fistpll
add
sahf
push
adc
cld
aam
inc
pop
popa
jecxz
push
sub
jg
mov
and
aaa
adc
sahf
cmp
notb
leave
mov
or
jns
and
adcb
rcrl
in
pop
aam
loopne
xchg
xchg
in
jno
mov
insb
fldcw
movsb
push
xchg
mov
jl
push
or
jmp
push
push
lock
sbb
inc
repz
dec
push
jecxz
pop
jbe
cmpl
cli
dec
fsts
push
gs
les
mov
sub
loopne
imul
scas
adc
ret
outsb
js
outsl
pusha
pop
dec
fcmovne
adc
pop
cmp
push
fsubrs
rcrb
inc
jg
mov
dec
out
int3
jno
test
dec
stos
aam
in
push
adc
inc
lcall
inc
mov
outsl
inc
je
add
xor
loope
repz
xlat
and
cmpsl
ret
call
aad
push
dec
pop
pop
in
cmp
pop
mov
scas
xor
sbb
movsl
mov
cmp
xlat
into
mov
jle
jno
ljmp
ret
xchg
lret
paddq
pop
cmp
xchg
inc
lods
stos
fsubrs
sbb
movsb
add
cli
movsb
mov
mov
insb
std
push
mov
mov
imul
inc
lea
inc
shlb
xchg
xchg
out
sub
jnp
and
mov
inc
mov
int3
clc
outsl
js
sbb
xor
adc
cmp
push
push
not
iret
mov
lods
scas
pop
jmp
adcl
xchg
or
lea
sub
push
push
addr16
ljmp
add
jae
sti
adc
inc
and
mov
push
andb
pusha
out
mov
dec
repz
loop
add
and
in
test
pop
movsb
jae
add
xorb
clc
addl
fistps
cmp
test
dec
jecxz
je
fs
scas
jo
jns
xor
add
iret
popa
pushaw
je
movsl
xchg
jne
test
test
sbb
roll
lods
ffreep
data16
ss
push
or
xchg
cmpsb
pop
pop
iret
add
mov
insl
imul
out
sahf
jge
dec
je
test
dec
or
test
sbb
call
add
sbb
hlt
cmpb
push
mov
pop
cmp
sbbb
mov
cld
das
xchg
push
or
mov
jge
xchg
lret
lahf
sbb
xor
lds
mulb
dec
lock
loope
hlt
cs
mov
and
addr16
push
jge
cmp
es
xchg
add
fistpll
sub
adc
push
xor
int3
jns
xor
lret
or
xchg
addl
mov
jp
repnz
xorl
data16
ficomps
sbb
mov
js
sbb
test
frstor
mov
or
mov
dec
sub
or
inc
stos
mov
push
mov
lret
arpl
jg
and
cmp
and
decl
insb
fisttps
sbb
dec
icebp
mov
cmp
insb
in
jnp
stc
repnz
jb
mov
fstl
adc
incl
loope
ljmp
fisubrs
inc
mov
shl
jg
mov
dec
fcomi
push
daa
jl
jae
leave
push
pop
or
idiv
scas
addr16
rcrl
sub
sarl
jge
xchg
push
mov
sbb
cmp
aam
cmp
rcl
dec
leave
enter
jge
xchg
ret
ja
andl
xchg
jmp
ja
ret
test
adcl
or
sbb
adc
sbb
inc
movsl
mov
sbb
add
movb
mov
jle
mov
ret
bound
mov
scas
push
add
cmp
js
lret
lahf
sbbb
mov
outsl
cmp
pop
imul
pop
add
push
outsb
imul
sbb
fs
inc
out
or
scas
dec
ret
add
xor
sub
das
dec
mov
push
cs
jle
addr16
cmpsl
cmp
outsl
loop
mov
inc
cs
push
adc
mov
adc
lods
repnz
jecxz
xor
fs
pop
rcll
into
insb
sarb
jbe
pushf
ja
out
add
inc
addr16
loope
and
adc
xchg
mov
mov
mov
mov
fmull
or
xor
movb
inc
cmc
loopne
and
fs
jnp
in
fisttpll
jne
xor
add
bound
push
in
lcall
out
insb
jns
mov
xor
xchg
inc
test
inc
icebp
hlt
inc
into
clc
gs
mov
inc
mov
jp
loop
push
push
dec
inc
scas
lret
xor
pop
add
add
cmp
mov
call
sub
mov
fsubp
test
pop
or
mov
fnstenv
popl
mov
inc
filds
clc
jb
push
stos
xchg
addb
mov
ljmp
adc
jmp
int
mov
xchg
and
repnz
insb
xor
sub
popa
inc
add
mov
clc
push
rcll
clc
testl
sbb
cmp
je
pop
ret
mov
sbbb
xor
int3
dec
sbb
push
and
stc
aam
popa
daa
jne
jns
mov
sub
pop
jge
movsl
mov
inc
push
fnsave
into
jmp
push
jne
mov
imul
pop
adc
ret
les
jmp
mov
push
xor
nop
dec
mov
fmul
adc
inc
push
jecxz
mov
inc
int
popa
jns
mov
aaa
outsl
hlt
shll
jae
and
cmp
movsb
sbb
mov
pop
ljmp
clc
enter
out
mov
xor
sbbb
mov
shlb
pop
je
jmp
arpl
push
test
inc
mov
clc
add
mov
lods
dec
mov
mov
cli
sub
mov
clc
decl
mov
lods
and
cmpsl
out
xlat
mov
sbb
add
fidivrs
cmp
and
loope
or
sbb
cli
fiadds
lods
jge
dec
jo
pop
jg
push
insl
dec
stos
mov
lahf
int
adc
pop
jle
test
lcall
fisubrl
inc
mov
pop
jl
add
sbb
jbe
in
icebp
popa
iret
gs
addr16
lahf
sarb
push
mov
adc
cmpb
push
mov
jbe
xchg
hlt
inc
out
loope
scas
das
sbb
add
mov
or
in
dec
sarl
aad
and
or
out
cmp
sub
add
scas
cmp
les
ret
jge
movl
icebp
mov
aad
loopne
xor
add
sahf
xor
and
xchg
test
mov
push
fidivs
fld1
jmp
cld
imul
push
mov
inc
inc
cmc
in
dec
inc
std
push
int3
das
pop
mov
mov
lods
fsubr
xlat
sarb
xor
stc
jmp
loopne
in
shll
dec
out
outsb
insl
lds
cmc
pop
xchg
xbegin
call
sarb
sbb
add
sub
shll
xchg
out
incl
andb
sub
loopne
push
cwtl
inc
das
out
sbb
xchg
fs
jbe
fisttps
or
sbb
jmp
dec
xor
repnz
aam
stos
jg
inc
repz
fimuls
xchg
jle
call
cld
inc
or
lret
jnp
fidivrs
or
push
sbb
mov
jbe
mov
repnz
push
hlt
adc
sti
js
test
pusha
sbb
idivb
fstpl
pop
adc
ud2
xor
xor
cltd
ficomps
jo
dec
jg
in
mov
xchg
repz
lcall
mov
loope
enter
inc
in
cli
sbb
push
dec
gs
in
xchg
sahf
pop
jmp
add
cld
pop
xor
aam
cs
and
in
mov
int3
push
pop
outsl
and
push
and
and
adc
mov
push
adcl
loop
enter
push
ss
dec
daa
jp
fbld
push
adc
ss
sarb
mov
jecxz
daa
sbb
fildll
lds
lcall
or
dec
mov
shl
and
mov
mov
and
in
mov
fnstcw
mov
or
cli
je,pt
insb
loopne
test
push
cmpsl
push
cmp
add
movsb
lcall
iret
es
jmp
insb
jg
dec
enter
cmp
cmp
mov
push
repz
out
mov
test
movb
fdivs
push
pop
insl
cld
test
and
jnp
movsb
cmpsl
sbb
adc
fnstcw
xchg
xchg
push
cmp
fildll
sbb
pop
decb
or
shr
mov
loope
jae
push
cmp
jg
pop
test
push
fmuls
dec
sbb
out
or
rcll
pop
or
stos
xor
push
xchg
push
out
inc
push
test
jecxz
rcrb
je
imul
in
push
fidivl
in
gs
cmp
in
sbb
cs
bound
insl
dec
pop
stos
xlat
mov
shll
cs
sub
inc
push
pop
int3
sub
jge
xchg
ja
imul
inc
mov
xor
mov
in
bound
jns
jp
pop
adc
lea
xor
jmp
pop
jbe
testb
fisttpll
xchg
inc
lods
jecxz
sbb
dec
mov
xchg
andl
cmp
aaa
sahf
xlat
adc
imulb
mov
mov
xchg
enter
sbb
stos
xchg
jle
pushf
sbb
outsb
mov
pop
or
arpl
test
xor
sbb
in
movsl
cmp
xchg
ret
jnp
inc
xlat
ljmp
int
mov
dec
mov
jg
mov
and
mov
pop
cwtl
jo
pop
lret
xchg
sub
cmc
loopne
decl
push
xor
stos
in
repz
jmp
add
jle
add
ja
inc
mov
insb
lock
aas
xchg
adc
andb
pop
jl
out
adc
sub
pop
lock
dec
dec
int
jo
scas
jecxz
test
rcr
aad
xor
or
outsb
aam
jg
jno
test
hlt
in
jg
loopne
rcrl
jno
inc
jns
fcmovnu
ljmp
sti
adc
scas
jmp
mov
mov
and
xchg
daa
inc
mov
and
outsb
fsubrs
push
lea
adc
or
dec
pop
mov
jle
add
out
adc
sub
mov
jb
xor
test
xchg
mov
scas
mov
add
jne
cmp
jbe
divl
sbb
xchg
test
sar
pop
cld
sbb
adc
cli
push
fwait
test
imul
ja
add
or
sub
out
subb
cli
in
push
dec
push
repnz
movsl
nop
fadds
inc
mov
into
movsl
push
out
push
inc
lods
incb
fistpll
and
lods
jne
rorl
push
dec
mov
popa
xchg
mov
adc
mov
xor
jns
pop
mov
shll
bswap
pop
call
outsl
cmpsb
loope
clc
xor
mov
sub
sub
lds
lahf
inc
and
fwait
xor
mov
pop
lock
adc
mov
inc
push
mov
mov
xor
cmp
xchg
aam
jns
sub
xor
xor
mov
add
cmpsl
or
mov
mov
outsb
sub
cmp
fildll
adc
cmp
jmp
aam
add
lcall
mov
sahf
fadds
iret
nop
cli
jb
push
dec
jl,pt
in
jg
mov
mov
jg
add
std
sub
xchg
inc
mov
jmp
aaa
pop
into
ljmp
mov
movsl
pop
std
lds
imul
mov
add
fadd
inc
mov
push
mov
addr16
out
cmp
add
jg
lock
testb
inc
dec
clc
cmp
mov
add
mov
xchg
incl
aas
fstp
je
mov
ss
adc
mov
push
xchg
dec
mov
sti
mov
push
inc
adc
and
sub
cmp
inc
sbb
cmp
pop
lods
inc
shrl
dec
push
cmp
add
and
push
cmpsb
int
arpl
jp
cmp
push
pop
outsb
inc
mov
dec
sbb
push
add
and
aaa
pop
or
mov
pop
or
sub
xchg
add
test
neg
lods
add
mov
inc
outsl
les
lret
shr
les
fucomip
xchg
push
sbbb
in
inc
cmp
insl
pop
mov
mov
mov
loop
and
rcrb
pop
sub
mov
mov
xchg
ss
pop
xchg
incb
adc
or
in
je
add
sysret
repnz
inc
outsl
or
push
mov
rclb
mov
decl
cmpl
xchg
out
jge
fnsave
pop
es
jp
jb
pop
ucomiss
loopne
push
insb
jo
movsb
add
call
in
xchg
cmpl
scas
jmp
lds
sub
sub
sub
scas
push
insl
sub
add
shrb
pop
add
int3
jp
jne
adc
pushf
arpl
into
add
movsb
add
cli
outsl
lock
or
scas
sub
jae
xchg
add
data16
fildl
cltd
mov
fs
sub
loopne
dec
xchg
sbb
ds
adc
jmp
loopne
mull
fidivrs
dec
jbe
clc
lods
lods
mov
dec
mov
lcall
int
inc
inc
jl
jmp
adc
scas
mov
daa
std
mov
inc
sbb
jecxz
test
and
adc
mov
push
clc
sub
shrl
imul
adc
mov
push
hlt
inc
jno
dec
popf
mov
pop
xlat
sub
sti
fstps
icebp
xchg
sub
push
lcall
hlt
xlat
int
add
cmp
and
xor
jnp
or
jmp
fbstp
mov
jmp
dec
jae
testb
rcrl
les
mov
mov
repnz
inc
jmp
icebp
jns
and
add
inc
or
sbb
pop
mov
xchg
push
test
and
fcompl
inc
pushl
enter
data16
call
xchg
data16
aaa
jecxz
xor
pop
pop
decl
andb
cmp
jmp
jp
sbb
sbb
mov
mov
cmc
sub
mov
shrl
movb
jbe
std
xchg
adcl
aad
je
add
cld
or
into
push
fimull
inc
and
loop
ljmp
jmp
jne
push
insl
sahf
and
stos
mov
mov
fmuls
xor
push
mov
pop
imul
push
mov
icebp
mov
ss
arpl
xchg
xchg
push
mov
stos
in
mov
test
test
outsl
test
mov
sbb
inc
es
pop
mov
out
aad
and
outsl
mov
adcl
fldcw
lea
fcom
clc
insb
clc
or
cmc
btc
push
ss
addb
cmp
jle
movsl
pop
repz
scas
jmp
jno
in
or
cmp
xchg
popa
inc
mov
subb
les
aas
roll
subb
xchg
imul
adc
shr
into
inc
mov
lock
lock
mov
jge
imul
dec
inc
negl
lcall
xlat
jg
push
xchg
pop
push
out
inc
fcomp
in
pop
call
jno
xchg
in
mov
dec
or
push
xchg
cmpsb
mov
jne
jns
stos
mov
popa
inc
mov
and
addr16
mov
cmp
loopne
sbb
sbb
mov
or
cli
mov
shr
xlat
jo
sub
xchg
inc
sbb
mov
decl
mov
pop
inc
jl
push
stos
clc
stc
mov
mulb
pop
mov
mov
repz
push
pushf
inc
faddl
sbb
sub
pop
pop
push
ficomps
pop
ja
add
cmp
out
cmp
jno
cmp
inc
push
sbb
stc
jge
aas
jp
xor
in
jecxz
hlt
mov
inc
push
inc
sub
adc
stc
testl
dec
loopne
dec
scas
repz
les
sahf
push
jp
hlt
cltd
ljmp
ffree
pop
aas
mov
std
aaa
lds
inc
imul
mov
push
out
jns
jg
loope
xchg
mov
jne
push
pushf
jbe
jb
insl
fnstsw
arpl
adc
rol
xor
mov
mov
dec
shrb
jg
or
pop
cmp
fs
sub
pop
outsb
loop
add
pop
das
arpl
adc
loope
mov
scas
ret
sahf
fmul
mov
pop
insb
lods
xchg
cli
ds
dec
xchg
aaa
in
sahf
xchg
into
add
outsl
fwait
xchg
cmpsl
orb
mov
movsb
inc
inc
data16
es
and
iret
out
sub
in
mov
lahf
sub
inc
mov
call
adc
std
lcall
out
lahf
adc
or
out
push
inc
sbb
lret
hlt
ss
dec
push
inc
leave
out
push
xor
shl
push
pop
les
cmp
or
sbb
into
loopne
ja
inc
xchg
imul
dec
rclb
and
sub
pusha
cmp
pop
subl
mov
into
xlat
decl
icebp
int3
push
sbb
push
push
ret
sub
dec
lret
xor
mov
scas
fbstp
cmp
ja
push
adc
push
pop
inc
xchg
push
pushf
sub
fcmovb
cld
inc
das
cld
and
mov
fisubrs
clc
outsl
cmp
add
adc
in
hlt
inc
je
mov
test
sub
faddl
loopne
pop
mov
xor
inc
pop
cmpsl
rcrb
shll
mov
in
pop
push
cmp
dec
jo
sahf
inc
adc
add
leave
rolb
aad
mov
rcl
enter
push
shrl
or
out
dec
lods
aad
and
outsl
add
lods
jle
sbb
sbb
sub
leave
mov
push
adc
jg
loopne
add
dec
xor
out
fistpl
add
xchg
cli
add
pop
cwtl
mov
icebp
jnp
imul
jbe
loope
lock
fmull
fsubs
cmp
xchg
add
mov
cmp
shrb
push
in
dec
out
and
mov
xor
mov
orb
mov
cwtl
jg
je
push
xor
addr16
jnp
sar
cmp
jg
sti
mov
cmp
xor
mov
xor
pop
into
test
add
or
push
icebp
xor
test
xlat
dec
bound
lret
xor
in
cmpsl
clc
arpl
test
aas
xchg
xchg
mov
ficoml
mov
xchg
push
daa
sbb
outsb
negb
imul
sbb
sub
in
movsb
xchg
cmpb
push
add
push
notl
iret
mov
xchg
addl
out
adc
pop
or
mov
test
loop
in
jecxz
dec
adc
loope
call
jno
sub
or
push
es
or
push
lret
decl
je
mov
cwtl
mov
sbb
or
mov
out
push
rorl
lfs
adc
mov
lods
mov
mov
fimull
adc
hlt
jno
add
insl
cmp
jl
mov
jns
lcall
cmpsl
addb
fsubs
lods
std
cs
and
fs
sbbb
sbb
mov
push
out
xor
rol
push
rclb
movsb
cld
mov
mov
adc
or
sub
pop
jno
leave
xchg
int3
pop
jge
aaa
mov
xchg
imul
ret
ret
cmc
mov
int3
mov
insl
fstpt
stos
pop
mov
add
orl
jle
leave
pop
out
add
mov
ljmp
jb
sub
push
dec
push
stos
xor
jecxz
and
ret
adc
adc
fisttps
push
jae
add
js
mov
jmp
aaa
sbb
hlt
xchg
pop
push
add
nop
jns
test
insb
add
inc
cwtl
add
sbb
popa
ret
shll
mov
push
cmpsb
cmp
or
and
fisttpl
mov
xchg
fsubs
aaa
icebp
or
jle
aam
sbb
pop
xor
sbb
mov
test
dec
inc
nop
mov
inc
xor
xor
push
adc
push
or
fldl
and
sbb
jle
loopne
and
dec
addb
xor
ret
mov
nop
push
jmp
in
dec
repnz
xchg
pushf
xchg
setle
mov
sbbl
mov
xor
mov
fdivrs
rorb
decl
cmp
xchg
push
rcrl
push
adc
movzwl
pop
pop
fucomi
cli
arpl
inc
shll
mov
ret
mov
mov
loop
adc
inc
jo
or
mov
sub
jnp
dec
je
jnp
jg
mov
movsb
in
and
pop
mov
mov
jne
cmc
jno
and
mov
arpl
rorb
mov
jecxz
scas
and
inc
hlt
adc
adc
xorb
mov
and
insb
inc
pop
out
push
lock
xchg
sbb
jne
fbld
push
out
xorb
test
enter
das
les
or
or
jno
jnp
cli
mov
push
arpl
and
jmp
jecxz
and
stc
or
outsb
dec
lods
pop
inc
ss
pop
testl
scas
int3
sbb
cmpb
out
sbb
mov
les
jle
icebp
xorl
enter
inc
push
cld
cmp
lods
sub
jno
and
sarb
add
pop
cld
mov
add
xor
inc
lods
mov
lahf
jne
shll
clc
into
sbb
mov
xor
imull
je
pop
sahf
add
outsb
les
mov
sbb
or
cmp
sbb
push
rcrb
fnsave
orb
adc
jae
mov
scas
clc
rolb
out
test
iret
sar
fsubrs
add
cmp
push
mov
jle
dec
loop
mov
icebp
jge
push
mov
mov
mov
decb
add
cmpsb
les
push
popf
and
push
pop
xchg
test
or
and
mov
push
fstp
jmp
and
popa
ljmp
dec
insl
movd
xorb
push
cwtl
pusha
push
xor
jge
mov
sar
mov
sbb
test
add
out
jne
mov
enter
lock
push
aad
insb
inc
jmp
cld
pop
jl
fcoms
lahf
icebp
gs
add
cmp
in
cmc
fstpl
test
ret
cmp
sti
mov
mov
or
jmp
std
or
loopne
pop
pop
pusha
lret
push
xor
mov
imul
les
add
sbb
pop
mov
mov
les
lock
add
or
sbb
incb
cli
loop
jge
adc
jle
xchg
hlt
xchg
pop
insb
test
cmp
outsb
cmp
mov
push
pop
mov
fadd
scas
cmpsb
adc
ljmp
aam
mov
or
outsl
jo
jg
dec
mov
sbb
inc
dec
icebp
add
adc
pop
push
mov
test
push
jle
sub
aad
in
and
movlps
and
add
adc
inc
mov
pop
insb
mov
or
cmpsb
jb
cwtl
push
je
pop
mov
scas
sahf
jg
add
mov
and
dec
test
loop
es
inc
mov
or
fldl
incl
pop
xor
cmp
stos
addr16
movsl
push
aaa
push
in
pop
repz
mov
lds
add
loope
xor
incl
lahf
test
xchg
add
aaa
fucom
mov
gs
adc
aam
hlt
test
dec
adc
popa
inc
dec
push
mov
out
subb
ret
mov
or
stc
push
scas
push
jne
lret
xchg
or
mov
jo
pusha
lcall
mov
dec
mov
fistpll
add
or
adc
ja,pt
rorl
cmp
push
sti
ljmp
test
js
call
pushf
pop
cmpsl
jns
scas
adc
push
adc
lock
rcrl
fiaddl
xor
sub
xor
outsb
push
andb
sbb
inc
pushf
xchg
not
loop
call
jnp
and
into
push
dec
jbe
add
pop
sbb
adc
stos
cmp
and
xchg
xchg
outsl
nop
jbe
fimuls
adc
mov
push
in
xchg
cmp
add
pop
mov
rorb
push
repz
outsb
pop
je
enter
and
shlb
rcrb
push
ficoms
jg
arpl
inc
jae
xor
or
jl
imul
sub
cmp
in
aas
mov
loope
push
pop
sub
cli
mov
clc
mov
icebp
pop
or
js
mov
jns
jo
or
jg
cwtl
mov
xchg
xlat
sbbl
pusha
cltd
and
lock
test
cld
imul
dec
mov
orb
push
jmp
push
lahf
jp
loopne
add
outsl
cmp
pop
adcb
adc
sbb
and
inc
inc
cltd
cld
sbb
sbb
pop
mov
pop
stos
pop
cmp
mov
das
mov
enter
test
es
sbb
sbb
jg
add
mov
ss
rolb
je
dec
xchg
out
mov
add
std
divl
pop
mov
mov
mov
pop
xor
push
pop
lret
and
xor
mov
pop
decb
mov
sti
and
jg
dec
or
push
xor
dec
test
ret
jb
cmp
xchg
mov
lret
pop
mov
jmp
inc
cmp
sbbb
jp
mov
xlat
arpl
cmc
fisttpll
sti
push
xchg
add
pop
int
sub
adc
push
xchg
jo
xchg
clc
add
inc
jge
stos
repz
in
in
loop
dec
and
sub
in
mov
jb
test
imul
cmp
loop
sub
jbe
xor
je
arpl
pop
cmc
popf
mov
repz
fsubrl
sarb
loop
stos
lahf
sbb
xor
mov
outsl
mov
rcr
ljmp
mov
jns
fisttps
xorl
sahf
imul
mov
aaa
sbb
clc
sbbl
pop
add
lahf
jge
pop
insl
je
jnp
pop
fcomps
and
jl
and
adc
mov
in
clc
gs
icebp
mov
adc
out
jle
fldenv
pcmpgtd
jmp
out
push
mov
mov
jg
or
push
leave
jmp
xlat
pop
add
and
pop
mov
aad
cmpsb
cwtl
sbb
out
dec
icebp
shrb
add
push
xchg
push
out
loopne
add
jb
add
add
lea
mov
inc
mov
mov
scas
lock
loope
jl
xor
shrl
daa
sbb
jne
jae
mov
aad
xor
push
ret
std
pop
sub
cmp
subl
enter
mov
ljmp
shrl
jns
dec
adc
lret
leave
pop
inc
pop
cmp
mov
push
scas
inc
pop
xchg
cmp
add
sub
ret
loope
xor
pop
xchg
shl
jb
fidivrs
in
and
cmc
xor
xor
icebp
pop
adc
fs
adc
orb
jge
cmc
mov
mov
xor
in
push
int3
dec
sbb
in
xchg
lods
bound
outsl
and
loopne
or
sub
mov
xchg
hlt
xor
stos
or
data16
in
mov
sti
rol
and
inc
inc
inc
xchg
add
subb
dec
cmpsb
push
lods
ja
push
fdiv
pop
or
cmp
or
rorb
add
xor
cmp
sbb
push
test
iret
pop
cs
or
sub
and
add
aaa
or
adc
hlt
push
xchg
lods
fisubrl
aad
das
mov
fistpll
add
ficomps
xor
inc
ret
popa
jnp
mov
push
enter
mov
and
movsb
mov
js
mov
stos
push
ja
lock
das
add
scas
adc
xchg
sub
cmpsl
call
jns
pusha
and
outsl
shl
and
inc
fs
pop
decl
mov
shlb
shlw
aad
movsl
inc
movsl
in
ss
jg
cmp
and
mov
adc
and
repz
cmpsl
out
sahf
call
jp
inc
pop
into
test
push
xchg
mov
mov
inc
stc
pop
subl
ja
cmpsb
add
sub
cmp
test
mov
es
mov
inc
out
xchg
or
dec
gs
test
jmp
push
daa
nop
inc
lret
adcb
pop
lds
or
adc
pop
mov
or
out
fadd
cld
push
jp
inc
test
ljmp
fildll
push
or
fsubs
xchg
cmp
mov
push
cmp
negl
pop
negb
testb
les
clc
and
je
add
cmp
cmp
jecxz
cmp
jp
test
or
gs
xchg
fists
adc
stc
sbb
sbb
es
push
lods
cltd
pop
dec
divb
dec
mov
jno
aam
sbb
les
ret
add
lods
pop
and
call
insb
int
sbb
lcall
ds
daa
pop
adc
call
sub
out
inc
push
push
loopne
jg
sub
shlb
cmc
aad
rolb
push
in
pop
add
and
mov
push
jmp
jl
imul
lea
and
or
les
rcrb
xchg
incl
or
fiaddl
stos
sti
or
call
mov
mov
in
sarb
outsb
mov
cltd
and
mov
loope
or
jns
aam
lea
push
jg
jbe
adc
push
sbb
mov
inc
jge
mov
and
popf
cmp
adc
add
mov
push
in
fwait
or
pop
enter
mov
push
mov
jbe
orb
and
adc
aas
mov
or
mov
movb
jg
push
sub
dec
inc
mov
pop
xchg
pop
or
lahf
jge
popf
sub
inc
fdivr
pop
or
js
mov
mov
in
push
sbb
inc
jmp
idivb
enter
dec
xor
fbstp
shll
xchg
xchg
mov
add
mov
lods
inc
roll
cmpsl
xor
sbb
jg
into
addr16
add
movsb
adc
mov
adc
aad
add
pop
push
ljmp
cmp
hlt
push
movb
inc
incb
pop
fdivrs
inc
jbe
push
pop
pop
lds
sbb
scas
stos
jle
outsl
fbstp
xor
push
dec
int
sbb
incb
pop
xor
dec
push
sbb
or
les
fcomps
stc
das
and
cmp
inc
sbb
jle
jo
jno
mov
pop
dec
push
pushf
mov
xchg
jne
repz
clc
ljmp
dec
mov
in
mov
lods
pop
or
shll
int
add
imul
cmp
xlat
dec
mov
push
and
test
pop
inc
pop
push
mov
and
or
mov
mov
mov
fs
jb
mov
hlt
ret
mov
mov
jge
gs
jo
jle
cld
data16
sub
cmp
lret
incb
mov
or
push
cmp
pop
iret
pop
jg
lcall
decl
and
sbb
and
jecxz
loop
inc
in
cmp
into
inc
popf
pop
push
aaa
mov
xchg
push
test
fildl
lods
inc
dec
jns
es
lret
notb
pop
dec
cmpsl
push
sbb
jp
jg
loope
add
test
and
push
stos
test
test
iret
loopne
and
inc
into
fistps
test
mov
fisubrs
test
lock
lods
jmp
iret
mov
cmpsb
lock
jl
out
lret
mov
mov
add
jmp
andb
cmpsl
mov
dec
mov
mov
jbe
sub
add
and
out
std
or
lods
fsts
xchg
mov
push
popf
add
add
les
sbb
stc
xchg
xor
pop
xchg
cli
out
jb
push
mov
cmp
xor
push
ljmp
pop
mov
sub
popf
andl
out
clc
inc
push
and
clc
or
inc
fnstcw
mov
and
sbb
movsb
sub
jl
cmpsb
mov
xor
add
jle
mov
or
pop
pop
movsb
icebp
loopne
pop
cli
pop
push
dec
sub
into
xchg
dec
push
dec
mov
cld
push
push
cmp
and
lret
sarl
leave
push
cwtl
ret
xchg
xchg
jle
vxorps
dec
xchg
mov
adc
sbb
cld
adc
imul
ret
sbb
lods
lock
aad
mov
iret
dec
sub
or
push
scas
sbb
mov
inc
push
fsubs
dec
adc
add
sbb
cmpsb
les
or
fwait
and
push
jp
lea
sbb
sbb
repz
test
pop
scas
dec
movsl
add
rsqrtps
mov
int
testl
repz
pop
movsl
sub
pop
sbbl
mov
rcl
call
arpl
sti
out
mov
das
push
popa
shl
dec
and
push
cld
mov
mov
xchg
jecxz
inc
xchg
and
outsb
add
and
stos
and
inc
lods
test
fwait
or
inc
lods
add
dec
dec
das
mov
daa
add
test
cmpsl
dec
lret
testb
jo
lods
jae
sub
lret
test
xor
rclb
mov
out
and
inc
repnz
jo
out
ret
pop
popa
mov
pop
adc
dec
roll
mov
gs
inc
shll
ja
rcll
mov
repnz
mov
or
push
push
in
les
rclb
sub
xchg
jne
pop
stos
loope
adc
xchg
xor
std
inc
popa
xor
mov
test
sbb
mov
mov
jg
inc
imul
or
cmp
mov
fistps
popf
sti
out
push
jecxz
in
add
inc
push
or
insl
cld
jnp
inc
fdiv
leave
sbb
js
popa
pop
fdivs
jb
mov
jge
imul
adcl
fs
nop
adc
cs
clc
addr16
es
aas
int3
xchg
fadds
adc
and
pop
mov
adc
fwait
mov
jmp
mov
jb
and
sbb
mov
mov
aas
and
inc
sti
pop
sub
jne
in
cwtl
scas
shrb
cmc
and
imull
mov
cmc
daa
aam
push
cmp
popa
push
push
mov
addl
fs
gs
sbb
xchg
iret
ljmp
jne
sbb
jle
jnp
dec
jae
push
xchg
dec
push
aaa
push
cli
test
push
cli
dec
mov
sbb
loope
mov
nop
or
pusha
push
ljmp
dec
sub
add
or
add
pop
std
jg
fwait
inc
add
ret
push
mov
js
neg
add
test
movsb
sahf
loopne
jge
sub
test
cs
cmp
icebp
sub
pop
inc
std
mov
clc
pop
loop
mov
mov
test
xor
mov
cli
lret
outsb
and
mov
popf
sub
and
adc
jbe
and
jge
out
sub
sbb
insl
lods
sbb
int
or
pushw
ret
mov
aas
push
jbe
sub
aas
fiadds
fucom
cli
call
dec
popa
dec
idivl
inc
fdivl
cmp
inc
and
arpl
or
addb
fistpll
loop
outsl
ja
pop
pop
fdivs
cld
add
subb
cmp
jbe
pop
ret
in
inc
sbb
loope
adc
jbe
sbb
imul
mov
xchg
jo
mov
dec
mov
inc
dec
inc
test
adc
jg
jnp
mov
and
test
push
repnz
das
cmp
and
push
add
fcmovnb
sti
test
cmc
mov
in
mov
iret
mov
in
adc
rcrb
sbb
lock
xor
mov
push
or
fsubrs
jg
jno
lret
enter
pushf
sbb
push
stos
and
mov
loopne
inc
adc
mov
lods
xlat
cmp
push
cmp
and
loopne
insl
mov
or
lock
outsl
add
and
call
orb
adc
dec
push
iret
sbb
cli
pusha
ret
das
les
sbb
xor
and
fcomp
or
pushl
xor
xor
in
int
in
addps
cld
push
xchg
test
and
cmp
mov
call
imul
fistpll
dec
push
xchg
call
xor
mov
xchg
std
mov
jne
pop
jge
dec
iret
cmp
roll
and
jnp
sbb
addr16
ret
stc
and
into
or
xchg
jg
in
in
or
es
and
pop
mov
pop
inc
movsl
scas
xor
dec
aad
sbb
outsl
and
pusha
and
pushf
cld
mov
cmp
push
stos
int3
call
push
pop
loopne
jae
mov
je
sti
push
cmp
lea
xor
cltd
xchg
in
ja
mov
fwait
pushf
mov
popa
add
inc
lock
push
cmp
mov
or
push
inc
mov
stc
subb
je
add
into
mov
push
in
insl
stos
test
lock
push
cwtl
cmpb
pop
xlat
jmp
iret
add
test
call
ret
cmc
es
adc
jmp
fildl
xor
mov
arpl
xlat
sbb
sub
push
xchg
ret
jg
lcall
or
ja
ljmp
xor
flds
adc
xor
or
push
outsl
aad
or
inc
mov
mov
lds
and
lds
push
mov
sarb
xchg
in
xchg
addr16
push
jge
ljmp
shl
icebp
cmp
jb
add
adc
jp
clc
ljmp
fwait
mov
lahf
inc
push
pushf
inc
xor
jno
cmpsl
jmp
in
sti
cwtl
hlt
test
shl
inc
and
adcb
das
jmp
jne
addr16
mov
jle
repz
lds
sbb
or
adc
aam
push
cmp
int
call
xchg
and
inc
rorb
pop
dec
and
sbb
dec
jg
stc
cld
xchg
inc
or
add
sbb
aas
jp
subl
push
add
test
lahf
adc
jns
inc
popf
mov
dec
movsl
aas
push
dec
test
lret
jbe
dec
cs
in
jne
insl
mov
ja
cli
mov
out
enter
scas
xor
xor
addl
decb
xchg
push
shll
repz
inc
pop
fwait
jmp
sarl
aad
mov
stos
xchg
jmp
mov
test
sbb
inc
jp
loope
stos
shr
fisttpll
cmp
popa
test
xchg
mov
and
pop
xchg
mov
xor
jmp
push
and
movsl
or
inc
xchg
mov
sbb
arpl
inc
and
stc
out
cmpsb
jp
jl
test
and
daa
and
je
pop
ficompl
cmp
mov
popf
rolb
adc
xchg
lcall
data16
pushf
scas
pop
es
pop
push
lods
test
test
adc
inc
or
rcl
inc
add
incl
inc
mov
add
sbb
repz
and
arpl
ljmp
pop
mov
and
push
test
and
inc
push
movsb
sti
call
hlt
mov
call
fs
icebp
rcrl
hlt
push
fldl
mov
adc
ret
iret
mov
inc
adc
fxch
inc
add
stc
clc
popa
hlt
filds
sbb
movsb
stc
push
jb
dec
insb
shlb
js
push
in
je
hlt
jmp
cmp
add
leave
jp
cmp
aas
pop
sbb
mov
call
pop
divb
mov
repz
arpl
adc
mov
adc
sbb
sarl
call
pop
jl
in
mov
shlb
rcrb
es
inc
mov
rorb
jo
xchg
jecxz
arpl
xorb
roll
sub
add
pop
hlt
fs
pop
lea
inc
and
sbb
sub
das
push
aam
hlt
sbb
pusha
ret
sti
push
fwait
push
arpl
jp
lahf
cmp
les
inc
mov
shll
push
push
and
xchg
mov
lret
sbb
testl
fldenv
mov
sub
jg
or
hlt
sub
fbstp
mov
test
int3
add
xlat
xchg
dec
jge
push
ljmp
or
ljmp
dec
push
cli
sahf
addr16
sbbb
in
bound
out
out
xor
cmp
sahf
repz
loopne
cmp
mov
or
push
cmpsb
jb
sub
or
push
dec
add
cmp
dec
cld
jne
adc
jle
cmp
mov
arpl
xchg
ja
cld
call
shll
and
clc
mov
test
aad
xor
pop
jno
cmp
das
push
decl
jo
xchg
jmp
test
lea
adc
sub
aaa
push
int
sub
jmp
and
pop
in
mov
inc
xor
mov
lret
mov
mov
adc
mov
xchg
aaa
ficompl
cmpsl
add
pmullw
xor
push
je
push
xor
cs
mov
mov
fistl
sbb
fldcw
incl
xchg
shlb
pop
dec
ret
mov
push
xchg
mov
shrb
test
mov
sub
out
das
mov
sub
ja
xchg
mov
xchg
and
cli
xor
jnp
xchg
inc
xchg
test
sub
lods
push
sbb
scas
aas
subb
fcmovnb
sbb
jb
mov
in
call
sub
scas
cmp
mov
mov
inc
mov
pusha
xchg
fstps
outsl
por
dec
mov
jne
xor
incl
and
out
lods
push
fisttps
mov
sub
inc
shrl
into
sub
adc
movsl
mov
pop
inc
mov
fneni(8087
mov
movsb
rorb
movsl
ficomps
into
adc
fisubs
mov
cld
enter
fwait
fs
lds
pusha
in
pop
jbe
dec
bound
ljmp
test
push
cmp
xor
cmp
fisttps
adc
sbb
repz
das
popf
cli
inc
inc
sahf
aad
fisubs
push
clc
pop
lock
push
dec
divb
sub
or
pop
aas
mov
jae
add
aam
cld
rcr
jl
ret
push
mov
iret
jne
mov
push
pop
cmp
nop
and
jb
loope
out
enter
xor
cmp
push
or
out
add
cmp
outsl
scas
daa
pop
adc
and
pop
insl
jo
aad
pop
sbb
sti
jb
lcall
adc
xchg
and
cmp
jo
test
xchg
movsb
pop
mov
adc
cmpsl
cld
dec
outsl
fs
test
pop
xor
out
pop
xadd
and
cmp
test
fmul
dec
fwait
xchg
aad
in
imul
inc
adc
insl
jns
add
xchg
repnz
mov
daa
mov
les
cwtl
add
mov
dec
lods
pop
pop
iret
jp
inc
insb
xor
mov
xor
cmc
inc
cmpsb
pop
icebp
mov
inc
push
or
adc
cmp
adc
sub
xchg
call
jbe
and
adc
js
add
adc
loopne
jg
inc
ljmp
mov
jb
pop
dec
sbb
fnstcw
mov
cld
out
inc
or
data16
or
lea
push
aas
push
out
xchg
imul
frstor
repz
mov
jg
push
dec
adc
ljmp
ret
icebp
nop
jne
push
into
std
ljmp
pop
addr16
xor
or
xchg
push
loopne
push
sarl
iret
daa
jo
mov
add
sbb
pop
in
inc
add
pop
or
adc
mulb
out
out
fbld
test
orl
lcall
test
jns
mov
loopne
dec
mov
and
cmpsl
xchg
aam
or
mov
std
test
pop
cltd
outsl
jle
cld
push
sub
inc
xchg
dec
daa
and
popf
mov
push
inc
insb
dec
cs
dec
daa
adc
dec
sbb
lods
cwtl
xchg
mov
push
sbb
scas
and
mov
imull
jl
sbb
icebp
mov
jbe
sbb
xchg
cmp
pop
lcall
add
sub
pop
mov
xchg
ret
sbb
mov
lods
clc
mov
gs
cmp
jg
sub
cwtl
leave
xor
stc
xor
jge
clc
push
mov
inc
mov
fldcw
outsl
xor
push
negl
dec
test
sub
imul
mov
test
mov
add
lret
ja
push
adc
lahf
aad
mov
repnz
fsubrp
enter
mov
pop
add
cmpsl
mov
xchg
mov
test
pop
repz
test
or
pop
or
mov
scas
and
inc
les
stos
in
and
jnp
dec
das
sbb
sub
adc
dec
add
dec
scas
sub
push
mov
mov
push
in
jg
xchg
in
in
insb
aad
popa
mov
cld
inc
rcll
adc
adc
into
xchg
adc
pop
test
clc
and
sub
insb
dec
ljmp
mov
aam
and
insb
inc
icebp
mulb
and
cmp
cmp
clc
xchg
xchg
insb
shrl
inc
add
xchg
mov
pop
mov
shrb
js
clc
sbb
xchg
dec
cmc
mov
int3
test
push
dec
sub
jecxz
pop
lock
push
shll
adc
cmp
aaa
scas
cmp
xchg
pushf
fcmovnbe
test
fisubrl
sub
pop
pop
popa
fistl
push
arpl
inc
imul
inc
pop
mov
or
leave
shlb
push
or
mov
in
mov
adc
xchg
cli
or
je
jb
out
in
jbe
nop
pusha
sbb
jecxz
mov
icebp
push
cmp
imul
sbb
inc
daa
xchg
and
sti
ljmp
cmp
cld
mov
test
xor
in
inc
dec
push
test
xchg
inc
int3
xchg
leave
rorl
cmp
test
and
shlb
inc
sbb
inc
lahf
loop
dec
scas
and
into
fs
jg
pop
inc
outsl
out
mov
shlb
fs
ljmp
pop
dec
in
and
lahf
cmpsl
rorl
xchg
sbb
inc
xor
in
ret
outsl
fadds
out
aaa
adc
repz
and
adc
or
dec
jbe
sarl
test
test
mov
sub
mov
mov
std
xlat
pop
xchg
dec
sbb
push
aad
sahf
sub
lret
jp
test
sub
leave
aas
cmpsl
imul
sbbl
pop
or
mov
sub
enter
push
push
xor
mov
mov
lret
ret
cltd
mov
dec
aas
add
fwait
scas
pop
pop
pop
inc
or
push
add
add
mov
mov
icebp
cmp
int3
ds
cmp
or
or
add
scas
fistl
je
pop
ljmp
mov
pusha
mov
add
mov
sub
pop
ret
sti
xor
add
ljmp
jbe
movsb
push
fsubrl
or
xchg
mov
and
rorb
repz
bound
push
adc
cltd
sub
fistpl
leave
xor
repnz
add
cmp
lock
push
int3
negl
push
das
and
data16
adc
inc
lret
dec
mov
cmpl
sahf
add
sbb
pop
sub
add
jp
add
push
sub
dec
fnstsw
inc
push
es
xor
bound
fisttps
cmc
clc
out
dec
xchg
and
rcl
icebp
lds
mov
lea
in
dec
mov
jo
push
shl
adc
adc
jp
arpl
pop
outsl
sbb
sub
jo
loop
dec
sbb
jl
stos
lret
inc
add
add
mov
je
out
adc
xchg
rcll
bound
mov
cmp
push
jbe
pop
mov
jnp
push
push
xor
xchg
xor
outsl
mov
mov
push
lods
aaa
insw
jl
divb
pop
stos
adc
testb
gs
jecxz
push
adc
clc
fisttps
test
jae
xchg
pop
jb
test
dec
fmuls
ret
jae
insl
mov
inc
inc
xchg
adc
push
pop
jnp
je
js
repnz
sub
imul
into
mov
hlt
std
lcall
mov
dec
push
out
faddp
mov
lock
ss
insl
out
adc
pop
ja
jns
pop
cmpsb
mov
in
shlb
xchg
xor
push
fcmovnbe
and
arpl
rorb
fldz
dec
icebp
or
daa
shl
pusha
mov
adc
mov
cmp
sbb
std
inc
xor
push
and
mul
lea
pop
and
ds
mul
and
enter
out
push
cmp
dec
cmpsb
mov
dec
repz
pop
mov
xchg
test
inc
xor
pop
stos
xchg
inc
mov
push
movsb
cli
in
add
hlt
lods
inc
inc
pop
mov
movsb
jecxz
test
or
fidivs
aam
ljmp
rcrl
cmp
lahf
clc
cld
mov
mov
pop
js
jmp
mov
sbb
dec
js
fwait
cwtl
cltd
insb
ror
fidivrs
and
xlat
test
cmpsb
mov
mov
loop
push
pop
jbe
xchg
push
aaa
lock
out
xchg
imul
or
jmp
or
sbb
addr16
xor
jae
pop
mov
paddb
dec
scas
xor
lock
xchg
in
xor
jle
gs
lock
jle,pn
add
or
icebp
fwait
aad
dec
pop
fnstenv
mov
je
btr
pop
xor
push
fisttps
xchg
pushf
movsb
pop
iret
jb
cmp
rolb
push
faddp
xor
or
fildl
jg
mov
inc
pop
jge
das
jmp
adc
iret
push
mul
and
or
push
in
sbb
jg
or
push
mov
adc
call
in
loopne
fbstp
repz
movsl
mov
cs
fnstsw
adc
loope
dec
and
push
fcoms
pop
add
dec
daa
xor
and
outsb
jl
cmp
or
inc
xor
jmp
sub
cld
xor
in
cmp
lea
jl
nop
popf
mov
or
movsb
sub
hlt
ficoml
dec
inc
in
fisubrl
sub
sarb
mov
xchg
sbb
mov
mov
popf
sub
icebp
lret
scas
xchg
arpl
loope
mov
jnp
fwait
mov
inc
popf
inc
push
sub
pushf
cmp
xchg
mov
mov
jbe
and
pushf
loop
lret
jl
arpl
dec
mov
popa
cmp
dec
ss
xchg
mov
fmull
jns
lahf
or
pop
mov
ljmp
aad
xor
dec
ret
mov
mov
add
imul
cld
ja
mov
sub
das
test
inc
inc
xlat
jmp
lds
sbb
xor
in
pop
inc
ret
push
xchg
add
jle
lock
push
xchg
pop
out
mov
push
jno
push
fdivl
mov
mov
icebp
and
ret
int
mov
dec
mov
pusha
add
dec
or
mov
xchg
inc
jne
cli
mov
loope
push
adc
aam
call
sub
sbb
dec
das
in
das
roll
sbb
add
adc
addr16
imul
mov
dec
out
pusha
aaa
and
add
jge
cmp
or
in
lcall
and
adc
leave
repz
pop
lea
clc
mov
call
test
inc
jbe
jecxz
push
mov
movzwl
cmp
mov
pop
iret
mov
jo
roll
push
fistpll
mov
push
mov
xchg
ret
jae
fsub
loopne
ljmp
jne
push
jo
js
mov
in
mov
adc
lcall
lock
sti
lods
cmp
jbe
vmovd
lock
dec
kunpckwd
jl
mov
imul
mov
and
cmp
mov
in
rolb
xor
or
and
stos
pop
push
shll
xchg
stc
push
std
mov
cs
std
and
inc
xorl
jns
sub
shlb
mov
pop
and
jo
sbb
inc
sub
shlb
add
sbb
and
pop
xchg
adc
cmp
dec
mov
fsts
sar
popf
inc
xor
mov
cwtl
in
fsubl
add
decl
flds
cmp
and
cmpsb
aaa
push
shl
or
repnz
mov
aam
idivb
mov
fidivl
aam
adc
ja
adc
loope
jge
pusha
mov
aas
jae
lds
cmc
in
dec
les
inc
jle
ret
xchg
mov
mov
jno
in
and
test
out
and
dec
in
mov
push
iret
adc
add
xchg
mov
ret
gs
and
call
in
subl
pop
xchg
adc
stos
lcall
cmp
or
cmc
lahf
adc
adc
inc
jbe
dec
fnstsw
adc
dec
cmovg
sub
mov
andb
cmp
sahf
jmp
test
xor
cltd
push
cltd
orl
andb
and
mov
lock
stc
sub
in
adc
jp
loopne
jl
add
loope
clc
push
call
cmp
loopne
jae
mov
leave
lods
lods
push
lock
push
mov
sub
cmc
mov
sbb
push
mov
nop
add
dec
shrl
jno
daa
add
cmp
mov
dec
bound
cmp
jne
adc
pop
jo
aas
inc
fs
bound
outsb
adc
push
test
cmpl
addl
std
add
out
inc
repnz
fildl
jp
daa
mov
sahf
andb
loope
lock
ljmp
divb
shrw
in
dec
aad
decl
addb
pop
and
inc
mov
push
mov
loope
push
xor
dec
test
pop
lret
cli
mov
inc
rol
pop
inc
call
dec
jecxz
dec
shll
lret
jne
push
stos
aad
rcl
push
add
repz
int
or
movsl
sarb
pop
adc
nop
lret
aaa
lcall
iret
or
inc
jg
ljmp
pop
insb
out
idivb
fsub
inc
sbb
lea
stc
cmp
bound
jecxz
add
xchg
push
dec
clc
mov
jbe
push
fidivrl
idivl
mov
mov
popf
mov
in
inc
jle
inc
xchg
mov
les
mov
xchg
sub
cld
mov
pusha
bnd
mov
outsb
arpl
decl
pop
sbb
mulb
push
push
and
arpl
push
cld
pop
xlat
pop
ja
fstpl
sahf
sti
inc
lods
enter
cmp
xchg
popf
sti
pop
aas
cmp
mov
jo
cmp
and
cs
pcmpgtw
xchg
rcr
fisubl
andb
and
lcall
xchg
jp
out
das
mov
fwait
cmpsb
addr16
fwait
and
and
and
fcomps
test
andl
fsubl
out
xor
mov
fbld
outsl
call
iret
cmp
pop
pop
or
int3
icebp
sbb
push
das
mov
jno
into
jb
pushf
cmp
testl
cld
xchg
jecxz
push
je
mov
pop
mov
or
stos
xor
dec
pop
clc
pop
jae
inc
leave
jno
aaa
xchg
std
mov
sub
movsl
xchg
das
adc
aas
enter
adc
push
cmp
scas
jg
inc
jg
hlt
adc
mov
pop
shrb
popf
jnp
mov
insl
enter
or
adcb
popa
test
pop
and
imul
fistpl
ret
imul
adc
fnstsw
jp
loope
repz
sti
mov
jp
enter
xchg
xchg
xchg
in
xchg
test
sbb
pop
add
fdivl
andl
cmp
fldz
ret
push
jnp
les
inc
cwtl
adc
ja
mov
cwtl
jbe
pop
xor
gs
mov
rolb
inc
dec
mov
rcrb
cmpxchg
and
in
mov
lods
mov
sbb
test
cmp
ret
mov
test
adc
jle
loop
push
aad
dec
fsubrl
add
adc
insb
jge
push
cld
mov
lcall
les
loope
sbb
inc
loopne
push
cmp
jl
cmp
xor
push
pop
rcrb
fildll
int3
test
aaa
pop
jo
enter
jns
xchg
imul
pop
subb
divb
and
sbb
mov
pop
test
jge
xchg
cmp
pop
mov
add
sbb
fstps
mov
fstpl
push
jl
xor
lcall
loop
push
jne
cmpsb
stos
aad
push
cld
inc
test
jmp
ds
aad
xor
dec
pusha
out
inc
sbb
mov
aaa
daa
cmp
or
jnp
xor
xchg
lahf
add
popa
adc
lods
es
shlb
adc
pop
cs
subb
or
lock
aam
pusha
add
dec
push
xchg
add
loopne
pop
js
fs
sub
ficoms
inc
js
sub
sbb
in
stc
repnz
fucomip
sbb
jb
in
and
daa
lahf
sti
mov
and
shr
repnz
loope
shll
inc
fstl
mov
mov
mov
push
dec
ss
xchg
sbb
inc
xchg
xor
inc
call
daa
pop
sbb
dec
popf
jne
adcl
aas
rcrl
test
sub
cmpsl
pop
scas
sbb
mov
sub
push
sahf
pop
mov
pusha
in
pop
xchg
dec
adc
cmpsb
jle
nop
sbbl
xchg
add
inc
out
sbb
mov
adc
cmc
cwtl
dec
xor
int
jns
mov
cmp
push
int3
xchg
xchg
out
or
cmp
pop
daa
sbb
lcall
jle
sahf
or
xor
out
mov
or
mov
jno
push
lea
sbb
vpunpcklwd
xor
int
mov
push
push
sbbl
dec
and
ret
cmpsl
pop
movsb
call
fwait
bound
ss
jle
in
dec
mov
xchg
mov
pop
adcb
imul
xchg
aaa
dec
mov
cli
out
mov
adc
cmc
and
popa
xor
mov
mov
inc
inc
andb
repz
mov
and
mov
mov
add
sahf
mov
idivl
imul
nop
testb
lock
add
call
jg
sbb
or
es
dec
mov
mov
or
je
stos
push
jl
and
mov
test
sbb
test
adc
cwtl
xchg
xor
loopne
sub
pop
test
arpl
push
rcrl
call
stos
sar
inc
push
dec
jecxz
or
sub
mov
and
xchg
add
xchg
sbb
or
dec
cmp
call
fldt
in
lods
stc
aam
ja
pop
cli
fbld
push
pop
xchg
and
out
shl
and
mov
ljmp
mov
pop
xchg
cmpsb
lock
sub
enter
inc
hlt
mov
in
push
fsubs
dec
rorl
adc
shl
js
xor
test
ds
lcall
push
sbb
sub
inc
or
mov
fadd
in
popa
int3
xor
and
mov
mov
pavgw
sbb
decb
sub
pusha
out
push
inc
inc
imul
in
pop
add
add
mov
cltd
cli
shlb
les
xchg
dec
and
mov
hlt
push
ds
xchg
fisubrl
in
pop
ljmp
pop
loop
and
mov
lock
outsl
push
sbb
dec
xchg
lds
pop
loopne
sub
xchg
les
addr16
inc
pop
dec
pushf
jbe
jl
sub
or
inc
insl
icebp
js
fadds
test
imull
pop
ret
pop
jae
pop
or
jecxz
mov
sbb
push
hlt
push
add
leave
cld
jmp
call
add
push
xor
mov
cmc
jo
mov
mov
loopne
lods
sbb
xor
sbb
out
push
cmp
stos
and
ret
dec
mov
cld
rcll
and
pop
fs
add
lcall
sub
das
fdivs
mov
data16
add
push
jle
xchg
les
xor
or
fiaddl
test
call
int3
ret
mov
dec
and
inc
adc
movlps
nop
stos
dec
cmp
shll
daa
jl
jecxz
or
pop
cmp
and
cmpsb
scas
adc
dec
jecxz
xchg
imul
popf
mov
push
in
arpl
in
dec
stos
nop
mov
aam
fildl
dec
fistpll
cmp
popa
shrl
sbb
fldt
adcb
call
xor
js
in
data16
cmp
push
xchg
add
std
pushf
sub
aaa
into
sarl
or
movsl
jecxz
mov
mov
inc
push
popa
repz
jl
xchg
loope
pop
lock
mov
push
cmp
inc
mov
daa
lock
jecxz
mov
fsubrs
sbb
mov
jno
lret
ss
inc
aam
or
or
roll
dec
cmpsb
test
jae
int3
fcom
call
or
lcall
jp
push
inc
out
mov
pusha
inc
loop
inc
jns
fsubrp
mov
adcb
xor
mov
mov
shrb
pop
movsl
jp
loop
jb
fstps
add
adc
jecxz
into
jp
mov
jecxz
int3
cwtl
sub
lea
xchg
addr16
stos
jbe
xor
aam
cmp
mov
lcall
int3
xchg
mov
outsb
inc
or
arpl
sub
loope
adc
sbb
inc
mov
loope
dec
repnz
mov
shll
imul
adc
das
adc
andl
push
mov
imul
out
and
ret
int3
inc
dec
add
xchg
adc
xor
neg
mov
sbb
push
cmp
pop
or
mov
dec
xor
jp
mov
and
pop
andb
xchg
cli
mov
mov
cmpxchg
mov
adc
and
ljmp
nop
mov
mov
pushf
add
add
xchg
incb
insl
lods
push
pop
add
in
cmp
arpl
jo
sub
icebp
pop
fmul
push
and
sub
dec
shrl
call
and
push
and
dec
nop
cmp
scas
or
je
adc
sbb
cmp
ss
sub
or
icebp
xor
sub
add
int3
ja
lea
aam
sbb
shlb
in
dec
jecxz
jo
mov
push
arpl
out
sub
mov
mov
push
clc
rclb
cmp
mov
cmp
fistl
pop
jge
fstps
xchg
pop
pop
orl
cmp
xchg
mov
aas
add
addl
dec
int
dec
jb
adc
insl
sbbl
xchg
sub
cmpsb
stos
sub
test
in
push
xchg
inc
std
loope
inc
or
push
iret
hlt
bound
orb
lods
inc
pop
ret
inc
shl
cmp
xchg
mov
sub
popf
scas
inc
fsts
in
xchg
scas
repz
jge
xchg
sbb
push
imul
cmp
arpl
sub
dec
mov
daa
jbe
jno
dec
push
fidivrs
arpl
loope
jb
dec
stos
mov
sarl
push
andl
mov
scas
cmp
in
and
adc
or
nop
loope
push
and
frstor
jp
push
std
dec
inc
popa
push
mov
loopne
xchg
or
stc
clc
fildll
inc
and
dec
rcll
es
gs
fstpl
test
movups
dec
inc
inc
jle
cmp
cmp
inc
daa
cli
jno
popf
aam
inc
sbb
test
cmovs
sbb
insl
mov
lret
dec
pop
loope
scas
ffreep
or
lds
and
js
daa
outsb
fiaddl
lcall
xor
push
sub
ret
mov
mov
test
and
stc
adc
fdivrl
xchg
push
or
jg
jge
adc
sahf
imul
cld
jb
roll
stc
ja
es
jbe
jmp
in
add
cmp
mov
gs
sbb
jg
push
inc
jb
mov
pop
xchg
aad
shr
mov
or
pop
inc
les
das
adcl
inc
mov
nop
cmp
test
cmp
xchg
loopne
or
jbe
adc
pop
mov
push
scas
mov
inc
sbbb
xor
mov
call
inc
dec
pop
in
mov
sub
add
jg
inc
and
sub
cli
cmp
inc
es
pop
jle
in
pop
aam
sbb
andb
mov
xorb
arpl
push
cmp
inc
push
leave
test
ret
pushf
adc
pop
mov
xor
adc
in
int
jl
pusha
arpl
cmp
pop
clc
setl
xor
mov
sbb
mov
das
repz
or
fistps
loope
lcall
lods
add
nop
out
add
test
pop
leave
xchg
pop
les
jecxz
imul
jo
ror
fwait
jp
add
mov
push
adc
add
pop
and
arpl
push
call
xchg
sti
mov
jg
arpl
dec
insl
dec
mov
inc
adc
add
add
outsl
mov
or
xor
or
push
out
push
jge
aam
fimull
dec
sahf
ss
or
sbb
loopne
jo
enter
push
ljmp
fs
shll
and
mov
pop
scas
xchg
imul
roll
fstl
inc
in
loop
lods
jecxz
fisttps
and
loopne
fwait
cli
and
repz
fs
fcmovnb
adc
mov
dec
xchg
rcrb
inc
push
out
sbb
mov
test
call
bound
gs
outsl
aas
xchg
jge
repnz
mov
nop
or
xchg
cmp
mov
push
dec
in
or
jl
mov
negl
pop
sbb
dec
xor
inc
dec
jo
int3
rcl
ljmp
je
daa
add
mov
andb
xchg
pop
inc
xchg
jmp
push
sbb
mov
loope
loopne
loopne
icebp
push
pop
lea
stos
cmp
adc
or
lods
mov
lock
mov
mov
ljmp
pop
jg
mov
rcl
push
push
test
lds
imul
mov
shl
shrb
lods
shll
shr
enter
adc
adc
jb
mov
jp
mov
out
and
outsl
xchg
add
push
or
xchg
or
movsl
inc
les
insb
subb
ja
dec
mov
out
push
dec
xor
fs
cmp
cwtl
aaa
cs
push
inc
jp
cmp
dec
fdiv
iret
loopne
rolb
rorb
mov
cmp
imul
dec
repz
jg
outsb
jl
movsb
dec
push
xchg
data16
cmpl
mov
jmp
mov
popa
xor
mov
fdivrs
and
mov
outsl
or
cmp
in
cmp
repz
sbb
jns
adc
jg
js
sub
movsl
sbb
jge
xor
dec
pushf
and
in
insl
add
pop
out
ss
pop
out
gs
aad
mov
hlt
pop
loopne
mov
xchg
jne
pop
iret
cmp
cld
mov
frstor
mov
aam
mov
mov
ss
inc
fnstcw
jno
push
sbb
aas
mov
cmpsb
mov
lea
mov
ja
insb
cmp
loope
jmp
mov
icebp
insb
imull
fbstp
hlt
jne
test
js
xlat
xor
shll
fdiv
js
cli
pop
cmp
mov
adc
imul
xor
mov
imulb
dec
lds
call
and
loop
dec
jmp
mov
stc
sbb
fsubrs
jg
mov
pop
pushf
cmpsl
mov
lea
jo
fldl
push
xor
xchg
add
imul
nop
ljmp
add
push
movsb
clc
pop
mov
xor
mulb
adc
call
cli
mov
data16
lret
dec
pop
sub
and
mov
and
pop
sbb
andb
adc
mov
pushf
lds
aaa
mov
dec
imul
fs
js
dec
mov
pushf
sbb
mov
incb
test
inc
ja
and
jnp
loopne
movsb
add
jae
mov
mov
mov
jns
mov
inc
xchg
mov
mov
xchg
ja
adc
decl
fldcw
loopne
jmp
sbb
jae
and
inc
movsl
sbb
xchg
cs
sbb
add
fwait
add
lods
rcrb
jno
and
or
mov
add
arpl
jo
daa
dec
loopne
xor
pop
dec
mov
roll
push
adc
push
pop
fstp
sbb
cwtl
in
lods
frstor
inc
cli
mov
ficompl
leave
leave
jl
pop
in
cmpsl
mov
sahf
inc
and
inc
sbb
push
adc
rclb
xor
sub
ljmp
add
ds
mov
sub
lock
outsl
jo
pop
sahf
jge
ret
nop
dec
sub
mov
pop
hlt
and
pop
rcll
test
push
mov
mov
push
push
cld
sub
adc
xchg
mov
xchg
mov
push
fisubs
lcall
sub
cltd
sbb
pushf
ds
aad
enter
and
das
cmpsl
mov
cld
inc
push
or
pop
push
xor
lcall
mov
or
sar
sub
dec
std
out
daa
call
mov
push
ret
stos
jne
mov
sti
mov
add
mov
mov
outsb
pop
push
sub
rcll
xor
and
movd
mov
push
mov
lret
mov
mov
in
jb
sbb
mov
loopne
xor
or
mov
cmp
dec
inc
jg
mov
add
fistl
cltd
xor
pop
push
stos
mov
lcall
xor
and
mov
aad
fsts
outsb
add
cmpsl
mov
clc
shlb
sub
mov
cmpsl
add
cmc
push
aas
pop
add
cmp
lods
pop
dec
lahf
fbld
repnz
mov
cltd
add
loopne
shll
sbb
andb
imul
jmp
jp
dec
mov
in
push
aad
cmp
push
mov
daa
xchg
mov
xchg
call
pop
sbb
jb
sub
xlat
xor
sbbl
arpl
xchg
loope
shlb
dec
iret
loope
jle
lods
iret
xchg
inc
ror
movsb
test
lahf
shlb
sbbl
das
push
or
stos
inc
outsl
icebp
pop
int
rorl
out
mov
inc
add
pop
jmp
ljmp
lret
pop
push
cmp
or
and
mov
and
push
xlat
les
or
xor
in
in
lock
es
xchg
push
adc
sub
add
es
push
enter
and
xchg
or
sub
xorl
sub
cmc
divb
data16
add
pusha
inc
push
insl
inc
pushf
sbb
in
inc
jae
jecxz
push
mov
dec
jo
jg
icebp
sahf
test
sub
mov
popf
dec
mov
arpl
push
es
movsl
jno
fsubl
icebp
xchg
into
mov
cwtl
loope
imul
mov
psllq
mov
fistps
fnstcw
int3
xor
adc
dec
ja
push
ret
cmp
aaa
pop
in
mov
lea
dec
xchg
dec
stos
xchg
fs
mov
pop
lock
mov
xchg
test
dec
loop
jo
rolb
adc
push
xchg
cld
sahf
insb
loopne
mov
push
ljmp
or
lahf
mov
addr16
mov
push
out
fdivrp
pop
cmpsb
imul
pop
cwtl
sbb
xor
addr16
ficoml
rorb
rol
xor
iret
xor
or
mov
out
mov
stos
dec
cwtl
bound
add
add
rol
aas
rorl
mov
imul
addr16
das
int3
xor
jmp
cmp
subl
or
ljmp
js
dec
add
sbb
fidivs
fsub
cli
stc
popf
pop
mov
cltd
lods
pusha
gs
jbe
mov
sbb
popa
mov
clc
push
push
jmp
test
adc
inc
scas
mov
cmp
sbb
test
mov
in
arpl
dec
jp
lret
rolb
ljmp
out
adc
and
notl
jo
test
inc
jno
mov
sub
andb
and
xchg
fwait
cmp
sub
cmp
mov
jmp
pusha
sbb
cmp
and
into
sbb
das
movsl
jo
int3
pop
pop
std
ja
add
dec
lret
cs
in
imul
jo
xor
sarl
lods
push
sbb
jmp
sbb
cmp
ds
ss
test
cmpsl
enter
js
jl
jo
aaa
std
ret
mov
aas
sarl
or
add
test
mov
jg
xchg
lret
fcmovnb
xlat
setae
inc
or
jp
test
addb
push
js
inc
ja
xor
dec
inc
enter
mov
push
es
js
in
js
inc
jne
push
dec
ret
sbb
dec
inc
stos
cmpsl
ja
xor
leave
js
pop
xchg
pop
pusha
fs
ljmp
sbb
dec
cmpl
push
push
bound
sub
inc
daa
mov
repnz
enter
addr16
jg
ljmp
out
mov
mov
dec
mov
cmp
mov
clc
in
xor
lds
cmp
push
inc
push
xor
scas
lcall
jmp
push
cmpsl
das
prefetch
add
xor
das
push
addr16
xchg
mov
pop
in
pop
sub
pop
fidivrl
sub
push
xstore-rng
cmpsl
ret
jne
popf
push
inc
sbb
xchg
adc
jp
data16
pop
pop
jmp
cmc
add
arpl
and
xchg
cld
in
sub
dec
ret
xchg
sub
adc
cli
jge
push
mov
mov
pop
cmp
add
fidivl
sub
jg
cli
jb
dec
data16
fadd
shrb
adc
bound
outsb
mov
inc
movl
inc
pop
and
fsubl
test
adc
ja
scas
inc
or
inc
or
into
in
movsl
mov
fbld
xor
and
sub
push
inc
iret
stos
push
mov
pop
lahf
mov
adc
aam
imul
or
jnp
pop
add
dec
push
sti
dec
mov
pop
or
mov
sub
es
and
cmp
pop
call
fdivrs
shlb
or
icebp
jo
mov
or
mov
dec
cmpsb
es
and
jne
roll
lock
mov
pusha
push
les
es
add
cs
pop
pop
sub
push
inc
nop
imul
loopne
push
cmp
sbb
mov
rcrl
faddp
lods
clc
ss
leave
inc
sarb
and
inc
or
ret
mov
pop
and
sub
addr16
rcll
pop
popf
sbb
sbb
add
lahf
xchg
pop
je
mov
push
add
xchg
es
mov
pop
les
and
fists
test
cmpsl
mov
mov
clc
orl
flds
pop
loope
notl
out
scas
imul
lret
cmp
in
movsl
in
mov
dec
mov
ficomps
hlt
pop
addr16
cltd
out
xchg
cmpsb
add
inc
or
cmp
mov
and
in
bound
rol
mov
fnstenv
ret
dec
jns
mov
xor
fwait
jmp
sbb
push
mov
mov
insl
arpl
out
lods
mov
mov
cmp
mov
mov
mov
adc
das
leave
movsl
add
and
or
jmp
and
jo
fiaddl
pop
mov
addr16
call
mov
and
sub
adc
jo
call
push
lea
addb
ja
or
inc
adc
insb
and
fisttps
pushf
mov
lock
push
push
and
mov
dec
add
lods
xchg
pop
lret
filds
jecxz
jp
test
xchg
scas
adc
les
xor
push
gs
dec
loop
out
lahf
adc
mov
fcmovbe
and
iret
loope
cmp
or
std
aad
jbe
pop
bnd
xlat
dec
push
cmp
mov
ret
shlb
out
sub
jo
mov
pushf
inc
scas
cmp
sbb
fistl
rcrl
je
mov
cmp
in
iret
lods
fildl
jl
mov
and
jnp
xor
inc
aaa
popl
mov
jmp
mov
nop
and
inc
loope
cmp
nop
pusha
mov
push
scas
inc
mov
out
and
xchg
fcoms
xlat
push
add
cmp
mov
das
outsl
popa
dec
xchg
in
sub
dec
dec
cmp
dec
adc
adc
loop
imul
fwait
mov
mov
add
push
in
nop
imul
leave
je
dec
xor
or
mull
icebp
lea
ss
adc
fcoml
shlb
ret
push
or
and
negl
sbb
aas
xor
sbb
je
in
mov
es
imul
push
fsubl
adc
jp
dec
call
xor
shlb
cmp
sub
rclb
jbe
nop
test
das
sub
and
cmovbe
fwait
testl
pusha
add
stos
add
xchg
mov
and
pushf
xlat
push
push
cmp
adc
in
ret
std
mov
movl
mov
inc
mov
fldt
xchg
cltd
lock
in
jbe
mov
in
fldl
scas
push
pop
sbb
jl
add
andl
pop
mov
repnz
shlb
mov
jle
movsb
es
mov
js
jg
cli
inc
jp
adc
inc
cmp
mov
adcl
push
adc
rcrw
jne
data16
ljmp
push
dec
adc
cli
and
cmp
movb
xor
inc
data16
test
pop
inc
sub
fsts
inc
or
xor
dec
sub
xor
add
sub
push
into
mov
dec
push
into
cs
mov
andb
std
mov
cwtl
loop
aaa
add
das
mov
movsl
enter
roll
push
aam
xchg
xchg
orb
fidivrl
push
sub
imul
pop
stc
mov
mov
movsl
stc
in
sub
pop
cli
decl
daa
pop
mov
add
adc
pop
jp
iret
push
adc
rolb
je
ret
sbb
stos
int
jmp
cmpsb
outsb
or
push
and
mov
add
and
and
add
cmp
jno
fcomps
xor
fadds
sbb
or
hlt
cmp
notl
cmpsl
es
rclb
nop
or
mov
sub
or
mov
mov
insb
push
add
mov
sub
jl
das
test
movsl
push
push
or
adc
xor
push
jl
imul
cmp
addr16
jae
cmp
lods
adc
or
add
fstl
jo
inc
stc
or
and
pop
sti
xor
pop
or
mov
inc
repnz
mov
pop
mov
add
mov
scas
fldenv
add
daa
fidivrl
and
rcrl
jo
repnz
or
add
cmp
scas
outsl
sarb
mov
cmpsb
xor
inc
pop
nop
fwait
push
cli
into
stc
mov
push
push
fisubs
testb
dec
icebp
mov
sub
sbb
jg
xchg
clc
sbb
repnz
xor
dec
imul
daa
adc
lds
aad
movsl
xchg
mov
mov
lahf
add
popl
test
or
je
xchg
push
test
addb
adc
ret
mov
cmp
aad
lock
fsubrl
cmp
lea
outsl
add
clc
sti
sub
ljmp
mov
lea
mov
push
sub
or
xchg
in
insl
popa
or
out
enter
sbb
test
outsb
xchg
sbb
add
fldl
inc
cmpl
sahf
ss
mov
les
sbb
mov
adc
jmp
in
and
cmpsl
in
cld
aas
mov
aas
lret
lret
mov
stos
fucomi
leave
cli
add
in
in
mov
cld
rorb
inc
cmpsb
ja
clc
pop
arpl
loop
cwtl
dec
lods
xchg
loop
jb
lods
add
add
pop
rorl
jge
imul
and
mov
test
cmp
cmp
das
jne
shl
sub
aas
sbb
xor
push
xchg
test
jl
clc
jne
inc
mov
xor
sub
inc
sub
mov
clc
inc
mov
inc
mov
jbe
mov
cli
mov
popf
std
cmp
dec
pop
or
adc
add
test
cmp
lods
iret
pop
js
cmp
clc
sbb
mov
jle
cmpsl
test
push
jo
adc
cs
call
lods
decb
outsb
and
pop
sti
dec
andb
jae
jle
inc
push
outsb
dec
adc
pushf
add
lret
cmpsb
ljmp
xlat
adcb
mov
sbb
aad
dec
mov
pop
cli
inc
sub
test
in
fistps
jl
sub
ss
push
fs
sahf
jne
mov
fwait
and
inc
arpl
adc
push
std
stos
xor
adc
xchg
mov
jae
pusha
popa
jecxz
sti
push
call
lods
push
mov
arpl
push
mov
pop
mov
cmpb
rolb
outsb
dec
jo
sbb
sbbl
loopne
mov
cltd
mov
mov
stc
adc
ljmp
insl
jle
or
mov
pop
fdivrs
pushf
dec
push
add
dec
lcall
cld
cmp
sbb
orl
lock
test
dec
loopne
fistpll
and
loope
scas
push
flds
loop
jecxz
jg
hlt
lret
scas
lcall
push
scas
je
pop
xchg
xor
jne
pop
lock
sbb
bound
sbbb
and
push
inc
vpcmpeqw
popa
adc
aam
sub
lea
rcll
pop
push
mov
inc
lret
repnz
jmp
ret
faddl
cmp
xchg
ret
lea
insb
mov
aas
aam
scas
or
loopne
adc
call
stc
xor
push
or
push
sahf
jge
orb
mov
mov
cmp
icebp
aam
xchg
add
cmpb
pop
add
mov
sbb
insb
lock
inc
incl
fs
jo
pop
jmp
pop
aaa
mov
xor
rcrb
sarl
test
pop
sub
ljmp
int
jno
xchg
divb
ja
test
dec
clc
repnz
sbb
fidivs
lahf
inc
int
mov
jne
sbb
lret
mov
cmp
aaa
mov
je
nop
enter
fdivr
sub
xor
test
shlb
add
add
sbb
ret
lret
inc
ret
lahf
out
adc
mov
xor
outsb
adc
inc
ret
aaa
jp
pop
addr16
sbb
inc
mov
in
out
clc
sbb
call
pop
inc
sub
pop
xor
les
sbb
cld
cmp
lock
or
jmp
adc
adc
xor
cwtl
and
mov
mov
mov
xchg
outsb
pop
mov
movsb
xchg
dec
and
pop
mov
shlb
icebp
xor
scas
and
adc
testl
push
divl
add
fildll
add
pop
dec
sbb
adc
pop
ss
adc
and
dec
ljmp
lods
shlb
add
sub
icebp
pop
or
popa
pop
jl
pop
cmp
xor
mov
sub
jle
sti
mov
fsubrs
inc
inc
inc
sub
xchg
int3
dec
testb
jge
scas
push
sbb
sub
sbb
pop
ss
les
loope
testb
inc
movsb
add
les
sbb
inc
into
sbb
or
xchg
and
mov
stos
mov
ficoms
cltd
mov
inc
pop
sub
test
sbb
std
outsl
popl
pop
and
sbb
dec
cmp
or
icebp
repz
lahf
sbb
bound
and
insl
push
mov
lcall
fucomp
push
cs
dec
mov
pusha
sbb
adc
stos
sub
sbb
mov
lret
inc
test
or
mov
sbb
sahf
sub
loop
inc
leave
cli
and
adc
ret
imulb
push
adc
loope
mov
fwait
mov
jne
movsl
jl
repz
inc
mov
sbb
dec
adc
out
push
ja
xor
pop
pop
andl
mov
sbb
orb
repnz
fsts
mov
xchg
fisttps
jne
adc
xchg
adc
add
pusha
sub
dec
scas
leave
popa
jne
cmc
divb
mov
push
sub
push
std
fcom
call
push
jmp
scas
mul
or
fwait
and
pop
add
test
in
loop
mov
in
call
adc
movsb
cmp
jecxz
xchg
lcall
dec
dec
pop
sahf
stos
pushf
mov
push
pop
or
inc
dec
pop
cld
ret
dec
cmpl
sub
repnz
outsl
mov
scas
fsubs
test
xchg
add
add
mov
loop
mov
push
cs
fcoml
push
bound
push
daa
xchg
add
mov
incl
nop
leave
sbbl
mov
mov
fists
jle
add
les
jno
mov
cltd
sbb
push
insb
xlat
ja
in
fnsave
add
mov
in
or
loope
das
push
add
scas
sbb
test
adc
lock
incb
jbe
cmp
dec
mov
fcomps
push
mov
scas
pusha
repnz
jecxz
add
cld
sub
adc
jbe
mov
dec
das
hlt
cmp
test
mov
ss
jnp
dec
adcb
mov
cmpsb
sub
aaa
xchg
insl
in
cs
jp
jns
jmp
fmuls
shrb
lea
dec
xchg
call
loop
xor
mov
cmpsl
inc
aad
adc
inc
in
fisubs
jo
ds
push
push
add
lds
sahf
movsl
xor
stos
push
or
jbe
xchg
mov
scas
push
mov
fcoms
xchg
cmc
es
and
adc
insl
mov
into
or
mov
test
jmp
mov
outsl
inc
sub
call
testl
mov
enter
push
ds
or
mov
sbb
cmpb
sbb
popf
push
xor
insl
cmp
pop
adc
dec
sbb
cli
lods
pop
xchg
sbb
fs
shrb
cmc
rorb
mov
lcall
or
mov
xor
push
sbb
hlt
sbb
mov
dec
cmpsl
inc
out
lcall
pop
loopne
sbb
cld
sub
inc
pop
and
mov
sbb
fiaddl
sbb
inc
sbb
push
inc
and
stos
xchg
adc
sub
mov
jle
jmp
xchg
das
fcomp
cld
sarb
push
fdivrl
mov
mov
mov
push
mov
stos
cmpsl
push
dec
jg
in
adc
cmc
jo
orb
and
ret
sbb
mov
jb
inc
cmc
aaa
ss
fnsave
cmp
fiadds
or
push
mov
pop
pusha
mov
mov
iret
add
sbb
sub
cmp
pop
push
test
ljmp
jns
add
cmp
xchg
rol
roll
loop
jg
sub
jne
mov
pop
push
add
or
inc
xlat
arpl
mov
cli
and
adc
test
fldl
aas
hlt
mov
cmp
push
mov
dec
sub
dec
jae
outsb
pop
fstl
cld
cwtl
jo
jge
inc
add
aad
mov
xchg
sbb
ss
insb
xor
push
cld
loop
pop
daa
and
lret
rcr
ss
add
mulb
xor
sub
jno
div
pop
cmc
cwtl
mov
jbe
dec
push
call
in
std
nop
notl
and
ret
and
stos
adc
leave
xchg
loop
sub
or
stos
fimuls
xchg
jo
mov
divl
adc
jg
and
fwait
in
fldenv
je
cli
mov
xor
mov
cmp
call
push
pop
orb
jle
or
repz
dec
icebp
hlt
or
inc
jne
and
jo
mov
dec
mov
fisttpl
or
push
daa
cltd
mov
fs
sbb
test
cs
push
jne
fucomip
push
xor
inc
sti
pop
clc
scas
cmp
movsb
or
or
push
adc
aam
mov
and
outsb
mov
test
jae
add
sbb
call
or
push
mov
popl
dec
xchg
push
pop
cmp
call
ljmp
ljmp
lcall
adc
sub
jmp
adc
loope
jo
xor
aad
add
mov
testb
mov
aad
sbb
shl
inc
les
dec
and
dec
xchg
daa
push
rorl
add
jmp
and
stos
ret
cmpb
fiaddl
daa
jbe
xor
stos
outsl
mov
mov
movsb
xor
sahf
jmp
inc
add
pop
mov
pop
xchg
mov
stos
mov
mov
hlt
pop
gs
cmpsb
sub
pusha
fs
lods
and
sub
and
xchg
or
push
outsl
ljmp
adc
add
and
lcall
cmp
xchg
push
and
leave
fbstp
dec
fwait
jle
cltd
test
mov
int
divb
test
mov
gs
popf
add
and
add
or
dec
dec
and
rol
mov
psubsb
xor
sub
xchg
push
inc
mov
imul
mov
or
sub
push
add
cli
or
xchg
push
mov
pop
insl
jnp
shrl
push
xorl
lods
jb
adc
fadds
outsb
daa
jl
adc
shrl
pop
orb
push
enter
cmp
shrl
lds
imulb
or
inc
push
pop
sub
and
sub
adc
mov
and
or
xchg
xchg
jno
mov
mov
pop
push
out
and
cltd
es
test
movsl
shrb
or
outsl
jg
sbb
subl
stos
inc
or
add
int
ficomps
xchg
cmp
push
push
xor
shll
cld
inc
and
out
inc
push
adc
dec
ljmp
test
int3
lret
fsubr
cmc
adc
outsb
fdivl
push
cmpsl
addr16
and
pop
outsb
in
cmc
dec
fists
xchg
pop
xor
nop
jnp
cld
fcmovu
mov
shl
xor
insb
or
mov
sub
push
inc
insl
push
xchg
sbb
test
in
mov
xor
insb
cld
popa
pop
mov
icebp
int
xchg
int3
es
push
out
mov
ret
sub
cmp
data16
pop
loopne
jb
push
push
incl
scas
adc
stos
and
mov
pop
jl
xchg
enter
movsl
push
add
and
inc
lods
stos
mov
dec
xchg
movsb
das
sub
stos
sarl
or
mov
sub
ret
xor
incb
mov
mov
ja
adc
movsl
adc
mov
mov
or
cmpsb
sbb
lcall
movsb
test
popa
fimuls
notb
inc
test
mov
in
insb
test
dec
fistps
out
adc
mov
fistl
ljmp
xchg
lahf
lods
out
push
jl,pn
xor
fistpll
cmp
lret
imul
insl
or
inc
dec
pushf
adc
jg
inc
cmpsb
or
dec
test
push
push
popl
and
ss
push
mov
mov
cwtl
sti
test
outsb
mov
out
sbbb
mov
outsl
insl
xorb
fstpt
nop
adc
push
and
jnp
or
lahf
mov
xchg
push
inc
aas
jecxz
es
push
clc
in
push
push
mov
or
rorl
inc
jo
ficoms
sbb
nop
inc
inc
xor
add
lods
lock
fists
xchg
jnp
xchg
int3
mov
sbb
push
sub
shlb
mov
and
and
aam
add
mov
xor
data16
pop
mov
mov
xchg
mov
mov
lock
mov
pop
mov
stos
inc
sbb
dec
jle
clc
lods
mov
sbb
loopne
or
sub
mov
mov
push
neg
adc
jne
inc
addb
outsl
cmp
jno
adc
dec
sbb
cwtl
stos
enter
mov
sub
fistpll
or
outsl
sub
dec
out
pop
add
lea
test
dec
cld
mov
mov
popf
ljmp
ret
and
pop
lcall
push
call
aam
cmpsb
add
les
fnsave
aam
aas
or
ficomps
loope
movsl
imul
fildl
shl
call
ds
shlb
cmp
mov
sub
add
daa
fs
or
cmc
mov
mov
pop
ret
shlb
sbbl
inc
dec
adc
ss
push
lock
ss
sub
jns
scas
cmpsw
scas
call
mov
adc
xor
mov
fcoms
lock
sbb
xchg
mov
lods
loop
aad
mov
fistpll
loopne
notb
lds
popf
call
mov
insb
jp
divb
xchg
std
cmpsb
sarb
mov
push
call
mov
sub
cmp
push
cmp
xchg
sbb
aaa
outsb
xlat
pop
lods
jmp
pop
sub
adc
sub
jo
mov
push
push
outsb
insl
and
mov
xchg
xorl
or
xor
aad
sbb
aaa
icebp
mov
mov
clc
sub
cmp
and
cmp
imul
jo
xchg
fdivs
mov
in
dec
cmp
push
test
inc
add
xchg
mov
pop
mov
dec
inc
push
das
sub
fsubrs
mov
mov
mov
add
mov
xor
jle
cld
push
cmpsl
dec
push
icebp
jle
dec
cwtl
inc
test
ret
mov
mov
dec
and
push
es
in
into
seto
sbb
sub
fyl2x
jbe
rcl
shlb
xchg
nop
cmp
jo
dec
mov
outsb
je
bound
xor
or
sbb
inc
mov
outsb
inc
jb
jge
bnd
adc
fs
push
arpl
ret
cltd
pop
xor
mov
aam
iret
push
push
jne
stc
popf
mov
jge
orb
pop
adc
pop
jecxz
mov
add
cmpl
mov
mov
jge,pt
ja
mov
add
shrl
dec
adc
mov
inc
and
std
fdivl
sti
outsl
sbb
or
adc
pushf
cli
xchg
scas
icebp
loopne
shrb
sub
mov
mov
aam
aad
push
adc
xchg
inc
sbb
inc
mov
fisttpl
out
int3
and
pop
idivb
insl
lds
xchg
inc
jge
aas
aaa
aas
sub
jg
add
mov
out
inc
push
mov
or
das
int
adc
jo
xor
outsb
mov
push
jg
mov
in
push
sbb
pusha
cmp
and
lret
mov
jl
cli
andl
ja
xchg
int3
sub
dec
xor
xchg
pushf
jle
dec
lea
sti
mov
movsb
adc
inc
loopne
push
add
lret
fcoml
mov
rcrb
fsts
shlb
fidivrl
mov
and
inc
xor
std
jb
movsb
movsl
sbb
jle
stos
shrb
mov
std
outsl
xchg
mov
or
repnz
mov
repnz
inc
or
adc
mov
pop
sub
and
shlb
ret
sub
je
das
inc
negl
xor
add
leave
in
mov
adc
push
mov
data16
push
adc
in
movb
or
fisubrl
jp
movaps
add
imulb
and
clc
daa
push
or
mov
test
shl
adc
je
and
adc
mov
rol
in
jp
inc
and
cmp
out
insb
mov
push
mov
adc
adc
negl
add
or
pop
dec
call
outsb
lea
dec
movsl
xchg
mov
mull
dec
jmp
popa
subb
addb
push
pop
mov
push
sbb
imul
add
and
stos
dec
xchg
dec
push
mov
jo
js
sarl
fdivrl
test
inc
xlat
test
adc
jmp
stos
adc
mov
inc
cltd
jmp
fsubs
pop
std
lea
lods
dec
jge
add
mov
ds
es
popf
and
inc
ret
negb
xchg
dec
sti
test
lods
shl
sahf
inc
push
fmuls
loope
ret
push
cs
dec
jge
subb
add
add
imul
xchg
addb
pop
imul
leave
test
pop
mov
fs
rcrl
adc
dec
pop
adc
mov
xchg
mov
jmp
pushf
jns
jns
scas
pop
mov
mov
and
dec
push
mov
mov
pusha
shlb
loopne
push
test
mov
cvtdq2ps
lcall
jg
fisttps
cmp
push
into
stos
cli
mov
pop
gs
lret
inc
jno
dec
scas
cmp
fiaddl
xchg
in
mov
ja
cmpsl
or
sub
jmp
in
faddp
jg
inc
pop
sub
bound
imul
xor
shll
lods
sub
cltd
andb
cmp
divb
add
cli
push
push
cli
js
imul
call
fistpll
jmp
loopne
inc
test
pushf
mov
call
shll
es
jns
fstl
rol
outsb
or
or
cmpsl
add
mov
sbb
push
aam
loope
ret
fmul
fldl
fwait
call
mov
mov
mov
or
push
push
jg
aaa
pop
cltd
and
adc
mov
in
or
sbbb
add
or
and
push
ret
imul
push
sbb
pop
sbb
xchg
movsl
xor
aaa
in
das
mov
lea
movsl
pop
jbe
ja
notl
or
push
fs
sub
inc
pop
add
mov
pop
ja
notl
xchg
pushf
sbb
pusha
xlat
add
lahf
or
push
mov
movsb
popf
or
xor
ficoms
mov
mov
mov
dec
outsl
test
insl
ljmp
hlt
sti
inc
sti
push
mov
jecxz
aaa
popf
mov
shlb
mov
imul
mov
mov
dec
mov
call
clc
jbe
pop
cs
jne
lock
xchg
cmc
add
adc
xchg
add
fisubs
or
mov
fstpl
mov
add
rcr
popf
addr16
fwait
and
ffreep
ret
in
xchg
mov
es
fmull
pop
mov
push
xor
leave
push
pop
or
push
fcmovbe
aad
push
int
push
mov
mov
fwait
push
cmp
or
or
xor
cld
cmp
push
sbb
mov
push
xchg
out
xor
sub
repnz
ret
xchg
shlb
push
adc
leave
outsb
cmp
mov
push
stc
add
mov
mov
scas
jo
insl
aad
xor
fcmovb
test
mov
jno
imul
mov
test
dec
dec
std
movsl
mov
stos
xlat
ret
sbb
fs
adc
pop
gs
mull
inc
adc
inc
cld
push
inc
in
sbb
push
shlb
rolb
xchg
cmp
cmp
loope
stos
xchg
rcrb
fmul
lock
fstpt
and
xor
repnz
cmp
aam
lock
push
sbb
ja
mov
cmc
push
inc
pushf
sahf
dec
cwtl
mov
mov
jno
mov
pop
clc
push
mov
sahf
pop
faddp
fmull
js
jg
ss
push
rcll
js
add
imul
es
mov
sahf
mov
sbb
adc
test
mov
call
inc
mov
and
mov
add
dec
mov
adc
xchg
xchg
mov
inc
in
jmp
ljmp
jbe
ljmp
std
aas
push
push
out
in
sub
insb
mov
pop
lret
cmpsb
mov
test
push
addr16
push
test
push
loop
push
mov
mov
lods
mov
cmp
push
fsubs
and
in
dec
sti
mov
fcmovb
xchg
stos
inc
loope
arpl
lods
outsl
mov
jns
iret
mov
mov
ds
dec
push
shrl
lcall
loopne
rorl
xchg
lcall
dec
jge
scas
cli
out
stos
jg
roll
jae
cmp
and
mov
add
jmp
icebp
xchg
jecxz
jg
push
xchg
adc
int
inc
rcrl
test
std
scas
fnstenv
mov
pop
mov
mov
adc
lcall
sar
rcrb
fdivp
mov
lods
jo
ja
ljmp
call
mov
pop
mov
inc
lds
and
rcr
cltd
subb
mov
scas
pop
mov
jb
jecxz
jp
cs
xlat
xchg
ljmp
in
and
ret
mov
jmp
jbe
outsl
sub
stos
sub
in
test
es
inc
sbb
fwait
mov
lods
fistps
out
int3
mov
es
mov
sbb
out
inc
aas
add
push
outsl
mov
je
mov
lea
add
lock
push
imul
fistpll
jbe
cwtl
and
lcall
push
cmpsb
jp
cs
push
sbb
arpl
outsb
cmp
fisubrs
dec
cmc
dec
lock
push
cmp
iret
xchg
insb
ds
fadds
pop
sub
das
jecxz
pop
push
pop
push
and
arpl
dec
lock
aad
jo
jmp
lahf
loopne
push
jmp
inc
jl
ss
je
lea
lods
decb
dec
sbb
mov
aad
pop
inc
and
cmp
sbb
jno
push
das
or
cmp
jg
lahf
mov
xor
add
sub
hlt
dec
mov
add
dec
adc
rclb
push
inc
jl
add
fdivp
loope
xorl
testl
inc
xchg
loop
clc
push
pop
out
out
xor
mov
adc
pop
jns
loop
out
cli
push
lret
inc
inc
add
push
xor
pusha
mov
mov
xchg
sub
or
push
out
jge
rcl
stc
mov
jl
ror
sbb
mov
fcompl
mov
add
sbb
ficoms
js
push
dec
adc
sti
fildll
lahf
adc
cmp
into
icebp
fsubrs
cmc
push
pop
imul
xor
pop
orb
fucomp
mov
adc
sbb
jno
jg
mov
dec
xorb
lds
mov
push
push
mov
pop
clc
stos
sbbl
mov
add
push
daa
int3
inc
movsl
push
add
test
shll
mov
mov
lahf
jmp
lea
ljmp
and
in
push
shl
xchg
imul
idiv
roll
add
pushf
lods
cs
and
scas
xchg
fmuls
xor
inc
inc
lahf
add
push
test
jmp
cmp
flds
or
sub
jne
push
loop
sbb
adc
mov
adc
pop
sbb
mov
test
xchg
xchg
insb
lds
pop
ss
cmp
mov
outsb
push
push
xor
sbb
mov
jne
adc
pop
sbb
dec
jmp
jmp
lock
dec
movsb
jo
fstpl
jno
ja
mov
jge
mov
rorl
inc
mov
adc
sbb
mov
xchg
test
dec
add
push
fadd
inc
shl
inc
dec
or
sbb
aam
pop
xchg
clc
pop
js
aaa
ljmp
fmul
or
daa
jae
rcl
pop
inc
lock
ja
lret
rclb
dec
in
sbb
mov
insl
inc
and
shl
jge
sub
cwtl
pop
mov
out
inc
push
push
mov
add
jg
test
mov
sti
out
and
andb
sbb
cmp
or
jp
cmp
cmc
mov
loope
out
pop
mov
sbb
pop
mov
decl
ret
mov
insl
cmp
aas
adc
mov
or
adc
xlat
inc
je
test
cli
jno
mov
push
loope
leave
mov
xor
es
and
scas
push
aad
or
mov
loopne
or
adcb
icebp
imul
ds
push
outsl
outsb
push
or
mov
xor
inc
inc
cmp
cmp
stos
mov
inc
fcoml
pop
inc
mov
int3
pop
or
mov
xchg
xor
rorl
add
pop
aam
and
adc
push
imul
add
shr
jo
ds
movsb
fstpt
push
lock
inc
lds
cmp
std
es
subl
sbb
popf
cmp
scas
xchg
push
pop
xor
and
jb
and
mov
ja
shl
cmp
adcb
stos
or
fucomip
loopne
or
mov
scas
les
gs
adc
or
mov
mov
es
nop
hlt
pop
xor
push
mov
loope
sbb
ljmp
cmp
dec
mov
mov
nop
sub
pusha
sub
insl
jnp
insb
andb
push
lds
shr
call
daa
cmp
outsl
mov
adc
bound
nop
stc
cmc
sub
jmp
dec
aaa
push
mov
adc
mov
fcoms
and
inc
inc
ret
shlb
xchg
xchg
dec
rol
jg,pt
xor
jle
mov
push
fildll
dec
xor
xor
daa
in
shlb
push
lret
cmc
lahf
add
test
push
lds
filds
dec
push
mov
add
pop
mov
repz
mov
lcall
adc
pop
mov
lahf
ds
mov
add
cmc
stc
incl
lock
je
mov
js
or
cmp
mov
sbb
cmp
aad
imul
fwait
pop
clc
sub
mov
into
xor
inc
jp
jg
mov
leave
scas
ret
pusha
stos
xchg
and
push
insl
rorl
inc
mov
jb
scas
out
xor
addl
ss
sbbb
push
adc
lret
ljmp
push
ljmp
shrl
dec
mov
inc
repz
fbstp
and
rcrb
adc
aas
or
mov
stos
xchg
imul
adc
aaa
xor
hlt
sbb
pop
ss
sti
test
and
outsl
xchg
push
and
fildll
push
sahf
and
insl
fstl
mov
mov
push
fadds
bound
push
or
pop
hlt
cmpsb
cs
test
negb
inc
sub
shrb
test
xor
roll
inc
fldl
fiadds
inc
cmc
out
scas
inc
aaa
mov
inc
or
mov
mov
or
icebp
ret
ret
inc
and
or
sbb
jg
rcll
mov
stos
pop
cmpsb
jns
mov
outsl
push
or
xchg
sub
loop
int3
sti
mov
pop
hlt
mov
pop
push
mov
jecxz
test
xchg
jge
jae
mov
jl
mov
call
and
aam
adc
jne
jbe
inc
into
cmc
pusha
xlat
jne
push
cmc
ficoml
or
jbe
leave
aaa
add
rclb
mov
sub
pop
add
and
sahf
mov
hlt
bound
rorl
inc
fucomip
and
or
jg
bnd
dec
adc
int3
xor
mov
divl
xor
aad
and
inc
jmp
jb
aad
inc
ljmp
cmpsl
icebp
push
pusha
inc
sti
or
addr16
cmp
pop
lret
out
std
cmp
fwait
test
xor
push
sub
and
std
mov
out
pop
les
lods
sbb
mov
leave
loope
mov
pop
inc
subl
dec
xor
pop
rolb
int3
push
in
push
inc
mov
push
mov
mov
and
cmp
ss
sub
out
movsl
das
fmull
test
mov
loop
pushf
fs
mov
mov
fdivl
mov
sub
mov
push
or
push
std
ret
pop
pop
mov
mov
and
pop
dec
dec
mov
call
add
lock
mov
jle
ja
xchg
or
testb
outsb
sahf
sub
mulb
addr16
cs
ret
fistpll
mov
xor
les
hlt
fucom
lahf
fld
adc
jmp
xchg
fidivl
lods
cmpsb
mov
mov
loop
add
dec
ficoml
test
inc
roll
inc
popa
mov
incl
dec
enter
test
add
stos
inc
and
addb
rcll
inc
mov
icebp
xchg
stos
sahf
pop
movl
loop
cs
orl
lods
fidivrs
lret
cmc
mov
adc
jecxz
mov
xchg
fs
jp
cmp
insl
mov
int
inc
xorl
dec
add
aam
filds
stc
push
cltd
aad
push
push
inc
inc
lods
sbb
mov
adc
dec
adc
test
nop
lahf
cmp
dec
lock
enter
cmp
cmp
cwtl
scas
hlt
movsl
loopne
pop
icebp
out
xchg
std
sbb
insb
mov
or
inc
gs
mov
mov
imul
xlat
aaa
mov
out
cmpsb
shl
daa
imulb
push
jae
xor
dec
int
and
pop
sub
add
cmp
andb
aam
mov
decl
inc
xor
out
inc
sbbl
test
add
loope
std
movd
div
mov
popf
mov
cltd
jne
pushf
add
adc
dec
cmp
dec
outsl
movsl
test
inc
lds
or
rclb
push
push
pushf
or
xchg
pop
out
enter
cli
mov
push
mov
jmp
or
sbb
xchg
icebp
jmp
push
inc
mov
outsl
aaa
sbb
cmc
loop
fldt
adc
mov
movsl
inc
addb
jmp
mov
inc
sub
stos
sub
fcomi
xchg
push
and
mov
xlat
addr16
push
icebp
outsl
rclb
mov
xchg
dec
or
add
push
mov
rorl
aaa
mov
pop
lock
ret
sbb
mov
mov
insb
jae
lea
outsl
mov
fsubp
pusha
mov
pushf
adc
ljmp
stos
fs
adc
jb
and
je
or
js
sbb
jnp
repz
call
and
jbe
pop
test
ljmp
inc
notb
testb
jl
mov
inc
push
mov
sub
lea
in
sarl
jg
xlat
test
mov
jecxz
fs
fbld
loopne
sub
xchg
sbb
call
pop
mov
mov
push
pop
outsb
mov
push
xor
int
aas
pusha
dec
mov
jle
mov
test
hlt
int3
in
push
outsl
and
fcmovnbe
stc
xlat
loope
lock
xchg
xchg
pop
sub
cli
pop
outsl
stc
inc
and
push
push
addr16
inc
outsl
insb
filds
sub
inc
lret
insb
test
inc
sub
push
sub
loopne
movsb
stos
xor
inc
lock
popa
dec
js
and
ret
xchg
pushf
idiv
sbb
inc
xchg
add
pop
fisttps
mov
sbb
data16
loopne
flds
pop
and
popf
ficoml
ret
cmp
cmpsl
pop
sbb
lret
ss
sbb
imul
mov
pop
mov
xor
add
loope
adc
push
mov
mov
mov
sbb
cld
dec
aaa
cs
pushf
xchg
adc
push
daa
pop
jge
in
sub
ljmp
cmp
js
testb
rolb
or
mov
shlb
movsl
clc
mov
lahf
pop
pop
xchg
jmp
jge
ret
and
xchg
insl
loop
lock
jne
inc
sub
adc
dec
pop
sahf
rclb
cmc
pop
sub
xchg
mov
add
sub
mov
cmp
add
push
loopne
push
or
aaa
test
je
jp
inc
dec
xchg
mov
es
mov
cmpsb
mov
push
or
pop
scas
and
aaa
xor
pop
mov
mov
cmp
addr16
mov
xchg
xchg
mov
lock
loop
in
inc
cmpsl
daa
aam
inc
scas
cld
add
test
pop
and
sbb
xchg
imul
mov
outsb
insl
rcl
sub
iret
fucomi
pop
cmp
dec
mov
call
add
adcb
outsl
in
outsl
cmpsl
push
and
xchg
repnz
cwtl
jno
in
xchg
dec
jl
das
aam
and
xorl
rcrl
outsl
dec
push
and
jge
jae
lahf
stos
xchg
loope
adc
lret
xchg
pop
mov
nop
test
or
test
dec
jge
cwtl
pusha
data16
jge
mov
push
sbb
enter
mov
cwtl
call
mov
add
adcb
push
bound
sbb
add
mov
aaa
mov
mov
lret
ret
cmp
std
das
sar
movsb
and
xchg
and
sub
es
rclb
pop
adc
pop
mov
insb
cld
test
cmpsl
jle
add
inc
or
cmp
mov
sbb
add
inc
adc
sbb
push
jnp
out
clc
les
xor
pop
scas
mov
jbe
das
pop
clc
inc
xor
or
push
push
popf
pop
jp
imul
decl
lahf
sub
mov
push
sbb
mov
adc
mov
mov
xor
and
in
sub
mov
mov
push
pop
jg
or
movsb
sbb
xchg
inc
sub
sbb
xor
call
cli
leave
adc
push
ljmp
cmp
inc
cli
dec
sti
jmp
cs
cli
adc
pop
pop
add
pop
mov
cmpsb
aas
mov
inc
inc
add
jge
test
dec
sbb
push
ficomps
popa
pop
inc
ret
or
lret
test
xor
mov
out
sbb
mov
ficoms
cld
mov
movsb
jns
loope
pop
sub
cmp
cli
xlat
sub
sti
mov
dec
in
popf
ljmp
cmp
mov
ret
adc
xchg
js
sub
or
stos
ljmp
jmp
inc
test
push
je
sub
test
lahf
and
std
mov
fs
sub
test
mov
in
popf
and
sbb
ds
int
sbb
jg
insl
clc
rdtsc
lcall
push
sahf
hlt
data16
jnp
aam
test
inc
mov
pop
mov
arpl
push
outsl
push
lods
pcmpgtd
lds
jnp
inc
lock
mov
insl
leave
cld
add
sbb
and
decl
arpl
push
fs
pop
xor
push
jbe
inc
pop
imul
imul
jg
adc
or
jns
mov
push
adc
out
les
std
test
add
mov
ja
cs
push
shrl
xchg
in
idivb
test
dec
js
inc
cmp
call
repnz
push
enter
mov
add
mov
or
mov
pushf
fisttps
mov
sub
stos
jmp
xor
and
das
xchg
scas
jl
add
cli
or
stc
cld
jo
arpl
popa
or
jo
pop
outsb
or
out
mov
cmc
pop
xchg
outsb
inc
adc
popw
cmp
inc
in
sub
mov
xchg
popf
cmp
mov
mov
mov
sub
icebp
jo
jg
add
ljmp
cmp
fwait
sbb
jo
mov
cmpsl
test
jle
pop
test
mov
add
rcll
scas
xor
push
mov
outsl
adc
in
outsb
inc
push
cmp
or
xchg
aam
sbb
mov
push
pushl
sarl
std
lock
mov
cmp
mov
mov
mov
cmpsl
fstpl
mov
lea
sub
dec
mov
push
xor
push
mov
mov
adc
adc
dec
or
mov
mov
pop
roll
outsl
aas
pop
fdivs
cmp
lods
jno
xchg
jmp
and
push
xorb
jg
cwtl
int3
xchg
cs
imul
shl
mov
dec
les
mov
std
or
std
and
test
mov
je
incl
lcall
and
stos
jle
pop
movhps
add
adc
test
pop
ljmp
sbb
std
dec
dec
sbb
sarb
mov
mov
xchg
sahf
or
test
mull
jmp
dec
xchg
jl
divb
ljmp
xchg
mov
adc
sahf
sub
inc
push
shrb
inc
pop
mov
loopne
sub
push
cmp
and
cmpsl
adc
xor
stos
jbe
pop
mov
ss
out
xor
imul
cs
daa
adc
movl
in
jmp
std
jbe
dec
lret
jg
ret
cmpsl
push
adc
sahf
fs
dec
fisubs
or
test
push
call
push
iret
mov
push
xor
jmp
inc
or
mov
leave
int3
pop
arpl
inc
inc
sbb
test
push
xchg
inc
inc
aam
jbe
addr16
adc
lods
or
jmp
cltd
movsb
lahf
pop
fdiv
push
xchg
loopne
cmp
add
aam
inc
in
in
test
orb
mov
adc
insl
ja
and
cmp
mov
and
enter
stos
in
add
mov
xchg
fisttpl
pop
les
mov
sub
xor
rorb
popa
mov
dec
mov
lret
and
pusha
lock
jne,pn
fwait
inc
mov
imull
push
lret
pop
pop
test
jl
aas
pushl
cmp
shll
pop
cld
int
les
aam
loope
inc
add
js
push
addl
ret
adc
push
mov
fstpt
xchg
into
xchg
mov
dec
shlb
movsb
xlat
mov
mov
mov
mov
testl
inc
aaa
mov
js
ljmp
xorb
inc
add
outsl
add
jge
pop
push
or
sbb
loopne
sbb
xor
xchg
dec
or
ret
sub
push
inc
ds
rclb
cld
out
dec
test
and
cmp
rol
add
in
jg
outsl
outsl
add
test
pop
push
jp
ja
insb
push
push
sub
rcr
lahf
mov
sbb
xchg
dec
dec
adc
inc
mov
shrl
aaa
cmp
int
adc
and
and
cmp
xchg
jbe
mov
xor
rorb
mov
loope
sub
cld
fmull
or
inc
insl
xlat
mov
gs
les
in
aaa
repz
and
cmp
mov
xchg
cmp
or
or
jno
adc
popa
cmpl
stos
repz
dec
arpl
std
aaa
mov
xchg
scas
jge
mov
pop
jp
aad
aaa
or
loop
loop
int
stos
out
mov
xchg
cwtl
jg
outsl
adc
out
adc
push
fdivs
rolb
cli
jmp
mov
cs
cmc
call
lods
cmc
mov
jne
cld
inc
add
dec
clc
inc
int
sbb
cmpsb
add
outsl
call
roll
sub
xor
mov
or
dec
add
pop
add
xchg
loope
outsb
xchg
fwait
sahf
lods
sub
loop
adc
inc
cmp
clc
in
mov
inc
je
adc
or
outsl
add
pop
into
cltd
pop
incl
pop
movsl
mov
sub
clc
and
adc
daa
xchg
in
addl
inc
aas
mov
in
test
shll
lods
jno
mov
out
sbb
fsubr
aas
adcb
adc
jl
sahf
pop
xchg
cmp
or
xchg
out
les
jmp
call
sub
stos
enter
inc
pop
fdivp
push
mov
out
dec
push
cwtl
lock
sbb
mov
cmp
xchg
mov
fs
incl
pushl
sub
or
popa
lods
outsb
mov
mov
push
rclb
loopne
rol
lock
add
fimuls
sub
mov
dec
push
test
push
ret
jne
fistpll
hlt
daa
decb
fimuls
adc
add
xor
adc
ret
or
cs
and
loopne
lea
loope
mov
js
push
mov
in
pop
sbb
xor
push
xor
or
jg
icebp
movsl
int
lahf
dec
mov
call
adc
lahf
outsl
pop
push
jne
xchg
js
clc
sti
and
push
rol
xchg
das
dec
fcomps
ljmp
pop
test
pop
fsubs
vaddsubpd
jno
shll
mov
inc
add
mov
push
test
inc
pop
outsb
adc
xor
ja
lahf
dec
or
shll
test
dec
dec
xor
aaa
lcall
fisttpl
les
xorb
adc
mov
jge
mov
bound
add
push
xor
outsl
pop
lock
cmc
test
xor
or
adc
cmp
adc
subb
xor
in
or
aad
mov
pop
rcrl
xor
push
lods
cmp
aam
jbe
pop
mov
aaa
push
lods
inc
int3
mov
inc
jae
mov
popl
inc
es
aas
xchg
fsubl
and
mov
mov
daa
adc
dec
sub
aad
loope
outsb
mov
jbe
or
mov
fs
xchg
arpl
nop
ljmp
cmp
inc
movsl
add
or
jnp
lods
je
mov
bound
mov
clc
sbb
push
jge
mov
or
sub
jbe
dec
jl
push
dec
and
scas
movsb
fistl
sbb
in
js
ret
and
push
mov
dec
shrb
imul
pop
adc
mov
lret
rol
adc
xor
out
pop
cli
das
adc
xchg
jg
leave
mov
popf
mov
xlat
test
cld
and
arpl
push
pop
fistl
ja
insl
cld
negb
test
dec
push
jae
mov
pop
push
cs
iretw
adc
fnsave
sbb
cmp
aaa
push
pusha
ljmp
jg
and
incb
insl
mov
push
fstl
movsb
sbb
aaa
cli
std
inc
dec
cmpsl
jne
jle
leave
inc
ret
insl
adc
fmuls
clc
pop
scas
mov
into
ret
sbb
sahf
xor
nop
add
or
ret
daa
daa
cmc
sub
lahf
pop
adc
outsl
sub
adc
xor
pop
and
or
sbb
daa
or
in
aam
or
hlt
sbbb
enter
mov
cmc
sbb
sub
pop
xchg
cmpsw
xchg
insl
test
clc
jmp
pusha
aas
testl
mov
shrl
lea
js
sbb
pop
pop
mov
mov
adc
outsb
insl
and
aaa
sbb
sub
push
adc
or
inc
ret
icebp
ret
test
mov
fistl
jge
iret
flds
add
sub
mov
push
and
aaa
ret
dec
pusha
inc
add
mov
in
xor
hlt
sbb
push
fcmovnb
test
cli
sahf
test
out
dec
clc
orb
or
pop
inc
fbld
xchg
loopne
inc
repnz
addr16
push
jecxz
repz
add
and
int
push
insl
mov
fsub
test
push
mov
leave
mov
cmpb
loop
mov
in
cmc
push
iret
insb
arpl
fiadds
in
add
add
adc
cmp
and
pop
call
cmp
fists
rcrb
and
and
and
inc
fisubs
hlt
sub
rcrb
xor
lea
push
inc
push
xlat
test
mov
ret
jb
push
push
jbe
flds
mov
ds
cmp
mov
push
mov
jmp
call
lea
or
shlb
leave
cmp
fmull
adc
test
iret
jns
lahf
mov
xchg
xor
mov
mov
mov
push
outsl
push
test
shrb
pop
dec
lods
fisttpl
cmp
xlat
xorl
cmp
mov
ja
inc
negl
test
outsl
sub
mov
cld
nop
mov
mov
bound
xor
or
lcall
add
aaa
sbb
cmp
pop
jo
jl
insl
xorb
mov
testl
jbe
jecxz
inc
int3
jp
arpl
mov
push
jp
push
mov
push
icebp
mov
es
mov
xor
xor
xchg
outsl
adc
pop
loop
mov
xor
push
sbb
in
sub
mov
mov
in
push
icebp
adc
fistpll
sub
roll
sarl
addr16
fimull
inc
loope
ja
pop
dec
push
push
adc
add
stc
rolb
dec
adc
or
dec
mov
inc
lods
sbb
rcrl
jbe
mov
jg
sahf
push
dec
icebp
filds
push
dec
iret
into
arpl
stos
mov
adc
adc
movsb
inc
push
and
repnz
jnp
aaa
sarb
xor
mov
ss
sub
les
into
cmpsb
push
js
jno
adc
outsb
or
out
xchg
lret
pop
cmpb
mov
xor
push
pop
lret
orb
adc
pop
or
cltd
mov
mov
out
popf
dec
sub
sub
xchg
lock
in
cmp
sarl
sub
inc
test
jb
adc
mov
nop
jp
pop
outsl
inc
pop
and
adc
adc
jmp
or
adc
popa
and
mov
and
in
xor
dec
jl
adc
lret
jae
xchg
sbb
inc
xor
dec
push
xchg
inc
add
jg
scas
sbbb
jp
cmp
jbe
pop
test
xor
sbb
sbb
pop
push
gs
pusha
inc
add
pusha
lea
lds
pop
jp
jle
out
inc
mov
sub
dec
popa
jl
pusha
push
mov
outsl
mov
cmc
lods
in
dec
mov
arpl
mov
xchg
outsb
lcall
mov
adc
cli
xor
push
das
sbb
aaa
les
xor
push
or
or
mov
pop
scas
cmpb
sub
pop
sub
adc
mov
pusha
push
ds
outsl
into
push
and
cmpsl
sbb
sub
out
xor
push
std
or
mov
push
cs
jle
add
int3
mov
cli
lods
mov
imul
or
push
mov
fstl
mov
mov
mov
loopne
jle
cli
xchg
inc
mov
pop
pop
pop
vshufpd
add
mov
mov
jge
lahf
out
push
sub
loopne
clc
cmp
inc
out
shrb
jge
notb
lods
xchg
adc
inc
and
xor
js
and
test
sbb
adc
and
ret
mov
and
sub
call
fdivr
sub
or
dec
mov
push
inc
mov
aad
adc
sub
les
inc
arpl
mov
fdivrs
add
push
push
notl
filds
test
lret
inc
aad
mov
sbb
aas
mov
xor
cmc
outsl
pop
mov
push
inc
divb
outsb
xor
sub
in
xchg
add
mov
sub
repz
adc
fsubrs
fimull
xor
jbe
push
sbb
std
mov
mov
cmp
lock
sub
mov
out
rclb
mov
aaa
and
and
dec
push
std
mov
gs
dec
dec
call
push
mov
xchg
sub
add
sbb
loopne
adc
daa
pop
leave
or
sarb
loopne
fistpll
into
loope
jl
and
xor
mov
fstpl
aas
mov
mov
xlat
arpl
dec
pop
mov
sbb
js
push
ret
in
shlb
and
aaa
add
pushf
xor
mov
icebp
sub
in
sub
push
pop
pop
das
jo
in
ret
and
outsl
pop
jg
mov
fsubrs
leave
lret
mov
ljmp
pushf
outsb
inc
andb
dec
add
push
jl
fmuls
aam
inc
push
push
ds
ljmp
xchg
mov
or
mov
cmp
nop
orb
and
pop
xchg
fisubrl
icebp
jno
sub
sub
pop
aaa
inc
pop
push
cmc
jnp
rcrb
and
and
int
xchg
js
sub
loope
movsl
loope
bound
inc
ja
int3
sbb
adc
std
ret
jg
xchg
mov
cmpb
mov
lods
pop
leave
std
or
ret
out
xchg
ret
es
outsl
insb
push
sub
sub
movsb
push
rep
mov
test
popl
rcrb
aas
ljmp
sbb
outsb
dec
pop
in
loope
jo
mov
js
dec
fstl
adc
orb
sbb
sbb
or
add
jle
mov
mov
push
cmp
std
sbb
push
call
jl
aaa
rcll
outsl
jmp
pusha
rol
adc
pushf
scas
and
inc
adcb
lret
push
fldt
mov
sub
and
push
mov
mov
js
and
jecxz
scas
inc
pusha
mov
pop
sbb
adc
xchg
shl
pop
xchg
adc
or
sub
test
das
lds
mov
mov
ds
addb
jno
int3
xor
or
in
add
xchg
xchg
and
cwtl
xor
add
pop
in
mov
daa
inc
mov
pop
mov
sbb
call
std
aaa
ret
lahf
scas
addl
testl
add
dec
ds
and
sub
loopne
shrb
shll
outsb
jle
addr16
add
mov
out
dec
das
pop
mov
adc
lods
pushf
dec
addr16
sbb
cmpsb
aam
fistpl
mov
shrl
insl
mov
xor
sahf
cmpsb
jns
and
sbb
rcrl
pop
les
mov
fcmovb
jbe
mov
scas
pop
sahf
scas
inc
dec
pop
push
and
pop
js
or
mov
xor
fcmovnu
mov
test
mov
stos
push
std
adcb
and
cli
push
adc
sub
push
inc
push
cld
add
daa
je
jge
lea
jg
xor
jp
call
mov
dec
in
cltd
mov
inc
cmp
aad
cli
lea
push
loopne
adc
and
jbe
bound
sub
jle
cwtl
jns
pop
outsb
adc
pop
std
jg
cmp
clc
cltd
loop
and
or
dec
and
insb
xor
js
mov
mov
cmp
add
add
lock
call
popf
cmpb
fwait
repnz
pop
ss
mov
sbb
pminsw
lock
test
mov
pop
cmc
je
popa
xlat
sahf
cmpsl
sbb
hlt
add
loope
inc
mov
lahf
dec
jns
call
push
cltd
notl
cmp
mov
xor
mov
xchg
xchg
enter
push
push
sub
pusha
mov
pushf
shl
ds
movsl
cmp
clc
repnz
mov
and
jmp
clc
aas
xor
iret
loopne
jge
test
or
clc
pop
cmp
pop
cmp
and
adc
loope
test
jb
cli
cmpsb
loop
lret
int
push
loopne
bound
lock
mov
xchg
push
pusha
ja
test
rorb
shrb
cmp
outsl
stc
mov
push
popa
daa
fistpll
pop
cmpsb
test
add
push
roll
or
pop
pushf
or
or
icebp
or
cmp
movsl
mov
imul
and
aam
lods
les
aaa
lock
adc
mov
jg
mov
das
sub
aad
stc
mov
aaa
js
lahf
cli
imul
cs
dec
adc
pop
andl
test
hlt
pushl
out
mov
inc
xchg
mov
out
shll
inc
mov
shr
loopne
stos
fwait
add
push
shlb
pop
adc
rolb
imul
sbb
inc
ss
inc
inc
or
inc
lea
push
dec
test
sbb
mov
sbb
nop
pop
and
icebp
pop
movzwl
adc
call
mov
aaa
incb
test
push
dec
or
sub
lcall
std
pop
int3
cmpsl
dec
cli
sub
mov
out
addb
int
lcall
mov
fnstsw
xchg
push
add
jg
or
fcomps
add
sbb
repz
daa
or
cmpsl
jle
pop
mov
push
mov
aaa
rorl
leave
sarb
cltd
mov
and
pop
testb
inc
mov
stos
fisttpl
decl
xchg
and
fwait
jmp
loope
rcll
call
ret
cmp
scas
bound
neg
mov
test
jne
inc
frstor
and
push
inc
je
jmp
les
add
adc
enter
push
xor
in
sar
decl
mov
sbb
jnp
or
adc
xchg
push
es
es
dec
inc
jb
dec
dec
roll
cld
add
jp
pop
les
jno
push
mov
lock
jno
jp
add
js
jb
and
mov
mov
or
aam
mov
cmpsb
inc
mov
pushf
push
stc
ss
adcb
add
and
leave
cmp
mov
or
jmp
xor
mov
adc
fs
popa
arpl
fidivs
cmpps
inc
dec
and
stos
js
ficoml
outsl
inc
insl
or
sub
or
nop
adc
mov
push
add
xchg
inc
out
sbb
fisubl
mov
pop
and
xchg
test
fbstp
popa
pop
adc
mov
jnp
loope
sub
pop
rorl
sub
out
loop
push
sub
pushf
add
push
hlt
ljmp
mov
sub
xlat
lock
cmp
mov
xorb
imul
add
inc
push
add
mov
movsl
pop
cwtl
adc
pop
push
subl
xor
leave
daa
mov
aam
cmc
sub
sti
mov
andb
adc
cs
add
fcmovnu
arpl
jbe
push
loop
push
dec
stos
movsl
ja
das
std
xor
mov
sbb
cmp
ss
icebp
and
jecxz
jp
fsubrl
mov
sub
shlb
int
outsb
sbb
push
jne
dec
inc
mov
mov
sbb
pusha
sbb
pop
or
cmpsb
movsl
fsubrs
lahf
adc
or
mov
loop
or
data16
mov
mov
aaa
rcll
pop
insb
xchg
ret
call
mov
sub
in
cmpsl
aam
cmp
jl
mov
fildl
dec
pop
or
aaa
xchg
jns
pushf
adc
lods
jnp
ljmp
mov
mov
rorb
xchg
sahf
nop
stos
aam
adc
or
mov
mov
pop
pop
clc
sahf
sub
or
movhlps
loop
mov
mov
shl
popa
and
sbb
jp
in
or
ja
movsl
xor
push
dec
pop
pop
into
xchg
lds
popf
ja
insl
ret
add
sub
fistpl
lahf
mov
xchg
mov
dec
outsl
std
sbb
pop
inc
xlat
es
push
or
ds
insl
mov
xchg
sbb
pusha
cltd
fs
cwtl
sub
xor
pop
mov
pushl
push
call
imul
out
or
mov
test
imul
pop
or
dec
mov
and
in
push
gs
outsl
test
pop
fiaddl
bound
out
mov
dec
or
or
shlb
inc
push
pop
cmp
fimull
mov
mov
hlt
outsl
nop
mov
aaa
sti
push
mov
insl
jmp
or
mov
push
sub
fdivr
mov
or
lods
loop
lock
fadds
sbb
cmp
lret
pop
js
inc
lds
cmp
std
xchg
adc
cmp
fldt
pop
jnp
push
sbb
rcrb
sub
mov
pop
jp
add
cmp
or
in
lsl
sub
rcll
fsubs
inc
jmp
push
jle
sub
in
push
pop
stc
push
push
test
fsubrs
adc
test
inc
or
push
push
dec
mov
mov
mov
cmpsl
stc
repz
or
mov
pushf
adc
movsb
mov
add
loopne
scas
das
mov
mov
sub
sub
inc
sub
jb
jno
and
mov
gs
shrl
lock
or
xor
clc
sub
sbb
add
aad
jno
cmp
stos
lea
dec
roll
push
hlt
pop
incl
pop
andb
jne
pushf
loop
pop
jg
push
jne
jns
or
add
xor
mov
xchg
fs
mov
add
and
out
adc
jmp
loop
mov
cmp
jge
mov
and
jmp
es
pop
test
mov
dec
test
inc
mov
lahf
out
shld
xlat
adc
hlt
cmp
jae
xchg
movsl
and
test
sub
lods
pop
data16
aaa
jne
lods
std
loopne
pop
hlt
fsubr
movb
and
scas
adc
jg
add
test
xchg
sub
insb
das
adc
sbb
push
mov
xor
xor
rorl
sub
sbb
cmp
cmpsb
mov
dec
jae
je
mov
mov
sbb
jmp
lahf
popf
lods
movsb
stc
arpl
mov
jne
stos
or
ljmp
add
mov
mov
shll
rcrl
and
xor
add
dec
pop
cld
mov
add
cmp
or
lods
inc
pop
adc
jg
mov
ret
xchg
mov
pop
inc
outsl
jo
inc
inc
loopne
call
inc
aaa
xor
mov
mov
stc
ret
add
sahf
jns,pn
outsb
lret
test
std
sbb
sar
jb
mov
imul
movsb
cmp
fldt
cld
mov
push
push
cld
sub
in
pusha
mov
xchg
aam
or
mov
aas
push
cwtl
sti
sbb
jmp
cltd
add
movsb
subb
loope
fidivrs
repz
and
pop
xor
sub
jge
pop
int3
pop
lock
fdivs
out
sahf
push
xchg
sarl
or
jno
test
imul
pop
or
dec
mov
jbe
notl
fstl
mov
sbb
fistl
test
push
jecxz
ret
cmc
data16
mov
je
ds
xor
inc
add
das
fidivrl
imul
sub
inc
or
xorl
fwait
data16
lock
leave
xor
push
add
adc
imul
xlat
push
or
sub
push
mov
xor
cmpsb
out
cmpsl
push
dec
inc
dec
xlat
sbbl
mov
aas
xchg
add
popa
decl
ja
jle
adc
imul
dec
adc
jae
pop
dec
mov
mov
sbb
outsb
mov
and
popf
cld
cmp
mov
bound
jo
ret
nop
jp
or
adc
data16
add
dec
aaa
or
fcoms
clc
addl
rol
pop
push
jl
lods
movzbl
hlt
es
rorb
sub
adc
mov
mov
lods
jb
pop
shlb
out
loopne
inc
mov
adc
pop
mull
inc
adc
sub
stos
xchg
out
in
push
pusha
mov
sbb
inc
add
test
mov
aas
jp
jne
imul
sub
fistpll
fldl
mov
mov
pop
jp
lods
and
mov
dec
in
mov
aam
popa
jae
xchg
clc
das
mov
cmc
cmp
test
ret
lds
int
fmull
inc
and
sbb
mov
sub
pushf
fsubrs
filds
mov
jp
pop
loopne
sub
fistps
or
jns
insl
loope
pop
dec
pop
insl
std
cli
and
and
mov
cmp
daa
or
sub
lahf
das
or
push
aaa
inc
adc
xchg
cmc
lcall
addr16
cmp
jle
push
jae
sub
les
jmp
loope
in
mov
dec
push
inc
push
imul
inc
frstor
ret
fyl2xp1
push
jae
insl
je
jno
stc
jns
inc
repnz
mov
push
inc
sub
sub
aaa
push
or
movsbl
push
and
sub
hlt
leave
push
dec
sbbb
std
fwait
dec
push
mov
sahf
sub
sbb
add
shll
pop
pop
rcll
lock
mov
or
sbb
mov
lods
add
bnd
xchg
jb
hlt
jmp
call
jnp
push
ret
mov
mov
jbe
sub
aam
xchg
pop
aad
add
je
outsl
mov
or
mov
dec
les
push
mov
add
jno
in
xor
or
bswap
adc
mov
sub
or
mov
push
and
in
ljmp
sbb
push
pop
mov
movsl
xor
mov
aam
repz
adc
and
jg
and
and
insl
sbb
aad
idivl
mov
cmpsl
mov
aam
cmpsb
ja
mov
and
into
inc
addr16
out
inc
push
mov
ja
fistpl
in
inc
mov
cli
inc
enter
or
pop
adc
sbb
mov
fildll
jne
xor
sub
fimuls
jmp
addr16
out
adc
mov
stc
mov
aam
insb
mov
inc
subl
rcll
mov
pop
push
test
mull
es
or
popa
cltd
mov
leave
lret
incb
sub
les
dec
stc
dec
sbb
sbb
and
mov
xlat
scas
mov
add
inc
lods
sub
nop
cmpsb
test
aad
ljmp
mov
jbe
movsb
mov
mov
mov
insb
insb
cli
mov
pop
and
xor
jmp
sbbb
test
jns
inc
int
outsl
mov
lods
cmp
or
jo
jns
insb
push
sbb
sub
jmp
enter
rcrl
clc
or
mov
xor
call
fisttpl
pop
jg
das
insl
orl
jmp
add
cmpb
xor
das
shll
mov
cltd
sub
icebp
out
mov
push
and
loope
outsl
fisubrl
outsl
jns
inc
frstor
out
and
hlt
push
mov
fs
lock
push
or
inc
insb
ret
mov
lea
sbb
cmp
sub
pop
mov
inc
inc
cltd
pop
stos
adc
adc
jae
shlb
jnp
fcmove
jne
sahf
xlat
fbld
xor
insb
and
xchg
ret
out
jle
movsb
jno
jg
mov
fwait
add
push
add
dec
fstl
push
mov
test
cmp
js
inc
sub
sub
or
das
mov
test
add
filds
add
lret
test
clc
pushl
addr16
cmp
inc
mov
enter
lahf
ss
mov
call
pop
and
fstpt
pop
ss
lret
xchg
mov
jge
mov
inc
jnp
xchg
mov
xor
lahf
and
lcall
enter
ja
mov
pop
sarl
jns
push
adc
call
clc
dec
ret
push
mov
std
mov
cs
xchg
push
out
out
and
xor
lahf
cli
loopne
add
or
pop
sbb
movl
into
daa
and
add
sbb
lods
scas
lea
or
hlt
adc
test
aaa
loop
jno
clc
cmp
push
cmovl
mov
shll
cmp
push
mov
sbb
sbb
and
push
lds
xchg
push
cmp
test
cmp
mov
fistps
aam
adc
ss
mov
outsl
jle
xchg
push
fisubl
call
jp
jmp
mov
mov
stc
push
mov
cs
mov
rcll
jbe
sub
push
popf
inc
icebp
push
in
arpl
push
call
outsl
fisttpll
stc
adc
outsb
call
mov
incl
or
push
jmp
fimull
cmp
pop
xchg
shrl
push
aam
mov
jg
inc
xor
jbe
push
out
and
push
repz
add
fdivrl
sub
inc
cmpsl
bound
xor
pop
dec
inc
push
pop
add
jle
jbe
ja
pushf
sbb
ja
je
and
fdivp
movsb
and
mov
jmp
test
jmp
adc
stc
lods
ret
jne
aad
test
add
shll
inc
popf
xor
pop
cld
lcall
aaa
fimuls
mov
cmp
addr16
mov
mov
cmpb
sub
int
push
mov
pop
jb
outsb
cmpsb
mov
in
sqrtps
lret
push
xchg
mov
leave
cmp
dec
mov
sbb
cmp
dec
adc
push
lret
and
bswap
adc
mov
pop
adc
gs
mov
stc
repnz
mov
mov
mov
aaa
mov
inc
sbb
and
outsb
jbe
incb
inc
in
cld
xlat
sub
lock
je
or
or
pushf
mov
pop
fists
outsb
jo
inc
jle
pop
pop
cld
pop
xor
push
outsl
jecxz
push
pop
cmp
adc
jg
mov
jmp
inc
xor
push
and
aad
or
adc
push
repz
inc
adc
push
mov
sbb
aad
mov
imull
fcompl
fldl
mov
add
repnz
mov
into
jl
xor
das
negl
xor
push
push
xchg
mov
pop
loop
mov
stc
add
clc
mov
andl
mov
or
mov
scas
jg
xchg
inc
int
aad
push
jmp
add
test
xor
cwtl
mov
push
and
clc
sub
jno
or
or
inc
add
lock
or
hlt
popa
push
lock
pusha
sbbb
push
ficomps
inc
mov
xchg
test
and
mov
decb
leave
and
ljmp
test
mov
sbb
dec
rcr
mov
sbb
sbb
scas
lds
decl
lret
fildl
push
add
and
or
int3
nop
push
ds
mov
push
fs
inc
add
std
dec
mov
mov
adc
fs
cwtl
cmpsb
cs
or
push
out
mov
hlt
mov
push
cld
bound
jne
jge
or
fbstp
ss
or
inc
sub
xor
mov
xor
in
push
push
leave
pop
dec
stos
and
mov
xchg
and
inc
dec
mov
lock
xchg
adc
xorb
mov
lds
cmpsl
mov
sbb
jbe
cs
add
push
mov
push
jae
sbb
and
sub
sbb
movsl
and
push
adc
filds
cmp
mov
mov
dec
and
xor
push
mov
mov
push
dec
sarl
mov
filds
push
inc
fidivl
jmp
nop
sbb
and
or
fimuls
in
ds
inc
mov
fwait
xor
and
cmp
ljmp
push
and
mov
shlb
add
test
lock
int3
cmc
les
aam
daa
lahf
jb
xchg
subl
push
sub
sub
or
nop
pop
rorb
mov
add
xlat
hlt
cs
sub
add
or
addr16
dec
mov
push
jnp
rcrb
inc
sarl
jle
into
fistpll
loope
repz
sbb
aad
inc
negb
push
je
xchg
mov
adc
int
in
cmp
ret
out
cli
mov
clc
scas
jb
mov
int3
mov
outsl
mov
pop
ret
sub
fwait
nop
arpl
cli
das
sub
dec
shlb
popa
enter
aas
inc
pop
ds
cmp
pop
shll
shll
out
rorl
push
sub
mov
pop
fiadds
xor
add
fisttpl
out
ljmp
adc
mov
loopne
fildl
cmc
aas
adc
lahf
jp
sti
cld
lods
cmp
jecxz
pop
roll
pop
mov
mov
testl
test
sub
sbb
sbb
mov
adc
and
mov
dec
push
adc
ljmp
add
and
ds
stc
jmp
testb
add
push
js
dec
jge
xchg
cmp
js
outsb
mov
leave
les
cmc
dec
adc
and
push
ret
fwait
sbb
dec
in
adc
sarb
jmp
pushf
popf
adc
paddusw
scas
and
cmp
xor
mov
insl
jmp
jle
fucomp
decl
mov
in
xorb
cmpsb
sti
xor
loopne
sbb
sbb
xchg
add
cltd
fsubs
xor
aam
mov
subl
push
push
aad
sbb
mov
inc
mov
mov
jmp
subb
shll
add
or
popf
pop
cmp
or
xchg
jp
adc
rclb
bound
inc
xchg
call
shlb
arpl
loop
cmp
aad
std
outsb
mov
or
push
in
adc
inc
ja
jmp
hlt
or
push
scas
mov
lods
fcoml
jnp
xchg
push
sbb
sbb
loopne
ljmp
and
add
sub
add
mov
mov
icebp
pusha
stc
ds
add
in
adc
sbb
jg
mov
adcl
loop
and
bound
inc
push
movsl
inc
cmovo
mov
ja
pop
imul
jae
iret
xchg
xor
loope
popa
inc
or
js
mov
int3
pop
cmove
lods
adc
mov
jae
sahf
mov
std
add
push
lret
jl
loope
mov
nop
sti
sbb
inc
mov
les
shll
fcmove
inc
leave
pop
add
jb
xor
nop
hlt
sbb
inc
push
sub
int
push
inc
jne
xor
xor
push
ds
jne
pop
aas
into
xchg
cmc
loopne
sub
pushf
stc
pop
dec
xor
in
mov
sub
mov
jo
lock
mov
lcall
es
sbb
jmp
pop
cmp
fldt
mov
or
push
mov
push
imul
nop
cmpsl
subl
lods
push
mov
cmpsb
shl
aas
insl
pop
je
mov
add
cmp
mul
scas
loop
mov
sub
pop
jo
mov
pop
int
dec
shll
jbe
fwait
js
stos
fldt
mov
jmp
jl
sub
cli
or
fnstenv
sarl
fisubrl
mov
or
sbb
das
or
adc
mov
out
insb
mov
clc
push
rcrb
inc
add
inc
push
inc
or
push
mov
repz
add
push
repz
es
std
push
mov
es
jmp
push
cld
jecxz
pop
loop
jb
out
jl
pop
jle
ja
sti
repz
fdivs
movsb
mov
mov
add
idiv
pop
es
ret
inc
rcll
mov
shlb
adc
cmp
aam
jge
mov
decl
repnz
addb
adc
pop
push
clc
test
test
xchg
andb
cmpsl
popa
jle
xchg
fldl
pop
in
sub
std
jmp
loop
cmc
jns
mov
pop
fmuls
int
add
sub
shld
mov
movsl
sbbl
shll
jo
add
cs
mov
adc
mov
gs
cmpsl
mov
pop
fadd
sub
lcall
sub
add
jns
ficoml
ret
xor
dec
inc
ds
loopne
sbb
nop
mov
or
movsb
aad
shlb
cld
mov
sub
sbb
ja
push
mov
dec
fsubl
incb
jno
mov
push
fs
mov
pop
push
imul
movsl
hlt
incl
push
lods
cmpsb
call
or
loope
xor
incl
mov
jne
mov
xchg
leave
mov
into
jmp
out
jg
arpl
daa
push
inc
pusha
or
in
pop
jl
in
sbb
clc
aaa
mov
imul
imul
fistps
lds
cmp
push
jns
pop
rcr
inc
mov
aas
dec
xor
adc
push
fcmovnbe
movsl
cmp
cli
mov
jo
movsl
shll
sub
and
shlb
cmpsl
les
pop
pop
jnp
push
imul
mov
jb
outsb
cmp
mov
jno
mov
fsubrs
push
jp
mov
adc
or
xchg
mov
mov
inc
cld
leave
mov
test
jnp
arpl
or
add
mov
sub
mov
xchg
and
push
dec
push
jnp
scas
lods
hlt
fstl
pop
inc
cmp
int3
jae
addr16
enter
mov
in
adc
dec
pushf
mov
mov
incl
int3
sub
sahf
roll
mov
cmpl
sbb
sahf
test
add
js
sahf
sti
scas
loopne
les
rcl
loopne
ret
call
fmull
add
insb
lock
sbb
loopne
cmp
dec
clc
iret
xchg
dec
push
cwtl
imul
mov
mov
sub
add
aaa
push
jp
lds
mov
fisubl
in
sbb
adc
mov
push
ss
insl
fisubrs
xchg
sub
loop
cmp
or
mov
pushf
aas
cmp
xor
xchg
jb
and
cmp
pop
mov
xor
adc
adc
cli
dec
adc
mov
jb
mov
sub
pop
and
xchg
add
pusha
outsl
mov
mov
insl
insb
dec
outsl
mov
push
xor
xchg
ret
xorb
mov
clc
lods
mov
mov
aas
mov
lods
sub
mov
in
rcll
pop
call
cmpsb
cltd
mov
leave
movb
ds
pop
test
jp
in
add
aaa
adc
pop
pushf
jl
call
scas
inc
mov
and
adc
js
cmp
or
jne
mov
rcr
adc
jge
mov
pop
lods
bound
in
xchg
cmpsl
rclb
lock
flds
ss
push
mov
inc
insb
fwait
loope
sub
mov
jp
lods
push
sub
es
lcall
outsl
addb
ljmp
push
mov
inc
in
lea
adc
hlt
mov
mov
ljmp
arpl
adc
sub
xchg
and
call
das
sub
sbb
jnp
sahf
jno
inc
shll
cld
cwtl
pop
cmpsl
stos
mov
xchg
and
and
cld
fwait
clc
push
and
or
sub
imull
clc
xor
pop
call
fnsave
addb
lret
inc
add
pop
mov
cmc
ret
mov
aas
sbb
sub
int3
push
mov
lea
enter
xor
push
sub
pop
pop
out
daa
push
adc
cs
sbb
add
hlt
pop
pop
inc
in
outsl
bound
push
popa
fistps
or
push
dec
jnp
test
or
adc
mov
adc
add
rolb
les
jg
mov
inc
pop
inc
movsl
xchg
sub
adc
test
fisubs
pop
mov
mov
test
lods
push
lock
adc
in
mov
mov
incl
inc
push
cmp
pop
dec
cmpsl
mov
cmc
arpl
imulb
nop
shlb
add
ret
and
ljmp
mov
ja
lea
bound
mov
mov
push
ret
imul
sbb
push
aaa
rcrl
pop
cmp
pop
cmc
dec
cmp
je
push
jl
xchg
loopne
fidivrs
das
test
sbb
hlt
cmp
sbb
cld
push
aam
test
or
adcl
adc
pop
pop
adc
lret
addr16
jae
mov
dec
sarb
add
mov
imul
lock
dec
and
rcrb
add
push
test
jne
and
mov
mov
iret
ret
fisubs
add
mov
and
mov
bound
mov
push
sarl
pushf
sbb
es
jno
mov
and
test
addb
lods
icebp
adc
cltd
outsb
pop
adc
adc
stos
outsl
pop
in
mov
xor
mulb
pextrw
or
add
ret
pop
mov
push
test
les
movsl
inc
inc
imul
in
mov
fsts
je
and
das
xchg
cmpl
push
push
aas
pop
fisttps
pop
mov
das
jae
sub
adc
cmpsb
call
pop
rclw
pop
insb
xchg
mov
xor
inc
add
mov
loopne
adc
addr16
in
sbb
xchg
cmp
aaa
inc
subl
adc
div
dec
jp
repnz
clc
xchg
mov
filds
jno
imul
nop
cli
ja
push
xchg
and
mov
mov
and
popf
add
push
cwtl
sbb
lods
mov
jle
adc
push
mov
inc
and
ret
sub
hlt
and
xchg
fisubrl
push
mov
sub
add
xorl
cmp
push
ss
sub
nop
int3
xchg
mov
adc
xor
xchg
xchg
sbb
out
sub
aaa
decb
or
add
or
or
lea
xlat
dec
aad
or
inc
jecxz
mov
inc
jae
mov
mov
push
mov
pop
cltd
test
fildll
mov
pop
loop
push
imul
stc
push
pop
add
or
popa
sub
mov
pop
mov
and
cld
out
sbb
jbe
xchg
pop
repnz
arpl
or
mov
lahf
adc
mov
dec
in
add
or
std
shl
inc
add
pop
sub
add
mov
adc
sbb
xchg
xorb
je
mov
loopne
test
sub
ret
mov
sbb
scas
ljmp
clc
sub
inc
mov
inc
nop
cmp
lock
xchg
mov
sub
add
mov
jge
fnstsw
in
push
jo
out
jnp
fcom
in
and
inc
insl
and
aaa
in
adc
aam
ficoms
lret
iret
aaa
xor
xchg
pop
adc
and
or
push
shrl
cld
das
mov
rcr
in
scas
sub
add
push
pop
loopne
punpckhdq
lods
pop
xchg
or
mov
pop
cmc
cmp
cmp
inc
dec
pushl
xchg
add
sub
add
lods
outsl
call
jb
and
mov
ds
pop
lock
out
adc
lcall
bound
xor
hlt
mov
mov
mov
cmp
loopne,pt
pop
imul
cmp
mov
jne
les
outsb
jno
push
jne
xchg
mov
or
pop
lcall
push
push
scas
in
insl
test
dec
pop
pop
sbb
xlat
or
or
fistl
mov
adc
nop
inc
xchg
lods
jnp
adc
inc
jne
jno
xchg
cmc
cmpsb
movsl
mov
sbb
mov
fildll
imul
pop
sbbl
call
gs
fisttpll
popa
sub
test
adc
test
rcrl
fstpt
adc
jns
mov
icebp
add
shlb
adc
decl
call
mov
popa
xchg
cmc
push
in
push
aad
inc
mov
pop
cmpsb
jnp
push
cmp
or
adc
adc
jmp
inc
cmp
ss
mov
xor
aaa
incb
test
jecxz
in
imul
jp
fcoml
incl
lahf
fwait
scas
pop
in
push
pop
push
in
call
js
insl
pushl
sub
sbb
sbb
inc
xor
mov
les
pop
lock
and
loop
cli
add
sbb
dec
jl
cmc
loop
imul
aad
or
mov
clc
add
fists
jo
xor
lds
lcall
das
pop
jp
fcompl
loop
sub
cmp
sub
repz
dec
inc
aas
insb
xchg
push
andb
cmp
inc
out
cmpsb
adc
in
imul
in
fildll
cmc
fadds
jge
xor
dec
mov
jmp
mov
cld
ja
clc
inc
jb
and
rcrl
push
mov
mov
aad
int3
hlt
add
jmp
cli
scas
pop
mov
push
js
push
sbbb
dec
xor
push
add
call
clc
inc
mov
cmp
rolb
imul
aam
dec
cmovg
mov
dec
inc
sub
cmp
shr
subb
fmuls
mov
mov
shlb
out
dec
xchg
xor
insl
dec
stos
xor
inc
cmp
mov
adc
dec
add
jns
mul
cli
jg
push
add
loope
setb
cmc
pop
sub
lods
push
iret
dec
arpl
aam
int
jb
xor
sbb
scas
ljmp
rolb
or
push
pop
mov
test
out
mov
ljmp
pop
mov
push
mov
sub
outsb
outsb
data16
pop
ss
xchg
push
nop
lahf
in
lods
xchg
aad
push
fists
addb
push
and
inc
pop
pop
lock
cld
push
lods
adc
jg
imulb
or
out
add
outsb
xchg
cmp
mov
dec
dec
ret
pop
cmpsb
add
in
and
outsb
xchg
jle
mov
mov
add
sbb
lret
dec
bound
stos
cmp
sti
jbe
pop
loopne
pop
js
jo
je
mov
or
mov
push
pushf
sub
cmpsl
sub
loopne
aam
pop
jmp
call
ficoms
in
lahf
mov
push
shll
data16
sub
inc
lock
dec
cmp
pop
repz
jne
inc
fld
cmpsb
negb
popa
loope
lret
out
push
mov
shll
outsl
inc
decl
setp
test
and
sub
xor
mov
add
imul
sub
pusha
andb
pop
push
fdivrs
sub
mov
insl
inc
dec
pop
icebp
pop
or
pop
or
push
xchg
jmp
sbb
ret
subb
fstl
insb
int
iret
mov
int
cmc
pop
cltd
orl
push
aam
in
push
inc
or
pop
jne
mov
cs
pop
xchg
cmp
in
stos
mov
add
andb
or
pop
mov
xchg
aam
and
loopne
xchg
mov
stos
int3
and
mov
jmp
mov
mov
iret
adc
lahf
mov
pop
jge
loop
mov
cmpsb
sahf
lds
test
sub
cmp
fs
or
sub
test
outsb
aad
arpl
sbb
shll
fidivl
les
cmp
xor
ljmp
xor
bound
cmp
mov
dec
incl
fisubs
cmc
cwtl
pop
outsl
test
in
sbb
sahf
loop
cmp
fisttpll
and
insl
enter
cwtl
popf
push
fadd
aaa
adc
aas
jne
or
inc
sub
xchg
test
and
call
orb
insb
push
mov
jg
daa
adc
sub
inc
fistl
inc
adc
lahf
dec
mov
dec
inc
cmpsb
ret
mov
sahf
sbb
pushf
and
cmp
mov
rclb
subb
in
cli
jo
or
or
jns
in
push
incb
push
pop
mov
mov
fdivr
dec
xchg
or
mov
fisttpll
in
dec
outsl
pop
lahf
adc
sbb
add
push
jns
and
jp
and
popa
inc
nop
enter
pusha
mov
cmpsl
jo
repnz
aas
xchg
sbb
loop
aam
rcr
aad
dec
sub
loope
and
push
imul
mov
fadds
cs
imul
test
mov
rcl
mov
jle
sbb
sub
mov
mov
fdivr
pop
sti
and
mov
outsb
push
xor
or
mov
cmc
cli
jecxz
inc
repz
sub
aas
clc
cs
push
je
add
lds
sub
pop
and
cltd
insl
out
jo
mov
adc
add
es
stc
mov
gs
mov
add
sub
aaa
mov
and
in
nop
mov
jecxz
ljmp
cli
ret
pop
cli
inc
das
icebp
mov
mov
lahf
push
push
mov
cld
mov
pop
mov
decl
jg
sbb
shlb
pop
pop
ss
insb
cmp
daa
or
inc
mov
cmc
fs
cwtl
and
repnz
std
out
or
test
cmp
orl
in
adc
dec
dec
jb
lea
loopne
cmpsl
xor
in
fidivrs
sub
cld
push
pop
mov
pop
cmp
test
pop
jb
jo
mov
lea
ud1
rcr
xor
jge
lds
and
jae
filds
push
std
pop
pop
cmc
ja
inc
call
nop
sbb
xchg
dec
or
shrb
stos
xchg
test
push
insb
cmp
jns
cmp
or
inc
jbe
test
cmc
das
adc
fcompl
push
es
gs
dec
mov
push
fisubl
inc
icebp
sbb
lods
lcall
push
lock
mov
add
sub
jo
sub
adc
les
and
mov
movsb
insb
mov
pop
jp
testl
hlt
mov
push
test
shll
and
out
call
add
into
jns
jmp
imul
jecxz
sub
and
popf
fisubrs
pop
jbe
sbb
das
xor
add
sbb
and
add
push
push
cwtl
outsb
mov
icebp
sub
test
jecxz
loope
xchg
mov
repz
add
addb
pop
pop
lcall
nop
pushl
lock
mov
pushf
cmp
push
pop
mov
mull
mov
push
add
cmp
insl
loopne
push
imul
or
dec
inc
mov
pop
mov
jo
xor
test
xchg
and
ror
cltd
loope
mov
lds
shlb
ss
mov
outsb
add
testb
push
rorb
push
ret
fiadds
fnsave
repnz
adc
ss
cltd
dec
adc
xor
repz
pusha
pop
in
subb
dec
jge
decl
fdiv
fistl
sub
push
inc
hlt
inc
fcmovnu
pop
mov
sub
add
adc
cwtl
xchg
adc
ficoms
xorb
pop
and
jne
lods
pop
fidivs
popa
scas
fs
out
or
mov
mov
fs
mov
sbb
and
shrb
cmp
fisttpl
repz
out
push
sbb
cs
jge
sbb
mov
cmp
in
sbb
sub
daa
decl
inc
fdivrl
addl
xorb
mov
sbb
dec
adc
lds
or
fwait
push
fcoml
loopne
xchg
scas
stos
dec
and
sub
repz
ror
sbb
or
sti
shll
pop
push
stc
push
stc
mov
loop
pop
pop
lods
add
xchg
xor
pop
cmp
mov
lea
inc
push
jp
and
and
sbb
adc
inc
or
rorb
xchg
sbb
pop
pop
loope
mov
pushf
pop
imul
cmpsb
jp
bound
inc
popa
imul
loop
or
and
jae
das
add
outsl
sbb
sbb
into
lret
mov
jl
test
std
cmp
addb
jp
jecxz
add
mov
imul
pop
rep
insl
jbe
jl
mov
mov
frstor
push
movsb
shl
cmp
and
sub
lods
orb
inc
or
jo
inc
inc
xchg
xor
and
adc
js
inc
or
call
iret
shll
mov
and
fldl
jle
adcb
test
dec
sbb
jne
rorb
add
stos
dec
or
and
cmp
inc
rorb
sbb
pop
insl
test
add
jb
push
jg
push
push
mov
in
and
movsb
lret
mov
mov
daa
adc
dec
cmc
push
mov
cmp
push
outsb
and
mov
out
add
xor
cmp
aad
out
pop
and
jg
cmc
in
pop
xchg
aas
inc
fiaddl
mov
call
mov
and
ja
stos
sub
jo
aaa
mov
loop
mov
xchg
ret
adc
daa
push
inc
sub
cmp
add
dec
test
pop
out
xchg
mov
sub
andl
sbb
sbb
sbb
popf
shrl
push
incb
adc
push
or
aaa
adc
lret
mov
push
or
mov
or
out
adc
lea
call
inc
jo
push
xor
icebp
cmpsb
fcomp
sbb
orb
pop
mov
lods
jle
adc
mov
je
data16
sbb
addb
cmp
jg
or
jp
pop
ljmp
mov
push
fcom
mov
and
adc
xor
in
fwait
lods
ja
inc
rcl
add
insl
ljmp
mov
push
out
mov
push
mov
xor
daa
sbb
movsl
push
xor
sub
mov
fstl
mov
adc
mov
je
inc
movsb
imul
adc
daa
xchg
fimull
jg
sbb
and
pop
sar
movsl
jne
mov
mov
movsl
push
scas
push
xchg
mov
mov
mov
punpckldq
mov
das
push
push
sbb
sbb
jo
outsb
pop
cmp
pop
popa
sbbl
in
pop
inc
xchg
aas
lock
mov
negb
sbb
rcrb
or
lock
sbb
pop
push
mov
push
scas
mov
pop
inc
in
mov
inc
mov
loopne
ljmp
sub
push
sub
rcrl
mov
inc
and
push
icebp
push
or
push
js
inc
jnp
or
insb
call
fistps
mov
mov
mov
or
imul
lcall
cs
stos
cmp
inc
test
imul
mov
fldt
jo
in
add
sub
mov
mov
jnp
icebp
inc
ja
filds
inc
and
cmc
push
xchg
jmp
push
pop
xchg
sub
jb
into
repnz
push
push
xorb
pop
mov
movsb
inc
and
and
sbb
inc
push
sbb
call
shrb
mov
out
ss
adc
test
cmpl
std
mov
cmp
jge
ficoms
inc
xchg
push
adc
ljmp
add
jno
xor
xchg
xor
pop
arpl
fldt
jmp
orl
clc
fbstp
addl
or
outsl
cmpsb
clc
mov
popf
push
push
bound
ret
cld
div
jg
std
fs
fwait
add
test
or
cltd
orb
scas
daa
xchg
daa
push
add
dec
inc
cmp
into
rcrb
jbe
fldcw
movsl
es
leave
and
out
mov
xchg
movsl
xchg
sbb
push
jge
lods
cld
pop
xor
je
jo
movsb
rcl
je
jbe
lds
and
test
lea
popa
je
push
mul
xchg
arpl
or
popa
push
add
ljmp
push
cmpsb
xor
sbb
shlb
stos
cwtl
mov
sub
cld
mov
add
or
test
dec
idivb
into
mov
outsl
pop
fnstenv
aaa
leave
rolb
outsb
nop
ret
es
subb
lret
and
mov
xor
test
lods
imul
jo
sub
ret
add
mov
mov
faddp
inc
insb
sti
ret
in
mov
in
jg
into
notl
mov
mov
mov
cmp
cmpsl
std
lods
push
je
rcrb
or
and
push
ja
stos
mov
fcmovbe
ret
mov
je
pop
inc
fsubrl
dec
sub
inc
inc
push
inc
ret
das
mov
in
mov
in
icebp
dec
mov
in
dec
push
scas
imull
jmp
add
and
cs
pop
or
test
inc
xor
test
lods
inc
jl
les
xchg
push
adcb
hlt
xchg
xlat
dec
je
cmpsb
fstpl
push
sti
ret
jl
sub
cmp
mov
test
mov
test
rorl
ds
adc
repz
mov
mov
loopne
sahf
test
jge
push
rcr
movb
push
aam
je
pop
xor
pop
mov
ret
decl
lcall
stos
mov
inc
icebp
aaa
pop
fstpt
jno
out
add
push
frstor
call
test
std
outsl
fcmovnb
add
ret
push
shll
das
add
mov
test
int3
out
fwait
xor
shrl
js
dec
ret
xchg
mov
add
mov
out
adc
sub
adc
sbb
cli
mov
push
ljmp
ljmp
lods
mov
lret
aas
loopne
cmc
ljmp
inc
sbb
mov
dec
rolb
movsl
mov
mov
or
dec
adc
mov
mov
add
enter
pushf
pop
ss
adc
aaa
std
dec
mov
push
aaa
fsubs
adc
push
mov
sbbl
ljmp
pop
add
adcl
rcl
cs
mov
orb
sbb
cltd
pop
pop
fdivs
push
mov
or
mov
mov
rorl
sbb
in
stos
loop
rorl
mov
enter
cmc
and
push
clc
push
push
cwtl
lds
and
fiaddl
scas
and
cmp
mov
mov
push
call
sti
test
roll
lock
add
gs
or
test
in
shll
jnp
rcrl
je
jecxz
ljmp
int
jne
adc
ficomps
mov
test
popa
add
sbbl
lret
jmp
or
insb
or
push
add
mov
outsl
loopne
xchg
mov
pusha
insl
ss
neg
xorl
sbb
mov
fwait
push
inc
mov
mov
fs
jo
pop
xor
sar
or
pop
jns
das
jecxz
mov
and
mov
sbb
push
or
cmpsb
and
xchg
jae
int3
dec
add
fcomip
inc
adc
std
or
adc
imul
or
lahf
dec
xchg
fnsave
mov
mov
pop
out
adc
rorb
jo
sbb
adc
cmpb
lock
or
mov
pop
lret
adc
sbb
lock
xchg
mov
pop
sub
int
lea
pushf
sbb
pop
lods
aaa
ljmp
or
pop
ja
pushf
icebp
shlb
sbb
je,pt
lods
xor
mov
andl
lldt
not
lret
fadd
xchg
mov
push
clc
ljmp
lret
bound
lds
adc
jb
inc
push
cmp
mov
ja
or
ljmp
and
sbb
jmp
mov
aam
or
stos
adc
mov
and
aam
das
popf
ljmp
fisttpll
icebp
or
mov
test
js
and
or
jge
pushl
push
rorl
inc
jbe
std
xor
fistpl
stos
cmp
push
adc
xchg
loope
repnz
cmp
mov
cmpl
jmp
inc
sub
xchg
and
sbbb
outsl
outsl
ja
jp
call
dec
pushf
xor
add
dec
mov
and
in
xor
fldt
xor
out
je
lret
inc
rclb
inc
icebp
xchg
andb
xor
inc
xor
and
les
mov
loope
test
nop
add
lcall
ja
inc
rolb
adc
mov
dec
sub
sub
je
sub
inc
jno
fsubl
add
xchg
insl
mov
nop
btrl
or
add
fstpt
fadd
or
pushf
xor
mov
jmp
push
int3
xlat
add
mov
sbb
xor
rorb
mov
ret
jg
mov
push
inc
sub
inc
cmp
xchg
mov
adc
mov
add
in
lret
into
and
jg
movsb
sarl
pop
pop
sbb
data16
js
sbb
lods
sbb
movsl
or
js
push
sbb
ja
pusha
ret
xchg
dec
adc
mov
mov
and
xchg
decl
int3
push
mov
outsb
das
pop
shll
mov
sarl
inc
es
jb
int
fadd
add
clc
sub
int
push
jge
cmp
sbb
insb
inc
mov
js
mov
lea
lods
push
pop
push
sub
jno
das
dec
and
fwait
jp
jecxz
adc
popf
push
aaa
hlt
xchg
mov
mov
xor
jne
jle
push
popa
inc
push
push
push
outsl
jecxz
xor
jl
mov
cltd
adc
subb
add
inc
dec
pop
ljmp
sti
test
outsl
cmp
rorl
loope
out
shll
inc
jne
or
xor
add
stos
or
mov
testb
hlt
xchg
or
or
scas
jbe
mov
push
xchg
and
into
jle
push
hlt
popa
push
push
fdivrl
dec
clc
test
rclb
aam
mov
scas
stos
pop
clc
inc
stos
stos
scas
unpckhps
decl
lds
rorb
mov
xorl
cmp
fcoms
fidivl
js
jge
xchg
and
lret
fbstp
sub
add
dec
and
push
cmc
inc
pop
cli
lods
mov
int3
mov
or
pop
call
and
sub
pop
paddd
dec
inc
push
jge
dec
xchg
sbb
mov
xlat
sbb
inc
lcall
aaa
jno
jbe
xchg
shll
js
xlat
nop
xor
movsl
or
inc
fldcw
inc
mov
lock
pop
pop
fisubrs
sub
push
fmull
lods
push
cmp
test
es
sub
lahf
mov
popa
gs
mov
mov
dec
sahf
dec
push
clc
stos
mov
fidivl
sub
jb
fdivr
sbb
inc
shll
xchg
pop
fidivrl
sbb
cli
mov
or
je
fsubl
push
fs
inc
ds
sbb
aam
sahf
arpl
shll
cltd
sbbb
fcompl
push
jne
jle
mov
and
pop
xchg
stos
orb
ja
mov
pop
cmp
lret
out
std
adc
mov
mull
sub
jg
mov
mov
div
jno
xchg
repnz
inc
cld
add
lret
add
test
js
and
pop
mov
pop
mov
sbb
sbb
outsb
pop
xorb
addb
fcom
cmp
xchg
dec
in
mov
inc
push
lret
mov
or
lock
add
push
leave
paddusb
jb
in
and
orl
in
clc
bsf
xor
mov
jb
aaa
lcall
std
xor
xlat
into
repz
in
sbb
lods
inc
jge
addr16
sbbb
imul
decl
fcomi
add
in
ficoms
and
std
mov
loop
enter
jge
push
in
loope
adc
push
and
pop
add
jmp
shl
pop
dec
mov
sub
movsb
and
xor
or
mov
icebp
pushf
fs
inc
sub
shlb
and
aas
loope
and
cli
cmp
aad
mov
pop
sti
adc
mov
lret
mov
cmp
pop
stos
push
add
test
jne
pop
stos
loopne
lods
int3
jbe
adc
adc
popa
dec
gs
clc
cmp
insb
jp
ljmp
in
enter
dec
inc
imul
sbb
gs
mov
sarl
jnp
dec
pop
cli
add
sub
rolb
mov
mov
push
push
pushf
xchg
inc
bound
dec
push
dec
loop
fcmovb
testl
mov
xchg
mov
call
bound
mov
outsl
sub
jge
icebp
and
sub
and
lahf
inc
jecxz
daa
jp
mov
cmpsl
lret
mov
push
mov
adcb
shll
das
insb
stc
and
xorl
outsb
inc
xor
cs
xor
outsl
and
mov
fistl
adc
pop
andb
addl
adc
mov
mov
outsb
cltd
mov
rclb
cwtl
and
push
lds
mov
mov
dec
gs
add
sub
pop
filds
inc
in
push
hlt
dec
das
shrl
jb
adc
cmp
popf
fistpll
lock
jecxz,pn
sahf
je
incl
out
dec
jno
xor
mov
es
out
dec
mov
jmp
pop
sbb
push
dec
cmpsl
pop
xchg
add
mov
cld
dec
xchg
push
adc
aad
sahf
or
shl
es
loopne
stc
inc
mov
xor
repz
fisubl
shrl
mov
insb
cmp
sub
push
rol
ficompl
out
push
dec
or
pop
and
andb
test
mov
jae
aad
aas
mov
outsl
shrb
ja
mov
lcall
push
aas
or
popl
cs
int
mov
mov
or
push
inc
test
fwait
sbb
pop
lds
jle
int
outsb
and
subb
jne
push
loopne
push
out
rol
sti
or
lods
adc
andl
jecxz
push
aas
sbb
jb
addl
push
dec
call
pop
divl
dec
and
cli
xchg
out
pop
push
lock
add
push
inc
ret
pop
fstpt
add
jbe
add
mov
push
xchg
lods
fistpll
call
cmc
jecxz
xchg
movb
lods
or
pop
leave
test
and
faddl
mov
xchg
sbb
idivl
iret
sbb
jb
shrl
mul
jae
insb
push
jno
stos
in
pop
test
fcoms
cltd
nop
fildll
xor
mov
fwait
dec
mov
inc
std
adc
pop
add
or
nop
ret
les
dec
roll
dec
mov
add
add
dec
adc
in
jg
sub
insb
and
sbb
adc
dec
loopne
stc
or
add
mov
adc
scas
pop
or
test
pop
mov
jmp
cmp
or
movsl
lods
push
mov
mov
aam
lahf
or
and
cmp
call
push
jo
cmpsb
popf
jae
mov
and
insl
and
sbb
aas
or
test
jecxz
or
xchg
sbb
push
mov
insb
cmp
into
outsl
push
mov
mov
sbb
fsubrl
icebp
dec
and
insl
push
mov
sub
lret
movl
mov
adc
out
mov
cmp
push
sub
seto
insl
fucom
mov
inc
stos
xor
pusha
push
xor
inc
ja
cs
pusha
ss
aam
test
std
les
add
stos
dec
fadd
inc
xchg
fwait
mov
mov
dec
icebp
pop
int
add
pop
shll
xchg
cmp
inc
push
lods
jae
xor
push
incl
mov
cmp
xchg
mov
ficoml
pop
popa
fmull
push
orl
mov
dec
mov
mov
xchg
aad
sub
adc
and
sbb
sbb
adc
in
inc
and
js
hlt
ret
cmp
xchg
xchg
fistl
cmp
xor
adc
xor
in
bound
in
repz
popf
loope
pop
insb
pop
fdivrp
popa
or
cmp
sub
xor
iret
cld
shrb
add
lcall
in
lea
mov
mov
mov
adc
imul
push
outsl
sbb
mov
sbb
addr16
inc
inc
cltd
mov
mov
bound
fiaddl
mov
cmpsb
popa
gs
dec
and
fldenv
ljmp
stos
in
data16
ja
jl
pop
call
mov
adc
sbbl
or
sub
mov
pop
sub
out
cmpsl
add
gs
jbe
pop
aaa
mov
in
mov
lahf
aas
xchg
loope
adc
orb
push
jle
repz
pop
mov
mov
lods
out
or
pop
sub
inc
cltd
add
aad
out
mov
mov
mov
ret
outsl
push
pop
nop
movl
in
mov
xchg
xchg
or
outsl
or
and
call
push
dec
jmp
and
sub
mov
mov
ds
dec
sub
mov
xor
scas
incl
aaa
xchg
mov
mov
fwait
or
jbe
jo
or
jne
pusha
stos
and
cli
or
jne
mov
mov
addr16
fcomip
flds
aaa
call
movsb
push
aaa
andb
into
mov
and
sub
and
ret
inc
fildl
shrl
movsl
cmpsb
mov
jnp
sbb
icebp
out
jbe
mov
inc
push
rcrb
sub
or
call
fiaddl
data16
and
mov
mov
aaa
xchg
jecxz
and
push
xor
adc
movswl
call
jne
leave
mov
inc
dec
out
std
adc
mov
test
out
jmp
pcmpeqw
dec
mov
out
sub
ficoms
outsl
dec
pop
mov
sub
mov
sahf
xchg
call
mov
fnsave
push
mov
pop
or
test
iret
icebp
mov
popa
push
lcall
rorl
or
push
mov
rorb
incl
or
cwtl
dec
ja
test
cmp
iret
inc
lahf
mov
mov
cmp
inc
or
dec
shrb
adc
rolb
xchg
mov
inc
jg
xchg
fdivs
outsl
aaa
fldt
lods
arpl
and
or
clc
shlb
in
loopne
adc
inc
xchg
outsl
pop
aad
cmp
add
pop
mov
dec
shll
pop
mov
mov
faddl
dec
adc
push
aad
clc
scas
mov
dec
sbb
jno
nop
shll
cs
or
icebp
mov
mov
das
fisttpll
cmc
inc
push
insb
xor
xchg
jo
rol
lock
sahf
sbb
mov
adc
cwtl
ja
pop
sub
test
mov
hlt
jbe
out
repz
inc
pop
cmpsb
and
xorb
sub
addb
xor
hlt
ret
mov
mov
push
aam
cmp
pop
sti
addr16
xor
iret
fists
cmc
push
loopne
dec
outsb
and
pop
gs
mov
mov
ljmp
add
pop
pop
pop
pop
mov
add
and
push
mov
mov
push
jg
pusha
roll
testl
cwtl
cmpsl
out
adc
inc
lock
xorl
lcall
pushf
cli
pop
enter
mov
prefetchwt1
movsl
mov
cmpsl
and
insl
jnp
outsl
ficompl
and
mov
aam
and
leave
push
fwait
pop
xor
iret
pop
call
add
movsb
xchg
sbb
insl
fwait
iret
lock
sahf
xor
jg
jo
jae
inc
cmp
icebp
lea
jo
ss
pop
lea
iret
test
fs
in
neg
andb
add
add
push
or
fstpt
mov
icebp
jecxz
mov
push
int
scas
pop
mov
and
push
je
int3
mov
xchg
gs
lds
adc
shlb
inc
sub
outsl
cli
addr16
mov
aam
pop
sbb
add
test
enter
fisttpl
jecxz
mov
inc
jecxz
jle
lahf
mov
inc
push
inc
dec
fwait
mov
sub
push
xchg
add
inc
xchg
add
ret
inc
sbb
inc
inc
scas
mov
inc
jns
aas
push
daa
mov
inc
add
sub
xor
push
out
clc
not
add
jbe
and
inc
xchg
jg
pop
subb
sub
cwtl
test
aad
mov
ret
lcall
shr
xchg
into
pusha
ja
daa
sub
cmpsl
lcall
stc
or
inc
inc
inc
push
adc
loop
out
fnstsw
inc
or
xchg
inc
push
sbb
jmp
enter
ljmp
outsl
push
cmp
xlat
adc
dec
shll
rorb
push
mov
ss
inc
nop
icebp
aaa
out
and
imul
or
push
out
xlat
xchg
pusha
mov
push
xchg
mov
push
cltd
or
lods
lcall
imul
adc
aaa
outsb
cmpsb
mov
shlb
fwait
ljmp
jb
ja
mov
pushf
popf
fsubrs
inc
stc
cld
mov
cld
aaa
pop
setbe
lods
cmp
mov
sbb
in
add
lcall
pushf
outsl
call
jne
sbb
xchg
push
mov
loopne
dec
pop
out
fists
mov
cmp
es
sbb
mov
mov
mov
fsubs
hlt
xor
jle
xlat
fs
outsb
jmp
mov
aam
out
xor
or
popa
add
sti
nop
cmp
add
push
pop
pushf
mov
mov
jg
cmp
nop
xor
adc
and
jl
cmp
sub
add
pop
pop
test
rclb
mov
and
aam
push
jnp
mov
or
jg
push
mov
push
cmp
inc
sub
std
sbb
lret
xor
jno
lods
fildll
cmp
test
stos
ret
lcall
cltd
in
xchg
push
test
cmpsl
inc
roll
lods
push
cmpsl
das
enter
mov
mov
loop
adcl
inc
cld
or
hlt
iret
add
xchg
xor
push
and
inc
pop
mov
adc
push
adc
adc
das
mov
out
xor
mov
push
stc
mov
mov
js
rorb
and
mov
mov
adc
je
pop
mov
jg
xchg
xor
test
mov
and
fnstsw
gs
and
arpl
or
jle
imul
add
jo
pop
cmp
loop
mov
jmp
and
cmp
sbb
mov
in
mov
popf
lods
stos
jg
inc
inc
xchg
sub
ror
ss
imul
push
nop
and
xchg
in
loopne
shlb
jns
push
cmpb
ficoms
pushf
jp
js
cmp
cs
sbb
xchg
jb
adc
pop
jp
jne
adc
cmp
dec
std
add
call
test
add
inc
arpl
xor
pop
xor
xor
rcr
pop
repnz
out
fs
notb
xor
arpl
push
or
xchg
mov
add
add
jmp
push
cmpsl
stos
mov
cs
pop
jne
push
mov
jg
enter
xchg
inc
loop
cs
adc
and
cmpsb
scas
cmp
jg
and
in
adc
mov
cs
fwait
notb
fcomp
dec
pop
inc
ja
mov
mov
jecxz
add
adc
repz
push
cmp
jge
push
popf
pop
js
mov
mov
sbb
lea
inc
dec
sbb
ja
outsb
shlb
mov
bound
sbb
mov
mov
mov
leave
pop
clc
ja
mov
call
sub
and
add
lea
ss
in
das
das
aas
xchg
cmpsl
ja
call
das
lcall
xor
push
mov
hlt
pop
or
inc
mov
imulb
add
orl
ljmp
mov
sub
xor
and
popa
popa
imul
jle
je
pushf
ljmp
dec
faddp
aas
pusha
mov
fwait
gs
push
jae
and
cli
mov
xlat
into
pop
jp
add
std
testb
dec
or
fsubs
push
sub
sahf
cmpsl
fwait
or
pop
jg
psubusb
mov
movd
ret
pop
cmpsb
jns
std
in
add
sbb
ret
sbb
inc
xchg
inc
inc
dec
cld
mov
dec
sub
xor
pop
or
lcall
jbe
add
std
sub
mov
mov
push
test
add
popf
test
pop
dec
jg
ljmp
int
loop
in
jae
pop
add
xor
mov
dec
dec
inc
and
sbb
sar
shll
fs
test
hlt
fxch
loopne
dec
inc
cmp
stc
ds
or
or
mov
fcmovbe
mov
or
cld
and
orl
cltd
mov
and
cmc
aaa
push
sbb
cmp
push
dec
push
mov
fsub
push
inc
lods
sbb
es
rcl
jp
out
jb
mov
mov
aaa
inc
mov
add
adc
dec
mov
int
inc
lods
int3
add
or
xor
sbb
loop
popa
loope
or
sti
fstpt
adc
jl,pn
sbb
nop
dec
push
inc
cld
test
mov
sti
daa
fnstenv
push
dec
inc
in
ficoms
xor
into
loope
xchg
loope
dec
adc
inc
sbb
or
fwait
aaa
shrb
add
mov
shrb
in
lock
test
jne
in
sbb
push
push
push
xor
adc
and
into
sub
push
mov
test
jo
sub
imul
sbb
adc
into
adc
mov
jle
cld
inc
cmp
sub
push
xlat
fimull
and
pop
jmp
data16
gs
pop
test
add
xchg
js
push
push
xlat
mov
add
push
adc
add
pop
and
xor
xor
sbb
lahf
insb
clc
mov
mov
dec
outsl
in
or
imul
sub
adc
add
xchg
sbb
add
faddp
xchg
mov
popa
inc
jne
push
sub
xor
adc
test
xchg
cmp
or
stos
add
sbb
jo
xlat
ja
jae
dec
jmp
fistpll
or
in
or
fwait
sub
neg
push
cmc
mov
mov
adc
xchg
test
push
push
xor
inc
sub
div
aaa
popl
add
add
xor
push
lret
rorl
test
push
jbe
and
stos
sbb
mov
cmp
hlt
stos
sbb
and
adc
call
ret
in
push
dec
sub
cli
mov
jne
js
inc
push
xor
fs
push
sub
in
movsl
stos
icebp
inc
ja
inc
vpunpckhbw
dec
ja
insl
or
mov
push
adc
dec
push
popa
jbe
dec
dec
push
inc
in
add
push
xchg
dec
jo
dec
fnstsw
clc
or
jne
insl
loope
push
enter
inc
data16
outsb
adc
mov
mov
add
jle
movsl
dec
cmp
or
dec
pop
xor
rolb
lock
in
test
dec
jecxz
push
sub
mov
pop
hlt
push
jmp
pop
add
jp
aaa
cld
pop
clc
adc
test
mov
fs
jo
loopne
xor
push
outsl
andl
popa
gs
dec
adc
or
xor
cmc
loop
fists
jg
neg
pop
cmp
testl
mov
fmuls
sub
neg
movl
inc
aam
data16
jg
push
lea
mov
adc
fildl
sbb
jne
arpl
in
fstpt
test
not
dec
add
inc
not
lcall
jne
leave
ret
or
cmc
addr16
je
push
lds
cmp
outsl
inc
add
dec
pusha
xchg
scas
inc
inc
addr16
popa
scas
push
loopne
je
xor
pop
xlat
movsb
xor
jl
pop
fidivs
mov
imul
or
andl
pop
sub
notb
xchg
add
movsl
cli
fs
dec
pop
xlat
sub
push
adc
adc
aad
int
shl
jp
leave
es
and
je
pop
xchg
and
cld
pop
popa
imul
push
cmp
cmp
scas
rsm
ret
dec
or
xor
sbb
or
icebp
push
loop
movsb
shll
push
inc
and
mov
or
repnz
rclb
jno
fdivs
add
scas
mov
cmp
in
outsb
jmp
dec
dec
popa
inc
imul
push
mov
sub
mov
pop
mul
adc
ljmp
cmp
push
cmpsl
add
sub
fs
div
leave
sbb
addl
outsl
out
sub
push
add
push
mov
jo
inc
fs
js
js
push
sub
pop
xor
test
imull
sti
fs
add
arpl
cmpl
or
dec
push
or
sbb
push
cmpsl
pop
xor
jg
push
jns
dec
and
pusha
jnp
adc
dec
outsb
popa
insb
and
icebp
ficomps
es
cmp
xor
mov
into
cmc
xlat
fs
xchg
pop
mov
inc
std
sbb
or
push
lcall
inc
mov
push
js
xchg
js
jge
arpl
out
push
mov
jne
movsl
mov
sbb
rorl
stos
ds
sub
mov
aaa
dec
sbb
xor
out
push
jb
add
sub
and
inc
dec
or
in
mov
jbe
insl
lock
fidivrs
sub
inc
jbe
xor
inc
and
cmp
hlt
push
push
push
sbb
cs
hlt
fdivs
or
dec
outsl
xor
lret
push
and
clc
inc
add
sbb
es
add
popa
je
xor
pop
loopne
or
idiv
fdiv
shl
add
mov
repz
adc
dec
adc
aaa
dec
mov
jmp
cmp
inc
inc
push
add
jno
fstl
jae
fnstcw
lock
pop
and
addr16
ret
in
pop
movsb
std
and
js
jl
das
xchg
dec
jbe
inc
bound
mov
leave
xchg
or
pop
fdivl
sbb
cld
mov
xor
xor
in
stos
push
inc
ret
outsl
testl
fs
pop
xchg
imulb
mov
sbb
movsl
dec
jb
sti
not
add
popf
iret
enter
repz
adc
aaa
dec
mov
lock
imul
jmp
lock
push
or
xor
push
test
sub
clc
lret
mov
clc
pop
test
jecxz
sub
push
xor
pop
inc
in
jmp
mov
adc
std
fadds
dec
enter
fldcw
sub
push
clc
push
icebp
pop
and
jae
fninit
fildl
jbe
inc
out
andl
jae
test
dec
dec
dec
test
jb
test
push
or
jmp
cmp
push
roll
pop
mov
rorb
add
mov
cmp
jno
data16
jo
lods
lods
jo
add
push
xchg
lds
add
insb
cmp
add
and
cmp
add
push
or
icebp
fs
pushf
sti
neg
xchg
cmp
dec
push
jbe
mov
insb
inc
fisttpll
shl
adc
fs
push
imul
je
hlt
mov
das
lods
pop
and
aaa
sub
dec
fists
scas
shlb
jns
ja
out
scas
pop
and
insl
jae
in
movb
loop
scas
sarl
icebp
js
push
sti
or
cltd
pop
push
aad
adc
dec
pop
jno
or
add
sbb
jmp
adc
xor
jo
rcrb
es
or
xchg
mov
rolb
arpl
cmp
dec
sbb
push
jmp
arpl
popf
or
repnz
mov
insb
or
movb
ja
lcall
or
je
mov
popf
push
cmp
js
ret
mov
bound
ss
fbld
dec
mov
add
adc
add
ffreep
or
push
nop
xchg
fsubp
dec
out
adc
outsl
push
scas
cmp
movsb
daa
jmp
push
adc
push
pop
dec
call
or
arpl
outsb
outsb
cmp
inc
sub
dec
cs
test
jns
inc
adc
shlb
lds
leave
sbb
cmpsb
jb
les
mov
inc
pushl
jb
outsl
sub
adc
add
js
dec
negl
lea
leave
pop
cmp
outsb
pop
adc
push
fcmovnb
mov
insw
nop
add
mov
mov
dec
xor
mov
je
lds
subl
dec
gs
inc
enter
cld
je
flds
outsb
xor
or
cmpsb
jo
addr16
inc
test
mov
outsl
cmp
popa
xchg
dec
ds
in
decb
jo
jmp
cld
inc
push
jns
call
in
push
data16
cs
lret
pop
mov
out
add
jnp
clc
inc
xor
aam
movsb
ss
xor
mov
mov
xchg
inc
inc
push
addl
testb
mov
add
dec
mov
hlt
dec
aam
xchg
xlat
inc
sub
outsb
sarl
pop
cli
mov
sub
stos
mov
and
mov
call
neg
mov
mov
imul
in
and
adcb
scas
ss
inc
in
push
mov
dec
inc
pop
sbb
rdtsc
xchg
xchg
lahf
push
sbbl
js
imul
adc
cwtl
sahf
fs
adc
push
sub
push
lcall
xchg
ds
test
mov
xchg
push
aaa
or
mov
dec
gs
and
clc
inc
ja
push
pop
outsb
sbb
ret
or
mov
fstps
xor
or
inc
or
xorb
ljmp
clc
lea
push
jne
add
loop
stos
push
cmc
pop
push
xor
inc
addr16
sub
xor
js
sub
adc
jb
loop
adc
and
test
cmp
push
mov
pushf
ja
add
xor
xor
pshufw
mov
adc
add
mov
push
mov
jecxz
imul
arpl
das
sbb
cli
inc
inc
movl
sbb
fdivrl
pop
pop
xchg
mov
out
add
inc
insl
push
adc
sbb
scas
add
fisttpl
test
push
add
lret
adc
popa
pop
call
adc
mov
int3
sbb
inc
or
test
les
xor
xor
loopne
adc
dec
je
add
xor
sbb
xor
sbb
ja
dec
sbb
adc
aad
mov
xor
enter
imul
dec
add
loop
add
push
fsubrs
scas
add
adc
and
cmp
ja
test
enter
pop
pop
dec
aam
out
lock
jae
push
sbb
leave
loop
dec
subb
push
aad
push
xchg
xchg
dec
mov
jecxz
jne
inc
outsl
jb
xor
in
sahf
sbb
lods
xor
or
xlat
mov
js
push
sbb
inc
mov
and
outsb
sbb
xor
cwtl
lods
lcall
and
inc
arpl
fldl
mov
xor
arpl
push
popf
jnp
or
rclb
pop
sbbl
jb
dec
xor
jmp
dec
dec
mov
aam
bound
xor
cmp
mov
xchg
push
in
add
daa
dec
rclb
enter
push
xorl
test
iret
fists
pop
jle
sub
adc
push
pop
popa
pop
lds
dec
js
test
inc
xchg
arpl
mov
ret
sahf
sub
pop
jbe
xchg
pop
mov
push
sub
add
je
ret
pop
repnz
pop
adc
xlat
rolb
inc
jmp
pop
sub
sbb
mov
cmp
dec
sub
or
or
push
in
push
imul
mov
push
pop
dec
lock
cmp
xlat
sub
sbb
cmp
cmp
push
daa
mov
pop
add
dec
inc
cli
xor
mov
std
add
inc
dec
cmp
mulb
sub
imul
std
sbb
push
addl
ljmp
in
addl
mov
sbb
xlat
int
roll
mov
into
inc
shrb
mov
jo
iret
xor
mov
out
adc
xor
cs
xchg
jp
enter
push
jo
mov
or
pop
mov
add
mov
js
fnstenv
cmp
cwtl
jo
dec
inc
xlat
bnd
jo
dec
dec
xor
xchg
out
mov
insb
push
mov
xor
or
js
mov
jnp
or
cmp
push
outsl
inc
sub
dec
jns
xchg
std
jle
push
xor
sbb
pop
sub
jo
mov
mov
xor
jbe
int3
fisubrl
orb
dec
js
ret
rcr
fiaddl
sbb
je
sub
push
popa
xor
mov
lret
aaa
icebp
sub
push
pusha
loopne
xor
out
adc
xor
pop
sbb
xor
sti
inc
mov
sarb
rcrl
mov
cltd
dec
push
repnz
or
out
jl
dec
dec
dec
jecxz
cmp
mov
xchg
sbb
pop
push
arpl
or
shlb
imul
xchg
loop
xor
xor
fstpt
pusha
mov
xor
gs
push
pop
xor
mov
iret
add
add
xchg
insb
mov
dec
sub
pop
inc
jbe
mov
mov
inc
test
dec
jle
xchg
js
push
push
aad
cltd
xor
adc
jbe
and
jle
leave
es
add
imul
clc
or
movb
cmp
clc
dec
push
out
sbb
shrl
fisttpll
imull
cmp
sub
ret
ja
addl
aaa
cmp
dec
inc
stc
fcom
inc
arpl
xor
fistl
roll
add
cmp
je
sbb
outsl
xor
scas
scas
dec
loopne
popf
mov
pushf
xor
pushf
pop
push
push
mov
dec
push
xor
inc
jae
ja
xor
push
push
cmp
xchg
fs
pop
rcpps
fistpll
jno
jbe
outsl
addr16
dec
xor
sub
js
sbb
mov
or
fcmovne
push
les
add
xorb
and
sub
add
shrb
add
push
iret
int3
mov
popw
push
add
sbb
push
loope
push
dec
shlb
xchg
in
fadds
pop
inc
adc
jb
test
out
xor
and
add
mov
jo
stos
ficoms
enter
and
or
shll
mov
movsb
and
pusha
add
xchg
add
pop
add
sbb
xchg
mov
sbb
call
xchg
xchg
inc
test
in
incb
insl
push
mov
pop
ss
stos
mov
pop
xchg
adc
mov
or
sti
inc
jge
rorl
cmp
add
aam
jmp
fcompl
sub
pop
adc
les
rcrl
aam
dec
mov
stos
cmp
xchg
adc
pop
and
inc
xlat
nop
cmp
and
sbb
cmpsb
and
cmp
dec
call
stos
add
imul
jp
or
dec
jnp
or
fnstsw
xchg
adc
mov
adc
xlat
in
iret
adc
int
sar
push
orl
sbb
pop
push
lds
and
test
loopne
push
inc
and
out
add
dec
mov
xor
movb
and
sbb
push
add
or
jl
fdivs
push
mul
stos
lods
scas
jge
adc
sbb
popf
subl
loopne
push
inc
das
mov
lds
adc
fs
mov
sub
fdivs
push
adc
ret
insl
mov
add
in
dec
sbb
jne
sub
mov
mov
push
fcoms
dec
jae
aas
data16
fcmovnbe
lret
movsl
stos
inc
shll
cld
movsl
nop
or
outsb
push
outsl
notb
mov
loopne
push
fsubp
pusha
inc
gs
jbe
aaa
push
add
incl
das
scas
and
popa
mov
mov
ret
or
mov
inc
mov
int
or
mov
in
cmp
xchg
dec
sub
stos
aas
or
mov
sahf
inc
shl
mov
fadds
sbb
jle
fldt
xor
rorl
mov
mov
subb
in
xchg
adc
imul
sub
test
movsl
ljmp
cs
add
mov
jne
cmc
dec
inc
push
pop
hlt
ja
js
sub
sbb
lret
push
arpl
sub
hlt
insb
inc
sbb
or
and
test
test
xchg
fs
hlt
ret
fsubs
add
loopne
mov
into
mov
mov
lds
fwait
sub
in
in
pop
mov
cltd
jnp
mov
test
stc
mov
das
ret
sbb
ds
dec
xchg
imul
sbb
jo
popa
cmp
test
or
loope
jg
mov
adc
sub
pusha
loopne
addr16
and
inc
push
je
ret
rcrl
enter
stos
adc
sbbb
mov
mov
mov
mov
sahf
mov
push
insl
jecxz
popa
pop
fadds
dec
nop
data16
pop
or
es
sbb
pop
mov
stc
mov
pop
sbb
jnp
lods
cmpl
dec
icebp
sub
sti
sbb
fs
xchg
loopne
add
ret
call
mov
mov
mov
add
ret
push
les
movsl
mov
sti
or
lahf
call
and
repz
push
data16
jnp
rclb
inc
cwtl
push
wbinvd
push
orl
push
pop
lahf
push
lret
xchg
push
mov
movzwl
xor
adc
popf
add
insl
ret
jmp
jbe
and
mov
in
mov
andl
js
sbb
imul
movb
dec
add
pop
mov
fs
add
inc
push
popa
loope
dec
ret
pop
inc
cmp
pop
fisttpl
cmp
mov
sub
jno
mov
pop
data16
cmp
mov
jo
xor
adc
jge
xchg
cs
fcomps
gs
push
ljmp
test
iret
rcrb
sbb
xor
test
sbb
test
sti
mov
sahf
mov
addr16
outsb
insb
loopne
mov
nop
push
outsl
data16
test
push
fsubrs
mov
cmpl
rol
mov
lret
dec
inc
xorb
mov
jecxz
xchg
push
mov
lahf
aad
and
or
mov
sub
mov
jno
pop
push
cs
or
xor
hlt
and
je
loopne
out
add
mov
ja
insb
pop
cmp
cltd
adc
mov
xor
add
and
jl
sti
inc
mov
fwait
dec
pop
inc
lock
or
push
jl
mov
cmc
je
push
insl
jbe
mov
test
dec
add
je
imul
fdivs
gs
sahf
dec
lea
aam
popa
mov
cltd
or
push
cs
or
inc
mov
out
and
inc
or
subl
lcall
cs
jns
and
mov
push
push
sbb
xor
push
and
loopne
insl
mov
movsb
mov
scas
dec
loopne
lods
cmpsb
lods
enter
test
mov
add
xor
je
or
dec
mov
pop
das
out
xchg
pusha
mov
scas
aas
imul
or
in
or
inc
dec
mov
rcrl
xchg
call
jnp
mov
std
mov
scas
ja
arpl
add
int3
sbb
lcall
fst
mov
sbb
add
sub
mov
push
pop
push
stos
adc
sbb
mov
adc
jbe
mov
repz
pop
cmp
negb
fsubr
icebp
push
mov
sbb
cmp
es
ja
inc
xlat
out
dec
mov
sarl
nop
lret
push
out
jle
ja
pop
add
nop
lds
pop
aam
inc
popa
mov
mov
shrd
movl
inc
dec
aas
aad
push
test
xor
test
mov
imul
adcb
insl
ja
mov
sub
mov
add
mov
xor
lea
cwtl
xchg
mov
pop
data16
mov
sbb
or
mov
xchg
fdivp
push
fbstp
inc
xor
inc
inc
pop
or
jle
leave
push
cmpsb
or
das
sahf
orb
mov
call
sub
pop
adc
adc
inc
pop
arpl
cmc
inc
jle
fidivl
cmpsb
dec
aad
pop
sub
inc
fisttpl
jne
pop
int3
call
test
mov
scas
call
fcoms
inc
jb
fcmovnbe
das
fmull
incb
test
enter
lahf
pop
dec
pop
arpl
popa
lods
into
add
leave
lcall
ficoms
fisttps
lods
repnz
sbb
mov
inc
xchg
testl
das
adc
outsb
add
ret
push
rcrb
dec
or
vfrczss
sar
test
subb
cltd
mov
shrb
fstl
pop
sbb
dec
mov
bound
popl
pop
mov
aaa
mov
jp,pt
loop
jb
xor
jnp
shll
out
xchg
and
jb
mov
pop
jo
xchg
jp
push
sub
add
inc
and
shll
pop
jne
enter
and
mov
test
test
call
jmp
add
out
lahf
mov
sbb
jns
jmp
data16
dec
pop
and
add
hlt
push
mov
into
mov
arpl
pop
and
xor
shl
addr16
jnp
cs
rorb
aad
mov
cmc
cmp
cmp
in
sbb
pop
cmp
lds
mov
insb
cmp
adc
movsl
dec
gs
inc
inc
lret
or
std
aam
mov
lahf
aam
js
loope
sbb
push
jp
mov
mov
outsb
sub
lods
add
imul
inc
or
imul
cld
or
mov
push
inc
xchg
cmp
add
xor
popa
ja
imul
das
insb
inc
xchg
andb
fistps
mov
xor
or
adc
insl
mov
pop
imul
mov
pop
mov
ja
dec
call
add
test
pop
mov
mov
ret
adc
inc
xor
inc
in
fcomp
sar
xor
popa
xor
cmp
les
sub
mov
out
inc
sbb
imul
add
sbb
adc
fdivrs
push
aaa
inc
jmp
push
fidivs
mov
dec
je
jns
outsb
adc
dec
jp
push
cmovg
outsb
movsl
sbb
mov
xor
mov
loopne
test
dec
sbb
mov
and
ljmp
test
jg
mov
and
stos
out
dec
xor
pop
sub
push
push
mov
push
and
in
sub
mov
pop
clc
pop
mov
mov
mov
add
cmp
add
popf
and
shlb
movsb
fisttpll
out
int
test
add
aas
bound
insb
dec
adc
scas
pop
xchg
or
mov
xchg
bound
ds
sub
mov
insl
pop
call
inc
dec
mov
pusha
cmp
inc
pop
add
push
inc
mov
pop
xchg
sbb
and
lock
decl
mov
add
inc
pop
call
dec
and
push
pop
lret
and
sub
test
or
lock
sub
fstl
mov
sub
ret
movsl
or
pop
sub
stos
dec
xor
cmp
xchg
pop
mov
pop
pusha
sbb
mov
test
mov
mov
sub
add
pop
test
push
add
cmp
imul
cmp
xor
sub
popa
xchg
cmp
fs
lret
fistpl
loopne
sbb
mov
lea
fistl
push
or
inc
push
push
mov
jl
xchg
mov
inc
jo
cmpsl
mov
les
jp
pop
fsubr
mov
sbb
push
incb
fwait
lea
inc
test
or
in
inc
or
shll
xor
sub
dec
enter
data16
xor
sbb
inc
stos
test
ret
mov
dec
inc
test
dec
mov
inc
adc
mov
or
ret
add
neg
push
shrb
push
pop
mov
xchg
push
imul
aad
adc
sti
jne
mov
xchg
inc
dec
pop
jmp
cmp
mov
jo
ss
ds
lea
and
fs
pop
add
in
inc
pop
xchg
jne
das
inc
dec
rclb
mov
cwtl
mov
push
test
scas
mov
mov
icebp
mov
test
shll
pop
std
inc
dec
dec
push
je
aas
mov
pop
dec
sub
lret
mov
and
pop
mov
out
mov
add
les
pop
js
mov
inc
cmc
outsl
outsb
loopne
das
repz
aam
push
sub
mov
pop
dec
cs
add
add
andl
adc
sbb
fistpll
add
es
mov
dec
mov
jbe
ljmp
loope
nop
fiaddl
and
xlat
adc
adc
js
inc
je
or
bound
push
outsb
pop
icebp
jbe
in
ljmp
sbb
orl
test
and
pop
loop
out
mov
jno
ja
mov
pop
cmpb
pop
rorl
ljmp
pop
sbb
in
add
xchg
insl
push
test
xor
xor
mov
xlat
push
mov
and
jae
lea
inc
xlat
das
sbb
add
inc
es
mov
add
jno
faddp
mov
cmp
add
incl
xchg
dec
sahf
shl
mov
aas
aam
mov
in
jge
jle
dec
and
push
mov
mov
and
dec
imul
add
push
or
lock
outsl
cs
lock
clc
push
test
jae
mov
jmp
jns
sub
xor
and
mov
pop
adc
fsubrl
nop
out
ret
fs
sbb
js
cwtl
das
in
inc
xchg
loopne
outsl
decb
fsubs
mov
push
pop
mov
mov
leave
jp
rcl
inc
mov
lret
push
jge
push
jg
xchg
push
adc
push
adc
sub
xchg
cld
sbb
cld
mov
pop
clc
adc
adc
push
push
jge
add
setl
loope
sahf
insb
mov
in
fcmovne
adc
jne
or
lods
push
out
and
push
jae
in
cmpb
outsb
sbb
xor
outsl
fisubl
mov
enter
inc
xchg
push
or
dec
xor
test
fs
test
xchg
push
int3
sub
fisttpl
sbbb
fidivrl
and
push
dec
pop
push
mov
test
xchg
push
push
sbb
mov
insb
mov
push
sub
pop
xchg
test
jb
mov
into
jge
sub
adc
js
mov
lods
add
movsb
imul
icebp
lods
cmc
cmc
test
mov
pushf
mov
out
sbb
cmp
sub
xor
mov
jmp
cmp
cmc
dec
push
aaa
inc
fcmovnbe
mov
ds
adc
fildl
xor
pop
sub
mov
fdivs
shrl
jmp
fisubrs
push
testl
push
imul
push
ficomps
mov
out
mov
scas
imul
leave
mov
cmp
sub
ror
rcll
loop
iret
pop
pop
ss
and
sbb
inc
dec
xchg
add
cmp
pop
int3
push
test
imul
scas
mov
pop
add
push
nop
or
add
mov
adc
push
inc
push
pop
divb
mov
mov
repz
push
lds
jbe
pushf
cld
dec
and
popa
popa
imul
das
pop
clc
fsubs
sub
mov
fidivrs
xor
arpl
inc
stos
roll
dec
add
int
mov
fsubrl
adc
adc
repz
mov
or
adc
outsb
js
jg
test
mov
mov
mov
jmp
xor
sub
addb
pop
fcmovbe
ret
in
hlt
das
mov
shl
jo
xchg
fdivrp
add
dec
cmp
lock
sarb
mov
jo
adc
mov
push
je
cmp
cmp
mov
mov
cmpsb
pop
cmp
sub
addb
outsl
mov
or
push
jl
and
xor
insl
out
sub
mov
pop
push
xchg
je
roll
adc
or
mov
stos
lea
mov
push
dec
rcrb
inc
jmp
insl
pop
mov
push
xchg
test
dec
mov
icebp
sbb
cmc
fmuls
adc
jno
fst
sbb
ret
fnstsw
out
mov
pop
sbb
inc
inc
sbb
push
js
sub
add
push
popa
dec
and
ficoms
das
sti
imul
xor
mov
push
mov
mov
pop
in
ficomps
daa
pop
jp
outsb
rcll
addr16
icebp
sbb
push
out
adc
ljmp
adc
std
mov
or
loopne
jnp
icebp
aam
aaa
lahf
rolb
lcall
cmpsb
xor
cmp
scas
es
hlt
add
jmp
push
testb
fbstp
cmp
push
jl
sbb
add
dec
jmp
mov
int
pop
xchg
jbe
movsl
jp
ljmp
shrb
sbb
mov
sahf
pop
icebp
xchg
mov
and
jnp
and
loope
mov
sub
fucomip
mov
sbb
jg
sbb
mov
pop
roll
es
xor
mov
cs
push
add
cld
fisubl
popf
add
shrl
xor
es
cli
sbb
aam
shrb
jmp
sub
repz
fldenv
out
aam
mov
pusha
pop
out
popf
and
insl
ss
lods
xor
adc
ss
dec
xor
adc
mov
les
jge
push
push
xchg
idivl
push
mov
push
in
inc
flds
xchg
lahf
dec
jne
pop
cmp
fistps
pop
lods
and
clc
mov
xchg
pop
les
fistpll
in
inc
mov
xor
sbb
bound
fisubrs
out
inc
in
sub
in
mov
pop
mov
inc
out
xchg
cs
mov
sbb
sub
add
push
add
enter
or
test
add
dec
in
push
cmp
dec
push
scas
add
daa
pop
push
insl
bound
incb
popf
inc
push
sbb
adc
lods
push
mov
sbbl
xchg
rcll
jmp
out
loop
xchg
pop
pop
loopne
dec
cld
rolb
dec
stc
xchg
gs
shll
lods
mov
mov
loope
fcomi
jl
and
add
push
mov
adc
push
movsb
mov
mov
jecxz
push
cmc
fwait
xchg
xchg
sub
dec
lock
enter
cmp
mov
adc
insl
add
dec
es
imul
std
add
and
pop
dec
movsb
adc
pop
pop
repz
mov
sahf
sub
hlt
repz
jp
jo
fldt
sbb
stos
movsb
xorl
ss
xchg
add
jge
clc
arpl
fdivs
jae
jle
jbe
jae
mov
jae
mov
sub
ficomps
jecxz
sub
inc
dec
int3
xor
pop
test
mov
sub
rcrl
fildl
mov
dec
test
cli
push
push
cmp
sbb
mov
loope
outsb
shrb
arpl
mov
jbe
pop
inc
add
mov
sbb
stos
lea
inc
xlat
adcl
and
and
mov
add
loopne
push
ret
in
pop
sub
cmc
cmp
sahf
aas
or
inc
jle
mov
lods
in
ret
test
es
faddl
xor
or
in
xchg
sbb
pop
mov
mov
inc
xorl
ds
cwtl
cmp
les
xchg
xchg
subl
jge
add
call
jp
cs
stc
or
jecxz
push
test
cs
sub
cmp
or
push
andl
mov
loopne
pop
les
loope
cmc
insl
jmp
jle
mov
xchg
call
bound
pop
jg
das
or
push
inc
fbstp
out
adc
dec
cmc
cmpsl
aaa
xchg
push
inc
das
jl
addl
cmp
adc
stos
mov
aam
lea
dec
aam
loopne
or
int
ja
cmp
aam
movsb
or
cmp
sbb
es
cmpsb
imul
sub
jp
mov
and
dec
adc
dec
mov
lret
clc
test
test
mov
add
int
pop
add
jne
cmp
xor
outsl
pop
push
lods
mov
mov
or
pop
sbb
ja
pop
push
dec
movsl
mov
mov
push
lahf
icebp
dec
sbbl
pop
mov
xlat
in
dec
ljmp
adc
push
insb
shrb
loopne
int
mov
pop
sub
outsl
dec
lods
cltd
sub
mov
orl
shlb
cld
testb
test
movsl
mov
adc
cmpsb
push
sti
lods
enter
or
mov
mov
mov
pop
sbb
push
jle
imul
fsubs
popf
stc
outsb
mov
cmpb
xchg
hlt
push
mov
shlb
js
mov
shlb
cmpsl
repnz
xchg
xorb
or
lds
jb
push
and
clc
test
stc
clc
rorb
jg
push
std
mov
and
push
mov
add
or
ss
nop
mov
out
xchg
sbb
dec
sbb
cmp
test
loopne
adcl
inc
sub
rcrb
loopne
in
fisubrl
decl
push
mov
xchg
dec
es
aaa
mov
fwait
gs
and
xchg
out
mov
xchg
cwtl
push
je
xor
inc
leave
leave
bound
add
push
pop
in
mov
add
mulb
lods
rcll
pop
icebp
mov
mov
push
mov
addr16
loop
aaa
ss
dec
scas
in
adc
movsb
nop
dec
cltd
mov
sbb
ss
in
das
mov
ljmp
outsb
mov
cli
jmp
cmp
inc
adc
cmp
std
lahf
aas
test
jae
adc
xchg
das
push
or
jl
cmc
sahf
roll
cmpsl
jnp
fildl
push
inc
pop
jge
push
jmp
cwtl
lret
mov
mov
and
xor
aaa
cmp
xacquire
popf
ljmp
add
fcmovne
xor
cmp
mov
lods
pop
lea
and
outsb
mov
mov
push
cmp
mov
loope
cmp
mov
xchg
movsl
dec
mov
jne
xor
or
inc
xor
sbb
lods
ja
cmpsl
pop
mov
and
sub
pusha
es
ja
outsl
outsl
add
push
aas
cmpl
jae
push
push
push
fnstenv
in
xor
mov
xchg
lods
xchg
mov
ds
adc
inc
ss
or
sub
inc
cwtl
lods
adc
fdiv
sub
jg
adc
mov
or
or
cmp
xor
cs
cmp
pop
icebp
push
les
mov
adcl
lock
jle
mov
imul
push
cmp
jnp
je
iret
data16
dec
dec
mov
daa
xor
adc
inc
sti
inc
mov
fcomp
sub
filds
jne
xchg
or
xchg
inc
pushf
mul
pop
insl
call
mov
mov
inc
xchg
sbb
push
pop
in
add
pushf
mov
cli
mov
mov
inc
mov
add
adc
pop
xor
test
xlat
inc
sub
bound
mov
push
ss
repnz
cmp
push
inc
adc
mov
pop
in
out
dec
rorb
mov
dec
mov
mov
mov
adc
mov
je
ret
add
aam
movsb
mov
loopne
out
pusha
sar
fildll
inc
xor
pop
inc
ljmp
push
lock
dec
mov
jnp
inc
loope
cltd
xchg
hlt
inc
cmpsl
stos
sub
pop
clc
add
cmp
rol
jl
push
int3
mov
loop
cmc
test
inc
stc
dec
fwait
mov
mov
and
add
sbb
cmp
out
push
dec
es
xchg
xor
or
call
stos
dec
xchg
arpl
pop
fsubrs
fwait
jp
fnstcw
or
mov
mov
sub
push
dec
add
sbb
jge
jecxz
insb
dec
and
int3
test
mov
aam
gs
mull
adc
mov
inc
xchg
dec
aam
push
out
xchg
fwait
arpl
xor
cmpsb
mov
pop
ljmp
out
stos
mov
inc
inc
add
int3
push
and
sub
push
outsb
ja
lods
in
sub
fistpl
mov
nop
scas
aaa
stos
mov
stc
push
movsb
push
mov
fnsave
aas
fwait
cli
xchg
leave
sub
push
mov
mov
lds
xlat
mov
sbb
jb
movsb
pop
inc
jecxz
adc
xchg
icebp
iret
pop
jb
aaa
les
cmpxchg
call
dec
pop
or
push
call
fbstp
adc
adc
das
pushf
rcll
call
push
imul
fucomip
xchg
stos
fisttpl
mov
pushf
mov
imul
aad
and
pop
mov
xchg
pop
push
insb
mov
testl
adc
sbb
mov
jno
shrb
rcl
mov
or
pop
aam
js
jo
pop
jp
pusha
lods
inc
ljmp
bound
movsb
sub
test
and
sti
mov
xchg
push
lds
sub
lret
mov
fwait
jg
fdivs
mov
jp
loopne
cmp
fcmovnbe
mov
xchg
jge
mov
inc
inc
cmp
icebp
xchg
fiadds
mov
xchg
adc
xchg
andb
pop
xchg
xchg
push
mov
outsl
and
pop
arpl
daa
pop
call
in
scas
xor
dec
nop
or
push
xor
jge
mov
push
enter
cmp
ficoms
add
notb
sti
je
mov
and
sahf
subl
adc
inc
mov
mov
call
scas
fstl
imul
fbstp
adc
bound
and
or
insb
out
sub
mov
sub
lret
lods
es
lock
pusha
ret
in
push
xor
fistpl
xor
xor
fwait
pusha
or
les
sbb
subb
pop
and
add
rcr
aam
pushl
pop
hlt
dec
std
xchg
pop
push
jne
xchg
imul
outsb
adc
adc
das
adc
push
enter
int3
push
or
outsl
pop
cs
pop
pop
ds
movsl
lods
mov
shr
fistpll
jle
sar
xchg
clc
adc
pop
stc
movsb
cmp
sti
inc
loope
dec
xchg
fists
jb
cmp
lods
push
in
xchg
dec
sub
hlt
popf
sbb
or
adc
mov
mov
or
push
cmpl
push
pop
cmp
adc
int
mov
jb
stos
push
pop
inc
xchg
outsb
in
mov
test
nop
scas
mov
sbb
test
fimull
sub
inc
pop
and
fisubrl
ffreep
notb
mov
je
mov
or
lods
push
rorb
fnstenv
pushf
mov
jo
insb
leave
aaa
inc
sbb
aas
sti
push
push
cmp
and
adc
mov
mov
mov
push
pusha
and
test
dec
xchg
lret
mov
inc
cmpsl
sub
notl
xchg
bswap
or
pusha
outsb
bound
jg
mov
xor
xchg
inc
cmp
testl
push
fwait
lret
mov
mov
lock
push
sub
mov
aam
add
mov
bound
repz
shrl
out
cmp
nop
push
push
je
jp
jno
inc
sar
das
sbb
push
adc
add
inc
jo
sahf
fstpl
inc
inc
push
imul
ret
adc
xor
les
cmp
aas
push
mov
xor
popa
inc
pop
pop
xor
shlb
mov
mov
dec
cmp
cwtl
dec
fwait
iret
inc
jo
loopne
jo
jne
adc
lret
adc
push
fiaddl
xlat
mov
fcoms
das
call
cwtl
push
in
incb
dec
addr16
addr16
insl
scas
enter
int
decb
je
jne
fs
adc
dec
bound
lods
sub
dec
inc
fs
xor
leave
test
xchg
inc
je
loop
loop
cmp
scas
lds
loopne
dec
cmp
mov
jne
dec
jbe
inc
and
mov
sub
mov
iret
ficoml
mov
fcoms
lret
add
jo
adc
and
push
pop
mov
mov
jbe
jne
in
push
jnp
push
in
in
mov
push
in
or
adc
dec
sarl
daa
and
push
xchg
dec
daa
jne
rorl
inc
hlt
gs
ss
out
and
inc
scas
cmp
xor
xchg
fcoms
or
bound
scas
inc
aas
pushf
mov
xor
inc
mov
push
dec
data16
ficoms
sahf
jnp
pop
and
std
add
dec
subb
imulb
lcall
fwait
dec
std
fcmovu
icebp
pop
out
sbb
ja
loope
in
xchg
les
mov
aaa
jg
fcomip
rcrl
movl
mov
xor
subl
pop
les
add
pushf
in
push
data16
jg
jle
add
repz
sub
dec
clc
insl
adc
fimuls
shlb
sbb
mov
jl
xor
sbb
pop
inc
mov
inc
add
push
pop
jmp
mov
add
popa
inc
ss
leave
sub
add
pop
incl
adc
adc
add
adc
out
mov
or
add
sbb
mov
and
add
sub
test
adc
and
sub
push
and
mov
cmp
and
orb
sub
add
fcmovnu
adc
and
dec
or
and
xlat
fisubrl
adc
daa
adc
popa
and
pusha
jae
imul
pop
insl
popa
and
fstpl
adc
jae
mov
jae
or
inc
mov
cltd
and
fistpl
pop
adc
xor
fistpl
in
test
es
or
add
pop
imul
and
inc
pop
andb
aaa
pop
fistpl
sbb
stos
xchg
pop
jae
mov
pop
insb
fsubrl
xchg
sub
int
sbbl
add
mov
adc
fsubrp
dec
inc
pop
fistpl
sbb
xchg
test
lods
in
outsb
and
sbb
mov
pop
jmp
ss
inc
pop
fistpl
dec
imul
ret
jae
jae
inc
add
insl
sub
nop
mov
mov
mov
and
mov
and
adc
sbb
adc
js
and
scas
mov
cmp
xor
add
mov
insl
sub
mov
mov
add
push
imul
gs
gs
xor
cs
insb
cmp
sbb
adc
and
out
cmpsl
pop
inc
data16
addl
inc
xchg
cmp
add
push
inc
aas
push
imul
outsb
insb
outsl
arpl
jg
imul
jb
je
arpl
add
push
gs
imul
adc
jae
adc
gs
gs
psubusb
outsl
jg
addr16
popa
imul
arpl
outsl
jb
mov
popa
jae
jb
or
jo
jae
in
mov
sti
outsl
inc
dec
push
dec
adc
insl
jo
push
jb
popa
insl
gs
inc
adc
insb
popa
bound
or
cld
fs
outsl
outsb
jae
dec
sub
popa
jb
in
add
xor
xor
imul
push
mov
insb
xorb
xor
ja
dec
jae
xor
stos
jb
lret
mull
jo
jb
xor
jns
imul
lret
jae
inc
or
inc
sbb
or
mov
inc
cmpsl
push
fisubl
jae
sbb
insl
fisttpl
adc
or
frstor
push
rcpps
fisttpll
insl
cmovno
or
outsb
je
ret
test
inc
gs
jne
je
dec
xor
inc
jne
sbb
push
push
jns
pop
gs
and
insb
pop
xchg
push
xchg
fcmovb
mov
push
push
imul
rcrb
bound
and
push
fwait
mov
adc
dec
cli
push
dec
outsl
sbb
and
inc
adc
or
in
imul
inc
jns
mov
mov
jl
imul
inc
je
or
pop
inc
dec
dec
gs
sub
mov
scas
gs
outsl
dec
xor
sbb
and
cmp
sub
jnp
sub
pop
sub
dec
pop
dec
push
mov
fs
outsb
popf
xor
mov
fstps
lea
outsb
jne
ret
ss
outsl
jne
jecxz
inc
adc
fs
adcl
inc
push
fsubrl
gs
jl
sub
push
insb
inc
jnp
cmp
fs
or
inc
punpckhbw
aam
fldt
cmp
adc
addr16
push
lods
test
mov
leave
cli
push
sbb
and
add
insb
add
mov
mov
lea
fiadds
nop
xor
js
dec
int
lea
sbb
jmp
outsb
data16
xor
sti
pop
cwtl
scas
je
pop
ds
lock
outsl
stos
or
push
adc
jo
neg
mov
cmp
or
ja
dec
dec
sbb
cvtps2pi
add
arpl
or
xor
pop
jmp
dec
adc
mov
inc
addr16
inc
dec
dec
inc
imul
ds
jns
out
inc
add
aaa
data16
cmp
loopne
pop
and
dec
cmp
in
nop
pop
inc
dec
jo
dec
cmp
push
ljmp
notb
jbe
gs
jnp
cwtl
jmp
push
push
xor
gs
cltd
xor
inc
push
inc
lods
daa
loope
xor
int3
jo
jo
push
jns
es
ret
inc
mov
inc
outsl
cmc
dec
jns
xor
dec
dec
fs
cmp
shlb
pop
sarl
dec
aam
inc
ret
cs
fiaddl
insl
push
addr16
and
push
jno
mov
mov
dec
dec
imul
inc
pop
ja
jno
push
xlat
pop
jbe
sti
insb
je
insl
outsl
jbe
outsl
lcall
shl
mov
jb
push
sbb
add
inc
jp
xor
aaa
mov
sbb
outsl
or
lods
bound
mov
jbe
inc
fcoml
addr16
jns
pop
stos
push
dec
jnp
pusha
imul
sbb
or
mov
mov
cmc
aad
mov
pop
inc
push
jne
mov
imul
jl
ror
pop
cmpsl
dec
pop
inc
jae
jnp
in
lds
push
cmp
jns
sbb
in
push
push
inc
or
push
int
jae
push
pusha
push
pop
jae
mov
add
jae
push
mov
xor
test
ss
inc
sti
dec
mov
fstpt
push
jae
mov
jb
xchg
push
fcmovne
pop
addr16
mov
jg
lahf
mov
mov
pop
jge
in
sub
outsl
inc
adc
arpl
add
cmp
mov
sub
mov
mov
pop
dec
dec
inc
push
inc
inc
test
inc
push
ja
lods
lds
mov
dec
push
lcall
dec
popf
sbb
imul
je
pop
test
xor
popa
push
addr16
jp
rorb
xlat
sbb
inc
outsb
jb
adc
sub
insb
sub
das
test
pop
fwait
les
cmpb
and
inc
dec
cmp
and
add
sbb
ficompl
adc
std
jne
inc
jne
adc
in
subb
sbb
pop
mov
inc
pop
fs
je
add
rclb
xchg
xchg
popf
fidivs
movlps
adc
mov
adc
xchg
and
and
int3
icebp
dec
mov
imul
add
inc
dec
xchg
sarb
pop
jmp
jns
cmpsl
pusha
add
mov
and
sbb
jo
or
lods
out
xchg
mov
insb
and
pop
mov
sbb
arpl
ss
aam
or
pop
enter
leave
fisubs
pop
xor
js
jp
dec
adc
pop
mov
inc
jne
cs
lret
dec
outsl
pop
cmp
jnp
pop
pushf
faddl
push
scas
fst
rorb
imul
pop
inc
add
popa
pop
stos
pop
call
inc
adc
inc
mov
adc
inc
ficomps
mov
dec
lea
inc
fucomi
sbb
dec
sub
cmp
cltd
cmp
cmp
shrb
test
fbld
cmp
lods
mov
imul
pop
pop
and
dec
repz
jmp
loopne
pop
inc
jae
bound
lahf
push
jbe
inc
je
adcb
outsb
pop
add
mov
sbb
jbe
ljmp
pop
data16
xor
fsubl
cmpsl
inc
in
outsl
mov
pop
jge
jae
ja
scas
push
inc
add
pop
jb
mov
ret
push
and
dec
bound
lcall
add
or
xchg
sub
push
ret
push
adc
push
xchg
sbb
data16
jl
or
xor
imul
cmp
sbb
in
mov
andl
adc
jae
sbb
insb
rclb
push
dec
push
cmp
ds
jbe
or
push
test
movsl
aad
pop
test
or
into
bound
mov
inc
adc
imul
fs
adc
mov
mov
or
out
in
aam
insl
jns
push
jns
mov
or
or
jae
sbb
cwtl
test
or
inc
loop
sbb
push
push
les
ja
adc
push
push
xadd
push
push
xor
das
adc
adc
and
and
adc
jae
sbb
int3
es
hlt
and
xor
insl
xchg
push
xchg
in
fadds
push
inc
add
sub
or
pop
imul
loopne
sidtl
add
fcomip
mov
stc
add
pop
jae
inc
jl
or
add
nop
adc
lea
push
xor
mov
mov
pop
push
add
and
sbb
adcb
add
fstps
out
xor
nop
jmp
push
mov
pusha
cmpsl
xor
daa
aaa
push
jbe
add
flds
jnp
xlat
pop
inc
cs
dec
loope
lret
daa
rorb
arpl
pop
fldenv
fwait
andb
dec
sbb
add
testl
add
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jle
mov
jp
push
adc
lahf
xchg
push
jns
sbb
repnz
dec
jge
xor
fisubs
mov
sub
ja
mov
movsl
mov
out
inc
bndstx
sub
cltd
pop
lods
ds
stc
adcb
and
pop
xchg
push
out
pop
mov
jns
push
in
sti
cwtl
inc
mov
hlt
xlat
dec
lcall
loop
clc
fldl
shlb
adc
or
mov
mov
call
pop
cmp
sbb
cwtl
and
pushf
adc
add
mov
and
divl
in
fiadds
js
cmpsb
and
bswap
mov
repz
mov
sub
add
adc
popa
cmp
icebp
add
shlb
aad
xor
call
xchg
jae
sti
xchg
in
mov
out
jnp
cli
inc
pop
mov
lret
or
daa
fs
fsub
imul
aas
mov
nop
xor
dec
and
iret
insb
ljmp
divl
out
xor
mov
or
fsubrs
cmp
or
cmp
adc
test
mov
dec
xor
out
fcmovne
jp
jle
xchg
jmp
andl
push
imul
jp
adc
sbb
xorl
dec
mov
sahf
lods
stc
jne
or
xor
pop
or
fcoms
dec
and
mov
cltd
pop
scas
nop
in
jno
push
pop
push
aaa
add
xchg
push
xchg
sbb
xchg
jmp
xor
sub
add
push
push
inc
mov
movsb
sti
std
outsl
adc
out
dec
sub
cmpsl
ret
popf
jge
hlt
or
aam
fldcw
sub
cmp
push
inc
adc
mov
lods
and
xchg
ja
mov
nop
into
test
mov
testl
or
.byte
.byte
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
rolb
cmp
add
pop
addb
cmp
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
jno
add
add
jno
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
je
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
push
add
ja
add
and
push
add
imul
add
add
data16
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
push
add
ja
add
and
dec
add
add
add
add
and
inc
add
outsb
add
js
insb
add
jo
jno
insl
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
insb
add
popa
add
add
ja
add
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
push
add
ja
add
and
push
add
imul
and
xor
xor
xor
xor
sub
add
add
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
push
add
ja
add
add
js
add
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
push
add
ja
add
and
dec
add
add
add
add
and
inc
add
outsb
add
js
insb
add
jo
jno
insl
add
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
lds
add
add
xor
les
add
add
rol
add
dec
lds
add
les
add
add
loopne
add
arpl
add
call
add
add
add
lock
add
add
clc
les
add
lds
add
lds
add
lds
add
lds
add
add
rol
add
lds
add
lds
add
lds
add
lds
add
movb
add
add
sbb
add
add
add
and
add
add
add
xor
add
add
add
movb
add
add
dec
movb
add
add
pop
movb
add
add
pusha
movb
add
add
jb
add
add
add
xchg
add
add
add
xchg
movb
add
add
cmpsb
movb
add
add
mov
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
fs
xor
cs
insb
add
push
imul
insl
jae
insl
jae
fs
insb
add
fs
insb
cs
insb
add
fs
jo
cs
insb
add
xor
cs
insb
add
jae
jo
xor
cs
insb
add
je
jo
jo
cs
insb
add
insb
insl
outsl
outsb
cs
insb
add
gs
outsb
jbe
fs
insb
add
outsb
insl
insl
cs
insb
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
jb
outsb
je
insb
addr16
add
add
je
arpl
popa
bound
add
push
gs
arpl
dec
add
add
dec
jo
outsb
push
imul
inc
jae
popa
imul
outsb
push
add
dec
insb
gs
jne
add
push
popa
jae
outsb
jne
inc
outsb
je
imul
push
gs
jo
jo
outsb
dec
outsb
inc
imul
outsl
jo
push
je
dec
gs
gs
jae
push
outsl
insb
imul
insl
imul
add
add
push
inc
jb
gs
gs
outsl
jb
