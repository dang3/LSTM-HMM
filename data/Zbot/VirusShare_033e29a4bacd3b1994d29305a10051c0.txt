pop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
add
add
shlb
pop
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
mov
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
sub
cmp
jne
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
das
inc
push
pop
and
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
test
clc
and
add
add
mov
and
add
add
dec
and
add
add
or
add
cmp
add
mov
add
cmpsb
and
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
and
add
add
add
and
add
and
add
add
add
stos
and
add
add
mov
add
or
add
xor
add
push
and
add
add
shlb
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
and
add
add
mov
and
add
add
dec
and
add
add
or
add
cmp
add
mov
add
cmpsb
and
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
and
add
add
add
and
add
and
add
add
add
stos
and
add
add
mov
add
or
add
xor
add
push
and
add
add
shlb
add
add
add
and
add
and
add
and
add
and
add
add
add
add
imul
jb
je
arpl
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
roll
dec
gs
jo
jb
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
je
imul
push
add
aam
inc
gs
jb
jbe
push
jns
gs
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
fs
je
insl
push
add
insb
jae
jb
outsb
inc
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
add
gs
inc
imul
insb
jae
gs
popa
insb
jne
add
gs
sti
add
insb
gs
jae
dec
jne
gs
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
add
je
outsl
imul
jbe
jae
add
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
imul
jae
inc
outsl
jb
push
dec
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsb
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jge
add
jnp
lods
lods
stos
add
cmpsl
cmpsb
push
mov
mov
mov
lret
int
into
rcl
in
rcl
shl
ror
iret
hlt
into
int
hlt
enter
enter
mov
mov
mov
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
out
lret
rcl
sar
xlat
fcom
std
fcom
fcom
aam
rcl
sar
into
into
int3
aad
ror
iret
inc
std
mov
mov
lods
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
call
rcl
aad
aad
xlat
fcomp
call
fcomp
call
aam
dec
into
into
dec
int
call
aad
dec
int3
into
inc
sarl
mov
scas
scas
std
cmpsb
test
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
enter
int3
call
rcl
call
fcom
fcom
fdivr
aad
dec
into
int3
dec
lret
int
int
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
bound
push
push
bound
fs
push
das
push
or
sbb
aaa
cmp
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
leave
leave
call
rcl
call
aam
aam
aam
rcl
sar
leave
leave
inc
inc
ret
mov
mov
ljmp
movsl
movsb
popf
pushf
popf
xchg
xchg
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jle
jge
jge
jg
jno
jno
popa
arpl
dec
push
push
xchg
cmp
inc
mov
jo
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
lret
inc
leave
leave
inc
mov
mov
ljmp
mov
cltd
call
xchg
xchg
xchg
cwtl
xchg
cltd
fwait
fwait
in
addb
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
jp
fcoms
cmp
jl
idivb
jmp
outsb
outsb
out
push
data16
jae
jg
jle
jp
js
fs
inc
inc
cmp
sbb
sbb
movups
stos
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
test
pushf
sahf
sahf
decl
xchg
decl
xchg
xchg
mov
mov
xchg
mov
jp
jp
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
pop
push
cmpl
sahf
fwait
popf
in
mov
incl
xchg
std
mov
jle
jb
jo
jae
jae
jle
jg
addl
pushw
cmp
cmp
and
and
jle
jle
lcall
shrb
lods
lods
sti
lods
stos
lods
lods
lods
lods
test
movsl
mov
xchg
xchg
xchg
decl
jle
jns
jns
jl
jnp
xchg
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
femms
xor
inc
dec
insl
insl
imul
test
lcall
out
fwait
fwait
cltd
stc
nop
xchg
std
mov
xchg
mov
mov
mov
cltd
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
cmpsl
lods
add
pop
adc
test
mov
incl
test
decb
xchg
xchg
sahf
popf
popf
std
mov
mov
xchg
in
xchg
xchg
in
xchg
push
jne
or
add
or
or
daa
es
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
lea
xchg
call
mov
cmpsb
ljmp
test
scas
mov
xchg
test
std
les
mov
ljmp
mov
add
pop
pop
adc
scas
mov
ret
mov
pushf
decl
mov
decl
xchg
xchg
xchg
xchg
xchg
popf
sahf
pushf
movsl
movsb
movsl
test
test
movsb
movsb
movsb
negl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
arpl
jae
mov
lahf
orl
int
xchg
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
ss
mov
js
mov
movsb
mov
mov
mov
mov
mov
add
mov
pop
pop
adc
mov
jmp
mov
call
xchg
xchg
call
xchg
cltd
cltd
cltd
fwait
fwait
popf
sahf
sahf
sahf
mov
movsb
movsl
stc
cltd
cltd
cltd
out
nop
xchg
nop
xchg
les
cwtl
cltd
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
jb
cltd
addr16
mov
push
jle
stos
inc
jge
mov
jnp
mov
je
mov
insl
ljmp
adc
lods
or
ljmp
jge
mov
mov
stos
pushf
movsb
movsl
movsl
and
add
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
pushf
lcall
popf
popf
lcall
xchg
xchg
decl
cwtl
xchg
call
xchg
cltd
cld
cltd
cwtl
pushf
stc
sahf
fwait
sahf
stc
mov
mov
xchg
insb
mov
xchg
pop
jg
xchg
dec
jp
cltd
cmp
cltd
sub
popf
and
sahf
sbb
movsb
adc
jmp
adc
stos
packuswb
lods
adc
scas
adc
mov
imul
mov
insb
mov
fwait
scas
mov
lods
scas
scas
mov
movsb
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
popf
lcall
mov
movsb
jmp
cwtl
xchg
decl
mov
mov
mov
xchg
js
fwait
jno
cltd
bound
call
sub
decl
adc
nop
or
call
add
cltd
add
sahf
pop
pop
ljmp
sbb
mov
outsb
pushl
pop
outsl
mov
and
and
shlb
inc
aas
test
ret
xchg
lods
mov
scas
scas
mov
lahf
sahf
mov
add
pop
pop
adc
scas
mov
mov
lcall
mov
cmpsl
cmpsl
ljmp
test
jmp
pushf
pushf
call
pop
jbe
mov
decl
popa
decl
push
pop
incl
add
incl
add
lea
push
call
add
cltd
add
mov
or
mov
jo
mov
jne
mov
sub
inc
sub
ret
inc
sub
dec
cs
das
cmp
lea
cld
scas
mov
lret
movsl
dec
mov
movsb
movsb
add
push
adc
cmpsl
scas
ljmp
sahf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
mov
push
incl
or
add
addl
incl
add
xchg
push
decl
add
xchg
add
cltd
add
mov
add
scas
adc
mov
ss
cmp
dec
cmp
sarb
xchg
sarl
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
mov
mov
sahf
cltd
sahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
adc
mov
push
incl
add
push
decl
pop
call
add
mov
add
lods
add
pushl
cmp
into
inc
call
inc
call
dec
mov
dec
xchg
call
dec
xchg
fisttpl
fisttpl
fsts
call
test
std
mov
mov
movsb
movsl
movsl
arpl
mov
add
add
add
fwait
xchg
cltd
add
dec
adc
jl
mov
cmpsl
scas
lcall
stos
stos
pushl
mov
pushl
mov
mov
scas
mov
movsb
xchg
decl
call
push
pop
decl
push
decl
add
xchg
add
sahf
add
mov
add
test
pop
gs
mov
inc
nop
call
push
cltd
fcoms
ficoml
fcompl
jmp
pop
pushf
ficoms
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
test
mov
sahf
sahf
add
inc
inc
adc
jns
mov
mov
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
call
and
xchg
sbb
xchg
or
xchg
add
xchg
add
lcall
jmp
add
mov
gs
mov
xor
fldenv
fisubs
jmp
arpl
jmp
cmpsb
call
imul
faddl
ret
mov
cmpsl
cmpsb
mov
lahf
mov
add
add
add
inc
inc
adc
jae
cltd
xchg
cwtl
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
fwait
xor
fwait
das
jo
xchg
sub
cwtl
pop
call
add
fwait
add
mov
add
lods
add
mov
pushl
adc
roll
fsubl
jmp
outsl
lods
jmp
jno
jmp
jb
jmp
jne
in
je
out
jbe
out
jbe
in
jae
jmp
mov
mov
test
lcall
sahf
add
jg
ds
outsb
js
lea
lcall
mov
pushl
mov
mov
mov
mov
lods
lcall
xor
mov
aaa
jae
lahf
xor
cltd
push
call
add
mov
add
stos
add
mov
popa
pushl
add
sbb
ficoml
jmp
ja
ljmp
jmp
mov
push
cmpl
xacquire
push
cmpb
aad
inc
mov
stos
cmpsl
sahf
popf
sahf
daa
lahf
lahf
mov
add
add
add
pusha
add
aaa
cmp
pop
pop
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
mov
lcall
cmp
movsl
inc
jl
movsb
inc
jg
movsb
ss
cltd
sbb
xchg
add
sahf
add
mov
add
lods
add
mov
fs
mov
add
shlb
cmp
jmp
mov
push
mov
push
nop
ret
push
xchg
ret
push
nop
push
xchg
ret
push
xchg
clc
pop
out
pop
clc
lods
stos
stos
mov
sahf
popf
xor
popf
pushf
add
add
add
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
pushl
mov
mov
inc
ret
inc
mov
mov
jl
lcall
dec
cmp
dec
cmp
xor
pusha
lcall
add
test
pop
ljmp
add
add
rolb
dec
add
mov
call
xchg
cltd
push
lcall
negb
stc
sahf
int3
cld
lahf
int3
cld
sahf
int3
sti
cwtl
lret
push
xchg
ret
fistpll
enter
mov
sahf
mov
nop
add
add
add
xor
outsb
push
dec
dec
jecxz
pop
call
mov
mov
mov
sar
ret
inc
inc
enter
mov
lahf
jmp
push
mov
lods
push
xchg
mov
push
pop
lcall
add
lods
add
mov
arpl
mov
add
leave
add
or
jmp
inc
xchg
out
mov
push
movsl
int3
push
movsl
int
stc
test
sti
test
cld
movsl
iret
cld
cmpsl
into
std
stos
iret
std
stos
sar
test
push
sahf
jmp
mov
dec
enter
mov
into
lahf
lahf
mov
add
fwait
cltd
add
add
add
xor
sub
or
bound
pop
xlat
jne
jno
mov
sarb
mov
inc
ret
inc
leave
inc
ret
mov
cmpsb
jmp
push
mov
scas
dec
test
mov
add
movsb
add
add
mov
arpl
mov
add
int3
add
fadds
jb
ficoms
jl
out
pop
test
negl
sar
sti
mov
cli
mov
sti
scas
sar
std
mov
mov
mov
cld
mov
mov
std
mov
push
movsl
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
push
push
add
dec
dec
outsl
jo
mov
fsubr
aad
fdiv
rcl
sar
lret
dec
lret
leave
lret
leave
lret
lret
enter
lods
jmp
push
mov
stos
cmp
lcall
add
add
mov
fs
mov
add
rolb
jo
fadds
je
filds
jne
call
jno
cld
lods
aad
mov
fcos
std
mov
fcos
cld
mov
fdivr
mov
fcos
std
rcr
mov
int3
jmp
mov
call
lret
int3
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
enter
loop
call
out
test
in
leave
fstp
fucom
fcmovnu
fcomi
fcomp
fsqrt
fcomp
std
int
iret
mov
imul
jmp
add
mov
popa
mov
add
lret
call
add
fildl
ja
in
jbe
out
xor
sti
mov
std
ret
loopne
std
loopne
std
inc
loopne
inc
fdivrp
std
fdivrp
dec
loopne
std
enter
leave
cli
mov
enter
into
mov
mov
xchg
adc
add
add
incb
std
std
add
std
add
div
or
in
in
pop
jmp
in
sub
out
in
dec
ljmp
xchg
out
jmp
aad
fcmovnu
jmp
mov
xchg
cmpsb
cmp
movsb
adc
pop
ljmp
add
mov
add
into
add
add
loopne
js
call
inc
pushf
cld
mov
jecxz
std
lret
dec
in
std
into
in
std
into
jecxz
std
into
loope
std
into
loopne
dec
in
call
in
std
shl
std
shl
cli
fdivr
in
mov
xlat
inc
cmpsb
test
xchg
xchg
xchg
sbb
fwait
fwait
add
std
incl
std
incl
idiv
testl
lock
repnz
in
lock
out
icebp
out
cmp
out
out
pop
loopne
loop
lds
xchg
sti
mov
push
pop
jmp
pusha
pushl
add
movl
jno
flds
je
in
jnp
jmp
jle
negl
sti
mov
cld
shl
std
shl
call
call
shl
std
aam
std
out
fsubr
fldl2t
fucomi
fldl2e
cld
shl
push
ret
jmp
aam
dec
lret
stos
stos
test
and
xchg
xchg
add
cli
add
std
stc
add
cld
clc
add
div
or
shlb
sarl
cltd
sbb
mov
add
scas
add
mov
add
lret
add
rolb
jb
fildl
ja
call
sbb
push
jbe
cli
loopne
fldl2e
fucomi
std
fucomi
std
fucomp
std
fsubr
fsubr
std
fsubrp
loopne
loopne
cld
shl
push
ret
out
rcl
iret
clc
lods
stos
stos
lods
xchg
xchg
xchg
outsb
outsl
outsl
add
add
add
loopne
add
leave
lds
stos
jl
repnz
and
sahf
add
add
mov
mov
add
int3
add
aad
jae
loopne
jae
ljmp
sti
nop
shr
loopne
fucomp
fldl2e
std
fucomi
call
jmp
cld
shl
cli
shl
cli
shl
stc
into
fdivrp
test
in
mov
call
fcomp
sti
mov
mov
fwait
cltd
lcall
fwait
lcall
add
add
xlat
add
mov
subb
push
mov
add
mov
arpl
mov
add
iret
add
fadds
je
loope
jns
jmp
ss
sti
cwtl
sti
enter
int3
loope
cld
idivl
aad
repnz
into
push
mov
int
call
mov
iret
std
ljmp
imul
cmc
fsubp
loopne
mov
mov
xchg
add
add
add
int3
lret
add
shrl
loopne
xor
pop
ljmp
add
mov
add
int
jno
rorl
jbe
fistl
jns
loop
cmp
dec
xchg
call
scas
lret
ljmp
std
loopne
mov
cli
fnstsw
lock
int
into
fsubp
into
xlat
shl
xlat
fadd
out
loope
jmp
jmp
popf
jmp
lret
lret
push
lods
stos
lods
adc
cmpsb
test
add
ret
mov
stos
aam
dec
cmp
sbb
cmpsb
sbb
scas
and
jns
mov
inc
xchg
ret
push
mov
lret
test
mov
out
mov
enter
leave
lret
int
ror
int3
mov
into
shlb
fcom
jg
fcmovnu
jb
loopne
gs
jecxz
out
jmp
xor
div
mull
repnz
fstp
or
mov
into
add
add
add
rolb
mov
stos
xchg
lock
sbbb
mov
cmpsl
sarb
test
mov
mov
cmpsl
leave
mov
mov
leave
int3
jp
into
iret
addr16
iret
rcll
rcl
dec
aam
inc
rcl
xor
daa
xlat
sbb
adc
jecxz
push
loope
in
call
repnz
add
cld
testb
sti
add
incb
incb
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
mov
daa
int
into
and
aad
sbb
aad
adc
rorl
rcr
push
rcr
fadds
add
add
in
add
jmp
add
xlat
aam
incb
mov
mov
add
ret
vmovapd
ret
mov
mov
ret
les
push
add
into
lret
aad
add
aam
rcr
aam
aam
xlat
aam
add
fchs
add
aad
add
loopne
add
fsubp
add
in
add
lock
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
ret
ret
ret
mov
mov
mov
test
cmpsl
test
pop
add
add
add
add
add
add
scas
mov
adc
mov
aam
ror
jmp
aam
cmc
rcl
sar
ror
iret
cli
int
lret
stc
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
into
into
sar
xlat
xlat
call
xlat
xlat
call
rcl
dec
iret
int
lret
lret
mov
mov
stos
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
je
jne
gs
dec
dec
inc
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
dec
lret
lret
rcl
call
rcl
dec
lret
mov
sar
mov
ljmp
sahf
sahf
cwtl
xchg
xchg
jmp
jo
xchg
push
adc
add
add
add
add
add
jg
jg
jnp
jp
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jno
jno
mov
scas
pop
mov
mov
mov
mov
inc
ret
mov
inc
mov
mov
ljmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
lcall
pushf
xchg
lcall
addb
jge
jnp
jns
js
jnp
jns
jnp
jns
je
jb
push
push
push
cmp
jae
sahf
popf
popf
mov
scas
lods
rep
scas
scas
sti
lods
scas
lods
std
cmpsl
cmpsl
test
sahf
popf
sahf
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
movsb
cmpsb
cltd
jae
jb
adc
adc
add
add
add
add
outsb
outsl
outsb
pop
nop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
cltd
cwtl
repnz
xchg
xchg
std
lea
call
sahf
popf
ljmp
stos
mov
mov
scas
mov
mov
mov
movsl
mov
addb
add
add
add
add
pusha
or
lods
mov
movsl
sahf
movsl
decl
mov
call
popf
sahf
sti
lahf
mov
lcall
push
push
jo
pop
push
outsl
imul
jg
subl
mov
std
nop
mov
ljmp
jle
pushl
pop
mov
mov
jl
mov
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
xchg
call
lcall
pushf
popf
pushf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
mov
nop
jbe
notb
pop
cmp
dec
jl
movsl
inc
jp
scas
ss
mov
je
scas
push
insl
ljmp
sbb
pop
mov
scas
scas
jle
mov
add
add
add
pop
pusha
pusha
or
mov
lcall
lahf
sahf
jmp
mov
cwtl
decl
addl
xchg
jae
cld
xchg
pop
cmp
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
maxps
mov
pop
imul
mov
insb
pushl
sbb
jne
rcrb
mov
lods
scas
xchg
lahf
popf
popf
adc
add
add
pop
popa
popa
or
stos
mov
stos
mov
lahf
jmp
stos
stos
ljmp
xchg
lcall
cmp
mov
decl
adc
xchg
push
decl
add
xchg
add
popf
add
or
pushl
jp
mov
jg,pn
enter
leave
xor
xchg
inc
test
imull
test
sbb
add
add
pusha
pusha
popa
or
movsb
stos
in
mov
test
scas
mov
pushl
mov
jmp
jb
mov
pop
decl
or
test
decl
add
xchg
add
sahf
add
add
mov
insl
inc
aaa
test
lret
inc
mov
rolb
call
inc
mov
aad
xchg
call
arpl
stc
mov
mov
mov
std
add
add
add
popa
or
mov
ljmp
mov
pushl
mov
test
decl
sbb
decl
or
push
call
add
cmpsb
add
scas
add
jbe
rorl
fcoms
fistpl
fistps
jmp
pop
mov
fildll
dec
test
cld
mov
mov
cmpsb
stos
cmpsb
xor
add
add
dec
pop
jge
jp
popf
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
imul
and
xchg
minps
xchg
add
popf
add
cmpsb
add
scas
add
mov
addr16
xor
fsubl
jmp
insl
stos
jmp
jo
call
jb
out
jae
jmp
jns
call
test
std
mov
test
inc
addb
add
dec
pop
outsl
insl
push
mov
xchg
pushl
mov
mov
mov
jne
lcall
jne
sahf
sub
lcall
add
movsb
add
lods
add
mov
inc
or
call
inc
xchg
jmp
js
jmp
mov
in
test
push
mov
out
mov
mov
cmpsl
cmpsl
push
lcall
add
sub
push
push
dec
pop
gs
loopne
mov
mov
rol
ret
inc
mov
pushf
jmp
inc
cmp
fwait
or
mov
add
mov
fs
mov
adc
fbld
out
pop
push
xchg
cwtl
xchg
push
cltd
enter
leave
push
cwtl
jmp
lods
vcmpss
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
ret
pushl
pop
xchg
stos
dec
cmp
and
lahf
add
add
mov
fs
mov
add
fsubs
cmp
jnp
push
mov
into
stc
test
cli
test
sar
cld
lods
sar
stc
cmpsb
int
out
enter
ret
stos
stos
jne
sahf
pushf
or
add
add
push
dec
dec
aaa
jb
jb
test
int3
into
out
iret
lret
cmc
lret
sti
lret
std
enter
movsb
mov
stos
bound
jmp
add
mov
gs
add
int
insl
fildl
jmp
xchg
std
mov
mov
cld
mov
cld
mov
fcos
cld
mov
ljmp
repz
lods
mov
add
add
add
add
or
aad
dec
loope
loope
fsubp
fistps
fcmovnu
xlat
out
shlb
test
jae
movsl
pop
pop
ljmp
add
enter
add
or
dec
mov
cld
std
std
dec
fdivrp
dec
fdivrp
dec
loope
std
fdivr
out
mov
lret
mov
xchg
pushf
sahf
sahf
sbb
add
add
std
add
std
std
add
jmp
out
sbb
in
in
xor
loope
in
les
mov
mov
add
mov
fs
add
iret
add
faddl
je
call
insb
mov
std
ret
std
iret
in
call
out
shl
shl
std
aad
xlat
call
push
enter
int3
sar
mov
mov
add
std
incl
std
add
cld
incb
aam
push
mov
pop
xchg
sahf
or
ljmp
add
les
push
rolb
outsl
fiadds
ja
out
pop
mov
cli
mov
std
shl
fldl2e
fsub
cld
fsubr
sti
xlat
out
cld
cld
aad
push
fdivr
loopne
aad
mov
lahf
popf
das
add
add
into
int
or
fs
mov
add
mov
add
aam
jb
loopne
ja
out
xor
cli
int
stc
lret
fdivrp
cmc
repz
aad
icebp
ret
out
ret
in
aam
in
aad
jmp
shl
in
fucomp
enter
stos
stos
test
std
std
add
add
add
aam
push
mov
jae
or
insb
inc
sbb
int3
and
cs
loopne
fwait
clc
loop
mov
out
loop
lret
jmp
fnstsw
lret
enter
int
scas
jecxz
fcompl
out
jmp
rorl
mov
add
stos
stos
stos
add
xchg
movsb
les
mov
mov
nop
fidivrl
jg
rol
lods
mov
lahf
mov
iret
mov
leave
jge
lret
insl
ror
int
rcl
rorl
cmp
das
jecxz
fisubs
jecxz
repnz
in
in
or
std
std
std
add
add
add
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
leave
and
rcl
pop
rol
adc
rcl
or
loopne
or
into
int3
add
std
incl
std
std
add
add
add
into
int3
pinsrw
or
into
int
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
leave
leave
enter
enter
ret
mov
scas
scas
scas
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
mov
jmp
aad
aad
rcl
sar
into
into
iret
std
mov
mov
test
jle
gs
sbb
add
add
add
add
add
add
add
add
jb
jno
data16
inc
inc
das
cs
sub
and
add
add
mov
mov
cmpl
dec
int
call
aam
dec
iret
into
dec
mov
ljmp
mov
mov
add
xor
add
sbb
jae
jae
xchg
adc
arpl
mov
addr16
outsb
outsl
outsl
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cltd
lds
jno
daa
and
add
add
add
jb
jb
fwait
xchg
lcall
xchg
xchg
test
addl
push
push
push
inc
mov
fwait
into
movsb
movsb
movsb
in
mov
xchg
xchg
decb
lea
lods
test
cld
mov
mov
ret
xchg
aas
sub
sub
add
add
jg
adcb
movsl
cmpsl
cmpsl
test
test
mov
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
lcall
mov
push
push
imul
jge
mov
xchg
notl
mov
mov
lcall
jo
mov
mov
stos
lods
lods
push
lods
stos
stos
add
add
add
test
test
xchg
xchg
xchg
call
lcall
xchg
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
nop
bound
std
pushf
inc
ja
movsl
ss
lods
sub
mov
jo
mov
outsb
pushl
popf
lods
lock
mov
imul
into
add
test
pop
scas
movsb
stos
test
popf
pushf
lahf
jmp
movsl
call
imul
inc
je
mov
imul
xchg
adc
xchg
or
or
scas
sbb
mov
es
shlb
inc
aas
xchg
rcrb
subl
jae
push
mov
mov
test
scas
mov
ljmp
mov
decl
or
xchg
decl
pop
jmp
adc
shll
call
inc
mov
aad
mov
push
xchg
dec
cltd
mov
mov
mov
movsb
movsb
mov
add
push
cwtl
xchg
xchg
test
mov
lods
pushl
mov
movsl
call
sbb
pop
call
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsw
call
pushf
mov
mov
cmpsl
cmpsb
pop
add
add
arpl
adc
popf
fwait
pushf
cld
mov
scas
mov
mov
mov
pushf
dec
jl
popf
xor
cltd
and
call
add
stos
add
mov
xor
jmp
jnp
out
jle
push
jle
ficompl
mov
movsb
mov
add
dec
dec
dec
adc
imul
mov
mov
mov
ret
ret
mov
jmp
jl
lahf
and
pop
ljmp
add
les
outsb
fisttpl
out
mov
push
xchg
push
xchg
enter
jmp
cmpsl
inc
mov
movsl
sub
aas
aas
aas
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
gs
add
adc
ljmp
clc
stos
sar
sti
lods
sar
sti
scas
sar
cld
scas
iret
jmp
lret
mov
movsl
ds
incb
xor
xor
jo
jo
scas
mov
mov
aad
aam
aam
rcl
shr
leave
enter
xchg
jmp
arpl
ret
add
aam
jae
out
xchg
clc
nop
ret
std
mov
std
rcr
std
ret
inc
icebp
mov
ret
in
test
addb
add
add
jmp
out
call
inc
loop
in
fcomp
fldenv
mov
add
mov
add
faddl
out
cmp
std
int
dec
in
shl
std
aad
std
shl
push
leave
fdivr
aad
into
in
scas
lods
lods
popa
jg
addl
add
add
incl
std
std
push
lret
int
sub
sahf
sbb
stos
add
mov
add
loop
jp
hlt
push
cmpsl
cld
loope
xlat
call
std
aam
sti
aam
stc
aam
push
enter
into
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
gs
mov
push
jae
fistps
cmp
lock
shl
ljmp
jmp
out
aam
call
fcmovu
scas
vsqrtsd
add
add
sahf
lods
xchg
and
push
mov
shll
int3
js
mov
fdivrs
int3
adc
int3
outsl
fxch
into
pop
fst
aad
in
loope
call
out
in
sbb
sarl
cmp
movsb
scas
arpl
lods
mov
les
lds
ret
sbb
bswap
int
or
aad
push
std
add
std
add
add
add
rol
std
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
mov
or
lcall
hlt
les
and
aam
inc
dec
in
popa
lcall
sbb
add
in
xchg
test
cltd
push
fadd
arpl
roll
cs
addr16
les
add
inc
and
mov
or
ja
imul
out
std
and
fcomip
jg
mov
pop
mov
jp
add
jmp
adc
jae
adc
call
mov
jle
fisubl
mov
clc
inc
or
fsub
imul
mov
cmpsb
xor
insl
mov
filds
sbb
push
insb
popf
push
mov
iret
shll
test
in
add
xchg
and
xor
pop
mov
jge
ret
movsl
sub
enter
popa
scas
sub
in
data16
adc
push
xchg
mov
in
push
cmp
fadds
mov
dec
xchg
ret
lahf
and
sbb
jbe
in
jmp
addr16
mov
jbe
jg
push
inc
dec
in
pop
fidivs
stos
pop
cmpb
push
std
xchg
xchg
arpl
pusha
mov
pop
xchg
sub
lahf
shr
inc
cli
gs
repz
sbb
lcall
orl
mov
inc
inc
pop
jnp
filds
ja
cs
les
pop
ret
jnp
les
mov
bound
int3
inc
push
stos
inc
lds
aaa
dec
rorb
test
adc
loopne
sbb
rclb
das
mov
jp
jbe
sbb
mov
pop
shlb
in
nop
jg
sbb
dec
in
mov
mov
mov
xchg
data16
jle
xor
mov
lods
inc
pop
jecxz
mov
imull
je
jmp
imul
xor
dec
lods
inc
mov
mov
outsb
add
popf
pop
jp
jmp
push
enter
dec
push
psllw
enter
sbb
out
cmpsb
lds
pop
leave
jbe
enter
xchg
sub
in
pop
cmpsb
repz
jns
repnz
outsl
sub
fwait
xchg
and
adc
inc
int
pop
bound
lahf
mov
sub
pop
test
stc
pop
xchg
pop
mov
add
in
mov
rolb
and
jnp
dec
push
in
push
xor
xlat
pop
mov
in
andl
and
vpaddb
pop
lods
int3
inc
xchg
shl
into
push
jno
je
ss
sub
sub
or
or
fdivrs
push
xchg
inc
in
sub
sub
fdivrl
xor
mov
mov
adc
jge
push
adc
push
jae
cmpsb
sub
jge
xor
and
cmp
mov
test
xchg
inc
jecxz
sub
das
imul
mov
das
stos
inc
stos
jmp
int3
fnstsw
push
pop
shll
test
fdivrs
adc
add
pop
mov
fisubs
fidivrs
ja
push
pusha
daa
mov
mov
cmpb
and
cmpsb
pushfw
adc
stc
jnp
in
out
mov
lea
lret
push
add
daa
int
mov
es
mov
jbe
aas
test
inc
and
or
xchg
fsubs
lods
sub
jl
pop
in
ficompl
pop
xlat
push
sbb
push
mov
add
lret
shll
aam
cmpsb
ret
mov
add
in
insl
sub
outsb
stos
cwtl
xor
xor
arpl
mov
cmp
popl
jbe
jl
clc
dec
xor
or
dec
popf
gs
dec
daa
mov
cmpsl
cld
out
pusha
mov
repz
mov
cli
imull
add
dec
lea
xchg
pop
push
aas
cltd
sti
xchg
mov
shll
fmulp
pushf
testb
aas
ds
loopne
add
out
out
pop
jge
or
push
xor
mov
test
dec
movsl
push
or
pop
xchg
stc
scas
mov
push
mov
jle
push
out
xchg
in
fs
mov
cmpsl
sbb
call
pop
cltd
adc
mov
adc
das
dec
ds
insb
aas
in
jb
push
cmpsl
pop
pushf
lret
dec
mov
dec
out
mov
iret
mov
mov
pop
orl
imul
cs
mov
adc
aad
push
adc
loop
nop
sbb
mov
mov
lds
push
cmpsb
flds
mov
sub
cmpsl
std
pop
adcb
or
xlat
xor
lods
lods
xchg
inc
push
test
cmpsb
out
aam
fdivrl
jge
xor
in
dec
lahf
ret
lret
cmp
or
jle
mov
xor
rclb
js
mov
rorb
fiadds
xchg
outsb
hlt
fistpl
in
push
pop
sbb
repnz
dec
xchg
cmp
ret
aad
jbe
or
adcb
repz
add
cmp
test
popf
add
ja
mov
or
xchg
push
pushf
je
sbb
jns
inc
inc
sti
cmp
lcall
mov
push
movsl
mov
xor
add
and
dec
loope
ja
push
test
lret
cld
lods
xchg
ficomps
movsb
cmp
jo
pusha
movsb
push
ret
ret
cli
scas
fldt
sbb
cmpsl
cmp
add
pop
cmp
js
pushf
adc
ljmp
cmp
mov
stos
fidivrs
mov
pusha
sti
cmpb
jle
fwait
mov
xor
mov
lret
orb
jnp
sbb
cmpb
bound
arpl
loopne,pt
pusha
les
lods
aaa
rcrb
mov
jnp
ret
pop
mov
cmp
jmp
insb
loope
xor
and
mov
cmp
cltd
xor
mov
pop
and
mov
push
mov
mov
sub
mov
cmp
add
fcmovnbe
push
mov
iret
cmp
inc
sub
les
testb
enter
loopne
in
frstor
repz
std
push
stc
lods
in
xor
shl
ds
stc
and
mov
inc
sub
mov
in
test
fiaddl
push
or
cmpsl
jp
mov
mov
push
jp
sub
test
out
push
insb
cmpsb
ret
sti
popf
enter
adc
pop
fdivrp
add
in
cmp
fldt
lret
int
cmp
scas
leave
sbb
push
cld
dec
mov
es
cld
mov
sbb
cld
in
push
mov
rcr
push
or
push
or
jmp
push
pop
cmp
mov
cmp
pop
sbb
and
sbb
cmp
xchg
iret
leave
and
mov
stos
test
sub
testb
sbb
call
popf
jmp
lcall
dec
faddl
mov
repz
sahf
and
out
std
test
loop,pn
scas
inc
cld
test
aaa
fstp
mov
sbb
ds
cmc
setb
jno
xor
in
pop
test
lods
imul
xor
mov
fdivrl
or
das
pop
icebp
pusha
and
xchg
btr
movsl
mov
push
sub
pusha
jnp
imul
aam
sbb
push
sbb
dec
das
daa
mov
mov
shll
add
pop
inc
and
in
leave
leave
insl
add
ljmp
dec
cmp
mov
jo
inc
mov
ret
enter
mov
mov
lahf
ss
shrl
pop
mov
mov
fdivl
jp
xchg
imul
fwait
mov
sahf
xor
pop
cmp
inc
xlat
pop
nop
fidivrl
or
mov
lahf
ss
or
mov
fdivl
js
mov
lret
adc
std
jecxz
mov
push
xor
cmpsl
movsb
xchg
stos
jl
fildll
into
data16
pop
testl
mov
les
lret
rclb
push
jmp
dec
push
push
pushf
push
xchg
pushf
mov
sbb
inc
rolb
dec
popa
adc
ss
xchg
popa
push
mov
sbb
cmp
cmp
fidivl
imul
push
dec
icebp
jbe
cmp
or
jmp
sub
push
imul
jp
xchg
add
imul
inc
ja
xchg
test
aad
xchg
leave
push
mov
mov
mov
sbb
test
sahf
pop
xor
lea
dec
in
adc
add
gs
xchg
push
mov
test
test
mov
pop
adc
jle
das
loop
add
xor
and
mov
je
mov
fistl
test
cs
pop
cmpb
xor
in
aad
mov
iret
div
mov
icebp
loop
and
test
jne
xor
int
inc
fmuls
scas
pusha
mul
inc
sub
jno
dec
in
xchg
dec
in
mov
repz
mov
sbb
notl
sub
or
cltd
jp
mov
ficompl
cwtl
das
imulb
testb
shll
pop
aad
int
sahf
data16
jmp
mov
mov
in
mov
ret
mov
xor
adc
insl
add
mov
out
lds
iret
mov
out
in
xlat
pop
leave
mov
in
fdivl
movsl
cmp
iret
dec
adc
shlb
jl
add
shrl
fwait
cmpsb
cmp
mov
faddl
int
testb
ljmp
jb
and
add
es
bound
mov
mov
pushf
cmp
pop
jns
push
sub
jl
jno
add
imul
test
jbe
and
mov
jo
cmp
sbb
or
js
fnstenv
and
dec
fs
dec
rolb
fidivrl
mov
in
pop
lock
push
cmp
ja
addr16
gs
std
xchg
or
imul
popf
inc
scas
inc
jl
and
push
push
adc
jge
icebp
mov
fcompl
and
mov
dec
in
sbb
jne
push
and
sbb
or
popf
shrb
enter
int3
arpl
fs
lcall
in
aas
or
push
mov
cmp
jnp
js
push
insb
rcl
mov
xor
movsl
lds
ja
push
out
loopne
dec
leave
pusha
jb
int3
arpl
xor
movsb
jl
mov
cmp
sbb
dec
mov
ret
lds
shlb
xlat
and
lret
jmp
rclb
and
out
xor
jle
loopne
ficompl
cli
xchg
push
xor
rol
dec
loope
iret
sbb
leave
lods
jl
jmp
push
out
mov
gs
or
or
sub
adcb
dec
adc
loopne
sbb
dec
in
mov
dec
adc
jno
int
xor
mov
out
sti
and
or
mov
in
dec
or
cwtl
das
cwtl
xchg
push
popf
ret
xor
add
fwait
ljmp
aad
pop
add
inc
fs
and
imul
mov
add
stos
repnz
aas
pop
divb
rcr
jno
aad
jae
in
lret
push
mov
divl
pop
or
xchg
cs
xsha1
cmpsb
punpckhdq
xor
or
and
inc
aam
push
jecxz
inc
push
call
icebp
mov
sti
inc
fldlg2
xchg
mov
in
jg
jne
test
mov
xor
mov
les
cmpsb
mov
cld
xchg
hlt
fbstp
xchg
xchg
scas
mov
inc
ret
push
lods
inc
orb
jl
in
test
push
jg
arpl
imul
rorl
int
mov
out
xor
fistpll
daa
mov
inc
cmpsb
cmp
add
es
cwtl
lock
repnz
sti
xchg
sub
sub
hlt
aas
movsl
and
push
imul
fs
test
testb
xor
icebp
mov
stos
fdivl
scas
or
mov
cld
xchg
test
mov
ret
dec
insl
push
in
ja
icebp
or
es
outsl
push
ljmp
test
ficompl
mov
mov
ret
inc
fnsave
sub
fcoms
int
fidivl
inc
xlat
in
jl
pop
lods
or
pop
scas
jge
data16
adc
add
movsb
fmulp
pop
sti
lds
mov
fidivs
xlat
jns
leave
push
fdivl
ljmp
jo
mov
out
adc
inc
cmp
fildll
pop
adc
aaa
clc
data16
cmp
mov
fsubl
pop
js
add
add
jb
lock
xchg
testb
daa
cli
xchg
cltd
cmp
ret
mov
es
aas
dec
and
lods
pusha
lods
inc
push
dec
sbbb
jae
sub
cmc
mov
outsb
add
sub
out
test
addr16
pop
scas
call
xor
sub
mov
push
cs
nop
pop
js
imull
pop
xor
or
xchg
mov
call
mov
mov
inc
cmp
xor
iret
cbtw
push
xor
inc
ds
test
push
out
pop
cld
adc
insb
mov
aam
shrb
jge
or
ss
inc
mov
xor
inc
lret
iret
or
dec
cltd
mov
jns
mov
out
test
push
es
adc
mov
cmpsl
call
cmp
cmp
mov
fucomip
adc
repnz
push
popa
clc
outsl
add
test
lahf
xchg
cmc
mov
cmp
pop
jno
inc
ficompl
mov
stos
inc
add
mov
cmp
push
xchg
mov
pop
push
call
stc
aas
mov
push
add
jge
lods
lea
shr
jg
inc
insb
add
mov
xor
inc
aam
mov
push
mov
lea
jmp
pop
mov
cld
clc
add
nop
into
test
hlt
mov
andb
testb
push
nop
daa
lea
dec
es
fldcw
xchg
sub
std
xchg
cmp
daa
mov
cld
mov
addl
and
dec
pushf
mov
push
ss
mov
inc
pop
shrb
out
jb
adc
call
push
call
sbbb
test
xchg
nop
movsl
inc
fstl
cmp
imul
adc
mov
faddp
pop
rol
sub
and
add
fnstenv
xchg
mov
scas
xchg
fnstenv
test
jl
and
incb
jnp
jg
push
lahf
ss
lcall
shrl
lds
sbb
mov
mov
adcb
dec
imul
jo
xchg
pop
cmc
add
ja
test
lret
xchg
add
cmp
pop
js
and
pop
fucom
xor
dec
loop
mov
sti
xchg
adc
int
sbb
icebp
dec
and
sti
push
sub
int
lds
inc
stos
inc
fcompl
sub
aaa
add
cmp
inc
hlt
mov
pop
xor
out
test
pop
sbb
adc
fisubrs
pop
mov
sub
lret
mov
addr16
daa
scas
mov
shrl
lret
leave
stos
es
jns
dec
or
cs
insb
out
cli
cmpsb
stos
daa
sub
dec
pop
das
lcall
xchg
and
mov
sub
insl
cli
cwtl
pop
xor
inc
pop
and
hlt
loop
dec
test
xchg
in
inc
nop
sbb
jg
jecxz
dec
push
sbb
cmp
popa
arpl
push
sbb
sbb
shr
loope
push
mov
mov
sub
jno
test
sbb
inc
mov
jno
or
mov
adc
sti
imul
mov
mov
in
loop
loop
cmpb
insl
cmp
xchg
xchg
mul
jns
mov
add
cmp
pop
lock
in
cmp
push
scas
ja
loope
pop
adc
xchg
dec
stc
jne
daa
xchg
sbb
push
and
jg
xor
into
or
in
and
rolb
rcll
jno
pop
xor
popa
mov
dec
addr16
imul
sub
dec
aaa
jno
mov
jl
sbb
rcrl
add
enter
js
iret
dec
out
cmc
call
push
dec
sbb
and
enter
in
pop
lock
ja,pt
jo
out
mov
ret
repz
dec
push
adc
shrl
addr16
fcomps
mov
or
adc
pusha
pop
pushf
xor
mov
push
in
incb
push
fnstenv
and
testl
rcl
inc
fidivrl
xor
int3
std
stos
mov
fmull
adc
adc
sub
repz
imul
pusha
xchg
sub
jno
lods
ljmp
pushf
cli
lret
stc
mov
fsubr
jns
dec
inc
jl
in
xlat
imul
adc
imul
xor
cmp
dec
inc
mov
imul
lock
xor
popa
repnz
movsl
and
sub
jne
xchg
sub
xchg
dec
loope
sub
lcall
jge
scas
cmp
test
movsb
cmp
and
push
loop
pop
adc
sub
cmpsl
xor
dec
mov
xchg
mov
fistpl
or
test
sub
mov
out
mov
ret
shll
add
ja
and
sub
xchg
in
ja
dec
test
lret
loopw
int
mov
mov
hlt
lret
outsb
push
jmp
adc
ds
sub
nop
jo
ret
mov
out
outsb
add
mov
iret
fsubrs
xchg
sbbl
and
push
in
mov
cmpsb
aaa
call
testl
fsubrs
insb
pop
sahf
sub
inc
fsub
jg
or
jmp
cmp
gs
stc
pop
adc
push
add
or
add
in
movsl
rorl
sbb
xchg
sbb
call
jb
maxps
pusha
std
ds
and
xor
and
popa
fildl
test
scas
shll
xchg
pop
popf
out
dec
or
fisubs
add
jmp
sub
mov
movsl
xor
push
xor
notb
in
mov
pusha
fisttpl
fwait
pop
adc
lahf
shlb
xchg
fucom
fildl
xor
fiaddl
bound
and
je
mov
push
adc
lea
mov
lods
inc
pop
push
shl
dec
das
pop
mov
lret
mov
add
and
mov
aam
mov
shrb
cmp
push
mov
fcompl
mov
jb
mov
test
or
cmp
rcrl
iret
lods
push
loopne
xor
in
cmp
add
dec
movsl
and
mov
les
testl
sti
inc
lahf
js
out
test
cltd
or
mov
xor
or
pop
inc
mov
loope
xchg
or
jne
mov
sti
xchg
mov
sbb
cmp
daa
mov
xor
inc
fldl
pusha
not
push
adcb
clc
js
ljmp
scas
insb
sbb
cmpsl
mov
adc
mov
ss
lods
sbbb
ss
cmpsl
mov
mov
mov
shll
push
clc
lds
mov
popa
out
mov
inc
xchg
ja
cmpsb
adcb
jne
outsl
outsb
mov
xchg
sub
stos
test
divb
push
aas
std
xchg
jge
jp
dec
pop
pop
ret
aaa
into
xchg
inc
xor
aaa
inc
adc
sbb
test
lods
inc
mov
sub
mov
xchg
inc
nop
daa
aaa
push
mov
inc
lods
cmp
pop
adcb
test
repz
mov
lods
mov
mov
push
mov
xchg
out
add
fimull
or
add
add
jp
outsl
push
outsl
fwait
int
fistl
shrl
inc
pop
jns
out
pop
in
fwait
bound
out
leave
pop
xchg
cs
fcomi
mov
mov
sub
push
sbbb
in
dec
rep
ret
adc
pop
arpl
add
adc
ret
pop
and
inc
mov
js
outsl
push
lcall
push
xchg
pop
or
xor
outsb
icebp
fcoml
and
xchg
fcmovnb
pop
loop
adc
mov
ret
test
lock
inc
stos
inc
jb
and
test
pushl
out
sub
shl
xor
into
fdivr
jo
fmull
lds
jnp
dec
inc
popa
sub
xchg
inc
icebp
mov
sub
in
addl
mov
adc
and
sub
adc
sbb
or
inc
popa
or
ds
call
pusha
xchg
arpl
pushf
dec
bnd
in
push
in
pop
or
jnp
repnz
nop
daa
or
mov
data16
mov
insb
imul
jo
or
sarl
sub
daa
dec
ds
test
mov
lcall
mov
les
jmp
fsin
xchg
int3
and
out
adc
inc
jge
dec
outsb
ret
mov
mov
xor
push
popf
loop
push
call
imul
or
pop
jp
sahf
xor
cld
and
pop
sahf
movsl
stos
dec
filds
jns
sbb
xchg
fisubl
insl
add
adc
xchg
enter
add
cwtl
das
fcompl
jb
std
loop
lds
cmp
movsl
cmp
mov
outsb
stc
fucom
ja
sbb
aaa
jo
rcrl
mov
aam
add
jge
pushf
xor
lahf
dec
in
and
pop
jb
sbb
iret
in
out
add
push
inc
shrl
outsb
add
jle
cmp
jle
testl
testl
xor
dec
pop
es
sbb
arpl
ss
fsubs
pop
inc
out
xchg
pop
enter
mov
insb
push
int3
arpl
mov
fwait
jmp
or
cmp
and
dec
mov
icebp
das
imul
cmp
inc
aad
inc
fnsave
pop
mov
aaa
scas
jle
pop
pop
les
cwtl
mov
call
xor
dec
repz
enter
fsubrs
loope
adc
xlat
mov
shl
sub
sbb
std
xchg
subb
cmp
sahf
xor
xchg
ja
sub
mov
mov
jae
and
dec
outsb
cld
cs
mov
adc
or
fidivs
xlat
imul
ja
mov
mov
fisubs
iret
sub
lcall
sub
push
movsl
adc
pusha
negl
jmp
loope
loope
add
outsl
hlt
lods
pop
xchg
push
cltd
jbe
inc
out
lahf
cld
dec
fisubs
push
fldenv
aaa
dec
shlb
in
ret
repz
out
fcoml
mov
and
push
vpmadcsswd
push
xor
lds
imul
and
and
cwtl
or
jns
stos
rcrl
pop
gs
inc
mov
push
push
pop
addb
mov
or
sbb
dec
in
aaa
and
je
mov
lret
push
movsl
cld
add
mov
cmp
sbb
jge
lods
testl
sbbb
call
dec
or
ret
fdivs
dec
in
or
mov
xchg
mov
scas
test
sub
incb
insb
cli
jb
dec
out
mov
mov
ret
out
cltd
xor
or
jne
shrl
pop
adcb
sub
add
mov
cmp
mov
scas
mov
pop
mov
cld
xchg
lods
and
ret
push
out
cwtl
pop
lock
testb
pop
push
xlat
pop
dec
and
push
push
jo
inc
jno
ja
add
jb
repz
cmpsl
mov
adc
mov
xor
pushf
popa
xor
mov
jae
rolb
push
out
inc
rcll
or
imul
xor
mov
divps
movl
dec
je
add
out
jle
cli
mov
mov
iret
sbb
mov
mov
ja
je
jo
add
xchg
popa
in
xchg
mov
testb
cld
js
mov
inc
xchg
movsb
idiv
or
xor
leave
mov
lock
add
push
dec
mov
sub
cltd
std
popa
jae
jb
mov
and
sub
push
leave
insl
add
ljmp
pop
mov
dec
and
je
xchg
cmpsb
sbb
popf
les
popf
testb
ret
daa
jno
ljmp
mov
cmp
pop
pop
int
and
fidivs
or
js
sbb
inc
xor
out
xchg
sub
ret
xor
ds
push
fmulp
and
lds
cmp
push
xchg
out
fisttpl
cli
stos
in
jmp
pop
add
xor
pop
cmp
or
mov
clc
dec
stos
add
push
mov
mov
aad
test
out
popf
addr16
xchg
mov
xchg
jecxz
pusha
mul
add
pop
mov
mov
and
pop
fwait
jne
jge
repnz
push
in
jle
or
xchg
sub
dec
sbb
arpl
sub
daa
xchg
mov
mov
loop
push
cmpsl
xchg
push
or
stos
outsb
sub
test
loope
mov
pop
mov
mov
pop
std
notb
cmp
cmp
add
aad
es
adc
adc
inc
sbb
push
dec
loopne
shr
mov
mov
mov
jbe
mov
inc
cmpsb
mov
les
inc
fistpl
scas
mov
les
jmp
or
xor
loopne
stos
jl
stos
adc
cltd
xchg
sbb
out
sub
rcll
sbb
xchg
bound
movsl
sbb
adc
pop
aaa
jp
fwait
stos
xlat
jge
mov
jnp
jne
push
out
push
inc
sahf
inc
push
aaa
into
aaa
push
xor
or
xor
push
fwait
xor
int3
jbe
inc
inc
rcrl
psrlq
push
iret
lret
inc
out
dec
mov
mov
dec
mov
lahf
aam
pop
enter
rclb
std
movsl
jne
lahf
mov
sub
stos
outsl
jmp
scas
imul
popf
ja
test
clc
jo
jnp
mov
lcall
sub
fidivrl
lcall
loopne
ror
mov
jns
or
faddl
pop
pop
fucompp
orb
js
sub
pusha
mov
sub
push
test
ljmp
add
lret
pop
add
adcb
add
jmp
inc
cmc
cs
in
sub
pop
ss
and
insb
push
frstor
push
fsubrs
push
push
mov
fildll
pusha
addr16
mov
out
loopne
push
sbb
jb
les
xchg
fmuls
cmpsb
push
adcb
mov
pop
ljmp
insb
or
movsl
push
pop
adc
arpl
pop
loope
jecxz
fmuls
cltd
push
cmp
adc
stc
mov
jb
push
fwait
sahf
xor
leave
cmpsl
shrb
ljmp
lret
scas
sub
scas
xchg
test
and
loop
cmp
push
or
and
jne
cmpsl
pushf
pop
call
mov
mov
movsb
js
out
sbb
pop
or
fsubrl
mov
popa
pop
and
daa
std
stos
inc
das
dec
test
je
push
dec
push
shlb
sub
fs
fimuls
and
loop
and
addl
cmp
mov
mov
or
or
mov
shrl
stc
and
xor
pop
cld
jne
mov
ret
pop
rorl
subb
stc
nop
pop
popf
xor
cmp
cmp
adc
fsubrp
or
stc
push
sub
lcall
sub
mov
cltd
mov
js
lret
push
insl
mov
rorl
jp
rclb
dec
cmpsb
cld
xchg
fdivs
mov
push
ljmp
push
lea
push
mov
sti
cmp
push
inc
add
subl
xor
jo
jecxz
clc
cld
dec
sbbl
loop
lods
popf
mov
mov
sub
xor
inc
and
and
leave
shlb
cmpsb
ss
fcoml
xchg
dec
jmp
inc
pop
scas
fsts
jg,pn
mov
xchg
or
mov
pusha
pusha
test
leave
rorl
dec
insb
cmp
mov
jbe
sbb
jecxz
xchg
or
jno
jbe
mov
ds
sbb
inc
sbb
cmc
movsb
jecxz
adc
jne
or
add
jno
pop
into
sbb
add
ret
sbb
and
push
jmp
mov
fs
push
arpl
and
push
add
or
nop
ljmp
cmp
mov
out
daa
mov
outsb
push
jecxz
push
push
fadds
inc
pushf
xor
scas
inc
push
cmp
addl
daa
in
les
out
mov
mov
xchg
cmpsl
lea
xchg
pop
je
adc
ffree
lds
bound
mov
loope
or
dec
lock
jge
jp
or
or
sub
dec
sbb
test
ss
nop
cmpsb
fldt
insl
out
dec
lods
clc
fistpll
add
sub
push
cwtl
shlb
dec
insb
add
xorb
into
mov
cwtl
push
out
sbb
sbbb
mov
pop
pop
dec
or
mov
mov
push
adc
pop
rclb
pop
repz
or
push
cmp
jmp
dec
test
out
repnz
mov
stos
sarb
push
lret
sbb
ja
jge
inc
test
cwtl
sbb
push
add
push
jnp
push
call
xchg
jb
ja
mov
cs
imul
ja
mov
push
jmp
in
andb
push
addr16
push
stos
inc
push
inc
pop
push
imulb
push
cmp
aam
dec
ds
push
mov
ds
and
jns
dec
lds
fnsave
fistps
sbb
pusha
dec
fisttpll
movsb
sub
aad
addr16
cwtl
cmp
push
pop
sarb
pop
lods
adc
sub
cmp
rorl
push
aaa
push
add
adc
lcallw
xchg
lahf
pop
add
ss
dec
jae
cmpsl
or
cmp
cmc
jmp
stos
stos
mov
dec
in
push
addl
out
stos
and
mov
mov
adc
fnstcw
loopne
leave
xchg
jo
leave
cmp
xor
leave
cmp
insb
aad
sahf
or
es
cld
lods
fmull
sbbl
aaa
mov
xchg
stc
sarb
xor
movsl
sbb
mov
sub
xchg
cld
mov
lods
loop
xchg
jo
fsts
addr16
aad
lds
cmp
sbb
adc
jno
les
pop
aas
stos
aaa
jnp
adc
imul
pop
fnstcw
rcrb
mov
sbb
inc
jp
data16
scas
fwait
int
test
inc
mov
fcoml
scas
dec
add
sub
jne
loop
pop
cltd
addr16
and
repz
sti
movsl
in
adc
fwait
mov
inc
outsb
stos
movsb
lock
push
cmp
mov
jle
int
pushf
xor
pop
push
cmp
mov
es
and
xor
add
inc
inc
data16
cwtl
ja
dec
nop
sbb
icebp
lahf
clc
fsts
mov
testb
pop
adc
sub
ja
loope
mov
adc
mov
xor
sub
and
mov
dec
inc
mov
push
or
cmp
jl
cs
mov
sbb
fisubl
int3
sub
stos
into
jmp
arpl
xlat
sbb
xchg
xchg
xlat
jmp
cwtl
inc
cmc
mov
insl
pusha
dec
out
scas
inc
and
or
jl
xchg
inc
fadd
fildl
cli
jmp
push
ljmp
lods
mov
jg
mov
adc
loopne
sub
outsb
aaa
mov
mov
lcall
cmpsb
fisubl
fincstp
push
test
arpl
fsubrp
daa
push
lahf
outsb
ljmp
loope
mov
jae
sub
into
loopne
push
cmp
push
fnstenv
lds
test
jmp
mov
insb
add
jg
js
icebp
cwtl
das
and
mov
sbb
and
outsb
push
popf
mov
xchg
mov
aad
fdivr
xchg
fisubl
add
hlt
pushf
add
pop
test
push
out
sub
shlb
ficompl
adc
out
inc
sbb
cmp
mov
jb
in
inc
cli
sub
shlb
or
sbb
pop
add
push
inc
jg
cmp
sar
xchg
divb
xchg
push
push
rcll
mov
xor
xchg
xor
imul
xor
scas
lods
jb
adc
fs
out
cmp
inc
push
mov
outsl
fidivl
in
mov
mov
ljmp
leave
xchg
loope
or
push
imulb
pop
lock
daa
psllq
outsl
add
arpl
cmp
lea
in
mov
xor
or
in
mov
xor
add
ss
lret
ss
fsub
dec
sbb
dec
mov
dec
xchg
movsb
xchg
mov
mov
mov
lahf
jae
jecxz
rcrb
fs
or
stos
jbe
jb
test
jecxz
jb
jno
jne
inc
add
aad
dec
push
xchg
enter
ret
subl
mov
rcll
sub
mov
sub
repz
dec
and
push
outsb
xor
fldt
fimuls
dec
mov
shl
movsb
cmc
inc
xchg
into
repnz
icebp
testb
pop
or
push
stc
call
mov
mov
adc
std
shl
sbb
jle
and
lock
loope
ffree
gs
lret
clc
xchg
mov
incb
push
xor
out
dec
jb
xchg
xchg
fnstenv
pop
addb
jle
outsl
push
xchg
enter
dec
gs
rclb
push
mov
rcr
out
add
push
sub
adc
pop
mov
nop
jge
cmp
sbb
es
pop
mov
pushf
lret
in
outsb
mov
adc
xor
add
cmp
mov
cld
insl
mov
mulb
mov
xor
sti
cmc
call
adc
repz
push
mov
dec
popa
jecxz
sub
xor
in
inc
jne
or
or
and
adcl
sub
rcr
push
movsl
cwtl
out
insb
and
sbb
mov
xor
xor
stc
xchg
aas
pop
inc
add
lret
test
sbb
cmp
dec
xor
and
jl
in
rcrb
pop
push
in
scas
pop
mov
in
adc
mov
cmp
enter
or
add
cwtl
rcll
lods
inc
xchg
clc
mov
cmp
jg
inc
jne
mov
mov
pop
pop
inc
adc
or
scas
push
jmp
in
dec
ret
mov
fs
into
gs
cmp
cmp
pop
out
sbb
outsb
test
inc
cmp
inc
roll
sahf
mov
or
cmp
or
sbb
and
add
add
cs
and
dec
lahf
pushf
xor
data16
xchg
ljmp
movsl
clc
xchg
sub
repnz
daa
shll
and
cmc
ss
loopne
cltd
lahf
mov
shr
sub
mov
scas
lcall
out
sub
push
jmp
gs
iret
flds
sub
mov
aas
sbb
mov
and
cwtl
mov
imulb
shll
aas
and
adc
dec
dec
xor
pop
fs
aam
push
jns
push
out
test
stc
lds
stos
xchg
push
les
fisttpl
inc
sbb
rorb
cmp
cmp
lods
pop
repnz
mov
loope
add
sbb
int3
push
push
push
sub
sub
jmp
test
and
inc
push
push
jp
inc
dec
and
ret
pop
jle
mov
dec
mov
pusha
push
bound
push
sub
mov
in
sbb
mov
push
xor
cmp
fsubrp
jg
xchg
lret
out
mov
ja
out
mov
mov
out
and
mov
sti
inc
fldt
ds
dec
js
dec
out
or
arpl
aas
mov
or
and
jb
mov
dec
adc
and
data16
adc
inc
xor
popf
xor
bound
call
iret
sbb
lea
mov
xlat
sti
fwait
xor
push
inc
ret
insb
stos
fidivl
ss
mov
imul
out
ss
lock
sbbl
cmpsb
and
mov
out
and
mov
mov
sahf
out
sbb
adc
cmp
in
xlat
mov
lock
rcll
lods
shl
jns
int
dec
out
push
popf
mov
fdivrl
push
xlat
xchg
mov
dec
or
outsb
mov
pop
lds
mov
cld
out
imul
pop
xchg
cmp
mov
jle
push
movsl
xchg
lcall
sub
leave
pusha
rorl
push
aas
imull
sbb
mov
xor
adc
mov
cmp
nop
push
mov
sbb
fsubl
lret
add
mov
adc
enter
mov
mov
orl
push
imul
cli
mov
rol
push
in
rep
inc
leave
adc
loop
ljmp
mov
test
mov
jmp
pop
in
andnps
scas
or
or
and
pop
repz
inc
pushf
xor
and
dec
fldenv
lret
outsl
loop
dec
in
xsha1
cmpsb
leave
imul
jae
fstpl
mov
pop
mov
mov
pop
shrl
rorl
in
xchg
sub
push
sbb
decb
add
nop
pop
sti
xchg
push
inc
mov
and
enter
fidivl
fistps
mov
mov
cli
xorl
shll
aad
jmp
lods
enter
aas
jmp
jge
cmp
and
imul
mov
mov
rol
xchg
adc
push
pop
dec
sub
jle
mov
pop
lahf
dec
loope
jnp
cmp
in
and
shl
stc
loop
and
sbb
fidivl
scas
sub
repz
and
lea
mov
mov
pop
inc
mov
push
popf
mov
lret
stos
sub
fstpt
mov
mov
arpl
popa
mov
push
call
add
xchg
sub
sahf
inc
fimull
int
or
movsl
add
pusha
mov
in
and
iret
aam
mov
mov
xor
xchg
sub
xor
idivb
clc
mov
mov
test
jmp
dec
add
xchg
sub
ds
sbb
add
xchg
cs
fdivl
adc
js
testb
push
dec
jecxz
sbb
mov
ja
jmp
fwait
mov
or
fistl
int3
arpl
jmp
adc
outsb
sub
testl
jae
inc
mov
outsb
add
cs
jle
inc
xchg
xchg
insl
or
outsl
push
jo
sbb
scas
inc
data16
imul
mov
lods
pop
pop
cmc
inc
add
mov
fs
xorb
sbbl
sbb
dec
mov
je
lods
shll
and
faddl
mov
lret
lock
jb
adc
push
push
sbbl
pop
cwtl
popa
dec
or
mov
or
and
cli
stc
push
in
mov
mov
clc
fs
push
shl
dec
mov
sub
outsl
xlat
shrl
jl
out
inc
mov
adc
fwait
or
fsubrs
jb
into
popa
push
ret
sbb
adc
test
dec
outsb
in
test
pop
xchg
sub
scas
test
sub
push
stos
loop
dec
in
add
sahf
push
push
push
push
push
jmp
inc
pop
and
outsb
mov
clc
jle
add
and
jnp
lock
dec
shlb
lahf
out
cmp
dec
mov
xchg
add
fcoml
sbb
cmp
cmpl
ret
mov
jmp
mov
test
pop
int3
fucomi
lahf
ss
inc
leave
rclb
lret
or
jmp
add
out
mov
pushf
pusha
inc
aaa
sahf
das
mov
sub
push
aaa
enter
gs
mov
insl
pop
cmp
int3
arpl
popf
add
adc
push
ljmp
bnd
shlb
popf
add
mov
xor
dec
adc
pop
xorb
ret
adc
repz
sarb
pop
lds
inc
inc
insl
inc
js
jmp
mov
shrl
adc
cwtl
lods
push
icebp
mov
mov
call
shrl
xor
jbe
cmc
pop
jnp
dec
clc
jmp
lea
jnp
push
ret
pop
cli
imul
dec
fwait
int
mov
mov
sub
jl
out
jl
rolb
sbbl
addr16
roll
jbe
xchg
shlb
dec
push
aas
xchg
addr16
fwait
test
sbb
mov
mov
push
mov
pop
iret
ss
hlt
aaa
stc
out
dec
loopne
jmp
xchg
jmp
enter
jp
stc
insl
flds
stos
dec
aam
pop
mov
mov
xchg
pop
jecxz
or
cs
fsts
or
pushf
xchg
sub
adc
inc
rcrb
add
scas
push
sub
xchg
inc
xchg
adc
add
popa
xor
pop
sti
jg
out
loope
xchg
fcomps
loopne
loope
pop
idivl
jle
outsl
jp
inc
movsl
cmpsl
pop
repz
push
aad
mov
inc
or
into
pop
test
in
imul
stos
xchg
xchg
mov
mov
fiaddl
popf
repz
loop
dec
loope
add
mov
lret
sti
pop
test
mov
testl
jne
data16
dec
push
sbb
int
popf
xor
sbb
dec
pop
jecxz
mov
or
xchg
sub
add
jge
int
mov
mov
xchg
or
shll
and
imul
pushf
mov
ficomps
push
dec
xor
popa
insb
mov
xchg
pop
inc
or
xchg
inc
xlat
sbb
pop
mov
pop
notl
iret
pop
push
cltd
pop
fistpl
loopne
js
push
mov
iret
inc
imul
adc
pop
adc
fbstp
lock
iret
lret
pop
pusha
les
repnz
imul
addl
adc
insl
cmp
nop
mov
stos
inc
pushf
dec
adc
push
sbb
mov
scas
sub
push
lods
adc
sub
mov
call
or
subb
push
mov
xchg
and
mov
push
icebp
outsl
push
lret
jne
iret
xor
cli
xchg
mov
xor
outsb
insl
add
and
dec
gs
pop
out
or
jg
mov
inc
adc
mov
sti
cmp
lret
add
iret
cld
xchg
add
xor
push
dec
add
lea
mov
fildll
ret
ret
mov
pop
aam
sbb
ljmp
bound
mov
das
cmc
or
sti
xchg
stos
lods
testl
lea
mov
push
stos
xchg
or
lahf
ss
shrb
xchg
leave
pusha
sbb
xchg
sub
cmp
arpl
stos
hlt
mov
std
cwtl
das
sbb
scas
out
popa
rcl
pop
loope
xor
testl
mov
xchg
sub
subb
and
insb
ja
lock
int
cmc
dec
in
jle
jl
repnz
mov
cmpsl
test
scas
mov
inc
call
or
sahf
popf
mov
jne
daa
stos
inc
pop
pop
xchg
sub
ror
arpl
insb
fnstenv
or
mov
shrl
mov
adc
add
push
xchg
daa
je
inc
dec
dec
in
test
mov
mov
ret
fildl
ljmp
or
insl
imul
shlb
xor
mov
jg
in
dec
pop
jnp
popf
dec
cmp
sbb
cmpsb
cmpsb
cmp
pop
sbb
outsb
dec
sbbb
and
sub
inc
inc
ficoms
fbstp
jae
into
movsb
xor
in
shrl
add
xchg
sub
mov
int3
arpl
fildl
fimull
push
add
ja
jl
or
repnz
mov
or
iret
data16
outsl
out
test
mov
leave
push
pop
xchg
sub
lods
in
std
movsl
adc
lods
adc
inc
into
clc
out
fs
lcall
mov
push
in
sub
push
out
arpl
or
and
and
cmp
push
pop
jo
outsb
ja
mov
mov
out
aas
fnsave
sbb
xchg
leave
push
call
push
push
push
out
xchg
das
into
gs
mov
stc
mov
popf
xor
xlat
adcb
vpshufd
add
mov
sbbl
fcoms
andb
mov
mov
ret
pop
fiadds
lds
jne
in
push
add
inc
movsb
pop
sahf
aad
mov
movsl
out
cmp
rorb
and
xor
ficomps
inc
flds
movsb
pusha
not
rolb
adc
push
dec
pushf
xor
push
test
lret
cld
lock
push
cld
xchg
push
inc
testb
pop
adc
mov
xor
fldl
fwait
scas
sbb
cmp
and
inc
and
lock
gs
jmp
inc
xchg
out
mov
cltd
fsubrs
loop
xchg
xchg
dec
div
mov
mov
dec
cmp
je
jnp
push
add
cltd
xor
call
inc
clc
nop
mov
scas
scas
add
sub
rcll
xchg
ror
mov
leave
add
push
or
jnp
sbbb
ss
or
jnp
in
in
xchg
xor
lea
mov
push
mov
lcall
xor
ds
or
clc
push
mov
in
data16
ljmp
push
in
ja
cmp
add
test
andl
and
arpl
repz
cmp
jl
jno
jmp
lret
push
xor
fnstenv
sub
inc
sahf
data16
mov
jmp
sahf
out
sub
fildll
rcrb
sub
mov
stc
mov
push
insl
add
push
or
lcall
lcall
mov
mov
test
icebp
or
sub
shlb
mov
xor
jbe
lea
mov
ret
dec
dec
or
cmc
and
lret
sub
sub
les
mov
xchg
or
sbb
and
and
in
pop
push
or
jl
add
jp
fiaddl
andl
repnz
test
xor
popf
add
and
outsl
xorl
cmpsl
add
aas
scas
imul
sub
adc
mov
and
je
test
sbb
js
ficompl
ljmp
fs
lcall
push
jo
in
ds
jmp
adc
or
or
mov
aaa
dec
jb
out
mov
fsubs
mov
push
das
ret
popa
sub
xchg
sbb
fmuls
xorl
adc
pop
mov
adcb
vpaddd
icebp
adc
cld
inc
fcompl
xor
popa
lahf
shll
movsl
aas
jo
dec
repnz
data16
sbb
lds
and
sub
ret
fnstsw
mov
push
loope
and
mov
pop
jmp
cld
fildll
cmpsb
xorb
add
sub
dec
sbb
pop
jecxz
add
jnp
adc
mov
jb
ljmp
sbb
in
cltd
aam
fwait
test
jae
je
xchg
enter
pop
scas
cltd
mov
mov
cltd
sbb
inc
into
xor
outsb
gs
enter
xor
jne
mov
loop
aam
testb
jge
out
cld
mov
mov
arpl
cmp
lods
fistl
sbbl
stos
insl
js
and
inc
sbb
pop
adc
push
push
dec
bound
shll
add
jmp
into
or
jmp
xor
aas
xchg
in
adc
dec
fs
jae
cmp
lods
cwtl
push
push
pusha
addl
jae
out
sbb
lcall
cwtl
xchg
lods
ljmp
lcall
test
lret
test
in
mov
lods
push
in
fisubs
cwtl
mov
int3
jne
clc
xchg
sbb
inc
es
in
mov
xchg
add
int
mov
mov
inc
cmp
jae
sub
xchg
dec
mov
clc
pop
xor
xchg
shll
xor
sub
repz
mull
jns
inc
iret
mov
sahf
mov
xchg
fs
mov
loopne
jl
jno
push
push
stc
cld
out
imul
stc
popa
dec
mov
ja
out
or
push
xchg
inc
fwait
or
sbb
pop
loopne
xor
jae
out
xchg
or
shll
add
or
xor
sbb
popf
ret
movsb
adc
push
push
xor
xchg
das
fstpl
jo
test
aaa
gs
mov
jne
pushf
lahf
sbb
xor
arpl
enter
test
imul
xor
inc
xchg
out
gs
repz
mov
xor
xchg
mov
jb
xchg
sub
xchg
mov
pop
sbb
pop
dec
add
call
js
adc
mov
mov
cmp
mov
sarl
movsb
mov
add
fiaddl
push
adc
dec
iret
ficoms
adc
lock
ret
out
lcall
inc
jo
jno
ss
mov
push
mov
adc
mov
xor
and
ss
cld
mov
popa
idivl
push
inc
mov
pop
jle
jmp
mov
stos
sub
gs
push
jecxz
sub
rcll
sti
mov
xchg
xchg
mov
cwtl
cld
xchg
lret
cli
jb
sbbl
test
xchg
les
nop
adc
add
xchg
imul
addb
xchg
jge
add
fs
sbb
int
in
fs
mov
adc
jecxz
adc
cmp
push
or
xor
jmp
push
or
jo
lods
mov
mov
out
xchg
add
xchg
add
jmp
sub
pop
lods
outsl
int3
xchg
loop
cs
lods
jp
mov
addr16
sub
pusha
into
xor
rep
out
push
lahf
dec
insb
test
lret
int3
xchg
jecxz
lds
dec
mov
fxtract
lods
out
push
lds
divl
add
test
push
popf
push
push
out
popf
lods
das
adc
in
jg
jae
adc
std
mov
shl
mov
daa
push
loopne
dec
sti
cmove
stos
jmp
addl
jnp
mov
mov
arpl
dec
sub
xchg
sbb
out
mov
xchg
out
xor
pop
int
stc
dec
test
mov
push
outsl
add
jo
es
and
xchg
mov
je
sub
jg
pop
adc
push
mov
popf
xor
ret
xor
mov
int
mov
call
jno
outsl
mull
popa
mov
cmp
sbb
xchg
pushf
test
pop
shl
sbb
jecxz
cltd
outsl
or
mov
xchg
mov
push
es
push
add
ljmp
mov
sahf
mov
ret
ret
ret
ret
or
testl
xchg
mov
mov
addr16
xchg
sbb
cmc
arpl
sbb
cmp
and
cmpsl
add
add
out
addl
inc
mov
idivb
add
or
andl
pusha
xchg
cmc
mov
adc
fdivrs
sbb
cmpsb
sub
in
dec
cwtl
and
shlb
sub
enter
or
es
and
fsubl
movl
addr16
repnz
sti
call
movsb
out
shl
or
pop
pop
outsl
mov
adc
sub
dec
loope
fisttpll
fidivrl
pop
xchg
mov
and
cmpsl
sub
jbe
sahf
jae
incb
inc
jecxz
jb
clc
push
mov
cmp
cmp
call
test
popf
nop
pusha
jnp
xorl
dec
jae
mov
dec
adc
out
push
gs
jge
sub
es
scas
add
gs
cmpsl
stos
sbb
test
stos
pop
lock
xchg
add
mov
fiaddl
sub
test
mov
in
pusha
inc
fldcw
je
sub
mov
fcoms
movsb
mov
add
cmp
nop
xchg
cmp
daa
pop
mov
mov
mov
in
fimull
scas
das
jnp
mov
lds
div
aad
add
xchg
ja
pop
sbb
aad
nop
adc
xor
cmp
push
loopne
cmp
sti
xchg
cmp
loopne
push
cmp
loope
pop
adc
adc
mov
fcomp
push
lahf
andl
sbb
jle
xor
in
popa
lds
mov
loope
jmp
pop
mov
loopne
aam
cmp
cmc
mov
xlat
out
lods
aas
xchg
dec
dec
imul
and
cmpsb
push
mov
jg
cmpl
fs
sbb
lds
jg
add
sti
jb
jg
xchg
cmp
test
cmpsb
cmc
ds
mov
shll
sub
mov
pushf
adc
inc
sub
cmp
jecxz
xchg
xchg
mov
sbb
add
aad
lret
add
into
out
pmuludq
pushf
and
add
mov
stos
jle
int
cmp
jle
pop
pop
insb
push
mov
test
mov
or
jmp
push
mov
nop
pop
or
das
aaa
cmp
insb
push
push
sahf
sti
rcl
ds
mov
adc
push
aam
and
push
icebp
ja
jp
adc
xchg
inc
xor
jecxz
sbb
cwtl
sub
cmp
xor
shrb
push
out
lret
dec
and
sub
inc
pop
ficompl
leave
nop
sti
test
xchg
pusha
leave
mov
gs
jb
aas
cmc
xchg
sub
lahf
pop
hlt
sarb
sti
pop
push
jnp
pop
mov
ret
adc
adc
adc
pcmpeqb
pop
sub
sti
repnz
xchg
and
lds
adc
pop
and
add
push
push
sbb
jb
mov
add
jp
jp
aam
jge
pop
cld
nop
sub
mov
sbb
iret
mov
stos
jecxz
pop
adc
mov
mov
imul
add
mov
out
pop
stos
cli
add
push
popf
stos
iret
jnp
popa
lret
and
enter
xor
or
mov
pop
push
orl
popa
lret
rcr
sbb
xlat
mov
pop
jge
mov
js
inc
jmp
das
aas
push
dec
pop
repz
cltd
xor
jmp
popf
sti
and
in
ret
out
std
lds
jmp
fildl
leave
pop
and
test
mov
dec
fsubrp
xor
or
aaa
fisubrl
nop
fidivs
cwtl
int3
push
bound
mov
sub
xchg
cltd
dec
addl
inc
jge
out
cmpsl
jecxz
iret
adc
fistps
xchg
outsl
ret
cwtl
addr16
leave
int
mov
sbb
jl
or
fucom
jle
nop
sub
mov
xor
xchg
std
mov
das
sbb
cwtl
ret
cld
inc
dec
outsl
ret
cmpl
mov
pop
inc
pushf
adc
add
jecxz
fucomi
sbb
sub
adc
repz
mov
adc
push
das
xabort
xchg
mov
sbb
dec
push
aas
push
lods
push
jae
inc
xchg
js
test
inc
push
inc
flds
xor
cmpsb
inc
ss
lret
roll
or
mov
sarb
ljmp
test
mov
addb
test
lahf
push
inc
popa
cmp
test
ret
popa
stc
push
adc
push
divb
pusha
add
mov
fld
andb
and
push
cmc
leave
inc
mov
push
lcall
push
jmp
jp
aas
jno
xor
shl
mov
loopne
and
rol
out
jle
pop
adc
jns
divps
lds
mov
push
jecxz
iret
das
insb
sub
imul
adc
jmp
test
xchg
xchg
xchg
sub
sub
pop
fdiv
out
mov
ljmp
lret
popa
mov
push
lods
aas
push
or
pop
sarb
negl
push
jne
xchg
xor
test
mov
repz
mov
aas
sarb
mov
sub
or
mov
ja
stos
mov
imul
divb
test
out
jo
or
jl
insl
and
pop
sbb
popl
fmuls
jae
bound
shlb
lret
jns
xor
in
sub
xor
mov
mov
sbb
pop
out
outsb
dec
fsubl
mov
xor
in
out
decb
frstor
push
loopne
push
sti
dec
mov
jmp
sub
pop
pop
adc
insb
divl
test
adc
pop
mov
fst
mov
push
xchg
lods
out
fbld
rcrl
out
cmp
fists
adc
sub
repz
sbb
adc
cmpsl
call
mov
cli
xor
add
out
rcrb
lret
arpl
leave
pop
jbe
adc
stc
enter
inc
jmp
push
push
out
sbb
in
imul
mov
negl
loopne
adc
and
arpl
stos
ljmp
mov
cmp
mov
movsl
xchg
pop
je
jecxz
cs
dec
aaa
int
ds
out
push
cmp
iret
jo
xlat
push
aad
test
adc
cmp
mov
dec
mov
iret
push
outsl
push
clc
inc
mov
inc
ret
aad
pop
ret
inc
loope
inc
mov
pop
sarb
xchg
sub
leave
and
cli
test
inc
std
jae,pn
ds
aaa
movsl
outsl
ss
shr
test
lds
repnz
mov
stos
jb
adc
xchg
cs
mov
adc
inc
sbbb
in
xor
mov
add
out
aaa
addl
inc
lcall
inc
loopne
or
scas
mov
mov
inc
mov
fnstcw
pop
fdivrs
lods
dec
push
clc
faddl
pop
xchg
aas
lds
test
add
xor
xor
call
test
inc
into
orb
fnsave
js
stos
xor
xchg
decb
rolb
and
pop
adc
insb
push
and
inc
mov
sti
jnp
in
xor
jge
inc
ljmp
in
outsb
mov
aam
testl
push
push
out
fstpl
mov
add
dec
testl
sbb
out
cli
xchg
inc
lret
bound
imul
testl
jae
aas
clc
repnz
outsb
and
pop
mov
inc
not
add
loop
sbb
sub
mov
dec
pop
inc
or
mov
or
cmc
lcall
jmp
std
iret
and
add
scas
inc
fcomp
mov
fisubl
in
xor
pop
lds
pop
jl
push
sub
sub
push
lods
mov
push
push
loope
xchg
cmc
pop
sub
stc
inc
inc
push
cmpsb
mov
dec
fadds
sub
shrb
mov
ljmp
gs
lret
mov
out
or
push
mov
mov
xchg
add
cld
and
mov
int
je
insl
mov
les
sub
or
jmp
test
sbb
lods
jmp
addr16
sbb
ret
movsb
or
pusha
negl
pushf
mov
lock
mov
jae
pop
fcomip
xchg
leave
popf
adc
or
mov
sbb
cmc
addb
jbe
xchg
addr16
aaa
into
inc
ss
jle
es
xchg
xchg
fs
ffree
xchg
push
enter
mov
jge
outsl
push
push
loopne
xchg
test
clc
outsb
sbb
cwtl
aaa
icebp
xchg
add
fmul
mov
je
popf
mov
rcrb
pushf
out
ljmp
push
dec
hlt
sbb
mov
xor
clc
addr16
push
jge
imul
or
add
lods
jne
mov
sarb
and
push
and
cmpsl
out
into
les
jmp
mov
adcl
and
call
fisubl
push
pop
insl
fstpt
into
mov
xlat
push
ror
subl
xchg
sbb
cmp
sbb
shrb
jbe
into
lds
insb
aam
add
dec
outsb
jp
out
orl
sub
mov
xchg
data16
cmpsl
int
inc
pusha
push
push
loopne
xor
or
enter
imul
dec
mov
add
jbe
ret
data16
out
ret
add
jns
cld
push
add
stos
loope
push
lock
int
ds
adc
and
xchg
pop
mov
sub
sbbb
fistpll
popf
lods
cmp
jbe
lock
call
push
jecxz
inc
insl
fidivs
data16
push
cld
ds
cmp
lahf
adc
sbb
pop
loope
and
pop
dec
xor
xor
das
ret
xor
xlat
out
add
aam
movsl
shlb
jae
push
out
cmp
orb
hlt
ljmp
gs
push
adc
or
jg
mov
adcl
jg
adc
sbb
enter
gs
ss
daa
push
fcoml
out
xchg
inc
and
pushl
mov
mov
nop
jl
mov
mov
inc
pop
and
sub
out
rcrb
test
mov
fiaddl
inc
xor
cmp
hlt
aaa
mov
sbb
lahf
add
mov
iret
gs
in
dec
mov
pusha
inc
push
dec
and
mov
and
out
xchg
mov
inc
or
stos
inc
in
in
lret
bswap
int
add
xchg
btr
sub
outsb
out
sti
mov
add
daa
lds
mov
negb
aas
pop
imul
popf
inc
iret
fisttps
and
sub
pop
stos
xchg
lahf
or
orl
add
lahf
mov
xchg
jb
outsb
jnp
loop
pop
pushf
mov
test
inc
movsl
loope
adc
inc
inc
neg
cmp
cmp
pop
or
mov
fists
out
mov
lahf
and
sub
jmp
sub
insl
lods
jne
push
push
or
inc
inc
mov
xor
dec
call
push
jno
ja
js
aad
cwtl
mov
xchg
sub
dec
in
ret
push
ljmp
mov
repnz
sarb
lret
fdivrs
arpl
idivl
enter
outsb
sub
out
cld
in
rorb
sbb
dec
cmc
xchg
add
icebp
xchg
and
out
lods
dec
pop
rolb
xchg
dec
jge
int3
lods
add
rcrb
pop
repnz
sbb
sub
pushf
popf
shrl
add
daa
lds
xchg
mov
or
mov
fisubrs
jl
pop
lret
repnz
loope
lods
aas
add
cmp
push
imul
addl
sub
inc
add
and
add
lock
and
cmp
repnz
add
cwtl
fsts
xor
dec
test
cmc
repnz
jns
sub
and
jae
mov
int
adc
dec
mov
and
pop
pop
lea
adc
outsb
dec
xchg
dec
mov
adc
jge
xchg
hlt
jns
add
dec
jne
sbb
sahf
mov
lock
add
js
or
jl
pop
sub
add
xchg
jnp
mov
or
push
rcl
in
arpl
sbb
sti
out
ss
sbb
call
stos
outsl
ds
movsb
in
xor
rcrl
or
or
fstpl
jne
fs
pop
orl
ret
stc
add
fadd
mov
xor
enter
daa
xlat
cmp
cmpsb
imul
mov
adc
pushl
sbb
jg
mov
je
std
mov
and
xor
cli
icebp
jp
lods
sbb
insb
arpl
xor
test
xor
scas
push
mov
fistps
mov
xlat
sub
nop
dec
cli
xchg
fidivs
mov
jno
dec
pop
aad
mov
cmpsl
out
and
mov
dec
pop
mov
push
fwait
clc
jecxz
sub
sub
es
and
insl
int
push
xor
mov
cmp
pusha
ljmp
mov
sub
push
dec
ror
fstpt
add
cmpsb
lea
bound
mov
and
jp
mov
cmp
push
gs
fwait
adc
sti
imul
jb
xor
add
addl
arpl
xchg
rclb
das
dec
clc
sahf
cld
push
jge
or
sbb
pop
or
mov
pop
loope
add
inc
and
lahf
adc
dec
xlat
scas
mov
fildl
jecxz
add
fidivrs
push
addr16
mov
lds
push
dec
jmp
or
loope
test
inc
adc
inc
push
add
push
xchg
jno
fs
aad
sbb
pop
lods
rcr
jg
stos
test
pop
cmpl
fstpt
sbb
call
jo
cmp
lods
inc
sub
insl
pop
sbbl
es
jg
ret
not
jns
loop
dec
cs
add
add
mov
pop
outsl
xchg
andl
in
xor
push
sub
pop
jecxz
mov
sbb
fdiv
inc
pop
fucom
mov
lods
mov
and
pop
out
xchg
add
xchg
mov
push
sub
add
mov
add
sti
push
or
mov
loope
jno
push
mov
enter
aaa
mov
xor
push
lret
bound
xchg
push
jmp
jo
fisttps
fstpt
mov
adc
xlat
mov
push
jp
int
jo
pop
add
loope
stc
mov
xor
or
sti
jbe
insb
and
xor
out
xchg
ds
das
add
and
inc
ja
test
aaa
lret
icebp
and
aam
insl
jge
cmc
cmp
adc
test
cwtl
add
cmpsl
stc
cmp
das
mov
incb
cltd
das
stos
mov
pushf
in
sub
mov
mov
movsb
outsb
sbb
add
xchg
icebp
movsl
mov
mov
add
adc
mov
mov
gs
xchg
aas
inc
jge
cmc
cmp
das
push
nop
dec
adc
add
and
mov
cli
fnsave
xchg
inc
test
xchg
jmp
sti
sbb
xchg
xor
std
mov
mov
mov
mov
and
push
stos
jae
sub
jle
xchg
fldt
lea
insl
xchg
fisttpl
jns
sti
mov
sub
popf
in
orl
fidivs
push
rcrl
enter
adc
lock
add
pop
adc
xchg
add
cmpsl
xchg
pop
xor
cmp
ret
pop
int3
cmpl
cmp
lods
out
out
jae
push
movsl
mov
lcall
les
and
jmp
and
sbb
sbb
fidivrs
bound
outsb
cmp
mov
or
adc
es
orl
or
mov
aaa
fs
cmp
mov
stos
imul
mov
jnp
lret
push
imulb
inc
push
hlt
xchg
pop
xchg
test
aad
mov
push
mov
pusha
decl
xchg
insl
push
mov
aas
add
mov
xchg
dec
pusha
ss
idivb
rclb
ret
mov
lods
out
aaa
sub
out
lods
sbb
rcl
dec
pusha
and
sti
pop
out
cld
mov
lds
xor
xchg
or
scas
sbb
lcall
or
mov
pop
sbb
jnp
fnstcw
sbb
aaa
lods
cmp
jo
ja
jge
xchg
lods
add
pop
enter
or
fnstenv
std
loop
negl
les
push
lock
dec
pop
xor
mov
fidivrs
adc
jne
or
rcl
cwtl
mov
mov
xor
or
or
mov
push
inc
jmp
xchg
adc
ja
jecxz
cmp
xchg
daa
jmp
inc
or
popa
ds
call
mov
in
out
xor
andb
push
fnsave
pop
loope
xchg
and
sahf
mov
inc
mov
aaa
or
lcall
mov
mov
aad
es
sti
xor
mov
and
incb
pushf
stc
fisubrs
negl
std
adc
adc
xchg
insb
insl
sbb
mov
out
cld
test
movsl
ret
adc
aaa
mov
mov
je
lock
gs
and
divps
mov
aas
cmpsb
xor
scas
ds
lcall
dec
ljmp
fisubrl
adc
jp
mov
or
xor
pop
ljmp
mov
and
pop
adc
int
ds
push
lods
call
inc
ss
outsl
out
ja
inc
xchg
test
sarl
dec
cld
push
jb
mov
mov
or
push
add
imull
outsb
and
cmpsl
cmp
add
push
sbb
fisubs
cmp
sub
mov
clc
fs
jne
inc
js
clc
push
mov
icebp
bound
pop
fwait
xchg
cltd
shl
mov
arpl
das
inc
pop
in
std
cmp
mov
rorb
pushf
mov
sub
test
lahf
mov
ret
xor
jp,pn
pop
and
lods
and
adc
fs
inc
mov
dec
enter
mov
xor
dec
xor
push
data16
rcr
pop
fdivs
aad
xchg
cltd
or
dec
stos
scas
pop
pop
insl
mov
fs
jno
inc
icebp
cmp
jo
cmp
push
dec
mov
andb
cltd
das
and
lock
lret
and
mov
iret
movsl
out
shll
push
iret
shl
mov
pop
adc
inc
jg
mov
pop
xor
dec
and
push
rol
cmp
loop
scas
push
and
lds
btc
mov
mov
hlt
aam
aas
rclb
pop
cwtl
or
mov
sti
inc
or
jbe
mov
stos
or
cld
lods
gs
insl
add
movsb
sub
popa
push
fsubl
test
xor
pop
push
xor
inc
adc
mov
add
dec
popf
push
cs
sub
mov
dec
loope
test
imul
outsl
cmp
or
movsl
mov
push
mov
into
push
es
testl
inc
scas
roll
test
or
mov
fcmovbe
insl
loop
mov
push
pop
pop
mov
jbe
mov
dec
test
inc
fiaddl
sub
call
les
jno
pop
scas
pop
mov
clc
bound
loopne
pop
dec
and
dec
xor
jnp
lahf
or
scas
test
sahf
inc
xlat
iret
leave
sbb
push
clc
in
sub
into
xchg
test
jmp
popa
call
inc
gs
push
or
cmp
sbb
push
mov
shrl
sbb
cmp
push
call
and
repz
out
arpl
push
and
add
xlat
push
or
popa
mov
fldenv
and
out
fsubs
or
inc
mov
aas
and
xor
rcrl
mov
add
data16
pop
insb
arpl
cmpsb
dec
mov
mov
mov
mov
lret
stc
jb
xor
stos
lret
bound
icebp
pop
dec
push
ljmp
in
cwtl
and
sbb
mov
xlat
pop
lods
xlat
mov
repz
stos
fs
xor
notb
jge
add
jno
stc
sub
xor
pop
mov
andb
mov
sbb
loope
dec
mov
xor
fisubrl
loopne
test
lock
jb
or
adc
mov
dec
icebp
aaa
sub
sub
jle
dec
daa
adc
add
int3
xor
in
jno
sbb
fdivs
fdivrl
jmp
adc
test
jmp
xchg
orb
ss
ss
fwait
aam
add
outsb
cmpsl
mov
and
xchg
mov
or
push
lods
dec
je
or
pusha
push
push
push
cmp
inc
test
or
cltd
sbb
ret
insl
call
sahf
mov
bound
lea
test
or
out
in
pop
xchg
sbb
mov
mov
xchg
adc
and
mov
inc
adc
stc
popf
dec
mov
mov
ficomps
sub
mov
xchg
jo
test
mov
in
test
or
loope
xchg
scas
xlat
add
movsb
xor
xchg
sub
pop
iret
into
or
mov
jp
mov
cmpsb
popa
jo
icebp
xor
bound
and
mov
fs
cmp
pop
loop
xchg
adc
sbb
mov
cmp
or
and
mov
fbstp
mov
or
pusha
xor
mov
dec
push
and
loop
incl
loope
sbb
dec
and
dec
dec
push
cmp
push
rorb
into
sub
test
sub
sarb
fcomi
notb
leave
xchg
jnp
movsl
add
ds
cmp
xchg
shl
stos
push
dec
pop
inc
lret
xchg
cmp
push
es
jmp
jnp
jnp
pop
mov
sub
push
cmp
movsl
cmp
subb
imul
xor
lea
jge
and
inc
jno
ja
add
addr16
xchg
outsl
push
in
jno
xchg
cs
scas
mov
lret
fildll
leave
pop
fsubl
shlb
inc
fwait
inc
std
adc
data16
insb
add
inc
cwtl
sub
push
inc
xchg
mov
mov
push
xchg
mov
adc
push
and
sbb
xchg
pop
dec
sbb
mov
sub
fbld
out
sub
pop
jle
lods
iret
scas
cmp
in
lea
add
fwait
cltd
aad
lret
cld
sbb
sub
push
ret
and
sbbl
dec
lods
loopne
scas
push
or
cmc
pusha
xchg
dec
in
test
mov
push
inc
xlat
xor
pop
xor
inc
mov
jp
sub
dec
bound
out
aas
shlb
or
fsubp
push
fadd
in
ljmp
mov
push
adcb
js
push
mov
push
xchg
out
out
mov
sub
cmp
or
xchg
ljmp
cltd
clc
and
mov
mov
fs
sub
push
imul
jmp
sbb
jbe
mov
or
insb
jle
push
cmp
ss
fwait
ss
push
lds
test
sub
sbb
inc
jg
popa
mov
loopne
or
cmp
cltd
mov
push
negl
mov
out
push
lods
filds
icebp
ret
call
dec
push
daa
push
sub
insl
jo
clc
adc
push
add
sub
andb
insb
dec
lret
adcl
or
push
push
cwtl
ja
mov
mov
pop
outsb
xchg
insb
orl
lcall
add
cld
cwtl
inc
repnz
stos
fsubrp
jns
inc
lcall
mov
data16
pop
cwtl
sbb
jns
incb
or
rcll
sbbb
cmp
cmp
xchg
ret
mov
sub
dec
dec
andl
sub
xor
or
fwait
add
mov
jecxz
ret
sub
es
push
pop
imul
lahf
adc
test
pusha
mov
mov
jns
fwait
push
push
int
xchg
cmp
outsl
dec
iret
push
sbb
sub
jne
xorb
inc
and
gs
out
jmp
sbb
jne
mov
push
bound
mov
mov
roll
mov
int
jmp
sbb
das
ds
adc
ror
in
sub
popf
adc
dec
fucomp
sub
call
pop
pop
push
jb
add
and
pop
push
test
daa
sbb
loop
push
lea
les
jnp
cmpsl
mov
cwtl
daa
aaa
pop
push
adc
and
movsb
mov
xor
fldt
cmovs
aas
movsl
xchg
aaa
jl
mov
cmp
pop
jg
push
ljmp
and
push
sbb
fisttpl
stos
bound
mov
inc
out
inc
xchg
sub
loopne
repz
sbb
sub
shrb
dec
pop
cmp
and
dec
lods
mov
sbb
aas
lods
inc
jno
cmpsb
cmp
shl
push
adc
mov
jbe
aaa
leave
js
pop
std
sub
repnz
in
jecxz
fs
xchg
inc
xchg
xor
pushf
mov
xchg
stos
inc
add
mov
xchg
jp
lcall
popa
adcl
dec
mov
hlt
mov
scas
nop
dec
or
jge
and
xchg
inc
enter
subl
sbb
ja
pop
xchg
ja
andb
movsl
icebp
in
or
gs
xor
mov
mov
or
imul
push
call
dec
add
jl
add
inc
shrl
xchg
add
in
movsb
and
lea
std
mov
or
addr16
das
sbb
ljmp
sub
adc
inc
cmpsl
cmp
mov
cs
stc
cli
adc
push
nop
pop
repz
fidivrl
mov
or
lods
ja
movsl
and
hlt
push
cmpsb
push
mov
mov
test
ret
dec
in
dec
mov
jp
pop
lods
pop
nop
adcb
fidivs
jb
mov
rorb
xor
fdivs
cmp
pop
out
dec
inc
ret
and
cmpsl
jge
fdivr
sbb
cmpsb
outsb
stc
xchg
inc
or
jae
ret
rolb
movb
das
cmp
pop
mov
push
into
mov
je
adc
aaa
ffreep
inc
repnz
cmp
movb
insl
cmpsl
dec
mov
repnz
sbb
scas
sbb
pusha
cli
fwait
stc
mov
and
mov
addr16
pop
fisttps
std
adc
ds
addb
outsb
adc
pop
out
jecxz
cwtl
pop
xchg
clc
xlat
cs
dec
sarl
aam
xor
xchg
pop
mov
jo
jne
xchg
add
dec
test
test
xor
lcall
in
inc
push
push
fcmovb
xlat
int
repz
mov
xchg
aam
sbb
mov
dec
cmpl
dec
mov
push
push
je
push
adc
xchg
jle
xchg
push
mov
fstpt
or
scas
int3
stos
mov
mov
xor
jbe
jmp
dec
adc
mov
push
cmc
shll
out
jmp
bound
jb
in
push
imulb
push
cwtl
pop
jg
addr16
add
ss
out
ret
pop
clc
jl
loopne
dec
cmc
mov
pop
test
fdivrl
adc
jns
es
lea
jne
imul
jns
jl
pushf
pop
div
pop
imul
sub
fildll
popa
jae
jl
enter
xlat
sbb
fstps
ja
ja
test
lret
pop
xor
pop
xchg
sub
out
xor
ss
outsb
inc
sub
test
dec
lahf
xchg
dec
imul
cld
inc
scas
das
inc
cld
or
lret
push
jo
movsl
or
mov
xchg
jns
dec
push
or
xchg
lock
adc
fwait
xor
add
mov
lds
xor
add
push
in
dec
mov
inc
sbb
imul
xchg
hlt
and
add
out
mov
jg
inc
mov
js
push
sub
inc
popa
mov
xor
sbb
loop
fsubrl
mov
pusha
lea
lods
xorl
inc
popa
mov
dec
icebp
ja
loopne
adc
mov
sbb
lret
sbb
out
sbb
ja
jmp
ss
sti
add
fiadds
enter
movsl
cmpl
xchg
lds
bound
call
in
notb
push
nop
movsb
dec
fistl
rorb
push
in
add
push
jae
fnstsw
cwtl
lods
and
push
cmpsb
pop
and
jno
cmp
mov
mov
insl
stos
fs
fmull
std
shll
test
mov
popa
jb
xchg
jp
and
jmp
and
stc
xchg
add
jle
mov
sbbl
push
lock
xchg
push
call
adc
outsl
loop
mov
dec
mov
in
nopl
cltd
es
cmp
ljmp
sbbl
lahf
repnz
roll
enter
popa
dec
mov
or
cmp
repnz
nop
mov
and
in
cmpsl
stos
and
nop
xor
jae
sub
xchg
and
mov
jmp
movsl
mov
int
cmp
sahf
pushf
sub
ljmp
jle
repz
faddp
xor
arpl
popa
add
imul
push
arpl
int3
inc
aaa
pop
cmp
cmp
dec
mov
in
mov
mov
fisubrs
pop
mov
lock
js
mov
cmp
mov
jno
xor
and
mov
int
jb
loope
adc
les
es
jg
aad
pushf
or
dec
out
test
in
fadd
jmp
xlat
sbb
and
shl
insb
movsl
aam
insl
inc
adc
sub
xchg
mov
mov
mov
cmp
lods
into
xchg
repz
or
xor
pop
stos
push
cs
or
push
sub
and
mov
repnz
out
ret
pop
and
in
dec
std
pop
jne
testb
sahf
pop
int3
push
dec
scas
and
pop
push
cmpsb
sbb
leave
adc
jnp
xor
jecxz
xchg
sub
mov
in
ds
cwtl
mov
pop
or
popa
hlt
out
mov
aad
cli
sbb
negb
cs
xchg
lahf
lds
jmp
movsl
mov
or
adc
rcrb
aad
jl
bound
mov
add
dec
in
loope
mov
push
cmpb
lret
ja
sbbl
adc
jecxz
les
mov
cltd
fdivrs
add
negl
xchg
adc
psrlw
clc
rcr
das
adc
xchg
xlat
inc
jo
xor
loopne
das
adc
cld
movsb
imul
stc
push
nop
sub
je
dec
imul
jae
pop
dec
cld
lcall
pop
fdivs
sahf
push
sub
jmp
insb
testb
in
imul
sbb
mulb
ja
xlat
inc
outsb
xchg
mov
adc
ret
cld
pop
cmpsb
adc
jecxz
or
jns
push
mov
shlb
out
sub
fdivrl
cmp
shlb
subb
add
cmpsb
pop
dec
movsl
xchg
or
cmpsb
mov
mov
ja
sub
inc
mov
push
dec
xchg
pop
icebp
ret
rcr
push
iret
test
inc
push
pushf
dec
sti
sbb
jno
xlat
push
loope
and
pop
cltd
out
lret
cmp
das
imul
xchg
push
fnstcw
and
sbb
shll
mov
jle
cld
scas
and
mov
lcall
lcall
in
xchg
lods
inc
dec
dec
inc
into
pop
mov
add
add
dec
pop
fisttps
cmp
sbb
mov
cmovp
xlat
ret
dec
stos
xlat
in
and
lcall
pop
pop
dec
cmp
jg
add
rcll
mov
add
fdivs
ss
loopne
pop
adc
xchg
xlat
fidivl
dec
or
pop
int
and
ss
push
insl
icebp
xchg
add
push
imul
ret
mov
jg
aad
popf
push
daa
ret
or
scas
sub
andl
mov
leave
daa
add
pusha
div
dec
and
lods
pop
and
push
jp
mov
adc
test
xorb
cmp
dec
insb
mov
insl
jnp
push
mov
mov
mov
dec
jmp
dec
in
mov
lds
xor
mov
ljmp
lods
shlb
push
out
xchg
xsha1
in
inc
pop
adc
lods
mov
into
mov
pop
or
out
bound
aam
fsts
push
test
fisttps
xor
xchg
mov
inc
rcr
scas
xchg
cli
adc
movsl
xor
xchg
scas
pop
scas
push
mul
mov
lods
cmp
in
decl
push
add
shll
pop
lods
add
lcall
das
xchg
movsl
inc
pushf
cltd
call
ffree
jo
add
mov
stos
and
xor
add
loopne
hlt
and
add
jmp
push
stc
andb
jae
int
jnp
and
mov
add
addb
xchg
int3
out
repz
sbb
aaa
hlt
push
jl
jno
fstpt
xchg
js
fdivs
in
in
stc
push
xor
ljmp
add
cld
fsubl
subl
int
dec
jb
lret
cmp
inc
les
les
aad
in
push
xchg
push
mov
mov
cmp
and
lret
int
sub
inc
fs
leave
int3
sti
test
inc
jo
daa
jno
stos
push
sub
jmp
inc
adc
dec
inc
insl
add
push
xor
addr16
and
arpl
push
pushf
jmp
std
sub
repnz
mov
jp
in
fs
loope
jecxz
repz
mov
dec
outsb
in
mov
call
stc
popf
shl
pop
dec
adc
lock
jmp
divl
mov
mov
xor
ss
add
or
out
leave
movsb
sahf
inc
enter
aas
push
jb
mov
xchg
mov
stos
bound
popa
cmpl
scas
imul
daa
jb
arpl
cltd
xchg
insb
xrelease
inc
push
push
ja
adc
dec
call
sub
add
out
mov
add
push
pop
or
and
sbb
inc
and
add
cmp
jecxz
or
add
mov
pop
push
outsl
out
rol
cmp
fildll
mov
xchg
cmpsb
xchg
or
imul
out
sub
cmp
aam
or
mov
outsl
push
dec
add
imul
add
ficompl
shlb
lret
bound
adc
sahf
sub
dec
leave
fldcw
inc
sbb
xchg
es
xchg
mov
mov
xchg
mov
push
mov
fcmovnb
mov
cmp
cmpsl
sti
sbb
insb
je
push
or
out
into
push
push
inc
push
sbb
repz
cli
adc
fmulp
outsl
push
dec
cmp
in
inc
push
dec
arpl
dec
cs
dec
mov
cmp
addr16
out
push
add
imul
add
sub
in
les
push
xlat
idivb
lock
fimuls
or
ja
mov
out
filds
push
shll
ffreep
jl
hlt
pop
push
dec
add
pop
push
dec
mov
icebp
js
dec
and
jae
ficompl
cmp
push
clc
nop
inc
mov
insb
cmp
sbb
repnz
xchg
jle
mov
gs
adc
cli
add
ret
lods
push
mov
push
js
or
and
pop
imul
sbb
jecxz
push
jae
pop
push
inc
xor
ss
dec
add
mov
loopne
mov
out
sbb
push
aas
lret
les
sbb
movsb
pop
push
xchg
sub
mull
xchg
movsb
add
je
push
push
push
or
in
roll
and
mov
test
pop
xchg
jns
add
aas
scas
pop
shrb
push
mov
icebp
loop
stos
jmp
mov
mov
jecxz
jp
popf
stos
imul
or
inc
mov
push
cwtl
xor
je
test
mov
inc
adc
fiadds
out
push
jbe
and
sub
enter
xchg
xor
lret
push
sbb
sti
jbe
dec
fldl
push
or
dec
adc
shll
mov
cli
xor
or
push
in
cmp
fwait
cmc
cld
ss
add
iret
jbe
jmp
pusha
inc
cmc
adc
scas
jge
mov
sub
aam
push
mov
lret
ret
push
out
adc
adc
sub
mov
cmp
sub
sbb
pop
sub
pusha
hlt
sbb
cmp
mov
lahf
rorl
mov
aam
push
rclb
push
das
adc
ss
lcall
lcall
pusha
adc
out
mov
pop
sub
mov
sub
repz
push
sub
adc
cmp
inc
sbb
jno
out
dec
call
leave
loop
mov
and
or
inc
mov
mov
js
mul
out
pushf
inc
sub
dec
dec
iret
push
xchg
jno
in
arpl
adc
fcmovne
sub
dec
mov
loopne
lock
add
fdivrl
cmp
scas
jb
or
xchg
insl
xchg
inc
movsl
push
jge
add
mov
and
daa
scas
out
push
dec
sbb
je
jbe
sbb
xchg
jmp
or
jmp
mov
add
popf
imul
notl
aad
lahf
cmp
cmp
adc
jmp
add
je
imulb
mov
lret
jae
addl
jne
das
testb
cltd
repz
mov
push
stos
and
sub
mov
mov
push
or
mov
or
pop
loope
je
push
sub
adc
lds
clc
push
mov
repz
sub
cmp
pop
icebp
mov
or
inc
in
ss
dec
sbb
dec
pop
inc
cmp
out
pop
sbbl
push
jo,pt
sbb
adc
scas
and
pushf
inc
or
test
push
inc
dec
inc
arpl
xorb
sub
leave
cmpsb
cmc
mov
clc
sub
cmp
in
adc
xchg
lods
sbb
nop
lods
nop
hlt
sarb
pop
cmp
adc
xor
adc
push
rorl
xlat
shr
mov
pop
push
ficoml
mov
pop
pop
mov
into
cmp
adc
push
pop
mov
stos
add
pop
cmpsb
cmp
and
push
pushf
cmp
or
sub
mov
add
xor
mov
push
adc
clc
sbb
mov
mov
or
mov
repz
lret
adc
hlt
jnp
ljmp
repnz
adc
scas
inc
scas
lahf
or
lods
cld
push
in
or
dec
shrb
test
sub
leave
and
sbb
mov
adc
jecxz
icebp
repnz
cmpsb
mov
xchg
in
cmpsl
fsubrs
pop
lret
mov
cs
ss
pslld
movsl
cmp
xchg
loope
sbbl
or
mov
jecxz
sbb
add
les
ds
jmp
test
ret
ret
inc
dec
cld
push
push
fadds
jge
xchg
cmp
pop
mul
pop
pop
adc
mov
xor
call
jle
xor
in
arpl
movsl
lock
inc
dec
bound
mov
cmp
cmp
jg
inc
out
imul
mov
pop
test
mov
fnstcw
dec
data16
out
xor
pushl
sbb
or
das
stos
inc
adc
mov
add
adc
mov
mov
xchg
xor
sarl
das
and
mov
addr16
out
and
dec
pop
ret
sarb
loope
sbb
test
push
mov
in
jbe
andb
xchg
mov
add
faddl
jmp
and
and
pop
outsb
jp
test
rorb
add
sti
fwait
lods
pusha
negl
frstor
cmpl
and
daa
xor
les
js
insl
add
in
pop
push
xchg
mov
dec
mov
dec
stos
lret
insb
and
pop
std
or
sub
mov
out
cs
cmp
and
inc
pop
popl
ret
sbbb
pop
fcomps
rorb
push
sbbb
jnp
mov
loop
icebp
jbe
lret
push
shll
std
les
sub
xchg
repz
cmp
out
mov
inc
fstpl
into
push
sub
ljmp
mov
xchg
sbb
or
pop
enter
outsl
inc
fldt
jb
pop
out
lret
and
loopne
in
lcall
das
clc
sahf
add
adc
movsb
jle
sbb
mov
or
or
cltd
addr16
jmp
mov
das
mov
and
cmp
sbb
repnz
mull
sahf
mov
jp
test
fimuls
dec
add
push
ficomps
cli
xor
and
loopne
push
mov
xchg
jge
out
add
int
xchg
mov
pop
cmc
loopne
fwait
adc
loope
dec
xor
cmp
dec
imul
jl
insb
sub
inc
shlb
fsave
mov
mov
fwait
jle
addr16
jns
cli
jb
mov
in
mov
jle
inc
sub
lahf
testl
adc
and
add
mov
mov
mov
int
adc
pop
mov
pushf
fs
mov
std
xor
icebp
mov
orl
clc
clc
cmpsl
jle
or
cmpsl
ja
jnp
mov
sbb
jg
mov
inc
aas
fsubl
jae
push
add
shrb
imul
mov
push
adc
jbe
cmpsb
mov
cmc
loopne
xor
sbb
aam
or
add
ja
bound
addr16
adc
iret
rolb
lea
fnstsw
clc
or
mov
xor
adc
filds
dec
and
pop
push
in
loop
mov
push
add
cs
fnstcw
clc
aas
insl
cmpsl
stos
push
jmp
or
rolb
or
repz
ss
out
push
and
int
call
and
clc
fisttps
out
jns
test
test
insl
push
das
pusha
in
test
ss
sub
push
push
inc
fdivrl
inc
inc
lods
inc
fbld
fimuls
jno
add
roll
ret
stos
loope
fst
jne
pop
cmpsb
cmc
cmp
mov
jle
mov
mov
inc
mov
inc
ss
push
jns
xor
das
movsb
lods
push
cld
jmp
lret
sub
js
jle
sahf
mov
inc
push
je
fcomip
cld
jecxz
jae
test
daa
js
pop
add
xchg
in
lds
push
imul
dec
xchg
fs
aam
lds
or
imul
cld
aas
dec
add
repz
sbb
shr
arpl
sti
addr16
dec
sub
cli
insb
fucomip
pop
ljmp
lods
fs
sbb
xchg
fsubp
lahf
aas
and
cmp
jb
int3
mov
lret
push
inc
push
cmc
cli
jne
shlb
inc
pop
dec
aaa
lahf
inc
clc
push
psubsb
mov
bound
test
mov
dec
loopne
cwtl
out
movsb
fsubl
loope
mov
mov
mov
xchg
sub
mov
mov
cmpsl
mov
mov
xchg
movsb
pop
mov
jl
mov
fnstenv
fs
scas
in
test
jle
xor
pop
jnp
mov
repnz
fbld
dec
rcrl
in
push
repnz
xchg
pusha
or
gs
fimull
xchg
push
sti
sub
jo
sub
pop
cmp
dec
jae
pop
in
dec
dec
fsubrl
out
test
mov
or
inc
gs
adc
enter
mov
dec
cmp
cwtl
push
iret
data16
out
mov
mov
jnp
and
pop
push
pop
imul
push
gs
push
cli
decl
bswap
mov
shrl
xchg
pop
jnp
cmp
imulb
push
add
or
mov
mov
sbb
stc
ds
sub
push
jae
jle
mov
aam
jecxz
divl
mov
not
jbe
popl
mov
sub
leave
dec
incb
jno
fistpll
mov
fists
mov
cltd
xor
add
jle
dec
mov
cmpsl
sbb
aad
or
das
xchg
sbb
push
daa
mov
jo
cmp
sbb
add
jge
inc
xlat
mov
arpl
jb
push
movsb
push
sbb
stc
xchg
jmp
stos
rclb
jns
out
rcrb
xchg
daa
imul
insl
sbb
sub
pusha
xchg
mov
in
shrl
aaa
push
or
mull
cmp
repz
mov
cltd
push
mov
mov
cmpsl
cld
fisttps
testb
sahf
or
mov
movsb
mov
xchg
scas
out
lahf
ss
mov
out
push
loopne
mov
and
rorb
add
push
repz
lods
push
call
cwtl
ja
mov
je
xor
pop
sahf
hlt
test
and
int
jbe
adcb
cmp
bound
lret
icebp
xlat
subl
xor
inc
rolb
push
aaa
je
inc
pop
iret
push
dec
rep
lahf
add
fcoms
outsl
ficomps
fisubrl
shlb
push
xchg
scas
subb
in
gs
pop
das
outsb
loope
xchg
or
dec
mov
dec
add
mov
aad
hlt
dec
call
pushf
std
shl
mov
fisttpl
into
or
xor
sbb
mov
sbb
sbb
nop
mov
aas
pop
mov
data16
jae
mov
jmp
adc
jp
cli
xchg
ja
jmp
inc
stos
int
rcrl
stc
fistpl
rorb
and
and
mov
cmc
out
jg
mov
pushf
cmpsl
gs
aam
xchg
dec
or
je
repz
bound
pop
insl
shlb
je
mov
push
and
aaa
cmp
into
dec
xchg
mov
ret
test
xor
call
sub
jle
inc
push
xchg
jbe
cmp
mov
data16
pop
pop
cmc
cmpsb
iret
or
popf
cmp
ficompl
xor
in
movsb
sub
or
movsl
push
int3
lea
hlt
mov
dec
int3
fisttpl
jae
insb
loopne
mov
imul
push
andb
pop
stos
mov
pop
pop
int3
stos
jge
xchg
call
fwait
aaa
jle
js
pop
jg
xchg
lea
icebp
cmpsl
add
rcll
repnz
enter
imul
add
sub
jp
push
pusha
sbb
xchg
jp
mov
xor
cmp
imul
fbstp
out
ja
icebp
add
out
clc
push
pop
out
and
rcr
adc
divb
aad
jne
mov
scas
sub
pop
mov
or
int
dec
inc
cmpsl
fs
adc
testb
xchg
repz
movsl
clc
sahf
and
cmp
cs
lahf
popa
sbb
and
popa
jg
lock
dec
adc
xchg
jb
jno
cmp
mov
rcll
adc
sbb
ljmp
mov
fwait
sub
and
mov
mov
dec
and
add
or
cmc
outsb
cmp
push
stos
cmp
shll
or
cld
cmp
xor
fsubrl
jg
test
xchg
movsl
sbb
xchg
rcrl
repz
mov
mov
xchg
mov
mov
xchg
push
and
outsb
mov
xchg
xor
outsl
dec
mov
rcl
pop
scas
cmc
adc
lods
xchg
inc
in
dec
pop
sahf
mov
cmpl
and
in
xchg
fs
xor
dec
jmp
mov
or
mov
in
fxch
and
xchg
xor
lock
and
cmp
jnp
add
mov
lcall
mov
xchg
arpl
lahf
out
cmpsl
outsl
push
jno
jns
xor
pop
jge
jns
mov
jns
jmp
in
jbe
jns
xor
das
or
ret
xchg
sbb
adc
lahf
ret
addr16
outsl
xor
cmp
mov
adc
mov
sbbb
and
sahf
dec
popf
ss
pusha
add
jg
sbb
jb
loope
sub
into
add
sub
in
ficoml
cs
sbb
push
lea
mov
mov
cmp
repnz
adc
gs
push
push
mov
fisubrl
movlps
mov
inc
ds
int3
fs
lock
pushf
dec
push
negl
loopne
or
mov
into
pop
stc
sbb
fs
adcl
push
aad
mov
pop
push
mov
inc
sbb
mov
jo
insb
and
sbb
inc
adc
mov
cmc
cli
pushf
cmp
outsl
or
in
jp
fdivrs
testl
call
test
xor
mov
mov
jae
cli
mov
pop
aam
cmp
divb
jae
insl
ret
xor
jle
jae
mov
scas
xor
scas
call
cmpsl
sahf
jb
leave
xchg
xor
test
or
or
test
mov
pop
rcrl
idivb
push
sbb
mov
and
es
mov
xchg
insl
nop
int
movsl
cmp
or
dec
mov
ret
loope
mov
in
incl
outsl
leave
pusha
mov
lods
out
cmp
mov
mov
push
sub
add
mov
mov
lds
mov
gs
xchg
outsb
and
int
mov
push
stos
inc
push
push
popf
xchg
rorl
movb
adc
in
push
aaa
sub
push
adc
in
lret
jge
fwait
push
pop
dec
aam
and
jo
jge
inc
das
cmp
and
sbb
and
ficomps
pop
jno
push
fistps
sbb
mov
cmp
das
hlt
inc
aaa
dec
cld
sub
out
pop
shl
jp
jne
out
fwait
jbe
sbb
xor
mov
pop
movsb
cmpsl
lret
cmp
or
pop
aas
mov
jae
xchg
pop
hlt
movl
push
push
push
loopne,pn
push
dec
xor
jmp
aas
mov
mov
inc
mov
aam
loopne
hlt
push
in
insl
outsb
outsl
push
inc
push
mov
inc
lea
inc
xor
sti
xchg
sub
rorl
out
mov
shll
mov
push
or
cmp
lea
repz
dec
mov
mov
ss
nop
pop
pop
pop
sahf
mov
and
pop
lock
mov
sbb
ljmp
push
sub
jb
dec
mov
imul
data16
aas
sbb
xchg
popa
test
arpl
movsl
or
or
sbb
gs
xchg
sub
xor
add
mov
adc
mov
adc
addr16
sbb
mov
adc
ficompl
clc
sub
test
xchg
sahf
sub
pop
xor
popa
insl
pop
rorb
or
sarb
sub
test
ret
mov
add
scas
cmp
add
subb
jnp
lret
out
jnp
jno
dec
mov
mov
ja
xchg
add
testl
inc
sbb
repz
and
jnp
inc
fwait
xchg
xchg
cmp
movsl
jne
pusha
test
dec
mov
mulb
push
jne
mov
es
mov
daa
adc
pop
push
mov
aam
and
jne
pop
xor
fnsave
mov
ds
add
idiv
or
adc
mov
jns
jnp
cld
out
or
and
inc
fnsave
lds
or
fs
lds
dec
sbb
xor
cld
mov
jge
daa
bound
push
cmc
scas
cmp
aam
sub
jp
dec
nop
fidivrs
cld
nop
int
rcrl
aas
jne
cmc
fsubrp
outsb
cmp
sbb
shl
pop
negl
mov
in
add
pop
xor
cmp
sahf
push
jae
mov
xchg
xchg
ds
dec
inc
ss
insl
sbb
dec
sbb
mov
ja
mov
movsb
xchg
sub
arpl
into
push
mov
sub
jne
shrl
bound
jno
out
xchg
test
cld
or
push
cwtl
lods
pop
jnp
mov
lea
adc
callw
insb
and
hlt
mov
lea
mov
mov
xor
popf
lods
push
and
xchg
out
pop
addr16
push
dec
inc
mov
in
sbb
jae
jge
in
push
jns
xchg
arpl
sbb
sbb
addr16
movsb
cmp
mov
frstor
cli
es
enter
test
pop
push
ljmp
adc
mov
mov
ret
jp
xor
jno
push
pop
popa
adc
xor
jnp
adc
mov
pushf
cli
jle
push
fsts
or
jo
pop
push
popf
scas
incl
jae
ret
iret
mov
sub
loope
push
push
loop
repz
xchg
outsl
ds
jnp
xchg
xchg
push
pop
xlat
jecxz
sbb
pop
nop
in
ret
or
push
xchg
sub
aas
mov
jge
lret
pop
testl
xchg
bound
ja
pop
sub
add
pop
test
jge
and
jecxz
es
pop
mov
and
jb
inc
out
test
in
in
push
sbb
pop
movsl
mov
adc
ja
rorl
in
test
mov
dec
push
sub
jl
sbb
lea
push
xor
shl
imul
js
jae
cwtl
mov
mov
fwait
mov
inc
dec
and
xchg
and
into
and
and
test
test
and
dec
cwtl
fsubp
dec
push
test
outsl
adcb
mov
jo
xchg
mov
out
aad
lds
jge
ss
mov
add
and
add
adc
sbb
inc
mov
das
mov
sbb
mov
pop
daa
movsl
cmc
jne
stc
mov
jne
xchg
jns
push
loop
mov
cmp
insl
mov
cmp
mov
aaa
pop
int3
mov
imulb
pop
sub
jge
jge
inc
sbb
adc
cmp
or
dec
adc
repnz
and
xchg
sub
notb
ret
push
inc
jl
imull
dec
out
and
jne
lcall
push
ftst
int3
arpl
jmp
jo
in
push
sti
pop
add
ret
orl
test
jle
fwait
xchg
cltd
push
sub
test
mov
pushf
in
and
es
mov
repz
mov
sahf
mov
pop
sbb
outsl
mov
jo
ljmp
loop
lods
and
hlt
push
int
sub
sahf
cmp
mov
sbb
sbb
mov
mov
adc
xchg
repnz
das
mov
xor
shlb
addr16
or
loopne
mov
push
mov
push
sbb
cmp
mov
mov
dec
int
adc
mov
pop
dec
fstpl
lods
repnz
sarl
jl
loop
cmpsl
test
or
mov
adc
sbb
adc
lret
xor
cmp
adc
mov
jecxz
mov
shlb
data16
jns
adc
outsb
mov
sub
mov
inc
out
sub
mov
cmpsb
imulb
adc
fimull
popl
jmp
adc
pop
arpl
xorl
ret
cmp
es
and
add
imul
mov
es
mov
insb
xchg
shll
add
inc
adc
les
inc
in
cld
push
pop
or
sbb
jg
sub
bound
jmp
hlt
pop
incb
push
mov
add
xlat
jno
or
repz
scas
scas
hlt
xchg
in
mov
int3
aaa
dec
lods
xor
push
mov
ret
hlt
je
pop
lods
dec
stc
nop
adc
cmpsb
les
add
fisubrl
jne
loopne
xchg
cmp
arpl
cmp
adc
jno
in
stos
gs
mov
adc
jle
stc
cs
inc
imul
xor
mov
nop
icebp
out
std
sbbb
out
fiadds
fiadds
iret
or
jne
out
inc
sub
lock
rorb
inc
cmp
mov
pop
jns
loopne
fisubrs
adc
jno
insl
jmp
rclb
push
jl
sub
sub
pop
push
cmp
jecxz
cmp
mov
data16
xor
xlat
test
xchg
or
stc
adc
mov
shlb
jp
xchg
scas
ja
mov
dec
popa
cmc
fdivs
or
mov
mov
scas
jmp
jb
popf
jl
sahf
testl
fidivrl
std
cwtl
pop
shlb
sub
inc
add
inc
setnp
addr16
jne
movsb
fistpl
add
xchg
pop
jo
in
dec
loopne
jmp
fs
ss
cli
addr16
jmp
mov
rcrb
ret
pop
mov
pop
fsubrl
inc
or
imul
cmpsl
push
push
pop
repz
cmp
cmp
inc
or
into
mov
inc
fisubl
std
xor
clc
add
sbb
stos
push
cmp
sbb
cmp
dec
sub
rcrl
cmp
jl
clc
push
pushf
xor
stos
mov
push
jg
or
sahf
lods
inc
fstp
mov
mov
sub
jnp
lods
xchg
mov
dec
dec
pop
out
test
jle
add
push
inc
arpl
inc
inc
enter
inc
pop
inc
pop
mov
shl
xor
icebp
test
sbb
lea
addl
shl
fldt
xchg
stos
out
in
int
jge
add
push
outsb
pushf
sbb
add
insb
mov
xor
cmp
data16
pop
lock
mov
ja
cmp
cwtl
inc
in
dec
sbb
sahf
xor
mov
insl
sub
cmc
pop
xlat
cmpsl
fisttps
xchg
push
mov
in
jne
dec
pop
negb
fwait
push
pop
call
aad
cmpsb
scas
xor
cmpsl
je
cmp
and
rorb
loopne
inc
mov
cmp
mov
pop
mov
inc
push
outsb
pushf
lods
pop
out
pmuludq
shrb
pop
xchg
jge
movsb
cli
stos
ja
lds
pop
cmp
jmp
std
mov
std
add
fwait
xchg
out
rcrb
iret
cmp
mov
mov
sbb
xor
inc
out
xor
xchg
push
ja
into
jbe
sbb
sbb
mov
sub
js
enter
cmp
shrl
ljmp
int3
xor
push
pop
or
mov
popa
xor
and
mov
mov
sbb
push
pop
insl
push
push
iret
aam
adcl
jo
repnz
dec
adc
jl
add
mov
fisubrl
lds
and
jmp
pop
cmp
xchg
leave
test
dec
pop
lahf
cmp
pusha
sarl
fcompl
lcall
ja
push
jnp
add
and
mov
loope
adc
shlb
imul
cltd
xchg
mov
shrb
in
arpl
fcomps
jno
mov
fsts
rorb
cmpsb
add
jne
scas
pusha
sub
int
jb
sub
es
jp
lret
idivl
dec
int3
push
sub
xchg
dec
adc
add
sub
jecxz
xchg
jmp
fwait
hlt
mov
pop
xchg
sbb
sarl
xor
or
sbbb
mov
xlat
sub
cmp
mov
mov
rcll
xchg
je
imulb
push
adc
or
das
addr16
add
fwait
jbe
sahf
push
icebp
cmpsb
scas
push
xchg
dec
pop
lock
cmp
ljmp
jmp
or
mov
xor
movsl
stos
inc
jbe
add
mov
mov
hlt
pop
and
xchg
lods
push
dec
mov
jl
outsl
out
pop
xor
inc
dec
jg
mov
push
xlat
outsl
int
xor
les
jmp
or
cmp
adc
sub
ljmp
cltd
das
fimull
cmp
loope
jo
outsb
xchg
sub
mov
push
dec
fiadds
cwtl
loop
sub
mov
fmull
test
aam
dec
sub
pop
pop
insl
in
insb
hlt
mov
jmp
ljmp
cmp
xchg
push
sbb
sbb
loop
movsl
inc
outsb
ds
divb
jle
nop
push
scas
mov
lods
ss
sahf
jge
ret
fwait
pop
test
jecxz
repz
in
adc
cmpb
xor
xlat
cwtl
sub
sbb
mov
mov
mov
mov
ret
and
and
push
cmpsb
jnp
or
pop
sahf
ja
inc
add
mov
lods
and
jp
inc
je
in
lret
es
fs
pop
xchg
aas
sub
push
aam
pop
test
in
test
fbld
cmp
jno
push
mov
adc
dec
pop
les
dec
jp
xchg
ds
jg
bound
xor
int
push
sub
int3
pop
mov
sub
mov
leave
push
jno
jmp
push
cmpsl
inc
testl
mov
aaa
mov
adc
sahf
mov
mov
and
pop
aas
mov
push
and
lds
sub
inc
in
sub
mov
pop
cmp
mov
push
and
out
flds
xchg
ret
test
pop
or
cmpsl
dec
mov
sbb
fcomps
xor
dec
mov
int3
xchg
dec
stos
mov
mov
adc
fmuls
xor
cmp
dec
out
fs
loope,pt
ds
jge
lds
sbb
out
out
mov
mov
test
shlb
adc
ret
pop
push
fistpll
inc
adc
in
add
fists
filds
icebp
dec
cmp
inc
push
insl
fstps
icebp
add
xor
jmp
out
faddl
pop
mov
pop
je
and
ficoms
xor
addb
push
in
aaa
mov
cmpsb
jns
lods
mov
jbe
pop
adc
mov
fcoms
stos
xlat
popf
pop
loope
je
xchg
xor
dec
xchg
xchg
mov
movsb
mov
inc
mov
pop
dec
loop
cmc
push
lds
xchg
mulb
or
stos
sub
or
dec
mov
sub
mov
inc
add
add
xchg
rcrl
arpl
xchg
sub
lret
iret
mov
mov
and
mov
fsubl
data16
movsb
push
mov
test
jecxz
sbb
inc
ret
fidivrs
mov
lods
sarl
js
test
pop
movsl
xor
adcb
inc
mov
js
jp
pop
sbb
pop
ja
dec
xchg
push
mov
xorb
shlb
mov
in
sti
and
imul
daa
testb
repz
scas
and
mov
push
xor
aad
cmp
push
jae
xchg
int3
aas
dec
fyl2x
push
add
xchg
divb
mov
pushf
mov
sti
pop
jg
es
fists
mov
bound
ja
xchg
adc
roll
xchg
ret
cmpsb
mov
shrl
mov
push
mov
pusha
mov
stos
sbb
inc
mov
out
std
sti
jmp
sti
cmp
xchg
mov
add
mov
shrl
cmp
lcall
lret
test
loop
popf
rcrl
xor
ss
shl
push
mov
std
ficoml
cld
push
out
fldenv
insb
jg
or
dec
loope
cld
mov
and
cwtl
push
mov
dec
push
xchg
dec
xor
cmpsl
xchg
mov
sub
xchg
cmp
dec
sbb
clc
jl
addb
inc
rclb
test
fisttpl
cld
xor
cwtl
cmpsb
push
cmpl
dec
and
jae
mov
out
mov
lahf
int3
pop
mov
je
and
xchg
xchg
dec
mov
pushf
leave
pop
sub
mov
data16
push
pushfw
mov
pop
cmc
mov
out
shlb
sbbl
test
mov
aam
decl
mov
pop
icebp
outsl
fdivl
lods
xchg
add
push
mov
loop
adc
adc
stc
jge
mov
sbb
cmp
jge
mov
jge
adcl
pushf
popf
push
fidivrl
loopne
clc
adc
and
xorl
push
fsubs
sub
dec
pop
cvttps2pi
mov
xchg
sub
dec
push
mov
fnstcw
into
loop
fwait
test
dec
adc
clc
popa
cmpl
loope
decl
mov
movsb
jecxz
pop
xchg
cmp
insl
lods
sub
imul
hlt
pop
mov
cmp
xchg
inc
sub
loop
sub
mov
mov
daa
stos
jae
push
lods
sub
rcrl
fdivl
xchg
mov
lret
adc
in
outsb
xor
cltd
movsl
push
je
rolb
imul
aaa
add
pushf
adc
mov
adc
popf
add
sub
and
inc
in
outsb
clc
addr16
lcall
inc
ljmp
dec
loopne
shr
xor
ljmp
pop
jmp
inc
inc
sub
inc
fnstcw
push
pusha
testl
jecxz
lock
cmp
data16
dec
mov
mov
ffree
rol
icebp
cmp
shl
clc
or
hlt
pop
push
mov
pop
or
xchg
mov
xchg
mov
push
je
mov
shll
mov
jle
inc
sti
dec
push
xchg
sub
inc
xor
sub
mov
or
push
add
sbb
dec
cli
inc
push
pop
xor
pop
adc
cmpsb
sbb
add
fwait
mov
mov
mov
iret
ss
mov
mov
xlat
cmpsb
sbb
scas
sub
mov
cmpsb
jmp
mov
add
sti
fwait
ror
fistl
imul
outsl
repz
mov
add
add
int
icebp
cs
lock
sbb
faddl
cltd
lret
push
dec
scas
pop
sbb
popa
subl
ffree
fwait
jle
and
jo
xchg
adc
sbb
stos
pop
mov
std
movb
xchg
sbb
add
inc
decl
or
call
jg
xchg
mov
inc
ret
inc
dec
jbe
popl
pushf
xchg
int3
and
stos
add
inc
stos
cmp
and
pop
push
ds
sti
out
out
sub
mov
cmp
push
inc
stos
mov
adc
iret
add
inc
add
adc
xchg
fucomip
dec
xchg
pusha
fstpl
pushf
xor
inc
add
std
js
mov
outsb
adc
push
add
cmc
outsl
cmpsl
pop
fsubl
inc
out
add
inc
pop
ss
nop
inc
xor
jle
xor
fisubrs
pop
jle
lret
pop
sbb
push
test
fldenv
mov
jbe
shlb
int
ljmp
dec
xor
pop
bound
shlb
inc
in
ljmp
lret
xchg
dec
push
movsb
dec
mov
hlt
shrb
cmp
mov
adc
lret
pop
pop
stos
orb
mov
out
xchg
mov
pop
mov
maskmovq
mull
movsb
scas
pop
xchg
xor
dec
outsb
adc
jb
shlb
sub
fstpt
adc
xor
sub
nop
js
ds
test
jg
mov
aam
in
push
rcll
cltd
enter
xor
enter
cmp
pusha
cmp
imul
adc
ss
push
lods
scas
and
call
push
jns
rcl
gs
out
jae
xchg
inc
fdivrl
sbbl
mov
loope
call
adc
pop
test
jmp
xor
cltd
sub
xor
shll
pop
jne
push
dec
filds
out
xchg
aad
jp
or
or
data16
movsl
jg
jge
repnz
xchg
mov
add
push
xor
dec
inc
lahf
mov
aam
loop
pop
jmp
inc
into
pop
test
mov
repz
and
xchg
adc
movb
out
add
out
stc
cltd
pop
push
jmp
push
clc
pop
lock
ja
lods
lcall
jle
insb
jle
mov
shrl
xor
mov
lods
cld
jg
cmp
bound
add
js
mov
call
and
cmc
imul
scas
mov
leave
lods
xor
popf
push
movsl
into
or
daa
sti
push
sub
push
and
jb
cmovae
shll
rcr
andl
cwtl
fisubrs
shll
adc
and
call
xorb
xchg
and
in
repz
into
stc
out
dec
xchg
dec
aaa
fwait
jle
or
leave
mov
dec
loop
and
inc
add
nop
mov
sbb
and
aad
cmp
cmp
push
dec
or
cbtw
jnp
mov
je
mov
pop
adc
adc
repnz
mov
ljmp
movsl
xchg
inc
or
xchg
mov
jmp
into
dec
add
sahf
inc
int
jmp
xor
or
inc
jmp
jns
les
fstps
je
and
xor
inc
xchg
sbb
stos
test
ficoms
jmp
rclb
stos
es
and
pop
xlat
dec
pusha
add
xlat
scas
and
inc
pop
leave
fldt
stc
fisubrs
add
repz
xor
loopne
ljmp
xlat
outsb
mov
sub
mov
jge
jne
leave
push
inc
call
loopne
and
fnstsw
fcompl
push
dec
cmp
imul
out
sub
rcll
cmpsb
jg
pop
loopne
dec
mov
lcall
outsl
test
testb
inc
adc
into
inc
loopne
rcll
xlat
testb
mov
test
cmpsb
dec
stos
mov
sbb
add
xor
mov
ljmp
cmp
loope
leave
orb
push
inc
int
dec
hlt
movsl
pop
repnz
adc
push
addr16
and
stos
in
xor
fidivrs
sysret
jmp
xchg
ds
push
int3
mov
in
pushf
jb
jg
and
mov
pushw
mov
and
sub
adc
loop
sahf
add
cmpsb
adc
cltd
xor
push
inc
jge
outsl
mov
jns
and
shrb
filds
clc
lret
push
xlat
jnp
sbb
fists
imul
mov
js
cs
popa
mov
imul
mov
add
test
jns
ficoms
lahf
lea
mov
movsb
ret
mov
mov
shr
icebp
jne
mov
bound
pop
ljmp
out
mov
mov
pop
int3
or
rcll
aad
jno
xchg
fdivrl
iret
mov
cmpsl
insl
mov
or
xor
mov
imul
daa
adc
jl
pop
pushf
sti
or
and
push
cmp
in
es
movsl
or
call
nop
mov
in
cmp
nop
ss
pop
jle
aad
cmp
cmp
fists
or
add
jo
insb
dec
dec
and
dec
gs
jbe
jb
ja
out
in
js
inc
push
jle
lahf
insl
incl
jo
mov
push
or
mov
ja
push
add
jo
aam
sbb
test
ss
leave
xor
push
inc
loopne
rolb
adc
push
cwtl
pop
push
adc
les
dec
mov
aad
sbb
and
int
sub
mov
push
pusha
mov
dec
xchg
add
je
vandpd
pop
idivb
jns
and
add
xor
sti
push
rorb
xor
push
cmpsl
outsl
into
push
inc
jg
push
scas
mov
shll
into
xor
jnp
out
inc
adc
lahf
push
and
sti
mov
arpl
mov
or
push
aas
dec
push
jg
cltd
dec
fidivrl
add
jae
inc
repnz
bound
pushf
sub
int3
mov
mov
addr16
xor
in
mov
iret
mov
scas
rcrb
mov
bnd
add
inc
sub
rorl
mov
clc
xlat
mov
or
or
sub
in
jp
cmp
xor
cltd
mov
mov
sbb
sub
inc
jo
jae
fs
loopne
xchg
fidivs
mov
loope
int
ret
dec
dec
aam
dec
adc
std
jb
sub
mov
test
les
lcall
mov
adcb
stos
mov
pop
xlat
aad
pop
arpl
sbb
xchg
add
ljmp
adc
add
outsl
pop
mov
jb
sbb
add
jns
imul
add
jmp
subl
loopne
jge
fcmovne
in
je
in
test
or
and
or
sub
lods
mov
pop
fisttpl
push
push
xorb
mov
bound
adc
pop
jnp
shrb
adc
sbb
jns
mov
lcall
cmp
jmp
or
stc
loope
int3
sbb
ficoml
cmp
adc
ss
mov
mov
mov
sub
ds
int3
mov
or
sbb
incl
popf
xchg
shl
scas
jb
dec
push
mov
arpl
mov
scas
push
movsl
fildll
jmp
call
push
sub
add
mov
push
fsubrs
push
jno
movsb
and
shll
add
lret
adc
and
cmp
sbb
cltd
stos
ret
fucomip
fmulp
pop
lret
hlt
pop
sbb
imul
adc
jnp
xchg
lods
xor
cmp
xchg
mull
ljmp
js
ret
test
or
jne
mov
xor
lahf
bound
pop
inc
sub
mov
mov
movsb
cmpsl
gs
arpl
repz
or
cmp
push
cwtl
mov
jge
fucom
sub
orb
divb
pop
cli
mov
and
mov
inc
xorps
ljmp
icebp
dec
inc
or
cmp
imul
repz
xchg
xchg
add
jbe
mov
push
es
xchg
add
sti
nop
arpl
leave
cli
xor
hlt
dec
cmp
or
xchg
pop
push
sbb
stc
jo
lret
mov
and
movsb
pop
outsl
push
mov
mov
mov
cld
decl
daa
xor
scas
and
pop
out
or
xchg
add
stos
aaa
cmp
out
int3
sti
fwait
int3
adc
inc
mov
popa
inc
ficoml
popa
jl
aas
aas
outsl
dec
fists
adc
in
stc
or
icebp
pop
adc
mov
xchg
sbb
inc
mov
add
pop
out
cmp
in
mov
setl
dec
mov
fs
xor
push
or
pop
jmp
fiaddl
mov
inc
mov
mov
lret
mov
addb
add
jmp
cmp
pop
adc
mov
gs
and
mov
and
push
cmp
test
xor
mov
loope
jb
pop
iret
jb
sub
add
repz
mov
ficoml
cmp
test
mov
aad
repnz
call
pop
ret
lods
sbb
cmpsb
cmp
add
lds
push
js
in
cmp
pop
lret
data16
mov
jno
stc
xor
movb
mov
iret
and
inc
scas
and
or
jle
or
in
cmp
pop
repnz
mov
popa
mov
call
or
pop
mov
push
dec
or
dec
mov
sti
mov
or
cmp
outsl
pushl
xchg
lds
insb
lods
sub
out
xchg
jge
mov
lods
in
push
into
adc
fnstsw
cmpsl
pop
icebp
sub
cmc
aad
dec
js
sub
add
mov
mov
cmp
ret
mov
idivl
rep
xchg
rolb
mov
icebp
mov
in
mov
add
jb
and
inc
pop
dec
mov
add
or
jle
adc
loop
lods
enter
lods
dec
push
xor
add
sahf
jns
pop
fst
mov
data16
lcall
lods
enter
and
xor
stos
lret
cld
pop
std
cltd
repz
jae
idiv
mov
movsl
pop
xchg
dec
aad
enter
xchg
bound
cmp
outsl
insl
and
subb
or
data16
or
mov
cmpsb
add
ret
outsb
mov
sub
cmp
fbstp
pop
jmp
push
std
sahf
das
hlt
pop
stos
enter
push
push
js
inc
fcomps
cltd
mov
mov
sub
pushf
das
cmp
or
inc
jecxz
andl
add
and
and
mov
or
ret
dec
mov
repnz
hlt
or
pop
icebp
sub
das
pop
adc
frstor
loopne
dec
lods
test
int3
cmpsb
movsl
xor
sub
ljmp
jno
arpl
push
call
sbb
fwait
xor
pop
jmp
xor
out
lods
fldt
push
push
testb
fdivp
push
mov
in
push
pop
in
ret
arpl
mov
fdivs
pop
mov
ds
cwtl
push
out
leave
cmp
hlt
clc
cmp
push
xchg
aas
push
or
push
lods
out
cmpsl
fnsave
pop
sbb
sub
imul
imul
and
nop
iret
sub
mov
in
insb
ljmp
xchg
mov
or
dec
cld
adc
push
movsl
adc
xchg
xor
pop
inc
fdiv
mov
pusha
and
out
xor
outsl
rorb
cmc
lcall
and
mov
inc
jecxz
or
daa
in
mov
push
call
mov
outsl
push
fcom
jl
xor
jne
fsubrs
lods
xchg
scas
push
and
push
sub
mov
inc
aad
aaa
and
mov
in
dec
mov
xor
add
cld
xchg
dec
je
ret
sbb
aas
mov
mov
mov
into
fdivr
xlat
jb
xchg
sub
pop
adc
jno
fadds
out
movsl
pushl
scas
outsb
add
out
je
mov
clc
sbb
nop
push
arpl
sbbl
aas
repz
stos
pusha
mov
fisttpl
jp
and
jae
mov
sub
loop
pop
icebp
stos
mov
or
mov
sbb
cli
test
stos
xor
lds
divb
xchg
inc
dec
in
push
stc
pop
mov
or
fisubs
jbe
dec
push
pop
mov
insb
xchg
push
pop
test
leave
enter
mov
frstor
mov
cmp
adc
rcrl
sub
mov
inc
xchg
lret
aad
testb
movsl
cmp
xor
insl
pop
inc
loope
adc
push
push
sbb
xchg
jbe
dec
and
dec
outsb
nop
std
sbb
xor
cmp
dec
fiadds
push
mov
test
in
sub
shrl
into
adc
or
fwait
sub
pop
lea
out
inc
push
call
int
movsl
mov
push
sub
es
push
test
pop
andb
mov
mov
pop
cwtl
clc
lar
xchg
in
dec
pop
cmp
es
pop
in
pop
push
dec
jecxz
dec
bound
push
inc
cmp
outsl
mov
mov
mov
fcmovnu
inc
or
jno
std
mov
out
inc
rcl
je
add
aaa
pop
movsb
xor
push
mov
stos
inc
jmp
pop
cmp
repz
mov
test
jns
dec
mov
into
pop
add
mov
pop
rcrb
jo
sbb
aaa
imul
jo
add
mov
push
loopne
push
add
das
lret
clc
cltd
pop
imul
call
xchg
cmp
push
scas
ja
movsb
les
movb
sbbb
push
mov
sbb
call
sbb
adc
out
xchg
lahf
and
mov
jo
out
mov
mov
lea
ret
test
mov
pop
cmp
scas
lock
mov
xchg
cs
jg
add
xchg
jge
mov
out
in
push
inc
cmp
dec
xchg
lea
insl
push
je
je
jmp
leave
ja
mov
push
mov
inc
push
and
push
out
movsl
inc
and
mov
push
mov
xlat
fimull
popa
or
jo
lahf
test
arpl
sti
fwait
add
scas
jmp
mov
shrb
mov
cmpl
das
mov
xchg
pop
loope
xor
sti
mov
ss
push
pop
jb
ja
pop
in
lock
in
sti
filds
jl
sub
cmp
and
mov
mov
mov
lret
mov
mov
push
pop
push
cmc
std
add
int
fiadds
popf
mov
add
and
xchg
mov
push
inc
sbb
out
dec
pop
ja
out
jbe
les
shr
in
in
shr
inc
xor
mov
push
arpl
pop
xchg
sub
sbb
cmc
in
fldt
add
idiv
xchg
sub
sbb
push
scas
aad
fbstp
out
push
incb
rcll
pop
call
mov
in
roll
gs
cmp
fdiv
add
dec
dec
icebp
aaa
mov
movsb
sub
add
jno
fldenv
int3
mov
push
popf
pop
cmp
insl
dec
pop
les
mov
push
repz
mov
mov
fadds
test
push
fsubr
out
test
sbb
push
sub
jl
lcall
xor
dec
shll
mov
lods
scas
jae
mov
int
adc
jne
cmp
xchg
sbb
mov
push
mov
ds
fisubs
pop
sahf
sti
pop
ja
jmp
jns
sbb
inc
testb
cmp
out
lcall
or
dec
mov
jge
or
push
dec
pop
popa
and
jecxz
mov
outsl
scas
rcl
mov
repnz
mov
mov
adc
adc
xchg
sub
ja
mov
mov
dec
in
or
push
icebp
out
add
movsl
mov
push
mov
or
cmp
mov
pop
xor
jecxz
push
sahf
out
arpl
cmp
nop
jbe
lcall
les
lahf
pop
outsl
xchg
imul
shrl
aad
inc
icebp
dec
fs
int3
jg
mov
stos
in
pop
pop
in
test
filds
xchg
push
or
xchg
repz
and
cmp
lea
ljmp
dec
or
mov
sbb
cwtl
jbe
dec
xchg
and
pop
out
jbe
in
add
lcall
outsl
fnstcw
or
pop
repnz
in
andl
pextrw
arpl
fiadds
lods
mov
pop
pop
test
lret
mov
dec
push
inc
call
and
xor
pop
test
push
out
xor
jno
xchg
js
ret
in
out
xchg
sub
into
jne
icebp
cmpsb
out
mov
inc
adc
mov
fdivrl
imul
cmp
out
loope
xor
pop
cli
stc
xchg
dec
scas
xchg
cs
nop
daa
test
lods
pop
cmpsl
scas
call
test
sahf
xor
shl
rorl
mov
aad
scas
subl
or
push
jg
jg
xor
mov
mov
add
iret
fistpl
mov
mov
out
outsl
jnp
pop
fnstsw
sub
jb
xchg
sub
jge
fwait
sub
bound
daa
ficompl
test
pop
dec
adc
push
push
fs
pusha
xor
fdivrl
aaa
mov
mov
stos
out
test
dec
insl
sahf
jno
or
mov
popf
mov
test
movsb
ret
xchg
lcall
and
push
popf
inc
pushf
inc
cmp
scas
out
adc
data16
stc
xchg
push
jg
dec
aas
andb
mov
jns
bound
pop
cwtl
ja
cltd
xor
pop
int
jp
inc
push
xor
push
pop
out
test
sub
imul
sbb
mov
or
add
sarl
inc
adc
js
cmp
xchg
jae
xchg
mov
dec
push
mov
popf
add
es
inc
lea
lret
dec
addr16
sbbl
xchg
xor
je
stc
lods
push
mov
fsubrl
and
mov
cwtl
jg
jg
aaa
int
jl
js
jge
lahf
mov
and
rclb
leave
mov
mov
fstpt
add
xchg
daa
and
insl
scas
out
xlat
lds
xorl
insl
mov
pop
cmp
push
cmpb
jnp
ja
test
inc
add
je
test
sahf
xor
ljmp
pushl
jne
sti
das
daa
aad
pop
data16
and
out
fmul
fwait
sbb
sbb
xchg
addl
pushf
fstp
xchg
ret
cmp
imul
adc
add
fcoml
and
adc
mov
out
out
jb
fisttpll
ficompl
test
xor
dec
call
or
imul
sbb
sbb
xor
mov
lods
jae
xchg
adcl
mov
jge
clc
test
cmp
clc
pop
pop
icebp
js
inc
fidivrl
les
pop
js
ds
lcall
xchg
clc
or
jl
mov
cmp
mov
mov
pop
repz
jnp
sti
lds
push
mov
jp
cmp
ss
push
popf
jmp
push
fidivl
js
push
push
stos
inc
shll
lret
mov
sarb
pop
xor
push
pop
imul
aam
pop
sub
jge
cmp
pushf
xor
push
lock
mov
sbbl
mov
lret
mov
aas
movsb
pop
repnz
sbb
outsl
push
xchg
xchg
arpl
xor
test
addr16
mov
lds
mov
cmp
stc
out
xchg
sbb
into
mov
fwait
push
jp
xchg
imul
sbb
or
popf
jp
leave
pusha
xor
push
das
jg
or
pop
outsb
cmpsb
cmp
jge
loope
xor
in
test
or
mov
aas
jne
mov
pop
notb
lds
adc
loopne
and
cmp
loopne
push
push
scas
lea
insb
push
and
jo
ds
mov
jle
insl
or
int3
mov
lods
and
gs
mov
popa
fmull
jne
cwtl
mov
push
mov
adc
mov
mov
mov
mov
rcl
jl
sbb
sbb
and
imul
xor
dec
loop
cli
movsl
cmp
jno
shll
fstl
mov
es
mov
cmpsb
inc
xchg
mov
es
push
mov
test
std
cld
sbb
movsb
ds
xchg
mov
push
mov
bound
stos
sub
sbbb
stc
mov
jmp
xor
push
mov
xchg
cmpsb
adc
add
mov
orl
jmp
mov
cmp
xor
mov
jns
jne
inc
es
and
aaa
into
fdivrp
or
aaa
sub
pushf
out
lods
inc
loopne
or
stos
and
pusha
mov
cld
mov
mov
push
notb
fbstp
xor
mov
push
idivb
add
sahf
push
bound
call
dec
inc
mov
adc
lods
in
sbb
sub
ja
arpl
dec
ljmp
rorb
nop
jae
mov
xchg
pop
pop
or
in
or
push
jmp
es
mov
xor
xchg
inc
movb
push
add
pusha
test
inc
fxch
insl
add
repnz
loopne
push
or
icebp
outsb
adc
cmp
mov
loopne
push
pop
pop
cld
ss
cmp
dec
add
aam
xchg
push
out
imul
pop
mov
test
dec
mov
test
scas
leave
pusha
sarb
imul
mov
add
xor
pop
jp
push
sub
xor
adc
push
ljmp
cmpsl
add
sbb
push
js
xor
xchg
push
inc
call
dec
or
jge
fsubrl
jnp
mov
xchg
int3
in
jp
mov
out
or
mov
xchg
mov
cmpsl
cmp
fisubl
lret
imul
xlat
add
fbstp
rcr
out
das
xchg
mov
repnz
add
mov
cli
mov
pop
loop
pop
sbb
inc
loopne
jbe
lds
and
jb
lods
jmp
fiadds
dec
and
mov
push
outsl
flds
leave
pusha
int
jae
out
out
cmp
dec
lahf
shlb
sub
pop
inc
fimull
out
jge
in
fldcw
test
movsl
cmp
jg
test
ds
sub
mov
sub
mov
fcmovbe
loop
lcall
inc
sbb
inc
jp
xchg
sti
in
std
sub
adc
mov
inc
test
mov
lds
mov
xor
into
push
std
push
pop
test
je
adc
add
push
sbb
pop
nop
xor
push
bound
popa
mov
jb
pop
mov
div
insl
jge
cmp
arpl
push
in
test
fbstp
inc
mov
adc
pop
lcall
pop
push
mov
into
add
addr16
xor
xchg
mov
ss
in
inc
lahf
mov
xchg
outsb
jge
test
or
jg
fwait
mov
icebp
mov
sub
mov
std
jg
cmpsl
add
pusha
stos
fnstsw
jg
add
insl
rol
clc
das
xlat
hlt
mov
push
jg
sahf
push
xchg
xor
or
cmp
jne
aas
sub
sub
push
mov
dec
dec
loop
mov
rclb
pop
sbb
fs
push
cmp
jmp
add
popa
cmpsb
jno
sub
inc
push
add
adc
and
mov
xchg
lcall
pop
fnstenv
nop
in
cmp
xchg
mov
pusha
mov
mov
out
in
lea
outsb
dec
in
test
repz
lret
adc
test
xchg
sbb
mov
sbb
test
in
lahf
out
mov
jecxz
jb
mov
mov
int3
lcall
loop
repnz
jb
test
scas
test
imul
or
pop
lock
fnsave
sub
ss
push
adc
fnstsw
pop
cs
or
scas
cs
loope
or
xabort
mov
fidivrs
vmread
inc
jne
lret
push
or
pop
jl
test
xor
pop
mov
sbbl
xor
test
test
dec
ror
subl
or
hlt
jns
sbb
insl
test
lds
sbbb
mov
lret
mov
add
sub
cmpsl
fldt
sub
mov
jg
insb
jl
aam
lret
jb
out
aad
test
dec
pusha
repz
cmp
fisubl
aam
lret
testl
pop
add
push
push
mov
repz
xor
scas
push
jnp
in
jge
pop
dec
lds
imul
shlb
jmp
int3
sbb
out
data16
jg
mov
aam
test
xchg
and
loop
enter
dec
in
iret
pop
adc
inc
imul
xchg
jbe
stos
test
mov
outsl
int
outsl
iret
sub
add
dec
add
xchg
frstor
ret
jnp
mov
inc
inc
popf
lods
cmpsl
test
pop
xor
jo
andl
out
or
push
mov
imul
jle
xor
or
scas
cmp
fbld
xchg
stos
andb
outsb
ror
inc
dec
fistps
enter
pop
addr16
cs
stos
pop
xchg
icebp
int3
lds
imul
js
shll
ja
push
xor
ljmp
pop
out
lds
enter
xor
adc
cwtl
mov
xor
fs
lcall
and
cmp
fstpl
sbb
pop
push
out
mov
mov
jb
mov
nop
imul
imul
sbbl
mov
pushf
loopne
dec
mov
fiaddl
sub
inc
gs
mov
cmp
add
dec
fucomp
and
jb
rcr
inc
xlat
xchg
mov
imulb
sbb
insl
popa
cmp
push
enter
fidivl
imul
jg
in
jle
and
cmp
fsubrp
push
ja
jecxz
cmpsl
mov
xchg
cmp
sub
shrb
les
gs
xor
cmp
adc
repz
mov
pop
lods
xor
and
sarl
jge
sbb
mov
ljmp
iret
push
add
lret
pop
ja
cmp
mov
xor
fdivr
iret
push
jo
push
adc
insb
fldt
lahf
aas
outsb
test
cltd
xor
or
test
adc
pop
out
fidivrs
cmp
cmp
mov
aam
sarl
fwait
pop
rcll
sbb
popf
push
js
xor
inc
dec
push
xchg
dec
mov
orl
xchg
scas
orb
inc
lea
push
push
inc
in
test
mov
mov
add
pop
jae
adcb
mov
sahf
ja
stos
test
xchg
jmp
pusha
mov
mov
daa
loopne
fsubrs
jecxz
pop
lret
sbb
cmp
fstps
push
xchg
movsl
and
out
es
push
mov
stos
xor
sbb
addl
js
sti
xchg
insl
cwtl
aad
leave
mov
sub
rdtsc
enter
add
pop
insl
adc
jo
test
subb
rclb
stos
stc
cmp
lock
dec
iret
xchg
aad
or
xor
dec
icebp
pop
xchg
cmp
dec
mov
xchg
mov
pusha
and
adc
nop
dec
subb
popf
push
push
scas
movsb
scas
test
adc
cmc
popa
cmpsb
cmp
xchg
jle
inc
in
cmp
inc
inc
fsubl
sarb
cmp
push
inc
push
mov
xchg
sbb
lahf
pop
int3
dec
mov
inc
into
push
out
jno
out
push
xchg
pop
mov
mul
mov
ljmp
cmp
ss
loop
jmp
inc
in
sub
movsb
xchg
ds
pop
out
mov
cmpsb
cmp
mov
inc
fsubr
mov
mov
cmp
sbb
and
xor
push
mov
jge
das
mov
xchg
lcall
cwtl
inc
outsl
lcall
inc
enter
push
mov
leave
sub
cli
and
mov
push
rorl
test
xchg
mov
dec
loopne
adcl
mov
push
hlt
inc
fisubl
fidivrl
or
cpuid
cmpsl
and
mov
repnz
fiadds
sahf
inc
std
insl
cltd
push
ss
inc
loope
idivl
mov
add
fwait
dec
mov
inc
out
mov
jp
xchg
bound
jge
stc
mov
add
xor
push
push
nop
xor
mov
dec
or
das
xor
mov
js
dec
adc
jecxz
xchg
mov
sbb
sar
jmp
xor
jmp
repz
sub
sub
enter
sti
fwait
sete
push
cmp
push
iret
push
jle
cmp
lret
xor
aas
inc
test
es
fstpl
inc
lea
pushf
shrb
jp,pn
xchg
ss
mov
aam
fadds
aaa
sbb
bound
cmc
adcb
mov
sub
xor
sti
ret
cwtl
es
loope
imul
fisubrs
xor
jle
je
push
jbe
push
addr16
ja
cmp
nop
add
sbb
inc
shll
cmpsl
mov
push
out
aas
xlat
xor
enter
sub
dec
cltd
cmc
imul
mov
pop
push
xor
push
aas
andb
pop
pop
mov
sub
and
cmp
aad
mov
sub
cmp
repz
pop
roll
dec
push
ds
imul
sub
mov
imul
dec
shll
jae
popa
inc
cli
mov
mov
dec
add
mov
push
mov
mov
dec
pusha
cld
jbe
pop
mulb
testb
add
rorl
icebp
and
daa
jno
and
test
mov
mov
dec
in
test
test
popf
lods
std
cmpsb
sbb
test
imul
sub
pop
int3
sub
int
add
pusha
sub
ret
push
mov
adc
ss
orl
aas
sub
repz
lcall
or
lcall
out
jge
xchg
mov
push
out
push
lret
xchg
mov
pop
sti
cmc
dec
idivb
int3
mov
pop
mov
push
xchg
add
dec
sbb
lea
sub
test
mov
push
pop
clc
inc
pop
sahf
pop
imull
aas
lret
mov
mov
pop
dec
cmp
add
test
mov
or
je
frstor
push
adcb
mov
jne
jns
inc
js
enter
lret
jmp
push
xchg
iret
rol
lret
out
and
sub
xchg
andb
lahf
fidivrl
mov
sbb
dec
lods
mov
iret
adc
jae
jg
icebp
pop
jns
push
adc
mov
imul
imul
pop
repz
hlt
add
mov
sub
insl
popa
aam
cld
out
mov
fnstenv
cmp
icebp
divl
push
pusha
dec
bound
or
add
test
repnz
mov
out
pushf
mov
jge
pop
inc
push
mov
sarb
ret
add
mov
icebp
or
add
fwait
lods
mov
fstl
daa
mov
dec
jb
out
fcmove
mov
out
call
les
or
movsl
adc
scas
aam
paddq
push
aas
ljmp
mov
adc
pop
xor
pop
or
hlt
dec
dec
xchg
cmp
jmp
sub
mov
nop
fldt
mov
mov
shrb
fucomp
jnp
flds
arpl
jmp
xchg
cmp
lret
into
insl
sbb
add
sbbl
pop
adc
mov
pop
ret
inc
sarb
mov
xor
fiadds
in
leave
or
sub
xchg
adc
mov
fldl
or
lea
mov
and
mov
and
scas
push
test
add
jno
mov
adc
xorl
add
cmp
insl
sbb
pop
mov
cmp
cmc
nop
fnstsw
adc
mov
cmp
test
pop
xor
and
addb
pop
dec
adc
inc
adc
ljmp
add
xor
orb
lds
and
scas
xor
mov
push
jg
mov
push
mov
adc
frstor
xor
sti
fwait
xor
stc
js
imul
pop
cmpl
adc
int3
push
cwtl
popf
sub
imul
movsb
sub
lcall
and
ss
aas
notl
push
ss
sub
fimuls
lahf
bndstx
cmp
addr16
aas
and
cmp
push
push
push
xchg
lea
sbb
mov
shl
push
xchg
ficoml
jno
add
jns
mov
mov
jnp
loopne
into
mov
push
lods
push
das
shl
das
call
imul
mov
data16
mov
jbe
or
inc
dec
in
mov
sub
inc
insl
fnsave
push
les
test
xchg
sub
call
jne
pushf
cmp
mov
cmp
sti
inc
cwtl
fadds
xchg
push
inc
pushf
mov
ljmp
sbb
gs
arpl
addr16
pop
repnz
in
ds
es
faddp
or
and
test
jns
andps
in
aaa
cmpsl
mov
pop
push
jle
jg
popf
push
pusha
call
cmp
cmp
in
xor
stc
inc
pop
sub
cli
stos
in
aaa
pop
lret
jg
leave
lcall
inc
xor
adc
lret
insl
jae
mov
push
push
fistps
xchg
push
jmp
ss
jno
sub
pop
mov
jecxz,pt
lods
je
add
hlt
lds
dec
cld
insl
add
sahf
xchg
popa
mov
popf
pop
or
push
inc
mov
fsubrs
xchg
inc
in
out
outsb
fdivl
jae
js
xchg
mov
lret
or
jmp
add
push
ja
pushf
fwait
xchg
ds
push
lock
fs
shlb
loope
or
jp
push
add
inc
pusha
mov
js
fiaddl
push
pop
scas
imul
cltd
fldl2t
repnz
bound
je
jne
hlt
jb
xchg
rol
adc
sbb
adc
stc
stc
sub
push
out
sti
mov
xor
cs
outsl
cmpsb
test
movsb
arpl
xor
es
aam
mov
cld
fbld
mov
sbb
fdivrs
mov
lret
addr16
loopne
inc
jae
aas
sub
xor
shll
jmp
aad
add
inc
dec
jae
mov
movsb
mov
cmp
push
icebp
or
xlat
cmp
hlt
inc
add
xlat
daa
int3
nop
xlat
push
test
icebp
adc
enter
inc
mov
repnz
ret
cld
stos
shrl
inc
cmpl
popf
pop
rolb
or
or
adc
cmc
xor
and
mov
aam
mov
rcrb
jg
cli
imul
lcall
mov
lock
push
pop
jmp
push
and
rolb
mov
insl
fildll
dec
push
pusha
lret
mov
or
andb
lods
mov
xchg
fistpll
push
clc
jb
jmp
sub
jmp
adc
dec
outsl
lea
mov
test
imul
pusha
pusha
daa
xchg
xorl
and
lea
xor
cmpsl
adc
insl
inc
dec
push
adc
and
rorl
cmp
jg
aas
mov
pop
jno
iret
and
testl
das
dec
in
push
sti
mov
out
lret
in
and
pop
mov
push
push
sahf
cmc
push
cld
test
sub
sbb
in
dec
sub
in
imul
pushf
jo
jg
stc
cmc
push
mov
xlat
mov
jp
scas
mov
inc
cs
icebp
shr
xor
stos
inc
inc
push
es
bound
into
icebp
push
jecxz
sbb
pop
jge
iret
loope
js
enter
or
fistpll
js
xchg
pop
je
sbb
repnz
inc
pop
imul
stos
mov
mov
add
mov
and
cld
movsl
cmp
mov
clc
notb
adc
sarb
mov
push
cmc
xchg
call
inc
movsb
ljmp
xchg
push
ja
es
mov
xor
jne
mov
fidivrl
or
rcrb
lret
cltd
cmp
rcrb
mov
repz
fisttpl
inc
or
scas
jb
repnz
fstpt
test
or
es
jmp
xlat
repz
dec
pop
push
cmp
xor
jae
or
mov
pop
jl
dec
icebp
mov
ret
xor
mov
adc
iret
dec
push
inc
mov
mov
and
jg
aad
hlt
mov
out
bound
mov
bound
enter
jp
fists
test
daa
sbbl
mov
aad
sub
cmc
add
push
daa
ret
and
or
into
jb
sti
in
icebp
and
cli
push
fdivl
add
sbb
scas
insl
inc
xchg
pop
insb
lds
scas
popa
inc
into
in
cmp
addr16
call
testl
jle
mov
sub
unpckhps
hlt
out
pop
fs
repz
fstpt
push
sub
inc
sbb
push
jp
xchg
jp
popf
mov
fbld
and
xchg
icebp
inc
rorl
mov
sub
xchg
insl
in
sahf
clc
jne
ljmp
addr16
cltd
testb
cltd
and
bound
leave
xchg
shlb
mov
popf
mov
fidivl
add
and
sub
out
test
jbe
cmc
or
loopne
dec
fiaddl
pop
xchg
sub
enter
or
or
pop
insl
in
sbbl
sbb
and
negl
adc
xchg
sbb
cs
mov
xchg
sbb
jne
int
dec
fdivp
je
iret
data16
xchg
loop
jecxz
out
outsl
mov
notl
xor
stos
es
push
lods
sbb
jmpw
in
sub
mov
push
lock
out
inc
sub
mov
sub
push
popa
pop
jbe
pop
aam
fisubs
aaa
clc
jg
jbe
ret
add
dec
cmp
xchg
imul
imul
iret
scas
scas
js
jmp
push
jbe
sarb
popa
fstpt
pop
add
lods
loop
fadds
lret
mov
lcall
lock
shl
jp
test
add
xchg
into
out
push
cmp
lret
enter
push
sub
cld
xchg
jg
or
and
dec
adc
ljmp
add
pushf
add
cld
ret
gs
xchg
or
mov
int3
cltd
mov
mov
and
jecxz
adc
mov
nop
sub
or
scas
xor
jbe
clc
push
jno
pop
icebp
lea
fdiv
test
nop
in
push
insb
fwait
scas
outsb
mov
adc
xor
pushf
xor
or
fsubl
lock
jno
push
jmp
into
enter
mov
cmpsl
leave
cs
hlt
and
daa
std
test
mov
into
gs
xchg
fsubl
pushf
jae
inc
or
push
std
adc
and
stos
ficoml
fbstp
call
lods
xor
xor
jb
in
add
xchg
cmp
and
jg
mov
sbb
mov
es
jg
imul
adc
insb
scas
fsub
imull
jbe
hlt
movsb
in
nop
add
aam
rcl
sub
xchg
loop
xor
cltd
mov
pop
and
sti
sub
pop
inc
pop
loope
data16
jo
data16
sub
sahf
or
aam
test
mov
push
sbb
adc
out
lahf
stos
pop
cltd
xor
mov
les
mov
and
push
mov
dec
lods
paddq
cmp
adc
int
jle
mov
pop
in
sub
xchg
test
pop
repnz
call
jns
rcrb
mov
inc
std
fsubl
xchg
in
repz
scas
jle
pop
notl
xchg
cltd
xlat
jo
sub
movsl
icebp
daa
or
and
xchg
insl
lods
fstl
cmp
push
jbe
adc
inc
add
sti
cmp
add
and
data16
mov
sub
or
arpl
shl
decl
mov
rol
xchg
pop
divl
stc
pop
or
push
pop
scas
jmp
xor
arpl
mov
cmc
ja
stos
sbbb
cmp
jno
std
and
jo
push
daa
and
xor
bound
cwtl
xchg
xor
loopne
mov
push
stos
imul
inc
movsb
jns
mov
lret
outsb
int
jo
ret
jbe
mov
rolb
jne
outsb
mov
cmp
les
jmp
arpl
pop
fwait
test
cmp
or
cmpsl
jl
lret
movsl
lds
mov
mov
add
jg
xor
loop
sbb
and
push
pop
mov
jbe
push
dec
leave
jo
adc
enter
fisttpll
sbb
or
fnsave
or
xchg
pop
ljmp
call
andb
shl
subl
fsubrs
dec
in
mov
je
cmc
outsl
jae
inc
fst
test
mov
into
mov
and
add
sub
adc
ret
int
and
jb
lcall
pop
add
mov
notb
pushf
lahf
cld
xor
rol
pop
divb
xchg
adc
mov
ret
xchg
fs
lret
insl
sub
and
pop
out
mov
pop
sbb
inc
pop
xchg
sub
adc
xchg
mov
inc
cmc
mov
xlat
lds
adc
sbb
out
xchg
xchg
jge
out
into
push
add
fnsave
jb
push
mov
push
inc
lcall
fwait
dec
adc
push
jl
loop
push
outsl
in
jae
scas
subl
or
and
xchg
push
mov
jg
mov
cltd
and
dec
rorb
cmp
fwait
push
pop
mov
fadds
call
leave
outsb
sbb
inc
incb
push
pushf
rolb
out
icebp
aas
jns
mov
mov
leave
sbb
jne
pop
jbe
jae
cwtl
cmpps
jbe
xor
inc
movsb
gs
movsb
push
xlat
mov
sarl
inc
leave
sub
cmpsl
aam
in
stos
cmp
mov
faddl
loope
sarl
pop
jle
push
sbb
not
push
and
mov
cmpsl
cltd
test
xor
sbb
test
mov
fsubrp
daa
test
popl
cltd
push
mov
fsubrp
push
mov
mov
aad
pop
cmp
adc
scas
mov
xor
push
and
inc
fidivrl
call
xor
stos
sahf
imul
aam
sbb
mov
mov
adc
xchg
mov
jo
sub
icebp
pop
xchg
sub
adc
adc
rep
mov
test
xchg
sub
in
out
test
or
push
pop
jbe
gs
lods
jl
sbbb
sbbl
jecxz
lret
cmp
fidivrl
jl
jl
js
or
pop
out
mov
inc
stos
pop
cmp
gs
rol
int
frstor
mov
mov
lds
orb
adc
std
mov
and
add
ja
dec
cmp
push
xchg
sub
adc
xchg
daa
cmp
or
or
inc
sub
dec
mov
push
lods
xor
and
add
xor
aaa
sub
inc
cld
cmp
jo
pop
out
lahf
push
adc
rorb
jmp
imul
sbb
test
push
or
xor
xchg
aaa
aam
dec
push
in
xchg
scas
adcb
pop
pop
xor
and
and
test
jecxz
pop
cltd
or
pusha
and
loop
fcomip
int3
cmp
stos
mov
fdiv
push
cltd
popf
sbb
mov
mov
das
les
or
dec
xor
notb
pop
sub
das
les
cmp
inc
or
fucomi
xchg
ficoms
lds
dec
pop
imul
cli
mov
push
scas
mov
dec
xor
aam
xchg
int3
dec
mov
fimuls
test
push
sub
xlat
cmp
add
sub
pop
add
jmp
iret
xor
pop
loop
push
sub
and
push
notb
push
add
cmc
ffree
cltd
pop
outsb
leave
inc
scas
stc
decl
incl
adc
loopne
sbbl
test
and
or
cmp
out
jno
jecxz
dec
cmp
in
mov
stc
jg
sub
mov
mov
lods
cld
je
adc
popa
repnz
enter
add
sub
adc
push
sub
cli
jne
icebp
movsl
lcall
ficompl
pop
icebp
imul
add
rclb
test
xchg
or
and
mov
ror
push
leave
lock
pop
cmp
xor
rclb
out
push
idivb
popf
jnp
xchg
mov
imul
sub
sbb
mov
shll
sub
ret
hlt
dec
xchg
sub
xchg
fbstp
scas
xchg
pop
dec
cld
stos
fdivl
cmp
stos
pop
adc
sti
fs
push
xor
int3
ljmp
inc
data16
push
or
iret
adc
or
cltd
jne
in
loop
addr16
call
in
jge
loop
icebp
push
shlb
sub
inc
ja
inc
movl
sub
sub
fadds
push
je
aam
sub
insl
ja
pop
sbb
push
cmp
pop
push
out
and
or
adc
and
xchg
pop
les
push
popf
or
ja
je
jo
aad
stos
mov
neg
not
inc
cmp
dec
sbb
mov
jecxz
pop
nop
pslld
je
out
je
mov
leave
pop
cmp
aas
rcrb
mov
mov
or
into
rcrb
lods
sub
out
out
pop
rcll
inc
xchg
test
sbbb
lret
pop
xor
je
inc
js
xor
inc
push
sahf
jno
andb
pop
push
push
frstor
pop
xor
mov
repz
into
aaa
and
push
jmp
xchg
std
lods
xchg
fst
push
loope
jae
lods
movsb
dec
imul
jnp
mov
xchg
inc
jmp
dec
repz
lcall
in
test
cmp
jno
or
inc
test
out
sub
mov
mov
or
pop
cmp
xlat
in
or
sub
jmp
jp
cmc
lock
adc
lcall
pop
pop
out
mov
lahf
push
mov
sbb
dec
arpl
js
loop
sbbb
clc
cmpsb
imul
lock
insl
push
lds
pop
push
add
filds
lret
ja
ja
popa
dec
mov
jge
mov
lock
sbb
sub
loope
fdivs
cmp
inc
faddp
sahf
and
int3
inc
mov
out
cmp
rorl
mov
push
mov
insl
stos
sub
fldcw
out
push
push
inc
lret
jbe
cmp
loop
or
fstps
inc
fbstp
fwait
xchg
adc
jecxz
in
sbb
jnp
addr16
mov
mov
out
shl
popa
insl
sbb
out
mov
shr
pop
cmp
iret
mov
sbb
inc
xlat
xchg
pop
add
leave
mov
ret
and
mov
icebp
in
push
push
xlat
movsb
out
mov
rep
cwtl
jl
mov
mov
ss
jg
pop
pop
push
xor
or
pop
mov
leave
pusha
sub
sub
or
into
mov
inc
ret
daa
inc
xor
inc
inc
out
fwait
sti
inc
pop
bound
adc
idivl
xchg
push
out
mov
sti
xchg
push
inc
or
mov
cmpsb
inc
pusha
fdiv
aad
cmpsl
push
xor
or
cmp
push
imul
sbb
in
dec
hlt
cmp
lock
orl
sbb
dec
imul
test
mov
pop
imul
sub
int3
mov
aad
jl
movsb
imulb
adc
cmpsl
nop
jne
lods
outsl
mov
mov
pop
test
popf
arpl
fsubrs
mov
xchg
pop
sub
inc
je
jne
inc
call
js
mov
cmp
sbb
dec
adc
mov
cmp
leave
mov
xchg
sub
mov
sti
iret
imull
push
mov
and
insb
cmp
adc
fsubs
jno
cs
pop
mov
and
xor
outsb
movsb
jns
inc
mov
cmc
adc
mov
ret
jnp
ljmp
jbe
popa
stos
lock
lret
fxch
lret
fwait
push
inc
xchg
pop
insl
mov
loop
lret
add
inc
ss
paddq
or
mov
fwait
mov
mov
lret
or
orl
dec
sbb
inc
outsl
lahf
stos
insl
inc
pxor
fldenv
test
in
outsl
fldt
mov
push
mov
imul
pop
cmp
loope
bound
mov
xor
jae
dec
gs
aaa
in
mov
adc
fstps
aas
pusha
lret
aad
mov
push
mov
cmpsb
sbb
icebp
clc
adc
les
dec
cmpsb
xor
shlb
shlb
mov
loop
arpl
ja
shll
test
in
fimuls
call
rcr
push
notl
cmp
mov
sbb
mov
loopne
nop
das
pop
mov
xor
insl
repnz
bound
adc
test
push
aam
fildll
fildl
mov
int3
arpl
mov
icebp
mov
cmovs
mov
mov
or
mov
in
icebp
xor
addr16
mov
and
loop
inc
in
gs
pop
leave
scas
ret
fsubs
mov
ja
xor
cwtl
xor
push
adc
mov
jl
sbb
inc
fldenv
push
popa
test
stos
xchg
add
dec
mov
icebp
insb
xchg
mov
orb
push
ror
ss
ljmp
push
out
mov
mov
xorb
pop
push
in
xor
sub
adc
jno
int
adcb
int
pusha
testl
jle
jbe
sti
jp
dec
sti
fwait
out
sbb
mov
mov
jmp
cmpl
lods
sbb
push
les
ret
xor
in
cmpsl
shr
stc
ja
sub
rcrl
ja
bts
mov
imul
xchg
mov
sbb
push
adc
ficomps
js
aam
leave
xor
pop
notb
jecxz
pusha
lcall
adc
sbb
xlat
scas
push
cmp
cmp
pop
lods
cli
insl
push
cwtl
jp
repnz
mov
shl
repnz
popa
xor
rcl
movl
lret
in
xor
ret
imul
cmpsb
lods
mov
xchg
mov
sahf
sbb
jae
jl
aas
sbb
or
imul
push
lcall
push
push
xor
pusha
ss
loope
xor
pop
xlat
cs
sub
push
adc
data16
ljmp
jecxz
pop
jb
fstl
shr
pop
test
repz
and
movsb
xchg
adc
das
pusha
mov
mov
addr16
in
push
out
pop
loope
dec
arpl
lcall
mov
leave
add
dec
adc
loope
push
pop
outsb
cmp
and
popa
rep
mov
adc
clc
shr
xor
adc
cmc
jg
pop
cs
in
push
je
repz
and
loop
lret
dec
add
in
push
test
sti
negl
jnp
xor
adc
dec
scas
inc
inc
aad
imul
subl
xor
insl
sbb
out
and
fcos
dec
data16
inc
ds
cld
pop
xor
mov
mov
test
mov
xchg
push
inc
xchg
aas
jae
push
xor
stos
mov
call
mov
cmp
ficoms
jo
lahf
cmc
cmp
cmpl
ds
sti
loope
adc
push
hlt
sub
push
pop
test
sarb
aam
popa
push
and
insl
mov
test
daa
mov
adc
test
sbb
mov
out
lods
mov
test
add
inc
lret
outsl
xchg
cltd
adc
stc
mov
jne
rcrl
add
cmp
pop
fdivrs
xorl
es
ret
outsl
rol
fs
mov
add
mov
mov
xor
pop
aaa
enter
out
mov
in
jne
pushf
or
fidivrs
xor
and
push
jae
fiadds
adc
mov
and
call
xchg
loopne
push
lea
cmp
mov
int
fstl
dec
push
filds
dec
and
or
lahf
iret
popf
stos
lret
stos
sub
outsl
push
cwtd
lods
inc
lret
adc
retw
inc
lret
rolb
pop
and
std
addr16
mov
inc
test
add
jmp
stc
sbb
mov
shrl
mov
lea
pop
jae
cmp
push
rolb
cmp
sub
enter
negl
sbb
jg
mov
out
sbb
jbe
mov
test
pop
jae
push
pusha
mov
sub
loopne
sub
in
iret
mov
shlb
or
pop
and
xor
pop
icebp
and
xlat
push
mov
negb
push
jbe
xchg
push
push
pop
shrb
mov
adc
add
push
in
outsl
and
scas
notb
cli
pop
shlb
cmpsl
jp
loope
dec
mov
jle
fucomip
and
add
std
in
js
cltd
stos
jbe
sti
iret
outsl
aas
jmp
out
or
push
movups
fimull
loope
xchg
jae
dec
ffreep
movsl
jno
int3
sub
adc
mov
sbb
lret
jecxz
pop
sbb
pop
ret
in
std
into
imul
sub
push
adc
mov
fists
pop
adc
adc
inc
gs
sbb
add
jg
out
xchg
and
xor
aam
bound
inc
hlt
aad
dec
stos
adc
sub
add
enter
jmp
ss
fstpt
mov
cli
inc
jl
sub
int3
dec
ds
sbb
adc
sti
aam
enter
addb
aam
and
jmp
dec
cmpsl
cltd
in
inc
pop
xor
add
cs
test
jno
popf
sbb
data16
cmp
clc
in
sbb
dec
sahf
cmp
push
or
mov
inc
inc
ret
mov
jecxz
xchg
xor
xor
pop
leave
aas
mov
in
fsubl
aaa
dec
addr16
cld
xor
cmp
push
call
sarb
pop
aaa
outsl
mov
sti
add
fucomi
sbbb
aad
pop
stos
shll
jns
rol
fldl
sbb
jno
stos
jecxz
leave
les
xor
cld
fwait
xchg
pop
sbb
add
clc
nop
imul
iret
add
shll
pop
mov
cmpsb
jne
cmp
outsl
fldt
pxor
jmp
ljmp
mov
enter
lods
dec
add
icebp
inc
je
adc
mov
dec
rcrb
or
or
pop
mov
and
and
lock
push
fwait
mov
movsl
jmp
int3
sbb
pop
jae
mov
icebp
pop
jmp
jae
xchg
dec
push
shll
or
push
ret
std
cmp
imul
insb
aaa
in
pop
cmp
negl
and
jns
mov
xchg
rcl
xchg
imul
mov
mov
divl
enter
mov
inc
loopne
rorl
iret
shrl
incl
fisttpll
sti
push
andl
ret
push
gs
outsb
xchg
mov
fwait
ss
pop
imul
int
pop
add
jmp
insb
jno
stc
mov
out
sbbb
pushf
idivb
fnsave
cld
popa
flds
jp
push
push
jle
pushf
sub
stc
sub
inc
insb
cmp
sbb
push
jns
scas
roll
lock
insb
aaa
ja
push
ficoml
sti
or
or
sbb
jnp
out
push
mov
loop
xor
aaa
jae
mov
xchg
mov
xchg
ljmp
testb
jno
out
aam
in
and
sub
pop
vfmsubss
mov
adcl
into
cld
lcall
pop
mov
sti
adc
xor
add
lods
out
in
xchg
mov
push
jmp
and
pop
stos
jo
lods
test
inc
sbbb
lret
lock
test
lods
fninit
js
push
aas
das
in
mulb
call
xor
sub
mov
cs
mov
imul
sub
int
mov
jecxz
icebp
mov
les
testb
push
dec
mov
in
aas
divl
fnstcw
call
xor
aad
mov
addr16
rclb
push
shll
add
lahf
push
ds
fistpl
sbb
dec
xchg
outsb
sbb
aas
hlt
cmp
clc
addr16
lret
or
mov
in
pop
xor
sub
fistpll
jae
xor
ds
or
sahf
jno
enter
and
cli
stos
in
bound
mov
insb
fsts
jmp
fwait
int
cmpb
sub
test
popa
push
lds
imul
jmp
movsl
add
adc
movsb
repnz
push
scas
dec
outsl
jns
rcr
jo
xchg
push
or
lods
imull
xchg
mov
je
movsl
cltd
test
inc
call
mov
adc
and
es
push
fsubrs
aad
insb
dec
notb
call
push
lcall
sahf
mov
inc
sbb
enter
fsubs
cli
pop
mov
sbb
sbb
push
lcall
fsin
insb
dec
in
jns
fxch
push
inc
out
test
mov
stos
fists
mov
jne
inc
fisttpl
cmp
sbb
cmp
in
mov
fwait
fwait
jb
xor
inc
cmc
insb
stc
mov
inc
mov
xchg
ljmp
out
mov
cmp
jg
cld
xchg
push
mov
or
add
jmp
jecxz
xor
leave
pusha
pusha
aad
push
in
and
mov
popa
movsb
jecxz
xchg
jecxz
leave
es
mov
sub
cs
ret
mov
xlat
lods
sub
pop
stos
push
sub
mov
dec
sub
lods
and
xor
cld
sub
add
mov
inc
jbe
int
xchg
loope
inc
es
or
ljmp
mov
mov
xor
cld
lahf
sbb
and
jg
push
popa
add
push
in
cmp
sti
push
push
aaa
mov
adc
cmp
xchg
in
cmpsl
fisubl
mov
and
and
adc
shlb
sub
popl
sbb
cld
or
xchg
sub
sarl
pop
pop
dec
scas
scas
jbe
mov
or
outsb
sub
rcr
mov
int
sbb
aam
push
cmp
jp
mov
loop
mov
cmpsl
test
dec
ret
or
adc
jae
test
mov
mov
sub
jns
lock
test
push
mov
call
loope
aas
xchg
dec
movsl
andb
sub
out
cmp
pop
popl
jns
bound
stos
dec
les
int3
mov
push
stc
mov
lret
fs
dec
push
mov
sar
and
rcrb
decl
cmp
scas
test
std
aad
xor
imul
inc
pop
mov
mov
dec
jge
pop
xchg
push
adc
jmp
pop
lahf
mov
xchg
aam
out
add
cmc
push
jecxz
fucomip
mov
cmpsl
es
mulb
movsl
out
pop
pop
inc
pop
add
add
mov
aad
test
gs
lcall
cmpsl
jmp
pusha
bound
sbb
addb
sub
cmp
insl
xchg
out
ret
mov
mov
and
aas
dec
lock
fsubrs
into
push
jae
enter
sahf
fidivl
sahf
cli
xchg
es
stc
mov
push
je
mov
stc
or
icebp
jle
int3
cmpsl
rorb
mov
in
daa
mov
xor
test
push
shlb
adc
clc
fnstcw
sbb
rolb
inc
cmp
xor
mov
pop
test
outsl
test
mov
fimull
adc
dec
nop
xorb
leave
push
rol
xchg
push
mov
cmpsl
insb
sub
popa
call
fs
adc
addr16
xchg
cmp
dec
mov
mov
iret
mov
push
push
jbe
iret
push
and
mov
cmp
xlat
orb
pop
add
or
xor
push
jno
fcomip
jecxz
xchg
sub
add
add
stos
push
xor
out
push
xchg
xchg
scas
inc
std
xor
dec
je
dec
out
in
test
lret
dec
pop
dec
xor
sbb
xchg
xor
inc
pushf
or
sub
inc
mov
jle
enter
push
inc
into
movsl
cmc
jae
rol
xchg
xor
sahf
cld
aad
test
push
jns
cmpsl
test
cmpsb
add
jo
in
aas
xchg
lret
in
ds
insl
movswl
cmp
addb
jns
or
rclb
mov
xlat
lcall
arpl
ds
pop
lods
repz
inc
shr
insb
dec
inc
data16
or
sub
stc
adc
inc
fmulp
adc
pop
xchg
out
sti
inc
out
mov
xchg
dec
les
inc
bound
cmpsl
lock
cmpsl
sbb
mov
sbb
push
in
in
inc
adcb
pop
and
lret
daa
jg
push
cmp
and
das
jp
mov
push
sti
mov
jb
icebp
arpl
sub
stc
add
push
mov
lods
inc
clc
sbb
jo
imull
xchg
cmpsb
clc
and
inc
ret
dec
mov
jae
sti
sub
ss
add
mov
imul
inc
push
xlat
sti
and
jge
lret
scas
mov
leave
dec
pop
sub
aaa
cmp
mov
movups
inc
push
jmp
dec
adc
mov
xor
test
lret
bound
fucomip
sti
dec
jp
adc
sbb
pop
sbb
enter
jne
sahf
pop
scas
outsl
lar
mov
xor
ljmp
mov
sub
cmpsl
jns
jp
mov
orl
mov
mov
dec
jb
mov
mov
inc
cmc
xor
cmpsl
dec
sbb
jne
in
mov
rcl
push
gs
repz
lds
lcall
popa
inc
add
andl
testl
adc
adc
sbb
and
into
and
xchg
std
lods
inc
and
add
dec
and
and
lods
cmpb
pop
popa
lret
cmp
lcall
popa
adc
cmp
mov
xor
sbb
das
and
add
push
mov
jecxz
sub
outsb
mov
jge
iret
int3
mov
push
mov
xor
mov
lcall
adc
inc
into
and
jbe
imul
and
cmpsb
xor
arpl
in
sub
xchg
std
or
or
int3
fisubrs
mov
aam
pop
rcrl
icebp
imul
dec
mov
adc
push
xchg
std
cmp
xor
movsl
mov
mov
xchg
movsl
add
cld
mov
loope
dec
push
popa
aad
jbe
push
jne
xchg
das
mov
jno
inc
dec
dec
lock
data16
xor
xor
or
fdivrl
bts
pop
imul
jne
or
add
hlt
cmpsl
negl
cli
iret
dec
mov
testb
ss
push
cmp
shr
jge
fsubr
pop
lahf
jno
shlb
popf
stos
adcb
hlt
pop
mov
mov
xlat
repz
pop
xchg
mov
mov
pop
bound
mull
test
mov
xchg
daa
jmp
ljmp
dec
adc
add
jecxz
pop
lcall
pop
inc
pop
xor
rcl
push
add
fnstsw
xchg
int3
aad
out
add
xchg
jbe
stos
in
jmp
insl
xchg
sub
cmc
mov
cli
inc
nop
repz
push
add
ss
stc
cmpsl
stc
jg
testl
pusha
enter
sbb
call
push
repz
fidivrl
divb
out
mov
ret
sbbl
add
lea
cmpsb
jge
int3
call
enter
adc
or
jl
mov
out
test
pop
orl
jnp
loopne
ja
enter
test
mov
pop
lret
mov
std
test
sub
pop
cltd
das
stc
mov
mov
mov
xchg
in
int3
add
mov
xor
lret
mov
xchg
gs
mov
sub
or
dec
insb
sub
std
repz
dec
arpl
mov
loope
fidivrl
int
sbb
loopne
inc
stc
or
shrl
or
jno
mov
mull
cmc
sbb
je
jno
les
sub
pop
test
mov
and
shll
les
add
xor
and
xchg
dec
xor
mov
pop
xchg
inc
out
stc
out
imul
dec
mov
jg
stos
lods
add
adc
pop
scas
les
xor
xchg
je
xor
cmpl
cmc
sub
imul
push
dec
shr
xor
loop
xchg
jmp
sarl
imulb
push
imul
insl
aam
cmp
mov
mov
leave
iret
mov
add
data16
in
test
mov
std
int
xchg
dec
inc
outsl
test
in
pop
sbb
adc
popa
stos
sub
inc
xor
jno
jmp
movsl
pop
cld
push
sbb
or
push
push
xchg
popf
add
mov
pop
sbb
dec
add
xchg
xchg
test
icebp
jbe
pop
push
out
sbb
test
mov
cmpsl
idivb
adc
xor
jp
clc
or
das
sahf
gs
adc
add
mov
jne
lds
mov
insb
push
mov
mov
push
lret
jnp
jno
imul
inc
xlat
daa
pop
push
xchg
xchg
pop
lcall
dec
mov
xchg
or
clc
pop
mov
rolb
test
push
popa
or
push
das
aad
adc
sahf
mov
mov
and
push
push
sbb
dec
inc
jo
notb
clc
imul
cmp
jl
mov
mov
stos
pop
cmpsb
sbb
inc
test
mov
stos
push
dec
xlat
sahf
xor
mov
mov
aas
push
cmc
gs
out
test
adcb
xchg
add
test
ss
mov
cmpsb
out
cwtl
test
pop
fstpl
fsub
sub
stc
cmpsl
icebp
cltd
mov
lret
adc
aad
rorb
leave
in
sti
jl
movsb
mov
sbb
in
ss
fiaddl
out
and
iret
adc
sbb
les
scas
mov
and
and
cmp
cmp
rep
out
into
hlt
dec
mov
xlat
fstpl
push
push
out
scas
rclb
mov
dec
sbb
mov
cli
push
cmp
push
aam
xchg
mov
repz
xchg
cmc
pinsrw
xor
fldenv
fld1
jg
scas
int3
addr16
in
xchg
push
push
cmpsl
jecxz
push
pop
mov
shrb
adc
incl
or
fwait
nop
sub
xlat
push
cltd
fdivl
dec
jae
insl
movsl
inc
lcall
adc
sbb
pop
pusha
stos
push
idivl
stos
scas
enter
rolb
popa
daa
mov
addl
aam
loop
scas
and
mov
jle
repz
mov
mov
mov
les
gs
jb
pop
sub
jb
aaa
fcompl
cmp
data16
inc
popa
sbb
push
ja
shrb
js
icebp
push
mov
xor
es
pop
adc
int3
jp
jns
xchg
sub
inc
mov
mov
lret
ret
ss
pop
fs
dec
sbb
add
jnp
add
mov
fwait
push
test
mov
jmp
sbb
mov
clc
aaa
push
stos
out
xchg
ds
jne
std
imul
clc
test
mov
out
sub
jo
les
cwtl
xchg
inc
leave
shl
xor
inc
jno
mov
insl
pop
inc
lahf
dec
roll
mov
mov
lods
inc
mov
pop
test
jp
adc
push
fistpll
rorl
pop
or
sarb
out
imul
ljmp
jno
push
push
movsl
mov
dec
xor
jne
xor
mov
sub
sub
cmp
push
outsb
rorl
insb
add
push
scas
fwait
mov
xor
aad
sbb
mov
push
xlat
insl
gs
ret
xchg
fs
cmp
jecxz
clc
std
sub
inc
lcall
dec
mov
notl
rorb
mov
aaa
cmpl
xchg
decl
int3
rcrb
mov
pop
cmc
xor
test
mov
xchg
imul
cmp
mov
sbb
test
insb
lods
das
jge
cmp
dec
xchg
xlat
data16
jecxz
adc
mov
mov
fwait
les
push
insl
adc
sub
or
and
push
dec
ret
je
js
xor
fs
sbb
mov
jmp
or
cs
xchg
or
or
lea
pop
jne
mov
stc
ret
mov
sti
ljmp
jno
clc
lret
sti
flds
or
pusha
in
mov
lret
and
sbb
xchg
outsb
in
andl
xchg
mov
out
push
in
and
xor
aad
lea
movsb
mov
cmp
dec
out
insl
nop
daa
mov
dec
scas
inc
xorl
mov
pop
cmp
xor
test
xchg
sub
inc
pop
adc
xchg
mov
lds
shl
pop
mov
push
mov
push
mov
inc
push
pop
idivb
loopne
rcrl
movsb
ret
add
and
and
push
inc
icebp
xor
xor
adc
movsl
loop
fstl
xor
mov
jg
inc
hlt
adc
add
sbb
sbb
sbb
out
scas
and
pop
mov
dec
push
lahf
or
rolb
xchg
mov
inc
lds
xchg
test
ljmp
or
js
sti
clc
mov
test
mov
jb
das
dec
mov
std
aam
mov
jmp
dec
adc
call
out
in
xchg
sub
pop
jg
mov
xor
push
or
fnstsw
sahf
mov
pop
leave
push
mov
mov
jecxz
sbb
xchg
add
sub
sti
es
lock
pop
bswap
push
sub
mov
push
je
dec
rcl
and
mov
das
pop
int
sbb
rolb
mov
fldpi
orb
fstp
inc
or
pop
data16
cwtl
and
orb
fisttpll
mov
bound
loop
mov
xorb
outsl
or
cwtl
adc
adc
call
fdivs
ja
pop
shlb
loop
stos
cmp
insb
cmc
xchg
or
cmp
pushf
test
fsubrs
scas
stos
mov
push
add
xor
sub
cmpsl
lcall
jge
mov
fdivrp
adc
add
jp
inc
ret
pop
jns
jns
dec
xor
js
lea
xchg
dec
jmp
lcall
ja
int
mov
push
jmp
jp
aam
mov
aam
lret
xor
ds
pop
push
push
sbbb
insb
push
mov
loopne
cmc
push
sbb
sub
jg
into
mov
mov
xchg
stc
dec
pop
cmpsb
mov
insb
call
mov
jge
sub
pushl
or
das
pop
scas
add
iret
jmp
and
cmpsl
aas
repz
out
insb
push
roll
jae
mov
ds
lea
sarl
icebp
aam
and
test
push
fisttpl
fnsave
pop
dec
and
jb
scas
xchg
popf
or
inc
into
enter
aas
lahf
inc
lret
mov
fisubrs
lds
insl
mov
out
cmp
dec
loopne
pop
rcrl
pop
mov
add
outsb
adc
ret
lds
sub
sub
pop
mov
rcll
jo
ljmp
jmp
pop
adc
nop
xchg
and
pop
out
inc
push
test
cmp
lahf
xor
xchg
adc
xlat
add
shlb
daa
sti
roll
add
stos
inc
int
jbe
shr
leave
fistpl
cmc
jnp
xchg
pop
out
cmp
fucomip
jg
pop
rolb
pop
sbb
inc
fiaddl
and
test
mov
adc
jo
or
ja
xor
cwtl
notl
lret
pop
xchg
lock
lds
cwtl
andb
shrl
add
mov
xor
xchg
or
inc
lods
icebp
hlt
arpl
in
icebp
xor
xchg
inc
add
jnp
xor
lahf
aas
lea
jns
xchg
sbbb
push
sub
jecxz
mov
pop
mov
rcrl
gs
out
xor
push
jo
pushf
inc
mov
ljmp
std
dec
test
add
sub
pop
jp
lea
mov
popa
push
in
dec
ret
jecxz
jmp
test
out
es
outsl
ficomps
rolb
jmp
dec
cmp
dec
mov
mov
aam
lods
mov
pop
pop
shrl
jg
test
push
lret
xor
xchg
push
lock
mov
ret
lahf
jecxz
pop
and
icebp
mov
sub
mov
mov
sti
and
xchg
xorb
dec
add
jb
dec
mov
or
dec
cmp
pop
leave
gs
lock
jo
adc
idivb
or
xchg
and
sti
or
out
fcomip
or
jb
pop
cmp
xchg
mov
fldl
dec
cmp
sub
xor
int3
das
ret
adc
push
and
test
adc
mov
lahf
mov
dec
and
pop
sbb
or
cmp
cs
mov
cmp
lret
mov
mov
mov
in
and
push
or
jnp
xchg
leave
int
xor
sbb
sub
xchg
pop
xchg
mov
popw
mov
push
xchg
pop
mov
xchg
pop
xchg
jg
iret
mov
sub
aad
push
pop
push
js
or
inc
pop
mov
bound
mov
pop
sbb
cmp
fwait
cmpsl
cmp
pop
pusha
pop
ds
xchg
sub
mov
cmpsb
ja
mov
cli
xchg
mov
sbb
test
mov
test
rol
das
pop
sub
pushf
add
rclb
push
jg
push
mov
fmulp
fimull
shld
xor
sbb
cmpl
sarl
idiv
xor
imul
xchg
xor
das
mov
sub
dec
adc
test
add
ret
mov
adc
or
insl
mov
xchg
cld
arpl
mov
and
push
xor
sbb
pop
jne
clc
test
subb
cmp
fidivs
fists
andb
cwtl
leave
xor
cmp
cmp
inc
jmp
push
adc
rorb
dec
push
fnstenv
popf
xor
xchg
add
jmpw
sbb
pop
jae
call
out
int
cmp
into
stos
rol
es
lret
xchg
add
sub
sbb
popf
out
xchg
pop
jns
mov
jmp
or
adc
push
push
pop
popf
test
ja
push
mov
jae
mov
pop
and
push
cwtl
nop
jl
mov
jno
sub
jne
jae
sahf
sbb
cmc
mov
data16
adc
xchg
test
test
mov
pop
mov
add
xor
aam
dec
xchg
xchg
inc
inc
stos
repnz
gs
fstl
mov
pop
mov
jp
xor
inc
dec
push
add
fidivl
and
and
iret
jbe
clc
cmpsl
lock
and
cmp
in
add
xchg
add
xor
xchg
js
into
jo
aad
lcall
stc
je
notl
popa
sbb
mov
loop
int3
lods
jbe
xor
cmpl
enter
pop
mov
lods
and
into
jmp
inc
xchg
or
dec
shlb
aas
xchg
shll
sbb
inc
sbb
xlat
loopne
fwait
movsl
jnp
mov
push
inc
in
xorl
sub
aam
seta
add
push
mov
nop
mov
xchg
adc
enter
or
cmpsl
xor
cmp
fisubrs
lret
sub
jno
pop
xchg
sub
icebp
xchg
shrl
or
or
xchg
sub
insb
add
dec
mov
pop
sbb
add
sahf
mov
test
out
mov
pop
or
pusha
cmp
dec
and
mov
push
jg
sbb
das
cmp
xor
add
sbb
lods
or
cmpsl
fsubl
sub
dec
and
out
add
add
fldt
mov
pusha
push
or
clc
add
mov
sbb
xchg
pop
mov
dec
nop
cmp
and
fcmovbe
push
sahf
hlt
pop
movsb
cmp
mov
ret
outsb
arpl
mov
out
xchg
xchg
sub
push
sub
or
xlat
and
cmp
dec
lahf
jb
or
stos
mov
leave
mov
cmpsl
pop
adc
ljmp
mov
ljmp
pop
dec
loopne
popf
adc
addr16
call
cmp
mov
mov
jno
lcall
cltd
sub
xchg
ss
jns
push
repz
mov
ja
bound
sahf
or
adc
xchg
dec
std
push
movsb
cmp
repz
sub
dec
mov
daa
repz
jb
sub
lods
out
mov
add
in
mov
aas
test
sub
mov
mov
das
mov
or
out
pop
jecxz
das
aad
push
int3
mov
sub
jno
push
je
jbe
or
shlb
mov
popf
xor
mov
mov
dec
stc
adc
sbb
test
movsl
sub
lahf
mov
mov
cmpsl
adc
and
test
fsubrp
add
insl
test
imul
mov
adc
mov
inc
aad
or
jne
cmp
out
and
int3
arpl
inc
loope
jmp
lahf
and
pop
sbb
xchg
sbb
cmc
jge
je
push
push
push
add
addr16
pop
in
nop
mov
movsl
adc
loop
cwtl
jbe
mov
sbb
pop
sbb
shrb
loopne
cmp
jns
pop
data16
adc
push
rclb
fadds
and
js
ja
cld
sub
push
mov
jg
adc
add
mov
cs
jae
outsb
into
and
sahf
fiadds
iret
cli
cmp
mov
cs
xor
jno
cltd
js
lret
mov
adc
mov
mov
loopne
jl
mov
mov
push
xor
pop
dec
insl
xchg
sbb
inc
repz
jmp
iret
imul
mov
push
insb
add
mul
mov
je
inc
test
jmp
test
addr16
and
dec
test
loopne
nop
add
mov
sbbb
out
dec
cmc
jbe
mov
mov
outsl
int
push
sti
into
cmp
lret
xchg
push
or
fs
mov
mov
imul
cltd
add
enter
das
mov
xchg
xchg
lods
jo
xor
out
cmpl
sti
ss
add
lods
cmpsl
stos
jp
jecxz
xor
int
in
arpl
mov
mov
pop
jmp
or
les
sahf
jno
imul
xor
adc
test
ljmp
inc
mov
test
jmp
add
mov
adc
xor
push
adc
sti
pop
repz
xchg
dec
ret
jp
mov
adc
inc
mov
das
shrl
fiadds
sti
push
insl
and
bound
inc
sbb
ja
je
or
lds
dec
mov
call
sbb
in
cmp
lods
adc
push
and
cmp
push
or
les
stc
pop
loope
mov
jns
sub
cmp
dec
pop
cld
fwait
in
test
pop
hlt
pop
cmp
xchg
cs
jnp
sub
add
in
xor
bound
rcll
pop
ds
cs
dec
or
out
pushf
xor
pop
scas
cmpsl
loope
jo
adc
jno
das
push
in
xchg
jae
and
adc
rcl
enter
fstenv
aaa
pop
ss
and
push
xor
inc
clc
sahf
dec
pop
hlt
dec
jg
adc
push
adc
inc
sub
dec
xchg
jle
mov
mov
arpl
push
mov
push
jl
pop
sbb
addl
sbbl
cmp
into
cmpsw
divb
push
imul
jle
popa
testl
jle
mov
leave
mov
or
pop
scas
adc
adc
jae
sub
lods
sbb
out
in
test
stc
fucom
addr16
stos
js
xor
sub
sbb
sbb
fnstsw
mov
pop
push
aam
jle
addr16
pop
lret
dec
lock
jno
cli
repnz
aaa
cmp
mov
push
out
push
xchg
ja
mov
call
push
adc
cmp
jns
xchg
push
jp,pt
shrl
push
xchg
sub
lea
jns
imul
mulb
jge
fdivs
fistl
mov
pop
lock
shlb
andl
out
outsl
push
add
stos
loop
outsl
adc
xorb
jecxz
in
pop
mov
xchg
addr16
dec
lcall
mov
adc
arpl
pop
inc
cmp
outsb
int3
shl
add
inc
add
jno
push
cs
in
test
enter
popf
or
mov
jp
inc
adc
shl
mov
notb
in
pusha
mull
lods
in
jle
and
outsb
jp
rcrb
lret
mov
cltd
ret
stos
xchg
loopne
sub
mov
nop
addl
jg
shll
push
or
mov
jb
jbe
mov
fcompl
mov
jp
or
roll
inc
jmp
das
mov
mov
push
dec
in
xor
loopne
mov
dec
fwait
add
and
mov
lods
shlb
push
push
sub
sbb
neg
mov
xchg
jbe
test
dec
test
sbb
add
add
dec
cwtl
pop
push
nop
loope
mov
push
pop
hlt
or
add
sbb
lahf
ss
cmp
stc
dec
test
mov
cwtl
push
push
and
insl
xor
jne
in
push
hlt
mov
xchg
pusha
mov
bound
sbb
jp
jno
mov
sub
mov
and
insl
cmc
xchg
mov
cmp
addr16
roll
cli
mov
popf
sub
cmpsl
push
nop
mov
mov
insb
enter
sbb
out
insl
cmp
jbe
aas
loope
jmp
popa
test
in
mov
clc
jne
inc
shll
add
push
out
mov
pop
repnz
out
inc
fdiv
jns
je
pushf
xor
arpl
inc
and
cli
orb
cli
xchg
sbb
adc
daa
scas
and
es
inc
fxch
dec
jg
jne
pusha
xorb
loop
and
or
les
lds
adc
jo
push
add
out
mov
and
std
dec
test
cmc
jp
push
in
idivl
or
and
sub
mov
out
push
in
int
sub
ds
fsubrl
cmc
std
mov
mov
loope
push
cltd
mov
loope
push
xchg
scas
cld
dec
push
or
dec
sub
lock
adc
mov
lcall
pop
gs
mov
jo
and
insb
push
xchg
sahf
incl
outsb
out
popf
adc
inc
sub
outsb
jl
adc
repnz
cmpsl
insb
js
jp
inc
pop
pop
les
jg
fsubl
sbb
imul
jbe
dec
pushf
and
fildl
dec
je
pop
call
test
js
xor
cltd
fmuls
dec
mov
imul
popf
movhlps
pop
xchg
jbe
dec
sahf
out
hlt
xchg
xchg
les
push
in
jo
fisubs
adc
push
jno
cmp
jecxz
add
in
out
fnstenv
xchg
dec
cmp
dec
jecxz
outsb
sub
and
adc
test
or
sti
rdpmc
aaa
fwait
repnz
push
lea
adc
sbb
adc
fsubrp
aad
add
lds
test
and
hlt
dec
xchg
dec
fisttps
or
jbe
sbb
loope
cmp
hlt
xchg
out
xchg
imul
push
jne
aad
inc
nop
push
mov
insb
mov
mov
addl
ret
and
push
xor
sub
pop
loop
jle
mov
pop
mov
pop
les
mov
in
xchg
sub
arpl
pop
dec
aam
ljmp
mov
aaa
push
xlat
or
adc
int
push
sub
cmp
add
sbb
rcrl
rcrl
add
jg
icebp
mov
hlt
ret
sbb
xchg
ja
adc
xchg
sub
or
mov
push
or
inc
popa
pop
lock
imul
xchg
aas
jl
cwtl
xchg
mov
scas
mov
frstpm(287
iret
adc
xchg
leave
icebp
adc
cs
ret
or
mov
int3
pop
pop
test
dec
hlt
inc
or
pop
pushf
add
sti
jae
shlb
out
popa
dec
push
in
movsb
outsl
lret
mov
jmp
leave
and
sub
shl
movsl
ret
loope
mov
or
inc
xor
test
jno
push
shl
add
call
cli
cld
in
test
push
mov
subl
mov
je
cmp
xor
jmp
mov
loopne
insl
jge
mov
stos
push
adc
in
daa
leave
mov
cmpl
mov
shrl
xchg
dec
cs
sbb
aad
loop
mov
or
cmc
mov
ds
mov
adc
ret
sahf
mov
push
mov
lret
sbb
mov
ljmp
push
jne
add
or
popa
pusha
sub
mov
test
add
cmp
jns
ss
xchg
push
jb
xor
xchg
stc
popf
pushf
jnp
mov
fstpl
add
xchg
sub
inc
mov
movsb
mov
push
pusha
movsl
xchg
cmp
dec
or
and
and
and
pop
adc
aam
sub
loopne
call
out
pop
dec
adc
and
push
xchg
movsb
jbe
lret
xor
repnz
jp
fists
inc
lcall
sbb
or
xor
adc
jge
out
aas
cmpsb
dec
xchg
cmp
int
mov
mov
cld
cltd
in
fcmovne
and
jno
imul
lock
pop
push
mov
adc
jmp
mov
inc
jl
jbe
adc
mov
std
and
jecxz
imul
adc
inc
aad
xor
cs
mov
daa
hlt
imul
and
add
mov
sbb
sbb
rcrl
mov
ret
ret
and
or
sub
imul
push
fnsave
sbbb
pop
sub
into
dec
xchg
and
shrb
xchg
scas
subb
dec
loopne
ss
dec
out
lea
into
mov
mov
iret
loopne
adc
std
cld
mov
cwtl
test
fwait
dec
pop
xchg
repz
mov
pop
cltd
jmp
dec
cwtl
lock
cmp
mov
jg
sbb
or
out
mov
incl
sbb
and
iret
insl
ds
sbb
xchg
testl
mov
cmp
cmpsl
mov
adc
aad
dec
movsl
mov
enter
jle
fsubrs
out
add
xchg
dec
jle
inc
dec
xor
stos
mov
shrl
fisubs
xor
push
xor
scas
int
cmp
or
mov
or
xchg
movsl
mov
adc
hlt
or
mov
test
jno
push
fcomps
repz
xchg
mov
out
cltd
sub
out
notb
and
stos
jne
and
add
dec
inc
mov
arpl
je
inc
cmpsb
or
movsl
inc
gs
cmp
lods
pusha
fmuls
je
pop
std
ret
scas
inc
gs
fsubrp
addl
or
idivl
sub
mov
mov
enter
fiadds
jno
jg
lahf
jge
fsubrl
mov
mov
andl
push
lret
cltd
mov
sbb
cmp
test
gs
inc
jne
imul
icebp
ds
lock
scas
dec
and
ret
xor
lea
mov
mov
gs
mov
xor
insb
addl
pop
test
mov
daa
nop
fcomps
aam
hlt
mov
push
out
shl
fstps
mov
xchg
nop
xchg
push
pushf
out
cmp
out
popf
inc
cmp
pop
mov
xchg
mov
in
and
fidivrl
data16
clc
js
or
das
xchg
mov
dec
add
in
out
aas
leave
fnstenv
jge
and
sbb
mov
orb
jp
popf
je
cmpsb
cmpsb
xchg
xor
in
add
mov
divb
lds
movaps
xchg
mov
push
xor
jmp
dec
cmp
ret
push
aas
sbb
push
repz
aaa
sbb
xchg
ds
pusha
bound
jmp
or
push
mov
addl
inc
xchg
push
xchg
dec
push
or
aas
cmpsb
or
scas
mov
cmp
pop
sub
mov
pop
scas
ljmp
dec
insl
test
mov
push
xchg
pushf
scas
sti
push
addl
jmp
ret
loop
cli
lcall
jg
es
or
addb
sub
cltd
pop
mov
xor
push
push
jbe
xor
fadds
pop
mov
inc
js
mov
mov
mov
imul
aad
daa
xchg
xor
imul
out
sbb
dec
cs
testb
pop
jae
jle
rcrb
outsb
fisubs
ret
add
add
jb
mov
jae
xchg
inc
and
adc
cli
stos
pop
pavgb
andb
outsl
stos
fcoml
lods
mov
or
xchg
add
pusha
std
lcall
mov
outsl
or
mov
daa
mov
loope
sbb
rol
out
mov
leave
pusha
or
and
out
lods
xor
push
ljmp
xor
cmp
mov
sub
push
fwait
in
mov
pop
fildll
cmp
xchg
sub
pusha
inc
lock
mov
mov
arpl
ljmp
test
cmp
ret
cmp
dec
out
call
sbb
test
push
stos
and
jno
ficoml
test
fwait
xor
mov
mov
fs
inc
fisubrl
ds
jecxz
xchg
push
jmp
movsb
mov
enter
mov
lret
imul
adc
mov
sbb
mov
mov
jge
jnp
mov
lcall
test
bound
cmp
jecxz
cwtl
adc
dec
repz
jno
mov
mov
cmpsl
dec
xlat
dec
xchg
add
aas
add
out
adc
ljmp
test
cltd
mov
mov
push
aaa
into
std
aam
pop
push
jmp
mov
cmpsb
dec
mov
or
inc
icebp
mov
outsl
test
sbb
pop
dec
cmp
jle
add
lahf
outsl
in
adc
roll
sbb
sbb
and
jns
or
or
into
fcoml
xor
sbb
jle
pop
dec
lahf
xor
test
add
xchg
adc
fidivl
jle
push
cmp
jnp
rcll
xchg
repz
inc
aam
inc
sarb
cltd
js
sbb
mov
push
mov
pop
push
or
iret
and
jnp
add
jno
add
popf
and
cmc
mov
test
loop
cwtl
addr16
push
mov
aam
nop
sub
enter
inc
cwtl
push
andl
inc
adc
loope
inc
test
stc
nop
cwtl
sti
jmp
adc
movsb
jl
xor
std
jle
ja
ret
lret
hlt
mov
es
mov
push
xor
mov
fmul
and
push
aas
xchg
lds
and
int3
xor
sahf
or
lods
add
xor
stos
addb
out
mov
pop
scas
adc
ss
jbe
addr16
xchg
enter
xor
jb
aad
adc
stc
popf
xchg
je
xor
cmpb
cmp
mov
pop
adc
cld
inc
loop
jp
dec
lods
jge
cmp
sbb
hlt
jle
mov
xchg
xor
xchg
dec
and
mov
sbb
mov
inc
mov
dec
fsubrs
xchg
inc
push
hlt
pop
testl
jecxz
lret
mov
call
xchg
xor
shr
sbb
mov
cmc
xchg
cmp
jl
aas
xchg
pop
inc
sub
test
jnp
mov
js
add
movb
jecxz
insb
xor
arpl
push
xlat
add
push
mov
ffreep
sbb
lret
jne
ja
xor
push
sub
imul
mov
push
cmp
pop
dec
inc
or
pop
movsl
and
fnstsw
sbb
mov
loope
gs
xchg
sub
loope
enter
add
popa
lods
lea
ret
or
lods
xchg
and
jb
jbe
out
ja
mov
ror
pop
jno
fistl
notb
push
push
in
ss
negl
in
jle
fisubrs
pushf
dec
cmp
and
aad
jb
ljmp
call
rcll
hlt
leave
jb
xlat
in
les
cmpsb
aaa
jle
mov
jp
and
mov
std
or
test
jp
jl
lds
mov
inc
imul
loopne
jnp
outsb
jl
test
mov
xor
inc
pop
ds
movsb
mov
jecxz
dec
fld
add
fnsave
mov
push
push
mov
push
adc
cmpsl
mov
sti
call
shlb
mov
jecxz
dec
out
mov
jo
dec
add
sbb
xor
mov
loopne
cli
xchg
int
loop
pop
push
int
pop
mov
mov
sbb
ret
iret
xor
mov
ja
lret
pop
and
jmp
mov
stc
or
pop
cmp
or
dec
sub
pop
sbb
pop
fsubl
loop
and
jae
in
jnp
cltd
nop
dec
aaa
sti
sbbb
test
sbb
sub
pop
rolb
dec
cmp
push
inc
ret
in
in
dec
mov
jle
mov
cmp
call
or
pusha
mov
pop
pushl
shrd
in
mov
push
in
filds
lds
aas
dec
sbb
and
lea
push
fcomps
pop
ss
jmp
ret
pop
das
lea
mov
loopne
and
std
pop
div
frstor
lods
xor
jb
mov
jb
adc
xchg
test
jg
ljmp
push
pop
push
sbb
rorb
push
mov
add
push
sub
sub
pop
xchg
pop
or
scas
adc
fcomps
push
push
jnp
jb
push
pop
adc
ja
xchg
xchg
pop
inc
cltd
sbb
lret
and
sub
in
sahf
icebp
mov
xor
lock
hlt
or
out
push
loope
inc
pushf
outsl
xchg
in
dec
pop
cmp
jp
xor
imul
pop
cmp
sbb
cmp
cmp
test
xor
imul
les
insb
cli
mov
dec
mov
test
xlat
mov
aad
pop
pop
dec
aas
test
mov
dec
and
inc
pushf
push
cli
stos
adc
cmpsb
or
mov
jle
adc
popf
jo
cmc
xor
mov
mull
out
in
cmp
scas
into
mov
popa
push
pop
int
sbbb
xchg
pop
sahf
mov
cmpl
cli
roll
fcomps
icebp
addr16
xor
test
loope
jns
mov
xrelease
mov
call
add
sub
lcall
mov
xchg
les
sbb
xchg
test
or
cmp
xchg
push
faddl
xchg
sti
xor
inc
dec
fcmovbe
lock
jae
and
adc
lock
addr16
sub
pop
into
mov
out
add
in
sti
pop
int3
sub
insb
jl
xchg
push
test
mov
mov
into
mov
mov
adc
inc
aaa
or
mov
mov
lods
mov
jb
bound
cmpsb
push
icebp
mov
push
stos
mov
xchg
loope
sbb
cmpsl
pop
jnp
add
sbb
rorb
add
out
ficoms
sbb
ret
scas
cwtl
je
pop
test
leave
loope
incb
push
ret
vpshufhw
movsb
aad
in
mov
fidivl
xorl
mov
sti
sbb
fimull
testl
out
jecxz
sub
subb
cmp
xor
jbe
into
scas
xchg
out
int3
int3
xchg
lahf
out
lods
and
push
into
xchg
sahf
cmpsl
fsubp
les
es
int3
push
lea
pop
imul
and
push
scas
jg
int3
push
pop
push
jg
mov
rorl
mul
pop
testl
lea
pop
pop
and
rcl
cli
mov
jne
fnstenv
jg,pt
dec
pop
jo
loop
jne
jnp
pop
and
loope
out
mov
push
cli
jg
mov
cmpb
incl
jns
sub
lahf
push
xchg
ret
imul
add
sbb
add
xchg
imul
mov
loopne
stos
rol
xchg
cmc
hlt
push
fsubs
ret
pusha
div
outsb
ds
pop
add
mov
ffree
es
push
orb
repz
push
sub
pushf
subb
cmc
inc
jno
dec
cmp
popa
insl
sbb
jb
pop
add
aam
xchg
inc
sti
adc
pop
movntq
mov
xchg
pushl
out
test
pop
or
mov
sub
nop
pop
rorl
scas
and
pushf
cld
xchg
call
lock
mov
lods
inc
sbb
adc
imul
pushf
inc
cmp
repnz
sub
cmp
sub
jbe
cld
and
mov
sahf
daa
psrad
popf
sbb
testb
stc
cltd
in
jge
pop
out
mov
cmc
test
pop
sti
popf
stos
das
shll
dec
and
leave
repnz
stos
jp
pop
jne
andb
or
sub
inc
fisubl
add
xor
lea
add
std
or
lock
jl
push
pushf
ds
into
pop
jle
xchg
repz
fidivrl
rorb
add
mov
push
js
adc
sbb
pop
xchg
jns
xlat
insb
mov
outsl
incl
mov
xor
sub
xchg
cltd
sbb
dec
adc
ret
pop
insl
cmp
or
ljmp
sub
mov
xorb
mov
cmpsb
add
cmp
push
mov
add
push
arpl
mov
lahf
push
fisttpl
outsb
jl
mov
jge
mov
fistpl
inc
fcmovb
push
aas
mov
insb
adc
divps
ja
enter
xchg
pop
inc
lret
int3
jge
xchg
sub
ds
xor
fiadds
cmp
stos
fsubr
faddl
xor
xor
sbb
popf
fs
arpl
inc
jns
jo
xchg
jp
dec
lods
pop
or
jne
push
push
mov
mov
sbb
cmovl
out
ja
lahf
cwtl
push
data16
lock
and
jl
cmp
push
xchg
pop
int
mov
int
lock
cmp
mov
loope
addr16
add
jmp
mov
out
or
or
jno
jge
fsubl
xchg
adc
lock
shlb
movb
ret
and
fwait
test
mov
jle
stos
js
push
fdivrs
addr16
cmpsl
ds
dec
or
mov
sbb
jp
cmp
test
cs
lock
in
dec
mov
dec
gs
arpl
jo
jp
and
adcb
cmp
push
sbb
sub
aad
cli
or
clc
push
dec
out
mov
outsb
lds
sub
and
jecxz
push
arpl
in
pop
xchg
xor
mov
int
jne
popa
xor
push
jo
inc
int3
xor
in
stos
cmp
pop
mov
inc
sbb
add
jp
xchg
sti
ss
stc
add
sub
fldenv
cli
mov
cwtl
aas
push
push
repz
pop
sub
clc
and
dec
out
mov
fbstp
sub
iret
mov
adc
inc
push
test
cmc
test
inc
dec
and
stos
mov
fistpl
mov
jnp
out
push
adc
mov
pop
sti
mov
testb
and
lods
sbb
xchg
repz
mov
test
mov
or
or
stc
pop
cmp
add
pop
xchg
cmp
lcall
pop
das
int
adc
mov
and
cmp
outsb
loope
dec
xor
and
testb
adc
or
sbb
cli
mov
int3
jg
and
clc
push
aaa
fidivs
test
gs
inc
lods
cmp
xchg
sbb
fnstenv
cwtl
aas
pop
divl
add
sub
adc
jl
xchg
jae
inc
movsl
or
lcall
gs
cmp
dec
pop
or
push
pop
jbe
fcoms
mov
mov
cmp
sub
pop
inc
pushf
aaa
stos
or
xchg
js
jp
pop
les
jecxz
repnz
xor
ljmp
mov
sbb
pop
popa
mov
pop
dec
fdivs
in
lea
pushf
cmp
adc
inc
mov
mov
daa
test
stos
push
rorl
nop
sbbl
insb
out
dec
cld
pop
iret
sti
xor
jbe
cmp
mov
addr16
cltd
je
or
sti
sbb
mov
repz
fs
jecxz
inc
clc
repz
sub
popf
fcoms
cld
push
inc
das
pop
xchg
test
mov
jne
fistps
or
jge
js
shr
cmp
loop
pop
jb
daa
inc
test
inc
and
mov
adc
icebp
inc
mov
pusha
daa
ja
inc
push
lret
rcl
mov
xor
or
adcl
decb
cli
cmpb
jmp
f2xm1
jb
and
andb
push
mov
fldenv
rcll
movsb
push
test
jl
adc
fdivrs
out
mov
inc
cmp
or
jnp
cmp
mov
aam
push
mov
jg
ret
loopne
addr16
fisubrl
int3
in
mov
sbb
repz
repnz
pop
aam
pop
add
imul
pop
icebp
outsl
dec
push
rcrl
add
pop
jbe
mov
push
stos
call
test
cmp
jl
insl
add
xor
out
jno
pop
mov
out
dec
outsl
adc
lahf
sahf
outsb
adc
cld
cmpsl
push
or
and
das
push
fmulp
sbb
pop
push
je
lock
mov
push
pop
lock
lods
icebp
sub
xchg
sbb
insl
out
push
pop
pop
sti
leave
icebp
xor
das
decl
sbb
and
mov
inc
dec
dec
bound
rolb
movsb
push
loop
ljmp
fwait
push
and
jle
lret
popa
xor
xor
jl
cmpl
inc
pop
ret
in
pop
xor
adc
and
and
ret
aaa
addr16
sub
pop
dec
scas
mov
pop
cmp
add
and
cmpsb
or
dec
idivb
xor
lock
xchg
ljmp
insb
leave
nop
outsb
push
nop
imul
addr16
outsb
pop
xchg
xor
push
in
cmp
dec
xchg
jle
cmp
push
mov
dec
or
push
out
xorb
adc
xchg
js
sbb
ljmp
adc
mov
mov
jns
ret
ljmp
pusha
cmp
mov
sarl
idiv
xchg
xchg
insl
in
pop
sahf
sub
cmp
jecxz
and
int3
lods
mov
pop
sbb
jns
push
and
scas
repz
mov
or
mov
in
and
xorl
in
cmc
mov
push
nop
daa
push
cmpsb
stos
xor
aam
inc
fidivs
lret
ljmp
adc
mov
add
pop
and
push
xor
nop
add
arpl
aaa
lahf
mov
dec
ret
inc
mov
push
pop
add
sub
ja
mov
cmp
mov
ds
pop
jg
outsl
mov
lcall
out
adc
cwtl
mov
mov
jecxz
or
pop
pop
adc
or
xchg
jle
sbb
mov
mov
inc
les
push
insl
sub
rorb
jle
hlt
pusha
jl
jns
mull
out
jge
sub
sub
sbbl
add
imul
mov
mov
inc
mov
mov
jbe
xor
or
adc
stc
mov
or
push
pop
daa
mov
adc
lds
lods
or
sbb
stc
sub
pop
icebp
pop
pop
jl
push
frstor
lods
stos
arpl
into
mov
loopne
xor
outsl
insl
or
sbb
sarb
stc
or
out
xchg
and
sbb
jecxz
std
or
xchg
add
push
lods
xchg
fsubr
and
daa
mov
mov
les
loop
stos
mov
das
mov
sar
aaa
rolb
xchg
fwait
adc
lcall
je
jae
pushf
mov
test
rcll
dec
dec
jnp
fisubs
dec
movsl
and
fstl
dec
fsubr
add
fwait
imul
fdiv
xchg
bound
push
mov
inc
mov
gs
jnp
inc
ret
xchg
mov
xchg
roll
xchg
cmpsl
loopne
andl
cmpsl
jl
mov
push
cwtl
fwait
in
test
xor
and
inc
out
cltd
lcall
scas
inc
sub
int3
jo
lea
adc
add
sbb
xor
cmp
xor
mov
and
push
lods
shrl
push
pop
adc
or
cmp
or
cmp
icebp
lahf
idivl
inc
sub
cs
out
stos
dec
push
inc
ret
fsubl
mov
mov
ret
pop
aaa
sbb
daa
icebp
ret
jae
xor
inc
lock
out
pop
repnz
push
notb
adc
cmpsb
cmp
ss
xchg
insb
ds
jb
stc
and
adc
stos
xchg
jo
dec
lods
cmp
insl
stc
push
stos
cmp
xlat
jnp
adc
sbb
popa
addr16
cwtl
dec
jno
jmp
or
not
fidivrl
xchg
test
js
cmp
adcb
in
repz
cwtl
sahf
stc
push
ljmp
sarb
jno
mov
or
xchg
sub
adc
mov
cmpsl
sub
outsb
hlt
sub
aaa
insb
cmp
fwait
add
fadds
add
icebp
lahf
repz
add
jle
xchg
pop
push
testl
cmp
stos
adc
das
mov
sub
flds
push
cmp
dec
jmp
shlb
adc
sahf
popa
clc
iret
lds
adc
mov
in
popf
popf
mov
push
jge
inc
xlat
out
add
movsb
pcmpeqw
mov
lret
leave
fbld
lcall
test
cli
and
lds
xor
pop
push
inc
test
jge
mov
and
add
roll
nop
adc
orl
arpl
mov
popf
xor
xor
or
rcrb
add
insl
loopne
decb
test
loop
test
pusha
xor
pusha
sub
or
pop
push
pop
push
sbb
rcrb
jecxz
in
fcom
sbb
mov
jmp
fcomip
js
lods
loopne
push
jmp
stos
push
fwait
xor
xlat
push
sbb
aad
add
dec
test
lds
or
mov
cwtl
jae
adc
fidivs
dec
fisubs
cltd
cld
imul
mov
inc
dec
not
jne
les
adc
inc
xchg
sub
lret
cld
xor
pop
jae
sbb
lock
in
adc
test
jle
pop
shld
shll
mov
inc
popf
lret
addr16
rcrb
dec
and
clc
lcall
shlb
aaa
data16
popf
imul
inc
xchg
in
add
in
loope
and
test
out
push
lods
xor
lret
adc
cwtl
add
dec
fdivs
push
push
imul
nop
clc
insl
ss
xchg
fsubrl
in
xchg
or
int
out
popf
mov
ds
dec
xchg
sbbl
pushf
test
fwait
push
or
adc
into
fsubl
cwtl
and
cmpsb
cmp
adc
test
jge
cmp
pushf
push
jmp
pop
mov
push
sbb
or
repnz
mov
cwtl
jecxz
aad
call
subl
inc
mov
popa
and
in
push
jmp
mov
shrb
dec
loope
or
gs
push
setae
dec
leave
testb
sub
pop
cmp
fwait
sbb
inc
leave
pop
inc
sbb
xchg
bound
and
lret
jno
and
cmp
ret
xchg
adc
jge
hlt
mov
test
or
pop
lret
sub
aam
and
stos
pop
fidivs
push
fwait
fs
cld
outsl
loope
mov
fidivs
cmpsl
mov
mov
insl
lock
cmp
mov
mov
cmp
aas
xchg
sti
in
aas
xor
sub
dec
jecxz
sub
stos
or
pop
jecxz
jbe
jle
cld
sub
clc
test
cmp
stos
pop
arpl
popa
mov
stc
flds
or
sub
inc
xchg
insl
cld
icebp
icebp
enter
repz
ds
and
mov
inc
or
jne
les
inc
push
int
push
pusha
test
leave
push
sub
xor
dec
adc
pop
data16
leave
aam
cmp
dec
leave
enter
jl
cmp
fnstenvs
fisubrl
mov
loopne
dec
loope
ja
clc
bound
jle
add
inc
xchg
or
mov
mov
pushf
push
out
cmpb
push
cmp
out
jnp
pop
sarb
mov
inc
push
sbb
sub
fisubrl
dec
pusha
or
addr16
xchg
dec
inc
ret
and
mov
aad
cmp
add
mov
lock
enter
js
cmp
jns
stos
outsb
mov
je
pop
push
mov
mov
inc
xor
call
pop
sbb
cmp
cmp
cli
test
sarl
test
pop
jbe
lds
mov
jp
fdivrs
rorb
pusha
insl
fsubs
pop
push
insb
dec
pop
insl
test
sbb
loope
scas
cmp
add
int3
sbb
adc
out
mov
adc
xchg
fdivrs
jnp
enter
bnd
arpl
or
ffree
pop
mov
mov
sbb
js
xor
or
or
mov
push
mov
push
or
outsl
dec
xchg
lock
scas
mov
xchg
add
insb
xchg
push
jp
adc
ljmp
cmp
add
cwtl
dec
addb
out
jle
dec
cmp
jmp
shr
inc
popf
mov
cmc
je
sbb
and
test
test
sbb
pop
into
xor
das
adc
daa
pop
xchg
call
insb
xor
and
fisubl
jl
fiadds
mov
inc
dec
xchg
in
jbe
mov
cmp
int3
mov
out
in
shll
arpl
lods
pop
xor
in
dec
in
push
lret
push
jb
mov
call
add
push
or
movb
xlat
outsb
xchg
cmc
xchg
sub
xchg
xor
push
in
fistl
push
stos
rcr
jb
mov
mov
push
jae
scas
cmp
push
mov
xchg
js
lret
arpl
xchg
pop
mov
fidivrl
lret
cmp
mov
loopne
inc
aad
insl
bnd
sbb
popf
rcrb
repnz
ja
xor
test
mov
stos
mov
and
adc
jne
sbb
xor
sub
pop
inc
mov
cli
outsb
push
test
dec
mov
fisubs
add
mov
scas
adc
xchg
pop
mov
aaa
loope
sub
pushf
out
popa
hlt
or
pop
fnstenv
cmp
fldenv
into
cmp
xchg
test
and
pop
fs
xchg
sbb
roll
orl
es
decb
xchg
lret
mov
test
dec
jge
cmpsl
cmp
xchg
dec
int3
fcomps
dec
inc
add
and
pop
pop
mov
sbbl
pop
sub
ret
movsb
xchg
in
dec
in
dec
mov
jl
sbb
fiadds
jle
mov
daa
daa
popf
adcl
cmpsb
popf
and
cmp
mov
cmp
dec
add
add
clc
shlb
sbb
ja
mov
and
jns
sahf
mov
inc
jnp
pusha
pop
xchg
hlt
inc
mov
cli
xchg
and
aas
mov
lea
pop
sahf
or
sbb
and
xchg
dec
jmp
iret
sub
jmp
lods
out
daa
cmp
mov
push
lahf
pop
add
test
in
imul
jae
push
movsl
adc
mov
rolb
dec
xlat
andl
xor
out
cmp
xor
ljmp
insb
out
insb
mov
push
icebp
cmp
dec
jge
xchg
scas
mov
pusha
mov
push
mul
mov
jbe
fs
xchg
inc
mov
repnz
insl
inc
mov
jne
pop
mov
dec
leave
mov
test
std
fildl
repnz
scas
and
cld
xchg
jle
into
leave
xchg
pop
sbb
mov
mov
clc
pop
fsubr
push
sbb
dec
lds
sub
mull
into
sti
fsubl
sbb
dec
jecxz
rorb
jne
leave
in
notb
mov
push
sub
mov
push
outsl
inc
cwtl
adc
and
push
adc
xchg
ficomps
jg
call
movsl
outsl
pushf
sub
roll
pop
not
dec
sub
mov
je
into
in
and
cmpsl
shlb
push
loop
test
xchg
or
mov
push
stos
xor
or
lock
add
jp
pop
nop
cmpsl
push
in
in
sbb
cmp
call
adc
int3
sahf
sbb
repnz
or
jne
xchg
inc
push
sbb
scas
roll
dec
jl
xor
jne
push
lcall
mov
enter
loopne
daa
mov
test
pop
enter
popf
jmp
shrl
stos
data16
in
jae
pop
stc
setne
iret
loop
cmp
adc
jb
push
mov
sub
sti
cmp
inc
dec
loopne
test
das
jle
popa
jecxz
sub
das
sub
pop
stc
mov
cmp
popa
sbbl
mov
jb
imul
das
add
lret
scas
push
mov
stos
and
mov
ret
lock
jmp
jnp
xor
out
add
imul
cmp
and
jbe
mov
cmp
jecxz
rcl
push
mov
mov
sbb
movsb
insb
sub
ficomps
loope
inc
inc
cld
xor
mov
test
add
mov
arpl
bnd
mov
cmpl
fwait
or
mov
xchg
dec
sarl
push
fs
cmp
outsl
dec
and
mov
cli
mov
imul
popa
add
mov
and
dec
cmp
jl
push
mov
lahf
pop
sub
in
js
pop
scas
data16
inc
js
repz
cmp
lret
or
xor
mov
inc
push
jl
jnp
es
mov
inc
inc
mov
jle
jmp
dec
sbb
lahf
or
lock
cmp
stc
iret
test
sbb
stos
scas
ret
ficompl
ja
mov
jp
pop
lock
push
xchg
in
add
stc
sbb
or
pop
icebp
psrlw
xor
pushf
lahf
push
call
or
sbb
nop
mov
adc
jp
fmuls
mov
shlb
into
sbb
mov
pop
add
cmp
nop
push
scas
push
inc
jne
icebp
jne
stc
movsb
shrl
stc
sub
lea
push
clc
xor
movsl
cmpsl
jp
mov
mov
mov
jno
dec
xchg
les
shrb
mov
jbe
ljmp
popf
xor
ss
mov
pop
jno
adc
jne
enter
pop
jne
aam
xor
inc
cs
add
clc
or
add
pop
push
pslld
aad
lcall
imul
in
mov
dec
stc
out
std
mov
fwait
push
mov
insl
bndstx
jbe
sbb
jno
popa
cmp
iret
mov
imul
add
outsl
inc
fidivl
nop
mov
sbb
mov
mov
mov
out
add
add
or
loop
lahf
bound
add
aas
test
int
clc
xchg
sbb
movsl
pop
sti
daa
mov
dec
repz
add
sar
rcr
mov
mov
sub
shlb
xchg
xchg
mov
sbb
imul
testb
jnp
mov
jno
push
inc
lods
and
repnz
repnz
out
cmpsb
cmp
push
xor
mull
fldcw
gs
repnz
jns
mov
aam
cli
imul
xchg
sbb
xchg
outsl
adc
rorl
xchg
outsl
sub
enter
mov
lret
jo
or
mov
mov
mov
add
clc
and
xchg
je
and
push
push
ja
imull
popa
jle
sbb
imul
xchg
and
push
jns
hlt
sub
in
popf
inc
inc
daa
cmp
xchg
es
mov
push
sbb
lahf
jae
loopne
stc
subl
test
xor
movsl
in
cld
scas
pop
dec
mov
aam
sbb
adc
testl
cmp
in
jno
jne
mov
adc
cmp
pop
xchg
xor
ret
add
mov
call
mov
and
xlat
and
pushf
and
add
aas
cli
popf
jno
pop
push
mov
or
ds
call
aas
jp
mov
stos
adc
roll
or
out
xchg
rorl
mov
xchg
fdivr
dec
movsb
mov
sbb
pop
les
lret
adc
das
es
test
cltd
jo
lods
mov
mov
clc
cwtl
lds
ret
data16
bound
insl
sarb
cmc
rorb
gs
adc
lds
xchg
cmpsb
xchg
std
pop
loope
test
xor
push
jnp
or
pop
fcompl
js
cwtl
in
hlt
cltd
movsl
cmp
popf
ret
into
mov
insb
sub
fldpi
xchg
xor
pusha
ss
ret
lret
mov
push
pop
loope
dec
mov
inc
fsubp
in
and
pop
data16
xchg
mov
lcall
push
push
addr16
cmp
dec
mov
and
daa
fcomp
inc
xchg
mov
fadds
xor
or
xor
out
test
sarl
adc
inc
pop
xchg
inc
rorl
notl
or
ret
mov
ja
jp
fsubs
dec
sahf
dec
jae
pop
ds
jge
pop
dec
sbb
mov
stc
pop
xor
sbb
xchg
data16
in
mov
jle
lahf
cmp
repnz
inc
xlat
sub
xor
out
enter
jns
adc
sbb
pop
and
jb
jne
jmp
push
and
push
inc
push
inc
lcall
cmpsb
push
xlat
repz
and
pop
stos
inc
dec
pop
out
xchg
lret
sbb
insl
sbb
sahf
sub
jp,pt
add
jo
xor
lahf
inc
fiadds
mov
jg
ss
sti
xchg
pop
mov
cmpsb
repnz
push
hlt
pcmpgtd
pop
insl
inc
push
out
subb
xchg
and
dec
movsl
lret
mov
add
testb
jb
mov
xchg
inc
ds
push
call
insl
sbb
dec
mov
mov
push
les
jp
call
cmc
popf
mov
sub
stc
xchg
xchg
testl
push
jge
rolb
lcall
movsl
in
aad
flds
out
jl
stos
insl
xchg
in
sbb
jno
stc
cmp
aaa
outsb
add
jae
inc
sub
xchg
jno
and
sub
mov
sbb
add
hlt
faddp
je
mov
mov
aad
out
sub
rorl
ljmp
out
mov
jmp
mov
dec
std
cmc
adc
pusha
sub
mov
cmp
test
mov
int
jns
outsb
scas
mov
ljmp
cmp
hlt
fiadds
movsb
inc
or
sub
pop
push
jg
lahf
mov
pusha
mov
xabort
jge
out
rolb
cltd
test
jmp
je
movsl
sarb
sbb
pop
popl
sbbb
int3
imul
mov
aam
pop
pop
mov
mov
pop
mov
mov
adc
ficompl
mov
cmp
jl
js
pop
pop
inc
fld1
jns
jmp
incl
scas
clc
leave
pusha
sub
out
pop
push
adc
movsb
les
add
lds
cld
inc
xorb
xchg
mov
adc
inc
loopne
push
andl
stos
mov
fidivrl
fisubs
jne
imul
pop
adcl
lds
lods
mov
mov
push
inc
mov
cmpsl
add
cltd
sub
in
mov
inc
or
inc
xchg
sub
push
push
inc
sbb
push
outsb
push
stos
stos
scas
aas
roll
js
ljmp
lcall
sahf
dec
jo
nop
mov
xchg
pop
xor
push
pop
inc
lods
inc
jae
inc
push
les
push
loopne
pop
xor
mov
or
lret
adc
or
sahf
and
dec
adc
inc
dec
push
stc
and
jmp
jo
jmp
sbb
push
mov
cmc
mov
xor
adc
xchg
sub
mov
mov
iret
inc
pop
ret
nop
test
dec
and
jp
jecxz
fcmovbe
testl
lcall
push
insl
pop
mov
jle
lret
sub
xlat
push
lret
in
pushl
movsl
mov
pop
jnp
test
cli
or
dec
movsb
cmp
ja
inc
loop
out
xor
hlt
mov
mov
fwait
shrl
xchg
mov
hlt
mov
xlat
add
pop
mov
pop
xor
pop
loopne
mov
ret
in
test
inc
call
pop
cs
outsb
adc
or
dec
adc
jbe
push
mov
push
enter
std
ds
push
aas
lahf
scas
pusha
pop
and
cmp
inc
xor
ficompl
add
dec
rcrl
dec
std
mov
sub
ss
add
das
movsl
mov
dec
dec
xchg
mov
ja
cmp
outsl
lea
mov
rol
repnz
orb
negb
in
push
fs
mov
sub
das
es
push
roll
jbe
adc
adc
mov
lcall
gs
call
movsb
addr16
stc
add
sub
cwtl
mov
in
shlb
outsl
leave
fdivs
pop
dec
pop
test
rcrl
mov
popa
clc
pop
movsl
movsb
inc
in
jnp
push
sub
mov
add
les
push
insl
and
push
daa
ss
je
dec
data16
push
in
icebp
or
dec
mov
ret
inc
ret
add
pop
mov
or
sbbb
insl
xorl
in
shl
pop
roll
test
pop
mov
add
and
jbe
xor
cwtl
stos
inc
push
ja
xchg
imul
pop
or
inc
and
xlat
xor
std
testb
xchg
push
dec
rcr
fidivl
in
cmp
xchg
xorl
imul
pushf
push
in
stos
lods
call
test
mov
inc
mov
or
fwait
mov
jo
lret
xchg
push
cmpsb
pop
shld
cwtl
pop
repz
int
cmp
ss
stos
push
cmp
xchg
fisttps
popa
jmp
lods
pop
stos
mov
inc
and
popf
pop
cld
ja
bound
push
aas
mov
pop
cmpsb
les
int3
sub
bts
sub
rcll
cmp
fists
cmp
or
fs
test
adc
das
xor
shrl
push
cmp
ds
pop
cmp
pop
ljmp
repz
jne
jle
add
sub
pop
data16
xchg
adc
mov
jae
lods
and
lods
inc
mov
icebp
pop
fldt
movsb
cmp
imul
pop
stc
add
int3
jns
lcall
lds
in
xchg
cwtl
push
lods
cmc
int
sub
mov
pop
push
or
lods
fldt
push
jmp
mov
jmp
and
roll
mov
clc
mov
lds
ds
dec
cmp
out
and
lcall
insb
sbb
dec
test
rcrl
dec
or
cltd
adc
inc
jmp
xchg
daa
jle
scas
inc
sbb
add
push
shlb
popf
mov
mov
aas
cmp
cmpsb
shll
xchg
outsl
popf
hlt
sbb
orb
xchg
xor
dec
inc
ret
sub
aam
cld
pop
cs
push
cltd
lods
ror
cltd
cmp
xchg
xchg
cmp
das
loopne
stos
adc
pop
mov
and
inc
sub
cmp
push
mov
test
push
adc
jl
xchg
loope
cs
jl
push
out
lods
popf
pop
scas
mov
xchg
stos
adc
or
mov
xchg
inc
push
call
push
cmc
shlb
mov
or
cmp
adc
mov
sub
repnz
mov
pop
jp
jae
pop
cmc
neg
rcrb
jge
es
loop
and
mov
movsb
cmp
push
cmp
mov
ret
mov
rorb
insb
jb
or
mov
mov
dec
in
cmp
insl
scas
ds
cmp
dec
ljmp
cs
jnp
sarl
pushf
dec
cs
scas
lret
js
sbb
bound
mov
insl
inc
push
mov
fcoml
jg
pop
fimuls
sub
pop
sub
sti
pop
in
sbb
into
testl
test
into
je
std
or
ljmp
jno
in
mov
push
add
out
repz
push
inc
jne
clc
dec
sub
fnstsw
popa
int
and
sub
orl
gs
ja
lock
jp
sarb
or
dec
push
dec
pusha
testl
xchg
cmc
mov
push
clc
pop
icebp
cld
lret
and
mov
pop
arpl
sub
mov
les
adc
bound
outsl
loop
adc
adc
push
inc
loop
jb
repnz
es
aad
dec
push
sar
cmp
and
lock
lock
bound
decl
das
or
xchg
xchg
jno
repnz
cmp
and
or
pop
test
dec
lea
test
cmpsb
or
adc
in
clc
clc
lcall
mov
dec
add
jbe
fildll
popa
push
enter
mov
test
mov
jmp
add
ret
add
sbb
or
add
mov
push
je
std
adc
aam
adc
andl
nopl
daa
inc
pusha
jl
neg
je
sets
imul
cmp
sub
xor
aas
arpl
cmpsl
imul
and
fwait
test
cli
enter
inc
pusha
pusha
mov
std
orl
es
in
outsb
and
inc
notb
testl
lock
and
daa
lcall
push
xor
dec
jp
subl
stos
mov
and
push
ret
push
icebp
or
ss
out
cltd
nop
push
sub
jp
test
dec
xor
clc
and
xchg
outsb
cwtl
and
add
cmp
xchg
sub
sahf
dec
or
or
pop
add
xchg
enter
lcall
jg
loopne
push
dec
pop
xchg
push
cmpsb
inc
push
sbb
push
lret
adc
push
inc
pop
jbe
jne
aad
xchg
add
adc
sub
lods
cld
rolb
lret
dec
jp
into
aas
daa
push
pop
aam
or
int
cmc
repnz
dec
into
fidivl
mov
je
les
inc
push
inc
mov
mov
jp
bound
insl
jge
fbstp
leave
xchg
cld
dec
ret
sub
leave
pusha
xchg
outsl
sbb
jo
out
shll
test
mov
fidivrs
movsb
mov
xchg
inc
aad
outsb
test
xor
movsl
inc
out
lcall
lods
add
sub
dec
les
push
xchg
push
aaa
aam
imul
lds
jecxz
popf
cmp
mov
push
mov
sub
in
mov
repz
sahf
stc
lea
xchg
mov
lods
mov
in
cli
lcall
popf
jnp
shlb
push
inc
mov
sub
cld
mov
sbb
inc
mov
arpl
popa
in
push
cltd
pop
xchg
sarl
in
and
cmp
ficompl
mov
push
xchg
inc
push
js
sub
mov
xchg
mov
add
in
add
cmpsl
cmp
es
les
dec
xchg
adc
shll
push
jne
jmp
adc
xchg
jb
pop
mov
mov
scas
push
push
mov
adc
mov
les
lahf
mov
dec
popf
adc
enter
dec
movsb
pusha
dec
cmpsb
test
push
pop
inc
cli
inc
or
cli
sbb
mov
dec
insb
ss
sbb
lahf
sbb
fs
push
and
sbb
mov
push
repnz
clc
and
repnz
clc
push
adc
push
dec
push
ret
sbb
jae
fldt
cmpsb
aaa
mov
adc
testl
rclb
sbb
sbb
loopne
and
dec
sbb
cmc
mov
hlt
flds
jnp
jae
out
insl
out
jp
decl
and
ja
in
mov
cld
xor
xor
dec
push
jg
sub
lret
or
js
pop
dec
fsts
cld
aaa
ljmp
push
in
and
out
lea
pop
mov
pushf
ss
add
sub
sub
rcl
jno
negb
push
mov
mov
mov
outsb
mov
or
loop
lock
xlat
xorb
dec
loope
lahf
not
roll
jle
in
knotb
mov
aad
push
insb
iret
mov
mov
and
jae
int3
cs
scas
imull
xor
dec
call
pop
push
cmpb
aam
sbb
sbb
lret
xchg
fidivl
add
cwtl
test
cmpsl
imul
call
adc
add
popa
jnp
mov
ret
lods
sub
lahf
adc
jnp
xlat
push
insb
xlat
sbb
icebp
sbb
pop
aad
lcall
mov
push
roll
loopne
jmp
mov
fisubl
outsl
fcomp
sti
in
jp
inc
loop
jne
jg
shrl
xchg
lahf
testb
jmp
dec
cwtl
jae
jl
jo
jne
xor
and
pop
push
ljmp
cmc
mov
adc
aas
sub
xchg
fimuls
test
inc
lcall
icebp
xor
lods
pop
inc
pop
mov
subl
pop
cli
pop
mov
xchg
jp
test
adc
and
scas
test
cli
mov
ss
or
push
das
aas
adcb
stos
inc
loop
pop
daa
cmp
cmc
or
push
dec
pop
fs
xchg
dec
pop
dec
mov
pop
lock
adc
add
or
jns
das
out
test
pop
dec
roll
inc
imul
cltd
sub
mov
xchg
dec
push
or
hlt
outsb
mov
add
add
jno
loope
adc
inc
imul
btr
dec
mov
mov
arpl
cmp
jl
outsb
mov
adc
ss
int
xor
mull
aaa
push
mov
mov
xchg
movsb
mov
into
movsb
and
fsts
dec
dec
lret
push
sarb
push
in
push
fnstenv
dec
mov
jbe
or
jo
popa
mov
adc
loopne
cmc
and
xchg
sub
inc
sahf
xor
sahf
sarb
cmp
mov
sub
jge
inc
sahf
fistpl
sbb
mov
or
xchg
xchg
mov
jae
loop
icebp
jg
inc
push
int
shl
jno
insb
xor
mov
mov
xchg
dec
push
das
mulb
stc
cmpsb
hlt
dec
shll
andb
adc
push
cmp
leave
add
and
out
jbe
arpl
lods
xchg
aam
or
xor
and
mov
insb
mov
scas
leave
gs
test
sub
sbb
ret
cmp
sahf
clc
mov
push
call
dec
sub
leave
sbb
xchg
std
push
cs
rcpps
add
mov
adc
aas
leave
out
or
ljmp
xor
cli
cmp
mov
mov
jb
push
rcrb
iret
out
mov
in
test
testl
xchg
or
cmc
mull
out
out
mov
mov
out
mov
sbb
and
xchg
inc
mov
aad
mov
popa
insl
scas
push
mov
push
sahf
sbb
add
aad
fmul
and
rcr
dec
sub
sub
pop
inc
rclb
mov
jae
in
push
das
int
idiv
mov
arpl
and
dec
xor
add
out
dec
in
call
outsl
mov
cmp
and
mov
ret
mov
stos
imull
push
xor
cwtl
push
fadds
insb
pop
mov
cmp
mov
mov
andl
cli
adc
cltd
jle
shll
pop
dec
bnd
mov
rorl
lods
push
push
jecxz
arpl
or
rolb
inc
in
or
sbb
popf
lods
and
push
rcll
cltd
xchg
inc
or
inc
push
and
addr16
cmpsb
fcoms
ret
jg
cmpsl
inc
xchg
js
add
mov
movsl
sub
cmp
in
rorl
cmp
push
loop
adc
cld
cmp
in
cmp
imul
mov
push
repz
jne
sbb
push
jo
mov
jmp
jne
sbb
int3
arpl
push
xchg
xchg
ljmp
xchg
and
sti
lret
dec
mov
xchg
test
inc
jb
scas
mov
mov
movsl
add
pusha
pushf
and
sbb
add
add
lds
xor
xchg
fstpt
pop
sbb
call
dec
push
xor
aam
loope
xchg
xor
sub
xchg
and
pop
jp
inc
shlb
push
add
fmul
cmp
imul
pusha
pop
inc
ret
mov
push
shrb
js
xchg
push
es
and
bound
inc
mov
mov
mov
inc
test
mov
cmp
fcom
outsb
or
jno
cwtl
push
out
inc
fbstp
leave
add
jge
and
xchg
add
aad
xor
cmpsl
and
in
mov
lods
mov
js
mov
add
imul
and
loop
cmpsb
inc
adc
addr16
lcall
xchg
sahf
pushf
and
fstpl
push
test
sti
sbbb
icebp
dec
mov
or
mov
es
xor
dec
mov
lock
inc
xor
ror
ret
lcall
mov
cmc
pushw
ds
mov
ljmp
jno
cld
mov
popf
push
daa
mov
xchg
xor
pop
outsl
enter
jle
fistps
cld
lret
xchg
push
negl
cmovle
mov
fldl
pop
inc
ja
fldcw
lret
mov
stc
mov
fstps
iret
mov
mov
xor
or
or
pop
mov
push
push
jge
and
fidivl
cmc
push
cltd
cs
adc
and
xor
loope
clc
jno
aaa
sbb
lcall
gs
pop
and
lods
mov
adc
sub
sahf
xor
add
adc
je
je
jns
lods
and
subl
pop
hlt
sbb
cwtl
mov
pop
into
scas
cmpsl
imul
lods
sbb
out
mov
andl
aam
jb
push
adc
mov
push
or
aaa
adc
in
xor
ljmp
pushf
cli
idiv
push
shr
mov
xchg
lret
mov
ficoml
xchg
call
inc
cmp
test
sbb
push
loop
inc
mov
mov
push
cmpsb
jle
sub
cmp
cs
outsb
push
pop
jl
mov
mov
jecxz
lret
mov
inc
push
lret
stos
xchg
and
fld
push
icebp
jg
outsb
mov
pop
pop
and
nop
js
or
xchg
mov
addr16
imul
xlat
cmc
stos
ret
sub
inc
fstpt
fisubs
lret
repnz
movsl
jbe
jl
sbbl
lea
scas
mov
insl
and
mov
rorb
faddl
xor
and
jns
es
push
push
mov
mov
xor
xor
out
or
push
cmp
sub
fisttpll
xchg
and
fstl
adc
pusha
ficoms
jp
test
xchg
mov
or
scas
xchg
xor
xor
fs
scas
in
cmpsb
pop
addr16
jns
rcrl
fisttps
push
hlt
add
adc
inc
mov
cmp
stos
xchg
add
subb
mov
decb
pop
mov
or
lahf
shr
clc
and
hlt
inc
std
xor
orb
arpl
aas
adc
test
enter
cvtps2pd
xchg
test
or
cmp
ret
xchg
push
or
add
add
cmp
xchg
add
stc
sbb
sbb
lds
gs
aaa
cmp
or
gs
adc
ficoms
jnp
fiaddl
in
inc
cmp
scas
mov
add
pushf
xchg
fidivrl
outsb
jmp
xchg
rcrl
aam
adc
call
dec
push
jmp
movsb
xor
push
lds
rcrb
adc
outsl
mov
sbb
nop
enter
sbb
out
xchg
cmp
call
sahf
cmp
dec
add
pop
imul
mov
mov
call
leave
dec
xor
jne
bound
fwait
and
shlb
mov
dec
int
jae
loope
scas
sbb
adc
fucom
ja
cs
pop
pop
into
inc
lods
jle
aam
fldt
mov
jl
int
in
pop
jecxz
dec
dec
repnz
das
and
xchg
into
rolb
sarl
data16
shrl
mov
lahf
pop
cld
jnp
cld
fs
xchg
test
je
and
dec
inc
mov
pop
adc
fwait
push
xchg
mov
cmc
adc
jp
sarb
movsb
insl
imul
push
pop
pminsw
cwtl
popa
jg
xchg
in
mov
sub
inc
fstpl
popf
divl
adc
xchg
mov
imul
or
pop
daa
repnz
add
sbbl
and
mov
out
mov
xor
aad
bound
dec
iret
subw
jnp
in
inc
loopne
pop
adc
mov
mov
stos
jbe
bound
test
mov
inc
xchg
stc
cltd
mov
lret
iret
stc
add
out
test
push
pushf
sbb
and
sbb
ljmp
cmp
out
lods
lahf
inc
xchg
outsl
cmp
pop
gs
test
mov
sti
xor
out
adc
and
push
call
xor
ljmp
mov
sub
sar
xchg
dec
sbb
xchg
js
mov
sbb
pop
call
outsb
or
ljmp
fstpt
and
mov
movsb
pop
pop
inc
push
xlat
nop
push
mov
or
xorb
push
outsl
iret
cmp
mov
xor
xor
dec
cmp
fwait
in
imul
mov
adc
fimuls
cmp
adc
inc
daa
pop
adc
or
dec
idiv
lret
lds
int
mov
popa
out
add
ds
cld
out
inc
xchg
sub
fmulp
nop
sub
daa
mov
sub
push
jne
mov
std
sbb
xchg
mov
pushf
loop
cwtl
out
fadds
adc
mov
pop
and
push
mov
xchg
outsb
push
pop
movsl
xor
test
and
and
cmp
fwait
cmp
and
add
cmpsb
pop
lret
rolb
dec
loop
add
xor
add
sarb
add
dec
pop
dec
test
xchg
and
fcomps
push
das
push
cmpsb
and
ror
stc
test
jp
inc
lods
jo
aaa
sub
pop
lcall
test
loopne
pop
cwtl
out
int3
dec
pusha
cmpsb
mov
jge
or
xorl
test
scas
inc
pop
sbb
cmc
pop
decl
xchg
aad
test
inc
cmpsl
mov
push
mov
sbb
push
in
jle
xchg
mov
inc
cld
insb
pop
lock
rorl
inc
xlat
cmp
pop
insb
or
fwait
xchg
cmp
bound
push
cmp
sahf
mov
jno
call
mov
cmp
sbb
mov
mov
mov
adc
popl
je
mov
sbbl
cmc
roll
jns
xlat
aad
add
inc
mov
cmp
notb
add
mov
lahf
jp
dec
cmp
inc
sbb
cs
rolb
add
lods
xorl
popf
repnz
or
cmp
sbb
xchg
add
loop
aaa
mov
inc
push
push
or
dec
inc
mov
insw
mov
cmp
lcall
adc
es
dec
cltd
and
lods
movsl
xor
adc
aam
cmc
mov
jg
adc
dec
ds
mov
add
shlb
xchg
ret
nop
pop
pop
dec
cli
out
shlb
out
ljmp
xchg
add
adc
mov
lea
data16
pusha
scas
inc
cltd
xchg
cs
out
leave
jae
xor
jmp
psadbw
or
mov
xlat
mov
lret
pop
insl
imull
aam
inc
sub
icebp
pop
add
xchg
pop
leave
sub
pop
push
add
fdivl
xor
ret
mov
scas
or
sbb
xchg
fimuls
in
test
mov
fnsave
in
nop
mov
sti
jle
repz
jmp
xchg
dec
mov
call
xchg
lods
dec
xlat
fdivrl
es
mov
ja
icebp
int3
bound
sub
mov
nop
dec
ja
inc
lea
pop
sub
out
fidivrl
jno
sti
jne
ret
adc
pop
dec
and
adc
lahf
ss
push
insb
js
sbb
sub
or
or
mov
cmp
mov
into
lret
pushf
jnp
lods
aas
lret
adc
data16
dec
fimuls
subl
push
pop
ds
mov
pop
daa
xor
aad
clc
mov
mov
pop
jmp
inc
xor
mov
fists
or
lret
add
push
lods
mov
mov
adc
xchg
aaa
stos
mov
aas
popa
cmp
lret
pop
fdivrl
jecxz
sar
pushf
das
jecxz
in
sub
shl
movsl
xchg
push
sarb
loopne
cld
fnstenv
push
outsb
jl
jo
xor
cmp
enter
jmp
inc
packsswb
popf
xchg
adc
adc
push
addr16
test
frstor
jo
mov
dec
mov
lret
push
out
xchg
sbb
out
adc
inc
lret
push
mov
sub
sub
ja
int3
add
cwtl
stos
nop
into
jbe
sbb
jne
sub
insl
js
xlat
cmc
push
jge
and
in
in
stos
inc
dec
xchg
sbb
jle
pop
xchg
out
ret
loope
enter
jbe
mov
inc
fldt
mov
cmc
dec
xlat
outsb
jnp
imul
push
insb
add
call
nop
divps
dec
cmpsb
jge
sub
or
cmp
fsubr
sbb
add
outsb
pop
outsl
pop
popa
cld
xchg
inc
mov
sbb
and
shl
jno
addr16
mov
cs
pop
mov
jb
adc
aad
and
push
jo
jecxz
add
pop
or
mov
pop
mov
dec
ljmp
cli
or
mov
lret
aam
outsl
das
fsubl
dec
pop
pop
stos
jnp
cmp
pop
and
cmp
mov
cs
add
divb
add
jge
in
loop
ss
stos
out
sub
mov
fs
lret
adc
rcr
dec
out
push
clc
adc
mov
add
push
lahf
push
nop
fnstcw
arpl
das
mov
inc
rol
pop
add
adc
jecxz
bound
shlb
xchg
sub
out
jbe
inc
dec
mov
mov
cmp
xchg
adc
stos
js
fwait
push
jns
scas
mov
jno
jge
std
xor
aaa
pop
stos
cmp
add
flds
mov
mov
popa
fsubrl
addr16
add
add
inc
xor
mov
leave
add
fidivs
mov
cli
cmp
push
jmp
cmp
mul
cld
lods
jp
lods
dec
pop
imul
mov
out
js
scas
mov
jl
xchg
dec
stc
sbb
mov
sbb
inc
mov
aaa
iret
sahf
dec
pop
out
jnp
bound
push
mov
adc
fs
xor
add
shr
mov
divl
dec
sub
push
repnz
adc
js
cmpsl
aas
popa
jge
mov
xchg
dec
inc
pop
jb
dec
loope
xchg
pop
loopne
pop
lahf
out
inc
mov
jmp
repnz
test
sub
cld
xchg
stc
sti
xchg
sub
cmp
pop
xor
out
movsl
in
pop
cmp
sbb
out
jge
pushf
cmpsl
lahf
sahf
add
iret
cmp
jns
data16
inc
addl
and
xor
enter
iret
scas
inc
in
adcb
or
es
jge
push
scas
jnp
dec
mov
lea
repnz
imul
mov
xchg
jo
sbb
sub
and
pop
xor
stc
xchg
ss
and
rorl
dec
sub
lcall
in
sbb
test
mov
mov
mov
lret
jb
mov
push
and
outsb
jo
inc
mov
dec
arpl
ret
sbb
jl
dec
loop
sbb
imul
adc
add
scas
ret
mov
xchg
mov
loop
jmp
test
fstpt
dec
push
dec
xchg
rolb
xor
and
sti
jle
stc
mov
stc
and
push
nop
jae
lcall
loop
jne
les
cld
xchg
jo
ljmp
and
sbb
mov
scas
cmp
jnp
scas
and
mov
inc
arpl
lret
test
notb
scas
fildl
lahf
outsl
nop
push
pusha
jp
out
and
int
inc
mov
fiaddl
mov
mov
fcoml
add
pop
mov
popf
pop
mov
xchg
sub
test
pop
jmp
or
xor
add
xchg
sub
jge
add
cmp
fcomip
cmp
ljmp
push
mov
jo
jg
adc
inc
and
fnstenv
push
mov
fstpl
iret
cmp
jnp
cmpps
sub
mov
aad
lods
out
push
adc
sbb
jne
pop
cmpsl
adc
stc
xchg
lea
xlat
cli
or
or
dec
dec
mov
inc
add
xchg
sub
xor
sub
xor
nop
enter
cmp
push
adc
mov
jg
lea
pop
pop
and
ret
out
popf
test
sbb
mov
mov
xchg
inc
mov
test
pop
test
inc
jns
repz
lcall
cmp
pop
adc
cmpl
std
lods
jp
adcb
push
and
test
insl
jg
sbbl
push
and
jb
out
jge
pop
mov
jnp
and
push
mov
cmp
sahf
push
or
add
in
push
lods
pop
cmpsl
mov
inc
fdivp
add
stc
and
mov
jae
dec
mov
mov
fdivs
xor
hlt
notl
sub
mov
xor
push
out
imul
ljmp
add
push
push
xchg
mov
out
mov
or
jnp
jbe
pop
mov
lret
cvtps2pd
movsl
or
mov
popa
xor
push
call
int
mov
cs
lcall
and
test
jnp
pusha
in
jp
jmp
ss
jb
in
je
and
xchg
sahf
xor
std
out
push
jmp
sub
jmp
cmp
mov
into
dec
xor
jl
sarl
adc
push
mov
cmp
addr16
clc
sbb
inc
imul
mov
mov
nopl
mov
sub
ss
arpl
lcall
mov
cwtl
jno
jecxz
cld
pop
cltd
push
je
and
inc
dec
mov
mov
divl
ficomps
mov
pop
ja
jo
cli
xchg
out
stos
hlt
and
outsl
mov
xchg
cmp
xor
mov
jl
jae
iret
js
in
push
inc
lds
cltd
dec
pop
dec
popf
pop
daa
dec
jl
movsl
into
add
jge
loope
xchg
pop
sbbl
mov
jmp
xchg
mov
mov
cli
scas
push
xchg
pop
or
xorl
adc
mov
lcall
stos
ds
scas
inc
ret
stos
insb
sahf
gs
psubq
mov
xor
xor
rcll
add
cs
pop
lret
cld
jp
jmp
adc
sbb
cmc
mov
jnp
mov
mov
sbbb
jecxz
cs
mov
call
push
push
jne
adc
mov
test
pop
mov
leave
and
cld
subl
sbb
adc
sub
out
xchg
push
push
cmpsl
jl
mov
nop
xchg
lods
int
les
dec
aaa
aad
xchg
cmp
xchg
lods
and
sbb
insl
push
sahf
outsl
pop
add
add
push
add
jo,pt
pop
xlat
push
cmp
out
jecxz
adc
loopne
mov
into
push
lret
pop
mov
xchg
cwtl
arpl
int
cmp
mov
dec
push
lods
jp
out
int3
pop
stos
add
sbb
xchg
pop
idiv
and
inc
ss
lret
pushf
pushf
push
shll
or
data16
into
dec
test
ja
cmp
clc
fcmovbe
std
sahf
js
inc
and
repnz
stos
cmp
in
clc
pop
in
pop
jae
into
stos
mov
xchg
jbe
pop
dec
fs
jl
lea
aam
mov
jo
mov
or
inc
gs
rclb
dec
pop
mov
jno
lods
mov
lods
subb
mov
shrl
orb
fsubr
pop
ret
inc
push
mov
cmpsl
out
cmp
mov
fstl
lds
ja
cmc
mov
scas
sub
push
adc
js
es
push
xchg
pop
sbb
popa
jnp
jbe
negb
xchg
cmp
mov
and
xor
pop
lods
sbb
lahf
or
cmpsl
and
add
jnp
and
sbb
xlat
ret
add
jg
xor
xor
xchg
or
int
push
jle
ljmp
pop
sbb
and
sub
push
and
mov
mov
js
xchg
pop
push
push
mov
shl
mulb
adc
mov
dec
rcll
cld
ja
mov
icebp
loope
lcall
dec
mov
mov
insl
jge
and
sub
aam
testl
adc
add
and
mov
ja
sbb
mov
gs
push
loop
sbb
movsl
les
cmp
out
sti
enter
and
scas
xchg
mov
xor
add
and
add
cmpb
sbb
xchg
mov
mov
xchg
jno
inc
pop
cmp
push
sbb
je
clc
movsl
lcall
stos
or
dec
fstpl
enter
push
push
test
or
scas
inc
adc
xor
mov
idiv
shlb
popf
jno
into
les
mov
jmp
or
mov
cmpsb
mov
xchg
dec
mov
jmp
mov
jbe
fsubl
mov
cmp
mov
mov
test
jns
xor
andb
sbb
sub
xchg
cwtl
lcall
push
scas
nop
mov
xor
cltd
mov
mov
in
push
movsl
push
aaa
cmp
cmp
cmpsb
pop
cmp
stos
push
mov
or
xlat
cmpsl
outsl
mov
imul
xchg
cmp
shlb
jl
cmpsb
cmp
shr
test
mulb
dec
lahf
and
pushf
jle,pn
xor
popa
xor
sbb
mov
fidivrs
pop
fistpll
add
sbb
push
inc
adc
pop
mov
xchg
lret
jno
imul
insb
outsl
push
enter
dec
mov
pop
outsb
inc
mov
addr16
hlt
push
insl
es
arpl
test
mov
mov
pop
mov
push
sbb
push
cs
mov
mov
push
lcall
shlb
enter
stos
shll
idivb
pop
lret
jg
xchg
repnz
les
add
outsl
xchg
lea
aam
push
clc
sub
je
rcll
sub
bound
mov
lret
loope
call
mov
sub
inc
arpl
and
dec
push
jg
das
push
sub
addb
lods
cmpsb
dec
dec
or
sbb
inc
outsl
icebp
jp
ja
das
or
add
or
sarl
jmp
addr16
xchg
ljmp
jbe
stos
mov
loope
sub
scas
fldt
sti
repz
popa
mov
in
pop
shl
and
add
dec
cmpsb
push
ret
enter
sbb
cli
xor
and
push
cmpsb
shll
mov
mov
nop
fisubl
fists
sbb
mov
jb
cwtl
push
mov
mov
gs
xchg
bound
aam
add
mov
popf
fwait
insl
dec
outsb
adcl
popf
push
xor
dec
mov
and
test
jecxz
xor
jge
lcall
and
stos
inc
bound
cmpsl
std
xchg
incl
mov
xor
inc
push
mov
iret
jns
aaa
cltd
shrl
enter
or
iret
xchg
and
pop
xor
lret
push
xchg
test
nop
cmpsl
out
fcomps
nop
xchg
dec
xchg
and
mov
cld
inc
les
cltd
lcall
pusha
xchg
push
rcrl
jnp
or
scas
pop
cwtl
loopne
mov
xchg
fimuls
push
mov
push
inc
fldl2t
adc
inc
inc
xchg
jns
out
xchg
pop
in
adcb
and
mov
mov
rcrb
mov
out
xchg
push
cwtl
incb
pushf
xlat
mov
cmp
dec
push
fwait
push
pop
pushf
arpl
jno
adc
pop
lea
cmp
push
lods
mov
lret
js
mov
sbb
and
cmp
std
add
push
fisubrl
xor
xchg
movsb
sbb
mov
daa
push
test
std
js
imul
fwait
ret
pop
loopne
sub
lods
inc
movsb
xchg
push
inc
icebp
inc
pop
testl
test
sub
pop
xor
jmp
les
ja
jo
lcall
in
dec
insl
setg
cltd
lret
and
fwait
sbb
test
add
push
rcll
xchg
xchg
lcall
cmc
dec
cmpsb
sbb
jl
fnstsw
cmc
ss
pushl
xor
mov
movsl
hlt
les
mov
sub
xchg
insb
push
lcall
push
inc
adc
lahf
sub
ret
jno
aas
imul
or
mov
mov
mov
scas
fwait
cmpsl
sub
inc
push
pop
rcl
call
or
incl
sbb
stc
pop
addr16
movsl
stos
pop
lock
subl
dec
addr16
mov
ret
test
jl
into
or
pushf
mov
pop
sbb
cmovbe
adc
or
mov
pop
incl
std
int3
lahf
scas
rolb
dec
sbb
je
push
ljmp
or
cld
sbb
push
push
lock
cmp
pushf
cmc
xchg
or
movb
jns
add
and
adc
jg
xor
mov
call
add
push
test
dec
loopne
hlt
cmp
sbb
out
pop
adc
sbbb
in
aaa
ror
dec
push
mov
jmp
cs
pop
mov
mov
shll
pop
pusha
lods
aad
xchg
xor
stos
push
in
sbb
and
in
shr
pop
sahf
sti
xlat
lods
hlt
into
and
int
lret
inc
fidivrl
adc
aaa
in
mov
scas
sub
xchg
lock
mov
jg
ret
je
mov
ret
xchg
paddd
lret
sti
call
push
mov
mov
das
outsl
scas
mov
into
mov
stos
and
sahf
pusha
mov
loope
xchg
add
pop
adc
stc
popf
lea
mov
cwtl
sub
mov
or
pop
add
loope
pop
push
push
mov
incl
shlb
scas
push
xlat
xchg
push
sub
push
cli
inc
cmp
in
test
lret
into
pushf
jo
jne
cmp
xor
subl
bound
jmp
add
inc
out
ret
test
pop
or
inc
lods
icebp
xor
gs
pushf
mov
in
pop
cltd
out
iret
push
mov
push
sbb
xchg
lock
imul
inc
addr16
leave
adc
into
push
pusha
push
shlb
cmp
aaa
into
js
mov
pop
mov
sub
or
mov
push
shll
push
nop
pop
insb
xchg
jecxz
add
iret
and
jae
xchg
movsl
jle
mov
push
loope
pop
cltd
mov
xchg
mov
xlat
mov
mov
dec
cmp
insl
aas
sub
jecxz
jo
ficoms
sbb
lods
out
mov
pop
cs
and
jge
dec
xor
xchg
fistl
iret
and
test
loop
out
sub
xchg
fnstcw
mov
enter
out
cmp
stos
mov
icebp
rorl
add
sbb
mov
ret
jb
stc
xchg
sahf
pusha
test
mov
lods
jb
pop
or
fwait
in
and
shll
xchg
scas
or
pop
xchg
sub
adc
cs
push
cmp
push
or
mov
repz
aaa
into
enter
stc
sub
enter
cmpsb
bound
sub
inc
ja
ja
icebp
cwtl
xchg
jno
in
jne
fs
sub
cmp
adcb
jle
push
in
sub
sub
clc
call
add
lret
rorl
repz
loopne
add
rcll
addr16
jno
lea
sbb
jp
xchg
pop
sbb
ret
jle
add
adc
repnz
sbb
jb
sbb
in
push
jp
jns
mov
outsb
mov
imul
push
ret
hlt
push
mov
xchg
dec
scas
push
jb
adc
shlb
loope
addr16
lods
pop
dec
mov
mov
mov
pop
sub
mov
sub
cmp
push
dec
enter
fbstp
xchg
dec
jbe
in
xor
daa
mov
aad
add
push
and
ss
aas
jo
xchg
xor
cmpsl
xchg
insl
mov
inc
inc
clc
cmp
ss
jmp
in
jo
ds
push
adc
inc
dec
in
lcall
cmp
jp
mov
mov
subb
outsl
bnd
sbb
mov
fstl
xor
xchg
ficoms
sahf
lcall
test
out
mov
push
shlb
xchg
scas
sbb
xchg
pop
aas
pop
jb
rcrl
out
push
in
movsb
dec
popa
mov
adc
xor
pop
mov
loope
aam
aad
test
adc
inc
pop
adc
lret
jae
ss
mov
inc
push
xchg
dec
push
jae
mov
push
mov
imul
adc
dec
adc
jmp
or
repnz
inc
pop
jnp
shrl
inc
mov
add
hlt
sub
cmp
scas
add
cmp
cmpsb
cmp
clc
xlat
inc
out
sub
aad
mov
push
pop
pushf
xor
dec
div
push
dec
pop
jp
jge
or
cmc
ja
push
pop
pop
mov
xchg
mov
clc
sbb
es
orl
and
add
push
jmp
gs
popf
mov
aam
push
rorb
mov
jge
popa
push
mov
dec
sub
jo
adc
sub
adc
jge
sbb
les
push
movsl
lahf
mov
fdivr
leave
addr16
add
loop
repz
xlat
add
leave
xor
repnz
cmpsl
aas
mov
lds
mull
dec
jle
test
icebp
imul
add
popa
mov
mov
jo
sbb
lock
pop
movups
enter
fbld
pop
add
cmp
adc
fnstsw
mov
out
or
and
and
add
orb
mov
push
stc
repnz
js
add
add
pop
mov
xchg
shrl
inc
add
xor
jecxz
lea
mov
lret
sbb
push
shlb
loope
jp
cmp
roll
js
rcrb
aaa
inc
adc
push
hlt
mov
dec
test
ret
cmp
call
cmpsb
hlt
sub
pop
adc
rcl
lds
cmp
mov
dec
inc
inc
in
xor
jo
repz
int3
pop
push
fstl
adc
popf
sbb
fwait
xchg
push
mov
adc
mov
lret
sub
cmp
jbe
lahf
mov
enter
and
rcr
sbb
add
bound
inc
aam
ja
test
sbb
into
mov
aaa
jb
xlat
push
adc
pop
std
sysexit
bound
insb
bound
lds
mov
mov
out
pop
dec
sbb
mov
xchg
xchg
in
in
dec
mov
xor
roll
aam
xchg
into
or
js
inc
pop
imul
push
push
adc
xchg
fwait
clc
sahf
sub
and
loop
aas
mov
mov
mov
sbb
pop
pushf
adc
loopne
fsubr
mov
idivb
repz
cmp
pop
adc
arpl
movsl
js
dec
stos
dec
imul
stc
dec
inc
jmp
add
shrl
push
add
pushl
jbe
pop
icebp
and
addb
out
adcb
pop
lods
xor
add
cmpl
test
mov
loope
xor
int
lods
movsl
push
std
rcl
ret
add
adc
aas
movsl
ret
pop
add
sti
mov
dec
xorb
push
imul
or
out
sbb
shrb
mov
movsl
repnz
or
add
cmpsl
int
push
js
lahf
push
sbb
adc
cmp
push
sub
add
fdivp
scas
push
or
sub
gs
ds
pop
mov
ss
inc
mov
mov
add
add
insl
push
mov
xor
shr
jge
sahf
clc
lcall
into
faddl
mov
in
push
sbb
loope
xchg
jmp
inc
xor
and
lods
inc
sub
pop
inc
clc
cltd
push
mov
jmp
iret
mov
imul
out
sub
movsb
and
jmp
inc
cmp
stc
fnstenv
scas
xor
or
jae
adc
out
push
dec
xchg
add
jmp
clc
imul
ret
scas
fwait
test
lock
jge
push
jb
dec
mov
andl
mov
fcoml
add
repnz
shrb
aaa
pop
je
or
jl
mov
rorb
out
add
adc
sub
scas
add
leave
insb
add
cmp
adc
imul
icebp
mov
scas
dec
mov
imul
scas
mov
inc
xchg
les
mov
cmp
xor
sbb
mov
into
aam
fs
xor
mov
in
push
lds
adc
ret
incb
push
ljmp
mov
mov
dec
loope
add
gs
push
fldt
aas
cwtl
xchg
std
mov
lods
dec
inc
sahf
and
push
cs
movsl
movsb
jno
push
dec
sbb
insb
jae
call
adc
scas
sub
aad
xchg
adc
rorl
cmp
cmp
xchg
repz
mov
aad
shrb
push
add
mov
in
pop
lock
std
mov
jg
pop
pop
or
int
outsl
cmp
ret
clc
dec
add
jne
cmp
enter
add
out
leavew
pushw
and
jnp
fistl
out
adc
ficomps
clc
loop
out
cltd
inc
push
push
bnd
dec
jno
lock
fs
push
dec
pop
cmp
xor
lea
push
pushf
adc
jne
lock
and
push
push
dec
sub
outsl
mov
jge
insl
pop
outsb
sbb
sub
cmp
and
push
rcrb
or
mov
xchg
mov
jb
lods
out
addr16
lods
pop
dec
xor
test
bound
stos
jecxz
jne
out
mov
out
mov
into
xchg
lret
mov
in
enter
inc
fs
push
jae
lock
fldcw
popf
leave
test
lods
iret
pushl
cmpsb
mov
adc
in
jl
xchg
mov
mov
xchg
fildl
fildl
jbe
gs
mov
addl
repz
lock
push
nop
mov
pop
and
push
add
aaa
mov
int
mov
aam
int
sbb
pop
ficompl
test
insb
enter
lds
jge
fstpl
mov
add
and
insl
loop
inc
cmp
mov
xchg
sub
loop
sub
insl
in
lahf
enter
mov
pop
in
inc
push
push
xchg
divl
les
add
sub
scas
jno
ficomps
loope
xchg
pop
movsb
mov
pop
jl
pop
imul
jo
mov
negl
xor
push
cmp
push
in
inc
fidivs
lret
cmp
adc
push
jp
es
int3
movl
mov
mov
pushf
mov
adc
mov
daa
cli
push
ljmp
ljmp
xor
sbb
xor
pop
xchg
in
in
mov
out
test
ret
push
shlb
fcmovnb
dec
pop
clc
cld
sub
cmp
push
inc
fists
xchg
push
inc
sahf
and
sub
jns
idivl
int
sub
call
int
mov
gs
fisubrs
inc
stos
xchg
inc
xlat
loop
out
cmpb
fdivl
fstpt
dec
or
dec
dec
lahf
clc
popf
lods
fisttps
inc
add
pop
jmp
adc
push
lods
sbb
dec
into
mov
mov
jnp
cld
enter
xchg
popf
mov
into
mov
enter
into
movsb
inc
aam
jns
enter
and
mov
xchg
enter
cmp
lods
orl
in
test
mov
or
mov
inc
faddl
test
aam
in
mov
mov
xor
repz
lea
leave
mov
into
sub
fs
fcompl
inc
lds
out
fimull
pop
mov
cmp
aad
shlb
pop
push
fmull
dec
out
loope
lock
cli
insl
jge
sub
ret
stos
sub
inc
push
in
pushf
push
arpl
pop
xchg
aas
es
idivl
inc
data16
sbb
xor
sbb
fldcw
out
xchg
mov
push
int
push
imul
addr16
sub
lds
jno
or
dec
cld
les
shl
adc
sub
mov
popf
aas
xchg
popf
mov
and
xchg
insl
rorb
pushf
jmp
imul
lock
adc
mov
add
scas
leave
rcrb
mov
mov
dec
or
push
mov
push
fstl
rorl
sbb
pop
pop
insl
jb
cmc
push
mov
data16
pop
pop
dec
mov
cmp
outsl
stc
in
sysenter
pop
scas
and
mov
sub
popa
movsl
nop
dec
and
rorb
shrb
cmpsb
aad
popa
clc
mov
sbb
mov
pop
ds
jbe
mov
mov
add
addr16
repnz
and
arpl
cmp
push
xor
lret
xlat
or
insb
add
lret
xchg
stos
nop
scas
ja
lahf
andb
enter
jns
out
dec
inc
push
xchg
jbe
les
mov
imul
mov
idivb
je
mov
cld
out
mov
pop
pop
popf
mov
and
jnp
push
jb
mov
jns
adc
arpl
jns,pt
repz
out
je
les
fisubl
and
int3
push
sbb
addr16
mov
gs
sbb
xlat
mov
adc
mov
mov
int
bound
push
loope
jne
jmp
sbb
sarb
mov
ret
lock
mov
decl
lahf
outsl
xor
in
nop
es
push
and
lcall
push
imul
mov
imul
dec
flds
push
rolb
or
mov
mov
rorb
lods
sbb
out
hlt
dec
pop
test
ret
xor
test
dec
pop
prefetchwt1
ret
mov
lret
mov
repnz
ljmp
je
lods
mov
adc
fldenv
cmpsb
fstpt
ds
loopne
jno
pop
in
jo
sub
repz
notb
repz
inc
mov
popf
and
push
inc
daa
jns
mov
je
dec
pushf
mov
mov
addr16
clc
stos
scas
push
into
xchg
mov
push
fistpl
icebp
jb
and
jecxz
jbe
fidivs
mov
mov
loopne
popf
out
inc
out
icebp
stos
adc
and
mov
shlb
sub
out
dec
sbb
push
or
adcb
sub
imul
adc
dec
cmp
dec
xchg
cltd
in
lret
cmc
wrmsr
inc
fsubs
xor
pop
dec
fmul
jno
mov
jp
push
stos
jo
xor
insb
mov
fsts
inc
lods
add
adc
mov
das
mov
out
pop
jmp
push
lock
mov
push
add
ljmp
loop
mov
pushf
adc
xchg
add
mov
sbb
push
inc
mov
pop
repnz
adc
test
mov
mov
dec
pop
repnz
fmuls
jecxz
jb
jb
sete
mulb
inc
fcomps
test
pop
lds
loop
pop
in
push
sub
xchg
xchg
cmpsb
arpl
mov
shll
push
lret
loope
mov
pop
ds
filds
push
out
inc
or
mov
ljmp
xchg
into
aam
cmpsl
inc
mov
pop
fdiv
jmp
ss
loopne
sub
in
jnp
divb
dec
sub
sbb
dec
inc
cmpsl
dec
jg
sbb
xor
sbb
jae
fldcw
mov
inc
daa
ret
mov
test
xlat
dec
push
popa
mov
cmp
loop
xchg
lods
mov
aaa
jno
pop
loop
sbb
push
jmp
icebp
dec
into
and
xchg
repnz
sbb
addr16
sub
adc
movb
out
or
mov
rcl
fmul
or
dec
stos
test
xor
xchg
dec
adc
jns
pop
test
in
out
mov
popf
adc
call
hlt
xor
aaa
lds
test
push
loopne
ds
jnp
mov
jg
xchg
nop
cmp
scas
jle
xorl
sub
push
in
fstl
xchg
insl
repnz
xchg
test
lahf
incl
popf
mov
lock
push
and
cs
into
xchg
sub
rolb
std
hlt
push
add
out
sub
loop
push
scas
outsb
cwtl
jb
jle
cld
or
insl
cli
sbb
in
fprem
popf
add
mov
mov
and
cld
scas
adc
sbbl
fsubs
inc
mov
jge
movaps
outsb
add
fmuls
fdiv
popl
cltd
jno
push
arpl
push
jmp
push
ret
sub
adc
jnp
lods
xor
add
mov
bound
fnstenv
jae
inc
sub
orb
loop
js
sbb
loop
cld
call
pop
mov
mov
fimull
loope
outsl
adc
pop
mov
dec
sub
sahf
xor
hlt
mov
dec
fimull
testb
xchg
mov
cmpl
or
sarl
fstps
adc
dec
scas
cmp
mov
out
adc
cmc
mov
sub
mov
in
int3
mov
jns
jbe
sbb
adc
adc
lods
aas
in
jo
sub
cmp
in
add
cwtl
xor
hlt
idivl
mov
xchg
xor
mov
into
xor
jmp
inc
mov
inc
hlt
stos
fsubrs
inc
pop
jne
cmp
jo
push
daa
aam
jmp
dec
lods
test
inc
or
jne
xchg
pop
xorl
stc
mov
mov
imul
xlat
xor
pop
sub
rcll
jl
push
idivl
iret
sub
inc
xlat
std
popa
push
test
adcl
bound
icebp
imul
stc
outsb
fisttpll
adc
adc
and
xor
xor
fidivs
mov
into
notl
adc
xchg
mov
pop
ret
cmpsl
aam
push
mov
pop
sbb
loop
push
add
mov
jns
xchg
loopne
mov
data16
andl
repz
fwait
sub
mov
fists
test
pop
mov
mov
imul
sbbb
das
mov
popa
das
clc
pusha
xchg
add
pop
ja
outsl
daa
es
ss
cli
pop
mov
mov
int3
fsubrs
jl
mov
sbb
sbb
fisubrl
cmp
ljmp
lea
inc
pop
cmp
insb
jnp
mov
cltd
ss
dec
imul
push
push
adc
aam
mov
sbb
ds
pop
jo
mov
jae
or
imul
inc
adc
lock
inc
jge
mov
ret
add
mov
test
data16
sbb
push
pop
in
test
out
cmc
aam
icebp
mov
push
movsb
mov
movd
dec
ja
cmp
dec
lods
add
xchg
cmc
mov
inc
insl
mov
adc
sbb
mov
fdivl
aad
je
pop
pop
mov
xlat
cmpsb
lea
xchg
sbb
stc
mov
xchg
inc
sub
rcrl
jne
jno
lock
add
imul
mov
xchg
pop
arpl
test
add
mov
push
es
adcb
js
in
mov
insb
add
add
mov
cmpsl
xchg
aaa
int
add
lock
xchg
filds
cmp
xchg
out
inc
inc
sbb
sbb
cmp
les
cmpsb
dec
cmpsb
loop
fwait
loop
lea
iret
lods
nop
xchg
cmp
je
insb
cmpsb
sbb
mov
mov
xchg
test
and
or
push
fstpt
inc
add
sti
pop
es
jg
mov
je
js
dec
jbe
test
xchg
xchg
sub
or
jp
push
sub
or
pop
fs
pop
pop
xchg
xchg
stos
add
pop
xor
arpl
dec
cli
inc
sbb
or
xchg
dec
les
mov
mov
cmp
xor
sbb
repnz
andl
clc
mov
addr16
loope
mov
in
lds
push
sbb
jnp
cmc
mov
sub
jmp
add
jl
daa
sbb
lods
lret
cli
out
test
in
xor
mov
push
push
mov
inc
ret
ret
kmovb
ja
fisttps
mov
fucomi
adc
lahf
mov
movsb
call
outsb
adc
or
notl
and
adc
xor
adc
imul
mov
add
ror
in
xchg
test
inc
jbe
mov
push
jno
nop
inc
mov
cmp
enter
test
or
rclb
stos
nop
daa
faddl
scas
cmpsl
test
or
scas
cmp
ss
add
and
dec
adc
xor
xchg
add
jbe
fsubrs
orb
and
mov
nop
in
pop
dec
ss
fldcw
data16
jle
pusha
hlt
movsl
lahf
add
or
stos
aas
mov
inc
push
lods
lds
out
xchg
xchg
sub
adc
and
ds
jg
xor
les
jne
dec
jmpw
out
notl
jge
sub
movsl
das
fmull
xchg
jl
mov
jg
sub
fs
mov
cmpl
outsb
mov
aas
mov
sbb
sbb
lret
and
jne
sub
cmp
test
inc
sub
xchg
adc
mov
add
cli
sbb
and
lds
pop
xor
jbe
xorb
and
iret
cmp
add
jns
inc
ficoms
adc
cli
pop
fbstp
cld
into
dec
jns
arpl
mov
movsl
stc
ds
mov
push
test
mov
and
fsubrl
mov
mov
call
hlt
ds
nop
fnsave
dec
out
mov
cmp
idivb
iret
push
fdiv
fcoml
cld
jne
mov
or
aaa
stos
push
pop
push
jne
dec
adc
arpl
in
inc
xor
fwait
cmp
sbb
ja
mov
or
mov
fistpl
add
cwtl
xor
scas
xchg
stos
cmp
adc
inc
mov
stos
jo
mov
pop
out
push
pop
gs
insl
movsb
clc
inc
imul
pop
cmpsb
pop
mov
push
jmp
insb
sbb
jge
xor
movhps
fldenv
ret
mov
imul
lret
gs
inc
cmp
ja
jmp
push
insb
jo
in
fdivrl
inc
adc
add
into
and
adcb
mov
cmp
dec
fdivrs
imul
je
mov
into
fcomp
mov
adc
mov
inc
cltd
test
push
lret
lret
mov
inc
pop
jne
stos
push
mov
pop
int3
je
leave
adc
mov
push
mov
rcrl
ja
ljmp
jmp
decb
nop
jnp
test
add
mov
call
aad
push
gs
outsl
int3
into
aad
in
sub
or
adc
jg
aad
je
xchg
sub
and
out
push
xchg
add
xor
ds
stos
jne
call
fdivl
jns
inc
ds
jge
fwait
pusha
mov
push
lods
xchg
sbb
cmp
das
test
sub
arpl
jge
mov
sub
test
shl
push
dec
and
pop
insb
clc
mov
lret
mov
data16
clc
mov
into
aas
inc
rep
jb
fidivrl
or
pop
push
inc
mov
std
daa
leave
xor
clc
jb
push
out
mov
lahf
and
xlat
in
ja
fs
stos
xchg
aad
cli
add
bound
stos
ja
and
mov
add
and
sarb
fldcw
sbb
xchg
mov
fs
loope
in
xchg
push
outsl
inc
in
inc
and
int
gs
jb
mov
loop
dec
cmp
sarl
push
push
movsl
xchg
in
in
call
repz
shrl
sub
ljmp
xor
stos
xor
pop
rep
insb
lret
add
sub
dec
das
xor
xchg
sub
cltd
stos
dec
std
jno
int3
and
push
sbbl
pop
jg
dec
adc
push
mov
lods
loope
jmp
test
jecxz
int3
adc
and
into
sarb
daa
mov
xor
push
scas
dec
pop
loope
cmp
mov
enter
sti
cmpsl
mov
adc
dec
pop
out
sbb
sub
xchg
mov
and
std
or
insl
insb
jle
mov
cmp
mov
dec
push
inc
jecxz
pop
insl
mov
insl
mov
cmc
aad
bound
lds
test
xchg
jo
fwait
inc
push
fwait
xlat
rorl
jno
repnz
cli
xchg
movsb
repnz
movsb
add
fs
adc
insb
sbb
xchg
and
push
outsb
mov
push
mov
and
add
xchg
inc
stos
addb
mov
lea
gs
out
cltd
imul
test
es
cmpsl
notb
movsl
pop
adc
nop
les
gs
xchg
pop
dec
inc
call
mov
xor
aas
dec
orl
mov
divl
lcall
mov
lcall
mov
aad
jmp
push
testb
insb
outsb
sbb
mov
jmp
push
sub
add
and
mov
stos
es
push
add
mov
pop
mov
mov
sub
imul
movsb
or
inc
ss
sbb
int
movsl
aaa
push
pushf
adc
jmp
cmp
leave
sub
dec
cmp
mov
inc
pop
insb
push
rcrl
pushf
jg
sub
sti
push
pusha
loop
push
pop
rolw
sub
cmc
icebp
push
jl
fidivs
pushf
dec
jbe
add
push
pop
cltd
xor
and
test
rclb
cltd
xor
fbstp
fwait
ds
int3
out
jecxz
adc
daa
mov
ss
ja
fs
arpl
sub
gs
loope
jne
or
fwait
adc
or
dec
cltd
jns
lods
add
fldt
sub
mov
mov
push
hlt
int
lahf
decb
sti
daa
fwait
test
repz
jp
xchg
mov
sub
dec
hlt
add
aam
negl
les
test
dec
icebp
jl
inc
or
ret
or
out
out
in
pop
loope
in
fwait
sub
add
mov
test
pop
mov
inc
sarl
loop
mov
shll
scas
xchg
mov
bound
mov
insb
icebp
cwtl
popa
int
cmpsl
xor
and
cmp
call
adc
mov
sbb
xchg
jp
imul
test
dec
sar
pop
rcl
inc
cmpsl
mov
mov
repz
test
or
das
sar
cwtl
push
call
mov
or
xchg
mov
negl
dec
aam
sub
movsl
push
loope
rorl
cwtl
pop
cs
pop
ror
ljmp
mov
fsubrs
mov
mov
rcll
fsubrl
jecxz,pn
pusha
shrb
sbb
add
mov
fucomip
adc
or
loopne
lds
jnp
scas
pop
add
adc
sarl
aaa
mov
lods
jmp
lds
xchg
push
push
push
aas
sbb
gs
mov
pop
outsl
hlt
call
cmp
aaa
es
push
dec
xchg
xchg
stos
movsb
mov
push
lea
stos
mov
adc
mov
xchg
dec
and
addr16
add
push
pusha
pop
out
mov
add
lods
fstpl
push
inc
imul
sbbb
dec
mov
xchg
jp
ss
cli
push
in
fstl
cmp
cmp
xlat
cmp
and
add
arpl
je
xor
sub
sti
jne
out
jle
xor
jg
jo
frstor
xchg
cmp
enter
fwait
pop
icebp
stos
jmp
roll
add
dec
cmp
lcall
add
sbb
add
repnz
dec
mov
fwait
movsb
jae
dec
sub
or
lret
sub
dec
or
mov
scas
cmp
or
unpckhps
shrl
aas
out
push
cmp
add
or
xor
xchg
cwtl
sahf
stos
imul
add
sbb
stos
adc
xor
adc
aaa
push
lcall
cmpsb
in
mov
in
aaa
fucomip
or
jp
jns
cs
mov
push
fdivr
addl
ja
pop
stos
add
pop
cmpsl
mov
sahf
jns
cmp
cmp
jmp
hlt
dec
sub
rep
lret
push
mul
mov
and
pop
lret
jns
and
rcl
std
mov
jno
push
int
push
repnz
es
mov
mov
xchg
pop
inc
sbb
add
sub
int
mov
cwtl
fidivrs
dec
push
stos
pushf
or
cmpsl
mov
faddl
gs
insb
std
stos
jae
fcoml
divb
mov
lods
and
fsubrs
cs
pusha
and
imul
popa
imul
or
dec
dec
fyl2x
mov
bound
aam
jecxz
jbe
add
sbb
mov
add
add
add
inc
adc
outsb
cld
data16
dec
mov
arpl
push
add
sbb
ds
es
fisttps
dec
mov
add
adc
cmpsl
xor
or
push
or
fisubrl
clc
or
sti
sub
incb
mov
subl
cmp
sahf
inc
dec
je
cmc
rcrl
icebp
xchg
notl
out
sbb
pop
cmp
je
jle
in
fnstsw
xor
or
xor
out
sub
pop
sub
in
jge
xchg
mov
lock
lods
sbb
cmpl
mov
or
loop
mov
pop
cmpsl
xchg
int3
cmp
cmp
jl
dec
mov
pop
sub
dec
pop
push
fisubrs
enter
out
loope
jnp
sbb
xchg
movsl
out
out
adc
mov
push
clc
add
loope
repnz
stos
pop
mov
dec
hlt
addr16
push
test
out
dec
pop
push
mov
mov
cmc
pop
clc
jae
popf
mov
out
outsl
pop
xchg
insb
xor
cli
cmpps
loope
or
movsl
pushl
dec
jnp
xorb
jp
mov
lret
or
outsb
cmp
cmc
dec
jp
lock
adc
dec
dec
imulb
in
outsb
push
push
or
pushf
or
sub
push
sub
subb
pop
adc
test
jae
cmp
lds
out
lock
jbe
jo
loope
gs
inc
lds
inc
fildl
adc
bound
inc
fildl
shrb
loope
add
sbb
add
out
in
cmp
stos
inc
xchg
sbbl
sub
sub
xchg
in
sub
insb
cmp
sub
test
clc
pop
jb
xchg
pop
insb
leave
mov
mov
adc
int
bound
dec
int
pop
mov
loop
pusha
int
sarb
gs
lock
dec
adcb
fcomp
mov
inc
jns
and
imul
dec
push
mov
int3
lock
lods
loope
or
dec
xchg
int3
dec
loope
std
sub
inc
stos
cmp
jmp
in
push
clc
dec
mov
xor
clc
daa
loope
sbb
out
xor
js
dec
xchg
std
pushf
dec
jg
push
movsl
pusha
ljmp
ljmp
cmc
scas
cmp
cltd
mov
lret
jl
aas
pop
mov
cmp
cltd
cmp
adc
cmpsl
inc
mov
aam
sub
dec
mov
int
pop
cmp
loop
jle
push
sbb
roll
std
mov
into
outsl
iret
or
sub
pop
jns
loopne
push
mov
js
cld
xchg
in
ret
pop
xchg
repnz
test
cwtl
add
push
adc
mov
dec
dec
cmc
int3
add
xor
sbb
cmc
push
mov
pop
xchg
push
test
lock
jmp
add
addr16
push
jecxz
xchg
sub
mov
popf
test
inc
cs
test
jmp
and
pop
and
in
rcrl
jo
sbb
popa
sbb
loope
stos
xchg
shlb
cs
lods
scas
xchg
test
jecxz
mov
and
and
pop
dec
dec
fwait
mov
int3
loopne
shll
or
mov
or
xchg
cmp
pop
stc
je
mov
jmp
jecxz
jg
mov
std
repz
add
xchg
dec
adcl
or
xchg
add
adc
cltd
stc
mov
sarl
fcomps
orb
and
std
loope
iret
push
and
cltd
insb
lcall
xchg
ja
bound
push
rolb
movsl
icebp
cmp
lcall
loopne
mov
xor
jmp
or
ret
lods
mov
xchg
int
cmc
decb
movsl
ror
incl
stos
push
and
ja
repz
enter
cmp
cs
scas
hlt
mov
sarb
or
aaa
mov
xor
mov
sub
aaa
adc
clc
sub
hlt
decb
sub
add
in
fmull
repnz
cmpsl
out
mov
dec
inc
xchg
ja
movsl
icebp
stos
mov
xchg
sbb
or
daa
cmp
xchg
push
in
dec
pop
ds
out
mov
pop
inc
cld
fs
xor
cmp
nop
or
sub
repnz
jbe
mov
test
imul
push
rcrl
fsubl
imul
insb
sarl
mov
js
std
xchg
xor
xchg
inc
sbb
pop
mov
xchg
loope
lcall
mov
or
test
mov
mov
out
stc
out
jg
push
dec
jmp
jnp
sub
pop
in
or
hlt
fstpt
stos
sbb
cmpsb
add
or
xchg
paddsb
orl
jns
jge
int3
scas
lock
xchg
mov
adc
sbb
sti
sbb
aam
push
loope
jecxz
adcb
lcall
inc
sbb
sbb
add
inc
cwtl
js
jb
inc
adc
dec
jl
xchg
scas
push
mov
pop
loopne
les
sti
and
fs
into
enter
out
sbbl
and
mov
imul
jg
dec
gs
push
pop
outsl
mov
and
xchg
mov
sub
stc
push
repz
mov
jne
push
pushf
adc
aas
push
out
mov
mov
movsl
repnz
inc
add
push
or
les
adc
andb
imul
movsb
xlat
stos
or
ds
cmp
aad
inc
gs
xor
int3
adc
lret
sbb
daa
inc
dec
jecxz
sub
jle
push
mov
xor
pop
mov
jmp
ds
out
mov
nop
outsb
mov
push
mov
xchg
mov
adc
adcl
add
adc
mov
mov
or
xorl
je
dec
fiadds
enter
sub
cmp
dec
sub
pop
mov
pusha
mov
jno
inc
push
mov
mov
jns
icebp
imull
add
fiaddl
push
mov
mov
les
push
xor
cwtl
setbe
push
inc
push
out
insl
dec
aad
inc
push
out
pop
xchg
jo
xor
mov
adc
push
or
es
mov
sub
push
lret
cmp
incb
nop
addl
gs
and
push
adc
and
cmp
fiadds
movsb
push
mov
mov
sub
pusha
fistl
pushf
pop
or
fnsave
cmp
push
sti
jg
adc
lds
add
adc
mov
ret
mov
test
hlt
adc
jne
lret
cmp
xchg
mov
dec
les
imul
aas
xor
out
arpl
jbe
shrb
and
std
mov
es
stos
xchg
inc
gs
lret
ds
push
inc
scas
fidivs
test
mov
pushf
sbb
fsts
loop
sbb
xor
sbb
test
mov
push
stos
mov
loopne
jg
adc
jno
cmp
mov
xor
xor
pop
push
xchg
add
jno
sbb
flds
pop
clc
sahf
aam
addr16
xor
push
in
mov
insl
cmp
sub
inc
das
pushf
push
jp
push
mov
and
stos
fdivl
shll
decb
sbb
lret
and
jecxz
out
sbb
int3
in
in
mov
test
incl
add
insl
cmp
and
or
bound
mov
push
pop
push
fdivrl
fcos
cli
push
inc
aaa
aam
xchg
rcrl
dec
jmp
jmp
push
xchg
inc
je
mov
jb
sub
movsl
jo
pusha
sub
jge
cltd
dec
pop
xchg
test
pop
lods
xchg
push
fidivrs
popa
xor
notl
pop
ljmp
xchg
mov
sbb
xchg
cmp
cwtl
dec
stos
rcrl
jge
fldt
or
jge
popa
out
fnstcw
mov
jle
inc
fldt
stos
inc
or
or
movsb
fistps
sarb
and
sbb
lock
jae
mov
fisttps
call
pop
push
ljmp
add
mov
fcomps
lcall
jle
push
and
push
repz
inc
scas
jb
cmp
imul
and
mov
push
imul
and
mov
xor
xorb
dec
loope
test
cld
in
arpl
pop
cmc
xchg
sbb
test
in
pop
and
dec
inc
and
pop
jnp
mov
mov
mov
jg
push
inc
pushf
test
sahf
xor
jns
loopne
subb
inc
mov
xor
add
cmpb
into
xchg
or
dec
jmp
test
fs
imul
repnz
mov
mov
push
fisttps
push
pop
stc
nop
dec
popa
cld
push
scas
sub
add
fstpt
xchg
pop
pop
pop
mov
jmp
or
mov
and
jle
cltd
xor
inc
mov
adc
adc
ja
aam
loop
jo
xor
arpl
imull
cmp
add
int3
jb
cmp
adc
inc
out
pop
jo
ja
mov
inc
adc
sub
bnd
scas
adc
movsl
add
mov
jb
inc
jmp
dec
inc
push
pop
or
pop
mov
xor
jle
or
ret
mov
or
mov
sub
or
mov
bswap
mov
fs
xchg
pushf
mov
mov
test
fsubl
mov
xor
dec
aad
adc
inc
add
cwtl
adc
ss
aaa
or
stos
dec
cmp
mov
cmp
mov
jge
leave
mov
loop
sub
xor
jmp
insb
jae
stos
mov
cmp
cmp
mov
imul
mov
loop
jb
mov
pop
jmp
mov
cmp
xor
adc
and
xchg
daa
lds
aam
call
sbb
stc
addb
prefetchwt1
and
sub
cmc
lods
bsf
lret
and
gs
add
lods
jge
out
loopne
add
iret
roll
mov
mov
lret
inc
push
mov
pop
xor
lea
test
add
fstps
push
push
dec
inc
mov
lcall
cli
cmp
jmp
push
out
test
mov
mov
add
nop
fwait
stos
lea
push
aad
xor
xchg
push
out
inc
es
loope
das
lock
movsl
push
push
movsl
inc
fdivrp
jne
out
sub
mov
sar
mov
icebp
xchg
out
outsl
loop
cmp
orl
repnz
mov
mov
fsubr
stc
std
sqrtps
push
cli
sub
pop
xchg
icebp
mov
push
jl
cmc
cli
shrb
shr
lods
mov
cmp
dec
dec
mov
shrl
adcl
repnz
dec
shrl
mov
out
dec
mov
or
rcl
in
adc
leave
int3
mov
inc
xor
push
lods
lahf
scas
jmp
cmpsl
push
rcll
test
dec
fidivrs
inc
pop
push
pop
or
icebp
add
sbb
mov
xchg
div
popf
xchg
sub
icebp
cmp
push
in
ljmp
jnp
mov
sub
or
add
mov
es
mov
out
rcrb
inc
push
xchg
stos
xchg
test
mov
inc
in
jne
out
int3
push
dec
cli
leave
lea
fstpt
cmc
mov
fnstcw
add
rcrb
push
lahf
mov
mov
xchg
mov
fcomp
xchg
adc
pop
rclb
pop
pop
adc
mov
xchg
call
cld
sbb
pop
push
or
clc
push
movsb
inc
outsb
xchg
and
dec
ja
nop
jl
rcll
mov
sbb
jg
inc
pop
aas
pop
ljmp
call
imul
es
rorb
add
xchg
aaa
rorb
xor
adc
aaa
pop
ret
fs
in
inc
jnp
dec
ret
loop
hlt
lods
jmp
mov
test
or
mov
divb
pop
mov
in
rorl
rolb
adc
inc
and
les
aad
ss
and
push
or
inc
inc
sub
popa
fidivl
sahf
mov
mov
xchg
xchg
cmp
inc
jmp
mov
test
xor
mov
je
cmpsl
aad
das
pop
leave
push
jae
sub
int3
lcall
push
mov
xor
adc
jg
pusha
cmp
push
xchg
fimuls
and
out
push
push
mov
mov
mov
insl
xchg
xchg
dec
enter
loope
jns
ret
sub
push
mov
sub
data16
push
scas
outsb
or
cmp
dec
jecxz
jno
or
outsl
out
xchg
push
xchg
sub
jmp
movsl
dec
xchg
dec
push
pop
sub
add
popf
enter
nop
mov
sbb
orb
jo
orl
or
scas
call
push
imul
ret
add
icebp
mov
xchg
call
arpl
cmp
inc
clc
cmpsl
cmp
pop
out
and
repz
shl
mov
jno
xor
adc
cmpsl
push
jno
cli
push
lods
imul
xor
fldcw
adc
and
insb
push
adc
iret
jle
xor
outsb
inc
cmp
ret
pop
fld
fisttpll
cmp
mov
daa
mov
mov
adc
rolb
jb
mov
cmpsl
arpl
xor
popa
and
lock
lret
sti
adc
bnd
imul
sahf
in
xchg
cmpsl
shll
cli
adc
arpl
mov
and
adc
sahf
push
push
cmc
mov
in
adc
mov
and
test
int3
arpl
jns
cmpsl
stos
popa
sub
ror
xchg
mov
gs
int
mov
dec
shrd
aas
test
lret
push
ja
sub
or
lret
imul
adc
mov
stc
adc
psubd
and
mov
sahf
cmp
testb
or
aam
lods
or
daa
aam
pop
cmp
shll
mov
rorb
dec
fistl
xor
push
and
jg
gs
out
jb
shl
pusha
mov
loop
cltd
cmc
sub
jmp
cmp
subl
testl
sub
jmp
out
scas
in
inc
adc
adc
subl
xchg
jns
adc
mov
and
mov
or
fstpt
mov
mov
mov
das
add
cwtl
repnz
int3
inc
add
sbb
arpl
test
mov
jl
xor
sbb
sub
mov
fldt
inc
aaa
gs
movb
fcoms
jmp
sbb
outsl
inc
xchg
and
pop
cmpsb
mov
out
adc
fucomp
inc
pushf
das
stos
lods
xchg
insl
imul
popa
addl
push
or
mov
inc
or
repnz
aad
shr
mov
pop
shll
pop
pop
out
aas
idivl
jecxz
xor
pop
mov
int3
ljmp
bound
mov
addl
in
or
lods
lahf
pop
cmp
xchg
jae
push
test
and
or
imul
dec
add
pop
sub
sub
dec
lods
inc
cmp
cmp
sub
sarw
jg
cmpsb
cmp
push
adc
cmovb
mov
push
fidivs
xchg
data16
notl
stos
in
push
lods
push
aam
mov
xchg
inc
popa
or
add
outsb
imul
pusha
in
aaa
pop
mov
lcall
jmp
adc
and
mov
jno
daa
in
jp
xchg
inc
pop
dec
push
stos
push
jle
mov
int
jmp
mov
aaa
jne
mov
add
push
pusha
jb
mov
cmp
stos
add
xor
fucom
pop
cmpsb
push
jge
mov
push
iret
aaa
dec
std
xchg
call
jns
sbb
push
inc
shrl
inc
mov
cmp
mov
mov
sbb
repz
lret
pop
in
adc
ret
sahf
mov
filds
or
inc
fidivl
sub
cmp
jns
fldenv
popf
fs
fistl
aaa
into
stos
jg
popa
mov
push
jmp
rcrb
sub
jb
xlat
pushf
popa
clc
into
or
cs
xor
scas
test
js
es
clc
js
add
movl
dec
mov
in
lcall
sub
push
xchg
pop
jo
loopne
sub
pop
push
fldl
sbb
outsb
dec
cltd
xchg
decb
cmp
push
fs
cmp
inc
lret
aam
mov
mov
loopne
push
add
mov
sbb
popf
negl
and
lds
sbb
mov
inc
je
xchg
inc
ret
ficompl
fsub
sub
outsl
dec
xchg
xor
dec
insl
or
scas
ds
mov
or
mov
mov
push
or
andb
add
xchg
pop
loopne
fsts
sbb
in
cs
inc
scas
ljmp
mov
push
fld
inc
mov
mov
rcrl
or
divb
inc
inc
xchg
mov
pop
fwait
aaa
and
cmc
lret
cmpsl
push
cmp
xchg
daa
test
xorl
out
mov
jmp
cmpsl
ret
in
test
mov
shlb
xor
sub
or
xchg
cmp
notl
les
fildl
je
mov
incl
cmc
jb
sbb
lahf
mov
xchg
add
je
aad
mov
fiadds
cmp
inc
in
daa
jmp
lret
rolb
fdivr
outsl
dec
mov
nop
add
inc
xor
popa
clc
out
mov
push
and
cmp
ss
pushf
data16
cwtl
sub
or
outsl
fildl
das
push
shr
push
or
ret
shl
stc
enter
pop
sbb
jb
adc
xchg
xorl
push
pop
pop
mov
mov
xor
movsl
lea
pop
lahf
bound
sarl
loope
add
jns
push
mov
mov
outsl
ret
ja
ja
dec
xor
popa
jb
lcall
daa
out
add
sbb
enter
adc
xchg
lcall
and
push
xchg
cmp
pop
int3
scas
ss
cli
aam
fistpl
mov
data16
mov
lret
rcrl
inc
lret
cmp
fistpl
out
adc
cmp
or
add
mov
shr
mov
xchg
push
pop
cmp
bound
stos
iret
or
cmp
fisubrs
shll
sub
jnp
lahf
and
push
xchg
and
fistpl
test
push
mov
imul
mov
jne
fcomps
xor
test
push
scas
aas
aad
jo
add
inc
and
xchg
dec
mov
pop
xchg
mov
sub
ficoml
push
mov
std
js
movsl
fwait
das
xchg
jge
pop
ljmp
lods
push
popf
pop
adc
sbb
into
sub
inc
xchg
and
xor
mov
pushf
push
push
ret
fidivrl
out
inc
sbb
or
jo
xor
sbb
cmp
pusha
cmpsb
or
cmc
adc
fnstcw
inc
add
loop
mov
mov
inc
and
adc
push
movsl
xor
push
stc
ds
jo
addr16
loop
add
stos
mov
fwait
jp
int
push
decb
in
iret
dec
lock
rcl
mov
repz
cld
fwait
cmpsl
lahf
adc
mov
mov
push
adc
add
xchg
aaa
dec
lret
push
sahf
mov
lret
call
addr16
fistpll
jbe
lret
test
mov
mov
sub
orl
or
mov
iret
adc
je
jns
push
lcall
leavew
les
dec
cltd
pop
sarl
jecxz
aad
lds
pushf
aad
cmpsb
push
fcomip
fdivrl
inc
cmp
mov
pop
pushf
sub
pop
push
fldenv
ss
or
dec
insb
fistl
adcl
mulb
dec
popa
hlt
shr
aad
sbb
sbb
lret
pusha
iret
sbb
or
cmp
lret
out
mov
cmp
mov
lcall
adc
pop
outsb
cmpsb
scas
dec
mov
cmpb
mov
hlt
daa
xchg
arpl
mov
jle
push
insl
clc
mov
das
int
mov
and
dec
fs
das
loopne
adcl
or
push
pop
in
sar
mov
mov
fsubr
orl
jae
mov
xlat
dec
cmp
loope
movsb
fwait
xor
mov
push
shlb
pop
mov
shrl
adc
cmc
sub
inc
mov
sub
or
fisttpl
xchg
mov
xor
stos
mov
lret
lea
ficomps
mov
inc
add
pop
icebp
pop
inc
fstpl
jl
jmp
jno
js
sbb
stos
test
clc
popa
dec
loopne
lock
ret
and
adc
mov
or
lea
push
and
psubb
cmp
jecxz
dec
ja
imul
loopne
and
jp
cmp
jbe
sbb
xchg
popf
sbb
xchg
fsubrl
stos
pop
das
inc
out
outsb
adc
ljmp
ljmp
jl
mov
hlt
clc
je
sub
lahf
pop
xor
pop
and
stos
inc
push
cs
mov
pop
mov
stos
in
push
lods
cmp
push
ror
pop
outsl
mov
mov
inc
mov
loope
dec
fnsave
hlt
arpl
scas
in
iret
mov
dec
xchg
lock
and
pushf
test
out
scas
xchg
add
out
lods
dec
in
and
movsl
scas
cmp
icebp
ds
imul
cltd
pop
loope
loopne
xor
out
xchg
sub
pop
mov
add
xor
sbb
mov
fdivrp
cltd
dec
ret
ds
js
in
add
and
or
xchg
inc
or
lods
stos
jnp
fmull
lods
pop
jl
popa
xchg
and
and
std
jmp
les
out
xor
orl
dec
dec
mov
fwait
test
add
or
or
mov
or
ljmp
fcompl
addl
mov
fsubr
repz
cmp
les
test
int
mov
shrb
mov
ret
dec
mov
movsb
stos
sub
scas
es
shlb
roll
subb
and
popf
jbe
or
repnz
pusha
into
inc
or
mov
pop
test
sarl
jmp
js
out
std
inc
sub
sub
push
xchg
add
pop
out
pop
lret
bnd
arpl
rorb
and
sbb
fxch
inc
mov
add
scas
cs
mov
aas
nop
inc
flds
ret
bound
dec
int
js
cmp
mov
sbbb
pushf
adc
mov
and
cltd
add
cld
mov
enter
movsl
lock
ljmp
repnz
ffree
call
xor
inc
aaa
stos
idivl
je
ja
mov
add
mov
out
es
ja
pop
sub
inc
popf
jnp
test
les
rcr
dec
pop
xor
pop
and
add
lahf
in
hlt
pop
pop
sub
push
dec
dec
popa
notl
aaa
mov
mov
cmc
ror
sahf
cli
mov
mov
pushf
and
inc
dec
bnd
push
repnz
or
gs
cmp
incb
xchg
xor
xchg
imul
pop
mov
xchg
and
dec
sarb
mov
pop
out
pop
mov
xchg
or
in
gs
jmp
xor
imul
push
sub
mov
lock
call
push
jle
dec
or
fabs
inc
adc
adc
int
aad
out
fnsave
xor
inc
bound
jne
pop
cli
dec
pusha
aaa
fcmovbe
jae
daa
in
xchg
pop
repnz
add
data16
ds
add
mov
stos
or
fwait
dec
cmpsb
sbb
adcb
xchg
sub
pushf
mov
rorb
shlb
mov
out
fldcw
test
mov
jno
scas
pop
sbb
inc
push
repz
adc
jle
dec
jno
loop
sbb
test
jae
inc
cmp
fisttpl
jp
dec
xchg
outsl
clc
fiadds
or
sahf
hlt
fdivs
rcrb
xlat
mov
add
sub
adc
ss
es
jmp
mov
aas
sbb
jl
push
je
dec
enter
xlat
test
mov
cmp
or
xchg
movsb
ja
ljmp
xor
mov
xchg
call
imul
xor
cld
xchg
inc
shrl
xchg
jb
jecxz
jo
das
lret
pop
in
push
sbb
jmp
cmp
in
rclb
jo
popf
int3
pop
std
push
xor
popf
or
inc
mov
sbb
sbb
jne
jae
addb
xor
mov
movsl
mov
fsubr
dec
push
mov
cltd
in
and
dec
and
inc
imul
push
pop
rorb
jle
xor
push
sbb
int
jge
aam
sub
scas
cmpl
xchg
xlat
fmull
loop
inc
lret
jo
pop
movsb
xor
sbb
test
pop
sbb
fdivr
sbb
movsb
inc
inc
fadd
ds
or
pop
movsl
dec
sbb
pop
hlt
in
push
mov
les
xor
shll
pop
std
lods
jne
lock
xchg
arpl
clc
imul
fcmovu
insl
test
inc
jno
loopne
fbstp
push
dec
and
sahf
jecxz
mov
js
aas
les
pushf
repz
or
out
nopl
mov
xlat
insl
xchg
scas
imul
loop
push
jmp
inc
adc
jns
xor
outsl
negl
mov
mov
pop
fnstenv
into
dec
rolb
rcll
orl
ror
sbb
int
adc
xor
lcall
jns
daa
ja
lcall
mov
pop
dec
and
sub
fwait
pop
imul
sub
sub
in
mov
mov
in
fcoms
roll
testl
xor
enter
mov
jmp
dec
cmpsl
out
xorb
imul
sub
jl
cmp
negl
inc
xchg
or
fwait
dec
mov
enter
incb
mov
and
notl
lock
sub
inc
test
fs
push
leave
sub
sti
je
bound
loopne
cmp
loope
sbb
roll
mov
mov
adc
lds
jecxz
incb
jne
add
mov
mov
pushf
push
sbb
sbb
sbb
mov
jge
mov
jmp
or
lods
lds
mov
pop
fidivl
mov
clc
or
lahf
rcl
dec
shlb
lea
inc
leave
sbb
scas
sbb
lods
mov
les
js
push
ljmp
mov
and
hlt
push
cltd
test
adc
sub
jnp
jl
jecxz
mov
pop
add
out
insl
push
js
dec
lock
push
adc
and
aas
imull
popa
dec
jg
aad
daa
inc
xor
jae
mov
xchg
sub
adc
je
stos
outsb
lods
lahf
enter
in
test
repz
inc
sbb
mov
clc
push
sbb
sub
ss
hlt
outsl
jnp
jb
sub
shll
stc
mov
out
push
mov
xor
sbb
pop
and
cld
aas
and
cmpsl
jmp
test
aad
cmp
inc
addr16
test
jmp
or
xor
and
and
sbb
pmaddwd
and
sti
pop
fstps
push
ss
mov
pop
decb
ljmp
mov
loop
add
out
pop
cli
sbb
daa
lea
mov
stos
lret
mov
fildll
cltd
and
mov
fcmovb
mov
mov
addr16
xor
push
aad
mov
cwtl
mov
scas
inc
hlt
or
loope
sub
ret
pop
movsl
arpl
lods
outsl
loope
lods
test
add
lock
cld
cmp
mov
ficompl
pop
lret
mov
add
xorb
stc
fdivl
mov
xlat
sbb
add
xor
pop
adcl
fwait
mov
adc
push
jnp
ds
fisubrl
add
insb
sbb
cmp
push
xor
ret
cmp
jbe
sub
cmp
xchg
int3
arpl
mov
rep
or
mov
daa
add
sbb
push
cmpsb
shlb
pop
sub
pop
icebp
dec
sahf
pop
loop
push
clc
or
mov
xor
xchg
decb
cmp
pop
dec
loop
daa
add
jge,pn
inc
scas
mov
adc
jnp
in
mov
adc
jp
jno
lcall
or
imul
imul
fists
cmpl
cmp
test
lret
out
jge
pop
xor
jge
xchg
push
stos
dec
lods
jno
lods
jge
and
cli
jno
aaa
jp
jmp
mov
rcll
scas
jle
mov
mov
hlt
jecxz
xchg
sub
std
adc
subb
lahf
inc
mov
xor
into
xor
cmpl
lcall
mov
and
leave
test
push
jl
push
inc
cmp
loop
js
inc
mov
adc
clc
rorb
sbb
scas
dec
and
shlb
add
pop
pop
cmp
lret
in
add
mov
pop
and
inc
test
out
cmp
push
int3
xor
add
shl
pop
fadds
dec
ds
into
lea
outsb
cld
test
popf
repnz
mov
insb
add
dec
loope
pop
sbb
scas
inc
cld
shlb
xlat
and
in
sub
ss
dec
movb
fidivl
fxch
lods
push
inc
mov
js
pop
jle
adc
popa
inc
xor
sarb
lock
sbb
jb
mov
jecxz
sub
push
jmp
pop
mov
jbe
pop
test
scas
shrl
sbb
das
sbb
mov
mov
cltd
mov
add
push
xchg
das
mov
arpl
pop
cmp
insb
jge
inc
mov
fcmove
mov
lret
mul
scas
cld
cmc
adc
push
sbb
xchg
jnp
fidivs
test
jnp
add
arpl
jb
or
mov
test
fildl
nop
xchg
insb
mov
xchg
pop
popa
cmpsl
repz
inc
sti
push
pushf
mov
je
cltd
adc
mov
pop
fisubrs
js
ja
das
sub
pop
dec
sti
push
mov
add
rclb
mov
cmpsb
cmp
jmp
imul
ret
jnp
adc
movsb
cmp
das
cwtl
cmpsl
sarl
pop
xchg
lock
je
mov
jp
enter
adc
cmp
ficomps
push
mov
adc
or
pop
out
cmp
cmp
adc
push
in
jno
jo
test
and
mov
popf
inc
add
push
jg
daa
sti
sub
xor
push
cmp
sub
test
pushf
addr16
xlat
daa
adc
test
int
test
jo
lea
or
imul
in
insl
mov
or
jae
xchg
scas
xchg
dec
jg
mov
cmp
mov
adcb
outsb
cmpl
or
lcall
add
pop
mov
js
cmpsl
dec
jp
sbb
cmpsl
push
test
shlb
and
aam
adc
adc
pop
sbb
jo
lea
inc
insl
jge
inc
adc
jo
lcall
cmp
shll
pop
imul
aam
ja
nop
dec
iret
shll
mov
xchg
push
jl
push
mov
push
fists
pusha
addb
imul
imul
mov
jnp
out
mov
aaa
aas
mov
jne
sarb
sahf
xor
adc
dec
movsl
jb
jne
in
jg
lods
in
and
pop
into
or
adc
push
lahf
test
cmp
in
add
xlat
mov
push
adc
repnz
sbb
push
xchg
cmp
mov
repnz
insl
in
insl
ss
pop
cli
clc
add
xor
or
add
push
imul
rclb
sub
adc
and
call
fldt
cmc
xchg
int3
add
mov
push
lods
xorb
pop
jge
sub
into
sub
jl
push
dec
stos
inc
jle
sbb
in
xor
jb
sbb
adc
loopne
adc
out
dec
push
icebp
push
fbstp
push
and
es
pop
insb
mov
xchg
pop
bt
stos
pop
out
ss
pop
dec
and
jne
jbe
jecxz
adc
xchg
out
insb
iret
mov
pushf
jge
repnz
xorb
mov
lods
and
mov
xor
xchg
outsb
or
cmc
xchg
iret
xchg
jno
ret
out
andl
mov
stc
inc
add
jno
scas
ja
adc
jbe
adc
dec
xlat
fimuls
leave
xor
push
montmul
cmpsb
inc
sbb
inc
jnp
sub
roll
mov
xchg
add
jecxz
push
jnp
cmp
jb
and
jl
jle
arpl
mov
jge
pop
cmp
push
fsubrp
push
sub
jnp
ja
test
notl
sub
inc
je
cmp
sub
xor
sbb
add
jp
bound
and
cmpsb
imul
inc
call
mov
daa
or
mov
insl
adc
cli
je
cltd
test
mov
inc
xor
mov
ficoml
ficompl
pop
sbb
jl
jg
rcrl
bound
js
or
dec
scas
cmpsl
mov
or
push
jne
mov
inc
adc
dec
lock
test
aad
and
sub
clc
repz
jbe
sub
inc
pop
inc
push
sti
dec
jnp
cmp
xchg
daa
add
mov
cmp
push
mov
aas
fists
mov
xlat
insl
test
hlt
addr16
scas
into
gs
add
mov
test
and
scas
call
cld
cmp
call
rclb
in
loope
rcrb
imul
gs
mov
arpl
loopne
sub
mov
adc
outsb
lret
cld
jbe
icebp
stc
mov
aas
mov
orb
test
fistpll
mov
insb
adcb
push
or
test
jne
pushf
lret
mov
test
test
lea
stos
addb
repnz
xor
xor
or
lods
sbb
pop
jo
lret
mov
in
rol
pop
in
or
mov
xor
mov
xor
insb
add
into
in
inc
lahf
sbb
xor
mov
in
adcl
mull
mov
or
cli
sub
mov
mov
arpl
lahf
rol
inc
test
lcall
xor
scas
dec
hlt
adcl
add
int3
pop
movsl
push
push
roll
or
dec
aaa
pushf
and
jne
daa
cmpsl
xor
and
data16
stos
js
mov
cs
mov
push
addl
add
push
pop
in
jno
pop
arpl
mov
xor
leave
cmp
daa
sbb
into
ret
imul
outsl
mov
rcl
mov
pop
push
dec
sbb
jp
aas
inc
adc
pop
xlat
test
inc
sbb
mov
jo
lea
jmp
or
sbb
loop
inc
xchg
iret
push
je
lods
xchg
ret
popf
stc
pop
dec
pop
nop
ficoml
adc
pop
daa
leave
sub
fcomps
push
xor
adc
stos
xchg
aas
push
mov
dec
dec
repz
insl
idivl
fcoml
call
dec
bound
jge
pop
daa
shrb
dec
or
rcrb
lret
mov
mov
cli
jp
push
in
int
popf
js
push
mulb
pop
mov
mov
or
clc
jne
ret
sbb
aaa
mov
mov
adcl
out
fwait
mov
ret
cmc
or
shll
and
jae
add
mov
out
int
xor
popa
enter
aad
add
aaa
lock
mov
push
js
push
mov
push
out
lods
mul
dec
addr16
xor
dec
mov
adc
pop
mov
push
and
sti
leave
addr16
repnz
or
stc
cltd
dec
cmp
mov
imul
fldt
into
enter
pop
dec
mov
sahf
and
xlat
stos
mov
jmp
aas
pop
les
imulb
out
dec
pushf
mov
push
leave
js
ds
push
popf
mov
add
fwait
lds
mov
push
dec
dec
fnsave
mov
push
in
adc
sub
pop
cld
jmp
and
mov
jmp
mov
push
xchg
mov
lods
lds
loopne
mov
aam
stos
inc
jmp
add
push
pop
and
mov
pop
pop
jo
mov
leave
mov
je
jns
cltd
aas
xchg
mov
jecxz
lahf
in
aaa
push
js
adc
adc
pop
lret
inc
lret
mov
sarl
pop
sub
faddl
add
inc
popa
inc
int3
shl
bound
dec
movsl
dec
in
jge
mov
fsts
push
imul
jecxz
mov
testb
aam
out
or
mov
mov
push
call
dec
pop
lock
outsb
sub
jp
outsl
in
lahf
push
push
in
xchg
inc
loope
sub
pop
cmp
or
sub
adc
add
adc
or
mov
sbb
ror
or
bound
arpl
sub
xor
outsb
add
ret
sbb
loopne
gs
ret
inc
sti
jle
dec
push
mov
adc
inc
jae
push
sub
jbe
scas
inc
ret
rclb
in
dec
jnp,pt
lods
pop
pop
mov
push
movsl
mov
cs
and
movsb
inc
or
rorb
mov
aad
xor
push
mov
sahf
mov
xchg
out
push
imul
jns
jae
mov
icebp
lea
fidivrs
dec
loope
testl
cmp
and
shrl
movsl
orb
sub
in
sahf
dec
std
mov
push
mov
icebp
jecxz
jmp
out
icebp
arpl
lods
aas
inc
add
int
mov
mov
popa
int
xchg
test
pop
aam
cmpsl
pop
jno
mov
jp
sbb
fcoml
icebp
and
shr
ret
push
fsubrp
lahf
push
clc
inc
cmp
aad
fldenv
arpl
sub
dec
add
int3
push
cmc
out
movsl
mov
scas
out
pop
mov
je
jge
cs
inc
pop
lahf
lret
sbb
movsb
into
fidivs
mov
pop
sub
imul
inc
add
jl
dec
lock
cli
mov
sahf
das
leave
jmp
mov
add
or
adc
sub
out
movsb
lret
jmp
pop
not
or
pop
popa
mov
stc
movl
push
lcall
cmp
pop
arpl
addr16
icebp
insb
or
push
mov
mov
pusha
aam
and
add
push
inc
lret
stos
inc
cmp
xorb
out
pop
outsl
inc
fisttpll
fwait
xor
cmp
push
or
cmp
xchg
cwtl
in
mov
cld
push
arpl
or
addl
dec
dec
idivb
push
lock
sub
scas
nop
xor
jecxz
stos
inc
rclb
enter
lahf
ljmp
fcomi
out
xchg
shrl
push
cmp
jg
pop
popa
or
dec
test
mov
nop
xchg
xchg
dec
adc
and
push
lcall
test
mov
mov
pop
xor
popf
sbbl
loope
adc
pop
arpl
mov
enter
xor
add
mov
mov
jno
data16
sahf
inc
and
ja
pusha
sahf
or
jecxz
xchg
int3
sub
scas
sbb
mov
movsl
mov
addb
gs
fisubl
pop
enter
in
xchg
sti
aam
adc
xchg
push
jmp
insl
mov
lea
test
hlt
mov
leave
sbb
daa
push
aaa
adc
mov
mov
xlat
sbb
sbb
shll
aam
push
xlat
adcb
mov
mov
gs
push
fistps
mov
pop
lahf
sub
icebp
je
sbbl
ja
je
cmp
dec
rcrl
shr
in
arpl
adc
sub
jl
xor
loope
cmp
gs
xorb
add
pop
cmp
dec
dec
rcll
rcrl
in
sti
cs
sti
push
jb
movsl
loopne
adc
pop
out
test
mov
jae
repnz
repz
push
je
jne
enter
mov
dec
fsts
cmc
cmp
rolb
lret
bound
mov
inc
and
inc
cmp
sti
loopne
dec
and
mov
movsl
mov
mov
push
pop
and
push
or
std
pop
dec
lea
mov
in
pop
mov
iret
fdivp
iret
insb
rorl
testl
pusha
out
fnstsw
nop
pop
mov
cmc
insl
push
xor
cmpsl
inc
sbb
int
out
hlt
adc
jecxz
jno
push
xchg
mov
movsl
cmp
ffreep
ficoms
or
mov
push
pushf
sub
jb
mov
add
scas
mov
cmpsl
push
push
ss
sbb
lods
push
inc
jge
jecxz
loop
mov
fs
fsubl
xchg
imul
xchg
sarl
lea
out
pop
inc
lds
mov
and
jnp
inc
scas
jbe
xor
inc
inc
ljmp
int
cld
inc
mov
push
icebp
iret
out
or
mov
std
aad
jle
xor
mov
push
push
xchg
inc
xlat
xor
shrl
xchg
xchg
jecxz
out
cs
pop
lds
cmp
call
inc
mov
push
sbb
jno
mov
cmpsl
in
clc
or
pop
cmp
pop
fucomi
cmpsb
out
iret
mov
or
imul
add
addr16
mov
pusha
push
mov
lock
mov
mov
push
jl
cmp
lahf
jl
mov
sub
xorl
fwait
shl
dec
jmp
testl
ljmp
aam
add
dec
lods
loopne
or
cmpsb
sbb
jl
ret
inc
pop
repnz
xchg
add
mov
lahf
imul
and
and
or
xlat
outsb
fyl2x
lds
xor
aam
insl
fdivrs
dec
jg
test
sub
imul
pop
movsb
sbb
pusha
cmp
or
inc
fsubrs
sub
pop
scas
add
stos
xor
imul
subb
add
sbb
add
add
jae
cwtl
mov
aam
sbb
jb
and
fs
into
aam
cmp
add
insb
mov
inc
push
and
icebp
inc
stc
mov
jae
and
or
jbe
mov
lea
aam
scas
add
or
fsubrs
xchg
adc
mov
cmpb
cmpl
pop
sbb
cltd
pop
mov
ret
loopne
add
nop
xlat
add
pop
add
or
test
aad
lods
mov
push
mov
xchg
daa
xor
faddl
xchg
jno
dec
mov
sbb
fisttpl
call
jae
ret
jns
adc
push
xlat
pop
sbbb
std
in
das
and
sbb
pushf
sbbl
out
pop
jbe
or
loop
lret
cmp
push
loope
flds
jmp
sbb
jb
mov
mov
add
mov
push
pop
push
jmp
sbb
sub
pop
jp
mov
jno
dec
xchg
das
mov
sbb
sarb
jne
pusha
arpl
movsb
sub
adc
int
sbb
inc
jmp
jb
shll
mov
insl
lcall
lock
movsl
ret
jb
addr16
dec
insl
lds
inc
mov
push
xlat
test
cmp
stos
hlt
fdivrl
inc
imulb
cmp
add
loopne
jno
add
fnstsw
test
addr16
testl
test
and
inc
lds
xchg
cmp
ret
jae
or
jo
jp
in
arpl
test
xchg
imul
jbe
adc
and
or
mov
icebp
mov
jno
imulb
sub
daa
inc
or
mov
mov
daa
jno
push
or
push
lret
sti
xor
in
and
mov
adc
rolb
or
cltd
mov
adc
rcr
into
gs
loope
adc
cs
add
xchg
push
es
repz
push
aam
cmp
xchg
xchg
xchg
push
movsb
adc
lret
sbb
xchg
pop
daa
lods
pop
cmp
imul
adc
icebp
mov
jno
xor
add
lock
pop
jb
add
dec
cltd
pusha
cmp
xchg
mov
push
mov
in
pop
scas
xchg
push
cmp
rcll
jmp
addr16
jo
jle
sbb
dec
lahf
mov
and
movsl
mov
cwtl
aaa
push
in
inc
or
jmp
mov
lret
sub
test
ror
repnz
xor
movlhps
mov
fildll
sarb
push
mov
into
and
jae
pop
inc
ret
sti
rolb
dec
sub
or
lds
mov
repz
mov
cli
jge
xchg
stos
popf
js
xchg
lret
push
inc
data16
lret
dec
shl
jb
pop
sub
jl
xchg
ja
mov
clc
sbb
mov
and
test
xlat
inc
std
insb
out
dec
inc
push
stc
je
jae
dec
sarb
and
and
mov
dec
mov
cld
mov
mov
push
xchg
fisubs
inc
adcl
mov
out
push
cmc
fsubrs
rolb
stc
sti
icebp
mov
inc
int3
mov
adc
xor
outsl
cmp
mov
pop
adc
sub
ret
ja
jns
jp
sub
in
mov
bound
xchg
xor
xchg
push
popa
out
sbb
add
sbb
add
xlat
jne
out
push
adc
mov
jecxz
mov
dec
dec
jp
pushl
loopne
xor
pop
fwait
repnz
push
inc
mov
or
inc
std
sti
imul
dec
cld
dec
std
loopne
test
and
push
pushf
xchg
sub
dec
test
repnz
loopne
pushl
xor
cli
mov
add
cmpb
push
fs
mov
jnp
cmp
mov
xor
in
xchg
mov
scas
mov
js
insb
xorb
inc
enter
add
xor
sbb
push
sub
jbe
lods
mov
loope
or
mov
cmp
mov
ss
notrack
pop
sub
adc
ss
push
cld
call
insl
cmp
push
into
cmpsb
cmp
imul
cmpsb
dec
clc
mov
popf
je
jbe
or
add
sahf
xor
lods
adc
aam
xor
inc
or
fcomps
popa
int
aaa
push
sbb
fcomip
ret
jne
add
loopne
ret
in
xor
jmp
aad
or
in
xchg
sti
or
filds
add
scas
mov
in
in
test
out
inc
bound
mov
push
adc
mov
cmc
adc
insl
iret
int
pop
xchg
test
xchg
aam
xchg
lret
lret
in
cmp
imul
xchg
in
pop
add
and
add
mov
hlt
repz
test
rcrw
xchg
sbb
push
lds
bound
add
adc
iret
cmp
rcrl
pop
mov
gs
imul
and
jge
stos
cmpsl
mov
ret
jle
mov
outsl
pop
outsb
add
inc
das
mov
mov
call
aad
cmp
jbe
dec
scas
mov
add
xchg
or
scas
clc
in
push
fst
xchg
es
loope
xchg
fnstcw
or
push
inc
lods
sub
or
sub
jp
lret
out
push
cmpsb
cmp
mov
cmp
dec
jb
mov
and
cmc
out
mov
rorl
call
call
imull
mov
push
jmp
ret
stos
inc
cmc
inc
or
jg
dec
rolb
cltd
loop
add
push
push
test
sub
sub
push
sbb
fistps
sub
in
ficompl
mov
lods
inc
int
repnz
jmp
push
aad
out
mov
jmp
leave
mov
jmp
sbb
or
mov
ret
pop
test
pop
hlt
scas
sti
mov
ret
dec
lods
mov
pop
cmc
mov
mov
sar
xor
inc
pop
mov
cmp
and
pop
icebp
adc
dec
add
adc
sti
sbb
repz
adc
push
and
vcomiss
std
notl
cmpsb
and
or
repz
xor
mov
adc
enter
cs
pcmpgtw
pop
mov
sbb
daa
sbb
sbb
sbb
imul
lds
cs
stos
and
daa
inc
into
xor
inc
fwait
xchg
push
insb
sub
and
and
xchg
push
lcall
add
repz
inc
lds
nop
sub
jmp
push
outsb
aad
out
mov
or
sbbl
mov
pop
mov
push
add
xchg
fsubrs
lock
add
adc
cmpsl
cld
and
mov
fs
xchg
out
test
testb
xchg
mov
lock
jns
cli
jne
lock
sahf
out
das
popf
inc
pushf
testb
mov
call
dec
jnp
mov
loop
inc
fistl
dec
loop
mov
pop
cmp
xchg
faddl
test
sti
sub
leave
sub
in
mov
out
mov
add
cmp
xor
scas
pop
cli
in
pushf
hlt
push
scas
ret
xor
jne
adc
dec
mov
mov
fs
fildl
push
push
xor
aas
das
mov
imul
mov
dec
jge
and
enter
sbb
rol
sbb
cmpsl
mov
call
jb
and
ret
adc
icebp
sbb
mov
pop
popf
cld
or
pop
int3
pop
sahf
dec
xchg
ret
ja
test
popa
fldcw
imul
jp,pn
les
xchg
inc
loopne
pop
scas
into
add
or
in
push
or
sbbl
or
dec
decl
adc
mov
jp
cmp
std
inc
mov
push
rcll
addr16
cltd
insb
js
scas
dec
xchg
stos
out
push
sti
jae
fsubr
mov
ret
shrb
pop
mov
xlat
mov
lods
push
lret
data16
mov
inc
das
ja
mov
mov
rcrb
sbb
mov
lods
nop
jmp
ds
push
sbb
pushf
stos
insb
inc
sbb
les
xchg
sahf
test
add
stc
in
aaa
in
popf
addb
xchg
xor
addb
arpl
sub
xchg
adc
mov
aaa
decb
notl
insl
sbb
sbb
inc
mov
loopne
dec
ds
sub
push
pop
cld
jne
inc
lret
sti
data16
stos
fwait
mov
sub
stos
sub
fmul
popa
push
nop
das
mov
or
and
aad
dec
xor
lods
sub
adc
int3
enter
into
mov
mov
orb
rclb
in
adc
xchg
xchg
cmp
mov
dec
pop
stos
inc
imul
scas
cmp
int
pop
call
xchg
sub
xor
xchg
aaa
divb
test
sbb
xor
ss
or
test
inc
or
je
mov
cmc
and
in
cmpsb
mov
xchg
add
sbb
push
inc
xor
outsl
lcall
jl
push
dec
and
sub
fldenv
adc
add
mov
outsb
cmp
es
ret
movsb
cmp
int
or
aaa
int
gs
test
es
movsl
aam
clc
or
sbb
cmp
iret
jbe
test
adc
sbb
jns
leave
and
jle
or
outsb
iret
cmp
pop
or
push
sbb
data16
int3
adc
insl
and
test
ret
cmpsb
push
icebp
xor
dec
mov
lret
mov
or
mov
mov
push
pop
jb
insb
in
mov
pop
mov
pop
adc
mov
frstpm(287
mov
inc
adc
xchg
jp
sti
mov
mov
cmp
pop
push
and
enter
loopne
inc
pop
mov
lret
and
mov
outsb
das
xchg
xor
push
add
or
pop
xor
mov
push
cmp
aam
push
fisubrs
inc
in
inc
ljmp
cwtl
test
shrl
jne
leave
out
xlat
jb
mov
rcrb
in
push
mov
push
test
mov
pop
iret
pop
cltd
or
in
enter
and
stos
into
or
pop
pop
sub
mov
push
push
in
mov
testb
aaa
adc
jb
pop
out
lret
sub
fstl
and
and
pmullw
add
add
push
insb
jg
xchg
int3
out
jecxz
mov
test
jbe
pop
pushf
in
lret
shr
or
push
or
mov
mov
mov
fidivrl
mov
mov
xor
dec
sbb
mov
pop
mov
fsts
aaa
xor
mov
cmp
out
adc
sub
aaa
and
lret
out
jb
mov
xor
repz
xor
int3
fwait
arpl
add
xor
mov
push
fnstsw
out
xchg
xor
sbb
movsl
bound
cmp
ret
sub
add
sbb
scas
pop
movsl
pop
jno
dec
je
je
push
mov
xchg
test
leave
lcall
pop
ja
jbe
mov
fisubrs
and
mov
fimuls
js
shll
enter
mov
lds
push
sub
xchg
pop
jb
push
mov
and
pop
xorb
sbb
les
mov
mov
jns
rcll
mov
sahf
push
adc
cmpb
mov
fwait
adc
and
outsb
lahf
add
mov
push
inc
scas
xor
lds
cli
ljmp
and
pop
xchg
jg
std
lea
pop
icebp
filds
leave
lea
inc
and
mov
mov
xchg
mov
aad
mov
or
cmp
sbb
mov
je
idivl
add
cmp
je
inc
fld
rolb
and
xchg
mov
dec
mov
push
fldt
mov
xchg
lcall
dec
xor
add
sub
jp
xlat
mov
adcl
movsb
scas
stos
mov
mov
js
bound
xor
inc
sbb
rcrb
scas
aam
lcall
xchg
xchg
mov
xchg
daa
mov
xchg
add
daa
push
icebp
fst
in
and
pop
insb
daa
jne
mov
push
les
in
xor
scas
fs
fstl
cmp
lock
movsb
or
popf
int
or
pushf
sub
mov
fmul
xor
movsb
sub
add
loopne
or
or
add
std
jbe
mov
push
test
aas
or
pop
fbstp
cld
jnp
jge
and
inc
mov
ds
mov
xor
std
push
ljmp
call
sbb
mov
push
call
or
jne
xor
xchg
arpl
jnp
rolb
je
mov
jnp
sti
jbe
cmpsb
or
pop
and
sub
nop
jg
hlt
movsl
mov
cmp
adc
jne
in
daa
in
xor
aas
cltd
fmul
aad
testb
mov
arpl
out
add
adc
repz
cld
inc
sbb
sub
stos
fbld
mov
arpl
adc
stc
cmp
jns
loop
push
inc
out
stc
and
fstps
mov
test
mov
pop
loop
ret
ret
cmp
jno
cwtl
js
cwtl
jl
shll
cli
or
pop
jg
cmp
xor
cltd
stc
sub
push
xchg
sbb
mov
data16
sbb
add
test
or
testb
cmpl
idiv
sub
push
inc
or
iret
and
jl
sti
int
cld
jns
pop
jecxz
xchg
cmpps
das
rol
adc
scas
divl
sub
inc
fwait
mov
out
xchg
sbb
push
ds
pop
mov
inc
rcll
cmp
xor
and
sbb
movsl
into
cmc
mov
es
sbb
stos
mov
int
dec
idivb
shll
in
inc
and
mov
jae
lds
shrb
sub
xlat
aaa
push
loopne
adc
adc
cld
ds
fldt
or
outsb
es
cmp
cli
mov
pop
jmp
out
mov
fidivl
aam
call
stc
and
push
lahf
jb
int3
lods
inc
in
scas
fstl
xor
dec
pop
or
cwtl
and
xlat
inc
faddp
out
andl
or
idivb
in
hlt
repnz
push
push
das
pop
or
xor
pushf
cltd
cmp
out
inc
daa
mov
xchg
jp
add
lds
vpmaddwd
test
jmp
or
loope
jge
divl
les
sub
lcall
jmp
inc
adc
push
mov
jp
imul
push
test
jg
mov
fdiv
sbb
xchg
inc
daa
lds
lret
testl
mov
cs
aaa
cli
aas
xchg
jno
mov
mull
mov
mov
adc
mov
and
lds
stc
cwtl
jno
mov
popf
std
xor
jnp
fstl
iret
cmpl
movl
push
adcl
mov
dec
addr16
daa
icebp
add
jg
insb
dec
loopne
pop
jle
imul
mov
ror
out
lods
in
pop
or
mov
mov
add
es
dec
jns
orps
sub
mov
xchg
xor
adcb
mov
pushf
sbb
rorb
mov
dec
in
and
xor
and
imul
icebp
or
mov
mov
int
pop
sti
xchg
mov
jo
cmc
sub
out
ror
mov
mov
jb
pushf
fwait
push
imul
adc
inc
add
scas
cmp
clc
mov
inc
iret
lds
fstps
dec
push
sub
cmp
loop
fbld
mov
jge
aas
mov
inc
lret
inc
jnp
jne
sbb
inc
push
xchg
sbb
push
fstpl
xor
push
push
xorl
jne
dec
push
mov
sbb
xor
jmp
popf
adc
ss
xchg
mov
cmp
sub
xor
dec
stc
jmp
loop
jne
and
push
add
xor
xchg
mov
mov
mov
cmpsl
xchg
adc
and
xchg
mov
cmpsl
add
add
cmp
sahf
sub
push
int
call
jae
in
pushf
dec
xchg
adc
into
es
test
xchg
jmp
push
and
out
fwait
cmpsl
and
shrb
inc
jno
mov
pop
adc
pop
ss
nop
in
xchg
pop
dec
mul
ja
and
dec
sub
push
mov
fldt
mov
jo
popa
push
addr16
pop
pop
mov
aad
cmpsb
and
lds
inc
xor
cwtl
sub
jmp
xor
pushfw
push
loope
xor
fsubl
aam
inc
cmp
jae
xchg
dec
mov
lret
bound
add
cmp
and
mov
aad
lock
aas
sub
jo
sti
or
int
add
cwtl
and
push
popa
inc
nop
inc
scas
mov
dec
mov
stos
mov
xchg
aaa
mov
test
ds
aam
out
xchg
je
pop
fs
ret
and
orl
sbb
pop
mov
adc
xchg
sub
push
mov
cltd
fists
das
add
out
iret
les
sbbl
add
xchg
mov
xchg
cmpsb
les
loope
ret
mov
sub
inc
lds
mov
movsl
inc
popa
out
int
mov
mov
fxch
pop
mov
push
mov
and
out
pushf
pop
cmpb
in
cmpsb
sbbl
data16
xchg
jns
push
leave
jle
push
or
jno
xor
push
xchg
push
fisubrl
test
push
sbb
pop
mov
fs
add
in
cs
inc
lds
loop
pop
cld
scas
inc
push
int3
leave
std
mov
mov
mov
ja
aas
cmpb
xor
fwait
loope
rcr
lds
inc
popa
inc
out
test
es
jbe
lods
jp
enter
ja
xchg
jb
imul
ret
xchg
pusha
imul
pop
adc
cmp
dec
xchg
stos
mov
fnsave
jg
int
cmp
dec
arpl
je
cmp
jno
push
xchg
inc
pushl
mov
stc
push
fldl
lahf
repnz
jbe
stos
jg
data16
push
jg
flds
mov
add
xchg
xor
pop
rolb
sbb
mov
push
movsb
inc
mov
ret
inc
cli
lcall
in
push
mov
lret
sti
mov
jo
adc
inc
sub
mov
out
dec
mov
mov
cs
ret
xchg
je
pop
into
es
scas
push
out
loop
ss
in
dec
enter
mov
xor
and
xchg
ficoml
jb
or
cs
sub
into
adc
mov
inc
jo
js
ss
xor
test
pop
and
test
icebp
sbb
sahf
inc
push
dec
outsl
mov
jns
lret
aas
fsubs
jae
push
mov
rcrb
popf
stc
in
push
add
or
fs
mov
push
xor
xchg
adc
inc
stos
jne
movsl
fwait
push
or
xorl
push
mov
aas
into
lock
add
xchg
pop
aad
pop
and
jg
adc
data16
jecxz
xchg
pop
in
das
xchg
test
sarb
push
cmp
enter
fsubrs
pop
and
popa
aaa
jp
cli
dec
and
or
and
or
mov
sub
or
sbb
push
cmp
push
nop
out
add
ja
or
movsb
and
leave
mov
test
lret
pop
jae
mov
adc
daa
pop
adc
mov
cmpsl
mov
sarb
aam
inc
mov
icebp
dec
fwait
sub
xchg
lods
push
xchg
es
ss
pop
push
loop
inc
andl
fdivrs
add
loopne
cwtl
adc
pushf
pop
mov
sbb
sarl
push
clc
lods
out
jp
pushf
popf
push
ljmp
das
lret
movsl
mov
negb
pop
dec
dec
jnp
outsb
pop
add
sbb
enter
sub
cmc
hlt
push
fcomps
rcrb
ficoms
pop
jl
xor
call
sbb
sbb
loop
lods
cs
push
add
sbb
out
in
int3
xor
push
bound
mov
fbstp
xchg
adc
fbstp
xchg
cwtl
pop
or
inc
inc
pop
xlat
xor
mov
movsl
dec
inc
push
cmp
fsub
adc
inc
inc
sbb
mov
push
aas
nop
or
ret
cmp
out
dec
push
fsubr
jb
push
jno
ja
shlb
sub
push
ja
adc
xchg
xchg
dec
incl
xor
jmp
pop
rorb
mov
cmpsb
test
pop
cmp
push
je
out
sbb
ds
sbb
fmuls
mov
sbb
push
aam
cmp
xor
repz
sub
out
jae
mov
loope
or
adcb
dec
daa
scas
mov
loope
jle
adc
out
sarl
add
outsb
sbb
jp
outsb
mov
lahf
jno
in
sbb
mov
das
sbb
mov
lea
sbb
add
push
jbe
adc
xchg
pop
inc
frstor
sbb
cmp
lods
mov
or
pop
inc
notl
insb
ljmp
mov
movsb
dec
lret
cmpsb
cli
cmp
xor
jmp
jg
push
xchg
push
insb
inc
out
sbb
xor
sbb
stc
and
push
fstpl
xchg
sub
repnz
jg
es
adcb
lock
add
adc
push
movsl
mov
sbb
dec
lods
repz
outsb
shlb
das
sub
jl
cli
jne
adc
inc
lret
jno
inc
inc
imul
sahf
divb
pop
inc
lock
mov
jbe
mov
sbb
sbb
sub
addl
lcall
xor
dec
pop
es
add
andps
sub
cmc
sub
scas
push
imul
shrl
mov
outsl
lret
jecxz
adc
cs
in
sbb
push
or
push
add
outsb
push
test
ja
pop
cmpsl
adc
sub
jo
mov
or
push
jbe
xchg
inc
xor
sti
mov
xchg
aaa
lea
test
cli
sub
sbb
int3
ja
jns
out
push
mov
mov
or
popa
insl
push
pop
nop
dec
inc
push
ljmp
shr
jg
adc
gs
jl
fwait
je
mov
out
cmpsl
mov
scas
cmp
or
pop
sti
sarl
sbb
fs
ljmp
mov
pop
jmp
xchg
imul
pop
insb
pop
add
cmpsl
fwait
mov
fs
out
jnp
dec
or
divb
mov
mov
rorb
mov
mov
sahf
pop
cli
sbb
shlb
fucom
pop
insl
push
push
das
sub
mov
pop
cld
xchg
jae
cld
push
add
insb
mov
jmp
sbb
xchg
lahf
lret
or
mov
std
je,pn
mov
jae
or
push
hlt
sbb
mov
mov
dec
xchg
insl
cmc
pop
dec
mov
gs
cmp
bound
outsb
jl
xchg
add
std
fs
xchg
out
js
fwait
jne
xchg
sbb
and
or
insb
enter
mov
jecxz
sahf
adc
leave
xchg
mov
cmc
add
xchg
and
stc
dec
inc
lods
and
rolb
aas
cmp
pop
push
repnz
out
int3
mov
cltd
repz
xchg
push
rcll
aas
cmp
jo
mov
cmp
fstps
or
cmp
push
xor
je
call
add
insl
mov
in
fwait
mov
lods
ljmp
pusha
ljmp
pusha
int3
pop
pop
iret
lods
xchg
shll
imul
pop
mov
into
loope
lea
mov
sahf
mov
in
sti
push
lods
mov
ret
fbstp
dec
mov
jecxz
stc
mov
push
ret
adc
cmp
pop
rol
push
jge
push
call
pop
gs
test
loopne
sahf
adc
cli
xchg
mov
add
dec
pop
les
popa
movsb
mov
rol
add
sub
iret
data16
or
in
xchg
loopne
or
in
mov
mov
push
cmp
ret
leave
movsl
and
cs
repz
adc
ret
mov
jl
jmp
hlt
test
popa
pop
cmpb
enter
call
mov
ja
data16
xchg
or
scas
and
mov
jmp
pop
loopne
mov
stc
dec
sar
mov
lcall
mov
xchg
mov
or
ficoms
in
dec
cmp
xchg
jmp
xchg
mov
scas
stc
jo
mov
addr16
dec
movsbl
jmp
sbbl
into
movsl
popf
pop
scas
inc
mov
rorl
adc
xor
daa
lret
out
sbb
ja
test
notl
mov
int
or
int3
push
in
sbb
add
cmp
push
mov
mov
ret
out
mov
or
dec
cld
ds
cmpsb
dec
insl
rclw
pop
xor
arpl
test
cmp
adc
jl
loopne
outsb
push
lods
inc
test
mov
popf
loope
fidivl
inc
sbb
popa
xor
lret
ror
cli
lret
mov
add
pop
dec
cmovae
xchg
in
mov
inc
outsb
rorb
xlat
imul
or
sub
push
jo
mov
push
push
rclb
push
pusha
mov
sbb
mov
ret
sbb
jecxz
fisubl
mov
das
sbb
int3
addr16
gs
pop
mov
add
jl
enter
mov
pusha
mov
ljmp
xor
cs
dec
xlat
sbb
mov
push
ja
and
adc
inc
push
out
popa
xor
cwtl
mov
push
imull
pop
mov
mov
lahf
pop
sub
loope
mov
sub
ret
mov
push
jp
pop
dec
ficoms
out
inc
or
jg
jg
repnz
and
sar
inc
mov
pop
cmpsb
pop
mov
test
mov
xchg
lock
mov
adc
xchg
aas
fwait
repz
and
das
add
pop
jnp
lea
sti
mov
push
push
cltd
xor
adcb
insl
popf
lods
pushf
dec
mov
jbe
lds
clc
mov
mov
jl
xor
mov
leave
out
js
ljmp
fdivrs
add
insl
je
lea
arpl
dec
aas
cwtl
push
or
pop
cwtl
movsl
movsl
cmp
cwtl
sbb
push
mov
pop
int
dec
pop
rorl
xchg
clc
inc
out
lock
dec
arpl
mov
les
add
ljmp
push
test
test
dec
lret
scas
mov
adc
lret
sbb
inc
daa
sub
push
in
mov
push
inc
push
mov
aam
cli
push
pop
enter
shrl
shlb
jecxz
mov
inc
stos
inc
js
inc
xchg
mov
mov
fcomps
sahf
cmc
pop
gs
pop
bound
mov
add
cmp
xchg
push
and
mov
test
ficompl
push
ja
jmp
movsb
push
sahf
xor
cmc
lahf
cmp
lds
rorb
movsb
inc
popa
into
gs
jge
dec
aaa
fucomp
js
push
ds
cmp
mov
push
imul
lods
inc
ss
sbb
push
mov
or
int
negl
pusha
std
push
inc
aas
cmp
xchg
addl
lea
add
pop
dec
out
push
cmc
xchg
jnp
loope
push
test
sub
mov
fbld
mov
dec
inc
stos
ret
fsubrl
insl
inc
xchg
jmp
and
cmp
jge
mov
fldz
test
rcll
sbb
dec
popa
je
pop
scas
inc
jnp
xchg
or
sub
sub
jo
dec
dec
jmp
scas
xlat
jns
adc
ss
arpl
push
ss
movl
mov
pop
bound
xchg
and
adc
hlt
push
cmp
add
add
add
mov
test
push
xor
int3
mov
std
jg
mov
mov
cmp
cmp
dec
lcall
or
in
add
fdivrs
xor
jb
sbb
inc
cmp
xchg
daa
jecxz
fmull
mov
push
dec
lahf
or
pop
imul
loop
stos
repz
push
stos
and
push
je
or
ret
push
fs
ja
push
xor
int3
pushf
cld
and
in
jecxz
sbbl
add
insb
jp
rol
ljmp
mov
sbb
mov
cmc
cmc
fcmovb
jae
movsb
push
ret
rorb
inc
dec
dec
jmp
lock
pop
jge
repnz
cmpsb
jno
or
push
das
cmp
inc
jne
fistps
cmp
jl
inc
xlat
rcrl
enter
lock
shl
movsb
aaa
leave
adc
js
mov
loop
fcmovnu
mov
int3
stos
ss
xchg
and
mov
mov
incl
pop
rorb
fildl
and
pushf
enter
cmp
repz
push
mov
test
idivl
sub
pop
pop
mov
sahf
xor
test
inc
fisubrl
lret
popa
clc
cld
lock
push
lret
push
xor
bound
dec
movsl
mov
dec
aad
jnp
insb
push
fcomps
lea
jne
imul
jnp
fwait
xor
orb
ljmp
popf
in
mov
ljmp
mov
int3
rorl
inc
xchg
cmp
dec
scas
gs
fildll
scas
fnsave
adc
adc
out
sbb
lcall
js
inc
lahf
pop
dec
add
push
jecxz
pop
dec
bound
dec
sub
pop
jo
loop
negb
daa
dec
imul
ret
sbb
jb
movsb
cmp
loope
inc
div
cmp
addr16
sub
sbb
jae
mov
stc
nop
push
push
fisttpl
faddl
xor
sbb
xor
or
inc
push
cmpsb
xor
xlat
mov
sub
xchg
dec
in
mov
sub
pusha
xchg
inc
fcomps
addb
dec
addr16
je
jo
stc
mov
lret
sti
sbb
xchg
into
xchg
push
mov
scas
sbb
lea
pop
scas
cmp
and
outsb
xlat
jmp
pop
mov
sahf
fs
loope
and
jb
and
cmp
push
fdivrl
rorl
or
fs
sub
testl
inc
mov
lret
bound
ljmp
add
outsb
stos
call
or
xlat
call
in
cmp
push
int
in
fsubr
in
lock
jmp
popa
icebp
enter
ds
hlt
pop
mov
dec
xchg
sbb
lahf
sub
jnp
ret
and
addb
mov
pop
push
call
lret
mov
enter
cmp
repz
lock
and
inc
bound
nop
and
and
pop
pushf
xor
sahf
add
jb
mov
add
xchg
mov
dec
push
cmpsb
mov
cld
fnstcw
push
inc
mov
jmp
jle
icebp
insb
ficoml
push
add
fs
ror
mov
out
pop
loopne
in
adc
xchg
push
insb
add
mov
mov
mov
stos
mov
movsb
jo
push
in
and
push
fstps
dec
push
push
mov
lahf
pop
and
fsubrl
pminsw
jae
pop
cmp
jae
outsl
loop
mov
sub
jno
push
mov
adc
popf
cmpsb
into
mov
or
sub
es
inc
ret
adc
xor
mulb
add
or
cmp
int3
sbb
xor
mov
leave
inc
xlat
xchg
fimuls
mov
call
mov
cmp
mov
sarl
in
add
mov
in
push
xchg
mov
bound
xchg
cs
inc
dec
and
sbb
dec
out
leave
int
je
sarb
lret
dec
sbb
xchg
aam
gs
adc
inc
or
mov
leave
mov
scas
cli
and
dec
and
sahf
shlb
fdivp
fstl
cld
sarl
fsubrl
or
and
jmp
out
xor
es
push
icebp
dec
cli
pusha
push
mov
pop
inc
sbb
xor
push
hlt
in
dec
inc
gs
sub
lret
mov
xchg
orb
test
loope
add
lahf
and
push
or
icebp
cmp
out
add
xchg
push
dec
mov
cmpsb
jg
call
cmp
int3
popa
pop
adc
lret
sbb
push
arpl
in
xorl
outsl
xor
or
not
jmp
adc
mov
and
addr16
movsb
push
or
cs
fmull
xchg
ljmp
loop
and
pmulhuw
lret
imul
mov
fwait
aaa
cmpsb
adc
push
inc
mov
mov
aam
out
and
repz
imul
push
xchg
test
pop
xor
dec
push
lea
jo
cli
xor
filds
out
cmpsb
or
pop
lds
cwtl
repnz
lcall
cwtl
popf
cmpsl
mov
mov
mov
sbb
insb
or
push
std
sbb
pusha
or
sbb
mov
fldcw
imul
outsl
cmp
das
fst
cmp
loop
loopne
stos
pushf
xchg
push
add
xor
pusha
xchg
stc
js
dec
incb
leave
rorb
inc
sbb
add
xchg
or
and
jb
add
outsb
jp
sub
dec
pop
jge
imull
adc
xchg
xor
push
ljmp
cmp
fistpl
mov
sbb
test
out
bound
cmpsb
push
aas
jne
int3
or
cwtl
testb
cmp
pusha
fsubrl
sub
or
jp
out
cmc
pop
mov
cs
mov
aam
jle
pop
into
pop
lret
adc
into
jnp
lods
out
xchg
cs
mov
mov
scas
out
es
sub
pop
inc
sbb
cmp
xchg
dec
lock
ficompl
loope
cld
fldt
dec
xchg
cwtl
stos
push
mov
inc
fildll
dec
data16
jnp
add
dec
and
out
ds
mov
out
add
jne
mov
cld
mov
sahf
into
insb
cmpsl
jle
shlb
or
mov
sub
sub
mov
jnp
adc
xor
lret
cwtl
icebp
dec
out
int3
inc
pop
roll
mov
clc
aas
call
dec
add
int
push
lea
clc
sbbb
cld
outsl
mov
or
jmp
cwtl
ficompl
or
call
xchg
lret
cs
pusha
imul
ret
pop
and
mov
adc
mov
mov
mov
mov
sub
lds
dec
jnp
mov
addr16
mov
aad
adc
int3
cmpsb
sub
pushf
jl
sbb
sub
lret
mov
mov
call
popa
jns
addr16
inc
cmp
test
stos
mov
dec
ror
jo
loop
cmpsl
ljmp
adc
stc
sbb
push
in
insb
mov
lcall
xchg
mov
and
push
jnp
lahf
and
or
out
fistpll
ret
fldl
les
stc
int
adc
push
mov
mov
dec
jmp
push
mov
mov
dec
ret
cmpb
and
pop
sbb
lcall
sbb
lds
push
sub
popl
das
dec
lods
pusha
cmp
lods
jmp
or
and
nop
cmp
cmpsl
enter
sarl
and
repz
jno
pop
movsb
mov
aad
ror
test
cmp
pop
rolb
pop
push
fwait
jno
lods
mov
dec
sti
mov
js
lret
xchg
dec
in
dec
push
call
iret
fisubrs
push
push
mov
movsb
aad
adc
jmp
jp
push
or
add
sbb
fcmovb
in
sub
push
dec
xchg
sub
ja
mov
mov
and
add
clc
or
add
sahf
sub
ror
sub
stos
pop
loopne
xchg
push
lods
inc
test
add
lret
cld
cli
sbb
daa
sub
loope
dec
inc
xchg
hlt
fists
fstpt
jbe
aaa
add
cmpsb
mov
push
lock
out
xchg
hlt
insb
xchg
out
sbb
imul
les
bound
add
test
xor
xlat
scas
and
push
nop
dec
dec
ret
xor
ficoms
dec
nop
cmp
loop
push
and
jecxz
inc
popa
loopne
test
sti
fwait
sbb
cs
pop
jbe
pop
sbb
test
jl
nop
js
test
jb
enter
dec
es
stos
dec
rcl
rolb
add
dec
scas
mov
pop
jl
push
and
jnp
or
scas
push
int3
add
dec
push
in
aaa
cwtl
cwtl
xchg
fcmovu
xor
xor
push
sub
stc
stos
mov
out
mull
push
and
xchg
or
add
popa
mov
mov
or
push
mov
negl
aaa
push
cmp
stos
pop
ds
stos
cs
mov
out
push
and
cmpsl
mov
xchg
fstps
pop
pop
push
out
pop
aad
das
mov
push
cld
fsubs
loop
int
das
testb
out
lret
add
and
mov
mov
cmp
and
jle
push
xor
fstpt
bswap
insl
mov
stos
leave
sbb
cwtl
sub
iret
in
cmp
jb
nop
add
adc
das
rcrl
mov
ja
dec
jnp
fnstcw
pop
shl
inc
into
ljmp
xchg
xchg
jle
fadd
inc
repz
hlt
or
rclb
inc
mov
xchg
aam
jl
lret
cmp
mov
fwait
push
icebp
xacquire
xlat
or
pushf
mov
mov
mov
mov
push
inc
add
pop
and
in
movsb
cmp
adc
fldcw
lret
pusha
ss
loop
mov
pop
push
andl
fcoml
jbe
cmp
test
cs
into
dec
sbb
repz
int3
arpl
jmp
dec
xchg
mov
repz
data16
mov
jne
test
test
inc
js
out
std
into
cmp
and
inc
das
aas
sbb
lods
push
pop
mov
mov
push
cmp
pop
lret
lret
ror
cmp
adc
or
aaa
in
add
inc
mov
out
push
scas
imul
neg
cmpb
imul
mov
imul
mov
cli
mov
mov
pop
lcall
xchg
pop
push
loop
push
dec
shll
js
or
sbb
add
data16
and
mov
push
aas
or
dec
dec
xchg
mov
xchg
mov
out
mov
xchg
push
stos
add
aas
mov
pop
dec
test
cs
push
or
lds
js
inc
push
lahf
fistl
push
ljmp
jno
xchg
or
jns
mov
mov
rcrl
xlat
mov
jmp
out
xor
cmp
aas
ret
xchg
dec
sbb
popa
or
cmp
xchg
or
xorl
add
test
movsb
sbb
movsb
adc
testl
jae
sbbl
mov
mov
and
dec
jecxz
jbe
clc
mov
lret
icebp
les
mov
xlat
lea
xor
mov
lret
mov
push
sub
mov
bound
sub
pop
and
mov
fs
fucomi
inc
cli
ficoms
aaa
jmp
xchg
sbb
imul
scas
push
dec
pop
mov
mov
push
fs
and
ja
mov
jecxz
enter
jp
mov
inc
fdivs
adc
push
push
addr16
aas
scas
ljmp
iret
movsl
cmp
int
mov
stc
or
jmp
sbb
push
mov
cmp
mov
popf
lods
int
xchg
jnp,pn
aam
out
loopne
cwtl
pop
scas
inc
nopl
mov
adc
cmpsl
inc
xor
sub
and
in
jp
popa
push
movhlps
push
imul
enter
subb
jmp
mov
sbb
add
call
xchg
outsl
daa
andl
pop
mov
push
ljmp
popa
jl
test
bnd
mov
movsl
js
pop
leave
pusha
pop
cli
or
mov
cmp
mov
cmova
jnp
push
test
sub
mov
mov
jp
fbstp
cmpsl
add
cmp
cltd
cmc
inc
dec
ret
fwait
mov
mov
stos
out
jo
ja
xor
push
stc
aaa
loope
inc
sahf
pop
cmpsb
iret
scas
aas
mov
dec
in
mov
lock
ss
sti
and
xchg
push
add
mov
push
push
stc
rolb
out
jl
jmp
push
lods
xchg
add
lock
into
insb
rcr
out
popf
xor
mov
push
repnz
dec
cmp
mov
imul
or
dec
es
int
mov
xor
ss
mov
loop
nop
clc
pop
add
add
dec
mov
cmp
push
mov
sbb
push
adc
cmpsl
pop
cmp
pop
xlat
mov
lret
lods
sbb
fistl
popl
inc
mov
lret
jecxz
cwtl
mov
cmpsb
xchg
sub
mov
shll
mov
mov
pusha
inc
les
stos
mov
movsl
lods
add
testl
sbb
push
fcoml
xchg
pop
mov
lods
push
sub
mov
loope
ja
icebp
jle
xor
mov
or
xor
adc
jp
xchg
nop
xor
sub
repz
stc
nop
jp
cli
loope
mov
outsb
arpl
cmpsb
mov
dec
lods
add
push
dec
cmp
jp
jns
sbb
dec
lahf
or
xlat
inc
pop
or
add
xor
pop
pop
cmc
dec
enter
jns
cld
or
arpl
dec
pop
adc
stc
jbe
fdivl
xor
repz
push
arpl
xchg
pop
test
andl
push
and
pop
cmp
mov
out
mov
xchg
xor
fisubs
jecxz
fmull
rcll
ss
int3
movsb
aam
dec
pop
in
mov
dec
xchg
cmp
adc
xchg
sub
mov
clc
sbb
int
fsubrp
divb
lods
add
and
rorb
in
sub
into
sbb
mov
adc
je
pushf
lahf
cmp
inc
fnstcw
dec
dec
scas
push
popa
adcl
cmp
iret
xor
push
xchg
add
mov
jge
iret
cmpsl
cmp
adcb
xchg
jge
stos
inc
push
jmp
xchg
out
fsubrl
mov
stos
inc
and
xor
xchg
enter
testb
mov
mov
jb
add
or
push
pop
jge
mov
jg
inc
fadds
out
xorl
push
or
sti
cmp
lock
ret
sti
mov
loop
pop
push
cmp
or
loope
movsb
ret
lcall
adc
and
popf
jg
movsb
sub
sub
mov
xor
xchg
push
lds
jecxz
sbb
mov
and
sub
pminsw
inc
cltd
adc
inc
sub
pop
rcr
mov
psubd
pmaxub
das
lea
scas
mov
fimull
fwait
push
sub
bound
dec
in
xor
and
push
subl
inc
ja
sbb
push
sbb
xchg
or
push
mov
in
adc
cmp
ss
mov
test
mov
sub
xchg
int3
mov
in
movsb
xor
divps
or
pop
imul
lds
lds
test
imul
push
pusha
sahf
cmpsb
into
add
rcrl
add
movsb
rcr
push
lods
lahf
sbb
idivb
xor
shll
popa
fbstp
clc
std
xor
test
add
std
push
sub
inc
aas
push
icebp
add
hlt
xchg
movsl
icebp
fwait
mov
xchg
sub
mov
ret
or
mov
sahf
push
mov
xchg
sub
sbb
add
sbb
and
cmp
mov
je
sub
add
cmp
dec
cld
cmp
mov
push
cmp
push
dec
aaa
test
mov
outsl
cmpsl
adc
rcll
lea
inc
push
popl
shl
xchg
jl
call
push
hlt
adc
xchg
je
add
jg
ss
rorl
js
jle
sbb
pop
xchg
mov
mov
mov
sbb
push
cmp
fs
push
lock
loopne
cmp
mov
sub
pop
mov
popf
sub
or
ret
xor
rolb
fs
pop
cld
ds
psllq
add
mov
pop
or
out
iret
into
xchg
xchg
fdivs
outsb
int3
lret
pop
out
inc
dec
cmp
int
fidivrl
mov
test
cmp
push
mov
or
jns
mov
dec
aaa
adc
sbbb
aas
setne
dec
lock
sub
in
aad
ret
sub
cmpsl
xlat
xor
popa
int3
aad
and
ret
jnp
adcb
sbb
dec
mov
loopne
push
mov
sbb
bound
cmpsb
cmp
rcll
ret
cmp
adc
std
mov
lret
xchg
cmpsw
aas
push
sub
loope
lea
cli
or
mov
stc
fwait
pop
icebp
int3
add
stc
test
out
sbbb
mov
and
sarl
inc
sbb
jge
les
sub
pop
jno
dec
popa
popa
xchg
scas
gs
or
pop
aaa
andl
je
mov
daa
out
js
mov
mov
pop
icebp
stc
rcr
out
lret
addr16
popf
icebp
int
es
push
sti
xchg
mov
push
mov
sbbl
test
loop
cmp
mov
push
test
shlb
js
cmp
pop
and
into
daa
ret
fnstsw
xor
fwait
or
scas
adc
and
mov
arpl
xchg
stos
mov
and
xchg
fcmovne
repnz
fidivl
mov
jl
cld
sub
push
inc
jnp
xchg
sub
sub
ret
popw
test
adc
mull
xor
into
xchg
jns
fnsave
add
es
push
jo
xor
mov
jnp
fidivl
add
repnz
cmp
js
mov
add
cs
inc
pop
lahf
or
outsl
push
stc
or
lods
addr16
aad
cmp
pop
add
adc
and
jb
xchg
iret
std
pop
bound
sahf
shrl
call
in
pushf
xchg
mov
lret
cmc
int3
pushf
inc
enter
arpl
out
popa
into
scas
or
ss
sti
mov
stos
dec
or
fs
ljmp
push
shrl
ret
outsl
fcomip
cmpsb
insl
test
adc
lahf
js
and
mov
outsl
push
inc
cwtl
push
ljmp
mulb
adc
sub
hlt
mov
cmc
das
xor
sahf
lahf
js
sarl
cmpsl
imul
lods
mov
jecxz
sbb
mov
loop
imul
add
imul
pop
xor
idivl
fcomps
test
xchg
sub
ret
xor
xor
out
rcr
cmpsb
push
pop
push
imul
or
or
fcmovnb
stos
stos
int3
mov
and
test
pop
pop
mov
sahf
jbe
sbb
sbbb
push
and
mov
push
xor
clc
or
mov
pop
hlt
vcvtdq2pd
fcompl
shrl
xor
dec
push
std
mov
jmp
std
and
shlb
pop
jmp
into
pop
loopne
inc
cmp
in
imul
or
push
inc
call
xor
ljmp
pop
xchg
mov
fsubrs
jnp
leave
sub
adc
cli
xchg
sub
mov
fistpl
sarb
sbb
add
in
push
push
ret
xchg
movsl
push
pop
stos
rcrl
dec
adc
sbb
jge
push
sub
mov
push
inc
pop
xlat
cmc
jp
sub
xor
jg
pushf
sbb
inc
mov
adc
cli
and
sbb
jp
orl
jnp
adc
sbb
fnstsw
adc
test
fdivl
repz
jne
int3
fdivrs
das
xor
inc
lock
push
lods
cmp
lods
shrl
mov
icebp
dec
pop
loopne
jb
jnp
repz
ss
dec
test
int
push
push
push
add
insl
fmull
cltd
jle
hlt
mov
sbb
lcall
es
mov
mov
dec
mov
hlt
les
pop
ficoml
out
xchg
dec
out
mov
outsb
add
pop
push
out
or
jmp
jmp
rorl
xchg
pop
fmull
cli
das
cmpsb
or
shll
push
movsl
xchg
sub
pop
shl
repz
push
int3
push
imul
out
jg
loope
dec
pop
add
lock
cmpsb
js
xchg
jg
or
sti
and
add
int
cmpl
lock
and
call
iret
push
adc
mov
or
adc
xchg
mov
mov
data16
inc
jns
cmpsb
imul
cmp
or
sub
loopne
xchg
cmp
mov
dec
les
dec
daa
cmp
jl
scas
lods
repz
addr16
and
jne
add
js
cli
cld
outsl
enter
mov
cli
inc
inc
shrb
movsb
iret
lock
dec
pop
and
inc
xchg
sub
outsl
adc
in
arpl
mov
mov
mov
fimull
mov
push
cmp
gs
inc
pop
imul
jno
inc
xor
mov
pop
inc
push
enter
lea
dec
idivb
cmp
int3
sub
cmp
dec
repnz
inc
enter
add
mov
enter
jae
in
lret
xor
or
fnstsw
mov
pop
lods
enter
into
sahf
in
dec
mov
jle
mov
in
call
sub
sub
cmc
pushf
or
mov
jnp
push
inc
into
fcoml
adc
scas
stc
jb
inc
inc
lock
push
jmp
fstpt
jb
ja
stos
rcrb
push
icebp
rol
inc
mov
mov
or
scas
mov
add
mov
push
in
cmp
in
mov
push
mov
lock
incl
adc
out
mulb
enter
jae
lods
int3
xor
mov
out
xor
add
xor
dec
popf
mov
loopne
adc
dec
inc
adc
and
mov
adc
mov
out
addr16
jns
lods
divb
sub
pop
lcall
aad
mov
inc
testb
test
int3
mov
shrl
xlat
sbb
and
nop
mov
or
out
push
fbstp
mov
push
mov
xor
dec
aaa
mov
pop
in
jle
cmpsl
ss
into
popa
pushl
lret
fdivl
leave
out
push
push
mov
push
push
fstps
cs
shl
je
inc
mov
adc
xorl
sub
inc
push
dec
pop
lea
movsb
jnp
mov
sub
repz
imul
inc
insb
icebp
pop
stos
fstl
call
push
or
js
mov
or
pushf
mov
xchg
ljmp
loope
movsl
scas
inc
xlat
sbb
push
jb
mov
ds
mov
rcrl
scas
add
mov
addb
pop
sbb
push
test
add
push
ss
jne
mov
gs
mov
aas
clc
cmp
aaa
push
inc
fsubrl
adc
adc
popa
xor
add
fidivl
inc
pop
in
insl
insl
sahf
outsl
cld
pop
adc
add
lcall
xor
scas
pop
push
insl
push
pop
std
daa
cli
test
in
frstor
loope
jb
jbe
xchg
cmpl
mov
cmp
lods
fistpl
mov
sbb
xor
cmp
sbb
jbe
mov
data16
insb
add
test
repnz
mov
inc
adc
scas
lcall
call
js
sahf
lock
cltd
inc
fld
cmp
lods
repz
xlat
add
and
fdivs
push
push
stc
adc
gs
inc
insl
pop
ljmp
push
repz
popa
lret
mov
push
jo
aaa
cmp
lods
fsts
mov
mov
push
out
push
insb
int3
shll
sbb
pop
mov
jmp
and
mov
dec
cmc
dec
mov
aas
dec
repnz
icebp
sti
mov
or
pusha
adc
inc
cmpsb
lret
inc
ss
push
push
push
int3
xor
in
ss
outsb
push
add
inc
add
lds
dec
ss
sub
rcrb
movb
or
addr16
pusha
sbb
fidivl
adc
fsubrl
inc
jns
jns
cmc
push
mov
fdivr
ja
and
outsl
xchg
rolb
lret
xchg
pop
sbb
nop
pop
fsubrl
les
dec
and
insb
add
sbb
iret
mov
mov
sahf
sti
xchg
shlb
fcoms
and
addb
test
mov
adc
out
je
mov
push
jp
loop
push
dec
pushf
jg
mov
xorb
das
pop
mov
aas
xor
ja
cmp
add
jb
mov
jge
jge
xor
test
int
mov
xlat
ds
in
mov
repnz
adc
push
fwait
cmc
mov
or
icebp
sub
adc
pop
leave
bound
roll
xor
movsl
aad
lds
mov
lret
pop
imul
push
and
adc
fwait
and
xor
cwtl
arpl
pusha
stos
fidivl
lods
in
mov
js
shrb
xchg
lods
movsb
pop
mov
loopne
fsubp
clc
and
insl
adcl
inc
cmp
les
inc
jg
arpl
adc
and
add
cmc
pop
push
movhps
adc
dec
lahf
nop
dec
stc
fldt
sub
mov
outsl
push
mov
pusha
rolb
inc
inc
aas
and
adc
push
in
sbb
je
jns
rcrl
push
sti
cltd
mov
iret
aad
adc
or
mov
push
cmp
mov
cmp
and
dec
mov
dec
inc
and
mov
into
xor
in
mov
cmp
jno
xchg
montmul
cmpsb
ret
stos
mov
lods
jmp
shrb
stc
add
lret
jge
push
sahf
push
push
shlb
add
scas
daa
outsl
pop
jl
scas
add
push
mov
inc
stos
lods
inc
testl
mov
inc
test
add
leave
pop
sub
xor
into
popf
xor
jo
movsb
rcrb
insb
iret
add
repz
xor
aaa
push
in
add
mov
sahf
sub
pusha
sbb
ss
int
push
loope
fisubrs
imul
push
mov
sub
sub
add
es
mov
push
jmp
lahf
negl
jle
out
mov
movsl
xor
mov
push
jg
fsubrl
mov
cmc
mov
xlat
fwait
sti
xchg
xchg
jnp
xor
cmp
or
cs
or
cmp
sbb
out
xchg
sbb
pop
cmp
dec
vcvtss2sd
pop
lahf
jl
nop
bound
jg
pop
fimuls
mov
mov
adc
push
stos
mov
adc
sbb
pop
xchg
enter
sbb
mov
pop
add
xor
xor
inc
test
divl
sub
ret
hlt
and
push
pop
adcb
pushf
fsts
pushf
sahf
mov
stos
testb
mov
sub
xchg
je
pop
push
sbb
xor
gs
and
inc
test
outsl
movsl
inc
stos
add
dec
adc
jp
fnstenv
jg
adc
xchg
stc
push
dec
and
mov
jecxz
fcompl
adc
repz
fisubrs
enter
ljmp
sarl
cs
mov
jb
pop
scas
jp
and
rcrb
or
mov
adc
cwtl
inc
inc
scas
push
out
push
inc
fiaddl
std
cs
cmpsl
loopne
push
int3
rcrl
sbb
fnstsw
mov
sbb
lcall
add
dec
icebp
dec
je
pop
data16
push
mov
push
push
jne
or
mov
andb
cmpsl
stc
xor
xchg
stos
sti
cs
pusha
mov
subl
sub
inc
pop
sub
mov
sahf
xorl
cmp
xchg
stos
push
ja
pop
aaa
jb
push
mov
mov
arpl
inc
xchg
adc
sub
lds
mov
call
sti
lret
scas
mov
mov
jle
push
iret
inc
sbb
iret
ficoms
mov
inc
adc
add
rcr
jnp
xchg
test
jg
or
or
dec
xchg
mov
adc
pusha
imul
jecxz
fwait
icebp
inc
mov
pop
lods
popa
dec
bound
dec
popf
jo
inc
scas
stos
and
pop
dec
les
mov
cmp
test
hlt
mov
mov
sbb
pop
add
push
push
dec
ja
lcall
mov
jb
and
add
inc
push
popf
notl
fimull
sbb
daa
lods
dec
push
ljmp
call
sbb
xchg
add
fwait
push
fnstsw
ds
aaa
add
out
pushl
fsubs
pop
push
mov
mov
or
rcll
repz
pop
adc
ds
test
inc
dec
pop
fmul
xchg
cmp
cmp
out
test
push
fildl
aad
cmp
aaa
jb
movsb
insl
in
adc
mov
ds
sbb
iret
int3
fs
mov
cmp
or
or
inc
pop
repz
in
jno
sub
pop
xchg
cs
or
sbb
cli
loopne
cli
push
lcall
inc
arpl
dec
popa
xchg
loopne
adc
jns
and
inc
out
cmp
jae
pop
ljmp
push
leave
mov
insl
data16
nop
mov
mov
add
aad
aaa
cmp
cmp
icebp
adc
jno
sbb
pop
fbld
xor
inc
pusha
cmp
add
xor
or
mov
jo
lret
xchg
cmpsl
ss
mov
leave
or
lcall
sub
xchg
pop
add
xchg
imul
repnz
push
mov
ret
in
cltd
clc
mov
jns
sbb
pop
inc
mov
mov
stos
adc
stc
jno
stos
es
pop
icebp
ret
dec
ss
mov
adc
inc
repz
pop
fcoml
sub
sti
or
sub
decl
xchg
xchg
cld
sti
fwait
xor
out
lods
repnz
neg
jg
fsts
out
bndstx
scas
lea
leave
adc
push
adc
xchg
jb
ljmp
jno
jecxz
negl
jne
repz
sbb
dec
cltd
pusha
jns
pop
in
lea
jns
js
scas
scas
int3
cld
mov
xchg
mov
mov
adcl
imul
dec
pop
cmp
scas
repnz
hlt
adc
mov
xchg
js
jo
pop
das
xorl
or
push
ficoms
or
push
mov
fsubrp
pop
inc
outsl
or
shrb
sub
mov
rolb
adc
xchg
clc
fcmove
dec
dec
jb
mov
adc
and
shlb
fiadds
mov
scas
mulb
shr
out
add
push
es
xlat
jnp
jae
lret
inc
inc
push
pop
sbb
cli
pushf
jp
jle
jnp
ljmp
xchg
add
cmp
cmp
fmuls
mov
popa
xor
push
xor
mov
in
or
push
dec
out
jno
in
fiaddl
sti
mov
jecxz
lock
mov
mov
fs
xchg
jecxz
fwait
ret
dec
xchg
xor
jmp
push
adc
ret
loop
dec
push
daa
add
scas
out
stos
sub
cwtl
sbb
dec
cld
push
in
push
jae
push
bound
add
mov
mov
dec
fldenv
push
mov
rcrb
lret
outsb
xchg
or
and
ja
push
mov
jb
movsb
sbb
nop
mov
add
aad
mov
fistpll
lret
adc
lock
pusha
cmp
aas
push
orl
pop
jbe
and
mov
and
mov
mov
adc
roll
jp
push
rcr
or
sar
adc
pop
lods
sbb
jo
pop
or
pop
adc
mov
pop
test
stc
push
dec
jmp
cmp
fwait
stos
mov
shll
mov
loop
in
es
inc
leave
pusha
ret
aad
xor
mov
popf
mov
fwait
and
pop
cmp
and
jecxz
jno
push
pop
in
pop
jbe
mov
mov
inc
sbb
mov
andl
add
es
cmp
fnstsw
pop
fsubrp
jne
xchg
jb
push
mov
mov
test
cmpsb
adc
nop
cwtl
xchg
mov
js
hlt
addr16
pop
jle
ja
into
sbb
rorb
ds
inc
pop
or
pop
rorb
je
shlb
push
jo
fs
lcall
jne
inc
imul
roll
adc
stos
mov
aaa
dec
push
lock
jg
in
pushf
dec
out
out
cmp
xchg
stc
or
mov
in
adc
push
fists
shrb
and
xchg
je
xchg
dec
mov
daa
cmp
add
jne
push
mov
mov
scas
dec
sub
data16
cmc
cmpsb
lock
dec
dec
rcrl
cmp
xor
pop
mov
push
sub
cmc
mov
imul
fs
sbb
mov
pop
cmp
add
lods
inc
add
ret
dec
loop
call
cmp
loop
in
add
fisubrs
js
inc
add
frstor
cltd
aam
adc
dec
in
mov
xor
cmp
xor
jg
int3
jp
adc
inc
jecxz
incb
jbe
cmpsl
sbb
adc
or
add
ljmp
icebp
jbe
pop
mov
mov
data16
addb
cmc
push
push
icebp
jo
outsl
mov
and
addr16
xor
xor
and
inc
dec
mov
fs
into
mov
jecxz
jb
push
or
add
mov
cltd
jmp
cwtl
push
cmp
push
sub
inc
orb
push
popa
leave
push
rcl
add
push
shrb
test
mov
sbb
clc
cmpsl
inc
rcrl
test
movsb
popa
jl
rcll
insb
add
mov
lahf
arpl
test
scas
sarl
psrad
xor
dec
out
adc
lahf
ss
lret
xor
ret
sbb
imul
inc
rcll
dec
sbb
push
loope
or
clc
and
je
pop
mov
repz
lods
loope
cmp
xchg
lea
dec
mov
add
pop
cmp
clc
mov
test
adc
je
push
xchg
inc
xlat
cmp
or
dec
or
ds
xchg
jge
or
pushf
cmp
pop
jno
sbb
sbb
enter
inc
bound
xchg
cmpsl
popf
insb
fincstp
sbb
cmpsb
hlt
lahf
nop
test
lret
hlt
xor
add
and
pop
lods
aaa
clc
fldl
cli
mov
in
outsb
aaa
and
iretw
and
sbb
pop
inc
xchg
xor
sbb
and
test
loope
mov
jnp
fiaddl
xchg
xor
arpl
sub
pushf
scas
cs
add
scas
inc
or
xor
mov
cmpsl
jecxz
push
jne
add
repnz
mov
js
fwait
pop
in
sarl
addr16
je
mov
mov
imul
inc
inc
int
sbb
lcall
mov
adc
jne
je
scas
cli
bound
loopne
mov
sub
imul
jle
enter
or
xor
sbb
cmp
mov
jno
mov
adc
daa
cmp
dec
cmp
lods
stos
jne
shlb
cmpb
stos
jecxz
add
clc
add
lret
ficompl
mov
sbb
cld
movsl
arpl
xor
or
inc
lds
imul
mov
cmc
and
mov
pop
xchg
jecxz
stos
push
adc
pop
jl
out
pop
sahf
mov
mov
pusha
pop
cmp
xchg
clc
je
das
or
xor
cs
mov
movsb
data16
push
jo
push
sub
loop
stos
mov
dec
loop
in
call
or
add
lret
mov
jle
pop
dec
xchg
push
mov
fmull
out
addl
jno
push
cmp
pop
stos
mov
push
sub
xchg
adc
xlat
iret
aad
add
jo
mov
repnz
sbb
aas
xchg
test
lea
movsb
in
and
and
sar
xchg
or
sbb
xor
push
adc
sti
mov
sub
in
pop
je
mov
call
lret
int
popa
xor
inc
test
lcall
stc
test
sub
or
xlat
sti
or
adc
enter
jns
fsubr
stc
adc
jne
movsl
adc
les
out
out
repz
mov
push
ss
cs
and
dec
fsubrp
xchg
aaa
jecxz
sti
adc
pop
mov
jg
or
sub
clc
addl
loop
lds
das
loopne
lock
rclb
lahf
and
inc
int
std
sarl
das
insl
pop
sbb
lods
fld
pop
fbstp
inc
inc
hlt
leave
cld
cmp
push
loop
mov
cmp
and
adc
in
nop
sub
mov
add
sahf
xchg
pop
iret
push
popa
pop
xor
push
cmpsl
arpl
jle
mov
addb
push
sub
and
push
fdivrs
add
pusha
mov
sub
fwait
cmpsb
hlt
xchg
cmpb
jbe
bound
iret
sbb
frstor
or
movsb
hlt
int3
xchg
sub
pop
jnp
jp
cli
xchg
add
imul
je
mov
xchg
mov
push
push
push
lret
loope
inc
or
rol
jge
jns
mov
and
movsb
mov
xchg
les
cltd
loop
push
daa
into
pushf
push
js
testb
xchg
xchg
test
xor
into
xchg
stos
mov
mov
sub
or
std
insl
out
lock
pop
adc
mov
movsl
jl
nop
sub
popf
sti
loopne
mov
cmc
pop
iret
fs
mov
add
push
jae
jo
mov
adc
repnz
xor
mov
sub
cmp
mov
loopne
cmpsb
adc
cmp
hlt
iret
cli
imul
and
loope
ds
adc
cmp
or
add
insb
sahf
movsl
adc
add
xor
ja
insl
sub
mov
mov
cmpsb
or
push
add
hlt
push
in
and
shl
cmp
leave
fyl2xp1
insl
mov
gs
inc
jae
stc
mov
and
int3
fidivs
mov
lret
call
sub
mov
adc
in
in
es
pushf
add
leave
mov
sbb
xchg
dec
mov
and
jmp
push
cmpsl
inc
jl
jno
and
sbb
pop
jno
ljmp
or
and
push
jl
fwait
outsl
push
sub
cld
jne
dec
cmpsl
int3
dec
pop
push
inc
dec
and
aad
xor
arpl
faddl
into
testb
das
adc
push
mov
outsb
cmpsl
into
cltd
mov
and
or
jl
xchg
outsb
fistps
push
inc
fnsave
mov
mov
fs
xchg
lahf
push
sbb
sar
adc
loop
loopne
jb
jne
andl
cwtl
adc
add
popa
mov
sbb
xlat
lret
nop
lods
cmpsl
leave
hlt
aad
push
data16
lret
mov
jno
sub
pop
dec
xchg
stc
add
scas
sbb
sbb
lods
xor
cmp
out
or
cmpsl
sbbl
test
jnp
sarb
mov
jl
sbb
in
lock
in
popf
xor
enter
loopne
pop
shrb
fists
fbstp
test
inc
or
jns
push
das
mov
lock
mov
mov
popf
cltd
pusha
xchg
mov
popa
ss
push
mov
mov
shll
arpl
mov
outsb
jbe
or
cmpsb
push
ret
pop
popf
nop
icebp
leave
mov
cmp
pop
je,pt
mov
scas
ds
sti
lahf
loop
negl
jnp
imul
pop
repz
push
mov
inc
test
ret
outsl
inc
in
stc
mov
or
push
jnp
popf
dec
rcrl
dec
push
ja
pop
pop
jge
mov
jle
push
inc
rol
jl
lahf
push
or
popa
cli
xchg
inc
int3
cli
or
mov
push
sbb
fiaddl
loope
ficoms
jb
jb
lods
sbb
fisubrs
adcb
mov
xor
andb
sbb
wrmsr
or
pushf
andl
sbb
mov
inc
stc
sbb
aaa
pop
lret
mov
jle
mov
push
sahf
bound
mov
lods
jo
js
dec
addr16
out
out
cs
loopne
xlat
pop
mov
jae
lret
outsl
cld
roll
bound
outsl
mov
push
push
and
int3
jns
subl
dec
hlt
adc
sbbb
cmp
imul
sbb
insb
int3
pop
mov
sbb
jns
mov
or
mov
mov
inc
jmp
shr
hlt
addr16
int3
dec
push
jae
xlat
outsl
repnz
jge
and
xor
push
cmc
and
mov
dec
in
mov
nop
in
push
in
jg
out
mov
xchg
mov
ja
mov
mov
pop
outsl
cmp
jmp
jb
mov
mov
xchg
sbb
add
sarb
xchg
hlt
sub
pop
test
jb
icebp
gs
icebp
adc
cwtl
push
add
xchg
mov
clc
arpl
loope
and
es
aas
push
xchg
enter
mov
movsl
js
xor
push
sub
data16
aaa
add
in
les
lods
jo
test
js
lods
fistl
xor
dec
xor
pop
cmp
mov
pop
pop
loopne
arpl
cmpsb
std
and
movsb
or
lea
cmpsb
aas
incl
sbb
lahf
fstpt
dec
fucomip
cmp
jns
dec
mov
sbb
xchg
lcall
sbb
aad
hlt
pop
mov
mov
roll
sub
xor
fldcw
xchg
test
lcall
popf
stos
or
xor
sub
roll
adc
lcall
push
push
lret
in
adc
xor
lods
add
je
pop
mov
pop
jge
adc
cmp
and
push
mov
decl
jb
dec
shrl
inc
adc
or
jne
mov
xchg
lds
mov
jo
mov
stos
movsb
subb
pop
leave
jecxz
inc
pop
inc
xor
pushf
xor
pushf
and
call
pop
icebp
idiv
pop
into
dec
addr16
lea
inc
in
out
or
mov
jmp
sub
aam
fisubl
shr
inc
pusha
imul
adc
xor
mov
mov
cmp
add
lcall
add
sbb
repnz
pop
inc
les
jge
and
jo
xor
scas
hlt
orl
pop
jg
dec
stos
sbb
iret
int3
aad
ja
mov
mov
adc
sub
stos
add
dec
jl
shll
lods
ljmp
lcall
push
mov
mov
faddl
aad
mov
fisubs
daa
lods
test
pop
add
in
mov
sub
mov
push
addr16
out
out
xchg
lock
sub
cmp
shlb
loop
pop
xor
in
shll
add
or
mov
inc
iret
das
inc
pop
fldt
lret
stos
pusha
xchg
mov
push
fs
in
leave
xlat
cmp
xor
pushf
push
mov
lods
int
fnstsw
dec
and
shll
in
in
cwtl
movsl
test
ret
shlb
scas
mov
push
fdivs
in
lock
jmp
xor
push
jae
test
mov
xlat
pop
pop
out
aad
pop
mov
and
clc
test
lret
in
in
fsubl
xchg
lret
sti
mov
in
pop
hlt
sbb
jae
lcall
stc
nop
and
xchg
dec
mov
and
mov
push
sbb
ds
dec
pop
xchg
js
in
int
out
cli
sbb
mov
inc
dec
popf
cmp
jg
subl
jg
jae
xor
mov
jmp
popa
pop
dec
or
sub
fadd
mov
outsb
test
ficoms
and
jne
xor
jmp
xor
ret
push
cmp
stos
je
xchg
jne
pop
mov
jne
shrl
mov
dec
mov
insb
mov
lea
lds
push
sahf
sbbb
into
mov
jecxz
jge
test
nop
and
mov
cltd
mov
pop
je
pusha
lods
push
scas
fiaddl
aaa
ljmp
std
iret
jbe
cmp
int
cmp
mov
cmp
mov
scas
mov
pusha
iret
add
jae
sbb
pop
arpl
add
jg
pop
jg
xor
pop
in
fwait
or
testb
aaa
cmp
repnz
pop
mov
repz
lret
test
inc
and
mov
xchg
or
test
push
in
out
mov
cli
dec
sbb
inc
adc
xor
aaa
fcmovb
out
aam
mov
data16
notb
cmpsb
mov
je
in
stos
dec
lret
cmpb
fistpll
push
stc
repnz
cmp
jae
mov
popf
and
mov
jmp
hlt
dec
sub
sub
and
push
mov
clc
loope
sbb
dec
add
push
stos
in
push
popa
adcb
push
leave
inc
cld
movl
fstps
push
mov
jno
add
cltd
enter
test
pop
shl
repz
pop
ret
inc
or
pop
cmp
mov
adc
pop
pop
or
cli
push
cltd
sub
cltd
xlat
xchg
xchg
in
dec
hlt
ret
dec
data16
out
or
popa
stos
ds
sub
inc
pop
and
popa
into
insl
jmp
sti
cmp
rorl
ds
clc
mov
cmp
sarb
sub
cltd
xor
int3
arpl
rolb
and
mov
leave
jae
ffree
pop
iret
and
fildl
shll
in
and
xchg
push
push
stos
add
into
fimuls
jne
hlt
push
dec
cmp
mov
mov
and
adc
imul
cmc
cmc
cwtl
stos
aam
cmp
in
add
push
daa
adc
mov
out
addps
mov
xchg
ret
xor
or
arpl
pop
or
pop
dec
je
jbe
in
sub
xchg
lcall
lods
cmp
add
cwtl
jl
adc
xor
dec
or
push
mov
inc
xchg
cmp
push
mov
or
pop
mov
adc
adc
adc
push
push
adc
fcoml
imulb
dec
test
testl
test
mov
adc
add
nop
push
sbb
clc
jmp
test
mov
aam
jmp
mov
mov
xchg
or
nop
daa
das
ljmp
imul
ret
mov
orb
lods
jg
fmulp
insb
fisttpl
lods
mov
cltd
and
add
pushf
jo
and
imul
mov
lods
mov
out
mov
fisubrl
or
into
push
pop
addr16
and
xchg
mov
mov
arpl
pop
fnstcw
dec
xlat
and
jecxz
popf
sbb
jo
sbb
repnz
pop
loop
cmc
pop
pop
cmp
mov
les
insl
aas
cmp
mov
cmc
dec
mov
cli
es
iret
es
push
lds
ret
pop
sub
adc
aas
insl
mov
les
shrl
pop
loopne
sbb
mov
push
es
jae
lret
cmp
sub
in
and
fiadds
test
inc
inc
jb
je
movsb
xchg
pushf
aad
mov
movsb
scas
out
sub
hlt
mov
dec
sbb
push
in
add
jnp
mov
out
mov
xor
add
mov
cmpsb
arpl
in
js
aaa
mov
cltd
or
inc
and
and
pop
and
push
movsb
das
jns
es
dec
cmp
sub
test
xchg
sti
dec
jecxz
xor
rcrb
roll
pop
push
ret
dec
add
repz
call
mov
cmc
ss
pushf
test
inc
pop
push
mov
mov
or
pop
ret
dec
jl
dec
int3
lret
divb
aad
movsl
push
data16
dec
fimuls
dec
xor
rorb
push
cmpsl
fcmovbe
sub
mov
ss
sbbb
stos
mov
gs
add
movsb
push
xchg
push
fs
xchg
cmpsl
mov
movsl
sub
xchg
adc
sahf
fldl
sarb
popa
mov
xchg
push
or
cltd
cmp
mov
imul
int3
ficomps
sbb
push
mov
fwait
sti
idiv
lret
sahf
mov
xchg
in
test
pop
stc
and
std
mov
mov
sti
xchg
filds
gs
movsb
outsl
push
pop
shll
or
cmpsl
roll
mov
lods
inc
lock
jnp
xchg
push
mov
mov
cs
xchg
aad
adc
fsub
das
push
and
mov
ljmp
mov
sar
mov
fwait
das
iretw
pop
dec
mov
xchg
jle
pushf
lock
inc
divl
sti
inc
rcl
cmpsb
sub
pop
push
call
into
dec
jmp
pop
mov
int3
jg
xor
jo
sti
ljmp
mov
push
jo
pop
jmp
cltd
movl
in
cmp
mov
adc
pop
into
stos
jno
data16
pop
leave
mov
jbe
jmp
daa
pop
hlt
push
jge
xorl
sbbb
or
loope
mov
jae
push
cmp
fdivp
outsl
aam
jb
cmp
xchg
in
mov
xor
and
push
cwtl
jmp
lea
sbb
lods
fisttps
fnsave
test
add
cli
xchg
xchg
sub
insl
xor
sbb
xor
mov
pusha
push
and
push
mov
lret
scas
call
or
lahf
out
push
jmp
ret
xchg
cmp
push
jne
xchg
cmpsl
stos
sub
jmp
or
push
pop
add
dec
shll
stos
mov
dec
ss
jg
addr16
jmp
aaa
inc
loop
ljmp
sbb
cmp
stos
movb
sub
jg
sub
ficoml
jge
lcall
push
lea
pop
fwait
roll
xchg
xchg
test
imul
cld
or
in
fsubl
negb
mov
lahf
dec
out
mov
pop
movsb
pop
dec
inc
aad
int3
mov
ljmp
mov
adc
inc
xor
pop
pop
or
fstpt
cmp
popa
push
adc
lret
jecxz
stos
into
daa
frstor
imul
sarb
ljmp
int3
fidivl
push
dec
jb
dec
mov
mov
inc
sbb
xchg
stos
jle
pop
jmp
subb
rolb
rcl
jl
inc
dec
mov
xor
pop
inc
call
test
dec
mov
sub
jg
lea
sub
sub
mul
idivl
jne
repnz
loop
pop
xchg
lods
mov
adc
pop
dec
daa
loop
sub
cmpsb
mov
shlb
adc
jbe
mov
ret
pop
sahf
lret
shrl
std
pop
outsl
adc
push
add
int
cmpsb
out
aad
push
mov
jl
sub
outsl
mov
lahf
lahf
mov
jb
fcmovne
add
rorb
inc
arpl
jge
cmpl
testl
and
pusha
adc
leave
mov
mov
aaa
insl
test
sbbb
lcall
stc
hlt
mov
imul
jle
adcb
sub
cmp
cmp
sbb
into
pop
inc
push
dec
fs
push
or
push
or
pop
fstps
xchg
fchs
stos
frstor
push
jne
push
je
outsb
arpl
xchg
cwtl
xchg
sbb
mov
push
movsl
leave
repnz
mov
daa
adc
mov
xchg
adc
push
aas
xor
pop
aad
jge
xor
pop
xchg
outsb
rolb
sti
aam
push
rolb
inc
rol
push
push
inc
jp
pushf
mov
sbb
fistl
int
fidivl
push
cmp
cmpsb
in
dec
lds
add
mov
loop
jb
mov
cs
add
in
or
lods
dec
mov
sbb
xorb
adc
cli
jge
mov
adc
stos
and
aam
xchg
fsubl
push
mov
inc
fisubl
xor
repnz
dec
and
call
jns
xor
shlb
mov
push
dec
mov
push
jmp
enter
add
enter
jge
mov
cs
mov
pop
push
cmp
aam
adc
daa
inc
xorl
movsl
and
cltd
and
iret
push
inc
bound
dec
ficomps
into
testl
adc
and
ljmp
test
push
and
sub
mov
fwait
ja
xor
imulb
ds
fidivl
out
dec
lock
cld
xchg
xchg
push
or
divl
nop
daa
jbe
test
xlat
pushf
pusha
or
aaa
jb
push
jae
cmp
jecxz
push
mov
cmp
mov
das
sbb
dec
and
data16
fwait
cmpsl
mov
aam
ja
cs
movsl
lret
sub
inc
pop
idivl
insb
push
lock
rolb
in
lcall
inc
mov
insb
sub
fistps
ds
push
in
pop
cmp
sub
arpl
mov
out
push
jmp
je
xchg
jb
xor
or
sahf
dec
and
jo
mov
jae
loop
jle
sub
mov
cwtl
cs
insl
adc
mov
xchg
xor
xor
add
repnz
mov
rcll
fs
or
dec
ds
push
lret
sub
fwait
or
iret
mov
roll
clc
push
or
scas
xor
push
jb
xor
xchg
imul
lock
pop
cli
loopne
push
pop
arpl
ja
push
icebp
cmp
xor
push
pop
fadds
inc
push
xor
pop
arpl
pop
or
or
push
sbb
cmp
jl
js
sbb
cmp
xlat
pop
rorl
repz
repnz
cvtps2pd
pop
jo
imul
mov
cli
in
push
sbb
xor
pusha
stos
push
rcrl
xor
dec
bound
addr16
gs
adc
clc
mov
fists
mov
je
movsl
mov
pop
add
out
dec
insl
jg
fsubrp
lret
and
mov
xor
sub
sahf
bound
fcmovne
in
iret
mov
mov
mov
lcall
push
add
xor
pop
pop
mov
call
in
testl
jb
adc
std
mul
or
out
mov
iret
mov
adc
xorb
adc
add
sub
and
mov
jo
inc
shrl
inc
xor
mov
inc
or
cmpsl
sub
pop
hlt
pop
xchg
pop
loope
insb
xchg
out
popf
sub
push
jle
bound
and
dec
and
test
jmp
ret
cmc
sbb
out
and
jmp
js
mov
les
or
movsb
repnz
shlb
inc
outsl
pusha
in
mov
rcrl
sbb
mov
jge
or
shrb
repnz
mov
xchg
xchg
aam
push
movsl
fists
mov
dec
pop
jo
fstpl
call
dec
cmpsl
into
inc
mov
sbb
pop
adc
add
fbld
xor
popa
test
es
pop
adc
imul
sbb
or
mov
jl
push
int3
out
add
faddl
mov
int3
repz
inc
repnz
repnz
adc
fstpt
xchg
sub
jbe
shrb
dec
mov
dec
rcl
aaa
add
adcl
cmc
test
cltd
xchg
add
push
sbb
xchg
jle
mov
fidivs
adc
and
les
xor
or
adc
xlat
sbb
pop
push
test
sub
stc
test
std
out
mov
jne
jae
inc
jecxz
lock
push
stos
pop
daa
lret
xor
ficoms
or
pop
sahf
into
push
fld
movsb
lcall
rcl
jne
mov
scas
mov
mov
addr16
in
cmp
cmc
adc
or
in
dec
dec
jle
dec
rep
mov
lea
stos
adc
fcompl
mov
adc
pop
stos
subl
fsubrs
mov
mov
adc
leave
and
cmp
in
cmpsl
cld
mov
xchg
mov
shll
outsb
xchg
dec
push
ficoms
push
fs
xlat
aas
and
pushf
loope
into
sub
and
addr16
repnz
aad
cmp
sbb
inc
das
ds
mov
test
ficoms
push
fldt
jp
stos
fs
jne
lret
fldcw
ja
stos
push
shl
addb
stc
mov
lods
inc
flds
sub
roll
inc
sub
jp
mov
shlb
pop
sbb
fidivrl
int3
push
mov
mov
xlat
subps
jae
pop
dec
cmp
sub
sahf
add
sbb
dec
pop
insl
sub
out
adc
cmc
jecxz
mov
or
les
test
ja
dec
mov
dec
lcall
dec
add
fwait
dec
cs
sti
imul
or
nop
pop
adc
fisttpl
xor
aaa
stc
mov
jp
adc
bound
ljmp
stos
xchg
daa
rclb
adc
shrb
xchg
test
xchg
imul
dec
cmp
lret
jle
pop
call
rcll
jmp
dec
repz
xchg
mov
cmp
in
inc
es
or
cwtl
sti
and
sub
rcrb
push
in
or
mov
test
int3
cmp
push
xchg
push
mov
roll
dec
ja
mov
pop
cmc
cmp
fdivrl
lds
cs
pusha
mov
push
call
add
sub
and
fyl2xp1
icebp
mov
je
sub
icebp
cmp
add
mov
xchg
add
lsl
std
fists
jo
pop
mov
rol
xor
mov
fucomip
sbb
repnz
push
sbb
outsl
inc
in
cmp
mov
out
loopne
std
pop
inc
lods
mov
xlat
sub
add
in
inc
cmp
push
mov
or
jno
mov
push
dec
insl
daa
sti
addr16
adc
les
cmp
mov
pop
lret
mov
mov
inc
adc
aas
push
mov
call
or
pop
into
jb
adc
sbb
mov
call
ror
inc
repz
push
xchg
add
sub
shlb
lcall
mov
not
mov
insb
add
jmp
ja
dec
andl
pop
pop
int3
dec
repnz
insb
jnp
fnstenv
dec
jmp
repz
idivb
mov
shl
dec
mov
lock
push
fxch
lods
jp
push
pop
test
dec
fwait
xor
stc
pushf
jbe
icebp
xchg
xor
mov
sbb
dec
orl
out
rcrl
ret
test
outsb
jl
cmpsb
dec
add
aam
lret
rcll
jg
add
sbb
mov
mov
cli
mov
pop
xor
cmp
test
mov
or
cmpb
outsl
loopne
stc
mov
fidivrl
push
xchg
mov
add
aas
fdivp
mov
xor
imul
jne
adc
jnp
shlb
repz
mov
mov
nop
fwait
in
int3
arpl
push
pushf
dec
inc
mov
sub
gs
lret
sbb
test
adcl
push
in
mov
adc
or
daa
push
push
out
fst
cli
lea
jecxz
cmpsl
dec
push
cmp
loop
fs
loope
add
push
daa
xor
mov
inc
cld
outsl
dec
popf
sbb
and
xchg
jae
jecxz
pop
daa
adc
popf
mov
mov
mov
dec
decl
lods
jb
mov
out
xchg
and
aad
inc
cs
add
pop
orb
cmp
mov
repz
mov
xor
inc
mov
inc
int3
mov
stc
push
repz
xchg
test
sub
sarb
clc
andl
push
stc
jmp
lea
iret
sahf
popa
jns
mov
add
ret
in
pop
mov
sbb
push
inc
fisubrs
mov
pop
repnz
cmp
test
mov
js
sbb
ror
xchg
data16
cmp
mov
push
push
add
lock
fcom
sbb
push
jp
scas
add
pop
mov
out
fadd
jmp
clc
mov
orl
test
pop
lcall
and
and
jle
xor
dec
bound
xchg
ss
iret
jno
out
cmp
and
pop
mov
cmp
push
stc
mov
int3
mov
js
int3
xchg
in
adc
push
add
jo
sub
mov
cwtl
mov
iret
push
in
push
xchg
fcoml
int
inc
sub
nop
lcall
cmpb
mov
lds
mov
divl
lea
mov
xchg
popa
cmc
mov
and
das
inc
or
cmpsb
inc
lock
fistl
mov
inc
shlb
fprem
ficoms
adc
push
mov
jle
cmp
out
pop
das
add
or
cwtl
in
push
inc
in
mov
loopne
xor
pusha
mov
aas
dec
dec
scas
out
jecxz
mov
inc
dec
jb
xchg
js
xchg
shrb
or
cmp
pop
shl
xor
in
mov
cmp
ret
pop
insl
pop
mov
cmp
icebp
adc
sbb
push
and
mov
jmp
loopne
popa
adc
scas
xchg
adc
scas
mov
icebp
dec
push
out
pop
dec
fcmovne
ds
push
fnsave
xlat
pop
cmp
mov
dec
xchg
cmc
cmc
outsl
inc
push
imul
xchg
clc
dec
push
pop
clc
xchg
adc
lret
xor
adc
mov
push
movntq
out
and
js
pop
ja
push
sub
fidivs
inc
sub
jbe
movsl
inc
xor
inc
push
test
dec
or
push
pop
xchg
mov
cmc
cmp
cmp
leave
loopne
loop
ljmp
mov
nop
rcrl
or
in
lods
dec
or
adcb
popa
mov
pop
pop
imul
xchg
push
jns
mov
roll
jbe
lcall
or
cld
lds
jge
sub
loop
in
mov
xor
sub
out
mov
cmp
xorl
ja
sbb
pushf
xorb
sti
or
xchg
das
outsb
jle
repz
dec
push
int
fdivr
add
cmp
std
test
data16
jo
sbb
mov
pusha
jge
stos
push
lds
mov
or
sbb
enter
sub
sub
or
or
fcomp
test
sub
pop
push
sub
das
loopne
cltd
adc
bound
in
icebp
dec
jecxz
push
lret
ret
hlt
cli
je
mov
sbb
lods
xchg
in
cs
icebp
dec
xorb
jecxz
mov
int3
mov
mov
xchg
push
orb
xor
jecxz
sbb
mov
insb
jb
xchg
fcompl
pop
lock
mov
dec
dec
fistpll
scas
ds
mov
cwtl
xor
mov
mov
test
jae
adcb
inc
arpl
push
out
jle
cmc
mov
iret
lret
ja
icebp
xor
or
popf
push
xchg
sub
mov
dec
stos
loope
sub
mov
bound
inc
int3
sub
aad
inc
and
mov
popa
in
ret
aad
test
fsubrs
add
sahf
clc
sbbl
sbb
nop
lds
arpl
or
mov
pop
adc
rol
pusha
cltd
sahf
lods
stc
lea
xchg
or
push
mov
adc
es
pusha
sbb
loop
jns
mov
bnd
inc
dec
aam
cmp
cmp
jmp
push
or
cmp
inc
out
icebp
adc
xor
in
add
cmpsb
dec
std
pop
fidivl
gs
jmp
int3
scas
call
inc
xchg
mov
mov
int3
adc
mov
xchg
lock
add
mov
imul
lret
pushf
push
andl
rcrb
mov
arpl
jns
lcall
push
jmp
mov
push
lods
orb
sub
jnp
mov
mov
scas
mov
cmp
pop
iret
into
cmpl
test
pop
push
mov
pop
shll
mov
and
mov
cmp
jno
dec
mov
test
js
push
addb
mov
sbb
mov
lock
mov
cmpsb
mov
mov
mov
pop
push
mov
fcmovnu
int3
daa
andl
sbb
mov
pop
aas
or
pop
mov
es
add
sub
jbe
inc
scas
and
lods
and
lds
lret
and
push
loope
inc
clc
push
cld
into
dec
pushl
push
lretw
jp
movsb
icebp
divl
xchg
insb
pusha
stc
sbbb
jle
cmpl
mov
movsb
rorb
cmp
or
cmpsb
inc
xlat
mov
jns
lock
push
adc
out
cmpsl
pop
daa
data16
jbe
ds
fstps
and
je
inc
add
jbe
fnstsw
push
insl
and
mov
icebp
cmp
xchg
int
cmpsb
inc
test
sub
pop
ljmp
sbb
inc
push
test
ja
fstl
xor
cmp
orb
sti
leave
inc
xchg
jecxz
adc
adc
push
or
pop
sub
dec
in
subl
sub
push
and
push
fiaddl
mov
sbb
cwtl
loop
jb
gs
loope
dec
iret
mov
push
jne
cld
outsl
mov
scas
and
movsl
cld
sbb
bound
incb
fisubl
mov
sti
push
cwtl
jge
daa
mov
or
out
xor
cmc
cld
dec
stos
arpl
gs
cmp
pop
fidivl
arpl
lcall
push
cld
sbb
and
push
adc
sub
ja
lcall
push
ss
int
xor
fdivrs
loopne
add
lcall
cmp
xor
pop
inc
sarb
adc
into
insw
mov
xor
mov
fsubrl
sbb
mov
imul
out
imul
in
add
push
mulb
nop
add
ret
cli
arpl
repnz
stc
pop
mov
rclb
cli
ss
rcll
inc
insl
sarl
xor
push
mov
sahf
fldcw
cmp
outsl
and
ss
out
orl
test
lret
jb
enter
dec
dec
adc
decl
stos
xchg
shl
or
aaa
fwait
cmp
and
dec
sub
mov
push
mov
cmp
data16
pop
iret
jns
arpl
adc
pop
pop
mov
movsl
dec
lret
sti
cmp
aam
mov
sahf
push
jno
sbb
out
push
xchg
aaa
sub
push
xlat
lock
adc
mov
jo
pop
mov
sub
negl
outsl
nop
mov
sbb
xchg
jae
jns
fildll
mov
test
xchg
aas
cmc
test
or
mov
scas
faddl
int
leave
pop
imul
loope
add
aam
push
xchg
notl
and
jg
push
push
sti
stos
icebp
subl
push
inc
lahf
addr16
addr16
adc
scas
xor
stc
sub
out
fistps
jg
mov
cli
adc
pop
insb
or
pop
jecxz
fstpt
inc
lods
fisubrl
add
lods
mov
add
add
ret
lods
out
cwtl
jbe
xor
stos
jp
out
jae
aas
mov
adc
xchg
sahf
sub
sub
xchg
cmp
das
sbb
pop
insb
mov
scas
xorb
pop
sarb
mov
nop
jmp
fdivr
pop
dec
lahf
xchg
pop
xchg
movsb
arpl
inc
push
mov
cmp
cmc
adc
lahf
sub
or
repnz
cltd
add
popa
fucomip
idivl
xchg
pusha
ds
sbb
xchg
and
and
mov
sahf
xor
sub
mov
rol
notb
and
int3
fisubrs
adc
ss
decl
cmc
cltd
std
stos
pop
insb
in
adc
loop
sahf
clc
dec
cmp
stos
mov
adc
dec
mov
pusha
cmpsb
push
and
call
mov
shrb
dec
insb
xor
in
imul
and
stc
or
sub
jge
cltd
or
aam
pop
cmpl
dec
and
and
imul
stos
jb
popf
movsb
cmp
inc
clc
fisttps
lahf
cmpps
push
es
pushf
jo
data16
imul
sbb
test
lcall
scas
in
arpl
adc
jno
out
sbb
mov
fwait
popw
sahf
xchg
rcrb
xchg
leave
pusha
shlb
add
outsl
push
push
mov
xchg
and
dec
aaa
push
dec
in
inc
pop
sub
ret
adc
mov
ja
xchg
lret
lock
push
stos
ficompl
mov
lods
cld
aaa
push
ret
ret
cwtl
lcall
pop
cmp
das
sbb
push
addr16
or
inc
mov
pop
mov
push
xchg
outsl
out
push
jno
or
clc
inc
pop
inc
mov
sti
fwait
out
jnp
add
lret
mov
lock
adc
enter
cld
int
sub
fidivs
test
icebp
dec
mov
and
xor
test
mov
popa
loop
fbld
test
sub
rol
imulb
jnp
stos
mov
aam
sub
mov
sub
mov
sub
imul
ret
mov
clc
sbb
mov
stc
pop
lods
inc
mov
ret
outsb
add
dec
cmp
jnp
loope
jle
mov
inc
sbb
test
dec
cmpb
pop
push
and
or
ljmp
mov
jge
movsb
mov
add
dec
push
push
mov
cmp
leave
ret
jmp
jge
push
stc
mov
dec
lahf
mov
pop
jge
out
sub
cmp
jg
sbb
xchg
js
inc
and
xchg
push
sub
add
or
in
rclb
xchg
movsb
mov
mov
notl
inc
inc
inc
sahf
or
xchg
jb
or
pop
lahf
insb
iret
jp
in
pop
jecxz
aaa
ja
inc
scas
icebp
pop
or
rolb
scas
lods
xchg
push
fsubs
imulb
sub
les
cli
or
lock
push
aaa
movsl
aad
and
mov
daa
or
and
push
add
imul
pop
cmp
ljmp
push
mov
fdiv
dec
fadds
sub
sbb
pop
out
pop
mov
jge
push
sbb
xchg
shrl
mov
cwtl
fistpll
jg
push
in
test
xchg
imul
jle
imul
or
mov
inc
cwtl
popa
mov
inc
pop
call
shrl
fildl
or
mov
jnp
push
hlt
sahf
push
mov
push
sbb
pop
cmc
inc
mov
sbb
or
cmpsb
sti
pusha
jmp
pop
xlat
idiv
dec
xor
sbb
add
hlt
addr16
push
call
loop
xchg
pop
cmp
rolb
and
hlt
aas
setns
mov
pop
movups
aaa
outsb
in
adc
leave
mov
jns
mov
insl
rorl
into
gs
mov
add
push
fwait
adcl
sbb
cwtl
mov
push
loopne
push
xor
lret
jno
repnz
lock
xchg
jecxz
or
xlat
ljmp
and
mov
push
dec
int3
sub
sub
dec
pop
jle
sub
rorb
outsl
int
mov
add
aaa
cmp
jg
leave
pusha
sbb
or
cld
xor
arpl
jge
pushf
mov
sbb
add
sbb
mov
xchg
lret
or
mov
iret
ds
mov
lea
jp
jo
push
repz
adc
fsubl
testl
pop
aad
cmp
mov
pop
iret
repnz
sub
scas
es
xor
es
cmpsl
je
jno
inc
insl
mov
add
or
ds
cmpb
jnp
push
inc
add
fsubs
sbb
sbb
inc
jle
les
mov
xchg
repz
mov
mov
pop
jle
fabs
lahf
pop
lock
sbb
pushf
mov
out
mov
xor
sub
repz
add
aaa
pop
push
cli
pop
clc
popf
addr16
lcall
adc
jo
ret
jmp
mov
jb
pushf
lods
cmp
notb
pop
movsb
push
mov
ret
gs
mov
dec
jle
lret
pop
mov
in
sub
inc
push
mov
js
mov
sub
mov
mov
sub
mov
popf
in
mov
pop
xchg
int
shlb
adc
cwtl
mov
out
orl
sbb
cmpsl
inc
jg
lock
xlat
stos
push
sbb
mov
xor
rcl
in
push
ljmp
jmp
data16
mov
add
mov
loopw
jmp
xor
lods
dec
rcrb
decl
jp
push
mov
movsb
insl
sbb
add
fwait
xchg
ljmp
inc
mov
loope
mov
lcall
movsl
test
stos
push
inc
jns
pop
daa
pusha
pop
xor
push
stc
adc
or
aaa
push
jo
test
dec
scas
loop
rcll
or
pop
fwait
addb
cmp
scas
rcl
sahf
lret
push
xchg
pop
sub
aas
in
int3
jae
jge
movsb
lods
mov
daa
lds
adc
jmp
and
sbb
pop
stos
imul
xchg
dec
pop
sbb
cmp
imul
idivb
test
sbb
cmp
ds
mov
in
push
int3
aaa
sahf
push
mov
dec
pop
cwtl
ljmp
sub
into
sbbl
sub
xor
adc
sub
fs
jno
iret
xor
dec
sti
fwait
in
call
dec
xchg
popa
fidivrs
sub
cmpsb
lock
lahf
imull
icebp
js
or
sub
inc
mov
lock
cwtl
cmp
cli
sbb
dec
adc
cmp
gs
adc
rolb
insl
scas
call
lods
sub
jae
cli
in
mov
lea
push
test
pusha
adc
xor
lea
dec
xchg
sbb
push
shrl
xchg
push
fnstsw
int
test
pushf
xlat
mov
mov
dec
sbb
mov
imul
mov
dec
insb
in
loop
xorb
pop
xchg
mov
add
in
xchg
sub
and
aas
popf
stc
add
lea
xor
jmp
cli
adc
sarb
dec
scas
into
inc
jg,pt
dec
push
rcrl
jmp
loop
mov
addr16
adc
sbb
mov
sub
push
test
idivl
int
and
dec
push
gs
out
adcl
push
in
mov
add
pop
jmp
insb
lods
mov
adc
ret
lds
in
xor
inc
or
jl
lret
inc
fnstsw
xor
pop
cwtl
stos
cmp
and
out
cmp
imul
cmp
adc
push
fiadds
loop
pop
fsubrs
rcr
jle
pusha
mov
fmul
lods
and
cmpsb
sbb
mov
notb
cmp
pop
dec
jp
jge
jle
clc
or
mov
fidivs
sub
pop
or
xchg
stc
cmpb
ss
mov
in
sarl
pop
mov
mov
cltd
jl
rolb
add
xor
inc
popf
lods
inc
jl
xchg
mov
xor
outsl
mov
dec
dec
sub
orps
and
pop
lcall
dec
aas
add
xlat
adcl
mov
jbe
and
and
push
cmp
int3
pop
imul
pushf
ficoms
int3
and
loope
incb
mov
inc
push
outsb
scas
xchg
movsb
push
mov
pop
cmp
add
dec
fistpl
addr16
xchg
sbb
sahf
popf
mov
pop
cmp
sub
mov
rorb
shrb
or
mov
xchg
mov
daa
jp
mov
adc
xor
sub
mov
push
push
call
gs
jmp
push
sub
adc
inc
out
je
jnp
nop
jl
jl
pop
cmp
cmp
xchg
clc
dec
adc
imul
test
icebp
jbe
aaa
jb
xchg
pop
or
fnstenv
jbe
ret
outsl
mov
add
js
cs
jns
loop
pusha
enter
lret
and
add
call
fisubrl
mov
in
inc
test
clc
mov
xchg
clc
push
cmpsl
push
lea
icebp
sub
xor
jnp
popf
lods
inc
imul
leave
mov
fisubl
and
adc
push
adc
or
ds
push
add
sbb
push
mov
push
inc
xchg
in
cmp
fwait
popa
and
sahf
jecxz
jb
and
out
mov
daa
mov
movsb
loopne
or
inc
push
mov
andl
jnp
insl
jp
imul
incl
ret
adc
push
js
mov
iret
mov
leave
fcmove
sbb
inc
xchg
shll
lds
lret
pusha
test
jecxz
xor
jge
aad
push
orb
adc
lods
jo
xchg
xlat
mov
mov
cmp
ret
mov
mov
rol
icebp
mov
ja
cli
sar
pop
idiv
cmp
adc
je
mov
dec
mov
sub
inc
imulb
adc
ret
xchg
bound
inc
jne
inc
arpl
sbb
ljmp
into
inc
nopl
or
inc
push
in
hlt
cmp
jae
adc
out
and
pop
lds
push
push
add
pop
int
lea
decb
push
or
decb
cmpsl
sub
aam
add
or
popa
fsubr
pop
push
imul
ss
sti
mov
icebp
mov
je
js
sub
fimull
mov
mov
jns
mov
push
and
ffree
push
in
jg
js
mov
jae
shlb
int
adcb
push
mov
andl
std
jns
cld
push
movsl
cs
jno
rcl
lock
or
daa
cmp
bound
ljmp
fidivrl
adc
or
adc
gs
fldcw
or
jmp
int3
push
fisttps
fbstp
or
out
add
mov
inc
add
mov
sbb
cmpsl
cs
cmp
jle
xor
stc
pop
mulb
fidivrs
sub
and
sub
inc
jle
xchg
ret
pop
mov
pop
in
sub
add
xchg
add
xor
addr16
jo
in
mov
mov
pop
test
mov
mov
or
in
iret
sbb
lock
inc
call
loopne
outsl
daa
data16
mov
fiaddl
addr16
scas
and
and
and
js
xor
stos
scas
enter
mov
popf
mov
faddl
fwait
arpl
sbb
jmp
lret
ficoml
or
mov
lods
test
jne
xor
push
sbb
push
ljmp
adc
dec
notl
jg
xchg
sub
sbb
and
clc
lret
aaa
xchg
gs
lds
cmp
pop
loopne
test
sub
push
popf
dec
or
sub
fucomp
push
jg
movsl
sub
sub
inc
mov
pop
icebp
cmc
push
lods
ljmp
es
dec
nop
notb
test
mov
iret
mov
pop
pushf
mov
test
mov
push
mov
adc
mov
mov
and
out
fdivrs
test
push
jg
std
push
pop
mov
mov
je
cmp
arpl
fcomps
loop
jnp
add
mov
jae
jb
xchg
nop
mov
clc
call
fwait
pop
sub
and
inc
hlt
sub
and
cmc
pop
jmp
xchg
jnp
xor
add
cld
add
sbb
js
push
cli
inc
mov
inc
int
sti
and
mov
and
lock
lods
xchg
movsl
cli
or
jnp
and
xor
xchg
cli
xchg
add
mov
sub
popf
call
shll
jmp
dec
iret
outsb
scas
mov
dec
cltd
jae
and
cltd
movsb
enter
dec
rcr
imul
dec
shlb
xor
or
popa
xor
popf
jb
add
shl
mov
ffree
shrl
out
cmp
mov
xchg
scas
inc
xchg
fidivs
mov
jge
rol
or
stc
cmpl
inc
push
or
aam
sub
or
push
mov
mov
xor
cmp
xor
mov
outsb
orl
adc
pop
jecxz
mov
xchg
jge
inc
test
mov
fisubrs
add
das
fbstp
into
pop
inc
jno
inc
dec
rorb
stos
in
mov
sbb
out
std
xor
mov
insb
test
jge
pop
lcall
nop
lock
jl
xor
push
inc
arpl
sbb
in
and
daa
or
in
imul
mov
nop
jns
sti
mov
sbb
xchg
mov
mov
outsl
daa
and
xor
outsl
jecxz
sbb
xchg
push
cmpsb
sarb
jp
jo
stos
or
mov
data16
dec
rcrl
mov
imul
popf
enter
cmpsl
out
add
push
mov
shl
rorb
outsb
rorb
and
shl
and
dec
mov
xchg
cmp
popa
psubw
subb
les
mov
mov
push
push
leave
xchg
stos
inc
jmp
cltd
xor
stos
pop
or
add
mov
cli
rolb
xlat
pop
sbb
in
icebp
adc
cmp
lds
push
push
cmp
add
dec
adc
and
ret
mov
inc
push
mov
ret
cmp
mov
mov
and
lcall
sbb
and
adc
out
push
inc
out
cli
xchg
mov
rcl
xor
sbb
leave
fstpl
fldl
add
adc
xchg
add
push
out
mov
outsl
out
mov
fisubrl
sar
fsubrl
mov
mov
inc
cmp
pop
xchg
inc
ja
rcrb
and
sub
mov
xlat
push
scas
adc
bound
insb
ja
xchg
and
pop
hlt
push
and
jnp
negb
lock
sahf
push
hlt
add
ja
add
pop
pop
test
int3
xchg
insl
out
lcall
jbe
xchg
es
mov
in
mov
push
fnstsw
fisubrl
cmpsl
mov
ret
pop
mov
cmp
xchg
shr
leave
mov
xor
cmc
add
mov
addl
addr16
push
ss
fbld
dec
cmp
fs
scas
pop
lcall
std
push
sbb
and
xchg
lock
stos
sub
ficoml
popa
ss
push
aad
leave
inc
clc
es
daa
call
adc
scas
mov
xor
inc
jns
xor
inc
repnz
test
sahf
jl
insl
mov
rol
adc
nop
inc
in
leave
pop
lret
xor
in
pop
loope
inc
inc
mov
movsb
pop
mov
and
jl
mov
imul
sub
and
rcl
ja
into
fdivl
cltd
data16
shrb
add
xchg
inc
into
gs
notl
test
xchg
sbb
lods
dec
in
loop
cmc
cwtl
mov
cmp
mov
leave
cmp
maxps
mov
notb
jne
adc
xchg
inc
inc
adcl
lret
xor
xchg
mov
shll
xchg
cmp
sahf
adc
fcmovnbe
mov
mov
movsb
xor
adc
scas
ret
mov
adc
test
xchg
cld
adc
sbb
xchg
out
lahf
pop
cmp
mov
mov
shrl
fnstcw
push
cmpsl
mov
cs
xchg
pop
xor
scas
fsts
pop
and
xchg
xlat
insl
das
sahf
push
repnz
mov
pop
jecxz
cmpsl
cmp
rcl
leave
sbb
dec
pop
clc
sbb
and
sbb
lret
cs
int3
pop
int
popa
ljmp
int3
xchg
sbb
testb
push
mov
pop
jge
push
popl
and
jne
mov
jo
jb
cwtl
xchg
mov
faddp
mov
jge
jnp
mov
mov
mov
ljmp
pop
shll
adcb
and
je
nop
and
ja
add
mov
stos
cmp
pop
xchg
pop
jno
mov
les
out
xchg
xor
daa
sbb
subl
sti
cmpsl
shll
insb
xchg
push
out
pcmpgtd
scas
cltd
fstps
cld
xchg
dec
jb
clc
push
cmp
add
ds
sub
adc
mov
imul
popa
lods
out
push
or
mov
jne
pop
pushf
scas
jo
mov
rolb
imul
ljmp
in
fs
ss
repz
ljmp
sbb
sbb
insb
cltd
pusha
mov
ja
adc
es
xor
sub
adcl
fwait
mov
out
int
mov
pop
cs
push
mov
call
adcb
xchg
sbb
mov
hlt
mov
fsubrs
inc
add
ds
fucom
mov
enter
fildl
adc
mov
jb
pop
movsb
mov
sbb
pop
sub
xor
pop
enter
add
push
in
mov
mov
adc
jbe
lea
xchg
js
push
mov
lods
js
test
lahf
ss
fwait
xchg
icebp
inc
shlb
dec
mov
dec
sub
fidivrs
or
add
mov
push
xor
ds
fcoml
add
xor
outsb
aaa
adc
mov
xor
shl
sbb
mov
inc
scas
push
scas
pop
fildll
mov
int
xor
clc
enter
scas
ja
dec
arpl
sub
pop
mov
xchg
cmp
imul
or
test
mov
addr16
ds
cmp
hlt
imul
add
addr16
stc
jle
pop
dec
dec
adc
cmp
loopne
ss
ja
jecxz
mov
cwtl
in
or
mov
or
fstps
pop
or
inc
cmp
or
jp
in
adc
repnz
xchg
enter
mov
cmp
add
out
rolb
pop
inc
mov
sub
pop
mov
cs
add
test
fimull
dec
adc
and
in
cwtl
xchg
sti
call
cmp
dec
leave
xchg
push
mov
sbb
mov
mov
push
insl
jp
lahf
xor
outsl
jecxz
lds
lods
sub
push
jbe
call
scas
aas
repnz
add
notb
pop
loope
sub
aad
in
mov
testl
mov
fnstenv
dec
push
xchg
jns
out
data16
pop
loopne
jb
dec
fisttps
pop
and
idiv
sahf
sub
add
jg
cmp
push
or
pop
adc
imul
adc
sarb
push
movb
and
and
inc
pop
lock
mov
mov
add
cmp
push
fwait
mov
popf
fs
repnz
push
or
leave
mov
xor
push
sbb
out
scas
lcall
push
adc
lret
aaa
sahf
xchg
sub
push
push
inc
mov
jg
es
shlb
and
adc
cld
outsl
jo
sbb
push
mov
daa
pusha
sub
sbb
aas
cmp
scas
movsb
and
pushf
inc
or
cmp
mov
mov
aad
lahf
dec
xchg
adc
popa
xchg
push
adc
push
xor
mov
mov
push
push
aas
bound
xchg
pop
bound
push
aas
idivl
sahf
into
push
inc
mov
push
sub
aaa
in
loop
das
mov
aas
int
jns
xchg
outsl
test
sbb
rcll
aam
push
sub
movl
sbbl
jl
call
mov
dec
inc
xlat
cmp
sahf
arpl
loope
outsl
mov
enter
dec
fstps
mov
ret
jno
xor
popa
jnp
shr
test
mov
test
inc
outsl
mov
rcr
push
loope
test
aas
xor
push
rol
stos
dec
in
mov
imul
jle
jno
jae
sti
push
fcoms
shlb
add
xlat
add
scas
out
and
and
xlat
or
daa
dec
fidivl
dec
cmc
div
and
sbbb
mov
mov
and
and
insl
int
add
jae
cmp
mov
cli
popa
dec
int
repnz
loop
mov
frstor
push
call
les
adc
std
add
cli
inc
in
arpl
es
cmp
inc
ret
pop
cmp
push
cmp
and
sbb
outsb
out
mov
lods
sub
je
xor
mov
pop
push
jno
xchg
pop
cmpsb
cmp
pop
cmp
xor
jmp
xchg
mov
sarl
cli
mov
or
pop
cmp
iret
adcb
outsl
shll
or
inc
imul
mov
add
aaa
loopne
enter
jmp
push
imul
dec
jnp
aaa
and
inc
mov
pop
jnp
fisubrl
sbb
insb
xchg
lock
mov
xchg
cs
pop
ds
mov
shr
mov
pop
rolb
mov
dec
xchg
dec
pop
mov
sub
rorl
jecxz
xor
testb
lea
sarl
push
test
cmp
mov
and
les
jg
mov
fisttpll
pop
pop
mov
pop
out
dec
push
push
push
cmp
in
orl
aas
push
lea
sahf
cmp
sub
int
add
and
jp
and
cmpsl
cmp
adc
push
and
jmp
movsl
mulb
scas
fcoml
pop
dec
fwait
ss
xor
push
js
in
mov
xchg
jbe
mov
test
loop
dec
insl
push
or
mov
andb
sbb
ja
mov
outsl
loope
cmp
xchg
mov
ret
pusha
jae
pop
adc
adc
mov
or
adc
mov
mov
xor
jb
ror
sbb
add
mov
fsubr
mov
mov
mov
and
push
push
call
shrl
outsl
cltd
pusha
jge
shrb
mov
push
xor
test
andl
or
mov
jmp
sti
ss
sub
sub
incl
mov
call
int3
dec
addr16
hlt
sub
dec
sub
fimuls
movsb
out
xchg
or
xchg
call
sbb
imul
mov
in
loop
push
xor
in
int3
dec
mov
rol
pop
shll
jle
xor
into
arpl
mov
xchg
pop
inc
fdivs
cmpb
sub
int3
and
outsb
gs
push
xor
mov
imul
popf
insl
cwtl
inc
push
cltd
shl
xchg
jp
xor
xlat
aaa
js
cli
leave
add
adc
xorl
icebp
movsl
adc
loope
cli
or
stos
cmp
pop
repz
pusha
dec
xchg
sbb
sbb
mov
pusha
jmp
int
inc
loop
push
insl
mov
daa
call
mov
sti
sbb
cmp
mov
or
lret
aas
pop
das
mov
jmp
mov
xchg
lea
adc
and
jae
cmp
mov
sub
ds
out
adc
and
xchg
icebp
sar
enter
shll
dec
popa
jo
xchg
adc
and
rclb
daa
push
dec
adc
repnz
xchg
ljmp
ljmp
mov
cmp
mov
dec
loope
or
add
sub
push
push
test
mov
aaa
into
push
out
mov
notb
in
sbb
movsb
lret
in
loope
sub
ret
inc
inc
sti
clc
shlb
or
push
push
adc
sub
cmc
sbb
xor
in
mov
mov
cmpsl
imul
test
imul
dec
outsl
mov
aaa
jmp
mov
mov
shl
mov
fwait
xchg
mov
fstpt
pop
mov
mov
xchg
daa
cmp
jp
cmp
and
mov
adc
in
xor
sbb
scas
fdivp
jl
in
mov
aam
and
fdivs
movsl
xchg
aas
mov
adcl
xchg
inc
sub
divl
imul
sbb
sbb
dec
je
int
jmp
adc
jnp
shr
test
mov
pop
mov
inc
xchg
sti
es
jecxz
sub
fnstenv
xchg
and
imul
in
cmp
imul
mov
mov
cltd
sub
out
pop
lahf
mov
dec
bnd
fadds
std
and
dec
sbb
je
cmpsb
andl
fwait
jle
js
xchg
movsl
push
cs
push
pushf
ss
xchg
cmp
rcrb
inc
sahf
clc
mov
inc
mov
and
ljmp
negl
fcomp
les
pushf
pop
mov
into
sbb
add
dec
test
andl
mov
push
mov
mov
shll
adc
push
inc
loopne
repnz
and
mov
nop
ret
xchg
push
push
and
shrb
stos
xchg
out
xor
clc
inc
repnz
lock
andb
ret
mov
add
mov
sbb
dec
les
jle
std
xchg
out
push
sub
xchg
xchg
dec
cmpsb
dec
rcl
dec
push
jmp
jp
and
dec
sub
sarl
cmp
xchg
into
popa
xchg
xchg
rcll
xor
push
mov
subl
push
mov
or
rcrl
lret
je
dec
enter
imul
cmc
pushl
mov
js
mov
lea
in
test
test
fs
repz
rcrb
dec
and
mov
or
xchg
inc
mov
outsb
ss
jg
sub
inc
mov
cmp
dec
icebp
insb
cmp
and
imul
push
push
popf
xchg
adc
cmp
out
push
lock
hlt
repnz
push
cmpsl
ds
xchg
dec
dec
sbb
dec
arpl
cmp
into
outsl
cli
out
std
popf
stos
jb
subl
movsl
cmp
xor
inc
push
cmpsl
out
aad
int3
jg
dec
lret
inc
testb
adc
aam
jp
xchg
ljmp
lods
sub
js
clc
lea
sub
in
xchg
stos
or
push
pop
fsubrs
pop
lods
cmp
repz
call
dec
inc
in
mov
push
mov
add
sub
xchg
cmp
stos
jne
fisttps
fwait
sub
clc
cmp
and
sub
dec
mov
push
mov
add
rorb
cmp
into
jno
lahf
xchg
push
or
test
adc
jecxz
lcall
loope
les
lahf
repz
testb
cmpsb
fildl
push
aas
sub
mov
xchg
int3
decl
in
xchg
push
adcl
movb
pusha
cmp
cmpsl
dec
cmp
repz
and
push
imull
jo
xor
aad
cmp
pop
cli
xchg
xchg
imul
nop
out
test
dec
fists
fdivrs
xchg
pop
cmp
mov
es
sbb
adc
xchg
mov
cmpsb
dec
mov
mov
jge
nop
gs
loopne
movhps
lock
les
pop
jae
icebp
cmp
mov
ja
pop
ret
jb
sti
pop
insl
les
mov
insl
sub
dec
in
cld
mov
shll
mov
stc
into
addr16
cld
scas
xchg
flds
movsb
lock
cmp
fidivrs
push
sub
xor
pop
mov
mov
loop
push
test
ret
test
xchg
adc
jae
xchg
sbb
add
sub
fadd
push
cmp
adcl
inc
jae
sbb
adc
cmp
stos
insb
out
and
int
mov
bound
mov
push
xchg
pop
je
fldenv
sub
pop
sbb
and
rol
pop
pop
push
sub
and
loopne
adc
addr16
push
xchg
cmc
dec
fbld
mov
cmc
pop
jecxz
mov
mov
popa
lret
js
mov
lcall
outsb
ljmp
add
int3
mov
stos
movsl
mov
movsb
imul
test
es
jbe
push
mov
pusha
divl
scas
cld
sub
test
jbe
push
jmp
xchg
out
adcb
xor
aaa
int3
sbb
in
sub
mov
hlt
pop
cmp
cld
scas
scas
dec
sbb
cli
sub
xor
dec
adc
dec
sub
fdivrs
ja
mov
rol
loopne
mov
dec
mov
adc
mov
lret
add
xor
xchg
xchg
out
jl
mov
mov
jl
sti
xchg
cli
setae
test
push
std
idivb
les
xor
adc
nop
insb
xchg
sahf
cmp
iret
and
cs
add
cmpsb
or
nop
xor
jae
adc
sub
inc
sbb
push
or
fsqrt
jp
pop
pop
mov
inc
lcall
in
lret
xchg
mov
loop
ljmp
mov
fcomps
daa
or
sub
mov
andl
mov
movsl
aam
jmp
mov
pop
repnz
faddl
mov
xchg
push
pop
mov
sbb
jp
scas
jnp
rol
dec
subb
inc
push
mov
push
pop
adc
iret
hlt
insl
loopne
xor
or
mov
push
es
jp
in
pop
addr16
jg
mov
lahf
inc
xchg
jecxz
or
sbb
adc
dec
hlt
cmpsb
ror
adc
inc
cwtl
cwtl
cltd
pop
pushf
mov
pop
ffree
clc
dec
mov
ss
inc
cmp
push
or
ret
mov
sbb
imul
js
mov
xor
fistpll
pusha
fiaddl
es
lods
mov
xor
out
mov
or
jo
sbb
ds
sbb
adc
mov
jecxz
cmp
cmpsb
jl
sbb
clc
adc
arpl
mov
add
mov
xlat
jns
movsl
inc
mov
jp
push
fidivl
ja
aad
mov
sbb
testl
pop
in
push
movsb
sti
pop
add
mov
leave
lds
mov
mov
pop
dec
lds
fbstp
mov
outsb
repnz
pop
adc
mov
mov
sbb
jnp
dec
popf
sbb
jecxz
dec
icebp
xor
nop
daa
enter
xchg
lods
push
shrl
shll
nop
shlb
lcall
mov
aad
mov
lock
xor
dec
ljmp
into
lret
mov
sub
mull
sbb
lret
idivb
adc
cld
xor
xchg
flds
in
cmp
enter
icebp
inc
mov
sbb
push
adc
inc
xor
jb
int
push
js
stc
push
scas
pop
mov
lcall
or
cmp
dec
pop
pop
fsubl
mov
pop
jle
jo
cmp
jecxz
clc
inc
add
mov
jp
lret
fldcw
mov
in
out
sti
stos
sbb
movsb
cmp
push
mov
fidivrl
mov
inc
fs
lahf
test
mov
inc
outsb
xlat
dec
hlt
mov
aad
add
mov
ljmp
mov
and
rcll
mov
shll
shlb
mov
pushf
jg
outsb
jl
dec
push
or
addr16
push
nop
movsb
repnz
mov
xchg
add
daa
ss
cmp
popf
push
dec
pop
inc
fcomp
aam
lods
pop
lods
pop
rorb
mov
mov
hlt
adc
mov
jle
push
imul
xor
mov
pop
pusha
and
add
push
lea
aaa
xor
inc
and
add
or
sahf
fidivrl
dec
lret
sub
push
dec
popa
call
mov
fs
jne
ret
mov
adc
faddl
or
test
mov
inc
or
outsl
pusha
cli
lods
std
push
mov
jecxz,pn
popa
adc
push
jb
and
sbb
stos
std
mov
outsb
mov
push
fidivrl
jmp
fsubrs
and
into
gs
xchg
aas
lret
xor
mov
mov
mov
jge
fs
mov
adc
inc
and
test
out
push
mov
cwtl
repz
xor
pop
mov
scas
shl
mov
mov
pusha
icebp
sbbb
mov
repnz
leave
loopne
ret
fcompl
mov
jp
and
out
mov
add
test
iret
mov
js
jno
xlat
repnz
add
js
fwait
fs
fwait
aas
dec
emms
add
push
dec
sbb
cmc
femms
xchg
mov
adc
cmc
int3
inc
iret
jne
das
imul
nop
jae
sbb
dec
xchg
out
inc
lahf
icebp
xchg
inc
ss
stos
mov
cmpsl
fs
ja
notl
ja
or
inc
push
push
push
pusha
mov
scas
ret
push
mov
insb
lds
int
cs
outsl
push
sbb
out
mov
hlt
stos
mov
sbb
or
push
mov
mov
push
and
xchg
sahf
xor
xchg
sbb
inc
fdiv
stos
fbld
out
sbb
test
cli
iret
arpl
lods
lret
std
ljmp
cwtl
aaa
repnz
and
jno
dec
xlat
add
and
or
into
add
jns
mov
push
in
cwtl
and
xor
cmpsb
sti
test
jg
mov
aas
dec
lods
inc
pop
mov
adc
jns
out
aad
loop
sahf
repz
pop
insl
dec
fnstsw
es
mov
xlat
data16
into
lds
test
cmp
dec
fbstp
dec
stos
mov
push
mov
and
loop
xchg
xchg
hlt
push
xchg
cmp
clc
jg
or
push
ficoml
mov
lret
jecxz
movsl
jnp
xor
js
push
push
add
vmwrite
stos
inc
mov
fiadds
adc
int
sbb
cmp
mov
flds
add
xchg
das
xchg
sub
ja
add
and
dec
mov
jne
call
add
sub
adc
imul
andb
push
repnz
jmp
mov
bsr
inc
pop
adc
lds
xor
xchg
movsl
call
inc
icebp
xor
cmp
jno
in
mov
pop
push
pop
pop
fisubl
jae
outsl
sub
outsb
add
js
mov
dec
jl
adc
mov
jl,pt
int3
mov
or
add
sub
mov
sub
adc
fisttpl
sbb
in
test
jns
mov
xchg
inc
mov
xchg
lahf
jle
dec
sub
mov
dec
test
jne
dec
aam
dec
out
mov
fcoms
cmp
fbstp
jle
jo
test
out
dec
and
lcall
sbb
fidivs
xor
test
inc
int
or
jns
push
pop
pop
nop
inc
adcl
nop
xchg
pop
pop
jmp
xchg
jl
jmp
repnz
int
mov
pop
xor
cltd
push
lahf
lods
pop
clc
popa
mov
in
pop
subb
add
dec
adc
push
push
inc
sub
pop
and
test
enter
xor
fs
mov
or
push
xchg
mov
fdivrl
testl
daa
std
jno,pn
dec
fmull
xor
inc
push
and
xor
jle
jb
cmp
jle
das
dec
add
or
and
out
scas
pop
pop
sahf
jp
cmp
adc
inc
iret
add
pop
mov
mov
test
inc
fisttpll
push
adc
jb
push
mov
mov
cmp
fwait
lods
jmp
sub
add
arpl
mov
push
pop
mov
call
stos
sub
outsb
je
jae
lret
adc
mulb
imul
pop
mov
mov
jne
pop
xchg
imul
lock
fcmovnb
in
movsl
xchg
mov
push
or
sahf
or
ljmp
test
xchg
je
xchg
sbb
sbbb
leave
mov
mov
movsb
push
fstl
je
mov
aam
icebp
mov
pusha
sbb
sahf
xor
push
das
dec
pop
jne
sar
sub
pop
fnstcw
shrl
pusha
lret
hlt
leave
pusha
loop
inc
aas
inc
mov
test
inc
dec
cmpb
jo
daa
mov
mov
pop
loope
pusha
or
out
test
mov
adc
mov
incl
or
mov
and
out
add
out
icebp
cmp
jmp
adc
dec
adc
lds
jecxz
shrl
cmpb
pop
cmp
pop
aam
xlat
testb
imul
xchg
enter
insl
jg
mov
pop
sahf
inc
push
push
add
lret
sti
pop
mov
mov
stos
xchg
xchg
mov
gs
divl
shrb
sbb
push
loope
outsb
insb
adc
popf
sub
push
hlt
ja
mov
int
xor
push
ss
jae
mov
xor
ss
dec
mov
ret
adc
xor
lea
scas
pusha
mov
mov
push
gs
cmp
sub
lock
or
shlb
rcrl
scas
pop
jp
sub
and
cli
repz
lret
int3
outsl
or
pop
jle
adc
iret
data16
and
mov
outsl
jp
dec
inc
mov
and
xor
mov
daa
or
insl
fwait
lcall
imul
dec
dec
push
push
addr16
ret
pop
cmp
test
repz
jns
aas
add
lds
int
ret
decb
push
inc
fnstsw
enter
jns
jae
dec
mov
xchg
add
stc
cmpsb
jge
or
add
xchg
and
jno
inc
push
mov
mov
pop
adc
and
pushf
jns
or
push
lock
and
mov
out
pusha
aas
push
sbb
mov
or
cld
jp
es
xor
lret
mov
inc
add
or
sub
sti
and
insb
and
jecxz
test
inc
mov
push
push
mov
pusha
imul
mov
dec
js
ljmp
xor
and
pop
inc
cli
dec
pop
mov
push
and
fwait
jle
pop
sub
rcr
adc
sub
mov
in
xlat
outsl
and
popa
and
adc
push
mov
adc
pop
leave
orb
notl
das
pop
or
mov
cmp
jecxz
hlt
adc
pop
rorb
adc
cmp
addl
lahf
sbb
pop
xor
mov
jo
mov
mov
push
add
les
push
mov
aad
arpl
jge
sarb
mov
sub
add
rcl
mov
loop
sub
insb
pop
lret
mov
inc
sub
inc
adc
xchg
sub
leave
scas
inc
cld
fcmovbe
mov
les
ds
out
test
dec
rol
adc
mov
lods
mov
insb
pop
fld
mov
leave
pop
add
mov
add
loop
or
mov
addr16
push
test
push
jno
in
add
aaa
repnz
or
sbb
jg
roll
xlat
xchg
jge
ret
clc
lea
cmp
lret
or
mov
adc
es
and
jge
mov
out
add
and
inc
xchg
orl
push
in
or
push
add
dec
dec
add
cmpsl
cmp
mov
add
push
insl
ds
ss
and
stos
mov
mov
test
sub
mov
in
adc
addr16
aad
xchg
adc
xlat
nop
inc
pop
cmc
js
pop
in
xchg
call
mov
in
lods
lret
cmpsl
insb
sub
adc
jns
call
cmc
mov
push
or
lds
nop
movsl
dec
out
rcl
pop
shr
and
sbb
sbb
test
clc
lret
stos
insl
mov
das
adc
or
and
in
lea
adc
cmpb
enter
stos
nop
ret
add
out
sahf
xchg
cmp
mov
test
out
push
adc
test
cmpsl
stc
xchg
add
cs
sbb
mov
les
sbb
jns
dec
ljmp
xor
std
in
jno
outsl
add
pop
pop
sbb
sti
xchg
loope
arpl
push
insl
mov
jnp
aam
and
sbb
out
or
jnp
push
pop
jmp
movb
outsb
mov
jl
inc
frstor
add
xchg
inc
into
add
mov
sti
test
or
and
adc
es
mov
pop
idivl
push
sub
arpl
les
mov
pop
js
nop
data16
adc
ja
aas
imul
mov
fucomip
mov
fisubl
add
and
call
inc
fcoml
pop
sbbb
cli
push
xchg
sub
jne
cmpl
or
gs
stos
push
movsb
adc
push
inc
popf
pop
stc
ja
lock
pushf
jg
into
sbb
ja
out
mov
jne
outsb
jl
sbb
mov
cli
test
jb
loopne
jp
mov
sbb
iret
stos
lds
in
sahf
mov
pop
out
jge
pop
ret
xchg
int
insb
xchg
xor
push
aad
lods
cmp
sbb
pop
imul
lret
hlt
test
inc
loopne
jl
iret
gs
mov
push
stc
xor
xchg
repz
psubsb
into
xor
imull
test
hlt
popf
es
push
sub
cld
cmp
mov
enter
fld1
popf
mov
mov
inc
mov
and
bound
pop
mov
pop
mov
inc
sbb
aas
mov
dec
insl
outsb
aad
xor
and
push
sub
out
std
xlat
jne
push
aaa
push
xor
adc
or
ljmp
ret
dec
mov
scas
nop
imul
mov
jne
loopne
and
int
xchg
push
ds
pop
push
in
es
xchg
sub
repnz
sub
cmp
jmp
jecxz
xchg
mov
mov
jle
xor
add
mov
ljmp
or
and
cmp
xchg
ss
xchg
jae
in
and
inc
xchg
inc
and
mov
aas
fsub
fs
dec
into
inc
fsin
lret
rcl
lods
pusha
xor
sub
std
dec
lret
ss
jecxz
out
lock
push
xor
pop
outsl
sub
xchg
loope
mov
sarl
adc
jnp,pn
add
andl
pop
bndstx
pop
pop
ret
add
mov
scas
and
prefetch
or
in
jl
aad
dec
push
imul
pop
adc
push
fmuls
xor
inc
jl
and
push
sbb
js
adc
call
dec
pop
sahf
and
sub
stos
es
jmp
sub
sbb
inc
insl
pop
out
xlat
pop
pushf
xor
add
ret
mov
notb
xchg
inc
pop
jg
dec
sub
pushf
dec
xchg
popf
and
insl
and
jp
imul
cltd
in
pop
pop
mov
pusha
test
jmp
outsb
loope
cmp
jno
pop
or
mov
jns
sub
ja
arpl
mov
aaa
mov
ja
dec
mov
pop
mov
xor
or
stos
push
data16
lds
add
lds
pop
cmp
aam
daa
mov
dec
add
stos
fsubrl
xor
les
stos
jecxz
mov
loop
shll
xlat
out
hlt
add
mov
lds
adc
mov
int
and
dec
int
push
push
jae
rolb
mov
mov
sbb
fiadds
clc
pop
scas
sub
lods
jnp
xor
add
arpl
add
stos
imul
nop
daa
mov
pop
out
mov
sub
jle
in
js
push
shlb
mov
mov
fwait
bound
or
loopne
and
and
or
cmc
and
stos
data16
gs
aam
cltd
mov
int3
js
mov
push
and
mov
xchg
filds
testb
pop
fadd
mov
push
cmp
movsl
pop
push
fnstcw
lret
add
xchg
test
adc
or
mov
mov
adc
inc
push
sub
push
xor
xor
pop
pop
mov
jne
jge
mov
jae
and
xor
mov
lea
mov
mov
shr
or
mov
jbe
icebp
fstps
jbe
xor
lods
lahf
not
mov
movsb
xchg
loopne
mov
mov
fdivl
push
lods
inc
loopne
pop
scas
andb
jl
rcl
lret
inc
push
shll
cmpsl
out
jnp
inc
cmpsb
mov
add
mov
out
ss
push
ljmp
cmp
repnz
cmc
lcall
jne
mov
sti
mov
cmpsb
pop
xlat
xchg
out
bound
jns
push
jl
fmuls
mov
dec
lds
imul
push
sub
das
adc
inc
push
or
data16
pusha
jns
leave
sub
inc
jecxz
rcrl
shlb
mov
jge
mov
push
push
sbb
sar
sbb
or
dec
jecxz
push
sub
fistl
stc
ja
push
mov
clc
in
testb
sbb
clc
sbb
cwtl
adc
mov
popa
jle
sub
adc
sbb
aas
push
test
or
mov
lds
xor
bound
dec
jp
in
dec
dec
ss
hlt
cli
mov
fwait
daa
or
pop
test
sbb
in
insl
sub
adc
icebp
adc
xchg
add
or
xlat
inc
test
or
lret
jo
jl
dec
out
loopne
int
xchg
in
repnz
clc
adc
scas
cmpsl
sbb
push
mov
and
mov
cmp
in
add
ret
enter
fstps
jle
pop
lahf
dec
mov
mov
pop
sub
loopne
and
add
das
push
sub
int3
ja
stc
push
xorb
push
lds
cli
cmp
filds
nop
mov
shrb
fidivrs
test
push
inc
subb
push
aaa
adc
jbe
fcompl
and
jbe
js
sub
mov
adc
push
inc
and
cld
xor
outsl
cmc
popa
clc
es
dec
aam
xchg
xor
loopne
pop
push
sub
mov
test
cmp
xor
mov
fsts
xor
addr16
mov
xchg
test
sbb
mov
adc
mov
xor
rol
jp
stos
jge
icebp
testl
xchg
jle
sbb
int
int3
sbb
push
or
mov
je
hlt
jnp
scas
into
faddl
or
inc
push
inc
pop
loop
add
testb
cld
call
out
pop
adc
mov
data16
xor
inc
js
ret
stc
push
daa
in
int
je
mov
stos
out
sbb
aam
inc
adc
xchg
repz
in
sbb
mov
inc
or
add
imul
adc
rcrb
stc
pop
call
fs
out
vminsd
push
jle
idivl
je
pop
mov
push
or
cmp
pop
jae
into
jb
inc
mov
cmp
scas
jno
dec
pop
out
jbe
xchg
push
pop
mov
mov
popa
push
rcrl
jae
add
xchg
repnz
cmpsl
notl
icebp
xchg
mov
movsl
popa
push
sbb
popa
clc
testl
fldl
mov
xlat
ret
mov
loope
ret
inc
test
push
popf
aad
jmp
rep
unpcklps
sbb
pop
ret
mov
pushf
iret
mov
push
lahf
stos
fistpll
cltd
sbb
push
pop
fiadds
out
pop
and
outsl
dec
movsb
xchg
mov
pop
loopne
jb
iret
push
stc
popa
in
das
ds
fs
pop
icebp
inc
popf
or
mov
arpl
les
daa
jns
fs
into
add
pushf
xchg
push
xor
popa
clc
test
lock
sub
dec
lcall
fucomi
pop
add
add
adc
outsl
insl
stc
stos
shll
jle
inc
mov
xchg
mov
jmp
in
pop
push
mov
inc
out
fbstp
add
in
mov
das
xor
dec
xor
push
sahf
cmpl
or
sbb
xchg
dec
and
dec
pop
aaa
cmp
dec
popa
xor
rcrb
pop
jl
or
repz
xchg
cmp
xchg
mov
inc
jl
mov
sub
sahf
push
sbb
in
xor
sub
dec
faddp
inc
push
out
inc
cli
hlt
add
stos
out
jno
int
addb
in
pop
scas
push
or
lods
push
xchg
inc
jb
lock
aas
adc
inc
pop
dec
and
jno
dec
add
icebp
jecxz
dec
cmp
pop
fwait
jns
cmp
pop
icebp
sbb
mov
dec
inc
aad
jne
ljmp
sub
and
mov
popf
iret
mov
andl
test
jns
popf
test
or
cmpsl
and
pop
in
push
inc
pop
das
movsl
jl
push
fisubrs
adc
inc
push
jno
and
bound
mov
dec
cltd
adc
aam
gs
dec
push
lret
jge
push
outsb
xchg
in
stos
xor
sarl
enter
jle
add
roll
pop
push
mov
push
arpl
dec
lahf
mov
pop
shlb
push
add
mov
add
cs
mov
shlb
mov
shll
jmp
or
adc
cs
out
call
gs
inc
mov
pop
daa
ret
cwtl
sahf
xor
mov
out
mov
mov
js
and
fmull
imul
fiaddl
xor
inc
lahf
adc
hlt
xor
popa
cmp
adc
subl
adc
or
cmp
cltd
inc
lahf
push
pop
fists
enter
push
imul
int
testb
cmp
out
loop,pt
mov
lock
test
jb
cmp
movd
sbb
outsb
repz
lahf
fdivrl
adc
or
stos
in
jno
mov
aas
push
lcall
fmul
xor
fbld
or
iret
rorb
mov
in
cmpb
push
aas
fisubrl
xchg
xchg
cmp
insb
mov
xchg
cmp
mov
fbld
idiv
rorl
lcall
cmpsb
cmp
cwtl
fidivrs
jae
add
test
jmp
dec
repz
sti
mov
mov
into
xlat
out
push
dec
lods
sbb
cs
ret
pop
lret
inc
xchg
push
jg
push
mov
jge
jbe
pusha
mov
push
out
push
insb
in
xor
mov
or
mov
add
outsb
imul
sahf
inc
pop
std
pop
or
and
leave
pop
mov
shrb
ror
ljmp
cmc
mov
sbb
jo
movsb
xor
pop
cmp
adc
push
push
xor
push
lods
scas
sbbb
cmp
mov
push
sahf
xor
dec
out
jb
dec
mov
jo
loopne
test
leave
and
push
fs
pop
xchg
and
bound
into
outsb
jl
push
cli
test
sti
sub
mov
pusha
lods
pop
aaa
clc
mov
out
hlt
es
pop
xchg
adc
rorl
push
cmp
mov
add
push
push
sbb
sbb
or
push
mov
ljmp
repz
xchg
mov
ljmp
push
pusha
testl
shl
mov
dec
notl
dec
add
adc
cmp
nop
or
rol
xor
fimuls
jb
jnp
jp
push
out
push
addr16
in
jne
bound
add
mov
lock
loopne
ret
mov
xor
jne
fstpl
mov
scas
mov
mov
jge
shrb
lahf
dec
icebp
stos
dec
pop
pop
jbe
jo
jp
loopne
pop
in
mov
mov
mov
and
adc
sub
xchg
add
dec
cwtl
daa
popf
inc
dec
dec
ret
dec
pop
cmp
loop
mov
test
bound
mov
sub
adc
or
and
pusha
mov
xchg
jg
stos
fwait
std
xchg
inc
jne
scas
das
sub
sub
mov
mov
or
arpl
mov
daa
xchg
or
andl
fsubrs
xchg
xor
mov
out
sbb
mov
jbe
push
xor
mov
lret
andl
sbb
inc
fisubs
outsl
adc
gs
cs
mov
je
push
and
fisubrs
inc
push
int3
sub
fbld
jns
xchg
push
aas
xlat
clc
stos
test
xor
cs
or
jnp
insb
xchg
jno
push
xchg
shrb
mov
sbb
lds
pop
subl
xlat
shl
fistpll
fsubs
je
pop
adcb
xchg
pop
cmp
jne
icebp
mov
loope
sub
cmp
push
test
and
clc
push
cmp
enter
les
cmp
lods
pusha
mov
test
pop
jmp
fdivp
jo
sub
inc
jno
loop
lods
lcall
sub
push
sub
xchg
cld
addl
or
cmpsb
or
dec
push
mov
scas
andl
pop
sub
jge
lds
pop
pop
adc
nop
xchg
icebp
push
dec
jmp
sbb
jmp
mov
xor
test
out
aaa
nop
xchg
lret
xor
push
inc
jecxz
push
jo
call
sarb
loopne
pop
jo
outsb
sub
leave
add
sub
push
movsl
lret
mov
imul
sahf
ret
xchg
mov
push
repz
leave
mov
jo
dec
or
and
fwait
adc
lods
adc
fsubrl
repnz
stos
mov
jg
fs
jecxz
inc
test
mov
push
xlat
repz
push
inc
fistps
bound
xor
xchg
xchg
jnp
enter
add
popf
fists
push
mov
fisttpll
daa
dec
jecxz
fidivrs
addr16
out
mov
mov
add
inc
push
jbe
mov
fbld
xchg
lods
inc
repz
test
lods
nop
push
or
mov
push
jo
lods
shlb
out
xor
sub
pop
leave
xchg
dec
dec
out
pop
orl
int
in
ds
pop
sub
push
idivb
pop
lds
mov
fsub
jns
push
mov
xor
aad
out
test
frstor
outsl
or
adc
stos
or
pop
test
insl
sbb
frstor
push
jg
addr16
sub
ret
push
lcall
hlt
insb
sub
push
ss
daa
aad
pop
pop
stc
add
and
pop
push
repnz
stos
jnp
xor
pop
and
lock
mov
jns
xlat
push
xor
cmp
stos
cmp
test
orb
lods
out
push
lea
inc
mov
add
popa
push
stos
inc
xchg
add
aad
cmp
mov
movsl
push
insb
add
iret
dec
mov
insb
and
ds
push
inc
xchg
popl
sbb
cmpsb
cmpsb
insl
call
xor
mov
sbb
push
in
out
call
sbbl
lds
popa
mov
imul
dec
fiaddl
js
or
inc
xor
aad
int
popa
add
adc
es
jbe
sbb
rorb
mov
inc
bound
mov
insb
dec
pop
push
adc
push
jne
fisubl
popf
or
cmp
cld
hlt
mov
mov
lods
dec
push
push
mov
popa
xor
dec
dec
aaa
mov
mov
sbb
sub
lret
jno
cltd
dec
enter
stos
ds
loope
inc
adc
dec
push
add
rcl
aad
mov
mov
push
into
mull
dec
int3
lret
cmp
sbb
pop
rolb
repnz
and
pop
or
xchg
and
es
sbb
pop
jno
sub
push
jmp
into
xor
push
xchg
xchg
shlb
dec
xor
xchg
cltd
std
shll
packsswb
lret
dec
adc
hlt
pushf
rorl
test
das
jge
ficompl
adcb
adc
mov
popa
add
xchg
jno
xchg
pop
xchg
mov
ljmp
dec
jmp
sbbb
push
movsb
cmp
pop
mov
mov
mov
or
xchg
lret
push
jmp
daa
into
and
orl
pop
movsl
jmp
pop
push
jo
sub
mov
fs
and
mov
jnp
dec
es
sbb
fs
test
repz
dec
xchg
int
enter
lods
cmpsl
inc
xlat
fsubr
test
imul
sub
dec
aaa
or
xor
in
nop
stos
inc
ret
pushf
clc
xlat
jp
sub
cwtl
jns
mov
mov
stos
pop
sarl
lret
adc
lcall
stc
rcrb
cwtl
mov
add
cmp
testb
mov
outsb
testb
mov
stos
xchg
scas
cli
jge
push
frstor
lds
or
pop
sti
lock
push
add
sub
in
subl
xchg
addb
or
fs
xor
mov
pop
ds
mov
clc
mov
inc
ja
jne
cs
inc
xchg
sub
sbb
sbb
adc
cmc
mov
ljmp
cwtl
imul
clc
sub
xchg
cmp
daa
mov
addr16
and
arpl
in
fistpll
fimuls
scas
mov
sar
cltd
xchg
outsb
sub
ret
push
and
push
mov
adc
testl
shlb
jno
and
dec
and
loop
das
jmp
loopne
in
jecxz
jle
mov
icebp
mov
mov
cltd
cmpsb
insb
lea
xchg
pop
fcmove
stos
jbe
mov
dec
lods
inc
outsl
inc
inc
shlb
lods
test
mov
movsl
test
sbb
out
and
pop
cmpsl
inc
adc
fimuls
xor
or
jg
in
sub
cmp
in
mov
or
pop
mov
xlat
push
lahf
ss
pop
je
sub
movsb
xchg
push
xlat
fdivrl
mov
sbb
adc
cmp
cli
mov
cmp
sbb
rorl
cs
inc
push
push
mov
push
sbb
pushf
leave
push
lds
call
dec
cli
shl
jno
push
insb
aaa
es
mov
ds
xor
xchg
push
push
in
xorl
mov
jg
xlat
pushf
rcll
or
pop
hlt
dec
mov
jnp
mov
lcall
xchg
or
mov
loope
arpl
add
jg
enter
iret
idivl
cmc
pop
cmp
leave
fwait
mov
adc
add
cmp
or
rclb
xor
mov
add
jae
aas
js
sar
icebp
fs
roll
jl
pop
xor
fistpll
or
push
lret
loop
pop
inc
inc
pop
dec
dec
jbe
insb
xchg
icebp
fdivrs
inc
push
sub
mov
and
jmp
fs
hlt
cmpsb
inc
and
mov
ror
les
je
sti
and
jb
in
aaa
movsl
xlat
cmp
push
mov
add
xchg
inc
pop
iret
lock
and
and
dec
pop
lcall
and
ret
mov
testl
mov
xor
sbb
dec
gs
xor
push
mov
mov
std
shrl
aaa
add
stos
insl
sbb
inc
lcall
and
sub
xor
adc
test
mov
mov
push
mov
les
jmp
xchg
and
sbb
jbe
pop
andl
or
cs
outsb
push
pop
pusha
fs
or
lret
inc
pop
das
mov
subb
pop
out
mov
push
out
out
adcl
xor
sarb
sbb
lret
mov
repz
add
mov
fmull
scas
inc
push
sbb
push
nop
add
outsb
jae
leave
pusha
xor
leave
pusha
shlb
lret
shll
mov
and
xchg
or
scas
xchg
mov
push
jno
aam
bound
cmp
aas
in
test
lret
xchg
xor
sbb
sub
sub
cmp
xor
jmp
sarb
outsb
nop
push
out
lcall
ss
aad
cmp
loopne
mov
aas
mov
stc
rorb
mov
int
int3
jg
lods
xlat
not
ss
pavgw
aad
test
into
lock
push
mov
ret
jnp
ja
dec
jo
fnsave
pop
xchg
pop
and
das
movsb
push
dec
pusha
pop
repnz
mov
fwait
inc
pop
adc
fimull
mov
test
jge
push
cmp
mov
push
and
fstl
xchg
adc
jne
fwait
scas
stos
xchg
pop
pop
int3
mov
jne
decb
lods
jecxz
sub
cmp
push
shlb
mov
loop
jns
push
test
cmpb
mov
ret
lret
sub
mov
mov
cld
push
push
pushf
ljmp
push
repnz
inc
mov
xchg
adc
sub
dec
ret
rol
arpl
pop
push
call
mov
outsl
rcrb
dec
fs
cmpsb
vmovups
outsb
out
lret
jl
fnstcw
xor
cs
sbb
inc
lret
pop
repnz
stc
mov
jecxz
mov
mov
sbb
dec
test
mov
js
jg
rol
orb
or
dec
xchg
addr16
sbb
loope
xchg
call
iret
inc
mov
mov
xchg
cmp
into
jnp
cmpsb
mov
iret
gs
sub
adc
testb
mov
push
or
fwait
xchg
pop
sbb
jns
arpl
dec
push
sbb
cli
jecxz
xor
sub
outsl
cmpsl
mov
xor
fwait
mov
divl
push
sub
push
adc
test
mov
hlt
inc
fbld
pushf
fistpl
fnstenv
data16
add
fidivl
sub
lock
push
or
shll
out
call
lretw
jge
cmp
sub
or
movsl
cmp
ja
aad
adc
fldl
scas
outsb
jl
or
pushf
mov
lods
outsl
aas
pop
xchg
lret
outsb
in
fwait
bound
xchg
sub
stc
scas
ja
in
xchg
add
dec
mov
leave
icebp
pop
pop
repz
dec
stc
pop
imul
mov
and
ss
sbb
cld
lret
push
imul
and
xchg
push
outsb
adc
fistpll
adc
or
sub
mov
into
adc
add
adc
push
inc
add
xchg
dec
pop
cmp
cmp
jecxz
dec
sbb
cmc
sbb
inc
pop
pop
mov
ret
pop
dec
xor
popf
cmp
stos
pop
cld
mov
mov
sub
sub
mov
mov
and
ret
test
pop
mov
iret
fisttpl
out
sbb
mov
sub
dec
sbbb
in
mov
dec
add
xor
push
pop
stos
push
out
fildll
icebp
shlb
cmp
psadbw
mov
cmpsb
cltd
jmp
mov
xor
in
sbb
jl
mov
icebp
call
inc
sti
xchg
in
mov
lods
pop
push
mov
inc
pop
cmpsl
test
jge
test
mov
adc
adc
rol
pusha
mov
fucom
push
mov
loopne
xchg
xchg
sub
data16
xlat
sbb
inc
loopne
cmp
mov
sub
sub
repnz
cmp
pushf
xchg
dec
mov
push
xor
cmp
std
cmpsb
jb
add
lret
cmp
std
dec
nop
adc
aaa
adc
push
mov
lahf
push
mov
enter
notb
outsb
cmp
add
out
out
stos
inc
fildl
push
repz
mov
sahf
rcrb
pop
nop
pause
ss
enter
sbb
pop
loopne,pt
mov
lcall
in
test
or
cld
mov
sahf
pop
lcall
or
lcall
xchg
ds
cmc
test
and
ja
pop
mov
inc
fsubs
sbb
adc
repnz
aas
inc
mov
mov
aas
dec
lea
mov
movsb
cmp
aad
jecxz
in
sbb
cmp
jae
cmp
fiadds
cwtl
pop
insb
rclb
lcall
stos
and
lock
loope
iret
scas
push
pop
push
ror
mov
cli
icebp
mov
cmp
hlt
push
mov
imul
and
out
add
sarl
adc
out
mov
xchg
mov
daa
sub
ror
pop
mov
sub
fildll
les
in
test
jnp
dec
lcall
fucomip
pop
jnp
lods
aam
fsubrl
mov
jb
push
out
inc
xchg
cli
sbbb
pop
push
aad
cmp
sub
into
stos
dec
into
cmp
iret
and
jnp
push
insl
test
ret
iret
lcall
mov
cmp
iret
push
pop
jae
test
mov
ds
push
sbbl
xchg
xor
ja
bound
inc
jmp
add
subb
imul
cwtl
stos
xchg
add
mov
adcl
sti
jb
mov
and
push
jo
pop
xchg
add
or
cs
sub
lods
sub
push
inc
xchg
add
rcrb
enter
jbe
rolw
mov
insb
in
mov
cmp
imul
jp
fs
xor
ficoml
push
push
mov
ret
outsl
cmc
mov
jno
xchg
mov
test
loope
clc
mov
push
pop
addr16
fs
shll
adc
mov
xchg
cs
test
sbb
mov
rcrb
pop
popf
sbb
das
pop
add
cli
mov
push
shll
adc
sub
and
pop
push
pop
data16
cs
dec
fldcw
loope
jb
sarl
fcoms
xchg
cli
je
aaa
mov
iret
add
iret
xlat
sub
mov
clc
or
insb
mov
push
xchg
xor
jne
mov
loope
dec
pop
and
and
dec
fistpll
dec
in
mov
jnp
sub
dec
cmp
jle
pop
xchg
add
add
adc
dec
rcrl
sub
pop
push
adc
jbe
jnp
pop
pop
cmc
sbbb
mov
ds
in
test
xchg
cmpsb
adcl
mov
mov
subl
jmp
mov
push
clc
mov
mov
jbe
pop
je
mov
loopne
cld
or
sub
lock
dec
shlb
push
aad
mov
adc
outsl
mov
mov
les
aad
mov
push
inc
loopne
and
dec
fildll
cmpsl
pop
add
push
rcrl
enterw
and
bound
stc
sbb
pop
and
out
sub
mov
divl
mov
les
mov
test
pop
pusha
nop
ror
int3
pop
adc
mov
pop
mov
je
pop
mov
mov
stc
xchg
sbb
or
inc
cmp
mov
jb
out
dec
rol
mov
pop
pushf
cli
aad
pop
cmpsl
xchg
orb
repnz
cmc
cmp
adcl
mov
pushw
xchg
incl
cmp
mov
mov
shlb
aad
push
inc
in
pop
popa
jbe
dec
insb
adc
cmp
push
sbb
mov
sbbb
cmp
cmp
push
cmc
cmp
xchg
jnp
aad
std
dec
loopne
into
fldt
mov
mov
mov
fbld
pop
into
fdivl
insb
shrl
es
mov
pop
repnz
pop
add
mov
xchg
test
add
int
pop
push
lcall
cmpsb
inc
out
push
mov
lret
mov
inc
lods
fiadds
pop
xor
push
pop
xor
mov
stc
popf
lea
into
fs
aaa
test
or
mov
cmc
dec
insb
cmc
hlt
imul
push
mov
xlat
fnsave
decb
adc
negb
pop
cmpsb
or
stos
xor
ret
push
dec
in
jns
inc
cld
and
lods
subb
push
rol
imul
and
pop
jno
inc
add
insl
adc
mov
cmc
mov
jp
fnstenv
xor
imul
roll
jae
push
rol
xchg
jb
stos
add
dec
int3
arpl
adc
shlb
fdivrs
dec
gs
cmpsl
mov
mov
repnz
mov
mov
push
out
jno
popa
xchg
cmpsb
fcmovne
loope
jo
daa
add
sub
push
cmpsb
xor
mov
bound
cmpsl
scas
fcoms
fadds
ror
mov
loopne
push
in
sub
aaa
shl
lea
popf
stc
insb
cmp
adc
sbb
mov
adc
xlat
mov
jns
cmp
pop
xchg
inc
sbb
push
xchg
out
in
dec
sbb
ljmp
inc
inc
add
nop
sub
mov
stos
jmp
push
insb
adc
in
mov
call
test
sub
mov
mov
mov
sbbb
sbb
std
sbb
iret
sbb
lea
sti
jle
es
iret
mov
cwtl
jmp
scas
inc
jno
mov
addr16
clc
mov
into
xchg
add
pop
pushf
sbb
daa
sbb
ds
lock
and
xchg
add
pop
jb
and
cmpsb
pop
lock
hlt
xor
pop
test
or
enter
mov
adc
inc
and
and
test
mov
fimuls
addr16
filds
sub
stc
sbb
mov
adc
jno
xchg
xlat
pop
xchg
mov
jno
fdivs
inc
bound
push
bound
pop
ficomps
inc
cld
adc
mov
sbb
adc
xlat
test
leave
mov
fbstp
push
adc
lret
std
clc
push
cmpsb
out
pop
inc
dec
aaa
daa
push
mov
jmp
pop
xor
rcl
adc
cltd
out
sbb
xchg
mov
dec
mov
mov
movsl
cmp
cmpsb
movsb
pop
adc
adc
cmp
cli
loope
das
cwtl
push
daa
fadds
mov
lods
sbb
scas
sbb
es
jmp
mov
push
fmul
movsl
aaa
jg
add
cmp
pop
cmpsb
lock
adc
mov
enter
pop
xor
stc
mov
push
cmp
in
rcll
add
pop
popf
loopne
xchg
into
and
cmc
mov
enter
in
sbb
mov
jnp
xchg
pushf
mov
adc
xor
inc
xor
jmp
pop
mov
lea
add
sbbb
or
pop
mov
mov
lcall
dec
or
jo
pop
mov
ljmp
test
mov
stc
stc
in
leave
and
push
or
call
clc
sbb
out
adcb
push
xchg
sub
dec
xor
inc
jo
stc
popf
leave
test
sbb
pop
repnz
test
ja
sarb
popf
add
idivl
inc
push
cmp
xchg
cld
push
dec
cmpsl
dec
push
nop
fidivl
push
xor
testl
rol
pop
adcl
sub
out
adc
imul
push
jge
jp
jecxz
stos
jae
aam
mov
dec
cltd
push
pop
lahf
xor
stc
out
inc
data16
lods
jmp
xchg
fwait
ljmp
add
bound
jge
sub
push
and
orb
or
mov
iret
mov
inc
daa
ret
mov
push
mov
cmpl
mov
adcb
inc
mov
inc
mov
inc
push
fwait
test
fsubrs
rolb
sub
pop
not
ret
cmp
arpl
inc
and
orl
sbb
lret
data16
mov
lods
push
sub
insl
cmp
push
jo
inc
int3
movsb
call
andb
out
scas
push
rcr
shlb
and
xchg
dec
lods
jle
sbb
je
sub
sbb
pop
shrl
inc
and
add
dec
mov
and
xchg
shl
mov
xor
data16
xor
xchg
mov
ljmp
popf
xor
nop
push
fxam
xchg
inc
stc
loope
loope
cmp
adcb
call
cmpsb
in
inc
jl
in
rolb
cltd
js
mov
and
nop
xor
adcl
xchg
fsubrl
int
call
in
out
fsubrl
fbld
mov
push
pusha
sub
test
stc
push
xlat
jo
add
jo
pop
cmp
repz
xor
mov
out
lahf
jb
testb
mov
cwtl
sub
movsl
sub
lods
sar
jl
and
xchg
or
test
bound
pop
test
loope
loopne
mov
mov
jo
inc
xchg
sub
in
pop
cmp
aaa
xchg
jo
ds
add
sub
lods
ja
dec
pop
mov
sahf
fisubrl
aaa
pop
pusha
out
jo
adc
sub
into
mov
imul
ljmp
dec
sub
je
pop
insb
bound
lret
fldcw
decl
scas
out
mov
inc
jl
cmp
fisttpl
movsb
into
mov
loop
dec
xor
jbe
sti
adc
les
std
mov
xor
and
adc
sub
insb
sarb
xchg
test
repz
in
xchg
push
mov
sub
int
add
dec
push
dec
cmp
arpl
stc
sbb
pusha
ss
or
xor
cmp
sbb
pop
sub
xor
mull
mov
push
adc
jmp
and
push
sahf
cs
ss
ret
push
nop
loope
fs
xchg
inc
enter
mov
or
ss
push
push
movsb
sub
xor
hlt
xchg
mov
dec
push
sti
sbb
mov
push
ret
jp
xchg
push
out
cli
and
out
mov
lods
daa
adc
fidivs
test
dec
shr
inc
leave
mov
mov
jo
pop
repz
cmp
adc
enter
mov
push
and
pop
pop
and
mov
pop
hlt
stos
mov
xor
js
les
das
addr16
mov
lock
mov
push
jge
in
test
aas
rclb
lret
jae
push
jno
pushf
nop
jp
pushf
cmp
test
and
lcall
out
dec
loopne
mov
adc
mov
repnz
shll
and
cmpsl
push
aad
pushw
inc
cs
jle
scas
inc
pop
mov
push
bnd
fnstenv
je
mov
mov
push
mov
fidivs
adc
and
sbb
adc
mov
filds
fcmovnu
add
cmp
sbb
xor
mov
mov
loop
xor
cmc
jl
inc
fs
hlt
mov
adc
test
push
call
and
pop
push
inc
mov
jge
fdivs
mov
mov
dec
andl
push
adc
or
mov
sarl
adcb
inc
inc
pop
jb
push
aas
pusha
cmp
dec
sahf
xchg
sub
leave
jae
clc
sahf
jmp
sub
sub
sbbb
or
sbb
sbb
inc
xchg
scas
jle
bound
jo
xor
xchg
adc
lea
fists
inc
sbb
inc
testl
sub
or
hlt
push
out
stc
nop
pop
mov
add
popa
or
test
lock
mov
mov
push
add
psubq
or
xchg
sbb
mov
jnp
in
pop
fidivl
mov
or
dec
push
or
clc
pop
push
aas
lcall
jbe
rclb
mov
add
xor
shrl
lret
out
xor
in
movb
jo
xlat
loopne
adcl
xor
stos
movb
repnz
mov
ret
sarl
outsb
sbb
stos
cltd
loopne
ret
negb
inc
popa
cmp
xchg
mov
xlat
das
ss
fiaddl
mov
mov
push
testb
and
shr
add
je
pop
cwtl
mov
or
iret
xchg
sahf
popf
xor
dec
xchg
aas
aad
push
cmpsb
sbb
or
aaa
into
ret
aam
faddp
cltd
sbb
push
fscale
xchg
int
sbb
add
or
aam
dec
in
mov
arpl
or
pop
lock
and
pop
xchg
in
sbb
dec
jne
inc
xchg
leave
negb
inc
fmull
push
pop
mov
pop
xor
jbe
data16
mov
inc
fcmovnu
push
clc
popl
cld
xchg
negl
xlat
outsb
mov
pop
push
pop
scas
inc
or
pop
jp
inc
fistl
fucompp
or
ret
pop
mov
dec
in
xchg
mov
sbb
in
fwait
xlat
dec
sub
test
arpl
and
fwait
xor
hlt
mov
aam
mov
and
push
int
pop
repnz
shrl
int
int
jg
xor
add
ret
jbe
fldenv
xor
xchg
mov
cltd
xchg
jb
aad
mov
icebp
xor
pop
dec
clc
stc
popf
inc
xor
out
in
sbb
repz
and
push
mov
pushf
push
and
lds
test
jae
popf
jb
cmp
hlt
mov
bound
lcall
adcl
ret
bound
xchg
jp
bound
outsl
aam
stc
and
mulb
jbe
arpl
jbe
push
push
shrb
ljmp
jmp
sar
dec
dec
mov
inc
jg
imul
mov
stos
movsl
mov
mov
arpl
add
testl
adc
incl
mov
movsb
and
jecxz
f2xm1
push
mov
xchg
jl
and
xlat
les
push
rcl
outsb
xchg
dec
mov
cmp
pop
outsl
jbe
xchg
mov
sub
decb
es
sti
insl
and
leave
pushf
daa
mov
xchg
add
push
rcrl
and
pop
pop
pushf
sub
xlat
lret
popa
js
cld
inc
and
and
into
loope
popa
paddsb
ja
and
shrb
movl
cmp
cmpsl
lds
in
mov
pop
mov
or
push
lahf
dec
lea
insl
ret
jnp
clc
cmp
xor
ret
loopne
cmp
lret
gs
xor
push
push
inc
xlat
inc
decl
lods
test
dec
int
cmp
movsb
cmp
ds
roll
ret
inc
push
sub
sbb
adc
mov
dec
xor
sub
sub
out
repnz
nop
and
ret
addr16
and
not
cs
enter
jnp
pop
add
mov
fiaddl
adcl
ficoml
rcr
das
pop
scas
pusha
into
rclb
not
fldcw
sub
jecxz
fidivl
sub
cmp
adc
sahf
out
and
inc
pop
lcall
cmp
mov
push
inc
es
gs
jae
cmp
push
enter
cmp
mov
divl
inc
gs
jmp
loope
in
stc
ss
out
inc
aad
push
shl
sub
jg
sub
cwtl
cmp
dec
add
jbe
addr16
xchg
insb
scas
les
mov
push
dec
scas
hlt
test
and
sub
add
or
xchg
mov
ss
push
fcomip
xchg
mov
decb
movsl
mov
mov
ret
mov
push
add
std
jo
ds
adc
pop
dec
mov
jnp
pop
sub
aam
jbe
and
fldt
dec
mov
pushf
mov
or
mov
lret
cmpsl
add
xor
inc
test
clc
push
pop
mov
arpl
dec
out
pop
leave
xor
stos
mov
dec
adc
out
xor
dec
dec
cmp
icebp
pop
xchg
xor
adc
pop
fcompl
push
addb
mov
insw
and
adc
ljmp
xor
cltd
cmc
pushw
mov
jmp
mov
add
xor
test
xor
clc
outsl
std
mov
sahf
push
push
mov
std
nop
das
lcall
insb
jmp
shlb
pop
sub
into
jbe
pushl
out
lock
shrl
adc
popf
dec
push
std
inc
mov
movsl
mov
pop
push
subl
mov
or
mov
jnp
loop
jl
mov
inc
orl
out
lea
xchg
jmp
outsl
daa
or
mov
aam
cmp
mov
or
mov
lahf
pop
sub
movsb
mov
fstpt
repnz
mov
adc
lcall
push
out
inc
sbb
or
in
dec
adc
sahf
add
jl
inc
leave
lods
add
mov
out
call
xlat
aaa
mov
push
mov
aas
dec
pop
mov
fisubs
sbb
xchg
pop
sbb
scas
mov
nop
mov
mov
jp
in
scas
xor
mov
and
add
push
leave
fs
push
pusha
int3
xor
out
sbb
push
rclb
ds
jb
cmpsl
in
xlat
mov
add
bound
dec
xor
je
lods
push
shl
xor
push
jmp
negl
dec
and
sub
in
js
and
cli
out
insb
pushf
inc
mov
fadd
iret
loop
inc
int3
sahf
repnz
add
fldt
xlat
mov
pop
cmc
jo
daa
sub
outsb
aas
test
xor
mov
lods
push
push
sbb
pop
sub
imul
cmp
xlat
icebp
push
insl
sub
insb
leave
or
test
push
movsl
fnstenv
cmp
mov
out
test
fisubl
and
in
xchg
insb
or
push
push
cmc
xchg
adc
push
and
les
sbb
push
out
sti
mov
inc
mov
test
xor
jle
dec
mov
inc
dec
into
push
subb
pop
cs
sub
pushf
pop
xor
inc
daa
lret
or
cwtl
mov
int
or
sbb
aas
xorl
lcall
xchg
jnp
jl
mov
lcall
popf
loopne
test
jmp
push
mov
sub
mov
pushf
xchg
and
jbe
or
jl
ds
xchg
fistpll
nop
ljmp
out
xchg
scas
jne
jge
adc
cmc
jno
daa
cmp
fstpt
nop
jbe
fnstenv
stos
xor
mov
cmp
in
mov
rclb
mov
and
popf
daa
inc
inc
push
stc
inc
inc
cwtl
xchg
sbb
adc
inc
push
xlat
sub
in
les
test
mov
and
jl
push
lcall
push
mov
sbb
push
adc
xchg
outsb
adc
jl
jb
mov
orl
ret
mov
out
fisubrs
rorb
hlt
push
jg
jbe
pop
add
and
mov
and
ds
xchg
sbbb
mov
push
nop
push
xchg
xchg
cmp
cli
insl
notb
test
mov
add
fs
rcrb
lock
xchg
cli
notl
or
and
jg
pop
jns
andl
shrb
fsubrl
xor
push
outsl
test
adc
stos
fistpl
or
add
mov
push
icebp
xor
fidivrl
mov
inc
dec
add
cmc
jno
jb
mov
adc
sub
jnp
mov
jno
inc
sub
out
les
xor
mov
mov
int
jno
enter
lcall
shll
cmp
sub
shrb
pop
cmp
insb
mov
adc
xor
adcl
shll
les
pusha
out
adcb
es
sub
jno
or
mov
ffree
aam
loope
push
or
aad
push
mov
sbb
and
data16
dec
xor
pop
cmp
dec
fisubl
in
xchg
add
popf
mov
jno
jle
jbe
jne
ss
sbb
fcoms
sbb
mov
popf
inc
inc
sbb
and
cmp
sahf
sbb
mov
jne
mov
cmp
sub
aad
loopne
inc
aaa
adc
mov
add
gs
push
mov
fucompp
test
insl
imul
and
mov
adc
xchg
aaa
cmpsb
clc
pop
lret
push
scas
dec
push
js
lret
sbbl
mov
pop
mov
mov
ljmp
xor
pusha
jbe
mov
adc
movsb
rorb
mov
and
iret
xor
pop
inc
decb
sbb
lods
in
mov
shll
loop
push
out
xchg
dec
lods
mov
sub
adc
lds
sub
aaa
or
out
sbb
movsb
mov
lea
mov
or
cli
les
iret
in
xchg
add
fsubrs
insl
sti
ja
lahf
mov
push
out
sbbb
fs
sub
and
sub
ret
loope
mov
push
xchg
stos
dec
fidivrl
mov
and
popf
mov
add
pop
in
pop
enter
icebp
adcl
mov
fdivrs
je
mov
cmp
pop
push
into
mov
pop
mov
mov
add
lds
xchg
add
rcrl
ja
andb
inc
cltd
cli
movsb
inc
cmp
xchg
out
cmpsl
lcall
pop
outsl
xchg
push
imul
lods
dec
call
sbb
add
mov
pop
adc
test
push
dec
sarb
add
sahf
sub
aaa
pop
iret
mov
push
out
xchg
nop
xor
pop
jbe
cmpsb
jnp
testb
shll
cmp
or
dec
adc
mov
push
aam
xchg
pop
jae
mov
pop
add
xchg
lea
xchg
ror
jecxz
subl
adc
and
xchg
add
inc
add
xor
and
mov
dec
out
xchg
jns
fstps
jbe
jo
inc
add
test
mov
and
jb
cmpl
xor
sub
or
sti
loope
hlt
scas
jle
push
in
mov
push
scas
or
jne
xchg
loope
dec
pop
aaa
fmul
push
sub
dec
shr
mov
push
xorb
cmpsl
jg
in
enter
push
cli
pop
jg
pop
in
movsl
cltd
or
jns
cmp
jg
rcl
push
outsb
incl
fldenv
js
xchg
mov
push
or
push
ja
mov
nop
hlt
sbb
sbb
dec
lock
aas
and
cmpsb
lds
cmp
pop
and
leave
mov
jl
daa
lcall
adc
scas
hlt
loop
sub
mov
fucomip
movsb
cmp
cmp
and
ret
cmp
mov
mov
ret
push
mov
jg
and
pop
pop
lret
scas
and
jb
push
int3
pop
popf
cmpsl
mov
sahf
mov
iret
jb
pop
jae
aam
lahf
inc
pop
jmp
mov
adc
shlb
cmc
mov
sahf
shl
xchg
xchg
mov
sti
mov
jno
rcrl
push
mov
hlt
in
cld
and
push
lea
push
lea
xor
leave
loop
sub
mov
fstps
ja
push
lcall
mov
popa
mov
adc
pop
push
or
mov
cmpsb
dec
mov
push
movsl
enter
test
sbb
pop
xchg
cmpsb
cli
pushf
dec
jbe
dec
mov
pushf
repz
add
orl
xchg
movsl
loope
insb
sbbb
mov
mov
pop
xchg
push
clc
enter
mov
xchg
xchg
stos
lcall
xlat
les
and
xor
push
pop
xchg
or
push
lea
pushf
fsts
add
repnz
aam
cmpsb
jns
div
dec
mov
in
xor
imulb
loopne
xchg
fisubrs
sbbl
imul
outsl
add
stos
js
pusha
idiv
lcall
xchg
addr16
pushf
adc
sub
test
aam
orb
jl
clc
sahf
lea
call
orl
push
inc
xlat
adc
xchg
dec
xor
cmpsb
repz
stos
insb
cmp
add
aas
and
in
psllw
jge
inc
pop
shll
or
inc
movsb
mov
imul
xchg
sub
inc
scas
dec
pop
jo
mov
aaa
push
in
nop
xchg
mov
jmp
push
imul
cmp
and
add
repnz
ss
mov
negb
sbb
lock
cmp
or
cmp
out
lods
dec
loopne
not
cltd
scas
sub
jbe
mov
push
test
dec
xor
cmpb
icebp
mov
and
push
or
push
pop
jg
mov
xor
mov
xchg
and
mov
ljmp
enter
fdivr
push
inc
ret
lret
jae
cwtl
stos
lea
sub
repz
jo
loopne
pop
fdivl
jle
push
lods
adc
dec
mov
mov
enter
push
adc
lahf
addl
sbb
loope
test
call
adc
fstpt
scas
mov
xchg
push
push
or
test
sub
inc
pop
push
pop
cmp
and
jb
rcrl
sub
cmp
inc
shrl
mov
sub
sti
mov
fdivp
cmp
insl
xor
dec
aas
push
push
sbb
cmp
sub
dec
lret
in
xchg
push
pushf
pop
jae
mov
adc
mov
adc
lret
mov
push
mov
clc
cmpsl
sub
mulb
mov
pop
mov
aas
pop
jl
pop
and
fidivrs
inc
pop
mov
daa
subl
mov
into
xor
mov
dec
jmp
cld
ret
mov
movsl
jge
adc
dec
in
lods
insl
mov
fwait
outsb
fsubrl
mov
jae
pop
cmp
jp
lcall
mov
fdivs
ud0
insl
sub
jge
lret
xor
dec
lds
push
loopne
inc
adc
and
sbb
sub
adc
call
incb
push
xchg
push
jp
xor
mov
cld
xchg
sbbl
in
cwtl
dec
xchg
mov
lods
xor
mov
ret
sbb
inc
lret
or
dec
jno
adc
clc
xchg
inc
sub
push
add
mov
mov
popl
sbb
jmp
pop
movsl
add
jecxz
mov
push
jb
pop
shrl
mov
push
imul
or
push
fbstp
lock
repz
and
mov
stos
inc
adc
push
fs
cmp
into
popf
jo
push
cmp
xchg
outsl
dec
aaa
jno
xchg
insl
notb
movsl
sti
rol
cld
xchg
aam
int3
fcoml
mov
aas
aad
pop
fnstsw
sti
repnz
lret
insl
lock
stos
adc
add
fimull
in
and
xchg
aas
test
adc
xor
adc
push
outsl
push
pusha
sbb
mov
fs
jecxz
sbb
fwait
adc
bound
add
test
mov
sub
push
mov
sar
jne
out
cmp
xor
cmpsb
pusha
pop
pop
xor
pop
mov
iret
test
jge
ffreep
inc
ret
outsb
flds
add
dec
ja
adc
js
and
cltd
and
insl
sbb
add
mov
rclb
popf
sub
xchg
sub
sbb
dec
pop
jo
or
cmp
jns
push
arpl
inc
add
jbe
clc
or
ret
jns
pop
pushf
or
fnsave
sub
lods
subl
push
and
mov
xor
out
cmpsb
xchg
sub
in
in
lret
push
add
sub
scas
xchg
lods
inc
insl
jg
sbb
inc
push
hlt
ljmp
and
rorb
movsl
add
sub
cmp
lea
pop
mov
mov
cld
mov
outsb
fbld
bound
out
popf
push
incb
pop
lds
fdivrs
push
push
dec
xor
mov
pop
mov
clc
sub
mov
hlt
je
dec
out
lods
int3
push
and
aas
aad
bound
cmp
inc
ljmp
rdmsr
leave
inc
fldenv
jae
xchg
inc
stc
cmc
jmp
xchg
inc
pop
push
push
pusha
mulb
stos
insb
fs
inc
loop
cmp
sub
aad
inc
ret
add
mov
gs
test
and
les
or
mov
jle
push
mov
push
ds
cmc
sub
imul
cmp
ret
push
hlt
andl
mov
sbb
cmp
imul
or
outsl
imul
insb
pushf
dec
icebp
aaa
nop
xchg
mov
dec
int
jne
jge
pop
mov
les
movsb
adc
rorl
jns
sbb
iret
mov
ficoml
push
popa
mov
mov
cmpsl
adc
gs
add
call
inc
sub
mov
outsl
inc
sti
push
push
mov
adc
sub
lret
out
mov
fdivl
push
jle
jne
and
mov
push
jg
sbb
sarb
andl
inc
or
out
dec
ficompl
fadds
dec
test
xchg
pop
jo
xor
loope
cld
sbb
or
jae
xor
cmp
mov
pop
out
pop
hlt
inc
cmc
adcb
push
out
sbb
xchg
jle
aaa
into
push
mov
lds
ffree
test
mov
mov
mov
dec
in
jge
or
lods
dec
add
out
jno
sti
adc
mov
ljmp
icebp
push
imul
add
inc
test
outsl
and
push
fisttpl
movsl
icebp
test
ret
ljmp
add
ret
mov
push
push
pop
jbe
jne
jl
ljmp
inc
mov
dec
loop
pop
lret
test
or
jb
pop
out
sub
or
pop
repz
insb
fistps
mov
fisttpl
outsb
inc
test
cmp
mov
mov
roll
jnp
lods
sub
aam
and
mov
aad
inc
adc
fidivl
stos
leave
mov
sbb
xor
inc
and
mov
jge
push
mov
jbe
mov
xchg
stc
mov
xlat
jnp
cmp
andb
jle
lods
inc
stc
lahf
sub
xchg
xor
jp
or
les
loop
mov
adc
fdivrl
xchg
xchg
bnd
xlat
cmp
dec
add
jno
sbbb
pop
scas
inc
fsub
ja
jecxz
dec
dec
stos
dec
push
push
mov
insl
fildll
fnstcw
inc
mov
fdivl
xor
mov
dec
pop
or
push
int3
jns
ljmp
pop
mov
dec
xchg
iret
insb
pushf
xor
xor
fcoml
push
push
call
mov
and
popf
mov
jne
mov
in
adc
int3
fidivrs
sbb
jge
add
push
cmc
loop
xor
pop
in
push
bound
shr
lods
pusha
idivl
test
pop
sub
or
pop
outsl
xor
mov
notl
out
add
cmp
pop
inc
aaa
or
pop
ret
mov
dec
mov
mov
sbb
loop
mov
sbb
jo
mov
stos
fidivl
das
or
cmp
xchg
sbb
sub
shrl
sahf
xlat
sti
sarl
and
lods
pop
adc
xor
cmp
enter
das
vpcmpgtw
adc
imul
inc
cli
lea
cmp
mov
movsb
lcall
int
inc
jb
xor
jns
in
mul
dec
push
push
js
inc
fstps
mov
fxtract
mov
or
leave
sarl
lock
nop
shll
test
xchg
sub
fidivs
cmpsb
aaa
mov
jnp
jp
rclb
adc
jecxz
enter
fldt
push
and
mov
fiaddl
xor
xchg
insl
cs
jns
repnz
dec
dec
and
xchg
dec
icebp
stc
and
aam
stc
inc
cmp
aaa
pop
xor
pop
push
in
mov
orb
imulb
or
aas
out
mov
jmp
out
es
movsb
or
out
mov
add
pusha
scas
test
insl
nop
mov
shlb
or
mov
adc
aam
push
stc
shlb
sub
cmp
adc
int
sbb
pop
or
jo
cmc
dec
pop
cmp
bndstx
popf
cld
mov
loope
lret
adc
dec
loopne
imul
pop
pop
push
xchg
sub
lahf
mov
rcrl
pushf
fcomp
ljmp
jno
fwait
push
cmc
pop
lods
xchg
aas
xchg
dec
je
outsb
mov
mov
and
mov
rclb
movaps
pop
lods
jns
pop
lock
sahf
dec
xor
popf
or
pop
and
js
aad
sub
add
lock
dec
outsl
loop
pusha
pusha
xor
push
xor
scas
push
test
xchg
mov
xlat
xlat
mov
clc
imul
ds
jne
mov
sbb
push
shlb
sbb
pop
adc
outsb
push
jmp
rcrb
pop
jg
ja
xchg
mov
cmpsb
xor
sub
push
scas
jbe
out
stos
stos
inc
sbb
testl
into
popa
add
notl
cmp
ret
xlat
mov
add
scas
xchg
pop
jne
js,pn
and
aad
jmp
pop
cmc
jmp
dec
pop
cld
or
nop
div
pop
pop
xchg
sbb
ret
lcall
sbb
sbb
mov
add
push
js
fldcw
pop
mov
jmp
fnsave
push
hlt
lds
nop
adc
jg
jns
rcll
adc
jb
mov
subl
mov
fsubrl
adc
movsl
inc
dec
jne
inc
subl
xor
sub
inc
mov
hlt
out
xorl
add
xchg
dec
mov
bound
leave
mov
jge
and
push
scas
or
pop
daa
and
push
xchg
js
push
repz
mov
sbb
cmp
jg
nop
and
xchg
fisttpll
iret
lcall
pop
dec
in
lods
ds
test
xchg
push
lods
js
in
fcmovnbe
clc
das
sub
gs
inc
lea
sbb
mov
sub
mov
mov
dec
mov
or
mov
insb
inc
mov
aaa
int3
mov
dec
mov
xlat
push
sahf
mov
imul
out
mov
popa
or
xor
push
out
push
test
mov
jns
jno
js
xchg
xchg
je
out
rcll
mov
cld
mov
in
sbb
inc
xlat
adc
pop
cmc
out
jb
jbe
xor
fs
jmp
enter
adc
lods
inc
lahf
push
rep
xor
lret
jne
ljmp
sub
jno
dec
cmp
pop
push
sub
mov
pop
adc
call
mov
sub
or
jg
mov
jo
mov
dec
sbb
jne
cmp
in
scas
xchg
in
and
pop
je
adc
dec
xchg
dec
dec
sub
push
pop
es
mov
jp
cmp
jle
loop
sbb
inc
fbstp
cmp
and
jl
fbld
mov
add
aam
mov
addr16
out
repnz
jmp
cwtl
jo
add
clc
or
xor
es
and
xlat
ss
sahf
lods
mov
stos
test
outsl
jnp
ret
test
ret
inc
fs
in
jl
inc
fldl
arpl
push
mov
adcl
fistl
ret
pop
adc
xor
lret
loope
out
aad
lcall
and
outsl
cmp
sbb
push
adc
ja
xchg
test
imul
push
test
cwtl
sarl
mov
push
jae
xor
fsubl
jg
out
inc
sbb
js
sub
xchg
test
cs
pop
dec
pop
sar
fistl
add
cmp
mov
and
mov
cmp
cmp
xchg
in
test
push
push
jle
pop
adc
pop
cmpl
dec
pop
imul
jnp
push
jno
movsb
sub
pop
lods
mov
iret
js
push
orb
xor
testl
cmp
insl
mov
pop
mov
sbb
mov
popf
and
dec
movsb
stos
xor
sub
lret
xchg
mov
dec
movsb
fcmovnu
and
push
in
cmpsb
mov
cmpl
xchg
jle
cli
sarb
pop
gs
pop
and
popf
incl
inc
arpl
aaa
xor
test
les
pop
and
loope
inc
inc
sahf
adc
or
mov
in
pushf
ljmp
dec
inc
enter
shrl
mov
outsb
add
push
je
stc
or
cmp
inc
fldt
or
add
and
popf
fs
out
dec
mov
xchg
popf
mov
push
push
pop
jo
ja
and
stos
in
jmp
dec
loop
jae
mov
mov
xor
ret
data16
addr16
inc
push
je
fldt
pop
fdivrl
lret
xor
push
jno
xor
push
xchg
lods
add
mov
loopne
mov
push
push
shlb
inc
call
dec
mov
mov
pushf
movsl
adc
xlat
mov
rorb
fs
pop
jb
pop
xchg
sti
int
ret
mov
mov
add
xor
movsl
xchg
cld
adc
lret
add
shl
mov
add
imul
addr16
ret
jae
out
fisttpll
mov
aam
jp
xchg
add
xchg
jle
clc
push
xchg
gs
ja
adc
lcall
mov
js
mov
push
push
iret
push
enter
and
lret
mov
fs
and
bound
pop
adc
insb
jbe
stos
cmp
cltd
sbb
or
lcall
pusha
je
arpl
pop
in
xchg
int
add
jbe
iret
cli
pushf
or
add
mov
push
jb
ja
test
aam
std
mov
dec
shrl
ret
jnp
icebp
movsl
shll
lret
loope
sub
aas
jb
popa
outsb
adc
fwait
or
jl
jge
cmpsl
mov
daa
jle
test
scas
scas
xchg
add
pop
lea
nop
sbbb
aaa
jb
incl
mov
mov
jbe
dec
int3
sub
lret
sti
xlat
mov
leave
paddusb
dec
loop
es
push
pop
int3
sbb
inc
fmuls
sub
insl
pop
les
or
lret
lret
inc
or
jnp
sub
inc
adc
divb
scas
pop
jnp
add
push
fdivrs
loopne
lret
sahf
jno
pop
sub
jbe
loope
nop
push
add
loope
add
mov
dec
add
mov
push
jae
jg
popa
in
pop
lods
mov
cli
cmp
push
lret
mov
das
rorb
add
sub
test
test
test
or
fldl2t
and
add
cld
or
jl
ds
pop
cmp
lret
ret
ficompl
sub
sbb
pop
cmc
ja
inc
les
call
pop
je
pop
adcl
push
out
cmpb
enter
mov
popa
ret
push
mov
in
pop
aas
jne
mov
ja
mov
lret
test
and
fcom
mov
outsb
divl
xor
cmp
mov
cltd
add
divb
inc
iret
jge
xchg
pop
ljmp
dec
imul
lds
fcomps
inc
add
cmp
pop
aas
mov
pushl
enter
nop
mov
es
scas
jmp
sti
cmp
inc
mov
out
rcl
fcmovbe
mov
mov
repnz
orb
adc
push
jne
ds
sahf
push
sbb
ficoml
imul
daa
or
imul
sbb
lahf
fldlg2
inc
and
jae
imul
data16
scas
dec
pushf
sbbb
mov
mov
mov
pushf
push
call
aaa
clc
xchg
out
repz
lods
mov
in
xchg
push
or
aad
test
adc
lret
inc
js
mov
adc
mov
sti
clc
push
cmpsb
out
dec
aad
push
or
fdivp
pushf
inc
mov
inc
mov
punpckldq
in
mov
cmc
push
sub
clc
or
sbb
je
shll
jo
daa
inc
mov
movsb
add
sbb
push
inc
shrb
mov
mov
lret
in
jg
dec
loope
adc
cmp
mov
jp
inc
fidivs
aaa
cmc
jbe
mov
inc
xchg
dec
cmp
cmp
rcr
into
add
std
cltd
or
dec
fcmovnbe
in
movsb
inc
cli
mov
ss
hlt
xor
popf
xor
xchg
jno
inc
jae
pop
or
xchg
in
pop
mov
test
mov
repz
jg
scas
fadd
loope
or
inc
push
dec
sub
ds
stos
xchg
daa
fwait
mov
sub
sub
cmp
jp
aad
es
lea
cmp
std
clc
and
insb
mov
mov
cld
sub
outsb
and
mov
sub
sbb
inc
idivl
push
sub
fs
inc
sbb
ss
push
mov
fcmovu
mov
call
stc
xchg
xor
sub
push
and
or
rolw
ficompl
xchg
aam
shlb
pop
mov
lea
out
adcb
nop
xor
or
sbb
out
fs
loop
add
aaa
call
mov
and
rorl
mov
cmp
and
inc
int
push
adc
mov
dec
mov
stc
test
push
mov
gs
xchg
xchg
cltd
lock
hlt
mov
mov
shll
mov
fbld
sbb
andl
push
fmull
sbb
push
mov
lea
fisubl
jg
daa
mov
sbb
dec
insb
lock
fnstcw
test
xchg
out
pop
outsb
aam
out
jmp
cwtl
xor
push
mov
les
mov
jmp
sti
pop
ljmp
dec
mov
out
mov
adc
fwait
jmp
dec
and
push
fsubr
push
inc
cltd
stc
fdivrl
cmp
mov
mov
xor
stos
subl
mov
pop
cmp
enter
cmp
xchg
and
test
test
mov
cli
cmpsb
ret
inc
and
pop
icebp
push
add
pop
loopne
jmp
cmp
add
imul
ja
repz
mov
out
les
and
jae
adc
jne
lds
fcmovne
lods
fldt
sbb
mov
shlb
fisubl
pop
insl
enter
in
push
cmpsl
mov
popa
iret
add
ds
push
xchg
pusha
divl
movsl
shl
or
out
cmp
in
mov
test
js
pop
daa
arpl
and
mov
xor
xor
push
lret
pop
sub
pusha
frstpm(287
hlt
imul
in
enter
pop
pop
cmpsb
stos
xchg
push
inc
xchg
sbb
dec
daa
fbstp
ret
fs
jnp
adc
push
inc
popa
sbb
fnstenv
add
out
mov
xchg
jno
shlb
subb
bound
adc
roll
mov
mov
arpl
les
push
push
divb
push
sarl
and
jo
das
mov
arpl
mov
mov
sbb
xor
testb
mov
jl
cli
adc
mov
loopne
inc
rcl
sub
mul
dec
xchg
mov
jl
xor
cmp
int3
sti
lds
add
sbb
aas
or
inc
mov
lret
mov
xchg
cmp
push
comiss
inc
push
movsb
push
xchg
jns
pop
icebp
mov
xor
mov
inc
out
jae
sub
push
add
cld
sbb
popf
ret
mov
sbb
nop
adc
out
xor
aad
jg
xchg
jns
jge
fldt
dec
out
decb
dec
scas
mov
rsm
jmp
jecxz
rorl
mov
mov
xchg
pusha
out
add
lret
cld
stos
adc
ds
xor
cmc
packssdw
push
les
in
xor
xlat
divl
pop
sbb
xchg
cmp
mov
popf
or
or
adcb
jle
clc
pushf
jge
sbb
dec
pop
pop
mov
fsubp
add
add
lahf
mov
fsubl
pop
jge
push
push
aad
mov
fwait
or
mov
jecxz
adc
aam
inc
xor
pushf
popl
cwtl
push
adc
push
mov
jne
mov
cmc
pop
pop
imul
xchg
cmpb
push
call
sti
daa
pusha
pop
lahf
cld
xlat
cmc
jbe
scas
pusha
sub
xor
insl
jmp
sub
fsubrs
push
xchg
call
cpuid
scas
ss
pop
lea
mov
inc
adcl
xor
xor
mov
js
or
rcrb
scas
scas
mov
fwait
cmp
cltd
sub
test
sbb
fstpt
imull
ljmp
ds
lods
out
popa
sbb
fbstp
lea
nop
pop
xchg
pop
xchg
icebp
mov
xchg
xchg
insb
out
add
xchg
pop
or
rolb
cwtl
loop
xor
lea
pusha
jp
lret
rolb
and
ss
inc
pop
or
push
lcall
test
enter
cmp
rclb
add
or
dec
push
out
mov
cwtl
std
xchg
lret
push
insb
addr16
lea
mov
sub
xchg
arpl
ds
sbb
loope
xor
ret
lcall
jne
stos
mov
mov
xchg
sub
in
mov
mov
and
mov
popa
sti
push
sbb
sarb
loopne
shll
in
pop
rol
aad
sbb
xchg
ss
mov
outsl
jb
push
call
inc
std
add
cmpps
cmp
mov
imul
call
mov
cmpsb
iret
scas
inc
rcl
mov
daa
dec
mov
popf
clc
rcr
arpl
lds
ljmp
push
outsl
ljmp
aas
cmp
push
jno
out
mov
jae
cmp
xor
lea
xor
popa
lods
mov
rorb
and
or
mov
mov
or
dec
sub
mov
mov
movsl
xchg
mov
lret
test
and
insb
add
out
popa
inc
stos
out
ss
js
push
mov
add
xor
push
incl
push
or
imul
clc
shrb
pop
fs
pusha
cmp
mov
pusha
xchg
sub
daa
sub
pop
bswap
add
mov
sahf
sub
or
cmp
fwait
leave
pusha
out
add
pop
dec
adc
lds
or
rorl
test
xchg
pop
movsl
adc
push
insl
outsb
or
std
xchg
or
adc
sub
dec
rcl
popf
xlat
icebp
rcr
push
xlat
jecxz
inc
push
xlat
hlt
test
cmp
jp
icebp
push
or
scas
push
or
mov
dec
loop
inc
test
sub
mov
fwait
out
inc
fcoms
jnp
popa
leave
mov
adc
mov
out
inc
xchg
and
push
ja
sub
out
dec
loope
cmc
fldcw
mov
into
adc
push
je
aad
jge
fmul
sbb
dec
dec
and
xchg
xchg
cmp
dec
xchg
add
push
cmp
sbb
repnz
mov
dec
sti
stos
mov
rorl
das
fcoms
sub
popa
int
mov
addr16
pop
push
dec
hlt
pusha
jb
mov
sub
mov
dec
hlt
dec
subb
sahf
jmp
push
jb
outsb
imul
popf
xchg
repz
sbb
jle
sbb
out
xchg
jle
mov
cmp
fidivs
test
lcall
mov
cmc
fcmovnbe
testb
rcrb
popf
dec
pusha
mov
jge
repz
push
xchg
ss
rcl
pop
inc
leave
rcr
sub
test
push
sub
jns
inc
fsubrl
int3
outsl
or
push
inc
and
push
mov
adc
sub
clc
inc
test
fistps
in
sbb
push
sub
daa
cmp
jecxz
rorl
push
repz
lahf
stos
mov
popf
or
icebp
scas
out
fisubl
in
loopne
ljmp
pop
push
sub
mov
out
ss
out
xor
xchg
mov
cmp
pop
push
mov
and
faddl
aaa
stos
cs
jbe
dec
mov
nop
sub
pop
jo
movsl
push
sbb
pop
dec
push
add
xlat
gs
mov
or
stc
ds
ret
idivl
cmp
icebp
mov
aad
xchg
and
data16
push
icebp
mov
into
pop
insl
arpl
xor
xchg
mov
sub
pop
or
push
mov
xchg
cmpsl
dec
pop
inc
fnstenv
ljmp
pushf
test
mov
insl
das
lods
mov
mov
sbb
and
adc
add
or
hlt
jmp
popf
hlt
int
push
sbb
aaa
cmpsb
dec
jecxz
add
daa
add
and
pop
push
xchg
mov
outsb
adc
arpl
icebp
xchg
das
and
and
lcall
nop
push
sbb
mov
popa
repz
in
iret
fistpl
ds
add
cmp
sub
or
jmp
lahf
rorb
and
mov
cli
hlt
add
sub
aam
xchg
pop
das
rcll
lods
bnd
fldl
ret
shll
pushf
daa
sahf
or
sbb
lret
mov
xchg
mov
jo
int3
dec
pop
into
xor
lods
ljmp
lock
fldenv
cmp
lods
push
loop
and
cwtl
stc
jne
daa
out
jb
jmp
push
cmc
cmp
mov
push
mov
lds
jno
or
sbbb
cmp
popl
mov
jb
daa
ret
xor
push
out
sub
gs
orb
decl
add
push
cwtl
pop
rcll
cmp
push
loopne
jae
decb
addr16
cmp
mov
dec
sbb
mov
sbb
inc
in
test
jnp
nop
es
mov
cmp
test
sbb
loop
push
ds
cmpsl
lahf
and
add
pmaxub
sub
fisubl
lods
mov
das
push
lahf
and
lea
aas
add
sbb
shll
in
mov
roll
mov
sbb
adc
daa
jno
addr16
imul
scas
jb
sub
das
jno
es
aas
insl
cmp
pop
fwait
lods
popa
inc
ss
mov
ss
insl
shll
pop
inc
xlat
mov
cmp
mov
lds
lods
adc
rorb
fisttps
push
pushf
in
pop
sbb
mov
dec
je
jno
lahf
mov
adc
mov
aam
inc
fldl2t
xor
xor
jb
adc
pop
fidivs
mov
xchg
push
dec
cmpsb
and
cmp
mov
or
pop
push
icebp
rorb
repz
cmpsl
stos
ljmp
and
test
jge
and
outsb
pop
jge
dec
mov
cmpsl
mov
mov
or
or
sub
push
xor
ljmp
cwtl
das
imul
xor
dec
dec
out
daa
mov
out
xor
dec
fsubp
xor
enter
pop
stc
lds
pop
sbb
mov
or
jecxz
pushf
xchg
push
nop
xchg
pop
loop
mov
std
iret
and
pop
scas
sti
mov
jb
inc
sub
inc
dec
pop
dec
sahf
stos
jge
pop
stos
cld
sahf
xor
adc
repz
repnz
pop
ret
popa
add
scas
pop
arpl
jno
inc
mov
shl
mov
add
mov
je
lods
push
mov
int3
imul
xlat
mov
mov
push
mov
dec
scas
shl
fistpl
add
sub
bound
stos
inc
divb
hlt
adc
add
add
dec
push
mov
ret
js
mov
xor
stos
jmp
into
test
cld
out
inc
gs
cmc
mov
shr
jge
icebp
dec
lock
cli
movsb
lcall
mov
push
aam
xchg
xchg
xor
pop
add
clc
pop
mov
mov
js
and
mov
mov
sbb
and
dec
xlat
jo
shrb
lcall
loope
mov
mov
cmp
xchg
add
cmpsb
enter
pop
repz
out
addb
jae
out
jg
imul
test
push
xorl
fimull
cld
mov
mov
sub
xor
int3
cmpsb
pop
mov
push
jecxz
adc
dec
cmp
dec
and
push
sub
sahf
fisubrs
inc
sbb
dec
in
stos
push
cmp
cmp
bound
fimuls
push
mov
sub
mov
pop
dec
scas
scas
pop
rolb
xchg
sbb
mov
call
les
xchg
adc
repz
pop
sti
scas
adc
pushf
push
jbe
es
pop
sbb
pop
movsl
clc
movb
loope
cmp
cmp
sar
lcall
movsl
mov
dec
and
lcall
hlt
jp
test
sbb
sbb
sahf
xor
cmp
push
cld
or
xchg
inc
xchg
adc
enter
icebp
call
adc
sub
xor
dec
cmpsb
hlt
add
and
push
lods
and
shll
repnz
dec
loope
and
pop
loope
dec
push
popf
jl
stos
mov
add
xchg
push
mov
cwtl
xor
lret
rol
movsl
insb
test
rorb
mov
push
int
mov
jns
mov
cld
sub
and
xlat
sbbl
jecxz
imul
xor
pop
mov
jg
popa
jg
adc
shll
hlt
scas
cld
gs
cmpsl
xor
popa
inc
mov
and
mov
mov
pop
test
mov
sub
cmp
sbb
fwait
cmp
test
mov
outsl
cmpsb
gs
cli
xchg
in
in
rclb
divb
arpl
push
mov
daa
xor
mov
fnsave
sub
js
xor
outsb
inc
jecxz
jecxz
xchg
add
push
xor
xchg
push
in
cmpsl
icebp
xchg
imul
int
push
sub
sub
sahf
and
inc
stc
or
sbb
dec
mov
xor
scas
xchg
in
push
mov
cmc
ja
mov
mov
lcall
cwtl
je
mov
rcrl
fwait
mov
xchg
pop
ljmp
cmpl
fbstp
pop
sbb
jbe
aaa
int3
sub
lret
sub
sahf
cli
xchg
rcrb
jnp
xchg
push
pushf
out
push
add
sbb
sub
std
lcall
in
jmp
js
push
stos
inc
mov
out
popl
rol
adc
lret
popa
test
mov
pusha
jg
pop
sbb
push
cmp
jecxz
ljmp
or
jle
scas
xchg
xchg
loopne
cmp
hlt
imul
mov
insb
cltd
repz
out
imul
xchg
sbb
and
and
pop
xor
not
test
pop
xchg
jge
adc
mov
inc
test
popa
into
mov
push
inc
dec
cmp
cmpsl
push
dec
loop
movsbl
xchg
inc
stos
enter
jge
test
in
into
movsb
mov
mov
sbb
push
and
fstl
dec
pop
pop
sti
arpl
repnz
adc
insl
sbb
cmpsl
push
cmp
pop
or
insl
mov
push
add
in
xchg
sbb
lcall
and
dec
aam
hlt
shll
jp
repz
clc
xchg
mov
lret
movsb
sub
sub
mov
js
arpl
xchg
test
in
rorl
jne
mov
stos
cmpb
out
inc
xchg
sbb
arpl
icebp
inc
ds
mov
pop
test
lret
cmp
arpl
mov
test
xor
or
pusha
into
iret
sub
movsl
nop
out
xchg
outsb
or
out
cmp
sub
xor
xor
dec
jg
clc
fsubrs
mov
lea
or
adc
daa
loope
xor
fistps
sub
dec
jbe
repz
mov
in
icebp
hlt
imul
push
aas
xchg
lret
sbb
push
push
sub
cmp
jns
in
cli
lods
xchg
lcall
dec
shr
lods
pusha
test
xor
out
test
mov
pop
inc
dec
test
jno
loopne
adc
jns
pop
aaa
mov
movsl
stos
int3
out
cmp
push
fstpt
lcall
lods
repz
fldenv
push
scas
pop
lock
xor
mov
test
lcall
inc
aam
pop
and
adc
push
push
jbe
scas
aas
inc
pop
bnd
pop
mov
lods
out
pop
inc
jecxz
jne
add
data16
xchg
loopne
das
push
out
sub
pop
pop
std
ret
pop
push
in
adc
andb
mov
push
call
fisttps
inc
dec
lcall
sbbb
mov
pop
popf
sbb
aam
sarb
fsubrs
adcl
jge
lods
xchg
sbb
stc
adc
aad
pop
xlat
repz
mov
mov
xchg
xor
lret
mov
push
mov
push
test
sbbb
dec
mov
shrb
and
mov
add
dec
xchg
pop
sbb
xor
outsb
jp
pop
sub
shl
leave
push
sub
mov
lods
mov
out
or
push
js
add
push
gs
pop
pop
pop
out
adc
js
add
jecxz
stos
insb
fsubrl
inc
fnstenv
mov
push
cmpsb
leave
into
pop
inc
push
mov
mov
fs
cmp
fcomi
sti
lret
clc
mov
arpl
push
push
sarl
sbb
push
cltd
hlt
loopne
sub
fcomi
scas
xor
push
rolb
shll
sar
iret
pop
imul
mov
inc
sub
pop
pop
lret
ficompl
les
sub
dec
push
cmpb
movsb
xchg
push
mov
push
scas
std
or
into
into
pop
adc
test
adc
arpl
adc
aad
xchg
pushf
hlt
inc
mov
inc
jge
sub
test
mov
fisubrl
in
stos
imulb
sbb
mov
call
adc
les
popf
icebp
movsl
xchg
bsf
lods
je
mov
repz
pop
mov
daa
inc
addl
out
sti
mov
sub
and
inc
popf
or
cld
pop
push
jmp
js
jne
ja
cmpsb
jecxz
popa
dec
ja
jmp
loope
call
insb
push
jecxz
fiaddl
imul
es
mov
out
mov
xchg
add
lods
sti
ds
loop
sbb
cmc
int3
sti
nop
pop
sub
xchg
jl
push
sti
push
pop
push
scas
adc
fidivrs
add
into
mov
xor
sbb
ret
repz
fucomi
push
ljmp
or
cmc
cmp
fld
cmpps
sahf
mov
bound
add
xor
movsb
mov
push
mov
adc
lret
icebp
mov
fnstsw
pushf
xchg
aas
adc
push
cmp
incb
cld
dec
shrb
pop
shl
stc
or
ret
ret
arpl
dec
xchg
imul
movb
enter
mov
lret
pop
cmp
aad
push
add
cmp
imul
pop
add
pop
jp
pop
lock
xor
fwait
mov
ds
adc
cli
xchg
not
in
fucomp
sub
pop
push
mov
subb
jns
mov
sbb
dec
fnsave
sbb
adc
mov
push
sub
mov
inc
inc
and
popf
xor
cmp
cmc
cmpb
jnp
cmp
es
adc
push
lcall
and
mov
data16
jne
cmp
add
pop
pop
fisttpll
lahf
and
cmp
cmpsb
lods
loop
lods
pop
mov
fidivrl
mov
or
lea
sbb
out
shlb
dec
loop
mov
jb
pop
scas
adc
in
add
push
pop
mov
xchg
dec
adc
pop
push
mov
shrb
mov
imul
adc
repz
fcoml
outsb
subb
mov
call
pop
test
negl
cmp
adc
and
lea
xor
xchg
daa
inc
lods
pop
add
cmp
testl
mov
lds
mov
sbb
jb
adc
adc
pop
out
int3
pop
rol
outsb
pushf
repnz
pop
sub
jmp
shll
lea
xor
cltd
popf
gs
push
fists
sbb
in
push
rorl
stos
or
jecxz
mov
xchg
daa
mov
add
pop
jae
add
dec
xor
cmp
int3
dec
push
inc
cwtl
or
scas
pop
outsl
mov
in
cmp
fwait
iret
fcoml
pop
mov
fdivs
push
pop
mov
mov
sub
lahf
push
jmp
or
test
shll
inc
cmpsl
sbb
sbb
inc
je
jmp
leave
add
push
mov
push
add
jecxz
mov
popa
and
pop
jg
pop
mov
mov
fstpl
pop
scas
cwtl
xor
push
dec
js
push
in
adc
bound
repz
or
inc
data16
ret
mov
arpl
push
stos
xlat
add
push
push
test
pop
movnti
or
and
mov
sub
push
sub
or
mov
imul
into
cli
inc
iret
mov
xchg
bound
pop
int
add
push
cmp
xor
inc
shlb
pop
notb
xchg
mov
mov
lcall
clc
cmp
rcrl
sub
xor
xorb
leave
loope
jmp
lods
xlat
xor
leave
filds
neg
jb
and
stc
test
jmp
frstor
lret
das
addr16
jb
adc
mov
push
loop
and
mov
pop
loope
mov
stos
pop
cmp
sbb
pop
xor
dec
and
insl
jae
fisttpl
test
mov
mov
mov
mov
rclb
fnsave
and
jo
fwait
jno
int
in
call
loop
imul
leave
scas
lahf
repnz
mov
sbb
jg
es
xchg
aas
lds
pop
cmpsb
jbe
pop
jle
and
gs
pusha
int3
test
push
in
adc
and
push
mov
sub
loope
mov
outsb
xlat
mov
pop
jecxz
add
lret
lea
in
xor
das
mov
push
shl
push
test
mov
js
jmp
inc
cmpsl
fmuls
lds
ret
mov
mov
icebp
sbb
mov
add
push
mov
mov
test
xor
jecxz
jbe
subb
fimuls
daa
push
push
or
xor
lahf
outsl
cs
imul
int3
push
mov
fucomip
push
movsl
sbb
mov
pop
jmp
loope
push
mov
ja
and
cmpsb
push
lods
pop
enter
sub
inc
fnstenv
mov
or
mov
cmc
sub
fdiv
push
lock
cmp
imul
shrb
ljmp
add
or
mov
xchg
les
daa
adc
scas
xchg
fs
cltd
xor
arpl
stos
out
in
jae
jl
inc
mov
mov
fldl
sub
call
andb
sbb
mov
cmp
dec
jg
mov
mov
adc
testl
or
xchg
mov
xchg
clc
fs
mov
scas
cmp
mov
daa
or
pop
mov
cmpsl
in
inc
push
pop
jnp
ja
add
jo
mov
mov
pop
sub
rcll
push
pop
cmc
nop
add
xchg
push
xor
hlt
repz
or
iret
aad
cmp
mov
jae
push
cmp
push
mov
sti
fwait
inc
or
mov
inc
xchg
adc
fwait
sub
sbb
jp
push
sbb
adc
xor
cwtl
mov
fdivrl
push
push
push
xchg
sbb
lcall
mov
push
movsl
push
jl
cltd
pop
cld
sub
int
mov
addr16
jmp
insl
xchg
outsb
lods
fmuls
sti
fmull
jmp
and
out
movsb
int
clc
sbb
cld
outsl
gs
push
aaa
push
scas
mov
fwait
lret
jae
or
dec
cmp
aaa
push
add
adc
inc
dec
ror
jbe
pop
bound
mov
cs
in
pusha
inc
enter
pop
add
add
ret
ds
pop
jo
ror
jbe,pn
clc
mov
fcompl
jge
lock
dec
nop
dec
pop
jo
xchg
dec
icebp
out
popa
iret
call
sarb
sub
movsb
outsb
xlat
xor
outsb
popf
or
leave
pushf
xor
in
mov
not
mov
xchg
sbb
pop
incb
test
test
jbe
push
push
outsb
add
adc
movsl
mov
sub
jp
ret
call
xchg
mov
add
test
fs
ret
les
xchg
adc
and
and
sub
or
mov
pop
ljmp
push
inc
add
xchg
push
lds
xor
cld
lcall
cmpsl
dec
pop
jne
pop
push
arpl
jnp
lods
and
push
sbb
cmp
scas
mov
or
or
cmpsb
cmp
inc
int
into
fidivrl
or
jp
jns
push
lods
pop
pushf
cwtl
test
popf
push
or
xor
bound
push
mov
test
mov
xchg
and
ds
imul
jmp
test
divb
frstor
or
fsubl
cmpb
mov
imul
jg
push
sbb
sub
stc
gs
xlat
push
adc
inc
push
mov
inc
out
ds
std
or
cmc
mov
popa
loopne
xchg
sbbb
sbb
out
nop
sti
ss
mov
push
sub
inc
xchg
and
pop
hlt
pop
iret
jmp
int3
fsubs
shrb
push
pop
mov
and
scas
jl
imul
loop
sbb
jecxz
loop
mov
shrb
inc
push
adc
push
mov
in
mov
cmp
daa
jo
js
pushf
jae
jmp
or
shl
jl
out
shrb
xchg
jne
lret
in
pushf
cld
pushf
dec
inc
loop
jns
sbb
cli
imul
mov
push
inc
stos
xchg
loopne
sub
jb
frstor
inc
mov
js
je
lret
push
push
xchg
jmp
call
mov
xchg
xchg
mov
outsl
outsb
ret
add
mov
loope
xchg
inc
iret
aas
add
push
fistpll
add
hlt
or
repz
cmpsb
sub
lret
aas
inc
mov
rcl
je
imul
push
xchg
stos
dec
insl
rolb
dec
push
adc
push
lcall
push
add
xlat
mov
inc
rclb
sbb
add
je
mov
adc
mov
mov
jmp
addr16
mov
addb
inc
shlb
in
mov
lar
mov
mov
mov
stos
inc
cmpsl
inc
cli
movsl
ss
leave
fsts
and
aaa
push
jge
fistl
sbb
inc
push
shr
xchg
scas
insb
jp
dec
xor
shll
push
jno
ljmp
inc
jne
jge
dec
pushf
subb
sahf
jge
clc
cmpsl
bound
clc
fmul
pop
movsb
je
sbb
inc
dec
repz
fisttpll
xor
cmp
nop
rol
rcl
fldcw
push
dec
call
mov
cmc
bound
xchg
hlt
stos
shlb
xchg
cmp
cmpl
insb
jbe
jmp
sbb
lea
insl
and
ret
js
and
loopne
jecxz
into
fistps
daa
mov
push
push
ret
mov
fisttps
or
into
in
mov
and
mov
adc
pusha
mov
xlat
push
lock
std
and
cld
push
inc
iret
mov
jl
shlb
test
dec
sub
push
fcmovne
sahf
cmp
je
scas
dec
dec
loopne
sti
push
lock
jg
xor
arpl
jnp,pt
mov
mov
int
pop
fidivrl
insb
lret
icebp
sub
insb
pusha
pop
dec
sbb
mov
cld
jns
data16
es
xchg
inc
aaa
fisubl
addr16
mov
xor
test
jb
xor
js
mov
arpl
or
push
push
sub
out
dec
cli
jae
sti
push
mov
cs
adc
cmp
mov
imul
mov
subl
jns
or
aam
xchg
mov
dec
xchg
ljmp
lret
sbb
mov
adc
mov
shlb
addb
sarb
xor
cmp
bound
push
xor
lcall
call
test
icebp
ljmp
cmpsb
adc
cmc
gs
sbb
jmp
inc
add
mov
daa
inc
cmp
push
sbb
faddl
movsb
cld
int3
gs
jns
mov
adc
cmp
aad
in
sar
mov
movsb
inc
sbb
out
mov
scas
fsubr
and
cmpsl
jg
popf
rclb
js
loope
jns
pushf
call
hlt
fs
popl
push
stos
ljmp
outsl
in
test
stos
adc
int3
push
in
xchg
addb
sub
dec
fs
pop
sbb
push
push
or
xor
mov
ja
dec
leave
xor
pop
int
mov
push
std
dec
out
out
xchg
sub
xor
lcall
movsb
shll
dec
daa
cmc
imul
pop
and
adc
mov
sbb
cmpsl
ret
sbb
sti
or
rorb
mov
sarl
les
xchg
mov
pop
sbb
lret
xlat
stos
fstps
fsubrs
jg,pt
cmp
imul
in
jns
mov
cmpsb
aas
subl
cmpsb
dec
jbe
xchg
jl
aam
jo
stos
add
add
adcl
sbb
adc
cmp
ret
or
imul
loopne
int3
mov
nop
xchg
mov
sarb
xchg
xor
notl
in
cli
sub
lds
adc
push
xor
sbb
xor
mov
xchg
pop
jmp
lret
lea
loop
rcll
xor
mov
push
adc
ret
jno
mov
ds
or
cmpsl
dec
xchg
push
fwait
jp
int
sbb
push
mov
in
fsubrs
fisttps
mov
dec
push
jmp
xchg
mov
jnp
inc
push
lahf
xor
inc
adc
daa
cmp
js
je
cmpsl
andb
mov
sar
mov
sarl
sbb
xchg
ljmp
pop
adcl
pushf
lds
idivl
dec
mov
cmp
xchg
rcl
sub
mov
jno
mov
xchg
popa
adc
fmul
xchg
rolb
mov
mov
dec
in
out
push
sbb
ja
insb
jnp
or
fwait
push
or
xor
jnp
arpl
adc
or
mov
and
mov
cmp
adc
cmpsl
andl
es
add
pop
int
sbb
pop
cmpsl
jge
std
stos
incl
in
aam
aad
ret
lcall
gs
imul
lcall
cmp
cmp
mov
xchg
jle
mov
sbb
xchg
bound
enter
out
xchg
cmp
push
adc
stc
and
mov
push
push
add
pop
les
leave
mov
movsl
and
loope
aas
movsl
stc
nop
jbe
add
xor
insb
inc
add
and
negl
in
test
pop
vpunpckhbw
and
and
cmpsb
gs
push
and
mov
out
and
mov
and
adc
shlb
dec
sbb
lcall
aas
jb
jno
imulb
pop
jle
sub
sbb
int3
dec
jne
sbb
mov
push
fcoms
inc
std
sbb
or
jb
test
mov
sub
lods
pop
jo
mov
mull
icebp
xor
jns
cmp
dec
add
xchg
lods
cmpsb
jns
ljmp
pop
stc
iret
pop
sub
test
cmc
inc
lret
divl
jmp
sbb
xchg
inc
dec
nop
xchg
dec
add
rdmsr
inc
sbb
and
stos
rclb
lds
jmp
and
or
and
jb
aas
pop
jmp
jmp
icebp
add
lret
fs
push
sub
scas
ficoms
mov
push
cmp
inc
and
mov
cmc
daa
shrl
dec
movsb
sti
scas
mov
popa
movl
imul
mov
idivl
mov
push
jmp
xor
fadds
test
mov
ficomps
mov
mov
inc
sahf
sub
sbb
sub
aam
cmp
dec
es
gs
mov
hlt
add
push
xor
cltd
lods
out
xchg
hlt
stc
in
inc
inc
inc
icebp
pop
out
fiadds
or
jg
into
aad
jb
andb
test
jb
in
add
repz
cwtl
adc
pop
shrl
sbb
icebp
jo
shrl
dec
inc
fbld
ljmp
fidivl
js
sbb
and
inc
pop
cmc
iret
add
jg
inc
popa
scas
ret
outsl
jns
fdivrs
js
cmp
icebp
mov
jp
push
cltd
cmp
in
shl
in
cmp
cmpsb
mov
add
rclb
sbb
loop
sub
hlt
inc
inc
imul
enter
dec
loope
insl
stos
ficomps
cmp
xor
test
mov
popa
add
or
pop
cmpsb
or
cs
mov
loopne
inc
sahf
hlt
add
push
lock
pop
test
mov
inc
sahf
std
imul
aad
leave
mov
dec
pop
mov
pop
scas
jns
aad
cs
mov
sbb
mov
ret
sub
xchg
or
push
mov
ret
sbb
pop
je
add
inc
adc
inc
clc
shld
dec
sub
adc
adc
mov
inc
mov
pop
inc
fmull
push
and
mov
nop
lock
sahf
repz
int3
pop
mov
xor
lock
ficoml
sub
mov
repz
movsl
fs
clc
mov
cli
cs
mov
iret
sbb
test
jno
hlt
mov
jae
ss
popf
add
addr16
call
xchg
mov
jge
jle
movsl
es
or
gs
shll
mov
sub
icebp
cmp
push
mov
pop
decb
inc
fists
add
mov
cmp
mov
dec
jecxz
mov
push
add
fadd
ficomps
cmp
or
xchg
stos
aaa
inc
inc
mov
cli
dec
push
popa
or
outsb
rcl
or
ret
sub
outsl
xchg
sub
or
pusha
nop
test
shlb
repnz
push
cltd
orl
push
mov
das
lds
popa
jne
xchg
dec
jecxz
cs
push
mov
add
mov
jne
mov
push
xor
add
sub
mov
insl
add
aam
and
mov
inc
movsb
pop
mov
pop
sahf
and
inc
es
out
inc
test
popf
adc
push
add
mov
cmp
int3
outsl
cmp
int
jb
mov
call
fcomps
imulb
lahf
stos
adc
or
inc
in
cmp
stos
xchg
sub
data16
arpl
sbb
mov
push
push
hlt
fisubs
imull
cld
mov
and
test
inc
iret
repnz
xchg
mov
frstor
sbb
pop
ret
sbb
or
test
scas
mov
fldl
clc
mov
ljmp
push
jno
ret
cmp
ljmp
jae
mov
stos
mov
into
stc
push
jae
mov
jb
jnp
cmp
mov
jo
sbb
shlb
cbtw
mov
popf
in
popf
into
loopne
into
push
popf
es
outsb
or
stc
lock
sbb
add
test
cmpsb
sbb
mov
pop
movsl
subl
xchg
xchg
jns
rcrl
pop
mov
das
push
repz
subl
imul
outsb
jno
shll
xchg
pop
inc
rorb
or
bound
dec
pusha
or
lret
subb
adc
mov
mov
xchg
lret
dec
mov
mov
push
roll
stc
mov
ret
mov
insb
in
push
sbbl
push
repnz
mov
jg
std
cltd
outsl
sbb
stc
cmp
movsb
in
and
lahf
sbbl
jb
hlt
or
cmpl
pop
mov
imul
mov
sbb
jecxz
add
mov
ss
test
inc
leave
add
xchg
mov
inc
sbb
jge
mov
push
or
push
and
lea
outsl
adc
daa
pop
jecxz
mov
jno
fldt
dec
mov
fsubr
mov
or
ljmp
div
fistl
xchg
les
or
jg
push
es
test
aad
out
sarb
jmp
int
outsl
loopne
mov
cmpsl
push
orl
adc
repz
jp
dec
pushf
xor
fcoms
out
xor
xchg
push
pop
movl
lods
push
add
outsl
push
das
mov
add
xlat
popf
shrb
mov
pop
scas
in
cmpsl
orl
sub
xor
push
lods
adc
and
sub
ljmp
mov
and
fimull
push
lods
enter
movsl
jmp
xchg
adcl
push
fnstcw
and
xchg
nop
adc
push
add
loope
ljmp
and
aas
mov
mov
sti
cmpsb
mov
xchg
fwait
push
cmp
sub
rcrl
int
cmp
xor
popa
add
cmp
jo
adc
in
xchg
lds
push
pusha
idivl
adc
es
into
aam
jmp
push
jne
test
test
inc
test
lahf
pop
iret
cli
mov
fstp
in
das
std
sbb
sub
in
inc
or
lods
mov
cmp
rorl
popa
cmp
xor
add
das
mov
cmp
out
popa
iret
add
dec
clc
mov
adc
out
sbb
std
out
mov
lock
fs
and
xchg
xor
outsl
mov
cmc
cmc
jne
test
in
int
rorb
cmc
xchg
fsts
insl
xchg
mov
mov
out
mov
lods
adcb
xor
inc
bound
push
mov
fs
inc
jne
xor
mov
pop
repz
add
cmp
xor
movsb
inc
add
out
sub
lock
push
lret
push
or
jne
test
mov
test
xchg
adc
imul
cmpsl
mov
cld
sub
sbb
pusha
jno
mov
fstpt
shrb
ja
fiaddl
adc
jmp
mov
xorb
in
cs
sti
xchg
out
jmp
cs
ret
daa
decl
ficoms
rclb
sub
mov
hlt
mov
outsl
fcomi
es
and
iret
into
push
bound
and
testb
mov
bound
es
sbb
pop
jbe
aas
test
bound
inc
mov
insb
mov
mov
inc
int3
sub
fwait
sub
cmc
cmp
lahf
push
lret
and
fildll
ja
inc
mov
add
cld
hlt
in
push
les
aam
jb
jb
addb
push
in
std
ja
cmpsb
pop
test
aaa
jae
js
mov
popa
insb
push
popf
dec
mov
popf
addr16
loope
mov
add
xchg
cmpsb
in
fisubl
cmc
ss
outsl
ret
jp
adc
mov
adc
sbb
cmp
jbe
push
mov
movaps
ret
sub
je
das
into
les
add
test
gs
aaa
pop
and
or
in
xchg
dec
inc
mov
dec
mov
test
pushf
sub
jmp
inc
shrl
push
into
das
cmp
pop
sar
mov
xchg
xchg
dec
inc
lcall
into
push
adc
imul
cmp
testl
aaa
sbb
jl
cmpsb
mov
xor
push
cmpb
mov
sbb
and
or
sub
and
out
fneni(8087
jae
daa
lcall
mov
decl
pop
enter
paddd
mov
popa
scas
sub
pusha
rcll
xor
std
mov
fiaddl
adc
stos
jo
rorb
push
pop
nop
push
jns
call
jecxz
mov
fs
mov
test
cmpsb
push
mov
out
aas
pop
lahf
in
dec
adc
in
fnstcw
push
pop
add
rcrl
shr
pop
mov
imul
mov
scas
pop
mov
lods
fdivrs
je
fbld
dec
mov
xchg
and
jecxz
sbb
inc
add
pop
dec
fildl
cmp
lret
out
mov
clc
in
gs
or
or
out
iret
mov
xor
repz
cli
lcall
das
test
rcr
imul
jg
xorb
test
arpl
gs
fcoms
into
jb
and
xchg
adcb
push
in
cmp
inc
lods
pop
lcall
pop
iret
mov
loope
fiadds
xchg
dec
loop
movsb
addr16
inc
add
and
movsl
bound
mov
gs
insl
loopne
sahf
mov
lds
adc
or
mov
mov
cmp
aam
add
shlb
jns
bound
adc
mov
push
insl
sub
inc
or
pop
rcrb
sarl
rorb
mov
mov
cmp
into
jg
jle
ficoms
dec
aas
xchg
int
mov
pop
xchg
jno
inc
adc
les
push
fwait
rol
pop
pop
mov
and
jl
mov
dec
xor
push
icebp
int
cmpsb
or
lds
adc
xchg
or
mov
sbb
aas
jnp
jl
xchg
repz
insb
lahf
cltd
cmpsl
push
xor
hlt
mov
out
jb
fnstcw
mov
adcb
push
jno
fisubrs
add
mov
push
adc
dec
je
lea
lret
jnp
mov
ja
popf
decl
jmp
out
or
mov
arpl
push
sbb
jns
adc
pop
lret
xchg
push
push
dec
arpl
mov
pop
xor
mov
cmc
mov
arpl
shl
inc
mov
mov
inc
cld
roll
test
test
aaa
add
out
sub
push
mov
lcall
fsubrs
mov
daa
mov
cmp
test
popf
stc
fists
inc
or
andl
push
cmpsb
pop
lock
sarb
adc
repnz
nop
cmp
in
test
loop
nop
mov
cmp
pusha
mov
lea
in
sbb
dec
std
xchg
jl
and
push
sbb
imul
xchg
sub
mov
xchg
sub
popa
adc
repnz
addr16
lret
int3
xor
mov
xlat
mov
das
andb
in
dec
pop
hlt
cmc
adcl
ja
icebp
push
orb
jbe
loope
aam
cmp
lds
and
sti
inc
dec
mov
mov
jno
inc
xchg
xlat
inc
push
xor
pop
push
mov
testl
sub
rolb
push
ja
iret
insb
pusha
cmp
movsl
dec
and
dec
push
lods
insb
fdivl
lods
insl
fdivrs
or
nop
inc
movsl
pop
cmp
push
push
jbe
jns
sub
in
lock
mov
lods
insb
sbb
adc
jo
cmc
push
pop
mov
mov
pusha
jbe
ret
jecxz
ss
clc
mov
cmp
out
femms
mov
pop
fdivs
pushf
sub
cld
mov
add
movb
idivl
lret
lahf
inc
push
adc
fucom
les
pop
cmc
sbbb
jecxz
out
outsb
dec
push
ret
xor
jo
dec
sbb
dec
pop
aaa
mov
into
jecxz
int3
pop
paddb
mov
xor
cld
leave
push
mov
mov
test
jle
or
pop
mov
add
pop
sarb
cmp
jp
incl
cmp
mov
paddsb
jp
and
stc
negb
imul
cmp
pop
aam
aad
repnz
mov
xchg
cmc
jl
outsb
adc
and
adc
or
ds
popa
sub
pop
das
call
or
push
mov
jle
fldt
xlat
outsb
xchg
scas
mov
jge
push
mov
dec
or
inc
jge
fldenv
gs
jp
mov
adc
push
push
mov
jg
inc
pushf
xchg
test
dec
xchg
js
push
aam
es
loopne
movsb
js
pop
pop
push
inc
daa
inc
jne
std
cltd
rol
test
dec
in
std
pop
add
mov
mov
arpl
clc
mov
lret
enter
mov
jge
inc
data16
lock
xor
movsl
push
sbb
fbld
pop
icebp
push
or
mov
movsl
xlat
add
leave
jne
mov
push
mov
add
lods
ljmp
pushf
pop
and
lock
mov
mov
js
das
jns
loopne
inc
add
dec
out
inc
mov
dec
int
daa
ljmp
push
adc
jo
dec
lods
rol
sub
cwtl
rcrb
and
inc
js
imull
dec
cmpsb
sti
jge
mov
and
xchg
mov
shlb
mov
cmpsl
mov
mov
mov
sahf
fadd
xlat
aas
gs
lcall
pusha
mov
sbbl
push
dec
lods
or
dec
cvtdq2ps
inc
sub
sbb
cwtl
cltd
xor
fs
and
pop
push
mov
test
lret
das
rorl
xchg
jp
and
adc
inc
mov
je
or
or
outsl
ljmp
outsb
sub
int
idiv
push
scas
inc
les
push
repz
rcrl
addb
bound
push
add
push
jp
mov
test
clc
orl
addl
movsl
or
push
inc
push
adc
stos
push
in
popa
cli
loopne
sub
add
cltd
jo
jae
std
inc
adc
pop
sbb
or
inc
imul
jns
xchg
and
and
imul
out
movsl
jns
stos
jmp
imul
adc
cmp
jo
mov
loop
les
call
daa
fdivrl
or
and
inc
xchg
inc
fdiv
push
mov
mov
xor
mov
push
sbb
mov
ja
fiaddl
push
rclb
dec
push
push
cmp
ss
out
mov
sub
mov
in
shrb
pushf
pusha
pop
xor
lahf
test
push
and
xchg
cwtl
shll
xchg
xlat
aas
ficomps
ja
jle
std
xchg
loope
adc
xchg
pop
stos
push
inc
pop
test
xor
mov
cmc
lds
inc
iret
gs
les
xor
inc
push
jecxz
dec
lret
lret
es
xlat
dec
or
mov
xor
xchg
push
insl
sub
scas
mov
loopne
dec
jo
jge
jmp
dec
bound
mov
push
pop
or
out
idiv
fstl
icebp
sub
fsubrs
repnz
sbb
push
lods
aaa
stos
sbb
xor
je
cld
push
insl
cs
js
xor
je
jae
push
jno
ljmp
pop
pop
add
daa
jecxz
je
cld
or
fucom
mov
jns
mov
xor
sbb
and
fmull
lahf
idivb
addr16
pop
push
inc
mov
dec
inc
pushf
hlt
jle
fistpl
aas
mov
repz
stc
and
std
jo
add
into
imul
mov
gs
loope
in
and
iret
sbb
shrb
xor
flds
pop
pop
outsb
aam
mov
sbb
mov
dec
nop
or
movaps
jge
sbb
xchg
outsl
pop
xor
inc
fmul
mov
popa
mov
pop
pushf
pushf
ds
push
push
pop
sarb
cmp
movsb
nop
or
cmp
sbb
adc
leave
sbb
les
scas
popa
std
lods
add
shlb
bnd
cmp
lds
call
fdivs
lods
mov
xor
jmp
mov
add
lock
bound
aam
nop
or
push
xchg
in
scas
or
sbb
or
xor
cltd
add
lahf
mov
incl
push
add
repz
xor
sub
or
push
jno
pushf
test
push
add
subl
add
test
ja
push
xor
cmp
lea
jle
shl
inc
pop
adc
es
stos
mov
dec
inc
lods
mov
imul
jl
scas
push
adc
mov
pop
out
sub
adc
inc
mov
xor
mov
mov
clc
or
jns
scas
sub
leave
daa
or
je
insl
jle
dec
fs
fucomi
js
push
push
mov
pop
out
or
cmp
jg
fcomps
cmovge
loope
or
cld
test
dec
jp
scas
jns
fstpl
aas
dec
jne
or
mov
dec
fcompl
mov
and
jns
mov
adc
or
cs
iret
and
iret
repnz
mov
cli
jecxz
shrl
scas
dec
mov
cs
aad
ret
mov
subb
push
loope
mov
dec
and
xchg
subb
shlb
in
sahf
xor
fdivrs
adc
xchg
push
lcall
jmp
sbb
aam
enter
push
or
adc
jle
lahf
mov
inc
mov
adc
out
xchg
arpl
dec
or
and
dec
mov
in
divb
cmpsl
cmp
cmp
shll
push
xchg
mov
jns
and
cmpsb
add
flds
ret
out
adc
fs
adc
in
xlat
rcl
loop
xor
inc
shll
jle
mov
lcallw
in
in
mov
sbb
pushf
adc
cmp
fmul
mov
and
xchg
cli
cmp
jmp
jg
repnz
sti
inc
mov
inc
jl
dec
mov
jno
in
movsw
movsb
ljmp
mov
xor
in
cltd
roll
in
lea
adc
rorl
sbb
or
jp
mov
mov
pop
pop
mov
cmpsb
dec
out
loop
sub
push
jae
and
daa
fstpt
mov
inc
out
and
stc
nop
in
out
aad
test
cmp
lods
sub
iret
mov
fistl
adc
sti
dec
pop
cmp
jl
hlt
out
stos
pop
dec
cli
dec
inc
lds
sub
out
test
xor
cli
cmpsl
inc
aad
inc
lods
mov
fsub
repz
mov
jle
mov
cltd
scas
and
cld
iret
and
popa
fdivl
insb
out
lds
and
inc
pop
mov
das
sub
iret
dec
cltd
inc
lret
or
fcoms
arpl
push
out
imul
cmp
sbbb
pop
mov
jno
ds
mov
lds
jecxz
fwait
and
ficompl
sbbl
dec
add
rsqrtps
add
call
ficoml
push
pop
cmc
mov
cmpsl
std
or
inc
jecxz
imull
cmp
mov
in
cmp
dec
popa
lret
cmp
ljmp
adc
add
jp
mov
les
cld
data16
lret
sub
stos
inc
sbb
jae
inc
std
inc
xor
push
cwtl
fstps
pusha
ljmp
and
inc
scas
dec
inc
rcrb
dec
stos
in
std
das
mov
loope
lcall
ljmp
lods
out
jb
cmp
rcrb
cmpsl
mov
rorb
ret
xor
aaa
dec
aaa
cli
mov
push
adc
int
pop
dec
rcrl
xchg
sar
push
hlt
cltd
cwtl
stos
mov
jbe
ss
xchg
inc
mov
data16
arpl
aad
subl
frstor
jbe
mov
sbb
mov
fmul
pusha
fcmovu
add
les
lods
mov
hlt
out
sarb
int
xchg
faddl
pop
lret
popa
add
dec
pusha
xor
rcr
js
sub
mov
xlat
jmp
dec
fadds
dec
ljmp
xchg
push
cmp
cld
outsl
dec
dec
dec
jge
fs
sahf
out
dec
repnz
cwtl
xchg
insb
dec
in
adc
or
xchg
or
mov
or
cmp
xchg
mull
push
enter
stc
js
and
pop
adc
pop
inc
enter
inc
in
fsubp
jge
xchg
jno
push
outsl
add
ret
add
pop
cmp
pop
daa
mov
data16
stc
adc
orb
or
mov
sub
js
jne
scas
mov
pop
fdivs
xor
mov
xor
add
jbe
jne
jl
arpl
sub
dec
std
adc
imul
aad
pop
inc
imul
inc
and
fwait
divl
hlt
cmp
and
js
push
jbe
dec
lahf
pop
lahf
xchg
out
and
adc
cmp
lods
push
push
dec
rclb
push
push
jo
ljmp
sbb
into
shl
mov
and
mov
pop
xor
mov
jo
dec
mov
xlat
and
or
jle
test
push
int
rcrb
popa
shrb
aad
pop
inc
add
lret
outsb
jl
inc
mov
cli
mov
sti
gs
aam
mov
cmpsb
push
fisubrs
cli
test
jb
xchg
jae
insl
cmpsl
jge
push
repz
adc
popf
repz
xor
js
dec
cmp
fld
daa
or
shrb
jge
xor
jo
popf
sub
add
mov
mov
xor
add
or
nop
mov
inc
pop
and
xchg
repz
test
dec
dec
outsl
xorb
iret
fistl
lret
sar
les
mov
mov
sub
xor
inc
dec
or
jl
imul
addr16
cmp
in
incl
mov
inc
fidivrl
das
pop
lahf
shll
xor
inc
push
dec
jle
inc
out
jmp
lods
loopne
roll
dec
je
jp
call
inc
or
out
mov
lret
aaa
mov
insb
sub
fisubs
lds
out
xor
adc
xchg
xor
add
fstpt
pop
push
sti
push
call
cmp
xor
xor
xchg
clc
nop
ret
push
sbb
dec
and
or
scas
xchg
fsts
mov
outsb
mov
jae
and
test
sbb
push
in
sarb
mov
pop
fimuls
jl
jae
and
and
cli
adc
mov
filds
dec
push
in
xchg
daa
lret
lods
mov
std
lock
insb
out
or
inc
pop
dec
fdivrs
and
dec
dec
xchg
mov
dec
jp
out
fisttpll
ret
inc
inc
repz
cmp
out
cltd
punpcklwd
and
sub
jb
add
push
mov
imull
jp
nop
lods
jl
pop
enter
sub
push
pop
aad
or
inc
inc
sub
fs
jno
lock
xchg
scas
inc
stos
xor
mov
and
in
aaa
enter
push
scas
cmp
mov
lods
jle
sahf
es
notb
fistl
les
scas
push
mov
cmp
cmp
cmc
cli
mov
incl
aas
dec
sbb
dec
pop
add
xchg
push
jne
dec
pusha
mov
das
mov
pop
les
jae
push
lods
jae
xchg
test
and
or
push
sbb
ret
jns
xor
lcall
xchg
xchg
sahf
fisttps
out
jo
sub
add
sbb
popa
sarb
shll
dec
pop
mov
sahf
xchg
test
mov
pop
inc
xchg
mov
add
inc
jnp
sbb
jmp
ds
and
inc
icebp
xor
sahf
mov
add
mov
push
scas
ret
mov
fs
idivb
call
sbb
mov
jne
shlb
lahf
pop
roll
imul
jp
out
xchg
sub
mov
xor
pusha
adc
pushf
add
ljmp
and
imull
mov
push
js
dec
aas
fbld
sti
inc
es
in
push
cli
sub
pop
notb
lret
and
je
fidivl
add
push
fadd
test
jae
dec
scas
or
mov
ret
inc
inc
mov
dec
jae
jmp
nop
icebp
jo
mov
push
dec
add
adc
ja
sbb
add
out
cld
cmp
xor
push
call
add
es
cmp
jge
loopne
sub
jle
test
jp
push
in
sbb
xor
inc
pop
call
adc
shr
jnp
and
adc
inc
and
pop
in
sub
mov
pop
test
lret
and
sbb
in
lahf
push
test
push
stc
sbb
xlat
ja
pop
jne
sbb
pop
outsl
cmpl
in
insb
lods
divb
mov
scas
lock
mov
mov
popa
and
stc
adc
rcrb
shll
dec
jecxz
mov
xlat
xlat
mov
call
and
cmp
daa
ret
adc
das
push
push
rcrb
adc
out
test
mov
adc
inc
adc
add
sub
mov
in
jnp
sbb
add
push
push
test
inc
ror
iret
mov
test
xor
sub
ss
filds
pop
leave
pushf
lahf
adcb
sub
mov
insl
cwtl
pop
cmp
xchg
push
dec
push
sti
lahf
pop
fwait
mov
push
test
cmpsl
ret
push
mov
push
sbb
cltd
add
movsb
dec
pop
lock
jl
cs
add
xor
fwait
aad
sbb
ds
cwtl
lock
push
outsb
xorb
imul
push
movsb
std
aas
sbb
cmc
int
movsb
addr16
and
pop
int
stos
ficoml
bsr
and
inc
cli
jnp
pop
pushf
jmp
pop
addl
ss
cmp
xchg
jge
les
xchg
push
out
adcl
nop
stos
mov
shl
adc
adc
fucomip
push
ds
stos
dec
dec
push
and
push
jae
inc
imul
xchg
inc
daa
std
jo
in
or
lcall
mov
lock
stos
adc
push
jbe
test
jg
dec
pop
inc
pusha
stos
cmpsl
popf
ret
mov
add
test
xchg
sti
es
xor
pop
sub
pop
sbb
jmp
or
imul
xchg
test
mov
dec
stc
sahf
mov
sub
jge
call
mov
les
adc
jno
fnstenv
outsl
mov
popl
fadd
in
addr16
jne
rorb
sahf
mov
outsb
addr16
push
xlat
ljmp
dec
push
test
mov
mov
fwait
xor
mov
jbe
mov
out
xchg
jl
sbb
add
arpl
cltd
popa
aaa
cmp
cltd
xchg
xchg
inc
cld
adc
fldt
idiv
adc
lds
inc
cld
lcall
decb
mov
xor
mov
dec
mov
dec
lret
sub
jle
lcall
dec
adc
fmull
sbb
lds
dec
fnsave
jmp
add
pop
popa
add
pop
push
mov
ss
add
loope
dec
inc
fstpt
push
or
adc
lea
mov
push
into
loop
inc
push
xor
mov
call
hlt
loopne
sbb
sbb
xchg
and
es
aad
mov
hlt
outsb
push
ret
xlat
scas
cmp
add
jmp
add
pop
xchg
jno
push
dec
arpl
sar
lret
mov
cli
lahf
std
xchg
dec
mov
jnp
popf
insl
push
mov
aaa
pop
into
sarb
mov
xor
push
addb
ja
mov
dec
jge
cmp
mov
xchg
arpl
add
cmp
mov
mov
sub
fidivrs
dec
mov
fiaddl
xlat
xchg
insl
imul
mov
push
adc
nop
pop
stos
mov
das
loopne
pop
ja
fs
lea
mov
xchg
mov
fldenv
movsb
pop
push
mov
cmpb
lahf
fnstcw
nop
sub
lds
std
xchg
lahf
rclb
ds
dec
sbb
lds
testb
push
sub
in
test
dec
lea
fcomps
sbb
jecxz
pop
arpl
popa
push
dec
jbe,pt
sbb
cmpsb
add
xchg
sbb
outsl
in
jge
and
inc
jbe
pop
movsb
out
cmp
sbb
or
mov
add
jne
je
inc
pop
sub
daa
in
or
add
pop
in
in
lods
dec
movsb
mov
movsl
adc
shr
push
outsb
pop
sbb
cltd
jnp
pop
lcall
hlt
in
dec
fstpl
fwait
xor
lods
jnp
jb
out
cltd
daa
lods
repnz
inc
adc
dec
test
mov
insl
xchg
dec
inc
stc
mov
dec
int
fldcw
shlb
lret
shlb
shll
movsl
pop
arpl
add
cltd
jbe
mov
lds
pop
jbe
mov
stos
mov
sub
data16
in
adc
dec
pop
mov
mov
mov
mov
push
push
xor
sub
fcoml
mov
fs
cwtl
mov
iret
jae
mov
pop
hlt
push
lret
cwtl
or
pop
ss
mov
test
cmpsb
mov
ret
mov
mov
lret
pop
adcb
rorl
push
push
xor
insb
cltd
xor
dec
mov
jecxz
push
test
es
out
ds
test
cmp
jle
adc
pop
icebp
or
mov
cltd
std
or
cmp
push
roll
or
sub
test
add
nop
xor
pop
cmp
not
test
ja,pt
jle
and
pop
mov
jns
add
or
leave
arpl
fs
or
imull
js
inc
stos
mulb
fcmovb
or
out
loopne
inc
adc
xchg
pop
pop
imul
pusha
test
inc
lea
fcomps
movsl
mov
pop
mov
pusha
lea
das
fistl
outsb
add
xor
das
subl
cmp
in
jecxz
sarb
sti
jbe
popa
imulb
pop
jecxz
enter
daa
cli
sub
gs
call
ret
in
lret
scas
inc
and
inc
mov
mov
sbbb
in
inc
pop
pop
mov
mov
jno
fwait
mov
jg
inc
mov
xchg
imul
repnz
xlat
rcll
rcrl
das
addb
lods
pop
int3
push
out
std
test
jne
inc
sbb
ret
xlat
outsb
daa
fmull
sub
push
testb
jl
inc
cld
mov
mov
cmp
inc
xor
cld
jle
mov
mov
das
inc
pop
in
dec
out
push
stos
xchg
aas
iret
fldenv
movsl
sbb
mov
js
xchg
push
andl
or
nop
mov
pop
and
cltd
push
fwait
out
cmp
pop
dec
lret
popf
cmpsl
cld
inc
xchg
pop
addr16
push
push
dec
push
aas
andb
or
ret
cld
sbb
mov
add
sub
xlat
xchg
and
inc
scas
inc
js
add
add
imul
arpl
movsl
out
dec
hlt
add
jbe
lcall
ds
aas
add
cmp
adc
rorb
sahf
cmp
iret
sbb
sarl
jp
cmp
out
cmpsl
sbb
inc
push
stos
test
mov
inc
xchg
std
popf
ljmp
mov
std
cmp
fcmovbe
shrb
and
mov
pop
mov
mov
das
andb
mov
cli
jnp
mov
lret
sbb
xchg
out
iret
xor
ljmp
jo
sbb
push
leave
jle
popa
add
sbb
scas
xchg
jne
inc
xor
hlt
in
std
dec
pop
mov
cmpl
mov
push
lcall
in
adcl
or
pop
xchg
mov
insb
add
jae
icebp
lahf
test
popa
cmc
loop
pushf
mov
and
in
js
scas
mov
out
loopne
das
jae
pop
divb
mov
fnstenv
test
inc
ficoml
shll
hlt
mov
add
bnd
pop
xor
fdiv
ret
jmp
mov
leave
mov
test
xor
lock
fstpl
inc
inc
push
in
or
push
aam
sbb
std
mov
iret
je
mov
mov
jnp
adc
js
pop
or
add
stos
insb
and
push
test
lcall
vmwrite
lods
jnp
cmp
push
xor
enter
hlt
mov
imul
and
xchg
mov
add
inc
xchg
test
pushf
xchg
arpl
jmp
mov
sahf
push
pop
loopne
or
scas
and
iret
js
pop
cmpsb
mov
lock
sahf
cmp
sahf
adc
daa
push
test
xchg
pusha
notl
jle
add
jno
jo
aam
or
cmpsl
jl
mov
mov
jnp
shr
lcall
rolb
xor
inc
sub
xor
fisttpll
ror
test
into
push
mov
shrl
lods
and
dec
cltd
xor
jo
push
mov
notb
mov
fbstp
imul
loopne
or
push
inc
decb
add
xchg
sbb
enter
out
jp
cmp
into
push
xchg
cli
aaa
xchg
sbb
or
std
jge
inc
enter
mov
data16
push
fcoms
dec
inc
inc
loope
in
out
cli
std
jmp
push
lret
lret
fisttps
cli
test
iret
add
or
movsl
xchg
xchg
mov
in
into
cmp
cltd
and
inc
fdivrs
sbb
dec
mov
in
add
and
xchg
mov
sub
daa
fs
sahf
and
cld
cli
pop
xlat
push
pop
push
ljmp
jno
pop
das
sti
or
push
sbb
jb
jl,pn
fildll
cwtl
xorl
cwtl
mov
xor
cmpb
daa
mov
mov
fwait
cli
jne
outsb
sarl
mov
mov
pop
mov
daa
call
dec
xchg
jp
xchg
inc
or
mov
push
sahf
mov
jne
jg
rorl
cld
push
enter
popa
in
not
cltd
mov
iret
jl
loope
lea
rcl
jmp
adcl
das
mov
shrb
adcb
pop
rol
cmp
jo
push
in
jecxz
js
xor
ds
add
sbb
std
jle
lods
mov
test
or
dec
mov
adc
jne
stc
leave
pop
push
loope
mov
mov
xchg
adc
and
sub
test
dec
sbb
push
test
jb
jnp
jmp
jne
dec
sahf
or
inc
cmp
scas
sahf
jge
sub
ss
nop
cli
pop
sbb
lods
fbld
popa
test
dec
aad
dec
call
fcoml
add
xchg
inc
add
out
sub
xchg
sub
xor
cmp
or
inc
mov
mov
dec
fucomp
xor
test
loope
movsb
pop
ret
je
leave
or
divb
xchg
in
jnp
and
cmp
gs
sbb
jp
xchg
popa
xchg
scas
iret
mov
fimuls
jns
sti
sub
sbb
push
jb
pop
adc
push
dec
xor
hlt
out
push
sbb
in
and
cmp
movl
sahf
orb
xlat
outsb
and
inc
cmc
call
jno
outsl
jnp
jbe
scas
std
xchg
das
cmp
out
test
and
pop
mov
and
push
xor
xchg
lds
jle
inc
xor
mov
pop
mov
js
fs
into
loope
add
insb
push
jae
insl
sub
sbb
dec
lahf
or
sub
stos
jbe
cltd
xchg
sub
add
mov
iret
sub
and
fcoms
jg
out
jbe
and
ret
and
pusha
cmpsb
xchg
jno
xor
shl
outsb
dec
xchg
sub
jmp
shl
cmp
jecxz
xchg
sbb
test
adc
sbb
arpl
out
js
mov
adc
mov
xor
dec
lea
dec
push
iret
stos
sub
rorl
in
mov
jns
imul
push
xor
jns
mov
fstps
add
test
ja
cmpsb
shl
insl
inc
inc
push
jg
movlhps
xor
jae
add
and
pop
xchg
add
fwait
sub
daa
mov
test
ljmp
mov
xchg
mov
cld
dec
clc
lds
imul
in
sub
xor
lods
add
cmp
inc
int
xchg
js
mov
dec
pop
cmp
cwtl
jb
outsb
es
lods
jg
pop
repnz
and
or
popa
sti
inc
scas
dec
aas
outsb
cmc
jne
and
cmpsl
push
cmp
out
addr16
cld
mov
pop
addb
xlat
sub
hlt
insb
mov
xor
or
xchg
xchg
push
fimuls
mull
inc
push
pop
mov
loop
sub
mov
ds
xchg
aam
pushl
movsl
inc
in
mov
repz
cltd
aam
xchg
fistpll
pop
jbe
mov
cmp
sbb
dec
insb
popf
pop
jp
fdivr
and
jmp
mov
mov
out
stos
dec
or
jl
adc
sub
dec
jmp
xchg
and
sbb
lret
dec
jns
dec
je
jns
push
mov
and
xchg
push
jbe
sbb
mov
cmp
xchg
push
out
adc
push
mov
roll
bound
adc
sbb
cli
jl
mov
dec
xor
and
shll
int
xchg
sarb
mov
adc
cltd
or
or
insb
mov
ja
fcmovb
sub
test
mov
dec
test
lods
mov
das
imul
pop
sbb
cmp
int3
fsubrs
inc
jb
loopne
lods
inc
and
adc
lret
popa
and
movsl
fisubs
pop
or
test
pop
repz
jno
int
inc
iret
repz
fldenv
pop
and
mov
jmp
or
cltd
mov
adc
jl
mov
or
jg
out
stos
icebp
in
lods
jae
repz
push
ljmp
jno
push
mov
and
imul
cmp
jno
add
xchg
xchg
xchg
pop
xor
jmp
xchg
dec
adc
ss
jne
and
js
and
push
jecxz
data16
jle
imull
sti
inc
mov
jne,pn
pop
xor
or
loop
jecxz
jge
lods
incb
adc
cmp
mov
push
loop
out
xchg
adc
or
adc
mov
mov
push
pop
out
pop
shrl
jmp
jno
shrl
hlt
dec
lahf
and
jno
sub
jmp
out
in
mov
mov
mov
test
int
fcomip
mulb
xlat
lea
fdivl
mov
cmp
dec
inc
test
adc
test
add
aas
jmp
in
lret
lods
inc
sub
fidivl
repnz
xor
inc
mov
push
jo
cwtl
push
and
mov
cmp
imulb
insb
dec
fmuls
push
jmp
loop
dec
stc
addr16
out
and
loopne
int
mov
clc
stos
inc
push
xchg
pop
ret
push
lret
cmc
cwtl
in
fistl
and
cmp
sbb
aaa
push
inc
bound
test
pop
push
scas
sub
sbb
push
dec
xor
lcall
lcall
std
xchg
add
fisttpll
dec
xlat
test
repnz
lock
mov
fsub
xor
mov
inc
xchg
fsts
sbbb
mov
divl
jns
mov
sbb
xchg
jle
sbb
pop
dec
fsubl
shll
pmulhuw
aam
negb
jle
arpl
inc
push
daa
outsl
fnstsw
stc
push
add
imul
sbb
jg
xchg
mov
or
mov
hlt
adc
cmc
dec
mov
inc
pusha
jns
lret
xchg
test
les
inc
inc
add
jo
push
inc
imul
mov
nop
daa
xchg
ret
jb
inc
xor
jne
cmp
xor
enter
stc
sarb
sub
imul
bound
arpl
js
xchg
stos
and
mov
out
add
or
mov
cmpsl
dec
cmp
cwtl
test
xchg
loope
inc
and
mov
or
subl
sub
push
sub
dec
inc
cld
fcoms
sub
cmp
fnstenv
xchg
test
scas
pop
aaa
adcl
mov
xchg
lods
inc
out
cli
jecxz
add
xchg
xor
shrb
loope
mov
jbe
jbe
push
sub
stos
inc
adc
addr16
fsubl
inc
lret
push
dec
shl
loope
mov
inc
mov
shll
fsubr
loopne
and
jp
mov
sbb
adc
in
popf
xchg
leave
fisubl
loope
mov
push
jo
push
cmp
xor
pushf
jecxz
jecxz
jmp
into
mov
aas
adc
gs
rcrb
xchg
or
pushf
nop
xor
in
ss
gs
fwait
pop
int
aaa
jmp
cmpsb
dec
push
rorb
mov
bound
ja
shlb
jo
imul
leave
adc
sbb
sub
mov
scas
xchg
jo
inc
sub
adc
xchg
jmp
and
mov
jg
getsec
stos
je
mulb
movsl
pushf
inc
inc
into
test
mov
outsb
adc
sub
out
ja
rcl
mov
fnstcw
push
test
aas
cmp
nop
out
fsubr
sarl
pop
push
push
xor
dec
and
fwait
cltd
xor
dec
mov
sti
jecxz
in
and
inc
dec
sub
pusha
cmpsl
leave
aaa
into
stc
into
imul
xchg
push
or
jo
jmp
sbb
mov
fidivrl
test
sbb
mov
push
sub
test
jecxz
pop
jno
cmp
in
cmp
test
es
or
jmp
mov
test
lds
xor
testl
stos
jbe
fsubl
jbe
lea
leave
pop
sbb
adc
inc
mov
aam
dec
cmp
hlt
jb
ret
mov
inc
dec
dec
test
sarb
lahf
mov
jnp
lahf
nop
jb
dec
insb
xor
lds
jp
add
es
mov
xor
dec
push
mov
and
sbb
inc
scas
push
pop
mov
push
fwait
movsl
mov
xlat
mov
dec
and
iret
test
testl
cmpsb
in
adc
push
das
pop
lock
icebp
popa
addb
cmp
int3
enter
mov
inc
dec
aaa
insl
lret
inc
mov
les
in
test
cmp
in
and
cmpsb
pop
ds
cmpsb
lret
xchg
pop
int3
ret
outsl
cmp
sbb
or
pop
jae
stos
bound
add
fwait
push
stos
jg
adc
mov
mov
mov
cmp
inc
sti
idivb
daa
aad
dec
sar
jg
loope
call
mov
and
fsubs
outsl
jp
inc
push
loope
inc
movsl
clc
adc
mov
mov
ret
les
xchg
add
pop
mov
mov
and
pop
sarl
adc
mov
mov
in
xlat
lret
sbbl
dec
sbb
fs
add
mov
into
rorl
xor
dec
dec
dec
jns
adcb
stc
repnz
dec
fwait
sti
dec
cmpsb
in
xchg
loope
xchg
in
es
xchg
and
mov
pop
add
js
aaa
cs
aad
shrl
push
test
popf
js
jle
insb
repnz
or
loopne
js
push
sbbb
or
bound
shl
rol
movsl
sbbb
xchg
int3
xor
cld
mov
lods
inc
fstpt
outsl
shl
fucomp
ds
testl
xchg
mov
jnp
xchg
scas
add
mov
fs
fmull
scas
in
cli
jge
inc
mov
jae
jge
pusha
pop
js
sub
outsl
jns
clc
aam
ss
rclb
and
sub
sbb
daa
pop
inc
sub
inc
inc
test
push
int
push
xor
loopne
mov
lock
sub
and
popf
jno
jle
bound
mul
pop
rorb
sub
mov
js
inc
popa
stc
inc
or
pop
sti
mov
fstpl
lcall
xor
fbstp
add
pop
mov
imul
mov
mov
pusha
andl
pop
insb
jo
mov
loop
push
outsl
scas
ds
fs
ror
xchg
cmp
popf
mov
jge
xlat
or
cmp
mov
aad
into
repnz
popa
mov
or
sbb
mov
sub
mov
jle
dec
or
cmpsb
imul
scas
mov
je
xchg
and
mov
mov
inc
test
push
push
pop
or
mov
idivb
xchg
rcll
bound
jbe
dec
and
push
fcomps
jno
je
fbld
xor
mov
xor
pop
repnz
pop
psraw
jns
test
mov
das
sbb
jle
xchg
jl
fs
mov
dec
lcall
mov
leave
push
and
or
and
and
out
inc
xor
insl
les
cli
or
adc
sbb
repnz
daa
or
and
cld
jl
fisubrl
insl
add
enter
lcall
pop
in
sbb
xor
cmpsb
lcall
cmpb
xor
lret
sbb
ljmp
push
nop
push
sarl
sub
out
test
xchg
clc
push
jbe
and
fldl
mov
push
stc
or
mov
add
test
and
sbb
sti
mov
sbb
sub
or
test
test
push
das
shll
push
out
stos
jae
mov
xor
jno
adc
and
stos
or
in
push
dec
dec
push
cld
jle
fnstsw
mov
js
sub
hlt
cli
jp
ss
nopl
imul
inc
fsubr
fnstenv
sahf
clc
push
into
sub
ja
adc
scas
xchg
inc
push
and
push
push
enter
or
xor
inc
outsl
cli
push
bound
or
or
testl
imul
into
ss
xor
dec
xlat
cmp
rcl
lea
cmpsl
inc
fisubs
mov
into
mov
sbb
pop
cmp
push
dec
push
mov
cmp
push
xchg
std
push
dec
jne
xor
lahf
add
sub
stos
dec
in
enter
xchg
jp
lret
negb
jae
pop
jmp
inc
outsb
ja
pop
pushf
ja
adc
es
mov
insl
push
test
inc
mov
insb
stc
push
cmp
pop
out
jbe
xorl
or
sub
out
aaa
xchg
fs
int3
stc
lret
push
imul
mov
add
or
lahf
leave
repnz
iret
xor
sub
cwtl
push
aad
xchg
test
loopne
rorl
shll
pop
in
in
mov
and
call
cmp
inc
sahf
xor
cmp
in
xchg
and
leave
test
pushf
sub
in
mov
adc
sub
sbb
inc
sub
push
inc
stos
clc
mov
push
out
xchg
mov
mov
fs
inc
inc
xchg
cmc
push
inc
cmp
mov
push
movsb
xor
pop
mov
stos
cltd
mov
popa
lds
icebp
jl
mov
jae
or
int
xchg
and
fists
xorl
mov
add
cltd
inc
sti
subb
sub
inc
lret
stos
cmp
push
arpl
subl
scas
shr
mov
inc
in
adc
gs
or
sub
sub
or
jns
mov
xor
fsubrs
sbb
lret
xor
cmp
in
std
stos
adc
adc
aaa
lods
jge
push
mov
ljmp
mov
mov
mov
cs
sbb
and
mov
arpl
mov
dec
xor
push
ljmp
xchg
iret
movsl
in
std
mov
iret
lds
cmp
subl
cltd
out
jmp
pushf
testb
push
lret
movsb
inc
mov
xchg
lret
jmp
fcomps
pop
jae
into
nop
and
outsl
mov
mov
mov
pop
cmp
sub
mov
and
ljmp
xchg
ficompl
int
and
fidivrs
inc
fldcw
fwait
testb
stc
inc
imul
xor
inc
mov
cld
mov
in
inc
imul
lods
jnp
xchg
test
inc
mov
pop
lea
clc
sub
mov
test
roll
jge
mov
mov
jns
xchg
jg
cltd
fnstenv
xchg
cli
dec
mov
int3
loopne
pop
mov
fisubrs
rcrb
dec
or
sbb
jnp
lock
hlt
sub
out
jecxz
inc
pop
xor
mov
mov
ret
add
cld
dec
movsb
jg
pop
dec
lds
or
push
movsl
aaa
pop
xor
mov
dec
or
call
xlat
mov
fstl
cmp
testb
stos
inc
push
movsb
mov
xor
mov
push
sahf
sbb
test
ficoml
cmp
rorb
adc
outsl
fistps
dec
out
mov
adc
imul
in
push
mov
pop
outsl
pop
lods
and
movsb
pop
es
jb
push
stos
jge
lock
sub
xchg
lahf
cli
not
pop
push
popf
and
insb
dec
enter
mov
mov
adc
mov
sbb
sbb
arpl
sbb
dec
fnstenv
mov
jae
push
cmp
fcom
xor
popa
pop
cmp
pop
jns
pusha
das
inc
repz
sbb
jbe
sbb
sub
js
mov
pop
outsl
push
adc
xchg
dec
test
dec
jns
fincstp
arpl
mov
stos
xchg
mov
ss
lods
fdivr
jnp
add
lea
hlt
jle
lds
push
xchg
or
xlat
add
push
cmc
push
jge
fwait
adc
testl
mov
xchg
insb
jne
xchg
sub
test
jecxz
into
push
nop
add
xchg
jl
sub
mov
pop
jb
jns
push
lds
rcrb
in
pushf
ror
ja
test
mov
mov
cwtl
fdivrs
pop
js
fs
inc
lock
js
cltd
push
es
addr16
inc
push
sub
arpl
test
adc
icebp
xlat
outsb
and
lret
xor
adc
into
lds
push
inc
and
inc
sar
inc
xor
inc
fistpll
incl
test
mov
adc
jnp
cmp
lods
das
stos
sbb
stc
popf
out
sub
and
xor
lods
incb
adc
xchg
test
lcall
fwait
in
and
loop
or
push
push
cs
sbb
jl
jns
dec
gs
jno
or
mov
inc
adcb
jecxz
andb
xor
xor
sbb
call
sbb
mov
mov
cltd
inc
jo
ja
mov
test
jae
popf
cltd
and
into
jp
or
inc
popl
jmp
xchg
in
dec
push
mov
loope
inc
push
cwtl
inc
mov
out
lds
imul
ds
inc
int
popf
adc
mov
push
add
test
pop
shl
add
scas
call
mov
sahf
cmc
jb
mov
fstpl
loop
aad
mov
xor
adc
cmp
xchg
js
push
mov
int
bound
fisttps
movsb
out
mov
xchg
repnz
inc
jnp
sti
pop
fnstsw
js
roll
je
mov
fdivp
das
addr16
jle
or
cmp
shr
jbe
adc
test
pop
cmc
mov
negl
push
out
adc
xor
cwtl
push
fsub
adc
sbb
inc
pop
cmp
or
in
test
icebp
sarl
xor
add
daa
jno
mov
aam
add
imul
jecxz
cmc
jno
ss
push
jbe
shrl
shr
mov
shrl
stos
gs
clc
jbe
pop
adc
fadds
lea
jl
xchg
leave
push
sub
idivl
scas
fisubs
sahf
xchg
xchg
or
inc
lret
xchg
xor
stos
push
add
leave
jae
mov
imull
jb
nop
push
orb
roll
lock
pop
mov
mov
loop
xor
xchg
xor
rcl
push
pop
cmp
dec
scas
icebp
mov
ds
push
jo
adc
aas
mov
outsb
sub
mov
out
loope
dec
cmp
outsb
test
lea
popa
inc
call
jne
lahf
jb
mov
stc
adc
rcrb
add
sti
xchg
push
aas
outsb
sbb
jno
movsl
js
push
in
or
das
cmp
mov
sbb
or
and
out
stc
mov
in
pop
jae
jo
fwait
pop
mov
mov
inc
pop
hlt
aaa
lahf
mov
adc
inc
sbb
ja
imul
popa
inc
push
cmc
les
cli
xor
aas
pop
xchg
jno
push
popf
sbb
jl
hlt
popf
mov
push
pop
mov
testl
adc
ret
jne
pop
out
sbb
cwtl
scas
push
push
and
mov
loopne
pushf
push
loope,pt
cmp
insb
arpl
pop
xchg
pop
jbe
lahf
idivl
inc
xchg
sbb
out
fdivrs
sahf
mov
jbe
add
repnz
cmc
es
add
sbb
clc
rcll
xor
sub
push
pop
ljmp
push
inc
std
mov
push
int3
mov
outsb
int
popf
inc
lcall
out
pop
incl
lea
pusha
xchg
and
mov
rorb
popf
pop
in
pop
gs
iret
and
pop
push
cmp
test
addb
pop
or
fsubl
cwtl
scas
xchg
insl
push
mov
rolb
in
pop
es
mov
sbb
dec
pop
sbb
cld
jae
inc
fdivr
je
dec
or
xor
xchg
test
fidivrs
cmp
sbb
loope
push
cld
mov
ljmp
mov
sub
daa
outsl
push
repz
xchg
pushf
ljmp
mov
pop
mov
pop
mov
ja
cs
mov
lods
push
or
dec
ds
inc
cbtw
das
mov
ror
mov
int
or
and
or
adc
jnp
push
lods
call
mov
cmp
shl
sbb
cmp
dec
data16
ficoms
mov
mov
or
xor
cmp
pop
loope
dec
cmp
in
inc
dec
das
dec
pop
pop
call
ss
movsb
jg
push
push
jbe
add
xchg
adc
testl
mov
shl
loop
and
adc
adc
adc
sbb
sbb
mov
mov
iret
testb
incl
int3
lret
call
xor
fsubrs
loopne
repnz
xor
sub
test
dec
cmp
jb
ja
and
push
jb
in
pop
mov
je
mov
fidivrl
les
jge
arpl
push
idivb
pop
cwtl
aad
inc
clc
mov
loope
outsb
pop
es
adc
ss
add
pop
hlt
std
lret
fldt
cmpsb
lcall
push
mov
and
hlt
cmpsl
aam
cmp
movsl
aaa
into
push
adcb
sub
das
mov
aaa
mov
xorl
aaa
or
dec
lcall
filds
fmull
mov
mov
aam
and
cltd
dec
pop
mov
fsubp
pop
int3
xor
lock
and
xchg
cmp
mov
sbb
inc
daa
fdivrs
sbb
loopne
cwtl
xor
inc
jecxz
mov
mov
rcll
das
out
sbb
enter
shlb
je
jge
sbb
add
dec
nop
mov
aaa
dec
inc
xor
outsl
add
add
cmp
fildll
cwtl
and
jmp
inc
lcall
in
mov
test
mov
mov
outsl
faddl
loopne
cmp
test
scas
jg
popa
es
movb
jg
nop
add
insl
adc
sbb
call
es
bound
add
cmpsb
mov
xlat
cld
xor
jns
pushf
lret
scas
push
in
and
push
lcall
bound
push
hlt
jns
repz
cli
and
fnstenv
cld
mov
test
mov
pop
xchg
cltd
lahf
daa
mov
add
sub
jo
outsl
mov
aas
pop
scas
pushl
fidivs
jmp
dec
dec
pop
repnz
and
ficoml
sbb
lret
and
addps
rorb
pop
popf
jae
ljmp
xchg
cld
mov
sub
and
sbb
adc
aas
and
mov
addb
push
fcmove
cmp
pushf
push
lock
fidivl
lcall
xor
fsubl
adc
pop
cli
insb
push
mov
pop
xor
push
add
mov
inc
lret
mov
or
pusha
cmp
sub
push
mov
sbb
repz
repnz
dec
mov
movsl
inc
cmp
fsubrp
leave
mov
sti
or
dec
pop
jecxz
push
inc
jp
das
push
adc
xlat
cmp
out
fs
cli
cltd
mov
sbb
push
adc
adcb
enter
xor
xchg
xchg
jae
mov
pop
jg
push
mov
fwait
cld
xchg
or
lahf
lods
scas
sti
pop
sbb
push
imul
icebp
xor
out
in
daa
das
xor
or
ret
test
cmp
pop
push
push
add
jnp
pushf
ficomps
aad
fcompl
cmpsl
push
cmpsl
clc
jl
lock
pop
imulb
push
rcl
jecxz
lea
iret
adcb
stc
test
test
nop
rorb
push
out
ficompl
out
test
lret
xchg
push
daa
jle
pop
jmp
and
fldt
daa
cltd
xchg
dec
dec
lcall
imul
cmp
push
negl
test
mov
sbb
jge
push
out
cmovl
shl
push
inc
add
sar
in
inc
mov
pop
xchg
adc
in
or
addl
adc
sahf
sahf
stos
in
xchg
cmp
dec
dec
mov
pusha
adc
inc
ficomps
stos
jae
pop
mov
insl
in
pop
inc
and
xor
loope
push
sbb
sub
mov
cmpsl
add
add
jp
xchg
and
or
add
lea
out
fstl
imul
leave
movaps
sbb
addb
or
shrb
inc
dec
cmp
pop
fbld
or
pop
aas
int3
imul
pop
or
cmp
mov
and
push
push
add
mov
jle
fsubrl
fbstp
xor
fldenv
mov
ret
add
jno
lret
enter
mov
stos
mov
das
icebp
std
aam
es
int3
sbbl
sub
cld
lcall
test
aad
sbb
cmp
xor
out
inc
mov
lcall
fimull
xlat
loopne
add
mov
addr16
pop
or
es
or
sarl
lcall
repz
lea
jae
push
movlps
jno
stos
xchg
enter
std
or
xchg
cmp
stc
and
lret
es
lods
push
pop
ja
scas
push
jge
arpl
jb
dec
xchg
mov
jno
inc
lea
sub
faddl
scas
push
pop
add
adc
cwtl
incb
cmp
insl
pop
adc
hlt
mov
jne
xchg
mov
rclb
test
sbb
mov
xor
mov
push
jmp
lcall
test
lock
inc
lods
dec
ds
and
rorl
dec
xchg
add
jb
mov
xchg
sarb
punpcklwd
test
movl
or
xlat
stos
dec
sub
gs
sub
leave
imul
push
fcomp
test
lods
push
xor
push
jp
test
out
mov
xor
or
addb
or
insl
xor
sbb
cmp
inc
int
aas
inc
std
cli
dec
dec
sub
fists
nop
mov
jno
scas
inc
mov
test
pop
pop
push
jge
pop
sbb
ret
in
jno
mov
addb
mov
jno
jp
imul
sahf
adc
xor
aaa
sti
loopne
shll
jle
std
or
mov
cltd
dec
mulb
sub
xor
mov
sbb
pop
dec
ljmp
lret
dec
mov
pop
fcomip
fcoms
mov
mov
and
imul
sub
in
sub
push
cli
fwait
arpl
jl
test
cmpsl
sub
out
popa
jmp
aaa
add
sbb
dec
test
mov
shr
xchg
imul
cmp
pop
sahf
das
repz
leave
stc
or
cmp
xchg
shrb
mov
and
add
ljmp
loop
ljmp
repz
jo
loope
daa
and
nop
iret
xchg
scas
inc
add
notb
idivl
xchg
mov
adc
mov
xor
outsl
push
out
mov
jmp
out
iret
loop
mov
pop
mov
dec
dec
inc
pop
mov
inc
push
jecxz
ret
lock
add
iret
enter
dec
pop
pop
outsb
ret
rol
push
xchg
iret
pop
testl
pop
rcrl
ljmp
inc
dec
inc
fildl
cmc
cmp
push
popa
mov
lock
add
push
dec
add
jg
xor
push
sahf
xor
mov
mov
fs
mov
ds
mov
test
outsl
cmpsl
mov
loope
mov
pop
add
imul
lock
mov
shl
jo
add
mov
xor
aad
imul
sub
jns
loopne
scas
xchg
fcmovnb
pusha
loope
adc
fildl
adc
aad
cld
or
jnp
jmp
movsb
dec
gs
aas
xlat
lock
decl
pop
mov
imul
mov
dec
imul
or
test
add
mov
jge
das
mov
js
dec
iret
jbe
jl
ja
and
lret
inc
xchg
add
scas
adcb
shlb
iret
or
jnp
cltd
mov
and
xchg
cmp
imul
std
push
dec
mov
std
mov
fstpt
add
stc
add
adc
outsl
push
pop
and
daa
mov
filds
push
test
xchg
jmp
je
xor
pushf
dec
mov
aad
push
fwait
lock
imul
addr16
adc
inc
jo
adc
or
push
sbb
scas
inc
or
xchg
stos
out
mov
rcl
lods
mov
mov
sub
ja
push
orb
sub
cmp
outsl
stos
mov
pop
adcl
icebp
icebp
inc
or
dec
shll
xlat
lods
out
jno
push
sub
scas
shl
int3
mov
scas
jae
xchg
aaa
mov
ret
jns
jns
iret
inc
cmpsl
out
jb
sub
aaa
inc
mov
arpl
push
into
or
scas
pusha
push
inc
nop
push
cmc
xor
jmp
sbb
mov
xchg
cmp
icebp
movsl
cmp
sub
mov
sbb
fdivp
pop
xchg
push
mov
mov
add
pop
mov
in
cmpsl
push
pop
sti
stos
inc
and
push
fadd
sbb
and
ds
jmp
and
jmp
shr
pop
xchg
mov
jno
jmp
mov
test
in
mov
xchg
xchg
add
adcb
jecxz
jb
cwtl
mov
mov
lea
inc
push
std
inc
icebp
mov
push
jb
aam
jle
dec
xchg
cmp
push
xor
xchg
pop
stos
addb
repz
inc
xor
xchg
mov
or
lods
mov
insb
stos
and
sbb
cmp
out
sbb
sub
add
std
cmp
test
inc
xor
cwtl
jnp
cld
sbb
jne
repnz
sbb
data16
cmp
lds
lea
xchg
adc
xchg
add
mov
push
cwtl
add
or
mov
movsb
int3
xchg
sub
xchg
frstor
testb
push
xor
xor
mov
scas
ss
inc
or
and
int
imul
cmc
stos
pop
fdivrl
mov
das
mov
jo
mov
stc
shrl
les
rorb
add
inc
xor
andb
or
jae
jg
push
and
cmpsl
push
insb
mov
dec
out
fisubrl
idiv
movl
push
enter
jne
push
enter
imul
jb
outsb
out
inc
lods
jl
inc
int
enter
adc
jb
jmp
out
adc
cmp
scas
mov
stos
ljmp
lret
pop
sub
inc
and
lea
cmc
cmp
mov
ds
adc
jge
shlb
sub
pop
xchg
jle
in
popl
sbb
insl
rclb
and
cmp
push
xchg
dec
mov
jg
sbb
lock
jp
push
fisubrl
dec
xchg
sub
sub
dec
sbb
shr
mov
or
or
cmp
repz
ficoms
push
arpl
sbb
push
adc
mov
out
imul
sbb
aas
lock
aas
mov
jnp
sbb
dec
cmpsb
cmp
pop
jp
xchg
lods
ds
shrl
dec
push
lcall
cwtl
orl
pop
call
jns
inc
adc
cwtl
xchg
stos
leave
push
lcall
movsl
mov
xlat
xor
ficoml
mov
rcrb
xchg
test
mov
pusha
lds
rorb
lea
dec
xchg
shll
jl
add
xchg
sbb
popl
mov
je
jg
xor
ljmp
test
xchg
mov
adc
mov
jne
add
mov
aas
dec
aaa
mov
dec
into
andl
pop
and
mov
mov
mov
adc
xchg
js
mov
jae
sarl
fstl
mov
popf
fsts
addl
push
sub
test
cmpsb
sub
mov
imul
out
int3
ds
xlat
outsb
lcall
xchg
repnz
add
int
jo
es
add
sbb
dec
push
into
lods
mov
es
adc
jp
pop
cmp
sub
bound
push
push
cmpsb
pop
aam
jbe
pop
ljmp
or
cmpsb
pop
lea
push
jnp
mov
cmp
loop
orb
divl
rcrl
mov
add
xor
ret
into
enter
movsb
addr16
nop
add
jnp
xor
data16
xlat
add
inc
adc
jmp
addr16
lret
sar
ljmp
out
inc
fdivl
xor
das
cmp
dec
cmp
and
adc
xorl
aad
push
cld
pop
xlat
pop
lods
push
fsubs
scas
xchg
inc
or
aad
xchg
stos
shrl
jns
mov
xchg
addr16
popf
pop
adc
das
jne
mov
cmp
in
ds
jmp
sti
pop
mov
or
adc
mov
sbb
push
inc
push
js
fldenv
std
in
mov
pop
fildll
aad
push
cmp
mov
pushf
scas
jno
ljmp
out
mov
loopne
adc
or
mov
icebp
and
mov
cmp
pop
cli
dec
adc
xor
lds
mov
adc
cmp
mov
shl
clc
in
scas
xor
stc
or
pop
outsl
insl
adc
test
into
cmc
or
call
inc
sti
add
rorl
scas
out
push
js
das
inc
adc
or
movsl
mov
mov
inc
push
movsl
ss
movsl
out
loop
xor
arpl
in
cmpsb
in
jns
push
mov
inc
mov
lahf
dec
push
inc
out
std
add
fcmovb
enter
int
xchg
adc
inc
push
mov
and
pop
xor
nop
call
push
mov
push
mov
int
int
fisubl
lods
pop
aaa
push
cmp
nop
imul
dec
scas
fsubl
mov
lock
cmp
cmp
jl
adc
cmpb
mov
ret
pop
xchg
divl
push
and
mov
cmc
mov
sub
add
mov
mov
mov
push
enter
stc
inc
mov
inc
enter
in
sti
mov
or
mov
push
ret
adc
movlps
mov
ret
xor
test
mov
jge
pop
inc
pusha
mov
scas
pop
push
lret
cmp
test
lock
fld
xor
adc
out
test
lahf
push
mov
insb
add
adc
inc
les
inc
cmp
dec
sahf
mov
out
inc
fwait
pushf
xor
cwtl
setp
sti
aad
sub
test
cltd
test
and
inc
loope
jae
lret
push
out
out
xor
cmpsl
jns
mov
push
in
sbb
mov
push
jg
arpl
inc
push
sbb
xor
adc
cmp
int3
call
inc
xchg
es
insb
mov
add
mov
cmpsb
insb
adc
cmpl
add
pusha
xchg
mov
daa
cmpsb
les
int3
cmp
inc
data16
pop
jg
negl
and
fdivrp
scas
add
cmpsl
adc
fidivs
dec
loope
dec
xchg
hlt
out
fsubrp
es
pop
xor
cltd
test
les
movsl
fsubl
shlb
or
pop
push
stc
and
add
lods
xchg
cmp
push
inc
call
sarb
fsubl
mov
std
test
dec
jbe,pt
and
mov
or
ja
fistpll
out
mov
mov
push
xlat
repz
call
leave
cmovbe
fs
addr16
sahf
and
xorl
adc
idivb
imul
jmp
pop
jp
xchg
jo
jl
lret
adc
xchg
ss
push
mov
aam
lret
jnp
inc
sbb
repnz
or
pusha
mov
aam
dec
cltd
ss
push
jmp
sti
out
push
call
add
adcl
pop
mov
dec
xor
and
les
xchg
mov
mulb
call
jmp
add
mov
fisubrs
ja
jl
mov
adc
insb
inc
and
jle
js
cmp
push
ss
jge
mov
adc
push
or
test
adc
pushl
push
sub
popa
and
hlt
sti
pop
and
stos
in
aad
push
sub
lret
add
loop
fisubl
cmpsl
lock
pop
xor
popf
xor
dec
cmp
pop
add
je
jae
aas
mov
fildl
and
fsqrt
lret
out
inc
fisubs
pop
andb
push
lea
movsl
inc
popa
mov
push
imul
xor
sub
aad
clc
dec
imul
in
dec
pop
push
jne
add
gs
push
mov
jae
out
std
aaa
jl
cltd
sub
sbb
divl
lcall
mov
cli
lock
xchg
adc
or
std
fildll
testl
cmp
cmpsl
test
lret
stc
lods
inc
sbb
int3
or
movsl
xchg
dec
fdivs
pop
mov
mov
adc
cmpsl
aam
pop
mov
mov
cmp
or
insb
cmp
push
push
jbe
gs
adc
xchg
xor
out
cmpsl
imul
or
jno
test
xor
popa
addr16
inc
les
sahf
dec
pop
rorb
fdiv
std
and
outsb
xchg
stos
test
jle
jge
lods
xor
lahf
int
shl
inc
lret
xor
pop
hlt
pop
xchg
sbb
mov
jnp
aas
or
mov
jns
xlat
pop
cltd
test
jl
jae
jb
push
int3
lret
sti
add
shll
pop
std
ljmp
incl
inc
jg
mov
ja
push
sub
jmp
and
push
jge
xchg
ret
enter
ja
or
pusha
mov
push
sbb
dec
jge
fnstsw
jecxz
mul
jb
pop
lods
enter
rcrl
in
mov
scas
push
ret
or
mov
add
leave
sbb
cli
jecxz
xchg
stos
cmp
pop
mov
sub
fistps
aad
ja
adc
hlt
cmp
sti
xchg
add
std
jmp
jle
jg
pop
aaa
push
pop
mov
lcall
jle
aam
xor
jmp
pop
test
aam
add
fs
aam
fstpl
and
sbb
jb
aas
pusha
into
lcall
xor
mov
stos
movsl
cmpsb
xchg
popa
xor
or
mov
mov
add
orb
movb
jnp
insb
testb
adc
stos
push
out
out
jge
test
sbb
cmp
mov
xchg
cmp
or
mov
xchg
cmp
das
sbbl
jmp
ljmp
jb
mov
pop
push
push
push
ret
das
xabort
das
js
sbb
adc
push
je
insb
out
pop
daa
sub
lds
dec
pop
insb
leave
into
test
push
mov
and
aaa
repz
insl
add
or
mov
repnz
lods
cli
rorb
mov
arpl
cwtl
and
sbb
mov
ja
lret
dec
and
shlb
mov
ljmp
xchg
add
or
mov
and
ret
dec
add
cmp
mov
push
in
pop
push
cmp
pusha
repz
mov
and
xor
andb
cmp
push
cmc
les
add
xchg
in
ret
inc
out
xchg
lahf
xchg
inc
cmove
out
xchg
mov
in
scas
sbb
mov
pop
mov
roll
cmp
sub
pop
mov
sbbb
jl
pop
in
xchg
add
sti
sub
jge
add
or
sbb
stc
inc
jno
sti
push
fidivl
cmpsb
add
andb
cmp
xchg
mov
pushf
out
aaa
leave
into
jmp
sbb
xor
xchg
adc
push
push
out
orb
xchg
addr16
pop
adc
sbb
or
xchg
mov
fnstsw
mov
aad
outsl
pop
test
pop
ret
cmp
call
popa
mov
std
or
out
and
psubsb
jnp
inc
and
int
jo
xor
iret
adc
rorb
movl
shlw
imul
shlb
test
push
ljmp
jge
insb
enter
insb
and
xchg
xchg
ret
pop
mov
frstor
loopne
lret
rcl
cmpsb
les
pushf
std
jle
xchg
in
test
outsl
daa
adc
xor
mov
mov
mov
jg
ret
aas
sbb
repz
jl
jae
lcall
inc
sub
arpl
cmc
mov
or
idiv
xchg
pop
arpl
aaa
sahf
fstpl
cmpl
int
ret
push
xchg
sbbl
push
jge
leave
pop
scas
pop
imul
hlt
mov
js
cmc
arpl
dec
cwtl
cmp
push
icebp
enter
adc
icebp
dec
xchg
adc
xor
sub
push
pop
mov
std
mov
enter
cmp
push
lahf
jmp
add
and
adc
dec
rcrb
inc
mov
xchg
sub
mov
jmp
mov
inc
cmpsb
adc
sub
rolb
sarb
rcrb
aam
loop
imul
add
or
and
xor
clc
test
mov
and
into
loopne
push
outsl
pop
mov
sarl
inc
pop
loope
dec
mov
stc
outsb
aad
jmp
cld
pop
inc
push
and
pop
je
dec
shrb
mov
aas
outsb
cmp
das
addr16
insl
jg
or
lea
aaa
in
jecxz
fldt
pop
inc
jb
pop
mov
popf
gs
orb
aaa
xlat
xlat
dec
movsl
push
shl
pop
or
dec
mov
xchg
xor
jmp
jl
mov
lret
aaa
pusha
mov
add
pop
aas
rcll
xlat
sbb
lahf
loope
inc
mov
pop
mov
int
pop
imulb
push
jbe
cld
dec
jnp
mov
add
icebp
les
mov
jg
sbb
add
cmpsl
cltd
xchg
scas
xchg
adc
push
cli
gs
push
push
aad
les
mov
xchg
xchg
mov
cmp
mov
les
mov
sahf
sub
lcall
jns
fwait
sub
dec
jbe
cmp
negb
fsubs
in
mov
cmp
add
inc
enter
mov
imul
in
in
stos
and
cli
xlat
jmp
pop
es
es
ret
clc
fnstcw
xchg
mov
orb
popa
push
xchg
add
in
std
adc
adc
add
pop
xchg
icebp
test
sahf
xor
sbb
gs
mov
scas
out
scas
dec
and
xor
mov
push
mov
sbb
jg
xor
rclb
ret
clc
inc
aad
shr
mov
int3
mov
add
push
add
lods
test
mov
lock
cltd
mov
dec
push
std
jae
insl
and
xor
mov
pop
jbe
adc
push
mov
jb
loop
adcl
sahf
xchg
adc
push
sbb
test
cmp
insb
jle
std
xchg
pop
mov
or
pop
jo
adc
adc
in
mov
mov
outsb
cmp
out
les
add
add
movsb
mov
test
cmp
popf
and
push
jne
push
out
pushf
xor
sub
cmp
mov
dec
adc
leave
sub
int
lcall
test
jne
mov
add
clc
mov
jg
mov
mov
xor
js
lcall
add
adcb
pop
and
xor
pop
cmp
inc
push
daa
outsb
pop
inc
inc
pshufw
push
std
stc
nop
jg
mov
insb
shll
dec
ds
js
pop
lock
es
push
inc
clc
and
lods
jle
pop
cmp
popf
and
lods
iret
shlb
js
out
mov
stos
test
jle
inc
loop
data16
jno
movsb
fcmovnbe
and
or
out
fwait
divl
lret
and
mulb
push
push
and
and
ja
jmp
rcl
push
adc
dec
xchg
cltd
mov
les
mov
pushl
xchg
mov
push
imul
mov
mov
popa
mov
das
stc
sbb
shl
dec
xor
mov
hlt
mov
out
inc
dec
pop
mov
dec
sub
pop
int3
mov
or
lcall
stc
test
test
fwait
mov
and
xchg
sbb
sub
lret
out
xchg
clc
mov
cmp
dec
pop
ljmp
out
mov
cmpsl
xchg
push
sbb
xchg
sti
jo
fcmovnu
lahf
fsubrl
addl
imul
movsl
mov
dec
push
iret
add
jne
lahf
lods
negb
insl
jge
fdivs
dec
dec
pop
push
mov
sub
scas
clc
scas
jp
xchg
adc
cmp
stos
jl
xor
nop
dec
jno
inc
dec
xlat
test
jge
push
cwtl
das
cmpsl
or
sbb
movsl
mov
mov
mov
daa
imul
push
pop
sub
jnp
repnz
jge
mov
cmpsl
stos
das
mov
aad
das
jg
mov
rcrb
loopne
shll
je
lds
dec
or
les
lods
mov
repz
sub
pop
sub
cmp
sarb
xchg
fs
insb
loopne
xchg
lds
fstps
movsb
jns
pusha
es
scas
test
lret
ja
xor
jae
push
push
xchg
sbb
xchg
push
mov
orb
mov
xchg
stc
ja
pop
les
mov
loopne
js
cwtl
pop
imul
mov
ss
pop
adc
ficoms
lar
xchg
js
pop
xchg
push
fwait
inc
fsubs
cmp
div
pop
mov
sbb
push
xchg
adc
jb,pt
fidivl
adc
lret
sahf
push
cli
in
jbe
cli
call
inc
cmp
popa
jg
xchg
cmc
aas
shlb
or
ljmp
pop
jo
mov
pusha
dec
pop
roll
icebp
cmp
daa
and
decl
dec
into
stos
sar
es
pop
pop
xchg
pop
test
ja
jno
sbb
jnp
outsl
ret
loop
xchg
dec
aam
push
jle
clc
and
cmc
xchg
into
xchg
add
popf
data16
dec
int3
popa
je
rclb
add
shll
pop
outsb
shll
jo
call
fwait
cwtl
mov
push
cmp
sub
xchg
mov
and
gs
add
daa
dec
sbbl
cld
inc
dec
sbb
and
cwtl
xchg
outsb
shll
fcomip
mov
mov
jmp
mov
fwait
xor
jnp
add
dec
mov
xchg
dec
adc
and
mov
mov
aam
jne
dec
and
lcall
fidivl
mov
popa
pop
xor
ret
cwtl
pop
sbb
sbb
add
sub
push
or
sub
cmpsl
mov
push
ds
ss
cld
push
in
vmovhps
inc
imul
push
je
xchg
mov
jg
cmpsb
lock
sub
push
mov
repz
mov
jp
call
xchg
lret
sbb
out
test
xchg
jl
addr16
sbb
movd
lret
fadds
sbb
fst
in
or
mov
movsl
add
imul
xchg
mov
sub
sti
test
push
dec
dec
lds
dec
pop
sub
shlb
loope
fistpl
cmp
dec
jae
dec
rcrb
out
mov
fldt
sub
add
lods
pop
push
aam
mov
out
jle
es
sbb
outsb
add
ret
outsl
dec
push
repnz
test
add
leave
or
jns
xchg
dec
fucomip
stos
in
scas
mov
dec
fidivs
in
mov
or
dec
xlat
dec
bound
movsb
js
lcall
mov
roll
gs
arpl
sub
into
shll
fildll
inc
out
or
loop
inc
mov
movsb
std
xchg
xor
js
shrb
int
pushf
push
in
sarl
test
adc
mov
lock
inc
and
mov
jne
pusha
cmpsl
test
jle
pusha
mov
movsb
in
lahf
out
inc
push
movsb
outsb
pop
insb
push
pop
xor
jbe
test
push
rol
pop
dec
call
in
inc
mov
xor
sub
dec
enter
push
lahf
inc
fistpll
aad
fdivl
jge
dec
in
sbb
test
and
push
and
outsb
lret
in
cmc
mov
add
adc
adc
mov
push
xor
test
jge
adc
rcrb
int
add
sbb
mov
lret
in
mov
inc
and
mov
pop
inc
jnp
sbb
cltd
xor
int3
mov
adc
mov
fimull
xor
stos
ja
loope
jge
leave
or
movsl
add
sub
add
fidivl
shlb
add
fsubs
ror
cs
jle
ljmp
fwait
sub
inc
cld
inc
xor
xchg
push
push
mov
or
mov
pop
jns
push
sub
adc
js
test
cmp
outsb
ja
sti
shll
insb
jle
ds
test
fistps
loope
cmp
adc
mov
popa
and
jle
mov
jb
mov
mov
xchg
movsb
sbb
mov
xor
inc
inc
aad
lods
cmp
jg
push
cmp
inc
loop
xchg
popa
sahf
sbb
pushf
scas
mov
out
add
cli
test
in
push
jbe
aam
lock
int3
jmp
lods
cs
mov
xor
sub
push
mov
aaa
sub
out
pop
scas
sbb
jb
dec
push
cmp
stc
nop
xchg
lds
call
sti
push
addr16
jbe
and
fcoms
jb
and
lea
push
test
dec
sub
mov
jb
push
or
enter
je
cmp
add
int
push
cmp
fildll
or
cmpsl
cmp
or
or
fistps
add
jbe
addr16
push
movsl
inc
lret
inc
xor
outsl
inc
sbb
loopne
testb
or
stos
jg
ljmp
or
xor
fsubl
jb
jbe
arpl
negl
adc
inc
je
pop
push
xor
mov
push
and
sbb
inc
xlat
data16
sbb
pusha
ret
or
or
rcrl
pop
and
dec
push
shr
icebp
add
jno
xchg
gs
andl
sbb
jo
xor
xchg
sar
test
xor
repz
and
mov
inc
jnp
pop
mov
shr
dec
push
rcll
push
mov
sub
fisttpll
push
inc
in
mov
test
sub
insb
jb
sbb
push
jbe
cmp
xchg
cmc
and
test
icebp
pushf
ja
or
ljmp
in
add
push
popf
cli
pusha
pop
sbb
repz
jl
xchg
std
cltd
popf
jbe
and
ss
das
jmp
inc
xor
jmp
adc
shll
outsb
mov
insl
mov
leave
mov
outsb
fwait
lret
push
lea
mov
das
fsubl
adc
rcl
mov
cmp
mov
cmp
push
inc
mov
sub
sub
push
xor
gs
lret
sbb
mov
mov
daa
out
sahf
or
rol
sub
out
xor
into
in
popa
rcr
in
loopne
add
hlt
mov
push
and
cld
adc
je
xorb
leave
adc
and
nop
push
inc
movsb
push
push
js
sbb
test
ficomps
cmp
xor
sub
pop
into
cwtl
add
lcall
clc
loopne
sub
jp
frstor
mov
imul
xlat
imul
add
mov
cmp
xchg
dec
out
inc
ljmp
call
cmp
add
push
and
aam
movsl
rcr
jl
shlb
inc
out
inc
cs
dec
add
push
xchg
imul
mov
pusha
adc
jns
mov
xchg
add
lahf
mov
add
fisubs
imul
xor
cmp
jecxz
xor
xlat
xor
mov
jno
scas
call
mov
sahf
clc
pop
test
inc
leave
cli
mov
movsl
and
popf
push
xor
xor
xchg
movsl
mov
jnp
fiadds
gs
aam
rclb
arpl
shlb
lods
mov
push
inc
adc
cmp
hlt
xor
popa
sub
ret
shl
outsb
arpl
into
int
cld
mov
sbb
add
icebp
sub
out
sbb
mov
sbb
in
jle
mov
cmpsl
and
movsl
dec
xor
mov
lret
mov
sbbl
adc
sub
or
xor
mov
adc
push
sub
or
xchg
fs
loopne
sbb
xchg
icebp
adc
mov
in
out
call
xchg
scas
adc
ret
pop
sti
adc
mov
add
jnp
rol
fidivrs
cmp
ds
clc
xor
mov
es
fwait
lock
aaa
dec
xor
stos
add
lods
ljmp
pushf
mov
dec
cmp
mov
insb
daa
jp
mov
gs
xchg
scas
adc
jecxz
lcall
ret
stos
xor
xorl
pand
push
in
call
adcl
lret
push
clc
push
jmp
or
mov
sbb
lods
fisubs
rcrl
pop
ja
push
negl
sub
out
js
cmp
push
lods
std
push
inc
stos
sub
push
sbb
les
fmuls
sub
insl
lret
or
bound
loopne
dec
jl
or
push
ficoms
sbb
xor
dec
pop
mov
jo
aas
int3
adc
fs
push
cmpsb
mov
push
es
dec
inc
cltd
adc
or
test
mov
fsubrp
jns
stos
jle
into
sub
iret
imul
adc
iret
pop
cwtl
xor
imul
std
cmp
sub
mov
pop
pop
movd
mov
pop
push
xchg
not
mov
sub
mov
xorb
mov
pushf
jge
mov
lret
rcrl
and
jg
outsb
fld
pushf
mov
pop
scas
gs
aas
add
inc
int
mov
jo
mov
mov
fs
stc
int3
push
dec
das
jp
mov
mov
lea
imul
les
jns
ret
lahf
jns
shr
in
adc
xchg
add
pop
pop
mov
jae
xor
out
pop
inc
stos
mov
fiaddl
iret
add
in
mov
les
cmp
scas
stc
clc
pop
ja
or
cmpsl
mov
ret
cmp
or
int
add
sbb
and
imul
mov
mov
unpckhps
das
pop
add
xchg
pop
adc
fildl
sbb
cld
xchg
cli
pop
push
push
outsl
xchg
jbe
fwait
mov
xchg
movsb
rcr
jb
dec
mov
mov
xor
pop
xchg
sub
mov
ficoml
ret
inc
arpl
gs
ljmp
pop
out
lahf
addr16
xchg
push
ja
pusha
mov
add
outsl
out
sbb
bound
jmp
xorl
inc
lret
xor
add
add
xchg
adc
xor
fs
fsubrs
xchg
xchg
add
cmp
mov
outsb
adc
cwtl
add
add
xchg
shlb
jns
and
jecxz
inc
fisubl
fidivl
aad
sub
ret
pop
insl
cltd
cs
fidivl
arpl
push
outsb
cmp
xchg
dec
pop
sbbl
inc
cmpsb
pop
scas
pop
jmp
xor
add
pop
and
xlat
in
test
mov
mov
push
or
je
push
in
outsb
aad
aad
push
je
rcll
test
fldl2t
sub
adc
jnp
repnz
cs
lods
sbb
in
subl
dec
rolb
nop
jb
icebp
shl
xchg
imul
push
test
xor
sbb
test
sbb
jecxz
mov
xor
test
jp
test
scas
mov
mov
ret
xor
std
mov
es
fnsave
ljmp
scas
dec
adc
iret
cmp
sahf
pop
lock
fs
es
hlt
arpl
in
mov
mov
ljmp
dec
cmp
ss
cmp
fimuls
jmp
fwait
loopne
xor
jl
push
scas
dec
sbb
sbb
jg
or
repnz
rclb
shrb
sbb
popa
in
out
pop
into
xor
lods
sbb
add
dec
xor
dec
lret
bound
mov
or
or
stc
enter
push
or
jmp
jmp
aad
sub
scas
roll
add
jns
jl
fs
adc
push
ja
sbb
lods
push
out
fiadds
jne
flds
in
mov
xchg
sub
je
ret
and
aas
push
mov
pop
cmpsl
jne
hlt
cmpsb
aaa
sbb
pop
lcall
fisubrs
arpl
mov
jne
leave
lods
loopne
cli
mov
outsl
test
mov
lods
hlt
fsubrl
incb
into
insb
adc
dec
rcr
xor
rolb
int
bound
and
mov
xorl
shl
cmova
xor
pop
mov
data16
fdivs
cmpsb
push
xor
xchg
pop
and
xchg
clc
shlb
ss
adc
adcb
popf
lods
or
push
lret
lcall
push
push
test
push
cld
iret
and
inc
fs
sbb
cmp
int
jae
push
push
mov
dec
int
lahf
sub
out
icebp
nop
lahf
push
lcall
mov
pop
xor
in
insb
shll
sti
ds
add
cmp
icebp
outsl
xorl
addr16
fldcw
push
jbe
mov
or
dec
mov
std
cmp
sbb
outsl
les
scas
push
cmc
push
dec
mov
les
or
or
cld
jbe
push
imul
ret
fistpll
aam
gs
stc
test
movsl
insl
jge
outsb
sub
rorb
push
jge
push
pushf
mov
push
push
inc
fisttpl
fistpll
lret
pop
in
rclb
sahf
scas
adc
lret
outsl
cmp
cmp
cmpsb
addb
dec
sub
xchg
sarb
nop
repz
or
mov
add
cmp
test
cmp
jbe
xchg
xor
sub
gs
in
leave
xchg
lret
sbb
rorl
adc
dec
xor
mov
js,pn
out
push
pop
sub
shlb
cmpsb
cmp
dec
lea
leave
shlb
push
add
push
xor
lods
and
dec
sbb
dec
lahf
and
outsl
xor
jae
stos
mov
dec
mov
adc
test
mov
fnstsw
stos
adc
fstpl
ljmp
inc
vpaddusb
add
repnz
repnz
les
dec
notb
pop
leave
loopw
fsubl
xor
scas
lock
xor
aas
sbb
frstor
inc
pushf
push
inc
pop
fbstp
mov
mov
stos
mov
mov
les
out
push
jmp
hlt
insl
cmp
or
dec
negb
outsb
insb
sbb
lock
ret
push
mov
sub
push
push
cli
ffree
repnz
ds
cmp
dec
push
dec
pop
cmp
pop
fwait
jmp
dec
or
sahf
out
mov
cmp
sarl
push
and
xchg
pop
push
inc
dec
ret
xor
leave
jb
jl
pop
dec
sbb
stos
inc
pop
dec
sahf
rcr
jns
dec
stos
stc
or
loope
pop
xchg
shr
sbb
mov
dec
or
aas
cmp
inc
push
leave
movsl
call
mov
and
mov
push
jno
pop
rcrb
add
jp
cmp
add
mov
xorl
ja
dec
pop
aaa
orl
movsb
pop
xor
iret
fimuls
jnp
pop
jecxz
ret
cltd
push
xlat
jb
xor
xchg
and
cld
sbb
lret
sub
movl
cmc
test
cli
or
pusha
inc
std
loope
mov
out
idivb
xor
and
scas
jmp
dec
out
inc
jecxz
or
push
mov
scas
hlt
stos
mov
inc
adcl
sbb
adc
push
xor
add
cld
mov
ljmp
mov
ss
insb
jne
in
das
xchg
mov
xor
lahf
cmpsl
pop
sbbb
ljmp
out
cmp
push
rol
sbb
lods
add
jmp
fsubrp
xchg
out
icebp
movsl
call
outsl
fldcw
inc
loop
jl
gs
imul
adc
stos
in
mov
pop
rorb
and
int
cmp
mov
dec
inc
cmp
mov
cmp
mov
jle
out
mov
or
mov
lret
adcb
push
mov
cmp
pusha
mov
dec
pop
inc
in
push
jb
add
ret
data16
sahf
lea
adc
std
or
and
in
adc
aad
pop
mov
gs
push
or
or
pop
fucomi
sbbl
xlat
bound
jns
xor
mov
test
mov
fidivs
test
mov
cmp
repnz
out
aaa
cld
mov
push
dec
adc
pop
fwait
xor
jecxz
rcrb
test
inc
mov
mov
or
adc
mov
fcomps
sub
adc
mov
mov
mov
in
sarl
mov
dec
mov
shll
ret
pop
push
bound
fs
int
lods
jne
xchg
mov
imul
mov
inc
or
int3
ja
mov
test
dec
xor
dec
jecxz
mov
out
xlat
sti
mov
lret
shrb
scas
mov
lret
jo
and
mov
dec
mov
xchg
jae
fbld
push
adc
pop
jge
or
jecxz
inc
xor
jle
adc
inc
lcall
sbb
jecxz
es
movsb
push
xor
or
mov
repz
inc
and
andb
add
fisubrl
rclb
outsl
mov
sub
in
jbe
cmp
mov
mov
fisubrs
add
push
cli
shl
jae
iret
fistpl
push
adc
mov
xchg
scas
jge
lahf
and
pop
pop
cmc
xor
adc
scas
xchg
ja
lahf
stos
mov
jp
js
push
leave
sub
sub
stos
mov
jl
push
jmp
add
cmp
pandn
dec
sti
xchg
fisubl
sub
pop
test
pop
lock
nop
pushf
loopne
sub
rorl
pop
fadds
shr
or
aad
push
add
stos
stos
icebp
adc
lret
lret
mov
mov
fsubrl
outsb
arpl
inc
test
mov
pop
adc
aas
repnz
mov
xor
loop
imul
sahf
lock
inc
dec
mov
cmp
cmc
lret
cwtl
das
or
mov
lcall
pusha
fdivrs
cmpsb
lods
mov
lods
inc
roll
jno
mov
popf
movsb
cmp
loope
push
dec
ficoms
ds
aad
fdivl
loop
jle
out
add
xor
fisttpll
rcll
out
xchg
inc
int3
loope
gs
nop
xor
gs
xor
in
inc
aad
dec
pop
and
push
sub
hlt
xor
insb
and
xor
adc
aas
int
pop
mov
lock
cmp
xlat
sub
add
int
push
add
xlat
cmc
add
inc
pusha
mov
gs
push
std
or
dec
cs
jecxz
dec
add
jge
and
inc
aad
xor
orb
jle
or
addr16
add
icebp
dec
aaa
test
sub
pop
in
xchg
inc
and
bound
lods
sbb
pushf
xor
mov
clc
out
ret
xchg
sub
and
and
cwtl
rorl
push
sub
inc
inc
pop
jo
sub
pusha
dec
inc
sbb
mov
cmpsl
daa
dec
pop
in
sub
cmp
pop
cmp
jmp
test
jle
sbb
das
es
out
in
ret
jnp
inc
mov
adc
lahf
repnz
sub
fstp
fwait
aas
adc
cmp
sti
adcb
push
mov
jp
sahf
icebp
inc
test
out
push
xor
out
pop
out
and
icebp
xchg
cs
movsl
outsb
aas
mov
mov
jp
cmp
cwtl
es
cmp
repz
or
jb
js
imul
addr16
mov
in
and
loopne
mov
ficomps
ret
jbe
dec
out
pop
into
pop
sar
insl
add
mov
mov
or
mov
sbb
lahf
cld
insb
cmp
test
fwait
xor
ljmp
dec
xchg
mov
int
leave
out
xchg
adc
add
xchg
mov
and
and
aam
mov
sbb
mov
loope
mov
insb
outsb
adcb
jl
pop
cltd
fwait
dec
aad
ret
in
repz
mulb
add
add
sbb
add
xchg
mov
lds
test
icebp
in
pop
inc
pusha
xor
pop
pusha
ret
popa
sbb
mov
pop
xchg
test
pop
out
filds
jbe
xchg
cmc
cmc
sub
cmc
repz
mov
and
fldcw
mov
xlat
outsb
in
or
dec
mov
sub
xchg
cs
push
dec
loope
xchg
mull
std
daa
jne
roll
and
adc
or
stc
lods
push
jne
sbb
cli
inc
loopne
fcoms
jne
notb
adc
pop
insb
sahf
scas
push
outsb
arpl
mov
dec
aas
dec
ss
cwtl
jne
mov
arpl
into
loope
in
add
int3
das
leave
inc
xor
mov
or
outsl
mov
loopne
jge
sti
mov
push
shl
inc
mov
cmp
cld
jp
ret
fwait
push
and
fbld
pop
xor
cmp
or
dec
xchg
pop
xor
jmp
lea
ret
mov
sbb
js
popa
addb
or
jge
data16
xchg
add
adc
or
adc
cmp
adc
adc
pop
sub
std
adc
aas
or
es
cmc
cmp
es
push
mov
cmp
ja
or
add
pop
iret
clc
sahf
jnp
jecxz
shlb
sbb
fcoml
inc
lret
jp
cwtl
insl
popa
into
arpl
xlat
xchg
iret
xor
dec
xchg
mov
das
fimull
fcomps
ret
fs
out
jp
adc
jo
or
pusha
cmp
fldl2t
dec
cmp
shl
lock
jnp
sub
inc
pushf
enter
leave
pusha
cwtl
sahf
fucomp
aam
call
mov
dec
jno
or
pushf
idivl
xchg
aaa
repnz
mov
and
iret
imul
lret
jae
push
mov
fcmovnbe
flds
jl
repz
je
scas
add
es
cmp
xchg
or
fisubrl
rep
test
hlt
cmp
cwtl
pop
lret
decl
xor
aam
rclb
jns
add
push
inc
jae
outsb
pop
js,pt
xchg
and
and
popf
gs
rcll
fmull
push
out
stos
js
pop
stos
xor
push
in
int3
out
jmp
adc
rdtsc
scas
in
cmp
ja
dec
clc
aam
sub
xor
mov
cwtl
mov
cmpsb
sub
ja
sbb
xor
or
jmp
lock
clc
lret
dec
jecxz
cmpsl
js
in
push
stos
ror
mov
js
adc
cmp
xlat
adc
add
insb
adc
sbb
jg
sarl
and
push
outsl
pop
pop
or
mov
push
in
sbb
or
cmpsl
cmp
sahf
dec
sub
scas
sub
or
mov
repz
and
ja
inc
xchg
push
mov
sub
mov
sub
shlb
add
cmp
xchg
jle
adc
fs
pop
inc
push
jmp
sub
rcll
lock
stos
push
clc
push
out
xchg
rorl
and
inc
aas
xor
push
jb
mov
popf
sti
nop
das
mov
push
pop
imul
xchg
xchg
dec
add
into
loop
or
and
inc
fistps
test
enter
shl
xchg
cmp
jge
movsl
lret
lret
stc
ss
sarl
inc
fdivl
into
gs
mov
fs
popf
mov
mov
xor
xchg
mov
mov
sub
aas
lock
sbb
mov
cmc
mov
mov
dec
bound
scas
and
mov
push
push
mov
mov
in
mov
popa
mov
movsb
cmp
adc
nop
ret
xor
lock
movsl
shlb
fcoms
clc
shrb
inc
cltd
mov
jmp
jb
inc
fdivl
xor
or
nop
push
xor
cld
stos
jae
aaa
movsl
lret
test
addl
mov
lcall
pop
in
jbe
push
jnp
popa
xor
xchg
mov
out
and
jp
ja
test
jg
test
add
mov
cmp
and
xchg
pop
xchg
add
in
clc
or
add
sahf
jmp
fistps
je
mov
loopne
jae
push
movsl
sub
or
popa
mov
sub
cmp
xchg
pop
fldenv
aas
loopne
cmp
aad
fdivrs
pop
push
sarl
dec
in
testb
cmpb
dec
aad
xchg
sub
xchg
jae
inc
movsl
mov
adc
dec
or
sbb
adc
aad
xchg
stos
push
xlat
push
inc
test
in
mov
sub
outsb
and
insl
ret
cmc
or
in
fstl
mov
addr16
dec
cmp
push
jno
scas
mov
repnz
cltd
mov
cltd
call
or
aaa
pop
loop
push
adc
sub
stos
adc
xchg
test
jecxz
pop
sahf
sti
fs
sbb
pop
pop
outsl
test
sub
fsub
push
add
mov
push
add
mov
push
or
pop
cwtl
or
leave
sub
adcl
iret
loope
or
aas
cmpb
dec
shlb
inc
mov
int
cmp
push
push
mov
imul
push
jbe
jns
cmp
call
fimuls
jb
pushf
test
mov
jb
push
cltd
adc
lock
or
popf
rcrl
nop
daa
lcall
imul
or
or
mov
setns
or
mov
dec
fists
repnz
pop
imul
std
mov
arpl
sbb
inc
dec
sbb
or
inc
xlat
jecxz
and
ret
out
pop
rep
push
lret
repz
out
fsubrl
stc
ljmp
movsl
imul
ljmp
iret
pop
and
int3
mov
shll
sub
dec
scas
mov
ja
test
fcoms
lahf
sar
mov
cmp
jecxz
pop
sub
jns
ret
test
std
mov
pop
push
ljmp
and
push
faddl
mov
mov
mov
ret
pop
push
xor
inc
andb
loop
hlt
dec
test
stc
push
pop
ja
xor
adcb
mov
imul
jnp
out
adc
push
mov
xchg
mov
adc
lcall
and
xchg
pop
inc
pop
mov
jae
sbb
test
hlt
jno
cmpsl
sbb
dec
enter
out
in
push
mov
mov
insb
jl
insl
dec
pop
sbb
subb
or
cli
jnp
inc
mov
int
sub
icebp
mov
daa
int
mov
std
lahf
lods
jmp
insb
lock
pop
and
jns
jmp
add
dec
fwait
and
fcmovbe
sub
stos
inc
jo
iret
movsb
adc
jne
jne
lea
mov
aam
xchg
push
pop
pop
xor
mov
push
mov
and
cs
jp
push
adcl
dec
fcoml
and
push
out
xlat
icebp
movsl
or
jne
push
cld
adc
lock
xchg
and
adc
dec
add
shr
aam
adc
or
xrelease
xchg
hlt
dec
inc
cmc
dec
ljmp
fstpl
adc
dec
or
jnp
nop
dec
arpl
pop
sahf
outsl
add
das
jne
or
dec
mov
loope
aas
sbb
xor
dec
and
sub
xlat
insl
fsubrs
clc
pop
stc
mov
adc
or
dec
and
xchg
aad
shlb
scas
xchg
sub
cmp
lcall
cmpsl
jmp
addb
and
and
jg,pn
dec
inc
xchg
cltd
jle
dec
and
inc
loopne
mov
test
stc
aaa
lret
xchg
fnstenv
xchg
scas
mov
xchg
in
fs
inc
sbb
push
cwtl
rcrb
mov
xlat
or
mov
movsb
std
xchg
mov
sbb
fisubs
or
in
dec
ret
inc
jo
dec
sbb
fimuls
pop
inc
or
nop
daa
mov
mov
mov
stc
push
lret
pop
notb
aad
pop
nop
inc
fsts
add
lea
jbe
cmpsb
sub
shll
mov
jno
movsl
inc
lcall
addr16
push
fcompl
mov
xchg
jbe
jp
mov
mov
cltd
xor
push
ljmp
jb
pusha
xor
bound
xor
mov
mov
fcompl
push
cltd
addr16
push
cmpsl
imul
cmpsb
add
mov
jb
adc
mov
sbb
sub
mov
sbb
shl
aaa
daa
adc
je
das
icebp
scas
lods
outsl
lret
push
jmp
clc
push
jmp
out
xchg
sub
or
pop
mov
mov
push
add
shrb
in
ret
bound
add
div
fcmovne
movsb
mov
mov
jno
pop
enter
shrl
shll
hlt
inc
sbb
mulb
fidivl
xor
subl
cmpsb
sub
imul
das
insb
jg
cmp
test
jbe
ja
ret
sbb
sub
shlb
lea
cmp
jno
fidivrs
cltd
fdivl
enter
and
and
sbb
and
clc
je
inc
stos
cld
sbb
jno
notl
fwait
enter
add
test
inc
ja
test
testl
mov
mov
dec
out
add
insl
add
adc
out
cmc
mov
mov
incb
push
mov
mov
jmp
aad
mov
gs
and
add
xchg
lods
jae
and
push
jp
jae
je
mov
lret
aad
jo
out
dec
xchg
pop
repz
mov
or
sub
cmp
fists
repnz
insl
inc
push
scas
fdivl
int
pop
fs
pop
mov
dec
out
jns
sub
mov
rcrb
jle,pn
out
cmpsl
cltd
inc
mov
xlat
jb
ret
test
mov
in
in
push
repz
jns
dec
adc
insl
out
inc
adc
dec
xchg
cmp
xor
xchg
adc
sar
mov
pop
aaa
iret
sbb
movmskps
lds
jb
push
jno
sub
iret
xor
call
or
mov
clc
loopne
push
pop
adc
inc
je
ja
cmpsl
xor
fadds
mov
lahf
pop
stos
repz
fidivl
bound
mov
out
cli
cmpsl
adc
mov
pop
jne
enter
xchg
testb
inc
mov
xor
xor
mov
lods
jp
lock
test
push
out
jge
sbb
jl
pop
dec
sbb
je,pn
pop
fs
outsb
jge
dec
adc
jle
lock
adc
jbe
and
stos
repnz
cmpsl
ret
bnd
inc
sub
or
testb
and
mov
inc
int
or
fisttpll
in
mov
mov
add
daa
mov
shll
xchg
test
shrl
rorl
into
push
and
rolb
jnp
jmp
or
mov
enter
bound
pop
fbstp
ljmp
pop
fdivl
loopne
sub
loopne
or
aaa
rorb
lods
dec
pop
jmp
jne
mov
xchg
sbb
or
arpl
push
adc
ficoms
jl
sbb
repnz
push
jle
adc
inc
scas
jb
shrb
sbbl
mov
xchg
rcrb
mov
nop
mulb
test
rcr
sub
jle
sti
xchg
das
and
pop
fisttpl
cmp
ja
sbb
add
add
fwait
sub
je
imull
fisubl
mov
mov
jp
add
sahf
push
call
adc
or
es
push
mov
div
add
in
dec
add
jae
xchg
add
sbb
pop
mov
push
adc
nop
jg
jnp
cmp
xor
sbb
sbb
or
add
aad
stos
je
jmp
out
movsb
pop
cltd
mov
mov
jecxz
addr16
loope
and
sub
push
xor
pop
jp
mov
inc
mov
paddb
sbb
sbb
xchg
sbbb
xorb
adc
in
stc
add
mov
loopne
xchg
or
andl
das
adc
sub
loopne
daa
shrb
mov
test
in
icebp
mov
mov
movsl
mov
fsubrl
nop
mov
ss
or
inc
xchg
pop
mov
push
fs
xor
daa
test
call
fs
add
push
stos
add
push
jmp
cmp
or
pop
adc
repz
xor
fsubrp
adc
scas
leave
es
pop
mov
shrl
repnz
and
pop
xchg
out
test
cmp
sub
stos
dec
jge
jg
shrl
mov
mov
lahf
aad
aad
sbb
mov
pop
cmpsb
push
mov
sub
pop
pop
insl
add
pop
mov
mov
negl
xchg
push
es
jp
lods
test
cmpsl
shrl
mov
xor
iret
push
into
xchg
mov
and
pop
popa
in
iret
push
push
outsl
stos
jae
inc
sarb
jne
std
push
sbb
scas
dec
jg
repnz
insl
jmp
push
notb
icebp
push
or
sahf
cmc
adc
adc
fldt
and
stos
mov
cmp
shlb
mov
ret
xchg
pop
push
arpl
push
fists
insl
pushf
arpl
pop
pop
mov
push
jno
scas
mov
push
scas
pushl
enter
push
inc
aad
add
sub
movaps
inc
push
xchg
sbb
and
mov
dec
fbstp
lock
mov
les
loope
or
xor
xchg
push
andl
mov
and
ret
lods
fldenv
data16
pop
jns
lret
adc
dec
cltd
or
add
les
das
add
mov
scas
xor
push
mov
adc
out
or
je
pop
outsl
in
xchg
lahf
cwtl
add
mov
ss
imul
sahf
mov
fnstcw
call
call
icebp
jo
dec
and
jb
mov
xor
sbb
cld
push
inc
xor
mov
mov
mov
mov
dec
in
imul
testb
js
sahf
mov
xchg
nop
enter
adc
jne
cmpsl
icebp
xchg
cmp
inc
jne
cwtl
cltd
inc
adc
and
nop
cmp
pop
or
mov
mov
fisubrs
push
mov
nop
cwtl
xor
mov
mul
enter
pop
add
inc
fnstcw
dec
loope
rclb
test
mov
fs
movsl
dec
sub
mov
ljmp
mov
fdivs
sarl
or
data16
xchg
call
push
sahf
and
iret
or
mov
mov
adc
cmp
pushf
out
mov
inc
xchg
push
jb
notl
adc
aam
mov
xchg
mov
or
cmp
mov
shl
inc
movsl
sti
adc
cmp
outsl
rol
push
fs
jecxz
cmpsb
icebp
jo
test
lods
push
pop
xor
add
xor
pop
or
lea
xchg
add
xchg
sbbb
jecxz
out
sbb
push
jae
xor
jecxz
inc
idivb
pop
and
rorb
punpckhdq
adc
into
pop
mov
rcrb
lret
and
jno
pop
in
cmp
jb
inc
push
jmp
nop
jb
xor
lds
mov
sti
leave
mov
inc
int
jp
mov
aad
push
or
mov
sbb
scas
pop
cmp
insb
jg
sbb
notb
in
adc
cwtl
ret
and
adc
int3
test
jecxz
popf
cmp
xor
mov
sahf
inc
dec
xchg
mov
cs
sub
orb
cld
pop
in
mov
xchg
add
aam
pop
mov
jge
xlat
in
test
in
jns
or
shrb
jmp
shrl
push
mov
in
ds
lcall
adc
sub
mov
mov
inc
clc
jae
cmp
cmp
add
fdiv
popf
sub
nop
aas
lret
inc
adc
imul
xor
sbb
shll
jb
mov
lcall
in
arpl
ss
adc
mov
cmp
sbb
mov
test
sbb
das
push
movsl
pusha
inc
insb
adc
add
cmp
jnp
pop
cmpsb
out
inc
fisubs
leave
push
mov
jg
jl
mov
test
fisttps
fldcw
jns
test
add
xor
cs
pusha
jo
dec
sahf
ds
out
cmp
ljmp
es
mov
lret
jbe
jae
stc
cmp
int
ja
inc
std
cli
cltd
mov
lret
push
mov
or
ja
scas
mov
ret
insb
mulb
inc
fadds
cs
dec
mov
jnp
mov
mov
fadds
pop
ljmp
sub
decl
clc
ss
xchg
icebp
cmc
push
adc
fwait
push
iret
in
fcompl
ja
loopne
add
push
sub
lods
mov
clc
aas
xor
adc
cmc
dec
bnd
ss
lcall
aas
fldl
mov
aad
sbb
test
pop
inc
out
dec
sbb
xchg
xchg
xor
mov
ret
xlat
dec
imul
ret
ret
das
ljmp
hlt
mov
xchg
shrb
cltd
xchg
xor
xchg
lock
push
pop
pop
popf
orb
dec
xor
movb
les
mov
push
mov
add
add
pop
in
inc
push
push
out
cmp
jns
inc
push
pushf
adc
xchg
rcrb
das
movb
ss
movsb
jge
xchg
or
mov
pop
sbb
jp
dec
pop
inc
cmp
popf
jmp
xchg
sbb
add
fistl
in
sbb
dec
out
xor
mov
xor
pop
les
cmp
decl
xlat
cltd
add
mov
out
imul
mov
push
inc
sub
shl
cmp
mov
jle
or
xchg
xor
mov
test
jne
testl
lods
mov
ficompl
pop
fldl2e
jmp
mov
lahf
xor
or
sar
jmp
or
push
mov
leave
icebp
add
test
jns
jno
add
dec
mov
push
in
sbb
sub
or
outsb
mov
lret
jecxz
sti
pop
cltd
mov
icebp
clc
test
fldl
adc
test
jge
push
add
mov
dec
imul
xchg
lcall
pop
jbe
sbb
fwait
sti
or
insb
sti
xor
mov
fildl
gs
mov
stc
je
adc
fptan
sbb
sbb
lea
jle
pop
scas
inc
in
hlt
lret
mov
mov
add
add
jmp
pop
int
mov
mov
mov
fisubrl
mov
mov
push
cli
orb
hlt
mov
out
and
pop
and
pop
lock
arpl
das
shlb
mov
cmpl
lea
cmp
sub
imul
cmp
inc
imul
xor
jmp
mov
insb
int3
pop
cmp
iret
xlat
sbb
xchg
pop
test
sbb
es
xlat
xchg
fistpl
add
mov
movsl
xchg
mov
cmp
scas
lcall
arpl
aam
pop
fsubr
jns
push
out
fsubr
xchg
std
add
arpl
arpl
sbb
in
mov
dec
push
jne
lahf
in
pushf
add
or
pop
enter
or
cmp
lret
test
fwait
je
ret
xor
pop
inc
mov
out
mov
jns
inc
jb
adc
adc
repz
push
inc
xchg
adc
xor
lds
cmp
int3
jnp
jne
je
and
test
pop
dec
sbb
mov
mov
mov
fwait
jno
mov
aas
xchg
jg
aam
jmp
aas
xchg
cmp
fsub
mov
mov
xor
jo
leave
push
inc
test
mov
andb
pop
in
inc
xchg
and
jns
dec
pusha
push
cltd
or
and
cmp
test
sub
adc
dec
add
add
daa
testb
xor
js
push
fwait
push
cltd
sbb
jnp
ds
nop
cltd
mov
fstpl
jb
insb
shr
mov
scas
flds
repz
jle
push
or
xchg
mov
mov
pop
xchg
mov
jle
inc
lds
lods
clc
pop
popa
sub
fdivl
jno
out
push
sti
dec
mov
jmp
add
data16
clc
stos
xchg
or
les
mov
mov
cs
mov
mov
nop
mov
mov
out
push
sbb
ss
fbld
and
scas
sbb
sub
lds
mov
clc
inc
mov
roll
inc
in
jle
dec
dec
je
xchg
sub
in
ficomps
sbb
or
lea
or
data16
dec
lods
xchg
out
movsb
cs
ret
idivb
dec
stos
pop
outsl
push
dec
stos
popa
pop
inc
sbb
xorl
jbe
cmc
mov
push
push
out
les
in
fs
or
enter
decb
xor
push
pop
inc
push
cmp
push
push
mov
out
jp
dec
lcall
and
xor
pop
out
lahf
jecxz
aad
jbe
arpl
sbb
add
sti
ss
and
pop
shll
aam
pop
lock
mov
pop
xor
jmp
test
repnz
mov
or
orl
xchg
testl
out
sbb
repnz
push
dec
sub
adc
test
lds
test
cli
fs
adc
jno
imul
mov
sbb
iret
std
aad
dec
cmp
xor
fcmovnb
negl
inc
xchg
dec
lods
dec
fst
shlb
jbe
and
sbb
arpl
sbb
mov
jns
cmp
or
outsl
sbb
sbb
cwtl
das
or
xor
adcl
xor
ss
add
inc
jmp
jne
jno
mov
mov
cmpsl
xchg
int
inc
pop
mov
dec
insb
dec
jne
orb
xchg
lahf
push
dec
and
lods
mov
pop
and
inc
sub
dec
and
sub
frstor
testb
jnp
mov
sbb
rolb
mov
cltd
arpl
lea
jae
fs
lods
outsb
jg
fisubs
fistpl
add
repz
fdivrl
dec
xor
xlat
repnz
push
mov
push
sbb
and
cmpsl
shll
ss
xor
cltd
test
adc
push
and
pusha
testl
sub
xchg
xor
pop
and
mov
push
dec
fiadds
das
repz
sub
and
test
dec
push
test
xor
lahf
out
lods
sti
mov
add
jp
mov
push
das
pushf
mov
imull
push
icebp
test
cld
xchg
jl
xor
push
icebp
dec
in
and
ds
push
pop
jns
cwtl
subl
out
mov
lcall
test
adc
push
xchg
adc
insb
jne
mov
outsb
dec
call
pop
pop
inc
bound
xchg
mov
push
insl
mov
cmp
pop
fistpl
bound
push
mov
dec
mov
subb
shl
mov
insl
cmp
shrl
mov
ljmp
mov
adc
loopne
outsl
cmp
and
cmpsb
sub
daa
cmp
sbb
lret
xchg
sub
cmpsl
js
jne
xchg
iret
pop
rcrb
mov
pop
es
aas
sub
dec
dec
les
cli
lods
push
jmp
or
mov
jb
cmp
ret
and
push
ret
pop
dec
repnz
fsubr
loope
and
shrb
sbb
lret
jns
cmp
in
lds
mov
dec
aas
lcall
xchg
lods
inc
fistpl
fs
faddp
seta
jp
xor
cwtl
aas
xorb
dec
imul
lret
test
loop
scas
lcall
les
and
pop
imul
xor
sahf
mov
pop
sarl
sub
lahf
jecxz
pusha
push
sti
xchg
out
data16
clc
or
adc
jle
xchg
sahf
ljmp
jmp
push
pop
js
fsubrs
inc
jl
dec
pop
jmp
xor
mov
ret
cmp
popf
xor
insl
add
fldt
mov
mov
out
dec
inc
jmp
inc
lahf
jo
shll
lret
ror
or
js
and
jmp
ss
insl
or
mov
add
jne
addl
testl
push
fsubrp
mov
scas
inc
outsl
ja
or
mov
jecxz
pop
push
adc
and
popa
incb
pop
cmc
cmp
or
lods
xchg
xchg
or
push
int3
cmpsb
js
leave
stos
cmc
mov
sbb
mov
mov
imul
shrl
add
or
and
inc
push
stc
mov
sbb
aaa
fisubl
dec
hlt
or
mov
les
fsts
test
shl
sub
and
repnz
push
inc
ss
repnz
cmp
in
fisubl
out
pop
aas
outsb
sub
add
sub
shlb
mov
js
ljmp
pop
popf
xor
and
jnp
imul
das
adc
stc
jb
mov
xchg
pop
or
stos
and
xor
js
jg
mov
cmpsb
cmp
adc
xchg
cmpsl
jge
fs
add
ret
jp
adc
dec
mov
dec
pop
fcoms
pop
shll
adc
xorl
cltd
sub
cmpb
insb
sub
inc
add
mov
push
es
ficompl
testb
xchg
outsb
cli
stos
imul
int3
pop
mov
mov
sbb
and
mov
xchg
push
mov
and
mov
data16
adc
cmp
xor
mov
inc
fld
xlat
repz
iret
enter
int3
mov
fsts
outsl
cmp
sbb
or
cmpl
mov
mov
fldenv
pop
leave
sub
mov
mov
and
imul
fnsave
inc
and
mov
data16
mov
jge
mov
test
int3
leave
bound
in
fdivrs
pop
cs
add
xchg
push
es
inc
fsubl
jb
pushf
cmpsb
leave
call
mov
mov
ret
mov
and
cmp
ds
push
pusha
jl
pop
aas
out
pop
mov
add
pushf
adc
mov
ljmp
in
dec
lahf
std
pop
dec
nop
and
or
cmp
mov
fisttps
in
push
add
sub
xchg
mov
in
sub
outsl
push
out
lods
orb
shrb
fidivrl
push
shrb
je
dec
movsl
fimuls
fwait
aad
fisubl
jl
in
iret
push
pop
je
mov
push
xchg
cs
mov
push
jo
sub
es
shrb
jle
jno
push
pop
testb
jge
adc
loopne
sbb
push
mov
or
clc
stos
mov
aas
jne
pop
push
aad
bound
mov
lods
popf
movsb
and
or
fwait
xor
dec
les
jns
je
out
cmpsl
xchg
or
inc
shrb
add
xchg
push
adc
scas
inc
rclb
arpl
jl
add
ret
jae
adc
add
rolb
out
xchg
sbb
lods
pusha
mov
sbb
and
out
mov
das
mov
aam
subb
lcall
xchg
mov
notb
stc
popa
and
test
sub
jb
jno
push
xor
test
jnp
pop
jl
sbb
push
sbb
imul
mov
loope
and
icebp
push
xchg
mov
push
std
rolb
add
mov
aas
imul
fdivs
fsubrp
xor
shlb
sub
out
pushf
std
push
cmpps
mov
pop
mov
enter
pop
cmpsb
jb
mov
dec
jge
stos
imul
neg
arpl
in
jmp
dec
shr
stc
mov
dec
mov
add
aaa
clc
adcb
fs
pop
jno
lret
cmp
jbe
lds
repnz
vdivsd
test
mov
rcrb
add
ds
lcall
xchg
and
fmuls
mov
adc
or
jl
xor
fs
mov
sub
mov
out
pop
sbb
push
stos
mov
ljmp
push
lock
fdivl
xor
in
xchg
daa
jbe
xchg
ja
lds
push
insl
loope
push
mov
lds
dec
mov
repnz
nop
or
or
add
sbb
mov
clc
pushf
sbb
sbb
cwtl
stos
enter
in
repnz
dec
imul
push
in
mov
cmc
xchg
loope
or
adc
sbb
orb
rorb
popa
loopne
fwait
xchg
bound
pop
mov
aaa
jmp
xor
inc
jmp
shlb
adc
shl
repnz
imul
data16
adc
test
ja
cmc
ja
push
sbb
or
aas
or
out
in
addr16
add
adcb
cmp
push
outsl
cmova
scas
sub
enter
jmp
clc
pop
jge
xchg
cmp
inc
sub
jb
sbb
iret
mov
insl
or
add
fmuls
orb
xlat
sti
fiaddl
sbb
fst
adc
lea
mov
mov
dec
cmp
jmp
cmpl
xchg
popf
sub
movsb
add
in
hlt
arpl
lret
jae
or
cmp
push
push
lods
pusha
cmp
sub
lds
mov
pop
cmp
shlb
je
ret
xor
ss
dec
pop
fsubrl
popf
or
dec
add
test
sub
addr16
inc
xor
jge
and
pop
dec
pop
ret
popa
mov
and
rcrb
mov
repnz
rorb
and
stos
inc
popa
cwtl
test
stos
push
mov
fnstenv
leave
pop
stos
ret
jl
scas
and
nop
insb
xchg
sbbl
cmp
lahf
xor
lock
xchg
cmp
jle
and
setae
xor
adc
push
jbe
jnp
movl
xchg
pop
ljmp
hlt
imul
test
lret
cli
jno
push
dec
leave
inc
fldcw
mov
mov
inc
pop
mov
push
lds
push
jbe
ljmp
adc
aad
mov
ret
add
jo
mov
or
or
je
in
loop
and
mov
jne
imul
addr16
fisubs
sub
test
jno
mov
push
orb
mov
icebp
jmp
fstps
popf
push
lods
mov
fcmovnb
xor
incl
sti
adc
add
mov
sub
mov
xchg
std
mov
cmp
xor
push
nop
scas
ret
and
cli
icebp
mov
lods
mov
cmpsl
mov
mov
pop
mov
enter
mov
or
jne
nop
out
rcl
pop
sbb
push
push
dec
mov
ja
mov
lahf
insl
rcrb
hlt
adc
sarl
loopne
popa
jle
rol
repnz
add
push
sbb
add
lock
adc
pop
aad
push
ljmp
xchg
mov
adc
jbe
pop
jge
mov
std
mov
and
adc
jg
loopne
add
js
jae
jle
jp
and
inc
jge
xor
push
scas
orl
das
mov
fidivl
add
dec
push
and
mov
es
mov
push
test
mov
pop
mov
loopne
or
push
push
sbb
jbe
loop
mov
mov
or
mov
jbe
xor
jnp
in
pop
adc
lds
pop
fdivl
jl
jnp
pop
es
ss
dec
leave
pop
shl
test
pusha
xchg
jne
lds
pop
cmp
mov
xor
sbbl
pop
lea
int3
pop
cld
push
xchg
stos
lcall
inc
fdivr
jno
inc
shlb
jmp
sub
insl
pop
jae
or
push
sub
sahf
jns
fcmovnb
mov
pushw
xchg
pop
ds
pusha
popa
push
lods
sbb
insb
mov
jo
sbb
das
es
or
stos
rorb
dec
xchg
or
adc
insb
mov
mov
dec
in
add
insb
out
pop
jno
adcl
add
sarl
dec
xor
lcall
pop
je
cmp
bound
inc
cwtl
test
ja
jno
xor
lcall
iret
or
out
int
mov
dec
sub
sub
sub
or
fwait
xorl
inc
out
out
fs
sahf
mov
je
pop
out
les
in
mov
pop
jns
and
jae
fsubs
xchg
das
test
and
mov
add
and
pop
mov
mov
in
test
dec
push
push
sbb
pop
leave
and
pop
inc
aam
sub
xchg
pop
pop
pop
nop
ja
pop
xor
test
pop
adc
xchg
shlb
sar
and
out
mov
aaa
mov
nop
xchg
fistl
jno
mov
sub
loopne
and
mov
or
push
mov
ret
xor
or
or
je
cld
lods
fidivrs
adc
jne
inc
sub
loop
decl
adc
adcl
outsb
test
or
xor
dec
out
fldpi
shl
sti
push
mov
mov
outsb
or
xor
outsl
scas
jno
xlat
jmp
pop
sti
mov
scas
mov
bound
shlb
pop
sub
adcl
jne
cmpsl
push
dec
lret
push
cmpsb
stos
sub
cmpsb
cmc
mov
push
mov
adc
mov
mov
mov
and
dec
fsubl
leave
mov
push
cwtl
mov
fcoml
sti
xor
inc
lea
jg
add
sub
sbb
inc
imul
pop
jl
out
test
pop
jbe
mov
cld
dec
sti
insb
lea
and
pop
sub
adc
cs
in
les
daa
push
test
or
jns
dec
lock
cmp
push
cmp
sub
cs
jge
cmpsl
fidivl
sub
out
push
jno
lea
mov
movsb
scas
dec
dec
movsb
jno
shl
in
pop
loop
pop
es
xchg
inc
lods
inc
stos
xor
int3
lret
inc
jne
jns
setbe
sbb
sbb
cmp
dec
inc
aam
in
aas
iret
pop
cs
pop
cmp
push
lods
cmp
or
xlat
mov
mov
adc
outsl
jmp
loope
or
xor
jmp
icebp
imul
cmp
and
mov
jb
dec
into
cmp
scas
test
int3
and
fnsave
lret
xorl
xor
pushf
cmp
push
lea
sahf
jp
std
adc
push
adc
mov
lods
or
bound
push
push
in
dec
cmp
dec
pop
dec
jecxz
xlat
jnp
dec
out
sti
aam
test
mov
mov
addr16
je
mov
jnp
add
push
sub
stc
aaa
push
daa
mov
jp
popf
je
scas
sbb
rcll
movsl
cmp
outsb
pop
ljmp
jno
mov
sarb
add
add
pop
jno
insl
mov
or
add
sbb
push
mov
sub
fsubl
jbe
movsb
scas
sub
jecxz
mov
orl
cmp
sub
xlat
pop
jge
repz
outsb
pop
cmp
push
fists
cmp
dec
pop
adc
ss
or
jns
or
shrb
xchg
cltd
cmp
sbb
leave
jbe
jmp
sub
sti
pop
cmpsb
push
push
imull
enter
out
iret
dec
out
inc
sub
fisubs
outsb
sub
mov
pop
test
pushf
incl
imul
mov
inc
sahf
js
loope
rcrl
xor
jmp
xchg
sbb
icebp
mov
and
jne
fidivrl
fldcw
xor
mov
lock
lcall
cmp
or
xchg
stos
dec
cmp
loopne
add
jae
ret
pushf
fsubrl
rcll
jb
les
push
addr16
jecxz
xchg
lret
jge
jns
ficomps
unpckhps
mov
jp
dec
mov
jbe
popa
call
and
negl
pop
addr16
sbb
or
push
mov
dec
scas
lret
sub
inc
pop
stc
call
fsubrs
into
pusha
push
imul
mov
shr
mov
insb
nop
mov
xchg
ss
f2xm1
gs
xchg
mov
ja
add
int
aaa
mov
je
mov
push
sub
sub
fnsave
xchg
inc
mov
jbe
scas
mov
push
fsubrs
cmp
push
adc
imul
cmp
sbb
xor
out
xchg
pop
push
in
test
sbb
cmc
push
mov
inc
mov
pop
ja
xchg
sub
notl
lods
in
xlat
outsb
jmp
imul
xchg
pop
testb
lret
mov
or
xor
jl
sub
cmpsb
jbe
pop
mov
in
test
fxch
pusha
int3
sbbl
icebp
addb
jge
data16
icebp
mov
lds
je
jne
push
adc
outsb
js
pop
arpl
or
ds
dec
mov
pop
je
arpl
in
test
pusha
xor
xchg
pop
addr16
divb
cltd
or
jp
lods
jns
xchg
insl
fdiv
push
in
push
pop
rcr
hlt
xor
mov
pop
mov
lea
cmc
insb
or
adc
pop
push
fwait
mov
js
dec
sbb
fwait
cmp
js
jb
ret
mov
jmp
fldl
shll
out
mov
std
xchg
jecxz
mov
in
push
cmc
cwtl
cs
fiaddl
jmp
cwtl
sbb
loopne
push
cmc
loop
push
xchg
icebp
cmpsl
nop
mov
dec
sub
clc
jne
mov
sahf
cwtl
pop
std
lea
loop
aad
or
mov
or
cld
mov
push
xchg
and
sbb
call
cmc
fwait
rcrb
fisttpll
stc
fldl2t
imul
pop
xchg
inc
pop
mulb
jnp
sbb
push
pop
inc
mov
movsl
push
xchg
push
xor
test
ss
lods
fisubrs
pop
adc
ds
lahf
idivl
int3
or
scas
xchg
in
sbb
outsb
inc
sub
xchg
mov
push
js
push
push
sbb
call
inc
ret
inc
cmc
cltd
loop
jp
aad
rorb
stos
jg
std
lods
mov
xchg
insb
ret
imul
in
iret
pop
lea
jnp
mov
mov
ja
shl
int
outsb
xchg
add
xchg
leave
pop
cmc
pop
out
mov
in
cmpsb
jge
mov
lret
out
decl
xor
mov
ja
movsb
leave
mov
aaa
pop
andb
xchg
mov
jmp
cmp
xlat
fdivrl
sbb
sti
es
inc
pop
subl
repnz
add
mov
fmul
mov
fistps
dec
shll
setg
jae
xlat
pop
and
inc
mov
pop
jecxz
aam
and
pop
std
idivl
stos
inc
mov
pushf
push
fs
mov
outsb
sbbb
adc
cwtl
mov
push
pop
and
sti
adc
out
imull
push
or
test
lret
jns
ret
jnp
rorl
stc
adc
stos
push
jnp
test
stc
loopne
mov
push
sbb
imul
sub
mov
dec
jbe
lahf
mov
jmp
jo
jo
dec
push
jb
mov
aaa
fwait
mov
pop
push
subb
shrl
or
xchg
jecxz
loop
bndstx
sub
xchg
aas
pop
pop
lock
loope
add
lds
mov
cmp
mov
mov
mov
xchg
sub
sub
sbb
push
sbb
loopne
mov
daa
mov
jnp
mov
lahf
pushf
dec
movsl
ljmp
mov
push
jmp
call
or
mov
fmull
push
sub
mov
lock
nop
xchg
leave
fld
mov
shlb
fs
sbb
pop
sbb
dec
xchg
test
or
cmpsl
jecxz
clc
loope
cs
sbbb
xor
roll
pop
mov
and
inc
mov
es
cmp
dec
jno
jnp
sub
lock
cli
ljmp
inc
jne
jmp
lods
mov
mov
sbb
loopne
lods
sub
sbbl
repnz
xchg
push
fucom
outsb
add
add
mov
shl
mov
ljmp
out
or
daa
sbb
cmpsl
out
sbb
jbe
ret
jns
xchg
and
push
fwait
add
jl
xchg
cmc
pop
sarb
test
pop
pop
jmp
dec
mov
xor
leave
pushf
and
cwtl
sbb
mov
jl
lret
sub
inc
shll
jmp
add
or
jne
sbb
in
sub
mov
inc
loop
jl
pop
cmpsl
push
je
lret
cmp
lret
or
mov
popf
data16
xchg
and
shrd
or
pop
fisubs
rcll
mov
cmp
cmpsb
add
not
add
scas
push
mov
and
dec
mov
jb
fistps
add
cwtl
sti
lea
ficomps
int
shl
test
shrb
negb
add
jecxz
shl
mov
and
or
stos
inc
jnp
lock
lret
pop
xchg
lcall
mov
cmp
popa
lret
inc
cmp
mov
jmp
sub
popf
and
into
sub
sbb
lock
or
or
les
andb
inc
aam
push
push
fs
mull
lods
out
xchg
xchg
inc
lds
sbb
clc
enter
xchg
push
xor
xchg
pop
lock
icebp
cmp
inc
fstps
movsb
fsubrs
mov
jns
mov
jp
and
insl
call
pop
movsl
push
jmp
mov
and
popf
lods
repnz
cmp
pop
test
cltd
ja
mov
out
lock
mov
lret
bnd
nop
or
scas
pop
insl
hlt
scas
mov
scas
jl
mov
fstl
bnd
sub
push
xchg
jns
jns
xchg
pop
outsl
and
sbbl
shrl
iret
jb
add
shrl
stc
mov
xor
in
sbb
sti
push
and
pop
adc
inc
sub
dec
loope
and
mov
gs
mov
leave
jns
cmpsb
jle
adc
fmull
imul
xor
jle
jg
sbb
mov
jl
sarb
xor
xlat
into
iret
loopne
cmp
adc
mov
add
adc
inc
lods
fs
loope
int
out
int
stos
insb
jp
inc
inc
jmp
ljmp
fs
mov
cltd
cmp
cmp
jo
jo
mov
jp
adc
or
cmc
mov
push
pop
in
sbbl
add
and
out
mov
jecxz
imul
pop
mulb
sub
scas
jae
shll
fisubrl
arpl
jmp
imul
push
test
xchg
pop
decb
lods
sbb
xchg
mov
shrb
stos
inc
aam
pop
cmp
push
imull
pop
mov
jo
cltd
test
xchg
add
mov
imul
mov
sbbb
or
nop
pop
sub
nop
jecxz
stos
loop
mov
out
sub
jno
cld
insb
adc
jl
mov
stos
std
pop
xchg
xchg
mov
or
pop
in
inc
lret
fs
jp
mov
fdivrp
xchg
push
cwtl
or
inc
into
out
jg
lock
scas
and
jb
lea
xchg
daa
lods
adc
sbb
incl
icebp
into
xchg
daa
cmp
jmp
or
sbb
or
pop
adcb
and
js
jl
xor
sub
inc
add
xor
adc
std
adc
dec
mov
xor
mov
xorb
inc
mov
fisubrl
bound
mov
iret
and
lds
js
mov
pop
xchg
in
xchg
scas
cld
xchg
dec
mov
sbb
pop
aad
out
aad
fidivl
mov
sbb
movsb
dec
and
inc
cmp
xor
int
ss
push
int
jmp
subl
outsl
pop
popf
pop
jae
imulb
lock
mov
inc
int3
adc
dec
jecxz
and
push
addr16
and
scas
inc
jp
cmp
pop
mov
jmp
out
cwtl
cmp
mov
fldl
test
cmpsl
inc
test
mov
dec
xchg
add
les
arpl
mov
mov
pop
popl
sarb
stc
cwtl
pop
icebp
leave
adc
sbb
or
movsb
es
call
mov
cmp
gs
pop
and
data16
pop
xor
test
cmp
pop
mov
andb
and
pop
daa
mov
out
mov
mov
shll
add
sub
xor
movsb
jg
out
out
std
mov
and
movl
popf
repz
sbb
filds
fdivl
jno
dec
mov
loop
and
jnp
in
shrl
imul
ret
mov
dec
popfw
sub
imul
push
mov
data16
ficompl
or
jp
inc
push
repz
gs
push
out
lret
fldenv
sub
in
adc
stc
mov
imul
insb
shll
pop
repnz
fimull
or
jle
ljmp
int3
dec
add
mov
cmc
test
dec
lock
mov
mov
mov
pop
imul
xchg
loop
sub
leave
mov
cli
mov
bound
int
es
cmp
mov
fnstenv
cmp
in
pop
arpl
nop
sbb
aad
and
mov
sbbl
adc
leave
xchg
mov
int
mov
cli
or
push
iret
data16
in
mov
faddl
stos
jne
xchg
mov
sub
lock
stc
in
jp
jp
push
ja
mov
add
std
lock
shrl
fsubrp
sti
add
push
xchg
fcomip
mov
aas
fiaddl
pop
lods
cmp
xchg
cwtl
cltd
imul
cmp
jmp
push
jo
int3
mov
fistl
inc
jb
icebp
sarb
sub
and
std
test
lcall
stos
pop
loop
fwait
mov
dec
out
outsl
sub
cltd
xor
jge
and
jnp
add
lret
inc
pop
sbb
sub
loopne
clc
add
cmpsl
pop
in
mov
cltd
shll
pop
js
dec
xchg
jae
inc
ret
in
call
sbb
mov
outsb
mov
arpl
into
xchg
cs
inc
stc
jne
dec
in
jmp
adc
mov
inc
call
cmpl
xorb
dec
les
cmp
in
mov
push
add
add
pop
in
push
sarl
mov
out
cmp
mov
lea
das
shlb
hlt
adc
int3
das
or
insb
gs
jg
push
cltd
jnp
sub
test
call
lahf
stos
push
xchg
push
repnz
xchg
insb
and
jnp
fwait
scas
pusha
cltd
and
lret
out
jmp
push
test
add
pop
fs
hlt
xchg
push
xchg
add
sbb
fidivrs
sbbl
jmp
sbb
cmpsl
pop
in
push
push
fimull
mov
sbb
push
adc
mov
fiadds
int
test
in
insl
cwtl
dec
pushf
fucomi
lds
test
sbbl
adc
int3
push
jl
jnp
daa
stc
icebp
jl
leave
sbb
push
in
clc
int
iret
push
fchs
cmp
fidivs
dec
jge
jge
nop
popf
arpl
dec
mov
fcoml
popa
push
fisubrs
and
add
xchg
rcll
popa
sahf
xor
dec
in
fsubl
adc
arpl
pop
daa
sub
mov
ja
daa
add
les
and
sti
push
inc
mov
cmpsl
or
pop
mov
adc
adc
test
int3
std
lods
xchg
mov
xor
adc
fsubrp
mov
call
mov
outsl
push
adc
lret
fldenv
mov
popf
fdivr
cmpsl
aaa
stos
shrb
and
mov
mov
je
dec
in
xlat
pop
xchg
pop
aad
mov
jp
shll
cmp
xchg
inc
lods
mov
dec
pop
mov
inc
in
nopl
stc
mov
dec
or
xlat
out
dec
les
jns
push
test
movsb
sbb
and
jecxz
adc
insb
fmull
inc
std
repz
cwtl
jecxz
ja
es
xor
sbb
mov
lods
loop
sbb
mov
xchg
cmpsl
jecxz
int3
push
inc
jne
mov
fadd
push
add
cwtl
xor
cs
int3
imul
xchg
mov
daa
dec
sbb
lahf
dec
xor
push
scas
out
pop
aam
cld
mov
mov
mov
repnz
or
stos
mov
inc
dec
ja
mull
loopne
pop
mov
and
push
mov
andb
ret
or
cltd
jge
test
mov
jmp
dec
xchg
mov
sub
cli
dec
xlat
pop
and
call
je
fnsave
cltd
xor
mov
inc
or
and
sbb
inc
jge
xchg
dec
ficoms
stc
push
mov
jb
je
pop
adc
subb
lock
mov
dec
sbbb
movlps
jle
xor
es
jmp
xchg
shlb
pushf
xor
and
in
pop
test
sbbl
das
sub
mov
in
ds
lods
outsl
jb
repz
aam
mov
mov
scas
loope
pop
inc
jns
push
jno
lcall
xchg
insl
fwait
mov
mov
subl
repnz
iret
jo
mov
cmc
in
clc
imul
sub
jecxz
sbb
cmp
rorb
mov
data16
mov
jmp
dec
jo
pushf
xchg
adc
and
cmpsl
ds
sbb
or
repnz
mov
fdivs
or
or
sub
pop
push
cmpsb
adc
outsb
or
and
mov
in
out
fnstcw
mov
and
jno
sbb
scas
xchg
jno
cli
mov
rcl
add
adc
lret
or
out
addl
test
or
je
lds
mov
arpl
sub
inc
mov
negb
xor
jle
fs
and
xchg
nop
sbb
or
jo
subb
xchg
sub
push
popf
addr16
inc
mov
xchg
sub
sbb
push
std
scas
add
lods
not
call
ret
jmp
or
mulb
inc
add
insb
add
mov
and
lahf
stos
orb
insl
and
dec
outsb
xchg
scas
cmp
cmpsl
call
jmp
arpl
loope
inc
push
jae
sbbl
frstor
sbb
enter
aas
dec
xchg
cmp
xlat
jle
lea
dec
in
ret
insl
insb
lea
mov
jmp
ljmp
insb
jle
movsb
shrl
lret
or
test
jmp
or
insb
mov
addb
push
fcoml
mov
in
mov
mov
imul
inc
xchg
cmp
test
call
push
lock
jb
es
shll
add
bound
jl
add
iret
arpl
aad
adc
loop
mov
fldt
xor
clc
jmp
mov
push
jecxz
inc
sti
jbe
lcall
push
fadd
pop
dec
mov
xchg
pop
push
iret
repz
dec
and
xor
pop
sub
adc
outsb
xor
daa
icebp
icebp
and
xchg
and
sbb
sbb
mov
sbb
dec
fbstp
cld
push
subb
stc
test
jecxz
sbbb
sahf
mov
ja
fdivl
lret
insb
into
andl
xor
xchg
pushf
test
adc
and
push
jmp
sbb
adc
aas
inc
mov
xchg
push
xchg
pusha
or
fbld
adc
pop
push
cmpb
jno
adc
out
imul
xchg
ss
movsb
inc
cmp
dec
mov
jns
das
adc
fsubrs
adc
test
xchg
in
negb
cmp
fnstcw
fldenv
jge
pop
scas
cmp
outsl
arpl
add
imul
adc
jbe
inc
pusha
mov
fwait
adc
pop
cld
xchg
xor
cmp
inc
mov
pushf
cli
and
inc
sub
mov
push
xor
repz
jns
out
mov
jb
lea
aaa
aam
mov
xlat
jno
inc
mov
repz
cmp
pop
call
lds
add
mov
cltd
pusha
mov
loop
lods
gs
or
xchg
cli
dec
fmuls
fcompp
scas
xchg
mov
icebp
mov
and
loop
fisttpll
mov
cmp
push
mov
sbb
lret
sbb
dec
add
orb
adc
daa
xchg
and
mov
imul
jecxz
add
jnp
rcr
out
lods
push
and
stos
sti
test
int
or
push
int
adc
sbb
inc
push
aaa
into
jb
jecxz
push
sbb
mov
jo
imul
add
jnp
pop
cmp
pop
cmpsb
cmp
push
mov
xorb
lea
icebp
fwait
nop
das
add
sub
xor
call
mov
add
push
in
loope
jae
sbb
je
sbb
mov
popf
and
imul
jae
sbb
stos
leave
and
jbe
xorl
sbb
orl
sbb
jne
cmp
xor
jecxz
cwtl
add
cmp
xor
mov
je
mov
lea
pop
jae
bound
sub
dec
out
lods
jnp
pop
fsubrl
push
imull
movsl
mov
cmp
loop
cwtl
dec
int3
pop
jno
ret
hlt
test
and
mov
fld
es
into
decl
xor
popa
fmuls
iret
out
jae
mov
fiadds
jbe
icebp
arpl
std
xchg
ds
push
adc
sbb
rcll
fsubl
loopne
sbb
add
inc
pop
sbb
test
jae
jp
sub
inc
and
adc
out
dec
out
fwait
inc
imul
pop
mov
shr
das
aam
push
xchg
pop
inc
out
jno
out
pusha
push
cwtl
and
ret
lods
cmp
fnstsw
mov
loopne
pushf
cltd
lret
cld
mov
mov
lahf
or
lret
jle
lcall
test
push
xor
push
frndint
or
jno
jmp
cld
ds
xchg
test
mov
xlat
ret
arpl
dec
mov
loopne
xchg
and
bndstx
into
rcrb
pop
sbb
jge
sub
and
mov
xchg
push
mov
test
outsl
adc
sub
in
pop
and
enter
jle
dec
push
jo
pop
icebp
jmp
js
enter
test
xchg
jl
ss
inc
sbb
sub
out
xor
cmp
mov
jno
cli
adc
aaa
lahf
clc
jnp
pusha
xchg
sbb
icebp
cmp
bound
imul
xchg
or
into
xor
int
or
cmp
movsl
test
into
frstor
jmp
mov
sbb
cmc
mov
adc
aas
std
mov
aas
push
das
shufps
dec
sbb
out
cmp
sbb
or
cs
pop
idivb
add
sbbl
mov
stos
cmp
mov
mov
popa
das
mov
idivl
fnstsw
in
cmp
scas
pop
jbe
into
sub
dec
pop
aaa
aam
sahf
jmp
pop
xchg
inc
gs
dec
push
jbe
cmp
outsl
dec
bound
sbb
and
ret
mov
xchg
or
test
shll
fiaddl
testb
and
ficompl
jecxz
sub
inc
jl
mov
xlat
dec
mov
out
test
orb
sub
insb
sti
lss
push
mov
push
jecxz
lock
inc
imul
outsb
ror
sti
sahf
mov
sbb
ja
jle
cmp
test
xchg
fisubl
hlt
mov
das
mov
mov
pop
cmp
add
lds
loope
imul
mov
shrb
pop
dec
ret
inc
lcall
movsb
xchg
mov
xor
je
arpl
mov
popa
jmp
sti
ljmp
lret
or
std
popf
test
repz
mov
inc
mov
inc
jae
loopne
push
addr16
pushf
push
jg
mov
xlat
xor
fbld
adc
adc
add
imul
shll
std
adc
idiv
fldenv
popf
mov
aam
xor
xor
aam
jae
lods
mov
pop
outsb
stos
mov
int3
mov
mov
xchg
push
or
xor
movsl
cmp
mov
incb
ret
and
jl
fs
xor
rolb
enter
xchg
in
icebp
ds
test
jbe
mov
addr16
cltd
push
xchg
mov
jbe
jecxz
mov
fsub
xchg
pop
test
into
fsubrl
lret
adc
repnz
jle
push
pushf
mov
into
sarb
pop
lahf
subl
sbb
sar
sbb
mov
ss
pop
insb
fwait
jmp
jg
jmp
push
jmp
cli
adc
xchg
test
and
ljmp
pushf
arpl
ret
cwtl
mov
test
test
inc
xchg
lcall
andb
call
xor
imul
jno
and
sub
popa
roll
jl
sub
add
jbe
test
in
lods
cmpsl
ds
ljmp
cmpsl
pushf
cli
jp
dec
clc
fcoml
lea
es
mov
lods
lahf
ljmp
imul
mov
loope,pt
call
pop
shlb
push
fwait
xchg
inc
pop
filds
es
sbbl
cwtl
mov
jns
mov
push
lcall
ss
jno
out
and
add
push
fs
cmp
pop
sbbb
test
enter
adc
fwait
cld
push
or
leave
cs
mov
mov
ljmp
fimuls
int
flds
and
movsb
inc
and
ja
xchg
int
xchg
mov
out
out
sbb
addl
mov
lahf
xchg
lds
cli
fwait
and
addr16
mov
ja
lods
pop
leave
pop
adc
xchg
mov
fs
ret
cli
es
mov
lods
fwait
insl
pop
mov
xchg
pop
xchg
pop
add
test
je
je
into
dec
push
mov
es
lods
inc
mov
push
and
mov
and
cld
leave
icebp
and
mov
mov
bound
jo
adc
mov
xor
mov
iret
fcompl
inc
push
je
cmpsl
mov
in
scas
mov
xchg
inc
inc
pop
mov
imul
paddusb
or
jl
add
pop
xchg
add
add
jbe
xchg
xchg
pop
pop
or
mov
sahf
sub
mov
xlat
xor
repnz
dec
pop
lds
mov
sub
mov
jns
mov
cmpsl
stc
movsl
shrl
mov
cwtl
iret
stc
outsb
insl
mov
aad
jbe
xor
in
cs
sbb
inc
sar
in
cld
repz
inc
inc
push
das
rcrb
cmc
aam
cmpsl
cmp
test
push
fnstenv
loopne
or
pusha
decl
test
fildll
mov
cmp
into
jno
shrl
mov
cmp
and
in
add
movb
imul
daa
outsb
jne
popa
ljmp
jmp
stos
mov
stos
cmp
inc
jl
imul
dec
ret
daa
or
cmp
jno
leave
pushf
stc
fiadds
arpl
sbbb
xchg
or
arpl
mov
js
inc
pop
add
test
or
nop
outsb
jl
mov
xor
lret
push
xchg
pusha
fisttpl
mov
aas
enter
sub
std
mov
mov
scas
lods
mov
jbe
xor
movsl
or
sbb
jecxz
cmp
cmp
cwtl
sbbl
mov
mov
adc
sub
test
add
lea
lahf
adc
sbb
jno
lods
scas
inc
stos
inc
ja
xchg
sahf
sbb
ret
inc
sbb
mov
shr
ds
pop
xchg
fisttps
mov
mov
push
jle
pop
pop
outsb
xchg
int
les
jbe
pop
fadd
adc
mov
xor
push
mov
jbe
stos
out
incb
xchg
inc
sbb
cmpsb
int
lods
fsubl
fisubs
or
sbb
ret
push
sti
push
fistpl
test
sub
sub
subb
pop
jmp
xor
pop
ja
shrl
adc
outsl
or
or
scas
test
pop
out
jns
ret
dec
pop
mov
stos
mov
icebp
rorb
mov
and
xchg
cmpsb
movsl
aam
in
mov
mov
vcvtsi2ssl
or
lods
inc
insb
xchg
lds
mov
les
loope
outsl
mov
mov
flds
push
rorl
push
pop
mov
push
in
mov
jbe
shr
add
loope
fwait
pop
jbe
push
mov
mov
sbb
rclb
add
xchg
test
cli
in
and
push
cwtl
stos
in
icebp
clc
or
add
fisubs
or
scas
in
adc
adc
lods
mov
aas
cli
adc
dec
sub
out
jb
and
ljmp
out
test
or
sar
les
adc
movsl
ljmp
es
ret
add
outsl
mov
jb
mov
enter
pop
lahf
cmp
cmp
xor
hlt
inc
inc
mov
mov
mov
inc
pop
stos
adcb
mov
pushf
stos
xchg
outsl
popa
or
push
xchg
stos
xor
xchg
sub
add
inc
cld
loop
cmpsl
insb
and
mov
fcmovb
pop
or
fidivl
mov
shlb
ljmp
jb
movb
lock
lods
andl
xor
imul
test
inc
sub
ljmp
sub
jecxz
test
movsl
or
inc
stc
mov
push
pop
pop
mov
xor
push
mov
add
mov
int
movsb
clc
sub
xor
lds
mov
and
aam
xchg
divl
inc
mov
inc
fstpt
ficompl
mov
aam
dec
xlat
adc
int
jns
push
test
xchg
add
or
jb
fwait
cmpsb
aad
out
inc
xchg
loop
push
lods
movsb
cmp
pop
cmp
mov
out
push
push
mov
inc
xchg
pop
ss
out
or
mov
xor
sbb
sbb
imul
or
je
sarb
jecxz
or
stos
or
js
lods
dec
sbbb
iret
dec
mov
or
and
cmp
dec
mov
pop
lods
or
mov
cwtl
dec
cli
nop
out
mov
cmp
loop
and
cmp
dec
cmp
out
mov
aaa
and
adc
mov
push
jmp
pop
pop
imulb
outsl
xor
jg
inc
pop
xchg
pop
adc
sub
xor
mov
cltd
or
add
pusha
ja
mov
sub
xor
icebp
mov
popa
sbb
sbb
mov
fwait
jae
mov
push
mov
sahf
aam
and
sub
pop
addr16
add
lahf
movsl
inc
xlat
mov
sbb
daa
pop
outsb
adc
jne
cmp
add
mov
sbb
ret
cmpsb
cmp
jp
out
adc
popa
jecxz
jg
addr16
pop
mov
lahf
out
testl
decb
addr16
arpl
fs
xor
in
inc
pusha
and
mov
sahf
in
test
push
ficoml
or
pop
insl
cmpsl
dec
xchg
scas
ret
or
jecxz
cs
clc
and
int3
mov
jno
mov
pop
xor
daa
iret
push
push
int
cmp
aad
push
loope
repnz
push
stc
nop
cmp
push
dec
popf
xor
adc
mov
repz
sti
test
stos
jmp
push
push
outsb
cwtl
cmp
cmpsb
add
mov
mov
xchg
popa
mov
pop
add
scas
inc
dec
pop
sub
mov
dec
jmp
mov
dec
test
inc
call
mov
push
dec
pop
das
sti
inc
cmpsb
lock
jae
dec
cmp
js
sbb
push
fcomi
and
sub
mov
testl
les
lcall
add
inc
inc
dec
pop
sub
mov
arpl
push
jecxz
dec
or
sub
into
xchg
jbe
mov
andl
push
shrb
pop
xchg
pop
scas
out
ljmp
imul
mov
push
clc
push
sbb
dec
std
sahf
scas
cs
cmp
sbb
test
movsl
lret
xchg
pop
bound
pop
imul
stos
int3
addr16
enter
mov
in
xchg
mov
fldenv
or
and
sub
pop
mov
dec
out
cwtl
das
mov
xchg
cmp
xlat
outsb
add
mov
scas
xchg
loope
xlat
outsb
cmpsb
pslld
or
xlat
outsb
dec
repnz
lahf
std
xchg
lret
outsb
int3
push
repnz
sbb
or
xlat
outsb
lods
adc
mov
add
nop
cs
lret
repnz
loope
adc
shr
shlb
mov
or
arpl
sbb
push
test
and
and
mov
repz
and
cmc
or
mov
dec
fadd
pusha
adc
incb
jp
and
add
shrl
mov
sbb
pop
jo
add
push
sbb
inc
test
movsb
cmp
ror
repnz
mov
mov
push
pop
insl
xchg
jl
inc
daa
xor
dec
out
jo
jg
stc
cmc
pusha
fadd
into
jns
into
jb
sbb
repnz
push
stc
nop
inc
mov
adc
gs
mov
mov
fmuls
imul
js
mov
jnp
xor
xchg
mov
push
add
test
inc
cli
mov
pop
aas
out
adc
cmpsb
movb
dec
mov
lahf
add
in
in
shrb
into
xchg
add
lods
ret
je
fisttpl
mov
cmp
adc
int3
push
push
fcoms
mov
cmp
and
cmp
mov
push
or
sbb
jl
mov
add
arpl
es
das
pop
cmp
inc
pop
aas
mov
jno
int3
cs
dec
iret
idiv
and
sub
xor
push
mov
into
mov
pop
xchg
call
nop
add
in
inc
pop
push
jnp
and
inc
jne
cmp
mov
pop
push
mov
jae
mov
xlat
adc
test
xchg
mov
in
pop
mov
mov
cwtl
xorl
push
mov
cmc
and
push
shlb
pushf
push
insl
add
mov
movsb
and
xchg
adc
cmpsl
outsb
rcrl
cltd
stc
xchg
push
jle
fstl
scas
push
add
mov
push
adc
jo
aas
mov
out
fidivl
ss
mov
popf
and
popf
lret
jb
ljmp
insb
jge
mov
call
xor
int
cld
inc
js
add
push
in
and
repz
dec
sub
and
sub
pop
lods
push
btc
dec
sbbl
pusha
sub
xor
dec
mov
test
das
aaa
xchg
add
leave
xchg
addb
jp
or
addb
mov
icebp
sbb
xor
jle
and
stos
aam
jnp
mov
sbb
jge
rorl
xchg
shll
mov
mov
pop
in
inc
fdivr
push
insb
mov
jp
pop
scas
or
push
lods
ljmp
leave
pusha
xchg
push
pop
scas
xchg
nop
lcall
loop
xchg
stos
jmp
addb
mov
add
inc
loop
push
test
cmpsl
jb
xor
jne
jo
lcall
or
ret
push
cld
dec
pop
lret
dec
stos
data16
xchg
adc
cli
jne
repnz
insb
pop
int3
jg
nop
mov
xchg
adc
jl
push
add
jns
cmpsl
mov
in
std
aad
mov
inc
adc
test
and
das
pop
ret
adc
leave
inc
mov
pop
inc
mov
insl
xor
jbe
sbb
shll
or
push
sub
push
stc
cld
lds
inc
inc
and
cmpsb
inc
inc
daa
scas
xlat
pop
int3
jns
rep
int3
and
adc
jbe
jp
xchg
lret
xchg
enter
clc
cs
ficoml
outsl
es
jle
loope
push
mov
nop
jno
cmp
rcr
jne
sahf
or
in
movsl
mov
inc
pop
sub
mov
fs
push
jae
cli
daa
call
inc
ficompl
aam
addb
ss
in
test
cmc
dec
add
push
push
sar
lahf
in
jge
scas
je
pop
jnp
xchg
lock
push
ljmp
dec
adc
jge
ds
cmp
inc
xchg
push
xchg
test
xchg
stos
inc
push
xlat
mov
orb
inc
popa
add
add
add
xor
popa
mov
out
pop
ljmp
cmpsb
scas
fistl
popf
push
test
xchg
jae
cmc
mov
or
mov
push
outsb
test
mov
sti
mov
sbb
leave
outsb
mov
enter
loope
jne
mov
mov
test
push
mov
in
and
mov
sti
xor
and
jno
std
jge
je
adc
arpl
dec
loopne
mov
shlb
lock
lret
idiv
mov
es
xchg
jne
lods
xor
cli
mov
ss
movsl
jp
popf
and
sub
fisubrs
fs
jns
cmc
cmpsl
test
fidivrs
jge
insb
mov
outsb
movsb
loope,pt
pop
clc
jmp
jecxz
mov
out
xlat
xchg
mov
ljmp
lea
xlat
loope
mov
ss
les
divb
pushf
scas
pop
xlat
sub
and
icebp
sahf
es
imul
aas
imul
xchg
sbb
jmp
lret
mov
outsb
outsb
xchg
clc
aad
push
push
movsb
jg
pop
push
push
test
pushf
xchg
jnp
mov
sub
sub
sarb
ret
and
inc
ficompl
lods
nop
mov
cmp
push
push
push
movsl
out
sbb
popa
or
mov
pop
push
mov
fisttps
shlb
in
xchg
rcl
cmp
cmc
pop
insb
pop
stos
mov
dec
and
xchg
in
adc
add
or
test
int3
daa
jnp
inc
in
dec
nop
mov
dec
fimull
das
xor
push
ljmp
and
xor
xor
and
lods
sub
movsb
out
ja
lods
inc
aad
inc
sub
enter
pop
mov
cmc
hlt
cmpsl
lret
lahf
push
dec
gs
inc
std
sbb
jo
repz
cpuid
mov
pop
mov
mov
popf
call
fidivrl
icebp
xchg
pop
mov
pusha
fnstsw
clc
push
popa
cmpsl
add
sub
push
xor
add
pop
addb
nop
fcompp
imul
ja
push
fs
inc
jl
push
repnz
in
mov
fsts
leave
mov
repnz
jle
push
inc
int3
out
std
jne
cmpsl
push
jbe
inc
xor
movnti
xor
movsb
xor
pusha
insl
int
xchg
or
fsub
mov
mov
pop
int3
lahf
xor
test
mov
movsl
daa
dec
fidivs
int
inc
pop
sbb
mov
sarb
pop
mov
enter
inc
addr16
mov
stc
nop
jne
andb
add
data16
xor
aad
in
sub
aam
mov
mov
and
scas
fnstenv
sbb
rol
clc
pop
shll
repz
sbb
inc
lods
repz
fdiv
xchg
fstpt
add
sub
nopl
mov
or
fiadds
out
xchg
loopne
movsb
cmc
out
xchg
sbb
sub
mov
int3
mov
and
sub
lds
dec
pop
out
aam
jo
pop
ss
fdivs
not
add
adc
jp
jp
gs
mov
jae
mov
shl
leave
mov
movsl
inc
sub
cmp
lcall
and
push
test
dec
aas
ljmp
mov
out
mov
or
xor
hlt
popa
repz
jae
test
cmpsb
test
lods
shl
int3
inc
cmpsb
icebp
psubusb
popf
pop
pop
sarl
mov
jg
adc
jge
xor
cltd
xor
lods
ret
cmp
fiadds
sbb
sub
xchg
push
mov
bound
mov
push
call
fildll
mov
cmp
sub
lea
div
jecxz
push
lods
adc
pop
les
insb
jecxz
out
inc
insl
stc
test
aam
cmpsl
aad
or
ja
inc
push
mov
imul
int
mov
out
andw
lahf
and
push
mov
xchg
mov
or
pop
fs
cmp
shll
and
and
xor
mov
jecxz
sbb
add
jle
add
dec
loope
and
pop
cmp
pop
ja
fsts
das
std
inc
or
dec
cld
je
stc
add
sbb
dec
cmp
std
inc
xor
call
outsl
add
std
mov
ficompl
push
mov
arpl
inc
fcmovnbe
test
popa
es
lea
cmc
dec
jp
adc
push
xchg
inc
loopne
xor
out
sub
cmpb
or
fwait
sti
mov
fs
sbb
pop
cmp
out
pop
sti
cwtl
sti
out
insl
jge
lret
stc
test
sbb
add
not
lods
imul
dec
inc
mov
sub
jns
data16
ret
push
sub
jae
mov
mov
jg
sub
jno
mov
sbb
scas
xchg
subl
out
cmp
mov
mov
jb
push
push
inc
sub
ja
push
mov
push
sub
scas
jne
lea
je
xor
ljmp
iret
int
fidivs
mov
and
daa
mov
out
stc
cwtl
mov
dec
std
push
lea
arpl
stos
stc
or
inc
or
push
xchg
cwtl
je
das
mov
pop
popa
cmp
dec
cmpsl
mov
or
cmpl
outsl
leave
push
shlb
call
popa
add
bound
sub
out
ljmp
rdpmc
dec
push
inc
in
pop
cmp
push
jle
mov
dec
jle
xor
pop
mov
daa
outsl
jno
dec
pop
adc
pop
jg
mov
xchg
mov
pushf
leave
cmp
mov
lods
fldt
adc
or
ret
xor
mov
fiaddl
fidivl
and
jnp
cmp
xlat
repz
bound
mov
and
mov
and
xchg
addr16
jecxz
out
cltd
popf
jge
repz
xchg
sub
stos
lods
negl
jne
movsl
ljmp
mov
xchg
iret
add
out
and
adcb
sbb
add
mov
lcall
movsl
or
jecxz
shll
enter
cmpsb
leave
cs
pop
xlat
mov
fmuls
mov
dec
pop
push
mov
cmp
xor
jl
loopne
out
jae
dec
in
xchg
pop
movsl
mov
idivb
inc
add
mul
mov
into
pop
adc
mov
dec
aad
fdivrs
popf
mov
int3
movsl
outsb
mov
test
clc
lahf
cmpsb
push
xchg
mov
shlb
adc
jno
and
fistpl
shufps
pop
hlt
iret
psrlw
mov
out
movsb
mov
jmp
xor
mov
mov
lcall
stc
or
je
movsb
xchg
shll
shlb
aas
jmp
push
jbe
in
xchg
pop
rcrb
ss
dec
movsl
mov
aam
inc
dec
dec
jae
jge
jb
fistpll
aaa
hlt
imul
jnp
add
ds
or
or
cmp
bound
cwtl
cmpl
sbb
jcxz
lret
ss
mov
mov
jmp
sti
dec
and
inc
sti
movsb
in
xchg
cmp
enter
fs
out
stos
add
int3
out
adc
mov
and
jbe
push
push
fisubs
push
cwtl
mov
pop
adc
add
mov
xchg
cs
xchg
push
mov
inc
cmpsl
cld
fbstp
xchg
lcall
push
xor
cmp
dec
outsl
push
sarl
mov
mov
rsm
ss
cli
pop
mov
push
ja
or
shrl
push
add
pushf
mov
nop
pop
mov
or
leave
loopne
in
cmp
repnz
aad
in
fildll
cmp
mov
sti
xchg
xchg
jae
sbb
test
xchg
adc
push
dec
mov
adc
popf
aad
inc
loop
jecxz
stos
sbb
ret
inc
into
xchg
repnz
bound
out
and
jg
jae
xlat
sub
mov
popf
or
scas
inc
or
aad
jg
std
pop
xchg
or
lret
rolb
xor
inc
xor
imul
xlat
fnstenv
push
insb
xlat
arpl
mov
std
das
add
inc
test
add
dec
dec
xor
test
ret
test
es
add
ret
push
pop
test
or
push
and
aas
jns
je
sub
iret
and
or
push
jmp
frstor
jnp
push
mov
imul
cmp
lea
cmp
jmp
mov
xchg
scas
bnd
push
cs
mov
repnz
dec
cmp
xchg
jmp
mov
aaa
xor
xlat
sbb
insb
sub
or
cmp
repnz
jg
pop
push
pop
cwtl
pusha
jns
fwait
xor
and
cmp
inc
int3
and
stc
mov
aaa
ror
pop
adc
push
lcall
jno
mov
fisubl
adc
out
test
repnz
insl
add
adc
js
sbb
xor
push
leave
loopne
adc
mov
dec
movb
ds
xchg
outsl
leave
and
adc
push
mov
pop
loopne
js
push
mov
nop
inc
fdivrs
adc
pusha
sub
or
cmc
stc
push
pop
cwtl
xor
pop
mov
jp
arpl
and
mov
rcl
mov
loop
mov
mov
ror
cmp
ds
mov
and
cwtl
jp
or
push
test
test
push
cli
stos
orl
jmp
xor
icebp
icebp
insb
sbb
adc
hlt
or
cwtl
dec
jo
out
in
test
subb
push
or
pusha
ss
sbb
mov
popf
xrelease
sub
cmc
jp
mov
xchg
inc
call
sub
bound
xor
les
push
mov
mov
pop
xor
push
or
mov
testl
test
push
inc
pop
fstpt
sub
mov
idiv
pop
mov
push
add
push
adc
cmc
fwait
mov
popa
fiadds
jae
clc
movsb
and
sti
or
add
mov
pop
pop
loope
cmpb
mov
ds
in
inc
das
push
push
scas
aaa
movsl
icebp
stc
jne
mov
ss
jmp
push
inc
mov
add
ss
lods
daa
jmp
dec
pushf
js
ret
mov
jmp
inc
inc
cmp
mov
cmpsl
mov
jle
es
sub
popa
call
fidivrl
mov
clc
outsl
imul
mov
mov
adc
xchg
adc
dec
lret
enter
popa
enter
cmpsl
lock
xor
inc
xchg
lods
mov
sbb
sub
xchg
mov
iret
push
fsubs
xor
dec
cmp
test
push
cmpsb
inc
inc
loopne
push
mov
jecxz
cs
cmpl
mov
lret
fsubr
jmp
imul
aad
mov
shrb
aam
inc
pop
pop
xlat
jne
pop
jge
jno
adc
imul
cmp
and
or
aas
mov
iret
out
cmp
xchg
jg
insl
sub
jnp
xchg
fcomip
fwait
daa
or
mov
jmp
jbe
scas
or
fs
inc
xchg
push
sti
and
jnp
push
jmp
popf
jmp
icebp
jb
hlt
lret
shll
int3
xchg
mov
sub
jp
testb
xchg
mov
push
adc
stc
popf
fcomps
inc
test
or
les
cmp
sub
inc
repz
dec
mov
mov
lds
outsb
mov
fstpt
mov
ljmp
ret
mov
out
les
popa
xor
in
jmp
test
call
cmp
pop
movl
xor
pop
mov
dec
jo
sbb
and
xchg
push
std
inc
jo
jbe
cwtl
cmpsl
ret
notl
lret
test
jge
push
lahf
mov
xor
xchg
or
mov
mov
aaa
adcb
jmp
fdivl
sbb
or
insl
addb
dec
lret
rolb
ficoml
pop
lods
cli
xor
pop
push
mov
sti
sub
jecxz
xor
cwtl
push
pusha
sar
icebp
stos
cmpsb
test
jge
mov
je
cmp
push
jb
outsl
jne
je
push
paddd
add
lret
mov
push
aas
push
sub
vminss
mov
jecxz
loop
mov
lods
mov
ss
or
cwtl
stos
pop
enter
jbe
in
inc
outsl
daa
icebp
mov
pop
insl
xchg
andl
outsl
ja
pop
fcompl
loope
xchg
rcl
std
xchg
lock
sub
dec
cmpsb
stc
je
pop
outsb
xchg
lods
ficompl
push
jae
aas
mov
push
mov
and
movsb
inc
ror
dec
je
cltd
std
ja
sub
mov
sbb
ljmp
mov
and
sbb
jl
mov
mov
and
std
add
aam
xchg
enter
dec
int
sub
or
jb
dec
mov
mov
mov
dec
mov
xchg
xor
push
pop
xor
cmpsb
icebp
mov
lahf
add
mov
inc
jmp
out
fs
lret
and
sub
test
mov
add
shr
jle
cwtl
or
ss
pop
adc
push
dec
xchg
rolb
jp
pop
cld
cmp
cmp
test
inc
icebp
sbb
push
xchg
div
in
mov
or
pop
call
mov
in
fsubl
push
stos
inc
insb
sub
ret
push
out
and
and
ret
mov
jl
out
rorl
lahf
nop
mov
jle
fcomp
mov
and
and
loopne
cmpsl
adc
mov
push
out
inc
push
xlat
into
jecxz
xorl
or
iret
add
scas
push
test
filds
ret
jo
in
rolb
or
out
dec
and
stc
inc
xchg
jmp
cld
xchg
jae
leave
push
lock
push
out
and
push
push
subl
out
xchg
adc
arpl
shl
arpl
sub
adc
adc
jg
aaa
mov
adc
cld
pop
aaa
mov
jne,pt
push
popf
adc
pop
out
sub
orb
lcall
add
dec
or
mov
out
pop
das
mov
sbb
lret
xlat
shll
scas
scas
sbb
jno
stos
jno
mov
xchg
sub
cmp
popa
das
push
or
mov
into
mov
in
outsb
lock
rcrb
divb
int
inc
das
mov
add
mov
jae
shr
loopne
dec
jne
mov
push
sar
lret
nop
push
xor
bound
into
or
inc
lock
or
jg
xchg
xchg
mov
xor
in
jmp
shr
sub
mov
popf
fisubrl
fs
lret
push
popa
cmp
decb
aas
addr16
xchg
mov
lds
cmp
test
mov
pop
adc
xor
mov
fucomi
adc
ds
sub
add
cmp
out
bound
mov
or
cmp
add
outsl
xchg
mov
or
pusha
mov
sub
cmp
mov
pop
pop
call
adc
ds
add
aam
inc
mov
or
add
mov
or
movsl
add
mov
adc
adc
je
lret
aad
sub
jp
push
in
xor
inc
push
or
mov
push
js
aam
ror
nop
mov
arpl
inc
sbb
push
jge
xor
mov
push
inc
mov
mov
fdivrl
lods
test
push
into
sub
push
jns
lea
mov
dec
xor
sahf
add
cmpsb
mull
sub
je
test
xlat
jbe
mov
or
rolb
push
cld
fcoms
test
push
subl
outsb
stos
push
jl
sub
add
arpl
xchg
add
xchg
cwtl
hlt
cmp
or
push
mov
lcall
lcall
cs
in
aas
push
mov
pushf
xor
sarb
std
add
mov
andps
push
mov
inc
lock
push
jb
insl
inc
popf
mov
push
movsl
cmp
dec
inc
mov
inc
aas
mov
inc
lds
pop
lock
pop
insl
add
inc
ja
mov
mov
mov
into
shrl
adc
ret
sbb
fbld
xchg
cmpsb
dec
jecxz
jb
pop
and
lods
xchg
hlt
jae
dec
sbb
fiadds
or
and
pop
pop
testb
mov
pop
icebp
mov
packsswb
fiadds
inc
ss
sub
jno
cwtl
add
cmp
mov
ljmp
push
and
and
ja
sti
ss
out
data16
add
mov
clc
es
xor
test
popa
clc
cltd
add
leave
ljmp
cmp
and
sar
mov
adc
mov
test
into
xor
aas
clc
mov
sub
cmp
es
cmp
ss
ds
loop
aam
add
pop
call
mov
test
scas
ds
pop
sub
dec
pop
outsl
xchg
jne
imul
out
mov
sbb
int3
adcb
sbb
cmc
adc
push
in
push
xor
lcall
dec
xchg
sub
imul
sbb
add
xlat
outsb
mov
lret
add
insl
and
test
movsb
sbbl
sub
pop
dec
insb
add
jo
push
mov
push
sub
cmpsb
cmp
adc
dec
loopne
ret
ret
xor
loopne
pop
mov
rcrl
shlb
mov
pop
mov
pop
mov
dec
ss
sub
cmpsb
lock
mov
or
repnz
insl
push
das
fnsave
mov
ss
pop
push
mov
fs
pop
stc
icebp
mov
adc
das
lea
push
push
ljmp
jno
enter
sub
ret
or
mov
out
mov
out
and
rcll
nop
mov
add
inc
fdecstp
lods
pop
lock
popa
xor
xor
xchg
fldl
pushf
xor
movsl
icebp
xor
push
ljmp
sbb
addr16
rcl
mov
xor
and
aas
adc
inc
out
cmpxchg
add
mov
mov
pop
xor
dec
rorl
ret
lea
mov
loopne
clc
adc
ret
lock
and
inc
call
jns
add
mov
fadd
pop
push
mov
out
test
jmp
ja
cmp
sahf
imul
add
jo
pop
mov
ret
in
stc
out
mov
inc
or
cmpsl
cmp
mov
lds
mov
aam
or
into
cmp
repnz
rcr
hlt
cltd
xchg
sub
adc
mov
sbb
dec
xchg
xor
repnz
xchg
pusha
mov
loope
outsb
adc
xchg
sub
mov
mov
sbb
push
mov
lcall
push
mov
mov
lea
out
stos
inc
sbb
stos
inc
test
xchg
sub
xchg
in
leave
jge
dec
scas
ljmp
stc
sub
stos
inc
pop
cmpb
jg
pusha
lods
fstps
mov
loopne
outsb
adc
ss
mov
sbb
mov
shrb
loopew
cltd
push
icebp
mov
call
xchg
add
std
xchg
mov
ficompl
mov
movsb
call
int3
insb
testl
ljmp
jno
adc
jbe
jmp
fldenv
leave
pusha
mov
fyl2xp1
nop
setae
pop
in
pusha
negl
adc
mov
shlb
aad
loop
mov
push
jecxz
xchg
ja
lock
cmp
fildll
push
call
mov
fdivl
or
adc
es
scas
add
cmp
or
nop
and
lret
call
or
ds
lcall
cltd
mov
mov
aaa
pop
movsl
cld
call
cmp
dec
push
popf
adcb
mov
xchg
clc
cld
xchg
rcrl
inc
xchg
sub
dec
sahf
insl
shrb
test
clc
shrb
mov
ljmp
cmpsl
testb
hlt
stos
inc
and
enter
es
sbb
push
ljmp
lock
xchg
and
std
or
lds
std
es
in
les
ds
stc
outsb
add
xor
in
pop
lock
ss
xchg
sub
out
in
movsb
cmp
aaa
push
mov
sti
hlt
mov
rcrl
icebp
xchg
pop
call
test
repz
cwtl
das
sub
clc
jle
sub
clc
push
sub
imull
lahf
decb
fists
shrb
shl
ja
cmc
jle
sub
addr16
push
hlt
ss
sarl
inc
sub
xor
push
cmc
in
sub
jbe
add
enter
in
dec
cld
mov
xor
es
sbb
sbb
add
aaa
push
icebp
pop
mulb
adc
in
dec
pushl
xlat
test
cmc
mov
sub
testl
sub
add
cmc
sti
lods
inc
sub
pop
pop
clc
xor
sub
sub
cld
repz
mulb
and
add
xor
enter
adc
pop
or
cmp
dec
jecxz
jecxz
jb
sub
inc
fnstsw
mov
fidivs
aaa
in
andl
cmp
mov
testl
cs
mov
adc
aaa
into
das
mov
add
jno
xchg
sub
test
and
sbb
pop
cmp
xor
jecxz
add
mov
lahf
ss
mov
push
out
adc
cmc
ja
fidivl
mov
jo
push
inc
jl
jbe
add
xchg
aam
dec
loop
inc
pusha
idivl
sub
cmp
pop
out
push
dec
mov
jnp
mov
inc
scas
dec
aad
adc
dec
mov
ret
dec
scas
sbb
adc
push
jnp
xchg
sub
scas
xchg
sub
pop
dec
cmpsb
cmp
cmp
insl
pop
push
inc
fldl
lods
mov
cmp
movsb
sub
jnp
repnz
loop
lods
mov
mov
icebp
xchg
and
sbb
jbe
loop
and
js
je
pop
out
pop
xchg
out
test
cmp
jo
sbbb
xchg
pusha
test
call
call
mov
or
sub
pop
loope
adcl
xor
xchg
popa
shlb
push
xchg
lods
mov
test
push
xlat
sbb
scas
and
jg
lret
xchg
sub
jne
lea
sar
idivl
or
inc
into
test
cld
popa
popa
clc
xchg
and
push
mov
push
in
xchg
test
insb
add
leave
movsl
cmp
pusha
dec
in
sbb
scas
push
mov
popf
out
add
xor
and
cld
in
fnstenv
and
inc
fsubrs
repz
xchg
sub
iret
dec
dec
cmp
jp
out
or
jle
inc
dec
popa
clc
jnp
call
or
adc
ret
pop
jl
lret
bound
adc
das
jno
mov
inc
jae
hlt
mov
xchg
sub
mov
in
dec
loopne
insb
pop
lcall
mov
jae
mov
aad
movsb
add
jne
sub
ficomps
lods
inc
fidivs
cmpsb
clc
repnz
enter
dec
cmpsb
cmp
dec
popf
ret
pop
lret
insb
into
in
in
shr
sbb
jno,pt
jo
jp
inc
xchg
inc
ffree
insl
sub
lahf
out
jmp
out
cmp
push
out
lea
mov
fnstenv
or
jle
pop
sti
and
sub
dec
mov
jg
das
inc
add
leave
loopne
hlt
mov
mov
vpunpckhbw
mov
repz
cmc
or
fs
pop
xchg
dec
cmpsb
mov
call
or
cmp
testl
insl
cmpsb
es
aaa
into
mov
mov
ss
adc
aas
inc
fisubrl
xchg
aad
adc
sub
dec
hlt
mov
imul
fmulp
sbb
jns
cmpsl
ds
scas
loop
loopne
lds
shrl
fisttps
mov
cmpsl
add
stos
repz
cld
push
lret
bound
mov
dec
xchg
mov
das
xor
cmp
jbe
push
call
lods
addb
lret
cld
dec
jae
xor
arpl
sub
cmp
mov
sub
adc
adc
icebp
xor
sbb
mov
es
cmc
negb
xlat
jnp
cli
dec
aad
es
jo
aad
mov
cmp
inc
bound
jecxz
test
jbe
push
ljmp
xor
popa
imul
cmp
and
arpl
and
daa
jb
test
push
pop
pop
inc
ffree
jns
sub
ret
and
out
into
aaa
dec
rorb
mul
inc
fidivl
pop
jle
lahf
pop
rolb
push
mov
jge
pop
aam
xor
inc
lea
shll
mov
or
sbb
jb
jns
add
push
cmpsb
insl
and
jecxz
sub
fwait
cmp
adc
adc
je
std
sub
mov
in
mov
icebp
lret
arpl
dec
jp
insl
rcrb
xchg
imul
or
mov
and
test
cld
dec
and
mov
jne
js
push
popa
movsb
outsb
and
dec
in
lahf
jbe
sbb
adc
jb
jg
mov
lock
mov
fmul
inc
jmp
aaa
faddl
inc
roll
sub
xchg
add
xor
unpcklps
push
scas
bound
clc
xor
push
stos
inc
orl
mov
scas
in
jecxz
pop
roll
jle
fstl
out
cmpsb
cmp
leave
movsb
xor
inc
mov
xor
push
sub
xor
aas
out
js
icebp
dec
shll
fldcw
and
jae
pop
test
adc
adcl
shrb
mov
fnsave
fsubr
mov
sub
out
lea
test
aas
jmp
push
sbb
ljmp
pop
cmpxchg
push
xchg
cmc
add
lds
jae
dec
out
xorl
xor
cmp
scas
mov
xchg
jle
pop
iret
push
movsb
push
cltd
jbe
mov
cmpsb
cmp
lds
popa
icebp
fistpll
push
out
xchg
movsl
adc
cmp
jp
push
pop
inc
fwait
mov
mov
xchg
lods
lahf
arpl
sub
addb
mov
jg
imul
mov
loope
pop
and
sarl
popa
sub
aas
cld
repnz
insl
or
jnp
ret
pop
enter
jle
jmp
jnp
icebp
mov
pushf
dec
ret
data16
pushf
sub
pop
shll
addb
or
mov
mov
cmp
js
jge
adc
xchg
rcll
loope
in
sbb
ret
fs
ror
out
and
mov
fidivs
push
cmp
fwait
lret
ljmp
pop
repz
loope
mov
fldl
mov
test
xchg
outsb
in
lcall
aad
clc
fdivs
sbb
loop
push
popf
inc
movsb
jmp
and
jb
cmp
cmp
push
inc
push
popf
test
mov
divl
popf
cmpb
insl
add
inc
or
hlt
aam
adc
push
pop
repz
sub
lea
out
push
jne
aas
fldcw
test
jnp
or
gs
insb
add
sti
push
pushl
pop
mov
adc
dec
fsts
add
scas
test
and
test
outsl
mov
mov
inc
cmp
pop
pusha
testl
rorb
bound
or
sarb
cmp
repnz
cmpsl
pusha
adc
pushf
cmp
jp
inc
xchg
js
pop
inc
movsb
pop
nop
js
sub
in
dec
cmp
jo
sub
xor
hlt
pusha
bound
sub
push
jnp
inc
fcmovu
pushf
ljmp
mov
fisttpl
inc
lret
mov
loop
inc
fsubl
lds
inc
pop
cmpsl
jl
adc
adcb
sub
enter
outsl
adc
and
cmpsb
cwtl
mov
cmpsl
shll
pop
ret
mov
out
test
stc
aaa
setge
ss
sbb
arpl
stc
push
pop
jecxz
push
xor
nop
xor
jmp
fs
dec
shl
sti
xchg
pop
shll
mov
aad
adc
push
stc
aas
jecxz
jle
jmp
rorl
loope,pt
inc
rcrb
imul
shlb
add
and
cmc
dec
mov
std
pop
les
pop
push
out
sbb
xor
sbb
jmp
into
add
sahf
int3
loop
fistps
sub
jge
leave
inc
aam
aaa
jmp
fldcw
mov
popl
cld
cmpsb
jo
hlt
stos
sub
mov
out
pushl
out
stos
aas
repz
mov
clc
sub
into
adc
pop
mov
lds
mov
and
sub
xchg
and
mov
iret
push
insl
in
xor
aas
scas
inc
push
repz
mov
std
xchg
jnp
push
xchg
fistpl
insb
inc
cmpsl
insb
add
inc
ror
fcompl
xchg
outsl
fcmovu
push
jmp
imul
mov
mov
xchg
test
mov
in
xchg
popl
pop
and
dec
inc
bound
je
sbbb
xchg
sub
pop
xchg
inc
add
mov
std
aaa
ljmp
push
repnz
mov
add
mov
xor
xor
adc
xor
lds
push
int
outsb
and
sub
test
repz
jae
popa
mov
arpl
sub
mov
inc
fisttpll
push
cld
pop
and
pop
pop
adc
sub
out
inc
aaa
inc
lret
jb
push
movsb
inc
mov
jnp
xchg
mov
fisttps
icebp
xor
fldenv
loope
fdivs
add
lahf
lret
mov
jge
mov
cli
leave
jnp
fcom
and
ljmp
in
into
push
test
hlt
sub
enter
stos
scas
adc
lcall
mov
loopne
fidivl
cmp
xchg
cmp
sbb
sbb
and
add
mov
adc
dec
push
jmp
xchg
inc
and
push
stc
mov
mov
aaa
sub
push
mov
push
aaa
add
or
dec
add
das
cmpsl
inc
mov
data16
push
in
aas
ds
jp
es
inc
fwait
mov
or
arpl
jb
jecxz
enter
loope
push
outsb
fimuls
sub
lahf
pop
cmpsl
js
or
cwtl
xor
mov
std
and
pop
aas
aas
test
dec
add
cmp
push
ja
pop
add
jno
jnp
icebp
inc
ret
mov
mov
loopne
je
aas
cmpsb
mov
dec
insl
mov
pusha
push
jmp
add
xchg
sbb
lods
out
mov
mov
data16
ljmp
stos
fbld
mov
fidivrs
pop
cld
xor
mov
stc
pop
adc
inc
cli
xchg
jecxz
ss
dec
aas
in
xor
fdivl
sbb
adc
add
add
add
je
push
mov
movsl
insb
jne
ss
leave
arpl
loop
jmp
int
dec
adc
divb
adc
scas
bound
outsl
popf
mov
jp
pushf
daa
daa
ljmp
inc
fmuls
lods
mov
push
cld
lea
test
arpl
jbe
lods
push
loopne
pop
mov
scas
push
std
iret
inc
out
dec
push
into
outsl
test
fs
and
jne
xchg
xchg
clc
daa
inc
mov
add
inc
mov
adc
jge
inc
inc
test
cmc
clc
dec
mov
movsb
test
out
push
jmp
lods
aad
cli
push
mov
ss
push
lods
je
xchg
cmp
cltd
xor
ja
movsl
jo
push
or
and
xchg
cmc
lea
cld
dec
mov
mov
lahf
add
stos
pop
mov
cltd
inc
or
push
rolb
dec
mov
push
cmp
test
mov
repz
popf
pop
test
push
cltd
shrb
fsubrs
mov
mov
pop
mov
mov
push
into
sub
arpl
fildll
gs
cmp
lcall
divl
sbb
adc
loop
xchg
decl
iret
sub
js
jbe
call
test
inc
stc
xchg
push
fisubrs
mov
aaa
fidivl
mov
popa
fwait
push
mov
sub
pusha
jo
xor
js
fadds
mov
sbb
aad
mov
jne
addr16
hlt
xchg
push
push
add
mov
cmpb
add
in
inc
in
and
and
pop
inc
fidivrl
arpl
shll
stc
push
add
xchg
lret
movsl
std
nop
roll
insb
pop
les
loope
test
jg
imul
mov
sbb
cmpsl
mov
inc
mov
out
icebp
pop
loope
xlat
aaa
mov
repz
lahf
push
inc
outsl
mov
jb
pop
test
push
popf
dec
mov
dec
sbb
push
stos
bound
addr16
pop
cmc
addr16
dec
cltd
test
inc
in
cwtl
das
lods
mov
pop
ret
outsl
pushf
bound
sub
inc
dec
pushf
or
popa
mov
sbb
xchg
sub
popf
xchg
hlt
das
es
pop
je
ljmp
push
dec
mov
popa
roll
bound
inc
dec
jae
xchg
xchg
scas
inc
ret
and
xchg
in
add
pop
pusha
into
fwait
test
imul
push
lods
stc
int3
mov
icebp
lods
pop
ret
hlt
ret
mov
stc
out
ds
push
sbbb
rcl
cmp
les
mov
repnz
out
daa
loop
xchg
lods
sub
hlt
push
in
loope
sub
xchg
movsl
ret
add
sbb
outsl
fiaddl
adc
mov
and
push
mov
dec
lret
xor
xchg
mov
icebp
cli
pop
add
pop
stos
sub
fsubrl
jb
ret
add
xor
out
popa
sbb
push
mov
cmp
and
aam
cmpsl
loop
int
xchg
mov
loopne
adc
test
mov
mov
repz
cmp
xlat
addl
or
or
imulb
and
loopne
xchg
jnp
stos
adc
sti
and
xor
mov
out
or
inc
stos
xchg
push
shr
lds
jecxz
xlat
push
lods
aam
or
dec
dec
rcr
pop
push
sti
inc
fildl
jmp
or
xchg
daa
jl
jp
daa
stc
sahf
cs
fisttpl
or
sbb
pop
cltd
sbb
cmp
jge
or
jns
lcall
push
inc
dec
adc
loop
pop
ficoml
mov
push
daa
or
fisttpl
imulb
dec
mov
push
pop
and
fsubl
inc
push
iret
push
xchg
cmp
mov
outsl
pop
fbld
cs
into
nop
mov
test
sbb
or
mov
or
mov
mov
repz
add
imul
movsl
push
cmp
rorl
stos
pop
addl
inc
cwtl
adc
push
mov
lcall
jge
les
push
jmp
aas
cs
scas
jo
mov
rorl
pushf
insb
fdivp
mov
lea
sbb
push
fwait
adc
jo
cs
ss
dec
lods
addr16
adc
lret
push
push
lock
sub
pop
cmpsb
jmp
fildll
stc
dec
aad
mov
stc
sub
and
mov
std
lods
mov
jl
fstpl
push
ljmp
mov
mov
adc
lea
cmpsb
mov
lods
add
jl
bound
jge,pt
enter
adc
cmp
and
inc
mov
push
ss
mov
loope
xchg
mov
loopne
in
rorb
jecxz
into
orb
shlb
loop
adc
sahf
add
cmpsb
or
push
mov
aam
loope
sbb
lods
cmpsb
mov
hlt
hlt
ljmp
rcl
jbe
out
sbb
adc
std
xchg
repz
cmp
push
out
cltd
test
frndint
or
pop
mov
aaa
jmp
add
mov
pop
psllq
push
icebp
mov
sbb
lcall
xchg
mov
cli
dec
ror
or
lahf
test
shll
or
or
push
adc
out
repnz
xor
ficoms
dec
dec
lds
ret
jns
shll
popf
mov
fstpl
adc
nop
jb
jp
add
xchg
popf
xchg
xchg
sbb
movsl
outsl
dec
mov
incb
inc
inc
fisttps
cmp
jge
mov
insl
xor
jno
ss
dec
cmpsl
lcall
lret
xor
mov
filds
add
xor
clc
loop
mov
out
insb
movl
js
inc
add
dec
arpl
nop
movsb
mov
idivl
sti
sub
iret
mov
pop
add
xchg
addr16
jg
pop
cmp
in
or
sub
mov
lret
in
imul
lret
mov
lahf
xor
roll
in
in
cmp
and
inc
push
xchg
push
scas
mov
sub
rcrl
lea
sub
repz
sarl
imul
add
repnz
adc
mov
fdiv
adc
js
and
pop
fwait
cltd
mov
xchg
inc
into
sub
dec
shll
daa
mov
outsb
test
fwait
mov
adc
inc
xchg
jae,pn
daa
std
inc
pop
negb
sub
js
std
xchg
cltd
jbe
push
leave
dec
mov
or
push
mov
das
movsb
pop
cmc
sbb
aam
fwait
sub
es
sbb
aas
jo
fmull
in
and
adc
popa
mov
je,pt
cmp
nop
popa
and
je
and
xlat
faddl
jne
xor
push
mov
xchg
ret
loopne
cmpsl
ds
inc
int
pop
stos
outsl
and
cmp
imul
pop
lea
sbb
mov
in
jbe
mov
pop
cwtl
jmp
and
dec
dec
inc
clc
push
arpl
addb
pop
lock
mov
mov
xchg
adc
movsb
xor
dec
mov
test
testb
dec
pop
dec
sub
ds
test
gs
or
cmp
jecxz
dec
leave
inc
dec
shll
cmp
cmp
lods
mov
rcll
hlt
sub
icebp
orl
sub
dec
mov
test
pop
rcll
and
repnz
das
fdivp
push
loopne
imul
ret
fnstsw
popf
sbb
or
jg
jae
aad
call
mov
dec
shl
out
lahf
enter
out
sbbl
or
dec
lret
cmp
rcll
jb
fnstsw
mov
testl
mov
ficoms
fcmovnu
aaa
cld
mov
or
push
into
mov
loope
fistl
scas
and
test
cmp
push
movsl
outsb
adc
jno
jb
adc
arpl
pusha
pop
or
inc
pop
scas
inc
repnz
sub
bound
cld
push
andl
inc
rclb
je
js
divl
in
aaa
sbb
scas
addb
or
pusha
mov
mov
mov
paddusb
iret
sbb
mov
add
insb
add
pop
sub
add
push
fnstenv
xchg
cmp
and
pop
into
inc
lea
test
xlat
jmp
or
lcall
mov
jg
arpl
cmp
add
insl
adc
inc
movl
jo
push
mov
ret
mov
fsubrl
pop
in
pop
repnz
and
xlat
push
aam
sahf
fbld
in
in
sbb
jno
movsl
es
daa
xchg
test
jne
inc
inc
jns
xor
dec
int3
rorl
dec
mov
pop
mov
and
pop
addb
dec
pop
mov
cwtl
sub
jns
mov
push
mov
mov
sub
push
mov
adc
or
push
popf
pop
inc
or
xorb
xchg
imul
sbb
mov
jmp
cmpsb
test
hlt
mov
mov
xchg
fucomi
mov
sar
addl
ret
and
add
and
aad
add
add
imul
fidivs
and
jp,pn
mov
sub
stos
lahf
ss
imul
movsb
cmp
lock
fiaddl
clc
in
lea
shrl
lock
pop
hlt
aad
pop
scas
push
cmp
adc
imul
inc
ss
inc
dec
daa
mov
dec
stos
xchg
push
add
push
inc
fdivl
sub
mov
je
jg
mov
insl
sub
mov
orb
mov
mulb
sub
inc
stos
imul
dec
jno
dec
inc
dec
cmp
push
dec
rcrl
and
inc
movsl
outsb
jl
and
push
xor
jmp
cltd
mov
pop
jno
cmpsb
or
lods
negb
shrb
imul
or
push
cltd
roll
loope
cmp
pushf
lds
testb
or
not
dec
xlat
pop
dec
rclb
mov
test
sub
xor
mov
and
inc
inc
cwtl
cmp
aas
pop
jge
sbbl
push
imul
cmp
pop
iret
addr16
cmc
mov
sub
test
pop
sbb
adc
xchg
push
popf
mov
xorl
push
int3
add
daa
clc
icebp
roll
sti
fisubs
and
inc
fmuls
pop
ret
mov
mov
adc
loop
dec
mov
jecxz
pop
icebp
add
xor
pushf
mov
or
mov
clc
sbb
adc
sub
cmp
cmp
dec
lcall
xor
stos
mov
adc
rclb
sub
push
pusha
and
pop
pop
sbb
dec
xchg
xor
cs
cli
push
push
jnp
sti
inc
inc
mov
loop
push
xchg
mov
or
sub
test
or
das
pusha
cmpsl
xchg
pop
mov
aam
or
cmp
sbb
pop
rorb
add
fistpll
adc
adc
xor
scas
xchg
in
ss
es
mov
leave
pusha
xor
test
int3
fs
rcrl
jge
sub
inc
ret
mov
mov
push
in
test
add
push
or
ljmp
stos
pop
pusha
xchg
dec
pop
daa
scas
popa
cmpsl
test
push
push
mov
jnp
cmp
jnp
xchg
mov
cmp
jno
test
aas
adc
cmp
jne
push
dec
xchg
pop
sub
cltd
mov
mov
pop
into
lods
aaa
dec
iret
ja
and
iret
and
addb
stc
dec
ret
mov
ljmp
sbb
xor
ljmp
sub
outsl
mov
xchg
jp
mov
cltd
js
inc
sbbb
dec
sarb
aad
jl
add
gs
call
jmp
stc
jae
repz
mov
lret
or
mov
or
ja
gs
sbb
out
pop
lahf
inc
ficomps
pop
sbb
sahf
inc
dec
mov
cmp
popa
fwait
dec
pop
jb
pop
das
jbe
jp
ja
cmp
dec
loopne
jg
jl
jnp
xchg
cmp
xchg
imul
popa
jo
fnstenv
lods
push
cli
sbb
adc
jno
sub
mov
mov
adc
push
je
fstl
pushf
mov
scas
cmpb
mov
cmc
xor
in
data16
fisubl
je
mov
in
int
cmpsl
aam
rcl
push
test
out
aad
mov
out
mov
std
sbb
loopne
addr16
ss
jne
xchg
jecxz
dec
jnp
xlat
mov
mov
add
and
push
xorb
mov
es
xchg
loop
enter
and
or
jecxz
mov
aad
bound
inc
adc
xlat
mov
enter
push
pop
repnz
negl
int3
mov
lret
loope
xor
mov
lea
lock
add
lds
push
in
or
fiaddl
sub
mov
cmc
pop
cltd
mov
xchg
std
mov
adc
ret
lock
cmp
setl
hlt
sbb
out
xchg
and
push
cmp
xor
fdivl
cmpsl
or
mov
mov
jle
mov
mov
adc
cmp
and
cmp
cmp
enter
fiadds
dec
xchg
ss
outsb
fists
push
lds
arpl
mov
into
cmp
pop
aad
mov
cmp
loope
repz
andl
or
jmp
or
int
ljmp
mov
sti
insl
scas
jb
loope
sbbb
add
aaa
adc
inc
mov
push
test
fildl
jmp
cs
xchg
or
sbb
roll
inc
fsubl
inc
arpl
js
jb
push
cltd
sbbl
stos
in
lahf
ss
int3
scas
inc
aas
mov
fs
xchg
jb
andb
mov
imul
xor
fstpl
mov
jno
pusha
jae
es
mov
inc
push
mov
push
call
or
jne
jp
subb
sahf
scas
sbb
push
add
shlb
jno
ret
stc
hlt
movsl
jne
xlat
adc
xchg
sub
imul
push
out
sahf
iret
data16
fdivl
icebp
in
test
arpl
xchg
xchg
inc
or
out
sub
or
into
cmp
inc
ficomps
pop
push
in
mov
gs
imul
sbb
fbld
inc
xchg
mov
flds
in
subl
xchg
or
mov
pop
mov
aaa
into
scas
repnz
frstor
rcll
add
sti
jbe
jae
push
xchg
sbbb
jbe
sub
lret
cld
cmp
into
gs
nop
fdivl
jo
andl
or
addr16
sub
inc
mov
int
push
push
jmp
mov
jb
pop
or
nop
daa
mov
mov
inc
add
rclb
int3
arpl
fbstp
xor
dec
in
movl
sbb
sbb
mov
mov
sbb
aam
cmp
insl
lahf
stc
rorb
shlb
and
push
cld
xchg
cmp
xor
mov
pop
fs
mov
add
out
test
pop
scas
cltd
js
mov
jmp
sub
push
jmp
test
ja
mov
mov
fimull
cmp
adc
test
rcrl
mov
add
test
mov
xor
mov
inc
cwtl
add
es
mov
mov
cmp
loop
and
shrb
rolb
cmp
mov
inc
sahf
pop
xchg
or
mov
es
and
inc
test
loopne
xchg
sub
add
lods
scas
jbe
loopne
adc
add
sti
icebp
jl
repz
shll
mov
int
aad
lods
pop
mov
sbbl
adc
or
or
mov
push
xchg
mov
cmp
in
xor
add
nop
outsb
mov
cmp
aas
inc
pop
movsl
pop
pop
mov
mov
ss
movsb
sbb
sbbl
dec
jg
xchg
dec
pop
scas
fwait
xor
xlat
push
lods
push
test
sbb
ror
call
cmpb
insb
arpl
push
lahf
mov
movsb
fcomps
loop
iret
jp
lods
arpl
fisttps
cmc
inc
jnp
stos
in
and
xor
in
push
mov
sbbl
inc
lods
aaa
loopne
xor
push
movsb
push
mov
mov
or
lock
cmp
push
mov
sbb
mov
pop
mov
cmp
inc
int3
pop
stos
mov
adc
push
jb
lret
and
ja
insl
adc
mov
push
jns
sub
cmp
insb
mov
movb
addr16
testb
pop
lock
push
pop
imul
cs
insb
cmp
lcall
fst
pop
sub
and
pop
inc
ret
stos
push
inc
daa
mov
mov
jg
test
mov
insb
ror
fcomi
ss
std
cmp
sub
ret
gs
scas
imul
adc
arpl
adc
dec
pop
dec
sahf
cmovs
push
push
mov
push
xchg
roll
fwait
cmp
lock
mov
jns
and
jo
cmp
mov
inc
adc
push
inc
or
push
add
iret
dec
mov
cmp
sub
push
dec
popa
and
test
scas
push
mov
sbb
imul
inc
out
popa
push
adc
or
push
mov
sbb
or
hlt
andl
cmpsb
mov
dec
clc
ja
insl
addr16
cmp
roll
inc
mov
ds
jo
cmp
cwtl
imul
add
lock
pop
adc
xor
das
sub
mov
dec
mov
or
lds
fnsave
mov
cli
jecxz
adc
add
out
test
lods
xor
push
lahf
in
adc
sbb
mov
push
gs
inc
pop
add
fucom
inc
fcmovnbe
je
in
gs
add
jge
add
andb
cmp
and
aam
push
and
cwtl
imulb
loopne
cltd
decb
sub
bound
mov
cld
xchg
inc
add
lahf
xor
lds
sub
hlt
arpl
aaa
inc
adc
cmp
pop
insl
ficomps
jmp
dec
mov
bound
mov
scas
sub
cli
pop
push
xchg
or
jmp
fcoml
sbb
xor
mov
xor
leave
and
ret
xchg
sbb
jge
push
mov
inc
or
mov
movsb
mull
es
or
sub
aas
cwtl
stc
inc
dec
or
call
insb
ljmp
insl
jmp
iret
stos
dec
or
adc
sahf
ja
int
lea
or
mov
in
imul
adc
popf
idivb
enter
insb
add
stc
nop
ret
jne
and
mov
imul
lds
mov
lods
int
repnz
out
cltd
xor
add
xchg
or
lret
orb
movsl
sub
mov
cmpsb
in
pop
add
inc
cwtl
inc
mov
mov
popa
das
jbe
dec
pop
aas
mov
push
and
xlat
jge
and
mov
mov
pop
mov
sbb
push
mov
cmpsl
sub
scas
mov
sbb
mov
lds
jnp
cli
pop
fisubs
sub
loopne
cmpsb
cmp
dec
dec
or
or
lcall
pop
mov
mov
sbb
mov
rorb
jno
std
pop
shlb
and
loope
fwait
xor
dec
xchg
or
orl
sub
testb
insb
sbb
mov
loopne
jmp
cmc
mov
cmpb
pop
push
cmc
or
mov
mov
fimull
cmp
test
je
rclb
mov
and
jnp
aaa
dec
adc
negb
mov
pop
xchg
loop
loope
xchg
aaa
icebp
cmc
xchg
cmp
scas
inc
or
mov
jno
lcall
fldl
xchg
xchg
cmc
pop
enter
pop
and
xorl
and
xchg
ret
mov
cmp
xchg
adc
pop
mov
jmp
call
add
jmp
cmp
cmc
fs
shlb
cmc
xchg
outsb
aam
outsl
out
or
lret
push
pop
clc
xor
or
sub
stos
sub
insl
fcmovu
pop
cld
jge
imul
add
int3
mov
pop
push
add
movsb
arpl
xorl
xchg
inc
add
out
mov
mov
dec
push
xor
stos
sub
fcmovu
jnp
push
jae
rcr
outsb
out
lahf
or
addl
fnstenv
pop
xchg
cwtl
xor
and
inc
cmc
xchg
pop
icebp
bound
enter
cmpsl
push
push
cmc
adc
icebp
bound
mov
orb
roll
test
mov
aas
jb
icebp
popa
movsl
imul
int
fwait
aaa
mov
rolb
das
loopne
pushl
scas
sbb
das
mov
out
test
jae
loop
mov
arpl
mov
cmpsb
mov
shr
insl
stc
or
mov
clc
pop
add
daa
mov
pop
out
imul
and
pop
andb
gs
mov
push
or
jbe
mov
std
pop
jno
les
fwait
sar
pop
clc
sbb
dec
pop
roll
lcall
dec
pop
xorl
movsl
in
add
jl
mov
nop
orl
bswap
cmp
xchg
mov
mov
stos
aad
nop
out
lods
adc
or
or
daa
mov
push
pop
negl
push
add
cmpsl
jg
hlt
sbb
jo
jmp
pushf
mov
mov
pop
clc
fwait
xchg
jae
mov
clc
xchg
sub
sbb
cmpsl
loope
or
pop
lea
jle
jle
cmpsb
jbe
dec
pop
push
inc
xchg
test
and
fimull
pop
xor
adcl
mov
addr16
jns
daa
push
adc
lret
mov
outsl
aas
mov
jbe
bound
imul
push
pop
dec
add
mov
es
dec
or
cmp
xchg
inc
sbb
xlat
mov
imul
adc
push
stos
xor
mov
fistl
repnz
adc
imul
ret
xchg
lcall
insb
add
inc
mov
pop
movsb
shr
insb
pop
mov
scas
sub
mov
adcb
icebp
xchg
dec
or
ja
mov
rcr
ds
cmpsl
xor
and
cmpsb
add
stc
adc
jnp
dec
test
bound
loopne
pop
push
aaa
fnsave
push
mov
cs
addl
dec
outsb
ljmp
in
into
in
sub
adc
adc
mov
push
inc
call
imul
imul
in
and
push
rcll
mov
xchg
inc
insb
ja
or
insb
jmp
shr
mov
data16
jp,pn
or
test
inc
out
adcl
in
imul
call
les
mov
test
inc
data16
rclb
jnp
jmp
into
call
inc
adc
jnp
or
ljmp
mov
stos
jl
iret
int3
movsb
sub
stos
out
jne
mov
mov
or
arpl
mov
mov
xor
mov
push
and
jbe
or
popa
call
jmp
fwait
inc
inc
call
cmp
cmp
cli
sub
sub
adc
aam
in
jno
add
ret
js
or
cld
popa
cmc
jp
repnz
dec
adc
sbb
mov
push
xor
int
add
or
jl
pusha
mov
mov
stos
jb
xchg
ret
loope
repnz
adc
cltd
jmp
cld
or
jbe
sub
dec
push
lock
imul
sub
ljmp
test
mov
pop
cmpb
in
fsubl
cmp
fidivrs
xchg
pop
sti
mov
mov
dec
in
mov
xchg
sbb
test
repz
and
inc
adc
cmpsl
xor
jb
jl
shr
ljmp
cmp
das
lods
push
xchg
pop
clc
fwait
mov
jnp
ret
adc
out
insb
xchg
scas
xchg
int
jecxz
sub
xor
jle
jb
fs
pop
mov
test
faddl
rolb
dec
sbb
es
mov
pop
dec
sub
push
scas
cmp
jle
test
arpl
in
outsb
ljmp
jge
sti
push
dec
or
adc
rclb
push
add
sub
and
mov
mov
stos
adc
or
sub
xchg
xor
data16
jl
ficoml
and
stos
enter
mov
inc
out
jae
mov
lods
in
call
call
push
push
mov
jg
mov
mov
dec
xor
outsb
bnd
xchg
outsl
aad
mov
or
jmp
das
push
pop
add
pop
adc
sbb
cmpsb
cmp
seta
nop
fsubs
lods
or
pusha
or
xchg
loopne
sub
xchg
xchg
test
test
mov
xchg
and
movsl
psllq
cltd
imul
subb
xor
xor
sub
sbb
adc
add
sbb
pop
jle
cld
sub
pop
clc
ret
and
mov
and
int
mov
mov
imul
jbe
jne
fbld
jge
jl
lds
into
xchg
inc
jno
mov
cwtl
mov
leave
xchg
adc
ret
mov
sbb
mov
stos
test
pop
loope
leave
xchg
push
push
inc
jle
pop
xchg
gs
mov
mov
rorl
outsl
in
lret
rorb
pop
clc
hlt
mov
ljmp
cltd
cmp
jge
orl
sub
add
mov
inc
jmp
dec
int
jl
jno
push
insl
mov
sub
gs
fsubs
lods
mov
lods
push
sti
pop
shrb
ds
xchg
in
xor
adc
test
fs
iret
xchg
test
cmp
mov
dec
mov
repnz
lcall
gs
adc
imul
dec
push
add
test
test
stc
mov
sarl
xor
or
or
imul
lods
jb,pn
stc
mov
bswap
ret
mov
cmp
lret
and
movsb
fs
mov
scas
aaa
mov
in
mov
or
call
and
stos
mov
inc
or
pop
add
fs
aas
pushf
test
sbb
mov
pushf
test
sub
dec
jns
cld
ja
aam
out
sbb
ja
flds
mov
movsb
mov
xchg
push
test
xchg
dec
sahf
aaa
and
mov
jg
sti
arpl
sub
xor
fiadds
clc
pop
and
insl
hlt
cmp
inc
or
sub
dec
sbb
pop
xchg
dec
iret
xchg
mov
xchg
cmp
fisttps
shlb
pop
lods
xor
mov
pop
add
movsl
cltd
aas
pop
push
lea
dec
cli
bound
pusha
call
and
dec
xor
jl
push
cld
dec
outsb
adc
arpl
mov
je
loopne
inc
popf
inc
sbb
lret
xchg
sbb
fisubrs
dec
lods
xor
cmp
outsl
and
ja
scas
sub
push
dec
cmc
pop
flds
movsl
and
loopne
out
fadds
cwtl
pusha
xchg
cmp
sahf
cmp
mov
int
in
scas
adc
imul
loop
pop
insb
into
sarb
jg
iret
enter
mov
stos
xor
dec
push
divl
negb
orb
iret
xchg
mov
fstpt
mov
fstpt
adc
mov
mov
stos
sub
call
mulb
mov
sbb
enter
adc
or
jge
push
add
mov
sbb
rclb
ret
mov
fs
addl
push
lock
fwait
dec
in
hlt
gs
sbb
mov
int
cmp
jbe
fsubr
outsl
sub
pop
lret
movsb
insb
and
mov
jnp
cmpsb
push
int
fimuls
out
mov
mov
stos
in
test
ret
movsb
pop
sbb
rcr
xchg
add
mov
subl
pop
std
lret
mov
adc
insl
aad
mov
or
cmp
lret
loopne
out
adc
push
xchg
arpl
pop
sbb
or
xchg
inc
push
push
mov
add
or
push
pop
sti
and
add
js
pop
rclb
outsb
cmp
xchg
xchg
sub
out
mov
sub
dec
push
je
or
inc
imul
std
fdiv
arpl
stos
lea
cmpsb
mov
cmp
in
and
cmpsl
ds
push
inc
stc
pusha
stos
mov
test
out
xchg
psrld
cld
cli
gs
pop
sub
jecxz
add
ds
jns
nop
sub
pop
into
icebp
arpl
lret
test
sbb
jne
cmpsl
push
add
pop
fstps
subb
andb
stos
test
sbb
clc
mov
pop
mov
outsl
stc
fs
call
add
lret
cmp
push
lcall
loope
pusha
fwait
xor
into
and
inc
ficoms
jo
or
push
mov
cltd
dec
in
or
popf
cmp
insb
repz
push
movsl
sub
sub
inc
mov
stos
mov
mov
sbb
add
jno
lret
push
sarb
inc
or
xchg
enter
xor
addr16
and
arpl
mov
push
mov
pop
sub
ss
pcmpeqw
pop
mov
push
dec
shrl
xchg
mov
mov
sub
loope
and
cmp
mov
testl
cmp
in
mov
aam
and
mov
jno
loop
lret
icebp
push
and
aad
push
cmp
jo
push
int
imul
cld
mov
mov
inc
outsb
in
lods
sahf
lds
push
dec
jns
sub
xor
orl
mov
gs
mov
loopne
jge
cwtl
cmp
pop
clc
insb
mov
ja
mov
fidivrs
fcomps
mov
mov
add
xlat
in
es
pop
and
push
or
dec
in
push
sbb
cmpsl
pop
add
mov
in
push
mov
es
inc
xor
push
sti
mov
inc
or
movsb
mov
xchg
xchg
int
stos
test
dec
or
scas
lods
cs
pop
adc
sub
imul
mov
adc
mov
push
push
mov
and
stc
pop
imul
mov
mov
repnz
sti
pop
jno
popf
cmp
mov
push
je
lods
xor
data16
inc
fwait
or
scas
dec
lret
cs
and
push
cli
test
push
pop
out
mov
xor
dec
jnp
adc
lahf
movsb
sub
push
jno
cwtl
adc
pop
int3
shrb
mov
sbb
decl
push
pop
jmp
mov
fcomps
mov
jne
call
sbbl
inc
mov
jbe
pop
and
jnp
jno
shrl
sbb
push
cli
enter
push
sbb
jo
dec
popa
out
pop
inc
pop
test
push
xor
mov
adc
mov
inc
shl
lds
outsb
xor
lods
daa
and
jne
sbb
and
push
jno
push
insl
divb
dec
sete
push
push
stc
jl
jmp
icebp
sbb
or
sahf
push
and
cmp
push
mov
xchg
popa
cltd
sahf
xor
mov
push
stc
inc
cmpsl
push
mov
imul
cmpsb
orb
dec
adc
push
enter
pop
dec
rdpmc
inc
or
push
jnp
jp
sbb
int3
jnp
iret
xchg
aas
imul
sbb
xchg
sahf
mov
cltd
inc
inc
jne
nop
mov
push
mov
inc
jp
aaa
into
xchg
cmpsl
sub
sbb
inc
nop
mov
pop
clc
xor
jns
cmp
sbb
aam
ret
pop
fs
push
add
push
jae
in
xchg
insl
in
imul
fwait
mov
int3
pop
dec
loop
out
in
sub
sarl
push
aad
out
lahf
add
test
hlt
add
lret
imul
daa
into
subb
out
sub
push
pop
sbb
xchg
cmp
mov
jp
jle
add
sbb
jo
rclb
sub
adcb
popf
ds
insb
in
mov
add
add
sub
icebp
and
dec
pop
adc
ret
or
sub
sar
pop
cmpb
loopne,pn
pop
cli
xchg
cld
and
xchg
inc
je
outsb
rcrl
es
leave
loope
sub
sub
gs
fidivrl
add
aam
sub
add
jp
jmp
xor
mov
mov
lcall
add
xchg
lcall
test
movsb
xor
mov
jecxz
not
lcall
mov
enter
xchg
push
aam
out
lret
stos
repz
jp
mov
lods
push
pop
stc
xchg
or
roll
shlb
inc
xchg
jb
loop
into
fdivrs
les
dec
insl
ljmp
cmpsl
xor
fidivrs
fsts
mov
movsb
lea
or
ds
push
push
xchg
inc
pop
mov
mov
popf
xchg
sub
xlat
xchg
cmp
lcall
sbb
repnz
cmpsb
loop
scas
icebp
mov
xor
sbb
arpl
lret
xchg
add
sbb
sub
cmp
icebp
cmp
js
in
lods
testb
dec
test
scas
pop
aam
xlat
xor
and
movb
movsl
xor
adcb
push
into
enter
sbb
loope
sbb
lcall
ret
aas
cltd
mov
test
pushl
lds
lods
or
mov
push
stc
pop
das
inc
mov
mov
jb
push
scas
jo
aam
cltd
cmp
testl
pop
sbb
cmc
test
sbb
in
jp
in
outsb
inc
cs
jg
scas
xor
mov
inc
and
xor
mov
adc
out
jb
cmp
xchg
cmp
sbb
xchg
adc
lds
insl
icebp
jns
popf
inc
aas
outsl
sbb
mov
xor
jne
push
iret
mov
into
aad
ljmp
dec
lcall
clc
lahf
jmp
enter
sbbb
inc
popa
test
popa
mov
aas
fwait
lahf
test
adc
sbb
push
push
xchg
inc
enter
add
pop
aam
jo
or
ret
xchg
sbb
xchg
rorl
dec
push
xor
gs
mov
mov
add
xor
lahf
lea
push
jmp
lods
push
lds
inc
or
scas
sub
pushf
push
jecxz
icebp
iret
xor
lret
fsubs
addl
sarb
mov
push
cli
xchg
xchg
dec
adc
enter
cmp
into
enter
outsb
sbb
stc
arpl
add
and
xor
les
inc
mov
fs
fidivrl
sbb
cld
call
adc
cmp
push
push
mov
jne
lret
mov
sbb
inc
jl
pop
jb
sub
or
or
in
xor
jo
cmp
xor
adc
stc
cs
imul
ss
cmpsb
ss
stc
xchg
mov
sti
push
mov
mov
add
add
xchg
inc
enter
out
push
adc
dec
hlt
and
stos
rcll
fcoml
repz
dec
add
pop
lahf
jno
mov
adc
dec
sti
add
mov
sti
sti
in
aad
lret
add
in
orps
pop
pop
add
cmp
pusha
in
sbb
dec
pop
orl
xchg
cmpsb
mov
push
jbe
fistpll
outsb
xchg
inc
sbb
mov
jecxz
pop
mov
jno
pop
cli
mov
xchg
lods
pop
mov
mov
jae
fsubr
es
aam
cmpsl
sub
call
mov
lods
pop
add
mov
push
adc
pop
add
sahf
cli
pop
mov
arpl
sbb
xchg
inc
push
inc
lcall
mov
mov
xor
arpl
leave
sub
in
adc
cmp
daa
js
jmp
cli
mov
loop
inc
xorl
dec
dec
pushl
rcrb
xor
ljmp
aad
dec
adc
add
add
xchg
rolb
xchg
push
lds
mov
inc
adc
cmp
int3
outsb
and
jbe
jo
loop
cmp
mov
ror
xor
sbb
jmp
cmp
mov
cs
mov
inc
outsl
inc
scas
sub
jbe
cmp
in
push
or
push
and
cmpsl
xor
push
pop
mov
faddl
or
sti
popa
cmpsl
pop
lret
mov
arpl
fs
pop
sbb
pop
mov
movsb
addb
ror
pop
mov
cmpsb
data16
mov
mov
push
clc
inc
fisubrl
ljmp
pop
mov
dec
xlat
out
outsl
sub
xchg
cmp
pushf
pop
sti
cmp
arpl
in
daa
loopne
xor
inc
cmp
addr16
mov
movsb
icebp
bound
mov
minps
push
mov
iret
data16
lods
inc
or
pop
xchg
cmp
mov
cmp
xchg
inc
das
mov
add
mov
aad
mov
mov
pop
clc
adc
imul
test
pop
fsubrs
sti
xchg
or
fsubrs
sub
adc
cmpl
xor
mov
out
mov
aas
mov
mov
sarb
fildl
lret
cltd
inc
pop
pop
sti
mov
mov
rol
xchg
mov
lret
iret
mov
or
aad
xor
jnp
enter
cmp
and
push
in
sbb
pop
cmp
pushf
mov
je
jo
insl
rorl
repz
push
pop
movsb
cs
mov
out
popf
inc
clc
testb
fucomp
xchg
cmp
scas
sarl
flds
xchg
aad
mov
mov
cli
data16
stc
and
imul
clc
add
sbb
enter
mov
ds
mov
lods
lods
and
or
jle
stos
cmpsb
cmpsl
xor
pop
mov
pop
cld
repz
cld
push
jmp
adc
insb
adc
and
cmp
mov
and
cmp
or
lea
imull
mov
jge
adc
orl
fs
inc
int
inc
or
sbb
out
sub
inc
sarl
inc
cmp
add
ret
mov
fdivrl
mov
jns
idivl
movsb
and
and
shll
add
sahf
inc
add
aam
push
psrlw
push
mov
clc
pop
add
xchg
sti
fs
lds
inc
lret
cmp
mov
xchg
jle
and
iret
sarb
es
cmp
dec
adc
push
adc
inc
bound
cltd
call
icebp
cmc
arpl
testl
gs
push
mov
movsb
jae
add
push
mov
xchg
scas
aaa
push
add
mov
sub
cmp
xchg
div
arpl
mov
popf
xor
out
pusha
mull
sbb
cmpsl
cmpsl
xor
sarb
sahf
inc
or
pop
sub
jbe
xchg
cmp
adc
jmp
cmp
repnz
pop
ret
adc
loop
in
or
and
xchg
ds
xchg
cmp
repz
pop
push
orl
pop
ljmp
lcall
mov
mov
sub
aaa
xor
fimull
jne
xchg
divl
or
insb
push
sbbl
fnstcw
and
inc
mov
and
lea
adc
rcll
outsb
add
xor
mov
push
push
xor
inc
sub
dec
adc
clc
adc
dec
adc
inc
orl
gs
jle
scas
xor
outsb
mov
jp
pusha
pop
add
fucomi
jbe
ljmp
sbb
pop
add
dec
pop
mov
arpl
adc
jbe
jecxz
pop
cmp
sbb
stc
pop
fadds
rolb
int3
mov
ret
mov
mov
lods
sub
xor
cmpsb
or
lahf
pop
mov
xor
movsl
jo
lock
insb
rcll
insb
call
lcall
sbb
pop
inc
fmull
push
arpl
subl
mov
inc
sub
lret
lds
shl
sbb
mov
lods
shlb
jbe
pop
inc
dec
ret
xchg
xchg
xor
mov
outsb
pop
scas
xor
jns
xchg
xchg
popf
cmp
fistps
mov
mov
daa
mov
sahf
mov
lret
jns
push
or
cwtl
cmp
jp
sub
pusha
mov
xlat
jnp
mov
jbe
add
jmp
mov
dec
inc
pop
std
mov
cs
push
mov
jmp
pop
lds
mov
xor
test
scas
shl
xchg
pop
adc
push
push
testl
pusha
out
outsl
cs
flds
push
test
adc
nop
filds
fadds
call
pushl
je
jne
fwait
mov
rclb
mov
pop
add
pop
insl
pushf
inc
mov
mov
jne
lret
das
push
int
push
cmp
test
cli
mov
fldl
pop
repz
movsl
das
or
shlb
mov
ja
cli
jmp
in
jle
je
mov
pusha
lock
test
cmp
stos
pop
push
push
shll
fwait
cmp
pop
clc
mov
pop
cld
adc
dec
adc
testb
sbb
cli
or
sub
mov
mov
cmp
push
imul
ja
fiaddl
imul
xor
popf
pop
not
sub
nop
or
test
sbb
enter
adc
jo
dec
xchg
das
test
xchg
into
xchg
mov
js
jle
mov
mov
lret
out
pusha
xchg
repnz
repz
je
movsb
call
js
mov
mov
mov
sbb
jo
ss
leave
sahf
rorb
cmp
sub
enter
push
mov
rcrl
xor
lods
into
pop
out
dec
sbb
aam
inc
or
push
fwait
inc
mov
mov
adc
cmp
lods
sti
lods
xor
jmp
sti
mov
mov
dec
jecxz
mov
movsb
sbb
insb
call
xchg
aaa
sti
pop
inc
iret
sbb
aam
ss
cmc
push
scas
adcl
adc
gs
inc
push
cli
xlat
jge
or
int3
fwait
sub
xor
outsl
hlt
ret
outsl
add
push
mov
int
sub
lods
push
fnstenv
mov
xchg
sbb
icebp
pop
xchg
inc
jnp
or
push
push
enter
int
lock
pop
sbb
les
jmp
inc
jbe
in
mov
mov
adc
mov
mov
adc
insb
fstpt
push
push
mov
iret
clc
jnp
adc
mov
sbb
mov
cmp
movsl
insb
push
cld
mov
int3
mov
lods
and
jle
out
adc
xchg
ret
sub
mov
std
pop
xchg
lods
or
push
int
pop
jae
iret
mov
fdivs
mov
mov
fisubrl
xchg
xchg
or
mov
data16
pop
lock
data16
jecxz
jnp
jo
sub
mov
addl
mov
xchg
cwtl
inc
arpl
sbb
inc
pop
add
jne
cwtl
pmulhw
rcrl
out
outsl
mov
mov
jle
pop
sub
jno
dec
adcl
cltd
cmp
test
lret
mov
clc
hlt
jl
call
and
nop
cmp
nop
and
mov
mov
dec
adc
or
push
mov
fnstsw
test
sub
push
push
cld
std
mov
insb
fucomp
lret
push
mov
popf
into
cld
pop
xchg
vmovdqa
into
jb
std
sub
lcall
jns
ljmp
aad
pusha
mov
repz
mov
mov
loope
cmp
arpl
fsubs
cltd
and
ficoms
test
mov
and
mov
ret
xchg
cwtl
scas
ret
xchg
cmp
xchg
inc
cmp
mov
repnz
loope
and
mov
rcll
xor
andb
inc
hlt
jle
mov
push
dec
cwtl
cmp
nop
pop
cld
or
sahf
cmp
vzeroall
jl
mov
cltd
popa
inc
adc
push
add
sbb
loope
pop
popf
aaa
movsb
je
or
lea
jns
jbe
inc
mov
mov
test
hlt
mov
xchg
lods
cli
xchg
mov
in
mov
xchg
dec
pop
gs
pop
mov
outsb
out
stos
ds
imul
mov
lret
test
mov
pop
push
xchg
add
add
lock
pop
popa
icebp
push
or
sbb
mov
stos
flds
xchg
inc
or
int
mov
adc
aaa
jp
popf
inc
pop
outsl
test
cmp
lock
into
jnp
pop
popa
test
mov
std
arpl
push
cmpb
fcmovbe
cli
fs
push
pop
jnp
in
lock
cmp
sub
xchg
loope
enter
xchg
and
sbb
xchg
cmp
jbe
rorb
xor
mov
movsl
sub
mov
cmp
js
mov
mov
fidivrl
ficoml
aam
in
je
daa
test
aad
cmp
cmpsb
data16
add
jo
in
xchg
inc
es
imul
fstps
in
loope
jnp
idiv
pop
push
push
lret
fs
fisttpl
sub
lods
inc
adc
loope
sti
push
into
je
mov
cmpsb
pop
sarb
shrb
ds
out
outsl
rolb
ret
cwtl
xchg
pop
sbb
std
pop
cmp
mov
push
rcr
loop
dec
push
lea
xchg
mov
push
add
cmp
in
outsb
out
aaa
mov
div
adc
lods
push
push
or
in
cmpsb
xor
adc
scas
int3
xor
std
iret
loope
or
pop
sarb
out
jle
adc
cmpsl
stos
pop
test
fsubr
mov
arpl
lret
test
fwait
xlat
and
loope
inc
into
gs
push
add
inc
xor
nop
inc
imul
or
aas
cwtl
das
jno
pop
mov
sti
shlb
cmp
xlat
push
aad
and
mov
or
orb
mov
mov
or
jle
das
xchg
or
loopne
jae
add
js
and
adc
xor
inc
pop
pop
add
dec
adc
add
aaa
out
in
jo
cmc
push
testl
push
cmp
jp
in
add
adc
loope
insl
arpl
das
daa
testl
sbb
fs
mov
add
int3
test
lods
and
xor
test
jmp
fidivs
rclb
add
decb
pushf
inc
jmp
push
or
pop
scas
adc
mov
movsl
push
inc
mov
test
or
mov
dec
loopne
ja
lds
mov
mov
push
inc
or
jge
hlt
repnz
push
orb
je
dec
mov
test
mov
test
ret
xor
in
insb
jmp
adc
mov
cmc
pop
sbb
xlat
out
test
mov
mov
pushf
aaa
xor
lret
sub
pop
cmpsl
fsubs
mov
es
out
lcall
mov
and
and
in
addr16
jne
mov
sub
lods
daa
cmp
sbb
mov
je
loop
xchg
sub
add
scas
xor
push
push
stc
adcl
mov
mov
rorl
push
cmc
pop
push
pop
inc
push
push
xchg
popa
inc
sub
lods
in
xchg
je
cmp
rorb
ret
mov
movsl
sbb
aam
xor
repnz
je
imul
or
mov
je
fnsave
cmpsl
mov
fldenv
cli
xchg
cli
into
gs
sbbl
jg
mov
mov
mov
sub
loop
inc
fnsave
sti
xchg
xor
push
sbb
sbb
mov
in
sub
mov
or
fdivl
mov
cli
xchg
addr16
scas
inc
mov
scas
mov
int
fwait
jmp
int
push
jmp
out
or
mov
daa
mov
add
es
inc
pop
in
cli
push
jp
arpl
ljmp
and
mov
daa
mov
lds
testb
sti
dec
pop
scas
pop
push
sbb
mov
ljmp
jno
arpl
je
pop
nop
daa
push
mov
xchg
call
or
mov
negl
iret
mov
jmp
dec
lods
push
in
fisubrs
mov
xor
xchg
sub
mov
xlat
bound
clc
into
sub
in
cmpl
cmp
sahf
or
lock
loope
inc
fnsave
cld
xchg
xor
fs
lds
mov
out
sbb
test
iret
fnstcw
mov
in
sub
je
jle
fdivl
mov
cli
xchg
gs
and
inc
into
gs
ss
lcall
pop
in
or
mov
sub
add
scas
inc
push
in
sti
adc
sbbb
lret
ljmp
push
or
push
jno
mov
popa
ret
inc
fdiv
cmp
mov
fs
inc
aad
scas
push
push
ss
mov
push
jmp
push
mov
or
popa
fnsave
xchg
sub
sti
xchg
out
scas
inc
mov
int
negb
iret
mov
in
orl
in
fsubrl
mov
das
mov
xchg
sub
mov
gs
xchg
test
sub
cmpl
cmp
pushf
or
mov
sub
loopne
inc
fnsave
std
xchg
xor
sbb
push
cmpsl
cmp
fdivs
mov
out
sub
jne
jge
fdivl
lahf
xchg
sub
xor
xchg
arpl
mov
and
sbb
ja
ss
cltd
in
test
sub
in
or
scas
ds
outsl
iret
nop
daa
add
scas
inc
push
jecxz
cld
adc
int3
arpl
leave
ljmp
sbb
mov
or
fnsave
inc
fdiv
cmp
sti
inc
aam
mov
data16
es
into
push
mov
push
in
test
lret
cld
pop
fnsave
xchg
sub
sti
xchg
in
mov
mov
ret
into
gs
push
cmp
mov
in
test
push
in
fisubrl
mov
sub
dec
xchg
sub
mov
data16
xchg
hlt
into
gs
sbb
inc
in
cmpl
cmp
lcall
mov
sub
fistpll
inc
xchg
xor
sbb
test
sbbb
cmpsb
cmp
xlat
xor
pop
out
sub
jbe
jl
fdivl
sahf
xchg
sub
das
cli
xchg
popa
icebp
mov
and
shlb
aad
int
cwtl
out
test
daa
push
jmp
jmp
mov
lods
cmp
nop
daa
decl
scas
inc
push
loope
std
adc
cmpsb
xor
stc
xchg
mov
or
mov
pop
mov
cld
xchg
mov
gs
inc
rcrb
mov
sbbl
and
iret
push
mov
cmp
jbe
in
cmpsl
or
push
cmp
je
cli
pop
fidivs
sbb
xchg
loop
mov
mov
ror
repz
cmp
xchg
test
push
out
fsubs
mov
sub
xchg
sub
dec
loopne
lahf
mov
rcrl
decb
mov
sbb
inc
in
test
movsb
cmp
cwtl
or
mov
sub
sbb
inc
fisubrs
xchg
xor
sbb
and
sbb
movsb
cmp
aad
mov
out
daa
mov
or
or
cs
xchg
pusha
out
mov
and
shlb
aam
into
add
es
in
push
jmp
jae
stos
cmp
shrl
decb
mov
push
fbld
adc
movsl
xor
clc
test
mov
or
popf
sub
jne
mov
cld
xchg
scas
adc
inc
rcrb
mov
arpl
push
mov
cmp
je
in
movsl
or
pop
cmp
je
clc
pop
fbstp
sbb
xchg
loope
mov
sahf
add
xor
cmp
test
out
test
out
xlat
gs
xchg
clc
jbe
sub
xchg
sub
dec
loopne
sahf
mov
rcrb
icebp
shlb
scas
test
inc
out
test
movsb
cmp
or
enter
xchg
sub
sbb
dec
fildll
xchg
mov
mov
loopne
sbb
mov
mov
out
and
inc
jbe
js
fidivs
lcall
pop
in
mov
pop
sbbl
addr16
cmp
add
out
test
and
or
sbb
or
lret
xchg
sub
mov
mov
frstor
push
jb
data16
das
test
popa
testl
rclb
sub
pushf
sub
jne
mov
cld
xchg
lods
packuswb
inc
into
sbb
xchg
and
rclb
mov
out
mov
les
negb
ja
pop
xchg
sub
xchg
fildll
dec
pushf
add
addr16
push
cmp
adcl
xchg
pop
lock
or
push
sub
xchg
sub
or
cmp
decl
lods
xchg
je
movsl
cmp
xchg
or
pop
test
sub
sbb
dec
loopne
cli
call
mov
fiadds
rcl
xor
lock
ja
jbe
fbstp
cwtl
xchg
sub
sub
xchg
pop
jmp
dec
sbb
shrl
sarl
rolb
xchg
out
xchg
and
push
in
movsb
push
jbe
or
aaa
sub
push
mov
mov
or
shlb
sub
out
test
andb
inc
rol
pop
add
fbstp
mov
std
xchg
stos
or
sbb
xchg
push
cmp
dec
mov
cmp
jo
out
mov
ret
hlt
pop
loope
mov
call
lcall
push
orl
pop
lock
movsl
xchg
hlt
ja
es
ret
out
xchg
sub
pop
dec
loop
lcall
mov
shrl
lods
xchg
filds
xchg
cmpsb
cmp
les
pop
test
sub
push
cmpsl
loop
fnstenv
dec
loopne
cli
add
mov
faddl
rcl
das
mov
icebp
and
js
jne
fbstp
xchg
xchg
sub
pop
ljmp
scas
cmp
cmp
add
push
out
push
in
movsl
adc
ss
addr16
xchg
sub
mov
mov
fisubrl
or
addr16
sbb
repz
cmp
rol
pop
add
sub
cwtl
and
dec
loopne
js
xchg
stos
or
cmp
sbb
cld
pop
xchg
dec
mov
cmp
outsl
pop
lock
shll
push
loope
mov
sub
dec
cltd
cld
sbb
imul
push
icebp
mov
pop
lock
cmpsb
xchg
bnd
and
sub
sub
push
dec
jecxz
cwtl
mov
lret
add
lods
mov
fidivrs
out
xchg
cmpsb
cmp
ret
push
les
in
ret
loop
fdivs
dec
loopne
stc
add
mov
fildl
ror
mov
icebp
and
js
je
fbstp
xchg
xchg
sub
pop
jmp
sbb
outsb
into
cmp
decl
pop
out
push
loop
movsl
adc
or
gs
xchg
sub
xchg
mov
mov
dec
fsubrs
or
push
pop
shr
bnd
cmp
rol
pop
add
ret
xchg
and
ja
mov
xchg
test
imul
cli
pop
xchg
sbb
rorb
cmp
insl
pop
lock
add
pop
xor
push
loop
mov
xchg
sub
fisubl
dec
xchg
sti
push
mov
mov
cmp
jle
icebp
mov
lahf
pop
icebp
rcrb
cmpsb
nop
icebp
js
and
xchg
sub
xor
push
push
mov
shrb
stos
mov
fdivrl
cmpsb
cmp
ret
pop
and
ret
adc
loop
xor
add
mov
fiaddl
ror
sub
pop
icebp
pop
add
psrld
ja
xchg
xchg
sub
pop
out
dec
sbb
mov
cmp
imul
xchg
loopne
movsl
adc
push
movsb
xor
arpl
xchg
sub
test
mov
mov
dec
push
imul
jnp
cmp
into
ret
gs
ja
mov
loop
je
xchg
cmpsb
or
cmp
sbb
clc
pop
mov
mov
cmp
dec
scas
cmpsb
cmp
pushf
add
pop
xor
ja
out
push
jecxz
xchg
xchg
sub
fldenv
dec
xchg
cli
pop
mov
mov
imul
or
mov
pop
repnz
pop
xsha1
cmpsb
mov
jns
and
xchg
jne,pn
dec
jecxz
xchg
mov
enter
xchg
shrl
test
pop
fidivrl
mov
cmpsb
cmp
rorl
and
les
mov
dec
loop
cmc
add
mov
fiaddl
ror
sub
pop
icebp
sbb
js,pt
jo
loope
push
xchg
xchg
sub
pop
in
dec
pop
jnp
mov
cmp
imul
lock
fimuls
movsl
js
movsb
xor
popa
lds
loope
sbb
incl
xchg
icebp
jns
cmp
int3
ret
fs
mov
jecxz
jb
xchg
movsb
or
cmp
sbb
and
scas
cmpsl
loopne,pt
pop
icebp
lcall
paddsw
xchg
xchg
cs
cmpsl
add
xchg
stc
and
out
ds
or
mov
popf
pop
repz
pop
adc
and
cwtl
das
je
dec
in
xchg
mov
push
imul
call
mov
fdivrs
repnz
cmpsl
sub
lds
lds
mov
dec
jecxz
repz
mov
aam
sub
cmp
sbb
jns
outsb
shl
jns
nop
xchg
cs
xchg
push
jecxz
dec
adc
shrl
lret
cmp
cld
mov
mov
fmull
cmpsb
or
cs
cs
orb
push
mov
dec
shrb
add
aam
pushf
and
repnz
js
cmp
adc
test
lret
ret
pop
std
bound
xchg
push
loop
push
mov
in
jno
xchg
mov
ret
push
mov
pop
mov
mov
test
fisubs
repnz
inc
pop
xor
in
test
add
xchg
mull
mov
mov
imul
ds
pop
repz
fwait
pop
repz
pop
adc
pop
lods
das
fiadds
das
jb
dec
in
xchg
mov
push
imul
out
imul
mov
xlat
cmp
mov
sub
lds
lds
lahf
jecxz
shll
dec
jecxz
repnz
mov
pop
mov
fmuls
aam
sub
repnz
pop
mov
jns
insl
shl
jns
xchg
shll
dec
adc
push
mov
xor
cmp
sti
mov
mov
fisttpl
cmpsb
or
jns
mov
ret
hlt
jg
loop
adc
imul
fwait
and
push
push
mov
movsl
cmp
movups
cld
popa
das
xchg
sbb
dec
in
jo
xchg
mov
ret
repz
mov
mov
aas
frstor
repnz
inc
pop
xor
in
orl
movsb
add
xchg
mulb
mov
mov
imul
ds
push
repz
lcall
mov
jp
push
lods
das
fnstsw
cwtl
das
jno
dec
in
xchg
mov
lds
add
movsb
mov
cmp
mov
cmpsl
sub
lds
lds
sahf
jecxz
shlb
dec
jecxz
icebp
add
mov
pop
mov
xlat
mov
or
cmpsb
cmp
sbb
pop
mov
jns
insb
shl
jns
mov
xchg
push
loope
dec
adc
mov
xor
push
leave
cmp
cli
xchg
mov
fimull
cmpsb
or
adc
rcll
scas
adc
dec
inc
shrb
add
imul
repnz
jbe
cmp
push
adc
sti
pusha
das
xchg
sbb
jns
mov
in
outsl
add
rcrl
repnz
mov
mov
cmp
aas
fsubl
repnz
std
pop
das
mov
in
orb
das
cmp
pop
mov
nop
cmc
and
in
ds
add
pop
repz
test
jmp
adc
ds
das
jo
dec
in
xchg
mov
les
add
mov
repnz
cmpsl
sub
pop
jnp
lds
popf
jecxz
iret
xor
lock
mov
pop
mov
mov
or
cmpsb
cmp
sbb
pop
scas
cmp
imul
jns
lea
xchg
push
loopne
dec
adc
mov
xor
push
enter
xchg
mov
cmpsb
or
adc
rclb
scas
adc
add
addr16
cltd
and
mov
jne
cmp
or
ret
pop
cli
pop
das
nop
sbb
jns
mov
in
outsb
add
xor
push
mov
mov
cmp
aas
xchg
cld
pop
cs
adc
dec
in
orl
add
hlt
and
jecxz
ds
add
mov
cwtl
pop
repz
push
adc
sbb
das
fstpt
dec
in
xchg
mov
ret
dec
imul
in
imul
mov
aam
repnz
cmpsl
ds
mov
cmpsl
mov
lds
pushf
jecxz
into
das
dec
jecxz
out
add
mov
pop
mov
aad
pop
pop
xchg
cmp
cmp
pop
jl
pop
scas
cmp
push
loop
add
xchg
push
fbstp
mov
xor
push
cmp
clc
test
mov
fmuls
cmpsb
or
sahf
sub
cs
jl
loop
adc
add
data16
cwtl
and
mov
je
cmp
or
test
mov
sbb
jns
mov
in
insl
add
xor
push
mov
push
mov
xchg
cmp
aas
fisubl
repnz
sti
pop
sub
dec
in
orb
das
cmp
mov
mov
and
loop
ds
add
mov
push
adc
sbb
cwtl
das
outsb
sti
dec
in
nop
mov
ret
add
aam
adc
repnz
cmpsl
ds
cmpsl
mov
fsubrl
lds
cs
jecxz
out
add
mov
pop
mov
aam
pop
push
xchg
cmp
cmp
push
jnp
pop
lods
aaa
jns
imul
xchg
cs
fidivs
mov
xor
push
cmp
testl
cmpsb
or
adc
mov
dec
loop
adc
add
fs
xchg
and
mov
jae
cmp
cmp
les
pop
das
lea
jecxz
dec
scas
dec
in
insb
add
xor
mov
test
ds
cmpsb
test
fsubs
repz
stc
pop
sub
in
jle
cltd
xor
lahf
add
icebp
and
loope
ds
add
mov
adc
sbb
cwtl
das
insb
cli
dec
in
mov
add
aam
adc
repnz
test
and
inc
pop
js
lds
lcall
pop
in
add
mov
and
add
ds
and
pop
repz
ss
push
mov
cwtl
push
fdivl
mov
das
aam
popa
les
mov
adc
fwait
daa
lds
cwtl
das
out
jns
jecxz
movzwl
lret
push
std
aad
xchg
push
mov
push
mov
mov
jno
mov
lds
xor
mov
in
dec
lods
dec
in
push
cltd
fwait
insb
add
mov
mov
orl
inc
movsb
test
popa
pop
hlt
xchg
test
adc
dec
in
jl
lcall
pop
mov
mov
scas
insl
loopne
ds
add
mov
xchg
pop
repz
test
jp
pop
cmpsl
xor
fdivrs
cwtl
das
push
dec
out
mov
add
imul
mov
shll
repnz
inc
and
adc
ja
lds
cltd
in
lret
sub
in
add
scas
and
add
cmpsb
cmp
adc
les
xor
loop
cld
mov
cwtl
dec
mov
cs
pusha
ret
repz
repz
aam
test
addr16
cltd
es
push
mov
dec
in
or
imul
pusha
aad
xchg
sbb
repz
jo
aas
mov
ret
pop
cmc
pop
xor
mov
in
dec
stos
dec
in
imul
add
mov
mov
orl
test
aam
pop
cmc
xchg
cmc
pop
daa
mov
adc
dec
in
jp
fwait
xor
fwait
add
mov
and
fistpll
ds
add
lea
xchg
pop
repz
stos
test
jp
adc
ss
das
push
mov
add
setle
stos
inc
and
pop
jbe
lds
cwtl
out
lret
jecxz
jmp
fwait
sbb
push
lods
cmp
mov
add
movsb
xchg
jg
ljmp
jnp
jo
divl
cmp
sbb
jecxz
sbb
adc
ja
in
std
sbb
les
sahf
lret
mov
inc
iret
mov
or
lret
lods
add
enter
inc
sti
aaa
call
cmp
or
shll
xchg
add
mov
les
insb
in
iret
cmp
jp
shrb
out
jbe
int3
sbb
push
jmp
mov
rorl
aam
xchg
shl
outsb
jp
inc
andb
xchg
sarl
rcr
or
adc
out
inc
sub
mov
and
xlat
notl
rclb
cmp
push
ret
flds
fcmovb
test
mov
insb
lock
mov
ret
jnp
cltd
push
aas
xor
sub
inc
cmpsl
jbe
lock
ss
pop
mov
cld
lret
or
cmpsl
mov
sub
sub
lahf
pop
jmp
pop
and
jmp
repz
mov
mov
out
lret
mov
mov
push
sbb
enter
add
pushf
add
ljmp
cmpsb
repnz
inc
scas
mov
adc
mov
jg
lret
fwait
xchg
cmpsb
inc
popa
mov
out
xchg
add
repz
jae
pop
arpl
adc
jp
aad
vaddsd
test
mov
xor
push
mov
loope
xchg
mov
pop
enter
xchg
xor
cmpsl
sub
push
and
dec
xlat
or
and
jp,pt
jle
mov
add
rcr
leave
sbb
pop
jle
sub
imul
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
fsts
and
test
inc
je
and
xor
mov
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
fldt
sbb
call
and
loop
xor
aas
push
mov
mov
adc
stc
adc
repz
push
imul
and
xchg
jge
pop
jnp
sbbb
lret
decl
test
and
xor
gs
jp
ja
out
add
cmc
in
cli
and
xchg
addb
xchg
mov
outsb
insl
test
insl
es
test
cli
cmpsb
dec
sub
cmp
mov
or
jb
loope
xchg
lahf
sbb
push
push
push
sbb
addr16
jo
rolb
xor
adc
push
lea
mov
int3
std
mov
divb
push
test
jns
fdivl
push
adc
dec
pop
cmc
pop
std
outsl
icebp
mov
sarb
mov
inc
inc
cmp
pop
movsb
lods
sub
pushf
cli
mov
cs
cmp
ljmp
pop
add
lret
push
cmp
loope
mov
cmpsb
mov
mov
push
push
ret
jge
dec
xor
sbb
rcrb
cmp
cmpsl
adc
or
pop
pop
insl
pop
mov
mov
ret
mov
dec
xor
push
rorb
cmp
dec
insl
clc
sbb
jae
jbe
outsl
mov
jns
sahf
je
daa
fld
loope
pop
dec
mov
and
dec
lcall
and
rcll
pop
ja
and
sub
cltd
out
pusha
fmull
fstl
insb
insb
pop
dec
rcrl
out
lret
rcll
movsl
into
mov
sarl
xor
or
sbb
scas
xchg
push
lret
add
push
arpl
jb
inc
jnp
mov
mov
cld
sahf
leave
cmpsb
pop
dec
pop
cltd
test
or
and
inc
and
push
add
das
or
mov
sub
cmc
mov
mov
xor
or
scas
movsb
sbb
