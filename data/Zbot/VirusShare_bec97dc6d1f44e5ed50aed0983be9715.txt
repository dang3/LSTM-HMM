jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
push
call
ret
nop
push
mov
push
mov
and
push
mov
push
call
cmp
sbb
neg
and
pop
ret
push
push
mov
and
push
mov
push
call
ret
nop
test
je
call
or
je
ret
mov
jmp
ret
nop
test
je
call
or
jne
ret
mov
jmp
ret
nop
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
cmp
jge
jcxz
cmp
je
push
push
mov
mov
ja
lea
lea
std
rep
jmp
cmp
je
push
push
mov
mov
mov
ja
and
lea
lea
std
rep
sar
mov
mov
sub
sub
rep
cld
dec
sar
js
rep
and
mov
rep
pop
pop
ret
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
push
push
push
push
mov
mov
test
je
mov
mov
test
jle
dec
mov
mov
test
je
mov
call
test
jg
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmp
sete
cmp
jle
mov
inc
mov
test
je
call
test
je
mov
cmp
je
mov
mov
mov
call
jmp
cmp
jg
pop
pop
pop
pop
ret
mov
test
je
mov
xor
mov
xchg
call
ret
lea
movl
movl
mov
xor
mov
mov
mov
mov
movb
call
ret
nop
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
decl
jne
push
lea
call
pop
ret
mov
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
test
je
mov
ret
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
decl
jne
lea
call
mov
pop
mov
ret
jmp
ret
mov
ret
lea
mov
jmp
ret
mov
sub
jb
sub
je
call
ret
lea
mov
xor
movl
inc
cmp
jne
mov
mov
ret
nop
mov
jmp
ret
mov
mov
mov
ret
mov
push
push
mov
mov
test
je
mov
call
mov
test
jne
pop
pop
ret
lea
call
ret
mov
push
mov
xor
push
push
pushl
mov
incl
jne
cmpl
je
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
subl
jae
call
mov
movl
call
call
mov
ret
lea
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
call
add
push
jge
data16
add
aas
sbb
push
push
add
add
decl
add
add
insb
imul
adc
or
add
decl
add
pusha
outsl
jnp
adc
inc
inc
pop
push
sbb
add
decl
add
add
jnp
add
sbb
cmp
add
call
add
add
jnp
add
sbb
sbb
cmp
add
add
call
add
add
pop
pop
add
adc
or
add
add
call
add
add
jnp
push
sbb
push
and
pop
sbb
push
sldt
add
decl
add
add
insl
sbb
sbb
add
add
call
add
add
jge
pop
add
adc
or
add
add
call
add
add
push
pop
push
add
cmp
add
add
decl
add
pop
outsl
jp
sbb
and
pop
adc
add
add
call
add
add
jl
es
sbb
pop
add
xor
adc
or
add
push
push
push
push
add
mov
inc
dec
nop
nop
pusha
popa
movb
nop
pusha
popa
nop
pusha
popa
movb
nop
inc
dec
movzbl
sub
xor
xor
nop
inc
dec
dec
pusha
popa
nop
mov
call
test
jle
mov
mov
inc
dec
pusha
popa
inc
dec
pusha
popa
lea
mov
sar
jns
adc
sub
jl
inc
xchg
nop
dec
jne
inc
dec
inc
dec
pusha
popa
inc
dec
pusha
popa
nop
mov
mov
xor
xor
mov
and
pusha
popa
pusha
popa
xor
xor
xor
xor
xor
inc
dec
nop
nop
pusha
popa
mov
call
xor
mov
add
xor
mov
nop
pusha
popa
mov
mov
xor
xor
mov
and
inc
dec
nop
pusha
popa
mov
call
mov
mov
inc
dec
inc
dec
nop
xor
mov
cmp
jne
mov
nop
nop
nop
pusha
popa
xor
mov
cmp
je
inc
inc
decl
jne
nop
inc
dec
inc
dec
nop
pop
pop
pop
pop
pop
pop
ret
push
inc
dec
nop
shr
mov
pusha
popa
nop
inc
dec
nop
mov
pop
ret
push
mov
inc
dec
pusha
popa
inc
dec
movzwl
lea
add
mov
pusha
popa
nop
mov
pop
ret
nop
pusha
popa
inc
dec
inc
dec
pusha
popa
push
mov
push
call
test
je
push
push
push
xor
mov
add
add
push
mov
push
call
test
jne
xor
jmp
mov
inc
dec
nop
ret
nop
push
push
push
push
mov
nop
nop
inc
dec
nop
pusha
popa
nop
mov
mov
call
nop
nop
pusha
popa
movl
inc
dec
nop
inc
dec
nop
movb
inc
dec
pusha
popa
nop
inc
dec
pusha
popa
pusha
popa
push
push
push
push
xor
mov
push
push
push
push
call
push
push
call
inc
dec
inc
dec
nop
pusha
popa
nop
inc
dec
pusha
popa
inc
dec
inc
dec
nop
movl
pusha
popa
nop
pusha
popa
nop
inc
dec
pusha
popa
inc
dec
nop
call
test
je
pusha
popa
inc
dec
pusha
popa
mov
push
mov
push
call
nop
pusha
popa
pusha
popa
mov
mov
add
mov
inc
dec
pusha
popa
pusha
popa
mov
nop
pusha
popa
pusha
popa
nop
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
nop
pusha
popa
nop
nop
push
mov
mov
push
push
mov
push
mov
push
call
nop
nop
inc
dec
pusha
popa
pusha
popa
nop
pusha
popa
mov
call
mov
pusha
popa
pusha
popa
pusha
popa
pusha
popa
mov
movzwl
dec
test
jl
inc
xor
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
call
test
je
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
call
inc
dec
jne
inc
dec
pusha
popa
nop
nop
push
push
push
xor
mov
add
add
push
mov
push
call
test
je
pusha
popa
inc
dec
mov
mov
add
mov
nop
pusha
popa
inc
dec
inc
dec
inc
dec
pusha
popa
push
mov
push
call
cmp
sbb
inc
mov
inc
dec
nop
nop
pusha
popa
pusha
popa
inc
dec
pusha
popa
nop
pusha
popa
inc
dec
inc
dec
pusha
popa
nop
cmpb
jne
push
mov
push
call
jmp
mov
push
call
nop
pusha
popa
inc
dec
pusha
popa
pusha
popa
pop
pop
pop
pop
ret
lea
push
mov
xor
push
push
pushl
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
sbb
inc
add
push
inc
add
adc
inc
add
add
inc
add
inc
add
add
add
add
in
add
push
push
push
mov
call
xor
push
push
pushl
mov
nop
nop
pusha
popa
push
call
mov
inc
dec
inc
dec
push
push
call
inc
dec
pusha
popa
push
push
call
mov
inc
dec
pusha
popa
inc
dec
push
push
call
nop
nop
push
push
call
nop
inc
dec
nop
nop
push
call
add
inc
dec
inc
dec
mov
inc
dec
inc
dec
nop
pusha
popa
movb
nop
nop
mov
add
nop
nop
nop
addb
inc
dec
pusha
popa
inc
dec
inc
dec
xor
inc
dec
pusha
popa
mov
inc
dec
inc
dec
nop
inc
dec
xor
nop
inc
dec
inc
dec
inc
dec
nop
mov
sub
mov
nop
nop
nop
nop
movb
inc
dec
nop
pusha
popa
mov
call
nop
inc
dec
mov
call
inc
dec
nop
pusha
popa
mov
call
nop
inc
dec
pusha
popa
mov
call
pusha
popa
inc
dec
inc
dec
inc
dec
mov
call
pusha
popa
inc
dec
mov
call
nop
pusha
popa
pusha
popa
mov
call
nop
nop
mov
call
pusha
popa
inc
dec
mov
call
pusha
popa
nop
pusha
popa
mov
call
inc
dec
nop
pusha
popa
mov
call
nop
pusha
popa
nop
mov
call
pusha
popa
nop
mov
call
push
call
mov
inc
dec
pusha
popa
pusha
popa
nop
mov
call
push
call
mov
nop
nop
pusha
popa
nop
mov
call
push
push
call
mov
pusha
popa
nop
mov
call
push
push
call
mov
inc
dec
nop
inc
dec
nop
mov
call
push
push
call
mov
inc
dec
inc
dec
pusha
popa
inc
dec
mov
call
push
push
call
mov
inc
dec
inc
dec
inc
dec
mov
call
push
push
call
mov
nop
nop
inc
dec
inc
dec
mov
call
push
push
call
mov
inc
dec
pusha
popa
inc
dec
mov
call
push
push
call
mov
pusha
popa
nop
mov
call
push
push
call
mov
nop
pusha
popa
mov
call
push
push
call
mov
pusha
popa
nop
mov
call
push
push
call
mov
nop
inc
dec
pusha
popa
pusha
popa
xor
xor
mov
shr
xor
mov
nop
nop
mov
xor
xor
xor
xor
xor
xor
xor
mov
and
inc
dec
nop
movb
nop
nop
nop
pusha
popa
mov
mov
inc
dec
inc
dec
nop
pusha
popa
mov
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
mov
inc
dec
nop
inc
dec
cmp
je
inc
dec
inc
dec
pusha
popa
inc
dec
inc
inc
dec
pusha
popa
pusha
popa
jmp
cmp
jne
mov
nop
nop
pusha
popa
inc
dec
jne
nop
nop
pusha
popa
call
nop
inc
dec
nop
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
pop
pop
call
mov
add
add
add
add
push
adc
inc
add
add
adc
add
adc
add
add
add
inc
add
inc
add
lret
int3
enter
enter
fmul
loopne
jecxz
in
lea
clc
adc
add
lea
add
inc
add
enter
int3
iret
into
push
psllq
dec
hlt
div
stc
clc
sti
cli
mov
loopne
loop
in
out
call
out
out
adc
adc
sbb
sbb
enter
or
mov
shrb
pop
pop
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
inc
dec
dec
dec
push
pop
inc
dec
or
inc
or
inc
jno
sbb
jne
cmp
cmp
push
push
push
js
pop
inc
inc
inc
inc
inc
loopne
mov
lods
mov
movsb
into
shl
ret
lods
mov
and
inc
lea
sbb
cs
jge
cs
cmc
icebp
js
dec
es
lahf
sahf
addl
mov
mov
mov
mov
mov
mov
mov
scas
cmpsb
scas
test
lods
jmp
rcl
rcl
aad
nop
lret
fcmovu
fmul
ffreep
rol
leave
enter
enter
icebp
repz
lock
stc
clc
sti
cli
std
cld
jmp
loopne
loop
in
out
ljmp
adc
add
sbb
or
add
add
or
or
xor
xor
cmp
cmp
and
and
sub
sub
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jno
jae
jne
ja
jns
jnp
jge
jg
popa
pusha
arpl
fs
push
outsl
outsb
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
fwait
lcall
addl
lock
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
int3
sbb
aad
iret
xchg
fcmovne
fistps
mov
int
iret
into
icebp
lock
cmc
mov
xchg
cwtl
mov
loope
jecxz
in
out
jmp
in
out
out
adc
adc
sbb
pop
sbb
add
add
or
or
xor
xor
cmp
cmp
and
and
sub
sub
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jno
jae
jne
ja
jns
jnp
jge
jg
popa
pusha
arpl
imul
insb
outsl
outsb
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
fwait
lcall
addl
mov
mov
mov
mov
mov
mov
mov
test
lods
scas
scas
rcl
rcl
aad
xlat
fcmovnu
fstp
rol
ret
mov
int
iret
into
icebp
lock
hlt
div
stc
clc
sti
cli
std
cld
loope
jecxz
in
out
jmp
in
out
out
adc
adc
sbb
sbb
add
add
or
or
xor
xor
cmp
cmp
and
and
sub
sub
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jno
jae
jne
ja
jns
jnp
jge
jg
popa
pusha
arpl
imul
insb
outsl
outsb
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
fwait
lcall
addl
mov
mov
mov
mov
mov
mov
mov
test
lods
scas
scas
rcl
rcl
aad
xlat
fcmovnu
fstp
rol
ret
mov
add
inc
inc
aaa
cmp
jle
xor
xor
sub
sbb
jl
sub
addr16
cmp
xor
fsts
xlat
xchg
rcll
mov
mov
mov
enter
xor
ret
mov
mov
mov
mov
push
in
je
out
fadd
mov
push
loope
loope
xchg
adc
xchg
fstpl
popf
bound
iret
test
je
xchg
or
mov
movsb
cli
mov
cmp
call
imul
sbb
push
push
pop
push
jg
pop
inc
pushf
adc
mov
js
orl
xor
mov
dec
add
mov
mov
fidivs
mov
sub
adc
push
mov
sub
sub
negb
pop
sbb
sbb
add
icebp
add
xor
push
dec
mov
jns
jle,pt
jno
add
sub
cmp
push
xor
addr16
sub
call
arpl
fst
and
into
or
mov
mov
mov
test
mov
loope
cltd
loop
test
out
bound
adc
xchg
lcall
adc
stos
push
cmp
mov
icebp
mov
cli
mov
dec
cli
lock
loopne
jne
sti
mov
stos
mov
popa
in
mov
movsl
inc
adc
icebp
push
fisttps
pop
and
lret
movsb
or
mov
cld
mov
mov
ja
je
dec
add
xor
pop
jne
jae
arpl
push
daa
loop
outsb
lods
jae
sbb
mov
push
push
adc
push
pop
lea
jne
jge
out
aaa
out
adc
jbe
dec
dec
das
xor
jnp
into
dec
and
ds
bnd
test
pop
loop
call
sub
aam
mov
aam
out
jecxz
sarl
iret
cmp
cmp
mov
cmc
pushl
mov
jmp
pop
lods
rcrb
out
icebp
adc
gs
sbb
popa
xchg
movsb
in
fsubs
int3
mov
lret
orl
jl
mov
mov
lcall
push
mov
stos
in
xchg
scas
pusha
pop
imul
inc
cs
inc
push
xchg
sub
outsb
jns
push
dec
into
pop
jo
jns
push
cmp
mov
hlt
popl
push
xchg
andb
inc
mov
adc
imul
imul
scas
xchg
adc
add
fistps
sbb
addr16
in
jne
jp
cmp
leave
inc
add
add
ds
inc
lret
xchg
int
inc
inc
xor
pop
gs
js
pop
sub
push
mov
adc
data16
popf
aad
jmp
out
iret
xchg
out
fsubp
jecxz
out
iret
cmc
iret
testl
iret
add
xor
or
idiv
mov
fcmovnb
or
mov
out
mov
out
xchg
mov
lods
test
mov
rorb
mov
fsts
mov
pushf
jo
mov
test
pop
scas
cmp
lds
xchg
test
sub
xchg
and
stos
test
lcallw
dec
pop
adc
nop
bound
xchg
jge
xor
inc
push
cmp
inc
dec
jns
jg
add
xor
pop
mov
pusha
das
sub
pop
xor
jno
arpl
dec
adc
ficomps
add
loop
adc
pop
ja
adc
add
or
adc
or
inc
leave
or
mov
push
or
ret
aaa
dec
stos
cmpsl
add
sub
sbb
aaa
mov
rcr
hlt
mov
popf
lret
shlb
add
cmp
fiaddl
xchg
inc
lock
in
or
iret
cmc
mov
inc
mov
cmp
xchg
jecxz
jmp
ljmp
jmp
pop
mov
fistl
jns
lds
adc
ja
mov
mov
jb,pt
cmp
enter
push
shll
and
fsub
pop
push
mov
sub
fisubs
push
adc
pop
loop
xor
inc
mov
cmp
adc
mov
ss
xor
dec
or
mov
xor
popa
out
pop
xchg
adc
sbb
and
jge
jecxz
pop
sbb
daa
push
push
out
loopne
push
push
pop
mov
dec
jnp
add
jo
mov
fistpll
mov
xor
ret
insb
gs
sbb
arpl
push
ds
pop
mov
cs
mov
lea
shll
cmp
sti
dec
ret
cmp
out
or
push
shll
mov
fistl
sbb
addr16
cwtl
xchg
movsb
push
sbb
mov
sbb
subl
xlat
shrb
fs
xchg
addb
int
mov
hlt
ja
mov
out
pop
mov
mov
dec
sti
or
dec
scas
jmp
push
or
mov
jbe
insb
push
push
fidivs
sahf
push
adc
pusha
das
sub
pop
inc
iret
xor
push
mov
mov
inc
inc
cmp
mov
jno
mov
mov
sub
sub
jne
push
push
xor
pop
fldl
sbb
xlat
push
sbb
in
add
cmp
jmp
push
or
test
cmp
cmp
mov
es
jle
cmp
fucomip
in
add
sub
and
bound
adc
or
in
cmpsl
mov
sbb
sbb
mov
leave
int3
cli
mov
test
push
jmp
rorl
jae
call
outsb
fistpl
in
in
xlat
ljmp
lcall
movsl
sbb
aam
mov
mov
xchg
mov
dec
mov
mov
testl
and
loope
and
sub
icebp
push
pop
mov
clc
pop
dec
push
push
ljmp
dec
inc
push
cmp
jae
dec
xor
je
bound
jno
js
sub
jno
xchg
imul
es
fmuls
pop
pop
sbb
pushf
rcrb
push
rcr
or
ret
iret
sbb
out
in
add
ja
dec
cmp
sub
fmuls
mov
jge
aas
push
out
xor
xor
and
fs
xchg
pushf
cltd
and
jle
fwait
pop
lea
iret
leave
data16
sub
xorl
aas
adc
les
jbe
aaa
aaa
in
xchg
push
or
push
mov
popf
in
xchg
pop
lea
out
insb
enter
fcompl
in
insl
mov
or
mov
add
testl
repnz
inc
lcall
jmp
fs
outsb
out
xchg
stos
movsl
inc
sub
jbe
insb
push
xchg
pop
das
and
push
and
cmpsl
mov
mov
inc
mov
cmp
aas
je
pop
or
mov
or
mov
pusha
xchg
call
xor
xchg
adc
fisttpll
pop
xor
arpl
outsl
pop
repnz
mov
jne
jg
xor
dec
sbb
shl
icebp
jne
mov
pop
push
push
sbb
pop
addr16
fsubrp
pop
aad
cmpsb
adc
ljmp
ret
out
mov
ret
aas
pushf
rcl
add
into
mov
mov
cmc
jno
loop
mov
repnz
push
sahf
cli
out
frstor
lcall
sbb
ljmp
in
jle
int3
ficoms
test
inc
hlt
mov
sti
jmp
out
cmpsl
iret
mov
test
arpl
lcall
sbb
mov
cmc
mov
rorb
push
push
dec
dec
push
ds
inc
cmovs
dec
xor
xchg
cmc
inc
jge
push
xchg
cmc
ret
rorl
in
mov
mov
out
sahf
in
sbb
sbb
adc
movb
dec
loop
into
push
adc
ds
jne
andb
push
xor
je,pn
ss
pop
jecxz
bound
ret
leave
call
push
imul
test
sahf
or
decb
loope
test
std
or
sbb
rorb
icebp
lock
les
out
cwtl
mov
into
test
arpl
out
fmuls
pusha
aam
push
adc
mov
jl
incb
incl
mov
dec
lods
test
mov
pop
sub
cli
pop
mov
mov
sbb
cltd
sbb
dec
pushw
push
arpl
dec
or
or
jb
cli
js
add
pcmpeqd
mov
xor
popf
daa
sbb
adc
push
popa
xchg
xchg
imul
add
sbb
pop
adc
iret
js
push
or
mov
push
lds
xor
nop
cmp
or
inc
xor
add
and
and
jbe
ds
out
je
xor
in
sbb
push
in
fsubl
fwait
lcall
mov
stc
idiv
cmc
std
repz
stc
sar
push
or
lods
add
add
xchg
cmpsl
cld
adc
shl
jmp
loop
shlb
fwait
rclb
xchg
rclb
in
jp
jge
pusha
mov
xorb
xchg
mov
cld
int3
inc
mov
mov
fwait
cltd
sub
push
and
xchg
pop
lods
mov
scas
push
pop
inc
cmpsl
lcall
jle
push
inc
xor
xchg
jo
aas
je
nop
dec
jl
jg
insl
and
jne
push
insb
adc
sub
pop
push
push
adc
sbb
ficoms
enter
pop
adc
shrb
push
dec
jge
cmp
testl
in
imul
pop
jmp
or
out
lcall
shll
stos
sbb
faddp
ret
mov
mov
ret
fildl
cli
mov
xor
lods
std
jno,pt
add
add
out
out
loop
pushf
jmp
jmp
adc
xlat
out
sbb
nop
out
gs
cltd
pushf
nop
popa
xchg
mov
inc
dec
xor
jno
xchg
rorl
mov
mov
mov
call
sub
test
loop
pop
sbb
cltd
pop
mov
pusha
sub
or
test
jnp
dec
pop
dec
pop
jbe
aas
add
jno
mov
add
test
pop
filds
sbb
pop
rcll
stos
jp
push
jmp
pop
fsubrl
das
push
adc
idivb
aaa
testb
lods
sub
xor
dec
and
sub
es
insl
xor
in
ja
and
ffree
mov
sub
fildll
fstl
aad
and
mov
fmulp
cmp
rol
jl
cmc
inc
int
ss
iret
add
mov
cmp
ljmp
fdiv
pop
lods
in
jmp
mov
call
pop
mov
in
enter
xchg
int
sub
mov
cmpl
cmp
hlt
mov
movsl
jmp
out
dec
pop
sahf
and
out
pop
in
sbb
stos
push
imul
das
bound
or
cmpsb
inc
orb
inc
dec
add
mov
cli
or
jp
addr16
jbe
mov
jge
insb
sbb
inc
arpl
and
fs
sbb
out
out
sub
pusha
sbb
out
push
and
push
or
dec
push
xor
push
inc
xor
ja
inc
cmp
dec
add
sti
jne
inc
out
aas
push
xor
adc
fadd
rcll
daa
jge
arpl
int3
test
cmp
fcmovb
or
jnp
loope
out
mov
jmp
mov
scas
cmc
hlt
pop
pop
fpatan
cmc
adc
mov
lea
push
jb
test
adc
fwait
mov
jns
pushl
sahf
mov
lds
js
mov
mov
cmp
out
movsb
out
lods
pop
out
mov
in
mov
daa
adc
dec
and
push
call
push
cmp
inc
dec
dec
jns
pop
dec
jne
pop
rolb
dec
mov
jnp
clc
jl
cmc
xor
sahf
push
je
and
lahf
push
pushf
scas
addr16
adcb
push
add
sbb
adc
mov
and
add
testl
iret
xor
inc
inc
flds
les
inc
daa
js
pop
addr16
call
jmp
daa
and
stos
das
das
pop
sub
fldenv
aam
fwait
nop
jecxz
mov
sub
shl
out
jl
ret
int
dec
push
cmp
mov
cli
mov
mov
sbb
rcrl
out
adc
mov
push
xchg
xchg
xchg
mov
insl
mov
repz
gs
inc
mov
lods
scas
mov
inc
mov
inc
lods
pop
frstor
movsl
cwtl
movsl
mov
pop
fwait
push
daa
pop
stos
sbb
dec
mov
jg
push
xor
inc
inc
jne
enter
aas
jp
cmp
jo
fcomip
mov
sub
pusha
popa
movsb
push
sbb
xlat
pop
fldt
pop
pop
insb
adc
sbb
in
sbb
sbb
mov
mov
test
int
dec
inc
and
aas
std
and
add
xor
jle
sub
bound
cmp
ds
cmp
test
cmp
ficoms
sbb
lret
or
addb
cmc
jnp
or
or
mov
jl
out
idivb
jmp
stos
loop
mov
adc
lea
loop
arpl
jecxz
outsb
mov
inc
mov
ret
mov
hlt
mov
inc
mov
lea
mov
push
divl
mov
inc
stos
mov
fldcw
sub
loopne
push
popa
mov
stos
inc
daa
pop
ficoms
arpl
mov
dec
pop
or
addl
add
mov
mov
inc
cmp
bound
pop
imul
sub
xchg
in
and
sub
push
pushf
push
arpl
push
pop
pop
and
add
jbe
cld
inc
inc
hlt
push
add
jecxz
xor
xor
repnz
dec
cld
xor
dec
ds
sbb
push
pop
fcmove
popa
pop
jecxz
ljmp
lcall
in
cmp
int3
add
and
lds
xor
cmp
pop
std
out
cld
xor
xchg
jecxz
stos
pushf
cmpsb
sbb
pop
arpl
lahf
mov
mov
mov
mov
xchg
test
adc
mov
mov
scas
mov
inc
cwtl
sub
push
mov
jmp
mov
dec
inc
cwtl
and
mov
cmp
jl
dec
mov
mov
pop
or
mov
pop
lds
jnp
mov
arpl
jge
push
aaa
and
push
cltd
jge
test
jl
push
and
or
insl
push
push
or
xchg
adc
pop
and
cmpsb
mov
loop
jno
sbb
dec
xor
jp
and
ja
sub
andb
sbb
sub
gs
in
mov
jmp
jecxz
int
mov
cmp
mov
cli
xor
cmc
mov
lock
cmp
mov
sub
ljmp
out
cmpsb
xor
lcall
fldenv
jp
jp
mov
inc
addb
xor
std
mov
ss
pop
cltd
pop
mov
cmpsb
lahf
mov
addr16
and
lahf
push
cs
mov
push
and
lods
push
pop
push
jp
pop
je
mov
js
jle
cmp
cld
lock
aaa
push
lahf
imul
jnp
loopne
sub
negl
pop
bound
std
adc
adc
push
fs
js
cmp
dec
cmovno
aaa
pop
add
les
and
int
jnp
xor
cmp
jnp
cmp
shrl
ret
adc
sub
sub
sub
adc
es
fisubs
mov
orl
leave
inc
cmp
add
call
ret
add
push
mul
cwtl
loopnew
sbbb
pop
xchg
nop
mov
mov
dec
popa
into
mov
xorb
mov
ret
inc
push
jl
xor
xchg
jecxz
daa
mov
loopne
movsb
sbb
inc
and
pop
pop
push
mov
adc
into
mov
adc
je
sub
mov
push
pop
popf
jl
sub
cmpsl
pop
popa
nop
arpl
cmpsl
mov
and
jecxz
push
lcall
push
stc
inc
je
ret
xorb
xchg
jbe
dec
xor
sub
xor
jnp
cmp
pop
fnstsw
sub
sub
sub
movsl
and
sbb
sub
stos
mov
leave
add
stc
popf
aad
mov
add
into
or
mov
add
hlt
setbe
and
hlt
lods
stc
xchg
xchg
jmp
push
out
push
sbb
jl
lods
mov
cli
addr16
add
add
mov
inc
mov
mov
andl
ljmp
mov
cwtl
rcrb
mov
push
data16
jge
mov
adc
pop
lret
inc
pop
cmp
jo
inc
repnz
popa
inc
cmc
add
das
pushf
jns
fwait
jmp
xchg
push
jl
imul
arpl
pop
frstor
notl
cmp
or
add
pop
mov
lea
adc
cmc
push
dec
test
rorb
xor
jne
xor
inc
xor
insb
sbb
frstor
gs
pop
sub
in
sub
enter
adc
dec
cli
mov
outsl
fld
repnz
lods
fdivrp
in
mov
test
test
daa
mov
mov
jne
test
test
sbb
push
ljmp
testl
cmp
cmpsb
push
mov
cld
std
jg
mov
ret
icebp
cmpsb
cmc
mov
cmpsl
stos
pop
mov
fisubs
shlb
test
jno
add
dec
push
inc
dec
mov
mov
dec
test
cmp
mov
mov
arpl
aas
adc
das
stos
jns
cwtl
in
xchg
xchg
adc
mov
jmp
xchg
daa
or
rorb
repz
cltd
je
sbb
or
inc
pop
aaa
pop
sbb
add
lods
mov
rolb
and
sub
add
lds
push
xor
das
push
das
sbb
pop
sbb
loopne
xor
xchg
xchg
xchg
push
icebp
fadd
mov
xchg
std
xchg
or
js
lods
mov
mov
das
add
fildll
shrl
cmpsl
ficoml
shrl
nop
pop
cmpsl
lds
adc
and
xchg
orb
mov
mov
xor
mov
lahf
and
pop
mov
and
push
or
xchg
hlt
push
pop
pop
inc
add
inc
pop
or
inc
push
push
inc
dec
dec
iret
inc
mov
pop
inc
les
jg
pusha
xor
xor
fwait
xor
js
lcall
xchg
xchg
push
sub
push
outsb
pop
in
cmc
and
and
push
adc
ss
out
sbb
xor
test
dec
jne
mov
add
sub
sub
jmp
push
and
popa
fadd
sub
ja
lods
daa
les
and
cli
pushf
dec
xchg
icebp
les
or
mulb
add
loop
imul
pop
push
cli
clc
and
sbb
cmpsl
loopne
mov
iret
mov
mov
inc
and
xorb
dec
mov
les
scas
dec
inc
test
loopne
mov
sti
fcompl
push
push
push
mov
dec
out
inc
push
adc
dec
pop
out
inc
inc
pop
push
int
dec
inc
push
repz
jle
inc
jbe
pop
cmp
lea
push
jp
outsb
jb
xor
mov
bound
sub
sub
jg
jl
push
push
jge
add
sbb
push
sbb
arpl
or
adc
adc
jmp
xor
hlt
add
add
or
inc
xchg
push
mov
jge
rorb
fbld
sub
ss
rcr
fistpll
imul
sub
ffreep
les
push
fcoms
cmp
int
mov
in
mov
sti
mov
cmc
jne
out
scas
cltd
mov
sbb
xchg
jmp
fadds
sbb
xchg
xchg
rclb
rcrl
mov
mov
pop
mov
cmp
hlt
mov
fstps
movsl
movsl
movsl
xchg
cmpsl
stos
pop
mov
push
pop
adc
push
loope
pop
sub
dec
dec
pusha
adc
or
cmovo
mov
dec
aaa
inc
cmp
inc
mov
or
icebp
inc
xchg
je
sbb
adc
mov
pop
pop
and
pop
sbb
push
sbb
push
adc
push
push
cwtl
add
ja
pop
dec
cmp
or
jnp
lock
and
and
push
sarb
cmp
cs
aaa
push
and
pusha
in
mov
stos
jo
pop
aad
jmp
daa
and
lds
int3
iret
leave
icebp
imulb
fbstp
push
stc
ret
cmp
icebp
mov
stc
stos
fwait
lock
out
ljmp
pop
adc
in
sbb
mov
mov
fldl
aas
xchg
xchg
dec
cmp
incl
leave
mov
fstps
pusha
cmpsb
cltd
shll
popf
movsl
fsub
sbb
stos
fldenv
sbb
jge
scas
sbb
ds
in
ja
scas
add
dec
pop
clts
xor
mov
cwtl
jl
jne
test
mov
sub
mov
push
push
fs
or
in
or
pushf
sbb
popf
aad
cwtl
or
addb
sbb
or
xor
push
jnp
int
jp
pop
jle
xor
or
xor
stos
and
fstpl
movsl
xlat
pop
aas
bound
adc
sbb
shr
mov
loop
jecxz
out
or
fmull
add
xchg
cmp
mov
cli
lock
addr16
sbb
aad
in
dec
rcr
pop
pop
test
cmpsl
push
pop
push
aad
mov
mov
dec
xorl
dec
dec
jl
jmp
xor
test
sub
and
mov
mov
xchg
pop
ja
mov
xchg
mov
js
or
jge
dec
jo
int3
or
jo
wrmsr
mov
jae
decl
mov
inc
jne
push
sub
jmp
xchg
xchg
push
dec
xchg
and
push
pop
pop
and
jecxz
adc
lcall
add
adc
icebp
xchg
pop
add
xchg
xor
or
mov
insl
sub
imul
pop
pop
xlat
sub
sbb
cltd
lods
rcl
push
ficoml
sarb
sarb
mov
mov
mov
mov
or
or
repnz
pop
ret
es
fcoml
or
xchg
fldenv
xchg
add
ljmp
fst
mov
nop
xchg
push
lret
mov
iret
inc
jbe
or
mov
mov
ljmp
jge
or
movsb
out
stos
stos
insl
movsb
lods
jecxz
data16
push
insb
xchg
fs
dec
adc
pop
inc
cmpsb
popa
and
dec
cmp
mov
dec
or
pop
rcll
pop
xor
ja
js
je
jo
jle
ja
xchg
lahf
cs
jge
es
jnp
push
lcallw
adc
push
push
adc
push
push
sbb
dec
pop
dec
jg
push
sbb
or
mov
cld
or
jl
ss
dec
sub
sub
fneni(8087
vmovntps
fs
movsl
lods
pop
ljmp
xchg
and
std
add
ror
into
xor
fcmovnu
icebp
add
cmp
mov
add
in
cmc
shll
sbb
ficoms
movsb
mov
push
fisubrl
fst
lahf
jecxz
aad
xchg
rcl
jnp
mov
jno
pop
je
xchg
lcall
aas
into
stos
cmc
inc
mov
mov
inc
cli
mov
adc
push
push
bound
inc
pop
jae
sbb
inc
sbb
int
dec
inc
pop
xor
ds
mov
jno
mov
or
jb
push
cmp
jo
js
jns
or
gs
bound
push
bound
push
imul
xchg
sub
jmp
in
and
insl
or
push
out
dec
pop
jmp
xor
inc
inc
lret
or
std
dec
xor
dec
push
repz
xor
gs
jb
loope
jmp
aad
lds
lea
push
in
aam
pop
cltd
dec
cmp
aam
dec
and
fdivr
ret
into
shr
or
js
sti
shl
std
xor
ljmp
in
sahf
mov
clc
mov
sbb
fildll
xchg
xchg
popf
adcl
jnp
xorl
lea
cli
mov
mov
fdivr
adc
mov
push
imul
out
mov
push
push
and
mov
adc
dec
mov
mov
dec
call
add
popl
jb
mov
mov
or
add
push
addr16
out
sub
ljmp
and
or
out
push
faddp
subps
jnp
jns
inc
jmp
daa
and
jge
add
ja
jae
cmp
jne
cmp
push
sub
sub
adc
ror
fcmovnu
pushf
enter
xchg
push
or
enter
cmp
leave
and
lds
lret
repnz
divl
push
rcr
imul
pusha
int
in
movsb
test
mov
push
cltd
jmp
xchg
inc
fwait
inc
push
jl
lcall
test
mov
ja
mov
std
inc
lds
mov
pusha
scas
out
jecxz
bound
sub
fisubrs
pop
mov
pop
xlat
sbb
push
pop
push
jnp
or
cmpsb
js
add
test
push
dec
jns
lea
jg
mov
fwait
sahf
sub
imul
sahf
daa
insb
lods
dec
xchg
and
add
or
sbb
sbb
mov
test
dec
sbb
add
ret
stc
or
sbb
lret
js
xor
sub
xor
xor
inc
xor
pop
sub
pop
cs
out
sarl
adc
les
enter
lret
arpl
into
sti
lret
cmc
addb
ljmp
cmp
cmc
leave
in
xlat
in
fistpll
call
aad
in
in
mov
fwait
mov
ret
mov
mov
xchg
sub
cwtl
jbe
cmpsl
mov
dec
jmp
jge
scas
inc
mov
lret
cwtl
inc
jmp
movsb
cmpsl
lahf
push
outsb
movsb
inc
es
mov
lods
or
stos
pop
sbb
arpl
pop
addr16
cmp
mov
mov
mov
jge
jmp
pusha
mov
mov
inc
jno
cmp
sahf
outsl
je
push
push
push
nop
insl
iret
movsw
fwait
push
push
push
xlat
push
xchg
in
push
loopw
add
out
adc
or
or
cmp
aas
xor
mov
cmp
icebp
inc
addr16
imul
and
out
and
out
cltd
push
cmc
sbb
fistpl
leave
xor
inc
xor
cmp
cmc
mov
jl
call
repz
in
mov
mov
jecxz
and
cltd
xchg
test
ret
fwait
xchg
pushf
nop
xchg
mov
xchg
shll
dec
mov
movsb
jnp
test
cmp
popf
stos
in
inc
mov
outsl
nop
outsb
outsl
sbb
inc
push
nop
push
jg
xlat
fldt
mov
pop
or
or
xchg
sub
xchg
cmp
test
test
mov
jge
sub
sub
insb
push
pusha
jne
arpl
push
sub
pop
in
adc
out
pop
jnp,pt
add
rolb
into
or
push
cmp
xor
push
jle
jbe
and
iret
add
lods
and
scas
sub
shlb
into
leave
adc
aad
xchg
shr
lahf
mov
and
into
mov
cmp
fadds
loop
in
add
jg
or
mov
cld
loop
and
nop
outsl
push
sahf
dec
xchg
dec
pop
cmpsb
pop
stos
mov
loop
and
addr16
pusha
bound
mov
mov
cli
arpl
les
lcall
cmc
shl
addb
scas
lods
test
popf
pushf
sub
or
push
mov
test
loope
push
dec
pop
pop
inc
sbb
jmp
int
dec
push
or
or
pop
inc
jnp
push
adc
xor
xchg
dec
jns
inc
inc
aas
add
mov
popa
out
pop
imul
and
es
outsl
outsl
popf
push
rcr
and
push
push
sbb
push
loopne
push
fmuls
ds
cmp
jbe
jg
xor
lret
dec
je
lock
lret
inc
add
sarb
hlt
jno
loopne
imul
push
scas
mov
jmp
push
and
fcoml
pop
pop
xchg
jns
fcmovnbe
mov
aam
xlat
stc
xor
int
mov
xor
lods
xor
clc
movsl
push
cmp
ljmp
call
xchg
loope
in
and
imul
lds
rcrb
fidivrl
inc
ret
clc
shl
dec
mov
jno
inc
in
scas
inc
lock
pop
in
pop
stos
scas
scas
in
movsb
out
push
test
pop
imul
pop
adc
adc
dec
jp
pop
mov
push
jno
xor
push
dec
mov
sub
jo
daa
aas
mov
fstl
cmp
push
scas
mov
sbb
push
ljmp
add
rolb
or
push
xor
or
sbb
xor
imulb
es
subb
and
adc
sub
fldt
daa
sbb
cmp
lret
cmp
mov
ss
mov
jecxz
push
or
add
inc
sub
adc
and
adc
movsl
push
lods
imul
loopne
aam
xchg
mov
mov
dec
mov
mov
mov
mov
jmp
mov
dec
je
mov
fisubs
xchg
push
mov
pop
and
push
movsb
pop
mov
js
dec
dec
dec
mov
movsb
inc
push
clc
mov
rorb
bound
mov
fsubl
addr16
pushf
mov
imul
addr16
sbb
pop
sbb
ficompl
pop
or
push
xchg
or
push
mov
push
and
jae
enter
inc
leave
xor
into
jp
cmp
and
xor
sub
loop
loopne
sub
lds
sub
sub
xlat
mov
xor
mov
cmp
rol
lea
xor
repnz
jecxz
testb
repz
lret
test
in
mov
sbb
movsl
fbld
fwait
lret
test
mov
fwait
mov
push
push
inc
enter
cwtl
inc
mov
addb
lods
lret
jae
out
mov
mov
sub
dec
pop
cmpsb
scas
movsb
in
scas
rep
mov
push
scas
stos
push
mov
push
add
or
dec
stos
pop
inc
push
ret
cmpsl
jbe
jo
pop
push
dec
gs
mov
fs
jbe
andl
outsl
sub
cmpsl
push
push
sbb
fisubrl
dec
add
push
adc
pop
mov
or
stc
stos
pop
or
aaa
cli
xor
cmp
jo
xor
cmp
or
and
push
popa
xor
jmp
xor
test
pushf
push
fisubrl
aad
aam
aam
cmp
enter
leave
pop
leave
or
fcos
adc
sti
stc
mov
sbb
shr
std
sti
icebp
add
call
popf
aad
out
mov
test
xchg
idivb
dec
inc
orb
push
add
adcb
icebp
pop
inc
hlt
inc
mov
lods
arpl
lods
mov
movsl
mov
pop
fcompl
push
popf
push
or
pop
outsl
gs
push
adc
daa
pop
dec
mov
xor
push
aas
pop
inc
jge
dec
or
repz
jbe
xor
jg
imul
push
lods
leave
out
scas
sbb
pop
adc
sbb
push
daa
cli
je
cmp
pop
pop
dec
rolb
jb
pop
les
ja
or
add
mov
mov
cmp
xor
push
scas
xchg
adc
imul
push
jb
sub
int3
out
fwait
rcl
les
cmp
adc
push
xor
add
mov
sub
mov
ds
loopne
sti
icebp
cmc
mov
mov
sbb
and
lcall
out
cmp
shlb
or
popl
xchg
lea
int
dec
mov
dec
or
arpl
out
test
push
loope
cmpsl
popa
es
mov
test
movsb
dec
movsb
mov
scas
push
jne
dec
js
mov
rorb
cmp
jnp,pn
test
jno
leave
mov
sub
mov
and
mov
pop
sbb
in
loop
jmp
mov
ja
mov
cmp
or
or
dec
dec
cld
inc
xor
int3
cmp
sub
and
dec
ret
shrl
imul
fisubrl
data16
sub
stos
ror
adc
test
scas
xchg
aam
xchg
or
fmulp
dec
sti
xchg
int
inc
cmpb
hlt
mov
mov
jp
mov
fisubl
sub
jmp
cmpsl
insl
fsub
lcall
aad
arpl
or
add
dec
mov
mov
lock
cmp
xchg
daa
out
mov
sti
sub
push
cmpsb
and
pop
stos
push
ficoms
pop
movsl
das
rcl
dec
inc
movsb
push
lret
mov
inc
jg
je
inc
mov
cmpl
je
pusha
xor
xor
cs
cwtl
pop
inc
sub
adc
jne
push
pop
imul
repz
and
pop
pop
in
pop
decb
sbb
dec
sbb
dec
cld
je
js
and
hlt
xor
les
sub
lods
les
fcmovb
insb
outsb
and
bound
cmp
mov
sbb
xchg
mov
push
sahf
push
cmp
mov
push
lds
rorb
pop
cli
cmp
lcall
or
mov
cltd
xchg
stos
xchg
subb
movsb
js
xor
into
mov
xchg
mov
testb
leave
lds
call
lods
in
mov
push
mov
insb
fistps
push
popa
xlat
arpl
mov
push
dec
dec
push
xor
dec
dec
pop
add
cmp
sub
mov
jns
cmpsl
sub
jp
outsl
insb
jecxz
sub
cmpsl
push
arpl
or
jmp
nop
pop
or
cli
push
add
testb
xor
xor
adc
ljmp
dec
and
mov
or
divl
sub
pop
xchg
shrl
xor
pusha
int3
xor
sub
cwtl
shrb
test
fsub
lea
cmovl
aaa
fmul
dec
repnz
cld
mov
pop
cmc
jp
loopne
and
inc
scas
in
mov
cld
out
mov
cltd
adc
push
lret
xchg
pop
push
push
lcall
test
int
je
lds
mov
mov
clc
add
mov
gs
insl
rcrl
push
and
mov
inc
test
nop
sbb
inc
adc
push
dec
inc
cmp
cmp
pop
xorb
mov
mov
jae
js
jb
mov
xchg
hlt
imul
sbb
mov
fldcw
pop
pop
sbb
push
loopne
fs
insb
and
mov
std
dec
xor
lock
call
int
repnz
sub
cmp
jmp
pop
ret
xor
pop
push
adc
rcrb
mov
xchg
sahf
cltd
lret
adc
mov
mov
shl
add
leave
adc
xor
or
xchg
sub
shlb
frstor
movsl
stc
popf
lahf
push
ficoml
xlat
loop
aam
adc
jnp
cmpl
lahf
mov
pusha
sarl
mov
mov
cld
repnz
pop
mov
mov
push
scas
rcl
jecxz
inc
push
mov
pop
das
lods
push
fistpll
shlb
scas
dec
pop
xor
mov
insb
dec
add
pop
dec
mov
jp
jo
mov
jns
add
xchg
sub
cmp
insb
lods
out
xchg
test
sbb
sbb
or
push
fucom
loope
in
dec
prefetchw
mov
jo
push
xor
lea
push
and
or
lock
mov
sub
sub
fs
bound
rcpps
push
adc
lcall
cs
into
push
hlt
dec
rcl
fisttpl
mov
rolb
je
hlt
cli
idivl
loop
mov
jmp
stos
test
shll
fisubrs
mov
jb
sbb
mov
addl
push
mov
jo
mov
je
test
jnp
xor
lods
in
pop
sub
push
mov
outsb
inc
push
or
stos
inc
pusha
push
pop
xchg
and
dec
aam
cmp
or
dec
inc
je
dec
inc
mov
dec
push
mov
jne
xor
lea
pop
sbb
push
push
and
iret
dec
in
sbb
pop
pop
pushf
push
xchg
adc
pop
cmp
mov
add
add
aam
int
cli
xchg
mov
or
rclb
push
in
sub
data16
arpl
cmp
adc
sbb
scas
push
test
lcall
popf
add
xchg
ss
mov
movl
adc
in
xchg
outsb
sub
out
es
stc
jmp
push
cwtl
fld
jecxz
fs
cwtl
sub
jge
test
add
mov
ds
mov
xor
enter
push
mov
outsb
xchg
out
push
fldcw
imul
inc
pushf
and
or
xor
inc
ds
push
add
gs
mov
lock
pop
stos
adc
scas
sub
xchg
outsb
movsb
sbb
sbb
or
scas
or
outsl
push
push
push
add
std
add
pop
test
in
inc
push
adc
aaa
fmull
xor
sub
hlt
jne
stos
imul
test
loop
and
and
and
rcr
sub
daa
aam
shlb
aam
fimull
mov
ret
lock
xchg
dec
pop
mov
subl
mov
xor
mov
xor
out
lock
aad
lods
jmp
movsl
call
fldcw
in
xor
rcl
pop
rorl
jge
xorb
inc
push
mov
lret
mov
adc
mov
aad
pop
arpl
arpl
mov
sbb
xchg
xchg
dec
mov
push
movsb
cmpsb
xchg
jp
leave
mov
cmp
push
pop
dec
push
cmp
cli
repnz
fwait
jo
fwait
sub
push
pushf
mov
cmpsb
fs
xchg
pop
sbb
in
pop
loope
or
or
or
clc
push
stc
or
int
pop
dec
sbb
xor
lret
jnp
jp
cld
repz
inc
xor
mov
jp
cmp
out
pushf
iret
pop
adc
lret
cwtl
das
fdivs
adc
aad
xchg
shrl
les
or
add
push
xorl
std
mov
les
icebp
icebp
incl
pop
lcall
xchg
aad
lods
icebp
loopne
rorl
ficompl
lret
xlat
fisubs
insl
repnz
fstpt
push
jo
jbe
jbe
stc
mov
mov
xor
movsb
loope
dec
inc
mov
adc
xchg
fisttpll
in
movsl
fcoml
inc
inc
sbb
rclb
cmpsb
mov
cmp
pop
push
jp
pop
dec
ds
jg
js
mov
insl
pop
add
mov
je
out
cwtl
sub
jle
mov
push
adc
sahf
cwtl
or
maxps
sbb
jns
stc
dec
cmp
inc
push
test
adc
int3
push
and
js
repz
xor
mov
andl
aas
adc
xor
pop
imul
les
and
lahf
fstl
in
xlat
mov
or
lea
fsincos
cli
in
aas
jge
imul
bnd
jmp
mov
xchg
pop
or
pop
out
and
mov
xlat
call
push
pop
fs
mov
xchg
cltd
mov
testb
outsb
ret
mov
dec
mov
mov
xchg
clc
mov
inc
fwait
lds
mov
fwait
sub
shlb
push
sub
mov
mov
lods
mov
sbb
mov
push
ja
sbb
mov
adc
std
divl
add
fisubrs
aas
out
inc
popa
cmp
pusha
bound
adc
test
dec
pop
pop
fistps
std
push
pushf
loop
rclb
push
adc
or
cld
or
add
add
sub
lret
data16
and
ds
fistl
xchg
call
and
and
sbb
movsl
lahf
sub
xchg
xchg
test
cmpsb
fistl
ret
iret
mov
and
cld
mov
hlt
inc
iret
push
test
cmp
mov
icebp
jno
sti
les
call
out
outsl
sbb
or
mov
test
fcompl
jb
mov
into
mov
cmp
mov
nop
test
iret
clc
cmp
sbb
out
lods
call
mov
dec
out
mov
adc
xchg
ficomps
pop
inc
and
xchg
outsb
push
jns
dec
mov
pop
inc
xor
lds
cli
mov
jns
dec
mov
xchg
addb
jae
test
adc
es
push
push
sti
insb
add
sbb
sub
add
jle
dec
or
dec
sbb
or
loopne
jbe
or
xorb
add
sub
sbb
pcmpgtw
gs
cltd
adc
sahf
sub
outsl
ficoms
fsubrs
pop
rol
cmp
mov
mov
cmp
repnz
xor
jge
popl
mov
push
xchg
out
out
push
pushf
loop
mov
cs
lret
adc
mov
xchg
xchg
popa
rclb
dec
cltd
cld
cwtl
imul
ret
mov
cli
mov
mov
jnp
bnd
fidivrl
cmpsb
pop
popa
lea
shrd
push
test
push
fcoml
pop
shlb
push
jne
inc
jp
mov
jb
or
stc
or
mov
inc
or
test
and
sub
jg
gs
imul
sbb
xlat
pop
pop
adc
pop
fs
dec
cmp
cmp
aas
pop
xor
or
xor
daa
cmp
xor
sub
sub
sbb
loope
bound
pusha
push
out
popf
in
call
and
cmpsb
rcrb
ret
in
int
lds
pop
ret
jmp
mov
mov
ljmp
fstps
xlat
xchg
rcrl
jmp
jmp
stos
jecxz
loope
out
in
xor
mov
repnz
mov
mov
mov
mov
mov
mov
xchg
test
add
fcomps
ficomps
aam
nop
sub
insb
sub
jecxz
and
fs
es
cmp
jl
jp
js
dec
xor
dec
jno
dec
or
dec
cmovns
inc
iret
jnp
inc
inc
inc
sbb
pop
sbb
push
adc
insl
pop
push
imul
outsl
sub
arpl
jns
jnp
jge
jg
jno
jae
jne
ja
test
dec
or
add
and
push
sbb
in
loop,pn
loopne
out
lcall
sbb
pop
adc
pop
xor
cmp
add
add
jns
aaa
add
cmp
xor
dec
sti
add
out
sub
cs
sub
and
pop
jmp
daa
shlb
pop
pop
pop
jns
sub
bound
push
push
dec
pop
dec
dec
dec
dec
xor
ret
xchg
out
js
jp
mov
jle
iret
jae
jne
ja
imul
pushf
bound
addr16
mov
lahf
test
xchg
xchg
xchg
xchg
cmc
inc
mov
inc
push
push
adc
jge
dec
mov
inc
inc
ds
xor
dec
dec
dec
jnp
dec
dec
repnz
push
push
push
push
push
data16
pop
fcompl
pop
pop
pop
pop
cmc
and
ljmp
pop
push
inc
fisubl
fdivrs
cmp
ret
pushl
cmp
aaa
int
lret
xor
divb
pmaddwd
incl
std
add
out
and
out
pop
in
adc
push
in
adc
aad
adc
push
in
loop
loopne
incl
std
add
testl
icebp
or
aaa
int
lret
xor
xor
stc
lds
fbld
frstor
xlat
das
adc
shrl
shrl
scas
push
lods
push
stos
push
test
pop
sub
mov
jne
popf
mov
jg
mov
mov
stos
test
popa
cltd
arpl
test
xchg
xchg
xchg
push
xchg
test
in
pushf
bound
insb
push
sbb
pop
daa
mov
jl
mov
jne
ja
dec
xor
jae
mov
mov
jbe
pop
pop
insl
ja
xchg
shll
test
stos
push
lods
push
scas
sub
sub
and
loop
test
or
aaa
int
lret
inc
sbb
ss
xor
dec
or
dec
or
inc
pop
cmp
jo
and
cs
xor
sbb
adc
imul
mov
sbb
adc
adc
movsb
out
sub
mov
pop
enter
hlt
or
dec
or
icebp
in
ret
or
mov
or
push
pushf
out
out
sub
sub
sub
imul
mov
adc
mov
repz
pop
mov
mov
mov
test
xchg
inc
sti
addl
aad
pop
outsl
outsb
test
addr16
scas
pop
sbb
and
push
jno
pop
adc
bound
xor
or
aas
cmp
cmp
dec
cmpl
mov
mov
add
cs
sub
adc
push
pusha
pop
pop
popa
xchg
and
sub
sub
sub
sub
repz
ret
ds
leave
xor
or
or
adc
testl
add
pop
pop
pop
sbb
out
rclb
in
adc
loopne
jmp
fwait
xor
jmp
jecxz
loopne
push
lds
pinsrw
cli
sti
ret
mov
or
testb
cmp
fsubs
aam
mov
out
and
in
in
rcl
ljmp
in
movsl
push
lcall
mov
mov
gs
mov
testl
roll
sahf
sahf
pushf
fisubrl
lods
xchg
rcrb
xchg
xchg
imul
nop
data16
mov
xchg
jl
jp
ds
jne
inc
mov
dec
dec
dec
data16
dec
cmovnp
jb
and
adc
pop
xchg
aaa
and
pushw
outsb
pop
insl
sub
popa
sbb
push
adc
mov
mov
add
adc
cs
ret
add
mov
mov
xor
add
fisubrs
sbb
xor
pop
lahf
adc
sbb
fs
loope
and
int3
int
cmp
cld
decl
sub
idiv
int
inc
into
int3
repz
or
mov
in
pop
add
out
loope
in
mov
out
fcomi
sti
mov
fsubr
push
xchg
outsl
fsubs
mov
and
inc
mov
roll
jge
iret
mov
mov
scas
lods
loope
idivb
ficompl
fwait
scas
nop
pusha
arpl
adc
insl
outsl
pop
mov
push
and
lret
mov
dec
xor
inc
mov
lret
inc
dec
inc
mov
mov
inc
dec
sti
jo
pop
cmpsb
mov
cwtl
pop
fwait
sbb
sbb
lcallw
das
insl
push
fisubs
adc
aad
add
mov
xor
add
xor
add
or
jns
cmp
aaa
je
pop
pop
pop
adc
bndstx
cmpsb
out
and
ljmp
les
and
xlat
or
add
clc
shl
repnz
mov
xor
lret
cmc
ror
mov
xor
xchg
nop
loop
stos
xlat
test
lahf
fistpl
push
in
xchg
adc
loop
loopne
xchg
fs
dec
mov
rol
ja
jb
xchg
jne
push
xorl
or
cli
sti
pop
fwait
rcll
gs
sbb
test
pop
and
adc
adc
fldcw
mov
rolb
dec
mov
mov
cmpb
divb
arpl
je
and
xchg
sbb
lahf
pop
filds
nop
pop
push
es
jmp
add
mov
leave
pop
test
cmp
leave
enter
daa
ds
movups
cli
std
cld
mov
in
sbb
repz
clc
stos
ljmp
adc
jge
jae
in
cltd
or
push
and
add
add
icebp
lea
add
or
mov
cmp
aas
xchg
ret
or
fldcw
lds
or
inc
push
pusha
push
push
add
and
sbb
scas
lret
lret
add
mov
dec
dec
sbb
scas
dec
dec
jno
cmp
arpl
jnp
cmpb
loope
js
popa
addr16
jae
outsl
insl
in
outsb
mov
push
xchg
push
js
pop
lea
popa
xchg
xor
mov
mov
mov
mov
mov
pop
mov
jle
ss
aas
dec
mov
lods
movsl
popf
sub
rcl
rcl
push
push
shll
fisubl
ret
dec
ret
bswap
inc
push
dec
or
movups
pop
xchg
clc
pop
aas
sub
jl
mov
adc
stos
cwtl
stos
cmp
in
cmp
pop
push
mov
lods
add
pop
aas
les
sub
lret
ja
lea
dec
scas
jmp
popf
loopne
jnp
and
jge
sub
jae
cmp
hlt
pusha
xchg
push
stos
lock
and
scas
add
sbb
jns
sbb
mov
pop
mov
sahf
xchg
add
popf
loopne
inc
fsubrl
std
mov
mov
xor
stos
adc
out
test
mov
dec
mov
repz
adc
fisubs
mov
aam
out
hlt
mov
and
sti
sahf
mov
mov
mov
xlat
cmp
dec
loope
aas
aaa
dec
push
cs
sub
mov
data16
lods
dec
dec
jbe
out
cmp
push
into
xor
mov
fdivrp
xchg
mov
xchg
fs
pop
insl
nop
xchg
dec
lcall
mov
int
clc
and
ret
gs
lahf
cli
mov
mov
cmc
adc
mov
ret
pop
mov
jnp
mov
jg
cmpsb
pop
mov
mov
mov
inc
movsl
jmp
inc
mov
fiadds
fsubr
js
mov
insb
dec
cmp
cmc
mov
sbb
cmpsb
push
push
lea
aam
test
ret
iret
mov
dec
cmp
das
jbe
fs
cmp
movsl
adc
and
nop
stos
clc
pop
sbb
push
mov
jl
stos
in
into
push
add
mov
addr16
repnz
xchg
inc
ret
lds
lods
ja
jmp
mov
and
insl
sub
data16
dec
out
mov
in
jmp
scas
inc
jmp
fmuls
rcr
adc
repnz
xor
jmp
sbb
pop
imul
lock
jg
jge
adc
push
sub
js
jp
cmp
aas
cmp
push
pop
dec
push
mov
and
fsubr
das
jmp
in
in
in
pop
testl
xor
sbb
add
jbe
add
or
sbb
xor
xor
xor
mov
cmp
inc
cmp
and
sbb
aas
sub
cs
push
push
int
push
sub
dec
loop
pop
adc
inc
mov
adc
lcall
jo
adc
pcmpeqd
mov
jle
pusha
shlb
fs
push
push
and
xchg
int
and
les
adcb
cmp
lea
inc
adc
mov
lods
mov
leave
mov
mov
test
stos
lock
scas
std
or
jg
adc
fnsave
fisttpl
mulb
cmp
xchg
push
sbb
addr16
sub
jnp
scas
push
push
sbb
ror
test
inc
dec
adc
push
push
loopne
movsl
loop
out
insb
dec
mov
add
xchg
nop
mov
dec
mov
lods
leave
pop
pop
gs
add
sar
or
jl
fwait
xor
inc
data16
cmp
and
cli
and
js
add
mov
xchg
push
mov
ds
out
pop
hlt
inc
pop
xor
xlat
or
stos
fsts
dec
dec
testl
jb
sub
lahf
jns
idivb
es
jle
nop
arpl
pop
leave
mov
out
insb
xlat
jbe
mov
xchg
sahf
xchg
mov
cltd
cwtl
jnp
popf
jle
xor
addb
lret
xchg
xor
pop
mov
sbb
mov
mov
mov
lock
test
outsb
rcl
inc
push
fcmovnbe
cmp
pop
mov
out
ret
mov
les
xchg
enter
cmc
mov
xchg
cmc
hlt
call
in
mov
xchg
clc
adc
in
jge
xchg
dec
int
adc
cmpsl
push
stos
ss
add
add
lcall
xchg
sub
xor
xor
xchg
inc
xchg
cmp
and
cmp
sub
sub
sbb
mov
out
or
pop
inc
mov
scas
inc
inc
cmpsl
inc
dec
adc
dec
mov
and
lret
jns
pop
loop
sahf
fistl
mov
repnz
lds
lcall
adc
jle
ds
int3
int3
mov
cmpsb
sub
adc
in
and
jle
sub
pop
mov
out
mov
mov
sbb
pop
test
aam
data16
test
dec
or
call
inc
mov
sbb
fucomp
subl
lret
fidivl
mov
cmc
stos
sbb
stc
cmp
std
cwtl
out
out
loopne
xchg
in
scas
out
call
stos
cmp
rclb
ja
sbb
test
shlb
or
or
cmp
xor
cmp
push
sahf
push
xchg
cs
and
add
ss
xchg
ret
add
xor
aad
loopne
xor
dec
push
pop
pop
enter
jbe
loopne
enter
dec
cmpsl
dec
dec
pop
ja
jo
sbb
je
jbe
adc
fwait
jge
fs
stc
punpckldq
push
outsl
lea
xchg
or
cltd
scas
fwait
jae
push
lahf
in
pop
andl
mov
sub
push
mov
out
cwtl
sarl
mov
jo
andl
lods
scas
cwtl
scas
insl
mov
fisttpll
into
sub
xlat
ret
sub
aam
pop
insb
xlat
insb
sub
int3
movsb
xchg
xorb
imul
stc
fcoms
pop
loope
jecxz
in
out
jmp
clc
out
je
dec
adc
movsl
sbb
pushf
pop
loope
add
imul
sub
xchg
or
lar
mov
sbb
aas
cltd
jae
aaa
and
sub
jmp
and
and
push
cmp
ja
pop
notl
jb
add
adc
outsb
sbb
sti
sbb
aad
int3
sub
frstor
push
cmp
jg
arpl
gs
xchg
ss
adc
cltd
mov
lcall
sbb
add
mov
adc
push
cltd
xor
sti
mov
mov
cmp
shrb
test
add
movsl
in
enter
hlt
fcompl
ret
mov
push
imul
mov
iret
nop
popa
sar
sti
cmp
in
push
loop
in
out
cltd
ret
cmp
and
adc
pop
in
add
ficompl
cwtl
add
add
jnp
bound
xor
fists
dec
xchg
sub
add
xchg
imul
imul
sbb
push
push
xor
xor
inc
mov
inc
mov
outsb
arpl
dec
inc
das
jno
jae
stc
sahf
ja
cltd
fcoml
jp
out
dec
popa
mov
les
jmp
sub
repz
xchg
xchg
das
cwtl
adc
adc
xchg
push
mov
call
and
les
cmp
adc
movsl
cmp
push
test
xchg
pop
mov
test
xchg
fldl2t
mov
scas
sbb
push
sbb
les
inc
fisubrs
pop
lret
in
pop
sub
push
fdivrp
and
cld
insb
xchg
or
loop
mov
push
dec
in
mov
push
icebp
dec
test
mov
mov
pop
mov
movsb
stc
cmovge
xor
xor
movsb
jbe
cltd
fdivl
sub
fisubs
movsl
and
es
sub
cs
and
push
inc
repz
jp
fstpl
imull
cmp
lods
jmp
and
xchg
adcb
fstl
and
jns
aaa
jno
push
sbb
imul
xchg
data16
pushf
scas
adc
test
mov
fimuls
mov
lcall
pop
pop
out
pop
dec
cmp
push
movsb
lea
sub
movsl
cmp
mov
or
xchg
inc
test
stos
dec
out
adc
dec
stos
frstor
cld
repz
dec
sbb
inc
std
adc
inc
pop
push
mov
out
je
jb
jae
out
xchg
lock
stos
pop
jl
sbb
inc
add
fisubl
add
push
cld
or
or
xchg
fidivs
nop
fwait
int3
outsb
xchg
aas
mov
shrb
xor
push
sbbb
push
lods
pop
lret
push
pop
cli
jge
xor
mov
cmp
cmpsb
add
mov
and
xchg
jbe
js
xchg
fimuls
iret
sbb
sub
insb
sarb
xchg
movsl
push
repz
mov
mov
jmp
mov
ja
xchg
lea
adc
sbb
loop
mov
jb
mov
mov
fbld
test
sub
push
rcl
insb
shrb
daa
imul
sub
jmp
popa
shrb
gs
pushf
leave
push
iret
and
call
adc
pop
push
jmp
cmp
adc
fucomip
cli
push
out
mov
outsb
push
dec
cmpsb
sbb
into
outsb
push
sbb
test
add
jb
or
movsb
setle
fwait
xor
xor
cmp
push
xchg
inc
insb
jle
mov
lea
and
das
sbb
push
jmp
mov
mov
mov
inc
aad
inc
push
jmp
popf
dec
clc
dec
sbb
insb
xchg
push
movsl
sarl
jnp
jge
jg
nop
pusha
xchg
bound
loop
data16
les
int
lds
xchg
mov
idivb
addl
testl
push
lea
loop
std
mov
adc
sub
fbld
cmpsb
popf
or
lods
add
and
jge
dec
lret
mov
arpl
dec
push
rol
lds
cmp
ror
aas
into
xor
cmp
sahf
push
push
fwait
and
loopne
loop
cwtl
aas
add
iret
mov
adc
pop
pop
xor
hlt
mov
sbb
push
add
fisubrl
xchg
jmp
mov
cmp
std
bound
insl
sar
mov
push
xor
das
cs
push
mov
fcompl
pop
jmp
inc
xchg
inc
sarl
dec
push
push
push
mov
lahf
jb
lcall
or
adc
ret
in
in
imul
outsl
outsb
jg
cmp
xchg
ja
test
fstps
test
les
mov
je
add
stos
mov
push
sbb
pop
sarl
jmp
dec
cmpsb
clc
imulb
scas
inc
cmpl
fldln2
inc
fisubl
movsb
ret
push
sbb
lret
lret
in
hlt
mov
push
out
sub
pop
sub
decl
pop
into
xchg
push
call
out
sbb
sbb
add
in
out
pop
int3
add
push
push
js
or
bound
jge
loope
jne
adc
sbb
cli
and
and
int
es
sub
sub
xchg
xor
icebp
in
outsl
ret
push
push
popf
inc
inc
xor
or
xor
addb
js
jp
cmpsl
popa
inc
and
fmulp
iret
cld
dec
data16
dec
pop
insl
xor
pop
nop
mov
sarl
cltd
dec
sub
ljmp
int3
inc
test
xor
lcall
jmp
cwtl
sarb
mov
ret
mov
sub
inc
mov
sar
shll
fldenv
inc
xor
cwtl
ret
fbld
sbb
stc
and
adc
adc
fcomip
cmc
jne
loop
adc
movsb
arpl
xchg
out
jmp
shr
mov
sbb
add
cmc
dec
rorl
push
mov
add
inc
inc
fdivrs
sbb
xor
insb
sbb
jecxz
aad
ss
lds
es
sub
xorl
es
adc
test
jno
adc
add
sbb
inc
fstpt
cld
fdiv
push
dec
pop
divl
fucomi
or
ja
sbb
xlat
das
push
iret
xchg
add
fs
and
in
jmp
pop
xchg
mov
and
rcrb
sub
sti
icebp
int
fimull
ss
mov
and
mov
loopne
xchg
mov
out
fldcw
bound
or
adc
aas
fnsave
ret
cltd
sahf
mov
lret
cmp
int3
daa
cmpsl
icebp
movsb
adc
push
lock
sti
xlat
std
int
sti
inc
shl
inc
sbb
dec
pop
jmp
in
push
pop
out
fistl
cmp
sbb
pusha
out
push
xor
add
xchg
add
movsl
push
jo
das
sbb
cltd
cmp
ds
push
add
sbb
lea
sub
cs
push
in
push
push
fs
aad
pop
push
mov
inc
in
mov
dec
popa
je
xchg
cwtl
mov
jns
stc
jge
pop
fiadds
aaa
je
and
mov
adc
mov
bound
push
jmp
and
popf
stc
mov
mov
in
sub
sbb
mov
push
lods
sbb
fnstcw
xor
add
cwtl
lods
scas
add
aas
sbb
aad
scas
jae
xchg
fldl
sub
jmp
scas
mov
out
pop
int3
jae
gs
loopne
inc
test
hlt
adc
pop
add
xchg
testl
fidivrl
mov
or
imul
mov
push
pop
out
out
add
add
push
icebp
push
or
nop
mov
cli
xor
dec
out
jle
je
repz
in
and
sub
sub
sub
push
xlat
jle
push
mov
inc
mov
loop
inc
inc
in
inc
dec
xchg
jecxz
cmp
lcall
push
fldl
jnp
adc
enter
lahf
outsb
data16
imul
mov
xchg
xchg
push
xchg
inc
cltd
cwtl
dec
lcall
repz
ljmp
pop
xchg
mov
rolb
mov
mov
lahf
mov
cmc
cmp
scas
sti
xchg
mov
or
mov
jbe
jle
jg
jb
lds
lret
ficoml
data16
lock
cli
hlt
repnz
sti
cli
out
mov
loope
mov
imul
mov
aaa
adc
clc
outsb
je
sbb
repnz
aad
add
loope
add
out
or
or
xor
jne
xor
sub
in
aas
pushf
and
sub
cmp
es
sub
mov
lret
aad
push
repnz
cltd
xor
pop
sub
mov
pop
shlb
inc
popf
loopne
testb
dec
dec
popf
push
jae
lods
or
jge
call
inc
xor
data16
dec
gs
mov
outsb
sbb
lret
sub
aam
insl
fstl
roll
das
lock
gs
int3
adc
test
movsl
adc
push
or
inc
mov
leave
stos
push
cmc
lods
mov
jmp
xlat
pop
pop
and
rorl
leave
fwait
sbb
int
iret
addr16
inc
test
insl
mov
fbstp
xchg
loop
in
or
call
out
out
adc
adc
jb
mov
cli
ret
mov
inc
std
push
mov
in
dec
or
add
xor
pop
cmp
aas
inc
ja
int3
clc
rcrb
sub
insb
mov
ficoms
push
or
ret
fwait
jl
test
inc
mov
in
or
and
jnp
jno
push
push
popf
jp
icebp
jg
popa
jecxz
bound
fisttps
adc
outsl
mov
xchg
movl
popf
in
pushf
in
push
idiv
xor
mov
mov
push
mov
dec
and
mov
adc
mov
movsb
test
sub
inc
sbb
repz
lea
sub
and
test
cli
int
iret
into
mov
pop
mov
mov
jg
into
test
mov
mov
jmp
jl
testl
sbb
push
jno
orb
jo
or
push
xor
test
sbb
and
jge
mov
pop
sub
push
push
add
or
stc
or
pop
inc
inc
add
dec
inc
or
imulb
mov
fst
mov
sarb
adc
icebp
jle
in
arpl
imul
clc
xchg
or
mov
and
jge,pn
loopne
or
mov
xchg
in
ljmp
mov
aam
cli
mov
cmc
mov
add
mov
shll
mov
add
sbb
js
test
lret
xor
movsl
out
into
cmp
shl
hlt
fdivrp
stc
cmp
pushf
push
sar
loope
jecxz
jg
lods
out
lods
mov
out
mov
pop
push
stc
pop
sbb
leave
cli
cwtl
cli
pop
test
add
jbe
popa
xor
pop
xor
cmp
mov
and
and
fisubl
pushf
sub
pop
mov
push
aaa
push
push
lods
pop
iret
pop
cmp
inc
sub
jmp
inc
scas
pop
jno
repz
cs
add
into
arpl
jl
and
and
jb
into
dec
mulb
xchg
xchg
fcoms
cwtl
fdivr
scas
pushf
and
orb
out
stos
ror
loop
sbb
push
mov
mov
daa
mov
jne
fcmovne
xchg
inc
mov
mov
xlat
fcoms
fmulp
add
xchg
mov
shlb
mull
les
xchg
mov
pushf
jb
in
sub
cld
xchg
mov
mov
adc
push
js
sbb
or
pop
add
or
aas
sbb
movsl
pop
xor
adc
insb
aad
jb
fisubl
dec
xchg
add
das
out
push
rclb
jg
push
pop
test
pop
add
pop
pop
sub
adc
dec
mov
ds
sbb
or
inc
ja
jns
lcall
dec
arpl
or
add
imul
adc
cmp
xchg
lock
hlt
cltd
fwait
ret
stos
lahf
jno
addb
pop
cli
pop
aad
and
mov
mov
sub
sbb
aad
enter
repnz
inc
test
fwait
aam
and
mov
into
xchg
faddp
sti
loop
mov
shlb
lahf
stos
into
inc
lock
cmc
aad
lods
scas
call
push
mov
call
push
out
lds
cld
jg
adc
mov
sbb
sbb
add
dec
pop
and
pop
adc
or
mov
xor
call
scas
adc
inc
add
inc
dec
xor
mov
rolb
push
ljmp
jmp
aad
cmpsb
sbb
arpl
dec
mov
pop
jae
xor
pop
in
daa
and
sarb
jg
popa
and
cmp
iret
sub
sbb
fcoms
and
leave
in
call
adc
loop
stos
jle
xlat
xchg
mov
lea
in
sub
xor
into
mov
mov
inc
ffree
jecxz
cmp
stos
lret
mov
rcrb
mov
mov
movsl
out
mov
es
insl
pop
pop
pop
fistpl
cltd
cwtl
fadds
scas
mov
loop
popf
ret
mov
jle
lret
xchg
mov
daa
inc
pop
sub
sarl
sarb
popf
insb
push
or
insb
xor
cmp
in
and
pop
add
cmpsb
sub
jbe
inc
push
rclb
test
push
pop
add
popa
inc
cld
inc
popa
or
adc
jno
adc
je
jbe
js
imull
jg
aaa
lret
pushl
mov
std
push
out
in
cmp
xchg
lret
cltd
popa
arpl
in
add
xchg
enter
out
push
mov
ljmp
mov
mov
cmpsl
adc
jmp
push
leave
shrb
rcrl
fcmovu
jbe
dec
rcll
ret
xchg
enter
cs
jmp
cmc
ja
divb
pop
mov
inc
mov
int3
dec
pop
jmp
in
loope
lods
inc
adc
test
sbb
jne
push
cmpsb
add
bound
insl
push
test
xor
xchg
xchg
stos
jne
shrb
and
and
adc
das
mov
fistl
add
loopne
cmp
int
pop
cmc
fstps
inc
inc
outsb
repz
mov
xchg
rol
out
jo
cmp
enter
xor
pusha
fbld
fdivs
int
cmp
iret
or
leave
xchg
movsl
xchg
and
xchg
pushl
xor
fwait
dec
popf
adcb
roll
cmp
loopne
push
sbb
dec
js
cltd
dec
mov
movsl
lea
sub
xor
jbe
aad
xlat
gs
lods
lcall
jl
pop
int
sub
popa
scas
jae
mov
out
xor
push
cmc
test
push
stc
clc
pop
fcmovnb
or
addr16
data16
and
ljmp
adc
pop
xlat
sbb
pop
sti
add
sub
mov
or
fcompl
loop
xor
faddl
sub
and
mov
addr16
cs
push
jecxz
push
sbb
xor
pop
fcoml
inc
jge
inc
loope
call
sub
sbb
je
fdivrl
fisubs
rsqrtps
aam
jecxz
sub
sub
push
inc
dec
jns
adcb
int3
xchg
test
lcall
xor
mov
xchg
icebp
sarl
mov
and
mov
mov
ficomps
dec
add
add
aas
fldcw
je
xor
jg
bound
mov
fnstsw
dec
faddp
push
scas
and
mov
mov
xor
clc
imulb
sti
mov
xchg
outsb
pop
xchg
fwait
repnz
dec
xchg
out
jo
js
xchg
out
ja
inc
js
insl
orl
icebp
push
push
roll
pop
mov
leave
pusha
or
lods
outsb
xor
mov
cmpsl
mov
insb
and
adc
push
jns
sub
push
add
mov
pusha
pop
pop
push
pop
cmp
movsb
inc
pop
test
dec
dec
call
jno
xor
adc
xchg
jns
stos
mov
popa
arpl
sbb
imul
adc
aam
sbb
sbb
sbbl
and
sti
shlb
mov
lock
mov
inc
lds
cmpsl
xchg
dec
xor
push
lods
call
mov
aad
xlat
int3
fchs
fisttpl
mov
imul
int
iret
mov
xchg
repnz
gs
leave
aam
fmul
add
decb
rcrl
aas
jecxz
ret
out
adc
leave
adc
push
adc
mov
push
mov
sbb
fcoml
jbe
in
sub
ljmp
cmp
cmp
shlb
cmp
sub
add
add
push
and
je
pop
jns
dec
insb
pop
dec
pop
inc
hlt
inc
pusha
dec
inc
lds
insb
fistpl
jbe
pop
jo
jb
cmp
jnp
ret
xor
psllq
add
xchg
imul
je
mov
and
jge
cmp
sahf
andl
mov
mov
mov
mov
mov
or
movsl
pop
jge
repnz
scas
shll
mov
inc
mov
nop
decb
pop
jns
sbb
jbe
insl
jg
icebp
pop
push
scas
sbb
out
adc
es
out
and
and
stos
adc
call
and
sbb
push
das
in
add
add
mov
or
jae
mov
push
outsl
cwtl
push
faddl
dec
aaa
fmuls
or
and
mov
aaa
add
jb
push
push
in
push
nop
push
bound
fnstenv
pop
pop
mov
movsb
push
pop
pusha
fcomip
dec
jmpw
jno
jae
jne
pop
sub
push
sarb
xchg
addr16
hlt
lds
pop
cld
outsb
mov
nop
mov
out
loopne
bound
outsb
adc
xor
xor
loop
push
mov
pop
mov
movsl
movsb
loop
shlb
jnp
rcl
inc
xor
xchg
mov
scas
fdivrs
fstp
sbb
shrb
lds
fcomip
leave
enter
fcmove
es
lock
pop
rclb
sbb
ret
std
dec
xchg
scas
dec
pop
push
jl
dec
jmp
pop
call
test
lea
mov
jbe
popa
imul
cs
push
addb
add
in
or
sete
out
dec
sbb
aaa
popa
cmp
fnstcw
xchg
shl
es
add
sub
sub
int
pop
aas
pop
stos
pop
stos
inc
mov
add
dec
inc
jbe
pop
dec
in
push
inc
loopne
jb
gs
jns
jnp
iret
inc
jg
popa
loopne
bound
insl
inc
int
xor
pop
xor
imulb
nop
in
xchg
sbb
sarb
in
popf
inc
lahf
mov
leave
mov
xchg
dec
mov
aaa
mov
mov
mov
lods
mov
test
test
outsb
push
pop
cld
cmp
jno
daa
or
faddp
sti
test
lds
stos
sub
xchg
cmp
insl
jno
push
popf
mov
mov
divl
aas
psrlw
loope
jecxz
in
mov
pop
push
xor
scas
int3
jge
adc
xor
mov
xor
pop
inc
adc
or
daa
or
xor
sbb
pop
int3
out
fnstsw
and
and
cmp
jecxz
test
cmp
das
aam
mov
aaa
jnp
pop
xchg
pop
pop
sahf
mov
inc
mov
or
push
das
dec
xchg
pusha
fnsave
jne
ja
int
cmpsb
jp
jl
jle
pusha
sbb
inc
xchg
fstpt
repnz
fs
test
push
fwait
lcall
push
out
adc
ret
mov
mov
lret
and
fsubrl
mov
shlb
stos
cmpsb
or
stos
mov
dec
insb
test
aam
mov
mov
shlb
repz
leave
sub
cmp
icebp
lock
mov
imull
cmpsl
and
cli
outsl
pop
or
loope
nop
mov
xor
jmp
iret
insb
cmpsl
adc
out
adc
sbb
sbb
in
notb
or
or
or
push
inc
xor
xchg
xor
cmp
cmp
cmp
and
sub
push
mov
bound
jp
pop
pop
test
call
inc
dec
sbb
dec
add
dec
fs
jb
je
add
jl
cwtl
fnstsw
popa
sub
popa
cmp
pushf
cwtl
adc
outsl
push
mov
movb
testl
orl
lcall
mov
mov
push
pop
push
mov
iret
mov
movsb
repz
rclb
shrl
stc
cmp
fdivrl
add
aam
addr16
enter
data16
std
push
lock
scas
mov
leave
push
stos
test
jbe
mov
stos
into
iretw
pop
sub
in
leave
iret
or
mov
jmp
sub
sbb
add
jne
and
pop
cs
scas
or
fmuls
das
in
ds
movsl
xchg
sbb
adc
xchg
sbb
mov
das
pop
push
push
dec
sbb
push
push
rcrl
fadd
fstpl
cmp
inc
mull
inc
inc
arpl
adc
cmpsl
pushl
ffree
jns
mov
jl
jle
sbb
mov
fsts
adc
mov
stc
xchg
sub
fwait
xor
addl
xchg
jle
movsl
xor
or
or
mov
in
test
stos
and
scas
add
shlb
sbb
iret
fistps
shlb
mov
cmc
inc
daa
vmulpd
fnstenv
lods
imul
pop
adc
into
jmp
and
lds
adc
adc
sbb
pusha
sbb
or
add
dec
out
fdivp
jmp
rorb
loope
imul
cmp
and
and
and
cltd
sub
pop
sub
ret
mov
push
pop
pop
addl
shr
icebp
sbb
dec
addr16
dec
shlb
jo
or
xorb
push
fnstcw
pop
frstor
negb
push
push
ljmp
nop
mov
xchg
xchg
push
jp
mov
xchg
aaa
leave
addl
add
push
lea
mov
xorb
mov
mov
xchg
loopne
mov
xchg
test
cmp
ds
out
rcl
mov
mov
xchg
filds
lds
ret
int3
iret
lcall
pusha
iret
sbb
sti
dec
mov
iret
mov
add
mov
pop
inc
adc
jg
rcrl
sbb
in
add
js
sbb
bswap
push
movb
ficomps
mov
cli
cmp
cmp
and
and
lds
jae
push
pusha
sub
aas
ss
xchg
cli
jmp
pop
sbbb
stos
inc
mov
pop
dec
stos
nop
cmovl
or
je
dec
lods
cli
mov
jge
sarl
stc
jmp
or
imul
rcll
xchg
aas
aaa
sbbb
adc
loop
jae
mov
mov
jno
jecxz
mov
loop
cmp
mov
mov
mov
std
cmpsl
push
sarl
lock
int
mov
aad
xlat
xchg
inc
dec
mov
fstp
dec
sar
mov
inc
jecxz
enter
frstor
sbb
repz
inc
movsl
stc
pushf
std
cld
and
jecxz
jge
mov
out
scas
ljmp
adc
pop
nop
hlt
insl
sbb
lcall
aas
or
add
fstpt
xor
ds
cmp
mov
xor
and
daa
and
gs
sub
movsb
push
push
sarb
std
or
pop
lret
mov
pusha
movsl
daa
dec
dec
fimuls
cmp
outsl
aas
jg
jl
xchg
jbe
add
jge
cmp
inc
arpl
gs
xor
mov
dec
dec
nop
mov
jb
test
sahf
or
xchg
sbb
in
mov
pop
mov
sarl
testb
shr
cmpsl
ret
test
xor
sti
je
sub
xlat
andl
cmp
dec
sarb
push
out
pop
mov
loopne
or
popf
notb
sub
aas
rclb
out
call
pop
pop
adc
pop
adc
sbb
sbb
cli
iret
push
xchg
mov
add
addl
or
xor
popf
aaa
repz
fwait
sub
add
add
sub
jns
aaa
cmp
xchg
inc
push
scas
push
adc
pop
lret
and
inc
push
dec
cmpsl
sbb
mov
ja
insl
pop
gs
sbb
cmp
mov
ss
je
push
jo
shll
int
xchg
loopne
xchg
mov
dec
fsubrl
stos
addl
mov
push
lea
ja
xor
inc
and
mov
cmpsb
xchg
les
cmpsb
std
mov
stos
testb
scas
lods
notl
movsb
aad
test
test
iret
fisttps
rcrb
imul
in
int3
orb
fsubs
fdivr
push
adc
jns
dec
jecxz
lock
xor
cli
jmp
add
imul
sbb
sub
add
or
in
test
xor
lods
test
xchg
jmp
pop
and
mov
cmpsb
sub
popf
lahf
dec
jmp
lahf
push
add
pop
mov
dec
sub
out
push
dec
dec
dec
or
jo
loopne
in
jae
movsb
js
imul
arpl
test
jo
js
out
scas
outsb
ret
cmp
and
inc
pop
lcall
mov
push
test
jecxz
push
addr16
mov
push
mov
iret
lods
sub
mov
cmpsb
sub
scas
inc
roll
shll
fcmovnu
jo
mov
ret
hlt
outsb
pusha
pop
lret
iret
jle
xor
jmp
push
jnp
pushl
in
and
in
pop
mov
adc
push
sbb
mov
repz
jp
stos
or
fnsave
clc
xor
loopne
in
cmp
sub
cmp
and
int
adc
push
push
push
xchg
push
pop
scas
pop
pop
pop
bound
pop
pop
addb
xchg
inc
aas
inc
repz
stos
dec
pop
adc
bnd
push
jne
ja
nop
js
sbb
popa
pusha
fdivrs
xor
push
fisttpll
imul
cwtl
cwtl
mov
sub
lock
rorb
fdivs
push
or
mov
inc
xchg
movsl
or
cmp
lods
adc
aad
jae
fnstenv
mov
fstp
int3
mov
ret
vpxor
nop
rorl
jp
orb
mov
mov
sti
in
std
leave
pop
pop
push
add
or
jmp
in
pop
out
stos
adc
and
sbb
pusha
in
add
or
or
mov
les
cmp
enter
test
es
sub
inc
pop
out
push
loope
push
loope
mov
fcompl
pop
shll
lea
inc
mov
dec
je
cmpsl
dec
dec
jo
jb
aad
insb
jns
out
js
imul
gs
movsl
sbb
lea
scas
nop
ffree
les
lcall
lods
inc
lods
test
mov
push
cwtl
cmpsl
push
mov
fs
mov
mov
cmpsb
adc
imul
rcl
ja
xlat
aaa
fnstcw
daa
faddl
pop
rcl
sub
pop
leave
pop
lret
mov
fcomi
cmpsl
std
sub
adc
sub
incl
repnz
loop
or
jo
jmp
in
test
out
adc
arpl
and
pop
cld
add
dec
in
add
mov
outsl
xchg
jnp
unpckhps
lcall
leave
stc
cmp
and
cmp
stos
imul
sub
stc
inc
imul
push
addr16
dec
pusha
jo
fcoml
pop
repnz
sub
fcomi
and
fstpt
stos
jae
dec
jae
xchg
je
xchg
in
aad
jl
or
fsubs
js
xchg
lock
xchg
insl
call
les
adc
cwtl
jb
popf
cltd
lea
fwait
adcb
and
fimuls
mov
outsb
sub
push
pop
adc
enter
and
lahf
fwait
inc
pop
cmp
mov
fcomps
fstp
push
ljmp
inc
filds
lret
iret
jecxz
lock
inc
cmc
add
sti
insl
lods
loopne
dec
dec
popf
jg
ret
xorl
cwtl
xchg
adc
test
sbb
add
jno
xchg
xchg
loope
or
loope
shufps
and
jno
push
xchg
inc
cmp
stos
and
add
lret
cwtl
stos
subb
jge
into
push
sub
push
add
jne
jl
je
sbb
and
add
dec
dec
sub
scas
shlb
fstl
jae
xor
js
push
fwait
sarb
cld
xlat
bound
sbb
insl
shlb
iret
lret
or
or
mov
rolb
mov
dec
mov
pop
and
shll
stos
mov
mov
or
push
std
stos
lods
push
scas
leave
shlb
jb
mov
aaa
into
rcr
push
sub
jmp
lret
lods
bound
ljmp
clc
sbb
dec
leave
xor
or
movsb
mov
push
sti
pop
daa
outsl
pop
lock
and
rolb
sbb
add
out
and
pop
movsl
movsl
push
push
rorl
aaa
mov
outsb
xor
test
inc
and
es
repz
or
mov
inc
into
jns
pop
mov
xor
inc
pop
inc
fsts
inc
dec
imul
addl
test
xchg
icebp
arpl
lock
les
imul
sub
xor
add
xchg
xor
xchg
lock
hlt
adcb
sahf
xchg
in
icebp
sar
lea
xchg
pop
mov
adc
iret
lcall
mov
je
std
test
lods
push
mov
adc
inc
fcomi
lock
filds
out
lods
subb
fmul
xchg
imul
icebp
or
aaa
cmc
hlt
xchg
mov
decl
in
movsl
shr
imul
mov
push
adc
adc
int3
push
jg
mov
fiaddl
les
mov
pop
aad
repnz
out
loopne
out
cmp
rcrl
bound
imull
cmc
mov
mov
js
push
add
outsb
mov
mov
inc
adc
aad
xchg
dec
out
orb
jg
xchg
lcall
dec
sbb
adc
es
jo
xchg
push
xchg
dec
xchg
insb
roll
jecxz
or
insb
sbb
mov
shlb
test
mov
pop
mov
mov
mov
mov
xor
lods
mov
pop
pusha
scas
add
push
or
xchg
fists
push
ret
lods
cs
test
push
xchg
push
aad
scas
adc
mov
cld
out
loope
popf
xchg
loope
out
jmp
in
sbb
pushf
adc
xor
int
dec
add
add
das
pop
cmc
adc
xor
aam
addr16
dec
dec
pop
add
sub
jno
mov
pushf
les
sub
inc
js
dec
pop
push
mov
ret
test
pop
jo
pop
movsb
cwtl
inc
pop
inc
mov
jne
inc
mov
dec
push
jo
adc
out
int
dec
jne
ja
xlat
js
shr
dec
jg
popa
add
nop
gs
imul
cli
mov
xchg
ss
scas
aas
fisubrl
outsl
lahf
sahf
jo
xchg
imul
mov
gs
xor
dec
pushf
movsl
and
mov
add
xchg
mov
call
mov
fistpl
add
pop
pop
rcll
or
iret
push
icebp
lock
dec
clc
inc
cli
sahf
jp
test
in
out
xchg
fisttpl
mov
sbbl
sbb
push
ret
add
std
inc
add
push
or
cmp
shl
mov
mov
or
xor
jns
and
and
inc
fisttpl
aaa
popw
cld
push
push
orb
and
pop
pop
sub
inc
inc
fs
mov
sub
loop
cmc
ret
repnz
and
js
jmp
push
pop
jle
mov
gs
push
pusha
inc
add
insl
push
outsl
pop
or
xchg
jns
cltd
pop
roll
jle
push
xchg
addb
push
pop
dec
mov
stc
popl
ja
fidivl
int
xor
dec
cmpsl
mov
mov
add
shl
xor
inc
aad
dec
jle
dec
fdivl
lahf
movsl
ljmp
pop
lret
dec
into
fdivp
test
sbb
je
cmp
adc
orl
ljmp
adc
adcl
imul
addl
out
or
or
jo
or
andb
and
cmp
cmp
add
aaa
dec
and
sub
lds
nop
adc
pop
mov
adc
loop
inc
inc
dec
ficoml
dec
into
xor
push
fcoms
ja
jns
stos
inc
jge
xchg
pop
popa
inc
dec
gs
jne
dec
jns
mov
fsubl
xchg
pop
outsb
xchg
xchg
sbb
fwait
lcall
addb
test
lock
pop
or
mov
mov
fbld
cmpsl
xor
iret
or
cld
scas
dec
rcrb
shll
dec
pop
movsl
out
or
fmull
pop
ret
dec
nop
sahf
loopne
lret
scas
fiaddl
aaa
repz
mov
sub
mov
inc
in
mov
call
jl
jne
dec
js
pop
imul
stos
add
xor
cwtl
jmp
popa
jbe
jne
stos
sbb
and
cmp
dec
cmp
out
enter
and
stos
sub
jns
and
ret
cs
addr16
push
sub
push
mov
inc
pop
into
inc
ficomps
inc
cmp
push
adc
dec
add
dec
jb
ja
ja
pop
sbb
or
pop
arpl
aam
imul
mov
xchg
insb
es
mov
jmp
loopne
jmp
or
out
and
xchg
aam
mov
mov
mov
mov
mov
lods
cmp
rolb
sub
fsave
js
mov
retw
les
leave
cs
icebp
test
cmc
adc
sti
pop
mov
cmp
add
stos
add
loopne
sub
jne
xchg
leave
mov
jne
mov
jg
in
fcomi
jo
or
xor
xor
and
cmp
adc
and
cmp
sub
or
das
xor
ja
inc
icebp
inc
pop
insl
pop
in
popa
dec
in
cmp
inc
inc
cld
inc
cmc
pop
inc
mov
jno
and
je
sub
adc
stos
sbb
fsubl
jo
addr16
int
cmp
add
in
cwtl
push
cmp
fldl
inc
mov
stc
lea
mov
or
js
test
mov
aaa
test
stos
lret
lea
shll
jecxz
xlat
jne
dec
fcomi
aas
mov
ret
mov
push
jecxz
pop
jne
cmpsb
push
std
enter
fwait
inc
dec
in
cmpsb
pop
imul
ljmp
jae
and
mov
jnp
stos
sub
fildll
jne
push
cmp
or
and
dec
aaa
daa
and
and
and
and
daa
mov
outsb
mov
jg
cld
decb
push
pop
call
add
jbe
push
call
push
dec
arpl
inc
pushf
dec
jmp
jae
inc
shrb
push
fcmovbe
ret
jle
pusha
dec
iret
sbbl
sbb
adc
jg
bnd
cltd
mov
repnz
xor
pop
addb
and
movsl
loop
mov
and
adc
cmpb
mov
mov
test
adc
xchg
aad
mov
dec
jg
cld
rcrl
push
pop
scas
lret
into
cmp
jmp
repnz
and
enter
std
int
xchg
loope
jecxz
neg
out
call
or
adc
sbb
push
fadds
xchg
test
pop
pop
or
dec
adc
setle
xor
ss
cmp
ds
and
and
lea
sub
outsb
push
clc
sbb
pop
xlat
xor
adc
and
inc
test
fsubp
dec
dec
add
jo
jb
into
ja
jns
pop
push
jge
aam
popa
pusha
push
imull
repnz
imul
cltd
outsb
test
xchg
test
mov
adc
test
xchg
lea
mov
fcmovb
lock
pop
mov
mov
add
push
rorb
mov
test
clc
inc
lods
mov
push
pop
in
rorl
dec
mov
mov
ret
sub
mov
mov
int
or
repnz
fbstp
xor
fdivr
aaa
dec
loope
arpl
push
push
mov
in
ds
inc
xchg
sbb
stos
int3
scas
ficompl
jl
mov
mov
mov
fwait
pop
xchg
syscall
test
xor
and
cmp
dec
cmp
xorb
je
sub
sub
sub
cs
stc
das
push
clc
movb
inc
pop
xor
cmp
icebp
loop
inc
inc
fwait
and
xor
pop
sub
jo
inc
xchg
je
jbe
js
das
inc
out
push
popa
and
sub
test
mov
xor
ret
jge
icebp
popf
loopne
xorl
and
mov
iret
rcrl
filds
pushf
pop
add
jmp
out
mov
jge
ja
popa
out
stos
lods
mov
rorl
fmuls
fisubrl
fbld
jns
push
stc
enter
imul
addr16
push
push
pop
sbb
pop
push
mov
loope
jno
sbb
ss
gs
push
xchg
pop
dec
adc
sbb
sbb
mov
sub
add
arpl
mov
cmp
push
cs
imul
mov
push
popf
dec
pop
xchg
test
and
sub
aam
fsts
divl
push
pop
in
pop
hlt
or
sar
inc
jae
in
pop
fiaddl
out
add
enter
xor
dec
xor
jle
sub
cmc
fs
push
dec
outsl
fdivrl
outsl
insl
inc
or
fwait
loopne
lahf
sahf
push
sbbl
test
mov
jle
mov
pop
mov
and
mov
mov
in
cmp
stos
push
pushf
jb
inc
shr
sarb
cli
inc
push
add
data16
sarb
leave
and
xor
int3
push
into
mov
hlt
sbb
test
data16
int3
mov
out
jmp
inc
out
cli
adc
adc
stos
push
jno
add
mov
cmpsb
inc
add
or
push
push
xor
ss
adc
cmp
mov
xchg
and
lock
sub
lods
sub
sarl
jge
bound
dec
fstpt
pop
cmp
pop
sub
mov
mov
dec
les
jno
nop
or
je
push
dec
js
scas
jecxz
jg
and
and
adc
mov
pop
push
pop
and
xchg
shl
jae
fwait
dec
cs
test
cmpl
jge
mov
sub
daa
insb
shll
pop
push
and
and
in
mov
xchg
out
sbb
scas
mov
ss
fbstp
cwtl
rol
cld
les
leave
stos
lret
out
int
sbb
sbb
xorl
adc
in
fcompl
inc
ljmp
out
adc
push
test
sbb
inc
aaa
xchg
pop
add
or
mov
popf
xor
aaa
das
xor
cmp
and
jo
insb
and
jp
cmpb
mov
mov
jne
jge
pop
inc
lods
lahf
in
inc
adc
in
inc
sub
mov
dec
int
adc
jne
adc
imul
push
mov
repnz
insl
insb
ljmp
xchg
pop
mov
stos
sahf
sahf
mov
test
mov
lea
cli
mov
sub
mov
adc
movsl
cmc
inc
cmpsb
pusha
test
fdivrl
movb
aam
pop
fxch
fninit
fstp
jae
inc
mov
shrb
je
cmp
in
lret
add
hlt
xchg
jno
cmp
ja
mov
cmc
call
mov
push
adc
nopl
sbb
push
sbb
mov
shl
dec
or
xor
popa
xor
cmp
dec
pop
add
pop
popa
jecxz
sub
inc
sub
enter
cmp
pop
adc
pop
jnp
pop
fldl
outsb
clc
jns
inc
mov
dec
scas
cli
jno
push
jbe
js
sub
xor
bound
fs
add
outsb
in
nop
pop
xchg
aaa
mov
xchg
add
fwait
lahf
mov
out
add
lea
mov
mov
jne
mov
mov
sbb
mov
cmp
ljmp
pop
sub
adc
xlat
stos
fldcw
lock
fiadds
push
and
sub
insb
mov
lock
fnstenv
clc
in
xchg
cmpsb
cld
push
jnp
loopne
sub
out
xchg
cmp
mov
adc
sub
sbb
out
pop
sbb
and
add
mov
test
xor
sbb
push
iret
and
int
and
sub
cmp
into
xor
mov
jb
ficomps
sbb
roll
inc
inc
mov
fimull
jl
jno
sahf
jb
je
test
mov
hlt
cmp
gs
addr16
push
outsl
and
sub
loop
out
pushf
mov
addl
mov
divl
mov
lea
mov
mov
test
scas
loopne
mov
aam
cwtl
shrb
jge
and
ret
mov
cmpsl
int3
add
loopne
bound
testl
int
test
loope
jecxz
in
out
and
sbb
out
sahf
adc
sbb
ficompl
sub
push
add
pop
push
or
pop
sub
daa
loopne,pn
dec
out
sub
cmp
and
dec
pop
pop
add
cmp
sub
mov
mov
sbb
leave
mov
stos
pop
inc
fiaddl
and
dec
xlat
dec
lods
inc
dec
shll
arpl
stc
sbb
jp
jnp
sbb
sbb
mov
and
push
insl
pop
outsl
lea
imul
popf
cli
and
test
out
mov
cmp
mov
push
mov
sbb
lea
ficoml
fistpll
cmp
data16
cmpsl
mov
lods
pop
fstps
xchg
jnp
filds
lods
fdiv
xchg
iret
popl
les
paddw
loope
jecxz
xor
sbb
jo
mov
adc
mov
je
test
add
mov
and
adc
mov
jecxz
xor
cmp
cmp
outsl
ds
lea
mov
xchg
sub
jmp
push
push
daa
push
add
pop
and
ljmp
roll
cwtl
loop
inc
mov
in
fldt
ja
jns
add
movsb
scas
mov
gs
data16
rorl
in
cmp
cmc
xchg
xchg
xchg
cwtl
add
popf
cs
fadds
addb
dec
cmp
cmp
outsl
pop
pop
es
hlt
xor
mov
repnz
movsb
add
int
scas
add
data16
sti
xor
js
shlb
mov
int3
pop
call
add
je
or
sti
aam
cmc
call
rcrb
fwait
ljmp
adc
sbb
push
sbb
push
push
add
test
mov
sbb
push
les
xor
xor
sub
push
cmp
pop
cmp
and
in
pop
and
jo
push
mov
js
sub
mov
loope
pop
lcall
dec
pop
dec
lret
jecxz
dec
jno
pop
add
xor
jp
xor
loopne
pusha
arpl
xor
push
xchg
ret
jge
xchg
xchg
sahf
xchg
cmp
js
popf
jo
and
incl
jo
sbb
xchg
mov
xchg
mov
lds
fdivrs
pop
inc
movsb
cmpsl
jbe
adc
pop
jb
jp
lds
pop
fistl
pusha
loop
and
divl
mov
mov
int
arpl
cli
idiv
int3
loop
cvtdq2ps
loope
inc
jp
in
jnp
dec
jmp
pop
dec
out
scas
adc
jge
pop
push
sub
sbb
push
add
add
rclb
push
pop
cwtl
rcll
je
and
aas
or
and
mov
das
fidivs
dec
push
sbb
lds
jo
pop
outsl
and
xor
movsb
inc
fwait
inc
lock
dec
movsl
call
ja,pn
and
jnp
std
jl
out
push
arpl
jecxz
push
jb
outsb
sub
xchg
xchg
les
lcall
sahf
je
in
xchg
outsb
out
lods
repnz
add
inc
mov
mov
inc
push
push
test
lret
mov
sbb
mov
mov
flds
ja
inc
fdivl
fld
sarb
popf
cmp
enter
int3
call
repnz
out
cli
sbb
decl
dec
dec
in
out
lcall
or
pop
cld
jl
add
sbb
sbb
jns
push
xor
push
mov
push
xor
xchg
fdivs
mov
vpshld
aad
and
mov
mov
jno
push
enter
push
sub
or
cli
rcrb
cmpsl
dec
pop
jle
pusha
sbb
cs
movsl
fisttpll
js
jle
andl
fs
data16
push
outsl
stos
xchg
or
mov
pop
mov
push
in
int3
inc
test
cli
mov
call
pushf
pushf
mov
mov
and
cmpsb
add
mov
movsl
dec
movb
sbb
pop
aad
loopne
cmc
mov
and
sub
mov
and
sbb
inc
shll
sub
adc
idiv
es
xor
jle
push
idivb
mov
fisttpll
and
lcall
mov
inc
fildl
call
mov
aam
or
xor
sahf
xor
adc
pop
out
adc
imul
divb
int3
fidivrl
sub
subl
jns
out
pop
xor
pop
lret
push
inc
cmp
dec
leave
jno,pn
ret
and
and
jl
jle
pusha
in
jecxz
mov
sub
jp
sub
ficoml
push
fwait
popf
pushf
sub
pop
xchg
test
sub
cmp
subb
outsb
push
mov
mov
rcll
mov
repnz
and
popf
into
add
mov
xor
dec
jnp
fisubs
ret
dec
lds
lret
int
iret
mov
cmc
hlt
lret
lahf
insl
xchg
std
jmp
xor
lcall
pushf
mov
mov
sbb
sbb
cmp
test
popa
dec
mov
or
ljmp
xor
aad
aaa
cmp
mov
sarb
and
and
add
sub
sub
inc
in
das
mov
push
mov
sbb
xor
xchg
inc
push
inc
loop
inc
dec
xchg
dec
inc
repz
shll
shll
js
ljmp
cmc
bound
or
mov
mov
insl
stc
outsl
insb
fistl
out
cwtl
push
lcall
ror
jmp
xchg
lcall
mov
inc
mov
and
cmc
mov
sbb
inc
sbb
loop,pt
and
roll
fstps
lock
mov
ret
enter
xchg
cmp
iret
xchg
lock
cmc
lock
imul
clc
pop
pop
std
jbe
decb
sarl
mov
pop
fsts
ds
xchg
and
fwait
sub
push
add
clc
push
gs
or
pop
insl
or
push
mov
mov
jle
pop
movsl
imul
and
das
lret
pop
sub
lds
dec
inc
push
inc
pop
cmp
cld
insb
jmp
xlat
push
xchg
adc
add
or
stc
lcall
shlb
and
in
int
jp
stc
dec
xchg
add
arpl
add
loope
call
notb
jbe
adc
xchg
pop
xchg
pushf
imul
fisubrs
movsl
mov
xor
push
mov
and
nop
dec
mov
movsl
push
pop
test
dec
jge
popa
sarb
gs
mov
insl
add
fmulp
mov
pop
mov
mov
mov
repnz
int3
sti
lret
mov
orl
lret
adc
in
out
hlt
jmp
inc
pushf
out
rclb
and
stc
adc
push
sbb
pop
fwait
add
and
mov
mov
insl
test
add
push
inc
loop
sub
sub
sub
repnz
mov
out
addb
and
xor
inc
inc
decl
sahf
dec
dec
repnz
imul
jne
jbe
or
pop
adc
popa
shlb
aaa
data16
imul
test
xchg
sbbl
or
or
and
mov
out
hlt
mov
out
mov
pop
sahf
mov
pop
mov
add
cmpsl
popa
fiadds
scas
out
and
aam
push
push
ficompl
adc
adc
mov
iret
xchg
repnz
repz
sbb
pop
and
pop
popf
jnp
cmp
loop
test
mov
notb
adc
sbb
sbb
push
mov
add
add
jne
cmp
sbb
push
and
inc
sbb
xchg
mov
inc
jae
dec
push
and
mov
and
mov
inc
add
xchg
push
in
push
inc
and
or
pop
push
pop
pusha
and
inc
call
dec
ja
sub
jno
jae
jne
ja
jns
je
jge
push
add
push
rorb
fisttpl
insl
and
sub
outsb
in
fwait
pusha
je
or
movsl
movsl
inc
xchg
ret
xchg
gs
inc
sbb
in
mov
shll
movsb
push
add
add
sub
add
rorb
fmuls
fisubrs
or
scas
stc
enter
xchg
iret
icebp
jbe
jecxz
test
mov
loope
lcall
movsl
mov
leave
das
out
out
shr
adc
mov
dec
jne
pop
mov
insl
sbb
in
and
or
mov
xor
cmp
mov
mov
mov
and
dec
jno
sahf
sub
enter
push
pop
repz
mov
push
pop
leave
push
gs
xlat
xor
arpl
xchg
iret
sbb
sub
jo
hlt
jne
xor
mov
jg
test
push
push
repnz
insl
aad
outsb
mov
xchg
xchg
push
shll
push
into
daa
out
sbb
mov
lcall
cmp
mov
das
movsl
pop
aam
test
lods
scas
es
iret
sarb
aam
adc
fcomp
out
fdivrp
rol
test
das
sub
outsl
pop
cmpsb
int3
iret
popf
cltd
xlat
in
loop
aam
lret
into
bound
mov
in
inc
out
adc
mov
in
out
gs
pop
repz
inc
icebp
sti
jno
sbbl
jecxz
add
adc
test
adc
shll
pushf
lret
jg
inc
push
pop
xor
sub
add
aaa
aad
cmp
sub
cs
sub
mov
cld
sub
inc
cmp
test
sub
dec
lret
out
test
scas
icebp
jns
or
xchg
cmp
cli
push
lret
push
push
imul
xor
xchg
nop
imul
adc
and
mov
sahf
adc
movsl
loopne
mov
lea
imul
and
shl
mov
movsl
xor
cmpsb
inc
test
mov
insb
rcl
sub
or
fnsave
xchg
in
mov
sub
pop
mov
in
clc
mov
pop
inc
out
add
lods
push
pop
es
mov
inc
loopne
stc
out
jl
repz
sbb
aam
add
pop
pusha
sbb
mov
cs
or
insb
jbe
cmp
sub
cmp
adcl
add
es
sub
cs
loopne
enter
pop
pop
stos
jbe
pop
inc
jp
mov
inc
inc
inc
dec
xchg
mov
dec
mov
insb
or
js
push
sbb
lret
push
imul
push
out
xchg
sbb
mov
push
das
xchg
lahf
xchg
mov
xchg
mov
mov
mov
rol
cld
jp
mov
std
xor
mov
test
mov
shrl
aam
fisubrl
fbstp
sarl
adc
movsl
sbb
mov
jo
movb
les
jge
adc
xchg
lods
fucom
jno
pop
call
jne
and
adc
adc
xor
mov
cmp
mov
add
ljmp
mov
cmpsb
aam
pop
push
and
pop
push
inc
and
and
and
daa
add
sub
push
stc
sub
js
pop
and
mov
call
inc
inc
inc
xchg
dec
stos
pop
xor
pop
fidivl
mov
push
vmread
or
inc
dec
popa
iret
dec
mov
adc
fldcw
mov
mov
loopne
ret
xchg
clc
xchg
cwtl
insb
mov
pushf
mov
loope
jo
inc
imul
mov
call
mov
pop
inc
mov
idivl
mov
roll
leave
adc
shrd
scas
scas
jg
xchg
movsl
aad
xlat
xor
fsubl
enter
ljmp
adc
push
or
push
jns
repnz
negb
xor
std
adc
jecxz
ljmp
in
data16
out
lahf
insl
adc
sbb
pop
cmp
stos
mov
fs
or
push
xor
dec
aaa
cmp
push
cmp
adc
and
and
or
cmp
sub
hlt
cs
hlt
mov
dec
pop
mov
mov
inc
push
jnp
push
jl
jb
cmc
ja
jns
xchg
push
cltd
add
fs
xor
insl
sbb
xchg
loop
push
xchg
cltd
sbbl
addb
addr16
mov
mov
and
stc
les
int3
mov
cmpsl
das
out
xor
jns
ds
jle
movsb
icebp
scas
mov
cmc
fcmovu
mov
push
ret
cmpsb
jg
cwtl
pop
cmp
iret
stc
push
cld
cmp
jmp
lods
mulb
push
mov
les
dec
jae
mov
dec
jmp
in
add
sbb
mov
push
cs
test
pop
roll
add
add
scas
sbb
inc
or
xor
sub
data16
fistl
jp
es
subl
pop
das
std
push
pusha
push
pop
push
push
daa
push
mov
pop
jns
pop
sarb
stos
inc
pop
dec
jp
inc
dec
mov
dec
shll
das
jne
ja
jns
and
cmovno
add
jns
xchg
jl
insb
int
xchg
lods
xchg
rclb
add
rolb
test
inc
mov
jnp
or
cli
mov
mov
scas
out
mov
movsb
sub
lods
ret
xor
jb
or
xchg
fldt
clc
js
and
sub
lret
xchg
iret
xchg
outsl
repz
add
scas
or
xor
cld
out
popa
out
loop
add
jmp
or
sub
aad
cmpsl
jnp
or
addl
bound
arpl
insb
pop
adc
bound
xchg
sbb
xor
shlb
shlb
shll
sti
int
xor
mov
pop
call
out
dec
popa
lret
movsb
xorps
mov
or
sub
insl
aad
jns
push
jb
pop
push
or
jae
lahf
jns
mov
jge
dec
jle
pusha
dec
bound
and
push
push
outsb
cmpsb
mov
leave
mov
nop
pushf
hlt
sahf
adc
in
xchg
addr16
scas
and
stos
dec
mov
push
mov
loope
aad
lds
mov
shll
stc
push
inc
fisubl
sbb
pop
jne
dec
call
push
mov
mov
divl
sub
dec
cld
inc
nop
dec
jecxz
in
out
mov
in
xchg
stos
adc
mov
leave
sbb
sbb
pop
sub
inc
mov
mov
into
and
jle
xor
xor
pop
cmp
cmp
sub
test
and
xor
or
adc
jge
pop
or
push
call
pop
cld
dec
add
inc
inc
ret
mov
dec
mov
pusha
dec
push
jne
fcompl
mov
jp
jl
popf
and
mov
sbb
push
outsl
inc
xchg
nop
lcall
cwtl
sub
test
out
xchg
mov
mov
scas
pusha
adc
pop
mov
icebp
cmp
mov
cmp
test
sub
int3
rcll
cmpsb
fldcw
decl
sub
mov
lcall
sub
je
hlt
dec
cmp
mov
dec
int3
pop
mov
jnp
aam
ljmp
inc
inc
adc
pop
fistpl
aaa
sbb
sbb
mov
cmp
adc
or
xlat
adc
pop
xor
cmpb
bound
lea
inc
pop
push
daa
xlat
xchg
sub
shrb
adc
sub
jle
fldcw
inc
mov
inc
dec
lret
jg
fcompl
in
shlb
call
pop
das
adc
call
icebp
sub
ret
sub
imul
outsb
leave
in
ds
ja
in
push
lods
js
movsb
popf
inc
mov
sub
jae
push
mov
rcll
mov
push
out
push
mov
mov
or
fsubrs
mov
push
rcl
lcall
xchg
fdivr
jne
inc
ret
jl
enter
sub
das
jmp
hlt
xchg
sbb
rorb
add
mov
out
fadd
pop
mov
mov
jle
push
xor
hlt
outsb
in
rcrb
pop
xchg
jno
icebp
sub
inc
inc
and
mov
and
pop
es
lahf
cmp
jle
clc
xchg
xor
out
xchg
sub
push
cmpsl
dec
push
pop
push
rol
add
dec
in
mov
push
inc
inc
inc
cmc
or
push
dec
int
jge
mov
fcomi
fnstenv
js
pop
jge
imul
sub
push
imul
pop
jmp
into
xchg
xchg
movsl
aam
mov
jne
dec
sahf
cs
test
xchg
xor
mov
shlb
add
mov
cli
test
ds
scas
scas
lods
int3
shll
aad
sbb
pop
fdiv
jae
ret
jo
nop
outsl
lods
leave
enter
mov
fwait
repnz
popl
stc
clc
sbb
sbb
imul
push
je
in
std
dec
pop
push
cs
repnz
jmp
add
jmp
movl
cld
cmp
aas
xor
mov
aas
mulb
jbe
and
sub
sub
das
cmp
push
mov
push
pushf
pop
push
pop
jg
pop
sbb
sbb
inc
test
dec
imul
sub
or
pop
sub
insb
jle
lock
lahf
sbb
imul
std
xchg
jo
xchg
mov
lods
dec
jmp
int3
subb
mov
mov
or
pop
pop
pop
cli
sbb
lret
imul
mov
mov
test
xor
xor
xchg
or
stos
sahf
add
mov
lods
xchg
ret
cltd
lds
lret
or
push
imull
stc
sar
mov
jo
out
jecxz
hlt
cmp
add
push
cltd
or
das
mov
sbb
add
add
add
push
mov
or
xor
push
xor
in
ljmp
and
sub
dec
sbb
das
or
push
adc
push
jne
adc
das
pop
outsb
cs
mov
js
rolb
daa
popa
imul
dec
dec
push
fdivs
jne
in
jns
jg
xor
lret
lock
je
imul
fs
xchg
push
repnz
push
adc
ficompl
pop
into
sub
aam
xor
mov
mov
into
lahf
mov
dec
mull
andb
pop
test
cmp
dec
rcl
stos
clc
mov
mov
in
mov
test
inc
mov
ds
and
das
and
shrb
xchg
stc
sub
pop
cld
adc
cmp
dec
mov
add
jmp
inc
cld
stos
xlat
adc
clc
adc
push
push
xor
xchg
add
and
loopne
push
test
xor
imul
cmp
insl
and
daa
insl
sub
jne
das
inc
xchg
push
mov
push
mov
dec
pop
add
imul
dec
inc
cld
sbb
jne
inc
or
dec
inc
or
insl
jo
in
je
jbe
push
jnp
dec
jl
mov
or
imul
repnz
add
xchg
ret
lea
jo
pushf
and
inc
sarl
mov
xchg
loop
imul
mov
comiss
js
cld
loope
loope
mov
test
jbe
cmc
mov
aam
mov
sub
ret
sub
mov
mov
ror
fwait
into
call
negl
dec
sti
cmp
loopne
or
mov
inc
sbb
imul
ja
ret
enter
cmp
add
add
adc
mov
rclb
jne
xor
cmp
lea
leave
cmpb
sub
call
push
fsts
sub
inc
sbb
inc
and
pop
ja
pop
xchg
aam
lock
stc
inc
add
xorl
cmpsb
add
jns
push
jp
test
popa
push
icebp
mov
pop
push
xor
xchg
lret
push
fwait
stc
lcall
icebp
mov
xlat
xlat
leave
push
mov
mov
mov
inc
inc
adc
push
mov
loop
jae
movsl
lret
xor
lods
mov
shll
fsubs
aaa
xor
jae
ja
jnp
aam
lret
lret
mov
lock
cs
notl
sti
cli
push
mov
push
jnp
jecxz
shrb
test
adc
adc
sbb
sti
sub
add
jp
add
pop
add
or
pop
or
or
push
in
bound
dec
inc
aaa
jno
jne
cmp
push
and
sub
sub
sub
sahf
dec
push
push
mov
pop
xor
rcrb
inc
leave
outsb
mov
dec
push
sub
dec
inc
xor
int3
xor
je
jbe
jnp
xor
sub
mov
jb
push
push
xchg
das
outsb
mov
cld
xchg
xor
outsl
popf
pop
lahf
cmp
cmp
lret
mov
test
scas
jnp
dec
mov
mov
rcr
sub
test
sahf
cli
mov
shl
and
xlat
scas
pop
neg
mov
jns
add
ret
sub
out
pop
leave
push
xlat
lret
jle
icebp
mov
das
idiv
mov
nop
add
pushf
loop
ror
sbbb
sbb
adc
daa
test
sub
cmpsl
add
sahf
sbb
xor
hlt
or
dec
mov
insl
and
fbstp
pop
sbb
sahf
ds
enter
and
cmp
sub
cs
push
mov
inc
roll
inc
inc
cmpl
fdivl
or
sub
ror
xchg
int3
jnp
jge
jg
popa
pusha
sbb
gs
lock
insl
insb
mov
xchg
push
xchg
xchg
mov
pushf
jns
movl
out
mov
mov
fwait
lock
mov
gs
cmc
add
mov
mov
mov
add
subb
shlb
out
fcoms
dec
fstp
fidivrs
ret
das
lds
jecxz
lock
iret
test
cmc
hlt
mov
xchg
bound
pop
push
sbb
jecxz
pop
pop
inc
in
jmp
jl
loopne
notl
sbb
sbb
sbb
add
popf
pop
and
in
xchg
or
lea
jne
leave
lock
jae
or
cmp
adc
sbb
and
daa
fcmovu
push
sub
insb
scas
sbb
rclb
mov
pop
test
xchg
pop
inc
fldl
loop
loopne
stos
adc
into
dec
pop
dec
out
pop
xor
icebp
jbe
js
jp
fcom
jle
imul
mull
push
int3
sti
xchg
mov
jmp
pop
pushf
lahf
mov
test
cmp
or
mov
mov
jmp
out
gs
sbb
or
shl
shr
into
rcr
subb
xchg
fs
dec
lahf
lret
fwait
daa
sbb
adc
push
popa
enter
pop
iret
push
icebp
cmp
push
jmp
dec
lods
std
fsubs
mov
xor
out
jl
xchg
in
lcall
or
clc
sbb
sbb
cs
or
mov
dec
mov
add
sbb
xor
ss
inc
and
xor
ss
mov
pop
fldl
rolb
push
mov
xchg
pop
pop
inc
pop
push
outsb
std
inc
insb
jo
inc
push
xor
pushl
jb
mov
jne
in
or
clc
adc
data16
lcall
dec
dec
xor
cwtl
imul
lahf
jp
aam
inc
bound
mov
xor
shll
pop
sahf
leave
sbb
push
jl
inc
jle
arpl
fldcw
aad
xlat
jae
movl
ret
sbb
mov
popf
iret
into
mov
ret
test
jmp
loope
jecxz
in
out
jmp
jb
xor
push
jecxz
mov
push
aaa
sbb
add
add
add
scas
or
imul
jecxz
sbb
lahf
imul
aam
cmpsl
filds
jno
ret
bound
and
inc
pop
jbe
push
lahf
push
and
jmp
lds
or
xor
aam
or
push
dec
sti
jbe
mov
jo
jae
lods
je
sti
adc
mov
jg
cs
pusha
inc
mov
insb
iret
outsb
xchg
pop
xchg
mov
into
cwtl
fistpl
orl
fsubp
push
aad
and
mov
scas
adc
mov
push
mov
mov
mov
sahf
test
cmpsb
pop
xchg
dec
shl
cmc
rcl
dec
xlat
jne
pop
fcmovu
fldl
faddp
dec
shr
mov
or
leave
popf
mov
dec
sahf
into
jecxz
dec
es
sub
cli
out
cld
mov
mov
add
sub
mov
movsb
int
pop
pop
gs
jmp
pop
je
add
test
shll
imul
mov
xor
xor
mov
sti
push
and
ret
pop
iret
mov
sub
inc
push
rclb
push
imul
in
mov
push
fsubp
clc
popf
jno
movsl
dec
mov
dec
jg
jb
jbe
jne
ja
jns
jnp
jge
scas
aas
pusha
sbb
push
sbb
imul
mov
cmpsb
nop
and
ljmp
incb
xorl
outsb
cltd
mov
xor
mov
lret
or
push
xchg
mov
mov
orl
adc
loop
movsl
loopne
pop
fcmovne
cli
fmull
pop
fadd
enter
xor
push
iret
mov
cmc
add
ljmp
loopne
loop
dec
test
mov
imul
cwtl
mov
icebp
outsb
mov
or
adc
pop
or
cmp
or
xor
xor
pusha
data16
fwait
xchg
jl
and
daa
xchg
ss
xor
jae
das
shll
pop
push
lret
sbb
pop
movl
inc
in
inc
inc
inc
cmovns
add
jno
dec
jb
mov
jnp
lods
jl
mov
inc
mov
int
jbe
and
adcl
jo
push
andb
mov
mov
push
xor
jmp
daa
mov
mov
jecxz
mov
cmpsl
jnp
push
stos
leave
lret
cwtl
rcl
adc
fdivr
inc
test
fsubrp
loope
ret
icebp
gs
cmp
mov
dec
roll
shlb
pop
adc
lcall
in
out
out
mov
in
xchg
popf
adc
adc
jecxz
sbb
fdivs
sbb
add
movsl
daa
fimuls
jns
or
daa
mov
or
cmp
in
fbld
adc
lock
cmp
xchg
iret
jp
cltd
push
pop
test
stc
idivb
pop
and
pop
inc
std
inc
inc
ret
cli
cltd
inc
push
cmpsb
in
aaa
fs
dec
push
pop
jae
jae
adc
js
sbbl
bound
jno
aad
cmp
aas
js
sub
jmp
andl
mov
adc
mov
push
mov
stos
xlat
mov
pop
movsl
cmp
and
shrb
inc
rol
and
xor
push
fsubrs
sti
fsubl
push
rorb
aaa
xchg
lahf
lret
notb
mov
div
and
stos
push
std
mov
jecxz
in
cmpsl
cmp
dec
jbe
in
in
xor
push
xor
pop
ds
pop
add
mov
add
sub
or
outsb
or
xor
xorb
cmp
cmp
and
idivb
sub
mov
inc
xor
cmp
push
inc
dec
xchg
fdiv
rorl
push
out
inc
out
mov
or
adc
lods
xchg
ja
cli
jnp
jge
push
fs
sub
std
push
outsl
cmp
xchg
ret
inc
ljmp
lahf
xchg
cwtl
cmpb
aam
mov
popf
out
push
orb
sub
pop
ljmp
mov
mov
les
mov
mov
aad
or
fs
inc
jg
inc
lods
adc
les
mov
dec
loopne
icebp
out
gs
or
sti
sar
rolb
loope
jecxz
in
rcrl
xchg
cld
ljmp
xchg
adc
sbb
scas
inc
int3
pop
or
add
jns
pop
or
mov
ss
test
lea
cmc
inc
daa
lock
or
adc
and
pop
inc
add
or
xchg
inc
fiaddl
movsl
lahf
ss
adc
xor
pushf
jno
jae
pop
add
lods
jmp
xchg
leave
popa
jge
jno
fs
sbb
imul
outsl
pop
aam
xchg
mov
cltd
dec
fmull
push
call
insl
sahf
jns
sub
cmpsl
cmc
mov
sub
dec
mov
push
pop
mov
fisubs
lds
arpl
test
fsubs
add
fdivp
fimuls
push
xlat
push
mov
scas
lret
mov
mov
or
test
stc
clc
dec
fwait
or
movsb
xchg
jecxz
mov
call
out
js
pop
dec
stos
adc
dec
clc
mov
or
add
add
add
cmp
cmove
imulb
cmp
adcb
xchg
andb
daa
outsl
lods
inc
icebp
dec
test
mov
notb
pop
pop
pop
jno
es
and
inc
bound
pop
dec
push
dec
je
loop
js
jp
jl
jle
jno
bound
jnp
inc
push
outsl
mov
bound
xchg
mov
cmc
lcall
xorl
xchg
mov
iret
and
push
mov
insb
mov
mov
xchg
shll
test
popa
push
adc
pushf
rcl
vcmpps
mov
xchg
sub
ret
or
lret
jge
lahf
mov
repnz
cli
lret
dec
adc
push
mov
cmc
dec
jmp
in
cmpsl
scas
adc
adc
add
sbb
std
js
call
fisubrl
in
outsb
adc
int3
loopne
xchg
xlat
xor
pusha
cmp
xor
rorl
jmp
es
pop
arpl
arpl
pusha
mov
pop
fimuls
adc
rolb
pop
adc
dec
dec
fisttps
jo
jb
lds
jns
sub
jg
aas
sbb
fisubrs
inc
scas
insl
insb
mov
xchg
or
push
incb
adc
mov
adc
mov
mov
dec
les
mov
and
mov
mov
stos
fldl
lods
xchg
inc
mov
cmp
adc
pop
insb
mov
rol
test
inc
mov
sub
mov
pushf
repnz
sub
stc
clc
sbb
pushf
mov
out
jmp
clc
cwtl
adc
dec
mov
gs
lea
inc
sbb
mov
ljmp
or
mov
dec
xor
xor
cmp
cmp
cmp
add
inc
and
and
sub
push
jnp
notb
push
add
pop
sbb
push
inc
scas
inc
stc
inc
pushf
call
loop
push
jno
xor
add
jbe
sub
mov
pusha
psubq
stc
jl
push
imul
insb
xchg
lahf
xchg
xchg
xchg
insl
lret
lcall
mov
xchg
lret
movsl
xchg
mov
push
lea
popf
mov
push
adc
mov
mov
sub
cmpsb
pop
repnz
jmp
lods
cli
inc
and
cli
aam
cmp
popf
add
fsubrl
lahf
roll
or
xor
aas
enter
int3
mov
std
repnz
hlt
xchg
mul
mov
imul
pop
jmp
mov
dec
test
jbe
mov
or
mov
add
jns
or
mov
jl
cmp
xlat
and
popf
jl
sub
add
xor
cmc
daa
mov
pusha
or
or
mov
sub
push
xchg
inc
inc
hlt
inc
ss
aaa
test
pop
mov
jo
jae
je
ljmp
sbb
ret
sub
data16
imul
sbb
add
xchg
insl
fisubrs
js
jae
xchg
mov
cmp
imul
mov
xchg
and
dec
xor
inc
xchg
mov
fisttpll
dec
fstp
cmpsl
dec
xlat
rcl
and
push
push
es
repz
stos
jge
icebp
lock
movsb
mov
arpl
enter
cld
test
std
xor
jo
add
enter
je
hlt
out
ret
dec
adc
sti
adc
sbb
test
mov
popl
or
enter
xchg
add
enter
sub
and
arpl
adc
dec
mov
pop
mov
xor
pop
push
pop
pop
xor
pop
xlat
inc
inc
dec
cld
dec
dec
ja
xchg
xchg
out
loop
jmp
fistl
dec
jp
and
mov
insl
add
jp
and
ffreep
lds
dec
aaa
xchg
add
cltd
sub
mov
xchg
inc
xchg
scas
mov
xor
popf
mov
sti
mov
inc
mov
into
leave
xchg
xor
repz
lods
in
scas
mov
vpermq
scas
and
adc
test
ret
mov
dec
js
cwtl
enter
int3
iret
adc
mov
push
iret
gs
es
hlt
jle
repz
jmp
stos
andb
scas
jle
lock
rcrb
call
subb
je
in
or
loop
or
les
cmpsl
xor
cmp
dec
inc
cmp
rcrl
push
daa
lea
cld
shrl
daa
push
cwtl
push
cwtl
fstpt
mov
pusha
or
test
adc
stos
dec
xchg
jno
fs
and
xchg
jnp
notb
popa
pusha
adc
lret
cwtd
push
xchg
add
xchg
ficoml
xlat
into
pushf
push
jg
andb
xor
sbb
mov
mov
mov
xchg
repnz
cmp
pop
das
call
mov
test
icebp
scas
enter
jno
loopne
xchg
ficompl
bound
push
test
test
pop
xor
into
lods
scas
repz
cli
pop
out
dec
dec
je
and
repz
mov
jmp
jle
mov
into
or
fwait
sbb
out
jge
push
sub
adc
adc
out
popf
jmp
cmpsb
mov
mov
xchg
cmp
dec
and
push
mov
arpl
pop
and
repz
jnp
push
pop
push
jnp
lea
inc
ret
and
dec
stos
dec
ds
scas
mov
adc
ja
jns
je
cmp
lret
jge
pusha
inc
bound
push
cli
outsb
shlb
inc
and
fwait
push
in
cs
sahf
cmp
xchg
insl
and
mov
das
and
arpl
popa
mov
inc
xchg
cmpsl
insl
test
inc
subl
fldcw
je
jle
cmp
insb
repnz
mov
sub
xor
lret
cmp
add
imul
cld
fsin
and
jecxz
in
leave
mov
call
out
pop
mov
adc
sbb
or
lahf
adc
jge
jmp
sbb
jb
or
xor
jb
cmp
mov
shll
and
and
ret
sub
push
lods
fs
mov
cmc
pop
mov
sbb
lods
inc
push
inc
cmpsb
fisttpl
mov
pop
pop
jno
mov
push
sbb
dec
jge
jle
jno
xchg
push
cltd
data16
push
popa
das
jo
or
xchg
sbb
cltd
xor
lea
pusha
adcb
fsubs
push
cmpsb
adc
cwtl
aam
mov
jmp
xchg
xchg
fadds
xor
test
mov
lahf
rcll
shl
jnp
add
pop
rcrl
xchg
xchg
xchg
cmovg
mov
pop
mov
imulb
out
fwait
jmp
pop
pusha
loopne
ja
aam
int
stos
jno
in
in
dec
jnp
call
push
mov
call
fwait
sbb
fiadds
or
sti
or
lods
xor
pushf
sub
cmpsl
cmp
adc
xor
daa
sbbl
das
sbb
mov
ss
pop
and
sub
and
and
inc
sbb
dec
push
shrl
jne
inc
or
js
pop
sub
jg
aad
pop
bound
jnp
jp
test
jmp
nop
and
fwait
jne
lcall
in
andb
xchg
push
adc
mov
clc
mov
mov
mov
mov
cwtl
mov
xchg
cmpsl
popf
test
cwtl
scas
fcmovbe
les
out
push
ficoml
data16
icebp
les
adc
repz
cmc
clc
fdiv
test
mov
pop
loopne
or
cli
out
imul
ljmp
adc
adc
sti
test
sbb
push
je
jle
aaa
add
or
cmp
ja
loope
dec
rolb
cmp
cltd
cmp
in
sub
test
sub
bound
into
push
adcl
xor
rcrl
add
pop
sbb
inc
xlat
and
cmp
nop
dec
sti
lahf
jno
test
je
movsl
jns
fidivl
cs
push
cmp
shl
imul
std
out
sub
xchg
xchg
in
lea
sahf
ds
test
mov
shrl
sti
mov
mov
data16
or
stos
dec
lods
lret
adc
loop
push
inc
fucomp
sbb
mov
inc
fxch
jns
inc
iret
into
rcr
xchg
repnz
je
stc
lea
mov
pushf
call
aad
add
jg
jmp
pop
lret
xchg
rcl
int3
xchg
test
cmc
sbb
add
scas
pop
loope
sbb
cmp
shlb
cmp
mov
arpl
sub
es
sub
or
rcpps
cmc
mov
in
pop
icebp
pop
jp
cmpsb
inc
scas
mov
mov
sbb
or
je
in
xlat
pop
jp
jl
loopne
pop
out
into
ret
int3
data16
popf
fnsave
mov
incl
jg
repnz
sbb
xchg
sbb
sbb
mov
loopne
mov
mov
push
push
adc
insb
mov
movsb
cmpsl
mov
sub
sub
scas
jmp
aad
xlat
xor
rcr
fidivs
in
pop
les
lret
iret
sub
lods
push
outsb
mov
imul
imul
loop
shlb
daa
in
add
adc
mov
sti
sbb
sbb
sbb
add
sbb
pop
push
js
je
or
adc
xor
push
xor
aaa
fwait
sbb
xor
or
and
inc
sub
int
mov
push
fs
push
mov
inc
pop
sbb
scas
pop
pop
pop
mov
aas
in
adc
dec
jns
lahf
jno
cmpsb
int3
xchg
push
js
xlat
mov
popa
pusha
jl
movl
imul
shll
jp
xchg
repz
xchg
mov
aas
cltd
lahf
sahf
and
test
cmp
jecxz
fnstenv
pop
mov
stos
mov
testl
stos
lcall
rclb
xlat
leave
mov
repnz
ret
fdivrs
jb
icebp
push
repz
subb
stc
jle
in
std
inc
add
xchg
mov
mul
push
mov
ss
xchg
mov
and
push
arpl
add
sbb
add
sub
push
or
push
and
xor
ljmp
ds
icebp
sub
inc
into
pop
test
das
mov
fisttpll
push
jb
push
pop
lret
pop
pop
pop
sbb
sbb
jbe
dec
xor
xchg
jne
aad
sbbb
xchg
adc
arpl
push
out
or
push
lods
rcr
arpl
jnp
cltd
mov
lcall
stc
cmp
and
mov
mov
xor
adc
sbb
jo
test
movsb
cmpsl
inc
cmpl
stos
lods
inc
inc
push
lods
shlb
nop
neg
fistl
addr16
faddp
cmp
ret
cmpsl
rorb
mov
mov
cmc
idivl
mov
inc
fidivs
inc
mov
cwtl
jmp
into
clc
fdivs
jp
test
dec
adc
jne
add
arpl
add
or
pop
push
or
mov
xor
jo
cmp
pop
and
cld
mov
sub
add
jg
ja
push
push
ja
in
sbb
pop
mov
pop
cwtl
pop
enter
inc
rolb
dec
lret
lods
scas
pushf
jno
mov
rcr
xchg
les
js
push
xchg
loop
jle
pusha
mov
data16
aam
push
insb
clc
add
mov
repnz
fwait
lcall
adc
sub
adc
xlat
mov
cltd
mov
mov
fistpll
lahf
jecxz
aaa
cmc
mov
add
inc
fcmovnbe
xchg
leave
rcrb
loope
in
push
sub
pusha
mov
leave
ret
sub
cmp
jb
push
repnz
hlt
out
xchg
and
es
xchg
loopne
cmp
imul
jp
xchg
ja
lcall
adc
insb
jb
fisubrs
addr16
or
mov
data16
dec
in
scas
cmp
cmpb
jbe
pop
add
sub
mov
or
push
lods
push
mov
fcomps
adc
mov
mov
sub
sbb
shll
jb
je
jbe
js
out
in
fdivrs
popa
repnz
testl
xchg
xchg
cmc
mov
jge
sahf
mov
xor
mov
popa
sahf
jge
mov
test
mov
inc
pop
mov
add
stos
and
data16
rclb
aam
fwait
mov
js
dec
ret
sub
daa
add
adc
insl
lods
inc
ror
repnz
cli
ljmp
ja
cltd
out
jmp
xchg
insl
xor
test
sbb
add
add
push
loope
jb
or
xor
inc
inc
or
jl
sbb
sarb
and
inc
and
and
aad
sub
dec
mov
loopne
in
cmp
outsb
sbb
fsubrl
and
out
push
lods
shll
out
or
shlb
daa
les
cld
jg
popa
loopne
jbe
fistl
cmc
insb
xor
push
adc
aaa
insl
call
sahf
sbb
mov
jb
jecxz
out
push
mov
push
mov
into
aam
mov
imul
test
mov
mov
aad
inc
pushf
nop
jl
xchg
cld
push
lds
dec
fmul
and
push
xchg
pop
test
call
inc
cld
mov
pop
scas
jecxz
add
enter
push
lods
out
dec
adc
adc
xchg
sbb
rcrb
lods
add
loop
dec
mov
or
xor
test
mov
popa
inc
xor
leave
and
xor
imulb
cmp
push
jne
addr16
dec
mov
or
jnp
mov
cwtl
inc
sbb
es
mov
dec
fnstsw
ja
jl
mov
jle
bound
lret
mov
push
jne
outsb
xchg
in
xchg
dec
cltd
mov
dec
jns
cmp
ficompl
xchg
add
push
mov
cmovb
cmpsl
dec
mov
push
aam
xor
sar
mov
push
scas
and
sub
mov
leave
sbb
repz
imul
fsub
sub
enter
int3
iret
sbb
lock
xlat
scas
testb
stc
xchg
iret
sahf
xlat
bound
aam
jae
dec
jnp
ljmp
cmp
adc
push
mov
call
push
test
popa
and
push
cmpsb
lods
mov
or
push
xchg
xor
ss
cmp
lcall
movsl
inc
xor
loop
sbb
push
cld
push
add
xchg
es
cmp
inc
sbb
cmp
lock
adc
scas
push
shl
dec
rorb
add
jb
je
cmc
lret
inc
jnp
lret
mov
hlt
mov
in
xchg
imul
push
dec
push
xor
shr
cli
jno
fistps
pop
test
es
data16
loop
mov
mov
hlt
push
in
xor
cli
mov
std
loopne
cmp
repnz
orb
xlat
mov
pop
fistl
rol
xchg
in
and
ljmp
fdivs
movsb
hlt
jmp
jg
cld
je
aas
aad
pop
in
stos
repz
in
lcall
pop
pop
xor
mov
push
add
fldt
pop
js
xchg
adc
sahf
add
xor
push
lcall
aas
out
pop
nop
adc
mov
das
inc
push
push
push
insb
and
hlt
ss
shrb
popf
arpl
inc
inc
filds
test
ds
xchg
inc
ja
jns
jnp
scas
jl
jle
xchg
dec
bound
jge
popf
or
xlat
insl
arpl
adc
aas
lret
movsl
aaa
daa
cltd
xor
aam
shl
cmp
std
xchg
mov
mov
push
fldenv
jb
mov
xchg
pop
fs
addr16
aaa
mov
test
lods
iret
jg
rcl
rcl
mov
adc
mov
rolb
faddp
xchg
popf
ret
xchg
in
lret
ror
dec
xor
mov
mulb
leave
sti
pop
sbb
ret
jbe
or
cmp
jmp
xor
jp
adc
clc
add
pop
push
and
mov
add
mov
testb
inc
pop
xor
movsb
lret
jns
pop
inc
pop
and
or
das
nop
push
aad
int3
push
mov
cli
lock
xor
cmp
inc
call
inc
xchg
mov
or
cld
cmc
outsl
jne
lcall
outsl
jg
popa
in
mov
pop
xchg
imul
adc
nop
cmovl
rolb
popf
push
into
sahf
in
loope
inc
rcrb
xchg
nop
pop
cltd
mov
popl
push
cs
sub
test
test
in
inc
scas
sarb
push
xor
cmp
int
hlt
xor
push
cmp
lret
fbstp
xor
mov
stc
push
call
fsub
cmc
pop
dec
stos
inc
lret
in
jl
pushf
popf
jne
push
adc
test
sbb
jl
jmp
cmp
or
out
push
bound
aaa
jae
cmp
flds
push
and
sub
add
jae
xchg
push
push
arpl
cld
lcall
imul
inc
inc
bound
dec
std
adc
push
adc
ja
xchg
js
scas
and
mov
adc
icebp
mov
push
outsl
xor
jne
jo
mov
in
arpl
push
mov
outsb
adc
mov
pop
push
mov
or
or
xor
push
roll
xchg
fmuls
mov
cltd
fidivs
mov
push
lret
push
pop
lods
sub
lock
clc
inc
movsl
notb
mov
loop
in
out
call
out
adc
add
cmp
pop
pop
add
push
test
lahf
dec
dec
adc
fsubrp
xor
inc
cmp
cmp
mov
mov
xlat
fsubs
sub
xchg
push
fwait
das
jmp
jg
mov
add
testl
mov
aaa
into
rorb
fs
add
mov
lcall
movsl
jle
mov
pop
fs
and
sbb
stos
outsl
dec
dec
nop
out
add
fwait
lcall
loop
dec
test
aaa
mov
movsb
cld
aas
pop
mov
pop
mov
in
mov
mov
lea
insl
fisubrs
out
sbb
out
sysexit
sbb
repz
lods
add
stc
mov
mov
push
outsl
mov
hlt
mov
and
stc
dec
push
leave
mov
inc
out
xor
fucomi
movsl
out
out
xchg
adc
adc
ret
sbb
fcomps
add
pop
out
scas
arpl
or
sub
xor
cmp
cmp
and
cs
lock
mov
mov
dec
pop
pop
loope
sub
out
inc
inc
pop
inc
lret
cmc
dec
dec
rorl
outsb
jo
loop
out
data16
js
sahf
adc
popa
push
dec
bound
push
xchg
imul
popa
fnsave
clc
xchg
loop
mov
jle
mov
push
sahf
mov
ror
mov
popl
leave
xorl
dec
mov
sub
push
movsb
cmpsl
xchg
test
lods
pop
mov
rcrb
aad
into
adc
fcmovu
add
or
rol
lahf
int
das
leave
inc
lret
scas
xchg
std
loope
jno
repz
or
cmp
out
mov
std
test
xor
mov
xchg
xchg
mov
jmp
mov
dec
pop
adc
adc
push
out
cwtl
cmp
add
add
add
push
movsb
or
aad
popf
xlat
xor
inc
and
aaa
xchg
cmp
rolb
xchg
pop
add
sub
sub
push
push
cs
pop
ja
pop
pop
cmp
aaa
inc
inc
outsb
jl
mulb
ds
dec
js
xchg
jb
pop
jnp
jge
pop
sbb
add
negl
jecxz
pusha
insl
and
ja
nop
mov
xchg
clc
or
mov
std
cmpb
push
and
xchg
in
cmp
mov
mov
mov
mov
fsubrl
rsm
xchg
push
stos
das
pop
cmp
shl
aad
jg
fldenv
fucomi
inc
mov
sbb
cmp
mov
cmp
cs
iret
xchg
daa
repz
add
call
scas
sbb
mov
loope
aad
jae
cmp
rorb
imul
xchg
icebp
sbb
add
data16
movsl
into
push
dec
cld
mov
pop
bound
jl
fnsave
outsb
jo
imul
cmp
cmpsb
mov
jle
adc
sub
adc
push
ret
mov
jmp
mov
test
mov
dec
push
enter
pop
shlb
jae
adc
sub
jp
jmp
jle
pusha
aam
push
push
loope
push
push
outsl
sbb
fstl
ret
jg
ja
mov
subb
push
test
xchg
pop
push
mov
lds
pop
mov
shlb
mov
mov
dec
stc
outsl
add
sarb
addr16
fisubrl
pushf
inc
shl
cmp
push
ret
cld
dec
lret
dec
imul
clc
pop
shrb
and
pusha
out
dec
in
jp
mov
outsl
push
dec
sbb
mov
repnz
add
jne
push
fisttps
push
adc
sub
fidivs
test
and
ss
xchg
cmpsb
fmull
pop
and
push
movsb
inc
jl
inc
mov
adc
push
inc
xor
push
fstpl
aas
or
outsb
push
imul
inc
loopne
loope
mov
pop
adc
xchg
in
jbe
push
sbb
jle
int3
sbb
imul
pushf
int3
test
xlat
cltd
test
xchg
mov
sahf
sbbl
mov
xchg
xor
push
sbb
pop
jno
or
in
adc
mov
ljmp
addr16
dec
in
dec
aad
xchg
fxch
fcmovnu
push
fsubl
lcall
scas
pop
push
int3
dec
icebp
icebp
lock
repnz
aad
cli
shlb
dec
or
inc
call
fldz
test
mov
sbb
or
imul
pop
out
fisubs
or
sarl
mov
cmp
cwtl
stos
cmp
andb
daa
xor
sub
jbe
jno
push
mov
test
mov
fistpl
inc
leave
bound
inc
fs
out
jnp
push
sub
popa
cmp
or
lret
push
jnp
pusha
adc
jb
shlb
emms
cmp
push
test
insb
outsl
stos
jne
dec
dec
mov
xchg
cltd
jbe
cmpsl
cltd
ljmp
sub
mov
xchg
mov
mov
cltd
xchg
mov
dec
mov
dec
pop
mov
ja
mov
scas
clc
rcll
push
aam
mov
cmp
fldl
mov
rol
fcoml
mov
popa
xlat
sub
repz
icebp
sub
cmc
sub
aam
xchg
sti
lock
ljmp
push
push
out
xchg
call
scas
int
adc
adc
sti
sbb
lcall
or
push
xchg
push
add
push
les
nop
or
cmp
pop
aam
aaa
inc
aad
sbb
xchg
aas
loope,pt
and
pop
cli
xchg
stc
int
sbb
sbb
jne
mov
pop
fldl
xor
test
dec
test
push
fnsave
ja
fwait
ret
je
pop
ljmp
jle
or
iret
mov
push
pushfw
adc
push
adc
les
nop
roll
xchg
mov
popf
jns
out
addl
mov
lea
push
cmp
sbb
mov
sub
or
mov
dec
rep
movsb
rclb
add
addb
shlb
xor
addr16
outsl
fisubrs
sub
sbb
int3
ror
out
pop
repz
add
jne
sub
sti
or
cld
sbb
pop
sub
mov
jnp
inc
adc
stc
repz
add
sbb
insb
sub
arpl
inc
pop
mov
cmc
dec
jns
mov
cmc
push
cmp
aas
ret
push
and
fidivrl
push
add
adcb
nop
pop
xchg
pop
fs
and
inc
dec
and
insl
cwtl
dec
dec
shlb
das
icebp
jb
sbb
lea
jp
jl
jle
movsb
das
bound
push
add
xchg
mov
xchg
xchg
cmp
cwtl
sahf
fs
leave
or
shrl
mov
pop
shll
in
mov
mov
cmp
andl
jbe
scas
insl
dec
mov
fidivs
xlat
or
dec
fistpll
addb
inc
in
mov
lret
cmp
icebp
sub
cmc
jnp
push
nop
clc
rolb
sbb
add
in
pop
out
jg
jp
mov
into
jns
xchg
lea
daa
dec
std
sbb
cwtl
sub
push
mov
add
add
inc
outsb
xchg
into
popa
xor
inc
lahf
push
aaa
jecxz
dec
out
lods
lret
movsb
jbe
mov
pop
lret
xor
into
xchg
into
push
fstl
push
pop
sti
inc
mov
mov
inc
outsl
inc
inc
int3
push
sti
inc
je
cmpsl
fmuls
aad
jno
out
mov
js
ljmp
arpl
or
cmp
jbe
insl
add
outsb
and
xchg
xchg
pushf
fiaddl
lcall
xlat
adc
repz
repnz
pop
mov
mov
and
mov
loopne
mov
movsl
xchg
loop
test
lcall
gs
push
fdivr
fnsaves
ret
jecxz
les
lret
sub
inc
xchg
repz
push
hlt
sub
cli
jp
fabs
loopne
scas
in
out
jbe
and
and
xor
rorb
or
ss
and
or
fdivp
push
mov
push
cmp
sti
lods
aad
and
or
jg
push
cmp
fcoml
sub
fistl
mov
jmp
jne
int3
pop
xor
pop
pop
inc
jnp
inc
add
mov
fstps
mov
lcall
jge
loop
popa
das
aaa
bound
dec
popw
imul
insl
outsl
imul
xchg
rcrb
or
cmp
sub
mov
lea
ret
in
sbb
mov
mov
mov
xchg
dec
add
addl
cmc
out
cmp
lahf
stc
add
fisubrs
aas
in
xor
int3
mov
adc
hlt
fcmovnb
inc
clc
sti
in
cld
and
loopne
loop
push
out
jmp
in
out
xor
jae
push
enter
push
sbb
push
or
add
sub
mov
rcl
cmova
adc
adc
cmp
ficoms
or
das
and
cmp
sub
lret
lea
jle,pn
das
mov
pop
addr16
xor
pop
and
inc
out
inc
xor
dec
mov
jmp
divb
xor
lcall
shll
mov
mov
outsl
mov
push
jno
inc
mov
pop
popf
or
adcl
mov
add
fucom
and
mov
mov
mov
sbb
pop
je
aas
testl
scas
pop
mov
aam
sub
jb
in
jge
mov
pop
xchg
into
bound
and
into
add
rep
cmc
lcall
std
sbb
adc
into
cmp
jge
inc
out
out
loope
jae
adc
push
sbb
lret
test
int3
push
sbb
add
fwait
das
push
xchg
das
in
or
pop
pop
das
xor
das
add
cmp
outsl
lods
and
sub
sub
sbb
mov
jmp
push
iret
mov
pop
push
inc
mov
push
xor
dec
mov
push
jo
les
and
jp
movsb
jg
dec
cs
lret
xor
insl
scas
mov
jbe
xchg
gs
inc
gs
out
scas
adc
or
hlt
das
and
mov
mov
mov
mov
and
xchg
sub
mov
cwtl
xor
sbb
call
rol
push
aam
jg
nop
xchg
pop
and
in
mov
xchg
andl
out
push
or
ficomps
in
data16
push
jmp
jp
jbe
xor
ljmp
sub
int3
adc
daa
xchg
xchg
lods
sbb
mov
cld
out
xchg
popa
in
or
and
and
jle
cmp
cmp
mov
or
and
shll
sub
das
push
sbb
push
push
inc
pop
xor
inc
push
inc
mov
dec
sbb
dec
sbb
jp
push
jae
imul
jns
jg
and
mov
imul
outsl
outsb
lds
xchg
ror
xor
add
pusha
pop
clc
mov
push
lea
sbb
mov
mov
inc
mov
or
aas
aad
lods
xchg
adc
push
repz
xlat
jns
pop
aaa
xchg
fmull
jg
das
ret
data16
lcall
loopne
lock
mov
lods
stc
daa
sti
adc
cld
add
aam
jns
dec
jmp
jl
loop
or
mov
pop
mov
xor
popf
dec
sbb
add
xchg
add
jbe
fmuls
dec
mov
xor
push
or
insb
cmp
and
sub
mov
add
insb
sub
cli
push
into
sub
rclb
pop
imul
inc
lods
inc
lds
pop
pop
xchg
dec
dec
iret
xchg
dec
in
jae,pn
pop
aaa
pusha
adc
push
jle
pusha
les
fisttpl
xorl
cs
jno
and
int
jmp
or
rdmsr
test
lock
lahf
mov
test
dec
xlat
sbb
mov
xor
stos
jle
mov
scas
xor
xor
push
fstps
xor
dec
push
mov
scas
and
or
int
xchg
into
icebp
cmp
and
imul
stos
in
xor
pop
in
out
inc
jmp
push
mov
inc
adc
sbb
mov
mov
add
je
and
mov
cmp
dec
mov
jg
adc
in
cmp
add
mov
ja
sbb
mov
lea
pop
inc
sahf
mov
pop
mov
inc
rolb
fsts
push
stos
lcall
repz
sbb
sbb
jnp
loopne
out
cmpb
mov
sbb
dec
dec
adc
add
xchg
in
in
js
cltd
xor
lock
ret
leave
fisttps
mov
mov
mov
mov
mov
pop
pop
mov
mov
jl
in
test
mov
jg
shrb
out
mov
sub
ficoms
dec
jmp
lret
int3
push
scas
aad
cmc
sbb
divb
pop
and
psubsw
jb
ss
mov
sub
lods
into
adc
push
into
pop
lock
orb
inc
or
add
jmp
mov
lcall
add
aaa
pop
cmp
test
and
mov
icebp
and
movsl
sub
adc
push
korw
push
ja
pop
sarl
pop
ds
lods
sbb
inc
adc
dec
insl
jle
dec
cmp
jb
ja
adc
jecxz
pop
push
sbb
popa
or
aam
repz
push
mov
les
leave
icebp
xchg
or
pushl
scas
addb
jg
xlat
call
add
out
mov
cmp
fucompp
les
mov
test
cmp
jecxz
xlat
lock
fimuls
fs
in
sub
into
aas
lock
sub
dec
ret
push
cmpsl
push
pop
cli
std
dec
ljmp
in
arpl
jbe
jmp
in
jmp
pop
adc
mov
pop
push
roll
dec
mov
jne
push
jmp
dec
mov
imul
and
fs
sub
mov
insl
call
subb
mov
int
xchg
xor
clc
stc
mov
movsl
push
and
into
mov
pop
int3
pop
xchg
inc
adc
outsb
inc
lret
dec
stos
xor
dec
mov
cmp
ja
pop
outsb
idivb
add
jle
icebp
dec
bound
or
data16
add
adcl
jmp
popf
pushf
in
imul
and
lea
mov
mov
mov
fdivrs
mov
cwtl
mov
test
stos
and
mov
cmpsl
cmp
pop
cmc
sub
loope
jns
gs
or
and
lock
mov
ret
std
adc
xchg
fsubr
bsr
shr
xchg
pop
cs
adc
and
sti
sbb
add
sub
or
mull
prefetch
rdmsr
xor
mov
mov
dec
and
daa
repnz
mov
sub
push
shl
loope
push
jno
in
jbe
pop
pop
mov
inc
xchg
movsl
inc
shl
mov
dec
movsb
push
push
and
test
fs
jle
fs
xor
pop
outsb
outsl
pop
imul
adc
cwtl
cld
lret
fdivl
xorl
mov
jl
data16
mov
dec
cs
mov
mov
stos
lods
in
scas
and
std
movsb
test
fnstcw
lret
mov
jmp
push
mov
rorl
imul
int
inc
inc
xorb
call
out
mov
inc
add
push
push
mov
mov
pop
mov
stos
popa
daa
add
or
mov
cltd
daa
xchg
out
xor
cli
mov
iret
and
ja
mov
pop
or
xchg
loopne
test
in
pop
das
jne
dec
sub
xchg
mov
push
dec
rcr
mov
jne
adc
sub
out
dec
mov
iret
inc
in
mov
add
or
nop
sbb
cltd
cwtl
int3
leave
push
inc
imul
xor
mov
push
add
xchg
mov
dec
sbb
mov
movsb
dec
clc
into
mov
fisubrs
aad
dec
push
jmp
filds
rol
ret
movl
jge
insb
shl
xor
fdiv
mov
inc
cld
add
loope
dec
mov
jo
jmp
popa
faddp
xchg
adc
xor
sbb
add
or
stc
js
daa
cmp
movsb
xorl
xchg
cmp
je
jb
and
and
and
xchg
sub
or
stos
cs
and
rcrb
pop
mov
aaa
cmp
testl
dec
into
pop
dec
xor
jb
push
mov
push
xchg
jmp
jle,pt
xor
jo
insb
test
push
add
cmc
ss
rcrl
pop
andl
xchg
pop
outsb
jmp
int
mov
fwait
mov
mov
mov
popa
lea
cmc
scas
lcall
mov
ret
jmp
cwtl
scas
ret
rcll
aam
ds
mov
test
cmp
sti
leave
lret
lret
mov
rcrl
idiv
daa
js
mov
hlt
addr16
out
mov
in
imul
adc
cmp
mov
sbb
dec
add
sub
adc
aas
or
xor
xor
xor
mov
test
out
ds
and
mov
adc
and
push
sub
cmpsb
sbb
pop
lds
push
cmp
jbe
stos
cmc
pop
adc
inc
cli
inc
inc
cltd
mov
push
and
shrl
movsb
adc
jmp
dec
imull
sub
mov
jns
dec
pop
mov
cmp
xchg
pusha
cltd
outsb
sbb
pushf
cmp
addb
roll
mov
mov
ret
imul
or
mov
stc
mov
cmpsb
ja
lock
cmpsb
lods
mov
jne
mov
lock
mov
lret
fxch
insl
rcll
ret
xor
leave
decl
sahf
ja
repz
hlt
or
stc
clc
xchg
push
out
jns
inc
xchg
jecxz
mov
std
negb
xchg
out
out
mov
lcall
cmc
pop
sbb
fnstenv
cmp
sbb
std
bndldx
jnp
jnp
mov
mov
dec
es
inc
pusha
aas
repnz
and
and
imul
mov
push
movsb
popa
pop
mov
inc
xor
inc
push
dec
dec
test
xchg
dec
out
dec
jb
je
xchg
jl
jle
push
fsubrl
sbb
imul
outsb
xchg
add
add
fwait
adc
sub
fnsave
mov
mov
mov
mov
lods
mov
bound
mov
mov
inc
repz
jge
stos
sarb
popf
nop
xchg
in
dec
mov
fidivrl
add
mov
ret
inc
lahf
jmp
and
shl
cmc
jae
notb
clc
sti
pop
jns
mov
loope
popf
enter
out
sbb
out
mov
adc
insb
sbb
jb
rorl
inc
pop
push
add
push
je
xchg
shr
cmp
mov
add
lea
cmp
cmp
and
add
pop
or
sub
jg
mov
push
xor
pop
fidivs
and
aad
adc
daa
inc
add
scas
dec
xor
je
jns
jp
repnz
jg
popa
je
pop
and
or
dec
insl
lock
call
cld
fstpt
repnz
mov
adcl
fildl
mov
mov
mov
mov
pop
or
enter
mov
jecxz
dec
push
cmpsb
fisubrs
mov
rol
xchg
xlat
or
stc
jmp
fidivs
arpl
pop
mov
dec
lret
push
mov
ds
lods
cmp
mov
sub
mov
call
out
lea
adc
sbb
sub
push
sub
inc
xchg
fistps
xchg
popf
xchg
divb
shll
jl
mov
dec
and
sahf
xor
push
imull
push
xchg
pop
lret
push
push
sti
cmp
xorl
cltd
inc
inc
sub
inc
push
dec
mov
mov
insb
jb
sbb
jbe
addr16
or
jg
js
mov
imul
mov
add
fwait
xchg
nop
pushf
sbb
mov
inc
addb
or
lea
mov
stc
enter
mov
shll
xchg
or
stos
sarb
fs
dec
cmp
ret
enter
popl
iret
pop
push
xorl
dec
mov
or
jo
jb
mov
push
dec
out
ss
jns
mov
inc
sbb
add
add
or
jae
jl
xor
and
jecxz
daa
jae
cmp
loope
and
and
pop
sub
sub
imul
push
inc
pop
lock
push
mov
ds
push
jmp
fimuls
jno
jae
jne
cmp
js
ljmp
shrb
addr16
mov
jno
add
lahf
out
xchg
xchg
mov
into
xor
subb
out
fpatan
stc
push
stos
mov
sub
add
sub
and
mov
lods
sahf
ljmp
push
cmp
fildl
xchg
filds
cwtl
push
popf
repz
mov
out
jno
into
outsb
lock
and
scas
fdiv
inc
xchg
cli
or
in
loopne
loop
inc
jecxz
inc
lock
jo
push
mov
adc
inc
cmp
sbb
push
stc
add
add
mov
cmove
rdmsr
arpl
inc
cmp
mov
mov
daa
xchg
sub
push
push
sub
pop
push
mov
pushf
pop
pop
sbb
out
mov
and
dec
dec
out
loope
dec
mov
xchg
xchg
jns
leave
pusha
jge
mov
cltd
cmp
dec
jbe
push
outsl
dec
sti
neg
xor
ficompl
stc
repnz
mov
xor
mov
sbb
ret
mov
mov
cmp
mov
jmp
std
scas
jns
xchg
inc
aam
xchg
fnstcw
pop
ficoms
jne
mov
outsl
lret
js
stos
or
lock
mov
idiv
mov
cmp
loope
jecxz
daa
in
ss
cwtl
nop
and
pop
push
in
sbb
sbb
mov
lock
enter
pushf
push
pop
xor
inc
xor
sarb
stos
fdivrs
sub
aas
and
and
pop
jp
add
mov
add
sub
push
push
and
pop
gs
adcb
and
hlt
xor
and
aam
out
ja
jns
stos
mov
aas
popf
ret
cmp
xlat
sub
repz
insl
add
xchg
nop
dec
cmp
cltd
sbb
fmull
loope
insb
lcall
test
and
nop
mov
addb
pop
loop
xchg
jno
movsl
xchg
add
inc
lods
lods
sub
aad
data16
adc
and
fcoml
jle
jp,pn
int
sub
int
iret
pusha
push
add
push
test
jb
push
in
pushf
jecxz
call
out
xlat
adc
adc
js
jmp
mov
shl
movb
test
or
int
sbb
mov
fidivrl
cmp
mov
inc
cmp
adc
xchg
lds
jle
sub
movsl
pop
jne
ljmp
loop
dec
popf
testb
sbb
addr16
dec
jg
dec
dec
cmp
mov
lret
jbe
dec
jnp
arpl
jl
xor
decl
fisubrl
push
icebp
jbe
out
cmp
stos
adc
stos
rorl
bound
sub
mov
inc
mov
dec
inc
mov
fidivl
xor
push
jbe
movsb
cmpsl
pop
leave
dec
add
jae
rorb
fwait
fcoms
fisubrl
fdivrl
in
xor
lock
jnp
imul
cli
popa
cld
addl
or
pop
mov
jg
sub
inc
sub
pop
jno
sbb
mov
sbb
pop
loopne
jecxz
inc
aad
aad
sbb
aaa
dec
mov
adc
rorb
dec
daa
lods
pop
imul
add
push
push
pop
imul
inc
pop
ficompl
fwait
popf
inc
jecxz
inc
dec
outsl
faddl
in
pop
or
dec
jae
xlat
je
cmp
jno
xor
add
dec
int
int3
adc
xchg
nop
stc
xchg
xor
and
pop
popf
pushf
movsl
sahf
add
test
mov
mov
pop
mov
cli
mov
push
and
jp
pop
mov
out
push
xchg
ljmp
ds
pushf
es
fists
rol
scas
aad
jnp
andb
hlt
out
cmp
negl
push
sti
cli
push
cld
in
iret
test
lcall
pop
jmp
outsl
in
stc
out
pop
adc
adc
sbb
xchg
add
in
mov
xor
setl
xor
jbe
mov
inc
cmp
aad
cmp
lret
in
sub
push
xor
das
nop
push
and
sbb
mov
cwtl
inc
pop
je
dec
push
cmp
jb
dec
dec
push
jno
xor
xor
mov
mov
es
cmc
int
imul
nop
xchg
addr16
jp
cmp
out
sbbl
loope
mov
jle
mov
mov
mov
jmp
mov
mov
lcall
lods
push
and
cmp
pop
cmp
jl
xorl
mov
lret
jbe
add
pusha
push
insb
dec
outsb
insb
clc
leave
js
mov
loope
pop
loop
in
add
jns
ljmp
jge
adc
cmp
popf
sbb
jmp
push
ds
mov
xor
cld
push
cmp
lds
out
pop
xor
xor
cmpsl
cmp
in
push
and
and
jge
jmp
stos
sub
test
out
dec
shrb
pop
pop
add
ficompl
inc
daa
cld
sub
xchg
rorb
dec
rcrl
jno
into
or
shlb
insl
jnp
in
and
jnp
add
or
fs
sub
pop
adc
ljmp
test
xchg
lcall
sub
in
mov
mov
mov
add
mulb
jg
scas
ds
stos
mov
aaa
cmpsl
cmpsb
pop
sub
scas
adc
lods
std
aam
sahf
xchg
add
pop
fisttps
rol
mov
enter
popa
xchg
popf
je
rep
adc
inc
insl
cmpsb
sahf
outsl
sub
mul
loopne
in
lock
call
out
mov
adc
sbb
sbb
mov
fadds
add
mov
stos
or
push
outsb
xor
adc
xchg
push
adc
cmp
add
test
dec
inc
and
sub
sub
sahf
push
je
call
pop
ret
rcrb
sbb
push
inc
and
js
or
jge
out
jne
dec
jbe
js
sub
in
jle
das
arpl
sub
mov
stos
outsb
mov
bound
cltd
mov
cmp
sahf
push
pop
xor
test
sub
movsl
jne
and
leave
push
mov
scas
mov
mov
cli
sbb
out
lods
scas
jnp
rcl
loop
mov
mov
ret
push
add
int3
incl
cmc
icebp
not
int
pop
jns
mov
in
out
inc
jmp
enter
stc
nop
add
cmpsb
cli
push
and
cmpsl
mov
add
out
leave
add
or
lea
mov
je
dec
aaa
in
inc
insb
cmp
cmp
out
dec
data16
or
push
dec
test
bound
xor
or
sbb
push
push
jmp
out
dec
xchg
dec
rol
jno
ja
sti
lahf
imul
jg
int3
fsubrp
arpl
fs
imul
outsb
push
sbb
rep
cltd
pop
lcall
adc
jb
jbe
nop
lahf
sarl
mov
mov
mov
cmpb
cmpsl
inc
cli
test
stos
sar
scas
ja
sarb
shr
pop
out
fldcw
push
mov
pop
ljmp
iret
mov
cmc
rcll
lods
out
ja
pop
inc
jecxz
in
bound
arpl
divb
hlt
lds
std
sbb
and
and
or
or
shlb
aam
lods
shl
xchg
fstpt
cwtl
xchg
aas
cld
sahf
lock
mov
js
ss
sbb
movsb
rcll
adc
pop
cli
and
inc
inc
inc
aam
fisubl
enter
sar
insl
repnz
mov
mov
mov
daa
pusha
pop
bound
mov
imul
daa
sub
and
cltd
ss
lcall
fcompl
jp
mov
mov
mov
pop
cmc
cs
pop
jmp
cltd
mov
out
ljmp
stos
inc
lods
dec
aam
popf
push
outsl
aam
dec
mov
stc
mov
mov
int
sahf
fwait
int3
mov
idivb
shlb
jle
inc
outsb
loopne
movsb
mov
cmp
stos
dec
xchg
out
xchg
repz
daa
notb
push
hlt
sbb
sbb
mov
push
in
test
lahf
push
push
xor
xor
fs
movsl
xchg
test
and
daa
adc
sub
mov
roll
or
inc
push
mov
xor
dec
insl
dec
push
lods
mov
je
jbe
mov
jg
inc
pusha
xor
sub
dec
push
lods
imul
addr16
call
cltd
and
movsl
cmc
les
cmp
pushf
adc
jge
js
mov
pmulhuw
cltd
mov
call
mov
mov
stos
jnp,pn
scas
sarl
inc
fisttpll
push
xor
dec
sbb
add
les
ja
lret
into
rorb
lcall
stos
cli
pop
jle
mov
push
inc
push
in
cltd
and
call
fmuls
inc
roll
adc
std
sbb
stos
push
scas
imul
add
movsb
xchg
pop
push
push
xchg
dec
xor
xor
xor
mov
dec
cmp
pop
popa
incb
pop
and
mov
out
sub
sub
subl
lock
das
inc
pop
enter
inc
fsubrs
jae
pushf
or
ss
fwait
cmpsl
dec
xchg
adc
adc
lods
fs
jns
jnp
sbb
jg
clc
pusha
ss
lea
pop
xchg
lds
sarb
in
jge
outsl
pushf
lahf
rcl
sbb
imul
andl
aaa
ficomps
pop
scas
iret
cmp
test
mov
adc
stos
lods
jge
fucom
and
scas
test
inc
imul
jmp
mov
mov
inc
int
pop
subb
testl
std
decl
insl
in
inc
fsubr
jmp
sti
in
dec
out
cmp
test
sbb
mov
mov
add
mov
or
filds
adc
lds
xor
cmp
cmp
das
cli
push
aaa
sub
daa
mov
roll
xor
mov
push
push
push
std
add
mov
dec
pop
mov
loope
dec
push
cmp
and
push
push
es
jg
cld
cli
arpl
daa
lds
mov
insl
jecxz
push
jae
add
cltd
cwtl
test
adc
add
ja
and
fisubl
popa
xlat
mov
mov
rclb
test
repz
cmpsb
shlb
fcmovnu
xor
movsb
inc
fbstp
rol
ret
inc
mov
in
das
int
iret
into
mov
hlt
fcomps
cli
daa
cld
push
aad
ja
pop
mov
or
jbe
adc
sti
dec
and
dec
xor
outsl
sbb
lods
add
mov
or
or
sub
xor
dec
cmpsl
mov
aas
mov
repnz
mov
shrb
jle
adc
cmpsl
push
inc
lock
mov
rcrl
inc
fildl
inc
cmpl
mov
and
cwtl
je
cmp
test
jl
adc
add
in
sbb
pop
insl
and
and
imul
mov
shlb
test
les
mov
mov
cmc
mov
inc
and
xchg
sbb
mov
cmp
cmpsl
push
or
loop
mov
lcall
xchg
imul
mov
filds
rorl
popa
test
dec
cli
xchg
int
jmp
shl
mov
mov
std
mov
call
loope
loop
in
bnd
scas
ljmp
cmp
sbb
pop
loopne
mov
ss
mov
scas
cld
push
xor
dec
cmp
mov
push
and
pop
data16
add
cs
and
push
push
jno
mov
pop
and
jbe
icebp
imul
rol
dec
pop
dec
dec
dec
incl
jae
fnstenv
jns
cwtl
jp
xchg
push
xlat
jbe
mov
xchg
and
add
sarl
nop
dec
xchg
cmp
lcall
rclb
xchg
pop
scas
mov
mov
mov
mov
or
sbb
or
movsb
jmp
fsubs
lds
mov
lret
aad
inc
rcr
hlt
test
lock
sarb
fxch
lret
iret
pop
lds
repz
pop
hlt
inc
test
sti
jl
pop
repz
xorl
cli
in
in
lret
adcb
push
pop
inc
cmp
mov
sbb
add
out
pop
xchg
mov
imul
xor
mov
lret
cmp
cmp
pop
jne
and
mov
es
jecxz
sub
jle
in
sub
push
mov
pop
iret
bnd
push
inc
int3
ja
push
inc
add
jecxz
bound
lcall
push
fists
aad
popa
test
pop
xor
pop
imul
jns
cltd
xorb
scas
addb
mov
or
mov
jl,pt
inc
adc
leave
mov
mov
stos
pop
sbb
scas
lods
shrl
rcl
int3
sbb
les
rol
lds
and
int
lcall
ljmp
lods
stc
cltd
stos
bswap
cld
dec
in
sub
xlat
or
out
mov
mov
or
cmpsb
dec
sbb
push
jp
lods
xchg
insl
stos
arpl
jne
or
in
xor
and
mov
cmp
and
shlb
sub
fidivl
int3
incl
mov
pop
inc
inc
cmpsl
inc
jg
or
pop
dec
movsb
dec
adc
icebp
add
jo
cli
jmp
dec
jnp
in
jl
aad
pusha
pop
jno
fs
sbb
jge
push
insb
mov
daa
stc
mov
fstps
aas
xchg
and
xchg
xchg
xlat
mov
insl
test
sub
cmc
lret
push
jge
in
jnp
lock
or
inc
cwtl
mov
lods
dec
scas
cmp
data16
std
aad
fcmovnbe
enter
int
fisttps
les
pop
push
enter
loope
pusha
adc
xchg
cmc
hlt
addr16
lret
rolb
adc
shr
mov
out
out
cmpsb
cmpsl
adc
adc
mov
std
push
push
cmpsl
imul
or
cmp
inc
pop
daa
cmp
and
pop
mov
and
sub
cmp
sub
push
cmp
pop
sub
rolb
pop
add
inc
inc
loope
das
stos
dec
ja
dec
dec
cmp
jae
jne
insb
xchg
pop
cltd
jnp
decb
dec
out
loopne
bound
addr16
or
inc
xor
nop
xchg
inc
stos
mov
jb
lahf
subl
popa
xchg
mov
test
pushf
mov
adc
mov
sti
mov
and
inc
fisttpll
add
iret
cmp
test
fcomp
dec
fists
mov
aad
es
pop
adc
repnz
data16
es
in
cld
jmp
push
in
add
stos
pop
add
lahf
out
adc
mov
push
sbb
daa
add
mov
mov
or
inc
xor
aam
xor
aaa
cmp
or
and
mov
daa
outsb
push
sbb
add
ret
mov
jg
pop
testb
push
push
inc
cmp
inc
dec
cmp
jno
jae
inc
je
jae
js
jp
inc
out
popa
das
inc
bound
inc
imul
xchg
cmpsb
xchg
xchg
xor
cltd
cwtl
xchg
ret
lahf
stos
addl
aad
das
pop
pop
ljmp
and
adc
sub
mov
mov
fldt
lods
xchg
rcl
jle
aad
push
dec
dec
mov
ds
xchg
ret
ret
cmpsl
push
loope
xchg
ljmp
aad
or
stc
clc
and
std
mov
jecxz
in
aam
add
add
adc
pop
imul
inc
sbb
cli
add
push
adc
or
mov
jo
mov
test
mov
cmc
dec
mov
and
les
sbb
adc
mov
or
pop
add
mov
rolb
pop
cs
mov
or
jb
jnp
jbe
js
mov
xchg
mov
mov
push
mov
mov
clc
xor
cltd
mov
or
mov
cmp
ret
rcll
mov
aad
sbb
mov
mov
loopne
cmpsl
cmp
test
stos
inc
lods
aaa
or
lds
jecxz
fmull
shll
dec
push
xlat
xor
mov
test
pop
lods
lock
cmp
outsb
jmp
or
fsubl
pop
mov
pop
sbb
cli
cli
std
mov
add
pop
xor
xchg
or
or
or
xor
ss
test
mov
je
jp
xchg
jle
call
sub
aaa
ds
movsl
push
fstpl
cmc
pop
pop
add
inc
sub
jno
lahf
popa
mov
push
pushf
loop
sbbl
push
cmovg
pop
test
jb
mov
mov
mov
xor
arpl
cli
mov
mov
mov
addr16
ret
fidivl
mov
mov
repnz
cmpsb
jp
stos
push
lods
test
scas
jbe
sarl
push
mov
and
ret
ret
mov
cltd
gs
pop
std
rolb
pop
stc
clc
jbe
jle
jb
mov
xchg
mov
subb
test
addl
xor
inc
sbb
xchg
add
imul
or
jns
adc
cmpsb
pop
mov
mov
inc
mov
and
movsl
sbbb
sub
push
in
push
push
test
pop
push
pop
fstl
sbb
sub
mov
inc
jmp
insb
cmovl
bound
ja
sub
dec
scas
pusha
jg
mov
push
bound
addr16
jmp
push
ja
outsb
dec
nop
and
cltd
int
jae
fwait
popa
popf
aam
dec
lahf
mov
fmuls
aaa
mov
xchg
sahf
test
into
mov
and
mov
leave
cmpsb
push
add
push
movsb
rcl
mov
cmp
out
shl
mov
stos
aad
jns
int
iret
add
lock
ja
sub
std
xchg
repnz
or
mov
call
int3
out
adc
sbb
jg
sbb
push
add
call
cmp
in
sub
rolb
stos
aam
repnz
pop
test
jnp
aas
inc
jge
and
daa
xchg
xadd
outsl
das
clc
push
push
push
push
push
push
ficoms
pop
andl
iret
enter
mov
das
inc
inc
inc
int
imul
dec
outsb
sbb
je
jbe
mov
pop
adc
jle
not
pop
out
addr16
fnstenv
outsb
fcmovb
aaa
outsl
mov
sub
hlt
call
cltd
test
adc
fisttpll
pop
sbb
imul
stos
mov
mov
mov
pop
aad
stos
hlt
arpl
rorb
pop
fisttpl
shrb
roll
es
rorl
mov
lods
clc
mov
mov
dec
nop
mov
jmp
mov
adc
pusha
sbb
repz
in
inc
add
sarb
pop
adc
push
fcompl
les
adc
imul
cmpb
rorl
aas
xchg
and
mov
and
mov
sub
jecxz,pn
jae
push
shlb
aaa
cmp
mov
rolb
dec
lret
iret
pop
bound
jb
arpl
jbe
mov
ret
lahf
in
pusha
fists
dec
fs
imul
outsl
test
cmpsl
clc
pusha
xchg
hlt
cwtl
jg
test
addb
sbb
sbb
fdivl
sbb
das
adc
cwtl
mov
push
cmpsb
adc
push
stos
jg
push
scas
out
inc
enter
pop
rol
out
test
sub
and
jns
in
pop
sbb
jae
clc
mov
insb
or
cmpb
enter
imul
cmp
mov
fldl
push
jp
lea
mov
dec
or
xchg
pop
mov
fidivs
cmpsl
jnp
ljmp
cmp
int
and
mov
sub
ret
push
sbb
add
push
pop
cld
mov
mov
ljmp
lds
mov
scas
addr16
aad
je
jns
inc
jnp
xor
rcll
sub
mov
imul
in
xchg
add
xchg
jp
pusha
sbb
cmpl
push
dec
mov
or
jno
loopne
je
mov
dec
mov
out
pop
cmpsb
int
jnp
lock
add
pusha
lcall
pop
fmul
repz
ret
push
fcmovne
enter
ror
into
cld
lock
cmc
in
jne
sti
cld
std
or
loope
jecxz
in
in
jmp
in
dec
out
arpl
adc
and
sbb
ss
push
pop
cmp
xor
inc
cld
or
scas
jle
push
jecxz
imul
sahf
sbb
push
fadd
and
pop
mov
and
jp
or
sub
das
pop
inc
mov
pop
sub
pop
push
pop
inc
pop
fsubrl
addl
dec
mov
inc
std
dec
pop
jno
int
aam
push
fnstcw
dec
jp
sbb
popa
ret
mov
in
mov
int
nop
mov
jns
xchg
dec
enter
lahf
and
mov
iret
xchg
cmpsb
movsb
mov
mov
xlat
mov
sti
lahf
mov
dec
mov
movsl
pop
cmpsb
cmpsb
leave
or
daa
rorl
xlat
pop
fcomp
fsubs
sbb
aam
mov
les
jno
into
icebp
jecxz
loope
divl
jno
adc
loopne
inc
in
out
ja
xchg
ljmp
adc
push
in
arpl
add
mov
push
scas
add
mov
or
nop
fadd
cltd
xor
outsb
les
cmp
rcl
ja
rep
sub
and
and
xchg
sub
add
push
push
fwait
push
in
mov
pop
clc
iret
cmp
adc
dec
fmuls
inc
cs
mov
push
jbe
js
lock
sub
pusha
push
dec
inc
aad
xor
sbb
adc
cmp
and
jae
or
test
incb
mov
mov
and
mov
mov
movsb
adc
fldt
scas
cmp
enter
fcoms
incb
inc
jo
lret
lret
iret
dec
mov
mov
pop
test
mov
loope
fs
in
negl
movsb
cltd
insl
adc
mov
dec
mov
add
jae
pop
pop
pop
mov
inc
push
mov
xor
and
cmp
push
mov
pop
push
aaa
pushf
sub
sub
push
mov
pop
pop
movsl
js
add
inc
dec
inc
add
dec
pop
out
icebp
jecxz
jb
sub
jbe
js
jp
into
jg
popa
arpl
lea
adc
insb
mov
std
xchg
sub
and
pushf
add
test
xchg
mov
fnsave
push
cld
dec
inc
mov
add
mov
pop
stos
lods
mov
test
inc
xchg
fst
cs
inc
fld
enter
sbbb
into
icebp
movl
adc
std
scas
lcall
loopne
dec
mov
lea
out
and
int
jl
ret
cmp
add
add
jno
or
xor
mov
xor
cmpb
pushf
jo
mov
adc
aam
mov
jp
push
adc
jno
sbb
je
fisubrs
stos
clc
push
fisttps
leave
dec
ficomps
jb
je
xchg
adc
jbe
jge
jg
sbb
aam
test
cmpb
fistl
shll
mov
cwtl
jecxz
lahf
mov
pop
int3
fs
or
lods
sub
add
das
mov
mov
dec
mov
push
lods
shl
pushf
mov
cld
xlat
sbb
xchg
add
dec
jne,pn
lret
lret
iret
mov
insl
hlt
jle
sub
xchg
push
jecxz
push
loope
dec
jmp
out
out
dec
adc
adc
push
sbb
mov
add
xchg
call
mov
scas
xor
ss
adc
jns
aas
int
and
cli
and
stos
dec
sub
ret
push
pop
pop
jl
shrb
inc
inc
inc
xlat
cmp
fadd
cmp
dec
xchg
or
sbb
pop
les
add
pop
popa
mov
cmp
leave
xchg
push
test
mov
out
jae
sub
pushf
std
inc
mov
test
in
pop
mov
sbb
lcall
fs
mov
dec
cli
shll
jge
aad
js
or
xchg
fldenv
mov
cs
ficoms
or
mov
lret
and
int3
iret
rorl
lock
ret
test
outsb
adc
push
in
test
jecxz
in
out
popf
call
dec
out
fsts
ds
adc
push
js
push
sbb
or
add
adc
or
cmpsb
jl
xor
outsl
cmp
mov
ds
int
xlat
inc
lcall
push
push
jl
repnz
fisubrl
pop
sbbb
fldenv
inc
push
dec
jp
dec
ljmp
mov
jnp
out
jl
push
mov
pop
sub
inc
outsb
or
xchg
xor
pop
scas
fwait
lcall
push
aas
into
xchg
push
mov
mov
enter
fiaddl
mov
cmp
pop
movsb
out
xor
test
dec
nop
jecxz
ss
sbb
mov
push
mov
fcoml
ret
fldl
cmp
repz
iret
loopne
pop
repz
mov
cs
addr16
adc
push
sbb
in
xchg
out
fwait
xor
in
insl
out
pop
jmp
call
sbbb
add
xchg
loope
addl
dec
rorb
sub
mov
cmp
je
sbb
int3
mov
jae
in
cltd
push
or
sub
mov
push
xchg
adc
aam
dec
pop
pop
imul
rcrl
pop
aam
and
jne
stos
jb
stc
mov
test
jl
add
mov
push
xor
xchg
jle
nop
out
xchg
adc
jns
mov
pushf
loopne
mov
incb
xchg
cwtl
xchg
or
and
imulb
and
mov
pop
mov
inc
mov
mov
mov
mov
stos
lods
jl
scas
mov
pop
rcl
mov
inc
pop
js
lea
fcompl
ficompl
push
popf
enter
mov
orb
jo
rcrb
mov
stos
pop
mov
test
add
in
push
out
and
call
mov
insl
lcall
add
and
xor
xor
lcall
dec
push
dec
and
mov
add
xor
sub
xor
push
cmc
push
aas
aas
pop
lds
pop
jge
push
inc
testl
xor
mov
add
pop
push
and
jns
jle
jg
push
pusha
clc
push
inc
fbld
push
int
xchg
jbe
xchg
mov
xchg
dec
or
addr16
sahf
mov
inc
rcl
arpl
inc
push
and
stos
push
mov
movsl
or
pop
test
arpl
into
test
aaa
push
mov
xor
xor
sbb
xlat
push
data16
jae
sahf
sarl
pushf
les
outsl
sub
dec
stos
jo
adc
ret
test
sti
cli
cmpsl
dec
pop
out
jmp
ds
enter
push
push
sbb
imul
addl
add
push
clc
jmp
jb
cmpsl
popa
cltd
dec
jne
fcoms
shrb
ss
and
ds
and
mov
dec
mov
das
add
clc
push
push
sub
adc
test
fimuls
inc
cli
cmpsl
inc
in
push
dec
dec
adc
lock
shll
inc
xor
js
jp
inc
xchg
and
lea
mov
ret
xor
subb
nop
mov
mov
test
sahf
sbbl
inc
xchg
mov
mov
push
mov
hlt
addr16
fstpt
adc
mov
movsb
daa
cmpsl
in
test
mov
xchg
rcl
cs
aam
xor
outsb
lods
ss
sub
in
xchg
lret
inc
int
mov
push
cmc
adc
sbb
data16
xchg
std
enter
inc
incb
in
das
jp
loop
lret
jle
sti
and
les
shld
test
int
or
pop
pcmpeqd
mov
xchg
loope
xor
adc
and
les
xor
sub
push
dec
bound
push
mov
pop
repnz
inc
jae
inc
es
inc
mov
cmp
xchg
pop
inc
jne
orl
fnstsw
popa
insl
arpl
int3
sub
cmc
push
add
insb
nop
mov
mov
addr16
mov
test
imul
idivb
stos
mov
mov
mov
aaa
cmpsl
mov
adc
mov
sbb
repz
inc
ja
jl
mov
lods
jno
push
sar
shrb
aam
sarl
ret
rcrl
adc
daa
lret
lret
iret
test
lock
sbb
cld
xlat
lret
sbb
in
nop
out
incl
in
in
pop
lret
jbe
xchg
stc
sbb
fimull
dec
add
push
outsb
rorl
ljmp
pusha
xor
mov
mov
and
xchg
movsl
mov
jmp
test
sub
push
int
and
das
pop
je
mov
aaa
inc
mov
pusha
movsb
repnz
pop
pop
ljmp
aaa
outsl
or
ja
push
adc
loopne
xor
push
in
je
mov
push
or
cld
xchg
lret
xchg
inc
fiaddl
cmpsl
cwtl
out
aad
lahf
rcr
addb
mul
mov
push
inc
push
mov
loop
push
cmp
mov
stc
or
add
add
lods
scas
scas
lds
rcrl
mov
xor
cld
rolb
sub
insb
icebp
mov
int3
dec
into
sbb
repz
in
sub
pop
out
xchg
pop
in
in
call
into
jbe
adc
inc
adc
push
xor
push
push
enter
and
add
jnp
xchg
sahf
dec
jno
sbb
sbb
test
dec
pop
push
test
cmp
loop
mov
and
daa
daa
lret
sub
ds
push
push
jno
or
popl
push
jne
repnz
inc
loope
and
sbb
dec
xlat
push
jo
jb
sub
les
mov
pop
arpl
fs
push
outsl
adc
xchg
nop
add
xchg
xchg
add
jne
or
popf
pop
xor
subl
dec
mov
xchg
subb
mov
movsl
xchg
cmpsl
enter
shrl
lock
hlt
inc
xlat
or
rorl
cwtl
rol
cs
fs
mov
into
test
divl
sti
out
cld
push
clc
mul
loop
in
out
xchg
jmp
in
in
xor
insb
or
dec
std
xor
xor
jns
pop
inc
lods
push
or
and
adc
aam
xchg
push
jg,pn
inc
push
xchg
inc
stos
jae
mov
data16
iret
sub
lret
push
ja
mov
iret
pop
mov
xor
jo
dec
inc
pop
dec
cmpsb
dec
xchg
test
xor
shll
jns
pop
jp
jl
jle
pusha
or
or
adc
repz
loopne
jle
dec
popf
mov
mov
add
test
mov
adc
cmc
adc
mov
mov
add
dec
lods
add
and
lods
fdivrs
xchg
rcr
movsb
lcall
jne
leave
push
lret
add
xchg
and
loopne
jg
hlt
sbb
cli
pop
sti
pop
std
fdivr
add
adc
push
fucom
out
jl
lods
int
in
sti
cli
push
add
push
insb
xor
pusha
add
and
push
jle
pop
or
ds
cmp
xor
and
pop
cmp
and
aaa
sub
mov
mov
push
jno
movsl
mov
int
jle
cmp
sahf
into
pop
cmp
fidivs
inc
test
das
push
dec
orl
lods
das
adc
fucomi
ja
cwtl
ljmp
sbb
adc
fs
sti
imul
pop
jp
xchg
mov
out
cwtl
xor
testb
xchg
ljmp
mov
xchg
enter
mov
sub
xchg
adc
cmpsl
cmpsb
stc
xchg
cltd
stos
notl
inc
rcll
rol
ja
mov
add
fistpl
fnstsw
pop
pusha
lds
in
leave
enter
sbb
into
push
mov
repnz
xchg
orl
loope
jecxz
push
dec
jmp
push
out
mov
and
pop
cs
ds
xor
push
add
pop
xchg
roll
push
jbe
or
out
xor
in
shll
in
shll
je
cmp
cmp
jno,pt
and
dec
daa
dec
xlat
sub
cs
dec
xor
push
lret
inc
inc
pop
sub
push
inc
popf
push
xabort
inc
pop
pushf
dec
pop
pushf
dec
dec
and
xor
lahf
push
pop
jl
stos
add
xchg
push
fs
imul
mov
nop
inc
xor
pushf
lahf
adc
mov
cltd
mov
pop
mov
aas
mov
mov
or
mov
mov
add
fildll
inc
out
and
jge
jne
pop
xchg
dec
faddp
shrb
pop
popa
and
leave
cld
aas
lret
iret
xchg
pop
hlt
mov
inc
hlt
jecxz
mov
sti
adc
mov
rclb
mov
dec
mov
mov
xorl
jge
sbb
ret
sbb
icebp
pop
adc
and
or
or
scas
push
push
imul
cmpsl
mov
cmp
and
shll
adc
xor
push
mov
mov
pop
es
dec
push
jbe
sub
push
inc
and
pop
cs
dec
pop
aam
dec
loop
inc
fwait
pop
lds
pop
mov
jg
rcrl
bound
push
mov
and
outsl
jmp
nop
pop
add
mov
xor
addl
dec
lea
mov
mov
mov
imul
mov
movsl
movsb
and
lods
adc
xor
in
cmp
fildl
in
divl
ret
ret
fldenv
ror
lret
iret
cmp
sbb
div
aam
idivl
loope
dec
mov
add
mov
js
out
lret
or
movsb
clc
hlt
xor
mov
pop
cmc
mov
out
add
add
xchg
or
out
or
dec
imul
cmp
js
and
sbbl
sub
das
push
out
push
inc
adc
push
and
pop
pop
sti
sbb
flds
inc
popa
mov
pop
xchg
aaa
cmpsb
dec
jno
dec
jb
fbld
and
lea
popa
cmp
mov
inc
mov
clc
dec
sti
test
add
jne
lcall
cwtl
sbb
aam
std
and
mov
mov
xor
insl
and
mov
pop
jno
mov
les
lods
fldcw
inc
aam
rcr
fcmovne
stos
pop
js
rorl
lds
leave
xchg
out
int
iret
mov
cmc
das
int
mov
dec
cli
stos
cld
push
mov
in
out
call
out
adc
sbb
sbb
sbb
pop
add
add
das
or
or
pop
xor
push
or
cld
cmp
cmp
cmp
and
or
imull
or
mov
push
push
push
pop
push
pop
mov
inc
cmp
inc
xor
fisttps
dec
rorl
jno
jae
jne
ja
jns
jnp
dec
inc
jg
popa
fbld
and
imul
outsl
les
repz
or
negl
sahf
mov
orl
sti
xchg
mov
orl
mov
mov
mov
xchg
mov
mov
test
lods
pop
xchg
rcl
imul
add
cld
flds
fnstsw
ffreep
shrl
rol
xor
cli
lock
ror
ja
icebp
ja
mov
jnp
test
outsl
sti
nop
std
arpl
pushf
loope
jecxz
in
out
jmp
aam
movsb
adc
mov
sbb
push
stos
add
add
push
xchg
or
or
push
xor
or
mov
cmp
cmp
shll
xor
iret
and
es
sub
imull
adcl
push
outsl
push
xchg
pop
fs
lahf
pop
pop
loope
inc
inc
std
ja
inc
stc
arpl
cmc
outsl
dec
dec
icebp
imul
addr16
jbe
dec
or
jge
mov
pusha
nop
bound
xchg
imul
insl
clc
pushf
outsb
xchg
cmp
jge
xor
stos
mov
sahf
xorl
mov
sarb
in
movsl
mov
inc
mov
fmull
mov
fcoml
movsl
rclb
movsb
pop
in
test
scas
ror
and
fxtract
sub
shl
movsl
mov
int
cmp
repnz
sub
insl
std
adc
loop
xlat
out
jmp
sbb
adc
sbb
in
add
scas
lock
or
or
cld
xor
xchg
xor
cmp
cmp
and
xor
aam
sub
sub
push
das
mov
outsb
pop
push
test
pop
pop
lods
inc
inc
pop
mov
inc
push
mov
dec
addr16
jno
inc
jb
je
test
js
mov
jl
popa
push
addr16
imul
lahf
ds
ja
xchg
xchg
movsb
xchg
ds
imul
imul
test
jnp
mov
jg
mov
inc
pop
mov
inc
mov
mov
pop
push
movsl
movsb
jmp
cmpsb
test
pop
lods
lods
repz
into
rolb
daa
mov
fsubp
sarb
dec
cmp
lock
add
clc
xlat
or
loopne
loop
in
pop
xchg
call
and
adc
adc
adc
push
jmp
mov
repnz
pop
xor
or
xchg
xor
pushl
cmpsb
cmp
imull
mov
pop
sub
sub
scas
pop
out
mov
push
push
pop
pop
push
add
dec
push
inc
push
dec
sub
inc
cs
cmp
jno
jp
jne
jle
jns
jb
jge
jbe
popa
daa
push
cmp
imul
data16
xchg
in
mov
cltd
out
scas
popf
jmp
sahf
jle
test
jbe
mov
sbb
push
mov
mov
lahf
pop
mov
mov
movsl
cmpsl
es
jg
popf
shll
jle
cmp
jp
daa
fbld
xor
jb
iret
mov
lret
lret
mov
xlat
iret
xchg
icebp
jecxz
shl
mull
std
sahf
loope
jecxz
in
out
jmp
scas
jmp
or
sbb
or
add
and
or
cmp
xor
ss
test
push
cmp
ds
and
es
sub
mov
push
xchg
push
fstps
pop
lds
jb
aaa
inc
aad
lods
inc
loope
test
in
dec
mov
leave
jo
jb
je
jbe
js
jp
jl
jle
pusha
jo
push
adc
push
dec
outsb
icebp
nop
test
in
xchg
movsb
xchg
jmp
pushf
fcompl
popf
test
xchg
mov
mov
mov
mov
mov
push
xchg
push
mov
push
mov
test
stos
pop
lods
adc
jns
dec
and
xlat
rorb
in
fidivs
xchg
ret
push
iret
pop
int3
add
scas
lock
ljmp
clc
std
pop
out
loope
jecxz
xchg
pop
scas
in
adc
jmp
adc
mov
sbb
and
and
jle
xchg
aaa
push
or
repz
psubq
xor
xor
aaa
push
cmp
cmp
push
and
and
and
dec
sub
adc
push
xor
push
icebp
push
mov
test
inc
inc
cmp
mov
sarl
xchg
sbb
mov
jl
punpcklwd
sti
dec
icebp
xchg
pushf
fs
fwait
cmp
mov
arpl
push
xor
sahf
cli
or
push
test
fimuls
mov
or
mov
or
mov
leave
add
mov
shl
lahf
imul
les
roll
shlb
ds
icebp
fistpll
enter
lds
mov
int
jo
lock
mul
clc
sti
xchg
stc
pop
push
jecxz
sbb
out
sbb
inc
out
in
adc
adc
sbb
push
pop
add
add
loop
lods
or
or
or
outsb
xor
xor
pop
cmp
cmp
and
jg
xor
sub
push
scas
movsl
push
push
or
pop
and
imul
inc
inc
mov
dec
inc
jg
jno
jae
jne
ja
jns
jnp
jge
jg
popa
ss
gs
outsl
jb
nop
pop
pop
xchg
xchg
dec
arpl
xchg
cmp
nop
int
lods
movsl
mov
pusha
cmc
xchg
cltd
js
lea
mov
mov
clc
mov
mov
mov
push
call
cmpsl
cmpsb
cmc
dec
xchg
xor
mov
shrb
xlat
xchg
ss
mov
leave
pop
rolb
push
les
aaa
push
int3
sbb
sub
add
hlt
pop
pop
or
xchg
or
cld
int3
maxps
inc
add
mov
cmp
in
dec
aaa
js
or
mov
push
notb
lcall
mov
xor
cmp
cmp
pop
or
and
sub
push
fdivrl
das
sbb
sub
lea
test
and
lock
inc
sbb
int
inc
clc
pop
mov
sbb
in
sbb
jbe
js
flds
jl
or
inc
fs
push
push
outsb
lahf
or
lret
xchg
xchg
in
xor
cli
sub
jo
inc
xchg
mov
sub
mov
mov
mov
mov
popf
movsl
sub
cmpsb
test
pusha
scas
scas
shl
shll
aam
jle
fisubs
lds
xchg
addr16
into
cld
test
jno
sub
jle
dec
mov
pop
loop
in
out
call
insb
cmpsl
pop
adc
adc
cmp
into
sbb
roll
sbb
fmull
testb
xor
ja
into
jnp
fmul
aas
xor
and
and
push
dec
or
pop
xor
sub
xor
cmpsl
arpl
push
pop
mov
jge
push
mov
loopne
daa
mov
dec
ret
mov
iret
fidivs
lret
jbe
insb
scas
xchg
or
popa
cmp
xchg
imul
cwtl
ffree
fs
xchg
pusha
xchg
xchg
mov
add
xorb
mov
mov
pushl
jmp
pop
mov
mov
shlb
pop
mov
scas
ret
and
lea
je
xchg
sub
jne
xor
ret
lock
les
lret
mov
andl
cli
scas
or
in
xchg
sub
js
paddsb
inc
push
add
rclb
in
repnz
sbb
ljmp
insl
in
fnstsw
shll
xor
ret
fcoml
pop
xchg
nop
fimull
lahf
and
sub
sub
push
push
push
das
pop
sbb
inc
pop
xor
inc
pop
inc
adc
dec
mov
dec
jp
jo
ret
ja
mov
jp
jl
jle
ret
cltd
jns
add
stos
push
xchg
outsb
xchg
jnp
pop
xchg
sub
in
popf
inc
lahf
xor
inc
sbb
dec
mov
data16
test
lahf
mov
mov
stos
mov
test
sub
scas
cmp
shrl
aam
pushf
fcoms
pop
shlb
xor
jle
int3
test
icebp
or
push
sar
clc
inc
xchg
cltd
cld
in
lods
repz
xchg
call
cmp
inc
sbb
add
repnz
add
push
or
or
xor
xor
fs
pushf
into
pop
cmp
inc
and
adc
and
sub
sub
sbb
das
mov
sub
imul
aaa
cmc
mov
dec
mov
dec
jl
jno
adc
lea
jle
test
rcrl
imul
outsb
push
nop
add
cltd
xchg
int
stos
cwtl
sbbl
adcb
mov
pop
mov
jecxz
mov
mov
mov
mov
mov
movsl
sarb
adc
dec
sarl
fsubr
cmpsb
shll
shrl
ffreep
pop
movl
int
iret
push
icebp
adc
and
mov
xchg
ret
xchg
mov
in
out
xchg
int
xchg
xchg
out
out
mov
adc
cmpsb
sbb
lahf
sbb
push
cltd
or
mov
or
stos
push
inc
xor
xor
xor
ss
push
aas
pop
repz
and
and
sub
mov
and
push
icebp
push
add
das
push
push
add
inc
inc
mov
mov
dec
test
jo
jb
pop
inc
jbe
pop
imul
adc
fldt
insl
mov
xchg
mov
jmp
test
lcall
in
cmp
test
orl
mov
adc
or
mov
push
mov
stos
pop
lods
sbb
popf
rcrl
rcl
jl
flds
fimuls
shll
push
enter
int3
inc
into
clc
lock
cmc
inc
inc
pop
lods
dec
sti
or
push
cmp
ret
in
pop
jmp
jmp
lret
pop
ss
cmp
cmp
call
dec
jmp
sbb
sub
mov
idivl
sti
xor
mov
push
add
push
jno
sarb
and
sub
mov
push
je
push
xchg
pop
inc
pop
leave
pop
sbb
sbb
and
jae
and
xchg
dec
xchg
mov
jae
insb
repnz
jbe
js
jbe
dec
push
cs
std
bound
pop
aad
add
hlt
jl
lock
and
ds
and
addb
xchg
xchg
mov
mov
push
mov
and
outsl
stos
scas
out
push
sbb
mov
mov
cwtl
pop
stos
stos
mov
fs
das
aam
mov
pop
rcr
fsubr
xlat
shrl
ffree
cmp
adc
arpl
int
dec
push
lock
outsb
dec
imulb
sti
cli
dec
cld
out
repnz
lods
in
out
pop
call
out
out
ss
adc
out
pop
stos
sbbb
incl
enter
or
hlt
xchg
xor
leave
xlat
ss
ss
cmp
cmp
push
and
pop
push
jge
sub
sub
inc
mov
push
scas
mov
pop
scas
pop
push
pop
stos
int3
dec
divb
sbb
dec
jp
gs
xor
out
and
lds
lds
mov
fmuls
push
jl
jnp
xchg
lock
fcoms
push
icebp
andb
mov
xor
mov
mov
les
pop
mov
setne
pop
lods
dec
popf
scas
fiadds
rcr
aam
in
fmul
fidivl
fisttps
push
les
mov
out
stc
lock
lret
pusha
sar
ret
in
mov
jmp
ret
mov
adc
cmp
jnp
sbb
sbb
imul
mov
pop
push
jns
or
and
femms
repnz
aaa
jle
sahf
cmp
sub
or
sbb
jns
mov
test
push
push
lods
or
mov
fildl
inc
jbe
adc
dec
rorl
or
xor
fs
repz
fsubrl
js
les
jge
fsubl
arpl
fs
data16
popf
insl
insb
clc
je
mov
mov
push
popf
sub
ja
jg
aad
mov
lock
dec
mov
mov
mov
mov
test
jae
cmpsb
sbb
pop
lds
and
or
add
leave
lret
mov
sub
pop
lret
lret
iret
insb
xor
bnd
lods
pop
dec
mov
nop
dec
mov
mov
in
rcrl
mov
icebp
pop
xor
jmp
mov
adc
push
ds
sbb
add
inc
dec
add
push
cltd
jbe
ja
or
push
mov
sbb
inc
xchg
adc
jl
jo
and
push
and
faddl
cs
mov
cmpsl
ljmp
adc
mov
inc
add
xor
shl
sub
dec
adc
loopne
es
ret
sbb
push
inc
push
pop
fcoml
and
lds
xchg
mov
lods
lcall
jb
test
sub
mov
test
mov
lret
adc
fdivl
dec
out
mov
into
movsb
pop
cmpsb
mov
lods
lods
mov
int3
inc
loopne
cmp
out
fisttpll
ret
jl
int
mov
jl
in
mov
iret
stos
and
jbe
dec
stc
ljmp
pop
jecxz
jecxz
cld
out
sbb
jmp
xchg
in
mov
and
cmpsl
outsl
out
sbb
sbb
sti
loop
add
or
or
das
or
lret
xchg
xor
sub
shlb
and
jne
inc
ret
sbbb
xrstors
push
aad
sbb
xor
pop
outsl
pop
rclb
inc
imul
xor
or
mov
jge
push
movsl
sub
mov
dec
popa
pusha
pop
into
push
add
imul
outsl
lcall
xchg
pop
cltd
je
cmp
dec
xorl
mov
and
es
cmpsl
mov
test
iret
hlt
fidivl
repnz
cli
xor
adc
cmp
dec
das
sbb
cmp
push
ret
jp
and
mov
xchg
dec
cld
dec
repnz
pop
sbb
mov
fwait
loopne
loop
in
xor
adc
and
scas
mov
push
adc
add
sbb
pop
jbe
add
mov
in
dec
cld
arpl
push
add
xor
and
icebp
xor
out
pop
inc
and
sub
mov
lods
repnz
pop
or
jp
inc
imul
pushf
mov
cmp
dec
push
dec
cld
jno
dec
cs
ja
pop
js
int
jl
jle
pusha
sbb
fs
imul
clc
nop
xchg
and
xchg
xchg
and
mov
lds
mov
ljmp
xchg
sub
fdivrl
push
adc
cli
stos
movsb
push
cmpsb
scas
test
stos
out
scas
push
aad
xlat
add
fnsave
mov
rol
les
lret
sahf
into
inc
lods
mov
not
xchg
sbb
pushf
daa
mov
loopne
sub
jmp
jecxz
out
mov
pop
sub
cmp
sbb
jp
and
jle
aaa
add
lret
lock
jl
sub
mov
outsb
aaa
andl
cmp
pop
and
push
fldenv
inc
adc
sub
cs
push
push
dec
sbb
lret
mov
mul
test
outsl
inc
cmpsl
stos
xor
loope
cmovp
sahf
dec
dec
lahf
jo
icebp
jne
scas
cwtl
sub
jg
popa
inc
repz
lea
daa
xor
xchg
cmpsb
dec
xchg
out
dec
jae
dec
mov
mov
pop
movl
out
sahf
or
out
subb
dec
mov
adc
mov
mov
test
lods
arpl
rcrb
adc
xchg
sbb
imull
rorb
popa
or
lret
iret
cmpsl
icebp
and
adc
xchg
adc
inc
sti
pop
std
fisubrl
push
test
nop
dec
jmp
in
inc
adc
dec
insb
cmp
jb
pop
mov
sbb
jb
push
or
pop
cltd
or
push
xor
pop
mov
mov
inc
and
and
and
es
js
sub
push
and
and
pop
pop
mov
sbb
push
mov
dec
sub
xor
or
jae
pushf
je
jbe
or
cltd
iret
or
bound
pushf
pop
incb
in
push
xchg
fildl
mov
mov
xchg
lods
and
lcall
rclb
lahf
push
cmpsl
xchg
lea
mov
mov
mov
in
mov
or
daa
clc
mov
mov
cmpsb
test
lods
insl
mov
mov
imulb
in
outsb
pusha
xor
sub
ret
stos
mov
mov
int
aam
jb
add
pop
stos
pop
adc
xchg
in
sub
mov
loop
in
out
cmp
ljmp
push
mov
cwtl
xchg
sbb
js
xchg
test
pop
pop
or
jge
or
inc
push
xor
pop
pop
mov
inc
xchg
scas
fisttpl
mov
lret
jecxz
sbb
out
sub
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jno
jae
jne
ja
jns
jnp
jge
jg
popa
pusha
arpl
imul
insb
outsl
outsb
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
fwait
lcall
addl
mov
mov
mov
mov
mov
mov
mov
test
lods
scas
scas
rcl
rcl
aad
xlat
fcmovnu
fstp
rol
ret
mov
leave
lret
nop
out
int
mov
cmc
mull
stc
sti
pop
fdivrp
decl
loope
sub
in
push
lret
sbb
in
out
out
xor
adc
xor
push
sub
sbb
push
push
pop
and
add
push
push
lea
or
adc
xor
sbb
cmp
sbb
movl
es
or
cs
jne
push
imul
add
pop
xor
pop
cmp
popa
inc
inc
in
insl
dec
dec
sti
imul
test
pop
jp
outsl
pop
jle
push
inc
bound
inc
data16
push
dec
outsb
outsb
adc
mov
xchg
and
sahf
sahf
popa
cmpsb
addb
scas
mov
xchg
xchg
mov
xchg
mov
mov
aad
cmpsb
cmpsb
sub
scas
scas
imul
xor
fcmovu
and
int
ret
in
mov
loopne
lret
into
into
mov
fdiv
testb
incb
loop
push
int3
out
and
out
out
out
cmp
adc
xor
sbb
inc
sub
add
jle
or
test
xor
adcb
cmp
lret
and
add
sub
data16
push
push
jge
pop
add
pop
and
pop
inc
imul
in
popa
dec
dec
mulb
jno
pop
jae
nop
pop
ja
mov
jge
push
jg
jle
arpl
dec
imul
xchg
idivb
xchg
cltd
or
lahf
addl
xchg
xchg
mov
pushf
fwait
mov
adcb
mov
enter
aam
stos
lods
subl
js
xlat
fstps
neg
fisttpll
repz
and
ret
lds
leave
ret
int
loop
icebp
into
fdivp
cmc
mov
sti
std
adc
loope
into
jecxz
pop
lret
es
jmp
push
ret
adc
adc
cmp
sbb
xor
add
add
ja
or
and
or
and
xor
sbb
xor
sbb
cmp
adc
cmp
adc
and
or
sub
jns
sub
dec
add
sub
push
fnstsw
pop
std
jne
pop
in
inc
inc
mov
inc
mov
gs
dec
dec
jle
jo
inc
je
pop
inc
js
cmp
jl
dec
pusha
pusha
or
fs
pop
insb
insb
ret
pop
nop
nop
pop
mov
cwtl
cwtl
xchg
stos
pushf
pushf
subl
test
mov
mov
mov
mov
daa
xorl
mov
push
xchg
movsb
movsb
lods
xchg
test
mov
rcl
test
aam
mov
call
rol
lock
les
enter
int3
int3
adc
lock
loope
cld
cld
lret
int
loopne
shl
in
aad
call
jge
adc
mov
adc
sbb
cs
add
add
or
cmp
xor
xor
cmp
adc
and
sub
sbb
push
push
pusha
push
push
dec
insb
pop
pop
pusha
push
inc
inc
sbb
inc
inc
sub
dec
dec
enter
fiadds
fadds
ja
dec
jns
mov
push
popa
arpl
gs
pop
imul
cmpsl
xchg
xchg
into
mov
cltd
fwait
push
stos
popf
lahf
ds
xorl
test
pop
mov
mov
mov
mov
mov
ret
cmpsl
cmpsb
test
lods
scas
cmp
rcl
jb
aad
pusha
out
push
ljmp
sub
icebp
leave
lret
fdivp
int
ljmp
idivl
nop
fabs
jecxz
fucom
out
shr
jmp
aad
out
inc
sub
adc
and
sbb
and
push
jmp
cmp
push
add
or
pop
xor
xor
or
cmp
pop
add
and
lods
sbb
sub
adcl
push
lea
push
mov
pop
pop
cmpsl
gs
pop
dec
jp
inc
pop
jle
inc
jge
dec
dec
add
dec
adc
jb
dec
jbe
std
inc
jp
out
inc
jle
lret
pop
bound
pop
data16
push
push
outsb
outsb
popa
stos
xchg
xchg
xchg
scas
xchg
xchg
lea
sahf
sahf
mov
mov
mov
lret
mov
mov
cmpl
pop
fwait
mov
cmpsb
dec
xchg
stos
stos
pop
xchg
scas
scas
fldlg2
rcl
lret
call
fcmovu
out
mov
ret
clc
mov
hlt
lret
lock
into
gs
repnz
enter
cli
cli
xor
fsub
loop
fsub
out
aam
ljmp
adc
push
sbb
jo
add
nop
or
mov
xor
in
cmp
and
and
push
adc
das
push
sbb
push
add
pop
xor
pop
es
pop
inc
into
jge
inc
out
inc
dec
clc
jne
dec
test
jno
dec
jae
lcall
jge
inc
jg
pop
pop
arpl
pop
imul
xchg
push
lods
xchg
xchg
xor
fwait
popf
pop
mov
addl
lret
mov
xchg
repz
test
mov
cli
sti
mov
mov
fsubp
cmpsl
test
push
out
scas
shll
rcl
adc
fcmovnu
xor
ret
leave
loopne
lret
int
mov
icebp
mov
mov
stc
nop
mov
jmp
loopne
loop
jo
out
inc
stos
jmp
sub
adc
in
sbb
adc
sbb
pop
add
inc
inc
add
pop
inc
or
insl
dec
or
jns
xor
mov
je
cmp
jl
and
pusha
and
aad
sub
sub
insl
push
push
adc
adc
pop
pop
xor
add
add
dec
dec
cmc
or
je
fwait
xor
jl
cmp
inc
es
cs
insb
pop
sub
xchg
or
cwtl
cwtl
sub
pushf
pushf
pop
fiaddl
test
mov
or
mov
divl
jecxz
mov
mov
xor
test
add
lods
lods
imul
aam
cmp
rcrl
incl
int3
int3
mov
mov
hlt
imul
cld
sub
movsb
in
loope
call
in
leave
test
adc
sbb
sbb
add
dec
or
lret
xadd
xor
jb
aaa
enter
sub
aas
adc
and
insl
and
sub
sub
push
sub
push
push
ret
pop
lock
inc
inc
lcall
dec
dec
add
dec
push
cmp
pop
cmp
ja
xor
sub
jge
adc
popa
arpl
sub
imul
insl
outsl
xchg
xchg
push
fcoml
fwait
push
lret
addl
mov
lea
ljmp
mov
and
mov
cmpsl
adc
test
scas
bound
aad
cmp
fstp
fmuls
or
testb
repz
mov
stc
sti
jle
std
jmp
jecxz
scas
in
mov
in
out
add
adc
pop
push
push
pop
push
sbb
add
push
xor
cmp
push
pop
inc
or
imul
xor
je
cmp
insb
and
jmp
es
ret
pusha
cs
sbb
push
push
jne
pop
pop
imul
pop
add
inc
inc
adc
dec
dec
repz
jbe
shll
jle
mov
bound
sub
xchg
and
outsb
outsb
ficoms
xchg
movsl
lcall
into
addb
mov
adc
mov
psubd
mov
push
out
mov
cmpsb
mov
jecxz
scas
jmp
fwait
adcl
fimuls
ret
mov
outsl
xchg
lret
into
into
xor
mov
cli
cli
std
lods
repz
loop
mov
out
mov
out
out
dec
inc
adc
sahf
dec
sbb
test
add
les
or
lret
xor
imul
add
aaa
xor
pop
pop
adc
sub
inc
add
dec
outsl
popa
outsl
pusha
push
imul
adc
sub
add
imul
aaa
and
and
jne
ja
jns
popa
jnp
jl
jle
pusha
arpl
cli
dec
imul
outsl
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
cltd
in
lods
fwait
popf
jo
lahf
andl
xchg
add
mov
mov
mov
mov
mov
mov
test
lods
scas
scas
rcl
rcl
aad
xchg
flds
fstp
rol
ret
mov
int
iret
into
icebp
mov
aam
stc
mov
sti
std
jp
jmp
je
jecxz
inc
out
pop
enter
int3
out
adc
xor
in
sbb
sbb
sbb
or
es
dec
and
or
or
jnp
xor
mov
xor
scas
adc
cmp
sbb
and
push
and
icebp
add
sub
push
sub
push
push
push
ja
push
dec
jae
pop
imul
popa
jnp
inc
sbb
inc
sub
dec
aaa
outsl
dec
dec
jo
push
je
rcll
mov
jl
mov
inc
fs
push
insb
and
nop
leave
mov
xchg
jecxz
cwtl
cwtl
pop
mov
addb
mov
mov
xchg
mov
mov
popf
mov
mov
testl
rcl
push
cmc
aam
dec
icebp
fcomp
arpl
adc
rol
in
les
loope
enter
int3
out
out
lock
hlt
mov
clc
clc
test
loopne
xchg
lret
imul
in
in
pop
adc
fidivrs
sbb
in
sbb
add
add
or
sbb
xor
aaa
mov
cmp
mov
or
and
add
sub
add
das
jnp,pn
push
pop
jg
push
dec
jae
pop
insb
ja
pop
sbb
inc
inc
sbb
inc
arpl
int3
addr16
dec
ficompl
jae
pop
jne
int3
push
jns
mov
jge
lcall
addr16
inc
imul
mov
xchg
xchg
shlb
lahf
loop
addl
dec
cmpsb
lea
inc
sahf
mov
mov
xchg
mov
mov
out
test
scas
ret
shrl
cmc
fcmovu
jb
rol
jmp
leave
lret
sub
int
ss
repz
fdiv
neg
aam
sti
sar
ljmp
enter
jmp
out
push
cmp
push
push
repz
push
push
sbb
add
xor
push
push
inc
or
outsl
and
push
inc
push
xor
mov
ss
push
cmp
stc
adc
ds
push
and
lret
or
and
sub
lsl
adc
push
pop
jnp
push
aas
ja
pop
and
outsl
inc
inc
jecxz
inc
inc
repz
dec
xchg
dec
xchg
pop
jb
sbbl
jp
dec
jle
dec
push
bound
push
data16
push
pop
outsb
outsb
jmp
xchg
xchg
pop
movsb
xchg
xchg
xor
lods
sahf
sahf
pop
mov
orb
mov
stc
xorl
mov
adc
cmpsb
cmpsb
inc
cltd
stos
stos
pop
popf
scas
scas
fnclex
rcl
cmc
out
out
fcmovu
mov
scas
bnd
test
pop
cli
lret
dec
into
inc
ret
xor
div
and
into
jmp
xlat
out
fstp
ljmp
and
adc
mov
sbb
mov
xor
or
cmp
or
adc
xor
jl
cmp
inc
pop
and
mov
sbb
push
cwtl
addr16
push
mov
pop
movsb
outsl
pop
pop
pop
push
inc
pop
jbe
inc
jle
inc
dec
add
dec
adc
jno
inc
jae
testb
call
dec
jg
mov
push
imul
xchg
mov
xchg
xchg
mov
lods
fwait
popf
shrb
test
mov
mov
mov
mov
test
mov
mov
mov
movsl
xchg
nop
cmpsl
test
int3
cwtl
scas
rcl
rcl
aad
loopne
fnstsw
shll
lds
lock
leave
sbb
lret
int
clc
iret
icebp
test
cmc
loopne
idiv
fadd
sti
std
lret
loope
fninit
in
jmp
insb
xlat
out
adc
sbb
mov
sbb
mov
cmp
fstpt
or
jecxz
or
cmc
xor
cmp
xor
sub
add
add
and
insl
sbb
inc
pop
sub
pop
adc
cmpsl
pop
push
push
int
push
push
stc
outsl
pop
pop
xchg
arpl
addr16
inc
stos
jnp
inc
mov
jo
dec
push
je
jo
dec
je
cmp
sbb
jl
inc
pusha
pusha
out
fs
pop
push
insb
aad
nop
nop
inc
test
xchg
jne
cwtl
cwtl
imul
adcb
mov
mov
mov
mov
roll
mov
or
lods
lods
jnp
rcl
xor
in
fcomp
shl
shl
shr
std
cli
enter
int3
int3
cltd
repnz
into
hlt
hlt
ja
clc
clc
outsl
cld
cld
pop
ret
push
fsubp
in
call
or
sub
sbb
and
add
add
or
or
xor
add
cmp
sbb
and
sbb
sub
adc
push
je
push
push
pusha
addr16
pop
adc
pop
or
inc
sub
inc
cmp
dec
dec
les
dec
in
dec
jno
ret
ja
inc
jns
mov
pop
popa
arpl
addr16
imul
scas
xchg
xchg
int3
stos
xchg
xchg
loop
cltd
fwait
adc
popf
lahf
cmp
test
push
mov
pusha
mov
mov
stc
mov
mov
loopne
movsl
cmpsl
bnd
lods
scas
aam
rcl
pop
xchg
aad
je
push
fstp
sbb
vmovaps
int
fdivs
cmc
test
mov
loope
mov
jmp
in
in
out
jp
adc
mov
pop
sbb
lds
push
repz
add
cmovbe
push
and
or
push
push
insl
jb
xor
ss
jp
cmp
bound
and
push
sub
outsb
cs
pop
push
push
dec
sbb
imul
pop
add
pop
inc
inc
and
dec
dec
xor
dec
dec
out
jb
lds
jbe
ret
cmp
scas
aas
jle
lea
bound
and
jno
push
dec
sub
rcl
xchg
xchg
iret
rclb
lcall
addb
int3
mov
pop
hlt
mov
dec
lock
mov
mov
mov
std
loope
cmpsb
fucomi
stos
stos
sub
scas
scas
inc
xchg
rcl
jge
pop
popf
fcmovu
or
ret
add
lret
into
into
leave
mov
repnz
mov
notb
mov
loop
pop
mov
ljmp
push
adc
ds
sbb
dec
inc
add
je
or
lcall
cmp
jl
cmp
fisubs
outsl
daa
sub
sub
sbb
push
push
push
pop
push
pop
xor
pop
pop
and
pop
inc
aam
inc
inc
out
cmova
add
xchg
pop
dec
jno
cmp
jbe
ja
bound
jnp
push
ss
and
arpl
imul
outsl
xchg
nop
xchg
xchg
xchg
push
ficoms
popf
pop
lahf
sbbl
xchg
cwtl
lds
mov
std
mov
hlt
icebp
mov
mov
es
cmpsl
test
add
scas
shll
rcl
push
popf
xlat
fsts
fcmovnu
add
ffreep
sub
ret
lds
lret
int
test
icebp
fdivrs
idiv
mov
sti
std
cwtl
mov
loope
test
in
lods
out
jb
jmp
inc
movsb
out
adc
pop
adc
int
sbb
notl
sbb
push
add
or
dec
or
cmp
or
inc
xor
arpl
xor
jp
cmp
cmp
mov
and
mov
push
sub
bound
mov
push
push
mov
pop
pop
pop
inc
adc
outsl
cmove
dec
dec
or
dec
dec
add
jo
sub
je
sbb
js
stc
aaa
jl
out
pusha
pusha
lret
das
fs
push
insb
xchg
nop
nop
outsl
fists
xchg
pushf
pushf
mov
addb
enter
les
xor
mov
and
mov
mov
jae
movsb
movsb
inc
call
lods
lods
push
loopne
rcr
popf
aam
negl
xchg
xchg
rol
les
test
int3
push
xor
hlt
inc
mov
cld
cld
and
in
out
call
in
lds
adc
sbb
pop
jo
add
test
pop
xchg
pop
or
mov
popa
xor
gs
cmp
insl
cmp
and
and
push
jge
pop
dec
jge
pop
inc
and
push
push
add
das
cmp
cmp
and
xor
sub
sbb
sub
sub
jae
push
push
and
adc
xor
or
jle
inc
pusha
sub
pop
or
outsl
pop
xchg
idiv
repnz
clc
call
enter
add
loope
repnz
call
leave
mov
rol
loope
aad
fcomip
rcr
rcl
int
int3
lret
leave
icebp
test
faddp
mov
mov
fisttpl
mov
mov
xchg
mov
scas
cmpsl
scas
pushf
lret
int
xchg
xchg
xorl
clc
sti
insl
std
mov
xchg
lcall
test
jg
push
jnp
gs
jle
push
inc
ja
ja
gs
insl
or
movsl
or
inc
inc
inc
push
pop
inc
jge
dec
pop
pop
dec
push
dec
pop
ja
and
imul
inc
dec
sbb
aaa
aaa
push
push
lods
push
adc
sbb
xor
sub
and
sub
and
push
and
sub
jno
pop
add
sbb
or
pop
pop
ds
jle
popa
and
adc
or
sbb
push
add
xchg
xchg
xor
hlt
hlt
out
repz
ret
cmpb
jecxz
cld
rcl
test
mov
mov
fxch
fcmovnbe
stc
xlat
aad
imul
cli
into
lret
leave
cld
fcmovnu
rcl
mov
xchg
mov
mov
mov
ret
scas
stos
lods
mov
mov
repz
mov
stos
sahf
mov
loope
loopne
adcl
fwait
jl
pop
je
jo
pop
sbb
pop
sbb
jb
insl
push
imul
pop
pop
pop
push
pop
jb
pop
pop
cmp
jmp
outsl
pop
dec
fs
push
dec
push
dec
dec
dec
dec
inc
pop
jl
pop
inc
dec
xor
add
cmp
sbb
sub
pop
sub
dec
inc
dec
or
cmp
and
add
aaa
or
and
adc
or
unpckhps
add
adc
sub
push
add
insb
outsl
cs
xlat
mul
loopne
push
dec
jecxz
stc
enter
adc
jmp
jecxz
sti
mov
std
lds
int3
fdivp
ror
int
xlat
cmc
movsl
cmp
fmulp
dec
ret
mov
mov
fldenv
popf
mov
test
mov
mov
icebp
jecxz
mov
cwtl
fwait
mov
xchg
mov
xchg
nop
xchg
xchg
cmpsb
mov
lahf
mov
jnp
jo
jg
imul
jge
jns
dec
insb
jbe
bound
push
pop
femms
leave
xor
inc
fs
pop
pop
pop
dec
dec
insl
dec
push
push
push
dec
push
pop
addr16
dec
push
pop
sub
jns,pn
pop
imul
xor
pop
sbb
sub
aaa
sub
and
adc
sub
and
and
cmp
jae
adc
aaa
or
adc
aas
popa
pusha
js
and
sbb
sbb
pop
ud0
neg
cli
loopne
lock
cli
out
hlt
repz
filds
hlt
loop
iret
loope
out
shr
fcomp
aam
mov
inc
mov
neg
aad
int
iret
xlat
jmp
ret
shrb
fcmovne
xchg
mov
cmpsl
cmpsb
mov
mov
fstl
xorl
cmpsl
addl
lea
sar
test
mov
test
mov
pop
jb
imul
push
inc
add
imul
cmp
inc
imul
push
inc
jnp
dec
dec
jle
dec
push
dec
and
push
inc
outsl
inc
inc
dec
push
pop
and
and
pop
and
xor
cmp
sub
cs
inc
ljmp
cmp
xor
pop
adc
adc
or
push
add
jl
pop
arpl
push
push
xor
sbb
sub
or
add
in
fcomip
out
xchg
cltd
or
sti
shl
ljmp
out
jecxz
jmp
fst
loop
mov
mov
leave
int
into
rcr
lret
aad
enter
lods
stc
lods
jmp
movsl
mov
stos
mov
mov
mov
mov
stos
movsb
mov
test
mov
xchg
xchg
cli
std
fs
mov
mov
jmp
in
stos
mov
jno
bound
imul
add
data16
data16
addr16
pop
xor
ja
pop
push
pop
push
pop
jno
push
pop
pusha
and
bound
jb
dec
inc
imul
jl
push
xor
ss
cmp
cs
inc
inc
movl
and
sub
das
add
jne
adc
push
adc
or
or
invd
or
cvttps2pi
cld
cld
lock
clc
sar
idiv
repnz
ficomps
mul
out
mov
clc
mov
shl
fcom
fmul
enter
fcmovu
aad
rol
cmc
ret
fildll
movsl
test
mov
mov
scas
lods
test
out
cltd
test
xchg
xchg
popf
mov
mov
xorl
mov
adc
jbe
dec
js
jo
jae
inc
jge
pop
mov
jg
outsb
jp
add
jne
inc
addr16
push
pop
push
push
pop
outsl
pop
pop
push
dec
dec
dec
fs
xchg
sub
pop
imul
adc
cmp
adc
cmp
pop
pop
inc
adc
adc
sub
and
adc
pop
ja
jnp
push
push
sub
or
bound
and
and
sbb
jmp
push
loopne
xchg
cltd
sub
fdivrp
ljmp
test
inc
jecxz
out
fst
cli
fcomi
mov
mov
jmp
rol
ret
rol
mov
xchg
mov
lcall
lcall
mov
mov
lret
mov
fwait
cmpsb
stos
xchg
mov
xchg
xchg
xchg
mov
in
cmpsl
popf
lea
sahf
lahf
out
cltd
adc
jns
jbe
jl
outsb
outsb
js
pop
push
inc
add
jo
outsl
dec
addr16
js
outsl
jnp
pop
pop
jo
push
pop
push
ss
push
jge
dec
dec
and
inc
inc
pop
inc
inc
dec
adc
push
cmp
aaa
pop
pop
inc
pop
sbb
das
and
sub
and
sub
and
sbb
sbb
adc
push
sbb
js
jnp
sbb
cmp
or
ss
add
imul
hlt
cli
push
xchg
ret
xchg
iret
icebp
jmp
fucomip
in
in
loope
test
test
in
ljmp
std
rol
ret
int
mov
fcmovnbe
hlt
iret
aad
into
lret
lret
in
scas
scas
rcl
xchg
mov
lcall
mov
mov
stos
popl
cmpsl
mov
xchg
xchg
sahf
sahf
xchg
mov
xchg
cltd
mov
gs
jle
jl
outsl
jne
gs
push
add
dec
jae
push
js
arpl
push
inc
jb
xor
dec
jge
push
push
outsl
pop
push
dec
insl
inc
dec
inc
es
sub
jp
inc
cmp
cmp
pop
les
cmp
sbb
sub
add
and
dec
mov
and
add
pop
pop
adc
sbb
jg
arpl
push
push
adc
adc
nop
xchg
push
xchg
hlt
in
hlt
neg
repnz
icebp
in
in
loope
loope
call
call
adc
aad
rcl
fnop
lret
aad
mov
shr
rol
fsubrp
ret
lret
lret
andl
fisttps
xchg
mov
mov
mov
xchg
mov
test
lcall
mov
fwait
lahf
xchg
test
xchg
mov
out
stos
arpl
ja
bound
je
jo
push
stos
add
jno
jbe
imul
or
push
dec
imul
pop
push
push
inc
inc
jno
pop
dec
cmp
inc
push
fs
dec
inc
jne
push
dec
sub
xor
aaa
sbb
xor
sbb
sbb
sub
xor
pop
sub
dec
mov
adc
nopl
popa
and
adc
or
sbb
pop
mov
sbb
in
rol
xchg
xchg
xor
std
jmp
addl
movsl
out
loope
mov
lock
ret
in
int3
jmp
ror
fcmovb
shl
mov
rcr
fucomip
enter
mov
aam
aam
mov
mov
movsb
mov
xchg
mov
test
pushf
stos
xchg
test
cwtl
lahf
xchg
lods
cli
xchg
lods
fwait
xchg
test
in
in
cs
inc
addr16
pusha
inc
jae
outsb
jb
js
imul
jno
gs
popa
insl
jns
or
dec
inc
inc
jo
inc
pop
imul
dec
push
ja
add
inc
push
imul
pop
and
cmp
cmp
pop
or
xor
xor
xor
es
dec
imul
sub
sbb
xor
pop
adc
nopl
or
arpl
xor
cmp
pop
sbb
or
loope
in
cltd
lds
sti
repz
ret
loope
cmc
fucom
fsubr
out
stc
std
out
leave
not
xlat
int3
aam
cld
mov
jecxz
lret
ret
cli
int
xchg
shrl
movsl
scas
test
cwtl
mov
mov
mov
mov
lods
scas
mov
icebp
mov
xchg
xchg
cwtl
lahf
mov
nop
mov
movsb
pushf
addl
inc
jge
jle
jns
jg
sbb
pop
inc
gs
jge
imul
jg
arpl
addr16
inc
jne
pop
pop
jbe
push
outsl
cmp
adc
js
push
dec
dec
inc
ja
inc
pop
pop
inc
pop
push
insl
das
cs
adc
cmp
xor
sub
or
xor
add
sbb
sub
and
adc
je
jbe
or
or
cmp
push
or
add
adc
push
add
sbb
loop
shl
loop
lock
loop
clc
out
cld
in
call
shr
ljmp
mov
mov
xlat
shl
ret
shl
ror
into
int
cmc
ret
leave
rol
aad
test
stos
out
fisubs
mov
xchg
fadd
fcoml
xchg
mov
scas
mov
mov
add
mov
lahf
cwtl
mov
nop
mov
stos
test
in
test
push
jb
jbe
jnp
outsl
jge
jbe
insb
outsl
jnp
inc
pusha
popa
pusha
ja
push
or
or
arpl
dec
inc
pop
pop
push
pop
inc
js
pop
pop
dec
dec
push
inc
dec
inc
es
sub
inc
dec
pop
xor
and
cmp
pop
or
cmp
sub
cmp
sub
sub
dec
jp
or
adc
pop
add
or
adc
pusha
sub
or
sbb
or
or
add
xchg
rclb
repz
in
jmp
sti
repnz
jmp
lock
out
push
aad
shr
xlat
rcr
sar
mov
xlat
fst
shr
enter
fldt
mov
mov
lods
pushf
mov
lahf
mov
stos
mov
test
mov
lahf
lret
or
stos
test
mov
scas
sti
push
std
mov
mov
andl
out
mov
jne
jge
push
imul
inc
add
push
arpl
outsb
pushw
pop
push
pop
inc
push
bound
xor
pop
pop
imul
inc
ja
dec
push
inc
popa
pop
jno
sub
sub
pop
pop
and
aaa
xor
aas
cmp
ret
sub
daa
and
sbb
ret
jb
push
push
push
or
add
adc
xor
add
or
xchg
nop
add
in
call
in
div
stc
out
out
out
stc
cld
in
fucomp
std
cli
ret
mov
mov
ror
jmp
enter
fucomi
ret
shl
ret
lret
ret
scas
scas
rolb
xchg
scas
movsb
xchg
mov
scas
test
mov
mov
popf
fwait
xchg
adcl
lahf
xchg
mov
xchg
mov
popf
andb
pop
adc
jae
jae
push
jle
dec
jns
imul
jnp
hlt
push
dec
jns
gs
jnp
popa
jp
pop
push
gs
dec
imul
pop
dec
inc
outsl
inc
dec
inc
inc
push
jne
dec
pop
pop
inc
pop
push
cs
rclb
xor
ds
cmp
sub
and
daa
sub
das
aas
sbb
jae
push
push
adc
sbb
sbb
xor
adc
imul
lock
out
stc
repnz
cmc
lcall
shl
out
cmc
out
std
icebp
iret
out
out
std
out
fadd
cli
ret
lret
mov
fcmove
out
ror
int3
int3
ljmp
mov
cmpsl
mov
scas
fistpl
movsb
nop
mov
cmpsb
mov
sahf
mov
icebp
xor
lcall
adc
mov
xchg
test
mov
lods
orb
adc
fs
push
jae
bound
addr16
gs
or
das
or
jnp
push
push
push
push
inc
pop
inc
push
imul
dec
dec
jns
dec
dec
bound
jae
cmpsb
sub
inc
inc
pop
pop
add
cmp
cmp
xor
cmp
cmp
pop
pop
pop
inc
add
sub
and
cmp
sbb
add
and
pop
jp
pop
sbb
xor
daa
imul
cmp
cmc
loope
hlt
stc
repnz
cltd
cwtl
ja
shr
cli
lock
loope
jmp
in
out
loop
fmuls
jecxz
fcmovnu
fcom
mov
rol
int3
mul
ljmp
sti
scas
scas
pop
rcrl
cmpsb
cwtl
mov
stos
nop
mov
les
test
mov
xchg
fwait
xchg
xchg
mov
xchg
mov
nop
pushf
xchg
xchg
mov
popl
scas
adc
daa
adc
insl
imul
jno
dec
outsl
fs
add
jl
imul
pop
push
push
inc
inc
pop
inc
dec
jg
pop
push
jg
jge
aam
outsl
inc
dec
inc
inc
push
jbe
inc
pop
inc
inc
dec
dec
dec
adc
cmp
sub
pop
adc
and
sub
add
pop
dec
push
add
add
adc
adc
pop
or
and
cmp
insl
in
cmp
loopne
loopne
shl
repz
int3
lcall
in
lock
out
fisttpll
rcr
aad
out
iret
rcr
rcl
fmul
loop
movsl
lcall
dec
int3
mov
mov
mov
scas
mov
mov
shl
test
lods
test
movsb
mov
fwait
xchg
mov
call
loopne
xchg
mov
lcall
bound
insb
sbb
js
fs
arpl
bound
dec
or
push
or
inc
inc
inc
inc
push
push
insl
inc
dec
pop
jl
mov
bound
push
push
pusha
inc
push
pop
pop
inc
push
dec
push
movsb
push
sbb
xor
add
sub
xor
cmp
pop
pop
jb
adc
and
xor
add
xor
dec
jb
add
sbb
push
push
or
and
adc
push
push
push
sbb
insb
loop
loop
shl
in
ljmp
addl
repnz
stc
jmp
fcmovb
fabs
mov
fxch
sti
iret
aam
lret
rcl
enter
ret
fchs
frstor
test
mov
mov
stos
mov
mov
sahf
enter
mov
mov
sbbb
lods
test
sahf
out
jmp
mov
pop
inc
jns
jbe
jo
js
imul
gs
or
pop
push
push
inc
push
jne
push
jo
push
dec
push
pop
push
push
pop
inc
jo
inc
and
jl
jp
dec
bound
sbb
push
dec
pop
pop
ds
xor
das
es
sub
dec
dec
dec
or
cmp
sbb
sbb
je
test
adc
push
cmp
add
adc
pop
sbb
add
xchg
ret
repnz
sar
loop
popf
clc
popf
int3
in
shl
loopne
dec
cld
in
jecxz
loopne
fcom
fadd
xlat
jecxz
lret
aam
lret
fcmovnbe
in
lret
shl
leave
enter
scas
call
xchg
mov
xchg
lcall
mov
ret
lds
mov
repz
cmc
mov
cwtl
popf
mov
xchg
mov
test
sahf
mov
jo
fs
sbb
pop
sbb
jbe
gs
jno
jbe
bound
popa
jg
inc
insl
bound
xor
jbe
push
push
dec
jge
pop
push
dec
jae
inc
popa
and
jle
jne
dec
addr16
dec
inc
addr16
push
adc
add
fstl
cmp
xor
sub
cmp
xor
aaa
or
sub
pop
dec
dec
repnz
push
ds
and
sbb
adc
pop
jle
bound
pop
adc
push
or
cmp
push
sbb
cld
repz
shr
fcomps
lock
hlt
lock
jmp
call
int3
mov
clc
fcmovnu
ret
mov
int
jecxz
aad
fucomp
fxch
enter
rcl
adc
xchg
mov
mov
test
scas
mov
sahf
xchg
idivb
scas
lcall
mov
sbbb
jge
addr16
push
sbb
pop
js
dec
insl
fs
arpl
push
push
or
or
addr16
push
pop
push
pusha
push
pop
push
inc
push
dec
pop
imul
inc
push
fs
inc
dec
pop
dec
dec
jp
pop
inc
inc
and
cmp
ss
pop
inc
adc
xor
xor
aas
sub
dec
test
add
add
sub
adc
add
es
inc
or
add
imul
sti
push
cli
xlat
int3
lds
repnz
in
fimull
xlat
aam
shl
rcr
xlat
aad
in
fmulp
ror
mov
ret
fnstsw
frstor
nop
movsl
mov
sahf
test
in
xchg
cmpsb
movsl
lods
mov
mov
movsb
scas
stos
sbbb
xchg
adcb
mov
test
cltd
mov
jp
jnp
lock
pop
jbe
ja
outsb
jo
jb
add
sbb
fs
jns
dec
bound
inc
xor
xor
push
pop
push
dec
push
dec
inc
dec
inc
inc
and
es
inc
pop
inc
outsb
inc
inc
pop
xor
xor
xor
cmp
cmp
sub
stos
pop
pop
sub
xor
daa
cmp
push
dec
sbb
xor
sbb
sbb
sbb
jge
daa
jle
adc
add
add
add
add
add
cmp
in
icebp
call
pushf
aad
in
in
out
loop
int
mov
loop
fstp
ret
out
cli
fxch
out
aam
not
rcr
fldt
mov
xchg
lods
mov
rcr
mov
xchg
mov
adc
andl
xorl
fwait
movsl
test
cmpsl
jmp
orl
jp
inc
sbb
dec
js
pop
jb
dec
ja
push
pop
or
or
pusha
outsl
push
jno
push
push
pop
push
inc
pop
dec
push
dec
dec
imul
and
push
push
pop
dec
inc
fs
ss
or
das
cmp
inc
adc
sub
or
cmp
sub
sub
or
jae
je
sbb
sbb
push
sbb
sbb
add
bound
and
sub
pop
or
sub
stc
std
stc
sar
repz
cld
cltd
leave
clc
repnz
shr
hlt
ljmp
jmp
in
jecxz
neg
aam
mov
cmc
enter
fdivr
cmpsb
andl
fsts
mov
mov
aas
lret
mov
mov
mov
stc
nop
sti
mov
test
nop
mov
out
mov
inc
jbe
jns
sbb
add
dec
jns
jne
gs
arpl
or
xchg
or
jnp
inc
push
inc
jge
pop
push
push
dec
jno
pop
push
dec
push
pop
push
dec
dec
dec
fs
es
dec
dec
pop
dec
outsb
dec
xor
and
sub
cmp
cmp
pop
xchg
inc
pop
xor
sub
cmp
cmp
sub
cmp
jae
jno
xor
or
adc
mov
out
and
sbb
add
and
hlt
lds
idiv
dec
call
ret
test
out
call
loopne
rcr
rol
shl
rcl
mov
fst
iret
iret
into
repnz
ret
stos
stos
lock
in
fdivl
mov
mov
mov
rol
rclb
mov
mov
hlt
idivb
xorl
aam
mov
xchg
mov
imul
js
dec
jae
push
data16
add
pop
or
jle
jns
jge
inc
arpl
xor
lahf
cmp
dec
pop
dec
pop
dec
insl
inc
push
push
inc
inc
inc
jle
sub
cmp
and
and
pop
pop
ss
add
xor
adc
xor
dec
dec
xchg
dec
or
cmp
push
add
add
push
or
jnp
jg
sbb
or
add
sbb
push
lods
outsl
sub
icebp
in
idiv
stc
shl
cwtl
fwait
jo
fyl2x
jmp
xlat
ljmp
jmp
cld
fnstenv
rcr
lret
xlat
lret
leave
clc
call
not
rol
int3
inc
leave
ret
fsubrs
mov
stos
stos
mov
movsl
xchg
mov
test
push
lret
fwait
scas
mov
popf
pushf
mov
idiv
ds
mov
test
out
call
test
jo
jl
jbe
sbb
add
push
imul
pop
arpl
jge
xor
xor
jle
imul
cmp
inc
push
jo
inc
push
arpl
push
sub
xor
cmp
xor
pop
dec
pop
push
xor
sub
daa
sub
dec
dec
cltd
dec
sbb
and
sbb
push
adc
push
or
adc
pusha
data16
add
and
and
or
aam
rclb
icebp
div
icebp
lret
cli
out
div
lret
in
xchg
mov
in
jmp
rol
rcl
mov
mov
rcl
vpmovmskb
test
ljmp
mov
test
pop
fimuls
nop
mov
enter
scas
movsb
xchg
hlt
pop
idivb
mov
lea
nop
stos
ljmp
popa
jo
pop
je
jge
outsb
push
jb
jno
insl
bound
imul
orl
imul
push
inc
jl
pop
pop
push
pop
cmp
push
jo
inc
dec
dec
jno
inc
dec
inc
pop
sub
xchg
cmp
xor
sub
aas
sub
inc
pop
es
pop
das
xor
pusha
jae
pop
sbb
adc
adc
int3
data16
pop
sbb
sbb
or
sti
sti
lock
loope
std
jecxz
popf
imul
call
lea
shl
fmul
jmp
jmp
dec
mov
rol
int3
cli
int3
les
mov
xchg
mov
fisttps
lods
mov
mov
mov
into
icebp
icebp
mov
lea
mov
in
popl
sbbl
pop
pusha
jb
sbb
sbb
pop
insl
popa
jo
dec
push
imul
jbe
inc
fs
pop
push
pop
inc
dec
jge
cmp
dec
addr16
push
dec
push
dec
pop
imul
inc
ds
add
cmp
cmp
sbb
and
pop
scas
pop
pop
sub
and
aas
or
dec
or
add
pop
cmp
add
bndstx
sbb
call
add
push
sbb
adc
xlat
div
jmp
fdiv
repz
je
lret
fsubp
clc
stc
stc
out
loop
aad
test
mov
int
in
vpmovmskb
movsb
bound
sar
mov
mov
movsl
nop
mov
mov
fadd
fcoml
mov
scas
popf
int
ret
xchg
xchg
fwait
fwait
mov
nop
pushf
mov
mov
nop
loop
in
sbbl
addb
jb
imul
dec
dec
dec
dec
dec
push
inc
bound
pushw
popa
imul
inc
aaa
jb
pop
js
pop
pop
dec
pop
jb
push
dec
dec
inc
outsl
inc
inc
dec
inc
dec
insb
sub
xor
adc
adc
pop
and
cmp
or
das
and
add
sub
cmp
pop
sbb
and
sbb
or
push
add
or
sbb
aas
or
shl
icebp
lock
shl
push
ljmp
in
test
xchg
cli
lret
jecxz
dec
jecxz
std
fcom
out
mov
jmp
shl
into
aad
lret
lods
mov
jmp
mov
mov
add
cltd
mov
lods
subl
cmpsl
lods
movsb
mov
lock
xchg
popf
mov
stos
mov
out
addl
push
addr16
inc
jbe
jne
sbb
ja
jbe
insb
inc
arpl
jg
jge
jecxz
je
inc
push
pop
push
push
dec
cmp
cmp
pop
dec
jne
pop
push
pusha
pop
jo
sub
inc
inc
inc
inc
push
cmp
and
xor
cmp
or
adc
dec
dec
push
dec
or
sbb
xor
sbb
jl
jl
or
pop
es
or
add
sbb
shr
hlt
cli
in
cld
dec
in
clc
ljmp
loop
into
in
fldz
loopne
rol
cld
fcmovbe
fnstcw
into
fcompp
out
ret
shlb
lret
fcompl
mov
mov
mov
ljmp
mov
mov
movsb
stos
mov
icebp
lock
repnz
xchg
mov
xchg
nop
fwait
scas
xchg
popl
out
lea
popf
fs
adc
jno
jle
jne
jp
ja
jo
imul
jne
paddb
jge
inc
arpl
inc
dec
pop
push
jno
inc
push
gs
push
fs
pop
pop
inc
pop
sub
and
push
cmp
adc
cmp
push
inc
inc
lret
inc
pop
and
sbb
cmp
and
dec
shll
push
and
das
pop
add
adc
add
and
pop
push
push
or
insb
outsl
es
xlat
mul
fdiv
stc
jecxz
in
jmp
sahf
adc
mov
in
in
mov
repz
ret
rol
ret
iret
fimuls
xlat
xchg
xchg
cmpsl
mov
cli
into
lret
leave
ljmp
subl
fistps
xchg
mov
cmpsl
mov
lods
mov
mov
pushf
mov
mov
xchg
in
mov
pop
jno
arpl
push
push
jb
add
add
jns
insb
js
dec
pop
push
push
pop
pop
push
js
jo
push
pop
push
jle
dec
inc
push
and
cmp
dec
outsl
pop
dec
dec
js
pop
pop
xor
pop
cmp
es
cmp
adc
and
xor
sub
sub
cmp
sub
sub
adc
sbb
ss
nopl
jle
popa
xor
adc
or
pop
or
or
nop
sar
icebp
jecxz
jmp
jecxz
fcomip
lock
jmp
jmp
out
ffree
rol
rcl
fcmovu
mov
rol
in
int3
ror
ror
mov
jne
sahf
mov
mov
xchg
cwtl
mov
lea
test
mov
or
mov
xchg
popf
clc
iret
sti
scas
mov
mov
mov
ljmp
jge
jo
fs
dec
outsb
outsl
jns
jae
adc
push
pusha
arpl
imul
xor
xor
push
je
push
dec
pop
dec
dec
jae
jnp
je
imul
pop
dec
dec
dec
push
fistl
cmp
and
xor
inc
comiss
push
and
cmp
daa
dec
jl
xor
or
adc
adc
push
add
sub
addr16
add
cli
call
cwtl
lret
out
std
aam
int3
ljmp
lret
jmp
stc
jmp
mov
rcr
enter
int
shl
ror
mov
scas
lods
jecxz
lret
xorb
xchg
mov
mov
mov
mov
mov
mov
cltd
iret
lea
xchg
mov
mov
cld
call
lea
jno
jg
jne
sbb
pop
jno
outsl
pusha
imul
dec
jb
imul
sti
xor
inc
jl
dec
pop
push
jnp
ja
and
and
inc
gs
dec
dec
pop
dec
imul
cmp
pop
xor
pop
fcomps
sub
push
and
xor
push
sub
das
cmp
sbb
cmp
sub
or
adc
and
adc
sub
push
insb
sub
shl
loopne
xlat
sti
cld
imul
fdiv
std
icebp
cmc
in
addl
int3
in
clc
loope
loopne
repnz
out
shlb
fdivr
int
rcl
in
lret
lret
into
stos
xchg
lods
cld
fisubl
cmpsb
mov
xchg
cltd
fisttps
mov
mov
cmpsl
mov
test
ljmp
mov
cltd
movsl
xchg
mov
stos
xchg
jl
jnp
adc
sub
je
js
jae
outsb
inc
push
dec
inc
xor
hlt
or
imul
pop
push
push
inc
outsl
push
dec
push
pop
push
pop
and
and
inc
pusha
inc
pop
popa
insl
inc
inc
inc
arpl
cmp
sub
xor
aaa
adc
xor
xor
js
adc
sub
cmp
ss
ja
or
push
or
and
adc
pop
add
push
add
nopl
nop
test
icebp
jmp
repnz
in
cli
addl
fdivrp
std
jmp
fnsave
call
ror
rcr
rcl
in
mov
in
iret
fxam
jmp
mov
lods
mov
mov
movsb
rol
lds
movsb
cmpsl
sahf
mov
repz
mov
pushf
mov
xchg
xorl
jmp
scas
popf
mov
ja
popa
jle
sbb
ljmp
je
outsb
insb
je
imul
dec
popa
js
jnp
pop
push
pop
push
dec
jnp
push
push
pop
pop
dec
inc
inc
and
addr16
pop
outsb
pop
pop
dec
sbb
cmp
or
adc
xor
sub
and
and
add
sbb
pop
xor
jp
jge
sbb
add
push
add
adc
imul
sbb
loopne
cld
icebp
xlat
sti
imul
jmp
clc
idiv
cld
ljmp
shl
shl
stc
in
loope
aam
rcr
repnz
fdivrl
clc
fcmovnbe
jmp
rol
int
leave
dec
ret
mov
mov
mov
fiaddl
fcoml
cmpsl
movsb
mov
cmpb
scas
into
lods
lock
cmpsl
xchg
adcl
loope
sbb
stos
mov
mov
push
data16
push
jnp
je
jb
push
pusha
bound
add
jl
arpl
jl
arpl
xor
pop
pop
jns
pop
dec
dec
jb
dec
and
inc
pop
dec
outsb
inc
dec
pop
and
daa
xor
sub
das
or
xor
and
xor
xor
sub
dec
dec
sbb
push
and
adc
or
sbb
adc
arpl
daa
or
or
aas
or
cmc
loope
out
hlt
repz
sti
out
iret
icebp
shl
out
in
clc
call
push
mov
hlt
iret
fcomip
aad
aad
ror
iret
loope
rol
test
call
mov
cltd
mov
ljmp
mov
out
lea
addl
fwait
xchg
xchg
jecxz
in
xchg
movsl
xchg
stos
cwtl
fs
and
push
outsl
insb
jg
das
sbb
push
inc
outsl
push
addr16
insb
arpl
bound
jle
xor
xor
push
jne
pop
pop
dec
pop
outsl
dec
pop
push
dec
inc
fs
dec
dec
bound
dec
sub
sub
inc
xor
and
xor
xor
and
pop
push
xor
sub
push
sub
xor
push
and
and
adc
sbb
push
push
add
js
jp
adc
aaa
wbinvd
pop
or
push
sbb
push
or
std
in
cli
clc
out
idiv
call
into
in
out
loopne
ret
in
in
loope
cli
hlt
shlb
ljmp
int3
loopne
lret
rol
test
stos
out
ret
out
mov
mov
repnz
xorl
test
mov
xchg
xchg
mov
mov
mov
popf
movsl
mov
in
out
push
jl
addr16
bound
imul
add
push
jle
outsl
pop
jg
jp
pop
pop
push
pop
push
cmp
cmp
push
pusha
dec
inc
push
push
imul
das
clc
push
pop
aas
aaa
pop
and
cmp
xor
inc
add
push
and
and
aas
das
aas
pop
cmp
pop
adc
add
ja
js
or
or
sub
adc
or
add
add
add
hlt
in
repz
clc
clc
cmc
cltd
outsb
fwait
aad
stc
in
ret
lock
repz
call
mov
xchg
mov
lret
int3
iret
aad
sar
leave
ffreep
call
pushf
roll
mov
mov
stos
test
xchg
mov
mov
mov
xchg
xchg
sti
push
std
scas
mov
xchg
test
addl
fwait
lcall
bound
jle
dec
jae
imul
add
add
dec
pop
insl
insb
dec
arpl
pop
bound
dec
bound
imul
push
push
inc
pop
push
inc
dec
push
inc
inc
inc
imul
daa
cmp
add
sbb
pop
pop
sbb
xor
and
and
aas
cmp
dec
adc
add
cmp
pop
aaa
jns
dec
jp
sbb
or
pop
add
insb
outsb
shl
cli
out
imul
std
fucomp
repnz
lret
roll
fucomi
in
int
clc
int
out
jecxz
fcmovnb
fsubr
mov
enter
imul
out
test
stos
std
int
cwtl
mov
adc
scas
mov
xchg
mov
mov
iret
mov
test
cli
scas
mov
fwait
lea
xchg
xchg
nop
mov
inc
addr16
inc
push
jg
dec
sbb
loopne
dec
push
dec
fs
arpl
bound
pop
or
js
dec
push
inc
jb
push
inc
pusha
cmp
push
dec
push
ja
dec
dec
inc
ja
inc
dec
jg
mov
cmp
daa
and
add
or
xor
or
inc
adc
ss
and
cmp
jno
jae
adc
pop
and
adc
push
adc
sbb
add
or
or
add
loop
icebp
loope
in
fcomps
jmp
rol
icebp
jmp
mov
stc
out
ljmp
xlat
int
in
mov
rcl
loopne
int
ret
fsubrp
lods
scas
out
xorb
mov
xchg
mov
pop
lds
scas
mov
popf
addl
cmpl
xchg
xchg
mov
xchg
inc
pop
push
jno
jae
jge
jnp
imul
push
gs
inc
jnp
js
push
jbe
xor
pusha
inc
pop
jne
push
dec
pop
dec
pop
push
inc
push
dec
pusha
inc
pop
insb
pop
inc
pop
dec
popa
pop
cmp
and
push
jbe
or
sbb
sub
pop
jge
adc
xor
sub
sub
sbb
and
xchg
je
sub
sub
add
cmp
sbb
sbb
lock
repz
repz
out
stc
ficomps
jmp
fisttps
out
sar
stc
lock
fsubrp
int
fsubr
mov
rcl
in
std
lods
lods
pop
scas
sbbb
mov
mov
mov
ret
xchg
mov
xchg
lods
mov
mov
repz
addb
mov
test
xchg
mov
mov
inc
jbe
jno
jle
jb
jp
jns
data16
jbe
push
jl
pop
outsb
jp
jge
pop
push
addr16
inc
dec
pop
push
jl
push
pop
pop
push
popa
and
jno
dec
push
inc
dec
inc
inc
dec
outsl
push
adc
add
sub
pop
inc
pop
movntps
sub
inc
push
dec
add
cmp
jo
jnp
aaa
pop
add
adc
jg
popa
xor
push
or
or
or
xchg
mul
icebp
fcomi
imul
std
cld
ljmp
xchg
fcmovnb
fsubr
jmp
sti
rcr
rcl
rcl
repnz
mov
rcl
icebp
into
int
hlt
mov
jmp
fldcw
lahf
mov
mov
stos
mov
fisttps
nop
mov
mov
movsb
lods
cmpl
fwait
movsl
cmc
jnp
cmpsb
cwtl
mov
popf
mov
xchg
in
push
mov
jno
jns
jge
jbe
jb
insl
inc
add
push
gs
inc
jnp
inc
dec
pop
femms
inc
xor
inc
pop
jp
push
pop
imul
dec
inc
pusha
and
jbe
push
jne
pop
bound
sub
add
daa
cmp
xor
and
xor
xor
pop
inc
adc
sub
aas
sub
dec
and
adc
sbb
adc
sub
push
add
arpl
fs
and
daa
add
loop
fcomip
idiv
push
std
fwait
lcall
div
rolb
leave
in
loop
loopne
rcl
into
shl
mov
hlt
in
fcmovnbe
test
rol
out
sub
std
lret
mov
mov
mov
mov
xchg
xchg
mov
cmpsl
lods
mov
cwtl
lahf
popf
movsl
cmc
hlt
sti
idivb
mov
lods
mov
mov
cmpsl
in
out
mov
mov
bound
pop
sbb
push
sbb
imul
push
add
jp
addr16
pop
push
xor
xor
push
push
jge
push
pop
dec
pop
push
ja
dec
push
inc
jae
stos
sub
pop
inc
jle
inc
xor
xor
sub
xor
sbb
pop
or
xor
push
and
cmp
and
das
add
mov
xor
invd
cmp
movaps
arpl
add
rdpmc
pop
add
push
sbb
cli
clc
repz
fwait
in
int3
ljmp
aam
call
mov
std
vpsubusw
call
rcll
icebp
aad
loopne
cld
stos
lods
pushf
scas
std
movsl
mov
adc
xchg
fimull
mov
mov
stos
lods
mov
inc
int
scas
mov
xchg
stos
pushf
nop
xchg
cwtl
cwtl
mov
xchg
mov
ja
adc
push
dec
push
dec
outsl
js
dec
pusha
insb
jbe
inc
jl
push
popa
or
jns
inc
jge
push
pop
push
addr16
pop
inc
js
mov
insl
pop
dec
push
jae
dec
inc
dec
inc
bound
dec
inc
pop
inc
inc
inc
jns
push
aaa
push
add
sub
aas
xor
add
inc
pop
daa
cmp
cmp
and
add
jb
je
pop
or
pop
pop
sub
gs
and
add
add
call
xchg
loopne
leave
stc
out
repnz
hlt
sti
sar
lock
jmp
out
clc
fimull
loopne
rol
out
mov
lret
out
xlat
out
int
ret
out
enter
scas
out
roll
mov
lea
mov
mov
test
lahf
mov
repnz
movsb
orb
mov
sahf
andb
lea
jl
jb
insl
ja
arpl
outsl
push
push
add
add
jae
pop
dec
arpl
pop
minps
fs
jge
push
push
push
cmp
cmp
and
and
sub
sub
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jno
jae
jne
ja
jns
jnp
jge
jg
popa
pusha
arpl
imul
insb
outsl
outsb
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
fwait
lcall
addl
mov
mov
mov
mov
mov
mov
mov
test
lods
scas
scas
rcl
rcl
aad
xlat
fcmovnu
fstp
rol
ret
mov
int
iret
into
icebp
lock
hlt
div
stc
clc
sti
cli
std
cld
loope
jecxz
in
out
jmp
in
out
out
adc
adc
sbb
sbb
add
add
or
pop
mov
xor
xor
cmp
and
add
sbb
and
sub
lea
push
into
sbb
pop
fisubrs
inc
dec
lock
jb
dec
dec
dec
dec
dec
dec
jno
jae
jne
ja
jns
jnp
jge
jg
popa
pusha
arpl
imul
insb
outsl
outsb
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
fwait
lcall
addl
mov
mov
mov
mov
mov
mov
mov
test
lods
scas
scas
rcl
rcl
aad
xlat
fcmovnu
fstp
rol
ret
mov
int
iret
into
icebp
lock
hlt
div
stc
clc
sti
cli
std
cld
loope
jecxz
in
out
jmp
in
out
out
adc
adc
sbb
sbb
add
add
or
or
xor
xor
cmp
cmp
and
and
sub
sub
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jno
jae
jne
ja
jns
jnp
jge
jg
popa
pusha
arpl
imul
insb
outsl
outsb
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
fwait
lcall
addl
mov
mov
mov
mov
mov
mov
mov
test
lods
scas
scas
rcl
rcl
aad
xlat
fcmovnu
fstp
rol
ret
mov
int
iret
into
icebp
lock
hlt
div
stc
clc
sti
cli
std
cld
loope
jecxz
in
out
jmp
in
out
out
adc
adc
sbb
sbb
add
add
or
or
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
add
sbb
mov
sbb
in
sbb
add
add
adc
add
add
add
and
add
add
add
inc
add
add
add
inc
add
enter
fs
add
scas
xchg
add
mov
add
add
xchg
add
mov
add
and
add
rclb
add
nop
add
in
nop
add
cli
nop
add
push
xchg
add
sbb
add
cmp
add
push
xchg
add
push
xchg
add
adcb
add
add
mov
xchg
add
loop
add
add
add
xchg
add
or
add
add
add
xor
add
imul
gs
xor
cs
insb
add
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
js
je
jb
arpl
jae
add
push
je
push
outsb
ja
outsb
add
add
imul
jo
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
insb
jae
gs
popa
insb
jne
add
add
inc
gs
popa
insb
jne
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
jb
gs
imul
add
dec
gs
jo
jb
add
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
gs
jo
insb
insb
outsl
arpl
add
inc
gs
jb
arpl
jae
gs
jo
add
jb
gs
xor
cs
insb
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
je
jb
arpl
fs
jae
add
imul
insb
add
add
je
imul
add
add
je
imul
outsl
jb
add
add
je
imul
add
gs
xor
fs
insb
add
add
inc
gs
inc
add
inc
add
inc
add
mov
add
add
loopne
add
add
or
adc
sbb
and
sub
xor
cmp
inc
xor
push
xor
bound
push
jb
js
mov
xchg
xor
xor
xor
xor
xor
xor
divb
adc
xor
pop
xor
xor
xor
xor
xor
xor
xor
or
or
xor
xor
xor
xor
imul
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
pop
xor
xchg
xor
mov
xor
fnsave
inc
ss
ss
ss
ss
lea
sahf
ss
ss
ss
mov
ss
out
ss
ss
aaa
sbb
daa
aaa
xor
inc
aaa
dec
aaa
push
aaa
pop
aaa
data16
outsb
aaa
jbe
jle
xchg
aaa
lahf
aaa
lods
aaa
mov
cmp
data16
jbe
jge
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
ja
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
push
cmp
je
jle
mov
cmpsb
cmp
les
in
cmp
clc
cmp
add
or
adc
push
sub
pop
imul
ds
cmpsb
ds
sarb
fistpll
out
lock
or
pop
aas
es
cmp
inc
aas
push
aas
popa
aas
outsl
aas
jle
lea
fwait
aas
test
sarl
aas
jmp
and
add
add
add
or
xor
inc
xor
arpl
je
jg
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
adc
sbb
sbb
and
and
sub
xor
xor
push
xor
add
jo
add
add
add
test
mov
mov
nop
ss
ss
ss
mov
add
add
add
add
or
or
add
