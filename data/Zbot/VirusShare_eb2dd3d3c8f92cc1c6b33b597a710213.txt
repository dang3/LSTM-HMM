ljmp
aad
leave
pop
std
pop
push
lock
dec
mov
lock
cli
adc
xor
imul
dec
pop
andb
jno
or
mov
pop
or
fsubrs
push
loopne
pop
inc
dec
fs
jmp
into
sbb
mov
sub
cmpsl
mov
cmp
repz
sti
sub
test
stc
mov
incl
jecxz
pop
ss
adc
std
rorl
mov
mov
mov
or
decl
into
call
mov
clc
add
cmp
mov
roll
push
incl
pushf
and
push
lods
cmpsb
xchg
mov
inc
icebp
gs
mov
int
mov
add
popa
xchg
sar
ljmp
arpl
add
mov
or
push
jns
jae
pop
cmp
shrb
push
cmp
mov
fsubs
mov
pop
xchg
xor
jge
sub
cmp
dec
stos
scas
fbld
outsb
mov
incl
std
cmpsl
dec
lahf
cli
popa
shl
cwtl
adc
xchg
arpl
xor
inc
jle
ljmp
xchg
jo
and
sbb
dec
int3
mov
aad
rcll
sub
cmp
subb
ljmp
dec
mov
outsl
insl
mov
sub
adc
and
fs
mov
cld
jmp
pop
jae
rclb
mov
sbb
test
xor
loopne
ljmp
and
ret
mov
outsl
cmpsb
sbb
popf
imul
sbb
dec
jmp
inc
push
jne
fdivrs
enter
test
dec
movsb
add
lahf
int
lods
or
pushf
jmp
mov
sbb
popf
jmp
jl
div
sub
pushf
inc
adc
decl
xor
popf
std
push
clc
call
sub
xchg
xchg
lcall
ljmp
sahf
lcall
cmp
jbe
add
add
pusha
inc
xor
adc
jns
sub
jo
mov
std
decl
out
push
in
out
mov
push
call
mov
inc
mov
jmp
add
movsl
xchg
pop
sti
push
xchg
ret
pop
ja
popa
pop
rcr
jl
inc
adc
xchg
or
jb
ss
repnz
movl
movsl
movsb
jmp
adc
add
ret
sub
xchg
cld
or
push
testl
mov
push
push
inc
pop
push
in
mov
mov
jp
incl
mov
inc
xor
in
cmp
lea
sub
test
enter
cld
xchg
pop
out
and
clc
cmp
test
pop
mov
lret
fs
icebp
std
dec
push
movsl
jl
loopne
add
fldl
in
and
nop
push
mov
cmpsl
xchg
pop
sbb
and
out
mov
lods
add
xchg
inc
push
sub
nop
or
push
adc
in
cmp
jg
inc
fmul
adc
mov
ret
outsb
cmpsb
jle
out
inc
push
imul
xchg
shll
rcll
rcll
leave
dec
xchg
dec
cmp
rcrl
loopne
subl
cwtl
pushl
std
call
fisubl
and
push
push
stc
pusha
pop
mov
jg
pushl
adc
into
fsubrs
inc
xchg
sbb
adc
insl
xchg
xor
js
sahf
sbb
mov
clc
popa
mov
inc
xorb
arpl
sub
int
mov
xor
int3
popf
popa
jmp
sub
jecxz
mov
push
push
mov
xchg
daa
mov
aad
cmpsl
out
insl
fstl
jl
pop
call
pop
jl
leave
ret
into
js
adc
xorl
pop
test
ljmp
lock
cwtl
jae
add
xlat
fnsave
sbb
bound
in
pushl
sub
xchg
cmp
xor
imul
mov
sub
inc
icebp
idiv
lcall
and
mov
push
cmpsb
dec
rcrb
imul
xor
sub
cmp
or
xor
push
xchg
js
pushf
in
xchg
addr16
push
or
clc
jmp
cmp
xchg
fwait
sub
or
loopne
negb
or
mov
out
inc
push
jl
sahf
mov
rclb
sub
stos
in
mov
daa
jmp
cmp
decb
insl
test
xor
ret
sub
sti
leave
jb
sub
cmpl
idiv
lcall
stos
test
out
out
lods
xor
filds
pop
jle
sub
leave
add
ffreep
mov
lods
enter
xchg
and
sbb
dec
jmp
clts
jmp
dec
int
mov
push
add
aad
fmull
mov
sub
dec
mov
xor
jns
test
mov
sahf
push
rcr
jg
ljmp
push
sbb
push
cltd
pop
xor
sub
pop
push
add
xchg
in
adc
mov
and
adc
jno
push
es
xor
xchg
cld
jg
call
adc
mov
ja
popf
cwtl
sub
fmuls
nop
pop
sbb
jle
and
pop
and
push
decl
lock
adc
fstpt
fmull
sub
js
mov
mov
leave
jmp
ja
cli
add
or
pop
repnz
sar
sbb
sbb
decl
call
dec
es
xor
jnp
fsubrp
push
outsb
gs
jb
icebp
iret
gs
in
pushl
jno
sbb
ret
andb
andb
out
test
shrb
dec
xchg
aas
or
call
add
mov
xchg
stc
out
cmp
cmc
lret
mov
jg
mov
pop
in
pop
sahf
mov
xlat
and
jno
gs
xchg
ljmp
out
mov
lcall
iret
xorb
jae
jno
sti
or
cwtl
mov
xchg
or
cmp
mov
out
mov
rcrl
fistpll
testl
cmp
fwait
cli
cli
scas
push
push
mov
lock
cli
mov
sbb
xor
or
aas
repz
cmp
push
lods
jl
dec
mov
xchg
dec
aas
push
jnp
push
pop
jb
fsubrs
scas
fisubrs
pop
iret
and
jmp
or
mov
sub
xor
insl
xchg
pushf
pop
je
mov
add
addr16
test
xor
mov
lds
add
xchg
sub
notl
dec
icebp
pop
sub
fcmovbe
or
addl
scas
lahf
mov
in
jmp
jmp
les
xor
je
pop
leave
daa
int
shl
jns
arpl
enter
js
insl
xor
pushl
repz
fstps
xchg
pop
in
cwtl
cmpsb
pop
das
xor
jp
adc
sub
je
test
aad
jg
mov
dec
add
lds
int3
xchg
lds
jg
data16
int
int3
cmp
mov
mov
push
and
adc
mov
insb
push
dec
orb
mov
xor
push
mov
pop
sbb
sbb
test
aas
pop
adc
ret
ljmp
loop
pop
cmp
mov
sub
ljmp
dec
jmp
cmp
sti
push
movsb
pop
in
sbb
push
fstl
hlt
mov
mov
les
mov
movsl
pop
or
push
jnp
addb
mov
cmpb
adc
aas
cs
adc
sub
call
inc
pop
jnp
jnp
xor
imul
dec
ljmp
int
mov
push
mov
mov
cmpsl
loopne
cmc
aad
rorb
sbb
inc
incb
mov
mov
lock
adc
call
jl
add
into
sub
cmpsl
in
mov
testb
enter
call
je
pop
sbb
mov
enter
sub
adc
faddl
jns
inc
in
out
jmp
ss
mov
je
repnz
push
cwtl
sub
cmp
mov
mov
pusha
sar
int
fistl
cmp
sub
test
cmp
jg
xchg
adc
pop
sub
frstor
sbb
jbe
movsl
add
pop
out
jmp
lods
nop
stos
les
push
xchg
ja
scas
cwtl
dec
into
mov
subl
fcomps
incl
cmp
test
and
and
repz
pushf
jl
mov
std
stos
lods
push
adc
fimuls
test
sub
fmuls
ja
mov
iret
call
mov
inc
mov
or
dec
push
cwtl
aas
lret
andb
dec
cld
xchg
lods
pop
or
es
jg
cmp
cmp
sbb
inc
sub
and
out
cmpb
adc
out
mov
decl
clc
inc
fcmovnu
inc
outsb
lock
sbb
pop
leave
test
stc
loop
cmp
sar
outsb
pop
xor
ljmp
rcll
imul
add
xchg
mov
jg
jmp
mov
mov
out
int
js
fisttpl
sahf
push
shll
out
clc
sub
sbb
daa
ja
lret
loopne
test
adc
lods
test
ret
cltd
iret
call
dec
andl
sarl
in
iret
mov
push
xchg
jno
jmp
js
clc
ljmp
pop
sbb
fst
sub
scas
or
mulb
adc
cmpsb
sub
fidivl
outsl
or
or
mov
mov
inc
jo
leave
lret
mov
jge
dec
out
pop
loopne
out
jle
fcomip
inc
push
into
xchg
sub
lods
lahf
hlt
arpl
mov
in
cld
and
xchg
aad
incl
and
push
aas
xchg
xchg
inc
lods
stos
cmp
push
rcll
into
div
mov
push
lcall
and
and
lcall
push
adc
add
adc
sub
sub
addl
cmp
aam
shlb
decl
rcrl
jb
repnz
bound
mov
mov
mov
insb
frstor
pop
incl
add
mov
xchg
or
fld
ss
loop
dec
sbb
inc
es
push
push
inc
insb
js
inc
pop
loopne
dec
mov
xchg
rorl
cmp
mov
mov
cmp
fwait
insl
push
push
repnz
mov
es
mov
ja
fsubrl
cmp
incl
mov
test
mov
in
loop
jge
cmp
or
mov
mov
sbb
pop
jae
mov
cmp
aaa
dec
rclb
inc
adc
or
mov
jle
out
clc
decl
loope
imul
jl
push
push
sbb
pushl
pop
and
mov
inc
xchg
lock
push
xchg
imul
push
in
jl
add
push
shll
add
dec
bound
int3
aad
hlt
ljmp
pushf
pop
mov
jl
sbb
repnz
add
mov
lcall
ja
arpl
adc
jg
xchg
and
or
push
shlb
mov
jae
push
stos
stos
lock
lcall
rcll
pop
or
push
push
imulb
es
xchg
dec
sub
add
out
test
and
rclb
out
clc
xor
and
std
lret
in
mov
rolb
xchg
movsb
mov
jns
pop
sub
pop
in
sub
out
and
incl
leave
stc
xlat
adc
mov
test
jle
fwait
movsb
rorl
fwait
push
pop
inc
cs
ljmp
ror
or
jmp
jp
add
ja
fwait
mov
xor
test
lcall
push
stos
icebp
and
ja
or
sub
leave
sub
mov
fistl
loopne
outsl
xchg
pop
ja
mov
or
dec
lcall
iret
incl
incl
and
xchg
ret
pusha
fdivrs
icebp
mov
es
incl
in
push
out
jae
ja
jl
pop
xchg
jmp
cmpsb
pushf
sbb
ljmp
pushl
xchg
out
insb
pop
jp
cli
mov
push
jle
sahf
subb
lret
and
pushl
pusha
in
pop
testb
xor
pop
aam
mov
pushf
or
out
sbb
gs
ljmp
push
inc
into
out
add
adc
ss
fstl
mov
hlt
add
cmp
mov
jmp
movsb
mov
outsl
push
pop
sarb
push
out
aas
or
unpckhps
xlat
incl
sub
dec
mov
dec
dec
add
mov
mov
hlt
lcall
icebp
repz
mov
mov
outsl
loopne
sub
jbe
ljmp
imul
cmp
jnp
data16
sbb
cs
imul
aaa
std
decl
out
push
clc
stc
repnz
pop
xor
fs
mov
ljmp
xchg
push
clc
xchg
sbb
push
jne
adc
dec
repz
sub
push
jecxz
mov
push
icebp
jae
bound
jg
push
cmc
das
jle
cmp
inc
cld
and
push
out
inc
dec
fcomi
push
incl
jg
sbb
push
adc
mov
mov
dec
ljmp
pop
clc
arpl
push
sbb
outsb
lds
cmp
notl
mov
add
or
inc
inc
mov
pop
xchg
mov
dec
inc
pop
leave
or
dec
dec
out
xchg
cmp
mov
and
lcall
into
add
add
dec
jle
andl
incl
jae
sub
fldcw
dec
popa
lret
adc
das
cwtl
or
sub
jmp
icebp
dec
or
mov
repnz
cmpsl
xchg
sub
movsl
add
push
repz
lcall
jge
sahf
xor
inc
call
pop
or
inc
adc
xchg
mov
pop
mov
scas
inc
pop
mov
xchg
mov
call
fisttps
sbb
cmp
clc
test
in
scas
pop
in
clc
lcall
xor
scas
sbb
lea
and
movb
std
mov
popa
adcb
movl
ds
aaa
pop
leave
cld
and
aad
pushl
lods
or
sti
out
pop
and
bound
adc
inc
stos
push
push
push
std
incl
jno
inc
test
into
mov
inc
movsl
mov
rcrb
jp
decl
roll
xchg
dec
or
test
daa
jmp
sbb
jecxz
cmpsb
mov
js
xor
mov
or
dec
int
int
lret
ja
mov
es
lcall
in
fadd
adc
fiaddl
in
jo
xchg
cmp
ret
push
pop
arpl
dec
ljmp
pop
ret
adc
jle
adc
sahf
add
xor
inc
mov
push
fdivr
push
jno
inc
fsts
sub
adc
pop
xchg
and
dec
cmp
hlt
jle
add
nop
push
push
push
and
add
test
mov
add
and
add
nop
push
add
add
xchg
test
and
mov
xchg
adc
inc
xchg
lods
sub
push
subl
inc
add
fs
add
nop
push
add
add
xorl
jg
add
dec
xor
push
jmp
inc
call
test
popa
push
mov
ljmp
ret
mov
jns
jns
pushl
dec
adc
push
test
nop
shlb
adc
loope
pushf
out
out
cmp
aaa
sub
call
jge
aas
ljmp
or
lock
mov
int3
add
loopne
in
testb
jg
int
jnp
or
add
mov
add
push
call
pop
add
add
rclb
pusha
push
pushl
sub
and
or
add
or
fldt
ret
mov
mov
mov
mov
add
sbbl
sbb
cmp
pop
mov
xor
movsl
stc
idiv
out
out
dec
mov
add
inc
mov
lahf
ljmp
ljmp
out
mov
mov
sub
dec
dec
movb
and
test
les
mov
xor
and
out
mov
add
dec
jne
adc
fadds
push
loopne
adc
mov
add
push
je
mov
incl
cmp
add
aas
js
scas
or
add
or
loopne
or
xchg
fwait
add
mov
movsb
clc
cmp
cs
add
loopne
lods
ret
in
cmp
or
push
mov
dec
adc
lea
mov
pop
xorb
or
xchg
sub
jmp
xchg
insb
int3
dec
ljmp
repnz
test
mov
dec
xchg
lock
test
pop
out
out
int
hlt
sti
add
or
stos
sub
call
mov
pop
rclb
jmp
loop
lods
cmp
push
flds
inc
arpl
das
out
and
inc
cmc
or
adc
data16
jbe
cmp
sbb
lea
in
or
pop
fisubs
mov
adc
fsts
icebp
jmp
fiaddl
xchg
jb
insl
pop
jnp
je
pop
in
out
xchg
ljmp
cwtl
dec
outsb
xchg
add
into
pop
mov
test
sbb
jno
nop
or
jbe
jg
decl
mov
mov
adc
shrl
pop
pop
data16
pushf
lock
decl
pop
popf
push
fwait
bnd
int3
popf
aad
add
dec
cltd
xchg
or
sub
ds
mov
call
les
mov
xchg
inc
mov
push
mov
jle
fcompl
pushf
mov
and
inc
xchg
mov
ficoms
into
ret
aaa
add
or
mov
popf
push
cmp
cld
add
loop
loope
or
and
add
dec
rorl
repz
mov
push
inc
rolb
adc
addl
and
mov
rorl
lods
mov
in
ficoml
ljmp
jns
stc
leave
cwtl
jp
icebp
mov
jo
push
jno
inc
jb
inc
test
pushl
ljmp
iret
mov
push
or
cmp
xor
gs
push
pop
cmc
popa
or
xchg
decl
push
xor
push
or
repz
push
lods
lcall
clc
je
scas
stos
cltd
inc
mov
push
sub
sbb
sahf
movsb
hlt
fildll
pop
xor
cmp
call
into
imul
sbb
scas
xchg
int
outsl
sbb
call
mov
adc
dec
jl
adcl
xchg
sbb
stos
jnp
jg
sbb
fwait
decl
dec
and
aad
pop
test
push
dec
mov
jnp
jmp
xor
jno
cmp
lds
xor
add
push
movsb
jae
adc
or
call
dec
lret
mov
adc
call
mov
ss
xor
call
or
ret
sbb
adc
jne
int
sbb
imul
inc
daa
push
sub
ljmp
push
inc
and
movsl
ret
mov
dec
adc
addr16
enter
jae
pushl
testb
and
pop
sub
push
loope
and
or
iret
pop
pop
sub
adcl
jmp
cwtl
in
lahf
fnstsw
inc
cmp
lret
jo
cmp
pop
js
xor
into
push
fistpl
cmp
lahf
ret
stos
mov
xor
ffreep
xchg
orb
pop
decl
lret
fwait
fs
push
mov
sbb
mov
int
aad
ret
and
mov
stc
sbb
lods
push
cmpsb
call
or
inc
add
cmp
loopne
xor
add
cltd
es
jbe
push
mov
jmp
pop
int
std
cld
jae
mov
pop
inc
insl
xor
xor
xchg
sub
scas
and
cmp
cs
and
das
mov
dec
add
mov
fisttpll
pop
ja
ljmp
test
gs
sbb
test
mov
xchg
pop
bound
jmp
push
popf
push
icebp
shr
jb
adc
arpl
in
xor
mov
cmp
into
or
sbb
mov
or
pop
lcall
and
sbb
ficompl
or
jo
stc
lcall
mov
or
mov
clc
mul
mov
sub
push
icebp
mov
out
std
push
pop
lcall
or
mov
push
dec
sub
jl
dec
push
mov
pop
lods
cmp
dec
mov
cmpsl
aas
out
jnp
cmp
jmp
ljmp
out
xor
pop
mov
insb
xorl
sub
ljmp
nop
pusha
xchg
mov
adc
sub
sbbb
imul
push
int
lcall
repnz
mov
jecxz
sarl
insb
test
pusha
xchg
ja
dec
mov
mov
jl
dec
cmc
sbbl
pop
fidivl
fs
lret
clc
mov
xchg
dec
sub
out
mov
mov
push
fsubrs
mov
jnp
or
jo
addr16
repnz
fwait
cwtl
dec
mov
or
popf
bound
dec
shll
pusha
mov
mov
call
jno
insl
ret
fs
jo
popa
mov
negb
notl
fwait
data16
sub
clc
pop
es
mov
pop
enter
jge
pusha
repz
out
fisubrs
xchg
mov
xor
gs
mov
fbstp
es
lds
dec
dec
mov
push
int
jns
lods
jo
insl
fnstenv
pusha
fld
mov
sarb
sub
jl
pop
negb
dec
mov
mov
daa
enter
or
sbb
or
dec
insl
shrl
iret
push
imul
std
push
insb
lret
addr16
jp
jns
jl
jbe
aam
icebp
insl
int
pop
pop
xchg
mov
decl
fwait
sbb
push
pop
or
daa
fs
imull
ljmp
cmp
inc
mov
push
fs
into
cmp
jbe
pop
int3
addr16
neg
inc
iret
cmova
into
jge
jle
sahf
jge
addr16
push
loopne
not
adc
clc
add
add
sub
shrb
sbb
das
dec
insl
emms
lret
jbe
pop
sub
xchg
pop
outsl
sahf
addr16
js
or
or
jnp
idiv
repz
pop
es
popf
notl
insl
add
lock
xchg
or
pop
mov
dec
out
cmp
insl
xor
insb
jg
push
daa
js
out
movsb
aas
pusha
pusha
sahf
cmp
es
dec
pop
lahf
mov
cmpsb
rclb
push
movsb
push
movsl
push
sahf
outsl
ds
in
pusha
cmpsl
ret
dec
pop
popf
and
shll
out
dec
cmp
mov
push
jo
sbb
xchg
pop
js
push
ljmp
ds
sbb
lahf
jg
sub
pop
pop
lds
mov
incb
out
ret
incl
mov
out
mov
stos
or
sbb
or
es
jg
pusha
jmp
mov
ss
insb
stos
mov
leave
or
pop
daa
in
int3
andl
sbb
outsb
lcall
sbb
xor
es
sti
mov
dec
pop
scas
hlt
mov
loopne
or
fiadds
mov
lods
ficomps
and
data16
ds
jg
inc
and
lret
sbb
iret
sbb
xlat
out
pop
stos
sbb
pushl
hlt
sub
push
idiv
mov
mov
lock
ljmp
push
adc
dec
adc
ffreep
inc
jb
push
jecxz
std
sbbl
fidivrl
hlt
cmpl
mov
sbbl
sbb
lods
inc
ljmp
pop
in
jg
jl
cs
mov
mov
test
mov
ret
or
incl
pop
pop
fsts
lcall
jne
arpl
negl
div
adc
or
dec
xchg
sahf
jb
push
pop
dec
push
mov
aad
or
cld
cmpsl
inc
xchg
mov
repz
cmpsb
jecxz
pushf
out
cld
gs
adc
mov
daa
jle
jmp
fbstp
pop
sub
pushf
loop
outsb
shrl
pop
sub
mov
mov
or
mov
add
inc
clc
adc
cmp
call
ljmp
or
test
and
cs
jl
pushf
mov
andb
ljmp
arpl
andl
scas
lea
ret
mov
sbb
cli
call
jmp
inc
push
push
push
pop
inc
push
mov
sbb
pop
dec
mov
or
sahf
addl
and
aad
xchg
add
push
std
outsl
mov
ret
dec
nop
inc
mov
call
sub
cmp
mov
decl
fisubl
lret
test
cmp
xchg
or
cli
add
dec
in
pushl
and
cltd
pop
push
sbb
nop
mov
mov
mul
xchg
clc
lea
daa
xorb
jmp
fnsave
test
or
fistps
dec
jmp
push
cmpsl
cmc
data16
mov
and
cmpsl
rorb
mov
leave
das
cli
jg
enter
negl
repnz
pop
inc
sub
inc
enter
frndint
popa
mov
clc
call
pop
arpl
lea
mov
and
cmpsl
mov
cli
sbb
call
mov
push
outsl
call
add
xchg
sub
cwtl
adcb
lea
mov
jecxz
push
rcr
pusha
add
shl
mov
push
or
push
jle
mov
call
mov
pop
out
aam
enter
cmpl
imul
cmc
stos
cltd
add
fs
mov
lcall
mov
pushf
pop
dec
call
cmp
aaa
dec
aaa
inc
jns
xor
pop
dec
push
jo
inc
dec
pop
inc
dec
cmp
push
dec
jg
decl
dec
js
inc
dec
dec
gs
inc
dec
dec
imul
jne
dec
insl
arpl
mov
lcall
dec
pop
inc
push
jno
xor
pop
jae
jbe
push
push
outsl
pushl
outsl
jae
aaa
outsb
jbe
push
jns
dec
jb
bound
dec
push
jae
inc
mov
pusha
jae
push
bound
arpl
push
dec
imul
push
dec
xor
in
jmp
push
inc
push
push
popa
dec
inc
jo
dec
arpl
jne
jno
ja
ss
inc
cmp
jns
dec
inc
cmp
insl
je
jns
push
dec
jns
gs
ss
push
push
xor
pop
pop
sub
mov
inc
xor
push
xor
push
outsb
insl
int3
js
xor
sar
imul
inc
push
push
jp
push
jns
outsb
xor
sub
ss
dec
push
xor
outsb
jns
or
dec
jp
push
push
push
jne
dec
inc
xor
push
jns
data16
ja
mov
je
imul
aaa
js
js
xor
outsl
clc
decl
pop
ss
pop
jns
jne
aaa
dec
sbb
dec
jbe
dec
push
ss
push
xor
dec
clc
incl
xor
jne
dec
push
fs
xor
ja
dec
push
je
js
das
mov
push
bound
imul
push
decl
cs
imul
inc
jbe
inc
jbe
inc
inc
inc
gs
je
incl
jbe
inc
popa
ja
jbe
jne
inc
jne
dec
xor
pop
jbe
js
pop
xor
je
cmp
imul
or
inc
push
push
enter
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
insl
adc
call
mov
add
aaa
call
xchg
add
popf
rcl
add
or
in
jg
jmp
add
rolb
fcmovbe
fildl
roll
add
fwait
orl
arpl
add
roll
xchg
addl
rolb
jbe
add
add
adcb
jle
add
sbb
push
addb
sbb
jg
add
add
adc
rorl
xchg
push
pop
or
xorb
xlat
pop
ud0
push
orl
inc
or
mov
movsl
mov
sub
add
sarl
cmp
or
add
incl
jge
mov
mov
inc
add
xor
or
xchg
imul
xchg
adc
inc
inc
adc
add
push
outsl
sahf
mov
add
imul
ds
jns
divl
lods
cmp
outsl
add
aas
aad
or
cs
in
jge
rcrl
pop
jns
sbb
add
add
imull
pusha
or
fwait
fidivl
test
pop
sbb
dec
sub
add
lahf
fnstenv
inc
jecxz
jne
lds
das
psrlq
push
mov
in
aaa
clc
cmpsb
add
cmp
add
or
pop
push
stos
shll
dec
jnp
sbb
pop
int
ficompl
jmp
loope,pn
xchg
cmpsw
xor
jge
pop
mov
xor
ret
out
dec
jnp
rolb
ja
sbb
leave
sbb
andb
xlat
rcrl
ret
pop
out
push
lock
sti
ds
insb
setle
inc
cmp
sahf
cmpsb
sbb
xchg
xorl
cmp
pusha
xchg
xlat
dec
repz
and
rorl
out
js
fstpt
js
das
sbb
push
or
cmpsl
mov
movsl
mov
in
mov
xchg
pusha
sbb
stos
push
addr16
jns
sub
mov
out
lret
sti
loopne
sub
xor
sbb
sub
pop
stos
mov
mov
or
dec
and
push
pop
adc
sarl
pop
lods
cmpsb
sarl
iret
fwait
pop
cmp
fbld
sbb
sub
pusha
add
push
inc
imulb
adc
adc
inc
jp
fwait
jne
add
cmpsl
push
inc
jbe
fcomip
rcrb
dec
push
add
sub
push
dec
mov
aaa
stos
cmp
loopne
gs
dec
mov
jg
sub
mov
je
lock
and
push
adc
jg
push
fbstp
or
push
in
mov
mov
testl
ss
pop
sbb
shll
xchg
int
dec
repz
sbb
lds
mov
fdivs
jnp
xor
roll
or
lods
imul
xchg
mov
mov
iret
or
adc
roll
rcll
cmpsb
sbb
dec
xor
popa
gs
mov
mov
sbb
mov
jnp
sub
dec
rcrl
daa
ret
add
mov
mov
imul
jne
dec
rorl
js
dec
repz
xlat
push
jo
mov
aaa
dec
mov
cmp
jmp
mov
shll
jns
jo
xchg
negl
cmp
mov
pop
ja
into
mov
xor
mov
lock
cmp
sbb
push
cltd
dec
loopne
sub
dec
stos
xor
inc
stos
push
sti
fbstp
filds
xchg
push
addl
add
mov
xor
fwait
mov
push
fdiv
add
adc
add
lock
mull
out
push
mov
add
cmp
jge
loope
cmpsb
std
sub
push
ret
aam
add
xor
ret
fwait
jo
fcomi
mov
sub
push
imul
stos
xor
sbbb
pop
jge
lock
cmp
add
inc
xor
inc
lock
fwait
jbe
js
mov
mov
push
outsb
loop
out
add
ljmp
arpl
add
sahf
dec
out
add
inc
cld
add
pop
and
add
rcrb
mov
add
xor
dec
in
test
fwait
xchg
pop
sub
jmpw
pushl
in
or
insb
xchg
cmp
bound
mov
pop
add
xchg
lock
cli
push
sub
shll
shll
cltd
xor
add
cmpsb
nop
add
rcrl
inc
es
pop
es
cmp
lret
and
xchg
pop
icebp
pushl
add
mov
cmpsl
rorl
loope
inc
fistpll
xchg
inc
jmp
ret
dec
add
mov
mov
adc
mov
mov
and
mov
mov
mov
adc
je
es
outsb
aas
push
add
xlat
push
push
push
push
push
add
inc
rcl
push
push
push
loop
mov
aam
xchg
add
dec
pop
loope
push
push
das
jo
cs
data16
addl
addl
add
adcb
mov
add
inc
test
fsts
add
add
int
sbb
jmp
pushf
dec
cld
hlt
sub
adc
add
repnz
inc
jnp
push
mov
add
mov
add
inc
inc
add
call
adcl
mov
cli
add
call
ljmp
push
mov
out
inc
add
mov
fidivl
sbbb
push
xchg
sub
jns
imul
pop
sbb
push
out
xor
roll
add
pop
jo
add
dec
rcrl
add
xchg
xchg
xchg
add
lea
sbb
pusha
add
insb
sub
pop
sbb
lcall
cs
pcmpgtw
pop
fdivs
insl
jo
daa
rclb
adc
push
xor
mov
dec
movsb
push
push
pop
add
adcb
xor
movsb
jno
push
add
or
test
shl
stos
ret
push
rcl
xchg
js
add
adc
xchg
sbb
add
add
push
lock
jp
xlat
rolb
lret
add
jmp
adc
decl
outsb
mov
sbb
icebp
lock
hlt
testl
add
sub
cld
incl
loope
jecxz
in
out
out
call
mov
clc
cmp
mov
mov
mov
mov
cmpsb
test
sbb
mov
lods
scas
inc
movsb
outsl
mov
packssdw
add
add
pop
nopl
cs
call
xor
aad
aam
inc
add
fstp
sbb
lods
add
add
mov
decl
popa
add
push
add
lock
and
lock
aas
add
add
push
mov
enter
into
aaa
cld
neg
inc
add
pushf
xor
cld
pushf
in
jbe
mov
cmpsb
mov
cmp
xchg
mov
sbb
dec
xchg
adc
sub
pop
stos
add
sub
and
pushf
inc
adc
jg
filds
xchg
mov
js
push
divl
mov
outsb
mov
lcall
mov
lea
int
cwtl
das
mov
in
cmp
pop
ljmp
lret
lret
add
jl
pop
insb
movsb
and
and
leave
hlt
scas
clc
sbb
fistpl
sbb
into
call
fucomip
int
mov
add
inc
or
jg
ss
int
pop
roll
test
sbb
fstpt
outsl
sub
add
dec
aad
inc
js
rcl
cwtl
sub
xchg
sar
cld
mov
pop
addr16
loopne
mov
jecxz
adc
int
add
sub
in
scas
sub
or
outsl
stos
out
int3
es
and
jb
aas
add
stos
sub
mov
sbb
sub
loop
inc
sbb
cmp
fcomip
pushl
dec
ss
rolb
pcmpeqw
jae
clc
call
push
rol
dec
hlt
addb
addb
fiadds
mov
add
and
and
sbbl
test
rclb
sub
xlat
es
ret
rolb
leave
rolb
rol
cltd
add
mov
roll
sub
in
jg
in
test
add
push
jecxz
es
shll
or
shrl
ljmp
add
cmp
mov
lds
inc
pop
sbb
sbb
dec
adc
mov
inc
ret
gs
in
pusha
push
jno
push
pop
imul
sbb
adc
out
rorb
enter
mov
adc
push
cld
loope
sub
icebp
pop
mov
add
cmpsb
push
ret
add
add
add
repnz
push
and
out
cmp
jecxz
mov
lahf
sbb
xchg
jg
fisubrs
test
test
dec
mov
push
dec
mov
xchg
movsb
cmp
dec
sub
sbb
ret
and
push
xchg
popa
jo
fstl
loopne
sbb
jl
fcompl
in
sahf
xorb
rclb
test
mov
aaa
inc
roll
inc
inc
xlat
add
in
jnp
imul
xor
int
sarb
ljmp
rorb
mov
into
xor
rclb
sbb
shrb
aaa
jg
cmc
rolb
loopne
jns
loopne
jbe
shlb
pop
scas
inc
or
jbe
jg
fidivrs
inc
add
add
add
push
ret
pop
aaa
fidivl
or
or
rorb
fbld
or
push
dec
sub
and
scas
iret
fwait
mov
or
shl
or
cwtl
pop
or
push
jno
push
mov
cmp
xor
add
ja
sbb
add
cld
loopne
test
push
std
mov
push
or
loop
rcrl
cs
xor
loopne
or
adc
dec
lret
inc
mov
rorb
push
loopne
into
add
in
lcall
lcall
adc
in
int
adc
das
jl
sub
xchg
cmp
clc
loopne
or
xor
sbb
or
push
int3
mov
int
and
add
mov
in
cmpsb
fucom
or
arpl
adc
lods
loope
aam
iret
inc
lcall
es
mov
mov
jp
fwait
cmpsb
pop
sub
dec
loopne
iret
pop
push
xchg
or
loopne
jno
shl
repz
sbb
loopne
pop
je
xor
dec
xchg
test
bound
icebp
mov
inc
mov
loopne
popf
or
add
cld
inc
shl
lods
xor
cmp
pop
addb
or
push
sub
pusha
cmpb
fldl
or
adc
cmpsb
imul
jle
lahf
fildll
inc
loopne
and
add
insl
rcrl
cmp
lea
jmp
test
xor
xor
fmuls
sbb
loope
mov
jle
pop
int
mov
imul
or
sub
sub
add
adc
stc
rcrl
cmp
add
cmp
loopne
sbb
loopne
jns
loopne
pop
loopne
shl
mov
mov
mov
sbbb
into
addl
jle
mov
and
adc
in
mulb
cld
mov
cmp
push
add
push
loop
outsl
xchg
loopne
shl
xchg
dec
sar
stos
pop
loopne
test
adc
iret
int
xor
add
adc
ds
jecxz
and
and
popf
pop
lcall
jo
test
dec
ds
push
icebp
or
clc
or
jo
or
jle
add
rclb
sbb
lock
div
fstpt
dec
or
jb
pop
push
sub
sub
test
jns
jo
mov
inc
jo
cltd
sub
out
fs
jo
xor
adc
mov
sarl
or
mov
xchg
mov
arpl
jbe
lock
stos
adc
imul
jns
push
inc
sahf
shrl
es
pop
push
mov
jg
or
sub
jo
loope
add
jo
stos
int
pop
jo
std
fucom
mov
dec
jg
jnp
mov
add
jo
jno
ficompl
pop
outsl
jo
movsl
jbe
mov
or
test
mov
repnz
adc
scas
mov
jo
and
cmp
in
jns
sbb
cmp
gs
xor
push
and
mov
sub
inc
test
inc
fdivp
or
and
fisttps
in
mov
xchg
incb
cmp
or
xchg
arpl
lods
sbb
cmp
or
inc
add
sub
mov
add
lock
xor
out
or
pop
lds
fwait
cmp
xor
jno
shl
adc
sbb
divl
test
or
mov
idivl
ss
and
insl
addl
pop
pusha
adc
jno
shl
jp
hlt
fisubrl
add
push
into
adc
pop
xchg
and
and
ss
adc
push
aad
jae
or
jb
nop
adc
int
je
in
shlb
mov
js
mov
jnp
jp
mov
jge
test
dec
fistpll
lods
sarb
stos
pusha
rcl
shlb
or
shll
xchg
shlb
outsl
out
rorb
rclb
push
rorb
int
cld
in
insl
shrb
shrl
scas
outsb
shrb
adc
int
cld
rcl
rclb
call
sbb
fstpl
ror
rcrb
int
push
rcr
rolb
rol
rcl
xchg
rolb
rclb
or
int
mov
sarb
mov
xor
test
cld
int
cld
rcl
shlb
jmp
rcl
sarb
rcr
cmp
enter
lret
int
ds
shlb
rol
and
xchg
shlb
rcrb
sub
cld
int
mov
sarb
das
shlb
clc
sub
pop
shl
in
cmc
shl
fcmovbe
pop
sub
pusha
push
in
shl
scas
shl
sarb
shl
pushf
ror
shl
xor
fcmovnbe
pop
rcrl
push
shl
adc
int
or
adc
rorl
fstpt
rcr
rcl
lock
shrb
mov
or
scas
jb
xchg
je
stc
ja
ljmp
shl
shlb
mov
mov
sar
shr
js
ret
loope
stc
iret
shlb
rcrb
sar
sbb
lahf
mov
rcrb
sar
rclb
stc
fwait
mov
shlb
psrld
ss
fbstp
lahf
mov
ds
rclb
shl
shrb
push
int
mov
das
sarb
aad
out
jg
pusha
jae
fucom
jb
fcoml
jne
shl
je
sub
out
ja
and
jbe
jo
aad
loope
aad
jnp
jbe
jp
js
out
jge
xor
jl
xor
aad
loope
aad
popa
aad
loope
outsl
out
aad
arpl
jne
aad
gs
loope
aad
out
addr16
loope
aad
imul
pusha
imul
loope
aad
outsl
out
insl
aad
loope
aad
outsl
aad
loope
aad
adc
outsb
loope
outsl
out
aad
adc
adc
adc
aad
out
pop
aad
loope
aad
sbb
sbb
sbb
pop
sbb
push
loope
aad
outsl
out
sbb
aad
pop
aad
loope
aad
add
push
loope
outsl
out
aad
add
xor
add
xor
aad
mov
pop
aad
loope
aad
or
cmp
or
cmp
aad
loope
aad
mov
aad
loope
aad
pmullw
push
aad
aam
stc
fstpt
cmpsb
xlat
outsb
aam
xlat
adc
lock
aam
xlat
adc
repnz
aam
xlat
adc
hlt
pop
aam
xlat
push
aam
sbb
stc
xlat
sbb
fwait
mov
aam
xlat
sbb
cli
sbb
aam
pop
aam
fwait
mov
aam
add
loope
rcl
loopne
aam
xlat
add
loop
stc
fwait
mov
add
in
aam
xlat
push
aam
or
jmp
mov
aam
xlat
xor
xchg
xor
nop
xlat
xor
xchg
xor
stc
fwait
mov
aam
xor
xchg
xlat
aaa
aam
ss
xlat
cmp
cltd
mov
aam
xlat
cmp
fwait
cmp
lcall
pushf
xlat
aas
aam
mov
aam
xlat
and
andl
aam
jo
push
mov
mov
mov
andb
pop
mov
cs
xchg
jbe
xchg
jns
mov
jg
aaa
js
mov
jnp
mov
mov
jge
lea
lcall
jle
mov
popa
xlat
movl
aad
xlat
shlb
stc
fldt
aad
xlat
aam
xlat
xlat
data16
aad
xlat
fwait
mov
xlat
fcom
imul
push
fcmovbe
insl
xlat
fwait
mov
xlat
fildll
adc
lahf
adc
loope
adc
loopne
stc
fwait
mov
adc
in
pop
xlat
xchg
push
xlat
loop
sbb
int
mov
push
xlat
call
out
fwait
int
add
in
xlat
in
adc
xlat
out
aad
xlat
out
out
rcl
sahf
aad
xlat
xchg
add
nop
aad
xlat
xchg
add
xchg
aad
xlat
out
out
push
xlat
jecxz
or
popf
or
lcall
cltd
aad
mov
pushf
or
cwtl
push
fwait
stc
xlat
incl
xlat
rcl
adc
xlat
not
xor
ljmp
dec
loop
ret
aaa
in
adc
je
xlat
leave
aad
xlat
enter
aad
xlat
lret
repz
cmp
int
aas
xlat
int3
xlat
iret
aad
xlat
into
and
dec
aaa
jg
aad
xlat
icebp
and
lock
xlat
repz
repnz
int
adc
xlat
ret
aad
xlat
std
sub
cli
aad
xlat
sub
stc
aad
int
cld
sub
clc
aad
xlat
imulb
xlat
sti
aad
push
add
jae
pop
shl
outsl
out
pop
jne
pop
shlb
jbe
pop
sarb
pop
mov
jp
jp
pop
jg
push
sarb
les
icebp
pusha
mov
mov
jg
gs
jle
fs
sbb
addr16
inc
shlb
ljmp
sbb
push
popa
shrb
pop
rclb
inc
rclb
inc
sar
call
inc
rclb
inc
rclb
inc
rclb
inc
rcrb
dec
rcrb
dec
rcrb
dec
sar
lcall
dec
rcrb
dec
rcrb
dec
rcrb
dec
rolb
jno
rcl
jo
add
rolb
add
add
int3
pop
sar
das
lret
jbe
or
jns
or
js
xor
pusha
shlb
arpl
xor
add
das
xor
fidivs
fadd
add
pushl
data16
imul
cmp
hlt
cmp
clc
add
cmp
lock
outsl
sarb
lcall
add
and
adc
and
adc
and
adc
and
adc
shlb
pop
shlb
push
shrb
sbb
sub
sbb
jo
data16
jb
lcall
icebp
bnd
lock
shl
jbe
jo
jns
jb
js
jne
jnp
ja
jp
dec
bnd
dec
bnd
dec
bnd
jno
jle
jns
popa
fnstcw
insl
fnstenv
ljmp
rep
fnstenv
adc
in
adc
int3
repz
iret
repz
repz
in
repz
lcall
fsts
lock
flds
lock
fnstenv
repz
push
repz
push
repz
jg
decl
sti
repz
div
push
fyl2xp1
repz
daa
flds
sub
inc
lock
fists
lock
flds
push
fdiv
cmc
xor
pop
hlt
xor
inc
hlt
xor
fdiv
xor
xor
jg
xor
fcomi
cmp
cmp
leave
hlt
cmp
shl
ss
cmp
pop
cld
aas
fsubr
hlt
fsubrs
and
push
and
mov
and
insb
repnz
fcomi
and
hlt
daa
fsub
hlt
es
hlt
sub
fidivs
shl
jae
shl
pushl
cld
pushl
aad
jne
aam
je
icebp
ja
and
fdiv
jns
fcomi
js
lds
push
jnp
ret
fcomi
cmc
jg
div
jle
hlt
icebp
popa
fildl
arpl
incl
fildl
lock
fisttpl
push
ret
icebp
pushl
std
insl
repnz
fstpt
outsl
repnz
mov
adc
fisttpl
mov
repz
hlt
sbb
data16
pop
fistpl
hlt
push
fstpt
add
leave
icebp
shrl
fcmovne
icebp
add
int
add
int3
icebp
add
fninit
icebp
push
fnclex
icebp
or
testb
jge
lock
push
or
pand
hlt
push
fstpt
xor
aaa
fstpt
stos
mov
xor
fisttpl
aaa
icebp
fstpt
fbstp
hlt
cmp
insl
hlt
cmp
cmp
negl
fildl
push
icebp
and
lock
and
mulb
jmp
mov
mull
fistl
imull
fcmovnu
imull
fcmovnb
repnz
decl
jmp
icebp
das
mov
in
add
out
add
adc
adc
jle
adc
je
adc
mov
mov
pop
fimull
repz
fidivl
push
fisubl
add
fptan
pop
or
push
push
cmp
or
fidivl
ffree
icebp
xor
add
xor
rcl
xor
add
xor
add
call
xor
fldl
aaa
fldl
aam
fldl
aam
fisttpll
aam
fisttpll
aam
fisttpll
aam
fisttpll
call
cmp
fisttpll
aas
fisttpll
aam
fisttpll
aam
fnsave
aam
fnsave
aam
fnsave
aam
fnsave
call
and
fnsave
daa
fnsave
aam
fnsave
aam
fnstsw
aam
fnstsw
aam
fnstsw
aam
fbstp
rcr
jb
rcr
jne
aad
je
aam
ja
xlat
fbstp
fistpll
js
fcomp
mov
lock
fcmovu
jge
fstp
jl
jg
fistpll
jmp
rcr
fadd
fbld
ret
fbld
ret
fadd
fbld
fbld
fbld
ljmp
leave
fildll
enter
lret
fildll
lret
fmul
fildll
fildll
iret
fildll
into
mov
icebp
fists
fdiv
fists
fdiv
fists
fdiv
fists
hlt
fists
fdiv
fists
fdiv
fistps
fdivr
fistps
fdivr
fistps
fdivr
fistps
fdivr
fistps
fdivr
fistps
fdivr
fistps
fdivr
filds
fsub
fsub
filds
fsub
filds
fsub
filds
fsub
filds
fsub
filds
fsub
fisttps
fsubr
fisttps
fsubr
fisttps
fsubr
fisttps
fsubr
fisttps
fsubr
fbstp
fcoml
fbstp
fcoml
fbstp
fcoml
fcoml
fistpll
fcompl
fistpll
fcompl
fistpll
fcompl
and
sbb
faddl
fbld
faddl
faddl
fildll
fmull
loopne
jmp
jb
loop
jne
in
je
in
ja
out
jbe
out
jns
jmp
loopne
fucomip
jmp
jp
ljmp
fucomip
loopne
fucomip
loopne
fucomip
loopne
fists
loopne
fists
loopne
fists
loopne
fists
data16
loopne
fistps
jmp
push
lcall
fistps
outsb
fistps
loopne
filds
jmp
adc
and
filds
loopne
filds
loopne
fisttps
loopne
fisttps
loopne
fisttps
loopne
fisttps
push
fisttps
loopne
fbstp
fldcw
loopne
fbstp
add
pop
rolb
int
mov
or
or
or
or
or
rorb
rorb
xor
fwait
int
shlb
xor
xor
xor
fldcw
shlb
cmp
cmp
int
cmp
cmp
cmp
ffreep
fistpll
and
test
loopne
fists
and
fists
popa
lds
loopne
fistps
sub
shrb
shrb
push
inc
mov
shrb
dec
ret
ret
cmp
call
insb
ret
outsl
ret
jno
add
jb
repz
jne
ja
jns
or
cmp
jp
fldcw
repz
lods
xchg
add
push
fcomp
repz
ret
lret
stc
cmp
call
xor
jns
xor
mul
jns
out
stc
test
xchg
xchg
mov
clc
mov
jnp
out
std
mov
mov
cld
mov
push
mov
jns
cmp
pop
faddl
mov
inc
push
mov
cmp
repz
cmc
inc
hlt
inc
repz
repz
cmp
dec
repnz
push
lock
out
daa
iret
repz
dec
push
cld
dec
sahf
out
sahf
jnp
jp
jge
sahf
out
mov
idivl
popa
mov
push
sahf
out
sahf
mov
mov
mov
jns
out
mov
mov
mov
jns
out
mov
mov
sahf
mov
iret
repz
movsl
adc
cmpsl
adc
pop
test
push
test
stos
sbb
repz
stos
sbb
iret
repz
sbb
pop
push
repz
repz
push
add
iret
repz
push
add
push
add
push
add
xor
cmp
repz
jae
out
sahf
out
sarb
jne
je
iret
jnp
cmp
push
mov
ljmp
insl
mov
jae
lahf
mov
imul
aas
adc
ljmp
in
decl
fiadds
dec
out
aad
mov
dec
mov
mov
ljmp
inc
cltd
cs
xchg
xor
adcb
mov
insl
cmpsb
addr16
sub
push
idiv
mov
xor
xchg
test
or
push
or
out
sbb
cmc
sub
or
mov
jbe
subb
jae
inc
lahf
push
adc
pop
std
call
incl
adc
fnstenv
lea
and
shl
mov
mov
popa
imul
mov
inc
enter
cmp
push
fld
dec
fstl
jne
pop
fistpll
test
stc
jae
and
dec
les
push
inc
mov
adc
jmp
shll
mov
insl
aad
mov
xchg
sub
enter
lcall
mov
mov
pop
fmull
inc
cltd
mov
inc
popf
push
popa
adc
scas
push
pop
mov
hlt
ret
icebp
cmpsb
inc
mov
push
pop
mov
fistps
movsl
loope
aaa
xor
sbb
mov
jmp
popa
int3
mov
loop
loopne
loopne
loopne
jmp
mov
and
push
xor
cld
push
add
int
pushl
xchg
pushf
inc
mov
in
push
scas
dec
adc
add
insl
xchg
inc
enter
inc
je
shl
daa
das
mov
jns
xchg
notb
cmpsb
adc
push
mov
jecxz
loopne
enter
loop
loop
loop
loop
jmp
pop
loop
loop
loop
loop
dec
repnz
push
pop
pop
and
jge
xchg
mov
pop
in
ljmp
out
outsb
test
int
cmc
in
in
in
in
in
in
in
in
push
hlt
cmp
call
inc
repz
mov
mov
adc
test
add
in
in
in
jmp
aad
fucom
lds
mov
das
mov
inc
adc
daa
cmp
add
sbb
in
in
in
in
in
in
in
in
in
in
lret
repz
inc
xchg
adc
ret
cs
pushl
mov
or
mov
out
out
out
out
out
out
out
out
out
fistpll
js
les
push
mov
mov
fcmovb
xor
mov
mov
out
add
push
lds
loope
loope
loopne
loopne
lock
ljmp
scas
faddp
adc
push
aam
dec
ljmp
jmp
in
mov
call
inc
or
addb
inc
in
in
push
adc
repz
xchg
jl
movsb
js
cmc
xchg
xchg
out
out
dec
out
pushl
out
or
lret
iret
lcall
test
lcall
jg
movl
fadds
loope
loope
loopne
xchg
loopne
loopne
loopne
jecxz
jmp
or
pop
sahf
xchg
cmp
cs
test
fadd
mov
push
cmpsl
add
push
push
mov
mov
mov
in
in
in
xor
stc
xor
push
sub
mov
push
cmpsb
xchg
add
dec
xor
aam
fdivr
decl
jmp
ret
out
out
sub
movsb
jb
popa
add
jle
dec
ljmp
loop
pop
sub
jmp
test
dec
out
out
out
out
out
jmp
inc
jmp
jmp
popa
adc
mov
fstp
cwtl
cmp
nop
ds
sub
jmp
jmp
jmp
ljmp
mov
adc
lods
mov
inc
cld
sbbl
decl
dec
sub
adc
in
in
hlt
in
sti
in
jmp
mov
jg
lret
pushf
cwtl
mov
dec
pop
ds
xchg
mov
mov
add
out
lcall
out
dec
out
je
jge
imul
jge
outsl
lea
imul
adc
testb
jp
in
in
in
in
in
in
in
in
mov
sub
fcmovnb
aam
add
pop
push
lock
test
nop
mov
outsb
ljmp
aam
jne
mov
and
jmp
jmp
jmp
jmp
jmp
inc
ljmp
decl
push
test
mov
jbe
sub
gs
push
in
cmp
loopne
scas
in
jle
pop
in
jg
sbb
xor
cs
fidivrs
lock
sub
mov
cld
popa
movsl
mov
jecxz
adc
shr
out
cld
out
jo
sbb
push
enter
lock
add
lret
xchg
adc
stos
test
push
std
mov
pushl
add
loop
loop
inc
loop
inc
pmulhw
adc
subb
mov
mov
aas
fcmovnu
cmp
test
inc
rol
leave
enter
int3
iret
into
inc
adc
push
stc
clc
sti
cli
std
cld
incl
psraw
ds
in
in
out
out
xchg
dec
and
adc
inc
adc
lea
out
jo
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
decl
dec
dec
dec
jno
jae
jne
ja
jns
jnp
jge
jg
popa
pusha
arpl
imul
ljmp
insb
outsl
outsb
adc
adc
adc
sbb
sbb
roll
add
or
decl
or
xor
xor
cmp
cmp
and
and
sub
loopne
and
sub
pusha
mov
xchg
add
add
call
nop
xchg
xchg
xchg
xchg
xchg
xchg
add
pushf
lahf
sahf
add
test
xchg
ret
mov
adc
add
add
add
add
xchg
and
and
and
add
add
add
add
js
xor
out
cmp
sbb
scas
add
add
adc
outsl
outsl
ljmp
rclb
pop
and
mov
sbb
and
scas
scas
cli
call
addb
jo
sub
pop
and
jge
sti
clts
or
mov
ret
or
fcos
subb
int
orb
adc
lret
add
ret
adc
mov
mov
fildl
mov
aas
add
adc
sahf
and
out
cwtl
rolb
or
mov
jnp
mov
lss
mov
mov
in
dec
mov
xchg
mov
mov
add
sbb
ljmp
xchg
mov
xchg
ret
or
or
mov
scas
clc
in
mov
loopne
push
or
push
cmp
or
pop
xchg
inc
invd
pop
mov
cmpsb
mov
cltd
test
idiv
loopne
loopne
push
sbbl
mov
mov
mov
pushl
sti
mov
add
loope
add
inc
jns
add
icebp
mov
ret
mov
add
ljmp
sbb
in
fcmovnb
add
adc
rclb
rolb
add
inc
sbb
lcall
hlt
sub
outsl
outsl
ss
and
imul
ret
mov
std
inc
nop
fwait
test
lea
mov
andb
mov
lret
mov
in
fbld
sbb
add
fs
and
dec
xchg
add
adc
add
xchg
dec
mov
or
mov
inc
loope
mov
mov
or
stos
add
xorb
pusha
mov
lock
jmp
cmpsb
or
pushl
jno
mov
mov
mov
add
push
or
call
push
andb
mov
or
loopne
mov
and
popa
or
pusha
add
popa
add
and
pop
adc
xchg
xchg
icebp
loope
loop
mov
sti
outsl
adc
xor
add
add
mov
ret
cmp
clc
rolb
mov
lock
inc
es
call
arpl
inc
push
inc
pop
jnp
pop
dec
pop
jp
pop
push
pop
mov
jne
inc
pop
pop
dec
add
inc
insl
add
rol
inc
ror
int
loope
push
fs
cmpsb
movsl
xchg
cwtl
mov
xchg
xchg
add
mov
pop
std
sti
out
faddl
lret
into
iret
rcr
add
incl
cs
add
ds
sub
sub
inc
cmp
loopne
aas
add
jge
outsb
incl
cs
rolb
or
and
test
jmp
jecxz
in
out
adc
outsb
or
jmp
jmp
lcall
jle
sar
in
dec
out
stc
xlat
lock
aad
or
lret
lds
xlat
clc
decl
fisubrl
aas
das
cmp
pop
cmp
add
cmpb
das
clc
jge
xor
jne
bound
bound
adc
aaa
popa
or
push
cmp
add
push
and
jo
hlt
fildll
es
jle
outsb
xor
jge
popa
arpl
cmc
mov
data16
cli
in
clc
repnz
loopne
loop
push
pop
or
lcall
push
jecxz
sbb
pop
push
sub
add
push
pop
dec
pop
dec
jbe
pop
loope
push
cmp
and
jle
adc
sub
add
mov
das
rorb
pop
mov
fbld
sar
nop
xchg
add
stos
mov
mov
scas
mov
movsb
mov
pop
sbb
or
adcb
inc
movups
in
add
cmp
jno
xor
xor
sub
sub
outsl
and
scas
clc
mov
movsl
mov
mov
cld
cmpsb
add
inc
jg
decb
inc
or
dec
cmp
stos
lods
decl
mov
mov
loopne
jmp
in
out
outsb
push
pop
add
add
add
imul
pop
dec
pop
jae
sar
jle
inc
dec
inc
push
push
dec
gs
push
push
inc
jae
imul
push
das
in
dec
inc
or
jg
rcrb
fdivrl
sub
shlb
inc
enter
add
cli
ret
mov
mov
in
scas
push
mov
lock
rep
div
lods
movsb
mov
hlt
out
clc
inc
stos
movsl
loopne
add
cltd
popf
insb
pushf
lahf
fcmovnbe
fcoml
pop
inc
or
addr16
gs
xchg
lea
mov
cld
inc
inc
xchg
mov
dec
pushl
adc
in
xchg
xchg
cwtl
cli
xchg
faddl
lret
mov
add
je
outsl
mov
mov
fiaddl
xor
test
pusha
leave
ror
test
les
sarl
nop
fstp
loope
out
mov
lods
add
je
jle
add
insb
js
jo
jbe
mov
outsb
arpl
add
arpl
fs
outsb
subb
push
sbb
addb
cmpsb
rclb
aad
fcomps
ret
enter
fcmovne
add
cmc
add
daa
cmp
xor
or
and
decl
daa
add
outsb
jno
and
sbb
push
sbb
push
scas
call
adc
or
pushf
xchg
cltd
test
cld
cwtl
xchg
mov
pushf
mov
xor
sub
fstpt
cmpsb
and
mov
add
lea
lcall
cltd
xchg
pushf
inc
xchg
rolb
fmull
or
fld
lock
int3
xlat
sar
aam
inc
pop
pop
pusha
jg
dec
pop
dec
inc
inc
inc
inc
push
inc
inc
inc
adc
inc
dec
jo
sbb
popa
filds
imul
and
push
pop
or
sbb
lcall
cmp
xchg
fwait
mov
jg
ja
sub
add
outsl
cmp
add
adc
add
aas
add
add
sbb
xor
or
push
push
imul
sub
outsb
insl
bound
jb
push
jb
fs
sahf
test
incl
and
add
aas
and
sbb
add
cmp
in
add
mov
cmpsb
mov
test
adc
pushl
fs
xchg
ja
bound
inc
outsb
js
ja
outsb
jl
add
arpl
dec
pop
pop
dec
pop
loop
clc
lcall
push
add
or
push
insl
pop
pop
dec
in
mov
mov
and
mov
leave
outsl
adc
dec
fdivp
int
xlat
add
fsubs
add
or
adc
hlt
push
cld
incl
or
or
add
adc
sbb
lods
mov
lock
test
stos
mov
cmpsb
nop
sub
jo
jnp
adc
and
cmp
lret
stos
jg
repnz
mov
pop
inc
outsl
inc
and
pop
dec
stos
push
icebp
mov
das
xor
sub
push
daa
mov
and
div
hlt
cwtl
test
adc
in
and
mov
jmp
sahf
cltd
cltd
mov
int
mov
add
xchg
mov
mov
ret
ret
test
clc
mov
enter
pop
inc
inc
inc
pop
adc
inc
pop
inc
inc
cmc
lret
xlat
clc
es
mul
hlt
nop
insl
xor
adc
addb
inc
dec
jl
jmp
loop
dec
pop
dec
pop
jbe
loopne
fs
inc
jge
mov
jl
outsl
xor
shlb
dec
bound
pop
inc
cmpsb
dec
pop
jne
testb
push
add
add
vpmaxub
repnz
jbe
lret
rorb
add
ja
fwait
mov
test
mov
subb
mov
in
mov
xchg
in
mov
add
fldl
stos
subl
xchg
xchg
lahf
fdiv
call
push
fs
stos
outsb
jo
jno
out
aad
ret
mov
jmp
mov
lcall
adcl
mov
stos
scas
cli
add
decl
mov
call
xchg
test
jo
fs
xor
mov
xchg
mov
sbb
or
add
sbb
and
popa
ret
lcall
and
cs
cmp
adc
xchg
test
adc
lahf
xchg
test
fsubs
incl
lcall
pop
sbb
mov
cmpsb
mov
and
mov
or
decl
out
in
or
ljmp
out
in
mov
test
lock
ret
rcl
je
rorb
sti
incl
icebp
add
test
pop
push
lock
call
pop
inc
dec
inc
sbbb
add
add
call
push
inc
push
inc
push
cli
jnp
bound
jp
aaa
cld
mov
add
jge
cmp
jle
addb
dec
dec
dec
pop
sbb
mov
shll
mov
sub
je
mov
xor
sbb
sbb
sbb
add
xor
mov
pop
inc
dec
sbb
pop
dec
pop
inc
stos
jae
cmp
fsub
imul
jp
bound
add
arpl
jmp
bound
jno
inc
fs
dec
add
jnp
pop
push
pop
pop
cmp
push
inc
inc
bound
push
dec
dec
sarb
add
incb
or
cmp
aas
ret
pusha
sarb
fs
outsl
andb
insl
jl
mov
adc
and
mov
xchg
mov
lea
gs
pop
repnz
push
push
aas
sub
mov
xor
cmpsb
test
push
or
push
or
mov
sbb
pusha
lds
lcall
mov
cmp
adc
adc
and
or
inc
das
clc
lcall
or
xor
add
rcr
adc
mov
push
mov
add
adc
adc
jle
dec
adc
push
or
add
sub
and
arpl
and
and
cmp
out
jg
incl
addb
mov
mov
stos
out
add
stos
test
xor
jo
jae
cmc
outsl
clc
add
adc
xor
daa
push
pop
cmp
stos
lcall
inc
inc
inc
dec
dec
nop
xor
idiv
out
ljmp
fcmovnu
fcom
clc
scas
cli
mov
fmulp
rorb
lret
rol
mov
lods
push
ficoml
pop
subb
outsl
je
mov
jp
xor
cmp
and
fisubs
call
pop
push
push
add
pop
dec
add
pop
fcmovne
lock
cmpb
into
fstp
add
and
mov
mov
pushw
jg
push
push
add
insb
fs
arpl
cld
pop
inc
mov
sbb
movsl
mov
add
dec
test
icebp
add
inc
shr
sbb
or
jo
aam
sbb
xchg
jge
mov
sahf
fwait
test
xchg
add
stos
inc
inc
inc
mov
mov
push
or
xchg
adc
lods
test
fldcw
inc
out
dec
jecxz
hlt
cli
call
fucomip
or
icebp
mov
add
cld
ljmp
pusha
popa
push
inc
shll
jg
jo,pn
rcrb
push
js
lahf
lea
fsubs
hlt
add
cmp
gs
cmp
aaa
add
jg
cwtl
sub
insb
gs
or
and
aas
rcl
movsb
cmp
cmp
add
push
add
scas
clc
mov
inc
adc
xor
xor
or
pop
fistpll
icebp
sbb
push
jno
aaa
sbb
xor
insb
lahf
enter
ljmp
add
lret
rcl
xor
in
out
aam
cmc
pop
icebp
incl
add
add
pop
pop
sarl
sub
cs
jle
arpl
popa
mov
ljmp
cs
imul
sub
or
push
sbb
pop
push
icebp
in
add
insb
clc
adc
iret
int3
cld
or
mov
fildl
xchg
jg
sbb
sbb
add
and
sub
add
sub
fcomip
add
mov
nop
lahf
xchg
xor
lret
loop
pop
mov
shr
jecxz
add
pushl
inc
inc
dec
inc
pop
or
cmp
incl
push
inc
add
dec
jne
popf
sbb
xchg
xchg
inc
sub
xchg
mov
cmp
or
daa
or
sbb
arpl
adc
std
lds
arpl
and
adc
add
call
lret
popa
or
xor
adc
sbb
adc
data16
xor
scas
and
hlt
lock
loope
idiv
loope
jecxz
out
add
clc
icebp
mov
push
mov
div
add
hlt
mov
repz
cmpsb
cmp
out
out
sahf
add
jmp
incb
in
aaa
gs
pop
inc
inc
inc
add
addr16
push
push
inc
push
in
cmp
nop
xchg
jp
fdivs
addl
adc
push
mov
clc
divb
repz
cmpsb
les
loop
lods
fsubrp
in
clc
ljmp
mov
mov
jbe
pop
jle
data16
push
jle
clc
incl
mov
dec
imul
jno
cmp
add
sbb
sub
push
inc
or
sbb
rcr
shlb
push
clc
cld
xchg
loop
in
fcomi
hlt
out
std
incb
in
orl
loope
arpl
dec
inc
add
cli
mov
add
mov
xchg
lea
mov
stos
xchg
nop
fwait
xchg
add
xchg
test
scas
push
test
scas
mov
clc
mov
add
sbb
adc
add
push
sbb
je
pop
rorb
lods
movb
orb
xchg
mov
xchg
mov
and
push
gs
xor
sbbb
sti
pop
pop
pop
push
inc
jb
push
dec
pop
dec
jle
pusha
pop
push
dec
int
icebp
decl
inc
add
push
dec
inc
inc
inc
inc
mov
sub
xor
decl
mov
out
jp
mul
stc
stos
mov
push
pop
std
mov
xchg
and
add
add
js
addl
pop
decl
push
jnp
push
inc
pop
inc
pop
add
jno
inc
inc
dec
mov
stos
add
push
cmp
push
jns
std
ljmp
jo
add
pop
jp
ja
jle
push
sub
popa
popa
jbe
lcall
outsl
adc
pop
or
adc
mov
nop
add
pop
dec
pop
pop
push
push
add
pop
push
dec
mov
imul
adc
ja
insl
rorl
dec
dec
and
dec
jg
add
xchg
mov
add
aam
stos
incb
adcb
cmpsb
mov
mov
sar
sbb
pushl
mov
popf
cmpsb
cmpsb
mov
out
lods
mov
mov
push
xor
xor
adc
sub
pop
jge
or
sub
add
sbb
add
icebp
sbb
xor
or
inc
es
decl
data16
cmp
pop
pop
cmp
cmp
sbb
pushf
cwtl
mov
cmpl
enter
mov
push
mov
pop
icebp
aad
mov
fstpl
scas
scas
call
loope
in
jmp
loop
stc
enter
stos
test
push
mov
mov
jl
fcmovu
jg
incl
rol
mov
mov
rclb
inc
inc
push
pop
lock
cld
push
mov
push
pop
dec
dec
push
push
orb
dec
dec
dec
dec
dec
clc
pop
std
or
dec
inc
inc
inc
inc
dec
push
jno
ja
jns
pusha
aas
xor
cmc
jg
add
push
adc
bound
jno
imul
jnp
jge
push
or
adc
xor
lret
std
adc
adc
push
push
invd
or
pop
lret
push
mov
xor
jle
pop
pop
and
add
cmp
and
xor
add
add
dec
cld
das
cmp
adc
fcoml
in
or
cld
fcmovu
fwait
xchg
fadd
enter
mov
add
fdiv
fdivrs
mov
in
repz
hlt
call
jmp
mov
imul
in
in
loope
imul
in
movsl
stc
popf
fwait
mov
std
aaa
std
test
fists
mov
xchg
xchg
xchg
push
nop
popa
and
mov
mov
stos
cld
stos
mov
scas
mov
test
mov
pusha
scas
mov
scas
mov
jmp
push
pop
inc
mov
ljmp
cmp
pop
dec
data16
pop
inc
or
push
inc
jbe
pop
lock
add
pop
push
rcrl
pop
inc
dec
addr16
cld
decl
jb
jnp
add
jg
ja
imul
imul
pushw
adc
jl
cmp
ret
aad
rorb
call
mov
es
mov
js
inc
inc
dec
inc
inc
dec
or
adc
stos
mov
mov
in
add
inc
inc
inc
loope
sbb
pop
hlt
add
mov
cli
dec
insl
jnp
imul
pop
dec
arpl
jne
ljmp
test
add
and
and
push
add
or
test
xor
inc
xchg
add
sbb
sub
sub
mov
ja
inc
test
push
enter
shll
cld
push
aam
fs
push
jae
inc
je
dec
push
ljmp
outsl
in
outsl
das
sahf
mov
push
pop
add
jo
inc
insl
mov
mov
jg
jp
insb
pusha
or
xlat
add
lret
mov
sbb
inc
add
js
pop
add
mov
push
jle
pusha
addr16
add
gs
fildll
loopne
sahf
mov
movb
jmp
scas
cmc
jmp
add
stc
push
cli
mov
in
sar
repz
add
repnz
add
sub
mov
adc
ljmp
mov
mov
lahf
xchg
xchg
addl
pop
inc
push
pop
pop
push
adcb
pop
push
dec
pusha
dec
out
iret
ljmp
loopne
out
cmpsl
fsubp
loope
adc
stos
sahf
cwtl
fcomip
mov
stos
mov
or
dec
dec
inc
pop
jg
incl
push
add
add
sbb
push
add
sbb
out
jecxz
out
decl
cmc
lock
add
out
cmp
loop
adc
loop
filds
je
add
and
daa
sub
cmp
call
cmp
cmp
je
add
aas
xor
cmp
cmp
pusha
jns
xor
xlat
mov
add
test
cmpsl
nop
jle
ret
dec
into
and
std
test
dec
hlt
das
xor
mov
cmc
repz
push
std
jg
xchg
inc
xchg
mov
inc
push
sbb
ja
in
inc
inc
push
adc
pop
push
add
int3
pop
push
pop
inc
pop
sbb
pop
jl
pop
push
pop
add
pop
addr16
stos
fidivs
dec
jg
loop
sbb
pop
add
inc
fdivl
inc
sbb
pop
add
je
call
adc
pop
push
push
inc
pop
push
inc
push
cmp
in
lret
incl
dec
aam
cli
add
fmul
nop
mov
push
cmp
xor
fcomip
jg
ds
xchg
add
cmc
icebp
repz
or
push
sbb
adc
adc
repz
sub
add
clc
mov
xchg
fneni(8087
in
add
int3
cmpsb
test
mov
aad
add
in
stc
out
mov
push
call
fiadds
fsub
or
or
or
js
ja
add
addr16
mul
jecxz
pop
or
push
jl
clc
or
add
xchg
sub
adc
sub
mov
or
loope
rolb
popa
sub
cmp
imul
mov
mov
fdiv
lcall
int
xor
int3
add
xlat
add
xor
mov
pusha
xchg
fwait
adcb
fisubl
or
fistpll
push
imul
cmp
inc
push
inc
pop
adc
or
std
pop
or
std
add
out
in
mov
inc
mov
xchg
mov
pop
fs
jae
add
xchg
xchg
nop
xchg
aam
rol
mov
ret
enter
add
xchg
cwtl
lret
ror
mov
mov
xchg
jg
and
mov
mov
imul
je
sub
sahf
outsl
gs
pop
cld
push
jge
arpl
imul
cmp
add
ss
xor
adc
jae
hlt
inc
push
repnz
or
mov
add
inc
inc
dec
scas
dec
or
nop
les
xor
add
repnz
cltd
adc
add
pusha
mov
pop
ljmp
mov
rclb
addl
add
cmc
add
mov
fimull
push
add
add
add
mov
add
xchg
cmpsl
popa
push
test
popf
add
out
adc
push
mov
adc
mov
rolb
pushf
xchg
cwtl
ss
mov
add
xchg
mov
mov
mov
push
mov
adc
xchg
hlt
stos
mov
add
add
add
enter
add
add
add
nop
push
andb
add
out
clc
bnd
out
outsb
add
popa
add
xor
sub
push
cwtl
mov
mov
xor
int
movsl
nop
or
movsl
xorl
outsl
movsb
mov
mov
pusha
add
popf
mov
test
nop
inc
add
filds
mov
movsl
mov
pop
mov
sbb
in
push
add
test
inc
add
movsb
adc
cwtl
mov
jo
mov
xchg
add
movsl
mov
adc
popf
mov
popa
push
xchg
mov
mov
mov
or
mov
nop
or
pop
movsl
xchg
mul
enter
ret
test
add
jg
jae
lahf
addb
xchg
xchg
loopne
or
sahf
inc
decl
pushf
cld
adcb
nop
adcl
decl
xchg
adcl
xchg
adc
or
lcall
test
or
sbbl
mov
sahf
xor
add
nop
movsb
jo
sahf
xchg
mov
lcall
dec
or
adcl
test
add
lcall
mov
lahf
lahf
lret
mov
pop
fcoml
popf
xchg
test
adc
add
mov
adc
mov
xor
push
cld
sbb
into
pop
je
cld
idivb
add
movsl
lock
sub
fwait
xor
or
movsb
mov
sub
out
mov
mov
mov
inc
ja
lock
cld
mov
mov
mov
xchg
push
daa
adc
nop
pop
add
scas
and
and
stc
cmp
xor
out
cli
loop
shlb
rcr
mov
ljmp
xor
sti
inc
xchg
mov
jmp
mov
sbb
and
nop
xchg
shr
movsb
or
inc
mov
sbb
and
outsl
popa
push
nop
mov
mov
inc
mov
ljmp
mov
pop
push
rcl
xchg
xor
cwtl
jo
adcl
or
adc
sub
or
xor
push
mov
mov
inc
add
lods
subb
nop
test
xchg
xchg
inc
add
fldt
insb
and
mov
mov
mov
mov
mov
or
loopne
add
popaw
mov
mov
add
xchg
not
sub
pop
inc
fistps
mov
mov
jl
mov
cltd
xchg
cmpsb
pushf
test
mov
jnp
push
lock
xor
inc
sub
add
mov
stos
movswl
mov
inc
adc
push
xorb
mov
adc
xor
cld
cwtl
dec
decb
bound
mov
xchg
addl
jno
mov
mov
jo
mov
cmp
push
adc
inc
roll
mov
xor
pop
cmpsb
push
inc
jno
mov
lock
push
sbb
aad
pop
loopne
add
dec
decl
test
mov
push
test
jbe
jp
in
push
rcr
or
add
scas
incl
andl
adc
add
ss
fnsave
sub
rol
test
pop
sbb
pop
inc
lock
and
push
and
nop
pop
mov
or
aaa
std
rcll
jno
mov
mov
in
inc
repz
icebp
push
and
add
mov
pop
push
fs
dec
pushf
cmpsl
jb
add
lret
hlt
sbb
sbb
mov
push
cld
stos
jbe
xchg
sbb
add
mov
inc
lcall
repz
jl
fstpt
cs
and
adc
movsl
sbb
inc
daa
adc
pop
xchg
test
dec
sbb
mov
push
arpl
xchg
xchg
add
cs
loop
mov
inc
lock
mov
mov
loopne
xchg
repnz
shll
repnz
mov
cmp
cmp
rolb
aad
aas
std
xchg
cmp
push
adc
int3
shlb
ret
xchg
cli
mov
cmp
in
hlt
pop
les
loop
add
xlat
xchg
std
lcall
pop
outsb
shll
cmp
fistpll
push
mov
add
movsl
aas
mov
fcompl
jg
mov
pushf
aad
pop
cmp
aad
aas
js
add
add
sub
adcb
xchg
cmp
or
int
mov
ficomps
mov
cs
mov
cmp
sub
mov
adc
stos
push
pop
insb
loope
cmp
clc
mov
sbb
push
push
rolb
pop
cmpl
inc
insb
addl
add
cmp
pusha
mov
les
mov
cmp
jp
jle
add
fdivrs
push
add
outsb
call
pop
stos
jmp
ljmp
or
cmp
movsb
adc
push
add
dec
add
pop
xchg
orb
sti
aam
std
push
xor
cmp
ror
sbb
movb
sbb
mov
fdivr
mov
xchg
xchg
mov
pop
es
outsl
sub
rcll
add
sbb
cvtdq2ps
pop
and
add
clc
or
jbe
mov
xchg
adc
test
loop
decl
cmpb
andl
jecxz
outsb
xor
add
adc
addl
and
or
jae
xchg
sub
andb
imulb
aaa
imul
mov
loopne
push
rcll
imul
and
xchg
fildll
es
sub
mov
or
cmp
popa
sarb
add
add
jp
pushf
addb
js
flds
orb
sbb
aaa
xor
dec
adc
mov
fstpl
add
or
loop
sbb
push
sbb
push
es
daa
adc
movsb
mov
test
mov
xlat
addb
movsb
mov
and
cmp
cs
mov
mov
loopne
dec
insl
push
cmp
xchg
call
fstl
call
shll
xchg
cmp
mov
cmpsb
fiadds
roll
xchg
xor
sbbl
nop
pusha
pop
mov
rcrb
shrb
mov
sbb
sub
cs
sbb
push
push
cmp
add
xchg
fcmovnb
adc
fcmovu
movsl
aad
rolb
outsb
das
test
cmp
add
push
or
cmp
cs
mov
out
add
rclb
xchg
and
mov
pop
hlt
pop
push
adc
and
add
roll
or
cld
imul
or
xor
inc
leave
lods
pusha
pop
aad
lds
pop
sbb
jb
sbb
push
sbb
addb
adc
adc
xchg
fstl
inc
cs
lcall
inc
xorl
pop
mov
out
adc
inc
mov
adc
aam
sub
out
mov
jmp
call
into
add
and
sbb
add
pop
pushf
fdivrs
adc
or
fs
lock
and
data16
sbb
pop
orb
subl
xchg
es
or
push
adc
enter
dec
mov
les
or
sub
xor
mov
add
add
add
dec
sarb
mov
or
mov
cmp
scas
into
and
adc
loopne
sub
cmc
xchg
andb
fnstsw
dec
and
or
bound
movsb
faddl
or
pushf
ljmp
stc
call
xlat
frstor
pop
scas
aad
pop
and
adc
jp
adc
cltd
sub
fs
dec
push
gs
out
jecxz
sub
out
inc
enter
cmp
roll
rol
int
adc
xor
mov
xor
inc
xadd
addl
adc
stos
movsb
pusha
cs
and
pop
sub
je
or
int3
mov
out
outsb
aad
scas
cli
ljmp
xchg
ds
je
mov
aad
fldenv
pusha
call
ljmp
lods
cmc
push
movsl
ret
xor
add
and
sub
shll
ret
xor
xchg
int
ss
push
int3
cmp
xor
mov
cmp
shrl
clc
dec
mov
add
push
test
adc
scas
stc
movsl
lock
rclb
or
xchg
mov
sarl
xlat
sub
popa
dec
rcr
adc
mov
les
aam
fimull
cli
scas
jp
dec
xchg
xor
adc
mov
incb
rolb
gs
pop
sub
andb
mov
sbbb
sub
stos
sbb
jne
add
jo
sbb
cmp
push
loopne
push
cld
loopne
cmp
ret
adc
fnstenv
pop
pop
cmp
frstor
lcall
imul
and
xchg
sarb
xchg
and
push
out
inc
adc
leave
mov
ljmp
mov
es
sbb
add
mov
fisttpll
fsubl
out
pusha
or
xchg
and
jne
mov
pop
rorb
mov
add
jns
shlb
shlb
jl
negb
aad
ltr
mov
pushf
or
cmp
stos
test
adc
ljmp
mov
pusha
ja
add
inc
mov
add
and
sbb
and
cmp
call
cmc
stc
inc
cs
lcall
jle
pusha
test
incl
aad
imul
inc
add
inc
aad
sti
xchg
push
adc
jecxz
xchg
inc
fxch
lcall
cmpsl
aad
xchg
shll
lahf
push
rorl
rorb
movsb
adc
adc
mov
or
mov
mov
and
mov
cmp
sar
sub
sbb
add
xchg
cmc
adc
rorb
inc
dec
cltd
movsb
sti
push
mov
mov
adc
dec
addl
cmp
pop
je
popa
add
pop
popl
jb
cmp
pusha
adc
add
lds
fdivs
or
inc
push
sbb
adc
jg
call
dec
loop
xchg
sbb
sub
cld
cmp
or
andb
inc
lods
hlt
adc
movsb
add
hlt
cmpsb
clc
pop
sub
add
cmp
mov
pop
mov
add
xchg
rorl
loopne
mov
stos
in
fsubl
adc
shrb
call
adc
cmpsb
aad
or
sub
mov
jle
add
adc
stos
dec
ret
or
or
das
fs
inc
sbb
or
pop
aam
repnz
mov
pop
rclb
in
sub
mov
fsubl
xor
adc
fcoml
adc
testb
push
push
adc
add
adc
and
add
push
je
ss
push
inc
ljmp
pop
jns
add
adc
push
ficoms
jo
jge
jmp
cli
or
add
mov
in
add
sbbl
add
stos
loope
lcall
pop
xor
inc
pushf
adc
movsl
or
or
or
repz
roll
movsl
lret
push
xchg
movl
insl
add
jno
loopne
push
pusha
inc
mov
lock
adc
aam
or
mov
mov
jno
add
call
cld
pmaxsw
mov
or
mov
inc
push
icebp
or
push
and
subb
sarb
sbb
cmp
insl
and
cwtl
and
push
add
mov
mov
pusha
add
or
inc
inc
nop
ficoms
add
lds
pop
sbb
nop
ljmp
add
stc
mov
push
add
push
pop
aaa
pop
sti
sub
inc
and
mov
push
xor
test
mov
fidivs
push
nop
rorb
add
pop
push
mov
clc
push
mov
xchg
mov
loopne
pop
adcb
js
pop
inc
xor
in
add
xchg
call
test
xor
cmp
sbb
xor
cld
pop
ret
jo
push
scas
xchg
push
inc
xchg
pushf
outsb
cs
add
outsl
dec
mov
in
ret
pop
pop
xchg
and
or
sar
lcall
add
and
pop
movsb
cmp
cmp
les
and
lret
pop
push
inc
sar
mov
dec
rorb
add
stos
fildl
rcrb
cmp
mov
ljmp
and
sub
shlb
sarb
inc
mov
cwtl
loopne
mov
and
push
cs
push
mov
inc
inc
icebp
rcll
push
sub
ret
in
faddl
ss
fld
jno
cmp
call
xchg
std
pop
inc
jno
sbbl
cmp
push
dec
pop
sub
pop
iret
pop
push
adc
mov
sbb
and
adc
call
mov
jb
jo
xchg
adc
or
jg
mov
and
ljmp
and
sub
cmpsl
jge
filds
das
lea
pop
test
xchg
decl
push
enter
mov
pop
push
cmp
std
scas
in
mov
pop
xor
push
push
xchg
loope
push
imul
add
adc
push
test
and
pop
and
inc
xor
jo
in
loopne
and
sbbb
mov
jbe
mov
inc
movsl
fcom
sahf
icebp
push
mov
mov
rcll
fwait
movsb
aas
adc
pop
and
pop
je
and
orb
adc
mov
fsubs
add
mov
loope
test
lock
jecxz
loopne
pop
std
mov
cltd
mov
add
cmp
mov
pop
in
add
inc
das
push
sbb
sub
add
add
cmp
push
hlt
cmc
pushf
mov
dec
in
pop
aam
add
cwtl
pop
cmp
rcrb
and
or
hlt
pushl
jb
or
in
jo
pop
shll
or
cmpsb
jg
dec
mov
roll
xchg
cmp
or
int
into
scas
pop
scas
enter
into
movsb
loope
cli
adc
fldl
sub
cmp
call
xchg
scas
sub
dec
adc
pop
into
cmp
loopne
xor
or
cltd
add
or
lcall
sbb
fcomip
inc
int3
call
les
fisubs
shl
push
add
jno
adc
mov
add
adc
pushf
frstor
inc
call
pop
xor
repnz
cmpl
xchg
add
outsl
in
outsl
repnz
jb
lds
xor
xchg
aad
movsb
push
sub
sub
addb
rolb
rolb
movsl
outsl
js
cld
shl
nop
pusha
or
pop
mov
out
rcrb
nop
mov
or
aaa
pop
int3
xor
xor
ljmp
jg
push
ret
push
aad
rclb
aad
xchg
cmp
rolb
mov
repnz
jg
jno
or
frstor
cwtl
push
sbb
movsl
ret
pop
jecxz
shlb
push
jecxz
xchg
push
adc
ljmp
and
test
add
fstpl
incl
add
cmp
je
xchg
sbb
addb
and
iret
js
fs
mov
cli
mov
pop
add
movsb
cli
nop
mov
roll
nop
pop
in
dec
jno
add
pusha
jmp
push
inc
sbbl
pusha
lods
sbbb
or
test
xchg
pusha
imul
dec
pop
add
push
leave
add
pop
cli
call
mov
mov
jae
loop
xchg
cmpsl
flds
sub
mov
add
iret
in
mov
xchg
cmp
cmc
rorb
push
shll
jo
xor
sub
adc
loopne
adc
ret
jg
popf
rorb
call
xlat
push
cmp
sahf
movsb
jle
out
pop
sub
filds
cmpl
and
in
add
cs
hlt
or
xor
jg
sub
mov
or
pop
in
fldl
mov
adc
cwtl
add
call
cltd
jae
pusha
ljmp
in
mulb
shlb
cmp
push
rcll
pop
inc
loop
out
xchg
movsl
jecxz
add
shrd
push
mov
lret
arpl
push
hlt
sbb
add
cmp
stc
xchg
add
fimull
mov
sub
das
lret
test
aam
push
sbb
in
aam
or
jg
push
ret
lret
mov
xlat
fistpll
dec
inc
add
adc
or
data16
notb
sar
pop
and
add
dec
xchg
fldl
call
pop
mov
add
adc
adcb
fildll
clc
mov
xorb
call
fbld
push
lret
test
clc
aas
push
insl
subb
orl
sbb
ja
mov
adc
sbb
lds
cmp
xor
cmp
mov
fstpl
outsl
test
push
mov
sbb
inc
orb
fistpll
js
or
sbb
repnz
int
lcall
aaa
push
or
pop
sub
sub
mov
and
cld
add
sbb
pop
xlat
imul
ja
scas
rclb
xchg
aam
push
or
mov
sub
adc
push
sub
and
andb
test
ret
bnd
iret
xchg
sub
adc
add
jb
aas
orl
mov
fstp
lea
addb
xchg
les
mov
push
add
dec
xor
add
or
and
pop
cmp
adc
cwtl
inc
add
ret
or
scas
stos
rcr
pop
jp
in
mov
add
std
mov
mov
push
cmp
sbb
inc
loop
mov
push
fdivrl
ret
lcall
xorb
add
xchg
add
scas
mov
and
add
jp
adc
out
xor
jp
arpl
and
mov
pop
movsb
or
cli
in
test
test
rolw
sub
addl
out
dec
adc
add
adc
sbb
push
nop
js
or
mov
pop
jbe
pop
inc
movsb
xchg
xchg
movsl
rol
jo
orb
nop
iret
sbb
rcrb
loop
or
aas
xchg
add
ds
mov
mov
add
cs
imul
xchg
aam
dec
rcll
popf
mov
mov
push
adcb
add
dec
jne
or
mov
ret
fsubl
xorl
pop
test
in
in
pop
ret
add
aam
add
add
pop
mov
pusha
mov
shlb
adc
push
or
icebp
xchg
adc
call
xchg
inc
ss
pop
movsl
adc
aam
sbb
and
sahf
mov
lds
add
add
xor
mov
bound
mov
into
dec
enter
call
subl
ret
adc
mov
adc
and
rcll
mov
pop
lahf
movsb
sbb
and
xchg
pop
rorb
push
adc
loopne
add
push
aam
addb
xor
add
nop
jp
gs
nop
orb
xor
mov
cmp
test
sarb
push
aaa
test
add
and
enter
outsl
adc
mov
and
push
add
push
sub
inc
rcll
rolb
adc
adc
mov
aas
inc
add
mov
ljmp
add
flds
pop
add
pop
sahf
lods
inc
ret
fucomip
inc
push
or
add
pop
aad
fistpl
xor
add
loopne
inc
or
lea
test
jl
ljmp
andl
sbb
fcmovu
bound
inc
adc
add
pusha
sbb
xor
inc
sub
fildl
sti
pop
test
mov
xorb
rolb
shl
andl
mov
nop
or
push
scas
imul
inc
push
cli
inc
push
mov
push
fs
clc
sbb
lock
sub
ljmp
push
add
xor
add
adc
add
stos
out
aam
dec
jp
sub
or
mov
pusha
insl
adc
push
mov
and
push
cwtl
mov
into
pop
inc
jg
stos
test
cmp
mov
pusha
flds
cwtl
jge
rcll
xchg
loopne
pop
les
inc
out
mov
dec
andb
adc
pop
cmpsb
jg
andl
ret
pop
xlat
adc
xchg
flds
cltd
ficomps
xchg
rorb
mov
sbb
inc
jg
ffree
or
sbb
jp
sub
and
push
lret
mov
push
xor
out
and
mov
out
push
roll
shll
xchg
je
insl
dec
dec
in
xor
and
mov
outsb
cs
loope
and
mov
int
adc
data16
or
xchg
add
push
aad
mov
jnp
push
jbe
jg
cmc
cmc
test
in
xchg
add
or
cmc
in
cmp
mov
call
out
loopne
fiadds
mov
outsl
jg
xor
into
leave
mov
pop
rolb
add
adc
pop
popa
xchg
fwait
mov
lcall
xor
adc
and
ss
or
mov
sarl
stc
xorb
call
fs
mov
in
jno
add
fiadds
fwait
and
sub
cmp
rcrl
adc
add
in
sbb
sbbb
xchg
cli
inc
sbb
mov
or
dec
or
push
mulb
fldcw
outsb
cld
cs
roll
push
xchg
mov
sbb
and
insb
fisttpll
mov
loope
stc
mov
movsb
adcl
es
jmp
dec
pop
adc
push
lods
lds
mov
mov
push
and
inc
mov
inc
xorb
lds
ss
pusha
sub
leave
pop
push
jmp
in
xor
push
inc
fldl
cmp
out
jg
and
or
mov
repz
jo
loopne
outsb
fistl
std
aaa
enter
and
add
loope
jle
and
inc
sar
sub
add
sub
test
mov
mov
add
or
pusha
rcrl
add
sbb
out
xchg
daa
mov
das
ficomps
push
add
sub
in
cs
lds
aad
jo
scas
add
movsl
fistpl
xchg
cmc
pop
pop
test
loopne
cmp
into
pop
push
movsl
rcrl
std
ljmp
fs
mov
add
aad
outsl
icebp
gs
and
mov
push
psrad
and
push
cmc
pusha
and
shrb
xchg
add
xchg
or
negb
and
pop
nop
add
add
mov
incl
in
rorl
add
and
or
mov
adcb
adc
mov
rcrb
je
orb
stc
nop
or
mov
push
sbb
xchg
call
and
call
mov
inc
adc
cli
pushl
add
add
subb
inc
enter
movsl
fbld
or
add
lcall
sub
mov
sub
adc
sub
ljmp
movsl
xchg
push
lcall
and
xor
fbld
add
adcl
push
movsl
lret
pop
xchg
call
fcoml
ret
leave
aaa
push
xor
pusha
dec
xor
leave
cmp
movzbl
cmp
mov
stc
cmp
mov
xchg
jg
sub
in
adc
cmp
popa
inc
enter
pushf
adc
mov
or
and
mov
adc
sub
fstp
xchg
push
andb
dec
rclb
daa
cmp
add
lock
pop
add
push
fbstp
bound
adc
push
lds
fcomip
jmp
cmp
lret
push
inc
pushf
mov
inc
sbb
daa
mov
push
or
pop
xchg
push
mov
cmc
inc
mov
incl
jo
cmp
daa
cmp
xchg
xchg
rcll
hlt
orb
rcrb
push
add
push
jb
or
pop
sbb
cmp
push
sub
cmpsl
lret
push
adc
mov
and
lock
xchg
lret
fnstsw
add
sub
test
mov
movsb
sub
mov
std
fistpl
mov
xchg
xor
jb
pusha
push
call
push
pop
xchg
lds
adcb
add
loope
cmp
cmpsb
push
pop
cmp
repz
and
add
lods
and
inc
sub
jb
cmpsl
fisubrs
cmp
inc
sub
pop
mov
xchg
pop
xor
sub
cli
add
loopne
cltd
cs
sub
fimuls
add
xlat
add
stc
adc
add
jno
enter
mov
mov
sub
push
add
aam
push
in
fsubr
xchg
out
ljmp
jo
push
loope
jmp
add
rcll
std
inc
add
push
xchg
stos
cld
lock
inc
or
shlb
repnz
add
cmp
clc
scas
clc
add
addb
dec
int
popa
add
insb
cli
fwait
or
les
loopne
cli
and
push
nop
push
sbb
pop
aad
decl
cmp
popa
ds
cmp
ja
das
inc
mov
dec
adc
dec
test
pushl
cmp
sbb
shrl
scas
push
push
scas
loop
xor
pop
mov
push
or
pop
test
xchg
jo
das
push
shll
cmp
mov
rol
stos
outsl
pop
lock
mov
add
adc
push
push
ret
mov
dec
push
rol
fdivl
lds
ficoms
mov
pop
xchg
pop
movsb
adc
mov
dec
fwait
lea
test
movsb
push
jno
mov
pop
cmp
adc
add
xor
or
nop
add
cli
pop
hlt
mov
jge
add
adc
into
lock
fisttps
push
shrb
and
movsb
xacquire
add
mov
and
scas
dec
loope
pop
xchg
loope
cmp
or
inc
add
loope
mov
fiaddl
or
mov
pop
mov
icebp
xchg
dec
xlat
int
ret
adc
xlat
shrl
adc
mov
rorl
cmp
inc
jo
test
mov
add
cmp
pop
cs
stos
mov
mov
adc
add
daa
rolb
dec
jg
mov
inc
jae
orb
or
or
js
pop
cld
mov
push
push
lock
push
aad
pop
sub
outsl
xchg
loop
jae
pop
xchg
mov
sbb
xchg
cmc
sar
or
inc
shl
cmp
call
xchg
xchg
xchg
daa
aam
shll
mov
pop
or
lret
bound
sbb
mov
mov
ljmp
xchg
lcall
cmp
pusha
dec
fsubr
pushl
mov
in
add
add
or
call
or
cs
add
fcmovnu
jle
cmp
or
repnz
jnp
jnp
dec
and
cli
adc
pop
cmp
loopne
mov
jnp
ja
movsl
inc
add
jo,pn
sbb
iret
jecxz
cs
outsl
movb
adc
lret
scas
mov
xchg
or
int
call
fxch
push
xchg
nop
cmp
icebp
mov
test
les
or
jl
loopnew
inc
dec
add
pop
or
sub
fsubl
les
data16
andl
rclb
fnsave
aam
aam
or
or
add
fdivs
bound
add
add
inc
int3
pop
mov
push
mov
sbb
pop
add
sub
sub
inc
mov
push
xor
add
adcb
sbbb
test
cld
fwait
sub
movsl
adc
sbb
cs
adc
call
mov
dec
mov
aad
out
stc
add
clc
mov
mov
dec
mov
int3
adc
out
shrb
dec
test
addl
cmp
and
push
inc
hlt
mov
xchg
ss
push
frstor
fisttpl
hlt
pop
and
push
add
ret
pop
fxtract
inc
call
pop
mov
and
xlat
ljmp
pop
push
mov
jp
add
flds
jmp
xor
add
add
add
roll
mov
movsb
xchg
sbb
add
mov
xchg
jbe
push
enter
rcl
cmpsb
stos
outsl
ret
push
test
cltd
rcll
xlat
pop
xchg
cmc
jle
xchg
push
cmp
cmc
scas
insl
cmc
inc
adc
inc
jo
rcrb
lcall
leave
add
add
add
jp
xchg
lods
outsl
les
sbb
sub
inc
inc
or
incb
or
je
shrb
out
xchg
adc
pop
and
sarb
dec
inc
xchg
mov
loop
fdivrs
xchg
dec
data16
push
inc
cmp
push
je
or
pop
mov
cs
push
add
add
sbb
out
pop
inc
or
cmp
call
aad
jle
mov
roll
jg
inc
addl
add
or
jecxz
adc
inc
loopne
adc
dec
pop
add
pusha
xor
and
cmp
andb
adc
fistps
pop
movsl
int3
push
sbb
adc
and
add
in
cmp
cli
dec
fldt
out
xchg
pop
inc
lods
adc
pop
subb
leave
xchg
jne
jg
mov
test
shrl
add
cltd
cwtl
pop
lods
cli
lcall
xlat
pop
rcll
addl
imul
push
daa
outsl
jg
sbbb
inc
ret
fiaddl
push
sar
aaa
mov
aaa
and
adc
shl
orb
ror
add
add
inc
pop
jp
adc
pop
call
pop
mov
pop
fst
pop
mov
pop
into
jmp
movsb
ficoms
ds
shlb
fiadds
addr16
addr16
adc
cmp
and
fldenv
and
data16
flds
pushl
sub
aaa
mov
add
sar
pop
loope
xor
and
into
shl
push
jb
add
int3
adc
call
xor
fsubrp
mov
test
mov
jl
and
dec
add
pop
mov
lea
pop
add
mov
in
outsl
cmp
sub
aam
dec
or
dec
lcall
sub
push
add
rol
pop
insb
add
std
mov
orb
or
inc
lods
ret
pop
clc
pop
sub
xor
fisubl
fucomip
stos
or
jecxz
adc
lods
jge
xchg
mov
sbb
pop
lock
int
and
xchg
xor
lds
shrl
sbb
and
dec
inc
pop
and
inc
addl
dec
orl
mov
clc
jg
adc
or
mov
add
cwtl
inc
scas
push
das
pushf
enter
xor
movsb
adc
mov
push
lods
sub
mov
nop
loopne
dec
test
pop
cwtl
xchg
mov
or
shr
orb
pop
mov
rolb
mov
mov
jmp
or
pop
dec
out
sub
ljmp
hlt
mov
sub
cmp
cs
fsubs
add
mov
es
out
add
mov
sub
sbb
xor
and
dec
add
rcr
lock
mov
xor
add
popa
cmp
sub
mov
mov
jb
and
xchg
jno
loopne
pop
cld
stos
cld
xchg
sbbb
divb
ficoml
inc
add
push
bound
mov
or
mov
and
inc
push
test
ja
mov
mov
dec
push
adc
pop
cmpsb
add
or
push
nop
sub
ljmp
mov
das
add
cmpsb
mov
adc
or
mov
rolb
addb
sbb
addl
ss
add
push
mov
push
movsb
lods
cld
mov
and
mov
dec
and
movsb
and
sub
jb
pop
loope
push
outsl
fdiv
sbb
cs
call
lods
ljmp
sbbb
dec
and
and
mov
mov
and
push
das
orb
add
mov
add
xor
stc
and
cmp
adcb
push
das
cli
pusha
sub
je
rolb
add
add
pop
push
cmpsb
mov
adc
test
stos
mov
push
sub
or
inc
pop
pusha
test
test
add
loopne
mov
mov
icebp
jo
aad
xor
sub
xor
test
sbbb
and
mov
mov
icebp
movsl
loope
shll
push
andb
clc
fcomps
fwait
dec
jo
mov
lock
icebp
mov
xor
das
clc
pushl
add
xchg
add
xchg
mov
pop
add
fcomip
push
add
push
add
mov
outsl
pushf
lea
mov
inc
pop
mov
mov
pop
push
jae
adcb
outsl
outsl
cmpsb
outsb
call
cmp
ficompl
movsb
xlat
pop
jmp
pushf
sub
inc
inc
inc
push
push
loopne
cmp
jo
sbb
fildll
cli
ja
inc
cmp
js
add
add
mov
and
cs
movsl
lret
mov
adc
scas
mov
adc
fwait
xchg
add
inc
pop
xor
enter
mov
sub
repnz
or
cmp
xor
dec
add
add
movsb
cltd
adc
pop
cmpsb
push
loopne
nop
pop
lds
loopne
pop
or
or
cmp
add
pop
adc
push
shll
lock
int
pushf
int
sbb
inc
mov
clc
into
pop
push
adc
nop
adc
or
or
adc
adc
mov
pop
xchg
inc
or
or
adc
sahf
xchg
cmc
in
mov
mov
push
push
inc
jb
jmp
pop
in
push
mov
mov
xchg
orl
int
adc
add
mov
icebp
cmp
push
std
dec
movl
push
adc
mov
pop
shlb
sbb
leave
pusha
mov
mov
stos
add
clc
fisubs
pop
push
push
and
pop
ds
ficomps
pop
sahf
ror
add
out
adc
push
cmp
ja
inc
int3
inc
in
lock
xchg
mov
cs
scas
js
mov
stos
xor
xchg
frstor
andb
loopne
mov
cmp
adcb
test
mov
xchg
mov
mov
cwtl
cmp
and
inc
pop
fs
add
pusha
sahf
stc
and
sbb
mov
std
cmp
xchg
ljmp
loop
sbb
ret
cmp
mov
mov
mov
push
cmp
in
mov
fiaddl
leave
mov
dec
aas
ljmp
or
cmpsl
int
js
jecxz
std
outsl
push
and
adc
push
push
cld
lahf
movsb
cmpb
lcall
push
fisubrs
div
push
sub
jg
lock
adc
stos
fiadds
adc
vpmovsxwd
incl
push
inc
popa
adc
adc
cmp
es
push
or
inc
xor
jp
or
add
or
or
mov
inc
add
or
cs
push
rcr
push
push
add
movsb
mov
mov
cmpsb
ja
lcall
gs
add
pop
add
test
outsb
jns
jge
mov
inc
xorl
or
mov
cld
icebp
nop
cs
repnz
add
and
mov
and
lock
fs
call
add
pop
pop
pushf
and
push
rolb
cmp
or
mov
jns
loopne
push
addl
add
shlb
xor
dec
loop
cwtl
or
or
push
cld
pop
cs
add
ja
cld
cmp
sarb
sar
push
push
call
cmp
mov
mov
inc
cmp
fiadds
jmp
cmp
fistl
movsb
add
pusha
movsb
sbb
inc
or
xchg
push
in
xor
fnstsw
repz
mov
shrb
lcall
jge
cmpsl
negb
int3
mov
movb
add
xchg
sub
push
push
jle
xchg
cmp
cld
jg
outsb
fidivrs
push
adc
ficoms
mov
push
lcall
and
xchg
iret
jecxz
add
push
or
inc
xor
pushl
mov
pop
mov
add
test
jne
mov
and
sbbb
add
add
inc
add
nop
push
pop
pop
imul
lock
incl
push
pushf
and
loopne,pn
jecxz
xor
cmp
rclb
mov
pop
outsl
mov
add
push
mov
loopne
xchg
fiadds
pop
or
dec
mov
add
add
rcr
push
hlt
cmp
xor
test
inc
mov
rorl
cmp
xor
xor
pusha
lods
fstpl
dec
or
mov
pop
lcall
and
jg
mov
sarl
and
and
cld
movsb
loopne
mov
pop
sub
mov
push
fcomps
fs
andl
andl
cmp
lock
jo
sub
push
mov
sbb
fmuls
lods
mov
add
test
lods
loopne
jo
imul
mov
sbb
lock
fldenv
mov
push
nop
mov
clc
sbb
adc
pusha
inc
nop
or
sbb
mov
push
adc
cli
xor
lock
mov
test
mov
imul
sahf
cmp
add
dec
pop
and
mov
stos
xchg
push
es
pusha
inc
js
pop
or
sbb
test
insl
add
mov
xor
movsb
xchg
and
xchg
mov
sarb
filds
xor
sbb
mov
nop
loopne
stos
mov
add
mov
or
add
ret
or
cmp
dec
shrb
call
jne
roll
adc
mov
jnp
adc
fcom
pushf
push
push
and
decb
in
push
and
movsb
addb
pop
xchg
xor
testb
cmp
enter
pop
push
add
jp
daa
and
push
cld
ljmp
mov
cmp
andb
es
pop
cmp
or
cmc
ret
lds
aaa
lock
rolb
push
and
xor
xor
add
jg
mov
sbb
jmp
mov
retw
inc
ret
add
ret
les
out
xchg
or
inc
add
call
lock
mov
xchg
dec
scas
adc
std
push
cmc
filds
fs
push
and
xchg
aad
lcall
add
adc
imul
dec
cmp
popf
push
jbe
icebp
jbe
sarb
mov
add
in
int3
mov
ds
add
push
loopne
mov
xor
mov
jmp
push
mov
or
cmp
inc
add
jecxz
ljmp
mov
sbb
add
cli
jl
jp
jne
ffree
add
jbe
cmp
jl,pt
or
jle
sbbb
lods
enter
xor
xchg
mov
pop
mov
lret
andl
jno
icebp
jg
loope
or
mov
mov
add
lea
in
push
les
dec
cmp
sub
pop
and
mov
jbe
in
jo
andb
cmp
jb
add
and
insb
jb
add
adc
mov
cmc
pop
bound
shlb
add
or
push
aaa
adc
sbb
cwtl
or
sbb
sti
add
cli
adc
out
mov
movb
mov
mov
fnstcw
or
xor
test
xor
rolb
mov
pop
and
lock
in
loopne
movsl
fldcw
sub
sub
xor
fstp
add
inc
mov
dec
add
fadds
std
testb
push
pop
pop
lahf
aad
pushf
nop
inc
push
add
or
adc
adc
mov
fbstp
fldl
and
add
outsl
shlb
cmp
movsl
adc
mov
aad
cmc
or
movsl
movb
jnp
mov
jo
inc
cmpb
fldenv
pop
xchg
rcrl
adcb
add
cmp
or
fldlg2
pop
out
pusha
loopne
xchg
cmc
data16
cmp
adc
inc
jg
lock
subb
inc
sbb
fucomp
rolb
xchg
rcll
sub
add
mov
shrl
faddp
add
sbb
adc
hlt
ret
andl
and
into
lods
fldcw
test
aad
sub
addb
ret
and
fstpl
ficoms
add
test
adc
movsb
rorb
add
jecxz
cmp
int3
lret
push
jg
in
loope
add
xchg
mov
scas
jb
aaa
adcb
mov
rolb
sub
es
sbb
hlt
push
rorb
mov
or
rolb
push
sub
sbb
rolb
ljmp
or
inc
adcb
sbbl
icebp
pop
pop
pop
push
cld
push
mov
cmp
add
pop
dec
daa
popa
pop
and
xor
mov
call
inc
add
inc
add
mov
mov
pop
fistpl
xor
or
or
cmpsb
fsts
test
cmp
pop
sar
out
nop
fmuls
imulb
pop
xchg
sub
das
inc
addb
adc
sbbl
roll
pop
aad
add
and
repz
push
add
jl
insl
jnp
daa
adc
sbb
or
pop
xchg
or
in
sbb
mov
pop
add
cmp
das
lods
subb
stc
pop
fs
loopne
stos
push
dec
pop
cmpsb
mov
lods
pop
and
lea
cmp
cmp
loope
or
or
out
rclb
push
jecxz
push
adc
ret
sub
sbb
or
mov
ss
xchg
in
jne
pushf
xor
push
adc
clc
cmp
aad
shll
mov
jbe
mov
or
nop
es
orl
in
loopne
push
push
pop
lods
add
pop
mov
add
mov
popa
inc
pop
push
rorl
scas
sar
adc
movsb
loopne
aad
add
push
loopne
or
add
lods
movsb
add
int3
push
stos
into
test
das
fisttpl
andb
rcrb
pop
inc
and
cli
ljmp
rclb
dec
or
dec
jnp
mov
xchg
xlat
roll
cmpsb
xchg
stos
cmp
adc
js
push
sbb
jle
sbb
pusha
andl
jg
mov
add
mov
lret
daa
add
cli
or
inc
jg
push
sub
mov
pop
nop
xlat
pusha
add
xchg
sub
pushf
sub
cmp
ljmp
mov
fidivl
mov
movsl
or
out
imul
insl
mov
pushf
sbb
mov
aam
and
pop
cmp
pop
mov
jo
fists
mov
inc
add
fildll
cli
leave
pop
cmpsb
jmp
shrl
lock
dec
adc
nop
ds
in
mov
incl
mov
inc
add
xchg
cmp
xchg
ljmp
push
push
movl
mov
fsubl
mov
outsl
pop
loopne
sbb
addb
xchg
jmp
cmp
repnz
addl
and
enter
and
inc
les
ja
add
jp
ret
fnstsw
adc
and
lret
or
pop
popa
insb
jbe
mov
ret
sahf
mov
jno
inc
push
cwtl
rcrb
outsb
mov
loop
add
cli
outsb
mov
mov
andb
cwtl
jl
inc
aaa
loop
add
mov
dec
add
loope
rolb
mov
call
pop
push
jmp
fs
xchg
cmp
decl
push
push
xor
test
cwtl
push
sbb
das
nop
lret
add
shrl
sub
pop
mov
out
fisubrl
sarb
inc
in
loopne
nop
mov
rolb
xchg
push
out
out
xchg
repnz
lret
ret
fisubs
sub
in
out
js
adc
lods
push
cmpb
pop
data16
cmc
sbb
cmp
mov
insl
ljmp
add
loopne
cld
mov
pop
mov
add
adcb
add
inc
cmp
cld
fdivrl
mov
filds
in
push
inc
mov
push
rolb
test
call
sbb
pusha
xor
and
pop
jle
pop
adc
push
rorb
add
cmp
pusha
add
pop
loopne
fucomp
push
adc
in
movsb
and
xor
pop
aad
push
inc
aaa
push
add
in
or
and
fcmove
jno
pop
int
xchg
sarb
push
jge
add
push
push
cmpsb
andb
cmpsb
add
imul
fwait
cmp
movsb
sarl
and
mov
dec
ljmp
imul
adc
jl
xor
clc
call
aad
notl
in
and
push
aaa
sbb
add
sbb
or
adc
lock
ljmp
mov
cld
push
or
pushl
xor
jo
lock
xor
inc
and
hlt
les
mov
andb
mov
adc
rolb
sub
and
pop
mov
fdivrs
inc
ds
rcrb
pusha
xchg
test
add
adc
stos
mov
lock
mov
xchg
es
push
jo
sarl
jge
pop
dec
adc
icebp
push
push
nop
insb
inc
mov
adc
fbstp
shlb
roll
mov
sbb
inc
cs
out
shl
or
loop
cli
mov
mov
mov
push
add
xchg
nop
pop
and
outsl
mov
add
cmp
inc
test
and
sbbl
or
test
decl
mov
and
add
and
push
das
inc
cmc
jg
cwtl
repz
aad
push
push
and
inc
pop
adc
stos
push
test
fstl
fldl
and
aas
xchg
pop
mov
add
popf
jno
daa
mov
or
xor
or
das
leave
jo
lock
add
shlb
push
data16
add
clc
cmp
jmp
and
mov
mov
push
add
in
lock
in
add
movsl
movsl
fstl
movsl
movsb
or
fisubs
xor
sbb
bound
adc
add
aaa
sbb
rcrb
shlb
jg
mov
push
cmp
fisubrs
add
pop
mov
leave
cltd
fisubrs
push
cltd
cld
incl
movsb
pusha
pushf
sub
add
rclb
shll
or
out
pop
jl
mov
xor
dec
or
cmp
inc
mov
daa
xchg
sbb
clc
mov
add
cmp
or
inc
push
jg
lock
mov
jge
cmp
cmp
dec
clc
inc
mov
stos
cs
add
lock
ljmp
lock
add
cmp
loop
lcall
jnp
add
addb
xor
xor
inc
xor
sbb
and
pusha
pushf
add
shlb
jg
jmp
pop
pop
cs
std
and
xor
xor
jo
adc
add
mov
cs
xor
inc
mov
pop
hlt
push
lods
jl
or
jo
lock
jmp
sbb
inc
mov
push
inc
jns
ds
in
les
sub
push
push
lods
jns
fimuls
push
shll
or
cmp
mov
in
mov
mov
movsl
xchg
sub
scas
push
or
nop
or
inc
or
mov
or
rclb
jo
repnz
popa
mov
add
or
xchg
fld1
aam
mov
cmp
add
xchg
pop
data16
cmp
fadds
mov
es
lds
leave
xchg
xlat
inc
jo
fists
incb
cmpsb
ffreep
pop
icebp
nop
cmpsb
xchg
dec
loope
jbe
das
clc
add
sbb
cmp
add
ret
pop
lods
add
outsl
push
push
mov
cmp
lea
jo
es
mov
cmp
cld
push
mov
xchg
xchg
add
fwait
xchg
stc
cmpsl
xchg
fiadds
vcvtps2dq
xor
divl
pop
rcr
scas
push
add
add
movsb
rclb
xchg
sub
mov
shl
fistl
lods
clc
mov
add
mov
aam
fmuls
fdivs
xor
mov
add
jg
or
push
xchg
add
roll
nop
pop
ljmp
rorb
mov
orb
je
sub
mov
les
and
mov
cmp
ljmp
mov
outsl
clc
mov
nop
lock
shlb
sub
sub
shlb
jge
pop
loopne
xchg
xor
pop
sbb
loope
pop
je
fs
push
mov
or
push
ja
pop
movsb
imul
inc
sub
push
daa
imul
and
or
rorb
stos
push
icebp
dec
mov
imul
ljmp
adc
mov
push
insb
mov
or
adc
dec
mov
shlb
ficoml
xchg
cli
xor
in
fwait
or
cmp
push
lret
scas
clc
aas
inc
and
add
mov
pusha
pop
nop
push
fcoms
add
add
xchg
scas
clc
adc
adc
shll
add
pusha
xchg
add
mov
test
sbb
in
imull
add
cmpsb
das
xchg
add
lock
pusha
dec
push
pop
jb
cmp
adc
push
and
pusha
push
cld
cmp
test
add
xchg
mov
scas
add
loope
ficoms
mov
sub
call
leave
mov
popf
les
mov
xchg
cs
in
sub
cmp
cltd
ljmp
shlb
hlt
adc
push
loopne
adc
sub
cld
or
incb
xor
fstps
sub
ljmp
adc
ljmp
push
pop
aad
pop
fstps
cli
or
pushf
sbb
mov
sub
insl
popa
sub
aas
inc
sbbb
popa
pop
int
lock
imul
bnd
and
pop
sbb
pop
mov
jl
cli
and
mov
sub
push
adc
mov
sbb
or
js
mov
roll
and
incl
sbb
mov
xor
mov
and
adc
xchg
sub
dec
outsl
mov
add
pop
jmp
iret
cs
cs
xchg
mov
pop
inc
aas
popa
push
shl
adc
mov
mov
lock
and
push
mov
int3
int3
xlat
pop
or
fdivs
inc
imul
and
ljmp
add
lods
shll
movsl
or
and
call
mov
mov
adc
sub
pop
push
push
and
lcall
jbe
std
sub
add
movsl
loopne
lods
sbb
push
adc
fstps
ficoml
add
shll
ret
inc
fisubl
and
mov
inc
add
xlat
mov
sbb
mov
rcr
dec
add
and
call
dec
add
jne
xchg
adcb
pop
or
and
fstpl
rcrb
loop
js
es
xchg
aad
push
in
xchg
xor
mov
sbb
or
cs
jg
or
sbb
cvtps2pd
mov
cli
roll
cmp
adc
adcl
sbbl
cmp
into
fdivrs
es
xchg
pop
mov
xor
mov
mov
scas
or
sar
xchg
push
pop
dec
ljmp
sub
sbb
mov
loop
lds
loopne
outsl
sub
cmpl
rolb
shlb
mov
sbb
pop
aad
fistl
inc
insb
add
and
jp
add
lds
and
loope
fadds
cmpsb
xchg
xor
ficoms
sbbb
pop
or
shrb
xchg
flds
or
adc
rcrl
lock
test
jp
or
pushf
push
decb
sbb
stos
xlat
pop
rcll
loopne
decl
add
fiadds
arpl
daa
clc
aaa
mov
cwtl
inc
add
push
sbb
fisubs
es
sbb
cmp
push
adc
cmp
sbb
or
cmpsl
add
add
xchg
mov
pop
or
add
xchg
pop
lods
or
cmpsb
orb
adc
pop
sbb
adc
cmp
addb
jl
fsubrs
imul
aad
mov
sbb
cs
push
jbe
xlat
mov
and
xor
addb
cmpsl
lds
jg
sbb
pop
xor
xchg
inc
adc
rorl
loop
cmp
jbe
rorb
cwtl
sar
mov
mov
rorb
sbb
scas
jmp
add
xor
pop
out
xchg
lret
insl
sub
inc
pusha
mov
stos
inc
cmp
inc
cmpb
sbb
ret
mov
xor
pop
cli
add
pop
rolb
mov
out
aad
shrb
pop
fstpl
pop
jg
sbb
in
fldl
test
sbb
es
or
movsl
xchg
rolb
add
clc
mov
pop
fcompl
push
xchg
addb
cmpsb
orb
cmp
outsb
jg
loope
faddl
rolb
xchg
jb
scas
add
adc
lcall
or
sub
sub
mov
jg
bound
fadds
xchg
cmp
ljmp
push
fiaddl
repnz
mov
and
and
cmpsl
aaa
sar
mov
sbb
sbb
ret
pop
or
cmp
adc
cmp
jecxz
stos
push
lcall
pushf
inc
add
rorb
push
xchg
je
adc
and
std
mov
inc
adc
push
sarl
dec
adc
ds
and
xor
scas
add
mov
jg
test
cmp
inc
sub
mov
fsubs
and
add
popa
add
mov
shl
mov
push
push
xor
pop
mov
add
dec
loop
mov
inc
or
push
sbb
pop
lea
ret
cmp
mov
fisubrs
ss
ret
inc
enter
xchg
push
and
ret
in
mov
leave
fiadds
pop
ds
adc
xchg
andl
or
pop
xchg
pusha
add
inc
mov
push
add
jo
test
loopne
adc
or
and
roll
cwtl
jbe
call
dec
push
pop
cwtl
aad
adcb
fldcw
and
or
jmp
or
or
leave
ret
cmp
jp
ljmp
mov
push
pop
adc
and
and
flds
popa
call
xchg
sbb
lods
push
ficompl
popa
or
pusha
mov
les
mov
mov
cmp
incl
mov
pusha
push
push
xchg
cmp
mov
or
int
pop
hlt
cmp
add
mov
or
aam
popa
or
and
add
jg
lods
adc
out
and
loopne
popf
pusha
pop
or
jecxz
loope
das
xchg
or
or
cmpl
mov
or
stc
dec
lods
in
inc
fistl
call
add
rolb
sbb
add
adc
cli
jmp
leave
and
das
mov
rcrl
out
adcb
push
mov
push
or
add
popf
les
dec
mov
adc
addb
test
add
mov
ljmp
push
xor
icebp
cmp
rolb
and
adc
or
ja
test
pop
scas
cmp
or
jno
push
pusha
add
mov
movsl
jmp
sub
cmpsl
clc
add
aad
call
clc
adc
roll
sbb
imul
ret
mov
cmpsb
loope
jl
mov
and
stos
push
xchg
icebp
push
add
inc
lcall
jg
movsb
push
cmp
movsb
pop
scas
fldcw
inc
mov
aad
inc
cmp
mov
scas
mov
stos
mov
and
roll
pop
rorl
ljmp
call
roll
adc
cltd
fnsave
sub
pop
xchg
fldl
adc
push
and
and
sarb
mov
pop
rclb
daa
jmp
add
fnstsw
aas
das
pop
inc
insb
fwait
mov
ljmp
push
push
jb
dec
mov
jmp
lds
movsb
mov
flds
orb
adc
mov
pop
jmp
xchg
cmp
or
pop
mov
loope
add
cmp
loopne
adc
jae
ss
fldcw
decl
bound
cs
aaa
loopne
pop
sbbb
mov
jg
incl
mov
push
dec
cltd
cli
aam
or
xchg
mov
ja
jno
add
dec
out
andb
popf
mov
pop
loopne
jb
mov
and
fbstp
shlb
mov
loope
xchg
aas
les
sub
mov
insb
jo
fld
insb
jl
or
inc
pop
int3
xchg
incl
cmpsb
add
pop
lods
sub
int3
cli
rol
aaa
jo
ret
cmp
lock
cmpsb
in
pushl
pop
push
stos
imul
push
cld
std
add
jo
addb
cs
inc
ret
pop
adc
loopne
ficoms
aaa
es
sbb
ss
mov
pusha
les
int3
ret
out
cwtl
cmpsl
ret
out
and
push
sbb
clc
or
das
aam
aas
pop
loopne
shrb
dec
jp
pusha
pusha
outsl
subb
xor
rclb
xchg
xchg
incl
cld
adc
pop
lock
xor
pusha
push
sub
pop
adc
pusha
push
movsb
lock
ljmp
mov
test
inc
cli
aaa
fadds
xorl
dec
popa
push
nop
pop
pushf
sub
pop
add
decl
and
add
adc
test
push
add
sbb
mov
inc
or
xor
incb
lock
jno
nop
js
add
loopne
cmp
out
xlat
adc
add
mov
sub
movsb
and
call
push
rolb
mov
dec
test
or
lret
sub
dec
mov
movsb
add
pop
or
scas
cli
ljmp
mov
mov
or
add
das
add
mov
adc
inc
cld
and
je
push
insb
test
pop
push
adc
mov
movsl
ret
push
add
movsb
aam
das
adc
adc
or
ja
int
lock
out
sti
movsb
fists
sar
aas
xchg
push
cmp
jmp
xchg
out
push
ret
fists
stc
push
sub
or
adc
movsb
fadds
cli
add
mov
out
jo
cmp
in
flds
and
fbld
add
cmp
test
mov
mov
jmp
pop
pop
mov
jo
xor
xchg
cltd
popf
xchg
imul
xchg
sbb
add
mov
pushl
push
add
pushf
adc
addr16
pushf
add
mov
fldcw
dec
leave
jno
lret
xor
inc
mov
sarb
or
push
inc
xor
or
pushf
shrb
jp
mov
rorb
pop
cltd
leave
fbstp
cld
cmp
fwait
cmpb
lea
add
inc
shrl
xor
add
mov
xorb
shrl
daa
jb
stos
ljmp
nop
xchg
jno
leave
popa
sarb
xlat
sbb
jb
xor
inc
or
cmp
pop
movsl
mov
and
stos
push
test
push
mov
rcrb
mov
or
cld
pop
pop
das
dec
cmp
int
fiadds
scas
and
hlt
xor
fsub
nop
movsb
mov
incl
rclb
popf
cmc
rorl
cmp
add
jmp
sub
pusha
sub
mov
pop
cwtl
out
clc
cmp
jo
adc
inc
nop
xor
sbb
jl
jb
pop
dec
inc
cmc
sub
mov
inc
push
add
ret
and
jl
in
fidivs
pushl
jo
add
adc
add
or
xor
pop
adcl
clc
jg
sub
xor
dec
movsb
lods
addb
add
adc
ljmp
cmp
stos
mov
movsl
mov
and
push
popf
xchg
mov
es
nop
popa
xchg
pop
leave
inc
push
popf
loop
aad
lcall
andl
idivl
pop
icebp
das
xor
adc
dec
int
in
inc
cs
pop
and
or
scas
or
push
inc
add
rcrb
lds
ljmp
push
cmc
mov
push
jbe
add
pop
loope
or
or
jo
in
nop
xor
mov
fcmovnb
aaa
jae
cmp
cltd
fmull
add
pop
push
sar
roll
mov
push
cmp
and
lock
and
mov
add
lock
add
into
mov
aad
or
jbe
shll
push
or
clc
icebp
add
mov
xchg
popf
mov
dec
rcrb
jg
stos
mov
xchg
xchg
xchg
fwait
cmp
loope
shrb
test
push
rcl
mov
mov
inc
inc
adc
xor
in
rol
push
or
and
pop
sub
mov
push
add
xor
cmp
push
mov
adcl
pusha
pop
fsubp
dec
lcall
rclb
addb
jmp
sbb
sub
inc
inc
cli
push
orb
lea
mov
add
adc
sbb
push
push
pop
sbb
loop
adc
vfrczps
ljmp
xor
data16
and
decl
in
dec
mov
orl
jo
add
mov
fisubs
movl
shrb
or
outsb
xchg
or
add
sub
test
push
sarb
adcl
add
fwait
mov
ss
and
pusha
mov
cld
lcall
add
test
xchg
pop
iret
loop
dec
ja
adc
push
xchg
add
add
inc
stc
pop
xchg
dec
aad
add
xchg
jno
lret
fs
xor
inc
mov
nop
and
scas
pop
jno
rorb
nop
adc
es
or
add
add
pop
push
mov
cmp
lock
mov
push
jmp
enter
jo
cmp
dec
nop
dec
pop
xchg
rcrl
add
pop
movsb
sbb
add
push
orb
cli
sub
fisubrs
hlt
pusha
aad
lods
sub
cltd
push
movsb
scas
leave
mov
outsl
fildl
and
outsl
cld
sbbb
inc
add
add
jecxz
or
or
loopne
pusha
pop
js
cmpl
movsl
scas
push
adc
add
xor
outsl
and
sarb
mov
flds
cmpb
mov
cmp
push
movsb
fsubrl
push
jo
or
push
push
sbb
mov
and
lods
mov
sub
jo
xchg
add
aaa
jnp
pop
xchg
push
dec
add
mov
inc
pop
les
xchg
push
mov
pop
scas
popf
mov
andl
xor
rcrb
fwait
dec
leave
xchg
scas
addl
movsl
sarb
shl
cs
lods
sbb
call
rolb
mov
cmp
mov
test
pop
jl
sub
ljmp
cmp
test
dec
jbe
cmp
push
add
clc
mov
adc
add
mov
jp
test
sbb
sti
add
loopne
cmp
jne
stc
push
mov
icebp
jp
sbb
into
jb
xor
lods
sub
aad
movsb
stos
cs
aas
sbb
push
mov
movsb
mov
jecxz
fcos
ficompl
adc
aad
add
cmp
pop
subl
push
sbb
sbb
fcmovne
orl
push
or
add
mov
pusha
test
xor
pop
shlb
xchg
cmp
ret
inc
in
es
or
sbb
mov
jle
push
call
sub
and
std
cmp
orb
cmp
roll
or
fwait
push
cmpb
pop
xchg
adc
and
movsl
std
aaa
mov
out
call
addr16
movsl
sbb
gs
jmp
cli
fistl
pop
jb
mov
push
pop
jmp
movsb
adc
sahf
fadds
sbb
movsb
cmp
cmpb
in
jb
or
stos
add
and
mov
test
addr16
hlt
mov
lock
mov
insl
inc
outsl
xchg
cmp
aam
fisttpll
pusha
subb
adc
into
and
mov
bound
inc
mov
xchg
xor
mov
enter
es
mov
adc
jbe
call
jecxz
stos
out
adc
xchg
pop
push
sub
mov
add
movsb
ret
sarb
mov
or
xchg
sbb
sbb
mov
jmp
pop
sbb
cmp
shlb
pop
or
pop
and
sub
add
and
call
loopne
cwtl
ret
xchg
fiadds
pop
pop
mov
cmp
outsb
cmp
xlat
fisubrl
cmp
mov
dec
add
xchg
mov
aad
jle
inc
mov
push
push
lods
xchg
sbb
cs
pushf
aad
mov
or
sub
mov
lds
sub
inc
pop
ja
mov
outsl
out
fs
sbb
push
push
lods
push
xor
cmp
add
jmp
rorb
or
arpl
mov
push
shlb
mov
shr
add
add
add
pop
lahf
pop
inc
jl
pop
push
sub
movsb
aam
add
repnz
add
sub
cmp
push
call
fildl
and
add
cwtl
daa
xchg
aam
lods
add
shll
shll
xlat
mov
fisubs
or
add
or
pusha
jmp
lock
push
cs
or
pop
ss
add
mov
pop
add
in
pop
push
adc
pusha
and
and
xorb
or
aas
push
push
pop
aad
dec
cli
shrl
cmpsb
lds
cmp
push
sbb
idivl
aam
adc
cltd
cs
pop
or
pusha
jle
nop
pop
aad
sbb
push
sarb
sub
inc
pop
push
mov
cltd
orl
mov
test
in
sbb
jecxz
xor
mov
cmp
inc
loope
lods
sbb
xor
jle
push
aad
sub
dec
mov
fcoms
adc
xor
fmul
sub
xchg
mov
movsl
clc
or
push
movsb
repnz
xchg
fstl
xchg
test
cmp
mov
cmp
pop
sbb
jmp
push
or
jno
outsl
cli
mov
frstor
adc
add
pop
cmp
push
insl
sbb
shlb
push
xchg
jo
push
mov
add
cmp
push
mov
lea
adc
hlt
jg
aaa
mov
mov
cwtl
lret
repnz
nop
mov
sub
clc
fnstsw
pop
cmpl
and
pop
lock
faddl
mov
adc
les
and
test
cmpsb
push
es
sub
xchg
add
addl
xchg
jge
ss
xor
outsb
popa
add
ja
mov
add
add
into
push
jmp
fcoms
std
push
loopne
and
daa
and
and
inc
or
cwtl
in
mov
cmp
call
int3
mov
add
and
add
pop
sar
movsl
testl
loopne
mov
inc
xchg
in
dec
mov
stos
mov
imul
cmp
add
mov
pop
adc
xor
xchg
adc
int3
push
mov
rcl
movsb
and
lock
adc
insb
fdivrs
xchg
or
or
pop
mov
fs
pop
xchg
push
xor
mov
imul
xchg
shlb
pop
mov
aad
shll
pop
test
shll
ja
imulb
shll
call
or
pop
addb
outsb
inc
or
les
pop
xlat
jns
cwtl
jns
call
push
mov
pusha
sub
cli
sub
decl
cmpsl
fldl
and
push
incl
jmp
sub
jo
xor
stc
add
xor
mov
pop
xlat
rorl
mov
clc
or
loop
mov
pop
cmp
mov
pushl
or
cmp
int3
or
mov
and
mov
push
adc
ljmp
incl
add
and
dec
sub
pop
sbb
xor
shrb
xchg
or
push
cmp
push
sahf
movsb
ljmp
jmp
movsl
sti
jbe
adc
stos
pusha
pop
lock
add
ljmp
xchg
ss
push
in
les
mov
push
cmp
mov
pop
movsl
and
mov
in
and
mov
mov
shrb
loopne
loope
mov
pusha
pop
test
ljmp
add
cmp
rolb
out
pop
movsb
inc
outsb
and
xor
pop
add
add
lea
xor
xchg
add
sar
loope
push
mov
jo
sub
adc
dec
dec
sbb
sbb
popa
mov
jmp
adc
cmp
adc
jb
xor
mov
xchg
fsubrl
neg
jo
or
adc
mov
sub
gs
movsb
add
popa
ds
or
xor
fwait
pop
push
cwtl
push
push
inc
sub
add
imul
mov
or
add
mov
add
sub
cmp
adc
or
push
nop
mov
call
rorb
inc
enter
jecxz
les
test
xchg
xor
outsb
xlat
or
dec
or
mov
adc
shlb
das
inc
repz
sub
push
cld
loopne
mov
mov
mov
les
ljmp
popa
adc
sub
insb
rolb
mov
jo
mov
or
fisttpll
lock
fidivs
xchg
aaa
dec
push
cld
les
or
push
sbb
pop
fsubr
pop
insb
push
dec
or
mov
or
cmp
or
xorl
add
sbb
jmp
dec
sub
pmulhw
movsb
mov
and
add
out
adc
xchg
add
movsb
addl
addl
mov
or
dec
add
sub
out
nop
mov
push
or
aam
xchg
pop
cmc
xchg
push
push
cmp
jge
or
push
inc
dec
pusha
or
cld
out
xchg
jo
in
fmull
cmp
mov
out
test
mov
pop
aad
shll
ljmp
movsl
mov
push
sbbb
andb
mov
rorb
pop
mov
ljmp
cmpsb
and
add
movsl
xchg
mov
dec
cld
call
mov
loop
pusha
and
orb
call
aam
xchg
enter
cmp
rclb
xchg
jmp
cmp
inc
sbb
mov
orl
or
and
gs
push
sub
call
cmp
and
push
les
or
or
jb
dec
xchg
fstp
outsl
outsl
pushl
adc
shll
lds
inc
or
mov
addb
push
ret
int3
in
shlb
cld
jge
rorb
jb
adc
das
sbb
pop
lock
inc
movsl
add
dec
mov
ljmp
incl
inc
add
adc
and
movsl
ficoml
aam
ss
fiadds
xlat
pop
xchg
int3
mov
push
hlt
out
or
adc
fdivr
scas
lods
gs
and
adc
add
sbb
add
sbb
pushl
repnz
ja
xchg
rcrl
or
jecxz
sbbb
adc
cwtl
mov
or
bound
push
add
mov
stos
sub
pushl
ss
xchg
add
jo
push
lods
cmp
je
cmp
out
fldt
out
mov
stos
sbb
sbb
idiv
js
adc
adc
add
xor
sub
pop
inc
jmp
xor
icebp
cmpsb
sbb
test
push
aam
negl
inc
dec
lock
loope
decl
and
cmp
scas
insl
test
sbb
add
fcmovnu
push
fiadds
jbe
or
mov
je
push
cmp
loopne
or
xchg
inc
add
mov
mov
xor
call
or
xor
push
and
xor
js
mov
push
rolb
add
rcll
lds
push
ret
sub
xor
filds
pushf
in
inc
adc
mov
xchg
or
jecxz
cltd
js
int
push
sbb
add
cmc
xchg
cmpsl
push
movsb
fldt
jo
std
jno
and
idivb
pop
pushf
cmp
adc
shrb
aam
mov
adc
pop
xchg
out
cli
pop
ljmp
cmp
hlt
in
mov
faddl
lcall
adc
pop
loopne
dec
rolb
rclb
fistps
push
call
mov
fsts
dec
sar
aad
sar
inc
add
sbb
bound
push
fsubs
test
sub
mov
jg
cmpsb
cmp
sbb
adc
pop
icebp
das
xorb
inc
mov
adc
fists
adcl
lock
shlb
mov
add
add
and
andl
xchg
leave
test
xor
fistps
add
fimuls
xchg
int3
add
negb
clc
ljmp
test
push
push
orl
add
int
mov
xor
mov
data16
fbld
add
sbb
cmc
pop
push
xchg
stc
mov
into
add
sub
jg
xchg
mov
push
cmpsl
repz
cli
decl
inc
std
and
sbb
orb
lock
fstpl
sub
cmp
inc
clc
call
xchg
aad
inc
mov
sbbb
push
xor
incb
cltd
mov
rclb
xchg
mov
lock
lcall
loope
sar
mov
arpl
es
adcb
and
add
mov
cli
pushl
loope
cmp
shl
adc
mov
and
cli
test
adcl
or
add
mov
sbbl
sbb
nop
shll
mov
lret
cli
or
mov
cmp
out
sub
jno
shr
test
pop
adc
sbb
loopne
ret
jo
shr
bound
les
jno
addl
fildll
pop
loope
cli
jg
hlt
hlt
test
lods
push
mov
push
fmuls
adcb
std
adc
xor
inc
xchg
pop
movsl
fs
imul
rorb
addb
outsb
outsb
aaa
mov
push
inc
push
cld
push
in
mov
aaa
add
cmp
inc
adc
sbbl
inc
xchg
scas
push
scas
xor
lcall
sarb
test
movsl
adc
add
lods
xchg
mov
call
jo
add
cmp
cmp
cmp
inc
incl
add
add
repnz
call
dec
nop
adc
adcb
ret
fisubrs
test
mov
mov
cltd
test
mov
and
sbb
pop
sarb
ljmp
cltd
movsl
mov
fdivrl
jnp
adc
inc
cmp
push
lods
loopne,pn
jne
adc
cmp
gs
gs
subl
inc
mov
stos
lock
mov
sbb
add
data16
jmp
shrl
rclb
shrb
adc
sub
shrb
cltd
cmp
adc
lock
jl
dec
loopne
insb
add
sbb
mov
push
mov
cmc
inc
push
jbe
xorl
adc
dec
push
jmp
inc
pop
loop
sbb
pop
or
or
add
pop
jnp
adc
mov
stc
add
pusha
or
push
inc
xchg
fwait
pop
pop
mov
popf
cmc
nop
or
mov
add
call
lcall
out
adcb
jl
in
mov
fiaddl
cmp
push
xorl
jle
adc
adc
sbbb
jge
testl
nop
sarb
mov
mov
jmp
or
mov
inc
call
sub
hlt
movsl
adc
sbb
cmpb
or
les
sbb
jg
rcrb
push
cmpb
adcl
add
jb
rcll
std
mov
cmc
push
add
pop
aad
and
sbb
push
or
pop
aam
dec
lret
jmp
add
adc
pop
rolb
std
pop
popf
and
aad
and
test
movsl
sahf
dec
sahf
or
dec
inc
pop
pop
and
sahf
les
and
inc
cld
testl
add
ljmp
xchg
cmpsb
stc
cmp
addl
pop
xchg
stc
insb
pop
adc
pop
push
addb
rol
rcrb
add
test
aad
mov
add
jbe
clc
je
push
subb
sub
cmpsl
pop
and
mov
loope
push
mov
mov
adc
sub
add
inc
mov
insb
jo
mov
add
adcb
mov
add
imul
push
pusha
jb
adc
inc
pop
pop
push
ret
test
push
aam
push
pop
xchg
subb
hlt
adc
push
or
cs
aaa
mov
sbbb
xor
movsb
dec
cmp
adc
insl
inc
dec
inc
inc
dec
mov
or
sub
push
fs
mov
mov
add
dec
or
sahf
xchg
push
or
sub
pop
add
mov
jmp
mov
pop
xchg
fst
cmp
inc
sbb
xor
out
loopne
mov
outsl
test
in
mov
les
push
jo
fdivs
xchg
nop
xlat
pusha
cmpsl
out
les
xchg
push
ffree
add
adc
sbb
xchg
mov
ss
pop
lock
sub
fnstsw
mov
mov
das
lret
aad
test
frstor
mov
mov
dec
je
ds
loopne
or
sbb
or
push
aad
pop
and
imul
cld
andb
rclb
shr
xchg
cs
ficompl
mov
stos
push
jl
add
mov
pop
sub
pusha
cmp
sarl
mov
xchg
add
xor
push
or
mov
cmp
mov
cmp
xchg
sub
xor
push
sbb
icebp
push
inc
fs
mov
adc
mov
ret
add
inc
push
and
jg
sbb
or
inc
dec
jo
pop
or
repnz
sbb
mov
int
enter
adc
add
sbb
cmp
xchg
adc
push
sub
xor
int
mov
mov
push
add
loopne
aam
mov
cmp
pop
mov
push
mov
xchg
or
gs
xor
sub
mov
aam
push
pop
pop
mov
out
test
push
daa
lods
les
mov
mov
add
ficoms
shrb
mov
fcomip
or
cmp
or
mov
or
pop
sub
insb
add
push
xchg
inc
mov
add
mov
aam
sub
scas
aad
pop
test
push
xchg
lock
loop,pn
add
lds
cmp
push
rol
dec
adc
inc
mov
add
shll
adc
pop
mov
mov
push
add
sub
in
nop
int3
push
mov
pop
clc
push
cmp
inc
aas
arpl
inc
sti
hlt
add
lcall
push
rcl
add
inc
int
ss
loopne
sbbl
lahf
and
test
loope
pop
and
scas
ja
loop
lock
pop
xchg
and
ror
daa
adc
dec
loop
pusha
jno
add
sub
lods
int
cmp
inc
cmp
dec
push
divb
xchg
push
mov
mov
sbb
or
jle
outsl
clc
popa
loope
xchg
and
int
jl
clc
inc
add
popa
insb
bound
sbb
add
jno
push
add
popf
xchg
out
add
pop
pop
pop
js
jno
cltd
xorl
pop
xchg
adc
imul
inc
cmp
fsubl
cmp
sub
mov
and
ljmp
push
and
in
and
mov
mov
cmp
es
pusha
sbb
or
mov
and
mov
das
mov
add
sub
cmpsb
inc
or
sub
cmp
cmp
ret
ljmp
push
movsl
push
sub
rcrb
mov
pop
repnz
mov
mov
pminsw
cmpsl
lds
cwtl
outsb
cmp
inc
push
pop
pop
addb
adc
inc
rolb
add
push
aam
je
xor
jp
nop
fcomp
sub
add
jno
test
addb
sub
push
shrb
add
inc
in
sbb
lods
ficoms
or
les
call
orl
and
inc
mov
pop
nop
mov
std
mov
rolb
jo
xchg
mov
cmp
stos
fiadds
xchg
nop
lods
xor
pop
test
stc
out
dec
mov
mov
andl
push
push
adc
aaa
jge
and
mov
mov
mov
les
cmp
jo
clc
cs
push
jno
test
cld
icebp
pop
sub
outsl
cli
outsl
filds
xchg
mov
popa
add
dec
adc
sahf
lahf
mov
ljmp
in
rorb
scas
or
and
pop
cmp
pop
mov
cwtl
pop
adc
jmp
ja
push
mov
inc
enter
nop
cwtl
jo
lcall
and
xchg
mov
inc
mov
insb
shll
mov
loopne
jg
xor
xchg
popf
or
jno
sub
jg
and
test
movsb
ret
pop
fimull
cs
push
rcr
sub
jp
mov
fs
push
std
mov
mov
xchg
dec
add
adc
cs
push
mov
or
pop
cmc
push
xchg
mov
inc
rorl
pop
and
scas
mov
call
ljmp
scas
mov
cli
or
mov
add
mov
and
inc
and
dec
lock
or
and
cmpsl
cmp
or
cmp
jno
or
mov
sar
inc
call
xor
and
int3
and
scas
loop
inc
sub
or
mov
div
inc
lods
roll
sub
int3
mov
ljmp
dec
mov
test
rcrl
les
or
cmp
mov
mov
mov
lods
add
call
fdivp
inc
add
cld
aaa
test
and
xor
ss
cmp
xchg
insl
pusha
mov
sub
add
inc
add
add
adc
push
outsb
inc
xchg
test
scas
cli
rorl
mov
scas
cmp
mov
shlb
xchg
decl
pop
sub
and
jns
cli
mov
sahf
sbbl
mov
pop
call
xorl
mov
mov
push
or
test
adc
adcl
cmc
sub
ljmp
add
sub
or
bound
nop
into
push
or
pop
fs
add
loopne
jg
hlt
mov
cs
and
lcall
ss
lock
loope
daa
or
adc
xor
sbb
adc
int
sbb
ljmp
pop
rcr
push
pop
cltd
mov
int3
cmp
call
adc
cmp
shll
addb
add
nop
or
add
mov
xor
jp
xchg
and
call
jmp
iret
pop
insl
inc
cmc
mov
push
shlb
mov
pop
push
mov
push
or
sbb
mov
outsb
cld
push
ret
add
inc
cltd
inc
add
shrb
cmpsb
sbb
add
mul
add
sti
clc
mov
rolb
pop
mov
aad
push
int
lods
incl
movsl
mov
jl
mov
std
cmp
pop
int
inc
lds
add
adcb
aam
rolb
mov
aad
adc
lea
icebp
dec
cld
leave
cmp
xor
jp
pop
ljmp
in
aaa
loop
and
cmp
and
loopne
push
ss
adc
sbb
mov
loopne
shll
cmp
lds
xchg
sahf
clc
das
sub
pop
scas
mov
cmp
decl
iret
xchg
add
es
jo
xor
cmp
inc
pop
jo
decl
les
mov
test
xchg
xchg
sbb
xchg
scas
mov
fs
mov
jl
or
xchg
add
xchg
sub
in
and
sub
pop
std
cmp
inc
movsl
ficompl
cmp
loop
out
sbb
pushl
rol
aam
andb
outsl
adc
inc
aas
fwait
xchg
push
pusha
push
jns
xor
or
adc
add
xlat
push
jle
es
cmp
add
loop
push
sub
jae
das
pop
cmp
add
shrl
jno
outsl
sbb
lods
cmp
gs
lahf
add
shll
out
dec
shlb
cmp
pop
and
imul
jo
bound
mov
ret
pop
dec
rcrl
stos
lock
mov
cs
fbstp
mov
add
pushf
or
adc
inc
popa
add
xor
movsl
sbb
lcall
or
mov
mov
jg
adc
cmp
movsb
aad
mov
jl
mov
and
mov
mov
cmp
add
cmp
inc
adc
inc
test
sbbb
add
rolb
je
mov
add
in
jno
test
mov
daa
xchg
lds
add
test
test
jle
add
xor
xchg
clc
movsl
shll
add
cli
add
add
sub
or
cmp
add
mov
cmp
mov
cmp
add
lret
add
scas
adc
xor
dec
arpl
or
out
jg
sti
cmp
mov
xor
mov
shlb
cmpsl
popa
xor
adc
aad
orb
adc
dec
aaa
add
xlat
stos
push
pop
xchg
mov
inc
add
mov
dec
in
fldl
int3
andb
pop
push
or
jp
mov
mov
add
nop
adc
sbb
add
and
inc
xchg
addb
cwtl
add
adcl
aam
cmp
subb
push
outsb
xchg
push
xchg
roll
jmp
add
and
lock
mov
js
inc
sub
add
into
test
cltd
jmp
sarl
orl
pop
add
outsb
aam
rclb
imul
xchg
mov
or
or
mov
roll
incb
shll
add
andb
adc
push
inc
and
pop
mov
cmp
popa
inc
or
adc
cmc
fiadds
ja
cmp
and
ficomps
jle
movb
or
insl
shlb
inc
in
lea
add
add
add
xchg
fcomi
pusha
push
pop
or
adc
add
or
fistpll
mov
add
addb
sub
cmp
xchg
cmc
inc
push
mov
add
add
xor
loope
push
sub
bound
flds
adc
pushf
fnstcw
push
sub
adcb
push
daa
in
incl
les
aam
adc
daa
inc
or
add
sub
mov
or
push
inc
push
pop
dec
aam
push
ret
out
inc
sbb
pop
and
inc
inc
cmpsb
fcoms
and
or
add
sbb
xor
sbb
pop
imul
cltd
inc
aad
int3
pop
xchg
sbb
das
adc
shll
add
jg
xchg
add
roll
push
outsl
push
cld
popa
adc
inc
xor
sarb
or
std
idivb
movsb
push
pop
mov
push
aad
push
ret
jl
pop
hlt
adc
sbbl
aas
inc
push
sahf
mov
jbe
roll
push
add
mov
adc
xchg
pushl
adc
cmp
shl
shll
loopne
cmp
sbb
adc
sbb
aaa
or
nop
push
adc
pop
call
ret
and
or
pusha
add
je
and
add
mov
push
std
inc
xor
mov
push
or
cmp
add
inc
push
or
jp
lods
popa
jb
mov
pop
pop
and
fistpll
add
loope
fs
add
stos
pusha
gs
pop
pusha
push
mov
out
mov
pop
add
inc
loop
adcl
mov
and
xor
mov
movsb
cmp
push
mov
call
or
das
add
ja
push
or
push
push
pop
fs
and
push
sub
int
cmp
cmp
jg
cmc
decl
inc
insl
and
leave
cmpb
add
and
pop
sbb
lea
clc
and
and
and
push
mov
add
mov
out
cmp
loopne
stos
and
hlt
testb
add
pop
orb
das
pop
and
call
sbbl
nop
lea
or
cmp
repnz
jg
leave
add
cmp
mov
xchg
movsb
lret
add
popa
fs
es
int
cmp
jg
jl
pop
jno
das
notb
push
scas
ljmp
xchg
icebp
fbld
call
jecxz
mov
inc
or
loopne
inc
sub
pop
cmpsl
jl
sub
lret
add
jge
adc
mov
fwait
test
mov
xorb
ljmp
adc
loopne
and
jmp
pusha
inc
imul
orb
sbbb
push
decl
pusha
adc
cmpsb
push
xchg
loope
andl
shll
adc
stos
add
cmpb
pop
xchg
aad
popa
mov
sub
pop
push
ljmp
mov
ret
loopne
mov
xchg
movsb
jge
adcl
mov
add
sbb
adc
js
xchg
outsb
adc
jb
clc
pusha
pop
jecxz
mov
sbb
popa
jb
pushf
xchg
inc
clc
movsb
gs
loopne
mov
xchg
mov
inc
or
fs
inc
hlt
add
out
lcall
add
rclb
roll
sbb
add
ss
or
add
adc
push
mov
pop
jno
in
lds
sub
aas
loopne
add
xorb
sub
add
inc
cmp
lock
add
push
lods
xorb
nop
push
xor
clc
xorl
scas
or
jo
cmp
pop
movsb
add
out
add
push
pop
dec
cld
jbe
inc
in
mov
cmp
outsl
inc
adc
or
pop
cmp
push
xor
adc
ljmp
imul
out
add
sub
loop
frstor
add
fld1
pushf
movsb
andb
pop
sahf
shll
fiadds
das
sbb
das
adc
or
movsb
xchg
add
mov
and
adc
nop
jo
add
loopne
cmp
jnp
cwtl
mov
cli
jl
roll
out
push
push
inc
clc
aaa
sbb
sbb
pop
adcl
mov
mov
push
or
or
std
mov
adc
adcb
adc
pop
pop
add
and
cmp
or
cmp
and
cmpb
sarb
adc
pop
fadd
pusha
std
data16
xor
inc
cmp
add
push
and
adc
sub
cld
scas
ss
mov
and
aam
test
inc
dec
movsb
faddl
or
movsb
xor
dec
pop
aad
jne
or
dec
imul
jb
dec
push
push
es
ljmp
daa
add
pushf
cmp
fs
add
sub
mov
into
mov
rolb
movsl
push
in
out
add
sbb
lods
sbb
cmp
mov
fidivrs
adc
inc
inc
jno
adc
jecxz
add
mov
inc
rolb
pop
scas
cli
mov
cmp
xor
lods
or
mov
mov
pusha
dec
xor
and
cmp
movsb
add
mov
xchg
add
mov
mov
ljmp
jo
ja
push
push
es
or
rorb
icebp
add
push
pushl
ficoml
inc
nop
add
push
in
icebp
sbbl
xlat
incl
xor
adc
sahf
mov
fistl
imul
daa
pop
ret
call
push
and
ret
lea
imul
inc
or
outsl
cmpsb
jns
inc
mov
daa
xchg
and
pop
subb
mulb
adc
das
and
lods
es
pop
dec
into
sub
sub
jle
add
cmp
pop
and
inc
rcll
cmp
mov
adc
or
cmp
jg
cmp
adc
inc
adc
das
add
ficoms
push
popa
pop
loop
jg
mov
add
inc
adc
push
in
add
sub
decl
fists
dec
scas
pop
cmp
loop
cs
decl
pop
or
and
jno
mov
loop
les
adc
fcoms
dec
loop
adc
cmpsl
int
es
and
aam
ret
cmp
ret
cmpsb
ss
outsl
ljmp
stos
jno
addb
addb
dec
movsl
push
jo
mov
mov
in
scas
mov
shrb
call
inc
jb
adc
lock
mov
mov
icebp
xchg
adc
dec
sbb
lock
movsl
xor
mov
nop
add
jg
pop
mov
sub
mov
rcl
mov
dec
ja
sti
aaa
loop
movsb
fldl
adc
je
or
lcall
sub
loopne
xchg
pop
cmpb
sti
cs
insb
icebp
push
adc
aaa
ljmp
sub
lock
and
xor
jmp
subb
ret
lcall
jmp
xor
push
mov
mov
fxch
loop
lock
cmp
xor
xor
pop
cmp
or
movsb
dec
and
xchg
in
icebp
decl
sub
cmp
sub
push
adc
pop
fmuls
xchg
sarl
and
dec
insl
decl
sbb
and
and
pushl
pop
loop
add
pop
xor
sbb
loope
ss
adc
testb
and
xor
inc
sub
and
sub
xor
push
mov
mov
xchg
ret
pusha
stos
cmpsl
pusha
push
addr16
fucomip
mov
fisttpl
clc
sbb
das
adc
jecxz
pop
test
push
xchg
fisubs
lds
loopne
and
pop
aad
das
adc
shlb
push
sti
mov
xor
aad
push
or
dec
or
insl
es
and
rcrb
pop
ficoms
cmpl
or
addl
repnz
sbbl
mov
cmpl
jno
mov
cmp
mov
std
add
mov
daa
cld
fdivs
cltd
nop
ret
xchg
jle
fs
jg
jg
mov
rolb
push
cmpsb
repnz
andl
nop
cmp
push
sahf
inc
rorb
imul
pop
fildll
mov
add
sarb
jmp
pop
ja
adcl
flds
xchg
xchg
rolb
cmp
rcl
inc
js
in
out
add
adc
je
add
fldl
pop
movsb
popa
adc
inc
shrb
push
into
pop
test
fucomp
mov
popf
mov
fnsave
add
out
mov
scas
lahf
or
jbe
add
xchg
add
lds
mov
pop
inc
incl
add
scas
adc
daa
push
inc
jg
rolb
cs
lret
pop
xchg
loope
ror
aad
scas
fadds
sahf
nop
jmp
mov
cmp
mov
rcrb
xor
clc
jmp
cmp
xor
jo
xchg
lds
dec
or
adc
lock
roll
cmp
mov
loop
mov
inc
in
daa
xchg
icebp
adc
pop
scas
lods
and
or
jle
lock
mov
sbb
mov
and
adc
mov
cmpsl
ficoms
clc
cmp
adc
nop
xor
inc
xchg
nop
je
mov
mov
loop
adc
mov
jbe
push
inc
inc
xor
push
in
jno
xchg
loopne
push
push
push
stos
add
dec
mov
aad
lahf
mov
mov
jl
inc
jno
or
cli
sbb
jae
mov
jne
jge
or
and
aam
push
push
cwtl
and
or
test
push
jo
orb
jge
leave
add
adc
sbb
cli
test
sub
mov
inc
loopne
push
dec
jo
dec
adc
pop
gs
rolb
dec
insl
cs
rolb
and
cld
xchg
stc
inc
xor
inc
sbb
xlat
pop
xchg
add
es
sub
mov
xchg
std
push
xor
adc
movsl
xchg
mov
movsb
lds
add
sub
add
xchg
and
jle
stos
inc
dec
mov
rolb
push
mov
test
and
ja
int3
je
ret
jle
ror
sub
ja
sahf
shrb
cmp
call
xchg
push
adc
adc
ret
inc
mov
fcompl
xchg
push
in
mov
mov
je
add
mov
push
roll
xor
lds
into
push
scas
icebp
fisttpl
push
pop
and
repz
add
cmpb
data16
lds
lahf
cmc
push
lds
push
add
mov
lods
mov
mov
ficomps
cmpb
lcall
cli
xchg
cmc
addb
popf
rclb
addl
xor
pusha
movsb
std
adc
sub
test
in
cmpsb
gs
inc
cld
scas
movsb
cmp
andb
daa
xchg
inc
xorb
xchg
fildl
xor
push
test
lahf
adcb
outsl
jg
mov
push
adc
or
aam
jg
das
jle
fcoms
and
jb
push
shrb
mov
gs
int
add
jle
add
mov
cmp
mull
sub
inc
add
lcall
mov
inc
imul
inc
arpl
or
push
mov
inc
ljmp
jg
push
xchg
and
xchg
ret
arpl
arpl
sarb
mov
xchg
adc
ljmp
xchg
es
lds
inc
nop
or
inc
clts
arpl
mov
xchg
add
dec
shlb
push
xor
cli
rclb
mov
and
push
sbb
fneni(8087
shlb
inc
jl
nop
adcb
add
cmc
stos
or
cli
nop
pop
sbb
xchg
mov
and
jo
dec
sbb
pop
adc
ret
xchg
and
add
cmp
push
bound
in
fucom
rcl
pushl
mov
xchg
cli
sbb
lds
mov
fld
mov
and
lahf
mov
sbb
mov
adc
and
sub
shlb
mov
outsl
add
ss
add
sahf
aad
ltr
push
sarl
push
pop
xchg
add
sbb
mov
aaa
push
sbb
sbbb
fwait
sbb
outsl
scas
addb
leave
cmp
loopne
pusha
jno
shlb
push
mov
sarl
repz
call
push
inc
inc
xchg
pusha
subb
adc
cmpb
in
inc
enter
hlt
hlt
mov
jns
push
cmp
and
or
cmp
insl
xor
xchg
push
and
xor
push
in
mov
es
pusha
icebp
push
lods
inc
adc
sub
das
mov
ficoms
push
inc
push
rolb
sbb
adc
ret
adc
push
add
loopne
inc
push
inc
inc
add
add
adc
in
lret
std
sub
lret
or
aad
adc
push
insb
mov
add
sbb
push
sub
es
cli
or
mov
jo
loopne
adc
or
pop
add
mov
inc
dec
mov
mov
push
mov
data16
imul
dec
popa
add
add
pop
lods
add
xchg
push
xor
pushl
inc
call
add
inc
sbb
pushf
and
pop
mov
mov
add
pop
mov
mov
shlb
decl
cs
test
cmp
subl
decl
and
inc
sub
ds
mov
jmp
or
dec
incl
jg
sahf
test
and
data16
xchg
xor
notb
cld
dec
mov
cmp
pop
and
loopne
ljmp
lods
cli
loope
pop
xchg
sar
jmp
fdivrp
pushf
xor
and
push
xor
inc
ds
xchg
fisttps
xor
dec
push
int
and
int
inc
add
mov
push
loopne
sahf
adc
pop
pusha
int
and
sti
jnp
decl
add
or
inc
movsl
stos
fcomps
dec
inc
add
xchg
and
sbb
repz
clc
incl
fisubs
cltd
mov
lahf
rcrb
sbb
jmp
inc
test
incl
int
mov
add
jb
add
rorb
inc
pusha
or
clc
scas
sbb
cli
rolb
xor
adc
add
jno
adc
aad
sbbb
and
sub
stc
testb
addb
or
addb
or
mov
or
movsl
fdivrs
mov
xchg
push
dec
add
cltd
mov
xchg
aad
or
sbb
sbb
cmpl
push
lock
dec
cmp
and
pop
sbb
nop
mov
pop
jno
adc
ljmp
xchg
pop
repnz
aad
mov
arpl
pop
decl
movsw
call
in
sub
or
pop
cmc
and
jo
pop
xchg
pushf
cmp
pusha
cmp
lock
push
xor
xchg
test
or
push
xchg
bound
decl
incl
and
push
adc
push
push
lret
lock
repz
negb
in
or
cmpl
sub
shll
or
jo
cmpb
xor
daa
movsl
es
ficoms
adc
xchg
cmp
stos
mov
inc
cmp
dec
add
jg
rcrb
sbb
push
subl
jmp
xchg
cmp
xlat
aaa
in
xchg
movsl
add
pop
cli
jmp
cld
faddp
push
push
mov
cmp
or
push
pop
and
rclb
pop
xor
xor
cmp
bound
xchg
mov
outsl
jle
mov
inc
pop
fildl
xchg
cmp
push
cli
roll
stos
add
sbb
pop
lahf
addb
sahf
adcl
xchg
mov
js
aam
mov
xchg
add
scas
inc
mov
and
lcall
push
inc
add
mov
movb
in
cmp
in
mov
clc
inc
push
mov
loopne
push
lret
adc
xchg
add
mov
sub
xchg
mov
ljmp
dec
push
imul
cmp
mov
push
add
hlt
and
push
movsb
cld
xor
in
jmp
jo
cmp
rorl
pop
movsb
xor
pop
lock
pop
fsts
or
adc
sbb
addr16
inc
mov
movsb
aad
or
cmp
push
pop
cmpsb
xlat
pop
fcomps
loop
stos
xor
xchg
and
add
icebp
push
fsts
and
aam
rclb
mov
stos
xchg
lods
jo
flds
cmpsl
add
pop
xchg
pop
bound
cmp
test
dec
fstpl
xchg
aad
adc
xor
sub
xchg
push
sub
out
pop
jge
sbb
cmp
adc
adc
add
shlb
jg
push
xchg
arpl
add
xchg
or
and
repz
cli
inc
loopne
cmp
test
int
repz
lock
mov
shl
pushf
sub
ljmp
adc
aaa
or
sbb
ja
test
push
pop
rcrb
sbbb
mov
mov
or
xchg
daa
mov
push
cmp
add
add
push
ss
add
mov
hlt
add
les
pop
pusha
add
push
cmpsl
adc
push
add
sbb
add
dec
jae
push
add
xchg
push
and
jmp
hlt
push
in
xchg
cmpsb
movsl
cld
in
push
rclb
movsl
dec
in
div
lock
push
aam
add
adc
xchg
or
lods
xor
mov
push
or
in
ja
adc
mov
push
call
mov
push
inc
adc
cld
ret
aam
jg
in
in
mov
and
push
je
in
jno
pop
lock
sub
sub
mov
add
cmpsb
dec
rcl
stos
inc
test
push
push
mov
mov
xor
shrb
add
pop
mov
in
mov
loope
add
notb
test
mov
sti
pop
ret
in
push
popf
ret
add
addl
mov
lahf
in
int
cmp
or
cmp
mov
xorb
push
insb
movb
call
adc
or
adc
push
jo
aaa
lds
cli
inc
add
dec
add
push
push
mov
loope
clc
fneni(8087
add
or
mov
add
sbb
mov
adc
adcb
ret
nop
fs
push
or
cli
sarl
fsubrl
call
test
loop
xchg
pop
adc
in
xchg
aam
lock
dec
cld
in
lcall
push
pop
mov
or
stos
arpl
call
addr16
rcr
mov
add
imul
rolb
pushf
sub
imul
andb
jg
jp
cltd
imul
push
add
fwait
testl
orl
add
clc
and
mov
test
ljmp
jb
inc
add
loopne
pop
pop
nop
and
andb
jo
or
fwait
out
decb
scas
data16
pop
ljmp
loopne
xor
mov
pusha
dec
xchg
pusha
or
or
sub
sub
data16
cmpb
xchg
rclb
adc
pop
notb
mov
adc
icebp
adc
mov
pusha
sbb
adc
shrb
sbbb
imul
mov
adc
clc
push
lock
or
add
movsl
add
and
pop
sbb
fiaddl
fnstenv
and
push
xchg
add
scas
xchg
sarl
mov
sub
add
push
and
rorb
add
mov
jp
jbe
fwait
adc
pushf
lds
sbb
or
in
mov
push
sub
ret
fstpl
cmpl
inc
cli
aad
jl
nop
ficomps
add
push
inc
mov
xor
xchg
adc
ds
cmp
inc
mov
add
pop
pop
fdivr
outsb
push
loope
negb
roll
adc
rolb
add
roll
jg
sub
sar
adc
orl
sub
and
ds
movsb
cmp
or
xchg
cmp
add
and
mov
fsubrs
and
inc
xor
adc
pushf
test
mov
mov
adc
stos
outsb
xor
es
pusha
ffree
lcall
loope
mov
subb
imul
add
mov
inc
cmp
mov
decl
adc
in
xor
rclb
lret
jo
mov
add
add
cmp
andb
push
dec
or
push
cmpsl
filds
pop
aaa
rclb
inc
das
xor
pushf
add
shlb
subl
cmc
pop
push
push
add
test
sbb
jae
mov
add
push
add
subb
push
test
add
cs
scas
add
sub
lods
lock
cmpb
sbbb
fcmovb
xor
les
ret
pushl
pop
adcb
test
xor
push
adc
or
cmp
inc
cld
call
add
cmpsb
cmpsl
rclb
xor
jl
inc
mov
mov
flds
xor
or
sub
inc
sbb
lret
xchg
mov
clc
rcrb
fstp
in
jmp
push
cmp
sub
xchg
mov
mov
sahf
or
cmp
loop
lahf
or
lahf
test
push
inc
or
mov
stos
ficoml
mov
mov
mov
push
dec
mov
jge
rolb
and
push
ljmp
push
lods
daa
into
push
cs
addr16
mov
lds
call
fisubl
addb
rorb
cmp
push
mov
push
ljmp
or
and
rolb
push
shll
xchg
mov
out
mov
cmpl
add
int3
push
incb
into
shlb
sar
pusha
and
push
pop
sbb
sbb
in
mov
add
xchg
add
std
imul
loopne
add
add
repz
popa
popf
rcll
rol
pop
cmp
popa
insl
jecxz
mov
dec
sahf
loopne
xchg
add
mov
movsl
js
and
cltd
dec
movsl
outsl
add
andb
mov
cld
push
stos
pusha
mov
stos
gs
add
lahf
sbb
dec
xchg
loop
adc
in
push
and
int3
cli
xor
sub
loop
pop
dec
push
add
push
inc
scas
jg
rcr
push
pusha
add
adc
mov
cli
sbb
pop
mov
in
adc
push
sub
mov
sub
es
cmpsb
dec
scas
mov
rcrl
int3
ret
pop
inc
and
orb
add
pusha
inc
cmpsl
leave
into
pop
and
cmp
mov
add
jp
hlt
pop
std
adc
pop
cmpsb
int
sar
les
and
nop
pop
lcall
add
sahf
xchg
add
mov
psrlq
mov
or
incl
adc
adc
pusha
rorb
cmp
pusha
add
sub
outsb
imul
addb
stos
xchg
xchg
and
push
orb
scas
rolb
fsubl
jnp
add
scas
mov
test
cld
mov
adc
movsb
orl
aas
push
sub
movsb
cmp
or
or
es
and
sub
mov
push
sub
mov
lock
cmp
and
cmp
or
in
sub
call
clc
mov
icebp
movsl
inc
push
sbb
loop
rorl
add
cld
outsl
sub
xor
and
adc
fimuls
imul
push
adc
decl
and
inc
push
pop
aaa
add
cmp
add
lds
mov
push
jb
pusha
adc
scas
jo
arpl
xchg
cmp
sbb
incl
xor
mov
fwait
inc
test
or
jbe
sbb
inc
add
mov
in
scas
out
xor
fstpt
pop
mov
mov
or
mov
mov
and
invd
in
jmp
cmp
adc
push
pop
rolb
jo
inc
call
xchg
test
pop
lods
mov
pop
inc
mov
jmp
icebp
dec
add
adc
add
dec
inc
cmp
inc
pop
push
add
mov
jge
mov
jno
adc
aaa
xor
fwait
ss
out
nop
dec
and
test
test
mov
ljmp
ss
loop
pop
sbb
aaa
movsb
xchg
int3
mov
sub
push
pop
shlb
jmp
lods
mov
shlb
in
cmpsb
xchg
jb
in
add
jp
ss
cld
bound
clc
cli
out
adc
or
sbb
mov
xchg
push
adc
scas
cli
pushl
or
pop
int3
xchg
test
in
test
lds
cmp
cmp
ja
mulb
or
add
mov
repnz
mov
or
cmp
jno
xchg
test
cmp
push
stos
adc
ficoml
mov
fstpl
push
add
mov
cmp
movsb
xchg
xor
lcall
add
xchg
sbb
cmpb
cmp
add
cli
mov
sub
fdivrl
fadds
inc
add
cmovno
popa
sbb
sahf
cmp
fiadds
repz
sbb
or
cmp
mov
add
call
mov
mov
pop
inc
and
mov
rorl
pop
fmull
add
add
pop
cmp
dec
add
ficomps
scas
mov
inc
jno
lods
daa
aad
pusha
aaa
lea
fisttps
mov
cmp
fwait
ds
sbb
mov
insl
pop
add
sub
sub
ret
xor
aaa
pop
in
and
sub
pop
add
fisttpl
pop
insl
ss
insl
fbstp
loopne
pop
das
imul
inc
out
pop
test
mov
incl
aad
js
mov
ficoml
pop
pusha
lods
sarb
fisubs
sub
cmc
out
rclb
or
inc
xor
jo
shr
aad
inc
add
jp
cmpb
sbb
pushf
sub
add
push
imulb
pop
mov
mov
mov
icebp
or
xor
adc
pushl
shlb
enter
leave
rolb
inc
mov
shll
lcall
pop
loop
mov
adc
test
loope
and
cmpsl
mov
in
shrb
or
push
push
out
jne
lods
mov
mov
mov
add
add
jmp
dec
mov
mov
fiadds
sub
inc
jb
ljmp
dec
nop
add
ljmp
lcall
les
sbb
add
test
mov
push
xlat
insb
push
push
mov
mov
add
cmp
pusha
mov
cmp
add
dec
ret
and
ficomps
mov
aam
movsl
pusha
or
or
movb
jg
das
cmp
enter
push
movsb
int3
cs
mov
rol
mov
pop
adc
mov
call
add
rcrb
ffree
mov
mov
cmp
inc
pop
mov
ljmp
shlb
lret
lret
lock
cmp
andb
frndint
ljmp
cmp
fsubrs
add
roll
ret
add
push
dec
xchg
flds
ret
add
int
and
rolb
rcrl
push
and
push
lret
and
xor
and
mov
cmp
les
dec
inc
fsubrl
int
cmp
cmp
out
jb
xchg
sub
push
push
mov
push
cmpsb
sub
pop
andb
rclb
xchg
push
pusha
or
adc
mov
mov
outsl
or
push
or
leave
clc
mov
mov
inc
arpl
push
imul
test
inc
bound
fstl
xor
dec
fsubl
xchg
cli
push
rcrb
aad
pop
pop
push
loopne
pop
or
add
xchg
popf
xchg
mov
mov
sbb
xchg
and
das
jge
roll
or
push
clc
out
and
pop
lock
mov
fs
inc
in
mov
mov
data16
inc
aaa
or
mov
icebp
outsl
mov
add
mov
mov
rcrb
lods
xchg
shrb
into
test
dec
add
in
pop
outsl
inc
addl
push
addb
or
pop
add
movsl
jo
testb
jb
dec
add
push
push
add
js
add
and
into
sbb
and
fsubl
pop
fmuls
call
mov
mov
pop
rclb
mov
sub
push
add
add
adc
mov
ds
scas
clc
add
leave
shlb
xchg
cmp
aad
adc
addr16
and
inc
xor
sub
rclb
add
cs
add
hlt
dec
dec
cltd
and
rolb
mov
sbb
pushf
add
xchg
clc
or
sbb
pop
xchg
movsb
inc
pop
incl
lock
or
iret
scas
fidivl
or
jo
or
add
and
test
xchg
scas
or
cmp
mov
sbb
jge
out
cmpsl
inc
xchg
or
push
loope
in
xor
push
sub
mov
push
jg
je
ss
inc
cmpsb
nop
sahf
adc
rolb
inc
mov
mov
or
incb
sub
enter
and
std
push
rolb
mov
ret
mov
inc
pusha
and
and
orb
test
inc
inc
and
test
pop
or
call
call
xorb
push
les
inc
addb
or
jg
clc
push
movsl
xlat
cs
enter
adcb
shll
mov
adc
lds
inc
sub
adc
leave
mov
and
pop
bound
add
aaa
loopne
sbbl
add
cli
mov
or
pop
inc
sub
mov
loopne
int
add
add
or
imul
imul
pop
or
or
sbb
stos
lods
push
or
pop
lods
scas
leave
sti
push
cld
or
and
ret
cmpsl
fbld
mov
dec
cld
mov
ficoms
rclb
jno
push
jecxz
fs
test
fldt
or
cli
out
pop
mov
xor
cs
add
movsl
and
inc
add
add
hlt
dec
xor
fsubs
ret
and
jo
ret
adc
or
sub
nop
mov
push
xor
ljmp
push
fcoms
loopne
cmp
add
bound
call
shlb
and
and
stc
xchg
or
or
add
add
add
repz
mov
adc
and
inc
inc
push
and
lock
and
inc
or
mov
loopne,pt
das
and
cs
lods
cmp
add
add
outsb
add
and
adc
cmp
jg
or
cmpl
sbb
add
dec
and
sbb
ret
incl
andb
cmpsl
adc
or
fidivrs
mov
pop
stc
test
out
stos
out
orl
mov
xchg
lcall
or
xor
shlb
dec
push
push
adc
decb
and
push
inc
push
mov
imul
inc
push
jb
cltd
mov
pop
jo
cmp
jae
or
mov
icebp
cmp
or
and
mov
add
push
int3
loopne
push
inc
jge
fstpl
pslld
or
frstor
cli
add
inc
mov
scas
mov
sbb
lcall
fwait
push
mov
int
sbb
jmp
mov
mov
mov
add
sbb
sbb
pop
adc
ss
sub
mov
mov
add
sub
xchg
fildl
and
add
stos
inc
mov
sub
movsl
lret
add
jle
or
mov
push
push
jge
add
stos
mov
add
jo
push
jne
adc
rcll
fdivrs
pop
push
dec
mov
adcb
icebp
cmp
mov
in
fists
outsl
and
mov
mov
hlt
mov
pop
cmp
add
or
lock
nop
push
or
push
dec
lahf
lock
fildll
adc
repz
cmp
ljmp
or
add
jo
fidivrs
push
xor
outsl
dec
push
adc
jle
and
xor
ljmp
sub
mov
sub
inc
outsb
push
xor
cmp
lods
rcrl
cmp
xchg
push
stc
imul
push
dec
sbb
add
pop
mov
adc
cmp
adc
cmp
push
ficompl
aaa
sbb
inc
test
add
jo
xor
adc
cmp
ret
scas
ds
jnp
hlt
fadds
and
jns
adc
iret
inc
push
and
jae
add
fdivrs
pop
or
mov
es
cmp
loopne
adc
add
push
xchg
and
and
cltd
outsl
js
mov
xor
mov
jge
adc
and
xor
mov
sub
fcmovnu
dec
inc
jl
or
lock
ja
sub
imul
nop
xor
sub
out
jbe
xchg
and
and
mov
popf
aam
xchg
js
adc
aad
add
adc
fldl
cwtl
cwtl
inc
cwtl
add
or
add
add
adc
xchg
icebp
lock
push
dec
xor
mov
pop
adc
or
adc
cs
mov
pusha
insl
add
add
and
adc
ret
mov
pop
add
push
cli
and
push
mov
mov
lock
fiadds
push
jl
nop
or
fldt
and
add
adc
add
add
insl
ljmp
cmc
add
adc
sub
insb
xlat
mov
aad
nop
jns
pop
push
push
sbb
lds
push
nop
stos
add
sub
lcall
aas
adc
push
or
add
cwtl
cli
outsb
sbb
mov
test
pop
sub
and
es
pusha
xchg
pop
test
sub
push
adc
pop
es
scas
jp
mov
mov
fwait
lock
sbb
add
loop
jo
inc
jnp
fcmove
movsb
sbb
int
pusha
or
or
int
dec
and
jbe
mov
clc
sbb
and
xor
inc
adc
xchg
add
pop
add
xchg
imul
cmc
lods
lods
ret
or
push
cld
xchg
icebp
fisubrl
add
aaa
inc
pop
bound
ret
mov
adcl
inc
xor
add
test
jmp
push
xor
pop
push
hlt
pop
jo
f2xm1
sahf
cmp
fiaddl
sbb
push
inc
lret
repnz
pusha
add
cmp
xchg
popa
pop
inc
cmp
adcb
sub
jle
sbb
rcrb
rclb
adc
fistpll
jno
xchg
pop
add
mov
mov
pop
pop
inc
xchg
fnsave
add
mov
mov
mov
mov
add
je
push
mov
roll
mov
rcll
cmpsb
pop
and
add
or
jl
rcrl
fldenv
in
mov
nop
add
add
js
xchg
scas
mov
push
test
repnz
mov
lods
js
lods
insl
add
movsl
inc
lret
in
call
fbld
shlb
lret
lock
fwait
push
ret
pop
test
push
adc
push
std
pushl
mov
and
add
stos
loop
pop
adc
push
mov
mov
icebp
or
inc
sub
bound
popa
xchg
xor
js
push
jmp
sub
adc
imul
in
mov
lock
fsts
inc
push
in
and
pop
pop
popf
push
pop
pop
push
add
dec
add
cwtl
sarl
ret
cmp
inc
and
add
fisttpll
inc
push
add
mov
push
adc
fsubl
xchg
fnsave
stos
push
sbb
sbb
mov
dec
mov
sub
cld
ret
cli
sub
sub
dec
aaa
std
decl
sbb
sarb
xchg
mov
ret
adc
mov
sarb
pop
and
or
or
adc
insb
loope
dec
inc
andl
xchg
add
mov
xchg
cmp
xchg
int
rclb
cmp
add
jb
imul
vucomiss
sub
cmp
push
fcom
inc
rcl
add
add
push
movsb
cld
rorb
rolb
pop
notb
adc
pop
push
or
enter
rorl
fbstp
mov
mov
add
add
and
or
pop
or
and
jg
pop
mov
mov
or
sbb
pop
bound
pop
test
mov
movl
mov
mov
or
rcll
mov
out
jo
cld
inc
inc
pop
mov
lea
push
and
repz
jg
dec
push
mov
loope
pop
ret
loopne
cli
test
mov
mov
cli
adcb
xor
pop
mov
sub
test
vmovntps
rcrb
jmp
add
scas
xor
insb
pop
add
sub
addb
mov
daa
cmp
lods
xchg
add
fistl
in
lret
data16
sub
pop
insb
addl
push
xor
pop
mov
xor
cmpsb
add
sar
xor
sbb
or
push
int
cmp
jae
mov
sbb
adc
les
popa
sti
inc
add
inc
pusha
mov
add
jmp
mov
aam
cmpsl
pushf
fwait
das
push
mov
pop
inc
add
cmc
sbb
push
test
add
sti
or
lock
cld
rclb
ljmp
pop
adc
cli
push
jmp
mov
pushf
lds
xchg
orl
addl
movsb
icebp
add
int
mov
sub
sub
cld
call
adc
pop
xor
fnstsw
call
mov
and
adc
lods
adc
cmp
lods
add
add
adc
adc
sbb
imul
subb
push
scas
aam
in
stos
lock
push
sbb
xor
or
xlat
xor
and
rcrb
add
mov
pop
inc
mov
adc
mov
in
lods
mov
or
subb
mov
dec
pop
fimull
cmp
call
out
lock
fiaddl
or
in
lret
add
sarl
lret
add
int
add
dec
ficoms
add
add
rol
ss
adc
lods
pop
sbb
pop
stos
rolb
push
faddl
add
outsb
xor
call
or
lcall
xchg
dec
add
pop
fwait
adcl
xchg
incl
ret
rolb
add
pop
adcb
lods
mov
xchg
sub
sbbb
pop
mov
arpl
add
push
xor
sti
push
out
push
hlt
rcr
icebp
movsb
into
and
mov
ret
inc
addr16
stos
in
aad
rorb
mov
cmpsb
loopne,pn
sub
inc
xor
cmp
dec
mov
or
cwtl
mov
enter
es
xchg
or
or
std
addb
loope
or
xchg
lret
adc
add
xor
and
pusha
xorb
mov
icebp
cmp
pushf
pop
push
jne
pop
ds
pushf
xchg
test
fcomi
pop
rolb
cmp
pop
fwait
aad
pop
inc
add
inc
mov
jmp
fldt
dec
int
mov
aad
repz
adc
pop
push
rcrl
adc
cmp
push
loop
push
add
add
scas
fistl
mov
shlb
or
stos
push
das
jb
loop
adc
andb
inc
shll
sub
rcrl
add
enter
ficompl
leave
and
add
xor
sub
mov
mov
sub
fimull
test
sbb
lds
aad
data16
or
push
imul
xor
addb
jg
mov
out
inc
xchg
xchg
shll
cli
dec
repnz
xchg
movb
ret
lcall
mov
pop
pusha
cmp
imul
sbb
adc
mov
add
imul
pop
pop
pop
add
ret
loopne
jecxz,pn
sub
sub
sub
add
rolb
push
cltd
mov
cwtl
sbb
test
js
xchg
push
xor
call
mov
pop
cmpsb
imulb
aaa
adc
and
add
roll
mov
adc
inc
or
add
or
or
add
scas
mov
sub
loope
rcr
decl
jecxz
test
cmpsl
aad
mov
add
adcl
add
int3
mov
fmul
lods
mov
roll
add
lock
dec
pushl
aam
and
mov
adcb
dec
sub
adc
mov
inc
outsl
test
pusha
sub
or
das
xorb
xchg
mov
addb
sbb
js
mov
and
jns
sub
inc
pusha
push
pop
mov
dec
xor
and
loopne
test
add
or
shlb
testb
in
sub
mov
xchg
ret
out
nop
loop
lcall
sbb
mov
pop
xchg
pop
lods
adc
imul
mov
mov
add
cmpsb
mov
xor
outsb
push
test
dec
add
movsl
lods
push
or
movsl
cmpsb
outsl
pusha
push
mov
movsb
inc
mov
mov
ret
mov
xchg
add
scas
js
icebp
inc
insl
xchg
push
push
sbb
ret
pop
push
sbbb
or
push
std
rolb
pop
xchg
ss
jno
fmuls
and
ffree
adc
into
rcrb
add
inc
ljmp
add
aaa
adc
aaa
pusha
and
dec
call
stc
add
lahf
enter
scas
mov
add
xor
sbb
jb
addr16
cwtl
je
sbb
ja
fistpll
loop
xchg
popa
mov
add
sti
enter
ja
sbb
or
push
adc
inc
sbb
sahf
addr16
fists
push
xchg
and
in
inc
das
stc
push
mov
aaa
inc
cmpsb
addr16
in
adc
aas
lcall
ss
mov
mov
mov
adc
mov
mov
push
xor
sti
xor
add
inc
daa
and
mov
icebp
loop
je
cwtl
cltd
in
jae
test
filds
or
inc
xchg
push
filds
lcall
inc
pusha
push
inc
and
inc
adc
outsl
push
and
cmp
das
inc
jns
stc
inc
movb
cli
popf
hlt
dec
mul
push
mov
mov
pop
and
imul
push
and
clc
mov
or
fldl
test
xchg
movsb
loope
stc
sub
push
repnz
outsl
dec
outsb
xor
icebp
adc
das
inc
orb
cmpb
mov
fidivs
in
cmpl
and
pop
popa
add
sub
xlat
cli
xor
cmc
pmuludq
movsb
or
shlb
push
addl
push
push
mov
orl
imul
mov
lcall
xchg
mov
cmc
inc
loopne
and
mov
xor
add
jmp
xchg
xorb
pop
push
sub
push
or
mov
and
jp
dec
jp
mov
inc
aam
inc
or
cld
cmp
push
cmc
jne
add
inc
fcos
mov
pop
out
mov
mov
rcll
shrb
rorb
mov
lret
cli
cmp
jo
data16
lds
sarl
rorb
and
lock
xor
xchg
push
in
lock
ret
rorb
jo
mov
sarb
xorb
inc
loop
cmp
and
hlt
sti
es
inc
adc
pusha
xchg
mov
or
aad
and
cmpsl
rcrl
inc
add
cltd
add
movsb
or
std
add
rorb
stos
jb
push
out
les
and
fucomp
sub
adc
add
fisttpll
sub
sub
mov
stc
mov
orb
xchg
test
mov
xor
cmc
pusha
sarl
push
push
xor
add
mov
scas
push
pop
test
sbb
mov
loop
and
addb
inc
movsl
mov
divb
addb
movsb
inc
pop
sar
call
adc
mov
fmuls
push
lds
cmp
imul
mov
pop
pusha
test
subb
dec
xchg
mov
out
dec
add
pop
push
or
mov
dec
and
push
add
and
outsb
adc
hlt
push
outsl
fdivr
mov
jno
subl
push
or
jg
add
or
add
push
adc
dec
pop
adc
sbb
pop
loopne
push
jo
lret
or
sbbl
jecxz
or
mov
fildl
add
popl
addb
add
nop
push
pop
and
pop
clc
add
push
and
nop
adc
sub
hlt
add
add
add
adc
xor
movsl
mov
and
or
fwait
rcll
mov
add
mov
orb
mov
mov
or
shr
jg
icebp
daa
pop
add
outsb
add
add
cmp
push
or
std
jmp
add
adc
adc
push
mov
adc
sub
rcrb
mov
dec
add
push
xor
adcb
pop
sbbb
push
and
add
pop
dec
xchg
rcrb
push
jecxz
test
jbe
fs
push
or
mov
fbld
push
fistps
lea
mov
and
cmp
adc
hlt
movsb
xor
or
fldt
mov
push
mov
add
push
and
lcall
sbbb
out
roll
bound
xchg
sbbl
mov
inc
add
dec
mov
jo
lds
add
mov
and
cmp
movsb
pop
std
mov
ret
nop
add
aaa
int
imul
mov
cmp
ret
lock
subb
mov
jg
cmp
icebp
add
push
jl
or
mov
aam
push
stos
insl
sub
es
push
jmp
jg
cmp
add
cmp
jge
dec
insb
and
rclb
inc
mov
jnp
adc
movsl
je
inc
sub
stc
add
and
push
jmp
pop
sub
add
push
dec
rolb
or
dec
andl
mov
adcl
arpl
mov
add
pop
push
add
jno
mov
shll
out
mov
leave
inc
dec
xchg
adc
pop
push
pop
or
or
mov
aam
adc
pop
icebp
mov
andb
subb
add
push
aaa
icebp
mov
pop
inc
push
add
and
add
movsb
movsl
or
mov
fidivrl
add
loope
es
lods
and
or
mov
sub
xchg
adc
add
mov
jne
push
adc
scas
mov
pop
in
jge
andb
popf
aad
movsb
push
ret
adc
mov
icebp
es
jo
cmp
xor
pop
ret
gs
decl
xchg
popf
adc
xchg
lahf
inc
add
jg
test
push
cmp
movaps
or
push
pop
lcall
pop
dec
push
add
xchg
jne
shrb
pushf
mov
call
add
and
inc
cmp
filds
icebp
and
cmp
cltd
flds
pop
movsb
lea
push
adc
mov
add
lea
mov
mov
add
adc
mov
mov
pop
mov
loope
mov
and
pop
mov
pop
out
push
pop
sbb
pop
rclb
call
lcall
mov
push
pop
adc
lret
js
pop
enter
andl
or
or
fstp
mov
cli
cli
sub
xor
push
fidivl
rclb
cltd
xchg
lahf
nop
mov
add
lock
std
outsl
sub
rorb
lock
mov
lds
mov
cwtl
sbb
or
fwait
push
cmpsl
aam
pop
or
stos
pop
cmc
dec
pop
pusha
lcall
push
push
movsb
lds
fwait
dec
and
movsl
into
mov
cmp
push
adc
repnz
push
inc
add
roll
imul
rolb
imul
ljmp
push
shlb
mov
les
push
cld
mov
mov
loop
lock
sub
js
push
and
push
test
push
rorb
mov
lock
xchg
mov
rolb
add
loope
jmp
movsl
nop
stos
jp
ficomps
cmp
sub
mov
add
shlb
rcll
ja
mov
sbb
xchg
shlb
imul
jmp
or
test
xor
mov
and
adc
jp
dec
lods
inc
fcoms
push
sbb
rolb
icebp
inc
mov
dec
hlt
push
xchg
out
cmp
cmpsl
test
push
aad
xor
subl
xchg
xchg
daa
add
imul
fcmove
ret
js
daa
xchg
push
fst
movsl
fldl
xor
add
adcb
fldz
enter
or
sbb
xorb
sbb
loope
fwait
xor
and
cs
mov
cmpsl
mov
or
push
sub
add
ds
pushl
add
sub
mov
and
push
add
shlb
cwtl
mov
or
cmpsb
adc
scas
ljmp
and
rclb
clc
mov
sub
adc
add
sub
test
sub
cmp
and
sub
ret
enter
pop
insl
sbb
mov
mov
xor
loop
ret
daa
subb
mov
and
add
adc
add
mov
sbb
aas
push
lock
or
cmp
iret
add
mov
fcoml
inc
xchg
adc
jb
sub
adc
mov
mov
inc
test
adc
xorb
sbb
call
das
sbb
stos
stos
andb
lea
push
adcb
pop
sub
or
push
add
fstpl
clc
shlb
sub
sub
rcrw
inc
movsb
fiadds
xchg
mov
scas
mov
mov
inc
and
js
movsb
mov
mov
pop
cltd
pop
xchg
shlb
sub
fldt
bound
sub
out
rclb
and
mov
cmpsb
adc
jl
loope
jle
jle
roll
cmp
jg
push
mov
cmp
mov
leave
lds
dec
add
xchg
aaa
cmp
scas
add
or
inc
xchg
shll
inc
push
ja
sbbb
pusha
add
adc
jg
mov
nop
pop
ficoms
rolb
loope
sar
adc
add
inc
pop
testb
mov
add
and
pop
mov
cmp
fisttps
xchg
roll
shll
ljmp
pop
push
push
lods
std
sub
pop
add
add
or
or
addl
test
das
adc
leave
cs
movsb
shll
add
hlt
sahf
inc
inc
rolb
push
sub
shlb
rol
dec
add
les
loopne
jl
lret
and
cmp
xchg
or
push
inc
mov
ljmp
orb
or
nop
cmpb
je
js
or
aaa
xor
movsl
sbb
movsl
aam
orb
std
mov
test
sbb
movsb
dec
fcompl
sub
mov
jns
dec
add
push
mov
or
ret
cwtl
sbb
aaa
cmc
popa
sub
js
mov
adc
imul
pusha
dec
or
and
and
xor
shll
push
adc
add
and
and
in
add
add
sub
jmp
jmp
push
in
pop
addb
addl
add
or
ficompl
dec
fnstcw
pop
dec
mov
fstpt
test
mov
or
and
sbb
add
ljmp
push
pusha
incl
cmp
pop
adc
add
xchg
fmuls
decl
mov
pop
test
cmc
leave
cmp
and
int3
push
filds
shrb
add
addl
ja
add
sub
dec
pop
in
mov
sub
lret
jb
or
daa
add
loopne
inc
shr
movsb
mov
add
or
mov
mov
inc
push
jo
leave
and
jo
cmp
subl
and
aad
out
jl
cmpsl
jg
subl
andb
mov
jecxz
fsts
xor
fs
sub
cmc
inc
test
enter
shlb
push
push
sub
mulb
rorb
bound
shlb
or
test
mov
pop
loope
fidivrl
testb
push
pop
inc
sbb
pop
cmc
mov
adc
mov
aaa
adc
das
inc
sub
or
les
in
xor
decb
and
sub
int
fs
sti
iret
and
pop
fidivrs
xor
roll
pusha
mov
movsl
inc
and
in
cmp
push
mov
pop
pushf
push
fldenv
imul
aad
push
mov
ljmp
mov
mov
cmp
ljmp
mov
lret
andl
lret
das
add
cmpsb
xchg
js
pushf
hlt
fwait
or
pop
ljmp
mov
adc
rcrb
mov
fdivrs
pop
fbld
pop
lcall
popa
fdiv
insl
loope
add
mov
or
test
adc
push
hlt
popa
add
fidivl
fldl
jo,pt
aaa
adc
adc
call
in
mov
loopne
pop
jmp
fwait
xor
or
xor
scas
call
std
pop
or
pop
popa
add
add
cmp
mov
add
add
lcall
push
cld
cmp
out
jmp
push
cmpsl
shlb
or
push
icebp
pop
nop
cmp
add
aam
sarb
pop
pop
adc
cli
sbb
das
clc
add
je
sub
cs
push
jle
hlt
stos
bound
mov
pusha
push
stos
and
fwait
sbb
add
push
call
rolb
xor
or
xchg
add
mov
pop
shlb
push
add
repnz
add
xchg
test
test
aad
and
flds
ja
mov
cltd
and
movsl
mov
jne
jmp
stc
nop
inc
out
add
cmp
addb
ja
sub
jle
imul
test
add
fbld
and
mov
adc
pop
jge
xchg
xor
addl
ljmp
mov
inc
add
pop
sbb
add
aad
scas
mov
es
push
xor
push
loopne
xchg
add
ljmp
ret
lret
or
out
loope
mov
pushl
addl
cmp
in
and
scas
nop
add
negl
les
add
push
out
mov
mov
add
fcompl
test
fnsave
nop
dec
add
add
addb
add
rorb
pop
xchg
or
call
add
rcl
or
xchg
cli
das
mov
xchg
mov
jo
pop
jno
or
add
mov
push
inc
add
fadds
cmp
lock
int
sub
push
add
xchg
pop
jno
mov
cs
and
cmc
or
inc
pshufw
push
mov
lods
push
mov
mov
sub
fadd
nop
add
adc
lock
sbb
sbb
mov
mov
jbe
mov
decb
stos
lods
sarb
xlat
adcb
mov
dec
and
cmp
pop
test
add
rcl
sahf
push
insl
add
cmpsl
mov
shlb
data16
addr16
rclb
push
add
mov
adc
clc
xlat
filds
cmc
adc
loopne
push
mov
f2xm1
add
inc
mov
ret
ss
adc
rcr
add
ljmp
or
movsb
xor
orb
lds
bound
pop
mov
mov
addb
cmp
mov
pop
popa
inc
cld
in
incl
or
add
mov
add
adc
pop
in
fwait
stos
adc
lods
dec
shr
or
int3
int3
loopne
mov
sub
xor
mov
jno
dec
and
and
addr16
das
adc
push
xchg
xchg
add
fnstsw
stos
or
js
dec
int3
outsl
es
cmp
and
into
pop
xchg
or
cmp
mov
scas
clc
push
push
in
and
hlt
add
xchg
loope
movb
inc
add
add
scas
cmp
cmc
lock
test
call
mov
insl
adc
jo
or
lods
sub
pop
and
roll
std
sbb
dec
sub
sbb
in
out
loopne
andb
out
lock
dec
clc
adc
clc
ljmp
push
push
pop
add
pop
scas
mov
dec
std
jg
sub
jl
or
cli
cmpsb
movsb
push
lcall
aad
int
sub
pop
add
xchg
arpl
test
idivb
dec
add
into
pop
fildl
or
decl
loope
pop
jo
bound
and
mov
mov
xchg
jg
outsl
notb
cmp
or
icebp
cs
or
lock
cmp
iret
sub
in
movsb
push
jg
push
hlt
and
xor
push
mov
test
jmp
cmc
jmp
outsl
outsb
mov
push
pop
aam
cld
sbb
and
xor
mov
or
jae
sub
les
add
lods
insb
and
push
mov
sahf
ror
in
mov
xlat
adc
sbb
and
movsb
fisubrl
xchg
and
sarl
xor
rcl
nop
add
ret
fld
push
enter
push
ljmp
mov
add
rorb
inc
in
or
dec
clc
cmpsb
loop
add
adcb
push
adc
xchg
push
sar
or
shrb
enter
xchg
cmp
fcomip
fld
int
jno
cmp
push
xor
mov
nop
inc
push
push
and
ljmp
lea
mov
orb
add
add
orb
aam
cli
addb
ret
lods
dec
jl
sbb
aad
clc
ret
movsl
mov
adc
add
ljmp
aam
mov
cmp
or
stos
cwtl
nop
sbb
xchg
shrb
adcb
ljmp
ret
lock
outsb
test
nop
nop
pop
cli
or
push
test
inc
inc
lea
and
push
jo
lock
or
test
popf
inc
outsb
cli
and
test
pusha
jo
inc
mov
test
sub
add
lock
sbb
mov
les
mov
sbb
xchg
loop
add
adc
or
inc
imul
or
push
jp
fdivp
out
inc
push
lock
or
pop
subb
jle
xor
js
in
push
dec
mov
push
pusha
cmp
pop
or
rclb
inc
pusha
imul
aas
xchg
cs
outsl
adc
and
sbb
add
pop
cli
ljmp
shld
cmpsb
add
das
movsl
mov
add
mov
cmp
or
jle
push
sub
iret
es
mov
adc
dec
push
hlt
xchg
addb
inc
adc
push
test
mov
xlat
or
flds
adc
mov
insb
cmpsb
ljmp
ljmp
ds
push
pop
frstor
mov
pop
aam
add
add
dec
and
pusha
mov
les
clc
sub
add
xor
add
mov
add
popf
mov
cmc
outsb
sahf
add
in
and
dec
pop
dec
add
fisubrs
xor
popa
add
jns
add
enter
incl
cltd
enter
add
mull
enter
jbe
fisubrl
push
and
pop
pop
outsb
fistpll
mov
sti
fwait
std
enter
mov
jb
jnp
in
mov
lods
gs
jns
add
out
outsb
in
push
adc
sub
lea
mov
addr16
adc
sti
add
outsb
sub
popa
adc
sahf
and
andl
rcr
sub
inc
and
mov
pushfw
sbb
jg
adc
adc
pushf
in
inc
pop
stc
add
cs
dec
sub
xor
loopne
inc
jns
mov
testb
add
enter
fucomip
pusha
addl
adc
cmp
xchg
mov
inc
cld
xlat
jns
adc
and
jg
stc
inc
adcl
int
pop
gs
and
add
test
push
xchg
or
clc
jmp
repz
cmp
adc
in
test
pop
cld
fwait
and
and
dec
mov
aas
insb
lcall
dec
arpl
sub
icebp
pop
lock
jne
movsl
aad
cmpb
and
daa
fstpl
add
push
sub
mov
jns
add
add
mov
subl
pop
mov
jb
js
push
xor
insb
icebp
dec
adc
mull
popf
fs
ret
sub
mov
lds
or
or
aam
pop
enter
cld
sarb
cmp
jnp
in
cwtl
lds
cwtl
sbb
daa
stc
filds
sbb
ficoms
nop
scas
test
roll
in
insl
ss
sbb
xor
dec
shl
shlb
inc
add
fs
loop
mov
adc
nop
pop
stc
add
mov
idivb
insl
jo
fildll
and
cmp
rolb
les
scas
test
add
test
outsb
mov
cltd
ljmp
sub
mov
mov
pop
sub
outsb
add
aas
add
ljmpw
push
pop
clc
mov
mov
addl
outsb
and
in
xchg
aaa
mov
stc
and
xor
cli
mov
fbstp
stos
push
lea
in
fisttpll
mov
pop
clc
inc
mov
movsb
or
add
rolb
mov
jmp
addb
add
mov
dec
or
outsl
aad
mov
stos
xor
pop
cmp
addl
jge
rorb
loopne
fadds
mov
adc
inc
dec
add
mov
and
push
mov
mov
fildll
add
jbe
mov
sbbb
dec
mov
xchg
jb
add
push
int3
pop
adc
and
xchg
xchg
sbbb
add
imulb
bound
and
fs
push
adcb
out
jns
mov
lea
dec
dec
add
mov
movsl
ja
icebp
push
pusha
mov
xlat
bound
mov
pop
loopne
sub
loopne
push
je
fiaddl
jge
in
cmp
push
xor
ret
clc
loop
daa
hlt
mov
imul
adc
or
sbb
fnstsw
hlt
incl
andl
and
mov
fadds
cld
jmp
and
pop
dec
add
cmp
and
mov
cmp
add
xchg
mov
add
and
mov
lds
add
sti
adc
add
lods
lret
add
add
mov
sub
inc
pusha
or
and
lock
push
cltd
mov
xor
inc
add
cmp
cmp
push
sub
fistpll
mov
data16
out
test
cmpb
ja
push
and
sub
adc
loopne
push
and
cvtdq2ps
pop
call
and
jb
mov
imul
cmpb
mov
push
jle
in
rcrb
ret
add
imul
test
add
mov
add
rcrb
or
adc
inc
pusha
inc
jo
and
mov
js,pn
inc
add
sti
add
dec
ljmp
xor
add
add
js
lcall
in
jg
or
and
mov
jp
add
in
lds
sub
shll
ja
push
lret
les
pop
inc
mov
hlt
ja
ss
jg
loop
addb
aad
mov
push
mov
sbb
xchg
and
in
xchg
lds
call
cmovne
dec
mov
and
inc
mov
push
adc
mov
xchg
mov
push
push
or
mov
sbbl
pop
imul
fstps
fstp
clc
aad
or
mov
mov
fsubrs
rcll
je
mov
add
push
iret
xorb
sbb
jb
movsl
flds
sbb
xchg
mov
push
cmp
jle
push
and
pmaxsw
sub
fisubs
and
enter
cltd
dec
adc
mov
push
sti
dec
xorb
inc
adc
inc
and
call
xor
mov
sar
add
push
or
dec
popa
adc
pop
lock
shrb
in
xchg
leave
jbe
cmp
rcll
cmc
scas
int
les
mov
xlat
movsl
push
sbb
cltd
movsb
loope
int
push
into
pop
fs
filds
movsl
iret
movl
bound
cmp
jb
cmp
decl
add
cmp
adc
mov
or
mov
lahf
decl
mov
js
or
jo
orb
adc
sahf
addl
jne
mov
ds
add
shlb
int3
or
sub
inc
aad
dec
ret
jo
add
xchg
pushf
sub
aad
cli
adc
mov
push
movsl
icebp
pop
mov
and
add
adc
cmp
cld
movsl
mov
xlat
add
and
addl
fisttpll
or
rorl
xor
adc
pop
jmp
add
inc
mov
sub
sbb
call
movsb
cltd
enter
mov
or
in
pop
push
into
pop
mov
push
incb
mov
pusha
jae
cmpsb
cld
mov
mov
sbb
cmpb
enter
pop
push
roll
push
popa
inc
adc
test
cmp
lock
and
aaa
lods
clc
mov
sub
rcrl
lods
lds
pop
and
xor
fidivs
movsl
rorl
xchg
push
imul
test
gs
es
adc
ljmp
push
out
or
jne
mov
push
lock
int
push
pop
ficoml
inc
sbb
mov
enter
ja
xor
cmpsb
cwtl
inc
movsl
and
add
fisubs
ret
mov
mov
lock
xor
call
nop
and
shlb
mov
xchg
adcl
or
pop
push
add
add
mov
dec
cmpl
cmpsb
sub
insb
jb
std
ja
cmp
push
and
pop
shlb
sbb
adc
push
sub
pop
lock
sub
movsl
cmpsb
sbb
dec
popa
aam
movsb
lcall
incl
lock
jae
mov
movsl
in
mov
ljmp
js
mov
and
jg
mov
push
lock
push
add
mov
in
icebp
cmpb
loopne
ret
fadd
push
std
sub
incl
fnstcw
hlt
jb
loope
adc
and
imul
add
ret
nop
add
pushf
es
add
pop
outsl
mov
jo
mov
cmp
dec
dec
test
add
fcompl
add
jo,pn
icebp
call
add
mov
or
es
push
jg
mov
test
icebp
add
push
fsubl
cwtl
rcr
inc
in
pop
mov
scas
add
lds
lea
jle
and
mov
sarb
imul
adc
sbb
std
aas
mov
clc
cs
push
std
mov
adc
pop
xchg
xor
sub
repnz
or
sar
add
adc
shlb
xor
push
add
inc
adc
push
cmp
mov
or
hlt
add
loopne
notb
mov
adc
addb
stos
cmp
rorb
shlb
loopne
orb
mov
lods
and
mov
imul
fldcw
push
or
inc
inc
rcll
push
or
mov
adc
pop
or
outsb
loopne
adc
repz
push
popa
dec
cmp
aam
jno
push
sahf
pop
roll
sbb
and
push
push
loopne
pop
pop
and
adcb
dec
loop
rorl
dec
or
pop
or
scas
shlb
shrb
dec
imul
fucomi
mov
mov
orb
mov
sub
in
pushl
cmp
mov
fldenv
shll
es
push
jecxz
jo
cs
inc
push
pop
test
sub
xchg
pop
pusha
mov
adc
add
xchg
aas
mov
mov
ja
jle
cmpsb
sbb
mov
cmc
push
clc
fisttpl
repnz
or
icebp
push
adc
push
push
pop
insb
and
ss
mov
test
xchg
test
out
push
jns
repnz
sub
sub
or
xor
cmp
test
sub
xchg
andb
xor
cmp
int
add
inc
mov
cmpsb
incb
cmp
lods
push
in
decl
movsl
xor
push
add
fistl
loopne
push
in
push
or
pop
sbb
xchg
push
in
add
jbe
adc
out
lock
divb
add
add
cli
xchg
addb
adc
dec
inc
fstl
enter
pop
aad
les
ficoml
sbb
xchg
loope
cmp
adc
int3
jo
cmp
lods
sbb
pop
lret
push
pop
lock
andl
rclb
and
lret
jno
adc
fldcw
and
add
mov
jne
fcmovb
dec
jg
roll
inc
mov
add
or
mov
mov
test
lock
or
dec
pop
es
aas
sbb
out
xchg
testb
adc
adcb
sbb
mov
push
std
scas
clc
mov
daa
add
rorl
mov
pop
faddl
push
loopne
add
push
sub
push
popa
shl
mov
popa
mov
adc
hlt
push
push
pop
adc
dec
adc
out
test
mov
add
mov
sbb
stos
sbb
xchg
push
aam
cmp
mov
ljmp
ffree
and
andb
jo
pop
movsl
nop
xchg
and
insb
xor
mov
or
hlt
add
cmp
aam
aad
andl
rolb
adc
in
dec
cmp
in
test
shld
xor
outsl
xorl
in
ficomps
add
and
outsb
pop
fldl
js
sbbb
shr
pop
outsl
mov
inc
cmp
or
outsl
outsb
or
cmp
inc
add
ret
pushf
call
enter
scas
add
sub
insb
outsb
sub
xchg
scas
adc
inc
paddsb
out
add
xchg
mov
mov
push
negl
pop
push
daa
inc
movsl
icebp
xchg
sub
das
data16
push
push
adc
bound
stos
inc
sub
arpl
push
adcb
into
and
dec
cmc
jmp
inc
test
mov
jo
pop
cmp
mov
mov
addr16
and
leave
add
or
inc
test
insl
jae
jb
fisubrl
incb
mov
adc
adc
xchg
inc
adc
orb
inc
in
mov
outsl
aas
push
mov
fstpl
subb
fwait
test
rorl
adc
add
adc
mov
shrb
incl
adc
popf
ror
adc
push
add
xchg
mov
nop
mov
shlb
mov
or
les
stc
inc
jge
pop
aam
js
add
pop
jle
xchg
pop
add
pop
test
addl
adc
and
mov
icebp
add
xor
mov
dec
cli
dec
jecxz
adc
inc
in
push
insl
fstpt
ret
dec
fistl
or
lret
pop
cli
and
add
fst
or
push
pop
adc
test
in
and
subb
pop
push
rcll
dec
loop
add
insb
test
fcomi
aaa
les
fldenv
sarl
cmp
mov
xor
jb
in
test
fcoms
xlat
dec
loopne
cs
ret
test
add
mov
sti
aad
add
jmp
jmp
add
pop
or
cs
adc
scas
add
cmp
shll
fiadds
mov
inc
xor
lds
roll
das
pop
hlt
dec
jp
cmp
ss
xchg
cmp
subb
mov
rorb
adc
add
mov
xchg
sarb
enter
or
enter
xor
or
les
push
xchg
shlb
sbb
popf
rolb
inc
add
pop
push
rolb
movsb
rol
push
push
incl
or
xchg
inc
fidivs
and
in
xor
jp
clc
mov
sub
cltd
subl
clc
pop
icebp
add
xchg
sahf
push
push
cmp
pop
loope
mov
adc
cmpsl
mov
es
inc
sub
mov
adc
test
push
sbb
test
jo
adc
outsl
adc
or
test
hlt
clc
dec
mov
movsb
js
sbb
or
pop
test
add
pop
pushf
mov
or
in
push
rolb
test
cmp
movsl
xchg
sub
mov
or
adc
imulb
mov
adc
mov
pop
inc
sub
and
call
lds
fildl
sub
jmp
in
flds
sub
call
ljmp
add
pop
jg
int
push
lcall
popa
adc
fs
mov
pop
and
rcll
xchg
or
cmp
push
roll
xchg
insb
les
cmc
pushl
dec
ljmp
pusha
xchg
inc
pop
push
rolb
cs
cmp
jle
sub
sbb
push
hlt
mov
jb
shl
mov
les
and
mov
mov
rolb
mov
popa
loop
roll
add
icebp
out
sub
loope
or
cmp
fcomip
das
js
adc
push
cli
sbb
jo
add
pop
fstpl
outsb
xor
pusha
add
xor
lock
mov
mov
mov
cld
popa
push
cmp
outsl
out
push
in
cmp
in
loop
hlt
pop
faddl
add
rolb
aad
insb
test
push
ret
adc
nop
adc
xlat
add
pop
aad
sbb
adc
and
xchg
and
flds
fcoms
das
clc
cmp
mov
mov
jo
imul
es
cmpb
pop
out
adc
adc
adc
hlt
orb
dec
pusha
add
rclb
incb
and
adc
mov
push
pop
add
mov
add
inc
add
mov
imul
and
shl
cli
das
xor
mov
orl
cmp
or
mov
adc
mov
inc
adc
push
sbb
dec
and
cmpsb
in
mov
xchg
mov
push
mov
insl
cmc
dec
jo
lcall
adc
add
inc
or
sub
stos
or
outsb
loope
adc
shlb
movsb
adc
fildll
or
mov
mov
lret
loop
sub
or
jns
mov
or
xchg
sbb
andl
loope
adc
outsb
xchg
fcomip
pusha
sbb
push
mov
add
cld
and
scas
sbb
or
movsb
add
mov
or
lock
icebp
mov
xchg
rol
pop
pop
movsl
out
hlt
mov
sbb
mov
call
or
mov
xchg
mov
mov
inc
sub
sbb
mov
shll
das
push
mov
pop
lahf
xchg
orb
push
movsb
lods
mov
pop
mov
in
loopne
sti
mov
pop
rorb
hlt
cltd
movsl
int3
cld
add
addb
sub
incl
cmp
dec
cwtl
icebp
sbb
sub
ja
pop
sbb
xchg
sbb
movsl
cld
dec
and
jb
xchg
xchg
je
sbb
or
pusha
cli
lods
shr
nop
test
dec
jmp
or
fsts
add
test
outsb
call
in
lcall
out
mov
sbb
dec
and
mov
orb
cmp
iret
cmpsl
add
xchg
push
adc
push
inc
movsw
cli
loop
add
jg
push
adc
movsb
ret
es
add
add
fisttpll
xchg
ljmp
cmp
sbb
rcrb
call
adc
add
pop
fimuls
dec
push
add
shlb
push
jne
cmp
ss
pop
loopne
outsl
mov
push
sbb
push
aad
cs
xor
inc
cld
inc
adc
pusha
and
pop
pop
or
loopne
and
pop
sbb
mov
sarb
aad
movsb
xor
sbbb
or
adc
cli
xchg
ljmp
push
adc
add
pop
cltd
add
fwait
leave
jp
or
adc
pop
out
test
xor
push
repz
loope
xchg
cmpsb
push
adc
nop
jmp
mov
addb
sbb
dec
js
clc
push
pop
push
ss
mov
rcrb
pop
mov
xchg
movsb
roll
pop
push
jle
add
mov
add
cs
std
dec
mov
or
and
sbb
jle
push
jg
mov
and
ficoms
or
sbb
mov
pushf
push
sarb
cmpl
cmpsl
imull
push
loop
imul
adc
mov
push
sbb
and
lds
cmp
dec
sbb
sahf
leave
pop
rcrb
sub
sub
nop
jl
loop
ret
js
mov
or
shll
push
in
jp
ficoml
sahf
jo
rcrb
or
fildll
aad
mov
or
inc
cmp
add
push
dec
mov
clc
push
addl
and
insb
mov
mov
inc
sbb
pushf
mov
or
mov
add
pop
jo
pop
pushf
cs
fisubs
mov
pop
push
xchg
add
sub
ljmp
in
pop
lods
cmp
adc
jmp
ljmp
pop
sbb
pushf
add
lods
lods
and
or
cmpsb
add
lods
or
lods
outsl
mov
lods
xor
rclb
xchg
rolb
popa
cmpsl
dec
lds
pop
subl
nop
sbb
and
sub
sub
xor
es
add
cld
and
imul
pushf
xor
ficomps
push
lods
int
pop
xor
sahf
cli
rorb
clc
outsb
rorl
pop
loopne
loopne
pop
sbbb
roll
pop
je
dec
out
xor
mov
inc
or
out
push
sub
sub
mov
add
sbb
js
fistpl
je
pop
popf
out
inc
in
lret
fdivrp
lcall
cmp
mov
ljmp
push
and
rolb
mov
fisubrl
les
fcompl
push
or
ljmp
rcl
cmp
ljmp
lods
aaa
lock
dec
mov
or
shlb
add
add
call
dec
xor
pop
aam
cmp
push
scas
jbe
and
adc
sbb
jle
leave
xor
and
sbb
push
and
and
les
xchg
mov
or
add
jo
lcall
cmp
repnz
push
fldt
imul
and
push
insl
jmp
andl
push
aam
stos
clc
add
mov
push
and
xchg
adc
inc
dec
mov
enter
inc
cmp
inc
data16
nop
ret
je
xchg
sbb
sbb
dec
xchg
rol
pushf
fucom
sti
or
addl
lock
insl
or
sbb
adcb
mov
mov
shl
shrb
push
loopne
ror
scas
sbb
inc
aam
stos
xor
pop
test
add
inc
or
mov
inc
icebp
xchg
mov
add
xchg
sub
sbb
cs
aaa
pop
sbbl
or
adc
mov
xor
and
mov
mov
aam
jp
inc
jg
push
movsl
aam
adc
pop
aad
adc
fistps
cmp
rcrb
fnstenv
fwait
rclb
movsl
into
adc
lock
fwait
add
inc
fst
pop
pop
lds
add
bound
mov
push
xchg
push
fldl
shll
xor
or
and
jg
pop
icebp
or
dec
out
xor
adc
dec
rcl
add
loopne
insl
lcall
nop
adc
inc
pop
cmp
pusha
test
adc
or
and
xorb
jo
and
cmp
push
mov
arpl
adc
sub
and
cmp
sbb
or
movsb
pop
sahf
or
mov
rcrl
ror
test
cmp
cwtl
sarl
aam
jbe
sbb
outsl
xchg
and
sub
add
adc
fstp
mov
pop
sarb
cmp
movsb
rolb
mov
addr16
add
rolb
pushf
or
mov
rcrb
pop
jo
shrl
pushl
movsb
ret
cmp
les
aas
add
sarb
sbb
or
inc
rorb
xchg
and
jns
cmp
inc
or
sub
and
push
mov
push
push
outsl
inc
or
call
cmp
add
cmp
add
add
das
cli
pop
mov
sub
xor
addb
fwait
dec
inc
and
adc
pusha
int
hlt
outsl
int
rclb
or
xor
pop
cmp
add
and
mov
rolb
mov
add
jge
cld
outsl
mov
xor
dec
jo
sub
or
loop
pop
lock
imul
xchg
or
cwtl
int3
xchg
fnsave
nop
dec
fs
xchg
mov
and
cmp
and
sbbl
fwait
dec
add
iret
aaa
popf
xchg
add
cs
add
cmpsl
ja
fdivrl
cli
sbbb
int3
dec
xor
jle
ret
mov
add
mov
or
out
or
sbbl
rolb
jae
jns
movsb
add
or
stos
xorl
nop
cmp
sub
dec
insb
sti
and
mov
and
cmp
gs
adc
cmp
push
push
mov
lea
rorb
inc
sbb
or
stos
push
cmp
cmp
fsubs
repnz
or
movsb
push
xor
cmpsb
jmp
adcb
roll
andb
scas
insl
rcrb
dec
movb
leave
push
fsubs
and
and
or
das
orb
sbb
and
xor
add
mov
lock
xchg
filds
inc
das
out
jbe
scas
test
and
shll
dec
add
cltd
or
test
adc
faddl
test
jmp
add
clc
subl
mov
and
mov
add
push
shrl
add
stos
ret
inc
mov
push
or
sub
adc
bnd
sbb
jo
push
sub
cmpsl
stc
add
es
add
inc
outsb
add
mov
xchg
cmpsb
jb
add
rorb
and
sbb
aaa
lahf
addb
sbb
popa
dec
sub
mov
loope
fwait
mov
adc
inc
orb
cmp
sbbb
ret
cmp
cmpb
xor
add
jle
subb
xor
xor
and
fstp
popa
push
xchg
aam
leave
out
cmp
xchg
and
rolb
ljmp
push
test
cmc
add
movsb
lcall
mov
cwtl
lock
gs
push
and
and
jg
mov
jle
add
ja
add
ss
xchg
rorb
rclb
jnp
adc
jg
adc
add
sahf
or
mov
call
push
test
cmp
adc
fdivp
push
add
inc
ja
rolb
mov
inc
sub
out
sub
push
push
fsub
push
pop
rcll
sub
adc
clc
and
push
incl
das
add
testb
lods
rol
adc
stos
roll
add
fsubrl
mov
es
pop
sub
lret
rolb
xorb
pop
es
and
inc
pop
and
outsl
cli
push
mov
nop
ljmp
adc
roll
movsb
add
cld
jne
and
ss
inc
orl
or
or
fstl
loop
call
gs
andl
cld
subl
outsl
clc
ljmp
andl
loopne
cli
pop
cmp
push
or
jo
mov
sub
mov
orb
inc
andl
xchg
add
cmp
mov
lahf
lods
std
inc
push
inc
scas
aam
rcrl
xchg
or
ljmp
xchg
mov
retw
sub
subb
jg
aad
lea
decb
loope
scas
sbb
cmpsl
outsl
cli
add
mov
xchg
push
or
aam
dec
jg
je
inc
cmpb
enter
iret
ficoms
add
shrl
leave
rolb
call
cwtl
icebp
shl
movsl
sar
out
pusha
pop
adc
clc
xorb
out
call
jmp
sbb
adc
jg
nop
ss
loope
in
mov
adc
leave
mov
and
cs
or
mov
and
mov
and
clc
sbb
sbbl
loope
and
pop
fucom
iret
cmpb
cld
loope
out
popa
cmpl
sbb
mov
xor
icebp
pusha
add
add
cwtl
inc
jb
inc
mov
in
push
cmpsb
test
sub
and
cmpsl
icebp
push
jg
sub
ljmp
adcl
xor
push
mov
loope
ss
cmpb
pop
mov
pop
pop
lock
push
xchg
mov
mov
or
nop
and
outsl
pushl
roll
inc
ret
movsb
fbld
add
push
or
mov
bound
mov
std
nop
mov
aaa
sbb
inc
xchg
and
sub
xchg
or
xor
fiaddl
and
rcl
cmpsb
pop
pop
adc
sbb
sbb
enter
shrb
mov
push
sbb
pop
stos
or
adc
orb
inc
push
cli
adcb
mov
push
js
add
mov
add
lock
push
scas
fidivl
inc
and
push
dec
inc
mov
pop
fisubrs
jb
jp
nop
shlb
xlat
inc
popa
stos
lcall
pop
mov
mov
in
fwait
ret
adc
jl
inc
or
and
dec
push
and
lock
lea
shlb
adcb
or
rorb
popw
movsb
add
push
call
rcrb
shrb
mov
sbb
loope
test
call
sarb
add
rcrb
cmp
aas
inc
in
mov
rcrb
pop
jmp
subb
lock
mov
fnsave
or
cli
out
pop
in
clc
push
nop
pop
sbb
xor
xor
push
or
mov
shlb
xchg
add
push
cmp
sub
clc
mov
cmp
pop
cmp
push
add
aaa
cld
cmp
out
icebp
add
and
pop
sub
dec
push
lds
jae,pt
sub
outsl
push
cmp
lock
adc
cmc
pop
mov
pop
cmpsb
scas
popf
aam
fcmovnbe
xchg
adc
cmp
xor
call
rclb
pop
mov
sub
or
cmpsb
push
clc
subb
and
loop
and
and
jg
pusha
insb
mov
adc
shll
shll
sbb
aad
or
xlat
pop
test
or
mov
sbb
frstor
mov
xor
or
or
shrb
icebp
push
xlat
fmuls
add
and
add
push
mov
inc
inc
sub
cli
scas
clc
or
push
xchg
cmpsl
daa
mov
inc
test
or
mov
or
push
idiv
ja
outsl
shrb
sbb
mov
cmp
sub
cmp
dec
test
add
mov
xchg
clc
adc
cmp
lock
add
fldl
insb
adc
and
mov
cmp
dec
jmp
jle
or
rclb
mov
adc
aam
daa
xchg
cmp
push
subb
cs
adc
stc
ficoml
inc
xorb
mov
cmp
shll
das
adc
orb
aad
rcrl
inc
cmc
or
push
mov
loope
adc
in
add
mov
pusha
les
inc
inc
bound
mov
mov
xchg
cmpsl
inc
jg
sub
xchg
loopne
jbe,pn
and
loopne
xchg
loopne
lahf
fxch
addb
and
xor
cmpl
mov
insb
stos
or
adc
adc
or
sbb
sbb
lock
mov
lahf
movsb
mov
xchg
jbe
int
mov
jle
inc
enter
sbb
sub
hlt
out
xchg
fistps
pop
shl
inc
lock
xchg
repz
push
in
ja
fildll
adc
xchg
fists
shll
ficoms
inc
xor
mov
sub
inc
lret
aam
mov
dec
cs
push
mov
adc
sti
je
fsubrl
cmp
push
cli
aaa
out
mov
test
add
cmp
stc
and
insl
outsl
or
loopne
mov
dec
add
mov
clc
jle
adc
and
push
insb
and
and
mov
xor
adc
andb
sbb
mov
aad
add
lods
es
cs
pop
movsb
movsb
rclb
les
icebp
cmp
test
inc
fadds
add
mov
addl
push
int
sub
nop
push
adc
movb
push
xor
jo
clc
pop
test
faddp
dec
rcrb
add
fldt
sbbb
cli
adc
roll
push
push
xor
jg
jno
scas
pop
adc
rcr
adc
rcr
cld
pop
sar
adc
sub
xor
loopne
leave
push
or
movsl
shll
or
repnz
add
add
insl
xchg
pop
imul
lods
orb
add
loop
add
stos
mov
in
js
sub
or
pop
dec
push
frstor
jb
cmp
cmp
je
xor
push
gs
adc
push
jne
fcoms
adc
sbb
pop
xchg
push
mov
add
or
fsubl
shrb
stos
push
cmp
dec
xor
pushf
cs
nop
movsb
push
loopne
aam
lcall
push
fmul
push
cmc
pop
inc
add
mov
orl
mov
sbb
mov
and
jnp
jo
clc
adc
pop
sbb
fiaddl
add
out
add
xor
popa
ss
mov
in
adc
movsb
aad
xor
call
cmp
add
cmp
rcrl
fwait
subb
mov
in
or
lock
jno
aam
adc
dec
and
loop
mov
test
xor
fucom
push
sbb
pusha
adc
loop
cli
and
or
lcall
das
rclb
add
and
lcall
lock
pusha
inc
mov
mov
mov
xchg
sarl
sub
push
mov
inc
xor
pop
push
pop
mov
popa
and
xchg
icebp
mov
jno
nop
cmp
cmc
jo,pn
xchg
dec
adc
add
ja
add
add
dec
inc
and
mov
stc
orb
mov
xchg
inc
repnz
sbb
add
pop
in
mov
stos
imul
xchg
pusha
or
push
inc
add
pop
and
mov
std
lods
mov
jo
sbb
push
add
mov
leave
and
stos
and
and
ficoms
add
dec
arpl
aaa
mov
and
ds
outsl
cmpb
outsl
jb
jg
inc
je
les
add
pop
aam
bound
add
xor
lock
fadds
and
inc
mov
inc
rol
adc
rorl
mov
fsubs
pop
add
in
loopne
add
int3
or
mov
adc
andb
lret
dec
ret
add
xchg
fwait
les
jp
sub
adc
pop
push
pop
inc
fcmovu
repnz
add
loope
loop
fcoml
adcb
xchg
shll
fadds
scas
clc
insl
dec
inc
push
sbb
or
cli
xor
bound
cmc
adc
cmp
push
lods
pushl
inc
rclb
and
adc
adc
adc
rorb
lock
and
cwtd
cltd
xor
mov
or
cld
arpl
push
inc
mov
mov
faddl
xchg
add
xchg
call
cwtl
loopne
or
mulb
test
adc
mov
outsb
inc
dec
mov
cli
xchg
adcb
ret
add
and
sub
roll
imul
or
adc
mov
pop
add
mov
xor
push
lret
clc
add
or
inc
push
adc
ficoml
push
test
les
mov
and
das
add
out
sahf
aam
cmc
lods
push
inc
and
out
add
or
js
or
ss
and
pushf
and
inc
js
lock
loop
outsl
incb
xchg
les
cmp
jg
mov
pusha
add
and
mov
or
add
and
shlb
pop
or
pushf
and
push
cmp
ss
icebp
xor
jmp
mov
loopne
add
cmp
pushf
ret
scas
xor
push
xorb
sarl
fimuls
or
adc
mov
and
aad
push
push
sbb
sbb
and
sbb
or
add
addb
cmc
shr
sbb
xor
out
je
shrb
pop
bound
push
adc
jne
mov
pop
ljmp
jl
jle
add
mov
jo
mov
ret
nop
xchg
and
shlb
out
leave
cmp
add
call
dec
inc
inc
add
loope
loopne
roll
lods
inc
add
jl
loopne
push
or
pop
aam
adc
xchg
ljmp
add
mov
out
flds
mov
xchg
adc
cmp
or
fsubs
add
mov
push
push
cmp
rcrl
roll
adc
pop
sbbb
test
sbb
lret
adc
call
in
sbb
lods
inc
xchg
push
fdivs
mov
jae
mov
push
sbb
and
icebp
mov
das
pop
adc
data16
rcrb
ret
or
inc
push
cmp
add
inc
adc
adc
adc
or
mov
sbb
xor
and
scas
xor
pushfw
xor
shrb
mov
inc
je
adc
mov
add
cmpsb
das
push
or
push
pop
mov
incl
sbb
add
test
push
inc
sbb
adcb
cltd
inc
cmp
inc
ds
add
mov
jo
jbe
cmpl
or
je
add
jp
rolb
sbb
rorb
xor
fisubl
sub
sbb
fld
les
add
adc
outsl
aad
out
mov
mov
pop
inc
xchg
fst
movsb
rcrb
popf
mov
ljmp
cltd
mov
xor
xchg
popf
inc
addr16
repnz
add
rclb
fldz
cli
jmp
xchg
add
sahf
add
pop
ficompl
pop
add
cld
js
dec
cmp
int
fsubrl
fdivrl
inc
ss
into
in
ret
fisttps
int
cmp
push
cmp
cmp
int
add
mov
adc
push
push
cmp
mov
sar
sbb
push
loopne
sub
gs
mov
loopne
icebp
movsl
es
add
push
mov
and
movsl
cmpl
decb
insl
and
dec
jl
decb
shlb
pop
xchg
loopne
adc
sarb
or
sub
add
add
inc
insl
xchg
loopne
movsb
movsl
add
test
cwtl
or
outsb
pusha
je
push
mov
mov
mov
addb
scas
les
push
cmp
loop
adc
xchg
xor
and
loope
pop
sub
pop
xlat
inc
adc
push
loop
in
sub
ljmp
pusha
mov
aad
cli
movsb
add
xchg
pop
nop
pop
mov
lock
movb
cmp
push
rclb
adc
inc
loope
add
lods
cmp
mov
shlb
shll
popa
inc
xchg
mov
sub
pop
mov
data16
rorl
std
or
std
mov
orl
ljmp
rcr
rorl
and
xchg
pop
sub
shl
inc
adc
xchg
cmp
std
lcall
pusha
add
push
push
add
push
inc
sub
fldt
and
scas
int
clc
and
add
mov
mov
hlt
sbbb
ja
int
je
clc
adc
sub
cltd
inc
psraw
lds
sbb
filds
loop
adc
lfs
cmp
scas
mov
pusha
add
test
sub
push
decl
lret
push
cmp
or
mov
sbb
sbb
fmul
sbb
add
insb
jb
rolb
aad
ficompl
ret
cmp
int
into
mov
pop
or
mov
stos
lds
popa
cld
sub
rcrb
aam
imul
cmp
xchg
add
sbb
or
jne
movhps
mov
jae
push
push
add
fsubrs
add
aam
cmp
and
popf
aam
push
scas
xchg
add
subb
fsub
scas
test
popf
adc
mov
popa
jnp
shll
add
inc
cs
xor
rcrb
dec
les
lds
mov
sub
jg
mov
xor
dec
cld
loopne
inc
fisubrl
or
int3
inc
or
sbb
cmp
ret
dec
inc
add
sbb
inc
mov
pop
mov
lret
call
fs
shrb
xor
xorl
xchg
pop
xorl
dec
cwtl
push
icebp
daa
mov
jl
sbb
adc
adc
cli
fs
push
lods
es
loope
int3
ret
or
arpl
jl
adc
mov
or
xlat
pop
jbe
scas
pop
sbb
push
add
imul
mov
imul
cmpsb
out
mov
loop
push
fildll
inc
sbb
shl
ljmp
adc
loopne
push
movb
aad
nop
add
outsb
ret
cld
mov
mov
cli
ss
and
call
lret
jae
ss
loopne
cmp
xor
fiaddl
hlt
mov
pop
shlb
sarl
pop
mov
mov
push
push
test
inc
rcrb
push
mov
pop
nop
testb
negl
add
stc
pusha
or
pusha
adc
xor
mov
add
adcb
fistps
ret
inc
sbb
pusha
add
fdivrs
movsl
sub
hlt
mov
and
adcb
push
cwtl
fdivl
test
outsb
outsb
mov
adc
adc
incb
dec
mov
mov
or
in
and
das
adc
push
das
xchg
dec
lea
stos
xchg
cmp
or
call
push
outsl
xchg
add
pop
adc
jmp
mov
mov
xchg
xor
addl
xchg
in
lcall
nop
add
mov
sbb
nop
add
cmp
add
jle
andb
shlb
push
add
rolb
push
inc
and
call
and
inc
push
xchg
mov
add
pop
fdivs
pop
add
mov
xchg
loope
push
mov
sub
andl
movsl
icebp
sbb
add
xor
je
ljmp
adc
sub
and
xchg
and
icebp
xchg
rclb
jo
in
cmp
jo
jg
push
or
shlb
orb
fldcw
fiadds
xor
cmp
adc
decb
adc
shl
lods
aam
sbb
cmc
cmp
and
add
dec
frndint
fiadds
adc
cld
cltd
and
scas
test
nop
dec
lahf
test
filds
es
or
pop
lahf
xchg
add
and
cmp
add
and
mov
sub
shlb
lock
mov
das
sarb
cmpsl
push
mov
add
nop
nop
test
push
std
sub
adc
es
jg
movsl
sbbb
mov
movsb
mov
add
adc
or
mov
test
inc
xchg
test
clc
pusha
or
in
cld
add
lods
or
or
mov
in
inc
xchg
or
in
orb
adcb
movsl
fwait
inc
or
pusha
punpckhbw
mov
push
mov
pop
sbb
pusha
shr
adc
push
xchg
fucomp
inc
add
mov
hlt
cmp
inc
add
mov
jnp
loopne
repnz
adc
add
sarb
xor
fldl
xchg
fcmovnu
jbe
cmp
movsl
sub
or
aaa
or
and
add
push
repz
in
call
sti
sub
or
push
daa
xchg
enter
call
push
mov
xchg
jmp
aaa
xor
pop
mov
sbb
inc
cmp
mov
sbb
pop
push
pop
or
sbb
inc
mov
call
clc
dec
or
shll
lret
dec
adc
repnz
dec
push
adc
adc
xor
shrl
xor
cmp
pop
xorb
add
ja
or
test
nop
and
mov
dec
shl
ficoml
fldl
pusha
add
mov
xor
mov
xor
pop
cmp
mov
mov
jg
hlt
and
cmp
cmpsb
nop
lods
cmp
jle
xchg
add
cmp
popf
mov
adc
sbb
outsb
adc
push
nop
loopne
cmpsb
in
shr
int
pop
js
pushl
in
cmp
ficompl
mov
cld
or
and
adc
gs
rorb
mov
and
imul
fiadds
add
in
push
mov
mov
leave
jne
mov
adc
xchg
add
inc
loopne
cmc
fisttpl
in
pop
or
mov
add
add
bound
and
or
push
addb
and
sub
mov
clc
sub
or
inc
add
mov
inc
xchg
and
movhps
and
push
icebp
pop
pop
mov
sarl
jno
add
push
add
pushf
movsb
cmp
mov
sbb
aad
dec
push
jmp
cli
mov
ljmp
test
or
push
cs
mov
cmpsb
add
mov
push
jne
add
mov
inc
add
mov
imul
cld
add
add
lcall
repz
test
cmpsb
rclb
xor
dec
pusha
in
pop
addb
push
cmp
mov
jb
sub
fsubr
push
test
pop
fildll
adc
call
and
xor
shlb
xor
push
pop
hlt
das
lods
adc
es
lret
repnz
nop
jns
sbb
inc
nop
dec
and
or
icebp
dec
cmpsl
add
clc
sub
call
cmp
jle
adc
add
xor
adc
aas
or
push
push
popa
adc
fdivr
cmp
push
or
push
dec
jo
shll
pop
pop
repnz
adc
sub
bound
pop
inc
or
pop
pop
sar
lock
push
push
movsb
sub
cli
flds
push
inc
push
addr16
push
xor
cmp
pusha
cmp
test
dec
sub
pop
in
in
adc
cli
pop
sub
fidivrl
loop
stos
jg
and
loopne
add
xchg
and
pop
add
mov
add
ljmp
je
and
shlb
cmp
push
loope
xchg
sub
fwait
rorl
and
and
icebp
push
test
xchg
andb
mov
test
movsl
cld
test
out
in
mov
rorb
xor
xchg
and
push
lock
mov
cmpsb
or
xor
incb
mov
cmpsb
outsb
cmp
shlb
and
ljmp
outsb
mov
push
sub
jmp
xor
repnz
lea
ljmp
fsubr
lock
decl
mov
and
into
mov
inc
test
mov
and
xchg
inc
mov
jle
add
cmp
pop
cmp
xchg
loopne
pop
loopne
outsb
sub
pop
js
jne
stc
aad
mov
jecxz
repz
or
cmp
sti
ret
cs
pop
jp
gs
mov
ja
movsl
out
sub
mov
add
or
pop
dec
adc
cmp
mov
fdiv
mov
lods
cltd
repnz
mov
inc
and
xor
adc
dec
add
jle
lea
cmp
cmpb
push
dec
cmovo
lret
fldl
adc
push
cmp
cmp
lock
pop
cmp
mov
pop
xchg
adc
ret
add
loop
add
mov
adc
cld
add
andb
dec
adc
jp
cmp
mov
sbbl
sbb
mov
mov
call
add
push
pop
stos
add
or
in
ret
push
ficomps
outsl
daa
xchg
fcoms
and
adc
jl
orb
movsl
mov
subb
mov
and
jp
popa
mov
movsl
xchg
add
cmp
les
sti
rolb
imul
subb
push
push
rolb
sbb
xchg
push
lock
fstpt
popf
inc
pop
or
cli
ljmp
ret
add
addb
call
sti
call
mov
and
testl
dec
jp
jo
test
movsb
ja
lds
fwait
js
dec
sbb
test
test
rorb
insb
call
cs
mov
pusha
sub
sar
jg
stc
push
adc
ret
bnd
adc
push
xor
and
pop
inc
inc
mov
push
adc
and
cmc
movsb
and
xchg
into
stos
and
lods
leave
cmp
int
dec
mov
fldl
mov
dec
imul
mov
or
sbb
stos
addl
adc
fbld
scas
push
in
sbbb
add
adcb
add
add
add
xchg
lods
inc
dec
sbb
es
rcr
fists
add
add
aad
lods
or
mov
mov
test
repnz
pop
or
pop
clc
xchg
int
adc
cs
mov
xor
push
add
mov
in
jle
and
js
movsl
fsubrp
rol
xchg
push
pushf
sahf
adc
rcrb
and
adcb
sub
adc
popf
push
adc
call
sarl
sub
mov
and
loop
movsl
mov
rorb
pop
sbb
jp
xor
data16
push
aad
aam
lret
add
das
add
push
rcl
xor
test
in
mov
cmp
mov
enter
sbbb
xor
add
imul
pop
xor
rolb
pop
orb
movsl
das
dec
mov
inc
inc
adc
or
mov
push
mov
push
lds
cmpsb
lods
sti
inc
inc
lock
fidivl
jecxz
inc
push
sti
jg
cmc
lds
pop
mov
inc
mov
adc
inc
xor
xchg
cmp
or
cmp
add
inc
into
cmpb
add
sub
fsubs
adc
movsl
pop
inc
lock
mov
pusha
sbb
adc
popf
sub
dec
gs
adc
inc
and
movsl
mov
mov
mov
shll
int
push
lret
cld
jno
das
bound
fisttpll
test
sub
sbb
addl
push
jmpw
stc
shrb
orl
sbb
stos
adc
push
rclb
xchg
sub
fdivl
mov
ss
fs
push
hlt
dec
xor
inc
call
dec
je
jb
es
mov
pop
lods
jo
sahf
pusha
sbb
adc
dec
test
push
cmp
add
pusha
pop
mov
clc
aam
mov
lock
out
out
out
adc
loop
sub
inc
push
add
gs
lods
mov
int
add
out
inc
movsl
pop
adc
loopne
filds
cld
shl
loop
lret
inc
arpl
adc
cmp
int3
loopne
or
jg
add
mov
das
sbb
adc
leave
push
pop
sub
jo
cmp
cmp
int3
push
mov
adc
sub
mov
xchg
dec
add
cmp
bound
inc
or
test
jg
addb
adc
es
loopne
and
mov
ret
data16
adc
movsb
mov
add
popa
xor
or
adc
inc
inc
lahf
imul
adc
push
jae
sub
and
xchg
xchg
cli
movsl
add
dec
ljmp
push
int
add
mov
lods
bound
mov
xchg
sub
xor
sbbb
popa
loopne
add
call
mov
sbb
es
repz
into
cltd
pusha
xor
mov
jbe
pop
adc
adc
jmp
pop
and
loopne
out
mov
mov
adcb
adcb
adc
add
outsl
xchg
faddl
and
lods
fsub
ljmp
or
xchg
adc
pop
xchg
adc
xchg
mov
mov
data16
int3
cmp
lock
movsb
push
add
and
sub
add
and
clc
xor
pop
aas
or
push
push
add
repnz
adc
push
fists
cwtl
cmpsb
cmpsb
mov
das
adc
mov
or
inc
push
xlat
rolb
test
mov
ret
test
lods
adc
sahf
aaa
add
add
and
test
popa
std
fbstp
inc
mov
shlb
sub
loop
cs
inc
cwtl
xor
jecxz
cmc
push
loopne
mov
loop
shll
lea
mov
pop
aad
mov
in
subb
pop
cmp
push
fisttps
lcall
mov
and
daa
push
add
cmp
das
and
loope
shlb
ret
push
add
lret
xor
add
rcll
test
add
dec
rorl
mov
sub
mov
imul
inc
or
loopne
dec
add
add
and
fcom
jl
or
add
jp
stos
loop
cmp
decb
pop
jb
xchg
and
nop
stos
fistl
pop
fiaddl
lea
or
xor
cmp
cmp
cli
and
std
shrb
adc
and
lea
das
and
add
add
and
pop
lcall
xchg
shlb
pop
int3
xor
push
xor
inc
mov
push
inc
ret
les
push
loope
incl
sarl
adc
fcoms
sbbl
mov
clc
lods
cmpsb
mov
and
add
cmp
and
cmc
jmp
fcoms
xchg
outsb
test
movsl
call
inc
jno
fsts
or
or
xor
into
mov
and
add
add
push
rcl
in
add
mov
add
dec
add
mov
dec
sbbb
es
scas
inc
xor
cmpsb
xlat
jp
push
cli
adc
xor
cltd
mov
fwait
rorb
cltd
cwtl
test
mov
pop
add
faddl
pop
push
lds
je
or
cmp
push
mov
scas
jle
xlat
pop
les
sbb
loop
cmp
cmpsb
mov
aam
aam
inc
push
es
cmp
repnz
add
js
mov
lds
lock
sahf
lret
es
mov
pop
out
decb
pop
fsts
or
adcl
mov
cmp
and
xor
icebp
add
and
outsb
mov
add
mov
push
sub
xor
or
dec
aam
sbb
xchg
adc
sahf
pop
inc
cmp
jmp
lds
je
shlb
sub
das
add
pop
inc
xor
mov
push
pop
sub
mov
shl
xor
aaa
add
dec
cld
mov
aam
icebp
sbb
and
inc
mov
xorb
pop
sub
or
pop
and
inc
add
lcall
daa
xchg
adc
shlb
pop
ficompl
dec
mov
pop
rcrl
adc
push
loop
scas
pop
fucom
loop
adc
mov
cmp
ss
xchg
addl
jp
in
jecxz
pushf
push
add
movl
cmp
fstl
fcomp
and
or
icebp
lahf
fbld
dec
push
loopne
cs
subb
inc
sbb
and
add
out
xchg
dec
aas
sub
cmp
js
add
adc
add
push
inc
testl
and
jno
shrb
pop
fsts
pop
ret
in
sub
inc
fmull
fsubrl
mov
cmp
add
test
mov
movsl
push
or
movsb
pop
lods
pusha
sub
inc
add
das
clc
pop
fcmovu
add
aam
add
mov
or
je
ja
jle
movsb
ret
cmpsl
mov
es
nop
cltd
push
jmp
or
shlb
add
cs
jo
adc
lds
dec
mov
xor
mov
fstpt
das
inc
xchg
mov
test
cmpsb
mov
push
adc
sub
sub
pop
movsl
nop
pop
dec
loopne
pop
inc
xchg
pusha
or
xchg
push
xchg
or
decl
pop
out
cmp
dec
and
jl
sub
fimuls
repnz
sahf
push
lods
xor
lods
adc
fistpl
adc
adc
push
cmp
xor
xor
stos
orb
sub
push
roll
adc
inc
stos
sbb
loope
ljmp
div
mov
push
xor
mov
movsb
add
inc
adc
cmp
nop
push
cmp
cmpb
jo
daa
jno
je
bswap
jg
aad
mov
shrl
cmp
ret
movsl
les
mov
adc
push
or
ljmp
lret
rcll
mov
xchg
adc
adc
or
add
nop
add
adcb
subl
pop
es
icebp
sub
or
lret
cmp
dec
sub
enter
dec
clc
in
fsubs
fcoml
adc
das
stos
cli
xor
inc
loop
in
inc
cs
sbb
clc
mov
sbb
repnz
sub
sub
dec
aam
mov
adc
dec
mov
mov
add
mov
mov
cmp
sub
lods
and
add
add
lods
mov
pop
pop
adc
fcompl
decl
xchg
xchg
pushf
test
push
adc
pushl
fs
sbb
dec
fnstenv
popa
jmp
dec
xor
es
mov
int3
push
add
shll
inc
inc
add
push
dec
push
add
jo
xchg
fisubs
inc
mov
or
lods
pusha
cmp
sub
fs
and
rclb
outsl
loopne
lcall
cli
and
and
xchg
and
in
xor
movsl
aas
cmp
nop
andb
shl
add
rol
xchg
dec
jmp
add
or
pusha
popa
int3
subb
movsb
or
lock
cli
and
nop
xchg
ficoml
lods
rcrb
add
mov
iret
jb
xor
repnz
fists
cld
call
cmp
or
or
rorb
pop
pop
pusha
or
addr16
lods
pop
outsl
push
rorb
lock
add
cli
and
lock
adc
sbb
xor
and
iret
or
or
rorb
xchg
push
int3
ret
jp
fs
fistpll
insl
and
addb
cmp
or
or
jmp
or
popa
rcr
xchg
mov
push
push
and
scas
fcmovnu
cli
xchg
adc
rcr
ljmp
mov
sbb
xor
push
in
repnz
rcrb
out
xor
inc
push
or
add
lret
orb
lea
pusha
and
ret
inc
jno
mov
subb
push
outsl
daa
inc
xchg
push
xchg
or
jp
push
add
mov
pushl
add
or
jp
divb
pop
xchg
out
sub
add
and
cmp
scas
subb
add
mov
add
add
cmp
add
das
inc
xchg
out
add
adc
add
lods
add
push
adc
shlb
push
mov
add
insb
sub
out
ret
shrb
clc
fnsave
pop
in
jbe
inc
push
mov
sub
mov
enter
aam
cmp
mov
fisttpl
cs
cmp
sbb
push
adc
rcr
or
xor
push
ror
fldl
ss
adc
repnz
adc
or
adc
jle
sub
pop
and
push
dec
add
testb
xor
jp
dec
outsb
xor
scas
or
dec
mov
push
ret
mov
lahf
pop
dec
fidivrs
std
xchg
rep
and
add
mov
loop
fimull
lea
xchg
mov
test
out
hlt
add
movsb
sub
add
shll
add
dec
adc
push
cmp
cmp
pop
shr
add
movsl
fsubr
cmp
pop
mov
xchg
add
ljmp
fstl
pop
push
jmp
push
xchg
fstpt
sbb
mov
mov
xchg
int
roll
icebp
add
lcall
stos
sahf
ds
cs
pop
nop
test
push
dec
xchg
inc
data16
push
sub
adcl
outsl
add
fists
mov
addps
dec
je
inc
shll
scas
xchg
loopne
aaa
in
push
push
cwtl
xchg
sbb
pusha
orl
test
pop
or
fldpi
iret
movsb
ret
xor
rolb
inc
adc
jecxz
push
loopne
shlb
enter
push
lahf
fstpl
fisubs
rol
outsl
incl
daa
adc
movsl
xchg
add
fldenv
and
mov
push
adc
add
fwait
addb
push
adc
cmp
hlt
push
or
push
int3
xchg
adc
jbe
xor
or
pop
xchg
rorb
out
jmp
movsl
sarb
sub
and
pusha
xor
ret
call
or
sub
outsl
ja
movsb
xorb
sbb
call
clc
mov
hlt
cmp
push
and
fistpl
mov
adc
fsts
roll
push
aad
test
add
pop
xchg
mov
shlb
pop
loop
ljmp
dec
lock
adc
cmc
movsl
add
mov
xor
insb
aad
pop
sarl
sbbb
adc
inc
pop
and
fsubl
andb
adc
rclb
cmp
adc
clc
inc
mov
rcrb
pop
sbbb
adc
push
add
or
and
ljmp
mov
and
test
push
adc
fisubrl
aad
sahf
jp
push
vmovss
movb
lock
mov
andl
ficomps
push
jp
icebp
notb
mov
nop
pop
lods
cmp
movsl
lods
and
leave
addl
xchg
rcll
dec
fsubs
mulb
hlt
fsubl
sbb
rolb
movsb
cltd
or
or
add
rcr
push
dec
cmp
add
movsl
testl
pop
aam
jg
daa
mov
xlat
ljmp
push
popa
pusha
adc
add
in
xchg
push
sbb
sub
cld
lods
or
add
push
xchg
jp
jb
jb
inc
or
and
sbb
and
xorb
int
or
add
stc
sub
mov
xchg
dec
rorb
std
fnstcw
push
push
daa
xchg
cmc
loopne
mov
cmp
mulb
shll
fadd
push
cmp
push
subb
add
mov
pop
push
jle
and
xor
lods
mov
xchg
fadds
and
sub
and
add
dec
mov
mov
cmc
push
mov
sbb
sub
in
push
in
sar
push
out
push
pop
and
push
ret
adc
sbb
pop
inc
push
push
ljmp
decl
xlat
loop
xor
push
pop
dec
jecxz
shl
pop
mov
sub
and
ret
fld
sub
pop
pusha
adc
xchg
mov
xchg
xor
push
mov
add
std
andl
sarl
es
pusha
or
mov
pop
ja
subb
sbbb
shrl
add
cs
test
shrb
rorb
xchg
movsl
xchg
xchg
fwait
cmpb
or
outsl
loope
inc
mov
cltd
movlps
add
pop
movsb
hlt
inc
fbld
hlt
pusha
sbb
orl
cmp
decl
push
fadd
add
push
pop
add
add
adc
adc
push
jbe
sar
aad
loope
add
aad
push
ljmp
adc
and
jecxz
jecxz
add
pop
cltd
mov
rcll
adc
lock
icebp
add
test
mov
cli
orb
and
clc
mov
mov
add
fidivs
cld
outsl
add
sub
loopne
mov
sub
scas
pop
and
mov
or
jo
add
and
pop
pop
inc
push
lods
sub
adc
das
jle
subl
add
add
test
jle
mov
out
pop
movsb
inc
test
fisubs
das
pop
rcrb
xlat
add
call
inc
sbb
in
push
cmp
and
ss
jecxz
jmp
fiadds
outsl
or
pushf
fldenv
pop
and
outsb
pop
sbb
sub
mov
mov
stc
into
or
push
push
add
mov
outsb
or
mov
mov
test
and
rclb
dec
outsl
sbb
or
cmp
rclb
jge
pop
push
pop
dec
pop
test
cli
and
push
xor
pop
and
xor
adc
popa
xor
xchg
pop
add
add
test
or
sub
pushf
and
adc
rcrb
or
fidivs
cmp
xlat
ficompl
pop
cld
mov
inc
arpl
adc
shll
push
add
mov
lock
movsb
and
loopne
and
jo
dec
mov
push
push
mov
xchg
or
incb
cltd
xlat
int3
fnstcw
rcrb
mov
pop
popa
fstpl
adc
lods
pop
inc
sub
jmp
cwtl
cli
fucomip
cli
xchg
fstps
add
inc
dec
fldl
in
shrb
cvtps2pd
mov
mov
decl
add
jb
ljmp
sbb
movsb
loope
loopne
ljmp
push
fisttpll
xchg
pop
mov
sub
adc
je
push
xor
mov
stos
ss
xor
fiadds
repz
ljmp
sbbl
xchg
push
sub
add
jg
sub
xchg
sub
xor
lods
fistl
and
pop
popa
mov
adc
jle
pushf
sub
xor
cs
fildl
ss
pop
and
and
test
push
add
andb
xor
xlat
in
movsl
fldl
lods
push
mov
incl
and
xor
pop
not
push
jo
mov
nop
sar
or
pop
fwait
inc
and
cmpl
cwtl
mov
fistpll
adcl
push
sub
call
fs
shrl
ffree
cltd
add
daa
pusha
and
sub
push
xchg
mov
pop
cltd
mov
mov
xor
jecxz
addb
mov
cmp
and
and
mov
fists
fsubs
sub
enter
lcall
rcrl
add
pushf
cmc
sub
and
adc
pushf
add
and
inc
sbb
push
sar
rolb
mov
adc
cli
cmp
pop
lret
dec
outsb
jmp
repnz
or
out
cmpsb
inc
popa
shl
or
shlb
mov
bound
xor
movsl
les
fistps
insl
or
fwait
movsb
cmp
or
imul
add
mov
nop
orb
add
pop
adc
loopne
ss
ficompl
push
shll
add
mov
mov
mov
jmp
loope
shrl
or
cld
sub
push
enter
cmp
cmp
and
mov
test
mov
and
ljmp
jo
xor
or
int3
pop
loopne
add
stos
sbb
or
or
or
mov
into
or
adc
or
push
sbb
add
adc
sar
idivb
adc
add
pop
movsb
rcl
cmp
adc
aaa
in
mov
movsb
popf
pushf
dec
push
or
push
or
or
andl
xchg
xor
ss
xor
push
xor
lock
movsb
enter
mov
xor
je
cmpsb
in
fidivrs
push
adc
fisubrl
dec
sub
aad
and
movsb
xor
and
cmpsb
leave
ret
nop
and
mov
xlat
add
xchg
cli
and
outsl
dec
xor
xor
roll
loopne
push
add
add
lea
pop
fstps
xchg
xchg
ret
sarb
sbb
ljmp
movsb
or
popa
add
pusha
add
sbb
xchg
cmp
es
adc
outsl
decl
nop
stc
div
inc
mov
lret
fildl
add
stos
jg
pushl
xchg
add
push
es
adc
nop
popa
cld
fildl
add
inc
aaa
icebp
mov
jb
cmc
xor
xchg
push
inc
cmp
and
xor
and
shll
sub
push
push
sbb
iret
and
ret
fcoms
je
cmp
shlb
jg
push
push
add
and
mov
lock
cmc
pop
lods
and
lock
ror
mov
scas
call
add
sarb
test
jmp
iret
xor
pushf
repnz
outsl
sub
cli
adc
pop
ret
cmc
lcall
es
xor
insl
movsl
popf
es
add
push
icebp
jg
fistps
pop
mov
push
cmp
add
inc
ret
movsl
stc
inc
add
mov
xor
add
push
push
and
cmp
mov
mov
movsb
push
fmul
ficoms
mov
mov
sbb
or
add
adc
adc
dec
push
fmull
pop
jo
lret
cmc
pop
mov
lcall
je
loopne
adc
fnsave
or
inc
mov
ja
shlb
mov
or
jg
or
insb
pop
jne
popa
sbb
cli
pusha
xchg
or
adcb
les
lea
adc
push
mov
cmp
add
add
and
mov
enter
adcl
add
adc
outsl
mov
pop
mov
cmp
and
shl
cwtl
xor
mov
add
and
lret
nop
xor
loope
mov
movsb
frstor
dec
cs
or
jg
mov
mov
sahf
les
add
lock
and
and
xchg
inc
push
jg
fwait
sbb
lock
inc
inc
loopne
mov
movsb
fnstenv
push
std
adc
ret
add
ret
adcl
stos
or
sub
cmp
dec
mov
in
mov
add
shrb
add
in
lcall
or
or
add
adc
mov
daa
lretw
outsl
adc
ljmp
or
adc
push
aad
jo
mov
xadd
sub
push
sbb
popa
je
mov
xchg
shll
or
je
add
daa
loop
movsl
push
add
inc
pop
xchg
pop
add
cmp
add
or
or
decb
xor
dec
or
jo
push
dec
jl
cmp
xchg
mov
mov
sbb
adc
push
push
nop
cltd
insl
inc
sub
rolb
sbb
popl
push
xchg
mov
fisubl
add
imul
xor
int
pop
out
add
push
sub
and
sbb
xlat
shlb
and
add
mov
outsl
adc
pushf
sub
js
add
push
mov
add
into
test
adc
lret
shufps
xchg
add
aad
jmp
and
push
push
inc
ljmp
ret
insl
shr
fadds
jl
xchg
lcall
or
cmp
mov
push
std
decl
cmp
add
add
scas
push
cmp
dec
xor
insb
ds
aad
std
jg
and
add
pop
loop
nop
add
adc
inc
inc
loop
jae
scas
incl
or
xchg
lret
xor
dec
pushl
jo
sahf
fstp
add
and
cmp
and
sbb
test
outsl
and
mov
push
sub
sbb
inc
sbb
mov
gs
pop
xlat
cmp
ljmp
push
loopne
xor
xor
inc
add
andl
mov
push
test
lods
xor
add
dec
inc
insb
imul
incl
add
and
push
push
repnz
fcoms
jmp
xchg
hlt
fwait
lds
pop
ret
inc
and
ficoms
insl
pop
bound
mov
mov
sub
cmp
pop
push
inc
daa
ljmp
adc
div
and
rol
cmp
xor
sub
xchg
lock
ffree
mov
mov
jp
jns
and
roll
stos
ficomps
sahf
cmpb
add
sbb
mov
mov
lea
inc
mov
adc
fldl
or
xchg
or
out
push
push
and
add
mov
filds
mov
pop
rorl
in
xor
pushf
cmp
or
mov
js
sbb
icebp
xchg
xchg
sub
adc
orb
lds
mov
in
and
cmp
xchg
and
dec
lcall
aam
mov
addb
mov
or
mov
aam
inc
and
dec
push
inc
in
xor
inc
add
adc
cld
push
cmc
mov
jb
push
mov
mov
xor
js
push
mov
pop
les
popa
adc
sub
sbb
inc
inc
or
test
mov
xor
loopne
push
mov
mov
andl
or
ljmp
pop
pop
test
ficompl
lods
orb
test
pusha
pop
mov
xor
loop
or
mov
mov
and
or
sahf
fsts
xor
pop
fcom
mov
push
mov
decl
mov
mov
push
popa
loopne
or
adc
pusha
mov
or
add
lock
cmp
jg
or
pop
mov
pop
andl
jmp
rolb
push
imul
mov
inc
push
mov
clc
mov
rcrb
sub
loopne
xchg
inc
push
cld
das
xchg
addb
aaa
loopne
mov
incl
bound
and
fidivrs
or
lret
aam
cmpl
sub
xchg
mov
or
insb
pop
popf
push
push
fists
pop
bound
and
add
cmc
std
pop
aaa
jmp
movsl
aam
jl
cmp
pop
iret
push
adc
shll
in
sub
or
or
lds
aam
stos
mov
cld
inc
pop
rol
loopne
inc
lods
and
cmpl
or
lods
push
add
addb
mov
rcrl
cmp
mov
fnsave
mov
mov
in
pop
add
add
dec
ja
push
mov
mov
jle
aaa
adc
mov
inc
inc
mov
mov
mov
out
addr16
mov
pop
lods
push
dec
movsb
add
shll
pop
add
add
and
push
xchg
push
push
inc
icebp
adcb
inc
inc
jmp
movsb
mov
adc
mov
cmp
filds
adc
addl
sarb
mov
sbbl
jmp
icebp
add
cmpb
rorb
push
cmp
xor
inc
inc
fcmovnbe
stos
xor
fcos
push
mov
inc
push
ret
add
cmp
movsl
fildl
sbb
stc
test
mov
mov
shlb
cmp
mov
insb
clc
loopne
jo
push
sbbb
jae
dec
cmp
inc
mov
xor
rcrb
xchg
imul
aam
das
addb
xchg
jb
fbld
pop
pop
leave
push
add
cltd
xor
jo
aam
xor
outsl
adc
inc
xor
mov
nop
sbb
adc
insb
loop
mov
jle
pop
mov
fiadds
cmpb
xor
mov
lret
loope
add
rcll
repnz
sub
inc
outsl
aas
cld
inc
xchg
jo
roll
int
cmp
call
movsb
fiadds
roll
or
es
dec
jmp
sbbb
inc
es
lock
cmp
inc
imul
pop
pop
add
mov
pop
push
clc
add
aaa
orb
cmp
push
inc
sarl
outsb
jno
cmp
ljmp
pop
mov
adc
dec
int3
mov
inc
pop
pushf
push
mov
add
push
sbb
add
or
adc
dec
push
mov
push
sbb
adc
push
mov
cld
inc
jecxz
jo
mov
mov
jb
loope
aaa
push
dec
and
push
or
pop
push
xchg
cmp
movsl
pusha
loope
add
stos
notb
mov
cmp
call
xchg
cmp
arpl
dec
rolb
adc
lock
loopne
sub
xor
bound
mov
int3
imul
aad
cmp
mov
rclb
sub
push
adc
lods
xchg
es
lds
jg
lock
add
pop
push
mov
mov
mov
jbe
mov
adc
pop
push
orl
add
cld
das
in
xor
inc
cmpsb
pop
push
rorl
rcll
repz
jb
ret
mov
jp
ret
bound
shlb
and
cmp
lcall
fadd
imul
and
or
pop
jmp
xchg
sbb
and
or
fbld
jno
outsb
jg
mov
jo
out
adc
into
in
je
sahf
or
jne
add
add
push
ss
mov
clc
in
mov
in
or
add
or
enter
add
push
jo
push
adc
or
rclb
outsb
add
sarl
in
mov
or
subb
xorb
jmp
or
icebp
push
aaa
xchg
push
nop
cmp
lfs
mov
shrb
push
xor
xor
std
jo
nop
add
xchg
sarb
clc
fs
adc
popf
adc
inc
jecxz
cmp
cmp
push
inc
movsb
or
subl
sub
fcoml
mov
add
sub
push
or
xchg
sarb
push
rcrl
cmp
addb
or
adc
ret
or
mov
add
mov
cmc
sbbl
adc
add
loop
jg
add
cs
pop
mov
mov
mov
push
fcmovnbe
cmp
add
outsb
mov
mov
mov
stos
jne
imulb
pop
pop
addb
mov
cmp
adc
push
fldl
std
cmpsl
xorl
add
push
add
cld
outsl
fists
pusha
cmp
xorb
and
xchg
or
mov
rclb
in
xchg
jo
ficoms
cwtl
and
sub
and
inc
shll
inc
dec
shlb
push
inc
push
add
shl
outsl
call
push
dec
cmc
xchg
push
outsl
fwait
outsb
sub
push
adc
nop
ret
or
pop
xchg
ljmp
lcall
mov
adc
push
lds
push
or
pop
inc
push
sub
xchg
add
pop
add
call
nop
fs
add
sub
push
xchg
add
inc
push
xchg
adc
add
pusha
xchg
push
cli
or
movsl
xchg
rorl
stc
jno
and
xor
mov
xor
mov
push
pop
inc
test
loopne
xor
cli
xor
cmc
mov
lret
out
fs
add
cmp
lea
sub
inc
jmp
movsl
cmp
mov
jne
shll
mov
int
adc
add
adc
mov
cmp
roll
or
cmc
cmc
jl
loope
inc
aas
clc
outsl
mov
cs
lcall
lcall
shl
adc
incl
je
aad
cmp
dec
movsb
sub
sbb
cmpsl
movsb
sar
js
mov
je
adc
sbb
rclb
mov
adc
xchg
add
adc
test
hlt
mov
mov
cmc
fisttpl
std
cmp
inc
add
ljmp
dec
sahf
je
mov
mov
rclb
jge
add
ljmp
fdiv
push
lea
ret
pop
add
add
mov
push
adc
testb
mov
sbb
leave
mov
or
lods
push
cs
xor
push
dec
and
add
scas
mov
fcoml
xchg
cmp
or
mov
add
mov
xchg
mov
ljmp
bound
dec
aad
add
cmp
lahf
shll
iret
push
inc
mov
xor
pushf
add
fnstcw
test
nop
icebp
lds
push
nop
ror
cmpb
mov
dec
add
adc
decl
mov
inc
mov
push
inc
adc
add
or
adc
add
repz
lds
push
cmp
xlat
idiv
lea
mov
ficoml
adc
sub
adc
mov
cld
xchg
clc
mov
mov
addb
dec
dec
addb
jg
mov
push
cli
add
add
loop
subl
mov
jge
or
sarl
stc
xchg
and
or
addl
xchg
jl
push
xchg
dec
push
or
addb
sub
fdivs
lock
adc
or
inc
inc
push
jns
and
jo
pop
push
or
stos
sahf
push
fiadds
or
loope
es
loop
data16
xchg
and
lock
inc
testl
mov
test
loope
add
mov
inc
xor
daa
fstl
xchg
xchg
dec
adc
push
adc
adc
mov
adc
cld
inc
orl
mov
inc
add
int
clc
dec
ljmp
xor
inc
sub
add
inc
add
shrb
add
addl
roll
inc
int
nop
rorl
push
jo
fmul
inc
inc
xchg
aam
mov
add
pop
add
sub
mov
dec
je
je
mov
je
inc
xchg
inc
adc
fldenv
mov
adc
ja
jb
or
push
push
inc
pop
insl
mov
push
sbb
insl
push
lds
clc
int
adc
jo
mov
rcrb
jp
rolb
cmc
das
push
and
sbb
xchg
jbe
xor
out
mov
bound
sub
rclb
jnp
push
inc
aam
push
sub
add
test
mov
inc
sbbb
popa
sbb
incb
jg
jmp
aad
mov
sbb
mov
addb
jmp
add
pop
aad
add
sub
aaa
movsl
pop
mov
rcrb
pop
imulb
push
pop
enter
mov
or
fiaddl
mov
sub
loop
aad
mov
pop
or
ret
add
add
or
or
in
inc
mov
sbbb
pop
pusha
inc
rcll
inc
andl
rclb
rorb
sub
retw
adc
stos
jl
add
rcll
or
out
pop
adc
jp
jecxz
scas
adc
sub
ja
popa
dec
pusha
sbb
rol
mov
aas
adc
jge,pt
mov
add
std
icebp
adc
fsubl
add
shrb
add
mov
mov
inc
xchg
sub
movsb
or
jecxz
lds
push
pusha
jb
lock
ret
inc
aaa
push
inc
mov
xchg
mov
es
loopne
movsb
fsub
add
and
ljmp
cmp
shll
push
dec
orb
inc
inc
sub
faddl
pop
cmp
dec
mov
pusha
adc
pop
mov
adc
or
mov
or
jb
inc
ds
fisttps
fadds
in
pusha
or
inc
cs
pop
ret
call
add
push
shll
loope
add
and
popf
push
or
mov
int
addb
and
inc
call
outsl
outsb
adc
or
adc
or
dec
scas
mov
pop
aad
shll
hlt
mov
adcb
or
shlb
dec
and
and
hlt
outsl
fidivrl
enter
outsb
in
or
mov
subl
and
inc
mov
inc
rorb
or
cmp
out
pop
push
mov
jb
cmpsb
sub
in
imulb
jp
cmp
sub
lea
and
test
mov
ret
clc
bound
inc
pop
aad
mov
push
jno
mov
cmp
xor
clc
mov
fadds
testb
pop
xchg
xchg
shl
jb
mov
push
dec
ret
les
pop
push
loop
or
xchg
xor
loope
push
and
sbb
mov
add
mov
pop
jno
inc
cmp
add
dec
mov
add
pop
inc
push
push
adc
cli
subb
pop
or
jmp
cmpsb
pop
adc
pop
bound
stos
adc
add
jb
mov
mov
sbb
jle
mov
mov
jl
rcr
push
rcl
rclb
pushf
fcoml
imulb
insb
fs
cwtl
push
repnz
or
sbb
mov
aam
dec
enter
arpl
cli
fs
decl
dec
push
out
lods
scas
add
ret
in
movhps
sub
shlb
adc
sub
and
testb
inc
loopne
fcoms
std
inc
jmp
clc
cmp
daa
jb
add
sbb
ficomps
inc
lock
or
xchg
incl
nop
sub
push
lds
xorb
or
sbb
add
or
pop
das
add
shll
in
mov
fldenv
mov
lret
xor
push
incl
push
xor
outsl
data16
xor
cmp
push
sbb
sbb
add
pop
enter
sub
add
outsb
xor
or
daa
xor
xchg
sbb
mov
in
or
push
or
inc
dec
and
hlt
out
inc
leave
js
xchg
adcb
xchg
sbb
push
xlat
inc
dec
pusha
inc
and
push
aad
add
not
sbb
pop
push
addl
mov
sbb
rcrb
cmp
and
std
mov
or
or
push
add
and
cmpl
add
lods
and
inc
push
add
jle
mov
sub
or
xor
xchg
mov
ja
sarb
pop
dec
in
addb
jne,pt
ljmp
xlat
lock
pop
push
rcrb
fcomip
push
xlat
pusha
cwtl
xlat
push
shll
and
fs
popf
xor
dec
fdivr
incl
andb
rorb
jb
adc
ljmp
in
das
push
mov
int3
lds
lods
add
imul
add
aaa
add
mov
cwtl
jle
in
sbb
mov
adc
sbb
andb
aam
shlb
mov
push
xchg
mov
loopne
or
pusha
scas
push
lcall
addb
pop
ret
add
outsb
les
inc
mov
inc
std
iret
or
xchg
dec
andl
hlt
add
out
outsb
push
mov
jb
and
ds
js
push
cmp
add
adc
and
add
mov
lods
pusha
adc
enter
gs
add
inc
sarl
inc
imul
push
int3
sbb
or
icebp
push
pop
hlt
push
push
or
call
jecxz
rorl
add
push
xchg
and
add
aaa
sahf
cmp
lock
adc
cmp
add
arpl
orb
fs
popa
push
cmp
inc
call
jmp
roll
dec
fbld
add
int
push
dec
jae
jecxz
add
inc
sub
or
lcall
dec
addl
and
jo
in
icebp
pop
cld
add
in
sbb
data16
daa
mov
decl
ss
xchg
das
sub
and
loopne
lcall
es
rcrb
xor
lock
pop
loope
pop
mov
pusha
outsl
ret
outsb
fcomip
incl
icebp
punpcklwd
inc
or
inc
mov
lret
pop
and
inc
cli
or
xor
in
js
filds
or
pop
cmp
and
mov
lock
or
xor
es
daa
sbb
adc
add
movsb
adc
rcl
aam
jnp
add
pop
xchg
jo
sub
cmpsb
stos
and
je
in
jnp
subb
jmp
incl
mov
mov
sub
fldl
sarb
lods
add
xor
sub
add
divb
imul
jle
mov
shl
in
xorb
sub
sub
lret
dec
dec
decb
dec
pusha
test
ds
outsl
push
lock
cmp
pop
xor
adc
mov
mov
cld
add
and
sub
xor
aad
and
mov
add
fwait
push
and
fdivl
jo
and
sbb
and
sub
dec
xor
dec
lcall
push
lock
mov
dec
rolb
dec
inc
ret
das
pop
sub
and
fldl
mov
lods
dec
ret
js
xor
add
hlt
push
testb
xchg
imul
rorb
or
outsb
mov
xchg
fiaddl
gs
mov
cmp
imul
icebp
or
mov
stos
xchg
xchg
inc
mov
and
jb
or
and
int
cs
jmp
sbb
add
mov
test
pushf
and
pop
add
push
mov
mov
sahf
mov
push
xchg
mov
cmp
xchg
push
jns
dec
adc
xorl
outsb
jp
cmp
aam
in
mov
mov
or
add
ss
pop
or
movsb
lods
push
in
mov
mov
fcoms
mov
mov
fldt
test
out
xor
add
or
xchg
icebp
in
nop
mov
das
xchg
icebp
inc
rcl
sub
into
push
pop
add
cmpsb
pop
cld
call
loope
xchg
lahf
movsb
es
bound
add
lcall
push
jo
fs
xor
xor
lock
mov
popa
cmp
and
jo
adc
pusha
test
loop
mov
add
inc
loope
adc
ficomps
andb
popf
shrb
add
cmp
pop
fsubrs
enter
cwtl
movsl
ljmp
adc
xchg
cmp
add
inc
mov
and
pop
push
jp
jge
movsb
or
cmp
andb
cmp
insb
mov
sub
jle
hlt
scas
mov
xlat
and
sbb
push
add
push
mov
pushl
mov
adcb
add
fbld
pusha
add
rorb
adc
jo
insb
push
add
cld
mov
and
lcall
sahf
shr
outsl
loope
nop
add
mov
cmp
fistps
int
ss
pop
sbb
repnz
ss
mov
loopne
inc
xor
es
inc
sbb
scas
mov
sbb
stos
sub
pop
sarl
inc
stos
enter
fiadds
adc
nop
xchg
pop
ja
mov
flds
inc
cmpsb
gs
dec
ljmp
jmp
push
fildl
icebp
or
mov
pusha
enter
je
push
xchg
sbb
add
mov
push
sbb
ljmp
sub
std
or
movsl
ljmp
sub
pop
in
sbb
xchg
inc
xor
xor
add
sub
mov
cmp
insl
insb
push
std
scas
mov
cld
add
jge
add
mov
xchg
inc
addb
movsl
outsl
int
mov
loope
das
xchg
cld
data16
sbbb
push
in
mov
sbb
xchg
and
es
sbb
and
cmp
outsw
add
add
add
xor
xchg
test
inc
xchg
or
mov
js
icebp
add
xchg
xor
shrl
add
fadd
test
pop
adc
add
cli
hlt
cmpl
mov
cmpb
add
jbe
addb
js
icebp
negb
cli
fs
sbbb
mov
sub
mov
imul
jo
into
loopne
mov
aam
and
xchg
insb
sub
xchg
lret
or
cmp
ret
pop
adcl
add
dec
mov
orb
push
lea
or
test
push
or
jg
dec
pop
ret
inc
repz
orl
shrb
subb
aam
mov
outsl
fnsave
adc
inc
addl
fdivr
stos
incb
movsl
and
pop
sbb
xchg
repnz
outsl
fwait
pop
sub
add
test
outsb
fadd
sub
adc
cld
mov
mov
and
fidivs
or
adc
ret
pop
pusha
daa
subb
xor
mov
inc
pop
rorl
adc
lods
push
inc
adc
es
movsl
mov
pushf
add
or
enter
in
rolb
sar
or
fdivs
xchg
jae
or
mov
push
xchg
jle
loope
clc
fisttps
xchg
add
pop
rolb
popa
out
xor
pop
insl
clc
push
mov
inc
push
fisubrl
lods
inc
sarl
mov
lret
or
xor
cmc
cli
and
add
bound
shlb
add
sbb
xchg
mov
jge
add
inc
scas
nop
rolb
add
push
cmp
dec
subb
arpl
lock
mov
lret
xor
dec
cmp
pop
inc
outsl
xchg
out
clc
push
and
dec
mov
mov
scas
rorl
cmpsl
push
pop
test
jo
mov
cmp
inc
ret
add
jb
ja
sbbb
popa
daa
movsl
jp
lods
in
incl
add
inc
in
xor
pop
int3
jne
add
data16
movsb
lret
inc
inc
mov
xchg
lods
push
rorb
pop
sub
dec
inc
cmp
ss
icebp
in
pop
shll
xor
insl
in
jle
sbbb
cmp
dec
rorb
mov
push
aaa
sub
cmp
xor
das
mov
decl
shll
les
out
adcb
sti
lds
and
sar
pop
pusha
adc
and
out
sbb
and
xchg
rol
fstpt
jbe
inc
and
rcrb
cmp
mov
inc
mov
jmp
in
push
cmp
js
pop
add
adc
push
jno
loopne
adc
mov
cmp
mov
in
and
in
popa
loop
inc
repnz
rorb
imul
pushf
add
or
sub
mov
cmp
sub
stos
sub
adc
movsb
incb
adc
adc
mov
cmp
or
jbe
inc
xlat
aaa
jle
loopne
adcb
or
xchg
add
mov
xor
mov
ret
ds
je
sbb
movsb
test
outsl
cmpl
pop
pop
pop
leave
add
mov
xor
or
movsb
mov
mov
and
jmp
pop
push
sbbb
and
xor
jmp
fnstsw
jp
in
icebp
fistps
or
pushf
mov
push
cmp
shl
fiadds
clc
jg
add
and
cmp
cmp
idiv
inc
lcall
mov
or
inc
mov
inc
pop
lock
cs
lcall
outsb
lods
mov
xor
dec
fsub
lea
add
jg
jmp
mov
ss
push
lods
subb
inc
roll
mov
mov
inc
sub
mov
push
and
mov
adc
adc
mov
rcll
mov
add
mov
push
push
mov
loope
in
mov
mov
lods
fisubl
loope,pn
mov
subb
or
and
mulb
xchg
push
adc
loopne
subb
pusha
xchg
loopne
cmpb
mov
imul
lcall
or
and
adcb
mov
loope
sub
fsubrl
adc
rcl
push
nop
cs
iret
mov
add
mov
add
or
loope
sbb
movsl
rclb
inc
sarl
icebp
or
xor
adc
jbe
cmp
mov
jb
cmp
ss
ret
sbb
sbb
or
adc
and
xor
imul
movsl
mov
pop
sbb
jecxz
movsl
std
mov
mov
xchg
jl
cmp
pop
scas
testb
jge
daa
add
cmc
adc
adc
adcl
add
ljmp
adc
add
les
push
outsb
add
loope
adc
scas
xchg
jbe
fiadds
adc
sbb
dec
adc
inc
mov
pop
pop
cmp
mov
or
or
mov
cmovo
add
pop
scas
fstpl
cmp
inc
adc
icebp
xchg
movsl
das
cmp
sbb
jo
xlat
or
lret
mov
je
popa
bound
cmpsl
sbb
dec
test
adc
jb
xor
mov
adc
movsl
pop
rolb
nop
faddl
pop
jg
dec
mov
xchg
jl
push
xor
rorb
sbb
jb
pop
or
incl
pop
ljmp
xchg
outsb
sbb
outsl
and
add
xchg
mov
and
test
add
pop
rcrb
sbbb
add
or
fnsave
pusha
aad
ljmp
lret
outsl
clc
pop
and
fldenv
add
adc
leave
pop
adc
xor
sbb
xchg
fcoms
add
stos
jns
add
jmp
push
mov
sub
add
dec
xorb
mov
inc
rorb
pop
xor
and
dec
pop
sub
imul
cld
push
push
insb
push
cmc
adc
add
sti
mov
addl
rolb
fdivs
decl
inc
loope
les
inc
cmp
push
push
jecxz
add
or
gs
inc
fwait
int
ss
cmp
mov
add
sub
inc
push
cmp
inc
adc
addr16
jno
xchg
fnstsw
cs
cwtl
jo
popa
aas
subl
jbe
loop
inc
fildll
rcrb
pop
lea
or
movsb
repz
sbb
and
cld
jmp
xchg
cs
scas
mov
push
mov
leave
add
in
sbb
ret
leave
sub
es
adc
mov
mov
sar
push
push
and
pop
inc
rclb
loope
fucomip
orb
or
and
cs
repnz
xor
xor
cmp
movsb
mov
sbb
xor
xchg
or
je
add
mov
or
inc
loope
imulb
cmp
inc
dec
pop
aad
sar
loope
fsubs
push
pop
movsb
rcll
adc
loop
es
scas
and
les
inc
adc
and
xchg
sub
add
inc
pop
adc
mov
loopne
xor
or
mov
adc
int
in
loop
in
in
shll
jmp
faddp
sarb
and
movsl
call
in
loope
fsubr
call
cmpsl
and
xchg
mov
movsb
test
adc
mov
cli
push
pusha
cwtl
mov
mov
xchg
mov
xlat
loopne
push
and
jne
add
xchg
loope
sbb
shll
fidivrs
cli
adc
lods
mov
nop
xor
xchg
mov
jo
add
call
in
push
lods
popf
add
mov
data16
adc
shll
cli
and
ljmp
mov
add
mov
pop
orb
loopne
pop
movsl
movsl
in
pop
mov
test
add
cmpsl
or
or
pusha
sbb
std
jmp
fisubrl
xchg
xor
fisttpll
ljmp
cmp
or
add
test
rcrb
fnstcw
inc
mov
hlt
sub
mov
call
or
cmpl
mov
adc
and
pop
add
push
xchg
sbb
and
test
add
push
pusha
cmp
rorl
and
push
push
mov
into
add
int3
add
inc
xor
adc
icebp
inc
fiaddl
cmp
mov
subb
sti
adc
out
mov
sahf
pop
fisttpl
je
lcall
les
add
add
add
pop
ret
add
lcall
sarb
repnz
mov
add
mov
movsb
xor
out
ret
cmp
or
push
or
cmpsl
imul
leave
lret
sbb
lret
int
pop
mov
or
pop
shr
lock
push
jo
insb
pop
xor
mov
jb
les
jo
lock
dec
pop
pop
and
jb
mov
adc
cmp
fcmovbe
xchg
scas
aad
pop
dec
xor
xchg
clc
movb
sbb
dec
es
shrb
dec
mov
inc
leave
sbb
out
nop
xor
mov
cmp
and
cmp
dec
add
test
mov
ljmp
push
and
test
push
xchg
rorb
rclb
fiadds
pusha
and
andb
sahf
sub
cmp
add
sub
aad
pop
cs
add
outsb
dec
or
pushf
call
lds
mov
sub
or
rolb
mov
xor
scas
jp
testl
mov
adc
sbb
cld
jl
and
inc
icebp
and
fisubrl
mov
add
xor
push
mov
pop
or
cmpsb
push
push
inc
inc
cld
das
shrb
sub
push
sub
clc
ljmp
jo
or
mov
pop
pusha
pushf
adc
xchg
loopne
ret
adcb
mov
cs
mov
and
xchg
sbb
orl
test
or
or
mov
or
cld
lret
mov
icebp
cwtl
and
mov
xor
inc
sub
loop
inc
mov
push
inc
lcall
mov
mov
dec
mov
xor
shl
addb
jge
hlt
test
cmc
orl
add
xor
pop
shlb
call
insb
in
or
shrb
mov
adc
and
push
xor
xorl
sbb
fnstsw
inc
sbb
movsb
scas
jo
push
adc
xor
xchg
adc
in
ret
mov
sub
out
or
or
adc
cmp
mov
out
loope
cs
pop
add
pop
add
adc
push
cmp
push
fcmove
ss
mov
xchg
or
test
mov
add
add
and
dec
lahf
test
ret
lahf
aad
mov
rcrb
and
adc
or
or
adc
nop
enter
sbb
adc
mov
out
stos
sub
sbb
scas
add
pop
xchg
rclb
cli
pop
imul
loopne
les
lods
dec
enter
inc
mov
mov
jp
lret
pop
imul
push
adc
fs
or
rcr
and
addb
cmc
adc
mov
pop
mov
dec
mov
dec
jb
mov
add
sub
das
xchg
out
lods
jp
adc
jns
push
cmp
orl
dec
jo
fnstcw
dec
adc
cld
push
fsts
int3
icebp
subb
aad
cmc
test
cld
add
nop
andl
addb
inc
xor
add
ret
mov
pop
push
sbb
mov
and
add
and
inc
add
test
incl
jo
pop
fimull
fdivl
jb
daa
mov
cmp
xchg
imul
pop
cmpb
push
fisubrl
scas
icebp
mov
sub
int
mov
call
xchg
int
or
inc
jp
push
les
xor
adc
or
push
test
movsb
in
jl
ret
js
dec
jp
pusha
add
rclb
icebp
ljmp
enter
shlb
filds
sbb
add
add
cmc
pushf
cmc
adc
xchg
ja
outsl
sbb
sbb
cmc
add
stos
cmc
push
sbb
or
or
inc
decb
flds
add
aaa
push
sbb
sbbb
vunpcklps
scas
push
mov
adc
add
mov
xorl
pop
mov
cs
shlb
lods
outsb
das
pushf
jb
inc
inc
inc
shlb
aad
sbb
inc
jbe
clc
scas
pop
push
pop
cmpsb
loop
inc
push
pop
les
inc
cmp
cmp
push
or
js
xorb
lock
push
rorb
cmp
shlb
push
inc
push
mov
adc
imul
push
or
push
inc
cltd
mov
es
adc
or
popa
std
and
lret
xchg
gs
lds
loopne
xlat
fldenv
and
add
dec
rcll
mov
rolb
and
add
xor
jle
dec
push
cmp
cmpsl
or
push
pop
fs
popa
and
lods
mov
sub
adc
jl
sbb
icebp
mov
rorb
in
and
js
outsb
or
add
xchg
dec
add
add
push
pusha
add
cwtl
inc
in
mov
or
inc
or
lock
push
daa
or
ss
push
nop
fld
insb
push
or
loopne
addl
nop
pop
mov
sbb
push
subb
xor
in
cltd
es
movsb
in
outsl
mov
clc
mov
arpl
cmp
cmpb
fisttps
shl
mov
pop
aam
dec
rol
add
add
imul
cmp
fldl
and
mov
adcl
rolb
cmp
lcall
mov
dec
sbb
sub
mov
pusha
cld
inc
ljmp
lods
test
das
add
popa
inc
enter
push
adc
mov
repz
push
decl
rcrb
sub
push
inc
cli
push
add
add
ds
cltd
addb
cmc
movsl
pop
and
icebp
and
add
adc
mov
add
aaa
insb
mov
cld
mov
push
push
or
pop
into
inc
inc
adc
and
es
loope
lret
lods
loopne
shrb
out
cmp
adc
adc
or
enter
fucomi
outsl
stos
movsl
pop
and
lret
add
add
sbb
aaa
fcompl
push
mov
cli
inc
ja
call
xorl
and
and
idivb
lds
leave
add
lods
add
shlb
and
leave
sub
push
or
nop
and
pusha
clc
jecxz
out
nop
push
les
and
rcrb
rorl
cs
stos
add
xor
or
pop
hlt
ja
in
repz
mov
sub
dec
fwait
jne
shll
jno
add
shr
push
mov
add
dec
adc
mov
xor
inc
add
pusha
jl
enter
push
xchg
push
ljmp
in
sbb
xchg
pop
mov
or
movsl
ret
or
xor
jo
mov
dec
dec
pushl
pop
cs
nop
adc
push
ret
andb
es
add
mov
push
mov
mov
test
ljmp
xchg
rorl
gs
inc
or
pop
lret
xorb
clc
push
mov
mov
arpl
push
mov
ss
pop
sbb
outsb
mov
xchg
pop
push
adc
add
mov
mov
jl,pt
add
lret
mov
std
cmpsb
inc
movsb
add
not
push
lahf
fldcw
push
add
cs
xlat
test
lock
cltd
movsb
mov
push
inc
mull
or
push
cmc
sub
inc
insl
insb
push
out
test
and
mov
xchg
out
outsb
inc
je
nop
imull
orl
pop
xchg
rcll
add
std
aaa
inc
clc
push
add
push
inc
pop
or
add
aaa
sub
lock
and
mov
imul
ja
add
inc
sub
fcmovnbe
jmp
adc
scas
adc
movsb
mov
mov
scas
pop
or
add
fldenv
mov
loope
xor
jo
div
add
push
push
popf
adc
jmp
fimull
add
hlt
sbb
call
nop
sub
adc
mov
cmc
or
ljmp
adc
add
into
pop
lea
dec
xchg
mov
inc
std
mov
fstl
icebp
mov
fsubl
push
lods
push
mov
inc
add
inc
add
pusha
mov
mov
lods
movsb
roll
pushl
dec
cmp
movsl
out
and
dec
lods
mov
inc
out
fiadds
cmp
push
jl
or
adc
inc
enter
mov
lret
jle
add
addl
rcrb
cmp
add
or
pop
nop
ficomps
adcl
mov
pop
sbb
inc
and
sbb
and
sbb
mov
ss
out
adcb
inc
movsl
hlt
cltd
inc
jne
push
add
xor
mov
pop
les
outsb
mov
sbb
js
cmp
add
push
or
cmp
aam
movsl
lds
mov
mov
xchg
inc
nop
inc
stc
or
cltd
loop
out
adc
add
cmp
es
adc
out
fidivrs
call
cmp
push
and
inc
outsb
or
jne
stos
fimull
add
push
pop
mov
shlb
cmp
xchg
inc
out
cli
stos
mov
push
in
js
ret
cmpsb
ljmp
jmp
push
aaa
decl
loop
movsb
xchg
js
inc
enter
sub
in
xorb
cs
dec
test
adc
cmp
cmpsb
inc
retw
or
mov
add
shlb
cmpl
push
mov
jno
in
test
in
add
pushl
sahf
movsb
fcom
add
sbb
sbb
inc
add
pop
mov
popa
or
pop
pusha
lock
mov
push
mov
add
test
nop
adc
cltd
sarl
or
pushl
outsl
mov
sti
in
sarb
rorb
and
fnstsw
or
pop
in
rclb
dec
mov
out
and
popf
mov
add
iret
push
add
in
fistps
add
sbb
add
clc
push
add
push
dec
bound
lret
push
xchg
sbb
jno
xor
clc
mov
icebp
icebp
dec
cmc
dec
xorb
test
decb
dec
bound
adc
sti
adc
adc
icebp
xor
mov
ja
push
enter
pop
mov
lds
or
aaa
or
cmpsb
add
sbb
and
fdivp
aas
clc
stos
ficomps
lock
jmp
sbb
adc
xchg
xorb
imulb
mov
add
loope
fmuls
je
rolb
adc
ljmp
je
xor
filds
push
add
and
cmp
sti
sub
and
inc
cmp
cmp
cmpb
shlb
js
push
xchg
adc
push
cld
outsl
xor
xchg
shlb
inc
add
or
mov
mov
test
add
sub
lds
or
push
add
addl
sbbl
xchg
mov
fcmovnb
ds
out
xchg
pop
and
rclb
movsl
jbe
add
repnz
loop
push
inc
aad
push
ljmp
sub
les
test
std
mov
mov
shlb
xchg
inc
insl
add
mov
inc
js
mov
push
sbb
lock
jg
addl
pop
test
test
inc
push
inc
loope,pn
aas
bound
push
lea
inc
or
sar
push
add
adc
sbb
push
mov
movsb
add
add
add
mov
mov
add
dec
xchg
rolb
sbb
add
or
add
pusha
cld
sbb
loopne
lds
nop
mov
aad
popa
and
xchg
out
add
cmp
repz
cmp
jb
xchg
sub
sbb
fs
sub
and
imul
adc
mov
and
mov
add
inc
dec
sbb
fisubrs
sbb
idivw
cmpsb
push
jecxz
mulb
adc
sbb
pop
mov
inc
sbb
loopne
hlt
jg
cwtl
xor
jbe
adc
insb
mov
out
in
enter
dec
and
mov
inc
sub
outsl
adc
mov
jb
mov
sbb
popf
fdiv
cmc
mov
mov
es
in
add
or
aam
outsb
push
idiv
es
xor
cmp
sub
xor
fwait
testb
xor
or
or
or
cltd
ljmp
pop
rorb
test
fmull
test
push
cltd
sub
imul
cwtl
push
icebp
loop
xchg
mov
or
into
outsl
sub
scas
add
push
sarb
add
pop
pop
cmp
in
sub
add
xchg
xchg
jo
stos
mov
add
lcall
and
dec
mov
mov
shl
sbb
cld
push
fdivrs
addl
push
sub
add
add
mov
aaa
test
cmp
and
je
mov
push
fcmovnu
mov
inc
andl
andb
jecxz
pop
push
shrb
fidivrs
jnp
sbb
add
sub
fwait
imul
add
push
fwait
test
pop
sub
fisubrs
test
mov
loop
fcmovnu
push
mov
or
sahf
mov
jg
cmp
pusha
sub
sub
ja
sub
imul
hlt
pop
sbbl
pusha
sti
mov
pop
mov
mov
pop
push
mov
adc
jg
adc
adc
loop
sub
pop
roll
mov
fldt
rclb
adc
adc
in
pusha
fldl
ja
addb
push
adc
movb
pop
popf
add
and
sbb
in
scas
pusha
cmpsl
daa
sarb
pop
lds
adc
pusha
incl
adcb
std
inc
add
inc
and
lock
mov
sbb
inc
pop
inc
add
sub
pop
mov
jno
mov
inc
sbb
icebp
mov
mov
movsb
jo
jmp
adc
jl
or
dec
stos
movsb
jmp
fldl
add
rorl
or
in
or
scas
push
mov
and
sub
xchg
movsl
mov
testb
adcb
loopne
fdivp
mov
pop
add
lds
cld
pushl
fstl
faddl
cmp
in
test
and
out
data16
ffree
push
bound
or
fnstsw
in
or
test
add
subb
gs
test
push
mov
push
sbb
popa
sbb
adcb
inc
sub
loop
mov
add
and
icebp
fildll
push
inc
sbb
push
dec
inc
push
pop
loopne
pop
add
add
jns
nop
addl
jg
push
cmp
jbe
cmp
push
scas
add
cltd
movsl
and
pop
sub
int
or
cmp
jp
mov
add
sbb
mov
sub
add
jmp
pop
int3
cmp
sub
jne
pop
scas
inc
xorb
mov
sarb
pop
push
loopne
lods
or
pusha
or
pop
es
shl
or
popa
or
fbld
cmp
push
sub
inc
add
shll
js
push
sti
add
popa
subl
mov
test
insl
add
dec
std
cmpsb
pushl
jae
inc
add
xor
movsl
loope
jae
sub
mov
arpl
popa
bound
push
jmp
mov
mov
push
faddp
or
fimuls
loop
cmp
flds
cwtl
and
jbe
inc
add
fwait
xor
sub
ffreep
cmp
adc
fisubrs
inc
cmp
sub
mov
push
and
xchg
jo
cmp
pushf
xchg
push
mov
mov
and
popa
inc
add
xchg
and
test
mov
xchg
nop
adcb
and
loop
pusha
mov
push
inc
inc
cwtl
adc
cmp
pop
add
mov
movsb
xlat
push
enter
fcmovnbe
aam
call
xchg
rorb
insb
and
loopne
add
jecxz
movsb
inc
mov
pusha
add
and
and
callw
lret
cld
adc
mov
pop
fchs
loop
rolb
hlt
push
mov
add
hlt
cmpsb
cmp
adc
lcall
fbld
fnstenv
rcll
mov
es
mov
pop
sub
mov
dec
rclb
jne
or
push
in
adc
sbb
sbb
add
vcvtsi2ssl
cmp
and
fnstsw
call
aam
rorl
test
pop
stos
lret
pop
addl
inc
pop
mov
and
cli
fisttpl
add
subb
sbb
mov
add
test
xor
pop
and
adcl
clc
mov
push
pushf
jnp
and
and
lds
pop
movsb
inc
decl
lock
sbb
movsl
fadd
ss
and
cmp
mov
fidivs
aad
xor
incl
mov
mov
xchg
mov
mov
cmp
es
ja
add
xcrypt-ctr
cmpsl
sbb
add
push
mov
cmp
push
or
rolb
cmp
lock
pop
jmp
inc
clc
cmpsb
filds
mov
or
lock
and
pushl
ljmp
loopne
cli
adc
push
lock
js
fnstsw
rcrl
aam
in
jecxz
jbe
rcl
ds
paddb
mov
xor
sbb
jecxz
shlb
cwtl
push
cmp
sbb
push
test
push
inc
rol
xchg
sbb
das
cmp
inc
jg
mov
gs
pusha
sbb
add
gs
dec
icebp
add
outsl
stos
push
les
mov
pop
mov
mov
mov
or
or
sbb
jg
pop
add
rolb
push
stc
jl
andb
sub
adc
test
xor
xor
insl
or
pop
jno
xor
imul
adcb
cs
add
popf
dec
pop
and
pop
sub
and
je
dec
das
sbb
mov
cmp
ds
cltd
pop
mov
inc
and
sbb
lock
mov
inc
fcoms
js
add
lea
add
cmp
cmpsb
mov
fcoms
add
xchg
adc
push
sub
outsb
push
mov
jo
pop
sbb
jl
fidivl
xchg
pop
nop
add
mov
movsb
push
frstor
ret
or
push
mov
pop
fadds
mov
loopne
xlat
js
aaa
je
sahf
add
mov
jecxz
and
rol
loope
sbbb
and
xor
dec
rorb
inc
loop
nop
xor
pop
test
rcrl
push
pop
pop
push
in
sbb
adc
movl
xchg
jne
inc
xor
sahf
jmp
pop
or
out
leave
add
neg
adc
lods
cld
jo
test
sbb
mov
pop
xor
push
pop
and
push
mov
mov
add
pop
add
xchg
push
cmp
mov
into
pushf
lds
mov
into
and
movsb
rcrl
int
cmpsl
movsl
ret
loop
clc
pop
add
lods
push
add
loope
push
and
lcall
push
mov
mov
mov
mov
test
fidivl
shlb
jno
adc
mov
sub
int3
cmp
rorb
add
jo
sub
invd
cmpsl
cmc
cmp
sahf
bound
add
push
adc
jg
or
das
or
xchg
lds
ss
call
and
test
scas
movsb
call
pusha
gs
mov
sub
push
cmp
gs
push
jmp
bound
mov
jle
pop
cli
mov
fs
addb
cs
xor
push
adc
ret
loopne
les
cwtl
rorl
cmc
xor
xorb
cs
pop
es
incl
test
ret
or
ret
adc
and
mov
jg
test
aam
rcrb
pusha
fldl
mov
jb
cmp
ljmp
adcl
add
mov
loopne
movsb
xchg
adcb
andb
xchg
jp
inc
add
rolb
push
or
shrb
xchg
jno
icebp
sbb
adc
movsb
and
fidivl
push
jp
and
adc
pop
adc
adc
popf
and
adc
cld
test
or
xchg
xchg
xchg
lcall
mov
cmc
and
add
adc
sub
cwtl
jp
or
outsl
jg
out
clc
testb
or
out
out
mov
movsb
or
jge
in
cwtl
pop
push
adc
adc
js
mov
fwait
cmp
push
bound
icebp
adc
mov
mov
push
jne
aaa
and
loopne
add
nop
push
xor
adc
adc
mov
adc
cmpb
push
je
loopne
dec
mov
add
enter
incl
add
adc
aam
loope
adc
nop
stos
mov
cmp
outsb
nop
sbb
lock
fnstsw
inc
or
mov
mov
lahf
movsb
int
adc
fisttps
cmp
imul
sub
scas
mov
push
stc
xchg
add
or
xchg
xor
enter
sbb
inc
shlb
incb
xchg
les
jo
nop
aad
aaa
sbbb
mov
dec
inc
mov
pop
int
xlat
popa
xor
int3
mov
enter
adc
mov
push
add
and
testb
cmpsl
mov
mov
sbb
int3
add
sbb
xchg
adc
or
push
pop
push
mov
cmp
mov
mov
icebp
cmp
xchg
ret
inc
push
imul
push
ffreep
inc
fsubrs
adc
jae
push
add
mov
add
mov
sub
shr
mov
adc
adc
mov
and
pop
les
pop
add
cmpsb
aad
je
mov
sbb
push
or
pop
aaa
cwtl
cmp
xor
sbb
or
imul
fists
mov
mov
loope
or
in
inc
ljmp
pop
faddl
jnp
popa
add
mov
pop
push
add
adcb
sub
outsl
mov
jmp
or
push
or
add
ja
pop
add
pop
sub
dec
ss
insb
xchg
es
ljmp
mov
pop
add
add
xor
mov
push
sti
aas
and
loop
fldl
js
push
nop
ss
aad
and
and
add
add
inc
adc
sub
mov
mov
inc
rol
add
xor
cmp
mov
add
xor
pop
add
loop
fsqrt
jo
jb
and
jbe
test
push
dec
jmp
xchg
jb
pop
dec
and
loop
push
hlt
cmpb
testb
sub
jb
fiadds
or
lods
dec
cltd
push
xchg
imul
lcall
adc
push
cmp
dec
sbb
and
and
sub
add
or
add
rolb
stc
aam
cmpb
sbbb
cwtl
push
add
dec
rclb
out
or
mov
movsb
lret
cmp
mov
inc
mov
add
testb
jb
add
aas
dec
dec
imul
pushf
xchg
shlb
sbb
mov
fisubs
add
rclb
rolb
push
push
mov
push
add
push
add
cmpsl
icebp
mov
lods
add
fadds
cmp
dec
pusha
add
pop
aad
fists
into
shll
mov
xchg
add
les
inc
lret
adc
fstps
ds
add
push
inc
addl
and
or
dec
ret
jbe
pop
add
pop
fmull
rol
lock
shlb
adc
inc
mov
pushf
lcall
or
nop
lcall
inc
sbb
inc
push
repnz
sbb
sbb
sbb
nop
hlt
aad
movsl
icebp
cmpsb
mov
icebp
movsl
loop
or
push
in
xor
clc
cmp
jo
aam
lds
enter
aam
or
adc
mov
orl
pop
movsl
push
cmp
fsubs
in
mov
das
add
xor
mov
sti
cltd
push
xorb
dec
aam
mov
outsb
in
sahf
adc
ret
add
mov
movsb
shll
nop
or
jnp
mov
or
fsubp
fsts
jmp
inc
lea
movb
xor
pop
mov
or
sub
jecxz
mov
and
adc
and
mov
in
outsl
mov
sbb
mov
icebp
je
aaa
inc
js
cmp
lahf
pop
xchg
fucom
adc
in
mov
mov
push
xor
sub
cld
cmovs
pop
sbb
subb
lcall
sub
jmp
dec
stos
fs
mov
xorl
inc
rolb
mov
add
stos
es
orb
or
fwait
cwtl
inc
mov
stc
jp
outsb
inc
aaa
insb
orl
jle
or
or
lds
pop
inc
loopne
orb
arpl
cli
mov
aaa
insb
adc
ja
add
shll
imul
pusha
add
xchg
outsb
pop
inc
xchg
outsb
in
pop
sub
jl
orb
add
dec
scas
adc
adc
pop
add
inc
add
rorb
inc
add
sbb
sbb
jne
pusha
hlt
es
push
xor
sbb
sbb
push
cld
pop
or
outsb
pusha
push
add
mov
push
sbb
lcall
imul
ret
add
sub
call
and
daa
sub
test
jno
push
pop
mov
add
lock
mov
add
outsl
cmp
into
inc
and
orl
push
or
add
shll
add
xor
add
popa
stos
add
fisubl
sub
and
loopne
xchg
mov
and
and
fimull
mov
sub
sbb
mov
and
popl
mov
cmp
sarb
jl
stos
rolb
xchg
shlb
hlt
pop
aaa
data16
sbb
adc
filds
shr
pusha
push
lret
sub
scas
rolb
in
fwait
sar
scas
les
aam
pop
or
cmp
push
aam
inc
xchg
push
inc
rcll
orl
popa
sbb
das
fcomps
imul
jno
es
pop
mov
or
imul
push
aam
and
push
add
adc
push
push
ljmp
dec
sub
xor
pop
sbb
push
and
xlat
add
add
outsl
sub
jo
scas
cmp
push
cmc
jmp
pushl
dec
push
and
and
fldenv
hlt
mov
lods
pop
xor
mov
add
stos
adc
push
add
dec
cmp
bound
add
incl
xchg
lods
xchg
cmp
ja
xchg
dec
cmpb
cmp
cmp
mov
pusha
adc
and
cmp
cmp
xor
mov
sahf
negb
addr16
sub
mov
leave
or
mov
cmp
pop
bound
cmpsb
push
imul
xor
scas
movsb
stc
jbe
cmc
mov
cmpsl
xchg
sub
inc
or
mov
rcrb
sbbb
or
cmp
pop
mov
and
mov
pushf
shl
push
xchg
mov
nop
and
inc
cmp
in
add
inc
mov
cmp
cld
mov
into
adc
lds
xchg
xor
fldl
mov
inc
mov
inc
push
xchg
sbbl
dec
insb
mov
pop
or
lds
dec
and
fistpll
daa
pusha
xchg
aad
add
mov
mov
pop
jo
jne
jo
lods
movsb
cmp
dec
cwtl
or
xchg
popf
mov
movl
lods
mov
pop
push
adc
push
push
dec
xchg
adc
sbb
xchg
mov
std
cmpsb
enter
cwtl
xor
pop
pop
add
mov
add
add
lret
inc
push
pushf
mov
push
mov
ret
jns
lock
sub
shlb
leave
jbe
push
fisttpl
incl
lock
add
jbe
sub
fyl2x
add
add
adc
iret
outsl
push
adc
in
add
and
add
push
nop
push
sub
mov
inc
mov
sar
inc
repz
or
xchg
add
fwait
add
cmp
imul
mov
mov
cmpb
inc
xlat
pop
inc
sub
inc
push
pop
push
cmp
push
pop
push
xchg
aad
adc
jp
movsl
pop
loop
cmp
fs
push
push
pop
leave
hlt
or
ljmp
idivl
and
in
leave
les
js,pn
mov
inc
stos
jmp
push
add
xchg
lock
mov
or
movsl
or
pop
sub
xor
add
mov
nop
pop
or
cmp
push
ret
or
cs
push
sbb
mov
ficoml
xor
mov
mov
mov
sbb
cli
lock
and
fldl
imul
clc
jg
add
movsb
call
inc
popa
xchg
adc
dec
pop
insl
loop
or
jle
movsl
adc
es
add
test
cmp
and
cli
push
xchg
xchg
nop
xchg
rolb
pop
adc
andb
pusha
lods
outsb
inc
aaa
sbb
and
lock
cmpsb
in
sbb
jle
test
fildl
inc
std
in
dec
das
rclb
arpl
add
adc
or
lcall
mov
cmpl
add
pop
rclb
xor
daa
lock
call
push
scas
leave
pop
test
push
shrl
or
bound
lea
lret
adc
pop
in
sub
xor
push
mov
addl
inc
addr16
xchg
sub
add
add
repnz
and
sbb
pop
adc
pusha
cmp
out
cmp
add
daa
pop
or
dec
pop
mov
loop
iret
mov
fiadds
inc
mov
pop
enter
xor
inc
mov
and
jo
sub
or
inc
shrb
loop
adc
sbb
push
add
push
dec
sbb
jb
test
ljmp
add
arpl
xorl
push
and
or
dec
jne
sbb
add
pusha
ljmp
cmpsl
and
fisubs
ret
test
fldcw
adc
pop
push
cs
hlt
aas
xchg
lods
nop
mov
movsb
sub
add
sub
mov
add
in
stos
lcall
inc
or
fcomps
xorb
adc
stos
insb
jmp
incl
add
cld
lods
add
inc
cwtl
sub
mov
lcall
mov
dec
das
cmp
add
scas
stos
sub
dec
push
inc
out
lods
andb
sarl
adc
cmp
fcmovu
daa
adc
add
inc
jmp
add
mov
lea
inc
es
xchg
jecxz
xchg
mov
and
call
loop
int
cld
out
test
test
fistpll
hlt
push
popf
cmpsb
sbb
adc
jmp
int3
push
cmp
cmp
push
aam
inc
sbb
fs
mov
or
cmp
add
mov
or
stos
add
pop
push
inc
push
aaa
movsb
add
inc
mov
push
adc
add
jo
cmpsb
imul
xor
sbb
mov
mov
and
cwtl
adcb
sarl
movb
xchg
cmp
das
adc
pushl
lock
movsb
and
outsb
xor
xorl
sub
out
mov
add
and
push
cs
shll
fstl
push
mov
push
sub
mov
mov
fildl
add
mov
out
mov
movsb
xchg
xor
inc
cltd
nop
add
add
xor
push
push
mov
jno
dec
dec
loopne
bound
pop
lock
sub
mov
nop
mov
push
inc
add
orb
movsl
aam
popf
push
add
push
cld
fildll
fsub
push
rcrb
shlb
add
mulb
dec
ss
jo
jo
adc
add
inc
jmp
imul
jg
hlt
fbld
mov
inc
push
nop
and
push
or
mov
loope
mov
push
sub
daa
push
mov
mov
clc
fcomip
ret
fldcw
jne,pn
int
jae
data16
cwtl
les
mov
pop
mov
inc
cld
push
xor
jecxz
xor
bound
sbb
inc
inc
data16
push
pop
sbb
jo
mov
nop
jo
mov
shll
jo
push
jb
pop
ret
cmp
jne
pusha
or
mov
jb
roll
push
in
loope
movsb
mov
mov
fildl
les
pusha
pop
add
jg
fld
inc
shl
push
inc
cmpsb
add
and
cmc
ja
mov
jb
cmp
mov
sub
rolb
filds
mov
xor
and
rcrb
cmp
inc
add
mov
ret
push
sbb
sub
or
dec
cld
add
es
inc
xchg
nop
or
pop
add
dec
xchg
mov
subb
sub
add
inc
or
xchg
or
mov
std
scas
and
or
shll
or
rorl
test
push
cmovs
xchg
mov
jnp,pt
sbb
data16
sti
rcrb
das
adc
inc
adcb
xorb
sahf
push
ret
add
xchg
sub
push
inc
jbe
push
mov
cmp
inc
test
jne
push
or
and
pop
mov
cmp
shll
adc
mov
jmp
lret
ljmp
les
or
sarl
mov
adc
lret
fisubs
add
in
int
xchg
add
dec
xchg
sub
cs
scas
rcl
pop
inc
push
ret
add
movsb
and
xlat
adc
jp
lock
mov
shll
bound
inc
sbb
pop
adc
inc
rol
cmc
sbb
inc
addb
loop
push
sbb
mov
add
xor
sahf
inc
and
xor
add
pop
mov
dec
movb
testb
xchg
str
cmp
add
fistps
mov
jo
jb
xor
fcomip
cmpsb
push
jp
add
adc
addr16
into
push
adc
add
mov
pop
mov
cltd
mov
xor
stos
push
add
mov
iret
andb
cmpl
sbb
clc
inc
call
scas
adcb
push
cli
aas
adc
mov
std
pop
sbb
popa
inc
sbb
inc
sbb
jmp
sbb
cli
inc
jmp
inc
sbb
movsl
inc
idivb
jnp
cli
mov
cwtl
ret
xlat
push
lds
sbb
js
sbb
andb
add
cmpl
sbb
lds
lods
rcrb
adcb
in
sar
and
fldcw
cmpl
xor
ficoms
add
inc
in
movsl
jmp
addb
mov
imul
hlt
aaa
insb
adcb
adc
inc
adc
nop
sbb
rol
ret
std
dec
sub
inc
cmpb
sbbl
xor
adc
les
mov
lock
sub
lock
lahf
add
mov
and
inc
loope
std
or
xchg
nop
sub
add
movsb
or
add
inc
xchg
es
cmp
movsl
ds
jmp
inc
push
pop
inc
in
jnp
subl
rorb
cmp
cmp
lods
stos
mov
test
fs
xchg
pop
data16
xorb
inc
or
cmp
or
cmp
jb
adc
repz
rorb
mov
mov
and
push
shll
xor
xor
into
inc
mov
testb
roll
jns
cmpsl
adc
mov
push
loopne
inc
movsl
and
push
enter
popa
or
test
pop
xor
push
ficoms
loopne
andl
call
arpl
gs
add
stos
icebp
add
inc
pusha
xor
sbb
mov
fmulp
push
and
addl
sbb
roll
add
push
aad
pop
xor
add
xchg
pop
movsb
xchg
jo
add
aam
cmp
mov
or
adc
and
ret
dec
fsubl
xchg
mov
aam
mov
jl
add
push
clc
shll
pop
or
cmp
xchg
test
pop
scas
aam
or
mov
pop
adc
mov
or
cmp
add
rolb
sub
mov
pop
xchg
jge
insl
push
aam
adc
scas
movsb
hlt
es
popa
sbb
por
stos
mov
xor
addr16
sub
or
lock
or
cmp
das
shrb
add
mov
test
cltd
shll
and
fidivl
movsl
mov
push
add
or
xchg
add
inc
cmp
adc
pusha
pop
xlat
pusha
jbe
jae
add
inc
dec
pop
inc
push
icebp
pop
sbb
jbe
dec
movsl
clc
ficoml
cmp
loopne
pop
fdivs
test
js
rclb
push
movsb
xor
daa
mov
loopne
rol
imul
loope
neg
rclb
jnp
and
dec
sarb
push
and
push
mov
mov
data16
mov
hlt
fisttpl
enter
aam
sub
jno
aas
insb
cmc
cmpsb
lcall
xchg
ljmp
cmpsb
call
xor
outsl
mov
add
adc
cmp
mov
pop
fcmovnu
mov
icebp
aam
loopne
pop
and
push
mov
and
xchg
loopne
xchg
add
in
cmp
add
mov
push
sub
pop
cwtl
and
pusha
dec
xchg
lret
roll
out
pop
mov
arpl
pop
jecxz
pusha
pop
loopne
loopne
sbb
inc
push
and
cs
mov
xor
js
xor
mov
mov
mov
decl
cld
inc
lock
add
loop
cmp
add
cmp
mov
inc
pop
into
pusha
loop
mov
faddp
pop
subb
bound
stos
test
push
sarb
push
xor
mov
cmp
add
sarb
sbb
movsb
xlat
push
cmp
inc
js
call
dec
mov
in
add
sbb
cli
xor
or
ret
push
loopne
dec
loopne
add
cli
add
addb
rolb
add
add
cmp
aaa
sub
lea
movsl
mov
sub
sbb
sbb
xor
adc
hlt
mov
xchg
add
add
cwtl
rcrb
push
or
jmp
sbbb
test
data16
sbbb
pop
sbb
dec
int
es
loope
popa
in
and
bound
mov
inc
insb
pop
push
dec
xchg
hlt
or
leave
jo
arpl
add
loop
cli
mov
pop
mov
adc
pop
and
cmp
cltd
ret
jbe
add
inc
popf
push
dec
int
cmp
add
inc
jmp
cli
mov
inc
push
and
int
repnz
add
aaa
rcll
adc
insl
repnz
or
mulb
xor
leave
rolb
shlb
xor
add
loopne
jg
fxch
add
aaa
testb
movsl
sbbb
xor
outsl
mov
cmp
add
outsb
add
push
add
jne
inc
loopne
dec
mov
rolb
cs
inc
lods
or
sub
mov
xchg
aaa
xor
mov
jle
cs
adc
scas
mov
movsb
fsubs
dec
inc
add
pop
xor
outsb
stos
mov
add
popa
sub
mov
cmpsb
mov
cmpsb
test
push
outsb
mov
test
rorl
mov
or
enter
sub
data16
push
sbb
les
fisubs
lahf
rclb
and
push
cmp
in
test
add
jge
fs
add
jbe
insl
sub
pop
repnz
ret
data16
mov
fildll
cmp
nop
cmp
inc
dec
pop
push
outsl
mov
xchg
adc
mov
xchg
lods
ret
cmp
mulb
jg
fwait
add
add
push
loopne
stos
xchg
adc
jmp
xor
pop
inc
push
xor
aad
insl
cmc
and
push
mov
test
cmpsl
iret
cmpb
xor
pop
subb
or
xchg
aaa
lock
loopne
add
lock
xchg
sub
adc
popa
movsb
das
test
add
xor
jp
mov
sub
and
cmp
and
dec
lods
fiadds
add
stos
mov
mov
clc
cmp
shrb
sar
mov
dec
add
scas
ljmp
addb
pop
test
inc
rcll
mov
cmpl
add
leave
js
sbb
sbb
cmp
mov
xchg
cmpsb
fsubp
lret
orb
fistpll
push
inc
adc
ljmp
icebp
divb
outsb
adc
cmp
xchg
xchg
sbb
xor
mov
lret
push
adc
sar
xchg
push
jns
xchg
sub
out
rolb
mov
push
sbb
lcall
pop
pushf
lea
mov
sarb
orb
jmp
dec
cmpsb
adc
dec
insl
dec
push
push
lock
and
push
pop
or
add
and
cmpsb
fs
cmpsb
lock
mov
repnz
inc
add
xor
ret
js
and
repz
shll
sar
xor
cmpb
sub
adc
js
nop
add
adc
and
push
or
pushl
pop
in
addl
subl
fstps
mov
sub
mov
inc
lds
gs
dec
inc
roll
rcrb
adc
or
rclb
mov
jg
pop
fnstenv
sarb
lds
push
push
sub
ss
adc
adc
add
xchg
push
or
add
adc
cwtl
mov
call
lret
xor
add
orb
inc
xchg
std
mov
mov
pop
push
int
add
mov
inc
xchg
add
nop
stos
lods
fildll
insl
xorl
int3
adc
add
add
jg
push
push
mov
rcrl
cmp
fsubl
bound
into
loop
loopne
pop
xchg
xchg
add
hlt
add
push
mov
push
aad
data16
add
jo
mov
bound
mov
div
decl
data16
call
inc
adc
fcmovbe
and
data16
add
add
push
outsb
cmp
adcb
sahf
or
pop
out
adc
sub
adc
cld
push
add
pop
gs
push
data16
xchg
sub
scas
aam
mov
adc
push
mov
test
push
out
data16
loope
cmp
sub
mov
cmp
add
les
xchg
pushf
mov
test
popa
add
pop
or
out
add
scas
stos
jle
cmp
mov
pop
lret
adc
and
pop
lea
mov
cld
jmp
pop
cmpsb
aad
jne
or
cmp
subb
and
mov
jl
aad
or
pusha
xor
movsb
cli
sbb
pusha
dec
pop
rolb
fadds
push
test
mov
xchg
repz
inc
mov
pop
roll
imul
add
add
stos
and
push
movsl
imul
hlt
push
inc
xor
adc
pop
sub
int
out
add
lods
push
and
mov
insl
push
cmp
nop
xorb
pop
cmp
adc
add
mov
add
lds
sbb
cli
ljmp
cmp
out
push
outsb
lcall
sbb
cmp
mov
mov
int3
push
test
and
les
sbb
mov
inc
push
add
mov
lock
cmp
lock
into
xor
fisubrl
adc
scas
call
push
sub
and
lock
dec
loop
xor
ljmp
fsts
pop
xchg
loop
adc
xlat
xchg
mov
loopne
inc
jge
lock
stos
sub
shlb
or
and
mov
rorb
jo
or
cld
fistl
cltd
inc
mov
loop
add
stc
sub
sbb
ljmp
pop
subl
mov
adc
loop
outsb
add
or
add
decl
pop
les
mov
iret
add
lcall
sbb
dec
lds
js
mov
push
lds
leave
mov
mov
or
clc
add
out
test
popa
xchg
mov
ss
pop
add
push
pop
pop
roll
add
ret
arpl
xchg
or
xchg
mov
push
jb
dec
push
in
xchg
scas
adc
and
push
fistpl
pop
lods
jbe
add
ds
mov
add
addb
mov
mov
add
into
adcb
pop
pop
movsl
loope
sub
add
lds
cmp
adc
mov
mov
push
gs
and
add
mov
into
lret
insb
jmp
pop
sub
call
bound
adc
in
push
push
or
push
jle
add
inc
or
dec
test
ds
decl
push
cmp
sbbl
mov
subl
mov
sbbb
add
mov
add
scas
jmp
clc
pop
or
js
pop
cmp
xor
stc
cmp
call
fwait
or
push
xor
out
and
dec
and
pusha
jmp
xchg
xchg
fsubrl
loope
sub
mov
fwait
mov
and
inc
add
jl
shlb
iret
inc
or
test
in
inc
jg
loop
in
cmpb
andb
mov
movsl
inc
or
xchg
mov
mov
pop
sub
push
push
jl
pop
adc
je
push
sahf
sbb
add
and
and
dec
or
adc
add
in
pop
xchg
inc
adc
test
rorb
les
cmpb
add
adc
or
add
cmpl
ljmp
jmp
adc
inc
stos
mov
add
xor
inc
popa
dec
loop
adcb
mov
fldl
mov
ja
push
inc
mov
stos
loop
push
add
sub
add
inc
xchg
data16
mov
push
adc
or
xor
mov
mov
mov
inc
adc
mov
addb
jp
add
fs
pop
ficoml
add
or
cmp
movsl
fs
test
addr16
adc
adc
cmp
dec
scas
push
mov
ret
mov
cld
mov
cmp
xchg
in
and
mov
add
jmp
outsb
inc
dec
pop
movsb
ss
rclb
movsb
rclb
imul
push
pop
or
lret
mov
push
xchg
fadds
inc
push
xchg
xchg
add
add
fcompl
mull
std
lcall
xchg
fnstcw
lds
outsb
or
push
cmp
mov
mov
popa
push
and
les
roll
cltd
push
add
push
adc
clc
or
or
push
loope
add
sahf
sub
adc
cmp
sub
sbb
outsb
clc
aaa
or
add
mov
mov
aam
adc
adc
mov
les
add
add
enter
lcall
mov
sub
adc
or
mov
outsl
les
loopne
mov
cmp
and
jb
xor
or
aam
shll
addb
add
push
ljmp
sub
dec
jo
pop
cmp
adc
test
inc
and
pop
sub
test
and
stos
loopne
and
call
or
adc
ret
and
es
add
repz
xchg
sub
testb
lock
clc
data16
or
fadd
cmp
cmp
inc
xor
mov
xor
xor
sbbb
pop
lcall
pop
mov
sbb
jns
adc
adc
inc
insl
jae
stos
pop
fwait
pop
nop
add
les
iret
pusha
jp
leave
cmp
dec
sub
or
outsl
mov
adc
sbb
pop
push
sub
js
inc
scas
ja
jmp
shr
leave
mov
mov
outsb
or
add
push
out
test
mov
sub
loop
add
test
leave
or
sub
sbb
sbb
jno
inc
andb
or
out
or
adc
nop
cmp
shrb
mov
and
xchg
cmpb
xor
in
mov
in
fbstp
mov
pusha
xchg
outsb
mull
and
pusha
scas
sub
cmp
xchg
adc
xor
inc
sahf
fisubrl
and
or
sbb
arpl
inc
xchg
cmp
dec
pop
mov
pop
cmpsb
pop
dec
clc
add
inc
popa
dec
cmp
mov
mov
cs
inc
fwait
mov
gs
fcompl
cmp
pop
push
je
clc
insb
dec
mov
andb
aam
jecxz
mov
sbb
pusha
cmp
loopne
and
js
dec
cli
int3
push
mov
adc
ret
outsb
rorl
xor
leave
dec
imul
mov
stos
outsl
add
cld
add
imul
rclb
sbb
das
jb
inc
pushl
cld
shlb
pop
adc
mov
adc
push
popa
test
sub
hlt
or
cli
daa
add
jbe
jae
mov
loopne
lcall
mov
pop
loopne
mov
fsubp
call
and
push
les
cmp
enter
jo
pop
inc
dec
pop
lods
pushl
das
pusha
jne
push
pushf
adc
and
jecxz
push
vshufps
pop
shll
shr
orb
pop
stos
icebp
fldl
pop
xor
mov
hlt
movups
cmp
jno
js
popa
std
incl
aad
mov
and
lcall
loopne
add
popa
jnp
sbbb
cmp
sbb
push
in
loope
pusha
jle
loope
jg
lock
push
push
rorb
add
cmp
and
insl
adc
in
pop
xchg
test
mov
sbb
sub
nop
add
inc
mov
mov
shrl
dec
mov
pop
pop
fcomps
pop
and
js
adc
aas
push
les
data16
mov
mov
sub
shrb
loopne
push
aad
scas
push
pop
push
mov
outsb
movsl
sbbl
dec
nop
push
rol
xor
add
insb
inc
xor
ret
cmpb
sbb
rcll
pusha
and
mov
rcrb
add
fadds
insb
xlat
popa
and
and
mov
cmp
mov
frstor
and
xor
sub
fimuls
insb
lock
inc
add
sbb
sbb
and
inc
mov
pop
rorl
sbbb
or
pusha
sub
pop
xchg
adc
movsl
call
sub
push
mov
add
sub
fs
add
mov
jnp
fdivrs
xor
pop
jns,pt
add
pusha
or
lock
addb
jmp
add
hlt
cs
push
add
addb
add
mov
jbe
adc
adc
fsubrs
and
push
mov
jno
orl
lock
loop
inc
pop
filds
mov
jns
add
roll
add
push
push
or
adcb
fs
jb
jo
and
or
add
push
orl
push
test
aaa
adc
repnz
jo
nop
sub
mov
stos
xor
jp
or
inc
push
sub
sbb
mov
loope
mov
pop
and
pusha
mov
sbb
push
add
mov
inc
mov
clc
ret
and
aas
add
fbstp
mov
pop
nop
dec
xor
subl
mov
adc
push
push
nop
push
nop
or
fisttps
add
xchg
inc
add
cmp
es
mov
incl
cmp
loopne
add
lds
call
fucomip
xchg
clc
xor
nop
pop
jo
cs
loopne
ds
cmc
fistl
cli
scas
or
xchg
and
xorb
pop
scas
ror
lock
xor
loopne
fwait
cmp
lock
mov
mov
or
adc
adc
gs
sub
xor
out
push
push
push
mov
or
xchg
or
add
test
push
shrb
fbstp
mov
mov
mov
pop
push
movsl
mov
cmpsl
mov
xor
xor
push
test
pop
les
pop
ret
jns
adc
nop
adc
nop
add
add
pop
cmc
cmp
and
xor
in
xchg
cli
movsb
lock
pop
lods
jno
cmpsl
nop
pushf
subb
add
jnp
aam
rcr
call
ja
call
cli
or
cmp
xor
cmpsb
cs
aam
shl
dec
fcoml
or
lock
or
mov
jl
adc
rorl
shlb
sub
cltd
loop
push
sar
jge
cwtl
and
adc
loopne
sahf
rcrl
xor
shll
cmp
test
mov
cmp
sbb
sbb
add
jb
and
mov
insb
xchg
loop
mov
rorb
cli
sub
std
or
cld
adc
cmovno
movsb
in
bound
sbb
pop
and
pop
cmp
or
je
popa
ret
pop
sbb
push
fistpll
cmp
push
nop
cmp
shlb
or
add
xor
sti
xor
call
cmp
mov
pop
leave
xor
movsl
call
lret
inc
dec
and
add
push
ljmp
insb
adc
and
jmp
adc
or
dec
cld
fldenv
lock
dec
loopne
adc
outsl
xor
jmp
sub
sub
frstor
ja
and
sub
xchg
stos
sbb
clc
dec
xchg
inc
cmpsb
fnstenv
roll
fildll
xlat
aam
dec
sub
pushf
in
dec
loope
and
mov
adc
push
cltd
mov
dec
lcall
aad
add
pop
jmp
jbe
cld
push
shlb
pop
movsb
mul
dec
pop
mov
xlat
popf
pusha
ss
iret
bound
xor
les
and
popa
cs
rcll
mov
out
add
add
jno
push
push
add
dec
scas
push
cmp
adc
frstor
in
add
movsb
in
sbbl
ror
rolb
sub
mov
andb
jmp
jb
dec
mov
jo
cmc
mov
xchg
sbbl
jne
mov
add
or
loop
outsb
in
outsl
mov
xor
mov
xor
adc
sbb
fidivrl
mov
jnp
add
and
scas
mov
jbe
loope
dec
xchg
cmp
pop
dec
cmp
pop
popa
xchg
sub
pusha
add
pop
pop
in
mov
inc
cmp
jl
xor
or
push
add
push
lcall
ret
mov
rcll
jmp
sbb
ret
incl
lret
cmp
add
aam
mov
repnz
xlat
adc
mov
add
dec
adc
sub
roll
add
adc
outsb
mov
cld
xchg
cmp
movb
add
and
pop
jle
iret
add
add
out
mov
mov
cmp
mov
call
mov
mov
pop
xor
rol
pop
sub
mov
xor
pop
xchg
orb
les
fidivrl
or
insb
or
xchg
mov
dec
mov
mov
stc
outsb
adc
xchg
add
fmuls
add
out
and
xor
or
cmp
cmp
dec
loopne
pusha
push
movsl
sti
shl
fadds
add
in
test
mov
sbb
pushf
mov
mov
add
adc
cmp
and
inc
adcb
push
pushl
movsb
loop
sahf
test
movsb
or
mov
loopne
add
adc
jecxz
cld
pop
test
pusha
dec
jmp
nop
pop
insl
jge
sub
push
inc
popa
fidivrl
sub
movsb
in
push
pop
leave
inc
add
add
hlt
xchg
test
or
add
rol
stos
or
cmp
jl
add
jg
rol
cmp
aaa
add
xchg
mov
jle
push
aam
inc
push
mov
rorb
mov
and
add
and
sub
mov
add
push
stc
out
add
or
add
popa
xchg
out
cmpsb
xchg
mov
adc
inc
jl
andb
pop
rorb
hlt
pop
in
inc
dec
out
pop
jo
inc
jb
add
xchg
xchg
and
shrl
loopne
pusha
gs
lret
mov
xchg
jbe
cmc
sbbl
les
adc
cs
xchg
movsl
mov
lcall
and
push
or
lock
movsl
and
cmp
test
lcall
xor
ljmp
or
and
adc
cmp
cmpb
mov
decl
arpl
inc
pop
rcll
mov
inc
fcoml
rorb
xor
aaa
cmpsb
roll
inc
fsubs
aaa
push
fiadds
rol
mov
fsts
sarl
xchg
pop
push
and
ret
pop
add
ret
cmpsb
andb
cmp
pop
adc
cwtl
decb
pop
loopne
ja
push
adc
jae
es
add
stos
add
adc
mov
inc
inc
cmpsb
push
fs
xor
aam
mov
lds
andb
sbbb
adc
hlt
cli
inc
add
inc
add
mov
add
ss
test
cld
dec
fldenv
loope
push
sti
or
dec
cmc
loope
mov
adc
inc
sub
lds
ljmp
xchg
xchg
pusha
nop
or
lods
pusha
es
push
std
call
lods
adc
leave
or
cmp
lahf
hlt
cs
cld
js
jbe
movsl
clc
lods
mov
inc
pop
adc
inc
into
in
add
sub
xor
push
in
adc
in
jle
cld
shll
sarb
int3
in
loopne
and
mov
add
mov
mov
or
mov
and
pop
flds
adc
cmp
mov
dec
loopne
push
inc
cwtl
insb
cmp
xor
popf
jp
loopne
ljmp
xor
jle
push
or
loopne
dec
push
mov
inc
add
loop
fcompl
inc
xor
sbb
int3
inc
inc
mov
scas
mov
xchg
adc
mov
dec
repnz
mov
pop
mov
add
cs
ror
jmp
push
cmpl
push
xchg
mov
popa
aaa
xchg
adcb
cmp
jg
inc
cmp
rorl
add
sbb
xchg
incb
in
movsl
ds
add
push
cli
dec
push
dec
cltd
or
pop
lods
sbbb
mov
add
pop
popf
das
and
pop
cmp
sub
cmp
adc
mov
and
push
cmc
inc
jno
ret
js
or
repnz
adc
inc
lods
mov
cmp
sbb
inc
inc
sub
lea
inc
pop
es
es
mov
adc
xor
push
orb
or
nop
pop
ret
or
scas
das
cmp
push
xor
addb
push
lods
ljmp
push
or
sub
add
mov
rolb
pop
inc
add
or
rclb
addl
lcall
mov
xor
cmp
and
mov
insb
lock
frstor
dec
mov
inc
xchg
pop
mov
outsb
ljmp
add
xchg
mov
xchg
inc
sub
or
or
jne
roll
dec
sbb
add
push
add
lods
push
js
pop
xor
lods
xchg
call
ljmp
movsb
push
cmpsl
popl
mov
cmp
add
add
cltd
sub
sbb
pop
fcompl
cmp
jle
and
lds
ficoml
cwtl
shlb
xchg
loop
or
adc
lock
push
cmpsb
aam
cmp
pop
mov
sub
push
adc
inc
push
cmp
clc
dec
sarb
push
sub
and
add
and
aaa
or
cld
fucom
rol
pop
cmp
ljmp
xor
mov
sbb
push
cs
fdivrs
and
and
idivb
movsb
insl
cmc
rorl
js
push
adc
aaa
cmp
or
pop
jo
inc
inc
xor
enter
mov
xchg
mov
push
adc
pop
ljmp
adc
xor
adcb
jecxz
cmp
ret
push
mov
xlat
pop
test
aam
mov
inc
push
cmp
xchg
adc
lock
add
cwtl
and
aaa
fidivs
insl
ret
mov
adc
nop
push
xchg
aaa
pop
cmp
fnstenv
dec
adc
mov
sti
outsl
adc
enter
shlb
push
and
loopne
insb
jg
mov
cmp
nop
cmpsl
pop
adc
mov
mov
adc
outsb
push
sahf
sbb
cmp
add
adc
cmc
mov
dec
pop
sub
adc
xchg
pop
adc
mov
mov
and
dec
mov
or
pop
adc
dec
sub
sub
xchg
enter
mov
and
subl
cmp
inc
inc
call
ljmp
inc
mov
hlt
test
mov
add
and
test
xchg
lea
cs
push
add
test
loop
cmp
and
xor
ljmp
cmpb
mov
dec
dec
push
sarl
inc
mov
rolb
or
cs
ljmp
adc
push
inc
jg
incb
dec
push
movsb
adc
rol
add
or
gs
push
popf
or
sub
daa
adc
or
xor
xchg
fistps
ret
mov
add
push
mov
xchg
add
pop
inc
add
int
icebp
iret
cmp
add
push
out
js
push
add
pop
cld
push
loope
push
pop
cmp
jle
orl
xchg
push
std
incl
and
shrb
call
ja
mov
add
cltd
cmp
push
lods
mov
push
movsb
fcoms
push
icebp
cmp
pusha
cmp
cmp
cmp
out
add
pop
dec
loopne
into
cmp
sbb
add
std
lods
push
cmp
das
and
xor
testb
xchg
or
mov
jo
xchg
sub
or
jae
inc
adc
mov
xchg
jb
xchg
movsl
dec
push
insb
js
pop
mov
jbe
inc
sub
movl
pop
inc
dec
ss
loopne
and
cmp
call
lods
cmp
adc
mov
bound
mov
cmc
cmc
mov
push
or
fisubrs
push
inc
or
xchg
rolb
jb
aas
cmp
lock
lock
cmp
adc
rorl
cmpsl
cmp
in
cmp
movsb
jb
mulb
dec
shlb
js
xchg
loop
add
mov
mov
mov
lods
xchg
adc
ds
mov
sbb
ja
push
mov
jne
fidivs
sbbb
daa
test
and
aad
lock
cmp
rolb
test
pop
aas
and
or
cli
aaa
xor
sbb
fiadds
loopne
ret
cmp
sub
es
sarb
mov
jbe
mov
jb
lods
xchg
cmc
outsl
outsb
js
add
bound
outsb
push
mov
add
or
sbb
xchg
push
push
fwait
mov
in
pop
adc
loopne
decb
cmp
mov
popa
sub
ljmp
lcall
rclb
mov
adc
sbb
sub
dec
adc
adc
adc
cmp
decl
push
cmp
pusha
push
and
mov
sub
mov
cmc
xchg
inc
stos
mov
rorl
pusha
sub
das
push
cmp
dec
push
mov
test
fnstenv
adc
es
adc
sub
push
aam
adc
and
rcrb
clc
add
aad
das
lock
cld
cmp
adc
pusha
cld
movsb
pop
push
adc
pop
in
pop
sub
mov
sahf
shr
pop
sub
add
sar
pop
and
add
mov
add
lldt
loopne
add
cmp
int
inc
push
insb
push
add
xor
pop
test
pop
frstor
aaa
mov
inc
test
cmp
and
pop
dec
loop
icebp
cmp
inc
aas
add
push
add
inc
rol
and
sti
pop
sbb
adc
mov
pop
adc
fsubrs
adcl
jmp
mov
xor
outsb
and
lods
fs
jo
js,pn
or
out
add
imul
enter
testb
inc
and
jp
mov
scas
mov
loope
cmp
loopne
ljmp
repnz
lea
add
loop
or
sub
or
sub
adc
es
cmpsb
xorb
nop
mov
adc
cld
xor
jmp
sbb
adcl
je
mov
sbb
es
add
fucomip
add
fmuls
or
out
shr
addb
dec
cmp
add
testb
cmpsb
push
test
ljmp
xor
push
cwtl
nop
ljmp
or
fs
xlat
xchg
cmp
inc
mov
int3
add
out
pop
push
cmpsb
mov
add
f2xm1
andl
imul
cli
add
adc
pop
xchg
clc
add
mov
xlat
xorb
cmc
add
pusha
cld
add
inc
ss
mov
push
pop
popf
adc
sarb
cli
inc
or
outsb
pushl
add
pmulhw
cs
aad
inc
push
ret
cmpsb
les
rolb
icebp
testb
inc
or
lret
ret
mov
addb
add
mov
shlb
in
clc
mov
push
and
add
cltd
xor
jle
sar
add
pop
mov
sbb
sub
fistpll
ret
sbb
or
sbb
rcrb
mov
or
inc
daa
push
pop
ja
fwait
sbb
adc
sbb
hlt
mov
mov
sbb
in
push
lods
fisttps
lods
add
jl
rolb
jb
incb
inc
mov
test
mov
rclb
add
add
mov
add
sub
xlat
int
mov
adc
push
ss
imul
add
cmp
popa
push
std
add
rorb
cmp
mov
push
xor
pop
lods
orb
sbb
push
decl
inc
aam
mov
in
daa
orb
and
fisttps
shl
stos
roll
or
xorb
push
icebp
dec
xor
add
test
out
cmpsb
inc
loopne
cmp
lcall
jg
cmp
pop
lcall
xor
pop
cs
add
or
xorl
xor
and
loopne
xchg
call
lcall
adcb
dec
sub
cmc
and
xchg
push
add
inc
loopne
test
fnstcw
cmp
and
cmp
sub
fwait
add
cmp
and
mov
incb
inc
push
popa
sub
sub
aam
je
das
xor
adc
pop
xchg
cmc
and
mov
xchg
mov
inc
dec
xchg
mov
cmc
sahf
clc
dec
push
sub
or
ss
es
and
pop
nop
and
leave
or
dec
or
sub
pop
mov
stos
scas
and
push
cmp
pusha
or
or
sub
movsb
sub
movsb
les
xchg
mov
dec
scas
adc
sub
loopne
ljmp
loope
sub
cmc
ret
sar
cld
push
mov
push
loopne
mov
mov
and
mov
jmp
inc
addb
or
cmp
ljmp
mov
decl
testl
jmp
xor
lcall
xor
mov
pop
and
add
xor
cmp
aaa
sti
pop
xchg
fbstp
into
xor
mov
xor
pop
push
lds
ds
ljmp
mov
pop
into
mov
shlb
cmpsl
imul
pushl
leave
xor
addb
loop
mov
cmp
jmp
and
jg
dec
cmp
pusha
daa
insb
xor
sbbl
loop
dec
test
xchg
nop
ljmp
xor
pusha
xor
jge
push
add
push
xchg
inc
imul
fs
add
mov
fwait
and
inc
or
or
cmp
cld
in
inc
out
and
mov
or
cmp
adc
sbb
adc
fldt
adc
add
push
push
icebp
add
idivb
cwtl
add
data16
andb
dec
adc
jmp
call
icebp
movsb
popa
rclb
cwtl
dec
fbld
push
pusha
fisttps
add
outsl
aam
xchg
sar
nop
and
fld
ja
mov
pop
inc
pop
inc
js
stos
movsb
sarb
jo
add
add
stos
ljmp
jle
mov
nop
adc
fmull
adc
fidivrs
jne
outsl
scas
add
inc
stos
enter
movsl
cmp
incl
cld
pop
pushf
sbb
add
push
jnp
cltd
sbb
xchg
imul
add
xor
lcall
push
fidivrs
xchg
xor
add
icebp
add
mov
pop
pop
int3
in
les
in
dec
inc
sbbb
and
ficomps
adcl
adc
mov
jb
jp
ljmp
lods
fldenv
jo
roll
add
andl
jecxz
les
dec
mov
cli
push
cmpb
mov
add
dec
mov
xchg
add
enter
jp
fdivrl
mov
mov
push
adc
jecxz
jne
icebp
adc
inc
cmp
dec
sbb
jg
adc
or
or
pop
shll
xchg
xchg
push
stc
mov
pop
and
and
adc
mov
cmp
xchg
loope
cld
jo
and
inc
sbbb
lods
jg
or
jo
adc
cld
out
cmc
repz
insl
xor
and
lea
push
mov
roll
or
scas
push
rol
add
add
jg
movsb
nop
push
mov
adc
fwait
and
mov
and
xchg
ret
mov
nop
in
imul
pusha
xchg
mov
mov
fildl
and
outsl
xor
cltd
add
movsl
inc
jg
add
mov
mov
sub
jo
icebp
leave
jle
xchg
push
mov
or
xchg
cmp
jmp
xor
scas
fcoml
and
jo
add
out
cmp
fsubr
xchg
lea
movsb
loopne
bound
xchg
xor
iret
push
or
std
cli
es
sub
or
cwtl
lret
stos
adc
fisubrl
aam
ds
xchg
add
sbb
push
jmp
xchg
pop
enter
pop
cmp
pop
adc
add
rcll
xor
movsb
addr16
adc
xorb
mov
adc
shlb
fwait
sub
cmp
je
lahf
xchg
push
sbb
cli
pop
push
pusha
xchg
inc
inc
push
and
mov
mov
repnz
and
outsl
nop
cmp
pusha
xchg
rcrb
jo
std
pop
fwait
rorb
pop
nop
nop
or
pop
adc
pop
in
xor
shll
pop
mov
mov
mov
push
loopne
popf
sbbb
rcl
push
repnz
movsb
fisubrl
jg
cli
lods
mov
sbb
adc
pop
lods
fcos
lds
fcmovbe
pop
mov
ljmp
rcrb
xchg
aad
add
pusha
xchg
pop
insb
mov
aaa
xchg
or
xchg
inc
jo
adcb
cmp
sub
mov
mov
sub
outsb
mov
xor
int
jmp
xchg
push
cli
or
adc
call
les
movsl
aam
xchg
mov
aam
cmp
cmp
mov
mov
rorb
sub
mov
nop
mov
and
mov
xor
mov
inc
pushf
sub
aad
movsb
push
and
loopne
xchg
fcomip
out
mov
cltd
ljmp
inc
cwtl
add
adc
and
push
sub
call
xor
shll
sti
jmp
mov
mov
cmp
cmp
cwtl
mov
mov
push
ficompl
test
mov
adc
and
loop
jb
or
sbb
in
mov
push
in
ja
sub
mov
pop
xchg
ret
add
ja
cli
into
pop
aad
pusha
imul
icebp
movsl
shr
mov
jmp
mov
out
movsl
and
inc
shl
test
data16
xchg
ss
inc
test
mov
inc
xchg
rcr
outsb
call
xchg
sbb
mov
xchg
sbb
and
in
push
in
into
cwtl
enter
cmp
jo
cmp
ficoms
aaa
cld
jl
xor
sbb
push
and
push
decb
sbb
shrb
push
fmul
shlb
aam
in
mov
pop
add
dec
cmp
inc
dec
add
mov
jmp
cmp
pop
and
cmp
andb
mov
sub
leave
adc
inc
movsl
mov
cmp
add
nop
dec
lcall
adcl
sub
and
mov
add
dec
frstor
add
pop
push
jns
add
fwait
rorb
adc
or
inc
addl
add
inc
cli
push
mov
push
push
loop
push
aam
insl
rolb
xchg
into
push
rclb
xchg
lock
push
sub
leave
sbb
xlat
rcrb
pop
aad
pop
je
adc
mov
lock
jo
ljmp
popl
arpl
sbb
stos
xchg
push
loopne
and
push
push
lock
jo
int3
push
hlt
or
xor
sbb
rcr
in
fwait
mov
add
or
cld
shlb
inc
scas
sbb
ss
dec
or
cmpsb
ret
addb
stos
cmpsb
shl
out
pop
cmp
movsb
sub
cmpsl
call
aad
xor
sub
dec
jno
push
adc
rorl
outsl
fildll
bound
sbb
push
add
loope
mov
hlt
rcl
pop
lea
rcrb
jb
rcl
pop
fucom
adc
jle
and
inc
lds
pusha
xor
pop
or
mov
pusha
pop
pop
nop
fnstcw
call
xchg
xchg
addb
sub
loope
repnz
test
and
inc
push
push
rolb
test
or
enter
sbb
lcall
aas
mov
xchg
adc
fchs
inc
mov
mov
lds
mov
dec
sbbb
lods
adc
cmp
subb
jno
in
sub
movsl
xchg
ljmp
dec
inc
shll
adc
sub
cli
mov
sub
add
pushl
xchg
ret
jnp
shll
sub
mov
std
or
shlb
sbb
sub
sbb
pop
and
mov
cmp
pop
mov
insb
fcmovnu
scas
push
adc
aad
inc
and
clc
xchg
ljmp
data16
add
fisttpll
shll
and
add
cmp
fsubs
lcall
shrb
rorb
mov
rcl
pop
sbb
push
inc
scas
js
push
rorb
jb
cmp
mov
mov
or
mov
dec
dec
les
ret
rolb
loope
fsub
and
pop
push
bound
mov
cmp
jo
push
mov
push
sub
fldl
or
jmp
in
ljmp
incl
sbb
addb
mov
mov
push
add
addb
dec
sub
test
cmp
mov
loopne
clc
xchg
add
mov
js
fstps
and
scas
mov
int3
fiaddl
cltd
or
push
scas
sbb
out
or
ret
fs
clc
add
ret
mov
cmc
pop
mov
xchg
cli
add
movsl
xchg
xor
push
mov
lds
enter
sub
pop
add
mov
jbe
andb
addl
add
test
fisubrs
sbb
xchg
shrb
inc
push
shrb
outsb
and
add
and
shlb
or
lods
mov
vmovdqu
ret
push
mov
jnp
push
pop
xorb
pushf
xorl
pop
xorl
repnz
sbb
ljmp
mov
adc
cmp
adcb
pop
push
loop
roll
inc
lock
push
sub
in
sbb
addb
clc
ljmp
lcall
addb
xlat
rcrb
add
dec
bound
cmp
xor
inc
add
pop
andl
jp
mov
mov
add
mov
clc
push
add
mov
mov
shll
add
stos
xor
or
test
pop
push
push
or
mov
xor
push
push
decl
in
nop
cmp
xor
mov
sub
arpl
adc
adcb
jno
add
jle
fs
xchg
sbb
pop
and
mov
sub
sbb
rclb
cs
mov
pop
pop
ret
push
rolb
jg
pop
adc
inc
sub
inc
xchg
xor
in
test
pop
sub
es
test
mov
rcrl
sahf
test
cmp
push
aaa
shlb
lret
mov
sahf
cmc
push
hlt
mov
aas
into
scas
sbb
lret
inc
clc
in
mov
mov
or
loop
adcb
sbb
sub
add
rcrb
sbb
push
adc
pusha
mov
xor
lret
int3
push
add
rcrb
xchg
pop
adc
sbb
fbld
add
push
push
cmp
or
fildl
negb
and
loop
into
mov
sub
mov
jl
sub
hlt
movsb
lock
ja
pop
sbb
push
add
sbb
add
shrl
mov
inc
iret
bound
push
pop
or
jecxz
out
and
push
fistl
iret
inc
adc
pop
mov
loopne
mov
movl
loopne
in
mov
mov
addb
add
add
adc
dec
gs
lcall
pushf
in
cmpb
xor
mov
and
add
xor
shlb
hlt
fmuls
xorl
inc
push
stos
movsl
pop
call
fistpl
add
pop
push
lahf
aad
cld
xchg
aad
add
add
pop
fildll
rclb
add
and
aaa
std
orl
loope
jg
inc
int
and
add
rorb
icebp
mov
xor
dec
fcoml
test
shl
adc
shrb
psubb
adc
adc
arpl
hlt
push
rcrb
or
mov
lock
jmp
sbb
push
and
ficomps
pusha
add
add
jne
fisubs
test
mov
ret
inc
inc
push
mov
mov
cmpsb
pop
sub
push
mov
or
movsl
orl
ljmp
xchg
add
and
push
stos
mov
mov
inc
lods
push
push
cs
test
popa
mov
pop
scas
lds
push
pusha
add
fwait
xchg
into
cmpb
aad
xchg
idivl
adcb
stos
mov
inc
dec
lcall
dec
push
push
rorb
add
push
or
std
enter
addl
xor
mov
xchg
dec
pop
sub
adc
orl
cmpsb
sub
mov
lds
loop
or
mov
pop
mov
lcall
sub
mov
and
mov
sbb
push
and
inc
sti
add
xchg
adc
cmc
add
das
ret
mov
popf
shlb
dec
out
sbb
insl
lods
mov
hlt
or
addb
hlt
and
dec
stc
add
cmc
add
add
add
add
test
sbb
mov
add
enter
inc
jge
loopne
dec
mov
inc
sar
pop
ror
loope
pop
fs
mov
add
call
jle
mov
sub
mov
adc
repz
scas
cmp
bound
cmp
xor
jno
mov
jbe
nop
mov
xor
xor
sub
dec
fwait
loopne
push
or
jae
test
lock
inc
push
add
or
shld
jne
shlb
ficoml
hlt
lcall
les
shlb
addb
mov
lahf
cmc
mov
inc
push
add
pop
push
add
mov
cltd
xor
pop
nop
mov
sub
imul
adc
dec
jecxz
test
rcr
ja
mov
int
xchg
aam
aad
add
rcll
aam
xchg
fstl
popf
je
gs
stos
cmp
imul
xor
pushf
loopne
dec
sub
je
pusha
or
test
push
adcb
jmp
fistl
inc
add
cwtl
sub
pop
mov
xorb
cli
notb
and
mov
stos
data16
mov
outsl
mov
les
add
cmc
bound
push
loop
andl
dec
ret
mov
fcomps
mov
cmp
add
js
jo
mov
fstps
cmpsl
and
ret
aas
add
test
incb
cmp
mov
xchg
mov
imul
fcoms
add
pop
mov
aad
xor
jno
xchg
pop
and
and
jecxz
dec
xor
in
negb
out
push
fsts
ja
pop
out
sub
cmp
and
push
cltd
mov
rorb
rcrb
popa
dec
mov
pop
gs
pop
or
mov
and
shlb
or
sbb
mov
push
inc
fucomi
shrb
or
xor
lods
xor
aad
add
test
fdivs
sub
push
mov
push
adc
or
movsb
push
adc
repnz
fsubrl
or
sarb
inc
fistl
mov
fnstenv
fs
nop
xor
insb
nop
stos
cmpsb
hlt
pop
adc
push
mov
lock
les
mov
cmp
cltd
fidivs
int3
pusha
cld
lcall
push
lea
cmp
das
loope
sarl
dec
jg
scas
sbb
sbb
loopne
call
mov
or
mov
lods
inc
cmp
popa
je
fadds
xor
jl
sbb
push
dec
push
adc
adcl
cmp
lahf
lock
outsb
stos
jg
mov
loopne
xchg
mov
scas
xor
add
daa
movsl
loop
xchg
sub
pop
das
push
pop
lock
cmpsb
iret
cmp
frstor
mov
or
or
fcoml
ja
or
mov
cmp
int3
loopne
cmpb
enter
pusha
fcom
add
mov
call
adc
pop
adc
inc
mov
cmp
enter
mov
cmc
or
xchg
add
sub
xor
mov
out
sub
fwait
dec
push
xor
stos
xor
xchg
pusha
adc
insl
adc
adc
loopne
scas
or
xor
mov
movsb
mov
sbb
mov
mov
sub
cmp
pusha
cmp
adc
mov
inc
add
cmp
pop
mov
mov
adc
xlat
cmp
test
cld
pop
fwait
mov
pop
mov
nop
dec
out
sub
movsl
incl
push
sbb
testl
add
addb
xchg
or
adc
adc
fldt
cmp
cmp
mov
insb
fwait
decb
loop
enter
jmp
data16
push
mov
or
push
cmp
sub
jg
lods
xor
sbb
dec
mov
mov
and
mov
andb
aaa
cli
lods
inc
jo
dec
bound
repnz
and
xchg
push
orl
or
fisttps
cmp
rolb
cmp
add
mov
inc
adc
repnz
inc
sub
pop
addb
sbb
cs
mov
lcall
jg
adc
leave
nop
sub
out
out
add
jg
and
shlb
xchg
loopne
movsl
jbe
mov
jo
cmp
hlt
push
lret
es
test
mov
push
mov
int
incl
cmp
jo
rcll
pusha
andb
popa
mov
jg
mov
bound
cmp
fimull
adc
nop
sarl
or
cmp
scas
sub
ds
sahf
add
fcompl
nop
xchg
aam
jmp
pop
iret
mov
pop
rclb
sbb
sbb
lds
sbb
and
and
mov
add
pop
fldl2e
pushf
cltd
jne
push
cltd
aad
xor
loop
push
inc
stos
mov
push
add
add
ret
hlt
mov
jb
cmp
push
in
rolb
lcall
rcrb
les
xor
fsts
in
push
sbb
iret
inc
add
mov
js
out
adcl
pop
dec
adc
js
mov
adc
bound
shlb
call
mov
adc
adcl
pop
cli
and
cmpsl
fdivrs
mov
mov
inc
cs
fadds
aam
add
rcrb
or
fldl
and
dec
in
push
xchg
mov
mov
mov
pop
das
jo
xor
scas
push
push
push
adcb
xchg
pop
add
adc
mov
pop
clc
mov
mov
hlt
add
or
push
and
sbb
push
shrl
lods
dec
add
and
lock
insb
das
mov
test
cmp
push
mov
decl
add
lock
mov
pop
movsb
push
mov
xchg
movsl
xor
ss
ffree
in
and
fcomip
adc
jo
push
mov
pop
neg
pusha
jg
cwtl
leave
pop
cltd
add
add
int
adc
add
mov
out
mov
add
cmpl
or
inc
addr16
data16
mov
push
bound
pop
push
mov
pop
clc
xlat
rclb
pop
out
aad
aad
or
or
push
or
add
pop
cltd
rolb
ret
adcb
sahf
cmpsb
xchg
les
add
or
cld
mov
mov
mov
jge
push
notl
push
cld
movsb
inc
pop
xchg
lds
imul
das
stos
add
daa
mov
cld
repnz
push
movsl
dec
and
mov
insb
lret
test
sahf
movsl
out
inc
push
mov
test
add
enter
lods
sbb
test
es
xor
inc
stos
add
xchg
push
add
insb
ljmp
mov
ds
cmp
mov
pop
je
xor
mov
mov
inc
xchg
dec
cld
in
in
cmp
imul
push
test
ficoml
repnz
add
sbbb
sub
xchg
add
sbb
xchg
add
mov
adc
pop
mov
gs
imul
jbe
inc
inc
xor
shr
push
icebp
pop
and
dec
and
sbb
mov
mov
pop
orb
loope
test
clc
xchg
or
cmp
sub
les
mov
mov
jnp
fsubl
add
outsb
or
insb
xchg
inc
sarl
mov
lahf
and
lahf
cmpb
std
add
xor
ret
fldl
ret
outsl
jmp
push
lret
sarb
inc
cmp
adc
ss
dec
loope
test
push
rorb
add
inc
dec
and
jmp
xor
pop
mov
inc
pusha
mov
int3
push
adc
outsb
xchg
cld
cmp
adc
pop
add
cmpb
mov
orb
add
mov
sbb
pusha
jmp
rclb
add
xchg
or
push
ret
fucomi
and
add
adc
cltd
xor
cmp
rorb
xchg
out
dec
inc
daa
push
lahf
xor
andb
jmp
sbb
test
add
adc
rolb
les
lcall
push
add
adc
mov
cmpsb
xchg
mov
aaa
jb
js
inc
fdivl
rclb
push
and
mov
dec
inc
adc
jecxz
push
dec
shlb
sub
dec
std
add
aad
orl
or
movsb
mov
sti
add
cmp
pop
rclb
or
or
push
ret
fcoml
lcall
test
mov
jge
adc
nop
dec
xlat
pop
push
fisttps
call
mov
movsl
fwait
test
cmp
ljmp
jecxz
add
jg
mov
sub
ror
lods
push
adc
aam
mov
jg
mov
addl
fmull
fisubrs
mov
repnz
out
stos
push
adc
sahf
or
push
aam
sub
les
shrb
adc
rol
addr16
rcr
mov
outsb
sub
and
out
add
pop
lods
jae
jp
loopne
jecxz
arpl
lds
fbstp
fstl
aam
and
in
mov
sbb
push
jb
and
and
in
add
fistps
add
loope
popf
add
push
and
push
xorl
sbb
sbb
inc
jno
lods
popa
mov
movsl
add
mov
push
adc
outsb
fisubl
add
add
jle
stos
std
pop
lcall
and
or
add
ret
stos
mov
ss
or
fsubrs
mov
xor
and
adc
stos
fsubrs
jle
addl
adc
frstor
xlat
or
out
out
jnp
cmp
mov
pop
push
popa
pop
xor
jnp
xor
sbb
mov
xor
add
lret
shlb
sub
cmp
stc
shrb
stos
lds
add
jno
or
dec
mov
jb
add
mov
adc
mov
mov
pop
mov
adc
or
dec
stos
jge
enter
or
mov
adc
loope
inc
fs
add
pop
sbb
inc
mov
xchg
or
outsl
ret
imul
stos
lock
mov
mov
push
mov
cli
shll
xor
xchg
xchg
nop
lds
outsb
stos
movsb
push
adc
loope,pn
pushf
inc
add
ljmp
mov
outsl
incl
movsl
jecxz
sub
push
mov
fcmovnb
mov
ds
test
dec
mov
pop
adc
insl
test
and
mov
adc
pusha
fisttps
dec
or
ficompl
dec
mov
insb
inc
stos
int
setbe
fcom
dec
pop
mov
fcompl
insb
and
hlt
out
mov
inc
lret
ret
loopne
bnd
or
adc
out
loopne
popa
aaa
or
notl
movsl
dec
imul
or
aam
add
adc
sahf
addr16
rcrb
adc
adc
and
mov
and
lds
cmc
stc
cmp
add
cmp
mov
cmp
push
lret
push
data16
outsb
add
addps
pop
mov
test
add
xor
cwtl
push
adc
jbe
inc
movb
and
fidivs
shrb
mov
ja
pusha
cltd
add
shlb
sbbb
mov
jmp
pop
add
or
mov
adc
lock
mov
xchg
mov
mov
adc
add
or
movsb
mov
adc
mov
outsl
jmp
fldt
mov
cmpl
roll
xchg
and
cwtl
xchg
in
xchg
clc
cmp
xor
cmp
call
pusha
or
adc
xchg
rorb
push
cmc
clc
and
cli
and
leave
cli
or
mov
lds
push
xchg
xor
pusha
add
in
rolb
and
inc
sub
adc
ficoms
push
test
lods
jo
aam
add
inc
add
push
fsubl
into
es
mov
call
cmp
sbb
inc
cmp
jl
stc
cmp
pop
adc
aam
out
mov
daa
jecxz
jno
xor
adc
out
mov
dec
int3
jbe
pusha
push
lock
pop
or
jo
pop
mov
xchg
loopne
push
imul
loopne
xchg
adc
add
shr
jmp
and
rol
aad
pusha
push
push
and
sub
rol
mov
ss
sub
mov
out
sbb
xchg
push
sub
inc
adc
std
xchg
adcl
dec
aaa
inc
jo
and
repnz
out
adc
mov
shlb
nop
push
pop
sub
mov
das
mov
mov
or
mov
rorb
das
xor
lock
aam
adc
repnz
push
add
or
jns
nop
jns
pop
inc
cld
fistpll
sub
sub
les
cmp
xchg
cmp
adcl
push
mov
jg
jb
jae
xor
adc
xor
ss
push
fcmovnu
add
and
rcll
mov
jp
test
or
mov
add
pop
xchg
or
xchg
push
inc
cmpl
aaa
xor
adc
ljmp
into
les
test
add
movsb
and
insb
testl
loopne
fdivp
fiadds
or
adc
shlb
and
push
loopne
mov
mov
cmp
add
add
or
inc
dec
lods
and
aad
pop
pop
dec
mov
in
add
add
adc
inc
les
fadds
lock
nop
pop
jns
popa
mov
add
mov
sarb
xor
or
mov
push
pop
ret
arpl
adc
cmp
sbb
addb
iret
add
out
mov
bound
xchg
and
inc
mov
mov
lock
push
jo
xchg
mov
mov
rorb
shrl
mov
push
push
movb
sub
dec
push
dec
push
sbb
jmp
ja
jno
mov
sbb
sub
fnstcw
and
pop
cmc
cmp
icebp
add
sbb
loope
mov
jle
lock
inc
inc
das
loopne
ljmp
jb
cmp
mov
mov
add
pusha
xchg
add
dec
and
leave
mov
inc
imul
inc
cltd
add
and
or
sti
rclb
cmp
xor
push
aad
or
inc
cmp
xchg
and
idivl
fiadds
clc
mov
sbb
scas
mov
mov
cmp
fcomps
aaa
sbb
addl
add
ljmp
les
jo
and
pop
cmp
add
mov
das
inc
sarb
mov
cmp
jg
push
movsb
loopne
pop
mov
adc
push
shlb
sub
shl
dec
loope
lret
imul
mov
dec
pop
insb
jno
push
rorb
idiv
dec
adc
push
mov
sbb
xor
loope
and
dec
loope
adc
mov
pop
loop
cmpb
mov
or
jb
xchg
rcrb
sub
sub
add
sub
xchg
into
pop
push
push
add
or
push
pop
out
pop
das
xor
rol
loope
or
dec
jae
mov
mov
sbb
fsqrt
pop
jb
mov
jecxz
js
mov
mov
aam
cltd
bound
lock
test
push
jbe
icebp
adc
nop
das
test
outsl
sbb
adc
or
lcall
decb
cmp
sbb
xchg
mov
stos
xor
add
sti
add
add
cwtl
xor
mov
inc
xchg
or
adc
pop
push
cmp
cld
cmp
sbb
fadds
in
jle
in
sub
pop
stc
nop
shll
add
xor
sub
imul
test
add
add
es
daa
and
inc
push
or
pop
in
aad
addb
pop
test
fidivs
or
xchg
inc
push
movsb
sub
in
into
nop
not
fsubrl
push
ljmp
bound
cwtl
cmp
lea
incl
stc
cli
sbb
inc
push
jmp
add
shlb
leave
cli
jg
decb
sub
pop
leave
xchg
xchg
icebp
xchg
adc
leave
mov
test
xor
fimull
and
and
std
jg
mov
push
mov
leave
cwtl
jb
push
test
gs
lahf
mov
stc
sbb
mov
mov
das
mov
add
mov
inc
mov
in
cmp
es
add
std
scas
inc
aam
aaa
or
movsb
fdivrs
arpl
pop
add
fisttps
stos
or
icebp
outsl
stos
cmc
inc
nop
dec
inc
cs
mov
clc
test
xchg
orl
jecxz
notb
sub
xor
lods
enter
fsubs
mov
mov
cmc
test
pop
add
add
and
mov
push
add
ret
mov
push
pop
loope
mov
push
dec
sub
push
mov
and
jmp
push
cmp
data16
add
dec
mov
pop
subb
mov
scas
mov
pushl
hlt
mov
leave
jmp
pushf
or
lcall
ja
daa
cld
add
addb
sub
xchg
dec
sbb
xor
and
rorb
loopne
cs
jecxz
loope
push
add
sbb
add
cmpsb
push
andb
pop
or
roll
push
add
imul
cmpsb
addb
pop
and
in
push
add
orb
push
add
and
xchg
push
jle
dec
xchg
add
or
add
jbe
andb
xchg
fcmovb
mov
push
frstor
jg
out
mov
cwtl
add
mov
cs
leave
pop
cltd
es
and
mov
jmp
dec
jp
call
adc
pop
aad
pop
pusha
adc
add
fs
jp
rcll
mov
pop
or
adcb
mov
add
loop
add
int3
popa
outsb
mov
adc
add
testb
xchg
repnz
add
push
and
or
push
shlb
test
mov
cmp
cmc
mov
and
or
sbb
testb
pop
mov
fwait
js
cmp
clc
mov
or
sbb
add
add
or
xlat
das
add
scas
ret
sub
loopne
add
or
push
cmpsl
mov
pusha
sub
leave
add
mov
cmp
inc
or
cmp
imul
fsts
mov
sub
or
jl
sub
xchg
push
fstp
rclb
shrb
add
pop
add
ret
je
gs
mov
cmpsb
mov
or
das
mov
addb
cs
add
lcall
inc
jb
inc
aas
cmp
inc
ds
jo
test
push
add
mov
xorl
popf
ret
and
jmp
jb
jb
data16
jnp
cli
add
out
roll
mov
jl
cmp
adc
inc
xor
push
lods
inc
iret
cmpb
and
aad
ljmp
cmc
scas
jo
rorb
pop
inc
add
aaa
fidivrl
sub
cmp
or
cs
sub
jl
fiaddl
mov
out
or
mov
xor
mov
pop
repz
shlb
push
cmpsb
fisubrs
jg
jbe
bound
outsb
outsl
pusha
insl
cmc
cltd
shlb
or
push
cmc
add
cmpsl
pop
ljmp
adc
mov
inc
andl
mov
icebp
movsl
or
push
or
push
int
stc
mov
xor
sbb
push
hlt
inc
aad
adc
xchg
or
or
xchg
addl
addb
das
decb
sbb
rcl
add
pop
cmp
and
mov
mov
addr16
add
dec
and
mov
pusha
roll
cmp
sub
mov
pop
in
or
cld
jmp
out
fs
inc
mov
xchg
pop
test
inc
push
lods
std
inc
je
int
adc
push
adc
adc
mov
sbb
and
dec
call
aam
sbb
shl
daa
mov
incl
insw
and
mov
xor
lock
push
outsl
shrb
add
lds
adc
movsb
ret
lret
repz
cmp
pusha
adc
shl
add
call
subb
mov
sbb
xchg
adc
movsl
es
add
sub
xchg
sub
ret
outsb
add
clc
pusha
sub
or
out
xchg
and
xchg
or
pusha
pop
repnz
xchg
cmp
daa
push
adc
movsb
mul
popf
xchg
fdivrp
add
loope
je
loop
fstps
mov
or
sbb
mov
adc
sbb
sub
sub
add
test
ljmp
mov
imul
push
lcall
fbld
into
mov
fdivrs
xchg
rolb
subb
add
cmpsb
test
add
and
push
lods
pushf
jp
jbe
inc
dec
push
loopne
mov
loopne
lret
fmull
sbb
pop
ret
adc
dec
cmp
cmp
inc
mov
push
adc
pop
ret
dec
dec
add
scas
sahf
push
push
pusha
push
add
lahf
loopne
ret
cmp
sbb
cmp
add
pusha
mov
mov
incb
subb
push
sbb
adc
ficompl
ret
sbb
adcl
data16
movsl
push
orb
add
or
inc
or
jbe
and
rolb
lcall
and
test
add
mov
hlt
fst
mov
addl
mov
push
mov
xchg
xorl
inc
sbb
lock
test
mov
mov
ljmp
jo
pop
lods
ror
and
arpl
sar
js
push
sub
xchg
sub
icebp
insb
xchg
add
sub
ret
push
mov
xchg
push
xor
sbb
push
cwtl
repnz
jb
adc
push
loope
and
mov
stc
ret
shrl
mov
xor
cld
xor
mov
outsl
mov
roll
mov
jmp
mov
fucom
push
scas
mov
shlb
and
cld
orb
fcoml
mov
push
cmp
inc
int3
inc
pusha
ret
or
adc
je
adc
insb
cld
sub
mov
push
rolb
or
imul
jge
outsb
and
subb
or
bound
or
adc
icebp
dec
inc
test
ljmp
add
sbb
or
pusha
add
aam
in
fbstp
xchg
popa
adc
jecxz
and
sub
lds
sub
push
push
xchg
movsb
popa
xchg
push
add
leave
and
mov
pop
addl
xorl
popa
cwtl
adc
add
lock
add
sub
lods
loop
pop
push
outsb
and
test
adc
dec
adc
add
insl
jge
popa
or
sub
pop
gs
das
stos
xorl
and
jo
mov
loop
and
jmp
push
pop
cmp
lock
cli
dec
sub
add
lock
movnti
jo
insl
adc
repnz
pop
sub
jg
dec
pop
add
push
movsl
aad
adc
sub
sub
add
push
mov
adc
push
cmp
and
pop
pop
pop
lods
add
dec
and
xchg
es
adc
push
sti
dec
mov
jge
sbb
or
outsl
scas
movsl
cmp
inc
xor
or
xor
dec
test
sbb
push
xchg
jbe
mov
cmp
stos
pushl
adcl
push
adc
cmp
clc
orb
xlat
decl
add
rcrb
int
rcrl
push
xor
add
scas
adc
adc
add
sbb
inc
fdivrl
push
or
pop
loop
or
subb
jno
mov
sub
pop
jg
test
insb
cmp
rclb
jo
popa
push
mov
push
lock
pusha
push
and
xor
ret
mov
aam
inc
jns
xor
cmp
rclb
lock
mov
inc
outsl
loope
xchg
nop
or
mov
mov
fistpll
pop
in
sbb
cwtl
ds
push
addb
push
lret
shlb
inc
adc
adc
add
pop
cmp
push
jo
add
push
jb
cli
jg
push
adc
adc
or
pop
push
push
and
call
fiadds
xchg
sbb
mov
call
mov
imul
xor
adc
outsb
std
lahf
ss
hlt
lock
adc
ljmp
cmp
dec
fcmovbe
pop
push
adc
xor
xchg
and
mov
jg
mov
or
cmp
add
ret
xor
std
ret
mov
or
rorb
mov
rorb
or
and
xchg
xchg
ficoms
fsts
ret
or
push
sbb
push
ret
fldl
inc
scas
or
cli
dec
sti
xchg
lds
push
call
cld
jmp
add
add
fcomps
mov
sub
adc
repz
mov
sbb
sbbb
push
xor
dec
adc
sub
aaa
mov
ret
cmp
lock
and
popa
xor
push
nop/reserved
jns
shrb
icebp
jo
add
and
mov
or
sbb
sub
add
lock
xchg
mov
pop
xor
nop
push
inc
inc
jo
rolb
pop
and
push
and
ret
inc
addr16
scas
mov
jo
mov
mov
dec
pop
add
add
adc
pop
ficoms
adc
repz
in
imul
sbb
inc
lods
xchg
pushf
adc
mov
xor
decb
adc
mov
fwait
jecxz
daa
mov
push
adc
pop
xor
outsb
pushf
jns
add
je
mov
mov
mov
mov
test
roll
jno
insb
mov
bound
pop
or
add
jle
push
cwtl
in
inc
and
push
data16
fists
scas
mov
outsb
add
push
push
test
add
roll
subb
icebp
nop
in
cmp
adc
mov
test
pusha
cld
mov
mov
andb
mov
addb
mov
sbb
cmpsb
lret
shrb
add
lock
in
roll
add
rolb
in
mov
icebp
lock
inc
nop
imul
cmp
mov
ret
movsl
mov
push
xor
xchg
call
push
fadd
cmp
sbb
push
inc
mov
mov
or
and
push
mov
loope
mov
cmp
cmp
pop
or
xchg
adc
loopne
sbb
jae
add
inc
add
stc
sub
xchg
cltd
xor
xor
xchg
mov
out
xor
adc
jo
lock
xchg
mov
sbb
lock
sbb
andb
fbld
test
cmp
fadds
inc
pop
add
jmp
js
sarb
clc
and
out
mov
aad
nop
mov
rorl
pop
add
lret
or
add
imul
cwtl
clc
fwait
in
insl
jb
adc
cmp
mov
outsl
jp
or
sub
enter
xor
or
es
rcr
nop
cli
in
mov
mov
mov
add
adc
and
inc
addl
or
pop
sub
mov
push
mov
sarb
and
push
mov
push
pop
and
ljmp
dec
add
mov
nop
sub
mov
dec
xchg
inc
push
add
xor
lcall
pop
sub
add
xchg
mov
mulb
or
push
roll
scas
push
out
xchg
push
aas
js
sbb
idivb
mov
and
js
pop
and
stos
ret
add
mov
mov
xchg
adc
pop
mov
push
mov
adc
adc
cwtl
cmp
imul
mov
mov
sbb
add
adc
nop
xchg
add
loope
dec
sbb
adc
or
out
add
inc
add
push
adc
mov
sbb
in
addb
cs
jne
cwtl
sub
and
stos
or
mov
add
xor
loopne
add
add
jae
or
inc
mov
pop
lods
sbb
xchg
sbb
mov
inc
xorb
dec
or
fbld
xchg
pop
stos
pop
test
and
jb
aad
andl
add
add
andb
sbb
jmp
add
idivl
sbb
cs
cwtl
xchg
inc
pop
add
xchg
pop
push
mov
movsl
aam
and
dec
rcrl
xchg
dec
mov
dec
add
mov
and
xchg
les
movsb
push
sbb
nop
cmpb
add
test
cs
push
cmp
mov
xorb
ljmp
pop
push
dec
add
inc
orl
xchg
ljmp
mov
outsb
aas
cmc
pop
shld
mov
jmp
pop
sub
xor
pop
mov
movb
movsb
jg
xchg
loopne
shll
sbb
dec
and
mov
push
test
push
add
js
cmpl
sbb
or
inc
or
mov
sub
rcll
dec
push
mov
or
inc
mov
sbb
dec
dec
cmc
inc
push
rolb
inc
add
sbb
push
popf
pushf
push
aaa
fiadds
add
or
pop
inc
add
mov
xchg
inc
aad
xor
or
sub
add
jb
mov
push
xor
iret
pop
insb
ljmp
movsb
enter
xchg
mov
loop
pop
lea
xchg
test
cmp
inc
sarb
in
and
les
xchg
rolb
ret
pop
call
mov
ret
jle
add
or
add
in
into
mov
or
mov
mov
adcl
in
xchg
add
pop
aaa
add
push
cld
push
mov
scas
cli
pop
dec
inc
inc
inc
sbb
mov
adc
inc
xor
in
or
dec
ljmp
jg
jo
aas
cmpb
add
ja
lods
jg
add
xchg
sarb
cli
adcb
jbe
scas
jbe
xchg
adc
adc
and
or
xchg
int3
sbb
xorl
pop
add
add
add
test
and
aaa
jmp
add
push
and
jmp
shl
jne
inc
xor
sub
adc
jecxz
or
jno
or
adc
pop
call
hlt
cmp
xor
cmp
xchg
loopne
hlt
loope
and
or
arpl
je
insb
sbb
popl
push
sar
pop
inc
or
cmpl
mov
lret
push
add
inc
add
cmp
js
repnz
fldenv
push
pop
push
cmp
pushf
and
rclb
jle
push
bound
je
and
scas
hlt
add
and
fnstenv
add
mov
push
jmp
cmp
arpl
pusha
aas
inc
mov
adc
adc
cli
inc
pusha
add
add
lcall
inc
jmp
cmp
ja
mov
arpl
inc
adc
ret
mov
adc
lock
loopne
and
push
and
je
ret
aaa
adc
aas
add
jb
cld
and
sub
mov
push
xorb
cmp
addb
fisttpl
movsb
and
sbb
sub
mov
push
adc
mov
mov
xor
loopne
rolb
sbb
mov
cmp
xchg
fiaddl
loopne
les
xchg
cmp
int3
jle
movsl
mov
push
push
xchg
add
int
pop
les
mov
cmpsb
or
sub
shrl
push
loope,pn
lods
dec
sub
add
pop
imul
push
xchg
sahf
insb
dec
clc
ffree
loop
cmp
sub
sub
negb
mov
mov
roll
sub
dec
sbb
adc
aaa
call
aad
nop
xchg
ljmp
add
mov
lcall
add
push
cmp
movsl
or
icebp
pusha
sbb
mov
loop
test
stos
mov
loopne
adc
fs
push
cld
test
xchg
ss
mov
sbb
mov
dec
add
fs
mov
ljmp
loope
mov
inc
cmc
add
sbb
xchg
std
or
push
outsb
mov
cmp
xlat
mov
and
mov
adc
mov
cmp
shll
sub
add
pop
and
sarb
pop
inc
push
orl
xchg
pop
pop
adc
rolb
mov
sub
loop
std
hlt
sub
and
mov
sub
mov
xor
xor
lds
mov
or
das
dec
add
mov
cmpsb
cmpsb
dec
hlt
push
cld
andb
hlt
mov
test
and
lcall
mov
test
popf
sahf
stos
and
lcall
mov
loope
push
ret
outsl
inc
cmp
sbb
std
mov
xchg
orb
imul
les
call
roll
stc
xor
pop
cltd
in
das
mov
fstpl
add
icebp
addb
js
movsl
mov
leave
rolb
mov
add
jl
shll
xor
xchg
stos
movsl
fcmovu
jp
orb
rorb
rcl
aaa
cld
addb
and
or
clc
andb
xchg
inc
cmc
push
mov
xchg
add
ret
inc
push
mov
adc
mov
push
ret
pop
add
push
inc
mov
cmp
push
cmc
cmp
icebp
push
cmpb
add
jo
add
mov
out
or
xchg
or
repnz
movsb
push
push
xor
inc
xchg
jmp
faddl
push
add
addr16
jl
mov
jl
shll
mov
es
fimull
mov
xchg
inc
cld
jg
movsb
andl
add
jno
add
lock
cmc
mov
andl
cmp
xor
jo
or
pop
inc
mov
lods
or
adc
pop
int3
cmp
movsl
movsl
popf
les
push
pop
xchg
dec
push
negl
call
js
inc
andl
mov
pusha
es
mov
jno
and
decl
dec
mov
adc
mov
or
ficompl
lock
rcrb
dec
inc
je
xor
mov
cwtl
jecxz
enter
roll
outsl
jg
adc
icebp
inc
popa
aas
and
das
push
add
add
xchg
outsl
mov
lcall
jg
fidivs
pop
xchg
push
aas
aad
push
add
xchg
ljmp
sub
push
pop
xchg
sub
lock
std
jg
cmpb
pop
or
cmp
push
jne
icebp
inc
scas
test
inc
mov
xchg
cmp
add
adc
sub
aad
mov
add
mov
mov
cmp
rcrb
push
cmp
cmp
push
sbb
sbb
mov
or
cmp
inc
push
mov
cmp
cmp
cmp
push
nop
add
adc
and
add
shrb
sbb
in
incl
out
imul
add
ret
adc
push
pop
cmpb
dec
imul
aaa
inc
cmpsb
in
jmp
aaa
pop
addb
pop
in
push
xor
aaa
je
in
outsl
adcl
inc
jecxz
add
mov
popa
jp
and
fbld
rclb
movsl
popf
shlb
mov
cmp
fcmovu
rorb
subl
push
push
add
push
jge
mov
sbbb
mov
jno
fldl
fldl
cmp
ja
jo
enter
and
xor
or
sbb
push
cmp
loop
daa
cmp
das
adc
or
mov
fsqrt
test
fldenv
out
cli
pop
sbb
fs
into
and
cmp
aaa
into
shl
or
cmp
mov
and
cmp
jg
jb
mov
pusha
xor
pop
fs
jle
imul
loop
and
cmpsb
loopne
imul
push
jb
shll
push
test
push
call
cli
push
and
adc
jo
sub
jne
push
mov
cmp
movsb
adc
adc
es
lods
loopne
dec
les
push
cmc
jo
and
bound
fs
jle
pop
loope
ja
movsb
stos
pop
aaa
roll
imul
pop
jo
mov
add
inc
add
lds
or
add
inc
inc
xor
mov
pop
movsl
insb
or
fwait
dec
hlt
call
xchg
loope
pop
xor
inc
out
les
sub
movsl
and
xorl
aaa
cmp
xlat
fwait
or
inc
jae
inc
jno
mov
sub
addr16
inc
int3
retw
mov
mov
decl
mov
lock
or
adc
push
adc
add
jp
nop
adc
sahf
sub
cli
call
mov
shl
adc
cmpsb
es
push
xchg
push
lds
test
cmp
add
push
lds
stos
pushf
rcrb
imul
adc
mov
cmp
sub
mov
inc
js
mov
push
push
add
scas
xor
push
sbb
sarb
and
andl
notl
pop
fisttps
and
ret
mov
add
adcl
adc
inc
pusha
add
add
subb
adc
das
cli
jns
xorb
xchg
adc
sti
mov
add
imul
cmpl
fsubp
imul
and
lea
pop
mov
les
jp
push
adc
or
subb
push
pop
dec
xchg
stos
lea
lahf
adc
mov
loope
cmp
mov
push
xor
add
les
adc
das
in
js
add
fmul
sbb
in
das
adc
push
inc
sub
dec
add
mov
scas
add
roll
or
add
lret
inc
add
cld
add
cltd
mov
mov
clc
lcall
add
pop
fmull
adc
xchg
fiadds
mov
lds
add
pop
mov
and
and
lds
or
rcr
cmc
and
ret
push
das
add
cmp
pop
das
dec
add
and
add
std
cmp
mov
rclb
adc
sbb
pop
mov
dec
flds
pop
ret
std
sub
shll
adc
adc
clc
push
cmp
imulb
push
aaa
or
outsl
dec
xchg
mov
sub
and
imul
insb
repnz
add
push
cmp
je
js
and
ds
fcoms
mov
inc
mov
mov
jns
sbb
nop
testl
movsl
das
pusha
rolb
add
xorl
dec
push
lods
sbb
sbb
sbb
jbe
cmp
add
mov
sbbb
dec
pop
pop
add
test
pusha
lock
in
or
inc
and
pop
mov
sub
inc
xchg
imul
int3
test
subb
rorl
mov
inc
push
or
outsl
shl
mov
jns
or
mulb
inc
or
or
sar
decl
adc
outsb
jmp
js
xchg
loope
arpl
mov
xor
fld
mov
icebp
mov
aam
pop
add
adc
dec
mov
loope
xadd
sbb
and
xor
adc
push
loopne
dec
filds
mov
and
sbb
shl
add
inc
inc
stos
sti
es
pop
inc
sbb
add
xchg
mov
add
rorb
inc
mov
push
adc
das
pop
shrb
call
stos
loope
inc
rcr
aam
scas
stos
lds
mov
lock
dec
add
mov
ret
test
sbbl
cmp
je
push
sbb
int
add
orl
jle
movsl
jno
inc
mov
faddl
test
inc
scas
or
lock
add
mov
adc
sti
mov
add
mov
sub
or
lds
xor
xor
rcrb
aaa
add
loop
scas
dec
adc
push
dec
movsl
stos
adc
movsl
repnz
cli
leave
cmp
jp
shlb
fisttpl
push
dec
pusha
jns
fsts
leave
push
add
jmp
pop
mov
and
sbb
pop
call
test
sub
mov
sti
ja
fldl
leave
sub
loopne
icebp
mov
cmpsb
jo
mov
or
push
loop
inc
inc
test
xor
add
cmp
mov
loopne
pusha
xor
lcall
hlt
mov
and
fnstsw
and
add
testb
insb
lret
dec
inc
push
jbe
push
push
test
jecxz
push
in
xchg
cs
jmp
mov
jnp
inc
mov
push
testb
xchg
insb
cmp
jp
mov
lock
roll
subl
dec
sub
adc
push
test
inc
fsubl
bound
mov
mov
loopne
sbb
and
cmp
add
xor
and
call
rcll
insb
sbb
pop
jmp
and
jecxz
rorl
add
test
pop
add
hlt
xchg
mov
movsb
popl
and
std
add
mov
inc
jmp
fstp
addb
sbb
clc
mov
xor
shrl
or
dec
mov
adc
xor
dec
adc
jp
mov
loope
inc
jecxz
add
push
xchg
push
dec
imul
jmp
addl
jo
lods
jae,pt
jg
add
pop
cmc
lahf
insb
sub
rcrb
sub
add
in
add
rolb
jg
in
cwtl
push
sbb
add
push
and
sbbb
pop
adc
int3
cmpb
mov
and
cs
mov
shrb
push
in
jle
cmp
shrb
jo
pop
es
xor
pop
cmp
dec
add
sub
adc
add
inc
or
push
cmp
out
test
push
rcrb
push
adcb
arpl
add
cmc
outsb
add
sub
shl
push
mov
adc
fwait
jbe
cmp
addr16
mov
push
in
bound
sbb
xor
loope
lods
add
out
flds
jbe
movsl
insl
push
add
cmp
lock
push
enter
xorb
adc
test
inc
rolb
inc
sub
punpcklbw
pop
mov
inc
jg
ljmp
push
add
mov
xor
or
jne
adc
or
xor
sub
es
jnp
shlb
hlt
mov
ficomps
push
push
xor
and
stos
jo
or
outsl
clc
fcoml
aam
adc
lea
pop
add
mov
fistps
dec
icebp
loopne
movsb
out
xor
inc
add
xlat
loopne
xor
dec
push
xor
xor
adc
or
cmpsb
jecxz
adc
or
bound
add
es
insb
xlat
rcrb
aaa
xchg
or
push
xor
in
jne
bound
xchg
loop
xor
lcall
adc
int
xor
mov
jl
mov
push
es
add
add
xor
cli
sbb
imul
pop
add
sbb
sub
fcoml
filds
or
dec
lcall
push
cld
pushl
add
ret
imul
inc
je
xchg
add
ds
cmp
pop
xchg
scas
sar
aaa
fidivs
xchg
nop
push
addr16
cmp
fnsave
fwait
js
shlb
repnz
xor
push
pop
add
push
shrl
xchg
jno
cmpsb
add
in
add
add
mov
push
xchg
xor
add
shll
movsl
lods
add
lock
add
loopne
sub
js
testb
add
push
sub
add
push
xor
inc
hlt
aaa
pop
xchg
mov
or
inc
mov
add
and
or
loope
lahf
sbbb
xor
xor
mov
lahf
ret
call
or
xor
or
loop
in
xor
sub
push
xor
jnp
out
lahf
or
andl
xchg
arpl
add
pop
jle
lods
aam
outsb
cli
fistpll
outsb
pop
cltd
shr
fnsave
inc
stos
jo
subb
andb
addb
and
inc
dec
push
xchg
xchg
imul
popa
push
movsl
push
fisubl
inc
xchg
icebp
dec
xchg
loope
lea
push
gs
add
push
frstor
xor
push
cmc
popa
sbb
cmp
jb
add
and
daa
inc
xchg
add
decl
inc
push
js
inc
shlb
cmp
das
das
rorl
lds
add
jg
lock
jge
push
push
jg
inc
sub
xor
add
jno
loope
jg
shl
adc
add
rclb
insl
xor
sub
cmp
lods
push
inc
or
cmp
and
or
ficoms
inc
add
in
shrb
cs
and
add
lds
jmp
adc
scas
test
sbb
add
test
lods
std
nop
or
sar
insb
int
sbb
ret
testb
ret
mov
inc
clc
loopne
push
test
xlat
push
adc
cmp
and
enter
cmpl
sbb
in
add
jo
add
add
inc
into
push
add
cmc
lcall
pop
xlat
rorb
add
loope
leave
pop
xchg
shr
subb
dec
sbb
test
cld
or
rol
sub
aaa
push
rolb
in
cmp
xor
pushl
xchg
nop
outsl
mov
add
pop
in
jmp
inc
xchg
shlb
pop
rcl
add
loopne
inc
xchg
mov
mov
jmp
ljmp
jmp
mov
mov
inc
roll
clc
mov
rcl
pusha
sbb
cli
les
jbe
push
push
sbb
shll
insl
sbb
jle
shrl
add
dec
stc
ljmp
jne
mov
mov
das
icebp
jg
call
add
or
rcrl
rcll
mov
sbb
add
sbb
imul
adc
cltd
add
adc
or
out
aam
mov
pop
imul
mov
cmp
incl
pusha
or
imul
mov
xor
test
decl
pop
jl
movsb
fs
and
imul
mov
loope
imul
movsb
insl
insl
pop
push
inc
insl
imul
scas
cmp
pushw
mov
pop
mov
jmp
pop
add
adc
aad
sbb
pop
mov
popf
and
mov
mov
mov
rcrb
xchg
lock
push
jb
cs
jo
add
int3
pop
inc
mov
mov
int3
add
stos
xchg
sub
cmpsl
mov
adc
xor
test
movsl
mov
and
std
dec
lret
movsb
shll
sub
jb
sbb
push
jnp
pop
push
jb
je
in
movsb
pop
jb
xlat
es
inc
cmp
push
inc
inc
or
int3
call
fwait
push
adc
rolb
mov
mov
sub
xchg
or
shrl
pop
mov
sbb
mov
iret
sub
rolb
rol
fidivs
subb
outsl
sub
push
mov
shll
repnz
sbb
fsubrs
movsb
cmp
fimull
shl
cmp
stc
outsb
jg
xchg
adc
cmp
imul
ss
xor
daa
add
or
mul
fldt
mov
pop
imul
test
fistl
loopne
xchg
xor
imul
xor
iret
fwait
in
orb
ds
dec
imul
xor
dec
imul
xor
jae
jo
xor
or
mov
and
clc
jnp
cld
jns
jle
xchg
mov
jg
rcl
negb
inc
dec
lcall
test
cmp
jle
jge
adc
imul
imul
pop
or
pop
pop
add
outsl
or
int
and
adc
push
adc
imul
add
or
imul
scas
jge
sarb
adc
pop
mov
outsl
or
imul
mov
fistpll
imul
or
imul
push
mov
mov
out
imul
cmp
inc
cmp
outsl
cmp
imul
xor
and
xlat
and
and
mov
daa
imul
imul
sub
das
imul
outsl
ss
pop
aad
aas
and
or
std
jo
fcmovne
mov
push
fnstsw
xchg
pop
mov
dec
pushf
or
dec
adcl
dec
jbe
inc
add
imul
inc
imul
fsubs
adc
imul
inc
fs
imul
pushl
in
cmp
add
pushf
repz
push
addb
push
fidivrs
push
push
std
push
or
decl
or
rorb
inc
add
xchg
in
push
jecxz
sub
and
push
cli
mov
add
push
adc
adc
xchg
imul
cmpsb
inc
ficoms
push
dec
loop
cltd
push
mov
or
popf
imul
pop
bound
mov
mov
dec
orl
in
or
cmc
inc
and
imul
mov
test
xlat
lea
arpl
sbb
mov
mov
inc
or
lods
jnp
xor
mov
imul
mov
mov
nop
les
mov
mov
push
mov
push
mov
rcrb
sub
imul
sub
mov
mov
pop
lock
rcrb
das
rcll
stos
icebp
aaa
loop
stos
pop
pop
inc
pusha
xchg
ss
mov
push
dec
fistps
xor
es
pop
loopne
pop
dec
les
fdivs
test
ds
test
sbb
ljmp
lods
or
sbbb
addr16
push
adc
test
xorb
mov
add
or
popf
mov
xchg
add
pop
cmp
andb
scas
xorl
push
cld
aam
push
mov
sbb
cmp
dec
cld
and
incl
clc
pop
xchg
popa
add
cli
pop
inc
andl
rolb
jno
mov
add
mov
and
je
and
push
inc
lods
cmp
jb
call
push
add
push
or
insb
add
ljmp
sbb
or
rclb
adc
xor
stos
test
loopne
jp
int
add
loopne
push
popa
cmp
insb
pop
pop
cmp
adc
xchg
inc
sub
mov
jb
mov
mov
pusha
imul
sbb
mov
mov
push
pop
adc
push
inc
inc
add
fcompl
adc
add
mov
fists
cwtl
sbb
cmp
in
addr16
or
sub
cmp
bound
mov
pop
push
inc
cli
testb
insl
loope
fldcw
xor
cmpsl
or
ja
cmp
int
add
xorb
fsubs
sub
xlat
and
or
popa
dec
add
push
and
or
movsw
sar
add
call
inc
mov
rcrb
ljmp
sub
movsl
mov
xlat
and
fsubrl
cmp
pop
mov
and
inc
xor
bound
addb
ljmp
push
loopne
lock
decl
fisubs
bound
cs
or
sub
and
cmp
mov
jo
mov
mov
dec
xchg
test
clc
sbb
rolb
add
add
lcall
test
add
pop
inc
sbb
mov
clc
xor
or
cmp
icebp
cmpsb
imulb
das
nop
cs
cltd
pop
imul
inc
aaa
test
mov
outsb
cmp
mov
adc
pop
adcb
es
xor
and
in
inc
cmp
adc
daa
nop
sub
aad
and
andb
push
add
jne
mov
dec
cld
or
and
out
inc
into
lods
sbb
loope
push
add
sbbl
or
add
add
pop
cltd
test
data16
adcl
or
push
sub
xor
outsl
cmpsb
aam
clc
sbb
add
int3
add
das
push
lds
push
insb
dec
push
out
xchg
mov
push
push
cmp
xchg
cmp
add
mov
cmp
loopne
add
lahf
push
lret
and
xchg
pop
push
rcrb
cmpsb
inc
adc
and
leave
hlt
add
testb
pop
lds
push
mov
insl
cltd
lea
mov
add
or
movsb
pop
repz
fnstsw
lock
or
bound
in
sbb
shrl
adc
add
adc
sub
fistpl
outsb
test
inc
xchg
mov
faddl
inc
or
rorb
inc
ljmp
nop
add
sbb
es
inc
shll
sub
js
movsb
loope
fisubs
rorl
imul
mov
push
inc
inc
addb
push
push
inc
xchg
leave
adc
ficoms
mov
push
lcall
jbe
pop
xchg
mov
adc
xchg
loopne
jne
mov
adc
add
addb
add
dec
sub
mov
or
mov
inc
xlat
mov
add
adc
mov
push
cmp
and
cmpsb
or
jle
push
fwait
rolb
mov
mov
xlat
add
add
lret
push
fistpl
ficompl
sbb
xor
inc
cmc
dec
push
sub
cmp
rclb
call
js
cmp
mov
loope
push
and
fdivp
icebp
or
in
lds
test
fcoms
xor
inc
push
pop
fldt
popa
stos
inc
and
and
adc
aad
cld
aaa
adc
pop
xchg
sbb
arpl
fidivs
jle
subb
in
nop
test
cld
adc
shlb
ret
out
ljmp
push
sbb
xor
sbb
mov
nop
xor
hlt
add
lcall
inc
inc
adc
pop
push
pushf
pop
add
icebp
pusha
add
movsb
mov
jmp
add
loopne
js
or
push
jno
xor
nop
pop
pop
push
pop
fsubs
pop
nop
xor
negb
sbb
jo
lock
dec
es
xor
rcrb
rcrl
mov
or
add
push
cwtl
repnz
jo
fstps
mov
mov
fidivrl
nop
xor
notl
incl
mov
inc
pop
add
daa
cld
dec
dec
xor
jne
aaa
ljmp
and
int
sbb
xchg
jmp
mov
add
jmp
pop
cmpb
or
daa
adc
popa
push
and
stos
adcb
movsb
rclb
add
xchg
pop
sbb
add
call
ret
mov
fdivr
sub
movsl
repz
mov
or
loopne
add
pop
or
add
push
clc
rclb
icebp
push
or
jno
cmc
inc
xor
push
insb
lock
cmp
or
sub
add
pop
sbb
inc
outsb
xor
sarl
or
cld
bound
mov
pusha
mov
in
in
adc
lcall
mov
adc
adc
add
jo
mov
or
mov
fs
and
aam
ljmp
incl
push
add
and
loopne
push
test
mov
cmpsl
stc
mov
mov
stos
loopne
sub
mov
jnp
in
jg
lret
or
shrb
jbe
mov
jg
pusha
rorl
xchg
mov
or
call
jge
rcl
and
xor
add
repnz
cli
rcr
mov
jb
push
rorb
movsl
pop
dec
lret
mov
cwtl
adc
pusha
jo
adc
movsb
xor
push
nop
pop
shrb
test
adc
jl
xchg
subb
jg
or
jo
rcl
sti
call
sub
cld
cmp
pop
insl
push
sub
add
sbb
ds
das
nop
xchg
shrb
adc
aaa
outsb
inc
ret
cmp
js
inc
icebp
or
jg
mov
out
cwtl
xorb
add
add
ror
add
sbb
pop
push
loopne
fnstsw
fisubrs
sbb
cli
xor
xor
cmp
pop
pusha
sub
xchg
add
pop
cmc
bound
cs
add
les
pusha
or
adc
and
mov
imul
mov
jbe
aaa
nop
imul
rol
add
mov
push
jb
adc
sarb
push
clc
xor
push
scas
in
push
dec
and
shlb
mov
sbb
dec
jno
adc
jle
cmc
rol
add
add
loop
inc
jg
jne
sbb
bound
and
std
ja
mov
adc
xchg
and
adcl
add
mov
decb
inc
mov
in
jne
push
sbb
popf
add
push
bound
lock
fisubrs
or
mov
ljmp
aad
nop
pusha
add
addl
les
cmp
mov
nop
test
push
cmp
adc
sub
bound
lods
hlt
push
push
or
add
mov
mov
sbb
inc
dec
ljmp
mov
nop
mov
add
mov
and
dec
enter
push
gs
mov
imul
outsl
add
jp,pt
push
popa
add
push
jg
cld
pop
add
inc
fnstcw
shll
cmp
cmpb
or
adcl
or
xchg
test
sub
add
sub
or
subb
sti
scas
sbb
pop
or
or
movsb
sub
mov
add
mov
aad
or
add
xchg
adcb
pop
fs
mov
jle
mov
xor
insl
xchg
add
jbe
js
stos
addb
imul
test
dec
jle
movsl
push
sahf
cmp
flds
push
test
cmp
add
enter
or
mov
add
orb
loope
jge
and
mov
and
xchg
mov
aam
mov
adc
subb
pop
push
cmpsl
pushf
add
or
insb
adc
and
lock
sbbl
ficomps
inc
jae
dec
imul
insb
mov
xor
and
sti
xchg
mov
les
addb
clc
add
jle
mov
test
scas
pop
dec
sub
sbb
push
andl
push
sahf
xor
jmp
push
mov
xchg
mov
push
xor
rcr
jl
inc
stos
adc
or
popf
push
and
bound
sbb
and
jne
bound
rclb
insb
sbb
mov
push
sub
and
addb
imulb
out
ds
daa
add
cmp
mov
nop
popa
sub
pop
sarb
mov
push
pop
adc
popl
mov
cld
xchg
adc
inc
push
adc
rol
mov
subb
sbbl
xchg
fdivrs
fwait
je
inc
rorb
add
rol
jo
pop
dec
pop
mov
iret
and
cmp
add
sub
inc
movsb
pop
adcb
stos
mov
test
adc
scas
cwtl
ret
mov
cmp
sbb
enter
insl
jl
je
fidivrl
roll
lock
and
sahf
rcl
popa
ret
jle
cld
jg
inc
aas
push
aas
xchg
test
aas
sbb
sbb
rol
pop
orb
movsl
enter
fmull
mov
and
lcall
outsb
sahf
mov
and
push
sub
inc
pop
xchg
or
mov
dec
add
sbb
mov
pop
fucom
mov
pusha
add
push
bound
push
mov
mov
gs
mov
in
es
cwtl
jp
inc
xor
mov
mov
sbb
adc
inc
outsl
mov
mov
pusha
or
sarl
fimuls
mov
pop
fcoml
xchg
push
popa
add
mov
outsb
mov
or
pop
popa
add
sub
lahf
xor
test
push
jbe
pop
flds
lahf
addb
cmpsb
sub
mov
cli
out
sbb
and
mov
add
sbb
enter
jno
rcrl
shr
cmpsb
mov
mov
pop
and
ss
cmp
mov
pushf
sub
loopne
dec
fwait
push
and
pushf
bound
jl
aaa
mov
mov
loop
mov
adc
outsb
and
cs
subl
cltd
cli
cmp
pusha
xchg
push
mov
aam
mov
bound
pop
aad
fcmovnbe
aaa
push
adc
arpl
imul
cmp
inc
sbb
xchg
stos
mov
fisttps
push
shll
mov
icebp
add
shl
repnz
loopne
xor
or
sub
xchg
inc
pusha
pop
in
xorl
out
int
bound
inc
movsl
stos
enter
inc
mov
add
adc
ja
mov
sub
sub
inc
ljmp
loop
pusha
mov
push
xlat
push
test
pushf
mov
outsl
inc
or
mov
lret
aam
jl
add
loope
adcb
mov
xchg
lahf
mov
imul
sub
pop
rol
mov
xchg
in
mov
repz
or
rcrb
push
dec
movsl
add
jb
or
pusha
add
xchg
sub
pop
xor
mov
js
xchg
fabs
or
inc
xchg
pushf
or
xor
sub
jge
test
add
mov
adc
jl
sahf
ret
push
sbb
lcall
adc
std
mov
push
popf
cmc
test
push
adcl
nop
or
ret
pop
fs
add
lds
jbe
or
adcl
push
mov
xchg
jbe
cmpsb
xchg
add
outsl
and
push
and
or
and
test
lds
adc
add
sbbl
cmpsb
das
ss
inc
mov
in
adc
in
jmp
cmp
cmp
movsb
mov
or
andl
or
movsb
adc
inc
or
loopw
inc
adc
fsts
push
jmp
rcl
push
dec
ret
mov
xor
sub
or
daa
shlb
cwtl
cmp
sub
rolb
mov
cmp
loopne
push
jp
or
addl
push
add
adc
jmp
ror
lock
add
mov
lret
cmp
stos
adcb
xchg
shll
xchg
mov
cmp
les
cli
dec
pushf
push
popa
dec
and
add
pop
out
pop
sub
hlt
push
dec
cmpb
sbb
push
push
mov
xor
cmp
sub
ror
and
es
sub
mov
subb
sbb
rcrl
push
xor
add
push
inc
xchg
sahf
fs
std
outsl
adc
int
cmp
sbbl
inc
in
lcall
ljmp
add
jo
fimull
or
add
repnz
clc
call
shr
out
inc
add
fisttpl
loope
cmp
pusha
shlb
or
dec
adc
shlb
pusha
mov
and
loop
sbb
test
popa
xchg
lea
mov
call
rclb
out
movsb
and
andl
shrl
and
outsl
dec
pop
adc
cmp
pop
movsb
aas
dec
movsb
pop
xchg
stos
mov
rorb
imul
or
loopne
sub
dec
mov
inc
cmp
bound
dec
xchg
jmp
mov
sub
adc
jge
pushl
lahf
adc
hlt
rorb
pop
and
incl
pop
movsb
out
sub
cmp
pop
shrb
aad
fldt
aad
push
xchg
adc
sub
xlat
shll
repnz
pop
cmp
and
adc
xchg
call
add
lods
jg
call
gs
or
xor
xchg
icebp
or
adc
cld
mov
jg
adc
addb
cs
or
cmp
rolb
mov
outsl
int3
mov
xchg
add
push
add
push
jo
add
push
les
in
xor
pusha
rcrl
popa
rcll
imul
arpl
and
push
fstl
pop
mov
inc
or
push
int
xchg
leave
inc
push
push
enter
and
out
add
pusha
xor
enter
push
pusha
int3
add
aad
movsb
icebp
scas
jnp
pop
or
push
sahf
sub
es
adc
sbbb
inc
ret
or
xor
dec
loopne
out
mov
inc
rolb
xchg
aad
mov
cmp
dec
fidivrl
push
mov
adc
mov
push
lcall
inc
sbb
pop
cmp
add
repz
pop
dec
loope
popa
arpl
jb
adc
sbb
inc
lcall
add
pop
xchg
add
lret
xchg
sarb
ja
ss
daa
mov
test
add
loopne
mov
push
mov
add
inc
add
ret
loope
adc
jle
mov
xchg
rclb
add
pusha
sbb
add
ror
push
and
add
insb
sbb
inc
sub
dec
mov
ret
and
adc
add
outsl
fdivs
push
jl
cs
add
push
jo
loop
mov
xchg
mov
ss
sub
shl
lods
and
sbb
nop
push
sbb
adc
cmp
mov
and
or
dec
push
or
aam
add
fsub
or
adc
or
xlat
cmp
rclb
movsl
pusha
lods
adcb
test
mov
ror
adcl
mov
sbb
adc
movb
ljmp
sub
jl
adc
xchg
jmp
pop
add
ljmp
add
aam
sub
xchg
inc
pusha
sbbb
jae
ljmp
adc
ljmp
add
mov
add
mov
lret
push
inc
in
leave
sub
fisubs
int
push
repnz
cmc
add
decb
and
cli
add
aam
jne
scas
cmpsl
inc
and
fists
dec
lods
cld
and
mov
rclb
cmp
cmc
cmp
orb
xor
adc
or
jb
mov
rcl
or
lds
pop
add
add
hlt
out
mov
jle
shrb
cmp
mov
mov
dec
add
cli
adc
add
sbb
enter
rol
add
inc
pushl
mov
cmp
bound
cmp
xor
dec
push
sarb
adc
subl
test
repz
and
push
aam
inc
mov
bound
mov
add
xchg
test
cltd
mov
pushf
leave
xchg
jno
jns
push
or
and
test
scas
jp
lret
sbb
mov
add
outsl
and
sub
call
cli
lods
sar
mov
xchg
add
mov
or
pop
fisttps
ret
fwait
inc
pop
xor
test
sbb
mov
or
je
fsubrs
xor
ficoms
push
std
out
clc
cmp
cmp
add
add
movsl
xchg
es
into
push
and
sub
movsl
aaa
xchg
dec
mov
or
movb
lds
cli
ljmp
push
pop
test
add
rolb
mov
mov
cmpb
movsb
shll
or
lcall
add
add
lods
sub
out
mov
add
jmp
fisubs
adc
inc
push
mov
jnp
outsb
push
and
sbb
pop
or
fidivs
push
sbb
dec
adc
jl
loopne
inc
inc
leave
test
add
inc
dec
mov
test
dec
mov
mov
mov
hlt
inc
add
loope
mov
add
sub
mov
add
jp
in
sub
lcall
and
bound
xor
aad
fidivl
stos
jb
xor
movsl
sbb
add
shl
mov
and
push
add
adc
pop
aam
add
test
xor
adc
push
aad
nop
popf
or
adc
add
outsl
fldenv
test
mov
ss
leave
cs
test
cmp
and
sbb
add
add
pop
inc
shrl
inc
or
mov
push
les
push
stc
sub
sub
sub
cmp
mov
mov
mov
lock
test
push
dec
adc
dec
mov
scas
add
sub
xchg
orb
adc
js
js
je
movsb
pop
inc
dec
insl
and
dec
mov
adcb
add
xorb
cmc
ret
cmp
das
addl
dec
lcall
fisubl
int3
push
push
mov
push
pop
mov
enter
or
add
test
xor
jle
add
ja
push
loop
jmp
ss
lcall
jmp
push
xchg
shll
ljmp
xchg
or
add
dec
sub
das
inc
movsl
mov
xlat
mov
std
lds
cmp
roll
test
leave
aad
sahf
push
or
clc
jg
mov
lods
add
scas
xchg
push
pop
movsb
add
movsb
pop
mov
icebp
sub
fdivrl
jle
add
xor
add
add
cmp
rcll
jmp
mov
push
in
and
add
mov
inc
mov
sar
jo
lds
or
dec
clc
adc
aas
test
mov
movsl
rcr
pop
stos
push
shlb
mov
lods
pop
and
add
adc
or
adc
pop
adc
aam
jp
xchg
push
fucomp
adc
hlt
fld
lods
movsb
popa
and
test
ja
inc
sub
jg
pop
inc
add
pop
push
and
push
inc
add
push
in
lods
and
pop
les
insb
or
addb
dec
mov
movsl
hlt
adc
or
mov
xorb
jb
ret
inc
cld
push
cli
aad
dec
rolb
jb
jne
add
adc
or
inc
aam
es
add
out
adc
jb
inc
add
sbb
mov
xor
adc
stos
shr
cmp
sbb
push
or
adc
adc
or
or
add
sbb
int3
add
or
cmp
mov
mov
pop
sbb
inc
mov
pop
rorl
ret
or
adc
mov
cli
sbb
lods
rcr
inc
sti
sarl
and
push
add
popa
jg
add
rorl
ficompl
movsb
and
lock
movsb
inc
add
and
das
and
mov
fldenv
and
push
fadds
cli
add
lret
sahf
or
add
frstor
or
inc
or
sbb
or
lcall
push
pop
adc
mov
push
pusha
sbb
fiaddl
rolb
stos
mov
mov
and
add
data16
test
pusha
cmp
imul
xchg
data16
in
dec
adc
xchg
mov
ds
es
inc
bound
or
push
mov
rcll
decl
jecxz
xchg
mov
add
aaa
or
mov
and
push
add
cs
mov
pop
or
mov
or
fistl
or
mov
ljmp
test
xor
inc
loopne
mov
outsl
add
cmp
mov
dec
mov
mov
pusha
pop
in
pusha
jnp
pop
xor
add
das
xchg
ja
cmc
adc
into
add
xor
shl
cmp
or
inc
add
arpl
xchg
or
or
rorb
stos
rorb
pop
aaa
ficompl
mov
and
in
mov
xor
or
enter
shrb
pop
gs
ja
mov
mov
add
pop
fldcw
icebp
ja
cli
xor
stos
loop
sbbl
out
sub
fcmovnb
es
mov
lret
pushf
adc
incb
mov
mov
or
push
add
cltd
add
xchg
cmpb
add
and
repnz
add
inc
into
xor
aam
dec
loope
sbb
sub
pop
sub
loopne
andl
clc
mov
std
loopne
popa
shll
or
mov
leave
loopne
lds
cmc
mov
push
fadds
pop
adc
in
cs
ja
inc
fildl
cli
pop
add
mov
loop
rcrb
sub
add
or
sub
adc
mov
or
pushf
shll
sub
in
xor
jp
adc
call
mov
fistpl
into
andl
cltd
out
adc
lret
dec
in
mov
jb
add
pop
pop
call
lcall
jne
pusha
adc
in
popa
add
test
negb
test
adc
xchg
mov
mov
mov
test
mov
mov
in
add
daa
push
clc
and
adc
mov
call
adc
sub
lock
add
and
jo
sub
and
jp
lock
subl
or
addr16
mov
ja
xor
inc
subb
gs
pop
imul
cmovns
mov
jne,pn
sub
xchg
test
inc
movsl
pop
sub
jge
mov
imul
and
std
or
add
or
add
jns
loope
xchg
loopne
std
hlt
stc
dec
hlt
push
outsl
dec
pop
mov
push
aaa
sbb
sub
and
jae
fistpl
add
jnp
outsb
movb
mov
pop
inc
push
rol
jne
bound
into
jle
clc
jo
adc
imul
xor
loopne
push
gs
test
inc
inc
cld
lock
rcrl
add
xchg
test
inc
xorl
inc
xor
or
hlt
orl
cltd
xchg
stos
xchg
stos
test
lahf
xor
push
stc
mov
sbb
jo
push
popl
xchg
mov
aad
nop
mov
and
sahf
lret
lods
pop
add
add
push
icebp
add
in
mov
xor
movhps
jg
push
add
notb
sbb
lods
std
imul
push
push
add
sbb
mov
xchg
mov
adc
mov
call
imul
pushf
vunpckhps
jo
testb
xorb
inc
push
sti
enter
in
outsl
loopnew
xor
cmp
cwtl
je
add
add
jecxz
movl
adcb
fisubs
cli
out
andl
lock
pusha
sbb
sub
icebp
push
add
mov
adc
xor
and
mov
mov
pop
xor
jo
xorl
mov
std
jmp
inc
mov
stos
in
cli
add
jae
push
scas
cld
enter
jae
sbb
sbb
bnd
out
push
jmp
out
jecxz
add
xchg
sbb
out
aam
add
pop
stos
and
jo
cmp
or
xor
movzbl
pop
add
add
stos
push
xchg
je
std
jae
adc
or
xorb
fisubrl
cmpl
xchg
sbb
add
lcall
gs
shll
icebp
pop
lock
mov
cmp
pop
inc
lock
push
out
movsb
mov
sbb
sbb
mov
cmp
push
aad
lock
dec
rcl
jle
add
out
test
or
mov
loopne
or
sbbl
ljmp
lock
add
mov
jecxz
cwtl
mov
mov
cli
lock
addr16
loope
mov
rcll
lods
jno
rorl
movsl
cwtl
mov
push
sub
mov
or
or
add
mov
enter
xchg
xchg
fdivr
sbb
inc
lcall
cs
mov
jo
loopne
out
dec
xchg
jo
mov
inc
stos
in
sbb
lea
popf
xchg
add
bound
movsb
mov
imul
push
xchg
add
add
jmp
outsl
in
fisttpl
cs
add
inc
push
inc
add
add
sbb
push
add
insl
int
outsl
clc
add
add
stos
cmpsl
add
int3
add
mov
adc
lods
push
mov
and
push
add
rcr
add
cwtl
stos
and
and
pop
adc
pop
cmp
add
aaa
outsl
mov
stos
add
roll
add
add
int
xor
stos
lret
mov
xorb
stos
dec
adc
add
pop
stos
pop
sbb
xor
push
push
lods
test
rcr
mov
sbb
addb
add
lcall
jnp
ja
dec
dec
imul
imul
imul
cmpsl
imul
xchg
out
jmp
jecxz
cmpsl
imul
cmpsl
imul
aas
dec
repz
shrl
cmpb
add
aaa
xor
or
imul
lods
sbb
outsl
jle
add
int
mov
sahf
push
jnp
ja
dec
dec
xor
shll
inc
pop
pop
push
shll
cmpsl
mov
mov
mov
lahf
fwait
xchg
shll
out
int
xor
sti
div
iret
lret
xor
shll
ret
xlat
lahf
cmpsb
stc
rcl
das
shlb
and
rorb
int
cmp
xor
or
xor
repz
pop
sbb
adc
lahf
mov
adc
cli
mov
dec
shll
push
inc
xor
stos
mov
shl
mov
push
arpl
mov
pop
mov
stos
mov
mov
xchg
sbbb
pusha
add
push
push
ljmp
out
mov
sahf
cmpsb
imul
fcmovbe
sbb
xchg
loopne
out
or
sbb
cmp
fwait
out
pusha
add
sti
div
lcall
ret
add
fldt
lods
insl
or
push
roll
xlat
add
daa
dec
imul
add
bswap
fwait
adc
sub
pop
cwtl
adc
sti
ficomps
test
push
push
push
cmpsl
and
movl
sahf
cmpsb
imul
dec
loopne
pushf
cmpsb
inc
inc
movsb
add
xor
mov
mov
movsb
add
fimuls
mov
shrb
rolb
fiaddl
out
testl
sbb
jo
cmpsl
loopne
mov
pusha
andb
cmpsl
imul
adc
or
inc
xor
sbb
loopne
mov
cmp
xchg
sbbl
xchg
xchg
pusha
sahf
add
cmpsl
stos
pusha
dec
aas
cmpb
enter
aam
jno
sub
push
aam
call
add
sub
inc
js
arpl
push
cmp
xor
or
add
jns
test
cs
sbb
sub
xchg
jl
add
data16
add
data16
pop
xchg
repnz
cmp
pop
xchg
repz
sub
add
popa
push
sbb
movsb
add
sbb
pop
rorb
push
rcll
cld
mov
ljmp
and
xlat
mov
xchg
decb
adc
aaa
pushl
add
mov
xchg
shl
push
push
xor
cmpsl
out
pop
xchg
fcmovnb
dec
xchg
in
adc
ds
roll
cwtl
aam
adc
aam
and
push
pop
lcall
mov
les
push
xor
sub
test
xlat
icebp
or
lock
add
cs
mov
and
aam
loopne
mov
std
fwait
or
add
or
hlt
push
adc
mov
loopne
mov
push
push
jp
pusha
xor
imul
or
push
mov
jb
xchg
insb
arpl
add
fdivrs
sbb
push
add
incb
mov
out
orb
add
adc
popa
add
rolb
mov
add
mov
cmp
add
adc
decl
adc
jb
sbb
mov
xchg
das
je
lods
repz
and
cmp
roll
or
xchg
rclb
add
add
lods
xlat
call
xchg
or
adc
jl
and
add
rolb
mov
xchg
repnz
lods
mov
mov
loopne
aaa
or
fimull
fidivrl
mov
shl
mov
add
roll
fcoms
push
test
push
shll
pop
mov
add
push
and
test
mov
lods
rcl
add
sbb
cmp
add
test
dec
mov
dec
xorb
mov
shll
movsl
ret
push
xlat
enter
inc
mov
and
pusha
inc
ret
fwait
call
push
pop
xbegin
stos
or
and
mov
les
lds
in
dec
ret
or
pop
test
fsubrs
adc
and
or
repz
mov
push
js
push
or
outsl
xchg
cmp
pop
loope
aaa
cld
push
push
sub
adc
fs
mov
adc
ljmp
jecxz
push
fnsave
sbb
bound
ja
xlat
rolb
add
mov
mov
pop
add
cld
imul
sbb
adc
rclb
js
or
push
mov
sub
sbb
sub
aaa
cmp
test
jg
add
test
enter
add
rolb
inc
sbb
dec
sub
xor
cmpb
push
in
push
add
jae
pusha
push
shr
clc
push
lock
add
pop
sub
push
icebp
add
pusha
movsb
sub
repz
imul
mov
add
jo
adc
aad
push
cltd
cmp
xor
jmp
aam
pop
shlb
inc
push
push
xlat
aam
sti
cmp
hlt
add
xor
iret
aam
xorl
filds
ja
aaa
sub
cmp
aam
xlat
push
pushf
or
mov
push
or
bound
xor
shl
pop
adc
shlb
sbb
rorb
std
jnp
icebp
es
or
xchg
lds
jo
jno
or
loopne
pop
pop
add
js
pop
push
pop
add
mov
mov
and
jg
sbb
cmp
cmpl
fs
push
in
sub
aad
add
and
and
pop
lret
mov
xlat
incl
es
sbb
push
mov
xor
imul
or
sub
or
xchg
sub
sbb
and
or
mov
mov
dec
jmp
or
test
out
in
and
jb
mov
shrl
inc
xor
and
cmp
inc
add
stos
shll
fs
movsb
or
pop
lock
adc
dec
dec
movl
ret
xor
or
icebp
sbb
lcall
add
add
jg
push
mov
cmp
movsb
adc
and
loopne
add
mov
xor
jo
sbb
xchg
push
lds
and
inc
lods
cmp
test
rolb
cmc
mov
xor
xor
push
xor
mov
sti
rcl
pop
inc
xchg
push
movsb
cmpb
add
aad
out
cwtl
js
jmp
add
ret
push
ljmp
sti
aaa
pushf
push
fstl
add
push
scas
movsb
cmp
ljmp
and
or
mov
jge
sub
add
pusha
pop
push
or
je
inc
cmp
idivb
pushfw
rol
xorb
add
push
add
adc
outsb
inc
add
add
push
fwait
out
cld
ljmp
xor
imul
add
rclb
adcb
add
inc
clc
jg
sbb
adc
xlat
sarl
push
mov
mov
pop
or
shll
pop
movsb
pop
insl
mov
push
jp
jne
ret
in
jbe
fistpll
in
jg
fucomi
jle
xlat
in
fisubs
or
and
mov
and
sub
inc
sbb
inc
movsl
out
mov
in
je
out
ja
movsl
push
ljmp
jecxz
adc
in
jnp
sti
xor
imul
jge
repz
in
jl
iret
dec
lret
repz
out
add
push
in
mov
mov
nop
add
or
xchg
push
pop
clc
aas
adc
mov
fsts
scas
mov
xchg
pop
cmp
lret
inc
add
inc
xchg
shr
outsb
push
scas
adc
stos
stos
outsl
pop
frstor
xorb
addl
mov
arpl
jb
or
aaa
sbb
mov
inc
rorl
add
lods
xchg
adc
mov
mov
xor
scas
xchg
mov
sub
movsl
xchg
jp
ljmp
int3
pop
or
fbld
ret
rclb
add
addl
or
sbb
inc
scas
fildll
test
enter
in
add
mov
push
cmp
rorb
andl
and
inc
andl
mov
adc
sub
sahf
ds
cmp
mov
dec
adc
push
bound
ljmp
shll
popa
or
or
outsb
mov
icebp
jle
movsl
lret
ret
add
sub
inc
add
cs
inc
xchg
mov
mov
fisttps
mov
ret
punpcklbw
repz
mov
adc
daa
and
cmp
aaa
mov
add
sbb
aam
sbb
and
dec
daa
daa
pusha
subb
daa
pop
mov
das
push
or
and
mov
or
gs
lret
sbbl
jo
push
mov
shl
ret
hlt
fisttps
inc
cwtl
lds
out
sub
xchg
leave
or
shr
mov
cmp
and
and
mov
inc
push
roll
xorb
dec
adc
fisubs
cs
pusha
xor
pop
inc
add
and
xchg
xchg
adc
jp
inc
add
nop
and
pop
mov
call
or
inc
dec
ret
sbb
rolb
loopne
pop
call
jbe
push
fildl
jmp
psrlq
add
adc
inc
sub
push
sbb
or
in
or
push
adc
fcmovu
aam
sbb
add
cs
push
cmpsb
cltd
push
fs
pushf
lods
adc
ss
in
fwait
std
mov
push
sti
push
jb
loopne
test
add
adcl
mov
add
inc
push
fdivs
and
test
push
pop
sub
push
or
push
lods
push
mov
add
loopne
clc
stos
add
ljmp
pop
clc
iret
pop
shl
and
jne
adc
mov
das
jo
adc
mov
pop
mov
jmp
cmp
add
and
icebp
add
lods
outsl
jne
fdivl
popf
or
or
inc
aaa
xchg
daa
add
ret
sbb
std
pop
bound
mov
xor
call
in
mov
cmpsl
gs
add
lock
add
dec
and
int3
xor
mov
ds
mov
pop
or
mov
xchg
pop
int
ljmp
mulb
mov
sub
xor
push
xor
mov
add
rcl
test
adc
sbb
aas
push
cmc
xchg
orl
es
movsl
jl
push
sub
mov
sbb
test
xor
ja
jae
push
stos
rsqrtps
cmpsb
cmp
fwait
out
xor
loopne
sbb
sbb
clc
sbb
jnp
mov
addb
xchg
adc
dec
xor
push
fisttpl
dec
mov
lods
adc
and
filds
andl
xor
pop
sbb
xorb
es
adc
icebp
and
fdiv
adc
jle
add
jnp
push
fsubs
nop
cmp
out
call
add
mov
sub
pop
adc
jns
push
cli
mov
shrb
scas
int
and
fidivl
jg
cmp
movsl
pop
cs
std
je
popf
pop
lock
sub
ss
testl
add
imul
stos
sbb
mov
xchg
into
icebp
iret
jo
push
jg
scas
push
jo
sti
mov
addb
sub
push
leave
pop
or
mov
mov
inc
pop
cmp
pop
movsb
or
mov
or
dec
mov
mov
add
leave
cmp
mov
cmp
sub
mov
mull
mov
lock
jge
pop
inc
loopne
call
sbb
sbb
cmpb
jl
cmp
lock
sub
push
inc
sub
pop
mov
sbb
jge
das
pop
sbb
xchg
cmpsl
into
dec
jns
repz
adc
cs
and
lock
sbb
ficomps
cmpsl
imul
pop
leave
xor
push
test
pop
js
push
pop
sub
add
leave
clc
js
shl
xchg
addb
or
test
cmpsl
sub
leave
pusha
pop
push
pusha
popa
push
movsl
fwait
and
pusha
loopne,pt
push
aam
mov
or
lret
or
mov
leave
rorl
pusha
gs
jp
ret
stos
xor
xchg
or
insb
dec
jge
mov
jno
mov
test
push
lock
popa
pop
lret
repnz
daa
add
in
mov
movsl
xchg
mov
mov
mov
mov
mov
movsl
movsl
lods
popf
xor
xchg
mov
adc
mov
mov
pusha
arpl
addb
adc
mov
mov
fadds
mov
mov
test
lock
mov
adc
add
add
iret
lods
mov
cltd
rcrb
xchg
add
sahf
sub
rclb
mov
xchg
pop
mov
cmp
push
addb
call
mov
jo
mov
popf
add
push
sbb
mov
mov
xchg
add
add
hlt
xchg
aam
adc
mov
add
jb
test
push
sbb
xor
orb
into
add
rol
adcl
bound
add
add
mov
push
mov
sbb
sub
xchg
nop
mov
sbbb
or
jle
mov
insb
addl
xchg
mov
adc
or
ret
and
add
cmp
enter
xor
clc
mov
mov
fsubl
mov
jl
roll
fdivrl
pop
ljmp
mov
mov
push
inc
call
or
mov
aas
add
add
mov
outsl
xor
aad
mov
in
push
push
je
loop
test
sbb
femms
ds
pop
push
push
test
adc
jo
cmpb
sub
int3
jbe
add
push
pop
mov
ljmp
jb
push
femms
or
mov
push
push
cmp
cmp
mov
and
mov
add
add
movsb
mov
out
adc
adc
mov
lahf
mov
add
cmpsb
ss
xchg
add
movsb
xor
roll
andb
or
mov
fs
ja
cltd
xor
fidivs
and
push
js
jae
add
mov
test
xchg
jbe
mov
xchg
movsb
cld
mov
and
add
loop
jno
pusha
push
add
pusha
adc
mov
addr16
jbe
cmpb
mov
dec
leave
fidivrl
outsl
inc
mov
xorb
orl
cs
sar
movl
adcb
loopne
jl
mov
movsb
movsl
mov
cwtl
and
cmpsb
cmpl
sub
mov
decl
mov
mov
and
mov
popa
push
pop
popf
nop
fiaddl
std
gs
pop
mov
cmpsb
sahf
mov
mov
or
adc
incl
pop
pop
test
add
sbbb
adc
sub
mov
push
jl
movsb
mov
cmpl
mov
inc
test
inc
divb
mov
mov
mov
push
les
xchg
sbb
outsb
jg
movsl
filds
cmp
inc
cmp
jg
dec
sbbb
cmp
or
sbbl
mov
leave
mov
call
and
or
adc
inc
mov
xchg
mov
pop
lret
rcll
adc
push
add
insl
cmp
pop
sbb
sub
pusha
addl
fsub
cmpsl
or
push
enter
repnz
call
movsb
and
aad
xchg
popa
add
jp
mov
stos
xorb
inc
movsb
cltd
inc
inc
mov
inc
sub
pop
and
inc
lods
inc
or
rolb
cmp
insb
add
push
cwtl
mov
aad
scas
or
ds
push
decl
call
mov
jo
pushf
sarb
jg
xor
mov
and
test
shlb
add
decb
mov
pushf
movsb
mov
andb
rcrb
test
xchg
inc
push
xlat
add
sahf
mov
lock
fimull
inc
cmp
movsl
nop
loop
cwtl
add
enter
add
adc
loop
shll
sub
mov
sub
decl
cli
inc
ja
push
and
mov
ja
movsl
pusha
jg
clc
lcall
loope
cmp
data16
loope
push
aad
test
and
xchg
dec
insl
or
movsb
cmp
add
push
cwtl
jmp
aad
lock
ret
outsb
and
ss
decl
sub
dec
adc
push
dec
in
pop
popa
add
addb
and
xchg
add
add
mov
sbb
mov
hlt
mov
or
fisttps
cwtl
lds
adc
jge
sbb
out
and
cmpb
mov
inc
dec
fisubl
nop
xchg
cmpsl
add
mov
and
adc
jecxz
pop
sbb
addl
das
js
or
outsb
loope
aaa
addl
add
dec
js
jbe
fwait
and
mov
ret
loopne
sarb
push
jo
and
dec
mov
pop
lock
push
mov
orb
cmpsb
pop
cld
decl
adc
push
orb
les
insb
or
xchg
andb
xchg
jo
test
push
jmp
std
stos
mov
test
je
mov
es
dec
enter
stos
inc
nop
adc
dec
loopne
mov
adc
add
adc
testb
mov
testb
inc
add
mov
adc
pop
lcall
lahf
xchg
popf
pop
push
push
out
xor
mov
adcb
popf
xchg
lock
xchg
loop
ret
mov
jae
pop
push
cld
orb
add
mov
fstpt
push
push
push
mov
and
xchg
hlt
movsl
sub
mov
fmull
inc
mov
inc
cmp
mov
and
add
fdivs
arpl
dec
ja
lods
rcll
mov
movsb
jg
xchg
mov
sarb
or
or
pusha
push
add
adc
movsb
mov
mov
push
mov
mov
cmc
mov
jo
jecxz
ss
mov
sub
inc
shrl
nop
rolb
call
in
test
inc
or
aam
loope
call
add
mov
mov
or
add
add
insb
orl
add
or
cmovge
roll
jo
and
mov
add
rcll
inc
pop
and
into
mov
sbb
mov
ljmp
mov
add
sbb
add
gs
mov
push
scas
push
jno
mov
jbe
lock
jmp
outsl
fucomi
lcall
rclb
dec
nop
bound
push
sbb
shl
jp
into
and
in
xchg
incl
xorb
call
xchg
bound
repz
push
in
ljmp
loopne
insb
rolb
jl
andb
mov
lock
add
test
jb
fildll
mov
mov
ljmp
adcb
xor
daa
add
rolb
inc
add
inc
roll
push
or
cmp
mov
add
push
add
inc
shrl
jecxz
mov
lock
ljmp
popa
sbb
cmovbe
xchg
mov
iret
pushf
mov
cmc
add
add
adc
aas
cld
addb
int3
mov
jo
arpl
fs
cmp
or
sub
adc
adc
mov
mov
cwtl
pusha
mov
dec
roll
pushf
xchg
rcrb
adc
push
adc
inc
xchg
mov
jg
cmp
add
roll
fldt
pop
js
mov
pop
add
push
dec
dec
arpl
decl
call
ret
xor
jecxz
mov
js
movsl
and
loopne
mov
js
hlt
and
mov
clc
and
int3
movsb
mov
into
addb
sbb
push
out
push
xor
and
pop
stc
shll
pushl
adc
sti
repnz
test
sbb
pop
inc
shlb
sbbb
in
mov
or
or
cwtl
xchg
add
mov
sub
push
mov
mov
mov
or
xor
icebp
add
lcall
push
push
repnz
ja
int
pushf
mov
shrb
out
mov
test
lcall
decl
add
cld
fcomip
setae
imul
or
incl
or
xor
fsqrt
add
mov
lahf
adc
add
faddl
jnp
push
jg
and
pop
int
or
pop
push
int
fidivs
cltd
je
std
test
push
xchg
loop
push
ds
mov
addr16
mov
shl
add
adcb
ret
int3
rcrb
and
adc
xor
mov
lods
add
add
pushf
jae
adc
lods
fsubrl
sbb
mov
adc
mov
xchg
cmpsb
nop
dec
jo
lods
mov
sub
mov
movsb
test
push
nop
mov
popa
add
call
orl
xor
add
fwait
cmpsl
cwtl
out
movsl
jae
xlat
add
in
adc
movsb
je
and
jle
add
xchg
mov
movsl
cltd
fidivrs
cld
pushl
xor
stos
mov
movsb
xor
cmpsb
sbb
test
ret
roll
xor
pop
inc
add
into
sub
ss
test
add
pop
repnz
hlt
ja
addr16
icebp
or
xchg
cmpb
mov
fiadds
data16
push
pop
in
arpl
incb
jge
pop
lcall
pop
jae
lds
mov
sbb
and
dec
jo
add
push
add
lods
cwtl
and
cmp
push
loop
or
sbb
mov
rolb
and
add
movsb
mov
rcrb
dec
shrb
das
lret
andb
or
in
addb
mov
adc
add
repnz
dec
iret
mov
add
xchg
test
or
mov
andl
repnz
mov
inc
push
mov
mov
cmpsl
xchg
mov
xchg
js
test
jle
into
cmp
pop
roll
ljmp
push
pop
sbb
mov
cwtl
sub
adc
andb
mov
sbb
and
push
adc
mov
and
data16
mov
or
push
sub
mov
movsl
les
pop
rcl
mov
sbb
loop
xor
mov
mov
mov
inc
add
or
cmpb
dec
add
test
cmp
mov
orb
mov
or
push
mulb
inc
lock
cwtl
xor
shlb
or
push
mov
jmp
scas
sbb
cmp
adcb
mov
xchg
cmpsb
mov
subb
orb
or
or
xchg
add
imul
push
inc
add
cli
shrb
sbb
mov
popf
subb
sbb
cwtl
adcb
xchg
test
popf
push
mov
rcll
lods
idivb
xor
mov
add
add
orb
adc
mov
jl
mov
push
fists
jle
xchg
and
or
popf
popf
add
add
jb
rclb
test
or
inc
pop
add
add
mov
popf
subb
or
scas
mov
push
test
and
add
test
sbb
pop
cs
inc
cwtl
cwtl
mov
add
clc
mov
shll
mov
out
inc
add
movb
xor
mov
ss
add
or
add
pop
cmpsb
add
add
ret
xchg
bnd
sarb
jg
xor
xchg
lds
mov
push
decb
inc
int3
inc
mov
sub
push
loope
adc
mov
dec
mov
adc
push
adc
int3
lret
mov
mov
mov
js
or
pop
push
ret
mov
dec
adc
inc
add
sti
outsl
mov
rol
dec
xchg
cmp
jb
jo
adc
ret
pop
push
or
adc
mov
jbe
in
lock
xor
jecxz
add
cld
sbb
ja
or
xchg
add
push
or
dec
ret
mov
mov
movsb
mov
sub
cmp
xor
or
call
add
xchg
inc
add
xor
pop
enter
xor
add
bound
adc
dec
mulb
mov
fistps
addb
cli
fwait
jle
out
add
jns
popa
add
jecxz
mov
add
jecxz
test
mov
pusha
sbb
and
jl
xchg
mov
jle
and
data16
mov
add
fdivr
xchg
ljmp
mov
dec
ret
loop
pop
aaa
adc
in
add
movsb
rolb
shrb
push
movsb
add
testb
inc
adc
or
hlt
mov
pop
hlt
loop
dec
add
jl
inc
lock
sbb
stos
dec
aaa
or
sub
or
sahf
mov
inc
or
rclb
test
lea
adc
push
push
xchg
sub
adc
or
lock
mov
jecxz
mov
mov
add
sbb
cwtl
hlt
push
adc
push
and
xchg
push
sbb
jle
faddl
mov
mov
push
dec
cmpsb
add
or
mov
mov
push
or
pop
and
and
loope
inc
cmovle
pop
cld
add
add
mov
adc
adc
and
mov
ret
pop
push
cmp
or
dec
lcall
decl
in
and
and
call
clc
mov
or
ds
mov
cmpsb
add
cmpsl
add
out
mov
mov
sub
fbld
and
loopne
inc
arpl
add
and
add
and
pushl
sub
mov
lahf
add
bound
nop
test
pusha
and
popa
mov
mov
js
mov
inc
aas
les
sub
add
push
push
mov
cwtl
gs
mov
mov
ja
aad
mov
mov
dec
sbb
mov
jge
bound
mov
rorb
add
mov
movsb
rcr
inc
add
pop
movb
out
aam
add
sti
add
inc
repnz
mov
add
push
cmpsb
nop
mov
inc
add
cmp
sbb
pushl
xchg
ds
js
je
movsb
mov
jecxz
push
adc
aad
movsl
shlb
or
cld
subl
jbe
dec
dec
add
inc
je
sub
mov
xchg
jg
push
aaa
and
add
adc
out
aad
lock
in
mov
adc
mov
add
inc
or
call
ljmp
aaa
xchg
push
enter
movsl
add
aam
call
push
pushf
shrb
in
add
fiaddl
cs
ret
push
jo
leave
mov
insl
dec
jb
scas
es
add
sbb
out
sub
adc
orl
cmc
and
jge
pusha
inc
or
insl
outsl
enter
sbb
pop
in
pushl
sbb
lahf
xchg
icebp
add
dec
mov
add
add
aaa
xor
pop
sahf
enter
inc
push
inc
xchg
in
call
pop
clc
add
xchg
sub
xchg
push
ret
pop
push
push
push
add
push
cs
into
std
in
aaa
add
xchg
mov
rcrb
xchg
imul
insl
fstpt
test
call
lods
xchg
insl
or
movaps
pop
lock
jnp
xchg
jb
cmpsl
xor
mov
xchg
stc
rol
sub
jg
inc
xor
jbe
and
cmp
fwait
stos
add
mov
push
inc
filds
ja
jno
xor
mov
pop
frstor
cltd
pushf
mov
call
ljmp
push
mov
adc
jecxz,pn
and
dec
inc
mov
mov
cmp
test
mov
mov
pop
mov
hlt
mov
sub
testb
ljmp
outsb
jae
mov
mov
icebp
pop
roll
movsb
rcll
add
mov
out
mov
add
sub
mov
inc
adc
and
add
incb
enter
add
and
add
bnd
lret
adc
aas
repz
fbstp
ja
mov
add
push
cmp
loop
insl
xchg
add
pop
ss
sbb
pop
mov
shl
jp
out
popf
jg
notb
pushf
adc
sbb
adc
lds
outsl
dec
in
mov
jle
movzbl
inc
jl
pusha
push
inc
xor
clc
push
inc
clc
repnz
xor
mov
pop
stos
out
mov
mov
fistpll
ret
push
push
aas
pop
xlat
outsl
inc
push
add
sub
repz
out
je
je
cmp
jo
insl
mov
xchg
add
or
push
out
mov
xlat
sbb
push
cs
push
in
add
jmp
stos
mov
xchg
add
jge
jg
in
lock
shr
add
inc
imul
mov
lret
xor
push
ja
adcb
addr16
movsb
out
jmp
std
push
incl
loop
int
repnz
pop
cwtl
inc
mov
ja
outsl
mov
or
jae
xor
pushl
mov
std
hlt
cwtl
xor
sahf
cmpb
hlt
add
aad
adc
adc
sub
dec
ss
mov
in
outsb
adcl
inc
int3
lcall
add
inc
lods
shlb
cld
jmp
dec
add
aad
ja
ret
sub
ljmp
push
arpl
and
add
sti
add
sub
cld
jle
lods
xchg
sti
add
data16
scas
sti
add
in
pop
mov
jle
idiv
or
movsl
sub
lahf
dec
mov
insl
shrl
insl
sar
imul
mov
and
push
ljmp
adc
popf
pop
lods
fnstenv
in
insb
sub
movsl
add
pop
jg
mov
jns
sub
push
sbb
add
testl
sub
dec
mov
nop
neg
jg
fdivl
pusha
test
or
jno
push
xchg
sbb
dec
add
jmp
or
xchg
or
inc
or
xchg
and
xchg
dec
or
dec
sbb
pop
cwtl
adc
incl
and
add
test
insl
push
fisttpl
push
stos
sub
lods
add
push
lcall
xor
stc
icebp
outsb
lcall
aad
xchg
xor
mov
add
stos
add
pushl
sarb
add
popa
fldcw
cmp
add
lcall
add
push
sbb
mov
pop
lods
add
movsl
cmp
ja
or
push
shll
cmc
out
out
jmp
std
jmp
aaa
jg
jmp
test
jmp
jmp
jge
aaa
dec
jmp
gs
jmp
add
cmp
and
aam
fldl
out
cmc
out
in
in
adc
out
int
mov
mov
push
out
pop
out
inc
out
dec
jne
jge
gs
cld
int
insl
adc
out
or
and
fisttpl
add
mov
xchg
out
popf
out
test
dec
sbb
mov
pop
pop
out
push
aam
int
mov
jne
jge
gs
out
adc
out
out
push
push
cmpsb
cmp
add
cs
lahf
add
lods
sub
loope
loope
loope
aaa
and
jl
cmc
loope
loope
adc
jg
loope
loope
mov
mov
push
loope
loope
loope
jg
aaa
jg
loope
loope
loope
adc
loope
xor
loope
in
aaa
aad
fucom
loopne
loopne
loopne
loopne
xchg
loopne
loopne
int
loopne
mov
mov
push
loopne
loopne
loopne
cld
int
cld
jne
jge
gs
adc
loopne
xor
loopne
cld
int
loopne
jecxz
jecxz
jecxz
cmc
jecxz
jecxz
jecxz
xchg
jecxz
jecxz
int
jecxz
mov
mov
push
jecxz
jecxz
jecxz
cld
int
cld
jne
jge
gs
adc
jecxz
xor
jecxz
cld
int
jecxz
loop
loop
loop
cmc
loop
loop
loop
xchg
loop
loop
insb
or
test
loop
add
add
loop
loop
loop
loop
loop
loop
xor
fwait
cmp
loop
aad
fucom
vpand
mov
lea
jg
aaa
jg
in
in
in
push
in
in
in
jne
jge
gs
rcr
adc
adc
ret
xchg
add
int
ds
in
in
in
in
in
xchg
in
in
in
adc
mov
mov
push
mov
adc
negb
in
in
in
in
aad
fucom
cmpsb
pusha
out
out
out
out
cli
aaa
fwait
ret
or
adc
jp
dec
cwtl
leave
push
shrb
mov
aaa
mov
pusha
cmp
in
shlb
sub
loopne
dec
rcr
adc
insl
pop
dec
mov
sub
dec
add
cmc
pop
xchg
ljmp
imulb
test
jmp
sbb
or
jmp
cwtl
in
mov
jbe
stc
inc
out
mov
out
adc
mov
lods
les
das
int
inc
popa
inc
mov
xchg
pusha
inc
shl
into
loope
jg
inc
dec
xchg
loope
loope
adc
dec
loope
loope
dec
loope
push
scas
add
test
ss
decl
clc
test
sub
dec
sarb
sub
fwait
in
or
test
out
insb
mov
and
add
ja
jp
arpl
and
adc
sbb
xor
sbb
sub
aam
add
dec
stc
int
add
mov
sbb
add
add
lcall
push
out
out
aas
out
out
out
out
ja
sub
insb
mov
cmpsb
jo
shlb
adc
call
loop
in
call
call
mov
xor
sub
leave
add
lretw
add
ljmp
and
leave
in
add
mov
fdivr
in
in
in
in
dec
dec
in
pusha
roll
aad
std
pop
ja
xlat
and
mov
in
pop
in
inc
dec
loope
mov
in
adc
in
shr
mov
add
add
sub
mov
mov
cld
pushl
repnz
pop
add
jecxz
loop
loop
loop
dec
jo
mov
fsub
dec
add
std
dec
cmpsb
fidivs
jnp
adc
sbb
jmp
test
call
push
call
loope
jecxz
cld
fcmovne
cmpsb
in
jne
ss
ljmp
mov
xlat
in
mov
outsb
in
add
add
jmp
das
mov
dec
icebp
out
jmp
decl
push
out
outsl
loopne
push
fs
cmp
and
fcmovbe
sub
insb
or
sbbb
mov
loopne
enter
loope
decl
sti
sub
and
loopne
loopne
adc
xchg
jecxz
jecxz
jecxz
notb
ret
sti
mov
pop
lcall
loopne
add
jmp
add
ljmp
ss
jg
in
sub
shr
add
in
loope
in
icebp
push
dec
or
call
lock
loope
loope
loop
loop
in
in
cmp
pop
and
nop
in
in
int
icebp
jmp
and
stos
out
out
loopne
add
jmp
call
dec
call
in
xor
enter
out
or
add
fwait
out
mov
mov
push
jno
cmpb
lods
mov
push
loope
loope
loope
loope
loope
filds
sahf
and
loopne
add
sub
mov
es
xor
test
outsb
pusha
cs
cmp
mov
in
sti
sub
adc
in
xor
in
in
in
adc
in
in
in
lcall
add
lret
add
adc
lcall
or
jmp
int
call
call
pop
call
and
sbb
ljmp
in
repnz
clc
mov
movsl
in
sbb
lcall
out
clc
add
imul
and
popa
xor
popf
shlb
addb
rcll
cli
ss
loope
test
dec
loopne
decb
rorb
das
loopne
loop
mov
loop
adc
push
popf
mov
jo
add
inc
in
bound
in
mov
lret
out
push
lahf
mov
mov
or
out
out
out
jg
mov
adc
out
out
out
and
out
out
push
out
fcomip
call
cmpb
out
out
mov
mov
test
mov
ljmp
mov
xor
in
in
imul
ljmp
in
or
scas
clc
adc
shr
aad
fucomi
pushf
in
and
xor
add
incb
shll
mov
out
and
incl
dec
jecxz
add
lods
loop
loop
loop
inc
loop
in
in
nop
dec
adc
jmp
or
mov
out
pop
adcb
adc
out
out
add
movntq
out
pop
pop
leave
add
repz
out
out
adc
cs
jmp
nop
adc
icebp
ja
mov
enter
outsb
jmp
jmp
stc
sbb
loop
ljmp
jo
ret
mov
in
test
xor
test
pop
icebp
sbb
xchg
lock
stos
sbb
loope
loope
loope
mov
loopne
loopne
jecxz
jecxz
fcoms
adc
loop
in
or
mov
mov
or
mov
xor
das
clc
fwait
pop
jae
js
sbb
xchg
ljmp
xchg
clc
das
js
or
int
add
mov
xor
cs
jg
xchg
in
movsb
in
lods
in
cmp
add
jg
cli
ret
jecxz
jo
out
mov
cld
jmp
jmp
jmp
std
ljmp
stos
in
insl
in
xchg
in
lds
mov
pop
or
mov
or
rolb
push
or
std
decl
mov
or
mov
in
in
xor
cmp
scas
mov
inc
in
in
dec
in
in
nop
dec
jle
add
in
pusha
push
in
push
adc
in
in
idiv
fbld
push
in
in
mov
and
in
in
lock
cs
out
out
push
mov
or
out
jo
repnz
cs
nop
mov
orl
xchg
out
adc
out
mov
out
out
out
mov
out
es
sub
test
rclb
out
out
in
fsubp
ret
out
out
out
mul
cli
out
out
out
sbb
out
mov
sahf
out
int
xchg
mov
mov
mov
out
out
out
cmpsb
out
out
mov
gs
push
adc
out
out
and
out
mov
mov
jbe
lret
out
jmp
inc
pop
mov
dec
out
xor
daa
call
fldt
loope
mov
loope
out
mov
loopne
push
mov
adc
loopne
loope
adc
ret
add
jle
loopne
loop
cld
jmp
jl
adc
cmp
loop
loop
in
in
in
inc
inc
in
mov
rcll
and
mov
jo
mov
shlb
xchg
mov
jmp
jg
decl
and
pop
aam
and
ljmp
jmp
fbstp
adcl
in
in
shr
and
in
out
lock
mov
add
in
ret
stc
out
cld
xor
out
xor
jae
rorl
cmp
insb
loopne
out
loope
loope
mov
add
insb
dec
hlt
sub
xlat
loopne
sbb
jg
jg
loopne
xchg
adcl
inc
jecxz
loop
in
in
in
in
jo
clc
mov
lock
or
in
in
push
nop
or
sbb
push
push
shl
out
and
shl
ljmp
sarb
mov
dec
push
out
gs
lock
jmp
hlt
call
mov
stc
fistpl
mov
call
pop
call
call
dec
std
lcall
jmp
jmp
jmp
jmp
jmp
jmp
ja
cli
stos
push
xor
repz
addr16
pop
cld
ljmp
in
xorl
mov
inc
sub
fsubr
call
pop
mov
mov
sub
dec
inc
out
dec
adc
loope
sbb
add
nop
jp
loope
loope
adc
jp
loopne
loopne
adc
cli
adc
test
xchg
mov
mov
and
loop
add
xchg
push
loop
loop
loop
inc
dec
clc
sub
cmp
and
test
push
mov
in
in
adc
mov
pmulhuw
cld
mov
cli
mov
call
push
notb
ljmp
test
ljmp
mov
in
fsubr
std
jp
mov
mov
call
add
xor
in
jne
jl
bound
pusha
sbb
rorb
add
mov
add
xchg
in
mov
pop
in
data16
in
sub
loop
aad
scas
es
mov
inc
out
imul
lock
jb
jg
add
loopne
loopne
xor
test
loopne
cmpsb
loopne
jecxz
cmp
les
add
loopne
loopne
loopne
pushl
xlat
adc
jecxz
jecxz
jecxz
jecxz
push
jecxz
jecxz
jecxz
xor
and
loop
loop
rclb
in
in
call
scas
mov
jge
fnsetpm(287
inc
lahf
xchg
incl
test
add
out
out
jmp
jmp
rorb
mov
jmp
ljmp
das
mov
add
and
xor
xchg
in
in
cmpsb
push
jmp
add
mov
and
shl
out
cmpsl
lock
cmpsb
mov
jb
decl
cmp
cld
nop
xchg
call
or
jmp
jo
gs
inc
push
ljmp
in
mov
in
sahf
jo
ss
fstl
jns
out
push
add
jecxz
adc
movsl
mov
xor
add
nop
mov
and
dec
js
scas
xchg
loop
loop
mov
in
in
in
in
clc
loopne
sbb
lock
or
call
loope
cli
ja
in
xchg
nop
pop
push
in
mov
out
fyl2x
push
add
sbb
mov
loope
inc
lock
rcll
xor
pop
loopne
aaa
cmp
push
cld
jecxz
add
call
mov
mov
mov
jecxz
jecxz
jecxz
cmp
ljmp
loop
jo
mov
mov
in
cli
xor
call
aaa
xor
jmp
jmp
add
mov
mov
xor
sub
int
sub
jg
ljmp
xor
shlb
in
lahf
jo
movsb
in
arpl
push
decl
in
leave
add
iret
rclb
inc
in
cmpsl
in
pop
in
dec
rorb
mov
loopne
in
aas
in
and
out
loopne
out
mov
push
hlt
sbb
out
dec
out
jl
mov
out
cmp
push
cld
fcomip
iret
jecxz
xchg
jle
push
add
add
inc
pop
mov
cmpsb
loope
loope
adc
xchg
loope
nop
insb
mov
fdiv
add
pop
loope
loope
push
hlt
nop
test
dec
jb
cmp
icebp
jecxz
adc
stos
jecxz
in
aaa
int3
loop
inc
loop
mov
scas
mov
sbb
lock
push
xorl
fucom
mov
mov
nop
pop
enter
xor
sub
mov
push
add
pushf
mov
mov
pop
out
add
ds
in
and
sub
fucomi
lret
call
add
add
incb
call
dec
jl
lds
sbb
xchg
mov
jmp
adc
adc
push
jmp
ljmp
cmpsb
mov
in
jmp
ljmp
jmp
mov
sub
in
jb
push
adc
in
es
fsubr
jecxz
call
in
stos
in
push
adc
in
dec
in
jae
in
popa
in
push
sbb
rcll
out
out
sub
out
add
and
inc
push
mov
out
mov
push
adc
sbb
jno
mov
push
aad
loope
loope
pop
cmp
mov
sahf
mov
mov
mov
adc
jl
push
adc
push
add
mov
xor
xor
and
push
dec
das
sbb
mov
jecxz
jecxz
adc
jecxz
jecxz
jecxz
mov
jecxz
mov
fwait
push
inc
jecxz
aam
adc
jecxz
jecxz
jecxz
add
sub
shl
in
add
loop
add
hlt
push
ljmp
loop
add
jbe
xor
into
in
adc
dec
aam
int
cmpsb
scas
in
in
in
add
lods
inc
push
adc
in
xchg
mov
and
add
cmpsb
jg
shl
outsb
daa
adc
in
out
out
out
lcall
out
adc
cld
lods
loop
jle
out
js
insl
out
out
out
les
aad
push
push
out
out
fldl
outsl
call
out
jmp
in
cs
in
mov
jmp
and
adc
jmp
cld
mov
add
mov
hlt
mov
orb
dec
ljmp
cmp
in
xchg
in
ja
test
push
in
inc
in
push
cmp
aaa
jg
in
es
sub
out
out
sti
out
in
out
inc
out
or
icebp
mov
mov
pusha
mov
stos
test
cmc
loope
loope
sub
outsb
jg
loope
loope
loope
adc
loope
mov
ret
fildll
mov
adc
loopne
loopne
jecxz
lods
xchg
push
jecxz
je
jecxz
mov
dec
cli
jbe
jecxz
adc
loop
loop
hlt
add
or
loop
cmp
jl
incb
sahf
in
in
adc
mov
addb
in
mov
mov
scas
ljmp
stos
inc
scas
rolb
out
add
mov
dec
jbe
aas
adc
adc
scas
dec
loope
push
pop
clc
sbb
loope
dec
add
cmp
pushl
loope
loopne
into
loopne
loopne
inc
jg
pop
incb
fsub
mov
ret
mov
aam
aam
cld
sbb
inc
jmp
add
cltd
push
push
in
add
in
stc
shr
xorb
jg
clc
es
mov
jg
add
ljmp
js
xchg
in
jbe
lcall
in
in
insb
sub
sbb
movsb
out
sbb
shl
add
or
xor
xor
cmp
lcall
and
sub
sub
ja
inc
js
sarb
and
out
out
inc
jp
pop
pop
or
out
cli
call
add
xchg
out
out
pushf
add
test
mov
mov
mov
jg
out
in
outsl
cmp
push
adc
out
out
inc
out
out
mov
jo
add
jl
push
popaw
out
jmp
clc
fwait
aaa
push
call
jge
and
pop
jmp
inc
cs
jnp
xor
ljmp
or
ljmp
int3
in
idiv
aad
mov
inc
orb
in
inc
in
je
sar
fists
jge
arpl
push
adc
add
inc
inc
shr
fldl
hlt
in
std
in
stc
fwait
mov
nop
xchg
in
popf
in
in
mov
in
mov
cld
cs
mov
adcb
mov
push
movsb
add
xchg
je
mov
dec
or
xor
loope
xor
loopne
jecxz
fs
icebp
jg
loop
and
into
in
pusha
arpl
aaa
pop
mov
inc
mov
in
add
and
scas
shr
mov
sbb
das
hlt
jg
call
call
and
shl
lcall
fs
call
loopne
mov
call
not
jmp
jmp
jmp
adc
sbb
imul
mov
sbb
sar
in
out
in
sub
pusha
sbb
push
in
fsubrp
les
call
push
in
inc
mov
in
out
hlt
out
cld
scas
out
dec
out
adc
shll
fcmovnu
out
into
out
movsb
out
inc
xchg
cli
and
sbb
pop
push
loope
pop
lods
and
fs
jg
jg
loop
loop
pop
loop
loop
in
in
mov
mov
pusha
aad
rorb
das
mov
fcom
call
push
jmp
jmp
iret
loopne
lahf
in
jnp
push
fsubr
and
loopne
mov
pop
pusha
setae
cltd
or
cltd
inc
cwtl
loope
cli
add
insb
lock
loop
ljmp
or
in
in
adc
in
in
repnz
in
je
jmp
in
and
pusha
dec
ret
jg
and
out
pusha
adc
inc
add
add
out
out
inc
jmp
jbe
adc
out
call
incl
adc
jmp
inc
jmp
jmp
jmp
pusha
inc
aas
add
or
std
cmp
mov
add
mov
fsubrp
ret
enter
imul
sub
test
stos
mov
adc
jae
sbb
pop
dec
inc
ja
cmp
in
pop
mov
mov
mov
pushf
imul
in
aaa
adc
mov
in
or
vfmaddps
cwtl
out
sub
mov
fidivrs
lock
int
rcl
sub
inc
xor
push
pusha
sub
pushl
mov
jecxz
jecxz
addb
cmp
mul
hlt
lods
andb
out
or
cmpsb
add
mov
out
movb
jmp
jl
add
push
jmp
jmp
mov
jmp
ljmp
cmp
push
lahf
and
in
pusha
test
out
sub
popf
out
mov
out
jns
sub
inc
or
add
loope
loope
inc
mov
testb
loope
pop
xchg
add
out
clc
fneni(8087
cmp
fwait
jecxz
jecxz
jecxz
in
loop
loop
loop
jge
gs
loop
xchg
or
in
mov
mov
mov
mov
pop
aam
in
in
cmc
in
or
aam
das
in
rorb
xchg
mov
pop
adc
and
mov
adc
out
out
adc
call
hlt
adcb
mov
mov
sti
in
cmp
iret
in
mov
push
mov
in
pusha
in
dec
test
dec
adc
or
or
push
loopne
incl
add
test
jecxz
jecxz
jecxz
mov
loop
mov
mov
cld
mov
push
call
mov
push
jmp
cmp
add
cmp
in
cmpb
in
mov
out
hlt
add
out
pusha
lcall
push
pusha
out
xor
sti
inc
pop
insl
fiaddl
fs
adc
sar
loope
loope
add
mov
cmpsl
adc
stos
and
loope
or
in
call
lock
loope
adc
jl
arpl
insl
loope
push
push
sbb
xchg
pop
push
adc
cmp
loope
loope
sub
shl
imulb
jo
xchg
jle
loopne
loopne
loopne
adc
ljmp
sti
loopne
loopne
loopne
out
loopne
loopne
loopne
inc
loopne
loopne
loopne
push
bound
jg
loopne
loopne
loopne
adc
add
pop
jmp
add
dec
loopne
loopne
loopne
xor
pusha
xor
sarl
fstpt
mov
loopne
mov
setp
loopne
push
sbb
adc
sub
jecxz
adc
xlat
jecxz
xor
push
jecxz
aam
jecxz
jmp
loop
sbb
in
jecxz
and
call
mov
std
sbb
jl
jo
subb
jecxz
rorb
jcxz
pop
lea
mov
mov
cmp
sub
jecxz
xchg
loop
in
in
jge
sbb
out
out
ret
out
out
add
inc
out
out
mov
fwait
aaa
jg
jmp
push
cmp
and
int3
call
scas
call
xchg
clc
in
pop
mov
fwait
in
adcb
out
icebp
adc
lock
loope
shl
loopne
loopne
jo
push
xchg
loop
adc
call
in
in
or
in
jo
ljmp
xorb
mov
and
decb
scas
jbe
jo
sub
add
out
pop
lock
cmp
aaa
push
xchg
fcoml
mov
adcb
fsubp
int
pop
hlt
jmp
xchg
loop
mov
loop
orb
lcall
xchg
sub
inc
out
out
out
aaa
push
sub
add
into
cmp
imul
cmp
mov
outsl
sbb
pushf
ljmp
std
aaa
std
stos
cmp
in
mov
inc
test
int
mov
cltd
mov
loopne
loopne
xor
cmp
jg
or
jecxz
loop
loop
xchg
adc
sbb
loopne
loopne
in
adc
and
rclb
cmp
jmp
jmp
cmp
cmp
ljmp
push
pop
mov
push
mov
sti
aaa
std
aaa
xorb
cmp
adc
dec
lret
push
xchg
jmp
inc
adc
pusha
jmp
rolb
decl
xor
call
add
mov
dec
popa
call
stos
pop
mov
clc
mov
pop
jmp
jmp
call
fists
cmp
imul
loope
xchg
adc
cltd
ljmp
ljmp
xchg
in
inc
cmpsb
mov
pop
in
ds
rclb
nop
pop
mov
in
mov
repnz
sbb
xor
shr
filds
mov
push
rorl
push
adc
xor
cmpb
pop
faddl
loope
mul
xchg
aam
loope
loope
nop
aaa
add
sarb
sub
lcall
adc
fsub
mov
stos
inc
in
jmp
jmp
adc
push
call
in
cltd
add
dec
mov
push
add
rol
xlat
in
ret
push
in
scas
add
leave
out
into
lock
out
mov
cwtl
out
adcb
sub
out
mov
shrb
add
out
arpl
imul
mov
jno
xor
addr16
push
adc
push
add
test
ja
pop
in
mov
loop
addr16
decl
and
mov
lock
or
inc
fdivr
inc
loopne
mov
add
insl
loop
test
loop
cld
xorb
and
sbb
cmc
or
mov
adc
rolb
dec
xor
data16
pop
cmc
add
add
push
add
xor
int
repnz
in
nop
gs
add
fmuls
push
add
in
and
mov
or
jne
and
xor
or
xor
mov
test
pop
pop
andb
out
gs
mov
idivb
out
out
cmp
mov
jmp
shl
out
out
int
icebp
out
shrb
std
and
out
mov
adc
out
out
out
nop
and
decl
cmpb
out
out
out
push
out
inc
sub
jb
sbb
pop
adc
lea
icebp
pushl
xor
add
xor
mov
and
jmp
mov
or
xchg
out
xor
jg
mov
fldl
pop
mov
sub
stos
dec
jg
pop
hlt
xor
adc
bound
test
cmc
icebp
pop
add
inc
das
adc
stos
sbb
ja
mov
dec
fistpll
sub
mov
xchg
cs
ljmp
rolb
out
sahf
xor
xchg
js
adc
inc
push
out
das
idiv
jg
movsb
dec
push
loopne
bound
add
add
les
mov
jae
adc
sub
hlt
push
into
mov
mov
lock
sbb
and
inc
xor
jmp
pusha
loope
mov
arpl
push
decl
popa
xchg
in
add
packssdw
arpl
fcomip
lcall
incl
add
mov
xchg
cmpsb
cld
clc
or
mov
in
xor
sbb
and
stc
mov
mov
shrb
mov
mov
cmpsb
adc
pop
pushf
xchg
sbb
sahf
mov
loopne
cmpsl
push
pop
lock
and
jo
push
and
lds
adc
cmp
push
in
or
ja
add
arpl
ret
pop
sbbb
jno
jg
test
pushf
outsl
cli
mov
jb
sub
dec
or
inc
mov
sahf
cmp
aaa
jg
test
ljmp
push
sub
add
icebp
adc
jge
lret
jge
out
push
ja
dec
fisubl
rcl
sbb
ja
popa
loopne
outsb
cmp
in
ljmp
imul
or
adc
pop
daa
test
insl
add
fcomip
lahf
cmc
or
or
dec
mov
jae
aas
sbb
mov
shll
pop
sub
into
sub
add
pop
imul
mov
cmp
mov
dec
andb
xchg
lahf
sub
add
cmc
cmp
push
xor
clc
and
mov
outsb
mov
aaa
lods
js
inc
hlt
shll
and
xor
clc
lcall
and
leave
lds
nop
jbe
jae
roll
xchg
popa
sub
cli
out
mov
pushf
data16
sub
test
incb
popf
cmc
push
or
out
mov
add
int
dec
jns
test
int3
add
cmp
fwait
mov
mov
loopne
push
add
daa
inc
out
jg
imul
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
in
xorl
dec
imul
inc
js
push
push
mov
fs
arpl
fs
lods
mov
aaa
xor
imul
insb
gs
inc
sub
inc
mov
out
imul
dec
push
imul
outsl
aas
inc
jo
pop
inc
gs
je
je
jo
mov
mov
in
push
imul
imul
add
push
sub
bound
jecxz
inc
fisttps
mov
jae
insl
push
imul
xchg
or
rcrl
push
in
sti
mov
popa
jae
dec
jne
lods
sub
js
lret
jnp
insb
adc
aad
dec
xor
push
aaa
cmc
push
mov
dec
rolb
insl
lret
mov
sbb
rclb
stc
fwait
mov
stc
frstor
cmp
imul
les
inc
push
cmp
mov
push
push
mov
xchg
sbb
push
test
bound
mov
or
or
sub
add
lods
mov
shll
jne
or
sbb
fistl
push
pop
or
mov
push
sarl
push
mov
push
daa
dec
int
stos
inc
inc
fsts
dec
addl
dec
add
enter
push
mov
in
inc
jne
sahf
outsb
je
dec
sub
jle
idiv
fs
insb
shlb
insl
jo
push
roll
scas
push
imul
imulb
fistl
inc
jns
sub
imul
inc
inc
dec
pushf
insl
lods
xchg
shll
jp
sbb
bound
mov
jbe
iret
xlat
std
adc
movsl
inc
insb
shll
dec
popa
jo
push
int
mov
mov
mov
cmp
imul
push
lock
out
adc
push
push
push
and
or
mov
or
lock
imul
or
std
adcl
lret
lods
xchg
ss
gs
ret
mov
push
jns
gs
idivl
pop
and
dec
out
je
push
add
push
outsb
ja
fs
shll
int
jmp
pop
gs
insb
es
xorb
push
or
test
sub
inc
push
test
add
push
cwtl
shl
jae
inc
add
cmpsb
sbb
cmp
mov
or
mov
mov
push
adc
xlat
sub
push
or
shll
test
mov
push
sbb
add
test
bound
decb
pop
rorl
mov
filds
aam
es
and
js
cmpl
into
popaw
fdivs
cld
pop
dec
inc
dec
inc
incl
jae
mov
mov
testl
or
outsb
jge
inc
inc
jne
loope
and
dec
outsb
push
push
rcrl
imul
lahf
pop
jmp
pop
push
xchg
mov
insl
fcmovbe
orl
jl
imul
mov
add
cltd
xor
js
push
fildl
adc
dec
push
dec
fs
roll
outsb
sbb
sub
mov
mov
negl
nop
and
shl
or
cmc
xchg
push
test
inc
sbb
jns
mov
add
push
add
test
mov
adc
jno
inc
imul
in
aad
add
or
imul
lods
insl
cli
insb
insb
adc
dec
jmp
andb
push
sbb
adc
dec
inc
inc
inc
scas
push
or
cltd
push
mov
xlat
inc
mov
sbb
jecxz
cmp
jbe
push
inc
je
pop
or
outsl
jo
push
push
jo
and
stos
ror
inc
andl
js
sti
popa
xor
add
mov
stc
lds
xor
jp
push
shll
push
mov
pop
int
dec
xchg
or
and
lds
xor
jno
adc
push
mov
adc
inc
and
push
and
adc
lods
dec
add
add
cs
mov
test
fld
dec
xchg
dec
inc
mov
or
sub
and
dec
add
and
xor
inc
adcl
cmpb
insl
ss
push
ret
dec
test
push
out
rclb
loop
inc
sbb
xor
inc
sub
test
jmp
mov
aad
sti
aas
push
lods
dec
icebp
fadds
lds
popf
mov
pop
icebp
add
mov
fsts
pop
ficompl
dec
or
pop
lds
lods
mov
stos
adc
push
adc
sbb
mull
stos
nop
xchg
pop
pusha
sbb
or
cmp
mov
inc
pop
sti
cmp
stos
xchg
cmp
lods
xchg
lds
xchg
add
jae
pusha
fisttpll
ja
pop
dec
or
scas
lea
sbb
lea
pop
or
iret
loop
daa
push
push
imul
jnp
mov
push
pop
lds
xor
inc
test
push
stos
push
stos
bound
pop
xor
pop
add
mov
push
cmp
or
push
fidivrl
popl
test
and
outsb
popf
fldenv
shrl
bound
repz
in
inc
sub
xlat
or
add
push
xchg
mov
in
stos
in
or
test
les
fnsave
sub
jns
push
lods
es
add
push
dec
and
aam
subl
push
jl
and
mov
daa
imul
pop
xor
mov
nop/reserved
mov
jae
add
lea
jo
add
cmp
dec
xchg
add
movl
ficoms
add
and
jb,pn
xchg
in
xchg
andl
pushf
sub
repz
xchg
outsb
dec
push
mov
leave
add
dec
sahf
xor
repz
lock
sub
jb
jb
mov
xchg
out
test
sub
ficoms
loope
cmp
xchg
and
xchg
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
