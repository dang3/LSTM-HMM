decl
cmp
jg
xchg
inc
jle
inc
filds
sub
pusha
setge
pop
adc
add
mov
fwait
pushl
jge
leave
sub
mov
outsl
adcl
int
ss
imul
mov
icebp
pushl
fs
out
cmp
sti
arpl
push
nop
loop
mov
push
pushf
pushf
pop
movsb
shll
dec
outsb
ljmp
mov
das
loope
mov
ss
push
pop
mov
adc
lock
mov
dec
cli
or
cmp
outsl
addr16
cmp
cwtl
or
cmp
jle
mov
decl
dec
dec
adc
adc
xchg
out
mov
xchg
push
pop
mov
aaa
mov
repz
lcall
mov
call
leave
mov
leave
lret
or
pusha
pushl
iret
sti
mov
test
lods
jmp
cmp
repnz
push
insb
mov
ret
lcall
jecxz
into
xor
xchg
mov
mov
mov
jo
jns
sarb
fsts
std
decl
cmp
sbb
cmpsb
xlat
mov
mov
ss
dec
fcom
adc
hlt
jae
mov
pop
frstor
or
sbb
sbb
mov
xor
ljmp
push
adc
int3
mov
daa
cmp
xchg
aas
jecxz
nop
mov
stos
fs
cmpsl
and
jo
loopne
ljmp
mov
xor
jmp
clc
ret
sbbl
out
ss
or
jg
mov
ljmp
pusha
adc
mov
adc
inc
test
jne
testl
lret
lcall
xchg
cmpps
movsb
push
leave
int
pusha
jl
repz
pop
aas
mov
out
mov
jbe
in
pop
das
dec
subl
adc
pop
pop
clc
fmuls
xlat
or
call
mov
scas
sbb
mov
outsb
dec
jne
dec
adc
pop
and
push
cltd
or
jmp
lret
aad
aas
ret
movsb
pop
divl
out
js
cmc
jg
mov
dec
cmp
and
decl
movsl
popa
add
mov
inc
adc
mov
mov
je
ret
stc
sub
insb
mov
jo
mov
subl
dec
and
lcall
and
aad
ds
xchg
imul
icebp
xor
js
mov
mov
cmpsl
idiv
imul
cmp
out
out
mov
mov
pop
sahf
adc
je
mov
mov
push
and
cmp
leave
in
push
loopne
rcrb
in
adc
mov
int3
add
leave
xchg
test
incl
cmpsl
addr16
push
mov
inc
jecxz
aam
adc
inc
insl
push
xchg
lret
push
cmpsl
pop
lcall
xchg
cwtl
push
jmp
out
aaa
cmp
jne
scas
add
dec
lock
xchg
jne
push
jmp
jne
ficoms
sbb
adc
loope
and
in
adc
outsl
stos
mov
cld
pushl
push
mov
aaa
jnp
sub
inc
inc
sub
sar
ljmp
sub
in
das
loop
mov
adc
loopne
adc
nop
rolb
decl
pushl
popa
sarb
sbbl
rol
call
and
pop
xor
je
mov
jno
mov
stos
cmpl
xor
incl
lcall
xchg
loope
stos
inc
insb
push
add
xor
in
scas
mov
fstpl
xorl
dec
jmp
mov
jp
nop
xchg
xlat
clc
mov
inc
test
iret
call
push
pop
stos
mov
insl
in
rclb
mov
cwtl
pop
cmp
jae
imul
jg
das
lods
rolb
pop
xchg
adc
pop
cld
cmp
mov
aaa
jp
pop
cwtl
fldl
sub
ss
and
mov
popa
dec
iret
mov
imul
push
lea
and
xchg
mov
ljmp
or
mov
mul
call
push
ret
cltd
and
or
dec
mov
out
cmp
pushl
jmp
jno
cmp
xlat
hlt
xchg
pop
mov
mov
cli
shll
mov
subb
pushl
jp
add
sub
xchg
fwait
sahf
cmpsl
das
dec
callw
lcall
add
ja
repnz
adc
xorl
lcall
ljmp
stos
fs
rorl
jne
adc
xchg
add
insb
sbb
inc
mov
push
jnp
jns
push
sub
jecxz
imul
call
add
mov
mov
mov
fiadds
orl
pushl
daa
outsb
int3
cmp
lret
lods
lret
shll
negb
xor
jne
incl
js
mov
cli
enter
xor
xchg
push
or
ljmp
push
cld
or
aas
or
daa
push
in
mov
push
adc
lret
pop
mov
pushl
lea
lods
sbb
out
jle
hlt
fcompl
mov
mov
sahf
popf
les
decl
lock
sarb
stc
call
and
xor
test
jecxz
jg
lods
decl
jmp
or
repz
pop
stos
sbbb
test
jmp
jl
aas
or
das
sub
out
ret
add
ja
lock
jp
dec
pop
mov
bound
push
bound
sbb
call
inc
cmpsl
lret
les
shl
int
ret
out
sahf
cmp
enter
clc
std
adc
incl
sub
sub
cwtl
jae
test
aam
dec
icebp
insb
in
enter
cmp
nop
pop
and
mov
scas
movsb
inc
imulb
stos
sahf
stos
and
rol
adc
lcall
call
adc
jbe
mov
je
daa
lods
xchg
sub
lea
pusha
gs
or
pushl
scas
sbb
pop
xorl
in
pop
adc
sbb
int
cmp
sbb
imul
ljmp
arpl
outsl
jnp
into
lea
or
mov
push
sarb
movntps
lret
aas
testl
cs
pushl
mov
test
jo
mov
je
dec
push
cmp
mov
sti
int
js
push
call
jl
sub
mov
shlb
cmp
pop
cli
mov
push
cmpxchg
loopne
sub
popf
xor
pushl
add
fmull
lock
into
aam
xchg
repz
push
mov
jle
mov
out
or
jne
dec
xchg
adc
clc
lahf
cmp
jmp
loop
add
dec
mov
scas
cmp
mov
notl
adc
mov
jg
and
roll
xor
scas
fistpll
sub
movsb
push
int
mul
jg
pushl
xor
loopne
jge
dec
imul
sbb
xor
cmpsl
push
insb
jge
push
dec
ljmp
outsl
cld
out
cmp
push
jecxz
stc
inc
add
sub
in
dec
cmp
incl
stc
or
cmpsl
fistpll
stos
arpl
aad
lods
add
lods
nopl
dec
fnstsw
jmp
sti
iret
lock
loop
sbb
push
arpl
mov
decl
push
shr
shlb
mov
das
push
sbb
movsb
fdivl
mov
add
mov
mov
arpl
repnz
inc
imul
aas
pop
ljmp
ds
ret
inc
cmp
or
mov
mov
inc
ds
bnd
push
out
mov
fidivs
or
addr16
call
int
call
adc
pop
pop
cld
cmp
ret
mov
dec
and
mov
movsb
jle
gs
mov
mulb
out
or
xor
out
fdivrp
lcall
leave
dec
std
push
sbb
mov
js
sbb
int
push
xchg
gs
push
push
fs
mov
addb
push
push
push
cld
scas
push
pusha
loop
add
incl
addr16
xor
mov
xchg
mov
shl
fwait
sahf
sub
ljmp
mov
rcrb
mov
fs
sbb
mov
scas
or
cmc
inc
push
or
incl
pop
xchg
cmpsb
xor
imul
fsubrl
outsb
ret
aas
add
pop
pop
ret
pushl
std
popa
or
fdivrl
sub
mov
jo
adc
call
xor
jae
jbe
mov
leave
neg
xor
jle
mov
jmp
cli
mov
rol
or
mov
in
out
arpl
rol
lods
push
lock
jmp
decl
mov
cmpsb
loopne
ja
or
mov
lock
jb
mov
fiaddl
inc
mov
popf
iret
insb
cmp
aas
test
call
inc
pop
jmp
sub
icebp
sarb
pop
or
add
cmp
jnp
fcom
flds
call
mov
cmpsb
dec
jp
cmpsl
sub
inc
and
popa
test
in
or
es
in
cmp
call
mov
pop
cmp
add
mov
dec
and
xor
fs
jno
aam
cmpl
lods
add
dec
js
std
sahf
test
call
sbbb
pop
push
cltd
push
mov
hlt
jb
jns
xor
int
cmc
jmp
xchg
imulb
adc
or
pop
leave
mov
pushf
or
popf
les
ljmp
mov
jbe
xlat
cmp
lret
cwtl
iret
lahf
cmp
ja
in
ss
jb
decl
mov
dec
fdiv
inc
mov
lods
icebp
push
push
out
setl
or
adc
clc
cmpsl
push
pop
ljmp
fnstcw
push
aaa
inc
loope
pop
pushf
mov
inc
lahf
movsb
in
cs
scas
filds
jle
ljmp
mov
push
pusha
insl
lods
mov
test
cmp
imul
cmc
pop
push
lds
decl
mov
cli
inc
loop
xchg
and
sbb
dec
fwait
mov
lret
call
dec
cmp
cmp
dec
mov
or
aaa
fcomps
mov
add
pop
clc
fsub
div
pop
pop
insb
iret
out
xchg
ja
mov
sbb
pop
jmp
outsl
fildll
sbb
clc
das
push
push
aas
xchg
xchg
mov
cmpsl
subb
lea
out
or
shl
push
out
pop
jno
mov
sub
inc
pop
lock
pop
sbb
cmpsb
iret
mov
sarb
add
jne
fidivrl
aaa
and
out
push
xchg
incl
mov
scas
mov
sbb
inc
adc
push
xor
sub
aad
sub
bound
gs
je
lahf
xchg
out
mov
xlat
test
mov
addb
jl
std
push
or
mov
mov
mov
cltd
pop
cmpsb
pop
fildl
sti
add
and
push
cmpb
pop
mov
push
sub
cmpsl
lret
adc
jmp
mov
mov
ja
gs
gs
jecxz
cmp
mov
stos
mov
jl
push
jg
fimuls
clc
cmp
ja
imul
xchg
shlb
arpl
inc
cltd
xchg
sub
adc
sub
sbb
test
pop
cmc
stc
sub
sti
incl
or
jmp
into
mov
jl
pop
cmp
push
xor
jnp
jno
iret
jno
sti
push
jmp
test
lret
stos
clc
adc
xor
sub
mov
mov
mov
add
dec
mov
sub
mov
mov
aad
sbb
mov
push
lret
sub
cmp
and
mov
pop
mov
dec
mov
mov
lahf
pop
add
mov
ret
adc
sub
and
std
mov
mov
inc
push
lea
sub
es
lahf
mov
nop
or
adc
and
or
test
je
sbb
mov
negl
std
ficompl
sub
pop
mull
into
fisubl
insl
cmp
mov
sbb
sub
incb
jne
mov
pusha
mov
cmovle
ret
push
push
push
out
adc
mov
add
mov
inc
bound
jmp
inc
jo
jmp
popa
xor
and
adc
xor
pop
adc
and
add
test
push
add
jbe
ret
and
push
add
adc
xor
adc
out
jo
push
pop
xor
sbb
mov
or
cmp
loope
test
jne
aaa
sub
daa
sub
cmp
test
xchg
or
adc
or
mov
stos
enter
inc
adc
mov
add
nop
add
and
fidivrl
out
leave
roll
clc
out
loopne
scas
xor
inc
sahf
add
fisubrl
jg
adc
into
daa
and
push
es
mov
adc
lahf
mov
cmp
mov
sahf
lret
dec
push
rol
dec
and
mull
mov
stos
inc
or
cmc
vmovupd
push
and
or
or
adc
mov
push
incl
int3
or
dec
fbld
cli
into
int
pushf
sub
je
stos
in
and
jo
mov
sbb
incl
jl
sub
ljmp
out
xchg
stc
xchg
pop
or
insl
adc
movsb
clc
push
imul
pop
mov
mov
lock
cli
jb
js
rcrl
ret
rcr
lahf
pop
adcl
mov
mov
xor
mov
int3
bound
decb
scas
add
stc
mov
mov
hlt
mov
mov
jl
std
call
fmuls
mov
mov
repnz
or
adc
int
sub
repnz
lcall
add
rolb
leave
push
jmp
adc
enter
cmp
outsb
mov
imul
fcoml
imul
pushf
pusha
ds
cmp
fucomi
int3
pop
outsl
aad
out
or
jmp
inc
and
test
inc
mov
mov
pop
push
sub
insb
lcall
or
test
ljmp
mov
daa
inc
ret
les
imul
incl
inc
mov
bound
fsts
or
stc
flds
lea
lcall
scas
cltd
mov
stos
insl
shll
jge
jae
mov
sbb
ret
cmp
cmp
decl
add
inc
out
imull
mov
int3
es
aad
pop
jo
lahf
lret
xchg
jns
not
jg
repnz
adc
cmpsl
mov
outsb
inc
std
mov
dec
jecxz
inc
adc
mov
pop
xor
xchg
push
lcall
jle
iret
inc
and
lcall
push
jle
push
bound
inc
inc
stos
fdivrp
push
add
incl
pop
xchg
roll
pop
dec
movsl
fidivl
negl
test
out
sarl
push
mov
push
xchg
add
int3
sbb
test
fcmovu
iret
fdivrs
cmp
insb
jecxz
stos
adc
jle
jle
ds
cltd
mov
loope
mov
divl
jmp
jecxz
xchg
movsl
sbb
mov
out
mov
xor
xor
test
jge
add
push
test
aam
pop
dec
push
scas
mov
and
jl
xchg
inc
cld
xor
loopne
pushl
sub
pop
leave
aam
lahf
scas
jl
mov
dec
mov
leave
js
rclb
jge
outsb
fwait
push
out
ljmp
in
add
scas
out
nop
xchg
rcl
movsl
cmpsb
je
sbb
pop
mov
mov
idiv
mov
mov
call
ljmp
inc
add
aaa
or
fcomip
jbe
mov
leave
mov
jg
jg
cmp
lahf
cmp
roll
outsl
shl
popf
push
or
mov
call
lahf
mov
sahf
loopne
in
ret
add
inc
shll
in
dec
add
ljmp
pushl
insl
and
test
sub
aaa
addr16
jnp
jp
mov
adc
and
scas
cli
ret
fsubs
dec
mov
sbb
into
fadds
jp
fdivl
in
lds
and
shll
inc
fsubp
dec
inc
shl
std
insb
fistl
add
sar
ljmp
inc
push
jb
data16
addr16
ja
inc
push
pop
mov
std
inc
sti
mov
out
jp
outsl
xor
decl
jmp
fldcw
pop
xor
add
mov
pop
pop
cmp
push
je
cmp
dec
sub
pop
out
cmpsl
push
adc
mov
pusha
in
push
aam
mov
scas
ljmp
std
fldt
xchg
jno
es
pop
mov
bound
pop
sti
aad
adc
incl
rolb
ret
pop
xchg
out
call
xchg
jno
stc
jnp
ss
lcall
push
cld
sub
std
icebp
fisttpl
cmp
xchg
data16
test
inc
out
loopne
adc
push
pushf
adc
or
scas
cmp
icebp
call
es
call
pop
fcmove
sub
scas
sbb
movsb
dec
mov
dec
adc
pop
scas
fdivrp
xlat
jae
jnp
imul
popf
ss
pushl
sbb
and
inc
mov
or
loop
mov
imul
incl
mov
push
fsubl
in
rcrb
cmpsb
addr16
dec
add
out
and
es
cli
mov
pop
push
clc
rcr
cli
mov
add
sarl
xor
mov
jmp
cmpsl
daa
cmpsb
mov
adc
jno
clc
fsts
add
gs
adc
out
and
adc
pop
sbb
pop
ss
or
adcl
push
mov
push
out
inc
lea
call
sbbb
dec
daa
and
ds
pop
ss
xor
sub
fsubrs
ds
cld
clc
lods
js
or
mov
clts
xchg
sub
dec
scas
sub
pop
in
sarl
out
cmpsb
xchg
cmp
sbb
out
gs
pop
or
and
arpl
sub
add
mov
lock
mov
inc
daa
adc
pusha
imul
jp
lds
nop
out
push
add
ficompl
pop
dec
cmp
pop
xchg
pop
and
pop
mov
outsl
pop
fyl2x
ret
aaa
mov
pushf
add
stc
jmp
jg
mov
adcb
jnp
lods
lret
and
adc
fwait
xor
outsl
pop
sahf
inc
push
mov
ja
add
add
adc
add
fs
adc
nop
push
add
mov
push
incl
adcb
add
add
push
sbbb
in
dec
add
dec
incl
out
in
add
and
push
sub
shll
sbb
add
push
sub
add
and
add
push
inc
dec
xchg
or
add
nop
push
add
adc
push
ja
invd
sub
cmp
inc
sub
inc
je
adc
pop
jae
subl
push
insl
enter
push
push
xor
xchg
in
adc
lcall
int
cld
fcomip
lock
xor
les
loope
rcll
cmp
jns,pt
mov
mov
push
pusha
sahf
jg
cmp
adc
div
add
pop
outsb
jb
pushl
js
mov
shll
loop
cli
pop
sub
xchg
sbb
mov
pushl
sbb
arpl
sbb
aaa
cld
pop
lods
in
inc
xor
push
jmp
fcmovbe
jle
fdivrl
push
cmp
or
add
jae
rol
mov
ljmp
cld
ret
ja
or
pop
shll
inc
fiaddl
cmp
sar
lcall
call
cmp
fnstenv
daa
pop
xchg
fs
sti
cmp
stc
sub
and
xlat
pop
push
pusha
xchg
stos
push
cmp
or
xor
cmp
decl
pop
xchg
or
mov
lcall
out
std
or
clc
popf
fwait
push
outsl
ljmp
lret
xchg
sbbl
push
out
push
test
lcall
out
xchg
insl
into
xchg
jle
roll
fs
test
mov
add
pop
call
and
mov
push
jae
mov
pushf
xchg
loop
jne
shlb
call
add
mov
cmp
sbb
dec
mov
lods
mov
ret
mov
shlb
popa
ds
cmpb
mov
xlat
and
gs
call
cmc
fidivrs
mov
outsl
push
aam
addr16
mov
inc
add
sti
jno
mov
xchg
das
and
pop
cwtl
loopne
shrl
jp
xor
push
add
dec
loop
push
mov
push
or
xchg
out
cmp
pop
out
imul
lcall
mov
push
test
mov
push
rcl
fsubr
repnz
inc
jns
test
mov
lcall
xchg
hlt
icebp
jmp
sub
xchg
notb
inc
cmpsl
leave
fs
dec
ret
mov
pop
jns
cli
pushl
adc
jnp
pop
out
vpsubusb
lods
adc
push
test
addb
incl
adc
addl
and
subb
or
daa
add
or
adc
cs
inc
sbb
bound
push
push
pusha
loop
jae
dec
call
lods
test
and
push
inc
mov
aas
mov
pop
or
es
std
pushl
fildll
dec
cmp
or
mov
jmp
loopne
push
xor
mov
jmp
bound
gs
xor
popa
and
xchg
addr16
xchg
and
push
mov
loop
adc
sub
mov
ds
xchg
xchg
push
mov
adc
mov
and
inc
das
and
pop
sbb
orl
imul
ljmp
call
jo
sub
adc
add
mov
ja
aaa
imul
push
imul
cwtl
mov
ds
dec
xor
inc
jbe
in
call
xchg
dec
push
jmp
adc
and
push
mov
pop
ss
lea
jbe
xor
mov
jmp
mov
loop
out
jp
fwait
insw
loope
jmp
add
jle
xor
andb
or
pop
or
outsl
call
aam
push
lret
push
ds
jno
xchg
add
xchg
dec
sar
mov
and
jnp
jp
sti
fildll
std
aas
daa
nop
cmp
or
add
aas
sbb
ljmp
jae
arpl
div
cmp
or
andb
xchg
cltd
xor
idiv
popf
cmp
xor
adc
fldt
shll
loop
daa
in
push
xchg
jno
mov
or
das
mov
xchg
pop
fs
xchg
in
and
in
mov
fbld
aas
inc
sbb
and
mov
xchg
pop
decl
in
or
addl
clc
or
fstpt
addr16
xor
lea
pop
xchg
pop
jmp
dec
and
mov
mov
mov
jg
mov
xchg
stos
xor
sbb
shll
mov
shll
fmul
scas
aam
or
sbb
outsl
mov
mov
daa
or
aam
ja
cmp
xchg
mov
jae
insl
pop
in
loope
mov
scas
ret
pop
iret
fcmovnbe
movsl
adcl
loop
push
pop
jge
xchg
outsb
daa
fistps
lds
pusha
sbb
loope
mov
and
push
out
loope
xchg
fsts
cmp
or
fidivrs
pushl
sub
stos
mov
ja
dec
sub
sahf
popa
sub
cmp
test
push
sub
xchg
xor
xchg
stc
pop
mov
aam
aas
cltd
mov
jmp
in
adc
mov
dec
out
sub
push
mov
jnp
xchg
and
outsl
call
and
adcb
addb
add
cld
cli
xchg
in
mov
xor
fcomp
ljmp
sbb
in
call
lock
imul
das
mov
sbb
loop
sar
out
jle
pop
mov
pop
outsl
movntq
xchg
imul
jmp
sti
call
lret
and
sarb
ljmp
pusha
imul
pop
clc
jmp
mov
icebp
loope,pt
imul
adc
jmp
push
imul
xchg
add
call
roll
je
mov
je
shll
push
sti
mov
insb
imul
aaa
stos
es
jmp
cmpsb
jle
push
and
ffreep
movsb
fsubl
jns
inc
enter
dec
xchg
jmp
dec
push
jg
or
sub
cwtl
mov
xlat
in
fsubl
xchg
mov
loope
mov
lcall
incl
jmp
or
adc
aas
push
mov
jne
ljmp
adc
add
push
cmp
shr
jmp
int
xor
xchg
jecxz
mov
loope
pushl
mov
dec
mov
dec
pop
mov
and
jg
pop
das
cld
pop
lcall
and
arpl
outsl
sbb
std
ljmp
or
sub
int
pop
rclb
jmp
iret
pushf
jmp
stos
sbb
test
and
lcall
jecxz
fsubrl
sub
test
push
jmp
call
popa
adc
bnd
jbe
rcrl
sbb
xchg
cmp
jnp
loopne
sbb
sbbb
xchg
mov
pop
lahf
xlat
jg
fstpt
movsb
imul
and
or
lods
jecxz
mov
fisubs
in
ret
and
mov
jb
push
js
push
in
jne
incl
lods
ds
add
mov
push
in
fistpll
arpl
stc
or
and
jecxz
mov
adc
mov
jg
jo
orb
adc
nop
hlt
outsl
and
sti
mov
std
mov
fxam
xchg
xlat
mov
stos
xor
adc
stos
aad
fbstp
push
xor
sbb
outsb
pusha
xchg
adc
mov
xchg
dec
outsw
outsb
jg
pop
jmp
aas
loope
mov
sahf
and
in
mov
add
and
mov
or
mov
sub
ljmp
mov
sub
push
pop
sbb
ficoms
insl
jmp
rclb
loop
adc
sbb
mov
dec
jg
push
mov
and
and
mov
ret
add
xchg
sbb
ljmp
and
aaa
and
fidivs
ss
mov
inc
dec
cld
mov
fmuls
mov
cmp
pushl
push
lret
ficompl
mov
push
in
jecxz
and
pusha
mov
decl
sub
nop
dec
mov
or
xchg
push
data16
jp
pop
cli
call
jae
jbe
dec
xor
inc
push
ja
ret
push
fs
data16
xor
xor
arpl
sti
pushl
aaa
jno
push
js
jns
inc
imul
bound
add
xor
dec
js
sbb
lcall
push
ja
xor
xor
insb
push
push
jne
jp
xor
inc
xor
in
call
je
inc
ss
inc
jo
gs
outsb
inc
je
popa
addr16
add
outsl
incl
dec
jne
dec
pop
jbe
push
xor
popa
pop
aaa
push
dec
or
jmp
js
jbe
jbe
dec
dec
inc
dec
jp
je
xor
popa
push
ja
jp
bound
push
outsb
jmp
xor
je
pop
inc
lea
arpl
mov
aaa
addr16
push
push
push
dec
inc
insl
inc
dec
inc
sti
ljmp
dec
arpl
ja
pop
arpl
insb
ja
imul
dec
inc
dec
imul
pushl
jbe
push
push
jp
xor
jns
jp
jb
jbe
xor
pop
mov
popa
insb
cs
dec
addb
bound
call
push
push
inc
xor
push
push
xor
bound
push
outsl
jb
push
dec
dec
push
addr16
dec
jbe
push
lret
dec
dec
ss
pop
inc
out
jno
pop
gs
inc
mov
add
jg
jo
je
insb
cmp
push
inc
dec
arpl
xor
ja
push
xor
loop
jg
push
push
popa
outsl
dec
imul
test
fistps
dec
push
mov
bound
push
jo
add
orb
daa
fwait
outsl
or
mov
add
xor
shll
aaa
add
repnz
loope
jecxz
add
add
shl
mov
push
out
push
dec
lcall
pop
enter
loop
call
and
jmp
dec
in
dec
and
inc
jb
jecxz
jo
xor
add
js
pushf
fnsave
inc
cmp
add
jbe
mov
or
shrb
push
xchg
lret
in
adc
adc
adc
sub
or
sbb
int
das
cli
sbb
jbe
dec
lahf
xor
jbe
scas
pop
inc
mov
lods
aad
rolb
fdivrl
cwtl
xor
loop
loopne
and
divl
jbe
dec
dec
daa
mov
or
pop
jbe
das
subl
push
xchg
push
lahf
mov
lcall
push
std
out
jnp
mov
out
dec
test
dec
add
jnp,pt
lea
rolb
psubq
loopne
sar
or
mov
adc
mov
xchg
pop
sub
rcrl
push
mov
sbb
adc
mov
dec
jo
jmp
loope
cs
or
mov
setno
jecxz
inc
aas
inc
enter
mov
clc
sbb
jnp
cmp
xor
pop
cmp
xchg
sahf
adc
push
adc
fstl
ds
jb
sub
cmp
cs
imulb
aas
leave
fildll
push
add
push
lret
in
fadds
out
icebp
mov
pop
add
mov
nop
mov
in
mov
pop
jmp
pushl
jns
push
mov
or
fdivrl
dec
xchg
jge
insb
arpl
lahf
out
jmp
call
pop
into
loope
jbe
add
in
ret
add
pop
mov
ds
outsb
pushl
and
lds
in
vpmaxuw
mov
shrl
ja
gs
lret
pop
loopne
xor
jecxz
cmove
in
sbb
jb
je
nop
insb
push
arpl
in
add
pop
dec
gs
jbe
add
sub
jb
dec
outsb
adc
jge
add
je
adc
gs
sti
outsb
xchg
or
cmp
outsl
or
inc
cltd
push
dec
imul
jbe
mov
je
push
jne
jns
add
imull
loope
mov
sbb
mov
or
or
sbb
fsubr
fistl
popa
fs
mov
pop
insl
pop
pop
lds
cmpsl
je
push
mov
fs
popa
jb
outsl
dec
insb
flds
imul
jns
mov
push
and
popf
lods
fstl
inc
inc
or
pop
pusha
jns
fisttps
and
arpl
stos
movsb
cli
gs
imul
adc
popa
jnp
mov
inc
adc
in
div
push
jb
inc
fs
xor
fisttpl
gs
mov
sub
fildl
add
insl
adc
mov
adc
inc
and
cmp
inc
sub
outsb
xor
in
add
adc
jl
xlat
xor
adc
jae
addr16
lods
imul
push
outsb
push
jo
cmp
cmp
sbb
mov
and
dec
adc
mov
mov
ret
cmp
push
je
inc
ja
imul
cmp
push
pop
popa
imul
add
or
xor
leave
inc
push
mov
mov
mov
dec
fiaddl
jne
jb
xor
xchg
jns
lods
jb
cmp
data16
cmp
xor
gs
outsl
hlt
dec
gs
mov
sti
or
jbe
jo
inc
mov
mov
push
addb
adc
out
dec
push
outsb
pop
adc
mov
xchg
mov
mov
je
push
jns
mov
ucomiss
adc
pop
cmp
adc
xchg
in
test
arpl
jae
enter
rorl
and
sahf
push
test
mov
dec
mov
and
aas
push
jo
sub
jae
addr16
aam
pop
cmp
imul
ja
xor
data16
lret
jbe
outsl
jbe
int3
push
mov
rcll
orps
add
dec
xor
xchg
pop
push
and
push
lahf
dec
or
das
inc
pop
aaa
jge
or
xchg
push
mov
dec
sbb
mov
dec
jae
fbstp
mov
adc
push
or
adc
das
push
adc
jbe
sti
or
add
xchg
in
lds
xchg
xor
xor
repnz
loope
inc
ror
add
bound
inc
mov
push
pop
sbb
and
lea
adc
lds
adc
sub
fcoms
xchg
mov
xchg
fwait
inc
sbb
fs
push
add
cmp
mov
pop
xor
dec
push
xor
add
lods
jmp
imul
and
xlat
jo
cmp
imul
push
jno
out
popf
loope
sti
pop
scas
mov
in
inc
mov
rolb
insl
inc
pop
dec
or
xor
rol
lret
dec
popa
gs
cmp
fcmovb
pop
test
xor
dec
mov
dec
cmp
aaa
cmovb
push
push
xor
or
leavew
fidivs
adc
fisttpl
and
inc
jb
andl
cmp
scas
cmp
push
push
add
shrl
jbe
popl
arpl
and
test
add
push
mov
mov
fld
lds
outsl
dec
inc
inc
sub
scas
mov
push
xchg
jl
push
data16
xor
je
fmull
fdivrs
mov
adc
sub
inc
add
or
adc
nop
push
add
add
adc
adc
add
and
add
nop
inc
add
add
addl
andl
or
adc
nop
push
add
add
addl
push
and
mov
push
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
cmp
push
adc
mov
add
add
adcl
adc
add
mov
adc
call
mov
add
add
adc
or
jmp
andl
test
inc
and
dec
orb
nop
push
add
inc
inc
add
add
addl
push
inc
add
and
inc
adc
nop
push
add
add
xchg
test
and
pusha
inc
push
adc
sub
sub
add
fs
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
inc
or
push
aam
cmp
std
in
sti
dec
jbe
cmp
dec
cmp
hlt
add
dec
push
add
xor
push
outsb
imul
outsb
mov
ror
call
xor
shrl
xor
pusha
shll
pushf
test
shll
lock
lcall
and
imul
imul
imul
sub
pop
push
shll
mov
dec
fsubr
hlt
push
add
lcall
dec
pop
insb
imul
imul
xor
or
sbb
dec
pop
xor
shll
orb
mov
dec
shll
add
add
cmp
xor
shll
push
mov
lods
mov
imul
cmpsb
imul
cmpsb
imul
fsubrp
testb
push
dec
shll
bound
shll
mov
dec
sarl
imul
cmpsb
imul
cmpsb
imul
out
cli
or
sbb
dec
shll
jb
xor
shll
pushf
test
fnstenv
cld
or
cmpsb
imul
imul
cmpsb
imul
adc
and
dec
shll
mov
lods
mov
lcall
and
cmpsb
imul
imul
mov
ljmp
cmpsb
imul
imul
cmpsb
imul
sbb
xor
shrl
inc
push
pop
push
shll
mov
xor
call
imul
imul
imul
dec
shrl
and
inc
push
shll
cwtl
stos
dec
shll
repnz
cmpsb
imul
cmpsb
imul
lcall
dec
shrl
cli
push
adc
and
inc
xor
shll
data16
nop
shll
lret
pop
ss
loop
add
or
lcall
push
pusha
insb
imul
imul
xor
add
push
sbb
dec
xor
shll
bound
xchg
shll
cmpsb
pop
ss
repnz
adc
and
cmpsb
imul
cmpsb
imul
call
add
inc
dec
pop
data16
lcall
mov
lcall
adc
cmp
xor
push
pop
imul
imul
lcall
xor
push
imul
imul
dec
ret
out
push
mov
lcall
data16
imul
sub
cmpsb
fdivp
add
adc
dec
shll
push
xor
cwtl
stos
mov
shl
repnz
push
and
inc
push
fs
cmpsb
imul
cmpsb
imul
sbb
add
ss
push
lcall
nop
pushf
scas
imul
xor
mov
sbb
sub
dec
dec
shll
cwtl
movsb
xor
shll
ret
clc
shll
add
cmp
shll
lcall
shl
hlt
sbb
xor
jmp
ss
dec
shll
xchg
mov
mov
sbb
shll
xor
xor
push
push
cmpsb
imul
mov
push
xor
addr16
shll
orb
lods
mov
pop
lret
xor
mov
xor
shll
dec
push
pusha
insb
dec
shll
mov
ss
shll
fdivp
cld
or
imul
imul
imul
mov
clc
add
adc
xor
xor
roll
fs
dec
shll
call
cli
or
push
sub
imul
imul
je
in
and
and
xor
cmpsb
imul
cmpsb
imul
imul
dec
shll
cmp
shll
cmpsb
mov
and
rcrl
dec
push
shll
xchg
mov
mov
rcr
lock
push
and
inc
push
imul
imul
insb
lcall
cs
shll
dec
pop
push
shll
mov
fnstenvs
sub
lcall
dec
push
pusha
imul
imul
lcall
and
imul
imul
imul
dec
shll
inc
push
pop
jo
xor
roll
xor
shl
hlt
adc
dec
mov
or
sub
inc
dec
shll
mov
mov
rcr
rcrl
sub
sub
xor
sub
dec
push
push
xor
cwtl
movsb
mov
out
dec
rcr
out
add
roll
dec
shll
pop
jo
dec
shll
xchg
mov
dec
ror
fsubr
cli
or
cmpsb
imul
imul
cmpsb
imul
xor
cmp
xor
push
pop
push
dec
shll
mov
imul
cmpsb
imul
imul
cmpsb
imul
adc
xor
rcrl
xor
pop
dec
shll
scas
sarb
lock
lret
shll
inc
push
bound
xor
je
mov
shll
clc
add
imul
imul
imul
shrl
xor
xor
imul
imul
cmpsb
imul
shll
bound
xor
xchg
cltd
cmpsb
jmp
ss
shll
inc
push
pop
dec
shll
mov
xor
rcr
call
hlt
push
cmp
and
cmpsb
imul
imul
cmpsb
imul
and
xor
shrl
dec
push
bound
xor
outsb
jp
sahf
stos
mov
into
loopne
add
push
imul
imul
imul
mov
add
or
and
shll
js
dec
shll
fsubr
lcall
push
and
lcall
outsb
cmpsb
imul
imul
dec
shll
cmp
shll
cmpsb
mov
shll
cli
push
lcall
xor
imul
imul
insb
lcall
sub
dec
shll
dec
pop
outsb
jp
xor
roll
cmpsb
aas
roll
dec
shll
cmp
shll
lcall
lret
cli
or
dec
sarl
cmp
pusha
shll
mov
dec
ror
ljmp
inc
push
sbb
push
imul
imul
sub
clc
add
push
and
xor
shll
fs
mov
xor
shll
inc
dec
addr16
inc
xor
shll
pusha
insb
jle
shll
shl
dec
rcrl
inc
add
xor
shll
bound
mov
xor
rcrl
dec
addr16
ret
inc
add
cmp
push
adc
dec
rorl
fnstenvs
inc
adc
xor
pusha
insb
imul
imul
lcall
inc
push
bound
cmpsb
imul
imul
xor
or
cmp
xor
shll
jo
mov
mov
dec
shll
dec
dec
add
cmp
shll
mov
mov
int3
fsubrs
dec
shr
cld
or
cmpsb
imul
imul
xor
loopne
xchg
dec
dec
lcall
pop
add
cmpsb
imul
and
xor
shll
push
mov
imul
cmpsb
imul
into
insl
add
add
cmpsb
imul
out
pusha
jae
and
inc
jne
push
rcll
addb
shll
shr
hlt
dec
shll
push
mov
cmp
shlb
inc
and
or
mov
push
and
push
inc
add
insb
adc
lcall
les
cmp
mov
cmc
pop
add
mull
fdivl
movsb
ljmp
jmp
jmp
push
pop
ljmp
jbe
cmpsl
mov
pop
mov
mov
push
in
xchg
jmp
cmp
shll
ljmp
lods
in
jno
jno
push
pop
push
call
xchg
incl
insb
testb
xlat
int3
call
jns
jbe
pop
jbe
scas
mov
or
jmp
insb
hlt
mov
scas
xor
xchg
call
aaa
jge
divb
es
sbb
ljmp
fnstenv
test
dec
pusha
jmp
cmp
sub
jp
lock
jl
ljmp
jmp
subb
gs
xor
xor
ljmp
fldt
mov
mov
xor
cmp
in
je
movsl
scas
mov
mov
mov
push
jmp
lcall
lods
xor
cmp
je
test
aaa
lods
and
jecxz
in
call
shlb
cmpsl
lret
out
mov
mov
scas
mov
jg
xlat
mov
incl
pop
adc
cmpsl
push
pop
xchg
out
push
scas
mov
add
and
inc
mov
pop
mov
incl
pop
mov
push
sbbb
lds
daa
inc
inc
mov
mov
cli
shl
cmp
pushf
cwtl
lahf
arpl
jmp
movsb
fstps
dec
out
imul
or
stc
das
pop
mov
mov
jecxz
adc
cwtl
pop
dec
cmpsb
flds
stc
pop
fcomps
stc
jmp
sub
mov
fwait
pop
outsb
loop
pop
xor
loopne
imul
sbb
jmp
xchg
add
out
cwtl
cmp
lcall
movsb
jnp
leave
in
int3
outsb
popa
adc
jmp
xchg
imul
mov
out
add
loopne
push
call
movsb
cmp
iret
ret
movsl
jns
push
push
push
dec
mov
and
fisubrs
xor
mov
xchg
pop
cwtl
pop
xor
stos
inc
loop
jmp
idiv
decl
movsl
push
push
mov
mov
sahf
popa
xchg
mov
adc
fists
addr16
pushl
fcomp
les
jecxz
xchg
out
call
xchg
ja
shl
sub
call
sbb
pop
pop
data16
fimuls
insl
pop
cltd
push
xor
in
sbb
std
frstor
and
loop
jmp
insb
cmpsl
in
mov
push
fbld
leave
sbb
pop
and
fbld
mov
ljmp
aad
jecxz
and
sub
stos
mov
out
call
rclb
lahf
jmp
mov
pop
frstor
stos
mov
ljmp
fsubrl
test
mov
xlat
daa
pop
and
daa
rcr
cmpsl
mov
pushf
jg
popa
pop
and
inc
fsubl
and
icebp
pop
addr16
fstpl
mov
adc
dec
push
sbb
call
sbb
xchg
fcompl
fsubl
xlat
cmpsl
jnp
adc
sbb
call
sti
and
cmpsb
push
addr16
push
aam
int3
ss
cmpsb
daa
sbb
out
loopne
call
mov
aam
add
push
imul
outsl
cld
add
test
lret
push
sub
nop
aam
pop
jne
sub
fdivr
ljmp
inc
add
adc
dec
xchg
push
sub
aad
ret
sub
or
lcall
movsb
rcl
sti
divl
sar
xchg
pusha
push
adc
pop
sub
jnp
aad
lcall
cmp
aam
mov
xlat
cli
cs
push
sbb
sar
leave
cmc
xchg
sbb
ficoml
pop
mov
outsl
daa
test
div
push
xchg
inc
dec
xlat
hlt
xchg
adc
sbb
cmc
jg
out
inc
ljmp
icebp
xchg
sub
rorb
repz
fmull
test
fdivs
pop
negl
pop
lcall
adc
cmovo
sbb
pop
xchg
out
sbb
xor
ljmp
cld
pop
fdivl
fstpt
cwtl
in
inc
jmp
pop
loopne
scas
fucomi
mov
pushl
int
pop
jmp
imul
outsl
mov
pop
daa
into
dec
xchg
pop
xchg
mov
fiaddl
jle
in
inc
sahf
cmp
pop
or
scas
pop
push
scas
shlb
fsubs
jecxz
fs
scas
push
in
fnstenv
or
pop
push
sbb
xchg
bswap
bound
pushf
loop
push
fisubs
jae
pop
loope
add
outsl
or
push
adc
inc
cmpsl
xchg
lcall
fstpt
mov
pop
lcall
fisubl
xchg
pop
adc
or
or
jg
xchg
in
scas
or
ljmp
adc
dec
jge
sbb
loop
adc
out
adc
repnz
and
fcom
cli
adc
adc
lods
push
push
cld
dec
adc
test
fst
adc
mov
push
jecxz
lea
insb
add
aaa
sar
pushf
sbb
jmp
mul
push
push
inc
xchg
adc
xor
push
and
aam
outsb
cmp
cmp
lcall
incl
in
xchg
cli
mov
pop
xchg
jl
dec
je
xchg
dec
daa
aad
cmp
or
cld
pop
rcll
shll
push
roll
notl
jp
ljmp
bndstx
mov
fmull
adc
xchg
xchg
xor
dec
jbe
call
dec
jp
cld
into
inc
or
pop
out
dec
mov
rorb
aam
inc
push
push
mov
mov
add
inc
int3
shll
mov
icebp
dec
aas
or
mov
push
repz
std
decl
je
icebp
dec
sub
mov
sbb
dec
popa
lahf
data16
out
dec
dec
jmp
mov
or
in
punpcklbw
mov
dec
lds
jle
adc
cli
push
inc
push
enter
leave
ja
mov
data16
in
aam
dec
jae
adc
outsl
std
jp
lea
mov
leave
arpl
dec
data16
push
int3
xchg
adc
mov
cld
js
ror
loop
out
push
mov
fwait
popa
outsl
mov
pop
ljmp
sbbl
pusha
icebp
xchg
or
cmpsl
jg,pt
mov
shlb
pushl
in
mov
and
push
push
and
popf
cmp
pop
es
arpl
and
ljmp
lret
stc
scas
in
inc
je
nop
pop
loopne
jmp
and
ss
test
jns
inc
lret
scas
test
bound
cmp
aas
mov
js
jge
jmp
and
mov
pop
cmp
jmp
cld
mov
icebp
loop
push
ja
adc
mulb
fstl
insb
push
popa
add
movsb
fcomi
push
movsl
inc
arpl
adc
sbb
adc
pop
lods
cmpsl
jo
cli
push
adc
push
popa
lret
mov
movntq
out
cmpsl
insb
xor
and
jne
arpl
decl
add
mov
int3
and
jnp
ja
mov
mov
fs
popa
gs
mov
dec
insl
xchg
adc
sarl
loopne
lret
arpl
gs
sbb
pop
fs
call
mov
ja
dec
and
leave
adc
inc
sbb
mov
data16
mov
pop
lret
pop
movsb
dec
imul
ljmp
call
sbb
xor
popf
stos
mov
pop
jle
dec
js
stos
fwait
loop
jo
mov
lcall
adc
fcmovnbe
mov
fldl
jmp
sbb
jae
pop
leave
mov
inc
lcall
or
and
sbb
repz
movsl
ds
adc
pusha
sbb
and
ljmp
std
lcall
adc
pop
pushf
int3
popf
jp
test
aam
ljmp
pushl
fidivl
sbb
pop
sbb
sbb
inc
outsl
pop
insb
call
pop
sbb
sub
popf
adc
ljmp
push
xchg
sbb
jae
out
sbbl
jbe
das
sahf
push
imul
sbb
or
call
cwtl
shll
sbb
inc
sti
pop
jo
rcr
add
push
sahf
outsl
nop
pop
sbb
jp
stc
xor
sub
jg
and
push
cltd
dec
mov
mov
adc
adc
mov
popa
mov
rcr
inc
mov
adc
es
nop
pop
scas
shrb
je
outsl
negb
insl
inc
ds
movsl
add
scas
imul
xchg
add
xchg
insl
lods
mov
cmp
jns
mov
ljmp
xchg
or
push
jle
jmp
xchg
mov
xchg
adc
lcall
fdivrs
and
jl
adc
shr
push
je
xchg
ror
imul
pop
cld
and
fisubl
outsl
xor
cwtl
aam
mov
mov
ljmp
pop
sub
sbb
sub
divl
push
scas
mov
pusha
jno
and
or
lock
pushl
xlat
jb
push
push
mov
pop
insb
insb
pop
bound
scas
loopne
push
cmc
fildl
push
out
leave
pop
inc
rorl
popf
aam
data16
in
ljmp
xchg
jmp
insb
pushf
jp
in
pop
and
xor
loope
adc
out
and
sbb
scas
mov
jmp
jmp
sbb
mov
lods
call
adc
nop
inc
push
push
stc
daa
push
adc
or
into
jns
push
enter
popf
cs
adc
jp
adc
les
fstps
sub
dec
push
adc
mov
push
xlat
mov
loope
inc
xchg
lret
paddsw
lret
push
shlb
sarl
inc
pop
mov
data16
dec
aad
jg
clc
gs
adcb
scas
orb
cltd
cld
ljmp
into
lahf
mov
dec
xchg
cmp
adc
and
push
in
out
push
sahf
inc
lcall
jmp
jl
repnz
ret
imul
jb
and
jns
push
inc
mov
in
pop
outsb
test
lret
lcall
outsl
mov
add
lret
jbe
jg
pop
in
sub
into
jmp
dec
rclb
fiaddl
inc
inc
call
fsubs
add
inc
pop
xor
jo
push
imul
xchg
clc
gs
jb
shlb
mov
mov
loop
xor
call
cli
fbstp
push
and
sbb
inc
pop
add
aaa
arpl
loope
ljmp
push
lahf
pop
loop
in
fcompl
mov
mov
out
pushl
xchg
sbb
rcrl
test
cmp
pushf
xlat
in
shll
pop
cmp
in
inc
call
clc
insb
cltd
xlat
jl
ret
pop
add
and
mov
test
rorl
jns
daa
xchg
test
add
or
les
fdivs
out
or
popa
xchg
push
ret
call
xchg
test
sarb
cltd
fldln2
dec
xchg
mov
enter
mov
mov
xlat
mov
in
adc
pushl
call
adc
rcll
pop
fcom
jmp
xor
movsl
cmpsb
push
xchg
ljmp
mov
ljmp
ret
add
push
popf
or
push
pop
adc
data16
mov
icebp
and
jns
test
fisubrs
dec
mov
leave
insl
push
nop
test
jecxz
std
mov
xchg
and
cli
call
repz
aaa
inc
push
adc
push
xchg
push
loop
xor
cs
hlt
ljmp
jle
push
dec
push
stos
ss
and
cltd
jns
stos
xchg
js
lods
xor
jg
sbb
push
lods
out
and
and
sbb
or
mov
sbb
cmpsl
daa
cltd
and
icebp
ss
stos
xor
arpl
outsl
add
jecxz
scas
jo
ljmp
ljmp
mov
loope
lahf
imul
push
dec
sub
jnp
pop
xchg
clc
jnp
shrb
mov
push
fstl
outsl
decl
xor
imul
cmp
mov
lcall
test
out
cmp
cli
out
sub
in
jne
mov
cmp
addr16
lahf
mov
loope
xor
jg
decl
jge
insb
inc
push
test
jbe
stos
lods
inc
dec
nop
pop
std
incl
lret
test
sbb
ret
and
aaa
jg
jnp
aas
mov
fstpl
xor
and
pushl
gs
ss
adc
ss
movsb
mov
out
mov
jo
mov
ljmp
cltd
into
inc
in
adc
aam
pop
clc
mov
out
sahf
dec
cwtd
dec
mov
hlt
push
sbb
sahf
pop
in
fcmovnb
cmpsb
sbb
mov
mov
mov
cmpsb
cltd
mov
mov
xor
int
push
cmp
mov
cwtl
hlt
push
inc
imul
xchg
dec
mov
lcall
mov
mov
lcall
mov
clc
xchg
pushl
scas
aas
cmp
adc
xor
mov
lahf
push
cltd
xchg
xchg
call
bound
xchg
arpl
adc
adc
in
shll
das
mov
movsl
cmc
dec
jl
aam
dec
es
daa
inc
and
decl
gs
push
out
cmpsl
push
mov
jecxz
jbe
lahf
clc
cmpsb
dec
pop
shl
push
fwait
mov
sub
adc
sti
push
sub
popf
test
add
push
mov
mov
sbb
mov
test
daa
xchg
cld
adc
pushf
cmpsl
push
loopne
ljmp
test
cltd
loope
ficompl
jae
pushf
and
cmp
cli
xchg
sbb
inc
lcall
pop
daa
xchg
xchg
xor
hlt
lcall
jl
cmpl
sub
push
sbb
sbb
test
pop
and
dec
std
jmp
sbb
int
sahf
sub
add
push
loope
mov
aaa
cli
das
cmc
sahf
stos
inc
jg
sub
sbb
ja
push
and
jg
fmuls
mov
pushf
scas
xchg
outsb
dec
pop
and
call
loope
mov
out
les
xchg
lcall
sbb
adc
cwtl
sub
mov
jl
add
loop
hlt
jmp
addr16
mov
loop
mov
leave
xchg
loope
shlb
js
es
insl
xlat
and
stos
incl
xchg
cmpsl
or
stc
int3
xchg
xchg
fdivrs
adc
adc
das
or
incl
adc
push
xchg
dec
lea
push
sub
jge
jmp
jmp
xchg
decl
mov
sub
push
mov
inc
jnp
das
push
dec
xchg
loopne
inc
adc
movsl
in
jae
sti
in
aad
dec
mov
xchg
mov
pop
inc
push
cmc
outsl
hlt
jmp
sub
xor
mov
adc
xchg
mov
movsl
push
mov
or
xchg
fdivrs
cmc
adc
das
adcb
inc
push
adc
cli
incl
xchg
pop
inc
push
push
adc
enter
adc
lcall
loopne
xchg
les
mov
cmp
add
dec
nop
leave
dec
into
xchg
inc
popf
lret
jmp
push
call
xchg
loop
aas
not
ret
aaa
daa
lcall
lret
pop
test
push
cmc
xchg
out
mov
jg
xchg
sub
push
loop
in
sub
out
ss
push
pop
dec
in
push
pop
jns
cltd
xor
call
movsb
out
dec
cmp
mov
stos
addr16
inc
mov
lock
in
push
mov
and
adc
xchg
out
and
rolb
rcrb
stos
hlt
incl
pop
dec
adc
mov
mov
ficoms
fcmovnbe
sahf
in
lret
sbb
jmp
mov
stc
out
pop
jle
call
ficompl
jne
fisubl
in
fidivl
dec
test
pushl
out
push
loopne
call
dec
xor
iret
ss
aam
add
mov
test
push
in
lods
jg
jp
sub
mov
cli
push
lcall
jmp
push
jmp
or
scas
ret
fs
xchg
ja
jg
jmp
loop
in
mov
mov
jmp
pop
mov
adc
int3
pop
incl
cmpl
in
cmp
out
gs
and
jmp
xchg
mov
push
push
cs
popf
cld
out
iret
push
cmc
ljmp
lret
mov
in
fldcw
cmp
jnp
das
jle
sbb
mov
jecxz
test
jno
jae
mov
push
pop
mov
cmp
das
mov
xlat
mov
jnp
push
test
scas
adc
inc
mov
add
push
cli
xchg
xorl
out
and
loop
daa
incl
mov
data16
mov
mov
inc
out
mov
jmp
mov
jmp
xor
mov
mov
mov
inc
loop
mov
in
jecxz
sti
decl
xor
loopne
cwtl
mov
aam
lahf
fs
scas
cmpsb
leave
cmp
loopne
sub
jg
std
in
mov
xchg
bound
arpl
pusha
movsl
sub
push
stc
pushf
mov
pop
mov
fldenv
mov
push
or
fnsave
jg
incl
fidivl
xor
xor
cmp
ljmp
mov
subb
notb
inc
xchg
jp
pop
sahf
mov
inc
filds
sub
inc
jnp
sbb
fildl
add
sarl
add
pop
jno
out
dec
incl
mov
pop
sbb
fwait
inc
push
sub
fmull
inc
pushl
fisttpll
mov
sub
add
push
jmp
inc
pop
pushf
sbb
push
test
jnp
iret
mov
sar
cltd
inc
dec
sar
ljmp
fcmovbe
fidivrs
sbb
inc
pop
rcll
cmp
mov
inc
cmpb
fnstenv
fiaddl
jno
fistpll
lods
xchg
inc
dec
jns
pop
adc
faddl
sub
inc
aaa
sbb
xchg
push
rcll
jae
mov
jle
aad
aad
mov
fwait
in
dec
in
mov
mov
inc
xchg
leave
mov
nop
dec
push
or
ljmp
aad
lret
dec
repz
dec
pusha
sahf
rorb
adc
call
leave
mov
hlt
push
xor
ret
or
adc
je
push
fucomip
stc
cli
pushl
cmp
xchg
mov
rcll
sarl
push
xor
sbb
inc
push
loopne
movsl
xchg
mov
jg
lods
push
adc
idivb
xor
shlb
adc
jbe
push
fbld
stos
xchg
shl
cmpsl
nop
pushl
je
xlat
xchg
aad
das
sbb
fs
in
les
cmp
pop
sbb
xchg
pop
push
mov
sbb
int
mov
push
jbe
arpl
fisttps
mov
or
or
xorb
pop
ret
ret
cs
popa
jp
mov
pop
loop
pop
clc
dec
mov
shr
pop
ffreep
mov
xchg
lret
les
dec
lcall
jmp
inc
lea
pop
add
ret
sub
in
sub
sub
jbe
call
ljmp
loopne
sub
sub
addr16
sub
test
mov
out
aas
stc
leave
mov
es
hlt
popa
add
movsb
adc
das
std
and
stc
jmp
movsb
loop
das
addr16
xchg
mov
fidivrs
cmp
pop
xchg
test
cli
call
pop
sub
dec
cmp
aam
dec
scas
mov
and
clc
jmp
lea
xchg
loopne
std
mov
sub
or
lock
jg
pop
inc
xchg
xor
sbb
fsts
out
es
or
or
sbb
cmc
sahf
dec
add
mov
hlt
leave
rolb
movl
mov
mov
in
cmp
mov
pushf
int
mov
in
cmc
fidivrs
jmp
sti
rorl
outsb
aad
pop
sahf
mov
das
cld
xor
inc
push
mov
sahf
pop
adc
sahf
mov
mov
outsl
lock
inc
mov
ljmp
insl
xchg
aad
in
dec
scas
int3
outsl
inc
mov
arpl
js
or
pop
fstps
mov
sub
sub
cmp
jmp
sub
inc
fcoml
das
sub
pop
dec
push
push
cli
sarb
outsl
dec
call
mov
push
cltd
pop
dec
xchg
fldt
adc
sbb
call
sar
test
xor
fbld
inc
int
out
push
mov
pushl
push
leave
test
push
or
addr16
jbe
pushl
aad
movsb
jbe
jge
mov
inc
mov
push
aad
sub
mov
flds
inc
xchg
cmp
loopne
ljmp
ret
les
cmpsl
mov
fcoml
dec
loopne
jmp
andl
incl
mov
ds
cmc
and
cmp
sahf
sbb
push
xor
js
pop
std
fildll
or
adc
sbb
inc
fs
cmp
insl
mov
jg
pop
rol
and
icebp
adc
adc
fndisi(8087
std
mov
cld
dec
sbb
add
ficomps
xchg
sbb
cmp
lcall
nop
add
nop
or
push
cmp
sti
aas
sarb
jnp
lahf
out
jno
dec
sahf
add
clc
dec
inc
mov
sbb
jmp
cmc
pushl
pop
cmpsl
cmp
mov
in
int3
in
test
jns
pushl
ret
sbb
mov
mov
int3
xlat
leave
mov
jae
popf
inc
push
loopne
mov
movsb
insb
push
jp
dec
mov
mov
push
in
mov
jmp
dec
sub
sub
ljmp
jbe
pop
loope
dec
or
test
and
push
push
mov
es
pop
mov
push
lcall
sbb
and
adc
jg
incl
mov
call
jbe
xor
jb
sbb
cld
sbb
xlat
jecxz
mov
lcall
sub
mov
mov
mov
hlt
jmp
popa
andb
jmp
pop
xlat
or
test
in
add
scas
xchg
push
nop
dec
jmp
lcall
jmp
je
sbb
shlb
adc
pop
adc
lcall
cwtl
es
sahf
pusha
test
pop
insb
inc
imul
push
ret
cmp
fisubrl
arpl
orl
rolb
sti
sbb
sbb
lcall
xchg
or
loop
mov
cmp
sub
add
cmpsb
inc
sbb
jmp
mov
aaa
out
push
inc
int3
into
stos
sbb
repnz
jmp
mov
ja
push
dec
adc
cltd
cmp
bound
dec
add
jmp
shrl
lcall
movsl
popa
adc
mov
pop
and
push
sub
mov
pushl
cli
mov
ror
push
mov
out
xchg
jle
jge
mov
outsb
pop
jne
pushl
aam
out
xchg
outsl
idivb
icebp
jo
pmuludq
sahf
sub
sub
add
in
cmc
mov
and
xor
pushf
adc
add
hlt
test
hlt
incl
mov
push
pop
shll
pop
and
jg
cmpsb
outsl
push
push
call
sbb
les
dec
sbb
test
scas
aam
push
cmp
inc
xor
leave
les
cltd
xchg
pop
push
fcomp
xor
decl
lods
and
notl
jo
or
lds
pusha
out
dec
rolb
gs
add
jmp
add
jl
mov
xchg
dec
in
jecxz
jne
push
inc
jbe
fwait
int3
sub
jge
inc
sbb
xor
lahf
insb
ljmp
lock
mov
ljmp
std
and
scas
fs
arpl
cmp
cmc
movsb
mov
mov
jge
xor
lcall
push
xchg
incb
jg
jmp
out
xchg
dec
xor
push
sub
mov
push
cwtl
idivb
jle
in
cmp
jne
sbb
cli
jg
cmp
inc
insl
inc
lods
jg
cmp
mov
add
adc
ret
add
pushl
xor
lahf
cmp
pushf
pop
mov
xlat
sub
das
enter
push
lock
fcmovnb
pop
cli
push
jg
mov
rorl
mov
push
mov
inc
adc
mov
push
je
lods
push
jp
je
xor
incl
mov
out
movsl
iret
imul
mov
pop
or
jmp
sub
jmp
in
sbb
fistps
call
fs
and
out
subl
xorl
in
leave
ljmp
jns
addl
insb
mov
and
sub
sbb
in
cmp
pop
cmc
or
in
imul
cltd
push
insb
pop
out
ljmp
push
lods
push
pop
sub
mov
sbb
cmpsl
sub
decl
xchg
inc
test
ja
jg
or
adc
cmpsl
es
mov
fnstsw
aaa
stos
insl
mov
mov
js
popa
jle
std
outsl
hlt
jg
jle
vpcmpeqb
and
daa
cld
mov
jmp
hlt
popf
cmpsb
cmp
fstps
push
add
std
mov
or
jae
and
ljmp
decl
std
dec
cli
sahf
fldz
xchg
insb
imul
fs
xor
jo
jg
fdivl
addr16
int
adc
lods
out
addb
adc
sub
or
bound
test
pop
call
iret
lret
push
dec
mov
pushl
cmc
fmuls
push
outsb
and
pop
adc
shr
sarl
cmp
push
in
out
sahf
sbb
fcomi
shr
ficomps
push
ret
pushf
loopne
fwait
aam
cmp
call
push
stos
je
and
pushf
in
call
dec
sub
pop
out
outsl
pushl
ljmp
into
push
mov
ljmp
cmc
jmp
xchg
sbb
jnp
ss
out
sub
jle
add
bound
xchg
jno
sub
xor
out
pop
xor
cmp
inc
or
mov
jmp
pop
ret
clc
sub
push
ds
xchg
xlat
push
ret
ret
xchg
sbb
mov
mov
int3
not
pop
gs
jmp
add
mov
dec
dec
popa
and
and
and
xchg
pusha
andb
lcall
stos
mov
xor
leave
nop
jns
dec
outsb
push
mov
lea
dec
xor
ljmp
pop
cli
push
inc
pop
inc
dec
add
jne
pop
ljmp
and
notb
or
outsl
cmp
or
loope
pop
inc
jmp
mov
pop
jl
aad
shrl
push
scas
add
enter
je
inc
mov
fsts
nop
or
insl
ficoms
jge
ficoml
and
test
xor
jge
cmp
pop
xor
pushl
nop
loope
int3
ds
push
leave
or
mov
mov
ss
setbe
pushl
pop
pop
mov
or
jp
xchg
and
pop
test
lcall
mov
mov
fdivs
fnstcw
iret
outsl
push
enter
std
movsl
fmuls
xor
mov
inc
sub
incl
stc
cltd
outsb
mov
cwtl
cs
cmp
es
push
sbb
sub
jg
cld
decl
mov
jmp
out
pop
ja
mov
jecxz
mov
out
pop
sub
xor
aaa
cli
das
rorb
lods
push
insl
in
pop
aad
outsb
addl
ret
call
mov
xor
js
loopne
cmp
mov
xchg
pop
inc
inc
in
movsl
ljmp
jp
sahf
movd
lods
sub
lds
jge
xor
loope
push
jnp
mov
lcall
mov
gs
mov
gs
pop
sbb
sub
pushl
scas
sbb
and
jnp
out
mov
push
jge
call
jbe
dec
aas
addb
jne
xchg
mov
add
fldt
xchg
push
aaa
outsb
and
call
ljmp
cmp
mov
out
in
ja
mov
data16
inc
out
dec
aas
cmp
push
push
test
aas
ficomps
into
lahf
hlt
fadds
mov
ljmp
or
test
shrb
mov
into
test
lahf
sbb
incl
cmp
push
xor
xchg
and
call
incl
or
mov
inc
add
lret
inc
test
xchg
call
cli
push
jg
ss
xchg
adc
mov
dec
cld
dec
mov
flds
mulb
std
decl
inc
pop
cwtl
aam
jmp
mov
xchg
mov
sbb
repnz
add
call
iret
shlb
sbb
and
mov
jmp
jmp
aad
sahf
push
aaa
push
lods
ss
jbe,pt
add
xor
adc
dec
in
push
ret
xchg
dec
popf
and
aas
cmpsb
scas
mov
mov
ss
ljmp
rorb
lods
aas
pusha
or
loopne
mov
call
lods
add
xchg
into
mov
adc
cmp
fcos
decl
fsubl
or
sub
ljmp
xor
jb
scas
stos
clc
fistl
sti
mov
mov
cld
incl
std
inc
mov
xor
mov
cwtl
lods
fs
mov
pushl
adc
or
scas
dec
test
jo
and
sub
dec
adc
mov
fstpt
int
cmp
dec
inc
push
push
fcomi
and
mov
xor
ljmp
std
fcmovne
mov
add
push
xor
cs
scas
xor
jecxz
cld
mov
lret
push
mov
hlt
xchg
xor
ljmp
cmc
push
ss
std
mov
or
dec
inc
lods
or
push
mov
jle
jle
lea
fwait
mov
mov
push
movsb
jo
je
mov
arpl
xor
mov
add
inc
cltd
incb
les
sahf
mov
adc
out
daa
mov
call
xor
push
fwait
loop
shlb
call
imull
mov
cwtl
and
daa
sub
inc
cmpl
push
mov
cmp
mov
jmp
sub
sub
lods
pop
roll
jg
js
ljmp
dec
test
mov
sub
jecxz
xchg
ljmp
incl
scas
mov
jno
not
and
push
in
or
pop
fdivrs
mov
mov
jbe
cmp
das
xor
adc
jbe
and
sbb
sar
jmp
push
xchg
ja
inc
mov
dec
mov
fisttps
fwait
sbb
fbstp
lcall
pop
dec
and
int3
stos
dec
fnstcw
inc
push
xchg
test
mov
ret
inc
jg
xor
mov
sti
pop
imul
call
sar
repnz
xchg
xchg
push
push
xlat
fiadds
pop
and
outsl
cld
outsl
add
call
and
fwait
and
push
cwtl
jae
inc
ljmp
cmp
jmp
ds
inc
mov
fwait
cmp
jp
int3
sub
pop
and
or
into
push
ret
iret
mov
push
sbb
or
jecxz
cmp
add
mov
mov
test
and
insb
add
test
pop
rcll
cs
cmc
repnz
loop
jmp
jg
mov
clc
sbb
mov
insl
xchg
fsubl
insl
sub
aaa
leave
and
cmc
fdivl
in
test
push
xor
icebp
sub
mov
jl
aam
dec
jmp
mov
lods
pushf
imul
mov
ret
fcmovnbe
std
lods
mov
jg
or
les
sbb
es
or
sub
call
fnstsw
pop
mov
std
call
mov
jnp
sti
mov
nop
ja
lahf
or
sub
movsb
popf
lretw
cmp
fdivrs
scas
adc
xchg
cli
out
cli
das
mov
sbb
sahf
inc
and
dec
test
jge
outsb
ljmp
cmc
dec
das
cmpsb
cmp
mov
jne
lock
outsl
jmp
mov
cld
lcall
mov
sar
fsubrl
js
cld
push
divb
aam
jg
adc
ljmp
cld
xchg
adc
stc
sbb
fldl
cltd
jnp
cmp
pop
aas
test
enter
pop
xchg
jo
cmc
call
clc
je
add
mov
pop
jge
shld
outsl
hlt
mov
rorb
xchg
or
mov
les
stos
jne
in
packsswb
jg
fdivrl
adc
cmp
pop
push
jmp
idivb
cli
decl
test
add
adc
inc
cmpsl
ja
jmp
mov
sbb
popa
loope
lcall
cs
inc
lahf
jnp
mov
popf
push
das
pop
sub
xlat
and
pop
insl
aas
xor
mov
dec
js
cld
outsb
icebp
arpl
push
or
call
ljmp
or
adc
xchg
add
loop
mov
mov
sbb
xchg
fxch
cmpsl
add
jp
das
std
fistps
dec
loope
cmpsb
lods
fcompl
je
push
sbb
rolb
nop
push
mov
push
nop
inc
mov
xor
fbld
and
notb
sbb
or
ljmp
fwait
adc
jns
sbb
push
push
stc
addr16
cmpsl
mov
loop
adc
ljmp
cltd
push
daa
mov
xor
gs
and
ljmp
aaa
sahf
or
adc
arpl
inc
push
cmp
fstl
dec
shll
in
push
cmpsl
pop
push
movsl
adcb
xor
cmp
sti
pop
or
and
insb
outsl
rcrb
push
cmpsl
mov
lcall
cmc
cmp
imul
fdivl
adc
aad
sub
fistpll
call
or
dec
lds
subb
outsl
aad
mov
cmc
decl
bound
aaa
lahf
adc
mov
jg
sub
idiv
ljmp
sbb
and
addr16
les
mov
dec
es
sbb
in
mov
lock
jg
incl
sar
lret
mov
pop
xor
xlat
jl
pop
fildll
mov
mov
push
pop
xchg
mov
jg
call
mov
lock
and
or
sbb
adc
pop
rorl
lcall
call
inc
shl
fs
scas
add
sbb
lcall
jnp
sbb
xlat
mov
cmc
adc
add
ret
in
fcmovnb
jbe
enter
mov
jmp
call
mov
xor
push
mov
xchg
lahf
pop
fistpll
in
lods
jl
cmc
incl
pop
pusha
sub
jae
xchg
in
xchg
inc
ss
loope
pop
cld
outsl
lock
fs
mov
shl
imul
ret
imul
and
fsubs
xor
loope
nop
xor
decl
stos
les
sub
lods
jmp
mov
cld
push
je
mov
call
dec
mov
cmp
mov
pop
adc
push
xchg
or
pop
in
or
push
or
mov
mov
iret
inc
mov
jp
mov
and
and
push
jle
push
add
aam
push
mov
scas
repnz
aaa
push
std
repnz
into
mov
loop
popa
add
mov
or
fucomip
outsl
hlt
bound
adc
xchg
and
ljmp
push
sbb
jp
sbb
cmp
lods
out
ss
decl
mov
xchg
cld
and
push
pop
sbb
push
scas
iret
cmpps
decl
dec
jmp
imul
jl
pusha
mov
out
add
incl
or
cld
gs
js
mov
cs
fadd
ljmp
mov
dec
std
xchg
and
aad
cmc
push
test
filds
adc
call
mov
outsl
add
sahf
jmp
and
mov
mov
mov
pop
adc
push
cltd
sbb
inc
push
fisubrs
rorl
fucomi
hlt
dec
inc
int3
in
ljmp
adc
int
popf
xchg
andnps
add
cmp
cmp
cmp
pop
xor
test
jg
dec
int3
add
cld
mov
push
cmc
xchg
lret
xchg
adc
adc
sub
decl
mov
sbb
sahf
and
sbb
mov
jle
icebp
ljmp
aam
mov
cmp
vminpd
jle
mov
ljmp
pop
divl
pop
mov
adc
fucomip
jbe
push
inc
les
jmp
mov
and
rorb
shrb
inc
add
dec
dec
mov
rorb
mov
in
jmp
cmp
fs
add
loopne
xlat
sub
adc
popa
mov
rcl
mov
jmp
xor
xor
mov
or
pop
dec
mov
lcall
inc
jo
test
inc
neg
call
pop
pop
imulb
scas
xchg
bound
incl
call
adc
dec
roll
or
lret
rcll
das
lock
stc
fildll
xchg
sbb
scas
pop
lods
fiadds
gs
insb
cmc
incl
adc
inc
in
mov
gs
sbb
call
pop
fisttps
push
sbb
aas
testl
scas
pcmpeqw
pushl
adc
out
pop
int3
in
js
xchg
dec
test
sbb
mov
mov
je
jmp
in
mov
movsl
fwait
sbb
xchg
jl
or
mov
xchg
fdivrs
scas
daa
or
dec
andl
jl
ljmp
pop
pop
pushf
enter
xor
sti
push
stc
insb
sub
jns
jne
loopne
pop
pop
lods
pop
std
cmp
xchg
call
nop
std
pop
std
cmp
ljmp
dec
mov
mov
push
clc
and
std
es
rclb
incl
cmp
inc
sbb
mov
cmp
das
cmc
call
cmc
jne
push
add
pop
inc
mov
decl
mulb
in
imul
or
shr
aad
rcl
rcr
leave
xchg
hlt
gs
cli
jmp
mov
imul
stos
ds
lock
dec
or
jge
dec
movsl
sahf
scas
or
xchg
shl
jae
incl
or
idivl
outsb
adc
dec
outsl
inc
pop
mov
rol
xlat
call
mov
mov
in
insb
adc
mov
mov
xchg
cmp
mov
or
xchg
test
mov
sub
mov
fildll
lahf
or
lods
and
test
out
cmp
lock
leave
xor
es
and
jl
ljmp
mov
pop
insb
jl
cmp
adc
fistpll
push
scas
pop
and
add
out
cmpsl
mov
cmp
dec
stos
shrb
pushl
stos
jp
xlat
cs
sbb
cmpsl
aas
lock
scas
pushf
sbbl
lcall
cmp
jecxz
enter
imul
inc
arpl
jnp
ja
std
jg
jo
sub
stos
pop
inc
cltd
xchg
jl
mov
test
push
sahf
repz
decl
cmc
test
push
ss
lds
rcrb
rolb
jg
fistpll
lds
scas
jle
idivl
dec
sub
orl
dec
push
mov
and
incl
xlat
pop
dec
xorl
shlb
imul
pop
lahf
mov
incl
mov
push
lods
jns
push
mov
sub
and
mov
add
jo
aam
xchg
or
incl
xor
mov
push
outsl
mov
xchg
mov
lcall
adc
inc
adc
loopne
push
mov
cltd
or
pop
sub
mov
jbe
fsts
sub
xchg
in
mov
into
dec
push
add
pushf
add
cld
xor
ds
imul
popf
inc
xor
mov
sar
sub
filds
jecxz
xchg
mov
xchg
push
and
mov
pushl
popf
test
fidivl
cmp
loop
negb
imul
cli
jg
xor
inc
cmp
jge
out
adc
add
pushl
push
and
outsl
or
lret
fcomi
mov
mov
outsl
cld
push
mov
dec
out
pushf
mov
sub
les
or
stos
sbb
or
dec
adc
cld
xor
repnz
decl
add
int3
mov
inc
movsb
mov
adc
iret
add
pop
movsb
dec
insl
adc
mov
decl
add
and
ljmp
jle
movsb
mov
xchg
shlb
mov
call
rolb
fisubs
or
dec
and
and
fidivrl
lcall
repnz
sbb
sub
jbe
insl
ljmp
rcrb
incl
cld
fwait
sub
cltd
cmp
stos
push
inc
ljmp
add
jg
test
out
cmp
roll
inc
push
sarl
call
mov
pop
pop
aas
push
jnp
push
mov
notl
cmp
push
iret
or
mov
testb
cmp
or
cli
mov
pop
call
icebp
rolb
lret
inc
std
popf
int
xor
cmpsl
mov
repz
pushl
jp
mov
dec
lods
sub
ss
scas
ss
pop
sub
sbb
imulb
pop
cli
das
add
dec
xor
ljmp
ljmp
lods
sub
cli
jg
xor
dec
mov
insb
jle
loop
lcall
sbb
out
ljmp
cmp
cmp
ds
out
pop
dec
enter
decl
cmp
inc
fdivrl
pop
mov
push
cs
loop
scas
call
stc
in
adc
incl
jge
xor
mov
sbb
lret
fs
icebp
popa
mov
cltd
adc
loop
pop
sub
lods
cmp
loop
push
std
inc
add
ljmp
inc
mov
push
scas
mov
add
push
cmpsl
add
cld
fucomi
inc
outsl
dec
ljmp
sahf
ss
push
adc
call
ffreep
cwtl
shll
adcb
dec
or
in
jg
fisttpl
mov
shr
decl
loopne
int
xchg
shrb
pushf
shrb
mov
gs
iret
call
icebp
lea
push
shlb
mov
push
mov
dec
jmp
test
addr16
adc
adc
dec
leave
cmp
outsl
cmc
jmp
cmpsb
push
repz
or
push
push
and
js
pusha
jae
cmpsl
outsl
scas
cmp
outsl
scas
mov
jmp
mov
arpl
clc
frstor
popa
mov
rcl
insb
loope
ret
sbb
pushl
or
xor
ljmp
popa
jmp
fmull
adc
into
mov
cwtl
xchg
add
sbb
lods
movsb
paddsb
and
dec
stos
xlat
pop
jns
sar
jg
aas
mov
lock
imul
xchg
repz
scas
inc
fbld
lock
adc
push
lcall
xchg
cmp
mov
decl
iret
lahf
mov
aas
mov
fs
and
addl
mov
dec
xor
call
in
jo
cwtl
adc
in
testl
adc
insb
add
xchg
cli
push
dec
mov
push
jo
shl
push
cmp
int
test
call
out
shll
out
cld
add
push
ljmp
lock
es
adc
add
call
call
fimuls
sbb
ja
psubw
lcall
or
rcll
mov
in
inc
iret
data16
flds
adc
pop
loopne
repz
call
mov
loope
test
test
aad
stc
add
xchg
cld
ljmp
pop
call
fists
jnp
sbb
pop
pop
mov
sbb
decl
rcr
add
pop
sub
daa
adc
stos
adc
outsl
mov
push
ret
scas
ljmp
adc
sbb
lcall
bound
addr16
cltd
stc
adc
pop
loop
push
sub
push
nop
cmp
pop
clc
and
int3
stos
insb
sti
mov
mov
pop
mov
fucomip
lahf
out
add
arpl
iret
xchg
mov
clc
lret
pop
outsl
add
out
push
je
lock
decl
push
mov
xor
sbb
sub
xchg
aaa
fnstenv
sar
or
pushl
lret
mov
fistps
out
cmc
xor
add
jnp
cmpsl
lcall
cld
cld
or
mov
sbb
xchg
cmp
test
cmpsl
and
mov
test
lea
adc
push
sub
loopne
xchg
in
pop
xchg
adc
call
xchg
aas
ds
nop
sbb
mov
or
xchg
data16
lea
cmp
mov
dec
pop
nop
mov
popf
adcl
xor
mov
loop
jge
mov
roll
in
xchg
loop
mov
mov
inc
imul
ljmp
int3
push
out
xchg
inc
mov
mov
nop
push
push
jb
mov
decl
add
sbb
xchg
xchg
ljmp
aam
sbb
push
out
fbstp
and
mov
rcr
xchg
mov
subb
outsl
arpl
fcmovb
fcmovnb
xor
das
icebp
lcall
pushf
and
xor
jo
xor
push
xchg
xchg
sub
ljmp
outsb
int
and
pop
in
es
and
xor
mov
mov
and
lock
loop
push
sbb
inc
dec
mov
fsts
jno
data16
xchg
outsb
scas
push
es
cmp
decl
adc
int3
out
ljmp
aam
mov
sbbl
dec
jg
mov
call
gs
stos
mov
insl
loope
ja
xor
mov
xchg
sub
cli
jmp
and
sub
aas
mov
or
pop
xor
fwait
iret
out
incl
roll
stc
pop
add
int3
in
cmp
fisubrl
cmp
dec
xchg
sarb
incl
push
pop
mov
cmp
cmp
sbb
ret
icebp
and
jg
pop
in
push
iret
push
pop
sub
mov
aad
inc
ret
mov
add
xchg
inc
incl
xchg
adc
jg
pop
mov
shlb
mov
or
or
xchg
pusha
pop
sbb
lods
addr16
stc
mov
pop
xor
sti
pop
fwait
out
jb
movl
cld
andb
pushl
call
and
aam
test
xchg
out
data16
ljmp
inc
adc
xchg
sbb
das
clc
test
mov
pop
xchg
mov
jg
jmp
sub
cmpsl
mov
inc
sbb
xlat
mov
sbb
jle
jmp
mov
inc
scas
mov
jae
lds
cmc
rolb
sbb
ds
out
leave
dec
cwtl
inc
sarb
xchg
int3
sbb
mov
pop
cli
pushl
mov
int
js
xor
jae
inc
scas
mov
mov
pop
cmpsb
clc
shrl
loop
aad
mov
jne
mov
ret
jnp
inc
lret
rcrb
or
stos
cmp
pop
daa
mov
loopne
ljmp
roll
lcall
jmp
jno
push
ljmp
std
stos
mov
jbe
shlb
sbb
repnz
cli
decl
imulb
movsb
andb
stc
sub
push
ficoml
cmpsb
movsb
jg
jmp
mov
sub
pop
repnz
xchg
pusha
fcomi
jns
lods
jmp
xor
jno
cs
dec
aaa
adc
ss
and
fcos
or
iret
push
dec
xor
add
mov
call
incl
outsb
sbb
cli
cltd
inc
movsb
mov
push
movsl
jge
incl
call
imul
lcall
push
mov
or
inc
cmp
mov
jg
data16
sti
mov
inc
jmp
mov
or
ljmp
std
incl
fnsave
test
fidivrl
dec
repz
aad
mov
pop
fwait
and
dec
shll
mov
pop
sub
push
pop
jecxz
dec
xor
daa
clc
outsl
std
sbb
sub
mov
in
push
jo
ret
call
cwtl
sbb
mov
test
dec
inc
inc
aam
lcall
dec
pop
xor
pop
std
pusha
mov
andl
incl
lahf
mov
aam
loopne
lcall
mov
fmul
add
clc
pushl
lret
data16
pop
push
adc
mov
jne
sub
add
pusha
pop
mov
jmp
push
aad
loopne
gs
cmpsb
push
loopne
dec
mov
pushl
ret
sbb
cs
or
aad
in
test
sbb
cwtl
call
push
add
inc
test
mov
jmp
cli
or
cmp
mov
jne
int3
jne
inc
scas
xor
sub
lods
jno
xlat
ljmp
mov
dec
jno
addr16
ja
dec
sbb
fists
mull
in
imul
outsl
ja
xchg
aaa
push
insb
mov
push
loop
xor
in
pop
inc
xchg
ds
pusha
loop
insl
pop
lcall
in
in
sub
pusha
arpl
sbb
push
inc
loope
ret
pushl
mov
ja
push
inc
fadd
cmp
and
loopne
arpl
jmp
inc
pop
scas
int3
test
clc
xchg
out
dec
jbe
lahf
jo
or
enter
push
jmp
or
fdivs
xchg
jb
addr16
leave
inc
mov
jmp
sub
jne
sub
mov
inc
push
bound
mov
dec
out
add
lock
sti
sbb
mov
mov
add
cli
push
adc
popf
mulb
jnp
mov
out
jmp
cmpsl
lock
pushl
pop
adc
gs
add
mov
ljmp
sbb
sarl
push
daa
shll
sbb
fsubrl
push
mov
fs
gs
cmp
or
and
stos
lret
imulb
pop
repz
pop
pop
cmp
aas
sbb
and
data16
pop
jbe
xchg
fwait
rcll
lcall
cltd
pop
sahf
and
outsl
cmp
pop
in
jg
popf
fmul
mov
mov
cltd
cltd
cmp
mov
clc
mov
add
sahf
scas
xor
mov
lock
loope
pushl
fstpl
imulb
cs
xchg
cwtl
mov
repz
daa
jp
call
incl
dec
lcall
push
cli
mov
mov
decl
pushf
loop
xor
mov
mov
ret
pushf
cmc
push
test
mov
mov
and
xchg
cli
call
in
aas
cmp
xlat
jecxz
les
enter
lods
pop
mov
lcall
aaa
xchg
fdivr
js
push
call
pop
cld
mov
push
repnz
js
cld
sti
pop
pop
dec
pop
and
xor
call
in
push
lods
mov
inc
xchg
push
lock
xchg
cmpl
inc
lods
or
cld
rcl
push
bnd
out
pop
movb
out
sub
xor
mov
push
jb
mov
je
addr16
int3
lahf
adc
call
fdivl
inc
push
mov
jl
sub
leave
pop
jno
outsl
hlt
dec
pop
cld
jae
cmpsl
aaa
fmull
outsl
hlt
jnp
push
cld
std
mov
loope
xor
cmpsb
lods
cmc
lock
aaa
cli
pushl
inc
insl
push
ja
mov
add
out
dec
cmpsb
int3
ja
icebp
xchg
jno
stc
inc
jbe
jmp
fisubl
test
outsl
jmp
std
mov
xchg
idivl
pop
outsl
cmc
add
mov
jb
testb
scas
push
jg
call
not
adc
popf
push
arpl
arpl
pop
dec
mov
aaa
clc
idivl
push
push
arpl
aad
hlt
push
dec
push
dec
cld
mov
out
dec
repz
into
dec
insl
mov
decl
cltd
add
out
push
xor
sbb
icebp
std
mov
sub
dec
jae
sub
jo
mov
xor
or
movsb
loopne
sbb
in
popf
inc
stos
lcall
decl
call
push
nop
sub
pop
dec
add
add
add
mov
outsl
iret
scas
lds
xchg
jp
notb
nop
andl
mov
ljmp
xchg
jge
and
mov
lds
push
cmovns
mov
or
jg
xor
fwait
sub
pushl
mov
sub
xchg
jns
dec
nop
lahf
lahf
mov
push
test
arpl
and
dec
sahf
clc
hlt
or
mov
mov
dec
xchg
mov
jp
jbe
xchg
outsl
or
mov
adcl
sar
fists
or
shrb
cmp
repz
mov
das
std
xchg
add
mov
push
test
rclb
push
xor
pushl
add
andl
add
sub
add
jecxz
jmp
movsl
mov
arpl
inc
xchg
clc
inc
xorb
add
or
std
lea
cld
lock
jmp
mov
push
mov
cli
jmp
gs
out
jne
subb
pop
out
psubusw
rolb
test
pushl
adcb
dec
inc
repnz
subb
enter
mov
movsl
shr
push
imul
pop
mov
add
jae
out
push
filds
lcall
mov
jg
add
cmp
jmp
incl
jg
inc
in
mov
scas
add
push
push
into
xchg
xchg
add
je
lock
repnz
push
fmulp
clc
imull
or
jmp
cmpb
dec
lret
iret
in
adc
jns
in
pop
sbb
fwait
test
sar
lcall
jle
jle
dec
rolb
sub
mov
pop
int3
stc
mov
sbb
or
clc
dec
std
fisttpl
push
and
call
fucompp
adc
outsl
cld
mov
inc
test
imul
mov
fcompl
dec
movsl
jp
fwait
push
lahf
mov
xchg
sbb
aad
sbb
cmp
pop
push
mov
fistl
pop
into
jl
lret
sbb
push
pushl
rol
popa
mov
jno
push
push
push
cli
clc
pop
stos
cmp
or
mov
pop
test
jns
rcll
aaa
pop
cli
mov
push
and
lea
jo
in
push
pushl
mov
outsl
xchg
mov
mov
jmp
fisubs
xor
mov
insb
mov
in
fdivrs
clc
lea
pop
xchg
jge
fwait
int
pop
clc
dec
xor
adc
sbb
xor
jge
insl
lods
aas
roll
ljmp
pop
adc
pop
pushf
shlb
aas
push
rolb
ljmp
arpl
mov
xor
jmp
mov
incl
pop
pop
xor
and
mov
into
movb
sub
imul
dec
cs
push
push
dec
push
stc
shrb
cmp
add
mov
sub
add
adc
sbb
push
and
push
pop
pop
ljmp
lock
lods
stos
xchg
lods
jo
sbb
fcompl
cld
sub
icebp
mov
sbb
enter
sbb
xchg
repnz
add
jg
jg
incl
call
inc
push
xor
repnz
jle
cmc
fistps
push
inc
cmc
sub
pop
insb
xor
sbb
lcall
pop
inc
dec
sub
fdiv
mov
or
decl
jp
shlb
adc
mov
push
mov
fwait
cmp
jmp
jg
lcall
mulb
add
cmpsl
jmp
mov
jo
push
cmp
pop
adc
mov
and
pusha
or
dec
or
jno
mov
das
lock
mov
ja
int
jno
sbb
cmpsl
int3
clc
clc
call
mov
fstl
push
mov
jg
xor
push
mov
adc
std
xchg
std
jg
fistpll
lcall
xchg
decl
adc
pop
aaa
adc
inc
mov
stc
xor
xchg
movsb
xor
ds
jno
push
push
push
jb
icebp
decl
std
mov
dec
fiadds
mov
out
enter
lret
xchg
xchg
dec
enter
ljmp
or
dec
lret
mov
int3
inc
sti
push
dec
inc
dec
jmp
mov
dec
mov
ljmp
xchg
xchg
sub
inc
cli
mov
in
jl
cmpsb
mov
das
hlt
test
test
lret
inc
gs
dec
jecxz
inc
dec
decl
inc
add
mov
imull
mov
int
sub
and
incl
dec
inc
in
push
or
bound
enter
enter
dec
cli
lret
dec
pushl
mov
sbb
jp
out
push
pop
or
sub
mov
test
pop
mov
mov
fs
int3
mov
ljmp
adc
scas
jae
push
mov
out
jecxz
dec
xor
lea
shll
insb
sbb
les
pop
add
push
in
lret
fwait
lret
loop
sbb
lret
addr16
incl
and
push
add
test
xchg
mov
ljmp
pop
test
repz
test
cmp
sub
xor
pop
mov
jmp
pop
mov
push
ds
loope
and
xor
add
jge
in
lret
js
and
imul
push
decl
pushf
dec
pop
in
pop
stos
cs
mov
lcall
sub
cmpsl
adc
sbb
mov
lahf
xor
pop
cmc
aas
dec
lcall
call
lcall
jg
mov
shl
mov
pushl
test
and
xchg
popa
xor
jg
mov
out
cmc
cld
dec
dec
shl
xchg
cmpsl
cwtl
and
ljmp
negl
mov
ss
mov
sbb
mov
xchg
out
xor
xor
pushl
sbb
rcrl
test
xchg
cwtl
call
xchg
pop
mov
pushl
mov
fidivl
mov
repz
ftst
ljmp
hlt
push
enter
andl
mov
adc
cmpsl
das
hlt
call
test
jge
inc
repz
movsb
insl
lea
repz
xorb
sbb
ja
repnz
jno
cmp
xor
mov
jne
loopne
ja
and
icebp
imul
sub
xchg
ljmp
xchg
sub
xlat
or
push
pushl
dec
xchg
push
pop
scas
jecxz,pt
out
sbb
das
push
pop
push
pinsrw
adc
je
loopne
outsl
lret
jmp
test
mov
add
sub
and
jns
push
mov
xlat
call
decl
ret
mov
pushf
mov
xor
jae
mov
rorb
mov
sbb
mov
cld
decl
mov
mov
nop
ljmp
mov
fst
xchg
push
mov
lcall
lock
adcb
mov
mov
notb
decl
cmp
mov
daa
fimull
jge
dec
jl
push
pusha
repz
dec
push
adc
fsub
decl
jno
mov
dec
mov
test
xchg
mov
call
jp
int3
sub
lahf
and
dec
sbb
decl
mov
lods
mov
cwtl
idivb
inc
leave
aaa
addr16
stos
mov
lock
inc
xor
pop
ljmp
filds
scas
out
leave
cmp
pop
sub
jmp
xchg
mov
sub
les
aam
lock
stos
bound
or
stos
mov
mov
jp
cs
stos
push
insl
lods
mov
js
cmc
ljmp
dec
shlb
pop
dec
popf
pop
daa
outsl
std
stc
sub
mov
lahf
push
sarl
mov
push
mov
lods
icebp
movsl
stos
jl
jg
sub
repz
subl
rolb
outsl
cmp
loop
lcall
jecxz
scas
fnstsw
pop
mov
jl
outsb
cmpsb
xchg
inc
jne
xchg
les
fisubrl
fisttpl
dec
mov
call
and
scas
push
pop
test
sbb
push
repnz
mov
shrl
pop
mov
jp
call
sbb
das
pushf
jb
add
jae
int3
dec
cmp
imul
in
xor
stc
push
mov
notl
or
sub
xlat
pushf
cwtl
mov
mov
scas
jg
ss
call
jecxz
out
add
repnz
insl
int
add
call
pop
pop
data16
int
lds
adc
sub
cmp
mov
imul
inc
mov
mov
pop
rclb
sti
sahf
lret
jno
in
inc
call
call
cs
out
mov
xor
xchg
jae
test
call
adcl
test
pop
mov
sbb
or
sbb
jg
js
lret
inc
mov
or
fadd
shll
pop
stos
jmp
es
addr16
jmp
daa
cmc
xor
add
sub
test
dec
dec
dec
je
mov
sub
outsl
mov
xor
ljmp
hlt
insb
pop
push
idivb
sub
fwait
es
mov
cmpl
sbb
jb
incl
cmp
adc
sbb
cmp
pop
inc
imul
ret
jmp
fnstsw
mov
sbb
faddl
enter
pop
mov
pop
jmp
mov
jo
mov
mov
scas
pop
add
pusha
jle
mov
pop
mov
cmc
rcrb
mov
pushf
mov
push
mov
push
and
shr
fcoml
mov
cli
stos
xchg
cmp
cmpl
pop
js
js
outsb
repnz
push
pop
fcoms
mov
pop
mov
insb
push
xchg
pop
dec
lock
sub
lcall
mov
inc
js
cmp
adc
loope
or
jge
aaa
jl
les
pop
pop
scas
jb
data16
pop
std
push
aad
sbb
add
lock
jae
fldt
icebp
incl
into
jne
xchg
xchg
push
xchg
jns
mov
and
call
xlat
aad
icebp
cli
and
adc
cltd
mov
mov
or
inc
sti
mov
std
fnstsw
add
mov
push
orl
arpl
mov
xchg
adc
or
das
call
cmp
cmp
xor
jg
repz
adc
add
xor
imull
xchg
andb
cmc
cmpl
jmp
cld
mov
jae
xor
adc
jbe
jl
rclb
push
movsb
xor
cli
push
insb
rclb
clc
add
xor
push
push
sbb
test
out
mov
pop
dec
call
call
in
sbb
push
clc
loope
addr16
out
sub
mov
lods
lock
inc
fbld
dec
push
adc
sbb
lods
into
call
decl
jb
cmc
mov
adc
sbb
stc
sbb
push
add
stos
mov
ror
int3
movaps
iret
xchg
inc
pusha
aad
lret
or
insl
jmp
out
iret
or
mov
dec
lcall
push
out
iret
mov
sub
sub
ljmp
mov
jae
int
inc
dec
out
repz
cs
xchg
movsb
hlt
stos
fnstsw
in
lock
jg
mov
leave
adc
fs
jp
int
lock
call
out
loope
cmc
leave
orl
int
sub
jle
xor
jg
ljmp
clc
in
fbstp
test
pop
and
out
dec
into
add
adc
fs
in
in
movsb
iret
test
loop
ljmp
jmp
sbb
imul
pop
mov
lea
aas
and
test
sbb
sar
jmp
add
arpl
mov
push
add
push
xor
test
loope
sub
add
jno,pn
jno
pop
and
movsl
ljmp
add
ljmp
inc
xchg
push
mov
jns
mov
setge
and
or
push
mov
in
pusha
xor
sub
movsb
in
in
sbb
xchg
orb
aad
pushl
fs
jnp
cmp
inc
out
mov
or
inc
cmp
mov
mov
lcall
jns
dec
lds
mov
xorl
clc
ret
das
cmpsb
cld
pop
mov
push
outsl
and
add
call
inc
cmpsd
jge
cmpsb
call
mov
jg
adc
out
sbb
xchg
mov
jno
inc
fucomip
adc
inc
push
fldt
mov
hlt
in
fisubrl
inc
daa
mov
push
cmp
aam
scas
jge
hlt
sahf
fucomip
pop
ljmp
std
jmp
icebp
xchg
inc
fisubrl
test
fisttpll
mov
sti
sbb
incl
dec
ds
adc
jl
cmc
jp
or
push
xchg
pop
lret
sub
incl
mov
ds
cmp
jp
cmpsl
aas
outsl
incl
repnz
fiaddl
ljmp
push
or
cmp
rorb
movsl
jl
mov
pop
jbe
shl
xor
cld
ljmp
cmp
fiadds
ret
jg
scas
fiaddl
jns
xor
faddl
or
jg
incl
stos
sar
xor
out
cltd
or
jle
add
outsl
lcall
faddl
rcr
pop
inc
mov
jg
fs
icebp
call
sub
inc
icebp
or
mov
idivb
push
push
mov
out
roll
dec
icebp
jae
pushl
xor
lahf
adc
mov
xor
cwtl
hlt
adc
aam
adc
mov
lock
call
hlt
xor
mov
mov
adc
xchg
lock
sub
pop
divb
out
rcrl
call
inc
sub
loop
push
xor
adc
testb
call
inc
ret
or
mov
jp
adc
jno
xchg
inc
pop
adc
pop
loop
std
decl
cld
lcall
xchg
loopne
lods
jno
nop
je
and
pop
jns
ds
loope
add
inc
pop
clc
jmp
shll
mov
xchg
xchg
out
jbe
push
and
daa
jl
hlt
xchg
imul
not
in
decl
xor
adc
xchg
idivl
push
push
gs
mov
xchg
mov
cmp
jno
jle
in
inc
xchg
sti
fsubrs
jbe
dec
or
repnz
movsl
mov
negb
stos
cmp
inc
mov
inc
sub
cld
xor
xlat
sub
mov
push
decl
cmp
push
cmc
outsb
xchg
xor
or
push
sub
hlt
xchg
dec
xor
push
mov
pop
test
nop
testb
mov
mov
inc
sub
ljmp
hlt
mov
lods
jne
pminub
dec
xchg
pop
xchg
jne,pn
jp
aad
pop
or
fiadds
repz
jg
fildl
test
mov
push
jmp
push
enter
mov
cld
jmp
stos
push
cmp
push
sub
mov
xor
and
or
mov
rorl
cmp
dec
mov
cmp
mov
ljmp
add
dec
mov
xchg
mov
mov
cmp
sub
and
lret
push
jl
ljmp
or
test
jmp
push
mov
mov
adc
fsub
cmc
dec
mov
arpl
or
aam
dec
push
and
adc
adc
ljmp
lds
bound
ljmp
mov
inc
ds
shl
adc
add
fwait
jno
fmull
jbe
pop
cmp
pop
dec
and
jecxz
std
pushl
in
inc
loop
mov
and
xchg
add
sbb
loopne
pop
pop
int
pusha
popf
sub
and
and
and
ficoms
inc
ret
aaa
and
and
test
push
incl
or
add
inc
adc
add
lcall
dec
cmpl
fistpll
shl
jg
mov
inc
ljmp
test
or
loopne
clc
and
jp
mov
or
cmpl
xor
xor
fwait
jb
xchg
call
roll
clc
cmpsl
es
cmp
icebp
incl
pop
sub
xor
mov
xor
stos
jle
dec
std
sbb
cmp
inc
mov
mov
fsubrs
jg
xchg
int3
idivb
lret
decb
dec
fmul
cmpsb
adc
mov
push
jg
arpl
mov
loop
popf
leave
or
mov
push
rcrb
xor
imul
inc
pop
ljmp
lock
stos
sub
in
aam
sbb
in
fs
ljmp
inc
adc
add
neg
popf
in
rcr
sbb
lcall
pop
and
ss
pop
pop
sbb
lret
test
pop
shll
movsl
decb
xchg
aas
jle
je
cwtl
sbb
lcall
movsl
dec
std
popa
mov
addb
nop
push
addr16
mov
pushl
pop
xchg
scas
adc
cmp
js
pmaxub
adc
mov
aam
cltd
mov
sbb
xor
lds
jmp
push
clc
pop
loop
cmovbe
jg
xor
rcrb
leave
sbb
pushl
xchg
into
push
push
xor
iret
mov
jno
cltd
call
mov
testl
pop
popf
lahf
jne
std
mov
popf
loopne
jne
xlat
add
addr16
cwtl
int3
cli
pushl
add
aaa
cld
push
and
dec
jmp
jge
out
sbb
fwait
xchg
push
mov
aam
push
mov
jge
orl
fsubr
jae
leave
mov
and
addb
in
sahf
lahf
inc
pop
xchg
sub
lahf
div
xor
int3
push
lahf
inc
mov
push
pop
cmp
jl
ljmp
mov
cs
repnz
push
mov
xor
dec
mov
jne
orps
insl
cmc
push
or
adc
push
or
or
test
jg
cmpsb
mov
call
push
outsb
jb
insb
xor
adc
adc
clc
push
xchg
ret
mov
mov
ss
xchg
pop
xor
rcrb
push
adc
icebp
fistpll
lds
inc
stos
pop
test
sti
jg
fcmovnu
cmp
std
movsb
pop
in
call
mov
leave
test
out
nop
dec
std
pop
jne
bound
dec
subb
call
dec
add
test
insl
jns
adc
pop
les
decl
or
std
push
int
pop
or
or
jne
in
pop
jae
popl
les
or
xor
in
xchg
sbb
xchg
mov
bound
outsb
lret
leave
cmp
out
inc
lods
repnz
mov
insl
je
int
mull
push
jae
pushl
pop
xor
clc
loopne
fsubrs
lds
flds
ljmp
pop
fstpt
lods
jle
pop
in
jmp
leave
mov
mov
incl
push
test
fnstcw
shr
jmp
int
jle
das
fstl
sub
pop
int3
fldcw
cmp
jns
add
mov
pop
repnz
int
sti
xchg
das
ljmp
js
fists
sub
mov
call
dec
cld
or
pop
mov
pop
cltd
rorb
in
call
mov
sub
adc
sar
shll
push
pop
popf
movsl
xchg
lret
arpl
movsl
ljmp
das
adc
or
divl
incl
pop
sub
lcall
es
hlt
or
adc
mov
cmpsb
push
test
incl
push
mov
sub
daa
repnz
mov
adc
mov
aad
imul
pop
das
adc
aam
fsubl
shr
mov
jg
imul
mov
xor
loope
fmulp
jg
scas
xchg
lret
in
mov
pop
and
fidivrl
loop
ret
fbstp
or
pop
lods
lahf
shlb
adc
inc
dec
jmp
loopne
inc
aam
jb
mov
and
data16
loopne
lcall
adc
fstl
add
add
and
incl
xor
aas
xchg
xchg
pop
daa
sbb
and
fs
in
decl
jmp
mov
rolb
into
lds
mulps
dec
mov
sbb
push
adc
jo
mov
orb
int3
xchg
lods
sub
sbb
lods
mov
xchg
std
mov
mov
pop
cld
dec
pop
int
push
inc
adc
pushl
pop
sbb
test
pop
mov
pop
insb
mov
mov
fstps
and
sbb
mov
dec
mov
lcall
cmp
push
faddl
lods
mov
and
push
pop
mov
add
ljmp
cld
mov
es
nop
dec
out
push
inc
sub
jl
inc
ret
aaa
clc
and
in
xor
call
fwait
xchg
pop
lea
and
inc
xor
mov
push
loop
mov
mov
clc
mov
loopne
popw
mov
adc
stos
insb
test
call
out
fcmovne
adc
sbb
fimull
cmp
xor
icebp
sub
jmp
adc
pop
push
loopne
imul
push
adc
dec
adc
xor
pusha
in
aaa
sub
lds
orl
loope
xor
pop
lods
loopne
ljmp
inc
mov
inc
popf
nop
shll
aaa
pop
hlt
lret
sar
fadds
push
and
insb
int3
insl
gs
ja
movsl
pop
jl
mov
mov
enter
sub
xchg
in
push
mov
test
inc
ljmp
or
call
mov
fs
ljmp
addr16
lods
aaa
adc
in
into
xchg
mov
orl
lods
dec
push
in
xor
test
mov
dec
int3
mov
call
mov
repnz
and
in
inc
jbe
push
dec
ret
rorl
imul
shrl
push
pop
cmp
push
insb
dec
mov
mov
stos
or
mov
push
sub
dec
aas
jo
push
stos
ljmp
ljmp
jbe
lret
scas
cld
cmp
stos
lret
movsl
jg
shr
dec
lret
sbb
push
dec
mov
inc
or
push
lcall
lock
lds
mov
sub
fsubl
insl
gs
das
std
addr16
aad
clc
sub
subb
sub
jae
mov
mov
cmc
pop
adc
xorl
fsubrl
cmp
outsl
mov
fdivr
pushl
mov
mov
out
ret
stos
popa
idiv
cmp
pop
divb
fwait
cmp
xor
jo
das
daa
ret
or
mov
test
decl
push
scas
rcrb
out
add
fsts
sbb
ret
lds
inc
pop
mov
or
adc
les
xchg
pop
test
xchg
mov
mov
scas
mov
mov
adc
jns
push
sub
xchg
sub
imul
lcall
mov
lcall
pusha
sbb
mov
out
pushf
imul
push
inc
adc
xchg
fdivr
out
pusha
adc
mov
mov
adc
outsb
loopne
pop
xor
mov
fdivl
pop
pop
ret
sbb
mov
push
out
lea
pop
loop
xchg
dec
pop
sub
enter
xchg
adc
adc
pop
sar
mov
out
add
mov
into
ficoms
sbb
add
mov
fdivl
popf
mov
jns
cwtl
fidivrl
idiv
fildl
inc
sbb
and
stos
inc
js
fadd
cmpsl
mov
cmp
xchg
incl
dec
fldl
sub
flds
mov
incl
ds
or
dec
cmp
pop
dec
sti
mov
mov
mov
mov
xor
inc
pop
fldcw
faddp
sbb
stos
sub
pop
stos
repz
or
popf
sub
gs
dec
cld
sub
cmpsl
cmp
mov
in
push
clc
pushl
and
lahf
and
rcrl
ja
jg
fucomip
pop
rcr
sbb
push
popf
jge
fstpl
sbb
cmpsl
mov
call
pop
faddl
inc
push
cmpsl
inc
es
cwtl
daa
mov
pop
mov
ljmp
xchg
and
sub
push
inc
shlb
mov
and
push
cmpsl
dec
mov
xchg
mov
cmp
xor
jg
fsts
je
sub
imul
scas
shlb
xor
decl
js
mov
incl
je
pop
loopne
test
lock
stos
xor
pop
push
jne
mov
add
test
icebp
jb
je
lret
jbe
jmp
lock
xor
xchg
mov
cld
test
pushl
add
jne
sub
push
jnp
lret
fdivl
jne
lcall
cli
mov
jnp
ljmp
pop
std
push
jne
xchg
rclb
pop
adc
call
or
mov
mov
pop
dec
cwtl
lock
jle
test
inc
jmp
ss
test
outsl
in
fcmovbe
test
gs
pop
shlb
jbe
dec
test
ja
repz
outsl
hlt
push
mov
ljmp
push
fildll
test
mov
sbb
cwtl
dec
jnp
sub
rcrl
jg
mov
mov
out
pop
cmp
xor
inc
out
mov
mov
subb
mov
call
pop
int
jnp
push
imul
dec
aaa
and
lret
fxch
shr
fadds
mov
fxch
imul
pop
in
push
mov
setge
insb
push
fcom
sub
daa
ret
bound
lds
ljmp
pop
sub
jle
je
cltd
hlt
cmp
xor
lahf
fidivrs
loope
jnp
ljmp
decl
in
mov
or
repnz
push
dec
popa
mov
dec
jmp
mov
fldcw
jne
fidivs
fadds
inc
iret
addb
jmp
std
inc
incl
fs
scas
test
add
shr
or
imul
pop
jmp
adc
jbe
xorb
ret
add
mov
gs
push
push
loope
xchg
rorb
pop
inc
ret
pop
aam
add
cmp
ret
mov
jmp
sub
pop
xchg
decl
cmc
outsb
aaa
mov
iret
popl
rcl
daa
push
push
std
fucomip
and
jne
push
xlat
xchg
sub
popf
xlat
sub
aad
dec
pop
movsb
push
cltd
dec
or
dec
xor
inc
into
sahf
cmpsb
mov
decl
cld
and
mov
das
mov
push
adc
push
and
incl
das
mov
dec
aam
or
sbb
fiadds
movsl
pop
and
or
bound
mov
loop
adc
push
add
into
xchg
fdivrp
dec
ret
cwtl
sub
jae
mov
xor
call
outsl
inc
jnp
cmp
js
or
fldenv
sbb
sub
bound
or
sti
sub
scas
stc
xlat
ljmp
rcrl
mov
pop
fidivs
and
notb
or
mov
ja
lret
cmp
pop
mov
sub
ja
push
mov
fiaddl
jg
pop
mov
test
loop
cli
inc
and
cmpsb
add
fstps
add
in
mov
pop
add
cmp
mov
mov
lret
data16
jnp
fmull
xor
faddp
jo
lock
jg
test
pop
mov
fisubrs
popf
or
ljmp
or
push
cwtl
push
fmulp
ret
jecxz
ljmp
inc
imul
mov
outsl
cmp
pop
or
incl
fsubrp
fadd
and
lcall
js
pop
sbb
pop
dec
jl
lcall
movsl
or
cld
sti
stos
jge
mov
cmp
cli
jge
out
inc
aad
xchg
lock
dec
mov
adc
daa
rcl
test
push
add
mov
push
inc
push
push
ret
popa
sub
aaa
xlat
ja
cmpl
xchg
adcb
imul
leave
adc
add
rorl
dec
iret
lret
call
or
xchg
mov
push
or
pop
cltd
stc
sub
pop
popl
mov
inc
xlat
sub
lods
jno
gs
rorb
aam
pop
sub
cltd
out
pop
jnp
pushl
xor
aad
addl
pop
outsl
jnp
fisttps
pop
xor
loope
mov
mov
jg
fwait
xchg
test
mov
mov
mov
xchg
sub
mov
stos
dec
lcall
sbb
aam
imul
adc
mov
psubusw
xchg
ss
xor
jns
in
inc
lret
mov
insl
jne
aam
mov
adc
mov
jmp
mov
xor
std
hlt
in
push
dec
fldcw
xchg
loopne
stos
hlt
sub
push
insb
dec
lods
pushl
mov
stc
sub
push
fsubrp
push
sahf
movsb
lods
ss
mov
notb
sbb
pop
scas
nop
insb
ret
sub
jae
ljmp
das
hlt
call
stc
mov
push
jmp
cwtl
leave
mov
ljmp
dec
adc
push
pop
sub
imul
inc
fstpt
ljmp
push
arpl
sub
fnsave
pop
inc
shll
lret
scas
xchg
push
gs
incl
dec
pop
negl
xchg
inc
iret
cwtl
adc
imul
lods
adc
mov
mov
dec
sbb
call
iret
mov
shll
fsubrs
std
adc
jg
push
ljmp
call
int3
adc
mov
jl
incl
sbb
imul
ljmp
jle
push
aas
adc
test
in
mov
mov
xchg
enter
mov
inc
in
sub
or
cmp
aaa
in
and
mov
decl
jnp
sbb
popa
lahf
jg
stos
je
push
out
add
test
sub
or
mov
sbb
call
icebp
stc
xor
orb
push
inc
inc
out
and
lret
rcll
outsl
std
call
nop
lahf
push
cmp
cli
lahf
mov
test
lea
mov
aam
loope
loopne
mov
leave
push
stos
loopne
mov
adc
dec
pop
xor
adc
test
stc
lods
push
dec
call
lock
lods
fs
jp
in
dec
leave
cmc
ror
lret
dec
mov
fildll
fnstsw
sub
pop
or
fsubr
outsb
pop
sti
into
mov
sub
ljmp
push
push
cmpsl
xor
repnz
jp
lea
imul
dec
xor
shrb
adc
and
outsl
or
mov
fldenv
mov
pusha
shlb
and
pop
sub
mov
jge
gs
mov
aas
es
cmpsl
push
ljmp
and
and
xor
addr16
mov
inc
push
gs
test
ljmp
scas
or
movsb
lock
sub
pushf
ret
out
and
mov
lock
push
jns
push
pop
mov
pop
dec
mov
jg
sub
scas
push
and
bound
cmp
fdivrp
add
jb
mov
decl
pushf
inc
or
lcall
divb
pop
pop
push
fmuls
sbb
fdivr
je
cmpsl
sub
or
lock
dec
pop
pop
cli
jmp
push
in
mov
call
adc
loopne
cmpsl
mul
test
xor
ljmp
es
jbe
fwait
mov
bound
jg
lcall
std
xchg
inc
and
add
andb
mov
adc
and
xchg
jg
and
and
pop
repz
into
pushl
clc
jmp
mov
mov
in
mov
arpl
sub
and
sbb
jg
lahf
cmpsl
inc
lcall
jo
pop
mov
sbb
xor
xchg
dec
sarb
mov
sbb
lods
pushl
fildll
xchg
add
sbbb
inc
sbb
cs
push
push
mov
icebp
out
sub
clc
dec
or
fsubp
vmaxss
decl
or
mov
mov
pop
xchg
lods
stos
sahf
xchg
or
cmc
dec
cmp
fsub
add
sysret
xlat
out
pop
mov
sbb
cltd
or
call
movsb
js
xor
ds
pop
xor
stos
adc
dec
bnd
push
cmp
dec
ficoms
decl
lret
xor
lcall
mov
xor
sub
fnstsw
cld
shr
xor
je
test
test
adc
mov
outsb
xchg
cli
ret
mov
sub
or
adc
sbb
sarl
lret
mov
inc
inc
bound
arpl
testl
addr16
add
jmp
ljmp
ror
lret
dec
pusha
mov
call
test
ljmp
insl
jecxz
fldl
xlat
lock
icebp
fwait
mov
xchg
int
xor
and
mov
add
call
js
loopne
fidivrs
xchg
les
subb
jle
cmp
fs
xchg
mov
jmp
fs
mov
xchg
rclb
out
mov
scas
cmp
xchg
pop
mov
jge
lods
xorb
or
mov
jge
fisubrl
pop
cli
es
repz
cmpsb
pop
fdivrp
incl
push
mov
sub
and
mov
je
incl
lods
fiadds
mov
data16
mov
adc
pop
pop
add
jb
jge,pt
mov
mov
mov
imul
rclb
lret
jno
lods
popa
sbb
call
sbb
xor
fs
cmp
sub
fwait
jg
add
xor
fs
adc
pop
mov
rcr
cs
mov
sbb
pop
movsl
shrb
fsts
mov
mov
enter
pop
fsub
cmp
pop
dec
idiv
lcall
fwait
jo
or
pop
lods
idiv
cmpsb
xor
cmp
sar
pop
clc
shlb
aas
push
lret
adc
push
cmpl
aas
hlt
push
rcr
incl
jnp
cmpb
jecxz
push
cmp
adc
mov
shlb
mov
jmp
inc
sarl
jecxz
jecxz
push
pop
mov
cmp
or
adc
dec
in
jb
mov
xchg
cmp
cmc
push
addr16
cmp
xchg
decl
aaa
sub
lea
fsubrs
sahf
outsb
sub
mov
cmp
decl
call
popf
cmp
pop
lret
xor
outsb
enter
icebp
and
aad
xchg
decb
mov
stos
mov
inc
xlat
les
subl
jmp
cwtl
mov
jmp
dec
bound
repnz
aad
adc
add
or
fld1
inc
ror
add
std
xchg
lret
insb
arpl
in
test
cld
imul
push
sub
cmc
cmp
jg
in
lock
adc
inc
mov
jmp
or
jecxz
ret
mov
test
lcall
movsb
gs
add
sbb
in
fisttps
cmc
pop
addr16
ficoml
jnp
adc
push
sbb
jae
dec
call
and
push
imul
shll
sbb
je
lcall
jmp
add
cmp
xor
int
xchg
xchg
mov
bound
data16
incb
das
movsb
push
stc
mov
fld
outsl
push
sub
push
mov
pop
loopne
sbb
push
js
pop
push
pop
adc
push
test
int3
test
push
cmp
jmp
les
cmp
xchg
sub
lock
daa
xchg
je
mov
fnstcw
mov
call
jmp
dec
cmpsb
adc
xor
movsl
mov
mov
ss
push
sub
adc
add
imul
adc
add
xchg
xor
das
jo
sahf
shlb
pop
dec
jne
out
cmp
fucomip
push
dec
pop
nop
mov
movsb
nop
fstps
mov
outsl
stos
stos
jbe
cli
aas
sbb
fucomip
push
adc
outsl
fcmovnb
je
mov
jp
mov
adc
inc
scas
mov
cmc
lock
sti
mov
cmp
cmpsb
mov
decl
dec
push
adc
sbb
pop
and
lret
sbb
mov
push
push
je
sub
mov
jb
add
dec
inc
das
jmp
decl
xchg
or
cmp
pop
inc
lret
push
jb
or
dec
outsl
sbb
ljmp
pop
xchg
into
js
enter
mov
sub
cwtl
sub
ja
aaa
aad
in
sahf
jmp
mov
dec
push
jle
dec
sbb
pop
pop
or
adc
push
mov
sbb
mov
add
dec
pop
cmpb
das
fisttpll
mov
lcall
mov
inc
cmp
mov
adc
insb
cli
imul
jmp
fisttpl
pop
add
sbb
leave
push
lcall
pop
les
ret
popf
rcl
sub
xor
mov
sbb
test
lcall
incl
sub
add
cmp
lcall
leave
pop
inc
sbb
cmp
push
call
xchg
arpl
jl
pop
leave
repz
pushl
lret
insb
mov
pop
inc
inc
lahf
inc
mov
sbb
icebp
in
or
xor
mov
stos
call
and
push
sarb
sbb
lcall
rcll
rcrb
cs
push
xor
cwtl
or
rcll
std
lds
test
adc
push
push
jle
orl
xchg
lods
jne
out
xchg
mov
sahf
inc
push
out
aam
clc
call
jle
add
fstl
test
out
movsb
or
and
cltd
xor
jg
xchg
sub
rorb
add
idiv
iret
sbb
decl
jl
je
xchg
sbb
cmp
add
dec
call
xor
lcall
lret
inc
fdivr
loope
push
rolb
lock
fists
ret
cld
sub
add
arpl
sub
fnstsw
mov
add
adc
sbb
mov
dec
cmp
push
mov
jb
stos
cli
mov
std
mov
dec
sub
das
lock
ljmp
out
or
insl
sbb
cmp
jb
fwait
mov
incl
sbb
cmp
or
jl
inc
push
out
mov
scas
mov
xor
and
add
jb
daa
lea
iret
ds
dec
xor
pushf
mov
jg
outsl
cmc
sbb
sahf
sbb
lcall
xchg
incl
inc
mov
jns
push
or
ds
adc
jbe
pushf
sahf
lcall
and
imull
scas
cs
xchg
xor
hlt
inc
fildl
pop
cmpl
xchg
movsb
test
inc
lds
adc
add
rcll
push
push
bound
push
add
push
or
mov
add
xchg
jno
and
jo
hlt
inc
sbb
cmp
mov
loop
stos
cmp
mov
nop
add
ljmp
add
mov
sbb
pop
cli
mov
inc
int3
lods
jb
dec
pop
add
sti
and
rolb
pushl
iret
call
xchg
xchg
std
stc
jp
xor
cld
xchg
and
aad
cli
out
inc
or
xchg
movsl
negb
xchg
test
inc
inc
arpl
hlt
xor
add
lahf
fdiv
or
les
xor
mov
mov
das
lret
ret
pushl
add
mov
andb
outsl
mov
call
call
clc
cwtl
out
push
andb
in
or
aaa
mov
idiv
fcoml
jmp
outsb
lods
stos
fst
insl
pop
adc
push
lods
out
pop
pop
push
loopne
add
ja
ret
lcall
mov
lea
repnz
fdivl
int3
jmp
or
dec
call
loop
jb
mov
mov
adc
iret
jmp
mov
fsubrl
fsubrs
mov
fistpl
int
dec
loop
incl
and
inc
or
and
sti
mov
jo
loopne
lret
mov
inc
mov
cwtl
mov
cli
dec
loop
xchg
ficompl
push
movsl
dec
jecxz
inc
popf
jmp
push
outsl
pusha
mov
pop
adc
push
jmp
push
mov
sbb
iret
fistpll
pop
adc
sub
outsl
sbb
pop
cs
dec
repnz
cwtl
fdivr
lcall
pop
stos
das
add
jmp
mov
lahf
loopne
add
shrl
aaa
sub
dec
add
jmp
jp
faddl
xor
or
rcrb
test
fisttps
in
fs
movsl
mov
or
push
pop
inc
or
adc
popa
sub
push
shrb
std
fs
movb
out
sub
bound
inc
xchg
or
lcall
push
cltd
cmpsl
inc
xchg
add
loope
loop
sub
pop
inc
cmp
es
jne
cmp
pushl
cli
mov
inc
lret
jg
ljmp
cmpsb
xchg
lahf
inc
fcmovu
ljmp
std
incl
shrb
mov
dec
inc
push
mov
cmp
std
and
jmp
popa
xchg
inc
hlt
test
push
ds
iret
rcl
xchg
ljmp
call
push
es
aad
rcll
enter
dec
adc
js
dec
es
push
rcr
and
das
mov
xchg
pop
jge
push
push
imul
jmp
je
movsl
incb
pop
mov
lock
clc
outsl
inc
inc
jp
adc
cli
aam
mov
jle
aas
out
xor
call
das
sub
inc
in
in
or
and
dec
xor
test
call
push
roll
or
out
mov
pop
sbb
test
xchg
jmp
imul
dec
adc
jg
mov
jmp
pop
push
jae
arpl
jns
call
incl
jnp
call
in
sub
pop
pop
std
inc
pop
shrl
pop
or
hlt
hlt
mov
cmp
cmp
jo
sbb
jge
insb
stc
ljmp
ja
mov
push
pop
sahf
divl
popf
push
decl
pop
mov
imul
pop
lea
iret
in
daa
cld
sti
shrb
test
adc
pop
mov
sbb
call
cli
jle
icebp
sbb
jle
fwait
scas
movsb
fisttpll
push
call
clc
xor
adc
jne
sbb
in
je
enter
mull
cli
mov
leave
xchg
fcoms
sarl
test
inc
andl
mov
cmpsb
mov
add
sbb
sbb
call
mov
movsb
jb
jge
jb
shll
inc
repz
adc
and
xlat
sub
pushl
adc
inc
repz
pop
pop
xchg
or
jno
jg
addr16
jns
cmpsb
xchg
jl
outsl
push
mov
xor
inc
sti
in
jp
mov
pushl
xor
inc
adc
add
xor
jecxz
mov
mov
push
arpl
aad
and
add
lock
inc
jae
call
std
mov
xor
rorl
outsb
inc
adc
fisttps
fnsetpm(287
pop
cli
decl
clc
mov
and
js
mov
jnp
lcall
fcompp
decl
dec
mov
mov
cld
xor
mov
adc
mov
mov
shrl
hlt
jae
cmpsl
pop
out
xchg
sub
pop
dec
push
mov
pop
loop
and
push
dec
lods
aas
in
int3
jmp
aad
daa
cmp
jg
jg
jnp
mov
and
adc
inc
mov
xchg
fs
lahf
sub
fs
rol
push
jnp
pop
popaw
pop
or
cmp
jg
inc
pushl
pop
mov
idivb
push
push
mov
cs
push
xchg
or
insl
mov
lods
shll
pop
mov
dec
dec
jo
scas
sub
leave
push
decl
cmp
sti
pushl
dec
add
aam
xor
stos
cmpsl
inc
scas
loopne
jmp
xchg
sbb
arpl
test
in
inc
ret
movsb
stc
arpl
pop
mov
inc
jg
xor
jne
int3
mov
inc
dec
push
vpcmpgtd
gs
sbb
mov
ljmp
repnz
xor
stos
gs
mov
pop
rcr
fwait
inc
dec
insl
lods
push
lret
mov
cwtl
pop
pushf
sbb
lea
leave
mov
sbb
cmc
cmp
dec
cli
fstpt
lcall
xchg
mov
mov
pop
aam
add
mov
cmpsl
jo
cmpb
js
notb
sbb
fimull
sub
xchg
pop
jg
lcall
jns
sbb
outsl
aaa
test
out
out
and
insl
cmp
pop
mov
call
in
sbb
fiaddl
pmullw
out
fistl
int3
in
jo
scas
lods
leave
ja
adc
loope
ret
in
out
inc
in
addr16
inc
fistl
jl
push
test
call
movsb
imul
movsl
fistpl
mov
call
test
cmp
and
jno
lret
xlat
or
lcall
shrb
mov
and
inc
inc
ljmp
pop
repz
aaa
or
pushl
repnz
and
mov
jns
test
adc
dec
dec
je
decl
jge
cmpsl
lods
shld
js
repnz
dec
jg
sub
loopne
fucomip
dec
int3
cld
mov
dec
xor
lcall
in
call
adc
inc
in
dec
mov
pop
int
adc
mov
stc
jmp
repnz
insb
xlat
outsl
pop
fwait
mov
into
stos
insl
shrl
pushf
inc
popa
shl
inc
mov
lcall
add
lea
outsl
insb
into
pop
sub
lock
mov
nop
data16
je
sbb
call
std
sbb
rcl
lock
jns
sbb
dec
pop
dec
pop
rol
xchg
fwait
into
mov
adc
ljmp
pop
cli
aad
mov
cmovge
loope
outsl
popf
xchg
or
loope
lcall
call
or
ss
loopne
xchg
stos
mov
dec
mov
fisubs
add
fmuls
cmpsb
leave
stos
cs
or
push
and
arpl
into
inc
pushl
sbb
cmp
or
outsl
xor
push
call
cmc
out
lods
mov
int3
aaa
dec
mov
and
stos
inc
icebp
incl
sbb
pop
insl
push
push
divb
ss
sub
nop
sub
fs
sbb
movsb
mov
das
mov
sbb
loop
std
gs
js
dec
movsl
pop
lcall
call
xchg
call
test
cmpsl
push
and
lcall
call
iret
adc
mov
xchg
das
std
inc
test
or
push
sub
jmp
fimull
ret
inc
mov
roll
fsubrl
lods
mov
adc
stc
in
pop
cmp
aam
fwait
out
je
rorb
aaa
and
mov
sub
aaa
fists
push
inc
mov
lret
fdivrl
decl
mov
das
xlat
test
inc
hlt
lret
and
and
mov
lahf
ret
push
inc
sti
mulb
jbe
dec
call
sbb
out
lcall
lcall
jp
inc
mov
mov
push
ss
ljmp
and
cli
popf
fmuls
dec
ror
movsl
leave
xor
push
mov
lahf
or
cmc
push
out
cmpsl
enter
jnp
fldenv
cld
rorl
and
bound
dec
nop
dec
jge
adc
cmp
xlat
loope
mov
clc
pop
mov
aad
movsb
dec
push
aad
sub
idivb
flds
ret
roll
fidivs
xchg
mov
mov
decl
and
or
cmpsl
jno
lret
dec
cmp
jb
adc
xchg
jbe
mov
lret
add
and
jg
dec
mov
push
and
adc
mov
arpl
test
jmp
std
xor
add
clc
fcomip
scas
lahf
sahf
mov
rcl
test
stc
xor
add
add
insl
pop
inc
insb
test
clc
inc
jg
adc
and
mov
adc
mov
jecxz
mov
push
mov
add
mov
jg
push
popf
ss
xor
jno
lea
inc
in
xchg
pop
mov
sub
adc
mov
pushf
rcll
ds
xchg
rclb
ficoml
ljmp
loopne
cltd
aaa
test
jg
add
sbb
cmp
sub
mov
ret
jnp
jno
int3
lods
dec
and
js
es
stos
out
sub
aad
lret
loopne
faddl
push
push
add
lcall
int3
icebp
and
dec
scas
and
lcall
fstpl
push
shrl
fcoms
cmpl
xchg
mov
push
lea
ret
cmc
movd
dec
pop
std
jmp
cs
icebp
mul
repnz
dec
mov
xor
jg
lcall
xchg
push
mov
push
fdivs
dec
sarl
jno
fstpt
stc
pop
adc
test
pop
mov
xor
rclb
js
cmp
xor
ljmp
aad
loopne
add
jo
adc
or
outsb
mov
mov
and
dec
int
add
mov
jbe
hlt
call
ficompl
cltd
pushf
dec
fnstcw
cmpsb
or
mov
mov
fnstsw
ret
idivb
test
pop
movsb
js
int3
xor
pop
clc
call
js
loope
add
xchg
mov
sub
ret
icebp
incl
cmp
ss
sbb
lahf
jp
imul
mov
lcall
pop
lret
mov
push
roll
mov
fisubl
lret
gs
incl
lcall
xchg
in
mov
dec
cmp
imul
lds
add
das
std
call
enter
mov
repnz
xlat
cmp
jne
mov
pushl
fsts
cmpsl
ss
push
lods
xor
repz
xchg
es
cld
inc
incl
aaa
mov
fisubrs
daa
mov
add
clc
lcall
aas
sahf
adc
xchg
dec
aaa
mov
push
push
xlat
call
call
dec
pushf
pop
test
idivb
xchg
mov
stos
jbe
or
pushl
mov
push
inc
or
popl
int3
push
icebp
sub
mov
out
jb
test
or
sbb
cmp
int3
xchg
test
in
loop
xchg
push
inc
sbbb
push
jl
push
imul
push
test
insb
mov
jmp
je
fwait
jnp
push
or
orb
or
fs
lock
hlt
jmp
push
mov
out
mov
test
adc
mov
das
insl
push
adc
rclb
fwait
mul
arpl
cmp
test
addl
clc
orb
loopne
jns
sti
call
and
push
aas
pop
mov
mov
cmpl
xor
ss
jmp
mov
lcall
in
negl
mov
leave
xor
mov
fcoml
dec
mov
decl
mov
shr
ret
jno
xor
cmp
xchg
jp
pop
mov
cmp
push
inc
cwtl
out
ljmp
cld
mov
adc
sbb
pop
mov
inc
out
stos
aad
cmovnp
mov
mov
pop
pinsrw
cmp
pop
dec
out
sub
les
dec
mov
jns
scas
lods
xchg
mov
cmp
mov
push
lds
push
mov
dec
std
cmp
sbb
test
incl
nop
lret
ds
gs
and
mov
hlt
inc
in
mov
mov
stos
data16
cli
xchg
stos
mov
int
xorl
out
outsb
subl
pushl
add
roll
lds
call
dec
mov
or
mov
cld
xorl
movsl
pop
sbb
mov
jl
mov
lcall
dec
jmp
aam
mov
fwait
clc
mov
arpl
pop
cwtl
pop
sub
xor
push
mov
sub
in
insb
adc
in
adc
aam
jmp
or
dec
cs
fldl
mull
test
out
nop
sub
lcall
shll
loopne
sbb
out
cs
insl
pop
test
fisubrl
decl
sub
cwtl
mov
cmp
push
inc
ret
mov
enter
fisttpll
out
loopne
xchg
cli
call
add
xor
dec
imul
in
incl
jmp
dec
enter
inc
ficompl
insb
add
repnz
jg
and
loop
test
adc
adc
sub
jb
lcall
fildl
cmp
and
inc
in
rolb
inc
imul
push
ret
std
mov
mov
dec
call
incb
ljmp
adc
lods
popf
icebp
mov
xchg
mov
mov
cli
cltd
subl
adc
xchg
fimuls
pop
imul
inc
xchg
fwait
cmp
mov
arpl
pop
addr16
mov
mov
fsubr
movlps
ljmp
push
mov
mov
xchg
pop
sarb
add
ljmp
nop
test
jno
cmc
sbb
xlat
push
daa
out
rol
push
pushl
jne
cwtl
fcomps
adc
cwtl
minps
adc
mov
fldcw
mov
ljmp
les
mov
lret
mov
mov
adc
jp
inc
data16
pop
xorl
cmp
xor
bound
cmp
mov
sti
pop
decl
fsubrs
jae
test
mov
inc
jbe
pop
data16
call
cmp
mov
sub
cltd
stos
pop
and
add
shll
and
mov
sahf
decl
insl
je
push
das
mov
enter
rolb
or
rorb
cli
mov
ljmp
push
jge
xlat
jb
xchg
lcall
xor
mov
add
mov
movswl
call
pop
paddd
fidivrl
jle
aas
jl
pop
xchg
jle
cld
movsb
jnp
pushf
test
shr
sbb
push
test
dec
or
filds
in
imul
lds
test
mov
add
call
into
mov
shlb
jge
push
adc
mov
jg
bnd
in
dec
jbe
cwtl
adc
scas
out
aam
push
xchg
mov
cmpsl
jmp
decl
pop
mov
aad
push
bound
lcall
jp
or
filds
fs
pusha
fwait
jmp
and
jg
dec
call
in
test
call
and
ret
test
push
fs
mov
jo
loope
call
cwtl
xor
ss
dec
jnp
loop
cmp
adc
rorb
mov
jge
sbb
push
fwait
std
int
das
addr16
incl
jge
in
aad
outsb
das
xchg
xchg
stc
mov
dec
daa
enterw
imul
test
outsb
nop
ja
mov
dec
les
insb
fs
out
data16
mov
mov
into
inc
cli
incl
dec
bound
out
pop
aam
mov
cmp
ljmp
loop
test
xchg
jmp
add
xlat
pop
xchg
xor
push
or
jb
jmp
lret
fsubr
jmp
sub
scas
push
pop
outsb
int3
loop
inc
jno
cmpsb
jns
pop
jmp
pushf
jecxz
add
scas
lds
sub
call
mov
add
pop
push
cli
ljmp
cld
push
shlb
lret
addl
outsb
insb
xchg
hlt
clc
ljmp
xchg
mov
push
mov
in
and
loope
scas
js
cs
jg
xchg
push
push
sub
mov
adc
cmpsl
sub
mov
dec
pop
xlat
incl
push
dec
xchg
les
lret
pop
mov
mov
insb
jmp
add
cmp
jp
stos
jns
cwtl
imul
and
push
and
adc
xchg
fucomip
ljmp
xor
pushf
imul
xor
lods
gs
jmp
mov
push
xchg
jns,pn
xchg
xor
daa
mov
jge
lods
outsb
lea
ja
xlat
mov
cmp
repz
mov
push
jg
pop
mov
and
loopne
sbb
mov
xchg
call
add
test
lds
mov
add
and
clc
insb
popa
xor
repz
add
adc
jmp
mov
push
jbe
pop
lret
and
dec
das
mov
push
loop
push
mov
arpl
std
lea
fwait
xlat
mov
inc
faddl
and
ljmp
sub
xor
test
lea
lods
fldenv
bound
mov
pusha
mov
cmp
mov
incl
pop
add
add
fucomi
sub
and
decl
jle
enter
mov
and
cltd
mulb
sbbl
mov
pusha
rolb
cmp
call
jmp
fcoms
lret
xchg
ret
mov
push
jmp
cltd
inc
push
fnstsw
popa
xlat
sar
push
mov
lahf
xor
das
mov
push
aas
lods
loop
scas
enter
or
stc
push
test
or
ss
sub
mov
jmp
mov
push
cmp
mov
rcll
pushl
cld
in
mov
cs
sbb
adc
fiadds
call
dec
cmp
je
xor
nop
mov
inc
cmp
and
inc
inc
insb
pushf
jg
sub
lcall
ss
mov
add
test
jecxz
leave
fldl
pop
pop
es
fwait
test
gs
incl
popf
pusha
inc
fs
aam
filds
dec
push
mov
decl
mov
sbb
mov
aaa
sbb
push
or
sub
call
data16
add
fs
or
mov
int3
mov
dec
js
mov
outsl
mov
mov
cmp
inc
jge
mov
sarb
pop
push
push
frstor
sbbb
xchg
mov
shlb
xor
into
test
loop
cmc
ret
jo
lahf
andl
pop
mov
out
leave
fadds
insb
out
pop
mov
mov
das
fimull
mov
push
arpl
test
pop
cli
jg
arpl
outsb
ret
mov
sbb
ret
push
into
aad
mov
in
mov
mov
loopne
and
or
pop
cli
xor
push
fidivl
inc
cs
or
lea
clc
decl
std
daa
sahf
stc
push
fs
negl
mov
es
lret
inc
mov
sahf
call
cmp
dec
int
xchg
inc
xchg
xor
jo
decl
out
push
sub
xchg
xchg
ljmp
outsl
icebp
decl
sbb
jle
push
stc
push
ja
or
lahf
cmc
cmp
inc
adc
add
cmp
ja
dec
es
lcall
mov
sti
jg
jg
mov
pop
fmuls
jl
das
mov
std
cltd
mov
movsl
xorb
fcos
ljmp
cmp
test
inc
imul
fnsave
xlat
pop
les
xchg
out
cmc
add
jmp
cmpsl
xchg
dec
loopne
ror
dec
mov
mov
setb
push
ds
mov
add
push
nop
and
sarb
das
adc
call
lret
mov
pop
lret
xorl
sub
popf
lea
push
mov
ret
mov
sub
dec
or
sbb
movsl
or
mov
ds
aas
mov
push
fs
ljmp
ljmp
std
ljmp
rclb
mov
jne
aam
test
cli
jg
outsl
dec
add
call
movsl
mov
push
in
and
pop
mov
inc
stos
inc
inc
adc
lcall
jmp
arpl
stc
sbb
imul
cmovp
add
sub
lcall
imull
je
lea
pop
xor
cli
sub
lahf
rcrl
lcall
sbb
nop
pop
in
faddp
and
mov
scas
cltd
jnp
hlt
mov
incl
jmp
into
test
leave
rcrl
xor
sti
jg
mov
cmc
pop
cmp
adc
fcmovu
rol
pusha
mov
clc
cwtl
nop
cld
cmp
push
or
pop
or
xchg
loope
dec
add
icebp
add
jnp
cli
push
daa
popf
xchg
bndldx
lock
lds
push
outsl
and
decl
inc
mov
insl
outsb
std
pop
lods
cld
mov
subb
int
aam
cmp
cmc
imul
mov
push
fdivl
or
in
mov
orb
call
loopne
or
mov
sarl
pop
ss
das
repz
loop
pop
aaa
pop
ret
jne
fstpt
sub
xchg
call
pop
incb
sbb
fwait
inc
xor
aad
ljmp
or
xor
jmp
add
xchg
xor
sbbb
incl
xor
inc
lock
lods
lahf
popf
pop
sbbl
jns
ret
cli
clc
add
loop
xor
je
ffreep
mov
incl
idivb
pop
lock
arpl
adc
mov
outsl
cmc
add
lock
mov
int
jns
fsubs
in
scas
fs
outsb
dec
xor
scas
xchg
iret
mov
mov
in
inc
into
fcoms
shr
push
push
sub
adc
aad
icebp
sbb
icebp
lret
mov
pushl
leave
in
xor
inc
xchg
test
cmp
popf
data16
sahf
xor
push
mov
lcall
dec
rcrb
xchg
lcall
fnstsw
push
insb
xchg
scas
jbe
inc
sub
decl
lret
in
pop
scas
dec
rcrb
mov
jecxz
scas
xchg
sbb
and
call
cmp
push
jmp
jp
mov
xor
cmc
fstps
ret
xor
inc
mov
jg
jmp
mov
jmp
insb
push
in
mov
pusha
imul
xchg
cmpsb
fwait
jge
xor
add
xchg
cmp
aam
sbb
push
pop
xchg
mov
jno
cmp
ja
cld
ljmp
pop
dec
pop
pop
push
cld
adc
sbb
sbb
inc
xchg
jmp
ljmp
sti
mov
mov
jo
jp
filds
ret
push
mov
xor
cmc
das
lock
mov
jo
push
mov
xor
dec
dec
sbb
popa
mov
ret
mov
and
xchg
xchg
iret
idiv
daa
lcall
add
ljmp
hlt
mov
mov
push
lds
mov
mov
ljmp
outsl
insb
dec
hlt
cld
inc
push
sub
in
xor
divb
jb
fiaddl
hlt
testl
jmp
js
repz
mov
mov
lret
cmc
mov
out
sbb
lahf
push
inc
je
jmp
lea
lods
test
jne
or
aam
shll
cli
mov
mov
jg
pushf
mov
in
mov
cltd
sbb
cmpsl
or
shlb
push
gs
outsl
add
ljmp
mov
jo
fld
xchg
jp
fnstcw
and
pushl
cmp
int3
mov
ljmp
aas
and
mov
les
mov
mov
ljmp
lea
ljmp
pop
cmp
daa
mov
lret
sarb
jmp
mov
dec
cmpsl
leave
outsb
add
hlt
cmc
sti
push
out
fdivrl
lods
sbb
sub
jecxz
outsb
mov
call
jmp
sub
mov
mov
insb
js
fidivs
sbb
cmp
sti
call
popf
xor
sar
mov
mov
jno
pop
cmp
mov
divb
cmp
fmulp
mov
insb
daa
out
std
jns
imul
inc
xor
popa
inc
shll
lahf
out
pushl
cwtl
ljmp
xlat
sahf
incl
lcall
jbe
mov
decl
xorb
jle
stc
pushf
jno
sbb
jmp
dec
jo
arpl
and
aad
and
sub
out
test
call
mov
add
add
in
or
test
xor
test
int
adc
das
adc
idivb
jae
ds
incl
adc
movsl
push
push
fdivr
enter
lds
les
adc
jle
mov
outsb
push
imul
mov
cmpsl
loopne
stc
push
les
mov
jb
inc
call
sub
xchg
or
aad
ret
pop
inc
dec
in
stos
add
jb
jb
adc
sbb
outsl
icebp
jge
push
push
pop
xchg
sub
cmp
gs
jne
mov
xchg
push
cmp
repnz
xchg
out
pop
xchg
pop
iret
sub
xor
adc
xchg
insb
pop
mov
dec
lock
stc
xor
outsl
inc
xchg
jmp
test
pop
cld
and
sahf
out
fwait
popa
enter
push
outsb
sbb
jne
test
aaa
pop
dec
test
xchg
jae
jg
insb
cs
sub
dec
dec
mov
call
adc
or
call
push
ds
add
movsb
ljmp
sub
stos
mov
cli
arpl
filds
pop
and
js
inc
in
decl
pushl
daa
push
arpl
mov
lods
jo
add
mov
int
jle
ljmp
sarl
sub
sarb
nop
sub
aam
cwtl
pop
push
dec
mov
daa
push
xchg
mov
int3
mov
adc
add
push
or
sbb
pop
decl
lock
sahf
in
int
pushw
xor
dec
mov
loop
in
push
popf
push
mov
lods
mov
xchg
cli
call
add
xor
xor
pusha
clc
mov
fisubrs
inc
sbb
inc
cmp
sbb
inc
in
mov
leave
jmp
dec
dec
mov
in
pushl
push
pop
mov
and
sbb
and
test
jmp
test
sub
inc
add
mov
push
and
mov
call
ret
iret
movl
cwtl
mov
mov
mov
pop
inc
pushf
mov
scas
je
xchg
and
push
xor
scas
stos
loop
xor
push
jg
incl
xchg
cmp
vunpcklps
push
rorl
xor
stos
ja
fildll
jae
push
sahf
outsl
cwtl
mov
xchg
push
dec
jg
outsl
insl
jae
roll
fwait
lret
or
out
sub
inc
nop
das
icebp
decl
test
push
mov
loope
in
xor
icebp
aas
in
xchg
jae
decl
outsl
sub
out
xchg
sub
scas
or
test
lcall
rorl
jg
fs
pushf
or
mov
add
test
jge
nop
insl
cmp
repz
aam
jl
movsb
push
ljmp
ficomps
test
xchg
mov
loope
ret
xchg
test
sub
outsl
jge
dec
std
sub
btr
into
iret
mov
lret
or
jnp
stos
sbb
ds
and
or
push
adc
sub
cli
sbb
stc
xchg
shlb
decl
or
mov
imul
pop
outsl
call
lret
scas
jg
icebp
push
mov
int
in
mov
push
lahf
jmp
pop
jmp
lea
xchg
scas
repnz
setae
in
push
outsb
cwtl
stos
nop
push
or
jae
repnz
decl
adc
jmp
push
andb
push
add
lret
push
or
adc
jmp
xchg
shrl
xor
in
push
xor
xchg
sub
adc
sahf
mov
outsl
hlt
out
jo
or
fbstp
inc
pop
cmp
adc
sbb
lcall
jl
lods
mov
cld
jne
push
push
push
call
push
mov
or
lds
es
push
mov
hlt
jg
in
xor
pop
mov
fidivs
jbe
dec
movsb
into
pushf
mov
jmp
adc
outsl
mov
shlb
push
popf
pop
pop
mov
mul
cmp
inc
movsl
test
shlb
mov
cltd
sub
mov
stos
pop
xor
int
int3
popf
sub
ljmp
adc
pop
adc
daa
xor
xchg
pop
mov
xor
sub
ljmp
add
jecxz
xor
popf
ret
es
daa
call
dec
icebp
pop
cmpsb
outsl
add
push
push
sbb
mov
xchg
stos
ljmp
sbb
mov
add
popf
into
clc
sbb
lea
push
add
jns
sti
das
cmc
aaa
clc
dec
mov
popa
call
pop
je
cmp
or
lcall
inc
out
adc
dec
xor
inc
or
out
inc
jne
jg
decl
ljmp
bound
mov
pop
test
mov
cld
incl
and
jp
scas
or
dec
icebp
xchg
nop
int3
jns
jle
mov
cli
incl
jbe
xchg
inc
shrl
mov
push
cli
decl
cmp
push
fs
jno
in
in
and
call
jle
or
fcoml
shlb
enter
xchg
mov
mov
jno
sarl
sbb
push
jns
jmp
rorb
and
mov
or
scas
adc
ljmp
xchg
mov
xchg
imulb
ficoms
fcoms
mov
sbb
loope
repnz
dec
pop
sub
lock
decl
pop
imul
icebp
pop
decl
push
xchg
test
adc
jg
daa
adc
mov
lods
das
fmull
dec
dec
cmp
mov
jge
mov
mov
das
xlat
inc
push
dec
shl
pop
dec
mov
cltd
dec
pop
add
jg
sbbb
repnz
fdivr
jl
std
int
mov
int3
xchg
inc
xchg
movl
pop
adc
mov
jg
xor
adc
mov
scas
sub
pushl
and
jae
stos
shll
shr
jns
divb
test
pop
scas
daa
cmpl
imul
mov
jb
adc
ds
daa
mov
pop
lret
movsl
shlb
jg
decl
fbstp
push
mov
adc
jbe
aad
lods
in
aad
xchg
adc
outsl
std
lcall
add
shll
jbe
cwtl
mov
leave
xchg
lds
cmpsl
mov
das
cli
cmp
loopne
rclb
inc
cmp
pop
push
xor
insl
mov
mov
icebp
std
call
push
nop
test
mov
push
pop
inc
fs
adc
add
cli
or
rcl
pop
sbb
in
lahf
mov
xor
cmc
incl
inc
cs
les
insl
enter
jno
call
sub
gs
ja
sbb
dec
stos
mov
daa
aaa
push
movsl
repnz
dec
fcmovb
and
out
incl
xor
scas
mov
fs
stos
push
jecxz
gs
add
or
outsl
xchg
imulb
stos
outsb
loope
xor
jg
cmp
mov
jnp
filds
add
pop
push
or
xor
mov
jns
pop
push
call
add
adc
and
cmp
mov
xor
ljmp
sbb
push
cltd
fwait
jnp
pop
xchg
insb
sar
subb
pusha
xorb
mov
ljmp
mov
mov
adc
push
inc
mov
idiv
pop
pop
sahf
movsl
mov
fldt
jmp
mov
pop
push
fadd
mov
push
ljmp
pop
add
or
lock
mov
push
cmpsl
adc
cli
jmp
cvtps2pd
jecxz
clc
shl
mov
jg
incl
call
das
mov
fsts
movsb
test
decl
push
lock
xchg
cmpsl
mov
not
iret
rclb
dec
add
and
jmp
sub
movsb
emms
dec
out
aaa
and
jp
sbb
cmp
leave
add
xchg
mov
xor
mov
xor
lret
push
cmp
loop
ret
mov
mov
xor
push
xchg
in
leave
int
cli
repnz
mov
fs
nop
or
je
xor
pushl
and
push
aas
pop
pop
das
cli
in
sbb
push
jbe
fcomps
pushl
addr16
and
pop
mov
outsb
leave
rclb
inc
lcall
mov
aaa
adc
cmp
xorb
fs
mov
jns
sbb
call
lods
push
jp
mov
lret
jmp
mov
icebp
jg
decl
sub
cmp
push
xlat
fistl
xlat
pop
mov
popf
mov
dec
std
ljmp
inc
shlb
adc
pop
xchg
sti
mov
lret
sub
inc
hlt
lret
inc
mov
getsec
aam
push
loopne
add
incl
popf
aaa
sbb
addr16
std
dec
cmp
ret
aad
sub
and
icebp
fwait
stos
cmp
mov
pop
mov
cli
mov
inc
jns
dec
insl
push
jg
decb
fistpll
mov
pop
sub
out
arpl
decl
js
lds
or
sbb
jmp
push
lods
adcb
push
fidivs
sti
das
mov
jg
ret
cmp
daa
mov
fists
lods
sub
mov
jle
test
pop
cmp
std
pop
and
sub
cld
movsl
or
jmp
ljmp
mov
cltd
fstpl
ret
push
shlb
jg
xchg
inc
test
push
mov
fucomi
data16
sub
mov
dec
jle
adcl
cmp
inc
insb
inc
into
sub
push
jg
fildll
jo
jmp
pushf
popa
and
pop
mov
sti
sbb
aad
out
xor
adc
addr16
xchg
dec
insl
das
sbb
lods
sub
outsl
lock
int3
ljmp
jbe
add
mov
call
lcall
mov
fcompl
ss
mov
std
aam
adc
mov
shll
popf
lods
mov
outsl
mov
sub
jg
lcall
fstps
and
enter
jb
ret
pop
push
jne
and
mov
push
incl
mov
aad
adcb
loopne
stc
repnz
cli
jmp
insl
jbe
sub
pop
pop
xor
sub
jmp
jns
push
dec
fnstcw
cs
push
std
jmp
mov
dec
cltd
ss
sub
aaa
clc
ljmp
mov
xor
and
clc
mov
call
jbe
mov
bound
das
xchg
shrl
ds
jg
fistpll
mov
fidivs
fadds
xor
call
push
and
test
stos
lods
movsb
mov
mov
mov
fnstsw
sub
cmp
out
dec
push
jle
jl
mov
nop
xlat
inc
push
stc
inc
cmp
sub
rcll
pop
dec
ja
call
jle
fs
push
ret
mov
push
in
nop
inc
push
je
sbb
dec
push
leave
daa
lcall
mov
lcall
rcl
stos
push
repnz
in
cmp
jg
cmp
inc
rol
stc
mov
sarb
cmp
sti
out
pop
jmp
jg
mov
jle
push
cmpsl
inc
cmp
jmp
loopne
xor
std
pushl
xchg
xor
into
jl
nop
fistpl
stos
ficoms
and
stos
enter
mov
sbb
das
inc
out
add
jmp
mov
data16
out
add
mov
lock
inc
push
xchg
add
sbb
cmpsl
pop
xor
incl
test
pop
adc
xchg
fistl
mov
test
das
hlt
pop
push
shll
xchg
lods
test
push
jmp
adc
jmp
in
adc
into
ljmp
and
sub
adc
popa
sahf
es
cmc
enter
pop
fmull
fs
movsb
cmp
sar
lcall
push
sahf
sub
dec
pop
push
or
aaa
inc
mov
jl
mov
cli
rcll
insl
sbb
add
cmpsb
push
xchg
sbb
data16
lods
jg
sub
mov
cwtl
xor
sub
cwtl
dec
mov
adc
inc
decl
inc
xor
shl
jmp
sarl
ljmp
jmp
out
pushf
push
inc
loopne
leave
sarb
cli
mov
jmp
xchg
sbb
dec
stos
popf
das
insl
hlt
pushf
sbb
std
dec
insl
lods
cmc
in
mov
add
incl
rorl
inc
cmp
push
loope
push
sbb
mov
sub
or
incl
mov
shrb
int3
push
inc
mov
sub
rcrl
in
mov
sbb
loope
int
mov
out
fs
mov
pusha
mov
repz
clc
jle
lahf
pop
nop
dec
or
es
mov
leave
ja
je
lcall
sbb
test
add
negb
xor
inc
rcr
dec
push
imul
pop
lcall
in
inc
xchg
add
test
repz
in
xchg
xor
movsl
inc
imul
mov
das
mov
mov
xchg
sbb
push
jg
adc
cmpsb
push
mov
daa
dec
xor
push
fstpt
pop
mov
pop
outsb
pop
fdiv
jbe
xor
int
xchg
mov
sti
sub
ret
mov
ret
or
and
inc
mov
fiaddl
in
pop
push
push
adc
arpl
test
pop
jnp
in
loope
jbe
cmpsl
subb
push
xchg
lret
xor
xchg
xchg
jne
mov
inc
fucomip
jg
xchg
dec
stc
cmp
sub
ja
jg
mov
mov
sub
xchg
push
xchg
scas
cmpsl
mov
mov
iret
and
movsl
xor
es
ljmp
std
and
sbb
jge
cmp
push
adc
ljmp
lock
pop
dec
adc
icebp
pop
les
dec
cltd
aam
out
mov
or
ljmp
shrl
jne
jbe
jbe
inc
es
lcall
and
push
loopne
hlt
fiaddl
add
ret
push
mov
and
pop
clc
jg
push
mov
add
cmp
jo
pop
incl
xorb
add
popf
and
lret
jg
rolb
sub
mov
add
in
cwtl
mov
and
cmp
cwtl
int
mov
aas
fists
adc
adc
xchg
mov
lcall
fldcw
adc
pop
scas
movl
sbb
cmp
call
ljmp
cmp
scas
xchg
cmp
push
in
xor
out
pop
jmp
incl
das
add
mov
xchg
lods
aas
test
nop
lods
int3
andb
adc
cmp
jno
sub
aas
xchg
addr16
pushl
iret
cwtl
outsb
shr
mov
xchg
adc
mov
push
aam
fidivrl
das
mov
push
xor
in
lock
lods
iret
cmp
movl
dec
outsb
div
sahf
aaa
fdivrp
mov
cltd
js
mov
arpl
fldt
gs
sub
aaa
or
lds
call
incb
cmp
add
or
lcall
push
repnz
repz
sbb
xchg
lds
mov
imul
fucomip
in
xchg
outsb
push
jae
jo
mov
xor
out
fidivrs
cmp
jle
aaa
decb
arpl
adc
icebp
lahf
bound
mov
or
call
dec
inc
in
mov
add
arpl
call
cli
rcll
outsl
les
cmc
cmp
mov
outsb
or
mov
inc
imul
pusha
jecxz
pop
adc
xchg
inc
orb
dec
pop
xchg
pop
sbb
push
jmp
or
sti
lcall
fwait
xlat
arpl
fistl
cmp
mov
pop
xchg
xchg
das
adc
push
ss
pushl
in
push
insb
test
test
or
popf
dec
jo
int3
bound
or
inc
cmp
jmp
xchg
inc
lret
out
icebp
cmp
push
push
lods
mov
mov
out
out
jns
dec
pop
jg
lea
xchg
stc
xchg
dec
out
or
ss
out
lcall
pushl
js
jns
int3
mov
jo
mov
je
outsb
cmp
jmp
cltd
mov
pop
push
aam
dec
js
das
ja
rorl
mov
movsl
scas
out
sbb
mov
xchg
jno
lret
rcr
jp
push
decl
stc
push
xchg
arpl
into
data16
sub
movsl
mov
mov
imul
incb
add
popf
xor
cld
inc
negl
sbb
nop
jle
in
ljmp
xchg
or
daa
jne
xchg
cmp
add
in
mov
push
adc
cli
inc
lods
inc
or
ret
out
stos
mov
push
stos
jl
ljmp
aad
or
pop
xchg
and
pop
cltd
out
out
sbb
mov
sahf
jp
pop
mov
ret
insl
test
mov
pop
pushf
cmp
call
dec
outsl
scas
jbe
ja
or
pop
dec
rcrl
repz
test
mov
cwtl
add
aas
out
cmp
cltd
nop
sub
scas
and
jg
stc
cmp
pushfw
dec
fcmovb
xchg
xchg
and
or
push
repz
je
ds
or
add
xchg
adc
popf
pushf
dec
push
fcomps
popa
lods
cli
test
loopne
cmpsb
scas
lods
dec
jmp
xor
mov
dec
pop
sub
cli
ds
imul
mov
fimull
pop
aaa
popf
mov
lock
xchg
jle
imul
ror
inc
mov
fnsave
dec
or
pop
ljmp
hlt
or
fisttps
jecxz
rcrl
lcall
cwtl
test
dec
lcall
fildll
mov
outsl
addb
test
fldl
test
jb
xchg
mov
mov
mov
mov
es
fcmovne
sub
xchg
add
test
in
ss
jge
sub
xchg
sub
cmpsb
imul
add
in
and
sbb
aad
call
adc
popf
dec
stos
and
popf
movsb
lock
lcallw
jg
lods
test
call
inc
repnz
xchg
call
sub
pushl
lcall
lea
daa
insl
pop
iret
std
cmp
sbbl
or
or
pop
rcll
xor
test
inc
ljmp
les
push
ret
add
add
sahf
mov
jb
inc
xchg
roll
pop
je
loope
dec
inc
pop
dec
pop
pop
loop
mov
jp
xor
clc
cmpsl
mov
jecxz
lcall
xchg
movsb
push
inc
xor
dec
popf
outsl
cmp
ja
jno
xor
insl
fsts
or
test
sub
mov
sub
orl
das
cmc
mov
roll
cwtl
sub
ror
mov
jns
pmaxub
std
mov
popa
loopne
ret
inc
rolb
aam
mov
movsl
pop
sbb
fnstsw
mov
cltd
xor
inc
in
pop
jl
mov
ret
xor
lock
loopne
push
sbb
sub
call
pop
cmp
xchg
and
jae
push
mov
xchg
rolb
mov
dec
icebp
add
fistps
jae
rorl
in
imul
pop
insb
or
push
sti
xor
jmp
data16
pop
aas
or
push
fildll
in
nop
mov
hlt
jecxz
stos
mov
mov
insb
xchg
stc
jl
sub
mov
mov
xchg
pusha
and
or
stos
lea
insw
pop
out
jae
pushl
stos
pop
call
loope
adc
adc
je
add
xchg
dec
adc
add
repnz
xorw
jne
outsl
lock
jg
mov
and
sbb
push
pop
xor
mov
shlb
incl
sub
fldl
js
or
out
xor
mov
decl
insb
dec
xchg
sub
jne
sub
cmpsl
push
cmp
or
inc
lock
call
or
in
icebp
imul
inc
repnz
xchg
lcall
ljmp
cmp
inc
cmp
add
pop
shlb
call
pop
mov
iret
push
imul
pop
mov
std
jle
mov
in
test
lret
inc
push
jno
mov
dec
jge
jne
ljmp
sar
pop
aam
ret
jl
sahf
mov
call
and
lret
pop
push
iret
pop
add
rclb
sbb
adc
jmp
fstl
inc
out
nop
pop
loopne
mov
bound
and
mov
jno
icebp
call
out
push
xchg
pop
and
xchg
in
jmp
xchg
jbe
mov
pop
cmp
lret
push
cmpsb
aaa
mov
inc
push
mov
mov
call
lea
push
pusha
shld
int3
jae
xchg
fsts
jno
ljmp
icebp
decl
roll
xchg
mov
add
test
cmp
fdivr
mov
pushl
xor
cltd
leave
int
dec
lcall
xchg
inc
daa
sub
add
dec
jmp
movsb
mov
in
and
mov
xor
sub
and
lds
dec
push
decl
adc
adc
fs
jne
pop
jnp
cmpsl
orb
test
incl
jp
das
fsts
ljmp
cmp
push
mov
jp
clc
call
ret
pop
cwtl
mov
mov
testb
stos
xchg
incl
decl
push
push
addr16
es
cmc
sbb
jge
fcmovnb
add
lock
cmpl
leave
add
push
mov
aas
daa
fneni(8087
out
stos
and
add
loope
cmpsb
xchg
jg
aad
pop
mov
dec
testb
inc
or
and
fwait
cmpsl
inc
std
mov
pop
lcall
dec
popa
ds
int3
je
ror
repnz
cli
lods
xchg
ljmp
icebp
dec
pop
out
add
andb
mov
stos
sub
insb
push
xlat
pop
jmp
sti
pop
push
and
ss
fcompl
bound
sbb
les
lcall
aas
adc
ds
sub
lods
test
jmp
push
mov
loopne
inc
or
aas
leave
test
outsb
test
mov
int
push
mov
pop
add
xlat
inc
cwtl
lcall
dec
push
sub
jbe
xchg
cltd
and
incl
add
stc
daa
imul
lods
pop
and
out
ss
pushf
jle
js
xor
lcall
into
daa
mov
add
dec
test
sbb
inc
leave
add
adcb
pushl
mov
mov
aad
cmp
mov
lret
sub
dec
xchg
imul
sbb
insl
fidivl
fwait
jp
add
xor
jmp
xor
pop
jmp
aad
enter
mov
lcall
mov
shl
lret
pop
int
inc
push
push
push
or
inc
jns
xchg
inc
jb
jbe
pop
fmuls
call
inc
test
lock
xchg
dec
insl
mov
mov
incl
jg
mov
xor
xchg
icebp
stc
loop
add
les
repnz
negb
incl
movsl
sub
hlt
mov
jl
aas
pop
jmp
fcomi
ljmp
movsb
leave
dec
mov
ss
stos
mov
das
icebp
ljmp
mov
in
fldt
pushf
push
in
cltd
cmp
out
cli
aas
outsl
std
inc
negb
testb
sbb
mov
pop
adc
fbstp
and
jnp
leave
and
mov
mov
decl
and
ret
inc
fisubrs
xchg
inc
test
hlt
sub
inc
fbstp
fdivl
sub
cwtl
adc
jmp
jge
stos
fnstcw
adc
push
xor
adc
xchg
push
mov
call
clc
sti
mov
je
pop
andb
xorl
aad
push
mov
pop
xchg
scas
sbb
push
decl
arpl
inc
sub
push
enter
xchg
pop
in
xor
inc
mov
aam
or
cs
push
sub
cmp
sub
inc
dec
mov
mov
jo
call
lcall
inc
mov
daa
subl
aaa
icebp
ljmp
mov
cmpsl
insb
shll
sar
xchg
mov
push
sbb
shr
cwtl
lods
flds
incl
movsl
test
insl
jb
imul
enter
and
xor
ljmp
lahf
int3
fldenv
xor
sti
mov
scas
mov
inc
pop
lods
and
fildl
stc
rorb
sahf
das
in
lahf
lock
jmp
dec
lahf
dec
and
cmp
lcall
jmp
and
lock
ss
sbb
jmp
das
push
fnstcw
aam
dec
fcomps
repnz
out
in
jge
gs
and
lcall
rolb
push
out
pop
add
jnp,pn
push
push
aad
loopne
inc
mov
jbe
rcll
clc
hlt
js
stos
add
imul
pushl
adc
xchg
xchg
push
cld
fdivl
lods
xchg
mov
cmp
incl
lcall
ds
push
inc
fdivrl
lret
ds
ss
in
mov
incl
repnz
ja
fwait
repz
loope
inc
mov
mov
ds
cld
jmp
add
psubw
and
in
jmp
adc
jg
incl
ja
xor
lret
dec
stos
and
mov
arpl
fistl
and
dec
cld
inc
mov
push
adcb
sahf
mov
int3
ror
arpl
sub
ljmp
sbb
sbb
in
pop
std
cmpsl
dec
test
loope
sub
xor
jmp
dec
cmp
dec
out
scas
sbb
dec
std
movsl
lock
aad
xor
or
repnz
pop
mov
loopne
add
ja
adc
ds
jl
popf
sbb
mov
ret
sub
cmc
call
mov
and
push
cld
rol
mov
cmc
cmpsb
xchg
sahf
ret
jecxz
cmp
lea
imul
stos
pop
adc
jg
cmp
pop
int3
and
aad
enter
mov
bound
and
add
out
lock
xchg
jp
inc
cmp
cmp
pop
push
push
aaa
clc
pushl
push
xchg
pop
push
out
add
mov
mov
mov
push
popf
mov
jno
xchg
xchg
lret
lcall
pop
cmp
sbb
pushf
dec
test
and
pop
lret
cmp
push
arpl
lcall
fisubrs
roll
fidivs
pop
and
movsl
test
push
xchg
popf
adc
fisubl
scas
cmc
jmp
mov
xor
add
cmc
lcall
loope
rcr
ret
jbe
out
fdivrl
xchg
or
aad
lods
inc
xchg
adc
and
cmc
cmc
adc
push
jle
mov
rolb
inc
ss
das
hlt
mov
jge
mov
ja
xor
les
dec
out
dec
add
inc
out
mov
or
push
int3
pop
in
mov
jno
lcall
mov
decl
out
or
outsb
sub
mov
xchg
or
sbb
cmpsl
pop
fsubrl
ljmp
imul
or
mov
or
xlat
sbb
cli
jnp
cmpb
dec
cmp
inc
push
das
jg
hlt
fiadds
xchg
icebp
jmp
push
test
icebp
sub
sbb
outsl
addr16
sub
push
push
xchg
xchg
cli
or
dec
pushf
cwtl
add
call
xchg
jg
jge
dec
fisubl
cld
scas
xchg
lret
mov
cmc
decl
and
dec
fdivr
mov
addr16
es
sub
adc
xchg
mov
fcmovnu
adc
dec
fiaddl
dec
repz
mov
mov
pushf
adc
sub
repz
pushf
jnp
lods
std
movb
sar
mov
mov
fwait
pop
outsl
andl
push
daa
sbb
mov
clc
icebp
loopne
mov
ret
push
push
inc
fldl
fcoms
call
push
add
mov
pcmpgtd
xchg
and
loopne
pushl
in
dec
jle,pt
inc
loope
jmp
out
shlb
mov
push
and
push
sbb
fsubrs
rorl
sbb
out
or
jne
cmpsl
lcall
out
fnstenv
cltd
sar
mov
sub
mov
cwtl
xor
arpl
dec
cwtl
movsb
das
add
outsl
jg
inc
repnz
mov
out
lock
mov
cli
mov
rorl
mov
xchg
or
loopne
std
and
xchg
out
fldcw
test
mov
mov
jecxz
jg
stos
push
lds
ljmp
or
xchg
push
jg
xor
mov
cltd
mov
pop
fisttps
sbb
decl
adc
inc
sti
push
mov
mov
fstpl
pop
mov
lret
aam
out
and
xchg
jmp
pop
sub
sub
pop
imul
call
cwtl
rcrb
repnz
cmp
jle
cmp
cmp
mov
call
in
or
xchg
or
mov
sbb
sub
cmpsb
insl
and
pop
sbb
imul
lcall
das
push
in
popa
and
and
lods
mov
imul
ds
icebp
dec
lahf
in
pusha
xor
cld
clc
scas
imul
call
push
pop
xchg
clc
fidivs
out
stc
mov
js
movsl
mov
scas
sbb
sbb
xor
nop
dec
enter
cld
add
out
mov
mov
pop
mov
incb
inc
dec
pusha
lock
sub
mov
decl
lcall
shll
rcrl
cmp
xchg
imulb
in
inc
pushf
jmp
jno
mov
xor
cmpsb
xchg
jmp
call
lahf
sub
hlt
std
xchg
testb
add
mov
sub
push
xor
jmp
aam
loopne
ficompl
imul
jg
push
mov
fwait
or
xchg
xor
jo
add
add
add
jmp
cmp
pop
dec
pop
arpl
ret
add
aas
pop
mov
mov
test
cmpsl
xchg
mov
xchg
movsl
andb
cmp
mov
lods
push
mov
or
dec
cli
andb
pop
jmp
mov
fdivl
ljmp
icebp
jns
jns
out
scas
cltd
adc
test
push
incl
push
jb
insb
popa
mov
lcall
cwtl
daa
mov
sbb
jb
xchg
and
sub
gs
out
mov
xchg
ficompl
cmpsl
mov
dec
repz
outsl
repz
ljmp
int3
cld
mov
dec
inc
xchg
and
test
imul
push
lods
aas
mov
cmp
push
repnz
outsb
fs
jne
pop
or
and
and
mov
rol
inc
push
xor
xchg
gs
jge
sti
adc
push
xchg
je
std
push
mov
popf
aaa
testl
das
pop
scas
xchg
and
mov
call
call
sbb
into
in
inc
dec
stos
or
testl
mov
out
and
lahf
cmp
addb
sbb
rclb
test
insl
pop
loopne
push
rcrb
dec
mov
insl
loope
xchg
ljmp
cmp
aam
maskmovq
dec
xchg
imul
pusha
stos
inc
sbb
roll
dec
and
jne
jp
push
out
repnz
out
mov
mov
sbb
xchg
mov
rcll
xchg
adc
add
jo
inc
fwait
outsb
lcall
xchg
sub
pushl
inc
push
add
xlat
add
xlat
cmpsl
jmp
fwait
imul
xor
ja
cwtl
call
and
sub
mov
sbb
sub
mov
jg
pop
push
jne
loopne
jg
mov
rcll
or
pop
jg
dec
pop
mov
jg
xchg
cli
sbb
pushf
and
adc
das
stos
fisubl
popa
push
or
mov
enter
and
outsl
lock
jl
sbb
scas
add
jg
decl
mov
lret
ficomps
inc
add
fdiv
aad
gs
sbb
inc
mov
incl
xor
inc
es
icebp
sub
add
mov
pop
xchg
sbb
insb
cld
sbb
sub
into
add
aam
clc
pushl
xchg
aam
mov
outsl
mov
out
das
in
mov
fmul
lcall
popl
scas
sub
mov
jecxz
jb
scas
cmc
movsb
popf
jp
xlat
jns
ljmp
leave
int3
or
cmpl
jae
add
sarb
inc
ss
lcall
fdivrs
xchg
lods
mov
outsl
call
sbb
pop
loop
sub
outsb
sub
int3
cwtl
xchg
dec
pop
adc
cld
xlat
mov
lcall
cmc
jp
push
decl
jbe
sub
push
iret
mov
inc
sbb
inc
mov
rcl
das
xor
push
xor
jmp
ljmp
xchg
scas
pop
add
pop
cmp
pop
test
xlat
popa
pushl
push
lods
mov
jae
das
mov
mov
and
inc
cmp
mov
or
ljmp
sbb
jmp
leave
clc
sbb
xchg
bnd
push
pop
xchg
jne
cmc
mov
dec
cmp
divl
pop
lods
outsl
icebp
jg
ret
dec
cmpsb
jns
xor
or
je
pavgw
inc
or
jae
negb
and
outsl
pop
sbb
mov
sub
dec
loope
lcall
decl
pop
cmp
xchg
insl
loope
loope
xchg
and
pushl
js
sub
movb
roll
movsl
adc
outsl
lock
mov
adc
pushl
push
mov
xchg
pop
jmp
add
pop
lods
xchg
push
sti
rorl
fiadds
cwtl
out
adc
ficomps
call
fwait
inc
jle
loop
mov
clc
cmp
cmp
orb
mov
js
cmp
imul
ret
pop
cmpsb
daa
insl
pop
mov
sti
jo
js
adcl
ljmp
cld
incl
fidivs
in
jmp
dec
xor
aas
std
cwtl
in
cmp
icebp
ljmp
cmp
pop
inc
ljmp
and
cmp
roll
jg
pushl
cmp
inc
jae
nop
addl
addr16
cld
test
incl
inc
cmp
mov
repnz
xchg
xchg
in
call
mov
incl
jbe
jns
sarb
sbb
daa
or
ljmp
inc
jnp
sahf
mov
mov
clc
jle
adc
sti
mov
pop
inc
call
inc
push
mov
call
adc
fsubrs
lea
in
pop
test
lcall
loope
or
rcll
push
jl
sbb
aaa
ds
aam
jo
sub
pop
lock
dec
decl
imul
cltd
pop
icebp
mov
repz
push
ret
mov
idivl
inc
mov
insl
inc
out
inc
pusha
jp
cmpsl
leave
hlt
das
loope
test
push
jb
mov
pop
mov
out
push
ja
dec
fstpl
cld
decl
lods
out
dec
push
xor
testl
sbb
mov
lcall
ss
xor
push
stos
out
push
sbb
lcall
decl
fidivrl
and
jp
div
ret
sarl
pop
imulb
decl
pop
orb
mov
inc
das
sti
inc
mov
mov
ljmp
out
shll
jo
cmp
sub
jo
and
popa
xchg
dec
cs
call
ja
test
jnp
es
rol
gs
inc
push
and
in
icebp
xor
ljmp
mov
and
vpmulhuw
push
mov
ja
es
add
lcall
jg
inc
jmp
push
add
adc
addr16
nop
ror
bound
sbb
decl
fnstsw
dec
add
add
pop
hlt
dec
pop
setnp
loopne
jp
mov
xor
das
cld
sub
pop
inc
mov
mov
add
jmp
inc
cmp
xchg
divb
and
xor
sub
inc
adc
sub
aas
jecxz
incl
inc
cmp
pushl
mov
pop
sub
in
ret
aad
jno
inc
mov
xor
pop
pop
ja
sbb
cmc
adc
arpl
test
jne
call
loop
popa
in
pushl
push
in
xchg
or
push
dec
add
sbb
mov
inc
pop
lcall
xor
sbb
adc
mov
lahf
jp
in
lret
cli
pushl
cli
popa
inc
rolb
push
popa
adcb
push
aaa
sub
sub
pushl
bsr
push
hlt
and
lret
rcll
lcall
push
sub
inc
push
cmp
and
fld
mov
push
jg
stc
jae
pop
mov
mov
mov
rcrl
loope
ds
stos
mov
out
mov
decl
push
jl
aas
cwtl
adc
incl
outsb
inc
test
push
ss
cmp
mov
or
mov
and
popa
out
in
jecxz
inc
xor
add
mov
fwait
mov
jmp
pop
pop
cld
test
movsl
inc
mov
pop
jb
mov
jae
lds
xor
dec
std
decl
jns
in
sbb
test
mov
xor
mov
ljmp
jnp
mov
jns
inc
mov
adc
sti
idiv
mov
or
hlt
push
ret
jne
mov
adc
lock
jg
jmp
push
aaa
mov
inc
xor
jle
jnp
mov
stos
scas
pushf
ss
mov
std
dec
add
ljmp
adc
xlat
out
mov
sti
rcr
fiadds
or
ja
fisttpl
out
fdivr
pushl
decb
dec
jmp
inc
fdivs
xor
mov
and
fstpt
aam
outsl
push
lcall
mov
cmp
sbb
bnd
jp
fcoms
aaa
sbb
sub
or
divl
shll
jbe
or
pushl
lods
loope
push
xor
rcll
or
xchg
jnp
call
fsts
xchg
mov
or
cmp
ror
pop
mov
in
cmp
sub
inc
and
popf
mov
movsl
test
and
insb
frstor
icebp
pop
outsl
push
loop
or
mov
pop
pop
cld
decl
fdiv
inc
sbbb
cmp
jl
adc
lahf
outsl
and
dec
mov
pop
ljmp
out
xchg
fsubl
sub
pop
clc
call
push
out
cld
pusha
cs
jno
mov
scas
dec
cmp
movsb
pop
daa
mov
std
or
movsl
adc
xor
adc
push
lret
inc
jg
decl
test
inc
sub
es
add
adc
mov
cmp
inc
icebp
mov
mull
jmp
fbld
fnstenv
mov
imul
dec
sub
cmpxchg
dec
mov
push
push
sbb
incl
out
or
and
pop
repz
testl
cs
rol
mov
or
push
xor
mov
aaa
mov
push
add
sarb
or
sub
fstps
loope
fiaddl
fs
cld
mov
cmp
cltd
xchg
push
mov
jg
mov
das
cld
ds
and
pushl
mov
mov
es
cmp
sbb
dec
repz
sti
sub
ret
jecxz
add
jg
jmp
aam
stos
outsl
ss
out
pop
xor
lcall
cmp
stos
stc
add
cmc
repnz
ja
pop
cmpsb
ja
lcall
sti
ss
dec
jp
sbb
outsb
les
jl
in
std
ficoml
pop
xchg
mov
dec
lcall
or
pop
adc
dec
mov
subb
shrl
lcall
pop
in
cli
outsb
mov
in
ret
cwtl
test
pop
and
rcrb
mov
mov
inc
sub
xchg
and
pop
testb
mov
lcall
and
xchg
das
lret
push
test
cli
out
mov
pop
pop
call
in
mov
pop
mov
and
mov
cs
fsubrl
xchg
je
xor
jle
push
cmc
ljmp
jo
dec
or
js
inc
xor
and
mov
andl
lock
jl,pt
sub
mov
fmuls
lcall
sbbl
and
jae
inc
mov
jl
jno
pop
hlt
push
xchg
inc
xor
mov
jae
lock
dec
decb
sbb
mov
es
dec
adc
clc
or
adc
or
mov
mov
fidivl
fisttps
clc
lahf
cld
loopne
lods
dec
subl
mov
mov
les
inc
aaa
push
mov
lahf
push
roll
ret
xor
lods
mov
sar
pushl
outsl
xchg
lret
push
iret
repnz
jle
ret
mov
loopne
iret
pop
stos
mov
inc
decl
cmp
adc
leave
es
inc
adcb
fbstp
call
dec
cwtl
mov
mov
loop
xchg
shlb
jle
mov
pop
mov
mov
pop
adc
jle
fbstp
xor
test
jg
dec
xor
push
popf
fs
xlat
push
es
push
shrb
popa
pop
sub
cld
inc
dec
ljmp
call
out
jl
fnstsw
and
roll
pop
pop
or
incl
adc
call
inc
fwait
add
clc
xlat
daa
jne
xchg
jo
push
add
push
pop
or
sub
xchg
aas
xor
lcall
cld
int3
in
xchg
loopne
mov
pop
and
xchg
xor
xchg
aaa
dec
movsb
add
push
ljmp
pop
mov
stos
mov
out
inc
push
test
outsb
cli
and
and
icebp
mov
ja
xchg
stos
daa
cwtl
loop
int3
aam
jp
icebp
dec
jmp
das
mov
or
add
mov
push
push
pushl
cli
decl
or
lret
scas
sahf
sbb
sbb
cli
sub
adc
std
push
cmc
mov
sub
sbb
xor
aad
mov
cli
jmp
push
adc
scas
inc
sbb
ss
aad
insl
and
mov
dec
out
sbb
sahf
data16
push
xorl
and
std
jg
mov
int3
movsb
inc
lds
adcb
dec
je
loopne
push
push
call
jle
xchg
adc
test
enter
in
cs
in
mov
fdivr
or
sub
push
lcall
hlt
inc
sbb
dec
pop
or
divb
addr16
push
dec
stc
pushf
add
push
mov
jno
inc
decb
xchg
into
adc
mov
arpl
hlt
insb
inc
scas
mov
xchg
loop
cwtl
push
out
icebp
jl
clc
pop
jmp
push
jmp
dec
ret
sahf
lahf
mov
std
push
arpl
pushl
cmp
fstpl
int
mov
adc
fistps
and
shrl
fisttpl
jmp
add
lahf
test
fistpl
aas
enter
lcall
or
out
stc
lret
jmp
push
gs
and
xor
adc
and
incl
sub
ja
jo
mov
mov
xchg
pushf
daa
dec
mov
inc
mov
dec
inc
sarb
rcrb
mov
cwtl
mov
mov
gs
es
mov
pop
idiv
insl
pusha
and
outsb
xchg
cmp
scas
pushl
pop
mov
and
or
lods
jle
ret
xchg
movb
jp
lcall
sbb
test
in
int
xchg
lds
or
inc
and
sbb
inc
cmc
cmp
rorb
mov
daa
fcoms
jge
mov
cmp
shrl
sub
scas
cltd
in
outsb
inc
icebp
pop
sbbl
adc
jbe
inc
adcl
adc
push
lock
inc
mov
decl
mov
shll
dec
pop
jno
cs
popf
dec
lahf
and
mov
into
lcall
mov
mov
shll
mov
mov
movsb
decb
call
mov
inc
sbb
lods
clc
jmp
mov
ret
fbstp
adc
sbb
mov
loopne
inc
pop
mov
pushl
lods
popf
scas
pop
inc
sbb
and
mov
or
mov
das
cmc
push
add
mov
push
adc
shlb
cs
ret
fcompl
xor
push
in
push
fwait
jae
cmp
das
lock
xchg
in
mov
mov
out
sbbb
push
imul
dec
test
push
cmp
xchg
daa
loop
inc
sahf
pop
push
or
orb
add
decl
lock
or
popf
mov
andl
ljmp
xchg
pop
mov
pop
push
sub
sbb
push
pop
pop
mov
or
dec
cld
movsl
jle
call
dec
insb
sub
rorb
fnstcw
jno
test
pop
cmpl
pop
dec
negl
jg
adc
jmp
adc
sub
rcrb
fucomip
dec
out
mov
pop
nop
daa
sbb
out
notl
cmp
lods
outsl
sar
decl
sbb
daa
inc
addr16
inc
std
imul
cmc
clc
std
pusha
sbb
lock
cmp
aam
icebp
mov
call
js
in
xchg
fstpl
sti
mov
fildl
dec
dec
add
cwtl
outsl
cmc
pushl
pusha
inc
shll
fstl
jno
and
jo
jmp
call
xchg
push
imul
int3
flds
mov
repnz
hlt
push
mov
incl
pusha
test
fistpl
addr16
xchg
ret
icebp
mov
scas
pushf
mov
lcall
xchg
sti
jae
iret
push
jnp
fisubs
lahf
adc
push
flds
mov
xchg
scas
mov
lcall
or
shrl
add
sub
adc
pop
enter
movsb
and
mov
sbb
mov
jg
cmp
stos
jmp
mov
pop
sbb
mov
incl
mov
fimull
test
xor
push
mov
or
jb
iret
sub
cli
decl
int3
int3
faddp
fs
mov
fsubr
xor
insl
aas
lock
pop
cli
das
lock
adc
cltd
aaa
mov
add
ljmp
cld
jne
adc
out
in
or
ret
vmovddup
test
mov
cmc
adc
push
mov
jbe
mov
int3
or
add
call
clc
js
fstpl
ja
adc
sub
adc
movsb
hlt
mov
mov
mov
iret
aam
jecxz
pop
ja
mov
bound
jg
clc
scas
enter
rcrb
ds
xchg
adc
shll
lcall
std
or
subl
fs
es
or
mov
mov
out
popa
mov
xchg
daa
mov
insl
imul
xchg
dec
adc
cs
lcall
jmp
fwait
out
inc
loope
push
jg
notb
andb
mov
push
jecxz
jecxz
cli
pop
lods
icebp
lea
xchg
fwait
push
mov
mov
adc
movsb
lret
add
scas
push
ret
mov
inc
mov
incl
mov
mov
push
call
dec
cmp
mov
adc
jns
sbb
addr16
jle
pop
ret
popf
fst
dec
jmp
mov
call
dec
data16
xor
sbb
test
imul
pop
aaa
mov
mov
loop
insb
or
sub
cs
fwait
push
lcall
push
mov
sbb
and
imul
jno
clc
pop
into
shl
mov
jmp
cmp
dec
test
cmp
add
sbbb
je
ljmp
test
je
loop
imul
fistps
cpuid
push
fcomps
lcall
xor
mov
lods
out
sub
loope
jnp
dec
fmul
sbb
mov
incl
mov
cmp
lret
cmp
cwtl
dec
cmp
push
outsb
cmp
enter
sub
stc
enter
jecxz
repnz
pop
ljmp
data16
scas
popa
stc
inc
xchg
in
mov
inc
loope
cli
jg
scas
or
xchg
cli
shrb
pop
pop
adc
pushl
std
inc
insl
ljmp
xor
out
adc
lret
aad
sahf
push
ljmp
fildl
fcoml
cmp
sub
fsts
mov
insb
imul
js
imul
out
and
ljmp
insl
inc
enter
call
ljmp
and
mov
call
mov
xor
or
mov
pop
pop
ljmp
call
lcall
repz
fwait
pusha
push
sub
push
jp
sahf
ss
lods
jecxz
dec
cltd
jno
pusha
negb
jl,pt
cmp
xchg
jne
das
outsb
pushl
cltd
push
jg
sbb
jns,pt
sbb
pop
jno
mov
push
jnp
jnp
decl
inc
testl
and
repnz
pop
out
pop
popa
popa
push
loopne
call
fildl
pop
cltd
in
push
and
push
dec
ss
scas
das
adc
outsb
fsubrs
lods
decl
push
mov
faddl
lret
inc
xor
pop
mov
rolb
adc
popa
cmpsb
ficoml
sub
mov
xor
mov
sarl
fists
data16
pop
or
mov
inc
pushl
jbe
ljmp
push
ljmp
adc
negb
cmpsb
sub
rcr
dec
fisubrs
pop
and
mov
orb
lcall
sbb
mov
jge
icebp
sbb
mov
inc
xchg
imul
xor
jmp
incl
jae
push
insb
jno
imul
out
or
lcall
inc
loop
pop
inc
frstor
or
fldl
neg
call
push
lods
push
mov
push
adc
jns
rorl
loope
xlat
mov
lods
mov
ret
lock
divl
pushl
out
aad
aas
sbb
negl
pop
add
ret
stos
in
xor
imull
pop
jne
push
sti
cmp
bound
mov
push
shl
mov
ss
cmpl
xchg
icebp
leave
add
fists
sbb
ljmp
mov
in
add
mov
dec
loopne
jo
mov
mov
sbb
lcall
std
loop
xor
push
push
jecxz
jno
inc
dec
jo
loopne
adc
cmp
int
inc
shll
jl
mov
push
loope
pushf
xchg
xlat
insb
fldt
test
pop
clc
call
mov
jne
ss
adc
fwait
mov
jl
push
inc
xor
ljmp
sub
and
jmp
out
mov
je
jl
aaa
shlb
cmp
aam
test
pusha
xor
lcall
push
cmp
outsl
dec
mov
insb
out
push
imul
ljmp
add
cs
mov
hlt
adc
cltd
sub
int3
mov
icebp
fucomip
ljmp
and
add
shll
clc
ljmp
mov
aas
sub
shrl
lods
es
pop
mov
push
incl
mov
mov
aas
dec
in
lods
lret
sub
and
jge
cmp
push
cmp
ds
jge
pop
cli
popa
inc
ljmp
scas
sub
leave
mov
mov
inc
jmp
loop
sub
orb
mov
stos
and
mov
jo
test
sbbl
orl
pushl
push
mov
jecxz
xor
mov
pop
sub
mov
nop
adc
pop
push
out
daa
mov
popa
xchg
jg
ljmp
les
xchg
add
push
push
test
ljmp
cli
pushf
in
ret
xlat
xor
daa
je
mov
imul
xchg
push
fs
in
decl
loop
aam
mov
pushf
aas
jne
mov
lcall
shlb
js
stc
movsl
enter
dec
pcmpgtb
fsubr
aaa
add
push
ds
shll
mov
push
inc
pop
mov
stos
cmp
call
ja
xchg
mov
xor
paddusb
xor
jmp
xchg
sbb
cli
call
adc
sbb
dec
out
lock
dec
xchg
in
subl
push
jne
loope
mov
push
sbb
lahf
pusha
push
add
xlat
pop
adc
mov
sub
sbb
pop
jno
dec
shll
fcomps
cmp
test
aas
mov
jmp
inc
cltd
repnz
test
iret
mov
pop
xchg
mov
mov
cmpl
adc
cmc
cld
mov
sbb
ret
nop
pop
mov
pop
mov
negl
pusha
bound
repnz
jnp
and
rcll
ljmp
std
inc
cmp
jl
cld
add
loopne
or
mov
cld
insb
add
sbb
clc
in
add
outsb
int3
jmp
xchg
cmc
shl
inc
pushl
fistps
add
mov
push
adc
dec
mov
outsb
loop
dec
pop
outsb
in
incl
je
movsl
ljmp
mov
adc
rclb
mov
stos
pop
xchg
subb
mov
mov
pushl
test
popf
xchg
int3
scas
adc
mov
out
sbb
lods
cmc
push
scas
push
mov
repz
call
add
fs
ljmp
fildll
pushf
test
xor
out
xor
fmulp
int
std
jne
and
nop
adc
add
insl
cmp
incb
aas
mov
push
add
or
in
arpl
fsub
xor
push
pusha
dec
push
pop
mov
ret
lcall
fwait
inc
imul
mov
stos
jle
xchg
or
and
dec
jbe
call
push
in
cmp
loopne
repnz
das
jg
div
sub
lcall
push
push
xchg
xor
mov
jmp
out
clc
jg
and
lret
push
movsb
adc
mov
aad
jl
out
sarb
jb
jns
jmp
add
jmp
cld
ljmp
pop
xchg
fmull
or
or
cmpsb
cli
jbe
hlt
sarb
test
test
jmp
push
testl
iret
scas
test
push
sahf
hlt
push
mov
sar
incl
cmp
adc
mov
mov
int3
add
sub
inc
fisubrs
jmp
lods
rcl
push
push
lods
xchg
mov
jb
rcll
outsl
cmpsb
mov
lea
f2xm1
fwait
lock
call
mov
adc
pop
mul
xchg
mov
out
jg
lcall
es
inc
popf
outsl
and
and
ljmp
jmp
mov
and
dec
loop
cmpsl
loope
shl
jecxz
aaa
lret
jmp
pop
mov
or
sub
jge
dec
incl
sub
mov
sarb
xchg
or
fisubrl
pop
or
mov
frstor
stos
jg
adcb
or
daa
dec
daa
xchg
jmp
mov
loop
inc
lods
test
out
push
aas
fisttpll
fdiv
ljmp
or
dec
imul
cmp
faddl
mov
adc
inc
bound
mov
lods
mov
jmp
jge
inc
lea
push
scas
icebp
fs
push
pushl
inc
into
ds
arpl
je
shlb
sub
sub
jmp
xchg
cmc
sub
push
outsb
aam
mov
mov
pop
xchg
dec
mov
push
pop
cli
jmp
insl
sbb
push
cmp
aaa
cmpsl
scas
addl
repnz
ljmp
mov
dec
mov
push
dec
in
mov
mov
push
rcrl
mov
js
mov
pop
iret
test
cmc
inc
lahf
nop
cld
push
incl
or
lock
or
lcall
rcrb
cltd
lds
lock
jmp
pop
stos
shlb
xor
mov
mov
dec
outsl
jmp
or
in
lret
cld
cmpsb
or
jg
pushl
addb
and
div
or
orl
call
push
xchg
js
shr
jns
sbb
mov
js
imulb
mov
xchg
dec
mov
in
mov
negl
pop
sub
inc
sbb
aam
sbb
jmp
jo
sbb
cmc
jge
clc
inc
xchg
out
jge
and
cmpb
cld
cmpl
sahf
scas
sahf
xor
outsb
inc
jp
loopne
or
dec
jo
sub
xchg
inc
std
decl
and
enter
je
push
push
xchg
push
and
xchg
push
insl
icebp
ret
pop
sbb
xchg
test
ret
sahf
in
jnp
sub
scas
or
adc
mov
sbb
js
push
pushl
call
xchg
rolb
sarl
call
test
decl
lcall
mov
adc
inc
push
fisubrs
aad
out
sbb
cld
out
mov
xchg
les
cmp
scas
sub
mov
cmp
mov
jb
cmp
out
xchg
mov
and
shrl
nop
xor
inc
mov
and
out
push
jo
sub
inc
loop
xor
add
push
dec
les
dec
movsl
mov
or
stc
or
loope
xchg
jmp
jmp
jae
mov
lods
dec
xor
lock
aad
jg
mov
add
adc
adc
jecxz
shl
call
adc
lds
inc
cmp
sbb
jg
mov
sarb
jmp
jns
adcb
call
cld
std
insl
test
scas
addr16
incl
mov
aad
pushl
clc
aaa
lock
and
add
loop
jnp
jp
incl
icebp
out
movsb
daa
outsl
xlat
xor
arpl
jbe
dec
aam
gs
jl
fucomip
pushl
push
aaa
xchg
pop
mov
loopne
stos
stos
jecxz
aam
movsl
jg
lcall
sub
in
push
mov
and
adc
sub
cli
mov
cmp
xor
add
push
inc
jg
test
inc
jno
mov
dec
lock
pushl
or
notl
in
lret
xor
or
lcall
pusha
add
outsl
std
jo
je
subl
adc
std
pop
mov
inc
push
sub
aaa
movsb
mov
insb
inc
pop
mov
lock
jmp
sub
mov
div
inc
inc
sbb
movsl
jae
jg
call
lock
mov
xor
lret
fs
fs
inc
jmp
pushf
mov
mov
call
sub
movsl
mov
je
cmp
sub
fwait
in
push
and
xor
push
lds
or
arpl
push
cmp
mov
xchg
pusha
inc
lret
add
cmp
xchg
call
sbb
or
adc
adc
mov
rcrb
in
shll
data16
test
sub
push
push
pushl
out
int
push
ja
aad
test
mov
in
sub
fsubrp
loopne
das
add
dec
std
call
sub
add
repnz
lock
pop
out
sub
std
shrl
jg
loope
clc
jmp
frstor
sub
sub
pop
mov
add
push
imul
mov
decl
fstpt
lods
rcr
ja
inc
xchg
lret
xor
and
daa
mov
xchg
sub
dec
cmpsb
out
ss
cmpsb
cs
xchg
jbe
stc
mov
mov
xor
jg
mov
aas
shrb
sti
sub
clc
xchg
ds
ret
hlt
ficoms
stc
cmp
inc
inc
popf
sub
cli
loop
lods
xor
or
and
loope
add
adc
add
orb
cld
xchg
clc
jg
xor
sbb
sahf
inc
mov
mov
push
push
add
push
and
into
xchg
call
push
arpl
inc
sbb
adc
mov
cmp
jo
mov
insl
call
incl
loopne
adc
adc
dec
test
cmpsb
jle
cmp
sar
repz
out
push
jne
add
lea
and
ljmp
sbb
or
ss
jg
jb
scas
or
test
fistl
sbb
xor
xchg
or
in
lcall
bound
bound
outsl
fisubrs
loopne
imul
add
and
pushl
and
dec
in
cmc
mov
add
or
out
mov
inc
xchg
pop
cld
pop
xchg
fs
dec
dec
shr
sub
jg
mov
mov
cmp
push
mov
ss
mov
pop
jmp
push
jg
and
or
ljmp
adc
syscall
mov
inc
lcall
jg
or
push
and
lods
sub
popf
cmpsl
push
xchg
clc
lods
outsb
cmc
fdivl
cmp
mov
repz
aaa
mov
pushl
cmp
out
ret
in
xorb
rcr
sub
jg
jns
xor
xchg
sbb
xor
inc
push
pop
inc
outsl
cld
das
fwait
inc
jg
mov
bswap
shrl
jmp
movsl
mov
sbb
xor
and
sarb
sbb
jl
rclb
lods
mov
dec
call
xor
cmpsl
imul
inc
fidivl
sbb
mov
mov
pop
clc
pop
test
jg
xchg
cmp
mov
adc
mov
fiaddl
mov
xor
pop
add
mov
jno
sub
cmp
jg
in
cmpsl
fdivs
jmp
sbb
lret
jno
pop
es
es
inc
cmpsb
jl
cli
lods
aaa
rcrl
jb,pt
icebp
push
mov
sbb
stos
mov
jno
xchg
movsl
sarb
push
xchg
cmp
cmp
ljmp
cmc
push
pop
ljmp
adcl
jae
fwait
xorb
ret
jl
add
cli
mov
jp
divl
pop
xlat
mov
out
icebp
pushl
pop
jns
mov
xchg
movsb
ja
mov
out
jo
mov
push
mov
rcr
incl
sbb
mov
push
mov
mov
pop
add
mov
inc
and
dec
xor
sub
in
add
sub
fcomps
jg
cli
xchg
dec
jno
dec
cltd
or
inc
shr
jl
incl
lods
rorb
sub
push
arpl
dec
xchg
mov
mov
lea
stos
mov
adc
icebp
cmp
jg
push
pop
cmp
sub
jmp
mov
fdivr
fldcw
sub
push
lea
add
incl
into
xchg
or
arpl
cmc
push
xchg
and
testl
xor
sbb
mov
jecxz
add
mov
xchg
es
hlt
inc
jg
fidivrl
insl
and
fwait
lods
adc
les
mov
pop
ljmp
test
push
add
aas
lahf
jo
add
push
push
mov
mov
dec
xorl
ljmp
out
daa
pop
adc
pop
mov
mov
pop
push
fildll
loop
fimull
test
adc
mov
jb
fdivrl
cmc
adc
hlt
decl
popa
xor
cmpsb
or
fadd
xchg
mov
jp
push
fstps
int
js
push
and
push
or
xchg
push
js
mov
scas
cltd
xchg
pop
enter
push
xchg
mov
and
cltd
fs
imul
mov
hlt
push
mov
cmp
lods
mov
push
enter
stos
push
mov
mov
jmp
xlat
pusha
xorb
callw
push
push
mov
js
imulb
ret
cmp
jg
ljmp
imul
cmp
not
jns
stc
jp
pop
hlt
fs
fimuls
and
popa
sub
jb
inc
cmp
jmp
cmc
loopne
daa
ljmp
enter
cmc
push
push
mov
adc
and
stos
jo
popa
dec
add
fildll
sbb
stc
push
mov
mov
xor
cmp
dec
mov
pop
jns
mov
pop
rcr
out
inc
sti
sub
jbe
mov
jns
jae
jl
popf
adc
in
xchg
cs
incl
adc
mov
out
fildl
enter
ljmp
jmp
stos
cwtl
repz
sbb
cmp
iret
add
sbb
clc
decl
dec
bound
adc
dec
pushw
notl
xchg
pop
clc
lcall
std
jb
out
push
push
adc
sub
mov
jecxz
test
mov
xor
sub
dec
aaa
jp
jmp
inc
std
mov
popa
add
arpl
daa
sbb
cmp
jbe
outsb
lret
repz
dec
push
sbb
inc
test
pop
loop
nop
xor
ss
addr16
sahf
adc
mov
xor
mov
std
sub
outsl
loope
pop
in
add
jmp
mov
mov
mov
dec
movsl
es
jnp
mov
lods
push
mov
incl
enter
cld
push
dec
fucom
pop
and
cmp
test
and
cmp
jg
aaa
push
fsubs
xorb
or
fcomi
decl
mov
mov
push
mov
repnz
test
xchg
imul
das
fbstp
mov
out
mov
pop
jno
aas
daa
shlb
outsb
test
ljmp
inc
lods
test
mov
ss
pop
mov
aam
pop
popf
mov
insl
mov
jmp
xchg
mov
cld
ds
das
lods
pop
xor
cltd
push
sahf
add
ljmp
clc
jbe
jl
push
and
call
cmp
ret
hlt
repz
mov
push
insb
pop
cmc
test
popf
rcrb
lcall
scas
mov
and
cltd
cs
fiaddl
xchg
and
int3
inc
push
and
pop
xor
cld
call
xchg
add
stos
inc
push
int3
dec
pop
cli
jl
mov
inc
std
cmc
cltd
stc
inc
dec
addb
jmp
xor
dec
mov
addr16
enter
insl
rcl
and
popf
mov
les
jmp
xchg
int
icebp
and
imul
lcall
call
movsl
enter
inc
ret
mov
out
inc
sbb
sbb
and
xchg
push
enter
pop
mov
sbbl
lcall
lahf
out
fndisi(8087
mov
call
js
cmpsl
sub
lret
shl
mov
add
pushf
jg
jg
fnstenv
cmc
mov
lods
divl
pop
and
jno
jmp
xchg
push
sar
call
aaa
sub
and
mov
mov
pop
pop
mov
xor
jecxz
imul
fsubrp
mov
loop
cmp
inc
jge
or
pop
outsl
pop
sti
mov
fildll
test
clc
clc
outsl
hlt
mov
or
xor
sub
in
fbld
or
push
movsl
or
mov
ss
push
mov
inc
mov
mov
xorl
lret
inc
cld
bound
and
dec
mov
jo
je
aas
mov
xchg
nop
das
inc
mov
das
incl
sub
push
push
mov
push
dec
int
pop
adc
dec
repz
mov
lea
out
push
roll
adc
test
mov
or
jge
jmp
and
mov
push
scas
js
fidivs
jl
jg
mov
mov
mov
ret
mov
mov
lcall
pop
push
jecxz
std
adc
adc
shrl
push
mov
pop
pop
pop
roll
ret
insb
stc
add
inc
inc
aas
ret
fs
sub
cmp
ror
jmp
sbb
rcr
lret
roll
call
decl
xchg
cltd
cmpsl
rcrl
out
test
inc
or
shll
cmp
ljmp
mov
stc
adc
sub
push
out
inc
jo
push
scas
cli
push
addr16
mov
jp
lahf
negl
dec
sti
xorl
dec
fnstcw
test
jle
call
and
popa
add
xlat
aas
ljmp
mov
and
int3
orl
ret
cltd
outsl
mov
push
insb
int
mov
and
pushl
insl
les
mov
mov
call
ret
mov
adc
repz
jmp
xchg
dec
ljmp
lock
jbe
cmp
shlb
jbe
add
pusha
dec
pop
pop
mov
and
pushl
mov
mov
sub
xchg
repnz
mov
push
fdivrs
sub
mov
jb
inc
call
insl
and
js
mulb
lock
lcall
sti
sub
cs
shr
mov
aad
or
pusha
in
cmp
aas
in
lods
mov
repz
loopne
cpuid
cmc
call
xor
push
mov
scas
push
arpl
mov
fdivr
incl
leave
or
and
lret
push
loop
lret
lret
jl
pop
popf
aaa
addr16
ss
hlt
ljmp
andl
sub
lret
xchg
popf
cmp
adc
js
shlb
mov
jp
mov
aam
mov
in
das
xchg
inc
or
and
outsb
inc
cli
lods
and
ja
rolb
call
mov
xchg
jl
test
mov
cli
sahf
cs
incl
popa
sub
xchg
outsl
js
cmpsl
xchg
mov
jbe
lret
and
sbb
or
call
sbb
outsl
pushf
pop
clc
mov
pop
and
in
inc
pop
dec
movsl
mov
cmpsl
fsubrs
mov
inc
pop
in
adc
push
ss
mov
and
pushf
das
cmpsb
std
push
mov
adcb
ret
pop
loope
adc
icebp
xor
xchg
or
repnz
lret
mov
popf
fbld
mov
jecxz
xor
jg
sbb
mov
lds
mov
add
call
lea
int3
leave
or
sahf
xor
sbb
pop
mov
jp
loopne
call
test
inc
xor
lcall
ljmp
imulb
pop
repz
or
mov
lahf
cs
ss
pushl
xchg
and
cmc
cmc
xchg
ss
fwait
mov
sbb
mov
into
add
pop
popf
and
sub
call
test
rorl
jge
ss
jb
cwtl
call
rcrl
daa
fistpl
push
mov
jp
lods
cs
dec
add
ljmp
icebp
dec
dec
loopne
add
mov
lret
xchg
xchg
adc
cmc
sbbb
mov
in
fwait
ss
lcall
leave
mov
rcr
add
push
jmp
cld
fistps
nop
sti
daa
orb
jne
cmc
and
jmp
mov
or
lods
je
dec
push
aaa
mov
cmp
jge
sbb
addr16
mov
mov
sub
and
cmpsl
inc
mov
dec
test
push
cli
aad
or
ret
loope
fstpt
lret
fimuls
das
icebp
ljmp
pusha
hlt
call
cld
mov
aas
xchg
sti
pop
call
test
xor
lahf
lea
pop
pop
or
mov
pushl
ret
adc
jns
sbb
lcall
insl
cmpsl
sbb
mov
add
addr16
daa
mov
shll
lcall
hlt
jb
sbb
sbb
and
mov
cmpsl
cmc
push
out
icebp
pop
xchg
push
rcrl
data16
dec
cmp
pop
stos
in
jle
movsb
mov
insb
jo
sbbb
cmp
call
dec
mov
cmc
or
stos
jno
mov
adc
lods
dec
daa
jl
call
inc
jne
loope
sbb
sbbb
std
aad
adc
int
std
jmp
xchg
dec
mov
push
jb
and
insb
adc
daa
xchg
cld
pusha
daa
cmc
xchg
negl
pop
loop
fsts
insb
es
add
xor
mov
sbb
cld
mov
cmp
jg
ss
or
xor
cmp
jg
dec
ret
xchg
push
movsl
mov
cltd
dec
ljmp
mov
jbe
and
incl
or
daa
pusha
sbb
mov
sub
lcall
mov
jmp
fwait
xchg
add
cmp
dec
and
in
roll
mov
aad
test
cmc
cld
jp
add
in
dec
es
mov
add
jg
out
add
xchg
movsb
sub
daa
outsl
inc
int3
ljmp
lock
push
punpckhwd
addr16
jnp
and
inc
in
insb
or
clc
outsl
pop
ljmp
lret
mov
call
and
lret
arpl
shrb
les
mov
lcall
in
xor
gs
mov
sub
lahf
cmp
fdivp
inc
xor
aad
mov
mov
pop
stos
cmp
sbb
fwait
jmp
xchg
fcmovne
sahf
dec
jno
fldcw
loopne
add
lods
call
sbb
xchg
scas
rcl
aaa
enter
test
adc
rcl
jecxz
mov
fisttpll
insb
imul
adc
and
cltd
mov
clc
jg
ljmp
js
push
push
cmp
mov
lds
jne
lods
sbb
movsl
push
mov
dec
mov
push
or
inc
js
iret
out
js
mov
or
xor
addb
jmp
mov
rcrb
enter
push
pop
jp
decl
lock
lret
pushf
jecxz
cmp
loope
jmp
jae
iret
jae
aad
ret
sbb
orb
mov
mov
sbb
mov
cs
pushf
push
inc
cmp
jle
lods
xchg
mov
test
mov
dec
mov
mov
je
sbb
mov
bound
pusha
cwtl
adcl
jge
pop
inc
movsl
inc
jg
ljmp
mov
imul
cld
pop
xchg
mov
lret
dec
std
call
ljmp
loope
gs
popa
pushf
mov
push
mov
lods
lret
inc
dec
cld
imul
mov
lods
incl
cmpl
fs
or
int3
sub
mull
jae
mov
idiv
push
dec
sti
lods
cmp
std
lock
in
dec
xchg
jp
mov
and
incb
sar
decl
fxch
or
pop
cmc
loop
adc
sbb
pop
adc
inc
xor
scas
fucomip
ljmp
test
popa
jae
adc
aaa
ret
rorb
cmp
jge
jg
pushl
dec
push
jp
xchg
test
cs
repnz
sub
jae
dec
push
adc
cwtl
popf
inc
mov
enter
ffree
push
scas
test
rorl
cld
mov
divps
in
and
daa
ficompl
mov
jbe
pop
push
sar
stos
ljmp
cwtl
daa
loopne
mov
cmp
xor
mov
mov
call
call
xchg
je
cltd
das
push
outsb
in
add
sub
jnp
xchg
jns
add
push
cltd
test
in
sar
mov
nop
insl
lock
mov
ljmp
int3
loop
fidivl
ss
adc
movsl
shrl
mov
pop
sub
lcall
std
nop
scas
pop
inc
pushf
xor
ljmp
xor
jnp
dec
std
pushl
mov
mov
sbb
jne
lods
adc
pop
test
std
fnstenv
push
or
nop
orl
rcrb
xchg
sarb
decl
lcall
or
sbb
pushl
call
pusha
push
cmpsb
mov
in
inc
push
push
repnz
incl
pop
jecxz
pop
jae
cmp
jecxz
jo
mov
sahf
outsl
scas
xor
into
mov
and
aad
outsb
dec
clc
sti
mov
scas
mov
into
pusha
fwait
mov
mov
jg
je
mov
dec
and
xor
push
xor
in
bound
hlt
fiadds
ja
lcall
push
stos
mov
icebp
pop
cmpl
mov
add
adc
cltd
repnz
jg
cmp
xor
jmp
or
xlat
fs
mov
call
in
pop
or
jae
cmpsb
popa
aad
test
test
inc
pusha
xor
pop
lea
decl
push
data16
mov
jl
dec
adc
ud0
dec
cld
lret
imul
xlat
adc
inc
and
mov
ja
xor
mov
xchg
cmpsl
mov
push
dec
jb
lahf
mov
iret
ljmp
sub
or
inc
jmp
mov
fwait
mov
mov
and
cmp
scas
cmpsl
lods
xor
pop
loop
jle
out
fistpll
nop
ds
fcmovnb
arpl
test
cwtl
mov
leave
aas
xor
xchg
pop
cmp
adcb
das
mov
fcmovne
pop
fbld
int
dec
push
stc
jmp
mov
cmp
jns
and
dec
repnz
or
scas
call
incb
mov
jg
mov
adc
pop
dec
sbb
loop
xchg
loopne
push
fisubs
enter
jmp
mov
mov
add
movsl
test
push
add
pusha
loopne
cli
out
fstp
mov
dec
jecxz
rolb
push
and
push
mov
and
or
loope
pushl
push
cmpl
leave
ja
ret
or
cmp
movsb
dec
bound
cmp
mov
rcll
mov
and
mov
adc
decl
sub
or
stc
sub
or
movsl
and
shlb
outsl
mov
divb
int3
cmpsb
and
pop
and
mov
dec
mov
adc
lcall
lcall
in
decl
mov
mov
icebp
push
idiv
rcl
mov
xor
movsb
and
inc
jmp
call
hlt
sbb
cs
out
push
cwtl
enter
aam
inc
mov
mov
inc
loope
mov
call
mov
mov
pop
pop
jb
insb
sub
push
and
xor
xchg
das
pop
call
mov
mov
push
daa
inc
fldenv
sub
pop
dec
lock
sar
test
div
xchg
adc
ss
loop
sub
ljmp
insl
vpmacsww
sbb
test
punpcklbw
fucomip
fists
negb
les
xor
dec
push
aaa
dec
add
push
icebp
data16
xchg
fists
xchg
cmp
adc
lods
cmc
lcall
icebp
ja
scas
inc
pushf
stc
jno
add
test
mov
adc
sub
push
jmp
jns
sar
pusha
cmpsb
addl
and
xchg
ds
inc
mov
jg
pop
clc
mov
push
popa
mov
test
pop
cmp
sbb
push
test
pop
in
mov
dec
ljmp
mov
fcomp
loop
orb
jmp
mov
stc
int
inc
outsb
jge
in
jbe
or
mov
andl
mov
mov
or
lret
mov
mov
inc
lahf
push
or
push
adc
insl
int
aad
jecxz
inc
nop
sahf
and
insb
push
mov
scas
jge
push
cli
outsl
ljmp
push
sahf
push
in
stos
in
aad
imul
fistpll
xchg
push
sub
stc
jo
and
xor
incl
mov
outsl
aas
lods
mov
les
jbe
lgs
or
lcall
cmpsb
mov
fsub
mov
cmp
and
dec
out
jmp
sbb
and
adc
xor
pushf
imul
sbb
mov
popf
inc
mov
mov
enter
and
clc
and
cltd
xor
and
sbb
add
enter
adc
nop
test
jp
inc
push
ret
xor
call
in
arpl
xchg
fcomps
hlt
cmp
decl
and
sbb
es
rorl
aaa
mov
pop
ds
call
je
or
adc
dec
das
cld
push
xor
ret
dec
mull
mov
sbb
pop
subb
pushl
movsb
or
in
xor
cltd
mov
outsb
dec
insb
adc
add
jmp
sub
cmpsl
dec
or
cmpsl
in
das
mov
mov
gs
sti
fdivrp
outsl
cmpsb
mov
aad
das
cmp
or
sar
incl
dec
arpl
mov
adc
push
jle
mov
iret
mov
test
add
sbb
add
pop
cld
jge
lea
xor
or
sbb
out
cwtl
jmp
add
stos
ret
imul
movsl
sbb
sbb
dec
and
jecxz
mov
jb
aad
je
test
sub
or
cmpsb
or
mov
addb
push
je
mov
test
mov
call
sub
jae
mov
pop
or
fcoms
inc
shll
fmuls
mov
xchg
and
repz
adc
jo
or
clc
pushl
das
repnz
xor
fwait
inc
std
mov
mov
cmp
test
push
add
in
sahf
inc
and
out
ret
cs
lcall
sub
rorb
pop
mov
bound
rclb
es
sbb
call
ret
xchg
cli
mov
inc
lahf
mov
add
cmp
jmp
out
sbbb
insb
cmp
lret
cltd
and
mov
ds
std
decl
sbb
pop
fmul
shll
mov
xor
test
push
std
incl
mov
lods
mov
addr16
dec
pop
aaa
jg
jmp
stos
xchg
push
sbb
ret
out
jle
mov
movq
decl
mov
dec
lds
pop
mov
call
xor
jae
mov
aad
push
fsubl
lea
pop
xor
fsubr
ja
sub
aaa
push
fdivl
ret
jle
std
movsb
mov
push
pushl
outsb
aad
aad
mov
mov
fistpll
rolb
in
and
mov
insb
loop
lods
lcall
pop
cmp
mov
xor
mov
outsl
rorl
jno
gs
ret
aam
sbb
jmp
test
sbb
mov
stc
xchg
or
scas
cli
frstor
sub
jp
mov
sar
call
sub
cmc
pop
test
loope
dec
repz
pop
push
xchg
lods
push
push
outsl
pop
or
pushl
cli
aad
loop
mov
cmp
sub
adc
stos
pop
fcoml
jmp
in
fsubr
pop
loopne
adc
adc
jp
dec
sub
stos
das
in
leave
mov
lcall
stos
movsl
repz
lcall
into
cmc
cmp
or
fucompp
ljmp
or
jbe
mov
lock
adc
pusha
add
xchg
mov
or
scas
outsl
ss
mov
das
das
js
stos
xchg
cmp
push
fistpll
enter
mov
adc
icebp
cld
rcrb
xchg
cmp
cltd
add
divb
clc
mov
insb
pop
cmc
xor
loopne
mov
fildll
pop
out
pop
scas
cli
xchg
mov
mov
pop
or
cmc
mov
dec
push
add
decl
into
xor
leave
fs
mov
pop
cmp
loope
out
pop
mov
mov
jbe
repz
inc
jmp
mov
sar
lcall
cwtl
cmp
ljmp
mov
pop
popa
mov
mov
inc
inc
fucomi
gs
cmp
lcall
test
cmpsb
push
enter
xchg
mov
xchg
paddb
mov
shll
lds
lret
call
ljmp
rcl
inc
push
adc
and
sahf
int
daa
aaa
xor
xor
mov
stos
push
push
in
and
xchg
jne
add
push
call
hlt
push
aas
jl
incl
pop
stos
mov
mov
add
enter
decl
add
mov
fdivrl
dec
popw
or
adc
rorl
push
xor
xor
adc
mov
pushf
fildl
cmp
imul
ret
adc
cld
subb
repnz
shll
lret
outsl
and
in
ljmp
jecxz
dec
pop
xchg
jecxz
jge
add
pop
mov
mov
decl
incl
xlat
jns
test
push
mov
push
and
push
xor
decl
push
stos
jl
insl
movsl
mov
insl
push
mov
mov
xchg
cmp
pusha
jb
xor
lcall
lret
mov
in
aad
cmp
outsl
std
sbb
pop
push
lds
es
iret
rorl
xor
fsubl
lcall
jns
loopne
fisttpl
pop
mov
xchg
push
mov
lods
std
push
xchg
cltd
ljmp
fbld
or
mull
push
mov
mov
ljmp
dec
mov
and
xchg
adc
mov
imul
lcall
cld
incl
cltd
jp
adc
dec
movsl
outsb
sarb
aas
xchg
rcrb
insl
cltd
sub
cmp
mov
or
inc
cs
jb
cmp
hlt
cmpsl
push
mov
or
std
lcall
xor
xchg
xor
pop
lds
cmp
pop
mov
ret
test
mov
sarb
cs
stos
in
sbbl
decl
cli
dec
push
sbb
lcall
cmp
sub
or
call
out
popa
xor
jae
dec
jmp
xchg
inc
cmc
jl
jl
mov
ss
mov
loop
or
popf
xchg
repnz
dec
ror
mov
jns
lcall
xor
je
cmp
cmc
roll
imul
jg
jnp
mov
cmpsb
xchg
test
xchg
mov
and
push
mov
jle
std
leave
aad
sarl
aaa
mov
fsubs
add
pushl
sbb
sarb
push
ljmp
sub
pop
mov
ror
sub
mov
dec
std
cmp
mov
inc
mov
mov
push
cmpsl
cmp
repnz
sbb
sarb
push
inc
sarb
aaa
jl
pop
aad
out
pop
subl
mov
pop
jecxz
add
fsubr
mov
push
jmp
fdivs
and
sub
das
std
dec
pop
pop
sub
clc
cli
push
stos
aam
pop
or
imul
outsl
icebp
mov
xchg
add
add
sti
cltd
jo
pop
popa
mov
sbb
push
mov
in
pop
pop
outsb
and
pop
mov
pop
pop
jb
mov
push
mov
mov
in
push
sbb
je
pop
and
lds
mov
in
dec
xchg
mov
or
or
jne
mov
popa
ss
or
xor
ljmp
cli
jno
mov
sub
jno
hlt
mov
mov
add
imul
sbb
push
arpl
test
push
jno
lea
push
lods
adc
mov
or
xor
out
inc
pop
in
mov
incl
sti
ret
loopne
outsl
and
out
inc
push
pusha
sti
add
lds
push
call
push
mov
push
movsb
mov
dec
pop
sbb
outsl
dec
xor
push
pop
mov
inc
decl
add
movsl
push
jge
xlat
adc
xchg
mov
outsb
inc
scas
jne
jmp
fwait
ss
mov
add
lahf
into
cmpsl
jl
pop
insl
mov
mov
mov
inc
adc
jns
fiaddl
outsb
rolb
xor
je
jg
ss
pushf
dec
pop
mov
cmp
loop
scas
stc
cwtl
out
mov
sbbb
test
jg
push
xor
mov
rcll
or
iret
jl
sbb
insl
lret
call
inc
out
and
cs
push
sarb
adc
imul
inc
inc
icebp
and
pushf
ret
xchg
lods
mov
dec
dec
inc
jmp
jns
inc
jmp
in
pop
es
jg
pushl
xchg
out
or
loopne
cmp
pop
dec
xchg
aas
or
dec
jns
fisubl
iret
lods
test
das
mov
into
sub
ss
mov
add
sbb
push
or
jae
dec
push
sub
sahf
jae
add
fsubl
and
pushf
pop
fcmovnb
je
jl
xlat
sbb
pushf
shl
xchg
ret
scas
incl
lds
or
xchg
or
adc
icebp
push
dec
jle
flds
jno
cmc
daa
xlat
xchg
andl
rorb
jo
lcall
cmpsb
and
jecxz
jge
lcall
imul
imul
addr16
daa
xor
jno
mov
mov
lods
push
or
dec
gs
jo
dec
aaa
xor
dec
cmp
inc
test
push
sub
addr16
cmc
add
lods
mov
xor
movb
inc
jo
decb
cmp
jns
push
pop
sub
cli
lock
xchg
jb
movsb
test
aaa
outsb
push
sbb
push
sub
ja
dec
call
pop
fldt
std
push
mov
ficoms
imul
jmp
leave
add
call
repz
xor
inc
sti
push
fsub
jbe
mov
clc
in
jecxz
add
dec
mov
or
mov
jecxz
aad
adc
clc
xor
jecxz
pop
xor
jmp
test
push
lods
cmp
mov
or
push
popa
je
mov
std
test
imul
js
dec
adcb
fiadds
loopne
xchg
aaa
lahf
fstps
movsl
mov
jnp
or
popa
xor
cwtl
push
pushl
xchg
jl
cmc
bound
adc
xchg
cli
sbb
and
outsb
sub
scas
and
out
cmc
adc
pushl
or
inc
fistl
out
mov
stos
or
insb
adc
push
frstor
sti
sub
hlt
fnstsw
cli
dec
sbb
mov
push
jnp
jmp
ss
aad
pop
call
outsb
call
inc
ljmp
hlt
mov
and
imul
xchg
jecxz
lahf
mov
fsubrs
cs
jmp
inc
xor
stos
or
into
outsb
dec
xchg
adc
loop
pop
cmp
adc
and
ds
pop
jmp
mov
pop
inc
popa
imul
outsb
mov
out
and
fucomip
add
ds
cmpsb
ja
cmp
pop
imul
jg
mov
sub
jl
sbb
shl
sub
and
mov
call
outsb
add
add
call
frndint
negl
mov
adc
sub
mov
jns
imul
dec
mov
inc
ds
test
mov
jg
add
bound
mov
xchg
sbb
mov
jmp
test
or
ror
test
mov
push
call
js
sbb
cmp
mov
pop
adc
xor
inc
repnz
negl
imul
jb
out
addr16
xor
or
sarb
popf
push
lock
sub
stos
dec
inc
aad
test
lahf
xchg
or
dec
sub
cmp
mov
in
adc
insb
pop
imul
movsl
das
mov
mov
adc
incl
jg
or
fwait
cld
pop
bound
stos
push
dec
imul
dec
xchg
mov
lods
inc
lahf
les
adc
mov
inc
in
enter
inc
fstpt
pop
lock
mov
imul
sar
pushf
mov
mov
cld
and
or
es
incl
fucomip
sub
inc
pusha
pop
iret
or
fisubs
adc
incl
incl
imul
hlt
cld
dec
jns
loopne
iret
mov
aaa
add
fimuls
das
aas
pop
es
ret
add
xchg
fists
ja
fdivr
outsl
cmc
jmp
mov
cmp
bound
pop
sub
call
clc
xchg
ret
jo
cmp
xchg
pop
mov
adc
outsb
std
out
jecxz
lret
nop
fisttpl
sbb
jbe
sahf
ror
adc
push
and
cli
call
sbb
popa
pop
js
lods
dec
sbb
fwait
xchg
rclb
xor
xchg
inc
ja
call
pop
cmpsb
jmp
and
push
iret
xchg
sbb
inc
dec
rcll
mov
sbb
mov
xchg
cltd
inc
mov
pop
fs
loop
cmpsb
xchg
les
or
sti
fnstsw
dec
add
test
leave
addr16
push
leave
jbe
pop
nop
hlt
or
aam
scas
sahf
insl
jp
aam
jg
inc
cmp
test
pop
leave
in
push
movsl
lret
roll
xchg
push
add
es
xchg
sti
add
ljmp
cld
inc
in
outsb
jle
out
inc
push
sub
insl
imul
jg
je
shll
jp
or
shrl
jl
gs
jbe
roll
pminub
and
jb
pop
mov
invd
jno
cld
icebp
xlat
inc
das
mov
incl
aaa
dec
notb
int
shll
mov
add
call
test
cmp
or
jnp
psubq
xchg
mov
jl
cltd
jmp
cmp
sbb
hlt
mov
mov
xor
lods
inc
jno
xor
les
lret
mov
addl
jmp
push
arpl
hlt
call
mov
mov
pop
out
mov
jo
mov
faddl
jmp
pop
int3
xor
aas
mov
das
std
incl
sarb
mov
push
xchg
lcall
add
push
jp
fadds
cmp
dec
sti
mov
fidivl
cmpsl
or
ret
cmp
aas
adc
dec
or
xor
jp
inc
inc
in
aam
sbb
sub
mov
in
orb
push
imul
movsl
cmpsb
pop
outsl
adc
cld
mov
out
addr16
lea
lods
and
stos
sti
xor
adc
lcall
adc
mov
fadds
inc
sub
hlt
jle
jmp
pop
js
and
cs
push
mov
loope
ud1
cltd
in
imul
lods
pop
cmp
incl
sahf
xlat
jecxz
into
daa
dec
pop
pushl
push
pop
ljmp
imul
aad
or
sbbb
lcall
push
roll
pop
pop
arpl
call
arpl
sbb
cmp
jnp
dec
loop
adc
lods
xor
ss
and
cld
aad
push
stos
pushf
ljmp
lret
dec
je
icebp
jp
mov
xchg
pop
jae
dec
push
dec
dec
fmuls
sbb
jb
fadds
sub
test
push
rcrb
or
push
mov
mov
call
sbb
negb
pop
ljmp
mov
hlt
icebp
dec
std
lcall
cmc
inc
xchg
test
mov
cmp
ja
aas
ljmp
inc
xor
sub
shll
add
sti
pop
aad
sub
cltd
bound
mov
push
fcomps
out
pop
iret
lods
pop
or
ljmp
test
out
cmpsl
jb
loop
sti
ljmp
mov
loope
test
mov
rcrb
cwtl
sbb
jg
xchg
fisubrs
loop
or
or
test
adc
lcall
sbb
sub
pop
pop
data16
dec
iret
clc
inc
push
jb
pop
aad
insb
mov
out
adc
sub
sub
lret
mov
cmpsl
add
inc
ljmp
int3
push
ja
pop
dec
lret
mov
mov
fistpll
mov
call
in
jnp
sbb
fildll
cmp
mov
insb
inc
add
dec
out
icebp
pop
jp
lcall
adc
sbb
cli
lcall
pop
call
or
cmpl
push
mov
inc
andb
jg
mov
bound
ficompl
jb
jns
leave
push
lret
repnz
push
xorl
sbb
insl
cmp
notb
sbb
loope
dec
and
and
cmp
xor
ret
or
jg
jg
gs
fsubrs
jo
cli
enter
pushl
xor
fsub
pop
mov
sbb
fcomip
ficoml
jnp
mov
iret
jns
jns
in
movsb
rcll
adc
inc
dec
decl
jg
sbb
pop
pop
ret
or
mov
aam
insb
lods
sbb
cld
movsb
jmp
push
aam
cwtl
pop
mov
mov
fistl
adc
int3
mov
pop
aam
mov
push
xor
gs
mov
sub
in
or
sub
aam
rclb
pop
cli
lock
repz
dec
mov
sub
jle
out
jge
shrb
mov
call
or
push
xchg
jmp
fucomip
inc
push
sub
push
push
jmp
jnp
stos
pop
pop
mov
mov
stc
sub
mov
scas
cmp
push
xchg
cli
in
inc
jmp
popf
dec
sbb
test
add
ret
insl
out
adc
popa
push
xchg
clc
pushl
in
in
or
sub
push
mov
scas
jg
aaa
stos
adc
cmp
fdiv
pop
cmp
adc
mov
push
adc
test
clc
pushf
or
push
daa
xchg
adc
sbb
or
lods
lcall
negb
mov
mov
jl
stos
cli
xchg
lds
fidivl
loopne
std
mov
sub
sub
jb
out
call
je
leave
scas
addr16
call
pop
pop
in
ror
pushf
fisttpll
mov
push
pop
xlat
in
ljmp
xlat
sbb
push
rol
push
sar
xlat
out
into
mov
roll
mov
push
jnp
sbb
mov
popa
sbb
adc
popa
sar
fmull
cmp
popf
cmp
test
mov
mov
xchg
mov
pop
mov
dec
ss
in
in
jmp
rcrb
xchg
shr
mov
pop
push
lock
jecxz
leave
int3
dec
xchg
ja
test
call
inc
pop
jmp
lahf
in
push
xchg
xchg
adc
js
or
adc
lea
ljmp
mov
xchg
xchg
aad
aas
ljmp
jge
sub
cwtl
push
dec
inc
xchg
dec
rcl
lcall
pop
adc
jo
cmp
pop
in
int
mov
loop
mov
scas
jmp
sbbl
test
das
pushf
jg
jmp
push
stc
mov
movsl
push
pop
fst
cli
lock
and
ja
jo
push
loope
pop
loop
ljmp
popa
and
mov
out
outsl
push
jp
gs
ljmp
pop
lret
or
add
scas
addr16
out
push
jno
popa
mov
sub
dec
mov
cmp
sbb
mov
lock
ljmp
sub
mov
into
int3
add
stos
push
push
test
stc
mov
ljmp
bound
sbb
aas
es
ljmp
jmp
jnp
ss
dec
mov
scas
dec
fwait
sbb
xlat
add
loop
pushl
js
or
fdivrl
test
into
mov
push
in
cmp
add
or
cltd
pusha
jb
lret
mov
repz
decl
push
aam
int
cmpsb
lods
mov
mov
jle,pn
pop
dec
shrl
sub
and
or
jp
popf
cld
or
xor
and
jl
repz
lcall
lock
cld
jae
adc
fiadds
xchg
mov
mov
mov
je
mov
sahf
aad
sub
rcrb
sbb
out
adc
inc
je
xchg
data16
roll
xchg
inc
push
add
ret
add
mov
sarl
mov
out
xor
arpl
out
fildll
and
lcall
repz
cmc
fwait
shll
mov
inc
mov
cli
xor
xchg
leave
lcall
ljmp
lea
add
add
js
mov
dec
lds
adc
clc
jecxz
xchg
cmpsb
movsb
and
push
jb
aad
test
call
xchg
jg
adc
fsubrl
push
sub
jl
sbb
xchg
loope
adcb
dec
mov
xchg
enter
sub
faddl
movsl
mov
aad
call
mov
mov
hlt
jmp
out
jne
ja
fwait
ret
loop
mov
int
dec
mov
lcall
jmp
jge
push
mov
out
xchg
add
pushl
insb
test
adc
jl
jecxz
mov
testl
xor
sub
popfw
mov
cmc
push
repnz
popf
scas
cld
ret
cmp
mov
loope
fsubr
loope
flds
mov
mov
int3
outsb
xchg
sbb
outsl
icebp
sbb
mov
lahf
jae
add
scas
insb
mov
popf
in
mov
pop
or
adc
lock
ljmp
pop
fs
jl
imul
jb
sbb
xchg
push
add
pop
ljmp
adc
mov
stos
les
enter
add
lahf
mov
pop
xor
pop
adc
mov
push
in
pop
or
cmp
test
aas
cmp
test
loop
lcall
std
clc
adc
imul
mov
test
stc
xchg
test
call
prefetch
aaa
add
imul
xchg
mov
mov
sub
push
test
cmc
jecxz
sub
pop
and
sub
std
ljmp
sbb
inc
outsl
ss
icebp
mov
and
loopne
js
out
loopne
lcall
ds
imul
xchg
je
mov
inc
std
lahf
filds
jmp
mov
dec
jmp
test
mov
call
insb
jne
mov
jae
sub
sub
and
jmp
lcall
and
xchg
or
pop
lret
imul
daa
sbb
add
into
xchg
mov
pushl
fbld
aam
push
scas
jg
adc
jmp
add
fmull
imul
insb
jmp
xchg
outsb
push
popf
lods
sti
mov
jno
rcrb
or
xlat
and
sarl
adc
lret
fsts
das
popf
aad
mov
mov
adc
shrb
mov
test
mov
cmpsb
divb
push
jmp
mov
dec
xlat
dec
je
jbe
mov
repz
xchg
and
ljmp
xor
imul
xchg
test
js
int3
sub
push
shr
mov
or
sbb
mov
push
pop
lods
fisttpll
fucomip
pop
inc
or
and
inc
jbe
sbb
fiadds
dec
movsl
add
sbb
push
cwtl
mov
xor
adc
xor
arpl
decl
adc
xchg
rclb
lret
mov
mov
arpl
mov
mov
cwtl
cltd
adc
cs
sbb
xchg
imul
mov
add
fucomp
lcall
imul
cmp
mov
repnz
sub
gs
pop
loop
fidivs
movsb
mov
pop
movsb
stos
sub
int3
fucomi
roll
sbb
jne
pop
cli
jg
push
xorb
mov
lock
cmp
push
lea
add
cmp
xor
ficompl
jns
stos
int
mov
fcoms
mov
repz
icebp
clc
loope
lock
push
imul
pushf
imul
sbb
adc
inc
adcl
mov
inc
pop
or
mov
loopne
aam
nop
or
aad
in
lods
jg
pusha
test
fnclex
xchg
xor
mov
scas
mov
dec
xor
mov
push
xchg
push
pop
faddp
in
loope
sar
mov
fcoms
jbe
pop
jo
push
ret
gs
xor
ficomps
inc
push
inc
adc
popl
jg
xchg
es
sub
inc
je
test
fmull
sbb
shl
jge
adc
shlb
mov
push
push
sub
test
ja
lock
mov
jl
ficoms
pop
push
gs
push
dec
fldl
ljmp
lret
out
dec
pop
stos
pop
cli
mov
arpl
jl
lcall
push
inc
add
push
pop
xchg
mov
mov
push
add
add
pushf
sub
std
call
repz
mov
es
and
into
lods
outsb
imul
ljmp
pop
testb
or
xor
pop
frstor
mov
pushl
sahf
push
fisttpl
sub
inc
sahf
out
push
ss
idivl
inc
xor
jno
add
mov
xchg
cli
push
cmp
call
pop
adc
lahf
inc
mov
incl
pusha
jmp
aas
adc
push
xchg
ja
mov
mov
call
fsubrs
pop
push
cmp
xlat
mov
cmpsb
xchg
sarl
call
decl
icebp
pop
xchg
sbb
xchg
subl
pop
sbb
mov
js
mov
or
push
sbb
mov
ljmp
jmp
inc
mov
inc
out
mov
cmp
mov
or
je
and
rcl
rclb
add
mov
sahf
shrb
clc
push
pop
aaa
ja
test
adc
cmp
rcl
or
mov
cmc
pop
sub
cltd
mov
pop
popf
sub
out
gs
push
ljmp
jno
clc
sbb
mov
mov
in
test
fistpll
adc
sar
ljmp
jmp
add
add
xor
incl
mov
or
or
or
xchg
jae
jp
pop
jle
add
sbbl
in
push
fnstcw
xor
adc
cmp
xchg
mov
sbb
movl
mov
mov
call
xlat
jl
fildll
mov
repz
sbb
mov
ds
call
iret
push
aam
or
sbb
pop
es
add
and
sbbl
sti
push
stos
rorl
pop
lock
xchg
mov
fadds
fildll
mov
mov
inc
dec
out
repz
sbb
sbb
ljmp
mov
arpl
sub
cmpsl
cmp
lret
mul
pop
xchg
scas
mov
ret
jae
fcmove
inc
aad
mov
jb
icebp
mov
sub
pushl
mov
sbb
clc
mov
ljmp
fnstcw
push
and
ficompl
lcall
cld
nop
mov
dec
fdivl
sahf
ljmp
jmp
mov
int3
xchg
ret
call
lds
ffreep
mov
or
jmp
mov
scas
fstps
adcl
cld
call
jp
add
cmpsb
dec
jnp
adc
jo
adc
cmpsb
cwtl
pop
fdivrl
lods
ljmp
inc
out
sub
out
xor
cs
test
int
pop
js
ljmp
insb
push
in
pop
mov
out
and
mov
out
in
cltd
cmp
es
arpl
cmpsl
jmp
cli
pop
sbb
xchg
sarb
and
or
mov
mov
cmp
daa
push
sbb
push
xor
adc
xor
movsl
iret
loop
sahf
fmull
cld
dec
decl
sub
dec
adc
fisttpl
je
stos
pop
sub
xchg
movsl
aam
mov
xchg
enter
mov
outsl
fmuls
xchg
add
loopne
dec
in
push
fs
and
jnp
mov
cli
add
sahf
push
mov
add
or
fnsave
or
mov
call
out
jmp
addr16
add
or
repnz
scas
fstpl
bound
lock
add
jle
xchg
pop
cli
imulb
dec
test
addr16
add
cmp
cli
ss
sbb
xor
cld
in
sbb
or
xchg
sub
lcall
cwtl
cmc
lds
icebp
pop
cmp
adc
out
cmp
outsb
negl
fadds
call
out
gs
fcmovb
mov
jb
cmp
xor
sbb
inc
das
adc
loop
sbb
mov
jg
ret
xchg
push
icebp
dec
jae
ror
aas
shll
xlat
cwtl
leave
and
ljmp
add
jno
pop
sahf
ficoms
pusha
rcrl
std
sbb
dec
xchg
dec
aad
fwait
xor
stos
cvtdq2ps
daa
stc
xchg
das
push
mov
decl
xchg
xchg
testb
jbe
fnstsw
mov
test
loope
lret
push
lock
and
pushf
lock
mov
mov
mov
mov
cmp
outsl
lcall
sub
jg
daa
inc
hlt
test
sub
mov
and
pop
cld
xchg
cmp
imul
icebp
cmp
fdivl
xchg
clc
decl
pop
mov
test
mov
mov
shrb
adc
pop
mov
icebp
jae
push
iret
jl
push
sar
aaa
cli
das
imul
in
hlt
popa
hlt
lds
insb
arpl
repz
xchg
jg
call
data16
mov
pop
sti
jbe
add
push
das
push
and
and
decl
in
mov
push
icebp
jmp
inc
fbld
or
add
xor
decl
sbb
xchg
pop
dec
lea
jns
or
sub
test
add
js
arpl
xchg
mov
mov
pushl
scas
sbb
aad
ja
pop
call
pop
decl
add
sub
dec
repnz
pop
push
iret
push
push
sub
push
clc
lcall
sub
or
adc
lds
lcall
pop
loopne
lods
sub
incl
pushl
das
fcmovnbe
xor
test
adc
push
data16
mov
jle
cmpsb
sub
xor
xchg
push
daa
adc
cltd
call
mov
scas
jg
adc
push
test
jne
sahf
xchg
cmp
jp
add
insl
cmp
sbb
adc
sub
jecxz
push
jle
mov
inc
scas
cld
cmp
and
call
dec
cwtl
inc
js
dec
sbb
push
test
pop
jg
bound
int
cmc
pop
ficompl
sbb
fisubrs
arpl
pop
imul
jns
inc
iret
ss
jb
mov
ljmp
pop
adc
imul
push
fcompl
jno
in
rclb
mov
mov
loope
call
aaa
in
scas
out
sbb
jecxz
pushf
clc
push
mov
mov
mov
gs
call
sbb
faddl
add
call
movsb
into
inc
int3
xor
mov
loope
sbb
adc
out
cli
mov
ret
adc
inc
mov
xchg
cwtl
addr16
enter
mov
idivl
hlt
mov
scas
sub
dec
cmpsl
std
orb
jmp
inc
sbb
mov
mov
xchg
inc
fiaddl
cmc
neg
lods
xchg
sbb
push
sbb
aam
loopne
push
stos
es
out
mov
lods
push
rcl
call
mov
xor
sbb
jg
call
repnz
fcomps
aam
pop
push
and
test
push
xchg
pop
loop
rolb
mov
into
cwtl
add
xchg
lock
fsts
insl
sub
jb
dec
flds
xchg
dec
push
inc
mov
lret
decl
cmpsl
jo
out
jp
outsb
inc
sahf
daa
sbb
stc
in
adc
clc
or
ja
cltd
sbb
mov
xchg
xchg
incl
xchg
loop
sbb
adc
mov
adc
sahf
push
fcmovu
fsts
lock
cld
mov
push
lods
jnp
inc
popf
nop
or
jo
mov
js
divb
push
in
push
mov
and
pop
int3
ja
cld
jecxz
insl
iret
mov
roll
sbb
lods
and
shr
xor
mov
test
incl
mov
mov
dec
mov
cmp
mov
sbb
in
and
jne
sahf
pop
ja
and
dec
sub
add
mov
lahf
cwtl
jns
pop
pop
push
fstl
add
enter
pop
cld
jg
insb
js,pt
mov
add
cmpsb
stos
jno
pushf
loope
in
push
sahf
and
jg
test
loope
jmp
repz
arpl
jg
aas
sbb
add
test
sbb
negb
mov
std
xchg
jecxz
div
sbb
pop
pop
or
rcpps
xor
lcall
call
xchg
movsl
pushf
adc
xor
aam
add
clc
inc
fiaddl
out
div
call
xlat
je
dec
jl
push
std
add
call
lret
lods
mov
push
mov
cwtl
pop
push
and
mov
imul
aad
xchg
mov
call
and
stos
in
fcmovne
push
xlat
lods
cmp
inc
popa
ljmp
imul
jno
xlat
dec
push
addr16
mov
mov
xchg
sbb
xchg
insl
push
push
clc
add
mulb
xor
std
insb
inc
pop
cmp
ljmp
pop
mov
adc
cmp
inc
in
call
pop
dec
dec
movsl
push
add
nop
inc
aaa
fstpl
mov
stos
jg
insl
icebp
fldcw
add
sub
shlb
decl
jmp
xchg
dec
roll
mov
hlt
js
cli
aam
and
ret
nop
cmp
sbb
push
into
mov
fwait
negl
lods
inc
es
testb
dec
mov
je
leave
lahf
xlat
decl
dec
flds
mov
push
leave
fwait
cld
fstps
rcll
xchg
test
push
jge
out
sub
cmp
int
adc
jle
jmp
decl
push
in
in
mov
aad
lock
dec
add
dec
gs
jg
add
int
xchg
mov
add
mov
and
call
decl
xor
jle
fadds
kmovb
mov
in
ret
lds
test
mov
pushf
leave
pop
lds
incl
lock
sbb
aas
and
and
push
incl
int
xchg
movsb
rcl
push
fisubs
mov
cmc
mov
ret
decb
shrb
sub
loopne
in
pop
stc
fidivrs
pop
pop
adc
jmp
mov
lcall
popa
lods
fld
aad
push
mov
gs
adc
fiadds
mov
xchg
int
mov
adc
pushl
add
in
push
loope
lcall
ret
lea
pop
roll
loope
fisubrl
dec
mulb
out
popa
mov
ljmp
mov
jae
ret
push
mov
js
mov
xchg
jnp
xor
incl
sbb
inc
ret
jmp
jle
pop
mov
and
je
jg
xor
aaa
mov
inc
sub
and
xchg
sub
pushl
add
and
not
lahf
adc
addb
jge
in
jnp
jmp
fisttpll
test
call
fstp
sbb
aas
jecxz
mov
sbb
mov
push
push
sarb
mov
push
jne
jo
or
cmp
adc
aad
jmp
mov
movb
pop
cltd
test
sarl
pusha
repz
inc
mov
call
pop
repnz
movsl
xchg
push
lcall
push
and
orl
xlat
mov
or
push
hlt
push
sbb
scas
insl
pop
lcall
or
adc
subb
xor
nop
fldenv
pop
mov
dec
loope
scas
inc
fs
in
jne
push
cmpl
mov
stc
int
jg
cmpsb
inc
jmp
push
jbe
push
cmp
ret
idivb
in
inc
ss
mov
push
jmp
mov
outsb
cld
mov
popf
ret
inc
inc
xor
dec
add
push
add
pop
mov
or
lods
cs
je
push
pop
jmp
mov
add
andb
sbbb
call
mov
jne
and
inc
aad
jb
fstps
es
mov
je
sbbb
imul
push
dec
push
pushf
ficoms
ljmp
out
mov
and
lahf
xchg
push
pusha
js
stos
enter
sbb
or
lea
push
xor
xchg
ljmp
pop
dec
sub
call
or
es
adc
mov
ss
scas
xchg
cmp
sbb
idiv
cld
xor
dec
adc
dec
lock
aad
mov
shr
pop
and
lods
ljmp
ret
notl
aaa
mov
mov
or
ljmp
std
mov
xchg
mov
fsubrs
pop
mov
ljmp
jmp
mov
imul
gs
ret
or
mov
cmp
pop
pop
xor
rcll
jecxz
sub
idiv
push
out
ja
rcl
das
cld
ljmp
jp
loop
adc
lods
shll
pop
fsts
inc
out
inc
add
cmpsb
and
movsb
pop
xchg
xchg
lcall
pop
fs
inc
adc
mov
xchg
ja
add
bound
mov
fistpll
shlb
movsb
out
jne
movsw
mov
lret
lcall
sub
inc
lcall
mul
jae
jp
xchg
bound
dec
mov
fnstenv
sub
ss
jmp
xchg
sub
ffree
inc
jne
lahf
cmc
sbb
cwtl
dec
sub
ss
int
idiv
lcall
inc
cld
sub
cwtl
mov
or
xor
rolb
std
sub
cmp
int
mov
shlb
mov
add
inc
call
das
int
or
cmp
enter
pmaxub
nop
push
lcall
bound
fneni(8087
hlt
pop
fcmovb
and
in
movsl
and
pop
scas
sub
lcall
scas
or
or
in
int3
js
sbb
fwait
cmp
fs
insl
and
movsl
pushf
aas
out
decl
lods
mov
jecxz
or
cmpsb
lret
out
sub
mov
lret
aam
add
pusha
shrl
xor
mov
xchg
int3
int3
and
sub
or
mov
sbb
jno
cmpsl
and
loopne
inc
push
sti
cmp
call
cli
call
sti
push
rcrl
insb
add
daa
xor
shlb
sbb
inc
mov
xchg
adc
pop
add
dec
je
cmp
cmp
pop
xchg
daa
jmp
movsb
stos
xchg
push
leave
ror
add
pop
into
sbb
das
inc
mov
cli
pushl
mov
stos
scas
cmc
arpl
fwait
incl
push
adc
sahf
ret
pusha
test
and
into
xchg
mov
data16
adc
stos
sub
mov
sub
and
jb
xchg
cmpsb
mov
call
sub
jge
lcall
out
xchg
xor
imul
outsb
xor
jge
push
lock
lcall
mov
push
xchg
bswap
daa
lahf
xchg
add
js
andb
incl
lods
lea
xchg
vhsubpd
iret
icebp
out
cmp
inc
sub
outsl
cli
ljmp
enter
movsb
jecxz
test
call
xor
daa
decl
mov
outsb
jno
cld
pop
mov
mov
popa
and
dec
jmp
rcl
ss
ja
mov
or
mov
cli
mov
shr
dec
xchg
inc
cltd
addr16
out
jg
icebp
addr16
sbb
hlt
and
mov
data16
sbb
out
mov
adc
sub
decl
test
gs
out
xchg
xchg
call
mov
sbb
push
jle
hlt
cmp
mov
imul
jl
push
cmp
test
and
cmc
inc
call
in
mov
imul
xchg
fmuls
icebp
out
call
movsb
mov
push
cmp
adc
std
mov
cmpsl
aad
cs
jmp
adc
mov
mov
aam
pop
adcl
orb
push
mov
and
stos
pop
xor
ljmp
jge
push
mov
push
push
xchg
cmpsb
outsb
dec
loop
ds
incl
loopne
mov
aas
dec
rclb
pop
icebp
xchg
out
push
insb
mov
daa
mov
ss
ret
lods
outsb
hlt
cli
stc
xchg
push
sbb
fildl
sbb
lods
ficomps
cmp
sub
cld
mov
mov
xchg
cli
arpl
jnp
and
cwtl
js
popa
cmp
jno
lock
fstpl
cmp
pop
in
adc
mov
push
xchg
push
sub
mov
pop
mov
inc
sub
add
mov
aad
jecxz
mov
testb
clc
and
xchg
and
mov
push
sti
push
in
adc
mov
pop
jbe
or
pop
ss
cmc
gs
mov
incl
rorb
mov
xchg
inc
in
arpl
aam
adc
add
aaa
mov
cltd
ret
mov
ljmp
int
test
fcoms
adc
push
out
mov
add
cltd
lret
adc
push
pop
add
mov
shrl
sub
sbb
sti
fs
lcall
std
fistps
hlt
pop
out
pushf
mov
mov
mov
ret
xorb
shlb
xor
call
insb
fcomp
mov
daa
popa
jmp
jne
call
xor
mov
mov
dec
gs
push
pushl
or
fisttpll
incl
jmp
cltd
sbb
adc
pop
icebp
incl
vmovddup
xchg
cmp
lcall
ret
sahf
mov
sbb
out
pop
mov
xor
cmc
decl
xlat
adc
push
add
jmp
minps
fstpt
outsl
lock
push
mov
xchg
sbbb
int3
jae
das
in
and
loope
mov
cld
jmp
push
int3
dec
push
adc
cltd
imul
hlt
xchg
lret
or
fwait
cltd
lcall
push
push
daa
test
mov
and
shlb
push
cwtl
push
shl
pop
pop
jg
lods
sbb
adc
jnp
add
pushl
mov
pop
outsl
mov
scas
pop
jns
push
adc
data16
popf
fnstsw
adc
test
cltd
ret
push
xchg
cmp
adc
mov
mov
push
sub
and
mov
pop
andl
mov
aam
cs
arpl
adc
pop
lcall
iret
pusha
pmullw
cmpsl
adc
inc
add
aam
xchg
in
mov
call
jno
and
sub
dec
pop
fsubrl
pop
inc
outsb
movsl
xchg
jmp
pop
mov
jg
mov
sti
rol
sbb
or
test
sarb
jmp
in
xchg
ficoml
mov
shll
jmp
int3
nop
js
xor
sbb
in
iret
mov
imul
mov
sbb
sbb
fucomp
push
callw
fldcw
sbb
pusha
or
jg
and
in
cltd
add
push
mov
aad
test
and
lock
sbb
sbb
or
mov
mov
in
xor
xchg
cmp
jo
lahf
dec
das
xchg
inc
js
mov
sub
insb
test
or
incl
inc
rcrl
out
aas
push
push
cmovle
and
jns
incl
or
cmp
xor
mov
insl
bnd
imull
call
pusha
gs
mov
lods
xor
sub
mov
ljmp
mov
insb
mov
jecxz
rol
repnz
mov
daa
jmp
loop
jecxz
xchg
clc
or
xorb
in
xchg
adc
dec
dec
bound
mov
xchg
xchg
out
mov
push
rclb
add
xlat
dec
and
xchg
out
aaa
clc
push
lcall
and
test
insl
sbb
out
pop
ja
hlt
incl
pop
std
ja
mov
jmp
push
lods
out
jmp
leave
bound
pop
loopne
call
xchg
and
inc
hlt
mov
sti
out
lods
add
in
or
cmp
ljmp
mov
mov
inc
push
jns
imul
cmpsl
mov
std
push
add
inc
adc
jmp
and
mov
neg
sub
dec
cli
xor
sbb
sub
into
jne
ret
sub
xchg
and
jne
cmp
gs
push
sti
jg
xorl
and
push
in
xchg
xchg
loopne
xchg
push
adc
push
cmc
pushl
cmpsb
mov
ds
mov
xchg
push
or
mov
psllw
icebp
pop
xor
push
adc
xchg
cmpsl
icebp
mov
lods
fsubrs
pop
sbb
std
bound
shrl
push
dec
and
or
sub
sub
imulb
jo
jg
inc
out
idivl
ljmp
add
incb
push
movsb
sbb
outsl
jmp
into
iret
pop
sbb
popf
jno
inc
cmp
inc
mov
jmp
imul
int3
in
sub
and
fcmovnu
loopne
dec
inc
pop
sbb
test
into
inc
cltd
or
das
icebp
lcall
push
gs
or
imul
mov
push
popa
fstl
add
pop
cmp
daa
mov
sbb
jg
push
jno
test
fldt
mov
call
in
mov
jmp
sbb
lds
jecxz
pop
in
popa
leave
pop
cmpsw
jo
aaa
ljmp
pop
fwait
test
scas
jl
popf
sub
lods
mov
addr16
dec
jecxz
outsl
scas
adc
pop
ftst
jge
dec
loopne
ljmp
dec
and
push
enter
bound
ja
mov
mov
incl
test
sbb
mov
jae
gs
adc
inc
in
call
xchg
push
mov
jo
mov
or
std
push
cmc
pop
call
popf
jecxz
shr
cmpsb
jne
cmpsb
pop
std
jg
fs
jb
je
mov
or
lcall
pop
jnp
sbb
or
push
ret
dec
cmp
push
decl
iret
pop
cmp
mov
fldcw
pop
popf
cwtl
xor
fnstsw
lcall
xchg
pop
mov
push
mov
fidivrs
mov
cmpxchg
mov
mov
out
push
movl
ja
add
pop
mov
out
mov
js
mov
fbld
mov
mov
push
add
mov
sahf
cwtl
pop
clc
in
dec
mov
add
push
cwtl
subb
ffree
dec
mov
xchg
jo
cltd
ljmp
mov
mov
fwait
mov
push
push
pop
mov
mov
mov
sbb
jo
pop
testb
push
cli
jg
sbb
sbb
push
fmul
fs
and
xor
out
pop
dec
addb
mov
sub
adc
lods
mov
std
xor
inc
adc
jmp
lods
sub
test
mov
in
ljmp
lcall
out
add
cli
fs
aam
rcrb
incl
repnz
ret
aad
subl
je
push
ljmp
or
insl
out
sahf
push
or
cli
fidivrl
push
enter
mov
fsubp
data16
inc
jb
ret
fstp
or
ja
xor
pop
cli
mov
push
cli
push
dec
xor
std
mov
pop
out
lock
hlt
outsl
lock
and
pop
mov
mov
test
fsub
jne
mov
ljmp
xchg
push
loop
dec
sub
jle
push
sbb
enter
out
leave
push
inc
mov
mov
jmp
dec
cmpl
hlt
sub
inc
inc
mov
jge
adc
adc
mov
lds
jmp
cmp
fwait
push
mov
jmp
shll
mov
rcr
and
sub
and
decl
push
sbb
mov
orl
aaa
nop
test
cld
idivl
add
mov
loop
in
das
jmp
mov
mov
fidivrs
rcrb
mov
mov
cmp
mov
imul
ljmp
notb
cli
iret
mov
movsl
daa
test
test
mov
jns
leave
inc
ljmp
in
and
fdivr
negb
cmp
xlat
jbe
repnz
xchg
nopl
or
mov
jg
popf
and
iret
lock
and
stc
loop
fidivrs
faddl
pop
jns
sbb
lcall
sarb
mov
inc
mov
sahf
mov
add
call
cmp
xor
lods
or
lcall
dec
andb
inc
mov
dec
mov
fucomi
mov
pop
cmp
and
jo
call
mov
fmul
mov
lret
pushl
js
or
fnstenv
jp
in
dec
aad
lcall
subl
loop
cmp
and
test
sbb
out
inc
jg
or
ret
test
outsb
popa
es
fwait
insl
lret
mov
jecxz
int
mov
outsl
dec
stc
dec
into
mov
and
jmp
mov
sbb
jae
jg
pop
cmovae
sbb
ja
out
push
loop
mov
popf
xchg
repz
pop
cmpsb
mov
fimull
cmpsb
out
idivl
decl
mov
sbb
cld
ljmp
ja
dec
imul
jns
nop
mov
je
gs
xorb
fisttpl
cs
call
incl
lock
mov
pushf
ja
shrl
aam
cltd
pop
jge
test
stos
sbb
cmc
ljmp
adc
push
pop
xlat
sbb
push
rorb
sub
decl
mov
push
cltd
xor
or
clc
xor
fldt
push
cmpl
mov
leave
lds
cmp
xlat
data16
into
xor
clc
aaa
pop
divb
mov
push
jg
stos
repz
jbe
xchg
addr16
shll
test
inc
mov
mov
add
dec
mov
pop
loopne
test
cmc
inc
adc
sbb
push
add
scas
jno
out
pop
cld
lcall
daa
data16
cmp
mov
sbb
aaa
int3
js
push
jg
imul
mov
mov
cltd
sbb
jns
ror
push
sbb
ljmp
je
xorl
inc
cmc
adc
push
inc
test
decl
ljmp
xor
cmp
cmp
adc
nop
push
out
push
jl
sub
and
sti
call
ss
jp
ret
push
in
inc
mov
ficoml
jmp
xor
sbb
lea
inc
push
sub
stos
mov
ds
test
sbb
cmp
cld
dec
fstps
imul
mov
mov
std
push
mov
inc
cmp
xor
addb
xchg
fiaddl
mov
push
jmp
test
repz
xlat
push
iret
cmpsb
fdiv
xchg
or
leave
adc
lock
add
jno
inc
ljmp
cmpsl
and
mov
sub
ss
mov
loopne
adc
lcall
sbb
mov
mulb
jmp
mov
pop
cs
dec
mov
mov
lods
jmp
mov
xlat
iret
dec
jo
and
imull
jg
lods
lcall
sbb
call
int3
sub
into
aas
xchg
mov
push
sbbb
subl
leave
in
fildl
movsl
sbb
imul
cmp
push
mov
push
movsl
outsl
sub
inc
in
daa
faddl
mov
cmpsl
mov
xor
imul
jbe
decl
push
aaa
pop
sbb
mov
jp
xchg
xor
cmp
adc
adc
test
imull
inc
fisttpll
sub
push
sub
popf
dec
jg
push
lcall
push
adc
insl
cmpsl
xchg
lea
and
cwtl
jg
fdivp
fcomp
movsb
mov
cltd
es
sahf
inc
rcrb
pop
xchg
lahf
scas
sub
lret
lds
fmuls
mov
mov
adc
sbb
call
add
rcll
std
cltd
mov
cltd
subl
pusha
bound
mov
cmpl
add
test
cmp
add
lods
ss
test
or
mov
or
or
mov
fs
pop
je
clc
xchg
outsl
test
pop
adc
cli
call
dec
loop
mov
sub
scas
dec
push
jge
mov
ljmp
test
adc
lcall
mov
or
jmp
add
and
sbbb
cmp
push
decl
std
pop
add
ja
out
cmp
inc
shlb
dec
and
mov
jl
mov
and
outsb
inc
pop
pop
lods
rol
shrl
loop
std
ljmp
rcrb
add
cmp
push
push
mov
in
cmp
fcoms
pop
mov
xchg
repnz
insl
xchg
call
sar
push
sbb
stc
rclb
jbe
call
loope
jg
test
sub
pop
or
loopne
jb
ja
pop
stos
jg
xchg
clc
push
lods
out
subb
jl
mov
call
add
call
hlt
pusha
pop
xor
jnp
seta
enter
xchg
sub
ljmp
mov
add
das
jne
add
push
imul
sbb
call
in
sbb
mov
outsb
mov
cmp
xor
add
sub
std
decl
ret
adc
push
cli
mov
jl
push
daa
ficomps
push
jb
lcall
pop
repnz
cwtl
leave
outsb
out
data16
and
je
mov
insb
fs
push
pop
xchg
xchg
icebp
ja
cwtl
sarl
mov
sar
lods
pslld
inc
rorb
inc
in
aas
fwait
ds
call
fistpll
cmpsl
scas
fcomps
mov
add
cmpsb
test
lods
out
call
jmp
xchg
call
dec
rclb
mov
shrl
push
jge
decl
sti
aad
pusha
test
jns
cmpsl
aad
cmc
incl
bound
xor
cltd
fyl2xp1
cmp
mov
decl
mov
pop
xchg
adc
test
cld
jecxz
setnp
pushf
jmp
lcall
cmp
dec
xchg
ljmp
sarl
mov
xchg
rclb
outsl
cmc
lcall
fwait
and
mov
mov
mov
int3
jmp
jecxz
jl
push
and
and
push
loope
lods
mov
pop
imul
out
dec
jb
or
add
ljmp
in
cmp
pusha
mov
adc
xchg
leave
sbb
imul
add
mov
push
insl
add
fs
jmp
jl
je
jp
push
inc
in
int
add
clc
das
icebp
jbe
push
inc
orl
mov
jecxz
pop
jns
pop
or
cmp
or
sbb
lea
jmp
cmpsb
adc
sbb
icebp
stos
stos
mov
das
ljmp
pop
decl
mov
sub
cli
imul
cmp
fucomip
or
aad
push
push
or
loopne
xchg
mov
add
xchg
es
xchg
loopne
adc
incl
orb
cmpsb
adc
out
out
jmp
ror
jmp
mov
push
pop
sbb
dec
and
mov
decl
pop
in
mov
repz
cmp
mov
xchg
clc
lcall
nop
dec
dec
sub
pop
cmp
cli
adc
sbb
ret
hlt
add
icebp
mov
inc
add
ret
mov
or
mov
pop
lahf
jecxz
jp
fdivrs
push
cmp
outsl
mov
or
pop
movsb
in
lock
mov
jg
inc
mov
out
loope
mov
les
gs
test
dec
mov
loop
pop
inc
arpl
inc
pop
mov
xor
loope
test
ja
adcl
pushl
sbb
jg
jecxz
outsl
xchg
and
xorb
insb
inc
inc
xlat
fisttpll
shrl
mov
inc
call
push
test
mov
cmp
in
call
ss
cmc
mov
inc
push
lret
xchg
cmp
out
movsl
insb
sbb
popf
inc
js
push
das
pop
mov
call
cmp
cmp
repz
rorb
jbe
jnp
mov
or
call
jmp
in
add
test
pusha
dec
lods
or
pop
loopne
jno
inc
test
mov
or
xchg
incl
nop
negl
push
inc
ljmp
pusha
jg
pop
sbb
movsl
repnz
call
sub
cwtl
les
lods
mov
popa
and
das
mov
sbb
cmp
cld
aaa
sub
xchg
or
sbb
cmp
sti
lods
lcall
add
popa
mov
scas
and
add
je
ficoml
incl
mov
fs
stc
xor
or
sbb
in
outsb
xor
mov
int
xor
mov
cmp
mov
jmp
xchg
loopne
hlt
repz
push
lret
adc
aaa
sbb
jecxz
jp
outsb
cmc
call
lea
mov
push
xor
fildl
jmp
jp
jg
xchg
cmp
adc
movb
shrb
jns
imull
jmp
and
test
lods
mov
insl
pop
dec
push
jo
jl
adc
jbe
jmp
push
or
push
jle
mov
xchg
jb
rcrl
incl
cmp
popa
or
les
test
xchg
mov
pop
repnz
jmp
stos
fs
int3
jb
hlt
insb
xchg
sarl
popf
jmp
cltd
dec
fldt
cmp
lock
loope
shrl
jle
sbbl
xor
pop
xchg
repnz
in
or
popf
sbb
and
test
negl
pushl
stc
dec
sbb
dec
inc
cwtl
xor
icebp
pop
sub
xor
out
jnp
inc
clc
fistpl
out
fiaddl
mull
pusha
jp
loope
in
cmc
pusha
and
cmpsb
cld
lea
movsl
sub
pushl
cmpsl
sbb
pop
push
or
sti
sti
and
dec
in
adc
mov
jmp
insb
bound
fldenv
xor
pop
mov
add
cmp
and
lret
insl
js
ljmp
stos
mov
jns
imul
pop
adc
xor
and
inc
imul
aas
cltd
das
mov
aam
inc
pop
mov
rcll
xlat
js
sbb
outsl
cmp
in
aaa
sarl
mov
add
dec
push
fwait
dec
mov
push
xchg
and
pop
xor
fbld
call
loop
fwait
dec
mov
lock
out
mov
jmp
outsl
in
add
push
pop
mov
push
js
mov
jp
cmpsb
xor
inc
bound
add
dec
inc
test
cli
push
dec
clc
and
enter
and
jno
sub
sbb
xlat
push
popf
pop
fidivrl
sarl
pop
mov
sub
into
cmpsl
xor
stos
adc
test
das
cld
mov
push
test
not
pop
fwait
sbb
fwait
mov
jle
mov
jmp
in
shll
sbb
cmp
xchg
call
clc
lcall
mov
fstpt
push
lods
add
push
lods
inc
aam
jns
mov
rcl
cmp
pop
or
pop
jmp
dec
and
sbb
adc
sbb
dec
add
jmp
frstor
sbb
pop
inc
xor
sbb
xchg
push
cwtl
xchg
mov
ror
fwait
lret
inc
and
das
std
test
jae
push
movl
jg
ljmp
xchg
mov
jno
jno
loop
enter
ror
sub
aam
inc
ret
jg
clc
ja
mov
sti
push
cmc
pop
pop
or
popf
and
daa
inc
push
repz
fistpll
adc
sbb
je
or
fsubl
call
xchg
fisubrs
ja
pop
ds
add
jg
mov
mov
xchg
js
mov
mov
call
shrl
ss
out
pop
lret
movsb
mov
mov
ja
fcoml
jbe
daa
fldl
jg
je
push
xchg
repnz
cmpsl
cwtl
xlat
xlat
clc
outsl
or
ret
into
mov
incl
push
arpl
mov
inc
xchg
mov
xor
xchg
jno
xchg
dec
insb
mov
ror
mov
jmp
xor
push
inc
loope
or
test
xor
xchg
xor
popf
fcmovbe
pushl
shll
mov
mov
cmc
in
test
out
mov
sbb
mov
fwait
xor
iret
adc
enter
adc
xor
and
call
and
pop
and
adc
inc
xor
mov
jmp
sbb
mov
jecxz
divb
add
jecxz
jmp
sbb
in
jnp
jl
stc
out
ret
mov
sub
jmp
push
dec
push
test
adc
mov
test
ljmp
lock
addr16
in
and
mov
ljmp
ljmp
in
test
pop
mov
cmpsl
lods
jno
call
in
xchg
loopne
xlat
outsl
and
push
arpl
push
or
mov
cmp
arpl
fwait
mov
xor
mov
fisttpll
mov
jno
push
stc
push
mov
idiv
lcall
inc
mov
insl
lods
jp
mov
xlat
xchg
xor
cmp
mov
pop
jne
lods
fnstenv
loopne
mov
stos
adc
pop
out
mov
jl
dec
outsb
jp
call
int3
out
xor
adc
mov
fstpt
out
scas
int
pop
pop
dec
or
push
aam
or
movsl
jne
dec
cmp
mov
lea
test
hlt
cmp
mov
inc
fdivrl
and
mov
mov
repnz
sub
roll
outsb
movsb
ds
dec
add
jne
and
inc
in
call
ljmp
pop
cmc
orb
divb
movsb
gs
mov
inc
mov
loop,pn
leave
inc
aad
out
push
ret
decl
mov
dec
hlt
mov
fs
imul
pop
dec
pop
cmpsl
lret
sub
inc
lds
inc
cmp
into
scas
cmp
add
dec
aaa
push
loop
pop
jno
mov
and
inc
push
xchg
mov
jg
aad
mov
daa
lret
daa
movb
push
adc
pop
insl
shlb
insb
or
pop
shlb
aam
dec
mov
leave
call
jmp
ss
pop
mov
lret
ljmp
mov
fucom
loopne
sbb
lret
mov
jo
pushl
sub
aam
sbb
test
inc
in
and
fisttpl
sbb
fucomip
mov
out
or
push
pop
xchg
push
ss
out
sbb
fsubl
call
data16
xor
push
lahf
jg
cmp
mov
cld
push
je
sub
decl
mov
xchg
loop
mov
cmp
cmpsl
arpl
adc
inc
fdivrl
cli
xchg
iret
ds
std
loope
xchg
movsl
mov
inc
iret
xchg
and
and
ficoms
inc
popf
ljmp
ret
bound
sbb
inc
xchg
mov
repnz
pusha
arpl
fmull
aam
fbstp
mov
fldt
pop
sbb
adc
lds
pop
clc
stc
sbb
adc
cmpsl
mov
test
stc
xor
sbb
pop
clc
fsubl
adc
test
jb
loope
jnp
and
arpl
cld
mov
xor
mov
icebp
loope
fildll
rol
dec
mov
jae
decl
add
scas
cmp
sbb
lock
dec
mul
sahf
sbbl
or
in
fnstsw
ljmp
adc
add
rcrl
sbb
cwtl
dec
insl
xor
mov
stos
hlt
xchg
nop
mov
xlat
test
cmp
sar
incl
adc
inc
loop
pop
inc
jo
mov
lods
mov
jmp
lcall
decl
ficompl
scas
fistpll
lods
incb
scas
or
lcall
call
pop
xor
fildl
ljmp
mov
push
sbb
add
or
test
fnstenv
pop
daa
xchg
pop
pop
or
test
mov
movsl
lea
aaa
data16
mov
andl
mov
jmp
push
insl
xchg
push
mov
jmp
jnp
cmc
dec
test
dec
jnp
mov
xchg
adc
and
pushl
ja
loope
mov
lea
loopne
push
sbb
push
enter
call
pop
mov
fucompp
push
lret
cs
rolb
mov
aaa
jnp
cmp
sub
imul
insl
adc
ror
pop
push
push
stos
mov
dec
test
push
enter
pop
pop
jmp
dec
add
popa
jae
imul
jmp
push
pusha
insb
jge
adc
mov
sahf
jno
ljmp
sarb
mov
mov
mov
add
arpl
dec
mov
imul
xlat
cld
pop
clc
ljmp
jge
xor
into
ljmp
loop
mov
xchg
xchg
test
pushl
pop
dec
es
addb
pop
adc
mov
lcall
fiadds
cmpsl
mov
outsb
mov
mov
cmp
push
incl
jle
out
fsubrl
push
bound
cmp
dec
mov
and
iret
ljmp
icebp
das
movsl
dec
fldcw
into
and
aad
lods
incl
pop
lcall
cvtps2pd
mov
pushl
clc
incl
das
sub
cli
das
es
cmp
addr16
rcr
std
inc
inc
push
out
xchg
mov
ss
nop
stc
icebp
fstpt
lods
jne
repnz
and
mov
loop
mov
pop
add
sti
fucomip
test
cmp
pushf
cmpsl
test
xchg
stos
loopne
cmc
jg
inc
jp
push
stc
xor
int3
sbb
lods
push
fs
call
scas
scas
stc
dec
sbb
mov
out
inc
mov
fucomip
push
ja
test
inc
mov
mov
test
sbb
push
pop
in
call
insb
leave
xor
push
pop
cmpsb
push
and
and
into
jge
inc
fdivl
and
loop
hlt
sub
mov
sbb
or
adcb
mov
mov
fbstp
shrl
sbb
ljmp
cld
incl
jae
rcll
loopne
push
rolb
xchg
ret
or
dec
rolb
fwait
jp
inc
call
sahf
inc
pushf
pop
pop
into
xor
ja
mov
ja
jmp
imul
lock
movswl
xchg
bound
or
lods
inc
data16
decl
imul
mov
and
aam
and
or
adc
decl
shl
insb
shr
push
push
scas
dec
push
mov
imul
jmp
xchg
push
inc
iret
xlat
jb
dec
daa
popa
add
call
incl
mov
pop
push
out
add
fsubl
mov
ret
xchg
lods
and
jp
enter
push
push
jbe
ljmp
inc
movsb
imul
dec
add
decl
sarl
out
xchg
loop
jmp
add
cmp
jp
stos
lahf
test
out
aas
into
xorl
rol
incl
decl
jecxz
psrld
loope
les
cld
imul
mov
mov
lods
mov
dec
mov
xor
mov
mov
in
notl
push
jmp
adc
and
cmp
outsb
mov
sbb
mov
jne
out
adc
dec
mov
jmp
pop
sti
imul
setns
mov
sub
std
inc
aad
jmp
pushl
decb
xchg
mov
xor
push
or
xchg
orl
adc
gs
sbb
pop
push
sti
mov
sbbb
fcmovb
dec
ljmp
fistpll
mov
movsl
cmp
pusha
sub
and
incl
jmp
jp
cmp
ljmp
xor
push
mov
lock
incl
stc
adc
insb
mov
insb
push
sahf
ss
inc
cltd
icebp
cmp
mov
mov
pop
call
test
xchg
cld
js
es
fdivrp
decl
xchg
xor
movsl
add
test
or
aam
push
orb
pop
std
inc
mov
push
out
mov
fbstp
xchg
jp
sub
sub
push
icebp
loopne
jae
mov
inc
xor
scas
mov
jg
cmp
int
mov
je
sar
and
stc
or
test
mov
jbe
test
aam
cmp
fildl
add
cmp
jmp
jle
mov
insb
xor
mov
ljmp
cmp
push
outsb
enter
pop
call
cmc
jle
cs
fdivs
mov
add
call
lea
lret
pop
clc
jae
mov
cld
imul
and
roll
mov
nop
outsb
daa
pusha
shrl
and
and
scas
push
lret
subb
adc
pushl
dec
sbb
out
scas
jb
mov
jp
or
rcrb
jecxz
jg
sbbl
in
pop
sub
scas
test
in
mov
mov
and
lcall
std
lret
imul
sub
into
in
xchg
leave
adc
dec
jo
dec
repnz
mov
leave
or
int3
jbe
test
adc
stos
dec
dec
sbb
mov
sub
ljmp
int
aam
jmp
sbb
and
fcoms
outsb
outsl
aaa
insl
roll
test
call
das
push
sbb
cmpsb
mov
cld
jo
mov
sbb
mov
js
dec
mov
jbe
leave
push
dec
shlb
les
mov
mov
fcoml
cmpsl
ror
out
mov
lods
sbb
insl
cmp
incl
jne
loopne
enter
mov
inc
je
mov
dec
add
aaa
pop
jle
pop
xchg
data16
xor
push
inc
inc
decl
int
mov
xchg
icebp
pushl
jle
dec
adc
lcall
icebp
jp
bound
cmpsl
stos
pusha
test
insb
cltd
or
adc
in
cs
loopne
xor
mov
jp
loopne
push
add
jo
pusha
popa
mov
filds
call
sbb
mov
nop
pop
in
std
mov
lcall
test
mov
mov
lods
jle
add
add
adc
xchg
pop
and
insb
decl
add
fildll
jae
pop
popf
lahf
or
sbb
xor
sbb
es
enter
aas
or
ljmp
fisttps
xchg
fnstcw
jmp
notl
gs
dec
stc
cli
fucomip
call
sarl
pop
imul
or
cltd
movsb
in
jb
xchg
mov
and
inc
xor
pop
xor
sti
mov
pop
lahf
aad
cmp
push
das
ret
dec
pop
lods
inc
xchg
inc
fwait
inc
insb
test
mov
push
pop
int
in
je
cmp
jp
cmp
iret
loope
imul
movsl
mov
mov
xchg
push
mov
hlt
std
pop
rol
cmp
sti
lret
cmp
and
nop
pop
pop
aaa
xor
jp
mov
xor
incl
dec
pop
jl
dec
inc
push
mov
movl
cmc
sub
scas
xchg
push
jle
stos
dec
popa
jno
pop
stos
loope
cltd
lcall
mov
mov
xor
call
lock
lcall
clc
jnp
insb
mov
das
std
pushl
sbb
imulb
adc
and
fldt
decl
insb
lock
stos
push
int3
mov
or
add
incl
sub
aaa
ljmp
dec
repnz
lret
xor
fildll
lcall
ljmp
xchg
fdivrp
cltd
sbb
and
cmp
jge
out
cli
ljmp
das
push
push
mov
cmc
mov
test
xchg
das
shrb
push
shlb
stc
enter
je
pusha
loop
imulb
jo
aaa
pop
cli
in
call
xor
sub
add
cmpsl
jg
dec
rcl
cs
pop
mov
cmp
popf
je
mov
cmp
cli
aaa
cli
call
mov
das
imul
mov
pop
mov
add
push
mov
loope
sbb
or
inc
loope
or
ljmp
clc
add
cmpsb
mov
aam
dec
sbb
stos
insl
clc
dec
jae
lods
cwtl
outsb
out
repz
mov
ljmp
cmp
fcoml
hlt
dec
aam
adc
in
cmc
out
xchg
jmp
push
call
inc
mov
dec
mov
dec
pop
or
push
jg
inc
push
jge
cmp
or
push
or
jp
sbb
sub
in
in
inc
cmpsb
cmp
divl
mov
xchg
je
sti
mov
cltd
or
jb
jo
fmull
popf
out
xchg
fwait
jnp
mov
jp
shlb
jg
adc
loopne
push
xor
jg
push
mov
xor
sub
mov
sub
in
out
test
call
aaa
sub
fdivr
mov
imul
push
lcall
xor
cmpsb
out
dec
jmp
cmpl
test
ffree
test
pushl
cmc
and
jl
or
and
inc
iret
jno
and
mov
imul
sbb
std
mov
jmp
mov
fs
xor
ljmp
popl
cmp
int
jne
psubsb
jmp
shlb
hlt
add
mov
xor
adcl
ret
pushf
lock
mov
insl
jnp
sti
scas
out
sub
ss
ljmp
ret
xchg
adc
jle
cmp
pushf
xlat
push
mov
mov
cld
fsubs
cmp
loope
inc
pushl
xchg
insl
mov
shll
sti
mov
into
cmp
pop
mov
ret
push
sbb
sbb
add
jae
fidivl
cltd
jmp
cltd
cltd
xor
jl
push
sub
pop
mov
jecxz
inc
sahf
mov
push
jecxz
ret
add
pop
leave
lcall
jmp
iret
in
inc
fwait
dec
cmp
cwtl
scas
dec
in
mov
incl
insb
int3
mov
or
dec
push
sti
xchg
mov
xor
popf
add
pop
call
jno
dec
loop
sbb
push
iret
inc
sub
jl
cmc
and
push
outsl
xchg
xor
jl
push
daa
cli
loope
repz
mov
sti
cmpsb
lcall
les
lea
je
pop
push
xchg
pop
stos
and
cmp
add
mov
lock
cli
lcall
xchg
mov
aad
pop
sbb
imul
sub
jg
pop
icebp
fsubp
inc
mov
jnp
jmp
subl
adc
ret
push
and
mov
ljmp
add
add
mov
sbb
int3
cmp
ret
sbb
mov
cmp
add
stc
fistpll
mov
shll
push
mov
inc
adc
cmpl
xchg
cmp
mov
lret
xor
cmpl
sbb
pushl
push
jae
push
push
xchg
push
jo
insl
sbb
mov
inc
fbld
lock
xor
xchg
cmp
into
test
push
mov
adc
add
fiaddl
inc
popf
xor
out
add
xlat
add
divb
add
pushl
pusha
bound
cmp
or
lods
pushl
mov
sub
dec
sub
daa
jb
pop
sub
stc
mov
cmpsb
out
mov
pushl
hlt
bound
imul
mov
fisttps
repz
ljmp
add
fisubrs
cs
adc
decl
jecxz
pop
aas
cmp
insl
lcall
incl
cmp
orl
and
leave
push
and
loopne
lcall
pop
add
xlat
cs
cmp
stos
xchg
ss
dec
xor
lock
fisttps
pushf
cmp
insl
lret
dec
dec
leave
mov
in
cltd
ljmp
xchg
repz
insb
push
mov
or
xor
rclb
ljmp
xor
cs
pop
or
dec
dec
adc
call
mov
add
int
lahf
rorl
loop
xor
out
std
decl
stos
shll
sub
mov
dec
outsl
clc
mov
stc
insb
loop
out
mov
aad
ljmp
or
adc
pop
sbbb
mov
dec
notb
dec
or
xchg
cli
mov
into
out
imul
sar
jg
arpl
test
icebp
nop
fisttpl
sub
ss
hlt
incl
ds
ss
pushf
test
jl
xchg
mov
xchg
sbb
push
inc
mov
int3
adc
out
pop
sbb
rol
mov
sti
movsl
cli
xchg
mov
ss
jmp
ja
xchg
or
jmp
dec
addr16
sbb
jnp
shll
out
movsl
jmp
into
jne
fs
push
es
jl
and
mov
push
leave
cmp
mov
rclb
fs
pop
lea
aad
xchg
xchg
xor
cli
decl
and
sahf
cmp
pushw
mov
mov
cltd
xchg
call
fisttpll
and
or
rolb
xor
adc
incl
fsts
data16
pop
cwtl
es
aam
pop
pop
lahf
cmp
leave
mov
nop
iret
jo
popf
and
adc
negb
cli
cwtl
add
or
call
xorb
sbb
fldenv
stos
jbe
push
hlt
sbb
popf
pop
lea
fucomip
sbb
adc
and
xorl
xchg
jecxz
in
fs
mov
xchg
mov
clc
aaa
xchg
icebp
das
xchg
add
int
outsl
xor
fdivrs
cmpsl
call
and
xchg
rcrl
mov
lods
dec
fidivs
mov
mov
pop
lcall
xor
jno
sbb
pop
mov
lret
ja
add
jl
add
decl
int
xchg
mov
sbb
inc
leave
lahf
pop
cmc
add
flds
pushl
call
gs
test
and
push
popf
pop
in
mov
incl
inc
xchg
push
clc
cltd
cmp
insl
scas
addr16
aaa
leave
jg
je
cmp
loope
sar
add
cmpsl
inc
inc
add
ds
or
pop
gs
lcall
adc
or
inc
xchg
cs
orb
lret
xchg
rorl
push
aaa
call
pop
ficomps
xor
mov
adc
dec
inc
cli
mov
xchg
clc
fldenv
es
push
orb
ds
call
mov
fstps
and
add
adc
call
test
lcall
std
pushl
cmpsl
xchg
and
cld
outsb
xor
inc
ret
std
cli
dec
out
jbe
jbe
cmp
sub
shll
sub
xor
cmc
cli
push
icebp
mov
insb
and
jno
je
jo
in
pop
jne
fistps
pop
cs
sbb
sahf
inc
rcl
lods
or
push
pop
add
xchg
test
cwtl
insb
jmp
lds
icebp
sbb
or
inc
outsl
jp
aaa
fildl
dec
sub
cmp
testb
and
decb
ret
push
scas
mov
out
xchg
fwait
pusha
enter
jmp
dec
ja
subb
fs
dec
outsl
cmc
pushl
scas
jl
notb
xor
adc
call
lods
mull
icebp
and
pop
outsb
adc
mov
test
ret
cwtl
sbb
dec
xor
pushl
lock
aas
mov
pop
xchg
cld
jnp
ret
clc
iret
scas
cmpb
aad
sbb
aad
hlt
jmp
mov
dec
sbb
scas
iret
mov
jne
xor
outsb
pop
inc
call
dec
jbe
sub
push
sub
loop
je
or
sub
jo
xchg
mov
vpmacssdd
pushl
push
andl
out
jo
call
ljmp
mov
negb
outsb
cmovge
repz
into
decl
loopne
cmp
add
jge
rolb
mov
inc
mov
jmp
push
pop
aam
icebp
lcall
cmpsl
shlb
pop
inc
loope
cltd
add
out
ret
add
dec
sbb
ja
fwait
lods
ljmp
mov
mov
jg
test
jne
orl
js
loope
jmp
call
lods
mov
ffreep
out
out
and
popf
dec
ficomps
xor
out
mov
ljmp
pop
lock
add
add
cmpsb
and
lcall
stos
jae
out
add
jmp
popf
fucompp
dec
xor
jne
loope
pushf
call
sub
xchg
inc
loopne
sub
mov
xchg
jmp
jge
repnz
lods
jns
jp
addr16
sbb
incl
mov
cld
rolb
add
es
scas
dec
mov
decl
imul
mov
sub
push
or
inc
cwtl
popf
daa
jg
pop
sub
test
shll
loop
inc
or
push
mov
loopne
mov
rorl
xchg
stos
pushf
adcb
incl
and
pop
fwait
pop
pop
xchg
pop
xor
loope
loope
pop
sub
cmp
lods
inc
lcall
js
push
push
loopne
into
scas
cmp
xchg
fsubrl
mov
mov
mov
sub
shrl
jmp
xor
lret
cmp
mov
fcoms
ljmp
test
sub
scas
in
daa
lahf
sar
pop
add
pusha
cmp
xchg
cmp
call
jecxz
mov
mov
cmp
add
repz
scas
fwait
mov
or
mov
loope
arpl
pop
outsb
mov
stos
jno
ret
je
dec
fs
icebp
iret
es
adc
popf
mov
xor
sub
repz
push
call
cli
lcall
into
and
aad
xchg
jge
jg
lcall
lods
ficompl
cmp
cmp
mov
cs
ret
pop
ljmp
and
xor
lods
fwait
enter
aas
pop
rep
je
call
mov
fwait
mov
ds
loopne
push
in
xchg
push
mov
cmp
xchg
imul
js
bound
add
cmp
jbe
stos
jb
push
outsb
insb
dec
inc
cli
cltd
lods
mov
js
sbb
lods
pop
in
out
xchg
shlb
lret
je
mov
mov
daa
and
int
ss
xchg
add
or
mov
pop
mov
in
xchg
hlt
jmp
mov
lret
outsl
inc
jge
int
loope
loop
pop
mov
mov
mov
ds
add
mov
dec
hlt
fists
mov
imul
mov
mov
sar
insl
jg
push
xchg
dec
inc
cld
mov
sub
mov
or
mov
push
std
insb
xchg
pusha
mov
sub
jns
push
dec
mov
test
insb
lock
stos
test
pop
test
incl
push
mov
xchg
xor
scas
jp
inc
push
cwtl
and
jg
lcall
shlb
aaa
shlb
xchg
push
mov
push
mov
call
movsl
inc
icebp
in
lods
inc
jle
xchg
test
cwtl
shll
clc
cmc
fildll
aam
cmc
pop
mov
ljmp
hlt
adc
cmpsb
dec
mov
mov
dec
or
dec
fbld
mov
fcmovu
cmp
dec
inc
scas
mov
adc
into
imull
unpckhps
sub
mov
idiv
incl
out
or
mov
das
dec
imul
sbb
addb
out
lcall
jmp
dec
xchg
and
push
std
mov
cwtl
in
iret
sarl
jmp
sub
mov
stc
aaa
cld
and
pop
xchg
inc
popa
pusha
popa
jmp
mov
imul
jns
push
sbb
in
in
xchg
out
sub
incl
add
leave
jns
pop
cltd
jecxz
notb
cmp
testl
loope
cmp
je
adc
mov
xchg
add
testl
xchg
loop
dec
jno
push
addr16
cmp
lcall
daa
je
xor
mov
cmp
ja
sbbb
lcall
cmp
ja
mov
test
mull
or
inc
loope
int3
into
sti
std
sti
adc
and
cmc
mov
sti
adc
je
mov
xchg
and
cmp
nop
sub
jle
lods
fucomip
jg
inc
jecxz
bound
push
test
inc
pop
or
and
jl
insb
adc
push
insb
xchg
mov
jl
and
inc
arpl
lds
ss
pop
jle
stc
add
xor
idiv
mov
arpl
pop
cmp
dec
mov
jmp
jo
mov
movsb
movsb
mov
and
shll
cwtl
mov
jb
or
popa
mov
fiadds
dec
jg
clc
sub
sbb
leave
push
inc
xor
xchg
xchg
mov
out
cltd
sahf
xor
mov
cmp
pop
push
movsl
ss
mov
mov
lret
cs
lcall
jne
push
and
xor
pop
xor
filds
and
push
sbb
enter
pushl
mov
mov
cmp
decl
iret
sarb
outsb
jo
sub
mov
push
adc
push
mov
sbb
das
cmc
jmp
mov
je
pop
cmpsb
mov
cld
rcll
fxch
incl
jno
jo
push
aam
or
pop
jno
mov
fcomps
call
and
mov
push
cmc
jb
shlb
cmpsb
or
sets
sahf
mov
xchg
mov
inc
stos
cli
adc
loop
pushf
addl
or
push
lcall
adc
push
ret
inc
out
push
push
push
call
push
push
ss
inc
pop
add
adc
nop
imul
test
fdivr
mov
pop
push
cmp
and
nop
push
push
fnstenv
xchg
pop
daa
jl
fstpt
xchg
mov
adc
ret
fnstsw
sub
cmpl
mov
cmp
push
cltd
sub
std
dec
jg
jl
mov
icebp
and
adc
faddp
cmp
cmp
stos
lcall
sbb
in
in
lock
dec
dec
jp
scas
xor
mov
or
push
pop
jg
call
aaa
mov
std
or
dec
daa
cmc
out
sbb
push
into
lea
aaa
push
icebp
xchg
xor
cmp
sar
out
repz
mov
pop
xchg
cltd
popf
and
ljmp
and
jno
sub
scas
push
add
adc
mov
xlat
xor
mov
call
xor
cld
insl
jbe
lahf
jbe
push
mov
mov
fnstsw
pop
inc
call
xor
lock
clc
test
decl
out
and
das
cmp
or
out
jns
sti
pushf
sbb
call
fisubrl
xor
xor
mov
aam
jl
push
sbb
pushl
sti
mov
mov
xor
jp
repz
jmp
mov
mov
xchg
stc
mov
mov
jnp
test
ljmp
or
jmp
in
cmpsb
clc
loope
or
or
je
int
jp
lcall
insl
loope
cmp
test
lods
shlb
and
mov
enter
or
ljmp
push
pop
push
jmp
popl
movsb
pop
leave
mov
adc
jmp
inc
xchg
xchg
mov
fucomip
call
xor
jns
add
jo
sub
int3
lret
jmp
lahf
outsb
jne
incl
dec
out
jecxz
sti
xchg
rclb
rcr
mov
sub
enter
jmp
mov
pop
rcr
scas
out
sub
xchg
in
je
out
lock
out
mov
jg
fidivs
jno
fcomi
in
jbe
insb
test
or
sub
loop
call
sub
aad
ja
push
and
andb
sub
loop
push
je
push
loope
out
in
cwtl
jne
add
call
movsl
inc
cld
inc
xlat
sub
fiaddl
out
xchg
and
outsb
es
decl
shl
adc
cmp
jmp
xlat
lods
xor
adc
xchg
lahf
mov
jle
leave
mov
or
jg
lcall
xchg
push
sbb
inc
jb
mov
mov
or
lock
sbbb
push
rolb
sub
sahf
mov
ret
and
ljmp
jg
sub
mov
xor
jno
out
ljmp
jg
imul
pop
ja
pop
fs
hlt
fists
jmp
lcall
loopne
test
dec
pop
jecxz
cmp
lods
and
leave
jbe
or
ds
aam
sub
lea
xchg
jbe
jno
sbb
mov
jge
mov
mov
fs
aad
pop
push
aas
sbb
xor
cmp
rcrl
lods
mov
sbbb
iret
int
cld
sub
lods
push
pushf
push
sarb
das
cmc
fs
jnp
inc
jp
out
data16
jge
lods
ljmp
hlt
decl
pop
cmpsl
sub
cmp
pushf
push
mov
fucomp
push
shlb
cld
incl
movsl
bound
cmpsb
call
and
or
or
mov
cmpsl
aas
add
sbb
cli
dec
push
adc
push
test
ljmp
std
and
mov
sbb
into
xchg
xchg
mov
movsb
xchg
dec
gs
fbstp
hlt
test
fisttps
xchg
hlt
cmp
ljmp
push
jmp
jp
jle
filds
cmpsl
jle
xchg
mov
mov
es
fdivrs
fcmovbe
repz
and
pop
xor
rorl
pop
mov
lcall
cld
call
or
cltd
push
fcmovbe
cltd
mov
lods
or
or
rcrl
cmp
mov
push
sbb
clc
pop
je
pop
add
repnz
mov
push
jb
arpl
lcall
cmp
xchg
ja
test
cmp
stc
xor
mov
fisttpl
mov
lret
int3
and
mov
test
mov
push
jl
mov
fsubl
xchg
ret
jl
sti
test
fnstcw
in
jmp
cmp
xor
cmp
push
or
cld
pop
nop
subb
aaa
call
pushf
je
jnp
es
popf
aas
hlt
lcall
cmp
dec
out
outsb
adc
ss
cmp
push
movsl
sbb
mov
xor
xor
sub
outsb
xchg
push
push
lods
jl
cmc
push
xchg
mov
nop
insb
mov
dec
mov
push
mov
jmp
data16
into
ret
stos
pop
aaa
mov
sub
or
movsb
stos
dec
popa
xchg
pop
dec
sbb
scas
outsb
lock
mov
sbb
aaa
iret
cld
xchg
dec
rclb
jge
mov
outsb
cld
jg
sub
ret
pop
inc
cmp
jmp
push
pushl
adc
aas
enter
push
adc
mov
jmp
push
push
push
and
scas
jo
and
or
addr16
mov
add
mov
outsb
and
lret
into
movsl
jle
arpl
jg
ljmp
fldt
call
ss
xchg
lock
pop
lock
mov
xchg
sbb
ret
fs
push
lods
test
shrl
inc
fcmovnb
xchg
cmp
jo
psubsb
ret
inc
decl
insl
mov
test
dec
jmp
loop
ljmp
test
mov
mov
dec
xchg
mov
andb
daa
add
mov
call
xchg
mov
inc
divb
sbb
cli
jbe
sub
add
fdivr
stos
inc
cmc
adc
je
enter
sub
pushl
add
lahf
dec
out
jmp
xor
jbe,pt
cmp
sarb
xor
fists
jge
sbb
cmpsl
addr16
lcall
sub
ret
pop
test
or
movsl
loop
jg
mov
ss
and
xchg
loop
stc
cmpsb
mov
inc
or
fists
xor
xchg
jae
cmpl
mov
jp
mov
dec
pop
fmull
enter
std
sbb
fisubrl
movsl
popa
pop
shl
add
cmp
incl
sub
subb
mov
arpl
pop
cmpsl
imul
cwtl
call
xchg
es
sahf
and
and
in
mov
and
std
lcall
mov
dec
jp
insl
mov
adcl
ljmp
adc
pop
test
fdivl
pusha
aad
incl
jecxz
lods
mov
and
mov
mov
pop
ljmp
pop
pop
insl
fisttpll
insb
add
push
call
sbb
aas
xchg
popf
mov
xchg
sub
mov
pop
or
pop
aas
fprem
jns
ja
rorl
lods
mov
cltd
or
aas
or
popf
in
icebp
adc
push
stos
aas
nop
xorb
mov
push
lock
sar
mov
lret
mov
jmp
mov
cmpsl
jge
adc
adc
jl
pushf
std
push
lock
and
cli
sub
cli
sbb
jge
sbb
mov
mov
aaa
dec
rcrl
jp
jge
scas
pop
adc
outsl
dec
nop
ljmp
icebp
lcall
mov
mov
mov
jns
xchg
jb
ljmp
xor
or
idivl
jl
loope
sub
and
pop
jb
lret
icebp
cmp
lcall
xchg
sbb
dec
fimuls
ja
inc
repz
ret
xchg
daa
loopne
dec
push
je
jmp
mov
mov
sub
loop
jno
in
mov
ljmp
lods
daa
or
xlat
adc
ss
add
fnstsw
jmp
mov
ficomps
cld
popa
ja
mov
mov
xor
insl
pushl
clc
aaa
mov
jp
gs
rcll
sbb
mov
sub
mov
jl
mov
adcl
jg
incl
nop
mov
fnstsw
ljmp
or
pusha
fwait
xor
call
adc
mov
push
pop
ja
incl
lea
mov
xor
lret
sub
mov
test
cmp
push
sub
js
push
xchg
xlat
xor
leave
decl
sub
xor
add
dec
and
dec
push
mov
and
lods
xor
dec
or
insl
xchg
int
sti
jbe
dec
outsl
ljmp
and
lods
std
mov
cmp
out
in
dec
ss
mov
les
mov
inc
and
dec
popf
sbb
jp
jg
adc
sahf
testb
sahf
mov
xor
mov
gs
pushl
mov
pop
imul
lds
loopne
or
jae
ja
nop
gs
icebp
lods
jg
jae
mov
call
and
fadds
call
dec
cld
mov
clc
adc
cmc
or
adc
outsl
cmc
incl
test
mov
scas
jns
cmc
mov
push
call
sarb
push
add
dec
out
mov
fiaddl
cwtl
xor
dec
lcall
std
shr
xchg
imul
or
push
mov
nop
adc
lret
incl
shll
std
pusha
sbb
and
inc
out
jb
je
add
cmp
ret
pop
cli
mov
mov
pop
mov
push
or
cltd
dec
mov
movsb
xchg
xchg
icebp
jecxz
xchg
out
push
lcall
jl
pop
mov
jp
inc
mov
test
xor
mov
mov
inc
sbb
ljmp
loop
push
and
push
cmc
or
div
adc
cld
inc
fs
mov
test
stos
mov
imul
dec
xchg
ljmp
sbb
and
ljmp
loope
js
add
adc
jmp
pop
aas
out
pop
mov
ljmp
imul
sahf
mov
add
testl
imul
xchg
or
lock
cs
sarb
clc
dec
push
cwtl
pushf
jmp
mov
adc
shll
sbbb
sbb
mov
add
jno
xor
lods
or
adc
pusha
repz
pushl
popf
mov
ss
das
pushf
cltd
mov
es
insl
ret
sbb
decl
sbb
inc
out
sub
pop
mov
std
clc
add
pop
loopne
sar
sbbl
inc
pop
push
leave
cmp
outsl
hlt
decl
adc
int3
push
push
repz
jb
xor
std
mov
loopne
loopne
dec
xchg
mov
adc
mov
sti
stos
pop
int3
imul
jg
sbb
add
mov
aas
fwait
or
movl
cld
xchg
pop
std
sub
call
dec
pop
out
xchg
out
xor
cmp
jg
bound
out
aad
mov
pop
lea
repnz
cmp
mov
repnz
and
mov
inc
aad
xlat
call
ljmp
ja
test
jne
lds
loope
xor
incl
ret
jle
ja
push
xor
and
idiv
add
fstpt
lea
fldl
lods
mov
clc
jecxz
mov
mov
push
js
cmp
jnp
sbb
stos
cmpsb
push
or
pop
clc
xchg
popf
out
pushf
xor
mov
push
ljmp
jecxz
into
xchg
pop
sub
loop
cli
mov
pop
nop
jg
mov
dec
lods
xchg
pop
push
push
xchg
and
jnp
aam
rorb
add
incl
out
adc
pop
icebp
cs
stc
push
pop
add
cmp
jb
test
mov
aaa
clc
mov
mov
icebp
or
mov
add
pop
cmp
imul
ljmp
std
sub
aam
mov
test
pop
jb
push
mov
sbb
das
shl
dec
sti
push
push
pop
das
fisubrs
push
jb
jmp
call
or
test
mov
adc
mov
in
hlt
pop
fisttps
dec
jecxz
ljmp
fistpl
and
mov
lret
mov
imul
decb
mov
or
push
dec
pop
notb
add
push
es
cwtl
pmaddwd
out
outsl
rcl
jo
dec
lcall
ljmp
mov
mov
movsb
and
shrl
shl
shrb
jg
loopne
fildl
inc
popf
ror
aas
pop
cli
and
ja
incl
test
dec
loopne
scas
inc
fimuls
and
dec
ss
pop
dec
pop
lods
or
insl
insb
in
mov
inc
inc
cmp
into
movsb
jnp
test
scas
sub
sarb
adc
xchg
or
pop
das
ljmp
stc
nop
mov
mov
inc
loopne
pop
test
sbb
or
jns
enter
lcall
roll
xor
mov
pop
inc
push
leave
xlat
sti
enter
jno
test
lea
pushl
mov
lods
or
xor
adc
sbb
scas
ljmp
xor
hlt
inc
inc
dec
std
fdiv
mull
icebp
into
and
incb
add
lcall
push
in
fisubrs
inc
push
xchg
test
mov
xor
push
add
icebp
aad
xlat
cld
dec
push
mov
ljmp
popf
leave
pop
addr16
in
jo
jl
mov
mov
add
pushl
push
sub
inc
lods
xchg
loopne
std
sbb
xchg
psubd
mov
imul
pop
pop
sbb
mov
cmp
loop
push
es
imul
call
or
cmp
mov
inc
leave
dec
or
pop
push
adc
call
out
sub
xor
mov
leave
les
stos
ljmp
jmp
lahf
test
adc
mov
mov
jg
pop
cli
jg
clc
inc
or
pop
xor
decl
std
mov
pop
and
dec
cmp
sbb
ret
cli
dec
aaa
clc
pop
cld
cmp
adc
mov
frstor
jecxz
add
out
aad
xlat
mov
out
or
je
mov
decl
test
ret
sbb
jae
test
xchg
or
shlb
jmp
xor
push
jno
xor
mulb
sbb
push
mov
lahf
and
js
sti
lcall
std
ljmp
sbb
cs
xchg
cli
mov
cwtl
pop
mov
sti
std
incl
cs
repnz
lea
outsb
loope
and
out
mov
sti
pop
cli
mov
xchg
out
arpl
clc
sbb
test
adc
mov
inc
icebp
decl
test
imul
xor
outsb
inc
insl
leave
int3
stos
push
insb
test
dec
shl
adc
call
push
lods
in
clc
mov
fwait
mov
insb
dec
repnz
ljmp
stc
cmp
pop
fidivs
in
fdiv
jb
mov
data16
mov
in
in
push
xchg
and
sbb
lcall
mov
scas
out
leave
std
mov
sarb
adc
inc
or
arpl
sub
push
pop
addr16
ljmp
pop
push
ja
idiv
cmc
mov
sbb
cmpl
xor
jmp
jns
mov
lcall
xlat
sub
push
jns
rcrb
ret
xchg
stos
xchg
jmp
jmp
mov
imul
xor
xchg
or
dec
sbb
js
add
push
adcl
cmp
xchg
sub
dec
cmpl
sbb
jmp
ret
fs
call
pop
xor
test
in
js
jno
or
or
lcall
cmp
dec
sub
or
bound
xor
je
mov
call
cmp
xchg
mov
mov
push
gs
int
decb
adc
bound
cli
mov
sub
sub
test
int3
in
iret
scas
mov
loop
loop
push
mov
dec
jmp
ja
xor
push
jecxz
pop
loop
inc
test
push
loopne
call
push
std
xor
cmp
incl
mov
call
ja
insl
lods
push
xchg
jns
adc
pop
mov
je
pushl
int3
dec
imul
dec
fcompl
sti
jecxz
xlat
movsl
aaa
lret
ljmp
and
popa
push
sarb
jle
mov
mov
addl
add
out
and
or
call
fmuls
sbbl
xor
pushl
decb
mov
frndint
js
sbb
push
mov
addl
jle
arpl
and
out
cmc
and
mov
ljmp
dec
sbb
jno
mov
xor
pop
shll
jl
push
mov
mov
push
mov
scas
adcl
push
cmp
test
icebp
adc
outsl
sbb
mov
pushl
push
jl
nop
inc
popa
push
pop
mov
cltd
xchg
xorb
pushl
sbb
adc
clc
das
movsb
mov
sbb
je
jp
decl
xchg
and
mov
mov
lret
testb
aas
mov
lods
pop
dec
cwtl
mov
mov
pushl
out
pop
mov
mov
xchg
or
imul
shll
jmp
loopne
push
rcl
jns
adc
dec
ret
jmp
ljmp
lods
negb
lcall
mov
fs
pop
call
pop
mov
lcall
mov
lcall
call
lods
or
rcrl
mov
scas
inc
jno
push
fistpl
incl
mov
es
subb
ret
lret
cmp
inc
or
ret
push
jns
and
push
or
in
decl
fiadds
leave
addr16
inc
and
pop
in
or
daa
mov
sub
pushl
xor
or
dec
cmp
adc
imul
push
mov
stc
xor
jg
ficoml
cmp
mov
je
inc
nop
mov
jo
and
cmp
insb
sub
popa
pop
mov
and
pop
inc
cmpsb
inc
lock
and
mov
mov
cmp
sti
and
dec
push
ljmp
inc
pop
push
fldt
push
aaa
push
clc
mov
push
mov
popa
sbb
ja
leave
xlat
insb
lret
jle
in
jmp
fsubs
mov
mov
loope
ficompl
xlat
mov
sar
call
mov
jnp
pusha
cmp
push
popa
sbbb
inc
jle
add
push
mov
outsl
icebp
mov
fldcw
out
sub
testl
mov
int
mov
lahf
fwait
lods
ret
cmc
incl
fldenv
xchg
xor
jmp
ljmp
in
jmp
xchg
movsl
ljmp
push
cwtl
xor
aam
in
inc
jmp
out
add
push
dec
scas
stos
adc
int3
movntps
xor
dec
negl
xor
pop
std
cmpsb
test
sbb
push
in
stos
xchg
mov
push
xchg
sub
cmp
incl
or
push
xchg
jle
sub
notl
and
mov
fwait
mov
fldt
andb
push
xchg
adc
cwtl
clc
mov
or
mov
decl
mov
insl
xchg
rorl
adc
fisttpl
add
call
mov
jae
les
jo
enter
add
aam
xchg
xchg
fimuls
incb
je
inc
xchg
sbb
push
pop
mov
push
and
call
addr16
subl
jae
sbb
pop
pop
cli
fbld
inc
jmp
mov
jmp
aaa
dec
cs
jg
jle
add
jne
or
push
push
jb
call
xchg
stc
lods
call
clc
shll
add
xchg
das
leave
imul
mov
mov
decl
call
lret
add
ret
jbe
repnz
popa
fs
ljmp
pop
mov
ret
scas
pusha
movsb
in
jmp
aaa
xchg
lcall
ljmp
int3
pop
call
sub
mov
dec
insb
out
shrl
in
mov
jp
out
data16
in
push
sti
xchg
sahf
mov
mov
dec
sahf
pop
pop
popl
mov
add
add
mov
jnp
mov
icebp
decl
cld
outsl
test
push
fldcw
inc
gs
mov
cld
mov
sbb
mov
rolb
fldt
orb
jmp
addr16
ljmp
and
push
sti
cmp
xchg
jge
ljmp
cltd
les
incl
add
daa
ror
or
lcall
test
pop
add
xchg
and
dec
movswl
lret
push
je
pop
rol
xchg
rorl
popa
add
ljmp
inc
inc
lret
add
adcl
into
aaa
and
jmp
mov
mov
push
out
push
mov
test
andl
xlat
int3
adc
xchg
mov
add
in
mov
pusha
hlt
aam
inc
inc
popa
stos
in
mov
jno
sub
or
insb
out
rorb
mov
push
scas
bound
add
fnsave
clc
xchg
mov
andb
pushl
sahf
test
int3
cmp
aaa
inc
insl
push
jne
xor
push
xlat
nop
sub
je
or
scas
addb
jns
mov
fcmove
pop
adc
cs
decl
ret
xchg
repz
inc
pop
das
mov
mov
ljmp
mov
stos
mov
mov
fistl
mov
lods
lods
xor
decl
js
jbe
add
cmp
sub
mov
and
outsl
lcall
mov
dec
arpl
shll
dec
jle
jmp
xchg
incb
jmp
or
daa
or
push
xchg
pop
lret
mov
push
inc
and
lds
hlt
adc
jle
pop
cld
mov
cltd
ret
test
xor
add
cmpsb
cmp
mov
xor
in
loope
push
clc
lcall
push
xchg
icebp
fistl
movsb
pusha
mov
pop
pop
jns
adc
mov
mov
vmaxsd
mov
xchg
mov
outsl
cld
icebp
scas
xor
stc
mov
stos
hlt
pop
mov
mov
lret
push
shlb
jp
dec
sub
and
mov
sti
ret
decl
sbb
dec
lret
out
je
mov
lock
inc
add
mov
lock
ljmp
pop
mov
adc
jno
jmp
sbb
pop
adc
repz
in
adc
add
dec
xor
sbb
orl
test
insl
outsb
ljmp
mov
bound
and
fistps
sbb
mov
repz
stos
shlb
mov
mov
clc
decl
push
sbb
fcmovnb
call
mov
sti
cmpsl
adc
adcl
pop
fdivr
xor
add
mov
mov
mov
xor
add
decl
mov
push
sbb
dec
cmp
mov
in
test
cmp
data16
leave
inc
mov
fld
cmp
jbe
inc
jb
mov
call
ja
pop
popa
cltd
hlt
or
call
insl
sbb
and
call
mov
ds
out
stc
inc
xchg
mov
fcoml
mov
pushl
icebp
inc
cmp
shll
inc
ds
insl
lret
jg
test
xor
add
sub
insl
flds
cltd
or
ljmp
mov
mov
pop
mov
in
mov
iret
xchg
inc
das
icebp
inc
insb
mov
stos
int3
push
mov
dec
icebp
call
push
pop
insb
lret
dec
sbb
js
fwait
and
loope
es
fsubs
and
mov
daa
push
or
ljmp
in
test
adc
sbb
cli
push
sti
in
jp
xchg
pop
sbb
in
fwait
mov
sti
push
jg
mov
mov
xchg
and
push
mov
inc
iret
fnstenv
cmp
dec
mov
cld
in
call
fcomip
cli
nop
jb
inc
and
xchg
dec
add
lar
repnz
sub
arpl
adc
lcall
xchg
mul
stos
sbb
xchg
lcall
aas
push
dec
icebp
cmp
outsl
inc
call
pop
jmp
fmulp
push
mov
mov
pop
cs
push
cli
imul
xlat
push
stos
sbb
out
gs
fildl
xchg
int3
jbe
xchg
add
popa
xlat
gs
xor
pop
sbb
testl
push
jge
pusha
nop
mov
fisttps
or
jmp
in
je
inc
add
stos
int
sbb
mov
or
cmp
repnz
cltd
cli
fisubrl
ret
shll
shlb
dec
lds
sbb
dec
sub
mov
negb
jmp
add
push
push
iret
icebp
jg
push
pushf
mov
lahf
cmpsb
jmp
clc
jmp
jbe
inc
add
pop
cmpsb
out
add
testb
jns
call
js
out
or
mov
aas
pop
lock
int
cmp
xor
loop
jmp
out
stc
cmpsb
or
stc
dec
sub
jns
in
xor
ds
inc
cld
pop
add
ror
xchg
adc
outsl
shl
pop
cli
call
cmp
xchg
pop
push
jno
mov
dec
scas
xadd
dec
mull
jle
arpl
mov
popf
add
cmovno
push
jge
imul
incl
and
addr16
push
sbb
fcoms
loopne
imul
ret
das
or
adc
add
mov
adc
movsb
sbb
fmuls
pop
adc
push
fsts
das
hlt
int
out
dec
add
fiaddl
pop
fs
insb
mov
mov
or
xchg
or
aad
pop
movl
fcoml
iret
fidivs
call
loope
jns
sahf
jne
fdivl
arpl
test
and
mov
inc
std
cmp
push
adc
add
push
pushl
insb
or
out
xlat
cmpsb
mov
push
add
push
push
movsl
test
xor
mov
insl
insb
cltd
test
popa
mov
push
decl
dec
inc
push
stc
jno
loope
inc
gs
inc
insb
outsl
or
fdivl
cmp
mov
mov
inc
sbb
push
or
lds
hlt
mov
mov
lods
xor
cmp
push
inc
and
cmp
mov
rcr
cmc
movb
aaa
clc
mov
cwtl
insl
xchg
jb
xchg
in
mov
jl
mov
mov
aas
popf
mov
mov
xor
mov
call
test
add
inc
ret
mov
xor
cmp
mov
xor
xchg
jne
mov
mov
shlb
bnd
sbb
cmp
mov
ljmp
jge
nop
and
pop
lods
dec
pop
in
push
inc
add
inc
bnd
incb
pop
test
pop
push
call
ljmp
gs
adc
push
lret
adc
sub
mov
icebp
incl
insl
in
xor
mov
mov
out
jae
rorb
ljmp
inc
sub
xchg
dec
outsl
jne
jge
dec
rcll
mov
insl
daa
aam
fdivl
mov
sahf
sub
push
sub
mov
popa
pop
mov
mov
jecxz
loop
into
das
mov
lea
and
test
call
sbb
leave
stc
stos
push
cmp
mov
or
incl
xor
icebp
sub
sub
fmuls
daa
sbb
popa
cmp
pop
loop
push
push
sub
cltd
and
push
xchg
add
or
mov
decl
inc
adc
adc
cltd
or
push
mov
mov
ss
or
ljmp
pop
xchg
shlb
jle
aam
jbe
mov
pop
out
xor
add
adc
das
addr16
mov
add
add
cmp
data16
std
ljmp
out
or
or
cmp
jbe
call
or
xchg
outsb
push
jp
lea
aad
xlat
stc
out
add
or
xchg
mov
call
dec
sub
xchg
jb
jns
js
inc
sbb
mov
inc
jecxz
in
mov
sub
repz
icebp
pusha
fnstenv
dec
incl
jnp
jl
sarb
jl
stos
cltd
movb
bound
lret
out
mov
scas
orl
fadds
in
jg
stos
lcall
mov
aad
inc
int
inc
lret
pushl
mov
cmp
repnz
or
movsb
push
jecxz
outsb
or
or
pushl
sub
daa
or
inc
imul
mov
or
cmpsb
push
loope
add
adc
data16
jns
sbb
les
in
and
sbb
test
pop
cltd
shlb
insl
mov
inc
inc
ljmp
pop
addr16
xchg
dec
adc
les
and
je
lcall
mov
test
lret
push
test
cmc
jb
xchg
ss
call
sbb
mov
sahf
addr16
cmpsl
pop
xlat
pop
daa
dec
and
mov
cmp
pop
aas
xlat
push
aad
dec
or
hlt
int3
sub
inc
out
jmp
cld
push
pop
loopne
dec
push
pop
scas
lcall
repz
mov
je
add
adc
mov
in
or
push
mov
fwait
mov
arpl
enter
arpl
das
lock
lcall
jp
stc
push
push
ja
xor
test
lcall
ljmp
pop
ljmp
notl
test
pop
mov
sti
pop
add
sbb
push
out
cli
mov
mov
inc
lcall
addb
fucomip
mov
or
or
cmp
lods
mov
pushl
xbegin
insb
call
scas
test
mov
mov
call
adc
and
pusha
ret
lods
mov
fistps
cmp
inc
push
fsubl
sbb
push
push
ss
pop
mov
cmp
cmpsl
dec
cmp
in
mov
and
das
icebp
outsl
jno
stc
cli
xchg
mov
xor
lcall
push
int
sub
jae
jbe
insb
push
dec
imul
cmp
cmp
jmp
test
roll
mov
or
mov
insl
in
notb
lcall
jmp
add
mov
adc
inc
pusha
push
sarl
pushl
dec
scas
and
stc
jmp
xor
fisttpl
nop
aam
jo
imul
push
les
jns
pop
test
or
stos
inc
or
std
scas
ret
push
add
fs
mov
iret
jo
call
fcmovnb
jg
push
jle
outsl
cmp
xchg
fldenv
xorb
mov
jns
icebp
ljmp
dec
lea
dec
int
loopne
loopne
imul
cltd
xchg
addb
mov
jmp
out
inc
dec
out
sti
imull
inc
call
jmp
out
std
lcall
cld
or
scas
sub
xchg
add
mov
out
repnz
sar
pop
daa
pop
imul
sar
fdivs
outsb
mov
or
mov
fiadds
push
jno
mov
and
dec
int
and
pop
std
lcall
pop
xor
adc
dec
test
push
mov
cmp
rorl
call
fildl
aad
jne,pn
out
inc
inc
xchg
or
xchg
sub
xchg
pop
cli
ljmp
push
call
dec
adc
xchg
fldl
call
scas
pop
mov
out
xlat
add
xor
push
jno
loopne
sti
dec
aad
fbstp
cmp
pusha
test
call
pop
decb
nop
inc
decl
sti
pop
dec
pushf
ds
inc
scas
push
jbe
sub
into
xchg
orl
call
add
cmp
ja
sbb
std
fsubs
mov
pop
lcall
xchg
sub
std
outsl
cmc
or
mov
scas
cli
mov
fst
fidivrs
loope
decl
xchg
push
inc
aaa
inc
rorb
dec
xlat
pop
push
leave
mov
iret
loopne
fisttpll
lods
sbb
into
adc
mov
ds
xchg
outsl
ss
pushl
incl
dec
ja
fucom
leave
dec
jp
aad
inc
loop
cli
sub
scas
pop
lods
out
test
push
in
nop
jno
mov
pop
cld
incl
or
cmp
lahf
enter
pop
mov
fidivl
mov
stos
fwait
daa
xor
rolb
lret
or
xchg
sahf
js
cmp
jbe
shlb
test
mov
pop
sbb
aam
jo
daa
roll
sbbl
xor
pushf
xchg
pop
pop
fsub
cmc
jle
incl
adc
cmp
fstpt
das
je
jmp
sahf
sbb
xlat
loope
aam
andl
in
inc
cmp
ljmp
lahf
push
outsb
popa
je
push
xchg
dec
shr
lock
fistpl
ret
fiaddl
call
push
fs
call
or
bound
dec
push
pop
xor
std
jg
dec
cltd
addr16
cwtl
push
mov
repz
lds
clc
decl
mulb
rcll
cmp
mov
mov
fs
fwait
mov
aad
sarb
xorb
sub
fistl
sub
jl
push
push
in
fs
mov
sbb
pop
aaa
and
push
sub
test
outsl
jb
aas
adc
adcb
push
pop
repnz
add
adc
mov
pop
jmp
mov
pop
pusha
sub
nop
int
call
adc
sub
add
test
mov
dec
pop
xchg
hlt
outsl
cmc
outsl
pushl
scas
sbb
mov
mov
ljmp
mov
mov
iret
pop
jae
mov
mov
mov
pop
cmp
mov
das
mov
rcr
pusha
sbb
test
clc
dec
adc
mov
jae
adc
mov
jns
xchg
jg
lcall
stos
mov
xor
xchg
out
adc
pop
movsb
add
in
and
cmp
or
adc
push
and
ljmp
mov
fwait
sbb
xchg
mov
adc
rcr
out
cs
inc
adc
jmp
jb
adc
xchg
dec
stos
xchg
cmpl
fistps
sbb
or
ds
and
mov
jg
xchg
mov
cmpb
ljmp
out
call
ljmp
test
stos
cmp
lcall
loop
lds
push
adc
and
imulb
enter
jmp
scas
xchg
adc
push
sub
ljmp
mov
lea
mov
cmpsb
sub
add
je
loope
xchg
rcrl
mov
add
aam
mov
sbb
arpl
fistpll
lcall
stc
icebp
test
mov
adc
fmulp
xchg
clc
and
ljmp
or
add
daa
sbb
push
movsb
inc
pop
sub
pop
xchg
mov
je
jmp
fcoml
lret
bound
aad
jne
push
aaa
or
xor
ljmp
lods
shlb
mov
add
je
enter
xchg
out
es
jmp
sub
fisttpll
cmpsb
pop
cmpsb
ret
sbb
shll
adc
icebp
loopne
pushl
arpl
js
scas
xor
add
call
push
pop
sar
ljmp
test
test
mov
cmp
shrb
lds
pop
adc
mov
pop
iret
inc
xchg
outsl
mov
lcall
outsl
jge
xor
pop
push
mov
pop
shll
and
jmp
out
pop
dec
inc
jg
negb
sub
push
jae
incl
in
incb
aas
mov
test
push
or
xchg
test
divb
decl
decl
mov
push
insb
cmp
pushf
out
ljmp
dec
add
decl
cld
push
inc
lahf
sub
mov
push
xchg
mov
rcr
pop
mov
jl
and
jno
popf
fdivr
mov
fxch
outsb
fsubr
dec
cltd
fwait
test
test
aad
imul
icebp
add
out
loopne
sbb
cli
sub
mov
push
dec
rorb
imul
std
lret
mov
jbe
jno
insb
mov
lea
movl
push
pop
mov
adc
push
into
daa
jg
mov
jge
mov
add
sub
mov
ljmp
ret
in
xor
in
mov
ljmp
jo
shll
sbb
cmp
push
sbb
fcmovnbe
xchg
faddl
stos
test
test
xchg
cli
and
pop
cmpsl
mov
mov
jecxz
decl
cmp
leave
fdivr
and
or
jne
pop
add
dec
inc
add
jns
test
in
cmpsl
add
xchg
inc
or
add
fwait
lcall
xor
push
hlt
call
addb
icebp
pop
mov
repnz
xchg
sub
mov
rorl
inc
les
and
cld
sub
xchg
xlat
dec
in
out
sbb
fs
jg
in
and
lods
pop
xchg
push
int3
add
fldl
das
icebp
in
mov
jne
pushf
pop
mov
mov
in
lods
sub
pop
fmulp
int
or
jmp
inc
mov
cmpsl
jbe
add
roll
inc
pop
shl
mov
aaa
sbbb
test
ljmp
xor
iret
sbb
mov
or
rcl
jg
lcall
xor
rcrl
and
sub
nop
pushl
fwait
mov
mov
jmp
ficoms
xchg
jae
daa
push
and
pop
xlat
push
loopne
push
sbb
cs
incl
cltd
fldenv
inc
mov
mov
jnp
push
es
push
lahf
push
rcrb
cs
call
ss
or
mov
lods
clc
pushl
in
push
or
ss
mov
mov
imul
icebp
nop
scas
adc
mov
je
add
call
cli
or
cmc
and
mov
sbb
xchg
mov
call
mov
dec
inc
stc
inc
add
adc
dec
adc
lcall
xor
mov
mov
push
mov
popf
inc
pop
loope
gs
jmp
pusha
jge
insb
out
and
movsb
and
mov
vunpckhps
arpl
xor
in
scas
stc
mov
sbb
adc
fisttps
arpl
mov
incl
jg
inc
fistl
insb
aas
cmp
mov
addr16
add
lcall
mov
cmpsl
xor
insl
jmp
dec
cld
inc
jb
clc
add
inc
mov
xor
cli
mov
shll
imul
addr16
cmp
mov
ficoms
xchg
xchg
xorb
decl
xor
inc
jge
pop
cld
inc
fldt
jno
xchg
xchg
bt
mov
outsb
mov
cs
pushl
cmpsb
imul
add
das
sbb
mov
test
bound
fucomi
jbe
gs
sbb
lcall
pop
push
push
aas
cs
addr16
jno
fstp
cltd
mov
push
cmp
push
sbbl
pop
das
fiaddl
cmp
imulb
sub
jg
jno
xchg
mov
mov
iret
dec
pop
iret
add
mov
inc
push
shrl
jmp
call
sub
cltd
xor
inc
daa
adc
inc
ret
roll
pop
jmp
aam
movsb
fwait
pop
pop
sahf
push
mov
pop
and
adc
stos
pop
dec
mov
push
or
sbb
or
pop
gs
xchg
stos
js
call
insl
sub
and
sub
ret
sbb
incl
sub
je
leave
adc
movsl
fcomp
xor
or
cmp
call
xchg
push
pop
sub
lcall
sub
out
pop
mov
shll
fs
adc
pushl
stc
rcrl
mov
out
cmpsl
xchg
push
push
pop
shlb
lahf
or
aas
jne
dec
xchg
jne
xchg
cld
daa
inc
into
ljmp
pop
jecxz
add
idivl
pop
push
andl
leave
mov
xchg
pop
loop
rcrb
adc
enter
or
call
mov
divps
rcrb
shr
data16
push
lret
frstor
mov
aas
clc
test
cmp
orl
movsl
pop
or
mov
cmp
arpl
fistpl
jbe
das
ljmp
add
inc
jns
push
popf
negl
and
mov
cmp
pushl
push
adc
cwtl
sbb
adc
nop
mov
ja
notl
or
adc
outsl
js
mov
repnz
fmull
sarl
mov
mov
aaa
in
ja
adc
cs
sub
cli
jmp
xchg
test
popf
out
dec
xor
cmp
push
cwtl
xor
pushl
out
je
je
sbb
add
mov
mov
dec
out
aas
sub
dec
ljmp
push
adc
xchg
and
call
cmc
add
xor
insb
mov
and
mov
sbb
movsb
xor
lcall
outsl
imul
in
xchg
or
and
rcrb
arpl
icebp
aaa
call
ret
push
cwtl
rolb
xor
outsb
pop
das
push
jns
popa
xor
in
pavgw
icebp
xchg
jae
pop
dec
fnsave
xchg
ljmp
ret
fucomp
push
ljmp
push
pop
int
movsb
pop
xchg
cli
jmp
jmp
leave
adc
jl
popf
lret
lret
mov
mov
pop
pop
lods
incb
xchg
jecxz
jge
sbbb
sub
pushf
sarb
sbb
mov
rdpmc
idiv
das
hlt
mov
in
dec
lods
movsl
xchg
push
mov
imul
push
bound
push
jp
mov
cmpsl
popf
add
adc
sub
ljmp
adc
lahf
push
shll
negl
in
sbb
loopne
inc
mov
call
ss
inc
addr16
xor
jge
int
jbe
hlt
sbb
call
lock
test
test
clc
aaa
mov
gs
fldcw
sub
mov
adc
jae
pop
mov
inc
test
fucomip
test
pop
push
pop
cwtl
std
fucomip
and
jg
jl
lcall
adc
ljmp
pop
adc
dec
sbb
push
push
ja
xchg
sbb
repz
adc
incl
xor
xor
jo
lods
repnz
movsl
dec
leave
ja
std
ljmp
out
mov
das
mov
neg
mov
adc
add
lea
das
mov
ljmp
add
movsb
xchg
cmp
mov
imul
or
outsl
mov
sahf
push
sahf
inc
jno
test
int3
ljmp
adc
aaa
jmp
popf
jo
inc
push
stos
pop
sub
inc
pop
fisttps
jmp
cmpsl
testl
lcall
jl
add
sbb
xor
mov
ja
push
cmp
push
push
xor
loope
pop
out
repz
push
outsl
lock
out
jecxz
xchg
mov
cs
sarl
mov
fiadds
outsl
into
pop
into
ss
call
aam
mov
and
fists
hlt
incl
inc
cmp
xchg
fcoms
adc
adc
ljmp
xchg
mov
mov
clc
sbb
push
mov
sbb
push
inc
fcomps
xchg
inc
test
jg
lcall
sub
je
jne
sbbl
ss
cltd
or
mov
shll
xchg
xchg
xor
lods
idivl
lret
jge
incl
aas
and
out
add
jle
roll
cmp
jnp
shl
jmp
and
test
jne
xor
insl
inc
xor
stos
jmp
pushf
mov
sbb
outsb
sub
loopne
rclb
cmp
jb
scas
mov
cli
jle
addr16
lahf
or
insb
call
adc
out
shll
dec
xchg
ljmp
jb
fimuls
jmp
iret
mov
test
push
aad
xchg
push
xor
fbld
rcl
mov
ja
or
push
cwtl
cmp
xchg
lcall
cld
cmpsb
or
fisttpll
mov
aad
jle
or
mov
int
jg
mov
xor
adc
push
shll
jmp
jo
nop
lock
pop
mov
xchg
das
adc
enter
idiv
ljmp
jne
or
cwtl
in
fld
pop
divl
in
cli
ljmp
adc
gs
sti
xchg
fistl
jbe
mov
testb
mov
jmp
mov
lret
lahf
js
xchg
hlt
mov
enter
jno
and
mov
je
pop
ljmp
ljmp
lahf
fstps
jge
jns
mov
aad
ds
fwait
sbb
incl
es
repz
loop
das
dec
xchg
iret
pop
pop
cli
call
shlb
shr
repnz
push
push
jle
test
add
ljmp
adc
jecxz
or
sti
in
push
idiv
pop
mov
dec
or
dec
cld
out
std
out
adc
sti
lds
mov
ljmp
stc
fiaddl
ljmp
xchg
call
aam
ljmp
stos
jmp
pushf
fldlg2
jl
shlb
dec
xchg
jmp
rclb
out
cli
ljmp
mov
je
sbb
push
mov
add
cs
add
cli
xor
rorb
jp
rcll
cmpsl
and
insb
ljmp
and
cmpsb
shlb
dec
jae
xchg
dec
mov
addr16
cmp
mov
sbb
pushl
add
repnz
sbb
mov
aad
fwait
cmpsb
fs
andl
aad
loop
adc
push
dec
cmpsl
inc
mov
add
out
add
andb
pop
clc
mov
lods
push
mov
sub
in
gs
ljmp
lret
cmp
cwtl
pushl
mov
add
sub
imul
icebp
push
mov
jne
aad
lret
lcall
xor
dec
push
push
jne
movsb
lcall
xchg
dec
xor
pop
dec
call
dec
loopne
xchg
dec
fsincos
arpl
outsb
call
stos
test
ret
jno
or
incl
hlt
xchg
scas
cmpsl
inc
leave
test
or
push
aaa
fcmovne
ret
pop
add
test
pop
mov
pusha
leave
mov
inc
loope
push
rolb
xchg
mov
pop
push
andb
hlt
xor
out
test
test
or
or
cmpsl
outsl
ljmp
sub
in
dec
jno
aaa
or
orl
decl
add
js
pusha
addr16
int3
cmp
jge
mov
pop
and
ljmp
xor
and
loope
pop
cmp
xchg
push
sti
mov
pop
mov
int
adc
cld
ljmp
fistpll
cld
test
insb
lea
decl
push
outsb
inc
lock
add
cmp
or
gs
sub
mov
lea
jne
mov
push
or
jg
add
insl
push
xlat
fs
add
sahf
incl
incl
sbb
aas
xor
xor
lcall
sbbb
xchg
adcb
and
sahf
fstpl
inc
fcomp
ficompl
je
jge
or
aaa
cli
in
sbb
enter
xor
push
sahf
cltd
lret
in
dec
or
push
pop
adc
out
push
add
fidivrl
lea
fbstp
mov
icebp
jno
or
add
ljmp
sar
lcall
inc
insl
jp
sbbb
add
jns
std
insb
push
add
rcrl
insl
ljmp
les
fdivs
pushf
mov
dec
dec
dec
mov
adc
data16
xor
or
call
or
push
js
add
inc
out
mov
cmp
add
add
cmp
mov
call
out
sub
xchg
leave
sub
cmp
add
nop
cmp
pop
pop
push
sub
incl
inc
cmp
inc
stos
in
sarb
inc
dec
imull
mov
outsb
mov
popf
dec
pushf
je
pop
lock
inc
pop
adc
ljmp
pop
in
pop
adc
pop
ja
into
adc
xorb
testl
add
call
int
jge
test
pop
scas
jecxz
fsts
mov
cmp
subl
mov
sbb
gs
sub
sub
in
sbb
push
dec
and
into
js
out
into
cmp
daa
lea
test
aaa
or
fwait
jno
xchg
test
iret
outsb
loope
fs
dec
adcb
sti
or
mov
dec
mov
push
mov
popf
sbb
and
stc
sbb
aad
jo
clc
dec
or
scas
out
mov
movsb
mov
fnstsw
call
push
push
je
insb
inc
sub
test
das
les
ljmp
call
pop
push
nop
jg
pop
cld
mov
mov
mov
sahf
push
std
xchg
jbe
lcall
jno
fimull
imul
jl
fucomip
sar
std
push
mov
int3
bswap
push
insl
add
xchg
jmp
mov
jle
mov
das
cld
sub
out
xchg
inc
gs
leave
jnp
adc
adc
outsl
enter
daa
sub
sbb
dec
mov
popa
push
pushl
les
daa
push
cltd
pop
xor
test
fucomp
inc
emms
cmpsb
cs
xchg
flds
xorl
call
cld
add
cmp
test
jg
in
sub
je
addr16
mov
pushl
fst
pop
cmpxchg
xor
imul
sbb
cs
outsl
hlt
cmpsb
insb
loope
test
ljmp
xchg
mov
imul
cmp
and
outsl
lock
jg
and
jbe
jb
daa
imul
xlat
push
or
add
outsb
mov
out
push
incl
fcmovbe
loope
ljmp
cwtl
adc
fucomip
mov
cmpsl
adc
pop
dec
cltd
aaa
mov
fldt
movsl
fisttpl
icebp
shll
not
sbb
xchg
call
stos
push
insl
lea
sbb
push
lods
pop
cmpsb
nop
sti
or
decl
icebp
icebp
push
stos
arpl
push
add
push
pop
cltd
lahf
mov
pop
loop
call
lret
fbstp
jge
cwtl
cmp
leave
pushf
int3
test
lock
dec
fucomip
dec
cld
cwtl
and
jnp
mov
and
repz
fildll
cli
into
into
jnp
xchg
stos
mov
cmpsl
movsl
mov
xchg
dec
xchg
popf
push
mov
decl
jmp
push
push
mov
push
jle
test
mov
lret
adcb
incl
and
jo
addr16
pusha
mov
sub
int3
inc
lcall
and
aad
sti
mov
cwtl
data16
sahf
out
stos
bnd
mov
push
rcrb
push
ss
shlb
push
nop
lock
jl
xor
in
mov
and
insl
and
dec
xchg
pop
mov
int
dec
dec
shll
addr16
xlat
mov
and
jg
cmp
jg
xchg
int3
adc
lahf
mov
pushl
xchg
xor
sbb
xchg
sbb
sub
push
mov
nop
pop
leave
jns
sbb
clc
pushl
pop
add
push
lcall
movsl
or
sbb
jp
fwait
and
dec
jmp
das
lock
pop
push
int3
jge
or
popf
fbld
jle
jne
dec
cwtl
jg
pop
cmp
inc
pop
nop
and
lods
ljmp
andl
cmp
lcall
decl
mov
int
push
fwait
cmp
sub
ljmp
std
mov
or
stos
jle
rcll
cli
add
repnz
pushl
xchg
jmp
xchg
dec
sub
pop
enter
xchg
inc
lods
incl
mov
clc
lds
adc
mov
jmp
adc
pop
das
xchg
push
sub
lods
mov
sti
ljmp
lock
loope
pop
dec
icebp
pop
inc
sub
push
cmp
stos
fstl
rolb
call
xchg
inc
cltd
imul
and
xlat
popf
jno
pop
add
cmp
jnp
test
and
sar
jmp
jl
adcl
jo
sub
fimuls
shll
sub
fwait
pop
clc
cld
jmp
inc
aad
testl
adc
ret
push
dec
inc
roll
adc
sbb
das
hlt
stc
imul
mov
sub
aad
add
xor
sti
and
inc
lock
incl
lret
fcoml
mov
outsb
cvtps2pi
xlat
mov
decl
dec
xor
cmc
mov
push
decb
hlt
cmp
scas
mov
mov
movsl
das
pop
ret
xor
xor
int3
adc
out
fiaddl
sti
imul
enter
adc
sub
mov
sub
aam
mov
std
test
fists
in
negb
sbb
lcall
movsb
push
sti
push
call
mov
add
cmp
cwtl
push
mov
xor
and
xchg
test
pop
sahf
adc
inc
mov
dec
mov
lret
push
lds
inc
std
xchg
adc
insl
fcompl
iret
insb
and
mov
ljmp
mov
imul
lahf
push
mov
push
and
test
add
cmpsl
js
incl
cmp
lods
mov
jo
es
and
lock
dec
stos
loope
shrd
loop
das
cmc
out
aad
inc
repz
cmp
push
jne
lcall
sbb
mov
shrb
loop
push
dec
mov
push
or
adcl
decl
xor
hlt
mov
shrb
les
imul
fdivrp
incl
xor
sub
jg
inc
rcl
add
pop
popa
cli
xchg
and
push
sbb
aam
lcall
mov
push
daa
fldenv
daa
in
cmc
push
mov
mov
mov
outsb
sbb
xchg
pop
loopne
out
adc
and
fsubrs
outsl
xor
xchg
ljmp
mov
cwtl
ss
or
xchg
cli
mov
add
das
je
scas
push
frstor
cmp
pop
std
lods
mov
addl
mov
insl
lds
icebp
pop
ljmp
hlt
loop
and
mov
enter
add
ret
mov
jnp
mov
jns
push
in
sbb
or
inc
cld
add
inc
jle
fucom
mov
call
jp
jnp
add
popf
scas
fists
push
or
and
sahf
shl
decl
gs
clc
sub
adc
push
cmp
xchg
cmp
mov
dec
cld
xchg
sub
int3
sub
jg
nop
mov
cwtl
xchg
ljmp
popf
sub
mov
icebp
iret
rcr
xor
mov
cmp
les
push
jmp
out
mov
leave
loop
loope
ja
and
aaa
aas
es
push
xchg
sub
es
cmp
lcall
fs
lds
add
es
call
xchg
xor
leave
clc
adc
mov
insb
adc
cmpsl
mov
mov
ljmp
into
lods
fwait
or
rcll
inc
fsubl
subl
arpl
pop
lcall
xchg
idivl
ljmp
repnz
xchg
insl
shll
aaa
inc
rcl
ret
fldenv
das
cld
inc
cmp
xchg
adc
jecxz
pop
out
lock
mov
enter
js
and
test
fwait
cli
ljmp
adc
aaa
mov
jmp
scas
cmp
push
cmc
decl
out
aaa
and
icebp
and
adc
nop
xor
ja
mov
popa
jecxz
out
cltd
rolb
xor
idivb
sub
pushl
jnp
sbb
mov
push
pop
movsl
xchg
cmp
jp
outsl
dec
out
sub
adc
sbb
mov
push
cltd
sbb
nop
adc
push
dec
cltd
and
ljmp
xor
xchg
jno
movsl
sbb
push
outsl
mov
fidivrs
pushl
test
xor
xor
push
hlt
fadd
pop
dec
out
cmp
cld
sbb
xchg
pop
add
outsb
insb
jge
cs
call
and
add
ss
aad
mov
enter
sub
das
imul
mov
jbe
mov
push
pushl
movsb
jo
int
cmpb
lret
and
mov
xorl
mov
mov
inc
xchg
aad
decl
ljmp
in
pop
inc
lock
add
dec
cltd
int
xchg
mov
push
decl
add
in
and
xor
cs
std
decl
mov
or
scas
jb
mov
popa
push
fdivrl
call
xor
jns
xor
andl
or
adc
push
mov
mov
push
in
xor
inc
test
cs
mov
les
add
fisttpl
push
lds
pop
adc
xchg
xchg
sub
push
add
enter
dec
jp
rcrb
ss
insb
andb
sub
ljmp
cmc
inc
pop
jmp
pop
jp
add
xchg
pop
mov
lods
pushl
or
cmp
pop
movsb
popa
jbe
pop
pop
jp
add
cli
push
add
xchg
cmpsl
push
add
fwait
mov
into
adc
shlb
xchg
sub
stos
jnp
mov
cmp
mov
fadds
fmulp
pushl
ret
and
call
add
xchg
cmpsl
daa
sbb
clc
pusha
inc
addr16
mov
addr16
sub
push
pop
aas
mov
fdivr
je
dec
xchg
mov
pop
fimuls
jge
lods
testl
mov
fnstsw
push
pop
ljmp
ds
mov
dec
cmp
incl
jg
test
fmull
or
xorb
adc
loopne
dec
mov
ficomps
or
inc
mov
cmp
dec
or
lret
repz
add
xor
loop
js
pop
sub
mov
xor
add
sbb
xchg
cmp
cmpsl
xchg
mov
mov
pop
jae
sbb
sahf
dec
das
jo
jl
dec
dec
ss
xor
incl
xor
mov
xor
mov
movsb
dec
or
std
mov
call
cmp
sbb
cmp
cld
das
icebp
mov
aad
inc
mov
loope
jecxz
ds
rcrl
insb
aas
jns
xchg
cmpsl
std
mov
dec
insb
fcmove
inc
mov
push
fsubl
or
xorl
popa
xchg
mov
xchg
shl
call
sbb
mov
lods
cwtl
pusha
xchg
or
or
dec
add
push
les
in
push
mov
mov
and
lcall
mov
jmp
push
push
adc
outsl
icebp
ficoms
sub
cld
jg
sahf
mov
cltd
aam
adc
mov
inc
dec
lock
lcall
stc
lods
jmp
cmp
sub
sub
xor
shlb
stos
bound
and
sar
sbb
add
sub
in
cld
push
jl
cld
push
fdivrs
ljmp
mov
data16
std
push
xlat
call
icebp
xlat
adc
jmp
pusha
pop
xlat
push
pushf
pop
inc
jg
and
cmp
test
fsts
lahf
cmp
sbb
outsl
cmc
lret
inc
lds
mov
push
push
in
mov
pusha
adc
andl
gs
xchg
xchg
pop
dec
jg
mov
mov
in
push
ficoms
lcall
jne
pop
pop
jmp
js
push
mov
ljmp
cltd
in
push
add
enter
adc
mov
mov
pop
mov
mov
jle
pushl
call
pop
mov
jg
insl
push
dec
or
jo
push
mov
mov
pop
adc
mov
jno
lahf
fbld
push
aas
or
scas
stc
in
pop
cli
fldt
cmc
jge
js
hlt
fisttpll
outsb
cmp
subl
add
and
push
push
cli
add
ljmp
jg
jnp
mov
mov
cmp
dec
mov
mov
or
stc
lcall
incl
stc
mov
mov
es
pop
cltd
jp
adc
push
pop
cld
icebp
in
sub
mov
mov
mov
clc
ljmp
testl
push
out
cltd
sbb
mov
incl
mov
cmp
push
scas
lret
rcrl
mov
sbb
cwtl
pop
push
pusha
xchg
mov
loope
mov
mov
xlat
iret
jns
mov
repnz
lret
xchg
sar
and
aaa
mov
jmp
or
dec
js
loopne
loopne
fs
push
push
repz
mov
sub
adc
std
jmp
filds
insb
cmpl
mov
in
test
or
mov
xchg
rorb
shr
rclb
jb
shrb
loope
or
mov
test
out
pop
jne
decl
cld
jl
cli
sub
push
add
xor
lcall
mov
test
and
jb
aad
cmp
inc
add
xchg
std
inc
dec
adc
repz
xor
lret
xchg
hlt
sbb
xor
adc
pop
movsb
leave
fstl
or
adc
call
lods
pusha
aam
stc
xchg
adc
insb
decb
loope
fbstp
mov
xchg
cmp
pop
int3
dec
lcall
jbe
int3
ja
aaa
lcall
jmp
pop
iret
jmp
jle
aad
inc
daa
mov
inc
mov
iret
call
das
jns
leave
add
xor
shl
add
inc
iret
loopne
fbstp
xlat
add
pusha
mov
nop
jecxz
dec
push
mov
lods
add
mov
sbb
ljmp
cwtl
xchg
mov
cmp
fdivs
gs
das
lods
ljmp
lret
cli
sub
dec
lock
jmp
int
jnp
sub
call
aad
push
outsl
lret
mov
das
in
push
fistl
mov
cmpsl
fimuls
cmp
lea
pushf
movsb
pop
mull
sarl
add
mov
mov
jg
xlat
inc
xor
pop
cli
and
and
sahf
jmp
dec
sbb
cwtl
jge
adc
icebp
ljmp
xor
xor
mov
popa
push
loope
add
aam
test
lcall
mov
mov
xlat
mov
outsl
loop
adc
sbb
pop
xchg
test
or
mov
add
ljmp
movsb
mov
adc
call
call
sar
test
add
mul
ffree
and
lods
mov
jge
jle
push
sub
jmp
push
cmc
and
push
sti
dec
xchg
aad
mov
loop
test
push
ljmp
mov
imul
js
fcoms
lcall
adc
xchg
ror
fcoms
fnsave
out
shll
test
lods
jl
jmp
or
out
or
pop
sub
bound
arpl
add
outsl
fcomip
push
dec
sbb
pop
jno
shrl
idiv
test
jnp
or
rcll
cmp
xchg
mov
cld
push
xchg
out
pop
cmp
mov
mov
rcrb
loope
mov
out
or
push
scas
shrl
cmp
or
sbb
mov
push
cmp
xchg
in
push
shlb
sti
clc
sbb
test
out
sub
xor
cmp
mov
cmp
jge
mov
adc
fstpt
das
test
jno
mov
dec
hlt
cmpsb
ja
xor
incl
outsb
mov
lcall
mov
rclb
pop
lret
stc
aaa
ljmp
jmp
xor
cmp
push
xor
push
lds
scas
lret
cli
push
or
sub
jmp
int
adc
add
in
push
sbb
cmpsb
add
pop
clc
jmp
or
jp
push
jl
out
sbb
sbb
test
call
clc
clc
mov
xor
jecxz
add
xchg
mov
xchg
rorb
popa
or
inc
pop
or
addr16
aad
push
ljmp
mov
iret
adc
movsb
add
mov
frstor
jmp
jp
mull
xchg
call
std
iret
mov
icebp
call
aam
jmp
mov
mov
dec
fadds
in
gs
lcall
mov
sbb
popa
adc
mov
pop
loope
mov
pop
or
loop
leave
sub
mov
mov
test
in
call
popf
mov
hlt
sub
inc
enter
jno
decl
mov
add
stc
jp
aas
xchg
pop
mov
jns
jbe
fwait
js
fsts
pushl
sub
lcall
mov
lock
push
push
jo
sub
mov
test
mov
push
add
dec
mov
push
jne
icebp
int3
ljmp
jmp
adc
popa
in
and
imul
out
pop
jne
call
cli
lock
mov
lods
inc
mov
push
jbe
sub
mov
jg
fstpt
push
insb
ret
fbstp
add
add
mov
jbe
pushl
dec
out
lock
cli
add
pushf
sahf
loopne
hlt
xchg
sbb
call
jmp
cwtl
sub
jbe
jbe
fldcw
jbe
cltd
dec
in
fisubs
push
mov
xor
rcrl
fildl
jmp
dec
movsb
cli
lret
or
add
clc
fistps
pop
arpl
es
jg
mov
subl
in
adcb
fiaddl
mov
sub
cmc
popa
sub
and
dec
out
dec
sub
ds
cmp
call
das
xchg
push
in
cmpl
cli
scas
cltd
pop
add
push
push
add
aad
inc
popf
imul
add
push
jno
into
es
orb
jg
outsl
pop
cmp
inc
call
adc
mov
call
das
push
std
sub
gs
out
clc
bsf
ljmp
out
pop
mov
xor
sbb
test
out
stc
add
pop
std
fsubrl
je
repnz
add
pop
shrb
mov
std
call
gs
sub
xchg
rclb
aam
jno,pn
movsb
icebp
decl
mov
es
int3
mov
lds
xlat
cmp
call
mov
mov
jno
loope
sub
pop
cltd
push
push
testl
sub
cmp
push
mov
stos
les
push
incl
pushl
pop
int
scas
add
add
movsl
fldcw
add
push
lcall
jp
sahf
mov
stc
mov
icebp
pushf
push
jae
pop
cmp
sub
inc
xor
and
mov
or
jmp
dec
mov
xchg
fcoms
lret
jg
ret
ja
into
loope
in
pop
loope
clc
xchg
mov
jmp
dec
mov
jnp
call
add
pop
xchg
xor
cltd
cli
dec
popf
and
in
ljmp
in
fsubrl
jle
sub
lea
or
cld
call
insl
lret
xchg
sub
push
bsr
test
pop
insl
lahf
sub
ljmp
std
jmp
jne
or
test
ljmp
roll
outsb
jno
in
sub
outsb
inc
mov
mov
adcl
pop
in
decl
mov
mov
push
inc
pop
inc
pushf
or
mov
in
lods
push
test
inc
sub
mov
xchg
and
xchg
mov
sbb
jge
test
leave
sub
int3
inc
ror
mov
addb
cmp
sar
jae
imul
call
rcll
adc
or
testb
pop
call
imul
lods
dec
loopne
fsubl
sbb
mov
jg
mov
mov
cmp
mov
dec
dec
inc
push
aas
nop
mov
fcoml
pop
shll
cmp
movsb
dec
and
fs
stos
push
cwtl
int
jg
pushl
int
cmpsl
xchg
xchg
neg
xor
cmpsb
xchg
test
hlt
nop
ljmp
jae
sub
mov
or
jge
mov
in
inc
xchg
ret
jecxz
inc
push
xor
test
inc
es
sbb
sbb
sahf
push
out
lods
inc
aad
stc
mov
mov
inc
sti
lods
xchg
test
out
gs
and
pop
and
mov
mov
movsl
pop
out
xchg
addr16
adc
mov
iret
xor
xchg
clc
call
pop
and
aad
outsb
jmp
std
add
loopne
enter
push
xchg
es
sbb
or
and
or
lret
add
pop
add
dec
mov
pushl
mov
and
mov
cs
sbb
cld
inc
inc
rcrl
jg
cld
pushl
adc
rcll
out
jg
jecxz
adc
ds
mov
lock
out
mov
test
mov
jmp
test
fisubl
rcrb
xlat
inc
pop
cmp
cmc
mov
or
and
dec
mov
sub
leave
sbb
sbb
in
outsl
inc
cmp
dec
icebp
outsl
jge
incl
into
adc
fsts
data16
mov
jne
clc
mov
cwtl
xlat
adc
lret
sbb
push
inc
jae
sbb
cmc
divb
pop
pop
arpl
repnz
cmpsb
incl
out
int3
push
jns
popa
or
jae
iret
ss
int
cmp
xor
insb
jo
and
jge
mov
jp
pop
xchg
adc
adc
outsl
in
pop
cli
xchg
mov
sub
andb
leave
aaa
cli
jmp
push
xchg
dec
cmpsb
adc
push
push
jle
cli
icebp
popa
or
ret
sbb
mov
test
cwtl
stos
xchg
dec
inc
pop
subb
popf
sahf
aam
call
jg
xchg
jo
adc
scas
js
outsb
cmpsl
jbe
js
fisubrs
mov
mov
inc
clc
sbb
incl
mov
cmp
test
fidivl
call
test
mov
lea
test
cmc
and
push
daa
stc
ret
fs
fucom
mov
shrb
inc
add
aaa
pusha
jecxz
mov
lahf
jbe
and
ja
popa
lcall
pop
cmpsb
xchg
mov
pop
and
xchg
or
lds
fcoms
addl
ljmp
out
and
mov
dec
shl
subl
lods
sbb
fnstsw
mov
roll
decl
jmp
imul
andl
enter
cmp
es
xchg
outsl
mov
xor
dec
out
imul
adc
lea
nop
and
mov
hlt
outsb
and
roll
lcall
adc
push
outsl
xchg
rcrl
lods
mov
imul
nop
arpl
ret
inc
fdiv
or
les
xchg
mov
xchg
imul
jg
xchg
adc
jmp
es
sti
ror
sbb
xchg
sub
lcall
xchg
fmuls
inc
icebp
pop
je
clc
idivl
adc
push
xchg
popa
lock
xlat
pop
in
or
movsl
or
mov
cmc
adc
aas
fnstenv
dec
cs
jae
push
call
or
movsb
dec
xchg
push
es
and
cs
or
dec
ja
lcall
ds
aaa
and
lea
xchg
pusha
adc
fiadds
jmp
test
fcomps
xchg
push
int
bound
decb
mov
out
adc
cwtl
xlat
sbb
push
xor
aaa
cli
repz
sub
rorb
outsb
stos
fwait
mov
gs
incl
js
xchg
sub
ja
cmp
les
sbb
in
and
dec
movsl
push
dec
adc
jp
into
pop
cs
mov
mov
push
or
push
pusha
mov
mov
xchg
fsts
mov
rclb
loope
jne
movsl
pushl
mov
mov
jnp
dec
shrb
pushl
xchg
test
cwtl
mov
mov
add
ljmp
pop
inc
mov
in
les
testl
ffreep
out
add
cmp
mov
push
fdivrl
in
cwtl
das
lds
gs
out
data16
ljmp
add
push
or
push
adc
divl
inc
mov
js
ss
fucomip
mov
dec
dec
xor
mov
insb
std
mov
iret
pop
or
dec
out
loopne
mov
push
pop
xchg
int
pop
icebp
jnp
rorl
movsl
cmp
pop
push
shrb
das
mov
push
pop
scas
lock
push
incl
pop
add
aaa
cwtl
push
sar
into
inc
sub
loop
sbb
stos
add
nop
incl
mov
pushl
mov
cmp
add
mov
mov
mov
jmp
mov
sbb
test
inc
jge
sti
add
ret
movsl
lcall
cld
lea
mov
dec
fimuls
push
cs
ss
cmc
cli
lock
xchg
jl
fldt
sub
mov
test
repnz
jmp
cmpb
daa
jg
ds
adc
jmp
scas
lods
movsl
fdivrl
mov
jg
mov
ja
aad
push
xchg
cmc
subl
dec
mov
xlat
jecxz
hlt
xchg
ljmp
lahf
pop
nop
sarb
mov
fsubrs
imul
mov
or
fidivrs
mov
rorb
or
adc
cs
cmp
subl
ret
xchg
inc
rolb
inc
adc
sbb
push
inc
js
ret
pushl
push
loope
imulb
inc
xor
pop
cmpsl
inc
sbb
lcall
js
decl
sbb
xchg
nop
pop
adc
pop
dec
in
mov
insb
in
mov
scas
cld
add
push
lcall
mov
or
pop
push
std
cmp
sub
arpl
mov
dec
jmp
hlt
decl
les
sub
divb
jecxz
lcall
inc
and
sti
mov
adc
clc
in
cmc
jg
mov
outsl
xor
xor
cmp
ljmp
std
rcrl
adc
inc
mov
dec
xchg
in
fdivs
pop
call
call
xchg
cmc
xchg
mov
gs
jne
cmp
pop
xlat
pop
xor
fcmovu
scas
cmp
lods
outsl
dec
ljmp
pop
pushf
mov
pop
push
subb
insl
xchg
fldl
pop
ljmp
or
xchg
inc
out
loope
sbb
incl
and
jecxz
pop
add
shrb
push
and
ljmp
and
mov
sbb
xchg
dec
adc
xor
inc
fs
jmp
aam
call
andl
out
loope
imull
hlt
into
cmpsl
scas
mov
push
fucom
dec
ss
call
filds
call
pushl
das
push
loope
inc
cmp
enter
icebp
in
jecxz
shl
dec
cmpsb
xchg
cmp
xchg
xor
ljmp
fs
push
sbb
sbb
out
xlat
out
cld
mov
dec
cmc
test
jbe
in
fcmovu
rcrl
jge
push
scas
in
shll
fs
ror
loop
into
test
pop
or
pop
cmp
xlat
decl
push
pushl
iret
filds
adc
call
add
mov
xchg
jmp
xor
pusha
sbb
decb
rorl
xor
sbb
dec
std
jmp
test
cmp
out
mov
inc
mov
repnz
mov
jmp
pop
xor
xchg
mov
jo
ja
mov
sub
addr16
cmpsb
dec
sub
push
das
push
dec
orb
incl
loop
push
push
or
mov
mov
loopne
cmpl
decl
mov
push
popf
lcall
xor
je
inc
dec
pop
movsl
lahf
mov
xchg
clc
pushl
hlt
movq
ja
clc
or
hlt
pop
int
jle
jnp
jg
pushl
popa
popf
divl
les
mov
or
add
push
cmp
dec
xchg
sbb
push
ja
xor
pop
ss
insb
push
cmp
push
test
or
xchg
mov
jp
rcll
adc
inc
mov
mov
shrb
mov
add
sbb
jne
push
fwait
ret
shll
decl
or
adc
jnp
jl
aam
pop
cmpsb
stc
fmull
push
test
ljmp
nop
add
movsl
daa
dec
aaa
inc
dec
add
jg
jl
cmp
mov
cmp
addl
inc
and
sbb
sub
gs
stc
stc
inc
jle
fldl
loop
sbb
or
test
inc
xlat
cmpsb
jg
sbb
call
jg
jno
add
sti
cmp
stos
xor
mov
pop
je
ds
nop
loop
jo
jbe
pop
mov
and
rcl
mov
mov
test
fst
loope
mov
pop
adc
cmpsb
mov
test
ds
pop
jae
jp
jp
jbe
loop
popa
dec
sub
inc
push
sarl
jle
lret
dec
xor
mov
fstpl
fnsave
addr16
inc
adc
pop
jecxz
push
lcall
pop
ja
repnz
sbb
call
outsl
add
mov
jnp
test
xor
arpl
ljmp
sub
ficoml
sbb
jbe
movb
add
sbb
or
pushf
and
jl
push
and
jmp
pop
scas
std
stos
and
pop
shr
std
js
imul
and
clc
pusha
ljmp
cld
pushf
sbb
addr16
clc
movsb
int
inc
inc
dec
dec
call
fildl
dec
adc
pop
push
insb
sub
pop
mov
pop
cmp
fisubs
sar
das
cmc
cmp
outsl
push
mov
outsl
pop
out
cmpsb
xchg
shll
push
mov
int3
scas
pop
icebp
dec
add
lret
add
and
inc
mov
and
pop
mov
idivb
xor
pushf
call
inc
jb
repnz
lret
sti
cmp
push
nop
and
dec
jo
decl
jle
pop
mov
jo
icebp
mov
xchg
cwtl
jle
lret
int3
pop
icebp
mov
or
je
add
lcall
and
sarl
fmull
lods
mov
out
out
sbb
adc
aaa
and
sub
mov
mov
repz
decl
jne
into
fisttpll
dec
lcall
push
pop
mov
cld
repz
mov
inc
jmp
stos
mov
int
mov
mov
loopne
jmp
inc
fnstsw
sub
ss
or
decl
push
mulb
lods
inc
inc
daa
pop
int
sub
js
in
dec
mov
push
adc
cmpsb
fsubs
stos
push
pusha
decl
pop
pop
outsl
out
jp
loopne
daa
and
sub
das
xlat
mov
push
mov
inc
outsb
and
jbe
das
sar
push
push
sbb
out
xchg
iret
push
bound
sahf
lea
movsl
sar
dec
lcall
xor
aam
push
call
stos
int3
xchg
adc
mov
mov
push
inc
fisttpl
adc
int3
ja
stc
shll
hlt
pushl
pop
cwtl
jecxz
push
arpl
mov
loopne
jg
loope
adc
bound
pop
lods
imul
std
fucompp
add
pop
test
fcom
push
pop
push
ror
mov
sub
mov
into
repz
insl
dec
mov
not
in
es
dec
push
xchg
das
lock
pop
lcall
imul
pop
out
xor
and
decl
cld
ljmp
les
loop
into
mov
scas
pop
add
sbb
jae
and
dec
push
cld
pushl
mulb
hlt
sbb
stos
fnsave
mov
adc
test
jnp
xchg
or
cmc
incl
jne,pn
cmp
lcall
pop
push
pop
dec
mov
test
or
adc
ljmp
cmp
jne
mov
and
cmp
push
cmc
ret
pushl
dec
nop
shll
insb
out
mov
jmp
movsb
cmp
popa
popf
sub
mov
pusha
jmp
daa
nop
push
and
hlt
cmpsl
cli
jmp
xchg
lahf
ljmp
sbb
sub
call
push
and
pop
or
call
addl
mov
push
mov
out
repz
mov
lods
inc
add
push
add
mov
or
push
adc
fdivrp
outsl
push
clc
popf
inc
push
lahf
xor
call
mov
rolb
jmp
adc
cmp
fstpl
rcrb
jg
sbb
std
mov
inc
pop
xlat
dec
gs
fnstsw
pop
jno
pop
push
call
call
pop
mov
or
add
test
sahf
mov
testb
sub
incl
mov
and
ja
add
add
imul
inc
push
mov
shr
loopne
in
and
sar
outsl
inc
inc
mov
add
ret
popf
add
jle
adc
mov
in
add
pop
mov
fcmovu
push
test
test
pushl
in
push
ret
push
mov
dec
cmp
aam
mov
cltd
out
add
lcall
lds
dec
or
sub
mov
loopne
inc
xor
sbb
cld
xchg
iret
cmp
fnstsw
call
aas
loop
xchg
pop
jge
mov
negl
and
std
pop
xchg
add
arpl
sti
int3
xor
in
mov
xchg
fbstp
jle
xchg
stc
jno
jmp
addb
mov
xor
lcall
lcall
and
sbb
std
or
loop
inc
jge
mov
ljmp
hlt
jb
adc
jae
mov
mov
fcompl
push
lcall
fisubrs
jne
add
pusha
jnp
loopne
pop
cwtl
enter
mov
dec
rcr
dec
sbb
sbb
pushl
daa
dec
push
lods
adc
push
insb
or
mov
adc
dec
and
aas
leave
push
push
out
loopne
ljmp
adc
out
stos
movsb
jle
ss
dec
pop
jge
out
push
mov
xlat
xchg
adc
and
ljmp
fildll
mov
add
movsl
cmpsl
dec
cli
mov
dec
push
cs
cmpsb
iret
and
loop
inc
mov
lcall
test
mov
movsb
sub
shl
mov
jle
stos
call
mov
dec
mov
mov
adc
cmp
mov
outsl
jo
insl
mov
ret
mov
xchg
cld
in
mov
adc
outsb
out
test
and
sbb
mov
stc
lock
push
jmp
mov
mov
push
sub
cmpsl
stos
mov
outsl
icebp
incl
adc
ret
cmp
outsb
inc
inc
and
jb
imull
stos
sub
jmp
inc
sub
loop
adc
sub
pop
and
insl
rcll
push
sbb
mov
jnp
mov
and
adc
pushf
jne
mov
or
add
sbb
loope
cld
iret
int
mov
decl
xor
les
neg
imul
inc
mov
xor
stos
mov
sbb
mov
sub
jecxz
cwtl
add
adc
loopne
sbb
shlb
adc
and
add
les
into
les
mov
push
lahf
jo
jl
pop
mov
jbe
push
jg
inc
inc
sub
lea
das
mov
mov
mov
pop
mov
sub
pop
pop
sbb
cmp
decl
jmp
out
pop
les
dec
lods
popf
cmc
pop
jp
loope
popa
lock
fnstsw
sarl
ljmp
cmpsb
adc
iret
xor
mov
loope
cld
xchg
clc
popa
add
mov
mov
fcoms
outsb
cmp
arpl
xchg
sarb
bound
jge
sti
pop
pop
mov
cmp
and
push
loop
mov
inc
daa
add
mov
dec
mov
fbstp
mov
movsb
mov
adc
and
movsb
cmpsb
or
pop
insl
pop
push
mov
pop
pop
and
out
in
incl
inc
mov
push
adc
cmp
push
mov
pop
mov
mov
mov
mov
add
repz
hlt
cmp
xchg
push
lock
cmp
cmp
es
decl
in
in
xchg
imul
cmp
lds
dec
and
ljmp
jg
in
sbb
dec
dec
xchg
mov
jmp
in
push
mov
test
loop
aad
inc
xor
movl
out
sbb
aas
push
fxch
cmc
dec
aam
jmp
cmp
popf
mov
fcmovnb
test
cmc
mov
xlat
test
in
clc
sbb
outsl
cld
pop
int
dec
fsubrl
stos
jno
fwait
aam
data16
sar
incl
push
clc
adc
push
xchg
bound
pushf
add
mov
dec
and
jae
decl
int
lret
mov
popl
sbb
out
xchg
adc
out
outsl
cltd
lret
fldcw
das
hlt
jg
scas
in
pop
call
cs
cmc
push
lods
xchg
cld
lods
pop
das
or
cwtl
xor
mov
mov
mov
call
pop
call
pop
sbb
ds
data16
mov
pusha
adc
lock
call
mov
fcmovu
ss
mov
push
rcll
cmp
xchg
push
test
in
pop
daa
sub
and
xor
or
call
idivb
or
in
iret
cs
mov
dec
je
dec
les
nop
insb
fnstcw
xchg
dec
xor
int
and
mov
inc
stos
mov
popf
xlat
notb
decl
repz
push
imul
dec
iret
imul
push
es
aad
push
stos
sbb
outsb
call
outsb
jmp
sub
cmc
mov
xchg
cld
incl
jno
or
cmpsl
and
pusha
push
stc
jns
and
daa
jl
or
pop
inc
adc
fadds
fwait
dec
hlt
mov
icebp
int3
cmp
loopne
in
sti
ljmp
dec
mov
mov
dec
mov
jmp
in
lret
fs
push
dec
inc
sub
pop
xor
fdiv
jne
imulb
in
sub
bound
jmp
mov
jae
inc
and
mov
test
pop
inc
ljmp
sbb
xchg
xchg
hlt
nop
add
push
shlb
scas
jecxz
mov
ljmp
sti
sbb
lret
xchg
shr
push
xor
decl
shl
iret
loopne
pusha
jo
scas
sub
negb
mov
aam
xor
pop
loopne
push
jl
ljmp
outsb
ljmp
push
incl
xchg
cmc
jmp
jge
or
xchg
outsb
lods
dec
and
jae
xchg
cmpb
inc
in
pop
shll
pop
loopne
push
mov
mov
xchg
push
lcall
lea
sub
roll
out
int3
adc
push
adc
mov
je
mov
mov
push
lcall
movsb
xor
repnz
push
cmp
xchg
es
jl
mov
cmc
jmp
xchg
cld
mov
mov
lds
sahf
cwtl
dec
or
xor
adc
jne
push
cmp
or
mov
subl
cmpsl
push
and
mov
shlb
sti
fs
movsb
fs
outsb
cmp
sbb
cmp
mov
fucomip
decl
je
or
ja
and
adc
or
jno
inc
push
outsl
mov
incl
inc
adc
setp
or
aam
sub
fwait
cmp
fisubs
and
xchg
bound
sbb
lock
jmp
xchg
push
insl
in
faddl
adc
mov
ss
les
leave
sub
mov
cmp
add
push
dec
mov
enter
fs
adc
push
aam
bound
jg
jnp
fsts
ja
mov
js
or
push
jae
sub
mov
lcall
xor
sar
jmp
adc
inc
mov
outsl
pop
push
mov
inc
sub
adc
mov
jle
nop
test
loope
xchg
jle
and
imul
jg
pop
scas
sbb
daa
jle
pop
sbb
add
mov
clc
fldl
xor
pop
test
mov
imul
pop
ja
out
push
aaa
mov
jo
jl
sar
outsb
repz
inc
pop
cli
cmp
out
bound
push
cmc
push
pop
in
lcall
call
pop
add
imul
lods
sbb
pop
push
hlt
mov
xchg
cmpsl
repnz
jg
lcall
dec
mov
lahf
jne
lcall
lahf
push
lods
sti
push
je
rorb
jmp
lods
test
mov
mov
decl
int3
aad
outsl
cmp
pop
jp
and
test
add
jg
lea
push
and
shl
add
jg
fwait
jge
push
mov
fidivrl
inc
push
daa
outsl
shll
fstps
sbb
pushl
insl
repz
jmp
addr16
call
mov
test
pop
call
dec
mov
mov
pop
pop
mov
call
incl
fstpt
mov
pop
adc
xchg
add
incb
cli
sarl
scas
adc
push
test
shlb
lea
aad
popf
push
mov
cld
into
inc
pusha
and
lock
mov
dec
ljmp
sbb
push
mov
in
jmp
sub
jne
loop
jge
fldt
add
jnp
fdivs
iret
mov
pop
pop
in
adc
jge
jns
out
popa
sub
push
mov
mov
ljmp
push
sub
jg
jg
imull
mov
rorb
in
call
mov
sbb
mov
xchg
mov
ret
data16
cld
idiv
inc
sbb
sahf
stos
pop
int3
dec
loop
fstl
scas
fs
popa
inc
jno,pt
ljmp
xchg
or
pushf
aam
sahf
cmp
in
mov
jmp
and
lret
cmpl
in
sbb
insl
aam
cs
rcll
ljmp
fimuls
lds
insb
fs
test
pusha
cwtl
aam
ljmp
xchg
shlb
lock
pushl
nop
sbb
push
push
xchg
js
mov
or
ficoms
mov
movsl
insb
lds
data16
jmp
imul
pop
lods
aam
es
and
lcall
inc
fucom
push
imul
call
js
into
jb
loopne
adc
icebp
cmp
xor
mov
jae
scas
add
incl
dec
imul
xlat
rcll
cmp
incl
inc
pop
fs
mov
xor
or
loop
in
and
lods
lock
dec
ljmp
shrl
clc
pop
add
push
push
cld
xchg
icebp
call
fcomip
pop
jnp
mov
jecxz
sahf
or
mov
cwtl
out
pushl
jb
ds
xor
lret
aad
rcrl
mov
jae
out
pop
imul
movsl
incl
and
roll
jecxz
repnz
icebp
test
fistl
outsb
ret
cli
ljmp
lcall
mov
lea
mov
stos
pusha
idiv
das
xor
out
dec
lock
push
into
cwtl
lock
add
sub
out
movsb
sub
sub
outsl
lock
cmp
repnz
sbb
cli
push
movl
in
mov
ret
xchg
adc
lcall
sti
sbb
popa
idiv
decl
ret
mov
sbb
adc
sub
in
incl
jge
sarl
in
mov
clc
bswap
mov
movsl
ljmp
fcoml
sbb
repnz
jmp
loopne
mov
subl
push
push
xchg
imul
adc
testl
mov
inc
lcall
mov
mov
sarb
push
dec
push
imul
popf
cmpsb
in
pop
sbb
mov
inc
xchg
jg
decl
pop
jmp
sarb
test
push
sbb
or
scas
lcall
jns
arpl
ffreep
push
inc
inc
scas
jl
dec
shll
or
and
jl
push
adc
dec
cld
rclb
and
aaa
cmp
pop
push
mov
ret
js
shll
aam
call
stos
js
fcoms
dec
or
pop
xchg
sbb
pushf
inc
leave
in
mov
mov
lcall
rep
cmp
add
fsubr
ret
hlt
icebp
incl
push
xchg
ss
out
leave
xchg
xor
xor
lds
inc
push
mov
jmp
push
mov
sbb
inc
dec
mov
popf
movsb
pop
or
and
ljmp
ret
xor
mov
pop
shr
cmp
cld
fildll
rcll
sbb
decl
das
add
mov
xor
dec
or
popa
repz
mov
pushf
xchg
incl
mov
mov
ss
aam
sbb
cltd
inc
test
mov
out
enter
lea
popf
sbb
mov
test
cmc
sub
sbb
pushl
into
or
shrb
outsl
clc
int3
mov
out
imul
adc
lcall
push
jne
mov
sbb
jns
lock
pop
push
in
push
insl
push
lret
adc
in
pushl
pushl
call
fisubrs
cmc
jb
pop
push
lods
es
mov
mov
out
incl
pushf
add
pop
es
cmp
ss
test
gs
enter
fsubp
cltd
jae
call
in
lods
lods
mov
mov
or
pop
shll
lcall
inc
es
mov
dec
cltd
leave
and
pop
insl
leave
in
shlb
pop
sub
dec
xor
push
fbstp
dec
aad
mov
push
mov
movsb
xor
ds
xchg
aas
jbe
loop
lock
out
push
mov
jecxz
xor
int
lcall
mov
jns
ja
or
mov
andb
xchg
imul
cmp
jnp
out
fwait
inc
adc
sbb
repz
divb
mov
pop
aam
leave
das
ljmp
jge
std
mov
loope
mov
daa
int3
cltd
add
dec
adc
incl
stos
xlat
jecxz
cld
dec
aam
cltd
xchg
arpl
rcll
out
pushl
ret
pop
or
xchg
mov
sbb
and
push
fistpll
pop
ljmp
dec
cltd
mov
mov
cmpsl
dec
jg
push
mov
adc
jne
scas
xchg
xchg
inc
mov
decl
cmpsb
mov
cmc
movl
cs
push
lcall
sahf
loope
inc
mov
ficoms
push
mov
mov
int3
sarb
in
mov
sub
movsl
pop
mov
repnz
dec
movsb
or
mov
mov
cmpsl
sbb
sub
testb
movsb
inc
call
add
xor
push
xchg
clc
incl
inc
cmp
xor
cmp
lock
loopne
mov
cmp
clc
lcall
or
mov
mov
jmp
outsl
lock
dec
into
jl
pop
mov
dec
pop
incl
aaa
cmp
in
cmp
and
mov
aaa
clc
test
lds
lods
push
xor
test
aam
inc
sub
fistpll
dec
rcrb
jbe
and
mov
shlb
das
hlt
cmp
xchg
sub
push
leave
inc
cs
push
and
jnp
lret
cmpsl
sub
mov
pop
insb
cld
adc
dec
jns
cmp
mov
sbb
in
add
test
dec
loope,pt
jo
dec
div
add
sbb
mov
sahf
ret
push
mov
cmp
xor
inc
pusha
adc
mov
daa
mov
or
dec
push
out
xchg
add
lods
cmpsl
iret
lahf
pop
mov
mov
clc
jmp
adc
xchg
mov
aad
mov
repnz
xor
hlt
mov
adc
cmp
jmp
sbb
loopne
jmp
cmp
test
lods
mov
ret
add
lret
cld
ljmp
push
sbb
mov
sbb
iret
or
cli
jg
jns
popf
shr
mov
add
test
into
aam
mov
adc
add
lret
fmuls
les
sbb
jns
jb
cli
pop
into
addr16
icebp
xor
mul
jle
mov
lcall
pop
pop
and
ljmp
pushf
fiaddl
push
jo
pop
leave
mov
subb
stos
cmp
flds
insb
das
adc
hlt
xor
inc
incl
ljmp
fimull
pop
push
test
or
mov
xchg
cmpsb
xchg
aaa
test
outsl
hlt
out
lcall
sub
mov
aaa
in
xchg
roll
dec
movsb
scas
dec
daa
mov
pusha
out
sub
cmc
mov
nop
mov
sub
pop
test
scas
adc
in
leave
jne
lcall
add
add
jp
sub
adc
xchg
popaw
aaa
dec
test
mov
lcall
mov
outsl
or
out
fmuls
fsubs
out
xor
stos
inc
sti
arpl
dec
decl
mov
inc
jle
sbb
pop
in
mov
lock
idivl
pop
dec
rol
ljmp
push
xlat
or
aas
pushf
lods
lods
pop
mov
sbb
and
mov
jmp
out
add
lahf
test
sahf
in
mov
aas
out
xchg
in
arpl
adc
movsl
outsl
and
mov
jns,pt
inc
pop
es
incl
sbb
inc
dec
sub
and
cmp
daa
pop
sbb
fsubrl
test
mov
pop
add
lcall
cli
aas
fstpt
sbb
adc
sub
sub
lcall
call
in
decl
cmpsb
sbb
pop
dec
insl
pop
pop
xchg
shr
pop
scas
addb
dec
imul
xchg
sbb
jg
xorl
push
push
push
mov
scas
and
or
fmuls
mov
jne
pop
push
dec
cmpsb
popa
nop
mov
jl
fistpll
pop
push
mov
mov
cmp
test
push
adc
dec
jg
call
lds
int
adc
negb
jns
inc
loop
adc
xchg
mov
mov
pop
sbb
dec
mov
push
xchg
mov
call
xlat
pushf
push
popa
stos
xchg
insb
and
popf
adc
into
rcrb
outsl
lock
xchg
test
repz
scas
cld
and
in
mov
call
push
adc
lret
pusha
or
pushf
cmp
push
in
mov
inc
push
shrl
or
pop
enter
adc
mov
jns
mov
fdivrs
add
into
mov
jp
jmp
fcos
ljmp
adc
dec
testb
mov
pusha
movsl
movsb
mov
cmp
adc
mov
xchg
jecxz
lods
call
sarb
int3
pop
pop
jl
rcr
and
lret
xchg
or
inc
clc
fcmovnu
mov
stos
stos
pop
inc
cmp
xchg
addr16
mov
fdivl
cmc
cld
aam
or
mov
ja
cmc
and
and
repz
sub
xchg
sub
xchg
outsl
lock
frstor
mov
rorl
dec
jb
stos
call
and
inc
cmpsb
mov
pop
push
adc
or
lods
dec
jg
and
out
clc
loopne
out
ss
xor
decl
cmp
and
sub
mov
les
jl
je
imul
jg
incl
mov
mov
mov
rorl
sbb
xchg
adc
fcoml
and
xchg
imul
xlat
sbb
jge
or
rcll
xor
popa
lds
push
call
adc
inc
dec
cmp
mov
jmp
aaa
cwtl
decl
in
and
fstpt
mov
mov
or
in
jae
sti
call
jmp
stos
sbb
mov
mov
lcall
je
inc
cmp
lcall
pop
xchg
dec
cltd
cmp
mov
je
and
inc
in
push
cmp
movsb
popl
mov
incl
xchg
pop
cmc
mov
jg
fadd
ja
push
jge
pop
aaa
fsubp
sbb
push
pop
pop
shlb
pop
pop
stos
call
clc
dec
jns
add
not
scas
les
jb
mov
pop
cli
mov
or
lock
out
pushl
cli
repz
ja,pt
inc
mov
int3
inc
scas
sahf
jo
aaa
lcall
bound
repnz
and
mov
push
push
inc
out
mov
incl
dec
jecxz
cmpsb
cmc
outsl
idivl
jp
push
in
jno
std
xchg
dec
movsb
shl
mov
mov
xchg
mov
in
cmpsl
sub
or
dec
inc
call
icebp
mov
xchg
mov
shl
push
icebp
push
loope
dec
pop
les
mov
shrb
xchg
clc
inc
push
or
mov
push
or
xor
xchg
fwait
insl
and
outsl
testb
ljmp
jp
mov
or
test
xchg
incl
test
test
sub
pop
mov
incl
shrb
xchg
mov
push
mov
test
bound
add
and
adc
icebp
cmp
lcall
lahf
frstor
push
dec
pop
xor
imul
pop
jo
and
xchg
sub
popa
or
mov
lcall
jg
decl
jecxz
jae
or
negb
or
sub
xchg
mov
sub
push
jge
jne
jg
gs
add
scas
popf
cltd
pop
mov
jg
ljmp
xor
stos
pushf
add
pop
mov
insl
dec
xchg
xchg
fnstsw
inc
out
fistpl
fwait
and
repz
mov
xchg
add
incl
mov
sub
pop
xor
mov
movsb
dec
cmp
cltd
xor
insb
sub
inc
es
ret
adc
push
fidivs
xchg
incl
mov
add
jg
aam
pop
lcall
aas
dec
and
or
test
ljmp
nop
or
shll
arpl
xor
and
call
mov
jnp
xor
inc
daa
mov
repz
mov
mov
into
jg
mov
jns
xchg
lcall
jnp
das
mov
pop
popf
pop
jge
ret
add
add
cs
das
jne
lcall
jnp
xor
lods
lea
jno
cmp
dec
ljmp
mov
rcr
test
mov
lods
sahf
or
fists
mov
push
test
fmull
xor
adc
xor
or
mov
adc
pop
mov
or
sub
mov
imul
pushl
lret
mov
xor
jmp
mov
dec
inc
cmpsl
pop
cld
xchg
outsb
aam
mov
jmp
fcomps
cmc
push
js
mov
sub
lds
lcall
adc
push
and
sbb
rol
or
stos
push
std
inc
or
push
xchg
add
scas
enter
and
push
loopne
ds
adcb
pop
test
orb
aaa
je
mov
jae
ss
push
dec
repz
jns
xor
pushl
das
mov
mov
cmp
pusha
inc
sub
in
test
and
stos
push
fdivr
call
incb
popa
cmc
mov
sbb
test
imulb
decl
cwtl
shlb
pop
stc
xlat
xchg
push
mov
pop
loop
mov
jp
iret
jno
pop
ud1
js
mov
mov
decl
pop
out
xor
xor
add
insl
nop
push
cmp
jecxz
xchg
cltd
jo
xor
addb
testl
push
cld
pop
cli
dec
pop
dec
pop
add
and
fstp
in
lock
inc
out
inc
fs
fadd
outsl
jmp
and
out
sbb
adc
fnsave
fs
sub
mov
outsl
hlt
adc
cmpsb
imul
out
sub
push
inc
xor
aam
lock
mov
bound
repnz
or
mov
pusha
ljmp
in
clc
cs
call
std
ljmp
aad
in
cmp
pop
sub
push
mov
test
aaa
pop
jo
adc
pop
add
xchg
adc
imul
cmpsb
xchg
call
jne
in
mov
inc
cmpb
outsl
icebp
mov
fs
fildll
aaa
sub
jl
subb
xchg
incl
dec
das
dec
test
addl
dec
xor
sub
dec
xor
push
mov
jbe
or
jns
repz
jecxz
js
fsub
rcr
movsb
outsl
pushf
push
jae
adc
jmp
rol
inc
rcrb
subb
imul
lcall
je
rorb
ljmp
cmp
ficoml
in
call
fcoms
ds
lret
call
sbbl
lcall
sub
pop
mov
stos
mov
and
fwait
pop
incl
ret
orl
lcall
push
dec
dec
std
ds
sub
stos
shrl
mov
loope
aam
jns
fsubrp
sbbl
pop
fdivrl
adc
dec
adc
ljmp
sbb
xchg
rclb
inc
push
mov
iret
and
pop
xlat
mov
inc
fidivrs
mov
sub
xor
ret
shrb
cs
xor
jmp
xor
lcall
hlt
add
in
cmp
add
dec
hlt
mov
es
icebp
mov
inc
out
xor
xor
js
stc
pop
repnz
das
lock
mov
fnstenv
out
scas
hlt
inc
call
dec
cmp
xor
dec
inc
jmp
ds
xchg
pop
mov
sbb
ficompl
rcrl
jle
loopne,pt
mov
jg
pop
bound
es
cs
roll
xlat
ficompl
loope
sub
sarb
sbb
push
mov
adc
pop
push
fsubl
add
addr16
incl
stos
mov
lret
push
jg
xchg
xor
cmp
mov
call
ds
dec
dec
jnp
cmpsb
repnz
pusha
push
cmp
popf
out
aad
mov
outsl
mov
in
jnp
xor
leave
pxor
das
sbb
xor
pop
mov
mov
mov
insb
sub
dec
insb
cmp
call
dec
sbb
add
adc
rcr
arpl
lret
cmp
fsts
mov
fmull
mov
and
or
and
movsb
sbb
lds
mov
mov
push
fisttpl
sub
call
addr16
cmpsl
dec
into
rcl
stos
mov
adc
jg
mov
imul
jno
push
into
in
push
mov
outsl
cmc
jbe
out
push
getsec
insl
pusha
call
mov
jge
mov
jecxz
push
lock
test
stc
dec
xor
sti
xlat
icebp
pushl
fisttps
mov
pop
xor
inc
cld
mov
jecxz
inc
out
dec
add
repnz
pop
aad
push
add
jle
fstpt
fnstcw
lret
and
xchg
addr16
scas
mov
cmp
dec
rcll
jmp
sub
in
add
int
jp
in
push
push
bound
xlat
mov
rcrl
mov
repnz
ljmp
ficomps
xor
adc
movsb
test
sub
sbb
ret
push
mov
pop
clc
inc
mov
push
sbb
adc
movsb
push
es
rorl
cltd
lds
push
xchg
mov
lahf
ljmp
lods
mov
dec
int
mov
and
xlat
addr16
mov
sbb
and
push
imul
xchg
mov
inc
aam
jg
inc
pop
iret
shrd
test
lds
imul
adc
pop
cmpsl
hlt
fcoms
sub
stc
mov
imul
call
daa
imul
je
adc
iret
push
xchg
sub
inc
jle
inc
sub
outsl
push
loop
ds
cwtl
movsl
sbb
push
dec
add
xchg
movsl
jno
push
or
mov
incl
insl
mov
lcall
xor
xchg
and
pushl
or
outsl
push
insb
lock
jecxz
cld
andb
lcall
pop
btc
test
std
adc
leave
mov
xchg
pushf
test
adc
call
fnstenv
pop
sahf
adc
jne
ret
pushl
les
lcall
adc
mov
icebp
decl
lock
bound
mov
sbb
addb
add
mov
pop
shrl
decl
and
pushf
and
dec
movsl
clc
add
ljmp
testl
push
test
xor
cmp
stc
pop
inc
cli
pop
xor
ret
int
cmc
cmc
or
test
test
or
xor
and
data16
insb
lods
mov
clc
push
ljmp
mov
inc
sub
xchg
push
xor
outsl
js
lcall
std
cmp
ret
dec
popa
movups
mov
gs
cld
call
pusha
test
inc
xor
jo
gs
test
mov
mov
sar
decl
cmp
popf
push
push
pop
xchg
out
scas
lcall
mov
xchg
call
lcall
cld
adc
les
pop
and
push
cmp
mov
lods
sub
sbb
nop
movsb
cwtl
ja
jg
sbb
fsubrl
cltd
cmp
pushl
into
jae
arpl
and
cmp
jnp
fistpll
mov
mov
out
jns
push
and
mov
fisttps
add
cmpl
push
or
pop
push
jne
sub
xchg
cli
incl
call
inc
push
leave
push
dec
jl
xchg
mov
sbb
ljmp
cmc
ret
mov
push
jne
rorl
inc
add
mov
pop
mov
jmp
je
aas
jbe
inc
ret
daa
pop
addr16
or
adc
dec
cld
mov
jns
pop
sbb
xchg
mov
xchg
lcall
or
enter
repz
stos
adc
jmp
and
mov
lahf
out
out
negb
mov
outsl
fstps
or
push
jae
cwtl
jle
fistpl
or
jb
incl
pop
fstps
or
pop
call
fsubrl
push
adc
lahf
mov
ret
lods
cmpb
pop
scas
es
imul
mov
insb
xchg
aam
aad
mov
clc
sahf
mov
jmp
add
int3
cli
sbb
adc
sbb
dec
std
decl
ss
lods
xchg
jmp
xchg
mov
lret
push
outsl
icebp
lcall
pop
add
adc
ja
stos
insb
aas
sbb
cmc
or
test
mov
lods
pop
je
mov
sub
clc
sti
ljmp
sbb
mov
aam
mov
dec
and
shll
mov
decl
jg
xchg
push
popa
ficoml
mov
push
aaa
xchg
add
pop
xor
jo
ljmp
icebp
cmc
mov
jbe
jmp
or
pop
shll
pop
cmp
inc
inc
fsubrl
xor
cltd
pop
jbe
scas
divl
gs
leave
cmp
jg
pushl
aaa
add
ss
hlt
cmp
or
stos
sti
pushf
add
daa
sbb
call
adc
mov
sti
call
mov
sub
imul
sub
fdivl
mov
xchg
cmp
jge
outsl
loop
incl
addr16
sub
jno
and
or
sub
fistpll
movsb
std
pop
cmpsl
insl
jbe
ljmp
jno
xchg
aaa
adc
cli
outsl
icebp
jmp
scas
and
loope
adc
sub
fbstp
add
xchg
addr16
cmpsl
mov
ficoml
aam
xor
jmp
xor
jae
test
js
out
js,pt
xchg
imul
movsb
sub
cs
popa
cmc
jmp
in
movsb
leave
call
test
mov
cs
dec
or
popl
call
or
cmc
gs
int
or
fisttps
or
mov
pop
jp
and
xor
xchg
nop
in
adc
jne
mov
movsl
dec
pop
clc
jmp
dec
rcrb
or
lods
int3
and
test
jmp
xor
jle
xchg
rorl
inc
xchg
je
pop
rcll
mov
jb
pop
cld
jl
xor
arpl
lods
lahf
pop
cltd
in
jmp
cmpsb
xchg
insl
test
nop
ret
lods
push
dec
pop
jmp
mov
or
out
fmul
shl
pop
jle
mov
mov
sti
rolb
add
sbb
mov
sub
andb
hlt
incl
sbb
int3
aaa
pop
xchg
shrl
pop
ljmp
and
pop
cmp
outsl
into
and
pushl
jbe
xchg
push
sbb
es
jg
cmc
test
jg
fdiv
popf
aaa
es
sbb
lea
jbe
arpl
fs
and
inc
mov
jl
jl
jg
jg
mov
lahf
and
sub
lahf
mov
lods
cwtl
sbb
dec
loopne
push
test
or
mov
pop
inc
shll
imul
xchg
mov
fcomip
pop
cmpsl
stos
pop
rcll
mov
mov
push
outsl
hlt
mov
dec
daa
push
sub
mov
and
repz
sar
std
aaa
loopne
test
xchg
sub
lahf
loope
imul
cli
push
or
fwait
adc
mov
testl
aad
sti
mov
cmpb
push
pop
pcmpeqd
daa
cmp
fbld
mov
adc
jo
popf
out
das
call
cs
out
lcall
push
incb
insl
jb
gs
lcall
pushl
leave
mov
aas
inc
adc
mov
jns
push
and
jg
cmp
pop
stos
mov
or
adc
mov
xchg
decl
sbb
clc
call
rorl
fisttps
adc
cmp
jmp
test
sbb
enter
faddl
das
test
jg
in
cmp
rolb
mov
xchg
insb
lret
push
iret
xchg
mov
mov
incb
aad
pop
mov
xchg
xorb
jmp
movsb
icebp
cmp
std
adc
jnp
jae
pop
stos
repnz
push
add
sbb
mov
pushl
xlat
add
mov
push
hlt
inc
sbb
cld
or
hlt
pop
cld
fucomip
mov
pop
mov
cmp
xor
sar
pop
lea
and
adc
pop
shr
jecxz
pop
and
outsl
add
outsl
nop
test
clc
mov
shr
test
incl
cmp
mov
ds
ljmp
adc
jnp
mov
into
fists
in
sub
loop
aas
test
or
xchg
roll
les
jge
pushf
push
loop
add
insl
lea
insb
outsb
add
out
call
shlb
shrb
push
repz
jae
inc
call
mov
ret
das
outsb
or
xor
ret
mov
xchg
lods
inc
call
test
cmp
outsl
cld
mov
mov
nop
cmp
test
lcall
shll
bound
jle
imul
loop
aaa
xor
xchg
sbb
inc
adc
inc
mov
sub
cwtl
push
addr16
loop
cmc
push
lock
xlat
out
in
bound
lcall
icebp
mov
cs
stc
orl
inc
pushl
pop
mov
pop
sbb
xlat
mov
js
xor
mov
ljmp
add
xchg
pop
or
aad
cmp
jmp
jbe
cmpsl
push
xchg
push
pop
jnp
imul
in
lock
call
inc
adc
jecxz
pop
dec
and
mov
std
outsl
aaa
pop
mov
push
lods
push
call
es
push
repnz
pop
ljmp
icebp
pop
fsubrs
and
push
sbb
andl
cli
icebp
clc
pusha
sub
xchg
loop
rorb
call
mov
xorl
dec
push
and
and
lods
ljmp
das
hlt
popa
mov
mov
xor
fdivr
inc
ror
f2xm1
es
jmp
mov
ljmp
test
or
arpl
scas
pushf
jbe
jl
dec
out
in
stos
and
mov
cwtl
call
sub
sbb
leave
mov
pusha
sub
cmp
dec
mov
lods
movsl
pop
clc
sbb
int
or
sbb
fwait
stc
pop
icebp
decl
adc
mov
lods
xchg
push
ss
cwtl
xor
push
jg
pushl
pop
and
jp
and
sub
push
add
add
jg
jg
test
movsl
in
add
jnp
mov
out
or
mov
pop
daa
inc
fwait
pusha
inc
mov
ja
xor
sub
mov
fstpt
xchg
into
xchg
aaa
lahf
fdivr
popf
js
sahf
inc
push
mov
push
test
jg
pushl
mov
cmp
scas
jg
and
fxch
jl
rcll
cld
pushl
ret
cmp
jne
push
lods
mov
inc
int3
jmp
fsubr
xor
xchg
fimull
je
lds
xchg
sarl
fisttpl
daa
sub
pushf
pop
pusha
mov
sbb
iret
sti
dec
ljmp
push
adc
ljmp
cmpsl
addb
sbb
rorb
ljmp
std
call
push
adc
fwait
add
jl
pop
cmpsb
shrl
ret
mov
mov
scas
ds
xchg
cmp
xchg
inc
cmp
push
ror
xchg
or
jmp
movsb
jae
push
aaa
xor
or
daa
add
dec
cmp
cmp
call
idivb
jnp,pn
xchg
or
decb
ljmp
fistl
inc
xor
sarb
enter
dec
mov
outsl
xor
pushf
filds
push
mov
call
sbb
jns
rcr
out
icebp
rolb
insb
and
sbb
pop
xor
cmp
sbb
js
aas
call
imul
fucomp
mov
aas
insl
aam
sub
adc
hlt
aaa
sbb
out
imul
shrl
xorb
add
sub
imul
fnsave
outsb
add
lcall
ljmp
pop
aaa
lods
das
mov
call
cli
mov
sbb
cs
jne
push
lods
xchg
add
cld
movsl
xor
int3
sub
in
xor
push
inc
push
jg
lock
sbb
sub
sbbl
clc
out
xlat
push
cli
xor
jge
cmp
adc
sbb
mov
inc
sahf
dec
jae
loope
push
and
stos
and
push
in
push
jnp
pushl
daa
sbb
dec
aas
sub
lret
pop
mov
mov
jg
call
gs
or
or
sub
jmp
sbb
data16
adcl
cmp
movsl
dec
jbe
add
or
leave
fndisi(8087
addr16
imul
jb
out
pop
xor
push
sarl
push
fnstcw
add
outsl
mov
cld
push
xor
fcompl
pop
lds
test
push
incl
sbb
mov
push
out
andl
hlt
cmpsl
xlat
cmpsb
popl
pushf
xor
push
lea
fdivl
dec
bound
mov
out
lret
es
push
inc
divl
jne
and
hlt
cmp
pop
jns
mov
imulb
xchg
pushl
mov
hlt
jno
lcall
loope
pop
dec
pop
lahf
loopne
mov
lcall
sti
je
insl
out
sbb
ficomps
inc
mov
pop
fnstsw
push
fisttps
mov
jmp
push
iret
lds
not
incl
out
dec
and
cmp
cmc
scas
mov
mulb
ret
out
popa
jmp
add
adc
mov
insl
pop
decl
jns
push
sub
cmpsl
scas
cld
cld
or
adc
push
lcall
push
mov
pop
imull
add
mov
jge
fdivrs
sti
sub
cmp
in
and
mov
jbe
push
xchg
repz
cmpsb
enter
mov
imul
sbb
idivl
mov
jg
jl
add
popa
cltd
cmp
push
pop
pop
sbb
movsb
cmp
ljmp
je
in
push
punpckhwd
xchg
leave
fucomip
mov
cmp
popa
outsb
mov
dec
jle
aaa
cli
outsl
push
pop
jae
jmp
fld
pop
pop
decl
mov
rcll
fcmovbe
test
jp
cmp
fstps
mov
fidivrl
cmp
ss
pop
sti
call
addr16
cmp
dec
lahf
jl
cmovne
sub
jns
test
sbb
fxch
gs
fisubl
mov
pop
mov
dec
aas
jle
cmp
xchg
test
mov
push
sbb
aam
pushl
int3
cmp
jnp
ds
pop
dec
lock
incl
call
adc
jo
adc
test
jo
mov
pcmpeqw
decl
dec
sbb
mov
mov
lods
leave
adc
mov
xchg
cmp
pop
pusha
fdiv
mov
mov
mov
cmp
mov
cmp
ftst
lret
nop
dec
dec
call
clc
call
and
mov
les
pop
sbb
loop
idiv
fnstsw
imul
ja
jle
push
mov
mov
sar
das
hlt
icebp
fnsave
popa
push
sbb
add
mov
mov
test
cmc
add
push
ss
sbb
das
icebp
pop
ret
jg
sub
mov
aam
cmp
add
js
lcall
lahf
push
sbb
fldl
lock
add
scas
xchg
mov
stc
ja
cmc
cmp
xlat
call
ret
cmpb
inc
outsl
push
and
xchg
pop
les
incl
jne
and
xchg
gs
mov
shlb
in
dec
inc
jne
lods
sarl
add
sub
lret
cmp
xor
cmpsl
stos
vminps
incb
jmp
lock
jmp
loopne
sbb
outsl
lds
pop
add
or
mov
adc
scas
loope
xor
xor
ljmp
inc
jb
loopne
inc
loop
test
mov
lret
add
adc
mov
adc
jno
inc
fistpll
cltd
jo
stc
scas
arpl
and
aas
arpl
lcall
adc
sbb
and
imul
or
pop
mov
call
leave
pop
stc
pop
pushl
cli
stos
cli
mov
jmp
dec
xor
xchg
mov
add
incl
mov
fmulp
sub
xchg
lods
ljmp
divl
or
adc
lods
mov
fnstsw
incl
jmp
mov
scas
jecxz
enter
lock
sbb
iret
sub
cli
cmpsl
aaa
inc
aad
xchg
ret
mov
dec
out
subb
ss
dec
push
std
mov
bound
dec
add
ljmp
pusha
stos
adc
ror
and
lret
or
pop
stc
adc
ljmp
and
jns
cmp
les
mov
das
push
lahf
enter
sets
fs
incl
fidivrl
mov
pop
xor
daa
adc
mov
mov
add
sbb
aaa
ljmp
pop
dec
pop
push
inc
mov
adc
dec
pop
movsb
push
dec
imul
insb
sbb
aaa
xor
cli
lcall
pusha
sub
mov
test
pusha
push
ss
sub
iret
shl
pop
call
aad
cli
test
sti
push
push
sbb
test
cwtl
js
fisubs
incl
mov
jl
in
add
mov
lods
iret
stc
in
mov
jmp
or
imul
sub
stos
arpl
inc
stc
mov
scas
movsl
test
movsb
out
or
jmp
xor
mov
inc
xchg
fisubs
bound
dec
aaa
ja
decl
std
xchg
call
mov
push
ror
sbb
mov
or
cld
jmp
pop
or
out
imul
push
pushl
push
mov
sbb
push
jns
sbb
inc
popa
xchg
out
cmp
pop
mov
add
cmp
xor
xorl
add
pop
movsb
adc
cwtl
and
ss
mov
pop
ds
int3
enter
test
mov
lahf
push
mov
popf
xchg
call
test
jmp
in
repz
inc
bound
call
dec
sub
sub
inc
aad
mov
adc
pop
out
in
addr16
aad
jmp
jmp
divl
adc
cli
mov
cmp
decl
sti
and
jne
adc
add
dec
popf
pop
mov
rcrl
xchg
jl
sub
jg
loop
xchg
lods
cwtl
push
cmpsb
addr16
in
call
or
test
fcoml
xorl
idivl
sub
sub
into
xor
pop
jge
mov
cmp
mov
mov
adc
decl
popf
testb
dec
repnz
pushf
xchg
xchg
add
ds
cmpb
mov
mov
sarb
pushl
sbb
cli
lahf
loopne
inc
fs
addr16
bound
sbb
call
lock
nop
mov
jl
jl
les
cmc
inc
inc
imul
push
call
mov
std
mov
int3
dec
rcrb
mov
mov
sti
sti
or
dec
movsb
stos
pop
xor
push
push
scas
cmpsl
xchg
xchg
jae
inc
adc
pop
repz
lcall
xor
adc
jns
mov
popf
mov
fnstcw
mov
mov
scas
test
jmp
das
scas
ljmp
cmpsb
inc
into
xchg
sub
fwait
pop
lods
jb
aad
push
notl
jg
js
pop
jo
mov
xchg
sbb
test
repz
scas
jnp
cli
sbb
test
and
push
sub
int3
push
pop
pop
push
mov
jmp
sub
test
and
jo
or
xchg
testl
addb
lahf
nop
ljmp
icebp
sti
cmp
rolb
outsb
aad
push
adc
jne
sar
mov
clc
push
adc
and
jmp
std
dec
pop
and
mov
push
mov
ljmp
push
pop
leave
mov
imull
mov
decl
pop
dec
and
dec
negb
cmp
std
jg
adc
lods
jg
add
hlt
push
pop
lahf
dec
push
mov
and
xchg
pop
sbb
cld
pushl
inc
mov
jle
mull
add
sbb
shrb
inc
add
pusha
sbbb
cmp
lea
cmpsb
stos
in
xor
mov
test
xchg
inc
dec
leave
push
sub
repz
jmp
xchg
movsl
fwait
cmp
xorl
icebp
xor
sub
push
or
fistpll
int3
shlb
xchg
push
push
push
cltd
mov
rorl
and
loope
add
dec
sbb
rcr
inc
idiv
add
filds
stos
sub
and
out
into
lods
inc
bound
xor
mov
dec
push
jmp
scas
xor
mov
int
movsl
xor
movsl
sub
jae
cmp
mov
call
push
or
jp
or
fidivrl
mov
rcrb
and
ljmp
or
fbstp
outsb
outsb
dec
mov
dec
mov
filds
in
or
pusha
ror
lods
shl
cmp
clc
icebp
lcall
push
cmp
sbbb
out
in
pop
test
dec
and
inc
minps
xlat
push
sbb
dec
cmpsl
push
lea
xchg
dec
xchg
lock
outsb
pushf
and
ljmp
cld
shrl
in
mov
xchg
lret
xchg
in
sarb
sbb
das
shrl
sbb
xor
jmp
clc
inc
jg
xchg
inc
icebp
sbb
add
push
push
lcall
jge
cwtl
mov
mov
stos
mov
pop
fstl
shll
sar
or
mov
push
mov
rcll
xchg
icebp
ljmp
and
add
rcl
pop
xchg
and
shlw
lahf
in
clc
mov
test
cltd
movsb
cli
sahf
int3
ljmp
adc
repnz
jg
mov
pop
cli
test
mov
adc
lock
or
scas
sbb
fbstp
mov
inc
sbb
mov
notb
mov
xor
stc
or
pop
mov
jb
inc
xor
mov
and
cmc
pop
test
inc
or
int3
in
jns
add
sahf
lods
cltd
pushl
clc
jg
sub
test
stc
xchg
mov
mov
sub
sahf
push
idiv
jg
lcall
sti
repnz
sahf
loopne
sub
mov
js
sub
sub
add
sub
repz
lcall
lea
fbld
imul
stc
mov
adc
mov
fs
js
pop
cs
lock
mov
das
call
xchg
inc
push
mov
xlat
cmp
jmp
sbb
jne
and
dec
push
lods
ss
push
in
imul
lods
pushl
insl
inc
ljmp
int3
mov
shlb
or
mov
in
scas
pop
outsb
movsl
mov
inc
or
xorb
movl
notl
inc
sar
jmp
or
lret
shrl
outsl
pop
in
fildl
imul
aad
xchg
add
lcall
push
ljmp
pusha
xlat
roll
lds
or
outsl
push
mov
incl
push
mov
jbe
or
xor
or
ss
jns
xchg
loop
lea
add
repz
mov
test
mov
jmp
inc
jge
pop
out
pushf
xchg
aas
xchg
int
mov
add
mov
pop
stc
mull
inc
push
mov
mov
mov
or
dec
int
inc
inc
mov
call
sahf
pushl
es
fld
arpl
sti
xchg
imul
or
mov
fcomi
mov
out
arpl
add
shl
xchg
out
lods
nop
ljmp
xor
lds
pusha
arpl
adc
fisubs
ljmp
jle
cld
ret
xor
cmp
repnz
into
movsl
movsl
jle
push
aad
pushl
jne
stos
mov
insl
jmp
mov
mov
mov
cmp
shll
fildll
addl
clc
negb
xor
gs
pop
fisttpll
inc
jmp
subl
pushl
sbb
mov
hlt
cmpsb
xor
and
adc
mov
std
dec
mov
xchg
adc
jecxz
stos
outsl
daa
imul
arpl
test
ret
mov
out
inc
mov
xor
or
cmp
dec
out
incl
insl
mov
je
pop
stos
les
cmp
or
or
jb
loope
pop
adc
mov
ljmp
std
aaa
add
movsl
loop
movsl
xor
out
fldenv
fistpl
jb
ljmp
jge
aaa
aam
fs
sub
shlb
fwait
daa
xchg
fimull
movsl
mov
inc
cmp
in
cmp
lcall
pop
ljmp
xchg
daa
lea
xlat
fwait
roll
out
sar
push
inc
imull
lret
push
cmpsl
and
xor
cmp
cmpsb
mov
xlat
jge
std
call
test
pop
and
clc
loopne
cmp
push
sub
cld
push
inc
adc
nop
cmp
test
stos
repz
adc
lcall
in
pop
sub
adc
je
hlt
gs
test
mov
test
lcall
xchg
aad
movsl
std
xchg
fsubs
push
xchg
or
jmp
xchg
call
jno
jmp
sub
fs
pushl
mov
int
out
cmc
push
mov
ds
jmp
push
movsb
add
cld
ljmp
mov
leave
add
push
pop
mov
aam
inc
scas
jmp
add
or
cli
or
jl
fwait
stos
fbstp
outsb
cmp
mov
test
push
outsb
jnp
aam
ja
in
lds
mov
mov
cmp
pop
je
jg
fnstsw
push
testb
imul
ljmp
aaa
das
cmc
ljmp
ja
inc
or
aas
daa
clc
or
data16
push
jge
lcall
enter
sbb
jg
jnp
xchg
not
mov
icebp
pop
clc
cwtl
lret
sbb
das
into
cmp
and
sub
lcall
ljmp
std
and
icebp
pop
add
sub
aad
pop
mov
clc
dec
std
pushl
add
or
aas
insl
sbb
push
ret
daa
pop
std
call
add
loop
push
mov
push
dec
out
push
adc
insl
add
inc
sub
pop
adc
jecxz
arpl
loopne
leave
out
xor
insb
jg
adc
out
adc
push
and
movsl
mov
call
inc
sbb
jne
cmpb
mov
jmp
icebp
sub
in
out
mov
push
xor
mov
repnz
mov
and
std
pushl
pusha
icebp
xlat
xlat
mov
xchg
mov
inc
iret
mov
lods
loop
mov
repnz
cmpsb
xchg
mov
inc
jns
xchg
sub
ficoml
lcall
das
jmp
and
mov
insl
cmp
stos
scas
jmp
cmpsb
jae
ja
clc
fld
leave
jbe
incl
push
call
ja
mov
stos
movsb
in
mov
sarb
lcall
lcall
loopne
enter
loop
pop
shll
dec
xor
cmc
aam
jae
sub
jmp
imul
out
add
xchg
sub
lahf
sbb
data16
sti
inc
ficoms
cwtl
test
dec
dec
fbld
negl
pop
jb
ljmp
stos
xor
jecxz
decl
ljmp
push
sub
push
lret
or
gs
hlt
mov
xchg
push
add
sar
xchg
clc
pop
pop
mov
lahf
pop
test
aas
fstl
iret
or
mov
lcall
sbb
push
or
push
ret
adc
fsubl
sbb
inc
fldcw
aam
add
incl
jno
movsb
cs
inc
test
inc
lock
sti
lcall
mov
cli
cld
ljmp
mov
pop
ss
sbb
js
arpl
jne
flds
mov
fbstp
lret
cld
ret
mov
fnsave
je
push
lcall
push
push
test
pop
xor
and
ret
jp
push
pushf
call
pop
hlt
les
lret
mov
pop
sub
mov
xchg
in
leave
mov
sub
cld
or
call
ljmp
xchg
cmp
sub
daa
ret
stos
popa
incl
cmp
cmp
inc
fisubl
js
dec
sub
ja
cmp
jp
aam
inc
ffreep
ja
cmp
lcall
inc
lret
mov
jg
notb
aaa
jl
push
add
jno
hlt
ret
iret
cmp
add
push
inc
ljmp
hlt
pushf
popa
xor
icebp
jne
xor
jg
pop
dec
out
jbe
mov
inc
data16
cmp
imul
jmp
xchg
iret
mov
sub
insl
call
lcall
mov
sbb
in
aad
daa
std
pop
out
push
dec
dec
ljmp
rcll
nop
aad
mov
nop
mov
fidivrs
decl
shlb
jbe
mov
push
xchg
rcrl
cli
push
inc
adcl
jg
jp
ret
fists
push
sysret
rclb
push
stos
inc
sub
xchg
push
xchg
test
lea
pusha
mov
pusha
movsl
mov
call
or
adc
les
scas
out
ss
lea
inc
mov
sbb
or
mov
cmp
xor
decl
stos
jle
sbb
je
adc
addr16
add
mov
and
mov
mov
js
or
sahf
jnp
lret
mov
mov
notl
pop
ret
mov
add
outsl
inc
mov
pop
pop
ljmp
add
cld
sub
mov
add
mov
fistpl
mov
ljmp
dec
scas
sub
mov
push
sbb
add
pop
jg
bts
incl
jmp
dec
clc
dec
pop
ss
cmp
loop
add
ret
mov
call
pop
int
xor
orb
call
jecxz
js
jns
push
and
cli
sub
and
push
lods
sbb
jmp
cmp
xor
outsb
cmp
and
aad
imul
call
xchg
adc
and
xor
dec
inc
mov
int
arpl
aas
cli
ljmp
loopne
mov
cwtl
dec
sarb
xlat
jecxz
movsl
pushf
push
ja
jnp
mov
sti
js
push
xchg
cld
mov
sar
incl
scas
mov
int
jp
lret
test
mov
cltd
inc
test
subb
mov
js
mov
jns
cmp
and
pop
int3
adc
fstp
push
jbe
mov
push
test
adc
inc
and
add
sub
xor
hlt
jmp
adc
sbb
pop
xchg
dec
sub
stos
repnz
loop
fdivrp
lea
lcall
sub
call
les
push
mov
sbb
in
push
sub
jmp
std
call
arpl
das
add
and
mov
pop
and
stc
das
cld
das
std
insl
lock
outsl
add
in
add
push
lock
push
cmp
jmp
cmpsb
insl
fbld
jg
mov
lret
mov
mov
shlb
mov
pop
les
mov
das
shrb
mov
xchg
xor
adc
movsl
addr16
ljmp
incl
cmp
xlat
dec
and
lret
mov
rcl
call
shrl
ret
icebp
lcall
fld1
mov
popf
pop
add
loope
xchg
ljmp
jg
jnp
sbb
sarb
sub
push
sbb
fcomps
mov
test
fdivrp
shrb
shrb
cld
roll
icebp
xchg
cli
and
dec
adc
lret
daa
mov
jg
or
fwait
js
dec
jmp
cmpsb
push
pop
jp
inc
pop
scas
clc
ljmp
lret
dec
cs
adc
xchg
xchg
stos
jns
pushl
sti
icebp
pop
xlat
mov
mov
push
rorl
jne
mov
ss
pop
adc
fisttpl
incl
jg
pop
fsubs
inc
outsb
clc
add
xchg
or
out
xor
js
cmc
out
lahf
addr16
andb
andl
jmp
repz
std
decl
xchg
dec
stc
jns
jbe
loopne
cmc
out
test
decl
mov
pop
cmp
int
fistpll
lods
push
loop
fbld
lods
adc
stc
sbb
push
dec
push
dec
dec
pop
insb
sti
scas
xor
decl
stos
mov
dec
cmp
cltd
fstpl
imul
push
imul
sbb
fwait
mov
jg
gs
jne
mov
call
scas
mov
sahf
ds
sar
mov
mulb
out
fimull
mov
call
fwait
jbe
push
aas
cmp
jl
pop
cli
nop
leave
call
cmpl
decl
jb
into
sbb
xor
loop
mov
sub
movsb
mov
lock
xchg
xorb
into
push
push
add
jl
mov
sbb
icebp
sbb
in
call
decb
and
push
pop
pop
out
sub
hlt
test
xor
or
xor
decl
xchg
fwait
in
scas
lods
pop
addb
ret
outsb
cmp
mov
shll
decl
add
or
ljmp
and
arpl
adc
inc
movsb
mov
cli
mov
movsl
stc
sbb
fldt
dec
call
cmp
jp
das
lock
fwait
push
into
popf
std
fisubl
das
cmc
call
imul
js
test
clc
adc
les
xchg
mov
loop
idivb
dec
in
sti
imul
pop
mul
sub
lock
mov
fistpll
cmp
les
mov
sub
call
je
dec
push
add
je
xchg
lods
ja
out
adc
mov
outsb
adc
jmp
daa
test
mov
pop
xchg
add
fs
xchg
adc
xlat
stc
je
lods
stos
adc
stos
cli
aaa
cli
lcall
lret
cmpsb
pop
cmp
insl
cmp
in
in
fs
or
sub
cmp
jp
loopne
mov
popa
mov
sbb
out
mov
lcall
call
dec
jecxz
jge
lods
or
jno
add
mov
xor
jg
pushl
mov
xchg
flds
inc
cmp
xchg
push
cltd
jecxz
push
cmp
fucomip
and
jl
and
add
das
mov
pop
mov
xchg
idiv
decl
inc
cs
ja
cmp
mov
push
xor
cmc
dec
sbb
fidivrs
mov
jg
cmp
out
mov
nop
and
ss
jne
and
jg
mov
in
ljmp
add
or
pop
sub
dec
test
ljmp
cmpsl
es
dec
inc
pop
dec
jnp
push
cmp
outsb
pop
shrl
in
notl
insb
sub
scas
pushf
fcoml
stos
add
ljmp
pop
sti
sbb
push
mov
aas
xchg
xchg
cmp
mov
call
out
lods
sbb
fs
xlat
aad
fbstp
je
jbe
mov
aam
jne
es
fldt
and
js
dec
and
push
mov
and
stos
scas
push
mov
nop
mov
call
mov
xor
adc
daa
shl
movsb
push
xchg
insb
pushl
mov
mov
decl
jecxz
rclb
inc
xchg
insl
fcompl
ficoms
mov
mov
arpl
jl
sti
orl
fildll
shlb
add
mov
lcall
mov
push
ss
jp
inc
cmp
jle
fmuls
mov
icebp
jg
fisttps
test
sti
pop
lods
push
daa
and
sbb
xchg
ret
jmp
xor
cwtl
fmull
mov
shrb
jp
stc
push
pop
scas
popa
and
test
test
or
mov
xchg
push
decl
insl
push
fs
sbb
sbb
xchg
mov
ja
sar
incl
daa
or
add
dec
adc
in
adc
inc
pop
pushf
pop
push
dec
inc
mov
and
shrl
shll
cmp
test
adcl
dec
orb
repz
mov
ljmp
ljmp
xor
ficompl
or
ljmp
lock
add
in
jmp
repz
cltd
mov
icebp
jns
jg
pop
cmp
cld
pushl
mov
jns
lea
popa
xor
or
push
loop
std
inc
incl
adc
shlb
pop
jp
shll
cmp
rcrl
scas
xorl
cltd
hlt
lock
lret
adc
sub
sub
mov
movsl
xorb
ficoml
jg
negb
cwtl
lods
iret
roll
dec
pop
adc
jmp
ret
call
adc
mov
daa
jae
mov
xor
dec
xchg
decl
adc
dec
iret
cwtl
sahf
dec
jne
and
dec
mov
icebp
jg
lcall
bnd
daa
iret
sbb
clc
xlat
xor
hlt
mov
mov
jmp
cltd
repnz
jmp
cmp
std
xor
aam
xor
and
shlb
adcl
cld
incl
mov
pushf
mov
ljmp
negl
icebp
mov
mov
jnp
out
mov
clc
movsb
xchg
hlt
mov
mov
push
mov
int
mov
aad
imul
and
scas
test
aam
push
icebp
pop
cli
add
jmp
int
push
sbb
push
push
push
xchg
icebp
call
pop
xor
cmp
sbb
xor
fimull
adc
pop
inc
pushf
clc
dec
push
xchg
pop
add
lcall
pop
stos
ret
sbb
cltd
mov
imul
stc
sarl
loop
or
dec
mov
jnp
mov
add
and
or
ljmp
enter
inc
push
int
leave
lea
jmp
xor
push
pushf
push
inc
mov
jecxz
inc
mov
stc
adc
js
mov
adc
push
add
push
aam
adc
in
jb
clc
adc
pop
insl
addr16
mov
cmp
mov
into
arpl
push
call
lcall
pusha
pop
push
push
mov
and
xor
call
in
std
aaa
clc
ds
sbb
cmp
pop
xchg
incl
pop
pusha
psllq
fimuls
adc
loop
test
loop
icebp
enter
loop
scas
or
popf
addb
jmp
mov
and
fstps
dec
popa
mov
scas
repz
cmp
xor
decl
std
scas
std
roll
mov
test
aad
mov
pop
insl
pop
push
sub
fmull
cmp
or
pop
dec
xor
les
lahf
add
and
pusha
repnz
imul
adc
inc
leave
sahf
loope
and
cmc
xor
mov
sbb
cld
add
std
sub
mov
ljmp
jbe
mov
xor
mov
shl
out
fmuls
mov
jnp
jnp
decl
call
pusha
addr16
lods
stc
mov
in
aaa
fmulp
popf
jns
mov
test
arpl
std
lretw
sub
cmp
test
call
rolb
stos
data16
out
arpl
lods
pop
mov
ret
test
lcall
and
lret
sbb
lods
in
xorb
jmp
dec
push
push
lods
fcomip
stos
or
je
imul
mov
push
add
cmpsb
rorl
lea
cmp
xor
in
push
mov
fstpl
fwait
ja
push
jle
jecxz
jmp
addl
addr16
je
inc
jp
xchg
sbb
scas
daa
push
clc
pushl
js
jg
or
js
nop
sbb
jmp
in
ja
pushl
jb
cmp
xchg
fsubs
xor
scas
sahf
or
ljmp
icebp
das
sbb
and
es
in
xor
pushl
mov
xor
repz
nop
mov
fbstp
fwait
xor
arpl
out
pop
ljmp
insl
dec
in
pop
loope
jae
in
or
es
clc
scas
loope
jnp
gs
adc
mov
push
cld
mov
sub
leave
xor
jns
out
int
aas
xchg
jnp
pop
pop
cli
add
sub
mov
nop
cmp
xor
mov
mov
and
pusha
sti
cmp
daa
int3
pushf
movsl
jl
int
shll
jmp
push
movsl
or
pop
clc
mov
out
adc
inc
sub
cli
lcall
std
and
cmpsb
mov
hlt
insb
enter
sub
adc
shlb
loop
pushl
icebp
mov
pop
jo
neg
leave
xchg
and
stc
or
sub
jl
insb
xor
xchg
enter
and
and
mov
out
mov
mov
mov
cmp
loope
in
sub
pop
cwtl
jg
mov
lods
jb
test
idiv
pushl
js
bound
pop
cmpsb
jmp
fistl
imul
ficompl
pushl
clc
call
jle
sbb
fcomp
adc
test
push
je
sahf
sbb
std
fisttps
mov
les
mov
fisubrl
jmp
pop
rcl
repz
mov
jne
mov
outsl
mov
or
je
xor
add
out
nop
or
ljmp
jg
outsb
fldcw
stos
popa
out
outsb
adc
stos
cmc
iret
jle
lods
mov
in
aas
jbe
addr16
push
jmp
xchg
clc
incl
push
inc
pop
lret
mov
cmp
cld
or
lcall
das
std
add
loopne
push
pop
mov
or
ljmp
test
fadd
jmp
mov
adc
aad
jmp
lcall
cli
and
inc
jmp
pushf
mov
sbb
cli
pop
mov
xor
mov
lcall
sub
adc
jnp
mov
mov
xlat
fimuls
stos
push
outsl
inc
sbbb
lods
in
pusha
leave
and
loopne
and
dec
cmpb
cmp
mov
iret
jg
stos
cwtl
ret
test
pop
jne
movsb
cmpsb
iret
sub
ljmp
pop
pop
mov
cld
mov
loope
jmp
adc
add
mov
inc
mov
sbb
repz
push
decl
aam
test
dec
pop
sahf
data16
hlt
cmp
ret
mov
mov
cmc
pop
shll
mov
mov
cmp
mov
lahf
jmp
pop
aam
mov
push
sbb
addr16
daa
data16
ret
mov
xchg
mov
pop
clc
sbb
xchg
cmp
loopne
les
lcall
js
mov
push
pop
pop
cmp
les
jns
mov
mov
call
addr16
cwtl
imulb
pop
loop
mov
cs
ljmp
shl
dec
cmpsl
mov
push
pop
sbb
add
aad
lret
test
add
stos
pop
ja
in
aad
call
pop
ja
gs
and
pop
incl
arpl
sbb
mov
dec
sub
push
decl
xor
shll
adc
in
mov
mov
cmp
mov
mov
addr16
fildll
dec
mov
pop
insl
cmpsl
enter
scas
subb
jne
ljmp
jo
and
dec
into
cmp
std
adc
pop
lret
lods
test
mov
xchg
shl
das
lock
jnp
sub
push
loop
out
pop
sbb
outsl
cmc
mov
das
int3
push
xchg
in
pop
rorb
push
mov
cltd
add
xor
mov
dec
fnstenv
inc
pushl
ljmp
xchg
popf
fwait
cld
sti
mov
xor
aas
adc
fistl
js
lret
stos
int3
aaa
jne
pop
mov
inc
jl
push
ljmp
jmp
jno
or
push
hlt
inc
adc
pop
jmp
aaa
ss
lcall
lock
lcall
lea
out
inc
fucomip
das
cmc
popf
out
int3
mov
xorb
pop
data16
mov
fists
movsl
nop
lods
adc
fidivl
dec
inc
cltd
mov
jg
mov
jg
pop
ret
ss
ficoms
mov
shrb
xor
push
pop
ret
aas
mov
jmp
or
xchg
mov
in
shlb
repz
movsb
jge
icebp
xchg
les
jg
xchg
sub
into
mov
sahf
insb
push
jg
daa
adc
sub
jl
pop
fildl
call
lahf
lods
imul
mov
nop
and
in
adc
cmp
aas
pop
in
test
inc
push
movsb
push
jle
push
mov
add
pop
aaa
rclb
call
dec
scas
xchg
and
pop
push
xchg
imul
repz
dec
jo
div
mov
cs
dec
clc
clc
cmp
push
loopne
shlb
xor
dec
fistpl
mov
test
iret
jb
dec
xchg
hlt
jge
inc
mov
shrl
sub
sbb
test
out
in
mov
fwait
enter
and
movsb
inc
stc
popf
pushl
call
aam
aam
cmp
add
insb
mov
mov
cmp
jmp
cmpsb
mov
mov
lods
clc
sub
pop
jmp
add
inc
sub
aad
insl
jmp
test
pushl
test
sti
clc
push
cmpsl
hlt
or
push
pusha
pop
jno
das
cmp
sti
outsl
hlt
ljmp
movsl
std
orb
xchg
je
adc
push
imul
ljmp
push
inc
xor
sub
es
dec
mov
decl
xchg
fstpl
pop
not
out
dec
adc
jo
dec
orl
push
jmp
fldenv
loopne
jmp
lea
fwait
push
push
pushl
loopne
xchg
cmc
lcall
push
call
mov
sub
popa
or
sahf
pop
test
es
push
inc
sti
je
inc
mov
gs
sbb
lret
push
repz
push
call
push
aam
in
jbe
daa
or
mov
mov
push
decl
outsb
adc
sub
out
xchg
mov
ret
lea
sub
push
decl
cld
inc
xor
mov
mov
pop
adc
ret
icebp
mov
adc
lcall
fisubl
out
call
mov
cltd
or
push
pop
cmpl
decl
sbb
add
dec
cli
jns
xor
outsl
jbe
mov
sbb
pushf
mov
fstpl
movsl
xchg
cli
xorl
ds
test
cmp
out
ss
push
gs
decl
push
cmp
lret
and
test
loopne
sbbb
push
push
lock
and
sub
add
add
add
mov
scas
mov
mov
clc
sub
outsl
lock
hlt
adc
xor
fsubrs
lods
pop
ja
loopne
jmp
movsl
aaa
aaa
add
jge
jnp
ret
or
xchg
mov
cmp
add
ds
subl
outsb
cmp
cld
sub
in
mov
aaa
jl
insb
pushl
sub
pop
sbb
std
add
test
dec
jl
cs
pop
fsub
ljmp
cld
dec
pop
xlat
mov
leave
pop
add
lods
in
mov
xlat
int
cmc
xlat
and
mov
pop
decl
mov
and
or
mov
incl
mov
shrl
add
jnp
jl
mov
mov
push
sar
popf
fs
dec
outsb
xchg
int
sbb
outsl
push
data16
pop
sti
stc
xchg
ds
cmp
idiv
push
jmp
jbe
sahf
lods
sbb
pop
lods
cli
inc
mov
fcomip
pop
dec
inc
sub
xchg
cli
cld
adc
jp
rcrb
and
lret
call
movsl
xchg
inc
mov
adcl
stos
movsb
cmp
cld
call
incl
imul
push
idivl
sub
inc
xor
push
xchg
hlt
xor
dec
das
jo
mov
sub
ret
jne
push
add
or
js
pushl
fsubs
sbb
pop
and
mov
xchg
sti
pop
fnsave
divb
or
dec
sub
sbb
jns
push
jmp
test
pop
aas
mov
int
movsb
cmp
jmp
mov
bound
xchg
pop
jb
in
inc
js
mov
jp
out
das
mov
dec
aam
and
dec
rorl
cltd
out
xchg
ljmp
jnp
out
jae
xor
inc
xorb
daa
call
dec
jle
xor
jmp
xchg
inc
imul
mov
decl
push
and
fimuls
mov
ds
rcrb
out
aad
or
cmp
movsl
sub
cmpsl
lods
cmp
push
hlt
lcall
pop
pop
pop
mov
jbe
std
movsb
inc
pushf
stos
cmp
fmull
mov
outsl
mov
push
in
fwait
lahf
pop
push
dec
push
push
in
inc
paddsw
mov
call
dec
adc
sub
daa
ret
mov
or
movsl
jecxz
lret
sbb
ljmp
or
out
xchg
mov
jne
cs
and
test
mov
mov
sar
sbb
adc
fmuls
jecxz
dec
test
jmp
stos
test
xchg
das
adc
mov
fnstcw
fsubrl
sbb
ja
cmp
dec
cld
roll
stc
int
adc
out
in
test
jne
sbb
jmp
xchg
jge
mov
cli
int3
jae
push
and
daa
sti
aaa
or
mov
sub
and
push
adc
sbb
and
out
data16
les
call
add
sbb
shlb
ljmp
into
push
and
cmp
aam
push
sbb
aam
loope
lods
rol
sti
add
adc
pop
inc
cmp
test
arpl
sbb
xchg
fcoms
adc
sub
jecxz
fcom
das
cld
jg
add
add
mov
push
jno
out
mov
mov
push
test
cltd
pop
mov
sar
ljmp
inc
popa
sub
pusha
cmp
gs
loopne
fiaddl
and
lcall
icebp
pop
cli
adcl
stc
in
and
cltd
pop
mov
mov
fucomi
jnp
cmp
sub
loope
subl
and
popf
scas
fdivrl
filds
lock
cs
xor
call
pushl
lahf
fbld
pop
incl
push
or
xchg
jg
mov
mov
stc
data16
imul
sbb
test
aam
pop
out
pop
xor
popl
fstps
mov
mov
mov
fbstp
sub
sbb
mov
adc
and
and
iret
out
addr16
lock
les
pop
pop
popa
inc
or
adc
call
clc
outsl
leave
cmp
sahf
icebp
hlt
jp
mov
dec
jae
push
loopne
xchg
stos
shll
decl
pop
test
mov
rorb
shll
pop
cmp
sbb
mov
inc
movsb
call
incb
mov
dec
sbb
test
push
add
cmp
push
insl
adc
fxch
or
and
and
sti
jge
adc
jle
pushf
push
inc
inc
cmpsb
leave
adc
jno
mov
mov
jmp
jg
pushf
xor
addr16
mov
jl
add
mov
std
push
arpl
or
pop
and
inc
test
ljmp
incl
xlat
pop
sbb
popa
ljmp
popa
jo
mov
incl
outsb
mov
icebp
mov
loopne
adc
inc
jb
pop
jle
test
pop
call
call
inc
jne
int3
jl
loope
sub
scas
jg
pusha
jg
dec
dec
fcmovne
insl
push
lahf
xchg
inc
mov
jmp
push
jl
loop
mov
mov
cmpsl
dec
clc
sub
jno
adc
mov
scas
cltd
sbb
clc
das
icebp
call
mov
cmc
cmpsl
xchg
aaa
imul
je
pusha
call
or
sub
or
jg
mov
notb
sub
push
popa
xor
jae
scas
cmp
xchg
int3
ljmp
pmaxub
dec
in
mov
ja
clc
ja
jae
sub
mov
ljmp
aad
sahf
or
mov
sub
inc
fcoms
popa
xor
cwtl
dec
mov
sar
ja
ffreep
sbb
arpl
or
ja
inc
fildll
shll
xchg
cli
jg
repnz
xchg
sbb
xchg
icebp
ret
pop
aam
xor
std
decl
aad
popa
clc
xchg
adc
in
push
sub
sbb
movsb
and
fs
std
dec
mov
dec
std
popf
aas
or
and
pop
pop
rcrb
call
inc
pop
xchg
xor
sub
push
in
cmp
push
loop
call
jmp
xchg
or
addb
scas
roll
pop
js
pop
dec
mov
arpl
clc
mov
std
sub
mov
pop
stos
negl
cld
lcall
push
or
shrl
mov
adc
into
mov
jno
mov
cld
fucomip
xchg
inc
jns
loopne
cmp
clc
dec
xchg
cmp
pop
mov
push
decl
gs
movsl
inc
inc
sarl
pushf
xchg
add
mov
inc
push
push
mov
mov
xor
ljmp
sarb
outsl
jo
aad
push
sub
repz
mov
mov
jg
test
jg
adc
add
fidivs
sbb
pop
rcr
pop
cmpb
out
rcrl
push
les
ret
push
movsl
orl
add
adc
sbb
loop
icebp
decl
jmp
add
fs
mov
or
mov
dec
out
sub
jg
mov
dec
loop,pt
shrl
adc
sbb
in
shr
call
test
sbb
or
pop
rcrl
mov
xchg
std
stos
push
xchg
jnp
cmp
push
testb
or
lods
ljmp
std
sahf
dec
test
lea
lock
jecxz
inc
adc
mov
loope
pop
dec
push
mov
push
clc
jg
ret
loope
sub
addr16
aas
sub
push
les
and
das
std
push
push
fstpl
mov
push
adc
push
cmp
out
push
stc
sti
loopne
push
pop
pop
mov
out
mov
inc
sbbl
jg
mov
pop
mov
std
pop
les
pop
sub
mov
sbb
push
xchg
push
add
outsb
out
in
stos
adc
push
mov
jmp
push
jno
jne
inc
andb
dec
jb
jmp
lcall
xchg
int3
adc
mov
scas
sar
lret
adc
lcall
stos
cmp
addr16
loopne
push
in
sub
pop
shrb
lcall
je
mov
and
test
pop
rolb
jne
sub
clc
xchg
clc
add
push
cwtl
fwait
int
ss
fcoms
mov
cmpsl
stos
pushf
stos
enter
mov
loopne
addr16
sbb
test
jb
pop
clc
outsl
cld
jl
dec
jb
mov
or
cmpsl
lock
push
das
sub
stos
pop
pushf
and
cmp
sub
cmpsb
sbb
ds
rcrb
jg
mov
clc
mull
xor
ret
test
movb
and
sub
mov
inc
sar
incl
pop
xor
push
insl
and
push
andb
outsl
bnd
sub
sbb
clc
ljmp
cld
fmull
fadds
pop
sbb
das
jns
inc
leave
and
std
mov
or
movsb
je
sub
mov
push
lcall
mov
xlat
punpckhdq
cmp
imul
outsl
sarl
push
fsubl
or
pushl
cmp
gs
fisubs
and
push
mov
mov
test
mov
xchg
jg
ljmp
sbb
in
movsb
fildl
idivl
xorb
or
in
aas
out
xor
in
cmp
or
mov
lcall
mov
inc
outsl
iret
fildl
in
fstps
aad
sub
push
pop
cld
pop
jne
fwait
adc
inc
jbe
jmp
pushl
in
dec
sub
mov
lea
cmp
je
in
jle
pop
inc
or
cld
or
cld
jmp
push
pusha
cmp
das
std
jmp
loope
mov
into
insl
mov
repnz
adc
fstpl
decl
and
insb
aam
inc
insl
inc
xchg
aad
aas
mov
incl
push
push
iret
adc
cmc
mov
jmp
in
call
push
mov
insl
xchg
shlb
and
ja
dec
movl
or
push
xchg
ljmp
pop
cli
mov
dec
outsb
mov
push
pop
out
xor
jo
pop
std
cmc
test
repnz
cwtl
mov
sbb
xor
mov
pop
and
ljmp
sarl
sbb
sahf
test
xchg
mov
mov
inc
and
sahf
pop
cld
jmp
xchg
aam
mov
call
test
pushf
cmp
adc
sbb
xchg
push
jg
mov
nop
fs
jb
in
mov
sub
cmp
pop
jmp
xor
ret
mov
ret
orb
sbb
shlb
inc
sbb
incl
xchg
mov
xor
lods
mov
leave
icebp
inc
inc
mov
jmp
leave
movsb
mov
into
and
cltd
mov
popf
movsb
cmp
lcall
and
lea
out
adc
clc
add
js
fstpl
pop
and
pop
hlt
jnp
mov
dec
negb
incl
or
pop
or
outsb
jo
inc
popa
movb
xchg
clc
lods
jno
mov
sbb
push
cmp
popa
jbe
decl
jp
jns
fidivrl
pushf
xor
xchg
inc
mov
jmp
pop
lret
scas
pop
mov
jg
jb
sub
lcall
jne
mov
in
pop
repnz
test
cld
adc
push
filds
inc
mov
jmp
mov
repz
gs
test
movsb
sbb
add
mov
loopne
addr16
ficoml
inc
pop
pushl
scas
push
dec
movsl
int3
out
gs
aam
jp
inc
pop
xchg
les
cli
test
fucom
leave
or
and
pop
cmpsl
sub
pushl
push
mov
fcompl
hlt
fadds
ret
xor
incl
test
sub
into
jl
pop
ret
sbb
inc
jle
outsl
pushf
hlt
icebp
andb
mov
dec
mov
adc
lock
xchg
mov
int3
cmc
aaa
clc
pushl
jnp
ficomps
mulb
pop
sahf
ljmp
lock
decl
cmp
outsl
fsts
shlb
jne
sbbl
or
clc
call
mov
lods
into
adcl
negl
jbe
out
or
lcall
lds
orl
jae
iret
in
test
jg
xor
push
out
jmp
icebp
fsubrs
subb
add
and
test
jmp
subl
jp
mov
mov
push
jbe
cltd
fwait
cltd
dec
stos
repz
adc
add
call
add
cmpsl
cltd
jecxz
lods
add
loope
negl
sbb
xor
call
mov
cmp
loop
shl
cmp
sarl
leave
ja
lea
in
test
test
call
sahf
xor
fnstsw
or
mov
mov
push
dec
movsl
insl
push
jg
lcall
and
push
mov
sbb
daa
out
cmp
jecxz
dec
ror
out
lods
idiv
jmp
fbstp
or
subl
mov
xrelease
test
and
clc
pushl
inc
hlt
and
stos
push
leave
and
or
sub
shrb
and
es
xlat
outsl
decl
fnstenv
xchg
data16
popf
push
movsb
xor
dec
pushw
mov
addl
js
ja
decb
sub
test
mov
aaa
xchg
psrlw
sarl
pop
mov
xchg
rdtsc
mov
pop
or
outsb
adc
jg
or
mov
xor
ret
push
addb
call
sahf
imul
mov
pop
mov
ror
inc
add
sbb
jmp
xor
fisttpl
mov
jg
mov
dec
fwait
hlt
mov
mov
mov
pop
enter
cmpsl
std
call
cli
cmp
dec
jns
dec
jecxz
dec
sbb
sbb
mov
add
pop
add
test
decl
sub
fstps
dec
test
addr16
sbb
pop
and
mov
dec
lds
push
aas
daa
adc
nop
push
pusha
fdivl
jg
out
fwait
push
jmp
loopne
pushf
sbb
pusha
sbb
inc
jae
das
std
mov
popf
repz
push
fdivrs
out
xchg
clc
imul
mov
dec
lret
sub
pop
movsl
mov
sub
rcrb
or
mov
movsl
decb
jmp
pop
dec
jbe
nop
aam
jnp
call
int3
jbe
sbb
es
dec
pop
cli
imul
outsl
or
lret
fiaddl
pop
sarb
imul
in
loop
enter
dec
push
fucom
jmp
pusha
scas
int
mov
incl
sub
sub
outsb
sbb
and
push
jmp
pushl
test
sbb
lahf
lods
dec
xor
repnz
je
sub
in
mov
leave
jg
jns
cmp
arpl
cmp
push
dec
dec
ds
mov
inc
mov
imul
push
dec
ds
mov
les
sbb
add
add
jg
das
sbb
cmp
nop
and
stc
stos
sub
mov
cmp
cld
pushl
test
inc
pushf
test
jb
test
cld
pop
testl
test
xlat
in
loope
inc
sar
outsl
mov
clc
fdivr
test
jb
in
cmpsl
loopne
fnstenv
bound
jg
loope
rcll
pushl
mov
clc
inc
lea
cwtl
sarl
sbb
sub
ret
aaa
arpl
aas
xchg
mov
mov
add
adc
pop
insb
shrb
pop
mov
movl
inc
jg
repz
jl
push
push
negb
popf
mov
repz
jge
incl
inc
dec
test
mov
pop
or
jmpw
jp
jnp
outsl
hlt
lods
ljmp
mov
xor
sbb
ss
dec
lahf
mov
call
dec
or
jno
inc
push
cli
pusha
pop
outsl
xchg
idivl
mov
fcmovne
mov
push
call
push
sub
out
jg
xlat
or
jg
aad
lock
out
jge
cwtl
xchg
cli
pop
sahf
mov
shll
imul
push
cmp
rcrb
out
and
sub
sbb
mov
lcall
les
and
imul
ret
xchg
jecxz
sbb
mov
jbe
push
lcall
xor
xchg
jmp
sbb
mov
clc
outsl
lock
sub
mov
adc
lods
jns
sahf
mov
lea
pushl
push
pop
sub
sub
fnstenv
pop
andl
adc
dec
mov
sub
adc
sbb
stos
test
xor
pop
vmwrite
cld
ljmp
cmc
scas
xchg
sbb
ja
in
ror
int3
push
jo
mov
das
jnp
inc
les
jl
cmp
iret
jnp
cmc
mov
aad
jg
decl
mov
in
push
scas
sub
ret
arpl
lcall
inc
mov
ds
dec
outsl
cmc
mov
adc
mov
jge
jg
decl
aam
aas
pop
insb
test
test
ds
cmc
pushl
mov
and
sti
sbb
add
xlat
push
test
jbe
and
jp
sarb
lds
add
cmpl
mov
cs
xchg
mov
jge
test
adc
adc
mov
jmp
loopne
lcall
inc
fnstsw
push
mov
push
sahf
outsl
outsb
dec
adc
and
cmpb
cmp
adc
sub
dec
inc
rcl
loopne
idivb
mov
mov
test
ret
filds
jmp
test
push
adc
cli
mull
jge
xchg
out
adc
sbb
sbb
cs
or
or
cltd
xchg
mov
push
fildl
add
rcr
jle
pop
dec
shll
imul
lea
sti
ret
cwtl
mov
imull
aaa
subb
mov
outsl
cmp
call
aas
aad
xchg
jle
sbb
pop
sub
add
pop
testb
push
add
clc
mov
out
sub
out
push
xchg
pop
cmc
ficompl
fnsave
das
push
push
dec
or
outsb
movsb
or
decl
cmc
or
pop
or
or
adc
rorb
mov
add
aas
or
and
lods
or
ret
push
and
xchg
fidivrl
int3
cmp
fidivl
push
inc
mov
inc
dec
dec
inc
lock
jae
je
push
ret
in
popf
mov
dec
pop
fildll
or
push
mov
loope
fsubl
daa
pop
and
sbb
shrb
fwait
or
or
out
in
dec
fiaddl
lcall
mov
and
lds
aam
or
mov
stc
inc
push
xchg
mov
loopne
pop
xor
ljmp
cli
pop
cltd
xchg
test
inc
mov
xor
ljmp
jmp
mov
andb
jmp
mov
sbb
ret
mov
sbb
das
icebp
jmp
inc
loopne
outsb
or
ljmp
xchg
pop
movsb
pop
pusha
test
add
ds
fadd
inc
mov
lcall
pop
imul
jb
rorb
cs
imul
sub
clc
dec
inc
test
dec
enter
inc
sbb
add
decb
push
mov
mov
int3
jns
cmp
inc
mov
int3
cmp
cs
sti
lret
aam
ljmp
push
xor
lcall
sub
add
push
xchg
push
icebp
jg
into
push
fiadds
call
shlb
and
je
pop
or
pop
jmp
mov
jne
mov
lcall
xchg
cli
fndisi(8087
imul
inc
fwait
jb
rolb
aam
adc
mov
push
enter
lods
fsub
xchg
aam
jbe
outsl
cmp
add
rclb
leave
jo
mov
and
aam
mov
je
push
push
cmc
stc
test
inc
repz
and
insl
fdivs
cmp
mov
xor
insb
mov
imul
in
movsl
mov
add
sbb
xor
jmp
mov
loopne
mov
jl
lahf
testl
outsl
std
ljmp
out
inc
mov
les
insb
mov
mov
xchg
loope
decl
mov
push
xor
movsb
pop
leave
stos
mov
inc
inc
add
dec
fcomi
inc
and
and
out
aas
mov
push
adc
out
stos
adc
pusha
ja
adc
std
call
dec
fisttpll
xor
pop
jns
out
fiaddl
add
cmp
mov
stos
and
sbb
lods
loopne
mov
push
fstl
in
popa
pop
inc
lods
sarl
test
repnz
clc
xchg
push
decl
xchg
ret
les
das
push
inc
push
je
cs
xchg
stos
add
aas
lods
jg
rorb
jae
pop
mull
inc
pop
pusha
std
mov
sub
sbb
mov
mov
ret
and
out
pop
in
push
sub
call
pushl
ret
cmpb
push
rcll
bound
mov
mov
jmp
hlt
out
lds
jo
cs
gs
pop
jbe
cmp
std
jg
movsb
cltd
cmc
push
lret
outsb
pop
fildll
addl
dec
in
inc
into
add
imul
les
loopne
sti
sbb
loope
outsb
mov
cmp
jmp
ret
mov
mov
xchg
scas
add
sbb
mov
sbb
dec
idivb
test
icebp
jno
lcall
clc
in
adc
cmc
movsb
cs
mov
mulb
cmp
andb
ljmp
div
sub
mov
fs
insb
cmp
testl
xchg
pushf
std
ss
adc
cmpsb
movsl
loop
xor
push
or
inc
inc
lret
lock
jbe
je
or
stos
cmp
fucomp
jmp
mov
xchg
sahf
jg
fistpll
jno
push
xor
bound
fisttpl
add
mov
imul
pop
mov
pop
jp
arpl
outsb
hlt
pushl
xor
repz
pusha
push
cmpl
pop
mov
jb
xchg
dec
and
jp
cwtl
repnz
lcall
pushf
out
mov
ds
mov
pop
mov
das
pop
dec
sub
fisubl
mov
ss
push
out
movsl
icebp
data16
xchg
mov
mov
xchg
mov
cli
xchg
pop
jne
fwait
and
jmp
fcompl
out
mov
lods
ds
in
daa
pop
push
cmp
mov
addr16
decl
lock
test
aas
and
sub
mov
ret
inc
lods
cmp
aad
push
jne
mov
mov
das
cmp
or
cmp
in
jae
out
call
dec
test
popa
fidivl
push
movsb
sbb
jno
mov
iret
incb
jmp
and
aaa
ret
mov
push
insl
outsl
lock
mov
xor
jp
push
outsb
movsl
xchg
out
clc
decl
adc
xlat
xchg
pop
adc
in
cmpsb
push
jge
push
xchg
inc
pop
rolb
xor
clc
pushl
add
push
imul
scas
fdivl
push
enter
orl
jle
sbb
pop
adc
incl
roll
sbbb
add
or
ljmp
push
call
sbb
or
jne
xchg
lcall
inc
insl
movsl
push
push
repz
mov
mov
scas
xorl
jnp
dec
call
inc
lods
mov
sub
repnz
pop
adc
scas
xor
mov
test
std
jg
das
hlt
je
jb
xor
imulb
jno
mov
loopne
jmp
test
pop
out
aam
mov
mov
call
pop
icebp
jbe
mov
mov
adc
xor
repnz
jno
mov
aas
adc
xchg
inc
cld
inc
stos
push
lcall
std
mov
fistl
mov
mov
jbe,pt
mov
das
icebp
ljmp
add
insl
mov
into
out
je
aas
hlt
mov
adcl
imul
jns
sub
cmc
je
add
cmp
ja
mov
mov
mov
adc
jg
fadds
sub
pop
fcoml
shr
xchg
jg
cmpb
mov
inc
add
cwtl
pop
inc
lods
mov
jecxz
mov
movsl
fisubs
and
lods
sbb
outsl
das
mov
repnz
or
xor
sbb
pop
leave
inc
sbb
in
icebp
popa
jmp
scas
arpl
ljmp
pop
aas
cltd
int3
std
aad
imul
or
xchg
xchg
jbe
mov
jo
push
test
lcall
pushl
push
adc
and
insl
sbb
lock
test
div
mov
push
aaa
push
sarl
leave
inc
ljmp
fld
xchg
scas
cmpsl
push
mov
into
mov
scas
addr16
out
rcll
popa
xchg
rolb
jmp
mov
pop
jge
enter
sar
cli
lods
inc
add
push
lret
out
add
andl
das
cmc
mov
lods
and
ljmp
inc
push
cld
fs
adc
sti
mov
ret
call
cli
jmp
fsts
std
dec
call
into
ficoml
cwtl
test
mov
cmpsl
sub
movsb
inc
pop
in
aas
mov
or
push
decl
dec
mov
mov
scas
jmp
and
mov
lahf
sbb
movsl
or
loopne
mov
push
ja
call
js
int3
leave
sahf
mov
mov
mov
push
test
dec
movsl
push
push
push
sar
shll
cmp
jns
in
pushl
jo
mov
xchg
mov
sbb
mov
jecxz
inc
scas
out
push
add
ret
pusha
adc
jg
fdivrl
jge
mov
jg
sbb
pop
mov
xchg
lds
je
sbb
test
sub
dec
cmc
inc
dec
pop
cmp
inc
fisubs
inc
ret
fwait
cmp
loop
pop
sbb
pop
sbb
addr16
pop
ss
shrb
cmp
inc
or
aad
or
loop
inc
xor
push
std
rorl
int
pop
push
pop
cmp
sbb
fadds
sbb
jmp
and
jae
lahf
xor
imul
sbb
sahf
pop
pop
or
push
popa
jne
sar
in
outsl
inc
idivl
popf
addb
loope
adc
push
outsl
or
aas
lods
jle
or
mov
lcall
cld
roll
ret
into
loop
pop
gs
inc
adc
and
scas
icebp
js
incb
mov
mov
aaa
inc
dec
sarb
dec
or
inc
sbb
rorb
les
js
cld
popf
xor
push
jp
pusha
sub
jg
rcr
mov
mov
cmpsl
inc
push
push
sub
inc
hlt
pushl
mov
pop
sub
cmpsl
jmp
push
add
stos
pusha
cmp
das
xlat
rcrb
push
stc
pushl
test
scas
xor
push
int3
mov
insl
std
xchg
xchg
cld
les
dec
mov
and
test
outsl
jne
rcr
jno
push
mov
mov
xchg
adcb
leave
data16
pop
and
ds
mov
call
mov
xlat
sbb
mov
in
testl
lds
dec
or
cld
pop
int3
stos
loope
or
mov
dec
leave
push
add
incl
aaa
and
ss
xchg
lahf
test
push
push
dec
cwtl
xor
pop
mov
xchg
test
sub
cmp
xor
outsl
cld
xchg
adc
sbb
dec
fs
repz
mov
rcrb
lock
xlat
nop
in
cmpsl
pop
cmp
movsb
push
shlb
incl
rolb
dec
mov
and
xor
incl
ja
hlt
stc
jbe
rorl
xor
movsl
jbe
daa
xchg
xor
lcall
popa
into
fistps
inc
int3
add
shlb
imul
insl
js
mov
cli
or
sub
cmp
push
push
xchg
jbe
out
cs
je
pop
imul
xor
loope
and
call
movsl
jmp
mov
lret
insl
mov
or
dec
xchg
push
out
lcall
ret
dec
int3
sbb
adc
rcl
inc
lret
into
lahf
adcb
int
loopne
inc
jg
cli
sub
bound
pop
jecxz
dec
lods
mov
or
and
leave
inc
pop
sub
adc
dec
mov
lods
outsl
aam
pop
or
icebp
or
lret
pusha
imul
shrl
nop
inc
inc
pusha
fcmovbe
or
mov
cld
cmp
push
push
dec
jp
imul
out
call
subb
les
fnstcw
xor
sub
cmc
inc
stos
or
sbb
push
movsl
dec
jg
cli
add
cmc
lods
push
mov
jae
adc
or
jp
xor
sbb
dec
pop
aaa
pop
call
dec
lret
lods
push
push
adc
sbb
jb
dec
sbb
jne
ficoms
loopne
es
add
mov
cwtl
xor
jp
decl
pop
popa
ret
enter
and
add
idivl
and
insb
pop
incl
movsl
fisubrl
cwtl
sbb
popa
daa
mov
cmpsb
xor
idiv
push
push
pushl
repz
fdecstp
inc
and
push
jecxz
or
mov
adcb
scas
subl
js
mov
push
jg
mov
mov
data16
pop
mov
push
mov
cs
mov
add
pusha
dec
mov
lahf
mov
push
scas
xchg
inc
inc
call
mov
mov
mov
inc
pop
test
fmul
call
gs
fdivrl
jmp
pop
cmp
ret
pop
out
inc
sbb
stos
pop
mov
push
pop
lahf
orl
arpl
mov
call
dec
fwait
or
sbb
push
dec
scas
xchg
outsl
lock
fxch
out
sub
pop
aam
data16
loop
insb
mov
mov
lret
movzwl
xor
pushf
imul
mov
enter
call
inc
test
mov
jo
lret
hlt
andb
fbld
ja
ljmp
cld
lods
aad
popf
cmp
ss
push
jg
inc
mov
ss
mov
mov
sub
mov
pop
movsb
fldcw
movl
pop
insb
daa
push
loopne
inc
sbb
ret
insb
push
aaa
sarl
cli
push
push
gs
xchg
push
popf
mov
or
outsl
hlt
ds
movsb
inc
cmp
xchg
movsb
mov
jl
mov
mov
subl
xor
adc
mov
jp
loope
xchg
cltd
aad
lods
fnstsw
jmp
jne
imul
xor
adc
into
sub
inc
xor
sbb
ljmp
xchg
shl
test
jg
testb
ret
fdivl
inc
gs
cmpsl
xor
mov
jne
mov
lret
int3
repz
jmp
jge
sbb
scas
shl
gs
pop
movsb
mov
add
or
xorb
adc
popa
dec
scas
lcall
sbb
ljmp
xchg
out
int
sahf
sarb
in
xlat
xchg
mov
or
mov
or
js
cs
cmp
jno
mov
pop
sub
xor
lcall
sub
adc
mov
cmc
jmp
int
jae
aad
jmp
sarl
scas
mov
lcall
sbb
stc
sub
mov
mov
jo
test
ds
dec
call
cld
cltd
xor
push
pop
add
popf
in
mov
sbb
fwait
push
call
push
test
and
push
jns
pop
inc
pop
inc
jmp
dec
popf
lret
sub
call
push
xor
and
sbb
lds
jg
or
mov
dec
mov
cltd
lods
fsubrs
movsl
int
sub
or
xchg
sbb
outsl
cmc
pushl
xchg
lods
push
sbb
leave
fildll
aaa
lret
push
adc
xchg
into
sbbb
jg
loope
xor
and
adc
outsl
test
cmp
in
mov
cltd
or
mov
pop
andl
icebp
fmull
push
sub
or
mov
xchg
aam
in
sbb
jmp
ljmp
or
xor
inc
ja
jb
sub
jmp
cmpsl
fisubrl
lods
pop
arpl
aad
cmpsl
dec
pop
or
scas
sub
cmp
call
adc
sbb
add
cmp
inc
mov
ds
inc
xrelease
add
popl
adc
out
imul
ljmp
lock
and
mov
add
lcall
mov
scas
mov
pop
fadd
mov
pushf
adc
push
inc
loope
fucomp
or
jle
push
call
pop
xor
fldl
dec
sub
jle
jecxz
adc
cwtl
fucomi
add
movsl
mov
aas
jmp
pop
mov
mov
in
mov
mov
cmp
pop
ljmp
pop
pcmpgtd
xor
mov
xchg
lds
std
lock
mov
mov
ljmp
cld
insl
outsb
js
inc
fldcw
ljmp
sbb
or
jb
incl
lea
lret
cmc
les
jbe
cmp
sbb
lcall
call
mov
fimull
inc
cli
lret
js,pn
pushf
in
mov
lods
push
fucomi
cmp
or
sbb
mov
mov
out
pop
rol
mov
jg
pop
cli
xlat
sbb
jmp
lds
outsl
mov
mov
out
jae
jmp
push
pop
in
add
rorl
daa
loop
test
pop
and
cs
decl
std
call
stos
adc
mov
xor
jge
mov
enter
inc
mov
mov
sbb
icebp
testl
jl
fisttpll
mov
jmp
adc
sahf
lar
shr
outsl
sarb
fstps
push
mov
bound
lcall
adc
out
add
mov
xchg
mov
out
lods
sub
fidivs
jp
call
cli
pop
mov
xchg
cli
ja
adc
es
loopne
dec
fnstsw
mov
mov
test
out
cmpsb
xchg
adc
ljmp
sbb
lods
out
dec
daa
ror
push
xchg
or
push
aaa
fsubp
jge
mull
cwtl
mov
and
fnstenv
sarl
call
inc
std
sub
shr
das
hlt
das
icebp
add
fsubp
jl
or
mov
sbb
into
daa
push
call
call
xlat
loope
push
sub
daa
out
pop
in
imul
dec
xor
jp
ret
int3
cmpsb
cli
call
sub
call
sub
shlb
mov
jecxz
cmp
mov
in
and
xchg
aas
sub
mov
inc
inc
ja
mov
call
jmp
inc
loope
inc
add
dec
std
mov
pushf
das
ljmp
sub
lahf
inc
hlt
out
cld
jo
xchg
inc
and
fisttps
pop
mov
and
xorl
sub
add
mov
pushl
mov
xor
lods
dec
and
pop
test
pop
adc
add
jge
mov
sub
dec
repnz
inc
ja
incl
incl
call
push
scas
fcompl
mov
cmp
loop
inc
shrb
push
cmp
pop
cld
ljmp
in
out
xchg
sti
jbe
mov
aad
stc
cmp
and
xchg
cwtl
push
xor
push
lods
jecxz
or
test
or
incl
inc
jno
movl
add
and
lcall
sbb
std
xchg
inc
decb
jmp
cmp
push
inc
sub
mov
mov
mov
rolb
and
das
push
cmc
movsl
push
or
lds
mov
hlt
out
xor
lcall
scas
dec
jp
insb
out
sub
in
inc
push
push
push
jns
or
je
test
arpl
pop
decl
insb
ret
fsubl
cltd
loop
mov
gs
decl
mov
ret
and
nop
pop
das
xchg
fxam
jno
test
ljmp
es
and
scas
dec
inc
jbe,pt
push
xchg
test
out
push
in
pop
cmp
data16
pop
ds
mov
or
lcall
cwtl
in
cld
sub
sar
movsl
hlt
jb
push
test
xchg
icebp
push
shll
aad
sbb
xchg
sub
inc
stos
sar
ljmp
inc
pushf
add
pop
fcoml
or
adc
push
cmp
cmpsl
mov
popf
mov
out
jecxz
mov
jb
dec
mov
inc
add
push
aam
insb
lret
pop
insb
mov
icebp
incl
loopne
inc
mov
lcall
and
sub
pop
arpl
mov
cmp
mov
jo
push
jl
sarb
loop
jb,pt
lret
mov
mov
mov
xor
xchg
ficoml
aaa
cli
jmp
cwtl
insl
shlb
fnstcw
jle
mov
pushl
and
mov
rcrl
dec
or
mov
mov
and
aam
in
or
mov
pop
pop
insb
add
in
outsl
jo
jp
sbb
inc
stc
xchg
jo
xchg
adc
ret
imul
pop
jne
repnz
jl
dec
cld
pushl
add
xchg
adc
nop
aaa
mov
xchg
icebp
das
sbb
ljmp
sub
pusha
adc
xchg
pop
or
lea
pushl
cli
pushl
cmp
in
test
repz
hlt
add
pop
addb
in
jns
pop
adc
jg
xor
push
or
sub
stos
out
jae
mov
icebp
arpl
arpl
cmc
jge
lret
pop
jmp
xchg
sub
loope
stos
pop
arpl
scas
add
jo,pt
pop
sbb
rcll
sub
mov
sti
mov
pushf
movsl
sarb
mov
filds
scas
sub
out
mov
icebp
out
inc
mov
call
cli
ljmp
shlb
xor
lea
mov
popf
jmp
adc
je
mov
lcall
mov
imul
xchg
int
cld
sbb
inc
xchg
lds
cmp
pushl
add
call
leave
sbb
pop
int3
leave
pop
iret
out
sub
add
outsb
ret
dec
dec
outsb
pop
stos
iret
aam
in
stos
jmp
arpl
fsubrs
and
test
dec
jg
outsl
icebp
inc
ljmp
shlb
leave
jmp
add
fbld
stc
gs
pop
fs
lret
xlat
ss
mov
sbb
movsl
decl
mov
cmp
fstpt
mull
sub
imul
cmp
push
add
daa
test
pop
loopne
call
ror
out
adc
sbb
dec
and
jle,pn
rorl
inc
dec
ss
imul
sbb
ja
hlt
in
incl
inc
mov
scas
jb
or
fldt
adc
cmp
pop
leavew
and
call
mov
xchg
imul
pop
jne
jo
pop
mov
push
jecxz
addb
insl
lcall
jl
faddl
pop
cli
pop
imul
in
shrb
nop
xchg
sarb
shll
mov
cmpl
pop
add
imul
add
inc
loope
mov
icebp
sbb
ljmp
hlt
mov
inc
data16
movsb
cmpsl
jg
popa
add
push
call
mov
rcll
aam
mov
data16
jg
dec
mov
dec
lahf
pop
cmc
mov
sub
ljmp
icebp
dec
xor
push
arpl
and
jbe
jp
inc
out
mov
test
lcall
scas
add
stc
xchg
sub
shl
out
call
test
cmp
adc
mov
movsl
lea
lret
adc
cmp
pop
loop
call
mov
stos
dec
lods
repz
roll
jg
xchg
pop
arpl
aas
popa
jmp
pop
in
icebp
fistpl
xor
stos
xchg
loop
gs
inc
xor
pusha
pop
jns
xchg
add
xchg
jnp
or
mov
adcl
pop
inc
and
ret
mov
negl
push
arpl
insb
sub
sti
sbb
mov
mov
xchg
mov
cmp
loop
dec
or
outsl
lcall
out
sbb
dec
xchg
mov
xchg
fiadds
inc
push
inc
push
sbb
dec
adc
jmp
lods
or
out
xchg
push
xor
sub
int3
mov
pop
popa
xchg
pop
add
sbb
or
inc
call
cmp
dec
push
cmc
xor
lods
jo
gs
mov
jno
jbe
xor
decl
call
pop
pop
xchg
cmc
js
adc
mov
out
stc
sbb
dec
rcrb
jg
popa
jg
insl
outsl
fistpl
gs
pop
and
sbb
add
or
add
xchg
pop
cld
add
call
jbe
and
and
aas
adc
loop
cmp
sub
pusha
push
bound
cmp
jp
bswap
mov
cmp
mov
outsl
jge
and
movsb
daa
into
loope
les
push
inc
call
adc
daa
mov
rcrl
sarb
mov
push
testl
cmp
pop
jns
xchg
mov
daa
mov
pop
jecxz
jmp
repnz
cmp
les
int
mov
push
incl
loope
scas
cwtd
mov
xchg
mov
stos
cmpsb
jp
imul
xchg
mov
xchg
fdivr
decl
int
sub
shlb
gs
lret
inc
jo
mov
fcompl
popa
sarb
mov
std
cmp
mov
mov
shlb
cmp
in
mov
mov
leave
pop
lahf
mov
decl
mul
std
sti
push
rcl
adc
das
add
filds
or
sbb
insl
inc
hlt
mov
cmp
imul
mov
ja
fcmovnu
leave
mov
push
sbb
loop
and
push
cmpsb
pop
out
mov
add
fmulp
inc
in
mov
dec
sbb
mov
jmp
and
mov
mov
mov
sub
ljmp
pushf
push
or
pusha
add
ret
incl
inc
test
fldcw
aad
xchg
xchg
add
clc
jmp
xor
add
cltd
pop
test
fdivrl
sbbl
incb
loop
mov
mov
adc
and
mov
cmp
and
pop
jns
iret
or
mov
lcall
pop
lds
popa
sbb
outsl
cld
decl
jnp
sbb
dec
xchg
and
xchg
dec
xor
std
ljmp
push
adc
and
push
addl
mov
or
cmp
in
cmp
mov
jo
test
enter
ljmp
push
pushf
iret
xor
mov
sub
stos
stc
shlb
test
and
dec
popa
rolb
push
pusha
adc
add
mov
xor
cld
ljmp
lock
je
mov
dec
xor
call
sub
push
lock
ljmp
pusha
test
pop
les
rcrb
lods
addr16
aad
sbb
loopne
fisttps
arpl
movsl
je
push
inc
insl
dec
cmpsl
ja
clc
push
outsb
lods
cld
add
jg
mov
jp
stc
push
push
stos
icebp
outsl
push
aas
jge
mov
sub
lcall
das
jno
push
imul
mov
pop
mov
scas
push
mov
mov
jge
lea
sub
rol
inc
into
xor
mov
push
dec
dec
andb
mov
mov
sahf
pop
arpl
sub
lahf
mov
cmp
out
pusha
sub
leave
adc
jmp
aaa
clc
jg
adc
fbld
cmpb
cltd
mov
mov
cmpsl
inc
add
into
cmp
inc
add
cmp
jmp
jae
cmp
sbb
push
pop
rcrb
sub
out
cli
pushl
outsb
setnp
js
xchg
loopne
repnz
push
add
pop
and
jmp
cli
dec
loope
xor
add
aam
push
in
adc
jmp
push
add
stos
mov
sbb
iret
inc
mov
ror
xor
mov
push
cmp
mov
jmp
pop
idivl
xchg
pop
lods
xor
and
int3
sbb
fwait
cmpsb
xor
pushf
mov
mov
mov
cltd
cwtl
stc
lcall
dec
pop
pop
mov
jg
pop
jns
mov
sti
ds
popa
nop
int3
inc
clc
jg
daa
shrl
and
ret
sar
aas
in
mov
pushf
scas
out
adc
cld
outsb
adc
hlt
sub
pop
sub
decl
sub
sub
xchg
pushf
je
les
daa
sbb
cmp
xchg
cli
cmc
movsl
adc
or
data16
xlat
aad
fdivrp
cs
hlt
seta
call
push
cld
and
test
and
sub
cmpsl
xchg
decl
sub
jnp
pop
xor
mov
lret
outsb
sti
pushl
xor
xlat
orb
push
mov
imul
test
mov
xor
sub
pop
lcall
in
js
repz
xlat
add
stc
mov
imul
adc
push
mov
jle
aas
ljmp
adc
test
ds
mov
push
sti
insb
lahf
sbb
mov
lret
mov
mov
test
push
or
pop
adc
jb
push
mov
xchg
cld
lcall
xchg
pop
out
stos
rcrl
lret
dec
jl
adc
aaa
jae
icebp
jns
xchg
aaa
lcall
mov
out
mov
aaa
or
mov
int3
out
sbb
push
mov
in
jns
push
inc
sti
fldenv
mov
or
mov
sarl
stos
sub
sbb
std
adc
mov
xor
leave
add
dec
jmp
xchg
mov
imul
cmpsb
dec
add
mov
and
icebp
mov
sti
and
push
push
jmp
sbb
sub
insb
mov
ljmp
xchg
ds
xor
sub
imulb
lret
lcall
or
mov
aad
xlat
cmp
popa
scas
gs
jmp
idiv
pop
xchg
push
stos
xorl
xlat
mov
dec
and
mov
out
mov
push
xchg
mov
repnz
movsl
mov
movsl
pop
popa
jge
je
andl
movsl
roll
aad
test
sbb
inc
in
ljmp
xor
sti
mov
aam
aaa
dec
les
add
sub
mov
daa
test
mov
xchg
jg
inc
movl
pop
mov
mov
fdivrl
sub
popl
sub
push
shr
cmpsb
ret
pop
sub
pushf
jmp
or
in
jg
and
ud1
fmull
jo
jbe
or
pop
loope
call
jle
addb
dec
sbb
fucomip
pushl
add
insb
fs
in
out
repnz
hlt
call
mov
enter
ret
and
iret
mov
decl
adc
fsub
push
xchg
mov
setl
xor
jmp
cmp
mov
lret
lds
lock
in
mov
sub
leave
inc
shll
in
jmp
bound
outsl
insb
bound
faddl
imul
inc
ja
fldenv
pop
subl
cmp
aad
leave
scas
mov
sti
mov
sub
cltd
jp
ljmp
adc
fidivs
push
call
test
or
das
xchg
pop
clc
lcall
outsb
adc
rolb
aaa
pop
jecxz
arpl
jg
pushl
push
neg
out
push
icebp
cli
mov
je
pop
call
enter
pop
mov
and
xor
xchg
lcall
lret
std
push
pop
test
shl
mov
ljmp
cs
cmc
jbe
fwait
and
jno
jne
and
call
dec
mov
aas
mov
fcomp
jne
add
pop
or
inc
gs
jne
and
mov
mov
adc
lahf
xchg
or
lock
loopne
fstpt
mov
std
outsl
jle
inc
mov
ret
repz
xchg
test
xchg
dec
hlt
pop
jo
xor
xor
fsubrl
dec
call
mov
decl
sbb
mov
nop
mov
ljmp
outsb
mov
aaa
xor
xchg
push
int
mov
scas
pop
fiadds
xor
mov
jmp
push
stc
dec
shrb
cmp
adc
or
das
in
sahf
push
test
in
sub
xor
movsl
jb
ds
fistl
fcoms
sarb
add
add
jge
add
jp
sbb
xor
pop
stc
cmp
xor
cmp
push
dec
movsb
sti
inc
sar
adc
stos
mov
andb
das
mov
xchg
ljmp
xor
bound
cmp
sahf
cwtl
mov
mov
movsl
loopne
cmp
add
pop
ja
dec
pushl
out
outsb
or
dec
in
sbb
fucomip
mov
andb
sahf
mov
mov
out
xchg
scas
fistl
sub
frstor
xchg
das
insl
pop
rcll
outsb
lock
sbbb
ljmp
test
test
mov
mov
push
push
sub
mov
std
add
lret
arpl
cmp
mov
das
popf
das
fnstsw
adc
cli
cltd
pop
and
xor
push
jg
add
sbb
xchg
jno
dec
inc
mov
test
popf
enter
mov
out
lcall
repz
cmp
lock
sahf
cmp
pushl
lods
jecxz
pusha
call
stos
cmp
fwait
mov
cltd
sub
and
push
test
xchg
adc
andb
lret
fdivr
or
jmp
ja
inc
pop
jg
imul
in
sbb
in
mov
fistl
and
push
jl
dec
or
and
in
scas
xchg
addr16
cmp
push
fmull
push
shl
test
cltd
daa
sbb
or
lcall
mov
mov
add
xchg
adc
jl
pop
fdivr
incl
push
and
xchg
xchg
xor
add
inc
fldcw
orl
pusha
xlat
adc
mov
mov
loop
dec
decl
adc
notb
push
xchg
cmp
mov
pop
out
pop
xchg
jg
filds
aaa
jp
push
mov
jne
inc
mov
pushw
in
sbb
inc
add
int3
hlt
jmp
push
adc
sbb
pop
loope
dec
xor
jecxz
inc
push
push
lcall
and
mov
push
mov
mov
jle
fwait
push
int
sbb
mov
int
es
cld
and
inc
out
loop
movsl
addr16
sub
bound
adc
insb
lock
mov
in
or
add
or
pop
lcall
lret
xchg
andl
stos
xor
push
icebp
cmp
std
fwait
inc
mov
std
mov
movsl
ljmp
mov
addr16
decl
stos
xor
push
mov
out
mov
aad
fdivrp
out
ret
and
hlt
mov
decl
pop
push
jecxz
mov
inc
xchg
pop
inc
jno
repnz
clc
fsub
xor
decl
ja
test
addr16
pop
dec
adc
fldl
sub
adc
bound
jecxz
out
push
pop
out
pop
add
xchg
lds
cs
push
pop
dec
push
pushl
inc
xor
add
push
ljmp
leave
out
push
mov
incl
clc
sbb
sub
pop
imul
mov
mov
sbb
pop
mov
call
push
push
lea
movsl
cmpsl
enter
cmc
lods
mov
gs
mov
loopne
pop
scas
mov
pusha
jg
out
sbb
adc
xchg
jbe
mov
mov
sub
int3
mov
clc
lea
rol
sub
jg
incl
fdivl
pcmpeqb
lods
aas
adc
mov
stos
imulb
std
mov
lcall
push
outsl
jl
adc
movsb
es
mov
in
idiv
call
pop
int3
lods
xor
or
xchg
jecxz
loopne
adc
cld
sub
jl
push
sbb
mov
ficomps
enter
xchg
pop
out
inc
sbb
aam
sbb
mov
dec
adc
icebp
jg
mov
idivb
pop
push
es
pop
cmc
repz
fs
fistps
insb
pushl
sub
push
jns
sbb
pop
ljmp
xchg
gs
loopne
shrb
sub
cmp
cmp
ljmp
les
aas
aaa
pop
sub
test
test
out
or
xor
jne
imulb
mul
or
push
dec
mov
stos
add
adc
mov
imul
inc
icebp
xchg
cs
pushl
shll
inc
ljmpw
xor
scas
mov
int3
sbb
jno
mov
test
inc
decl
jecxz
inc
push
lret
and
inc
jns
push
add
ljmp
testb
cmc
pushf
ss
je
lds
dec
clc
fildll
test
jg
pushl
xchg
pushf
fwait
mov
pxor
jg
inc
aam
fidivrs
jmp
jmp
sub
jnp
pop
inc
mov
out
fabs
mov
aaa
call
insl
lret
push
iret
daa
sarb
xchg
push
and
mov
pop
or
mov
inc
pushf
mov
hlt
rcrb
ja
lret
add
jnp
ljmp
ror
int
lods
cmpsl
repz
shl
cwtl
mov
dec
aaa
cmp
outsb
in
in
pop
pusha
push
call
add
popf
shrb
mov
lea
decl
cmp
jmp
test
pop
cmp
into
out
pop
adc
jmp
jnp
xor
mov
mov
push
mov
fistpll
adc
mov
imul
adc
xorb
and
inc
xor
jae
mov
sub
mov
sub
mov
push
xor
push
lock
sbbb
loopne
dec
ror
daa
or
cld
das
cld
leave
fadds
inc
pop
sub
sahf
repnz
cmpsb
pop
push
sar
push
sar
call
or
push
notl
insb
movsl
inc
hlt
imul
sub
imul
decl
inc
roll
mov
je
jne
jae
stos
jmp
das
inc
push
sti
sub
dec
xchg
mov
jb
lods
call
jmp
lods
testb
mov
xor
clc
and
and
mov
push
les
out
inc
or
xor
filds
pop
movsl
xor
mull
loopne
push
ror
xchg
xlat
loop
dec
hlt
in
push
loope
jmp
retw
les
cmp
scas
inc
xchg
shl
aad
int3
adc
in
fstl
cmpsb
adc
jnp
pop
push
pushl
push
inc
in
pop
xchg
dec
pop
in
andl
cmpsb
fs
mov
and
dec
jg
das
inc
sarb
inc
aam
adc
out
aaa
clc
rorb
out
mov
or
add
das
push
hlt
incl
addl
pop
cli
lods
mov
jg
ljmp
testb
jae
pop
loope,pt
test
sub
call
adc
sbb
arpl
push
mov
cld
ljmp
fcompl
scas
jle
mov
mov
dec
push
mov
inc
mov
dec
lock
imul
mov
adc
or
notl
stc
ret
js
dec
cwtl
ljmp
inc
shr
sarl
pop
fisubl
call
pop
test
inc
clc
xorl
cmovbe
hlt
jecxz
lds
fbstp
and
incl
sub
sbb
lods
cli
xchg
js
in
inc
leave
imul
in
or
pusha
mov
xor
pop
jb
aam
je
push
pop
xchg
shrl
aaa
ja
sbb
jp
fcos
cmp
cmp
and
lods
je
sub
aas
hlt
repnz
sbb
mov
cltd
scas
and
sub
cmpsl
sub
push
add
les
cmc
xor
cli
hlt
inc
pop
ret
pop
sub
cli
jp
lahf
clc
jle
mov
ljmp
pop
push
add
shrl
pop
call
out
test
subl
lret
or
ret
lea
imul
pop
cmp
or
inc
xor
jo
sbb
inc
jle
mov
cmpsb
and
pushl
mov
xchg
add
inc
scas
pop
int
sub
mov
mov
daa
shll
xor
pop
inc
cmp
mov
mov
pusha
jb
inc
ret
cli
std
test
loope
out
incl
icebp
mov
sbb
mov
out
icebp
cmc
out
mov
inc
ret
decl
lahf
lret
aad
jne
push
out
add
mov
add
jbe
out
dec
rcr
outsl
icebp
das
mov
sub
pusha
jno
inc
mov
pop
std
inc
xor
sub
cli
outsb
cmp
add
mov
pop
ljmp
or
dec
adc
fstpl
and
jg
and
popa
pop
cmp
mov
push
pop
out
lods
lods
fstps
xor
rorl
movsl
out
js
addr16
jno
xchg
xchg
in
or
pop
clc
aaa
pop
jo
sub
repz
es
pop
imul
mov
outsb
mov
hlt
push
or
ret
popa
inc
fcmovu
xchg
sahf
stos
adc
sub
mov
lcall
dec
sti
lcall
push
out
cmp
lret
jmp
pop
test
mov
ljmp
fisubrl
sub
sarb
and
scas
adcl
sbb
nop
sarl
incl
loopne
fldcw
in
rcl
daa
push
pop
loop,pt
xor
adc
pusha
decl
mov
and
ror
fsts
pop
jb
inc
pop
xchg
or
outsb
cli
dec
scas
sbb
das
cld
call
inc
cmp
scas
out
jns
rol
mov
or
mov
enter
call
mov
cltd
push
and
ret
push
sub
daa
cmc
pusha
lcall
std
jmp
mov
out
push
inc
xor
stos
xchg
into
lea
xchg
mov
pop
sub
mov
lahf
jl
or
xchg
rcrb
mov
jb
clc
push
stos
xchg
jno
sub
adc
lds
dec
xchg
inc
pop
cmp
popa
sbb
push
fistpll
push
ret
es
xor
test
mov
inc
movsl
les
inc
mov
cmp
incl
mov
push
shlb
jmp
xchg
cmpsb
sbb
ds
cmp
mov
mov
dec
dec
push
enter
mov
dec
cmc
mov
push
aas
dec
decl
jp
xor
inc
add
les
xor
rolb
movsb
mov
popf
cmpb
js
int3
xchg
xchg
scas
repz
pop
mov
out
pop
lcall
adc
aaa
scas
add
jo
adc
dec
mov
jmp
xlat
lcall
in
inc
test
sub
test
ljmp
jno
fprem1
add
aas
daa
adc
jle
jmp
lahf
pop
outsl
hlt
pushl
data16
repnz
daa
test
fldt
sbb
ljmp
jo
cmp
shll
add
dec
not
mov
aas
cmpsb
addr16
out
into
shrl
lcall
dec
fistps
aaa
test
dec
sub
jge
mov
outsb
push
jg
call
out
xchg
adc
jg
jl
xchg
mov
icebp
xor
adcb
incl
mov
fadd
out
mov
stos
ljmp
lds
lahf
add
imul
jg
pop
pop
push
sar
test
popa
daa
ds
lret
in
jg
pop
sub
call
dec
mov
push
mov
mov
test
inc
xchg
test
jle
clc
dec
std
mov
lods
cmpsl
xor
push
pushf
mov
call
mov
ss
cs
rcrb
and
cmpsl
and
test
incl
in
fadd
repnz
dec
scas
into
xchg
imul
mov
outsl
std
ljmp
push
xchg
dec
cmp
dec
inc
stos
inc
or
sbb
push
pop
xchg
cld
jno
mov
xlat
enter
xor
xor
test
mov
data16
ret
call
loop
hlt
rolb
popf
sub
jns
bnd
stos
inc
repz
sti
lret
movsb
scas
push
ljmp
fisubrs
jbe
into
lret
cmpsb
jge
clc
sub
aad
xorl
jg
sbb
popf
or
mov
pop
mov
inc
or
lds
es
xor
cwtl
xchg
ja
ljmp
mov
fprem
sub
in
mov
sbb
mov
outsl
push
push
repz
int
cmpsl
pushf
lods
sub
xchg
sbb
call
enter
mov
shr
xor
int
and
rorb
mov
add
lcall
sbb
and
add
push
dec
mov
lods
and
addr16
adc
les
xchg
mov
mov
mov
cmp
push
gs
add
enter
outsl
dec
xchg
push
push
insb
ljmp
loopne
adc
pusha
sub
movsl
ret
jmp
add
mov
outsl
ljmp
std
mov
mov
push
and
jle
mov
mov
cmpsb
adc
call
clc
call
dec
call
das
je
neg
stos
dec
adc
out
ljmp
push
push
fwait
pop
mov
pop
insl
addb
and
inc
mov
pop
and
incl
movsl
xor
push
std
inc
dec
cmpsl
outsl
mov
insb
push
cmp
das
fists
pop
ja
outsl
icebp
ljmp
and
loope
popa
fistpl
scas
cltd
xor
aaa
pop
fadds
push
mov
frstor
leave
outsl
loop
cmp
fucom
dec
pushl
incb
adc
gs
lcall
and
scas
mov
icebp
mov
cmc
incl
icebp
fwait
jo
xor
lds
in
cltd
and
das
inc
insb
sbb
mov
or
scas
and
sub
dec
inc
ss
jns
jecxz
imul
fnstsw
sbb
jb
adc
call
mov
repz
icebp
jnp
popf
lods
adc
out
das
sub
call
std
push
sub
pop
cli
and
loopne
add
cs
jmp
and
andl
cmp
mov
enter
inc
mov
lcall
pop
imul
sarl
add
and
lea
mov
movsb
fcmovnu
inc
mov
inc
clc
ljmp
pop
cmc
imul
sbb
bnd
mov
aaa
sbb
mov
mov
sub
insb
xchg
cmp
decl
sbb
cmp
pop
xchg
push
jns
mov
cs
sbb
pop
xchg
mov
and
fists
sbb
call
insl
sti
xchg
jg
loop
mov
jo
stos
sub
mov
dec
dec
ja
xchg
lock
out
pop
mov
out
push
and
test
sbb
insl
pop
lock
cltd
or
out
xchg
lods
or
outsl
push
xor
scas
sub
add
mov
aam
jne
and
aaa
sti
es
std
jp
fidivl
add
pop
or
in
stos
add
stc
std
or
ss
mov
es
in
adc
jae
jecxz
aaa
clc
mov
mov
outsb
loopne
cltd
pop
lcall
mov
std
push
inc
xchg
outsb
lret
xor
sub
std
inc
mov
cwtl
mov
rcr
and
push
test
push
cwtl
repz
ljmp
inc
push
dec
sbb
xlat
xchg
ret
inc
mov
cmc
xorb
lock
mov
clc
sub
xlat
in
mov
pop
repz
shrl
dec
xchg
push
pop
sub
pop
clc
pushl
in
notl
sar
add
fwait
pop
pop
movl
shlb
fsubrl
das
hlt
jg
test
inc
out
pop
in
dec
inc
fidivrs
or
es
xchg
jmp
or
pop
dec
out
cli
movw
popf
movsb
jo
cmpb
call
jb
out
mov
cmp
movsb
fcoms
xor
loop
xor
outsl
call
jg
es
mov
push
fiaddl
decl
sub
stc
outsb
xor
jbe
xchg
jne
push
and
xor
fadds
push
mov
jg
mov
xor
xlat
iret
out
cmpsl
loopne
mov
add
outsb
dec
test
push
xor
ljmp
repnz
clc
jge
adc
mov
ljmp
hlt
ljmp
dec
dec
popa
and
mov
mov
aam
push
push
mov
or
xchg
into
inc
sub
sub
insl
js
in
decl
movsl
in
rcr
pop
ljmp
jg
push
mov
mov
pop
add
cmpsb
int3
mov
mov
aas
cltd
jbe
bound
cltd
adc
sbb
loopne
add
dec
pop
aaa
pop
cltd
jecxz
cmp
adc
pop
cli
ljmp
icebp
push
xchg
mov
dec
and
incl
in
test
movb
push
jmp
push
fdivr
shl
inc
std
mov
imul
pushl
int3
or
hlt
rorl
cmpsl
inc
hlt
sub
sbb
push
repz
stc
add
pop
lods
dec
inc
sub
insb
cmp
jne
or
xlat
sbbb
fs
ljmp
stos
jo
jg
lcall
or
push
xor
out
icebp
sbb
xchg
jge
inc
popf
lahf
ja
sbb
sar
ljmp
lret
sti
aam
cmpsb
pusha
fsubl
mov
movsl
xchg
sub
sub
adc
sbb
je
rclb
std
ljmp
pop
mov
daa
adc
cmpsl
push
and
insl
jmp
inc
pop
shr
ss
into
pop
ss
xor
das
mov
out
pushf
in
mov
mov
lcall
gs
aas
aam
sbb
mov
xlat
in
xor
lcall
pushl
mov
xor
in
sub
inc
imul
mov
add
dec
ret
out
repnz
mov
or
hlt
lret
or
in
fistps
pushl
daa
sbb
aad
iret
testl
cmp
sub
int
pop
inc
inc
cmp
roll
insl
lret
inc
pop
fs
nop
sahf
pusha
sbb
or
ljmp
pop
out
push
loope
sar
xchg
adc
gs
adc
jl
inc
add
rcrb
lret
and
jnp
ljmp
add
inc
ds
or
fmulp
jle
mov
das
jne
lret
das
hlt
pop
clc
pop
xchg
mov
loope
mov
pop
outsb
icebp
ljmp
inc
fcoml
and
faddl
dec
or
dec
test
data16
xlat
mov
adc
push
aaa
gs
mov
dec
xor
jg
call
jge
imul
pop
inc
testb
icebp
mov
stos
mov
inc
xchg
push
mov
mov
lcall
mov
push
rcr
incl
test
sahf
xor
cltd
push
dec
mov
xchg
cltd
inc
pop
xchg
cltd
mov
fs
inc
repnz
scas
mov
jle
pushl
pop
jns
add
test
and
xlat
leave
cwtl
dec
jae
fisttpll
adc
incl
mov
cmp
in
push
adcb
lods
mov
ljmp
das
mov
mov
sub
cmp
jns
or
js
mov
andl
jno
enter
pushl
pushf
movsl
aas
cmp
out
push
dec
inc
stos
pop
cmpsb
sbb
imul
mov
call
iret
push
dec
mov
push
sbb
loope
push
out
add
out
mov
das
mov
lds
scas
int
push
shll
mov
cltd
in
mov
aas
mov
cmp
mov
jg
nop
les
inc
jae
int3
add
cmp
ret
test
dec
xor
leave
push
sbb
cmp
fucomi
pushf
xchg
mov
jne,pn
cmc
push
inc
outsl
mov
mov
push
fchs
xchg
mov
sub
inc
ret
call
rcrl
mov
push
cmp
into
xchg
mov
xor
out
dec
jg
lret
test
inc
imul
push
xchg
test
lock
ljmp
pushl
shlb
and
negb
sub
in
mov
adc
fiadds
pop
aam
sti
jecxz
pushf
add
subl
mov
in
js
frstor
sbb
pushl
into
stos
lods
fcompl
stos
in
inc
lock
dec
xchg
sarl
fwait
subb
cli
jnp
dec
mov
sahf
decb
bsr
out
mov
icebp
out
outsl
roll
pop
inc
jle
pop
std
jmp
mov
shrl
add
jecxz
inc
std
pop
mov
cmpsl
cs
jmp
push
mov
fcmovnbe
dec
mov
jno
jne
push
lods
decl
and
arpl
daa
and
ljmp
xor
and
test
fisubrl
stos
add
jmp
idiv
ljmp
pop
jae
stos
mov
push
hlt
or
inc
imul
jecxz
in
mov
test
xor
das
push
pusha
jmp
arpl
das
call
adc
ja
jnp
mov
ret
decl
es
jbe
fldcw
cmp
out
mov
push
test
and
inc
adcl
push
inc
movsb
or
sub
repz
mov
inc
sbb
call
mov
add
push
adc
or
sub
test
or
outsb
add
adc
jg
or
jmp
gs
mov
mov
jl
pushl
loope
pop
pop
rorl
xor
and
ds
inc
dec
jg
int3
in
inc
inc
out
lcall
ret
sti
mov
push
sbb
mov
xchg
outsl
hlt
jg
int3
andb
dec
mov
ja
inc
fidivs
icebp
ljmp
mov
push
jg
out
add
jmp
fmul
jl
rcr
mov
mov
cs
xor
xchg
adc
xchg
lds
loopne
xor
das
hlt
lcall
jle
fsubl
leave
fscale
push
or
repnz
lea
movsl
lcall
les
push
pop
push
mov
jns
pushl
cmp
xchg
sbb
sbb
inc
pop
dec
push
pop
std
dec
dec
xchg
test
xlat
loopne
push
stc
and
lods
into
enter
jns
in
pushl
jp
leave
sbb
mov
lret
adc
xor
mov
xorb
jae
sarb
and
jg
out
fbld
or
or
cmpsw
insb
js
or
movl
js
incl
jmp
pop
jne
data16
push
jbe
dec
idivl
fidivrl
imul
in
mov
lcall
fiadds
aaa
out
xor
dec
clc
sarl
fcomps
aas
adc
jg
mov
inc
enter
ret
add
ljmp
sahf
jb
dec
lahf
xchg
lds
sbb
mov
pop
faddl
jo
lret
inc
movsl
mov
aad
fs
mov
loop
ljmp
xor
ds
ja
jno
inc
imul
mov
push
sbb
dec
mov
out
call
lahf
je
and
and
inc
xchg
xor
incl
incl
testl
cmpsb
ss
mov
jge
sbb
mov
dec
push
fstl
mov
fcompl
push
nop
test
xchg
push
pop
xor
and
shrl
inc
mov
pop
jl
sarl
fucomip
push
mov
jmp
mov
sub
aaa
pop
ret
lods
inc
push
ljmp
push
loop
bound
mov
out
jl
or
xorb
push
std
add
hlt
cmp
iret
and
in
je
jle
test
rolb
xchg
dec
popa
fisubs
cmp
stc
sub
fadds
ljmp
inc
jb
xchg
inc
xlat
outsl
imul
mov
popf
push
stc
iret
inc
ljmp
or
mov
imulb
fdivrp
lock
mov
orl
pop
cli
mov
cld
pop
movsl
les
enter
popa
outsl
cld
add
scas
cld
dec
pop
inc
lea
jbe
jnp
pop
mov
lcall
sbb
adc
leave
and
xchg
icebp
jno
pop
decl
das
lock
cmpl
xchg
in
scas
push
nop
add
aad
call
sub
leave
call
outsl
stc
lods
xchg
sub
lcall
sub
movsl
xchg
movsb
jns
pop
jne
movsl
cmpsl
lods
add
incb
je
jmp
xchg
clc
push
popa
out
insl
lods
cmp
xchg
aaa
outsb
mov
fmull
jmp
int3
mov
push
mov
sub
mov
cld
jmp
inc
hlt
rol
data16
out
mov
cmpsl
aam
ljmp
insl
fs
in
add
popf
or
push
ja
lds
lock
or
add
cmp
push
cld
rolb
push
jle
leave
sar
jnp
outsb
shrl
and
sub
incb
push
cld
adc
movsl
cmp
test
cwtl
jge
mov
std
push
pop
sub
fs
aad
cli
add
xchg
jecxz
lret
inc
fcmovnu
mov
ret
xchg
push
gs
jmp
rcll
mov
or
sbb
pop
pop
xlat
and
sub
jl
jp
lret
out
insb
mov
mov
adc
mov
push
rcrb
ret
ljmp
ffreep
pop
daa
pop
sti
cld
mov
push
ss
sbb
and
cld
incl
shll
sbb
and
hlt
aad
push
xchg
mov
push
add
sbb
and
adc
stos
push
out
ja
push
xchg
pop
mov
sub
cmpsb
xchg
add
js
dec
je
inc
es
negb
pop
or
jg
cmp
and
push
shll
test
je
inc
fwait
mov
mov
dec
xchg
and
out
fadd
add
mov
inc
pop
call
ja
out
dec
call
add
sub
adc
loop
insl
and
and
jl
dec
dec
testb
std
fwait
out
add
clc
dec
inc
mov
incl
pop
sbb
adc
mov
lods
loop
lock
sti
jcxz
gs
mov
push
pushl
cmp
xor
or
push
out
jp
testl
jmp
movsb
jne
lret
dec
mov
pusha
and
lahf
cmp
mov
xchg
cmp
cmc
sbb
push
jne
sbb
enter
jg
jns
add
mov
enter
adcl
sarl
and
mov
loop
test
jmp
cmp
test
or
jae
lds
lock
jmp
ds
movsb
cli
lret
xchg
jl
adc
push
adc
ljmp
mov
inc
and
mul
imul
xchg
mov
lds
pushl
addr16
lds
inc
repnz
cmc
cli
push
rol
scas
negb
pop
stc
xor
sar
call
fiaddl
xor
cwtl
jg
adc
mov
pushf
in
sbb
mov
sbb
int3
cmc
jbe
mov
je
adc
jmp
jl
xor
or
mov
xchg
loop
cmp
jmp
rcrl
pop
jb
out
imul
and
rorb
call
stc
xor
and
loope
pop
shl
fiaddl
sub
lea
loope
jg
lahf
jecxz
loopne
xchg
popf
and
push
dec
pop
out
xchg
sti
push
mov
call
cli
call
lcall
nop
scas
sbb
xchg
add
negl
mov
in
adc
rcl
push
xchg
mov
rorl
inc
mov
xor
in
stos
cs
mov
xchg
sub
test
mov
call
stos
sbb
mov
mov
iret
inc
jae
iret
fwait
xor
adc
sub
inc
pop
cmp
lock
cmp
sub
ret
addl
adc
gs
mov
mov
es
in
adc
cmpsb
and
xchg
add
adc
and
call
dec
xchg
mov
or
adcb
test
sub
and
mov
decb
test
mov
rcl
enter
pop
std
shr
test
fisttpll
clc
jp
sbb
pop
adc
cli
sub
pop
fucomip
incl
aam
push
sub
mov
insl
lds
std
jg
fsubrs
jp
sbb
jmp
xchg
ljmp
adc
xchg
bound
cmp
jmp
jle
cmc
jmp
sahf
cmpsb
xchg
add
mov
pushl
sub
pop
pop
cmpsl
fmul
add
jg
les
out
pop
out
pop
and
das
push
ljmp
cmpl
mov
in
adc
in
mov
ds
popa
dec
push
loop
ja
jmp
jmp
test
outsl
pop
adc
dec
and
and
ficomps
sbb
ja
mov
or
jno
pop
jmp
push
scas
jl
imul
sbb
add
or
xchg
shufps
mov
jg
ljmp
push
popf
mov
xor
cmp
fistpll
push
jno
xchg
or
rcrl
inc
sbb
mov
ds
lea
jmp
pop
rorb
fildll
push
push
mov
or
xchg
jno
push
movsl
adc
mov
push
mov
das
adc
cli
jp
decl
mov
enter
sbb
mulb
mov
or
cwtl
add
stc
ljmp
inc
cmp
sahf
movsl
fs
xor
imul
push
cmpsl
std
in
jnp
in
pop
pop
div
aas
lcall
mov
xchg
shlb
push
adc
mov
mov
cltd
loope
jg
ljmp
insl
pop
stos
pushl
ds
stos
mov
push
mov
ss
cmpsb
pop
push
and
enter
jg
lret
jb
mov
cmpsl
mov
cs
rolb
fldz
out
sub
sub
dec
mov
inc
and
dec
pop
orb
in
jne
mov
pop
mov
leave
arpl
incl
xor
cmp
sub
cmp
sbb
lret
outsl
cmc
and
jl
dec
lods
icebp
in
adc
xchg
scas
mov
mov
lds
cmp
ja
stos
popa
call
jg
xchg
sbb
test
cs
adc
jecxz
fidivrl
push
pop
into
insl
in
loope
ljmp
add
inc
scas
out
push
mov
fdivs
and
leave
sub
lcall
jbe
mov
in
out
movsl
sub
or
mov
enter
fs
cld
ljmp
mov
cmp
mov
clc
and
test
call
negb
mov
mov
sub
adc
mov
add
push
jmp
adc
stos
js
lcall
outsl
and
xor
sub
jge
mov
mov
pop
pop
call
mov
add
sar
inc
insl
in
mov
aas
and
fdiv
hlt
adc
push
push
loop
xlat
inc
clc
jg
or
cwtd
sar
pushf
jne
lahf
push
shll
leave
dec
lea
or
aaa
xchg
fsubs
mov
cmp
repz
neg
xor
add
das
mov
or
and
inc
jge
inc
decl
dec
inc
xchg
mov
subb
xchg
pop
push
mov
dec
dec
mov
insl
mov
inc
cmp
jg
sti
xchg
and
xor
mov
insl
xor
jmp
mov
jmp
dec
xor
push
cmp
mov
dec
scas
mov
decl
rorb
xor
push
test
data16
addr16
pushl
cmp
mov
jmp
outsl
xchg
or
mov
push
fcoms
orb
jmp
jne
push
inc
xchg
out
leave
add
cwtl
dec
aam
mov
or
flds
outsb
cmc
mov
and
in
xchg
int
insb
pop
mov
clc
add
test
gs
jno
loope
shrb
test
sbb
xchg
in
mov
int
test
scas
add
ficompl
adc
pop
das
loope
push
mov
sarl
jg
xchg
test
cmpsb
cmpsb
inc
push
out
movsl
mov
in
enter
jnp
jnp
pop
xchg
cmp
dec
cld
or
xchg
stc
js
mov
or
push
in
out
mov
hlt
mov
mov
loop
sub
imul
pop
jb
mov
lret
jbe
fcom
fcompl
stos
pop
and
out
loope
jg
pushl
fdivl
imul
jmp
xlat
cmpsb
aas
ror
cmpsb
movsb
push
jb
sub
cmpsl
mov
loope
loope
std
sbb
sub
lret
fst
stos
js
mov
decl
mov
stos
cmpsl
adc
shlb
loopne
leave
repz
cmp
mov
cmp
lahf
sub
jo
test
int
incl
inc
std
adc
call
pop
pop
in
inc
sbb
cmp
and
gs
clc
cmp
mov
xchg
xor
ljmp
fnstsw
mov
sbb
shll
adc
mov
push
js
dec
cmp
pusha
fcompl
cmp
xchg
insb
lock
jg
repz
outsb
ret
ficoml
arpl
sarl
push
push
inc
mov
inc
jle
pop
ljmp
popl
mov
pusha
or
jmp
cmp
movsl
movsl
addb
cmp
adc
push
xor
pop
repz
mov
xchg
mov
call
add
mov
or
es
xchg
xor
pusha
or
jmp
inc
leave
inc
jne
mov
mov
fwait
push
add
pop
shlb
add
fucomip
push
jno
outsb
dec
icebp
mov
ljmp
adc
repnz
adc
adc
xor
jo
jnp
leave
sbb
lds
clc
js
ss
mov
shlb
aas
imul
hlt
sbb
test
push
push
xchg
das
sti
insl
lods
adc
cmp
test
incl
aam
dec
movb
inc
imul
out
mov
dec
mov
jg
sbb
push
nop
loope
sbb
aad
call
push
add
inc
popa
jnp
lcall
je
test
das
cld
pop
mov
outsl
outsb
sti
stos
int
test
ffree
je
jg
outsl
mov
lods
xchg
popa
or
push
and
xor
in
jmp
inc
sarb
je
stos
rcl
out
lret
enter
pop
lock
and
push
jg
inc
and
ror
mov
in
pop
cli
mov
dec
inc
jns
jecxz
shlb
inc
ret
jmp
mov
in
shrl
push
shll
in
shl
call
out
imul
jmp
mov
mov
jg
in
addr16
mov
push
orl
loope
dec
loop
mov
fcmovb
dec
add
jmp
popf
ret
dec
mov
shll
decl
cld
mov
cmp
shrl
pop
xlat
jmp
inc
lock
mov
jl
mov
push
adc
decl
and
jmp
mov
inc
ljmp
cmp
sbb
jbe
and
test
pop
xchg
sbb
jns
jae
push
notb
sbb
movsl
push
pop
dec
push
rorb
inc
adc
push
hlt
push
sbb
cmp
repnz
and
test
into
add
jg
ja
mov
and
and
loope
push
loope
pushl
cli
xchg
push
inc
push
je
scas
pop
or
adcl
or
mov
push
pushl
push
mov
lds
pop
push
es
dec
inc
mov
jmp
sub
adc
and
popa
in
cmc
mov
popf
imul
out
xchg
testb
or
sub
cmp
outsb
test
out
enter
mov
cmp
mov
pop
je
outsl
cmc
decl
out
jg
or
pop
push
dec
rcrl
inc
movsb
lret
leave
popa
je
xor
outsb
je
mov
adc
fs
jle
lret
das
push
add
outsl
cmc
pop
shlb
xchg
cltd
pop
inc
ds
or
leave
bound
lret
hlt
decl
aam
bound
cmp
nop
fld
xchg
scas
lret
jp
xchg
cli
lods
push
sub
lcall
sub
packuswb
leave
je
dec
mov
in
ljmp
or
push
or
push
dec
lds
fidivrl
mov
dec
decl
call
in
rclb
sbb
cmp
pop
dec
mov
lcall
addl
pop
pop
mov
popf
cmp
dec
fcmove
jne
push
adc
push
jl
xor
xor
sbb
jo
jecxz
or
incl
mov
leave
add
cmp
lret
nop
xlat
cwtl
test
test
rclb
aad
and
hlt
hlt
fstps
je
aam
mov
mov
sti
mov
jl
dec
movsb
loopne
mov
push
das
pop
loop
and
cs
sub
mov
dec
add
out
rorb
mov
adc
in
or
mov
pop
jg
xchg
inc
bound
hlt
push
cmpsl
mov
mov
push
jbe
dec
push
loope
sub
rol
pop
stc
fistpl
mov
sbb
sub
ja
sti
fidivs
subb
das
outsb
cmp
mov
xchg
pushf
in
mov
call
pop
inc
inc
mov
pop
loopne
adcl
mov
cmpsl
sub
push
cmp
incl
cmpsl
aam
dec
inc
or
ljmp
jg
xchg
mov
inc
dec
add
sub
xor
inc
mov
addr16
call
inc
cmovge
xor
aas
sub
adc
popf
inc
jmp
push
pop
mov
inc
cmpsl
sbb
loopne
mov
mov
jp
enter
pushl
xchg
fwait
daa
mov
mov
push
jne
bound
jmp
int
outsl
push
pushf
dec
adc
call
adc
mov
andb
std
das
ja
popf
lcall
pop
or
js
pop
shrb
aas
cs
out
popl
mov
fimull
rolb
ljmp
lret
mov
pop
sub
sub
add
sbb
jmp
in
ficoms
xchg
test
jns
loopne
mov
adc
sbb
iret
cld
je
lods
inc
das
cmc
outsl
std
test
inc
int3
cwtl
cmc
leave
push
fdivp
inc
leave
adc
dec
std
decl
sbb
daa
jnp
stc
and
sub
sub
subl
clc
push
cmp
decl
faddl
mov
in
pop
test
loope
dec
scas
or
push
cmp
test
mov
add
xchg
sti
cld
test
jmp
inc
mov
in
jg
mov
rcr
call
loop
fwait
inc
adc
sbb
fisttps
lds
lea
test
addr16
data16
dec
pop
sub
lods
mov
adc
popa
fcoml
dec
nop
fwait
add
jg
sahf
pop
rol
dec
jp
lret
xchg
inc
rolb
cli
add
inc
jmp
mov
pop
clc
fisttps
lret
int3
scas
mov
leave
or
mov
cs
sub
fwait
addr16
jle
icebp
incl
mov
xchg
push
stc
lock
nop
icebp
jg
cmpsb
cmp
clc
cmp
adc
stos
in
outsl
add
inc
pop
lcall
mov
das
mov
mov
shrl
jo
xor
shll
mov
ss
pop
jnp
incl
lret
add
or
pushf
cmpsl
adc
mov
adc
dec
decl
cmp
imul
mov
cmp
sub
iret
xor
loope
addr16
scas
ljmp
icebp
cmp
xor
jle
cmpsl
gs
lods
push
mov
movsb
test
in
aaa
clc
jmp
inc
push
xlat
jae
cmp
test
adc
cmpsl
js
xchg
or
lock
cmpb
sbb
sbb
sbb
das
fcompl
test
inc
fldcw
cmpsl
mov
pop
cltd
xor
incl
add
in
fisubrs
fmulp
push
sahf
iret
pushf
add
into
imul
jg
enter
xchg
or
push
and
add
ljmp
enter
es
pop
sbb
insl
ret
popa
or
fildll
leave
ret
jo
fadds
sbb
jg
jns
dec
stos
mov
push
pop
add
mov
sub
icebp
push
mov
decl
cld
lods
ret
inc
negb
mov
je
mov
scas
xchg
and
push
test
jecxz
repnz
and
lret
jp
lcall
cmp
movsl
push
std
push
jmp
scas
bound
pop
js
cmc
mov
lcall
sbb
inc
cmp
add
cs
sbb
lea
xchg
pop
arpl
jg
mov
aad
out
movsl
xchg
or
insb
xchg
hlt
mov
mov
mov
out
aas
and
fists
rclb
adc
incl
pushl
mov
add
sbb
pop
push
or
loope
dec
xchg
aad
incl
fcomp
les
fnstenv
and
cmp
lret
movsl
jle
mov
lcall
mov
or
pop
cmpsl
jno
or
rcrb
lret
sub
call
jge
pusha
xchg
pop
into
rcl
into
push
sub
jmp
pop
adc
xchg
adc
mov
or
push
adc
call
pop
mov
or
fmull
sti
mov
pop
lea
rolb
jmp
rcrl
mov
pop
mov
mov
and
mov
outsl
imul
fnstenv
fildll
cli
pop
cmp
push
jmp
call
mov
daa
xchg
jbe
push
setbe
jl
movsb
imul
int
lcall
stos
call
in
xchg
fdivrp
fistpl
adc
addl
mov
mov
cs
xlat
in
test
mov
adc
xor
inc
stos
imul
cld
pop
cld
jae
add
ljmp
jmp
adc
push
into
sub
nop
or
mov
hlt
mov
das
lock
sub
xchg
jmp
inc
push
jo
stos
or
outsl
mov
addr16
sub
imul
or
ret
mov
sbb
and
and
fsubrs
in
push
add
ljmp
in
and
test
int
push
leave
pop
lret
in
leave
adc
aas
inc
or
pushl
cmpl
pop
fnstcw
xor
push
hlt
imul
out
xor
aam
dec
xchg
call
nop
push
movsb
sub
lcall
pop
not
out
fstl
xlat
out
mov
rcll
sub
sar
pop
clc
fs
cld
xlat
jecxz
adc
inc
mov
test
test
enter
jmp
push
cltd
movsl
sub
mov
sub
add
mov
cmpsl
fs
cmp
pushl
pop
iret
and
cld
push
sub
jg
cs
mov
jae
xchg
movsl
sbb
flds
jmp
call
jbe
xchg
test
call
dec
push
fistpll
mov
xchg
push
pushl
or
pop
fdivs
adc
data16
movsl
call
xor
test
xchg
xchg
clc
lret
repz
gs
test
inc
lea
fbstp
fnsave
popa
and
xchg
lcall
pop
sub
push
push
mov
pushl
sbb
std
jmp
addr16
insl
fsubrs
sub
mov
inc
jo
xchg
mov
jmp
xor
outsl
js
pop
push
mov
fiaddl
push
movsb
repz
fmuls
dec
loope
pusha
adcl
stos
out
jmp
or
or
push
lahf
mov
ja
pop
mov
test
pop
jno
jp
adc
call
push
insb
xorb
add
sbb
jns
daa
ret
cmp
ljmp
pop
clc
adc
aas
jecxz
scas
jno
rclb
in
push
cmp
mov
dec
sbb
pop
mov
sbb
aad
push
movsl
fcompl
adc
pop
icebp
xor
lcall
ljmp
push
aaa
mov
pop
ss
jle
ljmp
xchg
insb
sbb
popf
sub
pop
das
mov
mov
aad
nop
fnstsw
xchg
pop
jg
stos
mov
jnp
es
decl
fdivrs
dec
pop
out
clc
lods
addr16
mov
push
idivl
lcall
jmp
test
adc
inc
sbb
pop
add
fdivrl
push
sbb
xor
dec
repz
ljmp
xchg
and
inc
mov
sbb
mov
ds
nop
jmp
xchg
ret
dec
mov
sub
mov
lcall
fdiv
roll
incl
dec
mov
aad
push
jge
cld
xchg
icebp
mov
cli
sar
pop
cmp
sbbb
sub
add
gs
xor
push
test
jnp
jg
jl
sbb
mov
xchg
test
fwait
push
cmp
in
or
pop
cmp
add
push
clc
xor
lea
pop
jle
in
add
adc
inc
push
loopne
cmpsl
add
into
je
mov
test
mov
decl
xchg
lods
inc
adc
sub
stos
dec
scas
push
cltd
nop
jg,pn
loop
add
les
test
adc
nop
sub
flds
iret
adc
imul
mov
cmp
jle
sahf
enter
cmc
dec
imul
jecxz
fcmovu
sub
adc
icebp
out
mov
or
ret
inc
shll
out
mov
test
cltd
add
test
push
dec
daa
outsl
cmc
ljmp
sar
aad
cmpsb
arpl
dec
mov
incl
dec
pop
ds
loopne
and
push
pop
clc
inc
fsub
push
js
sub
push
in
jg
dec
repz
test
push
dec
lret
lea
mov
es
or
mov
ds
or
sub
mov
dec
inc
push
adc
test
lret
mov
out
xor
mov
jg
jns
ds
jne
enter
jmp
enter
adc
mov
sub
add
sarl
push
xchg
sbb
jecxz
scas
lcall
std
push
xlat
sub
jne
jae
aam
movb
pop
out
mov
dec
jg
push
lods
or
xchg
dec
jge
aad
cmp
aam
lea
sbb
ret
test
ljmp
mov
mov
repnz
inc
xor
cmp
imul
test
lcall
ret
xor
scas
sub
xchg
repnz
iret
sub
sub
mov
rcll
or
sti
fsubr
arpl
aam
mov
lahf
xchg
insl
and
incl
push
stos
xchg
cmp
push
adc
cmp
xchg
sbb
sub
lret
add
jg
cmc
call
mov
jl
inc
iret
in
stc
pop
mov
pop
call
xlat
lods
in
outsb
adc
push
cmp
mov
add
pop
subb
stc
addb
adc
cld
inc
test
lret
sbb
or
jg
mov
aad
xlat
mov
mov
mov
push
jg
pop
in
insb
fcmovu
mov
insl
and
mov
mov
cld
cltd
cmp
push
adc
mov
iret
sar
mov
cmp
xor
adc
push
mov
cmp
fwait
std
mov
mov
push
xchg
push
xchg
sarl
dec
out
sub
scas
shlb
cmpsl
xor
mov
decl
mov
and
sub
and
rcll
xor
mov
fisubl
ja
push
mov
jg
lcall
aas
inc
imul
xor
inc
pop
and
lods
call
std
cs
fdivs
jnp
les
cmp
mov
cmp
mov
outsl
lds
loop
or
jmp
pop
mov
dec
push
mov
aas
pushl
lret
lcall
sbb
movsl
shl
or
out
xchg
mov
push
fs
in
cld
fucomip
push
mov
adcb
xchg
dec
and
cmp
push
cmp
xchg
jo
dec
loopne
rol
repnz
out
inc
xor
xchg
ss
daa
movsb
neg
or
adc
sub
mov
xor
xchg
and
push
mov
sub
cmp
add
fimuls
push
mov
int
dec
add
pop
repnz
mov
pop
shrb
mov
cltd
and
dec
std
jg
adc
out
cmpsb
ret
inc
jae
icebp
pop
push
or
mov
mov
loope
std
add
imul
iret
popf
cli
jg
sbb
gs
scas
hlt
xor
or
push
pushl
lret
inc
fsts
xor
fsub
mov
enter
aas
out
in
jnp
lea
pop
into
xchg
or
pop
movsb
sub
out
ds
xchg
sti
cmp
test
clc
jbe
imull
push
rol
add
lcall
lcall
mov
fnstenv
xchg
inc
out
imul
push
jno
ljmp
sahf
ljmp
insl
pop
fcomp
mov
mov
mov
push
fldt
ret
dec
xchg
adc
test
decl
das
ret
in
aaa
xchg
gs
movsb
xchg
fcomi
lds
or
pushl
cli
repz
ja
subb
mov
lock
dec
push
mov
aam
decl
mov
jbe
test
lds
loopne
add
fucomip
xchg
push
jns
lods
sub
roll
add
imul
ret
mov
mov
or
hlt
cmpsb
mov
ja
dec
or
std
outsl
xor
movsl
lret
stos
scas
jle
pop
imul
incl
loope
and
adc
push
xlat
jne
push
push
and
mov
mov
incl
pop
pop
xchg
in
fidivrs
jl
sub
inc
enter
lock
xor
arpl
decl
cld
pop
xlat
cmp
in
js
imul
popa
inc
test
popa
xchg
dec
adc
or
outsl
inc
aad
js
lcall
pop
incl
cmp
sbb
push
push
ljmp
data16
in
or
mov
cmp
cmc
arpl
mov
or
dec
je
sbb
in
pop
fxam
inc
and
inc
dec
mov
outsl
decl
mov
int
lea
test
lahf
push
imul
das
jo
xor
mov
clc
cmp
mov
cmc
jg
dec
jno
aad
mov
xlat
or
pop
xor
loop
ljmp
and
mov
inc
mov
xor
xchg
sub
gs
clc
lret
int
or
imul
add
push
insb
cmp
enter
int
inc
jmp
sar
cmp
aaa
insb
movsl
xor
mov
icebp
in
pop
jmp
aam
in
popa
movsl
lock
sar
cmp
inc
xor
lock
mov
icebp
pop
pop
inc
shl
lock
rorl
pop
fbld
outsl
add
jmp
stc
sbb
daa
xorl
pop
cmp
sbb
imul
cmp
dec
mov
lret
push
std
cmp
es
ja
mov
mov
jecxz
inc
sub
jne
std
xlat
insb
and
jg
push
arpl
xadd
outsb
and
popf
js
sbb
leave
call
push
jge
mov
hlt
ficoml
xchg
adc
aad
mov
movsl
decl
nop
mov
mov
pop
dec
enter
push
aad
call
out
mov
lock
mov
push
sbbl
sub
fs
sahf
xchg
dec
push
pop
sub
rcll
cmp
pushl
fstpt
fdivl
leave
andl
ljmp
test
das
ret
jnp,pt
jmp
call
fistpll
add
push
cwtl
ds
jns
sbb
pop
fsubs
jg
xlat
stos
pop
nop
push
bound
lea
dec
push
mov
les
repz
inc
or
adc
int3
mov
push
mov
and
inc
outsl
inc
mov
andl
daa
repz
js
test
je
inc
inc
popa
push
aam
jle
lret
xor
add
data16
jns
mov
push
fnstsw
je
jecxz
dec
xor
call
lcall
mov
stos
ror
adcb
or
push
xlat
dec
insl
add
pushl
push
jp
ds
int
iret
push
pop
fisubl
jg
lcall
out
leave
leave
add
fucomip
sti
jl
push
cmp
or
cmp
or
rcr
sbb
rcl
lret
mov
push
les
scas
inc
incl
scas
push
push
inc
pop
push
cli
icebp
mov
cmp
lods
test
jmp
movsb
inc
outsb
xor
mov
jl
push
jo
mov
add
and
call
clc
insl
call
dec
sti
fwait
inc
dec
icebp
dec
or
rcr
push
incl
adc
add
xor
xor
or
add
call
clc
mov
nop
mov
out
push
or
pushf
fldl
mov
test
dec
cld
add
inc
xor
orb
stos
lcall
pop
mov
cli
aaa
adc
aas
and
jg
mov
stos
rorb
dec
std
jg
ljmp
dec
jecxz
loop
sub
decl
xchg
rolb
lods
and
inc
push
and
mulb
jg
andb
or
lea
mov
mov
push
push
hlt
call
adc
loopne
stos
jge
push
movsl
lods
je
cli
ds
mov
xchg
xchg
dec
cmp
or
inc
test
mov
inc
pop
xlat
cmp
out
mov
addl
xlat
xor
adc
mov
sub
imul
ss
in
outsb
push
addl
mov
cmc
fimull
adc
cmp
mov
fistl
scas
cmp
ljmp
ja
inc
js
adc
cmp
into
stc
test
nop
and
subb
adc
and
nop
mov
xchg
and
pushl
das
movsl
insl
inc
lret
pop
pop
gs
cwtl
in
mov
fwait
ss
push
fbstp
pushw
jg
mov
cmc
jno
push
mov
test
push
sar
pushl
push
psadbw
and
sbb
cmp
daa
pushl
and
adc
outsl
add
rolb
in
sbb
mov
call
jmp
adc
popf
xchg
sbb
and
cmpsl
mov
jb
or
mov
mov
lret
mov
or
pushf
inc
fidivrl
dec
ljmp
adc
out
add
pop
mov
jb
sub
jp
push
xor
jmp
mov
cmpsl
and
inc
popf
inc
xorb
xchg
or
xchg
shlb
sbb
mov
sub
jmp
sahf
mov
fadds
cmp
loope
mov
loope
pushf
pushf
aam
ljmp
mov
push
mov
and
cmp
mov
mov
adc
imul
jbe
and
mov
pushf
sbb
jo
icebp
mov
incl
scas
pop
std
aaa
push
jg
xor
out
mov
ljmp
movsl
cmc
mov
maxps
mov
popa
xchg
fisubrl
repnz
int
sarb
iret
mov
out
dec
or
out
cmp
int3
in
jne
sub
idivb
pop
shrl
cmpsl
cwtl
test
jne
mov
pushl
imulb
mov
out
pop
or
loope
or
inc
loope
in
pop
pop
mov
call
les
sub
dec
mov
mov
add
or
dec
cmp
out
sub
call
pushf
call
clc
aaa
xlat
push
mov
xchg
ja
adc
daa
sahf
into
adc
int
sbb
insb
lcall
jge
pop
fwait
sar
jg
nop
mov
loopne
ja
adc
sub
mov
adc
ljmp
fucomp
es
inc
rol
ret
pop
xchg
cmp
xchg
add
adc
mov
pushl
outsb
mov
movsl
sub
ret
sub
lcall
std
cmpsb
sbb
arpl
cmc
faddl
mov
add
add
xchg
mov
fmulp
add
jmp
mov
je
test
dec
enter
push
repz
mov
loope
popl
pushl
xchg
shr
adc
push
push
test
or
mov
mov
out
ljmp
iret
cmpsl
or
adc
fld
test
or
cmp
shll
insb
mov
stos
sbb
mov
push
fs
adc
push
cltd
add
fisubrl
push
mov
pop
es
call
dec
lds
imul
inc
xor
mov
jbe
xchg
lods
inc
dec
cmp
cmc
mov
push
push
sbb
sbb
mov
stos
mov
adc
jne
mov
ljmp
vmovd
lcall
sbb
loop
pop
shll
fwait
sbb
decl
mov
dec
fsubrs
fwait
popa
pop
xor
outsl
icebp
das
mov
pop
pop
aas
loope
pop
mov
fstpt
xor
incl
jne
lods
pop
or
mov
icebp
and
xchg
out
icebp
dec
icebp
incl
xchg
mov
loop
mov
sbb
pop
loop
repz
push
cmp
into
fsubrl
mov
jecxz
incl
xor
adc
mov
addr16
daa
fisttpl
and
adc
scas
enter
movsl
push
rorl
loop
pop
mov
add
jmp
mov
pusha
dec
aas
jg
adc
mov
outsl
hlt
jmp
movsl
mov
mov
adc
popa
cmpsb
cmp
cltd
sub
decl
and
lahf
jbe
in
add
mov
xchg
mov
xchg
xchg
mov
imul
outsl
insb
in
dec
push
stos
sbb
cmovno
lret
loope
xchg
pop
and
or
ret
push
mov
sahf
loope
ljmp
scas
outsb
fsubrs
repnz
cmp
push
in
jge
mov
add
inc
pop
or
push
xchg
negb
cmp
jnp
jge
pop
sub
pop
adc
dec
jbe
push
cmc
mov
out
aaa
mov
xchg
cltd
out
adc
add
int3
pusha
sub
pop
mov
test
mov
ljmp
leave
sub
inc
shll
pop
cmp
shrl
negl
stos
clc
pushl
mov
jecxz
and
arpl
and
push
out
cld
sbb
aad
add
xor
lcall
ljmp
aad
hlt
xchg
cwtl
adc
sti
andl
push
fisubl
inc
inc
sbb
lea
shll
pop
sub
lret
or
inc
dec
jg
dec
clc
rcl
mov
clc
or
xor
cmp
jecxz
dec
adc
incl
mov
and
mul
cmp
add
mov
stos
push
sub
clc
lcall
nop
stos
push
fistl
or
jp
cmp
pushl
jmp
pop
adc
or
icebp
cmpsl
cld
xor
mov
xchg
cwtl
add
sub
pop
xchg
mov
loop
xchg
test
cmp
pop
pop
xchg
mov
add
sti
fcmovnbe
sub
ja
das
pushf
adc
jnp
decl
push
mov
fcoml
jns
dec
sbb
cli
pop
lret
push
or
jl
rol
xchg
pop
lods
xchg
leave
cld
xchg
and
es
mov
pushl
xchg
push
push
cmpb
and
add
jl
dec
cltd
ljmp
sbb
call
cwtl
ljmp
fisttpl
lods
adc
int
ficoml
ja
fistpl
cmp
cmp
jo
inc
mov
jle
insb
scas
sti
pushl
cli
push
mov
dec
push
out
int
js
aam
xor
or
push
sbb
adc
shlb
daa
divb
jno
ljmp
movsl
or
out
xor
push
inc
add
call
inc
je
jl
hlt
jl
fmull
das
lret
sti
imul
mov
ljmp
popa
popa
pusha
add
aaa
mov
ja
cmp
data16
incl
xchg
inc
pop
lret
push
mov
out
dec
xor
loopne
jmp
inc
cmp
cs
mov
cmc
scas
loope
jns
rorl
xchg
lods
jle
lea
and
inc
or
pushf
mov
in
into
scas
je
ljmp
jno
sti
inc
push
stos
test
out
cmp
jo
xchg
vcvttps2dq
ljmp
dec
lds
mov
sbb
test
dec
jmp
mov
mov
popa
test
ljmp
inc
inc
push
jne
xor
xor
mov
mov
add
stos
mov
lock
inc
mov
jecxz
shlb
xchg
jne
push
ds
dec
or
jae
xor
and
insb
loopne
mov
push
cmpsb
mov
hlt
aaa
cmpsl
xchg
repnz
mov
adc
in
cmpsl
push
dec
subb
jp
fsubl
scas
clc
xor
lahf
jo
and
push
push
and
pop
adc
mov
jnp
inc
jge
rorl
ja
cs
decl
mov
cmpsb
sbb
dec
test
xchg
bound
aaa
sbb
rorl
pushl
ljmp
jge
inc
push
lock
test
dec
in
adc
lcall
adc
and
add
movsb
jge
and
enter
sub
mov
pop
xor
clc
test
and
inc
mov
loopne
push
call
fsubr
inc
je
sti
pop
pop
imul
frstor
mov
jo
push
rcrl
call
or
stc
or
addb
adc
daa
push
add
ljmp
lock
mov
mov
add
aas
lahf
jns
pop
fnstsw
incl
ret
and
cmpsb
pop
mov
pop
mov
or
pusha
dec
adc
sarl
xorl
loopne
jmp
pop
sahf
aas
mov
push
aaa
jno
adc
mov
lods
cs
loop
bound
mov
adc
idivb
arpl
cmp
add
gs
add
pop
sbb
fisttpl
push
cltd
arpl
lcall
lahf
dec
sbb
dec
fcmovb
add
popf
adc
cmpb
in
jp
or
call
cmp
mov
push
and
out
inc
xor
jmp
jmp
leave
arpl
setbe
gs
sar
jg
shll
std
icebp
add
mov
dec
test
out
imul
lcall
and
int3
mov
jecxz
dec
cli
mov
ljmp
sahf
xor
stos
mov
dec
pop
sbb
insl
ss
cli
mov
mov
and
imul
sti
pop
mov
adc
sbb
xchg
test
add
cmpsb
jae
shlb
cmp
mov
popa
mov
data16
lods
ljmp
xor
jnp
fldenv
push
cwtl
adc
lods
outsb
std
xlat
mov
lahf
movsl
mov
aam
incl
adcb
push
imul
jo
ss
xor
pop
push
sub
call
xchg
push
sub
mov
mov
mov
pushl
pushf
jge
js
cmp
xor
mov
ljmp
push
cwtl
jg
sub
testb
call
xor
ja
sarl
sarl
adc
jp
cli
leave
lret
xchg
sbb
sub
mov
stos
xchg
xor
sbb
inc
jmp
xchg
jne
pop
ljmp
fs
movsl
outsl
hlt
outsl
test
push
adc
js
xor
popf
cmp
call
lods
insl
pop
jbe
insb
enter
dec
push
mov
in
mov
clc
ljmp
lods
xchg
enter
test
std
shll
int
mov
js
xor
test
call
mov
jp
push
popf
cmpsl
cltd
jmp
call
mov
jbe
imul
test
movsl
pushl
jg
add
les
insb
decl
mov
fidivl
cwtl
rcr
xlat
sbb
clc
inc
jl
mov
or
pop
xchg
xchg
js
sahf
push
dec
data16
jmp
decl
dec
ret
test
mov
mov
jb
out
sub
pop
add
in
stos
call
stos
repz
push
mov
popa
fst
jbe
mov
jg
jl
pusha
fadds
dec
sbb
subb
cmp
pop
jmp
mov
lret
or
xor
lret
xor
adc
mov
push
cmpsl
ja
xlat
dec
lods
shll
imul
ret
sbb
adc
gs
scas
mov
lods
lock
mov
imul
pop
mov
lds
xchg
mov
aam
inc
cmp
loop
jmp
imul
lcall
sbb
or
out
cmpsb
stos
xor
jmp
ljmp
std
mov
or
jg
aad
jmp
fnstenv
aas
dec
das
push
jnp
pushl
dec
bound
mov
out
dec
sub
mov
sbb
xor
inc
fisttpll
pop
cmp
fwait
and
jmp
int
jo
sbb
or
pop
call
and
lret
jmp
dec
or
gs
pop
std
sbb
cmp
and
pop
leave
cmc
xor
cmp
sub
pushl
rol
das
ret
or
lret
scas
mov
lahf
popf
pushl
test
jg
icebp
jmp
pop
andb
and
addb
pushl
and
mov
adc
rcll
outsb
daa
and
call
stc
inc
fstl
leave
or
pop
push
daa
repnz
arpl
hlt
jmp
mov
incl
jno
bts
cmp
sarb
sbb
push
lcall
pop
cld
int
leave
jmp
aas
stos
mov
jno
fdivl
clc
aaa
lods
lock
loop
int
fistpll
mov
jecxz
cld
xchg
cli
jmp
icebp
jle
insb
jbe
stos
xchg
and
push
aam
push
mov
push
pop
cmp
hlt
jl
into
dec
mov
lahf
stos
enter
loope
jns
sub
gs
mov
jmp
aas
xor
adc
dec
lock
fst
mov
mov
in
inc
mov
pop
insb
cmc
cltd
push
and
fldcw
push
push
jg
mov
dec
cmp
push
lods
loopne
loopne
sbb
lret
mov
aaa
pop
push
and
lods
jecxz
loop
je
dec
dec
sub
test
shrd
sbb
pop
add
and
dec
aas
cmpsb
mov
xchg
lds
sub
and
movsl
and
or
lds
rcrb
sub
idiv
sbb
pushl
cmp
shrl
or
push
dec
inc
jns
mov
or
mov
js
clc
xchg
clc
push
pop
fdivr
into
adc
cmp
xchg
leave
rorl
decl
cld
push
sub
add
repz
and
les
das
aam
nop
or
push
sub
in
fldenv
xchg
pop
insl
fdivrs
pushf
xchg
lcall
mov
sub
shrb
push
mov
sub
and
jo
stos
or
lcall
ss
pusha
ficoml
dec
out
sub
jo
loopne
jb
ljmp
mov
xor
mov
mov
mov
gs
ja
shl
outsb
test
mov
sar
test
ja
out
dec
mov
push
mov
jg
daa
test
xchg
test
test
xor
mov
adc
sub
orb
and
rclb
sbb
out
ljmp
sub
cmpsl
sub
jb
dec
jno
cmp
sahf
loop
ficompl
push
push
or
lcall
cmp
loop
mov
js
mov
push
loopne
insl
inc
test
adc
movsl
jae
call
cli
ljmp
mov
cmp
or
test
adc
dec
mov
ja
mov
stos
dec
enter
rcr
outsb
out
push
decl
sub
enter
jp
das
sub
sbb
mov
mov
cmp
pop
cli
nop
js
xor
subb
sbb
or
mov
cmp
das
sub
xchg
adc
mov
inc
jbe
shl
adc
ljmp
call
jl
cs
shr
inc
jne
test
pusha
jg
ljmp
negl
and
ljmp
leave
fisubs
mov
jmp
mov
xchg
push
leave
push
in
shl
xchg
cmpsb
jmp
cmp
add
out
in
dec
decl
js
enter
cmc
rcrl
mov
out
movsb
es
xor
ja
jmp
fwait
mov
enter
mov
adc
adc
test
and
in
arpl
jg
ljmp
add
pop
xor
jne
inc
mov
data16
sarb
xor
mov
pop
std
xor
push
adc
or
imul
push
sar
inc
or
and
xchg
sti
xchg
adc
jecxz
loop
push
push
mov
sub
insb
push
iret
gs
jmp
aas
cwtl
int
cmpsl
out
sbb
mov
pop
les
cmc
add
call
or
cmp
push
jb
cwtl
jae
inc
mov
cmp
or
add
inc
popf
je
ss
decl
mov
data16
out
nop
fwait
int3
outsl
imul
or
sbb
jge
lcall
lret
sub
dec
cmc
clc
dec
push
push
xor
pop
call
cmpsb
jg
xchg
push
xor
sahf
mov
clc
cmp
add
ds
or
mov
int
test
mov
mov
pusha
out
loopne
or
ljmp
and
inc
in
pop
test
repz
xchg
jb
sti
lea
jae
sahf
inc
lret
das
and
lods
or
stos
loope
mov
arpl
mov
out
mov
das
hlt
dec
inc
mov
loopne
loopne
push
enter
push
xchg
cmp
cmovg
in
dec
ljmp
sub
jg
add
xchg
jo
arpl
mov
lock
add
dec
xlat
sbb
dec
push
loopne
test
jg
lods
xor
mov
outsb
in
lds
mov
mull
loop
call
cli
jp
cli
pop
inc
shld
into
mov
fcomip
int
int3
lods
mov
pop
mov
mov
jge
fistpll
arpl
xchg
cmpsl
push
bound
fwait
cli
sub
test
lcall
repnz
adc
xor
xchg
ret
inc
out
out
in
xchg
call
ljmp
aaa
push
xchg
push
ret
incl
movsl
test
xchg
dec
insb
sti
push
xchg
sbb
mov
lret
hlt
xchg
cmp
jmp
inc
push
push
addr16
mov
push
sub
daa
out
insl
divb
mov
orl
insb
jae
ds
lcall
mov
lcall
lds
push
push
xor
mov
sbb
xchg
pop
inc
inc
insl
or
pushf
leave
rcrb
mov
sbb
mov
stos
xor
sub
adc
into
sub
arpl
sbb
mov
mov
pop
sub
ret
pop
ds
subb
cmp
mov
decl
adc
movsb
sub
lock
mov
rorb
mov
incl
push
push
mov
pushf
add
xor
push
mov
stos
movsl
das
push
rclb
stos
lret
outsl
add
dec
lret
jmp
sarl
dec
je
mov
call
xchg
and
ljmp
push
test
decl
and
mov
or
sub
cltd
ret
shrl
movsl
mov
ljmp
daa
mov
or
dec
imul
incb
adc
cmp
mov
dec
mov
cmp
mov
sbb
lret
test
test
insb
stos
xchg
lret
sub
loopne
inc
pop
mov
dec
clc
rcrl
push
cmp
sbb
ljmp
and
es
dec
es
sub
xor
std
add
lret
movsl
stos
lsl
and
fisttpl
incl
adc
test
les
fnstsw
lcall
cwtl
leave
call
out
sbb
jns
ret
sbb
repnz
mov
pop
cld
jg
sbb
mov
fisubl
daa
pop
pop
xor
call
popf
sub
cmpsb
lahf
shlb
cmp
and
push
std
sub
pop
lcall
xchg
shrb
add
lret
adc
jg
lahf
and
mov
insl
ja
ret
adc
mov
daa
mov
mov
ds
dec
popa
add
insb
inc
or
stos
and
xor
adc
xchg
mul
jle
mov
fsubrl
sbb
xchg
mov
mov
data16
jl
pushl
xorb
das
lods
inc
dec
cld
sti
dec
es
ds
sahf
push
mov
mov
movsb
out
push
mov
cltd
mov
xor
xchg
loopne
das
icebp
test
aaa
insb
jl
mov
movsb
lahf
test
jg
orb
pop
roll
pop
fdivr
iret
push
cmp
insl
std
decl
push
xor
int
mov
loopne
pop
jnp
xor
cld
inc
decl
test
cltd
out
lea
andb
mov
inc
xor
xor
and
sub
aas
mov
sti
add
loop
mov
shlb
jg
popa
sbbl
mov
inc
std
jmp
js
adc
nop
pop
stos
repnz
lds
in
fisubrs
cmpsb
ret
ljmp
popa
sti
cmp
push
dec
mov
push
aad
scas
test
mov
pushl
rorl
xchg
shll
xchg
mov
adc
divl
sar
movsl
push
lods
or
and
sub
pop
cmp
leave
adc
jg
hlt
rcr
xor
jns
leave
cld
enter
xchg
xor
insl
test
sbb
std
pushl
or
jo
fs
ljmp
sbbl
inc
add
fnstenv
dec
xchg
in
aad
test
pop
cmp
pushl
add
jmp
call
das
out
cmpsl
add
inc
cmp
or
icebp
ja
mov
and
and
je
ja
sub
lcall
jecxz
ljmp
imul
js
fwait
cmp
jno
out
test
rcrl
jg
jns
in
sub
fwait
outsl
enter
mov
jge
dec
pushl
cmpsb
gs
adc
lds
inc
push
rolb
add
movb
pop
rcrb
inc
scas
mov
push
addr16
imul
inc
sub
cmp
decl
cld
leave
ds
adc
jns
jg
xor
addr16
and
xlat
mov
pop
mov
adc
aad
stc
pusha
std
xor
or
adc
lcall
dec
push
dec
jbe
jl
push
fists
mov
mov
fs
sub
sahf
mov
pop
or
mov
scas
jmp
push
mov
ds
test
pushl
sub
add
or
mov
jmp
into
dec
sti
enter
xchg
mov
cld
jnp
xchg
stos
and
sub
xor
clc
pushl
or
sub
or
jbe
popa
out
pop
repz
xor
lret
cmp
orb
push
sub
mov
inc
and
arpl
dec
jmp
mov
adc
pushl
les
xor
stos
mov
jno
mov
pop
rclb
or
daa
inc
call
sahf
iret
fimuls
fndisi(8087
cs
pop
lods
or
adc
xchg
push
mov
lcall
scas
mov
popa
inc
push
xor
ja
push
inc
or
xchg
add
mov
cli
outsb
neg
xchg
sub
fsubs
iret
dec
cmp
jg
es
cmp
sbb
mov
lcall
incl
sub
fadds
inc
lds
inc
push
mov
fwait
sarb
rcll
ljmp
pushf
fistpll
push
jecxz
pop
sub
cmpsb
outsl
or
pop
cld
sbb
in
cmpsl
outsb
mov
xchg
sbb
mov
nop
or
pop
outsb
inc
lcall
testb
outsb
ret
mov
or
jne
negb
pop
pusha
insl
test
add
xor
pop
call
inc
mov
hlt
mov
and
sub
cmp
in
data16
jg
push
inc
pop
cmp
lods
jge
sub
xor
xor
and
call
mov
das
mov
aad
inc
filds
jmp
mov
mov
and
mov
ds
jbe
xchg
cltd
and
imul
jno
xchg
cs
orl
push
fidivrs
std
fwait
nop
ficomps
leave
xor
sbb
push
movsl
sub
xor
hlt
es
bound
or
add
jmp
lcall
insb
jne
adc
push
add
lock
or
shrl
cmp
cmc
mov
xchg
adc
call
stc
push
in
jo
outsl
jnp
inc
sbb
or
je
dec
ja
call
das
in
mov
pop
dec
or
rcrl
int
ljmp
and
mov
xlat
mov
add
mov
mov
and
negb
xchg
mov
mov
aaa
jne
bnd
or
mov
data16
pop
loope
xlat
inc
sbb
push
jmp
movsl
add
or
sbb
lock
cmp
incl
lea
aam
push
jne
enter
adc
movsl
cmp
jp
ja
jmp
sarb
cmp
and
add
lret
push
dec
cmp
or
lcall
into
idivb
push
aad
imull
mov
add
mov
testb
add
incl
and
loop
mov
jle
add
mov
sub
mul
daa
cmp
mov
lods
cld
adc
or
or
bnd
push
cmp
rcrl
es
mov
jle
adc
int
out
out
sub
jmp
jg
call
aam
icebp
hlt
dec
dec
pop
jne
repz
sbb
movsl
ljmp
mov
gs
push
and
in
cli
pushl
dec
insl
mov
fisubrl
in
and
mov
sbb
sub
ljmp
inc
push
fcoms
daa
push
xlat
aas
or
stos
push
push
inc
mov
fst
jmp
or
jno
sub
sbbl
rcl
mov
jns
fisttps
add
mov
test
rcrb
shlb
add
mov
incl
pop
lret
dec
aad
roll
jbe
xchg
lods
jg
and
lea
das
lret
incl
decl
or
cli
loop
iret
lahf
fisttpll
push
xchg
adc
mov
call
mov
imul
imul
addl
mov
scas
movsb
sti
es
outsl
dec
add
or
pushl
sub
roll
push
aad
daa
fnstcw
inc
lea
pop
dec
sub
shll
out
leave
adc
inc
dec
jnp
inc
xor
data16
mov
out
add
cs
call
das
mov
lock
mov
mov
call
add
jno
aam
stos
int
decl
xchg
dec
and
jmp
mov
mov
sbb
push
adc
std
js
lcall
sahf
fadds
dec
lds
mov
mov
sar
call
jl
stos
sahf
bound
loop
in
and
mov
dec
std
mov
xchg
cmpb
push
push
xchg
aam
into
pop
imul
jecxz
mov
inc
mov
pop
leave
scas
dec
shrb
bound
pop
pop
stos
test
mov
loopne
sbb
add
xchg
scas
and
dec
dec
sbbb
jecxz
pop
push
iret
cli
mov
popf
stc
insl
mov
pop
in
adc
pop
and
aam
mov
addr16
or
ja
mov
push
jae
push
shrl
xor
out
cmp
adc
mov
jmp
outsl
pop
out
ficoms
mov
cmpsl
gs
mov
pop
loope
cmpsl
ljmp
lea
loope
in
fwait
loope
push
jb
sar
decl
pop
loop
jle
mov
dec
lds
fadd
pop
shl
lds
outsl
lcall
call
xor
pop
fnstcw
loopne
xchg
pushf
inc
adc
int3
es
pushl
dec
push
push
add
cli
and
pop
sbb
movsl
stos
sbb
stos
sti
pushl
movsb
and
fsubp
in
cwtl
inc
cld
lds
fnstenv
daa
bound
jg
pop
adc
jg
lret
and
stos
pop
std
cmc
mov
mov
inc
xchg
jge
ja
mov
mov
pop
test
dec
mov
xchg
test
test
pop
repnz
and
jns
fiadds
pusha
xlat
jb
jne
je
xor
dec
mov
data16
and
sti
push
jg
clc
das
adc
cs
ja
or
add
fidivs
lahf
mov
iret
xchg
jp
cltd
stc
push
lods
pop
out
adc
lcall
pop
pop
mov
stos
stc
cs
ret
shlb
mov
movsl
in
fwait
jne
mov
pop
push
stos
pop
hlt
pushf
scas
sub
out
loopne
xor
inc
jge
jg
mov
std
mov
hlt
lret
inc
mov
incl
notl
push
xchg
push
repz
or
in
cmp
push
sbb
decl
cs
or
rclb
and
cli
dec
sub
mov
incl
pop
outsl
and
mov
mov
ret
xchg
mov
push
jne
push
sbb
sbbb
add
mov
xor
push
jne
out
call
push
aam
xchg
inc
lahf
jp
fidivl
jo
aad
ljmp
out
mov
sti
test
mov
and
dec
sbb
pop
call
adc
xchg
or
adc
mov
mov
test
xchg
rcrb
jge
rcll
decb
mov
pop
or
jg
add
xchg
or
int3
xchg
out
and
xchg
sub
lret
mov
add
jg
push
mov
jae
out
das
mov
inc
pop
aaa
xor
mov
filds
push
add
jae
push
pop
push
push
stos
jg
clc
push
jnp
mov
pop
in
inc
inc
sub
int
into
xchg
fldt
cmc
test
and
push
aam
loope
sbb
int
iret
mov
mov
mov
lahf
imul
scas
xor
cld
cmp
sub
jg
ja
repnz
dec
out
mov
jl
out
call
add
push
mov
loopne
inc
mov
ret
mov
cmpsl
push
sub
andl
mov
fnstcw
xchg
xchg
sahf
insl
mov
push
push
mov
mov
mov
decl
into
out
xorb
dec
and
lods
and
xchg
les
jb
add
dec
rcl
sub
jb
divl
cmp
lock
outsl
cmc
add
mov
stos
nop
outsl
test
xchg
dec
mov
jo
push
scas
sar
jge
or
adc
sbb
loopne
mov
addb
cli
mov
movsl
and
pop
add
jge
mov
mov
inc
sub
inc
inc
jae
add
stos
mov
lods
jg
jmp
ljmp
in
mov
xchg
ja
push
pop
arpl
pop
js
fdiv
call
fldcw
in
jp
cmc
aad
and
mov
xor
call
mov
jecxz
cmpsb
inc
mov
insb
clc
xchg
mov
sbb
int
loopne
mov
cltd
adc
push
jle
jl
mov
dec
fisubrl
int3
dec
dec
inc
xor
outsl
cld
call
inc
sub
lret
adc
adc
mov
rorb
iret
testb
push
or
pop
xor
mov
frstor
fistpll
ss
jns
data16
jns
xor
ljmp
sub
sub
push
cmp
jnp
lahf
int
loope
call
or
push
cmc
adcb
pop
fs
roll
push
test
and
mov
out
subl
dec
imul
stos
dec
add
pushl
cmp
hlt
push
mov
mov
jnp
fiaddl
cmp
or
jg
leave
mov
movsl
rorb
ja
aad
es
arpl
mov
pop
cmc
jb
dec
repz
stos
mov
pushl
ds
lret
mov
push
mov
into
lock
xchg
stc
aam
ljmp
sub
and
sbb
out
jl
pop
das
xchg
mov
popl
jmp
test
pop
ljmp
cmpl
outsl
std
or
mov
mov
push
cmc
mov
pop
xor
sub
loope
sbbl
ficoms
push
stos
fwait
daa
adc
shlb
outsl
and
in
cltd
into
inc
inc
sub
call
fwait
mov
sub
cmp
out
xchg
inc
or
or
decl
xor
sub
xchg
lds
pop
repz
add
movsl
inc
mov
subb
pop
repz
dec
ret
lods
in
inc
dec
sub
push
mov
mov
pop
test
push
test
sti
xor
cmp
aad
mov
enter
imul
outsl
xchg
cli
mov
mov
jnp
movsb
mov
scas
cmp
lcall
andb
lea
jge
sbbb
call
and
jmp
and
add
movsl
fistpl
add
or
call
mov
sarb
xor
cld
je
cmpsb
pop
dec
dec
pusha
ror
mov
pushf
xor
outsl
lcall
std
mov
imul
inc
lahf
mov
stos
jecxz
aas
mov
aam
cmp
shlb
cmpsb
es
add
mov
stos
jg
std
or
sub
jo
sub
insb
aad
nop
cltd
movq
lds
idivl
lods
and
daa
mov
dec
pop
jg
jmp
sti
xorl
or
adc
jmp
call
dec
push
hlt
lret
pop
mov
lahf
mov
or
in
or
xor
adc
cmc
mov
cmp
xchg
jmp
out
movsb
filds
lahf
push
movsl
fdivrl
outsl
adc
aam
jl
scas
mov
mov
pop
cli
cltd
mov
jne
loopne
sahf
repnz
inc
shrb
push
adcb
loope
call
jb
push
sbb
xorl
sar
dec
push
cmp
mul
movsb
dec
orl
or
push
outsl
push
sub
xor
mov
xor
mov
divb
add
mov
fdivrl
ljmp
add
add
mov
mov
sti
pop
and
cmp
ficompl
loopne
sbb
rclb
lcall
test
js
xchg
pop
insb
in
mov
xchg
mov
xchg
in
scas
inc
jb
cwtl
scas
das
pop
or
jmp
mulb
in
in
divb
pushl
mov
xor
adc
sbb
test
repnz
dec
imul
jle
mov
std
jmp
test
out
mov
fmuls
scas
dec
stos
lock
mov
ljmp
lds
xchg
cld
lcall
xor
fimuls
std
mov
das
inc
jmp
lea
mov
sub
rolb
push
aad
mov
lds
stos
jno
pop
cwtl
adc
aaa
xorl
xlat
dec
arpl
movsl
mov
cmpsb
repz
repnz
mov
ljmp
cmc
push
ficomps
adc
mov
jge
out
inc
inc
sbb
fildll
xchg
lret
push
sub
aaa
sub
sbb
pusha
pop
fwait
outsl
push
sar
jl
in
addr16
ja
insb
dec
inc
fwait
lret
pushf
decl
cld
dec
mov
jge
ret
sbb
push
fsubs
ljmp
mov
imulb
lcall
dec
mov
or
xchg
push
subb
lods
adc
xor
jg
jae
push
jno
sbb
pop
js
dec
mov
xlat
ret
mov
xadd
movsl
decl
jns
or
pusha
jmp
xor
int3
cmp
jle
jne
fildll
jmp
push
rorl
js
xchg
inc
lcall
jl
ret
cmp
jge,pn
out
jo
or
dec
pushf
mov
jno
loop
cmp
xchg
mov
mov
loope
mov
mov
fcoms
mov
movb
sbb
out
dec
sbb
jge
pop
adc
push
sbb
push
cld
pop
add
stos
cli
mov
cli
jne
js
jle
sub
setno
xchg
sbb
mov
loopne
sub
or
mulb
fbstp
push
das
adc
sub
lock
pushl
loope
iret
push
sub
inc
jnp
je
clc
push
movsl
in
pop
pusha
shrb
inc
sbb
das
idivb
xlat
pop
ficomps
cmp
ljmp
data16
push
xchg
insl
lret
pushl
jg
mov
cmc
dec
das
dec
aam
fiadds
sarb
mov
or
cmpb
mov
movsl
loope
sbbb
or
mov
das
mov
addr16
mov
sub
push
hlt
out
mov
insl
xor
ljmp
mov
cmpsb
adc
les
fdivl
stos
test
pop
loope
push
xor
jg
jle
sbb
inc
xchg
dec
push
push
jae
or
iret
lret
mov
mov
push
pop
mov
sbb
cmp
cmpsl
jmp
lods
insl
stc
outsl
movsb
xchg
cld
daa
sub
addl
and
mov
inc
pop
std
or
xor
cmp
push
test
cltd
cmpsl
push
push
std
incl
cmpsb
out
fimull
jle
add
cwtl
mul
mov
stc
mov
lret
in
test
out
inc
clc
jg
call
mov
mov
pop
ds
fistl
sub
pop
leave
decl
mov
mov
pop
mov
popa
inc
pop
jl
daa
ds
call
dec
mov
jne
push
jb
mov
mov
mov
xchg
out
aaa
movsl
mov
add
mov
popa
add
andl
or
lds
das
mov
xchg
jnp
xor
pop
clc
lcall
in
mov
in
xchg
test
data16
pop
jno
mov
pop
lcall
jmp
fdivrl
pusha
adc
mov
add
sarl
lahf
mov
jg
int
mov
pop
inc
sarb
imul
movsl
adc
push
push
decl
mov
pop
ror
jne
mov
pop
icebp
xchg
imul
loop
xchg
mov
jb
sbb
sub
pop
inc
dec
outsl
adc
filds
aad
fcoms
inc
push
sahf
scas
adcb
jmp
jo
add
shlb
dec
sahf
jo
test
sub
sarb
repz
scas
stc
popf
out
push
fmul
mov
and
xchg
push
loop
push
sub
mov
cmp
ds
dec
stc
fidivl
mov
jmp
dec
sub
mov
jo
xor
sbb
dec
decl
xchg
xor
fs
sub
test
sbb
stc
mov
lock
push
push
hlt
lods
cmpsb
inc
test
pop
xor
add
pop
jg
jp
jge
call
stc
sbb
dec
pop
mov
ljmp
into
sub
adc
lea
pop
add
pop
pop
mov
stos
and
lds
incl
stos
inc
push
push
jecxz
jne
fcoml
lahf
xor
scas
sub
add
clc
incl
cwtl
pop
inc
cmp
popa
sbb
xor
mov
cmc
ficomps
ss
add
ja
push
dec
jmp
push
call
stc
mov
mov
and
in
push
adc
cmp
mov
push
inc
and
jns
cmc
and
test
pop
add
dec
inc
test
fisubl
js
sahf
ret
jl
xor
xor
aaa
xor
xchg
hlt
push
ss
jg
pushl
mov
out
dec
push
cltd
and
cld
in
scas
push
daa
decl
dec
jge
mov
adc
sbb
mov
and
das
cmc
decl
test
fadd
dec
add
addr16
out
lret
shlb
stc
loopne
sub
outsb
xchg
and
push
pop
adcb
and
cmp
lcall
rorl
aam
xor
gs
mov
cli
iret
xchg
xchg
xor
mov
es
xchg
and
mov
decl
push
adc
jle
or
cmc
adc
test
jmp
push
and
call
jmp
push
pop
mov
push
andl
call
sub
rcrb
push
xchg
sarb
sahf
out
jne
add
inc
stos
out
lods
xor
pusha
or
iret
repnz
jmp
dec
mov
outsb
outsl
adc
aas
cli
movsl
sub
adc
lods
test
xchg
adc
in
pop
ds
popf
xchg
in
inc
cmp
and
inc
mov
scas
add
dec
or
cmp
aam
mov
fdivr
das
jge
mov
shr
inc
sub
nop
hlt
in
mov
xor
imul
scas
mov
inc
sub
jmp
dec
mov
sub
pop
pushl
jbe
or
popf
loop
in
shrb
out
pop
call
pop
sub
xor
dec
xchg
add
ret
and
in
outsl
cmc
decl
push
xchg
daa
cli
xchg
jae
sbb
mov
arpl
out
cltd
mov
mov
das
fisubl
and
in
movsb
in
rclb
int3
push
outsl
fsubrl
sub
fsts
xchg
xor
mov
insl
adc
cmp
or
mov
imul
mov
bound
xchg
andl
adc
mov
test
fbld
or
mov
or
mov
mov
imull
sbb
outsl
std
jg
fists
sub
ret
pop
ret
sbb
and
add
adc
adc
mov
lock
hlt
pop
pop
xor
jb
add
adc
add
call
push
adcl
sub
repz
insl
popa
mov
aam
jmp
adc
repz
movsl
xchg
push
xor
mov
loop
shl
test
mov
clc
pop
add
fcmovne
xchg
push
fdivrp
jmp
mov
in
subl
test
mov
mov
push
or
insl
xor
push
push
push
mov
cmpsl
fisubl
mov
loop
negb
adc
sbb
push
mov
jg
jmp
addl
in
mov
mov
adc
movsb
movsl
js
lods
imul
mov
xor
shr
test
or
loope
arpl
call
cmp
jnp
loope
sarl
and
xchg
sarl
ljmp
aas
mov
fs
hlt
pop
mov
int3
pop
loope
mov
pushl
and
imul
jbe
sbb
inc
push
mov
sbb
or
mov
add
popa
loopne
push
fs
js
aas
mov
pop
shlb
fnsave
enter
gs
mov
das
std
outsl
aas
push
js
lds
das
or
aaa
clc
pop
cwtl
sahf
mov
pop
out
je
idivb
popf
cmpsb
pop
lods
mov
sti
je
lahf
pop
jge
pop
cmp
xchg
adc
inc
push
dec
pop
lds
leave
hlt
imul
and
movsl
decl
push
bndldx
pushf
pop
adc
mov
adc
test
adc
jg
fucomip
mov
xor
mov
imull
hlt
mov
out
ljmp
add
mov
test
cli
push
cli
dec
aaa
add
bound
jo
movsb
add
pop
std
push
cmp
dec
push
sub
jb
cmc
pop
popa
xchg
shl
adc
out
sbb
mov
mov
loopne
std
jmp
ljmp
cmp
mov
lcall
fistps
xor
jns
push
gs
xorb
jecxz
pop
add
add
outsl
fldl
sbb
push
imul
mov
ljmp
and
adc
xchg
decl
pushl
mov
int
xchg
xchg
mov
stos
test
add
adc
xor
dec
cwtl
lahf
rcll
add
mov
mov
push
push
dec
leave
ss
out
cli
call
cli
hlt
out
cltd
loope
pop
mov
enter
lods
cmp
aad
pushl
push
or
mov
lock
adc
mov
popa
addl
lret
loopne
stc
lods
icebp
add
loopne
mov
call
les
es
xlat
icebp
pusha
cmpsb
test
outsl
push
mov
mov
int
mov
mov
dec
mov
pop
rorb
aas
fwait
inc
in
lcall
jmp
add
pop
inc
stc
nop
xor
aam
sub
out
sbb
ljmp
dec
in
in
mov
jbe
push
in
mov
jle
imul
fwait
add
insl
pop
mov
ds
jl
insb
mov
insl
xor
dec
decl
jmp
repz
imul
or
ljmp
xlat
push
jg
inc
fdivr
ljmp
dec
loope
outsb
sbb
decl
lahf
sbb
stos
out
adc
push
pop
cmp
out
call
mov
mov
out
out
rorb
lock
xor
push
xchg
aad
pop
sar
inc
adc
push
mov
lods
stc
or
adc
mov
data16
mov
and
enter
lcall
movsb
cmp
leave
ret
ret
movsb
jnp
or
cwtl
leave
inc
loope
ss
das
inc
cmp
fs
fsubrl
arpl
xchg
fwait
push
fnstsw
dec
and
jns
mov
and
mov
sub
sbb
shl
push
inc
bound
and
sub
test
cmpsl
sub
cmp
clc
fists
call
sahf
out
test
xor
pop
mov
in
add
orl
xchg
mov
push
pop
sbb
enter
sbb
mov
lcall
stc
scas
jle
rcpps
add
rcrb
sub
adc
lcall
pop
loop
push
pop
dec
sahf
lock
or
and
scas
lahf
inc
icebp
xchg
jmp
pop
sub
xchg
or
movsb
lods
es
test
scas
js
or
pushf
arpl
adc
mov
lds
scas
jmp
out
lds
repnz
push
push
mov
xor
lods
adc
int
sbb
adc
lods
add
sbb
lret
cld
and
decl
in
adc
ret
clc
adc
cwtl
jecxz
int3
inc
popa
pop
neg
aas
addb
lds
ljmp
push
les
add
sti
xchg
mov
jne
sub
adc
mov
movsl
jmp
rclb
adc
fwait
lcall
jecxz
fdivrp
sar
lcall
jge
dec
pusha
inc
xchg
pop
jnp
je
ja
jg
xlat
les
mov
or
jl
sub
mov
cs
mov
addr16
push
es
mov
pushl
jnp
xchg
leave
cmp
cltd
pop
daa
mov
decl
mov
pop
mov
bound
inc
or
lcall
xchg
inc
adc
jno
sub
xchg
pop
jmp
add
mov
mov
push
xor
jg
xor
pop
xchg
mov
enter
pop
clc
das
jne
inc
mov
movsl
mov
push
or
call
out
sahf
or
out
stos
enter
jecxz
mov
jnp
xchg
stos
outsb
sarl
jno
mov
bound
popf
and
enter
mov
cli
or
aaa
cld
mov
cmp
movsb
iret
push
rcr
jo
dec
rcrb
incl
shrb
jle
push
xchg
or
test
loopne
daa
ss
call
das
hlt
pop
cwtl
jnp
outsb
in
xchg
fisttpll
mov
add
std
clc
lods
incl
push
lds
rcr
movsl
pop
je
clc
call
push
ror
test
mov
nop
push
out
decl
mov
pop
mov
loop
mov
xchg
xchg
push
add
mov
mov
mov
mov
xchg
jne
adc
das
jge
dec
ret
ljmp
adc
push
scas
popf
dec
mov
test
or
pushf
mov
mov
test
xor
or
into
mov
lock
call
or
fisubrs
xor
add
iret
sbb
mov
xor
ljmp
incl
jns
lds
ljmp
xor
pop
cmp
popa
faddl
lcall
in
and
xchg
lret
mov
and
repnz
mov
sub
call
ret
sbb
mov
and
xchg
incl
add
and
add
mov
xor
or
mov
loopne
loopne
daa
jecxz
movsb
repz
daa
push
cli
ljmp
ljmp
div
sub
add
mov
outsl
iret
arpl
mov
imul
adc
call
inc
xchg
mov
data16
push
mov
pop
sahf
cmpsb
mov
mov
lcall
test
ss
inc
sub
sub
push
xchg
movsb
in
jae
push
lock
mov
stos
cmc
mov
cmpsb
pop
repnz
loop
lcall
popa
andl
leave
sub
ja
push
lods
xchg
aas
clc
mov
jae
push
jo
adc
in
incl
cltd
pop
aas
ja
gs
nop
addr16
insl
or
jg
dec
lods
filds
cmp
add
xor
mov
lods
out
push
aaa
in
hlt
push
inc
test
js
testl
ss
mov
pop
rcll
jg
pop
ljmp
out
push
mov
iret
mov
sbb
push
or
cmpsb
add
ja
lcall
add
mov
loope
out
sahf
outsl
mov
mov
ret
xchg
jne
cmp
mov
mov
dec
xlat
lahf
ljmp
cmpsl
mov
push
lcall
repz
push
mov
adc
sbb
push
xor
mov
and
push
imull
decl
and
pop
test
push
cmp
pushf
std
data16
xchg
fstpt
mov
fs
push
push
mov
pop
mov
lds
cmp
sub
lret
mov
lods
fsubrs
xchg
add
in
jmp
loopne
clc
dec
add
rcl
js
add
pop
out
js
push
mov
loopne
mov
jg
jecxz
push
sbb
sub
adc
push
ljmp
cmc
push
lret
add
xor
or
jae
jbe
xor
mov
mov
adc
sub
fcoml
test
test
inc
sti
cmc
mov
adc
call
and
lcall
xchg
push
loope
das
icebp
mov
sbb
fwait
sub
arpl
jns
insl
jmp
mov
decl
lcall
je
sbb
and
cltd
push
pop
pop
flds
mov
xor
insl
push
cltd
ret
mov
cmp
mov
jecxz
ficoml
decl
jne
shlb
cmp
cmp
mov
pop
xchg
pop
loopne
jno
push
xchg
movsb
ret
push
jle
subl
incl
imul
insb
mov
xchg
fstps
movsl
ret
pusha
stos
call
cmp
mov
mov
in
cmc
or
movsl
jmp
call
and
ds
cld
daa
push
xor
xchg
push
lea
outsl
das
std
ljmp
xchg
in
je
insb
dec
sub
xchg
stos
hlt
inc
adc
mov
insl
sub
xchg
sbb
test
scas
or
adc
mov
push
push
fs
jo
xor
cli
test
mov
fwait
pop
or
ret
scas
jne
push
and
ret
hlt
nop
push
mov
push
and
add
pop
mov
fisttpl
add
dec
outsb
insl
aaa
cld
mov
push
xlat
xlat
xchg
or
jae
imul
mov
insl
push
out
call
push
sub
stos
ljmp
jge
imul
or
or
mov
jg
loopne
div
imul
push
dec
pop
out
inc
cld
out
out
lods
cwtl
mov
int3
clc
pushl
push
push
mov
call
fidivs
mov
icebp
add
xlat
test
call
xchg
mov
mov
in
cmpsb
lcall
incl
pop
lahf
daa
test
rol
addr16
stos
filds
adc
insl
mov
dec
cld
incl
pusha
cmp
xor
stc
in
cmp
sti
jg
pop
pop
cmp
mov
xchg
add
mov
pushl
jle
push
out
or
and
int3
fnstsw
mov
jecxz
xor
outsl
add
xchg
dec
mov
or
lcall
sbb
dec
pop
pusha
xor
xor
es
les
ljmp
in
xor
ret
mov
loopne
lock
decl
and
cmp
test
add
fptan
fsubrp
insb
mov
iret
cmc
cmp
cld
fidivs
sbb
mov
ljmp
icebp
rcr
lods
cmpsl
pushf
rorb
dec
push
std
pusha
xor
mov
jmp
popf
lea
mov
xchg
dec
fstpt
movsb
icebp
aas
sti
addr16
cld
ljmp
je
and
nop
fsubrs
in
aad
arpl
outsl
in
pop
rorb
xchg
ljmp
push
scas
pop
aas
push
mov
cltd
loope
js
adc
das
jb
add
adc
pushl
cli
dec
in
pop
or
mov
loop
xchg
stos
leave
xor
cmp
pushl
cwtl
pop
stos
fldl
mov
aam
xor
mov
sub
mov
decl
shlb
sbb
cld
inc
xchg
imul
push
in
dec
aad
jnp
cwtl
call
or
into
push
enter
xchg
and
or
int
and
pop
aad
and
cmp
clc
lcall
sbb
in
fnstcw
pop
ljmp
out
jl
repz
xchg
sbb
dec
dec
adc
and
iret
dec
adc
jbe
jmp
lret
add
rcrl
add
lods
mov
pop
xchg
incb
jg
loopne
rcrb
cmp
ret
mov
pop
loope
pushl
pop
add
iret
test
popw
clc
fcmove
repnz
jle
jmp
ja
je
push
stos
mov
sub
divb
inc
push
rolb
jg
incl
aas
xchg
mov
test
pop
iret
inc
mov
add
pop
jp
pop
addr16
jae
cmp
call
mov
push
int3
jge
push
sti
add
or
into
movb
mov
sbb
pushl
mov
scas
sub
push
add
mov
mov
cwtl
inc
inc
jge
call
repz
cli
rcll
xor
aad
out
lret
nop
mov
jg
pop
or
orl
lret
jno
insb
fucomip
lcall
sub
xor
inc
repz
inc
xchg
arpl
test
push
sahf
adc
call
mov
push
daa
ljmp
cmc
outsl
and
dec
jo
or
sti
call
push
addr16
call
fldt
mov
out
addr16
sub
jnp
inc
dec
and
inc
shlb
call
mov
mov
xchg
mov
stos
pop
imul
add
mov
mov
jp
xchg
cmp
cmp
and
adc
push
jmpw
in
scas
xchg
test
push
adc
xchg
imul
dec
xlat
ds
jae
push
push
and
into
icebp
jae
mov
lock
imul
cwtl
test
stos
sub
xor
lret
ss
jecxz
in
dec
mov
sub
and
lret
fs
lds
fstl
jg
insb
push
addb
jo
add
mov
sahf
cmp
out
leave
add
push
mov
mov
xchg
lock
add
data16
fnstcw
shrl
ljmp
call
lods
mov
mov
sbb
mov
rclb
jb
jg
pushl
loop
pop
jge
je
loopne
cmovs
pop
jns
imul
inc
imull
hlt
inc
add
out
data16
push
push
clc
add
inc
mov
cmp
shlb
outsl
test
imul
xor
int3
cmc
lcall
aam
popf
icebp
aam
jg
int
jne
push
into
notl
rclb
push
mov
mov
adc
out
stc
xor
in
or
lret
insl
std
jmp
imul
fdivl
scas
sub
pop
cmp
das
mov
lret
lret
mov
dec
popf
cmp
lea
sahf
ds
jg
and
fwait
in
shrl
sbb
lcall
hlt
jp
cmp
in
scas
loop
inc
or
mov
incl
enter
and
dec
loope
bound
fisubs
notrack
std
cs
xorl
sbb
cwtl
xchg
and
sub
xchg
mov
xchg
mov
mov
dec
cld
scas
push
and
push
cmp
aas
test
pusha
mov
adc
push
xchg
pop
push
inc
dec
hlt
lcall
lods
popf
dec
shll
cli
xadd
cmp
test
iret
outsb
pop
int3
or
cmc
ljmp
pop
ss
pop
jns
cmp
dec
test
sbb
mov
arpl
add
and
scas
mov
inc
movsl
xorb
inc
arpl
inc
fnstcw
sbb
cli
lcall
mov
enter
lret
in
ret
pushf
ljmp
in
leave
or
je
add
std
popa
add
pop
ljmp
pop
inc
mov
sbb
repz
jae
repz
aam
jns
cltd
leave
xor
rol
and
or
movsb
hlt
sti
lcall
adc
push
cmp
cmp
nop
int3
ss
sub
jmp
aaa
outsb
sub
aaa
fisttpl
int
cmp
and
je
std
ljmp
mov
cmp
outsl
stos
mov
xchg
mov
fistps
arpl
daa
jns
mov
faddl
mov
jp
pushl
cli
jp
sub
adc
fisttps
xchg
jl
std
std
dec
fwait
push
mov
pop
decl
icebp
outsl
lea
cmp
sbb
inc
je
push
dec
jo
adc
and
jmp
cli
pop
jb
fucom
inc
push
leave
push
int3
mov
fstl
call
scas
shll
dec
mov
sarl
insb
pop
aaa
jl
push
sbb
pusha
stos
jp
incl
jae
stos
dec
in
sbb
pop
stos
aad
mov
or
lret
add
pop
inc
or
call
fildll
addr16
adc
in
pop
movsb
and
sahf
mov
test
out
fcos
mov
xchg
pop
adc
jns
push
ljmp
test
cmp
jbe
jecxz
xchg
aad
and
dec
fiadds
nop
and
lcall
loope
push
inc
mov
xchg
add
insb
outsb
lret
lret
jge
jge
mov
push
sub
movsb
xchg
lret
decl
pop
lds
xor
mov
fdivl
and
rcrb
or
aad
mov
lcall
add
sub
sbb
mov
out
and
xchg
dec
sub
push
out
in
or
fistps
fucomi
pushf
into
repnz
mov
mov
push
out
mov
and
repz
push
lcall
aaa
pop
jg
popa
xchg
bound
sbb
lods
icebp
mov
mov
in
lcall
in
mov
scas
scas
lret
imul
scas
sbb
das
fdivr
in
stos
pusha
push
ficoml
xchg
dec
mov
sbb
aam
outsb
aaa
in
movsl
cmp
inc
jmp
mov
pop
jne
adc
xchg
scas
fnstenv
xor
in
fucomip
jg
pusha
xor
lcall
out
ja
adc
ss
decl
out
and
stos
pop
inc
pop
and
mov
shlb
lcall
jl
push
push
sub
lods
xchg
fwait
pop
mov
dec
popa
push
incl
inc
ss
add
in
filds
ret
leave
pop
sahf
xchg
mov
lds
cmp
cmp
fists
adc
jg
jo
sub
sub
jp
or
jg
or
xor
es
adc
or
pop
fsubl
jo
xchg
gs
lret
out
js
call
fsubs
inc
pop
dec
stc
cwtl
and
cli
add
leave
mov
mov
xchg
push
jns
jl
cmp
test
fiadds
or
cmp
jns
mov
or
pushl
pusha
out
xchg
mov
or
sub
mov
lock
mul
aam
xlat
cmpl
clc
decl
int
mov
adc
sub
ljmp
mov
mov
loope
cld
and
daa
dec
sbbl
fucomip
push
cli
xchg
jg
add
ret
outsl
cltd
das
mov
in
outsb
push
sub
mov
sbb
xor
adc
pushl
outsl
test
xorb
arpl
mov
add
mov
jmp
in
jecxz
out
lret
hlt
scas
test
xchg
pop
inc
into
inc
ds
jmp
jg
jmp
jecxz
xchg
das
pusha
pop
js
pusha
push
inc
loope
and
es
or
lea
sub
pop
int3
mov
lahf
in
or
out
cltd
jecxz
daa
mov
rcr
hlt
sub
dec
adc
stos
mov
inc
sahf
andl
inc
in
fistl
push
jle
sbb
dec
cltd
inc
orb
sbb
sub
lods
les
xchg
xor
mov
sti
int3
dec
mov
loopne
cld
sub
nop
ret
lods
lods
xlat
fmuls
test
shll
cmp
jae
imul
int3
xchg
cmpsl
or
ljmp
adc
jae
adc
pushf
aam
xlat
in
sbb
sbb
add
inc
mov
or
das
mov
jg
lods
adc
popa
fimuls
sbb
pop
and
pushl
int3
sub
adc
stc
cmp
mov
pop
push
pusha
and
cli
mov
in
ljmp
pushf
movsl
mov
aad
stc
movsb
sbb
cmpsl
je
sbb
dec
cld
mul
xlat
in
out
mov
mov
ret
call
or
xor
mov
dec
aam
loop
enter
jg
sbb
js
and
xchg
cs
imul
cld
dec
cli
cmpsb
add
fistl
mov
addr16
mov
inc
test
call
mov
push
cmp
icebp
sbb
add
out
push
not
jg
pushl
push
sub
push
xlat
cmpsl
icebp
push
sbb
mov
push
mov
in
sub
mov
pop
pop
gs
push
out
xchg
outsl
popf
imul
mul
mov
lcall
lcall
fisubrs
mov
call
fs
cmpsl
in
sbb
inc
xchg
and
cld
push
mov
sbb
push
add
sarl
aaa
fs
aas
lock
xchg
xchg
daa
stc
mov
cmp
adc
inc
stos
xchg
cmpsb
or
lahf
xlat
jp
pop
cli
or
sar
mov
and
or
and
das
std
adc
stc
xor
stos
jmp
rcrb
packssdw
pop
inc
xchg
push
mov
lret
ds
ljmp
incl
lea
lret
pop
pop
fs
testb
test
or
pop
cmpsb
fdivrp
lcall
push
sbb
xchg
push
mov
pushf
and
sub
or
lret
and
lods
stc
and
push
lcall
sbb
fstpt
scas
and
movsl
cmpb
repz
nop
xchg
decl
clc
ret
ds
pushl
dec
xchg
add
sahf
mov
fisubl
adc
addr16
out
add
lock
fbstp
shr
push
repz
in
and
cs
and
pop
pop
stos
sbbb
mov
loope
stos
ds
and
adc
dec
fisttps
hlt
mov
stc
push
fcoms
mov
jg
shll
sub
pop
hlt
outsb
cmp
sbb
add
inc
lcall
xchg
das
inc
fwait
call
loopne
arpl
mov
inc
sub
rcll
cmp
push
cmp
cld
mov
dec
pop
ret
les
rcrl
js
clc
sub
dec
out
jmp
add
inc
sub
je
loope
ret
daa
inc
insb
inc
cmp
cmp
pop
push
mov
jmp
mov
mov
or
clc
repnz
addb
cmpsl
or
call
inc
repz
dec
loopne
out
je
mov
mov
cmp
xchg
pop
rcrb
adc
sub
dec
std
and
mov
dec
sub
jp
lea
add
hlt
sbb
xchg
in
pop
xchg
dec
cli
incl
pusha
mov
mov
inc
or
rcrb
jmp
ja
jle
inc
inc
cmpsb
pop
push
insl
ds
push
pop
stc
insb
fdivrs
lock
dec
in
jb
sub
pusha
aas
cmp
fildll
pusha
or
xlat
test
fwait
mov
shrl
pop
cmp
jle
inc
repz
jmp
std
jle
faddl
xor
daa
adc
inc
jns
pop
in
push
cmp
popf
inc
sarl
jle
lret
cwtl
sahf
xor
cltd
out
push
sbb
push
mov
add
mov
std
movsl
sar
mov
xchg
test
jne
mov
push
clc
sbbl
outsl
fimull
ret
sbb
jge
pop
mov
jg
lock
daa
sbb
shlb
add
mov
stos
mov
dec
xlat
mov
adc
stos
xlat
imul
and
jmp
pop
pushf
fcmove
sbb
out
xchg
inc
popf
mov
out
xlat
cwtl
in
push
cmc
mov
ljmp
aam
pop
ret
or
mov
dec
mov
mov
jmp
lcall
xchg
das
adc
pop
sti
into
fldt
in
sahf
and
ljmp
lods
mov
pop
int
lcall
sbb
mov
lret
xor
hlt
cmpsb
std
dec
lea
mov
in
lods
xor
stos
adc
movsl
pop
push
popf
popf
shl
jg
or
sub
ljmp
gs
pop
dec
sub
push
aaa
push
aad
xorb
stos
mulb
cmp
std
push
xchg
sbb
cmpsb
rcrl
mulps
mov
jmp
push
mov
or
cs
cmpl
in
push
or
jb
push
loop
ljmp
addr16
sbb
add
lock
inc
fwait
dec
cmpsl
in
pop
cmpsl
out
mov
aaa
or
cmc
insb
cmp
cli
add
loope
fidivrl
push
cmp
xchg
fimull
orb
out
and
pop
lret
ud0
mov
and
cmc
arpl
mov
loop
or
mov
pop
and
xor
jmp
out
sub
outsl
sbb
push
inc
jmp
cmp
fcmove
filds
dec
fdivl
xchg
call
inc
cmc
push
gs
lcall
popa
out
aaa
sub
and
out
cmp
les
stos
or
fwait
fwait
or
add
into
and
mov
orb
sbb
out
loopne
mov
sahf
push
das
mov
imul
enter
aas
std
cli
fs
data16
sarb
xor
xchg
add
push
jmp
ljmp
bound
add
or
data16
ds
loop
decl
fsub
sbb
or
cwtl
push
mov
cmpsb
mov
andl
mov
jns
mov
mulb
call
sbb
ljmp
or
and
mov
das
mov
repz
jmp
out
dec
out
dec
push
inc
xchg
mov
sti
divl
xor
sbb
mov
pop
cmp
cmpsb
insl
xor
cmpsb
xor
add
incl
ljmp
test
pop
mov
inc
mov
test
and
jle
icebp
outsl
std
mov
mov
xchg
fbld
pushl
add
mov
pusha
adcl
mov
xchg
lds
call
movl
addr16
icebp
xchg
push
movsl
fs
cld
jmp
call
xchg
inc
sti
dec
lods
insl
roll
pop
mov
jb
popf
mov
aaa
inc
jge
lods
test
test
cwtl
and
push
jae
xchg
shll
xchg
mov
sbb
lcall
int3
dec
sti
imul
jbe
cmp
push
shl
ss
cmp
sbb
or
push
adc
xor
mov
dec
test
mov
pushl
dec
mov
xchg
ds
js
popa
loop
jbe
insl
mov
lods
xor
jg
call
cmc
dec
adc
jno
mov
fdivrs
mov
cli
sbb
fdivl
sbb
sti
and
ret
test
aam
xchg
pop
inc
mov
adc
outsb
pop
out
inc
xchg
aaa
outsl
mov
pop
popf
xchg
cli
xlat
call
in
sub
dec
adc
jb
pop
fwait
xor
dec
inc
sbb
mov
stos
pop
mov
adc
negl
fucomip
and
push
jg
andl
mov
xor
cli
or
push
leave
pushf
dec
xor
mov
fisttps
clc
xor
xor
or
stos
mov
call
cmp
aaa
aam
in
add
pushf
sarl
cmc
sub
out
test
xchg
arpl
xor
cli
cmp
or
sbb
pushf
dec
inc
shrb
xchg
call
cli
jg
sub
adc
sub
sti
sar
sahf
sbb
mov
into
sbb
adc
mov
xor
in
gs
add
decl
daa
movsb
jmp
insl
pop
push
ret
mov
lock
sarl
enter
and
js
sbbl
jg
jmp
sub
mov
icebp
fisubl
dec
movsl
jle
xor
or
negb
incl
xor
xchg
aas
lods
push
out
or
inc
fs
cmp
int3
push
add
xor
mov
in
inc
fbld
jle
fdivp
imul
mov
loope
ss
jns
ds
adc
jo
push
mov
lahf
jge
mov
inc
add
aad
das
lock
pushf
inc
lret
test
sti
jbe
cmp
and
push
add
lret
nop
jb
jge
leave
xor
js
sti
adc
lods
fldt
pusha
fmuls
aad
leave
push
imul
cmp
popa
cmpl
mov
sbb
fcoms
add
and
cmp
ret
pop
iret
mov
mov
and
sub
pushl
testl
cmp
imul
add
decl
jo
outsl
bnd
call
js
sub
and
mov
jns
cmp
mov
stc
push
push
mov
outsb
outsb
gs
pop
ds
hlt
lods
lea
mov
aam
sub
mov
xchg
jns
fs
mov
lcall
mov
mov
lea
es
mov
ja
test
add
xchg
jnp
call
fistl
pop
mov
cmp
mov
call
xchg
lcall
mov
pop
into
ret
sarl
jb
mov
push
dec
jmp
mov
dec
pop
outsl
sub
mov
les
in
cmpsl
pop
xor
movsb
sub
xor
and
pop
cli
jmp
mov
xchg
dec
add
xchg
mov
test
or
xor
sbb
bnd
movsb
int3
push
push
sub
test
frstor
incl
imul
mov
pusha
mov
jl
call
dec
add
pusha
or
in
inc
xchg
push
fistpll
aaa
stos
adc
repz
roll
nop
mov
test
add
roll
pop
push
test
or
lret
push
cli
jmp
fidivrs
mov
clc
lahf
jle
decl
mov
inc
jecxz
add
fistpll
mov
cli
popa
xchg
sub
dec
adc
lret
dec
fcomps
and
push
sub
jecxz
andl
adc
lock
call
and
imul
add
repnz
clts
fs
imul
das
cli
adc
or
sti
sbb
mov
dec
cli
pushl
clc
xchg
addr16
in
aad
dec
aam
adc
mov
je
mov
xchg
call
out
fdivr
jo
adc
pop
inc
scas
test
push
mov
mov
lods
iret
mov
push
imul
mov
pushl
mov
mov
jmp
mov
cmpsb
xor
mov
cs
mov
ds
sbb
pop
clc
lcall
ja
cld
or
sbb
sahf
jo
sahf
idiv
lcall
sar
ficoml
sbb
hlt
sub
xchg
testl
inc
xchg
cli
ret
mov
test
gs
add
cwtl
movsb
and
mov
cli
inc
mull
jbe
in
icebp
jmp
or
mov
out
dec
sbb
mov
jo
gs
add
leave
dec
mov
je
mov
dec
pop
and
xorb
incl
aad
inc
ds
lods
dec
pop
cmp
js
sub
call
mov
ja
push
jnp
and
mov
sbb
push
mov
movsl
xor
dec
iret
arpl
hlt
roll
sub
imul
mov
mov
mov
aad
sahf
mov
jp
cld
jo
add
mov
dec
mov
imul
xchg
dec
and
mov
into
fldenv
aad
sub
repz
pushl
jmp
sbb
and
push
add
in
push
ret
adc
incl
mov
pop
cmpsb
adc
fsts
and
push
je
sub
add
add
sub
xchg
pop
lret
fldt
add
test
mov
bound
scas
lock
mov
stc
hlt
iret
sub
sub
xchg
cli
ret
aam
mov
xor
das
mov
adc
pop
xor
scas
testl
or
test
clc
imul
sbb
inc
ja
mov
lcall
jg
loop
xchg
xor
cmc
call
imul
xor
mov
test
pop
dec
sub
dec
mov
js
stos
outsb
adc
inc
aam
das
xchg
leave
push
fwait
push
xchg
mov
add
mov
sti
or
es
fildl
inc
neg
push
enter
and
das
lock
sub
lock
outsl
movsl
xor
fsin
xchg
xchg
lcall
std
push
mov
popa
aad
mov
mov
cltd
je
mov
hlt
decl
mov
pop
xor
and
and
daa
in
nop
jns
imul
jmp
int
adc
ret
lods
adc
mov
jg
sub
cmp
js
jae
push
push
xchg
lods
mov
jge
or
mov
les
mov
push
mov
cmpsl
inc
pop
js
enter
mov
sub
ljmp
outsl
jmp
sar
cmp
mov
or
stos
call
push
repnz
movsb
add
jbe
gs
and
sbb
sub
mov
jae
fdivrp
decl
sub
call
push
and
push
imul
popa
movsl
and
xchg
xchg
xor
hlt
cmp
dec
add
xor
push
cld
pushl
add
in
adc
add
adc
incl
shr
adc
ret
pop
push
cmp
jp
xchg
fs
mov
sub
outsb
sub
in
push
pop
loop
jg
inc
sbb
leave
inc
sti
and
outsl
rorb
mov
shl
adc
xchg
test
enter
cmc
bound
fisubrl
je
pop
dec
mov
loopne
mov
daa
es
lcall
sbbl
lods
mov
jne
add
xor
dec
mov
push
ja
sbb
cmp
sbb
pop
call
decl
xchg
push
sbb
flds
mov
pop
add
jae
stc
aad
inc
leave
pop
cmp
inc
mov
orl
pop
sub
aad
scas
shl
cmp
or
lods
sbb
mov
mov
add
jae
hlt
cmpsl
call
push
decl
add
jmp
inc
call
fldcw
jp
mov
mov
incl
ljmp
push
imul
dec
imul
in
fisubrl
in
add
sub
clc
lcall
ja
fcomps
icebp
test
sub
xchg
ja
and
dec
cmpsb
mov
insl
xchg
adc
arpl
aaa
mov
mov
xlat
adc
cmp
inc
stos
and
pop
jnp
pop
sbb
out
or
mov
add
push
cs
or
jb
push
sub
jns
add
mov
mov
je
mov
orb
loopne
or
decl
sub
push
add
cmp
lahf
dec
and
sub
incl
pop
adc
repz
dec
dec
adc
mov
add
daa
das
xchg
call
lcall
fistpll
aad
fnstsw
add
sbb
push
mov
cs
mov
outsb
test
bound
cmc
xor
sti
and
mov
xchg
incl
mov
mov
mov
aam
lahf
imul
lcall
repnz
stos
jnp
scas
mov
rorl
mov
out
inc
fs
decl
dec
mov
psubsw
div
xor
int3
pop
cmp
addl
rcrl
imul
dec
inc
shlb
in
push
adc
mov
mov
fstl
jns
xlat
xchg
and
into
dec
ja
into
sbbl
or
sub
ficompl
dec
push
mov
adc
test
cs
cs
aam
stos
adc
decl
adc
mov
shl
push
xchg
adc
jmp
std
jmp
inc
sbb
pusha
mov
and
push
and
push
sbb
call
jns
mulb
xor
sbb
lods
jne
mov
pushl
cmp
iret
adc
fdivrs
xchg
sbb
lcall
push
dec
sbbb
movsl
jae
rcll
shll
call
jl
or
out
cld
inc
out
je
xchg
jmp
add
call
clc
xor
sti
cld
outsl
test
mov
popa
or
add
mov
sahf
mov
push
cmp
addr16
enter
in
aaa
pop
movsb
adc
ljmp
xchg
or
fidivrs
pop
ja
outsl
scas
stos
jns,pn
and
dec
incl
data16
dec
and
mov
inc
sbb
add
ffreep
mov
test
sbb
xor
shr
fwait
lret
xchg
xor
jg
lcall
jo
rcrl
je
inc
pop
sub
dec
adc
cmpsb
decl
icebp
lret
inc
sbb
pop
in
jno
mov
adc
decl
or
pop
adcb
inc
pop
xor
iret
pop
popa
sahf
pop
inc
cli
fcoms
push
aaa
clc
jg
stc
in
movsb
mov
lret
adc
call
fidivl
mov
mov
adc
dec
icebp
dec
mov
dec
fsubs
push
pop
incl
pop
xor
jb
call
adc
loope
push
out
aam
jmp
jp
orb
negl
insb
in
pusha
inc
fstps
cmp
daa
adc
sub
pop
stos
sub
subl
subb
lahf
add
add
call
jmp
xchg
pushf
inc
push
mov
cld
mov
adc
fcos
call
clc
jne
ret
sub
cmp
jge
cmpb
sub
enter
dec
xchg
ljmp
pop
adc
scas
adc
and
jo
xor
ss
es
lcall
sub
loope
cwtl
lea
ficomps
mov
cli
pop
add
aas
sbb
cmp
xor
sbb
movsb
decl
xchg
mov
cmpsb
fstps
ficoml
or
cmp
cli
lods
js
loopne
incl
jle
and
sbb
add
jns
aam
ljmp
jb
push
shlb
fs
flds
xchg
inc
pushl
inc
imul
notb
fsubrs
mov
inc
sub
dec
mov
adc
mov
leave
leave
out
cmp
test
xchg
dec
push
dec
cltd
inc
xchg
stos
ljmp
jg
and
insb
mov
cmp
xchg
mov
mov
ds
aam
adc
inc
cmp
lock
xor
sbb
xchg
jecxz
call
jnp
mov
or
nop
dec
jl
jb
mov
cld
test
push
inc
and
mov
push
mov
mov
lret
jg
movsl
in
mov
xchg
xor
inc
jl
push
mov
dec
call
decl
imul
mov
and
data16
push
xchg
js
pop
xor
cmp
mov
ret
and
subb
jg
sar
jae
lock
or
loope
orl
std
jg
cs
inc
lret
xor
sarb
sbb
cmp
call
mov
push
or
adc
dec
repnz
clc
lods
out
dec
cmpsl
ficompl
dec
insl
mov
stc
sub
pop
lahf
sub
xor
xor
xor
fdivs
cmc
push
mov
inc
pop
jo
push
pushf
mov
lods
mov
invd
cmc
adc
mov
call
sub
and
push
adcb
sub
sub
dec
mov
mov
repnz
mov
inc
and
int
cld
jnp
inc
sub
popf
cli
xchg
out
data16
jnp
fcoml
dec
insb
inc
movsb
cmc
xchg
int3
cmp
dec
cmp
mov
aas
or
push
sbb
xchg
xchg
adc
add
lods
inc
dec
mov
mov
loope
inc
xchg
pushf
rcll
pop
and
mov
dec
push
ds
mov
loopne
mov
or
test
dec
push
add
mov
repnz
sbb
call
add
mov
ja
outsl
xchg
jae
stos
into
ljmp
inc
int3
out
add
or
push
es
mov
xchg
jno
jne
fisubl
pop
dec
and
es
push
adc
aam
icebp
loop
iret
dec
add
push
xchg
fwait
cmp
loop
hlt
les
test
mov
popf
add
sahf
aam
jne
ljmp
icebp
outsl
scas
imul
push
xor
nop
mov
loope
sbb
xchg
popa
cmp
pop
clc
adc
test
mov
test
popa
ljmp
repnz
mov
cmpb
movsb
loopne
movb
xor
add
lahf
addr16
mov
adc
daa
popf
cltd
fdivs
push
cmpsl
shl
xor
xchg
push
jnp
leave
push
jae
lcall
popa
jb
sub
es
dec
lock
or
daa
loope
and
pop
sub
mov
jl
push
out
stos
fnstcw
and
pop
or
call
or
mov
xchg
jle
jmp
f2xm1
bound
ds
mov
rcrb
cli
test
and
lahf
jp
xchg
test
cltd
xchg
sub
mov
xor
pop
xchg
push
shl
jmp
insl
aas
ljmp
jecxz
out
test
aaa
jp
push
inc
and
jle
call
popf
sbb
loop
sarb
ret
pop
lea
dec
fldenv
jno
ret
in
jg
lcall
sahf
clc
scas
sub
jmp
stc
fistps
movsl
faddp
nop
pop
push
cli
lea
mov
filds
sbb
mov
adc
mov
decl
or
popf
push
ret
dec
jmp
jl
adc
jg
lcall
jbe
cld
pop
or
fbstp
mov
inc
push
fsubrp
inc
mov
add
mov
jge
jae
jge
and
cmp
jns
add
fsubrl
fldt
mov
icebp
fnstsw
rcrl
push
addl
sub
fisttps
sti
in
lock
jmp
jmp
inc
pop
add
xor
add
push
fbld
ljmp
inc
adc
sbb
mov
lahf
lds
cli
mov
dec
mov
adc
jge
or
ljmp
sahf
jmp
jge
sub
mov
incl
jecxz
rcrl
ror
repnz
cmp
mov
mov
add
jmp
mov
adc
insl
jne
sub
xchg
push
lock
incl
iret
push
lcall
cmpsl
sti
sbb
mov
ficoms
mov
ds
mov
cmpsb
mov
dec
mov
jno
popf
mov
pop
sti
jb
lods
or
enter
in
sbb
pushl
stos
imul
jmp
nop
or
jns
mov
ljmp
mov
jb
jg,pt
sub
or
mov
jp
xchg
or
pushl
fsincos
popa
mov
xor
push
pop
or
xchg
cmpb
ret
push
test
aas
or
pop
aam
repz
push
mov
xchg
decl
out
aam
mov
std
jns
xor
out
ljmp
adc
sub
cmc
inc
loop
mov
sub
or
cld
jg
inc
outsb
icebp
add
jg
and
mov
push
popa
es
insb
xor
xchg
incl
fistl
xor
or
int
and
loopne
jne
sub
push
or
dec
sbb
mov
jecxz
fstps
sub
push
mov
fwait
mov
push
clc
mov
loopne
stos
push
rol
adc
mov
add
movsb
mov
inc
decl
movsb
repnz
xor
and
das
xchg
inc
cmp
int
pushl
testb
sarb
mov
imul
addr16
mov
leave
jmp
dec
cld
lods
mov
in
pop
push
sbb
imul
test
rol
pop
mov
add
fstl
mov
aaa
cli
add
pusha
sub
mov
add
popf
mov
and
movsl
jo
adc
push
cltd
cs
cmp
cmp
push
leave
or
sbb
jecxz
push
lret
mov
and
mov
pop
lcall
add
ss
test
out
sub
rcrb
sar
push
std
jecxz
jle
and
add
xlat
sbb
push
call
clc
mov
add
cmp
mov
stos
in
clc
pop
cmp
jnp
lret
or
xlat
lcall
loope
inc
push
adc
pushw
mov
sbb
pop
push
mov
call
jo
xchg
push
add
test
xchg
cmpsb
nop
push
stc
idiv
ljmp
xor
pushw
into
outsl
popl
lock
fdivrs
icebp
lods
mov
daa
sbb
pop
test
jecxz
cmp
ljmp
addr16
daa
les
clc
xchg
xchg
sub
enter
pop
out
push
imul
popa
mov
sahf
inc
pop
xor
and
jnp
jecxz
js
jle
or
push
xchg
icebp
cmpsl
push
stc
xchg
sar
in
incl
push
ret
mov
lret
lcall
leave
inc
int3
xchg
sub
ljmp
add
in
ja
sub
mov
loopne
dec
insl
pop
das
xchg
call
jae
ss
xchg
shr
sbb
mov
aam
icebp
or
push
cmp
call
rclb
xchg
and
shll
sub
mov
or
adc
sub
adc
call
aam
lods
aas
movl
lahf
rcll
insl
mov
cmp
jecxz
adc
mov
add
cwtl
outsl
mov
pop
lcall
call
add
lret
outsl
imul
test
xor
mov
cmc
std
adc
jg
call
xlat
xor
sub
pop
sti
sbb
lcall
mov
cmpsb
adc
jmp
cmc
and
fsubr
inc
enter
roll
aam
xchg
cmc
cli
ljmp
aad
cmp
cmp
test
pop
arpl
cli
xchg
xor
shlb
jle
popf
outsw
jo
sbb
jmp
xchg
mov
faddl
jmp
fxch
cmp
dec
mov
pop
ficompl
push
fldl2t
cmp
mov
adc
push
test
fcompl
into
in
cmpb
sub
outsl
hlt
mov
pop
mov
mov
call
cmp
sbb
fidivs
loope
test
add
xor
jmp
test
xor
push
pop
push
pusha
lcall
nop
mov
jl
adcb
mov
ljmp
sahf
dec
dec
cmc
adc
or
sbb
and
mov
call
das
add
mov
mov
lods
mov
ja
add
xchg
sub
ret
cmc
jmp
jmp
cwtl
dec
cmpb
xchg
loopne
push
jecxz
outsl
push
ljmp
fucomip
mov
dec
scas
push
xchg
jp
nop
pushl
rcll
test
mov
fnsave
mov
in
je
test
add
ljmp
ljmp
dec
imul
xchg
int3
outsb
lods
lock
cltd
ljmp
xor
out
add
jl
xor
push
sub
adc
adc
ljmp
inc
inc
mov
dec
cwtl
call
hlt
push
xorb
leave
nop
movsw
cmc
leave
jno
call
clc
pushf
cltd
pop
cmp
push
mov
cmp
push
mov
lods
cmpsb
inc
jmp
push
cwtl
aas
cwtl
test
xor
cld
mov
jle
mov
sahf
xlat
inc
in
mov
mov
sub
in
jg
in
pop
stc
or
sub
mov
call
sub
dec
sbb
cmpsl
test
push
adc
sahf
lock
das
aam
aaa
inc
movsl
xchg
pushf
or
arpl
xorl
bound
test
lcall
stc
xchg
outsb
pop
mov
sub
xor
mov
outsl
hlt
mov
aad
push
sub
and
call
jo
test
in
xor
mov
sbb
test
adc
push
ret
mov
mov
fdivr
ljmp
fdivrl
sahf
jb
and
dec
xor
pop
je
imul
call
mov
sahf
dec
adcl
inc
jne
sti
ret
cmp
inc
lcall
es
or
incl
shlb
in
fstl
adc
fiaddl
sti
sub
cld
loope
out
test
mov
das
stos
outsl
outsb
aam
mov
adc
jg
add
cmpsl
xor
inc
and
sub
xchg
lcall
int
sbb
std
test
add
cmpsl
mov
mov
pop
loope
xchg
cli
insl
sbb
lcall
pushf
xor
jns
popf
jg
xor
mov
xlat
dec
add
cld
nop
popa
push
test
or
data16
fisttps
outsl
pop
sub
aaa
aaa
lods
pop
mov
std
pop
sbb
pop
pushl
cli
iret
aas
call
cmp
in
add
aaa
sub
sbb
sbb
clc
outsl
icebp
shlb
lods
lahf
jne
jo
cmp
dec
push
call
mov
popf
je
arpl
repnz
test
mov
or
pushl
loop
sbb
sbb
rcl
cmp
inc
fsub
in
lahf
cmp
cwtl
inc
mov
shlb
cltd
notb
sub
in
shll
sar
pushl
add
loopne
and
ret
rcll
repnz
icebp
push
int3
xor
adc
mov
adc
decl
mov
addl
bound
in
mov
pop
fs
ss
cs
fsubrp
inc
sahf
std
aas
mov
sub
inc
jae
jmp
mov
mov
out
adc
xor
out
push
stos
pop
das
add
stc
das
insb
push
jmp
in
or
stos
scas
inc
pop
cld
leave
xor
fistl
jb
das
pop
sub
xor
inc
incl
lret
in
decl
jns
cmp
loopne
add
pushl
sub
mov
mov
popa
mov
jns
aaa
lahf
scas
pop
push
out
adc
lods
jmp
pop
testb
mov
xchg
mov
lahf
into
and
sbb
vxorpd
jne
pop
cli
jg
xor
cmp
mov
pushf
dec
cmp
mov
xor
push
aam
call
loopne
lahf
xchg
cmp
call
std
mov
incl
jg
imul
push
rclb
xlat
ror
nop
adc
jmp
mov
decl
je
add
gs
mov
fbld
test
call
inc
pop
lds
mov
push
inc
hlt
sub
mov
jl
mov
add
mov
sbb
data16
mov
dec
sbb
pop
cld
sbb
pop
cmp
dec
mov
stos
int
inc
cld
lcall
lret
lea
stos
mov
add
xorl
sbbb
mov
ljmp
sarl
repnz
outsl
cmp
pushf
push
mov
pop
call
or
xchg
push
dec
shrl
inc
call
adc
mov
jmp
rcr
jp
or
ret
daa
out
or
mov
mov
rcr
lcall
fwait
pusha
adc
rep
and
fdivs
loope
xchg
pop
pop
call
ljmp
out
cmp
sbb
xor
movsb
adc
out
or
jl
jg
and
xchg
movb
dec
dec
aaa
or
add
shl
mov
mov
out
push
xor
xor
inc
xor
mov
add
inc
pop
push
inc
xor
ljmp
dec
cmpsb
jge
outsb
push
rorl
push
test
xchg
and
cmp
incl
loopne
les
pop
sub
push
inc
xorl
jg
xor
sub
sub
fcomps
popa
sub
pop
push
sar
cmc
outsl
repz
arpl
or
and
or
icebp
jmp
xlat
xor
adcl
popl
mov
add
pop
xchg
adc
flds
ja
adc
mov
rorl
cmp
movsl
fsubrp
push
imul
loop
shlb
das
cmc
incl
add
cmc
sbb
incb
jns
int
cmpsl
call
rcrl
fwait
mov
popl
loope
lods
mov
pop
jne
mov
call
inc
sub
gs
mov
xchg
cltd
bound
fisubs
jecxz
ljmp
dec
insl
pop
sbb
fwait
pushf
xchg
xor
push
push
mov
jg
mov
xchg
popf
xor
adc
fidivrs
loopne
mov
repnz
jl
mov
jg
ljmp
aam
jne
cmp
dec
js
mov
nop
hlt
ficomps
incb
jbe
sarl
movsb
push
mov
or
cmc
jae
add
mov
mov
jecxz
das
xchg
pop
stos
shll
call
or
push
cmp
xor
cmp
fisttpl
incl
cli
fildl
les
jne
sub
and
cmp
cmc
pop
loop
fwait
gs
rcrl
loopne
push
adc
hlt
sbb
fcomi
mov
xchg
add
jle,pn
xor
call
cli
pop
aad
mov
xchg
cmp
pop
push
adc
cs
jbe
incl
jns
sahf
int3
sbb
cmp
cmp
cmpsb
icebp
jg
popf
mov
cmp
or
js
test
leave
sbb
xor
mov
push
mov
mov
ja
call
or
lock
jo
cltd
cld
ret
psadbw
xor
idivl
push
decb
xor
popf
lret
adc
mov
sbb
pop
pop
adc
xchg
pop
decl
enter
insb
xlat
and
mov
insb
or
das
mov
cmp
call
call
out
pop
pop
lret
test
xchg
xchg
clc
incl
adc
ljmp
xchg
movsb
call
push
xchg
pushf
mov
hlt
jmp
push
dec
ja
mov
nop
xchg
call
neg
push
mov
js
cltd
mov
mov
dec
adc
pop
in
in
out
sbb
cli
jmp
out
add
jae
jnp
add
pop
sar
clc
fsubrl
cmp
decb
pop
xchg
adc
cmp
cmp
inc
in
mov
pop
sub
ficoms
cmp
popa
shl
inc
enter
push
inc
inc
dec
lods
int
sub
std
pushl
mov
dec
aaa
sub
inc
or
or
push
xor
adc
sbb
out
pop
sub
sar
fildll
mov
sub
cmpsl
sbb
test
cmp
inc
loopne
sar
jg
pop
sub
dec
rcrl
cs
popa
addr16
shl
lcall
or
sub
xchg
and
xor
iret
mov
arpl
subl
ljmp
push
sbb
inc
sbb
xchg
cs
sbb
xor
repnz
loopne
mov
jmp
insb
or
daa
xor
or
das
cmp
dec
or
and
mov
adc
jle
mov
sbb
or
lods
jecxz
test
mov
test
call
add
fwait
mov
aad
jecxz
jg
mov
push
or
mov
cmp
dec
pop
sti
gs
ljmp
not
mov
inc
scas
sbb
mov
inc
mov
jmp
push
in
pop
jle
and
shl
flds
lcall
stc
xlat
lret
sbb
dec
aas
hlt
pop
lcall
pop
pop
add
push
lret
inc
aaa
dec
lret
imul
fistpll
popf
adc
jl
in
insb
data16
mov
loopne
test
cld
sti
jp
mov
in
dec
stos
and
inc
call
mov
in
pop
and
and
call
xchg
subb
outsl
jmp
mov
cmp
pusha
and
pusha
je
fdivrp
dec
jmp
into
leave
jecxz
pop
mov
lock
fists
push
add
xchg
cld
movsl
mov
jge
clc
dec
cld
nop
in
xchg
or
not
dec
sahf
std
mov
jmp
in
icebp
test
fisubrs
std
mov
cmp
sarl
jg
adc
or
lock
scas
dec
andl
call
or
add
jl
sti
xlat
xchg
xchg
mov
cs
lret
insb
cld
adc
ljmp
cwtl
sti
push
cli
ficomps
and
xchg
mov
cmp
loopne
call
cld
cltd
sbb
aam
or
xor
hlt
jg
dec
push
pop
fdivrs
xor
icebp
popa
sbb
loop
test
mov
push
movsl
outsb
mov
xchg
mov
lret
mov
hlt
pop
movsl
inc
dec
push
lods
pop
call
dec
jns
sbb
mov
jo
int
cmpsl
xchg
ret
add
mov
in
incl
sbb
and
mov
sbb
mov
imul
pop
and
mulb
outsl
pushf
jecxz
cmp
in
fstpl
jo
dec
and
sub
add
adc
push
adc
mov
sahf
lock
call
clc
int
out
pop
push
push
inc
adc
scas
push
mov
stos
sub
add
push
out
mov
push
leave
out
and
inc
stos
cld
pop
decl
call
mov
mov
sub
and
out
es
pop
lods
add
gs
ret
shrb
push
xchg
loop
lret
prefetch
insl
fidivs
inc
xchg
dec
out
cwtl
arpl
jle
push
cmpsb
iret
push
call
xchg
and
and
dec
es
arpl
or
push
dec
sub
lret
call
or
in
push
mov
fwait
test
scas
cld
lcall
data16
aas
pop
mov
in
int
fcoml
sbb
aad
pop
ljmp
call
adc
push
push
decl
mov
cmc
in
sub
push
adc
dec
xchg
aas
sbb
test
stc
lret
adc
jo
movsl
push
roll
imul
in
xchg
rcrb
icebp
scas
out
cmp
mov
loope
ds
jmp
decb
fldenv
xchg
lret
inc
cli
xchg
mov
mov
mov
push
add
sub
int3
and
and
mov
xor
fs
mov
notb
mov
call
lods
iret
mov
push
in
lea
pop
dec
push
call
ja
xchg
loopne
cmp
lret
lock
int
std
mov
dec
stc
or
lds
and
inc
hlt
sbb
movsl
test
mov
push
mov
lds
out
dec
std
decl
inc
dec
movsb
dec
daa
mov
dec
xor
mov
cld
xchg
clc
ljmp
outsb
mov
iret
adc
dec
cmp
mov
incl
pushl
or
ficoml
loope
loope
lds
lahf
mov
mov
popa
mov
mov
loope
mov
xlat
iret
jmp
imul
das
pop
in
decl
cmpsl
or
inc
stc
cs
dec
fdivrp
push
fsub
sub
sub
pop
cmp
jmp
addr16
clc
dec
cld
ljmp
mov
pop
adc
sub
int
cwtl
inc
push
imul
jg
cld
sub
pusha
inc
adc
fdiv
xor
dec
data16
xchg
cmp
mov
sbb
push
mov
adc
and
fbstp
movsl
call
rcl
frstor
int3
ret
sub
popf
mov
mov
cmc
xor
icebp
dec
sarl
test
je
arpl
and
and
mov
and
stos
incl
pop
stos
cmp
adc
dec
or
cld
cwtl
stc
adc
mov
mov
jecxz
in
addr16
cmp
stos
cmc
mov
dec
mov
sub
inc
push
or
orb
dec
divl
adc
lds
popf
cmpsl
mov
call
das
push
jmp
jno
mov
push
aaa
loopne
repnz
mov
sub
mov
mov
jg
mov
sti
jle
in
pop
push
mov
xor
lcall
and
add
sbb
sbb
sub
sahf
mov
stc
or
sarb
mov
popa
shl
xor
xchg
xchg
pop
cmpsb
ficompl
mov
jae
int3
sub
mov
mov
loop
div
enter
push
ljmp
test
in
loope
das
push
mov
ret
aad
fistl
cwtl
aaa
out
decb
es
call
push
scas
dec
jle
xchg
in
jl
jmp
mov
xor
jg
dec
call
or
adc
shll
rcr
xor
and
dec
sbb
negb
jg
cmp
fbld
xchg
cmc
mov
aam
sti
lods
jg
lea
std
iret
pop
jbe
pop
ret
sub
sbb
cld
cmp
pushl
sub
mov
adc
aas
mov
std
mov
incl
cld
push
push
add
mov
mov
dec
das
dec
lods
pushl
or
mov
rolb
xchg
push
je
leave
in
pushl
push
or
cmp
int
inc
js
shlb
push
and
cmpsl
std
push
pushl
jns
repnz
fwait
add
xchg
push
iret
call
pop
and
outsl
and
xorb
movsb
xchg
jne
loopne
inc
jmp
push
add
sub
lret
dec
jg
push
int
xchg
dec
lcall
sbb
dec
xor
shrl
sbb
andl
cmp
addps
cmc
rcrb
test
mov
loopne
push
adc
mov
jb
jge
or
out
jns
push
lcall
push
addr16
sbb
jo
mov
incl
cmp
pop
pop
inc
sbb
mov
loop
inc
int
and
add
scas
pop
cli
jmp
xor
idiv
jmp
xchg
mov
repz
dec
mov
jmp
lea
push
jl
iret
cmp
mov
ljmp
ljmp
repz
imul
push
mov
sub
adc
jg
lret
lods
call
inc
int3
scas
test
daa
nop
jae
daa
leave
inc
into
jecxz
adcb
mov
mov
mov
test
mov
mov
outsl
sub
call
aas
sti
in
clc
out
repnz
or
mov
mov
xor
mov
decl
aaa
in
sarb
in
loope
and
movsl
shl
pop
xchg
int3
mov
aad
daa
call
fstpl
add
mov
test
mov
cwtl
cld
loop
fs
gs
pushl
repz
cltd
xor
sti
or
push
jg
sbb
sub
or
ljmp
and
shl
inc
loope,pt
cmp
cmpsb
cmp
sbb
inc
decl
std
out
daa
loopne
imul
pop
dec
jae
mov
and
lcall
addr16
sub
popf
pop
mov
cmp
or
xor
jge
push
das
bound
mov
mov
adc
call
dec
xor
cli
test
inc
aaa
clc
jae
jl
insb
pop
inc
jg
addb
jmp
stos
inc
in
and
jge
inc
lds
das
adc
insl
idivb
push
pusha
dec
mov
fstps
jo
test
ljmp
ss
lret
fisubrl
call
jg
mov
shlb
hlt
ja
repnz
sahf
mov
pop
fmull
loop
lcall
icebp
call
lea
cli
mov
jno
dec
or
mov
add
pop
daa
clc
lcall
and
out
je
dec
lret
rolb
mov
into
pop
pop
mov
in
push
pushl
mov
or
fisttps
jae
jb
in
popa
pop
jl
lcall
fiadds
xor
xchg
cmpsb
pop
dec
jnp
push
jns
popf
jne
and
add
inc
mov
ljmp
dec
sbbb
sahf
sub
mov
dec
sbb
sbb
pop
mov
sub
jle
pop
cmpsl
jp
mov
xor
sbb
cli
fists
es
xchg
sar
cltd
aad
mov
orl
inc
lds
or
rclb
ds
pop
ljmp
repnz
pop
cmpl
hlt
ljmp
lock
jecxz
cmc
cmp
scas
push
add
outsl
bound
insb
mov
mov
int3
push
and
test
addr16
fisubl
fildll
xlat
push
inc
push
add
ss
out
getsec
push
or
and
push
push
mov
addr16
fisttps
arpl
dec
cmp
out
stos
xchg
pushl
xchg
xor
adc
aaa
sbb
mov
addr16
push
jnp
aad
std
lods
out
lods
cmpsb
lcall
and
lds
cld
and
and
lods
adc
ljmp
pop
push
in
pop
gs
jmp
inc
pushf
inc
shl
mov
mov
cltd
dec
xor
mov
sbb
push
adc
adc
movsl
gs
lds
jmp
and
clc
incl
cmpsl
pop
inc
fstpl
fsubs
subb
adc
repnz
or
aad
push
xchg
or
add
cmp
adc
jmp
scas
cmpl
xchg
lock
mov
loopne
pop
lret
dec
mov
cmp
sbbl
jecxz
shll
in
jbe
mov
jnp
shlb
adc
inc
inc
std
jmp
aas
and
sub
push
add
and
decl
cltd
adc
shr
lret
jne
add
xor
mov
in
xchg
fnsave
lods
jbe
shrb
call
cli
shrl
sahf
xor
fldl2e
enter
imul
xor
mov
mov
test
add
movsl
insb
jno
mov
jns,pn
shll
cli
xchg
add
fs
addb
iret
popa
pop
sub
fildll
xchg
jno
out
mov
inc
push
mov
lods
sub
mov
call
shr
hlt
pop
push
push
cmpsl
or
sbb
lods
out
imul
lea
xchg
and
ja
lds
and
and
data16
fisttps
push
cmp
lea
pusha
fwait
js
fbld
lret
sub
and
test
clc
push
call
nop
cmp
repnz
roll
out
sub
out
es
iret
loopne
sbb
insb
fsubrl
incl
xchg
inc
stos
roll
fsubrl
pop
nop
inc
xlat
bnd
mov
stos
and
mov
sbb
loop
fstl
jg
addr16
cmpb
lea
into
pushf
jmp
push
inc
mov
test
cmp
jno
ss
out
in
inc
outsb
dec
nop
mov
sti
sub
sti
jne
popf
add
cmpsl
gs
icebp
ljmp
std
in
dec
push
push
sub
and
jo
pop
fisubl
xchg
stc
sbb
pushl
movsb
out
mov
std
addr16
pop
loop
cwtl
int
insl
jnp
jb
fwait
sbb
sbb
ljmp
fs
std
rcrb
lock
dec
pop
inc
xchg
sub
enter
arpl
call
xlat
sti
out
dec
mov
lods
jmp
jle
jle
lahf
sbb
aad
hlt
sbb
mov
or
lods
fcompl
or
dec
ljmp
lock
movsb
dec
test
xlat
adc
pop
cmp
sbb
stc
inc
test
lea
ds
xchg
scas
ss
inc
out
decl
mov
clc
jnp
push
imul
dec
jns
pop
dec
mov
fadds
cmp
xlat
stc
and
ficomps
repz
lret
je
cmp
ljmp
xchg
movsl
or
sbb
push
pop
cmpsb
out
pop
movsl
out
adc
hlt
fbstp
pop
daa
addl
jnp
sub
push
and
decb
das
lcall
fists
push
or
shll
inc
mov
decl
push
cmp
popa
aas
arpl
push
xchg
out
mov
gs
jnp
inc
rol
arpl
imul
rol
std
orb
imul
fprem
mov
lahf
jp
pop
add
jmp
mov
dec
push
ret
pushf
or
lahf
loop
adc
enter
movsb
xchg
cmp
pop
cli
ficomps
mov
dec
loope
mov
dec
rcrl
scas
jno
imul
scas
ret
lds
cmp
adc
insb
int3
pop
sub
xchg
out
jo
test
push
mov
jmp
mov
incl
dec
mov
xchg
mov
call
jne
add
mov
data16
cmc
or
xlat
icebp
xchg
mov
hlt
mov
cli
out
cltd
mov
xchg
je
ljmp
ss
lds
mov
push
mov
lods
jp
xchg
ljmp
fldt
idiv
add
call
add
neg
test
cmp
rcr
imul
faddl
mov
dec
mov
add
mov
ficoml
push
cmc
dec
data16
or
lahf
xchg
mov
inc
cltd
fidivl
mov
sar
sbb
mov
inc
lcall
adcb
or
aad
dec
adc
les
sbb
mov
cmpsl
hlt
loope
mov
ret
iret
loope
inc
out
mov
push
adc
ljmp
adc
sbb
jo
jg
jmp
xor
fstl
cmp
je
sar
leave
icebp
xchg
push
in
cmp
mov
lret
les
cwtl
dec
cmpsb
add
jg
mov
jecxz
mov
outsb
outsb
imul
dec
cmpl
in
cltd
inc
cmpsl
imul
cmc
call
cs
clc
jo
jb
mov
std
call
popa
daa
dec
fstl
lds
jecxz
jmp
aam
sub
fisubrs
sub
mov
lcall
inc
sub
enter
outsl
gs
xchg
mov
fidivrl
dec
add
dec
testb
and
leave
mov
sub
or
shll
dec
outsl
cmc
jg
xor
sub
in
xlat
loopne
xorb
decl
xor
pop
cmpsl
push
out
sub
jl
iret
ljmp
clc
push
popa
je
fisubrl
push
scas
fimuls
mov
data16
sub
jle
push
loope
mov
into
cli
cmp
pop
insl
je
decl
jp
adc
adc
inc
insb
mov
pushf
arpl
sub
jbe
es
cld
decl
fidivrl
cmp
or
loop
push
push
mov
sbb
jg
sub
pop
push
sub
sbb
pop
pop
xor
ljmp
add
mov
in
mov
pop
fdivs
pop
mov
xor
xchg
xchg
fisttps
xor
jp
jg
pushl
daa
shlb
sbb
nop
mov
cmpb
aam
jbe
jmp
lahf
cs
cld
and
test
adc
or
sub
jae,pn
mov
lock
out
fsubr
test
sub
clc
in
add
pusha
shrl
aad
nop
or
fistpl
pop
xchg
push
test
les
dec
cld
decl
mov
sub
pop
aad
dec
mov
push
lock
call
push
ds
shlb
lcall
mov
cwtl
pop
pop
cmpsb
icebp
movsb
imul
out
inc
mov
pushf
sbb
clc
call
sahf
dec
sub
jge
dec
imul
cmp
decl
xchg
fisttps
out
enter
push
cmc
sbb
add
idivb
mov
add
and
mov
hlt
adc
inc
mov
inc
lods
lcall
in
push
fistpll
mov
pop
ret
insl
cwtl
scas
pop
insl
or
sbb
mov
ljmp
mov
pushl
ss
mov
add
scas
xchg
shll
inc
push
mov
jne
in
mov
jmp
jmp
sbb
out
push
sti
insl
dec
mov
or
arpl
incl
xchg
outsl
out
out
enter
outsb
or
jb
jns
inc
aas
or
mov
inc
or
lret
push
repz
fisttpl
xchg
sbb
fisubs
push
push
xchg
mov
mov
fldenv
js
aas
pop
negl
outsl
pop
incl
add
adc
inc
mov
mov
incl
in
and
and
repnz
ds
mov
pop
clc
jmp
mov
cmp
and
cmpsb
xchg
jl
xchg
mov
lods
aam
pop
sbb
in
pop
lods
pop
loopne
cmp
fdivrp
lcall
not
adc
ret
dec
and
adc
les
fucom
push
adc
orl
mov
out
dec
data16
addb
test
xor
andb
loopne
or
addb
dec
cld
mov
xor
ret
inc
and
repnz
notrack
inc
dec
mov
cmpb
pop
dec
ljmp
cmc
aam
xor
pop
push
stos
add
mov
pushl
fimull
xor
xchg
bound
scas
fwait
scas
push
test
pop
ljmp
add
aaa
mov
loop
sahf
xor
xchg
incl
incl
aas
outsb
fwait
add
test
or
mov
push
ljmp
mov
mov
mov
mov
insl
add
gs
repnz
into
mov
ljmp
inc
cmp
add
push
pop
push
mov
fcmovu
loope
jnp
mov
cli
decl
daa
repz
mov
orb
test
dec
mov
daa
andl
jmp
mov
adc
pop
test
or
leave
dec
daa
and
ljmp
cmp
iret
test
xchg
gs
mov
andl
shlb
pop
shlb
rcrb
ret
jno
out
mov
int
aad
lahf
xchg
out
mov
mov
insb
test
dec
jmp
imul
jb
push
inc
mov
or
fmuls
loopne
lcall
jns
imul
mov
sub
sub
xchg
xor
hlt
lcall
xor
push
inc
pop
in
push
push
lea
mov
popf
ja
push
sub
rol
xor
xlat
mov
in
nop
js
xchg
fmull
mov
mov
fcomi
mov
lds
and
pusha
es
stc
mov
lcall
loopne
mov
into
cmp
fldt
adc
jp
outsl
fdivrs
and
xchg
test
ljmp
fidivrs
fs
in
jle
aam
dec
andb
adc
ljmp
pop
cmp
jge
mov
push
mov
sbb
pushl
adc
gs
fsubrs
jo
repz
fistpll
orl
addr16
jbe
inc
xchg
int3
call
add
mov
adc
jae
jecxz
sub
pop
push
push
mov
pop
pop
sarl
test
pushl
in
das
mov
lock
push
jg
shr
jmp
in
xlat
std
insl
aad
cmpsb
insl
or
and
rcrl
scas
cs
mov
add
int
add
mov
daa
sbb
ds
sbb
add
inc
outsl
ljmp
lea
mov
pusha
gs
push
jo
and
add
mov
mov
or
mov
hlt
icebp
pop
push
cmp
sub
lock
rolb
push
std
or
inc
ljmp
loop
mov
cld
ret
push
jns
push
lods
sub
dec
cmc
push
xchg
stos
jg
hlt
cs
dec
or
pop
fsubr
xchg
jge
out
lock
aaa
sarb
jl
pushf
push
push
lock
inc
clac
mov
call
adcl
inc
pop
xchg
and
sbb
and
xor
lcall
outsb
mov
mov
dec
mov
lods
or
fld1
push
pushl
xchg
or
cwtl
fcoms
mov
mov
or
mov
icebp
pop
add
push
sub
push
add
mov
adc
push
and
jle
inc
xchg
test
imul
lahf
jb
mov
call
lock
mov
call
loop
dec
adc
stos
add
sbb
jbe
dec
repnz
lret
call
push
pop
gs
iret
ljmp
lock
ja
out
nop
shrl
mov
dec
adc
aam
jmp
xor
idivb
inc
rcr
and
jl
sti
pushf
fdivrp
lods
aaa
clc
xorb
ss
int3
leave
aad
add
jno
movsl
ds
mov
pop
sahf
sbb
jne
aas
test
mov
std
test
mov
inc
dec
iret
and
daa
dec
movl
ss
jmp
scas
mov
fmulp
push
pop
fsubp
mov
push
xor
cmp
ret
std
outsb
addr16
cmp
or
lahf
dec
pop
sarb
xchg
dec
mov
mov
push
std
jbe
mov
push
mov
dec
in
subl
ss
sub
cmpsl
test
mov
fs
lea
jmp
mov
xchg
add
adc
mov
pusha
push
mov
jmp
dec
sbb
jmp
adc
ljmp
pushl
mov
sub
ss
aam
js,pt
mov
and
adc
adc
lcall
scas
dec
jmp
jae
push
mov
into
jmp
ja
sub
push
in
mov
mov
movsb
xchg
cmp
mov
out
sarb
xchg
cli
add
int
lahf
dec
sbb
jo
adc
push
push
sbb
xchg
mov
push
or
decl
int
mov
mov
jnp
mov
sub
pushl
cltd
mov
ror
jg
add
adc
push
xchg
sbb
sti
push
cmp
sub
jnp
sarb
push
insb
lods
scas
or
mov
repz
xchg
je
push
call
and
shl
aas
data16
cmpsl
jp
mov
xchg
in
push
jmp
shl
jge
sti
inc
adc
push
sar
and
loopne
xchg
jae
sbb
aad
icebp
call
test
in
ja
sti
insb
daa
mov
and
popf
mov
push
cmp
sub
fidivl
cwtl
outsl
add
aam
and
sub
daa
sbb
test
fildll
popa
add
ss
loope
cmpsl
xor
jl
or
or
jge
jecxz
mov
ljmp
jg
fldl
cld
inc
nop
add
nop
pop
inc
leave
ret
pusha
pop
es
mov
and
add
negb
dec
sub
cltd
orb
addr16
mov
cmp
pop
add
or
mov
push
out
push
cmp
nop
fucomip
call
jecxz
fwait
sbb
jp
shll
xchg
add
add
popa
push
push
and
lcall
push
sub
addr16
sbb
push
dec
xor
ljmp
jg
jmp
cld
int
sub
sub
imul
insl
pop
cmp
push
xchg
pop
repz
cld
ljmp
add
push
loope
mov
dec
mov
popa
out
lret
call
es
call
add
mov
test
and
inc
dec
lock
icebp
clc
or
lcall
dec
fwait
shr
in
and
mov
aam
scas
arpl
cli
mov
jne
fisubrl
shr
jne
subb
mov
call
xor
xchg
mov
mov
push
cmpsl
pop
clc
push
and
les
pop
int
or
mov
cltd
add
icebp
shrb
adc
pushl
xchg
sbb
test
adc
mov
or
jae
fadd
test
push
mov
xor
mov
shll
push
jbe
push
fincstp
iret
xlat
lret
jno
or
jg
call
sub
je
int3
insl
xor
mov
xor
test
int
or
lcall
in
out
sub
push
push
or
roll
or
and
lods
jle
pop
daa
fisubs
lods
push
stos
mov
cmp
mov
popl
mov
adc
pop
push
inc
inc
pusha
mov
mov
sbb
test
incl
das
pop
adc
fcmovu
pop
jo
jmp
mov
pop
xor
xchg
clc
stc
call
decl
test
xchg
test
xchg
aaa
push
mov
out
add
aas
insl
test
cmp
mov
int3
jge
fsubl
cli
call
int
push
and
ljmp
ljmp
lcall
dec
repz
int
push
fcmovbe
sub
movsb
inc
sarl
lock
call
cli
lret
imul
fmul
and
sub
mov
jle
das
lds
mov
pushf
mov
fucomip
lcall
adc
rcr
or
arpl
sub
rcrb
jne
subb
gs
and
push
inc
cmpsb
cwtl
incb
rol
cmp
dec
push
imul
bound
cwtl
cld
or
dec
jns
push
mov
inc
stos
out
add
mov
add
dec
sarl
loop
ljmp
fwait
popa
pop
lods
test
or
daa
in
xor
call
sbb
xchg
in
mov
pushf
test
xchg
pop
mov
mov
jge
ds
lock
test
fiaddl
xchg
inc
ljmp
pop
je
scas
scas
mov
push
mov
ficoml
nop
xchg
std
decl
fucomip
ljmp
xchg
mov
push
mov
ds
lock
decl
pop
inc
adcl
pusha
mov
pop
imul
out
stc
add
call
out
pop
xchg
int
lods
jp
cmp
fsubrl
rolb
incl
push
sbb
pop
jp
rcrl
sub
movsl
lcall
jg
sbb
dec
dec
jne
xor
jl
inc
and
add
jg
call
outsb
ret
icebp
jbe
and
jmp
inc
jb
add
mov
and
add
lcall
pop
sub
xor
jmp
pop
scas
push
jg
dec
insl
cmpsb
test
and
inc
sub
adc
dec
xor
aaa
loopne
jno
and
lods
std
lcall
cmpsl
repz
in
sbb
xchg
jb
cmp
pushf
xlat
out
pop
outsl
icebp
push
push
push
stc
fcompl
lcall
mov
cmp
dec
daa
push
mov
scas
fchs
xchg
das
repnz
jne
lods
addb
cmp
inc
bound
and
mov
pop
mov
mov
dec
mov
jbe
xchg
add
cmp
in
rcll
stc
out
es
sbb
xor
gs
movsl
decl
outsl
pop
fstl
sarl
dec
sub
fsts
pop
cs
ljmp
jl
pop
jae
lahf
xchg
xor
les
daa
ss
ja
mov
je
push
mov
aam
push
and
jmp
lods
add
mov
clc
sbb
pop
mov
and
mov
std
jmp
shlb
pop
mov
jnp
call
loope
and
icebp
lea
inc
jg
push
sbb
push
mov
lcall
popa
outsb
in
roll
mov
lock
jo
daa
shlb
jg
jmp
xor
lock
xor
or
dec
sbb
inc
jne
test
call
arpl
jno
sbbl
sub
loopne
dec
push
or
std
xchg
shlb
jecxz
call
ljmp
lret
out
xor
mov
and
popa
lods
test
jb
jno
push
mov
stc
testl
push
loopne
jno
out
outsb
or
in
mov
add
or
push
and
inc
adc
gs
xchg
xor
push
int
testl
out
shlb
jg
rcl
pop
les
lahf
jge
sub
leave
sbb
std
fisubrl
cld
lret
leave
push
or
rcll
lods
gs
pop
lret
add
or
sbbl
idiv
jg
mov
add
divb
xchg
int
scas
jg
xor
inc
mov
push
lods
push
shrb
andl
lret
out
cmp
fadds
dec
jns
div
jnp
adc
outsl
in
cmp
clc
hlt
mov
pop
cmp
push
xchg
imul
pop
loopne
stos
pop
loop
orb
faddl
test
mov
testl
decl
inc
cmpsl
sub
dec
sub
xchg
lea
repz
cmpsl
scas
mov
adc
clc
xchg
jnp
jl
std
pop
pop
and
decl
aad
pushf
inc
out
bound
scas
inc
cmp
add
pusha
xchg
inc
xor
inc
mov
scas
jo
inc
lods
dec
mov
inc
push
icebp
and
movsb
lcall
pop
loopne
out
or
jns
inc
mov
sub
call
imul
mov
or
popf
ret
pop
xchg
es
cli
push
inc
std
std
xrelease
or
inc
push
test
pop
xor
sar
ljmp
or
arpl
out
icebp
into
ret
inc
push
into
cld
jmp
mov
outsl
icebp
dec
sbb
push
movsb
mov
or
test
xor
ljmp
mov
test
pushf
pop
inc
data16
sbbb
dec
fisubrs
rcrl
inc
aas
mov
stc
xchg
and
mov
popa
rcrb
and
sbb
xor
ja
mov
fadds
fst
test
out
mov
fucom
xor
ret
pop
cld
jmp
cmc
jmp
idivl
lret
aaa
dec
add
ljmp
icebp
mov
push
mov
fs
lcall
inc
out
dec
std
sar
dec
lret
rcrl
cli
fisttps
inc
mov
into
dec
test
lds
sbb
out
insb
xchg
mov
ljmp
nop
jb
sbb
scas
mov
mov
or
ljmp
adc
es
fwait
xchg
iret
push
pushl
or
aaa
sahf
in
xchg
mov
iret
inc
add
jns
jb
dec
adc
and
pop
inc
mov
idivl
add
fsubs
mov
repz
inc
icebp
mov
cmpb
push
gs
js
and
add
mov
xchg
sub
das
movsb
pop
out
aaa
xor
xchg
lods
repz
lahf
je
xchg
test
call
pushf
notb
cwtl
rol
push
jmp
inc
je
outsl
mov
cltd
sbb
mov
fsts
jg
movsb
jne
aaa
clc
call
ss
stos
js
iret
addr16
in
mov
mov
std
mov
imul
add
loop
lcall
sub
addr16
sub
add
jae
ficoml
cmp
test
call
xor
xchg
and
sbb
rorl
incl
mul
lahf
mov
adc
int3
es
push
maskmovq
negl
push
pop
mov
lcall
inc
or
pushl
mov
in
xor
xchg
mov
aas
sar
mov
jl
outsb
ljmp
or
dec
jbe
je
cmp
mov
loopne
and
mov
adc
lock
shlb
leave
jb
mov
mov
je
pop
int3
or
popf
xor
ljmp
fwait
push
stos
adc
shlb
or
imulb
loope
lret
insb
push
incl
pop
xchg
lahf
pop
pop
clc
das
lcall
call
in
in
outsb
in
dec
inc
pop
fistl
cli
pop
daa
in
adc
or
push
mov
sbb
adc
jmp
mov
mov
insb
mov
cmp
sbb
repnz
aaa
incb
leave
mov
int
or
bound
ljmp
bnd
dec
and
pop
jp
dec
xchg
xchg
dec
xchg
jg
in
outsl
pop
dec
aaa
dec
pop
sarl
loop
dec
mov
xor
mov
adc
out
and
jp
xchg
mov
jg
mov
or
fucomip
into
jns
test
stc
xor
lahf
add
out
test
loop
jecxz
ud0
das
add
popf
push
sub
xor
insl
push
stos
adc
pop
dec
je
lcall
mov
dec
in
jle
dec
out
cmp
test
push
pushf
cwtl
jmp
in
and
mov
dec
cltd
repnz
mov
icebp
repz
adc
leave
mov
in
mov
mov
loope
call
test
addr16
insl
mov
dec
int
pop
adc
push
lock
jl
gs
xchg
fnstsw
add
cmpsb
pop
cwtl
jmp
dec
adc
xchg
loop
xorb
sub
xor
shlb
jg
pop
andb
xchg
jge
aad
pop
push
decl
shrb
in
fsubl
popa
out
pop
push
lcall
repz
hlt
fbstp
shrb
std
xor
insb
sbb
fisubrs
cmp
sub
mov
icebp
in
je
add
mov
js
outsl
ljmp
xchg
cmp
and
lret
jl
arpl
push
xchg
lea
push
pop
mov
fildl
xchg
ss
and
test
and
mov
das
fsubr
sub
ret
jmp
repnz
sub
or
add
fsubl
repnz
pop
cs
pop
pop
std
call
mov
aaa
add
sbb
adc
mov
pop
call
sub
mov
sbb
mov
pop
call
jp
cmpl
in
mov
ljmp
js
mov
jno
loope
xchg
pop
mov
sub
and
sub
popf
pusha
adcb
cld
sbb
repnz
decl
sbb
dec
arpl
xchg
cmp
or
aam
xchg
into
adc
decl
nop
cld
stos
leave
cs
inc
rcr
out
hlt
add
pusha
xchg
sbb
jge
mov
or
mov
mov
jp
dec
adc
sahf
adc
fs
filds
cli
jg
inc
cmp
sbb
cli
dec
add
adc
xchg
notb
and
jns
aaa
dec
fwait
incl
jmp
cmp
inc
insl
and
negl
push
cmc
jg
push
sub
jo
jl
sbb
add
pop
xchg
mov
jmp
xorl
xchg
or
and
jno
ljmp
lock
popf
sbb
rol
and
movl
ljmp
and
out
pop
dec
xchg
xchg
hlt
or
sbb
push
cmpsl
lods
sub
mov
mov
js
cmpsb
xlat
xchg
test
stos
lds
inc
aaa
hlt
mov
jp
lahf
inc
mov
inc
cld
call
dec
mov
stc
mov
sti
xor
or
pop
mov
mov
and
sbb
fists
sti
add
xchg
ja
imull
inc
cltd
pop
popa
xchg
push
in
push
test
idiv
jle
push
or
xor
mov
pop
adc
ds
fidivl
jecxz
pop
pop
sub
or
dec
test
push
mov
add
push
sbb
jle
mov
xchg
lea
xor
push
addb
sub
or
jg
and
imul
fucomip
mov
cld
mov
sar
pop
mov
cmpl
lret
decl
sub
js
fistpl
or
aaa
daa
inc
rcrb
pop
push
pop
repnz
or
lds
call
dec
push
popf
ljmp
cltd
ljmp
xor
clc
lods
incb
push
testl
dec
push
cld
mov
lods
movsb
lea
sub
lea
xchg
test
ljmp
adc
xor
xchg
push
xchg
je
call
pop
xchg
mov
mov
ja
sar
jmp
lods
pop
insb
sbb
mov
mov
shrl
adc
jne
test
push
push
nop
stos
out
jle
mov
mov
push
xor
fs
or
loop
inc
in
add
sbb
fdiv
add
mov
mov
insb
jbe
std
test
sub
incl
js
push
mov
sbb
lret
fs
jl
lods
sti
test
mov
xchg
fwait
sub
jns
cld
aad
daa
mov
add
jg
lahf
dec
inc
push
push
dec
ret
loope
mov
bound
mov
insb
insl
lock
or
out
andb
xchg
cmp
decl
pop
je
or
je
in
out
mov
incb
jg
das
add
mov
pop
jno
imul
push
dec
pop
jp
and
movsl
xor
jno
xor
nop
push
popf
and
sbb
xor
jg
or
dec
sbb
cld
inc
add
push
mov
lret
xor
popa
insl
pop
pusha
mov
add
sbb
out
int3
cld
fwait
adc
push
push
pushf
fwait
das
inc
popa
push
jmp
out
sbb
enter
mov
xor
outsl
cmp
mov
fwait
sbb
pop
dec
fwait
fwait
call
xor
incl
mov
cwtl
cvttps2pi
je
scas
mov
addr16
es
decl
decb
sub
in
ds
jp
add
dec
popf
pushl
cli
stos
pop
ds
scas
mul
jle
adc
sub
imul
lock
cmp
or
jno
and
ret
fists
idiv
pop
fcomip
xchg
fcmovu
sub
lock
out
into
xor
sub
pop
insl
pop
jns
push
inc
scas
orb
add
movsb
ss
xchg
or
adc
or
inc
enter
shrb
cmc
lcall
fnstenv
fisubrl
loope
movsl
mov
jbe
aad
xchg
incl
mov
addr16
ret
push
xchg
inc
mov
adc
movsl
imulb
shrb
mov
cmp
mov
ds
fistpll
pop
cli
cmpb
not
jge
addl
add
push
adc
gs
cmc
mov
std
or
or
add
mov
mov
mov
stos
mov
adc
andl
sbb
sbb
cmpb
lcall
aam
xlat
clc
xchg
lds
or
xor
ja
dec
pop
iret
lea
pusha
cmp
in
in
xor
push
std
decl
and
es
in
js
mov
fisttpl
sub
movsl
fwait
hlt
outsl
sbb
fs
decl
aas
lock
shlb
cmp
inc
dec
pushl
pusha
repnz
arpl
cltd
push
int3
sub
mov
xor
inc
rolb
scas
loop
mov
sbb
inc
push
mov
int3
push
adcb
adc
sar
xchg
mov
jge
mov
jmp
inc
cmc
mov
dec
xchg
mov
adc
push
popl
jno
in
push
and
xlat
decl
jmp
dec
inc
jne
movsb
andb
and
add
inc
imul
jmp
aad
push
outsl
cmc
lahf
cmc
cmp
mov
xorl
cld
call
jl
mov
push
pop
lods
sbb
add
das
xor
fs
mov
dec
out
call
lea
mov
sbb
lea
push
dec
fcmove
cmpsl
or
jl
outsb
cmp
call
adc
popa
xchg
dec
pop
int3
pop
bound
jmp
mov
outsl
inc
xchg
jecxz
jmp
imul
xchg
ret
jae
and
xchg
jle
add
and
mov
adc
mov
xor
jmp
ds
push
lea
dec
xchg
scas
mov
lea
add
or
pop
das
add
adc
sbb
mov
pushl
fdivr
push
sti
aad
inc
push
cltd
gs
popa
jmp
incl
mov
icebp
das
pop
mov
or
push
sub
test
cmp
push
xchg
out
push
add
mov
push
or
push
jg
pop
push
pusha
sub
and
pop
ss
pop
mov
ljmp
or
sbb
push
outsl
sbb
inc
fistpll
xor
mov
cmpsl
mov
add
jg
stc
dec
or
pop
add
idivb
lcall
out
pusha
clc
jg
mov
ljmp
mov
pop
lcall
std
pop
jnp
or
faddl
in
adc
outsl
mov
decl
sbb
add
aaa
clc
push
loop
sbbb
pushl
cmp
sbb
adc
adc
out
pop
int
pop
aas
dec
fsubrl
rclb
inc
lcall
test
sub
aaa
fwait
test
jb
and
jae
pop
cmp
xor
cld
jb
adcl
popa
in
pop
rclb
add
inc
or
fbstp
insl
std
incl
xor
mov
mov
das
xlat
scas
push
xor
lcall
shrl
enter
or
into
cmp
cmp
or
pushl
or
mov
gs
xchg
jg
sbb
xchg
nop
dec
inc
shlb
or
mov
mov
xchg
adc
adcb
outsl
mov
xchg
scas
aam
jge
mov
ret
jae
sahf
mov
cli
mov
pop
dec
bound
add
or
sub
call
int3
sub
cmp
mov
fidivs
add
inc
dec
mov
fbstp
cmp
lret
xchg
dec
push
jnp
add
lcall
fdivs
js
cmp
dec
std
add
mov
mov
add
or
sbb
call
jmp
adc
mov
push
xorl
jmp
hlt
test
cltd
jo
mov
add
aas
sbb
jecxz
scas
or
lea
imul
jns
pop
addr16
xchg
adc
or
or
insl
jae
jecxz
sub
rcll
outsb
and
xchg
mov
das
jp
ljmp
std
jmp
iret
mov
sub
pushw
sahf
dec
dec
call
decl
ficoms
hlt
out
jne
aaa
pop
xchg
out
out
push
pop
enter
roll
push
or
jno
add
cltd
scas
push
sbb
or
lcall
adcl
ss
fstpt
xchg
loopne
or
ja
push
jb
jg
mov
jbe
dec
adc
cmp
inc
xor
dec
or
shrl
sbbl
push
into
push
pop
daa
dec
lods
lods
sbb
pop
iret
xor
adc
push
addl
dec
scas
int
or
jge
cmp
cli
jmp
scas
sbb
mov
and
fucomi
inc
xor
xchg
jmp
mov
test
jno
fwait
decl
pop
jno
dec
out
mov
fdivr
sbb
push
mov
xchg
dec
sti
idiv
incl
jnp
pop
addl
repnz
or
dec
std
push
jecxz
inc
stos
and
jg
stos
jmp
gs
adc
ljmp
cmp
push
dec
and
sub
into
loop
adc
mov
dec
call
das
cld
test
imul
or
pusha
ss
ret
xchg
cs
mov
mov
repnz
xchg
mov
or
lods
sub
leave
mov
roll
decl
es
dec
lea
xchg
ja
jnp
incl
data16
inc
and
subb
loopne
jg
and
in
ljmp
jb
aad
lock
cld
lcall
repnz
jl
xchg
pop
mov
inc
xchg
xchg
fnstsw
jae
movsl
push
jbe
movsl
pop
push
push
cmpsl
cmpsl
outsl
lea
flds
xchg
jmp
in
rcrb
ljmp
inc
pop
cmpsl
test
fsubrp
inc
imul
incb
jnp
les
aaa
xor
mov
push
cltd
jnp
sbb
mov
push
insl
sbb
mov
lcall
jecxz
shlb
test
jne
pusha
push
cld
adc
incl
xchg
insl
movsb
stc
xchg
adc
adc
je
mov
mov
testb
fdivrl
and
outsl
hlt
lcall
out
pop
imul
mov
cmp
jno
pushl
inc
xor
jle
mov
insb
mov
inc
je
push
les
popf
jne
xchg
clc
push
mov
fyl2xp1
fidivl
sarl
enter
and
pushl
mov
pop
xor
test
add
mov
std
inc
mov
pushf
or
arpl
xor
test
inc
cs
stos
pop
outsl
test
fistl
lcall
or
pand
or
ss
push
aam
xlat
aam
call
std
popf
movsl
add
adc
loopne
xor
jns
inc
dec
dec
cli
pushl
ljmp
fisttpl
js
aad
stos
push
daa
adc
jae
dec
cmp
pop
sub
xchg
insl
mov
cmp
call
inc
mov
inc
ds
mov
fnstcw
xor
out
mov
mov
cs
mov
pop
nop
xor
sar
or
mov
movl
lock
or
sub
fstps
push
cltd
mov
repnz
fdivr
lcall
xor
xor
adc
add
inc
push
add
fmul
pop
je
stos
clc
xor
call
popa
jl
inc
dec
andb
sub
cmp
inc
int
stc
movl
pop
incl
nop
mov
mov
popa
negb
aad
fucomi
fsubs
sub
ss
sbb
incl
mov
mov
mov
dec
push
mov
mov
mov
cmpsb
loope
dec
test
lock
push
inc
sub
push
jl
xchg
lods
mov
test
dec
imul
ficoml
popf
dec
jo
fistpll
in
dec
andl
cmp
sub
ja
xor
imul
xchg
cmp
shll
movsl
pop
dec
loope
mov
jo
insl
or
or
rcl
enter
movsl
sub
pushf
sub
push
imul
cli
or
dec
in
call
clc
mov
imul
push
or
pop
pop
and
in
ljmp
inc
in
rcll
xchg
or
int
push
outsl
rolb
add
incl
in
mov
jns
stos
jno
fnstsw
sbb
ret
aaa
clc
jmp
or
imul
cmp
push
int3
es
leave
out
cmpsb
jg
ljmp
js
cmp
repz
es
orb
out
xor
lcall
incl
mov
test
lahf
popl
ljmp
icebp
jmp
mov
sbb
mov
mov
add
sbb
sbb
pushl
lcall
aad
sar
pushl
and
mov
push
sar
bound
movaps
jmp
iret
call
jbe
jp
mov
jle
les
sahf
and
mov
aad
dec
xor
push
pop
incl
leave
cmp
imul
pop
ds
push
cmc
push
fbstp
xor
aad
mov
aaa
in
cmc
ljmp
enter
pop
sbb
cmp
sub
xor
outsl
add
cs
mov
cmpsl
inc
loopne
xor
mov
repnz
gs
or
movsb
ret
jp
pop
test
ret
mov
clc
push
das
lock
sbb
xchg
jmp
sub
xchg
sbb
incl
or
cltd
or
jb
cmp
mov
dec
dec
insl
push
ljmp
xor
insl
add
inc
inc
enter
or
dec
lods
mov
push
orb
loopne
shl
stos
push
and
out
push
dec
mov
les
loopne
outsl
push
int
je
push
inc
in
mov
add
lcall
ljmp
inc
add
repnz
call
add
gs
push
insb
std
pop
or
or
insb
lret
lods
push
jae
dec
lcall
xchg
xchg
lret
cmp
fisubl
dec
mov
incl
popf
or
mov
movsb
sbbl
loope
jne
pop
push
cmpsl
lret
outsb
jmp
incl
push
rcl
aam
mov
sub
mov
and
pop
sbb
pop
and
inc
test
inc
or
xchg
mov
cmp
mov
enter
push
cmpsl
lcall
lds
popa
mov
dec
push
cld
push
push
sub
jbe
and
push
inc
rclb
mov
push
mov
xchg
enter
andl
mov
push
rol
jns
icebp
mov
jle
andl
loop
sbb
mov
es
xor
add
ret
jno
sar
pushl
sbb
jns
fwait
inc
inc
iret
inc
dec
ja
out
add
decl
add
imul
enter
xor
stc
cmp
test
push
enter
jb
outsb
ror
jg
xlat
add
add
push
pcmpeqb
mov
mulb
mov
push
pop
icebp
decl
aas
dec
sub
loope
data16
pusha
and
in
and
sarl
push
std
subb
pushl
inc
aad
xchg
mov
bound
pop
adc
jmp
test
inc
xchg
xchg
sbb
fsts
inc
aam
repnz
pop
and
add
outsl
rclb
inc
mov
shl
lock
sub
out
inc
sub
in
xchg
and
push
cld
call
sbb
add
in
sbb
cmpsb
cmp
xor
fldcw
sbb
lcall
jge
push
fucomp
mov
cmc
or
mov
xor
rcr
sub
aaa
out
inc
mov
out
mov
add
and
lcall
jae
cmpsb
jb
addl
repz
push
cmp
adc
arpl
das
insb
jmp
cmp
cwtl
sbb
pop
jbe
dec
sbb
pushl
adc
pop
movsb
xchg
jge
pusha
stos
mov
sahf
jge
sbb
and
inc
jg
loopne
jg
shrl
sub
xchg
test
jmp
mov
adc
das
or
in
in
adc
or
ficompl
inc
cld
and
sbb
incl
in
out
loope
out
cmpsl
enter
lret
test
fiadds
mov
inc
dec
push
arpl
dec
loope
mov
jp
mov
std
das
cmc
call
out
lods
mov
out
mov
fbstp
sbb
lcall
or
and
inc
repnz
rcrb
clc
ljmp
jne
adc
loope
addl
push
and
sub
adc
and
call
cli
add
pushw
popf
add
test
and
decl
in
icebp
jmp
leave
test
fcoml
mov
fdivrl
sbb
sbb
movsb
pop
insl
adc
mov
ss
fcompl
mov
pop
stos
mov
stos
push
mov
out
out
add
cs
jg
jmp
pop
hlt
rcrl
sahf
dec
insl
xor
inc
mov
jo
test
sbb
incl
mov
inc
cld
push
push
leave
repz
jl
xor
sub
decl
pop
ljmp
sub
and
push
rclb
dec
mov
pusha
mov
outsb
test
sbbb
std
cli
or
dec
pop
outsb
fistps
cmp
pop
jo
xor
xchg
push
cltd
adc
jg
lcall
and
xchg
shrl
rcr
pop
mov
mov
add
jg
mov
dec
sbb
cmpsb
daa
adc
fidivrs
testl
ljmp
xlat
adc
jg
popa
mov
pop
rcrb
lock
mov
outsl
cmc
mov
jno
or
pop
js
mov
test
lcall
mov
pop
orb
mov
je
sbb
fucomip
jmp
mov
fmul
mov
jae
and
xchg
sbb
decl
push
ja
into
fcmovne
ret
aas
jmp
jbe
rorl
aaa
xchg
or
divb
aam
movsl
aad
les
mov
int3
jo
ljmp
sub
jmp
jp
out
stc
es
sub
jne
jns
sbb
jl
jbe
sbb
jnp
mull
out
jnp
pop
jge
push
call
or
jmp
int3
inc
cmp
test
das
mov
sub
rcl
rolb
add
pop
jbe
test
ljmp
int
ds
xor
out
lar
daa
cmp
out
ret
sub
imul
pop
into
mov
pushl
lods
adc
inc
clc
sbb
or
and
or
in
xor
call
mov
in
mov
jp
sbb
je
js
out
xchg
pusha
insb
xchg
mov
hlt
fsubrs
stos
ret
dec
xchg
mov
dec
hlt
test
lcall
jecxz
ljmp
mov
addr16
add
pusha
mov
sahf
and
pop
loopne
xchg
push
mov
pop
lods
pop
sub
and
or
rcll
sahf
xchg
xchg
out
mov
xchg
ljmp
out
cli
jnp
sub
addl
mov
mov
mov
xchg
mov
lcall
add
and
sub
loope
dec
cld
lods
das
push
push
outsl
je
ljmp
sbb
cld
insl
adc
mov
mov
rolb
stos
dec
aad
out
and
pop
aam
fnstcw
testb
sbb
mov
xor
xor
lcall
cs
jg
cbtw
stc
int
movsl
sbb
lods
xchg
jle
jg
pop
test
js
pop
push
ds
cld
jnp
les
incl
jmp
jbe
roll
nop
mov
push
mov
adc
pushl
lret
jl
rcrb
jne
sub
rolb
pop
das
push
or
pop
sub
add
mov
hlt
incl
test
mov
sbb
mov
leave
jmp
decl
or
pop
int3
mov
scas
arpl
push
je
lahf
into
lods
rcrb
and
pop
mov
jg
rclb
out
in
add
ljmp
sub
imul
push
aaa
mov
pushf
das
lcall
sbb
imul
mov
gs
cmpsl
push
fldcw
and
in
add
sti
stos
nop
mov
sbb
ret
dec
jns
jl
fisubs
lahf
mov
xlat
cmc
push
push
ljmp
push
xor
lods
aaa
add
sub
xor
mov
in
sub
enter
popa
imul
push
push
lcall
test
daa
add
jnp
loopne
lcall
xchg
mov
mov
sub
fwait
loopne
std
inc
call
insb
in
js
sahf
and
cmc
outsb
daa
lock
fwait
insl
jl
orb
paddq
mov
ja
xchg
push
loop
decl
data16
psubsb
inc
cli
fwait
inc
jmp
out
xchg
mov
pushl
pushf
adc
or
xchg
fwait
sbb
movsl
cmp
or
jo
lods
mov
push
int
cmp
fwait
lods
mov
insb
sahf
xor
and
insl
jp
pop
sub
inc
pop
ljmp
adc
bound
sbb
or
sbb
lods
call
xchg
dec
cltd
es
lahf
stc
cltd
add
js
adc
cmc
incl
mov
mov
pop
sbb
call
outsl
jle
call
cmp
sbb
inc
add
mov
call
adc
std
iret
sbb
or
lcall
in
fnstcw
dec
fwait
fs
rcrl
cmc
lea
fucomi
inc
sahf
cmp
inc
dec
pop
outsb
xlat
xor
pop
adc
incl
fsubrs
iret
leave
mov
sub
adc
sbb
mov
mov
and
xor
cld
call
fld1
outsl
negb
popf
mov
subb
jne
inc
testl
into
jae
lcall
jle
add
ja
movsl
lds
gs
cwtl
xchg
lock
pushl
test
loop
movsb
leave
dec
dec
test
cs
xchg
or
ja
incl
pushl
pusha
daa
push
mov
push
mov
stc
pushf
icebp
inc
push
push
mov
ljmp
pop
xor
mov
sub
aam
icebp
divb
xchg
repnz
cli
pushl
mov
xchg
outsl
or
rcll
add
ss
pushl
lret
xor
jo
out
fstpt
insb
leave
jnp
jg
sbb
movb
in
mov
lret
pusha
pop
mov
mov
hlt
addr16
cmpsb
sub
mov
mov
les
cli
xchg
incb
pop
dec
test
out
sbb
jno
out
pop
cli
mov
in
int3
push
push
mov
xor
hlt
mov
call
int3
fdivl
cld
loop
leave
push
psubusb
data16
pop
pop
adc
cmpsb
xchg
sbb
nop
mov
jg
lahf
jg
jl
and
out
or
jne
out
test
cld
and
std
outsl
pop
cmp
cmp
imul
stos
mov
fucomip
testb
fs
push
mov
leave
jle
dec
mov
jmp
lcall
and
cmovno
shr
cld
add
test
pop
cmp
xchg
and
jmp
lock
repnz
idiv
movsl
incl
xchg
sbb
lods
ret
inc
sub
test
pop
cld
in
inc
aad
test
mov
mov
add
inc
call
icebp
pop
fistps
inc
push
inc
and
rolb
out
out
add
jmp
dec
das
xor
leave
in
mov
dec
out
out
mov
xchg
pop
ds
lds
rcr
fistpll
pop
mov
cmc
mov
imulb
mov
es
jmp
ror
movsb
outsl
clc
jg
fistl
push
les
insb
dec
add
notb
je
cltd
andps
xchg
sti
or
mov
inc
xor
mov
call
or
sarl
loopne,pn
popa
mov
div
fnstcw
and
icebp
hlt
and
xchg
pop
mov
incl
push
mov
jg
xchg
repz
fdivrl
das
pop
pop
out
ss
jmp
add
testb
stc
jg
rcl
push
test
jmp
movsb
mov
stc
shr
out
or
fimull
and
cmp
rolb
rorb
dec
lods
inc
loop
xchg
pop
dec
popf
add
or
int3
push
mov
xchg
clc
jno
pop
imul
mov
addr16
cmp
loope
mov
mov
pop
adc
clc
lea
push
outsl
cmp
pop
inc
fnstsw
xor
push
test
adc
jge
inc
cli
ljmp
fidivl
push
mov
inc
clc
call
jge
jl
xor
cltd
aam
and
push
fistps
inc
or
sbb
and
push
mov
push
pop
adc
test
mov
push
out
jno
lret
out
pop
shll
or
outsl
fs
pop
sbb
cltd
jmp
inc
cmp
lcall
cmp
xchg
mov
cmp
mov
pop
mov
adc
jns
adc
lcall
mov
or
mov
sbb
mov
movsl
out
adc
add
sar
outsl
hlt
decl
pusha
push
ja
dec
mov
dec
inc
in
mov
sbb
rcll
mov
xor
mov
pop
stos
xchg
xor
adc
out
xor
subb
fisttps
adc
xchg
adc
lret
dec
fdivr
mov
outsb
ja
aas
movsl
inc
cs
clc
push
dec
cmp
notb
adc
sub
repnz
mov
notb
mov
gs
adc
aas
std
mov
push
sub
xchg
test
add
lds
fidivs
ljmp
push
mov
pop
mov
jp
je
inc
or
pop
mov
pop
mov
push
xchg
cmp
sti
sbb
adc
inc
lock
jns
lcall
in
jbe
ja
stos
aad
decl
or
sub
stc
sub
ljmp
jae
cmpsl
movsl
test
ljmp
je
mov
dec
addr16
jmp
and
ljmp
inc
call
cli
pop
clc
das
aad
xchg
mov
stc
lahf
imul
pop
out
pop
testb
jmp
insb
mov
xor
outsl
loopne
aam
pushl
mov
test
je
fldenv
or
adc
std
jb,pn
jmp
decl
xor
rcll
push
push
popa
clc
inc
push
dec
push
mov
ss
mov
aaa
xor
mov
cmp
jmp
into
xchg
test
add
repz
lock
dec
outsb
jbe
daa
inc
fadd
dec
call
js
push
jae
or
adc
lock
pop
ljmp
xor
mov
or
test
fisttpl
inc
sub
decl
and
xchg
js
pop
aad
xchg
pop
xchg
and
fistl
je
sar
jg
jno
in
shlb
push
nop
in
hlt
icebp
into
xchg
icebp
mov
decl
lods
cmc
int3
xchg
pop
push
cld
out
mov
ret
iret
and
cmp
fucomip
decl
mov
mov
gs
pusha
divl
das
icebp
adc
ljmp
mov
pop
push
das
aam
cmp
inc
outsl
xor
jle
inc
push
dec
jmp
mov
call
mov
imul
and
cld
sbb
sub
jg
test
fincstp
mov
mov
test
fsts
decl
adc
mov
sbb
sub
out
hlt
or
in
and
jmp
mov
repz
sub
cmp
imul
push
pop
cmp
sbb
loop
fidivrs
pusha
int
lret
cmp
out
and
outsl
xchg
out
loopne
in
aad
xlat
imul
push
and
mov
sar
test
imul
cwtl
daa
dec
sub
fcom
shll
jb
imul
icebp
jo
sbb
cltd
shrb
push
mov
mov
mov
jns
jg
jecxz
inc
and
std
lock
les
mov
adc
clc
outsl
std
jmp
sbb
xchg
add
and
xor
ret
into
mov
aaa
clc
jmp
mov
test
sbb
lods
in
in
add
adc
inc
in
mov
clc
lcall
out
cmp
xchg
lret
push
popa
pushf
int3
hlt
in
and
hlt
and
movsl
xchg
xor
pop
sub
call
ljmp
outsl
lcall
in
push
inc
mov
pushl
mov
push
cmp
inc
arpl
pxor
dec
or
addb
fstps
loopne
push
test
lods
out
add
pushl
sbb
fs
jns
mov
pop
sub
jecxz
std
in
lods
fstps
jo
leave
mov
fcomps
and
push
add
loope
adcb
pop
xchg
push
sbb
pop
nop
rol
fdivrs
jmp
rcll
sti
add
sub
enter
ss
in
jmp
dec
sarb
in
imul
add
mov
add
xchg
ljmp
pop
mov
orl
sbb
loopne
cwtl
lock
cmc
mov
mov
loopne
inc
and
lods
mov
mov
xor
dec
stos
adc
add
rorb
imul
call
cli
fimull
shll
cli
scas
cmp
fsubrl
push
inc
jnp
xchg
mov
or
mov
fsubrl
adc
in
push
js
mov
and
inc
adc
popa
ficompl
mov
lcall
mov
das
je
jo
add
out
lods
sbb
jg
popa
xor
add
out
ds
pop
enter
sbb
lock
cli
and
daa
sahf
lret
dec
ficomps
decl
mov
fisubrl
mov
cmp
mov
scas
mov
ss
mov
cmc
mov
rclb
mov
xchg
mov
xorl
out
inc
in
je
js
push
into
in
int
lods
fwait
mov
aas
shl
push
pop
aad
cwtl
mov
fucomip
outsl
jno
cli
jl
dec
hlt
nop
xchg
push
leave
rorl
add
lods
bound
dec
dec
stc
test
cmp
decb
decl
test
jnp
sub
aas
outsb
aad
insb
cmp
sbb
pop
inc
cld
jae
loopne
cmp
sub
or
jge
cmc
pushl
add
in
clc
clc
inc
inc
or
mov
test
rcrl
mov
push
inc
xchg
and
fwait
lea
xor
adc
and
jmp
hlt
ljmp
xor
ds
fdiv
xchg
lahf
out
jns
pushl
jle
pop
sbb
jne
fnsave
push
inc
js
rorl
xchg
inc
adc
pop
mov
xor
xor
hlt
dec
mov
or
fnop
pushf
repnz
repz
mov
cli
fdivrl
jg
jg
jle
insb
fimull
cli
jle
push
adc
bound
daa
dec
clc
mov
jg
out
loop
xchg
mov
popa
es
cmp
mull
cmp
mov
inc
pshufw
push
mov
and
sbb
fldt
clc
mov
repz
sub
mov
mov
lcall
inc
mov
mov
sub
jge
imul
mov
ljmp
icebp
and
sub
xor
pop
cmpsl
int3
jb
das
pop
jecxz
nop
test
or
inc
call
push
call
in
sub
lock
add
jp
out
sbb
fs
sub
cwtl
inc
sbb
add
and
add
dec
aad
in
dec
adc
and
dec
add
int
or
ficomps
xor
pushl
testl
jle
subb
ljmp
dec
call
dec
add
shlb
jmp
add
sbb
push
enter
jno
movsb
jp
lds
xor
sub
das
aam
mov
mov
incl
fsub
fs
push
sbb
mov
pop
clc
dec
cmc
dec
xor
xlat
out
sub
in
es
xlat
nop
sti
fcomip
lret
sar
call
add
sub
es
cs
pop
leave
clc
cmc
pop
sbb
mov
lock
movsb
ds
jg
ret
out
adc
xchg
cmp
loop
mov
in
lods
in
dec
std
gs
jnp
addb
jae
stos
xchg
hlt
mov
call
test
data16
ja,pt
jns
push
addl
incl
push
jae
mov
iret
lods
jnp
sbb
cmpsb
fmull
js
jmp
fstps
int3
lret
outsl
lock
movsl
subb
mov
sbb
call
das
hlt
jg
xor
sbb
in
scas
les
std
mov
xchg
rcrl
cld
lea
rcrb
mov
ret
vpmacsdqh
cli
ljmp
mov
test
mov
test
int
clc
jne
adc
mov
sar
imul
ljmp
mov
inc
loop
subl
sar
popf
mov
lock
jl
add
jg
rol
jne
jge
inc
das
hlt
pop
scas
and
push
int
xor
incl
lcall
xor
and
and
mov
in
xchg
or
inc
add
adcl
scas
inc
clc
shlb
jg
clc
adc
mov
jg
and
adc
inc
out
jne
roll
ljmp
lea
cli
call
mov
mov
je
jmp
pushl
fs
xchg
mov
loopne
adc
cmp
push
rclb
decl
stos
or
jae
push
ljmp
push
movsb
sbb
fstps
jle
stos
mov
lods
movsb
ljmp
cmp
lcall
xlat
clc
stc
mov
lret
add
call
jno
pop
push
push
inc
adc
mov
lods
test
iret
stos
movsl
xlat
leave
call
cmpsb
inc
cli
ljmp
icebp
adc
aaa
ljmp
stos
mov
inc
or
and
js
ljmp
push
sub
pop
stos
lcall
mov
ud0
pushl
push
cli
cmp
cmpsl
into
in
bound
ror
insb
test
jmp
mov
imul
shrl
cltd
sahf
outsb
and
and
lret
sub
test
mov
and
incl
push
aam
mov
in
and
movsl
pop
sbb
push
mov
loopne
lret
jnp
mov
adc
adc
scas
out
or
daa
int
sar
mov
sub
mov
jge
pushl
loopne
adc
mov
mov
inc
mov
xorl
enter
or
xchg
or
lcall
jecxz
xchg
inc
fildll
cmpsb
mov
sbb
mov
jnp
push
xchg
cmp
vmovntpd
sbb
leave
popf
ljmp
repnz
ljmp
ja
add
test
xlat
fidivrs
repnz
scas
ljmp
imul
xchg
stos
clc
mov
inc
xchg
or
xor
aaa
clc
cmp
and
mov
and
jecxz
movsl
pop
push
scas
inc
stc
fildll
subb
ss
mov
fcmovbe
cwtl
mov
push
mov
incl
push
fbstp
and
pop
rol
lea
and
lret
sahf
je
inc
pop
adc
inc
jecxz
movsb
es
jg
jmp
cmpsb
das
ljmp
jbe
adc
sbb
leave
pop
lods
sub
dec
sti
outsl
or
rcrl
in
popf
lds
imul
and
pop
jmp
mov
or
mov
mov
fucomip
xchg
adc
les
lock
dec
or
and
outsl
fcmovne
or
repnz
or
pushf
add
or
jg
jg
aam
inc
jbe
clc
mov
sahf
imul
sbb
lcall
push
pop
xchg
sbb
fucomip
and
sbb
in
fistpll
fildl
lret
insb
and
cltd
sub
inc
hlt
icebp
dec
dec
lcall
jno
xchg
mov
ljmp
rcll
lea
mov
lcall
call
dec
lods
cmp
push
push
add
sub
xchg
daa
fcomi
clc
incl
popf
pop
sub
adc
sbb
adcb
ljmp
lcall
decl
mov
loopne
sarl
push
add
xchg
mov
fsts
std
cmp
addr16
or
pop
stos
xor
fmul
insl
test
shll
cmpsl
pop
sub
fldcw
mulb
push
cli
rcr
sub
pushl
popf
xchg
inc
push
adc
call
sti
loop
cmp
outsl
jp
mov
jg
dec
repnz
pop
inc
inc
sub
push
in
inc
leave
cmp
adc
sar
mov
loopne
or
fnsave
insb
dec
imul
fimull
or
jns
sbbb
adc
loopne
aaa
clc
xchg
xor
push
mov
ja
sahf
add
xor
pop
add
mov
in
xchg
test
dec
jno
jmp
mov
or
push
test
cmp
jmp
and
insl
fnsetpm(287
mov
movsl
adc
subl
xor
cmp
inc
sub
or
hlt
push
decl
mov
pop
icebp
or
das
das
mov
push
jo
mov
push
aam
mov
call
dec
inc
sbb
and
sub
stc
inc
dec
js
sub
aaa
fwait
cmp
mov
pop
fs
mov
and
xor
call
xorl
mov
test
fmul
xchg
lock
mov
adc
xchg
movsb
sarl
pop
or
loopne
pop
incl
fnstenv
add
xlat
ds
xor
inc
mov
icebp
incl
dec
cmp
sbb
ss
daa
fsubrl
xchg
sub
hlt
pop
mov
adc
pushf
mov
jl
pop
bound
cmp
inc
inc
loope
mov
jae
lea
insb
iret
mov
dec
movsl
inc
mov
decb
inc
rorb
loop
out
rcrl
cmc
data16
add
mov
pushl
out
xor
daa
cmp
sub
std
xchg
jg
pop
rclb
or
xchg
enter
popa
das
ret
mov
cld
mov
push
sub
dec
repz
leave
jl
ficompl
int3
in
dec
adc
ds
inc
push
jae
or
stos
jle
mov
push
pop
jmp
imul
in
insb
xchg
inc
push
loopne
push
lcall
shr
inc
cmp
xor
decl
cs
cmp
cmpsl
mov
inc
outsl
cmc
das
lock
aad
pminub
mov
jne
cmp
call
jmp
sub
out
fmull
sub
and
pop
sub
sub
repnz
dec
jg
popa
inc
shll
mov
fs
mov
mov
bound
jg
outsl
out
addr16
popl
in
lea
decl
push
lea
cmp
sbb
cwtl
jo
jbe
roll
jb
sbb
add
js
outsb
and
sbb
pop
rcll
loopne
call
or
xchg
mov
leave
movsb
ljmp
push
mov
repnz
xor
hlt
imul
xor
xor
out
and
or
iret
mov
mov
test
out
mov
pop
mov
test
test
xlat
cmp
std
cmp
cmpsb
cmp
out
loopne
xor
out
sbb
mov
fcmovnu
fildl
out
nop
dec
lret
sbb
lahf
outsb
xchg
pop
mov
jne
push
mulb
sar
pop
pop
xchg
push
inc
fmulp
xchg
fldcw
aad
push
loopne
cmp
cltd
rcr
rolb
jbe
jge
mov
cld
cmp
fwait
push
popl
jge,pn
adc
fucomip
mov
out
xchg
or
decl
sub
pop
fwait
test
shlb
cwtl
pusha
cmp
pop
aad
jmp
out
cmp
add
mov
enter
scas
repz
std
das
mov
jmp
lcall
loope
jge
sbb
sbb
fmuls
call
jns
push
dec
fldcw
jp
movsb
test
sahf
cmp
call
fcoms
cld
test
sbb
xchg
insl
data16
outsl
jae
push
incl
test
mov
dec
inc
test
inc
push
jmp
add
dec
jmp
mov
das
push
fidivrl
pop
jo
fildll
test
push
cld
ror
cmpl
lret
sbb
cltd
mov
ret
aam
xchg
cli
das
jo
cs
mov
pop
mov
call
arpl
mov
mov
in
fsubs
xchg
imul
sarb
sbb
ljmp
sub
cmpsb
inc
leave
in
mov
in
in
xchg
and
pop
push
mov
sar
dec
outsb
pop
cmp
jecxz
push
pop
cwtl
imul
lea
fwait
or
das
lock
ret
xor
shll
xchg
cmpl
pop
idivl
inc
cwtl
rcrl
mov
dec
ds
pushl
push
ret
in
mov
mov
add
xor
mov
lret
pop
clc
call
cli
and
std
bound
testb
dec
or
lcall
call
sub
negb
dec
loop
sub
jg
mov
orb
leave
popa
clc
xchg
ljmp
incl
add
push
jbe
mov
xor
xchg
sarl
sar
lret
dec
add
incl
mov
xchg
notb
fsubrp
cmp
lcall
clc
mov
insb
aad
mov
pop
imul
mov
addr16
add
adc
movsl
out
sub
lods
inc
out
add
and
rcrb
std
jecxz
fsubrl
xchg
out
cmpsb
pushf
xchg
inc
sbb
push
imul
pop
aam
push
arpl
scas
xchg
lcall
js
das
pop
push
and
lcall
jg
jl
icebp
das
xor
loope
dec
ja
dec
test
jb
mov
jmp
in
clc
xor
push
repnz
mov
add
cld
sub
ret
add
dec
popf
sbb
cli
ljmp
jae
xchg
push
outsl
sub
stos
loope
cwtl
lret
inc
ss
dec
clc
call
out
sub
push
fnstcw
jb
bound
loop
adc
push
pop
lahf
pop
sarl
scas
fistpl
movsl
ljmp
bound
dec
pusha
inc
or
and
and
leave
mov
sub
sbb
jmp
pop
cltd
lcall
cli
shlb
fildll
daa
sub
lea
icebp
pop
mov
pop
imul
test
mov
push
dec
insb
pop
sar
or
and
pushf
fs
arpl
and
adc
xor
decl
into
jbe
jno
or
andl
lock
or
jns
and
or
iret
sbb
mov
repz
adc
mov
sub
iret
push
pop
jmp
fdivrs
inc
mov
es
push
fxch
subb
pop
jp
int
cmp
and
outsl
cld
aam
je
aaa
jbe
and
pop
fistpl
push
jb
out
or
fldl
call
lods
out
dec
imul
mov
mov
sub
popf
test
rclb
neg
sub
popf
pop
xchg
and
out
adc
push
iret
jp
lods
dec
das
adc
jl
mov
jmp
dec
rcl
popf
pop
ds
xor
enterw
push
lods
cmp
std
pop
insb
sbb
push
aad
leave
inc
push
movsl
das
lock
or
add
test
dec
mov
incl
adc
adc
cmp
add
iret
out
jle
sbb
or
incl
loop
imul
cmp
mov
or
push
add
lahf
repz
jmp
mov
fdivrs
push
loopne
jecxz
mov
stos
cli
add
sub
test
rcll
iret
inc
int
lods
stos
sbb
add
ljmp
sahf
repnz
ds
xchg
fs
jl
xchg
or
repz
dec
arpl
mov
pop
add
or
jb
leave
cltd
adc
jg
xchg
test
fwait
ja
test
imul
sub
sbb
sbb
icebp
fucomip
int
sub
addr16
mov
dec
dec
or
fadds
ljmp
adc
in
pminsw
in
lods
inc
xchg
mov
cmp
scas
sub
fstl
jg
pop
push
mov
sbb
xor
movsb
popl
push
xor
ljmp
aaa
stos
push
dec
dec
inc
insb
mov
sbb
stos
out
movsl
cmpsb
in
lcall
es
cld
xlat
jg
hlt
adc
xor
int
test
rorb
or
and
lcall
shll
pop
in
ds
es
mov
decl
rolb
lret
cli
adc
sub
add
xor
add
out
push
mov
adc
push
imul
das
ficoms
pushl
cli
mov
lock
out
sub
aaa
push
fsubrs
mov
push
movsb
push
sbb
jg
fcmovb
sbb
xor
lret
mov
dec
call
cli
mov
in
push
mov
dec
stc
sbb
mov
push
push
xorl
decl
mov
lahf
xor
pop
and
mov
lahf
jle
pushl
sbb
outsl
jo
inc
adc
and
xor
mov
push
xchg
push
jle
call
cmpsl
aas
mov
imul
sbb
pop
dec
lock
scas
fimuls
lods
sub
out
push
dec
adc
lods
mov
in
dec
mov
jo
mov
leave
push
mov
or
ljmp
jo
int3
mov
cmpsl
popa
sbb
pop
push
mov
pushl
test
lods
inc
jne
mov
inc
mov
movsb
cmp
stos
sbb
stos
xor
cmpb
js
inc
jo
shll
adc
mov
push
add
jmp
clc
lcall
inc
add
mov
out
push
xor
call
pop
cmp
push
jae
cltd
push
nop
bound
mov
mov
ljmp
loop
shlb
inc
inc
outsl
pop
aaa
cmp
test
mov
sbb
push
cmp
jg
cltd
inc
in
stos
mov
add
fstpt
rorb
inc
incl
xor
xchg
xchg
scas
or
outsl
sub
rol
ljmp
test
inc
pop
and
xlat
ja
mov
mov
notb
mov
jg
cmp
insb
sub
repz
adc
dec
xchg
hlt
adc
jno
mov
lcall
sbb
sbb
xchg
outsb
movsb
pop
push
cld
push
add
push
subl
jmp
dec
xor
shll
adc
cmc
adc
mov
rcrb
sti
imul
jo
jg
enter
fsts
hlt
mov
jb
jmp
lea
jne
popa
dec
push
call
mov
sarl
push
xor
fcmovu
mov
ljmp
fnstcw
rcpps
aam
into
xchg
cmovbe
mov
test
or
sub
jle
test
cmp
int3
ss
insl
les
lcall
mov
in
xchg
cltd
mov
push
mov
incl
push
adc
jno
addr16
stos
iret
stos
scas
mov
jg
jg
pop
pop
into
jmp
inc
pop
arpl
mov
jnp
f2xm1
movsb
lcall
dec
stos
xor
into
jo
xor
pop
or
ljmp
and
pushl
cmp
mov
lret
add
cmp
test
cltd
xchg
adc
pop
adc
push
jg
mov
cs
push
movsl
ja
out
das
push
jle
jmp
call
xor
das
or
repz
pop
xchg
inc
dec
and
add
std
jmp
jl
or
pause
cltd
aaa
xor
sbb
and
mov
xor
mov
outsb
sbb
aam
push
inc
xchg
inc
inc
xchg
mov
add
sub
and
pusha
xor
xchg
mov
jns
xchg
adc
pop
adc
jg
hlt
lcall
inc
lea
scas
pop
int
lret
push
adc
jg
cmp
inc
pop
sub
clc
or
jae
push
pop
lcall
outsl
std
pop
imul
arpl
es
xlat
push
xchg
aam
int3
jle
incl
dec
insl
cmpsb
daa
testl
inc
in
ret
cmpsl
cli
jg
sub
jg
add
jb
or
fildll
icebp
sub
mov
push
push
jl
out
lds
cmp
mov
jge
cmpsl
ss
inc
les
jmp
jg
mov
adc
mov
add
push
xor
aaa
add
ljmp
lock
fldcw
xchg
in
aam
test
pop
aam
adc
lcall
mov
fs
sti
cmpb
out
xor
cltd
sar
aam
aad
pop
xchg
push
jg
ljmp
repnz
dec
mov
das
jg
roll
in
scas
dec
inc
inc
push
dec
mov
loopne
fs
cli
xadd
mov
inc
jg
or
xor
icebp
aaa
sahf
sub
xchg
add
hlt
xchg
adc
dec
pop
mov
and
sbb
lret
cld
loope
outsl
gs
pushl
adc
lock
out
pop
xchg
inc
and
clc
sub
fs
iret
lods
mov
sbb
cld
decl
ss
sbb
pop
icebp
xchg
pop
cli
pop
outsl
out
mov
dec
pop
pop
addb
mov
call
scas
cmp
mov
test
jnp
pushl
pavgw
or
repz
cmp
jge
jbe
roll
cld
test
add
pop
pop
mov
int3
stos
je
inc
data16
into
popa
mov
lods
push
test
adcl
xchg
adc
roll
pushl
daa
insl
ret
xchg
jle
pop
rcl
inc
in
mov
stos
mov
mov
scas
js
sub
lret
insl
ljmp
adc
popa
mov
movl
imul
pop
push
movsb
adc
mov
mov
push
jae
lahf
cld
inc
stc
shrl
and
mov
ficomps
jecxz
decl
neg
cli
sub
cmp
inc
xor
ret
sub
push
sar
jge
out
je
mov
leave
addr16
cmp
sub
jno
cmp
dec
lret
adc
bound
push
sbb
decl
or
mov
test
decl
inc
lea
sbb
cmp
pushf
dec
sbb
dec
std
idivb
ds
int
mov
jp
loopne
icebp
idiv
sbb
xor
adc
sbb
lods
ss
loopne
pop
in
divl
pop
ss
xor
jno
in
clc
ljmp
mov
xchg
mov
push
push
icebp
cmp
xchg
xor
pushl
mov
xchg
mov
fcom
jno
into
pop
adc
xchg
cmp
lcall
jmp
repz
sub
in
popf
sbb
mov
pop
pop
xchg
push
pop
jmp
decl
xchg
lds
ds
xchg
lds
jge
mov
aaa
fdivl
loopne
jg
xchg
adc
cltd
fstpl
aam
jge
mov
inc
pushf
or
jno
push
hlt
neg
pop
mov
mov
mov
enter
pushl
add
cmp
stc
shlb
test
movsb
pop
jg
ljmp
repnz
sbbl
cwtl
sti
jbe
mov
sbbl
mov
idiv
or
sbb
pop
mov
gs
call
jg
sub
push
loop
outsb
sbb
aam
stos
mov
lock
jmp
sub
jnp
addr16
inc
pop
data16
out
jae
daa
xchg
dec
push
js
push
mov
sbb
push
xor
imul
xchg
fcomi
frstor
mov
jg
adcb
mov
popf
add
push
mov
adc
and
ljmp
cld
aas
xor
add
xor
aad
cld
cmpsl
mov
shlb
loopne
xor
jle
ds
jnp
pop
push
jle
mov
fisubrs
or
scas
dec
dec
add
call
and
jae
in
lret
push
jno
bound
ljmp
les
lcall
sub
push
dec
cmp
arpl
mov
incl
insl
sbb
fisubs
std
xchg
into
scas
sub
sub
inc
adc
call
int
mov
add
call
sbb
inc
lret
cwtl
jmp
cmc
jg
mov
test
imul
decl
outsl
lahf
mov
xor
sbb
andb
lods
mov
pop
loope
out
insl
cmc
iret
imul
popa
mov
enter
sub
das
hlt
aaa
clc
loopne
shll
jno
push
jmp
incl
jnp
lds
inc
mov
cmp
test
jne
icebp
jp
out
sarb
fisttpl
push
pop
inc
sub
lock
shr
xchg
sub
movsb
lock
inc
mov
mulb
mov
lds
sub
out
bound
pop
or
cmp
mov
bound
cmc
faddl
or
push
push
adcb
gs
cmp
jns
jecxz
ret
stos
push
pop
call
mov
cltd
movlps
out
popf
into
jmp
xchg
mov
mov
and
push
rorb
inc
std
es
mov
push
or
jmpw
lods
pop
mov
call
in
sarb
mov
cmp
mov
adc
jge
cmpsb
xor
mov
insb
hlt
mov
pop
inc
cmp
mov
jo
pop
lods
loopne
stos
cmp
inc
in
ss
js
fnstcw
inc
in
idiv
call
pop
jmp
pop
out
jb
lret
cmp
and
aam
and
jmp
sbb
and
or
sub
imulb
cli
lcall
push
lea
fucomi
pop
loop
ret
sbb
sbb
call
sub
and
push
das
fs
mov
push
out
add
cli
lcall
push
push
xlat
lahf
pop
sbb
pop
or
sub
lods
or
sub
dec
mov
and
popa
or
lcall
inc
lods
cwtl
notl
mov
in
insl
in
lret
sub
sbb
and
jg
lcall
pop
mov
sbb
fdiv
iret
add
xchg
push
imul
sbbb
mov
ds
sub
adc
lahf
int
loop,pt
call
xlat
pop
sahf
repnz
lcall
lret
mov
pop
pop
mov
pusha
pop
out
aas
lahf
sub
std
and
and
iret
int
cmc
jg
jg
fadds
inc
xchg
or
fildll
xor
push
popl
sub
fimuls
loopne
out
jp
outsl
incl
jp
int
popf
jmp
in
popf
cmc
jno
hlt
or
in
push
test
jmp
cs
loopne
jecxz
add
cli
dec
shll
mov
cmc
daa
fdivrp
mov
rclb
cld
mov
xchg
movsl
shlb
call
clc
pop
mov
xchg
mov
rcr
rolb
out
or
decl
adc
mov
push
inc
in
mov
inc
inc
push
pop
push
and
aas
push
mov
mov
hlt
outsl
fnstcw
jmp
ljmp
jno
mov
leave
sbb
mov
out
test
sbb
cmp
incl
call
cs
fdivs
jns
shlb
adcl
jg
ljmp
push
in
in
mov
mov
sub
mov
jno
jne
push
repz
jno
aam
fs
mov
jecxz
lcall
inc
and
add
sub
cmp
aam
cmpsl
hlt
add
cmc
movsb
jg
jg
and
mov
rcll
imul
xor
mov
shrl
in
xchg
jnp
sbb
aam
icebp
in
cli
aas
jmp
lret
adc
sbb
hlt
lahf
or
xor
pushf
adc
in
decl
shlb
mov
mov
pop
mov
jle
outsl
inc
lods
xor
ret
mov
aaa
sbb
jg
pop
clc
fcmovbe
pop
xchg
arpl
pop
mov
or
jg
push
xor
lods
jp
inc
aaa
jno
and
std
fmull
out
mov
add
loope
mov
sub
add
xor
fisttps
push
and
sbb
cmovg
inc
lcall
mov
jmp
aaa
das
cmc
lcall
aaa
mov
jno
rcll
cmp
mov
loop
pop
call
in
shrl
pop
sbb
pop
jecxz
sub
stos
lcall
push
push
pusha
pop
in
icebp
repz
popf
jmp
leave
ljmp
push
mov
sub
or
adc
in
fdivs
in
pop
push
incl
or
add
mov
push
out
jne
sub
pop
cld
inc
in
inc
pop
ret
fbld
aaa
sub
call
fucomp
push
pop
test
imul
pushl
lock
repnz
mov
in
sbb
dec
jne
mov
cwtl
hlt
aaa
add
icebp
inc
lods
repz
stc
popa
int3
mov
pusha
cmpsl
cwtl
and
in
pop
aad
les
sub
or
lcall
std
mov
lods
outsb
pop
insl
call
cld
ljmp
jp
mov
dec
inc
out
mov
push
fiadds
decl
cld
lcall
dec
popf
and
std
lahf
or
popa
inc
mov
cmpsl
push
cmp
ljmp
add
dec
rolb
or
jb
repz
imul
jbe
push
mov
andb
outsl
cmc
lcall
sahf
cmp
subl
jp
dec
jnp
mov
ljmp
filds
mov
out
repz
adc
pop
xchg
out
inc
movb
call
push
inc
push
test
jns
enter
inc
mov
fucom
push
ds
xor
dec
rcrb
fucomip
pushl
xor
mov
push
test
mov
insb
pushl
hlt
aad
jge
add
mov
out
or
mov
loop
punpckhdq
push
incl
aad
xchg
setge
js
dec
jbe
xchg
inc
and
xor
decl
and
test
insb
and
cmp
test
mov
cmc
pop
jmp
add
pushl
add
pusha
jl
add
shl
into
lods
fimull
mov
stc
xor
cmc
ljmp
sbb
mov
in
bound
add
lahf
inc
mov
adc
pop
xchg
aaa
shr
ret
fstpt
cli
fxch
test
mov
cmp
cltd
js
out
push
add
jmp
or
mov
call
cmp
inc
jmp
je
lock
or
and
lcall
xor
inc
pop
pop
loope
inc
inc
scas
out
cmpsb
ds
mov
cmp
xchg
sbb
pop
cs
dec
mov
pushf
and
outsl
cld
pushl
sbb
sarl
lock
scas
and
outsl
ljmp
mov
idivl
mov
icebp
fcmovnbe
xchg
cmp
sub
ret
pop
sub
call
add
adc
sbb
mov
push
xor
test
mov
sub
xchg
jno
int3
aad
push
mov
dec
pop
in
test
cmp
pushl
jne
inc
or
shl
fstl
add
cmpsl
fcom
rcrl
sarb
test
mov
mov
add
and
mov
cmpsb
test
idivl
dec
imul
mov
inc
repnz
jmp
mov
in
mov
call
fbstp
ljmp
adc
das
hlt
ljmp
rcr
inc
pop
cmp
dec
aad
dec
in
sbb
out
push
ficoms
mov
ss
jne
mov
shlb
mov
sub
jp
jg
sub
insb
xchg
inc
xor
xchg
or
lods
pop
shll
les
icebp
pop
jl
call
pushl
jmp
ret
and
std
scas
xor
push
sbb
sbb
jmp
push
mov
jp
or
xor
and
in
gs
shlb
pop
popf
inc
fwait
call
test
pop
add
call
test
iret
stos
test
jns
pushl
cltd
cmp
sub
mov
mov
pop
mov
inc
jno
xor
push
aam
clc
aas
insb
cmp
out
sti
mov
ljmp
fsts
mov
mov
cwtl
leave
pop
xchg
int
and
into
inc
ficompl
movsl
icebp
in
adc
ljmp
xchg
and
sub
icebp
jmp
pushl
icebp
int
push
jns
nop
jp
push
sbbl
cmp
jb
mov
jbe
xchg
cmc
adc
loope
shlb
xchg
or
mov
pop
call
push
rcrb
iret
in
clc
mov
sbb
call
sbb
decl
jmp
sbb
daa
and
lcall
aaa
sub
outsl
repnz
fists
popa
cmp
in
sub
in
jle
fiaddl
jne
and
mov
cwtl
idivb
pop
outsb
repnz
push
test
xor
xor
lods
jno
testl
cmp
jmp
mov
push
and
xor
jp
add
mov
jp
push
sub
or
std
cwtl
xchg
push
add
jbe
mov
test
cmp
imul
sti
sarb
les
ljmp
pusha
pop
not
test
test
fldcw
mov
fstpt
jecxz
sar
jmp
enter
aad
and
call
mov
push
ret
pushl
shrb
inc
lahf
sarl
rcrl
shlb
push
std
push
jecxz
lcall
sbb
cli
jg
std
ret
pop
popa
and
ss
dec
mov
fwait
insl
cmp
popf
rcr
and
pushl
insb
ret
pop
xchg
push
arpl
and
push
stos
dec
cli
aas
mov
out
pop
out
dec
sti
ljmp
cld
or
inc
adc
sub
test
or
push
sarl
xchg
in
aam
mov
flds
sub
rclb
pop
cs
xchg
cmp
inc
jle
mov
push
pop
mov
pop
xchg
clc
xchg
sub
popf
test
add
sti
mov
jg
jns
xor
and
pop
out
ret
adc
jmp
ljmp
leave
jmp
in
nop
and
test
jnp
jg
lcall
adc
pusha
psrad
icebp
jo
cmovl
inc
stc
xchg
lret
cmp
jnp
lds
test
dec
data16
pushl
xor
sbbl
repnz
sahf
enter
xchg
scas
roll
mov
mov
xor
incl
add
xchg
out
mov
mov
popf
mov
ja
sub
dec
das
out
sub
inc
out
or
inc
jg
dec
movsb
pushf
sub
sbb
stos
sub
aaa
sub
inc
sbb
push
fsubrs
inc
hlt
subb
gs
cmpsl
aas
stos
add
add
out
imul
mov
lds
aad
mov
push
sub
lcall
fdivr
jmp
lret
inc
cs
mov
push
sub
and
out
lods
loopne
jmp
jmp
dec
dec
xor
lods
test
stc
out
movsl
mov
test
in
decl
outsl
out
sub
test
push
sti
lods
dec
loop
out
lret
fistps
test
or
sub
and
pop
lods
aaa
js
mov
add
jmp
or
data16
addb
sbb
out
or
jg
lock
pushf
fbld
outsb
stos
sbb
dec
cmc
es
mov
mov
addr16
cltd
je
out
push
sbb
and
loopne
loope
add
and
jl
out
push
xchg
mov
inc
out
mov
daa
jmp
out
leave
jmp
imul
or
push
lods
imul
call
jmp
outsl
jmp
pop
adc
stos
push
cld
scas
test
shr
or
fstpt
movsl
pop
xlat
lea
inc
xor
jmp
sbb
or
mov
test
out
jae
in
pop
mov
orb
add
and
ljmp
push
inc
mov
stos
sub
sub
push
cmpsl
sub
mov
incl
and
rcl
loopne
lret
mov
movsb
rep
movsb
cmp
out
mov
stc
pop
subl
popf
or
add
mov
test
xor
mov
out
popa
loope
mov
pop
xchg
or
jno
add
pop
clc
call
push
lahf
pop
xchg
cmp
sbb
push
sbbl
subl
pop
sbb
inc
lahf
out
fldenv
icebp
sbb
enter
scas
lahf
cmpsl
jmp
pop
lcall
adc
jmp
push
fbld
xchg
hlt
arpl
clc
mov
out
inc
sbb
lock
lock
mov
jo
jne
pushl
pop
mov
mov
add
lock
call
sti
leave
xchg
fnstcw
dec
jnp
jnp
decl
ds
clc
inc
add
jmp
cmc
ror
sbb
cmpsb
xchg
lahf
cli
es
mov
pop
sbb
and
fwait
ret
rcrb
mov
cmp
sbb
cwtl
cmc
jge
push
ret
sbb
call
dec
push
mov
xchg
icebp
pushf
push
push
icebp
ss
cwtl
in
inc
sbb
das
ret
pushl
insl
rclb
push
mov
inc
xchg
or
and
filds
xchg
negl
mov
pop
imulb
xor
pop
push
icebp
add
xchg
push
add
adc
call
jmp
shlb
pop
mov
aaa
push
test
outsl
ljmp
std
jg
call
mov
jb
adc
popf
jns
sbb
std
cltd
push
in
xchg
fstps
fptan
outsl
fcoms
jnp
sbb
das
popf
pop
js
lcall
aad
pop
mov
mov
xchg
sub
cmp
or
adc
jecxz
push
xchg
gs
xchg
dec
scas
mov
xchg
test
xor
sub
jmp
rcll
dec
es
test
mov
mov
test
push
and
into
jae
ret
xchg
mov
add
popa
ret
push
call
jmp
ljmp
fincstp
adc
mov
xor
scas
sub
nop
dec
clc
ret
notb
repz
lds
xchg
test
fisttps
pop
lea
test
aaa
in
shl
lahf
jecxz
pop
incl
insb
lret
jge
in
inc
clc
jb
cmpsb
nop
push
or
stos
call
clc
in
xchg
out
dec
adc
mov
loop
test
xor
dec
ljmp
inc
adc
mov
div
shll
ret
in
stos
shrb
add
lock
bnd
push
pop
call
into
pop
addl
lret
loop
in
mov
xlat
push
sub
mov
in
movsl
leave
push
dec
inc
dec
xchg
push
push
test
mov
lods
lods
cmpsb
ret
daa
movsl
push
pop
jmp
ljmp
mov
out
les
lods
lds
mov
call
inc
imul
aaa
clc
call
arpl
roll
out
out
loope
dec
mov
cmp
outsl
call
jl
dec
imul
les
ljmp
movb
mov
push
cmp
add
sbb
jg
loope
ljmp
jmp
daa
mov
jle
data16
and
data16
data16
aam
out
mov
imulb
mul
leave
or
int
leave
rclb
in
dec
fwait
hlt
out
dec
hlt
fsubrs
adc
pushl
lret
xchg
leave
push
lds
loopne
push
adc
mov
out
dec
iret
cmpsb
imul
fsubrs
or
add
and
decl
fldl2t
mov
dec
imul
mov
pop
lock
xchg
out
and
test
out
inc
mov
lret
decl
mov
in
outsl
inc
data16
mov
stos
sti
rcrb
jmp
movsl
pop
mov
in
andb
inc
inc
out
dec
sub
aam
mov
jle
call
in
mov
sahf
pop
daa
cmp
mov
movsb
pop
adc
pusha
movsb
scas
pushl
nop
cmp
popf
repnz
pop
daa
fldenv
fsub
mov
fisubl
ljmp
neg
movsb
pusha
cwtl
pop
and
fs
or
das
filds
std
aaa
xchg
clc
sar
fimull
xlat
sbb
mov
inc
xchg
pop
xchg
pop
mov
cmp
sub
les
push
imul
addr16
les
add
rcll
popf
sarl
xor
mov
test
jge
push
push
pop
addr16
sub
rcrl
pop
cli
mov
pop
dec
pushf
pop
add
pop
xchg
inc
sbb
sub
daa
imul
std
hlt
pop
xchg
dec
aad
jle
fwait
aad
sbbl
mov
loop
jbe
dec
punpcklbw
sbb
neg
pop
shlb
jmp
mov
push
sbb
fsts
mov
fcomp
push
imul
rcrl
jmp
cmp
mov
jmp
sbb
mov
jg
jg
lea
fcmove
xchg
sub
xlat
pop
mov
test
push
je
add
call
push
pop
dec
push
xor
xor
icebp
dec
xchg
jno
cld
push
ja
sbb
test
icebp
mov
lods
int3
push
fcomp
outsl
push
aaa
sbb
shl
das
out
sub
lret
push
jns
mov
mov
sbb
push
mov
stc
push
ds
xor
jmp
xchg
jns
mov
call
jg
popa
xlat
mov
sub
or
int
dec
insl
jmp
and
sti
test
or
mov
mov
and
stos
sub
dec
cmpsl
push
push
mov
xchg
push
xchg
and
add
sub
loop
add
adc
mov
decl
add
mov
and
add
mov
mov
roll
add
inc
pushl
loope
por
or
in
pop
pushf
int3
scas
xor
xchg
repnz
pop
ja
mov
pop
jne
psubsb
ljmp
mov
mov
icebp
xchg
ret
out
jmp
push
mov
cmp
pop
cmp
cmpsl
mov
jmp
push
lods
rcrl
jmp
mov
jmp
mov
pop
pop
out
inc
mov
cli
sub
xchg
push
cmpsl
lods
out
mov
mov
scas
pop
jnp
push
and
icebp
leave
shl
repz
insb
enter
sub
and
ljmp
xor
negb
incl
movsb
mov
lret
loopne
xchg
xchg
lcall
mov
test
in
push
adc
movsb
shr
dec
mov
imul
push
call
sbb
call
gs
ljmp
adc
and
ljmp
lods
sub
or
stos
mov
loope
movsl
fmulp
ljmp
js
sbb
movsb
mov
andl
loop
cld
call
fwait
in
jg
fdivl
sub
pushf
cmp
insb
pushf
pop
scas
fnsave
sbb
push
popf
pop
mov
es
dec
mov
adc
outsl
stc
loopne
mov
bound
aas
and
lods
jle
out
mov
movsb
test
cmpsb
push
loopne
cmpsb
scas
bound
aam
rcll
xlat
loope
sub
inc
ljmp
xchg
ljmp
inc
lods
mov
out
dec
mov
loope
xchg
aad
or
or
push
dec
in
fs
jmp
imulb
adcb
js
lcall
push
cmpsl
movsl
jmp
mov
lcall
test
push
sub
mov
movsl
jb
pop
cli
inc
sub
mov
stos
lock
call
xor
int3
push
in
mov
stos
cmp
stos
ret
loopne
jl
mov
mov
pop
xlat
or
mov
out
popf
arpl
pop
pushf
adc
xchg
clc
out
inc
loope
sbb
cmpsl
insb
out
jae
pushl
sbb
sbb
fildl
fwait
scas
pop
pop
pop
jb
add
push
sbb
pop
sbbl
jmp
popf
xchg
lcall
cld
fldl
jge
push
pop
fadds
out
and
faddl
aam
xor
pop
decl
pop
loopne
xor
stos
jb
add
loopne
mov
bound
push
movsb
sarl
mov
pop
adc
movsb
rorb
xor
adc
adc
bound
push
jecxz
mov
pop
pop
movsl
jecxz
lahf
adc
push
inc
imul
fdivr
or
push
jnp
in
fdivr
dec
iret
pop
xor
dec
jg
jne
inc
pop
jnp
sub
sbb
punpcklwd
jp
lcall
sahf
pop
cmp
jecxz
popf
js
adc
cmp
fdivp
fsubrs
filds
jne
mov
hlt
fs
pop
xor
es
and
push
ja
lcall
sub
stos
fsubrp
xorl
xlat
cmp
rcrb
fucomp
jae
das
cmc
jg
insb
lock
pop
add
shl
fs
adc
xlat
std
mov
or
xor
arpl
popf
push
ja
shll
adc
mov
adc
idivb
in
mov
das
shlb
jns
xor
cmp
pop
je
pop
jns
ret
fnstenv
jg
pop
cmp
push
xchg
jns
cmp
je
fstpt
xor
int
pop
js
xchg
f2xm1
incl
jno
sbb
fdivr
cmp
js
or
jmp
outsl
insb
add
mov
xlat
dec
jmp
push
and
lock
rolb
push
dec
inc
fimuls
pop
mov
push
outsb
dec
mov
ficoml
sar
loope
push
mov
jo
pop
stos
shlb
mov
push
jle
adc
mov
andl
jge
js
cmp
mov
lods
stc
mov
leave
in
repnz
fidivl
scas
xor
bound
imul
sti
lods
xchg
push
mov
mov
stos
inc
imul
mov
xchg
cld
add
ret
test
loop
loop
sub
pop
test
clc
pop
sub
dec
call
xor
mov
push
pop
sti
call
jmp
mov
jne
lods
and
repnz
cltd
mov
les
and
inc
mov
dec
std
xchg
sub
es
fsubrs
shll
fucomip
pop
sti
xchg
shll
lods
imul
inc
sub
stos
lds
ja
jg
movsb
ljmp
add
dec
icebp
mov
or
fwait
stos
enter
outsb
js
leave
and
test
inc
fildll
mov
mov
decl
xchg
add
arpl
das
loopne
sbb
stos
aam
mov
cmp
mov
jmp
mov
mov
cmp
shll
inc
decl
xorl
in
xchg
int3
out
xor
rolb
sub
xchg
mov
pop
ja
or
sub
icebp
jmp
push
lcall
sub
test
mov
gs
push
in
sub
cli
icebp
sub
outsl
and
sbb
dec
movsb
ljmp
loopne
mov
out
dec
or
out
lea
incl
inc
pop
and
ja
add
mov
lret
movsb
dec
pushl
dec
cmp
mov
repz
inc
xlat
mov
clc
push
outsl
lds
andl
call
orl
cmpsb
std
popf
popa
add
inc
pop
test
and
mov
jg
push
mov
addr16
popf
movsb
fisubrl
push
inc
hlt
jbe
daa
lcall
daa
add
fucomp
test
jle
pop
pop
lcall
aas
push
pop
jp
clc
sub
ljmp
popf
sub
mov
pop
clc
push
out
xchg
ljmp
mov
cmc
decl
enter
xor
mov
mov
icebp
pushf
mov
push
ljmp
mov
loopne
xor
movsl
xor
lea
loopne
mov
push
ljmp
std
testl
lahf
fcmovne
mov
fwait
jae
add
sbb
lea
lea
mov
loope
lcall
sbb
mov
ljmp
pop
data16
dec
pushf
pop
adc
sahf
pop
test
pop
cltd
xchg
ret
jmp
sbb
fmull
test
mov
sahf
push
imul
push
xchg
jg
mov
push
mov
dec
pop
cwtl
int3
fiaddl
adc
sbb
repz
das
icebp
jg
xchg
mov
dec
je
push
xchg
push
jle
dec
jecxz
adc
jl
xlat
jl
pushl
rcll
and
push
cld
gs
mov
dec
decl
push
clc
xchg
or
rclb
adc
push
movsl
daa
ljmp
ljmp
push
push
cli
movsl
fildll
pop
stos
ficompl
cmc
push
fists
fildll
lcall
pop
pop
int
pop
notl
pop
sbb
jg
aam
and
pop
or
rclb
in
mov
icebp
sar
jg
aam
xchg
mov
xlat
stos
in
adc
sti
xchg
mov
mov
cmpsb
xchg
add
mov
xchg
mov
xlat
std
sbb
ljmp
cld
test
mov
jmp
fmull
inc
jg
in
inc
push
mov
movsl
shlb
stos
mov
inc
pushl
push
sub
pop
mov
xor
mov
dec
into
mov
mov
call
popf
inc
test
cmp
jmp
push
in
lods
pop
lcall
test
fs
adc
xchg
jmp
dec
mov
scas
sub
data16
cmp
mov
mov
rcrb
fnstsw
cmc
lock
lcall
into
push
hlt
mov
xor
xchg
out
test
call
cwtl
outsl
test
mov
mov
shlb
das
cmpsl
lods
insb
ficomps
std
jo
sub
iret
pop
lcall
inc
and
dec
ljmp
sti
push
sbb
fisttps
jecxz
movsb
repnz
repz
jecxz
jo
ljmp
dec
in
mov
das
cmp
and
mov
mov
and
jmp
lcall
lcall
cltd
xor
fs
stos
cwtl
into
inc
idiv
sub
sub
orl
mov
sbb
jge
pop
ret
add
xchg
xchg
movsb
push
rcrl
push
ret
test
pop
repz
int3
sub
cmp
push
lock
movsl
jecxz
cmp
push
inc
jo
jl
push
mov
into
pop
sub
xor
mov
pop
popf
jo
push
xlat
or
lods
mov
add
test
rorb
push
mov
popf
jbe
clc
iret
in
mov
dec
fwait
test
or
mov
or
sub
ljmp
inc
aam
mov
aad
clc
mov
out
or
rcrb
lcall
incl
inc
mov
cmp
xchg
outsl
or
call
movsl
das
cmc
gs
jb
and
shrb
test
jmp
imul
int3
shr
jo
stos
jecxz
pop
jmp
and
in
outsl
lock
lcall
sbbl
outsb
cmp
pop
cmp
cmc
xchg
push
or
cmp
sahf
fadds
xchg
into
movl
fs
pop
add
xor
add
push
fs
sub
movsb
sbb
xchg
add
ret
insl
aas
mov
nop
cwtl
push
filds
cmp
push
push
jp
push
jb
test
ljmp
cmp
das
push
lock
cld
jne
popa
mov
push
jns
jg
aaa
repnz
lock
cmp
je
xchg
icebp
inc
push
aaa
add
imul
push
sarb
das
sbb
inc
inc
jp
push
mov
inc
mov
xor
mov
sbb
mov
hlt
repz
in
stos
subl
ljmp
in
dec
shlb
add
pop
imul
jge
adc
call
push
inc
aam
cmp
sub
sbb
push
xor
fiadds
xlat
push
les
add
stc
jns
popa
sahf
cld
mov
push
push
sbb
push
xchg
sub
rcr
hlt
push
out
ret
ljmp
test
sarl
mov
fimull
pop
and
addr16
icebp
add
mov
sub
mov
movsb
dec
fsubl
inc
cmpb
mov
and
pop
lcall
shlb
stos
int
fildll
push
xchg
mov
repz
jae
in
ljmp
xlat
push
stc
pusha
ljmp
in
fildl
xchg
lcall
sub
jno,pt
scas
mov
nop
push
pop
enter
loopne
cmp
cmp
inc
das
jns
jmp
mov
sub
out
sbb
push
and
mov
fs
stos
decl
dec
gs
jmp
pusha
cwtl
scas
mov
xchg
xor
rcrl
and
adc
or
sub
mov
test
push
test
jg
ss
xor
cmpsb
mov
jmp
stos
addr16
dec
mov
push
mov
lret
and
clc
cld
push
cltd
sbbl
sbb
or
loop
je
mov
or
cli
jnp
inc
xchg
std
and
test
vmwrite
mull
xor
cmp
fnsave
das
in
inc
sub
imul
loop
enter
rorl
inc
ror
xlat
or
adc
lret
clc
repz
pushl
and
pop
inc
xchg
jno
pusha
out
push
jno
into
pop
mov
pusha
push
fcomip
mov
lcall
pop
hlt
outsl
sar
jb
outsb
shrb
aad
xchg
les
outsb
imul
shrb
lock
push
enter
out
mov
testb
and
out
movsl
decb
clc
jg
mov
daa
jmp
cmp
bound
mov
jecxz
icebp
add
in
in
fnsave
cmp
lcall
or
adcb
decb
scas
jo
lods
cmovg
xorl
fistpll
test
jg
dec
fcoml
jns
push
aam
lcall
dec
movsb
ss
jmp
popf
sti
lcall
mov
push
mov
ljmp
push
test
or
cli
ret
loopne
arpl
and
notl
addr16
clc
ja
jb
dec
fldl
adc
or
mov
ja
push
sub
lahf
ficoms
xor
aas
add
test
rcpps
aaa
jbe
push
ljmp
call
outsb
imul
lret
mov
loop
je
mov
ja
out
cmp
incl
lds
jbe
pop
xchg
rol
xchg
mov
loopne
mov
int
lods
xchg
call
push
xlat
add
fisubl
hlt
dec
stos
cmp
push
jecxz
pop
cli
sar
add
ror
int3
aas
shr
inc
jg
pop
sub
js
lcall
pop
jns
aad
popa
jl
or
rolb
lret
int
outsl
inc
push
test
sub
push
fdiv
jg
decb
movlps
add
add
push
pop
lock
fbstp
mov
cmc
ljmp
xor
aad
cmp
push
sbb
das
nop
rcr
mov
shrl
bound
das
mov
arpl
inc
jb
ja
jbe
xor
repz
aaa
bound
es
les
sub
incl
lcall
ds
jecxz
sarb
xchg
sbbb
sub
and
dec
out
popf
mov
mov
mov
cli
jmp
sub
cmpsb
dec
test
test
cmpsl
jnp
popa
loopne
outsb
and
adc
daa
test
aaa
clc
mov
js
stc
cmp
cmpb
clc
ret
add
jle
xchg
fisubs
scas
mov
and
fists
inc
inc
in
pop
dec
fnstenv
sbb
add
decl
insl
ret
lret
shll
mov
mov
xlat
pusha
aad
xchg
inc
push
stos
in
insb
loop
clc
push
outsl
out
cli
jbe
jae
hlt
mov
or
jecxz
cli
int
lcall
ror
pop
outsl
ss
jp
cmp
cli
xor
xor
mov
leavew
scas
mov
push
call
xchg
test
ss
je
ljmp
dec
ljmp
dec
pop
aam
cmp
sbb
ljmp
jmp
lea
pop
cli
mov
cmpsl
repz
xor
repz
lcall
mov
repz
dec
mov
bound
cltd
xor
push
inc
inc
jmp
or
ljmp
in
shlb
mov
cmp
sti
popf
pop
pop
push
cmpsl
push
mov
inc
es
lahf
inc
jne
dec
inc
xchg
in
mov
in
sbb
rclb
adc
fisubs
cli
jo
cwtl
jbe
and
sbb
daa
mov
push
int3
dec
xchg
xor
pushf
repz
dec
hlt
aad
inc
jmp
jae
lret
std
lcall
xchg
and
inc
mov
std
pop
xchg
mov
aam
cli
incl
in
xlat
xchg
insl
cmp
jns
cli
cmp
enter
mov
mov
movsb
push
add
jg
stos
sub
pop
jg
les
push
jmp
int
sbb
scas
pushl
add
mov
jo
push
or
dec
lods
add
testb
outsl
lock
movsb
pop
jecxz
mov
jae
cvtpi2ps
lods
incb
in
in
xorb
mov
xchg
sub
sub
mov
in
dec
lods
mov
negb
lcall
mov
cmp
jg,pn
or
repnz
inc
mov
mov
lock
push
enter
sub
xor
or
ljmp
lock
loopne
inc
sub
imul
push
loop
or
outsl
hlt
ljmp
inc
je
int3
mov
xchg
orb
inc
or
add
decl
pop
push
enter
mov
dec
ss
decl
in
jnp
call
mov
std
pop
in
sub
neg
rol
aaa
adc
pushl
mov
test
mov
out
sar
scas
dec
lds
xchg
aaa
pop
cli
ljmp
divb
divb
cmp
mov
mov
sub
mov
push
jl
fnsave
adc
cmp
or
ret
cltd
insb
or
enter
dec
cld
jg
inc
or
out
orl
push
xchg
or
les
outsl
cmc
call
push
sub
and
push
sub
loopne
insb
mov
inc
jmp
icebp
arpl
dec
ret
add
jle
insl
pop
out
stos
xorps
cmpsl
dec
cs
lods
dec
ljmp
loop
rcrl
sbb
push
dec
inc
negb
decl
loope
or
out
dec
in
pop
or
out
sbb
jno
aad
rcrl
dec
push
pop
decl
jmp
pushf
sub
push
in
jg
lret
adc
sbb
aad
mov
sar
xchg
adc
inc
jns
xor
call
sahf
mov
insb
test
rcl
inc
mov
mov
adc
ret
or
xor
out
cmp
add
jle
inc
and
aam
sub
hlt
cs
inc
mov
shlb
push
mov
fcomps
and
cli
dec
lcall
movsb
or
mov
sbb
adcb
pop
dec
xchg
es
dec
fst
lods
and
mov
out
jne
sbb
inc
ret
fcmovnu
in
pop
aad
jg
sbb
gs
sbb
arpl
mov
adc
add
jg
loop
cli
mov
out
push
push
mov
dec
insb
pop
cmp
movsb
sub
lock
dec
add
aad
sarl
mov
test
shl
push
repz
insl
fwait
mov
mov
or
mov
mov
stos
scas
push
xchg
dec
pushf
mov
cltd
push
xchg
call
jmp
repnz
int3
xchg
push
mov
or
cld
in
shlb
loop
outsl
mov
leave
push
cmc
divl
in
and
addps
pop
insl
gs
sar
sub
pop
xor
adc
adc
int
mov
xlat
pop
mov
jmp
fisttps
in
xchg
xorb
daa
fisubs
lret
push
dec
lods
and
ds
inc
rcll
enter
aaa
inc
jae
decl
fldenv
cmpsl
iret
xor
lds
cmp
ja
mov
jno
jg
mov
pushl
int3
cs
dec
cmp
mov
cs
filds
bound
sbb
cmp
mov
in
xchg
and
je
scas
or
lcall
mov
testb
mov
or
xor
in
out
les
lods
fdivr
call
into
and
sbb
jne
sbb
cmp
xchg
das
subb
mov
add
js
xchg
cmp
push
xor
dec
loop
add
or
decl
je
shll
mov
scas
and
dec
pop
cmpsb
js
cmc
xchg
outsl
loopne
sub
ja
outsl
xchg
popa
or
cmpsl
aas
movsl
sbbl
mov
dec
sbb
xor
aam
sub
xchg
mov
mov
add
xor
repz
xchg
sub
lea
mov
push
jg
pop
insb
inc
in
inc
push
test
mov
inc
push
fldt
hlt
dec
push
lds
movsl
mov
pop
push
lock
shr
push
sbb
mov
call
outsl
inc
in
stc
and
sbb
push
sbb
dec
es
inc
mov
lret
pusha
testl
jne
push
mov
and
das
lock
mov
jmp
and
adc
stc
xor
push
fbld
sbb
mov
pop
clc
jmp
or
imul
sbb
push
movb
cltd
pushl
ja
xor
arpl
and
leave
loope
insb
mov
adc
adc
inc
int3
int
jmp
add
inc
dec
mov
scas
lfs
sub
mov
test
xchg
cmp
pushl
icebp
or
scas
inc
xor
jge
lret
push
dec
mov
cld
lea
lcall
rclb
lds
xor
std
test
aad
fs
les
and
ret
jg
adc
add
push
dec
fildl
adc
aam
pop
decl
pop
pop
and
push
fdivs
and
outsl
fwait
idiv
lcall
jmp
lods
sbb
insb
and
and
cmp
push
sbb
call
dec
dec
xor
movsl
insb
cmp
lods
lcall
rcrl
mov
push
ds
pop
dec
mov
sbbl
pop
xorb
xlat
mov
scas
and
jmp
add
pop
loop
cmp
dec
xorb
clc
adc
movsl
push
ss
push
aas
inc
mov
mov
lcall
push
mov
sahf
cmpsb
call
push
or
mov
fcomps
imul
dec
sbb
sbb
jp
hlt
mov
jge
out
pop
test
push
dec
add
insb
cltd
sti
cmp
iret
xchg
jg
outsl
out
sbb
xchg
jg
ret
fstpl
das
lock
incl
or
and
sbb
pop
sub
ljmp
mov
xchg
mov
lahf
jp
sbb
loop
icebp
nop
inc
pop
sub
dec
mov
cltd
dec
cmp
rcrl
loop
dec
decl
mov
sbb
mov
ds
adc
testl
loope
sbb
lods
loope
call
or
pop
dec
out
sub
stos
add
pop
mov
cli
sti
int3
daa
in
xchg
popa
pop
std
stos
pop
xchg
arpl
cs
out
daa
loopne
clc
mov
addr16
shll
test
mov
xor
jmp
out
loopne
pop
mulb
mov
mov
orl
popa
push
xor
in
push
movsb
push
sbbl
fnstsw
sub
fs
jo
hlt
pop
mulb
cmp
push
jbe
andl
add
pop
sahf
adc
notb
ljmp
xor
lcall
gs
addr16
jmp
sbb
clc
mov
sbb
shlb
pop
das
push
adc
pop
test
jle
decl
sbb
arpl
lahf
std
adc
daa
insl
sahf
test
sti
fisttps
mov
adcb
xchg
ss
cmc
push
sbb
imul
pop
rol
pushl
clc
jg
popf
adc
imul
cmp
std
xchg
add
dec
ljmp
fwait
xchg
sbb
cltd
adc
jnp
and
mov
push
push
mov
clc
pop
clc
pusha
aam
ljmp
fs
incl
dec
in
dec
mov
hlt
xchg
test
mov
ljmp
int
adc
jmp
adc
rep
nop
or
sbb
scas
out
xchg
mov
pop
mov
pop
push
adc
clc
cmp
aam
hlt
jnp
cmp
lret
dec
scas
push
mov
mov
pop
push
or
pop
xchg
or
and
jge
or
mov
mov
xchg
push
xchg
xchg
mov
ja
xchg
sub
inc
arpl
cltd
sbb
pop
dec
mov
cmpsl
inc
negl
popf
pop
sbb
mov
shlb
and
cs
pushl
mov
pop
add
mov
aam
cld
lods
push
stos
xor
or
xchg
das
cs
mov
dec
add
mov
adc
xor
jecxz
pop
push
jmp
inc
and
jb
into
imul
lret
jbe
lcall
nop
lahf
or
das
icebp
lcall
mov
mov
int3
jge
push
mov
bnd
cli
or
sub
mov
or
inc
dec
push
mov
inc
mov
or
int3
xchg
movsb
mov
fnstcw
fwait
mov
pop
pusha
or
pop
inc
or
shrb
jg
mov
lock
mov
push
in
pop
addr16
cs
push
lock
repnz
xchg
fstl
sbbb
decl
addr16
cs
leave
pop
ret
movups
int
dec
iret
mov
xchg
inc
shrb
inc
xor
sbb
lea
xor
das
cld
decb
insb
dec
mov
cmc
or
add
decl
mov
dec
push
mov
mov
push
or
test
inc
leave
mov
push
pop
or
or
aad
and
mov
mov
push
das
cld
xor
adc
lock
rol
xchg
ljmp
imul
xor
or
xchg
cmp
dec
icebp
std
test
ljmp
es
adc
int3
adc
rorb
xchg
dec
stos
mov
push
lcall
dec
xor
mov
mov
add
lcall
and
xchg
cmp
pop
loopne
sub
fs
iret
movsl
gs
jns
sahf
push
pop
loop
jo
movsb
fnsave
out
and
xchg
mov
fs
and
mov
incl
mov
jge
repz
leave
pop
fsub
pop
cmp
ljmp
addr16
lahf
jle
mov
mov
int
mov
jmp
stos
ret
and
push
mov
cmpsl
sbb
loop
mov
loop
in
enter
jmp
aaa
xchg
out
loop
lods
mov
imul
addr16
mov
mov
out
mov
jmp
shlb
mov
pop
cld
add
leave
or
popa
cli
in
mov
jmp
xor
mov
insb
push
push
pushl
sbb
pop
lcall
loop
jmp
out
pop
fmul
lcall
add
ja
jb
pop
shll
cltd
fwait
add
pop
icebp
jg
in
or
fidivs
xchg
fcomps
in
flds
pop
inc
fwait
pusha
movsl
daa
call
cs
or
sbb
mov
popf
lock
pop
inc
pop
rclb
lcall
int
sbb
in
rcrl
dec
jle
sbb
add
popf
loope
pop
fsubrl
jg
stos
fildll
push
fimull
rolb
xor
data16
lods
jmp
adc
fbstp
leave
clc
fcompl
push
outsl
incl
pop
push
mov
pop
inc
repz
fldt
add
inc
aam
sbb
imul
arpl
pop
push
icebp
lock
sti
fists
rcrb
out
fst
decb
lock
mov
pop
rcr
movsl
pop
cltd
jb
fildl
xor
ljmp
sbb
inc
stos
pop
dec
jo
or
mov
push
loopne
leavew
in
dec
stos
and
mov
imul
inc
outsl
lock
sbb
jnp
dec
pop
lret
gs
lahf
push
popa
jne
les
lcall
xchg
pushf
gs
dec
out
mov
sbb
and
stos
jmp
dec
mov
rcll
cmp
ret
in
adc
inc
loop
out
fstl
inc
daa
out
nop
add
cld
pop
mov
push
nop
push
dec
jecxz
nop
into
leave
push
xchg
scas
jg
push
int
jae
cmp
int3
ds
into
cmc
add
call
push
mov
call
adc
and
jg
dec
xchg
cmp
cs
mov
mov
fsts
mov
nop
sub
outsb
movsb
repnz
add
sub
fisttps
cmp
nop
jne
popa
xor
ljmp
jb
mov
pop
mov
mov
incl
je
mov
hlt
jmp
call
std
je
cmpsb
cmpsl
roll
sub
rcrl
repz
out
mov
lds
mov
mov
mov
mov
arpl
lods
inc
adc
sub
cmp
xlat
sub
jg
jo
pop
jns
add
call
daa
jmp
bound
lods
xor
call
and
mov
jg
mov
lcall
cmp
es
add
adc
shrl
add
std
fbstp
cmp
das
cmp
sbb
jne
mov
push
cmpsb
scas
enter
stos
push
scas
jle
incl
cli
lret
and
push
inc
mov
jg
add
aad
das
ljmp
or
adc
jg
shlb
push
fwait
jmp
xchg
or
sbb
pusha
in
cmp
adc
idivl
out
adc
pop
fdivrs
jp
and
or
mov
pop
in
inc
shl
loope
cltd
or
pushl
push
fidivrs
inc
lahf
jo
push
cmp
inc
inc
loope
add
inc
aad
and
mov
icebp
or
dec
mov
inc
dec
sbb
stos
enter
adc
cwtl
rcrl
cmc
pop
call
xor
shlb
pop
xchg
rol
mov
daa
lcall
mov
push
adc
mov
sub
jae
push
mov
roll
inc
or
inc
adc
mov
and
shll
mov
lcall
movl
and
insl
pop
lds
lret
dec
mov
pushl
add
in
imull
js
cmpsb
add
inc
add
incl
mov
les
adc
push
jg
cli
push
mov
and
stos
sub
std
lret
in
jp
clc
dec
mov
sub
jmp
lds
in
jge
iret
adc
jo
arpl
pop
mov
and
hlt
dec
arpl
jg
incl
ss
mov
mov
pop
push
bnd
xorb
cmp
filds
jo
aaa
and
mov
pushf
or
sub
cmpsb
loope
cmc
scas
popf
cmp
icebp
call
jnp
cmp
testl
movsl
jge
inc
and
pop
pusha
fmul
or
jge
jl
fsubs
jae
jle
adc
dec
gs
jns
and
mov
cmpsb
outsl
hlt
outsl
lock
lcall
jae
fsubrl
mov
lcall
inc
mov
fs
pop
mov
cmpl
insb
mov
test
sbb
nop
jge
dec
xor
lcall
mov
mov
xor
pop
cmp
lea
into
insb
out
sti
cmp
cld
mov
aam
dec
lcall
test
sbbl
jg
sti
incb
scas
outsl
and
sbb
js
mov
inc
lahf
js
adc
scas
loopne
mov
xchg
icebp
mov
mov
sarl
push
or
pop
push
int
push
push
sbb
jno
xor
test
ret
xchg
jns
addr16
outsl
mov
push
ret
adc
xor
xchg
jp
xor
mov
sbb
das
icebp
call
insb
push
pop
xchg
push
fdivr
push
pusha
fisubl
xchg
sub
ss
push
cmp
cmp
pop
add
js
lahf
mov
cmp
lods
stos
push
clc
sbb
out
mov
outsl
sub
fcomip
cmc
mov
xchg
test
dec
les
mov
pushl
adc
ljmp
mov
sub
pop
jno
sbb
mov
es
test
decl
fwait
ret
cltd
insl
mov
jo
icebp
xchg
push
xor
imul
cltd
mov
mov
mov
mov
decl
shll
sti
sbbb
jnp
aad
testb
andl
xchg
ret
sbb
mov
fdivs
enter
ljmp
cltd
rclb
into
pop
xor
add
sbb
test
jb,pn
jg
push
jo
in
mov
lock
xor
push
decl
out
adc
scas
sub
stos
cmc
es
lahf
mov
mov
inc
xor
push
test
push
sub
sbb
xchg
imul
lds
dec
and
lcall
lods
jns
mov
out
cmc
imull
lds
lret
jmp
xchg
sahf
rorl
inc
jp
cmpb
out
dec
pop
ja
fildl
mov
stos
jecxz
mov
pop
popf
iret
in
mov
shll
jg
out
loopne
xchg
add
std
xchg
loopne
push
dec
push
push
jge
cmp
inc
into
or
lcall
push
leave
dec
cmp
fnstsw
or
sub
int
mov
jg
and
out
mov
hlt
mov
imul
or
jecxz
cli
outsl
lock
test
mov
stos
ret
enter
and
mov
loopne
decl
cld
mov
insb
lods
pusha
icebp
xor
scas
test
jle
mov
das
mov
pushl
mov
subl
lcallw
pop
es
clc
call
mov
push
xor
and
std
mov
repz
ljmp
xchg
cmpsb
in
das
push
dec
jge
dec
mov
push
neg
mov
inc
dec
test
orb
lcall
call
outsb
sbb
pop
jecxz
pop
out
insl
pop
pop
mov
pop
mul
icebp
jbe
mov
sti
lock
sub
xchg
mov
int
data16
call
mov
rcr
push
ret
inc
test
hlt
popw
je
mov
xchg
or
fyl2xp1
gs
decl
and
addb
jbe
bound
add
jg
cmp
xlat
push
sub
fwait
cmp
clc
cmp
fimuls
xorl
bound
daa
adcb
jg
decl
mov
and
or
test
push
add
iret
jbe
jno
mov
or
mov
mov
stos
popl
adc
mov
orb
ds
lahf
in
push
js
roll
aas
decl
call
adc
jle
hlt
pop
adc
lcall
fsubs
inc
push
add
clc
jmp
and
dec
mov
sub
lcall
test
cmp
lods
and
xchg
lods
insb
pop
sarb
sub
popf
pop
stc
lcall
push
icebp
jnp
mov
dec
insb
mov
pop
cli
xor
cld
mov
dec
incl
fcoms
shll
push
cmpsl
nop
xlat
sbb
adcb
popf
lods
push
outsb
pushf
sti
iret
out
sbb
call
pop
into
adc
outsb
loope
aad
inc
pop
daa
mov
cltd
ljmp
xchg
push
std
lods
out
pop
xchg
movsb
sub
xchg
loop
ds
mov
jg
ss
sub
test
inc
outsl
mov
jmp
decl
sbb
adc
and
cltd
jl
imul
push
pop
sar
adc
mov
push
xlat
sbb
adc
inc
ficompl
push
cld
dec
sarb
fisubrl
ficomps
pushl
fsubrl
pop
cmp
test
xchg
popf
push
adc
mov
ret
push
jle
incl
xor
repz
adc
push
pop
and
and
jecxz
cmpsb
idivl
decl
in
divb
call
mov
sti
sub
mov
pop
out
dec
lods
call
movsl
test
inc
sbb
mov
adc
inc
scas
pop
inc
lret
jae
in
ja
inc
cs
sub
jge
inc
imul
jne
push
das
icebp
mov
lock
adc
mov
cmp
fildll
adcb
idivb
in
or
push
test
inc
rclb
lcall
inc
sahf
dec
repz
stos
inc
scas
ret
push
nop
ja
xchg
iret
ficoml
aad
add
cwtl
gs
lret
je
jecxz
push
ds
pop
insl
lock
pushl
stos
pop
mov
sbb
stc
add
std
xchg
test
mov
mov
sbb
push
outsl
pop
xor
cs
lret
xor
decl
test
test
lcall
in
enter
lcall
ljmp
inc
jae
mov
and
jne
clc
pop
push
in
mov
mov
inc
nop
pop
jl
call
filds
add
sti
jge
fidivrs
mov
loope
sbb
mov
cmpsl
stos
pop
leave
push
or
jg
js
push
imul
outsb
into
ljmp
push
int3
dec
jecxz
dec
cli
lcall
dec
loope
and
and
aas
or
or
sbb
loope
lahf
cs
dec
test
dec
out
pop
stos
jl
std
jg
inc
and
adc
xor
and
pop
xchg
cmpsl
inc
add
es
daa
jae
das
and
lcall
or
aas
xorl
test
outsl
xor
jne
and
mov
inc
stos
aas
mov
pop
pushf
mov
loop
cltd
inc
pop
call
sbb
or
sbb
mov
cli
inc
das
hlt
adc
inc
test
mov
jmp
fs
cmp
add
pop
call
xor
ret
testl
dec
aam
or
pop
and
call
push
adcb
and
pop
outsb
dec
fldenv
mov
sub
stc
movsb
xlat
jnp
lahf
test
mov
pushf
std
das
jne
pop
push
fwait
cmp
rcrl
decl
leave
ret
sbb
xchg
scas
daa
fistpl
mov
mov
inc
xchg
stos
jmp
jg
adc
jp
jp
mov
cmp
push
aam
dec
jb
pandn
cs
das
xor
add
icebp
xor
ljmp
cmp
es
das
jne
call
dec
enter
pop
pop
pop
andl
call
call
add
movsl
test
leave
pop
mov
jnp
popa
or
mov
mov
stos
lahf
nop
push
je
sbb
shll
jg
jns
inc
lods
xchg
dec
je
std
mov
pop
adc
popa
mov
out
jb
rorl
adc
jle
fstps
roll
jnp
pop
mov
cld
cld
pop
pop
sub
jle
adc
jp
ljmp
mov
adc
movsl
jae
psrld
lahf
shlb
adc
mov
mov
fstps
les
add
mov
ljmp
pop
dec
jmp
lock
les
cld
jmp
add
cmp
dec
cs
mov
mov
setnp
xor
and
pop
imul
cli
imul
xor
mov
cli
lcall
mov
mov
jne
fdivrl
push
jb
push
push
lret
jb
clc
pop
js
mov
xchg
push
jno
hlt
cmp
jl
cmc
jg
fucomip
divl
jnp
xchg
in
jns
xor
cli
xor
pop
insb
jo
jmp
rorl
sbb
fnstcw
loopne
pop
inc
xor
shll
mov
lret
adc
jnp
icebp
or
aam
ja
aas
adc
arpl
call
out
idivl
sub
pop
insl
and
ss
ljmp
inc
icebp
out
in
addr16
sub
mov
mov
hlt
pushl
cmp
xchg
bound
or
jg
sub
in
idiv
mov
pop
stos
push
in
adc
sub
lds
in
ljmp
loop
jb
sbb
pushl
fdivrl
mov
aad
xchg
xchg
sub
adc
jb
call
mov
or
out
cmc
mov
fcoml
and
pop
pop
or
out
jns
pop
pop
dec
aas
jg
jg
pop
sbb
lcall
sub
xchg
out
jae
leave
sub
std
dec
mov
pop
inc
push
rcr
mov
mov
stos
aaa
das
lock
or
inc
dec
or
outsl
adc
loopne
adc
ljmp
jmp
ret
xchg
sub
sbb
clc
sub
pushf
scas
sub
fildll
lcall
jmp
in
mov
cmp
in
lods
adc
or
das
xchg
jmp
mov
in
cli
arpl
add
mov
in
insb
add
bound
fisubl
mov
sbb
loope
std
and
cmpsl
movsb
mov
in
call
sbbl
mov
jno
icebp
sahf
jp
pusha
inc
sbb
adc
dec
test
loope
jo
in
mov
mov
jg
add
xorl
loop
popf
lea
pusha
decl
push
das
movsl
add
inc
jp
jo
in
pop
xlat
or
jb
xlat
inc
divl
gs
fmuls
sub
ljmp
cmpsb
mov
adc
mov
roll
mov
lcall
add
sbb
add
dec
or
imul
and
push
roll
test
mov
call
mov
jae
mov
jns
xor
mov
ljmp
xchg
dec
mov
mov
outsl
jmp
mov
stos
jno
filds
sar
cli
fucomip
pop
jno
add
ja
andl
les
mov
add
and
xor
jbe
idiv
ljmp
mov
mov
jae
cld
sbb
les
cld
cmp
pop
cmp
mov
int
lcall
sbb
mov
fs
pop
cmp
fists
cmc
pop
subl
inc
incl
in
out
pop
sbbw
out
jne
inc
cmc
cmc
clc
sub
jg
cld
jg
cmpsb
sbb
xchg
inc
jle
xchg
dec
push
cli
aaa
push
xchg
mov
jle
iret
cmpsl
mov
out
adc
popf
jae
mov
setb
cmp
arpl
fdivl
push
je
pop
push
adc
scas
repnz
lahf
leave
data16
cmp
mov
jae
sbb
sti
add
mov
or
jmp
incl
adc
mov
dec
sub
pushf
adc
adc
or
pushl
jp
aas
jg
add
pop
jle
and
loopne
aas
or
outsl
std
xor
push
dec
mov
inc
pop
and
sbb
mov
xchg
xchg
push
cmp
mov
iret
jno
pop
pop
pop
lcall
sbb
push
inc
ja
sahf
and
cs
aad
inc
incl
clc
test
aad
and
repz
in
push
scas
sub
cs
jmp
cmp
push
pop
sub
ror
push
xor
ret
xchg
cld
dec
out
js
cwtl
sub
rolb
jb
cmp
arpl
scas
jmp
cld
xor
in
xchg
mov
lret
stos
shrl
aaa
xor
sub
push
loopne
call
les
ljmp
dec
push
hlt
mov
cmp
lock
test
ss
rcr
mov
in
pop
dec
out
mov
mov
jnp
xchg
mov
xlat
or
cld
push
movsl
enter
leave
and
ljmp
inc
sti
aam
inc
fsubrl
sub
adc
xor
mov
push
ljmp
in
mov
sub
insl
xor
cmpsl
cmp
cmp
xchg
pop
sub
negb
mov
call
fimuls
mov
lock
mov
out
push
pop
lea
cmp
lahf
add
std
xchg
jecxz
mov
xchg
lcall
jae
test
jp
out
mov
mov
insl
cmc
lret
sub
push
cli
mov
mov
jb
jnp
xchg
in
scas
dec
sub
add
mov
sub
xor
mov
jae
popa
test
pop
mov
jmp
arpl
sbb
nop
stc
cld
scas
adc
add
mov
or
sub
loope
loope
call
jmp
fildl
sub
lcall
hlt
stos
decl
mov
cmc
push
push
and
int
imul
in
mov
push
pop
decb
in
shl
dec
repnz
ljmp
ljmp
aam
outsl
scas
mov
repnz
dec
inc
fucomip
stc
mov
out
out
loope
ljmp
fimull
xchg
push
shrb
shlb
sar
es
in
mov
fildll
hlt
adc
pop
movsb
in
xchg
loop
ljmp
sbb
sbb
pop
and
repz
mov
push
pop
inc
loope
xchg
inc
js
inc
cmp
fildl
adc
cmp
push
pop
int
and
imul
into
add
sti
add
test
imul
and
push
aas
inc
or
or
push
fld
pop
xchg
mov
decl
call
mov
jne
mov
test
out
sbb
inc
and
incl
lahf
mov
add
mov
or
push
jae
dec
insl
imul
add
call
andb
and
adc
leave
xor
ljmp
icebp
shlb
add
dec
pop
mov
std
jmp
hlt
lcall
les
jl
outsl
js
cmp
lret
cmp
mov
mov
pop
cwtl
dec
arpl
ds
cli
fisubrl
mov
ja
adc
movsb
mov
lcall
mov
dec
xchg
mov
into
xor
mov
mov
outsb
inc
cltd
shlb
insb
inc
sub
push
aad
mov
sti
lods
fs
cmp
aaa
or
shrl
pop
pop
mov
icebp
lock
decl
inc
fcmove
dec
cmp
jmp
call
scas
adc
mov
jae
xlat
cli
add
loope
mov
rorl
call
icebp
jne
push
xor
jno
aam
rol
mov
rclb
rorb
and
sahf
aad
dec
decl
call
adc
jb
repz
sbb
pop
push
js
jmp
outsl
cmp
cmp
inc
push
xchg
bound
sbb
ficompl
push
jnp
icebp
adc
jl
aad
xchg
clc
jmp
jle
js
rcr
dec
lret
jp
notb
and
jmp
xchg
loope
call
xor
cmp
shlb
and
fimuls
or
sbb
mov
sub
xor
pop
roll
jno
pop
popa
aad
scas
loopne
enter
cmpsl
pop
pushl
addr16
xchg
xor
dec
stc
les
or
mov
repnz
fs
fwait
mov
sub
idiv
jmp
cmp
cmp
xor
mov
jg
sbb
dec
popa
pop
loop
xchg
mov
cmp
cmp
push
aaa
sti
adc
lods
push
imul
shrb
xor
dec
shr
dec
cmp
push
lock
int
das
std
call
aaa
lods
dec
inc
sbb
push
repnz
sbb
imul
and
lods
decl
xchg
pop
jbe
jge
sbb
push
push
nop
ficoms
outsl
lock
shll
lret
xorb
pop
jmp
or
das
imul
mov
jp
test
or
test
leave
test
adc
pop
incl
mov
jne
data16
mov
aaa
clc
jle
insl
xchg
lret
cwtl
mov
or
sub
scas
push
int
pushl
psubw
ret
mov
and
out
add
ljmp
add
inc
cmp
sub
es
jo
pop
adcb
dec
lods
dec
pop
mov
out
xchg
xchg
es
daa
lcall
inc
cs
sbb
clc
mov
rcl
outsb
gs
rclb
or
cmp
int3
ja
jg
dec
fistpll
das
add
arpl
movsl
insb
imul
iretw
sub
push
or
cmp
call
inc
and
cmp
xor
mov
ficompl
lahf
pop
jno
xchg
js
xor
push
xchg
imul
call
imul
sub
movsl
pop
add
push
adc
mov
arpl
ljmp
mov
pop
inc
aas
rclb
and
dec
sbb
call
xchg
mov
push
add
les
cmpb
adc
xchg
pop
dec
inc
cmc
dec
js
adc
sbb
outsl
fisubs
cmp
adc
scas
cmp
enter
dec
js
pop
mov
cld
and
imul
xor
mov
jg
and
inc
loopne
shll
mov
jns
mov
jnp
push
daa
popf
in
les
stc
adc
or
jg
icebp
cmp
out
sbb
arpl
imul
decl
dec
push
fs
inc
jbe
mov
add
pop
mov
ljmp
mov
cmc
pop
xchg
jmp
cltd
xchg
cmp
push
loope
aaa
or
adc
sbb
mov
fnstcw
mov
loop
pushf
add
insb
test
sti
fdivl
mov
sar
incl
fwait
test
sub
stc
mov
mov
pop
and
mov
lods
jl
ds
mov
mov
data16
jl
dec
jle
jg
das
cld
mov
adcb
fisubs
mov
xchg
pushl
dec
flds
cmp
cmp
add
jl
call
nop
bnd
xchg
sbb
xorb
dec
mov
repz
pop
inc
adc
cmp
decl
mov
add
jp
mov
les
testl
out
xchg
ljmp
mov
pop
roll
fcoml
adc
pop
lret
imul
pushl
dec
jne
lret
and
push
scas
pop
sbb
scas
xor
sahf
cmp
lcall
mov
jl
xchg
test
push
sub
sub
jae
push
lds
pushl
popa
sahf
xchg
out
iret
cmc
outsl
add
jmp
fildll
pop
sbbl
adc
pop
mov
hlt
inc
add
lock
pop
shr
add
aam
adcb
popa
lock
adc
adc
and
mov
movl
pop
je
imul
mov
push
out
shrl
rorb
hlt
push
fistl
je
gs
push
in
out
push
xor
inc
xchg
xor
hlt
lcall
xchg
in
mov
int
push
sub
test
in
cmp
fisttps
stos
dec
out
in
enter
lea
xor
cmc
jg
mov
lds
movsl
jmp
out
leave
aas
insl
mov
das
sbb
dec
xor
ret
cwtl
mov
inc
hlt
or
or
outsl
adc
xlat
dec
jmp
or
incl
mov
dec
lods
dec
sbb
imulb
jge
fisttpll
addr16
dec
push
decl
mulb
cmpsl
xlat
pop
ljmp
das
cmpl
dec
mov
fstpt
incl
xor
sarb
mov
in
jbe
pandn
fucomip
or
mov
mov
shl
inc
push
call
int3
imul
aam
jns
ss
pop
fcomps
jmp
xor
scas
mov
fidivrl
mov
call
xchg
cmpsb
jmp
loopne
incl
leave
push
cld
ffreep
addr16
es
ljmp
incl
lds
into
ljmp
sbb
lods
mov
or
ljmp
pop
mov
push
mov
mov
jno
sti
dec
decl
cld
pushl
xchg
fisubl
fsubp
fisttpll
sbb
loopne
push
mov
dec
out
das
hlt
lcall
sbb
inc
xchg
mov
call
aad
adc
rol
cmp
pop
ret
sub
movsl
loop
rorb
popf
addr16
adc
andb
xchg
roll
inc
push
xchg
test
lret
ljmp
jns
nopl
cli
sbb
out
jl
sahf
fcmovu
add
ret
inc
and
data16
call
push
mov
stos
outsb
lcall
cwtl
sbb
mov
mov
movsl
mov
jmp
out
js
outsb
xchg
push
sahf
jbe
xchg
pop
js
pop
inc
pusha
sbb
test
cmpsb
mov
mov
sbb
out
pop
xchg
fadds
das
adc
sahf
cmpl
or
xor
shlb
sub
incl
arpl
pop
insb
mov
cltd
or
inc
int
shll
incl
outsb
sbb
imul
inc
sub
push
sbb
pushl
negb
pop
or
push
jl
add
jg
jae
sub
add
ljmp
cltd
add
mov
stc
divb
in
mov
pop
xchg
sub
push
lcall
mov
sbb
loope
loop
es
cmc
and
mov
fidivs
pusha
aaa
cli
add
mov
lea
pop
shl
test
icebp
mov
jge
cmc
call
cmc
jmp
or
pop
scas
imul
test
pop
ljmp
lods
and
xchg
sub
jl
inc
std
lods
mov
xchg
daa
inc
sbb
stos
pop
shr
stos
popa
mov
jmp
scas
call
jmp
sub
in
and
loop
test
not
stos
movsb
cmpb
int3
cmpsw
loope
jg
decl
es
sbb
imulb
pop
mov
popf
std
insb
mov
xorl
fdivr
push
and
shlb
sbb
decl
loope
in
mov
mov
es
loop
out
movsb
es
movsl
cmpsb
push
cmpsl
cmpsb
or
aaa
jp
sbb
adc
movsl
mov
jecxz
jmp
nop
in
or
jbe
or
pop
scas
mov
and
mov
mov
mov
mov
call
or
or
inc
lods
or
scas
mov
test
dec
mov
call
jb
daa
leave
in
inc
loope
das
sub
mov
cmpsl
dec
outsl
mov
mov
test
dec
daa
lret
loope
jbe
mov
mov
mov
loope
loope
mov
mov
rol
cli
jecxz
call
movsb
cmpsl
test
outsl
loop
fistpl
sbb
lock
mov
jmp
out
daa
pop
mov
fs
pop
fisttpl
std
push
loop,pt
adc
sbb
incl
or
je
daa
lods
mov
je
add
cmp
jmp
out
lcall
cwtl
lahf
adc
jle
and
and
adc
rcrl
pushl
lcall
stc
dec
loop
and
jb
cmpsb
imul
cmp
sbb
iret
mov
sub
movsb
add
and
mov
xchg
xchg
adc
pop
mull
mov
lcall
sbb
lret
pop
mov
lahf
adc
xor
xor
inc
mov
out
in
inc
pop
xor
add
cmp
decl
inc
push
test
shlb
push
cltd
repnz
mov
sub
movsl
stos
sub
enter
std
cltd
cmpsb
cmp
add
pushl
cmpb
daa
mov
testb
push
cld
loope
sbb
push
pop
adcl
jns
jge
rcll
xor
cmpl
test
jmp
adc
and
and
outsb
jno
out
inc
add
int3
out
mov
adc
loopne
inc
into
shll
mov
add
inc
ja
mov
push
iret
lret
jg
fucomip
fwait
lcall
inc
dec
shrb
pop
jp
pop
ljmp
incl
cmp
sbb
fnsave
mov
dec
mov
pushl
pop
jbe
cmp
jae
icebp
dec
bswap
xchg
loop
mov
xchg
cmp
sbb
data16
mov
in
jg
stc
shl
xor
xor
inc
mov
pusha
xchg
push
sub
mov
subl
dec
pop
mov
cmp
and
fs
xchg
clc
ljmp
fidivrl
shl
cli
lahf
call
jb
sarl
popa
incl
or
mov
xchg
test
decl
inc
arpl
iret
aas
xchg
mov
sbb
test
test
fwait
xchg
inc
mov
test
mov
ret
lds
jg
pop
push
ficoml
mov
ja
call
cli
jnp
jecxz
or
xchg
xlat
mov
loope
mov
in
mov
pop
jg
mov
in
roll
sbb
or
push
les
idivb
inc
pop
lret
fldenv
xchg
add
rol
test
call
scas
pop
in
dec
out
fldt
fadd
cmp
pop
std
inc
lcall
call
les
mov
add
fsubl
mov
sub
icebp
rorb
std
jmp
pop
xchg
xor
outsb
ret
push
or
push
jo
xchg
inc
mov
push
xor
aaa
js
mov
out
mov
rclb
std
adc
daa
inc
clc
cmp
add
pop
jae
xchg
repz
pop
add
mov
push
les
xchg
clc
incl
mov
call
inc
pop
rorb
pushl
cli
scas
movsl
jecxz
jne
fnstsw
aas
bound
cmp
rorl
jmp
iret
add
insl
jns
nop
pop
xchg
push
mov
or
incl
lcall
or
sbb
jbe
enter
or
out
jg
push
test
js
or
pop
mov
fs
sti
push
incl
cmp
int3
push
iret
jno
ret
nop
pushl
out
and
in
nop
mov
mov
dec
in
xchg
xchg
lret
jno
aad
incl
mov
pop
xchg
jnp
adc
jg
push
pop
jle
nop
je
jnp
lods
push
inc
incl
mov
sarb
or
ds
adc
mov
xor
push
mov
pusha
adc
inc
pop
and
jb
inc
movsl
dec
pop
loope
sarb
loope
movsl
shll
shll
mov
dec
cltd
cs
in
loop
jle
rcrl
pop
and
aaa
pop
arpl
dec
lds
add
add
pop
movsl
jle
inc
cmp
inc
incb
pop
pop
rolb
icebp
fldenv
xorl
ljmp
hlt
jg
jg
and
fldl
inc
pop
mov
push
fadd
and
sahf
or
adc
mov
pop
mov
loope
mov
arpl
push
test
sarl
ficoms
inc
pop
cwtl
pop
sar
pop
mov
cmpsl
out
mov
push
bound
mov
jmp
rcll
adc
pop
mov
jecxz
pop
popf
jb
fwait
xchg
push
push
fwait
ljmp
fmuls
pop
in
adc
mov
pop
add
into
xchg
pop
pop
pop
fcoml
pop
fwait
lcall
stos
mov
sbb
pop
cmp
ljmp
or
xchg
rcl
cmp
pushf
adc
call
add
loop
dec
nop
icebp
fimuls
cmpsl
mov
push
or
or
adc
push
dec
push
inc
fcmovnbe
xchg
lcall
ljmp
mov
adc
sti
push
lcall
add
push
xchg
dec
push
xlat
xor
call
fwait
sbb
pop
push
loopne
enter
mov
adc
lahf
xchg
popw
cltd
fdivrs
fsts
flds
aad
pop
lret
add
movsb
pop
movsb
pop
fstpl
add
cmp
push
in
fldenv
into
pop
and
or
and
sub
or
mov
jmp
lds
xchg
jle
arpl
psrlq
mov
aaa
inc
lret
xchg
sub
dec
pop
push
das
icebp
mov
sub
cmc
ljmp
hlt
movsl
or
rol
and
shll
icebp
push
ljmp
xor
mov
mov
aam
outsl
jo
xor
mov
xor
mov
pop
mov
pop
stc
addr16
jmp
jl
in
in
js
outsl
push
cld
mov
mov
out
lods
out
insb
in
decl
ljmp
outsb
inc
pop
jg
out
cli
sbb
mov
ljmp
lock
cmp
mov
and
mul
mov
jo
movsl
dec
mov
lock
decl
inc
lock
into
call
loopne
shl
loopne
mov
pop
les
js
cld
jmp
adc
loope
inc
in
jmp
sub
mov
xlat
ljmp
mov
sub
and
lcall
jno
aam
mov
ljmp
insl
pop
fisubrs
sub
pop
jmp
jmp
sti
jmp
push
mov
and
pushl
jno
in
outsl
inc
shlb
loope
in
fisubs
xchg
sbb
xchg
cli
call
push
jmp
into
aaa
in
fcoml
outsl
mov
movsl
sbb
cld
xchg
pop
decb
popa
mov
xchg
daa
jecxz
out
add
gs
mov
or
push
loope
jnp
or
mov
in
jg
sub
dec
mov
mov
xor
mov
loop
xchg
sub
scas
stos
cmpsb
pop
dec
adc
sar
incl
in
dec
fadds
sub
dec
loop
adcb
dec
inc
cmc
out
dec
std
aam
dec
push
mov
std
jmp
test
dec
jb
outsb
inc
add
outsl
leave
rcll
xor
in
call
dec
cld
jle,pn
dec
sub
dec
pop
xor
dec
cld
push
decl
test
xchg
fisubs
aad
std
mov
fcomip
push
push
loopne
mov
pop
fs
out
in
lret
addr16
loopne
inc
xor
decl
inc
pop
mov
imul
inc
ror
decl
call
stos
jne
gs
das
xor
or
jecxz
pop
ljmp
cmc
mov
inc
out
fstpt
sbbl
in
push
mov
cmpsb
loop
loopne
mov
in
sar
outsl
lock
or
xor
adc
cmp
scas
xchg
push
cmp
jmp
jmp
loope
enter
mov
pop
and
insb
xor
lea
lock
clc
push
mov
out
addr16
decl
imul
sub
sahf
out
jmp
int3
sub
int
xchg
in
mov
pop
mov
jo
popa
fisubrs
es
or
test
popf
ljmp
pop
es
je
adc
out
arpl
aam
and
sbb
test
push
in
push
dec
daa
push
cwtl
das
popa
enter
or
mov
popa
xor
jg
jg
xchg
insb
inc
in
add
jbe
out
or
jmp
xchg
ss
gs
cmp
pusha
aad
bound
xor
frstor
stos
loop
out
sbb
lcall
xchg
mov
test
cwtl
mov
mov
mov
mov
lods
mov
push
call
jbe
dec
shl
iret
lods
aad
inc
mov
push
jmp
repnz
inc
jo
ds
icebp
mov
inc
jg
jl
es
fldenv
jl
pop
mov
pop
das
fwait
add
pushf
jae
call
pop
call
fsubs
adc
test
test
lcall
pop
ds
add
xchg
cli
inc
movsb
insl
pop
xchg
xor
push
cld
adc
gs
aas
and
pop
lods
movsb
lcall
sbbb
fst
andl
sarl
in
push
fimull
mov
mov
mov
push
scas
xchg
fbstp
popa
pop
xchg
cltd
add
add
call
pop
aas
sub
add
pop
pop
mov
sbb
decl
ja
sti
sbb
ret
fstl
mov
pop
xchg
out
pop
adc
outsl
pop
mov
xor
cmc
or
mov
incl
in
test
nop
push
mov
or
add
jmp
sbb
and
adc
pop
loop
mov
pushf
sub
add
adc
loopne
aad
cmpsb
push
pop
lods
aaa
push
jmp
push
ljmp
push
push
push
inc
mulb
fwait
fwait
adc
xchg
pushf
push
sub
outsl
xchg
push
lcall
mov
aad
popa
int
and
mov
push
sub
iret
divb
sbb
dec
adc
inc
adc
push
in
in
mov
rorb
sub
test
int
xor
mov
call
push
mov
or
popf
stos
jl
popa
insb
mov
push
mov
jmp
xchg
or
out
stos
loop
or
mov
std
lcall
int
mov
dec
or
sub
loopne
push
insl
mov
in
inc
das
mov
cmpsb
adc
mov
lcall
add
call
je
sub
dec
ss
adc
in
outsl
mov
leave
clc
sti
sbb
int
scas
pushf
paddusw
imull
arpl
lcall
push
test
lret
inc
or
pop
aas
dec
out
adc
mov
in
sub
cltd
loopne
push
adc
fucomi
jecxz
mov
xor
or
jns
movsb
xor
jmp
and
js
xchg
leave
jmp
add
jns
or
jmp
sub
into
lea
cmp
and
jp
clc
decl
stc
mov
out
jbe
pop
add
mov
push
or
xor
loope
inc
stos
jecxz
inc
jb
jmp
push
inc
and
xor
cmc
push
push
test
inc
shll
add
lods
addl
jg
pop
inc
lea
inc
sbb
mov
add
mov
jmp
jbe
fsubl
jb
cmpsl
fsubl
test
lret
fildll
test
rolb
or
mov
jg
ret
aaa
outsl
gs
sub
add
andb
xor
jl
sbb
orb
xchg
mov
data16
fistps
adc
lods
cwtl
push
inc
inc
xchg
out
mov
movsl
ljmp
or
dec
and
xchg
jnp
iret
cs
das
icebp
lcall
call
cmp
dec
mov
filds
mov
dec
push
lcall
cli
push
arpl
add
fidivrs
cmp
pop
sub
sbb
fdivs
cmc
push
ljmp
ret
cwtl
adc
mov
lcall
jne
bound
cmc
sbb
pop
and
fildll
cmpsb
add
out
cmp
inc
incl
test
fldenv
jg
lcall
js
jg
add
sar
lds
jle
inc
mov
add
inc
jecxz
je
inc
sbb
push
fadds
cli
incl
pop
sahf
push
insl
push
clc
jg
in
fisubl
leave
cld
decb
lcall
cwtl
or
fcompl
sbb
shl
popf
mov
movb
repnz
push
jle
cld
or
fstpt
aad
push
push
out
mov
lcall
outsb
xlat
js
xchg
mov
cmp
pop
cld
sbb
sub
cli
pop
fcmovnu
ret
mov
decl
sti
test
inc
push
dec
sub
insl
mov
and
call
sarb
call
movsl
mov
push
sbb
inc
fdivp
ja
mov
hlt
sbbl
pop
dec
out
clc
frstor
push
fwait
push
enter
decl
std
test
mov
pop
into
fcmovnb
add
jge
outsb
xchg
mov
cmp
ljmp
pushf
push
ljmp
jmp
fwait
xor
mov
cld
xchg
inc
in
sti
mov
sbb
pushl
or
std
je
repz
fwait
sbb
icebp
ss
mul
dec
call
fadd
mov
vmovups
cwtl
rorl
cmp
hlt
ljmp
jge
push
les
rclb
lock
jo
jo
mov
mov
inc
in
push
mov
stc
xlat
xor
aam
jae
icebp
cmpsl
push
pop
push
lahf
shrb
jg
inc
jno
vandpd
mov
cs
adc
test
adc
inc
sbb
cmp
sbb
lock
xchg
push
sub
pop
cmp
jge
decl
mov
rcll
mov
mov
mov
jae
ja
mov
out
daa
incl
xchg
push
xchg
sub
lods
xchg
iret
xchg
add
pop
ljmp
decl
xlat
mov
ret
adcl
jno
fwait
mov
mov
add
mov
mov
mov
mov
xlat
addr16
lcall
outsl
sbb
lock
or
adc
pop
xchg
jbe
jge
push
js
mov
or
loope
pop
pusha
loope
pop
fistpl
stos
js
lahf
scas
call
fldt
cmc
call
xchg
out
lods
rolb
pop
out
adc
mov
rol
push
push
sub
push
fs
xchg
adcb
stos
mov
lret
in
ja
or
call
and
push
in
fdivs
scas
ret
jnp
cld
mov
mov
mov
pop
test
daa
je
mov
cld
xor
ss
stos
icebp
aad
lods
aam
cmpsb
out
ss
mov
stos
jae
xor
loopne
out
mov
cld
test
xor
stos
adc
mov
dec
inc
cwtl
mov
push
daa
push
faddl
aaa
and
insl
lcall
std
decl
out
lret
test
push
mov
fcompl
lods
in
in
inc
pop
cmpsb
mov
mov
and
repz
mov
ret
mov
ljmp
pop
in
and
enter
fisttps
and
std
xchg
shll
add
cmpsl
fucomp
inc
adc
push
adc
incl
sub
fwait
jno
mov
nop
into
mov
xchg
cli
mov
pusha
mov
mov
or
pop
decl
cmp
lds
jg
and
inc
and
add
jle
inc
leave
sub
mov
outsb
enter
pushl
push
lahf
lcall
int3
mov
bound
jle
icebp
incl
cmp
arpl
popa
pop
jmp
add
stc
add
add
jnp
mov
jae
jbe
movaps
push
ja
add
cmc
cli
and
adc
xchg
repnz
add
pusha
inc
stos
cmp
gs
daa
push
aas
or
stc
loopne
in
cmp
movsb
pop
add
push
sbb
sahf
and
push
or
push
into
mov
add
jecxz
call
cmp
sbb
mov
sbb
jg
jmp
cmp
fistpl
ds
jg
adc
call
negb
test
sbb
cli
cmp
hlt
ljmp
in
dec
pop
sbb
cmc
aas
sahf
xor
rcl
ret
jl
dec
icebp
jmp
insb
nop
jp
mov
imul
xchg
and
jp
mov
pop
fwait
adc
lahf
hlt
xor
cmpsb
or
rcrl
xor
call
clc
aas
mov
in
mulb
sbb
jmp
ja
sbb
xor
pop
mov
notb
push
jnp
mov
mov
iret
xchg
mov
idiv
fsubrl
fdiv
lcall
mov
cltd
push
sub
mov
inc
xchg
hlt
fildl
std
lds
adcb
sbb
inc
xchg
std
fs
pop
pop
push
lret
xchg
sub
ss
aaa
cmp
lods
push
dec
xchg
jae
mov
dec
mov
decl
std
jae
adc
sti
mov
fcomp
adc
ljmp
xor
decl
jo
inc
push
adc
dec
mov
or
mov
jmp
push
pop
mov
lock
ljmp
push
adc
aas
rolb
scas
add
imul
jg
mov
push
or
sti
aaa
push
das
pop
enter
fildl
test
mov
insl
inc
mov
add
cmp
ljmp
sbb
aaa
inc
dec
outsl
add
jns
cmpsb
xchg
clc
xchg
mov
mov
adc
cld
sbb
inc
push
push
lds
adc
push
ja
movsb
subb
nop
das
cld
decl
dec
push
jecxz
adc
push
sbb
mov
incl
xchg
inc
sahf
dec
mov
repnz
or
into
fimull
jp
enter
jg
or
sub
std
sub
or
jnp
push
idiv
pop
mov
ja
dec
mov
or
mov
jg
push
xchg
sub
xor
sbb
sub
fisubs
mov
or
jmp
outsl
imul
pop
daa
nop
mov
outsl
jmp
decl
sub
into
in
insl
adc
cmp
in
mov
add
push
xor
fisubl
ljmp
in
fsubs
pushf
push
imul
movsl
xor
call
push
aas
imul
dec
wbinvd
inc
inc
es
inc
loopne
cmp
je
adc
mov
xor
pop
cwtl
insl
xor
xor
cmp
mov
sub
hlt
jg
incl
aas
dec
adc
or
dec
out
dec
mov
mov
aaa
clc
das
cmc
fnstcw
jne
aaa
dec
pop
or
and
addr16
jmp
ljmp
lret
test
test
mov
aaa
inc
addr16
aad
add
loopne
mov
jmp
mov
outsl
mov
add
mov
or
jle
in
add
mov
xor
jg
push
or
pop
outsl
insl
cmp
pop
add
dec
sar
in
lcall
cmp
leave
inc
jp
xor
or
xchg
mov
sarb
hlt
call
mov
movsl
pop
lret
jno
movsb
push
fdivrp
mov
pop
insb
popa
bound
mov
or
hlt
out
push
movsb
jmp
push
movsl
jge
sub
clc
aaa
scas
ljmp
sbb
rclb
mov
sub
decl
subl
js
test
cmp
in
popf
pop
loop
in
cwtl
fistpl
fidivrl
add
mov
sbb
push
sbb
push
inc
std
mov
sahf
inc
scas
cltd
jge
adc
call
aas
sub
mov
je,pt
gs
or
pop
addr16
pop
sbb
push
fisttps
int3
pop
repz
pop
jmp
dec
sbb
cmp
mov
mov
pushf
mov
lods
sbb
mov
mov
out
inc
jle
mov
fdivs
mov
push
out
mov
jmp
fwait
push
dec
sbb
fistpll
pushl
cltd
insb
sbb
adc
pop
cmpsl
test
fscale
jg
inc
cmp
sbb
lock
mov
inc
pop
test
cmp
mov
pop
jg,pn
push
dec
fldcw
into
inc
les
jle
add
and
pushf
in
fs
call
xchg
je
mov
subb
cmp
push
bound
pop
lcall
mov
jbe
and
push
pop
dec
inc
mov
cmp
outsl
ds
lahf
inc
std
pop
xchg
dec
ret
dec
out
mov
outsl
hlt
pushl
test
js
fidivrl
mov
subl
and
sti
sarl
negl
push
cs
jo
nop
mov
push
popa
cmp
js
add
repnz
xor
flds
cld
mov
sbb
mov
or
subb
mov
cld
dec
outsb
in
pushl
shlb
clc
dec
mov
or
loop
aaa
nop
movsb
in
adc
adc
push
decl
repz
jb
cmp
daa
xchg
jo
mov
jmp
sbb
jge
mov
mov
pop
ds
mov
decl
es
inc
aad
mov
xchg
cld
ja
jae
add
xor
mov
cmc
stc
sar
clc
jecxz
ja
dec
add
sbb
dec
ret
lods
sbb
pushl
into
mov
cmp
insl
add
fistps
lea
xor
xchg
mov
iret
jne
sti
pushl
xor
jl
cmc
dec
mov
mov
mov
or
dec
rorl
aad
in
mov
cltd
outsb
das
or
mov
outsl
pop
scas
std
ret
test
incl
fimuls
int3
push
imul
pop
jb
jmp
movb
decl
stos
stos
dec
sub
mov
test
in
ds
shrl
incl
sbb
icebp
les
bnd
incb
xchg
repnz
cmp
int
aam
call
ljmp
aam
cld
and
loope
mov
mov
std
push
jno
das
xchg
or
sub
mov
jmp
shrb
ljmp
fisubrl
cmp
push
or
xchg
lock
mov
inc
dec
out
test
outsl
hlt
aas
pop
jmp
sub
das
shrb
incl
mov
cmp
dec
push
inc
out
loope
xchg
dec
xchg
jg
call
in
cmpsl
add
into
out
sbbl
or
cmp
rolb
mov
xchg
gs
xchg
jne
fidivs
ret
sub
pop
ljmp
jecxz
pavgb
out
bound
loopne
out
push
push
std
jmp
mov
sub
ljmp
imul
xchg
xor
push
orl
mov
add
add
out
jnp
xor
mov
ljmp
cmp
std
paddusb
fcmovnbe
add
mov
push
cmp
insb
test
push
mov
jmp
jmp
xor
sub
loope
idiv
fists
or
jl
pop
test
inc
jbe
pop
cmp
insl
stc
mov
cs
or
mov
push
pop
mov
mov
stc
lods
mov
lret
mov
loop
sahf
push
rcr
jge
test
sahf
fldl
pop
adc
mov
popf
cmp
cmpsl
dec
jmp
test
leave
fstpl
xchg
inc
mov
incl
divl
jle
push
or
jns
mov
sub
iret
mov
jno
jne
inc
or
and
cmp
xorl
dec
cmp
fistl
icebp
lret
es
incl
leave
sbb
mov
scas
jl
jg
sub
jns
push
ljmp
ljmp
xchg
dec
fiadds
jmp
cmp
je
fcomp
pop
in
jo
pushl
lods
out
lods
sbb
sbb
cltd
inc
or
push
popa
pop
sbb
ds
sbb
xchg
aad
lret
inc
mov
cmp
roll
sbb
lcall
aad
stc
hlt
add
fwait
mov
shr
xchg
movsl
pop
mov
xchg
cltd
add
fbld
pop
mov
outsb
clc
jnp
xor
mov
outsb
sbb
inc
cld
idiv
fbld
jg
in
cmp
aad
add
mov
fnsave
mov
mov
addr16
test
push
sbb
pop
cli
dec
push
sbb
mov
jne
sar
pop
fbld
mov
lahf
push
mov
pop
pop
nop
adcl
jecxz
pop
mov
adc
pop
insl
lock
mov
rcrl
inc
pop
call
int
push
nop
or
mov
mov
iret
mov
mov
rorb
jg
push
and
xor
insl
movlps
adc
mov
inc
cld
adc
and
mov
pop
jecxz
push
mov
pop
push
lods
mov
add
dec
xchg
stos
cmpsl
cmp
shll
aam
jmp
mov
and
push
hlt
incl
or
test
fimuls
je
mov
xchg
out
fdivrp
outsl
ret
adc
pop
and
mov
add
or
mov
fldcw
mov
mov
loop
jg
outsl
push
imul
pop
std
add
out
push
mov
or
dec
hlt
in
rclb
fcompl
scas
fistpl
xchg
cmp
jmp
movsl
adc
in
adc
mov
decl
cmpsb
popa
lret
jl
das
add
or
and
decl
pop
add
mov
add
imul
lea
jg
enter
stos
loop
lods
ret
fsubrl
lock
int3
cld
lret
test
add
xchg
adc
incl
push
cmp
dec
jecxz
les
jl
xchg
ljmp
lock
xchg
notl
or
pop
xchg
sub
sbb
dec
fdivr
outsl
jge
add
punpcklbw
or
push
dec
insl
or
data16
dec
mov
iret
adc
add
shl
loope
popf
xor
in
mov
mov
shll
jge
loopne
dec
loop
and
dec
out
insl
xor
jge
sub
ljmp
mov
jg
addb
insb
dec
insl
test
or
mov
dec
pop
movsb
lahf
es
dec
pop
ret
mov
out
sahf
ret
push
mov
push
fisttps
ljmp
and
into
pop
cmp
adc
pushl
out
addr16
loope
bound
xchg
pop
inc
ret
cmp
lcall
aam
cmp
xchg
movsl
push
sahf
je
dec
sub
outsb
mov
ret
adc
cld
push
out
push
jecxz
aam
jmp
int3
sbb
fnstcw
popa
add
inc
pop
add
cmp
mov
sbb
xor
out
inc
push
add
mov
pusha
popf
mov
lods
pop
pop
dec
in
sub
jb
pop
mov
and
mov
call
idivb
mov
xchg
xor
mov
cmpsl
pop
inc
sbb
xor
push
ffreep
mov
ficomps
bound
add
jl
add
rorb
out
cli
call
lahf
in
in
pop
jmp
out
sti
out
sbb
fisttpll
pop
mov
imul
lcall
insl
mov
adc
imul
sub
mov
les
call
cmpb
jae
andl
mov
pop
sbb
lcall
and
loope
pop
jae
sbb
jl
jg
test
adc
dec
inc
sbb
daa
mov
jg
xchg
ljmp
das
mov
ljmp
pop
cmp
pop
loop
sub
mov
jne
cmp
lods
cmp
jne
pop
call
ret
repnz
xchg
faddl
pop
mulb
lret
shlb
mov
clc
ljmp
arpl
inc
lcall
add
fistpll
mov
cmp
decl
adc
jns
hlt
in
pop
pop
pop
adc
pop
test
sbb
mov
pop
mov
adc
shll
enter
stos
cs
mov
mov
je
lods
push
cmc
outsl
clc
dec
popa
pop
xor
mov
sar
stos
call
sub
cltd
fs
rclb
jg
int3
pop
xor
and
inc
add
shr
les
jne
mov
jmp
sub
add
insl
jno
lret
outsl
shrl
repnz
repnz
insb
jo
cmp
sub
in
mov
pop
hlt
dec
ljmp
outsl
in
pushl
out
call
xor
insb
js
out
jb
jecxz
loopne
ljmp
stos
jne
imul
stc
and
or
xor
ficoml
jbe
decl
sbb
popf
jno
xor
adc
testb
call
or
imul
jle
movsl
add
ret
cmpl
xor
pop
mov
enter
sub
test
out
out
push
sub
fs
mov
ret
mov
mov
or
xchg
inc
dec
adc
dec
xor
mov
sti
ljmp
add
scas
dec
push
mov
jge
ja
or
mov
pushf
add
lods
clc
popa
call
dec
xor
mov
int3
push
fildll
dec
nop
stos
addr16
mov
push
sub
mov
fmull
fdivrs
or
sub
clc
aad
mov
inc
dec
jne
adc
lcall
out
lds
aad
add
mov
mov
xchg
add
es
cmpsb
adc
add
mov
movsl
lods
cmpsl
shll
mov
mov
mov
inc
gs
push
cmpsb
dec
icebp
xor
inc
popf
adc
add
jno
inc
push
xchg
stos
add
ss
subb
je
test
and
shlb
mov
push
rcl
repnz
sar
jmp
mov
daa
fistl
mov
stos
push
jecxz
in
and
cmc
pop
push
call
bound
ret
push
test
loopne
mov
push
push
imul
adc
rol
movsl
inc
outsl
ret
in
xor
sub
sti
das
cmp
jg
movsb
dec
add
cmpsb
mov
ffree
push
in
bound
and
or
pop
inc
dec
mov
cmp
cs
gs
inc
sbb
sbb
xchg
and
jmp
fistpl
lds
mov
addl
cli
inc
xchg
pop
adcb
incb
movsl
es
addr16
jg
dec
mov
inc
adc
cmp
rol
and
xchg
popw
ljmp
lcall
pop
inc
inc
add
xchg
ret
scas
inc
lsl
push
lret
shll
nop
add
das
jl
stos
adcl
gs
das
call
xor
mov
ds
dec
inc
clc
xor
int
pop
lahf
mov
sbb
or
sbb
aas
pushf
ljmp
cld
fistpll
sbb
push
pop
pop
push
pop
pushf
add
std
lea
lcall
ficomps
pop
sti
xor
xchg
sbb
aas
imul
pop
sbb
scas
popa
and
jg
push
mov
sub
int
add
dec
ds
cmc
incl
xchg
mov
and
xor
jge
lock
adc
xor
inc
push
lods
lock
mov
lcall
test
test
jo
xchg
nop
adc
jno
sub
add
push
incl
lock
xchg
inc
test
jno
scas
rorb
jae
call
jb
xchg
cmp
cwtl
add
jecxz
and
sub
stos
pop
mov
stc
xchg
pop
movsl
ss
std
call
adc
fwait
movb
mov
fstp
jo
xor
adc
mov
cltd
jo
sbb
mov
out
mul
mov
xchg
push
movzbl
pop
cmp
hlt
xor
call
mov
or
jne
sti
lahf
push
jmp
xchg
in
lds
sub
cmp
cs
lcall
jge
mov
pop
mov
adc
inc
call
xlat
mov
pop
sbb
call
ljmp
pause
dec
push
fisubrs
loop
or
mov
pop
pop
bound
add
pushl
sub
push
or
sbb
or
test
or
inc
rorl
jno
cltd
or
jae
pop
cld
idiv
call
test
test
jecxz
sub
into
pusha
std
repz
jle
ljmp
sub
xor
cli
pop
lea
iret
not
pop
or
fmuls
repz
rcrb
ja
and
push
mov
mov
mov
xchg
pusha
xchg
or
aad
mov
mov
sub
push
pop
imul
mulb
inc
lret
fs
xor
test
outsl
incl
imul
mov
push
adc
call
repnz
adc
add
inc
cmc
xchg
and
dec
pop
push
loopne
cmpb
cwtl
jb
and
aas
jo
mov
jg
fisubs
in
loopne
nop
and
popa
arpl
inc
jg
sub
loopne
cmp
mov
test
out
sub
jnp
pushl
faddl
or
flds
mov
incl
fwait
sbb
test
pop
roll
xlat
lock
shr
pop
gs
jmp
gs
push
dec
fiadds
cmc
fcmovb
sub
pushf
or
addl
dec
loope
mov
push
mov
out
and
jg
inc
cli
mov
adc
sahf
pop
int3
mov
xchg
cwtl
push
mov
nop
mov
add
pop
lcall
mov
adc
cmp
pop
mov
jg
jmp
sbb
xor
ficomps
pusha
je
adc
mov
push
add
pop
push
jmp
mov
jecxz
ficomps
cmp
sbb
and
xchg
sub
decl
cmpsb
push
movsl
mov
xchg
mov
jle
loop
pop
rcll
call
popf
lock
adc
aad
xchg
int3
mov
fmull
popf
cwtl
mov
adc
ret
cmc
rorl
mov
rclb
push
ret
in
incl
aad
sbb
push
roll
xchg
adc
mov
pushl
cli
jmp
xor
adc
lds
popf
stos
rcll
pop
std
sub
enter
cltd
mov
pop
fistpl
lret
adc
je,pn
inc
add
call
cld
aas
pop
lahf
sbb
pop
jp
fistpl
mov
cwtl
test
fldenv
pop
pop
xor
jge
push
lcall
stos
icebp
out
xlat
dec
push
shrl
cmpb
clc
inc
push
lds
sub
and
add
pop
ret
je
shll
shlb
dec
aam
inc
test
jg
push
pop
movsbl
movsb
fwait
test
movsl
or
les
movsb
mov
fucomp
shrl
divl
xor
incl
push
mov
pop
hlt
aam
std
jecxz
shll
xchg
shlb
addr16
call
mov
ljmp
lods
scas
loope
jae
roll
in
inc
and
out
inc
mov
xchg
jg
ljmp
ja
out
pop
out
je
jmp
push
cli
mov
mov
xchg
hlt
in
jl
in
lods
and
es
out
shl
arpl
decl
mov
fcompl
repz
inc
jne
add
pop
pop
icebp
cli
mov
out
mov
scas
sub
jmp
call
xorl
adc
out
or
in
gs
mov
sub
jmp
ljmp
das
jne
jmp
mov
push
in
sub
or
loopne
in
insl
in
stos
scas
and
jg
int
loop
fnstcw
in
pop
jae
scas
sbb
sbb
fcompl
insl
jne
ljmp
fldl
add
movsl
daa
loopne
out
adcl
in
imul
outsb
jmp
or
or
adcb
out
jmp
jg
out
inc
out
sub
out
int
loopne
fwait
mov
mov
dec
lock
dec
loope
insb
dec
sti
hlt
scas
leave
and
outsl
icebp
jg
mov
loop
cmp
in
dec
cmp
mov
adc
dec
or
xchg
pop
jecxz
insb
dec
sbbb
movsb
popa
mov
dec
insl
outsb
loop
jo
ljmp
cmc
jmp
dec
loopne
pop
ret
popf
mov
mov
test
out
decl
cmp
inc
icebp
push
movsb
dec
hlt
jecxz
mov
scas
bound
jae
lret
imul
pop
and
incl
add
inc
dec
jmp
hlt
xchg
loop
add
jns
inc
xlat
sahf
loope
and
mov
call
mov
and
cltd
test
outsl
jmp
test
inc
pop
fildll
movsl
and
and
icebp
inc
mov
fsubl
frstor
fldenv
pop
sub
fcomp
mov
stos
sbbb
push
pmulhuw
pop
idiv
mov
addr16
mov
imul
jecxz
xor
jmp
loope
arpl
jmp
movsl
xor
mov
icebp
sbb
ja
aaa
jecxz
mov
cld
lcall
lock
loope
test
jb
xor
fdivp
push
cmp
jo
add
xor
decl
cmp
iret
xchg
pop
jnp
jp
clc
sbb
and
cmc
pop
pop
sahf
jne
fcmovnbe
in
pop
shll
jno
jge
jp
inc
fdivr
out
pop
cmp
or
sti
and
fildll
pushf
fnsave
cltd
inc
sbb
sub
hlt
xchg
pop
xor
in
call
icebp
mov
sbbl
dec
fsubrp
dec
adc
insb
pop
neg
in
cwtl
fcompl
dec
in
sub
nop
insb
inc
imul
xor
aaa
inc
push
aam
and
push
push
in
pushl
rcl
push
cmpsb
push
xor
aam
cmpsl
push
xchg
jno
ss
outsb
jg
outsl
fcmovnbe
add
push
jbe
stos
rolb
push
aaa
mov
shl
cmp
and
out
cmp
lret
xor
jbe
fnstsw
cld
sub
mov
aad
cltd
push
xchg
jns
jmp
jg
mov
cmp
aam
mov
js
mov
and
call
rclb
imul
lret
lods
pusha
shrl
mov
xlat
push
mov
shll
xchg
sbbb
ror
xor
wrmsr
das
adc
mov
ficoml
mov
jmp
xor
dec
repz
xor
movsb
or
std
test
decl
clc
xor
decl
push
adc
aam
sub
lods
mov
jb
aad
push
lods
mov
clc
add
add
jne
mov
ljmp
daa
jmp
pop
call
inc
cmpsb
pop
lods
and
jmp
pop
mov
jmp
sbb
incl
push
xor
call
inc
hlt
mov
add
arpl
lods
outsl
icebp
mov
hlt
inc
outsb
xchg
sub
test
repnz
lods
sbbl
scas
add
jg
repnz
sbbb
sub
lcall
pop
jno
xchg
xchg
add
call
mov
lods
or
incl
shrb
icebp
mov
pushl
or
sbb
lret
jg
mov
lods
or
stos
scas
mov
push
test
or
sub
ljmp
test
scas
add
ja
jmp
subl
stos
add
sub
push
iret
ljmp
jp
jl
pop
scas
cld
cltd
and
mov
pop
jb
jl
mov
jge
sbb
add
xchg
decl
movntq
out
test
mov
ljmp
mov
call
adc
xchg
out
mov
call
jmp
jmp
adc
test
sbb
jmp
leave
outsl
movsb
imul
jmp
sti
ljmp
push
mov
icebp
push
mov
push
push
call
in
imul
mov
imul
movsb
out
out
icebp
mov
jnp
mov
ljmp
mov
sbb
ljmp
out
mov
out
mov
push
loope
mov
mov
gs
mov
cmpsb
in
or
lods
mov
add
pushf
daa
xchg
loopne
pop
cmp
incl
fldcw
fs
cmpsb
les
aam
in
mov
pop
pop
bound
call
jg
dec
push
fs
adc
fcompl
loope
call
inc
xchg
add
push
push
add
cwtl
inc
lret
rcr
pop
sub
add
sbb
dec
xchg
lahf
inc
das
ss
add
call
lcall
addl
dec
jnp
movsb
or
movsl
aam
push
out
mov
lcall
adc
es
lahf
int
shlb
adc
jmp
xchg
and
adc
cltd
adc
movsl
jg
pop
pop
into
mov
rolb
push
rcrb
inc
rcll
pushl
or
aad
rcrb
adc
shll
sar
fbld
inc
lahf
mov
adc
popf
sub
lea
test
mov
in
fadds
cltd
push
mov
fisubrl
push
mov
xchg
mov
lock
popf
rcll
pop
rorl
fisttpl
pop
cmpsb
sbb
cld
mov
int
ss
pop
mov
loope
int3
mov
xchg
add
rorl
aaa
inc
cmp
rol
add
out
shll
xchg
mov
jbe
mov
adc
popf
and
call
xor
popf
call
loopne
pop
sbb
pop
lcall
incl
or
call
fwait
popf
fstps
pusha
push
fldenv
neg
loopne
cwtl
pop
mov
sbb
lock
add
nop
fnstenv
lahf
push
lcall
gs
fdivs
adc
or
cmc
rorb
inc
ficoml
jmp
mov
xchg
call
lcall
incl
rcll
xchg
add
mov
xchg
mov
rclb
or
xor
sbb
testb
stos
mov
std
mov
cmpsl
imul
cmpsl
mov
sub
shlb
decl
fimull
inc
jno
jmp
fstl
int3
les
aad
idiv
lcall
pop
ret
stc
sbb
push
and
xorl
dec
mov
aaa
clc
fistl
xchg
mov
xchg
aas
cli
jns
lret
jp
inc
rcrl
lcall
test
imul
add
inc
pop
xchg
aam
and
sub
outsl
data16
mov
repnz
mov
jo
jnp
cmp
ljmp
in
mov
push
lea
mov
or
pop
nop
pusha
push
stc
push
adc
add
lcall
in
loopne
ret
or
imul
mov
outsl
jp,pn
dec
fisubrl
out
outsl
pushl
cmp
jnp
pop
add
add
aas
decl
mov
mov
std
adc
in
jnp
dec
js
aas
add
lock
fbstp
push
mov
sahf
xchg
leave
je
movsl
int
push
stos
decl
mov
add
lea
mov
xor
and
icebp
jmp
ljmp
std
jle
jb
into
dec
lea
andb
mov
ss
mov
pop
xchg
mov
test
ss
sbb
ljmp
nop
and
repz
icebp
rol
repz
addr16
cmc
inc
xlat
and
lret
cltd
and
and
jb
jno
xchg
mov
sub
mov
int
pusha
push
aaa
xor
ljmp
adc
xchg
pop
pushf
imul
or
mov
js
test
cs
test
xor
ret
in
scas
int
xchg
sar
inc
or
ljmp
xchg
sbb
js
imul
orb
mov
shl
fucomip
jecxz
mov
dec
shrb
scas
fnstsw
xor
outsl
fdivr
pop
jle
mov
cld
into
popl
pusha
std
ljmp
insb
sti
lret
jns
sbb
jle
and
inc
jle
pop
mov
fstps
fistps
jae
inc
sub
fildll
insb
test
pop
mov
sub
push
sbb
ljmp
and
mov
adc
sbb
imul
pop
pop
adcl
call
mov
mov
ret
inc
sbb
decl
jg
jmp
mov
stos
int3
push
cwtl
aas
das
popa
shr
mov
cmc
jg
test
pop
sub
cltd
sbb
loop
cli
ljmp
pop
fstpl
out
dec
sub
lea
jmp
push
int
or
mulb
icebp
frstor
outsl
cld
fisttpl
cltd
pop
inc
add
in
rcll
repnz
push
fucomip
xor
dec
dec
and
shrl
loop
mov
incl
and
gs
and
test
and
mov
jne
pusha
push
cltd
dec
xor
xor
std
bound
cmpsb
and
ljmp
adc
xchg
and
daa
adc
lock
push
out
movl
fwait
insl
inc
popa
mov
adc
pop
loopne
mov
es
rcrl
inc
maskmovq
and
pop
lods
adc
bound
pop
imul
sbb
inc
lahf
das
in
mov
int3
sahf
inc
hlt
xchg
leave
shl
mov
cmp
adc
jge
mov
incl
rorl
dec
add
ret
repz
inc
add
inc
fwait
jmp
aaa
fs
pop
sub
sbb
xor
inc
stos
das
lock
stc
mov
jl
cmp
fistpll
dec
sub
jne
in
inc
push
xchg
or
add
decl
imul
mov
push
and
clc
xchg
bound
pop
es
lds
mov
mov
jmp
and
pop
dec
jmp
das
je
lea
pop
int3
shll
pop
ljmp
sbb
xchg
mov
pushf
ljmp
out
std
cmp
pop
inc
dec
sub
add
push
sarb
pop
insl
or
add
jo
pop
stos
aad
add
test
jecxz
shrb
sub
sbb
push
scas
imul
dec
ret
add
test
jg
jnp
jb
jmp
pop
mov
daa
push
mov
mov
insb
add
jmp
pop
adc
stos
fs
cmp
xor
lds
lock
mov
jmp
enter
pop
enter
jno
jp
fisttpl
fsts
cld
mov
mull
cmpsl
aaa
dec
xchg
rcrb
pop
scas
mov
rcll
push
js
xchg
and
sbbl
xor
inc
mov
jg
mov
das
or
or
and
ljmp
movsb
call
and
addl
rol
cli
test
mov
and
add
jb
jns
lret
sbb
call
xchg
and
or
ljmp
mov
ret
xor
mov
dec
adc
adc
insb
ljmp
mov
sbb
in
adc
subl
test
dec
incl
lea
xlat
mov
clc
mov
out
mov
cli
fisttpl
fists
arpl
test
mov
lock
loop
das
stc
pop
mulb
subl
mov
adcb
inc
add
push
pushf
std
fsubrl
jecxz
lcall
or
sbb
push
mov
xchg
cmpb
adc
js
in
pop
push
outsb
cmp
adc
arpl
shl
push
fs
cmp
jg
push
push
sub
scas
sub
mov
mov
sub
rclb
jg
sbb
fimull
cs
popf
pop
mov
shrb
insb
pop
mov
mov
ja
ljmp
pop
or
sbb
push
ss
and
sub
pop
mov
jnp
das
call
movsb
jecxz
incl
les
xor
stc
mov
dec
aas
pushf
mov
mov
shl
icebp
or
mov
imul
movsl
decl
popf
gs
pop
sahf
push
jae
and
add
cli
sub
jmp
mov
sub
add
and
sub
loopne
int
adc
jmp
jmp
mov
pop
mov
insl
test
sbb
jg
mov
lret
sbb
imul
sub
or
cwtl
xor
mov
lcall
lea
and
loope
scas
adc
or
push
cltd
push
xchg
stc
in
js
inc
incl
jmp
push
lods
pop
sub
add
add
mov
sbbb
ljmp
ljmp
push
xchg
cmpl
jnp
mov
or
cli
and
sbb
pop
jae
jge
jg
or
jg
nop
into
jle
adc
ja
out
sbb
xor
incl
jmp
cld
xchg
mov
cltd
xchg
xchg
sub
outsb
popf
jg
mov
imul
mov
test
adc
dec
sbb
mov
cli
mov
das
js
xor
in
or
jmp
cmp
push
jmp
mov
adc
stos
cwtl
aad
lea
or
outsl
lcall
sub
fildl
inc
loope
js
jmp
test
jle
incl
xor
in
out
shll
jb
scas
mov
call
inc
jmp
add
mov
jbe
sbb
das
or
into
push
pop
data16
mov
jb
pop
fisttpl
aaa
xchg
aas
cmp
jl
mov
cmp
ljmp
lea
add
or
aas
xchg
mov
xor
pavgw
call
enter
out
jmp
jg
adc
cmc
push
push
sub
call
sbb
pop
or
mov
cmp
fnstsw
push
lcall
fimull
sbb
dec
jecxz
xor
shll
pusha
shl
push
mov
push
call
mov
repnz
pop
gs
mov
in
mov
sub
in
test
lds
jb
dec
pop
jg
inc
mov
into
icebp
lods
sbb
pushl
pop
lret
addr16
mov
dec
jmp
test
subb
push
fstpt
adc
pop
lret
xor
flds
push
xchg
mov
sbb
pushl
imul
loope
or
push
std
inc
repz
bts
add
pop
xchg
clc
repz
adc
movsl
xor
and
cmpsb
mov
pop
mov
cltd
push
stos
sbbb
and
adc
cmp
sti
push
imul
movsl
xchg
cmp
out
fcmovu
loope
sahf
add
mov
jle
lret
fs
lea
cmp
cltd
das
mov
xlat
outsl
lock
aas
pop
inc
push
test
repz
rorl
sub
sti
ds
aaa
cli
jle
imul
cmpsb
test
stos
lret
cmp
addr16
or
jp
cmc
mov
ret
fs
dec
push
or
jae
pop
cmc
mov
lcall
cmp
enter
jl
fsub
aam
test
xlat
shr
mov
std
in
jg
cwtl
pop
aam
into
jecxz
xchg
pop
mov
jmp
and
ret
inc
xchg
jne
cld
ljmp
push
jne
mov
inc
jle
aaa
xchg
sbb
pop
imul
loopne
shrb
cltd
ss
inc
sub
decl
push
inc
xor
fwait
mov
xchg
inc
setae
loope
sub
mov
xor
mov
jg
cmpsb
inc
fstl
ss
mov
jae
scas
mov
stos
and
push
xchg
popa
mov
dec
fsts
sub
push
and
dec
stos
pop
rolb
jne
and
bound
stc
icebp
cmp
insl
std
push
inc
dec
cmp
xchg
cmp
test
adc
mov
decl
push
sarb
cmp
gs
jle
xor
push
and
mov
push
xor
out
mov
and
mov
xchg
xor
jne
call
in
out
in
xlat
push
add
sub
movsl
cmp
jle
cli
clc
or
cmp
arpl
lahf
pop
loop
lahf
out
clc
mov
sub
ljmp
mov
and
adcb
gs
shrb
dec
mov
sarb
call
lret
or
mov
mov
nop
mov
add
fsubr
sahf
enter
mov
leave
ficoms
jg
fldl
add
mov
scas
cmp
prefetch
or
cs
add
xchg
pop
mov
adc
lret
and
jmp
fnsave
or
inc
jmp
imul
mov
ret
dec
loop
loope
movsl
lcall
or
add
int3
jg
lock
lret
jo
push
scas
icebp
sbb
bound
ror
mov
imul
xor
jo
mov
aas
inc
shrl
pop
ds
pop
cmp
push
sbb
sbb
and
dec
mov
dec
ljmp
inc
ret
sahf
pop
lea
cmp
jg
rcrb
roll
xchg
jae
cmp
jmp
pop
imul
loopne
or
pop
fs
jg
lret
add
add
jae
push
pop
jnp
mov
jno
incl
fwait
push
aas
in
jg
xchg
stos
sbb
adc
or
shl
mov
jmp
lock
lcall
cwtl
mov
mov
inc
dec
xchg
mov
cmp
fldenv
push
push
add
ljmp
icebp
pop
js
and
mov
pop
mov
pop
std
addr16
adc
or
out
cli
sahf
fwait
ss
and
shrl
push
je
loopne
scas
iret
xchg
push
fistl
sub
hlt
mov
test
add
ljmp
pop
jnp
imul
xor
and
lock
icebp
jmp
jg
std
push
pop
push
mov
arpl
imul
mov
add
stos
adc
cli
stos
sbb
sbb
orb
pushl
fidivs
xor
cmp
jae
xlat
ljmp
or
sbb
cmp
jge
icebp
sub
mov
pop
mov
call
sub
adcl
inc
sbb
mov
clc
jg
mov
dec
xlat
inc
sbb
out
xor
imull
pushf
jle
inc
mov
fbstp
dec
addb
cld
ljmp
jp
lds
adc
int3
sub
sub
fnstsw
pushl
add
mov
adc
fildll
jb
sbb
iret
clc
call
cmpsl
repz
and
sbb
arpl
mov
or
test
mov
dec
scas
lret
lcall
mov
ficomps
outsl
cmc
lcall
sub
movsb
inc
add
mov
fcoml
rcr
dec
mov
jge
jno
insl
xchg
mov
call
cmpsb
sti
lock
mov
ljmp
sti
rolb
xlat
or
cmp
mov
test
stos
inc
pop
or
incl
hlt
bound
cmp
incb
imul
pop
outsl
lock
incl
lahf
pop
leave
inc
shll
cs
mov
pop
orl
das
cmc
jmp
shlb
inc
inc
and
mov
outsb
dec
or
dec
sub
jp
decl
test
cmp
icebp
pop
mov
and
ljmp
sahf
add
xchg
cmc
adc
nop
add
hlt
adc
cltd
xchg
ds
fnstenv
jl
mov
adcl
push
out
jmp
inc
or
std
mov
cmp
and
les
xor
xlat
mov
xor
add
sub
pop
jle
push
pop
pusha
or
inc
xchg
loope
call
fmull
xchg
xor
lods
mov
pop
sub
xchg
test
loopne
jg
mov
jl
inc
xor
mov
cld
aad
outsl
lock
addl
and
xor
xor
and
mov
cwtl
in
sub
mov
sub
cs
mov
cmp
das
shrl
dec
popf
lahf
jnp
in
sbb
jmp
cmc
mov
nop
fbstp
pop
fildl
imul
cli
xor
xchg
loopne
arpl
pushf
aad
jae
movsl
decl
add
jp
cmpsl
fwait
aas
fdivs
or
and
dec
sub
jno
push
jbe
addr16
adc
test
cmpsb
cmp
add
fs
xor
xchg
and
in
incl
aad
repnz
hlt
mov
addr16
lret
aaa
jmp
cltd
push
fsts
adc
decl
mov
jne
mov
pop
loop
mov
mov
insl
std
or
cmc
aad
mov
jmp
add
inc
rorb
mov
inc
cmp
mov
sbb
popl
cmc
ljmp
lock
addb
adc
imul
and
pop
mov
add
or
push
pop
in
fs
scas
dec
scas
inc
sbb
mov
es
mov
mov
ret
push
inc
jl
testl
popf
push
adc
pushl
and
mov
daa
ret
sahf
pop
mov
jge
mov
mov
xor
jae
and
or
jg
dec
ljmp
test
xchg
rcll
arpl
inc
jb
xor
mov
das
cmc
and
pop
xchg
fists
jmp
loope
or
dec
mov
mov
pusha
in
pop
mov
mov
fsts
hlt
shlb
or
cld
sbb
aad
daa
int3
scas
mov
mov
sbb
ret
or
xchg
sahf
inc
lock
mov
ret
repz
add
mov
lcall
jae
out
push
dec
xor
popa
lods
cmp
mov
fucomip
enter
sarb
aad
adc
xor
pusha
xor
repnz
xlat
jg
fnstsw
ds
insl
out
sti
ja
push
leave
js
ljmp
shll
or
pushf
push
inc
rcrb
scas
xchg
daa
push
adc
call
imul
sbb
mov
stos
xchg
mov
mov
mov
popf
inc
shr
mov
pushl
aaa
sti
out
and
shr
jae
lods
fsubrl
outsl
or
incl
mov
fs
testl
fs
mov
decl
lea
enter
push
jo
pop
clc
inc
nop
push
lahf
mov
pusha
aaa
push
sub
scas
jmp
ret
movsl
sbb
sbb
lea
daa
mov
stos
fwait
loop
jp
push
mov
lret
sub
jg
pushl
jmp
ss
in
pop
jg
inc
push
cld
cmpl
decl
sbb
loop
popf
in
test
fld
fwait
movl
xor
mov
test
mov
cli
xchg
fsubs
leave
or
push
mov
andl
inc
jbe
sar
mov
pushf
rcrl
mov
insb
sbb
decl
les
add
in
dec
mov
mov
push
push
iret
jge
lods
push
stos
push
dec
lcall
push
cmc
cmp
mov
popa
and
pop
cmpl
dec
cld
sbb
xchg
pop
adc
or
clc
loopne
hlt
xchg
xlat
sbb
daa
cmp
stos
inc
mov
pop
lahf
adc
dec
or
cmp
xchg
andb
lcall
mov
cmp
sub
xlat
sbb
gs
jmp
lds
repnz
clc
test
and
push
in
xchg
loop
fisttps
loopne
cwtl
je
inc
or
movl
push
mov
daa
repnz
and
test
aas
test
jg
into
pop
sbb
lds
call
add
mov
sbb
imul
push
in
sarl
enter
lods
sub
sub
roll
sti
mov
push
mov
cmpb
adc
jb
dec
mov
imul
mov
inc
inc
std
shlb
lea
dec
cli
pop
sbb
adc
aam
adc
lock
mov
xchg
jecxz
pushl
clc
mov
cmc
cwtl
pop
lea
imul
out
lret
ljmp
lcall
ds
repnz
lahf
imul
or
xlat
bound
mov
or
ss
in
adc
adc
inc
sbb
mov
mov
dec
dec
pop
jl
in
ljmp
mov
push
iret
sub
mov
icebp
mov
test
dec
xchg
jbe
sti
lahf
call
jl
jecxz
mov
pop
ljmp
nop
push
test
das
rclb
sti
stos
cmp
loop
mov
fisttps
or
loop
jne
imul
fbstp
pop
mov
hlt
and
adc
movsb
out
fdivs
mov
jle
mov
outsl
mov
jae
shlb
lods
shll
into
jbe
inc
ss
xor
xchg
ljmp
popa
ljmp
mov
ljmp
dec
jo
shrb
frstor
faddl
pop
int3
bound
out
mov
imul
loopne
xchg
pop
sar
stos
jp
dec
lods
lahf
push
pushf
push
mov
push
divl
lea
push
jae
and
mov
shl
filds
mov
add
inc
mov
popa
loope
and
jnp
inc
scas
and
mov
xchg
cmovns
ljmp
call
lods
pop
xor
xchg
push
loopne
lahf
sbb
or
jge
jmp
nop
dec
lcall
outsb
sub
dec
jmp
add
lret
pop
xchg
sub
sbb
or
frstor
pop
adc
int
leave
mov
cmp
sub
pop
shll
xchg
jge
shl
fiaddl
lret
clc
inc
movsl
adcl
mov
push
add
popf
pop
test
xchg
mov
test
adc
dec
jb
mov
push
jmp
xor
push
fcompl
sbb
popa
ss
lcall
push
shld
mov
jno
les
cmp
imul
xlat
push
in
imul
std
jg
push
adc
lock
and
imul
sbb
push
fs
call
out
and
sahf
push
in
xor
adc
mov
test
loopne
fsubl
mov
sbb
xor
movsb
and
in
dec
push
stos
fdivs
add
fstpl
jne
push
adc
inc
icebp
pop
je
sub
xchg
jne
cli
pop
dec
std
jno
or
xlat
pop
repz
imul
rcll
pushl
pop
mov
inc
les
and
loop
lcall
jmp
mov
push
jmp
add
pop
cmpsl
sar
mov
mov
and
push
pop
test
aaa
cli
push
andl
xchg
pop
mov
fcompl
loope
inc
sub
mov
pushf
mov
mov
sub
mov
into
mov
mov
and
jmp
or
hlt
into
in
mov
xchg
movsl
jne
imul
movsl
addr16
cmp
pushl
call
mov
daa
jle
jae
and
cwtl
push
outsl
adc
aad
jg
call
xchg
lret
je
std
jno
je
ja
ret
call
daa
add
xor
mov
fcom
out
fsubrs
mov
dec
push
push
add
gs
sub
xchg
cmp
mov
add
pusha
inc
pop
negl
inc
add
xchg
push
into
sub
gs
into
sbb
push
int
jbe
pop
pop
adc
mov
ret
cli
loope
xchg
mov
sub
jl
xchg
dec
push
call
mov
lcall
rcrb
ret
das
les
jle
xchg
js
mov
stos
call
ds
loopne
mov
lea
mov
lcall
mov
std
pop
add
mov
pop
decl
sbb
icebp
out
fcmovnbe
jmp
enter
and
std
sub
pop
sub
rclb
mov
ljmp
leave
cmp
rcrl
cwtl
hlt
js
jno
ds
pusha
push
nop
xor
popf
adc
xor
jg
and
sub
inc
enter
arpl
ja
cltd
test
push
cmp
fidivrs
mov
mov
rol
mov
push
lcall
ljmp
inc
mov
scas
iret
inc
pop
repz
cld
sub
mov
incl
int3
xor
sahf
in
lods
repz
lret
lods
lock
sbb
dec
jle
fs
cmp
xor
add
ljmp
or
pop
jecxz
pop
ds
adcb
ret
fildl
mov
jecxz
mov
dec
cli
inc
jo
iret
movsl
push
mov
into
or
mov
mov
lcall
adc
mov
andb
pop
cs
sub
push
add
push
push
or
incb
and
ljmp
push
sbb
mov
fwait
daa
cmp
popf
pop
loope
xchg
cmp
das
pop
jmp
arpl
sbbl
les
lret
xchg
mov
mov
fidivrl
icebp
outsl
adc
mov
cmc
mov
cmp
and
push
dec
jle
jp
cmp
sar
push
mov
adc
in
or
sub
clc
pushl
inc
push
loope
pop
clc
jne
js
push
inc
ljmp
inc
aaa
mov
pop
add
out
js
push
dec
jl
pop
cld
movsl
mov
int3
fxch
xchg
cmp
push
adc
cltd
jg
dec
ret
pop
mulb
std
adc
lahf
arpl
mov
xor
daa
ljmp
jg
mov
xchg
push
mov
int
movsl
sbb
inc
popa
aas
subl
leave
jbe
cmpb
jae
arpl
inc
hlt
fs
repz
fisubrl
dec
cmp
sub
jno
pop
js
jbe
push
mov
rcrb
sbb
sbbl
cld
mov
xchg
mov
fldt
popa
xchg
and
pop
mov
cmp
incl
rolb
mov
insb
jle
jp
push
bnd
dec
jmp
push
mov
and
insb
jl
xchg
repnz
pushl
sub
movsl
jl
ja
lahf
cltd
inc
push
movsl
mov
lcall
jmp
loope
sarb
sbb
orb
cwtl
aam
mull
mov
mov
aam
ret
jl
repnz
mov
cmp
clc
decl
jle
insb
mov
sub
xchg
adc
xor
sub
or
xchg
or
add
jno
and
xchg
pop
mov
in
movb
sar
outsl
add
sub
subb
jecxz
pop
loopne
lcall
jp
dec
or
rcrl
lcall
bound
call
ljmp
fiadds
cmp
dec
pusha
jne
dec
mov
jmp
nop
mov
outsl
je
jp
shlb
sahf
pop
jae
mov
into
mov
std
fdivs
cli
sbb
cmp
xchg
inc
sub
ret
lods
jb
cmc
jmp
addr16
outsb
aaa
ficoml
ret
xchg
lock
sub
push
fistl
scas
imul
jp
xor
into
imul
fiadds
mov
loop
jge
call
mov
jl
test
outsl
xchg
cmp
loope
pushf
inc
sbbb
sbb
test
jb
mov
push
jge
push
imul
es
mov
loop
cmc
pop
jnp
inc
lcall
xchg
js
pop
fmul
or
add
ror
sbb
ss
test
sub
cli
out
and
out
loope
push
ja
jno
decl
insl
lahf
stc
pop
aad
pop
mov
mov
in
jbe
test
jp
lcall
sub
aam
xchg
fucomip
mov
lods
cmpsl
mov
inc
mov
mull
sbb
dec
sub
mov
out
cmc
cmp
fistps
mov
into
outsb
and
ljmp
scas
push
xor
mov
jp
cmp
clc
leave
sti
imul
jae
and
call
pop
add
mov
push
les
imul
hlt
inc
jg
mov
xor
lods
cwtl
loopne
xchg
push
movsb
push
repnz
inc
pushl
vminsd
push
pop
xchg
pop
fisubrs
fisubrl
mov
sbb
fnstcw
push
and
sub
dec
movsl
idiv
mov
mov
stc
cmp
incl
xlat
jmp
push
push
cmp
push
and
aas
push
sub
and
test
mov
call
cmpsl
jno
xor
hlt
stos
sub
jmp
mov
xor
xor
jb
pop
scas
je
pop
std
cmp
mov
xchg
aaa
imul
cmp
ficomps
mov
fsts
sar
mov
push
or
mov
mov
mov
jp
ret
rolb
ja
daa
jnp
test
sahf
push
stos
mov
mov
icebp
rcll
inc
loop
sub
mov
pop
test
add
mov
cltd
test
ljmp
loop
sub
push
add
icebp
sub
cmp
xor
push
iret
fcmovne
les
xchg
sbb
xor
jns
hlt
lret
push
in
ljmp
cs
dec
ds
subb
inc
dec
xchg
lret
push
inc
xor
push
push
ljmp
pop
mov
ja
stos
hlt
sbb
out
scas
dec
into
aad
jg
je
mov
push
adcl
in
pop
sbb
add
popl
outsl
incl
andb
psubq
lret
adc
jne
cmpsb
lret
jmp
cmp
nop
or
mov
cwtl
out
mov
movsb
popf
jl
dec
lahf
sbb
leave
mov
mov
mov
push
fs
adc
loope
xor
inc
out
mov
add
fwait
push
lcall
std
lods
or
push
jbe
clc
push
add
sub
jmp
scas
mov
sahf
out
dec
mov
xchg
mov
adc
sbbl
dec
adc
in
push
test
sub
popa
lea
outsl
cmpsl
jg
ret
js
aam
call
cmp
enter
sbb
sahf
ljmp
inc
inc
lahf
sbb
punpckldq
fistpll
add
push
vcvttps2dq
call
mov
push
or
jb
mov
jp
ljmp
sub
xchg
dec
testb
pop
mov
mov
arpl
pusha
popf
dec
xor
shr
std
jge
nop
lock
aad
clc
decl
loop
sahf
stos
sbb
jns
add
add
outsl
jg
sbb
jno
lcall
hlt
mov
push
xlat
outsb
mov
scas
pop
addb
test
stos
cmp
xor
jg
jmp
jno
jnp
push
push
mov
call
std
rorb
xor
popf
pop
mov
imul
mov
sub
out
mov
jno
and
nop
pusha
int3
add
pop
enter
inc
and
addr16
and
mov
sub
mov
call
daa
test
stc
push
jb
xor
or
daa
test
push
xlat
loope
adc
js
dec
mov
jmp
cmp
out
insl
jae
nop
rcrb
incl
mov
ss
push
jns
call
fdivrs
pop
adc
xor
rcl
jnp
decl
lods
pop
in
sub
nop
xchg
mov
xlat
int
fadd
push
cmpsb
iret
fadds
pop
ljmp
ds
or
ret
dec
adc
or
fstl
out
jl
sub
decl
sahf
outsl
scas
popf
lret
cmp
fcoms
fmuls
inc
and
adc
cmpsl
test
pop
sub
xchg
testl
mov
jp
dec
fwait
jg
fisttps
and
jl
push
lcall
ds
paddw
scas
push
outsl
std
jg
call
aad
ljmp
xlat
inc
mov
mov
or
jge
adc
adc
loope
addr16
icebp
shrb
jmp
pop
out
lock
jle
and
clc
xor
ds
roll
movb
lea
lahf
shr
mov
rcrb
push
dec
pop
cli
cmp
fidivrs
jg
xchg
push
rcll
lds
jge
pushf
xchg
xor
push
pop
sbb
decl
std
test
outsl
es
add
push
test
stc
push
call
xor
adc
mov
addr16
mov
shrb
mov
mov
es
aas
ret
fistps
mov
pushf
ss
leave
int3
fs
pop
adc
adc
decb
push
das
cmc
sahf
dec
jle
pop
push
pop
cmp
lea
push
xchg
add
mov
push
push
jne
cmp
stc
cltd
mov
arpl
pop
movsb
fiadds
adc
mov
jle
js
nop
stos
decl
int
loopne
jns
fnstenv
cmp
stos
mov
inc
cmp
xchg
mov
cmp
pusha
mov
int
push
sbb
mov
mov
inc
call
data16
fldt
movsl
jl
pop
addr16
repz
in
sub
add
mov
xchg
cmpsb
imul
pop
mov
mov
mov
inc
lea
push
jg
jge
jp
lock
dec
subb
lods
mov
loop
clc
xchg
sbb
fldt
jmp
loop
xlat
mov
rclb
push
jecxz
sbb
jecxz
xchg
icebp
popa
stos
adc
mov
cmpsl
rorb
mov
jp
popf
test
inc
mov
jecxz
mov
enter
jmp
sahf
setg
xor
adc
mov
pop
out
xor
mov
adc
fimull
fstl
sbb
fs
and
clc
inc
pushl
movb
sub
mov
sbb
jmp
push
mov
push
mov
jno
inc
pop
into
or
or
add
movl
cmc
pusha
mov
hlt
out
out
mov
cmc
xor
fstps
push
mov
fisttpl
dec
mov
cmp
ss
mov
mov
xor
nop
and
jp
cld
jg
jg
scas
shl
test
frstor
mov
orl
std
incl
push
imul
iret
pop
fwait
clc
xchg
lea
pusha
pusha
xchg
push
mov
jmp
inc
int3
cltd
cmp
mov
cmp
mov
jnp
cli
sub
repz
jg
aaa
aad
inc
scas
repnz
pop
in
cld
test
cltd
inc
movsb
insl
dec
jo
push
push
mov
adc
gs
roll
es
sbb
adc
dec
ss
cwtl
divb
adc
or
dec
push
xorl
mov
sbb
iret
fldcw
pop
fs
cmp
test
dec
push
clc
bound
lcall
mov
ljmp
scas
sub
pop
nop
mov
mov
xor
ds
cmpsb
xlat
adc
in
ljmp
mov
stos
inc
movsb
mov
cmpl
mov
push
mov
pusha
push
jbe
and
cmp
stos
in
mov
stos
ds
sub
add
nop
sub
les
rorb
or
dec
sub
or
or
xchg
mov
ljmp
ret
clc
push
out
inc
imul
stc
add
jb
test
or
xchg
stc
sub
js
jge
push
addb
stos
mov
push
pushl
or
or
push
pop
outsl
and
pop
xchg
xchg
inc
sar
push
sbb
ret
xchg
ljmp
inc
jg
sbb
mov
xchg
xlat
xchg
dec
addr16
enter
pop
in
jg
dec
xor
insl
lret
sub
cmpsl
push
xor
adc
inc
mov
jmp
inc
xchg
into
gs
jl
test
dec
push
sbb
mov
in
insb
xchg
das
cmc
push
dec
sbb
pushf
xor
dec
repnz
or
aam
lock
cmp
rcrb
xchg
cmp
test
js
jno
mov
je
add
or
lcall
inc
enter
push
xchg
pop
inc
pushf
or
fucomip
lret
adc
jo
adc
fs
cwtl
or
mov
or
test
dec
orb
mov
sub
xor
lcall
test
ljmp
cmpb
jnp
cltd
jne
in
cmp
stos
fcomps
sbb
xlat
pop
out
xchg
and
call
cli
orl
into
iret
stc
rolb
jl
out
lea
mov
decl
push
stos
push
sahf
stc
sbb
jp
rorl
jo
push
loop
mov
insb
mov
jmp
xchg
addr16
xor
jbe
jl
mov
out
inc
mov
incl
xor
lods
jb
imul
nop
test
decl
cmpsl
scas
mov
inc
imul
cs
mov
fs
sbb
sbb
pushl
test
ljmp
push
mov
jg
and
js
nop
mov
mov
ror
xor
pushf
fs
outsl
push
pop
mov
pop
xchg
roll
shll
inc
push
mov
test
and
das
xchg
push
mov
jecxz
addr16
xor
mov
stc
pop
mov
mov
push
sbb
cmpsl
subl
addl
jb
repz
push
in
mov
mov
inc
jbe
mov
test
push
pop
pop
cmp
rcll
xor
sbb
xchg
call
loopne
xchg
test
mov
cmp
xor
jg
sarb
mov
xor
jmp
data16
pop
jp
inc
cld
xor
push
fstpl
sub
stos
inc
int
int3
ret
or
cld
sti
sti
sub
popf
incl
xchg
fstps
or
mov
imul
mov
push
sub
inc
mov
jg
pop
cli
jb
les
xor
mov
sbb
sarb
pop
out
jmp
xlat
mov
in
sbb
jg
ret
jecxz
mov
dec
push
adc
shl
decl
insb
mov
or
dec
js
fldenv
sub
lahf
scas
into
into
decl
jmp
mov
fcmovb
mov
mov
xchg
push
cmpl
es
outsl
icebp
movsl
cmp
mov
adc
sbb
jae,pt
sbb
push
shlb
sarl
fildll
cmp
cmp
jmp
push
insl
cmp
mov
lcall
jnp
int3
inc
lods
stc
cmpsl
mov
and
cwtl
je
jle
hlt
dec
jae
jbe
movsb
cwtl
add
stc
ret
pop
xor
mov
cs
sub
cli
outsl
inc
arpl
sarb
aaa
lock
add
psrlw
stos
sahf
dec
adc
inc
lods
mov
call
and
shl
sbb
jbe
fbstp
pop
les
dec
stc
xchg
and
mov
lcall
add
jmp
mov
or
cs
cmpsb
adc
push
jge
adc
add
in
ret
loop
cwtl
dec
mov
popf
jg
daa
mov
xlat
in
pop
cld
incl
repnz
xor
adc
ficoml
pop
inc
mov
shrb
sbb
ret
int3
aad
jg
jge
pop
mov
iret
sti
lret
call
pop
adc
dec
cmc
outsl
icebp
decl
jle
popa
out
jae
clc
addr16
loopne
mov
insb
lods
xchg
call
das
push
push
jmp
sbb
bound
pushl
sbb
ror
fisttpll
data16
jle
sub
mov
and
sahf
adc
jp
mov
mov
cmp
inc
sbb
lock
out
pop
sti
dec
sbb
pop
das
mov
mov
pop
pop
testb
cmp
popa
decl
adc
sub
lar
out
inc
lret
jg
cmp
fsubr
in
cmp
rcrb
mov
sub
nop
inc
shrb
out
mov
pop
dec
popf
lods
sahf
mov
sti
insl
and
arpl
inc
or
jecxz
push
test
xlat
adc
inc
divb
enter
cmpsb
and
mov
sbbl
call
or
aas
sbb
clc
aad
insl
xlat
in
ljmp
cmp
arpl
mov
sbb
outsl
js
lret
pop
in
pop
test
call
mov
pop
mov
stos
call
lea
lret
test
jne
mov
incl
out
bound
jae
mov
in
xchg
xchg
add
push
std
pushl
xchg
jmp
inc
mov
shll
jno
inc
out
pop
inc
sbb
mov
fcoml
inc
scas
cmpsl
mov
jge
sub
fdivrs
push
fwait
jnp
pop
lds
xchg
stos
jl
dec
mov
js
ds
scas
aam
lds
mov
jle
out
lcall
jg
xor
js
cmp
arpl
subl
ljmp
icebp
decl
pop
dec
aas
pop
loopne
cwtl
jnp
aas
popa
les
mov
push
mov
dec
pushf
cmpsl
clc
fildll
stos
idivl
ficomps
lods
test
sti
xchg
mov
cli
popf
rol
jo
ret
xchg
cld
jg
out
mov
js
std
sub
movsl
shrl
push
mov
hlt
xchg
xor
adc
inc
push
add
aam
jp
in
sbb
cwtl
pop
jmp
push
jbe
lret
mov
adc
cmp
call
push
xor
cmpsl
or
pop
outsb
icebp
imul
jmp
popa
sub
dec
mov
in
cmpl
sub
and
iret
cmp
jp
mov
arpl
sbb
ret
lret
dec
jbe
shr
add
ljmp
sub
es
stc
outsl
adc
popa
shll
mov
jae
fcoms
xchg
push
out
cmp
clc
push
dec
leave
leave
mov
and
and
add
mov
push
pop
jl
fcmovu
dec
lcall
push
jp
pusha
xchg
dec
mov
sub
pop
leave
mov
lahf
push
mov
fisubl
jmp
ds
xchg
jns
sbbl
inc
and
adc
jne
jno
ret
push
js
jns
mov
insb
in
mov
enter
cmp
loope
rcrb
lds
push
les
mov
cmpsl
ret
mov
or
and
fdivrp
pop
test
and
out
dec
dec
out
and
js
push
jno
or
stc
lret
push
into
dec
mov
fdivs
test
mov
mov
rclb
lret
cmp
xchg
call
repnz
bound
orb
jp
je
push
pushl
dec
sub
add
nop
cmp
cmpsb
cmpb
cmc
cwtl
mov
hlt
call
adc
xchg
imul
mov
ffree
int
cs
adc
cmp
mov
jg
das
call
sbbb
mov
xchg
jmp
divl
jg
call
inc
mov
subb
in
insb
subb
decl
mov
mov
test
mov
push
adc
inc
inc
movsl
and
or
stos
iret
mov
lcall
push
mov
pop
inc
out
into
sub
popa
xor
insb
add
call
gs
outsl
lret
sbb
xor
int
sti
mov
shl
loop
add
pushl
and
repnz
imul
repnz
ret
test
lcall
sub
shrl
inc
pop
andb
mov
and
mov
incl
hlt
andb
and
push
fisttps
mov
fmull
icebp
xchg
adc
sbb
jg
dec
push
and
dec
andb
aas
mov
sub
mov
xchg
fisubrl
dec
mov
ja
cltd
or
and
addr16
jle
cmpsl
sub
jns
and
daa
nop
mov
push
inc
call
in
mov
sub
push
out
push
jmp
mov
ljmp
mov
loop
inc
cmp
cli
ljmp
fstps
ret
shlb
aad
jbe
sub
iret
ss
add
xchg
push
jge
dec
movsb
into
cmp
repnz
mov
jb
add
mov
not
inc
jmp
sbb
sar
pop
fiaddl
sub
lcall
fwait
mov
and
xorb
cli
je
xchg
ret
das
add
fisttps
cmpsb
xorl
leave
aad
dec
cld
jmp
lds
inc
testb
lcall
adc
fisubrs
ljmp
rorl
outsb
push
movsb
mov
sbb
inc
outsl
insb
cmc
aaa
push
imul
mov
dec
data16
ljmp
call
and
notl
sbb
dec
or
nop
inc
xor
lock
sub
shlb
push
sbb
decl
pushl
adc
insl
out
cmp
stc
push
test
stos
call
mov
xchg
cmp
xchg
push
mov
jg
dec
xchg
push
jb
xlat
dec
icebp
adc
call
fs
in
jbe
cmp
sub
in
pusha
sub
andb
mov
add
sub
mov
xor
mov
lods
push
loop
push
nop
xchg
sbb
outsb
js
lcall
andl
inc
mov
xor
jno
clc
sub
ret
psadbw
imul
into
pop
mov
ja
mov
nop
mov
js
xor
aad
cli
pushl
push
iret
jnp
enter
inc
lds
adc
ljmp
js
jp
cltd
jb
mov
stos
mov
mov
cmc
js
cmp
fisubl
mov
xchg
cli
inc
jmp
bound
js
inc
jecxz
cld
mov
or
push
and
ds
ljmp
jp
jbe
lcall
cmpsl
pop
cmp
in
mov
lret
and
sti
pop
add
cli
movsb
popa
fcompl
sub
ffreep
out
cli
mov
and
pop
jno
mov
insb
icebp
jmp
pop
lcall
loop
xchg
push
mov
rcrl
clc
xchg
xor
add
add
stos
push
iret
sbb
dec
xchg
jno
add
mov
adc
incl
dec
dec
mov
push
dec
movb
inc
adc
jnp
jnp
jnp
xchg
jg
mov
syscall
jge
stos
cmpsl
pop
mov
cli
push
sbb
imull
cmpsb
cmpsb
or
xchg
popf
rolb
jge
jg
ljmp
pop
icebp
lret
jb
dec
sbb
insb
mov
jl
into
sbb
dec
cld
call
xor
js
int3
mov
push
cs
decl
xchg
or
sbb
cld
pop
idivb
mov
cmc
call
cs
loope
add
xchg
sar
in
cmp
mov
std
cmpsl
loope
mov
sub
pop
adc
adc
aam
pop
aas
aas
adc
sub
pop
decl
std
outsl
inc
jnp
pop
mov
pop
cmp
movsw
fwait
add
das
mov
ljmp
sbb
stos
icebp
adc
adc
xor
cwtl
popa
mov
push
mov
jmp
inc
sti
sbb
mov
repz
mov
shll
mov
mov
test
test
xchg
mov
adc
mov
scas
and
dec
jg
push
or
movsb
aad
and
sahf
mov
sub
xchg
cld
mov
pop
xchg
or
sub
sub
stos
mov
add
inc
sbb
aad
mov
enter
dec
adc
adc
cltd
loopne
inc
jns
shll
mov
das
sbb
sub
fstps
adc
or
mov
idivl
xchg
scas
jb
xchg
pop
mov
and
std
dec
or
inc
pop
inc
aaa
mov
orl
mov
fisttps
stos
pushl
sub
mov
jecxz
xor
call
icebp
fildl
inc
cmpsb
stc
daa
pop
push
fwait
ret
mov
js
lods
imul
insl
movsl
movsl
lcall
std
cmp
push
das
js
adc
arpl
dec
imul
ljmp
dec
mov
call
push
sbb
mov
mov
and
fistpll
in
jg
sub
cld
test
lea
shl
cs
daa
xchg
loopne
rcrb
lcall
mov
or
movsl
and
cmp
cmp
lahf
or
iret
fisttps
ljmp
outsb
cmc
inc
xchg
mov
dec
pop
rcrl
pop
neg
mov
jbe
lods
or
fcmovnu
inc
pusha
sub
jne
nop
fcoms
aas
jmp
gs
jnp
sub
mov
dec
or
cld
jmp
sbb
jne
andb
out
mov
push
mov
cli
sbb
jl
xor
hlt
int3
ss
mov
call
adc
push
xchg
xor
xchg
bound
idiv
call
inc
loope
leave
das
fs
push
arpl
xor
mov
jmp
call
cmpsb
mov
cmp
es
mov
int
cmpsl
enter
mov
bound
call
lahf
repz
sti
push
loopne
push
cmpsb
pop
cmp
jge
mov
xchg
repz
aaa
lcall
movsb
shll
clc
push
cmpsl
mov
jg
stos
jle
test
and
int3
or
push
xchg
sbb
jno
lcall
into
push
lahf
andb
into
mov
sbb
clc
decl
decl
cmpsl
out
aad
cltd
rorb
xor
dec
testb
pushl
orb
sbb
icebp
cmp
int
jecxz
popa
loopne
xchg
clc
call
cmp
pop
xchg
das
sub
int3
push
jle
stc
add
adc
call
das
repnz
push
inc
dec
and
cld
dec
xor
daa
jmp
insl
lcall
mov
jp
pop
xchg
push
jecxz
loope
mov
scas
mov
add
cld
ljmp
mov
xchg
push
lea
cmp
push
pop
fnstenv
jl
cli
pop
dec
aas
aad
loop
in
aam
xchg
mov
ret
ljmp
lcall
test
xchg
test
and
imul
xchg
cmp
jb
repnz
dec
fldt
mov
mov
out
dec
and
loopne
in
aaa
ret
or
mov
jmp
insb
enter
xor
mov
divl
out
decl
dec
pop
mov
pop
mov
or
lea
xchg
pop
add
xlat
adc
cmp
jns
jns
testb
mov
shl
outsb
xor
inc
jns
push
cmp
aam
sbb
pop
cmp
fwait
scas
jecxz
stc
pop
cli
outsl
and
push
sub
orb
incl
rcr
or
mov
divb
cmpsl
sti
imul
xchg
mov
xchg
test
shll
jo
jg
mov
daa
insl
fistpl
lret
pop
cmp
cmp
out
shll
cli
mov
dec
dec
fsubrs
sub
enter
fisttpl
add
sbb
stos
test
cmp
std
jge
lcall
sub
in
mov
addr16
inc
pop
mov
mov
jp
insb
movsb
add
and
outsl
cld
lods
jmp
sbb
testb
jg
push
sub
adc
stc
mov
push
mov
sbb
sbbl
jns
ret
outsl
sahf
add
cld
pop
loop
int3
mov
hlt
je
addb
lds
cmp
lods
push
adcl
lcall
lea
in
dec
out
out
pop
enter
fidivrl
in
xor
decl
inc
pop
ret
loope
xor
xlat
fs
mov
cmp
or
jne
and
push
fwait
sub
dec
cld
das
jge
add
or
or
out
data16
loop
mov
addr16
insl
xchg
xchg
cwtl
dec
daa
jbe
mov
mov
sar
xchg
xchg
jbe
popf
mov
je
pop
push
mov
test
cmp
mov
lahf
xlat
mov
pop
pop
sub
lods
push
movsl
cmp
adc
icebp
sub
jg
xchg
aad
ss
inc
hlt
adc
dec
daa
adc
std
bound
jmp
pushl
pushf
mov
adc
enter
or
movsl
adc
add
mov
icebp
test
jnp
push
cmp
sarl
arpl
sahf
jg
aam
sbb
in
inc
dec
fwait
xchg
rolb
pop
add
call
xchg
jl
aam
cmp
fnstenv
decl
sub
test
icebp
and
mov
lcall
lods
sbb
call
or
dec
lods
into
in
cmpsb
ds
enter
pop
loop
adc
out
outsl
dec
sub
dec
xchg
pop
stos
xchg
call
xchg
or
push
idivl
shlb
add
fisubl
fwait
ss
imul
call
leave
flds
das
sub
out
xchg
out
cmp
mov
mov
cltd
xor
cmp
lods
int
ljmp
cmpsb
out
int3
mov
inc
xchg
xor
es
add
push
je
dec
movsb
jle
fnstsw
cwtl
repz
lock
scas
loopne
test
mov
decl
inc
bound
push
sub
jns
inc
mov
lds
or
push
test
cmp
push
or
sub
pop
divps
js
mov
inc
incl
cld
mov
dec
pop
sti
or
xchg
cmpsb
adc
movsb
hlt
lret
cli
das
mov
ljmp
ret
loopne
sbbb
arpl
dec
enter
and
jg
pop
xor
lret
mov
movsb
in
mov
jmp
icebp
sar
jmp
popf
xchg
adc
dec
push
xchg
push
mov
mov
and
jl
dec
fs
push
je
jg
sub
outsb
adc
push
addr16
jl
loopne
add
mov
das
stos
ficoml
mov
add
or
inc
xor
xchg
and
sub
es
or
xchg
mov
mov
cmpsl
sbbl
call
mov
xor
imul
cmp
lcall
mov
incl
dec
idivl
lds
ret
lahf
leave
test
mov
lret
sub
pop
aad
loopne
shrb
mov
xor
xlat
jmp
lret
movsl
jg
jle
jne
xor
sbb
lahf
xchg
pushl
xchg
outsb
aaa
out
stos
mov
into
call
outsl
dec
mov
sbb
push
add
mov
loop
mov
or
aaa
clc
call
gs
aas
xor
notl
add
fistpl
data16
cld
call
pop
push
xor
push
into
mov
aaa
aaa
hlt
out
movups
fxch
pushf
call
push
repz
jnp
orb
into
mov
hlt
cmpsb
lods
aas
repnz
jbe
in
and
int3
and
icebp
mov
cmpsb
mov
add
into
jns
push
push
xchg
clc
incl
add
lods
pop
ret
xor
mov
xchg
ret
orl
inc
call
jno
frstor
cmp
and
jbe
jmp
decl
xor
test
xchg
sti
aam
lods
ja
int3
mov
adc
inc
push
inc
shlb
push
mov
in
cmp
push
ljmp
add
jno
cmpsb
daa
jb
push
inc
imul
subl
imul
decl
xchg
int
inc
xor
aad
mov
cmp
rcl
xchg
cli
call
or
jge
lea
ror
xor
cmpsl
das
or
xlat
xchg
sub
xchg
popa
jne
pop
mull
dec
inc
add
call
lret
jmp
sar
scas
mov
sbb
push
pop
dec
jg
jns
mov
cmp
in
sub
cmp
pop
std
ja
addb
and
loope
inc
movsl
or
jo
scas
insl
test
pushl
cmp
push
sub
pop
and
into
inc
cmp
in
ljmp
jns
xchg
mov
ljmp
insl
jbe
outsl
cmpsl
cmpsb
inc
outsb
pop
lcall
mov
sub
shlb
xor
lds
jns
xor
jno
loope
dec
fs
and
and
dec
push
xchg
sbb
jp
mov
ja
push
es
decl
cs
mov
xor
lds
sbb
popa
enter
aad
jp
leave
xlat
cmp
cmp
mov
test
popf
lods
adc
pop
jbe
adc
cwtl
ficompl
mov
loopne
aam
outsl
mov
repz
adc
pop
inc
repnz
xchg
pop
out
out
dec
mov
push
loope
stc
xchg
jg
mov
lcall
fildll
loopne
jnp
dec
movsb
or
dec
int
aad
jns
js
outsl
mov
aam
cli
ss
xchg
or
cmp
aaa
clc
decl
test
outsb
idivb
inc
fstps
mov
fucomip
jmp
fcompl
dec
iret
scas
cld
sahf
ja
pop
inc
mov
arpl
inc
pop
inc
imul
and
sub
pop
pushf
pushf
bound
mov
rcl
cmp
daa
and
bound
aas
hlt
outsl
aad
xor
push
insl
cmpsl
insb
sub
adc
js
cmp
fwait
aas
xchg
imul
test
mov
lret
popf
scas
outsl
mov
movsl
lea
jg
fcmovbe
test
xchg
jbe
jmp
leave
adc
and
in
shll
mov
in
push
inc
and
mov
aam
and
ret
sahf
shl
xlat
mov
sbb
pushl
pushf
xor
call
adcb
repnz
test
mov
mov
xor
cmc
cmp
ja
adc
addr16
jnp
dec
inc
das
fstpt
stos
lea
fistl
test
and
mov
shll
jg
out
repnz
sbb
or
mov
jecxz
into
inc
push
pop
rclb
je
jge
jg
jge
xchg
sub
mov
or
sub
mov
decl
outsb
bnd
std
cmp
mov
pop
xchg
mov
pop
add
ljmp
pop
adc
cli
je
mov
lahf
mov
sbb
scas
sub
add
call
js
cwtl
xor
adc
xchg
outsl
aaa
push
push
cwtl
les
mov
sub
std
out
sbb
int3
out
sub
daa
push
fadds
outsl
cmc
jmp
cmp
jne
xor
stc
xchg
pushf
sbb
stos
imul
decl
mov
cltd
adc
clc
jns
ret
fwait
pop
sub
jecxz
xchg
dec
call
int3
sub
push
je
inc
out
lret
xor
dec
mov
sbb
ljmp
cmc
mov
jo
adc
cmp
repnz
out
in
shrl
or
xor
ljmp
inc
mov
pop
pop
mov
xor
lds
mov
arpl
pop
loopne
cmp
std
pop
popa
or
lcall
stc
adc
jecxz
mov
or
adc
stc
in
int
mov
mov
xchg
cli
call
dec
fs
int
sbb
adc
pop
dec
aam
or
xor
call
sub
push
mov
in
xlat
xor
cwtl
mov
cmp
cld
call
call
jl
loop,pn
mov
arpl
aaa
clc
decl
and
mov
xchg
and
cld
add
cwtl
sub
lret
hlt
jnp
ss
xor
push
inc
enter
lds
sbb
inc
cmp
jg
outsl
outsb
mov
mov
xor
stos
xlat
shll
mov
jbe
sub
jmp
adc
mov
shlb
cltd
xchg
dec
sarb
or
ljmp
out
call
cmpsl
ds
dec
xor
lods
shl
movsb
or
ljmp
aam
add
loop
push
aas
or
pop
ret
jmp
cmp
xchg
insl
pop
test
dec
or
mov
push
pop
or
leave
fildl
cli
lret
cmpb
mov
cli
fistl
jge
pop
push
ds
mov
push
dec
lahf
adc
ljmp
inc
pop
fistpll
mov
xchg
pushf
fcoml
lods
mov
inc
divl
xor
push
push
push
or
cmp
and
add
incl
cld
ljmp
xchg
adc
ss
jae
add
jp
sub
insb
or
inc
test
sub
mov
jg
testb
hlt
mov
dec
sub
jns
lret
or
movsb
out
inc
clc
inc
sti
mov
mov
idiv
rcrl
ljmp
rol
push
andb
adc
dec
lcall
adc
lret
dec
xchg
xorb
ss
fwait
dec
insb
xchg
jmp
add
dec
mov
in
lock
xor
or
enter
imul
pop
lock
mov
ljmp
pop
es
xchg
and
inc
aas
add
add
mov
incl
ljmp
jmp
adc
sbb
inc
ffree
and
sar
xchg
push
dec
lds
incl
xor
jg
jp
and
jne
mov
mov
mov
daa
rorb
lcall
arpl
dec
test
bswap
sub
push
js
mov
pop
in
jmp
and
xchg
inc
les
and
aaa
in
pusha
pop
imul
sbb
andb
cmpb
popa
jae
push
inc
je
lret
adc
push
xor
inc
imul
or
dec
roll
pop
js
cmpsb
add
push
call
xor
jp
rorl
sub
call
test
lret
adc
repz
mov
jl
fisubrs
fwait
cli
stc
add
mov
out
xor
fstpt
inc
xor
je
cmc
fildll
decb
fsubp
ja
fsubrs
xchg
sub
mov
inc
ljmp
das
ds
xchg
sarb
mov
push
and
mov
inc
sbb
inc
loop
loop
js
add
sar
mov
add
cmc
lcall
jp
cmp
push
fs
xorl
pop
insl
stc
ljmp
inc
xor
or
fadds
dec
loop
idivb
dec
add
cltd
outsb
pop
mov
lock
mov
sbb
lcall
fstl
int3
push
rclb
inc
push
and
shll
mov
xchg
mov
ret
xor
mov
jmp
fnsave
movsb
jns
or
mov
jg
movb
xchg
rep
cmc
fnsave
adc
push
in
adc
sbbl
pop
push
fcmovu
pop
outsl
mov
fsubr
push
inc
xchg
add
pop
jg
mov
mov
int3
push
test
dec
and
cltd
push
xlat
or
call
dec
stos
mov
adc
xchg
fnsave
outsl
add
push
push
sbb
mov
jmp
mov
lret
xor
dec
lods
xchg
fucom
lret
aam
decl
inc
leave
pusha
ficoml
pop
push
mov
fwait
or
int
scas
and
jg
mov
mov
lods
push
mov
aaa
mov
mov
inc
jp
dec
add
cli
cld
mov
aam
idivl
bound
decl
mov
jb
imul
jg
jmp
xchg
adc
inc
dec
push
cmpsb
xchg
push
cmpsb
mov
push
xor
iret
fcoml
decl
pop
in
cmp
adc
push
out
add
pop
cli
push
daa
lret
cmp
and
outsl
add
sub
xor
loop
dec
inc
cmc
adc
jnp
aaa
cli
mov
out
mov
aas
jns
mov
ljmp
add
jns
scas
int3
adc
xchg
lock
and
adc
aaa
jmp
jno
ss
stos
js
jl
adc
jo
mov
adc
lods
pop
mov
sbb
je
sbb
pop
and
ret
jg
idivb
sub
cs
insb
mov
push
bswap
cs
lea
stos
test
push
pop
mov
btc
clc
jns
pop
sbb
adc
push
mov
das
aad
ja
cltd
sub
add
dec
push
ljmp
scas
mov
scas
sbb
cli
das
cld
gs
dec
xchg
adc
imul
call
jnp
push
jle
cmp
test
pop
adc
int
xchg
xchg
ficoms
mov
pushl
daa
mov
mov
aas
fldenv
add
out
mov
nop
mulb
push
jp
incl
loopne
or
fstps
add
add
test
repz
cmp
pop
imul
mov
dec
add
jmp
jmp
xor
rorl
sar
call
loope
push
arpl
push
dec
sbb
arpl
xor
movsl
cmpsb
dec
push
sub
push
repz
cs
fsub
push
imul
stos
inc
repz
or
inc
sub
jge
das
mov
mov
mov
add
decl
mov
jnp
sahf
and
or
dec
andb
jno
std
ljmp
int
frstor
cmp
or
xor
adc
shlb
mov
sbb
lret
mov
sar
aaa
clc
repz
and
pop
mov
dec
fisubs
ss
das
add
add
gs
jno
outsl
lds
lea
lods
push
mov
sbb
lea
fwait
sub
push
shrl
add
and
adc
gs
jae
xor
inc
lock
ret
das
std
fwait
ja
leave
or
cmp
adc
push
and
cmp
jnp
pop
mov
inc
decl
mov
lods
xchg
addr16
aas
daa
lret
int
mov
mov
aaa
adc
aas
mov
clc
ljmp
lret
jmp
sbb
mov
ljmp
je
mov
xor
inc
leave
lods
mov
or
int
jg
xchg
fidivrs
into
ss
mov
cli
xchg
lds
xchg
xchg
pusha
sub
or
mov
pushl
lahf
cmp
push
mov
xchg
mov
cmp
fidivrl
call
pop
add
add
sbb
sahf
xchg
ljmp
mov
or
scas
or
outsb
cmp
inc
inc
lea
inc
cmp
mov
std
incl
enter
push
test
adc
and
jmp
push
std
ds
xchg
add
into
cmpsb
idivl
rolb
shll
or
mov
mov
cwtl
and
test
ljmp
push
xchg
push
adc
dec
shll
cmp
pop
or
xchg
aam
xlat
int3
hlt
add
push
les
sub
lret
popf
nop
jae
test
pushl
shrb
cwtl
push
std
outsb
subb
test
or
lcall
hlt
mov
jmp
pop
dec
in
inc
shlb
lea
loopne
lcall
or
pop
cmpsb
mov
cli
test
or
xor
lock
decl
xchg
movl
xor
pop
cmpsb
lods
mov
je
and
cli
pop
push
popf
or
into
mov
cmp
mov
add
out
hlt
xlat
cld
pop
cli
pop
or
lds
ficoml
icebp
pushf
xlat
aas
mov
test
or
mov
add
mov
dec
jmp
push
lods
push
mov
inc
mov
mov
ja
lret
aam
in
pop
mov
sub
pop
imul
push
pushf
sub
fstps
xor
jecxz
inc
ljmp
jg
cmp
hlt
rcrb
stos
jp
jl
stc
pop
clc
mov
cltd
or
jl
pushl
mov
lahf
and
jl
dec
xor
incl
sti
jno
xchg
lret
jp
daa
or
shl
iret
popf
hlt
jo
mov
cmp
cmp
stc
dec
cmp
lahf
addb
mov
push
imul
pop
jle
mov
lea
jg
or
sbbb
pop
clc
mov
int3
nop
imul
outsl
insl
push
hlt
cld
cmpsl
lret
aaa
mov
jg
int
mov
enter
lret
and
jmp
adc
jg
lahf
xor
add
xchg
loope
pushf
push
pop
pop
cmp
add
jmp
int3
push
mov
and
mov
pop
xchg
fcomps
sub
ljmp
movsl
ljmp
mov
arpl
cmp
add
aaa
jb
adc
es
pushl
incb
lret
push
and
mov
and
pusha
lds
push
ljmp
xchg
or
xchg
inc
xchg
call
outsl
sbb
pusha
xchg
xor
mov
rcll
fimull
mov
fisubs
cmp
sub
das
sbb
call
call
imul
repnz
test
lods
or
iret
clc
mov
and
push
mov
sbb
mov
push
lcall
jge
pop
jo
shl
pop
push
adc
popa
xor
lcall
push
fdivrp
cmp
mov
push
idivl
insl
jmp
cmpsl
out
pusha
sbb
aaa
push
jnp
js
call
push
popf
add
jecxz
into
mov
pop
scas
mov
sub
xor
mov
xor
cmp
dec
push
mov
cmpsb
add
cli
in
lret
js
xchg
push
mov
out
cld
call
int3
in
jmp
jecxz
mov
pop
add
xchg
popf
cmp
pop
inc
jg
decl
sub
mov
arpl
mov
ljmp
push
aad
push
xchg
ljmp
lret
fstps
mov
scas
fnstsw
incl
jo
inc
movsl
jl
stos
dec
imul
test
mov
pop
decl
icebp
jbe
js
jecxz
mov
push
in
adc
mov
lcall
fs
dec
and
fists
fwait
mov
xchg
imul
add
lcall
loop
dec
pop
cmpsl
or
incl
or
sub
jl
out
fcompp
das
and
jne
cmpsb
jbe
xchg
pop
out
movsl
test
outsl
add
sahf
pop
les
loope
push
and
icebp
push
mov
cli
inc
jns
or
push
shll
pop
xor
mov
cs
test
mov
lods
push
sbb
jle
addr16
cltd
stos
jecxz
decb
sub
pop
push
leave
loopne
stc
mov
mov
lea
pop
sub
cld
data16
fst
test
sub
lcall
mov
cmp
addr16
jle
cwtl
mov
and
test
pushl
sub
pop
insb
mov
stos
mov
xchg
adc
mov
notl
call
inc
shrl
outsb
loop
jle
test
sahf
in
mov
test
add
icebp
pushl
pop
in
jb
jb
lods
stos
lret
aad
sub
or
das
mov
and
push
pushf
ja
mov
mov
adc
push
in
negb
push
mov
jns
adc
jg
lea
mov
mov
aad
call
sbb
vmwrite
stos
lds
dec
mov
jbe
icebp
loope
dec
ret
inc
jne
data16
cmp
add
ljmp
shr
mov
jp,pt
mov
dec
push
ljmp
or
sti
mov
pushf
and
jge
outsl
std
lcall
pop
into
mov
cmp
sahf
jl
std
cmp
mov
mov
mov
adc
add
add
jmp
xchg
leave
enter
idivb
es
movsb
push
mov
pop
ret
cld
hlt
mov
sahf
xor
jmp
sbb
xor
sub
add
push
inc
xchg
stos
jmp
xchg
xchg
dec
lcall
outsb
cli
jne
movsl
mov
test
pop
xor
push
xor
push
sub
int3
sti
sub
fisubs
ljmp
mov
lcall
inc
adc
mov
mov
mov
rorl
repz
imul
push
xor
repnz
hlt
inc
mov
or
fs
cmp
push
ljmp
cld
loopne
in
jg
or
mov
or
xchg
dec
filds
mov
jg
pop
call
or
idivb
out
std
fisubrl
sti
into
scas
mov
or
cmp
ja
jns
push
cmp
movsb
push
inc
and
add
pop
mov
push
mov
outsl
nop
push
ljmp
dec
mov
pop
mov
sub
pop
mov
ljmp
jecxz
shrl
and
cwtl
mov
sbb
idivb
in
lcall
gs
jge
xchg
rcll
int3
pop
in
repnz
iret
mov
lea
nop
jb
push
je
in
jg
jmp
iret
idivl
push
cli
jns
arpl
sbb
loop
ljmp
lock
xchg
daa
adc
push
lret
sbb
add
pop
pushf
xchg
mov
movsb
add
or
arpl
jb
frstor
dec
pop
ss
call
ljmp
lods
pusha
in
mov
shll
lret
out
or
in
incl
or
or
push
pop
in
and
jbe
in
pop
das
fdivrl
test
inc
flds
mov
loop
push
out
push
adc
mov
std
inc
es
lock
call
mov
inc
aam
test
test
ds
stos
les
xor
sub
repnz
cmp
sbb
mov
mov
pusha
pop
xlat
or
hlt
das
cmc
ljmp
add
lods
stc
test
std
dec
call
sub
sbb
fstps
sub
iret
stc
mov
call
ljmp
mov
pop
pushf
lods
mov
pop
not
jo
dec
jae
decl
or
pusha
lock
lods
shll
push
pusha
or
push
call
mov
push
and
mov
cmp
int3
and
daa
add
and
lcall
xor
xor
sub
or
fwait
shll
mov
ret
int
ret
adc
cwtl
mov
mov
pop
enter
cmp
lods
and
xlat
pop
imul
mov
mov
dec
xchg
or
test
sbb
inc
mov
mov
mov
out
pop
cmpb
loop
dec
push
jge
rcr
das
icebp
add
pop
insb
orb
cmc
mov
inc
mov
decl
dec
dec
inc
outsl
in
dec
sbb
xchg
lock
jmp
or
in
mov
sbb
int
clc
rep
lcall
push
popa
inc
jae
cmc
cmc
adc
mov
jne
mov
std
test
ret
loope
mov
sahf
xor
lcall
adc
pop
outsl
cmc
decl
imul
lcall
into
arpl
ss
decl
cld
cmpsb
add
cmpsb
xor
pop
and
fldcw
mov
jns
in
mov
cmp
fbstp
cmp
mov
dec
inc
lret
mov
incl
pop
and
sbb
add
pop
adc
pop
imul
cmp
pop
mov
and
mov
mov
cltd
shrb
je
cld
cmp
inc
stc
ljmp
popf
cmp
aam
pop
push
movsb
jbe
push
mov
xor
cmp
mov
push
fcompl
inc
cwtl
push
adc
sahf
popa
inc
or
leave
jo
aad
push
decl
insl
cmp
sub
test
push
mov
dec
ds
popf
or
add
nop
ja
xor
adc
ljmp
cmp
mov
int3
or
sar
jno
dec
pushf
or
push
icebp
outsl
cmc
and
mov
scas
in
push
shrb
or
gs
or
jns
orl
fstpl
xchg
js
sbb
call
into
and
mov
jo
enter
dec
xchg
fwait
sub
mov
ror
scas
inc
negb
push
in
mov
adc
sub
xchg
pop
cwtl
cmp
movsl
mov
sub
loope
jg
pop
inc
loope
inc
movsl
mov
lods
sub
or
add
lea
cmc
mov
sub
and
mov
cmpsb
sbb
outsl
sbb
pop
xor
cltd
testb
shl
sbb
push
stos
mov
std
dec
xchg
loop
cltd
sub
int
clc
jmp
adc
dec
inc
jg
call
arpl
mov
and
adc
or
pushl
outsl
stos
xorb
repz
inc
lds
call
cmp
sbb
xor
jno
xchg
sub
mov
fwait
xlat
cmc
lcall
test
loop
fwait
leave
hlt
daa
jl
mov
xor
mov
test
nop
outsl
jno
outsl
lock
aas
mov
push
jb
insb
std
push
shrl
inc
ljmp
push
xchg
xchg
and
stos
outsb
cwtl
or
fmuls
lds
mov
jmp
int3
sbbl
pop
fmull
sub
mov
fwait
stos
xchg
jae
sbb
and
pop
call
jmp
icebp
push
add
scas
jg
and
ret
lods
pop
mov
xlat
mov
lcall
push
lea
dec
cmpsl
call
rolb
or
xchg
mov
lret
movsb
lea
sbb
xor
sbb
outsl
cld
jle
adc
decb
pop
ret
inc
add
aaa
jecxz
cli
bound
dec
lods
sub
xchg
movb
enter
ss
inc
test
or
imul
mov
jmp
mov
mov
sbb
mov
jl
inc
xorb
std
fists
pop
or
add
pop
sbb
cmc
outsb
inc
shl
or
enter
cmc
ljmp
rorl
int
inc
aas
inc
push
lret
adc
ljmp
pop
in
incl
mov
sbb
inc
dec
mov
or
lret
loopne
shll
clc
ljmp
lods
mov
mov
add
mov
jne
int3
out
xchg
dec
cmc
xlat
push
notl
cmp
push
cltd
lock
dec
fsts
lock
adc
sbb
inc
decl
mov
dec
sub
inc
rcl
dec
cld
pop
cli
sbb
gs
cmc
pushf
dec
das
imul
fldcw
cwtl
adc
sbb
out
mov
test
ficompl
cwtl
jl
lret
in
lcall
lcall
in
mov
pusha
repz
mov
adc
sub
rclb
out
mov
push
mov
std
jae
push
add
testl
out
das
mov
fisubrl
cmp
fs
cmc
push
loop
je
cmp
nop
clc
inc
lcall
mov
call
pop
mov
jns
mov
pop
shrl
pushl
dec
push
cmp
xchg
minps
data16
mov
mov
push
mov
int
adc
push
sub
push
push
bswap
es
and
xchg
movsl
push
jg
cmp
sub
scas
push
sbb
hlt
pop
decl
pop
adc
inc
or
or
cwtl
dec
and
dec
pop
inc
je
and
lcall
int
cmc
fnsave
dec
bnd
mov
lcall
imul
std
jg
xchg
clc
xor
jo
push
shll
movsb
xor
inc
dec
movsb
inc
scas
push
jmp
scas
mov
mov
xor
pop
ljmp
add
mov
out
dec
adc
rcl
push
mov
jmp
add
mov
lret
neg
out
mov
cmp
push
cmc
xchg
and
aaa
cmp
test
mov
das
hlt
or
int
push
fwait
lret
mov
in
jg
test
pop
or
xchg
sub
cmpl
dec
pop
pop
inc
movups
sar
ljmp
jno
loope
pop
dec
mov
add
xchg
xchg
test
cmpsb
sti
rcrb
push
mov
lret
mov
adc
das
pop
fwait
and
jg
loop
hlt
notl
jne
and
cmp
cwtl
jg
mov
cmp
inc
popl
adc
icebp
loop
jmp
xchg
cmp
or
sti
in
fwait
daa
mov
loope
rol
movsl
mov
lret
or
ja
call
je
sti
jmp
and
xor
mov
sbb
jmp
mov
push
mov
cmpsl
pop
movsb
or
sub
int
inc
sbb
cmc
sub
in
jg
add
pop
mov
add
nop
outsl
pop
jno
lock
push
mov
push
cld
jl
inc
sahf
pop
dec
jno
or
aaa
arpl
or
popf
pop
sbb
pushl
scas
mov
xchg
adc
fcmove
adc
mov
das
dec
dec
out
icebp
jmp
gs
push
adc
int
mov
pusha
xor
fnstsw
insb
pop
inc
jmp
pop
popa
popa
mov
jle
sbb
movsb
scas
cld
pop
popa
jmp
testb
out
mov
sbb
inc
icebp
popa
in
pop
xor
popf
jno
insb
andl
cld
call
push
ljmp
movsb
xchg
sub
cmp
enter
jmp
and
aas
stos
adc
jg
jbe
es
subb
pop
push
bswap
fiadds
loopne
aas
cmp
inc
xchg
fsubl
or
outsl
lds
imul
mov
jge
inc
pop
aam
icebp
incl
sbb
testb
mov
popf
inc
mov
jp
xor
call
rclb
mov
xchg
pusha
call
cmpb
dec
daa
dec
inc
call
mov
cmc
out
lods
adc
mov
pop
sub
mov
sbb
ret
xchg
push
sbb
cs
out
or
cli
push
dec
pop
rcl
test
xor
pusha
mov
decl
xchg
xor
lods
daa
add
mov
inc
sbb
icebp
insl
psubb
imul
mov
movb
popf
push
je
xchg
fwait
aaa
jg
ljmp
mov
addr16
int
daa
inc
and
les
popa
scas
mov
call
ficomps
les
cmpsb
mov
ja
test
lock
pop
call
mov
ljmp
pop
lods
inc
popf
or
loop
cmp
or
and
lea
inc
stos
adc
fildll
fs
xchg
loop
jg
out
pop
fcoms
aam
popa
xor
jno
cs
test
xchg
mov
push
outsl
cmc
pushl
ss
arpl
lock
addr16
add
or
cmp
pop
clc
dec
out
xchg
loope
ss
pop
in
push
in
jns
in
push
out
lock
add
adc
call
lcall
imul
cli
subb
fnstcw
mov
mov
inc
fsubrp
lea
pop
mov
add
aaa
clc
bound
ss
mov
ds
fnstsw
dec
xor
push
mov
mov
push
repz
iret
cmp
push
jmp
adc
fists
jns
mov
les
jmp
xchg
push
pop
nop
lcall
stos
pop
mov
repz
addb
inc
mov
out
and
xchg
lea
and
jg
jmp
cld
dec
mov
mov
add
shlb
and
test
outsl
sbb
pop
jae
mov
jnp
mov
dec
push
sub
mov
adc
in
lds
pushl
js
push
ds
rcrl
xchg
mov
pop
je
idiv
push
lcall
dec
movsl
insb
roll
cmpsl
dec
loop
scas
push
outsl
push
imul
mov
pushl
sub
mov
and
movsl
pop
add
mov
adc
cmp
das
add
mov
aas
je
enter
ljmp
aas
xchg
cmpsl
jg
and
test
or
and
lcall
repnz
ja
fwait
and
call
jne
jmp
jbe
mov
inc
out
out
in
incl
xlat
fmuls
roll
sti
cmp
mov
shrb
push
jno
rclb
or
inc
inc
mov
or
mov
incl
and
pop
jns
into
mov
and
inc
pop
and
or
and
or
mov
das
mov
sbb
xchg
jns
dec
xor
pop
imul
mov
movsl
enter
and
push
sti
mov
push
or
cli
jmp
cmpsb
arpl
es
outsl
mov
imul
loopne
or
ds
stos
or
movb
fwait
mov
cmp
add
jb
gs
das
pushl
outsb
imul
dec
outsb
je
insb
outsl
outsl
in
jmp
gs
arpl
insl
adc
push
insb
jae
popa
in
mov
adcb
or
pop
mov
sbb
jae
inc
jbe
dec
jae
popa
outsb
mov
je
imul
push
insb
gs
dec
outsl
mov
dec
imul
bound
imul
lods
jne
arpl
pop
arpl
jo
fstp
mov
jb
inc
fs
mov
push
imul
pop
in
rcll
cmp
enter
dec
push
jns
es
mov
push
ja
int
or
jae
imul
dec
popa
sbb
adc
inc
pop
sub
test
cs
jle
jo
pop
test
add
testb
inc
inc
gs
or
sub
ss
js
adc
add
adc
insb
test
ret
adc
inc
pushw
mov
add
add
dec
dec
xor
shrl
fdivs
jle
rcrb
xchg
lock
push
and
adc
mov
mov
xor
stc
push
pop
and
movsb
loopne
inc
sbb
pop
xchg
or
lock
push
sub
sub
addb
sub
sbb
or
and
xor
sub
pop
test
dec
pusha
cmp
xchg
and
add
lds
and
andb
fmuls
add
scas
fs
mov
aam
es
ss
pushf
and
inc
and
pusha
icebp
and
adc
dec
jae
push
pusha
xor
or
es
adc
adc
mov
test
mov
inc
lods
add
xlat
ret
and
pop
and
mov
fs
dec
test
dec
lods
es
push
add
cwtl
leave
dec
bound
cmpl
or
cmp
mov
imul
or
add
nop
xor
inc
xorl
sub
push
add
inc
mov
push
je
jne
leave
ret
add
shlb
sub
and
adc
ftst
add
add
adc
inc
stos
or
pop
and
push
and
sbb
mov
add
add
inc
inc
and
jmp
add
add
or
xchg
aam
mov
pop
add
or
dec
add
adc
xchg
lods
inc
adcb
addl
add
add
add
mov
hlt
inc
or
xor
and
lea
popa
dec
adc
push
cld
mov
push
fs
pop
add
sub
xor
enter
outsb
push
add
mov
repz
cmp
mov
call
add
inc
add
adc
add
xor
push
and
sub
fs
mov
add
sbb
xorl
popf
bound
mov
xchg
adc
adc
or
or
and
enter
shll
mov
lea
dec
adcb
xchg
jmp
imul
roll
mov
pop
addb
and
test
mov
shll
sub
adcl
pop
xchg
add
sub
mov
out
xor
push
pop
pop
push
popa
shrb
in
pusha
inc
mov
mov
test
and
and
popa
inc
cmp
adc
adc
incl
and
je
and
sbb
jno
shrb
js
push
gs
or
test
push
mov
dec
addl
or
nop
sub
add
inc
mov
lret
add
lods
movsl
sbb
inc
mov
add
pusha
and
bound
nop
int3
xchg
add
or
pop
inc
or
push
gs
test
sub
or
inc
mov
push
push
and
inc
and
in
add
mov
adc
pop
mov
mov
or
mov
pusha
arpl
inc
mov
andb
ret
pop
xor
mov
movsl
dec
aad
sub
shlb
sub
xchg
mov
mov
dec
inc
popa
xor
in
aad
mov
cmp
pusha
push
inc
movl
or
push
sub
and
and
xchg
nop
and
sbb
mov
add
mov
adc
lea
sarl
inc
or
inc
sub
jge
mov
pusha
and
push
adc
lods
dec
fisttpll
add
add
sub
popa
inc
adcb
inc
sub
sub
dec
xor
nop
inc
sub
or
stos
xor
and
pop
aam
nop
scas
lods
sub
shlb
xchg
adc
mov
xchg
sub
inc
sbb
add
sbbl
or
mov
add
add
sbb
or
addb
or
add
xor
adc
push
mov
rorb
addb
popf
adc
mov
mov
xchg
into
pop
inc
add
mov
sub
ficoms
xchg
mov
arpl
mov
sbb
adc
jl
or
add
xor
add
icebp
xchg
in
push
jb
outsb
jae
test
pop
or
adc
popa
addr16
fs
dec
adc
outsl
ja
push
out
dec
sbb
fdivl
push
mov
insb
cmp
lret
lea
int
xchg
pusha
out
mov
fsubr
inc
in
jbe
in
dec
je
jo
dec
inc
in
js
mov
cld
das
fisubs
addr16
outsl
jb
jne
add
mov
jae
es
cmp
stos
mov
rclb
insb
cmp
imul
mov
or
outsb
gs
insl
movsl
push
mov
test
dec
jns
add
xorl
add
pop
ja
add
stos
xchg
insb
test
add
add
mov
add
add
mov
loopne
popl
das
aaa
add
or
xchg
mov
xchg
rclb
or
add
in
rclw
or
aas
rclb
pop
inc
mov
shl
mov
push
adc
dec
or
pusha
cmp
insb
js
pop
rolb
mov
xor
pop
add
and
subb
add
mov
movl
inc
es
ret
daa
loopne
daa
xchg
add
xchg
outsb
mov
daa
orb
xor
add
mov
pop
mov
xorb
inc
mov
jae
lock
add
jae
es
cmp
mov
add
addr16
sbb
aas
cmpsb
aas
nop
incl
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
loopne
add
add
add
add
add
add
add
add
add
add
mov
add
or
aas
add
add
add
add
add
add
add
add
add
add
mov
add
and
aas
add
add
add
add
add
add
add
add
add
add
fadds
add
inc
loope
add
add
add
add
add
call
cmp
in
enter
push
and
sbb
outsb
icebp
clc
sbb
and
mov
aas
add
cmp
in
enter
push
and
sbb
outsb
icebp
clc
sbb
and
mov
aas
add
cmp
in
enter
push
and
sbb
outsb
icebp
clc
sbb
and
mov
aas
add
adc
lcall
jne
and
push
seta
fdivr
cmp
dec
enter
mov
pop
stc
cmp
mov
mov
dec
into
int3
add
add
aas
mov
pop
test
pop
fs
call
inc
push
mov
sub
fbld
inc
sbb
dec
and
iret
into
adc
addr16
fs
inc
jne
lods
xor
inc
pop
fs
xor
and
into
add
mov
xor
add
adc
ds
jl
mov
inc
in
outsl
jmp
bnd
hlt
into
fs
pusha
imul
sbb
pop
ljmp
pop
inc
fdivs
cmp
lret
out
inc
xchg
dec
or
and
out
movsb
push
std
dec
das
aad
cmp
movsb
push
jbe
and
fistps
xchg
pop
mov
dec
pop
pop
ret
sbb
das
ss
cli
jp
xor
pop
je
clc
outsb
lahf
int
les
in
je
gs
and
stos
out
mov
jno
mov
push
cmp
stc
dec
xlat
and
mov
or
negb
div
lods
or
mov
lods
incb
dec
imull
ljmp
call
stos
dec
pop
and
scas
mov
aas
push
adc
stos
jge
or
imul
xor
popa
cwtl
add
cmpl
in
ljmp
test
mov
or
dec
mov
test
push
mov
sar
mov
into
adc
push
or
dec
sub
inc
mov
xor
sub
lret
cmpsl
fisttps
sub
sbb
test
mov
and
insl
and
push
loop
sbb
sub
xchg
ret
cmp
push
xchg
jno
aad
jmp
mov
aam
ja
dec
or
xor
test
int
lea
mov
imul
sub
fmull
pop
jmp
sub
aas
inc
dec
jbe
jbe
repnz
aad
xchg
aam
mov
lret
filds
dec
repz
sub
inc
aaa
fsubs
or
into
fdivr
jns
xor
and
bound
inc
jae
pop
and
test
push
cmp
cmpsb
push
pop
int
cwtl
mov
insb
andl
sub
jne
ret
int3
cld
rcll
push
xor
lods
enter
cmp
std
xchg
gs
insl
mov
out
lods
mov
dec
jp
data16
cli
addb
inc
insb
mov
jo
cmp
jge
stos
jecxz
outsl
in
push
fidivrs
mull
mov
lods
jmp
lods
pop
fnsave
mov
cmpb
shlb
xchg
pcmpeqb
pop
leave
mov
inc
sub
jmp
movsl
popa
xchg
insl
sub
enter
pusha
in
cmpsb
or
jne
jge
dec
push
inc
movsb
sbb
xchg
jns
icebp
pop
call
inc
jle
cmp
jb
imul
or
repnz
xchg
addl
xor
sub
stos
jo
arpl
repz
scas
pushf
cmp
es
jp
push
add
cmpsb
int
push
addr16
cmpsl
push
cltd
inc
xor
jo
cmpsl
adcl
fs
mov
adc
je
jb
pushf
and
in
imul
and
jbe
fwait
rolb
xor
mov
clc
in
xorl
push
clc
aam
js
jae
push
mov
jo
in
popf
insl
ss
inc
mov
leave
jl
out
je
dec
imul
in
jmp
xchg
add
or
pop
mov
lret
fisubs
ret
enter
xor
scas
lret
xor
cmp
xor
jmp
enter
xchg
xchg
xchg
cmp
adc
push
lcall
testb
int
pop
mov
dec
sub
push
sub
clc
fwait
push
movd
mov
test
dec
cmp
add
dec
push
adc
mov
cs
sbb
lahf
dec
outsb
outsb
dec
std
sbb
rcll
inc
pop
push
rcrl
add
xor
jg
out
dec
xor
rclb
push
pushf
push
das
das
stos
jle
cmp
sub
negb
jecxz
aas
push
sub
icebp
pushf
push
fsub
aas
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
jo
cs
insb
add
gs
xor
ja
outsb
push
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
jae
jne
jb
pop
push
add
push
gs
imul
imul
jb
arpl
jb
