add
pop
and
xchg
jne
pusha
pop
in
out
jns
add
mov
add
push
add
out
call
jmp
imul
outsl
mov
add
add
call
incl
pop
jmp
sbb
push
push
adc
inc
leave
ret
xor
jns
inc
push
cld
mov
pop
sbb
or
call
xchg
sbb
dec
dec
inc
fiadds
jb
fldl
cli
dec
push
push
in
or
in
call
cmpb
pop
adc
jns
and
xor
sub
mov
xchg
js
sub
inc
inc
decl
ret
inc
popa
add
adc
add
sub
pop
orl
adc
add
push
outsl
fisttpl
add
push
add
xor
mov
fucomp
add
dec
adc
insl
inc
dec
inc
in
push
pop
mov
fldt
fwait
mov
push
ret
inc
es
clc
cmpb
pop
adc
mov
push
addb
inc
inc
add
or
jo,pt
jne
scas
std
mov
add
roll
jno
enter
aas
leave
in
inc
cmp
es
sub
dec
sub
arpl
sub
lcall
pop
dec
pop
and
dec
mov
cmp
aaa
popa
pop
inc
mov
mov
dec
aas
mov
daa
cld
aas
pop
pop
pop
pop
inc
dec
loopne
rorl
arpl
dec
inc
mov
ret
dec
pushl
push
inc
pushl
push
pop
hlt
lea
push
lea
push
push
imul
les
push
dec
and
sti
out
and
lea
push
push
shrl
daa
push
push
xchg
push
and
push
push
push
insl
fsubs
and
xchg
pop
push
push
pop
pop
cmp
mov
call
inc
dec
arpl
testl
gs
push
pop
and
in
inc
daa
dec
dec
push
xor
sbb
fdivrs
add
das
sbb
fdivl
and
dec
inc
decl
sub
mov
mov
in
push
cmp
cld
repz
call
jo
xchg
mov
dec
mov
push
insl
sub
add
inc
mov
dec
inc
dec
cmp
cld
xchg
pop
mov
mov
jbe
adc
lcall
xor
mov
mov
fistpl
mov
adc
xchg
clc
pop
out
clc
mov
test
in
sub
jmp
pop
pusha
and
shrb
jno
pop
mov
jo
push
jno
pop
add
and
outsb
fbstp
mov
roll
xor
fucomp
outsl
pop
mov
push
imul
out
neg
mov
lea
dec
mov
jle
sti
out
movsb
add
dec
mov
push
sbb
inc
jno
mov
in
fistpll
ljmp
dec
cmp
out
jae
imul
dec
addr16
insb
popa
rorl
mov
pusha
push
shll
test
and
add
out
repnz
jge
cmp
inc
inc
fidivrl
inc
enter
sbb
add
mov
sarb
aas
jp
add
jns
pop
add
adc
jp
cmp
cld
jp
push
dec
sub
dec
into
das
dec
out
imul
rolb
not
xor
dec
cmp
xor
push
push
sti
in
or
inc
or
pop
jg
lods
pushl
data16
add
test
adcl
in
jb
push
and
add
lds
arpl
inc
or
lock
push
imul
fldt
frstor
rorl
pop
loopne
pop
or
imul
lret
loope
jg
mov
push
js
cmp
xor
cld
jmp
and
fwait
loope
jne
push
add
adc
rorb
out
cld
call
decl
xor
imul
sbb
sub
cmc
ret
push
push
fisubrl
js
sub
lds
cmpb
decl
or
add
or
and
pop
dec
or
pop
sbb
and
js
xor
mov
cmc
aaa
imul
scas
loop
jae
repz
push
mov
adc
push
jmp
xor
xor
add
mov
pop
dec
jb
test
je
sti
xlat
js
cmp
fsubr
mov
ljmp
inc
xor
jbe
mov
mov
addr16
pushl
adc
clc
es
sbb
pusha
sub
add
add
sub
arpl
fcomp
mov
popf
push
pop
mov
xor
push
scas
cmp
out
aas
jmp
push
push
xor
mov
or
dec
cmp
pusha
pop
clc
outsl
test
add
push
jb
fidivl
dec
dec
dec
lods
add
mov
lods
das
outsb
inc
fs
cmp
add
test
out
icebp
stc
dec
or
xchg
inc
clc
pushl
data16
outsb
and
and
adc
insb
outsl
out
pop
in
inc
mov
push
pop
imul
pop
rorb
jo
jg
mov
push
test
decl
jmp
popl
or
cmp
sbb
lcall
popa
sub
mov
dec
push
mov
sar
and
jbe
mov
cs
push
loope
jb
mov
je
jns
dec
and
pop
or
pop
pop
push
dec
xor
out
adcl
and
jg
and
jp
adcb
jle
and
mov
or
lock
sbb
movsb
subl
cli
dec
mov
daa
out
mov
cmp
mov
cmp
insb
inc
test
addr16
decl
add
jb
orb
cmpb
mov
dec
rclb
mov
ficoms
arpl
adc
test
mov
mov
aas
dec
push
add
pop
mov
mov
mov
in
cmp
dec
mov
clc
sbb
ss
adc
dec
jbe
aam
dec
adc
mov
xchg
cs
jmp
ja
mov
cld
outsl
fs
xchg
dec
or
inc
inc
xor
ss
push
inc
push
push
dec
mov
push
xor
push
aad
pop
loop
adc
dec
inc
xor
arpl
jp
xorl
adc
jnp
mov
xor
xor
xor
scas
jg
pushl
mov
add
xlat
out
imul
mov
in
sub
lea
dec
dec
adc
add
mov
xor
roll
cmp
and
adc
outsl
shrl
jno
push
mov
aaa
sbb
or
jae
lock
nop
xor
sbb
js
inc
push
dec
aas
xchg
std
mov
sbb
in
add
jl
int3
orb
xchg
fdivr
jae
add
aas
int3
pusha
orl
add
in
cmp
pusha
in
mov
sub
push
ret
add
int3
dec
int3
arpl
mov
add
int3
test
add
jo
cmp
das
lea
rolb
jnp
xor
add
mov
mov
push
int3
or
cmpsl
loopne
xor
inc
outsb
xchg
mov
xchg
or
adc
fcomip
in
mov
cmp
insb
push
bswap
jb
cmpsb
sbb
mov
xchg
sbb
iret
push
int3
xchg
stos
data16
fstpt
cmc
int3
xchg
pop
int3
mov
xchg
in
inc
add
and
xor
int3
jecxz
int3
in
mov
pop
ret
mov
push
int3
stos
lahf
int
fwait
test
mov
jne
cltd
fcomi
int3
loope
subb
dec
xchg
int3
or
pusha
dec
in
ja
pop
and
leave
and
add
mov
jnp
jg
rcll
or
push
mov
ret
and
xor
aas
sbb
jmp
pop
in
push
sbb
lahf
adc
sahf
xor
cmp
add
outsl
mov
int3
add
pop
inc
push
pop
das
xor
push
jbe
daa
push
sub
int3
mov
int3
jecxz
cmp
add
pop
int3
jnp
imul
sbb
sbb
jl
pop
imul
fcomip
jne
or
rcrb
inc
jle
repnz
dec
popa
mov
add
inc
fiaddl
mov
sbb
sbb
cmp
aas
cmp
sbb
test
int3
jbe
loopne
int
inc
mov
das
in
pop
and
sub
je
sahf
jae
enterw
cmovnp
sbb
jge
xchg
jp
pop
adc
loopne
loop
mov
insb
fmuls
mov
push
std
icebp
out
int3
or
js
cmpsb
clc
stc
add
sbb
sub
jecxz
dec
add
adc
roll
insl
inc
inc
add
sbb
je
or
jnp
loope
fcomps
es
jle
fistpl
fildl
xchg
xor
and
arpl
es
fs
cmp
imul
xor
xor
mov
in
mov
das
push
add
fidivl
jle
fldt
dec
add
cmp
int3
shll
gs
add
cmpsb
test
dec
fstl
mov
std
inc
outsb
sbb
push
jo
sbb
or
repz
xchg
int3
jge
xchg
jae
sbb
xor
dec
dec
cmp
add
jne
int
jbe
lret
inc
fstp
xchg
pop
in
push
inc
cmpxchg
fwait
into
cmpsb
xorb
fdivrs
test
outsl
mov
xchg
mov
shrb
or
sub
insb
add
dec
movsb
leave
push
cmp
jp
in
je
ss
push
jle
outsl
gs
loop
mov
sbb
out
ja,pt
ret
test
jl
pushf
loop
mov
inc
cs
int3
mov
jecxz
xor
lcall
pop
add
ljmp
dec
jb
inc
or
and
inc
jns
popa
or
into
je
adc
mov
sbb
jno
sub
jecxz
aaa
pop
cmp
loopne
jmp
xchg
cs
insb
sub
push
mov
jo
fs
sbb
push
movsl
add
xlat
xor
je
mov
notl
int
dec
cmp
les
and
mov
and
xor
in
xor
arpl
lods
sbb
xor
imul
mov
mov
add
hlt
xchg
popf
lods
sti
cmp
mov
jne
pop
jmp
iret
push
add
ljmp
sahf
or
outsb
out
push
movsl
xchg
jo
sbb
lock
pop
sti
add
fcompp
ss
adc
and
cmp
sti
xor
or
jle
add
daa
pop
out
jecxz
adc
repnz
dec
test
or
push
cmc
dec
movsb
fwait
iret
cmp
mov
dec
jns
mov
das
imulb
testl
fnsave
jmp
int3
sub
enter
sbb
into
icebp
stos
clc
sub
dec
clc
fsubp
or
pop
test
sbb
or
roll
movsl
aaa
pop
in
mov
add
xchg
or
jne
jbe
shl
clc
push
pop
jge
mov
int3
outsb
cld
pushf
sbb
inc
mov
inc
jg
mov
fcompl
xchg
stc
jmp
mov
loopne
push
jmp
arpl
in
dec
mov
adc
fmull
sbb
aad
inc
sub
sarl
mov
iret
sbb
dec
jae
cltd
lock
fucomp
rol
addr16
iret
bound
das
sbb
cmpsl
aas
xchg
aad
or
dec
sbb
dec
mov
rorb
sbb
adc
jp
movsl
adc
pop
mov
sbb
sbb
insl
sub
xchg
jg
pop
inc
add
clc
negb
or
cmpsb
cmovge
jnp
mov
cmpb
mov
sub
ret
mov
fidivrs
or
mov
mov
push
add
mov
cmp
into
aaa
push
jmp
shll
fcmovne
scas
xchg
insb
in
mov
cmpps
add
jg
int3
push
lret
cmp
mov
pop
or
jns
arpl
jo
fmull
mov
ret
jmp
hlt
mov
iret
lahf
xchg
jl
adc
dec
lea
pop
add
mov
cmp
cltd
int3
inc
mov
ret
mov
jo
pop
pop
xor
xchg
ret
cwtl
sbbb
fstl
inc
loop
lock
adc
jo
push
cmc
add
je
mov
test
adc
in
int
xchg
test
in
push
and
cmp
shr
fs
push
sbb
add
push
add
inc
out
add
mov
dec
jne
lret
fbld
mov
stos
add
mov
and
dec
subl
mov
pop
push
test
mov
cwtl
or
xor
jl
cmp
fcmovbe
jecxz
or
test
test
inc
jl
push
xchg
xor
dec
or
xchg
addr16
insb
add
loope
jo
sub
adc
data16
std
cmc
mov
cmp
push
cmpb
test
int3
add
in
shl
sub
andl
adc
or
jae
inc
cmpsl
dec
sub
pop
lock
mov
push
rcrb
adc
shrl
xchg
sbb
jge
and
mov
or
mov
lahf
push
cmp
out
shl
mov
repnz
inc
testl
cmpb
das
push
scas
xchg
jno
lock
fwait
jp
xchg
test
push
sahf
cltd
stos
rorl
mov
sub
xchg
shll
push
pop
adcb
rcrl
mov
bound
cltd
sbb
xchg
sbb
push
pushl
in
sbb
addl
or
ljmp
cmp
push
in
insb
sub
sar
push
pop
scas
adc
xchg
xorb
repnz
mov
sarb
sbb
cwtl
pushf
adc
and
pop
faddl
mov
pcmpeqd
jle
mov
push
push
int3
addb
jle
call
dec
clc
mov
jnp
add
and
mov
xchg
ret
leave
jge
mov
mov
inc
add
push
fcoml
push
jge
mov
enter
mov
sbb
sbb
rep
push
or
jge
decl
mov
cmp
enter
jmp
sahf
xor
test
xchg
push
sbb
dec
rcrb
jecxz
jg
cli
into
in
and
jo
cwtl
nop
adc
iret
cmpsl
stos
aas
inc
data16
shll
mov
outsb
popf
mov
mov
sub
sahf
pusha
xchg
inc
inc
adc
popf
or
pop
mov
in
push
push
loopne
lar
imul
push
sar
loop
lahf
inc
popa
enter
js
or
cmp
cmpsl
mov
out
or
xor
addr16
pop
mov
fwait
lcall
add
pop
addr16
xchg
jbe
rclb
jae
push
pushf
mov
test
add
sbbl
dec
mov
dec
dec
dec
ljmp
scas
subl
aaa
sbb
sbb
jmp
fcmovnb
adcb
sbb
xor
nop
adc
add
subl
pminub
dec
mov
mov
mov
test
rcrl
jmp
lahf
push
cs
std
sbb
push
jno
leave
fisttps
mov
iret
imul
pop
mov
cmc
shlb
ljmp
cmp
js
lock
jbe
mov
lret
lock
inc
out
insb
aas
movl
shlb
xchg
loope
adc
or
aaa
sub
js
sub
fs
popa
fs
fldenv
cmpsl
dec
out
cmp
cli
jo
pop
aad
cmpl
add
ja
adc
call
mov
insb
stos
cmp
add
xchg
cmp
pop
hlt
sub
push
fdivl
mov
pop
jle
pop
mov
inc
js,pt
je
arpl
iret
sbb
test
in
stos
add
mov
aad
and
lock
lahf
dec
movsb
shr
mov
test
mov
xchg
xor
fstpt
stc
and
fcomip
cmp
loope
mov
cmp
lods
fiadds
fnsetpm(287
jecxz
mov
es
ds
lods
loopne
and
mov
adcl
lea
lret
cs
inc
lret
sub
ds
stos
mov
fnstcw
nop
lods
or
cmp
pminub
xor
lock
adc
sti
adcb
mov
lea
imul
neg
sbb
adc
lock
dec
or
mov
jge
sub
aas
cltd
pop
cmp
jno
icebp
xor
xor
addl
rorb
cs
pusha
xchg
lcall
scas
and
clc
loopne
mov
cmpl
je
lcall
sbb
xchg
or
sbb
lock
jae
xlat
popa
scas
nop
js
bound
xor
and
fdivrp
sbb
mov
jno
add
scas
jae
mov
adc
cmp
inc
xor
das
cwtl
test
cmp
adc
mov
enter
popa
hlt
sbb
adc
loope
lea
xor
sarb
cmc
ret
jge
lock
adcb
dec
push
push
adcb
cmp
cmp
test
sbbb
aad
inc
push
mov
sbb
add
aaa
or
pop
sbb
in
mov
loopne
insb
into
adc
inc
jb
xchg
push
dec
cmc
sub
filds
push
and
sbb
mov
xchg
roll
je
jecxz
fwait
out
js
jge
jecxz
int
mov
outsb
xor
mov
xchg
cmp
les
mov
shlb
dec
mov
xor
push
nop
or
mov
jnp
jae
pop
dec
mov
out
inc
ljmp
in
out
lods
inc
in
fstpl
js
xchg
ret
jo
out
arpl
inc
aaa
and
pop
mull
xor
sbb
div
lock
loopew
call
cmp
je,pt
stos
add
push
and
movsb
out
adc
pushf
imul
add
xchg
add
out
enter
hlt
movl
lret
jmp
xor
dec
jbe
fiaddl
psubq
fnstenv
arpl
pop
bound
sbb
mov
out
pop
ds
shl
fdiv
outsl
movsb
push
add
ss
adc
sub
inc
pop
ljmp
and
lea
insb
jg
daa
movsl
push
mov
popa
in
data16
loopne
jbe
shll
out
imul
js
arpl
fisubrl
sub
adc
jp
nop
arpl
sbb
sbb
out
mov
cmp
xor
jns
add
clc
popa
xchg
filds
mov
out
pop
jp
clc
jb
dec
sub
ror
push
push
addr16
nop
es
push
int3
sbb
sti
sbb
push
lcall
cmp
mov
mov
mov
fisubl
lret
in
int
lret
test
ds
cmp
sbb
call
xchg
loop
or
movsl
sub
test
js
and
xchg
bound
pop
jl
sub
pop
jge
clc
jbe
mov
jns
dec
popf
fcom
ret
cmc
jno
push
xchg
sub
mov
test
xlat
sbb
push
mov
je
loope
jge
sub
pusha
inc
xchg
lods
out
add
adcb
dec
clc
adc
add
or
push
cwtl
xchg
stos
mov
xchg
xorl
incb
sub
cmp
js
js
xor
jmp
xor
shlb
outsb
loop
std
je
jmp
dec
inc
jecxz
std
les
fwait
in
and
roll
js
inc
push
daa
fcmovu
push
adc
jbe
int
test
push
aaa
shll
sub
jb
mov
clc
xor
popf
rcl
icebp
ja
jge
mov
popf
dec
cli
xor
fstpt
div
xchg
xlat
orb
cmp
pop
out
fists
cmp
aam
push
pushl
cmp
lahf
cmp
pavgw
adc
cmp
pop
mov
loop
mov
mov
inc
pop
dec
jge
fnsave
rcrl
xor
out
dec
xchg
loopne
push
xor
loop
add
pop
test
and
fsubr
in
in
outsb
jno
or
sub
ret
xor
cmp
pmaxsw
sar
out
adc
lea
inc
adc
rcpps
cmp
dec
daa
test
xor
movsl
push
lock
loope
cmp
insb
sbb
sub
aam
lcall
pop
jo
movsb
frstor
mov
xchg
sbb
test
inc
sub
jne
pop
push
fsubrs
xor
push
pop
shlb
pop
ss
adc
mov
sbb
scas
jp
lods
ret
fists
sub
cmp
mov
lock
jns
jle
clc
xor
mov
adc
pop
sub
mov
iret
push
pushf
mov
add
adc
pop
iret
mov
cmpsb
addr16
pop
es
pop
cmc
jmp
test
daa
aam
push
fisubl
jl
daa
mov
shlb
jmp
push
out
ljmp
psubsb
je
cwtl
pop
xchg
in
add
ljmp
decl
and
shlb
cli
sub
add
xchg
dec
mov
clc
pop
roll
and
incl
and
js
add
faddl
movsl
mov
or
lcall
nop
sbbb
adc
test
loop
adc
nop
clc
cs
pushl
push
js
dec
sbb
jns
test
loope
push
add
mov
cmp
pop
push
add
out
add
jne
imul
inc
fdivr
pop
shrb
xor
add
push
xor
pop
inc
in
movaps
add
sub
inc
adcl
int3
dec
xor
inc
push
fcoml
rcl
or
dec
inc
loopne
incl
dec
dec
xor
jp
jp
clc
mov
jp
loopne
testl
ja
add
clc
push
orb
int3
xor
mov
jmp
add
jle
push
pop
popa
bound
sarl
pushl
cli
inc
dec
cmp
and
mov
dec
mov
inc
add
mov
in
sbb
jne
lret
jmp
jae
jb
mov
adc
mov
outsl
in
jg
xor
mov
xor
add
dec
sbb
adc
pushl
inc
dec
mov
add
mov
rol
pop
jns
dec
xor
cs
sti
inc
ss
mov
push
cmp
or
pushl
insb
inc
inc
dec
pop
mov
dec
arpl
inc
cmp
clc
add
mov
inc
cmp
addl
mov
inc
push
aaa
add
pop
pop
xor
dec
arpl
mov
inc
js
data16
addb
outsl
mov
or
subl
push
push
jae
repz
fdivrl
int
data16
lock
sbb
popa
sbb
mov
pop
incb
lock
or
push
fs
inc
insl
jo
pop
clc
fs
dec
insb
inc
les
lcall
inc
sbb
sub
push
sub
call
jns
cld
loope
add
sub
xor
dec
testl
lret
push
inc
outsb
add
push
in
push
xor
in
jbe
mov
sbb
jns
ds
loope
mov
pusha
aas
and
js
or
cmp
sbb
pop
cs
pop
push
mov
adc
out
push
inc
push
aad
decl
lret
sub
push
fs
jns
mov
lret
xchg
jmp
lock
loopne
jg
in
js
ret
outsl
adc
vmwrite
push
dec
mov
lea
and
push
arpl
pop
xchg
imul
es
push
dec
arpl
mov
in
insb
push
adc
inc
test
fsubrl
je
add
pop
inc
push
inc
cld
mov
test
xor
add
ficomps
lsl
sti
inc
inc
out
outsb
xor
outsl
or
add
fs
gs
xchg
notb
push
dec
push
cld
div
jl
mov
mov
inc
sbb
adc
jmp
jbe
pop
roll
mov
pop
push
push
std
jmp
fsubs
lret
pop
push
aas
in
mov
incb
cmp
inc
fcompl
out
and
cld
push
repnz
fs
scas
and
fldenv
sbb
push
das
mov
add
add
adc
mov
pop
jbe
clc
incl
clc
pop
adc
dec
mov
mov
js
sub
mov
xchg
idivb
je
add
out
dec
popa
cmp
in
jg
in
dec
dec
and
shll
fs
xor
leave
mov
jno
leave
dec
push
arpl
mov
jge
inc
repz
mov
arpl
das
jl
rorb
clc
cltd
add
sbb
and
and
xorb
adc
out
fwait
ss
outsl
jl
ret
mov
push
mov
insb
push
jne
jno
push
insb
push
add
rol
jge
pop
mov
adc
or
outsb
jb
and
dec
jle
loop
ja
sub
daa
push
pop
dec
mov
cld
fsubrs
mov
add
inc
xlat
push
xor
scas
add
inc
pop
sbb
fistps
cld
xor
add
repz
jmp
xor
scas
sbb
push
imul
fsubl
push
inc
dec
cmp
pop
mov
sub
dec
adc
cmp
or
add
ret
sbb
in
push
xor
mov
icebp
jle
sahf
inc
pop
in
subb
dec
add
add
add
aas
ret
outsl
add
sub
push
cmp
or
dec
ja
mov
inc
xor
outsl
jmp
mov
add
sarb
push
jp
incl
addb
sbb
add
or
call
fldl
loopne
push
pusha
xor
push
add
xor
cmp
aaa
xor
or
inc
add
daa
xor
add
add
jo
and
add
and
sub
pop
fldt
ficoml
sbb
or
cld
mov
push
adc
or
add
mov
test
add
nop
add
pusha
pop
xor
cmp
inc
inc
subb
dec
mov
mov
adc
sbb
dec
add
imul
fwait
imul
jo
or
add
nop
add
ja
insl
in
push
or
xor
and
sbb
push
dec
sbb
fistpll
add
sbb
sbbb
insl
mov
add
dec
add
js
pop
mov
arpl
xor
insl
lods
jge
inc
nop
pop
cmp
dec
pop
dec
inc
jns
ret
out
aaa
add
pop
pop
lret
jbe
pop
push
add
mov
push
adc
pop
sti
mov
pusha
xor
stos
mov
imul
sub
mov
dec
insb
loopne
addr16
pop
gs
mov
outsb
add
sbb
in
add
je
pop
xor
xor
push
rolb
outsb
sub
je
sbb
ror
fisubrl
cmp
mov
mov
out
rcl
add
or
scas
sub
sbb
push
push
push
mov
and
mov
lods
sbb
outsl
popf
add
push
cmp
cli
nop
loope
add
add
push
jae
addb
pusha
cmp
or
outsb
arpl
movsl
mov
outsl
or
dec
push
ss
test
fldt
push
insb
insb
dec
dec
xor
ret
nop
adcb
insl
mov
mov
and
jmp
inc
jno
dec
jg
std
add
in
mov
and
lds
xor
inc
add
pop
js
add
inc
sbb
jo
fiaddl
xchg
dec
pusha
out
insl
push
xlat
xor
inc
xor
addr16
fcomps
inc
cmp
add
add
fsubl
jae
rcrb
add
jnp
pop
mov
sbb
into
add
int
rcll
add
add
rcrb
loopne
enter
cmp
fidivl
in
mov
xor
sbb
ss
cmp
inc
jl
lock
lods
sub
push
rolb
test
movb
fcompl
mov
xchg
add
insl
jnp
cmp
dec
cmp
pop
sub
out
jg
ja
mov
xlat
adc
data16
xor
push
push
sbb
stos
adc
inc
inc
repnz
push
pop
push
or
ss
inc
jecxz
sub
inc
add
pop
mov
pusha
mov
mov
sbb
xchg
add
adcb
sub
and
shlb
imul
xor
push
pop
jmp
xchg
jae
fnsave
xor
fmul
dec
xchg
add
lods
inc
or
dec
int
jnp
ljmp
sbb
nop
mov
add
into
orb
sbb
sub
movsl
imul
imul
pop
mov
ret
xor
lods
mov
dec
sbb
push
pop
push
stos
cmp
loopne
jo
push
popa
add
pusha
sub
xchg
nop
jo
push
and
movsl
out
sbb
add
test
jae
add
cltd
ja
pusha
bound
adc
movsl
mov
jo
shlb
mov
push
inc
inc
inc
jb
dec
jno
ja
mov
out
add
xor
insl
loopne
pusha
inc
nop
mov
aad
push
ja
outsl
pop
inc
xlat
mov
jb
push
xor
lods
shrb
push
jo
xor
lea
cmp
popa
test
push
sbb
mov
pop
aaa
xchg
xor
jne
jo
fstl
fisttpl
fidivrl
dec
inc
pop
stos
aad
inc
mov
xchg
mov
rcrl
mov
or
cmpsb
mov
pop
add
add
imul
pop
in
add
out
xor
mov
stos
cmovl
mov
inc
in
or
mov
mov
xchg
jno
nop
or
mov
push
xor
jb
insl
xor
imul
inc
xor
cmp
or
mov
push
stc
cmp
movsb
xchg
mov
xlat
sbb
inc
push
es
xchg
testl
add
push
rorb
pop
lea
inc
ds
mov
imul
jp
push
dec
lods
aam
fcoms
pop
mov
das
add
gs
push
ja
movsb
cltd
cmp
lcall
dec
jg
jg
push
sub
jae
jb
cmp
push
gs
jae
jae
push
ret
cmp
mov
or
dec
inc
jo
jb
mov
cmc
push
adc
mov
shl
pop
or
iret
mov
jno
xor
mov
nop
cmp
xchg
or
mov
mov
mov
sbb
lcall
lods
ljmp
jbe
dec
inc
jo
jae
pop
mov
fs
lret
insb
lods
hlt
or
push
sub
fisttpl
add
lds
imul
popf
fdivs
push
scas
or
add
push
pusha
and
or
loopne
cmp
adc
add
jg
xchg
lods
xlat
hlt
add
addr16
pop
sub
push
dec
inc
xchg
sub
dec
sub
cmp
loopne
mov
mov
add
imul
push
add
add
jo
int
dec
mov
push
xlat
jge
pusha
cmp
and
aad
je
jns
add
lods
test
pop
xchg
jno
mov
push
inc
push
aam
sub
jl
dec
pop
jmp
pusha
sub
add
and
sub
notb
bound
nop
ret
pusha
rcrb
cltd
jno
mov
lcall
les
pop
or
push
jb
data16
cmp
iret
push
push
add
add
roll
lret
ds
rcrl
fcmovnu
jmp
xor
subb
mov
cmpsb
js
push
inc
flds
add
fwait
cmp
dec
rorl
pop
imul
or
cli
xor
inc
jmp
iret
push
rclb
setp
je
js
fidivs
jno
sbb
movl
ret
pusha
inc
mov
xor
sahf
dec
add
xlat
rolb
imul
jae
lret
jmp
push
jecxz
aas
jo
add
test
movsl
sbb
ss
or
sbb
aad
jp
xor
sub
repnz
sti
jg
test
jno
ja
inc
jns
fimull
pop
ret
mov
dec
pop
xorb
mov
push
rol
sarb
ja
roll
ljmp
adc
xlat
frstor
insb
xor
xor
xchg
pusha
enter
mov
scas
xor
dec
push
push
xor
add
fcmovnbe
add
pop
imul
iret
cmc
push
dec
cmp
jb
pop
xchg
mov
pop
pop
or
push
add
xlat
ficoml
in
lock
mov
popa
dec
shlb
or
xor
mov
and
and
popa
push
inc
leave
test
add
inc
push
pushf
insb
decl
mov
pusha
add
pusha
push
loopne
add
xorb
add
ljmp
dec
nop
sarl
add
add
push
and
adc
cmp
aas
add
push
add
mov
mov
sub
outsb
dec
inc
jae
or
nop
and
add
add
add
orb
sbb
add
mov
dec
add
sub
loopne
jg
jg
xchg
add
mov
add
inc
sbb
dec
cmp
and
rol
push
mov
xor
jbe
inc
xor
mov
rorb
lret
mov
add
and
or
add
pop
sbbb
add
push
xor
push
add
nop
add
addb
jo
mov
push
cmpsb
popf
cltd
cmp
dec
or
mov
lods
mov
add
push
insl
add
add
xor
or
xor
adc
cli
add
mov
add
pop
loopne
and
add
lods
add
xor
lcall
add
add
add
in
adc
sub
dec
dec
or
jbe
cwtl
or
and
bound
xlat
adc
push
mov
xor
add
add
mov
push
pop
pusha
mov
add
dec
out
ja
jae
mov
cmp
mov
addb
rolb
jo
add
loopne
cmp
xor
sarb
or
imul
fs
jno
mov
insb
test
pop
ja
push
out
lods
mov
xor
outsl
adc
or
pop
roll
mulb
imull
and
dec
les
or
jl
jge
outsb
int
sbb
dec
push
add
loopne
mov
xchg
mov
mov
push
xor
lock
dec
ret
cmp
dec
addr16
fmuls
sub
sub
cmp
and
test
loope
cmp
xor
lret
push
add
cmp
add
ret
out
lods
add
lea
adc
adc
xchg
mov
imul
movsb
and
push
dec
jg
pop
imul
pop
and
loopne
cmp
add
inc
sbb
xor
jae
pusha
lret
cmpl
push
sub
scas
mov
inc
pop
push
adc
add
xor
pop
shrb
mov
sbb
pop
jo
test
test
push
shld
sbb
sbb
push
xchg
add
loope
mov
mov
and
leave
mov
mov
js
fisttpll
add
loopne
dec
jo
sub
xor
mov
insb
gs
cmp
or
movsb
subb
icebp
shr
add
leave
push
xor
xorl
inc
push
xchg
or
lret
or
out
in
xchg
aaa
enter
mov
pop
jecxz
jmp
sbb
jne
mov
mov
mov
fs
inc
mov
push
fsubrs
or
jnp
inc
add
pop
jo
xorb
cmc
cwtl
mov
enter
test
push
cltd
stos
dec
fstpl
mov
and
lock
push
add
cmp
mov
cli
mov
inc
xor
adc
mov
int3
inc
mov
cmc
in
mov
pop
leave
push
jne
aad
arpl
lock
outsb
dec
fimuls
add
cli
outsb
test
inc
test
dec
jp
cmp
mov
and
push
pop
jae
pushf
mov
sbb
xor
mov
out
shll
jno
mov
push
sbb
xchg
sbb
das
adcl
or
fmuls
out
mov
out
xor
lret
ja
cli
aaa
loope
hlt
int3
jecxz
xchg
xchg
mov
sbb
out
lds
mov
mov
imul
fmul
or
inc
adc
xchg
mov
push
test
mov
int
add
add
add
push
push
sbb
mov
scas
in
adc
lock
push
ror
sub
cltd
or
mov
add
lea
shrb
inc
inc
fimuls
lret
dec
loop
mov
push
jmp
jmp
mov
pop
jge
push
addb
mov
enter
orb
inc
das
cld
and
sbb
dec
ds
mov
mov
cld
data16
je
lret
mov
push
data16
adcl
sarb
dec
cmp
fsubs
push
addr16
xchg
add
das
outsb
push
mov
jp
stos
ss
jne
aad
lcall
leave
mov
ret
add
xchg
sbb
pop
aad
mov
int3
inc
dec
mov
mov
sbb
pushf
loope
pop
fistpl
out
iret
jp
hlt
mov
enter
xor
cmp
cmp
mov
mov
rol
jno
pop
xchg
int3
jb
jle
cmp
xchg
sbb
jmp
scas
int3
dec
xor
fdivr
int3
popa
cs
js
mov
outsb
cmp
in
cmpsb
stc
hlt
fnstenv
push
xchg
popa
inc
popa
nop
sbb
int3
xchg
cmc
das
mov
popl
fcomps
or
pop
push
repnz
push
fisttpll
xor
int3
push
div
and
mov
mov
out
negl
and
fcompl
lahf
nop
jg
mov
push
or
sub
add
push
mov
mov
dec
addr16
outsl
pop
fs
call
xchg
inc
inc
lea
add
int3
xchg
icebp
cmpl
es
bound
mov
or
pop
push
add
mov
sahf
xor
pop
popa
divb
push
cmp
inc
pop
pop
cmp
shrl
push
and
rolb
imul
jbe
jno
push
dec
mov
fsubl
jg
or
punpcklbw
js
arpl
xchg
lock
jnp
fisubrl
sbb
pop
xor
mov
incb
push
test
inc
inc
jo
lahf
ficomps
jae
inc
ss
xchg
mov
sbb
imul
rolb
cltd
push
bound
sbb
jmp
flds
jo
cmp
pop
stos
mov
movsl
in
out
mov
or
and
xor
fptan
mov
arpl
mov
inc
ret
xchg
loope
add
mov
mov
in
mov
add
int3
dec
loopne
js
xchg
cwtl
adc
daa
or
iret
xchg
mov
js
or
push
adc
js
popl
sbb
and
pop
jge
sub
int3
test
repz
lock
fdivr
arpl
jae
xchg
lods
stos
mov
and
adc
sbb
push
cld
icebp
sub
mov
orb
xchg
loope
fisttpll
adc
push
push
xchg
cmp
xor
cld
mov
fdiv
xchg
push
mov
daa
pushf
test
cli
add
xchg
pop
iret
insl
enter
scas
sub
inc
jl
pop
xchg
jmp
int3
fisubrl
stos
mov
sti
push
sub
rep
int3
inc
jnp
add
inc
jmp
push
outsb
in
sahf
or
add
cs
adc
setno
add
inc
push
jge
rol
dec
add
mov
mov
cmp
mov
imul
flds
icebp
jae
pop
mov
or
sahf
pop
add
dec
inc
pushf
insb
ficomps
inc
loope
in
iret
or
cmpb
rol
daa
mov
stc
xor
push
inc
sub
movsb
jae
loopne
lret
mov
inc
mov
mov
mov
and
jbe
mov
cwtl
cltd
dec
lcall
sbb
adc
aaa
sbb
push
or
xchg
scas
es
mov
push
inc
test
xor
pop
xchg
xorl
and
mov
mov
adc
fcom
mov
adcl
lcall
xchg
stc
dec
xchg
sbb
bound
dec
bound
ret
sbbl
sub
mov
sub
jno
imul
xor
idiv
push
xchg
lcall
les
xchg
into
ss
adc
arpl
xchg
cwtl
jge
jl
sbb
xchg
mov
popa
dec
out
push
xor
loopne
add
push
cmp
sbb
pushf
insb
pop
jle
push
push
mov
and
scas
jecxz
es
xchg
inc
cmp
iret
pop
fisubs
test
lahf
rcrl
push
ror
out
sbb
pop
es
xlat
ss
jae
cltd
jnp
rcrb
stc
addr16
mov
fcompl
push
sub
cmp
dec
inc
loop
popf
fldl
add
jg
xor
cmp
fcmovnbe
mov
xchg
or
adc
inc
icebp
add
add
mov
sub
cmp
and
out
das
daa
jl
addr16
test
rorl
jo
fisubs
pusha
iret
jno
rorl
es
popa
jnp
mov
push
bts
ret
xchg
sub
in
push
xchg
hlt
xor
daa
and
out
push
mov
jne
adc
test
stos
testl
add
sbb
xchg
aaa
jecxz
inc
pop
jno
icebp
xchg
add
xor
inc
lock
sbbl
push
sbb
pop
and
out
jecxz
jmp
xchg
xorl
outsl
or
cmpxchg
das
loope
popa
adc
jecxz
push
push
stc
mov
shl
jecxz
mov
popf
aam
jmp
aad
pop
stos
cmp
js
pop
push
loopne
push
xchg
clc
jp
and
iret
rcl
mov
adc
jbe
xchg
dec
das
cwtl
js
jl
imull
mov
xorl
jg
rolb
int
test
outsb
nop
cmp
clc
call
sbbb
mov
push
into
mov
cmpsl
das
in
out
fdivs
les
or
push
inc
cmp
shll
mov
mov
pop
cmp
adc
inc
xchg
push
pop
inc
icebp
test
outsl
xlat
and
sbb
retw
push
sti
inc
loope
xchg
xchg
cmc
push
or
es
aad
xchg
and
in
push
stc
add
push
shr
or
inc
pushf
lods
mov
mov
push
xor
add
addb
or
addr16
dec
roll
inc
jle
xor
sub
xor
mov
jle
loop
shrl
jmp
sub
push
movsl
pop
inc
cmp
mov
cmp
xchg
sub
jp
mov
dec
jecxz
cld
dec
sbb
pop
jno
jle
jbe
jmp
shll
and
mov
rcll
xor
add
mov
aam
sbb
int3
ret
add
jge
inc
fcmovb
pop
xor
shlb
xor
mov
or
lahf
rorb
bnd
fbld
mov
and
fisubl
sbb
in
or
ficompl
addr16
jmp
adc
in
out
xor
mov
insl
pop
ret
stos
js
enter
rorb
rcll
imul
ss
ds
mov
ret
sti
in
ret
dec
ret
pop
mov
orb
popf
push
sarl
std
into
jp
pop
daa
jecxz
and
sbb
andb
mov
nop
gs
mov
jmp
cmpl
cmp
dec
dec
adc
movsl
mov
out
jg
rcl
int
xor
rorl
clc
or
data16
inc
pusha
jecxz
icebp
push
mov
or
push
sub
cs
push
jmp
fcomps
movsl
loope
fmul
add
push
ss
mov
das
scas
test
mov
movsl
call
mulb
pop
ret
mov
jmp
loope
js
cs
sub
adc
fmull
data16
mov
jmp
add
in
std
cli
imul
pop
xchg
pushf
cwtl
clc
or
jp
pop
dec
sahf
out
sub
test
xchg
es
test
pop
sti
cmp
popf
add
mov
ret
sub
scas
pusha
sbb
push
cmp
testl
add
add
jo
mov
or
push
pop
daa
mov
jmp
mov
scas
or
lock
push
int3
dec
sbb
inc
dec
pop
cmp
jmp
or
dec
jbe
leave
out
mov
out
and
movsb
stos
push
push
mov
arpl
dec
loope
push
cmp
rcr
sti
cmp
divl
pop
mov
push
inc
mov
call
ret
add
inc
jb
push
dec
jbe
sub
adc
adc
jecxz
lcall
cmc
or
cmp
lcall
lahf
xchg
xchg
cmp
add
subb
call
pop
mov
mov
adc
arpl
add
sub
imul
mov
lcall
xchg
out
sete
cli
fucomp
adc
test
out
pop
cmp
lods
cmp
jl
cwtl
sub
arpl
inc
nop
and
cli
in
xchg
out
and
es
or
sbb
jne
adc
iret
ftst
cs
sub
jmp
repnz
cmp
cld
add
aad
pop
pop
sbb
jne
or
loopne
add
xchg
movsb
sub
popa
pop
lods
add
push
das
mov
mov
popf
sub
sahf
rolb
sbb
push
jo
lock
cmovne
add
sub
out
icebp
js
jecxz
loopne
mov
insb
fimull
std
push
pop
adc
lcall
lret
out
sub
imulb
add
sub
mov
insb
push
xchg
bound
rcrb
into
pushf
xchg
inc
adc
push
sub
das
sahf
xor
or
repz
iret
les
sub
out
dec
orl
cmp
sub
jno
pop
and
dec
xchg
dec
push
xchg
js
inc
or
aaa
adc
add
pop
jns
sbb
loopne
adc
sbb
outsl
push
ds
dec
cs
adc
cmp
push
aam
insl
jo
outsb
popa
jns
pushf
mov
mov
or
jmp
sub
sub
push
fistps
sarl
iret
mov
in
cmp
sub
rorl
inc
or
mov
divl
sub
movsb
sbb
inc
test
addb
or
cmp
ljmp
sub
xor
sbb
dec
mov
cli
cmp
rorb
sbb
leave
xor
repnz
pusha
xchg
ret
push
jo
xor
xchg
addr16
jp
xor
push
into
fstps
out
data16
cs
mov
add
repz
mov
scas
in
out
or
or
jo
xlat
jae
jae
jbe
cmp
sti
mov
add
and
and
add
mov
cmc
or
add
addr16
xor
fsubs
scas
mov
xor
test
js
dec
mov
aam
arpl
mov
pushf
and
scas
or
mov
test
pop
mov
rcrl
ja
pop
stc
jg
arpl
rcrb
clc
icebp
jmp
loope
jecxz
and
push
lret
cwtl
sbb
mov
fsubrs
sub
xor
or
sbb
pop
fst
test
mov
cmp
cli
dec
or
mov
inc
xor
adc
fcomp
cwtl
jae
dec
insl
add
pop
mov
pushl
dec
jae
imul
popa
mov
jbe
insb
into
std
loope
mov
jle
fistpl
lods
mov
push
lret
cmp
data16
cmp
or
jg
mov
out
adc
jle
sub
pop
lret
cwtl
adc
dec
mov
mov
aad
nop
pop
aas
xchg
and
push
aas
jo
jge
wbinvd
insb
lods
sub
je
inc
inc
mov
in
mov
push
pop
test
pop
and
adc
push
sub
aad
jp
sbb
pop
mov
fidivl
out
les
lock
push
xchg
loopne
mov
pop
sub
test
mov
mov
inc
rclb
rorl
jb
jns
push
lods
add
lock
cwtl
jl
add
pop
clc
in
jbe
lock
insb
jne
repz
jl
dec
inc
call
pop
adc
cmc
pop
out
jp
pop
test
loope
inc
sub
cmpsb
cli
inc
iret
adcb
fmuls
inc
push
pop
cltd
mov
addb
les
push
ret
cmpl
shl
stos
and
sahf
inc
dec
or
or
out
loope
aaa
fucomip
cmp
inc
mov
pusha
sbb
pop
call
out
xor
add
push
pop
sbb
sub
add
js
add
push
std
les
sbb
mov
xor
and
jnp
sbb
and
in
sahf
adc
lahf
mov
and
and
cld
cmp
das
loopne
lock
fistpll
stos
add
push
sub
dec
jmp
mov
xor
icebp
xchg
push
push
in
mov
jne
cmp
or
fidivrs
inc
dec
cmp
ja
inc
subb
xchg
addr16
pop
pop
rcrb
out
bound
sbb
pop
jns
fdivr
jbe
jns
push
cwtl
mov
push
jg
sbb
rolb
push
xchg
mov
ss
sbb
lods
xchg
add
outsl
jnp
ror
frstor
cmp
lcall
sub
popa
rcrb
scas
out
scas
dec
outsb
and
out
add
daa
cli
cmp
addr16
and
das
xchg
push
test
jp,pn
pop
add
js
dec
or
daa
jmp
lret
cmpsb
sbb
cmc
push
loope
xor
filds
dec
add
sub
xchg
clc
pop
ret
mul
push
and
or
stc
sub
push
add
stos
and
popf
aaa
ss
mov
subb
hlt
jg
mov
xchg
add
xchg
std
sbb
push
add
aaa
lea
push
test
push
pop
cld
jmp
xchg
and
pop
jo
inc
int
mov
or
pop
and
mov
xchg
adc
cld
push
ss
add
inc
lds
dec
jle
mov
ret
rcrl
hlt
cmp
mov
jb
adc
ds
or
or
ret
ja
cmpb
push
lretw
cmp
es
dec
adc
sbb
mov
mov
lock
pop
lahf
call
xor
ficomps
sbb
sbbb
dec
sub
lds
shlb
sbb
push
int
fmul
sub
mov
aam
cld
xor
sbb
clc
jmp
negb
push
sbb
push
aas
mov
mov
and
adc
leave
pop
or
loope
jo
in
lods
andb
frstor
inc
cmp
lcall
cld
inc
inc
call
rorl
jne
insb
cli
or
enter
mov
push
notl
inc
pusha
and
ljmp
jl
push
dec
rclb
out
lret
adcl
mov
hlt
xchg
dec
or
sti
mov
mov
jae
or
mov
popf
adc
or
inc
or
mov
jb
loop
cs
and
xor
je
pusha
push
insb
cmp
ljmp
inc
or
or
inc
roll
es
mov
mov
outsb
iret
sti
insb
xchg
test
movb
sub
sub
inc
test
fldenv
sti
fdivl
add
dec
mov
or
xlat
mov
xor
mov
add
shll
mov
jns
loop
fwait
jno
jp
xchg
jne
add
clc
ds
adcb
out
mov
cmpsl
ret
aad
add
pop
in
fbstp
loopne
daa
cmc
xchg
sbb
and
inc
sbb
jo
iret
pop
cmp
add
arpl
inc
pop
and
add
xor
mov
rolb
jnp
adc
add
cld
cwtl
icebp
es
xchg
sarb
sbb
jnp
repnz
cmpsb
pop
sbb
idiv
mov
cmp
dec
dec
mov
cmc
mov
inc
lock
xchg
push
out
xorb
cltd
cld
dec
xor
daa
outsl
jmp
lea
in
mov
ja
addl
and
daa
adc
push
jo
inc
add
inc
pop
into
adc
add
or
movsl
mov
mov
loopne
dec
call
lock
das
rcrl
std
mov
pop
cs
and
pop
not
nop
out
shr
dec
adc
orl
cs
pop
add
ror
cmp
pusha
ja
aaa
icebp
idivl
add
add
ror
add
scas
xchg
pop
xorb
fldl
hlt
add
xorl
add
sbb
xchg
add
insb
fidivs
outsl
data16
arpl
andl
cmp
into
fwait
push
jbe
addr16
xlat
mov
jnp
mov
int
sahf
mov
jmp
mov
mov
jo
adc
mov
ror
pop
cmpsl
ljmp
xchg
das
cmp
push
add
cmp
inc
movsb
or
pop
lahf
rcl
pop
add
add
mov
and
lock
je
and
outsl
cmp
xchg
daa
pop
sbb
inc
inc
cs
aas
mov
mov
dec
pop
outsb
inc
es
divl
insl
fnsave
loopne
sbbl
hlt
es
std
es
adc
insl
ret
fnstcw
mov
leave
cli
mov
and
cli
faddl
idivl
or
xor
jo
dec
cmc
jae
push
ds
cmp
and
jecxz
outsb
jb
mov
adc
clc
push
out
clc
pop
imulb
movsl
push
push
stos
dec
inc
sbb
add
xchg
inc
push
add
or
imul
stc
mov
mov
adc
jg
mov
xlat
sbb
sahf
nop
sub
lock
lock
lock
call
aas
push
lds
mov
jle
push
popa
or
xor
jae
daa
add
sbb
mov
adc
add
mov
repz
data16
gs
stos
addr16
ljmp
cmp
xchg
sbb
xor
mov
testb
add
inc
xor
fwait
pop
pop
repz
push
data16
roll
loopne
sahf
rcrb
bound
lods
js
jnp
js
int
std
mov
sub
push
rorb
clc
or
xlat
mov
aam
lods
aaa
or
hlt
js
scas
cs
int
add
mov
xor
les
bound
mov
sti
and
mov
xchg
mov
pop
hlt
rclb
push
imul
fsubp
or
cmp
cmp
sub
xchg
pop
mov
test
jmp
pop
cld
jg
mov
jae
cmpl
cmp
pop
test
testl
cmpsb
mov
lahf
xorl
iret
mov
fwait
outsl
dec
xor
push
xor
popa
bound
lea
je
mov
mov
sbb
xchg
xorb
fs
push
push
enter
out
call
aas
inc
lock
and
fldl
xchg
inc
insl
push
push
pop
test
mov
mov
sub
xchg
pop
clc
psubsw
loopne
std
inc
mov
jg
mov
xchg
sbb
push
bound
fwait
push
or
aaa
movb
mov
inc
push
add
and
iret
outsb
icebp
dec
xor
xchg
xchg
rcr
in
inc
aas
mov
add
jge
mov
jl
cmp
mov
dec
jg
ds
insl
mov
pop
xor
loopne
sbb
xchg
sahf
push
daa
and
or
fcomp
mov
int
add
mov
filds
andl
shll
aam
or
arpl
in
out
insb
xchg
mov
jg
outsl
stos
push
and
lret
loopne
mov
fcompl
push
std
lods
add
lock
fnstsw
or
or
ret
inc
push
and
xchg
out
mov
out
faddp
xchg
xor
fidivrs
loop
adc
push
dec
rol
mov
or
popl
mov
imul
out
rolb
nop
adc
mov
mov
xchg
shr
out
cmp
push
or
inc
cmpsl
mov
aas
les
pop
mov
jp
lock
push
and
inc
movsb
testb
jns
pop
pop
clc
inc
test
push
or
pusha
rcrb
test
jecxz
sub
ficoml
mov
ss
out
pop
mov
aam
mov
jl
stos
lahf
cli
decb
sbb
xchg
outsl
pop
pop
movsb
xchg
cwtl
inc
mov
and
movsb
subb
fadd
stos
test
mov
in
mov
sbb
or
cltd
mov
sub
add
mov
cmpb
lods
lods
popl
loopne
add
inc
mov
push
out
lds
imul
popf
inc
xchg
aad
leave
pop
outsl
loopne
xor
add
push
insl
pop
dec
ret
mov
and
adc
mov
lock
out
push
add
loop
adc
jmp
jns
jbe
incb
mov
push
xchg
cs
call
push
imul
je
pusha
inc
pop
sub
rolb
jg
inc
adc
mov
faddl
add
std
mov
inc
fdivl
mov
mov
add
adcb
sarb
pop
ljmp
dec
and
add
sub
in
daa
jmp
adc
push
aad
add
lock
xorb
pop
dec
adc
imul
mov
iret
cmp
adc
js
inc
mov
lret
mov
xchg
in
nop
sbb
adc
shl
loopne
mov
jno
and
mov
sub
andl
mov
inc
je
push
add
jecxz
cmpsb
mov
cmp
cmp
adc
shlb
jo
out
inc
mov
cmp
nop
add
test
cmp
lahf
imul
repnz
push
or
lcall
ret
mov
pop
fwait
js
cmp
cwtl
js
mov
or
pop
mov
movsl
mov
inc
cld
lea
adc
fwait
test
push
mov
mov
jno
pusha
out
rcr
aaa
std
cs
or
add
add
cs
incl
jl
ss
or
and
dec
mov
mov
pop
sub
jb
and
dec
mov
lahf
jne
loop
test
jns
popa
push
lahf
pop
jnp
add
cmp
aam
inc
sbbb
insl
mov
cmp
mov
and
cwtl
sbb
or
addr16
lea
mov
js
xchg
iret
xor
push
inc
cmp
pop
cmp
outsl
js
inc
or
inc
icebp
in
pop
pop
dec
enter
push
adcl
xor
imul
push
cld
loopne
inc
push
pop
ja
push
sub
insl
or
divl
push
je
inc
incb
mov
lock
xor
movsb
add
mov
pop
mov
jnp
je
xchg
jge
push
sub
mov
inc
int
fidivrs
pop
es
adc
repnz
testl
or
icebp
stos
sbb
mov
or
cmp
jp
or
mov
mov
and
cmp
rorb
pop
imul
dec
push
xor
clc
test
cld
mov
std
sbb
dec
add
sahf
jle
leave
ret
mov
movsb
imul
shll
jb
pop
test
xlat
xchg
mov
je
dec
sub
jmp
sub
mov
sahf
add
add
cli
adc
loope
add
adc
adc
ss
das
je
mov
xchg
in
hlt
ret
test
rcl
add
popf
test
add
fwait
pusha
and
and
add
andl
add
jo
sbb
inc
add
dec
loope
jb
push
pusha
rclb
outsb
or
out
jb
incb
lret
sbb
inc
cmpsl
inc
sbb
xchg
ljmp
add
dec
xchg
arpl
setge
pop
inc
or
subl
popa
add
add
rcll
mov
xlat
js
pop
cld
out
inc
dec
push
jno
dec
sarb
cltd
loope
mov
aas
lock
pop
pop
or
add
push
jecxz
cmp
test
mov
lods
jbe
fdivrs
jo
sbb
jbe
or
pop
pop
dec
fildl
sbb
add
push
adc
jle
cmp
lods
push
pop
sbb
aaa
sbb
mov
popl
mov
push
popf
sub
pop
imul
enter
or
repnz
pop
xchg
int
inc
in
cmp
les
jo
das
mov
xchg
insb
or
movsb
mov
or
insb
cmpb
lods
pop
aad
or
xchg
ja
not
rorb
cmp
andb
jle
adc
insb
aas
adc
shlb
testl
fstpt
loop
ja
out
or
sbb
mov
std
sub
out
in
xor
mov
add
sbb
jp
lods
mov
add
cmp
jae
imul
test
jbe
mov
xchg
mov
cld
jg
addr16
pop
mov
in
inc
and
lret
mov
lahf
mov
pop
pop
mov
imul
call
pop
loopne
push
aad
pusha
jle
in
nop
jp
pop
fistps
stos
popa
add
jbe
adc
mov
inc
pop
fidivrl
adc
out
push
push
jo
xor
ret
movsl
jnp
nop
sub
sub
or
bound
add
pop
mov
test
xlat
or
jo
lret
pop
cmp
mov
mov
insb
test
outsb
dec
mov
arpl
fistpl
add
jae
jns
movl
inc
cmc
sub
sbb
sbb
outsl
addr16
fisttpll
jle
and
pusha
xchg
mov
sbb
add
aad
mov
push
call
lds
inc
mov
daa
andb
repnz
hlt
es
arpl
call
in
ror
das
sbb
pop
insb
sbbb
cmp
sbb
in
stos
cmp
jne
lock
and
and
mov
cmpsb
add
and
in
cwtl
xor
sub
jg
push
and
loopne
pusha
mov
xchg
xor
add
pop
push
daa
fst
ja
mov
add
imul
hlt
nop
out
lcall
js
push
and
loopne
andb
add
jecxz
js
mov
inc
push
jbe
sub
sub
outsl
les
mulb
fidivrl
xor
cwtl
popf
arpl
arpl
sub
adc
pop
cld
pop
xchg
mov
add
subl
jle
sub
or
xlat
ss
sbb
insb
popa
insl
push
xchg
mov
ret
pop
adc
addb
aam
mov
sub
and
pushf
cwtl
push
ss
dec
jg
xor
xlat
in
das
mov
inc
shrb
fnstsw
push
fsubr
inc
rclb
stos
sbb
out
lods
ja
loope
or
jns
mulb
es
mov
push
jp
xor
sbb
sbb
or
js
cltd
dec
push
xor
push
or
movl
ds
fcomp
shll
add
add
mov
out
pusha
inc
hlt
and
je
add
sbb
cwtl
outsl
push
sub
fwait
add
rcrl
jge
or
lods
sbb
int
clc
push
mov
pop
sub
mov
ret
test
sub
int3
push
push
aam
xchg
cmp
mov
mov
push
xlat
or
or
or
popa
je
xchg
mov
sbb
sub
jns
cwtl
mov
and
mov
mov
cmp
jmp
dec
ss
xchg
aaa
icebp
dec
jno
outsb
sub
or
jp
loop
mov
add
xchg
mov
jns
cmp
setl
xor
shll
lds
inc
rcrb
call
jle
xor
cmp
xorb
and
stos
pop
ja
inc
rclb
pop
add
mov
stos
jnp
xorl
sub
pop
cmpsl
xor
shll
fldl
test
adc
xor
enter
jg
mov
aaa
lea
imul
outsl
clc
push
mov
in
sub
jp
and
mov
mov
shlb
or
adc
xor
jnp
sti
sub
nop
cmp
push
jnp
push
mov
cli
scas
mov
jne
and
movsl
dec
out
incb
rolb
subl
add
jo
cmp
mov
xor
sbb
push
shlb
aas
sar
push
scas
or
or
add
or
sub
out
icebp
insb
aad
mov
cmp
clc
mov
stc
pop
xchg
negb
mov
jae
insl
and
popa
mov
scas
push
push
shll
xor
cmp
cld
mov
scas
dec
dec
in
addb
aad
xor
fstpl
xchg
lahf
jp
shlb
aaa
dec
and
shlb
repnz
jp
sub
pop
pop
jecxz
xchg
test
mov
loopne
fdivrp
imul
dec
outsb
test
pop
push
add
out
xorl
xchg
stos
aad
scas
negl
aaa
insb
in
adc
jbe
dec
pop
imul
xchg
subl
outsl
out
ja
mov
shlb
roll
jmp
adc
and
adc
into
fisubrs
jp
adc
add
movsb
pop
je
notl
mov
and
mov
and
dec
mov
outsl
test
inc
test
mov
push
adc
in
repz
jne
cmp
jmp
cmp
emms
outsb
jg
mov
repz
mov
jno
cmpsb
sub
out
ja
add
loop
mov
insl
ja
loop
inc
push
xorl
outsb
jns
das
pop
lods
sub
mov
div
add
pushf
pop
imul
jl
ret
loopne
jnp
or
fsubrl
lds
cmpb
xchg
fiadds
add
adc
mov
cltd
call
pop
faddp
xor
test
leave
sub
inc
ja
test
jg
movsb
ja
push
sub
mov
in
loop
push
out
loopne
jmp
std
cmp
imul
daa
xor
pop
mov
dec
xchg
jmp
push
mov
outsb
outsb
add
mov
mov
push
xchg
push
pop
push
pop
ja
loope
fs
and
jb
adc
faddl
imul
ljmp
mov
or
subl
sbb
fmuls
adc
das
imul
lods
jecxz
testb
idivb
js
imul
fildll
in
mov
lahf
in
dec
mov
gs
push
bound
push
mov
adc
out
mov
ja
push
insb
fmull
dec
fs
sti
jb
xor
aam
mov
xchg
sbb
mov
repnz
or
mov
repnz
outsl
cli
inc
dec
mov
push
mov
inc
outsb
push
pop
pop
arpl
cwtl
cld
pop
aaa
fstpl
add
adc
cltd
fcmovnb
inc
jb
inc
cmp
lock
icebp
add
inc
loop
mov
add
insb
xor
add
fcompl
fdiv
and
push
inc
dec
mov
pop
adc
rorb
push
push
mov
loope
xor
sbb
pop
inc
and
repnz
mov
adc
rolb
outsb
insb
lcall
mov
sub
cmpsb
outsl
clc
add
imul
xor
mov
jmp
and
pop
pop
cmp
stos
add
jp
and
jae
ja
insb
popf
mov
cmp
bound
mov
dec
std
sbb
in
xchg
cmpsb
jg
lods
mov
or
lea
repz
std
call
mov
sahf
xor
mov
imul
xchg
push
xchg
xor
sbb
add
jbe
movsl
fwait
xor
xor
sub
lods
cs
push
sub
ret
ret
push
imul
nop
or
mov
xor
mov
ja
inc
shl
hlt
push
ss
imul
nop
mov
cmc
mov
mov
push
daa
addl
and
push
icebp
adc
cld
mov
inc
ljmp
rcr
add
fnsave
clc
xchg
jb
movb
add
sahf
nop
or
fld
aam
ss
or
lods
mov
ljmp
addr16
adc
les
mov
jns
push
inc
xor
mov
data16
lods
cmpsb
daa
and
push
xor
insb
pop
and
popa
cwtl
nop
pop
pushf
add
pusha
imul
adc
jge
sub
in
push
out
jle
inc
in
push
subb
or
inc
es
add
jmp
jbe
int
jg
xchg
push
loope
xchg
pop
push
inc
ss
xchg
jp
dec
lea
sbb
out
or
jnp
add
ds
fwait
les
adc
jg
pop
adc
ds
add
xchg
std
es
loopne
in
lea
ja
add
mov
test
mov
sahf
ljmp
jo
mov
gs
mov
dec
mov
add
out
pop
add
add
ret
into
loop
add
sbb
or
mov
xchg
cli
int
inc
push
pusha
mov
ss
sbb
js
out
inc
aas
repnz
add
inc
xchg
adc
xor
mov
inc
push
loope
jo
js
mov
repnz
outsb
xor
mov
xor
test
push
adc
mov
xchg
lods
in
test
jle
and
in
inc
or
mov
dec
sub
lds
sub
mov
cmpsl
pop
movsb
aas
dec
roll
pushf
cmp
in
loopne
adc
and
and
sbb
rcll
lret
xchg
mov
hlt
scas
orb
hlt
xor
xchg
add
sbb
dec
jo
das
mov
enter
data16
int3
dec
mov
push
mov
js
push
cs
mull
mul
cmp
pop
push
mov
fsts
add
pshufw
rcl
push
inc
into
jp
jo
push
jg
adc
and
push
out
fisubrs
add
test
or
mov
iret
xchg
jae
ret
aaa
loopne
sub
mov
jns
xor
out
pop
fsubs
sbbb
add
outsb
lds
scas
fisttpl
insb
scas
sbb
mov
or
mov
cmp
pop
lcall
push
cmp
add
push
pusha
fldt
xor
or
testl
movsb
pop
mov
les
mov
outsb
lds
mov
sar
mov
dec
mov
fisubrl
inc
nop
les
jecxz
int3
mov
adc
add
mov
inc
in
cmc
add
lock
and
dec
cld
cmc
das
ss
sbb
cwtl
jnp
test
insl
repz
push
mov
das
cmp
test
cmc
test
adc
test
mov
jo
test
pop
push
mov
push
rcll
aas
pop
jne
add
adc
jns
push
push
popa
xorb
test
leave
sbb
popa
bound
push
add
push
aam
xorl
addr16
and
jne
imul
adc
in
je
int
addr16
and
addr16
cmp
xor
or
mov
add
pop
in
popa
xchg
push
in
lods
inc
lcall
testb
dec
lea
clc
mov
test
add
mov
sbb
scas
jno
pop
pop
addr16
mov
dec
daa
sbbb
adc
int
mov
inc
push
imul
dec
daa
hlt
xchg
js
in
xlat
push
jecxz
pop
mov
rcll
pop
sbb
push
addr16
scas
push
arpl
leave
mov
imulb
cmpsb
and
in
inc
pop
cmp
pusha
sahf
add
ss
mov
lods
mov
dec
dec
xor
loop
mov
xlat
sub
fs
cltd
sub
cmp
pop
pop
dec
inc
ljmp
sub
sahf
inc
lcall
pop
cmp
or
adc
ret
xchg
mov
add
add
sbb
mov
pop
sbb
mov
or
mov
and
push
cli
je
jl
jbe
test
inc
mov
xchg
mov
push
cmp
imul
add
cmp
dec
sbb
pop
pusha
nop
ljmp
aas
mov
mov
out
in
xchg
xor
mov
leave
leave
jg
aad
mov
daa
and
out
mov
lock
sub
shr
fildll
pop
sbb
dec
jge
cmp
cmc
adc
or
das
add
jecxz
icebp
push
icebp
aaa
lods
imul
inc
push
dec
ret
mov
cmp
cld
aaa
repnz
pop
pop
dec
add
adc
xor
inc
ret
or
mov
xor
mov
dec
cmc
insb
mov
dec
iret
sar
ss
outsl
cmp
out
in
cltd
jno
inc
adcl
in
mov
lods
shr
adc
fmuls
jae
mov
push
pop
mov
mov
fstpl
fwait
lret
sbb
dec
fists
xor
ret
icebp
adc
add
mov
xor
loopne
jo
jno
push
out
stc
xchg
xchg
in
lock
ljmp
mov
outsl
mov
pushf
cmp
and
cmpb
dec
or
cmp
lods
jnp
cmp
push
out
mov
psubusw
xorb
sub
mov
out
lret
inc
orl
outsl
jl
add
cs
or
xor
icebp
lds
sahf
or
fs
sub
pusha
add
out
pop
xchg
cmp
cld
inc
pushf
or
loop
cs
add
push
jne
jns
sub
mov
addl
or
dec
add
xor
sub
mov
push
add
imul
mov
inc
sub
pop
test
repz
call
push
popa
dec
inc
cmp
xchg
push
and
int3
push
mov
shll
roll
jp
lea
sub
stos
test
fisubs
pusha
cmp
in
into
sbb
jge
pop
dec
dec
jno
add
jge
mov
insb
repnz
pushf
addl
lds
ret
and
xor
pusha
shrb
cmp
lea
je
add
cmp
cmp
es
sbb
negl
rorl
and
ds
lcall
stos
lcall
jecxz
adc
ja
pop
sahf
sarl
imul
rcr
out
decb
adc
std
jo
repnz
cvtpi2ps
adc
je
push
dec
hlt
inc
adc
subb
pop
or
cmp
ret
sbb
hlt
push
jl
dec
cwtl
pusha
mov
add
incb
in
xorl
ljmp
sbb
dec
adc
push
pop
out
mov
sub
test
outsl
sbb
inc
in
enter
fildl
ja
mov
rol
mov
popa
mov
push
int
gs
js
loop
mov
push
cmc
jnp
pop
cld
sub
sub
out
and
adc
jae
add
xchg
xor
pop
xor
cmc
and
clc
push
aas
sti
loop
cld
sbb
xor
das
xchg
aad
jbe
std
add
inc
push
mov
sahf
cmp
loope
add
push
std
dec
adc
cli
adc
fiadds
adc
push
pop
cltd
das
or
mov
jmp
add
out
inc
push
imul
adc
jne
ss
pop
pop
iret
adc
or
fsubrs
inc
mov
shl
aaa
jge
xchg
jno
fs
outsb
push
cmp
mov
es
loope
push
cmp
xor
xor
stos
mov
jg
nop
in
fninit
mov
dec
nop
in
cmp
mov
in
andl
push
mov
fildll
fldl
cmp
outsl
cmc
jo
in
push
mov
out
ljmp
dec
cli
popf
dec
sub
inc
dec
mov
dec
pop
ss
fidivrs
adc
lret
push
inc
xor
iret
lods
or
or
out
cli
pop
imull
out
mov
mov
mov
insb
inc
aaa
adc
adc
je
call
adc
test
sbb
sbb
mov
shl
push
or
outsl
cli
push
dec
pop
dec
sbb
pop
push
xchg
and
daa
fcmovnbe
icebp
and
jge
loop
cmpsl
cmp
imul
sbb
sbb
or
les
and
push
loope
cmp
add
mov
jbe
repz
std
push
ja
loope
adc
clc
or
mov
inc
imul
xchg
roll
adc
mov
lret
pop
cli
mov
mov
rorb
xor
sbb
push
or
dec
or
push
dec
jno
mov
imul
pop
aas
cmp
dec
nop
dec
cmp
test
pushf
in
pop
sbbl
mov
mov
pop
cmp
cmp
lret
add
imul
test
nop
mov
loope
icebp
cmp
enter
mov
sarl
in
loopne
xchg
and
add
and
mov
dec
stos
cmp
test
and
and
ficomps
fcoms
addl
lcall
stos
divb
jmp
aaa
pop
cli
inc
mov
add
sub
cmpsl
xchg
dec
ret
pusha
lods
dec
in
fisttpll
and
jge
ret
imul
push
jp
orb
cmpsl
icebp
ret
or
jecxz
shrl
fistpl
mov
ret
and
jge
or
mov
out
add
mov
push
negb
push
fildl
imul
jle
cmp
sbbb
cwtl
shrl
cmp
fwait
mov
or
je
cld
cmp
sbb
inc
ja
xor
fs
add
cwtl
xchg
lret
fs
dec
mov
xor
in
pusha
push
jbe
jge
loopne
ja
mov
add
add
add
sbb
xchg
test
daa
mov
jne
aas
mov
in
jno
lret
dec
mov
xor
andl
les
pop
and
push
fs
fstps
sub
addb
pop
inc
and
mov
push
loopne
xor
push
fs
jge
ss
sbb
jle
cmovns
sub
mov
hlt
xchg
or
jbe
jl
pop
lock
jmp
lahf
in
icebp
cmp
les
push
and
cld
push
fistpl
mov
pusha
incl
dec
sbb
sbb
arpl
sbb
outsl
inc
add
in
or
mov
roll
aaa
push
mov
cmpsb
add
inc
outsl
xchg
sbb
loop
mov
test
stos
mov
pop
mov
inc
cmp
shrb
into
pop
xor
inc
sbb
ja
dec
inc
orl
cld
dec
pop
roll
fbld
sarb
pop
imul
ret
sbbl
aaa
adc
dec
stos
mov
fiadds
arpl
mov
add
add
push
push
mov
mov
rcrl
or
pop
lcall
mov
inc
xchg
pop
pop
inc
lret
and
sub
ret
icebp
fnstsw
fucomi
add
push
aaa
pop
inc
loope
mov
mov
jno
dec
movb
jo
xchg
sbb
xchg
les
and
add
cmpsl
pop
daa
cmp
cmp
adc
add
or
gs
or
push
adc
jb
mov
roll
pop
lret
js
ljmp
xor
mov
sbbb
ss
jg
cmc
jg
in
xorb
dec
sbb
icebp
lret
mov
inc
sbb
adcb
cs
xor
fistps
mov
xor
imul
jg
jno
js
les
sbb
pop
adc
repz
mov
or
sub
fbstp
cmp
fistpll
ds
stos
daa
jecxz
jle
xchg
xor
pop
jae
add
add
inc
jb
and
sub
jge
aam
lods
push
hlt
pop
je
notb
jmp
test
mov
ss
xchg
adc
call
popa
jl
push
sbb
push
fwait
mov
cmp
sbb
scas
push
bound
into
add
loopne
sbb
mov
popa
add
pusha
fcoms
insb
fsubl
push
idivl
xchg
ljmp
add
or
push
jg
xchg
jp
les
cli
jecxz
test
out
das
pop
mov
sub
mov
dec
push
je
and
adc
jg
dec
or
rcl
pandn
mov
mull
push
cmp
cwtl
xor
test
or
pushf
testl
pop
xchg
jne
jo
out
jno
clc
out
dec
jbe
cwtl
xchg
mov
es
fisubl
pushf
cmp
pop
push
inc
test
roll
xlat
je
jl
cmp
pop
pop
xor
xchg
mov
scas
sub
sbb
add
sbb
fwait
shl
cli
loop
arpl
sub
mov
inc
ss
lods
add
add
adc
sbb
jno
cld
or
push
sub
cmp
and
mov
sbb
aad
push
in
das
adc
cld
adc
mov
scas
push
mov
stc
add
stc
pop
push
hlt
xchg
nop
int3
stc
hlt
jb
lods
leave
in
mov
push
aad
subb
or
rorl
inc
add
mov
imul
and
test
fsubrl
nop
and
ja
mov
stc
outsb
xor
rcrl
xor
gs
add
push
jg
ss
add
jmp
xor
clc
lock
or
adc
sti
mov
sub
icebp
arpl
cli
pop
add
test
ficomps
push
jbe
hlt
mov
lret
inc
adc
dec
nop
out
outsb
subl
xor
out
loopne
pand
push
jo
adc
aaa
lahf
js
outsb
push
ret
imul
movsl
test
mov
jle
or
and
popw
cli
mov
pusha
jbe
inc
test
add
pop
std
rcrl
loop
filds
popf
in
xchg
outsl
cmp
adcl
rolb
sbb
jmp
and
jl
dec
mov
or
dec
jge
xor
or
mov
rorl
out
clc
cmpsb
outsl
clc
push
pop
js
add
stos
mov
test
std
in
daa
and
cld
in
in
dec
fwait
jae
inc
das
pop
data16
and
xlat
sub
flds
cld
test
or
dec
iret
das
pop
mov
jp
in
popf
mov
and
fstl
jg
repz
ss
cmpsb
nop
pop
mov
hlt
mov
sbb
jmp
lock
and
add
jmp
fadds
sub
mov
fbstp
or
cmp
xchg
or
jnp
and
jo
adc
or
out
push
in
mov
loopne
sbb
or
inc
dec
jmp
sbbb
sarb
and
arpl
jp
outsl
mov
jge
mov
add
scas
push
adc
pop
jb
ja
mov
dec
push
lret
stc
lods
mov
xchg
ret
stos
test
sar
imul
out
addl
das
outsl
cmp
mov
mov
push
push
adc
xchg
aas
pusha
test
or
and
inc
out
adc
cmp
call
sahf
rolb
sarb
inc
sub
pop
pop
dec
push
outsb
das
pop
into
push
sbbb
xchg
test
int3
sar
cs
ret
add
jl
xlat
bound
scas
lret
test
xchg
sbb
dec
xchg
out
sti
rolb
aaa
outsb
jp
add
rcrb
lock
out
test
mov
loopne
push
insb
add
out
adc
out
mov
xorl
pop
aas
mov
sbb
stc
dec
jp
xchg
cmp
std
mov
push
loopne
jle
in
mov
xor
pop
xchg
test
pop
roll
sbb
bound
enter
cmpxchg
pushf
ljmp
aaa
add
nop
push
cmp
clc
jne
dec
insb
pop
loopne
and
out
lea
cmp
mov
push
push
add
movsb
aas
mov
or
mov
jle
in
or
mov
test
sub
lock
xchg
xor
or
and
mul
push
add
stc
xor
into
and
xor
xchg
mov
pop
daa
cmp
mov
out
xchg
fmuls
mov
out
adc
mov
sbb
mov
test
pop
lcall
mov
adc
addr16
int
mov
lea
stos
insl
sti
or
mov
jl
pusha
pop
xacquire
outsl
add
std
mov
std
test
imul
cmpsl
pushw
pop
inc
mov
pop
addr16
repz
xchg
mov
mov
adc
subb
arpl
aam
mov
dec
pop
mov
mov
pop
sbb
push
pop
dec
pop
mov
scas
jge
in
jecxz
pop
loope
dec
insb
loopne
mov
inc
lods
jno
or
jo
inc
pop
pushf
dec
push
xor
cli
ret
push
cmp
and
jns
test
xchg
add
xchg
pushf
lret
jp
inc
sub
xchg
cs
xor
xlat
lea
scas
hlt
push
clc
inc
cmp
jb
and
push
mov
outsl
ret
jne
nop
inc
cmp
and
popf
fistpl
insl
stc
push
pop
ljmp
xchg
dec
mov
outsl
sbb
sub
cmp
ja
aam
mov
sahf
outsb
cltd
push
lea
ret
cmp
push
mov
mov
mov
idivb
and
aas
mov
test
mov
js
popf
sub
aam
mov
dec
movq
and
in
mov
pusha
lods
stos
sar
in
xchg
pusha
jp
lea
test
aad
shlb
stos
jg
jns
add
mov
sbb
pop
mov
and
cmp
cwtl
cmp
out
clc
pop
xor
cmp
dec
dec
add
stos
in
sahf
cmp
ret
add
test
add
es
and
ljmp
lds
xchg
pop
mov
int
loop
xor
or
daa
shr
arpl
outsb
ss
das
inc
cmpsl
jae
or
sbb
mov
lcall
jnp
sti
mov
push
add
adcb
jmp
outsl
fcomip
ja
out
mov
sbb
dec
push
scas
push
jl
dec
or
sbb
in
or
fistpll
out
aad
push
mov
mov
ja
loope
inc
fdiv
jb
and
add
cmp
sar
loop
subl
fsts
addr16
pop
lock
mov
jmp
cmp
rclb
jnp
dec
xor
mov
push
xlat
push
stos
outsl
mov
add
xor
pop
clc
cwtl
and
cmp
mov
fdivp
ss
test
dec
nop
pushf
movsb
test
and
xor
movsb
mov
lahf
ror
jns
add
out
jnp
pop
add
and
mov
pusha
hlt
jne
aam
loop
jl
out
fiadds
std
vmwrite
pop
data16
cmp
insb
inc
jmp
jge
push
pop
into
dec
cmp
or
mov
ljmp
jnp
mov
or
xchg
ja
adc
mov
adc
or
not
sbb
cwtl
push
add
cltd
cmp
or
adcl
imul
pop
mov
nop
pop
lret
inc
sbb
int3
pop
push
mov
cmpsl
nop
or
or
call
xchg
and
outsb
mov
adc
lock
outsb
and
rcll
sub
jo
fistl
aad
adc
in
dec
cmp
inc
jl
fstl
mov
test
das
pop
pop
mov
cwtl
cmc
pushf
cwtl
inc
xchg
fbld
rolb
pusha
jle
push
adc
cs
jg
mov
js
ficomps
filds
mov
aad
adc
in
add
stos
and
pop
stos
fisttpll
mov
add
shld
stc
mov
test
or
ljmp
push
xor
cld
pop
sub
mov
shll
cli
dec
ljmp
jmp
add
fcmove
jno
loope
inc
dec
lret
ret
je
jp
add
dec
cmp
mov
jo
push
add
andl
xor
test
into
scas
add
ja
lret
das
cmp
mov
and
in
negl
iret
in
loope
flds
cmp
jl
lea
mov
call
mov
sbb
or
mov
or
push
daa
ret
ret
pop
rolb
ret
and
ja
mov
popa
jo
sbb
mov
int3
xchg
sub
std
sbb
loop
mov
and
mov
or
fistps
mov
inc
push
jmp
push
adc
pop
push
add
or
loop
jp
xor
xchg
cmp
loope
repnz
imul
adc
jl
inc
inc
mov
jns
sbb
je
psubusw
lahf
int
ljmp
pop
or
mov
sbb
out
lahf
and
lods
dec
mov
or
cmpl
inc
loopne
dec
xchg
cld
pop
cli
repnz
fisttpl
or
and
or
sahf
addl
cmc
dec
insl
cli
push
push
sbb
lahf
mov
jo
jbe
push
jb
inc
test
icebp
push
pop
lea
add
out
insb
cli
adc
inc
dec
aas
dec
push
mov
std
add
sub
sub
cli
push
cmp
ljmp
mov
mul
fwait
imul
pop
jo
sbb
or
mov
inc
jmp
mov
push
les
andl
pusha
idiv
test
mov
adc
mov
add
jne
xchg
sub
or
ljmp
fcompl
fs
rcll
lcall
cmp
enter
das
fstpl
mov
cmc
or
cmpsb
sbb
jg
lcall
inc
ret
inc
test
rcll
mov
jo
sub
jmp
or
hlt
xchg
stos
fdivp
out
jecxz
ret
cltd
orb
and
mov
mov
dec
mov
sbb
pop
loop
fisttps
pushw
and
sbb
orb
sahf
adc
xlat
push
mov
xorb
bound
int
jge
adc
jne
pop
add
in
inc
jbe
int
fdiv
movb
inc
xchg
int3
inc
cmp
bound
mov
popf
cmc
neg
in
add
add
out
pop
jbe
inc
aaa
or
inc
inc
repz
sub
insl
je
jle
sbb
push
mov
adc
iret
popa
dec
inc
pop
cmp
push
xorl
xchg
hlt
test
inc
inc
sbb
aaa
pop
or
lcall
push
push
aad
loopne
xor
cmp
pop
mov
mov
pop
lret
arpl
add
sbb
mov
xor
cmpsb
pop
jp
pop
lcall
push
sbb
pop
js
or
or
pusha
add
aad
cmpsl
add
and
popf
push
adc
js
stos
sub
out
pop
pop
js
clc
fistpll
in
push
popa
cmp
xor
adc
loope
cbtw
fwait
sbb
sub
jb
js
dec
jge
pop
out
mov
dec
hlt
push
push
pop
je
inc
mov
jbe
ja
stc
movsl
repnz
popa
ljmp
stos
arpl
out
scas
sub
jb
adc
mov
mov
sub
dec
adc
mov
cmp
jmp
pop
call
add
xor
push
adc
sub
or
shll
cmp
aaa
jmp
or
test
sti
and
inc
fisubl
stos
ret
jbe
sbb
dec
add
stc
xor
lcall
push
cmp
lahf
clc
negb
shlb
fcoms
in
add
adc
xchg
in
popf
pop
mov
int
icebp
adcb
mov
mov
es
and
jecxz
sbb
adc
aad
adc
or
sbb
cmp
cmp
and
xchg
arpl
mov
js
jecxz
pop
jnp
mov
aaa
cmp
mov
push
pushf
xchg
pop
xchg
clc
push
clc
pop
sub
test
outsb
lret
sbb
adcb
movsb
add
pop
into
cmp
jb
add
pushf
cmpb
outsl
les
add
dec
sbb
outsl
inc
outsb
fcmove
cwtl
lds
cwtl
or
jl
ljmp
ror
adc
sahf
fisttpl
fdivp
pop
mov
xchg
push
xchg
sahf
dec
and
jl
pop
mov
sar
aaa
and
int
jae
pop
adc
xor
es
ret
fstpt
adc
add
sbb
xchg
and
jns
sbbb
aam
dec
inc
enter
mov
or
push
outsb
rol
leave
xchg
std
jl
repnz
xor
cmpb
loope
sbb
xchg
push
cmpsl
aaa
pushf
inc
es
movl
icebp
test
push
addr16
pop
cld
mov
popa
repz
loop
aas
roll
add
mov
scas
xor
xor
or
cmpsl
cmpl
xor
xor
jo
lcall
mov
arpl
scas
rorl
test
adc
rclb
sbb
jb
and
sub
mov
sbb
ljmp
sbb
lret
pusha
in
or
mov
inc
hlt
fdiv
cmpsb
adc
in
outsb
bound
imul
push
mov
sub
xchg
add
jmp
movl
pushf
push
sbb
pop
xchg
cmpsl
pop
hlt
out
cmp
or
mov
mov
cwtl
orl
std
les
scas
and
aaa
addb
xchg
mov
addl
repz
add
call
imul
inc
into
out
push
add
loope
adc
gs
int
out
or
enter
out
ficoms
outsl
add
inc
div
flds
popa
sbb
add
aam
add
pop
pop
cmpb
xchg
jnp
les
and
mov
loopne
aaa
inc
xorl
push
push
jp
or
sti
fs
popa
push
repnz
pusha
test
jne
or
out
arpl
insl
sti
out
arpl
add
inc
push
xchg
loope
pop
push
das
aas
push
mov
loopne
xchg
iret
das
rorb
mov
sbb
pop
insl
mull
ljmp
in
pop
dec
andb
and
pop
add
jno
mov
or
enter
je
iret
jp
mov
repz
jge
fcmovne
das
test
mov
or
loopne
mov
lock
cmp
ret
push
mov
scas
fbld
xor
aad
inc
adc
add
mov
jmp
mov
jmp
js
je
mov
lcall
mov
ffree
pop
push
out
orps
xchg
loop
mov
fldcw
cli
sbb
xor
and
mov
lock
test
xchg
pusha
mov
hlt
push
cmp
sbb
xchg
sti
out
loop
hlt
jl
jnp
add
mov
inc
xor
inc
aaa
test
pop
pop
pop
xor
jnp
std
or
aad
rcrl
out
fdivs
mov
mov
dec
movsb
vphaddbq
add
aam
pop
inc
sbb
xchg
cmpsb
testl
cwtl
mov
sbb
add
js
daa
cld
loope
cmpsb
mov
dec
or
fwait
mov
ret
inc
xchg
and
pop
inc
or
or
or
daa
ss
jb
or
pshufw
icebp
add
ret
stc
bound
jp
cwtl
dec
das
rolb
adc
add
inc
push
cmp
outsl
sbb
imul
loope
pop
movl
and
fdivp
imul
inc
into
aam
hlt
push
mov
dec
inc
arpl
mulb
add
sbb
loope
and
xchg
inc
ljmp
mov
loop
insb
add
ljmp
loopne
pop
repnz
sbbb
das
mov
push
jle
ss
cli
insb
popa
adc
jb
cmp
adc
mov
sbb
xor
jg
adc
inc
or
aaa
xchg
call
sbb
add
cmp
xchg
fs
fs
push
xor
inc
cmpb
push
sbb
testl
in
inc
push
rcr
and
icebp
jbe
sbb
lret
pusha
push
xchg
ds
mov
aaa
xchg
shl
insl
push
mov
fstl
imul
imul
mov
adc
mov
shlb
cmpl
repz
jg
frstor
push
fs
clc
pop
outsb
dec
xchg
enter
sub
inc
imul
pop
pop
pop
inc
icebp
and
xchg
les
sbb
aad
dec
mov
out
std
frstor
cltd
inc
or
ret
out
fwait
outsl
and
mov
jecxz
daa
adc
nop
adc
sbb
cli
out
jae
stos
stos
sub
add
mov
decb
jbe
and
arpl
cmp
inc
fistpl
sbb
jecxz
jg
jo
aas
sti
add
je
jp
xor
add
cs
lahf
ja
sbb
sbb
out
jo
sbb
stos
leave
push
push
lds
mov
ret
adc
push
arpl
pop
repz
orb
imul
loop
cmpb
xlat
ds
bound
sahf
popf
outsb
sar
dec
push
cmp
and
mov
mov
jbe
and
ss
test
scas
lods
mov
dec
dec
es
push
add
add
lea
jl
xor
mov
es
and
pop
arpl
push
outsl
divb
pop
cmc
out
jge
add
jnp
or
decl
or
mov
les
push
bound
daa
inc
daa
jp
shll
jp
ds
or
in
sbb
adc
jo
jle
mov
mov
add
jg
jg
out
cmpsb
outsl
das
andl
sub
loop
addb
insb
pop
bound
sub
mov
pushf
rcl
pop
call
jmp
sub
jle
cmp
inc
add
pushw
fldl
push
jmp
mov
enter
dec
xchg
addl
gs
pop
inc
mov
mov
inc
sbb
mov
adc
mov
sbb
sahf
inc
mov
jg
pop
test
mov
sahf
imul
mov
mov
dec
dec
sub
adc
in
pop
mov
jl
and
push
std
jae
fildl
push
xchg
pop
scas
mov
sub
push
mov
or
adcb
mov
nop
sbb
scas
push
mov
adc
push
js
in
arpl
mov
lahf
ja
cmp
fstpl
pushf
inc
les
subb
aaa
pop
mov
or
jo
add
pop
pop
outsl
add
sub
add
lahf
arpl
dec
pop
fisubs
xchg
and
test
lret
add
and
insb
in
xor
push
mov
dec
dec
clc
jmp
pop
cmp
imul
sti
outsl
sub
dec
loop
xchg
add
xchg
nop
adc
jecxz
sub
pop
add
dec
mov
push
mov
outsl
jae
xchg
jns
mov
push
push
pop
pop
mov
fadd
add
sbb
mov
xchg
sub
pop
dec
aas
mov
sbb
pusha
and
mov
mov
js
jle
add
mov
xor
xchg
dec
loop
sbb
mulb
and
test
loopne
sub
inc
loop
cmc
or
lcall
mov
daa
pop
inc
lock
add
lods
or
dec
adc
or
push
dec
xchg
sti
xor
andb
push
stc
mov
adc
filds
cmp
adc
pop
fidivrs
icebp
es
mov
fldcw
jecxz
xor
xchg
int3
call
mov
std
out
push
clc
push
daa
adc
loope
imul
adc
adc
mov
rorb
xchg
insb
add
adc
sub
add
ror
out
data16
inc
inc
shl
repz
fldl
jo
xchg
test
jg
sbb
iret
push
adc
dec
jecxz
pop
or
test
sub
mov
mov
jmp
test
inc
scas
popf
inc
sbb
stos
push
rcr
pushf
inc
std
js
pop
and
fwait
pop
sbb
mov
mov
pop
cld
rorb
mov
dec
add
scas
sbb
testb
push
sti
clc
out
popa
decb
dec
ss
es
lahf
inc
cltd
cmp
jmp
push
int3
cmp
test
jp
aas
push
cmp
cs
fs
sub
mov
nop
add
dec
add
adc
xor
pop
sub
mov
xchg
adc
jb
pop
jbe
cmc
inc
and
mov
jmp
popf
popa
push
jp
mov
pop
push
mov
mov
dec
jmp
in
adc
rol
xorl
mov
mov
jmp
push
dec
mov
lcall
mov
pusha
in
cltd
sbb
dec
aaa
arpl
or
repz
inc
inc
or
hlt
jge
mov
fwait
cld
xchg
dec
inc
fisubl
popf
xor
sub
and
push
xor
fnsave
mov
test
test
aam
xchg
sub
cmpsb
lods
xchg
loope
mov
jp
push
xchg
outsb
mov
shrb
cltd
xor
jo
mov
xchg
adc
mov
dec
pop
aaa
and
xchg
fcomps
ret
loopne
adc
push
pop
push
mov
xor
xchg
icebp
out
ret
jae
add
pusha
push
and
loope
cmc
xchg
or
jecxz
subl
add
cwtl
mov
xchg
scas
shl
sahf
roll
cmp
mov
jns
clc
ret
pop
and
pop
dec
iret
cwtl
rolb
ret
dec
out
dec
sub
scas
pop
jno
jmp
sub
dec
jb
xchg
jmp
or
dec
rorl
or
xor
mov
aad
in
fwait
mov
ja
xor
mov
or
adc
mov
mov
mov
fdivrl
in
mov
aad
mov
jno
adc
int
jecxz
es
mov
inc
out
pop
xor
cmp
ret
jno
inc
sub
dec
std
scas
inc
loopne
inc
sbb
xchg
ret
sbb
jo
mov
mov
and
mov
jmp
inc
cs
stos
add
mov
xchg
sub
mov
jo
and
pop
cld
inc
jg
pop
daa
fisubs
and
adcb
cmc
mov
subl
stos
icebp
fnstsw
inc
pushf
loope
add
xchg
mov
pop
or
push
jl
xchg
pop
mov
ret
ss
sahf
sarl
iret
add
insl
test
mov
jae
xorb
test
cmp
add
std
mov
lcall
stc
xchg
bound
lds
sub
lods
leave
add
pushf
cld
std
rcrb
negb
sbb
cmp
rep
stos
add
ss
jl
leave
mov
xor
sbb
xchg
or
add
rcr
mov
fwait
jle
sbb
hlt
out
pop
xchg
pop
pop
sti
cld
or
or
xor
incb
sbb
or
lret
mov
popa
stc
mov
ja
lret
and
es
mov
sub
xchg
sbb
push
shll
mov
jns
insl
jo
mov
ret
cmovno
push
pop
movl
fdivs
sbb
movsl
xor
and
add
loope
xchg
iret
lods
mov
aaa
addr16
loopne
mov
mov
enter
sbb
inc
jge
scas
mov
push
inc
mov
add
cvtdq2ps
jne
push
push
or
or
loope
sbb
jnp
cmp
or
jnp
outsl
xor
in
lods
out
sbb
jbe
mov
mov
shll
into
mov
adc
stc
inc
decl
mov
cmp
adc
bound
dec
jne
jmp
mov
sbbl
ja
cmp
jp
js
inc
das
stc
add
enter
loop
idivl
repnz
and
sbb
sub
mov
in
cs
lock
pop
xor
add
mov
test
jl
es
imul
addl
jbe
fidivrs
pusha
sub
mov
repnz
aaa
adc
cmpsb
enter
arpl
testl
inc
and
cmp
mov
stos
jecxz
lock
add
inc
in
cmp
sahf
inc
loop
jno
aam
lock
lods
cmpsb
push
ljmp
fdecstp
insb
mull
inc
int
insl
test
das
sbb
cmp
in
sub
fwait
push
das
jae
add
call
ds
lahf
ss
out
mov
mov
cmpb
sbb
mov
cmpb
or
mov
push
sub
sbb
pop
jno
inc
nop
sbb
test
jnp
mov
add
adc
and
out
ret
push
pop
and
and
add
leave
mov
xchg
flds
into
pop
cmp
cmp
push
cmp
dec
add
loope
add
les
inc
or
in
adc
mov
adc
es
and
lock
in
insl
call
pop
xor
lods
in
dec
mov
xchg
mov
je
and
sbb
jnp
xchg
xor
cmp
mov
jbe
ss
lret
call
and
sahf
sbb
sti
adc
jecxz
fistpll
mov
loope
ja
ret
jecxz
fisubl
pop
or
je
pop
arpl
inc
cmp
add
jg
pop
aaa
push
out
inc
in
fildl
inc
nop
ljmp
inc
loope
out
add
jge
imul
ret
jno
sar
movb
or
mov
push
add
arpl
outsl
loopne
out
ret
bound
cmp
gs
push
pop
cmp
shr
or
scas
sub
inc
or
sti
push
adc
cmpsl
xorl
sbb
adc
adc
divl
lds
cmc
xor
mov
mov
into
sbb
ss
cld
dec
pop
imul
add
pop
cs
fistps
les
arpl
imul
or
repz
dec
outsl
fnstenv
or
out
outsl
jno
js
stos
pop
pushf
sub
lods
sbb
dec
mov
add
aas
test
lds
jp
sbb
mov
shr
mov
je
mov
clc
jge
sahf
movsl
in
mov
cmpsb
fstps
pusha
les
insb
jge
add
insb
iret
adc
sarl
int
cmp
adc
or
das
test
loopne
ss
jge
push
push
repz
loopne
adc
std
jo
xor
mov
xchg
std
adc
push
andl
pop
inc
in
push
inc
rol
movsl
pop
xor
push
jmp
jbe
stc
xorb
or
outsb
push
jecxz
js
pop
xor
and
lock
mov
xor
adc
ret
push
fidivrs
lahf
cmp
xchg
and
dec
xor
frndint
aas
pop
ljmp
in
fldl
xchg
loope
pop
jp
add
push
ret
cmpsl
fcoms
aas
mov
xchg
insb
pop
repz
stc
into
daa
xlat
or
dec
out
cli
dec
sub
addr16
jo
pop
cwtl
add
mov
inc
mov
xchg
or
sub
lea
dec
mov
test
andl
imul
insl
push
pop
hlt
out
xchg
imul
xor
xor
sub
inc
int
jg
mov
pop
inc
mov
inc
mov
pop
pop
push
xchg
call
in
inc
cmp
pop
nop
or
xor
adc
mov
pop
cltd
mov
cmovo
jne
dec
daa
roll
xor
ficoml
push
pop
sub
add
addr16
out
clc
imul
and
sbb
out
fcompl
adc
fdiv
sbb
push
sahf
cmp
ficoms
cwtl
xor
cmpsb
xor
ss
shll
test
fisttpll
pop
lcall
push
in
out
push
mov
push
into
nop
xchg
inc
loope
fidivl
loop
mov
clc
sbb
fbstp
sbb
push
push
popf
push
scas
pop
pushf
push
mov
push
hlt
inc
push
addl
repz
fistps
jb
inc
adc
out
cmp
fiaddl
add
add
push
movl
jo
aas
daa
inc
ja
jecxz
cwtl
cmpsb
pop
pop
inc
jmp
test
xor
push
mov
setp
popa
and
dec
rorb
add
mov
mov
inc
mov
mov
mov
fistpl
push
add
inc
sub
clc
jge
mov
movd
aaa
jo
push
sbb
inc
cs
stos
repz
and
hlt
repnz
addr16
repnz
pop
or
adc
jl
xchg
in
nop
and
test
cmp
insl
cmp
dec
jns
mov
mov
dec
adc
ror
roll
rclb
dec
call
fwait
scas
sbb
shl
testb
xchg
lds
jp
lock
mov
jno
mov
imul
pop
aam
in
lret
xor
xchg
mov
mov
mov
xchg
cmp
in
mov
sub
pop
dec
les
mov
scas
sbb
ficoml
pop
jg
xlat
mov
sbb
dec
cmpsb
stos
sub
inc
dec
jb
adc
lahf
ret
xchg
and
scas
xchg
xchg
and
inc
dec
das
pop
movsl
inc
call
lds
cmpsb
fwait
movsl
push
push
push
daa
cmp
pop
add
push
add
test
pushf
jo
xor
jb
shlb
add
adc
rolb
push
jecxz
mov
cmpsl
jmp
push
lret
loop
pop
jge
jo
xchg
arpl
data16
test
push
mov
iret
pop
nop
mov
or
subl
aaa
or
divb
sbb
mov
clc
aas
pusha
xor
pop
lock
enter
cmp
push
nop
jb
xlat
icebp
fldt
addr16
inc
adc
js
andb
lcall
test
xor
add
push
pop
mov
nop
xor
lea
jge
sti
test
jp
fwait
loop
loopne
data16
push
add
ret
inc
aas
shrb
bound
shrb
arpl
and
push
adc
or
mov
sub
jmp
aam
clc
jno
jno
mov
pop
cld
pop
mov
lods
sub
leave
mov
data16
adc
test
fwait
scas
dec
and
and
fdivl
pusha
scas
scas
hlt
jl
jmp
clc
add
in
and
pop
dec
add
fs
adc
inc
call
insl
out
cwtl
stos
nop
stos
getsec
add
jp
insb
inc
and
xor
das
jmp
xchg
mov
xor
test
pop
sarb
test
das
mov
pop
fdivr
jg
pop
pop
xorb
xchg
inc
adc
andl
and
add
mov
mov
cmp
dec
vcomisd
cltd
cmc
ja
add
enter
pop
mov
cmp
lcall
xor
imul
xor
push
sbb
pop
mov
aaa
ja
js,pn
dec
add
test
sbb
pop
or
test
pop
mov
and
vmovdqa
aaa
adc
stc
js
in
pop
and
addl
lret
fisttps
pop
push
push
arpl
xchg
in
fwait
cmp
and
cmp
cwtl
add
gs
mov
jle
in
push
pusha
pop
repnz
leave
add
in
sbb
outsl
mov
adc
mov
cmp
sub
adc
push
adc
leave
std
sub
es
add
out
mov
addps
pop
adc
repz
sbbl
outsl
xchg
push
jb
ficompl
jle
js
push
lock
push
jnp
movsb
sbb
jo
xor
test
aaa
mov
push
subl
push
icebp
stos
pop
push
movsb
sbbl
es
push
addr16
xorl
shl
hlt
scas
mov
sbb
mov
pop
inc
push
jne
ljmp
pop
inc
cmpl
add
xchg
cld
lock
lea
sbb
adc
loop
adc
notl
data16
pop
hlt
les
pushf
add
mov
sub
pop
mov
dec
out
lahf
push
mov
pusha
stos
cs
sbb
cmc
pop
cmp
loop
orb
sub
mov
lret
daa
rorl
movsl
scas
outsl
or
dec
call
shrb
popa
ljmp
or
insb
cli
cli
adcb
and
pusha
sub
xchg
inc
and
fcomip
insb
pop
pop
imul
push
ret
mov
addb
clc
add
xor
jno
dec
aas
lcall
fldcw
jmp
pop
adc
cmp
pop
jo
and
xor
fs
idivl
or
fwait
lahf
and
cs
mov
jo
jle
mov
leave
loopne
std
arpl
add
jnp
jb
incb
lahf
inc
lret
push
push
fistpll
iret
mov
sbb
clc
inc
jo
les
orb
dec
add
test
in
popf
stos
sbb
imul
sub
inc
lea
jo
ffreep
das
loopne
dec
testl
lods
adc
sub
mov
jne
sbb
jbe
testb
jmp
scas
pushf
popf
ret
in
add
data16
fidivs
int3
daa
jae
or
push
pop
xorb
sbb
fmull
adc
addr16
add
movsb
or
sti
daa
jmp
gs
sub
aad
mov
inc
andb
xchg
popa
je,pn
jo
popa
push
mov
test
jg
and
repz
push
out
jo
adcb
leave
adc
mov
adcb
jno
std
mov
arpl
xor
mov
mov
pop
push
inc
or
push
js
fdivrs
push
int3
dec
rcll
in
lret
pushl
and
xor
dec
bound
inc
hlt
push
dec
mov
or
lods
pop
jl
adc
std
fsubs
inc
test
cmp
mov
mov
cli
mov
ds
orb
sub
xchg
je
out
iret
andb
cs
insb
jnp
push
std
sub
pop
ja
jle
or
xlat
mov
loope
mov
adc
daa
int
push
incl
cmp
negb
in
pop
jle
test
cmpsb
pop
or
sub
or
outsl
clc
xchg
xor
xchg
or
ljmp
xchg
mov
cld
or
mov
aas
push
mov
add
cld
nop
add
inc
xchg
mov
jmp
ss
divl
adc
or
lods
clc
scas
cli
add
or
scas
adc
dec
dec
sahf
add
shrb
stos
addb
jmp
addl
lret
fmul
pop
jno
fistps
adc
sbb
lock
cmp
in
fs
adc
aaa
ja
cmc
sub
jle
pop
push
pusha
out
ss
dec
jecxz
std
adc
pop
xchg
cmc
mov
das
loopne
das
lcall
adc
push
push
cld
add
ljmp
js
adc
or
aam
insb
filds
add
aaa
jne
std
ljmp
sar
lahf
push
xchg
xor
das
inc
in
cs
xchg
shlb
popa
add
sub
cmp
cmp
cmpsl
add
pop
aaa
jae
jle
jmp
add
ret
inc
inc
mov
outsb
je
xor
movsl
push
imul
addr16
bound
add
mov
repnz
mov
cmp
nop
rcrb
mov
aas
or
sub
fisttpll
jno
rolb
shl
js
xor
xor
fistps
xchg
adcl
pop
add
pop
movl
add
mov
jecxz
loop
testb
mov
jo
dec
sub
call
stos
push
and
mov
inc
dec
add
sub
jnp
bound
leave
sbb
cmp
in
out
xorb
sub
xchg
mov
in
pop
jns
aad
adc
mov
cs
in
sar
sub
addr16
cmp
sub
push
in
cld
cmp
cmp
movsb
xor
test
int
call
ret
xchg
test
sub
inc
pushf
sbb
jb
mov
jl
fwait
cltd
cwtl
ret
inc
idivl
lock
fisttpll
jl
stc
ja
mov
lahf
sbb
loopne
mov
sbb
repz
mov
xchg
cmp
lds
cli
lds
pushf
les
mov
daa
mov
jno
ret
pop
push
pushf
shll
sbb
ds
dec
add
cmp
out
inc
xorl
and
xchg
xor
stos
fwait
jecxz
test
push
lods
xor
imul
je
enter
push
adc
xchg
imul
or
sub
fsts
cmp
data16
sub
test
cmp
push
and
xchg
or
inc
loop
mov
push
inc
sbb
das
push
pusha
out
aam
test
ljmp
jne
lds
pusha
leave
test
ja
jae
push
loopne
cmp
in
clc
xor
lock
out
loop
add
push
and
ljmp
test
ret
mov
or
fdivr
repz
adc
inc
pop
je
arpl
xor
push
or
or
pop
lea
pushf
mov
iret
gs
push
fistpll
add
ljmp
imul
outsl
out
shr
mov
out
call
dec
mov
fistpll
inc
xchg
out
adc
mov
mov
cs
inc
adc
fwait
inc
push
scas
dec
mov
test
ss
scas
jb
js
in
push
sbb
jle
pop
mov
pop
push
dec
sub
out
cmp
repnz
inc
sbb
sub
dec
push
adc
adc
dec
cmp
jl
xchg
mov
dec
insb
jns
push
testl
test
ret
pop
inc
add
xor
xchg
and
pusha
add
fsub
scas
out
ds
mov
pusha
movsb
adc
lcall
cmp
xor
mov
xor
mov
or
test
jle
js
test
mov
xorl
int3
jmp
js
jmp
pop
xor
jne
cwtl
sub
jne
push
hlt
xor
mov
fnsave
dec
idivl
push
adc
mov
xlat
inc
or
and
int
xchg
ja
test
push
call
out
xchg
rolb
and
pop
ljmp
pop
sbb
popa
cmpsb
mov
adc
inc
adc
decb
movb
rcll
ljmp
add
jmp
daa
xor
lods
dec
mov
jle
jmp
fwait
aad
outsl
out
adc
or
pop
arpl
xchg
int
out
and
xchg
std
rol
ret
or
divb
sbb
dec
sub
or
push
int
ja
jo
bound
adc
sub
lods
or
dec
leave
mov
stos
or
cli
pop
sbb
and
in
imul
iret
inc
sbb
pop
repz
out
sbb
jg
push
mov
push
or
mov
loope
cmp
push
aaa
or
dec
incb
mov
and
movl
sbb
lods
add
pop
or
add
sti
sbb
sub
xorl
mov
sub
dec
fnstsw
mul
mov
push
push
push
push
test
je
stos
int3
or
xchg
out
in
ret
and
sbb
repz
cs
mov
icebp
fldt
cmp
mov
mov
sarb
pop
mov
outsl
sub
or
icebp
mov
jae
sahf
loopne
out
and
icebp
sub
cmpsb
or
adc
jecxz
sarb
push
cld
add
jo
mov
test
fildl
cmp
and
bnd
cmp
test
adc
inc
rorb
sbb
sub
xchg
je
or
pop
cmpsl
sbbb
daa
pop
jle
jns
pushf
shlb
inc
xor
push
mov
pop
xlat
cmp
push
jbe
movsl
outsb
and
aam
dec
stc
and
jl
outsl
pop
inc
aam
out
leave
dec
jae
psubw
push
push
out
shll
inc
enter
pmaddwd
or
dec
aad
js,pt
data16
sbb
mov
and
add
xchg
sahf
aaa
in
adc
mov
sti
push
in
js
aas
pop
dec
adc
js
test
cmp
push
xchg
in
clc
xor
movsb
and
sbb
add
lock
sbb
push
fnsave
in
sahf
aad
jecxz
shrb
xchg
mov
or
push
lahf
bound
sbbl
std
push
testl
int3
or
jg
jp
and
movsb
or
push
push
or
in
add
int3
test
stc
add
jmp
rolb
je
clc
sbb
and
shr
gs
mov
icebp
xchg
in
add
and
pusha
roll
inc
pop
bound
pop
and
sub
test
outsb
mov
ds
ret
scas
add
addr16
loopne
jns
sub
sbb
or
push
ret
cli
std
or
sub
sbb
test
icebp
pop
push
insb
pop
pop
mov
mov
add
mull
inc
fistps
add
and
scas
xchg
jae
cmpsb
mov
inc
insb
pop
ljmp
fdiv
repz
scas
test
movntq
out
popl
add
xchg
push
jns
sub
sub
sub
pusha
sbb
push
sbb
xchg
es
arpl
repz
sub
fcomip
dec
sbb
setbe
pop
jae
jnp,pn
jnp
or
sbb
cmp
or
push
lret
lea
add
loopne
cmp
lods
adc
jge
and
cwtl
add
popa
xchg
enter
in
pop
decb
cmp
in
inc
call
mov
dec
leave
aas
mov
ljmp
and
scas
cli
fidivs
je
pop
pop
or
ljmp
lock
les
cmovb
and
rcrb
pop
jp
pushf
stos
dec
mov
inc
and
std
adc
push
jle
xlat
add
rorl
imul
ss
jb
and
mov
pop
pop
inc
xchg
xchg
jnp
and
outsl
cmp
add
pusha
out
mov
in
inc
cmp
lock
mov
arpl
xor
shll
fnstsw
test
inc
and
lock
sub
cmovge
mov
cmpb
pop
pop
ss
insl
jp
dec
jns
or
xchg
mov
mov
pop
sbb
cwtl
fwait
push
sbb
jp
insl
fcmovu
and
fwait
mov
add
pop
add
fisttps
aaa
pop
xlat
pop
repnz
and
daa
icebp
push
mov
sbb
jg
lret
testb
or
adc
xor
cmc
in
sbb
test
push
bound
xlat
xchg
lods
cltd
pop
jmp
sarb
push
push
push
jecxz
arpl
add
pusha
ror
and
cmp
mov
outsl
inc
pusha
or
out
xchg
mov
test
cmp
aam
jp
fildl
es
adc
in
xor
loopne
out
outsl
bswap
test
push
xchg
xor
shll
ljmp
rol
dec
inc
xchg
adcl
push
xchg
lea
shl
jnp
inc
imul
fs
adc
insb
jle
xchg
shll
pop
sbb
daa
and
jge
leave
xchg
fisttpll
rcr
clc
repnz
pop
jmp
inc
sbb
pop
data16
inc
mov
call
sub
push
rolb
dec
add
add
adc
ja
outsl
bound
std
popa
addb
jle
jp
fstl
sub
add
addl
in
push
rolb
in
mov
addl
xor
addb
push
stos
outsl
jmp
repnz
insb
mov
push
xchg
or
popl
cmp
ljmp
clc
or
or
rolb
lds
mov
and
notb
or
jg
pop
fildll
xor
and
mov
jno
scas
subl
std
mull
clc
testl
scas
pop
xor
pusha
push
mov
jmp
js
pop
or
mov
jl
pop
mov
outsl
imul
out
out
pop
dec
or
nop
sbb
inc
xchg
add
jnp
mov
and
push
xor
in
xchg
pop
push
inc
fistpll
adc
push
imul
push
sbb
pop
ja
add
push
popa
pushf
pop
test
leave
repnz
lds
cmp
std
mov
loop
sahf
andl
push
add
sbb
xchg
jecxz
lret
xor
xchg
ja
das
inc
xchg
clc
cmp
xchg
jnp
pop
popa
mov
mov
sti
daa
and
ret
sub
add
mov
in
xchg
inc
sbb
popf
pop
arpl
adc
push
lea
imul
pop
aaa
inc
mov
xor
pop
arpl
sub
xchg
mov
scas
jnp
mov
inc
pop
andb
cmc
in
add
jle
push
xor
and
add
adc
add
mov
lret
lea
push
xchg
pop
push
repz
dec
shrb
lea
adc
pop
hlt
call
and
int3
out
inc
xor
push
test
repz
dec
mov
cltd
and
js
das
jo
js
mov
ss
out
jo
mov
rcl
xchg
adc
cmp
popa
mov
aaa
jno
lock
sarl
adc
inc
cmp
cli
test
push
mov
cli
xchg
jbe
mov
xchg
inc
out
inc
jo
cwtl
insb
repz
xchg
pop
sbb
leave
in
test
mov
fidivrs
scas
inc
pop
sbb
mov
cmp
bnd
push
jno
pushf
je
jmp
in
mov
sub
and
jge
inc
lcall
mov
lret
movswl
mov
out
sbb
push
stos
popa
lcall
pop
add
rorl
pop
jmp
push
adc
fpatan
xchg
in
outsl
call
arpl
sbb
dec
cmp
subl
cmp
movsb
loopne
ja
sub
cmovle
jg
ret
adc
add
pusha
jl
cmp
aas
mov
push
cmp
popa
push
mov
adc
scas
dec
sbb
or
test
pop
out
jmp
push
mov
lret
push
xchg
xor
cmp
xlat
push
pop
fstp
xor
addl
test
loop
push
shlb
cmp
inc
mov
push
lock
jae
mov
clc
mov
cwtl
push
dec
cmp
fisubrs
fwait
rcrl
ret
frstor
clc
add
test
jns
sub
insl
xor
jnp
loop
xor
xor
cld
enter
and
testb
jnp
es
sti
cs
mov
call
fisubs
inc
repz
fistps
in
jns
nop
add
bound
lods
cwtl
xchg
mov
mov
dec
mov
pusha
nop
fisttps
pop
add
dec
push
scas
ficomps
sbb
sbb
outsl
fists
dec
dec
push
cmp
insl
mov
xor
push
dec
xchg
and
loop
lea
shl
stos
hlt
push
dec
pushf
outsl
rcll
cmp
daa
pop
nop
ret
in
loopne
inc
jne
es
dec
or
popf
scas
je
icebp
mov
out
stc
lahf
jl
xchg
stos
aas
adc
cmp
shlb
adc
dec
xorl
jno
add
sarb
jecxz
fsts
cli
adc
int
mov
repnz
das
jg
push
cmp
loopne
test
fcoml
icebp
pop
jo
jb
icebp
mov
inc
shll
adc
jo
cli
mov
daa
or
dec
outsl
and
out
jl
dec
dec
sbb
lds
fistpll
aaa
and
ss
adc
into
push
lcall
pop
mov
packuswb
xchg
aad
xchg
and
mov
loopne
test
cli
push
je
fs
and
scas
test
mov
sbb
mov
orb
or
mov
sub
cmp
loopne
sbb
sub
inc
jb
or
loop
and
pop
jl
cmp
outsb
xchg
lock
inc
jnp
pop
adc
xchg
dec
add
ret
sub
add
int3
imulb
or
in
clc
test
into
dec
popf
cmp
sub
icebp
bnd
pop
sarb
dec
pop
testb
pop
sti
sbb
push
sti
mov
popf
adc
push
sbb
cmp
scas
push
inc
add
ficompl
mov
xlat
or
cmc
leave
jbe
test
aaa
lock
movsb
pop
xor
push
xor
loop
ja
sahf
cmc
pop
sahf
inc
or
jne
pop
icebp
mov
ss
sub
loopnew
xchg
fdivs
cld
in
adc
clc
loope
test
pusha
xor
aaa
push
sbb
icebp
mov
out
sbb
es
nop
fwait
clc
stc
test
sti
cmp
fmull
imul
and
test
cli
add
jne
fdiv
jnp
enter
out
ret
jnp
out
fdivp
imul
test
mov
cwtl
aam
add
fistpll
ret
add
roll
scas
push
fs
mov
add
xor
lock
dec
mov
icebp
jae
sub
pop
jae
fld
and
pop
repnz
inc
inc
clc
out
xchg
jmp
push
xchg
inc
ret
pop
daa
fwait
cltd
jno
adc
xchg
xorl
gs
jg
mov
adc
pop
xor
jl
or
pop
call
jge
das
inc
hlt
and
sub
inc
sbb
repnz
xchg
fldenv
sbb
fcoml
add
loope
mov
into
das
sarb
sub
clc
and
add
fisubs
es
in
test
aam
mov
sbb
inc
add
xor
lds
mov
jnp
in
inc
pop
adc
pop
loop
mov
stos
mov
cmpsb
adc
in
sub
mov
cmpb
lret
inc
adc
loop
rcr
les
pop
ljmp
sub
inc
adc
nop
dec
rclb
dec
out
js
jge
pop
pmuludq
jnp
jecxz
sbb
icebp
adc
xchg
dec
cltd
push
sbbl
adc
sbb
push
dec
jnp
pusha
jmp
push
dec
loopne
aam
fidivrs
cwtl
cld
or
ja
bound
adc
lods
cmc
jo
insb
aad
dec
mov
pop
xchg
add
ret
xor
or
push
ret
outsl
pop
in
and
lret
push
scas
scas
dec
inc
ja
roll
cmp
fldcw
xor
int3
call
out
gs
lahf
push
test
stc
xchg
cmpsb
incl
ds
add
push
and
in
in
std
xchg
out
adc
in
xor
lahf
or
and
mov
push
mov
mov
jge
pop
pushf
adc
mov
push
fs
add
or
addr16
iret
in
pop
lret
fwait
imul
and
dec
popf
popa
push
sub
dec
ret
lcall
movb
sbb
push
push
inc
add
add
and
xor
jnp
add
cld
lret
in
popf
or
inc
adc
sti
out
mov
push
mov
hlt
nop
sbb
icebp
dec
test
rolb
in
sbb
pop
js
jle
test
or
or
mov
pop
mov
mov
and
inc
sub
and
clc
push
in
pop
testb
pushf
fsubs
je
push
in
add
add
incb
jge
sti
ret
fisubrs
jl
dec
into
cmp
sbb
jg
out
outsl
mov
mov
dec
push
add
push
jl
loop
movsl
insb
sahf
je
xchg
js
push
cli
jmp
ret
or
int
cmp
cmc
xchg
push
mov
xchg
pop
mov
std
dec
sub
dec
stos
insb
xchg
pop
fadd
call
push
push
xchg
push
add
pop
sbb
add
shll
add
cmc
movsl
lahf
xchg
loop
enter
jns
sbb
sub
xchg
or
or
mov
add
xor
test
je
clc
push
xchg
dec
out
push
xor
inc
lret
aaa
mov
ja
sahf
adc
mov
lret
push
shlb
pop
int
ds
xchg
inc
sbb
cld
add
inc
in
pop
xchg
mov
jnp
popa
inc
dec
sbb
cmp
mov
xchg
mov
adc
and
sub
lds
insb
mov
adc
add
seta
xchg
inc
negl
sbb
lds
jl
jge
sarb
jecxz
jns
mov
andl
rorb
mov
xor
repz
and
outsb
rcrb
or
add
jae
or
cwtl
jae
lods
adc
ss
icebp
cmp
push
xor
xor
rorl
or
inc
ret
mov
in
aam
mov
jno
in
dec
shlb
jp
inc
out
mov
inc
in
mov
movl
xor
shlb
pop
test
out
nop
xor
ljmp
fs
inc
test
ja
mov
loopne
jg
dec
pop
popa
push
sarb
lcall
pusha
mov
ja
xchg
xchg
adc
cmp
mov
cwtl
dec
add
lock
bnd
loop
inc
test
add
insl
sti
add
in
fs
mov
andl
mov
fcoms
aaa
ja
push
adc
sbb
lcall
and
adc
fdivl
clc
outsl
loope
pop
add
push
or
jg
in
in
and
testb
sub
pop
std
test
pop
xchg
jecxz
pop
loopne
pushf
fwait
jnp
adc
inc
cmp
fwait
movsb
cmpsl
cld
jo
sub
or
test
nop
xchg
jg
or
push
pop
sub
test
les
or
and
or
cmp
pop
icebp
leave
js
sbb
add
adc
cs
test
dec
gs
adc
popa
hlt
push
mov
shl
shl
fistpl
cmp
push
inc
xor
clc
jg
push
dec
mov
or
and
inc
ss
pop
sbbb
ret
or
and
pop
sub
stos
fistps
push
mov
add
pop
std
pusha
fidivl
bsf
pop
outsl
add
jnp
xchg
cltd
xchg
clc
in
adc
pop
add
or
dec
sub
arpl
fildl
popa
movsl
jl
aam
les
or
cmp
ss
hlt
xor
jle
frstor
inc
jbe
outsb
lcall
mov
aaa
cmp
add
cmovb
cmp
mov
loopne
test
rcr
movsl
xor
stc
inc
cwtl
mov
or
cs
and
call
lea
andb
repnz
jle
mov
or
gs
mov
mov
inc
enter
out
inc
or
into
sbbb
add
ljmp
daa
cld
ljmp
clc
xchg
adc
pop
xor
sub
testb
outsl
call
add
inc
add
out
mov
shlb
sbbl
mov
push
mov
jle
js
pusha
cli
dec
adc
movsb
andb
nop
and
cli
jns
arpl
and
or
test
xor
mov
inc
repz
je
cmp
add
divl
pop
add
xor
pop
fdivr
data16
jae
mov
data16
or
adc
ljmp
std
jne
add
scas
clc
mov
dec
mov
jge
aam
daa
and
pushf
mov
shrl
cmp
jecxz
jno
stc
outsl
mov
jge
cltd
sbb
dec
test
inc
lock
push
lcall
and
fistl
mov
lea
adc
sub
xchg
ror
sbb
mov
push
pop
in
popf
sub
mov
adc
outsb
or
imul
lock
sub
jg
xchg
outsl
icebp
cmpsl
push
jp
adc
sbb
add
mov
jg
cmpsl
stc
test
mov
cwtl
or
out
fistpl
and
test
inc
push
lock
sbb
dec
sbb
dec
call
or
ja
and
stos
xchg
sub
mov
mov
ljmp
and
shll
or
cli
sahf
fsubrp
add
and
jnp
add
mov
and
and
dec
clc
out
push
shl
jmp
fstps
fildll
jge
pop
movsb
test
jl
in
xor
sub
pop
mov
dec
or
das
mov
or
pushf
andb
stos
dec
jnp
dec
cmpb
stos
and
ret
ja
repz
popa
scas
sub
pop
stc
cmp
ss
pop
rclb
jp
and
dec
addr16
mov
nop
xor
or
lock
xchg
sbb
das
in
jecxz
sub
pusha
adc
ds
push
out
pop
mov
mov
ja
jnp
aaa
pop
sti
pop
lock
in
dec
mov
daa
aaa
add
or
add
jmp
adc
mov
imull
ror
dec
loope
test
or
outsl
ja
or
sbb
pop
lds
pop
popf
aam
mov
mov
add
fst
mov
testl
dec
mov
hlt
test
pop
or
jle
push
mov
xchg
shlb
xchg
lods
stos
lahf
fdivrp
fcomp
sub
icebp
pop
and
push
das
into
push
roll
jns
sub
inc
cmp
lcall
dec
cmp
dec
push
outsb
inc
push
testl
adc
pop
bound
pop
ds
outsb
adc
mov
push
sbb
dec
dec
cmc
mov
and
ret
jge
nop
mov
jecxz
xor
daa
insl
adc
iret
and
mov
jg
mov
enter
sti
dec
cmpsb
movsb
or
mov
cltd
repz
inc
mov
mov
lock
sbb
dec
std
testl
push
out
bound
cltd
stos
cli
push
in
dec
pop
js
leave
cmp
or
dec
scas
or
or
mov
inc
add
cwtl
add
mov
faddl
cmp
cld
inc
and
pop
and
mov
int
push
jnp
out
xchg
fldl
test
push
pop
test
ds
js
jb
adcb
test
adc
pop
int
popa
add
pop
adc
stos
and
daa
ljmp
jl
scas
xor
sbb
dec
cmp
and
inc
sahf
outsl
jmp
loope
loop
cs
cmp
pop
ja,pn
xchg
in
outsb
xchg
arpl
pusha
push
imul
inc
je
cli
pushf
dec
and
out
ficomps
ja
inc
and
dec
push
pop
sub
cs
ds
push
inc
sbbb
out
repz
push
pop
sar
popl
jle
andb
mov
xchg
ljmp
xchg
inc
imul
sub
pop
faddl
in
or
in
cmp
inc
lret
sarb
outsb
sbb
fstpl
cmc
add
popa
stos
add
sti
sahf
jnp
add
push
pop
and
aad
aas
stos
jnp,pn
jnp
data16
ds
sub
adc
cwtl
jne
mov
lods
stos
movsl
xlat
adc
lea
lock
mov
xchg
fbld
dec
cmp
push
xchg
fsubrl
in
movsb
mov
pop
xchg
sbb
xchg
push
outsb
inc
cld
adc
add
insl
dec
mov
adc
pop
sbbb
push
dec
xchg
dec
cmp
mov
xor
outsb
mov
inc
xchg
fwait
jg
gs
enter
filds
or
lcall
add
mov
mov
pop
sub
imul
pusha
xchg
add
hlt
sbb
jle
jmp
bsf
lcall
lock
js
push
jmp
pop
pop
dec
push
adc
dec
or
jno
mov
sbb
push
and
sub
clc
cmp
cmp
scas
popa
cmp
aaa
jge
jmp
push
clc
mov
pop
int
std
std
adc
orb
arpl
cmp
data16
xor
sub
je
or
sub
and
in
dec
std
aad
mov
lds
xchg
rcr
cmp
add
sbb
cmp
hlt
add
sub
mov
mov
fbld
push
loopne
pop
in
lahf
lock
fdiv
xor
add
inc
cs
pop
mov
outsb
cli
repnz
cmp
fadds
xor
add
add
push
add
pop
xor
mov
xchg
jns
jae
lock
dec
mov
or
inc
scas
xor
mov
dec
dec
daa
or
dec
ljmp
sbb
movsb
dec
dec
in
or
aam
sbb
jmp
mov
das
xchg
es
pop
ja
xor
push
andl
bound
xor
jnp
pop
cwtl
arpl
scas
pop
sbb
pop
fildl
mov
push
rol
lahf
mov
mov
addr16
inc
add
stos
dec
lds
push
xor
movsl
xchg
aam
out
push
and
xor
pop
cli
pop
push
adc
lcall
push
imul
mov
std
inc
sahf
cltd
insb
test
dec
insb
sbb
inc
shrb
cld
ret
adc
pop
daa
fcoml
insl
xor
add
push
pop
lahf
inc
mov
add
cwtl
clc
sub
imul
push
and
push
add
test
jns
push
sbb
xchg
cmp
inc
adc
je
push
add
adc
test
decb
jb,pn
inc
add
adc
insl
xor
or
testb
sbb
adc
and
push
bnd
xor
mov
adc
push
pop
std
dec
push
xchg
xor
mov
in
cltd
jo
add
pop
push
rolb
xchg
jp
inc
inc
xor
jae
int3
jl
aaa
clc
in
fs
mov
add
push
xchg
addb
adc
xchg
shl
into
aam
and
shlb
cmp
xchg
dec
pop
jbe
push
xchg
test
cmp
add
cld
cmp
jmp
std
and
cmp
jge
fs
inc
and
aaa
pusha
mov
xchg
je
cld
test
cltd
ljmp
mov
jo,pt
sbb
push
jns
jp
mov
xchg
cmp
pop
dec
adc
inc
insb
cld
daa
mov
inc
xor
fadds
notb
ret
addr16
dec
das
dec
inc
cwtl
jl
mov
lock
xor
repnz
mov
loopne
cmp
mov
addr16
lock
pop
sahf
jge
pop
mov
mov
dec
aam
fidivl
cld
ja
rol
add
adc
std
in
arpl
cs
fdivs
ljmp
insl
out
loop
ffree
fildll
or
adcb
or
cmc
inc
ljmp
sbb
fwait
clc
cmp
jo
cmp
sbb
inc
nop
cmpsl
imulb
adc
fwait
nop
loop
adc
mov
cmp
adc
aaa
sahf
pop
xchg
aas
cs
cli
shlb
jb
in
hlt
pop
mov
inc
cli
add
cmp
jp
mov
dec
xor
loope
shll
popa
push
and
mov
xchg
out
pop
mov
xchg
xchg
dec
and
in
sbb
ja
lret
loopne
outsl
add
lods
out
pop
fidivs
enter
outsb
add
xchg
sbb
cmp
cmp
xchg
fnstenv
jmp
inc
bound
push
sbb
push
pusha
sti
xor
cmp
mov
xor
push
je
arpl
or
lret
xor
pop
mov
out
cmp
jle
cmp
rorl
jle
test
fdivl
loopne
and
mov
or
ljmp
out
mov
dec
fmulp
pushf
mov
out
pop
fstpt
sub
call
jb
mov
sbb
push
mov
jnp
push
or
test
lret
mov
out
sbb
mov
mov
pop
sub
je
out
insl
xchg
je
shl
and
andl
push
aam
mov
rcr
cmpsl
xchg
pop
xor
xchg
push
add
mov
test
pop
arpl
insb
add
les
std
scas
pop
lahf
hlt
or
mov
dec
nop
out
or
fdivrl
add
or
or
push
pop
fdivrs
cmp
ret
dec
push
out
sbb
dec
add
ljmp
mov
jns
cmp
add
iret
repnz
stos
sbb
ja
xchg
nop
xor
sub
cli
mov
addr16
jecxz
jnp
cmp
mov
in
pop
inc
push
and
xchg
xor
jae
inc
addr16
iret
jg
xchg
mov
int3
scas
pop
adcb
push
dec
push
or
add
mov
xchg
add
scas
out
inc
push
sbb
or
dec
mov
femms
jg
jmp
js
lret
jne
out
mov
int3
jp
push
lcall
xor
cwtl
shl
lods
xchg
add
sub
lods
stos
out
sbb
cmp
add
mov
cmp
or
rol
mov
mov
jmp
xchg
fwait
orb
inc
xor
dec
pop
xor
lods
add
insb
das
cmpb
push
xchg
loop
in
mov
cli
add
jno
pop
and
out
sub
dec
call
lds
adc
in
or
xchg
imul
cld
or
loope
pop
xor
int
mov
ret
push
int
push
mov
xorb
sbb
lock
pop
cmp
adc
adcb
shl
sub
xchg
cmp
mov
orb
fsubl
push
adc
or
cmp
push
push
mov
and
hlt
push
aad
or
jb
test
je
dec
addb
sbb
mov
loop
bound
push
xchg
add
push
lret
das
jo
aaa
pushl
sbb
imul
jbe
lock
sub
in
data16
add
xor
lds
dec
pop
push
mov
rcrl
mov
jmp
setg
stos
adc
data16
movl
stos
addl
out
stos
jo
mov
push
psubq
inc
cmpsl
pop
shr
add
icebp
js
ret
rcrb
imul
andl
dec
push
aas
xlat
xchg
add
aam
shr
or
inc
sahf
mov
les
jb
cmp
lds
das
dec
inc
and
dec
aam
push
pop
xchg
cmpsb
xchg
cwtl
daa
and
loope
mov
cmp
xchg
stos
fldl
and
mov
pusha
jne
inc
xor
push
fs
mov
mov
push
pop
xchg
dec
pop
out
pop
adc
rorb
xor
adc
sbbb
repnz
sub
jmp
dec
loop
mov
add
es
cmp
sub
stos
inc
inc
mov
dec
mov
cmp
sbb
loopne
cs
xor
and
jecxz
loopne
adc
fstpt
lret
js
fcmovbe
lods
test
dec
push
or
orb
adc
ror
pop
xchg
out
pop
jmp
pop
push
jge
xchg
mov
call
mov
loopne
dec
dec
xor
cwtl
sarb
dec
shlb
pop
push
into
lret
dec
xor
jp
jge
rcll
lcall
sub
pop
sbb
sub
test
fdivl
pop
pop
lret
in
sbbb
fistpl
hlt
sbb
loopne
mov
lods
scas
sbb
or
into
testb
pop
mov
lock
call
test
dec
scas
popa
mov
cli
scas
inc
cs
repnz
divb
imul
jg
movl
and
mov
sbb
mov
test
mov
ljmp
iret
mov
xchg
pop
das
sub
dec
sbb
leave
lods
mov
and
cmp
xchg
imul
ficompl
adc
movsb
lods
mov
outsl
int3
mov
cmp
inc
sbb
ret
sbbl
test
dec
mov
das
mov
cld
loop
scas
je
mov
into
fcoml
cltd
je
mov
mov
push
incb
fcompl
inc
sub
xor
mov
mov
aaa
inc
std
push
aas
jno
ss
xor
cli
jnp
pop
cld
rolb
push
mov
and
jo
inc
in
clc
pop
or
sub
aaa
push
cmpsb
js
jne
pusha
test
lds
or
push
cwtl
inc
repnz
mov
pop
mov
mov
jp
shr
lds
sti
jecxz
sub
fldl
daa
sbb
and
jle
lods
mov
test
inc
mov
adc
jge
mov
rclb
jb
jns
inc
mov
cmc
mov
sbb
insl
aad
sub
loopne
gs
scas
int
jns
cld
aaa
fcmovnb
cmp
stos
xor
adc
gs
and
xor
fdivrl
lock
or
outsb
sbb
add
xor
lods
cmp
jb
jns
mov
cli
pop
imull
paddw
push
or
xor
xor
cwtl
ds
pusha
lock
xchg
mov
into
xor
xchg
sbb
jecxz
sub
fbld
mov
push
mov
sbb
ja
insl
mov
adc
lock
sahf
pop
or
push
scas
mov
pop
fwait
fs
or
jno
inc
rorb
pop
lods
insb
or
cmp
mov
clc
jl
mov
nop
sub
or
jnp
jns
test
jge
jnp
fs
add
xchg
or
movsb
dec
std
enter
dec
psubusw
cmp
jo
cmpb
jns
daa
mov
sbb
ret
mov
push
jmp
push
jnp
loopne
sub
in
add
call
jo
push
sub
add
dec
adc
int
sbb
lcall
es
ror
pop
push
fwait
cli
and
sahf
daa
pop
int
rcrl
xchg
in
daa
ja
stos
fadds
inc
cmp
rorl
mov
loope
test
jno
pusha
adc
push
or
movsl
push
adc
xor
push
fs
adc
cmc
les
aam
jmp
call
filds
mov
xchg
mov
fs
mov
pop
insl
fs
jle
push
hlt
and
aam
lods
inc
or
cmp
mov
sub
shl
or
pop
or
out
or
jecxz
mulb
mov
loop
test
dec
push
dec
stos
mov
mov
pushf
inc
outsl
mov
push
fisubl
or
fisubl
add
add
push
into
push
shll
pop
mov
xchg
popa
lock
fdivrl
addr16
fdivr
mov
push
sbb
jo
add
hlt
mov
mov
or
ljmp
xor
fildl
int
int3
lea
dec
dec
adc
loope
adc
or
incl
dec
loope
addr16
cmp
mov
mov
outsb
jmp
addr16
sbb
in
adc
cmp
cmp
loopne,pn
xchg
pusha
mov
mov
mov
xor
repnz
outsl
inc
ss
push
mov
inc
fsub
mov
xor
sarb
add
mov
negl
int3
pop
cmc
pop
test
adc
pop
sub
mov
movsb
scas
ret
lea
mov
cmp
sbb
mov
add
hlt
cmpsl
sbb
clc
cmp
push
inc
mov
pusha
shlb
bound
xchg
je
repnz
repz
iret
push
lock
push
lea
sbbb
push
fisubs
jp
cmp
and
mov
mov
fsubl
mov
jecxz
out
rclb
mov
sbb
aaa
xchg
adc
mov
jbe
xor
pop
inc
and
sbb
dec
cmp
jl
mov
jae
cmp
cld
dec
add
pusha
push
insb
cwtl
lods
xorl
js
shlb
rorl
push
push
inc
rorl
not
rorb
scas
xchg
iret
adc
mov
and
leave
push
sub
dec
std
lock
cli
jnp
adc
loope
fistps
insl
jnp
push
add
mov
cwtl
sahf
aam
add
movsb
pop
mov
gs
add
sahf
mov
pop
add
dec
pop
out
jle
mov
clc
cmp
and
push
pop
cmp
fs
dec
or
ja
nop
ret
cvtps2pd
push
sbb
xchg
int
and
fwait
pop
adc
fbld
test
invd
add
mov
andb
pop
push
inc
push
inc
cs
cltd
ds
dec
nop
lret
push
xor
inc
cmp
js
sub
mov
and
sbb
pop
hlt
inc
or
sahf
xchg
push
mov
xor
bound
and
repnz
out
popa
and
push
shl
das
pop
inc
sti
inc
xchg
xchg
push
xchg
xor
loopne
fldl2t
aas
jge
loope
lcall
icebp
test
mov
fnsave
pop
dec
push
js
push
jp
push
push
pop
scas
and
pushf
insb
js
and
cmc
xchg
test
jne
cmpsb
in
je
call
dec
push
cli
fmull
dec
inc
sbb
mov
loope
jle
push
sub
push
loopne
mov
shl
push
or
mov
jg
jo
and
push
roll
outsb
cs
xrelease
fs
ss
sub
add
xchg
icebp
ret
dec
jo
sub
xchg
test
mov
jge
jne
ret
mov
xchg
push
je
jns
and
lock
sbb
and
js
in
data16
lock
adc
hlt
xlat
cmp
push
jl
and
cltd
arpl
fs
shlb
xchg
imul
add
test
movb
aad
leave
cmp
enter
jno
popa
add
clc
adc
sbb
mov
inc
nop
jo
cmp
popf
fs
xlat
data16
ds
mov
aaa
ja
add
mov
cmpsl
out
cmp
pop
into
and
rorl
adc
inc
icebp
aam
ja
jg
mov
shll
xchg
xor
test
test
aaa
mov
pop
sbb
pusha
and
jp
sub
sbbb
in
mov
mulb
adc
dec
loopne
and
rorl
mov
or
inc
dec
jle
xchg
or
mov
xchg
daa
mov
orb
jl
icebp
xchg
mov
insb
inc
les
in
ret
push
or
lods
loope
adc
lcall
mov
sub
pop
xchg
xorb
dec
push
mov
xor
iret
rcr
mov
cmp
push
inc
inc
or
mov
mov
mov
push
cmp
xchg
in
sbb
movsb
loopne
xchg
mov
lahf
push
fcomps
jno
inc
mov
cmp
std
add
imul
cltd
test
clc
pop
push
aad
dec
ljmp
push
pop
mov
out
push
and
xor
loopne
int3
imul
mov
mov
and
mov
out
pop
cmp
sub
mov
daa
push
cmp
and
mov
inc
bound
out
xchg
addr16
push
mull
out
jle
cmp
mov
push
sti
dec
pop
cmp
fidivs
or
daa
aaa
incl
jo
popf
iret
mov
mov
jno
nop
pop
sub
add
test
jle
mov
push
sbb
sub
jns
xchg
rclb
mov
jl
fs
clc
addr16
jo
xor
add
test
push
gs
jo
repnz
xchg
loop
roll
imul
dec
or
mov
cmc
dec
xor
and
add
leave
push
or
cli
add
cmc
pop
sub
pop
hlt
or
cmpb
push
pop
js
rcl
inc
push
loope
xor
sbb
dec
jnp
dec
dec
notl
jecxz
movsl
inc
or
rol
js
mov
call
sbb
mov
cmpsb
xchg
inc
mov
loope
scas
fdiv
xchg
adc
dec
and
pop
adc
scas
out
or
jno
stc
xchg
adc
in
sbb
pop
js
loop
mull
popa
fbld
xchg
cmpsb
jb
jbe
cltd
mov
sub
scas
test
add
jmp
jp
outsl
cwtl
les
lahf
loope
adc
testl
data16
out
mov
les
jl
xor
sbb
aas
daa
xchg
jecxz,pn
gs
or
pop
andb
inc
icebp
push
push
cld
cs
aaa
rorb
cmp
data16
mov
insl
mov
pop
push
mov
cmp
cli
add
cmpb
sbb
pushf
testb
ret
rorb
clc
push
mov
loop
and
mov
mov
stos
lds
pop
lahf
shll
int
pop
in
sbb
xor
xor
and
pushf
mov
xchg
and
pop
xorb
pop
add
and
add
loope
pop
das
sbb
jle
lock
repnz
mov
xlat
add
or
xchg
pusha
xchg
or
ss
adcb
js
test
rorb
pushfw
popf
push
das
mov
clc
xor
dec
subl
es
jnp
and
sub
jmp
stos
mov
add
call
xor
adc
in
inc
sti
jp
sbb
push
adc
or
mov
std
test
das
incl
ret
mov
fsub
push
jmp
dec
inc
jg
inc
push
mov
stc
jp
sub
insl
sbb
ss
and
mov
addb
dec
pushf
add
adc
loopne
pop
notl
out
sub
pop
add
pusha
cmp
gs
fwait
test
inc
aaa
mov
je
pop
xchg
push
call
aaa
jmp
mov
sub
mov
push
pop
push
mov
test
mov
insl
jmp
aas
add
sub
and
cmovo
out
aam
sbb
adc
add
pop
popl
mov
loopne
jae
fs
out
ret
jns
inc
xor
fnstsw
jp
xor
and
jp
fs
xchg
xor
and
cli
out
dec
arpl
adcb
xchg
in
jge
xchg
shr
dec
adc
xlat
and
test
cmpl
fs
jmp
cwtl
sbb
adcb
xor
arpl
mov
imul
dec
push
lock
pop
xchg
lea
add
outsl
stc
test
add
xchg
xor
sub
jb
dec
fiaddl
clc
mov
push
dec
jnp
mov
sub
add
push
mov
sbb
outsb
cmp
push
inc
mov
sub
pop
add
das
mov
adc
mov
and
mov
cmp
jl
aad
out
or
sbbb
ret
mov
lock
pop
fbld
adc
push
mov
cli
insl
in
pop
cmc
and
inc
pop
adc
inc
mov
adc
xor
fs
cmc
test
lahf
insb
xor
imul
das
adc
leave
call
adc
adc
cmp
xchg
adc
and
add
gs
out
fdivs
lret
cld
stc
in
gs
inc
aad
jae
sbbl
repnz
call
sahf
or
sarb
repnz
adc
or
in
fwait
pop
int3
mov
or
scas
cmp
out
fwait
lea
je
sbb
mov
sahf
xor
test
push
pop
je
and
notb
mov
cli
hlt
cmpsl
xchg
test
pusha
dec
xchg
cli
fbstp
inc
sbb
cmp
sbb
mov
sbb
cltd
sub
xchg
nop
lock
adc
cwtl
loop
pusha
cli
add
ret
loop
sahf
adc
cmpb
xor
shll
push
and
dec
add
mov
xor
ss
iret
pop
mov
mov
adc
xor
cmpsb
and
stos
lea
scas
shrl
jb
mov
aaa
pop
sti
fucom
jmp
mov
xor
sahf
lret
ja
push
inc
daa
nop
in
add
mov
repz
jo
jl
fistpll
or
push
in
dec
ret
adc
clc
testb
cmc
dec
out
mov
add
pop
mov
pusha
ljmp
and
notb
pushf
inc
add
mov
jns
xchg
push
push
sub
add
aaa
insl
insb
in
inc
push
xchg
jo,pt
in
insl
loope,pt
pop
insl
jle
dec
push
push
jo
loopne
xor
add
mov
adc
lahf
add
push
andb
out
adc
mov
pop
out
stos
call
gs
or
jne
xchg
xchg
dec
outsb
and
adc
dec
imull
push
jl
sub
and
fisttpll
mov
adc
cmp
mov
cmpl
decl
xchg
das
add
bound
inc
js
je
or
adc
and
mov
aaa
je
in
push
dec
repnz
push
call
addr16
fistl
push
mov
daa
ficomps
xchg
sbb
xor
lods
cmpsl
push
inc
lcall
add
adc
mov
testl
cmp
and
outsb
fadds
hlt
dec
push
les
ja
jge
jecxz
inc
test
jo
jmp
push
dec
jp
mov
cmp
cmp
imulb
clc
mov
mov
das
push
push
scas
mov
push
dec
or
outsl
jg
pop
aas
adc
outsb
cs
cmpb
aas
das
jo
jecxz
lahf
aam
in
sbb
fisubl
test
fcoms
fadds
outsl
jle
clc
mov
mov
xor
fwait
ds
cmp
ror
decl
adc
sub
fldt
pop
sbb
aam
ret
mov
jb
xor
insl
mul
int
fildl
fsubrp
js
push
cltd
xchg
pop
popl
fstl
and
or
dec
push
push
cmc
mov
aam
and
lret
les
push
mov
fs
mov
mov
lock
rcll
fists
jge
adc
lret
fwait
stos
adc
pop
mov
xlat
and
sti
sbb
sarl
or
iret
adc
fimuls
jg
loop
mov
stos
lret
movsb
jecxz
out
lock
dec
xlat
roll
mov
pop
sbb
xor
jnp
jnp
jne
ret
dec
xchg
cli
int
and
rcl
rcll
sbb
sti
lea
add
in
lods
xchg
mov
or
cld
mov
adcb
aaa
pop
scas
lret
and
mov
loope
pop
mov
data16
sub
mov
sti
cmc
test
aam
jo
es
mov
adc
int
sbb
mov
cmpsl
out
leave
or
xchg
push
ds
mov
or
dec
fstl
fnstenv
add
int
pop
fwait
jle
dec
xchg
into
or
push
mov
and
jne
jp
aam
int
sbb
fisubs
rcrl
pop
push
rclb
pop
cmpb
outsl
pop
js
rolb
cwtl
sub
xor
xor
mov
sarl
mov
pop
test
mov
xor
lret
ret
fidivl
pop
or
mov
jl
mov
mov
adc
lret
push
add
push
stos
xchg
fimuls
fsubrl
jmp
cmpsl
test
cmpb
int3
fistl
pop
inc
loopne
mov
lea
or
push
ja
into
les
scas
scas
mov
and
cmc
in
mov
outsb
hlt
sub
push
xlat
leave
push
mov
mov
add
jge
pop
xor
es
mov
dec
xor
jno
rolb
sub
iret
dec
mov
inc
lock
cwtl
sbb
mov
jp
dec
adc
sarl
sub
mov
das
push
xlat
jb
hlt
xchg
jnp
adc
mov
push
mov
lods
divb
lods
cmc
enter
aam
jecxz
fmul
inc
mov
sbb
mov
nop
adc
add
stos
lods
mov
aas
shl
inc
pushl
push
push
jno
into
ret
dec
int3
pop
push
and
scas
inc
sub
insb
aad
jp
mov
pushf
faddp
push
in
imul
ljmp
test
mov
xor
sti
stos
cli
filds
shl
fdivrl
cwtl
sbb
mov
pop
mov
or
icebp
inc
aaa
and
lods
jg
mov
fnsave
mov
outsl
shr
xchg
loope
ret
sub
int3
das
adc
call
fdivrl
outsb
aas
mov
and
cmp
aad
rol
add
pop
dec
stos
loopne
dec
ret
stos
lahf
dec
test
mov
pop
in
jmp
insb
leave
fcmovnb
les
dec
add
movsl
mov
mov
inc
mov
cmovne
mov
mov
sti
ret
mov
fprem
pop
mov
and
or
and
inc
popf
cmpsb
pop
cli
xor
sbb
xchg
mov
xchg
jl
jo
hlt
dec
or
or
add
lods
mov
nop
jge
push
outsl
std
inc
popaw
or
scas
mov
push
push
enter
jge
and
aas
xchg
and
mov
sub
xchg
pop
test
scas
xor
pop
mov
jb
ja
pop
cli
xor
pop
iret
push
ret
les
lock
shl
cwtl
movsb
push
jbe
aas
ds
mov
imul
inc
repz
sbb
lea
pop
js
pop
jl
or
fldt
outsl
inc
adc
aad
and
ljmp
ja
xor
popf
repz
in
push
push
xchg
push
pop
pop
repz
addr16
les
cltd
test
lret
rolb
dec
data16
pop
fmuls
stos
sbb
cmp
push
fwait
call
xlat
mov
orl
jmp
ss
push
cli
movsb
dec
iret
adc
fdiv
jno
mov
jbe
into
nop
adc
shlb
pop
hlt
cwtl
leave
mov
scas
mov
lock
outsb
adcb
js
xchg
movsb
rcrl
sarl
mov
lea
lods
pop
jbe
movl
arpl
and
aad
pop
jg
push
add
mov
add
xor
xchg
int
outsb
shl
les
les
lcall
scas
pop
cmp
lahf
mov
les
pop
xorl
rcll
sbb
push
add
lds
sbb
lock
fs
adc
int
call
sbb
test
mov
jl
mov
cmpsl
inc
stos
dec
mov
lods
pop
int
sbbb
mov
mov
sarb
fnstsw
or
je
stc
sbb
cmp
adc
dec
out
sbb
es
mov
push
xchg
mov
lods
movsb
inc
xor
mov
rorb
addr16
out
jmp
jg
ds
loop
lock
adc
cmpsb
ss
scas
cmp
ja
out
jp
cltd
ss
jae
es
mov
dec
mov
shrl
stos
jmp
and
pop
stos
loop
jecxz
lcall
xlat
lret
outsl
rorl
insb
xlat
lds
in
out
fsubs
popa
shll
clc
adc
call
xchg
add
lret
mov
add
jge,pt
aaa
fmul
ret
aad
sbb
js
add
cmp
xchg
mov
ja
push
test
pop
das
sub
cld
ror
add
xchg
mov
mov
es
les
jb
jl
inc
xchg
test
pop
and
in
push
sahf
mov
mov
out
idivb
test
int3
jbe
lods
arpl
or
or
and
add
aaa
std
dec
push
cld
or
das
out
jno
lea
pushf
sbb
cld
in
pop
clc
aad
sbb
cwtl
aad
mov
add
out
scas
stos
sbb
inc
mov
add
insl
xor
cmp
je
fstps
xchg
jl
in
or
and
movsl
mov
test
mov
dec
jle
xchg
add
loop
jge
pop
js
mov
add
sahf
iret
rol
ret
or
mov
pop
mov
insl
imul
cmp
dec
mov
outsl
cs
cmp
mov
imul
test
xchg
fistpll
pusha
cmp
add
ret
or
sahf
add
sbb
shll
adc
jge
push
dec
roll
dec
sahf
popf
add
nop
mov
cmp
mov
out
xlat
hlt
dec
xchg
cmp
ljmp
dec
ljmp
dec
add
mov
and
mov
jg
fstpt
push
jne
fiadds
push
aas
les
icebp
sub
push
iret
lods
adc
mulb
call
jge
test
xor
sub
rorl
addr16
or
es
and
adc
rorb
xor
sub
jnp
out
pop
notb
xchg
jecxz
es
jo
sbb
pop
mov
xchg
ret
js
jg
loopne
or
xchg
mov
loop
bound
clc
aaa
rcl
out
push
mov
push
ljmp
cmp
out
mov
mov
push
mov
stos
adc
mov
mov
icebp
pushf
enter
pusha
daa
insl
mov
ja
push
pop
cmp
aad
test
cmp
add
cmp
sub
sub
adc
pop
leave
xchg
nop
loope
push
or
adc
les
rolb
inc
mov
jno
scas
add
ljmp
xor
cmp
dec
push
out
dec
xchg
jo
flds
pop
adc
mov
std
inc
mov
jp
loop
lahf
mov
mov
push
mov
fadd
popa
bound
cs
fdivp
dec
jnp
cmpsb
mov
or
mov
cmp
add
lods
ja
test
call
je
push
pop
cmc
adc
lret
jb
lock
ret
and
iret
icebp
pop
dec
jecxz
mov
and
xchg
pop
jbe
popf
xor
std
jo
xchg
add
xor
jge
mov
and
mov
cmpsb
gs
cld
push
mov
sti
fstp
jg
movsb
mov
sahf
js
test
cmc
or
aam
scas
ja
sub
and
jl
adc
pop
adc
cltd
mov
sub
gs
mov
inc
sahf
cmp
or
xor
xchg
insl
dec
mov
mov
rorl
ja
and
push
rcrl
andl
test
into
pop
mov
je
bndstx
into
cmpl
adcl
aas
mov
imul
out
into
mov
jp
movsb
les
sbb
test
jbe
ljmp
add
mov
mov
ja
outsb
cmp
jg
psrld
nop
mov
sub
mov
adc
push
test
sbb
push
pop
push
mov
arpl
in
rcrb
stc
sahf
aaa
lahf
mov
enter
mov
repnz
das
add
leave
xor
cmpsb
in
xchg
lods
jp
ljmp
stc
fwait
push
aas
push
cmp
sbb
adc
outsl
rol
or
mov
popf
rcrl
lret
sarb
add
loope
test
mov
aaa
frstor
loope
aad
lds
inc
inc
aaa
pop
add
add
mov
or
jle
xor
fnstsw
lcall
pop
push
roll
ror
out
mov
inc
xor
sbb
shrb
enter
rolb
inc
test
adc
sarb
inc
pop
add
and
sbb
add
mov
xchg
nop
jo
pop
xor
jmp
jno
sarl
cli
dec
movsl
or
cmp
outsb
sti
inc
mov
jl
faddp
push
das
popa
rcll
test
stos
push
rcr
jno
inc
int
lods
mov
xor
or
adc
mov
pushf
mov
lock
orl
add
loopne
mov
mov
mov
scas
mov
jne
or
inc
jmp
and
arpl
test
xchg
xor
mov
inc
jle
outsl
mov
and
out
loop
mov
mov
inc
sbb
fidivl
push
gs
lods
repnz
insl
in
incb
lods
dec
shlb
push
imul
test
ds
add
iret
mov
ret
movsl
pop
lcall
jmp
test
mov
fstpt
push
mov
out
cli
repnz
xchg
xchg
pusha
push
xlat
fcmovnu
and
add
or
sti
cwtl
fdivrp
pop
cmc
jae
mov
push
mov
orl
or
popa
and
repz
call
cmp
inc
mov
or
inc
lahf
outsl
insb
movsl
pop
mov
rolb
inc
sbb
cld
movsl
aas
sbb
add
mov
sub
popf
mov
jg
shlb
push
adc
cld
aam
sbb
sub
test
rol
scas
or
pop
subb
les
push
add
shll
push
incb
in
lcall
adc
aaa
jg
push
sub
clc
dec
push
aam
cli
rol
out
sahf
in
mov
sbbb
pusha
stos
test
xchg
add
mov
ljmp
imul
aas
mov
leave
add
mov
dec
jbe
push
out
in
cmp
stos
fnstcw
and
mov
jmp
sbb
popa
mulps
inc
add
cli
or
pop
rolb
sub
ret
mov
out
pushf
adc
adc
jns
aam
mov
andb
shlb
mov
mov
lds
scas
rcl
repz
pop
cmp
mov
mov
mov
movsb
nop
sub
mov
repnz
iret
stos
pusha
add
ljmp
inc
movsb
add
pop
push
xlat
pop
jne
mov
and
std
sbb
cmp
mov
mov
mov
add
mov
xchg
dec
aaa
std
and
pop
into
xchg
and
mov
rcll
icebp
fists
test
add
int
gs
push
mov
and
lret
gs
shll
ss
mov
xchg
test
rcl
ret
dec
shrl
inc
mov
push
pop
add
inc
fcomps
idiv
mov
iret
mov
jecxz
lock
cmpsb
push
js
mov
pop
push
mov
data16
rcrb
inc
and
loop
push
mov
fiadds
daa
fcompl
lds
movsb
insb
adc
cmp
ret
adc
cld
mov
cli
fdivs
pushf
neg
aad
loop
push
cmp
mov
insl
jmp
dec
mov
mov
ret
out
icebp
ret
mov
gs
dec
mov
add
jno
inc
addr16
mov
outsb
add
shrl
push
shlb
clc
push
jns
mov
mov
ret
push
and
das
lret
clc
movsl
mov
out
fsubl
add
jae
xchg
repz
sub
push
fistpl
push
stos
mov
mov
inc
mov
jno
in
scas
int
add
xchg
mov
mov
sub
addb
jl
or
fistpl
xchg
cmp
loopne
ret
cmp
xor
arpl
popf
icebp
jmp
push
or
push
incb
shl
dec
cmpl
and
mov
cld
bnd
cmpsb
nop
pminsw
pop
mov
out
jbe
xchg
sub
int3
inc
pop
imul
pop
push
inc
cld
testb
imull
lods
out
fnstenv
sub
pop
sub
rorl
push
fs
cld
mov
imull
adc
mov
fimull
and
add
out
lret
cmp
mov
ret
xchg
inc
lret
pop
testb
push
mov
jp
or
test
icebp
mov
cmpsl
std
or
jp
jmp
xchg
repnz
clc
jo
ja
sbb
subps
mov
sub
adc
aaa
pop
lds
and
add
rcr
mov
and
pop
mov
rol
sub
sub
adc
cmp
pop
lret
push
out
mov
cltd
xchg
jmp
push
pop
push
shlb
pop
add
mov
insl
and
and
xchg
lea
push
bound
xchg
jg
sbb
outsl
push
loop
cmpb
add
push
jbe
mov
hlt
cltd
test
sbb
ds
xlat
cmpsb
push
mov
and
ret
test
push
pop
inc
rorl
mov
xor
and
js
into
hlt
rcrl
in
dec
lods
xchg
call
and
mov
sub
shr
cmp
sti
inc
rorl
jp
jmp
hlt
push
sub
in
xchg
push
sub
adc
pop
cmpsb
fsub
cmp
pop
cli
psrlq
and
in
push
ljmp
test
pop
sarl
xchg
enter
rclb
repnz
sbb
or
ror
mov
movsb
out
sti
inc
mov
rcrb
repnz
sbb
mov
les
ficompl
bound
jl
imul
push
inc
insb
ret
push
cld
loopne
iret
sbb
dec
mov
lahf
aam
dec
clc
inc
sbb
sub
lds
bound
pushl
test
jg
sbb
or
daa
in
pop
stos
lods
aas
or
mov
cmpsl
jmp
bound
ret
sub
in
movsb
sar
sbb
adc
mov
adc
mov
pusha
adc
scas
test
xchg
mov
les
cli
mov
imul
int
mov
sbb
adcl
push
push
or
pushf
dec
es
lods
icebp
jge
mov
inc
jmp
and
mov
mov
cmpsl
adc
dec
daa
adc
push
insb
cli
fldt
gs
jge
filds
fdivl
dec
adc
mov
xor
jp
lds
adc
jp
pop
inc
fildll
xor
shrb
out
test
pop
std
fidivs
cmpsb
dec
inc
xlat
les
rep
xchg
cmp
loop
jp
movsb
iret
out
mov
mov
mov
mov
pop
not
xor
cmp
ret
xor
iret
jp
jle
dec
aas
add
iret
jmp
sub
lret
in
xchg
outsb
fdiv
cmc
or
in
outsl
pop
in
pop
dec
ss
mov
int
adc
cld
test
fsubs
mov
dec
rcrb
xor
and
mov
add
fisubrs
outsl
sub
mov
xor
xchg
push
mov
dec
push
es
xchg
gs
stc
inc
push
lods
dec
into
sbb
and
je
push
ds
fstpl
jle
subb
loope
scas
loopne
pop
jno
or
xor
cmp
scas
and
mov
xchg
call
pushf
fprem1
push
pop
shr
daa
les
jmp
jo
mov
lahf
inc
mov
loopne
push
dec
dec
lock
outsl
mov
fidivrs
imul
pop
and
push
inc
into
fimuls
stc
movsl
pslld
arpl
stc
sub
jge
out
mov
mov
pop
fwait
cli
movb
add
sbb
out
in
or
push
into
ljmp
cwtl
cmpsb
pop
cli
repnz
es
stos
sti
out
popa
je
lahf
insl
outsl
add
movsb
sahf
les
dec
je
add
dec
stos
and
xchg
dec
and
into
outsl
jge
sbb
mov
inc
outsl
insl
mov
or
mov
push
stos
dec
andl
cmp
mov
stc
pop
addl
jne
mov
outsl
push
mulb
mov
daa
lock
jns
call
imul
arpl
cmp
mov
jl
sbb
push
add
movsb
shrb
inc
xchg
and
in
movsb
inc
sahf
or
ret
insb
adc
push
and
jl
xor
add
and
dec
test
mov
jmp
xchg
cmp
shlb
and
mov
mov
pop
mov
ss
jle
call
fwait
mov
pop
or
xchg
dec
sbb
popf
xor
fisttpll
sahf
adc
out
jns
ja
adc
sti
mov
shrb
daa
inc
outsl
int
fidivrs
sbb
ret
clc
jne
sahf
mov
adc
ss
stos
pop
cmp
ljmp
and
ljmp
xchg
test
or
movsb
and
nop
mov
rorl
xor
mov
lret
mov
xor
push
push
and
lea
xor
loop
xchg
movsb
inc
lods
aam
clc
push
ja
lcall
push
adc
xor
xor
ja
jne
jae
call
pop
jne
sbb
icebp
stos
mov
test
xchg
movsb
and
rclb
sbb
xchg
loop
xchg
imul
and
leave
test
hlt
pop
mov
push
pop
imul
std
mov
lret
sub
call
or
jae
adc
lahf
lret
fs
xchg
dec
mov
hlt
mov
mov
pusha
mov
ss
sbb
inc
sbb
mov
push
dec
test
xchg
test
xor
sbb
sbb
loopne
adc
or
push
out
int3
push
and
jmp
cmpsb
lcall
or
data16
popw
mov
sub
mov
or
aaa
mov
je
cmp
xchg
aad
push
jmp
inc
test
and
or
jge
sbb
or
adc
add
popw
ds
int
fcomi
aas
sbbl
mov
jne
fdivl
dec
aaa
pop
jne
stos
sub
xchg
pop
jle
fs
repnz
divl
mov
or
jg
imul
adc
push
ds
js
pop
xor
push
sbb
dec
loopne
push
ljmp
jecxz
imul
popa
push
fists
xor
or
xchg
les
das
xchg
jle
rclb
shrl
and
neg
pop
movsl
jo
sbb
and
ljmp
and
movsl
sub
addr16
jge
sbb
cltd
xlat
jbe
xor
mov
fdivs
jnp
call
aaa
rorl
testb
pusha
push
xor
mov
push
jb
adc
ret
and
xor
dec
mov
std
cmp
shrl
or
clc
and
out
push
push
addl
inc
inc
cs
pop
or
add
or
xor
ret
stc
xor
addr16
adc
and
or
mov
adcb
rol
pop
cwtl
xchg
in
popf
xor
movb
cs
sub
xchg
nop
push
sub
xchg
clc
jle
imul
popa
push
mov
sub
push
sub
setb
repz
sbb
ror
and
mov
add
push
pop
cmp
inc
or
aad
adc
jnp
dec
sahf
push
dec
push
adc
xchg
aas
dec
hlt
pop
xchg
shll
cmp
push
into
shlb
shl
xchg
movsb
xor
out
xchg
xchg
mov
and
adc
mov
dec
jbe
jne
xchg
xchg
mov
popa
int3
push
push
mov
push
ja
inc
ret
or
icebp
push
pop
mov
xchg
fadds
fnstcw
adcb
jp
hlt
inc
aaa
movsb
mov
adc
or
lds
cmc
or
lods
loope
cmp
sub
mov
lods
scas
lods
push
jb
mov
fwait
aaa
dec
hlt
mov
enter
rolb
jb
ss
inc
add
pop
xor
push
fldt
push
out
inc
sbb
sub
fwait
in
sbb
adc
mov
out
pusha
movsb
pop
add
clc
sub
fs
inc
inc
lahf
or
arpl
jns
sbb
mov
dec
mov
lds
cmc
mov
rorb
cmpsb
fs
idiv
cwtl
sbb
sub
xchg
push
movb
andb
inc
notl
daa
add
aam
daa
dec
dec
sbb
sbb
sbb
je
sbb
dec
xor
xor
rorl
in
push
jno
xor
adc
fwait
inc
add
aas
xor
sahf
les
dec
in
out
or
sbb
xchg
jmp
mov
xchg
popa
jbe
or
nop
insb
or
jnp
inc
dec
and
and
rolb
out
dec
fs
test
and
mov
cld
sbb
mov
adc
lret
push
xor
and
andl
into
les
xchg
cs
cmp
xor
aam
jne
inc
jbe
or
adcl
sbbl
lods
in
dec
inc
shrl
xchg
xor
sbb
data16
repnz
push
int3
push
shll
push
cmp
pop
rcrl
je
orl
xorl
fidivrs
sar
loop
and
push
push
call
sub
fs
sbb
sbb
adc
and
xor
xor
xor
or
rclb
inc
bnd
add
ja
leave
clc
clc
xchg
mov
and
rolb
dec
shl
or
cmc
lret
xor
shl
test
lds
into
cli
leave
sub
test
inc
xchg
or
mulb
loope
lret
pusha
push
adc
insl
sbb
xchg
cmpsl
xor
js
shrl
add
jle
les
icebp
push
sarb
pop
rorl
xor
lds
adc
push
sbb
popf
push
push
pushf
pop
fs
mov
cld
mov
popf
movsb
xchg
sbb
add
cmp
mov
cmp
fcmove
addr16
and
iret
mov
loop
orl
incb
movsb
ss
add
push
lds
inc
sbb
xor
ret
xor
scas
push
mov
jae
add
std
inc
cli
xor
push
xor
setns
pop
daa
or
sti
sbb
ret
mov
and
adc
pop
xor
and
mov
cmp
cs
or
inc
mov
sbbb
or
fisttpl
fsubr
call
popf
sub
mov
and
cmp
sbb
jo
adcl
sub
dec
and
sbb
sbb
jne
shlb
xchg
jecxz
loopne
sbb
mov
pop
push
mov
mov
push
mov
loopne
dec
cs
jmp
enter
sbb
std
adc
dec
mov
mov
pusha
xchg
mov
enter
adc
push
add
xchg
xor
jmp
pop
xchg
and
insb
mov
call
adc
js
repnz
jg
enter
es
and
xor
cmpsl
repz
push
fsts
jo
dec
pop
mov
cmp
cmp
or
xchg
lcall
dec
push
mov
or
push
adc
popa
sub
lahf
subb
mov
popa
mov
cmpb
push
aad
dec
xor
jecxz
xchg
aas
aad
jl
jne
fadds
pop
hlt
loope
test
xor
nop
cld
in
lock
dec
inc
pop
jle
mov
mov
xor
inc
cmp
cli
inc
mov
pop
fdivr
inc
xor
jo
gs
aaa
and
test
xchg
rorl
mov
mov
push
aad
mov
sbb
inc
jb
lds
dec
aaa
arpl
jmp
push
dec
jle
lcall
inc
sti
mov
and
mov
iret
xchg
push
jmp
adc
cli
push
ret
es
das
data16
jbe
popa
imul
lret
lock
mov
sbb
jg
int
cmp
int
pushf
mov
fmull
dec
push
xchg
mov
or
dec
movsb
push
and
imul
scas
jae
ds
cld
mov
cmp
cld
lret
fwait
aad
jp
inc
es
and
xchg
lret
ljmp
loope
add
and
mov
sub
imul
sbb
jne
insl
fnsave
adc
gs
ret
add
mov
inc
lods
mov
xchg
adc
mov
jmp
rorb
jb
icebp
xor
mov
xchg
rcl
add
add
push
aad
inc
test
push
sub
mov
aas
or
inc
pop
ret
and
clc
repz
pop
push
test
daa
push
mov
sbb
loop
or
sbb
fbstp
xchg
inc
xor
jno
gs
cmpsl
gs
dec
and
sbb
lcall
add
pop
mov
out
por
mov
stc
adc
push
cmp
push
outsb
aas
add
mov
ret
push
dec
roll
add
mov
add
jbe
xchg
pop
jno
mov
xor
push
imul
pop
dec
dec
ret
dec
je
test
jo
aad
pop
movb
mov
lret
add
push
pop
inc
arpl
dec
inc
adc
push
sbb
push
mov
mov
pop
sbb
inc
xchg
pop
xchg
shll
xor
pop
mov
je
stc
pusha
push
pop
pop
mov
adc
lea
jbe
data16
pop
pop
or
ficompl
sub
outsb
sub
and
xlat
jo
cmp
mov
adc
mov
ljmp
pusha
les
and
das
jl
into
or
or
push
das
push
and
mov
lds
jb
ret
sbb
sarl
leave
cmp
xchg
adc
push
les
pop
dec
and
test
jmp
andl
clc
in
sarb
movsb
jae
movsl
loope
imul
imul
pushf
lea
push
pushf
add
lods
mov
inc
std
xor
adc
test
mov
and
sbb
cmpsb
push
xor
mov
pop
cld
pop
or
mov
lods
push
xchg
fs
push
add
pop
add
shll
xchg
pop
loopne
push
xchg
test
cmp
movsl
and
repz
lock
adc
push
and
sbbb
sbb
jne
and
sbb
dec
aad
dec
mov
cmp
pop
and
es
or
lret
inc
sahf
push
push
dec
or
inc
int3
stos
imul
es
dec
stos
and
add
sahf
mov
jo
mov
and
mov
jns
daa
daa
fs
popf
fmuls
test
lock
repz
lock
cmc
adc
icebp
jecxz
data16
call
mov
lret
in
add
fs
inc
and
cs
xor
les
dec
push
xchg
bound
stos
ret
pop
inc
movl
add
fstps
cmp
cwtl
inc
pop
add
nop
sub
adc
sbb
mov
scas
cs
sub
nop
sbb
lds
cs
rcrb
mov
inc
loopne
stos
dec
jecxz
mov
pusha
sbb
fwait
hlt
stos
mov
jo
fbld
dec
inc
xchg
or
jmp
sbbb
ret
aaa
outsb
jo
movsb
js
arpl
add
cmp
pop
pop
ljmp
sbb
xchg
jb
jmp
ret
inc
sub
push
add
push
adc
or
mov
adc
shll
aam
std
rol
and
cmc
popa
add
and
cwtl
or
aam
adc
clc
scas
mov
mov
xchg
sub
xchg
xlat
and
je
lahf
loopne
xchg
jl
enter
aas
out
nop
nop
iret
subl
jmp
fldt
movsl
sbb
mov
loopne
jp
call
sub
mov
leave
fs
data16
call
mov
fsts
outsl
push
xor
jae
xor
pushf
xchg
mov
dec
rclb
cmpsb
dec
cmp
xchg
xchg
push
sub
cmp
xor
sub
pop
xor
es
dec
jo
xchg
aad
dec
ud2
into
ret
add
inc
pop
sbb
rolb
popf
aad
xchg
xor
in
loopne
inc
shlb
aam
cmpsl
imulb
jle
and
or
mov
push
push
test
xor
add
push
bts
jmp
pushf
lea
sbb
fmuls
jo
xchg
add
ss
rcrl
xchg
sbb
bound
leave
ret
xchg
shrl
sarb
faddp
pusha
inc
mov
fldenv
sbb
testb
xchg
loopne
lods
jnp
or
call
insb
sbb
mov
sub
mov
ret
leave
push
pop
mov
inc
cmp
mov
repnz
and
inc
bound
push
adc
ret
out
mov
les
orb
push
add
xchg
addl
mov
pop
mov
mov
das
xchg
orb
cmp
push
xchg
adc
xchg
shlb
adc
mov
mov
out
add
mov
pop
mov
xor
adc
pop
push
rcll
les
orl
lods
jmp
adc
decb
orb
inc
pusha
and
leave
stos
push
xchg
insb
jbe
cmp
ja
in
mov
inc
sbb
and
or
fistpl
cwtl
outsb
jnp
jmp
xchg
add
sub
shl
or
lea
fisubrl
outsb
cmp
mov
add
mov
inc
inc
outsl
lods
loope
push
cmpsl
mov
cmp
dec
jmp
xor
sbb
frstor
cmp
bswap
xchg
and
dec
icebp
pop
and
mov
sub
add
ret
sbb
enter
divb
lahf
cmc
and
ret
sbb
adc
xchg
add
sub
dec
xchg
mov
test
ds
xor
aam
cmp
or
mov
vmsave
xchg
nop
repnz
xchg
lds
loopne
jo
int
dec
add
loope
adc
cmpsl
and
pop
imull
mov
xchg
mov
pop
sub
add
shll
rorb
push
shll
xchg
inc
lock
lcall
mov
out
dec
outsb
add
enter
jo
xlat
push
jle
mov
sbbb
imul
push
or
loope,pn
lahf
jl
fwait
test
xchg
mov
push
insl
sbb
mov
mov
push
popf
pop
in
pop
cmpsl
testl
popa
add
adc
inc
std
and
sbb
jb
cmp
adc
adc
mov
adc
mov
cs
jne
sbb
les
daa
imul
and
and
mov
and
sub
and
popf
xchg
xor
aam
pop
inc
push
add
out
cmp
jp
js
inc
jecxz
pusha
push
sbb
inc
add
jnp
daa
and
ds
mov
jecxz
add
popa
inc
cli
dec
and
xor
sub
sub
aad
xchg
in
insb
dec
mov
lods
aas
or
adcb
nop
lahf
es
mov
dec
inc
sbb
movsb
or
xchg
sbb
adc
add
xor
loopne
daa
lods
sub
es
pop
les
push
fnsave
cmp
push
jb
adc
andl
mov
xchg
in
jns
jnp
and
push
es
add
call
sub
push
jnp
xor
andl
mov
pop
xchg
stos
sbb
xor
or
jbe
pop
mov
pop
ss
xchg
and
cmp
adc
pop
jne
push
pushf
fmul
adc
and
xor
sahf
ja
push
imul
bound
dec
jbe
outsl
sub
mov
shrb
dec
xchg
int
cmp
iret
push
push
and
dec
sub
push
addr16
cmp
cmc
jbe
fsubs
push
enter
addl
sbb
lret
ljmp
or
inc
sub
pop
inc
ss
dec
arpl
cmp
cmpsb
loopne
fildl
xchg
jecxz
xchg
orb
push
stos
out
into
push
stos
xor
push
dec
jo
xchg
mov
adc
ds
out
add
les
daa
js
movsb
push
mov
cmp
sbb
pop
js
arpl
ret
out
rcll
jmp
jnp
iret
loope
js
loopne
mov
jne
cmp
dec
or
jge
lret
jo
sub
jmp
stos
shl
enter
jae
add
dec
mov
mov
outsl
cmp
add
mov
lcall
sbb
and
xchg
in
sub
adc
gs
fbstp
and
loope
mov
push
cmp
cmp
xchg
movsb
popf
dec
pop
and
mov
addl
andl
cmp
cmp
pop
leave
mov
insb
shll
call
dec
inc
or
cli
shlb
push
scas
xor
mov
mov
test
popa
ret
clc
je
add
movd
add
pusha
sub
push
sbbb
test
mov
hlt
ficoml
push
sbb
mov
jns
xchg
aam
inc
mov
sub
mov
pop
sbb
mov
push
fsubr
lods
arpl
data16
xchg
xchg
add
push
out
mov
pop
inc
mov
rcl
push
das
or
cmc
sub
shrl
in
inc
nop
pusha
nop
sbb
cmpb
test
xchg
cmc
pop
rcr
cld
lahf
dec
cmp
ds
push
sub
sub
insb
fsubs
mov
mov
push
pop
shlb
mov
stos
sarl
rcrb
or
pop
mov
xor
cmc
dec
add
mov
mov
pop
xor
movsl
cmp
sbb
loop
mov
add
jbe
and
popa
cmpsl
add
and
cmpsl
add
outsb
jne
pop
call
imul
pop
cmpl
adc
mov
lret
outsl
jns
leave
ret
lock
inc
sub
mov
xchg
pusha
inc
es
sbb
xchg
cwtl
adc
pop
jp
testb
add
arpl
fimuls
push
sbb
hlt
jmp
sahf
iret
add
inc
out
iret
icebp
pusha
shrl
mov
inc
andb
rcr
pop
imul
mov
imul
gs
jae
lahf
nop
or
jo
cld
jbe
hlt
loop
lcall
or
dec
jae
mov
ss
lds
inc
mov
and
movl
test
mov
dec
cmp
cmpsl
rcll
outsb
scas
jg
or
add
pop
lods
cmp
jl
popa
cmp
push
push
adc
scas
mov
cmc
daa
jge
and
movsb
or
add
push
sarb
xor
in
sarl
xlat
lds
xor
add
rcrl
pushf
pop
loopne
data16
sub
mov
stos
xchg
pusha
and
aaa
loop
jle
xor
lds
pop
pusha
cs
pop
in
in
roll
sub
pop
sbb
mov
pop
dec
mov
inc
loop
xor
push
cmp
mov
scas
fistps
push
mov
rcl
sub
push
mov
pop
fsubs
rcrb
enter
sbb
jle
rcr
test
adc
ret
mov
add
push
bound
dec
jne
or
shll
inc
faddl
sbb
ret
fbstp
adc
add
fs
mov
push
xchg
adc
or
cmpb
rcrb
jnp
push
out
cmp
or
xor
addb
into
loopne
dec
andl
jb
addl
fbstp
loopne
in
jae
cmp
lea
dec
push
lret
ret
call
mov
shlb
bound
push
xor
mov
jbe
aad
addr16
and
push
mov
inc
xor
adc
sbb
insb
leave
fsubs
push
adc
int
inc
and
mov
test
sub
pop
mov
or
je
sbb
add
loope
jae
add
pop
push
cwtl
in
sub
insb
push
dec
adc
mov
jne
xor
and
xor
pop
jl
cltd
loopne
sbb
insl
repnz
cmpsb
test
push
xchg
aas
lret
mov
adc
xchg
out
in
xchg
add
test
data16
and
xchg
lret
inc
rcll
test
mov
fdivr
push
cmp
ljmp
add
fcmovnb
xchg
cmp
sub
cmp
cmp
pop
movsb
test
xor
shl
mov
inc
jmp
cmp
and
and
jge
icebp
mov
mov
and
add
dec
mov
or
loop
mov
jmp
pop
incl
jno
sub
add
fmuls
cmp
pusha
xchg
mov
add
mov
push
sbb
pop
inc
push
jbe
mov
and
dec
jae
or
or
shrl
testb
cmp
test
lds
sub
and
and
daa
call
mov
in
test
ljmp
sbb
lea
mov
and
fldenv
mov
xchg
test
adc
xchg
jns
jmp
rclb
popf
lock
ja
mov
int
mov
jl
test
mov
jb
mov
mov
and
sub
inc
sbb
fmul
cltd
rorb
cmp
jo
add
outsb
cmpb
into
push
add
push
push
pop
sbb
adc
cmpsb
push
dec
sbb
stc
jno
sub
sbb
add
or
pop
lds
stc
jb
push
fbld
cmp
jae
jmp
imul
dec
stos
ret
inc
sub
sbb
mov
sbb
cmp
enter
cmp
sahf
jno
mov
inc
push
ljmp
sarb
dec
or
outsb
cmp
mov
cli
aam
pop
cmpsl
cmc
loope
cmp
dec
repz
insb
or
test
ret
loop
mov
dec
dec
dec
js
icebp
inc
mov
add
popa
push
dec
sub
pushf
jnp
xchg
inc
jmp
arpl
aad
add
movsb
jmp
jg
into
cwtl
pop
mov
push
xchg
fistps
and
jp
add
dec
sub
pushf
les
rcl
in
sbb
gs
xchg
push
mov
sbbl
mov
inc
sbb
outsl
mov
and
lods
xorb
push
add
jl
cmpsb
dec
cli
aad
add
xor
fs
sbb
add
jo
and
jmp
insb
int3
pop
push
mov
pop
xchg
mov
cwtl
gs
xchg
sbb
and
test
adc
add
movsb
cmpsl
iret
ds
inc
xchg
loopne
push
test
shll
adc
pusha
add
hlt
jl
jns
xor
sbb
icebp
movsl
repz
int3
cmp
jecxz
mull
pop
call
inc
or
sbb
movl
add
out
inc
mull
outsb
sbb
in
cwtl
inc
xchg
cmpsb
xchg
popa
movsb
xchg
mov
cli
xchg
inc
mov
aaa
dec
inc
mov
inc
push
pop
mov
mov
pop
or
or
test
leave
lea
call
shll
iret
stc
sub
xchg
sbbb
xchg
out
popf
sub
jp
icebp
adc
js
sub
and
test
mov
les
cs
lds
sbb
cmc
sbb
sbb
xchg
roll
mov
xor
add
mov
les
push
adc
lret
lcall
adc
movsb
loopne
push
nop
add
or
dec
xabort
inc
add
js
or
jge
jb
outsl
jmp
cwtl
push
add
and
push
or
push
fistps
inc
cmp
sti
or
outsb
dec
dec
clc
add
ret
outsb
mov
inc
cmp
jl
bound
xor
push
sbb
and
and
inc
or
mov
add
js
xor
or
xchg
js
mov
inc
jae
sti
mov
mov
roll
cmp
les
push
stos
leave
leave
lcall
push
mov
sbb
cld
or
fisubs
lds
aad
mov
mov
xchg
adc
push
xor
mov
adc
ret
call
cmp
mov
cvttps2pi
push
aad
fadds
inc
jp
cmp
cld
lds
push
xor
inc
in
in
fwait
cmp
xchg
sub
sbb
dec
mov
jecxz
jbe
xchg
dec
das
fistl
mov
sbb
or
jecxz
hlt
stc
sbb
mov
cmp
push
sbb
insl
sub
and
and
rolb
adc
idiv
sbb
cmp
rclb
mov
andb
aam
mov
incb
in
addb
pop
xor
cs
test
push
pop
inc
xlat
xchg
cmp
mov
mov
adc
js
iret
push
test
pop
and
out
cmp
stos
mov
shlb
xor
cli
stos
push
xchg
xchg
cs
pop
das
inc
lahf
insb
nop
adc
lds
sbb
mov
pop
popf
aad
and
xor
and
js
xor
cmp
pop
insb
jb
and
xchg
mov
addl
lcall
sbb
lahf
inc
movsb
test
sub
cmp
mov
shrb
insb
ret
lock
fcompl
xchg
call
sbb
or
lds
lods
leave
bound
lret
out
adcl
mov
mov
jg
aam
add
loopne
pop
shll
test
mov
xchg
test
ret
push
inc
sub
or
xchg
and
mov
mov
in
cmp
stc
lods
test
ror
mov
out
popa
pushf
sub
sbb
mov
mov
imul
jl
cltd
push
leave
cmp
adc
sahf
pop
mov
ret
sahf
cmp
cli
pop
insb
jns
stc
push
sub
iret
push
loopne
add
cli
pushf
dec
xor
and
sbb
sbb
into
mov
add
roll
add
and
or
fcompl
inc
xchg
mov
rorl
jo
inc
adc
clc
inc
jno
xchg
jns
jno
and
mov
cmp
mov
pop
aad
iret
lock
test
jmp
daa
int
test
push
mov
xchg
bound
mov
pop
jl
rcrb
sub
xchg
inc
xor
pop
daa
imul
scas
jne
add
daa
call
negb
and
inc
push
xchg
lcall
push
xchg
cld
mov
je
push
push
sbb
xchg
jnp
and
dec
mov
jl
insb
in
pop
mov
stos
xchg
cs
or
push
sbb
adc
sbb
stos
xchg
add
adc
jnp
cmpl
cwtl
push
orb
scas
mov
test
stos
icebp
jmp
shlb
and
sub
pushf
loope
stos
xor
dec
sbb
cmp
rclb
push
cmp
popf
cmp
mov
adc
cmp
loop
pop
mov
xchg
insb
add
test
add
and
push
cmp
or
dec
inc
insb
xor
outsl
mov
shll
cltd
insb
test
sbb
je
int3
cmp
sub
leave
loop
fwait
clc
dec
jg
add
and
cmp
fs
jmp
fsubrl
orb
jnp
or
xchg
mov
xchg
leave
leave
arpl
push
sbb
xchg
jp
dec
sub
popa
sbb
xchg
mov
lcall
daa
cwtl
lea
daa
or
ficomps
adc
test
test
jmp
nop
in
addb
xchg
xor
fiaddl
js
dec
mov
ljmp
inc
cmp
xchg
sbb
cs
push
xor
push
add
add
xor
sbb
xchg
xchg
push
pushf
push
mov
and
jb
adc
and
add
push
jmp
lods
in
or
pop
loop
dec
push
jne
lds
shlb
pushf
repnz
push
mov
daa
ss
sti
clc
push
pop
daa
popf
xor
ss
adc
lret
inc
cmp
xchg
xchg
xchg
sub
arpl
pavgb
adcl
ret
mov
movsb
or
jae
addb
insb
rorb
mov
lret
push
insl
or
push
das
fldt
mov
loopne
or
call
sarl
pop
sbb
and
dec
push
imul
add
cmpb
scas
sbb
cwtl
adcb
dec
pop
cld
mov
mov
jno
nop
pop
dec
jecxz
jecxz
inc
cltd
addr16
test
popa
rorl
data16
pop
pop
push
aad
mov
out
mov
dec
mov
mov
jne
mov
xchg
mov
mov
pop
xchg
xchg
les
and
clc
aaa
and
clc
and
cld
divl
dec
jp
xor
hlt
loop
pusha
ljmp
and
inc
dec
xor
adc
nop
jne
cmc
stos
mov
sbb
inc
stc
jbe
pop
pop
and
xor
mov
in
inc
pop
sbb
sbb
fs
mov
dec
rol
scas
mov
leave
scas
lcall
in
xchg
xor
pop
pushf
and
sub
push
shll
mov
push
and
add
dec
nop
lods
test
mov
xor
push
stos
dec
inc
out
lods
jge
jb
and
dec
daa
sbb
addr16
movsb
add
cld
lea
mov
dec
stos
xchg
and
cmp
inc
ja
repz
cmp
xor
cli
jl
or
or
hlt
jb
sbb
gs
test
xor
inc
xor
bound
or
sbb
mov
cmp
sahf
sbb
cli
icebp
cmc
or
ss
push
sbb
xor
popa
dec
aam
stos
insl
xor
sbb
mov
xor
mov
popa
or
cmp
push
xchg
rorb
adcb
repnz
hlt
aas
imul
xor
loopne
and
mov
mov
stc
xchg
mov
xor
popf
and
pop
aam
loope
fcoml
xor
or
bound
pusha
push
rorl
in
hlt
add
lods
push
adc
jb
mov
sub
mov
and
and
sub
adc
subl
pop
push
test
jae
jle
sbb
ljmp
cli
xchg
cmp
adcb
les
pushf
mov
nop
jno
and
sub
mov
scas
test
xchg
mov
fcom
xorl
lcall
add
js
inc
nop
cs
fisttpl
aas
popa
adc
push
paddsw
inc
loopne
mov
ds
jo
icebp
dec
js
repnz
add
push
cltd
nop
repz
lret
stos
outsb
push
xchg
cmc
jo
xchg
xor
jo
arpl
into
jmp
fsubl
xchg
jl
add
std
xor
popf
adc
stos
ljmp
xchg
aam
pop
xor
mov
xor
pop
movsl
cmp
or
pop
enter
cmp
xlat
fildl
cmp
popf
fs
nop
xor
inc
cmpsb
inc
adc
mov
add
loop
add
stc
ss
jecxz
orl
add
xchg
test
sbb
sti
jl
cmc
mov
pop
dec
sub
and
xor
aad
push
es
cmp
push
pusha
pop
jp
inc
push
inc
int
push
push
mov
pop
inc
repnz
push
dec
pop
or
add
scas
retw
leave
rcll
jb
dec
or
loopne
adc
sub
icebp
pop
dec
or
mov
mov
dec
xchg
jb
sahf
push
sbb
out
pop
push
pop
imul
sbb
xchg
cmc
mov
jmp
inc
adc
sbb
cltd
jbe
mov
rolb
mov
jp
pop
add
and
xchg
data16
aas
shrl
xchg
movsl
adcb
or
jecxz
mov
daa
dec
pushf
inc
push
cli
cwtl
pop
sbb
daa
inc
arpl
ret
push
vmulsd
add
stc
cli
movsb
insb
jg
inc
mov
shr
shr
lods
jbe
iret
mov
test
mov
pop
push
and
jp
icebp
lret
push
aad
orb
bound
inc
mov
and
iret
mov
xlat
push
inc
loope
rcll
js
mov
add
in
adc
jg
cmp
push
jle
dec
aam
dec
sbb
adc
add
push
mov
mov
add
lahf
pop
jbe
mov
sahf
call
stos
insb
sahf
and
imul
mov
sbb
lds
pop
cld
push
or
fldenv
lea
mov
dec
test
outsl
dec
mov
jne
std
stos
inc
and
shlb
xlat
roll
dec
mov
insb
aaa
or
jno
xchg
lods
icebp
sahf
fildl
xchg
lock
inc
sti
or
xor
mov
test
out
cmp
lods
mov
testb
xor
push
lock
fabs
dec
test
add
ret
cwtl
push
mov
ss
mov
jmp
and
jl
int
loopne
push
lahf
sub
jp
pusha
jne
pushf
nop
push
pop
xor
loopne
push
cmp
out
pop
sub
xchg
or
xchg
int3
gs
aam
mov
add
lds
inc
ds
mov
ret
int3
jo
or
jge
inc
xchg
xchg
pushf
dec
sbb
cmp
push
add
lea
mov
sahf
inc
add
repnz
ds
int3
arpl
xchg
xchg
je
cs
fsubl
xchg
fadds
xchg
std
repnz
add
add
movsb
jecxz
mov
fldl
stc
data16
js
cmp
xchg
stos
push
loope
pop
sub
add
mov
inc
mov
ret
sbb
addr16
popf
xlat
dec
mov
xchg
inc
je
loopne
out
in
and
xchg
add
mov
pusha
or
iret
dec
dec
aad
jno
add
rcr
xor
mov
clc
ds
push
inc
push
xor
scas
loopne
stos
pop
imul
rclb
ss
out
pop
mov
adc
leave
xchg
jbe
into
push
das
cltd
movsb
outsb
into
xor
xchg
ds
cmpsl
adc
xchg
push
inc
jp
daa
mov
inc
jbe
je
xchg
ret
dec
xchg
mov
repnz
xlat
fs
and
push
sub
or
xchg
mov
dec
xchg
shrb
loopne
nop
cmpsb
pusha
add
dec
pop
scas
popf
xchg
movsb
out
pop
das
cltd
sbb
xchg
pop
add
jl
mov
adc
push
hlt
cmc
pushf
mov
dec
push
fcmovbe
add
mov
imul
add
pop
add
mov
lret
cmp
out
rclb
out
gs
sahf
scas
push
lret
imul
or
imul
loop
sbb
stc
push
movb
stos
pop
and
xor
inc
ljmp
nop
scas
xlat
jecxz
stos
xchg
and
jmp
add
add
fisubrs
mov
fisubs
nop
xchg
sahf
aad
inc
and
lock
xor
adc
xor
jl
popa
cmc
pop
mov
xchg
cmc
lods
or
andl
mov
cmp
jge
rclb
aas
test
mov
sbb
push
ror
xchg
out
sub
mov
mov
mov
adc
mov
push
push
push
aam
shr
lods
inc
push
cld
imul
xchg
xchg
sub
adc
sbb
dec
jns
and
popf
and
dec
push
mov
lock
shrb
and
adc
pop
adc
rol
pop
or
push
hlt
roll
push
pop
lea
jns
pusha
pop
pop
jne
pop
mov
or
sub
or
mov
xor
adcl
stos
test
bound
adcb
add
add
xor
test
lahf
cs
test
sub
jecxz
sbb
ss
push
sbb
or
and
sbb
xchg
js
dec
subl
shlb
lds
inc
nop
sarl
inc
inc
sbbb
iret
adc
sahf
jae
pusha
mov
je
sub
sar
sbb
outsb
xor
add
addr16
pusha
repnz
add
data16
addl
bound
cmc
daa
jbe
jb
sahf
adc
xchg
iret
jbe
outsb
test
jmp
les
fdivl
sub
or
dec
loop
xor
ret
add
out
shr
out
push
push
out
mov
loope,pn
or
push
add
pop
sub
filds
repz
pop
add
jp
cwtl
and
daa
cmp
xor
loop
or
adc
add
mov
lods
movsb
add
ret
test
mov
fs
lea
sbb
aaa
mov
or
mov
pop
xchg
cmpsb
cmp
jp
pushf
jmp
orl
in
adc
sbb
data16
or
push
nop
into
js
insb
mov
insb
dec
lret
inc
cmc
mov
rcll
dec
shlb
rcrb
xor
sarb
adc
push
mov
sub
push
sbb
lret
call
jns
les
sbb
push
ret
add
mov
push
mov
sbb
dec
xor
and
jl
andb
ja
aam
push
inc
mov
jbe
test
jecxz
mov
dec
loope
jecxz
cwtl
ror
pop
decl
mov
lret
addr16
dec
popf
push
pop
rolb
cmp
sbb
adcl
cwtl
inc
pushf
mov
call
push
add
cld
xchg
jne
adc
or
aad
pop
andb
cmpsl
test
jno
daa
sbb
sbb
pop
pop
xorl
dec
movb
arpl
inc
mull
dec
ja
push
dec
jno
in
xchg
jne
add
lahf
ja
push
cmp
xor
sbb
sbb
fadds
insl
dec
mov
in
std
test
xchg
aam
sub
pop
movsb
lcall
das
hlt
ror
add
ljmp
and
pushf
lea
xchg
rcl
xlat
std
inc
mov
mov
cld
dec
or
scas
shll
pusha
mov
call
daa
sti
sbb
adc
inc
cmc
jecxz
mov
loope
xor
movsl
push
jmp
cmp
xor
and
cmp
cwtl
jnp
push
add
pop
cmp
cmp
and
mov
outsb
dec
or
dec
mov
stos
mov
lcall
and
dec
jle
dec
push
push
push
and
push
stc
fnstenv
and
in
jbe
push
jnp
pushf
call
ljmp
and
cld
in
icebp
add
popf
imul
add
insb
cmp
dec
sbb
or
sub
push
mov
xchg
mov
adc
fldt
xchg
or
imul
xchg
xor
jb,pn
lds
pop
adc
pop
hlt
or
negl
and
xchg
cmp
sbb
pop
negl
in
and
pushf
leave
mov
xchg
in
adc
popf
pop
inc
rcrl
pop
lds
adc
mov
pop
push
xchg
inc
add
test
rcll
stos
dec
pop
ret
and
jg
mov
mov
sub
dec
mov
ficomps
test
sbb
imul
ret
pop
xchg
and
add
cmp
jecxz
xchg
jp
fdivrl
in
jns
lret
xchg
sub
push
sarl
cmpsl
sahf
sbb
lock
addb
ret
dec
jbe
dec
mov
push
and
push
data16
ja
jge
add
inc
adc
or
jae
adc
mov
adc
adcb
mov
mov
jle
sahf
jnp
hlt
xchg
jl
mov
xor
mov
mov
scas
in
lds
cmp
invd
es
xchg
test
cmc
loop
ljmp
decb
mov
scas
clc
mov
cmp
mov
xorb
int
mov
sub
xor
xorl
inc
fs
movsb
mov
add
pop
mov
pop
shlb
dec
dec
adc
in
sub
inc
push
dec
in
mov
jnp
and
xor
push
add
popf
sar
and
push
daa
cwtl
push
jmp
dec
dec
arpl
cmp
dec
cltd
sub
cwtl
in
aaa
lock
aas
popw
mov
mov
push
mov
pop
imul
xchg
fiaddl
lods
clc
rcrl
popa
loope
dec
clc
nop
cmpsb
data16
xor
push
testb
jle
addr16
mov
add
push
sbb
rorb
add
repnz
xchg
addr16
mov
push
and
lods
mov
mov
ret
and
push
push
mov
jle
pop
sub
inc
je
inc
push
xchg
mov
inc
jb
fsubrp
and
sub
ljmp
inc
fcoms
push
or
cmp
add
or
and
data16
sub
xor
cmp
sub
sahf
aam
push
dec
lcall
jl
leave
inc
in
mov
and
push
or
sub
cmc
inc
and
pushf
js
cmp
or
out
cmp
cmp
add
popf
pop
jl
inc
fisttpll
add
mov
add
shrl
pop
adc
test
int3
pop
push
jmp
fdivrl
sbb
cmp
loope
les
lods
cmp
scas
or
mov
lcall
or
js
dec
or
jmp
push
jnp
enter
push
adc
and
push
pop
push
mov
clc
test
push
mov
and
jecxz
xchg
xor
pop
push
outsl
rcrl
pop
push
or
or
mov
insb
mov
pop
mov
fsubrs
xchg
cmp
push
and
xchg
mov
adcl
pop
and
inc
push
jns
add
loopne
sahf
mov
push
movsb
cmpsl
fwait
xchg
mov
nop
scas
in
dec
add
sub
jecxz
sub
stc
dec
movsb
mov
lea
insb
leave
dec
dec
cmp
inc
xor
mov
xor
inc
cmp
xchg
les
pop
ror
jmp
stc
sub
jmp
inc
mov
cmp
dec
ficompl
sub
cmp
stc
negb
in
cmc
hlt
mov
movsl
hlt
mov
shll
subb
dec
out
fs
popf
push
push
pop
xor
and
pop
sbb
imul
cmp
shrd
jo
pusha
mov
mov
cmp
sub
or
nop
cwtl
nop
mov
inc
xchg
daa
fsubp
rcrb
aas
dec
repnz
inc
cmp
popf
in
add
dec
pop
inc
push
inc
lods
inc
cli
add
pop
mov
sbb
ljmp
mov
repz
push
ret
xchg
inc
wbinvd
dec
aam
xor
orb
xor
inc
xchg
and
add
mov
or
ja
and
and
and
pop
cmp
imul
pop
fisttpl
sbb
inc
dec
mov
dec
rcll
dec
mov
xor
jnp
test
jne
push
cmp
sbb
xchg
ljmp
js
inc
cmp
sbb
scas
clc
dec
inc
mov
and
insl
add
xor
ja
inc
sbb
aad
cs
mov
xchg
loopne
dec
jo
mov
and
lods
out
sub
jge
inc
xchg
mov
aad
and
jno
stc
dec
pusha
sub
push
and
rolb
mov
xchg
negl
decl
cld
push
and
sbbb
les
or
adc
stos
jp
lahf
xor
xor
shll
lods
sbb
dec
orl
pusha
pop
sbb
stos
jne
daa
cmp
imul
add
push
fsubs
imul
clc
pop
hlt
pushf
jne
rcll
and
repnz
pop
fwait
in
mov
sbb
pop
lods
add
loop
cwtl
and
mov
sub
or
push
fiadds
mov
lcall
imul
pop
mov
sub
or
and
das
jg
ret
test
push
or
dec
into
pop
sub
mov
cmpsl
cld
push
mov
or
xlat
cmpsl
mov
xor
sub
lret
daa
jo
filds
jno
jne
dec
jbe
lcall
in
movsb
mov
ds
xchg
jp
pop
cmp
nop
pop
pop
push
ja
xor
jmp
sbb
stc
sbb
adc
sbb
je
icebp
xor
dec
inc
fnstenv
cld
ret
mov
or
movl
cmp
rolb
mov
ret
cmp
out
test
xchg
add
subb
inc
repz
or
dec
jbe
sbb
add
stos
pop
push
xchg
jno
add
dec
push
add
in
mov
xchg
outsl
jecxz
imul
xor
or
arpl
xor
adc
movsb
dec
test
fwait
and
dec
pop
mov
stc
js
lcall
shl
outsb
cld
mov
push
insb
jne
ja
mov
je
sbb
ja
pop
add
ret
and
int3
xor
fcmovnb
enter
orl
add
sbb
std
jbe
pop
push
push
das
test
out
mov
mov
adcl
scas
xchg
sarb
sbb
lret
inc
jne
ret
cmp
lock
in
xchg
pop
lds
out
xor
mov
cwtl
add
and
push
adc
dec
push
je
cwtl
pop
push
notb
cwtl
mov
rclb
and
add
jle
clc
mov
mov
add
xchg
xchg
ret
push
xchg
movsb
mov
subl
shll
test
pop
add
movsb
gs
mov
xor
inc
decb
add
pop
mov
ret
sahf
mov
lods
repnz
dec
test
test
fcoml
dec
cs
mov
fs
pushf
xor
xor
or
jl
mov
popf
je
ss
lret
xchg
push
aas
out
jne
lea
fbld
cltd
push
xlat
lcall
cld
jg
and
jno
in
pop
jmp
xchg
cmp
adcl
add
and
mov
jns
arpl
movsb
daa
xor
cwtl
jo
dec
call
jbe
or
pop
insb
jmp
imul
mov
std
hlt
jb
movsb
loopne
add
clc
adc
xor
mov
iret
es
rorb
ljmp
dec
adc
push
xchg
jnp
std
and
pop
adc
outsl
push
lea
xor
push
testb
mov
call
push
or
pushf
movsb
call
xchg
push
arpl
dec
fildl
dec
shlb
test
pop
xor
int3
scas
pop
jp
leave
sub
in
insl
xor
or
pop
xor
dec
rcl
or
clc
bnd
dec
popf
pushf
inc
lret
jns
test
add
push
push
pop
fdivrs
mov
dec
outsb
mov
and
or
icebp
and
jp
loope
ja
fnstenv
repnz
iret
ret
dec
in
cmp
call
iret
xor
fwait
push
sbb
mov
dec
fisubs
je
je
push
add
xchg
bound
cs
loope
xor
inc
enter
imulb
fs
xchg
cmpsl
mov
or
test
jo
pop
mov
cld
mov
bound
clc
and
mov
pop
in
fadds
xor
and
iret
and
cmp
jae
jnp
imul
pop
add
or
xchg
jp
subl
inc
sub
test
cwtl
push
mov
add
or
std
pusha
xor
adc
jnp
inc
call
cmp
dec
je
pop
subl
and
or
popa
or
cmp
xchg
add
sbb
daa
cmp
inc
adc
jl
iret
loopne
popf
mov
xor
popa
add
or
dec
xlat
movsb
mov
push
jns
shll
adc
xor
stos
mov
bound
sub
scas
cmp
and
mov
cwtl
sub
pop
push
sub
es
push
rcr
add
or
mov
cmp
cmpsl
adc
add
call
jle
xchg
sub
mov
sbb
xchg
adc
sbb
fdivs
jae
scas
xor
lahf
jle
call
adc
aaa
inc
add
repnz
dec
pop
xor
inc
and
pop
stc
js
adc
mull
shr
xchg
xchg
xchg
mov
lock
or
test
test
jecxz
xor
add
xchg
rcrl
and
lods
int
inc
mov
ja
add
repnz
and
xchg
xchg
inc
fildll
cmp
je
pop
rcrb
inc
sbb
pop
or
add
lcall
bound
dec
xorb
pop
sub
pop
rolb
mov
test
cmp
cmpsb
in
sub
xchg
xor
cmpl
bound
movsl
inc
les
mov
or
add
mov
insb
dec
pop
add
pop
aaa
inc
jae
jb
arpl
test
push
arpl
test
imul
jl
pop
lds
movsb
out
add
clc
cmpb
xchg
inc
add
sbb
sbb
sub
adc
push
mov
jo
cmp
repz
rcll
loope
jns
faddl
roll
cmp
leave
call
in
subb
dec
mov
and
pop
cmp
test
outsl
xchg
sbb
jbe
adc
lahf
add
mov
xor
mov
sub
mov
leave
mov
adc
mov
inc
pusha
test
sti
jnp
push
cmp
imul
sahf
js
out
cmp
push
add
sbb
jne
scas
or
stos
sub
xor
inc
outsb
stos
and
push
pop
cs
daa
xor
and
cli
loop
xor
push
mov
shl
and
cli
enter
popa
pop
and
cmp
cld
mov
bound
pop
cmp
popf
test
or
sub
lahf
in
or
fildll
push
xor
mov
sub
lock
arpl
add
icebp
mov
jnp
push
xchg
adc
subl
and
fadds
daa
jae
pushf
xor
cmp
sbb
or
addl
andb
jnp
push
dec
sbb
mov
xchg
pusha
fcmovnu
push
sub
and
inc
adc
pop
pop
je
aad
xchg
sbb
rol
mov
fadds
jns
xor
xor
sbb
adc
pop
mov
aaa
jmp
lods
pop
in
int3
popf
push
jbe
dec
jae
dec
cs
lods
adc
mov
in
icebp
jno
lods
fnstsw
scas
inc
and
xor
daa
pop
sbbb
xor
sbb
sub
mov
ret
gs
adc
fxch
mov
int3
ficoml
dec
jp
mov
and
es
addr16
or
push
popf
push
rolb
mov
xor
jmp
mov
sbb
je
xchg
inc
sbb
js
pushf
pop
add
sbb
and
xchg
lds
jl
lcall
sti
and
aam
push
add
jbe
xlat
jmp
or
loope
push
mov
es
fmuls
cmp
push
insl
push
and
mulb
cli
add
mov
popf
adc
push
rcr
push
imul
push
movsb
ss
repz
je
clc
add
jae
xor
dec
add
out
cmpsb
imul
mov
jg
pop
pop
mov
sbb
mov
mov
sar
loopne
scas
jne
in
push
fcomps
mov
ljmp
dec
or
data16
pop
lahf
outsl
cmp
fnsave
nop
push
das
cmp
shl
or
stc
inc
sahf
insb
or
das
les
int
inc
push
out
ret
adc
sbb
inc
andb
and
es
xchg
jae
add
hlt
sub
cmp
lahf
xchg
xchg
push
pop
in
testl
sti
pusha
loope
add
xor
xor
cmp
adc
sarl
lret
push
cmp
or
cmp
and
or
bound
and
hlt
mov
jns
cmpsb
and
mov
add
cmp
push
aaa
pop
jg
sbb
jo
in
mov
cld
pop
jno
out
jno
sbb
or
mov
sbbb
lret
dec
in
insl
xor
and
insl
or
rolb
or
or
sbb
or
cmc
pop
mov
mov
aad
jo
add
dec
xchg
mov
adc
push
add
nop
dec
jecxz
loopne
rclb
lret
pop
clc
les
les
xor
sbb
push
or
sub
rorl
mov
push
xchg
out
out
pop
and
outsl
lret
cmp
sbb
mov
mov
or
testb
jge
test
xor
jp
or
push
rclb
mov
shr
loope
icebp
push
sbb
test
jecxz
inc
dec
js
std
inc
repz
mov
cmp
dec
icebp
loope
cwtl
add
testb
or
es
inc
sub
enter
aad
lock
shl
jecxz
ret
jl
and
xchg
xor
rolb
sub
xchg
mov
enter
testb
dec
or
insl
sbb
nop
inc
in
cmp
push
insb
xchg
js
es
pop
or
jecxz
in
cmp
outsb
rcrl
movsb
xchg
add
push
jnp
xchg
add
dec
jne
adc
sahf
clc
sub
and
push
mov
insb
rep
push
das
popa
xchg
and
mov
in
cmp
dec
ds
mov
int3
mov
sbb
ljmp
dec
call
mov
pop
mov
in
sub
iret
orb
sub
orb
jmp
enter
sbb
loopne
mov
test
mov
mov
scas
in
pop
popf
sub
arpl
rolb
pop
dec
jne
andb
xchg
add
cmp
lea
cmc
xlat
lret
xchg
push
je
and
xor
adc
xchg
xchg
sub
adc
ja
je
into
ds
mov
jb
adc
mov
xor
and
mov
into
loop
out
leave
enter
nop
cmpsb
mov
idivb
dec
cmp
and
push
adc
test
lods
lret
adc
adc
add
movb
je
and
mov
dec
cs
and
jecxz
int
add
cmc
and
cmp
and
pop
dec
popf
cmp
enter
pop
hlt
es
subb
add
clc
dec
pop
adc
xchg
mov
add
ret
sbb
and
inc
sbb
xchg
push
in
mov
add
push
clc
icebp
stc
gs
ret
es
mov
pop
movb
loope
movsb
lds
cmp
mov
pop
icebp
sbb
dec
repnz
ss
ljmp
mov
dec
loopne
out
idivl
and
push
push
insl
adc
sub
sbb
movsl
call
xchg
xchg
and
mov
cmp
orl
push
and
js
or
bt
pop
sahf
xor
data16
lahf
push
imul
mov
add
sbb
xchg
sbb
cmp
pop
lahf
sbbb
subl
or
xchg
andb
or
push
lahf
xchg
popa
jbe
mov
cmpb
dec
repnz
mov
loope
push
inc
sbb
push
xchg
adc
adc
test
adc
push
pop
cmp
loope
sbb
insl
lret
dec
mov
aam
movsb
cmp
jno
lsl
adc
pop
jg
push
inc
addb
jb
push
xor
daa
push
cmp
das
xchg
subl
sti
jp
mov
or
jl
cmpsl
in
and
fs
pop
fdivl
pop
test
incl
daa
stc
cmp
jl
test
nop
sbb
push
jns
mov
push
xor
aam
adc
xor
mov
adc
imul
jl
das
jbe
mov
enter
xchg
pushf
cmpsb
sysret
cmp
xchg
fisttps
cwtl
cmp
adc
mov
xchg
cmp
stc
js
push
shrb
movmskps
mov
lods
inc
mov
in
in
add
add
lock
sub
and
cmp
sti
aad
mov
roll
mov
in
das
push
aad
ret
sahf
sub
sahf
mov
sbb
mov
inc
xchg
nop
add
pop
jo
into
fdivrs
xchg
rcrb
daa
les
shlb
addr16
push
mov
or
repnz
orl
adc
in
icebp
movsb
adc
inc
xchg
add
mov
pop
add
enter
sarl
mov
cmp
leave
stos
adc
push
shlb
insl
mov
and
cmp
jp
lock
les
mov
mov
dec
ja
cmp
lahf
aas
pushf
aam
test
mov
mov
gs
mov
mov
sbb
or
xor
nop
pusha
and
out
cs
dec
xchg
notb
xor
jl
add
ret
push
sbb
inc
ret
mov
popl
dec
mov
add
jmp
sub
adcb
mov
icebp
pop
dec
jnp
inc
jle
je
xchg
cli
rclb
jb
shl
jne
movsb
jbe
ror
or
sbb
int3
ss
mov
dec
pop
sub
or
movsb
pop
xchg
cli
shlb
push
push
aaa
test
inc
mov
cmp
inc
or
xchg
rcl
lcall
mov
lcall
dec
sub
jmp
cmc
inc
movsl
mov
sub
jmp
test
and
push
imul
sub
add
sarl
pop
js
add
xchg
call
rcr
dec
scas
push
lahf
xchg
lods
adc
xchg
cmp
loopne
cmp
aam
jnp
popf
fisubs
dec
or
test
fs
into
pusha
faddl
add
fadds
inc
mov
push
cmp
aam
adc
test
ja
push
xor
lods
pop
jno
fwait
sub
mov
xor
xor
or
add
outsl
cs
push
lods
mov
sbb
and
rorb
addr16
decl
pushf
les
sbb
adcl
testb
or
jno
ret
movsb
dec
pop
popf
mov
dec
out
sub
jle
xchg
out
jge
push
cltd
jle
mov
push
pusha
sahf
popf
xchg
jp
ret
mov
outsb
pusha
xchg
std
jnp
clc
mov
pop
daa
mov
xchg
ss
cmpsl
sarl
lcall
cmp
push
dec
sahf
aaa
daa
sub
mov
jb
jb
or
jne
mov
pop
dec
push
lret
adc
xchg
pop
mov
stc
outsb
and
out
in
or
arpl
subb
scas
xor
nop
test
cmp
pop
sub
movl
adc
pop
add
test
stc
add
mov
xchg
xchg
mov
inc
shlb
jge
mov
iret
push
cld
xchg
mov
adc
stc
jbe
jno
or
add
push
mov
dec
dec
mov
call
sahf
test
jmp
test
sbb
ss
inc
or
sbbl
shll
call
lods
fs
add
sub
cmp
inc
mov
push
repz
repnz
add
add
sahf
push
push
es
leave
lods
mov
vpor
test
call
fnstenv
adc
jmp
and
fisubs
jnp
mov
leave
fmull
pusha
push
mov
mov
mov
jmp
push
arpl
out
adc
mov
cltd
add
into
mov
and
call
movsb
xchg
mov
mov
and
movsb
add
xchg
mov
sub
fildl
shll
mov
inc
dec
ljmp
jne
mov
lcall
in
pusha
add
mov
inc
iret
mov
dec
outsb
mov
adc
std
jmp
call
xlat
xor
sbb
and
push
sub
cmp
and
jns
push
ret
ret
add
push
stc
cmp
sbb
adc
out
cs
loopne
push
movsb
out
xor
dec
ret
das
popa
mov
std
sbb
cmc
add
nop
mov
dec
adc
loopne
dec
mov
rcll
cwtl
movsb
fxch
arpl
mov
pop
push
mov
sub
test
sub
iret
addr16
inc
sub
inc
loope
stos
jnp
adc
lcall
adc
leave
sbb
cs
fcoml
scas
cs
pop
movsb
or
lock
mov
and
jmp
aad
cwtl
jle
xor
mov
popf
xor
xchg
outsb
jecxz
mov
jl
and
cmc
jo
cvttps2pi
out
popa
mov
rorl
scas
add
shrb
push
mov
dec
jle
test
mov
les
pop
push
mov
or
rcr
cmp
xchg
jne
push
pushf
sub
xorl
bswap
jmp
pshufw
add
nop
es
jecxz
sub
push
and
sbb
mov
jecxz
fsubrs
jp
test
pop
pop
sub
add
dec
cmp
pop
add
or
in
jno
mov
stc
loopne
sub
dec
lods
pop
cvttps2pi
lods
xor
push
in
cltd
jae
mov
cmp
cmp
popa
cmp
push
pusha
pop
dec
shl
sti
inc
mov
outsl
lods
pop
bnd
sub
dec
mov
in
mov
rolb
nop
movsw
jo
add
push
repnz
lock
loope
daa
jle
and
test
or
loopne
dec
in
and
dec
notl
push
mov
and
aam
pop
repnz
and
adc
dec
mov
xor
pop
xchg
fidivs
cli
test
outsl
js
setl
popf
idivb
incl
outsb
scas
lds
pop
or
pop
setb
and
jmp
rcl
fistl
and
loop
jmp
mov
movsl
xor
push
pop
or
adc
push
push
cmp
call
inc
inc
cmp
lock
movsb
js
stos
pusha
push
movsb
mov
rolb
test
sbb
stc
stc
xor
in
fadds
xchg
or
xor
and
lret
push
rolb
in
enter
out
or
jl
leave
dec
outsl
fcoms
out
mov
es
pop
aam
clc
cltd
jp
push
loopne
add
mov
and
out
push
adc
mov
fs
sbb
xor
inc
mov
inc
mov
das
push
mov
pop
cmp
push
xchg
test
scas
cmc
push
mov
add
sub
jg
push
js
std
push
int3
push
adc
sahf
pusha
dec
jmp
in
sbb
out
dec
test
push
and
pop
adc
ljmp
sbb
es
stc
rorl
loope
cmpsl
cmp
cltd
stc
push
mov
shl
nop
lock
push
and
jge
test
push
adc
sub
jo
icebp
lahf
dec
gs
cmp
nop
scas
inc
mov
cmc
or
xor
cmp
imul
js
sub
xchg
adc
xor
loop
push
mov
dec
cmp
mov
es
add
stos
out
pop
jg
pop
ficoml
dec
jne
out
sbb
xchg
pop
adc
pop
jb
aad
cmp
inc
movsl
jp
sub
js
adc
das
sub
ret
add
pop
leave
xor
push
aaa
xor
pop
cmp
pop
imul
sub
je
cmp
mov
icebp
mov
and
enter
js
aad
mov
jge
and
adc
sub
xchg
add
jae
aad
sub
sti
or
add
mov
psrld
insb
add
insl
or
loopne
shlb
add
and
add
call
mov
mov
jmp
es
jmp
fimuls
loope
je
ret
sub
dec
cmc
clc
fldenv
dec
dec
orb
adc
or
insb
mov
push
dec
lret
sub
sbb
ljmp
dec
rcrb
push
jmp
push
sub
repnz
mov
or
xchg
or
mov
cli
shll
subl
pop
xchg
dec
add
mov
aam
fmuls
pop
ret
add
ret
cmpl
inc
cmc
mov
dec
dec
cltd
cmpsb
mov
mov
add
push
test
xchg
inc
data16
test
mov
sub
and
negb
popf
pushw
push
pop
dec
cmp
call
fadds
add
mov
xor
dec
pop
cmp
rcrl
in
cld
popa
and
xchg
sbb
pop
sbb
call
xchg
stos
cmp
test
arpl
je
pushf
aas
int
sti
adc
or
data16
xchg
sbb
je
cs
pop
dec
out
int3
subl
test
data16
mov
and
xchg
pop
jb
or
xchg
sbb
lcall
pop
mov
xchg
push
das
xor
lods
mov
xor
pop
and
or
xor
in
stc
pusha
testb
push
lret
and
cmc
mov
and
add
push
sbb
mov
fisubl
dec
cmp
sub
lock
lock
mov
push
mov
mov
xchg
ja
pushf
insb
inc
addr16
xor
xchg
adc
bnd
and
and
sbb
and
mov
jo
jp
lods
pop
mov
adc
jp
xchg
xchg
xchg
fcomip
add
pusha
add
cmc
sub
nop
in
and
push
inc
mov
into
imul
test
bndldx
inc
inc
pop
aas
xlat
stos
inc
mov
hlt
sub
testl
arpl
pop
adc
or
call
add
push
cmp
ljmp
pop
fs
pop
lret
test
adc
adc
jb
lret
leave
pop
dec
add
test
stos
xchg
mov
mov
jbe
push
movsb
sahf
adc
sahf
inc
inc
cmp
leave
stos
jge
orl
nop
xor
sbb
cwtl
loop
mov
jns
inc
xlat
out
push
sub
xor
out
push
lds
mov
jle
push
jne
addr16
scas
inc
push
adc
inc
add
mov
lea
sbb
leave
cwtl
rcrb
test
jp
dec
cwtl
push
mov
xchg
bound
and
in
movsl
mov
inc
sbbb
jp
sbb
in
jle
dec
jno
or
jb
movsb
loopne
add
stos
mov
inc
pop
add
push
dec
pop
enter
or
add
data16
xabort
jmp
sub
add
xor
repz
lcall
adcl
dec
pop
sbb
mov
fldenv
mov
lahf
icebp
popw
inc
jle
lods
gs
mov
add
insl
mov
leave
test
rcrb
push
push
dec
push
adc
shlb
cmc
ja
cmp
xor
insb
ret
imul
jnp
push
add
pusha
lds
dec
aam
sub
popa
push
or
dec
cmp
sbb
mov
test
mov
mov
fwait
mov
and
and
dec
jo
push
es
lcall
loop
mov
mov
aad
mov
mov
push
push
mov
movsb
pop
fimull
imul
repz
sbb
aad
cmc
sub
lret
mov
or
inc
fimull
pop
rclb
jo
outsl
ljmp
sti
sub
andb
mov
push
add
sub
cmc
sub
xchg
sbb
push
sahf
rorl
mov
mov
jno
or
add
cmp
pop
xchg
out
mov
add
ret
movsl
fwait
iret
mov
aas
mov
js
add
push
aam
inc
andb
cmp
rorb
pop
sub
test
inc
sub
push
sbb
jne
mov
roll
mov
nop
loopne
and
xchg
push
insl
dec
je
test
jl
adc
lock
inc
inc
stos
mov
and
popa
xchg
sbb
pop
jb
add
lahf
in
xchg
adc
dec
in
nop
dec
rolb
bound
xchg
mov
mov
je
mov
sub
in
popa
adc
shrb
movsb
mov
sbb
clc
sbb
xor
sub
fwait
test
or
adc
cmpsl
sbb
adc
popa
cmp
add
inc
aaa
inc
push
pushf
dec
dec
jecxz
or
bound
cmp
or
loopne
jecxz
xchg
out
add
adc
or
adc
ds
pop
add
loope
adc
pop
subb
in
and
pop
enter
out
push
mov
xlat
or
adc
roll
adc
mov
or
inc
movsb
cli
ret
xchg
in
mov
loop
cs
and
jecxz
push
lock
shlb
in
test
add
ss
out
popf
jl
dec
dec
and
or
bound
insl
pop
mov
mov
sbb
mov
add
pop
and
fildl
xchg
daa
insl
cmc
dec
and
cwtl
inc
mov
mov
cmp
test
pop
xchg
dec
and
and
xchg
inc
inc
mov
mov
lds
test
mov
and
mov
pop
push
adc
inc
mov
sbbl
add
mov
jno
stos
insb
in
fsubrl
cmp
push
fists
rcr
adc
je
dec
enter
imul
fwait
notb
or
or
das
int
ret
pop
in
push
mov
add
lcall
orl
ret
rcrb
mov
or
mov
lea
push
xchg
das
jmp
add
in
mov
dec
test
gs
push
movsb
ljmp
insl
push
mov
mov
push
shrl
mov
dec
mov
sub
mov
mov
push
fistpl
cs
repz
cwtl
push
out
ret
cmp
mov
repnz
dec
je
stc
cmp
stos
lds
popa
and
pop
les
pop
xchg
inc
xchg
rol
mov
jne
pop
rcr
xchg
shlb
mov
push
xchg
push
xor
sub
roll
sbb
icebp
and
and
lock
jo
dec
mov
xor
push
std
mov
leave
lcall
mov
adc
cwtl
adc
add
add
jmp
pop
rolb
repnz
movsb
test
or
adc
loopne
hlt
jo
mov
cmp
sub
sarl
pop
add
ret
push
and
dec
es
xorb
cli
mov
push
mov
imul
jnp
sbb
and
arpl
stc
mov
pop
mov
sbb
pop
sbb
inc
aas
mov
jne
xchg
shrl
add
cmp
and
aaa
in
bound
xchg
sbb
leave
jnp
mov
jne
daa
adc
cwtl
sti
jo
xchg
inc
xchg
cltd
push
sbb
cmp
push
ret
stos
pop
mov
cmp
sbb
dec
imul
xchg
lock
loopne
push
mov
loopne
push
data16
outsl
cmp
test
lds
shrb
and
clc
rcrl
sbb
xor
es
and
or
inc
sub
adc
lahf
cmpsb
xchg
pusha
xchg
mov
sbb
xor
push
inc
cmp
cmp
test
cmp
and
or
fisttps
call
and
push
pop
lcall
iret
jp
mov
inc
bound
repz
icebp
out
cld
testl
mov
out
rclb
in
cmc
insl
jbe
out
pop
int3
mov
or
mov
stos
xchg
enter
and
cld
jb
or
dec
push
jbe
popa
mov
add
repnz
jns
ret
imul
movsb
sbb
bound
bound
jg
aas
sub
xchg
xor
out
popa
add
add
or
lds
pop
test
rep
and
mov
jle
nop
xor
jge
sbb
rcll
inc
jb
lcall
jb
pop
jns
es
push
outsb
das
data16
sbbl
or
scas
adc
push
in
fcompl
and
pop
leave
addl
xchg
pop
xor
sub
into
cmpsl
pop
push
mov
push
jno
pushf
mov
adc
fsubl
sbb
inc
icebp
cmp
push
test
es
sub
adc
out
push
mov
and
push
loope
jns
shrb
rcrl
jl
sub
pop
filds
or
ljmp
daa
imul
fildl
push
push
cmc
mov
movsb
mov
jae,pt
lods
daa
push
subb
daa
pop
cmp
test
fdivrl
inc
mov
mov
aas
add
inc
push
call
pop
push
loopne
lret
add
mov
xchg
iret
inc
xchg
scas
aaa
pop
sbb
into
push
cld
and
cmp
inc
and
xor
filds
lea
mov
mov
xchg
sub
lea
mov
push
inc
xchg
pop
pusha
dec
add
fimuls
jg
sbb
xor
adc
adc
sub
inc
and
and
pcmpgtb
clc
jno
jecxz
loop
add
adc
add
mov
cmpl
sub
sbb
xchg
fwait
lods
xor
jge
cmp
sbb
pusha
mov
ds
jae
push
mov
sub
mov
or
les
mov
dec
inc
add
add
and
jmp
cmpsb
js
or
ret
arpl
cs
je
icebp
inc
push
dec
outsb
pop
fs
adc
jle
dec
and
imul
add
pusha
cmp
sahf
cmp
jle
mov
push
inc
and
xchg
sub
sbb
cwtl
mov
cmpl
and
jo
inc
xchg
int3
mov
mov
mov
pop
xor
dec
cwtl
ret
xchg
pusha
enter
mulb
adcb
lds
repnz
hlt
pusha
jmp
or
popf
fmuls
loop
jns
sbb
jg
push
push
fisubs
sbb
jb
jp
xchg
push
int
scas
jb
pop
or
mov
pop
add
imul
cld
test
and
fdivr
loopne
fadd
sbb
mov
or
sbb
insb
dec
jno
adc
icebp
jns
xor
pop
push
adc
dec
cmp
add
lret
cmp
sub
vmovaps
sub
sbb
sbb
pop
mov
scas
xorb
shrb
mov
add
stc
in
jnp
and
cli
mov
adc
dec
sub
data16
rol
push
scas
sbb
xor
push
addr16
pushf
data16
ret
add
daa
inc
jg
mov
fs
arpl
bsf
pushf
stos
test
into
js
jbe
js
and
or
loope
sahf
mov
push
xor
fildll
inc
pusha
jne
sub
sub
ss
test
pop
movb
loopne
mov
and
push
mov
and
cmc
ret
lds
in
push
into
ja
xor
loope
into
sbb
enter
movsl
adc
pop
mov
mov
cs
adc
adc
test
pop
dec
hlt
movsb
daa
cmp
or
sub
pop
sbb
dec
jne
test
dec
pop
sub
shlb
push
xchg
or
inc
testb
stc
icebp
in
push
cmp
movsb
inc
lret
nop
fiadds
out
andl
cmp
mov
in
jmp
addb
std
add
jp
cld
cmp
cmp
push
adc
stc
mov
mov
and
daa
add
imul
push
bound
bound
dec
adc
xchg
xchg
popa
or
xchg
hlt
jne
test
mov
xor
push
std
xor
xor
je
cli
inc
jo
sbb
fwait
jl
add
and
cmp
stos
gs
jp
js
push
xor
adc
lods
pop
jecxz
add
adc
sbb
popf
mov
pusha
jp
add
sbb
or
inc
popl
adc
xchg
stos
stc
push
mov
jge
adc
mov
incl
shll
ret
fs
xchg
jns
push
movsb
ss
push
fsubs
add
test
or
sbbb
jb
push
jp
in
ret
ret
xor
sub
jbe
nop
insb
sbb
push
cmpsl
loopne
scas
xlat
and
cmpb
int
push
repnz
dec
push
flds
jnp
sub
push
add
in
ds
in
push
or
mov
adc
push
insl
sarb
jno
iret
push
in
call
fwait
add
mov
shrb
inc
dec
mov
pusha
call
dec
mov
jb
loop
jne
in
sbb
les
repnz
mov
add
jle
loopne
sbb
hlt
ds
test
xchg
or
and
dec
ds
enter
movsb
or
add
adc
test
inc
rolb
add
stos
pusha
test
and
fwait
js
js
and
ss
cmp
rcll
jno
xchg
pushf
aam
insb
dec
in
lea
mov
inc
arpl
inc
jo
out
and
dec
cli
cmp
push
sbb
mov
in
jmp
leave
test
call
pushf
or
inc
es
fs
or
popa
pop
add
lods
ficomps
sub
mov
mov
shrb
sbb
lahf
sbb
mov
add
adc
addl
add
outsl
xchg
or
repnz
xchg
add
add
inc
stos
cmp
fs
cmp
loopne
mov
push
mov
in
inc
fsubrs
jbe
adc
andb
pusha
gs
imul
lret
ret
test
test
scas
cwtl
and
ss
cmp
xor
mov
repnz
cltd
cmc
cltd
jg
cmp
das
outsl
stos
fwait
add
stos
inc
push
inc
cwtl
inc
jg
sahf
push
inc
pop
push
sbb
repz
mov
insb
mov
sbb
pop
push
push
mov
es
adc
adcl
fadds
out
mov
mov
push
cmp
cwtl
ds
and
loop
popa
xor
ret
push
pusha
shrl
loope
push
dec
xchg
test
ljmp
mov
push
jb
cmp
mov
sub
pop
rcll
sub
pop
pop
ror
jnp
xchg
rcl
cmc
and
orl
pop
aaa
jns
sbb
clc
adc
pop
in
out
xchg
dec
push
xor
adc
add
pop
sahf
rolb
pop
cmp
hlt
sarl
add
rcll
lea
add
gs
jne
mov
pop
mov
cwtl
xchg
shll
inc
rol
daa
sbb
ret
pop
mov
orb
ljmp
in
jne
xor
lret
orb
inc
sbb
jae
or
mov
jmp
mov
sti
pusha
fs
daa
imul
into
dec
ss
mov
add
loope
mov
xor
xchg
rcrb
lret
push
adc
sub
in
sbb
push
ret
jns
in
or
mov
loop
insb
ret
je
jo
xor
shlb
and
adcl
or
or
lea
adcb
xchg
xor
mov
jne
mov
sbb
or
inc
sbb
mov
sub
cli
dec
fld
test
idivl
adcb
enter
int
mov
fmul
pop
adc
xor
mov
dec
mov
and
leave
movsl
jp
movsl
pusha
dec
jg
loope
and
test
ljmp
es
mov
or
and
push
enter
dec
push
add
andb
ret
mov
add
and
and
xor
inc
xor
repnz
sub
sub
cli
pusha
mov
or
orb
mov
xchg
je
insb
and
enter
call
add
xorl
inc
cmp
shll
inc
roll
mov
xor
mov
sub
push
ret
push
loopne
fldl
sub
not
pop
pop
imul
mov
push
daa
cmc
xchg
imul
repnz
shll
mov
xor
xor
shrl
arpl
mov
orl
shrb
mov
adc
lret
dec
inc
jl
sbb
cs
repnz
add
dec
sbb
push
into
pusha
leave
cltd
mov
or
in
pop
mov
xchg
jbe
jne
ret
pop
ja
pop
add
arpl
or
sub
js
mov
enter
loopne
push
dec
sbb
ds
or
mov
adc
xor
push
jne
and
jl
popa
iret
or
mov
testb
xor
sbb
decl
push
jo
and
mov
sbb
and
pop
mov
lods
sub
dec
pop
sti
mov
dec
test
xchg
push
repz
add
inc
cmp
mov
addr16
jae
outsb
repnz
sub
pop
inc
ficompl
cs
rcrb
cmp
and
add
inc
loop
mov
and
push
outsl
push
or
mov
dec
mov
and
das
loope
adc
insl
pushf
push
sub
jb
clc
jle
mov
dec
dec
mov
dec
and
pop
pop
push
data16
ds
adc
cmp
xor
adc
stos
popa
icebp
mov
and
dec
pop
sbb
xor
xor
rorb
jno
push
stc
scas
and
das
lret
mov
mov
push
dec
inc
xchg
inc
dec
sbb
lods
leave
testl
mov
sahf
ret
inc
repz
out
or
clc
sub
mov
cld
mov
mov
xor
hlt
or
dec
and
ss
adc
leave
int3
arpl
fs
xor
fstl
cmp
sbb
sahf
sub
sub
jg
aad
add
jns
ret
mov
insb
mov
push
icebp
inc
cltd
inc
mov
dec
sahf
iret
push
test
xor
jnp
mov
jns
jno
mov
outsl
aas
lret
inc
shlb
and
inc
jne
in
pop
add
mov
cmp
inc
sub
pop
pusha
ja
test
loopne
das
mov
hlt
mov
loopne
dec
leave
movb
arpl
add
cmp
push
idivb
bound
daa
stc
mov
pop
pop
add
dec
std
dec
add
xchg
jl
rolb
xor
adc
add
adc
cltd
inc
leave
sub
andb
dec
loop
dec
mov
nop
sahf
fisubs
orb
in
loope
dec
mov
dec
adc
pop
adc
inc
addb
arpl
and
sbb
add
cmp
dec
addr16
movsb
pop
nop
mov
popa
push
xchg
cmpsl
mov
inc
aad
sbb
dec
pop
cmp
or
mov
jno,pt
adc
xchg
mov
loope
adc
imul
scas
add
dec
lret
stos
cmp
es
sahf
sbb
pop
sbb
lcall
push
xlat
jle
sbb
outsl
mov
pop
xor
mov
or
pop
push
je
incb
add
xor
popf
nop
mov
aaa
mov
add
mov
clc
es
shll
or
test
ja
aaa
or
lret
pop
test
adc
dec
pop
aad
ret
loope
cmpsb
mov
enter
inc
add
in
adc
xor
ja
jo
xlat
js
jo
adc
dec
dec
inc
lret
into
pop
sbb
adc
sub
pushf
je
dec
cmp
out
and
adc
cmp
movsb
xchg
add
arpl
push
or
xchg
sbb
or
pop
lock
cmpsl
and
inc
jl
xchg
clc
cmpsb
imul
out
mov
adc
out
leave
repz
into
inc
js
jge
xlat
pop
stos
push
fsts
sbb
ret
jae
aad
rcll
and
hlt
fiadds
mov
jno
xchg
add
or
mov
pop
jno
cmp
pop
fsub
jecxz
ss
mov
test
sti
and
stos
add
dec
mov
jle
jns
or
pop
imul
lds
mov
subb
sarb
xlat
dec
hlt
push
sbb
lcall
mov
test
sub
divl
sub
sub
popa
rclb
ss
inc
and
mov
lods
into
push
push
ljmp
leave
sub
sub
lahf
sahf
mov
ja
loopne
and
shrb
movsb
movb
sub
or
clc
jp
dec
pop
loop
lcall
aad
loopne
ljmp
mov
push
xchg
test
cmc
dec
call
and
add
ret
stos
gs
adc
xor
and
inc
shl
and
insb
xchg
cmp
dec
xchg
lods
dec
cmp
rcl
mov
daa
or
fldl
add
lahf
dec
je
push
add
popf
rcl
leave
and
jno
js
mov
scas
fwait
in
add
mov
in
icebp
push
rolb
icebp
add
das
inc
dec
ss
test
inc
pop
bound
add
jl
add
ljmp
hlt
movsb
cwtl
and
seto
mov
cs
dec
ss
hlt
pop
xchg
push
or
scas
cmp
and
mov
jmp
int
mov
outsl
push
xchg
jecxz
mov
addr16
and
mov
mov
cmp
or
dec
adc
cmc
int
test
adc
push
negb
or
push
std
add
push
xor
fisttps
push
xchg
add
shlb
sub
icebp
fs
jnp
es
in
call
shll
repnz
loop
adc
addr16
add
push
call
add
hlt
adc
clc
loop
adc
mov
or
in
out
add
test
xchg
je
push
rorb
orl
popa
mov
push
lods
jbe
xchg
aam
add
lret
loop
pop
sub
cmp
jnp
bound
pop
leave
stc
adc
add
sbb
xchg
mov
gs
mov
inc
lods
xchg
pop
cmp
mov
ret
or
imul
xchg
pop
xor
orl
or
add
enter
cmp
cmp
mov
add
push
mov
inc
mov
fsubrs
cmp
test
jo
jl
add
ret
cmp
sbbl
pop
xchg
or
inc
jb
xchg
leave
dec
rcll
test
ret
stos
aaa
inc
dec
ljmp
pop
mulb
sbb
cmp
dec
mov
jb
rorl
sub
adc
out
mov
not
lahf
in
or
shlb
sub
xor
les
das
int
loopne
arpl
out
mov
jmp
push
sbb
jg
rolb
test
and
repz
ret
call
and
dec
ds
and
fidivrl
inc
popl
and
inc
xchg
and
push
push
ret
je
orb
mov
adc
pop
mov
jno
mov
xchg
or
addr16
stc
jmp
push
mov
or
and
push
inc
mov
push
pop
adc
xor
repnz
lods
jg
push
je
arpl
mov
jo
xlat
ljmp
xor
adc
push
push
add
push
lds
nop
insl
jge
ds
data16
sbb
xlat
xor
jle
in
push
loop
rorb
pop
or
add
cmpsl
lret
pop
inc
sub
addr16
cwtl
cwtl
ljmp
andl
sbb
js
mov
loope
push
outsb
sti
in
imul
mov
fdivrs
or
push
add
sbbl
int
and
jg
mov
popf
dec
jl
xor
das
add
mov
popa
xchg
xor
push
adc
push
addl
in
add
push
pop
xor
xchg
nop
lret
int3
notl
fisubs
daa
jecxz
scas
std
push
sbb
push
gs
push
int
sbb
and
cwtl
inc
les
pop
divb
add
inc
lds
ret
sbb
dec
and
es
and
or
dec
cwtl
adc
mov
jl
xor
sbb
fs
in
pop
adc
andl
lahf
lea
in
sti
or
add
xchg
shlb
into
jp
sbb
add
cmpl
cmp
xchg
mov
mov
or
icebp
dec
mov
rolb
repz
mov
out
inc
push
push
mov
cmp
movb
sbb
rcrl
cmp
sti
lds
mov
dec
call
cmp
lods
pop
add
stos
sub
popa
push
insb
das
stos
xorl
cmp
push
xchg
pop
dec
ror
lock
add
xor
testb
stos
xor
loop
addr16
xchg
mov
test
adc
mov
bnd
movsb
das
cwtl
push
pop
stc
ja
adc
push
xor
dec
scas
outsl
pop
addr16
cmp
xor
xchg
jmp
dec
cmpl
add
outsb
pusha
dec
dec
out
dec
inc
mov
add
pop
sub
push
cmp
ljmp
in
gs
and
enter
movsb
cmp
mov
push
jne
xchg
dec
xchg
rcll
push
jecxz
jnp
cmp
daa
mov
aad
adc
add
adc
cmpl
movsb
fstps
notl
sub
int3
call
dec
push
testl
jmp
leave
push
push
push
dec
fsubl
jge
mov
pop
in
ja
cmp
dec
mov
cmp
cmp
pop
or
jo
je
or
mov
mov
cmp
sub
leave
sbb
sbb
adc
pop
aad
pop
pop
add
pop
or
mov
or
jno
cmp
mov
imul
mov
or
and
lcall
adc
xlat
aas
cmpsl
push
xchg
xchg
xchg
jne
popa
adc
dec
lcall
inc
dec
mov
pop
jle
xchg
adcb
jl
imul
pop
ljmp
adc
aad
leave
xorb
or
xlat
test
xchg
imul
push
or
or
addl
popa
sbb
adc
rolb
popf
mov
jp
and
shrb
repz
orb
test
mov
gs
outsb
dec
push
xlat
or
sbb
fsubs
sbb
jge
popf
and
and
aam
popa
outsb
js
pusha
jmp
into
dec
cmp
mov
js
pop
dec
in
aaa
cmp
pop
dec
sub
mov
subl
push
enter
push
xor
int3
mov
adc
and
push
sarl
out
out
imul
test
js
or
push
ss
cmp
imul
add
jecxz
cmp
push
cmpsb
dec
pop
or
xchg
es
pop
out
je
into
stos
mov
cmpsb
add
insl
adc
and
jmp
add
sti
bound
sub
lcall
or
arpl
mov
jbe
in
cltd
xor
xchg
outsb
sahf
xor
test
lret
push
fcoms
dec
push
push
mov
jl
inc
scas
pusha
or
loop
js
ret
loope
test
mov
inc
jle
push
mov
and
in
pop
dec
xor
je
pop
clc
xchg
xor
leave
cli
cmc
inc
pop
push
pop
mov
in
add
or
add
cmpb
adc
xor
add
mov
fldl
scas
pop
adc
mov
mov
pop
push
movsb
ja
movsb
or
imul
mov
lcall
mov
ljmp
ror
inc
xchg
inc
int3
xchg
dec
fwait
in
es
dec
out
mov
movsb
inc
aas
pop
sub
cs
stos
mov
pop
pop
daa
xchg
mov
popa
xchg
or
push
out
loop
mov
or
xor
jns
mov
inc
into
cwtl
fs
xchg
movsl
pop
fisubrs
adc
sub
ror
push
xchg
gs
xorl
popa
mov
mov
mov
mov
out
inc
xor
les
ret
sub
lcall
loopne
xchg
adc
dec
and
jge
movsl
sbb
mov
push
jmp
push
mov
addb
into
xlat
insl
jmp
mov
xchg
xor
push
pop
adc
js
xor
mov
js
push
addl
rclb
clc
add
xor
sub
das
lods
inc
sbbb
popa
sbb
adc
sbb
lahf
mov
shll
enter
and
cltd
aas
cmp
mov
sub
dec
in
jbe
cwtl
movsb
or
outsb
shr
mov
es
add
or
push
push
xchg
test
xchg
sbb
sar
add
pop
xchg
in
and
lds
mov
cmpsl
cs
out
inc
pop
divb
mov
or
and
or
sub
movsb
adc
mov
sub
or
cmp
mov
mov
scas
mov
or
shl
and
loop
mov
pop
nopl
mov
jge
in
into
mov
out
lea
stos
leave
scas
cwtl
scas
xchg
lea
lcall
dec
andb
sub
add
cmp
adc
xchg
clc
add
add
or
xchg
inc
lea
vcvtsd2si
outsl
daa
es
out
or
adc
xchg
push
inc
mull
hlt
ss
jge
addr16
cmp
inc
inc
inc
xchg
dec
inc
xor
add
pop
dec
mov
inc
and
cmp
push
out
fstpt
push
xor
ficompl
xchg
faddl
cmp
and
pop
add
movsb
xchg
into
inc
rcrb
sbb
xlat
shl
dec
repnz
sbb
pop
add
cmpsb
push
fldz
sbb
enter
fwait
cmp
mov
add
rorb
loopne
mov
jno,pt
orl
push
mov
or
sahf
testl
jae
ljmp
aam
repz
es
jae
or
mov
dec
stos
loopne
cwtl
mov
and
test
add
cmp
cs
out
and
jp
mov
sahf
jmp
adc
adc
jp
mov
inc
stos
pop
loopne
imul
push
jno
inc
mov
jnp
mov
rol
test
sbbl
mov
mov
inc
dec
pop
mov
inc
cmpsb
cli
loopne
and
jb
xor
push
and
lret
dec
jl
xchg
aaa
and
or
push
mov
scas
and
int3
pop
roll
xor
dec
cs
cmp
mov
mov
cmc
inc
mov
pop
mov
rcrl
cmp
or
sub
mov
xchg
shlb
movsb
xor
and
pushf
add
mov
push
mov
mov
xor
adc
or
push
scas
mov
mov
movsl
pop
push
in
das
cs
mov
fldcw
sbb
cmpsl
insb
mov
hlt
adcl
or
dec
inc
repz
lahf
mov
es
dec
push
jae
sub
data16
es
aam
call
mov
fs
mov
mov
nop
leave
push
pop
dec
sbb
push
jb
dec
or
and
jmp
std
mov
mov
lds
cmpsb
mov
cli
loopne
push
inc
xor
or
inc
js
add
sahf
pop
lret
add
fwait
sub
mov
mov
push
cwtl
in
rol
roll
cmp
add
adc
jmp
fwait
jle
mov
in
dec
sub
stc
test
inc
sub
mov
and
add
js
clc
cmp
adc
or
test
push
push
js
jne
pop
pop
clc
mov
add
mov
enter
mov
or
pop
repnz
cmpsb
cwtl
cmp
ficoms
cmc
xchg
fidivrs
add
es
mov
sahf
imul
loop
sub
push
mov
push
sbb
jbe
mov
test
dec
pop
push
cmp
push
jg
push
addr16
fildll
push
sub
aam
jecxz
add
pop
xor
add
mov
jo
cmc
jecxz
sbb
xor
fidivs
mov
mov
dec
addr16
xchg
jp
xor
lods
sub
or
repz
jecxz
xor
xor
adc
lds
pop
inc
add
push
and
cltd
add
subb
xor
out
mov
sub
xor
movb
cli
sbb
jns
sub
or
jbe
je
inc
and
add
and
or
dec
sbb
ja
pop
or
in
xchg
pop
lock
xchg
inc
dec
mov
mov
stos
inc
scas
movsb
inc
mov
mov
orl
jno
loopne
outsl
pop
in
arpl
or
jno
cwtl
pusha
push
cmp
inc
adc
clc
sbb
rcll
jns
mov
mov
inc
push
push
movd
ljmp
imul
adc
pop
arpl
clc
sbbl
sub
sbb
les
ret
dec
dec
adc
sub
iret
jg
cmp
mov
mov
add
outsb
dec
mov
xor
arpl
add
dec
pop
mov
mov
or
push
mov
cld
push
jbe
es
testl
dec
addr16
add
lods
mov
pop
negb
les
mov
pop
xchg
addb
jbe
mov
mov
dec
jbe
clc
pop
sub
xchg
or
std
shrb
xchg
dec
xor
es
sbb
dec
lods
hlt
sbb
add
jae
cmp
ljmp
ret
cmpl
xchg
adc
adc
repz
add
mov
outsb
sbb
das
jo
aas
lds
mov
fists
je
mov
notl
dec
sarb
or
cmc
or
sbb
or
rcrb
mov
dec
aaa
jmp
in
mov
inc
add
and
or
in
test
dec
push
shlb
call
pusha
aaa
popa
mov
sbb
std
add
push
mov
fidivrs
or
cmpsl
clc
adc
push
sbb
and
pop
xchg
xchg
rorb
jne
xchg
mov
push
mov
mov
jmp
jp
and
push
cmp
mov
mov
nop
sbb
pop
out
inc
mov
add
icebp
xchg
in
pop
xchg
pop
pusha
insl
shlb
addl
mov
pop
lcall
adc
gs
mov
pop
and
inc
ljmp
push
add
sbb
dec
subb
movsb
inc
pop
addb
stos
inc
sahf
mov
mov
sahf
ret
loop
sbb
shlb
movsb
jmp
ds
push
add
and
movsb
or
adcl
cmp
les
cmp
stc
push
dec
nop
and
lods
and
pop
lock
insb
repz
push
addb
mov
imul
cmp
test
jg
andb
cli
dec
push
push
dec
sub
and
pop
or
test
test
mov
fnstenv
and
add
push
push
frstor
jno
lahf
gs
sbb
dec
loop
pusha
jo
and
rorl
sbb
cmp
shl
inc
sub
jp
jbe
xor
movsl
es
out
je
xchg
add
and
sbb
fadds
xchg
or
out
push
and
inc
jnp
adc
xor
je
dec
xchg
mov
and
or
jnp
push
sbb
mov
xor
pop
iret
sahf
inc
pop
and
and
mov
mov
mov
cmpsl
in
pop
movsb
xor
mov
jge
leave
fistl
repnz
not
test
loopne
sbbl
orb
add
or
cmp
repnz
in
cmpsl
xchg
jge
sbb
xchg
sbb
inc
push
push
cmp
jns
sbb
push
add
xor
shl
inc
inc
sbb
andl
movups
mov
cmpsl
dec
movsb
cli
mov
adc
jno
popa
and
inc
out
lret
xor
faddl
add
add
push
and
aaa
jecxz
xchg
aam
mov
or
mov
je
push
lret
lds
dec
sbb
addr16
mov
cmpl
mov
pop
pop
nop
inc
bound
lcall
sbb
aam
or
inc
int3
cli
mov
sbb
loop
dec
lahf
adc
sahf
sub
jns
push
fsts
add
lods
pop
test
addl
dec
lock
aas
adc
dec
jmp
inc
sub
movsl
and
pop
enter
scas
add
nop
mov
enter
dec
jge
jnp
das
jecxz
or
aam
fstp
fs
fdivs
inc
and
paddd
or
aaa
mov
cmpsb
call
cmp
push
adcb
dec
xchg
jne
subb
cmp
jbe
movsl
lods
pop
dec
or
pop
iret
repz
xchg
pop
mov
daa
jo
or
loop
cmp
popa
dec
mov
xchg
dec
push
lahf
hlt
xor
rcr
js
fidivrl
aam
fsts
pop
or
xorb
xor
loopne
int
inc
or
cmp
mov
pop
mov
adc
icebp
dec
cltd
xor
or
push
or
mov
bound
cmp
call
fs
sub
mov
pusha
lods
popa
xchg
outsb
or
push
adc
je
dec
arpl
cld
bound
add
movl
mov
fs
pushf
addr16
pop
push
rorl
or
pop
in
cmc
mov
dec
out
add
lea
nop
xor
dec
rolb
adcb
jae
mov
jl
cmp
inc
jg
or
pop
xchg
pushf
mov
sbb
ficomps
xadd
inc
or
mov
xchg
adc
aam
insb
or
imul
cli
adc
shlb
je
or
cmpl
test
rclb
jno
out
or
push
pop
push
push
or
rolb
xorb
xor
loope
jne
aad
lahf
mov
movsl
xchg
adc
adc
imul
mov
inc
aam
jmp
pop
and
add
or
mov
mov
sbb
jl
pop
xchg
inc
xchg
gs
ja
jmp
dec
outsb
or
lods
xor
les
push
jo
cmp
aaa
xor
jge
addr16
sbb
testb
mov
je
leave
int3
andb
sbb
repz
jmp
out
dec
repnz
xor
cmp
mov
xchg
mov
js
mov
jne
lret
adcl
push
push
pushf
xor
mov
test
lahf
sbb
add
dec
mov
cs
loope
sti
lds
test
sar
push
xchg
mov
pop
xchg
cmc
pop
mov
and
mov
test
push
pop
pusha
imul
fwait
test
test
jge
xor
test
inc
add
scas
and
adcl
punpcklbw
les
push
cmp
lahf
dec
jae
pop
add
inc
arpl
mov
cmp
or
lcall
pusha
xchg
jo
mov
pop
subb
sub
jge
cmp
jne
xor
repz
add
push
cmp
in
sub
add
xorb
sub
sbb
dec
jecxz
mov
push
cmpsl
xor
sbb
add
jl
fcompl
pop
xchg
rol
and
stc
cmp
xor
mov
mov
xchg
cmp
adc
jecxz
repz
fs
repnz
inc
iret
dec
jo
rcl
xor
add
repnz
aad
push
push
xor
push
adc
enter
add
mov
mov
push
pop
scas
sbb
aaa
dec
icebp
mov
jp
xor
pusha
mov
add
packsswb
movsb
in
dec
jo
add
xchg
mov
sahf
pop
loope
lret
pop
xor
and
sbb
test
dec
mov
shlb
push
xchg
out
lcall
outsl
lock
sbbl
add
pop
shlb
pop
cmp
push
and
sar
mov
inc
push
aam
or
fnstcw
fisttps
loope
rcrb
or
and
xor
or
in
xchg
daa
or
jecxz
pop
jg
hlt
push
sbb
push
dec
inc
xchg
cmp
push
mov
mov
fimull
push
dec
pusha
insl
arpl
push
inc
pusha
xor
iret
out
mov
loop
cs
test
jl
ret
mov
or
pusha
movl
nopl
repnz
add
dec
pop
xchg
sbb
xor
jo
and
add
lret
cmp
into
mov
lods
fsubrl
sbb
xor
cmp
and
push
add
jmp
addr16
movsb
arpl
xor
and
es
sbb
mov
out
mov
xchg
rclb
mov
cmp
stc
notb
lcall
cwtl
mov
pop
lds
dec
push
inc
js
sbb
or
into
movsb
sahf
adc
arpl
add
imul
mov
adc
mov
test
or
mov
js
adc
icebp
in
stc
shlb
xchg
aad
test
into
mov
xor
popa
mov
aad
out
mov
test
mov
inc
cmp
nop
in
push
addl
mov
pusha
or
cmp
cmp
aad
fistpl
mov
cld
aas
xchg
fdivl
sbb
jne
sub
sub
insl
xor
popa
rorb
jbe
xor
xor
addr16
pop
aam
add
in
add
js
push
mov
lret
adc
sahf
dec
dec
in
pop
mov
and
jmp
mov
sbb
scas
out
xor
push
push
adc
fisttps
dec
ret
aam
or
ret
addr16
or
jns
mov
and
cli
clc
xor
cld
jge
rol
inc
loop
loop
cmpsb
xchg
cmp
pushf
mov
test
call
popa
push
pop
mov
cwtl
scas
mov
adc
push
mov
out
aaa
pop
je
inc
cmp
and
and
add
lds
movsb
loope
out
fcom
sub
adc
cmp
jecxz
jnp
mov
and
fsubrs
fbld
mov
mov
cmpsb
inc
and
ret
adc
add
push
dec
mov
decb
imulb
lods
dec
pop
movsb
xchg
push
in
dec
inc
xor
ret
xor
movsb
dec
stos
mov
adc
jmp
or
aaa
or
orl
dec
mov
jne
rcr
push
aam
mov
sahf
pop
inc
pushf
addr16
mov
orb
jp
pop
cmpsb
push
inc
out
cmp
mov
mov
movsb
adc
push
je
test
fimuls
and
in
insl
in
adcl
and
loopne
sbbb
lods
imul
adc
icebp
sbb
aam
xchg
and
int
test
and
jbe
test
dec
sub
lods
cmp
and
mov
gs
mov
mov
add
loopne
xchg
and
add
movsb
inc
add
rclb
or
out
add
and
ret
adc
addr16
faddp
int
pop
sti
xchg
adcl
jnp
xchg
adc
cli
xchg
cwtl
sub
xchg
hlt
xchg
mov
adc
push
pop
push
jae
call
roll
jb
mov
jg
push
sbbb
data16
xchg
pop
inc
in
adc
cmp
mov
movsb
out
cmp
fs
xor
bound
adcb
jbe
jmp
push
in
ror
push
jecxz
cmp
faddp
add
add
data16
inc
xchg
imul
sub
je
add
and
adc
cltd
test
mov
fstl
mov
push
or
popa
mov
mov
dec
cmpsl
xchg
mov
sbb
and
movsl
push
inc
aaa
sar
sub
push
sub
mov
push
mov
loopne
popa
lock
cmpsl
imul
shll
fimuls
xchg
push
cmpsl
cmc
pop
cmp
nop
sub
dec
cwtl
jnp
inc
sbb
stc
aad
incb
iret
jae
sbbl
or
pop
mov
mov
adc
nop
sbb
mov
shlb
out
adc
sti
inc
and
cmp
push
dec
dec
enter
push
xor
jge
xchg
xor
xorl
ss
xor
or
js
jbe
add
inc
mov
mov
xchg
cltd
mov
cs
xorb
stos
lock
sbb
mov
or
push
xchg
je
into
dec
shr
and
ret
mov
push
aas
daa
mov
sbb
loopne
add
repnz
jo
je
pushf
mov
sub
inc
rorb
shll
push
and
fs
mov
std
out
xchg
rcrb
mov
aad
sub
imul
jmp
mov
orb
push
ret
mov
xchg
inc
dec
js
dec
aam
hlt
dec
xchg
add
add
ror
out
xor
add
insl
push
add
xor
in
lea
icebp
popa
pop
sbb
add
cmp
mul
inc
addr16
push
out
inc
adc
pop
xor
dec
test
into
es
clc
adcl
push
xor
outsb
inc
das
and
in
xchg
adc
lret
into
jp
sub
and
mov
sub
sbb
loopne
ljmp
outsl
insb
and
scas
inc
subl
jecxz
mov
add
icebp
mov
xchg
add
xchg
dec
and
arpl
imul
fidivrl
in
decl
dec
dec
adc
adc
or
pusha
es
cli
sub
lock
pop
ret
enter
lock
cmp
xlat
mov
mov
iret
add
mov
mov
fwait
add
mov
xchg
loopne
adc
loope
cltd
jne
adc
sbb
push
dec
xor
aas
insb
adc
rorb
mov
pop
inc
cmp
dec
jmp
mov
adc
and
sub
adc
adc
sub
js
push
aad
insb
add
dec
xor
ret
sbb
sbb
orb
int3
dec
cmp
jbe
pop
adc
and
inc
dec
dec
lret
test
xor
xchg
ds
pop
add
je
pop
adc
test
pop
lahf
fdivrs
stc
or
or
pop
or
sub
rolb
in
out
push
loop
outsb
mulb
insl
mov
add
push
faddl
ret
inc
add
lods
fldenv
or
sub
push
push
mov
add
push
xchg
in
and
xchg
into
cmpsb
or
lahf
xchg
into
jbe
add
xor
leave
or
leave
loopne
lret
push
les
lcall
jb
je
jg
cmp
xor
pop
je
fisttpl
out
ficoms
mov
sbb
push
adc
xchg
dec
sbb
ja
mov
bound
cli
aas
nop
scas
mov
imulb
andl
int
or
or
xor
sbb
ret
mov
inc
testl
rolb
stc
je
mov
push
hlt
inc
cmpsl
xchg
inc
shl
ja
adc
aaa
or
dec
enter
out
lods
rorb
jns
or
leave
ljmp
mov
into
jle
mov
mov
push
sbb
jmp
lock
dec
xchg
mov
test
cmp
jns
mov
xchg
pop
lea
sarl
cwtl
cmp
sbb
aad
xchg
xchg
jl
mov
or
xchg
jp
rorb
jge
insb
inc
add
or
push
pusha
inc
shrb
mov
pop
fucomi
popa
sbbl
pop
div
xor
cmp
or
adc
fldl
call
into
adc
outsb
nop
jle
jmp
inc
repz
pop
push
addr16
adc
cmc
adc
stc
jmp
push
sbb
xor
and
leave
popfw
sbb
nop
jbe
or
cmp
cmc
add
into
stos
inc
sub
mov
sub
adc
pop
loop
and
push
movsb
push
pop
lahf
jb
mov
arpl
in
fnstcw
xchg
xchg
or
pop
inc
icebp
push
out
std
push
bound
add
push
inc
mov
xchg
test
sti
or
test
aas
jp
andb
insl
adc
stos
cwtl
inc
movsl
aam
loope
lcall
mov
xor
out
dec
sub
xor
bound
int
cmp
in
pop
adc
or
pop
add
shll
add
inc
popa
addr16
cmp
jl
push
push
push
xor
shlb
iret
loopne
daa
js
movsl
fwait
add
or
dec
inc
pushf
or
daa
sbb
inc
andb
xchg
push
adc
jne
xor
ds
loopne
add
adc
cmp
add
mov
lock
add
pusha
pop
inc
sbb
cmp
push
in
leave
xchg
mov
xor
sbb
lahf
cmpsb
adc
cmpsb
sbb
leave
adc
sbb
or
lds
add
cmp
adc
adc
test
sbb
mov
popa
add
xchg
cmpb
call
and
sbb
enter
pop
mov
mov
popf
std
into
popf
lods
into
xchg
maxps
sbb
mov
dec
cmp
mov
jo
lock
xlat
cmp
sarb
stos
adc
mov
xor
pop
sbb
sbb
xchg
sub
mov
adc
sarb
nop
loopne
cwtl
jg
and
dec
cmc
dec
aaa
or
xchg
jbe
xchg
call
pop
repz
sahf
push
lods
sahf
push
mov
mov
lcall
sbb
in
ds
pop
inc
mov
mov
test
cmp
ds
adc
ljmp
and
inc
sahf
pushf
jo
inc
mov
mov
and
sub
mov
pop
hlt
outsb
arpl
sbb
jmp
xor
or
popa
daa
add
mov
or
sti
lea
cmp
and
adc
loopne
adc
adc
dec
jb
add
test
mov
xor
orl
xchg
pop
repz
es
push
cli
and
iret
jbe
addr16
scas
jg
das
pop
mov
and
mov
mov
cmp
jecxz
or
sbb
scas
lcall
jg
lds
xchg
or
mov
add
pop
daa
cmp
adc
adc
xchg
xchg
mov
dec
call
xabort
dec
clc
cmovs
popa
je
and
nopl
sub
inc
dec
or
iret
movb
jae
stc
dec
inc
sbb
lds
movsb
add
cmpsl
jo,pn
xchg
addr16
cwtl
dec
sarb
scas
ret
lods
and
dec
inc
push
mov
cld
lcall
cmp
fisubl
add
in
jne
push
lcall
in
shlb
orps
xchg
push
or
dec
in
clc
cmp
cmc
mov
xchg
cmpsb
jne
stos
push
sbb
mov
mov
sub
fwait
cwtl
mov
enter
push
enter
sbb
mov
mov
xor
dec
xchg
dec
fcmovbe
sbb
adc
adc
cmpl
stos
imul
pop
sbb
dec
pushf
rorb
cmp
inc
mov
repz
cli
sbb
mov
push
xorb
jne
dec
out
popf
xor
repz
cmpsb
clc
push
jae
xchg
adc
loopne
icebp
cld
add
scas
js
fcompl
push
mov
push
sub
in
add
add
xchg
out
dec
int
adcl
add
fadd
jns
enter
mov
xchg
xor
dec
mov
jae
ja
add
sbb
jle
lock
adc
movsb
jnp
gs
adc
sbb
and
adc
mov
mov
sub
or
mov
dec
mov
xchg
imull
fisttpl
or
lcall
jns
adc
and
or
or
leave
loop
and
nop
in
rclb
daa
sbb
cld
mov
sbb
mov
pop
loop
inc
and
sbb
cmp
xor
inc
xor
cmp
jmp
loope
gs
push
stos
xchg
out
dec
hlt
insb
add
mov
cmp
or
mov
fldl2t
sbb
popa
pop
dec
ds
cmp
imul
insl
out
lret
mov
loope
inc
cmp
mov
std
addb
lock
pop
xor
push
pop
sbb
subl
mov
es
xor
mov
cmp
mov
adc
inc
pusha
and
out
mov
arpl
sub
adc
ds
in
mov
dec
xchg
pop
cs
adc
rcrb
sbb
inc
test
dec
in
cld
xlat
sahf
cmp
dec
and
fstps
and
pop
mov
mov
jbe
out
rolb
mov
dec
jbe
dec
xchg
sbbb
push
mov
mov
iret
jae
dec
cli
pop
or
call
fwait
cwtl
popf
aam
call
mov
push
movups
movsl
push
ror
roll
dec
inc
pushf
gs
sub
call
mov
push
call
add
mov
lret
into
sbbb
scas
loopne
imulb
dec
repnz
jge
xor
ficomps
es
or
call
mov
fnstenv
mov
sub
xor
outsl
inc
test
arpl
sub
sbb
mov
jb
inc
sbb
push
popf
addr16
sub
popa
das
std
adc
pop
xchg
arpl
add
and
loope
xchg
adc
push
enter
lock
sbb
dec
and
xchg
xchg
inc
xor
pop
nop
psrad
sub
clc
adc
xor
dec
loope
add
shll
sbb
dec
cmpsb
dec
repz
jb
mov
pop
and
mov
adc
jns
sbb
dec
jno
xor
or
mov
aaa
jp
sbb
add
sbb
cld
call
dec
mov
mov
cmc
sbb
or
movsl
xchg
gs
rolb
or
sbb
movsb
cmp
rcll
push
jns
add
sti
dec
mov
stc
call
cmp
and
fadds
sub
testl
cmpsb
and
movsb
dec
jmp
mov
sub
inc
or
push
insl
xor
xor
clc
in
xchg
repnz
mov
mov
cmpsb
fs
pop
dec
push
ds
or
add
sahf
jne
lret
psubsb
leave
sti
mov
les
popf
jae
jnp
adc
test
dec
lock
cmp
xor
push
lock
lods
in
mov
adc
fimull
push
mov
cmp
adc
jnp
sub
fidivs
stc
add
pop
sub
or
lods
imul
enter
ret
ss
test
and
inc
pop
inc
mov
mov
or
xchg
xchg
out
xor
jecxz
je,pt
xchg
stc
or
ffree
sbb
hlt
push
adc
sahf
xchg
adc
cmpsb
aaa
cmc
ret
lcall
mov
daa
jnp
jecxz
ret
add
bound
sbb
add
lods
pop
fildl
pop
std
sti
add
invd
les
movq
add
dec
mov
or
call
dec
xor
mov
in
fisubrl
dec
adc
std
out
movsb
roll
xor
int3
ds
idiv
pop
or
daa
pop
sbb
push
pop
add
and
mov
outsb
or
loop
add
adc
dec
and
adc
arpl
jne
sbbl
popf
rol
addb
cwtl
xor
mov
pop
lock
push
adc
ret
add
mov
push
add
mov
sub
push
std
arpl
sbb
mov
in
stos
xchg
int
faddl
fsub
shll
cmp
mov
test
xchg
xchg
or
add
aaa
or
lock
cmp
sbb
pop
in
xchg
adc
test
jp
push
xchg
negl
es
ret
add
lret
sub
scas
jne
cmpsb
xor
ljmp
push
xchg
aas
and
dec
pop
in
addr16
jb
add
aam
mov
jge
pop
loope
stos
aad
into
loop
mov
push
out
inc
ret
call
fistps
fisubrs
shll
push
bnd
pop
inc
addr16
cltd
adcl
lods
sbb
in
pop
aas
mov
and
cmpl
push
mov
xor
xchg
jge
add
jg
push
sub
add
cwtl
and
or
add
mov
pop
pop
xchg
or
nop
jmp
push
shlb
mov
xor
pop
and
loopne
push
mov
mov
xchg
faddl
es
sahf
cmpsl
xchg
push
xorb
lahf
mov
push
sub
cld
clc
movsl
test
jns
lods
adc
or
mov
ret
aad
or
jns
and
out
dec
adc
mov
xorb
or
test
rol
outsb
lods
popf
jne
hlt
xor
push
movsb
ja
lahf
xor
pop
inc
xchg
push
or
cmp
pop
xor
addb
mov
pop
sbb
pop
push
inc
int3
out
dec
jge
testb
mov
adcl
xchg
sub
ss
and
dec
andl
xlat
insb
movl
out
std
sub
insb
xor
fstl
mov
mov
pop
inc
ret
and
and
push
mov
in
arpl
adc
adcl
out
push
or
push
add
jne
dec
ljmp
jl
jb
push
xchg
gs
push
stc
dec
nop
jg
push
fcoml
jp
in
std
mov
sbb
shrb
sbb
arpl
and
sub
stos
pcmpgtd
rolb
inc
inc
outsl
rcll
arpl
add
dec
stc
adc
dec
mov
gs
shrb
xlat
jns
push
mov
imul
outsb
lahf
pop
jb
add
cwtl
jbe
test
sbb
dec
push
pop
mov
inc
pop
ljmp
in
lea
cmpsl
les
loopne
aaa
inc
inc
cmp
or
mov
pusha
nop
fwait
out
xor
fbld
idivl
sbb
aas
das
mov
xchg
outsl
cltd
mov
or
sahf
dec
pop
inc
mov
loopne
mov
out
mov
dec
pop
adcb
xor
add
movsb
sbb
jns
inc
sub
push
mov
cmp
stos
gs
sub
aaa
jnp
enter
sbb
lds
mov
push
bound
xchg
add
dec
push
mov
inc
testl
xor
lret
ljmp
dec
add
inc
daa
clc
dec
jnp
mov
cld
in
cli
or
mov
shlb
jmp
and
and
shlb
sub
test
addb
mov
sbb
aam
jp
push
mov
and
xchg
rclb
push
sub
xor
jl
mov
cmpsl
movsb
dec
clc
inc
and
push
xchg
js
add
aad
add
push
xchg
push
dec
lret
fcoms
add
push
pop
add
push
or
jo
fwait
cmpsb
dec
rorb
mov
shll
rorb
loopne
iret
clc
cmp
and
in
inc
out
bound
fidivs
mov
loope
loopne
push
fnsave
dec
sti
pusha
inc
xlat
rep
add
in
push
movl
jno
sub
add
xlat
cli
xor
les
push
mov
dec
loopne
mov
imul
pop
ja
movl
cs
stos
mov
sbb
cs
push
sbb
adc
call
push
fsts
mov
pop
cmc
xchg
sti
adc
dec
out
and
clc
insb
inc
add
hlt
cmp
enter
mulb
dec
xor
ret
add
or
mov
cwtl
inc
in
push
repnz
imul
sub
cmp
cmp
cmp
loope
or
arpl
mov
insb
aaa
das
rolb
add
sbb
sub
out
fcomi
imul
mov
and
xor
or
cmp
pop
paddusw
pusha
mov
in
leave
ficompl
xchg
cwtl
sbb
mov
sbb
stc
cli
shlb
js
bound
xorb
mov
arpl
nop
test
inc
xlat
rcr
jo
xor
or
sbb
jo
insb
xor
psubw
and
xor
rcrl
addr16
push
push
flds
sarb
jecxz
in
loop
pop
dec
inc
sub
mov
mov
xchg
jle
mov
jae
jecxz
lock
mov
test
popf
jno
aam
repnz
mov
mov
mov
cld
imul
xchg
outsb
or
dec
mov
mov
jb
shll
adc
pop
pop
mov
imul
jb
movsb
push
icebp
adc
ficompl
insb
dec
mov
roll
aad
jbe
scas
and
xchg
dec
pop
xor
rcrb
xchg
lods
sub
mov
lock
movsb
imul
add
jae
xor
loopne
imul
mov
sbb
mov
or
lock
xor
add
inc
testl
stos
cmpsb
xor
test
leave
rcrl
xor
xor
lret
cmpl
push
xor
jns
out
mov
stc
mov
inc
out
adc
jp
cmovbe
ret
cmp
xchg
inc
dec
dec
push
jae
cld
js
arpl
cmp
pop
lea
lock
dec
out
cmp
cmp
inc
mov
aad
insb
shrb
and
loopne
sub
sub
add
dec
pop
mov
arpl
popa
xchg
je
jmp
adc
cmp
cli
jb
mov
sbb
cmpsb
flds
add
sbb
js
ss
mov
loope
jae
popf
in
fisubl
movsb
ret
dec
out
inc
psrld
les
push
imul
mov
outsb
rorb
je
sarl
fidivrs
cmp
add
xchg
sbb
cmp
pmulhw
test
dec
adc
fstpl
sbb
rcrl
int3
fdivrs
xchg
add
lahf
loop
xchg
push
add
jo
shld
rol
call
xchg
scas
sbb
xor
mov
nop
add
out
mov
xchg
data16
jl
fldenv
sbb
dec
mov
movsb
jo
adc
or
add
add
xchg
cmp
xor
jae
lret
dec
pop
mov
xor
call
test
or
dec
xchg
subb
add
mov
loop
test
xor
cmp
jp
mov
mov
add
lret
xchg
pop
dec
cmp
movsb
ret
ds
cmpb
sub
push
and
adc
clc
inc
enter
jb
push
sbbb
push
icebp
insb
outsl
and
xchg
insl
inc
mov
mov
popf
or
insb
movsl
and
pusha
ret
out
adc
cmp
jns
inc
dec
and
pop
mov
cmpb
inc
pushf
aam
inc
decb
jb
roll
sarb
push
out
pop
mulb
pushf
enter
add
or
xor
leave
push
sbb
test
pop
movsb
pushf
pop
mov
gs
mov
dec
loop
je
sbb
outsb
loope
aaa
dec
pusha
idivb
repz
fstps
ret
les
lock
std
adc
mov
sbb
push
dec
out
flds
and
test
or
std
aam
ret
pop
test
sbb
mov
dec
loop
push
mov
cmp
pop
ret
test
and
mov
pop
inc
adc
mov
and
jle
mov
xchg
leave
cmpsl
cltd
rorb
cltd
popa
push
xor
ret
stos
dec
mov
sbb
scas
xchg
std
clc
arpl
mov
pop
into
add
mov
ret
mov
push
pushf
aad
fwait
lret
les
shlb
cmp
sti
shl
shlb
fcoml
aaa
mov
xchg
sarl
popa
outsb
aaa
ret
push
xor
adc
fs
mov
outsb
test
push
pop
jb
ds
and
cmp
fcmovnb
sub
sbb
push
je
shrb
int
shl
rclb
arpl
or
sub
insl
sub
daa
sbb
ja
mov
add
or
mov
cmp
jle
insb
mov
fwait
rcl
out
bound
in
sahf
mov
jle
push
gs
popa
xor
sbb
push
movsl
adc
or
psubsb
and
sbb
xor
addr16
mov
sbb
call
xchg
shlb
incl
into
pop
push
movsb
loop
arpl
jns
stc
imul
aad
add
adc
xor
xor
adc
jb
pusha
nop
xchg
cmp
gs
aam
rorb
xor
sub
and
push
push
dec
sahf
mov
mov
cmp
in
add
adc
or
call
xlat
shlb
mov
push
lcall
mov
push
pop
sub
stos
xor
jb
sub
shll
jle
out
mov
xor
dec
jae
imul
leave
xor
ss
outsl
sbb
add
xchg
gs
mov
cmp
out
cmp
cmp
loope
xchg
pop
cmp
ret
xor
or
enter
jo
jmp
dec
sub
or
sti
addb
xchg
mov
mov
and
push
add
out
mov
mov
mov
pop
ret
fwait
subl
pop
push
ljmp
push
mov
sub
test
inc
inc
add
cmpsb
cmp
mov
add
ds
fs
mov
inc
int3
imul
and
push
push
test
clc
enter
pop
idivl
and
inc
or
dec
std
stc
and
les
andl
dec
sbb
jbe
sub
nop
sub
xchg
push
das
mov
push
clc
xor
lods
pop
inc
xlat
lret
push
pop
dec
clc
push
aad
pop
mov
sbb
pop
mov
in
push
dec
pop
stos
gs
pop
nop
clc
mov
fs
cmp
repz
repz
pushf
adcb
sub
inc
push
iret
fst
fmull
insl
pop
adc
mov
call
sub
xchg
mov
popf
fcomp
jmp
nop
mov
adc
or
loop
cmpsb
push
pushf
lods
xchg
lret
sbbb
filds
imul
or
movsl
mov
cmc
das
in
sbb
dec
cmp
dec
xor
lahf
orl
mov
sahf
mov
push
lods
test
pop
rcpps
imul
test
sub
cmp
fildl
sbb
adcb
inc
dec
sbb
cmpsb
sbb
mov
push
cld
hlt
and
repnz
pusha
mov
mov
push
lret
call
add
pop
aad
fs
shrl
jns
jl
jo
nop
xor
push
mov
add
addr16
mov
jp
push
xor
jae
add
rorl
fimuls
aas
out
jns
xchg
jne
dec
out
nop
and
fs
push
aad
jecxz
jl
add
es
or
jg
adc
and
test
lods
or
ror
fstpl
jbe
add
add
mov
int
ljmp
sub
dec
jecxz
add
leave
sti
pop
inc
scas
stos
xchg
push
sbb
popl
arpl
int3
dec
sub
and
repz
lds
movsl
popl
or
jmp
push
cmpl
cld
dec
cld
add
sub
jecxz
dec
out
outsl
push
out
imul
add
mov
and
loopne
rclb
mov
inc
testb
ror
jp
or
mov
aam
lret
xchg
data16
or
cmp
add
loopne
js
sub
or
add
jbe
loope
and
lds
out
push
inc
mov
lcall
push
pop
aam
jmp
gs
cmpsl
xchg
cmp
pop
aas
jp
mov
inc
adc
add
mov
lcall
push
bt
push
leave
sbb
or
and
xchg
bound
or
push
jg
mov
xor
and
inc
fimuls
iret
ss
fs
shrl
imul
gs
inc
mov
leave
mov
xchg
bound
adcb
xor
mov
inc
mov
adc
sub
jne
and
mov
adc
adc
sbb
movsb
sahf
mov
pusha
leave
nop
add
insl
pop
rolb
shlb
je
inc
push
xor
mov
cmp
lock
mov
dec
push
daa
roll
inc
xor
cmpsl
js
or
dec
mov
push
add
dec
mov
sub
xchg
pushf
mov
lret
adc
shl
cld
movsb
dec
fsubrl
sbb
icebp
xor
gs
and
sbb
testb
xor
mov
xor
inc
cmp
xchg
add
xchg
sub
ja
mov
jp
sbb
ljmp
ljmp
push
push
aas
mov
movsb
add
add
adcl
std
add
cmp
lcall
lcall
inc
aaa
rorb
and
sub
push
sub
bound
sub
icebp
push
and
shl
fisubrs
and
adc
les
sub
fs
add
and
ja
sbb
adc
repnz
pushl
adc
shlb
pop
hlt
mov
sbb
pop
mov
xor
mov
pusha
adc
lods
sub
sbb
dec
cmc
repnz
lahf
add
cmp
push
lret
fstpl
and
hlt
adc
add
icebp
mov
in
add
ds
cmp
movsl
dec
test
mov
cmc
lea
loopne
xor
cmp
les
jmp
push
xlat
sub
sbb
or
jbe
xor
jnp
pusha
and
pop
nop
pop
outsl
jnp
sbb
pusha
and
add
call
mov
push
jle
or
in
ret
add
sub
cmpsl
inc
subb
int
bound
mov
dec
pop
push
jg
push
int
xchg
inc
testl
jmp
addr16
and
pop
icebp
dec
call
out
daa
jge
fimull
sarl
jmp
xchg
popf
lods
adc
sti
jne
pop
dec
push
cmp
sbb
jge
iret
push
leave
xor
dec
into
loop
jb
ds
mov
xor
xchg
bound
pop
mov
lret
push
bound
inc
shlb
pop
add
movsl
adc
insl
mov
push
push
dec
pop
mov
xchg
aad
mov
sbb
shlb
lcall
enter
dec
pop
add
xchg
jo
clc
mull
je
icebp
inc
xor
out
inc
sub
push
fbstp
xchg
adc
sti
clc
je
mov
mov
mov
lahf
jle
leave
pop
in
fiadds
pop
pop
dec
and
adc
mov
arpl
mov
add
addr16
lahf
sub
test
pop
fbld
xor
mov
xor
addb
push
test
adc
mov
sub
inc
popa
loope
sub
rol
and
adc
pusha
mov
inc
out
dec
add
sti
jl
jb
loopne
cmc
ret
mov
mov
bnd
outsl
in
sbb
xor
icebp
pop
pop
insb
mov
ljmp
ret
add
pop
xchg
mov
and
or
cmp
mov
xchg
inc
nop
cmp
xchg
rcrl
inc
testl
in
xorb
cli
or
sbb
rolb
mov
ret
cmp
push
cmpsb
fisttpl
mov
stos
cmp
jp
loope
sub
test
pushf
fiadds
js
mov
push
cmp
push
icebp
jl
and
cmp
arpl
jmp
and
lahf
addl
popa
dec
inc
ja
xor
outsl
add
or
jo
sbb
aam
cmpsb
popa
orb
mov
xor
xor
hlt
fs
xchg
push
or
or
cltd
jmp
andl
xchg
inc
orb
sti
and
fidivl
dec
pushf
adc
mull
xor
shlb
lds
cs
mov
push
pop
xchg
cli
test
ret
push
sar
nop
les
inc
push
shrl
pusha
adc
jl
pop
pop
xor
loop
movsb
sbb
xor
arpl
mov
aad
addr16
add
adc
cld
loop
adc
mov
xor
mov
push
mov
out
jns
out
rorb
sar
movsb
pop
push
jnp
adc
loope
addb
mov
test
sub
inc
cs
jp
dec
sahf
nop
sbb
or
dec
rcll
sbb
cs
dec
inc
js
push
xor
dec
cmp
popf
xor
or
pop
out
popa
popf
mov
dec
daa
ror
sub
call
lahf
xchg
push
out
push
mov
mov
mov
lcall
mov
rorb
aad
adcb
xchg
push
inc
adc
rcl
mov
ret
ja
sub
pop
jmp
sti
add
ljmp
inc
cs
stc
cltd
and
mov
sbb
into
mov
imul
or
cmp
testl
mov
jmp
shl
cld
pushf
or
sbb
cmp
cmp
or
leave
push
pop
cwtl
push
inc
jle
neg
movsb
test
scas
test
cli
cmp
xchg
lret
inc
mov
mov
mov
or
lahf
dec
ja
enter
loope
mov
loop
push
test
cmp
push
daa
pop
outsl
inc
sbb
arpl
adc
push
sub
pop
mov
pop
in
cmp
dec
mov
pop
leave
mov
stos
aaa
push
or
and
jb
lcall
ss
jg
or
lahf
out
dec
jo
stc
out
add
movsb
sub
mov
cltd
sbb
lods
jecxz
adc
fwait
mov
ror
pop
cmp
sub
fimull
xor
add
adc
xchg
jns
idivb
into
je
pop
add
iret
sahf
lret
pop
add
notb
cmc
cmp
xor
pop
xor
mov
xchg
jno
push
push
fidivrl
mov
fldenv
adc
es
lds
pop
push
ljmp
push
cmp
icebp
xor
adc
xchg
jg
imul
ret
sub
push
pop
in
lods
sahf
push
or
insl
xor
lcall
xchg
adc
in
test
xor
adc
and
cld
outsl
js
pop
fbstp
xchg
loop
cwtl
sub
in
fs
push
dec
pop
jnp
cmc
outsb
push
inc
xchg
bound
fmull
dec
notb
ds
cmc
inc
jmp
mov
mov
ret
dec
and
lods
rorb
fdivs
jno
rcrl
adc
loope
int3
je
pop
xor
in
into
pop
cmp
mov
sahf
add
mov
add
jmp
xor
arpl
hlt
mov
les
outsb
inc
sub
daa
dec
mov
mov
mov
inc
adc
or
cmovbe
adc
xor
inc
sbb
and
test
sub
push
and
dec
dec
loop
test
cmc
mov
movsb
cwtl
daa
daa
xchg
and
push
sub
xchg
xor
add
sbb
arpl
adc
sbb
or
or
cmp
mov
xchg
sbb
dec
add
mov
lret
add
popf
xor
mov
dec
xchg
out
das
mov
mov
xchg
pop
lcall
stos
bound
lcall
mov
movsb
and
into
in
mov
sbb
cmp
mov
ret
ret
and
push
test
rcr
aam
cmp
cmc
jo
aas
fdivrl
scas
adc
addr16
xor
dec
gs
mov
or
jno
js
xchg
sbb
ret
mov
je
mov
and
add
xchg
js
push
xor
cs
inc
mov
pop
out
ss
mov
mov
sahf
pop
mov
xor
paddd
out
pop
into
loopne
sub
cmp
movsb
lret
pop
orl
jge
inc
inc
popf
xor
insb
xor
fstps
mov
inc
mov
add
lret
sub
mov
repnz
cmp
cmp
sbb
idivl
sub
sbb
in
jmp
jo
notl
popf
aam
lock
sub
shlb
xor
loope
xchg
jns
sbb
xchg
aam
out
dec
js
push
cmp
out
repnz
inc
dec
jp
adc
mov
pop
mov
orb
fimuls
add
rorl
mov
sti
test
daa
das
jmp
cmp
shll
xor
fs
sub
cmp
add
cmp
std
in
and
push
fsubrs
sbb
mov
push
sbb
add
adc
mov
jge
rcrl
lds
mov
negl
int
pop
int
cmc
scas
imull
das
xorl
pop
cmpsl
pushaw
popf
std
jecxz
repnz
ret
mov
in
add
ret
outsl
xchg
mov
dec
cmp
orb
bound
shr
adc
inc
jb
in
mov
fstps
jne
adc
cmp
das
add
into
movsb
add
sub
xchg
mov
push
cmp
int3
dec
xchg
pop
mov
push
mov
test
adc
aaa
sub
pop
push
arpl
lea
jno
push
ret
movsl
push
leave
comiss
pop
jne
ds
icebp
jle
mov
add
or
pop
push
cmp
loopne
mov
mov
stos
mov
insb
mov
sbb
sub
adc
das
xchg
test
popf
dec
mov
loopne
inc
pushf
arpl
lds
cmp
mov
mov
sbb
decb
sbb
test
mov
mov
cmp
sub
cmpl
addl
lahf
es
and
add
fstpt
scas
in
dec
xchg
sub
cs
xor
dec
out
lcall
mov
test
push
jle
lock
push
inc
loopne
pop
iret
inc
pop
test
nop
pop
out
in
popf
loop
fwait
cmp
push
dec
mov
push
or
scas
jo
xchg
jl
and
ja
pop
xlat
popf
xchg
or
xorb
leave
push
clc
addb
int
jge
pop
in
fcoms
addb
xor
xor
out
mov
cwtl
push
pop
add
sti
or
push
sbbb
pop
add
movsl
mov
cld
dec
sub
or
rorl
xchg
sbb
addr16
jo
fwait
push
rcr
js
adc
out
jmp
cli
add
jnp
push
push
lahf
push
cmpl
inc
adc
pusha
rcrb
loope
dec
push
addr16
fadds
and
or
pop
ja
sub
lcall
sbbb
add
adc
push
dec
ds
cwtl
dec
inc
movsb
inc
xor
inc
sub
xchg
ret
clc
ficomps
mov
insl
and
daa
pushf
mov
xor
sahf
mov
cmp
xor
sbb
ljmp
push
cmp
fmuls
mov
and
lods
ss
cmp
lahf
add
xor
push
ds
out
int
test
fucomip
popf
addr16
jns
and
xor
aam
or
lods
pop
pop
shrb
dec
fbstp
roll
lock
or
stos
gs
leave
ret
mov
shll
push
push
xchg
mov
mov
adc
ljmp
mov
decb
and
push
mov
pop
push
mov
push
je
les
or
in
xor
insl
inc
add
shrl
or
aaa
push
xor
pusha
inc
jno
sbb
add
lds
negl
add
lret
adcl
hlt
sahf
pop
dec
xor
aas
adc
cmp
das
mov
and
sub
sbb
pusha
les
push
add
adc
and
aad
or
mov
movsb
cmp
fists
test
ja
rol
xor
ret
pop
sub
mov
mov
mov
cmp
pop
in
insl
cwtl
add
push
dec
mov
jl
icebp
stos
in
mov
sub
push
daa
ret
push
xchg
jae
push
xchg
fsubr
sbb
mov
cli
inc
push
data16
inc
xor
rcrb
jp
inc
cmp
pop
mov
jno
rcl
mov
stos
xchg
dec
add
ljmp
pop
cli
mov
mov
outsl
pusha
data16
mov
add
test
cwtl
test
push
xchg
adc
ret
mov
pop
jbe
jns
mov
and
mov
push
mov
xchg
hlt
subl
jle
lock
inc
add
fldlg2
js
push
inc
push
cmp
pop
inc
iret
pop
sub
repz
xchg
mov
or
add
adc
xchg
cmp
or
popf
add
jno
cmp
mov
jb
or
mov
and
adc
xor
stos
jno
or
xchg
push
mov
add
insb
mov
aad
aad
sub
test
addr16
mov
push
push
por
js
dec
fisttps
or
call
add
sbb
addl
mov
jno
std
aam
mov
pop
sbb
call
in
lcall
inc
sub
push
jo
shlb
js
fcomp
and
loope
sub
shll
xchg
add
fwait
rcrb
add
test
in
inc
xchg
jle
xchg
loopne
dec
push
jge
ss
sub
fs
sbb
mov
fdivrl
ljmp
mov
push
dec
and
mov
sbb
or
sbb
pop
int3
pusha
cmpb
mov
mov
xchg
push
and
inc
and
enter
mov
pop
outsb
and
push
addb
dec
ja
subb
jno
cmp
add
stos
pusha
and
jge
pop
xchg
jns
push
inc
add
jae
and
lcall
and
fidivrl
mov
mov
pop
cmpsl
pushf
add
pop
push
xchg
xchg
dec
adc
fnstenv
mov
sbb
ss
add
xor
pop
xchg
test
bound
lcall
xchg
loop
pop
mov
push
in
inc
xchg
rcrb
mov
mov
and
inc
fdivr
mov
dec
int3
mov
test
push
popa
mov
xchg
cwtl
cwtl
stos
je
addb
cltd
and
cmp
mov
mov
push
and
jl
push
mov
insl
or
adc
jns
into
or
jge
cmp
and
mov
xor
test
mov
jb
xor
test
dec
insb
xor
adc
and
cli
lods
frstor
inc
inc
lcall
rorl
into
lcall
jae
popa
dec
lahf
xor
sti
mov
push
imul
fimuls
data16
subl
bound
or
gs
inc
adc
jl
add
xchg
ljmp
shrb
push
shr
push
lahf
pop
lods
adc
rorb
inc
push
pop
aaa
dec
dec
xchg
subps
add
jnp
cmp
shrb
pusha
xchg
push
pop
push
adc
push
mov
xchg
push
int
sbb
inc
filds
add
jmp
mov
mov
dec
mov
jnp
scas
out
loopne
fistpll
dec
push
push
pop
dec
adc
cmp
xchg
push
mov
push
mov
addr16
fimull
daa
mov
cs
xor
xchg
dec
ja
fsubrs
ja
xchg
push
and
mov
addl
pop
mov
sbb
movsb
or
add
out
sub
sahf
jno
push
mov
add
inc
add
xor
cmpsl
into
pop
js
adc
orb
add
sahf
dec
pop
popf
adc
jl
push
rclb
fidivl
rolb
aad
stc
shr
xchg
loopne
cmp
cmp
icebp
pop
cli
xor
inc
add
add
xor
inc
mov
in
cmp
or
adc
pop
lcall
jo
aas
test
pop
pop
xchg
inc
sti
fcmovu
mov
rcr
xor
push
les
ja
mov
xchg
push
daa
push
mov
lcall
fiadds
add
adc
leave
das
lods
rolb
and
sbb
in
xchg
add
addl
mov
out
jnp
push
or
inc
dec
cmp
cmp
xchg
out
nop
loopne
sub
in
adc
repnz
pop
pop
sbb
subl
and
and
mov
movsl
ret
shlb
mov
pop
add
and
cmp
cwtl
sbb
pop
andl
popa
mov
jnp
lods
dec
add
or
xchg
test
ror
ja
push
fs
mov
stos
push
fidivl
cmp
sbb
mov
pop
test
push
lcall
aaa
push
jmp
and
scas
mov
mov
and
mov
jb
adc
push
push
mov
lds
inc
jns
sbb
push
dec
lds
sbb
add
xchg
push
int3
mov
icebp
insb
arpl
xchg
and
or
aas
rol
ret
mov
nop
icebp
stos
call
inc
ja
scas
fsubs
pslld
ja
cmpsl
add
jno
mov
roll
lods
bound
jbe
out
and
stos
xchg
cld
loopne
ret
rol
push
movsl
loopne
testb
mov
add
inc
xor
fld
or
xchg
xor
int
inc
outsb
pop
out
pop
cmp
adc
xchg
ret
sub
push
pusha
lods
faddl
lcall
xchg
pushf
cmp
and
cmp
jbe
cwtl
or
sbbb
push
fbld
and
mov
inc
outsb
jge
mov
loopne
or
in
add
mov
mov
xchg
jne
outsb
mov
sub
sbb
jb
dec
or
lea
jno
pop
cld
jno
popl
adc
movsb
mov
jb
add
mov
cmp
add
mov
and
pop
movsb
push
add
sbb
push
and
fldenv
aaa
lea
add
cs
fsubs
sub
js
ret
sub
test
nop
push
jo
shrb
and
xor
js
push
cmp
jge
adc
mov
adc
push
xor
cmp
push
mulb
push
rol
pusha
shlb
xor
mov
sub
sbb
lcall
fs
movl
sbb
bound
repnz
push
mov
add
or
mov
dec
xor
jb
sbb
mov
call
sbb
aaa
cmpb
push
stos
mov
ljmp
ja
aam
mov
dec
or
out
push
jo
loopne
jmp
popf
sbb
loope
rclb
push
mov
jo
mov
jecxz
lds
inc
or
and
cmp
loopne
scas
push
outsb
add
pusha
mov
mov
inc
mov
je
pop
jg
sti
pop
inc
cmp
mov
sub
push
mov
sbb
stc
loopne
sub
cs
shrb
leave
ret
add
js
test
pusha
xchg
mov
xchg
add
fcoms
adc
inc
mov
push
jno
pop
sbb
in
sbb
lea
cmp
xor
pop
gs
pop
add
add
jl
jbe
test
inc
pop
mov
lods
repnz
sbb
clc
add
stc
inc
out
cmp
das
orb
sbb
les
push
nop
cltd
add
or
mov
cs
repz
push
fwait
push
and
scas
xor
jle
arpl
pusha
sub
mov
xchg
cld
out
cltd
mov
adc
jne
lock
imul
mov
nop
mov
pop
adc
movsb
mov
in
hlt
es
inc
iret
xchg
xor
push
lock
fsubr
sub
sub
in
and
sub
cmp
pusha
jnp
lahf
rcrb
movsb
jnp
xchg
js
pop
adc
cwtl
dec
push
push
ret
adcb
movb
popf
add
pop
or
test
js
pop
sbb
adc
pop
inc
pushf
pop
repnz
loopne
sbb
out
sbb
shr
add
sub
cmc
fnstsw
or
pop
xchg
xchg
ja
adc
and
bound
or
scas
xlat
xor
jno
jecxz
js
xchg
jge
lret
adc
fstps
ss
mov
mov
test
les
or
movsb
cmp
cltd
inc
nop
out
push
pushf
mov
jns
popa
pop
push
xchg
pop
xchg
mov
adc
dec
mov
mov
xchg
test
xorb
push
data16
mov
cmp
addb
cmp
pop
and
cmp
inc
mov
xchg
jle
mov
mov
add
add
mov
dec
push
lds
mov
add
push
sbb
nop
sahf
xlat
fs
dec
lock
sbb
mov
movsl
divb
or
sub
pop
sub
orb
les
adc
and
adc
popa
pop
jl
divb
jle
lret
mov
roll
xchg
ficoml
insl
leave
cmp
add
in
add
fdivrs
repnz
ss
xchg
cs
push
inc
xchg
js
or
cltd
and
test
cmp
mov
push
add
mov
or
scas
xchg
scas
push
dec
add
sub
lret
jp
xor
pop
or
adc
les
in
cmp
push
add
add
dec
inc
cmpsb
stos
cmpsb
gs
ret
pop
push
mov
xchg
sbb
cld
add
mov
sub
rcr
adc
shll
mov
pop
cwtl
cmpsl
les
ljmp
xor
iret
dec
and
adcl
movb
data16
pop
popa
sti
or
pusha
sbb
pop
mov
ret
jge
pop
pusha
pop
sbb
pop
xor
cmp
mov
push
add
in
test
add
mov
cmp
adc
pop
jge
call
cwtl
inc
or
add
xchg
fsubl
es
notl
mov
xchg
loopne
hlt
iret
adc
ret
andb
stos
fisttps
in
or
aas
mov
inc
out
jg
adc
sbb
out
and
rorb
push
or
cmpsb
sahf
cmp
add
jne
js
and
inc
jmp
jmp
mov
ret
mov
mov
popa
mov
loop
pop
addr16
imul
cwtl
mov
adc
jo
in
sbb
iret
push
je
or
and
scas
movsb
jp
pop
hlt
sub
sbb
xchg
fcoms
cmp
xor
cmpsb
dec
fcmovnu
mov
dec
out
out
call
cmp
inc
subb
mov
sbb
pop
cs
inc
std
cwtl
sub
out
pop
sub
jae
int3
and
mov
pop
imul
cmp
push
setg
and
cmp
add
dec
mov
xor
mov
daa
std
xchg
scas
sub
sbb
cmp
pop
movsl
leave
test
dec
or
test
sarl
andl
sahf
in
aas
push
cmpsl
xchg
ljmp
add
repz
dec
mov
and
jp
in
ds
cmp
fisttpl
sbb
pop
and
inc
jp
jo
popf
xchg
add
sbb
add
xlat
dec
push
cli
ljmp
jg
cltd
not
fcompp
jl
jne
aam
shll
popf
imul
mov
je
cmc
push
pop
push
cmp
fwait
push
add
push
rclb
mov
xor
cs
lock
pop
outsb
sub
fcomp
sbb
pop
inc
cs
lcall
jns
cld
inc
mov
mov
stos
outsb
inc
aas
mov
jns
aam
jb
aam
cmpsl
jp
in
adcl
jl
repz
ret
jmp
pop
ja
and
in
sub
sbb
mov
movsb
mov
sbb
jle
fmull
outsb
xor
add
push
mov
aam
sbb
dec
pushf
and
daa
and
adc
adc
jmp
filds
push
cmp
loop
mov
insb
or
xor
in
popa
pop
pusha
movb
cwtl
rorl
and
daa
inc
int3
clc
inc
into
xor
mov
add
sbbb
inc
sbb
popa
mov
enter
push
fs
mov
pop
adc
and
and
pop
ja
xchg
loope
pop
ret
sahf
aam
add
in
push
sub
les
fs
cmp
xchg
mov
shrl
addr16
push
rcr
lock
pusha
push
push
nop
aad
clc
xor
jecxz
mov
push
cltd
cltd
repz
movsl
fwait
adc
stos
sbb
mov
ljmp
sbb
daa
fldcw
xchg
jno
test
add
test
pop
cmp
inc
xchg
cmpl
add
or
jne
push
add
sub
inc
sbb
pop
stos
mov
xchg
popa
xor
mov
bound
dec
mov
jo
jg
add
pusha
jbe
pusha
out
shll
add
inc
lds
or
in
ja
xchg
imul
test
data16
cmpsb
mov
push
push
outsl
mov
push
inc
shrb
addr16
sub
cmp
inc
xor
mov
jbe
in
out
icebp
jns
inc
jbe
inc
cltd
pop
xor
out
pop
shl
mov
push
ljmp
ds
mov
dec
dec
inc
into
popf
push
stos
xor
lods
push
in
add
xor
ja
imul
aaa
leave
and
mov
stos
or
subl
dec
adc
mov
xchg
pop
js
jnp
inc
ljmp
frstor
cmp
cmc
rcrb
jo
push
lret
loop
adc
or
lods
cli
notb
mov
pop
shlb
and
cmp
data16
jl
mov
jno
mov
test
xchg
push
push
popf
xchg
pop
sbbb
jnp
xor
mov
and
addl
mov
mov
or
jl
lahf
jg
mov
jmp
iret
xor
xchg
add
addr16
or
orb
sbb
mov
pushf
in
or
mov
push
adc
cmp
inc
ret
outsl
push
lock
or
push
popa
movsb
lock
mov
xor
push
pop
xchg
clc
dec
add
call
ja
mov
scas
pop
shlb
aaa
jno
mov
lcall
xchg
loope
ds
sub
sbb
sub
mov
cmpsl
outsl
imul
mov
rorb
pop
mov
jmp
js
add
dec
into
pop
push
movsl
dec
add
insb
push
pop
iret
jl
test
inc
sarb
lea
rcr
push
xorl
hlt
jle
jg
ljmp
addb
cmp
add
addb
push
add
add
or
cmp
add
orb
add
popa
push
insb
inc
push
jo
jo
call
add
pop
pusha
or
dec
inc
loopne
and
add
cmp
push
add
add
js
nop
jg
scas
mov
add
xor
pop
and
fstpl
outsb
pop
xor
pop
cmp
push
add
xorb
fisubrs
dec
pusha
nop
das
jl
fcmovnu
fstpt
push
add
and
add
loopne
xor
mov
mov
push
loopne
xor
and
cmp
push
sbb
loopne
inc
icebp
fists
add
rol
pop
inc
rcrb
mov
addb
add
add
loopne
stos
dec
jp
in
negb
add
addr16
pop
push
or
inc
xor
mov
jbe
add
add
jns
or
jge
mov
xor
pusha
sbb
add
add
lods
insl
fldt
nop
pop
sbb
or
sti
cmp
or
loop
and
and
insb
fs
jo
jbe
fsubrs
mov
insl
dec
shlb
add
mov
mov
inc
xlat
pop
sti
cmp
push
add
ret
fs
sahf
push
clc
and
shrb
or
add
or
push
xchg
mov
xor
data16
push
add
fisubrl
or
or
xor
clc
rcrb
sbb
es
add
mov
clc
xchg
mov
shlb
loopne
shlb
xor
xlat
mov
sub
add
inc
mov
insl
lods
jne
jo
iret
inc
fs
or
and
push
jnp
fcmovbe
insl
cmp
orb
cmp
out
pop
pop
push
frstor
and
add
insl
test
stos
push
imul
and
and
xchg
pop
sub
addb
pop
sbb
adc
dec
jo
imul
imul
add
inc
push
mov
sti
and
lea
lds
push
or
pop
or
mov
sbb
pop
imul
xor
imul
or
imul
dec
xor
xor
pop
push
dec
pop
inc
push
dec
inc
dec
inc
sbb
jne
lea
inc
add
sarb
das
dec
outsb
inc
cmp
nop
adc
imul
loopne
mov
js
add
bound
insl
add
inc
jle
push
les
outsb
je
adc
out
nopl
outsb
pusha
add
xchg
add
inc
sub
iret
cvtps2pi
or
xchg
sbb
push
push
add
add
adc
out
cmp
nop
xchg
pop
sub
nop
xor
adc
add
jbe
hlt
jns
adc
add
cmc
push
add
push
ljmp
pop
and
or
pop
iret
in
sbb
dec
mov
cmp
xor
add
lea
arpl
mov
sub
adc
cmp
dec
imul
lods
jne
push
je
add
sub
xchg
lods
mov
loop
shlb
xchg
dec
dec
lea
xor
inc
imul
mov
mov
and
cs
fs
pop
push
sbb
or
incb
push
dec
push
sbb
ss
mov
xor
jp
cmp
test
cmpb
xor
push
push
or
imull
push
fs
push
cmpsl
jo
jo
inc
sub
mov
jne
shlb
fadds
lods
iret
or
mov
cmp
subb
shll
test
mov
inc
sub
add
jecxz
pop
xor
sbb
add
mov
dec
xchg
fdiv
loopne
imul
data16
imul
inc
mov
mov
jle
xchg
repz
scas
insl
or
or
mov
xor
push
mov
or
or
add
addl
or
sbb
aad
pop
bound
mov
pop
or
subb
ret
sub
sbb
or
outsl
and
or
dec
sbb
sub
ret
test
add
and
pop
xor
push
sahf
jns
push
icebp
ss
cmp
xchg
ret
enter
sub
push
cmp
imul
lods
adc
adc
adc
inc
sub
xor
dec
lods
sbb
das
add
std
ljmp
outsb
push
imul
add
int
mov
pusha
cwtl
push
mov
js
sbb
lods
sbb
mov
mov
dec
push
dec
push
inc
push
inc
dec
push
pop
dec
ss
ficompl
call
pop
mov
inc
mov
inc
and
xchg
arpl
inc
jmp
imul
lds
icebp
jne
mov
hlt
mov
sbb
dec
rcrl
in
push
jbe
push
mov
in
cmp
sbb
push
cmp
das
add
mov
fistl
icebp
or
test
jle
sbb
sbb
xor
inc
push
add
mov
fnclex
pop
int
popa
jb
jbe
rolb
and
inc
add
dec
or
add
push
sub
and
in
push
test
or
out
sbb
and
dec
aam
fcmovnbe
dec
sub
jle
push
pop
inc
addr16
push
add
and
mov
push
add
shrl
imul
xor
add
popa
data16
insb
dec
outsb
popa
push
jae
pop
xlat
inc
insb
in
add
inc
rorb
add
mov
imul
push
or
orl
adc
out
jb,pn
adc
jp
cwtl
fcmovbe
repz
pop
mov
inc
sub
dec
push
dec
cmp
arpl
mov
mov
ret
jge
out
add
das
out
test
add
inc
xor
int3
or
jo
inc
sub
jb
int
jmp
mov
pusha
cmp
sub
imul
inc
inc
rcl
push
loopne
mov
lods
repnz
pop
push
xchg
insl
and
and
push
cwtl
enter
insl
xor
xor
addl
lods
push
pop
pop
pusha
int3
mov
mov
jne
sbb
jae
je
push
sbb
add
dec
add
dec
scas
divb
add
xor
mov
sbb
subb
lods
iret
pushf
js
pusha
jo
jo
int
gs
nop
jo
mov
adc
daa
push
ljmp
nop
dec
and
mov
xchg
jbe
out
mov
push
pop
inc
push
push
push
dec
push
push
push
inc
inc
jae
lods
add
lock
sbb
fiaddl
loopne
inc
mov
mov
xor
or
push
test
add
ret
dec
add
or
nop
std
sahf
xchg
arpl
sub
test
xchg
or
popa
jae
add
add
push
xor
nop
dec
icebp
sbb
jb
cmc
pop
jo
xchg
call
fmull
xchg
mov
lods
push
adcl
mov
inc
js
pop
push
scas
xchg
mov
jae
inc
or
dec
mulb
int
push
add
cmpsb
add
xchg
testl
dec
mov
sub
scas
sub
push
mov
das
mov
aas
dec
pop
xor
push
addl
insl
leave
cltd
int3
fmul
dec
test
mov
test
add
rorb
cld
and
push
call
xor
push
mov
and
int
mov
cld
sub
mov
push
shlb
es
add
test
pop
imul
and
xor
cmp
fdivl
loopne
xor
popf
inc
cmpsb
push
pushf
stos
pop
adc
dec
pop
pop
mov
fwait
dec
sbb
inc
popl
fmull
push
xchg
mov
push
aaa
add
cmp
fs
pop
inc
jns
pop
test
or
rcrb
or
and
xchg
stos
or
out
adc
jbe
inc
das
fstps
lods
mov
push
jge
sub
mov
xchg
ficomps
cmp
add
or
xchg
pushf
pushf
add
rcrb
or
bound
rol
xor
xorl
call
ljmp
inc
dec
dec
push
inc
push
push
inc
dec
dec
push
nop
add
dec
xchg
cmp
jae
stos
sub
outsb
jae
out
adc
pop
lods
imul
rclb
adc
lea
rcrb
jne
pusha
scas
jg
push
jge
push
dec
or
dec
jne
pop
imul
jle
dec
inc
inc
cmc
ja
loope
rcrb
inc
cmp
sbb
xor
mov
into
and
inc
xor
cmp
xlat
jne
jbe
dec
jl
js
inc
pop
shll
sbb
shrl
into
loope
sub
inc
cltd
pop
loope
mov
sarb
push
pop
mov
loop
push
stos
mov
or
mov
in
cmp
icebp
jno
lea
adc
xchg
imul
bound
mov
mov
subb
lret
cmp
test
stos
mov
js
cltd
xchg
fcompl
scas
fistpl
jae
jne
pop
dec
ret
je
sbb
pop
xchg
dec
dec
mov
dec
push
addl
das
adc
lock
xchg
out
push
xor
imul
push
adc
scas
push
sbb
add
xor
or
and
pop
xor
xor
rorb
jo
loope
mov
ss
or
xor
or
dec
jo
rcrl
cmc
push
push
push
lret
ds
je
aam
inc
arpl
stos
add
sbb
rolb
sub
test
push
xor
xchg
int
or
popa
mov
mov
push
sbb
mov
mov
andl
dec
add
mov
mov
pusha
mov
insl
xchg
dec
pop
mov
jae
xor
lds
jnp
xchg
or
and
insl
shl
test
cmp
jmp
xchg
shrb
lcall
mov
aas
pop
xchg
or
shrb
sbb
jmp
push
push
dec
push
mov
insl
cs
xchg
lods
xor
test
sbb
bound
or
outsb
dec
pop
add
mov
xchg
or
sub
in
mov
push
push
dec
mov
sub
inc
pop
add
push
mov
fildl
out
xchg
or
xor
mov
lcall
mov
push
add
adc
jmp
adc
or
push
push
or
loop
inc
imul
or
ljmp
les
iret
pusha
mov
jae
nop
mov
inc
cmp
and
pusha
or
add
push
push
sub
jae
es
arpl
int3
loopne
gs
pop
scas
lcall
pop
imul
lcall
inc
push
rcrb
pop
dec
fwait
shll
aaa
data16
fisttpll
popa
fs
outsb
outsl
jo
js
insl
arpl
xchg
lcall
cmp
adc
xchg
inc
rol
pop
adcb
mov
dec
and
push
imul
dec
jo
pop
pop
mov
int
pop
add
std
lods
pusha
push
mov
mov
jne
loope
push
mov
add
add
dec
lods
pusha
dec
cmp
lock
inc
lods
pushf
int3
das
add
rclb
lods
add
outsb
iret
xorb
cmpb
pusha
push
add
call
inc
pop
xor
add
inc
xor
lods
addl
pop
xor
jo
dec
sub
subb
sub
dec
mov
xor
add
xor
add
mov
mov
cmpsb
sbb
pop
ljmp
jns
shrl
rorb
mov
fnstsw
pop
inc
js
rcl
jne
jno
cmc
push
push
insl
push
jo
dec
pop
add
in
test
inc
lcall
dec
push
sbb
js
out
sbb
sub
push
mov
pusha
bound
cmpsl
mov
adc
mov
mov
and
add
mov
jae
int3
sub
cmp
inc
inc
dec
dec
add
ss
mov
xorl
mov
sub
inc
dec
sub
daa
mov
and
inc
nopl
dec
dec
out
cmp
or
dec
xor
or
push
add
xor
aad
push
ret
into
test
pop
xlat
shll
aaa
jmp
jo
lret
inc
hlt
sbb
mov
dec
in
mov
dec
sbb
mov
icebp
in
nop
xor
ret
sub
mov
push
push
inc
or
add
ss
loopne
push
add
sub
sbb
sbb
loopne
movsl
int
loopne
sub
cmp
mov
xor
testb
fs
xchg
mov
push
mov
sbb
inc
and
adc
lcall
add
cmp
aaa
js
loope
xor
add
out
pop
bound
push
jle
scas
pop
add
push
test
mov
inc
jmp
add
push
mov
adc
sbb
pop
imul
xor
push
jo
mov
add
xor
mov
mov
xchg
popf
test
insl
pop
mov
pop
sti
aaa
pop
xor
hlt
mov
out
push
inc
push
push
mov
jne
jl
or
and
lock
rcrl
add
push
fiaddl
int
gs
outsb
fildl
xchg
push
mov
pushf
inc
inc
jae
int
sub
stos
or
push
lcall
dec
add
push
or
ja
repz
scas
lahf
cmp
add
ljmp
loopne
loope
mov
pop
imul
push
and
push
pop
loopne
push
pop
lahf
add
xor
lcall
xchg
mov
add
mov
sub
mov
jo
es
mov
xchg
test
hlt
xlat
sbb
lahf
xor
test
mov
stc
cmp
pop
pop
pusha
mov
xchg
lcall
sahf
pop
inc
stos
roll
mov
mov
imul
dec
jmp
push
xor
fmuls
out
or
je
je
insb
jb
xor
outsb
xor
lcall
inc
jbe
push
ret
sbb
push
mov
push
dec
outsb
inc
push
pop
dec
ja
dec
jne
and
insb
xchg
cmp
sub
push
mov
rorl
push
jb
sarl
sbb
add
lea
sub
lret
inc
rol
inc
and
ja
arpl
inc
push
xor
stos
push
push
rol
insb
and
daa
push
cmpsb
add
aam
inc
push
sbb
jo
scas
stos
push
and
ss
xchg
rclb
sbb
xor
inc
xor
mov
sub
mov
sbb
or
xchg
pusha
cmc
test
cmp
fwait
or
std
arpl
adc
mov
adc
sub
push
xlat
aam
dec
repnz
push
sbb
add
push
mov
cmpsb
int
dec
mov
clc
and
andb
mov
push
lods
ja
and
adc
pop
stc
out
test
push
xor
outsb
popf
jnp
inc
adcl
in
int
je
xor
vpshuflw
jle
or
pop
scas
jmp
loopne
cmp
loopne
jne
fimuls
xchg
shll
inc
gs
and
test
or
dec
mov
jp
jecxz
dec
and
and
sbb
pop
pop
lods
add
cmp
jae,pn
mov
or
aam
xor
testl
and
rcrb
call
pop
and
and
xchg
lea
popf
add
dec
inc
mov
xchg
push
scas
xor
and
lods
mov
int
push
adc
and
xor
xor
xor
dec
push
fisubrl
and
or
jb
mov
aas
call
inc
mov
add
loope
add
rorb
mov
inc
dec
mov
inc
imul
jo
cmp
pushl
aaa
xor
xor
xor
xor
cmp
pop
int
dec
sbbb
inc
xlat
mov
sub
popa
jmp
mov
pop
pop
sbb
stc
cwtl
outsb
in
and
out
mov
ret
fstps
out
stc
xchg
ljmp
out
fistpll
and
add
scas
cmp
enter
and
dec
cmp
jle
aaa
sbb
sbb
arpl
inc
lock
xor
repz
sub
fwait
ss
pop
mov
mov
fistpl
xlat
andl
or
aad
imul
or
fnsave
fwait
sub
ds
xor
test
sti
pushl
sub
lock
mov
pop
stc
ds
and
test
push
lock
sbb
jnp
and
in
cmpsb
inc
out
aas
mov
sti
pop
shrb
stc
iret
cmpsb
lock
jge
in
push
jbe
sub
or
mov
mov
mov
clc
and
cmp
loopne
sub
mov
in
enter
mov
mov
mov
push
pop
adc
enter
int3
pop
adc
sub
dec
mov
and
movsb
fsubrl
sbb
les
lods
inc
inc
jb
push
lods
lods
ja
mov
popf
fsubr
mov
sub
in
adc
enter
adc
push
icebp
lret
and
fmull
into
sub
frstor
dec
repz
int3
cmp
and
cmp
cmp
pop
mov
pop
test
sub
hlt
cli
cmc
or
lcall
not
clc
lds
cmpsl
jns
sar
fsincos
sahf
out
nop
cmpsl
repz
std
mov
sahf
out
mov
rorb
shll
jecxz
imul
push
jns
iret
jmp
pop
ror
xor
in
lret
push
int3
in
hlt
sbb
pushf
stos
in
andl
stos
pushl
sub
sbb
icebp
pop
fwait
popa
aam
fwait
bound
in
dec
mov
pushl
popa
inc
scas
xchg
pop
dec
cli
fcmovnb
xchg
imul
call
pop
shll
pop
jmp
pushl
sbb
inc
jo
mov
aad
cltd
outsb
sti
out
call
jo
cmc
push
and
mov
dec
pop
xchg
add
cmc
or
inc
and
inc
test
jl
cmp
in
lock
add
mov
js
inc
add
dec
lcall
push
fcmove
sub
jl
inc
mov
std
lods
loopne
roll
sub
mov
jmp
aas
lds
or
jae
sbb
je
dec
adc
fs
stos
in
mov
in
mov
movsl
out
into
mov
xchg
movsb
mov
add
dec
ljmp
cmp
ds
sbb
or
push
inc
mov
or
push
dec
pop
test
scas
insl
in
sti
mov
add
dec
repnz
mov
mov
lods
nop
sub
test
xchg
adc
xchg
cwtl
jecxz
lret
imul
test
arpl
dec
mov
xchg
xchg
xchg
fcompl
std
xchg
sbb
leave
int
or
stos
jnp
sub
mov
xchg
jnp
jmp
xor
nop
mov
inc
mov
jecxz
mov
mov
dec
adc
int
sub
test
push
test
adc
out
pop
call
mov
cmp
mov
jl
fimuls
pop
cmpsl
xor
lahf
lods
cmp
dec
cld
cmpsl
daa
sbb
xchg
or
pop
shll
popa
jge,pn
xchg
sbb
movsl
into
iret
mov
cmpsl
jecxz
dec
mov
pop
rorb
imul
jle
mov
mov
xlat
pusha
push
cmpb
out
pusha
sub
in
push
js
push
insl
xchg
cmp
xor
and
xchg
add
enter
push
add
arpl
mov
sub
mov
sbb
mov
jns
sbb
mov
push
push
jb
lods
mov
pusha
test
mov
aaa
loop
arpl
fs
repz
cmc
test
add
movsl
push
sub
dec
add
fidivrl
and
mov
orb
xor
cmp
in
sub
dec
mov
mov
ja
sahf
mov
mov
xchg
dec
insb
or
rclb
cmpsb
mov
and
or
aad
inc
inc
pushf
dec
dec
in
loopne
fidivrs
inc
fsts
mov
ffree
pop
dec
jns
test
cmpsl
inc
cmpsl
adc
jecxz
pop
and
or
inc
mov
shl
pop
mov
pop
push
aad
inc
shll
cmpsb
inc
fldt
insb
mov
mov
jns
mov
mov
sub
lods
or
add
fdivrl
fwait
in
lods
aam
dec
fisttpl
mov
dec
es
pop
call
adcl
inc
pop
scas
mov
mov
jo
pop
dec
cmpsl
mov
and
adc
mov
dec
movsb
xlat
arpl
insl
mov
sbb
lods
cli
mov
addr16
pop
fldcw
out
xchg
flds
dec
cmpsb
sub
in
inc
movb
jns
inc
cs
xchg
mov
mov
popa
sub
lods
sub
mov
pusha
xchg
mov
aad
xchg
sub
sub
movsb
jno
dec
mov
or
test
fcmovbe
mov
mov
insl
mov
aad
loop
mov
push
sbb
cli
outsb
or
push
pop
and
jmp
std
mov
mov
cmp
sub
dec
test
int3
pop
dec
and
push
push
lods
aad
mov
std
mov
icebp
test
popa
inc
mov
movsb
stos
inc
imul
dec
stos
xor
push
outsl
or
cld
cs
mov
lret
test
or
outsb
and
mov
mov
push
cmp
inc
mov
adc
push
mov
sub
in
pop
pushf
or
in
pop
sub
jge
sahf
sub
xchg
aas
pop
roll
pop
ficomps
outsl
pusha
mov
mov
int3
dec
sbbb
add
ss
mov
adc
jns
clc
fists
xor
or
push
sti
lea
jb
cmp
arpl
daa
aas
sub
punpcklwd
mov
mov
mov
xchg
jb
push
stc
imul
movsb
lcall
rcl
test
jns
popf
lret
and
xchg
jnp
mov
adc
cmpsl
cmpsb
mov
in
shll
stos
imul
scas
and
insb
orb
mov
icebp
mov
jo
and
sub
push
leave
push
ret
push
mov
stos
in
test
adc
mov
and
jmp
test
mov
in
stos
in
lcall
gs
dec
sti
mov
push
shlb
and
cmpsb
cmp
iret
push
sub
and
pushf
sub
mov
dec
mov
mov
mov
sub
mov
sub
in
and
lret
js
add
sub
mov
cmpsb
adc
lret
test
push
dec
mov
push
jb
cmp
sbbb
dec
loopne
jb
and
jnp
mov
out
push
push
movsb
xchg
mov
test
les
add
sub
push
fadds
enter
mov
scas
and
mov
lret
push
testb
mov
shll
sub
push
fcomps
std
scas
xchg
push
dec
fistl
or
clc
clc
dec
test
cmp
shlb
sbb
cmp
push
xor
mov
adc
xor
loopne
das
inc
mov
push
or
and
cmp
out
dec
mov
and
push
mov
sbb
push
loop
push
adc
and
sbb
stos
sub
adcl
push
pop
adc
stos
movsb
mov
les
shlb
orb
and
addb
enter
scas
pop
and
inc
ja
mov
roll
dec
xor
pusha
add
push
pusha
mov
test
mov
rorl
inc
fstl
adc
out
pop
loopne
je
add
or
push
mov
fistpl
mov
fisttpl
sub
dec
scas
popa
add
shll
dec
sub
jbe
mov
das
add
lods
lret
mov
xor
sub
movsl
cmp
andb
push
add
and
or
pop
imul
xor
ss
xor
dec
shr
xor
add
fstl
fistpll
inc
push
inc
js
inc
push
jae
dec
inc
inc
movsl
ret
push
into
or
mov
lods
push
mov
js
sbbb
sbb
xor
in
sbb
test
mov
add
adc
pop
out
int
rolb
test
xchg
rorb
add
mov
jo
pop
add
push
outsb
adc
sbb
cmp
iret
or
imul
mov
sub
adc
test
sbb
jbe
loopne
adc
cmp
loopne
insl
push
test
pop
push
sbb
push
fisubl
sti
add
pop
sub
dec
cmpsb
outsb
xor
push
emms
dec
and
mov
inc
and
adc
cmp
stos
push
mov
xchg
sub
mov
push
pop
push
mov
pop
rcll
pop
or
in
push
inc
jne
push
fwait
cwtl
imul
pop
sub
dec
je
imul
mov
data16
cwtl
call
jg
js
insl
xor
ss
outsb
arpl
cmp
sub
ss
lcall
test
lea
aam
mov
mov
bound
pop
mov
cmp
adc
push
inc
xor
cs
pushf
or
or
mov
or
dec
push
or
pop
jb
add
lock
push
in
add
add
adc
imul
inc
add
es
or
push
jo
shll
call
adc
lods
mov
outsl
jno
adc
nop
pushf
rolb
adc
mov
imul
inc
dec
inc
xor
subl
pop
test
cmp
push
or
cmp
sarl
dec
bound
xchg
add
popa
push
or
pusha
into
fstpl
push
fmul
inc
cmpsb
mov
ret
rcl
and
inc
mov
or
add
test
xor
push
movsl
test
enter
push
jo
and
xor
push
mov
shll
and
sbb
mov
stos
loopne
and
xchg
lcall
add
mov
mov
dec
arpl
adc
and
xorl
add
or
pop
leave
and
push
jmp
iret
fildl
fstl
outsl
jle
fisttpll
out
fists
mov
add
scas
xchg
add
mov
ljmp
idiv
pop
lahf
iret
adc
mov
insl
testl
pop
int
mov
jmp
sti
inc
out
aas
in
lahf
fistpll
dec
fucom
fistl
out
dec
or
iret
and
out
jb
out
std
lahf
jae
adc
xchg
paddsw
ja
xlat
pop
sti
cmp
mov
lahf
fistl
jmp
pushl
mov
neg
jae
jmp
lret
jmp
scas
xor
sti
sub
incl
scas
jmp
sar
xchg
iret
out
mov
jnp
aaa
in
xchg
int
scas
jb
int
pop
xchg
iret
in
int
sbb
rclb
stos
iret
mov
mov
cmp
pop
imul
xlat
ret
shlb
or
dec
ret
adc
mov
std
mov
into
rorb
cmp
jnp
ljmp
lcall
inc
xchg
pop
xorb
mov
addr16
mov
fnsave
out
mov
lahf
lahf
and
in
mov
xor
and
xchg
pop
cmpsl
stos
lahf
pop
fildll
loope
or
pop
ret
and
push
or
ret
out
lahf
divl
js
mov
cmp
cmp
xchg
add
pop
jnp
int
inc
aas
dec
ror
fidivs
pusha
xchg
add
out
dec
push
mov
jecxz
or
jmp
cmp
push
pop
xchg
out
mov
ja
jg
xchg
mov
fisttps
daa
scas
xor
push
cmpl
rcll
divl
out
sbb
cmp
fildl
iret
xor
mov
mov
in
std
das
dec
cmpl
imul
ljmp
icebp
lcall
out
cmp
fninit
jae
out
sbb
jae
sti
das
pop
divl
pushf
sahf
mov
lret
add
mov
jnp
xchg
adc
or
cmp
or
adc
mov
mov
fucomip
push
xlat
pop
xlat
xchg
in
fcompl
fdivrl
out
xor
out
sti
pop
inc
xchg
pop
pop
add
xchg
cmpsl
aaa
inc
out
idiv
push
sti
setns
cmp
inc
cmp
jo
push
mov
jae
out
xchg
dec
dec
xor
push
orl
adc
sbb
cmpl
mov
cmp
mov
pop
sub
inc
mov
xor
ljmp
cld
bound
pop
sbb
pop
loopne
ss
repz
xchg
pop
lcall
cld
addr16
test
mov
enter
call
push
adc
mov
or
cltd
cli
dec
add
xor
ret
fwait
mov
xchg
roll
fdivrl
js
mov
mov
das
lcall
mov
and
not
pop
pop
test
mov
fnstcw
push
inc
daa
fstpt
add
fisttpl
fwait
cltd
xchg
dec
mov
jnp
cmp
push
push
icebp
lock
add
aad
pop
fsubrs
mov
dec
add
in
xor
call
jo
push
pusha
pop
sub
cli
add
pop
sub
pushf
and
andb
inc
jae
and
pusha
icebp
xchg
add
daa
pushf
icebp
into
mov
cmpb
popa
jp
add
clc
add
jl
push
add
add
insb
gs
jae
dec
jne
gs
outsl
mov
jo
jb
push
je
imul
je
adc
je
inc
insl
fistps
sub
push
imul
das
insl
or
and
inc
jae
out
outsl
in
cs
imul
insb
je
inc
jns
adc
mov
add
arpl
push
arpl
outsl
outsb
out
mov
ja
fs
outsl
push
cmp
aaa
jae
add
popa
push
outsl
push
xchg
xchg
fwait
std
jbe
insb
outsl
mov
popa
outsb
fs
jge
insl
insb
xchg
jb
mov
jb
outsb
fsubrs
jae
pusha
gs
push
sub
sbb
imul
adc
aas
fwait
in
lcall
jo
adc
mov
jnp
xchg
gs
insl
inc
pand
shlb
push
pop
fmuls
xchg
ds
gs
fwait
jnp
and
push
popa
imul
mov
cmp
ret
nop
mov
stos
ss
fcmovnbe
xor
sbb
bound
aaa
adc
mov
pop
dec
dec
imul
popa
rclb
je
pop
inc
insb
mov
add
sbb
xor
loopne
jle
add
popa
out
insl
xchg
gs
ret
clc
mov
mov
fdiv
outsb
adc
xor
imul
xchg
notb
adc
je
bound
jo
outsb
imul
push
fwait
jnp
inc
mov
dec
fs
pop
jbe
inc
jne
and
loopne
jo
stc
cwtl
fldt
inc
jbe
and
int
insb
xchg
xor
imul
xchg
into
mov
pop
adc
sub
insb
sbb
ja
push
pop
je
jne
dec
lock
sti
shlb
sub
and
jo
mov
push
mov
or
or
sub
jb
daa
ja
arpl
adc
inc
push
das
dec
mov
pop
je
adc
sbbb
popa
mov
inc
mov
out
sbb
dec
insl
xchg
push
add
in
arpl
pop
inc
shlb
insl
data16
pop
mov
int
lea
jmp
aad
jno
mulb
or
leave
pop
insb
mov
jo
adc
mov
cmp
xor
imul
pop
aam
sbb
int3
insl
leave
frstor
jns
mov
imul
fndisi(8087
cmpsb
jo
je
push
or
jp
xchg
adc
mov
jle
push
bound
pop
sbb
imul
sbb
test
xor
sahf
jae
jbe
fadds
inc
vmwrite
dec
jae
rcrl
rcll
pop
test
push
cmp
jo
data16
dec
add
test
inc
jne
int
dec
mov
rcl
adc
or
inc
pop
mov
xchg
das
or
fwait
shll
sbb
lds
and
jle
adc
mov
push
pusha
sub
inc
insb
test
fwait
in
dec
add
dec
xorl
inc
or
mov
xchg
xlat
jns
inc
or
scas
aas
test
sbb
ja
out
inc
jbe
mov
xchg
test
data16
mov
inc
fs
pop
xchg
push
out
push
jb
lea
push
outsl
fs
sbb
xlat
sub
or
inc
arpl
in
pop
int
or
sub
mov
sub
fidivs
in
inc
mov
loope
rorb
push
jb
inc
mov
arpl
push
outsb
test
jl
fs
dec
aas
push
adc
xor
push
cwtl
jne
outsb
in
adcb
inc
mov
aas
outsl
add
add
mov
xchg
add
inc
jo
pop
jg
mov
inc
jp
push
inc
add
adc
push
loopne
sidtl
add
add
mov
cmp
ds
adc
inc
add
jne
aaa
or
push
add
ja
push
xor
cmp
das
or
lds
push
mov
mov
xor
pop
push
add
iret
divb
bound
push
jo
push
or
inc
inc
out
cs
adc
jmp
arpl
pusha
sub
add
pop
xor
aam
iret
jbe
jb,pn
iret
or
gs
inc
jae
dec
rcrl
or
clc
negl
lods
fs
dec
js
and
add
add
add
add
and
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
sbb
add
add
mov
add
add
add
add
js
add
add
add
sbb
add
mov
add
call
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
addb
add
add
add
aas
add
add
add
add
add
add
add
fadds
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
js
imul
add
add
outsl
add
je
ja
popa
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
js
imul
add
add
jae
push
ja
outsl
add
jns
and
push
add
popa
add
insl
add
js
jb
add
add
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
and
inc
add
je
inc
add
data16
outsb
add
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
cmp
xor
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
add
and
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
js
imul
add
add
outsl
add
je
ja
popa
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
js
imul
add
add
js
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
js
imul
add
add
jae
push
ja
outsl
add
jns
and
push
add
popa
add
insl
add
js
jb
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
and
push
add
inc
add
add
dec
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
movsb
add
movsl
movsb
add
mov
add
movsb
add
mov
movsb
add
fisubl
add
movsb
add
push
movsl
add
add
add
adc
add
add
add
push
movsl
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
je
inc
insl
jo
push
add
dec
jae
outsb
jne
add
add
add
add
xor
sub
add
add
orb
add
xor
xor
or
xchg
testl
sub
add
xorb
add
pop
xor
xor
or
push
add
xorb
add
xor
and
cmp
cmp
cmp
dec
add
jae
outsl
add
add
add
add
add
xor
xor
or
xchg
testl
cmp
inc
mov
mov
mov
addb
xor
add
add
adc
out
hlt
cwtl
nop
fstpt
xchg
inc
scas
sub
or
dec
xchg
or
add
push
xor
adc
add
add
or
outsl
je
inc
outsb
arpl
push
pop
or
xor
xor
xor
xor
pop
pop
or
xor
xor
xor
xor
xor
adc
add
add
or
jne
push
outsb
imul
xor
or
xchg
testl
add
orl
add
push
int
mov
jle
sub
fcmovb
inc
sub
xor
cmp
jb
mov
mov
xchg
jbe
lock
je
dec
push
inc
dec
in
jo
pop
iret
fidivs
test
pop
pop
jmp
jnp
mov
gs
popf
jge
movsl
cmpsl
or
sbb
and
imul
push
mov
push
xchg
push
ret
sti
add
mov
xlat
leave
xchg
out
fidivrs
dec
test
add
add
add
inc
push
add
add
xor
adcb
in
sub
add
arpl
adc
adc
add
add
or
outsl
je
inc
outsb
arpl
adc
aaa
insb
add
iret
mov
hlt
xor
dec
xchg
or
add
inc
add
xchg
jecxz
clc
cmova
sub
mov
jmp
dec
test
jne
daa
and
mov
leave
push
ret
adc
jle
cmpsb
mov
repnz
push
xorb
call
gs
lock
xor
add
add
add
add
cmp
scas
sahf
hlt
nop
out
mov
pop
aad
or
dec
xchg
or
add
push
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
xor
pop
or
xor
xor
pop
pop
or
xor
xor
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
add
add
sub
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
outsb
gs
sub
sbbl
testl
add
orl
adc
sub
dec
pop
das
dec
xchg
imul
xor
bound
push
xor
ret
sbb
les
divb
fstps
scas
mov
jbe
icebp
test
imul
dec
dec
sub
pop
in
sub
subb
sub
stos
mov
xchg
push
out
loopew
ret
sahf
pusha
cmp
loop
push
mov
jnp
sub
add
shll
push
or
push
add
add
xor
xor
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
add
adc
add
add
xor
xor
push
add
pop
add
xor
xor
mov
and
je
cmp
das
arpl
jbe,pn
jb
jae
outsb
arpl
das
je
jae
arpl
arpl
xor
push
add
and
or
or
or
push
add
xor
push
add
sgdtl
incl
add
push
shlb
push
add
adc
xor
xor
xor
add
push
push
push
inc
xor
or
xchg
testl
add
push
lds
and
or
mov
add
adcl
sub
pop
pop
popa
mov
add
xchg
xchg
mov
sbb
jmp
mov
ss
cwtl
dec
in
mov
inc
sbb
lea
cli
aad
add
xor
mov
daa
repnz
dec
add
dec
cmpl
push
loopne
loopne
xchg
movsb
xchg
sahf
pop
or
loop
mov
pusha
loope
lods
sub
movsl
dec
fs
sbb
lods
cmp
aad
and
lcall
inc
or
mov
sbb
mov
jmp
iret
leave
add
mov
ds
jb
mov
sahf
sub
mov
cmp
dec
xchg
add
stc
pop
push
hlt
sbb
sti
cmc
lods
xchg
mov
push
andb
sub
add
jmp
js
roll
pop
mov
xor
add
add
adc
sbb
inc
neg
insl
dec
or
push
or
xchg
testl
xor
xor
push
add
push
adc
pop
inc
xor
push
add
adc
gs
gs
and
jo
xor
adc
add
pop
adc
inc
jne
bound
jbe
insb
insb
xor
xor
or
push
push
push
xor
push
add
adc
push
and
jb
imul
outsl
outsb
xor
xor
add
push
push
push
and
gs
popa
insl
jo
outsb
and
xor
pop
or
xor
xor
xor
xor
or
xor
xor
xor
xor
or
or
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
xor
push
or
xchg
testl
xor
add
add
int
scas
or
lods
xchg
mov
icebp
ffreep
movswl
mov
mov
test
mov
mov
imul
sahf
movswl
in
js
ja
jle
cmp
xchg
scas
or
xchg
lret
sub
mov
pop
pop
sbb
lahf
cli
das
imul
mull
add
jg
push
jecxz
pusha
in
inc
sbb
mov
mov
xchg
add
and
xor
push
sub
xchg
adc
das
stos
out
ret
sub
mov
xchg
sbbl
jne
cmp
xchg
adc
push
rorl
inc
dec
fnstsw
jl
ds
rcrl
js
lahf
xor
icebp
out
sbb
les
pop
mov
cmc
out
jl
jge
bound
cmc
dec
or
shlb
push
test
int
mov
out
mov
fldenv
adc
mov
sarl
mov
fdivs
xor
or
push
add
add
xor
xor
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
push
add
adc
add
add
xor
add
incl
add
xor
add
pop
add
xor
xor
mov
xor
je
cmp
das
arpl
jbe,pn
jb
jae
outsb
arpl
das
push
push
push
imul
jo
outsb
addr16
inc
arpl
xor
push
add
and
push
or
push
add
xor
push
add
sgdtl
incl
add
add
xor
add
adc
xor
xor
push
add
adc
push
inc
xor
xor
sub
xor
dec
xchg
or
add
addl
sbb
mov
sub
sbb
int
mov
fisttps
sub
adc
add
or
add
mov
leave
xchg
dec
lcall
aaa
and
xor
mov
call
push
xchg
dec
and
test
mov
inc
repz
out
fstps
mov
popf
mov
loope
mov
iret
or
lock
sub
cmp
sbb
daa
idivl
dec
xor
add
sub
push
xor
adc
add
add
or
outsl
je
inc
outsb
arpl
adc
out
hlt
cwtl
nop
fstpt
xchg
inc
scas
sub
or
or
xchg
testl
push
or
push
add
xorb
add
add
add
sbb
or
xchg
testl
push
add
xorb
add
pop
push
or
xchg
testl
cmp
jns
scas
sahf
push
push
cmc
jne
or
dec
xchg
or
add
subb
push
jo
inc
pop
sbb
ficomps
lock
mov
sbb
daa
lods
inc
cli
pop
insl
idivl
in
adc
scas
inc
cmp
jae
sub
mov
and
inc
add
pushf
jl
mov
je
arpl
add
inc
push
sub
fnstcw
push
xchg
dec
enter
sbb
mov
mov
xor
inc
mov
addb
xor
sub
add
push
xor
add
add
xor
push
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
add
cmp
scas
sahf
hlt
nop
out
mov
pop
aad
or
add
sbb
sbb
or
xchg
testl
xchg
testl
xchg
testl
xor
xor
xor
cmp
xor
pop
xor
push
or
xchg
testl
gs
shrl
mov
rorl
pusha
dec
xor
dec
xchg
or
add
add
xchg
ja
repnz
dec
jmp
in
xor
xchg
mov
xchg
add
mov
lret
sar
dec
inc
movsl
pop
in
aad
faddl
sub
mov
movsl
sub
fisttpl
cmp
stc
and
or
jno
mov
cmc
xchg
fdivs
int3
push
mov
lods
imul
inc
ja
and
call
shl
add
xor
adc
add
add
push
inc
inc
push
and
test
jg
addr16
pop
inc
stos
or
dec
add
or
cmp
add
pop
movl
push
pop
push
pop
adc
mov
sub
ss
add
adc
sarb
add
add
pop
and
cmp
or
or
add
pop
push
or
daa
or
or
dec
xor
jle
add
push
movzwl
sbb
jmp
push
dec
add
pop
insb
add
adc
or
sub
dec
adc
andl
adc
adc
cmp
cmovle
push
cmp
adc
push
adc
adc
push
cltd
dec
xor
xor
inc
popa
sbb
and
push
jp
xor
and
je
out
add
or
or
xor
cmp
push
sub
mov
add
inc
arpl
pop
adc
jl
cmc
sbb
sub
jne
aaa
add
mov
pop
insb
push
add
push
sub
adc
bound
sbb
sbb
mov
add
mov
or
pop
aaa
push
sub
push
addb
sbb
jp,pt
fwait
and
bound
push
push
and
jns
mov
or
aas
aas
mov
sbb
adc
pop
push
pop
cmp
jbe
push
add
dec
sahf
or
push
inc
sbb
sub
lcall
adc
inc
inc
sbb
adc
pop
dec
insl
adc
add
and
js
inc
or
sbb
adc
sub
mov
inc
push
lock
or
inc
mov
adc
stos
or
imul
or
add
es
mov
daa
cmp
sbb
push
pop
jns
adc
adc
je
gs
sub
cmp
add
pop
sub
inc
pop
add
adc
add
sbb
leave
push
aaa
sbb
cmp
jno
arpl
lods
sub
test
push
and
aas
sbb
mov
push
push
pop
test
or
jl
adc
pop
sub
xchg
mov
cmp
add
and
adc
adc
inc
mov
imul
sbb
jle
dec
add
xchg
dec
jne
push
ds
add
sbb
adc
out
pop
pop
outsl
inc
enter
subb
jnp
sub
sbb
add
adc
mov
xchg
or
outsl
cmp
and
xor
imul
or
inc
add
pop
pop
push
add
add
adc
fcompl
aas
add
or
push
cmp
sub
inc
jb
dec
cmp
pop
add
sbb
cltd
push
push
jb
add
cmp
or
adc
aas
xor
gs
or
jo
mov
sbb
pop
xchg
es
or
mov
and
adc
xor
add
sub
push
sbb
push
orps
add
cmp
push
add
sub
jg
fdivl
adc
or
jp
add
and
dec
lret
or
cmp
add
pop
stos
pop
xor
or
add
push
add
adc
or
bound
lods
xor
test
sbb
push
or
sub
sbb
add
add
es
sub
addr16
dec
xor
add
inc
aaa
fwait
mov
pop
movsb
inc
inc
imul
sub
add
pusha
jno
sub
pop
imul
mov
or
or
orl
pop
xor
sub
and
nop
cmp
or
adc
and
sbb
mov
jae
js
and
sbb
and
fs
sbb
and
or
jb
add
or
adc
ds
sub
insb
cmp
adc
jno
sub
pop
or
or
add
mov
adc
mov
inc
xor
dec
adc
or
inc
movlps
and
pop
cmp
push
dec
push
bound
add
sub
xchg
pop
dec
fldt
dec
sbb
lods
xor
jg
dec
sbb
inc
inc
outsb
xor
imul
aaa
cmp
xchg
sub
das
add
or
sbb
or
sub
adc
add
mov
mov
fwait
dec
mov
sub
sbb
or
push
and
pop
push
sbb
xor
adc
xchg
push
aad
push
sbb
add
cmp
lods
jb
and
mov
wbinvd
and
push
add
sbb
daa
adc
sub
jnp
add
outsb
or
mov
and
push
push
or
and
sub
adc
adc
add
mov
add
xor
sub
mov
mov
loopne
fisttpll
mov
.byte
add
pop
and
xchg
jne
pusha
pop
in
out
jns
add
mov
add
push
add
out
call
jmp
imul
outsl
mov
add
add
call
incl
pop
jmp
sbb
push
push
adc
inc
leave
ret
xor
jns
inc
push
cld
mov
pop
sbb
or
call
xchg
sbb
dec
dec
inc
fiadds
jb
fldl
cli
dec
push
push
in
or
in
call
cmpb
pop
adc
jns
and
xor
sub
mov
xchg
js
sub
inc
inc
decl
ret
inc
popa
add
adc
add
sub
pop
orl
adc
add
push
outsl
fisttpl
add
push
add
xor
mov
fucomp
add
dec
adc
insl
inc
dec
inc
in
push
pop
mov
fldt
fwait
mov
push
ret
inc
es
clc
cmpb
pop
adc
mov
push
addb
inc
inc
add
or
jo,pt
jne
scas
std
mov
add
roll
jno
enter
aas
leave
in
inc
cmp
es
sub
dec
sub
arpl
sub
lcall
pop
dec
pop
and
dec
mov
cmp
aaa
popa
pop
inc
mov
mov
dec
aas
mov
daa
cld
aas
pop
pop
pop
pop
inc
dec
loopne
rorl
arpl
dec
inc
mov
ret
dec
pushl
push
inc
pushl
push
pop
hlt
lea
push
lea
push
push
imul
les
push
dec
and
sti
out
and
lea
push
push
shrl
daa
push
push
xchg
push
and
push
push
push
insl
fsubs
and
xchg
pop
push
push
pop
pop
cmp
mov
call
inc
dec
arpl
testl
gs
push
pop
and
in
inc
daa
dec
dec
push
xor
sbb
fdivrs
add
das
sbb
fdivl
and
dec
inc
decl
sub
mov
mov
in
push
cmp
cld
repz
call
jo
xchg
mov
dec
mov
push
insl
sub
add
inc
mov
dec
inc
dec
cmp
cld
xchg
pop
mov
mov
jbe
adc
lcall
xor
mov
mov
fistpl
mov
adc
xchg
clc
pop
out
clc
mov
test
in
sub
jmp
pop
pusha
and
shrb
jno
pop
mov
jo
push
jno
pop
add
and
outsb
fbstp
mov
roll
xor
fucomp
outsl
pop
mov
push
imul
out
neg
mov
lea
dec
mov
jle
sti
out
movsb
add
dec
mov
push
sbb
inc
jno
mov
in
fistpll
ljmp
dec
cmp
out
jae
imul
dec
addr16
insb
popa
rorl
mov
pusha
push
shll
test
and
add
out
repnz
jge
cmp
inc
inc
fidivrl
inc
enter
sbb
add
mov
sarb
aas
jp
add
jns
pop
add
adc
jp
cmp
cld
jp
push
dec
sub
dec
into
das
dec
out
imul
rolb
not
xor
dec
cmp
xor
push
push
sti
in
or
inc
or
pop
jg
lods
pushl
data16
add
test
adcl
in
jb
push
and
add
lds
arpl
inc
or
lock
push
imul
fldt
frstor
rorl
pop
loopne
pop
or
imul
lret
loope
jg
mov
push
js
cmp
xor
cld
jmp
and
fwait
loope
jne
push
add
adc
rorb
out
cld
call
decl
xor
imul
sbb
sub
cmc
ret
push
push
fisubrl
js
sub
lds
cmpb
decl
or
add
or
and
pop
dec
or
pop
sbb
and
js
xor
mov
cmc
aaa
imul
scas
loop
jae
repz
push
mov
adc
push
jmp
xor
xor
add
mov
pop
dec
jb
test
je
sti
xlat
js
cmp
fsubr
mov
ljmp
inc
xor
jbe
mov
mov
addr16
pushl
adc
clc
es
sbb
pusha
sub
add
add
sub
arpl
fcomp
mov
popf
push
pop
mov
xor
push
scas
cmp
out
aas
jmp
push
push
xor
mov
or
dec
cmp
pusha
pop
clc
outsl
test
add
push
jb
fidivl
dec
dec
dec
lods
add
mov
lods
das
outsb
inc
fs
cmp
add
test
out
icebp
stc
dec
or
xchg
inc
clc
pushl
data16
outsb
and
and
adc
insb
outsl
out
pop
in
inc
mov
push
pop
imul
pop
rorb
jo
jg
mov
push
test
decl
jmp
popl
or
cmp
sbb
lcall
popa
sub
mov
dec
push
mov
sar
and
jbe
mov
cs
push
loope
jb
mov
je
jns
dec
and
pop
or
pop
pop
push
dec
xor
out
adcl
and
jg
and
jp
adcb
jle
and
mov
or
lock
sbb
movsb
subl
cli
dec
mov
daa
out
mov
cmp
mov
cmp
insb
inc
test
addr16
decl
add
jb
orb
cmpb
mov
dec
rclb
mov
ficoms
arpl
adc
test
mov
mov
aas
dec
push
add
pop
mov
mov
mov
in
cmp
dec
mov
clc
sbb
ss
adc
dec
jbe
aam
dec
adc
mov
xchg
cs
jmp
ja
mov
cld
outsl
fs
xchg
dec
or
inc
inc
xor
ss
push
inc
push
push
dec
mov
push
xor
push
aad
pop
loop
adc
dec
inc
xor
arpl
jp
xorl
adc
jnp
mov
xor
xor
xor
scas
jg
pushl
mov
add
xlat
out
imul
mov
in
sub
lea
dec
dec
adc
add
mov
xor
roll
cmp
and
adc
outsl
shrl
jno
push
mov
aaa
sbb
or
jae
lock
nop
xor
sbb
js
inc
push
dec
aas
xchg
std
mov
sbb
in
add
jl
int3
orb
xchg
fdivr
jae
add
aas
int3
pusha
orl
add
in
cmp
pusha
in
mov
sub
push
ret
add
int3
dec
int3
arpl
mov
add
int3
test
add
jo
cmp
das
lea
rolb
jnp
xor
add
mov
mov
push
int3
or
cmpsl
loopne
xor
inc
outsb
xchg
mov
xchg
or
adc
fcomip
in
mov
cmp
insb
push
bswap
jb
cmpsb
sbb
mov
xchg
sbb
iret
push
int3
xchg
stos
data16
fstpt
cmc
int3
xchg
pop
int3
mov
xchg
in
inc
add
and
xor
int3
jecxz
int3
in
mov
pop
ret
mov
push
int3
stos
lahf
int
fwait
test
mov
jne
cltd
fcomi
int3
loope
subb
dec
xchg
int3
or
pusha
dec
in
ja
pop
and
leave
and
add
mov
jnp
jg
rcll
or
push
mov
ret
and
xor
aas
sbb
jmp
pop
in
push
sbb
lahf
adc
sahf
xor
cmp
add
outsl
mov
int3
add
pop
inc
push
pop
das
xor
push
jbe
daa
push
sub
int3
mov
int3
jecxz
cmp
add
pop
int3
jnp
imul
sbb
sbb
jl
pop
imul
fcomip
jne
or
rcrb
inc
jle
repnz
dec
popa
mov
add
inc
fiaddl
mov
sbb
sbb
cmp
aas
cmp
sbb
test
int3
jbe
loopne
int
inc
mov
das
in
pop
and
sub
je
sahf
jae
enterw
cmovnp
sbb
jge
xchg
jp
pop
adc
loopne
loop
mov
insb
fmuls
mov
push
std
icebp
out
int3
or
js
cmpsb
clc
stc
add
sbb
sub
jecxz
dec
add
adc
roll
insl
inc
inc
add
sbb
je
or
jnp
loope
fcomps
es
jle
fistpl
fildl
xchg
xor
and
arpl
es
fs
cmp
imul
xor
xor
mov
in
mov
das
push
add
fidivl
jle
fldt
dec
add
cmp
int3
shll
gs
add
cmpsb
test
dec
fstl
mov
std
inc
outsb
sbb
push
jo
sbb
or
repz
xchg
int3
jge
xchg
jae
sbb
xor
dec
dec
cmp
add
jne
int
jbe
lret
inc
fstp
xchg
pop
in
push
inc
cmpxchg
fwait
into
cmpsb
xorb
fdivrs
test
outsl
mov
xchg
mov
shrb
or
sub
insb
add
dec
movsb
leave
push
cmp
jp
in
je
ss
push
jle
outsl
gs
loop
mov
sbb
out
ja,pt
ret
test
jl
pushf
loop
mov
inc
cs
int3
mov
jecxz
xor
lcall
pop
add
ljmp
dec
jb
inc
or
and
inc
jns
popa
or
into
je
adc
mov
sbb
jno
sub
jecxz
aaa
pop
cmp
loopne
jmp
xchg
cs
insb
sub
push
mov
jo
fs
sbb
push
movsl
add
xlat
xor
je
mov
notl
int
dec
cmp
les
and
mov
and
xor
in
xor
arpl
lods
sbb
xor
imul
mov
mov
add
hlt
xchg
popf
lods
sti
cmp
mov
jne
pop
jmp
iret
push
add
ljmp
sahf
or
outsb
out
push
movsl
xchg
jo
sbb
lock
pop
sti
add
fcompp
ss
adc
and
cmp
sti
xor
or
jle
add
daa
pop
out
jecxz
adc
repnz
dec
test
or
push
cmc
dec
movsb
fwait
iret
cmp
mov
dec
jns
mov
das
imulb
testl
fnsave
jmp
int3
sub
enter
sbb
into
icebp
stos
clc
sub
dec
clc
fsubp
or
pop
test
sbb
or
roll
movsl
aaa
pop
in
mov
add
xchg
or
jne
jbe
shl
clc
push
pop
jge
mov
int3
outsb
cld
pushf
sbb
inc
mov
inc
jg
mov
fcompl
xchg
stc
jmp
mov
loopne
push
jmp
arpl
in
dec
mov
adc
fmull
sbb
aad
inc
sub
sarl
mov
iret
sbb
dec
jae
cltd
lock
fucomp
rol
addr16
iret
bound
das
sbb
cmpsl
aas
xchg
aad
or
dec
sbb
dec
mov
rorb
sbb
adc
jp
movsl
adc
pop
mov
sbb
sbb
insl
sub
xchg
jg
pop
inc
add
clc
negb
or
cmpsb
cmovge
jnp
mov
cmpb
mov
sub
ret
mov
fidivrs
or
mov
mov
push
add
mov
cmp
into
aaa
push
jmp
shll
fcmovne
scas
xchg
insb
in
mov
cmpps
add
jg
int3
push
lret
cmp
mov
pop
or
jns
arpl
jo
fmull
mov
ret
jmp
hlt
mov
iret
lahf
xchg
jl
adc
dec
lea
pop
add
mov
cmp
cltd
int3
inc
mov
ret
mov
jo
pop
pop
xor
xchg
ret
cwtl
sbbb
fstl
inc
loop
lock
adc
jo
push
cmc
add
je
mov
test
adc
in
int
xchg
test
in
push
and
cmp
shr
fs
push
sbb
add
push
add
inc
out
add
mov
dec
jne
lret
fbld
mov
stos
add
mov
and
dec
subl
mov
pop
push
test
mov
cwtl
or
xor
jl
cmp
fcmovbe
jecxz
or
test
test
inc
jl
push
xchg
xor
dec
or
xchg
addr16
insb
add
loope
jo
sub
adc
data16
std
cmc
mov
cmp
push
cmpb
test
int3
add
in
shl
sub
andl
adc
or
jae
inc
cmpsl
dec
sub
pop
lock
mov
push
rcrb
adc
shrl
xchg
sbb
jge
and
mov
or
mov
lahf
push
cmp
out
shl
mov
repnz
inc
testl
cmpb
das
push
scas
xchg
jno
lock
fwait
jp
xchg
test
push
sahf
cltd
stos
rorl
mov
sub
xchg
shll
push
pop
adcb
rcrl
mov
bound
cltd
sbb
xchg
sbb
push
pushl
in
sbb
addl
or
ljmp
cmp
push
in
insb
sub
sar
push
pop
scas
adc
xchg
xorb
repnz
mov
sarb
sbb
cwtl
pushf
adc
and
pop
faddl
mov
pcmpeqd
jle
mov
push
push
int3
addb
jle
call
dec
clc
mov
jnp
add
and
mov
xchg
ret
leave
jge
mov
mov
inc
add
push
fcoml
push
jge
mov
enter
mov
sbb
sbb
rep
push
or
jge
decl
mov
cmp
enter
jmp
sahf
xor
test
xchg
push
sbb
dec
rcrb
jecxz
jg
cli
into
in
and
jo
cwtl
nop
adc
iret
cmpsl
stos
aas
inc
data16
shll
mov
outsb
popf
mov
mov
sub
sahf
pusha
xchg
inc
inc
adc
popf
or
pop
mov
in
push
push
loopne
lar
imul
push
sar
loop
lahf
inc
popa
enter
js
or
cmp
cmpsl
mov
out
or
xor
addr16
pop
mov
fwait
lcall
add
pop
addr16
xchg
jbe
rclb
jae
push
pushf
mov
test
add
sbbl
dec
mov
dec
dec
dec
ljmp
scas
subl
aaa
sbb
sbb
jmp
fcmovnb
adcb
sbb
xor
nop
adc
add
subl
pminub
dec
mov
mov
mov
test
rcrl
jmp
lahf
push
cs
std
sbb
push
jno
leave
fisttps
mov
iret
imul
pop
mov
cmc
shlb
ljmp
cmp
js
lock
jbe
mov
lret
lock
inc
out
insb
aas
movl
shlb
xchg
loope
adc
or
aaa
sub
js
sub
fs
popa
fs
fldenv
cmpsl
dec
out
cmp
cli
jo
pop
aad
cmpl
add
ja
adc
call
mov
insb
stos
cmp
add
xchg
cmp
pop
hlt
sub
push
fdivl
mov
pop
jle
pop
mov
inc
js,pt
je
arpl
iret
sbb
test
in
stos
add
mov
aad
and
lock
lahf
dec
movsb
shr
mov
test
mov
xchg
xor
fstpt
stc
and
fcomip
cmp
loope
mov
cmp
lods
fiadds
fnsetpm(287
jecxz
mov
es
ds
lods
loopne
and
mov
adcl
lea
lret
cs
inc
lret
sub
ds
stos
mov
fnstcw
nop
lods
or
cmp
pminub
xor
lock
adc
sti
adcb
mov
lea
imul
neg
sbb
adc
lock
dec
or
mov
jge
sub
aas
cltd
pop
cmp
jno
icebp
xor
xor
addl
rorb
cs
pusha
xchg
lcall
scas
and
clc
loopne
mov
cmpl
je
lcall
sbb
xchg
or
sbb
lock
jae
xlat
popa
scas
nop
js
bound
xor
and
fdivrp
sbb
mov
jno
add
scas
jae
mov
adc
cmp
inc
xor
das
cwtl
test
cmp
adc
mov
enter
popa
hlt
sbb
adc
loope
lea
xor
sarb
cmc
ret
jge
lock
adcb
dec
push
push
adcb
cmp
cmp
test
sbbb
aad
inc
push
mov
sbb
add
aaa
or
pop
sbb
in
mov
loopne
insb
into
adc
inc
jb
xchg
push
dec
cmc
sub
filds
push
and
sbb
mov
xchg
roll
je
jecxz
fwait
out
js
jge
jecxz
int
mov
outsb
xor
mov
xchg
cmp
les
mov
shlb
dec
mov
xor
push
nop
or
mov
jnp
jae
pop
dec
mov
out
inc
ljmp
in
out
lods
inc
in
fstpl
js
xchg
ret
jo
out
arpl
inc
aaa
and
pop
mull
xor
sbb
div
lock
loopew
call
cmp
je,pt
stos
add
push
and
movsb
out
adc
pushf
imul
add
xchg
add
out
enter
hlt
movl
lret
jmp
xor
dec
jbe
fiaddl
psubq
fnstenv
arpl
pop
bound
sbb
mov
out
pop
ds
shl
fdiv
outsl
movsb
push
add
ss
adc
sub
inc
pop
ljmp
and
lea
insb
jg
daa
movsl
push
mov
popa
in
data16
loopne
jbe
shll
out
imul
js
arpl
fisubrl
sub
adc
jp
nop
arpl
sbb
sbb
out
mov
cmp
xor
jns
add
clc
popa
xchg
filds
mov
out
pop
jp
clc
jb
dec
sub
ror
push
push
addr16
nop
es
push
int3
sbb
sti
sbb
push
lcall
cmp
mov
mov
mov
fisubl
lret
in
int
lret
test
ds
cmp
sbb
call
xchg
loop
or
movsl
sub
test
js
and
xchg
bound
pop
jl
sub
pop
jge
clc
jbe
mov
jns
dec
popf
fcom
ret
cmc
jno
push
xchg
sub
mov
test
xlat
sbb
push
mov
je
loope
jge
sub
pusha
inc
xchg
lods
out
add
adcb
dec
clc
adc
add
or
push
cwtl
xchg
stos
mov
xchg
xorl
incb
sub
cmp
js
js
xor
jmp
xor
shlb
outsb
loop
std
je
jmp
dec
inc
jecxz
std
les
fwait
in
and
roll
js
inc
push
daa
fcmovu
push
adc
jbe
int
test
push
aaa
shll
sub
jb
mov
clc
xor
popf
rcl
icebp
ja
jge
mov
popf
dec
cli
xor
fstpt
div
xchg
xlat
orb
cmp
pop
out
fists
cmp
aam
push
pushl
cmp
lahf
cmp
pavgw
adc
cmp
pop
mov
loop
mov
mov
inc
pop
dec
jge
fnsave
rcrl
xor
out
dec
xchg
loopne
push
xor
loop
add
pop
test
and
fsubr
in
in
outsb
jno
or
sub
ret
xor
cmp
pmaxsw
sar
out
adc
lea
inc
adc
rcpps
cmp
dec
daa
test
xor
movsl
push
lock
loope
cmp
insb
sbb
sub
aam
lcall
pop
jo
movsb
frstor
mov
xchg
sbb
test
inc
sub
jne
pop
push
fsubrs
xor
push
pop
shlb
pop
ss
adc
mov
sbb
scas
jp
lods
ret
fists
sub
cmp
mov
lock
jns
jle
clc
xor
mov
adc
pop
sub
mov
iret
push
pushf
mov
add
adc
pop
iret
mov
cmpsb
addr16
pop
es
pop
cmc
jmp
test
daa
aam
push
fisubl
jl
daa
mov
shlb
jmp
push
out
ljmp
psubsb
je
cwtl
pop
xchg
in
add
ljmp
decl
and
shlb
cli
sub
add
xchg
dec
mov
clc
pop
roll
and
incl
and
js
add
faddl
movsl
mov
or
lcall
nop
sbbb
adc
test
loop
adc
nop
clc
cs
pushl
push
js
dec
sbb
jns
test
loope
push
add
mov
cmp
pop
push
add
out
add
jne
imul
inc
fdivr
pop
shrb
xor
add
push
xor
pop
inc
in
movaps
add
sub
inc
adcl
int3
dec
xor
inc
push
fcoml
rcl
or
dec
inc
loopne
incl
dec
dec
xor
jp
jp
clc
mov
jp
loopne
testl
ja
add
clc
push
orb
int3
xor
mov
jmp
add
jle
push
pop
popa
bound
sarl
pushl
cli
inc
dec
cmp
and
mov
dec
mov
inc
add
mov
in
sbb
jne
lret
jmp
jae
jb
mov
adc
mov
outsl
in
jg
xor
mov
xor
add
dec
sbb
adc
pushl
inc
dec
mov
add
mov
rol
pop
jns
dec
xor
cs
sti
inc
ss
mov
push
cmp
or
pushl
insb
inc
inc
dec
pop
mov
dec
arpl
inc
cmp
clc
add
mov
inc
cmp
addl
mov
inc
push
aaa
add
pop
pop
xor
dec
arpl
mov
inc
js
data16
addb
outsl
mov
or
subl
push
push
jae
repz
fdivrl
int
data16
lock
sbb
popa
sbb
mov
pop
incb
lock
or
push
fs
inc
insl
jo
pop
clc
fs
dec
insb
inc
les
lcall
inc
sbb
sub
push
sub
call
jns
cld
loope
add
sub
xor
dec
testl
lret
push
inc
outsb
add
push
in
push
xor
in
jbe
mov
sbb
jns
ds
loope
mov
pusha
aas
and
js
or
cmp
sbb
pop
cs
pop
push
mov
adc
out
push
inc
push
aad
decl
lret
sub
push
fs
jns
mov
lret
xchg
jmp
lock
loopne
jg
in
js
ret
outsl
adc
vmwrite
push
dec
mov
lea
and
push
arpl
pop
xchg
imul
es
push
dec
arpl
mov
in
insb
push
adc
inc
test
fsubrl
je
add
pop
inc
push
inc
cld
mov
test
xor
add
ficomps
lsl
sti
inc
inc
out
outsb
xor
outsl
or
add
fs
gs
xchg
notb
push
dec
push
cld
div
jl
mov
mov
inc
sbb
adc
jmp
jbe
pop
roll
mov
pop
push
push
std
jmp
fsubs
lret
pop
push
aas
in
mov
incb
cmp
inc
fcompl
out
and
cld
push
repnz
fs
scas
and
fldenv
sbb
push
das
mov
add
add
adc
mov
pop
jbe
clc
incl
clc
pop
adc
dec
mov
mov
js
sub
mov
xchg
idivb
je
add
out
dec
popa
cmp
in
jg
in
dec
dec
and
shll
fs
xor
leave
mov
jno
leave
dec
push
arpl
mov
jge
inc
repz
mov
arpl
das
jl
rorb
clc
cltd
add
sbb
and
and
xorb
adc
out
fwait
ss
outsl
jl
ret
mov
push
mov
insb
push
jne
jno
push
insb
push
add
rol
jge
pop
mov
adc
or
outsb
jb
and
dec
jle
loop
ja
sub
daa
push
pop
dec
mov
cld
fsubrs
mov
add
inc
xlat
push
xor
scas
add
inc
pop
sbb
fistps
cld
xor
add
repz
jmp
xor
scas
sbb
push
imul
fsubl
push
inc
dec
cmp
pop
mov
sub
dec
adc
cmp
or
add
ret
sbb
in
push
xor
mov
icebp
jle
sahf
inc
pop
in
subb
dec
add
add
add
aas
ret
outsl
add
sub
push
cmp
or
dec
ja
mov
inc
xor
outsl
jmp
mov
add
sarb
push
jp
incl
addb
sbb
add
or
call
fldl
loopne
push
pusha
xor
push
add
xor
cmp
aaa
xor
or
inc
add
daa
xor
add
add
jo
and
add
and
sub
pop
fldt
ficoml
sbb
or
cld
mov
push
adc
or
add
mov
test
add
nop
add
pusha
pop
xor
cmp
inc
inc
subb
dec
mov
mov
adc
sbb
dec
add
imul
fwait
imul
jo
or
add
nop
add
ja
insl
in
push
or
xor
and
sbb
push
dec
sbb
fistpll
add
sbb
sbbb
insl
mov
add
dec
add
js
pop
mov
arpl
xor
insl
lods
jge
inc
nop
pop
cmp
dec
pop
dec
inc
jns
ret
out
aaa
add
pop
pop
lret
jbe
pop
push
add
mov
push
adc
pop
sti
mov
pusha
xor
stos
mov
imul
sub
mov
dec
insb
loopne
addr16
pop
gs
mov
outsb
add
sbb
in
add
je
pop
xor
xor
push
rolb
outsb
sub
je
sbb
ror
fisubrl
cmp
mov
mov
out
rcl
add
or
scas
sub
sbb
push
push
push
mov
and
mov
lods
sbb
outsl
popf
add
push
cmp
cli
nop
loope
add
add
push
jae
addb
pusha
cmp
or
outsb
arpl
movsl
mov
outsl
or
dec
push
ss
test
fldt
push
insb
insb
dec
dec
xor
ret
nop
adcb
insl
mov
mov
and
jmp
inc
jno
dec
jg
std
add
in
mov
and
lds
xor
inc
add
pop
js
add
inc
sbb
jo
fiaddl
xchg
dec
pusha
out
insl
push
xlat
xor
inc
xor
addr16
fcomps
inc
cmp
add
add
fsubl
jae
rcrb
add
jnp
pop
mov
sbb
into
add
int
rcll
add
add
rcrb
loopne
enter
cmp
fidivl
in
mov
xor
sbb
ss
cmp
inc
jl
lock
lods
sub
push
rolb
test
movb
fcompl
mov
xchg
add
insl
jnp
cmp
dec
cmp
pop
sub
out
jg
ja
mov
xlat
adc
data16
xor
push
push
sbb
stos
adc
inc
inc
repnz
push
pop
push
or
ss
inc
jecxz
sub
inc
add
pop
mov
pusha
mov
mov
sbb
xchg
add
adcb
sub
and
shlb
imul
xor
push
pop
jmp
xchg
jae
fnsave
xor
fmul
dec
xchg
add
lods
inc
or
dec
int
jnp
ljmp
sbb
nop
mov
add
into
orb
sbb
sub
movsl
imul
imul
pop
mov
ret
xor
lods
mov
dec
sbb
push
pop
push
stos
cmp
loopne
jo
push
popa
add
pusha
sub
xchg
nop
jo
push
and
movsl
out
sbb
add
test
jae
add
cltd
ja
pusha
bound
adc
movsl
mov
jo
shlb
mov
push
inc
inc
inc
jb
dec
jno
ja
mov
out
add
xor
insl
loopne
pusha
inc
nop
mov
aad
push
ja
outsl
pop
inc
xlat
mov
jb
push
xor
lods
shrb
push
jo
xor
lea
cmp
popa
test
push
sbb
mov
pop
aaa
xchg
xor
jne
jo
fstl
fisttpl
fidivrl
dec
inc
pop
stos
aad
inc
mov
xchg
mov
rcrl
mov
or
cmpsb
mov
pop
add
add
imul
pop
in
add
out
xor
mov
stos
cmovl
mov
inc
in
or
mov
mov
xchg
jno
nop
or
mov
push
xor
jb
insl
xor
imul
inc
xor
cmp
or
mov
push
stc
cmp
movsb
xchg
mov
xlat
sbb
inc
push
es
xchg
testl
add
push
rorb
pop
lea
inc
ds
mov
imul
jp
push
dec
lods
aam
fcoms
pop
mov
das
add
gs
push
ja
movsb
cltd
cmp
lcall
dec
jg
jg
push
sub
jae
jb
cmp
push
gs
jae
jae
push
ret
cmp
mov
or
dec
inc
jo
jb
mov
cmc
push
adc
mov
shl
pop
or
iret
mov
jno
xor
mov
nop
cmp
xchg
or
mov
mov
mov
sbb
lcall
lods
ljmp
jbe
dec
inc
jo
jae
pop
mov
fs
lret
insb
lods
hlt
or
push
sub
fisttpl
add
lds
imul
popf
fdivs
push
scas
or
add
push
pusha
and
or
loopne
cmp
adc
add
jg
xchg
lods
xlat
hlt
add
addr16
pop
sub
push
dec
inc
xchg
sub
dec
sub
cmp
loopne
mov
mov
add
imul
push
add
add
jo
int
dec
mov
push
xlat
jge
pusha
cmp
and
aad
je
jns
add
lods
test
pop
xchg
jno
mov
push
inc
push
aam
sub
jl
dec
pop
jmp
pusha
sub
add
and
sub
notb
bound
nop
ret
pusha
rcrb
cltd
jno
mov
lcall
les
pop
or
push
jb
data16
cmp
iret
push
push
add
add
roll
lret
ds
rcrl
fcmovnu
jmp
xor
subb
mov
cmpsb
js
push
inc
flds
add
fwait
cmp
dec
rorl
pop
imul
or
cli
xor
inc
jmp
iret
push
rclb
setp
je
js
fidivs
jno
sbb
movl
ret
pusha
inc
mov
xor
sahf
dec
add
xlat
rolb
imul
jae
lret
jmp
push
jecxz
aas
jo
add
test
movsl
sbb
ss
or
sbb
aad
jp
xor
sub
repnz
sti
jg
test
jno
ja
inc
jns
fimull
pop
ret
mov
dec
pop
xorb
mov
push
rol
sarb
ja
roll
ljmp
adc
xlat
frstor
insb
xor
xor
xchg
pusha
enter
mov
scas
xor
dec
push
push
xor
add
fcmovnbe
add
pop
imul
iret
cmc
push
dec
cmp
jb
pop
xchg
mov
pop
pop
or
push
add
xlat
ficoml
in
lock
mov
popa
dec
shlb
or
xor
mov
and
and
popa
push
inc
leave
test
add
inc
push
pushf
insb
decl
mov
pusha
add
pusha
push
loopne
add
xorb
add
ljmp
dec
nop
sarl
add
add
push
and
adc
cmp
aas
add
push
add
mov
mov
sub
outsb
dec
inc
jae
or
nop
and
add
add
add
orb
sbb
add
mov
dec
add
sub
loopne
jg
jg
xchg
add
mov
add
inc
sbb
dec
cmp
and
rol
push
mov
xor
jbe
inc
xor
mov
rorb
lret
mov
add
and
or
add
pop
sbbb
add
push
xor
push
add
nop
add
addb
jo
mov
push
cmpsb
popf
cltd
cmp
dec
or
mov
lods
mov
add
push
insl
add
add
xor
or
xor
adc
cli
add
mov
add
pop
loopne
and
add
lods
add
xor
lcall
add
add
add
in
adc
sub
dec
dec
or
jbe
cwtl
or
and
bound
xlat
adc
push
mov
xor
add
add
mov
push
pop
pusha
mov
add
dec
out
ja
jae
mov
cmp
mov
addb
rolb
jo
add
loopne
cmp
xor
sarb
or
imul
fs
jno
mov
insb
test
pop
ja
push
out
lods
mov
xor
outsl
adc
or
pop
roll
mulb
imull
and
dec
les
or
jl
jge
outsb
int
sbb
dec
push
add
loopne
mov
xchg
mov
mov
push
xor
lock
dec
ret
cmp
dec
addr16
fmuls
sub
sub
cmp
and
test
loope
cmp
xor
lret
push
add
cmp
add
ret
out
lods
add
lea
adc
adc
xchg
mov
imul
movsb
and
push
dec
jg
pop
imul
pop
and
loopne
cmp
add
inc
sbb
xor
jae
pusha
lret
cmpl
push
sub
scas
mov
inc
pop
push
adc
add
xor
pop
shrb
mov
sbb
pop
jo
test
test
push
shld
sbb
sbb
push
xchg
add
loope
mov
mov
and
leave
mov
mov
js
fisttpll
add
loopne
dec
jo
sub
xor
mov
insb
gs
cmp
or
movsb
subb
icebp
shr
add
leave
push
xor
xorl
inc
push
xchg
or
lret
or
out
in
xchg
aaa
enter
mov
pop
jecxz
jmp
sbb
jne
mov
mov
mov
fs
inc
mov
push
fsubrs
or
jnp
inc
add
pop
jo
xorb
cmc
cwtl
mov
enter
test
push
cltd
stos
dec
fstpl
mov
and
lock
push
add
cmp
mov
cli
mov
inc
xor
adc
mov
int3
inc
mov
cmc
in
mov
pop
leave
push
jne
aad
arpl
lock
outsb
dec
fimuls
add
cli
outsb
test
inc
test
dec
jp
cmp
mov
and
push
pop
jae
pushf
mov
sbb
xor
mov
out
shll
jno
mov
push
sbb
xchg
sbb
das
adcl
or
fmuls
out
mov
out
xor
lret
ja
cli
aaa
loope
hlt
int3
jecxz
xchg
xchg
mov
sbb
out
lds
mov
mov
imul
fmul
or
inc
adc
xchg
mov
push
test
mov
int
add
add
add
push
push
sbb
mov
scas
in
adc
lock
push
ror
sub
cltd
or
mov
add
lea
shrb
inc
inc
fimuls
lret
dec
loop
mov
push
jmp
jmp
mov
pop
jge
push
addb
mov
enter
orb
inc
das
cld
and
sbb
dec
ds
mov
mov
cld
data16
je
lret
mov
push
data16
adcl
sarb
dec
cmp
fsubs
push
addr16
xchg
add
das
outsb
push
mov
jp
stos
ss
jne
aad
lcall
leave
mov
ret
add
xchg
sbb
pop
aad
mov
int3
inc
dec
mov
mov
sbb
pushf
loope
pop
fistpl
out
iret
jp
hlt
mov
enter
xor
cmp
cmp
mov
mov
rol
jno
pop
xchg
int3
jb
jle
cmp
xchg
sbb
jmp
scas
int3
dec
xor
fdivr
int3
popa
cs
js
mov
outsb
cmp
in
cmpsb
stc
hlt
fnstenv
push
xchg
popa
inc
popa
nop
sbb
int3
xchg
cmc
das
mov
popl
fcomps
or
pop
push
repnz
push
fisttpll
xor
int3
push
div
and
mov
mov
out
negl
and
fcompl
lahf
nop
jg
mov
push
or
sub
add
push
mov
mov
dec
addr16
outsl
pop
fs
call
xchg
inc
inc
lea
add
int3
xchg
icebp
cmpl
es
bound
mov
or
pop
push
add
mov
sahf
xor
pop
popa
divb
push
cmp
inc
pop
pop
cmp
shrl
push
and
rolb
imul
jbe
jno
push
dec
mov
fsubl
jg
or
punpcklbw
js
arpl
xchg
lock
jnp
fisubrl
sbb
pop
xor
mov
incb
push
test
inc
inc
jo
lahf
ficomps
jae
inc
ss
xchg
mov
sbb
imul
rolb
cltd
push
bound
sbb
jmp
flds
jo
cmp
pop
stos
mov
movsl
in
out
mov
or
and
xor
fptan
mov
arpl
mov
inc
ret
xchg
loope
add
mov
mov
in
mov
add
int3
dec
loopne
js
xchg
cwtl
adc
daa
or
iret
xchg
mov
js
or
push
adc
js
popl
sbb
and
pop
jge
sub
int3
test
repz
lock
fdivr
arpl
jae
xchg
lods
stos
mov
and
adc
sbb
push
cld
icebp
sub
mov
orb
xchg
loope
fisttpll
adc
push
push
xchg
cmp
xor
cld
mov
fdiv
xchg
push
mov
daa
pushf
test
cli
add
xchg
pop
iret
insl
enter
scas
sub
inc
jl
pop
xchg
jmp
int3
fisubrl
stos
mov
sti
push
sub
rep
int3
inc
jnp
add
inc
jmp
push
outsb
in
sahf
or
add
cs
adc
setno
add
inc
push
jge
rol
dec
add
mov
mov
cmp
mov
imul
flds
icebp
jae
pop
mov
or
sahf
pop
add
dec
inc
pushf
insb
ficomps
inc
loope
in
iret
or
cmpb
rol
daa
mov
stc
xor
push
inc
sub
movsb
jae
loopne
lret
mov
inc
mov
mov
mov
and
jbe
mov
cwtl
cltd
dec
lcall
sbb
adc
aaa
sbb
push
or
xchg
scas
es
mov
push
inc
test
xor
pop
xchg
xorl
and
mov
mov
adc
fcom
mov
adcl
lcall
xchg
stc
dec
xchg
sbb
bound
dec
bound
ret
sbbl
sub
mov
sub
jno
imul
xor
idiv
push
xchg
lcall
les
xchg
into
ss
adc
arpl
xchg
cwtl
jge
jl
sbb
xchg
mov
popa
dec
out
push
xor
loopne
add
push
cmp
sbb
pushf
insb
pop
jle
push
push
mov
and
scas
jecxz
es
xchg
inc
cmp
iret
pop
fisubs
test
lahf
rcrl
push
ror
out
sbb
pop
es
xlat
ss
jae
cltd
jnp
rcrb
stc
addr16
mov
fcompl
push
sub
cmp
dec
inc
loop
popf
fldl
add
jg
xor
cmp
fcmovnbe
mov
xchg
or
adc
inc
icebp
add
add
mov
sub
cmp
and
out
das
daa
jl
addr16
test
rorl
jo
fisubs
pusha
iret
jno
rorl
es
popa
jnp
mov
push
bts
ret
xchg
sub
in
push
xchg
hlt
xor
daa
and
out
push
mov
jne
adc
test
stos
testl
add
sbb
xchg
aaa
jecxz
inc
pop
jno
icebp
xchg
add
xor
inc
lock
sbbl
push
sbb
pop
and
out
jecxz
jmp
xchg
xorl
outsl
or
cmpxchg
das
loope
popa
adc
jecxz
push
push
stc
mov
shl
jecxz
mov
popf
aam
jmp
aad
pop
stos
cmp
js
pop
push
loopne
push
xchg
clc
jp
and
iret
rcl
mov
adc
jbe
xchg
dec
das
cwtl
js
jl
imull
mov
xorl
jg
rolb
int
test
outsb
nop
cmp
clc
call
sbbb
mov
push
into
mov
cmpsl
das
in
out
fdivs
les
or
push
inc
cmp
shll
mov
mov
pop
cmp
adc
inc
xchg
push
pop
inc
icebp
test
outsl
xlat
and
sbb
retw
push
sti
inc
loope
xchg
xchg
cmc
push
or
es
aad
xchg
and
in
push
stc
add
push
shr
or
inc
pushf
lods
mov
mov
push
xor
add
addb
or
addr16
dec
roll
inc
jle
xor
sub
xor
mov
jle
loop
shrl
jmp
sub
push
movsl
pop
inc
cmp
mov
cmp
xchg
sub
jp
mov
dec
jecxz
cld
dec
sbb
pop
jno
jle
jbe
jmp
shll
and
mov
rcll
xor
add
mov
aam
sbb
int3
ret
add
jge
inc
fcmovb
pop
xor
shlb
xor
mov
or
lahf
rorb
bnd
fbld
mov
and
fisubl
sbb
in
or
ficompl
addr16
jmp
adc
in
out
xor
mov
insl
pop
ret
stos
js
enter
rorb
rcll
imul
ss
ds
mov
ret
sti
in
ret
dec
ret
pop
mov
orb
popf
push
sarl
std
into
jp
pop
daa
jecxz
and
sbb
andb
mov
nop
gs
mov
jmp
cmpl
cmp
dec
dec
adc
movsl
mov
out
jg
rcl
int
xor
rorl
clc
or
data16
inc
pusha
jecxz
icebp
push
mov
or
push
sub
cs
push
jmp
fcomps
movsl
loope
fmul
add
push
ss
mov
das
scas
test
mov
movsl
call
mulb
pop
ret
mov
jmp
loope
js
cs
sub
adc
fmull
data16
mov
jmp
add
in
std
cli
imul
pop
xchg
pushf
cwtl
clc
or
jp
pop
dec
sahf
out
sub
test
xchg
es
test
pop
sti
cmp
popf
add
mov
ret
sub
scas
pusha
sbb
push
cmp
testl
add
add
jo
mov
or
push
pop
daa
mov
jmp
mov
scas
or
lock
push
int3
dec
sbb
inc
dec
pop
cmp
jmp
or
dec
jbe
leave
out
mov
out
and
movsb
stos
push
push
mov
arpl
dec
loope
push
cmp
rcr
sti
cmp
divl
pop
mov
push
inc
mov
call
ret
add
inc
jb
push
dec
jbe
sub
adc
adc
jecxz
lcall
cmc
or
cmp
lcall
lahf
xchg
xchg
cmp
add
subb
call
pop
mov
mov
adc
arpl
add
sub
imul
mov
lcall
xchg
out
sete
cli
fucomp
adc
test
out
pop
cmp
lods
cmp
jl
cwtl
sub
arpl
inc
nop
and
cli
in
xchg
out
and
es
or
sbb
jne
adc
iret
ftst
cs
sub
jmp
repnz
cmp
cld
add
aad
pop
pop
sbb
jne
or
loopne
add
xchg
movsb
sub
popa
pop
lods
add
push
das
mov
mov
popf
sub
sahf
rolb
sbb
push
jo
lock
cmovne
add
sub
out
icebp
js
jecxz
loopne
mov
insb
fimull
std
push
pop
adc
lcall
lret
out
sub
imulb
add
sub
mov
insb
push
xchg
bound
rcrb
into
pushf
xchg
inc
adc
push
sub
das
sahf
xor
or
repz
iret
les
sub
out
dec
orl
cmp
sub
jno
pop
and
dec
xchg
dec
push
xchg
js
inc
or
aaa
adc
add
pop
jns
sbb
loopne
adc
sbb
outsl
push
ds
dec
cs
adc
cmp
push
aam
insl
jo
outsb
popa
jns
pushf
mov
mov
or
jmp
sub
sub
push
fistps
sarl
iret
mov
in
cmp
sub
rorl
inc
or
mov
divl
sub
movsb
sbb
inc
test
addb
or
cmp
ljmp
sub
xor
sbb
dec
mov
cli
cmp
rorb
sbb
leave
xor
repnz
pusha
xchg
ret
push
jo
xor
xchg
addr16
jp
xor
push
into
fstps
out
data16
cs
mov
add
repz
mov
scas
in
out
or
or
jo
xlat
jae
jae
jbe
cmp
sti
mov
add
and
and
add
mov
cmc
or
add
addr16
xor
fsubs
scas
mov
xor
test
js
dec
mov
aam
arpl
mov
pushf
and
scas
or
mov
test
pop
mov
rcrl
ja
pop
stc
jg
arpl
rcrb
clc
icebp
jmp
loope
jecxz
and
push
lret
cwtl
sbb
mov
fsubrs
sub
xor
or
sbb
pop
fst
test
mov
cmp
cli
dec
or
mov
inc
xor
adc
fcomp
cwtl
jae
dec
insl
add
pop
mov
pushl
dec
jae
imul
popa
mov
jbe
insb
into
std
loope
mov
jle
fistpl
lods
mov
push
lret
cmp
data16
cmp
or
jg
mov
out
adc
jle
sub
pop
lret
cwtl
adc
dec
mov
mov
aad
nop
pop
aas
xchg
and
push
aas
jo
jge
wbinvd
insb
lods
sub
je
inc
inc
mov
in
mov
push
pop
test
pop
and
adc
push
sub
aad
jp
sbb
pop
mov
fidivl
out
les
lock
push
xchg
loopne
mov
pop
sub
test
mov
mov
inc
rclb
rorl
jb
jns
push
lods
add
lock
cwtl
jl
add
pop
clc
in
jbe
lock
insb
jne
repz
jl
dec
inc
call
pop
adc
cmc
pop
out
jp
pop
test
loope
inc
sub
cmpsb
cli
inc
iret
adcb
fmuls
inc
push
pop
cltd
mov
addb
les
push
ret
cmpl
shl
stos
and
sahf
inc
dec
or
or
out
loope
aaa
fucomip
cmp
inc
mov
pusha
sbb
pop
call
out
xor
add
push
pop
sbb
sub
add
js
add
push
std
les
sbb
mov
xor
and
jnp
sbb
and
in
sahf
adc
lahf
mov
and
and
cld
cmp
das
loopne
lock
fistpll
stos
add
push
sub
dec
jmp
mov
xor
icebp
xchg
push
push
in
mov
jne
cmp
or
fidivrs
inc
dec
cmp
ja
inc
subb
xchg
addr16
pop
pop
rcrb
out
bound
sbb
pop
jns
fdivr
jbe
jns
push
cwtl
mov
push
jg
sbb
rolb
push
xchg
mov
ss
sbb
lods
xchg
add
outsl
jnp
ror
frstor
cmp
lcall
sub
popa
rcrb
scas
out
scas
dec
outsb
and
out
add
daa
cli
cmp
addr16
and
das
xchg
push
test
jp,pn
pop
add
js
dec
or
daa
jmp
lret
cmpsb
sbb
cmc
push
loope
xor
filds
dec
add
sub
xchg
clc
pop
ret
mul
push
and
or
stc
sub
push
add
stos
and
popf
aaa
ss
mov
subb
hlt
jg
mov
xchg
add
xchg
std
sbb
push
add
aaa
lea
push
test
push
pop
cld
jmp
xchg
and
pop
jo
inc
int
mov
or
pop
and
mov
xchg
adc
cld
push
ss
add
inc
lds
dec
jle
mov
ret
rcrl
hlt
cmp
mov
jb
adc
ds
or
or
ret
ja
cmpb
push
lretw
cmp
es
dec
adc
sbb
mov
mov
lock
pop
lahf
call
xor
ficomps
sbb
sbbb
dec
sub
lds
shlb
sbb
push
int
fmul
sub
mov
aam
cld
xor
sbb
clc
jmp
negb
push
sbb
push
aas
mov
mov
and
adc
leave
pop
or
loope
jo
in
lods
andb
frstor
inc
cmp
lcall
cld
inc
inc
call
rorl
jne
insb
cli
or
enter
mov
push
notl
inc
pusha
and
ljmp
jl
push
dec
rclb
out
lret
adcl
mov
hlt
xchg
dec
or
sti
mov
mov
jae
or
mov
popf
adc
or
inc
or
mov
jb
loop
cs
and
xor
je
pusha
push
insb
cmp
ljmp
inc
or
or
inc
roll
es
mov
mov
outsb
iret
sti
insb
xchg
test
movb
sub
sub
inc
test
fldenv
sti
fdivl
add
dec
mov
or
xlat
mov
xor
mov
add
shll
mov
jns
loop
fwait
jno
jp
xchg
jne
add
clc
ds
adcb
out
mov
cmpsl
ret
aad
add
pop
in
fbstp
loopne
daa
cmc
xchg
sbb
and
inc
sbb
jo
iret
pop
cmp
add
arpl
inc
pop
and
add
xor
mov
rolb
jnp
adc
add
cld
cwtl
icebp
es
xchg
sarb
sbb
jnp
repnz
cmpsb
pop
sbb
idiv
mov
cmp
dec
dec
mov
cmc
mov
inc
lock
xchg
push
out
xorb
cltd
cld
dec
xor
daa
outsl
jmp
lea
in
mov
ja
addl
and
daa
adc
push
jo
inc
add
inc
pop
into
adc
add
or
movsl
mov
mov
loopne
dec
call
lock
das
rcrl
std
mov
pop
cs
and
pop
not
nop
out
shr
dec
adc
orl
cs
pop
add
ror
cmp
pusha
ja
aaa
icebp
idivl
add
add
ror
add
scas
xchg
pop
xorb
fldl
hlt
add
xorl
add
sbb
xchg
add
insb
fidivs
outsl
data16
arpl
andl
cmp
into
fwait
push
jbe
addr16
xlat
mov
jnp
mov
int
sahf
mov
jmp
mov
mov
jo
adc
mov
ror
pop
cmpsl
ljmp
xchg
das
cmp
push
add
cmp
inc
movsb
or
pop
lahf
rcl
pop
add
add
mov
and
lock
je
and
outsl
cmp
xchg
daa
pop
sbb
inc
inc
cs
aas
mov
mov
dec
pop
outsb
inc
es
divl
insl
fnsave
loopne
sbbl
hlt
es
std
es
adc
insl
ret
fnstcw
mov
leave
cli
mov
and
cli
faddl
idivl
or
xor
jo
dec
cmc
jae
push
ds
cmp
and
jecxz
outsb
jb
mov
adc
clc
push
out
clc
pop
imulb
movsl
push
push
stos
dec
inc
sbb
add
xchg
inc
push
add
or
imul
stc
mov
mov
adc
jg
mov
xlat
sbb
sahf
nop
sub
lock
lock
lock
call
aas
push
lds
mov
jle
push
popa
or
xor
jae
daa
add
sbb
mov
adc
add
mov
repz
data16
gs
stos
addr16
ljmp
cmp
xchg
sbb
xor
mov
testb
add
inc
xor
fwait
pop
pop
repz
push
data16
roll
loopne
sahf
rcrb
bound
lods
js
jnp
js
int
std
mov
sub
push
rorb
clc
or
xlat
mov
aam
lods
aaa
or
hlt
js
scas
cs
int
add
mov
xor
les
bound
mov
sti
and
mov
xchg
mov
pop
hlt
rclb
push
imul
fsubp
or
cmp
cmp
sub
xchg
pop
mov
test
jmp
pop
cld
jg
mov
jae
cmpl
cmp
pop
test
testl
cmpsb
mov
lahf
xorl
iret
mov
fwait
outsl
dec
xor
push
xor
popa
bound
lea
je
mov
mov
sbb
xchg
xorb
fs
push
push
enter
out
call
aas
inc
lock
and
fldl
xchg
inc
insl
push
push
pop
test
mov
mov
sub
xchg
pop
clc
psubsw
loopne
std
inc
mov
jg
mov
xchg
sbb
push
bound
fwait
push
or
aaa
movb
mov
inc
push
add
and
iret
outsb
icebp
dec
xor
xchg
xchg
rcr
in
inc
aas
mov
add
jge
mov
jl
cmp
mov
dec
jg
ds
insl
mov
pop
xor
loopne
sbb
xchg
sahf
push
daa
and
or
fcomp
mov
int
add
mov
filds
andl
shll
aam
or
arpl
in
out
insb
xchg
mov
jg
outsl
stos
push
and
lret
loopne
mov
fcompl
push
std
lods
add
lock
fnstsw
or
or
ret
inc
push
and
xchg
out
mov
out
faddp
xchg
xor
fidivrs
loop
adc
push
dec
rol
mov
or
popl
mov
imul
out
rolb
nop
adc
mov
mov
xchg
shr
out
cmp
push
or
inc
cmpsl
mov
aas
les
pop
mov
jp
lock
push
and
inc
movsb
testb
jns
pop
pop
clc
inc
test
push
or
pusha
rcrb
test
jecxz
sub
ficoml
mov
ss
out
pop
mov
aam
mov
jl
stos
lahf
cli
decb
sbb
xchg
outsl
pop
pop
movsb
xchg
cwtl
inc
mov
and
movsb
subb
fadd
stos
test
mov
in
mov
sbb
or
cltd
mov
sub
add
mov
cmpb
lods
lods
popl
loopne
add
inc
mov
push
out
lds
imul
popf
inc
xchg
aad
leave
pop
outsl
loopne
xor
add
push
insl
pop
dec
ret
mov
and
adc
mov
lock
out
push
add
loop
adc
jmp
jns
jbe
incb
mov
push
xchg
cs
call
push
imul
je
pusha
inc
pop
sub
rolb
jg
inc
adc
mov
faddl
add
std
mov
inc
fdivl
mov
mov
add
adcb
sarb
pop
ljmp
dec
and
add
sub
in
daa
jmp
adc
push
aad
add
lock
xorb
pop
dec
adc
imul
mov
iret
cmp
adc
js
inc
mov
lret
mov
xchg
in
nop
sbb
adc
shl
loopne
mov
jno
and
mov
sub
andl
mov
inc
je
push
add
jecxz
cmpsb
mov
cmp
cmp
adc
shlb
jo
out
inc
mov
cmp
nop
add
test
cmp
lahf
imul
repnz
push
or
lcall
ret
mov
pop
fwait
js
cmp
cwtl
js
mov
or
pop
mov
movsl
mov
inc
cld
lea
adc
fwait
test
push
mov
mov
jno
pusha
out
rcr
aaa
std
cs
or
add
add
cs
incl
jl
ss
or
and
dec
mov
mov
pop
sub
jb
and
dec
mov
lahf
jne
loop
test
jns
popa
push
lahf
pop
jnp
add
cmp
aam
inc
sbbb
insl
mov
cmp
mov
and
cwtl
sbb
or
addr16
lea
mov
js
xchg
iret
xor
push
inc
cmp
pop
cmp
outsl
js
inc
or
inc
icebp
in
pop
pop
dec
enter
push
adcl
xor
imul
push
cld
loopne
inc
push
pop
ja
push
sub
insl
or
divl
push
je
inc
incb
mov
lock
xor
movsb
add
mov
pop
mov
jnp
je
xchg
jge
push
sub
mov
inc
int
fidivrs
pop
es
adc
repnz
testl
or
icebp
stos
sbb
mov
or
cmp
jp
or
mov
mov
and
cmp
rorb
pop
imul
dec
push
xor
clc
test
cld
mov
std
sbb
dec
add
sahf
jle
leave
ret
mov
movsb
imul
shll
jb
pop
test
xlat
xchg
mov
je
dec
sub
jmp
sub
mov
sahf
add
add
cli
adc
loope
add
adc
adc
ss
das
je
mov
xchg
in
hlt
ret
test
rcl
add
popf
test
add
fwait
pusha
and
and
add
andl
add
jo
sbb
inc
add
dec
loope
jb
push
pusha
rclb
outsb
or
out
jb
incb
lret
sbb
inc
cmpsl
inc
sbb
xchg
ljmp
add
dec
xchg
arpl
setge
pop
inc
or
subl
popa
add
add
rcll
mov
xlat
js
pop
cld
out
inc
dec
push
jno
dec
sarb
cltd
loope
mov
aas
lock
pop
pop
or
add
push
jecxz
cmp
test
mov
lods
jbe
fdivrs
jo
sbb
jbe
or
pop
pop
dec
fildl
sbb
add
push
adc
jle
cmp
lods
push
pop
sbb
aaa
sbb
mov
popl
mov
push
popf
sub
pop
imul
enter
or
repnz
pop
xchg
int
inc
in
cmp
les
jo
das
mov
xchg
insb
or
movsb
mov
or
insb
cmpb
lods
pop
aad
or
xchg
ja
not
rorb
cmp
andb
jle
adc
insb
aas
adc
shlb
testl
fstpt
loop
ja
out
or
sbb
mov
std
sub
out
in
xor
mov
add
sbb
jp
lods
mov
add
cmp
jae
imul
test
jbe
mov
xchg
mov
cld
jg
addr16
pop
mov
in
inc
and
lret
mov
lahf
mov
pop
pop
mov
imul
call
pop
loopne
push
aad
pusha
jle
in
nop
jp
pop
fistps
stos
popa
add
jbe
adc
mov
inc
pop
fidivrl
adc
out
push
push
jo
xor
ret
movsl
jnp
nop
sub
sub
or
bound
add
pop
mov
test
xlat
or
jo
lret
pop
cmp
mov
mov
insb
test
outsb
dec
mov
arpl
fistpl
add
jae
jns
movl
inc
cmc
sub
sbb
sbb
outsl
addr16
fisttpll
jle
and
pusha
xchg
mov
sbb
add
aad
mov
push
call
lds
inc
mov
daa
andb
repnz
hlt
es
arpl
call
in
ror
das
sbb
pop
insb
sbbb
cmp
sbb
in
stos
cmp
jne
lock
and
and
mov
cmpsb
add
and
in
cwtl
xor
sub
jg
push
and
loopne
pusha
mov
xchg
xor
add
pop
push
daa
fst
ja
mov
add
imul
hlt
nop
out
lcall
js
push
and
loopne
andb
add
jecxz
js
mov
inc
push
jbe
sub
sub
outsl
les
mulb
fidivrl
xor
cwtl
popf
arpl
arpl
sub
adc
pop
cld
pop
xchg
mov
add
subl
jle
sub
or
xlat
ss
sbb
insb
popa
insl
push
xchg
mov
ret
pop
adc
addb
aam
mov
sub
and
pushf
cwtl
push
ss
dec
jg
xor
xlat
in
das
mov
inc
shrb
fnstsw
push
fsubr
inc
rclb
stos
sbb
out
lods
ja
loope
or
jns
mulb
es
mov
push
jp
xor
sbb
sbb
or
js
cltd
dec
push
xor
push
or
movl
ds
fcomp
shll
add
add
mov
out
pusha
inc
hlt
and
je
add
sbb
cwtl
outsl
push
sub
fwait
add
rcrl
jge
or
lods
sbb
int
clc
push
mov
pop
sub
mov
ret
test
sub
int3
push
push
aam
xchg
cmp
mov
mov
push
xlat
or
or
or
popa
je
xchg
mov
sbb
sub
jns
cwtl
mov
and
mov
mov
cmp
jmp
dec
ss
xchg
aaa
icebp
dec
jno
outsb
sub
or
jp
loop
mov
add
xchg
mov
jns
cmp
setl
xor
shll
lds
inc
rcrb
call
jle
xor
cmp
xorb
and
stos
pop
ja
inc
rclb
pop
add
mov
stos
jnp
xorl
sub
pop
cmpsl
xor
shll
fldl
test
adc
xor
enter
jg
mov
aaa
lea
imul
outsl
clc
push
mov
in
sub
jp
and
mov
mov
shlb
or
adc
xor
jnp
sti
sub
nop
cmp
push
jnp
push
mov
cli
scas
mov
jne
and
movsl
dec
out
incb
rolb
subl
add
jo
cmp
mov
xor
sbb
push
shlb
aas
sar
push
scas
or
or
add
or
sub
out
icebp
insb
aad
mov
cmp
clc
mov
stc
pop
xchg
negb
mov
jae
insl
and
popa
mov
scas
push
push
shll
xor
cmp
cld
mov
scas
dec
dec
in
addb
aad
xor
fstpl
xchg
lahf
jp
shlb
aaa
dec
and
shlb
repnz
jp
sub
pop
pop
jecxz
xchg
test
mov
loopne
fdivrp
imul
dec
outsb
test
pop
push
add
out
xorl
xchg
stos
aad
scas
negl
aaa
insb
in
adc
jbe
dec
pop
imul
xchg
subl
outsl
out
ja
mov
shlb
roll
jmp
adc
and
adc
into
fisubrs
jp
adc
add
movsb
pop
je
notl
mov
and
mov
and
dec
mov
outsl
test
inc
test
mov
push
adc
in
repz
jne
cmp
jmp
cmp
emms
outsb
jg
mov
repz
mov
jno
cmpsb
sub
out
ja
add
loop
mov
insl
ja
loop
inc
push
xorl
outsb
jns
das
pop
lods
sub
mov
div
add
pushf
pop
imul
jl
ret
loopne
jnp
or
fsubrl
lds
cmpb
xchg
fiadds
add
adc
mov
cltd
call
pop
faddp
xor
test
leave
sub
inc
ja
test
jg
movsb
ja
push
sub
mov
in
loop
push
out
loopne
jmp
std
cmp
imul
daa
xor
pop
mov
dec
xchg
jmp
push
mov
outsb
outsb
add
mov
mov
push
xchg
push
pop
push
pop
ja
loope
fs
and
jb
adc
faddl
imul
ljmp
mov
or
subl
sbb
fmuls
adc
das
imul
lods
jecxz
testb
idivb
js
imul
fildll
in
mov
lahf
in
dec
mov
gs
push
bound
push
mov
adc
out
mov
ja
push
insb
fmull
dec
fs
sti
jb
xor
aam
mov
xchg
sbb
mov
repnz
or
mov
repnz
outsl
cli
inc
dec
mov
push
mov
inc
outsb
push
pop
pop
arpl
cwtl
cld
pop
aaa
fstpl
add
adc
cltd
fcmovnb
inc
jb
inc
cmp
lock
icebp
add
inc
loop
mov
add
insb
xor
add
fcompl
fdiv
and
push
inc
dec
mov
pop
adc
rorb
push
push
mov
loope
xor
sbb
pop
inc
and
repnz
mov
adc
rolb
outsb
insb
lcall
mov
sub
cmpsb
outsl
clc
add
imul
xor
mov
jmp
and
pop
pop
cmp
stos
add
jp
and
jae
ja
insb
popf
mov
cmp
bound
mov
dec
std
sbb
in
xchg
cmpsb
jg
lods
mov
or
lea
repz
std
call
mov
sahf
xor
mov
imul
xchg
push
xchg
xor
sbb
add
jbe
movsl
fwait
xor
xor
sub
lods
cs
push
sub
ret
ret
push
imul
nop
or
mov
xor
mov
ja
inc
shl
hlt
push
ss
imul
nop
mov
cmc
mov
mov
push
daa
addl
and
push
icebp
adc
cld
mov
inc
ljmp
rcr
add
fnsave
clc
xchg
jb
movb
add
sahf
nop
or
fld
aam
ss
or
lods
mov
ljmp
addr16
adc
les
mov
jns
push
inc
xor
mov
data16
lods
cmpsb
daa
and
push
xor
insb
pop
and
popa
cwtl
nop
pop
pushf
add
pusha
imul
adc
jge
sub
in
push
out
jle
inc
in
push
subb
or
inc
es
add
jmp
jbe
int
jg
xchg
push
loope
xchg
pop
push
inc
ss
xchg
jp
dec
lea
sbb
out
or
jnp
add
ds
fwait
les
adc
jg
pop
adc
ds
add
xchg
std
es
loopne
in
lea
ja
add
mov
test
mov
sahf
ljmp
jo
mov
gs
mov
dec
mov
add
out
pop
add
add
ret
into
loop
add
sbb
or
mov
xchg
cli
int
inc
push
pusha
mov
ss
sbb
js
out
inc
aas
repnz
add
inc
xchg
adc
xor
mov
inc
push
loope
jo
js
mov
repnz
outsb
xor
mov
xor
test
push
adc
mov
xchg
lods
in
test
jle
and
in
inc
or
mov
dec
sub
lds
sub
mov
cmpsl
pop
movsb
aas
dec
roll
pushf
cmp
in
loopne
adc
and
and
sbb
rcll
lret
xchg
mov
hlt
scas
orb
hlt
xor
xchg
add
sbb
dec
jo
das
mov
enter
data16
int3
dec
mov
push
mov
js
push
cs
mull
mul
cmp
pop
push
mov
fsts
add
pshufw
rcl
push
inc
into
jp
jo
push
jg
adc
and
push
out
fisubrs
add
test
or
mov
iret
xchg
jae
ret
aaa
loopne
sub
mov
jns
xor
out
pop
fsubs
sbbb
add
outsb
lds
scas
fisttpl
insb
scas
sbb
mov
or
mov
cmp
pop
lcall
push
cmp
add
push
pusha
fldt
xor
or
testl
movsb
pop
mov
les
mov
outsb
lds
mov
sar
mov
dec
mov
fisubrl
inc
nop
les
jecxz
int3
mov
adc
add
mov
inc
in
cmc
add
lock
and
dec
cld
cmc
das
ss
sbb
cwtl
jnp
test
insl
repz
push
mov
das
cmp
test
cmc
test
adc
test
mov
jo
test
pop
push
mov
push
rcll
aas
pop
jne
add
adc
jns
push
push
popa
xorb
test
leave
sbb
popa
bound
push
add
push
aam
xorl
addr16
and
jne
imul
adc
in
je
int
addr16
and
addr16
cmp
xor
or
mov
add
pop
in
popa
xchg
push
in
lods
inc
lcall
testb
dec
lea
clc
mov
test
add
mov
sbb
scas
jno
pop
pop
addr16
mov
dec
daa
sbbb
adc
int
mov
inc
push
imul
dec
daa
hlt
xchg
js
in
xlat
push
jecxz
pop
mov
rcll
pop
sbb
push
addr16
scas
push
arpl
leave
mov
imulb
cmpsb
and
in
inc
pop
cmp
pusha
sahf
add
ss
mov
lods
mov
dec
dec
xor
loop
mov
xlat
sub
fs
cltd
sub
cmp
pop
pop
dec
inc
ljmp
sub
sahf
inc
lcall
pop
cmp
or
adc
ret
xchg
mov
add
add
sbb
mov
pop
sbb
mov
or
mov
and
push
cli
je
jl
jbe
test
inc
mov
xchg
mov
push
cmp
imul
add
cmp
dec
sbb
pop
pusha
nop
ljmp
aas
mov
mov
out
in
xchg
xor
mov
leave
leave
jg
aad
mov
daa
and
out
mov
lock
sub
shr
fildll
pop
sbb
dec
jge
cmp
cmc
adc
or
das
add
jecxz
icebp
push
icebp
aaa
lods
imul
inc
push
dec
ret
mov
cmp
cld
aaa
repnz
pop
pop
dec
add
adc
xor
inc
ret
or
mov
xor
mov
dec
cmc
insb
mov
dec
iret
sar
ss
outsl
cmp
out
in
cltd
jno
inc
adcl
in
mov
lods
shr
adc
fmuls
jae
mov
push
pop
mov
mov
fstpl
fwait
lret
sbb
dec
fists
xor
ret
icebp
adc
add
mov
xor
loopne
jo
jno
push
out
stc
xchg
xchg
in
lock
ljmp
mov
outsl
mov
pushf
cmp
and
cmpb
dec
or
cmp
lods
jnp
cmp
push
out
mov
psubusw
xorb
sub
mov
out
lret
inc
orl
outsl
jl
add
cs
or
xor
icebp
lds
sahf
or
fs
sub
pusha
add
out
pop
xchg
cmp
cld
inc
pushf
or
loop
cs
add
push
jne
jns
sub
mov
addl
or
dec
add
xor
sub
mov
push
add
imul
mov
inc
sub
pop
test
repz
call
push
popa
dec
inc
cmp
xchg
push
and
int3
push
mov
shll
roll
jp
lea
sub
stos
test
fisubs
pusha
cmp
in
into
sbb
jge
pop
dec
dec
jno
add
jge
mov
insb
repnz
pushf
addl
lds
ret
and
xor
pusha
shrb
cmp
lea
je
add
cmp
cmp
es
sbb
negl
rorl
and
ds
lcall
stos
lcall
jecxz
adc
ja
pop
sahf
sarl
imul
rcr
out
decb
adc
std
jo
repnz
cvtpi2ps
adc
je
push
dec
hlt
inc
adc
subb
pop
or
cmp
ret
sbb
hlt
push
jl
dec
cwtl
pusha
mov
add
incb
in
xorl
ljmp
sbb
dec
adc
push
pop
out
mov
sub
test
outsl
sbb
inc
in
enter
fildl
ja
mov
rol
mov
popa
mov
push
int
gs
js
loop
mov
push
cmc
jnp
pop
cld
sub
sub
out
and
adc
jae
add
xchg
xor
pop
xor
cmc
and
clc
push
aas
sti
loop
cld
sbb
xor
das
xchg
aad
jbe
std
add
inc
push
mov
sahf
cmp
loope
add
push
std
dec
adc
cli
adc
fiadds
adc
push
pop
cltd
das
or
mov
jmp
add
out
inc
push
imul
adc
jne
ss
pop
pop
iret
adc
or
fsubrs
inc
mov
shl
aaa
jge
xchg
jno
fs
outsb
push
cmp
mov
es
loope
push
cmp
xor
xor
stos
mov
jg
nop
in
fninit
mov
dec
nop
in
cmp
mov
in
andl
push
mov
fildll
fldl
cmp
outsl
cmc
jo
in
push
mov
out
ljmp
dec
cli
popf
dec
sub
inc
dec
mov
dec
pop
ss
fidivrs
adc
lret
push
inc
xor
iret
lods
or
or
out
cli
pop
imull
out
mov
mov
mov
insb
inc
aaa
adc
adc
je
call
adc
test
sbb
sbb
mov
shl
push
or
outsl
cli
push
dec
pop
dec
sbb
pop
push
xchg
and
daa
fcmovnbe
icebp
and
jge
loop
cmpsl
cmp
imul
sbb
sbb
or
les
and
push
loope
cmp
add
mov
jbe
repz
std
push
ja
loope
adc
clc
or
mov
inc
imul
xchg
roll
adc
mov
lret
pop
cli
mov
mov
rorb
xor
sbb
push
or
dec
or
push
dec
jno
mov
imul
pop
aas
cmp
dec
nop
dec
cmp
test
pushf
in
pop
sbbl
mov
mov
pop
cmp
cmp
lret
add
imul
test
nop
mov
loope
icebp
cmp
enter
mov
sarl
in
loopne
xchg
and
add
and
mov
dec
stos
cmp
test
and
and
ficomps
fcoms
addl
lcall
stos
divb
jmp
aaa
pop
cli
inc
mov
add
sub
cmpsl
xchg
dec
ret
pusha
lods
dec
in
fisttpll
and
jge
ret
imul
push
jp
orb
cmpsl
icebp
ret
or
jecxz
shrl
fistpl
mov
ret
and
jge
or
mov
out
add
mov
push
negb
push
fildl
imul
jle
cmp
sbbb
cwtl
shrl
cmp
fwait
mov
or
je
cld
cmp
sbb
inc
ja
xor
fs
add
cwtl
xchg
lret
fs
dec
mov
xor
in
pusha
push
jbe
jge
loopne
ja
mov
add
add
add
sbb
xchg
test
daa
mov
jne
aas
mov
in
jno
lret
dec
mov
xor
andl
les
pop
and
push
fs
fstps
sub
addb
pop
inc
and
mov
push
loopne
xor
push
fs
jge
ss
sbb
jle
cmovns
sub
mov
hlt
xchg
or
jbe
jl
pop
lock
jmp
lahf
in
icebp
cmp
les
push
and
cld
push
fistpl
mov
pusha
incl
dec
sbb
sbb
arpl
sbb
outsl
inc
add
in
or
mov
roll
aaa
push
mov
cmpsb
add
inc
outsl
xchg
sbb
loop
mov
test
stos
mov
pop
mov
inc
cmp
shrb
into
pop
xor
inc
sbb
ja
dec
inc
orl
cld
dec
pop
roll
fbld
sarb
pop
imul
ret
sbbl
aaa
adc
dec
stos
mov
fiadds
arpl
mov
add
add
push
push
mov
mov
rcrl
or
pop
lcall
mov
inc
xchg
pop
pop
inc
lret
and
sub
ret
icebp
fnstsw
fucomi
add
push
aaa
pop
inc
loope
mov
mov
jno
dec
movb
jo
xchg
sbb
xchg
les
and
add
cmpsl
pop
daa
cmp
cmp
adc
add
or
gs
or
push
adc
jb
mov
roll
pop
lret
js
ljmp
xor
mov
sbbb
ss
jg
cmc
jg
in
xorb
dec
sbb
icebp
lret
mov
inc
sbb
adcb
cs
xor
fistps
mov
xor
imul
jg
jno
js
les
sbb
pop
adc
repz
mov
or
sub
fbstp
cmp
fistpll
ds
stos
daa
jecxz
jle
xchg
xor
pop
jae
add
add
inc
jb
and
sub
jge
aam
lods
push
hlt
pop
je
notb
jmp
test
mov
ss
xchg
adc
call
popa
jl
push
sbb
push
fwait
mov
cmp
sbb
scas
push
bound
into
add
loopne
sbb
mov
popa
add
pusha
fcoms
insb
fsubl
push
idivl
xchg
ljmp
add
or
push
jg
xchg
jp
les
cli
jecxz
test
out
das
pop
mov
sub
mov
dec
push
je
and
adc
jg
dec
or
rcl
pandn
mov
mull
push
cmp
cwtl
xor
test
or
pushf
testl
pop
xchg
jne
jo
out
jno
clc
out
dec
jbe
cwtl
xchg
mov
es
fisubl
pushf
cmp
pop
push
inc
test
roll
xlat
je
jl
cmp
pop
pop
xor
xchg
mov
scas
sub
sbb
add
sbb
fwait
shl
cli
loop
arpl
sub
mov
inc
ss
lods
add
add
adc
sbb
jno
cld
or
push
sub
cmp
and
mov
sbb
aad
push
in
das
adc
cld
adc
mov
scas
push
mov
stc
add
stc
pop
push
hlt
xchg
nop
int3
stc
hlt
jb
lods
leave
in
mov
push
aad
subb
or
rorl
inc
add
mov
imul
and
test
fsubrl
nop
and
ja
mov
stc
outsb
xor
rcrl
xor
gs
add
push
jg
ss
add
jmp
xor
clc
lock
or
adc
sti
mov
sub
icebp
arpl
cli
pop
add
test
ficomps
push
jbe
hlt
mov
lret
inc
adc
dec
nop
out
outsb
subl
xor
out
loopne
pand
push
jo
adc
aaa
lahf
js
outsb
push
ret
imul
movsl
test
mov
jle
or
and
popw
cli
mov
pusha
jbe
inc
test
add
pop
std
rcrl
loop
filds
popf
in
xchg
outsl
cmp
adcl
rolb
sbb
jmp
and
jl
dec
mov
or
dec
jge
xor
or
mov
rorl
out
clc
cmpsb
outsl
clc
push
pop
js
add
stos
mov
test
std
in
daa
and
cld
in
in
dec
fwait
jae
inc
das
pop
data16
and
xlat
sub
flds
cld
test
or
dec
iret
das
pop
mov
jp
in
popf
mov
and
fstl
jg
repz
ss
cmpsb
nop
pop
mov
hlt
mov
sbb
jmp
lock
and
add
jmp
fadds
sub
mov
fbstp
or
cmp
xchg
or
jnp
and
jo
adc
or
out
push
in
mov
loopne
sbb
or
inc
dec
jmp
sbbb
sarb
and
arpl
jp
outsl
mov
jge
mov
add
scas
push
adc
pop
jb
ja
mov
dec
push
lret
stc
lods
mov
xchg
ret
stos
test
sar
imul
out
addl
das
outsl
cmp
mov
mov
push
push
adc
xchg
aas
pusha
test
or
and
inc
out
adc
cmp
call
sahf
rolb
sarb
inc
sub
pop
pop
dec
push
outsb
das
pop
into
push
sbbb
xchg
test
int3
sar
cs
ret
add
jl
xlat
bound
scas
lret
test
xchg
sbb
dec
xchg
out
sti
rolb
aaa
outsb
jp
add
rcrb
lock
out
test
mov
loopne
push
insb
add
out
adc
out
mov
xorl
pop
aas
mov
sbb
stc
dec
jp
xchg
cmp
std
mov
push
loopne
jle
in
mov
xor
pop
xchg
test
pop
roll
sbb
bound
enter
cmpxchg
pushf
ljmp
aaa
add
nop
push
cmp
clc
jne
dec
insb
pop
loopne
and
out
lea
cmp
mov
push
push
add
movsb
aas
mov
or
mov
jle
in
or
mov
test
sub
lock
xchg
xor
or
and
mul
push
add
stc
xor
into
and
xor
xchg
mov
pop
daa
cmp
mov
out
xchg
fmuls
mov
out
adc
mov
sbb
mov
test
pop
lcall
mov
adc
addr16
int
mov
lea
stos
insl
sti
or
mov
jl
pusha
pop
xacquire
outsl
add
std
mov
std
test
imul
cmpsl
pushw
pop
inc
mov
pop
addr16
repz
xchg
mov
mov
adc
subb
arpl
aam
mov
dec
pop
mov
mov
pop
sbb
push
pop
dec
pop
mov
scas
jge
in
jecxz
pop
loope
dec
insb
loopne
mov
inc
lods
jno
or
jo
inc
pop
pushf
dec
push
xor
cli
ret
push
cmp
and
jns
test
xchg
add
xchg
pushf
lret
jp
inc
sub
xchg
cs
xor
xlat
lea
scas
hlt
push
clc
inc
cmp
jb
and
push
mov
outsl
ret
jne
nop
inc
cmp
and
popf
fistpl
insl
stc
push
pop
ljmp
xchg
dec
mov
outsl
sbb
sub
cmp
ja
aam
mov
sahf
outsb
cltd
push
lea
ret
cmp
push
mov
mov
mov
idivb
and
aas
mov
test
mov
js
popf
sub
aam
mov
dec
movq
and
in
mov
pusha
lods
stos
sar
in
xchg
pusha
jp
lea
test
aad
shlb
stos
jg
jns
add
mov
sbb
pop
mov
and
cmp
cwtl
cmp
out
clc
pop
xor
cmp
dec
dec
add
stos
in
sahf
cmp
ret
add
test
add
es
and
ljmp
lds
xchg
pop
mov
int
loop
xor
or
daa
shr
arpl
outsb
ss
das
inc
cmpsl
jae
or
sbb
mov
lcall
jnp
sti
mov
push
add
adcb
jmp
outsl
fcomip
ja
out
mov
sbb
dec
push
scas
push
jl
dec
or
sbb
in
or
fistpll
out
aad
push
mov
mov
ja
loope
inc
fdiv
jb
and
add
cmp
sar
loop
subl
fsts
addr16
pop
lock
mov
jmp
cmp
rclb
jnp
dec
xor
mov
push
xlat
push
stos
outsl
mov
add
xor
pop
clc
cwtl
and
cmp
mov
fdivp
ss
test
dec
nop
pushf
movsb
test
and
xor
movsb
mov
lahf
ror
jns
add
out
jnp
pop
add
and
mov
pusha
hlt
jne
aam
loop
jl
out
fiadds
std
vmwrite
pop
data16
cmp
insb
inc
jmp
jge
push
pop
into
dec
cmp
or
mov
ljmp
jnp
mov
or
xchg
ja
adc
mov
adc
or
not
sbb
cwtl
push
add
cltd
cmp
or
adcl
imul
pop
mov
nop
pop
lret
inc
sbb
int3
pop
push
mov
cmpsl
nop
or
or
call
xchg
and
outsb
mov
adc
lock
outsb
and
rcll
sub
jo
fistl
aad
adc
in
dec
cmp
inc
jl
fstl
mov
test
das
pop
pop
mov
cwtl
cmc
pushf
cwtl
inc
xchg
fbld
rolb
pusha
jle
push
adc
cs
jg
mov
js
ficomps
filds
mov
aad
adc
in
add
stos
and
pop
stos
fisttpll
mov
add
shld
stc
mov
test
or
ljmp
push
xor
cld
pop
sub
mov
shll
cli
dec
ljmp
jmp
add
fcmove
jno
loope
inc
dec
lret
ret
je
jp
add
dec
cmp
mov
jo
push
add
andl
xor
test
into
scas
add
ja
lret
das
cmp
mov
and
in
negl
iret
in
loope
flds
cmp
jl
lea
mov
call
mov
sbb
or
mov
or
push
daa
ret
ret
pop
rolb
ret
and
ja
mov
popa
jo
sbb
mov
int3
xchg
sub
std
sbb
loop
mov
and
mov
or
fistps
mov
inc
push
jmp
push
adc
pop
push
add
or
loop
jp
xor
xchg
cmp
loope
repnz
imul
adc
jl
inc
inc
mov
jns
sbb
je
psubusw
lahf
int
ljmp
pop
or
mov
sbb
out
lahf
and
lods
dec
mov
or
cmpl
inc
loopne
dec
xchg
cld
pop
cli
repnz
fisttpl
or
and
or
sahf
addl
cmc
dec
insl
cli
push
push
sbb
lahf
mov
jo
jbe
push
jb
inc
test
icebp
push
pop
lea
add
out
insb
cli
adc
inc
dec
aas
dec
push
mov
std
add
sub
sub
cli
push
cmp
ljmp
mov
mul
fwait
imul
pop
jo
sbb
or
mov
inc
jmp
mov
push
les
andl
pusha
idiv
test
mov
adc
mov
add
jne
xchg
sub
or
ljmp
fcompl
fs
rcll
lcall
cmp
enter
das
fstpl
mov
cmc
or
cmpsb
sbb
jg
lcall
inc
ret
inc
test
rcll
mov
jo
sub
jmp
or
hlt
xchg
stos
fdivp
out
jecxz
ret
cltd
orb
and
mov
mov
dec
mov
sbb
pop
loop
fisttps
pushw
and
sbb
orb
sahf
adc
xlat
push
mov
xorb
bound
int
jge
adc
jne
pop
add
in
inc
jbe
int
fdiv
movb
inc
xchg
int3
inc
cmp
bound
mov
popf
cmc
neg
in
add
add
out
pop
jbe
inc
aaa
or
inc
inc
repz
sub
insl
je
jle
sbb
push
mov
adc
iret
popa
dec
inc
pop
cmp
push
xorl
xchg
hlt
test
inc
inc
sbb
aaa
pop
or
lcall
push
push
aad
loopne
xor
cmp
pop
mov
mov
pop
lret
arpl
add
sbb
mov
xor
cmpsb
pop
jp
pop
lcall
push
sbb
pop
js
or
or
pusha
add
aad
cmpsl
add
and
popf
push
adc
js
stos
sub
out
pop
pop
js
clc
fistpll
in
push
popa
cmp
xor
adc
loope
cbtw
fwait
sbb
sub
jb
js
dec
jge
pop
out
mov
dec
hlt
push
push
pop
je
inc
mov
jbe
ja
stc
movsl
repnz
popa
ljmp
stos
arpl
out
scas
sub
jb
adc
mov
mov
sub
dec
adc
mov
cmp
jmp
pop
call
add
xor
push
adc
sub
or
shll
cmp
aaa
jmp
or
test
sti
and
inc
fisubl
stos
ret
jbe
sbb
dec
add
stc
xor
lcall
push
cmp
lahf
clc
negb
shlb
fcoms
in
add
adc
xchg
in
popf
pop
mov
int
icebp
adcb
mov
mov
es
and
jecxz
sbb
adc
aad
adc
or
sbb
cmp
cmp
and
xchg
arpl
mov
js
jecxz
pop
jnp
mov
aaa
cmp
mov
push
pushf
xchg
pop
xchg
clc
push
clc
pop
sub
test
outsb
lret
sbb
adcb
movsb
add
pop
into
cmp
jb
add
pushf
cmpb
outsl
les
add
dec
sbb
outsl
inc
outsb
fcmove
cwtl
lds
cwtl
or
jl
ljmp
ror
adc
sahf
fisttpl
fdivp
pop
mov
xchg
push
xchg
sahf
dec
and
jl
pop
mov
sar
aaa
and
int
jae
pop
adc
xor
es
ret
fstpt
adc
add
sbb
xchg
and
jns
sbbb
aam
dec
inc
enter
mov
or
push
outsb
rol
leave
xchg
std
jl
repnz
xor
cmpb
loope
sbb
xchg
push
cmpsl
aaa
pushf
inc
es
movl
icebp
test
push
addr16
pop
cld
mov
popa
repz
loop
aas
roll
add
mov
scas
xor
xor
or
cmpsl
cmpl
xor
xor
jo
lcall
mov
arpl
scas
rorl
test
adc
rclb
sbb
jb
and
sub
mov
sbb
ljmp
sbb
lret
pusha
in
or
mov
inc
hlt
fdiv
cmpsb
adc
in
outsb
bound
imul
push
mov
sub
xchg
add
jmp
movl
pushf
push
sbb
pop
xchg
cmpsl
pop
hlt
out
cmp
or
mov
mov
cwtl
orl
std
les
scas
and
aaa
addb
xchg
mov
addl
repz
add
call
imul
inc
into
out
push
add
loope
adc
gs
int
out
or
enter
out
ficoms
outsl
add
inc
div
flds
popa
sbb
add
aam
add
pop
pop
cmpb
xchg
jnp
les
and
mov
loopne
aaa
inc
xorl
push
push
jp
or
sti
fs
popa
push
repnz
pusha
test
jne
or
out
arpl
insl
sti
out
arpl
add
inc
push
xchg
loope
pop
push
das
aas
push
mov
loopne
xchg
iret
das
rorb
mov
sbb
pop
insl
mull
ljmp
in
pop
dec
andb
and
pop
add
jno
mov
or
enter
je
iret
jp
mov
repz
jge
fcmovne
das
test
mov
or
loopne
mov
lock
cmp
ret
push
mov
scas
fbld
xor
aad
inc
adc
add
mov
jmp
mov
jmp
js
je
mov
lcall
mov
ffree
pop
push
out
orps
xchg
loop
mov
fldcw
cli
sbb
xor
and
mov
lock
test
xchg
pusha
mov
hlt
push
cmp
sbb
xchg
sti
out
loop
hlt
jl
jnp
add
mov
inc
xor
inc
aaa
test
pop
pop
pop
xor
jnp
std
or
aad
rcrl
out
fdivs
mov
mov
dec
movsb
vphaddbq
add
aam
pop
inc
sbb
xchg
cmpsb
testl
cwtl
mov
sbb
add
js
daa
cld
loope
cmpsb
mov
dec
or
fwait
mov
ret
inc
xchg
and
pop
inc
or
or
or
daa
ss
jb
or
pshufw
icebp
add
ret
stc
bound
jp
cwtl
dec
das
rolb
adc
add
inc
push
cmp
outsl
sbb
imul
loope
pop
movl
and
fdivp
imul
inc
into
aam
hlt
push
mov
dec
inc
arpl
mulb
add
sbb
loope
and
xchg
inc
ljmp
mov
loop
insb
add
ljmp
loopne
pop
repnz
sbbb
das
mov
push
jle
ss
cli
insb
popa
adc
jb
cmp
adc
mov
sbb
xor
jg
adc
inc
or
aaa
xchg
call
sbb
add
cmp
xchg
fs
fs
push
xor
inc
cmpb
push
sbb
testl
in
inc
push
rcr
and
icebp
jbe
sbb
lret
pusha
push
xchg
ds
mov
aaa
xchg
shl
insl
push
mov
fstl
imul
imul
mov
adc
mov
shlb
cmpl
repz
jg
frstor
push
fs
clc
pop
outsb
dec
xchg
enter
sub
inc
imul
pop
pop
pop
inc
icebp
and
xchg
les
sbb
aad
dec
mov
out
std
frstor
cltd
inc
or
ret
out
fwait
outsl
and
mov
jecxz
daa
adc
nop
adc
sbb
cli
out
jae
stos
stos
sub
add
mov
decb
jbe
and
arpl
cmp
inc
fistpl
sbb
jecxz
jg
jo
aas
sti
add
je
jp
xor
add
cs
lahf
ja
sbb
sbb
out
jo
sbb
stos
leave
push
push
lds
mov
ret
adc
push
arpl
pop
repz
orb
imul
loop
cmpb
xlat
ds
bound
sahf
popf
outsb
sar
dec
push
cmp
and
mov
mov
jbe
and
ss
test
scas
lods
mov
dec
dec
es
push
add
add
lea
jl
xor
mov
es
and
pop
arpl
push
outsl
divb
pop
cmc
out
jge
add
jnp
or
decl
or
mov
les
push
bound
daa
inc
daa
jp
shll
jp
ds
or
in
sbb
adc
jo
jle
mov
mov
add
jg
jg
out
cmpsb
outsl
das
andl
sub
loop
addb
insb
pop
bound
sub
mov
pushf
rcl
pop
call
jmp
sub
jle
cmp
inc
add
pushw
fldl
push
jmp
mov
enter
dec
xchg
addl
gs
pop
inc
mov
mov
inc
sbb
mov
adc
mov
sbb
sahf
inc
mov
jg
pop
test
mov
sahf
imul
mov
mov
dec
dec
sub
adc
in
pop
mov
jl
and
push
std
jae
fildl
push
xchg
pop
scas
mov
sub
push
mov
or
adcb
mov
nop
sbb
scas
push
mov
adc
push
js
in
arpl
mov
lahf
ja
cmp
fstpl
pushf
inc
les
subb
aaa
pop
mov
or
jo
add
pop
pop
outsl
add
sub
add
lahf
arpl
dec
pop
fisubs
xchg
and
test
lret
add
and
insb
in
xor
push
mov
dec
dec
clc
jmp
pop
cmp
imul
sti
outsl
sub
dec
loop
xchg
add
xchg
nop
adc
jecxz
sub
pop
add
dec
mov
push
mov
outsl
jae
xchg
jns
mov
push
push
pop
pop
mov
fadd
add
sbb
mov
xchg
sub
pop
dec
aas
mov
sbb
pusha
and
mov
mov
js
jle
add
mov
xor
xchg
dec
loop
sbb
mulb
and
test
loopne
sub
inc
loop
cmc
or
lcall
mov
daa
pop
inc
lock
add
lods
or
dec
adc
or
push
dec
xchg
sti
xor
andb
push
stc
mov
adc
filds
cmp
adc
pop
fidivrs
icebp
es
mov
fldcw
jecxz
xor
xchg
int3
call
mov
std
out
push
clc
push
daa
adc
loope
imul
adc
adc
mov
rorb
xchg
insb
add
adc
sub
add
ror
out
data16
inc
inc
shl
repz
fldl
jo
xchg
test
jg
sbb
iret
push
adc
dec
jecxz
pop
or
test
sub
mov
mov
jmp
test
inc
scas
popf
inc
sbb
stos
push
rcr
pushf
inc
std
js
pop
and
fwait
pop
sbb
mov
mov
pop
cld
rorb
mov
dec
add
scas
sbb
testb
push
sti
clc
out
popa
decb
dec
ss
es
lahf
inc
cltd
cmp
jmp
push
int3
cmp
test
jp
aas
push
cmp
cs
fs
sub
mov
nop
add
dec
add
adc
xor
pop
sub
mov
xchg
adc
jb
pop
jbe
cmc
inc
and
mov
jmp
popf
popa
push
jp
mov
pop
push
mov
mov
dec
jmp
in
adc
rol
xorl
mov
mov
jmp
push
dec
mov
lcall
mov
pusha
in
cltd
sbb
dec
aaa
arpl
or
repz
inc
inc
or
hlt
jge
mov
fwait
cld
xchg
dec
inc
fisubl
popf
xor
sub
and
push
xor
fnsave
mov
test
test
aam
xchg
sub
cmpsb
lods
xchg
loope
mov
jp
push
xchg
outsb
mov
shrb
cltd
xor
jo
mov
xchg
adc
mov
dec
pop
aaa
and
xchg
fcomps
ret
loopne
adc
push
pop
push
mov
xor
xchg
icebp
out
ret
jae
add
pusha
push
and
loope
cmc
xchg
or
jecxz
subl
add
cwtl
mov
xchg
scas
shl
sahf
roll
cmp
mov
jns
clc
ret
pop
and
pop
dec
iret
cwtl
rolb
ret
dec
out
dec
sub
scas
pop
jno
jmp
sub
dec
jb
xchg
jmp
or
dec
rorl
or
xor
mov
aad
in
fwait
mov
ja
xor
mov
or
adc
mov
mov
mov
fdivrl
in
mov
aad
mov
jno
adc
int
jecxz
es
mov
inc
out
pop
xor
cmp
ret
jno
inc
sub
dec
std
scas
inc
loopne
inc
sbb
xchg
ret
sbb
jo
mov
mov
and
mov
jmp
inc
cs
stos
add
mov
xchg
sub
mov
jo
and
pop
cld
inc
jg
pop
daa
fisubs
and
adcb
cmc
mov
subl
stos
icebp
fnstsw
inc
pushf
loope
add
xchg
mov
pop
or
push
jl
xchg
pop
mov
ret
ss
sahf
sarl
iret
add
insl
test
mov
jae
xorb
test
cmp
add
std
mov
lcall
stc
xchg
bound
lds
sub
lods
leave
add
pushf
cld
std
rcrb
negb
sbb
cmp
rep
stos
add
ss
jl
leave
mov
xor
sbb
xchg
or
add
rcr
mov
fwait
jle
sbb
hlt
out
pop
xchg
pop
pop
sti
cld
or
or
xor
incb
sbb
or
lret
mov
popa
stc
mov
ja
lret
and
es
mov
sub
xchg
sbb
push
shll
mov
jns
insl
jo
mov
ret
cmovno
push
pop
movl
fdivs
sbb
movsl
xor
and
add
loope
xchg
iret
lods
mov
aaa
addr16
loopne
mov
mov
enter
sbb
inc
jge
scas
mov
push
inc
mov
add
cvtdq2ps
jne
push
push
or
or
loope
sbb
jnp
cmp
or
jnp
outsl
xor
in
lods
out
sbb
jbe
mov
mov
shll
into
mov
adc
stc
inc
decl
mov
cmp
adc
bound
dec
jne
jmp
mov
sbbl
ja
cmp
jp
js
inc
das
stc
add
enter
loop
idivl
repnz
and
sbb
sub
mov
in
cs
lock
pop
xor
add
mov
test
jl
es
imul
addl
jbe
fidivrs
pusha
sub
mov
repnz
aaa
adc
cmpsb
enter
arpl
testl
inc
and
cmp
mov
stos
jecxz
lock
add
inc
in
cmp
sahf
inc
loop
jno
aam
lock
lods
cmpsb
push
ljmp
fdecstp
insb
mull
inc
int
insl
test
das
sbb
cmp
in
sub
fwait
push
das
jae
add
call
ds
lahf
ss
out
mov
mov
cmpb
sbb
mov
cmpb
or
mov
push
sub
sbb
pop
jno
inc
nop
sbb
test
jnp
mov
add
adc
and
out
ret
push
pop
and
and
add
leave
mov
xchg
flds
into
pop
cmp
cmp
push
cmp
dec
add
loope
add
les
inc
or
in
adc
mov
adc
es
and
lock
in
insl
call
pop
xor
lods
in
dec
mov
xchg
mov
je
and
sbb
jnp
xchg
xor
cmp
mov
jbe
ss
lret
call
and
sahf
sbb
sti
adc
jecxz
fistpll
mov
loope
ja
ret
jecxz
fisubl
pop
or
je
pop
arpl
inc
cmp
add
jg
pop
aaa
push
out
inc
in
fildl
inc
nop
ljmp
inc
loope
out
add
jge
imul
ret
jno
sar
movb
or
mov
push
add
arpl
outsl
loopne
out
ret
bound
cmp
gs
push
pop
cmp
shr
or
scas
sub
inc
or
sti
push
adc
cmpsl
xorl
sbb
adc
adc
divl
lds
cmc
xor
mov
mov
into
sbb
ss
cld
dec
pop
imul
add
pop
cs
fistps
les
arpl
imul
or
repz
dec
outsl
fnstenv
or
out
outsl
jno
js
stos
pop
pushf
sub
lods
sbb
dec
mov
add
aas
test
lds
jp
sbb
mov
shr
mov
je
mov
clc
jge
sahf
movsl
in
mov
cmpsb
fstps
pusha
les
insb
jge
add
insb
iret
adc
sarl
int
cmp
adc
or
das
test
loopne
ss
jge
push
push
repz
loopne
adc
std
jo
xor
mov
xchg
std
adc
push
andl
pop
inc
in
push
inc
rol
movsl
pop
xor
push
jmp
jbe
stc
xorb
or
outsb
push
jecxz
js
pop
xor
and
lock
mov
xor
adc
ret
push
fidivrs
lahf
cmp
xchg
and
dec
xor
frndint
aas
pop
ljmp
in
fldl
xchg
loope
pop
jp
add
push
ret
cmpsl
fcoms
aas
mov
xchg
insb
pop
repz
stc
into
daa
xlat
or
dec
out
cli
dec
sub
addr16
jo
pop
cwtl
add
mov
inc
mov
xchg
or
sub
lea
dec
mov
test
andl
imul
insl
push
pop
hlt
out
xchg
imul
xor
xor
sub
inc
int
jg
mov
pop
inc
mov
inc
mov
pop
pop
push
xchg
call
in
inc
cmp
pop
nop
or
xor
adc
mov
pop
cltd
mov
cmovo
jne
dec
daa
roll
xor
ficoml
push
pop
sub
add
addr16
out
clc
imul
and
sbb
out
fcompl
adc
fdiv
sbb
push
sahf
cmp
ficoms
cwtl
xor
cmpsb
xor
ss
shll
test
fisttpll
pop
lcall
push
in
out
push
mov
push
into
nop
xchg
inc
loope
fidivl
loop
mov
clc
sbb
fbstp
sbb
push
push
popf
push
scas
pop
pushf
push
mov
push
hlt
inc
push
addl
repz
fistps
jb
inc
adc
out
cmp
fiaddl
add
add
push
movl
jo
aas
daa
inc
ja
jecxz
cwtl
cmpsb
pop
pop
inc
jmp
test
xor
push
mov
setp
popa
and
dec
rorb
add
mov
mov
inc
mov
mov
mov
fistpl
push
add
inc
sub
clc
jge
mov
movd
aaa
jo
push
sbb
inc
cs
stos
repz
and
hlt
repnz
addr16
repnz
pop
or
adc
jl
xchg
in
nop
and
test
cmp
insl
cmp
dec
jns
mov
mov
dec
adc
ror
roll
rclb
dec
call
fwait
scas
sbb
shl
testb
xchg
lds
jp
lock
mov
jno
mov
imul
pop
aam
in
lret
xor
xchg
mov
mov
mov
xchg
cmp
in
mov
sub
pop
dec
les
mov
scas
sbb
ficoml
pop
jg
xlat
mov
sbb
dec
cmpsb
stos
sub
inc
dec
jb
adc
lahf
ret
xchg
and
scas
xchg
xchg
and
inc
dec
das
pop
movsl
inc
call
lds
cmpsb
fwait
movsl
push
push
push
daa
cmp
pop
add
push
add
test
pushf
jo
xor
jb
shlb
add
adc
rolb
push
jecxz
mov
cmpsl
jmp
push
lret
loop
pop
jge
jo
xchg
arpl
data16
test
push
mov
iret
pop
nop
mov
or
subl
aaa
or
divb
sbb
mov
clc
aas
pusha
xor
pop
lock
enter
cmp
push
nop
jb
xlat
icebp
fldt
addr16
inc
adc
js
andb
lcall
test
xor
add
push
pop
mov
nop
xor
lea
jge
sti
test
jp
fwait
loop
loopne
data16
push
add
ret
inc
aas
shrb
bound
shrb
arpl
and
push
adc
or
mov
sub
jmp
aam
clc
jno
jno
mov
pop
cld
pop
mov
lods
sub
leave
mov
data16
adc
test
fwait
scas
dec
and
and
fdivl
pusha
scas
scas
hlt
jl
jmp
clc
add
in
and
pop
dec
add
fs
adc
inc
call
insl
out
cwtl
stos
nop
stos
getsec
add
jp
insb
inc
and
xor
das
jmp
xchg
mov
xor
test
pop
sarb
test
das
mov
pop
fdivr
jg
pop
pop
xorb
xchg
inc
adc
andl
and
add
mov
mov
cmp
dec
vcomisd
cltd
cmc
ja
add
enter
pop
mov
cmp
lcall
xor
imul
xor
push
sbb
pop
mov
aaa
ja
js,pn
dec
add
test
sbb
pop
or
test
pop
mov
and
vmovdqa
aaa
adc
stc
js
in
pop
and
addl
lret
fisttps
pop
push
push
arpl
xchg
in
fwait
cmp
and
cmp
cwtl
add
gs
mov
jle
in
push
pusha
pop
repnz
leave
add
in
sbb
outsl
mov
adc
mov
cmp
sub
adc
push
adc
leave
std
sub
es
add
out
mov
addps
pop
adc
repz
sbbl
outsl
xchg
push
jb
ficompl
jle
js
push
lock
push
jnp
movsb
sbb
jo
xor
test
aaa
mov
push
subl
push
icebp
stos
pop
push
movsb
sbbl
es
push
addr16
xorl
shl
hlt
scas
mov
sbb
mov
pop
inc
push
jne
ljmp
pop
inc
cmpl
add
xchg
cld
lock
lea
sbb
adc
loop
adc
notl
data16
pop
hlt
les
pushf
add
mov
sub
pop
mov
dec
out
lahf
push
mov
pusha
stos
cs
sbb
cmc
pop
cmp
loop
orb
sub
mov
lret
daa
rorl
movsl
scas
outsl
or
dec
call
shrb
popa
ljmp
or
insb
cli
cli
adcb
and
pusha
sub
xchg
inc
and
fcomip
insb
pop
pop
imul
push
ret
mov
addb
clc
add
xor
jno
dec
aas
lcall
fldcw
jmp
pop
adc
cmp
pop
jo
and
xor
fs
idivl
or
fwait
lahf
and
cs
mov
jo
jle
mov
leave
loopne
std
arpl
add
jnp
jb
incb
lahf
inc
lret
push
push
fistpll
iret
mov
sbb
clc
inc
jo
les
orb
dec
add
test
in
popf
stos
sbb
imul
sub
inc
lea
jo
ffreep
das
loopne
dec
testl
lods
adc
sub
mov
jne
sbb
jbe
testb
jmp
scas
pushf
popf
ret
in
add
data16
fidivs
int3
daa
jae
or
push
pop
xorb
sbb
fmull
adc
addr16
add
movsb
or
sti
daa
jmp
gs
sub
aad
mov
inc
andb
xchg
popa
je,pn
jo
popa
push
mov
test
jg
and
repz
push
out
jo
adcb
leave
adc
mov
adcb
jno
std
mov
arpl
xor
mov
mov
pop
push
inc
or
push
js
fdivrs
push
int3
dec
rcll
in
lret
pushl
and
xor
dec
bound
inc
hlt
push
dec
mov
or
lods
pop
jl
adc
std
fsubs
inc
test
cmp
mov
mov
cli
mov
ds
orb
sub
xchg
je
out
iret
andb
cs
insb
jnp
push
std
sub
pop
ja
jle
or
xlat
mov
loope
mov
adc
daa
int
push
incl
cmp
negb
in
pop
jle
test
cmpsb
pop
or
sub
or
outsl
clc
xchg
xor
xchg
or
ljmp
xchg
mov
cld
or
mov
aas
push
mov
add
cld
nop
add
inc
xchg
mov
jmp
ss
divl
adc
or
lods
clc
scas
cli
add
or
scas
adc
dec
dec
sahf
add
shrb
stos
addb
jmp
addl
lret
fmul
pop
jno
fistps
adc
sbb
lock
cmp
in
fs
adc
aaa
ja
cmc
sub
jle
pop
push
pusha
out
ss
dec
jecxz
std
adc
pop
xchg
cmc
mov
das
loopne
das
lcall
adc
push
push
cld
add
ljmp
js
adc
or
aam
insb
filds
add
aaa
jne
std
ljmp
sar
lahf
push
xchg
xor
das
inc
in
cs
xchg
shlb
popa
add
sub
cmp
cmp
cmpsl
add
pop
aaa
jae
jle
jmp
add
ret
inc
inc
mov
outsb
je
xor
movsl
push
imul
addr16
bound
add
mov
repnz
mov
cmp
nop
rcrb
mov
aas
or
sub
fisttpll
jno
rolb
shl
js
xor
xor
fistps
xchg
adcl
pop
add
pop
movl
add
mov
jecxz
loop
testb
mov
jo
dec
sub
call
stos
push
and
mov
inc
dec
add
sub
jnp
bound
leave
sbb
cmp
in
out
xorb
sub
xchg
mov
in
pop
jns
aad
adc
mov
cs
in
sar
sub
addr16
cmp
sub
push
in
cld
cmp
cmp
movsb
xor
test
int
call
ret
xchg
test
sub
inc
pushf
sbb
jb
mov
jl
fwait
cltd
cwtl
ret
inc
idivl
lock
fisttpll
jl
stc
ja
mov
lahf
sbb
loopne
mov
sbb
repz
mov
xchg
cmp
lds
cli
lds
pushf
les
mov
daa
mov
jno
ret
pop
push
pushf
shll
sbb
ds
dec
add
cmp
out
inc
xorl
and
xchg
xor
stos
fwait
jecxz
test
push
lods
xor
imul
je
enter
push
adc
xchg
imul
or
sub
fsts
cmp
data16
sub
test
cmp
push
and
xchg
or
inc
loop
mov
push
inc
sbb
das
push
pusha
out
aam
test
ljmp
jne
lds
pusha
leave
test
ja
jae
push
loopne
cmp
in
clc
xor
lock
out
loop
add
push
and
ljmp
test
ret
mov
or
fdivr
repz
adc
inc
pop
je
arpl
xor
push
or
or
pop
lea
pushf
mov
iret
gs
push
fistpll
add
ljmp
imul
outsl
out
shr
mov
out
call
dec
mov
fistpll
inc
xchg
out
adc
mov
mov
cs
inc
adc
fwait
inc
push
scas
dec
mov
test
ss
scas
jb
js
in
push
sbb
jle
pop
mov
pop
push
dec
sub
out
cmp
repnz
inc
sbb
sub
dec
push
adc
adc
dec
cmp
jl
xchg
mov
dec
insb
jns
push
testl
test
ret
pop
inc
add
xor
xchg
and
pusha
add
fsub
scas
out
ds
mov
pusha
movsb
adc
lcall
cmp
xor
mov
xor
mov
or
test
jle
js
test
mov
xorl
int3
jmp
js
jmp
pop
xor
jne
cwtl
sub
jne
push
hlt
xor
mov
fnsave
dec
idivl
push
adc
mov
xlat
inc
or
and
int
xchg
ja
test
push
call
out
xchg
rolb
and
pop
ljmp
pop
sbb
popa
cmpsb
mov
adc
inc
adc
decb
movb
rcll
ljmp
add
jmp
daa
xor
lods
dec
mov
jle
jmp
fwait
aad
outsl
out
adc
or
pop
arpl
xchg
int
out
and
xchg
std
rol
ret
or
divb
sbb
dec
sub
or
push
int
ja
jo
bound
adc
sub
lods
or
dec
leave
mov
stos
or
cli
pop
sbb
and
in
imul
iret
inc
sbb
pop
repz
out
sbb
jg
push
mov
push
or
mov
loope
cmp
push
aaa
or
dec
incb
mov
and
movl
sbb
lods
add
pop
or
add
sti
sbb
sub
xorl
mov
sub
dec
fnstsw
mul
mov
push
push
push
push
test
je
stos
int3
or
xchg
out
in
ret
and
sbb
repz
cs
mov
icebp
fldt
cmp
mov
mov
sarb
pop
mov
outsl
sub
or
icebp
mov
jae
sahf
loopne
out
and
icebp
sub
cmpsb
or
adc
jecxz
sarb
push
cld
add
jo
mov
test
fildl
cmp
and
bnd
cmp
test
adc
inc
rorb
sbb
sub
xchg
je
or
pop
cmpsl
sbbb
daa
pop
jle
jns
pushf
shlb
inc
xor
push
mov
pop
xlat
cmp
push
jbe
movsl
outsb
and
aam
dec
stc
and
jl
outsl
pop
inc
aam
out
leave
dec
jae
psubw
push
push
out
shll
inc
enter
pmaddwd
or
dec
aad
js,pt
data16
sbb
mov
and
add
xchg
sahf
aaa
in
adc
mov
sti
push
in
js
aas
pop
dec
adc
js
test
cmp
push
xchg
in
clc
xor
movsb
and
sbb
add
lock
sbb
push
fnsave
in
sahf
aad
jecxz
shrb
xchg
mov
or
push
lahf
bound
sbbl
std
push
testl
int3
or
jg
jp
and
movsb
or
push
push
or
in
add
int3
test
stc
add
jmp
rolb
je
clc
sbb
and
shr
gs
mov
icebp
xchg
in
add
and
pusha
roll
inc
pop
bound
pop
and
sub
test
outsb
mov
ds
ret
scas
add
addr16
loopne
jns
sub
sbb
or
push
ret
cli
std
or
sub
sbb
test
icebp
pop
push
insb
pop
pop
mov
mov
add
mull
inc
fistps
add
and
scas
xchg
jae
cmpsb
mov
inc
insb
pop
ljmp
fdiv
repz
scas
test
movntq
out
popl
add
xchg
push
jns
sub
sub
sub
pusha
sbb
push
sbb
xchg
es
arpl
repz
sub
fcomip
dec
sbb
setbe
pop
jae
jnp,pn
jnp
or
sbb
cmp
or
push
lret
lea
add
loopne
cmp
lods
adc
jge
and
cwtl
add
popa
xchg
enter
in
pop
decb
cmp
in
inc
call
mov
dec
leave
aas
mov
ljmp
and
scas
cli
fidivs
je
pop
pop
or
ljmp
lock
les
cmovb
and
rcrb
pop
jp
pushf
stos
dec
mov
inc
and
std
adc
push
jle
xlat
add
rorl
imul
ss
jb
and
mov
pop
pop
inc
xchg
xchg
jnp
and
outsl
cmp
add
pusha
out
mov
in
inc
cmp
lock
mov
arpl
xor
shll
fnstsw
test
inc
and
lock
sub
cmovge
mov
cmpb
pop
pop
ss
insl
jp
dec
jns
or
xchg
mov
mov
pop
sbb
cwtl
fwait
push
sbb
jp
insl
fcmovu
and
fwait
mov
add
pop
add
fisttps
aaa
pop
xlat
pop
repnz
and
daa
icebp
push
mov
sbb
jg
lret
testb
or
adc
xor
cmc
in
sbb
test
push
bound
xlat
xchg
lods
cltd
pop
jmp
sarb
push
push
push
jecxz
arpl
add
pusha
ror
and
cmp
mov
outsl
inc
pusha
or
out
xchg
mov
test
cmp
aam
jp
fildl
es
adc
in
xor
loopne
out
outsl
bswap
test
push
xchg
xor
shll
ljmp
rol
dec
inc
xchg
adcl
push
xchg
lea
shl
jnp
inc
imul
fs
adc
insb
jle
xchg
shll
pop
sbb
daa
and
jge
leave
xchg
fisttpll
rcr
clc
repnz
pop
jmp
inc
sbb
pop
data16
inc
mov
call
sub
push
rolb
dec
add
add
adc
ja
outsl
bound
std
popa
addb
jle
jp
fstl
sub
add
addl
in
push
rolb
in
mov
addl
xor
addb
push
stos
outsl
jmp
repnz
insb
mov
push
xchg
or
popl
cmp
ljmp
clc
or
or
rolb
lds
mov
and
notb
or
jg
pop
fildll
xor
and
mov
jno
scas
subl
std
mull
clc
testl
scas
pop
xor
pusha
push
mov
jmp
js
pop
or
mov
jl
pop
mov
outsl
imul
out
out
pop
dec
or
nop
sbb
inc
xchg
add
jnp
mov
and
push
xor
in
xchg
pop
push
inc
fistpll
adc
push
imul
push
sbb
pop
ja
add
push
popa
pushf
pop
test
leave
repnz
lds
cmp
std
mov
loop
sahf
andl
push
add
sbb
xchg
jecxz
lret
xor
xchg
ja
das
inc
xchg
clc
cmp
xchg
jnp
pop
popa
mov
mov
sti
daa
and
ret
sub
add
mov
in
xchg
inc
sbb
popf
pop
arpl
adc
push
lea
imul
pop
aaa
inc
mov
xor
pop
arpl
sub
xchg
mov
scas
jnp
mov
inc
pop
andb
cmc
in
add
jle
push
xor
and
add
adc
add
mov
lret
lea
push
xchg
pop
push
repz
dec
shrb
lea
adc
pop
hlt
call
and
int3
out
inc
xor
push
test
repz
dec
mov
cltd
and
js
das
jo
js
mov
ss
out
jo
mov
rcl
xchg
adc
cmp
popa
mov
aaa
jno
lock
sarl
adc
inc
cmp
cli
test
push
mov
cli
xchg
jbe
mov
xchg
inc
out
inc
jo
cwtl
insb
repz
xchg
pop
sbb
leave
in
test
mov
fidivrs
scas
inc
pop
sbb
mov
cmp
bnd
push
jno
pushf
je
jmp
in
mov
sub
and
jge
inc
lcall
mov
lret
movswl
mov
out
sbb
push
stos
popa
lcall
pop
add
rorl
pop
jmp
push
adc
fpatan
xchg
in
outsl
call
arpl
sbb
dec
cmp
subl
cmp
movsb
loopne
ja
sub
cmovle
jg
ret
adc
add
pusha
jl
cmp
aas
mov
push
cmp
popa
push
mov
adc
scas
dec
sbb
or
test
pop
out
jmp
push
mov
lret
push
xchg
xor
cmp
xlat
push
pop
fstp
xor
addl
test
loop
push
shlb
cmp
inc
mov
push
lock
jae
mov
clc
mov
cwtl
push
dec
cmp
fisubrs
fwait
rcrl
ret
frstor
clc
add
test
jns
sub
insl
xor
jnp
loop
xor
xor
cld
enter
and
testb
jnp
es
sti
cs
mov
call
fisubs
inc
repz
fistps
in
jns
nop
add
bound
lods
cwtl
xchg
mov
mov
dec
mov
pusha
nop
fisttps
pop
add
dec
push
scas
ficomps
sbb
sbb
outsl
fists
dec
dec
push
cmp
insl
mov
xor
push
dec
xchg
and
loop
lea
shl
stos
hlt
push
dec
pushf
outsl
rcll
cmp
daa
pop
nop
ret
in
loopne
inc
jne
es
dec
or
popf
scas
je
icebp
mov
out
stc
lahf
jl
xchg
stos
aas
adc
cmp
shlb
adc
dec
xorl
jno
add
sarb
jecxz
fsts
cli
adc
int
mov
repnz
das
jg
push
cmp
loopne
test
fcoml
icebp
pop
jo
jb
icebp
mov
inc
shll
adc
jo
cli
mov
daa
or
dec
outsl
and
out
jl
dec
dec
sbb
lds
fistpll
aaa
and
ss
adc
into
push
lcall
pop
mov
packuswb
xchg
aad
xchg
and
mov
loopne
test
cli
push
je
fs
and
scas
test
mov
sbb
mov
orb
or
mov
sub
cmp
loopne
sbb
sub
inc
jb
or
loop
and
pop
jl
cmp
outsb
xchg
lock
inc
jnp
pop
adc
xchg
dec
add
ret
sub
add
int3
imulb
or
in
clc
test
into
dec
popf
cmp
sub
icebp
bnd
pop
sarb
dec
pop
testb
pop
sti
sbb
push
sti
mov
popf
adc
push
sbb
cmp
scas
push
inc
add
ficompl
mov
xlat
or
cmc
leave
jbe
test
aaa
lock
movsb
pop
xor
push
xor
loop
ja
sahf
cmc
pop
sahf
inc
or
jne
pop
icebp
mov
ss
sub
loopnew
xchg
fdivs
cld
in
adc
clc
loope
test
pusha
xor
aaa
push
sbb
icebp
mov
out
sbb
es
nop
fwait
clc
stc
test
sti
cmp
fmull
imul
and
test
cli
add
jne
fdiv
jnp
enter
out
ret
jnp
out
fdivp
imul
test
mov
cwtl
aam
add
fistpll
ret
add
roll
scas
push
fs
mov
add
xor
lock
dec
mov
icebp
jae
sub
pop
jae
fld
and
pop
repnz
inc
inc
clc
out
xchg
jmp
push
xchg
inc
ret
pop
daa
fwait
cltd
jno
adc
xchg
xorl
gs
jg
mov
adc
pop
xor
jl
or
pop
call
jge
das
inc
hlt
and
sub
inc
sbb
repnz
xchg
fldenv
sbb
fcoml
add
loope
mov
into
das
sarb
sub
clc
and
add
fisubs
es
in
test
aam
mov
sbb
inc
add
xor
lds
mov
jnp
in
inc
pop
adc
pop
loop
mov
stos
mov
cmpsb
adc
in
sub
mov
cmpb
lret
inc
adc
loop
rcr
les
pop
ljmp
sub
inc
adc
nop
dec
rclb
dec
out
js
jge
pop
pmuludq
jnp
jecxz
sbb
icebp
adc
xchg
dec
cltd
push
sbbl
adc
sbb
push
dec
jnp
pusha
jmp
push
dec
loopne
aam
fidivrs
cwtl
cld
or
ja
bound
adc
lods
cmc
jo
insb
aad
dec
mov
pop
xchg
add
ret
xor
or
push
ret
outsl
pop
in
and
lret
push
scas
scas
dec
inc
ja
roll
cmp
fldcw
xor
int3
call
out
gs
lahf
push
test
stc
xchg
cmpsb
incl
ds
add
push
and
in
in
std
xchg
out
adc
in
xor
lahf
or
and
mov
push
mov
mov
jge
pop
pushf
adc
mov
push
fs
add
or
addr16
iret
in
pop
lret
fwait
imul
and
dec
popf
popa
push
sub
dec
ret
lcall
movb
sbb
push
push
inc
add
add
and
xor
jnp
add
cld
lret
in
popf
or
inc
adc
sti
out
mov
push
mov
hlt
nop
sbb
icebp
dec
test
rolb
in
sbb
pop
js
jle
test
or
or
mov
pop
mov
mov
and
inc
sub
and
clc
push
in
pop
testb
pushf
fsubs
je
push
in
add
add
incb
jge
sti
ret
fisubrs
jl
dec
into
cmp
sbb
jg
out
outsl
mov
mov
dec
push
add
push
jl
loop
movsl
insb
sahf
je
xchg
js
push
cli
jmp
ret
or
int
cmp
cmc
xchg
push
mov
xchg
pop
mov
std
dec
sub
dec
stos
insb
xchg
pop
fadd
call
push
push
xchg
push
add
pop
sbb
add
shll
add
cmc
movsl
lahf
xchg
loop
enter
jns
sbb
sub
xchg
or
or
mov
add
xor
test
je
clc
push
xchg
dec
out
push
xor
inc
lret
aaa
mov
ja
sahf
adc
mov
lret
push
shlb
pop
int
ds
xchg
inc
sbb
cld
add
inc
in
pop
xchg
mov
jnp
popa
inc
dec
sbb
cmp
mov
xchg
mov
adc
and
sub
lds
insb
mov
adc
add
seta
xchg
inc
negl
sbb
lds
jl
jge
sarb
jecxz
jns
mov
andl
rorb
mov
xor
repz
and
outsb
rcrb
or
add
jae
or
cwtl
jae
lods
adc
ss
icebp
cmp
push
xor
xor
rorl
or
inc
ret
mov
in
aam
mov
jno
in
dec
shlb
jp
inc
out
mov
inc
in
mov
movl
xor
shlb
pop
test
out
nop
xor
ljmp
fs
inc
test
ja
mov
loopne
jg
dec
pop
popa
push
sarb
lcall
pusha
mov
ja
xchg
xchg
adc
cmp
mov
cwtl
dec
add
lock
bnd
loop
inc
test
add
insl
sti
add
in
fs
mov
andl
mov
fcoms
aaa
ja
push
adc
sbb
lcall
and
adc
fdivl
clc
outsl
loope
pop
add
push
or
jg
in
in
and
testb
sub
pop
std
test
pop
xchg
jecxz
pop
loopne
pushf
fwait
jnp
adc
inc
cmp
fwait
movsb
cmpsl
cld
jo
sub
or
test
nop
xchg
jg
or
push
pop
sub
test
les
or
and
or
cmp
pop
icebp
leave
js
sbb
add
adc
cs
test
dec
gs
adc
popa
hlt
push
mov
shl
shl
fistpl
cmp
push
inc
xor
clc
jg
push
dec
mov
or
and
inc
ss
pop
sbbb
ret
or
and
pop
sub
stos
fistps
push
mov
add
pop
std
pusha
fidivl
bsf
pop
outsl
add
jnp
xchg
cltd
xchg
clc
in
adc
pop
add
or
dec
sub
arpl
fildl
popa
movsl
jl
aam
les
or
cmp
ss
hlt
xor
jle
frstor
inc
jbe
outsb
lcall
mov
aaa
cmp
add
cmovb
cmp
mov
loopne
test
rcr
movsl
xor
stc
inc
cwtl
mov
or
cs
and
call
lea
andb
repnz
jle
mov
or
gs
mov
mov
inc
enter
out
inc
or
into
sbbb
add
ljmp
daa
cld
ljmp
clc
xchg
adc
pop
xor
sub
testb
outsl
call
add
inc
add
out
mov
shlb
sbbl
mov
push
mov
jle
js
pusha
cli
dec
adc
movsb
andb
nop
and
cli
jns
arpl
and
or
test
xor
mov
inc
repz
je
cmp
add
divl
pop
add
xor
pop
fdivr
data16
jae
mov
data16
or
adc
ljmp
std
jne
add
scas
clc
mov
dec
mov
jge
aam
daa
and
pushf
mov
shrl
cmp
jecxz
jno
stc
outsl
mov
jge
cltd
sbb
dec
test
inc
lock
push
lcall
and
fistl
mov
lea
adc
sub
xchg
ror
sbb
mov
push
pop
in
popf
sub
mov
adc
outsb
or
imul
lock
sub
jg
xchg
outsl
icebp
cmpsl
push
jp
adc
sbb
add
mov
jg
cmpsl
stc
test
mov
cwtl
or
out
fistpl
and
test
inc
push
lock
sbb
dec
sbb
dec
call
or
ja
and
stos
xchg
sub
mov
mov
ljmp
and
shll
or
cli
sahf
fsubrp
add
and
jnp
add
mov
and
and
dec
clc
out
push
shl
jmp
fstps
fildll
jge
pop
movsb
test
jl
in
xor
sub
pop
mov
dec
or
das
mov
or
pushf
andb
stos
dec
jnp
dec
cmpb
stos
and
ret
ja
repz
popa
scas
sub
pop
stc
cmp
ss
pop
rclb
jp
and
dec
addr16
mov
nop
xor
or
lock
xchg
sbb
das
in
jecxz
sub
pusha
adc
ds
push
out
pop
mov
mov
ja
jnp
aaa
pop
sti
pop
lock
in
dec
mov
daa
aaa
add
or
add
jmp
adc
mov
imull
ror
dec
loope
test
or
outsl
ja
or
sbb
pop
lds
pop
popf
aam
mov
mov
add
fst
mov
testl
dec
mov
hlt
test
pop
or
jle
push
mov
xchg
shlb
xchg
lods
stos
lahf
fdivrp
fcomp
sub
icebp
pop
and
push
das
into
push
roll
jns
sub
inc
cmp
lcall
dec
cmp
dec
push
outsb
inc
push
testl
adc
pop
bound
pop
ds
outsb
adc
mov
push
sbb
dec
dec
cmc
mov
and
ret
jge
nop
mov
jecxz
xor
daa
insl
adc
iret
and
mov
jg
mov
enter
sti
dec
cmpsb
movsb
or
mov
cltd
repz
inc
mov
mov
lock
sbb
dec
std
testl
push
out
bound
cltd
stos
cli
push
in
dec
pop
js
leave
cmp
or
dec
scas
or
or
mov
inc
add
cwtl
add
mov
faddl
cmp
cld
inc
and
pop
and
mov
int
push
jnp
out
xchg
fldl
test
push
pop
test
ds
js
jb
adcb
test
adc
pop
int
popa
add
pop
adc
stos
and
daa
ljmp
jl
scas
xor
sbb
dec
cmp
and
inc
sahf
outsl
jmp
loope
loop
cs
cmp
pop
ja,pn
xchg
in
outsb
xchg
arpl
pusha
push
imul
inc
je
cli
pushf
dec
and
out
ficomps
ja
inc
and
dec
push
pop
sub
cs
ds
push
inc
sbbb
out
repz
push
pop
sar
popl
jle
andb
mov
xchg
ljmp
xchg
inc
imul
sub
pop
faddl
in
or
in
cmp
inc
lret
sarb
outsb
sbb
fstpl
cmc
add
popa
stos
add
sti
sahf
jnp
add
push
pop
and
aad
aas
stos
jnp,pn
jnp
data16
ds
sub
adc
cwtl
jne
mov
lods
stos
movsl
xlat
adc
lea
lock
mov
xchg
fbld
dec
cmp
push
xchg
fsubrl
in
movsb
mov
pop
xchg
sbb
xchg
push
outsb
inc
cld
adc
add
insl
dec
mov
adc
pop
sbbb
push
dec
xchg
dec
cmp
mov
xor
outsb
mov
inc
xchg
fwait
jg
gs
enter
filds
or
lcall
add
mov
mov
pop
sub
imul
pusha
xchg
add
hlt
sbb
jle
jmp
bsf
lcall
lock
js
push
jmp
pop
pop
dec
push
adc
dec
or
jno
mov
sbb
push
and
sub
clc
cmp
cmp
scas
popa
cmp
aaa
jge
jmp
push
clc
mov
pop
int
std
std
adc
orb
arpl
cmp
data16
xor
sub
je
or
sub
and
in
dec
std
aad
mov
lds
xchg
rcr
cmp
add
sbb
cmp
hlt
add
sub
mov
mov
fbld
push
loopne
pop
in
lahf
lock
fdiv
xor
add
inc
cs
pop
mov
outsb
cli
repnz
cmp
fadds
xor
add
add
push
add
pop
xor
mov
xchg
jns
jae
lock
dec
mov
or
inc
scas
xor
mov
dec
dec
daa
or
dec
ljmp
sbb
movsb
dec
dec
in
or
aam
sbb
jmp
mov
das
xchg
es
pop
ja
xor
push
andl
bound
xor
jnp
pop
cwtl
arpl
scas
pop
sbb
pop
fildl
mov
push
rol
lahf
mov
mov
addr16
inc
add
stos
dec
lds
push
xor
movsl
xchg
aam
out
push
and
xor
pop
cli
pop
push
adc
lcall
push
imul
mov
std
inc
sahf
cltd
insb
test
dec
insb
sbb
inc
shrb
cld
ret
adc
pop
daa
fcoml
insl
xor
add
push
pop
lahf
inc
mov
add
cwtl
clc
sub
imul
push
and
push
add
test
jns
push
sbb
xchg
cmp
inc
adc
je
push
add
adc
test
decb
jb,pn
inc
add
adc
insl
xor
or
testb
sbb
adc
and
push
bnd
xor
mov
adc
push
pop
std
dec
push
xchg
xor
mov
in
cltd
jo
add
pop
push
rolb
xchg
jp
inc
inc
xor
jae
int3
jl
aaa
clc
in
fs
mov
add
push
xchg
addb
adc
xchg
shl
into
aam
and
shlb
cmp
xchg
dec
pop
jbe
push
xchg
test
cmp
add
cld
cmp
jmp
std
and
cmp
jge
fs
inc
and
aaa
pusha
mov
xchg
je
cld
test
cltd
ljmp
mov
jo,pt
sbb
push
jns
jp
mov
xchg
cmp
pop
dec
adc
inc
insb
cld
daa
mov
inc
xor
fadds
notb
ret
addr16
dec
das
dec
inc
cwtl
jl
mov
lock
xor
repnz
mov
loopne
cmp
mov
addr16
lock
pop
sahf
jge
pop
mov
mov
dec
aam
fidivl
cld
ja
rol
add
adc
std
in
arpl
cs
fdivs
ljmp
insl
out
loop
ffree
fildll
or
adcb
or
cmc
inc
ljmp
sbb
fwait
clc
cmp
jo
cmp
sbb
inc
nop
cmpsl
imulb
adc
fwait
nop
loop
adc
mov
cmp
adc
aaa
sahf
pop
xchg
aas
cs
cli
shlb
jb
in
hlt
pop
mov
inc
cli
add
cmp
jp
mov
dec
xor
loope
shll
popa
push
and
mov
xchg
out
pop
mov
xchg
xchg
dec
and
in
sbb
ja
lret
loopne
outsl
add
lods
out
pop
fidivs
enter
outsb
add
xchg
sbb
cmp
cmp
xchg
fnstenv
jmp
inc
bound
push
sbb
push
pusha
sti
xor
cmp
mov
xor
push
je
arpl
or
lret
xor
pop
mov
out
cmp
jle
cmp
rorl
jle
test
fdivl
loopne
and
mov
or
ljmp
out
mov
dec
fmulp
pushf
mov
out
pop
fstpt
sub
call
jb
mov
sbb
push
mov
jnp
push
or
test
lret
mov
out
sbb
mov
mov
pop
sub
je
out
insl
xchg
je
shl
and
andl
push
aam
mov
rcr
cmpsl
xchg
pop
xor
xchg
push
add
mov
test
pop
arpl
insb
add
les
std
scas
pop
lahf
hlt
or
mov
dec
nop
out
or
fdivrl
add
or
or
push
pop
fdivrs
cmp
ret
dec
push
out
sbb
dec
add
ljmp
mov
jns
cmp
add
iret
repnz
stos
sbb
ja
xchg
nop
xor
sub
cli
mov
addr16
jecxz
jnp
cmp
mov
in
pop
inc
push
and
xchg
xor
jae
inc
addr16
iret
jg
xchg
mov
int3
scas
pop
adcb
push
dec
push
or
add
mov
xchg
add
scas
out
inc
push
sbb
or
dec
mov
femms
jg
jmp
js
lret
jne
out
mov
int3
jp
push
lcall
xor
cwtl
shl
lods
xchg
add
sub
lods
stos
out
sbb
cmp
add
mov
cmp
or
rol
mov
mov
jmp
xchg
fwait
orb
inc
xor
dec
pop
xor
lods
add
insb
das
cmpb
push
xchg
loop
in
mov
cli
add
jno
pop
and
out
sub
dec
call
lds
adc
in
or
xchg
imul
cld
or
loope
pop
xor
int
mov
ret
push
int
push
mov
xorb
sbb
lock
pop
cmp
adc
adcb
shl
sub
xchg
cmp
mov
orb
fsubl
push
adc
or
cmp
push
push
mov
and
hlt
push
aad
or
jb
test
je
dec
addb
sbb
mov
loop
bound
push
xchg
add
push
lret
das
jo
aaa
pushl
sbb
imul
jbe
lock
sub
in
data16
add
xor
lds
dec
pop
push
mov
rcrl
mov
jmp
setg
stos
adc
data16
movl
stos
addl
out
stos
jo
mov
push
psubq
inc
cmpsl
pop
shr
add
icebp
js
ret
rcrb
imul
andl
dec
push
aas
xlat
xchg
add
aam
shr
or
inc
sahf
mov
les
jb
cmp
lds
das
dec
inc
and
dec
aam
push
pop
xchg
cmpsb
xchg
cwtl
daa
and
loope
mov
cmp
xchg
stos
fldl
and
mov
pusha
jne
inc
xor
push
fs
mov
mov
push
pop
xchg
dec
pop
out
pop
adc
rorb
xor
adc
sbbb
repnz
sub
jmp
dec
loop
mov
add
es
cmp
sub
stos
inc
inc
mov
dec
mov
cmp
sbb
loopne
cs
xor
and
jecxz
loopne
adc
fstpt
lret
js
fcmovbe
lods
test
dec
push
or
orb
adc
ror
pop
xchg
out
pop
jmp
pop
push
jge
xchg
mov
call
mov
loopne
dec
dec
xor
cwtl
sarb
dec
shlb
pop
push
into
lret
dec
xor
jp
jge
rcll
lcall
sub
pop
sbb
sub
test
fdivl
pop
pop
lret
in
sbbb
fistpl
hlt
sbb
loopne
mov
lods
scas
sbb
or
into
testb
pop
mov
lock
call
test
dec
scas
popa
mov
cli
scas
inc
cs
repnz
divb
imul
jg
movl
and
mov
sbb
mov
test
mov
ljmp
iret
mov
xchg
pop
das
sub
dec
sbb
leave
lods
mov
and
cmp
xchg
imul
ficompl
adc
movsb
lods
mov
outsl
int3
mov
cmp
inc
sbb
ret
sbbl
test
dec
mov
das
mov
cld
loop
scas
je
mov
into
fcoml
cltd
je
mov
mov
push
incb
fcompl
inc
sub
xor
mov
mov
aaa
inc
std
push
aas
jno
ss
xor
cli
jnp
pop
cld
rolb
push
mov
and
jo
inc
in
clc
pop
or
sub
aaa
push
cmpsb
js
jne
pusha
test
lds
or
push
cwtl
inc
repnz
mov
pop
mov
mov
jp
shr
lds
sti
jecxz
sub
fldl
daa
sbb
and
jle
lods
mov
test
inc
mov
adc
jge
mov
rclb
jb
jns
inc
mov
cmc
mov
sbb
insl
aad
sub
loopne
gs
scas
int
jns
cld
aaa
fcmovnb
cmp
stos
xor
adc
gs
and
xor
fdivrl
lock
or
outsb
sbb
add
xor
lods
cmp
jb
jns
mov
cli
pop
imull
paddw
push
or
xor
xor
cwtl
ds
pusha
lock
xchg
mov
into
xor
xchg
sbb
jecxz
sub
fbld
mov
push
mov
sbb
ja
insl
mov
adc
lock
sahf
pop
or
push
scas
mov
pop
fwait
fs
or
jno
inc
rorb
pop
lods
insb
or
cmp
mov
clc
jl
mov
nop
sub
or
jnp
jns
test
jge
jnp
fs
add
xchg
or
movsb
dec
std
enter
dec
psubusw
cmp
jo
cmpb
jns
daa
mov
sbb
ret
mov
push
jmp
push
jnp
loopne
sub
in
add
call
jo
push
sub
add
dec
adc
int
sbb
lcall
es
ror
pop
push
fwait
cli
and
sahf
daa
pop
int
rcrl
xchg
in
daa
ja
stos
fadds
inc
cmp
rorl
mov
loope
test
jno
pusha
adc
push
or
movsl
push
adc
xor
push
fs
adc
cmc
les
aam
jmp
call
filds
mov
xchg
mov
fs
mov
pop
insl
fs
jle
push
hlt
and
aam
lods
inc
or
cmp
mov
sub
shl
or
pop
or
out
or
jecxz
mulb
mov
loop
test
dec
push
dec
stos
mov
mov
pushf
inc
outsl
mov
push
fisubl
or
fisubl
add
add
push
into
push
shll
pop
mov
xchg
popa
lock
fdivrl
addr16
fdivr
mov
push
sbb
jo
add
hlt
mov
mov
or
ljmp
xor
fildl
int
int3
lea
dec
dec
adc
loope
adc
or
incl
dec
loope
addr16
cmp
mov
mov
outsb
jmp
addr16
sbb
in
adc
cmp
cmp
loopne,pn
xchg
pusha
mov
mov
mov
xor
repnz
outsl
inc
ss
push
mov
inc
fsub
mov
xor
sarb
add
mov
negl
int3
pop
cmc
pop
test
adc
pop
sub
mov
movsb
scas
ret
lea
mov
cmp
sbb
mov
add
hlt
cmpsl
sbb
clc
cmp
push
inc
mov
pusha
shlb
bound
xchg
je
repnz
repz
iret
push
lock
push
lea
sbbb
push
fisubs
jp
cmp
and
mov
mov
fsubl
mov
jecxz
out
rclb
mov
sbb
aaa
xchg
adc
mov
jbe
xor
pop
inc
and
sbb
dec
cmp
jl
mov
jae
cmp
cld
dec
add
pusha
push
insb
cwtl
lods
xorl
js
shlb
rorl
push
push
inc
rorl
not
rorb
scas
xchg
iret
adc
mov
and
leave
push
sub
dec
std
lock
cli
jnp
adc
loope
fistps
insl
jnp
push
add
mov
cwtl
sahf
aam
add
movsb
pop
mov
gs
add
sahf
mov
pop
add
dec
pop
out
jle
mov
clc
cmp
and
push
pop
cmp
fs
dec
or
ja
nop
ret
cvtps2pd
push
sbb
xchg
int
and
fwait
pop
adc
fbld
test
invd
add
mov
andb
pop
push
inc
push
inc
cs
cltd
ds
dec
nop
lret
push
xor
inc
cmp
js
sub
mov
and
sbb
pop
hlt
inc
or
sahf
xchg
push
mov
xor
bound
and
repnz
out
popa
and
push
shl
das
pop
inc
sti
inc
xchg
xchg
push
xchg
xor
loopne
fldl2t
aas
jge
loope
lcall
icebp
test
mov
fnsave
pop
dec
push
js
push
jp
push
push
pop
scas
and
pushf
insb
js
and
cmc
xchg
test
jne
cmpsb
in
je
call
dec
push
cli
fmull
dec
inc
sbb
mov
loope
jle
push
sub
push
loopne
mov
shl
push
or
mov
jg
jo
and
push
roll
outsb
cs
xrelease
fs
ss
sub
add
xchg
icebp
ret
dec
jo
sub
xchg
test
mov
jge
jne
ret
mov
xchg
push
je
jns
and
lock
sbb
and
js
in
data16
lock
adc
hlt
xlat
cmp
push
jl
and
cltd
arpl
fs
shlb
xchg
imul
add
test
movb
aad
leave
cmp
enter
jno
popa
add
clc
adc
sbb
mov
inc
nop
jo
cmp
popf
fs
xlat
data16
ds
mov
aaa
ja
add
mov
cmpsl
out
cmp
pop
into
and
rorl
adc
inc
icebp
aam
ja
jg
mov
shll
xchg
xor
test
test
aaa
mov
pop
sbb
pusha
and
jp
sub
sbbb
in
mov
mulb
adc
dec
loopne
and
rorl
mov
or
inc
dec
jle
xchg
or
mov
xchg
daa
mov
orb
jl
icebp
xchg
mov
insb
inc
les
in
ret
push
or
lods
loope
adc
lcall
mov
sub
pop
xchg
xorb
dec
push
mov
xor
iret
rcr
mov
cmp
push
inc
inc
or
mov
mov
mov
push
cmp
xchg
in
sbb
movsb
loopne
xchg
mov
lahf
push
fcomps
jno
inc
mov
cmp
std
add
imul
cltd
test
clc
pop
push
aad
dec
ljmp
push
pop
mov
out
push
and
xor
loopne
int3
imul
mov
mov
and
mov
out
pop
cmp
sub
mov
daa
push
cmp
and
mov
inc
bound
out
xchg
addr16
push
mull
out
jle
cmp
mov
push
sti
dec
pop
cmp
fidivs
or
daa
aaa
incl
jo
popf
iret
mov
mov
jno
nop
pop
sub
add
test
jle
mov
push
sbb
sub
jns
xchg
rclb
mov
jl
fs
clc
addr16
jo
xor
add
test
push
gs
jo
repnz
xchg
loop
roll
imul
dec
or
mov
cmc
dec
xor
and
add
leave
push
or
cli
add
cmc
pop
sub
pop
hlt
or
cmpb
push
pop
js
rcl
inc
push
loope
xor
sbb
dec
jnp
dec
dec
notl
jecxz
movsl
inc
or
rol
js
mov
call
sbb
mov
cmpsb
xchg
inc
mov
loope
scas
fdiv
xchg
adc
dec
and
pop
adc
scas
out
or
jno
stc
xchg
adc
in
sbb
pop
js
loop
mull
popa
fbld
xchg
cmpsb
jb
jbe
cltd
mov
sub
scas
test
add
jmp
jp
outsl
cwtl
les
lahf
loope
adc
testl
data16
out
mov
les
jl
xor
sbb
aas
daa
xchg
jecxz,pn
gs
or
pop
andb
inc
icebp
push
push
cld
cs
aaa
rorb
cmp
data16
mov
insl
mov
pop
push
mov
cmp
cli
add
cmpb
sbb
pushf
testb
ret
rorb
clc
push
mov
loop
and
mov
mov
stos
lds
pop
lahf
shll
int
pop
in
sbb
xor
xor
and
pushf
mov
xchg
and
pop
xorb
pop
add
and
add
loope
pop
das
sbb
jle
lock
repnz
mov
xlat
add
or
xchg
pusha
xchg
or
ss
adcb
js
test
rorb
pushfw
popf
push
das
mov
clc
xor
dec
subl
es
jnp
and
sub
jmp
stos
mov
add
call
xor
adc
in
inc
sti
jp
sbb
push
adc
or
mov
std
test
das
incl
ret
mov
fsub
push
jmp
dec
inc
jg
inc
push
mov
stc
jp
sub
insl
sbb
ss
and
mov
addb
dec
pushf
add
adc
loopne
pop
notl
out
sub
pop
add
pusha
cmp
gs
fwait
test
inc
aaa
mov
je
pop
xchg
push
call
aaa
jmp
mov
sub
mov
push
pop
push
mov
test
mov
insl
jmp
aas
add
sub
and
cmovo
out
aam
sbb
adc
add
pop
popl
mov
loopne
jae
fs
out
ret
jns
inc
xor
fnstsw
jp
xor
and
jp
fs
xchg
xor
and
cli
out
dec
arpl
adcb
xchg
in
jge
xchg
shr
dec
adc
xlat
and
test
cmpl
fs
jmp
cwtl
sbb
adcb
xor
arpl
mov
imul
dec
push
lock
pop
xchg
lea
add
outsl
stc
test
add
xchg
xor
sub
jb
dec
fiaddl
clc
mov
push
dec
jnp
mov
sub
add
push
mov
sbb
outsb
cmp
push
inc
mov
sub
pop
add
das
mov
adc
mov
and
mov
cmp
jl
aad
out
or
sbbb
ret
mov
lock
pop
fbld
adc
push
mov
cli
insl
in
pop
cmc
and
inc
pop
adc
inc
mov
adc
xor
fs
cmc
test
lahf
insb
xor
imul
das
adc
leave
call
adc
adc
cmp
xchg
adc
and
add
gs
out
fdivs
lret
cld
stc
in
gs
inc
aad
jae
sbbl
repnz
call
sahf
or
sarb
repnz
adc
or
in
fwait
pop
int3
mov
or
scas
cmp
out
fwait
lea
je
sbb
mov
sahf
xor
test
push
pop
je
and
notb
mov
cli
hlt
cmpsl
xchg
test
pusha
dec
xchg
cli
fbstp
inc
sbb
cmp
sbb
mov
sbb
cltd
sub
xchg
nop
lock
adc
cwtl
loop
pusha
cli
add
ret
loop
sahf
adc
cmpb
xor
shll
push
and
dec
add
mov
xor
ss
iret
pop
mov
mov
adc
xor
cmpsb
and
stos
lea
scas
shrl
jb
mov
aaa
pop
sti
fucom
jmp
mov
xor
sahf
lret
ja
push
inc
daa
nop
in
add
mov
repz
jo
jl
fistpll
or
push
in
dec
ret
adc
clc
testb
cmc
dec
out
mov
add
pop
mov
pusha
ljmp
and
notb
pushf
inc
add
mov
jns
xchg
push
push
sub
add
aaa
insl
insb
in
inc
push
xchg
jo,pt
in
insl
loope,pt
pop
insl
jle
dec
push
push
jo
loopne
xor
add
mov
adc
lahf
add
push
andb
out
adc
mov
pop
out
stos
call
gs
or
jne
xchg
xchg
dec
outsb
and
adc
dec
imull
push
jl
sub
and
fisttpll
mov
adc
cmp
mov
cmpl
decl
xchg
das
add
bound
inc
js
je
or
adc
and
mov
aaa
je
in
push
dec
repnz
push
call
addr16
fistl
push
mov
daa
ficomps
xchg
sbb
xor
lods
cmpsl
push
inc
lcall
add
adc
mov
testl
cmp
and
outsb
fadds
hlt
dec
push
les
ja
jge
jecxz
inc
test
jo
jmp
push
dec
jp
mov
cmp
cmp
imulb
clc
mov
mov
das
push
push
scas
mov
push
dec
or
outsl
jg
pop
aas
adc
outsb
cs
cmpb
aas
das
jo
jecxz
lahf
aam
in
sbb
fisubl
test
fcoms
fadds
outsl
jle
clc
mov
mov
xor
fwait
ds
cmp
ror
decl
adc
sub
fldt
pop
sbb
aam
ret
mov
jb
xor
insl
mul
int
fildl
fsubrp
js
push
cltd
xchg
pop
popl
fstl
and
or
dec
push
push
cmc
mov
aam
and
lret
les
push
mov
fs
mov
mov
lock
rcll
fists
jge
adc
lret
fwait
stos
adc
pop
mov
xlat
and
sti
sbb
sarl
or
iret
adc
fimuls
jg
loop
mov
stos
lret
movsb
jecxz
out
lock
dec
xlat
roll
mov
pop
sbb
xor
jnp
jnp
jne
ret
dec
xchg
cli
int
and
rcl
rcll
sbb
sti
lea
add
in
lods
xchg
mov
or
cld
mov
adcb
aaa
pop
scas
lret
and
mov
loope
pop
mov
data16
sub
mov
sti
cmc
test
aam
jo
es
mov
adc
int
sbb
mov
cmpsl
out
leave
or
xchg
push
ds
mov
or
dec
fstl
fnstenv
add
int
pop
fwait
jle
dec
xchg
into
or
push
mov
and
jne
jp
aam
int
sbb
fisubs
rcrl
pop
push
rclb
pop
cmpb
outsl
pop
js
rolb
cwtl
sub
xor
xor
mov
sarl
mov
pop
test
mov
xor
lret
ret
fidivl
pop
or
mov
jl
mov
mov
adc
lret
push
add
push
stos
xchg
fimuls
fsubrl
jmp
cmpsl
test
cmpb
int3
fistl
pop
inc
loopne
mov
lea
or
push
ja
into
les
scas
scas
mov
and
cmc
in
mov
outsb
hlt
sub
push
xlat
leave
push
mov
mov
add
jge
pop
xor
es
mov
dec
xor
jno
rolb
sub
iret
dec
mov
inc
lock
cwtl
sbb
mov
jp
dec
adc
sarl
sub
mov
das
push
xlat
jb
hlt
xchg
jnp
adc
mov
push
mov
lods
divb
lods
cmc
enter
aam
jecxz
fmul
inc
mov
sbb
mov
nop
adc
add
stos
lods
mov
aas
shl
inc
pushl
push
push
jno
into
ret
dec
int3
pop
push
and
scas
inc
sub
insb
aad
jp
mov
pushf
faddp
push
in
imul
ljmp
test
mov
xor
sti
stos
cli
filds
shl
fdivrl
cwtl
sbb
mov
pop
mov
or
icebp
inc
aaa
and
lods
jg
mov
fnsave
mov
outsl
shr
xchg
loope
ret
sub
int3
das
adc
call
fdivrl
outsb
aas
mov
and
cmp
aad
rol
add
pop
dec
stos
loopne
dec
ret
stos
lahf
dec
test
mov
pop
in
jmp
insb
leave
fcmovnb
les
dec
add
movsl
mov
mov
inc
mov
cmovne
mov
mov
sti
ret
mov
fprem
pop
mov
and
or
and
inc
popf
cmpsb
pop
cli
xor
sbb
xchg
mov
xchg
jl
jo
hlt
dec
or
or
add
lods
mov
nop
jge
push
outsl
std
inc
popaw
or
scas
mov
push
push
enter
jge
and
aas
xchg
and
mov
sub
xchg
pop
test
scas
xor
pop
mov
jb
ja
pop
cli
xor
pop
iret
push
ret
les
lock
shl
cwtl
movsb
push
jbe
aas
ds
mov
imul
inc
repz
sbb
lea
pop
js
pop
jl
or
fldt
outsl
inc
adc
aad
and
ljmp
ja
xor
popf
repz
in
push
push
xchg
push
pop
pop
repz
addr16
les
cltd
test
lret
rolb
dec
data16
pop
fmuls
stos
sbb
cmp
push
fwait
call
xlat
mov
orl
jmp
ss
push
cli
movsb
dec
iret
adc
fdiv
jno
mov
jbe
into
nop
adc
shlb
pop
hlt
cwtl
leave
mov
scas
mov
lock
outsb
adcb
js
xchg
movsb
rcrl
sarl
mov
lea
lods
pop
jbe
movl
arpl
and
aad
pop
jg
push
add
mov
add
xor
xchg
int
outsb
shl
les
les
lcall
scas
pop
cmp
lahf
mov
les
pop
xorl
rcll
sbb
push
add
lds
sbb
lock
fs
adc
int
call
sbb
test
mov
jl
mov
cmpsl
inc
stos
dec
mov
lods
pop
int
sbbb
mov
mov
sarb
fnstsw
or
je
stc
sbb
cmp
adc
dec
out
sbb
es
mov
push
xchg
mov
lods
movsb
inc
xor
mov
rorb
addr16
out
jmp
jg
ds
loop
lock
adc
cmpsb
ss
scas
cmp
ja
out
jp
cltd
ss
jae
es
mov
dec
mov
shrl
stos
jmp
and
pop
stos
loop
jecxz
lcall
xlat
lret
outsl
rorl
insb
xlat
lds
in
out
fsubs
popa
shll
clc
adc
call
xchg
add
lret
mov
add
jge,pt
aaa
fmul
ret
aad
sbb
js
add
cmp
xchg
mov
ja
push
test
pop
das
sub
cld
ror
add
xchg
mov
mov
es
les
jb
jl
inc
xchg
test
pop
and
in
push
sahf
mov
mov
out
idivb
test
int3
jbe
lods
arpl
or
or
and
add
aaa
std
dec
push
cld
or
das
out
jno
lea
pushf
sbb
cld
in
pop
clc
aad
sbb
cwtl
aad
mov
add
out
scas
stos
sbb
inc
mov
add
insl
xor
cmp
je
fstps
xchg
jl
in
or
and
movsl
mov
test
mov
dec
jle
xchg
add
loop
jge
pop
js
mov
add
sahf
iret
rol
ret
or
mov
pop
mov
insl
imul
cmp
dec
mov
outsl
cs
cmp
mov
imul
test
xchg
fistpll
pusha
cmp
add
ret
or
sahf
add
sbb
shll
adc
jge
push
dec
roll
dec
sahf
popf
add
nop
mov
cmp
mov
out
xlat
hlt
dec
xchg
cmp
ljmp
dec
ljmp
dec
add
mov
and
mov
jg
fstpt
push
jne
fiadds
push
aas
les
icebp
sub
push
iret
lods
adc
mulb
call
jge
test
xor
sub
rorl
addr16
or
es
and
adc
rorb
xor
sub
jnp
out
pop
notb
xchg
jecxz
es
jo
sbb
pop
mov
xchg
ret
js
jg
loopne
or
xchg
mov
loop
bound
clc
aaa
rcl
out
push
mov
push
ljmp
cmp
out
mov
mov
push
mov
stos
adc
mov
mov
icebp
pushf
enter
pusha
daa
insl
mov
ja
push
pop
cmp
aad
test
cmp
add
cmp
sub
sub
adc
pop
leave
xchg
nop
loope
push
or
adc
les
rolb
inc
mov
jno
scas
add
ljmp
xor
cmp
dec
push
out
dec
xchg
jo
flds
pop
adc
mov
std
inc
mov
jp
loop
lahf
mov
mov
push
mov
fadd
popa
bound
cs
fdivp
dec
jnp
cmpsb
mov
or
mov
cmp
add
lods
ja
test
call
je
push
pop
cmc
adc
lret
jb
lock
ret
and
iret
icebp
pop
dec
jecxz
mov
and
xchg
pop
jbe
popf
xor
std
jo
xchg
add
xor
jge
mov
and
mov
cmpsb
gs
cld
push
mov
sti
fstp
jg
movsb
mov
sahf
js
test
cmc
or
aam
scas
ja
sub
and
jl
adc
pop
adc
cltd
mov
sub
gs
mov
inc
sahf
cmp
or
xor
xchg
insl
dec
mov
mov
rorl
ja
and
push
rcrl
andl
test
into
pop
mov
je
bndstx
into
cmpl
adcl
aas
mov
imul
out
into
mov
jp
movsb
les
sbb
test
jbe
ljmp
add
mov
mov
ja
outsb
cmp
jg
psrld
nop
mov
sub
mov
adc
push
test
sbb
push
pop
push
mov
arpl
in
rcrb
stc
sahf
aaa
lahf
mov
enter
mov
repnz
das
add
leave
xor
cmpsb
in
xchg
lods
jp
ljmp
stc
fwait
push
aas
push
cmp
sbb
adc
outsl
rol
or
mov
popf
rcrl
lret
sarb
add
loope
test
mov
aaa
frstor
loope
aad
lds
inc
inc
aaa
pop
add
add
mov
or
jle
xor
fnstsw
lcall
pop
push
roll
ror
out
mov
inc
xor
sbb
shrb
enter
rolb
inc
test
adc
sarb
inc
pop
add
and
sbb
add
mov
xchg
nop
jo
pop
xor
jmp
jno
sarl
cli
dec
movsl
or
cmp
outsb
sti
inc
mov
jl
faddp
push
das
popa
rcll
test
stos
push
rcr
jno
inc
int
lods
mov
xor
or
adc
mov
pushf
mov
lock
orl
add
loopne
mov
mov
mov
scas
mov
jne
or
inc
jmp
and
arpl
test
xchg
xor
mov
inc
jle
outsl
mov
and
out
loop
mov
mov
inc
sbb
fidivl
push
gs
lods
repnz
insl
in
incb
lods
dec
shlb
push
imul
test
ds
add
iret
mov
ret
movsl
pop
lcall
jmp
test
mov
fstpt
push
mov
out
cli
repnz
xchg
xchg
pusha
push
xlat
fcmovnu
and
add
or
sti
cwtl
fdivrp
pop
cmc
jae
mov
push
mov
orl
or
popa
and
repz
call
cmp
inc
mov
or
inc
lahf
outsl
insb
movsl
pop
mov
rolb
inc
sbb
cld
movsl
aas
sbb
add
mov
sub
popf
mov
jg
shlb
push
adc
cld
aam
sbb
sub
test
rol
scas
or
pop
subb
les
push
add
shll
push
incb
in
lcall
adc
aaa
jg
push
sub
clc
dec
push
aam
cli
rol
out
sahf
in
mov
sbbb
pusha
stos
test
xchg
add
mov
ljmp
imul
aas
mov
leave
add
mov
dec
jbe
push
out
in
cmp
stos
fnstcw
and
mov
jmp
sbb
popa
mulps
inc
add
cli
or
pop
rolb
sub
ret
mov
out
pushf
adc
adc
jns
aam
mov
andb
shlb
mov
mov
lds
scas
rcl
repz
pop
cmp
mov
mov
mov
movsb
nop
sub
mov
repnz
iret
stos
pusha
add
ljmp
inc
movsb
add
pop
push
xlat
pop
jne
mov
and
std
sbb
cmp
mov
mov
mov
add
mov
xchg
dec
aaa
std
and
pop
into
xchg
and
mov
rcll
icebp
fists
test
add
int
gs
push
mov
and
lret
gs
shll
ss
mov
xchg
test
rcl
ret
dec
shrl
inc
mov
push
pop
add
inc
fcomps
idiv
mov
iret
mov
jecxz
lock
cmpsb
push
js
mov
pop
push
mov
data16
rcrb
inc
and
loop
push
mov
fiadds
daa
fcompl
lds
movsb
insb
adc
cmp
ret
adc
cld
mov
cli
fdivs
pushf
neg
aad
loop
push
cmp
mov
insl
jmp
dec
mov
mov
ret
out
icebp
ret
mov
gs
dec
mov
add
jno
inc
addr16
mov
outsb
add
shrl
push
shlb
clc
push
jns
mov
mov
ret
push
and
das
lret
clc
movsl
mov
out
fsubl
add
jae
xchg
repz
sub
push
fistpl
push
stos
mov
mov
inc
mov
jno
in
scas
int
add
xchg
mov
mov
sub
addb
jl
or
fistpl
xchg
cmp
loopne
ret
cmp
xor
arpl
popf
icebp
jmp
push
or
push
incb
shl
dec
cmpl
and
mov
cld
bnd
cmpsb
nop
pminsw
pop
mov
out
jbe
xchg
sub
int3
inc
pop
imul
pop
push
inc
cld
testb
imull
lods
out
fnstenv
sub
pop
sub
rorl
push
fs
cld
mov
imull
adc
mov
fimull
and
add
out
lret
cmp
mov
ret
xchg
inc
lret
pop
testb
push
mov
jp
or
test
icebp
mov
cmpsl
std
or
jp
jmp
xchg
repnz
clc
jo
ja
sbb
subps
mov
sub
adc
aaa
pop
lds
and
add
rcr
mov
and
pop
mov
rol
sub
sub
adc
cmp
pop
lret
push
out
mov
cltd
xchg
jmp
push
pop
push
shlb
pop
add
mov
insl
and
and
xchg
lea
push
bound
xchg
jg
sbb
outsl
push
loop
cmpb
add
push
jbe
mov
hlt
cltd
test
sbb
ds
xlat
cmpsb
push
mov
and
ret
test
push
pop
inc
rorl
mov
xor
and
js
into
hlt
rcrl
in
dec
lods
xchg
call
and
mov
sub
shr
cmp
sti
inc
rorl
jp
jmp
hlt
push
sub
in
xchg
push
sub
adc
pop
cmpsb
fsub
cmp
pop
cli
psrlq
and
in
push
ljmp
test
pop
sarl
xchg
enter
rclb
repnz
sbb
or
ror
mov
movsb
out
sti
inc
mov
rcrb
repnz
sbb
mov
les
ficompl
bound
jl
imul
push
inc
insb
ret
push
cld
loopne
iret
sbb
dec
mov
lahf
aam
dec
clc
inc
sbb
sub
lds
bound
pushl
test
jg
sbb
or
daa
in
pop
stos
lods
aas
or
mov
cmpsl
jmp
bound
ret
sub
in
movsb
sar
sbb
adc
mov
adc
mov
pusha
adc
scas
test
xchg
mov
les
cli
mov
imul
int
mov
sbb
adcl
push
push
or
pushf
dec
es
lods
icebp
jge
mov
inc
jmp
and
mov
mov
cmpsl
adc
dec
daa
adc
push
insb
cli
fldt
gs
jge
filds
fdivl
dec
adc
mov
xor
jp
lds
adc
jp
pop
inc
fildll
xor
shrb
out
test
pop
std
fidivs
cmpsb
dec
inc
xlat
les
rep
xchg
cmp
loop
jp
movsb
iret
out
mov
mov
mov
mov
pop
not
xor
cmp
ret
xor
iret
jp
jle
dec
aas
add
iret
jmp
sub
lret
in
xchg
outsb
fdiv
cmc
or
in
outsl
pop
in
pop
dec
ss
mov
int
adc
cld
test
fsubs
mov
dec
rcrb
xor
and
mov
add
fisubrs
outsl
sub
mov
xor
xchg
push
mov
dec
push
es
xchg
gs
stc
inc
push
lods
dec
into
sbb
and
je
push
ds
fstpl
jle
subb
loope
scas
loopne
pop
jno
or
xor
cmp
scas
and
mov
xchg
call
pushf
fprem1
push
pop
shr
daa
les
jmp
jo
mov
lahf
inc
mov
loopne
push
dec
dec
lock
outsl
mov
fidivrs
imul
pop
and
push
inc
into
fimuls
stc
movsl
pslld
arpl
stc
sub
jge
out
mov
mov
pop
fwait
cli
movb
add
sbb
out
in
or
push
into
ljmp
cwtl
cmpsb
pop
cli
repnz
es
stos
sti
out
popa
je
lahf
insl
outsl
add
movsb
sahf
les
dec
je
add
dec
stos
and
xchg
dec
and
into
outsl
jge
sbb
mov
inc
outsl
insl
mov
or
mov
push
stos
dec
andl
cmp
mov
stc
pop
addl
jne
mov
outsl
push
mulb
mov
daa
lock
jns
call
imul
arpl
cmp
mov
jl
sbb
push
add
movsb
shrb
inc
xchg
and
in
movsb
inc
sahf
or
ret
insb
adc
push
and
jl
xor
add
and
dec
test
mov
jmp
xchg
cmp
shlb
and
mov
mov
pop
mov
ss
jle
call
fwait
mov
pop
or
xchg
dec
sbb
popf
xor
fisttpll
sahf
adc
out
jns
ja
adc
sti
mov
shrb
daa
inc
outsl
int
fidivrs
sbb
ret
clc
jne
sahf
mov
adc
ss
stos
pop
cmp
ljmp
and
ljmp
xchg
test
or
movsb
and
nop
mov
rorl
xor
mov
lret
mov
xor
push
push
and
lea
xor
loop
xchg
movsb
inc
lods
aam
clc
push
ja
lcall
push
adc
xor
xor
ja
jne
jae
call
pop
jne
sbb
icebp
stos
mov
test
xchg
movsb
and
rclb
sbb
xchg
loop
xchg
imul
and
leave
test
hlt
pop
mov
push
pop
imul
std
mov
lret
sub
call
or
jae
adc
lahf
lret
fs
xchg
dec
mov
hlt
mov
mov
pusha
mov
ss
sbb
inc
sbb
mov
push
dec
test
xchg
test
xor
sbb
sbb
loopne
adc
or
push
out
int3
push
and
jmp
cmpsb
lcall
or
data16
popw
mov
sub
mov
or
aaa
mov
je
cmp
xchg
aad
push
jmp
inc
test
and
or
jge
sbb
or
adc
add
popw
ds
int
fcomi
aas
sbbl
mov
jne
fdivl
dec
aaa
pop
jne
stos
sub
xchg
pop
jle
fs
repnz
divl
mov
or
jg
imul
adc
push
ds
js
pop
xor
push
sbb
dec
loopne
push
ljmp
jecxz
imul
popa
push
fists
xor
or
xchg
les
das
xchg
jle
rclb
shrl
and
neg
pop
movsl
jo
sbb
and
ljmp
and
movsl
sub
addr16
jge
sbb
cltd
xlat
jbe
xor
mov
fdivs
jnp
call
aaa
rorl
testb
pusha
push
xor
mov
push
jb
adc
ret
and
xor
dec
mov
std
cmp
shrl
or
clc
and
out
push
push
addl
inc
inc
cs
pop
or
add
or
xor
ret
stc
xor
addr16
adc
and
or
mov
adcb
rol
pop
cwtl
xchg
in
popf
xor
movb
cs
sub
xchg
nop
push
sub
xchg
clc
jle
imul
popa
push
mov
sub
push
sub
setb
repz
sbb
ror
and
mov
add
push
pop
cmp
inc
or
aad
adc
jnp
dec
sahf
push
dec
push
adc
xchg
aas
dec
hlt
pop
xchg
shll
cmp
push
into
shlb
shl
xchg
movsb
xor
out
xchg
xchg
mov
and
adc
mov
dec
jbe
jne
xchg
xchg
mov
popa
int3
push
push
mov
push
ja
inc
ret
or
icebp
push
pop
mov
xchg
fadds
fnstcw
adcb
jp
hlt
inc
aaa
movsb
mov
adc
or
lds
cmc
or
lods
loope
cmp
sub
mov
lods
scas
lods
push
jb
mov
fwait
aaa
dec
hlt
mov
enter
rolb
jb
ss
inc
add
pop
xor
push
fldt
push
out
inc
sbb
sub
fwait
in
sbb
adc
mov
out
pusha
movsb
pop
add
clc
sub
fs
inc
inc
lahf
or
arpl
jns
sbb
mov
dec
mov
lds
cmc
mov
rorb
cmpsb
fs
idiv
cwtl
sbb
sub
xchg
push
movb
andb
inc
notl
daa
add
aam
daa
dec
dec
sbb
sbb
sbb
je
sbb
dec
xor
xor
rorl
in
push
jno
xor
adc
fwait
inc
add
aas
xor
sahf
les
dec
in
out
or
sbb
xchg
jmp
mov
xchg
popa
jbe
or
nop
insb
or
jnp
inc
dec
and
and
rolb
out
dec
fs
test
and
mov
cld
sbb
mov
adc
lret
push
xor
and
andl
into
les
xchg
cs
cmp
xor
aam
jne
inc
jbe
or
adcl
sbbl
lods
in
dec
inc
shrl
xchg
xor
sbb
data16
repnz
push
int3
push
shll
push
cmp
pop
rcrl
je
orl
xorl
fidivrs
sar
loop
and
push
push
call
sub
fs
sbb
sbb
adc
and
xor
xor
xor
or
rclb
inc
bnd
add
ja
leave
clc
clc
xchg
mov
and
rolb
dec
shl
or
cmc
lret
xor
shl
test
lds
into
cli
leave
sub
test
inc
xchg
or
mulb
loope
lret
pusha
push
adc
insl
sbb
xchg
cmpsl
xor
js
shrl
add
jle
les
icebp
push
sarb
pop
rorl
xor
lds
adc
push
sbb
popf
push
push
pushf
pop
fs
mov
cld
mov
popf
movsb
xchg
sbb
add
cmp
mov
cmp
fcmove
addr16
and
iret
mov
loop
orl
incb
movsb
ss
add
push
lds
inc
sbb
xor
ret
xor
scas
push
mov
jae
add
std
inc
cli
xor
push
xor
setns
pop
daa
or
sti
sbb
ret
mov
and
adc
pop
xor
and
mov
cmp
cs
or
inc
mov
sbbb
or
fisttpl
fsubr
call
popf
sub
mov
and
cmp
sbb
jo
adcl
sub
dec
and
sbb
sbb
jne
shlb
xchg
jecxz
loopne
sbb
mov
pop
push
mov
mov
push
mov
loopne
dec
cs
jmp
enter
sbb
std
adc
dec
mov
mov
pusha
xchg
mov
enter
adc
push
add
xchg
xor
jmp
pop
xchg
and
insb
mov
call
adc
js
repnz
jg
enter
es
and
xor
cmpsl
repz
push
fsts
jo
dec
pop
mov
cmp
cmp
or
xchg
lcall
dec
push
mov
or
push
adc
popa
sub
lahf
subb
mov
popa
mov
cmpb
push
aad
dec
xor
jecxz
xchg
aas
aad
jl
jne
fadds
pop
hlt
loope
test
xor
nop
cld
in
lock
dec
inc
pop
jle
mov
mov
xor
inc
cmp
cli
inc
mov
pop
fdivr
inc
xor
jo
gs
aaa
and
test
xchg
rorl
mov
mov
push
aad
mov
sbb
inc
jb
lds
dec
aaa
arpl
jmp
push
dec
jle
lcall
inc
sti
mov
and
mov
iret
xchg
push
jmp
adc
cli
push
ret
es
das
data16
jbe
popa
imul
lret
lock
mov
sbb
jg
int
cmp
int
pushf
mov
fmull
dec
push
xchg
mov
or
dec
movsb
push
and
imul
scas
jae
ds
cld
mov
cmp
cld
lret
fwait
aad
jp
inc
es
and
xchg
lret
ljmp
loope
add
and
mov
sub
imul
sbb
jne
insl
fnsave
adc
gs
ret
add
mov
inc
lods
mov
xchg
adc
mov
jmp
rorb
jb
icebp
xor
mov
xchg
rcl
add
add
push
aad
inc
test
push
sub
mov
aas
or
inc
pop
ret
and
clc
repz
pop
push
test
daa
push
mov
sbb
loop
or
sbb
fbstp
xchg
inc
xor
jno
gs
cmpsl
gs
dec
and
sbb
lcall
add
pop
mov
out
por
mov
stc
adc
push
cmp
push
outsb
aas
add
mov
ret
push
dec
roll
add
mov
add
jbe
xchg
pop
jno
mov
xor
push
imul
pop
dec
dec
ret
dec
je
test
jo
aad
pop
movb
mov
lret
add
push
pop
inc
arpl
dec
inc
adc
push
sbb
push
mov
mov
pop
sbb
inc
xchg
pop
xchg
shll
xor
pop
mov
je
stc
pusha
push
pop
pop
mov
adc
lea
jbe
data16
pop
pop
or
ficompl
sub
outsb
sub
and
xlat
jo
cmp
mov
adc
mov
ljmp
pusha
les
and
das
jl
into
or
or
push
das
push
and
mov
lds
jb
ret
sbb
sarl
leave
cmp
xchg
adc
push
les
pop
dec
and
test
jmp
andl
clc
in
sarb
movsb
jae
movsl
loope
imul
imul
pushf
lea
push
pushf
add
lods
mov
inc
std
xor
adc
test
mov
and
sbb
cmpsb
push
xor
mov
pop
cld
pop
or
mov
lods
push
xchg
fs
push
add
pop
add
shll
xchg
pop
loopne
push
xchg
test
cmp
movsl
and
repz
lock
adc
push
and
sbbb
sbb
jne
and
sbb
dec
aad
dec
mov
cmp
pop
and
es
or
lret
inc
sahf
push
push
dec
or
inc
int3
stos
imul
es
dec
stos
and
add
sahf
mov
jo
mov
and
mov
jns
daa
daa
fs
popf
fmuls
test
lock
repz
lock
cmc
adc
icebp
jecxz
data16
call
mov
lret
in
add
fs
inc
and
cs
xor
les
dec
push
xchg
bound
stos
ret
pop
inc
movl
add
fstps
cmp
cwtl
inc
pop
add
nop
sub
adc
sbb
mov
scas
cs
sub
nop
sbb
lds
cs
rcrb
mov
inc
loopne
stos
dec
jecxz
mov
pusha
sbb
fwait
hlt
stos
mov
jo
fbld
dec
inc
xchg
or
jmp
sbbb
ret
aaa
outsb
jo
movsb
js
arpl
add
cmp
pop
pop
ljmp
sbb
xchg
jb
jmp
ret
inc
sub
push
add
push
adc
or
mov
adc
shll
aam
std
rol
and
cmc
popa
add
and
cwtl
or
aam
adc
clc
scas
mov
mov
xchg
sub
xchg
xlat
and
je
lahf
loopne
xchg
jl
enter
aas
out
nop
nop
iret
subl
jmp
fldt
movsl
sbb
mov
loopne
jp
call
sub
mov
leave
fs
data16
call
mov
fsts
outsl
push
xor
jae
xor
pushf
xchg
mov
dec
rclb
cmpsb
dec
cmp
xchg
xchg
push
sub
cmp
xor
sub
pop
xor
es
dec
jo
xchg
aad
dec
ud2
into
ret
add
inc
pop
sbb
rolb
popf
aad
xchg
xor
in
loopne
inc
shlb
aam
cmpsl
imulb
jle
and
or
mov
push
push
test
xor
add
push
bts
jmp
pushf
lea
sbb
fmuls
jo
xchg
add
ss
rcrl
xchg
sbb
bound
leave
ret
xchg
shrl
sarb
faddp
pusha
inc
mov
fldenv
sbb
testb
xchg
loopne
lods
jnp
or
call
insb
sbb
mov
sub
mov
ret
leave
push
pop
mov
inc
cmp
mov
repnz
and
inc
bound
push
adc
ret
out
mov
les
orb
push
add
xchg
addl
mov
pop
mov
mov
das
xchg
orb
cmp
push
xchg
adc
xchg
shlb
adc
mov
mov
out
add
mov
pop
mov
xor
adc
pop
push
rcll
les
orl
lods
jmp
adc
decb
orb
inc
pusha
and
leave
stos
push
xchg
insb
jbe
cmp
ja
in
mov
inc
sbb
and
or
fistpl
cwtl
outsb
jnp
jmp
xchg
add
sub
shl
or
lea
fisubrl
outsb
cmp
mov
add
mov
inc
inc
outsl
lods
loope
push
cmpsl
mov
cmp
dec
jmp
xor
sbb
frstor
cmp
bswap
xchg
and
dec
icebp
pop
and
mov
sub
add
ret
sbb
enter
divb
lahf
cmc
and
ret
sbb
adc
xchg
add
sub
dec
xchg
mov
test
ds
xor
aam
cmp
or
mov
vmsave
xchg
nop
repnz
xchg
lds
loopne
jo
int
dec
add
loope
adc
cmpsl
and
pop
imull
mov
xchg
mov
pop
sub
add
shll
rorb
push
shll
xchg
inc
lock
lcall
mov
out
dec
outsb
add
enter
jo
xlat
push
jle
mov
sbbb
imul
push
or
loope,pn
lahf
jl
fwait
test
xchg
mov
push
insl
sbb
mov
mov
push
popf
pop
in
pop
cmpsl
testl
popa
add
adc
inc
std
and
sbb
jb
cmp
adc
adc
mov
adc
mov
cs
jne
sbb
les
daa
imul
and
and
mov
and
sub
and
popf
xchg
xor
aam
pop
inc
push
add
out
cmp
jp
js
inc
jecxz
pusha
push
sbb
inc
add
jnp
daa
and
ds
mov
jecxz
add
popa
inc
cli
dec
and
xor
sub
sub
aad
xchg
in
insb
dec
mov
lods
aas
or
adcb
nop
lahf
es
mov
dec
inc
sbb
movsb
or
xchg
sbb
adc
add
xor
loopne
daa
lods
sub
es
pop
les
push
fnsave
cmp
push
jb
adc
andl
mov
xchg
in
jns
jnp
and
push
es
add
call
sub
push
jnp
xor
andl
mov
pop
xchg
stos
sbb
xor
or
jbe
pop
mov
pop
ss
xchg
and
cmp
adc
pop
jne
push
pushf
fmul
adc
and
xor
sahf
ja
push
imul
bound
dec
jbe
outsl
sub
mov
shrb
dec
xchg
int
cmp
iret
push
push
and
dec
sub
push
addr16
cmp
cmc
jbe
fsubs
push
enter
addl
sbb
lret
ljmp
or
inc
sub
pop
inc
ss
dec
arpl
cmp
cmpsb
loopne
fildl
xchg
jecxz
xchg
orb
push
stos
out
into
push
stos
xor
push
dec
jo
xchg
mov
adc
ds
out
add
les
daa
js
movsb
push
mov
cmp
sbb
pop
js
arpl
ret
out
rcll
jmp
jnp
iret
loope
js
loopne
mov
jne
cmp
dec
or
jge
lret
jo
sub
jmp
stos
shl
enter
jae
add
dec
mov
mov
outsl
cmp
add
mov
lcall
sbb
and
xchg
in
sub
adc
gs
fbstp
and
loope
mov
push
cmp
cmp
xchg
movsb
popf
dec
pop
and
mov
addl
andl
cmp
cmp
pop
leave
mov
insb
shll
call
dec
inc
or
cli
shlb
push
scas
xor
mov
mov
test
popa
ret
clc
je
add
movd
add
pusha
sub
push
sbbb
test
mov
hlt
ficoml
push
sbb
mov
jns
xchg
aam
inc
mov
sub
mov
pop
sbb
mov
push
fsubr
lods
arpl
data16
xchg
xchg
add
push
out
mov
pop
inc
mov
rcl
push
das
or
cmc
sub
shrl
in
inc
nop
pusha
nop
sbb
cmpb
test
xchg
cmc
pop
rcr
cld
lahf
dec
cmp
ds
push
sub
sub
insb
fsubs
mov
mov
push
pop
shlb
mov
stos
sarl
rcrb
or
pop
mov
xor
cmc
dec
add
mov
mov
pop
xor
movsl
cmp
sbb
loop
mov
add
jbe
and
popa
cmpsl
add
and
cmpsl
add
outsb
jne
pop
call
imul
pop
cmpl
adc
mov
lret
outsl
jns
leave
ret
lock
inc
sub
mov
xchg
pusha
inc
es
sbb
xchg
cwtl
adc
pop
jp
testb
add
arpl
fimuls
push
sbb
hlt
jmp
sahf
iret
add
inc
out
iret
icebp
pusha
shrl
mov
inc
andb
rcr
pop
imul
mov
imul
gs
jae
lahf
nop
or
jo
cld
jbe
hlt
loop
lcall
or
dec
jae
mov
ss
lds
inc
mov
and
movl
test
mov
dec
cmp
cmpsl
rcll
outsb
scas
jg
or
add
pop
lods
cmp
jl
popa
cmp
push
push
adc
scas
mov
cmc
daa
jge
and
movsb
or
add
push
sarb
xor
in
sarl
xlat
lds
xor
add
rcrl
pushf
pop
loopne
data16
sub
mov
stos
xchg
pusha
and
aaa
loop
jle
xor
lds
pop
pusha
cs
pop
in
in
roll
sub
pop
sbb
mov
pop
dec
mov
inc
loop
xor
push
cmp
mov
scas
fistps
push
mov
rcl
sub
push
mov
pop
fsubs
rcrb
enter
sbb
jle
rcr
test
adc
ret
mov
add
push
bound
dec
jne
or
shll
inc
faddl
sbb
ret
fbstp
adc
add
fs
mov
push
xchg
adc
or
cmpb
rcrb
jnp
push
out
cmp
or
xor
addb
into
loopne
dec
andl
jb
addl
fbstp
loopne
in
jae
cmp
lea
dec
push
lret
ret
call
mov
shlb
bound
push
xor
mov
jbe
aad
addr16
and
push
mov
inc
xor
adc
sbb
insb
leave
fsubs
push
adc
int
inc
and
mov
test
sub
pop
mov
or
je
sbb
add
loope
jae
add
pop
push
cwtl
in
sub
insb
push
dec
adc
mov
jne
xor
and
xor
pop
jl
cltd
loopne
sbb
insl
repnz
cmpsb
test
push
xchg
aas
lret
mov
adc
xchg
out
in
xchg
add
test
data16
and
xchg
lret
inc
rcll
test
mov
fdivr
push
cmp
ljmp
add
fcmovnb
xchg
cmp
sub
cmp
cmp
pop
movsb
test
xor
shl
mov
inc
jmp
cmp
and
and
jge
icebp
mov
mov
and
add
dec
mov
or
loop
mov
jmp
pop
incl
jno
sub
add
fmuls
cmp
pusha
xchg
mov
add
mov
push
sbb
pop
inc
push
jbe
mov
and
dec
jae
or
or
shrl
testb
cmp
test
lds
sub
and
and
daa
call
mov
in
test
ljmp
sbb
lea
mov
and
fldenv
mov
xchg
test
adc
xchg
jns
jmp
rclb
popf
lock
ja
mov
int
mov
jl
test
mov
jb
mov
mov
and
sub
inc
sbb
fmul
cltd
rorb
cmp
jo
add
outsb
cmpb
into
push
add
push
push
pop
sbb
adc
cmpsb
push
dec
sbb
stc
jno
sub
sbb
add
or
pop
lds
stc
jb
push
fbld
cmp
jae
jmp
imul
dec
stos
ret
inc
sub
sbb
mov
sbb
cmp
enter
cmp
sahf
jno
mov
inc
push
ljmp
sarb
dec
or
outsb
cmp
mov
cli
aam
pop
cmpsl
cmc
loope
cmp
dec
repz
insb
or
test
ret
loop
mov
dec
dec
dec
js
icebp
inc
mov
add
popa
push
dec
sub
pushf
jnp
xchg
inc
jmp
arpl
aad
add
movsb
jmp
jg
into
cwtl
pop
mov
push
xchg
fistps
and
jp
add
dec
sub
pushf
les
rcl
in
sbb
gs
xchg
push
mov
sbbl
mov
inc
sbb
outsl
mov
and
lods
xorb
push
add
jl
cmpsb
dec
cli
aad
add
xor
fs
sbb
add
jo
and
jmp
insb
int3
pop
push
mov
pop
xchg
mov
cwtl
gs
xchg
sbb
and
test
adc
add
movsb
cmpsl
iret
ds
inc
xchg
loopne
push
test
shll
adc
pusha
add
hlt
jl
jns
xor
sbb
icebp
movsl
repz
int3
cmp
jecxz
mull
pop
call
inc
or
sbb
movl
add
out
inc
mull
outsb
sbb
in
cwtl
inc
xchg
cmpsb
xchg
popa
movsb
xchg
mov
cli
xchg
inc
mov
aaa
dec
inc
mov
inc
push
pop
mov
mov
pop
or
or
test
leave
lea
call
shll
iret
stc
sub
xchg
sbbb
xchg
out
popf
sub
jp
icebp
adc
js
sub
and
test
mov
les
cs
lds
sbb
cmc
sbb
sbb
xchg
roll
mov
xor
add
mov
les
push
adc
lret
lcall
adc
movsb
loopne
push
nop
add
or
dec
xabort
inc
add
js
or
jge
jb
outsl
jmp
cwtl
push
add
and
push
or
push
fistps
inc
cmp
sti
or
outsb
dec
dec
clc
add
ret
outsb
mov
inc
cmp
jl
bound
xor
push
sbb
and
and
inc
or
mov
add
js
xor
or
xchg
js
mov
inc
jae
sti
mov
mov
roll
cmp
les
push
stos
leave
leave
lcall
push
mov
sbb
cld
or
fisubs
lds
aad
mov
mov
xchg
adc
push
xor
mov
adc
ret
call
cmp
mov
cvttps2pi
push
aad
fadds
inc
jp
cmp
cld
lds
push
xor
inc
in
in
fwait
cmp
xchg
sub
sbb
dec
mov
jecxz
jbe
xchg
dec
das
fistl
mov
sbb
or
jecxz
hlt
stc
sbb
mov
cmp
push
sbb
insl
sub
and
and
rolb
adc
idiv
sbb
cmp
rclb
mov
andb
aam
mov
incb
in
addb
pop
xor
cs
test
push
pop
inc
xlat
xchg
cmp
mov
mov
adc
js
iret
push
test
pop
and
out
cmp
stos
mov
shlb
xor
cli
stos
push
xchg
xchg
cs
pop
das
inc
lahf
insb
nop
adc
lds
sbb
mov
pop
popf
aad
and
xor
and
js
xor
cmp
pop
insb
jb
and
xchg
mov
addl
lcall
sbb
lahf
inc
movsb
test
sub
cmp
mov
shrb
insb
ret
lock
fcompl
xchg
call
sbb
or
lds
lods
leave
bound
lret
out
adcl
mov
mov
jg
aam
add
loopne
pop
shll
test
mov
xchg
test
ret
push
inc
sub
or
xchg
and
mov
mov
in
cmp
stc
lods
test
ror
mov
out
popa
pushf
sub
sbb
mov
mov
imul
jl
cltd
push
leave
cmp
adc
sahf
pop
mov
ret
sahf
cmp
cli
pop
insb
jns
stc
push
sub
iret
push
loopne
add
cli
pushf
dec
xor
and
sbb
sbb
into
mov
add
roll
add
and
or
fcompl
inc
xchg
mov
rorl
jo
inc
adc
clc
inc
jno
xchg
jns
jno
and
mov
cmp
mov
pop
aad
iret
lock
test
jmp
daa
int
test
push
mov
xchg
bound
mov
pop
jl
rcrb
sub
xchg
inc
xor
pop
daa
imul
scas
jne
add
daa
call
negb
and
inc
push
xchg
lcall
push
xchg
cld
mov
je
push
push
sbb
xchg
jnp
and
dec
mov
jl
insb
in
pop
mov
stos
xchg
cs
or
push
sbb
adc
sbb
stos
xchg
add
adc
jnp
cmpl
cwtl
push
orb
scas
mov
test
stos
icebp
jmp
shlb
and
sub
pushf
loope
stos
xor
dec
sbb
cmp
rclb
push
cmp
popf
cmp
mov
adc
cmp
loop
pop
mov
xchg
insb
add
test
add
and
push
cmp
or
dec
inc
insb
xor
outsl
mov
shll
cltd
insb
test
sbb
je
int3
cmp
sub
leave
loop
fwait
clc
dec
jg
add
and
cmp
fs
jmp
fsubrl
orb
jnp
or
xchg
mov
xchg
leave
leave
arpl
push
sbb
xchg
jp
dec
sub
popa
sbb
xchg
mov
lcall
daa
cwtl
lea
daa
or
ficomps
adc
test
test
jmp
nop
in
addb
xchg
xor
fiaddl
js
dec
mov
ljmp
inc
cmp
xchg
sbb
cs
push
xor
push
add
add
xor
sbb
xchg
xchg
push
pushf
push
mov
and
jb
adc
and
add
push
jmp
lods
in
or
pop
loop
dec
push
jne
lds
shlb
pushf
repnz
push
mov
daa
ss
sti
clc
push
pop
daa
popf
xor
ss
adc
lret
inc
cmp
xchg
xchg
xchg
sub
arpl
pavgb
adcl
ret
mov
movsb
or
jae
addb
insb
rorb
mov
lret
push
insl
or
push
das
fldt
mov
loopne
or
call
sarl
pop
sbb
and
dec
push
imul
add
cmpb
scas
sbb
cwtl
adcb
dec
pop
cld
mov
mov
jno
nop
pop
dec
jecxz
jecxz
inc
cltd
addr16
test
popa
rorl
data16
pop
pop
push
aad
mov
out
mov
dec
mov
mov
jne
mov
xchg
mov
mov
pop
xchg
xchg
les
and
clc
aaa
and
clc
and
cld
divl
dec
jp
xor
hlt
loop
pusha
ljmp
and
inc
dec
xor
adc
nop
jne
cmc
stos
mov
sbb
inc
stc
jbe
pop
pop
and
xor
mov
in
inc
pop
sbb
sbb
fs
mov
dec
rol
scas
mov
leave
scas
lcall
in
xchg
xor
pop
pushf
and
sub
push
shll
mov
push
and
add
dec
nop
lods
test
mov
xor
push
stos
dec
inc
out
lods
jge
jb
and
dec
daa
sbb
addr16
movsb
add
cld
lea
mov
dec
stos
xchg
and
cmp
inc
ja
repz
cmp
xor
cli
jl
or
or
hlt
jb
sbb
gs
test
xor
inc
xor
bound
or
sbb
mov
cmp
sahf
sbb
cli
icebp
cmc
or
ss
push
sbb
xor
popa
dec
aam
stos
insl
xor
sbb
mov
xor
mov
popa
or
cmp
push
xchg
rorb
adcb
repnz
hlt
aas
imul
xor
loopne
and
mov
mov
stc
xchg
mov
xor
popf
and
pop
aam
loope
fcoml
xor
or
bound
pusha
push
rorl
in
hlt
add
lods
push
adc
jb
mov
sub
mov
and
and
sub
adc
subl
pop
push
test
jae
jle
sbb
ljmp
cli
xchg
cmp
adcb
les
pushf
mov
nop
jno
and
sub
mov
scas
test
xchg
mov
fcom
xorl
lcall
add
js
inc
nop
cs
fisttpl
aas
popa
adc
push
paddsw
inc
loopne
mov
ds
jo
icebp
dec
js
repnz
add
push
cltd
nop
repz
lret
stos
outsb
push
xchg
cmc
jo
xchg
xor
jo
arpl
into
jmp
fsubl
xchg
jl
add
std
xor
popf
adc
stos
ljmp
xchg
aam
pop
xor
mov
xor
pop
movsl
cmp
or
pop
enter
cmp
xlat
fildl
cmp
popf
fs
nop
xor
inc
cmpsb
inc
adc
mov
add
loop
add
stc
ss
jecxz
orl
add
xchg
test
sbb
sti
jl
cmc
mov
pop
dec
sub
and
xor
aad
push
es
cmp
push
pusha
pop
jp
inc
push
inc
int
push
push
mov
pop
inc
repnz
push
dec
pop
or
add
scas
retw
leave
rcll
jb
dec
or
loopne
adc
sub
icebp
pop
dec
or
mov
mov
dec
xchg
jb
sahf
push
sbb
out
pop
push
pop
imul
sbb
xchg
cmc
mov
jmp
inc
adc
sbb
cltd
jbe
mov
rolb
mov
jp
pop
add
and
xchg
data16
aas
shrl
xchg
movsl
adcb
or
jecxz
mov
daa
dec
pushf
inc
push
cli
cwtl
pop
sbb
daa
inc
arpl
ret
push
vmulsd
add
stc
cli
movsb
insb
jg
inc
mov
shr
shr
lods
jbe
iret
mov
test
mov
pop
push
and
jp
icebp
lret
push
aad
orb
bound
inc
mov
and
iret
mov
xlat
push
inc
loope
rcll
js
mov
add
in
adc
jg
cmp
push
jle
dec
aam
dec
sbb
adc
add
push
mov
mov
add
lahf
pop
jbe
mov
sahf
call
stos
insb
sahf
and
imul
mov
sbb
lds
pop
cld
push
or
fldenv
lea
mov
dec
test
outsl
dec
mov
jne
std
stos
inc
and
shlb
xlat
roll
dec
mov
insb
aaa
or
jno
xchg
lods
icebp
sahf
fildl
xchg
lock
inc
sti
or
xor
mov
test
out
cmp
lods
mov
testb
xor
push
lock
fabs
dec
test
add
ret
cwtl
push
mov
ss
mov
jmp
and
jl
int
loopne
push
lahf
sub
jp
pusha
jne
pushf
nop
push
pop
xor
loopne
push
cmp
out
pop
sub
xchg
or
xchg
int3
gs
aam
mov
add
lds
inc
ds
mov
ret
int3
jo
or
jge
inc
xchg
xchg
pushf
dec
sbb
cmp
push
add
lea
mov
sahf
inc
add
repnz
ds
int3
arpl
xchg
xchg
je
cs
fsubl
xchg
fadds
xchg
std
repnz
add
add
movsb
jecxz
mov
fldl
stc
data16
js
cmp
xchg
stos
push
loope
pop
sub
add
mov
inc
mov
ret
sbb
addr16
popf
xlat
dec
mov
xchg
inc
je
loopne
out
in
and
xchg
add
mov
pusha
or
iret
dec
dec
aad
jno
add
rcr
xor
mov
clc
ds
push
inc
push
xor
scas
loopne
stos
pop
imul
rclb
ss
out
pop
mov
adc
leave
xchg
jbe
into
push
das
cltd
movsb
outsb
into
xor
xchg
ds
cmpsl
adc
xchg
push
inc
jp
daa
mov
inc
jbe
je
xchg
ret
dec
xchg
mov
repnz
xlat
fs
and
push
sub
or
xchg
mov
dec
xchg
shrb
loopne
nop
cmpsb
pusha
add
dec
pop
scas
popf
xchg
movsb
out
pop
das
cltd
sbb
xchg
pop
add
jl
mov
adc
push
hlt
cmc
pushf
mov
dec
push
fcmovbe
add
mov
imul
add
pop
add
mov
lret
cmp
out
rclb
out
gs
sahf
scas
push
lret
imul
or
imul
loop
sbb
stc
push
movb
stos
pop
and
xor
inc
ljmp
nop
scas
xlat
jecxz
stos
xchg
and
jmp
add
add
fisubrs
mov
fisubs
nop
xchg
sahf
aad
inc
and
lock
xor
adc
xor
jl
popa
cmc
pop
mov
xchg
cmc
lods
or
andl
mov
cmp
jge
rclb
aas
test
mov
sbb
push
ror
xchg
out
sub
mov
mov
mov
adc
mov
push
push
push
aam
shr
lods
inc
push
cld
imul
xchg
xchg
sub
adc
sbb
dec
jns
and
popf
and
dec
push
mov
lock
shrb
and
adc
pop
adc
rol
pop
or
push
hlt
roll
push
pop
lea
jns
pusha
pop
pop
jne
pop
mov
or
sub
or
mov
xor
adcl
stos
test
bound
adcb
add
add
xor
test
lahf
cs
test
sub
jecxz
sbb
ss
push
sbb
or
and
sbb
xchg
js
dec
subl
shlb
lds
inc
nop
sarl
inc
inc
sbbb
iret
adc
sahf
jae
pusha
mov
je
sub
sar
sbb
outsb
xor
add
addr16
pusha
repnz
add
data16
addl
bound
cmc
daa
jbe
jb
sahf
adc
xchg
iret
jbe
outsb
test
jmp
les
fdivl
sub
or
dec
loop
xor
ret
add
out
shr
out
push
push
out
mov
loope,pn
or
push
add
pop
sub
filds
repz
pop
add
jp
cwtl
and
daa
cmp
xor
loop
or
adc
add
mov
lods
movsb
add
ret
test
mov
fs
lea
sbb
aaa
mov
or
mov
pop
xchg
cmpsb
cmp
jp
pushf
jmp
orl
in
adc
sbb
data16
or
push
nop
into
js
insb
mov
insb
dec
lret
inc
cmc
mov
rcll
dec
shlb
rcrb
xor
sarb
adc
push
mov
sub
push
sbb
lret
call
jns
les
sbb
push
ret
add
mov
push
mov
sbb
dec
xor
and
jl
andb
ja
aam
push
inc
mov
jbe
test
jecxz
mov
dec
loope
jecxz
cwtl
ror
pop
decl
mov
lret
addr16
dec
popf
push
pop
rolb
cmp
sbb
adcl
cwtl
inc
pushf
mov
call
push
add
cld
xchg
jne
adc
or
aad
pop
andb
cmpsl
test
jno
daa
sbb
sbb
pop
pop
xorl
dec
movb
arpl
inc
mull
dec
ja
push
dec
jno
in
xchg
jne
add
lahf
ja
push
cmp
xor
sbb
sbb
fadds
insl
dec
mov
in
std
test
xchg
aam
sub
pop
movsb
lcall
das
hlt
ror
add
ljmp
and
pushf
lea
xchg
rcl
xlat
std
inc
mov
mov
cld
dec
or
scas
shll
pusha
mov
call
daa
sti
sbb
adc
inc
cmc
jecxz
mov
loope
xor
movsl
push
jmp
cmp
xor
and
cmp
cwtl
jnp
push
add
pop
cmp
cmp
and
mov
outsb
dec
or
dec
mov
stos
mov
lcall
and
dec
jle
dec
push
push
push
and
push
stc
fnstenv
and
in
jbe
push
jnp
pushf
call
ljmp
and
cld
in
icebp
add
popf
imul
add
insb
cmp
dec
sbb
or
sub
push
mov
xchg
mov
adc
fldt
xchg
or
imul
xchg
xor
jb,pn
lds
pop
adc
pop
hlt
or
negl
and
xchg
cmp
sbb
pop
negl
in
and
pushf
leave
mov
xchg
in
adc
popf
pop
inc
rcrl
pop
lds
adc
mov
pop
push
xchg
inc
add
test
rcll
stos
dec
pop
ret
and
jg
mov
mov
sub
dec
mov
ficomps
test
sbb
imul
ret
pop
xchg
and
add
cmp
jecxz
xchg
jp
fdivrl
in
jns
lret
xchg
sub
push
sarl
cmpsl
sahf
sbb
lock
addb
ret
dec
jbe
dec
mov
push
and
push
data16
ja
jge
add
inc
adc
or
jae
adc
mov
adc
adcb
mov
mov
jle
sahf
jnp
hlt
xchg
jl
mov
xor
mov
mov
scas
in
lds
cmp
invd
es
xchg
test
cmc
loop
ljmp
decb
mov
scas
clc
mov
cmp
mov
xorb
int
mov
sub
xor
xorl
inc
fs
movsb
mov
add
pop
mov
pop
shlb
dec
dec
adc
in
sub
inc
push
dec
in
mov
jnp
and
xor
push
add
popf
sar
and
push
daa
cwtl
push
jmp
dec
dec
arpl
cmp
dec
cltd
sub
cwtl
in
aaa
lock
aas
popw
mov
mov
push
mov
pop
imul
xchg
fiaddl
lods
clc
rcrl
popa
loope
dec
clc
nop
cmpsb
data16
xor
push
testb
jle
addr16
mov
add
push
sbb
rorb
add
repnz
xchg
addr16
mov
push
and
lods
mov
mov
ret
and
push
push
mov
jle
pop
sub
inc
je
inc
push
xchg
mov
inc
jb
fsubrp
and
sub
ljmp
inc
fcoms
push
or
cmp
add
or
and
data16
sub
xor
cmp
sub
sahf
aam
push
dec
lcall
jl
leave
inc
in
mov
and
push
or
sub
cmc
inc
and
pushf
js
cmp
or
out
cmp
cmp
add
popf
pop
jl
inc
fisttpll
add
mov
add
shrl
pop
adc
test
int3
pop
push
jmp
fdivrl
sbb
cmp
loope
les
lods
cmp
scas
or
mov
lcall
or
js
dec
or
jmp
push
jnp
enter
push
adc
and
push
pop
push
mov
clc
test
push
mov
and
jecxz
xchg
xor
pop
push
outsl
rcrl
pop
push
or
or
mov
insb
mov
pop
mov
fsubrs
xchg
cmp
push
and
xchg
mov
adcl
pop
and
inc
push
jns
add
loopne
sahf
mov
push
movsb
cmpsl
fwait
xchg
mov
nop
scas
in
dec
add
sub
jecxz
sub
stc
dec
movsb
mov
lea
insb
leave
dec
dec
cmp
inc
xor
mov
xor
inc
cmp
xchg
les
pop
ror
jmp
stc
sub
jmp
inc
mov
cmp
dec
ficompl
sub
cmp
stc
negb
in
cmc
hlt
mov
movsl
hlt
mov
shll
subb
dec
out
fs
popf
push
push
pop
xor
and
pop
sbb
imul
cmp
shrd
jo
pusha
mov
mov
cmp
sub
or
nop
cwtl
nop
mov
inc
xchg
daa
fsubp
rcrb
aas
dec
repnz
inc
cmp
popf
in
add
dec
pop
inc
push
inc
lods
inc
cli
add
pop
mov
sbb
ljmp
mov
repz
push
ret
xchg
inc
wbinvd
dec
aam
xor
orb
xor
inc
xchg
and
add
mov
or
ja
and
and
and
pop
cmp
imul
pop
fisttpl
sbb
inc
dec
mov
dec
rcll
dec
mov
xor
jnp
test
jne
push
cmp
sbb
xchg
ljmp
js
inc
cmp
sbb
scas
clc
dec
inc
mov
and
insl
add
xor
ja
inc
sbb
aad
cs
mov
xchg
loopne
dec
jo
mov
and
lods
out
sub
jge
inc
xchg
mov
aad
and
jno
stc
dec
pusha
sub
push
and
rolb
mov
xchg
negl
decl
cld
push
and
sbbb
les
or
adc
stos
jp
lahf
xor
xor
shll
lods
sbb
dec
orl
pusha
pop
sbb
stos
jne
daa
cmp
imul
add
push
fsubs
imul
clc
pop
hlt
pushf
jne
rcll
and
repnz
pop
fwait
in
mov
sbb
pop
lods
add
loop
cwtl
and
mov
sub
or
push
fiadds
mov
lcall
imul
pop
mov
sub
or
and
das
jg
ret
test
push
or
dec
into
pop
sub
mov
cmpsl
cld
push
mov
or
xlat
cmpsl
mov
xor
sub
lret
daa
jo
filds
jno
jne
dec
jbe
lcall
in
movsb
mov
ds
xchg
jp
pop
cmp
nop
pop
pop
push
ja
xor
jmp
sbb
stc
sbb
adc
sbb
je
icebp
xor
dec
inc
fnstenv
cld
ret
mov
or
movl
cmp
rolb
mov
ret
cmp
out
test
xchg
add
subb
inc
repz
or
dec
jbe
sbb
add
stos
pop
push
xchg
jno
add
dec
push
add
in
mov
xchg
outsl
jecxz
imul
xor
or
arpl
xor
adc
movsb
dec
test
fwait
and
dec
pop
mov
stc
js
lcall
shl
outsb
cld
mov
push
insb
jne
ja
mov
je
sbb
ja
pop
add
ret
and
int3
xor
fcmovnb
enter
orl
add
sbb
std
jbe
pop
push
push
das
test
out
mov
mov
adcl
scas
xchg
sarb
sbb
lret
inc
jne
ret
cmp
lock
in
xchg
pop
lds
out
xor
mov
cwtl
add
and
push
adc
dec
push
je
cwtl
pop
push
notb
cwtl
mov
rclb
and
add
jle
clc
mov
mov
add
xchg
xchg
ret
push
xchg
movsb
mov
subl
shll
test
pop
add
movsb
gs
mov
xor
inc
decb
add
pop
mov
ret
sahf
mov
lods
repnz
dec
test
test
fcoml
dec
cs
mov
fs
pushf
xor
xor
or
jl
mov
popf
je
ss
lret
xchg
push
aas
out
jne
lea
fbld
cltd
push
xlat
lcall
cld
jg
and
jno
in
pop
jmp
xchg
cmp
adcl
add
and
mov
jns
arpl
movsb
daa
xor
cwtl
jo
dec
call
jbe
or
pop
insb
jmp
imul
mov
std
hlt
jb
movsb
loopne
add
clc
adc
xor
mov
iret
es
rorb
ljmp
dec
adc
push
xchg
jnp
std
and
pop
adc
outsl
push
lea
xor
push
testb
mov
call
push
or
pushf
movsb
call
xchg
push
arpl
dec
fildl
dec
shlb
test
pop
xor
int3
scas
pop
jp
leave
sub
in
insl
xor
or
pop
xor
dec
rcl
or
clc
bnd
dec
popf
pushf
inc
lret
jns
test
add
push
push
pop
fdivrs
mov
dec
outsb
mov
and
or
icebp
and
jp
loope
ja
fnstenv
repnz
iret
ret
dec
in
cmp
call
iret
xor
fwait
push
sbb
mov
dec
fisubs
je
je
push
add
xchg
bound
cs
loope
xor
inc
enter
imulb
fs
xchg
cmpsl
mov
or
test
jo
pop
mov
cld
mov
bound
clc
and
mov
pop
in
fadds
xor
and
iret
and
cmp
jae
jnp
imul
pop
add
or
xchg
jp
subl
inc
sub
test
cwtl
push
mov
add
or
std
pusha
xor
adc
jnp
inc
call
cmp
dec
je
pop
subl
and
or
popa
or
cmp
xchg
add
sbb
daa
cmp
inc
adc
jl
iret
loopne
popf
mov
xor
popa
add
or
dec
xlat
movsb
mov
push
jns
shll
adc
xor
stos
mov
bound
sub
scas
cmp
and
mov
cwtl
sub
pop
push
sub
es
push
rcr
add
or
mov
cmp
cmpsl
adc
add
call
jle
xchg
sub
mov
sbb
xchg
adc
sbb
fdivs
jae
scas
xor
lahf
jle
call
adc
aaa
inc
add
repnz
dec
pop
xor
inc
and
pop
stc
js
adc
mull
shr
xchg
xchg
xchg
mov
lock
or
test
test
jecxz
xor
add
xchg
rcrl
and
lods
int
inc
mov
ja
add
repnz
and
xchg
xchg
inc
fildll
cmp
je
pop
rcrb
inc
sbb
pop
or
add
lcall
bound
dec
xorb
pop
sub
pop
rolb
mov
test
cmp
cmpsb
in
sub
xchg
xor
cmpl
bound
movsl
inc
les
mov
or
add
mov
insb
dec
pop
add
pop
aaa
inc
jae
jb
arpl
test
push
arpl
test
imul
jl
pop
lds
movsb
out
add
clc
cmpb
xchg
inc
add
sbb
sbb
sub
adc
push
mov
jo
cmp
repz
rcll
loope
jns
faddl
roll
cmp
leave
call
in
subb
dec
mov
and
pop
cmp
test
outsl
xchg
sbb
jbe
adc
lahf
add
mov
xor
mov
sub
mov
leave
mov
adc
mov
inc
pusha
test
sti
jnp
push
cmp
imul
sahf
js
out
cmp
push
add
sbb
jne
scas
or
stos
sub
xor
inc
outsb
stos
and
push
pop
cs
daa
xor
and
cli
loop
xor
push
mov
shl
and
cli
enter
popa
pop
and
cmp
cld
mov
bound
pop
cmp
popf
test
or
sub
lahf
in
or
fildll
push
xor
mov
sub
lock
arpl
add
icebp
mov
jnp
push
xchg
adc
subl
and
fadds
daa
jae
pushf
xor
cmp
sbb
or
addl
andb
jnp
push
dec
sbb
mov
xchg
pusha
fcmovnu
push
sub
and
inc
adc
pop
pop
je
aad
xchg
sbb
rol
mov
fadds
jns
xor
xor
sbb
adc
pop
mov
aaa
jmp
lods
pop
in
int3
popf
push
jbe
dec
jae
dec
cs
lods
adc
mov
in
icebp
jno
lods
fnstsw
scas
inc
and
xor
daa
pop
sbbb
xor
sbb
sub
mov
ret
gs
adc
fxch
mov
int3
ficoml
dec
jp
mov
and
es
addr16
or
push
popf
push
rolb
mov
xor
jmp
mov
sbb
je
xchg
inc
sbb
js
pushf
pop
add
sbb
and
xchg
lds
jl
lcall
sti
and
aam
push
add
jbe
xlat
jmp
or
loope
push
mov
es
fmuls
cmp
push
insl
push
and
mulb
cli
add
mov
popf
adc
push
rcr
push
imul
push
movsb
ss
repz
je
clc
add
jae
xor
dec
add
out
cmpsb
imul
mov
jg
pop
pop
mov
sbb
mov
mov
sar
loopne
scas
jne
in
push
fcomps
mov
ljmp
dec
or
data16
pop
lahf
outsl
cmp
fnsave
nop
push
das
cmp
shl
or
stc
inc
sahf
insb
or
das
les
int
inc
push
out
ret
adc
sbb
inc
andb
and
es
xchg
jae
add
hlt
sub
cmp
lahf
xchg
xchg
push
pop
in
testl
sti
pusha
loope
add
xor
xor
cmp
adc
sarl
lret
push
cmp
or
cmp
and
or
bound
and
hlt
mov
jns
cmpsb
and
mov
add
cmp
push
aaa
pop
jg
sbb
jo
in
mov
cld
pop
jno
out
jno
sbb
or
mov
sbbb
lret
dec
in
insl
xor
and
insl
or
rolb
or
or
sbb
or
cmc
pop
mov
mov
aad
jo
add
dec
xchg
mov
adc
push
add
nop
dec
jecxz
loopne
rclb
lret
pop
clc
les
les
xor
sbb
push
or
sub
rorl
mov
push
xchg
out
out
pop
and
outsl
lret
cmp
sbb
mov
mov
or
testb
jge
test
xor
jp
or
push
rclb
mov
shr
loope
icebp
push
sbb
test
jecxz
inc
dec
js
std
inc
repz
mov
cmp
dec
icebp
loope
cwtl
add
testb
or
es
inc
sub
enter
aad
lock
shl
jecxz
ret
jl
and
xchg
xor
rolb
sub
xchg
mov
enter
testb
dec
or
insl
sbb
nop
inc
in
cmp
push
insb
xchg
js
es
pop
or
jecxz
in
cmp
outsb
rcrl
movsb
xchg
add
push
jnp
xchg
add
dec
jne
adc
sahf
clc
sub
and
push
mov
insb
rep
push
das
popa
xchg
and
mov
in
cmp
dec
ds
mov
int3
mov
sbb
ljmp
dec
call
mov
pop
mov
in
sub
iret
orb
sub
orb
jmp
enter
sbb
loopne
mov
test
mov
mov
scas
in
pop
popf
sub
arpl
rolb
pop
dec
jne
andb
xchg
add
cmp
lea
cmc
xlat
lret
xchg
push
je
and
xor
adc
xchg
xchg
sub
adc
ja
je
into
ds
mov
jb
adc
mov
xor
and
mov
into
loop
out
leave
enter
nop
cmpsb
mov
idivb
dec
cmp
and
push
adc
test
lods
lret
adc
adc
add
movb
je
and
mov
dec
cs
and
jecxz
int
add
cmc
and
cmp
and
pop
dec
popf
cmp
enter
pop
hlt
es
subb
add
clc
dec
pop
adc
xchg
mov
add
ret
sbb
and
inc
sbb
xchg
push
in
mov
add
push
clc
icebp
stc
gs
ret
es
mov
pop
movb
loope
movsb
lds
cmp
mov
pop
icebp
sbb
dec
repnz
ss
ljmp
mov
dec
loopne
out
idivl
and
push
push
insl
adc
sub
sbb
movsl
call
xchg
xchg
and
mov
cmp
orl
push
and
js
or
bt
pop
sahf
xor
data16
lahf
push
imul
mov
add
sbb
xchg
sbb
cmp
pop
lahf
sbbb
subl
or
xchg
andb
or
push
lahf
xchg
popa
jbe
mov
cmpb
dec
repnz
mov
loope
push
inc
sbb
push
xchg
adc
adc
test
adc
push
pop
cmp
loope
sbb
insl
lret
dec
mov
aam
movsb
cmp
jno
lsl
adc
pop
jg
push
inc
addb
jb
push
xor
daa
push
cmp
das
xchg
subl
sti
jp
mov
or
jl
cmpsl
in
and
fs
pop
fdivl
pop
test
incl
daa
stc
cmp
jl
test
nop
sbb
push
jns
mov
push
xor
aam
adc
xor
mov
adc
imul
jl
das
jbe
mov
enter
xchg
pushf
cmpsb
sysret
cmp
xchg
fisttps
cwtl
cmp
adc
mov
xchg
cmp
stc
js
push
shrb
movmskps
mov
lods
inc
mov
in
in
add
add
lock
sub
and
cmp
sti
aad
mov
roll
mov
in
das
push
aad
ret
sahf
sub
sahf
mov
sbb
mov
inc
xchg
nop
add
pop
jo
into
fdivrs
xchg
rcrb
daa
les
shlb
addr16
push
mov
or
repnz
orl
adc
in
icebp
movsb
adc
inc
xchg
add
mov
pop
add
enter
sarl
mov
cmp
leave
stos
adc
push
shlb
insl
mov
and
cmp
jp
lock
les
mov
mov
dec
ja
cmp
lahf
aas
pushf
aam
test
mov
mov
gs
mov
mov
sbb
or
xor
nop
pusha
and
out
cs
dec
xchg
notb
xor
jl
add
ret
push
sbb
inc
ret
mov
popl
dec
mov
add
jmp
sub
adcb
mov
icebp
pop
dec
jnp
inc
jle
je
xchg
cli
rclb
jb
shl
jne
movsb
jbe
ror
or
sbb
int3
ss
mov
dec
pop
sub
or
movsb
pop
xchg
cli
shlb
push
push
aaa
test
inc
mov
cmp
inc
or
xchg
rcl
lcall
mov
lcall
dec
sub
jmp
cmc
inc
movsl
mov
sub
jmp
test
and
push
imul
sub
add
sarl
pop
js
add
xchg
call
rcr
dec
scas
push
lahf
xchg
lods
adc
xchg
cmp
loopne
cmp
aam
jnp
popf
fisubs
dec
or
test
fs
into
pusha
faddl
add
fadds
inc
mov
push
cmp
aam
adc
test
ja
push
xor
lods
pop
jno
fwait
sub
mov
xor
xor
or
add
outsl
cs
push
lods
mov
sbb
and
rorb
addr16
decl
pushf
les
sbb
adcl
testb
or
jno
ret
movsb
dec
pop
popf
mov
dec
out
sub
jle
xchg
out
jge
push
cltd
jle
mov
push
pusha
sahf
popf
xchg
jp
ret
mov
outsb
pusha
xchg
std
jnp
clc
mov
pop
daa
mov
xchg
ss
cmpsl
sarl
lcall
cmp
push
dec
sahf
aaa
daa
sub
mov
jb
jb
or
jne
mov
pop
dec
push
lret
adc
xchg
pop
mov
stc
outsb
and
out
in
or
arpl
subb
scas
xor
nop
test
cmp
pop
sub
movl
adc
pop
add
test
stc
add
mov
xchg
xchg
mov
inc
shlb
jge
mov
iret
push
cld
xchg
mov
adc
stc
jbe
jno
or
add
push
mov
dec
dec
mov
call
sahf
test
jmp
test
sbb
ss
inc
or
sbbl
shll
call
lods
fs
add
sub
cmp
inc
mov
push
repz
repnz
add
add
sahf
push
push
es
leave
lods
mov
vpor
test
call
fnstenv
adc
jmp
and
fisubs
jnp
mov
leave
fmull
pusha
push
mov
mov
mov
jmp
push
arpl
out
adc
mov
cltd
add
into
mov
and
call
movsb
xchg
mov
mov
and
movsb
add
xchg
mov
sub
fildl
shll
mov
inc
dec
ljmp
jne
mov
lcall
in
pusha
add
mov
inc
iret
mov
dec
outsb
mov
adc
std
jmp
call
xlat
xor
sbb
and
push
sub
cmp
and
jns
push
ret
ret
add
push
stc
cmp
sbb
adc
out
cs
loopne
push
movsb
out
xor
dec
ret
das
popa
mov
std
sbb
cmc
add
nop
mov
dec
adc
loopne
dec
mov
rcll
cwtl
movsb
fxch
arpl
mov
pop
push
mov
sub
test
sub
iret
addr16
inc
sub
inc
loope
stos
jnp
adc
lcall
adc
leave
sbb
cs
fcoml
scas
cs
pop
movsb
or
lock
mov
and
jmp
aad
cwtl
jle
xor
mov
popf
xor
xchg
outsb
jecxz
mov
jl
and
cmc
jo
cvttps2pi
out
popa
mov
rorl
scas
add
shrb
push
mov
dec
jle
test
mov
les
pop
push
mov
or
rcr
cmp
xchg
jne
push
pushf
sub
xorl
bswap
jmp
pshufw
add
nop
es
jecxz
sub
push
and
sbb
mov
jecxz
fsubrs
jp
test
pop
pop
sub
add
dec
cmp
pop
add
or
in
jno
mov
stc
loopne
sub
dec
lods
pop
cvttps2pi
lods
xor
push
in
cltd
jae
mov
cmp
cmp
popa
cmp
push
pusha
pop
dec
shl
sti
inc
mov
outsl
lods
pop
bnd
sub
dec
mov
in
mov
rolb
nop
movsw
jo
add
push
repnz
lock
loope
daa
jle
and
test
or
loopne
dec
in
and
dec
notl
push
mov
and
aam
pop
repnz
and
adc
dec
mov
xor
pop
xchg
fidivs
cli
test
outsl
js
setl
popf
idivb
incl
outsb
scas
lds
pop
or
pop
setb
and
jmp
rcl
fistl
and
loop
jmp
mov
movsl
xor
push
pop
or
adc
push
push
cmp
call
inc
inc
cmp
lock
movsb
js
stos
pusha
push
movsb
mov
rolb
test
sbb
stc
stc
xor
in
fadds
xchg
or
xor
and
lret
push
rolb
in
enter
out
or
jl
leave
dec
outsl
fcoms
out
mov
es
pop
aam
clc
cltd
jp
push
loopne
add
mov
and
out
push
adc
mov
fs
sbb
xor
inc
mov
inc
mov
das
push
mov
pop
cmp
push
xchg
test
scas
cmc
push
mov
add
sub
jg
push
js
std
push
int3
push
adc
sahf
pusha
dec
jmp
in
sbb
out
dec
test
push
and
pop
adc
ljmp
sbb
es
stc
rorl
loope
cmpsl
cmp
cltd
stc
push
mov
shl
nop
lock
push
and
jge
test
push
adc
sub
jo
icebp
lahf
dec
gs
cmp
nop
scas
inc
mov
cmc
or
xor
cmp
imul
js
sub
xchg
adc
xor
loop
push
mov
dec
cmp
mov
es
add
stos
out
pop
jg
pop
ficoml
dec
jne
out
sbb
xchg
pop
adc
pop
jb
aad
cmp
inc
movsl
jp
sub
js
adc
das
sub
ret
add
pop
leave
xor
push
aaa
xor
pop
cmp
pop
imul
sub
je
cmp
mov
icebp
mov
and
enter
js
aad
mov
jge
and
adc
sub
xchg
add
jae
aad
sub
sti
or
add
mov
psrld
insb
add
insl
or
loopne
shlb
add
and
add
call
mov
mov
jmp
es
jmp
fimuls
loope
je
ret
sub
dec
cmc
clc
fldenv
dec
dec
orb
adc
or
insb
mov
push
dec
lret
sub
sbb
ljmp
dec
rcrb
push
jmp
push
sub
repnz
mov
or
xchg
or
mov
cli
shll
subl
pop
xchg
dec
add
mov
aam
fmuls
pop
ret
add
ret
cmpl
inc
cmc
mov
dec
dec
cltd
cmpsb
mov
mov
add
push
test
xchg
inc
data16
test
mov
sub
and
negb
popf
pushw
push
pop
dec
cmp
call
fadds
add
mov
xor
dec
pop
cmp
rcrl
in
cld
popa
and
xchg
sbb
pop
sbb
call
xchg
stos
cmp
test
arpl
je
pushf
aas
int
sti
adc
or
data16
xchg
sbb
je
cs
pop
dec
out
int3
subl
test
data16
mov
and
xchg
pop
jb
or
xchg
sbb
lcall
pop
mov
xchg
push
das
xor
lods
mov
xor
pop
and
or
xor
in
stc
pusha
testb
push
lret
and
cmc
mov
and
add
push
sbb
mov
fisubl
dec
cmp
sub
lock
lock
mov
push
mov
mov
xchg
ja
pushf
insb
inc
addr16
xor
xchg
adc
bnd
and
and
sbb
and
mov
jo
jp
lods
pop
mov
adc
jp
xchg
xchg
xchg
fcomip
add
pusha
add
cmc
sub
nop
in
and
push
inc
mov
into
imul
test
bndldx
inc
inc
pop
aas
xlat
stos
inc
mov
hlt
sub
testl
arpl
pop
adc
or
call
add
push
cmp
ljmp
pop
fs
pop
lret
test
adc
adc
jb
lret
leave
pop
dec
add
test
stos
xchg
mov
mov
jbe
push
movsb
sahf
adc
sahf
inc
inc
cmp
leave
stos
jge
orl
nop
xor
sbb
cwtl
loop
mov
jns
inc
xlat
out
push
sub
xor
out
push
lds
mov
jle
push
jne
addr16
scas
inc
push
adc
inc
add
mov
lea
sbb
leave
cwtl
rcrb
test
jp
dec
cwtl
push
mov
xchg
bound
and
in
movsl
mov
inc
sbbb
jp
sbb
in
jle
dec
jno
or
jb
movsb
loopne
add
stos
mov
inc
pop
add
push
dec
pop
enter
or
add
data16
xabort
jmp
sub
add
xor
repz
lcall
adcl
dec
pop
sbb
mov
fldenv
mov
lahf
icebp
popw
inc
jle
lods
gs
mov
add
insl
mov
leave
test
rcrb
push
push
dec
push
adc
shlb
cmc
ja
cmp
xor
insb
ret
imul
jnp
push
add
pusha
lds
dec
aam
sub
popa
push
or
dec
cmp
sbb
mov
test
mov
mov
fwait
mov
and
and
dec
jo
push
es
lcall
loop
mov
mov
aad
mov
mov
push
push
mov
movsb
pop
fimull
imul
repz
sbb
aad
cmc
sub
lret
mov
or
inc
fimull
pop
rclb
jo
outsl
ljmp
sti
sub
andb
mov
push
add
sub
cmc
sub
xchg
sbb
push
sahf
rorl
mov
mov
jno
or
add
cmp
pop
xchg
out
mov
add
ret
movsl
fwait
iret
mov
aas
mov
js
add
push
aam
inc
andb
cmp
rorb
pop
sub
test
inc
sub
push
sbb
jne
mov
roll
mov
nop
loopne
and
xchg
push
insl
dec
je
test
jl
adc
lock
inc
inc
stos
mov
and
popa
xchg
sbb
pop
jb
add
lahf
in
xchg
adc
dec
in
nop
dec
rolb
bound
xchg
mov
mov
je
mov
sub
in
popa
adc
shrb
movsb
mov
sbb
clc
sbb
xor
sub
fwait
test
or
adc
cmpsl
sbb
adc
popa
cmp
add
inc
aaa
inc
push
pushf
dec
dec
jecxz
or
bound
cmp
or
loopne
jecxz
xchg
out
add
adc
or
adc
ds
pop
add
loope
adc
pop
subb
in
and
pop
enter
out
push
mov
xlat
or
adc
roll
adc
mov
or
inc
movsb
cli
ret
xchg
in
mov
loop
cs
and
jecxz
push
lock
shlb
in
test
add
ss
out
popf
jl
dec
dec
and
or
bound
insl
pop
mov
mov
sbb
mov
add
pop
and
fildl
xchg
daa
insl
cmc
dec
and
cwtl
inc
mov
mov
cmp
test
pop
xchg
dec
and
and
xchg
inc
inc
mov
mov
lds
test
mov
and
mov
pop
push
adc
inc
mov
sbbl
add
mov
jno
stos
insb
in
fsubrl
cmp
push
fists
rcr
adc
je
dec
enter
imul
fwait
notb
or
or
das
int
ret
pop
in
push
mov
add
lcall
orl
ret
rcrb
mov
or
mov
lea
push
xchg
das
jmp
add
in
mov
dec
test
gs
push
movsb
ljmp
insl
push
mov
mov
push
shrl
mov
dec
mov
sub
mov
mov
push
fistpl
cs
repz
cwtl
push
out
ret
cmp
mov
repnz
dec
je
stc
cmp
stos
lds
popa
and
pop
les
pop
xchg
inc
xchg
rol
mov
jne
pop
rcr
xchg
shlb
mov
push
xchg
push
xor
sub
roll
sbb
icebp
and
and
lock
jo
dec
mov
xor
push
std
mov
leave
lcall
mov
adc
cwtl
adc
add
add
jmp
pop
rolb
repnz
movsb
test
or
adc
loopne
hlt
jo
mov
cmp
sub
sarl
pop
add
ret
push
and
dec
es
xorb
cli
mov
push
mov
imul
jnp
sbb
and
arpl
stc
mov
pop
mov
sbb
pop
sbb
inc
aas
mov
jne
xchg
shrl
add
cmp
and
aaa
in
bound
xchg
sbb
leave
jnp
mov
jne
daa
adc
cwtl
sti
jo
xchg
inc
xchg
cltd
push
sbb
cmp
push
ret
stos
pop
mov
cmp
sbb
dec
imul
xchg
lock
loopne
push
mov
loopne
push
data16
outsl
cmp
test
lds
shrb
and
clc
rcrl
sbb
xor
es
and
or
inc
sub
adc
lahf
cmpsb
xchg
pusha
xchg
mov
sbb
xor
push
inc
cmp
cmp
test
cmp
and
or
fisttps
call
and
push
pop
lcall
iret
jp
mov
inc
bound
repz
icebp
out
cld
testl
mov
out
rclb
in
cmc
insl
jbe
out
pop
int3
mov
or
mov
stos
xchg
enter
and
cld
jb
or
dec
push
jbe
popa
mov
add
repnz
jns
ret
imul
movsb
sbb
bound
bound
jg
aas
sub
xchg
xor
out
popa
add
add
or
lds
pop
test
rep
and
mov
jle
nop
xor
jge
sbb
rcll
inc
jb
lcall
jb
pop
jns
es
push
outsb
das
data16
sbbl
or
scas
adc
push
in
fcompl
and
pop
leave
addl
xchg
pop
xor
sub
into
cmpsl
pop
push
mov
push
jno
pushf
mov
adc
fsubl
sbb
inc
icebp
cmp
push
test
es
sub
adc
out
push
mov
and
push
loope
jns
shrb
rcrl
jl
sub
pop
filds
or
ljmp
daa
imul
fildl
push
push
cmc
mov
movsb
mov
jae,pt
lods
daa
push
subb
daa
pop
cmp
test
fdivrl
inc
mov
mov
aas
add
inc
push
call
pop
push
loopne
lret
add
mov
xchg
iret
inc
xchg
scas
aaa
pop
sbb
into
push
cld
and
cmp
inc
and
xor
filds
lea
mov
mov
xchg
sub
lea
mov
push
inc
xchg
pop
pusha
dec
add
fimuls
jg
sbb
xor
adc
adc
sub
inc
and
and
pcmpgtb
clc
jno
jecxz
loop
add
adc
add
mov
cmpl
sub
sbb
xchg
fwait
lods
xor
jge
cmp
sbb
pusha
mov
ds
jae
push
mov
sub
mov
or
les
mov
dec
inc
add
add
and
jmp
cmpsb
js
or
ret
arpl
cs
je
icebp
inc
push
dec
outsb
pop
fs
adc
jle
dec
and
imul
add
pusha
cmp
sahf
cmp
jle
mov
push
inc
and
xchg
sub
sbb
cwtl
mov
cmpl
and
jo
inc
xchg
int3
mov
mov
mov
pop
xor
dec
cwtl
ret
xchg
pusha
enter
mulb
adcb
lds
repnz
hlt
pusha
jmp
or
popf
fmuls
loop
jns
sbb
jg
push
push
fisubs
sbb
jb
jp
xchg
push
int
scas
jb
pop
or
mov
pop
add
imul
cld
test
and
fdivr
loopne
fadd
sbb
mov
or
sbb
insb
dec
jno
adc
icebp
jns
xor
pop
push
adc
dec
cmp
add
lret
cmp
sub
vmovaps
sub
sbb
sbb
pop
mov
scas
xorb
shrb
mov
add
stc
in
jnp
and
cli
mov
adc
dec
sub
data16
rol
push
scas
sbb
xor
push
addr16
pushf
data16
ret
add
daa
inc
jg
mov
fs
arpl
bsf
pushf
stos
test
into
js
jbe
js
and
or
loope
sahf
mov
push
xor
fildll
inc
pusha
jne
sub
sub
ss
test
pop
movb
loopne
mov
and
push
mov
and
cmc
ret
lds
in
push
into
ja
xor
loope
into
sbb
enter
movsl
adc
pop
mov
mov
cs
adc
adc
test
pop
dec
hlt
movsb
daa
cmp
or
sub
pop
sbb
dec
jne
test
dec
pop
sub
shlb
push
xchg
or
inc
testb
stc
icebp
in
push
cmp
movsb
inc
lret
nop
fiadds
out
andl
cmp
mov
in
jmp
addb
std
add
jp
cld
cmp
cmp
push
adc
stc
mov
mov
and
daa
add
imul
push
bound
bound
dec
adc
xchg
xchg
popa
or
xchg
hlt
jne
test
mov
xor
push
std
xor
xor
je
cli
inc
jo
sbb
fwait
jl
add
and
cmp
stos
gs
jp
js
push
xor
adc
lods
pop
jecxz
add
adc
sbb
popf
mov
pusha
jp
add
sbb
or
inc
popl
adc
xchg
stos
stc
push
mov
jge
adc
mov
incl
shll
ret
fs
xchg
jns
push
movsb
ss
push
fsubs
add
test
or
sbbb
jb
push
jp
in
ret
ret
xor
sub
jbe
nop
insb
sbb
push
cmpsl
loopne
scas
xlat
and
cmpb
int
push
repnz
dec
push
flds
jnp
sub
push
add
in
ds
in
push
or
mov
adc
push
insl
sarb
jno
iret
push
in
call
fwait
add
mov
shrb
inc
dec
mov
pusha
call
dec
mov
jb
loop
jne
in
sbb
les
repnz
mov
add
jle
loopne
sbb
hlt
ds
test
xchg
or
and
dec
ds
enter
movsb
or
add
adc
test
inc
rolb
add
stos
pusha
test
and
fwait
js
js
and
ss
cmp
rcll
jno
xchg
pushf
aam
insb
dec
in
lea
mov
inc
arpl
inc
jo
out
and
dec
cli
cmp
push
sbb
mov
in
jmp
leave
test
call
pushf
or
inc
es
fs
or
popa
pop
add
lods
ficomps
sub
mov
mov
shrb
sbb
lahf
sbb
mov
add
adc
addl
add
outsl
xchg
or
repnz
xchg
add
add
inc
stos
cmp
fs
cmp
loopne
mov
push
mov
in
inc
fsubrs
jbe
adc
andb
pusha
gs
imul
lret
ret
test
test
scas
cwtl
and
ss
cmp
xor
mov
repnz
cltd
cmc
cltd
jg
cmp
das
outsl
stos
fwait
add
stos
inc
push
inc
cwtl
inc
jg
sahf
push
inc
pop
push
sbb
repz
mov
insb
mov
sbb
pop
push
push
mov
es
adc
adcl
fadds
out
mov
mov
push
cmp
cwtl
ds
and
loop
popa
xor
ret
push
pusha
shrl
loope
push
dec
xchg
test
ljmp
mov
push
jb
cmp
mov
sub
pop
rcll
sub
pop
pop
ror
jnp
xchg
rcl
cmc
and
orl
pop
aaa
jns
sbb
clc
adc
pop
in
out
xchg
dec
push
xor
adc
add
pop
sahf
rolb
pop
cmp
hlt
sarl
add
rcll
lea
add
gs
jne
mov
pop
mov
cwtl
xchg
shll
inc
rol
daa
sbb
ret
pop
mov
orb
ljmp
in
jne
xor
lret
orb
inc
sbb
jae
or
mov
jmp
mov
sti
pusha
fs
daa
imul
into
dec
ss
mov
add
loope
mov
xor
xchg
rcrb
lret
push
adc
sub
in
sbb
push
ret
jns
in
or
mov
loop
insb
ret
je
jo
xor
shlb
and
adcl
or
or
lea
adcb
xchg
xor
mov
jne
mov
sbb
or
inc
sbb
mov
sub
cli
dec
fld
test
idivl
adcb
enter
int
mov
fmul
pop
adc
xor
mov
dec
mov
and
leave
movsl
jp
movsl
pusha
dec
jg
loope
and
test
ljmp
es
mov
or
and
push
enter
dec
push
add
andb
ret
mov
add
and
and
xor
inc
xor
repnz
sub
sub
cli
pusha
mov
or
orb
mov
xchg
je
insb
and
enter
call
add
xorl
inc
cmp
shll
inc
roll
mov
xor
mov
sub
push
ret
push
loopne
fldl
sub
not
pop
pop
imul
mov
push
daa
cmc
xchg
imul
repnz
shll
mov
xor
xor
shrl
arpl
mov
orl
shrb
mov
adc
lret
dec
inc
jl
sbb
cs
repnz
add
dec
sbb
push
into
pusha
leave
cltd
mov
or
in
pop
mov
xchg
jbe
jne
ret
pop
ja
pop
add
arpl
or
sub
js
mov
enter
loopne
push
dec
sbb
ds
or
mov
adc
xor
push
jne
and
jl
popa
iret
or
mov
testb
xor
sbb
decl
push
jo
and
mov
sbb
and
pop
mov
lods
sub
dec
pop
sti
mov
dec
test
xchg
push
repz
add
inc
cmp
mov
addr16
jae
outsb
repnz
sub
pop
inc
ficompl
cs
rcrb
cmp
and
add
inc
loop
mov
and
push
outsl
push
or
mov
dec
mov
and
das
loope
adc
insl
pushf
push
sub
jb
clc
jle
mov
dec
dec
mov
dec
and
pop
pop
push
data16
ds
adc
cmp
xor
adc
stos
popa
icebp
mov
and
dec
pop
sbb
xor
xor
rorb
jno
push
stc
scas
and
das
lret
mov
mov
push
dec
inc
xchg
inc
dec
sbb
lods
leave
testl
mov
sahf
ret
inc
repz
out
or
clc
sub
mov
cld
mov
mov
xor
hlt
or
dec
and
ss
adc
leave
int3
arpl
fs
xor
fstl
cmp
sbb
sahf
sub
sub
jg
aad
add
jns
ret
mov
insb
mov
push
icebp
inc
cltd
inc
mov
dec
sahf
iret
push
test
xor
jnp
mov
jns
jno
mov
outsl
aas
lret
inc
shlb
and
inc
jne
in
pop
add
mov
cmp
inc
sub
pop
pusha
ja
test
loopne
das
mov
hlt
mov
loopne
dec
leave
movb
arpl
add
cmp
push
idivb
bound
daa
stc
mov
pop
pop
add
dec
std
dec
add
xchg
jl
rolb
xor
adc
add
adc
cltd
inc
leave
sub
andb
dec
loop
dec
mov
nop
sahf
fisubs
orb
in
loope
dec
mov
dec
adc
pop
adc
inc
addb
arpl
and
sbb
add
cmp
dec
addr16
movsb
pop
nop
mov
popa
push
xchg
cmpsl
mov
inc
aad
sbb
dec
pop
cmp
or
mov
jno,pt
adc
xchg
mov
loope
adc
imul
scas
add
dec
lret
stos
cmp
es
sahf
sbb
pop
sbb
lcall
push
xlat
jle
sbb
outsl
mov
pop
xor
mov
or
pop
push
je
incb
add
xor
popf
nop
mov
aaa
mov
add
mov
clc
es
shll
or
test
ja
aaa
or
lret
pop
test
adc
dec
pop
aad
ret
loope
cmpsb
mov
enter
inc
add
in
adc
xor
ja
jo
xlat
js
jo
adc
dec
dec
inc
lret
into
pop
sbb
adc
sub
pushf
je
dec
cmp
out
and
adc
cmp
movsb
xchg
add
arpl
push
or
xchg
sbb
or
pop
lock
cmpsl
and
inc
jl
xchg
clc
cmpsb
imul
out
mov
adc
out
leave
repz
into
inc
js
jge
xlat
pop
stos
push
fsts
sbb
ret
jae
aad
rcll
and
hlt
fiadds
mov
jno
xchg
add
or
mov
pop
jno
cmp
pop
fsub
jecxz
ss
mov
test
sti
and
stos
add
dec
mov
jle
jns
or
pop
imul
lds
mov
subb
sarb
xlat
dec
hlt
push
sbb
lcall
mov
test
sub
divl
sub
sub
popa
rclb
ss
inc
and
mov
lods
into
push
push
ljmp
leave
sub
sub
lahf
sahf
mov
ja
loopne
and
shrb
movsb
movb
sub
or
clc
jp
dec
pop
loop
lcall
aad
loopne
ljmp
mov
push
xchg
test
cmc
dec
call
and
add
ret
stos
gs
adc
xor
and
inc
shl
and
insb
xchg
cmp
dec
xchg
lods
dec
cmp
rcl
mov
daa
or
fldl
add
lahf
dec
je
push
add
popf
rcl
leave
and
jno
js
mov
scas
fwait
in
add
mov
in
icebp
push
rolb
icebp
add
das
inc
dec
ss
test
inc
pop
bound
add
jl
add
ljmp
hlt
movsb
cwtl
and
seto
mov
cs
dec
ss
hlt
pop
xchg
push
or
scas
cmp
and
mov
jmp
int
mov
outsl
push
xchg
jecxz
mov
addr16
and
mov
mov
cmp
or
dec
adc
cmc
int
test
adc
push
negb
or
push
std
add
push
xor
fisttps
push
xchg
add
shlb
sub
icebp
fs
jnp
es
in
call
shll
repnz
loop
adc
addr16
add
push
call
add
hlt
adc
clc
loop
adc
mov
or
in
out
add
test
xchg
je
push
rorb
orl
popa
mov
push
lods
jbe
xchg
aam
add
lret
loop
pop
sub
cmp
jnp
bound
pop
leave
stc
adc
add
sbb
xchg
mov
gs
mov
inc
lods
xchg
pop
cmp
mov
ret
or
imul
xchg
pop
xor
orl
or
add
enter
cmp
cmp
mov
add
push
mov
inc
mov
fsubrs
cmp
test
jo
jl
add
ret
cmp
sbbl
pop
xchg
or
inc
jb
xchg
leave
dec
rcll
test
ret
stos
aaa
inc
dec
ljmp
pop
mulb
sbb
cmp
dec
mov
jb
rorl
sub
adc
out
mov
not
lahf
in
or
shlb
sub
xor
les
das
int
loopne
arpl
out
mov
jmp
push
sbb
jg
rolb
test
and
repz
ret
call
and
dec
ds
and
fidivrl
inc
popl
and
inc
xchg
and
push
push
ret
je
orb
mov
adc
pop
mov
jno
mov
xchg
or
addr16
stc
jmp
push
mov
or
and
push
inc
mov
push
pop
adc
xor
repnz
lods
jg
push
je
arpl
mov
jo
xlat
ljmp
xor
adc
push
push
add
push
lds
nop
insl
jge
ds
data16
sbb
xlat
xor
jle
in
push
loop
rorb
pop
or
add
cmpsl
lret
pop
inc
sub
addr16
cwtl
cwtl
ljmp
andl
sbb
js
mov
loope
push
outsb
sti
in
imul
mov
fdivrs
or
push
add
sbbl
int
and
jg
mov
popf
dec
jl
xor
das
add
mov
popa
xchg
xor
push
adc
push
addl
in
add
push
pop
xor
xchg
nop
lret
int3
notl
fisubs
daa
jecxz
scas
std
push
sbb
push
gs
push
int
sbb
and
cwtl
inc
les
pop
divb
add
inc
lds
ret
sbb
dec
and
es
and
or
dec
cwtl
adc
mov
jl
xor
sbb
fs
in
pop
adc
andl
lahf
lea
in
sti
or
add
xchg
shlb
into
jp
sbb
add
cmpl
cmp
xchg
mov
mov
or
icebp
dec
mov
rolb
repz
mov
out
inc
push
push
mov
cmp
movb
sbb
rcrl
cmp
sti
lds
mov
dec
call
cmp
lods
pop
add
stos
sub
popa
push
insb
das
stos
xorl
cmp
push
xchg
pop
dec
ror
lock
add
xor
testb
stos
xor
loop
addr16
xchg
mov
test
adc
mov
bnd
movsb
das
cwtl
push
pop
stc
ja
adc
push
xor
dec
scas
outsl
pop
addr16
cmp
xor
xchg
jmp
dec
cmpl
add
outsb
pusha
dec
dec
out
dec
inc
mov
add
pop
sub
push
cmp
ljmp
in
gs
and
enter
movsb
cmp
mov
push
jne
xchg
dec
xchg
rcll
push
jecxz
jnp
cmp
daa
mov
aad
adc
add
adc
cmpl
movsb
fstps
notl
sub
int3
call
dec
push
testl
jmp
leave
push
push
push
dec
fsubl
jge
mov
pop
in
ja
cmp
dec
mov
cmp
cmp
pop
or
jo
je
or
mov
mov
cmp
sub
leave
sbb
sbb
adc
pop
aad
pop
pop
add
pop
or
mov
or
jno
cmp
mov
imul
mov
or
and
lcall
adc
xlat
aas
cmpsl
push
xchg
xchg
xchg
jne
popa
adc
dec
lcall
inc
dec
mov
pop
jle
xchg
adcb
jl
imul
pop
ljmp
adc
aad
leave
xorb
or
xlat
test
xchg
imul
push
or
or
addl
popa
sbb
adc
rolb
popf
mov
jp
and
shrb
repz
orb
test
mov
gs
outsb
dec
push
xlat
or
sbb
fsubs
sbb
jge
popf
and
and
aam
popa
outsb
js
pusha
jmp
into
dec
cmp
mov
js
pop
dec
in
aaa
cmp
pop
dec
sub
mov
subl
push
enter
push
xor
int3
mov
adc
and
push
sarl
out
out
imul
test
js
or
push
ss
cmp
imul
add
jecxz
cmp
push
cmpsb
dec
pop
or
xchg
es
pop
out
je
into
stos
mov
cmpsb
add
insl
adc
and
jmp
add
sti
bound
sub
lcall
or
arpl
mov
jbe
in
cltd
xor
xchg
outsb
sahf
xor
test
lret
push
fcoms
dec
push
push
mov
jl
inc
scas
pusha
or
loop
js
ret
loope
test
mov
inc
jle
push
mov
and
in
pop
dec
xor
je
pop
clc
xchg
xor
leave
cli
cmc
inc
pop
push
pop
mov
in
add
or
add
cmpb
adc
xor
add
mov
fldl
scas
pop
adc
mov
mov
pop
push
movsb
ja
movsb
or
imul
mov
lcall
mov
ljmp
ror
inc
xchg
inc
int3
xchg
dec
fwait
in
es
dec
out
mov
movsb
inc
aas
pop
sub
cs
stos
mov
pop
pop
daa
xchg
mov
popa
xchg
or
push
out
loop
mov
or
xor
jns
mov
inc
into
cwtl
fs
xchg
movsl
pop
fisubrs
adc
sub
ror
push
xchg
gs
xorl
popa
mov
mov
mov
mov
out
inc
xor
les
ret
sub
lcall
loopne
xchg
adc
dec
and
jge
movsl
sbb
mov
push
jmp
push
mov
addb
into
xlat
insl
jmp
mov
xchg
xor
push
pop
adc
js
xor
mov
js
push
addl
rclb
clc
add
xor
sub
das
lods
inc
sbbb
popa
sbb
adc
sbb
lahf
mov
shll
enter
and
cltd
aas
cmp
mov
sub
dec
in
jbe
cwtl
movsb
or
outsb
shr
mov
es
add
or
push
push
xchg
test
xchg
sbb
sar
add
pop
xchg
in
and
lds
mov
cmpsl
cs
out
inc
pop
divb
mov
or
and
or
sub
movsb
adc
mov
sub
or
cmp
mov
mov
scas
mov
or
shl
and
loop
mov
pop
nopl
mov
jge
in
into
mov
out
lea
stos
leave
scas
cwtl
scas
xchg
lea
lcall
dec
andb
sub
add
cmp
adc
xchg
clc
add
add
or
xchg
inc
lea
vcvtsd2si
outsl
daa
es
out
or
adc
xchg
push
inc
mull
hlt
ss
jge
addr16
cmp
inc
inc
inc
xchg
dec
inc
xor
add
pop
dec
mov
inc
and
cmp
push
out
fstpt
push
xor
ficompl
xchg
faddl
cmp
and
pop
add
movsb
xchg
into
inc
rcrb
sbb
xlat
shl
dec
repnz
sbb
pop
add
cmpsb
push
fldz
sbb
enter
fwait
cmp
mov
add
rorb
loopne
mov
jno,pt
orl
push
mov
or
sahf
testl
jae
ljmp
aam
repz
es
jae
or
mov
dec
stos
loopne
cwtl
mov
and
test
add
cmp
cs
out
and
jp
mov
sahf
jmp
adc
adc
jp
mov
inc
stos
pop
loopne
imul
push
jno
inc
mov
jnp
mov
rol
test
sbbl
mov
mov
inc
dec
pop
mov
inc
cmpsb
cli
loopne
and
jb
xor
push
and
lret
dec
jl
xchg
aaa
and
or
push
mov
scas
and
int3
pop
roll
xor
dec
cs
cmp
mov
mov
cmc
inc
mov
pop
mov
rcrl
cmp
or
sub
mov
xchg
shlb
movsb
xor
and
pushf
add
mov
push
mov
mov
xor
adc
or
push
scas
mov
mov
movsl
pop
push
in
das
cs
mov
fldcw
sbb
cmpsl
insb
mov
hlt
adcl
or
dec
inc
repz
lahf
mov
es
dec
push
jae
sub
data16
es
aam
call
mov
fs
mov
mov
nop
leave
push
pop
dec
sbb
push
jb
dec
or
and
jmp
std
mov
mov
lds
cmpsb
mov
cli
loopne
push
inc
xor
or
inc
js
add
sahf
pop
lret
add
fwait
sub
mov
mov
push
cwtl
in
rol
roll
cmp
add
adc
jmp
fwait
jle
mov
in
dec
sub
stc
test
inc
sub
mov
and
add
js
clc
cmp
adc
or
test
push
push
js
jne
pop
pop
clc
mov
add
mov
enter
mov
or
pop
repnz
cmpsb
cwtl
cmp
ficoms
cmc
xchg
fidivrs
add
es
mov
sahf
imul
loop
sub
push
mov
push
sbb
jbe
mov
test
dec
pop
push
cmp
push
jg
push
addr16
fildll
push
sub
aam
jecxz
add
pop
xor
add
mov
jo
cmc
jecxz
sbb
xor
fidivs
mov
mov
dec
addr16
xchg
jp
xor
lods
sub
or
repz
jecxz
xor
xor
adc
lds
pop
inc
add
push
and
cltd
add
subb
xor
out
mov
sub
xor
movb
cli
sbb
jns
sub
or
jbe
je
inc
and
add
and
or
dec
sbb
ja
pop
or
in
xchg
pop
lock
xchg
inc
dec
mov
mov
stos
inc
scas
movsb
inc
mov
mov
orl
jno
loopne
outsl
pop
in
arpl
or
jno
cwtl
pusha
push
cmp
inc
adc
clc
sbb
rcll
jns
mov
mov
inc
push
push
movd
ljmp
imul
adc
pop
arpl
clc
sbbl
sub
sbb
les
ret
dec
dec
adc
sub
iret
jg
cmp
mov
mov
add
outsb
dec
mov
xor
arpl
add
dec
pop
mov
mov
or
push
mov
cld
push
jbe
es
testl
dec
addr16
add
lods
mov
pop
negb
les
mov
pop
xchg
addb
jbe
mov
mov
dec
jbe
clc
pop
sub
xchg
or
std
shrb
xchg
dec
xor
es
sbb
dec
lods
hlt
sbb
add
jae
cmp
ljmp
ret
cmpl
xchg
adc
adc
repz
add
mov
outsb
sbb
das
jo
aas
lds
mov
fists
je
mov
notl
dec
sarb
or
cmc
or
sbb
or
rcrb
mov
dec
aaa
jmp
in
mov
inc
add
and
or
in
test
dec
push
shlb
call
pusha
aaa
popa
mov
sbb
std
add
push
mov
fidivrs
or
cmpsl
clc
adc
push
sbb
and
pop
xchg
xchg
rorb
jne
xchg
mov
push
mov
mov
jmp
jp
and
push
cmp
mov
mov
nop
sbb
pop
out
inc
mov
add
icebp
xchg
in
pop
xchg
pop
pusha
insl
shlb
addl
mov
pop
lcall
adc
gs
mov
pop
and
inc
ljmp
push
add
sbb
dec
subb
movsb
inc
pop
addb
stos
inc
sahf
mov
mov
sahf
ret
loop
sbb
shlb
movsb
jmp
ds
push
add
and
movsb
or
adcl
cmp
les
cmp
stc
push
dec
nop
and
lods
and
pop
lock
insb
repz
push
addb
mov
imul
cmp
test
jg
andb
cli
dec
push
push
dec
sub
and
pop
or
test
test
mov
fnstenv
and
add
push
push
frstor
jno
lahf
gs
sbb
dec
loop
pusha
jo
and
rorl
sbb
cmp
shl
inc
sub
jp
jbe
xor
movsl
es
out
je
xchg
add
and
sbb
fadds
xchg
or
out
push
and
inc
jnp
adc
xor
je
dec
xchg
mov
and
or
jnp
push
sbb
mov
xor
pop
iret
sahf
inc
pop
and
and
mov
mov
mov
cmpsl
in
pop
movsb
xor
mov
jge
leave
fistl
repnz
not
test
loopne
sbbl
orb
add
or
cmp
repnz
in
cmpsl
xchg
jge
sbb
xchg
sbb
inc
push
push
cmp
jns
sbb
push
add
xor
shl
inc
inc
sbb
andl
movups
mov
cmpsl
dec
movsb
cli
mov
adc
jno
popa
and
inc
out
lret
xor
faddl
add
add
push
and
aaa
jecxz
xchg
aam
mov
or
mov
je
push
lret
lds
dec
sbb
addr16
mov
cmpl
mov
pop
pop
nop
inc
bound
lcall
sbb
aam
or
inc
int3
cli
mov
sbb
loop
dec
lahf
adc
sahf
sub
jns
push
fsts
add
lods
pop
test
addl
dec
lock
aas
adc
dec
jmp
inc
sub
movsl
and
pop
enter
scas
add
nop
mov
enter
dec
jge
jnp
das
jecxz
or
aam
fstp
fs
fdivs
inc
and
paddd
or
aaa
mov
cmpsb
call
cmp
push
adcb
dec
xchg
jne
subb
cmp
jbe
movsl
lods
pop
dec
or
pop
iret
repz
xchg
pop
mov
daa
jo
or
loop
cmp
popa
dec
mov
xchg
dec
push
lahf
hlt
xor
rcr
js
fidivrl
aam
fsts
pop
or
xorb
xor
loopne
int
inc
or
cmp
mov
pop
mov
adc
icebp
dec
cltd
xor
or
push
or
mov
bound
cmp
call
fs
sub
mov
pusha
lods
popa
xchg
outsb
or
push
adc
je
dec
arpl
cld
bound
add
movl
mov
fs
pushf
addr16
pop
push
rorl
or
pop
in
cmc
mov
dec
out
add
lea
nop
xor
dec
rolb
adcb
jae
mov
jl
cmp
inc
jg
or
pop
xchg
pushf
mov
sbb
ficomps
xadd
inc
or
mov
xchg
adc
aam
insb
or
imul
cli
adc
shlb
je
or
cmpl
test
rclb
jno
out
or
push
pop
push
push
or
rolb
xorb
xor
loope
jne
aad
lahf
mov
movsl
xchg
adc
adc
imul
mov
inc
aam
jmp
pop
and
add
or
mov
mov
sbb
jl
pop
xchg
inc
xchg
gs
ja
jmp
dec
outsb
or
lods
xor
les
push
jo
cmp
aaa
xor
jge
addr16
sbb
testb
mov
je
leave
int3
andb
sbb
repz
jmp
out
dec
repnz
xor
cmp
mov
xchg
mov
js
mov
jne
lret
adcl
push
push
pushf
xor
mov
test
lahf
sbb
add
dec
mov
cs
loope
sti
lds
test
sar
push
xchg
mov
pop
xchg
cmc
pop
mov
and
mov
test
push
pop
pusha
imul
fwait
test
test
jge
xor
test
inc
add
scas
and
adcl
punpcklbw
les
push
cmp
lahf
dec
jae
pop
add
inc
arpl
mov
cmp
or
lcall
pusha
xchg
jo
mov
pop
subb
sub
jge
cmp
jne
xor
repz
add
push
cmp
in
sub
add
xorb
sub
sbb
dec
jecxz
mov
push
cmpsl
xor
sbb
add
jl
fcompl
pop
xchg
rol
and
stc
cmp
xor
mov
mov
xchg
cmp
adc
jecxz
repz
fs
repnz
inc
iret
dec
jo
rcl
xor
add
repnz
aad
push
push
xor
push
adc
enter
add
mov
mov
push
pop
scas
sbb
aaa
dec
icebp
mov
jp
xor
pusha
mov
add
packsswb
movsb
in
dec
jo
add
xchg
mov
sahf
pop
loope
lret
pop
xor
and
sbb
test
dec
mov
shlb
push
xchg
out
lcall
outsl
lock
sbbl
add
pop
shlb
pop
cmp
push
and
sar
mov
inc
push
aam
or
fnstcw
fisttps
loope
rcrb
or
and
xor
or
in
xchg
daa
or
jecxz
pop
jg
hlt
push
sbb
push
dec
inc
xchg
cmp
push
mov
mov
fimull
push
dec
pusha
insl
arpl
push
inc
pusha
xor
iret
out
mov
loop
cs
test
jl
ret
mov
or
pusha
movl
nopl
repnz
add
dec
pop
xchg
sbb
xor
jo
and
add
lret
cmp
into
mov
lods
fsubrl
sbb
xor
cmp
and
push
add
jmp
addr16
movsb
arpl
xor
and
es
sbb
mov
out
mov
xchg
rclb
mov
cmp
stc
notb
lcall
cwtl
mov
pop
lds
dec
push
inc
js
sbb
or
into
movsb
sahf
adc
arpl
add
imul
mov
adc
mov
test
or
mov
js
adc
icebp
in
stc
shlb
xchg
aad
test
into
mov
xor
popa
mov
aad
out
mov
test
mov
inc
cmp
nop
in
push
addl
mov
pusha
or
cmp
cmp
aad
fistpl
mov
cld
aas
xchg
fdivl
sbb
jne
sub
sub
insl
xor
popa
rorb
jbe
xor
xor
addr16
pop
aam
add
in
add
js
push
mov
lret
adc
sahf
dec
dec
in
pop
mov
and
jmp
mov
sbb
scas
out
xor
push
push
adc
fisttps
dec
ret
aam
or
ret
addr16
or
jns
mov
and
cli
clc
xor
cld
jge
rol
inc
loop
loop
cmpsb
xchg
cmp
pushf
mov
test
call
popa
push
pop
mov
cwtl
scas
mov
adc
push
mov
out
aaa
pop
je
inc
cmp
and
and
add
lds
movsb
loope
out
fcom
sub
adc
cmp
jecxz
jnp
mov
and
fsubrs
fbld
mov
mov
cmpsb
inc
and
ret
adc
add
push
dec
mov
decb
imulb
lods
dec
pop
movsb
xchg
push
in
dec
inc
xor
ret
xor
movsb
dec
stos
mov
adc
jmp
or
aaa
or
orl
dec
mov
jne
rcr
push
aam
mov
sahf
pop
inc
pushf
addr16
mov
orb
jp
pop
cmpsb
push
inc
out
cmp
mov
mov
movsb
adc
push
je
test
fimuls
and
in
insl
in
adcl
and
loopne
sbbb
lods
imul
adc
icebp
sbb
aam
xchg
and
int
test
and
jbe
test
dec
sub
lods
cmp
and
mov
gs
mov
mov
add
loopne
xchg
and
add
movsb
inc
add
rclb
or
out
add
and
ret
adc
addr16
faddp
int
pop
sti
xchg
adcl
jnp
xchg
adc
cli
xchg
cwtl
sub
xchg
hlt
xchg
mov
adc
push
pop
push
jae
call
roll
jb
mov
jg
push
sbbb
data16
xchg
pop
inc
in
adc
cmp
mov
movsb
out
cmp
fs
xor
bound
adcb
jbe
jmp
push
in
ror
push
jecxz
cmp
faddp
add
add
data16
inc
xchg
imul
sub
je
add
and
adc
cltd
test
mov
fstl
mov
push
or
popa
mov
mov
dec
cmpsl
xchg
mov
sbb
and
movsl
push
inc
aaa
sar
sub
push
sub
mov
push
mov
loopne
popa
lock
cmpsl
imul
shll
fimuls
xchg
push
cmpsl
cmc
pop
cmp
nop
sub
dec
cwtl
jnp
inc
sbb
stc
aad
incb
iret
jae
sbbl
or
pop
mov
mov
adc
nop
sbb
mov
shlb
out
adc
sti
inc
and
cmp
push
dec
dec
enter
push
xor
jge
xchg
xor
xorl
ss
xor
or
js
jbe
add
inc
mov
mov
xchg
cltd
mov
cs
xorb
stos
lock
sbb
mov
or
push
xchg
je
into
dec
shr
and
ret
mov
push
aas
daa
mov
sbb
loopne
add
repnz
jo
je
pushf
mov
sub
inc
rorb
shll
push
and
fs
mov
std
out
xchg
rcrb
mov
aad
sub
imul
jmp
mov
orb
push
ret
mov
xchg
inc
dec
js
dec
aam
hlt
dec
xchg
add
add
ror
out
xor
add
insl
push
add
xor
in
lea
icebp
popa
pop
sbb
add
cmp
mul
inc
addr16
push
out
inc
adc
pop
xor
dec
test
into
es
clc
adcl
push
xor
outsb
inc
das
and
in
xchg
adc
lret
into
jp
sub
and
mov
sub
sbb
loopne
ljmp
outsl
insb
and
scas
inc
subl
jecxz
mov
add
icebp
mov
xchg
add
xchg
dec
and
arpl
imul
fidivrl
in
decl
dec
dec
adc
adc
or
pusha
es
cli
sub
lock
pop
ret
enter
lock
cmp
xlat
mov
mov
iret
add
mov
mov
fwait
add
mov
xchg
loopne
adc
loope
cltd
jne
adc
sbb
push
dec
xor
aas
insb
adc
rorb
mov
pop
inc
cmp
dec
jmp
mov
adc
and
sub
adc
adc
sub
js
push
aad
insb
add
dec
xor
ret
sbb
sbb
orb
int3
dec
cmp
jbe
pop
adc
and
inc
dec
dec
lret
test
xor
xchg
ds
pop
add
je
pop
adc
test
pop
lahf
fdivrs
stc
or
or
pop
or
sub
rolb
in
out
push
loop
outsb
mulb
insl
mov
add
push
faddl
ret
inc
add
lods
fldenv
or
sub
push
push
mov
add
push
xchg
in
and
xchg
into
cmpsb
or
lahf
xchg
into
jbe
add
xor
leave
or
leave
loopne
lret
push
les
lcall
jb
je
jg
cmp
xor
pop
je
fisttpl
out
ficoms
mov
sbb
push
adc
xchg
dec
sbb
ja
mov
bound
cli
aas
nop
scas
mov
imulb
andl
int
or
or
xor
sbb
ret
mov
inc
testl
rolb
stc
je
mov
push
hlt
inc
cmpsl
xchg
inc
shl
ja
adc
aaa
or
dec
enter
out
lods
rorb
jns
or
leave
ljmp
mov
into
jle
mov
mov
push
sbb
jmp
lock
dec
xchg
mov
test
cmp
jns
mov
xchg
pop
lea
sarl
cwtl
cmp
sbb
aad
xchg
xchg
jl
mov
or
xchg
jp
rorb
jge
insb
inc
add
or
push
pusha
inc
shrb
mov
pop
fucomi
popa
sbbl
pop
div
xor
cmp
or
adc
fldl
call
into
adc
outsb
nop
jle
jmp
inc
repz
pop
push
addr16
adc
cmc
adc
stc
jmp
push
sbb
xor
and
leave
popfw
sbb
nop
jbe
or
cmp
cmc
add
into
stos
inc
sub
mov
sub
adc
pop
loop
and
push
movsb
push
pop
lahf
jb
mov
arpl
in
fnstcw
xchg
xchg
or
pop
inc
icebp
push
out
std
push
bound
add
push
inc
mov
xchg
test
sti
or
test
aas
jp
andb
insl
adc
stos
cwtl
inc
movsl
aam
loope
lcall
mov
xor
out
dec
sub
xor
bound
int
cmp
in
pop
adc
or
pop
add
shll
add
inc
popa
addr16
cmp
jl
push
push
push
xor
shlb
iret
loopne
daa
js
movsl
fwait
add
or
dec
inc
pushf
or
daa
sbb
inc
andb
xchg
push
adc
jne
xor
ds
loopne
add
adc
cmp
add
mov
lock
add
pusha
pop
inc
sbb
cmp
push
in
leave
xchg
mov
xor
sbb
lahf
cmpsb
adc
cmpsb
sbb
leave
adc
sbb
or
lds
add
cmp
adc
adc
test
sbb
mov
popa
add
xchg
cmpb
call
and
sbb
enter
pop
mov
mov
popf
std
into
popf
lods
into
xchg
maxps
sbb
mov
dec
cmp
mov
jo
lock
xlat
cmp
sarb
stos
adc
mov
xor
pop
sbb
sbb
xchg
sub
mov
adc
sarb
nop
loopne
cwtl
jg
and
dec
cmc
dec
aaa
or
xchg
jbe
xchg
call
pop
repz
sahf
push
lods
sahf
push
mov
mov
lcall
sbb
in
ds
pop
inc
mov
mov
test
cmp
ds
adc
ljmp
and
inc
sahf
pushf
jo
inc
mov
mov
and
sub
mov
pop
hlt
outsb
arpl
sbb
jmp
xor
or
popa
daa
add
mov
or
sti
lea
cmp
and
adc
loopne
adc
adc
dec
jb
add
test
mov
xor
orl
xchg
pop
repz
es
push
cli
and
iret
jbe
addr16
scas
jg
das
pop
mov
and
mov
mov
cmp
jecxz
or
sbb
scas
lcall
jg
lds
xchg
or
mov
add
pop
daa
cmp
adc
adc
xchg
xchg
mov
dec
call
xabort
dec
clc
cmovs
popa
je
and
nopl
sub
inc
dec
or
iret
movb
jae
stc
dec
inc
sbb
lds
movsb
add
cmpsl
jo,pn
xchg
addr16
cwtl
dec
sarb
scas
ret
lods
and
dec
inc
push
mov
cld
lcall
cmp
fisubl
add
in
jne
push
lcall
in
shlb
orps
xchg
push
or
dec
in
clc
cmp
cmc
mov
xchg
cmpsb
jne
stos
push
sbb
mov
mov
sub
fwait
cwtl
mov
enter
push
enter
sbb
mov
mov
xor
dec
xchg
dec
fcmovbe
sbb
adc
adc
cmpl
stos
imul
pop
sbb
dec
pushf
rorb
cmp
inc
mov
repz
cli
sbb
mov
push
xorb
jne
dec
out
popf
xor
repz
cmpsb
clc
push
jae
xchg
adc
loopne
icebp
cld
add
scas
js
fcompl
push
mov
push
sub
in
add
add
xchg
out
dec
int
adcl
add
fadd
jns
enter
mov
xchg
xor
dec
mov
jae
ja
add
sbb
jle
lock
adc
movsb
jnp
gs
adc
sbb
and
adc
mov
mov
sub
or
mov
dec
mov
xchg
imull
fisttpl
or
lcall
jns
adc
and
or
or
leave
loop
and
nop
in
rclb
daa
sbb
cld
mov
sbb
mov
pop
loop
inc
and
sbb
cmp
xor
inc
xor
cmp
jmp
loope
gs
push
stos
xchg
out
dec
hlt
insb
add
mov
cmp
or
mov
fldl2t
sbb
popa
pop
dec
ds
cmp
imul
insl
out
lret
mov
loope
inc
cmp
mov
std
addb
lock
pop
xor
push
pop
sbb
subl
mov
es
xor
mov
cmp
mov
adc
inc
pusha
and
out
mov
arpl
sub
adc
ds
in
mov
dec
xchg
pop
cs
adc
rcrb
sbb
inc
test
dec
in
cld
xlat
sahf
cmp
dec
and
fstps
and
pop
mov
mov
jbe
out
rolb
mov
dec
jbe
dec
xchg
sbbb
push
mov
mov
iret
jae
dec
cli
pop
or
call
fwait
cwtl
popf
aam
call
mov
push
movups
movsl
push
ror
roll
dec
inc
pushf
gs
sub
call
mov
push
call
add
mov
lret
into
sbbb
scas
loopne
imulb
dec
repnz
jge
xor
ficomps
es
or
call
mov
fnstenv
mov
sub
xor
outsl
inc
test
arpl
sub
sbb
mov
jb
inc
sbb
push
popf
addr16
sub
popa
das
std
adc
pop
xchg
arpl
add
and
loope
xchg
adc
push
enter
lock
sbb
dec
and
xchg
xchg
inc
xor
pop
nop
psrad
sub
clc
adc
xor
dec
loope
add
shll
sbb
dec
cmpsb
dec
repz
jb
mov
pop
and
mov
adc
jns
sbb
dec
jno
xor
or
mov
aaa
jp
sbb
add
sbb
cld
call
dec
mov
mov
cmc
sbb
or
movsl
xchg
gs
rolb
or
sbb
movsb
cmp
rcll
push
jns
add
sti
dec
mov
stc
call
cmp
and
fadds
sub
testl
cmpsb
and
movsb
dec
jmp
mov
sub
inc
or
push
insl
xor
xor
clc
in
xchg
repnz
mov
mov
cmpsb
fs
pop
dec
push
ds
or
add
sahf
jne
lret
psubsb
leave
sti
mov
les
popf
jae
jnp
adc
test
dec
lock
cmp
xor
push
lock
lods
in
mov
adc
fimull
push
mov
cmp
adc
jnp
sub
fidivs
stc
add
pop
sub
or
lods
imul
enter
ret
ss
test
and
inc
pop
inc
mov
mov
or
xchg
xchg
out
xor
jecxz
je,pt
xchg
stc
or
ffree
sbb
hlt
push
adc
sahf
xchg
adc
cmpsb
aaa
cmc
ret
lcall
mov
daa
jnp
jecxz
ret
add
bound
sbb
add
lods
pop
fildl
pop
std
sti
add
invd
les
movq
add
dec
mov
or
call
dec
xor
mov
in
fisubrl
dec
adc
std
out
movsb
roll
xor
int3
ds
idiv
pop
or
daa
pop
sbb
push
pop
add
and
mov
outsb
or
loop
add
adc
dec
and
adc
arpl
jne
sbbl
popf
rol
addb
cwtl
xor
mov
pop
lock
push
adc
ret
add
mov
push
add
mov
sub
push
std
arpl
sbb
mov
in
stos
xchg
int
faddl
fsub
shll
cmp
mov
test
xchg
xchg
or
add
aaa
or
lock
cmp
sbb
pop
in
xchg
adc
test
jp
push
xchg
negl
es
ret
add
lret
sub
scas
jne
cmpsb
xor
ljmp
push
xchg
aas
and
dec
pop
in
addr16
jb
add
aam
mov
jge
pop
loope
stos
aad
into
loop
mov
push
out
inc
ret
call
fistps
fisubrs
shll
push
bnd
pop
inc
addr16
cltd
adcl
lods
sbb
in
pop
aas
mov
and
cmpl
push
mov
xor
xchg
jge
add
jg
push
sub
add
cwtl
and
or
add
mov
pop
pop
xchg
or
nop
jmp
push
shlb
mov
xor
pop
and
loopne
push
mov
mov
xchg
faddl
es
sahf
cmpsl
xchg
push
xorb
lahf
mov
push
sub
cld
clc
movsl
test
jns
lods
adc
or
mov
ret
aad
or
jns
and
out
dec
adc
mov
xorb
or
test
rol
outsb
lods
popf
jne
hlt
xor
push
movsb
ja
lahf
xor
pop
inc
xchg
push
or
cmp
pop
xor
addb
mov
pop
sbb
pop
push
inc
int3
out
dec
jge
testb
mov
adcl
xchg
sub
ss
and
dec
andl
xlat
insb
movl
out
std
sub
insb
xor
fstl
mov
mov
pop
inc
ret
and
and
push
mov
in
arpl
adc
adcl
out
push
or
push
add
jne
dec
ljmp
jl
jb
push
xchg
gs
push
stc
dec
nop
jg
push
fcoml
jp
in
std
mov
sbb
shrb
sbb
arpl
and
sub
stos
pcmpgtd
rolb
inc
inc
outsl
rcll
arpl
add
dec
stc
adc
dec
mov
gs
shrb
xlat
jns
push
mov
imul
outsb
lahf
pop
jb
add
cwtl
jbe
test
sbb
dec
push
pop
mov
inc
pop
ljmp
in
lea
cmpsl
les
loopne
aaa
inc
inc
cmp
or
mov
pusha
nop
fwait
out
xor
fbld
idivl
sbb
aas
das
mov
xchg
outsl
cltd
mov
or
sahf
dec
pop
inc
mov
loopne
mov
out
mov
dec
pop
adcb
xor
add
movsb
sbb
jns
inc
sub
push
mov
cmp
stos
gs
sub
aaa
jnp
enter
sbb
lds
mov
push
bound
xchg
add
dec
push
mov
inc
testl
xor
lret
ljmp
dec
add
inc
daa
clc
dec
jnp
mov
cld
in
cli
or
mov
shlb
jmp
and
and
shlb
sub
test
addb
mov
sbb
aam
jp
push
mov
and
xchg
rclb
push
sub
xor
jl
mov
cmpsl
movsb
dec
clc
inc
and
push
xchg
js
add
aad
add
push
xchg
push
dec
lret
fcoms
add
push
pop
add
push
or
jo
fwait
cmpsb
dec
rorb
mov
shll
rorb
loopne
iret
clc
cmp
and
in
inc
out
bound
fidivs
mov
loope
loopne
push
fnsave
dec
sti
pusha
inc
xlat
rep
add
in
push
movl
jno
sub
add
xlat
cli
xor
les
push
mov
dec
loopne
mov
imul
pop
ja
movl
cs
stos
mov
sbb
cs
push
sbb
adc
call
push
fsts
mov
pop
cmc
xchg
sti
adc
dec
out
and
clc
insb
inc
add
hlt
cmp
enter
mulb
dec
xor
ret
add
or
mov
cwtl
inc
in
push
repnz
imul
sub
cmp
cmp
cmp
loope
or
arpl
mov
insb
aaa
das
rolb
add
sbb
sub
out
fcomi
imul
mov
and
xor
or
cmp
pop
paddusw
pusha
mov
in
leave
ficompl
xchg
cwtl
sbb
mov
sbb
stc
cli
shlb
js
bound
xorb
mov
arpl
nop
test
inc
xlat
rcr
jo
xor
or
sbb
jo
insb
xor
psubw
and
xor
rcrl
addr16
push
push
flds
sarb
jecxz
in
loop
pop
dec
inc
sub
mov
mov
xchg
jle
mov
jae
jecxz
lock
mov
test
popf
jno
aam
repnz
mov
mov
mov
cld
imul
xchg
outsb
or
dec
mov
mov
jb
shll
adc
pop
pop
mov
imul
jb
movsb
push
icebp
adc
ficompl
insb
dec
mov
roll
aad
jbe
scas
and
xchg
dec
pop
xor
rcrb
xchg
lods
sub
mov
lock
movsb
imul
add
jae
xor
loopne
imul
mov
sbb
mov
or
lock
xor
add
inc
testl
stos
cmpsb
xor
test
leave
rcrl
xor
xor
lret
cmpl
push
xor
jns
out
mov
stc
mov
inc
out
adc
jp
cmovbe
ret
cmp
xchg
inc
dec
dec
push
jae
cld
js
arpl
cmp
pop
lea
lock
dec
out
cmp
cmp
inc
mov
aad
insb
shrb
and
loopne
sub
sub
add
dec
pop
mov
arpl
popa
xchg
je
jmp
adc
cmp
cli
jb
mov
sbb
cmpsb
flds
add
sbb
js
ss
mov
loope
jae
popf
in
fisubl
movsb
ret
dec
out
inc
psrld
les
push
imul
mov
outsb
rorb
je
sarl
fidivrs
cmp
add
xchg
sbb
cmp
pmulhw
test
dec
adc
fstpl
sbb
rcrl
int3
fdivrs
xchg
add
lahf
loop
xchg
push
add
jo
shld
rol
call
xchg
scas
sbb
xor
mov
nop
add
out
mov
xchg
data16
jl
fldenv
sbb
dec
mov
movsb
jo
adc
or
add
add
xchg
cmp
xor
jae
lret
dec
pop
mov
xor
call
test
or
dec
xchg
subb
add
mov
loop
test
xor
cmp
jp
mov
mov
add
lret
xchg
pop
dec
cmp
movsb
ret
ds
cmpb
sub
push
and
adc
clc
inc
enter
jb
push
sbbb
push
icebp
insb
outsl
and
xchg
insl
inc
mov
mov
popf
or
insb
movsl
and
pusha
ret
out
adc
cmp
jns
inc
dec
and
pop
mov
cmpb
inc
pushf
aam
inc
decb
jb
roll
sarb
push
out
pop
mulb
pushf
enter
add
or
xor
leave
push
sbb
test
pop
movsb
pushf
pop
mov
gs
mov
dec
loop
je
sbb
outsb
loope
aaa
dec
pusha
idivb
repz
fstps
ret
les
lock
std
adc
mov
sbb
push
dec
out
flds
and
test
or
std
aam
ret
pop
test
sbb
mov
dec
loop
push
mov
cmp
pop
ret
test
and
mov
pop
inc
adc
mov
and
jle
mov
xchg
leave
cmpsl
cltd
rorb
cltd
popa
push
xor
ret
stos
dec
mov
sbb
scas
xchg
std
clc
arpl
mov
pop
into
add
mov
ret
mov
push
pushf
aad
fwait
lret
les
shlb
cmp
sti
shl
shlb
fcoml
aaa
mov
xchg
sarl
popa
outsb
aaa
ret
push
xor
adc
fs
mov
outsb
test
push
pop
jb
ds
and
cmp
fcmovnb
sub
sbb
push
je
shrb
int
shl
rclb
arpl
or
sub
insl
sub
daa
sbb
ja
mov
add
or
mov
cmp
jle
insb
mov
fwait
rcl
out
bound
in
sahf
mov
jle
push
gs
popa
xor
sbb
push
movsl
adc
or
psubsb
and
sbb
xor
addr16
mov
sbb
call
xchg
shlb
incl
into
pop
push
movsb
loop
arpl
jns
stc
imul
aad
add
adc
xor
xor
adc
jb
pusha
nop
xchg
cmp
gs
aam
rorb
xor
sub
and
push
push
dec
sahf
mov
mov
cmp
in
add
adc
or
call
xlat
shlb
mov
push
lcall
mov
push
pop
sub
stos
xor
jb
sub
shll
jle
out
mov
xor
dec
jae
imul
leave
xor
ss
outsl
sbb
add
xchg
gs
mov
cmp
out
cmp
cmp
loope
xchg
pop
cmp
ret
xor
or
enter
jo
jmp
dec
sub
or
sti
addb
xchg
mov
mov
and
push
add
out
mov
mov
mov
pop
ret
fwait
subl
pop
push
ljmp
push
mov
sub
test
inc
inc
add
cmpsb
cmp
mov
add
ds
fs
mov
inc
int3
imul
and
push
push
test
clc
enter
pop
idivl
and
inc
or
dec
std
stc
and
les
andl
dec
sbb
jbe
sub
nop
sub
xchg
push
das
mov
push
clc
xor
lods
pop
inc
xlat
lret
push
pop
dec
clc
push
aad
pop
mov
sbb
pop
mov
in
push
dec
pop
stos
gs
pop
nop
clc
mov
fs
cmp
repz
repz
pushf
adcb
sub
inc
push
iret
fst
fmull
insl
pop
adc
mov
call
sub
xchg
mov
popf
fcomp
jmp
nop
mov
adc
or
loop
cmpsb
push
pushf
lods
xchg
lret
sbbb
filds
imul
or
movsl
mov
cmc
das
in
sbb
dec
cmp
dec
xor
lahf
orl
mov
sahf
mov
push
lods
test
pop
rcpps
imul
test
sub
cmp
fildl
sbb
adcb
inc
dec
sbb
cmpsb
sbb
mov
push
cld
hlt
and
repnz
pusha
mov
mov
push
lret
call
add
pop
aad
fs
shrl
jns
jl
jo
nop
xor
push
mov
add
addr16
mov
jp
push
xor
jae
add
rorl
fimuls
aas
out
jns
xchg
jne
dec
out
nop
and
fs
push
aad
jecxz
jl
add
es
or
jg
adc
and
test
lods
or
ror
fstpl
jbe
add
add
mov
int
ljmp
sub
dec
jecxz
add
leave
sti
pop
inc
scas
stos
xchg
push
sbb
popl
arpl
int3
dec
sub
and
repz
lds
movsl
popl
or
jmp
push
cmpl
cld
dec
cld
add
sub
jecxz
dec
out
outsl
push
out
imul
add
mov
and
loopne
rclb
mov
inc
testb
ror
jp
or
mov
aam
lret
xchg
data16
or
cmp
add
loopne
js
sub
or
add
jbe
loope
and
lds
out
push
inc
mov
lcall
push
pop
aam
jmp
gs
cmpsl
xchg
cmp
pop
aas
jp
mov
inc
adc
add
mov
lcall
push
bt
push
leave
sbb
or
and
xchg
bound
or
push
jg
mov
xor
and
inc
fimuls
iret
ss
fs
shrl
imul
gs
inc
mov
leave
mov
xchg
bound
adcb
xor
mov
inc
mov
adc
sub
jne
and
mov
adc
adc
sbb
movsb
sahf
mov
pusha
leave
nop
add
insl
pop
rolb
shlb
je
inc
push
xor
mov
cmp
lock
mov
dec
push
daa
roll
inc
xor
cmpsl
js
or
dec
mov
push
add
dec
mov
sub
xchg
pushf
mov
lret
adc
shl
cld
movsb
dec
fsubrl
sbb
icebp
xor
gs
and
sbb
testb
xor
mov
xor
inc
cmp
xchg
add
xchg
sub
ja
mov
jp
sbb
ljmp
ljmp
push
push
aas
mov
movsb
add
add
adcl
std
add
cmp
lcall
lcall
inc
aaa
rorb
and
sub
push
sub
bound
sub
icebp
push
and
shl
fisubrs
and
adc
les
sub
fs
add
and
ja
sbb
adc
repnz
pushl
adc
shlb
pop
hlt
mov
sbb
pop
mov
xor
mov
pusha
adc
lods
sub
sbb
dec
cmc
repnz
lahf
add
cmp
push
lret
fstpl
and
hlt
adc
add
icebp
mov
in
add
ds
cmp
movsl
dec
test
mov
cmc
lea
loopne
xor
cmp
les
jmp
push
xlat
sub
sbb
or
jbe
xor
jnp
pusha
and
pop
nop
pop
outsl
jnp
sbb
pusha
and
add
call
mov
push
jle
or
in
ret
add
sub
cmpsl
inc
subb
int
bound
mov
dec
pop
push
jg
push
int
xchg
inc
testl
jmp
addr16
and
pop
icebp
dec
call
out
daa
jge
fimull
sarl
jmp
xchg
popf
lods
adc
sti
jne
pop
dec
push
cmp
sbb
jge
iret
push
leave
xor
dec
into
loop
jb
ds
mov
xor
xchg
bound
pop
mov
lret
push
bound
inc
shlb
pop
add
movsl
adc
insl
mov
push
push
dec
pop
mov
xchg
aad
mov
sbb
shlb
lcall
enter
dec
pop
add
xchg
jo
clc
mull
je
icebp
inc
xor
out
inc
sub
push
fbstp
xchg
adc
sti
clc
je
mov
mov
mov
lahf
jle
leave
pop
in
fiadds
pop
pop
dec
and
adc
mov
arpl
mov
add
addr16
lahf
sub
test
pop
fbld
xor
mov
xor
addb
push
test
adc
mov
sub
inc
popa
loope
sub
rol
and
adc
pusha
mov
inc
out
dec
add
sti
jl
jb
loopne
cmc
ret
mov
mov
bnd
outsl
in
sbb
xor
icebp
pop
pop
insb
mov
ljmp
ret
add
pop
xchg
mov
and
or
cmp
mov
xchg
inc
nop
cmp
xchg
rcrl
inc
testl
in
xorb
cli
or
sbb
rolb
mov
ret
cmp
push
cmpsb
fisttpl
mov
stos
cmp
jp
loope
sub
test
pushf
fiadds
js
mov
push
cmp
push
icebp
jl
and
cmp
arpl
jmp
and
lahf
addl
popa
dec
inc
ja
xor
outsl
add
or
jo
sbb
aam
cmpsb
popa
orb
mov
xor
xor
hlt
fs
xchg
push
or
or
cltd
jmp
andl
xchg
inc
orb
sti
and
fidivl
dec
pushf
adc
mull
xor
shlb
lds
cs
mov
push
pop
xchg
cli
test
ret
push
sar
nop
les
inc
push
shrl
pusha
adc
jl
pop
pop
xor
loop
movsb
sbb
xor
arpl
mov
aad
addr16
add
adc
cld
loop
adc
mov
xor
mov
push
mov
out
jns
out
rorb
sar
movsb
pop
push
jnp
adc
loope
addb
mov
test
sub
inc
cs
jp
dec
sahf
nop
sbb
or
dec
rcll
sbb
cs
dec
inc
js
push
xor
dec
cmp
popf
xor
or
pop
out
popa
popf
mov
dec
daa
ror
sub
call
lahf
xchg
push
out
push
mov
mov
mov
lcall
mov
rorb
aad
adcb
xchg
push
inc
adc
rcl
mov
ret
ja
sub
pop
jmp
sti
add
ljmp
inc
cs
stc
cltd
and
mov
sbb
into
mov
imul
or
cmp
testl
mov
jmp
shl
cld
pushf
or
sbb
cmp
cmp
or
leave
push
pop
cwtl
push
inc
jle
neg
movsb
test
scas
test
cli
cmp
xchg
lret
inc
mov
mov
mov
or
lahf
dec
ja
enter
loope
mov
loop
push
test
cmp
push
daa
pop
outsl
inc
sbb
arpl
adc
push
sub
pop
mov
pop
in
cmp
dec
mov
pop
leave
mov
stos
aaa
push
or
and
jb
lcall
ss
jg
or
lahf
out
dec
jo
stc
out
add
movsb
sub
mov
cltd
sbb
lods
jecxz
adc
fwait
mov
ror
pop
cmp
sub
fimull
xor
add
adc
xchg
jns
idivb
into
je
pop
add
iret
sahf
lret
pop
add
notb
cmc
cmp
xor
pop
xor
mov
xchg
jno
push
push
fidivrl
mov
fldenv
adc
es
lds
pop
push
ljmp
push
cmp
icebp
xor
adc
xchg
jg
imul
ret
sub
push
pop
in
lods
sahf
push
or
insl
xor
lcall
xchg
adc
in
test
xor
adc
and
cld
outsl
js
pop
fbstp
xchg
loop
cwtl
sub
in
fs
push
dec
pop
jnp
cmc
outsb
push
inc
xchg
bound
fmull
dec
notb
ds
cmc
inc
jmp
mov
mov
ret
dec
and
lods
rorb
fdivs
jno
rcrl
adc
loope
int3
je
pop
xor
in
into
pop
cmp
mov
sahf
add
mov
add
jmp
xor
arpl
hlt
mov
les
outsb
inc
sub
daa
dec
mov
mov
mov
inc
adc
or
cmovbe
adc
xor
inc
sbb
and
test
sub
push
and
dec
dec
loop
test
cmc
mov
movsb
cwtl
daa
daa
xchg
and
push
sub
xchg
xor
add
sbb
arpl
adc
sbb
or
or
cmp
mov
xchg
sbb
dec
add
mov
lret
add
popf
xor
mov
dec
xchg
out
das
mov
mov
xchg
pop
lcall
stos
bound
lcall
mov
movsb
and
into
in
mov
sbb
cmp
mov
ret
ret
and
push
test
rcr
aam
cmp
cmc
jo
aas
fdivrl
scas
adc
addr16
xor
dec
gs
mov
or
jno
js
xchg
sbb
ret
mov
je
mov
and
add
xchg
js
push
xor
cs
inc
mov
pop
out
ss
mov
mov
sahf
pop
mov
xor
paddd
out
pop
into
loopne
sub
cmp
movsb
lret
pop
orl
jge
inc
inc
popf
xor
insb
xor
fstps
mov
inc
mov
add
lret
sub
mov
repnz
cmp
cmp
sbb
idivl
sub
sbb
in
jmp
jo
notl
popf
aam
lock
sub
shlb
xor
loope
xchg
jns
sbb
xchg
aam
out
dec
js
push
cmp
out
repnz
inc
dec
jp
adc
mov
pop
mov
orb
fimuls
add
rorl
mov
sti
test
daa
das
jmp
cmp
shll
xor
fs
sub
cmp
add
cmp
std
in
and
push
fsubrs
sbb
mov
push
sbb
add
adc
mov
jge
rcrl
lds
mov
negl
int
pop
int
cmc
scas
imull
das
xorl
pop
cmpsl
pushaw
popf
std
jecxz
repnz
ret
mov
in
add
ret
outsl
xchg
mov
dec
cmp
orb
bound
shr
adc
inc
jb
in
mov
fstps
jne
adc
cmp
das
add
into
movsb
add
sub
xchg
mov
push
cmp
int3
dec
xchg
pop
mov
push
mov
test
adc
aaa
sub
pop
push
arpl
lea
jno
push
ret
movsl
push
leave
comiss
pop
jne
ds
icebp
jle
mov
add
or
pop
push
cmp
loopne
mov
mov
stos
mov
insb
mov
sbb
sub
adc
das
xchg
test
popf
dec
mov
loopne
inc
pushf
arpl
lds
cmp
mov
mov
sbb
decb
sbb
test
mov
mov
cmp
sub
cmpl
addl
lahf
es
and
add
fstpt
scas
in
dec
xchg
sub
cs
xor
dec
out
lcall
mov
test
push
jle
lock
push
inc
loopne
pop
iret
inc
pop
test
nop
pop
out
in
popf
loop
fwait
cmp
push
dec
mov
push
or
scas
jo
xchg
jl
and
ja
pop
xlat
popf
xchg
or
xorb
leave
push
clc
addb
int
jge
pop
in
fcoms
addb
xor
xor
out
mov
cwtl
push
pop
add
sti
or
push
sbbb
pop
add
movsl
mov
cld
dec
sub
or
rorl
xchg
sbb
addr16
jo
fwait
push
rcr
js
adc
out
jmp
cli
add
jnp
push
push
lahf
push
cmpl
inc
adc
pusha
rcrb
loope
dec
push
addr16
fadds
and
or
pop
ja
sub
lcall
sbbb
add
adc
push
dec
ds
cwtl
dec
inc
movsb
inc
xor
inc
sub
xchg
ret
clc
ficomps
mov
insl
and
daa
pushf
mov
xor
sahf
mov
cmp
xor
sbb
ljmp
push
cmp
fmuls
mov
and
lods
ss
cmp
lahf
add
xor
push
ds
out
int
test
fucomip
popf
addr16
jns
and
xor
aam
or
lods
pop
pop
shrb
dec
fbstp
roll
lock
or
stos
gs
leave
ret
mov
shll
push
push
xchg
mov
mov
adc
ljmp
mov
decb
and
push
mov
pop
push
mov
push
je
les
or
in
xor
insl
inc
add
shrl
or
aaa
push
xor
pusha
inc
jno
sbb
add
lds
negl
add
lret
adcl
hlt
sahf
pop
dec
xor
aas
adc
cmp
das
mov
and
sub
sbb
pusha
les
push
add
adc
and
aad
or
mov
movsb
cmp
fists
test
ja
rol
xor
ret
pop
sub
mov
mov
mov
cmp
pop
in
insl
cwtl
add
push
dec
mov
jl
icebp
stos
in
mov
sub
push
daa
ret
push
xchg
jae
push
xchg
fsubr
sbb
mov
cli
inc
push
data16
inc
xor
rcrb
jp
inc
cmp
pop
mov
jno
rcl
mov
stos
xchg
dec
add
ljmp
pop
cli
mov
mov
outsl
pusha
data16
mov
add
test
cwtl
test
push
xchg
adc
ret
mov
pop
jbe
jns
mov
and
mov
push
mov
xchg
hlt
subl
jle
lock
inc
add
fldlg2
js
push
inc
push
cmp
pop
inc
iret
pop
sub
repz
xchg
mov
or
add
adc
xchg
cmp
or
popf
add
jno
cmp
mov
jb
or
mov
and
adc
xor
stos
jno
or
xchg
push
mov
add
insb
mov
aad
aad
sub
test
addr16
mov
push
push
por
js
dec
fisttps
or
call
add
sbb
addl
mov
jno
std
aam
mov
pop
sbb
call
in
lcall
inc
sub
push
jo
shlb
js
fcomp
and
loope
sub
shll
xchg
add
fwait
rcrb
add
test
in
inc
xchg
jle
xchg
loopne
dec
push
jge
ss
sub
fs
sbb
mov
fdivrl
ljmp
mov
push
dec
and
mov
sbb
or
sbb
pop
int3
pusha
cmpb
mov
mov
xchg
push
and
inc
and
enter
mov
pop
outsb
and
push
addb
dec
ja
subb
jno
cmp
add
stos
pusha
and
jge
pop
xchg
jns
push
inc
add
jae
and
lcall
and
fidivrl
mov
mov
pop
cmpsl
pushf
add
pop
push
xchg
xchg
dec
adc
fnstenv
mov
sbb
ss
add
xor
pop
xchg
test
bound
lcall
xchg
loop
pop
mov
push
in
inc
xchg
rcrb
mov
mov
and
inc
fdivr
mov
dec
int3
mov
test
push
popa
mov
xchg
cwtl
cwtl
stos
je
addb
cltd
and
cmp
mov
mov
push
and
jl
push
mov
insl
or
adc
jns
into
or
jge
cmp
and
mov
xor
test
mov
jb
xor
test
dec
insb
xor
adc
and
cli
lods
frstor
inc
inc
lcall
rorl
into
lcall
jae
popa
dec
lahf
xor
sti
mov
push
imul
fimuls
data16
subl
bound
or
gs
inc
adc
jl
add
xchg
ljmp
shrb
push
shr
push
lahf
pop
lods
adc
rorb
inc
push
pop
aaa
dec
dec
xchg
subps
add
jnp
cmp
shrb
pusha
xchg
push
pop
push
adc
push
mov
xchg
push
int
sbb
inc
filds
add
jmp
mov
mov
dec
mov
jnp
scas
out
loopne
fistpll
dec
push
push
pop
dec
adc
cmp
xchg
push
mov
push
mov
addr16
fimull
daa
mov
cs
xor
xchg
dec
ja
fsubrs
ja
xchg
push
and
mov
addl
pop
mov
sbb
movsb
or
add
out
sub
sahf
jno
push
mov
add
inc
add
xor
cmpsl
into
pop
js
adc
orb
add
sahf
dec
pop
popf
adc
jl
push
rclb
fidivl
rolb
aad
stc
shr
xchg
loopne
cmp
cmp
icebp
pop
cli
xor
inc
add
add
xor
inc
mov
in
cmp
or
adc
pop
lcall
jo
aas
test
pop
pop
xchg
inc
sti
fcmovu
mov
rcr
xor
push
les
ja
mov
xchg
push
daa
push
mov
lcall
fiadds
add
adc
leave
das
lods
rolb
and
sbb
in
xchg
add
addl
mov
out
jnp
push
or
inc
dec
cmp
cmp
xchg
out
nop
loopne
sub
in
adc
repnz
pop
pop
sbb
subl
and
and
mov
movsl
ret
shlb
mov
pop
add
and
cmp
cwtl
sbb
pop
andl
popa
mov
jnp
lods
dec
add
or
xchg
test
ror
ja
push
fs
mov
stos
push
fidivl
cmp
sbb
mov
pop
test
push
lcall
aaa
push
jmp
and
scas
mov
mov
and
mov
jb
adc
push
push
mov
lds
inc
jns
sbb
push
dec
lds
sbb
add
xchg
push
int3
mov
icebp
insb
arpl
xchg
and
or
aas
rol
ret
mov
nop
icebp
stos
call
inc
ja
scas
fsubs
pslld
ja
cmpsl
add
jno
mov
roll
lods
bound
jbe
out
and
stos
xchg
cld
loopne
ret
rol
push
movsl
loopne
testb
mov
add
inc
xor
fld
or
xchg
xor
int
inc
outsb
pop
out
pop
cmp
adc
xchg
ret
sub
push
pusha
lods
faddl
lcall
xchg
pushf
cmp
and
cmp
jbe
cwtl
or
sbbb
push
fbld
and
mov
inc
outsb
jge
mov
loopne
or
in
add
mov
mov
xchg
jne
outsb
mov
sub
sbb
jb
dec
or
lea
jno
pop
cld
jno
popl
adc
movsb
mov
jb
add
mov
cmp
add
mov
and
pop
movsb
push
add
sbb
push
and
fldenv
aaa
lea
add
cs
fsubs
sub
js
ret
sub
test
nop
push
jo
shrb
and
xor
js
push
cmp
jge
adc
mov
adc
push
xor
cmp
push
mulb
push
rol
pusha
shlb
xor
mov
sub
sbb
lcall
fs
movl
sbb
bound
repnz
push
mov
add
or
mov
dec
xor
jb
sbb
mov
call
sbb
aaa
cmpb
push
stos
mov
ljmp
ja
aam
mov
dec
or
out
push
jo
loopne
jmp
popf
sbb
loope
rclb
push
mov
jo
mov
jecxz
lds
inc
or
and
cmp
loopne
scas
push
outsb
add
pusha
mov
mov
inc
mov
je
pop
jg
sti
pop
inc
cmp
mov
sub
push
mov
sbb
stc
loopne
sub
cs
shrb
leave
ret
add
js
test
pusha
xchg
mov
xchg
add
fcoms
adc
inc
mov
push
jno
pop
sbb
in
sbb
lea
cmp
xor
pop
gs
pop
add
add
jl
jbe
test
inc
pop
mov
lods
repnz
sbb
clc
add
stc
inc
out
cmp
das
orb
sbb
les
push
nop
cltd
add
or
mov
cs
repz
push
fwait
push
and
scas
xor
jle
arpl
pusha
sub
mov
xchg
cld
out
cltd
mov
adc
jne
lock
imul
mov
nop
mov
pop
adc
movsb
mov
in
hlt
es
inc
iret
xchg
xor
push
lock
fsubr
sub
sub
in
and
sub
cmp
pusha
jnp
lahf
rcrb
movsb
jnp
xchg
js
pop
adc
cwtl
dec
push
push
ret
adcb
movb
popf
add
pop
or
test
js
pop
sbb
adc
pop
inc
pushf
pop
repnz
loopne
sbb
out
sbb
shr
add
sub
cmc
fnstsw
or
pop
xchg
xchg
ja
adc
and
bound
or
scas
xlat
xor
jno
jecxz
js
xchg
jge
lret
adc
fstps
ss
mov
mov
test
les
or
movsb
cmp
cltd
inc
nop
out
push
pushf
mov
jns
popa
pop
push
xchg
pop
xchg
mov
adc
dec
mov
mov
xchg
test
xorb
push
data16
mov
cmp
addb
cmp
pop
and
cmp
inc
mov
xchg
jle
mov
mov
add
add
mov
dec
push
lds
mov
add
push
sbb
nop
sahf
xlat
fs
dec
lock
sbb
mov
movsl
divb
or
sub
pop
sub
orb
les
adc
and
adc
popa
pop
jl
divb
jle
lret
mov
roll
xchg
ficoml
insl
leave
cmp
add
in
add
fdivrs
repnz
ss
xchg
cs
push
inc
xchg
js
or
cltd
and
test
cmp
mov
push
add
mov
or
scas
xchg
scas
push
dec
add
sub
lret
jp
xor
pop
or
adc
les
in
cmp
push
add
add
dec
inc
cmpsb
stos
cmpsb
gs
ret
pop
push
mov
xchg
sbb
cld
add
mov
sub
rcr
adc
shll
mov
pop
cwtl
cmpsl
les
ljmp
xor
iret
dec
and
adcl
movb
data16
pop
popa
sti
or
pusha
sbb
pop
mov
ret
jge
pop
pusha
pop
sbb
pop
xor
cmp
mov
push
add
in
test
add
mov
cmp
adc
pop
jge
call
cwtl
inc
or
add
xchg
fsubl
es
notl
mov
xchg
loopne
hlt
iret
adc
ret
andb
stos
fisttps
in
or
aas
mov
inc
out
jg
adc
sbb
out
and
rorb
push
or
cmpsb
sahf
cmp
add
jne
js
and
inc
jmp
jmp
mov
ret
mov
mov
popa
mov
loop
pop
addr16
imul
cwtl
mov
adc
jo
in
sbb
iret
push
je
or
and
scas
movsb
jp
pop
hlt
sub
sbb
xchg
fcoms
cmp
xor
cmpsb
dec
fcmovnu
mov
dec
out
out
call
cmp
inc
subb
mov
sbb
pop
cs
inc
std
cwtl
sub
out
pop
sub
jae
int3
and
mov
pop
imul
cmp
push
setg
and
cmp
add
dec
mov
xor
mov
daa
std
xchg
scas
sub
sbb
cmp
pop
movsl
leave
test
dec
or
test
sarl
andl
sahf
in
aas
push
cmpsl
xchg
ljmp
add
repz
dec
mov
and
jp
in
ds
cmp
fisttpl
sbb
pop
and
inc
jp
jo
popf
xchg
add
sbb
add
xlat
dec
push
cli
ljmp
jg
cltd
not
fcompp
jl
jne
aam
shll
popf
imul
mov
je
cmc
push
pop
push
cmp
fwait
push
add
push
rclb
mov
xor
cs
lock
pop
outsb
sub
fcomp
sbb
pop
inc
cs
lcall
jns
cld
inc
mov
mov
stos
outsb
inc
aas
mov
jns
aam
jb
aam
cmpsl
jp
in
adcl
jl
repz
ret
jmp
pop
ja
and
in
sub
sbb
mov
movsb
mov
sbb
jle
fmull
outsb
xor
add
push
mov
aam
sbb
dec
pushf
and
daa
and
adc
adc
jmp
filds
push
cmp
loop
mov
insb
or
xor
in
popa
pop
pusha
movb
cwtl
rorl
and
daa
inc
int3
clc
inc
into
xor
mov
add
sbbb
inc
sbb
popa
mov
enter
push
fs
mov
pop
adc
and
and
pop
ja
xchg
loope
pop
ret
sahf
aam
add
in
push
sub
les
fs
cmp
xchg
mov
shrl
addr16
push
rcr
lock
pusha
push
push
nop
aad
clc
xor
jecxz
mov
push
cltd
cltd
repz
movsl
fwait
adc
stos
sbb
mov
ljmp
sbb
daa
fldcw
xchg
jno
test
add
test
pop
cmp
inc
xchg
cmpl
add
or
jne
push
add
sub
inc
sbb
pop
stos
mov
xchg
popa
xor
mov
bound
dec
mov
jo
jg
add
pusha
jbe
pusha
out
shll
add
inc
lds
or
in
ja
xchg
imul
test
data16
cmpsb
mov
push
push
outsl
mov
push
inc
shrb
addr16
sub
cmp
inc
xor
mov
jbe
in
out
icebp
jns
inc
jbe
inc
cltd
pop
xor
out
pop
shl
mov
push
ljmp
ds
mov
dec
dec
inc
into
popf
push
stos
xor
lods
push
in
add
xor
ja
imul
aaa
leave
and
mov
stos
or
subl
dec
adc
mov
xchg
pop
js
jnp
inc
ljmp
frstor
cmp
cmc
rcrb
jo
push
lret
loop
adc
or
lods
cli
notb
mov
pop
shlb
and
cmp
data16
jl
mov
jno
mov
test
xchg
push
push
popf
xchg
pop
sbbb
jnp
xor
mov
and
addl
mov
mov
or
jl
lahf
jg
mov
jmp
iret
xor
xchg
add
addr16
or
orb
sbb
mov
pushf
in
or
mov
push
adc
cmp
inc
ret
outsl
push
lock
or
push
popa
movsb
lock
mov
xor
push
pop
xchg
clc
dec
add
call
ja
mov
scas
pop
shlb
aaa
jno
mov
lcall
xchg
loope
ds
sub
sbb
sub
mov
cmpsl
outsl
imul
mov
rorb
pop
mov
jmp
js
add
dec
into
pop
push
movsl
dec
add
insb
push
pop
iret
jl
test
inc
sarb
lea
rcr
push
xorl
hlt
jle
jg
ljmp
addb
cmp
add
addb
push
add
add
or
cmp
add
orb
add
popa
push
insb
inc
push
jo
jo
call
add
pop
pusha
or
dec
inc
loopne
and
add
cmp
push
add
add
js
nop
jg
scas
mov
add
xor
pop
and
fstpl
outsb
pop
xor
pop
cmp
push
add
xorb
fisubrs
dec
pusha
nop
das
jl
fcmovnu
fstpt
push
add
and
add
loopne
xor
mov
mov
push
loopne
xor
and
cmp
push
sbb
loopne
inc
icebp
fists
add
rol
pop
inc
rcrb
mov
addb
add
add
loopne
stos
dec
jp
in
negb
add
addr16
pop
push
or
inc
xor
mov
jbe
add
add
jns
or
jge
mov
xor
pusha
sbb
add
add
lods
insl
fldt
nop
pop
sbb
or
sti
cmp
or
loop
and
and
insb
fs
jo
jbe
fsubrs
mov
insl
dec
shlb
add
mov
mov
inc
xlat
pop
sti
cmp
push
add
ret
fs
sahf
push
clc
and
shrb
or
add
or
push
xchg
mov
xor
data16
push
add
fisubrl
or
or
xor
clc
rcrb
sbb
es
add
mov
clc
xchg
mov
shlb
loopne
shlb
xor
xlat
mov
sub
add
inc
mov
insl
lods
jne
jo
iret
inc
fs
or
and
push
jnp
fcmovbe
insl
cmp
orb
cmp
out
pop
pop
push
frstor
and
add
insl
test
stos
push
imul
and
and
xchg
pop
sub
addb
pop
sbb
adc
dec
jo
imul
imul
add
inc
push
mov
sti
and
lea
lds
push
or
pop
or
mov
sbb
pop
imul
xor
imul
or
imul
dec
xor
xor
pop
push
dec
pop
inc
push
dec
inc
dec
inc
sbb
jne
lea
inc
add
sarb
das
dec
outsb
inc
cmp
nop
adc
imul
loopne
mov
js
add
bound
insl
add
inc
jle
push
les
outsb
je
adc
out
nopl
outsb
pusha
add
xchg
add
inc
sub
iret
cvtps2pi
or
xchg
sbb
push
push
add
add
adc
out
cmp
nop
xchg
pop
sub
nop
xor
adc
add
jbe
hlt
jns
adc
add
cmc
push
add
push
ljmp
pop
and
or
pop
iret
in
sbb
dec
mov
cmp
xor
add
lea
arpl
mov
sub
adc
cmp
dec
imul
lods
jne
push
je
add
sub
xchg
lods
mov
loop
shlb
xchg
dec
dec
lea
xor
inc
imul
mov
mov
and
cs
fs
pop
push
sbb
or
incb
push
dec
push
sbb
ss
mov
xor
jp
cmp
test
cmpb
xor
push
push
or
imull
push
fs
push
cmpsl
jo
jo
inc
sub
mov
jne
shlb
fadds
lods
iret
or
mov
cmp
subb
shll
test
mov
inc
sub
add
jecxz
pop
xor
sbb
add
mov
dec
xchg
fdiv
loopne
imul
data16
imul
inc
mov
mov
jle
xchg
repz
scas
insl
or
or
mov
xor
push
mov
or
or
add
addl
or
sbb
aad
pop
bound
mov
pop
or
subb
ret
sub
sbb
or
outsl
and
or
dec
sbb
sub
ret
test
add
and
pop
xor
push
sahf
jns
push
icebp
ss
cmp
xchg
ret
enter
sub
push
cmp
imul
lods
adc
adc
adc
inc
sub
xor
dec
lods
sbb
das
add
std
ljmp
outsb
push
imul
add
int
mov
pusha
cwtl
push
mov
js
sbb
lods
sbb
mov
mov
dec
push
dec
push
inc
push
inc
dec
push
pop
dec
ss
ficompl
call
pop
mov
inc
mov
inc
and
xchg
arpl
inc
jmp
imul
lds
icebp
jne
mov
hlt
mov
sbb
dec
rcrl
in
push
jbe
push
mov
in
cmp
sbb
push
cmp
das
add
mov
fistl
icebp
or
test
jle
sbb
sbb
xor
inc
push
add
mov
fnclex
pop
int
popa
jb
jbe
rolb
and
inc
add
dec
or
add
push
sub
and
in
push
test
or
out
sbb
and
dec
aam
fcmovnbe
dec
sub
jle
push
pop
inc
addr16
push
add
and
mov
push
add
shrl
imul
xor
add
popa
data16
insb
dec
outsb
popa
push
jae
pop
xlat
inc
insb
in
add
inc
rorb
add
mov
imul
push
or
orl
adc
out
jb,pn
adc
jp
cwtl
fcmovbe
repz
pop
mov
inc
sub
dec
push
dec
cmp
arpl
mov
mov
ret
jge
out
add
das
out
test
add
inc
xor
int3
or
jo
inc
sub
jb
int
jmp
mov
pusha
cmp
sub
imul
inc
inc
rcl
push
loopne
mov
lods
repnz
pop
push
xchg
insl
and
and
push
cwtl
enter
insl
xor
xor
addl
lods
push
pop
pop
pusha
int3
mov
mov
jne
sbb
jae
je
push
sbb
add
dec
add
dec
scas
divb
add
xor
mov
sbb
subb
lods
iret
pushf
js
pusha
jo
jo
int
gs
nop
jo
mov
adc
daa
push
ljmp
nop
dec
and
mov
xchg
jbe
out
mov
push
pop
inc
push
push
push
dec
push
push
push
inc
inc
jae
lods
add
lock
sbb
fiaddl
loopne
inc
mov
mov
xor
or
push
test
add
ret
dec
add
or
nop
std
sahf
xchg
arpl
sub
test
xchg
or
popa
jae
add
add
push
xor
nop
dec
icebp
sbb
jb
cmc
pop
jo
xchg
call
fmull
xchg
mov
lods
push
adcl
mov
inc
js
pop
push
scas
xchg
mov
jae
inc
or
dec
mulb
int
push
add
cmpsb
add
xchg
testl
dec
mov
sub
scas
sub
push
mov
das
mov
aas
dec
pop
xor
push
addl
insl
leave
cltd
int3
fmul
dec
test
mov
test
add
rorb
cld
and
push
call
xor
push
mov
and
int
mov
cld
sub
mov
push
shlb
es
add
test
pop
imul
and
xor
cmp
fdivl
loopne
xor
popf
inc
cmpsb
push
pushf
stos
pop
adc
dec
pop
pop
mov
fwait
dec
sbb
inc
popl
fmull
push
xchg
mov
push
aaa
add
cmp
fs
pop
inc
jns
pop
test
or
rcrb
or
and
xchg
stos
or
out
adc
jbe
inc
das
fstps
lods
mov
push
jge
sub
mov
xchg
ficomps
cmp
add
or
xchg
pushf
pushf
add
rcrb
or
bound
rol
xor
xorl
call
ljmp
inc
dec
dec
push
inc
push
push
inc
dec
dec
push
nop
add
dec
xchg
cmp
jae
stos
sub
outsb
jae
out
adc
pop
lods
imul
rclb
adc
lea
rcrb
jne
pusha
scas
jg
push
jge
push
dec
or
dec
jne
pop
imul
jle
dec
inc
inc
cmc
ja
loope
rcrb
inc
cmp
sbb
xor
mov
into
and
inc
xor
cmp
xlat
jne
jbe
dec
jl
js
inc
pop
shll
sbb
shrl
into
loope
sub
inc
cltd
pop
loope
mov
sarb
push
pop
mov
loop
push
stos
mov
or
mov
in
cmp
icebp
jno
lea
adc
xchg
imul
bound
mov
mov
subb
lret
cmp
test
stos
mov
js
cltd
xchg
fcompl
scas
fistpl
jae
jne
pop
dec
ret
je
sbb
pop
xchg
dec
dec
mov
dec
push
addl
das
adc
lock
xchg
out
push
xor
imul
push
adc
scas
push
sbb
add
xor
or
and
pop
xor
xor
rorb
jo
loope
mov
ss
or
xor
or
dec
jo
rcrl
cmc
push
push
push
lret
ds
je
aam
inc
arpl
stos
add
sbb
rolb
sub
test
push
xor
xchg
int
or
popa
mov
mov
push
sbb
mov
mov
andl
dec
add
mov
mov
pusha
mov
insl
xchg
dec
pop
mov
jae
xor
lds
jnp
xchg
or
and
insl
shl
test
cmp
jmp
xchg
shrb
lcall
mov
aas
pop
xchg
or
shrb
sbb
jmp
push
push
dec
push
mov
insl
cs
xchg
lods
xor
test
sbb
bound
or
outsb
dec
pop
add
mov
xchg
or
sub
in
mov
push
push
dec
mov
sub
inc
pop
add
push
mov
fildl
out
xchg
or
xor
mov
lcall
mov
push
add
adc
jmp
adc
or
push
push
or
loop
inc
imul
or
ljmp
les
iret
pusha
mov
jae
nop
mov
inc
cmp
and
pusha
or
add
push
push
sub
jae
es
arpl
int3
loopne
gs
pop
scas
lcall
pop
imul
lcall
inc
push
rcrb
pop
dec
fwait
shll
aaa
data16
fisttpll
popa
fs
outsb
outsl
jo
js
insl
arpl
xchg
lcall
cmp
adc
xchg
inc
rol
pop
adcb
mov
dec
and
push
imul
dec
jo
pop
pop
mov
int
pop
add
std
lods
pusha
push
mov
mov
jne
loope
push
mov
add
add
dec
lods
pusha
dec
cmp
lock
inc
lods
pushf
int3
das
add
rclb
lods
add
outsb
iret
xorb
cmpb
pusha
push
add
call
inc
pop
xor
add
inc
xor
lods
addl
pop
xor
jo
dec
sub
subb
sub
dec
mov
xor
add
xor
add
mov
mov
cmpsb
sbb
pop
ljmp
jns
shrl
rorb
mov
fnstsw
pop
inc
js
rcl
jne
jno
cmc
push
push
insl
push
jo
dec
pop
add
in
test
inc
lcall
dec
push
sbb
js
out
sbb
sub
push
mov
pusha
bound
cmpsl
mov
adc
mov
mov
and
add
mov
jae
int3
sub
cmp
inc
inc
dec
dec
add
ss
mov
xorl
mov
sub
inc
dec
sub
daa
mov
and
inc
nopl
dec
dec
out
cmp
or
dec
xor
or
push
add
xor
aad
push
ret
into
test
pop
xlat
shll
aaa
jmp
jo
lret
inc
hlt
sbb
mov
dec
in
mov
dec
sbb
mov
icebp
in
nop
xor
ret
sub
mov
push
push
inc
or
add
ss
loopne
push
add
sub
sbb
sbb
loopne
movsl
int
loopne
sub
cmp
mov
xor
testb
fs
xchg
mov
push
mov
sbb
inc
and
adc
lcall
add
cmp
aaa
js
loope
xor
add
out
pop
bound
push
jle
scas
pop
add
push
test
mov
inc
jmp
add
push
mov
adc
sbb
pop
imul
xor
push
jo
mov
add
xor
mov
mov
xchg
popf
test
insl
pop
mov
pop
sti
aaa
pop
xor
hlt
mov
out
push
inc
push
push
mov
jne
jl
or
and
lock
rcrl
add
push
fiaddl
int
gs
outsb
fildl
xchg
push
mov
pushf
inc
inc
jae
int
sub
stos
or
push
lcall
dec
add
push
or
ja
repz
scas
lahf
cmp
add
ljmp
loopne
loope
mov
pop
imul
push
and
push
pop
loopne
push
pop
lahf
add
xor
lcall
xchg
mov
add
mov
sub
mov
jo
es
mov
xchg
test
hlt
xlat
sbb
lahf
xor
test
mov
stc
cmp
pop
pop
pusha
mov
xchg
lcall
sahf
pop
inc
stos
roll
mov
mov
imul
dec
jmp
push
xor
fmuls
out
or
je
je
insb
jb
xor
outsb
xor
lcall
inc
jbe
push
ret
sbb
push
mov
push
dec
outsb
inc
push
pop
dec
ja
dec
jne
and
insb
xchg
cmp
sub
push
mov
rorl
push
jb
sarl
sbb
add
lea
sub
lret
inc
rol
inc
and
ja
arpl
inc
push
xor
stos
push
push
rol
insb
and
daa
push
cmpsb
add
aam
inc
push
sbb
jo
scas
stos
push
and
ss
xchg
rclb
sbb
xor
inc
xor
mov
sub
mov
sbb
or
xchg
pusha
cmc
test
cmp
fwait
or
std
arpl
adc
mov
adc
sub
push
xlat
aam
dec
repnz
push
sbb
add
push
mov
cmpsb
int
dec
mov
clc
and
andb
mov
push
lods
ja
and
adc
pop
stc
out
test
push
xor
outsb
popf
jnp
inc
adcl
in
int
je
xor
vpshuflw
jle
or
pop
scas
jmp
loopne
cmp
loopne
jne
fimuls
xchg
shll
inc
gs
and
test
or
dec
mov
jp
jecxz
dec
and
and
sbb
pop
pop
lods
add
cmp
jae,pn
mov
or
aam
xor
testl
and
rcrb
call
pop
and
and
xchg
lea
popf
add
dec
inc
mov
xchg
push
scas
xor
and
lods
mov
int
push
adc
and
xor
xor
xor
dec
push
fisubrl
and
or
jb
mov
aas
call
inc
mov
add
loope
add
rorb
mov
inc
dec
mov
inc
imul
jo
cmp
pushl
aaa
xor
xor
xor
xor
cmp
pop
int
dec
sbbb
inc
xlat
mov
sub
popa
jmp
mov
pop
pop
sbb
stc
cwtl
outsb
in
and
out
mov
ret
fstps
out
stc
xchg
ljmp
out
fistpll
and
add
scas
cmp
enter
and
dec
cmp
jle
aaa
sbb
sbb
arpl
inc
lock
xor
repz
sub
fwait
ss
pop
mov
mov
fistpl
xlat
andl
or
aad
imul
or
fnsave
fwait
sub
ds
xor
test
sti
pushl
sub
lock
mov
pop
stc
ds
and
test
push
lock
sbb
jnp
and
in
cmpsb
inc
out
aas
mov
sti
pop
shrb
stc
iret
cmpsb
lock
jge
in
push
jbe
sub
or
mov
mov
mov
clc
and
cmp
loopne
sub
mov
in
enter
mov
mov
mov
push
pop
adc
enter
int3
pop
adc
sub
dec
mov
and
movsb
fsubrl
sbb
les
lods
inc
inc
jb
push
lods
lods
ja
mov
popf
fsubr
mov
sub
in
adc
enter
adc
push
icebp
lret
and
fmull
into
sub
frstor
dec
repz
int3
cmp
and
cmp
cmp
pop
mov
pop
test
sub
hlt
cli
cmc
or
lcall
not
clc
lds
cmpsl
jns
sar
fsincos
sahf
out
nop
cmpsl
repz
std
mov
sahf
out
mov
rorb
shll
jecxz
imul
push
jns
iret
jmp
pop
ror
xor
in
lret
push
int3
in
hlt
sbb
pushf
stos
in
andl
stos
pushl
sub
sbb
icebp
pop
fwait
popa
aam
fwait
bound
in
dec
mov
pushl
popa
inc
scas
xchg
pop
dec
cli
fcmovnb
xchg
imul
call
pop
shll
pop
jmp
pushl
sbb
inc
jo
mov
aad
cltd
outsb
sti
out
call
jo
cmc
push
and
mov
dec
pop
xchg
add
cmc
or
inc
and
inc
test
jl
cmp
in
lock
add
mov
js
inc
add
dec
lcall
push
fcmove
sub
jl
inc
mov
std
lods
loopne
roll
sub
mov
jmp
aas
lds
or
jae
sbb
je
dec
adc
fs
stos
in
mov
in
mov
movsl
out
into
mov
xchg
movsb
mov
add
dec
ljmp
cmp
ds
sbb
or
push
inc
mov
or
push
dec
pop
test
scas
insl
in
sti
mov
add
dec
repnz
mov
mov
lods
nop
sub
test
xchg
adc
xchg
cwtl
jecxz
lret
imul
test
arpl
dec
mov
xchg
xchg
xchg
fcompl
std
xchg
sbb
leave
int
or
stos
jnp
sub
mov
xchg
jnp
jmp
xor
nop
mov
inc
mov
jecxz
mov
mov
dec
adc
int
sub
test
push
test
adc
out
pop
call
mov
cmp
mov
jl
fimuls
pop
cmpsl
xor
lahf
lods
cmp
dec
cld
cmpsl
daa
sbb
xchg
or
pop
shll
popa
jge,pn
xchg
sbb
movsl
into
iret
mov
cmpsl
jecxz
dec
mov
pop
rorb
imul
jle
mov
mov
xlat
pusha
push
cmpb
out
pusha
sub
in
push
js
push
insl
xchg
cmp
xor
and
xchg
add
enter
push
add
arpl
mov
sub
mov
sbb
mov
jns
sbb
mov
push
push
jb
lods
mov
pusha
test
mov
aaa
loop
arpl
fs
repz
cmc
test
add
movsl
push
sub
dec
add
fidivrl
and
mov
orb
xor
cmp
in
sub
dec
mov
mov
ja
sahf
mov
mov
xchg
dec
insb
or
rclb
cmpsb
mov
and
or
aad
inc
inc
pushf
dec
dec
in
loopne
fidivrs
inc
fsts
mov
ffree
pop
dec
jns
test
cmpsl
inc
cmpsl
adc
jecxz
pop
and
or
inc
mov
shl
pop
mov
pop
push
aad
inc
shll
cmpsb
inc
fldt
insb
mov
mov
jns
mov
mov
sub
lods
or
add
fdivrl
fwait
in
lods
aam
dec
fisttpl
mov
dec
es
pop
call
adcl
inc
pop
scas
mov
mov
jo
pop
dec
cmpsl
mov
and
adc
mov
dec
movsb
xlat
arpl
insl
mov
sbb
lods
cli
mov
addr16
pop
fldcw
out
xchg
flds
dec
cmpsb
sub
in
inc
movb
jns
inc
cs
xchg
mov
mov
popa
sub
lods
sub
mov
pusha
xchg
mov
aad
xchg
sub
sub
movsb
jno
dec
mov
or
test
fcmovbe
mov
mov
insl
mov
aad
loop
mov
push
sbb
cli
outsb
or
push
pop
and
jmp
std
mov
mov
cmp
sub
dec
test
int3
pop
dec
and
push
push
lods
aad
mov
std
mov
icebp
test
popa
inc
mov
movsb
stos
inc
imul
dec
stos
xor
push
outsl
or
cld
cs
mov
lret
test
or
outsb
and
mov
mov
push
cmp
inc
mov
adc
push
mov
sub
in
pop
pushf
or
in
pop
sub
jge
sahf
sub
xchg
aas
pop
roll
pop
ficomps
outsl
pusha
mov
mov
int3
dec
sbbb
add
ss
mov
adc
jns
clc
fists
xor
or
push
sti
lea
jb
cmp
arpl
daa
aas
sub
punpcklwd
mov
mov
mov
xchg
jb
push
stc
imul
movsb
lcall
rcl
test
jns
popf
lret
and
xchg
jnp
mov
adc
cmpsl
cmpsb
mov
in
shll
stos
imul
scas
and
insb
orb
mov
icebp
mov
jo
and
sub
push
leave
push
ret
push
mov
stos
in
test
adc
mov
and
jmp
test
mov
in
stos
in
lcall
gs
dec
sti
mov
push
shlb
and
cmpsb
cmp
iret
push
sub
and
pushf
sub
mov
dec
mov
mov
mov
sub
mov
sub
in
and
lret
js
add
sub
mov
cmpsb
adc
lret
test
push
dec
mov
push
jb
cmp
sbbb
dec
loopne
jb
and
jnp
mov
out
push
push
movsb
xchg
mov
test
les
add
sub
push
fadds
enter
mov
scas
and
mov
lret
push
testb
mov
shll
sub
push
fcomps
std
scas
xchg
push
dec
fistl
or
clc
clc
dec
test
cmp
shlb
sbb
cmp
push
xor
mov
adc
xor
loopne
das
inc
mov
push
or
and
cmp
out
dec
mov
and
push
mov
sbb
push
loop
push
adc
and
sbb
stos
sub
adcl
push
pop
adc
stos
movsb
mov
les
shlb
orb
and
addb
enter
scas
pop
and
inc
ja
mov
roll
dec
xor
pusha
add
push
pusha
mov
test
mov
rorl
inc
fstl
adc
out
pop
loopne
je
add
or
push
mov
fistpl
mov
fisttpl
sub
dec
scas
popa
add
shll
dec
sub
jbe
mov
das
add
lods
lret
mov
xor
sub
movsl
cmp
andb
push
add
and
or
pop
imul
xor
ss
xor
dec
shr
xor
add
fstl
fistpll
inc
push
inc
js
inc
push
jae
dec
inc
inc
movsl
ret
push
into
or
mov
lods
push
mov
js
sbbb
sbb
xor
in
sbb
test
mov
add
adc
pop
out
int
rolb
test
xchg
rorb
add
mov
jo
pop
add
push
outsb
adc
sbb
cmp
iret
or
imul
mov
sub
adc
test
sbb
jbe
loopne
adc
cmp
loopne
insl
push
test
pop
push
sbb
push
fisubl
sti
add
pop
sub
dec
cmpsb
outsb
xor
push
emms
dec
and
mov
inc
and
adc
cmp
stos
push
mov
xchg
sub
mov
push
pop
push
mov
pop
rcll
pop
or
in
push
inc
jne
push
fwait
cwtl
imul
pop
sub
dec
je
imul
mov
data16
cwtl
call
jg
js
insl
xor
ss
outsb
arpl
cmp
sub
ss
lcall
test
lea
aam
mov
mov
bound
pop
mov
cmp
adc
push
inc
xor
cs
pushf
or
or
mov
or
dec
push
or
pop
jb
add
lock
push
in
add
add
adc
imul
inc
add
es
or
push
jo
shll
call
adc
lods
mov
outsl
jno
adc
nop
pushf
rolb
adc
mov
imul
inc
dec
inc
xor
subl
pop
test
cmp
push
or
cmp
sarl
dec
bound
xchg
add
popa
push
or
pusha
into
fstpl
push
fmul
inc
cmpsb
mov
ret
rcl
and
inc
mov
or
add
test
xor
push
movsl
test
enter
push
jo
and
xor
push
mov
shll
and
sbb
mov
stos
loopne
and
xchg
lcall
add
mov
mov
dec
arpl
adc
and
xorl
add
or
pop
leave
and
push
jmp
iret
fildl
fstl
outsl
jle
fisttpll
out
fists
mov
add
scas
xchg
add
mov
ljmp
idiv
pop
lahf
iret
adc
mov
insl
testl
pop
int
mov
jmp
sti
inc
out
aas
in
lahf
fistpll
dec
fucom
fistl
out
dec
or
iret
and
out
jb
out
std
lahf
jae
adc
xchg
paddsw
ja
xlat
pop
sti
cmp
mov
lahf
fistl
jmp
pushl
mov
neg
jae
jmp
lret
jmp
scas
xor
sti
sub
incl
scas
jmp
sar
xchg
iret
out
mov
jnp
aaa
in
xchg
int
scas
jb
int
pop
xchg
iret
in
int
sbb
rclb
stos
iret
mov
mov
cmp
pop
imul
xlat
ret
shlb
or
dec
ret
adc
mov
std
mov
into
rorb
cmp
jnp
ljmp
lcall
inc
xchg
pop
xorb
mov
addr16
mov
fnsave
out
mov
lahf
lahf
and
in
mov
xor
and
xchg
pop
cmpsl
stos
lahf
pop
fildll
loope
or
pop
ret
and
push
or
ret
out
lahf
divl
js
mov
cmp
cmp
xchg
add
pop
jnp
int
inc
aas
dec
ror
fidivs
pusha
xchg
add
out
dec
push
mov
jecxz
or
jmp
cmp
push
pop
xchg
out
mov
ja
jg
xchg
mov
fisttps
daa
scas
xor
push
cmpl
rcll
divl
out
sbb
cmp
fildl
iret
xor
mov
mov
in
std
das
dec
cmpl
imul
ljmp
icebp
lcall
out
cmp
fninit
jae
out
sbb
jae
sti
das
pop
divl
pushf
sahf
mov
lret
add
mov
jnp
xchg
adc
or
cmp
or
adc
mov
mov
fucomip
push
xlat
pop
xlat
xchg
in
fcompl
fdivrl
out
xor
out
sti
pop
inc
xchg
pop
pop
add
xchg
cmpsl
aaa
inc
out
idiv
push
sti
setns
cmp
inc
cmp
jo
push
mov
jae
out
xchg
dec
dec
xor
push
orl
adc
sbb
cmpl
mov
cmp
mov
pop
sub
inc
mov
xor
ljmp
cld
bound
pop
sbb
pop
loopne
ss
repz
xchg
pop
lcall
cld
addr16
test
mov
enter
call
push
adc
mov
or
cltd
cli
dec
add
xor
ret
fwait
mov
xchg
roll
fdivrl
js
mov
mov
das
lcall
mov
and
not
pop
pop
test
mov
fnstcw
push
inc
daa
fstpt
add
fisttpl
fwait
cltd
xchg
dec
mov
jnp
cmp
push
push
icebp
lock
add
aad
pop
fsubrs
mov
dec
add
in
xor
call
jo
push
pusha
pop
sub
cli
add
pop
sub
pushf
and
andb
inc
jae
and
pusha
icebp
xchg
add
daa
pushf
icebp
into
mov
cmpb
popa
jp
add
clc
add
jl
push
add
add
insb
gs
jae
dec
jne
gs
outsl
mov
jo
jb
push
je
imul
je
adc
je
inc
insl
fistps
sub
push
imul
das
insl
or
and
inc
jae
out
outsl
in
cs
imul
insb
je
inc
jns
adc
mov
add
arpl
push
arpl
outsl
outsb
out
mov
ja
fs
outsl
push
cmp
aaa
jae
add
popa
push
outsl
push
xchg
xchg
fwait
std
jbe
insb
outsl
mov
popa
outsb
fs
jge
insl
insb
xchg
jb
mov
jb
outsb
fsubrs
jae
pusha
gs
push
sub
sbb
imul
adc
aas
fwait
in
lcall
jo
adc
mov
jnp
xchg
gs
insl
inc
pand
shlb
push
pop
fmuls
xchg
ds
gs
fwait
jnp
and
push
popa
imul
mov
cmp
ret
nop
mov
stos
ss
fcmovnbe
xor
sbb
bound
aaa
adc
mov
pop
dec
dec
imul
popa
rclb
je
pop
inc
insb
mov
add
sbb
xor
loopne
jle
add
popa
out
insl
xchg
gs
ret
clc
mov
mov
fdiv
outsb
adc
xor
imul
xchg
notb
adc
je
bound
jo
outsb
imul
push
fwait
jnp
inc
mov
dec
fs
pop
jbe
inc
jne
and
loopne
jo
stc
cwtl
fldt
inc
jbe
and
int
insb
xchg
xor
imul
xchg
into
mov
pop
adc
sub
insb
sbb
ja
push
pop
je
jne
dec
lock
sti
shlb
sub
and
jo
mov
push
mov
or
or
sub
jb
daa
ja
arpl
adc
inc
push
das
dec
mov
pop
je
adc
sbbb
popa
mov
inc
mov
out
sbb
dec
insl
xchg
push
add
in
arpl
pop
inc
shlb
insl
data16
pop
mov
int
lea
jmp
aad
jno
mulb
or
leave
pop
insb
mov
jo
adc
mov
cmp
xor
imul
pop
aam
sbb
int3
insl
leave
frstor
jns
mov
imul
fndisi(8087
cmpsb
jo
je
push
or
jp
xchg
adc
mov
jle
push
bound
pop
sbb
imul
sbb
test
xor
sahf
jae
jbe
fadds
inc
vmwrite
dec
jae
rcrl
rcll
pop
test
push
cmp
jo
data16
dec
add
test
inc
jne
int
dec
mov
rcl
adc
or
inc
pop
mov
xchg
das
or
fwait
shll
sbb
lds
and
jle
adc
mov
push
pusha
sub
inc
insb
test
fwait
in
dec
add
dec
xorl
inc
or
mov
xchg
xlat
jns
inc
or
scas
aas
test
sbb
ja
out
inc
jbe
mov
xchg
test
data16
mov
inc
fs
pop
xchg
push
out
push
jb
lea
push
outsl
fs
sbb
xlat
sub
or
inc
arpl
in
pop
int
or
sub
mov
sub
fidivs
in
inc
mov
loope
rorb
push
jb
inc
mov
arpl
push
outsb
test
jl
fs
dec
aas
push
adc
xor
push
cwtl
jne
outsb
in
adcb
inc
mov
aas
outsl
add
add
mov
xchg
add
inc
jo
pop
jg
mov
inc
jp
push
inc
add
adc
push
loopne
sidtl
add
add
mov
cmp
ds
adc
inc
add
jne
aaa
or
push
add
ja
push
xor
cmp
das
or
lds
push
mov
mov
xor
pop
push
add
iret
divb
bound
push
jo
push
or
inc
inc
out
cs
adc
jmp
arpl
pusha
sub
add
pop
xor
aam
iret
jbe
jb,pn
iret
or
gs
inc
jae
dec
rcrl
or
clc
negl
lods
fs
dec
js
and
add
add
add
add
and
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
sbb
add
add
mov
add
add
add
add
js
add
add
add
sbb
add
mov
add
call
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
addb
add
add
add
aas
add
add
add
add
add
add
add
fadds
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
js
imul
add
add
outsl
add
je
ja
popa
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
js
imul
add
add
jae
push
ja
outsl
add
jns
and
push
add
popa
add
insl
add
js
jb
add
add
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
and
inc
add
je
inc
add
data16
outsb
add
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
cmp
xor
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
add
and
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
js
imul
add
add
outsl
add
je
ja
popa
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
js
imul
add
add
js
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
js
imul
add
add
jae
push
ja
outsl
add
jns
and
push
add
popa
add
insl
add
js
jb
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
and
push
add
inc
add
add
dec
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
movsb
add
movsl
movsb
add
mov
add
movsb
add
mov
movsb
add
fisubl
add
movsb
add
push
movsl
add
add
add
adc
add
add
add
push
movsl
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
je
inc
insl
jo
push
add
dec
jae
outsb
jne
