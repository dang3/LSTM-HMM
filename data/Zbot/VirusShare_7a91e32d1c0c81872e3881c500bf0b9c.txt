push
mov
sub
movl
movl
mov
add
add
mov
call
movl
cmpl
jg
push
call
push
call
movl
jmp
mov
add
mov
cmpl
jge
call
movl
movl
mov
or
mov
sub
mov
movl
lea
mov
mov
mov
sub
add
mov
jmp
jmp
call
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
movl
mov
and
mov
sub
imul
mov
cmpl
jg
mov
and
imul
imul
mov
movl
lea
mov
mov
mov
and
add
imul
mov
mov
and
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
movl
mov
cmp
je
movl
mov
add
add
mov
jmp
call
call
movl
lea
mov
lea
mov
movl
mov
mov
or
mov
add
cltd
idiv
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
push
mov
push
push
call
add
cmpl
jne
jmp
movl
lea
mov
mov
add
mov
cltd
idiv
mov
lea
mov
mov
mov
and
add
add
mov
jmp
push
push
call
mov
cmpl
jne
movl
mov
add
mov
cltd
idiv
add
mov
call
movl
lea
mov
mov
mov
and
mov
add
cltd
idiv
mov
sub
mov
movl
mov
or
mov
sub
mov
sub
mov
movl
cmpl
jl
cmpl
je
movl
mov
push
push
call
add
movl
mov
imul
mov
movl
mov
sub
mov
sub
mov
jmp
movl
lea
mov
mov
mov
or
add
mov
sub
mov
cmpl
jl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
mov
or
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
mov
add
mov
cltd
idiv
mov
movl
mov
cmp
jg
call
movl
movl
mov
add
mov
movl
movl
mov
or
mov
add
cltd
idiv
imul
mov
movl
cmpl
je
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
add
mov
push
call
jmp
movl
movl
movl
mov
or
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
add
add
mov
lea
mov
mov
mov
imul
imul
mov
jmp
movl
cmpl
je
lea
push
call
movl
lea
mov
lea
mov
mov
mov
mov
imul
imul
mov
jmp
movl
mov
cmp
jne
mov
and
imul
mov
push
call
jmp
movl
mov
and
mov
add
cltd
idiv
mov
mov
add
mov
cltd
idiv
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
lea
push
call
call
jmp
movl
movl
lea
mov
mov
mov
imul
mov
jmp
lea
push
call
mov
and
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
mov
jmp
movl
movl
mov
and
mov
add
cltd
idiv
mov
movl
movl
mov
sub
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
add
mov
cltd
idiv
imul
mov
jmp
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
imul
mov
movl
movl
mov
imul
mov
sub
mov
call
movl
mov
imul
imul
mov
call
call
movl
cmpl
jg
mov
sub
mov
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
imul
mov
movl
movl
mov
sub
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
movl
movl
lea
mov
mov
mov
imul
mov
jmp
movl
movl
mov
add
mov
cltd
idiv
mov
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
or
imul
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
movl
lea
mov
mov
mov
sub
mov
jmp
movl
mov
or
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
or
mov
or
sub
mov
movl
mov
add
mov
cltd
idiv
mov
movl
cmpl
jne
push
call
movl
lea
mov
lea
mov
mov
mov
and
mov
mov
add
mov
sub
mov
movl
mov
and
mov
or
add
add
mov
lea
mov
mov
mov
and
add
add
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
je
movl
mov
add
mov
cltd
idiv
mov
movl
mov
add
mov
push
call
jmp
movl
movl
mov
imul
mov
movl
mov
add
mov
sub
mov
mov
cmp
jl
movl
movl
mov
sub
mov
push
call
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
movl
movl
lea
mov
mov
mov
add
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
call
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
push
call
movl
movl
mov
sub
imul
mov
mov
add
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
and
add
imul
mov
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
and
mov
mov
sub
mov
push
mov
push
mov
push
call
add
mov
imul
add
mov
push
call
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
imul
mov
push
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
imul
mov
push
call
push
call
jmp
movl
movl
mov
and
imul
mov
sub
mov
movl
lea
mov
mov
mov
and
add
add
mov
jmp
push
mov
push
call
mov
movl
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
sub
add
mov
jmp
push
push
push
push
call
mov
movl
movl
mov
add
add
mov
cmpl
jae
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jg
movl
movl
mov
imul
mov
sub
mov
mov
add
mov
cltd
idiv
imul
mov
jmp
lea
mov
mov
or
mov
mov
add
add
mov
mov
and
mov
mov
add
add
mov
jmp
mov
mov
xor
mov
mov
mov
movl
cmpl
jg
movl
lea
mov
mov
mov
and
mov
sub
imul
mov
jmp
movl
lea
mov
mov
mov
and
add
mov
cmpl
jl
mov
imul
imul
mov
movl
mov
and
imul
add
mov
jmp
mov
sub
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
add
mov
cltd
idiv
mov
mov
and
add
imul
mov
jmp
mov
add
mov
jmp
movl
movl
mov
and
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
and
mov
mov
add
imul
mov
jmp
push
call
mov
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
imul
mov
movl
mov
sub
mov
sub
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
movl
cmpl
je
call
movl
jmp
mov
add
mov
cmpl
jge
call
movl
mov
or
add
mov
jmp
cmpl
jne
movl
movl
lea
mov
lea
mov
movl
mov
mov
or
mov
sub
mov
sub
mov
movl
mov
sub
add
mov
jmp
movl
movl
mov
and
mov
add
cltd
idiv
mov
jmp
movl
movl
movl
mov
and
mov
and
sub
mov
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
mov
push
mov
push
mov
push
call
add
movl
mov
cmp
jl
movl
lea
mov
mov
and
mov
mov
sub
imul
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
jmp
lea
push
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
imul
mov
movl
movl
lea
mov
lea
mov
movl
movl
mov
mov
or
mov
add
cltd
idiv
mov
mov
and
sub
imul
mov
call
lea
mov
mov
and
mov
mov
sub
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
lea
mov
mov
mov
or
mov
mov
and
sub
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
mov
add
cltd
idiv
imul
mov
lea
push
call
call
movl
cmpl
jg
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
movl
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
mov
add
mov
movl
lea
mov
movl
mov
and
mov
add
cltd
idiv
mov
sub
mov
call
mov
sub
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
and
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
call
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
movl
mov
and
mov
add
cltd
idiv
add
mov
movl
lea
mov
mov
and
mov
mov
or
imul
imul
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
imul
mov
movl
movl
lea
mov
lea
mov
mov
mov
or
mov
add
cltd
idiv
add
mov
mov
add
mov
cltd
idiv
mov
mov
or
add
imul
mov
mov
or
mov
and
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
mov
lea
mov
mov
mov
and
imul
mov
call
movl
cmpl
je
movl
mov
cmp
je
mov
imul
imul
mov
push
call
call
movl
mov
cmp
jne
lea
mov
mov
mov
sub
add
mov
call
movl
lea
mov
mov
add
mov
cltd
idiv
mov
jmp
mov
and
sub
add
mov
mov
imul
mov
sub
mov
jmp
lea
mov
mov
mov
sub
add
mov
cmpl
je
call
jmp
call
mov
mov
lea
mov
mov
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
mov
imul
mov
sub
mov
call
call
call
movl
mov
add
mov
cltd
idiv
mov
sub
mov
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
and
imul
mov
sub
mov
mov
push
mov
push
call
add
xor
je
movl
lea
mov
mov
mov
add
mov
movl
cmpl
jne
lea
push
call
cmpl
jg
mov
add
mov
cltd
idiv
imul
mov
call
jmp
mov
or
sub
imul
mov
movl
lea
mov
mov
mov
imul
mov
sub
mov
cmpl
jne
movl
mov
add
mov
cltd
idiv
mov
sub
mov
mov
add
mov
sub
mov
jmp
movl
mov
imul
imul
mov
mov
and
imul
mov
sub
mov
call
push
call
movl
movl
mov
cmp
jl
mov
add
mov
cltd
idiv
mov
sub
mov
lea
mov
lea
mov
movl
mov
mov
and
mov
sub
add
mov
jmp
push
call
add
mov
add
mov
cltd
idiv
add
mov
mov
push
mov
push
call
add
call
movl
mov
and
add
add
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
and
mov
sub
mov
movl
cmpl
jl
call
push
call
lea
push
call
movl
mov
add
mov
cltd
idiv
imul
mov
mov
and
mov
add
cltd
idiv
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
sub
mov
movl
movl
mov
and
mov
add
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
mov
mov
add
add
mov
call
jmp
cmpl
je
call
jmp
movl
mov
sub
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
add
mov
jmp
movl
movl
mov
or
mov
add
cltd
idiv
mov
lea
mov
mov
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
call
movl
cmpl
jl
movl
movl
mov
imul
mov
push
call
lea
mov
mov
mov
imul
mov
sub
mov
cmpl
je
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
call
movl
lea
mov
mov
add
mov
cltd
idiv
mov
jmp
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
call
movl
mov
imul
add
mov
jmp
movl
movl
mov
sub
mov
sub
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
push
call
jmp
movl
movl
lea
mov
mov
mov
sub
imul
mov
lea
push
call
call
call
call
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
sub
mov
movl
movl
mov
or
add
mov
jmp
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
call
movl
lea
mov
mov
mov
sub
mov
movl
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
movl
movl
mov
or
imul
mov
movl
cmpl
jg
movl
mov
and
mov
add
cltd
idiv
add
mov
call
jmp
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
call
mov
sub
mov
lea
mov
mov
or
mov
mov
or
add
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
mov
cmp
je
movl
movl
mov
imul
mov
movl
movl
mov
and
mov
add
cltd
idiv
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jl
movl
mov
and
imul
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
mov
sub
mov
sub
mov
call
call
jmp
movl
lea
mov
mov
mov
sub
add
mov
push
call
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
pop
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
cmp
jne
orl
mov
mov
pop
pop
pop
leave
ret
mov
cmpw
jne
add
mov
mov
cmp
je
cmp
jne
cmpw
jne
add
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpw
jbe
add
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
int3
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
jmp
jmp
jmp
jmp
call
inc
add
adc
add
inc
add
xor
add
add
push
inc
add
inc
add
mov
add
add
add
inc
add
addb
lods
inc
add
mov
add
je
add
lret
add
inc
add
out
add
repnz
add
ret
add
inc
add
es
add
xor
add
inc
inc
add
inc
add
add
add
mov
add
add
add
add
dec
dec
inc
inc
push
dec
push
and
and
and
add
add
pop
dec
dec
inc
inc
pop
inc
dec
push
inc
dec
dec
dec
inc
inc
push
inc
inc
pop
inc
dec
push
inc
dec
dec
inc
pop
inc
inc
dec
dec
inc
pop
inc
dec
dec
inc
add
js
xor
pop
dec
dec
dec
dec
pop
xor
dec
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
arpl
dec
jne
cmp
and
add
add
add
call
xor
jo
add
jp
add
add
add
inc
add
cwtl
inc
add
push
inc
add
movsb
inc
add
jo
add
cwtl
inc
add
pop
inc
add
sub
add
inc
add
cld
inc
add
adc
add
inc
add
xor
add
add
push
inc
add
inc
add
mov
add
add
add
inc
add
addb
lods
inc
add
mov
add
je
add
lret
add
inc
add
out
add
repnz
add
ret
add
inc
add
es
add
xor
add
inc
inc
add
inc
add
add
add
mov
add
add
add
add
fiaddl
dec
jae
bound
addr16
jb
jae
outsb
je
pop
add
je
jb
arpl
jae
gs
imul
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
je
add
push
gs
imul
fiadds
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jb
arpl
fs
jae
add
aas
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
je
inc
gs
jb
jae
add
push
dec
dec
push
inc
push
dec
cs
insb
add
imul
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
add
arpl
insb
outsb
add
addr16
popa
imul
add
add
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
dec
push
push
inc
push
push
cs
insb
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
imul
gs
je
jb
jne
dec
outsb
outsw
push
push
leave
outsl
lea
mov
push
adc
push
cmp
add
and
aam
pop
sbb
push
clc
inc
daa
xchg
mov
adc
lds
jno
lcall
push
add
pop
sub
into
pop
popa
jnp,pn
push
loopne
cmp
add
mov
pushf
inc
and
mov
dec
or
dec
adcl
xchg
bound
cmpsl
dec
push
or
das
mov
and
adc
mov
mov
add
or
mov
enter
and
mov
jns
hlt
jno
cmp
jg
or
fcom
jae
xor
add
add
mov
jo
mov
outsb
add
inc
or
push
xchg
fisttpll
adcl
data16
shrb
cmpsb
mov
int3
and
cmpsl
lret
jbe
dec
mov
inc
sub
pusha
lods
xor
lcall
xor
jp
cmp
cmp
fdivl
inc
outsl
or
sub
push
cmc
sbb
imul
push
jno
mov
movsb
outsl
imul
mov
in
in
jo
push
icebp
int
repnz
out
cmc
std
xor
arpl
mov
sbb
loopne
cs
in
inc
sbb
in
into
pop
mov
mov
xor
inc
jg
lret
jp
ljmp
enter
movsb
nop
adc
mov
adc
in
insb
in
cmpsl
xor
add
mov
xorl
or
dec
sub
jne
jb
stos
ljmp
jb
mov
pop
movsb
arpl
cmp
lods
cmpsl
fdivrl
jbe
xchg
iret
mov
add
gs
fs
sbb
sub
inc
mov
sbb
lret
xorl
adc
xor
call
adc
lcall
push
mov
imul
cmpsb
scas
fwait
clc
cmpsb
sub
fs
out
pop
jnp
jg
and
mov
mov
push
fistl
dec
cmpsl
addr16
insb
push
into
sub
push
and
fst
cmp
pop
jmp
sbb
or
jns
pop
and
push
cmpsb
insb
sbb
loopne
or
add
pop
jne
add
sbb
mov
data16
lcall
jne
or
xchg
or
xchg
lcall
ficoml
push
ret
push
outsl
addr16
insl
xchg
outsb
pop
cld
push
out
iret
jne
mov
jle
mov
outsl
fs
or
mov
and
cmc
push
xchg
test
xchg
lea
sub
xchg
mov
sbb
and
mov
stos
dec
xor
repz
arpl
dec
sub
pop
cmpsb
push
inc
mov
add
push
test
jo
insb
mov
dec
mov
sub
xor
xor
jo
nop
decb
xor
or
add
rclb
mov
mov
push
andb
inc
out
bound
shlb
jmp
push
movl
add
ljmp
rorl
cmp
push
inc
adc
paddb
mov
js
push
jae
jb
stos
dec
outsl
arpl
ret
fnstsw
cmp
je
out
add
pusha
and
fs
mov
push
test
punpckhdq
xchg
inc
pop
inc
pop
cmpsl
stos
ds
xor
or
sub
and
data16
in
inc
inc
clc
mov
and
mov
sub
inc
adc
push
cmp
push
inc
add
fs
mov
rorb
adc
rclb
inc
and
pop
and
data16
loopne
and
and
xchg
cmp
popf
push
mov
and
sti
pop
xchg
mov
stos
adc
enter
and
push
cmp
pushl
pop
and
push
xchg
daa
add
sbb
sti
add
stos
xor
and
adc
sti
je
bound
stos
stos
adc
fmull
mov
adc
adc
out
xor
iret
push
xchg
adc
decb
push
out
and
or
mov
mov
and
test
push
ljmp
dec
xlat
mov
and
data16
xchg
repnz
loop
sarb
out
int3
mov
mov
outsb
pop
mov
xor
xchg
add
sarl
mov
xor
push
xchg
lea
sub
int3
popa
pop
sub
mov
xor
or
xor
push
jecxz
sbb
rolb
adc
cmc
rclb
gs
dec
pop
mov
and
add
notl
adc
mov
xchg
insl
add
inc
inc
es
pop
movsl
sub
mov
push
xchg
leave
inc
lds
add
fs
and
mov
mov
clts
mov
and
sub
cmp
adc
out
and
and
push
cwtl
dec
or
pop
xor
loop
jmp
gs
sub
adc
push
pushf
dec
cmp
cmp
cmp
addw
dec
mov
enter
and
push
and
xchg
push
out
and
adc
push
es
mov
adc
jo
sbb
ffreep
adc
divl
lock
add
sub
mov
pushf
adc
xchg
into
push
add
sub
mov
mov
psubusw
pushf
shrl
cs
add
dec
cltd
mov
or
ss
mov
inc
gs
lret
sub
jo
out
add
imul
je
ret
inc
insl
imul
push
lret
cmp
jns
xchg
and
pop
imul
sbb
in
push
dec
inc
popf
insl
lahf
xor
nop
mov
add
es
mov
push
imull
xor
dec
in
sti
out
pop
adc
scas
sbb
test
loopne
sub
jo
fs
mov
push
popa
addr16
sub
dec
and
add
loop
insb
or
fdivrl
sub
bound
pusha
fimull
repz
sub
sbb
jb
cmp
sub
les
out
and
ret
pop
sub
adc
xor
cltd
enter
subb
jle
fwait
cmpsl
es
jb
xor
cli
mov
mov
push
or
cmp
lahf
sub
jb
push
sub
push
xchg
in
xor
dec
notb
mov
lahf
sbb
mov
outsl
sub
cmp
adc
es
adc
jp
fisubrl
sbb
mov
xchg
xchg
arpl
mov
xchg
push
mov
lds
pop
mov
jl
mov
test
adc
leave
sub
inc
mov
mov
push
pop
fs
paddsb
jno
adcl
notb
cmpsb
and
add
cltd
xchg
in
sbbl
cmp
xchg
inc
inc
add
xchg
cmpsb
or
stos
push
leave
sub
shll
mov
add
loop
iret
out
enter
test
add
lods
adc
sbb
push
push
inc
cmpsl
push
icebp
sbb
push
sub
idivl
cmp
and
sbb
sbb
sub
xchg
cmpsl
lret
xor
push
adc
pop
rolb
repz
popa
adc
test
orl
test
sub
inc
mov
aad
sbb
fwait
xor
outsl
dec
or
stc
dec
fistps
mov
add
add
ret
sub
cmpsl
sub
pop
repz
sub
stc
ljmp
scas
dec
sbb
js
imul
fs
aaa
cld
sub
mov
pop
xchg
sbbl
jmp
lcall
je
out
push
or
sub
lret
inc
repnz
dec
out
cld
sub
inc
ss
cmpsb
or
sub
push
sub
lcall
stos
invd
repnz
pop
fwait
es
xchg
add
daa
add
xchg
push
sub
subl
lahf
repnz
sgdtl
cli
fstps
sub
cld
sub
lahf
sbb
xor
or
sbb
cli
and
push
mov
ds
ljmp
xor
push
or
fstpt
xchg
dec
mov
cmp
or
pushf
inc
pop
push
inc
mov
ds
mov
in
push
mov
popa
or
das
decl
fcomps
fisubrl
clc
sbb
cli
repz
inc
sub
and
popa
ds
mov
cmpsl
add
sbb
or
push
cmp
dec
inc
or
and
add
sub
add
xor
adc
xor
add
scas
aas
push
pop
xchg
add
add
or
sub
or
xor
cmp
push
xchg
icebp
or
stos
xor
and
add
mov
or
dec
dec
in
push
and
sub
push
adc
mov
pop
out
rorb
mov
pop
and
fucom
pop
leave
mov
cmpsb
push
aas
movsb
sub
push
push
xchg
test
jns
cmp
fildll
stc
push
jb
or
in
scas
push
and
inc
and
mov
hlt
mov
xchg
add
repnz
cld
mov
and
push
mov
jle
mov
lods
push
xchg
or
push
out
mov
and
xor
movsb
push
enter
jmp
mov
sub
add
cmpsl
add
stos
pop
inc
lret
fstpt
pop
fdivrl
cmp
test
mov
dec
jecxz
ja
cmc
daa
dec
sbbb
pusha
out
add
xchg
out
out
les
dec
push
repz
lret
adc
jg
into
loopne
xor
xchg
pop
push
jl
cmpsl
int3
mov
mov
outsl
arpl
out
sub
xor
xor
pop
jge
add
gs
call
and
mov
sub
and
test
mov
data16
or
shlb
lods
add
push
sbbb
add
int
jne
lret
add
nop
add
mov
sbb
add
xchg
roll
insl
add
inc
or
xchg
jnp
imul
in
and
dec
jmp
add
rorb
push
mov
push
cmpsl
mov
and
in
sbb
jecxz
push
mov
int
gs
adc
mov
ds
jns
mov
lock
mov
dec
add
xchg
mov
jne
push
push
and
ss
cmpsb
push
je
stos
pusha
and
les
add
mov
fwait
inc
xchg
cmc
rorb
test
or
icebp
ljmp
imul
loopne
jnp
sub
sbb
mulb
imulb
outsb
hlt
mov
and
insb
and
push
shlb
les
pop
arpl
fsts
push
pop
nop
cmp
pop
into
push
add
push
xchg
xor
and
mov
arpl
mov
pop
mov
pcmpgtd
imul
lret
jae
je
negb
pop
or
fwait
mov
push
addl
mov
mov
lahf
addr16
pop
sti
dec
aas
jmp
xor
push
jne
push
adc
push
jecxz
das
stos
loope
lods
cli
push
pop
rcrb
dec
enter
xor
add
or
sahf
mov
mov
or
xchg
std
imulb
dec
pop
sub
addl
mov
add
pop
lret
mov
adc
cwtl
cmp
mov
std
insb
push
fimuls
pusha
and
sub
addr16
add
mov
add
outsb
ret
xor
jmp
call
imul
ja
mov
sahf
jle
xchg
pop
icebp
cwtl
and
push
mov
jno
mov
cmp
repz
scas
pushf
jns
in
mov
jne
idivb
sub
inc
mov
lock
insl
lock
mov
push
shlb
mov
stos
add
inc
les
add
sbbl
cmp
call
repz
sbb
cld
aas
test
add
adc
xor
les
add
movsl
daa
ja
mov
mov
and
daa
shl
jbe
iret
xchg
popf
sti
mov
stos
add
enter
imul
mov
mov
add
mov
and
test
fs
fwait
or
scas
mov
arpl
cmpsb
fucomip
stos
inc
ror
jg
jmp
add
lds
movl
add
in
xchg
fstpt
enter
dec
jae
call
test
add
cmp
push
mov
in
mov
pusha
sub
dec
mov
sbb
dec
in
xchg
inc
sub
push
rclb
add
in
lds
and
test
fldenv
jo
clc
sub
stc
add
stos
out
cmpsb
frstor
lods
jge
test
ror
add
scas
stos
add
pop
lcall
sahf
mov
xchg
or
cmp
dec
jmp
cmpb
stos
lcall
pusha
pop
inc
lods
imul
aad
pop
mov
shlb
push
and
sub
inc
movsb
add
outsb
outsb
es
cmpsb
movb
mov
add
mov
push
cmpsl
and
xchg
popl
xor
loop
mov
aaa
pop
mov
stos
sbb
jns
lret
jg
mov
jge
or
push
push
test
fidivrl
add
or
std
es
and
and
cmc
repz
add
mov
fdivr
mov
xchg
roll
test
xor
and
les
adc
cmpsl
add
lcall
and
jge
cmp
add
mov
push
ljmp
xor
cmp
or
dec
dec
add
es
and
jl
xchg
push
mov
in
jb
mov
pop
ja
cld
adc
and
fsts
sbb
in
push
fsubrl
imul
jmp
xor
int
sub
inc
add
xor
jnp
push
scas
pop
jge
lret
cmp
dec
cli
sbb
lock
jo
les
cmp
mov
and
inc
outsb
xor
ret
dec
mov
or
out
jb
in
xor
push
std
adc
les
lods
subl
je
xor
sbb
clc
and
movsl
xchg
jnp
out
rolb
cli
dec
rcll
pop
fisttpll
push
ret
jcxz
add
jmp
xor
sbb
adc
cli
push
mov
or
xsaveopt
andb
jmp
fsts
push
adc
daa
jno
add
hlt
sub
mov
repnz
xchg
and
ret
test
push
mov
adc
inc
dec
lods
pop
and
jo
xchg
inc
xadd
cmpl
roll
mov
pop
pushl
jo
js
insb
or
and
inc
jge
cmp
scas
int
test
pop
sub
inc
pop
sub
gs
leave
xor
mov
test
mov
cmp
push
xchg
iret
arpl
mov
cmp
push
dec
or
fmul
add
movsb
int3
out
adc
bound
mov
dec
test
add
lret
cmp
push
or
xor
inc
add
xchg
sub
lret
sahf
xor
cmp
push
sub
jle
jae
test
mov
lcall
xchg
add
mov
adc
xor
mov
mov
je
mov
mov
aaa
xlat
push
arpl
add
add
fwait
and
leave
or
loopne
in
push
sub
cmovg
out
inc
leave
pop
ljmp
add
rcrb
out
push
add
shll
icebp
loop
ds
and
stos
sbb
fcmovnbe
repz
movl
scas
sbb
gs
add
repnz
dec
add
movsb
push
clc
push
bound
or
xchg
scas
pop
add
mov
mov
int3
mov
lret
fisubl
or
pusha
je
mov
sti
cmp
loopne
daa
andb
scas
inc
add
xlat
push
or
add
nop
mov
add
adc
and
fisttpl
and
jl
push
out
lret
adc
add
jge
addb
test
fdivs
sti
popa
stos
adc
imul
jmp
or
add
mov
add
leave
xor
shrl
enter
push
adc
clc
pop
addr16
out
mov
xor
jbe
cmp
ret
add
shl
and
jp
mov
sub
out
push
sub
scas
jmp
scas
add
dec
inc
push
sub
mov
aam
les
sbb
sahf
push
and
lds
xchg
adc
popa
push
jb
cs
sbb
inc
testb
add
insl
and
stos
mov
decb
rcr
inc
and
or
lahf
xorb
jg
mov
lret
arpl
sbb
push
mov
inc
and
sbb
js
jecxz
hlt
sub
insl
xchg
xchg
jmp
imul
sub
out
andl
mov
aas
dec
aas
popl
add
xchg
hlt
leave
pop
push
into
or
cltd
mov
fsubs
inc
xor
roll
fstps
cmc
cmp
cmp
mov
cli
leave
scas
je
insl
mov
xor
add
xchg
push
and
je
dec
cmp
lock
fldl
push
jns
cmc
into
and
add
imul
sbb
cwtl
cmp
ja
lea
add
mov
dec
decb
mov
add
inc
test
jmp
adc
test
sub
push
dec
cltd
test
and
int
pop
jl
or
std
ret
or
mov
sub
add
jne
aas
adc
in
leave
mov
pop
add
inc
add
pop
xor
lods
sarl
xor
enter
das
or
mov
filds
ret
push
sahf
mov
loope
bound
scas
cmpsb
push
addl
fadd
xchg
addb
xchg
faddl
mov
add
test
mov
aad
sub
dec
and
xlat
rolb
cmc
jg
outsl
mov
sti
and
push
ds
repz
inc
or
add
mov
mov
pusha
fsubl
orl
mov
stc
add
out
aaa
lahf
inc
insl
adc
mulb
mov
rcr
je
sub
mov
push
sub
ljmp
pushf
jge
in
clc
iret
mov
mov
mov
pop
push
or
add
ret
test
pop
add
mov
add
cwtl
dec
movb
outsb
jne
scas
shrl
js
adc
add
mov
arpl
dec
imul
in
mov
adc
push
pop
cmp
loop
xor
inc
xor
dec
in
or
or
data16
sbb
pop
test
clc
add
jo
lock
xor
div
dec
pop
js
shrl
mov
cmp
xchg
pop
cmp
add
notb
cld
test
add
fsubs
jno
cmp
add
xorb
jne
mov
push
mov
popa
cs
hlt
pop
insb
add
pop
push
call
xchg
push
arpl
jne
frndint
cmc
and
pop
pop
test
scas
test
shl
jge
mov
and
ret
jne
and
aad
mov
fiadds
jp
lods
or
and
add
sbb
add
stos
pop
mov
mov
bound
les
scas
mov
add
push
mov
pop
xchg
cmovno
sub
clc
mov
mov
push
cmp
mov
push
jg
insl
add
jb
cli
xor
les
and
or
repnz
add
les
pusha
jo
aam
shlb
sub
shl
xchg
sbb
jmp
add
xor
sub
enter
decl
ret
push
popf
in
add
or
mov
and
mov
sbb
push
daa
outsl
mov
sub
xchg
push
xchg
xchg
in
push
jecxz
or
pop
shrl
js
out
mov
pusha
sub
jl
cli
add
mov
jb
or
popa
mov
cli
test
ffreep
aad
out
add
into
mov
mov
fnsave
mov
arpl
push
loop
inc
mov
into
cmp
loop
ret
sbb
add
inc
mov
dec
inc
xchg
mov
mov
aad
push
add
or
sbb
gs
loopne
daa
imul
xchg
inc
add
nop
jae
mov
push
sbb
jns
mov
add
mov
gs
clc
pavgb
cmc
and
dec
arpl
fisttpl
sbb
push
push
cwtl
test
lods
mov
pop
cmp
cli
mov
fld
mov
sarb
out
xor
loop
cs
inc
stos
mov
movsl
movsb
arpl
loopne
decb
fwait
mov
adc
fs
add
test
sub
xor
enter
add
ljmp
in
and
add
sbb
mov
jmp
flds
lock
test
push
aad
pop
cmpsb
inc
mov
ds
bound
sub
sub
fwait
mov
mov
pop
dec
inc
stos
inc
jno
or
sbb
dec
and
in
mov
rcrl
push
cmp
fisubl
add
jge
add
push
in
inc
mov
jl
jecxz
dec
add
hlt
cmp
popa
mov
xlat
cmp
push
and
in
sbb
test
cmc
mov
sub
loop
rcr
orl
ret
xor
xor
mov
cmp
cmp
add
or
fnstcw
sub
pop
and
dec
mov
and
popf
aaa
and
and
pop
in
jnp
dec
inc
ljmp
push
jle
add
or
imul
les
mov
push
mov
outsb
fildll
and
mov
jae
fs
insl
dec
pop
scas
movsb
ljmp
repz
in
sbb
and
sarb
jecxz
fcomps
adc
inc
ljmp
aad
xchg
mov
jb
cmpsb
fs
sbb
outsl
cmp
inc
add
sub
sahf
pop
pushf
jbe
cwtl
mov
scas
jo
insb
testb
xor
ret
clc
out
and
sbb
lret
inc
cmp
loop
mov
push
popa
push
test
add
sub
mov
loope
mov
mov
into
xor
cmp
fsubl
stos
and
and
daa
shll
cmpsb
inc
faddl
mov
mov
xor
sbb
push
add
leave
xor
enter
add
je
ret
adc
and
lcall
fcmovbe
mov
ret
cmp
pop
add
dec
scas
dec
sub
ret
ljmp
ljmp
sti
daa
sub
outsb
xchg
lret
out
ret
setbe
xchg
fwait
sti
inc
cmc
add
pushf
mov
jnp
sbb
loopne
rorl
pop
pop
jb
or
mov
jecxz
jecxz
adc
xor
jns
mov
cwtl
push
mov
js
stos
xchg
pop
sub
fists
adc
push
repnz
mov
sub
shlb
dec
and
lds
imul
ret
ds
das
cltd
sub
sbb
push
aas
icebp
add
push
xchg
fcomps
add
lret
outsl
int
int
aad
sbb
mov
sub
mov
rorb
inc
sub
pause
xlat
inc
jbe
test
xor
jle
push
bound
and
lods
push
leave
jne
and
aas
push
frstor
jae
cmp
rorb
mov
add
and
push
pop
xor
mov
loope
sub
ret
mov
and
test
sarb
push
pop
add
and
jmp
jbe
jae
adc
push
add
inc
mov
push
hlt
pop
pushf
and
jbe
cmc
aad
lds
lea
je
loopne
dec
jmp
call
jp
pop
ljmp
scas
loopne
mov
push
jo
add
pop
hlt
imul
insl
jle
sub
sub
or
addl
ja
rcr
in
jb
jo
arpl
add
out
add
or
mov
xor
jge
dec
jnp
addb
das
xchg
add
xchg
add
push
movsl
in
shll
xorb
nop
and
sbb
mov
mov
mov
cmp
adc
mov
sub
pushf
cmpsb
push
shll
and
dec
xchg
pop
push
pushf
cmp
outsb
pop
iret
arpl
stos
sti
lock
ss
add
jb
cmp
mov
rep
xchg
add
sbb
mov
mov
repz
adc
in
and
jle
inc
add
push
pusha
cmp
mov
inc
pop
lcall
push
adc
or
or
and
and
lods
shll
add
test
aad
mov
ljmp
pop
and
pop
and
je
imul
add
popa
add
aas
sahf
loope
ficompl
pusha
lcall
sub
mov
dec
inc
cltd
sahf
and
mov
cltd
push
shl
movsl
clc
ret
test
inc
cltd
inc
pop
adc
gs
imul
outsl
inc
add
xor
jecxz
jno
scas
and
addr16
mov
mov
cmp
dec
sbb
in
lds
lcall
mov
inc
inc
dec
pop
adc
add
jmp
push
inc
sbb
f2xm1
inc
mov
xchg
aam
aam
jno
scas
filds
hlt
enter
popf
push
movsb
ja
in
sarl
fwait
jae
pop
jne
xor
loope
out
cmp
incl
push
adc
pop
int
les
push
negl
mov
xor
out
jae
les
jno
inc
scas
sub
jno
mov
fsubs
jno
jno
ds
or
xor
nop
out
popf
ret
pop
cmpl
sub
les
pushf
push
lcall
push
adc
test
add
std
jno
scas
pop
int
hlt
add
daa
mov
sti
ljmp
sbb
lahf
xor
out
mov
frstor
pop
ja
pop
jno
ds
movsb
loope
divb
xor
gs
jge
xchg
jg
ret
jnp
roll
or
les
inc
fwait
rcrl
add
pop
out
inc
ret
pusha
push
fiadds
lret
enter
in
addr16
push
or
inc
ffree
push
cmp
clc
mov
lds
mov
addr16
jno
scas
lret
int3
ds
out
mov
in
jno
ds
xchg
pop
pushf
lcall
push
adc
out
mov
addr16
pop
fildl
mov
adc
dec
pop
les
inc
pop
cmp
testl
test
push
xorb
rcrl
clc
faddl
ja
aas
jno
lods
and
gs
icebp
inc
out
arpl
fbstp
xchg
sbb
sbb
inc
jne
add
out
xor
xor
les
dec
push
repz
popf
rolb
mov
or
cmpsl
add
adc
or
xchg
xchg
mov
out
jno,pn
cmp
adc
repnz
int
cmpb
sbb
jnp
inc
lods
or
out
cmp
sub
jae
es
push
adc
addl
sbb
and
pop
cmp
ja
mov
ds
sub
xor
sub
cld
sbb
inc
loop
sub
sbb
add
lahf
xlat
lcall
std
or
lods
mov
les
jno
inc
push
and
dec
mov
ret
mov
jno
ds
shll
cmp
xor
rol
sbb
inc
pop
inc
mov
sbb
inc
pop
imul
mov
push
aad
xlat
mov
test
les
mov
scas
fdiv
hlt
hlt
and
lret
in
jp
inc
lahf
scas
ja
adc
sbb
jo
sbb
mov
cmp
jb
scas
out
push
ret
icebp
rclb
push
js
les
adc
ja
push
je
das
sbb
inc
xchg
mov
pop
je
mov
les
cmpsl
loopne
hlt
mov
mov
out
jno
pop
stos
jno
fadds
mov
add
sbb
out
ret
sbb
fsts
inc
pop
sbb
fwait
shlb
roll
sbb
adc
sti
loope
mov
jno
scas
xor
cwtl
hlt
xchg
and
mov
cltd
test
pop
cmp
cmpsl
sub
lods
out
adc
jp
pop
and
inc
dec
sbb
jmp
or
js
push
fistps
and
dec
sub
or
hlt
clc
xlat
out
adc
fstpt
mov
sub
xor
push
ret
adc
pop
sbb
sbb
cld
ficomps
les
push
cwtl
add
mov
sti
xchg
xchg
push
xchg
jb
add
stos
jge
stos
push
bound
mov
and
popfw
inc
cmp
pop
mov
aam
std
and
push
xchg
inc
add
sbb
mov
sti
js
inc
xchg
and
stos
hlt
pop
jae
cmp
dec
and
testl
fwait
xchg
mov
es
and
sti
cmp
cs
stos
mov
pop
push
sti
dec
inc
mov
and
data16
jnp
sbb
jno
mov
cmc
and
mov
push
mov
mov
cld
xchg
aam
lret
fadds
sub
mov
jnp
cmc
adc
mov
iret
and
and
mull
mov
xchg
dec
add
inc
cmp
and
sti
std
xchg
rcll
sbb
mov
and
data16
cmp
dec
int3
and
and
rolb
and
push
xchg
add
jg
inc
and
sti
mov
sub
cmp
lret
dec
scas
mov
and
cmp
clc
or
mov
pop
and
push
xchg
adc
adc
and
sti
jnp
mov
scas
inc
fs
stos
loopne
pop
push
cli
dec
mov
and
jmp
xchg
stos
pop
loop
push
and
inc
xor
and
push
xchg
iret
add
sti
movsb
xchg
test
stos
stos
adc
add
and
pop
stc
cmp
adc
or
cmp
subb
ret
add
and
imul
cmp
clc
adc
push
pop
dec
imul
adc
xor
and
and
negl
arpl
enter
fadds
outsl
inc
jbe
mov
mov
fcoml
jbe
stos
adcb
push
jge
adc
inc
cmp
adc
and
jb
jae
mov
dec
push
xchg
xchg
add
inc
mov
mov
mov
xchg
icebp
xchg
push
inc
fadds
push
dec
nop
mov
and
mov
dec
andb
and
testl
sub
test
js
mov
xchg
hlt
inc
mov
stos
jecxz
pushf
push
test
mov
jo
iret
adc
xchg
fimuls
and
push
jmp
dec
xchg
incl
pop
inc
jl
mov
mov
popa
xchg
dec
xchg
adc
stos
stc
adc
mov
and
test
cmp
dec
xchg
and
out
and
push
xchg
xchg
add
inc
dec
rorl
or
xor
xchg
imull
cmpsl
dec
int
cmp
sbb
push
adc
mov
and
testl
inc
and
push
xchg
cmpsl
add
inc
in
sub
xor
sbb
push
xchg
stos
pop
adc
rorl
mov
and
xchg
in
pop
adc
xchg
ljmp
data16
sbb
xchg
in
hlt
inc
pop
inc
mov
mov
sti
cwtl
xchg
js
pop
inc
cs
stos
cmpsb
adc
push
dec
pop
mov
and
popw
dec
cmp
dec
jo
sbb
mov
inc
dec
mov
push
xchg
xchg
push
inc
or
sahf
sti
ret
xchg
clc
xchg
mov
fsts
cmp
mov
and
jmp
sub
andl
imull
mov
and
push
xchg
sub
sub
push
sti
cltd
xchg
push
xchg
inc
inc
jl
stos
jnp
inc
push
imul
lds
andl
cmp
adc
xchg
cmc
dec
stos
and
mull
sbb
inc
andb
mov
inc
rolb
adc
push
es
test
int3
xor
xchg
in
rorl
and
and
divl
add
je
and
push
xchg
and
and
and
sti
leave
xchg
daa
xchg
nop
inc
jne
stos
adcl
push
sbb
data16
pop
cmp
dec
and
das
mov
xor
bound
and
and
push
xchg
call
clc
and
sti
push
inc
iret
arpl
sti
dec
lock
and
fistl
add
push
and
adc
inc
and
push
xchg
add
inc
inc
enter
clc
xchg
and
stos
rclb
jle
or
mov
xchg
inc
cmp
dec
jle
pop
and
sbb
xor
xchg
outsl
add
inc
cltd
mov
mov
lcall
mov
push
xor
mov
and
pushw
and
jle
ret
dec
lods
and
xchg
divl
out
jnp
mov
aad
insb
and
sti
dec
xchg
push
xchg
inc
ljmp
or
mov
and
test
mov
in
call
idivl
mov
push
xchg
lea
mov
aad
mov
mov
inc
xchg
xor
xor
push
sahf
dec
push
mov
and
adc
sti
adc
and
xchg
lret
into
mov
xor
and
push
xchg
adc
mov
mov
mov
arpl
mulps
push
dec
or
push
adcl
sub
fnstcw
mov
xchg
lret
add
out
xchg
xor
int3
dec
xchg
mov
insb
or
adc
xchg
and
insl
cmp
add
xor
mulb
mov
insb
jo
jb
in
or
ficompl
fs
cmpsl
ds
stos
add
sahf
rorl
inc
and
pop
mov
mov
mov
add
and
add
add
mov
mov
inc
cld
inc
fsubr
and
repnz
jge
mov
shlb
xchg
call
inc
mov
sbb
or
mov
and
mov
xor
ror
add
js
js
pop
outsb
mov
xor
and
adc
ljmp
jg
mov
mov
das
sub
xchg
jp
out
mov
mov
cmc
mov
leave
mov
cltd
shlb
add
add
imul
test
mov
gs
test
and
pop
and
cmp
lods
cli
jmp
dec
jecxz
cmp
and
dec
testb
and
xlat
push
dec
out
lret
sbb
and
xchg
bound
jmp
and
pop
sub
pop
dec
loop
loope
or
lock
dec
sar
mov
add
das
and
jmp
loope
fcmovbe
mov
subl
and
imul
dec
hlt
and
pop
cltd
pop
lea
imul
push
fnstsw
inc
stos
lods
pop
jp
lods
add
pop
into
cmp
inc
fisttps
cmp
sbb
and
loopne
inc
mov
push
add
or
test
mov
sub
mov
push
inc
dec
cmp
fbld
mov
shl
jb
and
loop
cmp
clc
sub
and
sub
add
enter
mov
aas
repnz
mov
mov
mov
pop
cmp
sbb
adc
jns
and
pop
repnz
insb
add
andl
out
push
add
inc
pop
les
or
popf
adc
push
cmp
addl
inc
pusha
pop
mov
ret
mov
out
add
cmp
inc
mov
lea
push
les
es
aam
dec
pusha
push
cmpsb
fstpl
cwtl
dec
and
push
lret
xchg
mov
popa
add
aam
sahf
ja
lret
mov
mov
cmp
sbb
pop
enter
mov
inc
mov
cmp
xor
mov
loopne
ret
mov
push
dec
std
mov
cmpsl
cmp
mov
push
test
mov
cmpsb
mov
fwait
pop
out
and
popf
and
or
inc
mov
in
add
pop
int3
xchg
shrb
mov
fsubl
mov
pop
ja
dec
sbb
test
cwtl
or
adc
pop
in
add
inc
inc
cmp
sbb
mov
movzbl
sbb
push
icebp
stos
and
out
sub
add
inc
and
add
jb
pcmpgtd
mov
pop
sti
int
mov
and
nop
in
mov
fidivs
arpl
lret
test
mov
cmpsb
adc
pop
sarb
sbb
insl
sbb
mov
xor
mov
and
jecxz
or
jo
mov
inc
add
and
mov
aas
sbb
pop
sub
inc
adc
dec
je
cmp
mov
mov
adc
cwtl
aam
and
cmpsb
inc
mov
add
imul
cmp
mov
push
jg
push
jle
daa
idivb
xor
and
call
pop
xor
scas
cmc
sub
pop
orb
add
sahf
mov
and
pop
mov
cmpsl
call
push
add
jns
and
inc
into
lcall
mov
xchg
xor
stos
call
pop
and
lret
push
mov
ss
pop
mov
mov
adc
nop
mov
xor
je
sahf
aaa
cld
xor
add
addb
cwtl
stc
arpl
fidivl
sub
xchg
inc
and
jbe
hlt
lea
xchg
in
int3
lret
push
push
mov
fildll
outsb
push
test
sub
movsl
lcall
pop
add
aas
pop
pop
cli
xor
jae
mov
inc
add
pop
and
fcmovnbe
loope
adc
dec
add
hlt
xor
add
jp,pn
dec
ss
dec
push
add
add
leave
add
pop
inc
mov
push
pushf
shrb
repnz
pusha
je
mov
ljmp
cmp
mov
cmp
xchg
push
sub
adc
push
mov
ret
jb
shlb
cmp
or
test
push
or
add
fdivs
jecxz
jnp
cmpsb
or
adc
je
sub
add
push
xchg
and
clc
and
sti
ja
notb
test
and
addr16
cmp
adc
xchg
xor
and
and
divl
sub
xchg
testl
mov
mov
inc
xchg
mov
cmp
stos
inc
adc
test
mov
and
sbb
xchg
rorb
or
pop
mull
lcall
push
xchg
out
add
inc
and
mov
sti
cmp
inc
mov
mov
stos
dec
mov
push
and
cmp
mov
adc
outsl
neg
and
and
int3
and
jl
inc
cmp
mov
mov
jmp
inc
xor
dec
dec
dec
mov
jg
add
dec
shll
sbb
mov
sub
dec
and
push
xchg
movsl
add
inc
push
popa
mov
sti
fwait
xchg
enter
dec
or
mov
and
data16
inc
adc
xchg
xor
and
and
and
push
xchg
inc
add
inc
arpl
cltd
mov
out
sbb
stos
rcll
push
ss
jl
sub
xchg
data16
in
das
adc
and
and
xlat
mov
and
push
xchg
adc
outsb
inc
enter
mov
inc
xchg
jle
sub
adc
into
dec
addr16
and
dec
aaa
and
mov
and
push
mov
mov
lcall
shrb
dec
xorb
mov
stos
adc
xchg
pop
dec
in
or
xor
or
ljmp
mov
xchg
pop
xchg
push
inc
or
stos
inc
adc
push
fimuls
mov
and
data16
cmp
cmpsl
xchg
inc
dec
movsb
and
mull
mov
push
mov
and
sti
xchg
mov
mov
push
lock
and
stc
and
pushfw
jp
jnp
adcl
and
ret
and
push
xchg
mov
dec
inc
adcb
jg
push
and
sti
adcb
fildll
add
lahf
inc
sub
loopne
jnp
sub
or
push
xor
sbb
pop
push
xchg
push
add
inc
or
jno
push
sti
ret
xchg
jmp
into
inc
out
sub
adc
cmp
adc
and
and
test
inc
and
push
xchg
pop
add
inc
mov
movsb
xchg
in
xchg
push
inc
jb
stos
cmp
pushw
cmp
mov
and
data16
adc
and
and
cmp
and
push
xchg
je
test
sbb
mov
mov
add
cmc
xchg
sbb
stos
adc
icebp
pop
push
test
cmp
adc
pop
dec
xor
andl
notl
push
mov
push
and
push
xchg
xlat
add
mov
adcb
cmp
push
xchg
dec
jg
inc
and
lea
adcb
and
or
js
add
mov
movsb
mov
adc
push
ss
mov
and
call
and
inc
xor
and
jg
inc
mov
mov
sti
enter
push
inc
inc
scas
stos
rclb
in
inc
dec
shlb
cmp
cmp
adc
xchg
xchg
dec
fbld
push
and
notl
outsl
and
push
xchg
ja
xor
repz
and
sti
and
shll
mov
out
push
push
dec
inc
mov
and
adc
xchg
rorl
push
and
mull
in
cltd
xor
xchg
or
ljmp
fs
sti
lods
xchg
xchg
xchg
dec
inc
push
or
push
leave
dec
jno
les
fwait
adc
xchg
stos
dec
and
in
and
idivl
push
mov
xor
push
xchg
mov
cld
mov
push
and
sti
cmp
inc
mov
stos
aaa
pop
dec
mov
and
pop
adc
xchg
dec
dec
fisubl
daa
and
test
mov
test
inc
add
outsb
mov
inc
inc
out
stos
les
mov
push
dec
sub
fld1
cmp
dec
sbb
ljmp
aaa
push
xchg
cwtl
add
inc
jmp
mov
call
push
out
cmp
dec
ja
xor
xchg
testl
mov
lods
add
inc
mov
and
sti
inc
xchg
sti
xchg
popa
inc
and
in
orb
and
dec
cmp
dec
sahf
and
mov
ret
xor
inc
add
subb
mov
xlat
xchg
jp
xchg
inc
lods
mov
jle
ds
and
repnz
xchg
pop
dec
lods
and
and
push
xchg
cld
add
adc
sti
mov
inc
aas
push
stos
mov
dec
and
in
int
mov
dec
xchg
int
stos
and
mov
xor
aas
push
xchg
mov
xor
mov
sbb
inc
dec
popa
mov
and
fists
cmp
and
and
sbbl
mov
mov
dec
xchg
mov
movsb
es
outsl
xor
inc
hlt
sbb
sbb
notl
inc
xlat
movsb
adc
xchg
stos
inc
sahf
cmp
adc
test
and
ds
mov
xchg
and
push
xchg
and
cmpsl
inc
and
inc
pop
daa
stos
adc
es
cs
and
data16
xchg
jb
lcall
pushf
mov
push
je
hlt
lret
lods
jb
xchg
adc
shlb
mov
fidivl
adc
mov
mov
lock
loope
mov
int3
adc
jae
mov
jecxz
inc
pop
xor
ret
sub
ret
xchg
and
frstor
mov
xor
jo
adc
jb
inc
orl
ret
and
pop
arpl
mov
xor
xchg
xchg
adc
mov
adc
es
add
push
sbb
mov
jo
xor
push
shlb
adc
addb
xchg
mov
jp
aaa
jb
dec
adc
cmpsb
push
sbb
cmp
stos
in
adc
rcl
adc
cwtl
push
mov
xchg
adc
xor
xchg
xor
adc
mov
adc
cmpsb
and
mov
sbb
es
adc
xor
stos
mov
cmp
xchg
and
mov
adc
xchg
mov
mov
add
clc
frstor
xchg
xchg
addr16
sub
xor
movsl
sti
mov
xchg
adc
outsb
xchg
mov
je
adc
pop
daa
mov
xor
cmpsb
xor
push
add
xchg
dec
xchg
add
xor
and
xor
mov
ljmp
mov
dec
adc
sti
dec
nop
xchg
mov
push
xchg
int3
cli
push
mov
stos
nop
adc
xor
test
js
xor
inc
xor
rcl
adc
jle
popf
mov
push
daa
aad
sbb
jmp
adc
adc
mov
jo
jp
mov
mov
adc
or
mov
dec
adc
loop
inc
xchg
mov
xor
xor
adc
mov
push
and
adc
out
cwtl
test
gs
jno
adc
xlat
add
xor
inc
sub
jle
inc
and
cwtl
adc
xor
adc
imul
hlt
fwait
mov
inc
add
xchg
adc
jg
sbb
rcrb
xchg
mov
xor
imul
nop
mov
iret
and
xlat
jmp
stos
xchg
add
dec
lds
cltd
fadds
jae
fs
mov
sub
lcall
flds
adc
out
cwtl
pushf
jg
iret
push
and
adc
lret
mov
push
shll
cmpsb
push
imul
xlat
out
sub
xor
cmp
adc
and
adc
ficoml
stc
and
xor
xor
call
cmovl
mov
into
push
jae
xor
shll
es
inc
test
hlt
dec
shr
xor
xchg
addl
inc
icebp
jo
xorl
add
ss
faddl
into
push
aam
xor
subb
adc
loopne
test
mov
xor
nop
fs
testl
dec
xchg
ljmp
pop
aam
xchg
mov
adc
test
call
ret
adc
decl
mov
xor
xchg
adc
jae
add
aad
xor
loope
mov
movsb
mov
call
adcb
dec
add
add
mov
push
es
pop
ljmp
movsb
or
insb
push
stos
lcall
rol
incl
aad
loopne
stc
add
cmpsl
jnp
movsl
imul
push
pop
inc
add
sub
out
or
dec
pop
fildll
pop
stos
js
add
jle
mov
cmpxchg
daa
addr16
test
cmp
dec
pop
dec
repz
sbb
hlt
adc
mov
sub
inc
pop
add
dec
jae
pop
add
cmc
mov
pop
les
das
bound
and
int
ljmp
stos
imul
enter
sahf
loope
orl
sub
push
add
inc
cmp
push
mov
jo
jmp
add
popa
js
mov
mov
test
fcmovnu
mov
pushf
cmp
clc
mov
inc
clc
in
repz
icebp
gs
sbbl
shl
test
xor
lds
adc
cmp
jno
add
xor
inc
popf
push
cmp
leave
xor
pop
mov
jo
xchg
gs
into
push
jmp
and
add
cwtl
jae
lods
xchg
jo
jl
sbb
mov
aas
sub
mov
out
mov
and
push
add
or
xchg
cmp
push
and
mov
jecxz
add
enter
arpl
imul
jecxz
mov
mov
add
mov
in
xchg
mov
cwtl
add
dec
jne
mov
mov
cli
or
icebp
xchg
cmc
loop
push
sub
imul
ja
cmp
fiadds
in
repnz
js
mov
and
add
add
lods
sbb
mov
insl
pusha
fs
out
ljmp
ds
dec
lock
xchg
or
scas
mov
cmp
hlt
and
dec
xor
mov
add
je
sahf
cmpsl
sub
shlb
sub
mov
and
lret
std
aas
je
ret
cwtl
push
xor
fstpt
popf
add
xchg
cmp
cltd
mov
cmp
shll
jo
adc
stos
sarl
inc
and
adc
push
clc
mov
dec
adc
sti
ret
and
ds
out
and
lahf
enter
xor
sub
mov
je
jecxz
fnstenv
insl
push
ds
es
fbstp
sub
shrb
add
ret
mov
ret
xor
sarb
adc
sbb
rclb
out
mov
mov
pop
les
data16
insb
pop
les
scas
or
cmpsb
movl
shrl
repnz
cmp
and
in
mov
insb
call
insb
je
or
ss
insb
je
jmp
dec
xchg
xor
adc
imul
push
add
imul
xchg
insl
cmp
in
add
dec
sub
mov
icebp
add
and
or
and
pop
dec
rorb
loope
dec
dec
imul
xchg
loope
inc
shr
dec
rcr
arpl
loopne
jae
movsb
mov
test
mov
je
movups
out
jns
test
inc
aad
or
addr16
dec
ja
lahf
sbb
sub
push
call
ret
cli
repnz
add
fwait
or
jecxz
add
sub
sbb
xchg
xor
and
in
insl
jo
jecxz
inc
push
loopne
add
loopne
adc
dec
repz
adc
xchg
fiadds
or
push
imul
das
sub
mov
push
xor
das
xor
sbb
into
inc
iret
lret
scas
faddl
and
inc
cmpsl
xchg
sub
cmp
xor
dec
inc
lea
lods
mov
xchg
cmp
out
insb
jo
sbb
jb
inc
cmp
or
scas
sub
jmp
push
in
out
add
or
adc
sbb
cmp
test
mov
adc
or
push
jl
scas
fs
xor
sbb
xor
int3
push
pop
sub
aas
mov
rcrb
dec
sub
and
inc
xor
mov
cmp
movsb
std
inc
insl
ljmp
fisubs
sbb
push
sbb
push
je
xchg
jae
std
shlb
adc
ds
je
sbb
dec
push
cld
push
push
es
push
aas
inc
sti
add
adcl
loope
mov
adc
out
jns
pop
push
push
mov
dec
cwtl
loopne
and
movsb
insb
jecxz
jae
loop
pop
jo
das
or
mov
testb
iret
sub
xlat
das
andb
push
fisubs
or
sub
nop
mov
push
adc
inc
push
add
cvtps2pd
callw
ffree
xchg
pushl
or
add
xchg
pop
mov
lcall
popa
lds
xchg
fisttpll
or
sub
arpl
push
lods
fwait
imul
sahf
outsl
sbb
mov
lcall
cld
pusha
push
je
dec
push
pop
out
push
dec
mov
shlb
inc
push
pop
adc
insb
jbe
inc
outsl
cmp
sub
dec
stos
test
adc
dec
mov
sub
pop
cmpsl
testb
ss
xchg
ret
jo
sub
or
xor
push
push
dec
outsb
sti
out
iret
jge
mov
xor
adc
mov
inc
outsl
ja
cmpsb
xchg
adc
rclb
fisubs
sti
mov
pushl
cmpsl
lock
jmp
imul
ja
sbb
pushf
enter
mov
inc
pop
test
lock
jge
stos
pop
ficoms
lock
xchg
xor
nop/reserved
adc
sub
dec
pop
div
out
push
mulb
data16
push
lret
xor
pop
aad
xchg
adc
sti
dec
push
lret
push
subl
adc
lds
outsb
jecxz
sbb
loope
pop
inc
cs
xchg
xchg
outsb
inc
fwait
sti
pop
mov
sub
dec
stc
adc
pop
js
jle
fucom
push
mov
xchg
adc
clc
pop
jb
cwtl
adc
inc
cmpsl
dec
sub
gs
aam
mov
add
or
mov
jmp
pop
popa
iret
sbb
push
push
and
or
dec
pop
imul
add
ficoms
sbb
addr16
movsb
sti
and
inc
loope
dec
ds
mov
scas
enter
jbe
addb
sbb
arpl
lods
ret
mov
jbe
leave
enter
push
or
mov
inc
mov
cmpsb
adc
cmp
sbb
or
test
in
imul
in
jbe
push
shrl
pop
xchg
sub
cli
add
lahf
sbb
push
cmpsb
sub
add
add
jnp
xchg
imul
fldenv
ds
leave
aas
mov
and
inc
sbb
sti
push
adc
faddp
fcoml
xorb
fiaddl
dec
outsl
clc
push
pusha
push
bound
ja
or
fdivl
insb
gs
lock
mov
repz
xchg
jle
xchg
fadds
je
xor
sub
repnz
xchg
pop
push
pushf
mov
pop
or
mov
pop
xor
stos
jne
xlat
cmp
jo
inc
iret
dec
sbb
ljmp
imulb
adc
pop
push
lock
test
push
inc
in
das
and
mov
and
mov
subl
xchg
push
imul
data16
adc
push
pop
mov
imul
mov
jae
or
jbe
aad
and
cmc
fisubs
sbb
dec
imul
lahf
pop
sub
mov
xor
cmp
cmp
cli
leave
insb
cmc
add
stc
fcmovb
jns
int3
into
sar
icebp
jmp
and
loope
cmc
les
out
pop
out
sti
fdivs
in
out
pop
fucomi
cmp
mov
imul
xchg
and
xor
adc
rorb
adc
xor
movsl
iret
jp
mov
jmp
mov
mov
mov
fildl
dec
jb
std
pop
leave
lock
mov
fmul
jl
xchg
add
fistps
xchg
mov
mov
push
and
call
xor
adc
xor
sbb
daa
pop
add
out
and
call
in
cmc
out
pop
push
add
cmpb
sbb
and
add
lock
xor
lea
mov
mov
imul
clc
cmp
scas
xor
xor
mov
adc
mov
es
cmp
adc
aaa
pop
or
mov
cmp
cmpb
cmp
jb
les
clc
mov
popa
cmp
cld
dec
arpl
loope
adc
movsb
push
push
mov
pop
push
cli
outsl
arpl
scas
push
pop
js
daa
nop
and
sti
xor
sbb
sub
lahf
gs
inc
xchg
cltd
mov
mov
push
mov
loopne
sbb
sbb
cmp
jno
xor
and
punpckhwd
test
and
push
mov
test
arpl
pop
pop
mov
jmp
mov
add
jo
rcll
call
popf
fildll
xlat
fldenv
mov
jo
out
push
loop
and
adc
das
cwtl
dec
and
mov
cmp
mov
scas
shlb
fimull
jae
fisttpl
loopne
test
sub
lret
fcoms
xor
xchg
push
sub
xchg
daa
test
mov
mov
cwtl
test
and
dec
stos
jl
pop
scas
loopne
mov
sbb
xchg
aas
adc
xchg
mov
repnz
adc
or
inc
das
fwait
pop
sub
sbb
xor
add
or
cmp
cmp
xchg
xchg
and
cli
scas
addl
ret
ljmp
roll
pop
and
mov
cmp
scas
aaa
or
xor
add
add
mov
lods
and
nop
loop
mov
jns
push
fsub
shll
rolb
adc
mov
or
mov
cmc
adc
add
jo
pop
call
jae
mov
xor
movsl
or
stos
adc
sbb
js
sbb
or
cltd
mov
lods
mov
jbe
add
jge
pop
ljmp
nop
popa
cmp
push
lock
dec
adc
ss
aas
mov
sub
mov
xor
add
xchg
cmp
mov
mov
and
mov
jb
cmpb
xchg
cli
sti
loope
outsb
sti
stos
mov
div
inc
cmp
shlb
cmc
push
pop
adc
and
adc
jno
ret
dec
jl
push
lret
sbb
push
leave
ljmp
mov
pop
push
enter
loop
in
dec
xchg
xorb
push
or
and
leave
addr16
mov
vpackssdw
loopne
xchg
dec
jp
mov
dec
iret
ja
fwait
push
jg
xchg
rol
insb
test
mov
cmp
aam
bound
int3
pushf
adc
lods
mov
xor
adc
cmpsl
fs
jbe
dec
jae
imul
pop
fsub
int3
inc
and
cld
inc
fnclex
mov
int3
int
ljmp
or
mov
xor
int3
mov
in
jl
jp
mov
adc
unpckhps
jb
mov
aas
xor
and
and
add
fdivrl
pusha
and
cmp
sub
fisttpl
xor
stc
leave
imul
fidivl
lret
out
ljmp
pop
jle
dec
sti
and
jae
pop
movsl
or
inc
frstor
mov
jb
scas
dec
ret
mov
push
adc
mov
out
mov
out
repnz
leave
jmp
and
loop
lock
jl
stc
jp
enter
lock
dec
scas
cmp
jp
pop
rcl
cld
int
jns
pusha
add
lahf
mov
and
dec
insl
push
popf
cmp
cwtl
push
xor
xor
xchg
ds
nop
inc
imul
ret
pop
cmp
inc
shll
xchg
loopne
or
and
cmp
sub
jae
mov
stos
popa
call
inc
jo
movsb
cmp
mov
mov
decl
int3
cmp
in
flds
push
in
and
mov
rolb
push
repz
xchg
mov
jmp
lret
jg
shl
xchg
aaa
add
push
jno
push
or
push
pusha
test
ljmp
data16
mov
test
sbb
or
mov
and
dec
stos
ret
pop
out
out
push
fiadds
fdivrs
loop
arpl
lds
jnp
aam
jo
fcomi
jb
sbb
imul
cmc
cmpsl
mov
fcomi
dec
cmp
fsubs
ret
repz
lds
xlat
lret
adcb
or
sub
ret
add
sbb
mov
mov
cmp
push
jb
adc
movsb
pusha
or
aaa
mov
and
dec
jb
and
xor
outsl
call
mov
loope
push
cmp
sub
fisubrs
sbbb
mov
in
hlt
mov
sub
addb
sbb
sbb
sub
mov
cli
sub
jne
jb
mov
arpl
lods
push
pop
out
push
fisubs
or
mov
ss
lfs
add
lahf
test
scas
sbb
out
jg
pop
fisubl
lock
add
lods
mov
lods
es
popf
jb
push
pop
sub
and
enter
and
mov
addb
xchg
or
sub
mov
loope
push
mov
ljmp
xor
out
test
adcb
pop
add
outsb
pop
inc
cld
bound
cld
aam
mov
dec
jbe
sbb
mov
sbb
sbb
rorb
icebp
aas
push
push
in
or
jb
ror
push
fdivp
or
mov
lcall
rol
pusha
jle
push
popa
cmp
xor
cmp
or
sahf
jo
ds
inc
in
test
pop
xor
and
add
imul
push
jle
fstps
jns
fsubs
aam
jge
lret
in
cmpsl
xor
icebp
lods
int
cli
sbb
sbb
jbe
or
es
pop
addb
push
and
xor
lcall
jno
mov
enter
lea
pop
jl
add
and
mov
push
movsb
pop
cli
and
mov
adc
mov
cmp
fistps
out
dec
push
pushl
dec
sbb
push
inc
leave
cmp
negb
jbe
rol
push
rolb
imul
add
lds
pop
leave
push
sub
or
sub
movsb
jge
pop
cwtl
jecxz
and
imul
addr16
nop
jmp
inc
aas
mov
arpl
insl
jg
mov
and
lds
addb
shlb
mov
push
arpl
cltd
jno
in
pop
xchg
mov
pop
mov
lahf
bound
repz
rolb
jns
jb
jg
xchg
xorl
rcrb
pop
pop
mov
pop
and
jg
les
and
enter
xchg
scas
add
es
cltd
subb
int3
testl
cvttps2pi
sub
bt
sbbl
jae
and
cmp
cmp
xchg
xchg
adcb
cmp
push
or
or
fsubrs
and
add
bound
add
mov
or
mov
insl
inc
insl
add
je
jb
push
out
push
or
cmpsl
in
mov
dec
insb
cwtl
fcomps
push
call
inc
jg
leave
jae
inc
pop
dec
in
loopne
push
ds
push
repnz
xchg
outsb
pop
aas
mov
dec
push
bnd
push
adc
sub
in
loope
jp
data16
and
adc
out
int3
pop
movsl
jbe
inc
lret
mov
shl
pop
fldcw
mov
mov
jge
dec
push
in
sarl
lret
int
rcll
cmp
push
aad
into
andb
push
xchg
jo
das
jle
inc
cli
jns
mov
popa
dec
in
pop
gs
cmp
js
mov
cmpsl
and
inc
out
jl
xchg
push
sbb
lock
outsb
pushf
sbb
mov
and
and
clc
jb
shlb
mov
pop
mov
dec
inc
icebp
sbb
addr16
addr16
sbb
je
sub
in
pop
pop
add
or
fwait
push
jo
cli
push
sbbb
dec
sub
add
or
mov
insb
adc
je
adc
movsl
or
or
leave
lock
adc
pop
xchg
pop
jb
fbld
mov
sbb
mov
cmp
nop
xchg
rolb
insl
sbb
add
ret
out
outsb
in
std
out
andb
dec
jb
aad
push
sub
xlat
push
cmp
lods
cmp
arpl
dec
jg
addl
pusha
aam
jbe
fistl
and
dec
xor
pop
sahf
xchg
mov
pop
xchg
xor
mov
out
cmp
lret
mov
mov
mov
mull
adc
jnp
lahf
mov
shrl
mov
out
and
fcoml
popa
negl
lods
call
scas
loopne
out
lock
and
leave
jle
mov
inc
xlat
sbb
push
fmuls
out
add
jmp
icebp
push
fcos
cld
sbb
add
mov
sub
or
mov
sbb
push
cs
cmp
or
jne
push
orl
pushf
adc
mov
sub
mov
fadds
sbb
mov
cmp
cmpsl
mov
xchg
stos
sub
xchg
movsb
mov
mov
ds
cmpl
xchg
jecxz
sub
pop
mov
fwait
les
or
mov
mov
inc
rolb
xchg
repnz
pop
insb
scas
shll
cltd
test
dec
mov
jmp
ss
and
and
imul
out
mov
add
sub
and
or
and
adc
push
mov
inc
adc
jnp
ljmp
push
cmpsl
inc
mov
xchg
aas
aaa
xchg
jp
sub
addb
pop
inc
daa
mov
jp
sbb
ja
sbb
sbb
out
add
insb
and
jmp
or
mov
popa
dec
int3
mov
add
mov
push
mov
mov
jp
into
sub
test
inc
mov
dec
jle
loop
add
stc
pusha
mov
rol
jb
rclb
movsl
int3
add
lret
mov
xchg
or
push
jmp
cmp
aad
loop
ja
mov
mov
mov
xor
xchg
pop
mov
cmpl
inc
pop
les
and
cmp
xor
push
pushf
inc
push
cmp
push
testl
dec
mov
cli
sub
dec
xlat
loope
ja
dec
loop
and
cli
sahf
add
mov
mov
jmp
aam
imul
repnz
xchg
mov
lcall
mov
pop
sbb
cmp
pop
dec
cmp
dec
inc
jecxz
sbb
test
fcomps
dec
ss
test
sub
push
in
imul
or
pop
mov
cmpsl
jno
jbe
cmpsl
push
outsl
test
insb
std
rcl
or
and
gs
outsl
lret
sbb
add
mov
lock
scas
shlb
out
ficomps
push
inc
pop
cmp
insl
bound
mov
add
mov
xor
xchg
adc
pop
xchg
and
int
dec
push
repnz
cli
popa
and
dec
lret
jne
popa
pop
xor
adc
xchg
dec
cmp
and
xchg
mov
dec
fimull
xchg
pop
dec
sub
mov
push
push
fninit
je
xchg
dec
in
mov
addb
sti
lret
sub
jecxz
jecxz
mov
in
loopne
sbb
out
jp
stc
push
mov
jns
or
mov
movsl
push
cltd
lret
mov
mov
lods
jle
cs
lahf
lods
daa
xchg
dec
or
add
and
sub
clc
adc
xor
and
addr16
mov
dec
sbb
jp
addl
xor
adc
add
jmp
dec
ds
enter
jp
push
jb
xor
xor
push
loopne
fs
push
mov
dec
nop
inc
dec
xlat
imul
mov
xor
inc
jp
pusha
or
mov
mov
call
xor
add
dec
push
mov
mov
cmc
or
in
xor
lret
dec
in
imul
add
or
inc
inc
pusha
test
inc
xchg
inc
pushf
dec
int3
jns
push
test
loopne
and
aam
mov
loop
arpl
dec
test
sbb
fisubrl
mov
cltd
mov
lcall
arpl
lahf
cmpsb
stos
pop
pop
addr16
adc
xor
out
and
jo
mov
pop
mov
cmp
jno
and
add
outsb
adc
cltd
push
mov
jno
repnz
pop
call
aaa
aas
inc
adc
stc
test
mov
out
or
in
sub
popa
pop
adc
push
in
arpl
std
push
cli
das
lods
sbb
push
jle
repnz
aad
add
push
aam
movsb
push
stc
jle
mov
or
ds
mov
xor
inc
cmpsl
test
jns
in
push
subl
cmc
push
hlt
xor
dec
lcall
jbe
outsl
add
js
sub
xchg
mov
dec
dec
sbb
aaa
outsl
dec
dec
or
in
cwtl
sub
lret
out
es
scas
or
xlat
push
mov
imul
repz
enter
stos
test
sub
aad
mov
lahf
repnz
loopne
mov
movsl
movsb
push
mov
mov
cli
imul
adc
and
dec
outsb
and
jbe
addb
adc
sarb
out
aaa
inc
push
or
je
xor
lds
std
scas
shll
addr16
or
xor
push
push
dec
sbb
mov
outsb
loop
hlt
lret
mov
imul
jge
cltd
popa
add
push
pushl
push
test
data16
and
or
arpl
jb
sub
cmp
mov
pop
popf
sub
stc
shlb
push
push
ja
push
xorl
outsb
insl
fcomi
movsb
js
rcl
out
sbb
sti
call
dec
or
jo,pn
cmc
push
arpl
andb
icebp
adc
jecxz
notb
mov
add
arpl
jge
scas
cld
push
adc
cmp
jl
xor
inc
in
arpl
leave
xchg
into
dec
out
das
scas
pop
push
ja
or
sub
mov
xchg
mov
or
out
out
add
not
lea
pusha
mov
inc
in
mov
inc
push
pop
add
frstpm(287
cmp
xchg
push
xor
inc
jo
cmp
test
push
fwait
enter
push
sub
jno,pt
or
imulb
dec
ja
mov
mov
je
sbb
out
push
les
or
hlt
dec
dec
sbb
addr16
repnz
scas
call
loopne
daa
jo
inc
lret
movsb
xchg
inc
negb
out
ret
data16
xor
pop
insl
mov
add
sub
xor
or
push
stos
scas
inc
sub
pop
mov
setae
inc
mov
out
dec
cltd
push
dec
sub
and
iret
icebp
or
into
xchg
xor
adc
adc
movsl
and
jle
push
imulb
insb
sub
mov
cmpsl
inc
sub
pop
add
nop
xlat
arpl
aaa
cld
xor
pop
cli
mov
jle
ljmp
pop
xor
mov
xchg
xchg
out
ret
jo
dec
pop
iret
pop
les
jp
sub
mulb
xchg
jne
cld
jmp
icebp
fdivrs
loopne
cmp
inc
sub
sub
out
repz
jb
push
inc
dec
mov
sub
sub
inc
push
in
push
into
das
pop
orl
in
sub
sbb
sbb
xchg
adc
and
into
outsl
cmp
mov
adc
sub
cmc
add
xchg
sbb
or
jb
subb
add
pop
xchg
xchg
inc
leave
ds
stos
mov
sub
test
lock
or
mov
les
sub
jmp
mov
aam
cmp
dec
dec
in
add
sub
jl
js
sub
and
dec
insb
cmp
mov
ja
sub
out
xor
dec
mov
cmp
push
pop
testl
dec
add
rorl
adc
push
call
orb
cld
mov
mov
sub
and
fs
aad
dec
cmp
cmc
shlb
addr16
push
dec
shll
ds
xchg
jb
push
bound
pop
xchg
ds
sbb
das
movsl
fdivrl
dec
mov
inc
notb
inc
cmpsl
out
lods
adcb
loop
inc
jne
ret
inc
xchg
pusha
jbe
andb
mov
mov
shr
mov
push
rclb
pusha
sbb
jmp
push
add
outsb
sbb
pop
jmp
mov
add
loop
jno
fdivrs
add
push
out
inc
pop
testl
xchg
into
psubsw
fucomip
pop
jl
arpl
in
sahf
rcrb
sub
inc
jmp
sub
test
mov
dec
sahf
mov
adc
pminub
pop
dec
inc
mov
cltd
cmp
add
push
lods
push
jno
lret
sub
mov
dec
insb
ds
pop
xor
xorb
and
and
imul
dec
jb
mov
mov
add
inc
dec
cli
push
dec
dec
jecxz
push
push
mov
push
push
in
pop
pop
shlb
bound
inc
data16
push
iret
outsb
add
push
jno
rclb
mov
std
stos
in
insb
mov
jo
shlb
dec
push
cmc
xchg
adc
test
cs
add
push
je
mov
outsb
jbe
inc
xchg
lods
or
mov
lahf
mov
sbb
ja
mov
inc
outsl
push
sub
and
shlb
jnp
sbb
dec
loopne
inc
lods
test
test
dec
outsb
scas
mov
jbe
xor
loopne
stos
sub
push
push
sub
mull
push
rcll
jo
enter
cmp
dec
sti
mov
or
inc
xor
es
pushf
mov
dec
loopne
ljmp
push
lds
add
jns
out
cmp
nop
mov
pop
jne
dec
or
imul
leave
dec
or
idivb
lock
push
mov
or
jns
nop
push
mov
jle
or
out
push
scas
insl
outsl
cmp
dec
out
sub
jbe
mov
arpl
pop
xor
mov
lock
pop
jmp
arpl
cli
lret
cli
out
ret
rcll
sub
jne
jl
cli
int
gs
sub
mov
es
pop
and
dec
jns
dec
pop
jmp
xor
dec
in
cmp
inc
xchg
dec
and
aad
mov
lea
aaa
das
cmc
outsl
cmp
stc
stc
and
cmp
lahf
xchg
mov
push
fwait
and
cs
mov
stos
cld
xchg
mov
shr
mov
in
mov
jne
aas
bound
and
jae
rcrb
outsb
les
loope
test
push
or
lock
add
test
cmp
fiadds
in
je
lret
sbb
mull
push
xchg
xchg
filds
mov
pushl
mov
nop
rcrb
cmp
rol
ret
inc
dec
test
add
cmc
cmp
push
rcrb
ret
test
and
and
mov
sbb
dec
scas
in
adc
imul
movl
pusha
gs
scas
adc
mov
push
sbb
outsl
adc
lea
jb
ret
mov
push
xor
adc
sbb
cli
push
sbb
push
add
mov
mov
pop
xor
xor
loopne
test
test
pop
or
fdivrp
push
cmp
cmp
dec
push
adc
testl
adc
andl
fstpt
popa
pop
xlat
cmp
mov
gs
int3
pop
test
aaa
and
push
lahf
test
mov
scas
fldcw
icebp
cmp
subl
mov
xchg
loopne
push
mov
mov
scas
arpl
mov
sub
and
mov
sub
inc
adc
out
sbb
scas
sub
push
jecxz
xor
test
leave
iret
mov
or
push
or
push
adc
inc
sbbb
push
jne
add
pop
sti
loope
js
sub
test
xor
sbb
shrb
pop
shlb
mov
add
cmp
mov
adc
push
pop
cmp
fwait
inc
cmpb
ljmp
ljmp
cmp
call
lds
leave
sbb
xchg
and
xchg
xor
xchg
mov
sbb
cmp
divb
jne
add
xchg
add
jbe
adc
push
lods
fisubl
dec
gs
ss
std
xchg
pusha
aas
and
in
psrad
xorl
fildll
dec
sarb
testb
cmp
jmp
ret
and
data16
lcall
jae
pop
pop
adc
inc
push
jg
add
in
and
mov
ret
loope
xor
ret
testl
clc
mov
adcb
lahf
and
push
or
repz
inc
xor
or
adc
int3
call
xchg
cmp
push
pop
dec
xchg
push
je
mov
lcall
js
loop
rcrb
mov
jne
popf
aas
dec
dec
test
call
int3
mov
sbbl
mov
fs
shl
lods
jmp
dec
jnp
stos
test
add
adc
sub
sub
sub
subl
adcb
jmp
mov
or
inc
cmp
mov
cmpsl
and
jbe
push
jecxz
and
push
and
dec
lods
inc
hlt
das
mov
lea
fbld
cs
xor
jp
jno
push
lock
sbb
rclb
testb
xorb
sbb
je
loopne
sub
imul
mov
test
sub
cmp
mov
cmpsb
pop
add
and
call
aas
xor
mov
xchg
and
adc
lahf
mov
sbb
lock
pop
and
leave
or
pinsrw
cmp
add
or
sbb
es
scas
xchg
xchg
mov
lea
dec
arpl
cmp
repz
sub
mov
push
call
lret
push
jg
xchg
lock
inc
es
xor
fs
in
and
xchg
xchg
test
inc
mov
daa
fwait
xor
fadds
mov
mov
add
mov
or
mov
sub
sbb
mov
add
sub
ss
ss
dec
scas
push
inc
scas
jb
add
dec
xor
jmp
pop
mov
jno
push
idivb
cmpsl
push
inc
add
adcl
mov
xor
adc
stos
or
push
adc
ret
es
sarl
std
jne
daa
mov
js
or
movsb
dec
xchg
mov
fiadds
fcomps
test
roll
gs
mov
ss
fsin
add
mov
loopne
aaa
popa
test
stos
movsl
push
adc
mov
das
test
addr16
push
ds
add
jnp
fadds
and
std
test
bound
orl
call
add
fdivp
insl
cltd
ds
addl
jne
dec
add
inc
add
shrl
sub
mov
outsb
mov
inc
add
pop
cli
xchg
xor
push
pusha
fistps
and
xor
sub
incl
lahf
call
and
push
fisubrl
add
pop
fisubrl
ror
je
push
adcb
jg
cwtl
push
loopne
or
sub
or
add
sarl
inc
sub
fisttpl
mov
jne
cmpsb
push
lock
pop
xchg
jmp
or
sub
test
mov
pop
inc
pop
jmp
in
outsb
jno
int
sub
arpl
ss
add
addr16
add
adc
pop
insb
inc
adc
ret
testb
adc
lcall
aad
rcrl
sub
nop
dec
ljmp
pop
xchg
inc
mov
dec
idivl
xor
inc
add
sub
adc
je
fisttpl
stos
notl
jmp
jbe
jns
and
xor
adc
or
sub
ret
and
cwtl
addb
push
jecxz
loopne
cli
or
xchg
push
mov
sub
repnz
sub
inc
inc
push
mov
and
mov
out
xor
mov
fstpt
add
sub
push
cmp
sbb
cmp
add
in
test
adc
loop
sub
push
push
mov
ud2
nop
push
arpl
pop
cmp
push
xlat
das
adc
mov
bound
xor
loop
call
repz
cmp
das
xchg
mov
dec
jge
push
jne
mov
pop
inc
in
xor
bound
mov
ljmp
push
and
iret
or
mov
sarb
pop
lods
aam
push
mov
or
push
pop
mov
ljmp
and
add
sbb
mov
in
call
or
fdivrs
ja
push
pop
jns
push
imul
sbb
mov
and
inc
inc
leave
dec
adc
sub
lods
mov
cmp
or
jge
inc
inc
mov
push
enter
pop
bound
call
insl
std
adc
mov
push
xchg
cmp
push
mov
push
jmp
mov
push
dec
data16
add
cmp
cmc
and
mov
and
mov
pop
outsb
mov
popf
sarl
pop
push
pop
inc
sbb
mov
pop
mov
xchg
lea
pop
call
and
mov
paddsb
mov
push
jle
dec
sahf
sub
test
out
call
xor
xor
xor
icebp
push
je
inc
xor
lods
sub
and
xor
jo
dec
or
mov
scas
test
and
mov
cmp
xchg
push
outsb
xorb
mov
inc
xor
jo
lahf
lret
push
inc
mov
or
push
xchg
push
adcl
sti
xchg
mov
jbe
push
lret
pusha
adc
loope
negl
hlt
xchg
mov
lret
add
ljmp
push
fcomi
sbb
xchg
fwait
outsb
mov
jb
sub
ljmp
jg
sbb
sub
mov
push
leave
jno
adc
fwait
inc
cmp
xor
cmp
push
outsb
or
lret
orb
negb
pop
clc
dec
xorb
gs
and
lret
cmp
add
aaa
xor
pop
sti
and
add
sub
ret
xchg
push
pop
mov
sub
ret
adc
add
mov
in
and
loope
int
jge
rcrl
jno
ss
std
popa
cli
mov
aad
mov
cmp
subl
cmp
jmp
aas
sbb
push
xchg
dec
mov
loop
movl
pop
fdivrl
or
scas
ljmp
cmp
call
inc
cmp
js
jns
adc
cmp
ja
inc
aam
imul
inc
mov
subb
cmp
push
popa
out
push
testl
pop
xor
mov
cld
push
jg
jno
pushf
addr16
or
mov
jmp
rcrb
mov
xor
jl
adcb
bound
notb
das
dec
and
push
xor
outsb
or
pop
mov
mov
inc
cltd
daa
aam
adcl
xchg
and
mov
sbb
bound
gs
mov
cmpsb
scas
add
pop
jbe
mov
or
ret
pop
and
xchg
mov
cmpsb
loop
sbb
and
test
call
xchg
mov
scas
scas
mov
sahf
cmpsl
call
mov
sti
add
pop
sub
inc
imul
mov
jnp
cltd
push
out
push
pop
xchg
xor
add
sub
cmpsl
movsl
adc
or
jmp
jae
mov
xchg
shlb
or
jb
inc
sti
bound
sbb
and
pop
ljmp
movsl
xor
stos
push
and
add
sahf
dec
pop
xchg
inc
test
pop
sahf
mov
cmp
or
lods
push
sysexit
cmp
cmp
sub
inc
pop
js
cmpsb
sbb
adc
cmp
add
dec
test
inc
push
imul
mov
push
outsl
push
or
addl
xchg
jb
inc
fldt
test
mov
xchg
sbb
dec
xor
mov
cmp
inc
xorl
sub
pop
sub
sub
xchg
xor
sub
mov
add
xor
gs
test
inc
leave
ljmp
mov
cmpsl
sbb
adc
shl
jle
cmp
jle
int
pop
push
aad
subb
pop
add
push
les
int
xor
mov
inc
mov
pop
adcb
push
adc
bound
dec
ret
negl
ds
inc
hlt
in
loope
icebp
lret
addr16
andb
or
or
pushf
repz
jp
test
pop
mov
mov
push
push
outsb
stos
test
lods
in
or
inc
rep
and
jo
push
and
dec
push
out
ds
test
mov
mov
push
mov
into
pop
insb
repz
adc
or
test
inc
cmp
loope
out
xchg
sbb
add
xor
xchg
cmp
mov
jp
lods
shlb
icebp
push
cli
jb
pop
insb
aaa
cmp
pop
test
xchg
leave
push
insb
enter
into
push
in
jge
fwait
cmpsl
cmp
mov
addl
or
sub
add
inc
and
addr16
push
enter
jne
push
add
adcb
dec
jmp
aam
jecxz
lods
or
lret
push
sub
cmpsb
leave
mov
stc
jmp
outsb
jle
rcr
xor
push
pop
lock
mov
mov
stc
rcll
stos
test
xchg
mulb
pop
and
xor
xor
push
or
fwait
mov
mov
xor
cmp
shll
add
mov
push
addl
mov
sbb
jmp
xor
lret
aam
jbe
mov
mov
pop
out
stos
jbe
inc
je
call
rcr
dec
xchg
lods
pushf
cmp
inc
cmpsl
add
leave
inc
and
sbb
sbb
xchg
shlb
jo
cmp
or
js
pop
adc
dec
sahf
inc
cmp
jae
insb
cmp
sub
dec
push
loopne
sbb
mov
add
add
pop
scas
clc
call
rorb
pusha
je
andl
push
and
shrb
cmp
mov
stos
aaa
and
and
test
dec
mov
cmpsb
pop
fistps
pop
sti
adc
sub
out
mov
or
and
and
sub
outsb
xlat
cmpb
movsl
das
int3
cmp
mov
xchg
movsb
imul
fs
add
sbb
sahf
xchg
jbe
cs
lock
cs
sbb
sub
les
cmp
push
cmp
pop
add
push
push
xchg
add
add
inc
pop
dec
dec
jmp
pop
cmpl
push
dec
mov
pop
lret
pushf
shll
add
sahf
mov
pop
sub
mov
jo
scas
test
ds
jb
aad
sbb
in
dec
push
imull
shlb
mov
adc
push
adc
aaa
add
test
push
inc
pop
pusha
pop
pop
daa
sub
negb
dec
pop
leave
adc
pop
cmpsb
arpl
push
rcll
inc
jmp
inc
aas
mov
int3
jne
xor
push
sti
pop
mov
dec
or
arpl
push
or
jno
or
call
call
adc
add
lret
mov
lahf
xchg
outsb
int3
xor
dec
jb
pusha
and
sbb
test
mov
xor
pop
xor
dec
push
inc
push
mov
and
sub
lret
popf
inc
jo
inc
adc
push
or
inc
cld
call
mov
lea
lcall
mov
or
push
arpl
mov
mull
push
addr16
jecxz
imul
fcoml
and
call
outsb
mov
in
call
mov
movsb
add
mov
pusha
ret
cmp
adc
push
scas
ret
cmp
pop
adcl
pop
sbb
pop
mov
movsl
mov
incb
jo
sti
add
clc
sub
pop
in
not
and
mov
and
xchg
xor
mov
adc
sbb
xor
jl
xlat
mov
setae
or
and
dec
mov
push
data16
in
jo
dec
push
add
jnp
test
inc
push
mov
mov
adc
xchg
mov
push
xchg
mov
cmc
fs
xor
push
cmp
inc
call
xor
call
sub
cmpsl
arpl
lahf
mov
jnp
or
dec
idiv
push
mov
data16
cmpsl
ljmp
and
les
pop
mov
dec
out
subl
xchg
das
cmpsl
add
mov
push
sbb
cmp
movsb
int
aaa
xorl
add
mov
dec
lods
mov
jbe
inc
mov
mov
sub
das
adc
or
inc
mov
hlt
mov
xor
fdivp
mov
mov
pop
arpl
adc
stos
sahf
sbb
cld
xchg
in
pop
test
add
into
outsb
adc
pop
pop
movsl
popa
test
push
adc
fs
dec
jmp
daa
push
mov
push
orl
repnz
or
rclb
stc
or
mov
sub
test
pop
in
arpl
rorb
pop
mov
adc
adc
ja
xor
and
movsb
movsl
in
jne
insb
adcl
sub
or
test
es
or
int3
lds
mov
or
ja
test
lcall
fidivrl
fnsave
dec
pop
addb
push
mov
mov
xor
popa
int3
pop
xor
push
loopne
std
call
dec
loope
dec
add
push
daa
ret
jns
fldl2e
pop
adc
fisttpl
jl
bound
dec
push
loopne
je
inc
push
in
nop
mov
mov
out
adc
jb
xchg
scas
cmp
push
loop,pt
mov
pop
hlt
push
dec
mov
jl
sub
dec
adc
out
lock
or
lret
loop
inc
std
adc
iret
sysexit
pop
jl
jmp
pushf
xor
lds
mov
nop
jnp
add
xor
inc
clc
ror
push
pop
mov
mov
insl
in
stos
mov
ss
mov
lock
and
je
rcrl
mov
dec
fsts
dec
xchg
sahf
and
mov
and
xchg
sbb
jbe
mov
inc
jo
clc
lea
and
dec
mov
push
clc
jno
or
sub
pop
jo
pusha
dec
mov
mov
mov
mov
or
sbb
sahf
imul
out
lea
jl
stc
pop
push
pop
ds
and
push
lret
inc
stc
pop
cmp
adc
cs
sahf
jle
std
add
jecxz
add
ljmp
mov
into
dec
fs
jnp
xchg
sub
cmp
adc
in
push
cmp
jno
push
mov
add
mov
sti
sbb
inc
adc
pop
xchg
mov
pop
das
lods
mov
jns
jns
cmp
lcall
in
inc
or
jecxz
inc
pushf
pop
leave
fcompl
sbb
cmpsl
cwtl
imul
or
push
jecxz
pop
aas
dec
cmp
dec
hlt
sub
addr16
mov
sub
test
sub
or
sub
jne
cmp
sub
repz
cmp
fadd
jecxz
sbbb
xor
xor
adc
orb
rolb
pop
sti
iret
mov
cmp
aas
pop
repz
mov
adc
adc
cmp
jbe
mov
loopne
jnp
jp
setne
in
dec
cli
loop
jecxz
fcomip
mov
dec
sub
mov
inc
jmp
sub
mov
ss
mov
or
js
xchg
shlb
xor
or
mov
push
mov
or
xor
dec
in
or
or
hlt
jmp
insb
addb
mov
mov
xchg
test
ficoms
fstpt
icebp
and
nop
add
pushf
es
je
stos
cld
popf
jp
cmp
inc
scas
xchg
loopne
pop
adc
lcall
inc
repnz
faddp
pop
dec
cmp
jns
lret
jae
push
xchg
mov
sub
lods
test
les
or
lahf
stos
sub
push
stos
ds
sbb
test
adc
test
mov
notl
fs
mov
mov
inc
lock
jo
bound
mov
cli
pop
flds
or
mov
or
mov
jge
push
sub
inc
cmp
push
cmp
push
sbb
int3
lcall
js
and
sub
sub
sbb
shll
cmpsl
sub
fdivl
xchg
adc
cmp
inc
loopne
and
dec
cmp
fwait
mov
add
sbb
stos
push
push
test
je
insb
add
add
in
mov
adc
test
movsl
or
push
test
mov
cltd
cli
mov
dec
scas
dec
stc
or
mov
shrb
add
cmpsb
push
hlt
rolb
test
xlat
or
and
push
xchg
aas
movsb
in
ss
jg
adc
add
gs
clc
dec
pop
and
add
sub
cmpsl
jnp
decl
mov
arpl
and
leave
mov
xorl
dec
dec
js
popa
loopne
fcompl
or
loop
mov
dec
mov
int
pushf
mov
adc
mov
mov
pusha
adc
jae
mov
lahf
push
inc
sbb
xchg
roll
jb
cmpsl
in
and
jb
cli
cmp
movsl
fs
std
lds
cmpsl
lret
ret
dec
fwait
add
mov
mov
leave
and
lahf
lcall
adc
mull
or
pop
jecxz
cli
cmp
fisttps
out
xor
stc
mov
cs
sub
cli
sti
mov
xor
or
jl
cli
test
test
nop
ja
xchg
les
cld
dec
mov
ljmp
les
fists
hlt
rorb
das
popf
adc
sbb
lock
out
cmp
in
jne
outsb
mov
xor
mov
inc
xor
aad
cmp
out
push
sub
notl
inc
mull
fs
jmp
push
pop
lea
add
mov
sti
ret
mov
fistl
pop
add
daa
cmp
hlt
sahf
jbe
mov
xchg
xor
movsl
insl
xor
aad
inc
inc
icebp
test
cmp
bound
inc
jns
push
popa
scas
icebp
or
rcl
xor
andb
lods
mov
push
inc
imul
xchg
cmpsb
cmpsb
jp
cmpsb
ret
adc
sub
pop
aas
pusha
mov
or
and
icebp
out
and
add
loopne
and
addl
loopne
gs
fcoms
les
sub
inc
mov
fimuls
jg
xchg
dec
add
rcl
xlat
sbb
mov
imul
xchg
dec
das
in
jae
das
jecxz
clc
cltd
push
cmp
inc
stos
in
aad
inc
dec
loop
add
pop
mov
sub
push
push
inc
in
and
out
into
daa
cmp
dec
cmp
xchg
mov
cmp
jecxz
ja
add
cmp
or
in
leave
mov
fucomip
aad
mov
mov
add
push
inc
or
mov
sarl
mov
or
fwait
sbb
jo
lods
xchg
xchg
in
stos
data16
lret
loopne
add
das
xor
xchg
out
cmp
or
test
lds
out
jb
cld
adc
fiaddl
jnp
inc
sub
es
sub
cmpsb
inc
adc
mov
xor
mov
dec
sbbl
xor
xchg
lods
movsl
pop
lock
je
into
mov
cmp
inc
and
inc
aaa
in
jo
out
push
cmp
repnz
add
arpl
and
in
addl
pushf
test
sub
and
arpl
jecxz
mov
shrb
mov
lret
jge
es
in
pop
push
mov
inc
push
mov
or
cmp
sbb
add
dec
mov
sahf
cmp
pop
push
jo
test
push
mov
pop
jnp
push
cs
fnstsw
add
xor
movsb
mov
dec
mov
fldenv
pop
incl
push
mov
inc
cmp
aad
pop
mov
ja
adc
jb
xchg
jle
sbb
cmpb
cs
test
gs
aam
adc
jb
inc
fldenv
sbb
mov
enter
popa
std
mov
sub
sbb
xchg
mov
xor
rcl
push
lret
lret
add
fsubl
fldl
or
subl
aaa
shl
fsubrs
mov
test
xor
adc
das
in
in
dec
or
das
push
je
and
pop
loopne
sbb
dec
gs
bound
iret
daa
and
xchg
push
add
cmpsb
pop
nop
add
lock
fldl
stos
and
jge
cs
pop
mov
mov
insb
psubusw
mov
sbb
dec
stos
adc
xor
adc
int
fstl
mov
xchg
push
dec
or
loope
add
insb
sub
push
and
notb
pop
or
xlat
and
dec
leave
lods
pop
pop
icebp
sub
ret
dec
loop
outsb
arpl
fcomps
jne
dec
mov
add
lret
add
add
in
shll
sub
push
and
das
jbe
and
sub
es
adc
or
test
sub
clc
mov
scas
es
sbb
stos
jp
jp
pop
push
or
add
data16
add
jb
int
mov
stos
jg
bndstx
andb
hlt
inc
fldenv
rolb
fidivrs
push
arpl
and
hlt
inc
xchg
push
push
push
test
push
xchg
add
cmp
aam
adc
lods
dec
enter
push
adc
and
scas
xor
fistpl
sub
loope
dec
in
dec
push
repnz
clc
popa
test
pop
mov
mov
sub
mov
stos
mov
add
and
subb
test
xchg
and
clc
push
dec
leave
mov
xchg
fldt
ss
mov
je
das
in
xchg
or
or
and
mov
inc
jl
dec
mov
cmp
stos
mulb
movsl
push
or
inc
adc
pop
inc
sti
and
psubusb
test
test
sub
mov
cwtl
incl
lret
push
test
xor
mov
pop
js
inc
insl
add
push
adc
nop
aaa
mov
xor
xchg
push
rcr
fsub
cmp
movzwl
mov
pop
pop
bound
ror
sahf
push
sti
mov
imul
or
and
mov
hlt
fimuls
frstor
push
jp
frstor
aam
mov
mov
pop
and
mov
nop
sbb
mov
or
sub
jns
sub
das
cld
rolb
hlt
dec
inc
mov
sbb
ja
bound
xchg
insb
xor
xor
and
das
pop
cmp
pop
xor
fbld
sub
jbe
push
cmc
dec
pop
nop
mov
movl
mov
xchg
mov
adc
aam
pop
in
inc
sub
icebp
je
rorb
xor
notb
nop
stc
imul
and
mov
pop
push
add
jb
or
and
mov
cmp
sub
inc
add
mov
stos
fucom
fidivrl
cmp
mov
xchg
jne
add
stc
xor
inc
fwait
push
in
mov
loope
stos
push
jne
mov
mov
inc
subl
outsb
add
shll
int3
adc
ret
push
inc
in
xchg
in
cmpsb
fldt
gs
dec
loopne
les
fldt
ljmp
cmp
mov
push
fisttpll
mov
adc
adc
xchg
xchg
sbb
stos
in
xchg
sub
jne
movsl
lock
xor
sub
test
mov
daa
mov
les
dec
xor
loope
mov
lock
bound
in
and
add
xchg
mov
inc
cmp
lods
inc
pop
sbb
insb
push
jnp
sub
sti
int
sbb
sahf
notl
cld
out
ljmp
mov
addr16
inc
out
xchg
cld
mov
mov
mov
lock
dec
sbb
mov
dec
sahf
mov
faddp
or
loop
adc
test
push
sti
pop
aaa
push
pop
xchg
out
xchg
jmp
or
or
adc
ja
not
adc
sbb
mov
fwait
in
pop
mov
jl
outsb
push
mov
orl
add
ja
repz
lahf
xor
xor
or
xchg
subl
clc
ja
or
insl
mov
inc
or
gs
test
cmpl
shr
inc
push
jmp
cwtl
das
pushf
xchg
test
cmp
push
mov
sbb
sbb
xchg
xor
and
lea
jmp
xlat
in
leave
jmp
or
xchg
movsl
fmuls
es
sbb
mov
or
pop
push
mov
test
push
and
and
sbb
xor
jecxz
mov
mov
jge
mov
cmc
adc
mov
dec
push
mov
bound
mov
cmp
and
xor
lea
fsubrl
orl
repz
pop
push
sub
enter
pop
jo
xor
mov
daa
add
stos
scas
test
push
mov
lcall
sub
adc
jp
add
xlat
xor
or
stos
mov
adc
sub
test
push
and
mov
cwtl
xlat
aaa
mov
or
rorb
cmpsb
sub
nop
cmpsb
pop
adc
ret
xor
xchg
adc
or
jmp
inc
popa
add
xor
add
mov
push
repnz
or
insl
jg
cmpsl
or
or
and
aad
sub
xor
mov
iret
cld
es
jns
cmp
mov
mov
cli
enter
xlat
js
fsubs
pop
xor
testb
aad
call
or
data16
mov
xor
clc
leave
out
inc
mov
or
add
scas
das
or
mov
cmp
lds
orb
adc
inc
aas
jno
mov
ds
daa
inc
cli
cmpl
outsl
xchg
pop
loopne
pop
in
cmpsb
shrb
scas
mov
sub
and
negl
fcomps
lret
xchg
repz
xchg
sahf
imul
mov
dec
in
mov
and
testb
xlat
adc
inc
aam
mov
ret
or
adc
push
iret
inc
loopne
ds
mov
mov
or
push
cwtl
mov
add
cli
mov
inc
mov
pop
nop
mov
push
xchg
stos
shrl
add
mov
mov
mov
adc
xchg
add
repnz
orl
push
and
subb
and
mov
out
xchg
sbb
rol
push
add
mov
movsb
adc
movsl
ret
out
pusha
jb
cltd
jae
int
push
dec
push
pop
loopne
push
lahf
fldenv
out
mov
pop
sahf
mov
jne
mov
jle
xor
lea
mov
mov
cmp
lock
arpl
jne
xor
cmp
jmp
or
push
lret
mov
jae
test
in
inc
add
leave
gs
jne
push
mov
out
enter
pop
aas
xchg
mov
cmp
ret
push
push
sub
dec
data16
sbb
cmpsb
lods
mov
loope
adc
sahf
or
xchg
mov
in
leave
adc
xor
lret
test
mov
outsl
int3
and
and
pusha
test
mov
mulb
aaa
ret
repz
call
ds
push
add
push
xchg
inc
inc
daa
cmpb
mov
popf
pop
mov
lahf
inc
std
je
xchg
mov
stos
pop
xchg
xchg
mov
cli
mov
add
cwtl
pop
adc
pop
aam
and
inc
jl
rcll
jmp
sbbl
imul
stc
in
das
shll
add
js
ret
in
or
mov
dec
adc
cmp
lds
cmp
cmpsl
mov
pushf
or
mov
imul
xchg
push
xor
sub
jg
lea
mov
loope
push
sbbb
jmp
jle
and
fisubs
ret
repz
dec
push
data16
dec
mov
cmp
pop
mov
inc
push
and
in
mov
xor
mov
xor
and
sbb
adc
or
or
mov
pop
mov
mov
movsl
stc
loope
popf
sub
push
sbb
jno
std
add
movsl
popa
loopne
loope
sbb
sbb
jnp
or
adc
adc
push
add
outsl
add
or
int3
push
sti
rclb
mov
shlb
popf
idivb
cmpsl
xor
rdpmc
lods
jns
aam
ds
rorl
mov
mov
pop
adc
or
mov
jnp
inc
std
loope
push
xchg
and
push
inc
xor
push
mov
movsl
aas
mov
dec
sahf
push
push
loopne
imul
into
mov
add
js
mov
popf
mov
xchg
and
nop
xor
aaa
mov
lds
popf
outsl
sbb
test
mov
shll
add
adc
cld
std
fists
aam
mov
add
ficompl
imul
sbb
outsb
pop
insl
xor
fmull
mov
movsb
loopne
mov
inc
cmp
je
sbbl
call
push
jno
add
subb
sbb
rcrl
std
stos
xor
lods
push
inc
imul
repnz
inc
ljmp
jecxz
or
jmp
add
xor
in
jae
inc
pusha
mov
adc
rol
sub
mov
push
mov
dec
push
sub
pop
dec
in
jmp
stos
adc
call
xor
jg
add
adc
push
mov
mov
pop
adc
xchg
mov
sub
movsl
test
xor
sti
mov
dec
cli
mov
jg,pt
les
loop
into
lahf
cmp
add
ret
dec
inc
push
int3
push
or
js
insb
cltd
cmc
add
in
inc
rclb
aam
je
rcr
mov
sbb
jnp
or
in
xchg
mov
sbb
pop
mov
add
xor
divb
xchg
jbe
fnsave
jae
or
mov
pusha
pop
push
inc
es
mov
cmp
mov
push
mov
flds
sub
rcr
xchg
mov
call
mov
daa
movsb
xor
sbb
cmpsb
cmpsb
rep
out
in
and
jns
jbe
xor
jo
sbb
or
fiaddl
inc
adc
jnp
int
adcl
lcall
daa
add
or
pop
sti
orl
push
clc
lcall
or
hlt
fmull
mov
cmpl
dec
jbe
sub
push
sub
cmp
movl
leave
mov
pushl
daa
popf
call
lock
pop
pop
push
roll
sub
sub
xchg
fs
jae
mov
mov
mov
cmpl
add
cmc
data16
lea
mov
inc
cmc
rcll
ja
xchg
push
or
mov
ds
stc
mov
and
fstl
and
dec
pop
dec
sbb
addr16
dec
adc
aas
sbb
push
pop
adc
xlat
adc
cmp
xor
stos
or
adc
or
inc
push
insl
cmp
aad
das
enter
cmp
push
cli
imul
xchg
popl
test
xchg
mov
into
fiadds
add
int
push
das
nop
dec
inc
xchg
cld
push
pop
jnp
sahf
pop
push
in
orb
fs
lret
in
adc
cmc
sbb
cwtl
and
sbbl
icebp
mov
xchg
mov
mov
xor
inc
cmpsl
shrl
xchg
cmp
bound
or
jl
add
add
adc
push
je
lret
and
iret
and
repnz
push
jns
iret
and
testb
movsbl
push
sbb
mov
cwtl
ret
dec
inc
add
fisubs
loopne
mov
rcrl
sbb
icebp
outsb
inc
adc
and
scas
pusha
cli
out
mov
adc
xor
push
and
sahf
dec
push
into
loop
call
mov
xchg
sbb
data16
xchg
mov
hlt
add
aas
fdiv
jge
mov
push
jns
jmp
inc
or
dec
lret
push
dec
adc
mov
push
dec
mov
cmp
lret
leave
gs
push
pop
push
outsl
xor
repz
or
jecxz
out
dec
fwait
je
mov
movsb
mov
cwtl
push
test
pop
clc
xor
cmpsb
lea
sbbb
dec
pop
and
jnp
inc
push
cli
adc
add
sahf
cmp
xor
sub
lods
pusha
mov
fcoms
ljmp
jno
pop
inc
cmp
or
xor
aam
fcomps
cmpsb
outsb
testl
push
repz
cwtl
fwait
mov
jmp
movsl
or
cwtl
xor
sub
pop
push
xor
daa
or
jae
dec
ss
or
ss
push
jnp
out
les
mov
push
loopne
push
fwait
cmc
mov
cmp
xor
push
in
aad
cmpsb
mov
cld
loop
xchg
jo
adc
mov
cld
xor
repnz
cmp
sub
and
lea
push
sbb
add
mov
xchg
jne
daa
aas
movsl
arpl
mov
lock
and
dec
sub
icebp
cld
loope
or
popa
cmpb
xchg
repnz
push
mov
mov
push
push
loope
and
jecxz
push
orl
icebp
mov
push
jne
cmc
mov
cmp
push
or
leave
sbb
and
mov
dec
mov
ret
adc
mov
dec
sbb
jge
jae
or
mov
cwtl
mov
xor
push
adc
mov
popf
pop
push
dec
jp
dec
jae
leave
inc
pop
adc
pop
xor
dec
jmp
icebp
filds
push
aas
mov
xor
inc
pop
or
das
or
pop
xorb
test
aam
movsb
dec
enter
decl
pop
xorb
insl
in
inc
sub
sbb
push
adc
adc
mov
sti
cmp
in
or
sbb
push
push
ss
mov
adc
lahf
icebp
pop
hlt
pop
or
data16
add
mov
adcl
inc
ret
test
jb
lea
mov
fstpl
adc
lahf
lea
sqrtps
xor
adc
mov
adc
cmp
dec
inc
xorb
cwtl
inc
stc
js
pop
push
xor
xchg
call
hlt
pop
cmpsb
cmpsb
pop
icebp
sbb
inc
jbe
cmp
inc
sbb
jecxz
sub
stc
repnz
add
sbbl
dec
mov
sub
data16
fimull
mov
mov
sub
sub
cmp
or
stc
and
mov
adcb
scas
or
loop
js
in
cs
push
push
cmp
sbbb
sbb
jno
push
add
outsl
sahf
insl
sub
cmp
test
cmp
mov
enter
mov
test
add
sbb
mov
or
jbe
mov
xchg
jo
aad
mov
stos
pushf
popa
add
addr16
xchg
outsb
and
fisubl
mov
inc
inc
push
push
and
inc
mov
loop
jge
mov
rorb
jb
xor
rep
and
xchg
mov
fistpll
xchg
sub
or
mov
cmp
test
push
jmp
lods
je
mov
jmp
in
popa
cmpsb
add
aas
adc
cwtl
jb
push
jmp
cmpsb
xchg
je
fidivs
popa
push
test
pop
aad
xchg
pop
mov
pusha
or
sar
pop
shll
adc
push
daa
and
dec
sahf
repnz
fldenv
sub
push
inc
mov
adc
dec
push
stos
xchg
jb
cli
add
leave
cmp
mov
out
loope
dec
rcrl
cmp
in
icebp
or
pushf
loop
sub
daa
xchg
je
jbe
imul
test
fdivs
push
push
lock
mull
fsubrp
xchg
lods
jmp
shlb
sub
mov
dec
out
scas
mov
adc
mov
fs
dec
dec
pop
inc
clc
jecxz
push
sub
shlb
sub
hlt
aaa
test
xchg
xchg
xchg
int
flds
mov
out
jnp,pn
inc
call
or
pushf
jmp
shrb
push
inc
pop
call
hlt
enter
adcl
fisubs
fwait
fwait
je
es
ds
test
mov
mov
fisttpl
and
xchg
or
out
inc
insl
or
lret
and
ret
xor
jno
sbb
repz
aaa
adc
xor
lcall
testl
push
neg
aam
xor
pop
sub
push
fnsave
cs
rcrl
in
lret
orb
dec
mov
push
test
jns
into
shlb
sub
inc
add
push
add
xor
adc
mov
ljmp
insb
cmp
addl
test
add
xor
push
js
mov
push
add
inc
pop
mov
sub
mov
mov
movsl
aad
test
jae
jo
dec
jecxz
imulb
mov
mov
mov
mov
mov
sub
sub
xor
in
push
sub
push
cmp
xor
mov
push
push
sahf
push
xchg
push
pop
push
mov
aas
push
and
add
jge
push
sub
jb
adc
mov
xor
cwtl
adc
nop
inc
repnz
sti
cmp
jae
rcl
fnstsw
cltd
jns
shlb
sub
adc
sbb
in
je
ja
jmp
adc
inc
add
stos
sub
mov
sub
lcall
sub
or
lds
popf
pop
pop
xchg
adc
mov
hlt
mov
push
or
dec
mov
xchg
add
cmpsb
and
push
sub
mov
add
and
xchg
ret
mov
cmp
add
aam
pop
dec
sub
clc
aas
sub
push
or
lret
das
cwtl
sbb
sbb
push
mov
inc
pop
add
dec
stos
jge
inc
push
je
sahf
xchg
or
inc
es
inc
clc
ljmp
adc
push
test
stos
aas
push
les
in
call
inc
pop
cmp
jb
xchg
or
popa
sbb
cld
lret
cmp
inc
inc
cld
dec
sub
adc
adc
cld
cmp
ret
adc
cwtl
xchg
inc
jbe
lock
adc
adc
mov
add
xor
and
sbb
in
mov
cmpsb
shlb
call
decl
in
cmp
stos
dec
mov
repz
loope
push
sahf
lods
inc
push
push
icebp
and
cmp
repnz
scas
push
addr16
inc
jle
adc
sub
lret
cmp
jne
pop
fisttpl
aas
push
fcoml
sbb
push
mov
fidivl
lret
imul
and
sub
dec
setbe
add
cmp
or
mov
adc
push
push
movsl
adc
add
daa
push
or
xor
sarb
dec
or
mov
bound
jg
mov
std
dec
int3
adc
adc
xchg
loope
xor
rcr
jae
pop
add
sbb
aam
sbb
subl
dec
xor
mov
in
mov
testl
adc
sbb
xchg
les
adc
ficomps
inc
push
mov
jne
js
push
in
fisttpl
adc
call
sub
js
pop
sub
jne
add
incl
pop
xchg
scas
or
adc
jb
or
push
inc
push
lret
mov
cmp
adc
xor
mov
xor
scas
pop
ret
adc
xchg
test
mov
dec
fs
in
push
scas
jno
sarl
movsl
jo
sub
add
sti
cmpsb
mov
push
insl
or
insl
fldenv
xchg
xor
pop
ss
or
arpl
mov
pop
in
adc
push
and
jg
loope
dec
fs
jns
add
xchg
mov
stos
xor
jge
adc
push
loopne
mov
add
lahf
cmpsb
dec
cmp
pop
jp
inc
push
sub
insl
inc
mov
sub
pop
push
xchg
or
xor
das
jno
mov
jl
ljmp
cmp
or
mov
mov
mov
xor
push
adc
push
pop
ret
cmp
mov
and
loopne
push
jmp
dec
in
lahf
sahf
inc
inc
movsl
cs
orb
dec
divb
int
xor
mov
xchg
push
loope
fldenv
push
mov
jecxz
add
cmpsl
movsb
js
cld
and
and
mov
in
mov
mov
xlat
mov
mov
lret
lret
add
jp
ret
pop
adc
or
sbb
cmp
mov
cmp
cmp
inc
sub
aas
dec
clc
mov
inc
add
push
test
mov
ds
push
push
scas
inc
stos
mov
and
mov
mov
cmp
pushf
cmp
cli
jle
rorb
into
sar
movsb
dec
jecxz
mov
out
mov
loope
push
pop
adc
ret
insl
jbe
xor
daa
cmove
je
jmp
jmp
cwtl
mov
rolb
jmp
adc
insl
aad
mov
xchg
push
add
sub
in
rcrb
movsl
jle
cld
add
lret
mov
icebp
sub
sbb
daa
shlb
maskmovq
testl
es
push
inc
cld
and
sub
jnp
ss
cmp
pop
pop
or
mov
pop
out
test
pop
push
test
dec
mov
sbb
mov
hlt
loopne
cmp
inc
and
xchg
inc
adc
outsb
mov
gs
into
pop
call
jecxz
decl
inc
es
push
sub
lret
hlt
jg
pop
dec
and
push
ret
pop
sbb
dec
lret
cmp
inc
pop
enter
sub
and
add
push
mov
xchg
pop
cmpsl
repnz
lret
push
lock
xchg
mov
in
xchg
mov
mov
out
iret
stc
loop
mov
xchg
lods
or
testl
or
stos
sbb
je
bound
xorl
rol
mov
jo
dec
cmp
sarb
roll
cwtl
push
or
mov
in
add
jge
mov
ret
stc
test
add
mov
mov
mov
arpl
pop
mov
push
or
sbb
push
push
insl
rolb
xor
imul
dec
testb
sub
es
loope
movsl
and
das
cmc
in
mov
aaa
or
or
adc
test
inc
inc
sbb
enter
sbb
les
mov
mov
ja
sbb
je
in
jne
shlb
fadds
cmp
mov
lcall
insb
mov
int
xchg
mov
push
ds
je
dec
into
adc
fsubs
fs
jo
and
ja
add
sbb
pushf
lret
mov
aas
xor
or
xor
sub
mov
insl
cmp
or
push
push
jmp
aam
dec
xorl
pop
fldenv
data16
ret
pop
dec
sub
in
dec
aaa
lods
imul
ret
and
pop
xchg
jo
je
add
sub
pop
jge
push
mov
stos
sbb
or
xor
pop
les
insb
xchg
add
cs
sbb
jmp
inc
mov
adc
mov
hlt
in
mov
push
jmp
xor
mov
sbb
pop
lret
pop
shl
sbb
sbb
jbe
or
mov
sub
cld
mov
int
push
mov
pop
mov
mov
xchg
sbb
and
inc
and
pop
adc
push
stos
xchg
ret
shl
sub
out
and
out
shlb
pop
mov
cwtl
mov
xchg
pusha
lcall
je,pt
and
cmp
jecxz
sub
xor
mov
mov
and
push
loop
and
mov
dec
mov
stc
pop
mov
push
xchg
call
or
mov
dec
xchg
in
out
xchg
sub
std
mov
aaa
jne
and
fiaddl
push
inc
inc
cmc
add
notb
jg
movsl
insl
es
fistps
mov
imul
fnsave
aad
testl
lret
leave
decb
or
sbb
xchg
lahf
ret
dec
mov
scas
mov
mov
and
leave
xor
loope
pop
xchg
add
pop
shlb
aam
xchg
into
dec
es
addr16
push
jo
mov
or
mov
adc
rcrb
test
clc
xor
out
scas
sarb
sub
outsl
jge
inc
stos
xorl
jg
ror
stos
shlb
test
fdivrl
mov
test
in
jl
cmc
xchg
jbe
adc
daa
fld1
xchg
mov
push
loopne
sbb
dec
ds
stos
les
or
pop
or
pop
outsl
pop
sub
inc
jo
cwtl
push
pop
bound
mov
aam
jp
or
lock
insb
and
mov
add
inc
lahf
jl
mov
adc
xor
call
cmp
sahf
inc
out
sbb
sbb
leave
mov
loopne
dec
sub
mov
rorb
out
xor
in
xchg
out
push
pop
adc
imul
nopl
inc
push
mov
xchg
mov
xchg
mov
xchg
out
xor
cmpsb
jmp
xor
mov
adc
or
ret
sarb
test
or
or
in
call
sub
jle
mulb
pop
stos
leave
or
ljmp
pop
mov
cmc
jb
inc
scas
inc
adc
ss
cmp
xchg
loope
and
call
xor
or
cmp
cmpsl
in
dec
mov
aam
mov
dec
jle
pop
sub
test
sub
inc
add
xor
jge
jle
adc
dec
pop
hlt
ret
dec
pop
dec
shlb
adc
cli
fdivrp
das
adc
lods
xchg
inc
int3
lock
push
mov
test
cmp
sub
jecxz
jp
loop
xor
inc
inc
xor
repnz
in
add
loope
push
in
xor
sti
mov
jbe
aaa
push
adcl
jb
mov
cmp
call
mov
cmpsb
dec
cmp
iret
push
das
pop
es
mov
jge
sub
movsb
je
inc
test
lret
pop
and
pop
leave
xor
in
psubusb
pop
fisubs
icebp
std
shrb
daa
mov
dec
inc
sbb
jb
sbb
push
daa
jo
adc
adc
sbb
adc
hlt
cld
cwtl
push
repnz
inc
je
enter
add
cmp
adc
mov
fsubp
inc
out
push
fwait
insb
je
add
adc
push
mov
sbb
sub
pop
add
mov
out
scas
clc
insl
ja
popf
mov
call
dec
xor
loopne
and
fdivl
ficoms
add
xchg
push
jecxz,pt
pop
adc
push
pop
sbbl
push
jmp
inc
lahf
das
mov
cmp
cltd
jne
int
cmp
ss
adc
sbb
and
adc
inc
or
xlat
jnp
paddd
mov
lret
dec
fs
push
lds
out
mov
les
add
push
popa
dec
lcall
outsb
sub
movl
sbb
or
adc
and
aas
sar
dec
add
bound
rorl
lahf
or
test
push
stos
pop
mov
sub
push
xchg
xchg
lcall
fiaddl
test
and
jns
sub
pop
jmp
mov
mov
enter
push
vmwrite
ret
bound
fdiv
push
inc
jecxz
add
jmp
icebp
jae
jns
add
push
in
mov
xor
lea
cmp
mov
into
dec
jnp
inc
or
je
leave
cmp
add
stos
js
pop
fsub
pop
or
dec
cmp
insl
push
lock
adc
adc
jno
hlt
or
lret
daa
sub
and
fisttpl
mov
pop
or
iret
mov
adc
je
fbstp
jecxz
adc
sbb
sub
movsb
jno
jg
add
cmp
add
leave
and
js
into
shrb
lea
and
mov
imul
not
xor
xor
xchg
inc
pop
mov
in
inc
pop
hlt
rcll
or
pop
or
xchg
dec
jbe
adc
push
pop
repz
cmp
push
fildl
scas
or
insl
daa
cmpsb
push
sbb
pop
mov
adc
mov
leave
xor
xor
jg
cmpsb
and
push
sbb
icebp
sbb
xlat
adc
dec
adc
out
cs
jl
pop
sti
or
bound
cltd
je
es
cmpsb
xchg
xor
pop
ss
sbb
cmpsb
test
mov
jmp
xchg
lcall
das
call
fs
cli
sbb
insb
sahf
push
xchg
addr16
push
or
in
sbb
xchg
mov
adc
or
enter
xchg
add
jnp
popf
popf
rorb
fists
or
insl
or
xchg
and
mov
pop
ljmp
cld
adc
xor
dec
mov
lea
cmp
xchg
xor
lea
xchg
and
mov
add
test
movb
ja
fdivrs
jle
mov
sub
shll
pop
scas
add
es
lds
adc
sub
dec
loopne
fistpll
nop
xchg
dec
jno
jns
cs
stos
push
jbe
mov
cmpsb
aas
adc
mov
icebp
mov
sub
inc
in
sbb
cmpsb
push
mov
cmc
sub
mov
imul
pop
scas
mov
sub
inc
pusha
les
sbb
sub
clc
jne
movsb
cltd
pop
push
push
dec
jo
fldpi
cmp
adc
cmp
pushf
aaa
out
shll
mov
popf
adc
data16
or
or
hlt
cmpsl
imul
xor
pop
outsb
sbb
xchg
xchg
lock
call
and
xchg
jecxz
add
ss
cmpsl
xchg
dec
stos
mov
pop
sti
push
xchg
mov
dec
add
bound
xorl
ljmp
negl
inc
clc
fisubrs
mov
xchg
cmc
mov
fmull
out
inc
xchg
pop
pop
and
in
out
popa
and
cwtl
movb
mov
sub
and
insb
pushf
mov
ljmp
xchg
enter
sub
aam
cli
mov
es
lcall
mov
mov
gs
dec
pop
mov
adc
nop
mov
inc
jl
push
imul
adc
inc
mov
cmpsb
push
jne
dec
in
mov
xor
pop
add
cmp
pop
mov
lea
aaa
call
pop
movsb
xchg
add
fists
push
push
daa
jmp
out
hlt
jns
stc
xor
sar
stos
mov
inc
leave
lea
or
dec
nop
sar
push
adc
adc
mov
mov
ds
mov
dec
xchg
in
cmp
test
mov
les
dec
fcmovbe
rclb
jl
push
aas
insb
cld
arpl
out
cmp
push
lea
jb
sub
movsb
icebp
inc
pop
js
lret
std
inc
push
leave
adc
dec
jp
jg
or
hlt
jo
mov
mov
out
call
cld
test
in
push
push
xchg
xor
jecxz
pop
rcll
stos
xor
gs
mov
jo
into
dec
mov
popf
ret
jnp
add
push
in
mov
sub
dec
outsl
mov
mov
loop
leave
xor
mov
dec
cmp
or
push
fldenv
bnd
lods
call
cmp
pop
sub
inc
scas
sti
and
dec
pop
stc
jno
and
dec
lock
mov
addb
addr16
inc
into
add
adc
push
mov
dec
push
inc
in
adc
and
pop
int
inc
pop
jb
in
std
cmp
insb
out
inc
sti
ss
sbb
jnp
push
les
mov
mov
add
cwtl
andl
jmp
in
xchg
inc
int3
inc
jbe
insb
leave
xchg
outsl
sarl
and
cmpsl
xor
inc
je
pop
movsb
mov
cli
shrl
movsb
mov
and
mov
pop
lods
call
dec
imul
mov
mov
inc
xor
movsl
push
popa
sahf
xor
cmpsb
or
jecxz
lahf
lds
jecxz
adc
xor
pop
push
push
lahf
push
mov
pop
push
inc
dec
roll
mov
dec
enter
mov
icebp
leave
xchg
ljmp
inc
out
iret
add
jge
inc
loopne
aas
sub
fcomp
cmp
jae
clc
pop
sarl
push
mov
les
loope
mov
lods
jns
push
fstpt
sub
push
pop
and
stos
scas
pop
and
sub
mov
leavew
xchg
cwtl
mov
fidivrl
add
fwait
xor
movsb
nop
dec
adc
or
call
stos
and
push
inc
mov
add
push
jo
inc
jb
sub
adc
sbb
xor
add
adc
scas
or
push
add
arpl
pop
pushf
loopne
push
add
dec
sbb
inc
in
inc
cmp
mov
ja
sub
inc
mull
xchg
call
fcompl
mov
mov
add
stos
jle
sbb
adc
sbb
add
fs
xchg
and
testl
fldt
notb
xor
pop
je
je
mov
push
jns
push
cmp
or
or
adc
cld
cmpsl
mov
mov
xor
scas
or
cmp
push
xor
xlat
ret
lcall
xor
fnsave
out
addl
and
cs
movsb
xchg
mov
lret
mov
inc
jl
sbb
xor
popa
jle
adc
gs
push
cmpsl
pop
mov
and
stc
bound
pop
fdivrs
pop
mov
sub
push
aaa
and
dec
mov
out
in
ret
xchg
cmp
int
xor
sub
call
cmp
inc
popf
add
jg
jae
xchg
add
neg
push
nop
rorb
sbb
sbb
push
add
lret
xchg
fs
adc
aad
sbb
and
mov
pop
push
daa
call
sbb
and
push
daa
pop
mov
jns
push
push
adc
pop
add
xchg
xchg
cwtl
mov
xor
inc
fsubrs
call
mov
sub
inc
mov
jbe
movsb
pop
call
xchg
inc
cmp
out
lds
xchg
lock
jg
pop
mov
xor
sarl
je
adc
call
ret
push
jl
and
push
sbb
inc
out
cwtl
dec
mov
lret
add
sti
sbb
mov
lea
push
dec
cld
push
or
lods
notb
nop
dec
xor
mov
sub
ljmp
addb
aam
cwtl
or
int
sahf
inc
cwtl
inc
shll
ja
xor
add
fwait
addr16
ja
or
out
daa
sbb
icebp
inc
fs
dec
das
or
repnz
jle
sub
xchg
mov
bound
sub
ja
insb
dec
mov
and
or
pop
cmp
pop
call
leave
cmp
adc
or
ja
mov
pop
mov
sub
or
ljmp
xchg
pop
jle
aas
addr16
popa
mov
add
cwtl
ficompl
lea
jmp
dec
pop
aam
je
lds
xor
pop
sbb
jmp
sti
add
push
sub
cmp
mov
sbb
adcb
sub
dec
cmp
lods
jmp
cmp
jnp
sub
lea
lret
xchg
lds
in
movsb
aam
faddl
sub
and
cltd
aam
in
mov
inc
les
sub
cmp
mov
test
ja
pop
es
mov
xchg
jg
fstl
mov
lods
cmp
ret
sub
pop
mov
ljmp
jmp
push
mov
test
lea
in
xchg
adcb
or
jb
xchg
add
cmp
push
cmc
adc
sbb
and
xor
mov
ljmp
mov
mov
push
push
in
and
xor
or
mov
mov
outsb
jmp
test
mov
sbb
mov
push
hlt
jb
in
add
gs
scas
loop
mov
ret
jge
subl
mov
push
shll
rcr
mov
js
jb
in
lret
sbb
pop
ffreep
push
in
fwait
sbb
outsl
incl
cmp
push
sti
ss
xor
and
xchg
lret
dec
jbe
addr16
and
mov
jge
push
mov
pop
fmull
call
daa
sbb
sub
cmpsb
push
push
mov
outsb
jg
out
in
sbb
inc
sbb
mov
xchg
or
xchg
dec
stos
aam
cmp
sbb
cmp
xchg
mov
cmp
xchg
xor
xchg
add
adc
loop
test
sahf
mov
inc
sub
inc
push
cmp
adc
inc
sbb
xchg
xchg
xor
das
lock
push
mov
cmp
jo
jae
sbb
xchg
adcb
shr
sbb
movsb
inc
fcompl
ljmp
fildl
arpl
cmpsb
lcall
jmp
pushf
lret
adc
xor
mov
cmp
sbb
inc
sbb
lock
mov
inc
fs
das
adc
adc
mov
lock
movsb
and
cmp
mov
xchg
jns
or
cmp
andb
movsb
adcl
stos
inc
or
sbb
pop
or
movsb
inc
dec
cltd
or
lock
cwtl
adc
cmp
or
sbb
pop
or
stos
jmp
xchg
dec
stos
xchg
or
dec
push
pop
ss
adc
mov
jge
sarl
inc
or
inc
push
aaa
repnz
fwait
cmpsl
jo
mov
push
pushw
stos
pop
cld
rcrl
and
jecxz
fcomp
loopne
adc
pop
mov
pop
pop
mov
xchg
mov
addr16
mov
lahf
xor
mov
dec
filds
cmpsb
adc
or
dec
pop
jl
inc
mov
xlat
cwtl
sbb
dec
xor
dec
scas
insb
sub
sbb
add
out
cld
mov
add
sbb
add
mov
fs
and
jo
jbe
lret
jo
xchg
adc
sub
pop
mov
lods
xor
call
mov
sub
cltd
jb
dec
enter
and
cmpsb
or
pushf
adc
daa
icebp
stos
dec
add
and
cmp
pop
xor
or
dec
inc
push
push
and
leave
cmp
cmp
fidivs
orb
add
call
es
notl
and
adc
push
sub
ret
inc
sbb
lods
mov
jle
push
mov
sbb
call
aas
mov
cmpsl
sub
repz
je
ja
and
ret
pop
adc
lock
and
mov
sub
rcll
andb
aad
clc
mov
cmp
add
mov
pop
hlt
fisubl
or
xchg
push
sub
jo
sub
ds
jbe
ds
pop
add
aaa
mov
stc
inc
mov
insl
pop
mov
xchg
lret
push
dec
ja
popf
arpl
lds
pop
stc
idivb
hlt
test
mov
mov
xchg
add
xchg
fsubrl
fidivs
cmp
jne
add
mov
dec
mov
mov
mov
jge
xchg
imul
xor
mov
out
sub
mov
inc
cmp
cmpsl
xchg
pusha
jne
dec
lahf
loope
push
and
test
cltd
mov
aas
fstpt
push
call
cmpsl
aad
stc
push
xchg
jb
or
or
daa
mov
mov
or
xor
push
sub
dec
xor
xor
ror
imul
jbe
lock
daa
xchg
cmp
je
jno
in
push
loopne
addb
pop
nopl
popf
outsl
repnz
inc
les
sbb
add
pop
lret
in
and
jl
ljmp
aad
xor
loopne
push
hlt
add
jecxz
js
ret
mov
adc
sub
nop
js
cmpl
cmp
add
lcall
cvtps2pd
pop
push
xorl
xlat
cltd
test
mov
mov
pop
int
mov
add
pushf
xorb
popa
mov
fbld
int3
loop
xor
and
ret
mov
popf
idivb
or
push
inc
int
mov
jb
cmpsl
enter
adc
out
enter
inc
and
mov
push
ss
sub
jae
mov
xchg
pop
sub
xor
cmp
or
dec
push
inc
push
dec
jo
mov
pop
mov
popf
jg
jae
jae
jecxz
xor
movsl
push
mov
pop
fadds
stos
fldenv
add
inc
das
call
inc
adc
sbb
jmp
push
test
call
xchg
imul
mov
sbb
adc
push
aam
push
and
mov
mov
pop
sahf
sub
cmp
fdivs
setl
movsl
and
cmp
sbb
je
adc
es
cmp
lcall
repz
pusha
cs
sub
or
sahf
enter
xor
dec
fs
js
daa
mulps
pop
push
enter
in
je
jno
mov
cmc
mov
sub
sbb
fs
inc
sub
jb
sub
sub
adc
adc
enter
aaa
sub
push
hlt
or
int
xchg
or
xor
push
mov
je
insb
dec
stc
insb
mov
push
adc
cmpsb
xchg
add
and
and
cmp
push
data16
cmpl
and
mov
lea
sbb
out
xor
or
mov
outsb
xor
and
jmp
dec
in
scas
jmp
loope
jae
repnz
dec
and
or
ret
int3
add
aam
dec
add
nop
push
cwtl
in
push
mov
mov
jmp
xor
test
cltd
enter
inc
mov
es
push
lret
xor
lret
mov
push
mov
in
testl
inc
std
leave
mov
inc
add
jl
adc
push
add
cld
mov
lock
add
out
adc
push
mov
or
pop
and
xor
shlb
dec
cmc
ljmp
inc
sub
or
loop
es
inc
fs
xchg
add
js
sub
sub
pop
adc
jp
daa
scas
lret
mov
repnz
int3
adc
leave
jnp
dec
inc
je
sub
decb
mov
inc
loope
fldenv
movsl
mov
inc
scas
loope,pt
stc
mov
lds
popa
fisubrs
xchg
mov
iret
jno
adc
pop
fmulp
add
aas
sbb
es
scas
sub
out
dec
cmp
and
sbb
fbld
and
adc
setl
xchg
std
stos
mov
and
ficoms
cld
lods
loop
in
orb
outsl
ja
and
shll
inc
mov
jno
outsb
xchg
icebp
lods
push
pushf
jg
dec
mov
sub
xchg
pop
stos
xchg
shlb
rorb
outsb
addl
je
dec
ret
fistpll
pop
mov
out
insl
xchg
mov
and
mov
push
movsl
lcall
rorb
pushf
pop
ret
push
pop
dec
or
or
ret
lea
adc
pop
insb
cmpsl
inc
lret
lret
out
sub
mov
cmp
add
das
mov
jbe
or
sub
mov
inc
jg
inc
or
cwtl
in
enter
mov
mov
fimuls
mov
out
cmpsl
ljmp
rorb
mov
mov
sbb
cmpsb
into
dec
jecxz
fs
push
sbb
lods
arpl
mov
mov
clc
movsb
pop
je
loopne
dec
adc
push
xor
call
adc
dec
push
adc
dec
mov
dec
cli
jp
xchg
mov
adc
and
mov
push
push
les
jae
lods
or
xor
mov
aam
mov
sti
add
stos
pop
xchg
jge
dec
in
jns
dec
pop
cld
aam
pop
jmp
and
stc
lods
imul
adc
push
mov
gs
mov
cwtl
xor
inc
adc
mov
adc
cwtl
lret
bnd
testb
dec
inc
ficompl
sub
dec
lcall
int
push
movsl
mov
xchg
mov
fwait
test
aas
xchg
xchg
push
pop
dec
mov
ret
movsb
sahf
dec
scas
repz
ja
sbb
popf
and
cmp
pop
sbb
sarl
push
pop
or
test
fs
lret
in
mov
sub
movsl
xchg
or
push
cmc
call
cmp
mov
dec
push
mov
lock
adc
popf
dec
push
mov
dec
and
push
jg
inc
jb
dec
push
dec
adc
dec
jp
fwait
pop
mov
adc
rcl
dec
cli
push
sub
mov
push
lcall
out
lods
lcall
cltd
js
adcb
sub
jne
jne
jp
xor
and
inc
loop
aam
xor
call
xlat
sti
lods
sbb
jb
mov
mov
push
mov
xchg
arpl
test
lret
js
mov
push
xchg
scas
mov
dec
mov
sub
sub
xchg
fwait
jp
sub
daa
icebp
xorb
and
jno
adc
xor
xchg
cmp
push
std
pushf
sbb
shl
add
and
imul
inc
sbb
xchg
xor
sub
pop
jge
add
fistpl
adc
inc
cmp
sbb
cmp
inc
dec
jae
push
inc
roll
xchg
aam
popf
xchg
icebp
sarb
mov
cmp
mov
bound
push
mov
xchg
xor
std
bound
push
dec
xlat
xchg
sbbl
fldenv
aam
dec
jnp
ds
mov
daa
cmp
and
cmp
nop
decb
stos
fmull
into
lods
or
data16
add
nop
fisubl
mov
inc
daa
stos
clc
mov
xor
mov
and
mov
or
shrd
dec
jo
inc
xchg
push
je
push
nop
movsb
xchg
sbb
lret
les
subl
shl
arpl
dec
outsl
fildl
jp
test
push
sti
push
fisubrs
lods
add
inc
xor
push
stos
mov
add
sub
fiaddl
test
sbb
cld
mov
and
xchg
mov
lret
dec
mov
add
das
xchg
or
ret
js
loope
sahf
divl
cmp
mov
push
push
aas
fcmovbe
cmc
lret
mov
scas
dec
in
fidivl
xor
push
cmc
adc
pop
mov
mov
pop
imul
lods
or
fdivr
movsb
cmpsl
xchg
mov
ss
push
je
test
test
loopne
rorb
jbe
mov
pop
test
test
fsubrp
idivl
push
fs
add
movsl
sbb
ret
mov
call
mov
add
mov
inc
xchg
push
xor
dec
jne
jp
adc
add
pop
sbb
movsl
push
pop
out
push
cmp
or
fiaddl
aas
dec
shll
scas
pop
testl
push
es
orl
pop
es
add
test
mov
sub
in
inc
hlt
jb
jns
xchg
add
mov
mov
cmp
add
pop
loopne
xor
adc
xor
and
add
inc
xor
lret
out
pop
repz
adc
sub
or
shrl
xor
adc
pop
cmp
into
push
arpl
pop
hlt
cld
enter
jne
or
cli
xor
ss
bound
cmp
xor
dec
roll
jae
xor
das
stc
sbb
mov
and
xlat
popa
or
cltd
pop
in
cmp
imul
push
mov
leave
push
and
fs
inc
inc
and
adc
add
push
out
jp
sbb
add
clc
out
xor
lock
lea
es
and
in
push
sbb
adc
push
je
jae
xor
pop
push
subl
bound
and
push
aaa
and
in
and
pop
mov
mov
sbb
push
dec
sbb
push
mov
movsl
mov
arpl
sahf
fldenv
aad
pop
sbb
jb
call
dec
je
or
in
jns
xor
sahf
repz
stos
pusha
js
pop
stos
sub
or
out
jmp
nop
cs
test
xlat
clc
outsl
movsb
jns
out
loopne
mov
aam
dec
dec
sub
cltd
testb
dec
inc
or
mov
imul
add
in
inc
mov
adc
sahf
insb
sbbb
adc
mov
mov
inc
mov
mov
or
test
cmp
adc
mov
mov
dec
add
and
xor
mov
popf
out
sub
mov
popa
jno
arpl
mov
mov
rcll
shrl
ret
xor
sbb
aaa
jne
push
sbb
sub
les
fidivrl
jo
or
sub
inc
or
sbb
es
aad
inc
out
icebp
pop
call
lret
cltd
mov
mov
es
ljmp
lods
fnsave
cmc
mov
and
out
push
mov
mov
jmp
inc
int3
add
cmpsl
bound
push
jge
push
mov
ret
sub
sbb
rorb
lds
inc
call
popf
mov
jecxz
sbb
ret
je
lahf
mov
jo
jns
stc
and
dec
cwtl
sbb
adcl
pop
adc
sbb
mov
rcrb
outsl
je
xor
cmpsb
mov
ja
add
das
add
mov
jecxz
adc
fisubl
lret
add
aaa
test
inc
push
sbb
xor
and
and
jmp
mov
aad
cmp
xchg
mov
jle
dec
or
add
jecxz
push
xchg
xchg
loop
mov
or
sbb
out
loope
jo
pop
xchg
call
shr
aaa
jl
mov
mov
bswap
cltd
mov
xor
pop
inc
inc
push
mov
xchg
test
mov
jbe
inc
testb
cs
movsb
jne
call
xchg
dec
in
xor
mov
sahf
push
lods
xor
or
sbb
fdivrs
xchg
pop
cmp
bound
xor
or
mov
and
add
xchg
pop
std
mov
fstps
mov
push
mov
aam
bound
call
mov
xlat
or
outsw
cli
mov
addl
icebp
xor
call
xchg
xchg
cmpl
hlt
test
dec
add
cmc
dec
test
sub
les
sub
or
cmp
cmp
jbe
mov
gs
mov
sahf
jmp
mov
inc
mov
sti
in
inc
out
pop
jnp
and
ja
notl
mov
je
mov
cmp
mov
sub
clc
push
call
push
mov
pop
push
adc
xor
add
inc
mov
or
jo
dec
or
icebp
push
jmp
cld
jmp
cmp
popf
xchg
mov
lock
aaa
ret
fistpl
xchg
sbb
nop
mov
aam
loop
loop
aam
and
jmp
movb
ret
add
sbb
jb
xchg
jecxz
xor
sbb
jmp
cwtl
pop
add
dec
out
pop
jl
mov
dec
xor
sbb
dec
cli
je
test
inc
xchg
and
or
and
push
and
and
call
ds
adc
cld
sub
dec
or
push
or
adc
sar
adc
or
in
adc
push
cmp
scas
ds
cmc
shl
adc
mov
mov
sti
cs
or
push
inc
mov
cwtl
stos
mov
add
movsl
call
lods
mov
aas
mov
js
andb
aas
mov
ja
add
push
sbb
pop
out
dec
xchg
jnp
xor
jno
adc
adc
aad
es
and
add
adc
push
inc
push
mov
sub
sbb
cmpsl
int3
clc
jmp
aaa
sbbb
cmp
and
mov
push
mov
adc
inc
sti
or
push
pop
sub
sub
std
mov
shl
stos
dec
in
daa
fneni(8087
cmp
jg
cltd
mov
call
and
ret
inc
call
mov
pop
pop
inc
test
aas
adc
outsb
sbb
stos
mov
mov
inc
inc
cmpsb
or
lds
unpcklps
jno
dec
sub
je
push
ds
pushf
aas
xor
jecxz
inc
and
mov
fsts
je
dec
jmp
cmp
js
and
adc
jae
xchg
ja
xlat
stc
shll
je
lret
popf
in
insl
fcmove
mov
arpl
aaa
imul
das
fildl
call
lock
inc
icebp
mov
insl
test
jb
and
stos
jp
lahf
push
mov
lcall
jge
and
nop
jg
call
test
loopne
loopne
inc
punpckldq
sbbl
das
insb
push
loop
enter
loope
js
cmp
nop
and
add
jne
or
fs
test
pop
fldenv
loopne
jmp
or
inc
mov
retw
insl
adc
int
nop
arpl
push
mov
xor
cmc
jl
dec
adc
xchg
cld
mov
sbb
repnz
call
and
add
inc
ljmp
xchg
mov
lods
mov
mov
movsl
xchg
dec
pop
pop
mov
fmuls
sbb
mov
pop
sub
xor
adc
dec
lcall
and
insl
xchg
mov
mov
stc
push
cmp
push
pop
pop
push
ret
js
mov
arpl
pop
test
add
lcall
inc
jno
mov
add
shr
leave
stos
stos
gs
or
jo
cmpsb
adc
scas
adc
sub
clc
jno
adc
adc
fmulp
and
mov
pusha
xchg
ja,pt
cld
loope
in
mov
pop
and
fcoms
cli
cmc
xchg
add
out
dec
mov
xor
mov
imul
jno
adcb
daa
leave
ret
fldt
call
mov
jge
inc
xchg
mov
mov
shrb
push
mov
out
push
cmp
in
lods
sbb
mov
mov
lretw
inc
mov
pushf
xor
int
xchg
fnstenv
xchg
sub
xchg
jmp
push
dec
cmpsb
inc
outsb
adc
aad
lret
or
popf
mov
and
adcb
mov
ds
pop
push
cmp
pushf
jp
mov
sub
xor
push
insl
pop
adc
jb
adc
jno
int3
or
mov
add
es
dec
rcll
ret
es
aad
jae
jl
dec
mov
lahf
icebp
lock
mov
loope
es
sub
fnstenv
sar
or
dec
ret
test
dec
adc
fwait
sub
into
mov
nop
xor
sub
push
sbbl
push
push
daa
and
stc
ss
movsb
jmp
add
or
and
or
pop
mov
int
xchg
call
daa
gs
or
jmp
call
inc
and
xor
mov
xchg
int3
and
stos
into
sahf
cwtl
cmc
addr16
repz
pop
jge
aad
push
loope
sub
and
in
movsl
add
cld
mov
dec
adc
ficomps
cmp
push
outsb
data16
es
in
js
xchg
stc
fimull
xor
adc
dec
cli
xor
test
loop
xor
dec
fcompl
test
mov
mov
loope
sub
out
pusha
sbb
mov
call
sub
push
mov
mov
push
mov
mov
adc
mov
into
dec
dec
add
aas
and
mov
pusha
jbe
rcrl
mov
les
rorl
mov
ljmp
leave
lds
or
cmp
pop
push
fdivrl
xchg
aas
sbb
and
and
mov
icebp
adc
jecxz
dec
jns
and
test
repz
cmp
imul
aas
jmp
outsb
mov
jae
mov
mov
jbe
scas
popf
ret
in
in
cli
andl
and
cmpsb
pop
loopne
pop
push
xchg
mov
push
cmp
orb
or
pop
or
xor
lea
xor
and
adc
xor
movsl
leave
adc
mov
push
inc
mov
cltd
movsl
and
jbe
push
stc
jns
sbb
fs
fstpt
and
dec
sbbl
adc
call
mov
dec
sbb
lahf
test
or
adc
ljmp
adc
in
inc
inc
xchg
ret
pop
fidivs
cmpsl
in
cltd
add
lret
ds
leave
cmp
jbe
xor
inc
add
loopne
dec
push
icebp
pusha
push
in
dec
lahf
sub
test
sub
mov
push
and
adc
and
jge
mov
es
scas
pop
fidivrl
sbb
movsl
incb
cmp
and
adcb
jg
mov
shll
sahf
xchg
push
xchg
pop
push
fldenv
loopne
icebp
data16
add
repz
adc
or
lret
sub
rorl
xor
test
adc
pushl
call
test
sub
or
sti
push
pop
xor
adc
and
ds
dec
mov
cmpsl
outsb
jne
xchg
pop
and
pusha
ljmp
push
push
cmp
jmp
iret
sahf
sbb
and
mov
and
jl
neg
test
imul
cmc
and
and
mov
push
lret
jecxz
xchg
out
call
not
mov
adc
repnz
iret
jmp
pop
mov
or
test
test
shll
xchg
xchg
push
or
xlat
xchg
push
mov
repz
lock
mov
xchg
dec
push
mov
mov
mov
ret
sbb
lds
iret
hlt
mov
es
je
addr16
pop
fwait
mov
outsl
dec
xor
popf
cmpsl
pushf
insl
pop
scas
push
jbe
mov
mov
push
cwtl
xor
inc
add
sub
mov
mov
xor
and
js
jecxz
dec
inc
std
xor
xchg
push
mov
out
or
or
or
clc
jo
pop
add
mov
sbb
lods
add
jnp
jmp
push
dec
sub
sub
xchg
ljmp
sarb
ss
mov
add
mov
loope
or
jnp
in
or
xor
ljmp
inc
rcr
mov
lahf
inc
push
mov
mov
movb
xor
faddl
mov
mov
imul
xor
lock
sbb
cmc
or
mov
add
popa
stc
call
pop
sub
inc
pop
scas
mov
and
mov
ljmp
shrb
daa
mov
pop
sub
push
repnz
icebp
push
imul
sub
pop
pop
outsl
mov
ss
sbbb
or
jmp
mov
and
cwtl
out
mov
pop
cli
xchg
mov
aad
mov
dec
fdivl
mov
mov
ss
in
out
and
out
popa
adc
push
sub
lret
ljmp
mov
cmp
mov
or
cmp
aaa
test
lds
lret
insb
mov
xor
imul
mov
fidivrl
jecxz
pop
or
cmp
test
imul
popf
push
mov
stc
fbld
insb
ret
in
adc
mov
dec
call
xchg
and
dec
adcb
pop
sbb
je
xor
xchg
push
dec
dec
lcall
dec
pop
xor
mov
shrl
les
sarb
into
cmp
inc
push
movsl
jns
sub
and
sbb
inc
es
mov
pop
and
mov
adc
add
jg
and
add
xchg
in
bound
test
xchg
lds
hlt
and
xor
test
cmp
lods
cmp
lret
or
ret
pop
xor
repz
jno
icebp
sbb
mov
add
and
and
xchg
je
push
movsb
icebp
or
popf
lahf
dec
dec
insl
scas
sti
xchg
testb
dec
dec
int3
and
cmpsb
or
sub
nop
popa
cltd
and
and
xor
pop
jae
shrb
call
je
mov
cmp
psllq
pop
mov
call
sbb
xchg
cwtl
and
add
bound
add
mov
or
clc
cmpsb
outsb
mov
mov
jge
fsincos
movsl
pop
xchg
jnp
xchg
ret
adc
sti
outsb
or
jns
cmp
daa
cmp
mov
cmpsb
imul
dec
leave
and
xchg
mov
mov
add
mov
jge
pusha
rcll
lock
arpl
xchg
sbb
inc
aaa
mov
adc
pop
inc
jmp
add
ds
or
in
test
pop
xor
aam
push
mov
add
pop
inc
loope
xor
into
and
add
pop
cmc
lds
movsb
push
nop
outsb
add
aaa
or
inc
cmp
or
call
fmuls
pop
sbbl
xchg
jmp
jno
cmp
pop
xor
outsb
lods
sbb
add
push
inc
mov
sub
inc
mov
filds
popf
inc
stc
mov
push
fldcw
adc
cld
mov
clc
mov
add
sub
add
scas
mov
add
jg
mov
and
push
jns
rorl
xchg
cli
leave
dec
cmp
inc
mov
cmp
jecxz
xchg
sbb
cld
adc
es
pop
inc
imul
scas
inc
or
mov
cmc
xor
mov
dec
dec
bound
in
mov
leave
in
pop
add
push
ja
movsl
xor
add
xchg
ja
rcll
mov
es
ret
xlat
mov
push
xor
out
jne
aaa
dec
jg
push
lcall
mov
std
daa
jmp
xchg
fsubl
pop
push
dec
xor
outsl
dec
movsl
dec
inc
pop
lock
fisubl
ret
mov
lock
ljmp
lods
scas
and
inc
movsl
outsl
movsb
jo
or
jp
les
push
and
jle
lret
push
pusha
mov
fldenv
cmp
in
xor
and
jns
pop
jl
imul
pop
jl
xor
and
ffreep
add
loop
push
mov
jl
dec
ss
fisttps
sbb
mov
loope
add
lea
add
imul
rclb
add
pop
fists
add
leave
nop
sbb
mov
mov
pop
test
jno
push
dec
sbb
out
push
imul
mov
or
xchg
jle
cmp
push
das
pop
daa
verr
cmpsb
push
je
push
roll
pop
or
mov
leave
insb
pop
pop
pop
cli
imul
pusha
ljmp
xchg
push
stos
mov
je
lods
dec
in
and
andb
lock
in
pop
inc
inc
lcall
mov
cmp
call
ficomps
xchg
jns
inc
xor
and
sbb
lds
out
push
cmpsl
or
push
push
xchg
loope
adc
les
xor
dec
pop
jne
push
fistpl
scas
add
call
push
lods
mov
dec
pop
dec
imul
inc
mov
cmp
add
icebp
fnstenv
inc
dec
adcb
mov
fildl
ss
mov
or
les
pop
in
xchg
repnz
cmp
xor
or
in
ja
dec
adc
jge
or
or
cwtl
fistl
gs
mov
xor
mov
push
enter
mov
stos
cwtl
lods
loop
mov
test
push
jmp
dec
adc
or
andl
rep
repnz
das
mov
pop
pop
adc
xchg
out
sar
jg
cwtl
lock
adc
mov
add
and
sbb
dec
cmp
mov
orb
cmpsl
call
xchg
pop
cmc
pop
jg
repz
ja
adc
addb
shlb
and
add
cmpsl
fwait
cmpsl
xor
push
mov
push
dec
jp
mov
popa
sbb
xchg
jae
jb
push
sub
mov
pushl
push
push
jo
push
sub
loopne
xchg
test
pop
xlat
xchg
mov
pusha
aam
loope
sub
jne
xchg
inc
inc
repnz
inc
push
dec
nop
cmpsl
movsl
and
or
gs
popf
js
xor
push
das
push
jmp
in
ret
add
or
or
sub
inc
lods
pop
les
pop
inc
or
jo
add
jo
add
pusha
imul
sti
lods
mov
sub
pop
add
popl
call
fucom
sbb
sub
in
das
int
mov
divb
xchg
xor
jno
sub
cmp
sbb
fnstenv
int
int3
cmp
cmpsb
mov
and
shlb
xchg
std
and
mov
stos
fcomps
jle
sub
adcb
xchg
xchg
push
sbbb
mov
or
pop
dec
xor
jmp
popa
fwait
rclb
js
incl
add
lea
stos
mov
mov
mov
xor
test
ss
or
push
andl
cmp
je
xor
cmp
cmp
fs
lret
dec
or
inc
cmpsb
adc
out
shrl
xor
xor
mov
push
xlat
and
adc
push
mov
leave
pop
push
xor
fnstsw
inc
cmpsl
and
xor
call
xor
je
int3
sbb
or
jmp
addl
in
shll
mov
sbb
sub
aam
mov
xor
cmp
dec
in
jp
jmp
test
movsb
push
mov
mov
add
mov
data16
dec
repz
dec
sbb
sub
mov
cmc
dec
sbb
divl
das
stos
lea
aaa
subl
push
data16
sbb
stos
lret
push
mov
scas
jmp
rolb
mov
call
add
ficoml
jecxz
inc
xchg
pop
jb
repz
inc
mov
lret
push
cs
sahf
sbb
xchg
xor
mov
cwtl
mov
aaa
loop
and
sbb
sub
mov
inc
jmp
dec
repnz
xchg
lds
mov
arpl
daa
add
push
jg
lret
daa
mov
cmc
testl
jne
xchg
mov
push
cltd
scas
test
leave
mov
js
and
out
aad
dec
sub
scas
adc
lods
les
cmpsb
sbb
fcompl
idivl
push
pop
mov
xchg
sub
dec
cmp
rolb
cmp
enter
dec
std
push
dec
cltd
lds
pop
shll
adc
leave
mov
push
add
inc
fs
stc
in
test
inc
movsb
int3
aad
out
ret
push
jmp
not
and
lret
jnp
test
loope
aaa
inc
cmp
dec
aas
cmpsl
in
sub
mov
out
push
push
sbb
sti
push
mov
mov
pop
test
shlb
mov
scas
mov
cmp
mov
sbb
push
hlt
jno
cli
adc
push
fildll
inc
xchg
jnp
xor
out
push
jb
xchg
cmp
sbb
leave
and
inc
imul
mov
outsl
jp
sbb
loope
inc
fdivs
add
ss
add
sbb
xor
subl
repnz
fsubr
clc
je
mov
faddl
add
mov
test
xchg
inc
mov
add
test
daa
btc
xor
mov
repnz
stos
lcall
fisttpll
sub
mov
clc
int3
add
sbb
pusha
cld
mov
mov
sti
mov
lods
mov
adc
mov
ds
fistps
jl
dec
push
add
std
sub
push
cmpsb
sbb
pop
dec
mov
adcb
pop
mov
inc
cmp
sub
mov
ds
adc
aam
mov
sub
je
lret
call
adc
or
dec
or
lock
aaa
cmp
dec
push
cmp
loope
sub
inc
loope
mov
fmuls
mov
mov
and
test
repnz
dec
xchg
and
xor
xor
adc
pop
push
int3
cmpl
push
sbb
sub
xchg
enter
dec
cld
mov
xor
pop
lods
cmp
int3
sub
adc
icebp
cwtl
ret
sbb
js
adc
jne
sub
sub
std
cmpsl
loopne
mov
scas
sti
negb
fs
or
test
test
subl
stos
lods
adc
out
int
xorl
mov
aas
xchg
and
ds
pop
ret
enter
imul
ds
cmp
xchg
dec
dec
add
pop
jbe
or
test
xor
enter
mov
fwait
mov
pusha
nop
adc
mov
and
jmp
dec
mov
rorb
jge
push
or
mov
dec
add
or
stos
add
nop
adc
jnp
inc
pushf
cmp
or
icebp
add
ret
or
and
loop
and
data16
add
mov
mov
adcb
das
aam
push
cld
ljmp
pop
push
test
or
sub
aam
stc
sarb
repz
iret
out
jne
lods
out
mov
loope
popf
xor
addr16
cmp
add
fwait
mov
hlt
test
stc
xor
lods
bound
and
cs
cmp
cmp
xchg
icebp
imul
jmp
adcb
rolb
dec
xor
sub
popa
add
cmp
xchg
pop
paddsw
jg
call
inc
or
adc
adc
mov
push
push
mov
xor
les
movsb
fucomip
pop
xchg
aam
sbb
arpl
adc
repnz
mov
mov
jno
add
ljmp
xor
pop
idivb
xchg
scas
and
add
jg
mov
mov
in
popf
scas
addr16
xchg
pop
rolb
or
sub
movsl
test
data16
dec
jmp
out
outsl
jbe
adc
mov
fwait
mov
inc
jg
mov
cmp
jge
addr16
test
repnz
std
test
leave
mov
stos
cli
dec
or
add
add
or
les
movl
popf
rorb
into
into
mov
push
or
addl
xchg
js
clc
fimuls
and
push
lret
xorl
jb
pop
or
aad
cli
ficoms
mov
mov
lock
xor
jle
cmp
mov
pop
in
aam
adc
aas
xor
and
or
les
lret
adc
xor
adc
cwtl
bound
subb
shll
sbb
mov
jmp
mov
push
xor
pop
in
xor
test
push
xor
je
jne
test
mov
outsb
jb
xchg
imul
mov
xlat
loope
test
aad
sub
mov
daa
jmp
movsl
test
cmp
je
push
dec
mov
das
int3
dec
jae
cmc
mov
jmp
lcall
push
pop
pop
idivb
pushw
inc
call
or
or
pop
add
bound
pop
inc
cld
adc
cmp
dec
cmc
push
pop
out
pop
and
es
mov
pusha
je
xchg
mov
pop
mov
test
xchg
sub
dec
jo
into
and
aam
lock
mov
pushf
pop
jns
jecxz
or
mov
add
jecxz
mov
ja
and
mov
push
imul
adc
mov
xchg
cmp
test
sbb
add
rcll
daa
jne
dec
sub
pop
popf
xchg
xchg
bound
inc
xchg
outsb
xlat
hlt
dec
and
push
mov
pop
scas
in
sahf
js
aad
cli
shlb
nop
in
in
fistpl
mov
daa
mov
std
xchg
out
push
mov
mov
sub
addb
and
mov
dec
jae
sti
jbe
cmpsl
scas
aad
stc
cmpsb
int
cltd
mov
das
inc
or
into
andl
movsl
xor
add
ljmp
aam
sarl
mov
xor
push
jmp
in
cmp
movb
inc
aad
test
inc
or
pop
jmp
and
pop
mov
and
aaa
xchg
rclb
cmp
jl
sub
xlat
pop
xor
mov
es
xor
mov
aas
ret
push
cmp
shll
mov
gs
pop
pop
adc
into
jmp
pop
icebp
xor
shlb
jmp
bound
xor
push
jnp
sti
add
int
xor
je
adcb
xchg
mov
sbb
repnz
pusha
loope
adc
call
sbb
jae
out
in
jb
in
inc
jp
enter
pop
push
cmpb
cwtl
sahf
xchg
xchg
push
xor
das
sbb
xchg
daa
jne
push
jg
icebp
out
add
mov
scas
ficoms
xchg
pop
ret
or
xor
scas
mov
cmp
jbe
lock
fisttps
lcall
sahf
je
sub
xor
aas
movsl
rolb
sbb
pop
stc
pop
cmp
xchg
pop
mov
in
inc
mov
push
mov
or
or
cs
pmuludq
mul
stos
inc
jbe
jmp
xchg
or
push
lods
pop
icebp
lret
pop
and
jb
in
hlt
pop
js
clc
adc
divb
push
daa
rcrb
andl
mov
outsb
push
sbb
inc
sbb
cwtl
push
jg
pop
fcoml
enter
andb
js
inc
or
andl
nop
pushf
sbb
xchg
cs
dec
arpl
xor
push
push
cmp
sbb
adc
push
stos
xor
aas
and
and
mov
or
leave
or
scas
ficoml
ret
dec
in
push
insb
ja
inc
push
cwtl
jl
fwait
mov
xchg
fistpl
xor
cld
loope
jle
clc
mov
nop
sbb
test
sub
in
cwtl
xchg
add
mov
push
mov
pusha
inc
fildll
sbb
js
inc
cmp
loopne
xchg
xchg
repz
add
sub
pop
lods
int
dec
sbb
mov
mov
ffreep
mov
movsl
ja
xchg
gs
mov
es
adc
fmuls
adc
or
ja
addb
pop
or
repnz
ret
cmp
push
clc
inc
in
popa
and
mov
bound
pop
outsl
cltd
sub
inc
scas
or
in
stc
inc
jp
mov
call
aaa
sub
iret
cmp
adcb
sahf
cmp
jmp
cwtl
jl
std
cmpb
xchg
xor
push
lods
mov
jl
cwtl
cmc
sub
sub
jle
pusha
sub
test
mov
jl
mov
mov
mov
and
push
in
lea
aaa
icebp
iret
push
dec
jecxz
fdiv
ss
lds
leave
lea
ret
xor
les
jge
inc
imul
mov
std
popa
cmp
and
xchg
push
sahf
mov
jmp
xor
xor
pop
iret
dec
fs
inc
mov
adc
ss
popf
test
pop
repnz
add
mov
mov
jmp
int
clc
and
xlat
xchg
sub
mov
pop
scas
pop
push
test
mov
imul
mov
popa
sbb
dec
pop
add
adc
sub
xor
fisubs
in
sahf
sub
adc
pop
mov
stc
call
std
jns
push
push
mov
mov
hlt
or
lret
mov
into
inc
or
out
mov
mov
pop
or
push
sub
sti
jge
ja
dec
mov
sub
xor
ret
xchg
adc
or
sub
test
data16
sub
rcr
add
lret
sbb
pop
in
cld
or
in
je
mov
cwtl
int3
jbe
mov
xor
gs
and
dec
mov
jg
xor
xchg
mov
std
fisttps
inc
push
clc
mov
jae
xchg
arpl
jge
ficompl
jns
cmp
stc
mov
mov
push
imul
popf
clc
xorb
fistl
adc
mov
mov
xor
mov
addr16
jmp
pop
cmp
and
test
jp
xchg
rclb
pop
inc
or
pop
ror
sub
mov
jp
loop
ja
and
cmp
push
outsb
cld
add
mov
std
cmp
inc
push
lock
inc
sub
push
add
das
std
shll
fstp
es
cmp
sub
cmpsb
imul
mov
inc
shr
cmpsb
pop
xchg
jmp
fdivl
pop
ja
push
idivl
xor
jl
lcall
xchg
repz
and
daa
adc
stos
add
pop
rorl
xor
mov
movsb
sub
pop
imul
add
mov
dec
aaa
rcrb
push
add
in
add
xchg
xchg
mov
add
mov
mov
cwtl
add
sbb
ret
cmp
ja
push
ja
cmp
shl
xorl
sti
and
push
adc
int
loope
fs
xor
jg
jp
arpl
push
adc
ret
inc
add
insb
inc
add
mov
add
in
sbbl
lods
cmc
sub
movsb
test
inc
int
xor
mov
mov
push
or
jne
lcall
pop
jno
pop
filds
sub
sub
mov
lret
dec
pusha
fldcw
cmp
cmp
push
loop
mov
adc
bound
movsb
sub
add
push
pusha
pop
cmpsb
adcb
dec
mov
mov
jl
mov
mov
test
inc
push
lods
push
mov
xor
xor
andps
and
adcl
and
adc
pop
sub
mov
enter
pop
xchg
movsl
je
dec
call
insl
addr16
adc
pop
mov
imul
cmp
push
rcrb
xchg
mov
dec
mov
scas
inc
xor
mov
ja
pop
imul
inc
stos
outsb
adc
ja
xchg
repnz
dec
xchg
sarb
mov
fs
sti
sbb
ss
fcompl
je
cmp
hlt
scas
mov
jl
daa
push
fidivs
push
mov
adc
arpl
fists
sub
pop
pop
inc
cmc
adc
xor
cmp
and
mov
test
or
xchg
xchg
in
call
cltd
xchg
shlb
inc
jecxz
cmc
imul
xchg
add
aad
cmp
xor
cmp
sub
aas
and
into
bound
ret
adc
sub
jl
push
dec
pop
loope
dec
negl
push
mov
jno
rcrb
cmp
jne
shrb
lds
jmp
jnp,pn
test
lea
mov
xor
jmp
ds
les
sub
dec
and
push
adc
or
aad
scas
scas
pop
push
movsb
jg
addl
adc
subb
jns
dec
mov
mov
lds
popa
ret
mov
sub
int3
mov
icebp
sbb
xor
roll
cmpsb
ds
and
in
in
sub
mov
cmp
adc
leave
ret
and
jae
push
jno
stc
mov
lret
jp
dec
adc
mov
mov
and
mov
sar
pop
cmp
sbb
ds
mov
je
or
imul
mov
cmp
push
idiv
fldenv
xchg
pop
xchg
sbb
lds
orl
sub
call
adc
pop
pop
sub
shrl
gs
adc
lcall
enter
clc
neg
push
clc
mov
inc
lds
or
add
xchg
or
arpl
mov
xor
or
pop
mov
push
or
adc
mov
or
push
dec
mov
push
jecxz
pop
jg
xchg
sbb
cmp
roll
xchg
dec
std
mov
addr16
cmp
dec
cmp
sbb
jae
shlb
mov
mov
push
outsl
xor
leave
imul
xlat
cmp
cmp
insl
mov
mov
imul
dec
add
push
out
or
hlt
scas
jne
or
dec
push
fildl
je
and
es
pop
andb
adc
dec
mov
jnp
jo
adc
mov
ljmp
jbe
pop
sahf
outsb
out
add
adc
aad
inc
adc
popf
enter
mov
mov
fnstcw
imul
mov
cmpsl
add
lret
pusha
leave
add
and
das
bound
fstpl
test
or
cs
call
mov
mov
dec
pop
mov
cmp
out
cmpsl
or
xor
mov
or
sub
inc
fcomp
jbe
add
inc
pop
daa
cmp
mov
sub
daa
dec
or
xchg
stos
pop
imul
cmp
mov
mov
fs
in
jbe
mov
inc
fisubrs
pop
and
sub
push
icebp
or
sysexit
jbe
test
and
push
sbb
pop
insl
or
faddl
adc
loopne
stos
inc
sub
cmp
push
and
add
jb
mov
shrl
jmp
pop
pop
ret
scas
xchg
adc
cmp
lea
cli
shrl
push
mov
adc
jmp
jg
out
and
bound
cmp
mov
xchg
movsb
cs
into
inc
xor
test
cmp
sbb
cmp
adc
icebp
lret
push
adc
xchg
lret
daa
dec
fstpt
bound
adc
jge
pushf
pop
mov
in
xchg
jbe
mov
push
jns
cltd
xor
or
dec
cmc
mov
cmp
xor
dec
aaa
movsb
push
call
adc
push
jo
mov
and
int
jmp
jle
xchg
pop
out
cmpb
sub
insb
arpl
pop
and
pusha
std
pop
dec
and
call
loope
xlat
stos
push
mov
sub
jmp
repnz
push
sub
fs
sbb
lods
int3
mov
mov
jne
testl
mov
mov
in
lret
jo
inc
push
jae
ds
iret
xor
xchg
mov
push
push
popa
call
add
test
pop
and
aad
xor
shlb
sbb
push
test
or
xchg
test
rcrl
ret
int
outsb
dec
jno
sbb
daa
ja
inc
jp
inc
xchg
mov
jae
fs
stos
das
dec
mov
xchg
fs
and
sub
add
pusha
cmpsl
adcl
xchg
test
call
dec
mov
xor
inc
xor
es
cmc
mov
inc
scas
inc
adc
xor
nop
xor
lods
mov
sbb
jl
pop
jge
repnz
mov
lret
pop
enter
cmp
mov
mov
roll
sbb
add
clc
mov
popf
movsb
scas
jbe,pt
and
jnp
mov
ja
mov
or
adc
lret
sbbb
inc
mov
or
lret
movl
int
and
jne
push
leave
xchg
rsqrtps
clc
and
jecxz
pop
outsl
xchg
stc
xchg
daa
sub
pop
rolb
lahf
xchg
lret
ret
add
lret
fsts
loopne
arpl
pop
outsb
add
lcall
and
inc
adc
adc
dec
ret
inc
jb
scas
jnp
hlt
rcrb
pop
insb
ljmp
dec
cmc
insl
mov
or
icebp
push
jae
jmp
mov
sahf
lret
inc
sahf
mov
add
fsubrl
add
scas
jne
idivb
lods
jg
pushf
fsubr
inc
push
push
sti
dec
xchg
xchg
ret
cmp
inc
adc
test
jl
aaa
mov
lret
cmp
dec
pop
pop
js
hlt
loop
repz
jmp
imul
inc
and
pop
mov
sub
ja
outsl
lahf
xchg
lret
xor
daa
das
into
call
ds
in
in
jbe
js
push
jle
inc
ss
push
push
and
out
std
mov
jb
mov
imul
inc
add
add
pop
pop
in
cmp
dec
adc
outsl
sbbb
sub
movsl
xchg
adc
mov
xor
inc
adc
dec
xor
and
divl
not
arpl
sbb
sub
xchg
leave
pop
mov
fwait
mov
repz
pop
dec
sahf
fisubrs
xor
add
rcll
sbbl
stos
jle
cmp
push
andl
mov
stos
cmp
inc
lock
stos
test
add
xor
inc
lret
je
addr16
mov
std
andl
icebp
adc
add
mov
aaa
adc
decb
fcompl
add
mov
pushf
popf
test
das
xor
out
and
in
push
cmpsb
shlb
fs
pushf
scas
loope
or
push
jecxz
cmp
add
in
imul
push
xchg
jo
sbb
aad
sbb
jae
repz
stos
lock
fsts
mov
and
jle
xchg
cmp
xor
xchg
xor
cmp
test
xchg
push
mov
dec
outsb
xchg
xor
call
inc
dec
inc
dec
jecxz
cli
cmp
xchg
lds
shll
xchg
lret
mov
sbb
test
xor
sti
iret
pop
mov
pop
hlt
mov
pop
jg
sahf
push
ljmp
mov
adc
jnp
movsb
add
fst
ljmp
lret
dec
xchg
test
push
hlt
sbb
test
xor
test
decb
loop
push
or
add
add
mov
push
lods
adc
mov
adc
imul
or
mov
push
aas
sub
xor
ret
cmp
push
aad
orl
sub
call
and
sub
stc
jne
movsl
xlat
fimull
adc
mov
adc
mov
mov
into
enter
inc
mov
stc
sbb
das
pop
push
push
mov
lea
xchg
mov
dec
push
lods
outsl
jg
and
sub
mov
aaa
push
orb
xor
daa
mov
sub
adc
and
mov
jbe
jne
ret
je
leave
mov
jmp
sub
imul
xlat
insl
inc
fcoml
aaa
jae
sbb
xor
inc
xor
ret
mov
and
lcall
daa
cmp
sbbb
imul
and
adc
jp
jge,pn
cmc
and
sub
inc
adc
lret
dec
loop
adc
adc
ret
or
fcomps
das
popa
shr
push
push
repz
pop
add
lods
mov
outsl
xor
sub
loopne
adc
push
data16
xchg
or
jmp
jle
cmp
loop
call
or
adc
dec
pop
repz
out
or
adc
push
lds
xor
push
dec
sub
xchg
outsb
cmp
push
call
shll
hlt
lea
fsubrp
test
fidivs
lret
insl
or
and
mov
stc
push
sub
in
inc
movsl
adc
lods
jbe,pn
and
nop
sahf
jo
pop
adc
jae
loopne
mov
jo
push
xor
push
scas
mov
mov
xor
mov
pop
xchg
cwtl
cmc
adc
xchg
adc
rcrl
cld
inc
xchg
xor
adc
sbbl
mov
sbb
mov
outsl
fcoms
mov
scas
lock
dec
dec
ds
hlt
test
iret
lahf
aam
cmp
call
lret
push
out
fdivl
jns
in
xchg
sub
or
xchg
pop
mov
cmp
inc
scas
xor
outsb
mov
dec
mov
and
xor
sub
call
orb
cmp
dec
or
scas
and
push
jge
inc
or
pushf
in
push
or
in
add
mov
pop
add
lret
out
sub
adc
je
or
xchg
inc
outsl
stc
jb
aam
lret
bound
cmp
lahf
dec
out
adc
dec
fbld
rolb
or
pop
repnz
mov
mov
add
into
mov
ret
hlt
lret
push
shll
xchg
cmpsl
mov
scas
js
dec
xrelease
mov
rcll
mov
sub
shll
push
aam
pop
insb
mov
jmp
test
sbb
sti
xor
nop
cmpsl
sahf
xor
add
add
or
cwtl
pusha
xor
push
mov
mov
test
push
push
and
gs
jle
jmp
inc
adc
and
sbb
outsl
in
lods
and
xchg
and
arpl
and
lahf
and
pop
pop
mov
sub
or
aas
xor
inc
imul
inc
scas
mov
daa
sahf
sub
and
clc
ds
movsl
mov
add
dec
fdivrs
adc
sahf
sbb
gs
mov
mov
mul
mov
cmp
rcrl
sub
out
add
lret
in
hlt
adc
sbb
sbb
mov
sub
ja
dec
dec
stos
and
adc
push
sbb
xor
push
inc
push
cmp
jg
push
dec
andb
es
inc
stc
cmpsb
enter
xchg
pop
rcrl
mov
sub
mov
in
imul
push
jecxz
fisubl
or
or
push
or
and
add
lcall
or
sub
sbb
or
inc
cltd
movsb
sub
clc
movsb
mov
js
or
mov
xchg
cmp
mov
je
adc
push
or
pop
xchg
sub
pop
test
shl
and
loopne
or
testl
sub
stos
das
inc
dec
dec
repnz
or
cmpsb
xchg
sahf
lock
xor
dec
mov
pusha
mov
sub
mov
adc
push
fnstsw
xchg
insb
dec
jle
into
jo
sbb
cmpsb
dec
cld
cmpsb
test
mov
inc
enter
sbb
sbb
fidivrl
mov
test
pop
mov
das
decb
lcallw
pusha
lret
jnp
dec
lret
cli
adc
call
jl
test
idivb
dec
adc
repz
xchg
ja
jg
cmp
jp
call
push
fs
add
xor
pop
xlat
pop
cli
sub
push
dec
cmpsl
je
xchg
ficomps
stos
lret
in
mov
jmp
int
mov
out
pushf
fistl
pusha
inc
enter
or
push
mov
lret
sub
add
push
or
mov
roll
mov
cmp
enter
out
cmovs
aaa
movsl
push
and
mov
arpl
dec
movsb
aad
mov
push
std
xchg
dec
xchg
cmpsb
test
xchg
cwtl
push
adc
out
lahf
add
fildll
dec
adc
shll
xor
ss
jmp
mov
ss
pop
cmp
inc
xlat
and
cld
stos
xor
lods
daa
sub
lods
and
add
mov
loope
adc
jecxz,pn
sahf
gs
push
adc
sub
iret
mov
rclb
imul
sub
dec
cmpl
je
and
push
fsubl
decl
or
test
int3
jb
dec
inc
push
mov
sahf
popa
stos
dec
hlt
js
xorb
xor
int3
cmpsl
add
add
imul
test
pop
pop
inc
jge
mov
cmp
inc
int3
cmc
push
pop
mov
pop
adc
xor
mov
arpl
sub
mov
and
dec
cmp
or
aas
mov
adc
fists
push
pusha
dec
pop
or
stc
adc
cmpsl
xor
inc
cmpsb
xchg
gs
add
std
push
out
and
roll
sub
pop
jo
push
paddsw
popf
lods
or
andnps
or
cld
data16
dec
cs
pop
je
sub
and
imul
cwtl
into
dec
rorl
std
lahf
call
aam
dec
jno
add
cmc
or
push
js
cltd
icebp
mov
je
or
push
stos
fidivs
jle
ja
loopne
je
cmp
cmp
fimull
rcrb
push
jle
pop
aam
fdivrs
push
jg
sbb
and
outsb
shll
subb
sub
xor
loop
jge
mov
adc
in
pop
xchg
cmp
sahf
inc
mov
pop
mov
pop
and
ret
pop
inc
out
pop
and
pop
daa
inc
mov
popa
jge
mov
mov
aad
push
add
push
pop
mov
sub
and
jns
jmp
jle
aaa
shll
je
mov
fadds
es
jmp
xchg
insl
or
ja
add
sbb
pushf
inc
or
inc
mov
cmpsb
mov
mov
and
aam
add
push
or
comiss
pop
adc
ljmp
scas
mov
out
scas
sub
pop
mov
scas
dec
loope
insl
add
mov
daa
inc
xchg
ss
test
or
orl
adc
inc
gs
pop
clc
cmp
cmp
out
xor
mov
push
lret
aad
inc
mov
add
jg
dec
mov
mov
mov
je
outsb
push
xor
add
jmp
dec
stos
sbb
adc
das
loop
cmpb
jno
fs
sbb
xchg
lret
xchg
mov
push
sbb
jg
adc
mov
inc
movsb
adc
insb
add
test
nop
cltd
in
jg
push
sbb
push
lods
fstl
dec
xor
cmc
or
adc
mov
jmp
push
jecxz
and
adc
push
lcall
xchg
sub
leave
sub
mov
cmp
das
stos
cmpb
mov
adc
and
fcmove
sbb
and
add
pop
popa
inc
mov
adc
sbb
xor
jae
sbb
adc
sub
test
mov
roll
lret
popa
push
int
sbb
and
jae
dec
decb
or
jg
mov
fisttpl
out
in
jne
in
fadd
mov
dec
das
ss
das
lock
cmp
mov
data16
jp
stc
call
jae
loope
jb
loop
mov
push
or
jae
add
xchg
popf
imul
imul
and
sahf
add
data16
dec
ret
push
sub
pop
and
enter
cmp
enter
popf
and
jnp
or
add
nop
mov
lahf
mov
repnz
subl
and
lret
addb
pop
sub
xchg
shrb
stos
xorl
push
iret
or
add
push
mov
pop
xchg
dec
mov
mov
pop
std
inc
repz
and
lds
sbb
lcall
rclb
cs
daa
jo
push
and
sti
hlt
add
pop
pcmpgtb
jne
dec
adc
or
addr16
cli
jmp
xchg
scas
and
rcll
dec
or
mov
insb
jne
push
pop
pusha
sbb
ret
pop
loopne
stos
inc
pop
stc
xor
lock
mov
or
xor
lret
and
xor
out
movsl
js
or
jle
test
and
push
push
in
cld
outsb
sbb
aas
insb
mov
out
push
mov
xor
lock
pop
push
push
or
add
xchg
push
inc
or
call
addb
dec
out
mov
lock
mov
jmp
and
or
loope
lahf
and
cmp
loop
push
mov
mov
aaa
insb
mov
cs
jne
nop
es
test
adc
mov
push
xbegin
mov
cmp
or
dec
push
dec
add
xchg
aaa
es
push
cwtl
add
shlb
je
pop
lret
inc
in
mov
jmp
mov
add
mov
or
mov
ss
lea
xor
in
repnz
sbb
loope
icebp
push
lret
scas
loop
push
dec
cmpsl
and
pop
out
xchg
mov
jmp
nop
mov
fcomps
and
sbb
add
lret
jl
push
xchg
inc
aas
cmp
loopne
sti
sbb
or
and
lea
pop
lcall
cmc
cmc
jbe
push
nop
adc
outsl
imul
sarl
pop
fnstenv
cld
arpl
lret
xchg
xchg
lahf
mov
and
jp
imul
jae
nop
outsl
mov
dec
sbb
test
push
xchg
rorl
inc
fisubl
arpl
sti
inc
add
xor
jp
jb
ficoms
mov
lahf
in
push
fwait
push
stos
sbb
int3
pop
xchg
ljmp
or
ja
divl
inc
and
mov
mov
dec
jns
ss
mov
sub
mov
test
fldl
in
mov
shll
lret
cmpsb
jbe
ss
jns
jns
movsb
sub
cmp
bswap
jo
stos
cltd
call
popa
fisubs
jle
insl
jecxz
jecxz
mov
adc
pop
xor
fcmovb
sbb
das
shlb
mov
add
push
mov
mov
dec
sub
fcmovnb
dec
inc
cld
mov
jp
pusha
xor
mov
sti
and
mov
xor
dec
lret
dec
pop
rcll
inc
sub
add
jo
filds
cmpsb
xor
cli
fdiv
test
inc
addl
mov
cmp
and
ljmp
movsl
pop
xchg
sub
aaa
xchg
pusha
mov
dec
adc
int3
pusha
push
dec
sbb
outsb
int3
fnstcw
and
arpl
rcl
movsl
or
pop
xchg
lock
mov
cld
add
hlt
movsb
das
xchg
push
add
pop
in
push
push
jge
inc
pop
sub
out
lcall
and
mov
cmpsl
rorb
sbb
pop
jne
test
dec
xor
xchg
sahf
cmpsb
sbb
daa
ss
push
mov
test
push
cld
and
xchg
jmp
mov
jno
pusha
lret
je
pop
dec
xor
mov
xchg
push
pop
pop
mov
pop
jg
and
ret
leave
xor
das
mov
popa
add
adc
mov
pop
fnstcw
push
and
daa
mov
loope
inc
cmpsl
xlat
sbb
test
xchg
out
in
sbb
mov
in
mov
mov
and
mov
sbb
hlt
or
rolb
lret
dec
aaa
fidivrl
out
sub
jae
rorl
outsl
adc
and
fcomps
out
sti
pop
mov
xor
xor
loop
les
push
loopne
inc
jns
or
xor
jge
pop
or
dec
xlat
sbb
inc
jne
cmpsb
or
pop
cli
repnz
inc
xor
mull
shlb
mov
scas
bound
xchg
push
xchg
add
enter
cmp
adc
test
mov
cmp
jle
push
jp
sbb
pop
sub
shl
lea
popa
sub
int3
insl
xor
clc
ret
cmp
mov
cwtl
movsb
fisttpll
insb
imul
sbb
sahf
jb
push
dec
cmpb
loop
and
or
subl
cmp
jbe
aas
and
add
fs
ljmp
lcall
int
and
inc
aad
sub
ret
xchg
popa
imul
lret
adc
push
repnz
xlat
subl
fidivrl
stc
xor
fldl
inc
push
loopne
add
outsb
rorb
and
mov
and
lret
jnp
ljmp
iret
cwtl
and
out
imul
push
adc
sub
fdiv
push
idivb
inc
out
clc
fsubrs
stc
in
sub
push
sti
loopne
cld
mov
fcom
add
push
cmpl
mov
cs
cli
mov
xor
push
add
push
in
pop
pop
dec
xchg
dec
push
or
popf
adc
pop
inc
push
push
loop
dec
and
es
mov
or
adc
push
and
lods
testl
and
lods
inc
or
pop
jmp
add
pop
push
push
enter
adc
stos
push
adc
sbb
test
sbb
cmp
pop
jne
and
sub
inc
xlat
add
addr16
ret
xor
adc
sub
dec
inc
sub
sub
or
or
je
inc
loopne
or
dec
lea
loopne
mov
jl
insb
push
daa
and
call
icebp
push
inc
jne
fisttpl
or
push
sub
repz
and
push
adc
scas
sbb
adcl
adc
jl
cmp
out
lahf
jne
xchg
not
jo
adc
jl
xchg
iret
jge
iret
cmpsb
inc
clc
xchg
nop
or
xchg
aad
or
jns
xchg
fists
push
cmpsl
adc
mov
sub
xor
xlat
add
scas
mov
pop
mov
dec
pop
shrb
fsubr
mov
ja
push
or
adc
jne
es
cs
inc
data16
and
popa
xor
xchg
ss
jge
push
scas
pop
call
jo
add
mulb
cmc
fisubrs
movb
dec
mov
sub
cli
ljmp
icebp
or
or
add
adc
cmpsb
sbb
xchg
es
add
repz
leave
add
dec
repnz
jmp
mov
or
hlt
lods
adc
repnz
inc
cmpsl
in
sub
sahf
xor
mov
cmc
cltd
mov
cmp
ret
inc
push
in
mull
scas
dec
cltd
and
jecxz
jge
test
mov
test
adc
cmpsb
sub
icebp
addr16
ja
test
loope
dec
cmp
inc
cli
xor
fcoml
mov
insl
shll
cld
mov
sub
or
sub
daa
jle
ret
mov
imul
mov
adc
sbb
jae
mov
or
fnsave
data16
inc
push
stos
inc
cmp
nop
sbb
sbb
inc
push
pop
ja
mov
or
mov
xor
frndint
inc
mov
cld
push
pusha
xchg
cmp
data16
or
jecxz
mov
or
jg
mov
cmp
bound
mov
aaa
out
push
into
cmpsb
mov
mov
adc
imul
test
mov
pop
ja
pop
js
out
mov
push
jg
dec
add
push
push
test
movsb
inc
outsl
out
addr16
adc
dec
scas
pop
sbb
stos
push
xor
mov
xchg
sbb
adc
xchg
xor
inc
lock
xchg
je
les
pusha
push
test
test
repnz
popf
sub
ljmp
xor
push
sub
aas
xor
lret
adc
mov
jne
push
pop
dec
call
loopne
dec
icebp
add
inc
xchg
dec
sub
sbb
lock
test
imul
jmp
aad
addr16
dec
or
test
or
jbe
cs
xchg
pushf
cmp
mov
lret
lahf
jp
js
jmp
dec
and
daa
jnp
sbb
mov
xor
pop
repz
sub
in
addr16
test
call
insl
bound
stos
mov
xchg
adc
cmp
jmp
mov
xor
pop
xchg
ljmp
mov
inc
pop
push
xchg
subl
repnz
jp
ss
pushf
cmp
push
sub
repz
cmpsl
and
mov
mov
sub
cmp
cmpsl
es
sub
mulb
sti
aaa
ret
nop
and
movsl
andl
inc
ret
jp
leave
iret
mov
lock
inc
xchg
in
sbb
jbe
and
insl
test
cmp
repz
xor
cs
inc
add
call
pop
mov
sar
xor
je
lcall
loop
popf
push
sub
pop
mov
dec
icebp
sub
mov
xchg
sub
push
repnz
push
aas
mov
pop
inc
and
cli
add
andl
xchg
push
and
jne
pushf
jmp
mov
ljmp
lds
jae
ss
sub
nop
outsl
sub
xchg
mul
jmp
jne
jge
pusha
jl
or
jo
fists
sub
jb
fiaddl
push
push
sub
mov
daa
fs
pop
out
stos
cs
inc
scas
ja
daa
mov
insb
jbe
adc
mov
gs
ret
pop
popf
xchg
sbb
out
cmp
dec
lock
mov
xor
pop
mov
movsl
test
mov
and
in
imul
adc
divl
js
pop
xor
pop
sub
cwtl
and
pop
test
lods
cmc
xchg
mov
and
outsl
push
dec
mov
lock
out
and
les
call
out
mov
jns
push
mov
sti
xor
inc
int
test
cmp
cmp
mov
add
andl
push
add
jnp
imul
clc
arpl
or
dec
push
in
dec
mov
repnz
lcall
sub
inc
push
inc
jp
adc
or
add
inc
fdivrl
add
xchg
loope
leave
jne,pn
and
mov
lock
rorb
adc
lcall
add
mov
inc
xchg
jp
ss
jmp
dec
sub
mov
cwtl
lods
sbb
jecxz,pn
movsb
inc
leave
fiadds
aaa
xor
or
mov
mov
and
and
push
repnz
rcl
xor
jno
adc
add
out
and
lahf
test
xchg
call
xchg
sbb
loope
mov
aas
pop
or
aas
jecxz
iret
das
repz
andb
jg
push
pop
pop
cld
nop
addr16
adc
mov
rorl
dec
pushf
inc
subb
jl,pn
xor
push
mov
xchg
xchg
fisttpl
gs
lds
cmp
xor
jbe
ss
add
out
jge
inc
mov
inc
dec
cmpb
xchg
and
cmp
ror
mov
xchg
fwait
in
mov
jae
ret
fwait
xchg
aaa
enter
xor
push
pop
es
das
shlb
adc
leave
std
mov
cmp
jge
cmpsl
loop
cmpsl
pop
xor
rorl
mov
sub
test
mov
xor
dec
xor
jg
and
shll
jge
mov
cmp
arpl
ror
mov
mov
clc
xor
stos
cmpsl
cmp
cltd
loope
xlat
aad
test
icebp
add
xchg
push
testb
mov
xchg
ss
lret
mov
jne
or
xchg
sbb
xchg
fs
jb
lcall
adc
loop
mov
pop
add
dec
mov
lret
int
mov
dec
xchg
cmp
xchg
inc
movsb
psubusw
test
xchg
sbb
lcall
pushf
xchg
and
pop
inc
adc
lods
xchg
je
pop
cmp
and
dec
bound
mov
mov
imul
cwtl
repz
rcrb
pop
xchg
leave
pop
out
lcall
cmp
sahf
adc
and
je
or
or
push
dec
cmp
repz
xchg
cmp
loop
cmp
test
dec
cmp
jb
cmp
dec
jg
xchg
in
jecxz
push
mov
std
mov
in
daa
lock
movsb
das
jne
mov
pop
push
mov
jmp
lret
or
test
cmpsl
xor
pusha
lea
and
js
loop
mov
daa
sub
push
sub
xchg
or
shl
into
cmpsb
and
mov
and
cs
test
inc
add
fidivrl
mov
mov
jbe
jmp
xor
xchg
pop
pop
mov
jl
fs
and
jnp
push
inc
mov
lret
fcoml
movsb
js
adc
pop
shl
jge
and
sbb
sbb
sahf
pusha
in
nop
imul
mov
pushf
dec
mov
inc
cmp
push
sahf
daa
jmp
loop
sbb
js
cmp
roll
addb
jo
fwait
add
out
lea
adc
nop
adc
push
ficompl
lds
jo
std
xchg
jo
addr16
xor
sbb
add
pop
or
subb
stos
pop
jne
fwait
mov
cmp
or
pusha
xchg
dec
lock
call
or
ss
gs
or
push
add
push
jcxz
and
lahf
xchg
xchg
out
and
dec
mov
insb
inc
adc
fisttpl
scas
adc
add
mov
movb
ficompl
sbb
jnp
cmp
sbb
cwtl
loope
stc
or
add
push
or
adc
and
mov
mov
imul
cmp
sub
mov
inc
mov
rcrl
pop
adc
xchg
jno
shlb
outsl
xchg
repz
jo
jp
and
lret
lock
cmp
dec
xor
cmpsl
ljmp
daa
bound
inc
mov
je
or
mov
or
add
loop
mov
xchg
call
push
and
xor
test
insl
xchg
cmp
lret
cwtl
aad
xchg
dec
pop
pop
flds
ret
mov
sarl
movsl
lods
shll
ret
add
aad
adc
push
mov
adc
and
inc
xchg
shlb
insl
movsb
rcll
sbbb
adc
les
lcall
lds
jp
mov
add
fistl
ja
pop
and
sti
add
adc
push
insb
dec
lds
and
dec
cli
sti
xor
add
mov
push
scas
out
push
call
bound
adc
in
ret
ja
pop
jne
rcr
mov
movsb
adc
cltd
jb
xor
jge
int
repnz
or
or
test
into
xor
cmp
outsb
insl
jmp
mov
add
jnp
loop
push
or
jae
pop
jmp
jle
sub
add
aam
mov
lock
adc
pop
and
add
and
xor
mul
or
enter
mov
add
fstl
repz
ret
add
insl
faddl
out
jae
and
lret
insl
inc
inc
fcomip
cmp
cmp
xlat
jle
cmpl
push
aad
pusha
lret
das
inc
sub
xchg
pop
mov
cmp
fst
test
fstpt
xchg
add
inc
push
inc
xchg
xchg
daa
add
stos
xor
mov
cmp
and
dec
hlt
mov
mov
jns
add
jb
push
cmpsb
nop
sahf
mov
sub
sbb
in
mov
ss
and
add
add
rcrl
cs
imul
lods
in
aaa
cmp
mov
mov
hlt
xor
jae
fadds
add
sub
cmp
in
lret
int3
xor
jp
mov
repnz
adc
and
insl
int
dec
into
sbb
leave
jge
pop
fsubs
push
cltd
fiaddl
outsl
inc
mov
movsl
jmp
add
dec
xor
jp
ss
sar
inc
cld
push
out
add
xchg
xor
lret
into
repnz
push
cmp
and
add
adc
mov
mulb
mov
call
cli
ret
cld
xchg
sbb
dec
sub
fcmovnu
cmp
ret
mov
lods
cmp
and
hlt
iret
mov
xchg
xchg
subb
sbb
cs
add
and
scas
adc
jg
insb
dec
xor
test
cmpsl
mov
mov
jno
sbb
sub
test
fsubs
push
mov
or
jnp
dec
or
mov
or
clc
addr16
lock
pop
inc
and
push
sahf
inc
sti
outsb
js
testl
mov
sti
out
les
xor
push
or
rol
jecxz
jb
mov
sbb
dec
popa
cmp
xchg
ja
sarl
and
insl
adc
call
fwait
cmp
xor
mov
in
fwait
roll
icebp
outsl
es
int
or
mov
outsl
sub
rcrl
sub
cli
adc
divl
and
inc
mov
outsl
cs
or
xor
mov
adc
fwait
jle
or
movsb
inc
xor
cmp
outsb
adc
leave
jb
sub
mov
stos
sbb
jb
sbb
or
rclb
pop
and
jb
or
pop
scas
xor
sbb
fnsave
aad
dec
mov
cwtl
sub
pop
nop
mov
xchg
push
out
inc
pop
jle
gs
xor
fcomip
cmp
sub
jmp
fldenv
not
stc
dec
xor
div
cmp
aad
push
push
sbb
mov
aaa
fcomp
test
mov
out
jne
push
jp
stos
bound
mov
xchg
daa
sarb
jns
or
daa
int
xor
and
pushf
aam
adc
mov
outsl
dec
jne
push
mov
cmc
push
dec
aad
jl
movnti
enter
imul
in
loop
dec
push
sti
pop
inc
inc
inc
push
mov
sbb
adc
add
xor
mov
push
and
in
popf
sahf
stos
cld
jne
dec
fidivrs
pop
lds
or
sub
rcll
stc
cmp
add
push
push
icebp
sub
mov
jge
and
imul
pop
jnp
sub
or
mov
mov
mov
daa
insl
push
lret
in
out
mov
xor
pop
push
test
lods
jl
jmp
or
jae
xor
dec
dec
xchg
xorl
pop
jl
adc
movsb
rorl
decl
lahf
imul
sbb
mov
push
mov
dec
sbb
xorl
notb
lods
inc
sub
adc
sarb
in
ret
sbbl
out
sbb
lock
std
repz
lea
daa
aam
hlt
lahf
adc
arpl
cwtl
out
jge
popa
pop
sbb
xchg
or
and
loope
test
sub
out
sub
adc
inc
push
mov
sti
popa
jb
cmpb
push
fs
ss
sahf
or
inc
ret
test
mov
ror
testl
xchg
js
mov
testb
dec
dec
pop
adc
and
add
jae
cmp
cmp
cmp
inc
les
pop
outsb
pop
aaa
push
outsb
pop
in
call
das
mov
sub
pop
or
mov
int
pop
movsl
fs
push
mov
sbb
inc
inc
cmpsl
stos
xor
or
dec
pop
out
cmp
aam
pop
faddl
aas
cmpsb
push
lock
jne
jl
mov
cltd
testl
call
and
out
push
mov
ja
stos
in
nop
jnp
adc
and
pushf
or
fcomps
lcall
and
dec
popf
mov
sub
rorl
push
or
imul
jbe
incl
or
lea
push
xor
mov
cmp
or
inc
sbb
cmp
cmp
ret
sub
xchg
je
or
push
push
sahf
test
or
lods
inc
ja
in
je
jno
scas
sub
das
into
stos
xchg
gs
loop
fs
mov
jg
adc
or
mov
mov
sbb
int
pushf
ret
cmpsl
lret
or
into
xor
mov
aad
lods
enter
sbb
scas
xchg
mov
sbbb
jp
push
in
cwtl
lea
xor
pop
bound
outsb
sub
data16
push
mov
lods
add
lock
dec
pop
and
popf
dec
cmpl
or
mov
xchg
dec
jmp
arpl
pop
and
repz
scas
sbb
mov
mov
push
jge
and
fstpt
xor
xor
add
sbb
popf
push
cmpsb
rorl
mov
lret
add
sub
insb
aaa
loop
mov
addl
adc
sub
mov
adc
or
shl
xlat
andl
add
sub
pop
aaa
cmpsl
test
xchg
test
dec
mov
dec
lcall
or
loope
sbb
xor
mov
movsb
repz
popf
arpl
sbb
push
ss
mov
enter
enter
mov
nop
leave
or
out
imul
lret
stos
jbe
push
test
dec
cmp
sub
or
sbb
fcmovnb
out
sti
cmp
sub
and
dec
add
test
adc
mov
lods
mov
jp
push
inc
cmp
test
movsb
push
data16
out
mov
inc
xorb
call
xor
xor
and
xchg
and
sub
mulb
xor
rolb
and
or
add
or
push
xchg
ds
mov
add
mov
and
test
mov
addr16
jb
or
pop
das
js
adc
addb
sarb
and
lods
push
and
xor
xchg
sti
iret
xchg
jl
loope
or
es
adc
fldenv
add
adc
sbb
cmp
shrb
adc
int
movsl
sub
add
aaa
sahf
mov
push
add
xchg
mov
sub
mov
fnstsw
xchg
xor
icebp
mov
movsb
sbb
mov
xlat
pop
dec
and
xchg
shlb
mov
xor
stos
movsl
mov
xor
pop
lock
pop
pop
push
xchg
pop
movl
lea
mov
sub
mov
add
mov
adc
loope
iret
cmpsb
sbb
roll
mov
stos
push
sbb
add
in
add
dec
cmp
mov
lret
sbb
mov
test
xchg
inc
jne
into
xchg
cltd
mov
sub
sub
xor
stos
call
jge
and
dec
aad
sub
loope
mov
aad
pop
adc
adc
jnp
in
jno
push
test
and
add
add
sbb
rep
loopne
enter
pop
icebp
pusha
stos
into
out
inc
sti
sub
mov
ss
pushl
push
add
inc
lds
cmp
xlat
stos
inc
clc
xchg
jecxz
repnz
ror
mov
fsubp
jecxz
rcl
leave
lret
mov
test
adc
xchg
dec
aas
cld
ja
pop
inc
mov
mov
out
mov
cmp
fwait
shlb
mov
movsl
fldl
sbb
fidivl
mov
sbb
cs
push
adc
lret
adc
cmpsb
push
adc
mov
pop
jae
xchg
bnd
mov
nop
sbb
aaa
mov
xchg
mov
sbb
mov
or
mov
cmc
lcall
dec
lods
lock
or
mov
dec
jl
mov
fcoms
ljmp
jbe
popf
iret
push
and
icebp
add
aad
inc
or
and
cmp
nop
sti
dec
sub
pop
mov
icebp
sub
add
jbe
sub
jge
div
inc
pop
sbb
cwtl
pushf
sbb
rclb
adc
inc
dec
push
inc
hlt
aad
pusha
or
add
sub
add
cmp
call
mov
imul
fs
cmp
adc
mov
inc
dec
aad
lea
loope
or
xorb
lar
add
ss
lahf
std
test
pop
pop
push
aaa
ja
dec
or
ret
sbb
nopl
je
cmpsb
loope
negl
je
fucompp
sub
mov
or
loope
and
shl
push
in
loope
xor
push
insl
hlt
shl
mov
pop
mov
test
and
sub
dec
sbbl
dec
and
popa
bound
mov
icebp
test
or
lock
call
shrb
dec
test
mov
cli
or
jae
xchg
out
mov
cmpsl
and
stos
inc
add
into
in
lret
cs
call
int
sbb
pop
in
in
mov
ds
repz
dec
lcall
sub
xor
sbb
dec
inc
mov
add
pop
jno
ja
jno
stos
pop
and
add
mov
jmp
pop
mov
shlb
leave
ja
jp
cmpsb
add
sbb
and
cmp
rolb
notl
dec
xchg
mov
sub
xor
adc
aas
mov
push
roll
sub
je
cltd
in
xchg
sbb
mov
jae
in
dec
pop
sub
ret
mov
sub
arpl
cmp
jle
andb
lock
cmp
adc
and
mov
xor
cwtl
lods
sub
xor
fistl
orl
cld
stos
mov
int
jle
out
ret
and
in
jne
jbe
xor
push
in
aas
push
cmpb
push
shr
lcall
jmp
add
hlt
int3
inc
fisubs
xchg
in
add
push
pop
sti
addb
lds
bound
adc
and
nop
or
jle
cmp
mov
mov
fisttpl
cmp
sbb
add
shlb
gs
les
sahf
xchg
and
iret
sbb
ja,pn
inc
adcl
fistpl
cmp
leave
adc
rcll
cmpb
xor
mov
sbb
lea
adc
and
cmp
add
ficoms
add
nop
outsb
popf
ret
call
mov
dec
jo
fs
sub
scas
sub
sub
pusha
orl
jno
jbe
ljmp
das
imul
cmp
and
sbb
mov
pop
and
jl,pn
divl
jnp
rolb
mov
mov
pop
adc
shl
dec
cmpl
jge
xchg
into
jb
xor
in
xchg
pusha
cmp
xchg
pop
lret
jns
xor
loopne
movsl
enter
add
dec
aam
add
lea
sub
mov
pushf
xor
inc
and
loopne
std
loope
push
ljmp
shll
stos
test
mov
ret
mov
inc
loopne
nop
inc
out
call
push
repz
int3
sbb
je
aad
clc
mov
or
or
dec
xchg
pusha
sbbl
aaa
fisttpl
inc
pop
stos
mov
lods
mov
jae
push
mov
and
jb
pop
and
xor
jno
inc
mov
loope
orb
jb
ret
pop
pop
jne
arpl
popa
and
dec
xor
in
lods
jnp
daa
inc
movsb
xchg
mov
mov
pushf
les
or
repz
sbb
out
and
daa
or
cmp
daa
inc
in
rcll
pop
das
fiaddl
jg
call
or
xchg
adc
inc
dec
out
adc
fcmovb
pop
mov
jno
aam
mov
ds
mov
adc
sarb
add
mov
inc
in
pop
and
in
pop
mov
icebp
or
repz
mov
xor
ljmp
in
icebp
cmpsb
dec
fldt
repz
enter
push
aad
fnstenv
jg
jle
sub
loopne
sbb
and
push
pushf
push
adc
scas
imul
cmp
mov
leave
cmp
lds
push
loopne
xor
add
pop
fstps
and
insl
add
stc
jns
lret
stc
and
stos
inc
cmpsb
sahf
out
pop
enter
pop
jg
add
nop
mov
cld
sub
movsb
shlb
ss
mov
mov
adc
bound
popa
rorb
xlat
lmsw
out
adc
sbb
dec
xchg
clc
pop
xchg
push
shlb
xor
shr
mov
clc
je
xchg
in
int3
and
cld
in
cltd
adc
loop
ret
lds
adc
bound
rclb
mov
push
push
dec
inc
mov
and
adc
xchg
lret
dec
xor
div
repnz
lret
mov
inc
push
push
add
lahf
jne
mov
nop
adc
into
xchg
sub
call
mov
jmp
sbb
sub
shl
fmuls
lods
loop
out
push
popa
lcall
pop
or
leave
das
iret
inc
fincstp
aaa
call
lds
pop
cmpl
test
jb
mov
pop
jb
push
mov
adc
add
outsb
adc
dec
cld
test
mov
imul
mov
subb
out
and
jecxz
out
or
mov
mov
dec
test
inc
daa
mov
push
add
pusha
mov
std
sub
xor
pusha
jno
sbb
fcompl
mov
iret
xchg
mulb
int
out
push
push
pop
lock
shr
out
loopne
inc
cmp
scas
int
cmpsl
mov
and
lcall
mov
ret
cmpsb
mov
push
add
mov
idiv
shll
adc
clc
mov
or
sub
cwtl
jns
jmp
jnp
adc
cs
test
leave
jl
jecxz
or
cmp
std
mov
jg
repnz
mov
push
cmp
in
hlt
xor
pop
xor
call
in
jns
mov
push
cld
dec
shrb
call
jmp
xor
and
in
or
push
ja
outsl
xchg
add
mov
mov
and
mov
mov
sbb
and
cmp
inc
mov
cmpb
mov
in
mov
cmpsb
fucomi
fdivl
sti
and
leave
inc
dec
xchg
and
jne
push
mov
or
arpl
hlt
push
in
cltd
sub
fists
shll
mov
cmp
out
int3
xor
xchg
scas
xchg
mov
stos
adc
nop
mov
mov
in
outsb
daa
cmp
adc
dec
xchg
jge
inc
mov
or
xchg
ret
push
inc
call
xor
neg
outsb
jnp
scas
sbb
repnz
sub
lds
xor
stc
outsb
sbb
jbe
sbb
test
or
sti
mov
inc
pop
add
outsl
xor
mov
sti
movsb
in
lods
lcall
fldenv
fstps
stos
and
inc
push
adc
adc
add
iret
or
fcompl
subb
jecxz
mov
addl
loop
mov
pop
sub
and
insl
mov
jnp
pop
pop
xchg
stos
adc
hlt
mov
vfrczpd
loopne
xlat
pusha
cmc
lret
bound
mov
jo
and
add
sahf
adcl
mov
addb
mov
call
leave
aaa
shlb
inc
lahf
inc
adc
xor
shrb
jae
aam
cs
cmpsl
sbb
jnp
push
inc
in
mov
mov
dec
ret
mov
popf
scas
push
inc
mov
js
sub
mov
adc
add
jecxz
add
cmp
push
les
fwait
adc
or
inc
orl
and
dec
rcl
sbb
push
stos
into
dec
mov
aam
fimuls
jmp
les
fs
stos
dec
push
push
aas
sahf
pop
sub
cltd
loope
mov
imull
dec
jmp
jb
and
cmp
enter
mov
cmc
mov
jo
and
sub
push
add
sub
mov
add
and
inc
loope
xchg
in
outsl
jecxz
movsl
test
fcoms
jnp
js
dec
cmpsl
bound
adc
mov
sbb
clc
loopne
call
test
push
test
pop
stc
push
mov
call
dec
call
sub
xor
sub
push
xor
pop
test
mov
mov
inc
jecxz
xor
mov
xchg
adc
shll
xor
pop
bound
mov
or
push
xchg
cld
sub
xor
push
fstpt
mov
movsl
add
shlb
ss
or
jecxz
mov
push
add
xor
mov
fs
mov
adc
fwait
nop
scas
pop
in
sub
outsb
lahf
mov
jne
push
pop
sbb
mov
push
sbb
nop
sub
add
cmp
mov
inc
cmpsl
mov
rcll
je
add
dec
or
add
gs
pop
loop
clc
adc
bound
scas
mov
popa
mov
and
pop
mov
cmp
dec
mov
mov
mov
out
lcall
daa
inc
cmp
idivl
cmc
sub
mov
adc
mov
and
jmp
sbb
inc
out
repnz
lret
lock
push
inc
pop
clc
inc
adc
mov
push
loopne
push
mov
clc
inc
lret
mov
sbb
or
xchg
dec
pop
icebp
lods
dec
sbb
mov
add
mov
xchg
mov
cmp
imul
and
loopne
divb
call
cmc
xlat
jg
pop
movsb
rol
xlat
mov
mov
psllq
fnstsw
mov
popf
pop
dec
xchg
mov
imul
loop
mov
pushf
in
adc
pushf
cmp
pop
push
add
xor
dec
pop
js
inc
adc
scas
scas
stos
add
addl
push
push
jns
cli
jg
lret
inc
push
mov
popa
jmp
sbb
push
lcall
pop
mov
dec
push
mov
push
xorb
cli
inc
fisubl
and
inc
jnp
or
dec
xor
stos
jmp
fwait
xchg
jnp
int3
push
in
shlb
flds
mov
jmp
fisttps
mov
jbe
leave
jecxz
test
enter
fidivs
scas
or
or
jno
negl
lahf
mov
dec
cmp
outsl
xlat
inc
addl
cmp
aas
popa
and
jg
or
or
pop
cwtl
push
adc
adc
test
add
mov
dec
testb
mov
adc
jne
int
pop
xor
mov
add
mov
mov
sub
loope
leave
jae
jno
rolb
xchg
adc
and
dec
mov
or
adc
fiadds
jge
inc
test
aas
lea
add
xor
or
xchg
jmp
shlb
sub
cli
dec
sub
cs
insb
adc
les
jno
dec
sahf
sub
sbb
cmpsl
pop
mov
mov
cltd
pushf
or
mov
dec
sti
aas
cmp
jp
fdivrl
lret
inc
iret
add
test
pop
cwtl
lock
cmp
call
cmp
fisubrs
mov
dec
push
push
mov
cmp
xor
in
and
daa
sbb
loop
and
mov
leave
and
sub
testl
jns
nop
xor
xorb
sub
mov
imul
sbb
pop
and
stc
jnp
adcl
shll
or
mov
sbb
lret
in
movsl
cli
aam
rcrl
xchg
sbbb
pop
sub
mov
sub
or
inc
cld
lret
aaa
push
or
mov
cmp
test
test
lea
mov
test
xchg
cs
addb
enter
icebp
inc
or
movsb
xchg
adc
sbb
cmc
and
ficompl
ja
adc
scas
sti
jp
cmp
mov
imul
inc
and
stc
cmp
push
insl
fs
fldenv
stc
xchg
gs
xchg
inc
faddl
jmp
push
dec
idivb
xor
cmpsl
mov
and
movsb
sahf
push
sub
pop
repz
push
loopne
data16
or
cmp
push
out
sub
cmp
call
mov
push
push
cmp
cld
and
xor
fwait
pop
push
sub
loop
push
sub
xchg
ljmp
hlt
mov
mov
cltd
dec
fs
gs
cmp
push
imul
test
or
dec
ds
jg
xor
dec
add
inc
fmull
cmpsb
and
mulps
mov
jecxz
cs
ss
roll
sbb
and
or
xchg
das
add
les
push
stc
mov
or
push
push
dec
pop
mov
mov
aas
ja
push
adc
cmp
je
int
sbb
mov
and
lret
insb
or
lret
push
cmp
inc
ja
cmpsb
jl
and
addr16
ss
xchg
shll
cmp
popa
stc
dec
dec
fst
adc
into
and
mov
fs
stos
icebp
push
cwtl
rorb
cmp
movntps
mov
ror
data16
arpl
shrl
leave
icebp
dec
push
sbb
xor
jb
mov
sub
jns
mov
push
and
push
mov
call
cmc
sbb
jbe
lds
pusha
mov
sbb
cld
mov
sub
pushf
mov
shll
sbb
or
push
loop
cld
and
or
xchg
int3
mov
imul
out
dec
out
inc
mov
testb
push
cwtl
add
repz
fcoml
loopne
xor
pushl
nop
push
or
cmc
lahf
stc
xchg
inc
push
jecxz
inc
or
mov
mov
or
imull
jl
adc
sbb
call
scas
cmp
sub
out
adc
adcl
dec
xchg
repnz
mov
jle
gs
out
repz
ja
inc
jle
xchg
pop
xor
xchg
popa
popl
sub
jl
cmp
sbb
pop
push
mov
jecxz
popa
mov
adc
sub
cmpb
cmp
cmc
mov
lahf
adc
jmp
sub
inc
jmp
ret
sbb
imul
and
sti
into
out
and
inc
push
pop
cs
call
dec
xchg
fmul
mov
add
test
add
test
ret
std
in
dec
outsl
pop
fstsw
fdivs
cld
adc
and
ds
add
repz
and
outsb
es
fsubl
pop
lret
in
test
jns
mov
test
rcrb
sbb
sbb
orb
pop
out
pop
xor
ljmp
test
rolb
lock
add
or
sahf
loope
jg
sub
mov
fwait
or
push
mov
ja
popl
ljmp
and
cli
and
rcrl
es
adc
out
add
jno
pop
call
mov
mov
pop
push
data16
inc
jb
or
in
and
test
data16
xlat
das
xchg
outsb
sbb
popa
int
les
test
addr16
push
cs
jmp
loopne
sub
or
pop
or
xlat
or
cmpsl
mull
in
repnz
pop
cltd
push
repz
add
repnz
cli
jnp
test
jne
mov
mov
gs
inc
push
or
cs
adc
mov
pop
sub
or
insl
push
clc
cwtl
and
jl
or
inc
sti
sbb
dec
lock
push
xor
es
add
pop
in
inc
push
or
sub
adc
ret
cli
idivb
js
ret
inc
cmp
mov
nop
or
cmc
xchg
icebp
or
ss
mov
and
xor
or
popf
iret
or
js
jl
lock
sub
or
xor
add
daa
hlt
pop
lret
test
push
mov
mov
sub
pop
fwait
cmp
mov
sbb
arpl
cld
sub
xchg
or
xchg
shr
pop
adc
ficompl
inc
add
xchg
pop
das
movups
stos
dec
pop
push
xchg
sbb
or
and
mov
mov
mov
mov
dec
and
jmp
out
cmp
add
or
jno
es
sub
cmp
jge
in
xorb
andl
fsts
inc
sti
mov
aas
cmp
jecxz
mov
xchg
xor
and
mov
clc
bound
lret
sub
aaa
fstpl
scas
jmp
out
and
inc
pop
shll
imul
clc
ds
sub
arpl
jge
and
mov
mov
mov
inc
in
pop
push
pop
sti
cltd
mov
push
add
pop
and
xor
and
or
jg
and
fmull
cli
jge
push
mov
xor
out
push
dec
repnz
fcoms
sbb
popa
popa
pop
add
and
cmp
or
push
xor
jb
xchg
or
inc
daa
lock
pop
xor
push
sbb
stos
sub
push
cmp
jno
push
filds
or
scas
xor
sbb
mov
push
inc
jmp
jae
incl
xchg
arpl
cmp
push
adc
mov
xor
inc
test
jo
sub
push
pop
mov
push
int3
cmp
adc
jl
inc
clc
and
xchg
jmp
jl
pop
jg
test
jo
xor
cmp
loop
cmp
sub
jb
pop
inc
lahf
jno
inc
shl
das
sbb
pop
je
cmp
inc
shlb
mov
adc
imul
mov
sbb
icebp
sub
or
std
mov
ss
mov
and
mov
pop
inc
pop
xor
testb
pop
jbe
paddsb
cmp
aaa
cmpb
cmpl
sbb
lock
mov
ficompl
jb
sahf
mov
xchg
clc
and
mov
xchg
stos
aad
adc
xlat
push
es
xchg
sub
ss
push
fcmove
cld
shll
sti
sarb
sbb
push
enter
mov
cs
add
inc
sub
aam
movsb
bound
xchg
cmp
xlat
mov
lret
sub
cmp
stos
enter
testb
into
pop
pop
test
out
jnp
fs
pop
cmp
cmpsb
add
mov
stos
jmp
mov
jmp
stc
pop
rorb
mov
adc
sub
lds
push
test
sar
loope
loop
fs
inc
push
mov
daa
xchg
stos
popa
and
cmp
paddb
push
adc
and
jbe
popa
xor
mov
cwtl
fisubrl
jmp
push
adc
xor
subl
std
jne
call
cmp
stos
cmp
mov
dec
jmp
push
adc
pop
push
psubw
mov
sub
shlb
mov
out
or
rorb
lret
stc
test
fbstp
mov
loopne
push
pop
or
cwtl
push
xchg
outsl
jb
sbb
push
sub
jmp
adc
cmpsl
sahf
sub
or
sarb
ljmp
lret
and
add
mov
push
or
pop
push
daa
sti
mov
lds
mov
push
and
xchg
scas
add
jge
lret
js
add
mov
nop
push
pop
popf
xor
dec
out
add
sub
mov
bound
repnz
jbe
inc
add
or
xchg
sub
ljmp
pop
jne
loope
xchg
mov
bound
sub
xchg
push
cmp
fdivs
xor
push
lea
mov
test
fwait
outsb
jecxz
push
ss
shl
movsl
dec
xor
pushf
jne
sub
cmp
icebp
dec
xor
out
push
aaa
sub
push
movsl
pop
test
sub
aam
mov
dec
or
mov
mov
int3
jno
push
das
setg
jmp
stos
arpl
jmp
in
mov
mov
xchg
mov
lret
inc
daa
sbb
das
pop
and
sbb
popa
jle,pn
add
sub
sbb
and
fs
in
and
inc
shlb
ret
cltd
insl
or
outsb
mov
pop
pushf
sbb
dec
adc
rolb
mov
xorl
test
or
mov
xor
push
in
ja
inc
mov
mov
fimull
dec
lea
or
push
jbe
fildll
fwait
jg
mov
cmp
clc
das
sarl
and
mov
lret
imul
popa
stos
jo
dec
or
jne
mov
lods
xor
aaa
sahf
push
sbb
in
daa
push
cmp
imul
dec
stc
pop
out
rcrl
jge
xor
pop
jne
shll
cmpsb
repz
pushf
js
xor
data16
lds
int
pop
mov
std
out
pop
and
and
push
sbb
sarb
mov
push
sub
mov
ret
push
movsb
and
xor
adc
mov
gs
nop
mov
repz
mov
popa
fnstcw
pop
scas
sub
cmp
sbb
leave
jmp
shl
daa
push
mov
and
repnz
push
lea
leave
loop
xor
and
mov
add
dec
movsl
in
cltd
repz
mov
imul
ljmp
cmp
outsb
dec
repnz
scas
mov
sbb
test
das
push
fidivrs
shrb
rcrb
movl
arpl
pop
in
and
sahf
sub
jae
test
add
and
jb
push
cld
or
push
add
das
cmp
sbb
jns
es
xchg
addb
insl
push
and
inc
scas
xor
loope
aaa
stc
popf
fistpl
sub
and
pop
mov
xchg
lahf
push
sbb
mov
outsl
rol
movsl
ret
dec
push
jne
sub
cmp
xor
insl
stos
pop
adc
cmp
xor
pop
sbb
xchg
std
das
add
sbb
xchg
sbb
in
mov
pop
or
cli
std
add
xor
leave
gs
sbb
dec
adc
cmp
and
je
or
ss
scas
and
rol
cmp
mov
mov
sbb
and
ret
xchg
jbe
or
adc
aas
mov
xchg
jmp
adc
addr16
xchg
dec
sub
push
add
xor
sti
or
push
inc
xor
xor
pop
jno
aam
cli
dec
push
das
dec
jmp
inc
or
bound
or
repz
cmp
and
xor
add
test
sub
lret
add
ret
stc
int3
mov
jmp
mov
je
shlb
pop
cmp
cs
mulb
push
in
xor
mov
jo
fwait
mov
push
call
mov
aam
sub
add
xchg
lock
iret
jmp
adc
dec
loope
xchg
jmp
fcmovu
sbb
addr16
mov
mov
test
test
and
fcomps
fnsetpm(287
jl
xchg
lock
push
rcll
cmpl
in
or
shr
push
inc
push
jmp
repnz
mov
inc
cli
push
pop
push
mov
dec
mov
or
imul
cmp
repz
dec
cwtl
ja
sahf
popa
lcall
mov
jl
pop
das
inc
or
mov
loopew
mov
loope
scas
push
pop
mov
jae
es
mov
subl
dec
mov
arpl
inc
enter
pop
cmp
push
mov
mov
stos
wbinvd
sub
mov
pop
mov
fucomi
dec
clc
and
cmp
daa
xchg
push
arpl
lds
push
pushf
cltd
dec
inc
inc
sub
std
cs
sub
xor
cmpl
rcl
adc
pop
push
pop
sbb
or
aad
lahf
jle
and
add
sbb
push
adc
pop
push
inc
mov
mov
cmp
xor
and
jo
or
inc
mov
xor
inc
das
fcoms
in
lret
das
lcall
jb
movsb
sbb
rcrb
inc
cs
aam
add
mulb
xchg
inc
lahf
in
orb
jp
mov
xchg
jo
sti
sub
xchg
cmpl
push
out
mov
push
or
arpl
addr16
xorb
add
push
and
add
js
dec
mov
shl
mov
mov
xor
insb
aad
jmp
cmp
xor
pop
iret
push
mov
xchg
mov
inc
mov
cld
xor
and
mov
cld
clc
push
sub
outsl
mov
pop
xlat
daa
fsubl
scas
xchg
adc
loopne
and
les
out
jnp
mov
test
jg
lahf
jl
cmp
cltd
insl
add
ror
mov
xlat
jae
add
ds
sbb
inc
xchg
lret
sub
jecxz
push
cmp
or
mov
mov
add
sbb
or
push
xor
movsb
rcll
jo
cmp
jbe
pop
mov
test
fisubrl
push
ret
inc
imul
xchg
cmp
and
movsb
lret
hlt
lock
pop
popf
ljmp
test
cltd
repnz
sub
movl
rcl
lea
cld
add
mov
cwtl
fstps
stos
and
cwtl
push
mov
clc
fadds
add
test
sbb
mov
sbb
inc
xchg
std
cmp
sub
mov
nop
das
in
and
jb
iret
xor
shr
mov
add
add
inc
inc
pop
rcr
xchg
ss
stos
rolb
cmp
mov
movsl
cli
adc
and
pop
add
inc
push
jmp
in
adc
jo
xchg
dec
inc
mov
cwtl
fdivrp
sahf
mov
or
fsts
mov
inc
cmp
fnstsw
mov
sbb
into
clc
jg
outsl
pop
xchg
shlb
movsl
in
mov
leave
sar
jae
mov
sub
push
pop
mov
bound
add
in
add
popf
push
int3
mov
scas
mov
idivb
cmp
mov
mov
push
sbb
xchg
xlat
outsb
mov
jae
dec
xchg
cld
cmp
jge
rcll
je
xchg
mov
pop
jmp
mov
daa
jne
hlt
pusha
sbb
std
insl
inc
ror
lret
cmpsb
push
clc
in
sub
cmp
mov
add
pop
adc
push
mov
dec
fs
popf
dec
lahf
pop
in
sbb
call
fildl
add
cmpsb
push
bound
mov
call
mov
enter
mov
mov
je
dec
sarb
loop
insl
and
pop
inc
je
mov
cmpsl
pop
dec
leave
adc
stos
pop
xor
and
push
xor
jp
aam
jmp
pusha
pop
xor
out
scas
mov
push
in
xor
sbb
scas
xchg
push
popf
test
incl
push
sub
push
push
movsb
push
mov
movsb
test
sub
xchg
jmp
xor
add
and
pop
into
push
divl
jle
sub
and
adc
push
jg
jl
mov
xor
pop
xor
lahf
adc
sbb
sti
xor
pop
loope
inc
dec
sbb
pop
repnz
push
out
cmp
sti
loopne
inc
bound
or
dec
dec
add
push
add
mov
mov
mov
push
sub
insl
mov
push
lock
dec
add
pop
sahf
loopne
bound
xor
xchg
mov
gs
inc
push
add
leave
pop
adc
pushw
xor
xchg
xor
sbb
mov
sbb
and
test
xor
mov
fldt
sub
lea
pop
sub
testl
push
gs
lods
adc
insb
in
cmp
mov
iret
mov
jmp
adc
xchg
push
pop
mov
orb
ss
push
mov
or
or
loopne
mov
je
xchg
imul
push
movsl
aas
dec
pop
pop
mov
ds
outsl
sbb
dec
add
fmulp
lahf
pop
sbb
lock
cmc
sbb
imul
mov
jne
imull
pavgb
test
gs
xor
jbe
cmp
daa
mov
cmpsl
inc
repnz
pop
repnz
xchg
out
and
inc
dec
sub
lea
xchg
data16
lods
mov
sbb
fmul
test
push
cmp
mov
dec
or
in
push
push
gs
cmpsl
jns
pop
repz
lods
sbb
es
jle
and
insb
int
mov
int3
dec
in
pushf
cmp
mov
js
sti
icebp
adc
lds
jge
test
jmp
lretw
mov
mov
and
addps
repnz
cmp
jns
xchg
ljmp
stos
lods
adc
je
mov
pop
sbb
movsl
xchg
cmp
mov
pop
aam
lcall
xor
xor
lock
clc
sub
sub
jecxz
je
enter
leave
push
sti
inc
ficoms
adc
mov
or
aam
outsb
and
aaa
das
add
bnd
scas
cmpsl
sub
cmp
mov
icebp
mov
cwtl
int
xchg
push
mov
into
dec
adc
xchg
mov
inc
outsl
xchg
stos
ss
aad
mov
adc
push
sbb
movsl
lahf
mov
mull
shll
xor
data16
jo
in
sbb
jb
imul
leave
jo
dec
mulb
lahf
dec
lds
and
aaa
test
movsb
add
fwait
mov
stc
arpl
or
sbb
jge
imul
lea
mov
ds
xchg
sbb
mov
or
in
mov
xchg
out
in
jmp
dec
mov
xor
lret
es
test
fimull
cmp
pushl
pushf
ljmp
mov
mov
jp
mov
leave
jns
adc
pushl
xchg
or
xchg
addr16
ficoml
push
sbb
xchg
repnz
push
and
test
rcrb
or
jo
loop
or
xor
in
sbb
in
lock
test
repnz
jo
fs
sti
cli
sbb
dec
stc
jp
ljmp
mov
cmpb
addb
push
iret
mov
dec
mov
xor
int3
and
jo
jbe,pt
cmpsl
push
and
jbe
ja
pop
fwait
daa
push
outsb
mov
std
in
and
cmpb
insb
push
rcl
jp
mov
sub
xor
cltd
lahf
dec
test
cmp
movl
mov
cmpsl
insl
mov
aas
fldpi
bound
in
adcb
scas
and
in
lret
dec
lods
sub
lds
fstpl
fsubr
enter
xor
lahf
std
mov
mov
outsl
inc
je
fimuls
jne
dec
out
out
mov
cmpsb
enter
sti
add
and
sbbb
xchg
je
push
in
cmp
cmp
xchg
icebp
adc
xor
and
add
sbb
ret
and
jle
inc
outsb
jns
in
pushf
mov
inc
cmp
and
jae
and
add
lcall
sbb
repz
lret
push
xchg
xchg
add
sti
lret
push
loope
push
push
push
xor
inc
jle
cmpb
sub
popa
sbb
mov
in
or
enter
call
mov
hlt
jo
sub
jg
jnp
fbstp
dec
cwtl
jmp
subb
sub
js
add
js
xchg
cli
adc
sbb
pop
movsb
jno
sahf
shr
jnp
push
es
xchg
pushf
test
cltd
pop
pop
jno
shrl
cmc
cmp
les
mov
sbb
out
daa
jns
fidivrs
test
pop
push
lahf
mov
mov
cld
or
jns
jb
mov
bound
or
jb
int3
sti
data16
cmp
sub
dec
jmp
xchg
pop
sbb
push
dec
and
pop
pop
adc
mov
out
scas
sub
inc
sbb
mov
adc
cmpsl
jle
ja
js
js
or
stc
mov
call
repnz
outsb
sbb
cwtl
cmp
sub
shl
movl
call
mov
ja
or
sbb
xor
mov
cmp
outsb
dec
mov
add
mov
mov
stos
jmp
or
push
or
mov
push
dec
sub
dec
addb
and
sbb
xchg
mov
xor
xor
and
je
xorb
std
test
jbe
or
mov
loop
cmp
mov
mov
jbe
cld
xorb
push
mov
mov
orb
xor
pop
pop
daa
jb
add
test
mov
jmp
dec
inc
pop
call
jbe
cmpsb
mov
pop
fs
sti
mov
roll
mov
xor
ficoml
loopne
cmp
cld
add
aad
push
or
inc
dec
divb
push
fcompl
sbb
jne
loopne
or
incl
or
sub
xor
jecxz
ret
call
imull
inc
mov
fbld
or
mov
shll
pop
sbbb
ret
push
and
lcall
cmp
ds
iret
movsl
jp
adc
pop
mov
in
add
mov
mov
pop
and
mov
xchg
push
fldt
sbb
loope
or
call
testb
lds
rorb
inc
ja
lahf
sbb
push
pop
lret
cmpsl
xchg
cmp
movsb
cltd
adc
stc
rcll
dec
jae
lock
gs
in
mov
mov
addb
sbb
jae
test
sbb
sahf
jnp
xchg
mov
xor
xchg
fstp
dec
subb
or
add
push
sbb
mov
push
jecxz
ss
sub
int3
outsl
push
pusha
inc
xchg
frstor
push
sti
scas
or
or
push
add
xor
dec
mov
pop
pop
fs
dec
mov
mov
jle
sub
mov
add
stc
xchg
sbb
fs
xchg
loopne
roll
jno
mov
outsb
addr16
sbb
dec
add
daa
aas
adc
out
es
cltd
test
aas
stc
mov
jl,pt
ljmp
jbe
lcall
mov
cmp
mov
cmp
dec
aas
pop
and
sub
gs
aam
outsb
mov
bound
mov
mov
adc
and
xchg
mov
push
dec
and
mov
xchg
lret
mov
cmp
dec
rcll
into
sub
rcll
pop
jp
cmp
outsb
rcll
dec
jb
xor
or
int3
insb
stos
adc
or
movsb
test
imul
cmp
push
or
repz
push
pop
cmc
stos
jno
imul
and
into
das
cmp
mov
mov
mov
push
xchg
ljmp
incb
mov
lret
push
push
sti
xor
cmp
jmp
or
xor
dec
in
or
ret
pop
sub
pop
out
sub
adc
cld
cmp
cltd
ror
mov
xor
repnz
xchg
orl
push
inc
out
dec
mov
mov
out
mov
add
mov
ss
jb
mov
imul
jg
mov
arpl
or
inc
pop
jb
pop
mov
jae
je
or
clc
xlat
ret
adc
test
subl
push
cmp
ret
inc
or
call
jg
dec
inc
and
sbb
mov
xor
test
mov
cmp
es
shlb
inc
mov
lock
xor
mov
cli
stos
and
mov
dec
clc
les
sarl
dec
imull
and
or
or
mov
jmp
imul
jmp
and
repz
dec
cli
or
cmp
and
loope
push
xchg
xchg
test
movsl
std
bound
push
xchg
enter
dec
sub
cmp
cmpsl
popf
fldl
jae
bound
or
cmp
mov
scas
sahf
sbb
xor
mov
rcrl
shll
js
je
loopne
mov
jb
jae
das
mov
inc
stos
adc
pop
ja
or
out
push
loopne
mov
in
and
push
xchg
xor
ret
inc
or
cmc
xchg
sar
out
call
leave
notl
sti
jne
pop
and
sub
dec
add
in
movb
lret
and
jae
repz
add
test
pop
or
and
xor
mov
ja
in
test
call
jns
or
add
jmp
sbb
mov
jg
or
pop
dec
mov
andl
outsb
add
rcll
xchg
jns
dec
lds
push
mov
inc
fisubrs
leave
sbb
ds
and
xchg
push
jnp
xor
and
and
bound
push
xor
mov
sahf
xor
pushf
dec
cmp
mov
xor
jle
add
in
fimuls
int3
orps
fldcw
movsl
mov
cmp
jmp
jle
aad
xor
andl
inc
popf
xchg
add
sarb
popa
dec
add
add
jp
icebp
adc
loope
popf
ficoms
dec
add
xlat
test
addl
sbb
mov
xlat
je
xchg
mov
add
mov
adc
dec
out
mov
movb
mov
rclb
push
pop
sub
dec
xlat
and
sub
xchg
xchg
mov
inc
jo
stos
push
jl
add
push
stc
and
jle
jg
in
jl
xchg
out
mov
push
mov
push
mov
shll
ljmp
sub
in
xchg
sbb
sbb
jo
lret
dec
test
out
or
clc
hlt
jbe
loopne
call
jl
xchg
jbe
or
bound
pop
in
or
xchg
dec
jne
mov
movsl
sbb
popf
mov
and
mov
into
call
ficompl
inc
orb
pop
mov
push
sbb
and
mov
cld
or
outsl
xchg
or
or
mov
inc
cmp
and
cmp
repz
shlb
mov
push
bound
pop
inc
cwtl
and
hlt
mov
xor
push
or
ret
lret
imull
inc
ficoms
or
mov
mov
in
imul
daa
fists
mov
enter
jmp
shrl
mov
xchg
aad
jae
mov
sub
int3
lock
inc
ds
cli
xchg
ljmp
aas
int
fisubs
insb
fdivrs
xor
sub
clc
sbb
mov
in
ror
sbb
dec
andl
adcl
dec
xchg
iret
mov
daa
orb
ss
mov
ss
pop
paddq
cld
sbb
lock
jmp
mull
pop
mov
sub
jno
and
data16
adc
push
push
call
nop
pop
or
fs
push
push
mov
push
inc
in
leave
rcl
jbe
stc
insl
add
jl
out
adcl
jnp
das
add
fnstcw
cmp
pop
call
or
test
pop
or
cmp
leave
icebp
cwtl
adc
pop
ds
icebp
pop
cmp
clc
mov
aad
jmp
insl
loop
dec
mov
and
dec
nop
inc
inc
and
dec
xchg
sub
adc
sub
enter
sbb
jge
cld
cltd
mov
cld
ds
or
push
push
push
pop
leave
neg
aaa
push
mov
in
jecxz
stos
sbb
dec
test
lea
addb
rorl
mov
arpl
and
insb
jp
dec
ret
pop
mov
jae
out
or
movsb
stos
or
jp
and
lahf
test
and
lods
pop
sub
push
fsubl
inc
bound
xor
inc
clc
ja
dec
int3
push
pusha
cmp
sarl
dec
mov
test
fiadds
orl
add
sub
gs
mov
loope
mov
insb
dec
popf
loopne
out
leave
dec
mov
add
jbe
loope
pop
cmc
add
push
jne
mov
insl
pop
xor
jmp
dec
or
xchg
das
push
pop
or
push
add
add
mov
orb
sbb
fistl
jne
push
dec
cli
sub
adc
fists
and
xor
ficoml
xor
cmpsb
sub
lods
jl
or
mov
push
push
ja
jmp
xor
imul
daa
adc
test
data16
mov
in
xchg
test
call
aas
add
dec
xchg
mov
cmp
or
dec
mov
sbb
cs
fnstenv
or
pop
inc
rcl
sti
ljmp
mov
mov
in
sub
push
movsb
dec
jecxz
stc
fldt
and
pop
sbb
sbb
fidivl
cltd
adc
dec
pushf
cltd
cs
and
sbb
add
jl
hlt
imul
fs
dec
repnz
addl
adc
add
sub
sbb
aad
iret
xor
pop
popf
mov
orb
mov
xchg
sub
hlt
mov
out
push
xor
inc
pop
pop
clc
shrl
or
inc
les
mov
xor
and
lahf
xchg
lret
and
enter
jg
jle
enter
test
insb
mov
mov
add
dec
fldl
outsl
mov
xor
and
add
lret
pop
xlat
mov
adc
mov
inc
push
leave
gs
xlat
push
fldl
jbe
fstps
repz
cmpsl
cmp
ja
sub
iret
pop
or
shr
in
push
pop
dec
jne
mov
push
and
out
push
push
in
lds
mov
aam
std
add
push
mov
es
jb
sub
stos
aad
pop
adc
sub
ja
or
and
shl
sub
idivb
icebp
and
divb
cmp
rcl
push
lock
fsubrl
push
out
call
rcll
dec
cmp
inc
mov
loope
dec
into
sub
pop
jae
adc
mov
fildll
js
xor
pusha
sub
jl
push
jno
and
pop
sti
xchg
add
xlat
scas
inc
xchg
dec
mov
push
push
adc
dec
pop
sub
dec
rolb
jb
dec
dec
mov
jmp
dec
into
pop
mov
fimuls
mov
mov
sarb
insb
push
dec
xor
xchg
mov
cld
mull
scas
fnsave
xor
addb
lcall
inc
push
adc
sub
and
leave
insl
loope
pop
dec
bound
inc
es
cmp
mov
xorb
loope
pop
dec
sbb
mov
pop
xchg
sub
jno
enter
fs
mov
test
pop
sbb
arpl
sub
arpl
jo
pop
movsb
xor
ja
dec
test
jb
lods
call
adc
arpl
sub
jb
sbb
jne
sbb
jb
cmp
sub
in
arpl
sub
mov
mov
mov
jno
out
subl
add
imul
add
or
push
addb
decl
or
mov
imulb
fsub
dec
fwait
rclb
mov
loopne
pop
add
subl
push
add
push
push
xlat
mov
push
lock
push
xlat
pushf
divl
stos
and
je
xor
ret
test
mov
adcl
cmp
xchg
stc
dec
mov
cmp
lahf
addr16
daa
cmc
scas
cmpsb
rorl
mov
xchg
dec
mov
sub
jge
mov
xor
inc
std
out
push
lret
dec
loop
xor
orb
dec
mov
jmp
cmc
mov
and
mov
shlb
mov
orb
or
movl
mov
sarb
loope
xchg
dec
adc
lds
mov
stc
xorl
mov
fisubs
clc
inc
sub
sbb
ret
fs
loope
shrl
fisubl
add
mov
popf
push
jl
jl
cmp
pop
mov
enter
jb
jp
mov
xor
es
out
leave
or
mov
push
push
je
mov
sub
xor
int3
cmc
loope
mov
dec
pop
test
in
dec
xchg
jno
mov
das
jmp
hlt
mov
xor
enter
fsubr
iret
jae
fistpll
sub
addl
cmp
jg
xorl
out
add
hlt
xchg
xorl
mov
mov
sbb
mov
cmpsb
mov
xchg
pop
inc
rcrl
fsubs
lcall
out
adc
lret
dec
fstpt
jmp
jmp
rcr
mov
scas
lcall
repz
sbb
mov
movsb
jbe
std
mov
pop
aaa
xchg
sub
xchg
mov
cmpsl
ret
and
jno
dec
xchg
adc
and
cmp
or
xor
es
or
icebp
add
jae
js
test
mov
enter
loopne
push
xor
pop
ficomps
ret
or
dec
fistpll
or
fiadds
and
xor
add
lret
ds
mov
sub
or
ficoml
mov
les
or
pop
ret
ret
out
cmp
sub
sub
inc
dec
cmp
add
xor
pop
xchg
pop
and
and
add
icebp
movsb
xor
sub
cmp
cwtl
push
ret
jnp
aad
in
mov
in
popa
push
lret
xor
pop
sar
push
xchg
add
xchg
leave
repnz
leave
test
cmc
cmc
daa
sarl
mov
es
push
push
cmp
mov
or
xchg
mov
roll
idivb
or
pop
cmp
cmp
into
call
xor
rorb
mov
fwait
jmp
repz
inc
popf
pop
lea
mov
mov
cmp
sub
xchg
xorl
mov
loopne
xor
mov
wbinvd
jg
pop
xchg
call
xchg
orb
sub
das
adc
rorl
nop
pop
lods
dec
loope
xlat
jge
retw
insl
add
rcrb
sub
jg
jmp
dec
xor
sbb
loope
adc
inc
lods
cli
iret
cmpb
xchg
dec
stc
or
test
jb
xchg
lds
or
fwait
pop
and
ljmp
xchg
les
out
adc
push
sbb
cmpsb
push
sub
push
stos
jns
xor
inc
mov
jo
mov
push
jge
cmp
xchg
mov
repnz
mov
fsubs
mov
sub
cmpsl
sub
test
inc
mov
cli
xchg
sar
popf
xchg
pop
test
sub
adc
movsb
inc
in
inc
jnp
fists
or
adc
insb
sub
gs
add
fucomi
or
cmc
inc
les
movb
inc
pop
insb
mov
or
mov
push
ja
sahf
imull
or
mov
add
mov
jb
dec
sar
mov
pusha
add
pop
dec
call
cld
cli
add
push
add
mov
mov
add
mov
or
das
cmp
jl
subb
jb
leave
jge
aad
orb
add
ljmp
hlt
sub
jbe
jp
in
clc
mov
movsl
fisubl
push
xchg
mov
add
mov
int3
ja
cmp
cmp
fst
sub
pop
fidivs
xor
adc
pushf
or
addr16
mov
push
sub
xchg
add
adc
mov
xchg
adc
std
call
cmpsl
aaa
jb
push
stc
sub
dec
pop
lea
cmpsb
sarb
inc
jns
add
push
sbb
pop
cmpb
cmp
push
jae
xchg
cmp
mov
pop
xor
mov
dec
jb
inc
adc
cs
dec
ds
and
inc
cld
cmp
call
out
daa
adc
data16
in
xlat
push
mov
aad
icebp
daa
push
adc
mov
gs
dec
std
sub
pop
xor
pop
pop
aam
fsubr
or
jg
in
mov
mov
jno
aam
stos
out
xchg
jmp
xchg
movsl
sub
icebp
call
xchg
sub
inc
in
pop
lea
mov
jns
jg
ja
pop
cmp
xor
mov
lcall
aad
sbb
hlt
cmp
call
fwait
cmpsb
jo
inc
add
arpl
jg
pop
sbb
inc
and
popf
int
int
es
jecxz
add
push
iret
add
test
xchg
rcrb
test
icebp
pop
daa
push
xor
lcall
add
push
mov
adc
sbb
cmp
jno
xchg
loopne
cld
push
xor
mov
lods
or
int3
retw
jbe
mov
and
icebp
and
and
inc
xchg
mov
xchg
arpl
cmp
push
dec
sbb
push
fsave
ficoms
test
sbb
adc
sbb
pop
mov
rorl
jae
mov
inc
fldenv
mov
lds
jnp
pop
loope
je
es
les
ljmp
push
pop
add
ret
in
subb
cmp
pop
xor
cmp
shl
xor
ds
dec
sub
loop
mov
or
xchg
xor
jae
in
ret
rcrb
or
cmpsb
push
cmp
mov
jne
xchg
mov
sti
pop
sbb
ljmp
cmp
push
ret
shlb
mov
movsb
xor
xchg
test
mov
jmp
xor
pop
add
call
sub
xchg
fstpl
enter
pop
or
adc
pop
pop
test
mov
xor
mov
arpl
lea
add
xchg
dec
pop
xlat
leave
adc
dec
or
fiadds
adc
jno
call
pop
ljmp
test
jbe
add
cltd
popa
jg
dec
lret
in
movsb
cli
cmp
test
cmovg
cmpb
fidivrs
dec
adc
shlb
pop
inc
vunpcklps
popf
push
or
rorl
pop
xchg
fs
mov
bound
jno
xchg
jecxz
sub
push
and
pop
stc
or
loopne
push
fldl
dec
ds
inc
push
and
sarl
sub
cmc
dec
out
add
out
jno
sbb
mov
mov
or
test
in
fs
xor
jbe
nop
outsl
mov
sub
cmp
pusha
jno
xchg
fistps
insb
adc
aad
fistpl
lods
int3
pop
sahf
cld
movsb
sbb
loope
push
or
jne
dec
push
push
scas
inc
cmp
and
adc
sbb
xchg
scas
dec
in
cmp
sub
mov
fdivl
push
stos
pusha
jmp
insb
les
daa
out
sbb
shlb
cmpl
mov
jb
repnz
ret
popa
jo
into
xchg
sbb
xchg
xor
stos
fildll
lds
call
adc
mov
sub
mov
push
mov
mov
mov
ljmp
in
jmp
movsl
cli
insb
mov
arpl
or
xor
loopne
jne
call
hlt
xor
cmp
xchg
lret
cwtl
rclb
sbb
lock
jg
sbb
cmpsb
cltd
clc
lret
fimuls
pop
in
sarl
mov
add
mov
xor
testl
mov
and
sbb
lock
cmpl
cmpsb
lea
arpl
mov
push
mov
push
xchg
in
inc
mov
arpl
jno
sub
mov
mov
sbb
and
push
jne
adc
adc
ret
xor
and
pop
inc
jle
iret
jge
mov
sub
movsl
fsubrl
sub
orl
sub
xor
dec
dec
cmp
inc
shrb
enter
mov
or
adc
movsb
xor
js
dec
push
test
cmpsl
add
stos
in
lret
dec
sbb
ss
cmovo
adc
imul
jb
push
xor
movsb
dec
cmc
pop
xchg
sbb
pop
mov
inc
hlt
mov
and
leave
outsl
movsl
imul
test
cmp
lods
cs
and
stc
int
xchg
fldenv
fldenv
popf
xor
sahf
sub
add
or
shr
cmp
ja
jmp
jns
inc
xlat
in
push
sub
arpl
push
xchg
push
data16
movsl
sbb
icebp
adc
jne
push
xor
std
enter
mov
loopne
xor
mov
aaa
clc
push
mov
pushf
ds
out
setbe
mov
in
enter
cmp
arpl
xlat
adc
fmull
sahf
cmp
mov
ds
mov
adc
dec
jg
ljmp
xchg
mov
sub
mov
out
or
xor
clc
inc
loope
mov
stc
mov
fldenv
cmpsl
arpl
dec
test
jg
lock
leave
out
mov
shlb
aas
mov
pop
pop
jmp
push
pop
cmp
xchg
inc
mov
push
jg
fwait
or
add
cltd
je
mov
jo
xchg
filds
xchg
or
enter
cmpsb
xlat
stos
push
xchg
mov
push
mov
out
pushf
out
adc
push
dec
xchg
int
mov
loope
sbb
insb
mov
outsl
test
std
sbb
mov
inc
test
pop
test
lds
xchg
add
cli
addr16
or
and
jno
pop
test
fnstcw
pop
fcomps
fs
and
call
inc
mov
xchg
mov
pop
pop
loopne
xor
pop
int
xchg
mov
jno
cmpsl
sahf
movsb
dec
pop
or
inc
push
call
mov
mov
icebp
sahf
push
insb
arpl
mov
pop
clc
repnz
es
sub
mov
sub
dec
push
jg
ret
shrb
mov
xor
mov
js
lret
cmp
rcll
shll
testb
add
xchg
pop
xor
mov
popf
inc
rcl
adc
cltd
mov
push
loopne
call
fistpl
lret
into
push
push
pop
xor
fnstsw
stos
lcall
outsl
insl
and
mov
lcall
jge
iret
insl
push
call
mov
mov
not
lock
push
sub
clc
push
xchg
push
add
xbegin
sub
rcr
daa
test
cld
pop
ss
movsb
or
push
inc
xor
cld
sub
jbe
jmp
xchg
movsb
jmp
jnp
push
mov
stc
lahf
add
xchg
hlt
xchg
and
dec
inc
jge
mov
push
pop
adc
hlt
cmpsb
adc
mov
mov
or
sbb
sub
cwtl
hlt
or
hlt
popa
data16
daa
jae
mov
xor
sbb
cld
sub
leave
dec
dec
xchg
scas
sub
mov
cmp
in
outsl
or
cld
sbb
pop
outsl
jl
cmp
jl
mov
jge
in
nop
push
xor
mov
jne
sbb
cmp
dec
xchg
and
in
sbb
sub
add
je
cld
arpl
mov
cld
pop
jecxz
repz
pop
xchg
into
xchg
xchg
leave
clc
inc
cmp
stos
cs
or
shll
sbb
pop
or
add
cmp
push
jg
scas
ljmp
dec
mov
xchg
imul
bound
jmp
jl
repnz
ret
jp
addr16
and
stos
push
mov
push
js
push
adc
xor
int3
or
or
xchg
and
push
int
jne
rcrl
repz
out
xchg
mov
fs
aad
ja
jo
ljmp
scas
rcl
xor
and
push
push
dec
push
stc
lods
stos
and
mov
mov
xor
stc
into
push
push
or
adc
mov
sti
cmp
es
test
lret
pop
push
in
inc
fdivrl
adc
adc
lret
pop
in
pop
data16
divb
leave
das
pop
cmp
pop
jo
mov
cmpsl
sbb
loop
leave
cmpsb
clc
into
insb
movsb
mov
mov
mov
mov
fsubrs
stc
loopne
adc
mov
jb
xchg
and
push
mov
pop
mov
xor
push
das
cmpsl
and
call
cmp
xor
sub
mov
xlat
or
inc
fwait
xchg
sbb
sbb
hlt
fisubl
andb
rcll
inc
enter
test
sub
add
sbb
mov
stos
int
or
or
pusha
xchg
stos
pop
pop
pop
sub
inc
add
data16
imul
pushf
jns
bound
sbb
jmp
jb
ror
xchg
ret
fstpt
or
jmp
jne
push
test
sub
popf
in
cmpsl
or
sbb
int
add
imul
pop
and
sub
daa
bound
notl
adc
or
adc
pop
mov
push
xor
stos
sub
cmpsl
xor
loopne
dec
inc
pop
mov
push
and
xchg
and
ds
xchg
and
xchg
add
push
jnp
sub
dec
movhlps
jecxz
adc
xor
mov
xchg
dec
es
orb
xor
mov
loop
cmp
mov
pop
divb
stc
repnz
sub
push
cwtl
aad
jge
push
inc
lods
pop
xor
adc
xchg
imul
adc
lret
bound
cmp
scas
xlat
fs
dec
mov
xchg
shlb
ja
bound
push
and
sub
dec
xchg
fstp
dec
popa
cmp
mov
xor
test
push
cmp
call
test
ja
pop
jb,pn
leave
pop
xor
out
inc
jle
dec
daa
sub
dec
andl
cmp
or
in
or
lock
xor
xchg
scas
xchg
sub
inc
popf
pop
sub
mov
cmp
inc
mov
cmp
xchg
or
sahf
insb
sub
and
pushf
in
jnp
inc
mov
mov
mov
xor
sub
dec
movsb
lea
ds
xchg
or
inc
jae
pop
dec
add
call
xchg
popa
pushf
or
div
mov
movsl
xor
push
push
mov
test
clc
inc
mov
pop
cld
lds
stc
dec
jmp
sub
xor
jle
adc
jb
orb
sub
jne
ror
and
sub
out
sub
mov
outsl
notb
sbbl
or
sbb
and
hlt
inc
hlt
cs
rol
jne
xchg
cmpl
movsb
xchg
mov
cltd
add
fs
pop
jne
imul
and
mov
push
orl
repz
nop
sbb
ja
enter
mov
nop
jne
orl
cmp
lret
repnz
add
mov
jae
dec
jno
adc
pusha
cmp
xchg
push
rcll
add
sbb
mov
or
lahf
imul
fsubs
mov
push
ss
scas
in
lock
call
push
add
mulb
sub
loopne
push
testb
xorl
mov
test
mov
and
xor
ss
mov
push
mov
ljmp
ficomps
jg
test
scas
enter
int3
out
push
inc
inc
push
dec
dec
dec
jge
roll
rcrb
push
mov
sbb
gs
and
mov
xchg
push
not
aaa
jg
sti
cmp
mov
mov
and
insb
repz
flds
xor
test
mov
dec
or
aam
in
int3
inc
in
xor
mov
lcall
mov
push
or
repnz
jne
mov
dec
dec
outsb
sahf
outsl
leave
repnz
outsb
das
call
fisubl
insl
call
xchg
divl
shlb
and
dec
std
sub
loopne
jmp
in
into
sub
jp
add
or
sti
push
add
xchg
lea
sub
sbb
test
jge
lret
or
jo
test
std
cmp
adc
fwait
out
imul
orb
or
icebp
fmull
in
mov
xchg
loop
hlt
mov
psubusb
and
push
paddb
push
sbb
mov
nop
fst
rorl
or
xchg
test
test
je
xorb
sahf
cmpsb
cli
cs
push
movzwl
je
cld
mov
lds
sub
cmp
lds
leave
leave
xchg
sbb
mov
add
sub
in
pushw
idiv
or
mov
mov
and
sub
lds
jns
xchg
cs
push
ds
mov
push
xor
adc
jmp
es
sub
dec
lret
adc
daa
push
dec
lock
add
sub
xor
cmp
testb
call
in
push
gs
stos
mov
test
into
adc
sahf
fwait
movsl
inc
insb
xor
lahf
ror
std
cmp
pop
stos
xchg
cmpsb
call
clc
fwait
hlt
inc
mov
or
dec
loopne
mov
outsl
je
cwtl
call
mov
mov
ret
and
std
or
stos
xor
clc
testb
or
cmp
pusha
or
cltd
inc
or
out
mov
add
test
add
ss
pop
xor
jne
mov
jo
daa
repz
push
aad
or
test
pop
int
pop
aad
bnd
inc
xlat
and
xchg
adc
inc
into
cmc
dec
jecxz
hlt
stos
pop
icebp
push
mov
xor
cwtl
or
jo
pop
jbe
mov
dec
xor
clc
sbb
mov
mov
fcoml
push
xchg
movsl
jo
jmp
outsl
inc
out
and
je
das
dec
das
or
inc
std
sahf
cld
sub
call
shl
cmp
daa
mov
push
add
add
rclb
mov
push
ret
pop
ds
cmc
stc
jge
inc
lods
stos
lcall
mov
lret
jns
shlb
bound
xchg
or
out
rcrb
je
enter
das
daa
stos
inc
xor
ret
inc
or
fists
mov
cmc
inc
xchg
or
pop
in
pop
pop
jo
test
movsb
dec
xchg
repz
lock
sub
and
xchg
imul
jl
and
dec
and
stos
lret
dec
adc
lcall
cwtl
mov
mov
out
cmp
add
cmpsb
fbld
fwait
mov
add
and
sub
mov
xor
test
push
or
add
jle
mov
xor
dec
dec
dec
or
test
int3
rol
rol
fs
loop
mov
sbb
outsl
test
xchg
xchg
xor
inc
xlat
testb
lods
dec
xchg
sub
cmc
push
xchg
dec
insb
xor
dec
call
popf
inc
inc
sbb
mov
sbb
mov
pusha
out
sahf
pusha
adc
xor
lods
cmp
dec
dec
inc
add
outsl
mov
je
xor
push
push
movsl
sub
leave
in
pop
jbe
daa
cld
cwtl
jae
into
inc
xchg
pop
inc
cmpsl
mov
xor
mov
adc
and
shll
add
hlt
lret
cld
stc
neg
stos
add
push
xchg
fstpt
mov
xchg
adc
frstor
jp
outsb
les
sbb
out
dec
pushf
leave
and
pop
lods
movsl
mov
ljmp
std
xor
or
sbb
rcrb
pop
mov
and
incl
stc
push
lock
les
pop
inc
jp
xor
ret
push
pop
shrb
jb
mov
fs
xchg
mov
push
outsb
dec
inc
jmp
ja
and
dec
jb
push
push
add
sub
inc
cmp
sbb
adc
and
orl
fsts
sahf
aad
scas
adc
and
xchg
bound
and
and
mov
dec
or
shrl
lock
xor
pop
movsb
repz
jns
stos
rcrl
jo
je
sbb
ljmp
sbb
sbb
sbb
jne
jnp
sub
push
addb
lahf
mov
push
scas
sub
arpl
xor
push
jecxz
mov
movl
jo
aad
sbb
sbb
pop
aam
popa
and
outsl
cmp
jecxz
jl
push
incl
cmp
push
cmp
or
lea
sbb
inc
lods
lret
int3
mov
jl
xor
inc
sbb
or
or
inc
jb
push
loop
in
adc
pop
enter
push
popa
popf
jecxz
cmp
or
mov
add
clc
xor
cli
call
in
es
lods
je,pn
mov
xchg
lcall
push
push
subb
psubsb
std
andl
shl
notb
sub
fiaddl
arpl
iret
push
jmp
subb
stos
sbb
test
gs
jnp
or
in
xor
jo
inc
xchg
addr16
and
or
mov
mov
dec
jne
test
jne
add
xchg
add
or
and
inc
ret
xchg
jp
loope
dec
movsl
xor
jne
repz
mov
jl
xchg
add
test
adc
pop
cmp
enter
pop
xchg
sarl
mov
pop
mov
ret
cmpl
inc
pop
mov
cwtl
or
jo
imul
mov
adc
loop
jne
movsl
insl
push
and
or
scas
testl
xor
xchg
push
addr16
insl
test
xchg
add
and
out
call
aas
into
cmp
push
cmp
fisubrs
mov
aas
mov
mov
ret
mov
sub
mov
inc
mov
jle
xlat
jnp
popa
lock
jp
jmp
xor
push
loop
movsb
sbb
and
and
lods
push
fildll
cmpsl
test
mov
sbb
mov
mov
sub
test
mov
call
push
dec
shr
xchg
mov
aaa
add
sbb
loope
push
popa
xor
xchg
stc
cmp
lea
xor
ror
adc
pop
jne
lahf
or
cmpsb
push
cmp
mov
pushf
cmpsl
push
xor
iret
int3
sbb
shlb
adc
stos
scas
or
aam
mov
or
dec
mov
outsl
aaa
call
out
push
jae
pop
int3
cli
xor
push
in
jnp
sti
add
scas
pop
add
repz
add
and
dec
in
mov
jb
mov
mov
std
mov
sbb
insl
cld
scas
sti
fmuls
adc
lret
xor
mov
insl
push
adc
sbb
mov
and
sub
insl
mov
cwtl
push
push
lahf
cld
xchg
xor
cmpsl
fldt
ror
push
jno
add
sti
hlt
sbb
dec
and
into
and
call
pop
or
xor
mov
repnz
repz
ss
in
mov
gs
jne
out
fistl
pop
lret
cmp
lret
xchg
test
loop
hlt
andb
and
add
lret
mov
daa
fisubs
lods
push
cmp
loopne
adc
test
andl
insb
mov
cmp
out
scas
test
or
stos
call
sub
imul
and
pop
xor
sub
out
and
mov
andb
or
stos
jle
push
in
and
or
stos
pop
push
in
insb
in
daa
test
xor
insb
test
test
sbb
jmp
xchg
push
or
imul
xor
bound
add
push
push
repz
dec
fcmovu
bound
xor
dec
std
mov
ja
pop
push
mov
inc
sbb
pop
stos
test
loopne
adc
push
cmp
adc
fdivs
mov
add
sti
cltd
stos
add
out
scas
in
xor
loope
xchg
mov
push
mov
hlt
ljmp
sub
sub
notb
dec
and
or
nop
mov
inc
out
jg
lds
ljmp
push
movsb
outsl
push
dec
popa
xor
hlt
dec
popf
pop
mov
inc
inc
sub
loopne
sbb
pushf
pop
pop
sub
pop
push
push
xchg
stos
mov
sbb
std
dec
jne
mov
repnz
clc
jmp
pop
push
imul
stc
xor
jb
and
out
push
or
pop
andb
mov
jbe
pop
loop
sbb
xor
pop
inc
inc
cmp
rclb
mov
ficomps
adc
fistl
cmpsl
cmp
and
mov
inc
jmp
sub
xor
bound
into
int3
push
lret
nop
adcb
test
sahf
jge
jle
and
mov
lret
ficoml
shlb
xor
adc
out
das
xor
ljmp
jo
into
mov
cltd
das
mov
mov
inc
mov
jae
inc
adc
mov
das
add
cltd
add
push
pop
sarl
lret
jecxz
push
push
decl
mov
mov
inc
push
or
lea
and
sub
mov
add
ja
in
orl
das
mov
stc
cli
push
pop
addb
mov
data16
loopne
adc
inc
xchg
push
sar
in
push
call
movsb
or
or
clc
add
xchg
sbb
je
dec
adc
pop
scas
mov
out
cmp
push
mov
rorl
jb
add
nop
stc
test
cld
mov
xchg
lahf
adc
mov
xchg
mov
stos
je
cmp
cs
andb
and
sub
push
cmp
cmpsb
mov
popa
or
sub
jg
inc
mov
hlt
mov
lods
mov
test
cmp
das
mov
aas
ljmp
testb
inc
movsb
xchg
xor
mov
call
xor
mov
cmp
lret
pop
or
divl
cmp
mov
dec
icebp
add
xchg
fs
adc
pop
jmp
sub
add
xchg
add
test
mov
pop
push
aaa
fldl
es
or
out
xor
sub
xchg
xlat
mov
xchg
ror
xor
sbb
mov
mov
pop
pop
pop
xor
mov
xchg
jle
jnp
push
dec
cmpsl
and
pop
jl
pop
arpl
aam
adc
mov
xor
sbb
shl
jne
fwait
xrelease
xorb
adc
mov
movsb
inc
cwtl
mov
inc
sbb
idivl
rclb
mov
xchg
test
ja
sub
mov
xor
in
mov
jp
push
testl
and
push
xchg
mov
xor
negl
push
xchg
adc
sbb
cmp
stc
push
push
gs
adc
sar
and
hlt
sub
out
loopne
outsl
ljmp
xor
adc
push
shlb
ljmp
xor
adc
push
mov
and
adc
sub
xor
lahf
fstpl
dec
ret
sub
adc
add
lahf
mov
and
cmp
adc
shll
or
sub
aaa
fs
lret
push
or
shr
mov
mov
pop
imul
add
out
and
aad
adc
data16
cmp
dec
pushf
and
mov
xor
xchg
lret
add
push
push
inc
cltd
or
xchg
mov
inc
mov
push
xchg
lahf
add
sub
xor
inc
xchg
sub
stos
sbb
cmpsl
push
adc
mov
adc
mov
xor
notl
fs
mov
ret
and
fsubs
addb
xor
or
loop
mov
xor
sbb
xchg
adc
pushf
inc
sub
and
int3
xchg
xchg
leave
jmp
sbb
mov
and
xchg
inc
jns
inc
add
dec
dec
xor
add
sbb
cmp
cwtl
mov
inc
mov
sbb
inc
sbb
stos
ficoms
cmpb
hlt
mov
push
xchg
push
add
inc
outsl
cli
mov
sub
test
or
add
cld
ja
repz
adc
pushf
jmp
aad
sbb
mov
mov
jp
push
jg
mov
adc
mov
dec
addl
or
cmp
mov
ss
adc
add
add
push
xchg
inc
add
inc
pop
mov
loope
and
sti
mov
or
xchg
adc
cli
sahf
or
mov
stc
xchg
push
testl
adc
fistl
clc
dec
and
xor
jle
or
push
push
cmp
dec
xchg
dec
inc
and
and
notl
xor
xchg
push
xchg
scas
add
inc
cmpsl
xor
add
stos
cld
or
ficoml
hlt
xchg
rorb
and
and
test
aam
arpl
xchg
jnp
les
mov
sti
out
test
xchg
bound
adc
xchg
inc
mov
cmp
xchg
xor
jl
push
das
inc
loop
out
sbb
mov
and
stc
stos
test
sub
xor
sbb
xor
js
xor
and
push
xchg
cmpsl
add
inc
mov
sub
and
lock
cmp
adc
add
ljmp
subl
enter
push
sub
pop
xchg
adc
adc
pushf
dec
sub
mov
sub
in
push
xor
jo
dec
dec
push
mov
jbe
push
xchg
outsb
inc
dec
push
push
adc
or
push
adc
xchg
push
dec
and
and
divl
adc
mov
jo
ja
cld
or
rolb
stos
in
push
push
fmull
mov
and
int3
imul
or
xchg
lods
mov
xor
mov
mov
mov
stos
xchg
test
stos
je
ret
push
insb
dec
fstpt
pop
and
push
xchg
jecxz
dec
inc
sti
mov
push
and
sti
push
cltd
sahf
fidivrl
xchg
mov
mov
mov
xor
push
sbb
fldcw
dec
shrl
and
xlat
jo
stc
sti
xlat
xchg
icebp
or
dec
mov
int3
or
aad
mov
cmp
sbb
fwait
int3
sub
sub
and
data16
mov
xchg
xchg
and
lea
mov
sti
push
cltd
shl
xchg
or
nop
mov
sti
adcb
and
xchg
mov
and
data16
cmp
xchg
inc
dec
bound
jl
pop
divl
std
xor
cmc
push
xchg
lea
cmp
mov
mov
add
push
mov
mov
and
fdiv
mov
out
and
push
xchg
push
add
inc
imul
and
sti
in
ret
inc
mov
sbb
mov
and
mov
mov
mov
jbe
shll
and
push
xchg
roll
pop
inc
jmp
insb
and
sti
fs
inc
xchg
sbb
cmp
push
sub
mov
and
xor
push
xchg
sub
and
adc
mov
rorb
out
rclb
popa
stos
into
adc
dec
jno
mov
mov
mov
stos
xchg
test
and
mov
push
xchg
int
jp
lds
outsb
mov
inc
xchg
pop
xchg
js
push
loope
dec
adc
push
inc
dec
icebp
mov
and
or
sub
cmp
sbb
xor
mov
xor
mov
xor
rorb
and
and
test
and
push
xchg
jns
movb
mov
testl
and
pop
push
cmp
and
lods
dec
cmp
xchg
mov
or
xchg
or
or
mov
js
push
sti
jo
or
fmull
inc
mov
int3
and
xor
and
push
xchg
xchg
add
inc
lods
cmp
push
sti
sub
xor
adc
xchg
rorb
and
and
test
and
mov
movsl
xchg
addl
mov
scas
mov
adcb
and
xchg
mov
and
data16
cmp
xchg
inc
dec
bound
jl
pop
divl
mov
and
lcall
cs
adc
testl
push
and
push
xchg
mov
fsubl
neg
add
and
out
ljmp
dec
fisubl
hlt
and
imul
lret
xor
and
push
xchg
add
mov
sahf
sti
mov
inc
mov
stos
xchg
xor
jle
leave
mov
and
data16
push
inc
adc
jl
pop
and
imull
cmc
xor
lea
xchg
test
xor
mov
mov
cmp
push
mov
add
add
fmuls
and
and
test
fisubs
push
xchg
popa
add
inc
jns
mov
mov
xchg
xchg
mov
mov
stos
mov
dec
and
data16
xchg
pop
dec
jbe
push
and
dec
mov
xor
jmp
add
stc
mov
sbb
cmp
adc
xor
stos
and
lods
push
sbb
mov
and
and
mov
cli
and
push
xchg
pop
add
inc
push
rorb
sti
lock
mov
sbb
adc
adc
cmp
ret
filds
repnz
iret
xchg
jmp
outsb
stos
fsts
pushw
rorb
mov
and
sarl
xchg
dec
lods
and
pop
pop
pushf
lods
inc
and
and
je
add
xlat
pop
push
push
xchg
mov
jne
test
dec
mov
sub
add
movsl
nop
cld
push
movsl
fst
mov
and
sub
jnp
les
sbb
xchg
fists
jbe
pop
xor
mov
fmul
outsb
fs
dec
enter
mov
push
and
lea
jb
sub
loopne
jecxz
call
jne
lea
adc
std
loope
adc
or
aaa
nop
outsb
jl
jae
sub
pop
add
dec
outsl
arpl
mov
outsl
dec
add
push
call
shrl
lret
xchg
das
xchg
aaa
pop
or
dec
bound
outsl
dec
fwait
jg
test
repz
or
jo
pop
mov
and
xchg
pop
and
jo
jge
loope
fldl
incb
mov
stc
cmpsl
mov
xor
rcrb
add
fwait
ljmp
pop
leave
inc
push
aam
cmp
out
add
push
xor
sbb
inc
or
test
or
cmp
add
push
cmp
imul
xor
mov
cmp
and
or
movsb
nop
mov
lret
insb
push
mov
inc
das
mov
out
out
push
push
mov
ja
sbb
pop
cmp
cwtl
jbe
popf
xchg
jne
into
ret
sbb
sub
loope
inc
xchg
out
cmpb
dec
adc
imulb
popa
ljmp
adc
pop
mov
push
test
xchg
dec
mov
adc
xchg
and
insb
lea
and
add
xor
inc
icebp
cmp
adc
pop
bound
int
ds
pushw
dec
es
xlat
or
and
mov
mov
mov
movsb
and
xor
adc
add
push
and
call
ret
lret
xor
out
nop
push
je
call
push
cli
xor
sbb
cmp
call
bound
sti
or
lds
jno
and
adc
out
mov
mov
lods
cmp
xor
inc
xchg
jle
or
pop
insb
cmp
inc
jl
lahf
outsl
cli
int
push
push
mov
inc
mov
inc
sub
pop
fs
mov
or
call
sbb
xchg
cs
loope
mov
loopne
sub
popa
cld
popl
mov
lahf
dec
sub
fwait
dec
rorl
ja
cld
and
aaa
or
xchg
push
jo
aaa
pop
cltd
cmp
scas
les
pop
pop
xor
or
lods
mov
hlt
dec
push
loope
cmp
movsb
outsb
push
les
and
dec
bound
inc
adc
sti
je
ss
iret
popa
adc
ljmp
ljmp
outsl
loopne
inc
sti
mov
ss
mov
adc
pop
adc
xchg
or
cld
sbb
mov
xlat
divl
stos
leave
xorb
adc
aad
jnp
or
cli
jb
cs
add
add
mov
dec
mov
test
mov
hlt
jb
ja
mov
mov
jge
and
pop
nop
sub
pop
sbb
repz
into
enter
movsb
rcll
cmp
outsl
and
xor
scas
jo
jecxz
push
and
orps
dec
inc
sub
cltd
stc
sub
mov
je
mov
ret
push
loope
jecxz
shll
adc
ds
lea
ds
lea
lods
lea
lods
cmpl
insb
push
insw
outsb
cmp
and
push
dec
aaa
imul
cli
dec
cmp
or
outsl
and
sti
imul
stos
jmp
inc
mov
stc
cmc
call
sub
call
mov
cmp
lret
mov
add
jb
add
arpl
prefetch
or
mov
inc
call
mov
inc
sub
aad
imul
mov
mov
test
stos
xchg
cmc
push
adc
inc
xchg
stos
push
inc
mov
aad
rcl
pop
hlt
stos
mov
call
inc
pop
sbb
push
daa
inc
call
cmp
adc
in
cmp
std
pop
or
call
aas
sub
movsb
inc
cmp
and
and
xchg
cmpsb
pop
je
pop
shl
inc
push
pop
push
lods
repz
daa
lret
pop
xor
mov
lods
aaa
or
and
mov
dec
jl
push
dec
sub
addr16
mov
adc
mov
xchg
fdivp
negb
xchg
pop
ret
lods
pop
aad
ds
xchg
cmp
lahf
jecxz
rolb
mov
xchg
xor
or
std
test
mov
add
mov
and
jle
mov
cmpsl
add
pop
subl
ss
sbb
mov
add
mov
adc
arpl
cld
setno
inc
adc
cmp
outsl
call
mov
add
push
cmp
cmp
sub
data16
jo
fs
sub
push
mov
test
and
or
mov
inc
pop
adc
je
aaa
xchg
mov
xchg
rcrb
in
add
lea
es
xchg
or
sti
push
icebp
xchg
ret
fcmovbe
ljmp
xchg
push
inc
in
dec
adc
cmp
fs
or
mov
pop
dec
movsb
xchg
add
xlat
or
xchg
adcb
ret
push
in
dec
dec
stos
sbb
or
cmp
outsb
pop
mov
xor
push
xchg
add
mov
repnz
and
dec
adc
and
add
and
or
push
xor
shrl
xchg
cmp
xchg
inc
sbb
mov
mov
sub
or
pop
push
pop
adc
and
and
test
andl
icebp
adc
push
mov
mov
test
adc
jnp
or
inc
and
sti
mov
inc
scas
jno
rclb
push
push
repnz
and
xor
xor
adc
mov
and
data16
cmp
dec
sub
icebp
mov
and
jl
push
xchg
sbb
sub
cmp
ror
and
push
mov
ror
mov
adc
mov
mov
sarb
adc
dec
inc
movsb
and
rclb
mov
mov
popa
add
push
xchg
adc
mov
fisubs
es
push
jnp
and
loope
mov
inc
inc
push
shrb
adc
je
xor
xchg
dec
jecxz
mov
pcmpgtd
out
xchg
or
and
adc
out
add
inc
imul
sbb
repnz
shlb
and
lret
pushfw
mov
push
adc
push
dec
sub
add
addl
mull
push
adc
and
imul
xchg
out
jae
adc
and
pop
xchg
push
jno
or
add
or
sbb
rorl
sub
add
dec
aaa
dec
inc
push
ljmp
div
in
mov
xor
inc
lret
pusha
daa
sti
sub
jne
push
jns
cli
dec
outsw
je
popa
xlat
fimull
push
fstpt
pop
xlat
sbb
pop
pop
jl
mov
cmp
cwtl
push
xor
xor
xor
imul
fistps
inc
inc
imul
pop
inc
outsb
push
push
in
fwait
dec
dec
or
jae
aas
aaa
cs
pop
cmp
inc
jg
sbbb
std
jecxz
ret
aam
jg
int
jae
ficompl
cltd
arpl
inc
push
mov
test
pop
add
jno
ret
jae
orb
call
loopne
xlat
dec
or
sbb
add
pop
imul
cs
call
lcall
jo
cmp
jo
arpl
lds
arpl
jbe
add
lret
push
or
out
idivb
jmp
mov
popf
add
xchg
bound
pop
daa
mov
xor
pushf
hlt
push
and
dec
fldcw
jo
pusha
sbb
push
addb
mov
push
push
dec
and
scas
scas
leave
outsb
and
push
and
testl
push
enter
inc
mov
jb
ds
push
xor
loopne
xor
in
jae
jp
inc
xchg
fchs
hlt
lods
and
into
jg
pop
jmp
lcall
adc
or
inc
or
aad
js
test
insb
xchg
js
add
lret
dec
popa
fisubrs
jg
popa
lret
xor
cmp
inc
notb
mov
jo
and
idivl
and
enter
pop
insb
xchg
inc
xchg
cmp
outsl
fsubr
push
push
and
mov
xor
ficoms
ljmp
mov
mov
dec
insb
cld
push
push
jo
jno
call
mov
cmpsb
mov
inc
dec
lods
mov
cmp
sahf
aam
data16
outsl
dec
stos
imul
mov
jae
or
outsl
dec
mov
notl
pop
lcall
outsb
add
and
imul
loopne
sbb
adc
sbb
test
nop
mov
push
adc
xchg
xchg
push
inc
lret
cmpl
xchg
xor
jae
test
je
pop
inc
es
mov
imul
add
stc
xchg
adc
fnsave
out
outsl
jo
orb
ret
data16
dec
mov
cld
xchg
adc
jne
lock
outsb
add
cli
sbb
lds
bound
and
push
sub
inc
mov
jno
cmc
out
push
jecxz
sbb
out
jno
mov
xor
js
lea
inc
push
sub
lds
push
push
outsl
xchg
add
rorb
adc
xor
iret
in
jne
xchg
sub
and
lcall
jno
cmp
lea
mov
pusha
ret
xchg
xchg
dec
mov
xor
scas
pusha
push
xorw
mov
imul
add
push
jo
sbb
bound
dec
xchg
and
data16
testl
lock
mov
scas
shr
and
lock
rclb
fcoml
xchg
adc
rcr
jbe
sbb
dec
adc
and
popaw
js
fisttpl
je
out
sbb
push
sub
lods
nop
push
lock
mov
xchg
and
lfs
mov
jo
push
out
lds
idiv
dec
lahf
push
xorl
and
dec
adc
and
ficompl
outsl
jg
loopne
and
cmp
inc
pop
inc
lret
push
jbe
cli
inc
fildl
std
shll
pop
testl
mov
mov
and
daa
fcoml
insl
pop
aaa
test
js
push
repnz
loope
and
pushf
and
bound
jle
out
xchg
shr
sarb
jle
mov
dec
roll
les
repz
jle
insb
dec
sub
xor
cmp
and
mov
cmp
js
add
xor
das
pop
add
nop
add
and
mov
dec
daa
imul
fbstp
mov
and
or
sbb
dec
lcall
out
inc
stos
fdivp
jp
push
pop
and
mov
cmp
push
xchg
mov
push
fdivrp
add
xor
jb
popf
push
pop
fldenv
inc
fadds
aam
inc
jp
nopl
xor
add
scas
mov
sbb
or
cmp
cwtl
ret
loopne
lock
fsubrl
cli
test
daa
jg
add
addr16
dec
jg
xor
add
bound
idivb
mov
cmpsl
insl
rolb
nop
and
imul
jp
aad
jbe
adc
jno
xor
push
test
or
int3
inc
inc
inc
out
popa
mov
mov
test
dec
out
inc
push
inc
add
or
adc
push
insl
mov
push
push
lret
aas
adc
mov
aad
inc
jno
sbbl
jecxz
icebp
push
push
and
mov
fsubs
add
mov
sub
xchg
xchg
or
xorb
ret
dec
rolb
dec
push
push
lcall
dec
rolb
dec
sti
dec
add
decb
xchg
sbb
xchg
dec
dec
push
mov
gs
imul
and
mov
addr16
xor
add
cs
inc
dec
sbb
jp
cmpsl
imul
std
sub
dec
mov
movsb
adc
jno
insl
nop
cmpsb
ret
inc
jbe
movl
ja
test
pushf
cmpsb
test
dec
push
mov
pop
jo
insb
sub
lret
sbb
subb
lds
scas
pop
xor
jae
xchg
pop
and
addl
es
dec
and
mov
neg
into
ljmp
inc
inc
inc
and
jno
sub
mov
adc
jo
push
lcall
icebp
mov
sbb
mov
jb
dec
out
int3
jne
jb
lock
mov
repnz
jp
push
adc
adc
adc
in
dec
insb
icebp
fnsave
jge
adc
repnz
and
inc
jno
bound
inc
rclb
jo
adc
xor
push
sbb
stos
jae
out
ja
inc
scas
add
add
adc
adc
mov
push
push
dec
lret
adc
sub
ficoms
xor
icebp
jno
mov
ds
mov
fs
imul
scas
mov
xchg
pop
inc
xor
dec
cmp
repnz
inc
out
jp
sub
scas
test
push
js
lret
sbb
js
ret
test
pop
sbb
stos
push
pop
and
push
jo
jnp
adc
push
mov
shlb
arpl
pop
add
flds
jo
dec
and
mov
cmp
add
adc
sub
dec
subb
mov
jae
push
push
ljmp
mov
or
addr16
setp
adc
loopne
and
sbb
push
push
inc
enter
jo
ja
adc
repz
into
aad
outsl
aaa
xchg
mov
jo
notb
mov
xchg
out
push
roll
lahf
adc
xorl
jmp
push
lods
mov
jle
push
rclb
mov
pusha
outsl
push
lret
mov
push
jo
es
jb
aam
sub
repz
rclb
jno
outsb
outsb
jns
ds
fcompl
add
mulb
inc
cmp
dec
mov
jo
arpl
testl
dec
fisubrs
dec
push
cli
data16
cmp
xor
inc
out
test
jns
shlb
jno
push
out
daa
sbb
stos
inc
mov
xchg
cld
sbb
imul
vmwrite
sub
filds
push
mov
jle
push
adc
push
cli
filds
push
stos
adc
in
mov
nop
mov
push
inc
jmp
or
sub
mov
and
test
nop
or
fs
inc
xchg
jp
mov
or
enter
dec
stos
xchg
or
jns
dec
fwait
push
clc
test
xchg
or
mov
inc
push
adc
sub
cmc
in
xchg
sbb
push
fiaddl
lock
push
out
fldl
pop
push
adc
lret
pusha
cs
xchg
push
inc
andb
sub
mov
push
fidivl
lods
mov
imul
les
mul
pusha
xchg
hlt
pusha
jns
mov
push
push
dec
pop
pop
push
ret
movsb
sub
mov
jmp
movsb
insb
pusha
negb
sub
ss
out
xor
pop
aaa
dec
xor
xorl
je
sbb
int3
cmp
inc
xor
nop
stos
dec
lods
dec
xchg
dec
ret
push
mov
sbb
imul
addr16
inc
lds
dec
dec
and
sub
test
insb
inc
adc
xchg
sysexit
and
and
push
test
ret
fsubl
imul
xchg
test
bound
loopne
pusha
pop
sub
dec
mov
mov
and
outsb
jl
xchg
bound
pop
cmp
sbb
cmp
into
inc
nop
out
inc
cmp
and
push
jb
mov
icebp
clc
mov
pop
mov
dec
popa
sub
lahf
or
add
dec
or
daa
xchg
and
ret
push
dec
test
je
sbb
xchg
dec
shrd
aaa
jmp
mov
jb
or
sbb
mov
and
jp
scas
clc
lea
add
jns
push
mov
stos
inc
or
dec
xor
ds
cmp
push
inc
cmp
fs
fwait
lret
adcl
and
pop
mov
xor
test
and
dec
addr16
and
push
push
sub
mov
cmp
dec
sub
push
sub
cmp
test
add
add
xchg
push
arpl
mov
insb
stos
adc
fs
xorb
test
lret
shlb
push
sbb
sbb
pop
sbb
mov
push
fildll
and
xchg
fs
sub
jle
xchg
shr
and
lret
jnp
push
jae
daa
imul
sub
xor
nop
jns,pn
cmpsb
out
sbb
mov
jae
and
jb
add
insb
movl
cwtl
xor
subb
add
sub
mov
jb
dec
push
lret
push
mov
gs
jge
es
cli
pop
or
js
aas
pop
pop
test
dec
push
or
and
sub
insb
push
xlat
sbb
push
int
addl
xor
cmpl
mov
in
and
and
and
push
jbe
mov
inc
push
aaa
ret
repnz
cld
xchg
inc
push
jbe
inc
cs
je
and
aaa
or
mulb
lret
adc
push
clc
mov
adc
cmpl
adc
movsb
and
xor
adc
dec
stos
lahf
add
xor
cs
or
sti
repnz
in
aam
mov
call
xlat
out
adc
fimuls
push
jno
adc
jecxz
mov
mov
popa
push
sub
movlps
inc
faddl
and
js
dec
jae
int3
and
js
cltd
pop
mov
xor
test
outsb
sbb
xchg
add
fiaddl
bound
or
sub
test
mov
or
xor
and
push
push
and
cltd
das
data16
dec
xor
andb
mov
dec
es
popa
scas
xchg
jne
call
outsl
shr
je
jnp
dec
bound
pop
lods
repz
pop
pop
mov
jbe
insl
mov
nop
sbb
and
jge
and
jb
push
mov
ret
sbb
dec
sbb
cmpsl
adc
fs
dec
movsb
aam
mov
aam
lds
fadds
jle
js
ss
iret
inc
shlb
in
push
add
or
jb
push
cmp
data16
or
aam
jp
fs
fisubs
mov
mov
dec
lea
push
roll
mov
test
test
mov
lret
outsb
cltd
push
adc
leave
inc
sub
dec
popf
pop
es
pop
scas
mov
rorb
inc
addr16
scas
xor
lret
mov
js
aas
pop
hlt
jg
cli
xchg
outsb
cmp
aaa
lcall
sub
mov
push
xchg
sbb
mov
dec
scas
xchg
je
mov
or
les
repz
out
pop
jp
cmp
std
out
and
loop
loopne
jge
ss
mov
test
xchg
push
adc
xchg
push
mov
xor
push
mov
jmp
sarb
mov
xchg
cmc
outsb
sub
stos
or
xorb
enter
divl
in
lods
cmp
inc
sbb
andb
repz
mov
jnp
or
jg
loopne
ret
aaa
jae
mov
das
je
cmp
mov
sbb
xor
sbb
push
lods
push
arpl
xchg
aam
xor
lds
pop
sub
xlat
push
cwtl
or
sbb
sub
xchg
jno
fs
cmp
bound
imul
mov
ficoms
insb
insl
mov
jmp
out
nopl
adc
in
stos
data16
jbe
outsb
dec
push
mov
aad
inc
mov
pop
loop
cmpsb
sub
pop
arpl
mov
test
and
daa
xchg
notb
lods
add
push
pmaxsw
filds
xor
movsb
mov
cmp
cmp
xor
loopne
sub
enter
fs
adc
jae
jbe
lcall
adc
push
jecxz
and
jl
pop
pusha
xchg
mul
xor
cmp
call
imul
mov
dec
cmp
je
in
sbb
add
jle
enter
inc
sbb
adc
add
clc
in
mov
andb
pop
or
stc
mov
in
aam
stos
rcrl
hlt
fildl
adc
or
mov
arpl
and
cmp
andl
fisttpl
or
in
sbb
pop
adc
cmp
aad
ret
add
dec
cltd
insb
and
dec
mov
xor
xchg
into
inc
hlt
aam
addl
fldenv
push
jmp
inc
dec
outsb
stc
push
dec
jle
fs
dec
stc
je
pop
stc
test
stc
xchg
dec
mov
stc
mov
sahf
stc
les
stc
aam
stc
in
into
stc
hlt
dec
fdivrp
add
push
or
cmpsl
push
sbb
xchg
pop
sub
xchg
negl
out
pop
jle
pop
insb
jle
pop
jl
aaa
pop
mov
pop
pushf
jle
pop
lods
jle
pop
mov
jle
pop
fdivrl
pop
in
jle
pop
cld
sbb
adc
xchg
cmp
lahf
xchg
dec
lahf
out
pop
lahf
xlat
mov
jl
aaa
mov
pushf
lahf
pop
mov
mov
lahf
addr16
in
lahf
inc
mov
or
cmpsl
gs
xchg
movsl
sub
mov
cld
inc
dec
outsb
cld
push
dec
jle
fs
dec
je
pop
cld
test
cld
xchg
dec
mov
cld
mov
sahf
cld
les
cld
aam
cld
in
into
cld
hlt
dec
fdivrp
add
pop
or
cmpsl
sbb
xchg
pop
sub
dec
push
cld
inc
dec
outsb
cld
push
dec
jle
fs
dec
cld
je
pop
cld
test
cld
xchg
dec
mov
cld
mov
sahf
cld
les
cld
aam
cld
in
into
cld
hlt
dec
fdivrp
add
adc
cmp
pop
sub
xchg
dec
aas
out
pop
aas
xlat
sbb
jl
aaa
sbb
pushf
aas
pop
sbb
mov
aas
addr16
in
aas
inc
sbb
or
cmpsl
lods
sbb
xchg
sub
cmp
pop
sbb
xchg
mov
dec
and
adc
mov
xor
add
xchg
popa
jnp
mov
and
sti
hlt
cmp
sbb
cmp
pop
dec
jecxz,pt
pop
aas
in
sbb
jb
lret
aas
aaa
sbb
xchg
aas
cs
scas
aas
push
sbb
aas
jl
push
push
cmp
jp
shrl
push
loope
pop
jns
gs
dec
stc
orb
popf
dec
cmp
in
dec
fdivrp
adc
push
pop
js
pop
jnp
adc
lods
jle
pop
fidivrl
pop
cli
sbb
sbb
popf
fwait
aas
inc
sahf
cmc
cmp
lahf
in
je
leave
mov
xchg
lahf
and
popf
lahf
adc
cli
xchg
gs
addr16
pop
cmpsl
in
out
lds
cmp
nop
sti
sub
or
repz
inc
aas
cli
sbb
jnp
xor
xchg
mov
sbb
ret
sbb
or
iret
lods
sub
xor
mov
aas
inc
mov
jb
pop
aas
xchg
mov
aas
and
aas
cmp
sbb
lret
jbe,pt
sarb
push
out
aas
inc
push
andl
or
lret
addr16
iret
dec
jle
int
jle
int
jle
int
jle
scas
sub
pusha
cs
sbb
adc
adc
shll
scas
inc
popf
stc
enter
cmp
sub
mov
pop
ss
add
mov
dec
fmuls
add
shll
xor
sbb
pop
jle
int
jle
scas
cmp
and
sbb
dec
cld
test
dec
int
mov
or
cmp
fldcw
mov
lds
clc
mov
je
imul
into
into
xchg
adc
mov
addr16
cld
int
cmp
mov
cmp
sbb
sbb
cmpsl
ss
xchg
xchg
mov
rolb
push
and
mov
lea
jecxz
inc
push
mov
in
mov
push
xchg
ds
xchg
js
pop
mov
or
daa
xor
mov
dec
clc
push
and
fisttpll
mov
xor
xchg
pop
adc
jne
pop
rcll
inc
sub
mov
inc
test
ret
jbe
pop
jecxz
mov
xor
or
test
dec
arpl
push
jo
jae
leave
mov
xor
sbb
es
cs
andl
jp
rorl
xchg
cwtl
add
sbb
jo
leave
push
mov
inc
dec
in
pop
iret
aad
mov
movsl
inc
xor
lcall
mov
inc
mov
add
test
push
jmp
clc
jb
xor
jnp
mov
mov
test
jp
push
and
and
mov
jp
iret
cmpsl
inc
in
loope
sbb
aam
clc
hlt
in
dec
sar
testl
sbb
xchg
push
sub
rcrl
aas
fstpl
jg
aaa
sbb
cwtl
add
lahf
cmpsl
sub
lahf
mov
xchg
lahf
mov
jns
iret
iret
addr16
in
and
repnz
ljmp
mov
jnp
test
ljmp
lds
ljmp
jb
pop
repnz
stc
sub
mov
and
sbb
sbbl
sbb
pop
jle
movsb
lods
mov
push
mov
in
adc
scas
push
scas
sbb
clc
push
jo
les
cmp
sbb
pop
sbb
inc
shl
decl
push
ds
pop
dec
cmc
lods
xchg
and
int
lock
xchg
mov
push
xchg
rolb
adc
rcrl
jae
pop
std
push
cmp
sub
xchg
out
iret
inc
dec
insl
mov
in
loopne
inc
loopne
xor
pop
xor
push
daa
sub
sbb
lret
bnd
iret
iret
sbb
xchg
scas
mov
lahf
mov
in
cmc
ret
repnz
xchg
lcall
mov
loope
shrl
shll
lahf
push
call
lret
pop
icebp
sbb
sbb
daa
push
gs
gs
cmc
cmp
mov
cltd
xor
mov
ret
int
jle
int
jle
int
jle
int
pop
repz
and
aam
test
adc
sub
mov
aad
mov
mov
mov
jecxz
ror
sbb
mov
mov
push
sti
lods
xor
mov
lock
and
xor
mov
inc
pop
insb
in
gs
pop
hlt
xchg
cld
stos
dec
fwait
cld
iret
dec
sar
dec
lods
cmp
add
aam
gs
pushl
inc
jnp
flds
test
insl
adc
cmp
jecxz
cmc
cmp
les
bound
je
sbb
sbb
jmp
pop
iret
lds
mov
ret
movsl
sbb
xchg
mov
sbb
and
mov
pop
push
and
cmc
xchg
mov
dec
enter
lret
cmp
jne
arpl
adc
cmp
xchg
cmp
iret
out
gs
adc
cmp
pusha
lods
push
lahf
test
push
enter
iret
pop
jmp
rorl
cmp
jae
lahf
imul
iret
push
mov
les
test
mov
sahf
int
pop
stos
imul
aas
pusha
sbb
add
mov
jmp
shll
icebp
xor
shl
ds
cmpsb
dec
cld
loop
pop
cld
in
mov
pop
fsubs
and
xchg
inc
sbb
sub
cmp
push
mov
sub
xchg
xor
loopne
push
shr
repz
sar
repz
rolb
xor
push
pushf
and
sub
std
jp
mov
xchg
popa
shlb
xor
lret
fcoml
or
movsl
gs
cmpsl
cs
in
ret
dec
push
mov
daa
ljmp
ljmp
cmp
mov
ds
pop
pop
mov
push
hlt
xchg
cld
mov
movsl
adc
dec
cli
loopne
popa
add
adc
popf
stc
mov
dec
ret
icebp
fidivrs
in
jno
cmp
jp
push
fxch
push
mov
aas
jnp
into
and
xor
cmp
frndint
push
and
bound
pop
jge
sbbb
mov
aas
mov
and
repz
pop
int
jle
push
or
push
subl
cmp
inc
push
orb
nop
daa
dec
pop
mov
sahf
lahf
sub
lahf
fsubrs
lahf
sti
and
subb
pop
ret
pop
aad
mov
xor
cmp
and
aaa
leave
jb
icebp
cmp
cmc
pop
pop
and
inc
test
clc
out
jbe
jmp
and
add
lahf
pop
cmp
mov
popf
popf
mov
push
xchg
dec
sarb
jne
and
in
ficompl
in
out
inc
and
sbb
jp
iret
lods
sbb
mov
xchg
inc
cmp
push
pop
subl
mov
jbe
and
mov
sub
jmp
arpl
dec
adc
push
sbb
in
jo
add
xchg
mov
push
fsub
cmpl
adc
sub
adc
ss
mov
arpl
add
pop
push
cmpl
js
subb
lahf
fldt
xchg
cmp
addr16
movsl
dec
adc
stc
test
stc
xchg
dec
xchg
je
cld
push
fdivrp
cld
jg
ss
test
sub
adcb
sbb
cs
cmp
cmp
and
mov
enter
sbb
mov
cmpsl
outsb
pop
sbb
addr16
push
mov
xor
jne
stc
je
jmp
stos
fdiv
pop
jb
std
dec
rsm
daa
sub
ds
mov
scas
xchg
jae
xchg
dec
inc
insl
cltd
rcrb
jbe
push
imul
push
xchg
sbb
call
fcmovnb
mov
mov
xor
fsub
ret
sbb
rcrb
add
jne
adc
sbb
inc
mov
adc
inc
mov
lds
pop
stc
inc
psrad
in
mov
adc
mov
cld
fcomps
inc
pop
sti
inc
mov
push
jne
and
cwtl
daa
add
loope
mov
inc
mov
or
lahf
add
enter
clc
pop
mov
xchg
mov
cmc
and
jae
add
cmc
rcll
adc
pop
push
enter
jecxz
lret
cld
icebp
dec
ficoml
movsl
push
xor
and
mov
xchg
ret
popa
aas
les
xchg
xor
test
test
shlb
adc
sbb
mov
cmp
pushf
mov
and
dec
and
ret
loope
jge
mov
fstpt
cmc
mov
cmpsl
sub
movsl
test
sbb
mov
or
int3
xchg
mov
mov
mov
xchg
jbe
roll
shll
outsb
push
jbe
cld
mov
xor
movsb
lahf
clc
and
andl
push
mov
loope
rcrl
rol
pusha
dec
enter
clc
sub
popf
cmp
mov
fmuls
cmp
std
cmp
sub
dec
clc
jp
inc
rorb
aas
add
jmp
notb
or
bound
jno
leave
fiadds
std
icebp
lock
cmpsl
addr16
out
adc
adc
inc
cli
xchg
lds
orl
repz
call
mov
dec
xor
js
and
cld
rorl
cld
testb
cmp
jnp
mov
adc
lea
cmp
dec
xchg
xchg
add
pop
add
mov
adc
jmp
outsb
sahf
jge
test
adcl
in
pop
adc
mov
push
cwtl
cli
cwtl
and
test
mov
or
add
inc
in
hlt
fisttps
cld
jecxz
sub
in
push
daa
xchg
in
lock
nop
lcall
popa
das
push
mov
push
xchg
xchg
std
andl
ret
push
rorl
sub
sub
mov
leave
push
xchg
xchg
cmp
leave
dec
loopne
es
sub
call
ljmp
dec
cmp
mov
in
out
add
mov
push
dec
cmp
sub
loope
test
insb
mov
ds
pushf
and
and
dec
mov
mov
mov
movsl
or
push
push
xor
and
in
xchg
xchg
or
nop
repz
and
mov
mov
sbb
pushf
jl
sbb
cmp
and
mov
roll
rcrb
cltd
lock
mov
cld
clc
or
sbb
cmp
pop
popa
ficomps
popf
and
pop
lahf
call
and
add
scas
push
xchg
jg
push
sbbl
jmp
xchg
bound
enter
inc
sbbb
popf
loope
pop
test
pop
scas
test
sbb
cmp
pop
push
inc
adc
pop
lret
fwait
xor
jecxz
das
cmp
clc
arpl
mov
jle
int
jle
int
dec
xor
orl
dec
dec
mov
aas
add
sbb
xorb
xchg
shlb
mov
xor
shl
pop
cmpsl
jp
js
movntq
out
ret
cmp
dec
addr16
dec
subb
sub
add
mov
or
pop
gs
push
pop
rolb
sub
inc
xchg
repz
inc
add
mov
inc
or
jb
jle
pop
mov
jl
int
movsb
call
movsl
aaa
xchg
and
pusha
mov
jo
shlb
mov
int
jle
movsb
sarb
jno
pop
pop
imul
mov
repnz
mov
or
lahf
push
jecxz
fiaddl
sub
xchg
dec
mov
xor
dec
xchg
mov
pop
test
sahf
sbb
pop
sbb
jg
dec
push
cltd
dec
jns
out
out
out
enter
xor
cmp
outsl
mov
hlt
push
imul
and
adc
jg
jns
pusha
and
jbe
rorb
jb
sbb
insl
dec
in
in
aaa
gs
dec
mov
push
cli
enter
rclb
insl
int3
mov
ret
lret
xlat
cli
std
mov
aaa
mov
or
pop
inc
cmp
xor
dec
xchg
lea
in
mov
push
mov
out
clc
jge
imul
push
mov
and
jp
js
outsb
popl
pop
dec
xchg
lret
insl
les
cmp
ret
sub
mov
lret
lcall
push
cmpsl
ficoms
movsl
outsl
movsl
cmp
or
jg
fsubr
in
inc
rolb
mov
aas
push
sbb
push
adc
scas
sbb
ret
inc
leave
stc
lock
aaa
xor
jp
js
xchg
push
test
adc
lcall
add
push
lea
scas
jb
in
jl
sbb
jecxz
fstl
and
test
add
mov
dec
or
push
sbbl
loopne
dec
lock
fmul
addb
in
pop
push
mov
and
cmc
or
lret
addl
sbb
sarb
fdivs
xlat
ret
cli
je
sahf
pop
inc
dec
sti
stos
mov
daa
cmpb
sbb
mov
cmp
pushf
or
ds
pop
sub
push
aas
ja
ljmp
xchg
sahf
lock
aas
jne
test
loopne
sbb
and
pusha
xor
ret
aad
and
shrl
xor
bound
leave
lea
in
dec
dec
in
push
dec
inc
mov
push
bound
jns
test
xchg
lret
dec
aas
mov
jecxz
sbb
ret
and
jmp
rcrl
sti
mov
mov
lds
jp
cmp
cmpsb
adc
js
pop
xchg
loope
in
filds
clc
adc
cmp
push
mov
aad
fsub
ret
fnstenv
imul
sbb
mov
inc
js
sbb
mov
mov
ds
insl
icebp
inc
hlt
sbb
and
lcall
mov
push
test
push
lods
push
aaa
in
lret
and
sahf
hlt
xchg
mov
cmp
mov
dec
push
int
xchg
adc
xchg
sahf
jb
mov
mov
mov
jp
lret
mov
int
dec
ljmp
push
add
mov
dec
or
xor
shlb
sti
lret
sub
nop
pop
mov
incl
test
push
es
xor
sbb
int
jle
int
jle
int
dec
push
cmp
nop
repnz
add
adc
dec
cmp
lock
fs
pop
icebp
jge
mov
aas
xchg
mov
aaa
dec
jmp
jbe
lret
inc
outsb
push
imul
pusha
into
xchg
mov
sbb
lea
fbld
mov
sub
add
inc
movsb
xlat
lea
adc
sub
jmp
jp
iret
jle
mov
cmp
sub
pop
mov
loope
add
mov
icebp
xchg
daa
push
pop
sbbl
cmpsl
mov
mov
dec
cmp
xor
sub
mov
fldt
mov
sbb
xchg
sub
dec
insb
enter
sbb
inc
cli
in
cmp
ss
lods
rclb
das
xchg
ror
dec
cmc
xchg
add
vcvtsd2si
mov
out
jp
js
sarl
test
mov
cmp
shll
std
mov
mov
xchg
xchg
mov
pop
std
or
fcoms
pop
jle
cmpxchg
mov
sbb
sub
mov
or
inc
imul
cmp
add
cmp
push
shll
and
jp
rcrl
out
addb
jbe
xor
loop
ret
hlt
jle
int
inc
pop
cmp
clc
shlb
mov
inc
popa
ret
jbe
pop
dec
inc
sub
jmp
mov
daa
fistpl
inc
dec
loopne
js
test
sub
push
dec
jmp
testb
xchg
cld
cmp
fisubrs
repnz
loopne
sar
clc
dec
cmpsb
cld
adc
jle
repnz
fdivs
xor
xchg
jb
mov
rorb
or
repnz
lret
adc
dec
js
pop
mov
or
out
mov
cmp
nop
loopne
xchg
mov
loop
int3
repnz
fdivl
in
pop
cmpsb
mov
stc
scas
subb
jb
jle
push
ret
xor
push
xchg
inc
adc
pop
jo
shlb
dec
mov
int
jle
sub
lcall
lret
push
fs
dec
sub
loopne
cld
iret
fiadds
adc
mov
jbe
movsl
repnz
pop
fwait
imul
sub
lcall
or
enter
imul
cmp
push
js
mov
push
lret
loope
nop
inc
mov
in
cmp
jg
push
or
cmp
adc
int
xchg
jp
imul
push
movsb
cld
pop
faddp
cld
addr16
jp
inc
ret
dec
add
filds
xorl
add
pop
jne
xorl
add
sahf
jp
sbb
jne
push
sbb
pushl
pop
add
int
add
pop
jl
pminub
add
inc
in
aad
or
and
xor
fiadds
push
sbb
pushl
pop
add
int
add
pop
jl
pminub
inc
lock
cltd
call
push
xor
pushl
mov
mov
test
mov
orl
lea
lea
push
mov
mov
xor
pop
jl
pminub
add
pop
inc
rorb
xchg
mov
mov
jge
jl
jne
mov
andl
fbstp
pushl
incb
pop
xor
push
aad
or
sbb
call
fnsave
jecxz
pop
cmc
add
xor
pushl
mov
mov
jge
inc
bound
sbb
addb
add
push
mov
jne
add
xor
mov
pop
add
mov
push
mov
pop
add
leave
ret
call
push
xlat
nop
push
push
or
dec
adc
or
mov
jns
movsb
add
pop
leave
pushf
jns
push
xlat
nop
mov
incb
pop
xor
mov
and
ret
push
mov
and
je
jbe
or
and
mov
or
sub
add
and
add
xlat
xor
mov
lea
or
jbe
or
or
jp
add
pop
cmc
je
jnp
incl
pop
sahf
push
sbbl
pushl
mov
stos
fnsave
push
clc
fnsave
jmp
add
leave
ret
push
mov
jmp
inc
cld
push
popf
lret
jne
andl
add
imul
add
push
ljmp
mov
xchg
addr16
add
divb
subl
jne
mov
jne
shrb
mov
shl
push
add
jne
ljmp
mov
xchg
addr16
add
je
xlat
testb
jne
sbbl
push
mov
mov
jne
shrb
mov
shl
sbb
ljmp
mov
xchg
addr16
add
je
xlat
testb
jne
add
add
pop
inc
ror
adc
mov
jns
inc
push
cld
ret
or
mov
clc
mov
pop
jne
mov
mov
add
inc
mov
mov
movsl
jne
aad
sbb
or
in
mov
mov
jbe
cmp
add
lea
adc
or
jle
jne
outsl
cmpsl
mov
aad
add
clc
mov
mov
mov
aaa
add
xor
mov
orb
cmp
adc
aad
sbb
sub
add
jbe
or
je
jp
jl
jbe
mov
outsl
scas
movsb
mov
popf
insl
add
jae
outsl
mov
add
inc
shr
jne
add
lds
call
dec
mov
imull
dec
stos
jmp
popf
dec
add
sub
sub
inc
pop
jne
jmp
call
mov
xchg
dec
lahf
xchg
or
dec
add
jne
or
mov
jg
ja
inc
lret
cld
call
ja
rep
add
add
rcrb
fwait
jmp
mov
ljmp
ret
sub
push
sub
popf
xor
push
pop
outsl
arpl
adc
push
jae
adc
popa
adc
jb
pop
jns
pop
and
sub
popa
insb
pop
sbb
jne
imul
jb
cmp
imul
jb
sub
arpl
js
sub
push
add
sbb
xor
insb
insb
pop
jne
add
add
pop
jne
add
add
pop
jne
add
add
pop
mov
add
add
add
in
xor
sub
mov
loopne
mov
mov
cltd
clc
gs
out
xchg
xor
jbe
cmp
adc
fsubs
rcl
sarl
call
mov
das
jg
add
cmp
sub
scas
insb
push
inc
mov
sti
adcl
and
push
ret
sub
aad
iret
loop
ret
and
add
inc
addl
pop
lahf
enter
adc
xchg
jmp
aaa
push
pop
ret
dec
pop
addb
mov
in
aaa
cltd
data16
cmc
jmp
mov
push
out
pop
mov
sbb
jnp
jge
dec
jp
test
faddl
dec
or
out
inc
jp
test
jno
mov
bound
aad
fidivl
push
arpl
movlps
test
xor
xor
push
jmp
fs
ret
xchg
xor
in
mov
cmp
xchg
dec
mov
movsl
mov
xor
jl
clc
jmp
sbb
inc
aad
cmpsb
into
dec
ss
sbb
dec
pop
dec
lahf
inc
addl
jl
f2xm1
and
dec
xlat
push
jns
fs
add
sbb
les
inc
lahf
push
fistl
test
sub
insl
sti
dec
mov
xor
sub
call
jae
imul
xor
cld
int3
jmp
mov
xor
movsb
aad
or
enter
iret
jae
push
popf
insb
jo
jae
movb
cmp
mov
sarl
pcmpeqw
mov
rolb
cmp
out
adc
and
mov
or
jns
bound
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
xor
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
sub
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
insb
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
xor
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jns
jb
imul
add
jo
insb
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
